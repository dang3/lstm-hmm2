jbe
ljmp
call
push
mov
call
push
mov
call
cmp
jne
push
push
push
lea
push
call
jmp
push
push
lea
push
push
call
mov
push
push
lea
push
call
mov
mov
mov
sub
mov
mov
call
test
jne
mov
mov
push
call
test
jne
push
lea
push
push
call
jmp
cmpl
jne
cmpl
jne
testl
jne
mov
test
jne
test
je
jmp
cmpl
je
jmp
nop
pop
cs
adc
lea
inc
lea
arpl
inc
adc
inc
adc
inc
adc
mov
and
add
adc
lea
lea
out
inc
adc
mov
shrb
inc
adc
nop
inc
adc
nop
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
xchg
inc
adc
inc
adc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
sbb
pop
push
pop
sbb
sbb
sbb
or
sbb
or
sbb
sbb
or
add
sbb
sbb
sbb
sbb
add
add
sbb
sbb
sbb
sbb
add
sbb
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
sbb
sbb
sbb
sbb
push
push
pop
sbb
sbb
sbb
push
mov
push
push
push
mov
test
je
push
push
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
cmpl
je
call
sub
cmp
jbe
pop
mov
pop
pop
leave
ret
mov
call
test
je
mov
jmp
push
mov
push
mov
push
pushl
xor
mov
lea
mov
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
mov
je
mov
push
call
lea
call
lea
call
mov
pop
pop
pop
ret
push
mov
push
mov
mov
push
inc
push
push
call
test
je
mov
mov
push
lea
push
lea
lea
cmp
je
mov
mov
mov
test
je
mov
mov
test
mov
je
mov
push
call
addl
add
cmp
jne
mov
incl
mov
pop
add
pop
leave
ret
push
mov
cmpl
jne
push
pushl
push
pushl
call
add
mov
mov
mov
mov
pop
ret
push
lea
sub
mov
xor
mov
push
mov
push
mov
push
call
test
je
push
lea
lea
push
mov
xor
mov
mov
push
mov
movl
movl
mov
call
push
pop
cmp
jne
pushl
mov
call
test
pop
jne
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
mov
lea
push
push
add
push
movl
call
add
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
je
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
mov
mov
incb
add
enter
push
lea
cmp
ja
mov
pop
pop
ret
push
add
push
call
pop
pop
jmp
push
mov
mov
mov
push
inc
push
push
call
test
je
mov
mov
shl
lea
test
je
movl
andl
mov
incl
pop
ret
xor
pop
ret
push
xor
cmp
je
cmp
push
mov
jbe
push
xor
mov
cmp
repz
add
jle
jb
pop
mov
push
call
add
mov
pop
mov
mov
movl
pop
ret
mov
mov
mov
cmp
mov
push
jne
call
add
jmp
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
pop
ret
push
mov
lea
call
mov
test
je
mov
push
call
testb
movl
je
push
call
pop
mov
pop
ret
mov
push
mov
movl
add
rolb
les
or
cmpl
cmpl
cmpl
jge
push
mov
test
je
push
call
test
pop
je
andl
mov
test
pop
jne
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
push
mov
and
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
jne
mov
push
call
cmp
jne
cmp
je
mov
call
mov
test
je
mov
test
mov
jne
mov
mov
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
lea
push
pushl
mov
pushl
add
push
push
lea
push
lea
call
add
lea
call
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
call
test
jne
lea
call
test
jne
mov
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
mov
lea
push
pushl
lea
push
push
call
add
test
jne
add
add
test
pop
adc
jnp
add
test
aas
add
sti
mov
mov
je
mov
mov
test
jne
or
mov
mov
cmp
jne
mov
pop
pop
pop
mov
pop
ret
mov
cmp
jne
jmp
cmpl
je
cmpl
je
cmpl
je
push
call
mov
jmp
andl
mov
mov
mov
jmp
push
pushl
push
pop
call
jmp
cmp
je
pushl
mov
call
jmp
mov
mov
test
push
push
je
cmpl
je
pushl
lea
call
xor
pop
pop
ret
push
mov
mov
sub
cmpl
push
mov
jge
push
push
mov
test
mov
je
mov
call
test
jne
and
mov
test
jne
mov
lea
call
mov
lea
add
add
xor
mov
mov
cmp
mov
jne
mov
test
je
mov
pushl
lea
call
mov
cmp
jne
mov
push
mov
mov
mov
call
cmp
pop
je
decl
jne
mov
cmpl
jge
pushl
call
pop
mov
mov
test
pop
pop
je
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
pushl
call
pop
lea
call
lea
call
lea
call
pop
leave
ret
push
mov
mov
push
mov
call
test
jne
mov
mov
call
neg
sbb
inc
pop
ret
mov
mov
call
mov
mov
mov
call
sub
neg
sbb
inc
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
mov
cmp
pop
jne
push
mov
cmp
pop
jne
test
je
mov
cmp
jne
xor
inc
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
push
push
xor
push
push
call
cmp
je
mov
lea
push
push
mov
movl
call
test
je
lea
mov
mov
mov
movl
movl
mov
lea
xor
cmp
je
xor
cmp
jne
add
add
jmp
lea
lea
mov
push
lea
mov
movl
call
mov
mov
add
xor
xor
lea
mov
cmp
je
cmp
je
add
add
cmp
jb
jmp
mov
jmp
mov
lea
push
push
call
add
test
jne
mov
lea
push
push
call
test
je
xor
mov
test
jne
test
jne
cmp
je
mov
mov
xor
cmp
je
add
add
cmp
jb
push
call
mov
pop
pop
pop
xor
call
mov
pop
ret
cmp
jae
shl
mov
mov
mov
add
mov
mov
push
push
lea
push
call
mov
add
mov
jmp
mov
jmp
mov
mov
test
mov
mov
je
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
mov
test
push
mov
je
and
jne
pop
pop
ret
mov
jmp
push
mov
movl
movl
cmpl
jne
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
lea
push
call
pushl
call
pop
pop
jmp
push
mov
push
mov
mov
cmp
je
cmp
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
add
jmp
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
inc
add
mov
mov
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmp
mov
mov
jne
pushl
pushl
push
push
call
mov
test
jne
push
call
mov
test
jne
mov
mov
lea
push
push
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
jne
mov
test
je
pushl
mov
mov
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
mov
xor
lea
xor
cmp
push
mov
mov
movl
movl
mov
mov
jg
mov
sub
cmp
jg
cmp
jne
cmp
jne
cmp
jne
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
push
mov
push
mov
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
imul
clc
mov
jne
mov
movl
xor
pop
pop
ret
push
mov
mov
call
test
jne
mov
mov
call
test
mov
jne
push
mov
test
je
cmpb
jne
mov
mov
call
test
jne
xor
pop
test
jne
mov
mov
mov
pop
jmp
mov
push
call
xor
jmp
add
jmp
mov
jmp
push
mov
sub
andl
push
push
push
lea
call
lea
push
mov
lea
call
mov
test
pop
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
cmpb
jne
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
mov
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
lea
call
lea
call
lea
call
lea
call
call
testb
je
push
call
pop
mov
pop
ret
push
mov
cmpl
jne
testb
jne
pushl
mov
pushl
call
pop
ret
push
push
lea
mov
call
testb
je
mov
mov
mov
test
je
cmpl
je
mov
push
call
call
andl
lea
xor
call
pop
pop
jmp
mov
test
jne
mov
test
je
jmp
xor
jmp
push
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
push
mov
movl
jne
push
push
call
add
test
je
mov
call
test
je
mov
lea
push
push
push
mov
call
mov
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
mov
mov
push
call
mov
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
movl
movl
movl
movl
movl
push
push
xor
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
and
or
mov
mov
mov
or
lea
mov
mov
mov
mov
hlt
inc
add
add
push
add
add
push
add
xchg
add
add
inc
add
mov
add
cmovae
add
addb
sbb
add
add
push
add
mov
add
add
add
add
add
add
or
push
movl
mov
mov
mov
mov
call
mov
mov
movb
mov
mov
movb
mov
mov
mov
mov
mov
mov
xchg
push
inc
add
mov
mov
mov
mov
mov
mov
push
movl
mov
mov
mov
mov
call
push
mov
mov
movl
call
add
pop
pop
mov
mov
mov
mov
pop
add
ret
int3
int3
push
push
push
push
mov
mov
or
test
je
mov
mov
not
add
and
mov
test
jne
mov
movsbw
movzwl
mov
lea
cmp
jae
movzwl
mov
and
test
je
add
cmp
jb
pop
pop
pop
or
pop
ret
movsbw
movzwl
test
je
nop
cmp
je
movsbw
add
movzwl
test
jne
mov
jmp
sub
pop
pop
pop
sar
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
cmpl
push
push
mov
mov
jne
push
mov
cmp
je
cmp
je
movb
cmpb
jne
mov
cmp
ja
test
ja
cmp
jne
cmpl
jne
push
push
call
pop
mov
pop
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
push
mov
jg
xor
mov
add
cmpb
mov
jne
cmpl
mov
jne
test
je
testb
jne
movl
mov
push
push
lea
push
push
push
xor
call
mov
test
je
testb
jne
test
je
testb
jne
pop
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
push
lea
lea
xor
push
mov
mov
movl
movl
mov
mov
call
mov
test
jle
testb
push
mov
mov
jne
cmp
jne
mov
test
jg
cmp
jne
cmp
jg
cmp
jne
test
jle
test
jl
cmp
jge
mov
mov
mov
mov
sub
push
lea
push
push
call
add
cmp
jne
mov
sub
push
lea
push
mov
call
movb
mov
test
jne
test
jne
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
sub
inc
adc
adc
lds
pop
or
mov
mov
lea
push
push
xor
push
mov
mov
call
cmp
movl
je
lea
lea
push
mov
mov
sbb
inc
add
movl
movl
movb
call
mov
mov
lea
lea
call
test
jne
mov
push
lea
call
test
je
test
je
incl
mov
test
mov
jne
mov
test
jne
testb
je
mov
test
je
push
mov
call
mov
test
js
mov
andl
lea
push
push
push
call
cmpl
mov
je
mov
add
incl
lea
push
mov
call
xor
inc
mov
decl
je
mov
mov
push
call
orb
mov
push
call
mov
test
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
je
push
push
mov
test
je
mov
mov
add
add
cmp
jne
pop
pop
mov
addl
mov
add
ret
push
mov
push
push
mov
push
lea
xor
cmp
jne
cmp
je
mov
mov
call
cmp
je
push
call
mov
push
lea
mov
call
mov
lea
push
push
call
pushl
lea
mov
add
call
mov
cmp
je
mov
add
movb
mov
mov
call
cmp
je
lea
push
lea
call
lea
call
pop
pop
xor
pop
pop
ret
mov
call
jmp
push
mov
and
sub
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
je
mov
mov
call
test
je
mov
and
mov
je
push
push
call
test
pop
pop
jne
mov
mov
xor
test
jne
mov
pop
pop
mov
pop
ret
push
mov
xor
inc
movl
movl
mov
andl
test
push
mov
mov
mov
je
mov
shl
push
push
call
test
pop
pop
mov
je
test
jne
test
jbe
mov
test
je
mov
push
push
push
call
test
js
mov
incl
test
je
xor
mov
mov
mov
pop
pop
ret
push
mov
push
push
call
test
pop
je
push
lea
push
pushl
mov
mov
call
pop
test
je
testl
jne
pushl
mov
push
push
call
leave
ret
xor
jmp
push
mov
push
push
cmpl
push
push
jne
pop
pop
leave
ret
mov
mov
mov
cmp
je
push
push
mov
mov
mov
push
push
mov
call
pushl
lea
push
call
mov
test
pop
pop
mov
jne
mov
mov
test
je
and
mov
lea
call
cmpl
jne
jmp
andl
jmp
mov
mov
test
je
push
lea
mov
test
je
mov
push
push
call
xor
mov
call
pop
xor
ret
mov
pushl
mov
lea
push
add
push
call
add
ret
push
mov
sub
mov
xor
mov
push
push
push
xor
mov
push
mov
call
test
je
mov
testw
jne
cmp
jne
cmp
jne
testw
jne
mov
push
push
call
cmp
pop
pop
push
pushl
mov
push
jne
or
call
mov
pop
pop
xor
xor
pop
call
leave
ret
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
mov
sub
push
xor
cmp
push
je
push
mov
call
cmp
movl
movl
movl
movl
movl
lea
mov
mov
mov
mov
mov
mov
mov
je
mov
mov
mov
cmp
je
cmp
je
mov
xor
mov
call
mov
cmp
je
mov
lea
push
call
mov
cmp
mov
je
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
mov
mov
jmp
mov
push
push
xor
inc
movl
mov
xor
cmp
mov
mov
je
mov
push
call
push
mov
mov
lea
mov
call
add
and
repz
mov
fsts
lea
fstps
mov
mov
mov
mov
mov
mov
mov
mov
call
fld1
mov
mov
mov
lea
mov
mov
mov
mov
lea
orl
orl
fstps
fldz
push
fstps
lea
mov
push
movb
movb
push
lea
mov
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
fldz
push
fstps
push
push
lea
call
mov
add
mov
orl
mov
orl
and
or
cmp
movl
movl
movl
mov
mov
movb
pop
jne
mov
mov
mov
cmp
jne
andl
mov
orl
pop
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
push
push
mov
mov
mov
mov
mov
xor
mov
mov
mov
mov
push
push
mov
mov
mov
call
add
mov
mov
push
push
push
mov
call
test
je
cmp
je
mov
mov
mov
movsbw
sub
mov
add
add
cmp
jne
mov
flds
pop
fstps
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
sub
push
push
mov
lea
mov
mov
call
andl
push
lea
call
lea
push
push
call
pushl
andl
mov
lea
call
mov
test
je
mov
test
je
mov
push
push
call
lea
push
call
mov
mov
call
xor
mov
call
lea
call
lea
call
lea
call
pop
pop
leave
ret
push
mov
cmpl
je
mov
mov
test
je
andl
push
push
mov
lea
call
mov
test
je
pushl
mov
push
push
call
mov
lea
call
mov
pop
pop
ret
mov
test
je
mov
mov
test
je
mov
call
test
jl
movsbl
mov
test
mov
je
mov
push
call
xor
ret
xor
jmp
mov
jmp
push
mov
sub
mov
push
xor
push
mov
lea
mov
call
cmp
jne
mov
mov
push
push
call
lea
call
pop
leave
ret
mov
cmp
je
mov
cmp
je
lea
lea
mov
push
push
call
mov
lea
mov
mov
call
mov
mov
xor
cmp
push
sete
push
push
call
les
inc
add
je
mov
mov
mov
mov
cmp
je
lea
call
jmp
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
lea
mov
mov
push
mov
mov
call
mov
mov
call
lea
mov
mov
push
mov
call
mov
mov
call
xor
cmp
mov
jge
mov
cmp
jl
mov
dec
cmpl
mov
jge
mov
cmp
jl
xor
cmp
lea
mov
jg
test
jle
xor
mov
mov
mov
mov
test
mov
jge
or
cmp
jne
push
call
test
pop
je
mov
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
push
mov
call
test
je
mov
mov
mov
mov
andl
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
inc
cmp
mov
jl
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
mov
mov
call
mov
pop
pop
mov
pop
xor
call
mov
pop
ret
andl
mov
mov
mov
decl
jne
mov
call
push
call
pop
incl
mov
cmp
jle
jmp
push
mov
mov
mov
sub
push
push
call
xor
cmp
jne
add
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
test
js
mov
push
pop
call
cmp
je
mov
cmp
mov
mov
movl
mov
mov
mov
mov
mov
je
mov
mov
mov
mov
pushl
mov
pushl
lea
push
call
mov
mov
mov
mov
movl
mov
mov
mov
call
pop
pop
leave
ret
xor
jmp
mov
test
jne
cmp
je
test
jne
cmp
je
mov
mov
push
push
call
decl
je
andl
ret
push
call
andl
pop
ret
push
mov
mov
mov
cmp
mov
push
je
cmp
je
cmp
je
andl
lea
push
push
push
call
mov
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
add
xor
jne
test
je
lea
test
mov
je
mov
push
call
xor
jmp
xor
jmp
mov
test
je
mov
rol
xor
ret
xor
ret
push
mov
push
push
xor
push
mov
call
cmp
pop
je
movl
xor
inc
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
pushl
pushl
push
call
test
push
js
mov
mov
call
xor
pop
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpb
push
je
mov
andl
andl
mov
lea
push
lea
push
lea
push
push
call
add
test
js
pushl
mov
pushl
mov
pushl
pushl
call
mov
lea
call
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
mov
test
mov
push
mov
push
mov
jne
test
jne
mov
cmp
ja
mov
sub
cmp
lea
pop
mov
mov
pop
jb
lea
mov
mov
movw
ret
lea
mov
mov
movw
ret
mov
jmp
push
mov
sub
push
push
mov
mov
xor
push
lea
lea
movl
mov
mov
mov
call
cmp
je
pushl
mov
lea
mov
mov
call
push
lea
call
lea
push
pushl
mov
call
test
js
cmp
mov
mov
jne
push
push
call
mov
mov
push
push
push
pushl
push
call
mov
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
jmp
push
mov
sub
mov
andl
andl
push
push
mov
mov
lea
push
mov
call
mov
call
test
js
mov
mov
test
push
jbe
andl
mov
lea
mov
mov
mov
movl
jmp
addl
mov
mov
andl
mov
mov
mov
lea
add
call
push
pushl
mov
call
test
jne
mov
mov
call
test
jne
mov
test
mov
mov
je
incl
mov
andl
test
mov
je
mov
call
mov
mov
call
cmpl
ja
incl
mov
mov
xor
test
jne
push
push
lea
call
mov
call
test
jne
mov
mov
mov
xor
test
jne
test
je
mov
call
mov
call
mov
test
jne
incl
mov
cmp
jb
mov
mov
mov
incl
test
je
call
xor
pop
pop
pop
leave
ret
mov
jmp
mov
mov
push
call
ret
mov
call
mov
call
ret
movzbl
sub
jne
add
ret
dec
jne
add
ret
mov
and
cmp
movl
jne
push
push
mov
xor
cmp
jne
mov
cmp
jne
push
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
pop
jne
lea
call
lea
call
lea
call
pop
lea
pop
jmp
push
xor
mov
lock
add
add
mov
add
in
mov
push
push
mov
xor
push
lea
call
cmp
je
mov
cmpl
push
mov
je
cmpl
je
cmpl
jne
mov
push
push
push
call
add
test
jne
mov
jmp
mov
push
push
push
call
add
test
jne
add
push
add
push
push
call
test
je
mov
pop
pop
pop
pop
ret
mov
push
push
push
call
add
test
jne
add
push
add
jmp
xor
jmp
int3
int3
push
push
mov
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
mov
mov
mov
and
mov
or
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
pop
ret
xor
pop
ret
push
mov
push
mov
test
jne
and
testb
je
mov
mov
dec
neg
sbb
and
jne
mov
mov
mov
lea
push
push
push
call
mov
leave
ret
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
lea
cmp
je
push
mov
mov
lea
test
je
mov
mov
mov
test
mov
je
mov
push
mov
call
add
add
cmp
jne
mov
pop
mov
mov
add
mov
pop
pop
lea
pop
ret
push
mov
mov
mov
sub
push
push
push
push
call
mov
lea
mov
call
mov
dec
dec
neg
sbb
lea
inc
call
cmp
jne
movl
movzbl
mov
xor
dec
mov
je
dec
je
sub
mov
add
add
test
mov
je
lea
mov
call
cmp
jne
movl
lea
push
pushl
pushl
pushl
pushl
pushl
call
add
cmpl
mov
je
lea
mov
call
cmp
jne
movl
add
mov
call
cmp
je
cmp
je
cmpl
jne
mov
call
test
jne
mov
call
test
je
pushl
mov
call
pop
test
jl
sub
js
mov
mov
mov
call
cmp
jne
mov
mov
mov
push
add
push
push
push
pushl
movl
pushl
call
add
mov
add
mov
call
cmp
jne
mov
movl
call
test
je
pushl
call
pop
mov
test
jl
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
jg
mov
cmp
jg
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
cmp
jg
mov
test
jle
mov
cltd
mov
mov
pushl
mov
pushl
cltd
mov
mov
mov
cltd
push
push
call
add
pushl
push
push
call
cmp
jl
pushl
mov
mov
pushl
cltd
push
push
call
pushl
pushl
push
push
call
mov
cmp
jg
cmp
jg
cmp
jl
cmp
jg
cmp
jl
mov
mov
pop
mov
pop
pop
leave
ret
cmp
je
cmpl
jne
lea
call
test
jne
andl
jmp
push
push
pushl
pushl
pushl
pushl
call
add
mov
jmp
lea
call
test
je
pushl
lea
call
pop
test
jl
sub
js
mov
jmp
cmp
jne
mov
cmp
jl
cmp
jg
mov
cmp
jl
cmp
jle
jmp
cmp
je
jmp
mov
mov
jmp
mov
mov
jmp
xor
jmp
push
mov
and
sub
push
push
push
mov
or
cmp
jne
pop
pop
pop
mov
pop
ret
push
mov
push
push
test
je
mov
push
call
test
je
mov
push
mov
push
mov
call
test
js
mov
mov
test
push
push
jbe
andl
mov
mov
movl
mov
mov
mov
mov
test
je
mov
mov
cmp
je
lea
mov
test
je
orl
mov
mov
push
pushl
pushl
pushl
mov
call
test
jne
incl
mov
addl
cmp
jb
xor
pop
pop
pop
leave
ret
int3
push
push
push
mov
mov
test
je
and
test
je
mov
xor
mov
lea
mov
cmp
je
mov
test
je
and
mov
mov
jne
mov
test
jne
mov
pop
pop
pop
ret
cmpl
jne
test
je
cmp
je
mov
test
je
push
lea
lea
push
mov
mov
call
cmp
je
push
push
push
push
mov
call
pop
mov
lea
mov
push
add
mov
call
pop
pop
pop
ret
lea
push
add
push
mov
call
movl
pop
pop
pop
ret
push
mov
mov
mov
lea
push
push
call
mov
pop
ret
mov
mov
test
jne
call
mov
mov
xor
ret
push
mov
mov
cmpl
je
push
push
pushl
pushl
call
pop
ret
push
pushl
mov
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
xor
mov
lea
push
mov
push
lea
mov
mov
mov
lea
push
lea
push
push
push
xor
movl
mov
movl
call
add
test
je
mov
mov
push
push
push
mov
mov
push
push
lea
push
mov
call
test
mov
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
call
test
js
lea
call
mov
mov
mov
mov
test
jne
mov
pop
pop
pop
mov
pop
ret
pushl
push
call
ret
mov
mov
test
je
mov
mov
mov
push
call
xor
ret
mov
cmp
jne
cmp
ja
movzbl
jmp
flds
flds
fucompp
fnstsw
test
jp
xor
inc
ret
xor
ret
mov
sub
neg
sbb
inc
ret
nop
outsb
popa
add
adc
add
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
add
or
push
and
add
call
xor
ret
push
mov
sub
push
push
xor
push
lea
lea
movl
movl
mov
mov
call
push
call
cmp
pop
je
mov
mov
mov
mov
movb
mov
cmp
mov
jne
mov
lea
call
mov
lea
call
mov
lea
call
mov
lea
mov
call
mov
lea
push
call
mov
lea
push
push
call
mov
mov
lea
push
push
call
mov
xor
cmp
je
incl
mov
cmp
mov
jne
mov
mov
mov
mov
call
cmp
mov
mov
je
pop
xor
pop
leave
ret
push
push
lea
push
mov
call
cmp
je
push
call
cmp
pop
je
movl
mov
lea
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
mov
push
pushl
push
push
call
mov
call
lea
movl
call
lea
call
jmp
xor
jmp
push
mov
push
mov
call
test
je
mov
push
push
xor
push
mov
lea
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
push
call
cmp
pop
je
mov
mov
cmp
mov
movl
mov
je
mov
push
call
pushl
lea
push
movl
mov
movl
call
push
call
pop
lea
call
lea
call
pop
pop
xor
leave
ret
xor
jmp
push
mov
push
push
xor
push
lea
mov
mov
call
mov
lea
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
mov
mov
lea
call
mov
pop
leave
ret
mov
jmp
push
mov
pushl
mov
xor
cmp
setne
add
mov
lea
push
pushl
pushl
push
call
pop
ret
push
mov
test
je
mov
mov
add
test
je
mov
and
cmp
jne
test
je
mov
push
push
push
call
pop
ret
mov
call
jmp
andl
xor
jmp
push
mov
and
sub
push
mov
test
push
je
mov
xor
cmp
je
push
lea
movl
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
push
call
test
js
mov
lea
call
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
push
call
test
js
mov
call
test
js
pushl
call
xor
lea
call
lea
call
mov
pop
pop
mov
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
mov
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
lea
push
call
mov
lea
push
push
call
test
js
mov
mov
add
push
push
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
mov
mov
sub
push
push
mov
test
push
je
mov
test
je
mov
mov
push
push
push
mov
push
mov
call
mov
mov
mov
add
push
push
call
mov
mov
add
test
mov
je
add
mov
test
mov
je
call
mov
mov
mov
test
mov
mov
mov
lea
mov
mov
je
mov
mov
mov
mov
mov
mov
andb
mov
mov
mov
mov
call
mov
mov
call
mov
mov
call
mov
mov
mov
mov
test
je
lea
movl
call
mov
mov
mov
add
push
push
push
call
mov
add
mov
mov
cmp
jge
cmpl
jne
cmp
jge
mov
lea
call
mov
mov
mov
jmp
push
call
mov
add
test
jne
mov
call
mov
cmpl
je
mov
call
mov
push
call
mov
call
mov
call
mov
add
call
mov
mov
mov
lea
lea
cmp
jne
push
push
push
lea
push
call
push
push
add
push
movl
call
add
xor
pop
pop
pop
mov
pop
ret
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
mov
neg
sbb
xor
and
cmp
push
mov
mov
mov
mov
jne
mov
push
lea
mov
call
mov
lea
push
mov
push
push
pushl
push
pushl
pushl
push
call
test
js
mov
pushl
mov
push
call
mov
mov
mov
mov
push
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
jmp
push
mov
push
mov
call
mov
xor
cmp
jne
cmp
push
inc
add
cmp
je
mov
and
inc
add
call
call
mov
pop
pop
ret
pushl
lea
call
jmp
push
mov
push
push
mov
test
je
mov
test
je
andl
lea
push
push
push
mov
call
mov
add
leave
ret
xor
jmp
push
mov
and
sub
push
mov
push
mov
testb
push
jne
call
mov
andl
mov
mov
mov
mov
mov
call
test
je
add
lea
movsl
movsl
movsl
lea
mov
mov
push
mov
movsl
call
mov
add
mov
add
mov
mov
add
add
mov
add
sub
cmpl
mov
mov
mov
jne
cmpl
jl
mov
pushl
lea
call
mov
mov
andl
andl
mov
testb
mov
mov
jne
mov
testw
jne
mov
andl
mov
push
push
push
pushl
mov
pushl
lea
lea
call
mov
mov
and
jne
lea
mov
andw
test
jne
mov
mov
call
mov
and
or
jne
mov
add
lea
movsl
movsl
movsl
movsl
mov
xor
lea
mov
call
mov
and
xor
or
movl
je
mov
push
push
push
pushl
lea
pushl
mov
push
lea
push
pushl
push
call
mov
test
jne
mov
and
xor
or
je
lea
push
mov
call
push
mov
call
push
call
pop
mov
and
xor
or
jne
test
jne
pushl
mov
pushl
push
inc
add
test
je
xor
test
jne
andl
mov
push
pushl
mov
pushl
lea
push
lea
push
pushl
call
pushl
lea
push
lea
push
push
call
inc
add
add
add
add
cmp
je
mov
add
add
mov
cmp
je
mov
add
add
mov
mov
mov
mov
testb
jne
mov
mov
and
xor
or
je
mov
mov
mov
mov
mov
cmp
jne
mov
andl
xor
pop
pop
pop
mov
pop
ret
mov
jmp
mov
mov
call
mov
mov
jmp
push
mov
and
sub
mov
xor
mov
add
add
or
push
mov
mov
push
jne
mov
xor
mov
xor
inc
lea
mov
mov
mov
mov
mov
mov
mov
mov
call
lea
push
lea
movl
movl
mov
cwtl
add
add
inc
and
push
inc
add
es
add
mov
mov
movl
movl
mov
call
pop
pop
lea
push
lea
call
testb
jne
testb
jne
mov
mov
lea
push
push
push
mov
mov
mov
call
mov
test
jne
cmp
jne
push
call
cmp
pop
je
mov
mov
add
cmp
mov
movl
mov
mov
je
mov
push
call
xor
mov
lea
mov
push
lea
call
cmp
je
mov
push
call
mov
call
cmp
je
mov
push
call
testb
mov
je
mov
add
push
call
test
pop
je
testb
je
mov
add
push
call
test
pop
je
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
call
cmpl
je
call
test
je
mov
push
mov
call
pop
ret
push
mov
sub
mov
push
push
mov
mov
push
lea
lea
push
mov
movl
add
push
add
ret
je
mov
push
mov
call
mov
cmp
mov
je
pushl
mov
add
mov
call
push
lea
mov
call
mov
mov
lea
push
pushl
push
call
mov
test
jne
push
lea
mov
call
lea
push
push
pushl
add
pushl
mov
push
call
test
jne
cmp
je
pushl
mov
pushl
pushl
pushl
push
call
lea
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
mov
push
pushl
pushl
pushl
push
call
jmp
push
mov
mov
sub
push
xor
cmp
push
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
mov
cmp
je
push
mov
add
mov
call
mov
call
cmp
je
testb
mov
je
cmp
je
cmp
je
lea
call
lea
call
lea
call
pop
pop
leave
ret
cmp
je
jmp
push
mov
sub
push
push
push
mov
call
xor
cmp
je
cmp
je
push
pushl
push
push
lea
push
call
mov
add
push
mov
call
test
ja
test
je
mov
push
call
xor
cmp
jne
movb
mov
cmp
jne
cmp
je
mov
push
mov
call
cmp
jne
mov
cmp
je
cmpb
je
mov
push
mov
lea
mov
call
pushl
lea
push
pushl
mov
movl
movl
movl
call
testb
jne
testb
jne
mov
lea
push
push
mov
movb
call
mov
cmp
jne
lea
call
pop
pop
pop
leave
ret
mov
movl
cmpb
jne
lea
call
cmp
jae
mov
mov
mov
andl
push
mov
lea
call
mov
test
je
mov
push
call
lea
call
addl
inc
cmp
jb
jmp
mov
push
call
jmp
xor
jmp
mov
test
je
mov
and
cmp
jne
ret
mov
jmp
push
mov
sub
push
pushl
mov
pushl
pushl
push
call
test
js
push
push
mov
call
xor
cmp
pop
je
movl
mov
mov
push
lea
mov
mov
call
cmp
je
pushl
mov
lea
mov
call
cmp
je
lea
push
xor
mov
mov
mov
call
mov
pushl
mov
push
call
lea
push
call
add
call
cmp
mov
mov
mov
je
mov
push
lea
mov
call
mov
lea
push
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
mov
push
push
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
movzwl
mov
push
push
call
lea
call
lea
call
lea
call
mov
lea
call
mov
pop
pop
pop
leave
ret
push
push
call
jmp
push
mov
sub
push
push
mov
push
lea
mov
call
test
je
lea
mov
cmp
je
testb
jne
cmpl
je
mov
mov
mov
add
mov
mov
add
mov
mov
xor
inc
pop
pop
pop
leave
ret
mov
mov
call
cmp
je
cmp
je
cmp
je
xor
jmp
mov
push
mov
call
mov
lea
push
mov
call
push
call
test
pop
pop
je
lea
push
mov
call
mov
mov
add
mov
mov
add
mov
mov
add
mov
lea
mov
movsl
movsl
movsl
jmp
mov
call
test
je
mov
jmp
xor
inc
ret
push
mov
mov
test
push
push
je
cmpl
je
mov
push
pushl
lea
mov
mov
mov
call
mov
lea
push
mov
call
mov
push
push
call
test
pop
js
mov
test
je
mov
mov
push
push
call
test
je
mov
mov
xor
pop
pop
pop
ret
mov
test
jne
push
push
push
mov
or
lea
mov
mov
push
mov
call
movzbl
movb
mov
test
je
mov
shr
test
jbe
xor
mov
test
je
mov
and
lea
mov
mov
call
inc
cmp
jb
lea
xor
mov
call
push
lea
mov
lea
push
push
call
push
push
push
call
lea
push
push
movb
call
add
pop
pop
pop
pop
ret
xor
jmp
push
mov
mov
test
je
mov
jmp
mov
test
jne
mov
test
je
mov
pop
ret
mov
test
je
mov
test
jne
cmp
je
mov
mov
call
test
jne
jmp
xor
jmp
xor
jmp
push
mov
and
sub
push
xor
inc
push
mov
xor
push
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
call
test
js
push
lea
call
pop
call
cmp
je
lea
push
add
mov
push
push
call
test
js
cmp
setne
mov
lea
call
mov
lea
push
hlt
inc
add
add
mov
mov
push
push
call
test
js
lea
lea
lods
cld
inc
add
test
jne
push
lea
call
test
jne
call
cmp
mov
je
mov
push
mov
call
mov
cmp
mov
jne
push
call
cmp
pop
je
lea
push
lea
push
pushl
lea
push
lea
push
mov
call
mov
cmp
mov
je
mov
push
call
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
push
push
push
call
test
lea
jne
call
cmp
je
mov
push
call
lea
call
mov
cmp
jne
mov
test
jne
testb
jne
test
jne
testb
jne
test
mov
je
mov
pop
sbb
add
xlat
test
pop
je
test
je
mov
add
push
call
test
pop
je
test
jne
testb
jne
test
je
mov
add
push
call
test
pop
je
xor
pop
pop
pop
mov
pop
ret
push
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
je
cmp
je
andl
lea
push
push
pushl
call
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
push
lea
sub
mov
xor
mov
mov
push
push
mov
xor
lea
xor
mov
mov
mov
call
lea
xor
call
push
lea
call
push
mov
mov
pop
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
mov
lea
push
pushl
lea
mov
mov
movl
mov
mov
mov
mov
push
call
cmp
mov
jne
push
push
push
lea
call
test
je
mov
movl
mov
movsbw
decl
mov
inc
inc
inc
cmp
jne
push
push
pop
lea
call
test
je
push
movl
call
cmp
pop
je
call
lea
mov
mov
call
cmp
je
pushl
mov
pushl
lea
push
call
test
mov
js
pushl
mov
lea
mov
call
mov
cmp
je
mov
push
pushl
push
call
mov
push
call
test
je
lea
call
testb
jne
testb
jne
testb
je
mov
add
push
call
test
pop
je
xor
mov
pop
xor
pop
call
add
leave
ret
mov
test
je
cmpl
jne
cmpl
movl
jne
xor
ret
mov
push
call
test
js
andl
ret
push
mov
sub
push
mov
mov
push
push
push
xor
push
lea
call
mov
xor
cmp
jbe
mov
mov
test
lea
mov
lea
mov
mov
jne
mov
push
push
call
test
jne
mov
pushl
mov
push
call
pushl
mov
push
pushl
call
cmpl
mov
jne
mov
test
jne
push
call
test
pop
je
pushl
mov
andl
lea
movl
call
pushl
lea
call
mov
test
mov
je
mov
push
call
push
pushl
call
test
jne
cmpb
mov
jne
testb
je
cmpb
sbb
add
add
cld
lea
lea
call
incl
mov
mov
cmp
jb
lea
call
test
js
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
push
mov
mov
mov
test
mov
je
mov
cmp
je
mov
mov
push
call
test
jne
test
je
mov
call
mov
test
je
mov
test
mov
je
cmpl
jne
mov
mov
mov
mov
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
lea
cmpl
je
lea
push
pushl
mov
pushl
lea
push
call
mov
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
fld1
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
mov
add
call
movzbl
mov
push
push
push
lea
push
lea
push
lea
call
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
add
mov
cmp
je
cmp
je
cmp
je
cmp
je
xor
cmp
je
mov
cmp
je
mov
mov
mov
cmp
jne
mov
pop
pop
pop
leave
ret
mov
mov
test
jne
or
mov
mov
cmp
jne
jmp
test
je
mov
call
jmp
cmpl
je
jmp
mov
mov
lea
call
jmp
mov
mov
push
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
jne
jmp
xor
jmp
xor
mov
mov
mov
mov
mov
mov
push
mov
push
mov
push
mov
call
add
or
mov
inc
sub
shlb
or
dec
xor
xor
mov
cmp
jb
sub
test
je
mov
and
cmp
jb
xor
ret
lea
mov
neg
sbb
and
jmp
xor
jmp
push
mov
sub
push
push
mov
cmpb
push
ja
xor
push
mov
lea
mov
call
cmp
je
lea
mov
call
movzwl
andb
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
push
call
test
js
testb
jne
testb
je
cmp
je
mov
testb
je
mov
mov
mov
cmp
je
lea
mov
call
mov
mov
xor
xor
mov
or
je
push
push
push
lea
call
push
push
mov
mov
mov
push
pushl
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
or
subl
dec
imul
mov
push
lea
push
push
push
push
call
fldl
faddl
mov
fstpl
testb
mov
je
movzbl
cmp
je
mov
mov
test
jns
lea
lea
cmp
jae
mov
test
jns
push
sub
push
push
call
faddl
fstpl
push
call
mov
stc
push
rolb
testb
scas
bound
je
imul
je
add
fstpl
testb
mov
add
push
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
arpl
fcompl
int3
mov
pushf
mov
xorb
add
lret
int
add
popa
mov
add
fucom
iret
sub
pop
popl
push
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
test
add
add
xchg
ljmp
add
add
stos
add
testl
mov
add
add
add
add
push
icebp
add
add
pushf
add
xchg
add
add
lcall
push
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
out
repnz
add
in
add
add
add
add
mov
add
movsb
mov
xchg
out
data16
mov
add
jl
push
jbe
jne
scas
movsb
incb
add
mov
push
add
aam
mov
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
lea
push
call
xchg
mov
mov
mov
or
rcll
push
lds
incb
add
mov
in
add
mov
fcompl
cmp
add
push
push
push
push
lea
push
push
call
mov
fs
add
xchg
add
add
popl
add
loop
sarb
push
cli
add
je
add
push
mov
in
call
call
push
lea
push
push
lea
push
push
push
call
lods
jmp
fxch
mov
stos
xchg
iret
add
add
add
add
mov
push
add
stc
add
imul
add
add
mov
xchg
add
add
mov
fdivp
push
stos
jle
in
call
push
push
push
lea
push
push
call
add
xorb
lcall
stc
add
push
mov
mov
out
mov
test
add
add
add
out
fadds
sub
pop
call
push
push
push
push
lea
push
call
add
xchg
fldl
addb
popf
push
pop
mov
add
clc
rcr
add
mov
add
push
mov
add
in
in
pop
jmp
push
push
push
push
lea
push
push
push
call
add
add
gs
add
in
scas
pop
add
jo
ljmp
add
shlb
add
add
pop
popa
std
jecxz
fcmovnbe
add
addr16
test
cmpsl
hlt
add
mov
in
in
lcall
mov
push
push
push
push
push
push
lea
push
call
iret
add
gs
add
ja
sahf
jp
sbb
add
shl
add
scas
add
jge
test
mov
push
add
fimull
add
add
filds
mov
mov
add
mov
out
add
div
cltd
add
sub
pop
mov
add
push
lea
push
push
call
add
lea
movl
jge
mov
and
roll
jns
add
jns
add
push
fisubs
add
add
mov
jp
call
add
in
mov
scas
fiadds
add
jmp
in
stc
int3
mov
add
add
add
add
scas
sub
pop
add
push
push
lea
push
lea
push
call
add
add
pop
pop
add
add
jbe
add
test
add
mov
cmc
add
test
bound
pop
out
in
add
jae
faddl
shll
incb
add
stos
add
fiaddl
loope
mov
test
fiaddl
jle
lods
les
sub
pop
add
mov
push
push
push
push
push
call
out
cmpsl
add
test
mov
push
repnz
int3
add
push
jb
nop
lods
fnstsw
xchg
add
xchg
add
add
ret
mov
add
test
out
mov
add
cmpsl
mov
mov
add
in
lock
xor
push
push
push
push
push
call
add
xchg
insb
add
add
add
add
push
bound
add
jge
mov
jge
add
sti
jae
in
in
pop
add
push
push
sub
inc
push
sub
add
ror
sub
sub
pop
ror
dec
not
pop
push
push
push
push
call
addr16
xchg
mov
pop
jmp
jmp
add
test
add
xchg
in
into
int
stos
jae
add
pop
jp
add
lret
imul
add
jp
add
push
sti
add
add
add
lds
int
sti
xchg
rolb
incb
lcall
jne
call
push
push
call
cltd
leave
mov
movb
add
jae
cli
add
xchg
xchg
add
hlt
mov
subb
add
add
xchg
add
hlt
popf
in
mov
add
add
fwait
lcall
lock
push
lea
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
jmp
mov
mov
add
add
lcall
out
add
mov
jecxz
in
push
int3
add
xchg
add
scas
add
flds
add
add
xchg
repnz
cmpsb
pushf
add
movsb
test
jbe
add
int
sub
pop
lea
push
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
add
add
ret
jns
lock
loop
push
mov
icebp
push
add
clc
out
jecxz
mov
mov
sub
pop
push
pushl
push
push
push
call
data16
add
add
add
add
jecxz
add
shlb
jecxz
add
add
push
imul
imul
fcmovu
rolb
xchg
idivb
in
hlt
lcall
jne
call
push
push
push
push
push
lea
push
push
push
push
call
fwait
xlat
cmpsl
test
mov
add
out
sar
push
xchg
add
jmp
add
pop
rolb
add
popl
imul
mov
pop
je
add
push
out
pop
stc
sahf
add
mov
in
fdivr
lcall
jne
pushl
push
lea
push
push
push
push
call
pop
fsubrl
mov
add
add
add
add
add
add
add
pop
add
add
xchg
loop
stos
movsl
add
out
add
popl
icebp
add
repnz
cld
add
xchg
mov
pusha
rcr
in
in
pop
call
push
push
lea
push
or
not
add
inc
sub
sub
lea
pop
sub
not
pop
push
push
push
push
call
scas
je
push
add
imul
add
mov
push
add
testl
jl
test
add
add
in
lock
pushl
call
push
push
call
jl
mov
jb
rolb
xchg
add
popa
pop
leave
insb
add
mov
jne
add
add
add
mov
add
add
in
add
clc
pop
push
push
push
shr
xor
push
or
inc
add
dec
add
ror
add
sub
lea
not
shr
shr
pop
dec
shl
xor
not
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
push
lahf
add
add
ja
push
add
ja
test
lods
fcmove
add
lret
stos
mov
jmp
add
add
xchg
add
add
lods
sub
pop
push
push
push
push
push
push
push
call
test
add
divl
add
pushf
out
popa
jp
jp
push
addl
popa
add
add
add
add
lods
std
sub
pop
call
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
add
adc
aam
add
test
fcoms
mov
add
pop
ror
add
mov
enter
ljmp
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
push
call
add
lea
scas
add
movl
add
fiadds
push
repnz
lock
sti
add
mov
xchg
fmul
hlt
add
push
add
add
add
insb
jo
add
mov
jno
add
aam
add
add
xchg
imul
push
roll
xchg
add
stos
lds
pop
add
add
push
push
lea
push
lea
push
lea
push
call
loope
fdiv
imul
in
lock
jno
jmp
xchg
into
loop
jecxz
mov
add
rolb
insb
mov
scas
aad
add
cmpsl
mov
add
xchg
push
mov
js
in
movsb
aad
mov
pop
mov
add
cwtl
mov
enter
adcb
orb
pop
sub
pop
mov
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
lods
ljmp
mov
push
push
add
in
ljmp
scas
lahf
add
nop
add
add
lock
jp
scas
fs
push
add
mov
ja
loop
add
in
loopne
add
push
lea
push
push
call
mov
shr
out
jp
add
icebp
push
add
bound
jbe
add
out
add
jno
xchg
jle
add
jecxz
enter
add
ret
add
add
push
lea
push
push
push
lea
push
push
push
push
push
push
call
mov
cld
add
jp
in
mov
mov
int
mov
add
add
in
push
lcall
fdivr
lcall
ret
loopne
add
push
lea
push
push
lea
push
lea
push
lea
push
call
outsl
add
push
add
fiaddl
add
out
add
lcall
add
add
add
jne
add
fcmovnbe
movsb
add
int
push
addl
fisubrl
add
xlat
jbe
add
leave
add
add
lcall
xor
push
push
push
lea
push
push
push
lea
push
push
push
push
push
call
pushf
add
cmpsl
add
add
add
mov
jbe
fadds
mov
add
add
add
mov
movsb
popa
lcall
push
mov
sahf
push
add
lock
mov
push
sub
pop
add
push
push
push
push
lea
push
call
add
mov
add
push
icebp
push
add
add
jecxz
xchg
add
lock
add
pop
movsb
mov
add
arpl
add
test
add
push
jae
shr
lods
mov
add
lret
push
fsubs
fildll
lock
in
in
lcall
mov
push
push
lea
push
lea
push
push
push
call
movl
add
insb
add
add
lods
add
test
add
add
add
js
add
nop
add
fidivl
mov
add
hlt
sub
pop
xor
push
push
push
push
push
lea
push
push
push
push
call
add
enter
add
repnz
jb
les
add
push
mov
add
push
xchg
add
testb
pop
scas
outsl
pusha
add
add
scas
clc
jb
add
cmpsb
sti
add
jmp
pop
loop
push
fcompl
les
push
push
push
push
call
mull
add
add
add
insb
pop
add
in
mov
scas
add
add
pop
mov
ljmp
mov
std
xchg
fadds
lock
push
push
push
push
push
push
call
jb
test
add
add
add
filds
add
add
add
add
jnp
gs
ljmp
fs
jecxz
add
stos
in
stos
cmc
add
testb
aam
fwait
jo
sub
pop
pop
push
push
push
push
push
push
push
push
call
cmc
xchg
add
xchg
pop
in
add
pop
fdivrl
stc
loop
add
pusha
popf
xchg
mov
cmpsl
cmc
add
push
data16
shll
out
fwait
add
mov
out
add
add
lret
add
pop
push
jbe
jbe
mov
in
loopne
mov
push
push
push
push
push
push
push
call
ret
ja
out
into
add
fs
insb
push
into
push
xchg
fmul
lea
addl
aam
add
add
add
sub
pop
xor
push
push
call
into
add
push
xchg
roll
mov
add
add
in
mov
loopne
add
test
add
sub
pop
add
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
jnp
pop
xlat
lahf
fstp
pop
jle
add
add
push
les
call
push
add
xchg
clc
ror
add
cld
add
add
mov
add
add
push
add
fstpt
stos
jns
pop
int
mov
add
sub
pop
push
mov
xor
push
push
push
lea
push
call
pop
flds
add
hlt
add
push
mov
add
rclb
fcmovnu
arpl
add
add
filds
bound
cmc
lret
mov
add
add
int
xchg
shll
lock
lcall
enter
push
lea
push
push
push
push
push
call
mov
xchg
add
add
lret
scas
std
jecxz
icebp
jle
cmc
cmpsl
out
lods
test
add
add
push
add
loopne
lcall
movsb
push
push
push
lea
push
push
call
ret
mov
add
scas
add
mov
mov
xchg
lret
xchg
mov
add
repnz
jmp
add
lret
in
add
cmpsl
xchg
add
add
negb
idivb
cmpsl
push
add
loop
mov
fwait
leave
mov
mov
add
xlat
sub
pop
pop
push
lea
push
lea
push
lea
push
push
push
lea
push
call
call
nop
incb
popf
cmpsl
add
sahf
rolb
add
add
imul
in
mov
scas
jns
add
test
add
xchg
rolb
xlat
xchg
xchg
add
push
add
add
mov
add
mov
in
sub
pop
mov
add
push
push
push
push
push
push
call
add
add
xchg
lock
jne
add
addl
add
add
add
pop
add
mov
add
lods
imul
cmpsl
popf
add
ret
add
add
push
lea
push
push
push
push
lea
push
push
call
rcr
xlat
push
in
mov
jbe
bound
add
addb
in
mov
xchg
add
xchg
pop
jae
imul
aam
add
out
test
push
add
add
xchg
nop
add
scas
add
cmpsl
add
in
add
add
add
lcall
ret
loopne
add
push
lea
push
push
lea
push
push
push
push
push
push
push
call
push
add
jb
add
popf
add
add
xchg
add
lods
addb
jo
mov
add
push
push
mov
enter
mov
mov
push
mov
cld
pop
ror
fsubrl
add
pop
mov
push
push
lea
push
push
lea
push
push
push
lea
push
push
lea
push
call
pop
ror
add
add
popf
push
cmpsl
jae
xchg
mov
add
add
imul
add
add
add
in
loope
add
bound
fcompl
add
push
push
call
jnp
mov
cli
mov
scas
push
in
popa
add
xchg
add
sahf
add
in
mov
sub
pop
add
push
push
push
push
lea
push
push
push
lea
push
call
int
call
add
lret
add
lahf
rolb
jl
outsl
jecxz
add
fcoml
add
add
js
loopne
loope
add
add
add
add
sub
pop
mov
xor
push
push
push
push
push
call
add
bound
jb
add
add
add
push
sahf
mov
add
movsl
mov
add
mov
mov
add
in
in
lcall
dec
sub
push
push
push
push
push
push
push
call
test
mov
ljmp
add
add
mov
aad
add
add
cli
add
push
testb
push
in
add
add
cli
lods
add
add
pop
push
imul
mov
cmpsb
int3
call
add
lret
add
xchg
jmp
subb
pop
jge
pushf
loopne
sub
pop
add
push
push
lea
push
push
push
push
push
call
add
mov
mov
fdivl
sti
roll
mov
cmpl
sarl
cmpsl
add
int3
add
add
lea
rorl
stos
push
add
push
or
inc
add
add
add
shl
sub
shr
sub
pop
shr
pop
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
shl
bound
flds
add
add
lret
jae
add
mov
add
add
lret
pop
add
out
jmp
mov
les
push
push
add
cli
add
in
sub
pop
pushl
push
push
push
push
push
push
lea
push
call
add
add
aad
test
mov
fidivrl
add
cmc
add
add
add
cld
faddl
stos
add
push
ljmp
call
add
add
fwait
addb
add
add
in
aad
int3
imul
pop
call
push
push
lea
push
call
rol
add
stos
fldl
test
add
add
add
pop
mov
aad
add
add
fsubs
add
pop
arpl
sub
pop
push
push
push
shl
push
or
not
add
not
sub
sub
xor
not
pop
add
shr
add
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
pop
pop
add
enter
add
flds
mov
fs
lret
add
add
push
add
mov
jne
jmp
lcall
push
lea
push
lea
push
push
push
lea
push
push
push
push
push
call
faddl
in
push
add
popf
push
nop
pushf
add
add
cmpsl
insb
ljmp
hlt
out
xlat
add
push
ret
test
lcall
add
jl
pushf
push
lea
push
push
push
call
push
test
add
lea
mov
imull
add
mov
addl
push
mov
lods
add
sub
pop
call
mov
push
push
push
push
lea
push
push
lea
push
push
push
call
stos
mov
cltd
add
mov
xchg
lock
add
in
push
mov
mov
add
add
push
mov
xchg
cltd
fwait
add
add
mov
arpl
lods
add
add
shrl
rcr
pop
add
fdivr
lcall
push
push
push
push
push
push
lea
push
push
call
movsl
fs
pusha
add
stos
push
test
les
shlb
add
stos
popl
fisubrl
bound
repnz
sub
pop
push
push
lea
pop
mov
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
xchg
jne
add
lea
xchg
xchg
testl
add
adcl
mov
roll
movl
add
push
cmpl
mov
lret
ja
add
add
mov
fcoms
cwtl
test
add
add
jmp
add
add
sub
pop
add
push
inc
add
pop
add
add
push
push
lea
push
push
call
add
add
add
test
push
jp
add
add
mov
aad
insb
imul
mov
add
in
rclb
fistpll
add
add
popa
mov
movl
mov
jb
add
mov
add
sub
pop
mov
xor
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
push
jns
jne
push
add
add
call
iret
jae
lds
add
add
mov
pop
cli
xor
test
shrb
add
repnz
enter
lcall
jne
push
not
pop
push
mov
xor
push
push
push
push
push
call
add
mov
outsl
mov
add
add
jo
xchg
mov
cmpsb
add
enter
jecxz
add
add
sti
outsl
in
add
add
sar
xchg
jmp
lret
idiv
leave
add
sub
pop
add
push
pop
pop
push
rol
sub
sub
add
pop
mov
push
push
push
call
clc
lock
iret
movsl
pop
add
movsl
faddl
add
lcall
add
mov
jmp
lret
mov
lcall
or
push
push
push
push
call
cli
add
scas
add
add
mov
in
les
outsl
mov
add
add
shl
add
fisubl
jmp
add
add
out
data16
add
add
push
add
shr
not
add
pop
rep
push
lea
pop
mov
push
push
push
call
outsl
add
clc
lods
mov
mov
push
push
jmp
jecxz
out
add
add
pop
cmpsl
cld
outsl
xchg
add
mov
rol
add
jne
mov
scas
jle
xchg
add
add
mov
movl
add
test
sub
pop
xor
push
lea
push
push
call
mov
add
mov
add
stc
add
add
mov
call
jnp
into
cmpsl
mov
add
mov
mov
add
add
push
shr
add
lea
pop
or
je
push
pop
mov
xor
push
push
push
push
push
push
lea
push
call
mov
shrb
add
add
data16
add
cmpsl
add
insb
cltd
mov
xlat
mov
stos
add
mov
jae
aad
lds
stos
xchg
add
push
add
lcall
push
sbb
push
push
not
dec
shr
pop
add
add
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
jnp
roll
add
add
add
cwtl
outsl
mov
add
push
add
out
leave
xchg
pop
bound
jo
fnstenv
add
hlt
add
pop
jnp
mov
pusha
addl
add
sub
pop
push
push
inc
sub
pop
mov
xor
push
push
push
call
push
rolb
jns
fistpl
add
add
test
add
mov
data16
add
push
bound
mov
cld
fbld
popa
clc
movl
push
fcmove
jbe
lret
out
jo
sub
pop
add
pop
push
push
push
push
call
mov
jno
add
cmpsl
mov
pop
add
arpl
add
add
imul
add
add
xchg
add
cmpsb
add
cmc
add
mov
add
sub
pop
rep
mov
push
push
push
push
push
call
pop
mov
add
xchg
add
shll
add
add
mov
not
ret
mov
mov
cwtl
sub
pop
xor
push
push
push
push
push
lea
push
call
stc
add
lods
movsb
add
mov
add
mov
call
pushf
add
stos
fildl
fiaddl
faddl
lret
lahf
add
test
je
mov
add
addb
add
roll
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
add
fildl
testb
leave
add
cwtl
xchg
add
add
add
scas
je
fistpll
mov
jo
ja
call
add
add
cli
add
add
add
mov
xchg
hlt
push
cli
popf
add
mov
sahf
loopne
add
leave
je
mov
push
not
pop
add
push
pop
add
push
push
lea
push
lea
push
call
gs
std
bound
add
xchg
mov
ja
ljmp
cmp
mov
stc
pop
add
add
add
in
pop
jo
jle
add
fisttpll
add
out
lock
add
ljmp
in
lock
rep
pop
push
push
add
lea
ror
push
or
inc
add
rol
sub
rol
sub
pop
add
shr
pop
push
dec
dec
lea
pop
pop
mov
push
sub
add
pop
mov
push
push
push
push
lea
push
push
push
lea
push
call
out
mov
js
cltd
flds
fbld
add
mov
out
add
mov
add
pop
mov
int3
enter
ja
add
in
add
ret
sub
pop
mov
jmp
push
ror
inc
pop
push
mov
push
rol
xor
pop
add
push
rol
rol
pop
push
push
push
add
pop
push
push
push
lea
push
lea
push
lea
push
push
push
call
aad
pop
add
jno
jle
sti
leave
add
fdivl
add
lods
jb
add
enter
add
mov
aam
add
test
test
mov
mov
add
add
add
cmc
jmp
mov
in
in
in
push
push
push
push
lea
push
push
call
in
xorb
pop
sahf
mov
scas
rclb
imul
xchg
popf
add
lea
jae
mov
jno
add
add
out
jo
mov
lock
mov
lcall
inc
cld
pop
push
push
push
lea
push
lea
push
push
lea
push
call
push
addl
add
add
xlat
add
add
xchg
xchg
ljmp
add
mov
sarb
test
movsb
pop
add
lcall
push
add
add
inc
pop
pop
pop
push
dec
shl
shl
pop
leave
ret
push
push
push
lea
push
push
lea
push
call
add
pop
scas
aam
add
jl
imul
add
add
add
lret
mov
push
movb
push
add
add
add
xchg
lods
xchg
lahf
add
movl
push
push
lea
push
lea
push
lea
push
push
push
push
call
push
add
add
jb
adcl
add
add
add
mov
std
add
in
fdivr
lcall
in
push
push
push
push
call
add
add
outsl
add
addb
push
pop
jmp
mov
push
jmp
ljmp
outsl
add
lcall
clc
push
push
push
push
push
push
lea
push
push
call
add
add
int3
add
mov
add
movsb
jl
xchg
test
jle
jns
jge
mov
add
mov
cmpsb
add
add
mov
add
nop
add
push
dec
sub
shr
pop
push
push
push
push
push
push
lea
push
call
add
fsubr
add
jbe
mov
testl
scas
add
add
add
arpl
add
mov
cli
mov
jb
mov
add
add
stos
movsl
mov
negb
jl
shl
sahf
push
add
pop
in
add
mov
add
in
in
lcall
movl
push
dec
sub
pop
addl
push
add
not
shr
shl
pop
test
je
push
push
lea
push
push
push
push
push
call
testb
add
add
arpl
add
add
test
lock
ror
add
add
mov
addl
push
add
ja
js
mov
add
fiadds
add
pushf
add
insb
lcall
shll
add
out
jb
add
inc
or
test
mov
cmp
push
call
add
lcall
mov
icebp
lea
add
mov
add
std
add
add
hlt
cld
fs
add
jno
mov
shll
add
cmpsl
sub
pop
pop
push
push
call
jb
push
xchg
popf
mov
add
mov
add
pop
pushf
add
insb
xchg
mov
in
aad
push
add
add
ljmp
lods
std
ljmp
lcall
push
sub
dec
add
pop
pop
push
push
call
fistl
mov
add
add
add
ja
mov
int
imul
lcall
add
add
popa
xchg
popf
insb
xchg
lods
js
lcall
jp
add
add
pusha
add
scas
add
pop
leave
push
push
push
push
lea
push
lea
push
push
push
push
push
call
xlat
add
repnz
lea
mov
stos
faddl
add
lock
cli
test
out
bound
xchg
add
mov
add
movl
mov
into
add
add
cmpsb
add
lcall
add
push
push
rol
add
sub
pop
mov
push
push
push
lea
push
call
add
in
add
testb
sar
movsb
leave
leave
add
shr
arpl
add
mov
popa
add
jp
sub
pop
add
push
push
push
push
lea
push
call
addl
stos
jl
pusha
fidivrl
add
cltd
fcmovb
add
add
cli
pop
add
push
testb
cmpsl
iret
jnp
fldcw
add
movsl
mov
lock
lcall
push
add
pop
push
push
lea
rol
pop
push
push
add
pop
testl
addl
push
push
push
push
push
push
push
lea
push
push
push
call
aad
add
add
pop
fwait
jecxz
push
add
icebp
pushf
add
sahf
data16
xchg
ja
jne
push
pop
testb
sub
pop
push
call
push
add
xor
pop
mov
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
stos
les
add
mov
add
add
pushf
pop
in
scas
jge
xchg
add
jo
add
pop
mov
add
test
cltd
add
pop
add
lea
add
add
add
fdivr
lcall
jne
push
add
sub
pop
push
push
inc
add
pop
push
push
push
push
push
lea
push
push
call
call
sahf
pop
repnz
test
add
into
mov
jb
add
notl
mov
clc
add
clc
rcr
stos
mov
test
imul
loope
add
add
in
call
call
mov
loopne
sub
shrl
sbb
pop
cmpl
jne
pop
push
rol
lea
rol
pop
pop
push
xor
pop
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
mov
subb
repnz
mov
push
mov
add
mov
sahf
int3
add
add
add
add
add
ljmp
pop
leave
push
shl
dec
dec
pop
ret
push
push
pop
mov
push
push
lea
push
push
push
lea
push
push
call
add
add
out
jo
fldl
out
add
add
into
add
out
add
lea
mov
popa
jb
test
add
lret
mov
lcall
add
add
add
not
add
lcall
cld
push
shr
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
pusha
add
mov
add
roll
add
add
mov
add
push
add
test
mov
mov
gs
stos
add
xor
add
add
rorb
std
lret
test
pop
mov
test
jno
popf
add
std
add
lcall
push
push
lea
push
push
push
lea
push
push
push
push
push
call
int
ja
stc
xchg
popa
jl
add
add
add
add
test
add
out
add
lret
lahf
add
mov
iret
mov
inc
add
hlt
pop
add
incb
lcall
movl
push
push
lea
push
lea
push
push
call
cltd
roll
add
push
into
nop
mov
movsb
fldenv
add
add
jns
faddp
jge
add
add
leave
jl
rcrb
jne
jb
in
in
pop
push
call
push
rol
pop
push
call
push
push
push
lea
push
push
push
call
insb
lahf
add
lahf
add
cli
add
xchg
pop
test
xchg
jle
xchg
shlb
mov
in
loop
jle
stc
jle
lods
add
pop
push
xchg
add
in
call
add
test
push
push
push
lea
push
push
push
push
call
xchg
jo
add
pushf
popf
add
add
int
add
add
pop
jmp
add
mov
movsb
xchg
ljmp
mov
fsubrs
js
jbe
rolb
aam
lret
add
fsubrl
mov
pushf
add
add
add
into
add
iret
loopne
rolb
add
pop
xchg
mov
lcall
push
add
pop
pop
pop
push
lea
push
call
add
ja
in
add
add
add
mov
pop
negb
stc
add
andl
add
add
sub
pop
pop
leave
push
push
push
push
push
push
push
push
call
add
pop
jecxz
movsb
movl
jno
add
sti
add
dec
add
mov
xlat
filds
mov
mov
popf
add
mov
add
mov
jns
add
movsb
out
ret
movsb
add
scas
add
lcall
push
push
ror
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
call
cmpsb
stc
jp
fs
sahf
mov
jge
loopne
add
lret
jle
add
xlat
add
lret
leave
mov
add
xchg
jno
add
add
stos
add
pop
in
push
add
cmpsl
mov
rcrl
mov
in
add
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
shr
add
cmpsl
xchg
pop
movsl
jns
aam
mov
fcoms
lret
xchg
xor
jmp
rcl
add
xchg
add
mov
add
mov
add
add
gs
xchg
xchg
add
icebp
add
fcomps
push
pop
push
push
push
rol
rol
pop
push
push
push
push
push
lea
push
push
call
add
add
add
add
roll
push
gs
add
lock
cltd
loopne
add
jl
add
cmc
add
ficompl
jbe
add
add
add
mov
add
sub
pop
mov
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
jns
add
test
push
add
add
xchg
add
lret
loop
add
repnz
add
mov
test
push
mov
add
addb
mov
leave
add
movsb
jns
mov
sub
pop
lea
push
push
call
add
mov
into
ficomps
shlb
fdivs
nop
imul
mov
int
scas
xlat
call
mov
add
add
add
add
mov
in
add
test
add
add
jp
cld
fcmove
add
mov
mov
pop
sub
push
lea
push
lea
push
push
push
call
imul
jge
fadds
aad
roll
pop
mov
add
mov
cmpsl
jl
testb
mov
jge
add
add
add
rolb
cmc
vprotw
add
push
lea
pop
mov
push
push
push
push
call
loope
loope
jl
mov
jle
add
divl
xlat
js
fnstcw
add
push
lahf
mov
add
add
add
flds
add
jl
hlt
add
add
add
scas
fildl
push
pop
lods
stos
sub
pop
mov
push
push
push
push
push
lea
push
push
push
call
in
data16
mov
add
mov
mov
add
cwtl
jbe
les
xchg
add
add
call
sub
pop
add
add
push
rol
shr
shl
pop
mov
mov
push
shr
add
pop
cmp
jne
push
lea
pop
cmp
jne
push
pop
mov
push
sub
pop
movl
push
push
push
push
push
lea
push
push
push
push
call
add
add
ret
mov
add
pop
add
add
aam
ljmp
add
fst
add
add
into
mov
add
add
clc
rcll
add
lcall
inc
sldt
push
inc
pop
mov
mov
push
rol
not
ror
pop
sub
jne
push
lea
lea
sub
pop
mov
push
lea
push
lea
push
call
gs
aam
arpl
add
cmpb
icebp
scas
pop
add
js
loop
add
subl
gs
pop
arpl
roll
add
add
shrl
add
add
stc
add
pop
movl
push
lea
push
push
lea
push
call
clc
mov
add
add
add
sti
in
cli
cmpsb
add
in
jecxz
fisubrs
addr16
add
add
mov
add
roll
jl
in
lock
lcall
pop
push
add
push
shl
add
dec
pop
mov
mov
push
push
push
push
push
push
lea
push
push
push
call
add
fldl
int3
xlat
lea
add
imul
add
jp
test
mov
ror
mov
jl
fnsave
add
add
add
add
add
jo
icebp
lahf
sub
pop
cmp
jne
push
shl
not
pop
mov
movl
push
push
push
lea
push
push
lea
push
lea
push
call
add
sahf
testb
lret
insb
mov
mov
fiadds
les
int3
faddl
add
xchg
xchg
push
add
add
add
mov
add
fsubrp
mov
mov
add
lcall
insl
or
cld
push
push
push
push
push
lea
push
push
lea
push
push
call
push
mov
add
sbbl
add
pop
mov
add
add
in
lea
iret
jle
jnp
add
xlat
add
add
into
mov
add
add
add
push
add
add
jmp
in
fcompl
cmpl
jne
push
push
push
call
add
mov
popf
lret
push
add
fistps
repnz
add
mov
scas
cmpsb
xchg
add
fbstp
mov
pop
fstps
add
loopne
sub
pop
mov
movl
push
inc
pop
jmp
push
shl
pop
pushl
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
push
add
mov
add
add
int3
jno
xchg
roll
push
add
add
je
jl
pusha
mov
in
test
push
add
in
add
xchg
add
fldl
mov
lds
in
jae
add
pop
jne
mov
add
jbe
enter
push
cmc
add
add
xorb
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
call
add
add
add
loopne
movsb
add
pop
test
mov
add
add
mov
add
add
add
loopne
add
cmpsl
add
inc
or
push
push
push
push
lea
push
push
push
call
add
pop
leave
push
cli
push
add
mov
aad
add
test
pushf
add
add
add
add
add
add
add
mov
in
out
add
add
loopne
lcall
inc
sbb
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
add
add
add
imul
fcmovnu
add
lea
add
add
add
mov
add
loopne
movsl
fsubrl
test
jns
aad
lcall
add
add
jo
add
test
sub
pop
mov
push
push
add
rol
push
and
add
add
sub
ror
inc
rol
pop
sub
add
inc
pop
push
inc
add
pop
push
push
lea
push
call
arpl
xorl
js
add
imul
add
int3
test
fildl
pop
imul
lock
fwait
lods
scas
scas
filds
add
add
mov
add
sub
pop
call
cmpl
je
push
push
add
lea
push
and
add
xor
sub
add
xor
pop
add
pop
push
add
shl
pop
push
push
ror
shl
pop
call
push
rol
pop
cmpl
je
push
push
inc
ror
sub
push
push
pop
add
rol
shl
sub
shl
pop
dec
shr
pop
push
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
div
testl
nop
cld
ficoms
add
mov
jecxz
lcall
mov
fildll
xchg
add
add
lea
xchg
add
insb
jmp
in
scas
mov
add
lcall
push
sub
shl
sub
ror
pop
call
cmpl
je
push
push
shl
rol
push
or
not
add
not
sub
dec
sub
shl
pop
inc
pop
push
push
lea
push
push
push
push
call
pop
push
icebp
add
add
mov
push
rolb
testb
xchg
jmp
push
in
add
vpackssdw
mov
add
icebp
scas
sub
pop
push
push
inc
dec
pop
call
push
push
push
push
lea
push
call
jp
add
mov
add
add
add
lods
add
test
fldl
add
mov
push
add
add
js
loop
add
push
mov
add
pop
stos
ljmp
pop
cmpl
je
push
push
add
push
or
inc
add
add
sub
lea
pop
ror
pop
push
push
push
push
call
add
loopne
out
jo
add
loop
enter
rcl
add
xchg
stos
mov
add
in
add
lahf
add
add
cltd
ret
pop
xchg
jae
xchg
jnp
cld
popf
add
jge
sti
add
mov
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
std
jns
stc
mov
add
scas
leave
add
int
loop
add
imul
add
mov
add
mov
jns
xlat
add
add
test
add
push
dec
ror
dec
sub
pop
cmpl
je
push
push
inc
rol
xor
push
or
inc
add
shr
sub
not
pop
ror
add
pop
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
repnz
mov
cmc
cltd
cli
repnz
push
insb
add
add
add
add
jle
ljmp
add
add
push
outsl
lds
add
pop
push
push
push
push
call
cmc
lds
mov
mov
add
add
add
fildl
add
mov
arpl
mov
add
pushf
mov
mov
int3
pop
mov
add
xchg
cmp
add
or
test
add
inc
leave
pushf
push
dec
dec
rol
push
and
add
sub
sub
sub
pop
lea
shr
pop
push
lea
pop
push
push
add
add
sub
ror
pop
call
push
rol
add
sub
pop
cmpl
je
push
push
dec
shl
shr
push
or
inc
add
not
inc
sub
rol
shl
pop
not
add
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
add
push
test
mov
mov
mov
movsl
iret
add
stos
add
movsl
pushf
cld
add
add
into
pop
les
add
add
cltd
add
roll
add
in
fdivr
lcall
push
push
push
push
call
cmpsb
xlat
lods
add
in
testb
add
jge
add
push
push
add
cltd
push
jae
out
add
add
insb
xchg
jns
sub
pop
call
cmpl
je
push
push
push
or
not
add
rol
sub
shl
xor
add
sub
pop
sub
xor
pop
push
push
push
push
call
scas
pop
pop
add
add
add
lea
loope
add
add
add
push
add
sahf
add
mov
in
stc
stos
ja
out
cli
add
mov
loopne
jmp
push
add
add
add
imul
mov
sub
pop
push
call
push
xor
shr
add
pop
cmpl
je
push
push
xor
add
push
or
not
add
sub
sub
add
pop
xor
add
dec
pop
push
sub
pop
push
push
push
push
push
push
call
clc
add
cwtl
mov
add
out
jmp
mov
mov
mov
add
pop
mov
pusha
mov
clc
add
jno
add
add
mov
push
mov
add
pop
mov
out
cmpsb
mov
jo
in
add
mov
lods
sti
ljmp
loop
add
push
push
push
push
lea
push
push
push
call
test
pop
stc
shl
mov
xchg
add
rolb
addb
fcomp
popa
add
scas
testb
out
mov
add
mov
add
xchg
mov
shll
roll
mov
jp
jnp
add
in
cmpl
je
push
push
rol
xor
push
or
inc
add
shl
sub
sub
dec
ror
pop
shr
inc
pop
push
sub
shr
inc
pop
push
push
push
push
lea
push
call
fistps
cli
popl
pushf
add
add
fisubl
pusha
xlat
push
fldcw
add
add
mov
add
add
lock
add
push
add
add
add
mov
add
lcall
divb
push
push
push
push
push
push
push
push
call
xchg
mov
add
add
jb
push
add
jnp
mov
pushw
add
add
push
pop
jne
add
test
leave
clc
insb
add
popf
xchg
into
jb
lahf
add
mov
jp
ja
add
add
in
fcomps
js
xor
ret
test
add
add
aam
ja
sub
push
sub
add
dec
xor
sub
inc
sub
dec
dec
rol
pop
sub
shl
xor
pop
push
push
push
push
push
push
lea
push
push
lea
push
call
mov
out
push
mov
stc
jge
popa
movsl
in
add
mov
add
loope
insb
add
push
add
rolb
bnd
xchg
pop
scas
pop
jbe
pop
into
add
pop
add
add
jmp
add
add
add
xchg
xchg
movsb
add
jne
add
clc
pusha
data16
lcall
push
lea
push
push
push
lea
push
push
push
lea
push
call
stos
mov
sti
add
outsl
cmc
out
cltd
add
add
ror
test
add
add
pop
movsl
mov
loopne
add
add
in
add
add
add
jecxz
pop
push
enter
clc
add
andb
flds
int
hlt
call
xchg
jne
add
add
inc
xor
add
les
je
push
push
xor
push
and
add
sub
sub
sub
sub
sub
pop
dec
pop
push
push
push
call
mov
push
mov
xchg
add
add
loopne
rclb
pop
jp
add
add
fsubrs
add
lcall
hlt
lcall
call
push
lea
push
push
lea
push
lea
push
push
push
push
call
cmc
pop
add
cmpsb
jmp
cltd
pushf
in
add
test
add
mov
test
incb
lock
add
aam
add
sti
in
popl
mov
insb
pushf
ja
add
pop
add
add
mov
add
add
loopne
lcall
js
xor
pop
ret
pop
add
add
sub
pop
mov
push
pop
movl
push
pop
jmp
xor
push
rol
pop
pop
push
sub
pop
pop
push
push
push
push
call
mov
pop
int3
lds
cld
add
jno
fucomi
add
in
jo
call
add
add
jno
testb
add
nop
jo
sti
popf
xchg
mov
add
test
fisttpll
xlat
mov
je
mov
mov
pop
pushf
leave
loope
repnz
xchg
push
push
call
shl
lahf
add
add
lret
add
stos
add
pop
add
add
mov
add
leave
std
add
scas
test
add
add
mov
jp
lods
add
movsb
in
sahf
clc
leave
into
fcomi
sub
pop
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
jo
mov
add
sti
jb
add
cltd
add
add
pop
add
addr16
mov
mov
add
data16
mov
add
add
jb
push
add
push
push
std
add
cmpsw
fldl
mov
cmc
add
jb
push
add
xchg
sarb
add
in
fdivr
lcall
push
sub
pop
ret
push
push
lea
shr
shr
ror
pop
mov
push
ror
inc
add
shl
pop
add
push
push
push
lea
push
push
call
add
add
add
mov
add
add
mov
ret
jl
ret
add
jno
xchg
mov
fs
lret
add
cmpsl
in
add
xchg
add
add
add
pop
add
add
mov
add
jge
add
test
add
add
or
push
push
or
not
add
add
shl
sub
pop
ror
pop
push
add
dec
pop
pushl
push
rol
pop
call
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
lods
add
cltd
add
lods
add
in
mov
add
add
in
push
pop
jns
add
cmc
xchg
jno
test
jl
add
nop
testb
add
scas
sarb
fdivr
lcall
call
lret
inc
pop
call
push
pop
jmp
push
push
push
push
call
add
add
jp
jge
add
mov
test
push
jl
imul
add
les
testb
lret
in
lock
cmpl
je
push
lea
push
push
push
call
into
clc
add
stc
cltd
add
cltd
iret
add
lahf
add
iret
loopne
add
rolb
cli
add
add
xlat
popf
jl
loopne
cmpsb
jge
jns
add
pop
test
xlat
add
mov
stc
add
pop
out
mov
xchg
in
std
test
add
push
pop
add
add
lods
repnz
mov
mov
fldl
lcall
jge
add
add
push
push
push
push
push
lea
push
push
push
push
push
call
aad
ror
add
add
xchg
cmpsb
gs
jae
jnp
add
add
fcomps
push
in
add
arpl
imul
clc
data16
fildll
push
jge
gs
fwait
jle
data16
out
pop
sar
mov
mov
add
mov
call
push
movsl
add
in
fcomps
add
push
rol
pop
pop
pop
push
dec
dec
sub
pop
pop
push
inc
rol
xor
pop
pop
leave
push
add
sub
pop
add
push
rol
add
pop
ret
push
shl
shr
xor
pop
jmp
push
xor
shr
add
pop
cmpl
jne
push
push
dec
push
and
add
inc
ror
lea
sub
add
shr
pop
not
sub
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
add
pop
in
mov
mov
jbe
nop
jns
add
add
int3
scas
xchg
out
test
jge
clc
add
mov
loop
shrb
push
add
test
mov
add
xchg
popa
xlat
add
push
add
lds
xlat
mov
lds
in
in
pushl
call
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
fs
add
sahf
pop
out
clc
mov
lret
jbe
jl
lds
mov
add
pop
out
mov
add
add
pushf
add
add
cli
call
add
pop
add
pop
ljmp
add
xor
add
mov
test
in
arpl
pop
mov
add
lcall
add
aad
pop
call
push
shr
ror
xor
pop
jmp
cmpl
jne
push
push
push
push
push
push
lea
push
call
add
mov
in
add
add
aad
jmp
fcmovb
add
pop
add
add
jo
cmpsb
roll
add
insb
add
scas
mov
cli
add
add
add
push
rol
pop
mov
jmp
push
push
push
push
push
push
push
push
call
add
xchg
xchg
cltd
icebp
add
hlt
std
add
shll
add
mov
add
mov
add
add
add
lahf
movb
pop
push
push
push
add
push
xor
add
not
sub
add
xor
sub
xor
sub
shl
pop
not
ror
rol
shl
pop
push
add
inc
pop
pushl
push
lea
push
push
push
lea
push
lea
push
push
push
call
mov
in
lret
add
add
out
add
aam
leave
add
add
fmul
fbstp
push
pusha
mov
push
cmc
cltd
mov
mov
pop
add
movsl
fiadds
int
add
flds
push
scas
adcb
push
add
in
loopne
lcall
xor
add
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
popa
bound
stos
shll
int3
add
add
test
mov
jbe
fbstp
data16
xchg
add
pop
addl
loopne
mov
add
mov
jae
mov
mov
popa
add
add
fildll
loope
mov
add
mov
cmpsb
sub
pop
call
push
push
xor
push
or
inc
add
shl
shl
ror
sub
ror
rol
sub
pop
add
inc
pop
push
rol
sub
shr
pop
pushl
push
push
push
push
push
push
push
push
call
fadds
add
mov
loopne
lods
pop
jle
add
add
jae
flds
add
push
mov
push
add
mov
add
add
push
add
xchg
ja
cwtl
scas
enter
fsubs
add
ja
jbe
jecxz
add
mov
mov
push
fsubrp
in
add
in
loopne
lcall
jmp
add
call
push
push
dec
add
sub
push
and
add
shr
sub
inc
sub
pop
ror
xor
pop
push
add
not
ror
pop
pushl
push
lea
push
lea
push
push
push
call
mov
je
pushf
std
add
add
add
xchg
add
cltd
shlb
sti
add
add
pop
int
add
mov
add
add
fcompl
add
enter
jno
jae
jecxz
loop
idivl
test
add
xor
shrb
or
or
not
add
inc
not
sub
sub
ror
pop
inc
pop
push
xor
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
mov
pop
addr16
mov
mov
xlat
add
add
xchg
lds
popl
add
mov
push
xchg
ficoml
add
add
mov
add
shlb
jns
add
push
mov
mov
andl
addl
push
push
call
add
push
jmp
add
sti
jecxz
push
outsl
add
mov
add
add
cmpsb
mov
add
incb
add
add
add
mov
repnz
stos
jl
mov
mov
cmpsb
xchg
add
lcall
shrb
inc
aam
push
add
shr
not
push
or
inc
add
sub
shr
sub
ror
inc
not
pop
lea
pop
push
rol
not
shr
xor
pop
pushl
push
not
pop
call
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
add
out
add
mov
mov
hlt
push
add
add
pop
add
pop
add
fstps
add
jne
shl
add
add
mov
cld
jecxz
in
loopne
lcall
shrb
pop
xchg
mov
sub
push
sub
add
sub
shl
sub
dec
sub
pop
xor
add
sub
pop
push
shr
inc
shl
pop
pushl
push
xor
sub
pop
call
push
add
sub
pop
call
push
push
inc
dec
not
push
xor
add
shl
sub
dec
sub
sub
sub
pop
ror
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
call
je
add
add
je
ja
add
add
mov
jnp
add
pop
add
mov
mov
push
clc
loop
add
add
in
jns
xchg
add
imul
flds
nop
imul
xchg
add
mov
movsl
add
jno
add
lcall
jne
call
push
push
push
push
push
lea
push
push
push
push
call
fstpt
mov
mov
data16
add
add
mov
mov
add
push
in
mov
pop
movsb
add
add
xchg
mov
add
pop
call
push
push
sub
shr
push
xor
add
add
xor
sub
dec
rol
pop
pop
push
shl
pop
pushl
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
add
add
in
add
mov
movsl
push
mov
add
jle
loopne
sub
pop
call
push
shl
xor
pop
call
push
push
inc
shl
push
sub
add
add
inc
sub
lea
shl
pop
ror
lea
pop
push
push
push
push
push
push
call
add
add
in
pop
out
mov
leave
add
rcl
loope
call
push
add
add
clc
loope
mov
add
add
in
movsl
stos
mov
outsl
xchg
push
lods
pop
xchg
add
fs
mov
bound
fistl
add
test
pop
add
test
mov
add
sub
pop
pushl
call
push
push
push
push
push
push
call
fs
add
imul
mov
fldl
gs
mov
shl
loop
add
add
repnz
mov
add
shrb
mov
mov
ror
sub
push
or
inc
add
lea
inc
ror
sub
shr
pop
add
ror
pop
push
lea
sub
pop
pushl
push
xor
sub
pop
call
lea
push
dec
not
ror
pop
push
push
push
call
cmpsl
add
ret
add
lds
add
add
push
test
xchg
sahf
call
jnp
add
lahf
add
jo
add
out
cmpb
add
add
hlt
fmuls
add
lcall
shrb
pop
jg
push
not
ror
push
sub
add
add
sub
rol
shr
add
pop
dec
add
ror
pop
push
push
push
lea
push
push
push
call
gs
add
jmp
pushf
testl
pushf
add
in
add
mov
jb
loopew
pop
roll
add
addl
lret
imulb
mov
add
add
push
sub
pop
pushl
push
push
push
push
push
push
lea
push
push
push
push
call
repnz
add
add
add
add
xchg
rolb
add
pop
aad
add
add
and
add
inc
pop
call
push
push
sub
push
or
not
add
add
sub
not
pop
rol
sub
xor
pop
push
lea
push
push
push
call
andl
push
add
add
add
jns
int3
add
loope
fwait
add
jb
flds
add
shll
add
les
xchg
add
add
add
sub
pop
pushl
push
pop
call
push
pop
call
push
push
add
push
xor
add
inc
sub
sub
pop
sub
xor
inc
lea
pop
push
push
push
call
jp
add
imul
hlt
pushf
add
jb
aad
add
jne
add
add
test
add
add
popa
xlat
cli
add
in
hlt
lcall
jne
call
push
push
push
lea
push
call
add
add
add
cld
add
jbe
add
cli
pop
add
push
in
xchg
add
addb
pusha
mov
push
test
pop
loopne
jecxz
icebp
scas
cwtl
test
sti
sub
pop
call
push
pop
lea
push
push
sub
shr
push
or
not
add
lea
ror
sub
xor
shr
pop
sub
pop
push
add
pop
pushl
call
push
push
lea
push
push
push
push
call
add
add
add
mov
cmc
in
add
add
add
add
add
add
add
mov
roll
popl
add
rcrl
add
mov
pop
add
lcall
call
push
push
xor
push
xor
add
not
sub
sub
shr
pop
sub
pop
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
jl
add
fsubrs
push
andb
call
push
popa
movb
add
std
mov
in
add
in
test
mov
cld
fidivs
mov
cmpsl
out
lds
mov
add
add
fisubrl
in
fcompl
jne
push
push
lea
push
push
push
push
call
xchg
add
add
add
mov
jns
add
add
std
stos
add
add
fldl
in
arpl
add
mov
neg
fdivrl
jle
gs
add
jp
add
add
jns
lret
fnstenv
jle
push
roll
jecxz
push
cmc
mov
call
add
push
shr
pop
call
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
add
mov
sbbb
pop
leave
cmpsb
fadds
enter
add
mov
jge
add
mov
mov
jl
rolb
push
add
lods
mov
add
imul
in
fcompl
inc
cld
push
push
shl
push
or
inc
add
sub
sub
sub
shl
lea
lea
pop
shl
xor
pop
push
shr
ror
ror
add
pop
pushl
push
shl
pop
call
push
sub
pop
push
push
shl
pop
pushl
push
shl
pop
call
push
push
inc
inc
push
xor
add
dec
sub
ror
pop
add
shl
pop
push
ror
pop
pushl
push
push
push
push
lea
push
push
push
call
add
pop
push
mov
jge
add
mov
out
popf
push
je
mov
jb
add
push
add
addw
jmp
xchg
int3
add
add
add
add
sub
pop
call
push
push
push
push
pop
add
shl
inc
sub
add
xor
dec
lea
pop
inc
pop
push
push
sub
xor
inc
ror
push
or
inc
add
add
inc
sub
dec
pop
rol
pop
push
push
push
lea
push
push
push
push
call
out
xchg
insb
pop
add
roll
cld
lock
imul
dec
je
pusha
lods
cli
popa
pop
add
popa
cmpsb
movsl
add
pusha
add
sbbb
fwait
add
enter
repnz
add
add
jo
js
xchg
lcall
in
in
lcall
shrb
xor
push
xor
sub
push
xor
add
inc
add
sub
sub
add
pop
sub
dec
pop
push
push
push
push
push
push
lea
push
call
add
add
aad
cmpsl
mov
pop
push
scas
nop
add
add
fwait
add
cmc
xchg
pushf
adc
out
into
bound
add
add
call
sub
pop
pushl
call
push
push
push
lea
push
push
lea
push
call
sahf
mov
jge
jl
mov
jns
add
int
popa
mov
roll
add
add
add
mov
fidivs
sti
add
add
mov
add
lds
inc
hlt
push
sub
pop
lea
lea
push
push
push
lea
push
push
push
push
call
cmpsl
lahf
mov
add
imul
cwtl
aad
mov
add
andl
std
xchg
pushf
mov
sahf
lods
add
jbe
cltd
jmp
pusha
pop
add
add
add
lods
add
add
add
xchg
add
push
lea
pop
push
push
push
call
jb
shrl
cli
pop
mov
xchg
repnz
jno
push
add
push
add
int3
xchg
xchg
add
ljmp
add
add
add
fadds
fimull
add
fimuls
add
call
add
lcall
add
cs
push
lea
push
lea
push
call
add
mov
add
add
cld
jmp
imul
add
pop
add
push
jno
add
js
add
jle
add
mov
add
jbe
add
xchg
out
add
ret
mov
pop
test
movsb
scas
mov
jno
pop
mov
push
push
push
dec
rol
shl
pop
push
push
push
shr
not
pop
push
push
push
push
push
lea
push
push
call
jmp
mov
repnz
add
out
mov
ljmp
movsl
add
cmc
add
fbld
add
push
mov
mov
rolb
add
rclb
into
lret
movsl
mov
in
imul
pop
pushl
push
push
push
push
push
call
mov
pop
add
add
add
pop
lret
aam
cwtl
add
xchg
fistpl
mov
leave
jne
pushf
add
add
add
push
out
add
add
stc
test
jle
add
bnd
fs
ljmp
add
lcall
push
hlt
push
push
add
push
and
add
add
inc
sub
xor
sub
rol
sub
shr
pop
add
xor
dec
pop
push
add
inc
sub
dec
pop
pushl
push
xor
add
pop
call
call
push
push
lea
push
call
add
arpl
jge
pop
add
add
mov
jle
xchg
mov
add
add
add
notl
arpl
scas
add
stos
test
add
add
movsb
mov
fldl
add
fistpl
in
hlt
pop
mov
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
out
pop
add
push
fisubrl
xchg
add
add
filds
xchg
add
lds
flds
push
sub
shr
pop
dec
jne
push
shr
pop
call
push
push
shr
push
xor
add
sub
rol
dec
dec
sub
pop
lea
pop
push
push
push
lea
push
lea
push
push
push
call
jo
add
add
mov
cld
add
cmc
sbbb
add
test
pusha
add
in
in
lcall
jne
call
push
push
push
push
push
push
push
push
push
call
push
popf
push
add
fdivs
test
push
add
enter
add
xchg
add
add
mov
imul
add
mov
xchg
out
jns
add
nop
add
rolb
add
add
pusha
scas
mov
push
enter
fdivr
lcall
call
pop
call
push
sub
pop
mov
push
not
shr
pop
lea
push
push
add
sub
push
or
inc
add
shl
sub
xor
ror
sub
add
inc
rol
pop
inc
not
add
shr
pop
push
ror
lea
pop
pushl
push
pop
call
push
ror
pop
push
call
push
push
shr
ror
dec
add
push
xor
add
sub
shl
shl
lea
sub
add
pop
xor
pop
push
add
pop
pushl
push
push
push
push
push
lea
push
call
mov
mov
mov
pop
rcl
imul
lahf
add
mov
add
add
push
fidivs
add
enter
add
pop
add
fcompl
cmpb
jbe
mov
outsl
mov
xchg
popf
add
sti
lcall
pop
call
push
push
lea
push
lea
push
call
mov
roll
jno
test
push
jmp
fldl
jbe
jmp
add
shll
clc
test
mov
jb
sub
pop
call
push
lea
push
push
push
lea
push
call
add
testl
fildl
lcall
je
repnz
pop
jno
int3
mov
test
add
jle
add
outsl
add
lock
add
mov
in
jae
fptan
add
lcall
inc
cld
lea
push
push
shl
add
push
push
pop
add
xor
shl
not
sub
sub
inc
rol
xor
pop
shr
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
add
mov
push
add
push
add
rolb
add
rcrl
add
push
mov
loopne
lcall
jne
push
lea
push
push
push
lea
push
call
add
add
data16
xchg
loope
jmp
mov
cwtl
leave
je
add
add
add
out
add
jbe
sub
andl
xchg
add
mov
call
push
push
push
push
call
push
pop
rolb
nop
add
add
mov
add
shrb
jnp
int
stc
stc
fdivs
add
add
jge
jns
gs
mov
mov
rcr
push
add
movl
push
clc
xchg
xchg
mov
add
add
add
push
push
lea
push
push
lea
push
push
call
push
xchg
mov
lock
mov
ljmp
roll
add
add
add
iret
in
add
add
aad
fldl
jecxz
lds
negl
lods
scas
add
in
add
out
cli
lds
jmp
add
mov
in
call
push
inc
pop
push
pushl
push
push
not
sub
push
and
add
sub
ror
sub
shl
sub
shl
pop
shr
shr
shl
add
pop
push
shl
pop
push
push
push
push
push
push
push
push
push
call
add
leave
jno
rolb
fnstsw
pushf
add
mov
pop
mov
jns
pushf
mov
std
add
cltd
xorb
add
out
add
add
add
xchg
rcrb
add
push
mov
aad
add
mov
pop
pop
stos
aam
sahf
clc
add
iret
push
sub
pop
call
push
push
add
add
push
and
add
inc
sub
inc
pop
xor
add
pop
push
lea
push
call
xchg
test
add
jnp
push
popa
test
pushf
add
jns
mov
add
add
add
add
xchg
js
add
mov
push
add
jne
call
push
push
lea
push
call
add
mov
jmp
xchg
add
add
cli
add
add
add
nop
pop
add
std
add
push
add
add
pop
cwtl
mov
add
in
add
add
push
add
lds
cld
xchg
sub
pop
push
push
push
push
lea
push
push
push
call
xchg
mov
mov
add
pop
ja
fnstenv
add
lret
addl
add
mov
add
loopne
pop
pop
add
jp
mov
call
ds
lea
loopne
sub
push
or
inc
add
ror
sub
lea
shl
sub
not
lea
pop
sub
dec
pop
push
add
add
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
lds
loop
cmpsb
add
add
test
cli
cmpsb
popf
add
mov
add
xchg
add
add
mov
mov
add
lret
add
mov
popa
mov
mov
add
jmp
add
out
add
pop
cmpsl
add
movsl
mov
sub
pop
call
push
lea
lea
pop
call
push
add
not
pop
jmp
push
push
call
lea
cwtl
add
roll
add
add
popa
mov
mov
add
jbe
add
add
in
jl
in
clc
pop
pushl
push
push
push
call
add
mov
mov
idiv
add
xchg
out
imul
xchg
lret
jbe
add
push
add
add
xchg
stos
add
mov
mov
add
jge
pop
in
add
stc
fwait
mov
add
out
add
xchg
pop
lds
add
mov
add
in
hlt
pop
mov
push
lea
push
push
call
add
add
xchg
hlt
in
mov
jnp
add
xchg
add
add
int3
fisubrs
add
add
add
add
mov
mov
add
jnp
pop
add
stos
add
add
test
nop
add
popf
clc
ljmp
xchg
lret
add
inc
add
push
sub
add
rol
shl
not
sub
add
add
pop
ror
xor
pop
push
dec
xor
add
pop
pushl
call
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
je
cmc
add
mov
add
addl
int
scas
scas
flds
fidivs
add
jecxz
jbe
lcall
add
cli
lock
mov
add
pushf
xchg
filds
sahf
add
add
movsb
jecxz
add
add
add
add
xchg
clc
add
lcall
add
fildl
jecxz
pop
call
push
push
add
add
sub
push
push
pop
add
dec
dec
inc
sub
sub
xor
ror
xor
pop
shr
xor
add
add
pop
push
push
lea
push
push
push
push
push
push
call
lods
jb
add
add
push
fldenv
mov
add
pusha
popa
push
add
andl
cwtl
mov
add
mov
ljmp
add
add
ret
pop
add
outsl
mov
add
in
loopne
lcall
jne
call
push
push
push
push
push
push
push
call
int
add
add
std
add
push
jmp
mov
mov
jne
stos
add
add
jb
fsubl
add
add
jns
jns
iret
xchg
incb
pop
cld
fisubrl
pop
jle
add
jle
jae
in
in
push
call
push
push
push
lea
push
push
push
lea
push
push
push
call
rcrl
out
add
lods
cmpb
xchg
mov
mov
add
movsl
add
push
add
add
add
push
mov
rcll
mov
add
mov
pop
add
jp
testl
sub
pop
leave
add
push
push
push
push
lea
push
call
addl
scas
loope
push
mov
test
cltd
loop
outsl
xchg
movsl
fwait
cli
jmp
push
add
mov
leave
add
pop
add
add
imul
jle
add
add
jne
mov
push
fldt
sub
pop
pop
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
push
jecxz
add
pushf
lea
iret
add
pop
add
xchg
add
mov
test
add
mov
testl
int
cmpsl
add
xchg
ret
jge
push
sub
pop
pop
pop
push
push
push
lea
push
push
push
lea
push
call
push
sti
push
add
jnp
cld
in
add
mov
add
add
add
add
testb
fnsave
add
imul
mov
xchg
cmc
add
mov
fldl
jl
add
out
in
mov
in
pop
push
push
lea
push
push
lea
push
push
push
push
call
test
push
add
stos
xchg
add
cwtl
jp
xchg
in
add
into
cli
iret
push
cmpsl
stc
lods
popf
shr
mov
xchg
nop
add
popl
filds
cmpsb
mov
aad
add
add
add
std
sub
pop
leave
push
add
add
shl
pop
add
push
push
push
push
push
push
call
outsl
add
mov
fildll
mov
lahf
push
fisubs
jmp
add
xchg
add
xchg
add
div
mov
mov
add
jbe
incb
add
clc
mov
add
mov
sub
pop
ret
push
lea
inc
shr
pop
leave
ret
push
push
call
add
add
add
add
in
xchg
add
out
add
rolb
clc
add
xchg
ret
add
pop
loop
ja
add
mov
add
add
push
mov
lcall
xchg
add
lcall
push
lea
push
call
lods
xchg
ljmp
mov
add
movsb
push
add
add
mov
add
hlt
add
mov
jge
add
add
popf
add
add
pop
loope
add
add
jl
cltd
icebp
aad
add
sti
int3
faddl
ja
in
clc
lcall
in
cmpl
jne
push
push
call
add
add
popa
mov
sbbl
aam
popf
pushf
add
scas
add
add
push
add
outsl
add
pop
mov
call
scas
add
in
clc
pop
mov
push
push
push
push
push
lea
push
call
add
sti
in
pop
add
fwait
jge
add
jbe
lahf
add
add
mov
mov
clc
add
mov
fyl2x
add
fildl
mov
add
add
add
add
add
pusha
add
fwait
scas
add
sub
pop
jmp
push
not
inc
pop
mov
push
xor
add
dec
inc
pop
and
push
rol
shl
xor
pop
xor
push
push
push
push
push
push
push
call
push
rcr
sbb
mov
mov
add
add
pop
xchg
popf
xchg
push
xchg
in
add
movsb
add
add
mov
std
mov
test
loop
in
in
xor
push
xor
xor
shl
pop
add
xor
push
sub
shl
dec
add
pop
dec
push
push
push
push
push
push
call
add
jns
xchg
mov
xchg
mov
add
add
into
sti
add
pop
add
jns
xchg
push
add
mov
add
add
add
addr16
pop
sub
push
push
push
push
call
add
mov
add
jge
mov
fcmovu
pop
add
test
mov
enter
add
add
mov
cwtl
into
gs
add
pop
pop
pop
xchg
mov
add
mov
add
add
data16
add
add
lcall
mov
push
call
add
std
xchg
add
xchg
add
aad
add
mov
std
add
add
add
pop
add
xchg
add
add
xchg
add
loope
mov
add
xchg
pop
push
fwait
add
sub
pop
sub
push
shr
not
shr
pop
pushl
pop
push
push
call
xchg
andl
push
add
icebp
add
lret
jmp
add
mov
je
mov
mov
pop
add
cmpsl
add
add
add
jmp
push
add
dec
pop
cmp
jne
push
sub
pop
mov
push
add
pop
lea
push
push
lea
push
push
lea
push
push
lea
push
call
add
ret
repnz
arpl
pusha
add
mov
push
add
jl
jno
jae
add
in
mov
xlat
xchg
push
add
xchg
add
mov
rolb
stos
faddl
shrl
fldenv
mov
lods
add
mov
pop
add
mov
popl
push
clc
test
popf
mov
idivl
in
sub
push
dec
xor
pop
mov
push
inc
pop
shr
push
rol
sub
rol
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
push
push
call
add
jmp
add
add
fadds
add
imul
push
filds
add
pop
pusha
xlat
add
add
push
add
xchg
leave
fldl
lcall
jmp
shr
sub
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
test
movsb
add
icebp
add
std
add
lcall
add
aad
pop
push
mov
add
stos
cld
add
lock
add
add
add
in
pop
movb
push
add
jmp
incl
add
mov
inc
add
push
push
push
lea
push
push
lea
push
push
call
jecxz
mov
fisubl
rolb
add
add
add
add
add
mov
add
add
rcrb
cld
nop
mov
add
lock
lock
shll
scas
add
enter
addl
fnstcw
add
pop
addr16
add
loopne
sub
cmp
jne
push
rol
xor
pop
leave
ret
push
lea
pop
push
push
sub
add
rol
pop
mov
push
lea
push
call
lahf
xchg
pusha
fildl
jmp
add
clc
lahf
add
add
out
add
add
lcall
add
jb
add
add
pop
jno
mov
pusha
cli
je
pop
push
lret
xchg
gs
in
clc
pop
add
push
push
call
test
loop
cltd
add
mov
push
roll
mov
add
mov
int
pusha
add
leave
scas
add
add
scas
add
add
add
loop
jno
loopne
jle
add
mov
mov
clc
lcall
push
push
xor
pop
push
push
inc
add
pop
push
push
push
rol
pop
mov
lea
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
cli
insb
add
jle
xchg
imul
jle
add
lcall
les
pop
notb
add
mov
add
test
mov
add
movsl
add
imul
add
ljmp
adc
add
rol
inc
pop
shr
add
push
push
push
call
xchg
mov
movsb
add
jnp
lahf
push
pop
add
enter
loopne
lds
lret
out
movsl
mov
mov
movl
stc
add
sub
pop
mov
push
push
lea
push
push
call
push
add
imul
pusha
jecxz
add
add
outsl
add
jae
ret
fdivr
add
scas
xchg
mov
add
popl
add
addb
pop
mov
out
push
sub
pop
add
mov
push
lea
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
loope
add
stc
add
mov
incb
mov
cmc
loope
pushf
call
xchg
add
add
ljmp
stc
mov
xchg
out
out
add
sub
pop
add
xor
push
push
call
addb
push
sti
addb
add
add
in
mov
xchg
addl
cmc
outsl
add
add
cli
jp
testl
movsb
insb
add
pop
pushf
add
out
jne
add
ret
push
cmpsl
pop
add
push
add
icebp
hlt
leave
add
in
clc
pop
mov
push
shl
lea
pop
and
push
dec
add
rol
pop
rol
rol
push
lea
push
push
push
lea
push
push
call
jmp
popa
add
mov
fsubrs
outsl
aam
insb
mov
jb
filds
add
jnp
roll
add
shlb
add
add
add
out
add
je
sub
pop
xor
push
lea
push
push
push
lea
push
push
push
lea
push
push
push
call
mov
jecxz
add
movl
add
mov
add
jle
mov
mov
loope
mov
add
cmpsl
add
lcall
cmpb
jne
push
lea
push
push
call
test
add
std
movsb
cmc
mov
stos
add
mov
jae
aad
pop
popf
add
add
rcll
add
mov
mov
test
testb
mov
add
jl
push
add
lea
bound
mov
aad
add
add
arpl
in
hlt
pop
add
push
ror
shl
pop
cmp
je
add
push
add
shr
pop
cmpl
jne
xor
push
ror
rol
pop
pop
push
shr
pop
pop
push
dec
add
pop
pop
push
shr
pop
pop
pop
push
add
shl
pop
leave
push
push
call
add
xchg
xchg
mov
mov
mov
insb
mov
loope
add
add
add
popa
jb
in
in
clc
pop
ret
push
push
push
push
push
lea
push
call
push
jge
add
mov
add
fadd
jp
push
bnd
test
je
add
lahf
jle
add
cmpsb
jae
incb
enter
mov
sub
pop
mov
push
sub
add
lea
pop
add
push
push
push
lea
push
push
call
pop
jp
lcall
sarl
add
add
xchg
add
pushf
popf
pop
loopne
ret
mov
ror
add
pop
push
push
push
push
push
push
call
jmp
add
ljmp
add
add
mov
mov
jbe
rol
clc
add
add
add
in
cmc
xchg
jecxz
mov
aam
ja
add
add
in
pop
push
add
push
dec
pop
mov
testw
push
xor
pop
pop
push
add
sub
add
pop
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
jp
jae
add
add
ja
rorb
filds
loope
jge
add
jl
add
mov
add
addl
add
add
add
add
add
out
add
hlt
push
ret
mov
out
mov
lcall
add
jmp
call
test
cmpsb
bound
icebp
add
add
fwait
push
add
add
idiv
add
xor
add
pop
les
mov
add
fdiv
divb
add
loope
sub
pop
push
call
push
pop
xor
push
sub
pop
pop
push
push
lea
push
push
push
push
push
call
add
adcl
add
add
add
out
jne
add
pop
rcrb
xchg
cmpsl
jae
mov
mov
data16
fnstenv
pop
jmp
fcmovbe
cmpsb
aad
add
pop
jbe
leave
add
add
jb
add
mov
sub
pop
pop
push
not
pop
pop
push
push
push
push
push
push
push
push
push
call
add
add
imul
push
add
add
test
nop
xchg
add
add
add
pop
leave
les
xlat
jo
jle
pop
push
jmp
add
jns
mov
pushf
out
in
add
hlt
mov
push
add
jl
jbe
pusha
mov
scas
add
sbbl
fcompl
pop
push
add
lea
pop
leave
push
sub
pop
ret
push
push
add
shl
not
dec
pop
mov
push
push
push
call
popa
mov
add
jge
iret
lret
mov
add
pop
pusha
mov
add
imul
add
sahf
in
add
roll
mov
std
add
add
add
push
add
sub
pop
add
push
push
push
push
lea
push
lea
push
call
add
fiadds
in
nop
jne
incb
add
add
jle
loope
aam
add
xchg
add
je
js
add
push
add
shrb
lcall
push
push
sub
lea
pop
push
push
sub
sub
shr
sub
pop
mov
push
push
inc
lea
pop
pop
push
lea
ror
add
pop
lea
sub
push
lea
push
push
push
lea
push
call
test
add
aad
mov
push
mov
testb
push
add
jl
imul
add
add
xchg
mov
popl
xchg
pushf
jbe
add
sub
pop
mov
shr
push
push
call
in
imul
ja
popl
add
imul
add
add
xlat
pushf
add
loope
add
xchg
loopne
mov
out
cmpsl
jne
movsl
sub
pop
add
mov
push
lea
push
push
push
push
push
push
push
push
call
add
aad
imul
popf
add
add
arpl
je
iret
loopne
mov
out
add
je
add
cltd
je
les
add
clc
in
stos
in
mov
enter
stc
movsl
jae
xchg
add
add
stos
xchg
mov
test
mov
pop
add
pushl
push
xor
sub
inc
shl
pop
popl
push
lea
push
push
push
push
call
add
std
pop
add
js
pushf
add
lret
jns
scas
add
mov
enter
pusha
add
add
lret
addl
xchg
int
movsb
add
add
loope
xchg
add
roll
add
jnp
push
push
lea
push
push
push
push
lea
push
push
push
call
add
lea
pop
hlt
outsl
mov
out
add
jmp
aam
arpl
popf
ljmp
jbe
mov
jae
add
stc
xor
push
ror
add
pop
lea
mov
push
push
call
add
mov
std
push
add
int
add
cmpsb
add
into
pop
xchg
add
sahf
in
add
jnp
insb
mov
pop
add
roll
jno
add
mov
mov
mov
add
lea
add
lods
fwait
pop
xchg
sub
pop
add
push
push
call
insb
add
add
cmpsb
add
js
add
jns
pop
jl
add
jns
out
add
pop
les
mov
add
mov
mov
mov
mov
jne
push
add
mov
add
mov
lcall
rol
pop
push
push
lea
push
push
push
push
push
call
fsin
xchg
add
add
xchg
add
mov
add
mov
jge
add
push
mov
imul
pop
mov
jle
aad
add
add
pop
add
add
mov
mov
add
jmp
jne
add
add
lcall
push
lea
push
call
scas
xchg
add
lds
lea
xchg
add
in
add
add
push
add
loopne
add
flds
enter
add
clc
lcall
push
push
push
push
push
call
add
pushf
add
jns
in
add
test
jo
add
add
test
add
mov
aad
in
in
pop
xor
push
add
pop
nop
push
push
push
lea
push
push
call
jecxz
add
add
call
add
fwait
add
jne
add
add
les
jl
add
fiaddl
add
lock
add
jl
data16
pop
add
xlat
lea
in
add
add
mov
add
aam
add
add
mov
push
pusha
sti
out
jno
add
inc
push
sub
add
pop
nop
push
push
lea
push
push
lea
push
push
push
push
call
add
lcall
add
jns
mov
add
add
mov
push
add
movl
js
adc
mov
add
mov
add
fs
addb
int3
lret
add
cwtl
pop
xchg
add
add
test
add
push
in
loopne
lcall
push
lea
xor
pop
cmpb
jne
push
push
push
push
push
push
push
push
push
call
int
in
add
addl
add
pop
stos
roll
add
filds
add
add
add
int3
add
add
popf
push
add
xchg
icebp
incb
test
mov
jbe
mov
sub
pop
add
push
pop
nop
nop
push
shr
pop
cmp
je
push
push
push
lea
push
call
fwait
mov
mov
add
jo
mov
cmpsb
add
add
mov
add
add
add
lcall
push
pop
nop
push
ror
pop
inc
nop
push
pop
nop
cmp
jb
push
rol
not
add
pop
xor
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
push
add
lods
addb
add
lcall
cwtl
add
mov
add
add
pop
in
add
jnp
add
mov
add
lock
mov
out
xchg
add
add
xchg
push
add
pop
add
add
in
in
pop
sub
pop
jmp
mov
push
push
lea
push
call
add
test
jmp
add
add
int3
mov
mov
add
add
cltd
cmc
lret
mul
shlw
shlb
xlat
fidivl
push
lods
jne
xchg
add
push
testb
test
lcall
rorl
mov
jb
pop
mov
push
lea
push
push
call
xchg
pop
les
add
add
add
add
add
jmp
add
mov
cli
test
xchg
mov
add
add
add
mov
add
add
add
lahf
lock
out
lods
popf
sub
pop
add
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
lea
push
push
call
mov
add
aad
add
xchg
add
add
loope
pop
stos
add
push
add
add
sbb
jle
mov
lcall
leave
push
add
shr
pop
xor
shl
push
add
sub
sub
pop
xor
push
push
push
push
push
push
push
call
aam
mov
movsb
mov
add
add
add
jns
js
mov
xchg
cld
je
add
lock
add
add
jl
in
in
lcall
loope
push
pop
xor
push
push
push
push
call
hlt
add
les
jl
add
add
scas
les
std
je
cld
mov
add
repnz
add
mov
int3
aam
add
push
addl
clc
add
push
add
xlat
fadds
add
add
add
add
jno
sub
pop
shl
xor
push
sub
inc
dec
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
push
call
add
bound
add
pop
mov
popa
out
test
add
hlt
int3
add
out
mov
aam
pop
into
push
sub
pop
add
push
push
lea
push
push
call
push
mov
jl
add
mov
loop
shll
cmpsb
xchg
addl
pop
test
in
jb
out
mov
add
add
push
add
lcall
push
shl
sub
rol
pop
pop
pop
push
sub
pop
pop
push
push
push
push
push
lea
push
push
push
call
add
in
add
mov
adcb
pop
add
add
shrb
add
addb
out
sti
mov
lcall
push
lea
push
push
lea
push
push
push
push
push
call
add
int
push
pop
lock
jne
add
mov
in
add
add
add
jle
add
add
int3
add
push
movsb
cli
add
add
push
add
pusha
add
repnz
into
int
cli
icebp
cmc
fsub
mov
mov
lcall
or
push
push
push
call
xchg
add
out
cwtl
jne
fldenv
add
add
jae
icebp
jecxz
add
mov
mov
jnp
add
add
jnp
add
jge
fs
mov
hlt
fstpt
std
ret
fucomi
in
mov
pop
mov
mov
jmp
test
in
clc
pop
mov
push
push
inc
dec
pop
push
push
push
push
lea
push
push
call
add
add
mov
mov
jns
add
push
add
add
add
icebp
add
aam
bound
pop
push
push
dec
sub
sub
shr
pop
mov
push
push
push
push
push
lea
push
push
push
call
add
sub
je
add
popl
cld
les
add
add
lods
add
mov
add
add
push
hlt
add
add
mov
loopne
lcall
adc
stc
pop
test
je
push
push
push
call
imul
add
add
add
add
incb
rcl
jo
lods
jne
add
arpl
push
loop
jge
add
testl
pop
je
add
mov
mov
sub
pop
mov
push
lea
push
push
lea
push
lea
push
call
jae
add
add
add
jmp
mov
stc
arpl
add
nop
nop
add
testl
add
ret
xchg
mov
add
add
add
je
add
add
shr
loop
imul
add
add
hlt
sahf
add
add
add
mov
mov
jns
sub
pop
test
je
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
mov
je
add
imul
add
add
add
int
xor
lret
test
mov
call
push
test
add
loopne
mov
out
add
lcall
testl
push
push
call
les
hlt
add
mov
add
mov
mov
add
std
add
mov
add
add
mov
add
add
add
add
xchg
add
sti
add
pop
cld
add
add
add
xchg
add
lcall
pop
push
push
lea
push
push
push
lea
push
push
call
add
iret
test
add
popa
add
jno
add
add
mov
aad
movsb
cmpsb
test
scas
imul
lods
jbe
push
add
stc
mov
test
out
add
lret
mov
add
add
push
stc
bound
jge
mov
jmp
add
mov
jb
fmul
add
lcall
push
sub
pop
cmp
je
push
sub
rol
pop
test
je
mov
push
push
push
push
call
xchg
mov
repnz
mov
add
push
lds
mov
add
add
add
jns
leave
jo
jb
add
add
add
jae
sahf
cltd
xchg
jge
std
insb
sti
add
add
loop
popf
mov
mov
xchg
loope
movsl
ja
xchg
fadds
pop
mov
in
lock
inc
cmp
je
push
shl
sub
pop
test
jne
push
shr
add
pop
xor
pop
push
push
push
call
add
iret
push
mov
mov
mov
add
into
fildl
mov
pop
pop
add
int3
add
fildl
xchg
add
jno
jl
jno
cmc
xchg
leave
ljmp
lcall
push
lea
push
call
xchg
push
mov
testb
push
faddl
xchg
add
insb
push
icebp
add
add
scas
out
add
xchg
movsb
jl
add
jb
in
clc
lcall
push
push
push
push
push
call
add
xchg
add
xchg
add
aad
fstpl
add
shll
jno
add
add
rolb
push
add
in
pop
pop
leave
push
lea
push
push
push
call
pusha
add
pop
add
add
xchg
fnsave
add
add
push
add
add
icebp
jl
add
gs
lds
mov
int
stos
in
xchg
pop
filds
loopne
add
jno
add
add
push
add
xchg
pop
sub
pop
ret
mov
push
push
push
call
pop
incb
add
jecxz
jp
add
mov
add
add
add
lods
add
test
pop
lock
mov
add
hlt
mov
ret
js
sahf
lret
pop
cld
icebp
add
testl
add
lahf
out
add
jo
fxch
out
xchg
add
add
push
push
push
lea
push
push
push
push
call
test
mov
subb
add
add
mov
cwtl
add
add
loopne
scas
je
add
xchg
loopne
add
gs
pop
add
add
mov
in
in
cmp
jne
push
sub
xor
shr
add
pop
lea
mov
push
pop
test
je
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
jae
add
add
popl
xchg
mov
add
jae
add
test
test
roll
mov
add
mov
push
add
sub
pop
add
push
add
pop
cmp
jne
push
push
call
mov
loope
add
scas
shrb
mov
mov
cltd
out
jecxz
mov
add
popf
add
movsb
jo
push
add
jnp
pop
mov
xchg
mov
add
enter
loope
jp
add
add
clc
pop
mov
push
push
push
lea
push
call
add
leave
pop
jge
call
loop
stos
loopne
add
lods
cltd
add
jb
mov
mov
cli
mov
mov
xchg
jns
add
ret
lods
add
push
add
add
js
mov
add
roll
add
in
lock
lcall
rorb
mov
rol
sub
add
shl
pop
mov
add
push
shr
shl
sub
pop
cmp
je
push
dec
sub
sub
pop
jmp
xor
push
sub
pop
pop
push
not
shl
add
inc
pop
pop
push
push
push
push
call
les
add
add
add
add
add
into
fstpt
out
mov
add
cltd
lcall
out
add
jnp
andl
add
add
xlat
int3
out
jne
addl
push
push
call
add
mov
add
mov
add
add
nop
pop
xchg
fiaddl
addl
pop
aam
in
mov
mov
sub
pop
pop
push
push
call
ret
scas
loop
fs
mov
in
add
fdivr
pop
xchg
mov
rolb
jge
mov
add
mov
add
test
loope
add
mov
push
add
in
into
add
fiaddl
add
test
jl
fldl
mov
test
jecxz
add
sub
pop
leave
push
sub
dec
pop
ret
push
lea
push
call
mov
add
fs
push
les
xchg
out
mov
jnp
mov
add
mov
sarl
pusha
xchg
cmpsb
rcrl
lcall
lcall
inc
lcall
xor
pop
pop
push
push
push
lea
push
lea
push
lea
push
push
call
sahf
movsb
addl
push
hlt
data16
add
mov
popa
movsb
out
add
xchg
add
add
add
mov
pop
pop
push
push
push
push
push
lea
push
push
push
push
call
imul
push
add
add
add
popf
test
lahf
jge
add
add
jmp
scas
jb
loopne
cltd
addl
sub
pop
pop
push
push
push
lea
push
push
push
push
call
ljmp
add
lret
add
add
xchg
push
pop
mov
add
gs
push
pushf
les
add
xchg
ret
add
lds
cmc
add
pop
add
add
push
add
xchg
add
int3
add
add
test
in
in
lcall
ret
push
lea
push
push
lea
push
push
call
push
sti
scas
pushf
pop
xlat
rolb
fst
gs
add
add
jae
xchg
jno
mov
cmc
add
push
iret
add
add
stos
call
lret
add
add
add
push
sub
pop
mov
push
xor
pop
pop
pop
push
push
push
push
push
lea
push
push
push
push
push
call
ljmp
fnstenv
add
lock
pop
movsl
add
jbe
cmpsb
mov
rcr
add
in
add
add
add
pop
jne
jmp
mov
imul
add
add
pop
add
add
je
add
jne
enter
jns
movsb
aam
sub
pop
pop
pop
push
shl
pop
leave
push
shr
add
pop
ret
test
jae
xor
push
test
jo
test
jb
push
pusha
jae
xorl
inc
shll
test
jae
je
jb
inc
mov
loopne
dec
sbb
cli
sbb
scas
outsb
incl
pop
push
lea
jg
push
dec
lock
lcall
jns
jle
cmpsb
in
divl
or
rclb
inc
lret
jns
jmp
add
loopne
pop
jmp
jecxz
xor
or
rorl
lret
sbb
stos
cmpsb
imul
xchg
into
and
mov
jnp
inc
sbb
adc
ja
fs
movsl
idiv
testl
push
pop
push
xchg
push
addr16
pop
fwait
mov
les
cltd
add
scas
mov
mov
pop
jecxz
mov
lods
or
sub
sub
xchg
cmp
mov
xor
jg
addr16
scas
ret
hlt
clc
and
cmp
mov
xor
or
jg
cmpsb
out
push
pop
shrb
aam
test
xchg
jg
js
test
cld
aam
test
popa
adc
les
mulb
inc
push
cmp
pop
fistpl
sub
test
sub
cmp
shll
inc
in
sarb
movsl
xorl
xchg
adc
pop
jle
gs
jecxz
addb
or
incl
ss
call
and
leave
rcrl
cmp
mov
rclb
loopne
push
inc
pop
test
ja
push
je
mov
cli
lret
inc
mov
xchg
out
mov
xlat
jb
jno
popf
cltd
cmp
jge
out
xlat
ss
mov
sub
lock
ja
inc
push
add
jl
xor
imul
xchg
incb
sub
add
and
lods
xchg
pop
clc
or
cmp
leave
inc
inc
repnz
xchg
lods
js
xchg
loope
cli
pop
pop
xchg
and
push
popf
mov
adc
fst
xchg
loope
ja
int
jno
jge
sahf
jecxz
cmp
inc
mov
fimuls
decb
sub
mov
into
mov
xor
jge
call
jecxz
dec
daa
and
adc
and
push
jne
sbb
sbb
and
sub
leave
mov
jb
jb
rol
sub
push
xor
divl
add
push
rorb
mov
add
add
adc
fwait
popf
mov
cmp
rcrb
test
push
or
rol
aad
pushf
pop
dec
add
cld
sbb
fbstp
push
int
xor
push
dec
imul
shlb
test
lea
sbb
inc
add
jnp
pop
lds
jne
fnstenv
pop
cmp
shrb
mov
mov
jmp
ficompl
call
test
ljmp
inc
int
mov
int3
push
mov
out
aam
mov
jbe
fdivrl
lret
xchg
push
mov
ficoms
insl
dec
subb
xchg
pop
pop
jmp
adc
or
cwtl
cltd
shrb
add
sub
aas
inc
into
mov
push
mov
sbb
out
adc
ret
sub
pop
xchg
push
pusha
pop
outsb
jbe
jb
mov
ret
xchg
cmpsb
imul
push
mov
test
int
mov
mov
jnp
mov
xorb
loop
ficomps
sub
mov
xor
xchg
mov
mov
in
adc
aaa
daa
fwait
retw
push
xchg
icebp
sbb
sbb
loop
mov
mov
in
rorb
mov
dec
mov
pop
lods
icebp
repz
stc
ficoms
dec
lods
rorl
lret
cmp
jle
movsb
xchg
cmp
and
das
aas
test
out
movsb
adc
jle
or
addr16
mov
insl
addr16
sub
fadd
sbbl
sub
pop
stos
mov
mov
popf
jle
mov
mov
inc
aad
sahf
fsubs
bsf
adc
adc
jae
push
pop
mov
xor
inc
ljmp
in
iret
inc
shll
mov
aam
add
fsubrs
xchg
mov
inc
insl
ss
or
pop
movsb
cmc
bound
jbe
jle
mov
into
loopne
mov
push
pop
xor
addr16
aad
or
das
jg
shl
sub
bound
jbe
inc
in
mov
pop
bound
mov
cmpsl
cmp
stc
js
dec
jp
movsb
int
push
popa
dec
push
test
and
test
xor
rclb
xchg
daa
jnp
mov
and
outsb
dec
dec
fistpll
adc
push
sub
gs
pop
sub
ror
and
sahf
cmp
cltd
lea
fnop
fadd
les
adc
sub
fcoms
inc
ljmp
mov
fwait
int
out
repz
mov
inc
push
dec
loopne
pop
xor
inc
outsl
andl
js
ljmp
cmp
lcall
cld
popf
mov
pop
outsl
int3
mov
lods
jbe
int
out
mov
cmp
mov
cmp
pop
ret
cld
mov
out
jge,pn
adc
ljmp
movsb
inc
and
in
cmpsl
test
jne
repnz
out
mov
jbe
test
sahf
shl
test
aam
insl
or
fildl
stos
shlb
adc
aaa
test
cli
fcmovnbe
les
pop
lret
mov
lock
es
push
fmuls
test
sub
jp
cmc
push
mov
je
je
out
push
jne
pop
or
inc
jne
push
scas
clc
decl
int
sbb
hlt
mov
cmpsb
add
pop
je
cmp
fwait
stos
outsl
and
subb
cmp
in
mov
mov
pop
inc
incl
enter
or
cmp
call
sbb
aas
mov
xor
xchg
loope
ja
test
nop
repnz
jge
push
cmp
mov
in
push
out
push
jb
cs
push
or
fstl
scas
popa
je
mov
daa
lret
jge
mov
mov
mov
jmp
sbb
and
jns
xchg
test
cwtl
call
push
inc
ja
stos
mov
fisttps
shr
das
jmp
lock
add
sub
xlat
adcb
sub
data16
jl
bound
mov
leave
adc
sti
scas
cmpsb
popa
stos
or
pop
inc
sbb
jg
mov
cli
jb
xchg
jl
pop
mov
mov
daa
jmp
pop
xor
dec
mov
cmpsb
int3
ret
ds
lret
je
filds
dec
lea
jmp
std
movb
jp
std
cltd
lods
outsl
cmp
xchg
mov
data16
push
ds
sub
xchg
jle
mov
prefetcht0
call
mov
arpl
adc
mov
mov
int3
xor
inc
xchg
sbb
xor
jo
sbb
popl
movsl
sub
add
popf
jp
int3
jb
mov
lea
sbb
clc
imulb
cmpsl
stc
popl
xchg
sbb
adc
dec
and
xchg
mov
sbb
mov
add
pop
mov
inc
add
daa
repnz
mov
outsb
mov
push
imul
inc
dec
dec
cmpl
push
into
icebp
jecxz
cli
jge
pusha
lods
dec
sbb
aas
sti
rorl
jecxz
mov
cmpb
divl
out
sti
xchg
shrl
or
mov
inc
adc
pop
xor
jl
icebp
lahf
mov
inc
sub
xor
ljmp
jbe
pushf
or
mov
aaa
dec
loope
cmp
push
inc
das
insl
dec
xchg
pop
add
cld
enter
dec
call
lret
push
outsb
cmp
subl
sbb
push
fs
jbe
addr16
jno
incl
aas
arpl
fsubp
push
push
push
pusha
stos
pop
or
inc
scas
cs
rcr
pop
inc
add
das
dec
cs
jne
subb
mov
push
mov
mov
sbb
sbb
push
cmp
inc
and
cmp
mov
sub
mov
fmull
mov
and
shll
mov
sbb
cs
push
sub
jns
cmp
xchg
push
pop
iret
mov
xor
inc
or
out
pop
mov
jge
xor
mov
es
cmp
cmpsb
or
and
movsl
aad
push
cld
sub
mov
lea
xorl
fwait
cli
test
les
sbb
out
int
adc
add
push
in
out
dec
jl
flds
push
pop
lret
lea
fmuls
mov
jecxz
add
sbb
stos
and
dec
jmp
push
sti
mov
mov
xchg
xchg
push
cmpsl
aaa
out
pop
mov
ficomps
mov
cmp
xchg
push
dec
jmp
cmp
push
dec
xor
sub
mov
ret
push
loop
insb
adc
iret
pop
test
xchg
das
cmp
popa
iret
or
repz
cmp
dec
dec
mov
jbe
dec
imul
lock
mov
and
daa
push
fcmove
xchg
ret
int
inc
push
insb
pop
sbb
arpl
inc
pop
adc
xchg
sub
ja
test
mov
addr16
mov
jle
xchg
or
inc
xchg
jne
and
iret
mov
sub
lds
int
push
xor
leave
pop
popf
not
ret
and
mov
and
bound
loop
sub
cmp
cltd
rorl
sub
call
shl
stos
loop
jns
sbb
mov
fdivl
scas
sub
sbb
xchg
data16
mov
mov
cmc
pop
xor
xchg
pop
aad
and
pusha
sbb
mov
sbb
roll
push
stos
loop
arpl
dec
sbb
stos
fdivrp
jge
shl
cwtl
outsb
xor
dec
xchg
jmp
repz
and
xchg
addr16
mov
xchg
cmp
jae
mov
insl
idivl
xor
lret
push
jb
fistpl
je,pn
out
ror
inc
or
je
fwait
jae
push
scas
iret
xlat
and
mov
scas
inc
gs
mov
mov
push
rcr
add
test
pop
into
mov
inc
lock
jg
push
dec
inc
sbb
add
dec
mov
dec
adc
mov
and
jmp
xchg
ja
adc
mov
sub
out
shlb
cwtl
jle
jle
xchg
shlb
fcmovnu
or
cmp
xchg
movsb
cmc
aas
or
dec
int
je
rcl
in
int3
sbb
xchg
xchg
mov
cmp
dec
push
cmpb
and
mov
cmp
outsl
adc
icebp
dec
outsl
xchg
je
cmp
imul
fistl
adc
pushf
adc
into
fadds
cmp
xchg
sbb
push
jmp
sbb
jle
xchg
in
test
add
mov
std
adc
cld
jle
shrb
xor
pop
dec
dec
inc
pop
pop
ss
fldt
imul
rolb
pop
shl
pushf
mov
pop
mov
ljmp
mov
into
lods
pop
xchg
inc
lcall
and
mov
and
sahf
ja
mov
sub
mov
sbb
sti
jle
cmp
popa
add
jns
push
lcall
in
rolb
lret
push
lret
or
loope
push
insb
inc
shl
push
int
push
int
daa
iret
mov
cli
outsb
mov
adc
cwtl
add
inc
int
sbb
fisubrl
test
enter
cmp
mov
pop
xor
fistpll
rcll
int
mov
jge
adc
sbb
stc
pop
aad
lock
stos
outsl
xlat
arpl
call
daa
adc
das
loopne
pop
xor
das
ljmp
stos
lods
adc
pushf
clc
cmpsl
adc
add
clc
and
jg
aas
adc
dec
add
je
ljmp
sub
cmp
arpl
in
inc
outsl
jmp
in
dec
xor
pop
adc
subl
xchg
adc
lret
push
lds
add
addr16
lret
stos
scas
sub
mov
lods
sbb
clc
and
daa
add
inc
sub
inc
sbb
xchg
iret
dec
int3
cmp
pop
mov
cmp
call
mov
pop
jl
and
inc
loopne
xchg
or
mov
fimuls
loope
jmp
dec
imul
mov
cmc
inc
inc
lods
aam
xor
pop
fs
outsb
xchg
xor
shrb
stc
imul
xor
roll
dec
in
adc
xchg
lea
fs
aaa
cli
js
cwtl
xor
push
mov
movsb
jb
mov
int
inc
xor
xchg
popf
pushf
inc
pop
sub
daa
mov
add
movsb
cmp
sbb
iret
lcall
mov
fsts
dec
inc
mov
pop
enter
fistpll
cld
sub
push
fcmovnu
in
hlt
call
dec
or
dec
mov
nop
dec
adc
and
add
jmp
jne
fwait
mov
jmp
cmc
cli
or
loope
push
jl
flds
push
adc
jo
pop
inc
mov
jge
clc
cmp
mov
divl
mov
dec
xor
sbb
inc
jne
push
xchg
jb
add
cltd
sbb
mov
ja
lock
mov
mov
shlb
int
adc
push
cmpb
filds
ss
sub
push
movsl
jb
std
dec
jae
push
imul
in
ja
das
add
cmp
bound
ret
xchg
xchg
or
out
test
mov
cmp
cmp
ret
mov
outsl
aam
jo
cmpsl
dec
jno
js
lea
jle
add
dec
cmc
ss
pop
pop
mov
dec
aad
loope
xchg
and
imul
jg
cmp
sti
add
lret
inc
popa
mov
jo
out
aas
pop
stos
int
push
ljmp
sub
fidivs
adc
add
lret
jns
insl
lret
adc
scas
mov
dec
fcomps
jle
and
fidivs
cmp
movsl
mov
icebp
inc
adc
std
in
jo
and
xor
mov
mov
fidivl
mov
push
adc
dec
pusha
jo
xchg
inc
out
bound
fcoms
pop
loopne
jmp
in
fidivrl
psllw
bound
add
adc
adc
and
cmp
pop
adc
lea
out
mov
rcl
xchg
fstpl
push
mov
adc
imul
cmp
std
ds
sbb
addr16
mov
jnp
lahf
or
scas
lcall
or
daa
lcall
mov
loopne
and
mov
test
and
mov
fwait
xor
mov
clc
nop
and
ds
stos
sub
push
inc
in
cs
frstor
sbb
sub
daa
data16
add
je
jge
xchg
mov
add
ret
lahf
xchg
sub
sbb
jns
jecxz
dec
jmp
xchg
fidivs
mov
mov
jecxz
daa
pop
mov
data16
lds
and
loopne
insb
imul
incl
js
xor
mov
xchg
xchg
int3
mov
xor
pusha
pop
mov
xchg
mov
fcomps
nop
inc
pushf
das
cmc
cmp
lea
mov
pop
xchg
lock
insl
outsl
jl
imul
add
or
mov
jle
je
push
cmp
and
mov
repz
ret
mov
shll
adc
stos
sbb
adcl
inc
cmc
dec
pop
jmp
mov
cmpsl
call
and
stc
inc
or
mov
cmp
and
inc
push
int3
and
jg
dec
or
rol
xor
popa
mov
dec
dec
mov
push
inc
loope
ja
pop
xchg
shl
clc
and
pop
je
lret
xor
sub
mov
xor
sub
dec
dec
cmpb
mov
lds
push
je
mov
cmp
mov
addr16
cmp
sub
daa
cmp
movb
xchg
popf
push
xchg
xor
mov
mov
sub
idiv
imul
xchg
mov
test
aas
js
mov
lret
ret
jg
push
jb
decb
inc
push
lret
push
pop
movsb
xchg
jle
xor
jmp
dec
imul
or
hlt
or
movsl
sub
push
je
xor
add
mov
or
cmpb
xor
adc
mov
clc
jmp
gs
inc
movsl
push
mov
scas
jo
jns
dec
cmp
in
repz
push
cmp
sbb
sub
xor
sub
shrb
cmp
clc
out
cmp
sbb
filds
in
jmp
cmc
or
leave
repz
nop
or
pop
imul
jg
int
arpl
data16
repz
xlat
mov
pop
sbb
push
jp
fcoml
sti
mov
push
insl
pop
mov
scas
aad
fsubr
cltd
xchg
pop
aad
clc
aaa
push
pop
je
stos
dec
jno
mov
push
inc
xor
jmp
inc
xor
pop
pop
out
movsl
and
pushf
test
or
lock
dec
mov
sub
xor
mov
fdivrs
mov
push
test
xor
jle
sub
dec
adc
xchg
les
and
mov
imul
or
xlat
addb
lods
push
cmp
sub
or
mov
ret
pop
cld
test
lcall
push
sub
jbe
mov
and
mov
sbb
aaa
xchg
out
bound
adc
out
int3
add
adc
jp
xchg
sahf
dec
mov
push
popf
lret
mov
out
icebp
dec
sub
cmc
pop
add
aam
xor
sbb
xchg
pop
dec
decb
bound
jbe
outsl
inc
jmp
sub
lods
jns
push
ficompl
pop
cltd
dec
push
ret
mov
dec
jb
adc
aam
pop
dec
shl
dec
adc
and
dec
adc
repz
xchg
call
dec
fcmovb
add
lods
test
pop
pusha
and
test
imul
mov
arpl
in
fwait
add
lret
xchg
clc
test
sub
lcall
xchg
pushl
inc
and
jno
leave
repz
mov
xor
add
fisubrl
movsl
xorb
xchg
mov
daa
push
sub
xor
mov
orl
ja
int3
mov
movsl
aaa
insb
push
push
jno
dec
bound
sub
sub
ds
outsl
lret
ljmp
push
adc
cmp
cli
and
lods
call
pop
jae
dec
xchg
mov
rcrl
sub
jmp
and
cmp
dec
mov
lahf
arpl
adcb
in
pop
out
out
adcb
jae
push
cmpsl
pop
arpl
xchg
test
mov
inc
xchg
push
imul
rcl
pop
fwait
push
push
mov
or
mov
sbb
push
andl
pop
push
dec
fldlg2
movl
push
pop
out
popa
fdivr
shrb
loopne
xor
imulb
incb
push
dec
test
dec
rorl
movsb
js
jl
lods
xlat
xchg
mov
lods
dec
ficompl
pusha
repnz
sti
pmulhw
pop
iret
orb
push
popf
filds
mov
mov
sbb
mov
push
outsl
jns
add
jb
xchg
int
inc
push
aaa
call
and
jg
idivl
and
mov
cmpsb
sub
or
aam
inc
decl
sbb
mov
xor
fists
lods
add
ds
or
mov
pushf
jbe
dec
sub
mov
mov
or
sbb
enter
jnp
fwait
push
jns
cwtl
rcrb
test
shll
adc
mov
cltd
xor
jne
test
push
in
inc
fcmove
push
push
push
lock
out
jmp
mov
fmul
add
xchg
std
popf
push
test
xchg
and
cld
pop
stos
adc
and
fildl
cmp
lcall
push
inc
rorl
inc
adc
sub
xchg
xchg
inc
test
and
mov
mov
lcall
push
add
push
shll
mov
cld
addr16
dec
dec
mov
repnz
xchg
or
lods
push
push
fwait
jge
dec
mov
leave
addr16
jns
sti
inc
es
orl
pop
in
and
insb
dec
xor
adc
push
push
sbb
mov
or
and
jae
popa
mov
outsl
arpl
ficomps
jmp
sahf
aaa
push
shlb
inc
fmul
cwtl
insb
or
mov
andl
mov
sub
add
stc
dec
imul
xor
imul
mov
xor
out
push
hlt
int
lods
mov
stc
jl
xchg
aam
ret
icebp
lcall
dec
push
rcr
imul
adc
jo
mov
add
pop
pushf
sub
pop
icebp
in
jge
adc
and
mov
das
inc
push
mov
push
mov
adc
dec
rolb
lds
jg
frstor
outsl
sti
std
aaa
inc
sub
fists
pop
inc
mov
mov
ljmp
pop
adc
mov
decl
pop
test
enter
clc
mov
call
ljmp
add
jmp
xor
ss
xchg
inc
inc
stos
notb
jecxz
mov
push
jbe
adc
mov
sti
xchg
pop
xchg
loopne
push
mov
pop
adc
push
jo
in
ss
cmpsl
or
and
shrb
daa
adc
ror
pop
lock
mov
rcl
cmp
popf
movsl
fimuls
into
adc
cmp
pop
ret
jno
jae
adc
cmc
mull
inc
jg
jb
or
lea
mov
test
inc
sbbl
pop
jae
sahf
mov
dec
icebp
clc
in
sbb
add
jb
sub
in
push
dec
push
jnp
dec
or
push
xchg
xchg
mov
sbb
pop
jb
dec
xchg
test
and
and
js
push
insl
shlb
movb
pop
mov
and
mov
fsts
lods
aam
xchg
lods
xlat
pop
push
xchg
lret
popa
push
loopne
cli
js
cmp
and
push
jne
push
out
daa
jmp
jns
sub
xchg
mov
lock
adc
out
shrb
icebp
fs
sbbb
mov
jle
sub
add
push
rcll
pop
scas
and
scas
stos
fisubrs
mov
rcll
addr16
lea
cmp
ja
lret
sbb
mov
out
mov
lods
jmp
ret
adc
rorb
xor
and
jb
and
dec
mov
into
pop
dec
push
add
sbb
inc
mov
cld
rcl
bound
mov
mov
rolb
add
xor
dec
in
and
pop
jg
hlt
pusha
or
and
movsb
std
fisttpll
mov
call
ja
fcoms
movsl
xchg
push
popf
repz
enter
jae
out
fbld
int3
aaa
dec
loop
dec
jle
roll
push
mov
insb
stos
pop
jno
xor
shrl
sub
adc
push
jp
xchg
cmpsb
out
cmp
xorb
push
xchg
add
push
xchg
xchg
out
sub
sub
mov
sbb
fsubrl
cld
pop
jo
je
xchg
fmul
test
push
dec
pop
into
ficompl
or
mov
ja
adc
lea
inc
ja
mov
pushf
movb
int
fs
mov
mov
dec
and
mov
push
pop
pop
jle
pushf
aad
in
loopne
add
inc
clc
inc
xchg
and
pop
subl
cmp
lds
pop
ficompl
pop
mov
dec
mov
xor
jmp
and
out
popa
in
daa
jno
aad
mov
mov
jb
test
jp
mul
inc
mov
adc
enter
aaa
jb
dec
inc
jp
sub
mov
mov
movsb
roll
xorb
cld
xchg
andb
fstps
lods
adc
inc
cmp
lods
push
popf
movsl
mov
push
cmp
cmp
incb
outsl
ds
and
xchg
mov
insb
aaa
mov
jae
jl
sub
cs
sahf
mov
cmpsb
sub
jno
or
or
cld
mov
cli
fldcw
pop
push
xor
cltd
mov
or
repnz
push
insl
sbb
dec
lock
sub
pusha
cmpl
sbb
jmp
ljmp
call
sbb
push
loopne
stc
adc
out
imull
fwait
add
gs
inc
add
mov
sbb
loopne
enter
mov
sub
dec
sar
stc
or
adc
shlb
mov
mov
cmp
pushf
add
stos
test
dec
loope
xchg
dec
ja
outsl
inc
or
imul
cmp
and
lds
push
loop
je
lea
int
jb
xor
lods
mov
or
cld
add
adc
es
push
lds
in
lahf
test
mov
and
outsb
adc
leave
imul
inc
and
inc
scas
leave
addr16
in
mov
pop
xchg
ss
into
test
fucomip
push
fisubs
lcall
add
clc
xor
sbb
push
insl
xchg
inc
js
in
sub
popf
dec
mov
mov
sbb
mov
inc
stos
mov
and
mov
insb
divb
enter
xchg
jecxz
dec
notb
lock
inc
xor
sbb
push
movsl
mov
mov
loopne
xor
pop
enter
fwait
fs
pop
ja
mov
xor
sub
mov
cmc
cltd
pushf
addr16
and
lea
cltd
into
mov
mov
xor
fidivs
lret
sbb
addl
xchg
or
jo
dec
and
subl
cmpl
lea
pop
dec
js
pop
aas
das
aam
adc
add
ss
push
xchg
data16
mov
cmp
stc
adc
pop
jbe
adc
sbb
add
inc
sub
les
adc
jbe
push
dec
jae
ja
out
mov
pushf
testl
jb
xchg
pop
lahf
pop
test
add
lods
mov
movsl
mov
mov
push
sar
int3
jg
pop
shl
inc
loopne
xor
aad
push
ror
insl
xchg
cmp
mov
insb
mov
xchg
jp
add
inc
stc
bound
repnz
les
stc
mov
and
into
push
les
int
add
inc
int
jg
aas
pop
in
fbld
xor
das
mov
mov
es
stc
les
aas
fwait
adc
ljmp
mov
sub
in
sub
cmpsb
xor
into
dec
inc
jecxz
fcompl
mov
mov
out
mov
iret
lcall
pop
dec
jo
jge
sbb
in
jge
pop
daa
mov
jne
dec
jl
lret
xchg
rorb
test
and
dec
mov
inc
mov
shll
xchg
outsl
jns
and
call
lods
out
aad
mov
hlt
pop
adc
mov
add
ja
leave
lret
in
stos
test
pop
add
mov
adcl
xor
jbe
rol
or
jl
jp
gs
or
movsl
pop
push
adc
adcl
mov
xor
lea
fisubs
add
icebp
jl
ret
add
push
jmp
les
in
cmp
sub
dec
pop
outsb
dec
xchg
fidivrl
pop
mov
xchg
xor
fdiv
pop
add
outsb
into
je
leave
mov
mov
fadd
sub
inc
xor
mov
int3
pop
sbb
mov
jle
and
push
mov
lcall
insl
jbe
stc
outsl
mov
push
and
add
add
movsl
cs
mov
mulb
aad
cmp
repnz
testb
inc
out
fisubrs
push
mov
sub
and
xor
sub
mov
ds
filds
lock
cmp
mov
mov
xchg
push
or
es
lea
xchg
popf
loop
dec
and
jns
adc
xchg
pop
jnp
mov
mov
daa
or
cmp
cmpsl
movsb
inc
sub
pushf
sbb
in
mov
cwtl
jnp
jle
test
fsubrs
inc
shrb
stos
cltd
inc
mull
cmpsl
jno
jl
cmp
sub
popa
scas
push
jnp
fldt
inc
sahf
fsubp
or
mov
cmp
ret
ljmp
pop
sub
mov
repz
mov
or
test
mov
daa
xor
xor
ds
xor
push
shrl
fmulp
aad
rorb
push
sbb
popa
jb
out
out
or
push
repz
xor
and
aad
jp
jns
test
cs
jbe
imul
in
pop
aam
popa
cmc
mov
sub
pop
mov
dec
add
sbb
add
cmc
mov
jp
leave
mov
sti
cltd
dec
pop
pop
fists
cli
inc
sti
fbld
sbb
dec
inc
ss
xchg
xor
xchg
xchg
lods
out
or
and
addr16
lock
insl
mov
inc
in
rolb
in
aad
loopne
push
insl
lock
inc
pusha
stos
mov
jae
stos
sbb
lock
mov
mov
movsl
add
fildl
dec
insb
mov
xor
xchg
int
pushf
mov
mov
jne
or
mov
xchg
leave
push
into
aam
inc
cld
push
mov
mov
adc
jo
or
sub
or
aaa
test
pusha
sbbl
pop
lret
inc
into
pop
mov
dec
push
adc
xorl
pop
cmc
push
mov
rclb
test
cmpsb
cs
loopew
push
cmp
popf
aaa
sbb
ss
dec
jno
pop
or
dec
xchg
out
bound
inc
aaa
imul
les
ss
icebp
dec
aam
movsb
addr16
pop
jp
lods
cmp
or
enter
call
jg
mov
pop
sti
mov
sahf
inc
das
jge
in
gs
mov
cwtl
adc
jp
sub
shl
mov
sub
mov
es
scas
sbb
and
pop
adc
ljmp
sti
mov
call
xor
jl
lret
lock
cmc
xor
pop
pcmpgtd
mov
gs
sub
inc
pop
in
push
nop
jp
lahf
leave
hlt
aas
lret
inc
dec
push
xchg
inc
pop
sub
pop
in
or
add
jne
out
bound
sahf
push
leave
jl
cmp
inc
hlt
decb
bound
jp
jbe
in
leave
mov
sbb
inc
inc
pop
dec
sbb
cmpsl
daa
aad
stc
bound
add
out
xor
sub
test
jg
sbb
stos
aaa
dec
adc
and
cmp
cwtl
gs
repz
je
inc
jmp
adc
lds
test
test
ds
stos
repnz
lret
cmpsl
cmp
insl
pusha
movsb
bound
dec
sub
lds
adc
or
jae
divb
mov
icebp
inc
je
cmp
cmpsl
add
dec
dec
or
out
mov
cmp
lds
sub
inc
push
mov
jne
int3
push
xor
pop
mov
and
xchg
in
je
decb
ds
dec
adc
out
rcll
mov
ds
xor
sub
xor
addl
loope
sbb
movsl
sbb
fcoms
xchg
push
sub
mov
div
pushf
push
lods
mov
mov
mov
ja
sbb
aad
mov
outsb
inc
pop
cmpsb
pop
mov
and
outsl
das
sub
mov
or
cmpsl
or
pop
and
nop
pop
jne
jb
stos
pop
gs
lcall
fdiv
sbb
jecxz
in
mov
mov
insb
aas
call
adc
fidivrl
stc
loop
dec
sub
lods
xchg
lret
push
data16
shl
or
sbb
xchg
in
into
in
add
mov
push
mov
dec
jge
outsb
ret
sahf
add
mulb
out
xor
mov
sbb
mov
arpl
and
int3
adc
fdivl
addr16
es
sbb
sub
movsb
cmp
das
push
mov
scas
cmc
mov
movsl
xchg
xlat
pop
in
aam
jg
jecxz
add
jp
insb
xor
shlb
jmp
mov
cmp
nop
and
fwait
test
mov
and
sub
into
daa
aam
outsl
in
inc
das
push
xchg
lods
mov
pop
ss
pop
inc
adc
or
xchg
ret
aad
ror
dec
cmp
fwait
hlt
xor
xchg
enter
cmp
push
rolb
cmp
add
pop
xlat
in
xor
call
pop
pop
rolb
xor
push
cmp
mov
iret
in
xlat
fisttpll
adc
arpl
imul
mov
pop
ficoms
or
pop
add
sbb
call
push
mov
and
fisttps
lret
fs
and
push
xchg
iret
jle
and
adc
icebp
xor
insl
mov
data16
lret
bound
ret
out
or
mov
outsb
popa
pop
push
push
sub
pop
jle
mov
jnp
lock
es
aaa
adc
divb
test
out
add
repnz
push
lock
inc
addr16
repnz
xchg
dec
and
fwait
pop
pop
cmpb
push
or
das
leave
and
pop
xchg
dec
aam
mov
lcall
in
ljmp
enter
inc
mov
xor
pop
sbb
xor
outsl
insl
mov
or
jae
inc
test
sub
mov
push
addr16
repnz
mov
jne
sbb
stos
clc
icebp
sbb
cmp
mov
jp
xor
aad
popa
cld
imul
push
sbb
ja
push
lretw
ds
xchg
arpl
cmpsl
or
adc
data16
out
xchg
lahf
arpl
adc
adc
push
xor
or
rcrl
xor
pop
out
lods
fldl
mov
pop
inc
dec
fisttps
xchg
aam
and
stos
inc
xor
fldt
xor
mov
mov
and
movsl
call
sbb
push
lea
add
mov
adc
inc
sub
mov
cmp
rorb
sub
mov
and
sub
and
imul
push
insl
lret
and
sbb
mov
dec
loopne
lahf
push
or
scas
ljmp
mov
sbb
xlat
movsb
sbb
out
dec
adc
stc
cmp
xchg
loopne
jno
daa
test
mov
lret
mov
mov
stos
cmp
push
call
scas
inc
rcr
subb
fwait
imul
fiaddl
push
in
jns
xlat
mov
pusha
imul
push
jmp
test
and
adc
bnd
or
mov
adc
dec
add
int
loope
or
cmc
push
pop
mov
jnp
mov
add
pop
lret
arpl
dec
adc
daa
pop
fldcw
andl
or
inc
jb
or
sbb
sbb
std
pusha
leave
sbb
movsb
and
adc
or
adc
dec
cmp
fbstp
xchg
rcr
or
mov
mov
test
loopne
inc
in
andb
adc
loope
add
ret
dec
mov
lret
cmp
mov
inc
fildll
shrb
mov
incl
lret
jo
outsl
dec
lods
mov
mov
cmp
icebp
mov
cmp
test
sub
cwtl
rcll
lahf
xchg
xor
inc
add
dec
bound
arpl
add
rorl
xchg
xor
popf
rclb
aam
push
repnz
inc
loop
sbb
push
cmp
cli
test
xor
xchg
fxch
cmp
mov
mov
rcrb
lods
push
dec
sarl
int3
inc
std
cmpb
or
mov
movsl
dec
adc
adc
xor
fildll
in
adc
jecxz
inc
lods
lods
cmpsb
out
popa
sbb
sahf
cmp
push
cmp
mull
adc
addr16
push
mov
cwtl
mov
je
xor
int
test
mov
shr
gs
pop
xor
lahf
addr16
or
cltd
insl
ret
test
ljmp
fcoms
ljmp
mov
mov
sub
sub
testl
xchg
mov
sub
pop
push
jne
xor
add
cmpsb
insb
mov
push
loop
lds
faddl
push
sub
nop
popa
fwait
loop
add
fcoms
rolb
in
cwtl
int3
xchg
pop
mov
mov
lock
push
ljmp
int3
fdivs
in
les
xlat
mov
nop
mov
sbb
shll
scas
fimull
ja
add
pusha
fbstp
cmp
loope
jns
mov
push
xor
or
cmp
lds
in
push
or
arpl
jnp
push
js
clc
mov
push
dec
int3
out
popa
mov
in
inc
mov
popa
scas
je
lds
cmpsl
mov
orl
lods
dec
push
sbb
mov
iret
lds
sub
out
xchg
lret
adc
xchg
outsl
push
loop
shll
add
fdivrs
adc
pop
push
xor
aam
bound
and
shr
rcll
mov
cwtl
jmp
aas
stos
dec
push
test
mov
ret
seto
jb
lock
in
mov
xor
jle
sbb
xchg
mov
inc
jb
les
aas
shrl
cs
idivb
es
pop
pop
xchg
les
shlb
enter
xlat
movsl
aad
inc
lcall
mov
in
jmp
lcall
out
and
push
jecxz
gs
sub
push
mov
movhps
cli
out
mov
push
into
add
sbb
out
imulb
cmpsl
cltd
js
push
cld
mov
jns
and
dec
inc
adc
mov
xor
loop
add
testl
xor
sbb
adc
cmpsb
rcr
jg
insl
or
cmp
or
sub
mov
inc
mov
fldt
es
stos
inc
add
jmp
mov
ss
jno
inc
inc
jnp
pusha
xchg
jb
test
cltd
sbb
scas
pusha
mov
dec
iret
jns
push
out
adc
sub
push
lea
push
stos
inc
fadds
rcrb
dec
addb
fadds
inc
sbb
ret
mov
loop
inc
test
dec
pop
in
into
inc
sub
adc
cmp
xchg
mov
aad
adcb
fidivl
jae
xor
sarb
jne
sbbb
andl
sbb
popa
rolb
in
or
sti
jns
add
push
hlt
popf
out
jl
subb
sub
das
mov
cltd
adc
mov
jb
out
mov
xchg
adc
or
push
mov
cwtl
mov
xchg
jecxz
xchg
negl
xchg
push
add
sbb
lock
xchg
dec
lods
jnp
aad
rep
fwait
aam
pusha
int3
std
jno
int
or
dec
rorb
dec
xor
out
andl
pop
int3
mov
mulps
mov
mov
mov
lods
add
cs
out
scas
mov
andl
mov
rcr
inc
push
inc
arpl
sub
mov
mov
lds
pop
mov
sbb
push
clc
mov
mov
sbb
mov
nop
clc
fnstcw
fwait
and
mov
or
bound
cmc
inc
in
push
clc
adc
fisttpl
jp
leave
jle
in
sahf
xchg
data16
fistl
xchg
mov
jge
ds
das
sbb
adc
cmp
jns
in
rcrl
sarb
jmp
cmpsb
xchg
dec
ficomps
mov
sbb
cmp
arpl
xchg
imul
or
cmp
pop
ljmp
hlt
pop
adc
or
ficoms
sbb
jl
mov
push
jne
sarb
inc
push
shr
cmp
xchg
test
sub
or
mov
and
ljmp
nop
pop
inc
sub
mov
aam
lahf
lods
inc
int3
or
pop
jno,pt
push
pop
add
call
mov
mov
in
inc
fiaddl
mov
aaa
xlat
arpl
movsl
movsl
gs
data16
in
mov
lret
das
loopne
sbb
push
stos
xor
mov
dec
out
mov
gs
enter
out
dec
xchg
fprem
mov
mov
fsub
icebp
lds
mov
insl
mov
sbb
sbb
sbb
jl
mov
cmp
xor
pop
mov
loop
aaa
std
cmp
sahf
negl
and
loope
mov
mov
sbb
sbb
retw
mov
push
dec
out
rorl
push
movsb
and
dec
or
in
cli
xchg
dec
pop
jge
and
les
or
mov
sbb
in
cli
hlt
popf
mov
ljmp
fistl
bound
jne
push
adc
add
int3
ret
in
sbb
push
xlat
cmp
pop
push
mov
mov
xchg
xchg
jne
mov
or
cli
or
mov
cmpsl
and
xchg
std
cmp
push
ja
ret
sarb
cld
sub
outsb
adcl
jmp
adc
ds
inc
nop
adc
adc
fwait
inc
cltd
and
push
add
iret
ret
daa
jno
inc
add
enter
sbb
fists
adc
imul
fs
jl
xchg
sahf
jo
jbe
call
pop
pop
bound
fmuls
mov
jns
xchg
lahf
adc
in
sbb
stc
loope
rolb
mov
mov
pop
loop
stos
push
push
jo
inc
jmp
cld
icebp
inc
inc
ljmp
dec
popa
xchg
outsb
xchg
add
mov
mov
imulb
dec
fists
jmp
lret
test
sub
jge
sub
mov
mov
daa
mov
adc
push
jecxz
jo
inc
pushf
sbb
loope
and
daa
mov
mov
divl
loopne
mov
fwait
clc
pop
inc
mov
sbb
loop,pt
fmull
std
int3
es
daa
mov
mov
fs
add
xchg
and
cs
add
ret
into
jl
mov
je
dec
mov
jg
loopne
subb
jnp
jae
xor
and
add
dec
jno
pop
or
addr16
or
in
nop
pop
jge
dec
insl
and
into
inc
cmp
xchg
scas
dec
cmp
or
dec
scas
enter
popf
xchg
addr16
arpl
push
test
pop
add
cmp
lods
push
addr16
pushf
and
outsl
ds
or
out
out
cmc
dec
shlb
ficomps
cmp
enter
jecxz
sbb
adc
or
push
call
xchg
in
dec
imul
aam
cmp
call
lock
add
pushf
sub
dec
sbb
add
sub
aaa
scas
mov
fsts
pop
icebp
cltd
dec
xchg
test
add
lds
push
mov
push
xor
xlat
ss
xlat
xor
in
pop
loop
sub
out
mov
adc
jmp
pop
lret
mov
dec
push
test
into
xchg
arpl
scas
int
mov
sbb
xchg
scas
mov
popf
mov
mov
mov
cmpsw
test
sbb
and
dec
cld
adcb
clc
das
xor
jmp
add
sbb
or
pop
adc
hlt
sti
stos
mov
lods
dec
cli
add
dec
add
jmp
pop
fisttpll
cmp
mov
stos
mov
leave
push
sahf
cwtl
stos
add
mov
fidivrs
pushf
cli
jne
sbb
jnp
push
mov
lods
mov
clc
sub
push
xor
pop
in
sbb
or
es
mov
dec
add
in
call
sub
lds
push
mov
pushw
addb
push
and
jmp
fmull
cmp
pop
cmpsl
xor
pop
test
filds
add
aad
jmp
and
rorb
mov
ret
ffree
in
jg
pushf
mov
sbb
cltd
push
out
lea
pushw
dec
insl
shlb
es
and
lret
pop
sbb
sbb
xchg
mov
out
inc
jmp
and
dec
scas
sub
addr16
add
scas
ss
int3
xchg
icebp
or
mov
add
pop
jnp
cmp
std
popa
ret
mov
pop
fstpl
mov
add
push
jbe
mov
aaa
xchg
sarl
xchg
xchg
dec
sbb
xor
push
outsl
xchg
xchg
outsl
daa
cwtl
dec
inc
cld
test
mov
add
jmp
pop
push
push
jg
in
and
xor
es
inc
or
popl
nop
les
pop
pop
add
rcl
flds
cs
and
repz
in
call
stos
add
xchg
xchg
cmp
inc
dec
andb
and
jecxz
dec
push
push
stos
sbb
out
mov
sti
add
stos
inc
js
insl
push
and
cmpsb
sub
faddl
push
cmp
sahf
je
iret
mov
mov
lcall
xchg
jno
mov
or
adc
mov
sbb
mov
test
sbb
outsb
subl
out
cmp
adc
xor
out
xchg
ss
orl
sub
push
push
movsl
mov
jne
aam
dec
pop
sbb
mov
icebp
push
and
icebp
lcall
icebp
rcrl
adc
std
cmp
outsb
out
in
pop
pop
push
dec
jle
cmp
scas
jle
sahf
dec
sub
dec
leave
push
ja
sbb
call
mov
in
push
outsb
jo
sub
fs
movb
and
in
ja
jecxz
loopne
jecxz
and
or
adc
xchg
pushf
das
push
xor
les
mov
leave
sub
mov
dec
mov
dec
push
mov
mov
lods
clc
dec
xchg
pop
mov
test
mov
jns
mov
mov
cmp
dec
lahf
lret
xchg
mov
js
or
loop
mov
dec
or
jge
out
add
mov
inc
cmp
lods
iret
adc
push
push
lea
stc
sub
outsl
aas
int3
inc
ret
scas
xlat
frstor
adc
sub
in
xlat
xchg
and
popf
mov
fsubr
and
add
leave
shlb
icebp
repnz
inc
mov
into
jge
iret
cs
sbb
dec
sbb
sbb
ds
jne
lret
into
cmp
sbb
cli
and
fwait
cmp
enter
lock
test
cmp
dec
mov
pop
mov
movsb
lods
in
gs
fucomi
mov
mov
cmpsl
mov
std
bound
mov
pushf
inc
mov
out
inc
pushf
pop
and
arpl
test
sbb
adc
mov
into
pop
push
popa
lods
clc
shl
ucomiss
push
in
imul
rolb
sub
add
pop
pop
inc
xor
pop
je
frstor
add
out
add
adc
gs
jg
std
fdivr
loop
jg
and
call
int3
loopne
mov
lcall
aad
sub
fldcw
xchg
int
xchg
push
cmp
sub
in
sub
in
sbb
in
mov
loop
jb
flds
mov
mov
popf
scas
hlt
ret
mov
sub
mov
jns
cmc
fisttpll
in
mov
out
icebp
inc
leave
call
jns
xchg
cmp
lcall
mov
lods
repz
pop
jb
xor
out
jmp
sahf
add
pop
aad
push
cmp
jle
jmp
push
mov
loopne
icebp
popa
pop
rcrl
mov
ret
xchg
jge
sub
loope
mov
xchg
mov
lods
xor
pop
add
pop
fisubl
pop
repnz
dec
push
xor
stos
aas
mov
int3
mov
or
or
xor
shrl
fs
loope
sub
sbb
dec
in
clc
xchg
cmp
frstor
daa
gs
cmpsl
or
es
cmp
in
cvtpi2ps
cmc
in
rol
hlt
popa
lret
scas
bnd
mov
jg
or
mov
push
xor
add
cmp
dec
sbb
jge
orb
in
leave
mov
mov
lods
xchg
lea
mov
sub
insb
jo
jp
sub
mov
xchg
in
push
pop
push
xchg
xchg
mov
les
int
and
mov
add
pop
mov
adc
pop
xchg
mov
cwtl
shrb
xchg
mov
jae
xor
and
orl
in
test
sti
cltd
xor
ja
rolb
mov
inc
ljmp
lret
adc
dec
sbb
loopne
lcall
push
aas
xchg
jmp
mov
mov
out
icebp
imulb
vcvtsi2sdl
adc
ret
push
iret
lea
je
rcrl
lods
or
inc
jae
cmp
or
in
or
cmpb
mov
xchg
cmp
dec
xchg
lods
or
rorl
cmp
aam
dec
jecxz
aam
pop
adc
mov
jmp
int
scas
cmp
dec
mov
sub
cmp
add
mov
imul
outsb
loopne
outsb
add
pusha
cmp
bound
rorb
cli
repnz
jmp
pop
xor
sbb
fnsave
sub
movsl
pop
and
mov
andb
xchg
dec
jb
dec
pop
cld
out
xlat
add
pusha
xchg
mov
in
push
or
dec
icebp
fnsave
xor
mov
mov
aad
sub
cli
sub
xor
push
mov
int3
add
push
stc
xchg
dec
mov
ds
push
imul
cltd
movsl
fisubrs
leave
fldl
out
mov
stc
stos
test
add
mov
dec
push
bound
std
fcmovbe
mov
stos
xor
add
xor
fsubs
lret
std
fsubl
sbb
out
ss
inc
cmpl
lret
addr16
sti
popf
sbb
mov
push
ret
mov
dec
scas
mov
and
dec
xor
jge
jmp
xchg
js
push
ffree
lret
xor
and
into
cwtl
in
inc
mov
shll
push
je
add
fwait
stc
stos
loop
fwait
decl
clc
jmp
jg
sti
leave
daa
iret
cmc
fs
lea
push
xchg
mov
getsec
dec
sbb
mov
aaa
inc
out
jo
mov
movsb
stos
lods
mov
add
xor
adc
mov
rcrl
push
xchg
xchg
mov
in
adc
add
popf
mov
stos
loopne
imul
lret
xor
push
das
dec
jne
int3
xlat
and
cld
into
sbb
mov
into
test
ljmp
push
rcrl
pushf
mov
pop
mov
sbb
repz
les
lea
push
pop
out
stos
push
fcomip
xor
test
push
mov
dec
sub
xor
pop
xlat
xor
ror
cwtl
push
and
rcrb
adc
jmp
push
sub
or
pop
jne
je
add
mov
mov
dec
sub
cmp
push
lcall
cmp
mov
mov
pop
adc
mov
jl
mov
cmp
jb
aam
xchg
pop
popf
pop
mov
and
sbb
mov
xchg
leave
int
loop
into
mov
push
es
mov
pop
xchg
cld
ret
xor
sub
jae
push
loopne
adc
rcl
mov
pop
adc
mov
xor
fnsave
insl
mov
sti
xor
xor
aaa
pop
std
and
leave
adc
fisttps
cmpsl
addr16
add
std
fidivs
jge
mov
cmp
idivb
ficoml
mov
inc
aaa
dec
or
xchg
mov
mov
rolb
shlb
clc
test
sbb
jl
pop
sti
push
test
in
fwait
lret
mov
add
adc
mov
xlat
inc
mov
sub
daa
bound
fs
ret
adc
sub
mov
sahf
sahf
iret
cmp
pop
push
aas
sub
pusha
dec
cltd
inc
hlt
outsb
in
das
sub
or
mov
cmp
adc
lcall
cmpsb
inc
xchg
pop
scas
andl
shll
mov
mov
and
dec
pushl
lods
jne
imul
or
ss
shlb
adc
insb
cmp
jmp
inc
lods
cmp
cmpb
xchg
repz
test
js
mov
sbb
lcall
mov
push
call
enter
loopne
jle
mov
sbb
incl
mov
xor
or
pop
popa
dec
movsb
inc
icebp
cld
cmp
sbb
pop
fdivrp
jo
add
call
rolb
idivl
sbb
fs
repnz
out
fs
adc
mov
push
into
daa
imul
aam
divb
add
xor
sahf
jnp
fnstsw
push
push
std
jg
out
xchg
mov
aaa
imulb
inc
xchg
lret
test
in
mov
out
cmp
mov
iret
stc
push
pop
jp
cltd
push
and
popf
cmp
pop
inc
ret
mov
sbb
movsb
mov
jbe
cmp
insb
test
and
push
clc
and
ret
in
addl
jp
sub
call
flds
cs
cmp
push
fidivrs
sub
dec
gs
mov
ficoms
lods
adc
mov
mov
icebp
xchg
in
sar
in
push
xor
jbe
pushl
mov
push
mov
add
inc
imul
ds
inc
adc
cmpsb
xor
leave
loope
mov
stos
lods
aas
sbb
fildll
imul
add
lods
jl
jp
push
int
inc
cmp
cmp
sub
clc
int
pop
xchg
aaa
icebp
xchg
or
std
pop
push
and
pop
arpl
jo
cmp
icebp
mov
inc
gs
out
jno
aad
les
fildll
out
cmp
sub
out
fsubr
stos
fscale
pop
or
pop
cmc
mov
icebp
frstor
nop
adc
cld
aam
rclb
popa
or
int3
or
mov
pop
jl
xor
mov
fwait
jmp
arpl
data16
mov
push
loop
push
lods
xor
fbstp
push
and
aam
jl
jmp
cli
rolb
mov
inc
pop
pop
dec
in
fsubp
mov
sbb
xor
icebp
in
je
xor
stc
movsl
popf
sarb
adc
adc
loop
xchg
fsubs
jo
std
lea
fadds
sbb
loop
mov
sub
fwait
je
or
xor
xor
sub
push
into
dec
popa
jb
jecxz
dec
mov
mov
xchg
dec
cs
lds
ficompl
int
or
mov
mov
push
imul
cltd
stos
jg
sub
lret
adc
pop
insl
cmpsl
pop
arpl
repz
xchg
mov
negb
cmp
adc
cmp
jne
imul
scas
mov
inc
or
sub
cmp
aaa
hlt
xlat
sbb
fadds
test
les
sbb
and
xor
scas
and
mov
vmovaps
fs
push
jge
pop
cmp
sbb
pop
cs
mov
xor
jecxz
test
lds
mov
add
outsl
clc
push
push
xor
pop
sub
adc
imul
hlt
push
cmc
or
repnz
jae
push
scas
fsts
xor
xchg
into
arpl
pop
adc
in
ja
faddl
mov
dec
jge
pusha
lods
orl
int3
mov
mov
and
popa
clc
jl
cmp
lret
lods
cmc
push
add
stc
out
addr16
inc
push
aas
sbb
shlb
arpl
cli
jns
mov
jae
mov
xlat
add
mov
pop
dec
dec
ss
nop
in
xchg
pusha
mov
sbb
mov
mov
pop
cltd
jl
push
jne
nop
dec
sahf
lods
stos
rorb
shlb
adc
sbb
shr
inc
int
movb
xorl
in
jle
js
repnz
sbb
notb
data16
in
leave
repz
mov
sub
push
xchg
clc
cmp
lcall
xchg
and
in
dec
int3
xor
stc
leave
mov
dec
fmull
aas
mov
mov
xchg
jg
push
sub
jg
add
leave
sarb
and
jmp
inc
sub
sti
adc
sbb
aaa
or
ljmp
xchg
repz
imul
cmp
movl
rolb
jae
add
stos
cs
nop
fsubr
or
inc
fadd
lods
outsl
pop
loopne
and
mov
sbb
clc
iret
test
scas
jle
fwait
aad
mov
or
inc
sub
loope
ret
cmpsl
fxch
xchg
int3
xor
xchg
negl
lahf
divl
ret
adc
inc
je
pop
in
or
inc
je
ret
jnp
ss
or
pop
push
cmp
jns
xchg
xchg
pop
ret
into
dec
bound
cmp
and
jo
xchg
mov
in
iret
prefetch
int
and
iret
pop
inc
xchg
fstl
aas
popf
ja
test
sub
pop
mov
xchg
mov
sbb
insl
sub
in
sub
inc
xlat
adc
jg
fbld
fldenv
fstpl
mov
sub
negl
movsb
cs
dec
test
push
mov
lods
add
xor
ret
jbe
loope
xchg
data16
fsubp
call
adc
aam
cld
mov
bnd
lods
into
or
xchg
push
mov
dec
jle
inc
cli
loopne
pusha
inc
mov
push
jmp
dec
std
jne
xchg
ljmp
ja
cmc
xchg
aad
xchg
pop
and
hlt
lcall
add
adc
outsb
mov
xchg
cmp
mov
testb
dec
dec
dec
loop
mov
in
ret
sar
test
hlt
push
ja
mov
popf
add
cmp
push
enter
jne
int
push
adc
push
push
or
pop
or
pushl
scas
jecxz
stc
fcoms
jmp
fcompl
sbb
jp
xor
idivl
out
movsl
pop
adc
mov
ucomiss
pop
cmp
mov
xor
mov
dec
pop
ja
push
test
xchg
push
sbb
mov
cs
push
cmp
mov
or
lock
imul
xchg
push
xchg
scas
dec
icebp
pop
testb
stc
rorb
dec
push
sbb
jo
or
dec
shll
add
mov
popa
xchg
cli
pop
jg
add
adc
es
xchg
rorb
cmpsb
jg
push
push
test
and
testb
add
and
jnp
insl
xor
inc
lods
pop
rolb
aaa
cmp
repz
sub
pop
mov
xchg
add
outsl
iret
jg
cld
movl
dec
add
mov
lods
pop
dec
les
inc
hlt
rorl
mov
imul
in
cmpsl
xor
jl
out
ret
insl
dec
fwait
stos
or
push
or
xor
in
test
data16
mov
pusha
out
fisttpll
in
sbb
jle
fstpl
test
inc
notl
cmp
daa
ret
cli
lret
outsl
add
sub
xor
and
add
dec
jge
loopne
roll
divl
push
int
jo
dec
shll
mov
or
orl
shlb
jno
push
and
sbb
lods
pop
mov
mov
or
pop
xor
push
call
popa
jo
inc
jp
insb
aaa
mov
mov
xor
push
out
into
push
or
pop
test
fs
movsl
pop
pushf
mov
sti
jge
push
adc
pusha
ljmp
js
rcrl
sub
fs
test
or
cmp
subb
jno
loopne
push
jmp
xor
ljmp
test
sbb
mov
inc
in
es
add
sbb
xor
call
aad
or
jmp
or
cmpsb
push
pusha
push
push
adc
inc
mov
sub
inc
shlb
cmpsb
push
push
outsb
cmp
js
lahf
or
fs
xlat
daa
enter
and
jecxz
aas
scas
mov
xchg
inc
ss
outsl
pop
push
adc
jle
push
and
dec
mov
mov
mov
or
dec
fisttpll
cmp
int3
or
sub
std
aaa
testb
movsb
test
js
int
fisubs
and
js
or
cmpsl
mov
jp
jno
ret
hlt
xlat
aam
jnp
cmpsl
mov
mov
mov
pop
mov
mov
std
xor
push
out
insl
xor
sti
dec
adc
dec
sub
iretw
loop
fsubrs
mov
mov
add
icebp
jns
adc
xchg
jmp
in
inc
ss
adc
xor
rcrb
push
lahf
jb
les
add
adc
mov
mov
sub
push
add
nop
mov
and
loop
cmp
ds
out
cld
aas
call
sbb
jge
mov
arpl
fsubs
mov
push
imul
mov
cwtl
fsts
clc
xor
ret
xchg
mov
sbb
mov
jecxz
cmpsb
mov
xlat
shlb
outsb
ret
leave
out
test
xchg
fs
xchg
pop
cmpsb
xchg
xlat
jge
enter
add
or
pusha
inc
rorl
xchg
jp
mov
lret
and
pop
in
into
xchg
dec
shrl
jnp
bound
and
push
or
imull
sub
sbb
cs
lods
stos
adc
inc
fisttpl
test
push
jae
fsubrp
push
cmp
sbb
ss
stos
jecxz
cmp
ds
nop
cmp
loopne
push
mov
push
cwtl
xor
mov
notb
fldl
mov
push
sti
sti
aaa
jmp
jp
cmpl
sbb
sbb
mov
xchg
mov
scas
dec
cltd
adc
jo
shll
xor
clc
sub
mov
sbb
stos
add
xlat
icebp
sbb
pusha
mov
mov
cmp
jg
inc
and
or
or
mov
pop
mov
fmull
push
imulb
imul
inc
clc
xchg
dec
and
push
sbb
int3
and
test
dec
mov
test
cmp
call
inc
loop
adc
mov
js
xchg
xchg
xchg
sbb
out
sar
pop
and
imul
and
cmp
mov
add
xchg
scas
inc
push
mov
cwtl
out
icebp
fdivrs
sbb
or
jnp
dec
push
test
lret
cmpsb
daa
fwait
xor
mov
cwtl
dec
mov
pop
and
mov
push
lret
sbb
jae
and
mov
cmp
insl
mov
out
bnd
shrl
xorb
push
repnz
fists
jno
xchg
xlat
push
ret
pop
popf
sub
or
dec
stc
faddl
sbb
movsb
sub
inc
jbe
xchg
push
aas
sub
jns
int
xchg
inc
fistps
pusha
out
add
and
rcrb
cmp
test
adc
or
mov
mov
aam
jnp
push
inc
adcl
jo
push
xchg
out
icebp
mov
cmp
jge
aaa
es
pop
sub
in
dec
push
jge
cmc
push
mov
mov
sbb
push
lods
pop
pop
adc
je
jne
cmp
push
adc
outsb
xchg
or
shl
jb
jne
sub
cmp
or
mov
push
and
and
imul
aad
mov
or
push
cli
mov
fldcw
in
js
les
jge
pusha
ljmp
and
inc
and
cmpsb
in
fisubl
mov
dec
xlat
ffree
sarl
pop
in
insb
out
shrb
incl
outsb
mov
pop
fiaddl
fsts
pop
mov
sub
or
ja
lcall
xor
rcr
push
in
orl
mov
pop
adc
int3
or
testl
fisttpl
jne
push
xchg
inc
out
rcrl
mov
xor
lcall
movsb
mov
pop
neg
xchg
rcr
outsl
mov
cmp
or
cmc
sbb
lretw
and
ljmp
jl
mov
mov
ret
push
sbb
mov
lcall
insl
mov
and
xchg
mov
outsb
ja
mov
ljmp
cmp
cmp
outsb
push
leave
in
out
cmc
cwtl
popa
dec
jge
adc
outsb
gs
add
repz
cmp
sub
mov
dec
push
and
test
push
mov
das
mov
cmp
xchg
sbb
mov
jg
adc
push
adc
insl
mov
cltd
xchg
subb
jo
push
jne
add
jno
xor
incl
inc
mov
nop
sub
clc
rcr
adc
popa
add
and
push
lret
cld
lcall
xor
push
or
cld
xchg
jmp
loop
mov
lahf
sbb
scas
sbb
cmp
and
pop
negb
dec
aad
jmp
push
xor
push
jnp
cwtl
addr16
mov
mov
jl
push
or
fisubl
pop
fs
push
jl
push
bound
cld
mov
push
xor
les
xchg
jl
rcrl
loopne
xchg
lock
sahf
fnsave
call
adc
mov
mov
adc
dec
pop
xorb
fildll
push
xchg
xchg
and
addr16
jg
out
iret
cmp
add
mov
cmc
aad
aam
fsubr
test
jbe
aam
or
fs
mov
xor
test
dec
jns
ret
movsl
jno
pushf
jno
jo
mov
cmpsl
fwait
sub
or
imul
inc
ds
mov
nop
inc
pop
sbb
pop
hlt
xchg
repnz
mov
hlt
cmp
dec
cwtl
mov
xchg
dec
insb
xor
cmp
mov
insl
add
jmp
push
xchg
mov
add
popf
adc
sar
out
pop
dec
scas
inc
cmp
in
dec
int3
sub
lds
sbb
pusha
push
cltd
pushf
imul
jb
sub
nop
or
adcb
scas
aam
dec
pushl
ljmp
loopw
movsb
mov
cmp
stos
pop
mov
stos
cmc
xchg
loop
sbb
jo
mov
ret
std
dec
inc
jae
dec
ds
pop
inc
lock
fistpl
dec
jp
jnp
fs
push
adc
mov
mov
enter
mov
lods
mov
stc
inc
daa
pop
fisubrs
out
pop
dec
cli
into
fnsave
dec
mov
imul
mov
insb
mov
ja
in
pop
ja
jge
cmpb
add
dec
enter
fstpl
and
mov
sbb
addr16
outsb
test
stos
pop
mov
daa
or
dec
jnp
aaa
repnz
fwait
cmp
dec
cmp
mov
xchg
es
add
xchg
mov
fsts
jno
jle
mull
sub
inc
sbb
pop
sbb
and
pop
jg
mov
xchg
xor
xor
add
xchg
xor
cmc
cmp
ja
cmp
rcll
cmp
test
cmp
pop
popa
and
icebp
lahf
jmp
jae
mov
mov
loopne
jns
xlat
imul
aad
ljmp
xchg
push
adc
data16
nop
mov
rolb
jb
fisttpll
and
lret
pop
push
mov
hlt
mov
iret
or
jmp
mov
adc
xor
mov
xchg
fisubrl
jbe
ret
iret
sbb
adc
lea
jo
mull
fistps
xorb
xchg
jb
pop
xchg
cmp
or
stos
movsb
mov
outsb
std
xchg
mov
int3
xor
hlt
jge
aam
rorl
sub
cltd
or
insb
ficomps
push
jecxz
sbb
scas
jno
jae
lret
or
cmp
insb
fs
in
sarl
dec
jns
cmpsb
scas
rcr
mov
pushf
popf
fstpl
mov
aaa
mov
loopne
cmc
enter
fidivrl
mov
mov
in
icebp
cmpsl
imul
int3
cli
push
lds
flds
pusha
outsl
jb
mov
jno
xchg
js
cmp
sbb
xor
out
push
popf
pop
cmp
mov
fnsave
aas
in
out
insl
sbbl
push
fsubr
pop
mov
aaa
loop
stos
leave
mov
int3
push
or
xor
in
push
shr
scas
popa
cltd
jnp
rolb
fisttps
ljmp
inc
or
adc
xchg
lds
ljmp
mov
sbb
sub
not
jmp
pop
push
fists
imul
xchg
ljmp
push
and
mov
outsb
loopne
pop
lahf
movsb
sarb
sti
xchg
cmpsl
roll
add
out
pop
fidivs
inc
push
mov
pop
ds
into
lret
clc
sbb
imul
xor
movsl
add
sub
stos
xor
add
sbb
int
mov
lds
sbb
inc
stc
pop
xchg
mov
cmp
lret
out
fnstenv
sbb
ret
sub
push
das
and
setp
push
es
pop
divb
dec
test
mov
lods
push
daa
mov
rclb
fwait
idivb
push
cmp
das
shlb
repnz
enter
push
mov
pop
iret
in
and
xor
add
push
movsl
jno
ret
fadd
call
fidivrl
inc
push
sbb
mov
sub
cmc
popf
mov
fldenv
aas
call
sbb
mov
inc
sub
and
add
dec
loope
mov
pcmpeqw
jno
cltd
inc
cmpsl
xchg
bound
push
mov
fwait
mov
sbb
dec
iret
xlat
out
xchg
int3
mov
jns
je
xorl
sub
stos
sbb
push
add
shlb
mov
mov
mov
dec
xor
ljmp
ljmp
cmpl
xor
fmuls
dec
fstp
cli
jecxz
test
or
cmp
mov
sbb
lret
aas
in
hlt
movsb
or
cmpsl
mov
repz
aaa
push
xchg
js
call
fmul
movsl
jmp
pop
jo
movsl
sub
pop
adc
mov
mov
mov
outsl
shll
cwtl
push
jo
mov
mov
insb
cmp
fdivr
icebp
adc
and
int3
and
dec
fmull
js
sbb
in
pop
add
adc
fistpl
push
dec
movsl
js
pop
andb
add
sbb
xor
or
cmpsb
mov
dec
imul
jmp
mov
into
loopne
leave
in
mov
lret
and
add
xor
adc
cmp
clc
mov
adc
xchg
jbe
stos
pop
mov
or
cli
xor
cmp
xor
add
stos
or
ret
jl
pop
pop
pushf
imul
xchg
jmp
imul
cltd
xchg
divl
fcoml
or
shll
sahf
sbb
clc
xchg
cmp
inc
sbb
call
push
sbb
sbb
movsl
sub
in
cmp
outsl
inc
cmp
pop
cmpsl
sbbb
shlb
push
lock
and
lret
xor
inc
out
outsb
mov
insb
movsb
mov
add
pop
daa
movsb
xor
hlt
cwtl
jle
push
lods
sbb
mov
adc
add
and
int
cmpsl
push
and
xor
mov
shl
pop
cltd
outsb
in
cmp
xor
jg
enter
add
stos
xor
or
cmc
push
and
mov
mov
xor
xorl
cmpsl
sub
shlb
hlt
enter
div
outsb
pop
mov
mov
dec
decb
inc
jno
mov
aaa
add
jecxz
mov
cmp
adc
cmp
mov
mov
aas
jno
sub
lods
cmp
pop
sub
dec
and
das
xor
out
in
out
pop
or
addb
ror
jae
lret
pusha
in
repz
ljmp
rorl
adc
pop
pop
dec
sub
pop
pusha
inc
xchg
jae
cld
int3
push
sbb
push
aas
add
imul
jb
xor
and
push
pop
pop
subb
imul
mov
sub
dec
ret
sub
rclb
clc
mov
inc
cmpsl
hlt
inc
decb
test
rcrb
clts
popf
add
pop
mov
push
add
movl
addr16
xchg
adc
arpl
mov
outsl
fwait
or
hlt
sub
and
adc
sbb
pop
adc
cltd
jns
xchg
es
inc
sti
mov
call
popf
out
mov
xchg
push
mov
cmc
pusha
fildll
int
out
push
mov
mov
fldcw
jmp
ficompl
adcb
roll
pop
ljmp
mov
or
je
es
stos
pop
in
aaa
xor
sub
clc
sar
fistpl
push
xor
pop
push
dec
cmp
xchg
cmpsl
mov
int3
out
ss
adc
daa
sbb
mov
or
cmp
or
jge
push
mov
ja
push
cld
cwtl
dec
je
ljmp
sbb
rorb
fcoms
jae
sub
cmp
or
addl
daa
xchg
ljmp
lock
iret
mov
insl
mov
add
dec
push
fsubrl
test
inc
jne
xchg
jecxz
or
lock
sub
pop
sti
cmpb
xchg
mov
mov
push
scas
lods
rorl
xor
stos
sahf
pop
push
repz
mov
imul
dec
pop
cmp
outsl
fstps
loope
jns
js
test
das
nop
call
pop
xchg
jns
mov
mov
ret
lods
lods
push
neg
ds
scas
push
pop
in
fdivs
push
clc
insl
lret
push
push
clc
push
jge
pop
insl
mov
jnp
and
pusha
lods
popf
adc
gs
jecxz
inc
xchg
outsl
gs
aaa
pop
fisubl
push
pusha
ja
imulb
dec
test
pop
and
clc
popa
cmp
mov
fs
mov
inc
jge
js
mov
and
mov
xchg
inc
xorl
mov
jae
or
pop
into
cli
roll
je
and
ficoml
add
cmp
and
hlt
adc
xor
mov
jecxz
xlat
movsl
out
call
leave
jae
movsb
aad
int3
subl
aas
or
imul
add
mov
jns
cmp
hlt
push
arpl
push
jnp
push
mov
mov
dec
sbb
pop
xorb
es
push
in
or
and
orb
xchg
xor
pop
lret
mov
mov
jle
xor
outsl
sbb
xor
popf
cmp
daa
fwait
stos
or
fwait
pop
xchg
lcall
push
push
rcrl
or
aaa
in
mov
inc
jns
add
negl
pushf
cmpsl
stc
inc
test
arpl
nop
rcl
cmp
inc
lock
mov
pop
arpl
adc
and
int3
mov
mov
mov
pop
push
mov
pop
stos
pop
movsl
cmp
pop
dec
je
hlt
cmpsl
in
movsl
push
push
insl
cmp
mov
mov
jne
je
push
mov
inc
lock
pop
notb
inc
dec
xchg
mov
mov
pop
or
jle
xchg
lcall
daa
inc
sbb
pop
sub
and
mov
aaa
mov
pop
adc
pop
fstpt
mov
cltd
or
mov
adc
out
notb
xor
dec
adc
or
mov
ljmp
inc
sub
jmp
fnstenv
cltd
inc
gs
enter
fsubrl
scas
ja
sub
mov
xchg
fisttps
cmc
js
into
stos
lds
push
pop
and
pop
xchg
or
rcl
daa
loopne
inc
movsb
jmp
stos
rorb
hlt
push
loope
pop
mov
movsb
mov
pop
icebp
pop
mov
inc
push
or
movsl
out
lret
jo
enter
arpl
dec
mov
outsl
out
jg
push
inc
xor
cld
xor
scas
insl
dec
xchg
xor
mov
clc
mov
sub
or
add
dec
shrl
and
stc
sub
and
data16
aam
cmc
test
scas
lcall
dec
mov
or
lds
mov
or
xor
sbb
pop
aam
stos
shrl
sbb
imul
pop
add
cld
xchg
repnz
xchg
dec
mov
pop
fsubrl
fldt
std
lret
cmp
lds
fdivr
imul
aam
jecxz
enter
xchg
xchg
and
cld
push
int
jno
mov
pop
push
cmpsb
in
dec
mov
decl
xlat
clc
add
dec
lret
in
les
lret
jns
add
dec
jmp
mov
stos
push
push
lret
out
stos
bound
pusha
hlt
jnp
mov
xor
lret
push
int3
pop
sbb
xor
fcmovnu
js
dec
push
mov
mov
or
mov
push
pop
sub
xchg
fsub
int3
or
xchg
xchg
shll
loopne
push
push
push
int3
jmp
and
push
lret
or
in
adcb
subl
xor
jl
shll
imul
adc
insb
lcall
and
inc
lds
cmp
pop
or
rcll
fimuls
mov
add
sub
push
aad
das
insl
popf
daa
cmovnp
cltd
imul
cltd
inc
add
cmp
adc
mov
push
jbe
fldcw
add
shrb
adc
cmp
in
add
mov
push
lcall
pop
shrl
pusha
adc
and
jns
mov
adc
enter
insl
jmp
lret
push
adc
xor
scas
add
lahf
clc
cmp
mov
fstl
mov
scas
push
inc
enter
scas
int
adc
es
test
cmc
imul
inc
jge
cltd
in
dec
pop
scas
cmpb
data16
out
jle
mov
aad
fildl
push
stos
pop
shrb
cltd
jns
int
sahf
in
lret
cli
inc
cmp
lret
loope
mov
popa
divl
out
das
inc
pop
inc
lret
lret
out
push
pop
adc
push
inc
cmp
mov
clc
mov
xchg
or
push
add
dec
sub
pop
push
dec
repnz
mov
out
pop
add
jmp
pop
pop
addb
adc
stc
jp
inc
iret
outsb
notb
add
xchg
cmpsl
cs
push
fs
subl
jecxz
iret
sbb
arpl
cli
shll
data16
subl
stc
sub
pop
mov
fcmovnu
jmp
push
push
xor
shll
fcompl
ss
adc
fs
xor
sub
dec
mov
dec
popa
data16
imul
bound
pop
xchg
loope
sub
in
arpl
arpl
sahf
aaa
cmp
pop
jecxz
adc
in
push
mov
add
cmp
pusha
nop
or
mov
incb
adc
out
pop
push
imul
popl
xor
xlat
pop
inc
lcall
ja
hlt
sbb
in
insl
lcall
test
push
mov
push
xlat
stos
ss
mov
icebp
sbb
or
mov
mov
xor
jle
lods
jge
stc
js
jmp
cmc
sub
pushf
sbb
lahf
pop
sahf
and
pop
das
addr16
stos
es
rolb
dec
add
aam
cmc
pushf
into
jmp
push
pop
popa
and
xor
jg
roll
add
and
leave
sub
sarb
nop
cmp
rorl
push
rorb
ret
pop
clc
stc
fmull
lods
fisubl
pop
decl
mov
lock
sub
out
pop
dec
sahf
loop
push
imul
inc
xchg
movsb
test
jp
stos
test
hlt
sbbl
fwait
cmp
es
pop
cmpsl
xchg
aam
nop
add
push
mov
pop
fucomi
ret
aaa
andb
mov
jnp
lcall
imul
jmp
mov
stos
imul
popa
mov
jecxz
test
pop
mov
mov
mov
mov
cmpsb
icebp
gs
sbb
inc
test
cld
adc
sbb
mov
or
ss
outsb
divb
xchg
xor
push
inc
ret
insb
es
loop
sub
and
or
xchg
or
sbb
mov
mov
insb
icebp
jns
insb
cltd
stos
ret
fimuls
add
sbb
fs
in
or
mov
lea
xchg
arpl
sbb
xchg
push
cmc
jecxz
ljmp
movaps
lock
mov
and
jl
inc
cltd
loop
subb
out
dec
dec
cmp
add
cmp
sahf
xchg
mov
xchg
stos
mov
cltd
les
orb
in
adc
out
aam
in
jb
pop
and
rcr
adc
iret
push
sub
add
jl
adc
xchg
dec
inc
subb
xchg
movsl
in
rcl
push
js
inc
andl
sub
lret
sbb
imul
mov
mov
mov
fldt
mov
fcomps
rcrb
jb,pn
mov
and
divl
jle
push
mov
xchg
jnp
fmuls
sub
inc
xor
xchg
jo
inc
and
xor
ljmp
js
pushf
inc
mov
aaa
dec
das
imul
pusha
out
cmpsb
js
add
push
adc
mov
lea
inc
mov
mov
dec
fwait
mov
repz
mov
ljmp
inc
or
inc
cmc
fistpl
mov
mov
mov
loopne
pushf
jns
sbb
cmp
cmpsl
ss
pop
lods
cmp
push
lock
mov
pop
aaa
add
sti
shrl
andb
xorb
mov
xchg
in
fmuls
pop
jge
nop
cmp
jmp
inc
in
fwait
aam
pop
std
inc
clc
or
push
mov
jae
xchg
mov
xorl
jae
xlat
fstps
adc
test
xchg
loop
or
mov
mov
int
mov
imul
aaa
inc
sbb
push
sub
xor
mov
cmpsl
js
mov
insb
inc
mov
outsb
outsl
std
mov
mulb
mov
add
ljmp
xor
fwait
insb
xchg
repz
jo
std
inc
fsubrl
or
pushf
xor
sub
ja
push
jp
test
xor
mov
test
loope
add
pop
mov
adc
clc
push
adc
cmp
inc
pushf
popa
scas
out
into
repnz
ret
add
pop
scas
stc
pop
cmp
push
sub
lret
stos
pop
je
mov
addr16
or
stos
cmp
xchg
inc
lods
adc
jae
add
cmpsl
es
lock
sbbl
int
xchg
and
shrl
inc
cwtl
repz
add
loope
mov
inc
and
stc
inc
jne
xchg
push
test
pop
jnp
ret
lock
add
jle
outsl
je
or
adc
push
mov
push
jns
pop
xchg
enter
jmp
ss
sahf
add
notl
xchg
xchg
fisubrl
mov
push
insb
insl
cmpsl
aaa
cmc
mov
fwait
shrb
mov
sti
mov
jno
cli
in
push
push
mov
sbb
sbb
xor
pop
cmp
push
sub
rorl
push
cmc
lds
ret
lods
nop
pop
jns
js,pt
xor
stos
insl
sub
mov
mov
das
mov
lea
mov
loope
mov
inc
push
xchg
out
mov
fists
popf
cld
jb
xchg
xchg
mov
adc
int
lods
adc
push
arpl
sub
fs
or
mov
or
pop
jle
call
leave
cld
sbb
ret
pop
mov
nop
mov
push
out
divl
fs
add
popa
push
push
mov
xorb
mov
repnz
insl
push
xchg
ds
repz
jle
shrl
insl
aad
or
inc
sub
lods
cmpsl
fwait
out
adc
mov
add
cmp
nop
lret
out
int
push
xchg
outsl
push
adc
mov
add
pusha
loope
out
pop
fimuls
inc
sbb
sbb
sbb
xlat
inc
sub
jp
ret
std
pop
sbb
lret
mov
mov
test
stc
add
fs
and
aas
ss
das
lahf
sbb
pop
mov
addr16
addr16
sti
fnstsw
dec
sub
pop
push
inc
fs
cmp
loopne
les
movsl
loopne
ss
dec
jmp
jo
and
sbb
cmp
in
dec
add
daa
outsb
sti
movsb
sub
cltd
xchg
out
pushf
xor
and
nop
dec
fbstp
mov
xorb
shl
insl
fsubrl
jbe
ret
add
or
or
cmp
es
lods
je
jge
push
aaa
out
repz
adc
inc
sahf
adc
pop
je
repnz
lods
iret
cwtl
mov
lret
adcl
mov
xor
popa
inc
mov
add
popf
inc
pop
xor
add
jge
clc
add
jecxz
icebp
and
sbb
push
jnp
mov
push
scas
lcall
lcall
pusha
mov
xor
adc
push
xor
adc
xchg
aad
int
sub
push
hlt
mov
nop
dec
jecxz
dec
mov
cmp
sub
sti
testb
lret
ds
sub
popf
cmp
out
fwait
aas
pop
adcb
jp
in
fucomip
je
stos
repz
shl
lds
cmpsb
and
test
sbb
add
sbb
test
mov
mov
sbb
sub
dec
fldcw
ljmp
add
popf
xlat
or
mov
loop
inc
dec
aad
xchg
push
mov
js
repz
mov
fs
gs
sub
and
std
lock
lds
js
jle
enter
push
jmp
lahf
dec
jle
sahf
std
rorb
inc
jmp
jae
lods
inc
in
sub
jl
inc
xchg
mov
mov
cmp
mov
hlt
jnp
push
imul
int
sub
shr
sarb
pusha
push
clc
popa
adc
mov
loop
test
js
push
xorb
xor
popa
and
dec
outsb
imul
stc
hlt
dec
xchg
orb
fdiv
xchg
shll
mov
jnp
cmp
cmp
xchg
pop
lret
dec
fiadds
cs
inc
mov
imul
je
push
cmpsl
cmp
sbb
or
push
sub
inc
out
call
imul
hlt
inc
jmp
int
mov
out
addr16
push
cwtl
and
sar
ret
in
enter
sub
jmp
fldt
int
pusha
push
cmp
adc
mov
add
movsb
out
cmp
or
pop
sub
pop
into
scas
pop
mov
push
movsb
jecxz
mov
mov
lods
enter
xor
outsb
jnp
mov
push
jb
ficompl
xor
scas
inc
mov
pop
sbb
nop
out
and
jmp
bnd
out
inc
cmp
mov
ret
in
add
mov
sbb
insl
and
pop
cmpsb
fidivs
cmp
imul
inc
nop
fcoml
push
aam
sub
jg
test
outsb
in
add
mov
ss
xor
ret
jge
sub
aad
fidivl
push
test
je
inc
jae
stos
mov
dec
negl
nop
clc
and
test
pop
push
ja
sub
inc
inc
dec
cmpl
outsl
std
sahf
dec
movsl
decb
cld
dec
mov
pmullw
mov
test
push
lret
repz
xchg
rorb
popa
mov
mov
xor
iret
stos
out
mov
aaa
push
or
inc
lret
jb
outsl
cmp
enter
in
enter
loope
or
test
mov
xor
je
cltd
idivl
scas
mov
xchg
xor
lret
dec
xchg
adc
dec
mov
add
jg
testb
sbb
sbb
dec
sahf
pop
orb
dec
dec
pop
aam
pop
cld
xlat
add
ja
push
stos
es
or
repz
push
xor
addl
sbb
lods
push
into
jbe
mov
std
andnps
mov
std
add
and
vandnpd
jg
xor
inc
xor
popl
jno
pusha
icebp
mov
ljmp
mov
iret
add
shl
dec
xchg
push
cmp
imul
or
or
popa
out
popa
popa
mov
push
clc
jle
aaa
xchg
xor
push
cmp
iret
repnz
jp
and
pushf
cmp
mov
imul
js
dec
mov
test
jnp
mov
xchg
add
or
cmp
sbb
pop
add
inc
testb
mov
out
pop
div
mov
lock
push
je
jbe
scas
aaa
insb
cmpsb
sub
mov
pop
jae
mov
leave
mov
aad
clc
push
iret
mov
das
inc
jb
jno
syscall
push
sti
loop
stos
add
jb
sbb
dec
adc
sub
out
imulb
out
les
ds
cmc
jno
dec
mov
sub
adc
or
cld
mov
add
jecxz
into
fsubrp
dec
push
xchg
push
or
dec
arpl
mov
xchg
shlb
mov
stc
icebp
fildll
jnp
mov
loope
sub
stc
dec
inc
pop
daa
orl
bound
mov
aad
mov
popf
mov
xor
dec
push
adc
xchg
popa
mov
push
push
shr
inc
xchg
jecxz
mov
into
gs
mov
jo
xchg
test
and
mov
mov
and
mov
dec
out
stos
jbe
mov
gs
loope
fcompl
mov
fsubrs
pop
mov
lahf
sbb
leave
pusha
cmp
lods
sbb
repz
cmc
repnz
cmp
add
add
push
arpl
inc
dec
fmull
jnp
sub
mov
ficompl
add
jle
in
orl
in
fucomip
jb
pop
push
repz
call
test
icebp
inc
vmovq
cmp
xlat
cli
divb
addr16
nop
dec
cmp
js
and
lds
mov
mov
lock
outsb
cmc
cmp
or
mov
mov
div
ds
sub
imul
xchg
xchg
rcrl
jb
mov
testl
xchg
mov
and
in
sbb
fdivrl
fcomip
mov
scas
movsl
mov
pushf
fldl
inc
movsb
dec
sub
push
or
sti
pop
mov
rol
int3
in
mov
jl
dec
es
out
or
adc
add
into
pusha
jae
and
daa
sti
inc
aam
sub
pusha
fsubrl
pop
xor
mov
into
sahf
fmuls
fdivrs
andl
add
lods
push
fistpll
pop
fldl2t
xchg
mov
adc
jle
ficompl
xchg
pop
adcl
add
cmp
rol
pop
jle
sub
jne
arpl
add
ds
lcall
mov
fs
fwait
cmpsb
adc
sarb
jl
pop
mov
cmp
jnp
nop
sbb
sbb
shrl
push
cmp
shr
call
arpl
inc
lret
inc
pop
pushf
pop
jl
call
test
negl
loopne
sbb
scas
pushl
aad
and
loop
xor
out
scas
xchg
mov
aad
fsts
movl
jns
xchg
scas
sub
xor
mov
pop
fcomps
pop
stc
enter
aas
stos
pushf
mov
push
jle
cltd
cmp
push
xchg
je
or
movsl
cmpsl
cmpsb
lea
push
shll
cwtl
mov
cmp
sbb
ret
jmp
inc
pop
mov
cmc
popa
pop
lods
ror
add
pop
insb
jmp
les
push
sbb
pop
or
out
jp
jecxz
lahf
aaa
mov
loope
lret
sub
and
dec
mov
test
fwait
outsl
sbb
in
mov
dec
outsl
sub
or
jle
and
adc
movsl
cwtl
xor
jns
fwait
mov
lock
add
adc
cmp
shll
cmc
pop
lret
or
jbe
mov
adc
in
sbb
popa
sbb
test
cs
inc
inc
pop
cwtl
sub
mov
int3
movsl
xchg
push
das
sub
fdivrs
adc
add
imul
dec
into
out
outsl
pusha
cmc
leave
cmovne
mov
cmpsb
cli
int
and
int
pause
jo
xor
push
fisubl
dec
or
dec
cmp
mov
xchg
mov
push
push
xchg
xchg
cltd
das
mov
or
mov
cmp
shll
in
xor
stos
lcall
xchg
stos
mov
mov
or
cmpsb
shrb
mov
xchg
mov
ret
mov
sti
xor
lcall
mov
sbbl
sub
dec
fistps
add
daa
or
aaa
cmp
cmc
out
mov
daa
push
push
es
dec
add
lds
add
cli
xor
jnp
mov
dec
sub
aas
mov
dec
ret
fsubrp
insb
test
cli
pusha
test
and
push
mov
sbb
pushaw
inc
loopne
inc
gs
pop
inc
push
adc
mov
fsubrl
adcl
call
cmp
cmp
outsl
cmp
icebp
jbe
ljmp
jg
outsb
pop
popa
cmp
xchg
fdivrs
pop
out
or
jb
push
dec
or
popa
push
sbb
ficoms
pop
dec
ss
dec
lock
popf
add
out
add
mov
xchg
vcmpsd
jge
ficoms
sahf
cmpsl
add
adc
incb
ljmp
push
mov
adc
and
adc
xchg
jl
scas
pop
in
inc
and
adc
hlt
jl
aad
jbe
lret
sahf
add
cmpsl
sub
pop
mov
cmc
outsb
stos
xchg
mov
adc
xchg
aas
push
jae
mov
sahf
push
jl
jno
push
dec
pop
cmp
xchg
es
or
es
stc
int
xchg
je
imul
mov
mov
insl
adc
movntq
out
mov
add
imulb
lahf
lret
outsl
loopne
cmp
js
lods
subb
add
dec
jns
cmc
stos
dec
mov
lret
push
lock
andb
mov
loop
fdivl
and
js
insl
push
pop
dec
icebp
mov
cmp
or
repz
imul
sbb
fcoml
pop
dec
mov
stos
lret
mov
mov
out
xchg
repz
jge
xchg
out
pop
pop
ret
add
jp
adc
adc
out
cmp
mov
pushf
out
js
jno
mov
xchg
cmp
inc
inc
or
lds
dec
jmp
popa
xchg
cmp
pop
sbb
orb
push
sbb
push
inc
push
and
cmp
adc
mov
test
cmpb
jns
shrl
scas
gs
call
lret
add
cmp
lret
out
lds
adc
daa
loopne
jecxz
int
dec
jae
inc
gs
mov
push
sub
mov
push
rolb
setno
push
js
sbb
popa
ds
dec
push
inc
adc
imul
add
dec
pop
bnd
jno
icebp
stos
jle
call
int
mov
into
in
out
andl
cmp
fiaddl
pop
sub
filds
addl
sar
hlt
pop
add
and
lea
sub
jb
cli
movsb
lcall
xor
push
jmp
inc
push
repz
clc
push
pop
inc
mov
push
and
lock
sub
mov
rcr
jge
int3
push
mov
dec
sub
jnp
push
shr
cmp
scas
pop
push
push
lcall
shr
imul
popl
push
es
popa
lock
stos
pop
cli
jns
xor
insb
cmp
in
addr16
xchg
stos
prefetchw
fsubl
mov
sub
jb
sbb
pop
loope
leave
movsl
sub
jle
jge
shrb
les
test
pop
dec
lea
lods
andb
jb
add
pop
sbb
fildll
nop
scas
sub
cmpsl
pop
sub
mov
inc
jne
adc
jge
cwtl
js
adc
sub
ds
cli
loopne
inc
lods
xor
in
in
xor
movsb
mov
mov
bound
fsubrs
xlat
jno
stc
sbb
xchg
mov
cmp
sbb
cmpsb
ret
in
pop
push
std
xchg
loope
fidivs
jg
sub
or
push
adc
mov
fs
test
cmp
jecxz
sub
aas
sub
pop
mov
dec
inc
or
mov
nop
in
mov
out
jo
jnp
mov
add
sahf
mov
and
popf
ja
insl
sbb
cmp
pop
push
cmp
jns
negb
mov
push
mov
leave
xchg
sahf
popa
mov
outsb
leave
ds
ss
mov
xchg
dec
aas
into
scas
pop
xor
arpl
insb
jns
add
cmp
dec
insb
sbb
aad
test
aam
stc
xlat
inc
fdivr
push
outsb
mov
js
in
int
mov
dec
push
mov
jge
xchg
out
inc
pusha
test
xchg
mov
mov
pushf
push
shll
push
xchg
pop
pop
insl
sbb
dec
inc
push
in
pop
andb
add
mov
jl
fnstcw
add
repz
xchg
out
mov
loop
push
rcrl
out
mov
addr16
js
cmp
dec
daa
sbb
xor
adc
adc
das
aaa
mov
inc
xor
jb
jae
mov
jns
int
and
and
hlt
pushf
sbb
xor
rclb
mov
rorl
push
fwait
sti
scas
imul
push
stc
call
ror
jp
sub
lcall
imul
sub
fld
das
mov
cmp
lret
bnd
lds
xchg
adc
scas
xchg
outsl
xor
adc
int
mov
movsb
jbe
mulb
mov
jo
mov
ret
pop
xor
pop
rolb
mov
mov
pop
inc
push
rclb
mov
sub
mov
inc
add
sbb
mov
jle
mov
jno
int
movsl
scas
sbb
pop
mov
sbb
pop
lret
int3
add
xchg
iret
inc
cli
scas
popf
pop
les
add
pop
push
mov
cld
or
test
in
int
js
shrl
andb
sbb
rcrb
daa
cs
cmp
dec
out
sub
stos
xchg
pop
and
sub
int
xchg
clc
arpl
out
sub
inc
aas
and
ljmp
repnz
xchg
xchg
mov
mov
std
sbb
insl
mov
scas
call
arpl
shr
sub
jecxz
loop
ljmp
clc
xchg
sbb
ret
std
jl
mov
jne
push
inc
inc
and
inc
xchg
cltd
in
pop
jo
mov
push
into
fsubl
mov
xchg
insb
cltd
nop
mov
mov
inc
mov
scas
shlb
pushf
sbb
adc
je
pushw
xor
dec
lret
jle
lds
push
inc
pushf
cli
mov
xchg
lock
addr16
test
mov
mov
xchg
movb
mov
dec
cli
lock
mov
add
sbb
cmp
mov
inc
xor
je
cmpsl
rcrl
es
arpl
pop
push
aam
sub
cmp
movsl
icebp
fmuls
ficoms
add
test
sbbb
lea
dec
lahf
stos
adc
xor
xchg
sarb
cmp
outsl
daa
or
outsb
pop
sbb
xchg
adc
push
int3
filds
sbb
sub
cmp
sbb
inc
mov
mov
push
in
dec
fs
mov
mov
sbb
outsb
test
adc
dec
loop
mov
aam
test
and
repz
xor
mov
adc
cmc
mov
sbb
pop
xchg
pop
iret
and
lcall
mov
stos
je
ljmp
in
mov
dec
dec
ret
xor
jns
scas
ficomps
ja
int
leave
xor
roll
push
xchg
sbbb
pusha
mov
inc
sti
adcb
in
inc
mov
pop
mov
mov
in
jp
les
jle
and
aaa
mov
mov
or
cmp
pop
scas
cmp
ret
aad
add
mov
sbb
insl
jo
fisubrl
in
adc
pop
push
adc
scas
fmull
jns
adc
push
nop
jge
gs
ror
std
or
and
lock
in
ljmp
insb
cmp
lea
test
adc
insb
xchg
push
addr16
jmp
jne
pop
ret
orb
xchg
and
int3
icebp
ljmp
mov
cmpsl
pop
sbb
insb
iret
js
jbe
incl
pop
sbb
mov
jae
lock
daa
cmp
push
movsl
lret
mov
adc
rcr
mov
shll
sbb
pusha
paddw
imul
pop
loope
jnp
mov
adc
inc
std
lods
movb
aam
cmp
pop
lock
push
add
jnp
outsb
mov
lock
add
xlat
cmp
mov
in
sub
xchg
call
arpl
das
sbb
test
xlat
imul
dec
jo
add
ja
or
lds
xchg
int
stos
xchg
ja
jmp
xchg
aad
rcrb
jg
sbb
inc
cmp
add
mov
out
sahf
jmp
fldt
shl
lds
enter
lock
xchg
or
mov
xlat
fstps
xchg
add
pop
insb
insb
outsl
push
push
push
push
imul
sbb
cmp
lock
in
cmpsl
pop
adc
fwait
mov
xor
jns
add
sti
aam
out
stos
mov
jb
jmp
mov
fidivrl
scas
xlat
inc
pop
call
in
push
mov
dec
or
leave
data16
pop
and
pop
bound
pop
movb
xorl
sub
adc
stos
sub
mov
xchg
mov
out
mov
add
xor
mov
out
test
add
dec
mov
cmp
mov
xchg
mov
add
inc
icebp
addr16
dec
xchg
mov
iret
cmp
lret
mov
add
enter
imul
inc
nop
testl
sub
xchg
test
mov
sbb
aam
pop
imul
loop
jge
out
outsl
push
scas
icebp
std
sbb
movsl
sbb
sti
xchg
js
dec
dec
adc
imul
mov
push
dec
xlat
aam
inc
ret
pop
lods
mov
test
fdivp
cmp
lock
xor
lret
inc
xor
test
mov
jle
cmp
out
outsb
inc
test
test
sbb
fucomi
das
fcmovbe
sub
fisttps
insb
dec
dec
push
pop
movsl
mov
jp
out
mov
out
in
cmpsb
ret
pop
flds
jae
cmp
cld
adc
xchg
xchg
inc
inc
pop
mov
xchg
inc
icebp
dec
movsb
add
or
cmpsb
xchg
daa
xor
addb
ss
lods
outsb
push
mov
movsb
jecxz
addr16
movsb
mov
cmc
mov
push
xor
xlat
andb
ss
pop
jp
mov
cs
jo
adc
movsl
jg
insb
xor
lock
out
jbe
add
aam
cld
loopne
daa
out
bound
sub
dec
in
push
dec
xchg
lcall
shrl
sbb
xchg
sahf
lods
dec
mov
pushf
cmp
leave
xchg
pop
lret
ret
cmp
adc
mov
push
test
mov
mov
cmp
jbe
scas
add
test
push
inc
lahf
lcall
mov
xchg
scas
sahf
jno
std
jns
lods
mul
push
imul
ret
pop
pop
js
aaa
iret
mov
faddl
jmp
cmp
push
in
sbb
pmuludq
imul
push
ljmp
and
in
sbb
sbb
sar
rcl
ja
sbb
test
stc
pop
lea
mov
xchg
or
icebp
add
sti
pop
lds
mov
mov
movsl
fnsave
in
xlat
jmp
imul
or
cli
push
mov
test
pop
call
lcall
push
loopne
gs
inc
xchg
xchg
fcoms
push
insb
and
iret
ret
xor
sahf
das
lock
ljmp
jae
out
jmp
mov
sub
add
jg
into
or
aad
push
mov
lods
xchg
push
mov
cmp
inc
hlt
cs
push
jg
or
cmpsl
pop
xor
cmp
insl
adc
push
aad
or
pop
adc
pop
ret
outsl
into
in
sbb
push
mov
cmc
adc
in
sub
out
in
dec
aaa
xor
sti
push
in
ret
xchg
rol
sub
or
sub
idivb
sarl
jb
pop
sub
mov
mov
sbb
lcall
sbb
js
dec
mov
jo
cli
movsb
fbstp
lods
pop
fmull
es
xor
push
xor
and
and
insl
or
sbb
mov
popf
sub
rorl
jno
in
icebp
and
pop
jnp
dec
aad
pop
mov
jne
jns
xchg
pop
jne
ret
leave
aaa
mov
je
sbb
push
sbb
dec
sbb
imul
lock
outsb
mov
mov
jp
popa
pop
enter
repnz
sarb
in
in
icebp
xchg
nop
xchg
cmpsb
lock
or
es
mov
fimuls
dec
dec
mov
stos
mov
lret
shrd
cmpsl
push
cmp
add
dec
sahf
jmp
cmp
fcmovnbe
sub
xchg
inc
aad
pop
inc
clc
xchg
inc
lcall
inc
mov
push
je
jnp
dec
or
inc
xchg
dec
pop
mov
push
adc
addb
daa
lret
or
dec
stos
js
pop
mov
adc
sbb
sbb
insb
pop
jl
loope
mov
mov
push
cwtl
test
in
dec
int3
lcall
mov
sahf
sbb
or
aad
mov
js
push
pop
jno
xor
pop
test
addr16
pop
sub
xor
loop
add
fisubrs
mov
sub
mov
adc
add
mov
mov
out
cmp
shr
and
loopne
loopne
das
incl
xchg
jmp
cmovne
in
arpl
cltd
test
xchg
add
ljmp
pmaxub
dec
lret
mov
mov
loope
push
das
mov
pop
shr
movsb
cmp
pushf
int3
sub
ja
cmp
das
push
test
push
dec
and
movsl
sbb
jae
mov
xchg
dec
dec
test
adc
mov
inc
rcll
push
ja
outsl
sbb
sahf
test
xor
ffreep
setl
cmpsb
pop
rep
dec
fsubrp
fs
cmp
adc
lock
scas
mov
and
inc
cmp
cli
jg
push
adc
sub
push
dec
xchg
test
lahf
lock
idivl
and
popa
rclb
enter
daa
repnz
jg
pushf
mov
mov
and
stc
aam
not
into
movsb
mov
nop
add
inc
jl
movb
mov
ja
xchg
lret
stos
test
cli
mov
movl
movsb
mov
sub
cmp
outsb
push
push
adc
sbb
mov
into
lahf
xchg
sti
and
insb
adc
rol
mov
sub
or
lret
icebp
or
fistpll
sbb
call
and
jl
les
mov
inc
fsubrl
mov
mov
cli
sbb
jnp
stos
cmp
sub
pop
jnp
call
lods
lods
divl
cltd
icebp
fwait
pop
out
push
xor
push
call
add
jecxz
popf
jae
sahf
lahf
ud1
or
inc
orl
jbe
pop
addr16
repz
mov
bound
lds
loope
in
sbb
push
mov
push
ffree
sbb
push
xor
jecxz
xchg
xchg
or
pop
mov
mov
icebp
dec
mov
invd
mov
mov
xlat
mov
fidivrs
xor
movsl
testb
mov
pop
out
dec
nop
ret
push
repz
movb
aam
insb
leave
fisttpl
mov
sbb
add
mov
movsb
out
cmp
adc
push
mov
fnstenv
jo
mov
imul
inc
out
pop
popfw
mov
cmp
test
mov
or
aam
push
rorb
inc
and
std
push
or
jmp
test
arpl
test
push
push
lods
out
mov
add
enter
inc
xchg
arpl
and
add
xchg
popa
add
arpl
push
shrb
jmp
shl
loope
notb
jbe
repz
jl
cwtl
push
dec
scas
cwtl
xor
ret
dec
cs
inc
jae
repnz
sub
sarb
iret
ret
insl
inc
repnz
push
sub
pop
mov
iret
mov
rolb
call
sub
repnz
or
std
xor
aaa
mov
daa
aad
sub
pop
pushf
mov
cs
sahf
int3
mov
mov
scas
xor
or
leave
or
ret
out
stos
fs
inc
std
test
lcall
push
mov
mov
dec
lods
and
pop
push
dec
imul
mov
push
xchg
shl
pop
push
sub
cpuid
sub
mov
popf
inc
xor
faddl
mov
adc
sub
cs
xchg
mov
loopne
mov
pop
mov
and
pop
push
add
push
inc
cwtl
ja
test
adc
nop
out
mov
addr16
aam
adc
dec
inc
inc
loopne
mov
or
inc
daa
aam
sub
notb
scas
lcall
ret
test
mov
dec
inc
sub
rclb
and
bound
cmp
or
les
sbb
jmp
out
mov
out
mov
test
les
loope
jle
cli
rcrb
xchg
xor
loope
mov
pop
lds
sbb
jmp
mov
shlb
cmpsl
mov
pop
or
fcos
gs
imul
cmp
mov
inc
dec
push
mov
clc
sub
loopne
sub
cmpsl
ljmp
cltd
xchg
or
mov
pop
pop
pop
lods
xchg
push
cmp
push
decb
ljmp
inc
into
test
jo
mov
push
stos
gs
cmp
sub
dec
dec
lock
pop
xor
je
add
stos
stos
test
hlt
add
rcrb
push
push
enter
push
sbb
aad
sub
pop
pop
adc
imul
xchg
pop
push
mov
xor
pushf
repz
imul
mov
fs
mov
sti
cmp
fs
adc
aas
iret
scas
out
lret
ret
leave
jnp
xor
mov
or
ficoml
mov
cltd
xor
lret
or
dec
sub
int
nop
jecxz
data16
jge
adcb
inc
pop
mov
push
adc
xor
and
stos
loopne
in
xchg
jb
rcr
xor
or
nop
adc
sar
out
aad
roll
shlb
adc
mov
pop
sbb
aam
pop
inc
and
xor
jb
loopne
jns
adc
mov
rcll
add
inc
loope
outsb
mov
mov
xchg
stos
xchg
mov
ret
iret
pop
incl
jno
jno
xchg
fmuls
add
mov
mov
popaw
loop
adc
xchg
popa
or
test
pusha
insb
push
int3
stos
leave
in
pop
mov
in
aad
test
or
push
andb
cmpsb
add
int3
adc
repz
xchg
mov
stc
mov
das
adc
jmp
test
or
push
xchg
inc
jbe
sub
xchg
pop
in
mov
jg
jno
mov
cmp
pop
pop
mov
sarb
mov
leave
mov
inc
fcoms
cltd
pop
adcl
fwait
pop
daa
ret
fdivrl
dec
mov
dec
xchg
mov
inc
pushf
dec
pop
lea
mov
js
jns
pop
js
sub
sbb
xchg
sub
push
xor
xchg
jne
mov
lcall
inc
movzwl
sarl
add
dec
ret
sti
enter
shl
sar
dec
sbb
dec
icebp
frstor
mov
int3
pop
mov
sbb
sbbl
cmp
jbe
or
fcompl
loop
push
loope
mov
aad
das
sti
jmp
xor
pop
int3
push
das
jno
pop
mov
pop
and
movsl
inc
mov
fiaddl
push
std
lds
aam
sub
stos
xor
enter
mov
sbb
fscale
sahf
jle
adc
dec
cmp
data16
xor
sbbl
aaa
xchg
rorb
xor
bound
push
mov
pop
ret
mov
cltd
cld
cltd
hlt
ficoml
cmp
sarb
mov
insl
xchg
movsl
mov
dec
push
decb
add
mov
imull
add
mov
add
jge
out
mov
jmp
mov
mov
outsl
je
pop
xchg
mov
sarl
das
jne
adc
arpl
int3
into
inc
test
sbb
or
mull
movsb
xchg
adc
sbb
mov
jno
cli
and
nop
mov
data16
inc
repnz
dec
jne
divl
jae
pop
outsb
out
add
cwtl
cwtl
out
out
repnz
sub
xlat
gs
mov
stos
daa
inc
mov
mov
push
push
aaa
pop
shl
or
stc
inc
enter
lcall
inc
dec
xchg
sbb
test
pop
add
fs
pop
sub
or
fnstcw
out
and
dec
push
stos
inc
push
shrb
xchg
sub
mov
mov
sbb
push
sti
and
mov
push
and
cmpsb
push
pop
xchg
fistpl
or
add
jbe
mov
sub
mov
shlb
mov
pop
or
sbb
jne
test
add
fcoms
and
aam
mov
and
or
iret
out
inc
bnd
mov
sub
or
fnstenv
enter
jl
enter
ljmp
lds
hlt
add
pushf
or
sub
stos
sub
push
pop
mov
sbb
imul
std
incl
scas
mov
pop
cmp
hlt
cmp
aam
das
fists
lahf
cwtl
push
lods
dec
sub
popa
push
mov
in
jnp
xchg
cmp
and
dec
add
lods
xchg
adc
lds
jg
shrb
insl
xchg
push
repnz
or
mov
mov
vpsubd
mov
int
dec
mov
jge
xchg
scas
pop
ret
push
js
scas
test
xor
cmp
dec
dec
mov
stc
loopne
insb
js
jb
mov
cmp
sub
pop
cwtl
loop
xor
mov
mov
sahf
xchg
aad
or
test
xor
in
jle
sub
sbb
add
and
std
insb
xor
jmp
testb
mov
inc
test
nop
pusha
xor
fisubrl
icebp
pop
std
fsubrl
or
mov
addr16
inc
aam
dec
stos
outsl
dec
sbb
adc
roll
imul
xchg
and
mov
sahf
push
daa
inc
out
loopne
and
push
mov
js
inc
push
add
aaa
xor
rorl
mov
cmp
add
mov
insl
fidivl
bound
inc
add
call
shl
inc
sub
mov
inc
cmp
jo
or
inc
cs
iret
fwait
add
inc
mov
daa
stc
sbb
cmp
xchg
push
inc
pop
mov
pop
pop
sahf
cltd
mov
ljmp
push
dec
xchg
popa
sub
adc
loop
jg
je
pop
mov
cmp
ret
pop
repz
adc
aam
jnp
or
xlat
jg
outsl
mov
lret
push
mov
fstpl
mov
add
jnp
xchg
mov
cmp
pop
mov
addl
add
and
xchg
test
in
jns
jnp
hlt
mov
lcall
loope
sti
lcall
jno
adc
sahf
loope
sti
js
mov
dec
enter
adc
fistpll
int3
sbb
jecxz
push
cmp
mov
cmp
jbe
nop
pushl
std
mov
jmp
pusha
mov
xchg
jnp
and
fucomi
ds
push
dec
in
leave
inc
mov
pop
pusha
cmp
lahf
inc
adc
cmp
jo
out
popf
xchg
aas
iret
test
out
out
aas
jb
mov
xlat
xchg
push
xchg
mov
lods
out
and
aaa
pop
adc
jmp
cmp
clc
or
movsl
xlat
mov
cmp
mov
mov
cmpsl
hlt
mov
jno
ds
mov
sahf
lret
push
mov
out
imul
mov
pop
push
mov
mov
or
inc
and
leave
inc
mov
xchg
std
dec
adc
mov
outsb
push
pop
imul
mov
inc
cmp
fsubrs
sarl
sub
inc
lods
fiadds
idiv
xchg
scas
inc
fstps
fstp
inc
cltd
out
addr16
call
dec
push
lcall
push
cs
push
popf
lahf
leave
push
xor
mov
push
mov
jp
adc
jmp
iret
xchg
mov
jp
cli
cmpb
ja
adc
jne
adc
cmpsl
mov
mov
pop
mov
jns
aad
ja
cmp
popa
sbb
orl
mov
cmp
xor
dec
mov
mov
dec
sbb
in
lcall
idiv
push
push
or
mov
fsub
mov
lods
in
arpl
sub
pop
cmpsl
inc
rcrb
add
mov
es
fdivl
loop
stos
or
js
mov
add
sbb
sub
cli
and
rdpmc
fwait
adc
in
or
and
mov
xchg
or
mov
cmp
loope
insb
ret
aaa
mov
in
aas
test
scas
sub
roll
enter
jl
jmp
push
into
rorb
mov
imul
jge
outsl
or
push
push
xchg
sbb
cmp
pop
xor
push
mov
adc
out
pop
add
mov
pop
into
enter
aam
ret
cmpsb
mov
sub
icebp
daa
sti
negl
push
inc
frstor
repz
scas
cld
push
decl
jge
xchg
cwtl
adc
fdivp
pop
testl
add
int
add
jge
sub
sbb
and
test
insb
or
add
or
cli
mov
loop
fidivrl
inc
inc
enter
lods
ds
cmp
cmp
insb
xor
adc
nop
sahf
mov
jns
cld
pop
loope
cmp
mov
push
jb
lret
out
lahf
fimull
repnz
dec
xor
xor
addl
xchg
push
sub
test
sarb
fcoml
in
mov
cmp
lods
lret
mov
inc
and
jnp
call
mov
adc
xchg
add
shl
enter
cmpsb
inc
inc
mov
stos
jmp
inc
pop
and
cmc
fsubrl
outsl
mov
out
aam
cmp
pop
mov
cmp
pop
rep
inc
xor
rclb
cltd
aad
mov
pop
movsb
mov
adc
push
mov
in
sbb
sub
jbe
leave
ds
jg
shl
pushf
es
and
rol
xchg
popf
inc
sub
jl
aas
jno
pop
mov
nop
je
into
in
scas
fisttpll
mov
cmp
rcrl
sbb
arpl
or
aas
sub
jbe
push
pop
aaa
xorl
es
aad
xchg
fisubs
movsl
cmpsb
pop
lods
fistl
stos
daa
cmc
add
mov
cmc
xchg
in
cmc
jno
fidivl
dec
cmp
adc
mov
sub
mov
movsb
fwait
mov
int
dec
cltd
pop
dec
jae
out
out
jns
adcb
fidivl
mov
and
ret
xor
mov
daa
imul
fldt
jo
mov
mov
xor
push
std
out
inc
das
xor
test
jle
das
push
jae
in
jno
mov
loope
lods
jno
dec
inc
cmp
sahf
jno
lar
pop
cmpsl
imul
shlb
mov
adcl
fcmovne
ljmp
mov
data16
movsl
inc
filds
subb
leave
pop
shl
fwait
cmp
adc
in
xchg
cmp
fstpl
sbb
ret
mov
gs
dec
out
mov
xchg
lcall
push
add
cmpl
nop
std
xor
cwtl
data16
loopne
push
lds
repz
add
cli
cmp
aad
xchg
xor
mov
xchg
inc
xchg
clc
jb
sub
xchg
dec
shl
jb
cmpl
add
cmpsl
in
jp
adc
fidivs
int
lock
add
or
aam
add
rorl
popf
mov
repnz
sub
push
dec
aad
mov
and
push
test
cmpsl
lods
sbb
leave
js
pushf
je
in
clc
mov
push
loopne
push
or
fwait
nop
cwtl
stos
cli
push
cs
push
pop
adc
mov
rolb
push
dec
and
aam
sbb
mov
data16
mov
jnp
pop
dec
adc
out
cmp
sub
addb
mov
cmp
pop
movsl
lds
call
push
repz
mov
out
enter
mov
jmp
mov
xchg
pop
fcmovnb
shrl
push
jbe
push
ret
movsbl
fwait
outsl
jo
rol
out
pop
stos
shlb
cmpsb
jo
mov
sbb
mov
pusha
or
pop
dec
enter
jl
lret
push
pop
jp
orl
out
push
arpl
leave
outsl
cmpsl
ljmp
imul
and
leave
push
cmp
inc
mov
jg
loop
movsb
mov
sub
dec
dec
mull
sub
push
lcall
cmpsl
lock
in
push
js
dec
push
and
popf
fdivrl
lea
mov
adc
rcll
inc
sbb
push
and
fidivrs
sub
jnp
xlat
mov
cmp
cmp
sub
stc
mov
or
mov
dec
rcrb
fstl
mov
das
cmp
sub
sbb
jo
sub
sbb
add
es
test
fmull
in
mov
addr16
dec
pop
lock
dec
test
cli
fs
pop
mov
or
jle
mov
mov
fcoms
jno
sbb
sbb
cmc
dec
mov
dec
add
rorb
inc
jnp
aad
lea
dec
pop
dec
rorl
sahf
xchg
cmc
insl
push
xchg
inc
outsl
jnp
shrl
inc
stos
mov
mov
lock
leave
mov
loopne
leave
in
into
pop
ja
test
and
pop
cmp
movsb
int
aam
xchg
negb
mov
jle
notb
aam
decb
je
push
mov
push
cmpsl
dec
or
mov
std
lea
test
push
add
xlat
or
int
dec
mov
cwtl
mov
jne
pop
push
out
xor
repz
lahf
gs
cmp
add
add
dec
pop
repz
imul
xor
loop
jg
xchg
push
or
lock
jp
mov
xchg
lds
mov
mov
subb
add
jns
repz
xor
mov
leave
cmpps
leave
jo
movsl
pop
mov
sbb
shll
xchg
insb
inc
clc
xor
mov
shrb
loopne
fcompl
jge
xor
imul
adc
repz
jo
lds
loop
mov
pop
nop
clc
mov
adc
mov
in
imul
mov
movsb
sub
call
fdivp
mov
int3
jecxz
fiaddl
or
scas
or
push
inc
repz
push
mov
jl
sub
pushw
aaa
mov
loopne
mov
sub
mov
sub
fnstcw
arpl
adc
mov
push
loope
push
clc
ljmp
ss
into
add
adc
inc
in
das
and
or
adc
and
push
mov
push
test
insb
jp
mov
lcall
cmc
and
lock
inc
stc
adc
push
mov
aad
in
sbb
incl
cmpl
out
addb
bswap
xor
movsl
daa
daa
shrb
push
ret
cmpsb
mov
enter
call
or
loopne
cld
enter
into
stos
jp
sbb
movsb
test
xchg
mov
dec
int3
negb
loopne
inc
and
jg
sub
lea
jl
std
mov
cmp
dec
rcrl
cmpsb
sbb
lods
xchg
loopne
insb
add
inc
dec
out
js
mov
xchg
imul
ja
pop
in
fnsave
cmpsl
sti
mov
cmp
int
inc
push
pop
and
sti
je
clc
pop
into
or
testb
or
cmp
jae
int3
iret
popa
xor
xchg
aas
pop
ret
lock
sub
nop
cmp
sbb
sub
sub
imul
repnz
xorb
xchg
je
in
mov
iret
mov
aad
dec
bound
cld
add
sbb
xchg
fdivs
inc
bnd
inc
dec
lret
mov
xor
int3
fsubs
dec
xor
mov
rcrl
in
mov
outsl
cmpsb
ds
jmp
dec
inc
addr16
mov
push
push
or
mov
cmc
and
and
mov
xchg
jmp
jae
push
je
jge
mov
add
mov
mov
mov
xchg
mov
jo
jns
es
repz
pop
push
xchg
jmp
fstpl
out
into
mov
cmpsl
aaa
sub
pop
jae
mov
das
push
add
inc
test
push
xor
in
add
sbb
enter
adc
ret
ret
dec
mov
stos
movsb
test
jo
push
and
gs
sbb
repnz
mov
push
xchg
sahf
cltd
out
fisubrs
scas
and
scas
xlat
cmp
lahf
inc
mov
stos
jl
daa
sti
push
mov
push
ja
mov
jle
add
fnstcw
testl
dec
and
xchg
stc
pusha
das
push
mov
or
idiv
push
mov
cs
xor
push
mov
push
push
jne
or
je
cld
pusha
out
mov
pop
push
xorb
sub
mov
pop
pusha
popa
popa
mov
add
mov
inc
cmpl
inc
popa
sbb
dec
pop
mov
scas
into
ffree
sbb
xor
fbld
pusha
ret
xchg
cltd
add
aaa
sbb
fdivl
mov
push
or
imul
mov
stos
stc
into
xchg
js
mov
out
mov
pop
test
xchg
ds
sbb
mov
xchg
mov
cmp
popa
pushf
mov
inc
stc
xchg
xchg
xchg
inc
push
jnp
and
xchg
bound
pop
in
push
inc
jecxz
repz
fcomps
fnsave
aaa
notl
fsubs
or
pop
jnp
pop
repz
add
ljmp
out
mov
sub
test
icebp
sbb
sti
or
jno
xor
inc
mov
cltd
xor
shrb
adc
je
shr
dec
fidivl
push
push
scas
jne
lret
jbe
xchg
roll
fnsave
imul
lret
in
or
test
mov
dec
loope
push
xlat
inc
pop
stos
and
cmp
and
andl
mov
xchg
xchg
lods
add
pop
rorl
mov
test
mov
mov
fistpll
data16
rorb
xlat
dec
js
sub
aas
scas
and
popf
or
test
or
push
mov
popf
mov
andb
or
lret
adc
dec
cmc
push
mov
jne
jge
imul
out
lcall
call
add
jb
ja
pusha
out
repnz
sub
push
jp
inc
in
daa
ss
fadds
pop
xor
js
sbb
xor
int3
dec
ret
cld
out
arpl
in
loop
daa
cmp
lcall
mov
lret
cmp
push
dec
mov
and
gs
mov
stos
mov
jg
arpl
add
mov
jle
mov
push
idivb
pop
mov
xlat
mov
inc
xor
mov
loopne
lret
add
ret
stos
mov
out
or
mov
or
adc
mov
fisttpll
arpl
add
addr16
std
cmp
hlt
in
dec
inc
xchg
xor
dec
jp
jno
lock
int3
aaa
in
push
add
cli
int
lock
jnp
xchg
sub
cmp
sbb
inc
fidivs
or
loop
cmp
dec
xchg
or
jmp
sub
shl
xorl
jb
mov
ja
mov
lods
mov
leave
pushf
out
or
movsl
pop
sti
add
clc
jge
jge
inc
or
push
push
xlat
dec
mov
loopne
into
jle
scas
mov
mov
pop
fadd
sbb
test
jo
mov
inc
sbb
movsl
test
vpunpckhdq
xlat
xor
sbb
jae
pop
cmp
mov
xorl
movzbl
imul
clc
or
push
fidivl
pop
and
inc
sbb
in
in
or
dec
jb
cmp
icebp
adc
inc
jge
xchg
mov
ljmp
mov
mov
mov
push
push
jmp
push
enter
jge
outsl
cmpsb
arpl
enter
jp
cwtl
sbb
dec
mov
mov
inc
or
fs
jmp
xchg
mov
mov
mov
jae
inc
test
xchg
push
mov
arpl
add
fdivrs
adc
xchg
mov
sub
out
fcomip
fldenv
inc
add
xchg
xchg
pop
ss
mov
xor
lret
mov
fmul
aam
and
cld
enter
mov
inc
mov
jecxz
dec
mov
mov
scas
sub
cmp
test
pop
mov
adc
sbb
pop
adc
cs
push
std
jns
repnz
cs
sbbl
inc
jl
sbb
cmp
jl
pop
int3
push
ucomiss
negb
pusha
add
jae
cmpsb
push
xor
adc
aas
lea
push
xchg
jg
aad
out
or
into
shrl
mov
jl,pt
adc
mov
ret
mov
loop
test
xchg
ror
pop
add
popl
int3
cmp
dec
add
sub
or
incl
lock
fidivs
push
scas
xorl
pusha
stos
inc
pusha
bnd
sahf
add
push
inc
pop
pop
adc
adcb
imul
mov
jnp
jne
popl
cwtl
iret
add
mov
mov
sub
shlb
repnz
out
negl
clc
fcoml
jecxz
dec
jp
cmpsb
inc
je
mov
mov
sub
mov
adc
adc
ja
or
sub
add
xchg
xor
fildl
sbb
mov
repz
in
adc
decl
outsl
sbb
stc
jnp
jnp
add
dec
outsb
sbb
fildl
mov
imul
enter
mov
cmpsl
popa
test
jno
mov
mov
ret
lock
cs
std
ljmp
add
notl
xchg
adc
mov
push
lods
jb
add
jp
fadds
cwtl
cli
ja
loopne
mov
push
aas
jo
imul
adc
fs
inc
jns
movsb
dec
ror
inc
arpl
fiaddl
repnz
sbb
clc
mov
add
sub
push
mov
ja
andl
mov
in
negl
xchg
xchg
aam
push
lock
insb
in
dec
push
outsl
and
les
shll
cmp
in
ret
pop
mov
movsb
sub
mov
cmp
push
icebp
jns
outsb
xchg
dec
mov
and
jg
imul
test
jge
xchg
and
push
iret
insb
in
xlat
ret
orb
push
push
pushw
inc
adc
mov
mov
lret
push
xor
shll
test
pusha
es
insl
or
inc
popa
xchg
jle
mov
lret
lcall
and
insl
add
outsl
mov
or
adc
ds
and
arpl
ret
js
and
mov
pop
stos
sbb
sub
xchg
dec
insb
into
mov
fisubrs
mov
in
pop
subl
cmpsl
movsb
add
inc
repnz
adc
ret
xor
xor
add
mov
pop
inc
adc
loopne
into
pop
scas
movsl
pop
test
jo
movsb
loopne
loopne,pt
cmp
jae
sti
out
dec
or
int
lret
and
mov
pop
xor
fildll
sbb
decl
inc
cmpsl
dec
rolb
jnp
pop
add
xchg
xor
xchg
aas
cld
jbe
xlat
fstl
das
outsl
xchg
xchg
xor
or
imul
imul
sarb
push
inc
stc
ljmp
orl
imul
in
or
mov
lods
jmp
ficoms
jecxz
in
insl
jge
or
fbld
xor
movsl
icebp
and
repz
repnz
dec
mov
inc
and
out
push
mov
mov
ret
stc
fsubl
icebp
dec
pop
jmp
dec
cmp
subb
out
lods
loope
shrl
rorb
xchg
fnstenv
stos
lcall
mov
loop
add
xor
lods
js
cli
mov
jp
xlat
ljmp
sub
xor
ret
mov
out
popa
outsl
or
mov
mov
psubb
ret
mov
add
sub
test
push
or
pop
pop
lahf
in
sbb
andb
into
sbb
andl
jnp
adcl
and
lods
sti
pushaw
cmp
mov
in
ret
and
repz
xor
loope
and
das
pop
inc
lods
pop
mov
mov
scas
dec
out
popa
and
data16
xor
jmp
mov
sbb
mov
lcall
and
dec
ss
xchg
sub
dec
dec
sarl
jecxz
lret
stos
sarl
repnz
scas
movsb
lahf
ret
mov
imul
lret
movsl
adc
mov
cmpsl
inc
jne
mov
xor
mov
pop
sbb
sub
xlat
adc
adc
scas
add
stos
adc
ja
lahf
je
js
mov
xor
jl
or
adc
insb
mov
movl
push
inc
das
in
insl
movsl
push
pop
imul
cmp
mov
xorl
leave
add
movsl
inc
pop
orb
sub
push
out
push
pop
sarl
scas
shr
cmpb
mov
les
jge
lds
negl
popf
out
pop
inc
sub
xor
cmp
loop
pusha
mov
in
arpl
rcrb
bnd
ja
cmp
cmp
aaa
xchg
jb
and
aas
jb
movsl
jb
lea
cmp
dec
stos
out
sahf
repz
test
test
mov
incl
insl
fs
popa
les
cwtl
cmp
sub
sbb
jne
movsl
lock
push
add
mov
mov
enter
mov
fs
mov
inc
andl
pop
ja
daa
xor
mov
mov
push
in
lcall
loop
pop
mov
imul
into
lahf
or
jno
push
cld
push
sbb
jle
outsb
ljmp
or
test
pop
and
aaa
add
sub
dec
fs
fisubl
xchg
call
push
push
test
fldcw
adc
push
in
cmp
sbb
xor
jb
dec
adc
aaa
stc
mov
xchg
outsb
jns
pop
dec
push
mov
jnp
xchg
aad
js
xlat
call
insb
push
lret
sub
mov
xor
add
imulb
mov
sbb
es
adc
sub
xlat
loopw
cmc
mov
mov
shrb
push
adc
int
push
mov
popa
and
je
pop
das
into
cs
stos
rcr
and
das
loope
inc
cld
incl
leave
fnclex
xor
pop
jnp
pop
mov
jo
add
iret
sbbb
inc
sarb
rol
cmp
xor
out
mov
mov
imul
or
push
pop
pmaxub
in
or
jmp
add
gs
dec
pop
jmp
shrl
dec
push
loopne
iret
sub
jno
xchg
scas
dec
mov
and
add
test
pop
pop
cmp
fists
push
in
push
stc
jl
mov
push
fcmovne
test
out
lcall
out
xor
adc
cmp
mov
sti
inc
stos
std
dec
cmp
cmp
test
cmp
cmp
in
mov
rcl
pusha
call
mov
mov
cmp
jb
mov
xor
bound
aaa
jbe
sub
sub
rcrl
inc
push
or
xor
hlt
popf
mov
movsb
push
insl
mov
inc
push
or
aaa
jae
mov
jne
xlat
dec
mov
shrb
imul
lds
adc
pop
dec
mov
jnp
cmp
cmp
scas
insl
and
adc
jg
pop
cmp
add
lods
dec
mov
inc
iret
pushf
lea
loope
fs
std
dec
xor
gs
xor
push
lea
mov
sub
add
adc
mov
ret
sub
xchg
jecxz
cli
das
cmp
iret
xor
fistpll
in
adcl
cmp
test
mov
popa
ss
out
mov
mov
push
scas
xchg
xlat
mov
or
mov
lea
adc
jp
push
mov
sub
inc
sub
mov
mov
vaddps
test
loope
mov
loope
and
in
divl
inc
xchg
cltd
push
cmp
pop
clc
mov
lds
mov
jne
pusha
cmpl
test
sahf
cmpsl
iret
and
cmp
sub
mov
pop
jl
cmp
xchg
negl
out
leave
loopne
adc
and
fadd
pusha
push
add
lods
and
or
dec
ret
cmpsb
pop
fnstcw
sahf
add
sbb
and
cpuid
xchg
aaa
imul
cmp
inc
pushf
push
sbb
mov
fsubrl
push
rorl
jae
out
mov
es
mov
adc
push
cld
sbb
dec
mov
xchg
xchg
or
add
repz
mov
rclb
nop
loop
pop
lret
mov
xchg
xor
movl
and
sub
jl
push
mov
test
popa
insl
cmp
sbb
sarl
and
lock
pop
pusha
sub
inc
les
add
dec
insb
mov
and
lret
cmp
cmpsl
push
jmp
push
sbb
repz
and
ds
divb
jnp
jmp
out
aam
rcrb
pop
cmp
sbb
pop
repz
idiv
jecxz
mov
ret
out
adc
push
dec
les
mov
inc
int3
lods
inc
dec
lcall
or
in
push
add
jle
or
add
add
out
and
jg
cli
loop
pop
std
add
jnp
xor
sub
dec
dec
pop
pop
es
cld
repnz
pop
dec
imul
fwait
or
dec
inc
push
xchg
push
pop
xor
adc
cmp
out
or
inc
cltd
add
out
mov
js
sub
mov
dec
rorl
mov
popf
mov
test
cmp
cltd
test
sub
test
xchg
fisubl
or
insl
sbb
scas
and
out
pusha
fcos
jl
mov
and
fmuls
arpl
fcoms
push
or
leave
sahf
outsl
arpl
movsl
xchg
test
push
dec
xor
jne
mov
out
xchg
in
ljmp
arpl
test
fwait
xchg
add
xlat
aas
pop
sub
jmp
xlat
int3
insl
or
out
pop
and
bound
cmp
adc
push
addr16
inc
dec
shll
mov
jae
sbb
mov
xchg
data16
xlat
sbb
lahf
test
inc
xchg
xor
cli
mov
sub
ss
pop
outsl
mov
jae
test
xchg
test
push
jmp
iret
mov
adc
outsl
pop
or
int3
push
cltd
or
cmp
mov
dec
scas
insl
mov
adc
mov
cli
add
cs
pusha
fstl
dec
lds
popa
push
jb
pop
out
out
fnstsw
cld
lock
lea
or
std
test
mov
sub
out
cmp
int
pop
sarl
or
rol
addl
popf
fidivl
cmp
in
lods
and
mov
sbb
pop
push
inc
fwait
cmc
adc
and
ret
mov
pop
stos
jae
xchg
popf
mov
jmp
ds
add
cmc
inc
in
dec
sbb
psrlw
imulb
fcmovu
mov
ja
psllw
dec
push
xor
mov
sbb
cmp
adc
icebp
jnp
shll
test
mov
jns
cmpsl
cmc
orl
inc
es
xor
in
pop
xchg
or
fwait
xchg
jnp
scas
mov
int3
cmp
add
mov
push
insb
popl
mov
loop
mov
fisubrs
sub
fiadds
push
mov
inc
iret
add
pop
mov
xor
dec
fists
idivl
xchg
jbe
repz
inc
sub
sbb
pop
aad
insb
popa
pop
or
cmpsl
ret
xor
pop
and
inc
ret
lds
sbb
sub
loope
pop
dec
cs
xchg
xor
outsb
es
push
pop
adc
sbb
or
mov
or
cmp
mov
mov
lds
test
rcrb
jle
jmp
push
mov
cltd
loope
dec
jg
arpl
lds
inc
inc
jo
cmc
mov
xchg
aad
inc
xchg
out
sub
dec
inc
stc
jb
in
jae
scas
or
push
aam
xorb
and
add
sahf
rcrb
xchg
jns
lods
psubq
popf
mov
inc
ds
push
ds
icebp
lret
xchg
stos
clc
rorb
inc
scas
fisubrs
incb
or
sbb
sub
jnp
aam
stos
pop
jb
ljmp
aaa
clc
sbb
mov
jle
mov
cmp
movsb
movsb
out
jbe
jo
repz
adc
int3
stc
dec
dec
adc
fucomip
push
dec
dec
lret
in
fdiv
push
xchg
cmp
stc
aad
fcompp
fwait
nop
test
sar
sbb
sbb
lds
xchg
or
daa
dec
loop
fnstcw
xor
xchg
ret
dec
in
dec
jmp
or
cltd
fisttpll
movsb
les
push
inc
xor
xchg
xlat
add
nop
test
jno
outsb
sbb
push
lds
cmp
imul
inc
imul
or
push
ror
adc
cmp
subl
rcl
popa
dec
push
xchg
movsb
mov
and
jbe
aas
dec
inc
xchg
pop
fists
xchg
imul
mov
mov
fs
faddp
outsb
clc
cwtl
jbe
cmpsb
filds
rcr
push
leave
push
rolw
adc
aaa
adc
outsl
pushf
and
pop
cmc
cmp
jne
aam
jo
dec
lcall
inc
mov
and
fwait
mov
pop
push
cwtl
mov
inc
adc
in
stos
mov
in
mov
lds
adc
add
cld
test
movsb
mov
jle
loope
hlt
xor
aam
sub
fistpl
mov
jecxz
mov
lods
ficompl
xchg
push
dec
pop
in
es
test
xchg
or
inc
fbstp
cld
sbb
addr16
cmpsb
xchg
lock
xor
xor
and
xlat
lret
pop
pop
aas
movsb
push
push
xor
pop
loope
fldenv
ret
mov
sub
push
sub
cmp
je
push
sub
or
mov
or
inc
jno
add
fsub
pop
imul
adc
leave
lret
fucomp
xchg
sbb
pop
adc
or
dec
shlb
ljmp
sub
sbb
jg
cli
mov
jb
aas
insb
jns
fnstcw
je
lahf
mov
pop
cmpsb
leave
fld
inc
sbb
mov
in
repz
out
xchg
scas
xor
test
add
mov
test
addr16
pop
hlt
inc
fcoms
xchg
aam
sub
ds
int3
icebp
fcmovb
test
test
rclb
nop
call
not
lea
xchg
jp
mov
or
aaa
dec
idivb
sarb
xchg
arpl
jmp
dec
adc
roll
mov
mov
addr16
lret
mov
adcl
sub
push
pop
les
jle
shr
stos
jp
add
mov
push
mov
pop
leave
or
pop
pop
aas
lock
mov
push
rcl
jmp
dec
push
mov
aaa
aas
cmp
out
leave
pop
loop
in
repnz
aam
xchg
adc
ret
sub
into
xchg
out
std
subb
adc
imul
movsl
repz
adc
push
icebp
mov
int
in
push
add
push
xchg
pcmpeqd
or
or
rorl
aaa
movsb
pushf
sub
scas
mov
mov
test
insl
jp
lret
adc
cmp
out
jae
das
inc
dec
cmp
jns
shll
clc
insl
push
sub
adc
fidivl
mov
ja
mov
sbb
fcoml
test
add
lahf
lods
shr
add
lcall
xchg
and
pop
cltd
ret
sti
jecxz
test
rcll
mov
sarb
sub
out
lock
mov
fstpl
xor
sbb
sub
sbb
sbb
stos
lret
mov
or
lds
mov
jp
je
mov
mov
ja
xor
cmp
imul
out
imul
mov
add
dec
mov
test
inc
inc
mov
xchg
push
popf
insb
or
in
push
daa
cmp
or
sub
fstl
popa
xor
push
popa
sbb
dec
or
andb
fdivs
popa
das
test
jl
inc
jecxz
shrb
mov
stos
jb
std
insl
test
mov
dec
push
adc
mov
or
mov
aad
andl
data16
xchg
out
and
in
mov
adc
xor
cmpsl
xor
in
adc
out
mov
bound
stos
in
mov
test
push
cmc
xchg
lret
and
fwait
lcall
hlt
cld
mov
sbb
repz
or
frstor
xchg
insb
cmp
jae
sbb
xor
out
adc
mov
xchg
cmp
outsl
sub
test
mov
cld
sub
mov
mov
in
inc
mov
stc
sub
jg
adc
push
add
and
in
sub
add
push
push
std
fwait
adc
mov
xchg
stc
aad
cmp
xor
jecxz
mov
push
lret
cs
inc
mov
in
xchg
xor
mov
xchg
jecxz
cmp
inc
aaa
jnp
stos
subl
push
in
scas
jne
aaa
stos
inc
jmp
lds
mov
ficoms
clc
jecxz
sub
cmp
idivb
test
fdivl
inc
imul
lock
xor
inc
pop
insb
fsubrs
sar
loop
xchg
rclb
lcall
aad
data16
jle
adc
sahf
mov
aad
ror
cmp
call
and
jae
in
mov
xchg
inc
sub
pop
xchg
hlt
cwtl
stc
add
push
jno
fisttps
cmp
xchg
leave
ja
push
fs
jns
jnp
lock
cltd
push
pushf
push
into
nop
xlat
cmp
lea
push
mov
mov
fidivl
sbb
fwait
pop
jae
in
jmp
les
sub
adc
inc
xor
mov
push
lret
jle
jnp
mov
subl
pop
iret
or
sbb
in
out
andl
xor
pop
add
movsb
mov
jae
mov
in
fistpl
shrb
jl
daa
cmp
cs
or
mov
cwtl
or
fwait
arpl
cmp
lock
dec
iret
std
sbb
lret
insb
mov
push
fstpt
push
cld
lret
cpuid
xchg
and
jns
add
jbe
imul
popf
xor
subl
js
fnsave
and
sbb
jl
clc
push
addb
rolb
in
addr16
xchg
and
fiadds
add
adc
mov
mov
fs
cmpb
or
clc
mov
out
clc
popf
js
xorl
and
cwtl
jae
scas
rolb
dec
mov
cmp
pop
push
adc
stos
push
rorl
nop
insb
push
outsb
repz
popa
push
js
push
mov
movsl
mov
cmpsb
insb
cmp
mov
arpl
adc
fwait
negb
cmpsl
adc
sub
and
or
mov
fdivr
cwtl
inc
outsb
int
and
rolb
aaa
pop
xor
cs
xchg
in
xchg
jg
imul
adc
movsl
xchg
into
pop
out
stos
add
mov
push
fnstcw
jmp
fistl
lods
xor
sub
mov
movsl
pop
push
or
mov
frstor
mov
mov
mov
xor
dec
lods
cltd
mov
scas
sarb
cmp
stc
jo
inc
mov
and
push
loop
dec
bts
mov
sbb
std
iret
dec
loop
mov
ja
subps
jmp
test
and
mov
pop
inc
mov
push
push
push
roll
dec
ds
push
loopne
xchg
lret
stos
lahf
shrl
sub
push
jns
dec
push
inc
xlat
jl
cmp
xchg
out
leave
iret
xchg
cmp
jmp
sub
dec
scas
fnsetpm(287
mov
hlt
push
push
mov
lahf
xchg
adc
insl
loopne
loop
lcall
cmpsb
mov
in
jmp
clc
pushf
xchg
push
mov
mov
push
jp
sbb
pop
cltd
xchg
fiadds
mov
sbb
arpl
sbb
in
jg
fdivrl
cld
add
add
and
cmp
add
add
cmpl
pop
repz
jg
add
jne
add
push
imul
push
mov
cmpsb
repz
rcll
push
xchg
mov
sbb
enter
cmc
sbb
stc
repnz
in
pop
inc
mov
mov
imul
xchg
inc
push
xor
sub
mov
aaa
add
xor
mov
rol
sub
jmp
lock
daa
shr
lds
add
jno
xorl
push
fmul
out
push
into
or
bound
adc
addb
dec
xor
xchg
icebp
cmp
and
mov
sub
ret
rclb
cmp
xor
int3
out
xchg
push
sbb
pushf
filds
mov
unpcklps
sbb
mov
out
test
and
call
stos
aas
xchg
fcmovnbe
jne
test
clc
fisubrl
mov
push
subl
jae
push
arpl
jno
hlt
inc
ss
push
sarl
jb
out
and
addr16
lea
jae
mov
pop
fisttps
negl
vpsllq
cmpsl
orl
mov
fs
sbb
fildll
xchg
xor
cmpsb
add
outsl
cmp
sub
daa
aad
out
mov
out
xchg
sbb
shlb
inc
xor
cmp
test
jno
rcrb
popa
mov
imul
sub
cltd
test
lods
sahf
mov
cmc
sahf
jle
jmp
pop
dec
insb
add
mov
imull
lods
xchg
in
mov
xchg
inc
pop
pop
jmp
into
test
cwtl
mov
jbe
lcall
jecxz
mov
andl
adc
repz
stos
ror
push
add
pop
jmp
cmp
ss
loope
sti
cmp
out
pusha
negb
mov
mov
add
mov
pop
xchg
out
sub
mov
idivl
ret
xchg
mov
push
hlt
lret
mov
dec
fsubrs
cs
sub
pop
xor
adc
cmp
and
outsb
pop
jae
cmp
xchg
pop
popf
fsubs
cmp
add
jae
sahf
xchg
in
test
inc
mov
inc
sub
out
in
sbb
in
sti
mov
ljmp
fsubr
mov
cmpsb
addr16
ret
jmp
adc
fisttpl
adc
jns
call
adc
enter
push
push
fstps
leave
adc
daa
mov
sub
adc
sub
cli
push
jbe
icebp
cmp
jmp
sub
lock
cwtl
adc
xchg
das
out
sti
and
jbe
push
pop
das
or
xor
dec
pushf
fistps
jns
sbb
pop
or
push
inc
jno
ja
stos
hlt
popf
xor
cmp
cmpb
push
jns
jp
aad
sbb
movb
subb
fucomp
jg
pop
or
aad
cmp
dec
jo
add
mov
xor
jmp
mov
sbb
icebp
jb
inc
mov
adcl
jbe
inc
divl
pop
clc
sahf
flds
in
sbb
lea
lea
add
repnz
std
aad
xor
xchg
mov
scas
movsb
dec
lods
aas
into
call
enter
xchg
in
aad
leave
inc
xchg
pop
jg
insb
inc
jecxz
lea
rcll
pop
mov
mov
gs
mov
pop
sbb
aam
xor
add
ficompl
xor
or
lods
jmp
lds
pop
inc
sub
xchg
out
in
cmp
neg
les
icebp
cwtl
dec
jns
lret
test
outsl
dec
loop
aad
outsb
dec
insl
int3
fimuls
aas
fidivrl
je
daa
mov
pop
mov
jne
mov
aaa
add
or
xchg
cwtl
jo
into
iret
idivb
dec
loope
nop
int
ss
adc
fld
scas
inc
jns
lret
mov
loope
cmp
sub
mul
mov
xor
xor
jecxz
mov
inc
or
cs
loop
lods
mov
movsl
adc
pop
pop
mov
sbb
mov
pop
inc
push
mov
and
fldl
in
ror
int3
adc
mov
xlat
lods
mov
xchg
xor
cmp
mov
jo
xor
jbe
inc
jo
aaa
pop
push
test
repz
and
into
fs
xchg
dec
cmp
fucomp
add
cmp
inc
jmp
scas
mov
jnp
shrb
adc
mov
loopne
xlat
mov
popa
and
test
jns
inc
push
aad
imul
int
xchg
shlb
dec
fisubrl
sbb
or
andl
stos
jbe
ficoml
mov
scas
test
adc
mov
fisubs
out
lret
aas
and
adc
fidivrs
inc
lods
andl
inc
lret
xor
xchg
push
mov
mov
cmpsl
cmp
push
stos
lds
inc
push
lret
sti
pop
jnp
mov
xchg
mov
loop
jb
cmc
jp
adc
lret
test
shll
mov
aaa
inc
das
ja
cs
imul
ljmp
pmaxsw
test
dec
test
push
cmpsb
adc
sbb
xor
mov
mov
and
jmp
and
les
xor
mov
xor
mov
adc
fsubrs
loope
mov
cmp
fs
jns
shl
fwait
xor
adc
adc
and
std
jp
shll
inc
push
sbb
fs
push
in
xchg
cmp
or
or
dec
pop
mov
lcall
pop
in
xchg
dec
lea
nop
lea
imulb
jns
das
push
je
enter
mov
or
push
std
or
stos
inc
or
out
xor
cmpsl
jns
leave
sahf
mov
jb
jbe
arpl
stos
sbb
push
data16
xchg
fwait
or
shrl
inc
xor
shlb
sub
jge
cmp
cmpsb
cmpsb
mov
adc
mov
dec
cmp
mov
leave
sbb
nop
mov
addl
aaa
jmp
adc
adc
aad
data16
cmp
js
ljmp
pop
int
loop
pop
mov
sbb
xor
imul
es
inc
jns
xorb
cmp
xchg
sbb
cmp
xchg
jno
stos
sarb
inc
xchg
inc
sarb
mov
or
sub
fildll
mov
pop
cmpsl
inc
lock
stos
xor
jecxz
mov
mov
dec
cltd
mov
loopne
pop
into
xor
pusha
shlb
mov
call
in
mov
xchg
mov
jl
popf
pop
inc
mov
adc
cmc
test
inc
loop
sahf
add
and
in
mov
dec
or
jb
ret
mov
push
sub
mov
adc
cmp
push
pop
cltd
lcall
rorl
out
mov
inc
or
aad
seta
xor
into
ljmp
shr
cmp
test
cld
dec
push
sub
push
cmc
test
test
xchg
mov
mov
add
or
push
testb
in
cvtps2pi
dec
sbb
and
fcmove
aaa
lods
push
aas
bound
add
out
scas
repz
pop
jne
sub
mov
inc
adc
sbb
or
out
in
arpl
add
icebp
shlb
cmpb
inc
ret
lahf
lods
jae
int
xor
xor
pop
push
jbe
insb
test
xorb
cmp
pop
dec
ljmp
cmc
push
lea
cmp
out
and
xor
inc
mov
xor
mov
xchg
in
mov
mov
push
xchg
je
push
sbb
sbb
orl
sbb
xor
into
ret
cltd
mov
not
mov
dec
adc
aad
mov
fdivrs
push
push
mov
and
xchg
lods
push
push
test
stc
stos
arpl
or
scas
xor
cmpsb
push
gs
mov
xlat
mov
fldcw
sub
or
nop
add
xor
aaa
jb
push
in
imul
jp
cmp
out
and
aad
mov
or
push
lret
stos
mov
ds
je
inc
sarl
test
fsubl
dec
imul
into
add
les
loop
or
imul
decl
outsb
movsb
inc
hlt
ret
pop
and
and
mov
addl
pop
adc
mov
push
ss
cmpb
mov
js
outsb
aad
inc
cmpsl
pop
shll
or
jmp
adc
mov
mov
sbb
cltd
jmp
or
xchg
or
rol
aas
dec
and
mov
aaa
xor
ljmp
adc
xor
loop
ret
test
pop
leave
mov
jno
jp
xchg
or
enter
and
ret
jmp
call
push
lock
push
adc
shl
les
sub
cmp
pushf
add
jecxz
jo
jmp
mov
jle
and
ds
jg
dec
loopne
sub
mov
in
adc
mov
add
fs
adc
in
les
mov
mov
hlt
scas
lods
sub
mov
sub
lds
hlt
dec
shrl
or
stos
xor
movsl
push
in
out
xchg
scas
mov
adc
fcmovbe
lahf
ss
push
sub
outsl
and
add
ret
adc
lods
push
fsubrs
add
pop
sbb
nop
pop
dec
rcll
es
nop
cmp
mov
push
lcall
jns
mov
movsl
shlb
pop
movsbl
daa
movsl
sub
xchg
lods
cld
stos
jmp
bound
pop
cmp
cmp
in
call
aam
adc
sbb
cmpsl
pop
fdivr
icebp
popf
pop
cmc
hlt
or
mov
adc
inc
push
cmpsb
outsb
std
ficoml
enter
insb
push
jl
add
jnp
xor
scas
or
gs
pop
aam
push
adc
outsb
fsubrs
mov
jle
imul
inc
xor
pushl
in
mov
mov
mov
imul
xchg
push
lret
push
ret
data16
mov
sub
dec
adc
sbb
sbb
out
pop
adc
jecxz
mov
js
mov
jecxz
pop
outsb
loopne
leave
hlt
push
shrl
or
xchg
inc
push
lret
dec
out
insl
sub
cmp
push
andl
sub
lods
shll
out
xor
push
enter
cmp
pushf
and
fadds
lcall
gs
push
addr16
lea
sub
fiaddl
add
pop
fwait
inc
and
dec
jge
cmc
test
xchg
mov
mov
inc
inc
fsubr
add
push
add
xchg
push
out
sub
ss
out
call
pop
jge
andps
mov
mov
out
mov
add
shlb
stos
mov
push
into
enter
pusha
aaa
push
pop
aaa
mov
rclb
or
fnstenv
push
and
xchg
outsb
mov
jg
xor
ret
fdiv
test
and
sarb
adc
mov
jns
call
pop
xchg
lods
mov
cld
ja
xor
add
es
adc
call
pushl
or
pop
and
lret
pushf
imul
adc
pusha
adc
pop
xor
std
sub
int3
shr
rclb
lcall
mov
sbb
lret
xchg
shll
nop
push
loope
cltd
pop
xor
mov
adc
or
sub
ljmp
test
arpl
inc
addr16
jns
dec
andl
sub
push
push
mov
cmc
xchg
stos
loop
imul
and
push
mov
testl
inc
pusha
das
je
je
xor
sti
scas
das
enter
int
mov
and
into
in
shlb
push
out
adc
out
cwtl
stos
mov
movsl
push
push
push
test
pop
int
icebp
pop
pop
lcall
push
scas
popa
scas
pop
data16
mov
cmp
lret
loop
jne
mov
mov
ja
jle
test
adc
cmp
js
jmp
mov
ficoml
inc
fistps
adc
pop
insl
aad
cli
lcall
adc
shl
mov
cmp
cmp
loop
popa
out
pop
push
sahf
cltd
xchg
test
lods
aaa
ja
dec
add
add
dec
inc
imul
rclb
jno
push
js
rol
sub
ljmp
mov
mov
adc
xlat
inc
aad
sub
jmp
mov
adc
push
sub
xchg
sub
adc
cmp
cmp
leave
insl
lahf
ljmp
mov
xor
fs
jge
leave
into
mov
adc
pop
mov
sbb
stc
add
pop
cmp
add
inc
aad
add
pop
leave
mov
nop
daa
cmpb
pushf
fcmovnu
xchg
rcrb
add
pop
cltd
aam
dec
out
int
lea
popf
add
and
sbb
cmc
mov
mov
adc
pop
hlt
cmp
shl
sbb
add
lret
sbb
mov
repz
lret
adc
mov
sub
scas
cmp
or
or
ret
dec
outsb
sub
push
pop
enter
mov
adc
fsubl
jo
cmp
imulb
jae
mov
int
cmp
andb
lret
rolb
mov
adc
les
aaa
fdivrl
push
inc
jecxz
pop
xor
clc
mov
cld
cmpsb
iret
dec
out
mov
fisubs
iret
mov
out
aaa
mov
inc
adc
and
inc
cmp
into
jg
mov
lret
testb
sahf
call
call
mov
repz
jne
dec
movsl
sub
jp
jp
out
or
lea
sbb
mov
xadd
lcall
xchg
or
mov
add
adc
mov
bound
dec
adc
inc
add
scas
shlb
xchg
adc
rcr
js
aam
and
ja
nop
in
movsl
sub
clc
jbe
leave
jecxz
dec
std
inc
mov
xor
and
jge
cmp
insb
mov
push
cmc
sbb
mov
mov
and
inc
js
repnz
into
pop
call
out
xchg
xor
cs
xor
sub
loope
xor
and
jns
shll
sub
xor
mov
cmpsl
jp
lods
push
jo
jg
push
int3
or
shll
pushf
lahf
and
add
fs
shlb
lds
int
mov
incl
dec
add
ret
add
incb
or
xor
loope
push
popa
into
and
lds
jne
fistps
jle
push
mov
mov
pop
pop
lret
mov
es
pop
mov
les
rorb
ror
lea
sub
das
dec
dec
nop
fs
adc
jge
sahf
sub
push
test
icebp
rcrl
out
icebp
cmpsl
push
lods
jle
xchg
adc
test
jmp
or
xchg
fcmovu
roll
out
inc
rcrb
out
or
punpcklbw
or
loopne
and
es
cmpsb
pusha
aaa
fildll
push
jp
cmp
xchg
and
mov
sbb
out
jecxz
movsl
inc
pop
push
and
hlt
stos
push
sub
mull
call
mov
sub
imul
idivl
ja
add
add
ljmp
xchg
cmp
sub
dec
and
add
es
xchg
arpl
frstor
cwtd
mov
out
leave
jp
das
mov
mov
xchg
mov
xor
or
shlb
pop
and
mov
jl
jle
incb
ds
xchg
cmp
push
cmp
je
inc
lcall
sbb
rclb
pop
push
fcoms
cmp
add
lds
jg
mov
out
or
rcrl
push
out
sbb
arpl
push
stc
or
adc
sbb
aad
subl
mov
call
call
adc
pop
ljmp
sahf
dec
mov
adc
pop
and
add
jmp
rcll
icebp
add
or
outsb
jmp
mov
shlb
sub
inc
aad
xchg
ret
push
cmp
fnstsw
decl
popa
fisttpl
pop
jb
push
push
lds
mov
add
dec
or
test
lcall
jo
mov
loop
cmpsb
sbb
and
jno
fwait
pop
outsl
jle
jmp
add
xlat
push
sbb
ss
add
loop
fldcw
sub
inc
xchg
add
cmc
imul
xchg
hlt
jmp
inc
int3
jmp
scas
icebp
add
push
adc
mov
outsl
inc
sbb
jo
pop
mov
aas
xchg
mov
adc
xchg
shlb
mov
scas
adc
push
nop
mov
sbb
sbb
ret
sbb
dec
xchg
jb
mov
cld
std
jns
adc
in
cmpsb
cwtl
sbb
repz
outsl
aas
int
push
in
ljmp
xchg
sub
inc
leave
adc
push
push
out
mov
aad
les
dec
add
into
inc
iret
mov
xor
sub
mov
sbb
sbb
jmp
les
out
xchg
imul
and
sbb
sti
sub
or
repz
lods
pop
xchg
sahf
add
mulps
leave
sbb
cmp
cmp
jg
sbb
fstcw
outsl
sbb
rclb
mov
mov
out
adc
mov
out
lds
repz
je
cmp
stc
mov
iret
inc
lcall
pop
fwait
sar
outsb
testl
xchg
stos
inc
lock
mov
xchg
push
cmpsb
inc
jmp
push
pusha
insb
jp
enter
int
inc
sub
enter
mov
add
cmp
jns
adc
xlat
adc
ja
out
sarb
xchg
push
cmp
adc
mov
or
or
jge
add
lret
out
dec
lods
jb
jns
cltd
xlat
das
mov
jne
iret
pop
rcll
jbe
inc
cmpl
leave
mov
and
lods
fcmovu
add
es
in
divb
ja
stos
xchg
push
lcall
adc
inc
lcall
dec
add
push
xchg
jae
pop
dec
movsb
and
sbb
cmpsl
add
jo
out
inc
add
adc
inc
sahf
or
icebp
sbbb
cmp
adc
stc
sbb
xor
lret
xor
dec
or
add
icebp
fsubrs
mov
jne
cmp
pushf
cmpsb
stos
test
adc
lcall
mov
lock
fisubrs
xchg
cltd
jmpw
insb
push
imul
repnz
fwait
xor
push
popl
inc
fcoml
inc
in
ljmp
cmp
bound
loope
cltd
out
mov
lea
mov
pop
pop
and
mov
dec
stc
repz
call
movsl
jbe
xlat
ljmp
movsl
push
mov
cli
push
or
pop
nop
lahf
hlt
lret
call
sbb
dec
add
dec
pop
bound
je
pop
outsb
add
or
daa
jnp
jmp
push
iret
jnp
es
xchg
ret
lret
add
pushf
inc
inc
push
out
ret
dec
xor
mov
and
das
fsts
insb
int
ja
insb
xchg
sbb
mov
mov
cli
push
stc
js
sahf
lret
add
jnp
fldt
fdivl
out
in
sbb
pop
int3
adc
xchg
push
nop
mov
pop
loope
stos
or
out
hlt
mov
pop
jno
subb
aaa
add
cltd
sti
dec
call
popa
fnstcw
xor
repnz
cmp
scas
arpl
xchg
js,pn
fildll
int3
insw
add
out
push
sti
lcall
lret
test
data16
add
cmp
pop
and
idivl
outsl
push
shll
dec
push
pop
dec
inc
outsl
popf
fwait
in
jecxz
pop
test
jecxz
sbb
fnsave
mov
aaa
popl
ret
movsb
push
mov
jp
jg
push
mov
and
xchg
out
pop
pop
fcomip
bound
pop
les
int3
cltd
ret
cmp
repnz
loop
rol
icebp
add
in
or
xchg
sahf
mov
lcall
push
fisubs
push
mov
xlat
jp
les
clc
fs
jecxz
jg
jg
lock
inc
imul
lcall
mov
push
dec
cmpsb
xchg
dec
adc
scas
mov
ret
rcl
fldt
add
cmc
mov
fisttpll
mov
jnp
test
cmpsl
loope
ror
sbb
insl
mov
jmp
aam
jns
cld
inc
pop
mov
pop
sbb
lock
mov
xchg
nop
add
ja
fwait
shll
push
pop
stc
xchg
std
loopne
mov
mov
shrl
sbb
loopew
jno
nop
mov
xor
shrb
je
and
in
mov
clc
es
pushf
bound
enter
mov
sbb
jno
xchg
jbe
aaa
mov
cmp
xorl
stos
pop
scas
rcr
xchg
mov
into
cmpsl
mov
lret
rclb
xchg
adc
cmp
sbb
neg
sub
clc
es
add
mov
cmpsl
mov
mov
inc
sbb
jge
sub
int3
call
xor
ss
sbb
lcall
mov
mov
out
pop
sbb
dec
inc
jl
mov
jne
in
aaa
jnp
lock
insl
and
mov
insb
mov
mov
pop
inc
adc
push
loope
decl
fsubrl
iret
xchg
test
pop
daa
adc
mov
add
nop
repnz
xchg
scas
mov
js
jne
mov
aad
xor
pop
lods
fmuls
das
sbb
sbb
jecxz
inc
or
pop
add
push
in
mov
or
pcmpgtw
les
daa
loope
pushf
bound
stc
into
dec
in
add
jno
sub
ja
inc
cmp
push
data16
mov
dec
into
xchg
mov
jmp
mov
mov
iret
mov
aam
popa
inc
mov
inc
sahf
pop
in
sub
cmp
jo
push
sahf
lret
mov
ljmp
add
pop
les
xchg
pop
lods
sbb
jbe
add
out
push
dec
sbb
mov
aas
sahf
movb
adc
sbb
add
and
sub
and
mov
xor
or
bound
xchg
orl
lods
inc
andl
scas
or
pop
xchg
popf
mov
cmp
xor
pop
test
push
test
andl
push
cld
jp
mov
mov
popa
mov
xchg
mov
ja
xor
xor
out
scas
add
out
push
sahf
aaa
ja
int
xchg
add
fwait
xorl
enter
dec
fwait
dec
push
add
and
mov
or
daa
sub
dec
pushf
push
sbb
enter
arpl
jae
mov
push
imul
push
cmp
jp
mov
pop
cmp
xchg
adc
xor
testb
cmp
xchg
int
mov
cmp
jb
jmp
jecxz
mull
stc
pushf
adc
push
rcrl
mov
sahf
sub
xchg
cmc
push
addr16
lahf
cmp
xchg
xchg
mov
mov
xlat
fdivrs
ljmp
loope
adc
fdivs
stc
addb
sub
xchg
aaa
hlt
fdivrl
xchg
jge
sbb
mov
pop
cld
aas
icebp
dec
out
stc
mov
xchg
rorl
inc
aad
push
sti
clc
xor
pop
sub
inc
xchg
mov
lret
sbb
sub
jp
and
cmp
mov
adc
push
ficompl
jg
clc
mov
push
push
sub
xchg
cli
fidivrs
jnp
inc
jmp
aaa
stc
jmp
sub
pop
ja
pop
add
mov
mov
int
pusha
jnp
sub
gs
xor
mov
mov
xchg
lea
mov
xchg
adc
jg
jb
das
gs
add
negl
pop
into
dec
pusha
mov
pop
jnp
cwtl
outsb
test
pop
dec
pop
mov
mov
dec
pop
imul
xchg
out
sbb
dec
jbe
pushf
test
sbb
daa
xor
sub
push
mov
adc
sub
std
je
sub
jmp
repnz
clc
jp
fidivrs
jbe
mov
lahf
shr
call
cmpsl
lds
mov
adc
push
repz
mov
pop
out
inc
fwait
xor
insb
xor
sub
andl
fnsave
mov
push
mov
push
cmp
cmp
lahf
loopne
shrb
sar
test
inc
aam
cs
out
push
cmp
xor
dec
mov
nop
sbb
js
test
or
mov
sub
mov
sub
mov
into
mov
and
xchg
or
xor
int
into
test
mov
inc
xor
imulb
add
jne
or
aam
mov
lcall
lock
frstor
scas
and
imul
call
pop
add
inc
jns
pop
sbb
or
icebp
mov
adc
out
dec
mov
addr16
and
mov
xor
jmp
xor
xor
sti
sbb
fildl
das
cmp
xor
sbb
lahf
das
xchg
add
pop
mov
xchg
out
adc
add
fimuls
jmp
adc
das
mov
sbb
push
push
xchg
dec
xchg
in
sti
mov
jnp
std
insl
fsubl
mov
call
pop
test
aam
bnd
fcmovnb
in
push
mov
ds
out
sub
ljmp
movsl
inc
inc
push
mov
sbb
ficoml
test
test
ret
mov
leave
andb
cmpsl
push
adc
inc
out
jp
cmp
mov
or
sbb
and
jl
sti
mov
loop
rorl
in
aam
scas
js
test
and
push
sahf
and
mov
bound
mov
cltd
push
xor
js
imul
insb
cs
loopne
dec
repnz
popa
xchg
hlt
push
stos
push
and
jbe
or
movsl
mov
mov
sub
mov
fs
sub
mov
in
sub
fmull
int3
push
outsl
jae
push
mov
pop
push
xchg
stos
es
sub
ror
mov
pop
outsb
push
push
dec
repnz
insl
cmpsb
mov
sub
ret
dec
cmp
mov
xor
mov
iret
out
std
gs
imul
add
xchg
push
or
fisubl
aas
in
xlat
dec
cmpsb
imul
adc
push
orl
aam
dec
sti
sti
ss
push
mov
stos
sub
xchg
jne
and
dec
mov
scas
mov
sub
lcall
sub
cltd
ja
pushf
add
data16
out
cmp
leave
pop
bound
mov
jb
mov
test
and
aam
sub
sbb
push
mov
test
inc
mov
mov
scas
jg
xor
cltd
insl
pop
push
jp
push
and
in
out
test
je
xchg
mov
inc
jl
adc
jo
jecxz
xchg
dec
int
and
add
loope
mov
lcall
fbld
mov
sti
adc
movsl
lahf
out
jo
sbb
sub
xor
adc
push
ret
rcrl
shll
pop
mov
mov
jp
pop
pop
arpl
jne
adc
mov
out
and
push
int3
pop
shll
jns
in
test
repz
add
xor
fwait
subl
scas
jmp
loope
push
xchg
push
in
mov
nop
cmp
cld
rorb
jg
push
in
or
out
sub
jb
add
xor
imul
mov
enter
and
ret
and
and
clc
icebp
sub
int
adc
pop
iret
fstpl
mov
lea
nop
adc
xor
push
stc
shrl
push
mov
cmp
in
xchg
mov
push
xor
je
fnstenv
adc
cmp
cmp
fstpt
sub
repnz
push
add
lea
imul
mov
push
or
mov
push
mov
sub
jecxz
inc
jae
hlt
add
and
aas
cmpsb
add
out
mov
frstor
fwait
adc
jp
aas
lock
orl
jno
inc
dec
shufps
add
pop
fnstenv
loop
movsb
push
stos
les
test
pop
adc
mov
lea
jnp
les
mov
psubw
fnsave
lock
pop
push
push
cwtl
pop
sub
outsb
fstl
cltd
cmp
decl
inc
test
pushf
xchg
xor
adcl
jns
shlb
bnd
push
mov
add
jns
pop
aad
test
addr16
mov
and
pusha
push
sti
jmp
lock
mov
push
jbe
inc
ret
out
rcll
pusha
adc
xchg
out
cmp
lret
add
push
cmp
mov
pop
pop
adc
in
sarl
iret
push
aad
sbb
xor
rcrl
or
push
stos
jl
sbb
das
sbb
rcll
push
lcall
das
sahf
ja
push
into
imul
movsl
lods
sbb
das
and
inc
mov
aam
adc
pop
mov
fldenv
mov
dec
xchg
push
push
mov
daa
ljmp
out
fistps
movsb
sub
fiaddl
js
shll
mov
and
pop
lea
inc
adc
jno
inc
xchg
pop
into
mov
pop
xchg
mov
out
mov
stos
test
pop
xchg
loopne
adcl
scas
add
pusha
dec
push
xchg
mov
cmpsl
xchg
inc
or
sbb
aas
cmpsb
mov
pushf
rcr
out
mov
mov
lret
jecxz
dec
mov
mov
repz
fildl
push
mov
inc
adc
mov
mov
jecxz
ljmp
lds
mov
dec
sub
jae
ljmp
or
or
adc
aaa
xlat
ja
or
push
ret
bound
test
or
inc
leave
fstpt
xchg
sub
icebp
shl
stos
push
call
xor
adc
movsl
cmpsl
in
push
pop
dec
data16
inc
jb
xchg
stos
test
adc
cmpsb
mov
adc
cwtl
dec
call
lods
push
xor
mov
jbe
inc
scas
jns
push
stos
mov
stc
mov
pop
mov
inc
in
or
into
and
insl
and
pusha
scas
jnp
inc
xchg
fs
add
jge
mov
cwtl
scas
adc
jg
lret
bound
push
scas
daa
out
jns
push
mov
mov
push
and
aaa
jg
jnp
inc
mov
pop
imul
movsb
movsb
push
leave
or
or
dec
js
daa
loope
sub
mov
add
jnp
test
mov
inc
mov
imul
mov
sbb
sbb
xchg
adc
ljmp
leave
inc
xlat
test
cwtl
mov
or
adc
notl
ret
movsl
lds
repnz
ljmp
fdivs
leave
jmp
xlat
in
and
jnp
test
xchg
cmp
or
inc
xlat
fsubl
nop
xchg
fdivs
pop
and
inc
shlb
cmp
popa
or
push
adc
cld
std
gs
xchg
adc
ss
rolb
or
leave
adc
sbb
and
jno
mov
adc
sbb
test
hlt
adc
add
movsb
incb
jmp
lret
jae
rol
popa
sub
inc
mov
movsb
cltd
cli
xchg
cmc
dec
jp
xchg
jb
xor
push
jp
mov
dec
clc
sub
mov
jnp
aas
gs
std
pop
mov
popa
aaa
gs
xchg
mov
cmpl
test
and
add
inc
dec
adc
dec
adc
jo
push
cld
xchg
jne
and
les
inc
js
inc
pop
dec
adc
push
pusha
jae
or
lret
jp
mov
in
or
mov
jecxz
daa
adc
push
mov
xchg
sbb
sub
inc
lcall
movb
add
aam
outsl
jns
loope
xor
aas
xchg
jp
stos
in
mov
sbb
ret
cmp
sub
ret
pop
pop
in
imul
dec
mov
fcmove
fcomip
push
leave
mov
loope
into
cmp
je
mov
mov
xchg
or
mov
push
or
ljmp
loope
inc
xchg
testl
inc
jbe
insb
cmpsb
inc
ret
scas
sub
xchg
imulb
dec
mov
push
and
xchg
xchg
jnp
fcoml
sbb
icebp
push
jae
inc
xor
rcrb
iret
loope
fiadds
pop
adc
in
inc
sbbl
cmp
daa
mov
pop
add
test
push
or
mov
pop
jne
push
fidivrs
nop
add
cmp
daa
rcr
aad
lahf
iret
inc
cmpsl
fistpl
addr16
mov
push
int3
aad
xor
test
xor
lahf
inc
data16
inc
arpl
jnp
jno
xorl
mov
aaa
mov
arpl
or
and
mov
push
js
cli
xor
loop
stos
jnp
dec
mov
hlt
repz
pop
aas
sub
inc
fsincos
sub
loop,pn
sahf
pop
inc
not
xchg
leave
mov
jp
stos
add
add
jmp
dec
fimuls
push
xor
pop
inc
push
neg
xor
push
push
shrl
into
jmp
mov
xchg
or
adc
jnp
ja
mov
push
sub
jb
js
or
daa
push
lea
out
in
ljmp
push
mov
xor
jl
jg
push
test
sbb
add
or
scas
pop
fs
loopne
pop
leave
sub
jle
xor
pop
out
dec
sbb
fimuls
pop
stc
inc
jmp
jno
xchg
xor
lea
pop
popa
pusha
push
dec
push
or
xchg
mov
test
rorl
cmp
mov
inc
inc
cld
popf
loopne
fimull
add
shr
cmc
sub
lret
jb
roll
stos
sbb
adc
inc
lods
mov
mov
pop
xor
out
dec
lret
mov
das
shll
stos
jno
dec
add
into
movsl
gs
inc
pop
sahf
jnp
shlb
xchg
or
out
cwtl
sbb
or
fcomps
or
push
fdivr
cmp
mov
cmpsb
jae
sub
push
test
repnz
in
push
movsb
daa
inc
imulb
leave
mov
subb
mulb
cmpsl
sbb
cmpsl
add
out
push
inc
or
push
and
repz
pop
mov
add
fists
cld
imul
in
out
pop
in
imul
xor
and
pop
lds
lock
das
je
jle
int
lock
scas
push
xchg
mov
lock
repz
lods
arpl
dec
fildll
insb
jno
movsb
cld
mov
mov
push
test
ds
inc
stos
fwait
cld
dec
ret
scas
inc
sub
out
loop
rclb
leave
insl
inc
cmp
aam
mov
imul
int3
and
shl
test
adc
dec
jb
call
ret
test
mov
enter
and
hlt
mov
icebp
fistpll
push
fidivrs
mov
jbe
lds
xlat
int3
clc
push
sbb
mov
cmp
cmp
jecxz
push
pop
mov
rcrl
sub
lcall
out
add
dec
in
stos
sub
data16
sahf
cmpsl
push
push
or
mov
lea
sar
aas
sahf
pop
loopne
loopne
lock
lods
xor
aaa
mov
das
xchg
rolb
sahf
cmp
shrl
push
xor
jns
jle
sub
push
jns
push
cmp
outsb
out
aaa
das
adc
aad
or
dec
fmull
xor
mov
fsubl
aaa
jle
imul
mov
das
xor
scas
das
adc
leave
int
fistpl
and
pop
sbb
into
dec
sbb
sub
pop
fistps
dec
fiadds
mov
cmp
lds
cmp
sub
je
and
fisttpll
pop
sbb
test
fimuls
lds
xchg
push
adc
mov
pop
mov
gs
pop
xorb
sbb
cmp
mov
ror
jno
and
fiaddl
pop
xchg
xchg
aaa
repnz
xchg
ljmp
sub
add
lcall
mov
sbbb
add
lahf
cmc
pop
adc
xor
out
xchg
jg
push
lods
xor
fldt
int
popa
popa
mov
icebp
push
stos
pop
std
inc
xchg
jp
das
jbe
test
mov
sbb
mov
mov
jns
data16
xchg
subb
add
cmpl
jae
aaa
es
jns
xchg
push
adc
mov
push
inc
andl
and
dec
cs
jae
test
xor
sahf
or
sahf
mov
sub
dec
cltd
ja
outsb
or
aaa
iret
test
lock
fwait
mov
cmp
mov
jo
rorl
daa
add
dec
add
das
xchg
cltd
pop
shlb
in
mov
fsubrp
pop
sub
push
insb
loopne
loop
fnstcw
and
or
push
and
icebp
cmpsl
add
sub
pop
jl
and
repz
out
out
inc
shll
jmp
pop
sbb
movsl
sub
aam
je
sub
push
in
in
repnz
push
jmp
xchg
sbb
pusha
add
inc
mov
sub
xlat
es
mov
mov
push
int3
dec
fs
adc
sub
sbb
aaa
out
sti
out
push
iret
jbe
test
sarl
and
ss
mov
xor
push
in
lds
xor
lcall
jmp
push
or
mov
test
mov
inc
push
cmp
lea
sub
stos
xchg
xor
ljmp
jns
lret
int
decl
pop
aam
test
inc
xchg
sbb
sub
je
or
iret
jg
std
dec
loop
or
push
stc
cmpsl
and
mov
push
rolb
cwtl
add
das
jb
pop
imul
in
sbb
mov
mov
sbb
lret
add
mov
shlb
lret
popf
inc
jg
shlb
pop
mov
les
data16
repnz
stos
push
fsubl
gs
mov
leave
cmpsl
orl
in
pop
out
sbb
pop
loop
das
cmpsb
cld
fwait
adc
stos
ljmp
inc
dec
adc
push
or
sub
add
pop
dec
call
fnsave
dec
lea
xorl
jge
clc
leave
sahf
sbb
mov
movsl
dec
int
mov
xor
arpl
mov
sarl
xor
pushf
stc
popa
mov
lea
jnp
sub
push
and
addr16
lahf
fidivs
icebp
lret
mov
ret
in
icebp
adc
mov
cltd
mov
pop
cli
rorl
push
inc
push
fidivs
add
fldcw
mov
aas
cli
jo
ret
clc
and
mov
lea
data16
dec
test
jecxz
lret
scas
or
ret
mov
hlt
test
setne
push
or
mov
xchg
fcoms
test
stc
cmp
jbe
mov
icebp
addb
push
int3
sub
out
ret
mov
cmc
addl
mov
fdivrs
fiadds
inc
dec
mov
nop
test
dec
sub
leave
movsb
xchg
and
xchg
push
push
cli
out
mov
mov
loop
fsubrl
push
mov
pop
jg
clc
push
xchg
imul
or
pop
lds
shlb
shlb
roll
xchg
popf
push
sub
clc
into
cmp
jbe
dec
xchg
mov
sbb
sbb
cld
push
fwait
cs
stos
pusha
pop
dec
mov
lret
push
scas
pushf
cli
or
repnz
cmp
mov
push
shrl
mov
mov
and
ror
dec
or
pop
out
mov
imul
sarb
pusha
cmp
scas
xchg
out
divl
fs
sbb
xor
sub
arpl
cli
push
lea
jnp
or
pop
inc
ljmp
xchg
ret
or
adcl
lea
shll
call
jg
int
jg
xor
es
sti
xor
and
pop
xchg
mov
pop
sub
add
mov
push
data16
fnstcw
mov
sarl
adc
aad
push
sbb
aam
sbb
popa
xor
sub
xchg
xchg
mul
cmp
pop
mov
sub
out
das
xchg
test
push
test
mov
stos
cmp
fldt
enter
fsubr
inc
aam
divl
jnp
daa
mov
mov
pusha
push
sbb
scas
sub
subl
mov
lcall
add
sub
pop
std
jge
cs
loope,pn
inc
in
pop
add
ret
xchg
dec
cmc
scas
inc
inc
mov
or
fistl
mov
push
pop
iret
push
movsb
ljmp
adc
ficoms
xchg
jmp
fldenv
mov
cmp
xor
in
mov
mov
jno
int3
aad
test
or
push
cmpsb
hlt
out
lock
mov
aas
cmp
repz
xchg
shlb
movb
inc
cmpsb
lahf
es
add
cmpsl
in
pop
adc
fwait
mov
jae
insl
push
inc
aaa
cmp
cmp
loope
push
xor
es
inc
adc
roll
pop
fsts
outsl
sub
inc
fucom
sbb
negb
push
or
mov
cmp
mov
sub
icebp
mov
aad
xor
xor
xorl
pop
shlb
gs
repz
lock
decl
mov
leave
and
push
xlat
adc
xchg
cltd
xor
inc
and
movsl
mov
dec
push
mov
icebp
dec
xchg
nop
imul
mov
sahf
fdivr
lahf
cli
fidivrs
or
into
cmp
insl
pop
sub
pop
jne
and
lret
sahf
xchg
dec
popf
mov
and
fistps
sub
jp
sub
inc
mov
addr16
dec
mov
or
ret
ja
gs
and
dec
mov
jno
insl
hlt
out
adc
xchg
xchg
test
jmp
mov
mov
mov
cmpsl
jecxz
data16
int3
scas
and
rol
pusha
add
icebp
movsb
adc
fsubl
cmpsl
pop
rolb
adc
xchg
les
mov
and
rcl
cmp
pop
dec
adc
lcall
sub
xor
jp
js
xor
adc
sbb
pop
insl
in
mov
shlb
outsb
adc
es
jl
jne
adc
enter
add
aaa
inc
pop
push
notl
nop
dec
xor
add
jle
lods
repnz
in
int3
push
pop
mov
xor
adc
lret
cmpsl
push
scas
or
sahf
outsl
and
mov
pop
jge
fisubl
or
js
rclb
mov
push
out
mov
daa
int
pop
lret
hlt
hlt
or
cmc
adc
mov
jns
fistpll
sti
sub
pop
in
mov
sahf
mov
xchg
pushfw
adc
mov
xor
cmp
popa
mov
lcall
in
lods
inc
pop
lods
in
mov
call
dec
shrl
divb
fnstsw
test
aam
dec
fs
test
pop
xchg
addr16
pop
pop
add
aad
cmp
pop
mov
mov
mov
addr16
insl
xchg
or
dec
xor
mov
fisttpll
cmpsl
movsl
fadds
sbb
shrb
inc
out
call
xchg
and
movsb
lock
dec
mov
push
sti
and
rcll
pop
cmpsl
loope
xchg
imul
in
jp
xchg
add
push
shrb
mov
mov
idivb
xor
out
sub
inc
test
ds
xor
lahf
int
add
stc
adc
negl
push
cmp
mov
mov
ret
out
sbb
xchg
jbe
les
shl
out
loope
test
loope
pushf
push
jo
out
xchg
in
insl
mov
mov
pop
test
xchg
ret
mov
ds
adc
ficompl
sbb
orl
lcall
jl
sahf
sub
inc
or
sbb
rcrb
or
mov
rcrb
pop
inc
cmp
and
mov
pop
or
pop
xchg
testb
cwtl
push
nop
cmp
jo
pop
pop
popf
mov
insb
mov
push
cmp
pop
fs
repz
push
xor
std
shl
push
iret
and
cmp
aaa
xor
into
fsubs
mov
aas
inc
lods
lcall
sbb
pop
cmp
dec
jmp
sti
ret
arpl
jle
inc
push
lcall
adc
sbb
jne
stos
leave
dec
mov
jecxz
pop
mov
cmpsl
shlb
adc
fcoml
ficoml
lcall
insb
jne
lods
mov
sbb
fwait
rcrb
push
adc
rclb
push
sbb
outsl
dec
jg
xchg
dec
or
loopne
jns
xor
das
fmull
mov
and
push
adcl
testb
mov
insb
sbb
pop
xor
jp
ljmp
jmp
cmpsb
fwait
daa
and
mov
aam
enter
or
stos
icebp
xchg
pushf
xchg
push
fcomip
cmp
jb
sub
mov
mov
loope
lock
cmpsb
pop
arpl
iret
lahf
inc
cmc
je
test
leave
mov
mov
cli
scas
out
das
ret
iret
sub
xchg
jle
xor
jae
cmp
repz
movsb
inc
inc
inc
aam
mov
fbld
int
imul
popf
jg
lods
push
sub
outsb
mov
aam
cld
call
mov
mov
inc
rcrl
leave
in
jmp
mov
and
call
jne
add
les
pop
mov
ficoms
icebp
aaa
lret
jle
dec
orl
push
push
ret
xor
fwait
incb
rcr
cmp
cmp
fisubrl
daa
or
jp
hlt
cs
push
gs
in
and
sub
iret
pop
pop
sarb
repz
dec
gs
lock
add
pop
rclb
je
fs
xchg
int
ljmp
push
into
jg
sbb
lds
adc
fs
lcall
push
push
inc
push
pop
inc
mov
push
mov
test
add
ret
aaa
rol
dec
rolb
insl
icebp
mov
inc
lea
push
cli
icebp
cmp
fidivl
insb
mov
fidivrl
lds
ja
or
cmp
outsl
inc
cs
jns
scas
push
mov
dec
add
cli
das
push
pop
adc
lcall
cltd
out
loop
sbb
nop
jge
sub
popf
and
xor
into
mov
dec
cmpb
imul
lock
add
sbb
gs
jmp
mov
fldenv
add
and
outsl
fdivrl
dec
daa
adc
inc
ret
sarl
or
mov
pop
aam
sarb
mov
inc
mov
aaa
out
dec
cmp
jbe
addr16
dec
xlat
addl
push
shlb
push
xor
lods
jmp
jle
sub
ret
push
sbbb
scas
dec
add
mov
mov
xchg
gs
into
pop
xchg
cs
xor
pop
cltd
aam
mov
cld
xchg
pop
push
jecxz
sbb
inc
in
sub
aas
jns
scas
mov
mulb
movsl
push
in
ret
or
adc
xor
lock
loopne
push
mov
mov
xor
sbb
ljmp
cmpb
sub
nop
jns
push
jo
std
mov
push
jbe
mov
xor
cmp
stos
das
aas
adc
mov
jae
loope
out
lods
ss
scas
lret
lret
mov
mov
push
loopne
push
cmpsb
push
push
pop
dec
push
xchg
ss
into
mov
dec
clc
lahf
mov
out
push
pop
mov
pop
shlb
out
fs
testl
shlb
imul
pop
push
xor
cld
jp
push
dec
mov
sub
cwtl
cmp
out
and
shll
scas
jle
cmp
cmp
and
lret
xor
mov
add
out
or
push
out
gs
mov
daa
push
jle
fstps
jp
in
int3
pop
in
xchg
dec
cmp
xchg
cmp
iret
nop
test
imul
sub
icebp
mov
cmp
pop
ret
mov
or
int
add
test
jle
fwait
mov
sbb
sbb
lock
stc
pop
pop
sub
stos
cmp
and
push
xchg
mov
sbbb
out
jp
jecxz
mov
mov
mov
mov
xor
mov
jle
in
add
jg
lret
pop
add
pop
add
xor
mov
lods
lods
das
jmp
into
xchg
out
sbb
mov
popf
outsb
or
test
jg
scas
aad
ja
clc
pop
out
out
xchg
and
adc
inc
xor
xchg
lret
xlat
dec
fcomp
dec
outsl
mov
dec
cmc
repz
aam
add
sub
inc
xchg
lcall
pop
pop
jb
sahf
pop
int
inc
es
mov
ficompl
mov
shlb
add
movsl
push
mov
ret
mov
mov
adc
mov
cmp
fldl
and
xchg
xlat
or
andl
mov
js
pop
dec
loope
fldcw
mov
sub
mov
xchg
out
jne
pop
loope
mov
adc
xchg
outsb
dec
cs
mov
inc
imul
sarb
rcll
sbb
inc
std
roll
stos
sbb
fcoml
jo
cltd
mov
sbb
fcomi
mov
out
jb
adc
or
aam
icebp
xchg
inc
push
out
mov
jne
mov
xchg
lods
mov
add
sbb
inc
add
arpl
push
sbb
push
inc
dec
popf
xor
out
jmp
out
js
xchg
cmp
fcoml
mov
scas
shll
mov
push
lods
jne
flds
cmp
adcl
cmp
pop
js
sahf
es
pop
nop
add
ret
mov
rorl
pop
and
jg
fs
pop
sbb
cmp
repnz
mov
jmp
es
es
dec
xchg
scas
bswap
mov
xchg
inc
icebp
test
cmp
xor
scas
aam
xchg
adcb
sub
push
or
fists
push
mov
push
stos
pop
lods
lret
js
mov
inc
cli
in
xchg
push
xchg
cmc
jne
jmp
cli
fwait
sub
cmp
ljmp
dec
mov
push
mov
pop
pusha
lret
ficompl
popf
sbb
jno
movd
sarl
cmpsb
jmp
adc
dec
adc
sbb
adc
jbe
jg
jbe
mov
iret
cmpsl
sub
popa
aaa
pop
mov
jno
mov
int3
cmp
push
mov
push
pop
cwtl
mov
fwait
pop
insb
in
push
and
pop
push
xor
mov
pop
mov
jno
push
pop
dec
cwtl
and
jl
pop
xchg
fstl
loop
jne
ficoml
mov
pusha
fsubs
cmc
dec
aas
xor
dec
dec
std
bound
mov
stc
lods
jp
ljmp
dec
push
enter
sbb
sub
lahf
mov
lock
push
outsb
jns
cli
aaa
nop
scas
push
fdivs
imul
jge
pop
out
jecxz
test
outsb
pop
mov
scas
jp
push
aas
fcompl
or
push
jecxz
add
sbb
sub
insl
and
xor
cmp
inc
jne
adc
cmp
mov
push
cmp
jb
insb
adc
add
sub
cs
or
push
push
rolb
xlat
sarw
daa
pop
fnsave
out
ja
ja
add
arpl
mov
sub
xchg
stos
cmp
mov
push
push
and
lret
push
jecxz
inc
mov
pop
dec
jg
test
out
call
mov
jno
loopne
hlt
pop
push
and
xor
mov
jns
pop
mov
mov
jg
mov
test
fisubl
lods
cld
out
outsl
pop
push
fimuls
sbb
xchg
shrb
jno
pop
add
leave
aas
aad
sub
jle
xchg
cs
stc
push
cmc
pop
inc
adc
xor
les
mov
xor
xchg
mov
jb
jne
in
aaa
jo
negb
insl
jle
dec
jecxz
pop
orl
mov
cltd
jns
gs
lods
lret
dec
sbb
pusha
mov
add
popa
jae
xchg
pop
icebp
dec
mov
xlat
push
mov
mov
adc
xor
lds
sbb
mov
and
out
std
jecxz
test
rclb
sbb
std
in
jp
add
push
push
dec
cmpb
xchg
cmp
mov
and
aaa
pop
xchg
xchg
cvtps2pi
popf
test
mov
jg
bound
jecxz
push
inc
fs
pop
or
lcall
loope
adc
mov
adc
add
pcmpgtd
lcall
aas
cmp
lods
jae
cli
jns
negb
or
adc
xor
mov
js,pn
pop
idivb
sub
cld
shlb
mov
cmpsl
sbb
fdivrs
ret
cmp
push
sbb
sahf
or
mov
loopne
jno
push
mov
sti
mov
movsl
mov
jge
fmul
xchg
icebp
mov
xchg
aad
sub
pop
jmp
push
dec
xor
adc
dec
sahf
das
aas
ret
add
lds
out
jl
mov
lahf
shlb
lahf
pop
pop
aam
je
jns
std
or
pop
and
xor
inc
mov
mov
into
mov
mov
ficompl
movsl
mov
xchg
sub
sub
jbe
inc
divl
cmc
outsb
icebp
loop
sub
cs
inc
scas
faddl
ret
push
xchg
jns
lea
fsubrs
ljmp
sub
add
mov
and
bound
cwtl
jg
adc
inc
push
or
call
lods
test
dec
aad
sub
lcall
fsubrp
fistl
mov
cmp
push
in
cltd
lods
cltd
fimuls
adc
dec
cmp
out
or
scas
add
repnz
lods
mov
in
loopne
sub
ror
adc
inc
loopne
lret
push
lcall
jbe
mov
xor
mov
add
cmp
mov
movsb
negl
lods
clc
out
sti
adc
es
rolb
aam
and
adc
pop
push
sub
dec
sbb
daa
xchg
xor
iret
mov
loope
mov
xchg
inc
xor
mov
mov
and
sub
repz
dec
dec
jb,pn
cmpl
aaa
cwtl
mov
shrb
push
inc
mov
cwtl
push
push
add
cmp
jp
mov
push
or
mov
xchg
push
paddusw
ljmp
stos
lea
push
cmp
mov
jmp
adc
jge
mov
push
lret
lods
rcll
xchg
cmc
xor
sub
jae
pop
sbb
sbb
cltd
dec
mov
leave
jo
movsb
push
in
xor
inc
fwait
push
jae
mov
pop
popa
sbb
or
pop
pop
jmp
cmc
aam
loopne
sub
leave
push
and
adc
pop
xchg
rcl
mov
pop
stc
lods
jmp
and
cwtl
cli
xlat
push
sbb
mov
mov
mov
add
sub
cmp
or
push
sub
and
clc
sbb
inc
aad
or
adc
orl
add
pop
push
xor
or
aaa
fcmovne
ds
repz
leave
aaa
dec
shl
outsl
sub
or
jl
cs
hlt
lods
pop
and
and
scas
lahf
or
xor
out
out
cwtl
jns
arpl
xchg
hlt
rorb
ljmp
call
aas
or
roll
xor
xchg
lock
setle
mov
sub
cli
in
dec
repz
inc
fdivrp
inc
ret
data16
outsb
add
orb
inc
clc
xchg
cmc
or
out
sbb
cs
dec
push
orb
ljmp
out
push
and
cmp
cmp
ss
mov
jns
subl
loopne
sub
cmp
mov
inc
add
sbbb
lcall
cwtl
je
xor
divb
scas
stc
and
js
cmp
sub
test
nop
sub
cli
inc
inc
loopne
mov
xor
in
mov
jmp
pusha
sub
cmp
notb
call
and
xchg
xchg
sbb
cmp
mov
jge
je
std
dec
or
push
and
scas
rol
icebp
or
push
stos
ljmp
in
inc
mov
inc
mov
inc
mov
push
dec
mov
mull
sub
xchg
shrl
or
xorl
testb
lret
movb
insb
sbb
clc
lret
adc
nop
jnp
mov
out
ljmp
inc
lcall
loopne
lods
xor
lret
pop
mov
inc
in
stc
xchg
adc
cld
jno
and
and
loop
in
pop
mov
jge
pushf
fisubl
push
inc
adc
inc
dec
setle
inc
jnp
gs
in
inc
mov
lret
stc
add
jns
push
jnp
fwait
dec
lods
fwait
push
jl
ret
fisubl
jnp
cli
ja
cmc
pop
mov
dec
inc
test
bound
mov
push
lods
notl
movsb
adc
mov
aas
shlb
outsb
repz
aas
popa
jo
imul
pop
push
arpl
js
xor
cmp
adc
or
jae
or
or
mov
pop
pop
sbb
pusha
test
clc
in
sub
mov
pop
sub
outsb
scas
pop
mov
push
negb
xchg
sbb
pop
ret
xchg
jmp
sahf
inc
sbb
push
dec
or
data16
cmp
in
outsl
shrb
xor
inc
clc
mov
addb
jp
ret
mov
mov
mov
imul
xor
jle
cmp
mov
dec
orl
pop
and
roll
scas
pushf
mov
sub
pusha
movsl
sub
sub
int3
les
ret
cld
outsb
lds
mov
aad
dec
test
inc
adc
fucomp
or
lret
rcrl
or
cltd
stos
adc
fs
mov
xchg
jmp
dec
testl
cmp
push
scas
or
dec
outsl
push
inc
inc
imul
xor
fmuls
inc
jno
lods
push
rorb
fwait
adc
repz
inc
inc
iret
or
loopne
adc
xor
xor
rcrb
jo
inc
ret
cld
leave
dec
cmp
push
movsl
jne
inc
inc
fcmovnbe
jg
ror
es
mov
mov
lods
fs
cmp
and
xor
jno
push
lods
jb
dec
pop
shlb
mov
or
push
lea
mov
in
mov
in
cmpsl
mov
push
pop
movsb
pusha
frstor
add
dec
add
loop
test
stos
out
sub
push
push
pop
and
into
data16
pop
push
hlt
adc
in
and
jecxz
push
cltd
mov
xchg
mov
daa
adc
sahf
sub
bound
dec
lods
mov
sub
push
addr16
je
xchg
loopne
or
mov
or
icebp
dec
dec
dec
and
cli
negl
inc
adc
and
cld
aam
lret
outsb
jno
out
mov
pop
inc
out
outsl
jg
stos
adc
pop
sub
lcall
out
test
xchg
jmp
add
je
cmp
xlat
ss
sub
add
xor
mov
and
sbb
test
mov
sub
push
ficoms
pop
cmc
pop
push
notb
jae
mov
int
loope
cmp
adc
xchg
mov
jbe
xchg
lods
movsl
cmpl
or
xchg
jae
jne
cs
lea
scas
mov
sub
xlat
cmp
inc
lea
cltd
rol
jmp
stc
sub
orb
mov
jmp
fwait
imull
push
cld
aad
push
inc
sbb
sbb
dec
xchg
xlat
push
fwait
pop
and
xor
mov
scas
out
enter
mov
ficoms
xchg
outsl
cmp
mov
fsubrs
fnstsw
repnz
xor
cmp
stos
pop
and
pop
push
cmpb
ds
cmc
adc
movsl
sub
cvtps2pd
gs
adc
mov
mov
data16
test
clc
xchg
scas
scas
loop
add
or
xlat
fcoms
in
xor
stc
in
inc
gs
mov
dec
test
jne
jbe
stos
dec
add
notb
adc
aaa
mov
imul
es
mov
xchg
ss
jg
adc
push
sub
mov
and
repnz
xor
repnz
pop
lock
rcrl
iret
pop
and
out
out
sahf
std
mov
fcompl
sbb
fmuls
outsb
xchg
push
mov
xchg
jae
or
xor
mov
add
outsb
ljmp
cmp
cmp
mov
test
pop
xchg
adc
sub
push
mov
add
out
xchg
insb
sahf
rcr
mov
pop
insl
xor
scas
jnp
xchg
xchg
std
adc
outsb
jnp
cmp
arpl
fstpt
dec
xor
ret
out
stos
out
sbb
inc
loopne
jbe
inc
push
mov
or
xor
jl
xor
add
cld
leave
mov
mov
and
mov
in
dec
jp
push
xchg
xchg
and
dec
adc
xor
das
xor
fcmovne
pushf
imul
insb
imul
cwtl
insb
and
movsl
push
outsb
cmp
in
pusha
mov
cmc
outsb
dec
jl
andl
loop
in
mov
mov
in
xchg
push
push
adc
inc
xchg
xchg
xor
push
ja
add
ret
rcrl
jecxz
sub
add
jo
cmpsb
add
in
fimull
pusha
rclb
loopne
adc
jo
fs
mov
jl
dec
int
pop
jp
jne
pop
add
cmc
inc
nop
mov
addr16
sbb
mov
pop
sub
xchg
ss
push
dec
fldt
mov
bound
mov
test
and
lds
decb
or
add
rcrb
adc
sbb
cmp
out
shrb
jg
xchg
dec
inc
nop
test
pop
insl
pop
xchg
repz
addr16
mov
jo
loope
jmp
andb
loope
jle
daa
inc
and
push
jne
jbe
in
mov
cmp
push
sbb
in
mov
call
shlb
lods
mov
add
lahf
negb
adc
sbb
jne
sbb
cmc
lahf
loop
xor
xor
and
mov
push
test
cmp
movsl
or
xor
mov
out
xchg
mov
and
jp
cmp
lods
and
mov
pushf
aaa
lock
adc
adc
push
hlt
pushf
or
adc
dec
dec
aad
jg
pop
lods
dec
and
sbb
mov
or
push
test
dec
mov
mov
adc
mov
mov
into
jl
inc
jmp
loope
or
repz
stos
mov
mov
gs
or
mov
jnp
test
pop
sahf
dec
repz
addb
rorl
sub
aad
pop
popf
mov
push
inc
aas
xchg
in
inc
xchg
and
int
jo
shr
push
outsl
mov
out
jge
cmp
stos
xor
fadds
adc
scas
hlt
dec
ljmp
cwtl
push
cmc
stos
dec
xor
mov
jg
dec
ja
dec
xor
aad
jne
lds
and
add
popa
and
or
inc
jecxz
cmp
mov
ljmp
stc
jge
lods
icebp
call
push
ret
clc
jp
jp
inc
push
rorb
in
fisubrs
insl
andl
adc
bound
push
add
mov
cmp
push
inc
xchg
or
iret
test
xchg
ds
test
push
sbb
sti
inc
jae
cmpsl
ret
cmp
adc
cmpsl
xor
std
sub
loop
cmp
sub
lret
mov
push
test
cmpsl
mov
xor
stos
xchg
sahf
es
insl
clc
mov
push
jbe
xchg
sbbl
lds
cmp
shlb
ss
dec
pop
mov
enter
int
hlt
jg
hlt
mov
jo
je
jecxz
push
out
cmc
in
enter
mov
dec
xlat
loop
or
addl
xor
repz
jo
shrb
and
icebp
mov
pop
or
jg
jmp
cwtl
pop
or
xor
adc
sbb
pop
push
js
lcall
leave
dec
imul
mov
subl
add
cmp
and
push
inc
jge
mov
adc
adc
cmp
cmp
adc
cwtl
mov
into
ret
lcall
add
mov
sbbl
fsub
jle
je,pt
test
ss
or
outsb
mov
jne
fidivrs
icebp
in
int3
mov
dec
shlb
adc
push
lcall
aad
addr16
insl
outsl
inc
push
inc
mov
mov
cmpsb
mov
shr
ljmp
loop
xor
and
push
dec
cmpsl
or
aaa
mov
xchg
push
push
mov
pusha
add
jl
and
mov
enter
and
jecxz
sub
outsl
shrl
in
lret
mov
pop
sti
dec
jae
pop
xchg
xchg
into
add
adc
mov
dec
dec
ret
out
dec
sbb
jge
stos
mov
mov
pop
mov
sub
add
mov
push
shll
inc
cmc
outsb
mov
je
sbb
das
je
lahf
int
xor
out
jp
dec
dec
push
jne
out
add
mov
adc
imul
jmp
xchg
movsb
sub
jecxz
aam
dec
mov
jge
je
cs
jl
mov
sbb
aad
cmpsb
mov
add
daa
dec
shlb
aas
lock
sub
mov
fs
add
pop
mov
mov
fs
inc
les
and
pop
jecxz
pop
pop
gs
stos
out
inc
or
pop
xchg
sbb
test
das
fbld
js
loope
insl
xor
ss
jns
repnz
stos
aam
cs
jmp
loopne
out
cmp
adc
add
xchg
loope
mov
loopne
or
mov
xchg
loope
je
sbb
ret
lcall
mov
xchg
in
and
cld
rcll
into
dec
scas
xor
pop
mov
fcompl
dec
jp
inc
jmp
adc
mov
stc
jo
aaa
mov
adc
xchg
cmc
in
add
xor
jp
icebp
sbb
jp
jp
rol
xor
pop
push
jo
jl
xchg
outsb
cmpsb
loopne
xor
cwtl
jb
jg
dec
jae
mov
and
xchg
fcomps
jge
jecxz
pop
push
fs
and
jae
faddl
iret
mov
jle
pop
cwtl
adc
or
push
hlt
aam
ss
xchg
shlb
or
int
xor
mov
dec
pop
sbb
xor
sbb
rol
mov
scas
push
xchg
jo
dec
test
inc
jmp
rcl
test
loop
adc
js
out
pusha
push
sarl
dec
pushf
jg
outsl
repnz
push
stc
outsl
inc
call
jle
mov
jp
jbe
test
ret
add
xchg
sub
mov
ret
das
and
adc
add
test
cmc
mov
mov
push
ja
popa
or
dec
mov
xchg
pushf
inc
add
hlt
cmpsl
inc
into
popa
fdivrp
lretw
and
lods
or
push
mov
das
jo
sbb
push
repz
dec
inc
sub
inc
mov
shll
cmpsb
out
mov
push
xor
mov
lret
out
test
out
and
xchg
jge
int
cmpsb
stc
int
aas
jp
popf
cwtl
pop
xor
gs
add
push
fwait
aam
sti
adc
int
add
dec
aaa
mul
call
or
lock
inc
mov
ds
or
adc
push
sti
lods
shll
sahf
add
pushf
mov
mov
loop
imul
and
lcall
imul
cmp
add
outsb
mov
sub
inc
sub
nop
mov
and
out
push
adc
lahf
jle
inc
test
and
add
loop
add
jns
sahf
xchg
ja
push
mov
fdivrs
mov
pop
add
add
dec
iret
cmp
jecxz
ret
clc
inc
push
fs
add
testl
sahf
dec
dec
stos
shll
movsb
std
lods
push
mov
lar
sub
xchg
jno
loopne
lea
dec
cld
jp
or
push
adc
cmc
sub
push
loopne
pop
mov
mov
mov
hlt
sbb
orl
lcall
inc
and
stc
and
clc
and
fisubl
imul
xchg
pop
data16
and
pushf
out
popf
mov
lods
inc
mov
cmp
add
lods
jo
or
and
sbb
sbb
mov
sahf
pop
sbb
cli
mov
xchg
xor
jnp
jge
sti
es
mov
into
cli
add
or
mov
push
test
ret
push
icebp
fnsetpm(287
nopl
mov
mov
rclb
arpl
scas
lds
jbe
or
mov
push
xchg
sub
lret
push
imul
cmc
cli
mov
int
in
clc
fadd
in
fimull
push
adc
xor
pusha
fisubrl
xor
out
rolb
sub
loope
or
xchg
jmp
ret
mov
test
addr16
inc
sbb
sahf
pop
and
lcall
dec
sbb
fiadds
or
mov
sbb
out
push
addr16
pop
into
dec
inc
out
pop
adc
popf
scas
push
cmp
hlt
and
mov
sub
arpl
pushw
jle
sarb
jp
mov
loopne
or
lods
daa
dec
pop
inc
xchg
jl
xchg
push
shlb
call
cmp
pop
jno
add
dec
ljmp
mov
flds
push
daa
push
sub
imul
sub
sahf
ss
das
notb
pop
scas
ss
inc
sbb
mov
pop
lock
and
inc
lret
sbb
push
in
out
popf
push
sub
mov
inc
add
jg
bound
and
fldenv
cmp
xchg
ret
test
mov
xor
sub
stos
push
mov
jmp
orb
js
adc
jno
gs
jl
xlat
out
cmpsb
mov
sbb
xor
in
cmp
xchg
repz
enter
adc
repnz
mov
sub
jo
cmpsl
add
lret
mov
adc
inc
inc
sub
cmp
dec
fsub
loopne
inc
aaa
std
das
jmp
xor
push
sahf
hlt
push
lea
scas
mov
and
sbb
lret
cmc
fs
cs
int3
ja
sub
in
jle
sbb
ret
sahf
mov
repz
repz
out
xchg
jl
call
movb
inc
add
mov
mov
xchg
dec
daa
gs
adc
inc
xchg
fisubs
inc
adc
mov
inc
dec
dec
mov
cmp
data16
cmp
mov
dec
frstor
add
popa
sub
sub
imul
xor
mov
shll
lret
test
jno
push
inc
cmpsb
int
sbb
jp
xchg
lret
and
add
adc
icebp
sub
addr16
pushf
icebp
inc
push
nop
jle
add
cwtl
fcmovb
aaa
push
sbb
or
sbb
mov
mov
inc
xchg
in
sbb
cmp
mov
add
sbb
push
repz
insl
xchg
mov
mov
imul
dec
ja
ljmp
enter
mov
and
outsl
and
lret
inc
test
push
dec
addr16
outsl
add
incb
add
cwtl
hlt
xchg
xor
adc
addb
mov
and
lcall
nop
xlat
cmpsl
add
dec
sbb
dec
sub
std
cmp
roll
roll
mov
pop
popf
loopne
fistpl
xchg
imul
rcr
push
int
in
push
imul
mov
cs
and
mov
les
adc
push
movsb
iret
test
ss
mov
ficomps
sbb
daa
jb
out
pop
shrl
mov
mov
test
cld
scas
ljmp
and
pop
or
aad
cli
popa
dec
adc
jne
in
lret
push
int
popf
jno
std
jae
sbb
adc
pop
test
out
cmp
in
stos
lods
je
lods
adc
fs
bound
fnstsw
sub
das
js
pop
mov
mov
jp
ret
fsubrp
mov
leave
repnz
adc
inc
repnz
xor
xchg
aam
int3
stos
add
data16
and
inc
fcmovu
out
and
in
je
popf
fldl
push
lahf
std
push
sarb
pop
mov
push
sbb
punpckhwd
push
inc
int
fcoml
cmp
call
leave
jnp
jno
and
daa
mov
fsubp
push
mov
int3
and
push
xor
shl
pop
xor
mov
push
jo
jne
jo
lret
xorb
lods
dec
xor
push
shlb
in
cmp
xlat
mov
aam
add
jge
es
inc
pop
into
faddl
add
sub
outsl
push
lods
ljmp
leave
adc
push
xchg
inc
mov
pop
rcll
xchg
addb
sub
push
leave
negl
lret
jne
mov
lret
push
adc
push
adc
ficoml
mov
xor
sbb
cmp
frstor
pusha
and
adc
js
add
fistl
sub
mov
pusha
add
fdivrs
mov
scas
shll
mov
jnp
mov
insb
mov
mov
push
mov
sbb
mov
mov
mov
cmp
aam
jge
mov
jbe
cmpsb
dec
inc
cs
push
xchg
pop
sti
lahf
jne
pop
mov
mov
jnp
and
cwtl
inc
inc
pop
data16
dec
inc
mov
imul
loope
sbb
addl
sub
getsec
hlt
push
loope
mov
js
lahf
loopne
cs
sbb
jae
sub
sub
lahf
fildl
cmp
dec
inc
dec
pop
sarb
mov
gs
rorl
ss
imul
dec
dec
pop
mov
ljmp
xchg
imul
add
pop
cs
pop
clc
jbe
enter
cmp
mov
xchg
sub
out
mov
cmpsl
jns
adc
mov
push
in
cmp
leave
test
fiadds
or
pop
mov
ds
cwtl
clc
jge
repnz
jnp
divl
imul
lods
enter
pop
push
sub
loop
clc
and
mov
jge
and
lods
mov
sbb
adc
addb
fbstp
lcall
add
xchg
daa
xor
inc
dec
icebp
xor
loop
pop
sbb
dec
push
movsl
xor
dec
les
data16
mov
lods
pop
movsb
ds
push
pop
cmp
fistpl
mov
es
push
ret
xchg
xorb
sbb
mov
ret
addr16
mov
std
imul
jmp
mov
fisubl
push
and
outsl
mov
jae
cmpb
lds
popl
pop
mov
jae
jg
dec
sub
rcrl
push
mov
lods
sub
mov
adc
push
in
mov
ljmp
cmp
sub
adc
jmp
jge
xor
sbb
subl
in
fcom
and
cwtl
inc
fucomi
jg
mov
pavgw
jl
sub
inc
or
subl
inc
mov
stos
fidivs
out
movsb
push
lcall
jnp
mov
add
cmp
in
xchg
or
pop
cltd
dec
or
cwtl
push
in
movsb
dec
lret
jne
mov
cmpl
cmp
push
sbb
sbb
inc
dec
push
sbb
pop
loopne
jecxz
mov
push
xor
push
hlt
push
insb
jne
arpl
sub
push
mov
fs
mov
mov
gs
add
push
jb,pt
dec
and
icebp
in
mov
pop
pop
jecxz
mov
xor
add
mov
rorb
aad
sbb
cmp
imul
sbb
lods
arpl
das
inc
add
push
lahf
out
sub
repnz
jbe
push
dec
out
clc
adc
je
insb
jmp
push
mov
xchg
lcall
jno
psllq
test
mov
stos
dec
sub
idivl
sub
cs
inc
jb
sbb
adc
ja
mov
or
cmpsl
lret
sbb
fsubs
mov
js
mov
aaa
subl
mov
sbb
fldt
call
jns
lods
adc
out
fldt
enter
and
jge
lods
push
jb
ljmp
sti
sbb
mov
push
push
or
or
adc
icebp
and
xor
scas
cltd
in
daa
out
in
ret
enter
dec
decl
sub
inc
js
adc
insl
cmp
mov
mov
mov
popf
cmp
and
jae
dec
mov
adc
mov
xor
mov
clc
insb
es
sub
lock
rclb
lahf
shl
fstpt
mov
mov
sub
shll
popf
fdivr
jp
jae
cltd
mov
jg
out
ljmp
mov
adc
into
jnp
pop
nop
rcrb
movsl
lods
test
test
test
dec
push
mov
inc
data16
add
and
jge
pop
fwait
xor
mov
jae
jl
cltd
add
stos
cmp
fdivrl
arpl
nop
mov
jne
dec
pop
insl
jmp
mov
rcrb
lea
iret
popa
mov
push
push
ja
shlb
lret
mov
rolb
movb
sub
dec
push
push
dec
jmp
pop
pop
xor
and
lahf
fimull
in
les
shll
add
loopne
sub
push
mov
mov
and
cmp
push
xchg
push
mov
mov
lret
xchg
popa
and
int3
clc
rorl
sarl
mov
cmc
mov
mov
push
or
fs
mov
in
or
jne
jle
and
test
dec
sahf
sub
js
loope
sbb
jno
in
dec
dec
xor
mov
js
aad
hlt
cli
dec
push
out
push
into
mov
inc
sub
pop
int
mov
comiss
mov
push
add
ror
pop
stos
das
jno
leave
or
mov
aam
in
lret
gs
mov
mov
or
sub
insl
dec
mov
dec
repz
jg
adc
pop
sub
gs
in
incl
pop
cmp
push
ficoml
mov
js
mov
out
shll
mov
cmpsb
jbe
rcrb
sub
incb
std
adc
jp
clc
mov
fsubrl
mov
push
add
push
sub
int3
sti
imul
roll
push
adc
stos
decl
sbb
insb
cmp
call
lods
sbb
mov
cld
into
sub
call
mov
into
pop
jl
or
or
xchg
sub
jne
dec
pop
stos
or
dec
insb
sahf
mov
or
xchg
push
cli
bound
mov
add
cwtl
add
idivl
negb
push
movsb
scas
imul
shlb
pop
push
fdivrp
lcall
shl
fwait
mov
in
mov
mov
mov
fiaddl
shrl
cmp
orl
xor
stos
inc
outsb
xchg
and
jns
jg
or
ss
pop
sbb
popf
mov
jecxz
mov
jnp
fisttpl
filds
pop
loop
shlb
and
ds
add
mov
arpl
cmc
in
push
add
es
rolb
pop
rclb
pusha
ss
pop
jno
iret
iret
jne
inc
nop
sti
dec
stos
daa
lahf
int3
fbstp
fld1
dec
cmp
rorb
cmp
fptan
cmp
jg
mov
notb
push
mov
dec
mov
jmp
mov
scas
adc
pushf
mov
mov
int
shll
cmpsb
jbe
fwait
pop
xor
add
xor
ss
push
dec
iret
mov
lahf
xchg
cmp
mov
jb
flds
data16
xor
xchg
rolb
inc
cmpsl
rcr
jle
pop
je
mov
jp
cmp
out
dec
mov
imul
orb
cwtl
out
push
push
movzwl
mov
mov
cmpsb
arpl
std
loopne
inc
adc
pop
js
jne
mov
sarl
hlt
jge
pop
mov
pushf
mov
push
pop
inc
int
mov
lret
add
push
mov
mov
xor
xor
sub
pushf
adc
stos
sub
loope
cmp
cmc
push
dec
js
pushf
lret
dec
jo
mov
lock
xor
adc
int3
dec
adc
cmpsb
lock
or
mov
imul
xor
mov
cs
pop
repz
push
in
push
xchg
out
loope
lret
ja
ss
cmpsb
test
lea
push
insl
jmp
movb
shl
mov
and
pop
xchg
into
out
dec
pop
pop
inc
mov
jmp
ja
add
shl
xor
stc
push
push
push
cmp
das
pop
ja
sub
dec
mov
pop
xor
in
out
ret
sahf
stos
lea
out
cli
lds
jae
adc
sub
in
lea
fnstcw
mov
ljmp
mov
push
je
adc
mov
mov
pop
outsl
or
and
stos
mov
lods
cmp
cli
addb
sbb
in
xchg
pop
ds
mov
xchg
out
ret
andb
in
addr16
aad
push
in
mov
mov
aaa
jno
call
xchg
frstor
pop
push
ljmp
lahf
dec
jne
xor
cmpsl
daa
fxch
xchg
fcompl
stc
aam
dec
dec
fldt
push
mov
and
jbe
jecxz
adc
insb
cmp
mov
pop
les
sbb
xchg
jnp
cld
fdivr
push
xchg
adc
dec
xchg
cltd
dec
lahf
cmpsw
rolb
inc
sub
fidivs
movsl
xchg
imul
sbb
nop
lret
sub
data16
mov
cld
jecxz,pt
push
out
inc
push
pop
cld
inc
addr16
xchg
inc
in
scas
aad
xchg
add
sbb
testb
dec
add
dec
pop
push
add
das
arpl
ret
and
add
test
int3
jg
push
repnz
xor
add
jmp
mov
hlt
xchg
in
les
mov
pop
cmp
aaa
leave
sarb
or
xchg
imul
outsb
xor
cwtl
pop
and
in
pop
xchg
rcl
adc
and
xchg
clc
imul
cmpb
and
jle
rorb
enter
and
sub
push
mov
lahf
rorl
fs
mov
pop
sbb
pop
sbb
xor
fsubr
ds
insl
in
pop
push
dec
clc
pop
rcl
xchg
add
daa
lret
mov
mov
rolb
fcmovnu
in
movb
jne
flds
xlat
sub
fcoms
pushf
cmc
fcoms
cmp
scas
aad
pop
stc
cmp
sub
push
mov
sub
sub
xor
pop
lea
repz
mov
fdivl
or
sti
loopne
jb
out
sub
outsb
sbb
dec
mov
mov
cld
mov
in
sbb
jo
out
xchg
dec
loope,pt
imul
inc
mov
divw
pop
pusha
insl
sub
movsl
pop
push
jmp
add
mov
jbe
add
push
mov
mov
and
and
lcall
mov
cmpsb
fldcw
das
ss
outsl
aas
mov
and
mov
xor
sbb
imul
out
nop
and
imul
int3
imull
add
xchg
push
shrb
orl
lcall
into
jbe
pop
mov
cmp
std
jg
aad
sbb
incb
jmp
out
dec
xchg
es
fxtract
cmp
lds
inc
js
mov
xchg
addr16
outsl
sar
cwtl
mov
lahf
std
outsb
fnstcw
jno
jb
adc
inc
loop
lcall
lds
pcmpgtb
cmpsb
scas
pop
in
fnstsw
sub
outsb
fildl
dec
enter
jb
sbb
cmpsl
cli
lods
scas
into
mov
add
stc
lea
cmp
sbb
mov
mov
adc
imull
push
mov
sub
ljmp
add
not
lods
insl
jb
test
idivl
cmc
jmp
mov
or
sub
pop
jb
loopne
decb
mov
bound
aam
add
ds
xor
sbb
pop
cmpsb
stos
stos
push
out
xchg
mov
pop
adc
xchg
movsb
aam
out
sbb
into
aaa
daa
insl
sbb
or
inc
in
repnz
in
sbb
sub
out
ss
push
dec
jno
inc
inc
sbb
jl
push
pop
push
cmc
xchg
cli
test
fistpll
push
addb
jne
int
movsb
daa
aaa
pop
jp
gs
inc
dec
push
jge
inc
mov
outsb
imul
add
movsl
stos
mov
adc
pop
mov
pop
ja
repz
ds
mov
scas
test
adc
rclb
jno
mov
sbb
ret
sub
nop
andb
xchg
jge
and
shlb
mov
push
push
imul
dec
push
inc
call
notl
jnp
jmp
inc
jg
mov
ss
inc
add
lods
sub
add
and
leave
dec
mov
mov
dec
push
or
cmp
pop
push
je
jne,pn
div
fildl
cli
sbb
clc
mov
push
popf
mov
sbb
sbb
push
cmp
lea
cmpsb
or
pop
int3
es
inc
out
dec
nop
lcall
out
mov
pop
jno
or
mov
cmp
shll
dec
mov
push
and
cmpsb
test
lods
or
cwtl
push
sub
in
mov
mov
pushf
or
arpl
dec
shr
add
out
sbb
inc
adc
mov
cli
mov
cmp
mov
and
cmp
adc
es
hlt
lods
pop
push
test
or
jmp
jae
mov
push
jae
adc
lods
pop
fcomps
cmp
imul
add
mov
dec
inc
push
jnp
jle
or
insb
subb
adc
testl
imul
or
jno
stos
test
cwtl
jmp
lret
inc
jno
call
les
icebp
mov
adc
cmp
aaa
pop
or
xchg
repnz
loope
in
or
cltd
ds
mov
int
mov
outsl
cmp
and
mov
jne
insb
xchg
arpl
dec
sbb
xchg
xlat
cmp
stc
pop
int
cmp
scas
pop
push
xchg
and
lds
inc
cltd
dec
add
addb
mov
push
fildll
xchg
jb
aas
fisttpl
mul
cwtl
pop
or
push
out
fs
jge
lcall
js
test
dec
adc
sbb
mov
nop
jg
cli
sbb
out
in
rorb
xchg
mov
mov
adc
add
ljmp
cld
jne
jmp
cld
dec
jnp
je
hlt
push
sub
lcall
shll
lret
ror
enter
mov
adc
dec
push
rcrl
jmp
push
sbb
cmc
sub
fbstp
and
and
mov
lahf
rorb
jae
sbb
sahf
push
jl
dec
enter
mov
arpl
fiaddl
xchg
pop
cli
nop
stos
loopne
icebp
fistl
insb
cmp
insl
fstps
int3
push
dec
lods
call
sub
call
xchg
pop
adc
enter
ja
push
push
pop
pop
inc
ds
sub
test
popf
idivl
test
push
movsw
cmp
ret
aaa
loopne
lea
adcb
out
push
add
std
xor
and
jb
scas
mov
sbb
lock
xor
pusha
pop
int
add
xchg
in
fistpl
pop
mov
push
jmp
popf
jmp
ja
pop
scas
movsb
out
filds
and
and
daa
pop
cmp
mov
push
sub
pop
jg
pushf
pop
mov
pavgb
add
shr
les
sub
into
cwtl
out
cwtl
pusha
inc
pushf
add
xor
lret
push
xchg
cmp
xor
sete
mov
popa
mov
hlt
mov
mov
mov
arpl
jle
fdivl
rclb
pop
inc
mov
pushl
aas
lods
repz
cs
mov
ja
outsb
or
repz
cmpsb
adc
xchg
mov
jno
push
inc
mov
cmp
outsb
mov
dec
arpl
fsts
ss
push
push
mov
push
out
jo
stos
call
pop
shl
mov
mov
fsub
mov
outsl
lock
and
dec
cmp
loope
loop
adc
sbb
mov
scas
push
push
jo
shll
das
notb
dec
or
out
lret
push
ss
pop
pusha
push
stos
cwtl
sbb
testl
push
pop
ljmp
pop
and
mov
add
lahf
lock
mov
and
dec
fdiv
int3
popa
cmc
mov
jns
fmul
int3
mov
call
fdivl
out
jle
pop
cmp
ret
or
stos
lds
add
or
sub
call
cmp
cwtl
aaa
lret
dec
sub
hlt
or
sub
scas
into
in
add
cltd
data16
jl
xor
rcr
and
movsl
xchg
lret
iret
loope
arpl
jns
pop
sar
arpl
sub
hlt
lods
pop
inc
add
inc
movsl
fwait
inc
add
fs
outsl
leave
int
mov
inc
push
into
gs
test
cmp
mov
addb
loop
pop
adcl
pop
inc
jns
sub
or
stos
push
mov
loop
js
push
add
inc
xor
movsl
xchg
in
dec
or
inc
lcall
insl
inc
fs
filds
push
sahf
popa
push
or
sub
outsb
push
scas
push
push
jge
idivb
jecxz
cmpb
enter
sbbl
lret
out
mov
leave
incl
inc
push
sub
out
outsb
lcall
xchg
scas
jp
rcr
in
or
dec
lea
orb
orb
lods
fildll
into
test
daa
ja
add
mov
sbb
loope
sub
push
jmp
xor
mov
repnz
cli
pusha
pop
dec
and
lods
dec
repnz
mov
xchg
mov
je
cmp
pop
test
jae
sbb
loop
nop
pop
xchg
xchg
dec
sahf
sbb
iret
ljmp
out
pop
mov
dec
adc
mov
mov
push
mov
fwait
int3
sbb
out
shll
dec
push
or
insl
pop
xor
pop
movsb
add
jno
xchg
arpl
dec
cltd
inc
xchg
loope
jge
mov
sbb
ror
add
mov
adc
int
push
clc
arpl
aam
sbb
cli
loope
or
sbb
shll
outsl
mov
add
dec
mov
shrb
mov
jnp
push
cmp
rorb
or
fisubrs
in
sbb
ret
arpl
call
jmp
roll
enter
fistpll
pop
pop
mov
push
int3
cld
insb
cmp
lock
cmp
lcall
dec
mov
mov
mov
xlat
dec
sbbb
loopne
xlat
jge
loop
cld
cmp
xor
mov
jb
add
inc
bound
andl
dec
push
push
in
inc
loop
fsubrs
clc
lock
imul
dec
nop
aaa
mov
cmp
push
lahf
call
scas
aaa
xchg
inc
pop
ljmp
pushf
pop
mov
clc
hlt
sub
mov
clc
sub
int3
cmp
jl
mov
sub
xchg
js
mov
pop
popa
mov
adc
setg
inc
jbe
jns
sahf
mov
add
adc
call
mov
nop
jg
outsb
pop
loopne
cltd
mov
xchg
mov
int
mov
jnp
sahf
add
repz
sub
push
int
rorb
fmull
jmp
lea
xchg
sbbb
int
mov
push
cwtl
dec
and
mov
insl
push
loopne
adc
fisttps
push
icebp
jl
cmpsl
cli
aad
jmp
push
ret
mov
xor
imul
inc
mov
pop
mov
inc
adc
jno
push
jmp
fbstp
lock
xchg
stc
divl
jp
xchg
jecxz
and
pushf
xor
popa
xor
dec
xor
mov
mov
cmp
xor
xchg
xchg
insb
cmp
fnstenv
sub
or
push
mov
xor
push
mov
cmp
push
or
jo
dec
jae
stos
jp
add
mov
push
mov
mov
mov
stc
jb
mov
xorl
fnsave
jo
jmp
inc
lahf
cmp
mov
or
sbb
adc
sub
das
mov
decb
movsb
pop
xchg
mov
leave
ret
nop
push
jl
add
sti
or
mov
fsubs
xor
fwait
cs
rclb
pop
pop
sti
insb
jbe
jb
jbe
test
xor
inc
rclb
pop
popf
lock
iret
mov
mov
cmc
mov
out
jl
pop
cmpsb
cmc
or
ret
rcl
out
dec
adc
mov
jnp
xor
imul
add
xchg
ds
pop
inc
jbe
lret
add
cmp
and
add
mov
or
push
dec
jp
aam
repz
sahf
lret
add
insb
icebp
lcall
shr
fsubr
push
xchg
lcall
dec
mov
xchg
fsubl
stos
pop
xor
pop
aad
out
push
mov
cmp
sub
in
mov
jmp
repnz
lahf
in
adc
mov
sahf
inc
pop
inc
xor
mov
filds
inc
subb
repnz
sti
int
aad
pop
cwtl
adc
sbb
ja
jp
xchg
ds
loop
cwtl
test
jle
ret
icebp
adc
ss
sub
jb
mov
sbb
in
add
add
lret
cmpsb
or
out
int3
cmp
scas
test
xchg
mov
fstl
sbb
rorl
test
lock
sbb
inc
adc
ljmp
sti
lods
sbb
inc
int3
js
xchg
mov
mov
or
lods
jg
and
ror
cld
dec
dec
push
dec
or
mov
nop
dec
add
dec
pushf
mov
nop
sub
cmc
call
movsb
mov
jne,pn
push
jbe
insb
push
cmp
lock
cltd
adc
dec
stos
inc
mov
pop
test
mov
push
push
cmpsb
xchg
test
repnz
push
jno
or
push
out
test
fcomps
loopne
add
jo
cmp
iret
icebp
lock
sbb
ficoml
pop
fisttpl
sbb
or
movsl
das
sti
cmp
push
lds
test
cwtl
in
adc
insl
dec
or
jecxz
xor
mov
mov
mov
in
scas
in
mov
sub
ljmp
insb
adc
lods
test
leave
inc
dec
iret
iret
mov
das
cwtl
into
hlt
popf
dec
xlat
outsb
notb
scas
js
xchg
fstpt
gs
sahf
nop
arpl
idiv
adc
and
lcall
adc
and
dec
test
push
out
xor
cmpb
ds
je
lret
mov
sbb
mov
or
sbb
cmpsl
pop
sbb
mov
sbb
cmpb
jl
int3
nop
repnz
pop
mov
push
cltd
shlb
or
mov
stos
lods
and
push
insb
push
pop
jb
lahf
xlat
pushf
and
je
cmp
pop
movsb
mov
int
addr16
call
xchg
mov
sub
sub
or
out
adc
lds
clc
fmull
push
loopne
xor
lock
sbb
sbb
addl
or
mov
inc
jmp
jmp
jns
lret
insl
add
mov
loope
sbb
xor
lret
add
push
fistpl
sub
sar
mov
icebp
mov
stos
dec
data16
inc
xor
pop
pop
into
mov
fnstenv
jns
ret
push
push
add
inc
mov
adc
xlat
jge
and
inc
ljmp
fcmovnbe
pop
jbe
and
jnp
leave
push
add
mov
rorl
clc
insb
fbld
mov
punpcklwd
pop
test
ret
mov
insb
push
adc
into
mov
sbb
push
outsl
push
inc
shl
inc
push
fsubrs
scas
adc
inc
sub
aaa
cmpsb
mov
les
or
xchg
xchg
mov
mov
pushf
cmp
xchg
add
fnstcw
xlat
ljmp
push
or
lock
sti
bswap
int3
mov
cwtl
iret
cmc
push
push
add
push
xchg
sahf
fcoml
rorl
out
push
ret
jo
loop
cli
or
movsb
mov
sahf
jg
pop
dec
add
mov
push
sarb
testl
add
ja
gs
js
in
cwtl
pop
or
iret
notb
mov
scas
sub
mov
gs
sbb
cli
lds
push
pop
cmp
cmpl
rcrl
ficoml
cmp
in
loop
scas
mov
or
xchg
mov
push
jl
push
enter
or
sbb
aam
adc
dec
jl
jns
dec
insl
jae
lsl
mov
push
rclb
stos
lea
or
jno
loopne
mov
stc
in
mov
mov
push
xor
pop
lods
sbb
mov
lea
mov
mov
stos
mov
lods
cmpsl
adc
shll
in
mov
insl
sbb
adc
repz
add
hlt
lcall
movl
inc
les
mov
out
adc
daa
cli
cmp
or
adc
aad
cmp
pop
hlt
aam
cmc
mov
xchg
cltd
idivl
mov
push
jge
std
rorb
loope
fcmove
cmp
aas
or
iret
lods
push
cs
and
lods
mov
mov
push
mov
mulb
pop
stc
sbb
adc
cli
jb
jmp
nop
cmp
ss
inc
daa
dec
lret
cwtl
rcrb
mov
add
ljmp
mov
shrl
mov
das
mov
jmp
add
dec
add
pop
std
mov
xchg
in
xchg
sbb
shlb
sub
or
and
push
out
adc
pop
push
xchg
popa
cmp
push
xchg
push
es
mov
jecxz
jnp
and
std
adc
std
ja
adc
inc
fsub
enter
iret
cltd
push
inc
xchg
pop
cmp
add
xor
popl
or
sub
cld
cltd
fimuls
adc
mov
mov
cmp
mov
xchg
mov
mov
mov
or
adc
lods
es
sti
or
inc
enter
and
outsb
mov
ror
dec
cs
cmc
ss
inc
adc
sti
add
sbb
add
xchg
out
push
das
jmp
mov
mov
roll
insb
jmp
mov
into
out
loop
imull
fs
add
movb
sbb
loop
shlb
mov
xor
addl
mov
movsl
out
enter
popa
inc
cli
push
push
in
sub
imul
scas
test
mov
sbbb
mov
xchg
into
imul
enter
incb
adc
cmp
gs
adc
sub
sub
and
xor
pushf
jp
jecxz
mov
outsl
in
stc
sub
cmc
sbb
scas
jmp
xor
jns
xchg
imul
xor
sbb
xchg
xor
mov
aaa
jae
insl
inc
popf
xor
cs
jle
shll
push
xlat
rcrl
je
pop
aaa
ds
lcall
pop
mov
push
mov
mull
push
cs
imul
push
inc
pop
mov
fdivr
and
lea
lret
adcl
les
add
aaa
add
sahf
xchg
and
adc
in
imul
lahf
inc
mov
lret
pusha
jbe
ret
leave
fistl
int3
or
cmp
ret
out
jecxz
movsl
jecxz
fisttps
xchg
jecxz
jno
or
pop
test
insb
mov
repz
imul
je
lods
sbb
push
push
sbb
lcall
rclb
sbb
ss
push
stc
cs
imul
mov
mov
sub
test
jp
push
fsubs
lcall
lds
pusha
sbb
or
sub
arpl
mov
pop
mov
sub
push
pop
hlt
leave
push
mov
xchg
cwtl
sub
test
add
dec
js
bswap
dec
addb
mov
loopne
adc
movsl
mov
xor
in
push
jnp
gs
pop
rcl
sub
mov
test
shrb
jns
pusha
push
xchg
pop
sub
movsb
lods
sub
adc
mov
dec
cmpsb
sarl
mov
mov
test
xor
aad
xchg
dec
clc
leave
adc
push
push
dec
shrl
and
or
repz
fsubrl
les
inc
fisubl
aas
shll
add
cmp
xchg
mov
out
bound
testl
cmp
mov
mov
push
jo
mov
mov
dec
lcall
mov
or
cmp
in
dec
mov
sub
icebp
std
inc
daa
in
cmpl
repz
pushf
xchg
das
lret
jl
adc
andl
xor
dec
das
imul
cmp
data16
aam
ja
mov
inc
or
xchg
sub
iret
push
push
jge
cmp
sbb
sub
nop
lret
mov
push
mov
and
in
jne
aaa
pop
outsl
mov
ret
outsl
mov
sub
xor
loop
insl
mov
add
pop
leave
mov
orl
pushf
and
push
inc
outsl
int3
add
sbb
inc
jb
jns
mov
inc
and
push
jne
rcrb
insl
data16
mov
test
mov
sub
sbb
outsb
jb
inc
loope
repnz
in
mov
call
push
sbbb
or
fsubs
repnz
jbe
xchg
mov
xor
inc
dec
pop
cmpsl
fnsave
or
jno
add
mov
xchg
daa
mov
out
xor
cli
mov
rorb
mov
dec
or
cs
sbb
or
int
push
and
mov
test
push
pop
les
mov
outsb
push
lret
stos
jb
mov
or
and
fnstsw
push
jne
mov
out
dec
pop
push
adc
lcall
mov
jae
xchg
or
sub
int
inc
stc
cwtl
pop
fwait
pop
push
sub
pop
ficoml
popf
dec
cmpsb
and
imul
adc
imul
mov
scas
xchg
xchg
mov
hlt
shrb
cmp
mov
mov
into
subl
cwtl
scas
mov
adc
push
mov
inc
mov
outsl
cld
lds
test
into
test
fsubrs
lds
shrb
jg
xor
fbld
jp
and
aam
jo
clc
cmp
cmp
in
and
mov
mov
xchg
shll
dec
js
cld
shrb
pop
aad
sub
loop
into
jno
mov
xor
push
inc
dec
pop
daa
fs
mov
imul
add
inc
addr16
rcrb
hlt
mov
xor
lret
cld
pop
mov
ret
cwtl
cmp
adc
and
and
and
adc
jnp
dec
mov
cli
enter
mov
adc
ss
pop
sub
test
mov
push
xor
mov
iret
inc
add
xchg
push
dec
fwait
sbbb
push
pop
mov
jo
cmp
pop
into
pop
add
call
aaa
in
fmull
or
stos
cld
add
in
js
cld
lds
insl
mov
iret
mov
insb
sbb
insb
ds
ficoml
ret
stos
xor
mov
inc
in
add
pushf
add
pop
and
out
add
pop
or
jg
xchg
xor
mov
clc
mov
jbe
inc
arpl
pushf
mov
push
push
or
out
xor
rcll
cli
add
inc
dec
arpl
mov
into
int3
mov
dec
daa
sbb
inc
jne
cmpsl
cmp
or
into
xor
movsb
sar
dec
icebp
popa
pop
mov
cmp
stos
dec
add
push
add
xchg
in
leave
es
addr16
es
ret
popf
shl
jl
dec
gs
lock
sub
add
sub
add
push
repnz
leave
pop
push
add
scas
aaa
and
and
daa
leave
mov
inc
pop
mov
mov
mov
mov
dec
pop
push
pop
jg
int
inc
pop
mov
cmpb
adc
mov
sub
cmp
in
cmpsl
movsb
add
clc
rclb
sti
cmp
out
insl
roll
mov
cs
nop
dec
adc
xor
mov
inc
push
insl
adc
popf
mov
out
outsl
je
loopne
loop
mov
nop
sti
jmp
and
test
gs
imul
jp
leave
lods
ja
shl
sbb
add
lahf
aam
fcoms
xor
inc
sub
push
dec
movsb
cmpsb
xchg
or
mov
loop
call
jno
stos
add
iret
loope
lret
shlb
push
bound
jne
std
xchg
add
dec
mov
das
push
daa
jle
jle
cmpsb
outsb
sub
mov
dec
sub
inc
mov
or
cmp
in
movsb
jge
bound
stos
aam
jb
push
shlb
ja
cmp
inc
sbb
pop
in
lahf
pop
xchg
cld
repnz
inc
test
je
test
push
xchg
inc
daa
xor
jbe
pop
inc
inc
add
pop
jecxz
pop
in
lret
inc
aam
lock
pop
or
xlat
ja
fisubrs
lret
mov
push
repz
sar
pop
cmc
or
cmp
lret
dec
or
insb
popa
xchg
pop
or
pop
mov
insb
xor
sbb
or
cmp
mov
mov
mov
test
es
jmp
test
repz
les
fnsave
test
push
imul
mov
sbb
push
push
sbb
dec
inc
pop
or
cmp
or
sti
and
and
mov
mov
repz
imul
jno
jmp
fadd
je
mov
and
in
rcr
cmpsb
pop
scas
push
jge
pop
pop
mov
pop
cmp
or
aam
sbb
jno
xchg
test
sub
outsl
push
push
pop
mov
loope
lods
imul
sub
mov
xchg
mov
mov
enter
adcb
dec
ja
mov
stos
pop
ljmp
test
aas
repnz
out
mov
cwtl
lock
push
lcall
popf
pusha
pushf
icebp
rol
mov
mov
cld
idivl
push
out
arpl
cmp
xchg
stos
fbld
or
push
out
add
in
xchg
adc
std
push
andb
or
bound
adc
mov
xchg
mov
lret
pusha
jb
jmp
xchg
dec
pop
push
adcb
push
mov
rclb
inc
clc
stos
les
inc
adc
cmp
inc
add
or
inc
dec
and
outsl
mov
neg
sbb
mov
mov
std
lods
insb
mov
leave
xchg
inc
bound
jae
test
sti
sub
cs
pop
repnz
int
jnp
pop
adc
pop
pop
push
nop
imul
ljmp
inc
pop
add
add
mov
loope
xchg
sub
lahf
xor
and
pusha
sub
bound
sub
jecxz
add
add
aas
data16
push
int
or
sub
hlt
inc
adc
inc
outsb
test
jns
inc
or
ret
das
mov
loopne
icebp
cmp
outsb
test
push
rorl
add
dec
jno
or
xchg
pop
repnz
imul
fidivl
scas
cmpsb
gs
daa
mov
in
js
jns
jno
cmp
jle
lock
cmp
jns
adc
push
pop
adc
mov
imul
jge
test
popw
pop
inc
pop
setnp
ds
jb
sbb
test
int3
and
jns
pop
mov
add
clc
lea
push
imul
cli
call
ljmp
jge
lcall
jp
and
dec
mov
repz
xchg
add
push
ret
dec
mov
mov
pop
fs
cs
mov
jne
daa
insb
fs
into
fbld
sub
inc
inc
js
neg
and
pop
roll
mov
cmp
mov
mov
push
outsl
orb
cmp
sub
in
push
stos
pop
ret
mov
adc
jbe
rcr
sbb
ficomps
pop
stos
sbb
sbb
pop
daa
push
aaa
and
and
out
data16
sbb
dec
xchg
pop
jno
inc
add
sbb
push
adc
imul
call
cmp
bound
cld
xchg
mov
jnp
cmp
das
lds
lcall
sbb
fidivs
aam
imul
dec
imul
pop
xchg
pusha
lret
in
sti
xor
movsl
dec
mov
inc
scas
push
cld
insl
clc
in
push
sub
mov
cmp
sahf
stos
outsb
lret
mov
mov
shlb
lods
push
xor
test
sbb
in
dec
aad
or
aaa
or
mov
push
cs
inc
jge
cmc
loopne
inc
cmpsl
fs
cld
mov
adcl
call
cmp
mov
add
dec
xlat
xorb
fcomip
lret
sahf
js
stos
pop
pop
push
inc
cmp
mov
jecxz
pop
pop
adc
or
sti
cmp
dec
sbb
sbb
cs
dec
push
mov
mov
cmp
jne
pop
inc
lods
pushf
fdivr
call
sbb
push
fbld
inc
and
dec
dec
or
mov
shll
sar
mov
mov
in
call
jecxz
xchg
sbb
jnp
push
ds
mov
jle
inc
adc
mov
dec
inc
sub
sarb
not
mov
mov
jb
pop
popl
cmp
or
lods
sarb
xor
mov
sbb
push
adc
pop
inc
cli
xchg
out
mov
inc
lock
mov
daa
sub
mov
call
xor
lds
xchg
rorl
jno
test
push
scas
sahf
popa
mov
adc
test
mov
gs
inc
adc
imul
loopne
or
psrlq
ret
lcall
shl
adc
sbb
xchg
data16
aad
pop
pop
adc
imul
push
pop
push
xchg
std
pop
push
in
loopne
cmp
xor
sbb
push
inc
cmpsb
fwait
movsl
stc
test
and
adc
test
add
cli
or
jge
cmp
mov
fdivl
inc
pop
xor
add
pop
pop
leave
sar
push
push
sar
jbe
push
popf
mov
mov
jb
push
sbb
mov
xor
cwtl
fwait
dec
and
sbb
jmp
fdivs
sahf
rcrb
mov
adc
mov
sti
inc
xchg
ljmp
pop
fscale
inc
shr
callw
adc
aad
sub
dec
and
sub
push
push
fmuls
mov
jp
push
xlat
mov
mov
jo
fstl
adc
sub
in
sbb
addr16
lret
ret
pop
pop
push
jbe
push
aad
pop
push
insl
push
cmp
fisttpll
fwait
cmp
add
pop
repz
jecxz
push
cli
imul
ret
xor
setno
pop
notl
mov
sarl
pop
test
inc
mov
sti
imul
mov
addl
or
movsb
movsb
std
jns
in
xor
outsl
lods
adc
aad
outsb
rolb
fcmovnu
lret
popf
icebp
out
loop
dec
xchg
das
inc
mov
adc
xor
aad
jb
call
and
jbe
and
and
add
sbb
in
loopne
pop
in
cmp
shrl
daa
push
cmp
idiv
xor
dec
mov
clc
push
loopne
sti
fstpt
shrb
roll
or
mov
jns
mov
mov
call
mov
cmp
sahf
cwtl
push
pop
xchg
imul
sar
stos
imul
mov
xlat
pop
pop
pop
and
inc
jmp
sbb
add
adc
fsts
add
cli
xchg
popa
xor
das
sub
ficomps
fwait
add
data16
in
add
insl
rclb
xchg
jne
sbb
mov
pop
popa
lcall
pop
sarl
jb
arpl
inc
imul
pop
aad
negb
ret
popa
add
push
pop
mov
bound
mov
mov
je
push
pusha
pop
push
sbb
sbb
repnz
mov
mov
repz
jle
lcall
and
pop
jns
push
pop
sub
xchg
mov
mov
stc
push
out
push
adc
insl
insl
inc
adc
mov
xchg
pop
pop
divl
mov
inc
push
into
push
ret
cmp
dec
sbb
ds
fildl
xchg
xchg
popa
xor
mov
lahf
sahf
xchg
iret
lret
sub
sub
or
rcrb
lahf
stos
rcrl
inc
pop
andl
or
jmp
js
ffreep
mov
dec
mov
icebp
xchg
test
loop
addr16
inc
iret
pop
into
mov
dec
mov
jmp
call
pop
dec
imul
add
out
das
lret
shr
ret
adc
and
outsl
movsl
sub
dec
rclb
mov
jns
pop
arpl
add
pop
scas
bound
or
pop
jne
call
inc
xchg
decl
popf
xchg
cmp
inc
xchg
ret
xchg
xor
push
cld
lea
jecxz
mov
mov
mov
cmp
add
ret
jmp
mov
shrl
loop
test
clc
lods
adc
jecxz
dec
and
add
ss
out
cmp
lea
sar
ja
adc
mov
jnp
jb
movsb
loope
sbb
sub
nop
push
sub
mov
popf
lret
hlt
pop
loope
aas
stc
mov
sbb
cltd
lods
and
and
repz
adc
pop
xchg
mov
push
sub
shll
jge
cmp
lock
mov
pop
push
daa
adc
addr16
sub
cmpl
inc
dec
jmp
dec
or
lret
sbb
jmp
pop
push
and
repnz
shll
push
stc
or
icebp
sub
xchg
rorb
lret
loop
xchg
xor
mov
jl
jne
xchg
and
pop
inc
fistps
popf
cmp
xor
hlt
mov
mov
sub
sub
sub
test
daa
pop
dec
sti
int
lds
aad
fidivl
fcmovnb
push
sbb
xchg
mov
popa
or
subb
fidivrs
pop
cmp
ret
xor
in
sub
lret
inc
fs
xor
stc
les
xor
mov
inc
adc
or
mov
insb
lret
xchg
push
push
and
and
call
mov
shll
into
adc
inc
dec
adc
push
fs
xchg
jmp
push
and
inc
or
test
nop
sbb
js
lret
push
pop
and
jbe
or
pop
adcb
test
addr16
mov
cli
aad
ret
ret
sub
push
xorl
inc
mov
pop
lret
add
cmp
ss
mov
jb
mov
lock
movsb
cli
sbb
daa
sub
add
rclb
cld
mov
cmp
pop
ret
imul
dec
mov
dec
mov
fcomip
or
test
rcrl
bound
rcrb
daa
movsb
insb
mov
in
cs
mov
push
in
push
lahf
sahf
sub
fldz
push
xchg
dec
jae
leave
jno
mov
int3
in
hlt
sub
cmp
sub
je
cmpsb
ja
pop
cld
mov
rcll
sub
int
arpl
sar
or
lods
mov
xor
push
jns
or
shlb
fdivrp
sbb
cmp
cmp
je
push
xchg
mov
xor
mov
jnp
call
aad
loope
xchg
imulb
jno
ljmp
mov
pusha
ror
inc
fxch
loope
mov
rolb
hlt
adc
pop
cld
jbe
mov
sti
ja
cli
or
jl
mov
fnstcw
int3
lock
inc
fs
pop
mov
sti
cli
and
adc
dec
int
sahf
je
and
push
mov
adc
jns
sub
call
hlt
aaa
js
popf
std
add
push
xorb
cmc
daa
bound
mov
inc
in
sarb
pop
popa
data16
test
add
cmp
cmp
pop
les
test
inc
sahf
repnz
inc
popa
sbb
cmpsl
or
rcrl
out
out
arpl
data16
fscale
fisubl
dec
mov
test
xchg
int3
sbb
lret
lret
clc
pop
inc
sbb
jl
inc
mov
mov
xor
aas
pop
scas
out
repnz
inc
add
enter
xchg
mov
jl
rcrl
push
shrb
push
fstps
out
pop
push
in
cli
add
add
jle
adc
inc
mov
in
mov
jns
or
xlat
inc
xor
mov
ds
xchg
mov
dec
pushf
cmp
push
fs
xorl
xchg
push
mov
or
movsb
adc
mov
mov
adc
push
lcall
add
cltd
push
das
lcall
pop
mov
mov
xchg
repnz
sbb
and
in
and
std
xchg
in
ffreep
decb
mov
sub
xchg
add
fcomps
in
sub
test
test
inc
xorb
dec
loop
and
scas
push
xchg
and
sub
dec
adc
repz
sub
mov
inc
imul
mov
lea
xchg
mov
ja
mov
jg
lret
push
pop
mov
out
push
dec
dec
mov
mov
dec
rcl
fldlg2
xchg
pop
fwait
pop
xchg
mov
test
ja
xchg
icebp
out
add
js
sbb
adc
subl
mov
xor
xor
push
ja
sbb
mov
mov
jbe
pop
sub
daa
test
or
shrb
push
adc
lret
push
push
and
aam
fimull
xor
sub
sbb
xchg
mov
xchg
xchg
movsl
lods
dec
lds
and
cmp
cmpsb
std
xchg
fwait
jae
mov
sub
mov
sbb
scas
dec
dec
cmp
xor
pusha
mov
lret
aaa
mov
lcall
pop
mov
jecxz
dec
jmp
adc
mov
out
pop
cmp
xchg
iret
loope
sahf
ja
lcall
mov
outsb
pop
xchg
mov
cmp
adc
adc
cmp
mov
fimull
jle
lea
ret
test
lods
cmpsl
cmp
iret
imul
pop
sub
mov
mov
push
adcb
dec
in
pop
or
or
icebp
mov
adc
out
es
adc
das
cmp
pop
out
ret
cmpl
fnstenv
inc
pop
test
fldt
mov
dec
std
enter
push
mov
sub
fs
xor
mov
xor
je
mov
loop
je
lretw
sbb
mov
loop
mov
mov
pusha
stos
pop
dec
sbb
std
outsl
sar
loope
push
test
cltd
mov
mov
fcomps
xchg
xchg
lds
shrl
dec
sub
or
shrb
mov
inc
sahf
mov
mov
cmp
cwtl
mov
adcb
add
inc
and
shrb
std
lea
ss
mov
lock
sti
movsl
in
push
sub
dec
lahf
sbb
loope
mov
push
test
mov
adc
iret
cwtl
fst
xorl
fldpi
jmp
test
xor
xor
ss
ja
jb
adc
mov
sbb
sub
pop
test
jg
jno
inc
dec
jbe
xchg
outsl
xchg
faddl
aaa
inc
lcall
popf
and
int
ret
xchg
pushf
jge
imul
and
incl
jbe
aam
ss
mov
clc
rorb
pop
scas
sub
sbb
unpckhps
sub
and
insl
or
std
sar
xor
mov
pop
xchg
int3
mov
jb
pop
leave
icebp
jg
stos
aad
jl
imul
nop
insl
mov
cmpsb
dec
inc
scas
dec
cltd
sub
push
push
es
fisubs
jb
stos
and
lods
mov
sbb
mov
pop
hlt
jno,pt
in
inc
dec
hlt
lds
xor
ret
inc
sbb
add
cmpsl
loop
mov
lcall
adc
mov
roll
rcrl
in
cmp
xor
adc
adc
xor
scas
shlb
sbb
mov
aam
xchg
shrl
push
add
dec
shlb
shlb
popf
iret
dec
jle
out
ja
outsb
pop
cmp
fwait
add
dec
sbb
mov
dec
shr
xchg
adcl
cmc
fs
pop
nop
imul
mov
outsl
pop
out
xchg
stos
stos
mov
cltd
movsl
adc
mov
popf
loope
and
adc
pusha
mov
mov
repnz
xchg
sar
int
out
cmp
repz
mov
jp
mov
scas
pop
mov
adc
fdivrl
popf
inc
movsl
jne
cmpb
xchg
or
add
in
mov
mov
mov
fnstenv
cmpsl
jmp
pop
pop
mov
iret
mov
or
sbb
popa
roll
idiv
or
cmp
and
pop
cltd
xor
sahf
add
push
and
xchg
xchg
fwait
ret
xor
daa
mov
xchg
push
ret
enter
add
ss
cmp
cld
enter
fcmovnu
sbb
shll
mov
push
jmp
test
pusha
mov
inc
xchg
test
iret
jecxz
jmp
cmpsb
xor
loope
jge
cmp
enter
cld
jge
jecxz
leave
push
popa
lock
popf
xchg
ret
mov
in
pop
jl
xchg
icebp
jo
pop
jp
insl
push
adc
insl
jnp
int
repz
stos
add
outsb
daa
dec
push
jo
mov
sbb
aam
mov
test
cmp
adcl
insl
stos
test
lock
add
dec
stos
ret
mov
push
adc
jmp
stc
pop
mov
sub
les
mov
lret
xchg
cmc
mov
lcall
mov
push
shrl
mov
cmc
push
xchg
scas
push
clc
enter
jp
pushf
ljmp
sub
jg
fisttpll
sahf
ret
mov
xchg
aaa
dec
inc
cmp
pop
mov
mov
jnp,pn
dec
int3
sti
cmp
or
mov
fbstp
mov
pop
leave
loop
fisubs
jl
mov
inc
inc
cld
inc
dec
cmp
hlt
cmp
mov
es
jecxz
add
mov
mov
hlt
mov
mov
outsb
add
loopne
mov
in
call
sub
daa
fcomps
in
fld
mov
dec
push
dec
add
sti
cmp
int3
icebp
or
push
testb
mov
pusha
sbb
pushf
pop
mov
jae
cs
pop
sub
lcall
test
jmp
sbb
dec
xchg
sbb
jle
xor
movsb
xchg
push
sub
jg
sti
sub
daa
pushf
lret
jnp
push
pop
push
or
and
xchg
pop
xor
inc
icebp
jmp
mov
adc
out
std
jnp
add
dec
sub
lret
mov
aas
mov
mov
xchg
cmp
repz
cmp
ret
add
movsbl
jge
pop
fs
jb
aas
sub
sub
mov
and
stc
and
outsl
xchg
sbb
xor
adc
cwtl
jle
add
aam
lock
mov
test
imul
mov
jno
inc
dec
pop
dec
addr16
jmp
pop
add
sbbb
fcmovnu
jle
sub
adc
lea
mov
rcl
leave
and
pop
mov
inc
hlt
scas
aam
inc
and
ret
push
loope
nop
push
or
jae
pop
fdivrs
cmc
pop
inc
notl
dec
add
cld
cmp
fwait
es
ret
not
jbe
ss
sbb
sbb
or
adc
ljmp
jmp
fdivrl
jge
fisttpl
jmp
aas
add
pusha
lcall
sub
add
xor
fstl
dec
cld
xlat
inc
aam
jg
imul
push
in
jnp
shlb
sub
mov
pop
mov
or
popa
mov
mov
mov
mov
add
int
or
loopne
sub
xchg
mov
lock
jnp
cmc
dec
mov
es
mov
and
push
imul
inc
gs
out
xchg
adc
cmpsb
xor
sbb
jle
rclb
cmp
stos
mov
and
lods
sub
outsb
mov
pop
add
stos
mov
int3
iret
xchg
sbb
sub
inc
xor
test
inc
mov
arpl
sti
add
in
lods
xor
pusha
es
jg
dec
cmp
leave
lds
test
jl
nop
jle
sahf
lods
sub
fnsave
add
popf
cmp
mov
in
cmpb
and
shr
pusha
leave
sub
daa
ficoms
dec
enter
add
test
jne
or
outsl
test
imul
adc
out
xchg
jo
fucomp
andl
dec
jg
mov
xor
jl
cld
push
add
or
out
push
mov
adc
and
lods
or
shl
aas
add
pop
es
call
rorl
stc
mov
xchg
sbb
fnstsw
dec
adc
scas
sbb
inc
cli
dec
out
pop
loopne
shrb
mov
xchg
pop
nop
in
sub
test
ss
pop
add
pop
aad
int3
mov
out
pusha
shrl
ret
push
andb
cltd
loopne
fwait
pop
and
fildll
xchg
dec
xchg
inc
inc
adc
test
mov
inc
ucomiss
inc
jge
aas
lock
add
popf
enter
insl
pop
push
imul
rcrl
andb
pop
repz
outsb
int
mov
je
rolb
pop
subb
xor
inc
imul
sbb
loope
stos
fstps
testb
pop
xlat
iret
and
aam
rcl
call
pmaddwd
or
data16
dec
cli
mov
shll
push
rorl
dec
xor
orl
jp
aas
jl
fldcw
les
mov
dec
add
dec
sub
jne
adc
xor
dec
int
lea
subl
cs
lock
mov
cli
or
test
or
inc
daa
xor
xor
loopne
jle
enter
mov
aad
mov
dec
mov
out
mov
stos
mov
sbb
jp
pop
sti
xchg
in
mov
sbb
popa
mov
in
pop
arpl
test
xchg
leave
in
dec
sbb
pop
mov
pushf
cmc
sti
mov
cmp
jno
sbb
mov
or
sbb
inc
outsb
js
and
inc
pop
push
push
cltd
arpl
out
cmp
mov
and
mov
shrl
mov
and
sbb
lods
and
and
xchg
rcrb
mov
lahf
xchg
mov
cld
insl
cmp
not
mov
ja
pop
fcom
daa
pop
repnz
mov
adc
mov
or
rcrb
sbb
pop
daa
fsubs
xchg
ficoml
mov
mov
outsb
xchg
ret
cmp
push
push
inc
dec
hlt
mov
xchg
rorb
lahf
inc
xor
sub
push
aad
int
std
shll
xor
lret
in
add
iret
cmp
outsb
and
cli
mov
aam
add
das
fldl
lods
inc
xchg
stc
push
les
cmpsl
js
cmpsb
pop
jle
subb
iret
inc
xchg
scas
lods
loopne
ja
jnp
inc
jle
jno
mov
push
mov
sbb
sub
js
out
lea
pop
pop
pop
push
or
fstpl
ret
pop
pop
scas
subl
out
mov
jbe
jecxz
sub
mov
ret
psubsw
xor
test
sbbl
add
pop
add
les
mov
outsb
pushf
xor
ret
push
mov
int
mov
inc
dec
inc
test
sub
aam
loope
mov
cmp
sbb
std
clc
enter
loop
lock
bound
pop
xchg
cmpsl
pop
out
push
pop
fchs
out
shlb
rcll
in
or
test
dec
mov
lret
ja
pop
sbb
int
dec
or
jl
push
push
inc
in
mov
sub
int
pop
xchg
sub
add
add
sbb
push
jge
push
mov
pop
shlb
out
adc
mov
popa
pop
inc
addr16
xor
adc
aad
pusha
dec
mov
jp
ret
je
lds
int
pop
int3
int3
and
pop
mov
cmp
rcrb
stc
popa
adc
xor
hlt
sbb
out
cwtl
xor
or
push
fstpt
xchg
xchg
push
cmp
sub
lock
lds
cltd
push
push
sbb
out
scas
dec
mov
lahf
inc
push
popf
mov
mov
pop
mov
xor
insb
sbb
ljmp
xor
push
cmpsb
and
jg
sbbl
out
xchg
inc
hlt
mov
mov
jmp
mov
ret
xor
xchg
outsl
mov
aam
in
imul
arpl
rorb
push
sub
fimuls
lods
and
mov
mov
cltd
push
xor
sbb
inc
xchg
orb
adc
dec
lock
adc
xchg
popa
cmpsl
xchg
mov
sub
mov
subb
jg
insb
xorb
repz
sbbb
sbb
push
mov
sbb
inc
sub
cltd
push
and
call
into
sbb
popf
push
rep
lock
lahf
scas
mov
inc
popf
mov
aad
subb
and
dec
push
fwait
popa
cwtl
jle
fsubrs
into
movsb
adc
dec
add
out
negb
dec
in
rcrb
mov
in
inc
js
hlt
cld
sbb
mov
leave
dec
cmp
fistpl
mov
and
mov
ret
mov
pop
je
mov
aas
movsl
icebp
xlat
cwtl
push
pop
jne
jg
pop
xchg
stc
mov
mov
sub
mov
lea
xchg
ds
sub
icebp
das
aaa
xor
mov
and
in
aam
lock
js
jnp
js
push
gs
nop
lea
sub
daa
mov
les
cmc
jg
mov
daa
mov
ss
mov
outsl
xor
mov
cmc
mov
lahf
xorb
rcll
movsl
pop
gs
cs
cmpsl
out
cmp
cmpsl
roll
sbb
lahf
int
push
mov
out
adc
xor
adc
or
imul
shrl
std
mov
xchg
ljmp
push
stos
nop
jecxz
out
lods
xor
jmp
add
xor
sti
call
or
or
roll
fisttps
sbb
xlat
insb
and
inc
aaa
add
mov
rcrb
aaa
mov
add
data16
xchg
and
sarl
or
mov
in
mov
nop
addr16
leave
aaa
mov
andl
leave
pop
push
dec
mov
jbe
cwtl
adc
xlat
into
mov
jg
lea
add
push
xchg
outsl
rcll
es
dec
daa
mov
je
sbb
lcall
cmpsb
in
popf
fistpl
mov
rcl
jnp
lret
adc
pop
cmp
cli
push
sub
mov
pop
mov
cmp
scas
cmp
mov
sub
push
je
mov
cmpsl
push
rclb
scas
lea
xor
xchg
pop
lret
sub
sub
pop
mov
out
in
mov
shl
daa
data16
imul
repz
rcll
dec
fisttpl
xchg
xor
ljmp
hlt
sub
cmp
sbb
sbb
daa
jge
test
lcall
sahf
xor
mov
xchg
std
pushf
or
out
push
inc
mov
and
mov
or
addr16
mov
js
fsubrs
mov
das
test
pop
sub
push
cmp
mov
jmp
fstl
testl
mov
sbb
add
test
mov
mov
movb
mov
loop
lods
pusha
popa
sbb
sahf
pop
mov
inc
loopne
xor
insb
jbe
sub
pop
jno
mov
cmp
mov
push
adc
jl
movsb
cmp
sbb
cmp
cld
out
pop
lcall
idivl
push
sub
push
lcall
into
test
mov
test
mov
in
stos
gs
adc
mov
mov
aad
in
cmc
jne
mov
push
mov
outsb
popf
lods
insb
xlat
xchg
fcoms
stos
popa
outsl
pop
test
imul
imul
pusha
mov
stos
cltd
sub
insl
dec
or
or
pusha
stc
ficoml
sbbb
scas
and
adc
xchg
sti
push
movsb
adc
mov
in
xor
sub
sbb
push
jo
mov
pop
sbb
sub
pop
sbb
out
jge
cmpb
add
repz
dec
jae
cltd
and
xor
loopne
fildll
or
adc
pop
icebp
jl
mov
mov
mov
lods
mov
test
dec
out
push
push
fwait
jb
mov
sbb
xlat
fnstcw
jle
fcompl
pushf
sbb
fnstcw
aad
xor
test
mov
adc
and
xchg
or
cmp
adc
mov
add
out
fs
rcrb
push
jno
sbbb
mov
xchg
loop
pop
push
pop
or
out
mov
andb
mov
gs
mov
cmp
aaa
lods
imul
loop
inc
cmp
xor
test
sbb
addr16
lret
dec
mov
mov
mov
xchg
in
adc
es
je
mov
xor
imul
mov
divl
fcoml
push
push
inc
push
push
push
rcl
mov
jle
xchg
iret
mov
mov
sbb
push
sbb
push
in
aam
fdivs
push
cmp
adc
add
std
cmp
fwait
mov
xchg
mov
loopne
adc
pop
lahf
out
inc
cld
andb
aam
cmp
insl
hlt
dec
pop
lock
lret
div
int3
std
sub
push
inc
or
xor
mov
and
xchg
xor
xchg
cli
jae
cltd
xor
cltd
lea
loope
scas
xor
xchg
cmp
fistpl
pop
lret
jae
xor
insl
dec
adc
jae
les
xor
push
scas
out
iret
popa
std
and
lcall
adc
inc
andps
aaa
in
call
addr16
jg
jg
mov
dec
cmp
ja
insl
or
add
jge
fstl
movsb
xor
mov
push
imul
or
inc
lock
mov
loopne
xor
iret
cmpsb
test
push
pop
cmpsb
or
rorb
cmp
ret
sub
pop
cmpsl
sbb
dec
inc
neg
daa
pushf
dec
sub
sbb
sbb
rolb
sub
and
fs
dec
femms
out
or
xchg
arpl
mov
nop
mov
dec
sbb
into
sbb
cs
xor
or
inc
inc
cli
dec
lods
dec
shlb
inc
xchg
shlb
cltd
loopne
pop
int3
jge
xchg
outsb
fstp
pop
push
lcall
int
lea
xor
sub
out
imull
push
add
mov
pop
cmp
sti
dec
mov
pop
movb
pop
pop
out
jl
nop
or
ret
or
stos
xor
jb
shl
rcr
adc
mov
pop
sub
jmp
add
xor
insb
out
sub
xor
jp
roll
adc
xorl
in
mov
mov
cmp
dec
mov
nop
or
xor
mov
dec
adc
repz
mov
mov
sub
aam
and
xor
iret
sub
cmc
push
sbb
push
ljmp
arpl
add
out
lahf
nop
in
inc
sub
jae
push
pop
lock
push
add
push
divl
mov
and
fbstp
adc
rcrb
dec
es
outsl
gs
repnz
repz
ror
and
or
push
lds
call
mov
cwtl
aam
sbb
push
xchg
ds
sub
scas
rclb
in
subl
fs
mov
push
popa
out
mov
jp
sbb
cmp
cmp
aas
fidivrl
sbb
jp
test
mov
sbb
or
fwait
mov
stc
bound
or
ficoml
movsb
inc
push
pop
in
inc
arpl
dec
sub
xchg
mov
mov
es
inc
cwtl
dec
pop
cs
add
push
pop
or
sbb
push
cmp
in
pop
or
jp
into
cmp
shr
sbb
je
or
pop
arpl
popl
inc
testl
shlb
gs
pop
lods
loop
in
subb
push
in
adc
loope
push
hlt
cmp
pop
jg
jp
in
inc
dec
decb
sub
adcb
mov
cmp
xorb
fldcw
ds
mov
and
hlt
mov
mov
adc
jg
push
inc
cmp
ud0
jg
mov
fildl
add
testl
pop
mov
loope
cmp
mov
or
jmp
mov
out
lods
inc
inc
or
stos
xor
es
adc
inc
dec
or
cmp
cmp
add
xor
sbb
enter
ror
or
jne
adc
dec
sbb
mov
ja
pop
push
sbb
cld
adc
loop
add
mov
push
and
iret
notb
pusha
jg
leave
inc
cmp
cmp
test
es
movsl
jge
in
pop
jge
pop
aam
popa
leave
mov
into
test
in
sub
mov
gs
mov
js
jnp
push
cmpsb
xor
test
push
lds
or
mov
and
sbb
sarl
test
dec
mov
sub
test
test
mov
or
sub
sub
push
inc
add
mov
mov
stc
stos
mov
pushf
js
lock
int3
jns
rcrb
jge
mov
iret
stos
sarb
lahf
inc
ss
push
mov
push
sbb
xor
cmp
loope
es
test
add
fdiv
jge
xchg
cmp
js
cmp
enter
sub
fldl
mov
leave
data16
mov
inc
push
pop
xchg
mov
sbb
sbb
jo
mov
test
loope
fnstcw
adc
dec
sbb
loope
outsb
mov
and
sub
inc
sarb
mov
dec
inc
fisubrs
mov
sbb
divl
outsb
repnz
pushf
mov
loope
xchg
inc
jl
add
adc
mov
test
ficomps
xor
push
icebp
pop
lock
jno
das
mov
sub
push
enter
adc
jl
cmpsl
or
test
aaa
adc
xor
lcall
dec
test
jns
out
imul
sbb
and
xor
push
sbb
mov
cmpsb
aaa
push
les
xchg
fwait
cmc
adc
mov
mov
sahf
popa
cli
insl
addb
mov
and
je
dec
ret
or
cmp
mov
lcall
jnp
enter
jmp
push
in
pop
popf
add
dec
add
inc
bound
fadds
in
movsb
testb
jno
rorb
mov
push
pop
mov
push
arpl
adc
popa
inc
mov
pop
push
stos
lret
add
ljmp
ficoms
test
sub
mov
push
insb
push
inc
sti
mov
insb
fisttps
popf
stc
mov
mov
cmpsb
das
adc
xchg
inc
ss
daa
add
fimuls
adc
inc
push
xorb
aam
inc
insl
xchg
pusha
jb
inc
mov
out
lret
push
int
loope
aaa
ss
xchg
inc
and
inc
icebp
test
cmp
pushf
lcall
pop
rolb
xor
mov
or
mov
xor
lret
fsubrl
mov
mov
sub
je
cmp
or
idivl
test
jno
addr16
enter
lret
fwait
and
clc
loop
adc
mov
push
sbb
jbe
pop
inc
mov
xor
imul
out
movsl
gs
mov
pop
push
push
sti
fbstp
gs
les
sub
push
les
xchg
xor
pop
pop
sub
test
mov
bound
sbbb
push
mov
testb
stos
and
add
lock
pop
inc
xchg
xchg
pop
loop
push
adc
adc
fimull
fimull
push
cwtl
ljmp
js
fwait
jge
push
jns
push
or
mov
cli
sub
or
js
pop
add
dec
das
inc
adc
jle,pt
aaa
mov
mov
or
inc
flds
andb
cli
pop
dec
out
and
mov
xchg
cmp
pop
push
xor
push
call
loopne
cmp
je
cmp
je
push
cmp
lret
dec
mov
js
pushf
mov
popf
enter
add
pop
lret
les
adc
sti
inc
inc
cmp
push
rol
popa
jne
jmp
add
xorl
out
mov
xchg
pop
test
jns
dec
adc
in
cmp
repnz
jne
sub
loope
outsb
or
push
or
sub
gs
in
clc
push
int3
rcr
outsl
mov
dec
call
fisubrl
lods
xchg
xor
iret
sti
xchg
adc
adc
sar
cltd
xor
adc
popf
decb
lods
push
mov
outsl
and
mov
mov
test
pop
cmpsb
mov
pusha
mov
lea
std
lcall
jle
fdivl
fisttpll
xchg
js
cs
scas
dec
gs
lahf
dec
cmp
add
mov
negb
int3
hlt
inc
jns
dec
xor
shrl
into
sti
cltd
push
cltd
es
decl
push
lea
cltd
subb
fistps
or
out
ret
cmp
inc
dec
sbb
arpl
cli
mov
and
out
inc
fnstsw
nop
lahf
mov
mov
jae
popa
dec
pop
push
inc
xor
aaa
cmp
icebp
inc
push
cltd
mov
cwtl
ja
pop
popa
in
test
sub
daa
rorl
scas
mov
xor
dec
lret
xor
pop
jg
test
cmpsb
or
lock
jge
fwait
ret
popf
xor
addl
ja
adcb
and
imul
xor
xlat
cmova
xchg
push
stos
outsb
loop
mov
test
bnd
pop
cmp
add
dec
add
imul
mov
add
add
addl
mov
cli
and
fcmovnu
xchg
dec
ret
push
dec
adc
jb
fs
sub
sub
jmp
test
add
cmp
int3
fucom
in
sub
ds
popa
gs
daa
cmp
daa
out
sbb
sub
lods
inc
subl
or
push
movsb
gs
push
sub
in
lahf
imul
iret
out
mov
ljmp
fimuls
mov
cmp
add
jmp
pop
xor
mov
push
cli
scas
pop
sub
add
mov
adc
adc
push
xlat
loope
jp
popa
pop
jle
std
push
jge
in
loop
xchg
test
clc
stc
jmp
out
mov
xchg
scas
sbbb
pop
xor
lcall
and
inc
sahf
insb
xor
imul
dec
add
xor
scas
xchg
xchg
push
cmpsb
paddusb
push
mov
cld
mov
imul
ss
into
inc
jnp
sbbb
push
mov
xlat
adc
dec
add
popf
pop
mov
dec
fbstp
mov
jb
push
mov
sbb
andb
mov
xchg
clc
in
xchg
mov
pop
aam
test
mov
lahf
xchg
xlat
cmpsl
adc
mov
jge
imul
cs
ret
neg
or
mov
add
aaa
inc
test
movsl
negl
out
lock
xchg
test
dec
add
in
lds
push
sub
mov
push
mov
in
fs
adc
mov
test
stos
cmp
dec
out
sbb
fists
xor
clc
and
in
sti
xchg
popa
into
lret
movsl
mulb
mov
insl
pusha
jmp
imulb
sub
movsl
je
leave
dec
sub
iret
jns
cmp
mov
jp
inc
push
push
inc
sub
mov
sub
call
adc
mov
fcoml
sti
sub
push
sbbb
stc
mov
shr
xchg
adc
cmp
aas
aas
jle
fldt
daa
int
loopne
and
das
pop
out
sub
jg
mov
jnp
out
sti
inc
and
enter
jne
rcrb
or
enter
cmpsb
or
xchg
outsb
pop
push
pop
int3
inc
mov
mov
xchg
test
push
jl
add
cmp
jo
shlb
dec
insb
gs
ficoml
cmpsb
mov
test
repz
inc
out
xor
jg
mov
mov
insl
imul
sahf
and
sbb
xchg
pop
pusha
testb
icebp
add
push
ss
into
or
shrl
xor
jb
push
mov
incl
insb
adc
pop
fwait
addr16
lahf
pop
fs
hlt
cmp
pop
enter
jne
pusha
jle
xor
pop
and
mov
in
inc
fmull
int
sbb
pushf
xchg
sub
lds
movsl
cwtl
push
mov
scas
jge
xchg
push
shrl
enter
aas
inc
aad
pop
sti
push
pop
cmc
mov
inc
xor
cltd
sbb
outsl
mov
and
push
sub
mov
pop
xchg
xchg
xor
sahf
mov
pop
sbb
fldt
mov
sarb
fisttpll
imul
stos
push
mov
mov
insb
repz
fadds
test
jb
stos
out
rcll
and
inc
jne
test
lea
icebp
xor
inc
mov
clc
fs
sbb
pop
pop
mov
sti
jbe
out
jb
stos
cmp
push
inc
mov
push
inc
stos
jecxz
cmp
dec
jns
mov
add
clc
jns
push
jb
cltd
or
xchg
mov
mull
lret
mov
mov
push
xchg
xchg
and
je
and
sbb
pop
add
bound
test
xchg
or
and
cmpsl
pop
mov
fcmovnbe
sub
mov
movsb
es
sbb
sub
scas
cmp
bound
sbb
lcall
pop
add
ljmp
adc
inc
mov
sub
testb
and
adc
xor
cmpb
mov
and
add
movsl
pop
jge
shl
or
mov
imul
lods
jg
pop
ja
and
cmpl
sahf
idiv
mov
dec
dec
sub
out
xor
dec
popa
fmuls
xchg
movsl
adc
push
sbb
xchg
mov
addr16
push
inc
jmp
xor
int3
and
bound
pop
es
dec
es
sub
mov
aas
adc
in
jb
or
aas
inc
hlt
sub
xchg
sti
nop
popf
rcll
lods
mov
into
jb
sbb
pop
inc
test
jae
push
test
loop
int3
lcall
mov
sbb
imul
inc
and
push
xor
or
push
loop
dec
in
mov
and
sbb
mov
xchg
je
neg
jle
xor
repz
sahf
push
pop
cmp
mov
and
jmp
xor
scas
lods
xchg
jle
aad
negl
xor
gs
orl
cmp
mov
ljmp
fs
pop
adc
xlat
mov
mov
mov
dec
cmp
mov
enter
fdivrs
and
lcall
ds
adc
cs
inc
jo
daa
mov
add
test
push
cs
insb
pop
add
inc
mov
inc
scas
int3
adc
mov
add
daa
test
arpl
xchg
roll
or
popa
lret
adc
push
jne
dec
jb
xor
xlat
lods
jl
xchg
stos
fsub
lret
lea
inc
push
push
sbb
push
add
cli
into
xor
lahf
dec
mov
mov
push
jo
movl
loop
jno
pop
cli
mov
cltd
in
inc
push
rcrl
ret
jno
mov
push
leave
sbb
mov
ss
fidivl
lahf
sarl
mov
or
mov
cmp
adc
adc
cmpsb
and
data16
inc
jae
mov
push
jg
pop
test
cltd
fisttpl
add
popa
aad
push
cmp
pop
sub
in
clc
subb
mov
outsl
in
data16
repnz
jo
ds
cbtw
popf
mov
dec
faddl
and
dec
cmp
fisttps
mov
sbbb
aaa
pop
and
or
stc
cmp
popa
fistpl
inc
fcoml
repnz
cmpsl
or
inc
push
sbb
stos
mov
insl
ss
mov
testb
stc
cmp
push
sti
cmp
idivl
adc
ljmp
ds
and
test
fwait
xor
call
adc
or
sbb
arpl
int
aas
data16
out
dec
lret
lret
push
mov
push
mov
add
mov
loop
in
sbb
dec
push
xor
jnp
jp
adc
xchg
mov
icebp
or
push
push
ja
adc
mov
ret
jne
mov
sahf
lds
inc
pop
mov
and
clc
mov
jns
lcall
push
push
xchg
and
dec
mov
je
cmpsl
pop
sub
out
pop
std
pmullw
int3
adc
pop
gs
mov
push
pop
daa
in
test
repz
ret
add
ds
push
xchg
dec
nop
jbe
xor
inc
inc
fwait
lods
xchg
xchg
add
sub
mov
add
or
inc
repnz
sarl
ss
lret
push
rcrb
aam
pop
mov
push
jge
sub
lcall
or
mov
out
add
repnz
xorb
insl
or
test
and
jecxz
jbe
sbb
pop
dec
repz
mov
repnz
sub
add
popa
out
xchg
xchg
dec
and
xor
in
test
jg
popf
int
lds
sbb
adc
mov
mov
and
adc
adc
inc
insb
in
sbb
mov
iret
hlt
movsl
popa
fimull
jae
jae
cmp
sub
adc
lret
xor
xchg
adc
sahf
js
or
push
mov
push
xchg
stos
mov
xchg
mov
int3
or
sbb
inc
test
sub
mov
inc
lret
sbb
out
ret
mov
daa
inc
adc
push
mov
lds
mov
ljmp
dec
bound
mov
add
sti
adc
jmp
into
ficoms
push
rcr
stc
scas
xlat
push
xchg
rolb
loope
or
pushf
cs
outsb
dec
adc
ret
adc
dec
mov
into
cmpsb
loop
cmc
jne
adc
shrl
enter
addl
cmp
pop
xchg
adc
int3
in
insb
sbb
pusha
xor
ljmp
test
rolb
and
int3
loop
subb
sub
mov
inc
test
cltd
fstpt
cli
out
popf
cltd
xor
inc
sub
out
popa
ror
inc
sub
sub
sbb
and
add
je
mov
test
jnp
cli
es
fistpl
fndisi(8087
mov
mov
shlb
test
sub
int
movsl
adc
ljmp
mov
test
testl
fwait
pop
pop
mov
out
pop
inc
imul
mov
dec
pavgb
pop
dec
mov
mov
dec
gs
mov
and
and
pop
inc
arpl
cld
std
test
lret
sub
fadd
pop
int
sbb
test
test
mov
aam
dec
pop
lds
test
pop
sbb
aaa
cmp
scas
cmpsb
or
dec
inc
adc
mov
cmp
jmp
mov
mov
imul
mov
add
cmp
mov
xlat
bound
int
mov
dec
pop
or
stc
lea
xor
stos
pop
and
lcall
movsb
sub
out
movsl
push
dec
shll
icebp
cwtl
data16
sbb
mov
cmp
in
pop
movsb
loope
push
sub
fists
fcmovbe
adc
jecxz
hlt
in
stc
pop
dec
xchg
add
in
jno
mov
out
movsl
add
and
daa
mov
aad
sbb
in
insl
xor
cmp
leave
push
dec
push
dec
into
fbld
ljmp
clc
mov
adc
aas
mov
add
pop
and
jmp
fs
sub
dec
sahf
sub
movsb
dec
or
xchg
insl
dec
mov
jmp
fstpl
mov
int3
pop
movsb
js
bound
dec
inc
test
push
mov
insb
sbbb
add
rcll
push
mov
in
lcall
cmp
add
push
fdivr
pop
mov
pop
in
jmp
mov
xor
xor
or
and
and
xor
sub
sti
pop
push
lods
inc
stc
add
sub
daa
xchg
cmc
adc
fsubrl
cmp
notl
inc
jno
fwait
jbe
dec
fadd
mov
stc
scas
shlb
mov
or
push
push
data16
push
push
jae
popa
sbb
test
mov
int3
leave
popf
rcrb
inc
xor
aas
inc
mov
test
rorb
add
into
xor
pop
je
rclb
fs
mov
push
jmp
stos
pop
lcall
lods
aaa
pushf
cmp
inc
bound
xor
push
out
pop
or
and
loopne
sbb
testl
inc
pop
push
xchg
lods
or
lret
cmpsb
in
cmp
insb
jnp
adc
insb
jnp
pop
dec
add
bound
sbb
and
out
push
aam
aas
jo
pop
and
push
jge
xor
negl
test
ss
fsubrp
clc
mov
outsb
cwtl
inc
push
dec
ss
int
popl
sbb
adc
fldcw
popa
jge
je
xchg
add
popf
add
rolb
xchg
in
xor
dec
test
in
nop
popf
out
xor
xor
jnp
into
push
pop
cmp
sub
loope
lods
and
call
aam
and
lods
pop
sbb
cli
sbb
mov
and
andb
mov
pop
jne
inc
xor
fcompl
imul
add
jp
ja
add
push
nop
pop
dec
pop
mov
out
add
sub
jb
inc
loop
mov
mov
in
fstps
je
jecxz
mov
int
sti
push
xchg
inc
je
movsl
pop
scas
jbe
fldenv
pop
into
cld
inc
inc
push
jb
cmp
inc
sbb
loopne
push
lods
popa
sbb
sbb
mov
add
jge
outsl
sub
cmp
cmp
loopne
shl
lahf
xchg
mov
addr16
pop
xor
cmp
in
outsb
js
push
dec
idiv
scas
mov
mov
mov
add
clc
cmp
sar
dec
mov
or
mov
shr
adc
mov
xchg
out
cli
sbbl
les
hlt
shlb
push
mov
ja
mov
insb
jmp
lret
cltd
add
hlt
fdiv
test
ret
rorb
pop
push
adc
cld
loope
in
mov
int
xchg
adc
cmp
enter
xor
add
movb
js
or
aam
shrb
insl
or
rol
xchg
in
mov
enter
cltd
enter
xchg
mov
push
cmc
lret
insl
ret
inc
inc
in
mov
jno
loopne
and
xor
test
inc
decl
aaa
jmp
das
cmpsb
pop
sbb
insl
leave
mov
cmp
andl
push
push
mov
mov
jns
das
repz
pop
mov
sbb
mov
adc
divl
hlt
sbb
mov
loop
mov
jge
mov
mov
mov
mov
inc
pop
pusha
sbb
mov
inc
ror
jae
sub
dec
add
mov
test
dec
jmp
insl
imul
adc
mov
and
inc
lret
in
test
jno
inc
sbb
cmp
and
inc
out
jno
lret
sbb
rdpmc
adc
loop
cltd
push
and
xor
mull
push
popf
inc
adc
lret
mov
dec
jg
mov
push
jecxz
pushf
nop
mov
mov
jle
rclb
in
ds
dec
ficoms
mov
imul
shll
sbb
cmpsb
in
int3
faddl
call
pop
aas
cmp
dec
add
xchg
insl
movsl
je
nop
xor
and
stc
or
rclb
pop
setge
jg
dec
inc
js
pop
cmpsb
rorb
mov
enter
mov
ror
cld
cmp
and
js
sbb
or
add
xor
dec
xor
dec
cmpsb
outsb
fidivl
repnz
mov
xor
pusha
mov
les
in
mov
and
push
fs
aas
xchg
ror
xor
sbb
push
dec
pop
mov
bound
loop
or
xor
es
icebp
xor
mov
adc
fisttps
add
xchg
shrb
cld
mov
cmp
in
mov
mov
in
les
jge
push
cmp
or
insl
sub
nop
xor
jns
lds
sub
pop
inc
and
jns
push
ret
aaa
mov
mov
and
jg
dec
lods
and
jbe
push
test
pop
xor
or
in
js
es
es
fdivs
fbstp
inc
and
fbld
and
mov
or
push
cli
repz
inc
jae
xor
inc
mov
mov
inc
sahf
movsl
cmp
lods
incl
rcll
xor
je
and
add
ficomps
sbb
jge
jg
pop
jg
mull
or
xchg
repz
cmpsb
and
testl
cltd
jecxz
mov
test
jns
push
pop
push
xor
mov
and
or
cmp
jno
in
movsl
idivb
cmp
push
hlt
nop
gs
int
les
or
pop
adc
sahf
sarb
cltd
sahf
test
into
shlb
sub
mov
data16
sub
inc
rolb
jle
mov
add
in
icebp
loopne
mov
mov
ss
xchg
adc
outsb
pop
cmc
jnp
pop
jo
push
push
push
shrb
mov
mov
and
cmpsl
enter
xchg
in
mov
pop
inc
aaa
daa
dec
pop
jp
scas
aas
xchg
xchg
jns
pop
daa
mov
cli
subl
daa
bound
or
loopne
cmpsl
mov
pop
imul
xchg
loopne
mov
push
testl
mov
inc
es
or
add
in
pop
test
rorb
pop
or
jae
adc
add
lock
push
xchg
pop
leave
sbb
pop
or
add
or
clc
mov
cmp
xor
xor
xorb
adc
rolb
or
push
out
jb
adc
shll
jl
inc
sahf
mov
mov
lret
mov
ss
add
inc
and
aam
pop
mov
jmp
loop
push
cmp
stos
jl
into
test
hlt
mov
cwtl
or
jecxz
mov
xchg
pop
cmp
mov
aad
lret
push
mov
test
xchg
push
push
pop
jl
ss
inc
lea
mov
cwtl
adc
jle
fwait
adc
and
xchg
in
ljmp
pusha
out
and
xlat
xor
das
inc
test
jns
insb
arpl
mov
jmp
cmp
nop
jns
pop
sarl
cli
ja
mov
int
cwtl
scas
ss
push
or
add
movsl
fwait
push
cld
ficompl
inc
mov
dec
add
cld
xor
arpl
loop
call
daa
iret
xchg
mov
mov
in
dec
fwait
ja
sbb
cltd
daa
lcall
repz
cmpsb
push
mov
or
outsl
es
andb
cs
sub
and
lock
adc
addr16
xor
es
fs
jb
mov
stos
push
mov
sbb
sbb
push
loope
das
push
hlt
or
jecxz
daa
xor
rorl
nop
push
mov
popf
inc
mov
add
xchg
or
aam
clc
mov
or
call
mov
pushf
or
jo
int3
lock
aaa
dec
inc
pop
jg
stos
fwait
pop
in
jge
add
scas
ret
dec
lods
jno
inc
ret
clc
jne
cmpsl
cld
iret
inc
pop
jns
sub
jbe
fwait
cmp
or
outsl
and
cmp
inc
xor
jmp
popf
pop
push
stos
das
xor
sub
xchg
fwait
movsb
push
outsb
pop
or
push
xor
add
cmp
lcall
pop
test
sbb
cmp
sub
push
push
ljmp
outsb
pop
mov
pop
sub
lcall
or
adc
or
std
loopne
inc
inc
mov
stos
outsl
add
push
cltd
mov
je
ljmp
sbb
jbe
fsubs
stos
je
nop
clc
fwait
sbb
push
dec
mov
jbe
lods
insb
sbb
ror
mov
jnp
mov
fistl
fldenv
or
xchg
jnp
mov
stc
aam
mov
rcrb
arpl
shrl
dec
hlt
xchg
jg
ja
lcall
mov
and
push
pop
dec
lea
lahf
leave
cld
fmuls
pop
stos
mov
adc
bound
jne
and
push
xchg
test
lods
xchg
push
shll
imul
outsl
mov
jno
mov
aam
mov
jae
mov
inc
popf
jmp
push
and
mov
subl
fs
and
jne
mov
out
add
pop
sbb
mov
mov
xchg
push
add
rcl
push
fwait
or
xor
push
mov
jae
xor
mov
int3
sub
sbb
in
addr16
and
cmpsl
subl
test
je
dec
cmpsb
push
cmpsb
aad
push
add
popa
mov
adc
cltd
mov
repz
xor
lods
shr
sbb
push
ljmp
sti
pop
push
mov
cmpsl
movsl
lea
pop
jb
jge
int
clc
sbb
icebp
add
lret
inc
lret
repz
bound
and
adc
cmp
xchg
and
pop
pop
mov
pushf
fmull
in
cmp
mov
pop
push
mov
outsb
pop
or
add
mov
add
jecxz
xchg
and
pop
adc
dec
mov
in
js
nop
data16
cwtl
pop
and
cwtl
mov
fdivrs
mov
or
repnz
push
and
adc
out
add
aad
repz
lahf
xchg
test
jp
adc
jae
jne
loope
push
popa
outsb
mov
push
addl
add
xor
add
adc
inc
dec
push
test
mov
push
inc
sarb
add
int3
out
loopne
jno
aad
call
push
daa
xchg
inc
push
outsl
fsts
mov
test
sub
in
cmp
sub
pop
setl
int
inc
std
lds
sti
lahf
adc
dec
pop
xchg
cltd
push
imul
fcomp
inc
dec
jae
lds
xchg
dec
pop
fs
fidivl
stos
je
lahf
fisttpl
jle
es
push
int
sub
push
imul
into
and
mov
or
test
cmp
xchg
mov
rcll
into
dec
iret
aam
xchg
in
jae
xor
cmpsl
mov
pop
frstpm(287
jecxz
into
loopne
adc
das
lcall
inc
int
faddp
sahf
xchg
mov
orb
sti
andb
rorb
in
xorb
in
fisubrl
mov
pushf
lods
cmp
hlt
push
xlat
mov
aas
lahf
cmp
push
lods
mov
insl
cld
sub
adc
ret
xor
adc
xlat
xchg
mov
dec
fs
fcoms
das
adc
sub
loop
mov
jmp
and
cld
sub
mov
movsl
xchg
sbb
cmc
push
ja
pop
sbb
pop
sarl
loopne
popa
test
and
pop
jl
jmp
mov
add
mov
cmpsb
xchg
stos
mov
adc
mov
int
sbb
rcrb
lods
fiadds
rolb
cmp
fwait
pop
mov
std
sti
or
cmp
cmp
mov
mov
mov
inc
dec
popf
and
lcall
dec
fidivrl
iret
in
push
jnp
mov
fistpl
fldcw
ds
xchg
lods
push
fstpt
lret
cmp
insb
int
std
xchg
test
sub
leave
in
jecxz
push
fstl
xchg
sbb
sub
pushf
push
xor
inc
push
jg
test
bound
pop
mov
sbb
dec
mov
or
addb
xor
nop
mov
popa
push
and
sub
mov
or
scas
mov
mov
inc
cmp
sbb
cli
inc
stc
hlt
es
int
or
mov
adc
add
dec
leave
xor
ror
dec
cmp
enter
jne
mov
xchg
inc
stos
mov
idivb
lret
imul
enter
and
loopne
shrl
aaa
rolb
sbb
add
hlt
stos
xchg
jbe
xchg
xlat
stos
flds
pushf
jne
xchg
repz
gs
cwtl
fldt
inc
push
sub
add
or
fisttpl
adc
push
stos
sbb
or
add
loopne
test
pushf
pop
test
divb
push
dec
cwtl
ja
iret
lock
xchg
mov
dec
dec
loop
mov
add
fwait
and
push
xchg
fsubs
pop
ret
sti
adc
and
xchg
inc
mov
andb
mov
imul
mov
mov
insl
decb
insl
popa
inc
je
add
add
jmp
in
mov
ret
sbb
mov
cmp
or
test
inc
cltd
sbb
jge
push
jae
cli
or
and
mov
incb
mov
and
jle
jnp
push
jnp
imulb
in
jne
or
test
dec
mov
sub
sub
adc
mov
and
pop
loope
outsl
sahf
mov
add
push
mov
cmp
loope
jae
cmp
notrack
inc
sbb
lea
sbb
insl
rcrl
jle
cltd
push
push
in
push
mov
gs
push
aas
cmp
adc
out
imul
xchg
sub
test
xorl
sub
outsb
adc
sbb
sahf
out
or
jmp
fwait
mov
enter
inc
and
jne
mov
pop
notl
outsb
out
out
xchg
test
out
add
push
rcll
sub
mov
shrl
aaa
xor
int3
pop
and
scas
fisubl
test
adc
sbb
sbb
jo
addb
push
pop
std
sar
and
xchg
or
cmp
add
mov
sti
xchg
arpl
mov
pop
xor
or
ja
jl
out
xor
sbb
cmpsb
push
cmpsl
mov
lods
or
sbb
add
add
dec
scas
xchg
mov
pop
push
mov
call
add
xlat
xlat
fidivl
cltd
dec
sub
filds
outsl
test
and
je
ret
out
lcall
add
and
sub
mov
lret
lds
repz
sub
lret
jg
clc
pop
dec
mov
mov
dec
mov
push
scas
jg
xor
dec
ja
shlb
jp
imul
dec
push
pop
mov
movsl
shll
fldl
cmc
popf
mov
lods
nop
mov
dec
int
xchg
gs
lret
fs
ds
hlt
or
rclb
outsb
sbb
cmpb
std
enter
sub
jnp
mov
xor
mov
mov
bound
popf
xchg
imul
incb
inc
jle
adcb
daa
lock
call
bound
test
filds
dec
ror
inc
rcl
pushf
jmp
pop
dec
xor
cmp
in
mov
pop
xor
dec
out
ljmp
test
repz
pop
sub
scas
movsl
repz
fistpl
cmpsl
mov
in
pop
inc
dec
push
mov
pop
in
movsl
cwtl
pop
mov
stos
test
hlt
cltd
xchg
sbb
imul
mul
popa
xchg
ret
xor
call
fdivr
inc
repnz
leave
out
fistps
inc
jp
das
xor
sbb
out
mov
mov
or
pop
jmp
add
ss
add
cmp
imul
mov
cmp
fbstp
subb
push
fldt
xor
fimull
ja
mov
sub
cmp
fstl
or
imul
pop
mov
xor
and
and
adc
push
ret
pop
pop
sub
xchg
dec
push
jp
cwtl
shl
fbstp
mov
rolb
pop
pop
cmp
hlt
sbb
jb
ljmp
pop
jns
mov
icebp
movsb
dec
jp
jle
mov
loope
cmp
fwait
cwtl
adc
add
rcrl
and
loope
ret
aam
dec
in
sbb
push
fsubl
push
inc
popf
push
lock
dec
lods
mov
xor
shrb
aad
stc
push
es
push
pushf
push
adc
fwait
cltd
cmpsb
data16
cmpsl
fwait
jns
stc
ret
sub
faddp
lods
aas
fmulp
adc
cmp
inc
mov
out
mov
aad
int
sub
jge
popf
lods
or
or
inc
and
xorb
iret
sbb
out
lds
loope
call
push
sbb
shlb
sub
js
pusha
mov
ss
inc
jecxz
xchg
nop
mov
call
dec
jbe
mov
sarb
dec
xchg
or
imul
out
loope
insl
imul
jb
cmpsb
inc
call
lret
mov
out
ret
pop
push
std
fbstp
icebp
daa
ds
leave
popf
mov
data16
testb
fimuls
aas
icebp
out
push
inc
inc
ss
push
or
jae
aas
push
stc
or
xor
stos
inc
xchg
clc
xchg
sahf
sub
mov
sub
jnp
dec
pop
sub
pop
mov
rsqrtps
lea
push
xchg
push
cmp
pop
push
pop
mov
movsl
in
adc
mov
mov
cmp
mov
add
lds
pop
cmp
push
xchg
js
mov
inc
pop
stos
xchg
out
cs
stos
inc
sbb
mov
repnz
dec
xchg
das
outsb
repz
mov
inc
ret
sbb
or
dec
mov
fwait
hlt
lcall
hlt
add
mov
jnp
mov
lahf
ret
sub
lahf
pop
aam
rol
sbb
mov
andl
dec
sub
in
pop
xlat
lcall
loop
dec
outsl
in
test
pop
and
imul
mov
jne
pop
cli
dec
pop
sahf
iret
xchg
dec
xor
hlt
arpl
cmpsl
insb
js
testb
das
and
testl
loop
xor
sbbl
adc
dec
je
xchg
icebp
add
sub
dec
lea
testl
andnps
cmp
cwtl
in
movsl
pop
test
add
xchg
mov
cmp
xlat
test
or
sbb
lahf
sub
or
xchg
xchg
pop
jae
popl
mov
or
mov
in
cmpsl
mov
xor
adc
jmp
out
add
cwtl
inc
cli
or
mov
std
div
int3
lcall
add
fstl
or
insl
lea
into
popa
mov
ret
dec
mov
mov
popa
clc
loop
mov
inc
call
leave
daa
je
sarl
lock
repz
xchg
ds
jl
mov
mov
inc
int3
mov
cmpsb
lcall
pop
fs
insb
pop
cmp
leave
mov
jge
fucomip
fst
or
cld
shlb
inc
hlt
sahf
mov
lret
and
sarb
cmp
pushf
mov
sbb
outsl
jns
scas
not
icebp
mov
lods
std
cli
sbb
iret
mull
inc
mov
rcrl
adc
mov
xchg
or
std
sub
jns
leave
mov
jmp
add
aas
add
shll
mov
call
enter
aaa
ret
bound
cwtl
decl
xor
scas
mov
cwtl
and
and
sbb
mov
stc
dec
fisubl
pop
pxor
repz
ss
inc
imul
aam
pop
lcall
mov
sti
push
icebp
dec
pop
bound
pop
add
mov
bnd
and
jmp
rcr
inc
and
sub
xor
hlt
fistl
push
pop
pop
cli
outsb
loope
cmp
cmp
std
icebp
in
sbb
cs
sub
fnstenv
addl
dec
insl
cli
subb
lahf
cli
loopne
jo
jae
jp
in
xor
test
ss
stos
xchg
gs
or
push
xchg
int
or
std
mov
mov
pop
out
fistpl
fdivr
push
push
aad
push
fisubl
cmpsb
rolb
pop
ret
xchg
push
sbb
cwtl
xchg
enter
movsl
pop
jb
add
mov
test
stc
insb
fists
movsb
jecxz
mov
mov
fidivrs
test
mov
xor
lods
inc
movsl
outsl
loopne
loope
mov
dec
out
lds
imul
inc
and
test
jecxz
dec
push
lahf
jnp
xchg
or
jmp
add
inc
jmp
cmc
jecxz
into
inc
mov
int
outsl
insl
push
or
sub
xor
insb
fdivl
loope
jge
jns
push
mov
cli
sbb
cli
cmpsb
mov
aad
clc
testl
inc
das
push
sbb
lods
pop
nop
in
test
popa
loop
mov
cmpsl
adc
cltd
mov
jne
sti
negb
or
setnp
roll
xchg
xchg
cmpsl
xchg
js
ret
divb
in
mov
fsubrl
cld
jp
or
mov
mov
pop
jbe
cld
fnstenv
jl
adc
lcall
shr
fwait
push
mov
enter
stos
insb
in
ja
push
loop
cmpsl
and
or
mov
out
loop
jmp
or
lods
push
sbb
addl
movsb
daa
cmp
mov
sbb
das
xor
adc
popf
cmc
jp
jnp
sub
icebp
lret
or
jae
iret
in
cmp
ljmp
jnp
inc
or
lret
push
cmc
sub
andb
data16
inc
mov
inc
icebp
pop
pop
and
lcall
xor
jne
mov
fsubrs
lret
inc
push
scas
push
xchg
out
js
test
lret
idivl
cmp
loop
dec
xor
leave
mov
xor
push
mov
pop
dec
add
pop
xor
stc
jp
xor
dec
testb
ljmp
mov
push
push
or
xor
iret
ret
dec
mov
cltd
push
xchg
das
jnp
mov
arpl
jb
push
jb
and
sub
lods
dec
decb
lea
dec
lcall
dec
xchg
dec
push
push
sbb
idivb
mov
outsb
sub
into
int
mov
jecxz
dec
or
lret
stc
cmpsb
xchg
inc
nop
movsb
enter
mov
imul
pushf
clc
lods
adc
adc
jne
push
sub
inc
cmpb
pop
adc
cmc
mov
pop
xchg
cmp
mov
push
jl
repz
test
das
insl
pusha
or
and
sub
ljmp
insl
jno
inc
push
inc
mov
add
bound
lea
and
mov
mov
cmpsb
inc
pop
adc
inc
cmp
jns
xor
out
filds
cmp
mov
inc
dec
lods
les
repnz
push
sub
jae
out
mov
test
mov
inc
je
mov
add
cmp
add
sbb
and
sahf
or
iret
dec
inc
xchg
cld
pusha
test
push
push
sub
popa
push
je
adc
fistpll
hlt
push
std
xor
leave
cmp
gs
dec
sti
pop
add
icebp
jne
stos
jnp
mov
sbb
or
xchg
hlt
add
mov
jbe
lods
in
idiv
cltd
jecxz
jmp
xchg
into
fstps
insb
int3
xlat
add
inc
fistl
in
enter
adc
in
or
add
inc
imul
cmp
or
cmpb
arpl
scas
dec
repz
push
out
daa
adc
adc
inc
lods
or
cmpsb
inc
inc
in
cmpsb
pusha
arpl
dec
cmpsb
jnp
daa
and
fadds
mov
pushf
shll
cltd
add
jmp
mov
imull
adc
mov
lock
and
dec
addr16
pop
fnstsw
mov
enter
addr16
jp
push
adc
call
mov
iret
sub
jo
incl
inc
in
mov
lret
popf
push
out
ljmp
xchg
outsb
xchg
cmpsb
stc
dec
dec
push
pop
mov
addl
call
in
xchg
inc
imul
pop
jge
lea
out
cmp
imul
mov
gs
xchg
std
aam
mov
sbb
into
mov
insb
stos
mov
xchg
cli
imul
dec
mull
push
xor
mov
mov
inc
adc
sbb
or
dec
popf
repnz
jo
or
std
add
rorb
inc
movsb
iret
mov
repnz
rolb
jae
ds
jae
fidivrs
jle
iret
aaa
rcl
push
fdivs
daa
dec
gs
push
fstpt
mov
xchg
cmp
dec
jp
loopne
outsl
loope
xchg
jecxz
fwait
pop
push
fwait
sub
repz
out
cmp
movsl
dec
push
xchg
push
inc
mov
sahf
and
lahf
out
jmp
scas
and
ds
call
sub
mov
movsb
xor
jbe
sbb
fwait
repnz
lds
mov
repz
scas
xchg
adc
sbb
sub
jne
jns
jnp
dec
cmp
mov
test
iret
adc
dec
pop
pop
popf
lret
ja
scas
xchg
and
fisubrl
mov
or
push
pushf
imul
lea
addr16
outsb
cmp
cmp
mov
cmpsb
mov
shrb
adc
mov
es
mov
jl
xor
push
popa
jge
ds
je
xor
mov
push
jge
movsl
push
add
and
inc
xorb
dec
sub
aam
inc
and
stc
or
std
push
lea
dec
sub
leave
mov
out
cmp
scas
pop
xchg
dec
push
movsl
jno
scas
cltd
in
add
ds
mov
scas
decl
mov
sahf
sub
and
pop
fst
push
lret
xor
imul
inc
lods
dec
fwait
push
ds
xor
leave
jne
xchg
popa
add
add
mov
aad
push
mov
jge
stc
fwait
divb
mov
aas
xchg
jl
flds
movsb
ljmp
inc
xchg
bound
pop
ljmp
xchg
and
ja
fdiv
repz
jno
insl
in
int3
xor
inc
pop
cli
shll
mov
je
mov
sbb
int
outsb
repz
insb
sbb
push
sub
nop
xchg
imul
lea
in
bound
push
xorb
fiadds
lret
addb
sub
enter
test
aas
andb
dec
jmp
dec
repnz
xchg
mov
stos
lahf
mov
cmp
mov
loop
fs
mov
and
and
and
or
and
xchg
xor
aad
int
dec
popa
arpl
mov
cmc
inc
add
rcr
jne
outsb
int3
xchg
lock
sbb
and
into
pop
sbb
xor
ds
inc
les
aas
fs
lret
ljmp
out
xor
jbe
popf
je
stos
je
std
fwait
mov
xor
sub
xor
outsl
aas
pop
lds
lods
cli
cmpb
cmc
sub
iret
xchg
adc
inc
mov
mov
mov
popa
jns
pop
xorl
loopne
fbld
enter
hlt
cs
icebp
xchg
jnp
push
hlt
testb
cs
dec
cwtl
mulb
jae
mov
testb
push
in
int3
mov
pushf
mov
pop
or
test
cltd
je
insl
sbb
mov
adc
rcll
lds
sbb
push
pop
mov
jnp
and
in
add
jmp
fs
bound
in
stos
enter
pop
loope
rcr
int3
clc
ret
mov
int3
dec
neg
js
test
mov
inc
test
or
mov
dec
jne
sahf
mov
or
std
repz
loopne
dec
andb
rorl
pop
ja
adc
int3
inc
push
shr
insb
es
enter
in
sbb
hlt
lds
xchg
xchg
punpcklwd
pop
sbb
push
push
je
and
xor
adc
inc
mov
aad
adc
lds
adc
js
outsb
jge
dec
lods
psllq
xchg
push
repnz
xchg
lahf
cmp
ret
xor
mov
in
xor
push
scas
mov
test
xor
add
cmp
adc
test
les
adc
add
jecxz
push
push
call
mov
ja
xchg
xchg
std
mov
test
das
das
push
test
ficoms
or
arpl
cmp
bswap
das
testl
fwait
mov
pop
xlat
dec
cmp
fcoml
cltd
fistpll
out
or
neg
dec
mov
shll
std
mov
jl
push
push
loope
insb
stos
in
loopne
lods
out
jle
jae
mov
push
push
aad
movsl
jb
mov
lcall
stc
js
push
pop
sub
enter
jo
aam
push
cmp
add
mov
movsl
fldt
mov
cmp
or
std
xor
scas
icebp
mov
jne
inc
sti
aad
jns
dec
xor
fwait
or
adc
xchg
and
add
mov
add
rol
add
rcrl
adc
push
call
mov
pusha
nop
sbb
dec
aad
pop
cmpl
jg
jbe
mov
mov
jae
fsub
in
jne
sbb
cmp
aam
pop
repz
daa
lods
loope
push
ds
loope
push
pop
or
jbe
jecxz
inc
nop
outsb
insl
mov
jl
jne
and
and
or
aas
xor
dec
jbe
cmp
repz
sub
jmp
xchg
push
pusha
iret
ret
push
sub
mov
pop
aam
push
mov
test
mov
outsl
jecxz
lret
xchg
lock
mov
pop
dec
mov
xor
outsb
fistpll
push
sub
xchg
icebp
ret
dec
jmp
mov
and
cmp
lret
xor
jge
jl
out
or
fmull
ja
push
sahf
jb
mov
lcall
std
into
xorl
jbe
push
mov
ja
in
and
sbb
mov
call
iret
nop
xchg
lcall
pop
roll
fnsave
addr16
test
not
inc
fdivs
aam
mov
add
pop
inc
insb
lds
ja
or
push
dec
mov
mov
ret
lcall
inc
mov
dec
loopne
inc
adc
fildll
jp
out
mov
iret
cmp
je
ja
shll
jb
sbb
jnp
mov
hlt
sub
dec
xchg
ss
lds
lds
cmp
insl
movsl
inc
lret
stos
add
mov
icebp
out
imul
test
xor
mull
mov
cmp
mov
sub
aad
dec
data16
out
cli
imul
add
adc
xchg
pop
imul
lock
jae
or
push
jge
mov
push
push
cltd
push
icebp
outsb
call
and
lock
fwait
repz
aas
addr16
out
xor
cmp
out
push
lock
scas
ret
loopne
es
stos
xor
pop
cld
scas
loopne
xchg
dec
add
jae
adc
cld
bound
jb
sbb
rclb
mov
jns
aad
dec
pop
stc
push
icebp
cmpsb
push
das
dec
test
pop
emms
pop
push
dec
push
lock
addr16
jbe
fldt
loope
mov
and
negb
pop
push
sbb
stos
mov
mov
jnp
out
xchg
push
mov
push
adc
insl
cld
dec
int3
jge
fsubs
jle
adc
dec
mov
jge
mov
jl
sbb
ja
pop
sub
fcomip
xchg
cmp
mov
cmp
popa
pop
pop
inc
cmp
fwait
or
adc
mov
subl
repz
ret
dec
pop
movsl
jnp
movb
outsb
test
movsb
notl
inc
xor
rorb
mov
push
push
dec
push
xchg
jmp
dec
movhps
lods
push
add
dec
adc
shl
adc
jmp
xor
push
push
sar
pop
inc
adc
xor
ret
push
adc
jns
fdivrl
xchg
fwait
pop
repz
fwait
jne
hlt
sbb
sub
dec
rcll
inc
js
test
ret
lods
mov
imul
test
jmp
sub
fidivs
aam
push
fidivrl
jle
dec
inc
xchg
icebp
ja
das
adc
mov
jmp
aad
rcl
cmp
sub
inc
xchg
in
add
and
in
mov
push
jle
jmp
mov
filds
mov
dec
cwtl
out
add
data16
insb
in
rcll
std
dec
out
mov
outsb
or
mov
add
jne
cmp
int3
fidivrs
ds
xchg
das
mov
jnp
mov
popl
mov
mov
pushf
jl
pop
inc
push
rcrl
sub
sti
iret
cwtl
pop
loopne
pop
mov
lock
inc
cmp
les
inc
lods
aas
cmp
push
imul
out
pop
sahf
loope
push
inc
mov
test
cmp
and
shr
sub
rcr
movsb
push
mov
xchg
in
mov
sbb
adc
lea
xor
xor
ss
push
mov
in
aam
cli
xchg
push
js,pt
mov
pushf
mov
cmpsl
in
imul
repz
jp
jne
pop
mov
xor
adcb
ret
dec
das
lea
shl
xchg
or
push
dec
xchg
xlat
dec
pop
mov
fs
sbb
inc
scas
dec
jecxz
inc
arpl
scas
add
fwait
dec
dec
mov
add
dec
xor
lahf
mov
jge
cmp
mov
pop
outsb
and
pop
pusha
into
ljmp
xchg
lahf
lds
sub
add
pop
sahf
dec
leave
jbe
mov
jno
adc
test
outsb
out
stos
test
dec
push
push
and
lods
imul
or
jge
mov
adc
int3
out
out
inc
push
test
jge
or
xchg
cmp
inc
mov
push
mov
jmp
push
cs
clc
push
add
xchg
sub
xchg
inc
stos
cltd
dec
jl
stos
fbstp
adc
faddl
movsb
test
jmp
xor
push
mov
popa
jnp
push
or
xor
adc
scas
ja
cmp
rcl
and
add
inc
sbb
mov
cmp
repz
shll
inc
sbb
mov
lret
and
dec
cmp
add
cld
sbb
xor
mov
cmp
bound
jmp
inc
das
les
jnp
sahf
and
dec
cmp
arpl
cmp
xchg
mov
cmp
jle
nop
lods
lahf
fldcw
mov
sub
pop
cmp
adc
xor
aaa
shll
inc
out
fistpll
push
shl
mov
push
into
outsb
cli
imul
inc
jo
xchg
mov
jo
and
mov
inc
sahf
and
cmpsb
movsb
inc
dec
shlb
andb
lods
cs
push
jae
dec
insl
inc
mov
enter
xor
cwtl
add
mov
mov
sub
nop
or
js
jbe
cld
pop
adc
add
testb
stc
cmp
sbbb
lahf
lahf
push
fiaddl
ret
mov
xchg
push
fsts
adc
push
ss
nop
sbb
fwait
jo
or
mov
xchg
sbb
add
mov
ret
sub
pop
jne
jp
sub
shll
push
clc
add
push
hlt
jne
and
mov
xor
imul
mov
lea
stos
mov
dec
mov
push
out
add
icebp
pusha
pop
loop
sub
loopne,pn
sarl
je
popf
shrl
imul
out
mov
push
cld
add
adc
subl
lods
jl
pop
xchg
pop
ret
mov
push
dec
fiaddl
inc
dec
cmp
sarb
inc
add
js
pop
mov
and
adc
cmp
mov
in
aam
dec
call
shrb
xchg
jge
cmp
push
call
add
xchg
test
roll
lret
mov
xlat
repz
dec
out
mov
dec
cld
xchg
jb
sarl
jo
mov
push
fsubl
dec
stc
or
lahf
sbb
pop
or
imul
arpl
cli
in
xchg
jns
mov
xchg
xchg
fbstp
inc
adc
push
ds
dec
push
dec
ret
mov
push
loope
rorb
jp
and
or
sub
rol
aas
bnd
imul
movsl
cwtl
mov
xchg
stc
sbb
aaa
loopne
xor
incb
push
jns
mov
sub
test
push
or
in
or
std
pushf
int3
add
mov
test
lock
mov
ljmp
outsl
test
push
hlt
leavew
enter
repnz
mov
lods
scas
orb
in
and
or
push
push
xchg
cmp
xchg
pop
adc
cmp
call
inc
jp
push
xchg
loopne
test
mov
int
sub
mov
mov
xor
je
xor
addb
sbb
xchg
lahf
add
dec
sahf
aaa
fsubrp
popa
push
decb
mov
pop
mov
xor
jmp
or
mov
add
cwtl
mov
es
in
xchg
pop
mov
xchg
rol
out
or
pop
mov
and
lds
neg
das
dec
test
aas
push
jo
leave
sub
in
fisttpll
sub
fsub
jo
movl
aas
mov
daa
into
fdivrl
lcall
push
sbb
pushf
cltd
pop
push
cmp
icebp
stos
push
push
gs
mov
inc
push
adc
dec
daa
pushf
test
xor
mov
loopne
sub
sbb
xor
movsb
sub
push
push
push
or
dec
lods
sbb
cld
out
popf
sbb
mov
jmp
imul
push
out
cmp
dec
dec
inc
gs
mov
mov
adc
pop
aam
mov
inc
lret
xchg
imul
into
inc
scas
inc
cmp
out
jae
hlt
movsl
and
push
mov
fiadds
jg
mov
mov
add
sub
std
loopnew
iret
test
out
stc
pusha
dec
pop
adc
arpl
cli
pushf
je
daa
lods
push
fmuls
insb
dec
cld
sti
add
mov
xor
cmp
cli
and
and
dec
add
mov
push
adc
sub
mov
mov
iret
mov
xchg
mov
mov
mov
fdivrs
imull
jl
or
sahf
xorl
les
xor
arpl
data16
xor
and
jp
dec
or
sub
xor
adc
mov
stos
sbb
inc
stos
in
push
mov
push
push
leave
movsb
lret
push
mov
ret
fsts
mov
test
push
jl
adc
push
nop
ja
test
xchg
cmp
sub
roll
xor
mov
je
movb
xor
test
stos
mov
mov
mov
ljmp
lds
jg
stos
dec
repz
insl
ficompl
pop
xchg
lea
mov
pop
dec
popf
ret
sbb
xor
das
out
jge
arpl
lea
sarb
iret
cmp
dec
mov
test
mov
cltd
lods
hlt
mov
jecxz
adc
add
hlt
jge
adc
es
cltd
push
cmp
int
and
add
pop
inc
sbb
add
loopnew
jnp
fidivs
mov
add
stc
push
mov
sub
cmp
test
aas
inc
inc
cltd
jae
xchg
icebp
outsb
test
adc
in
mov
mov
and
dec
and
lock
cltd
adc
cld
lcall
xorl
aaa
lods
dec
mov
and
aaa
mov
or
aas
dec
fcoms
in
or
xor
mov
cltd
and
aas
cltd
add
mov
fildl
pop
adc
fs
xchg
int
mov
adc
stos
inc
xchg
jp
dec
cld
loopne
or
xor
scas
sub
in
fsts
fisttpll
decl
xorl
jns
mov
lcall
cmc
inc
shr
jl
dec
ficomps
ds
cmp
push
negb
sbb
flds
sbb
inc
outsb
sbb
test
arpl
sar
popa
ret
mov
loopne,pt
sub
repnz
cli
xorb
add
icebp
inc
mov
xor
ss
aad
shrl
sarb
pop
adc
enter
pop
insl
test
xor
mov
push
mov
scas
push
aam
stos
jge
sbb
adc
and
roll
add
adc
rcll
lock
in
adc
xchg
lock
pop
inc
mov
jge
jecxz
cltd
arpl
sti
xlat
fadd
adc
idivl
shrb
cs
fcoms
mov
xor
jo
xchg
popf
inc
idivb
push
xchg
sub
stc
push
add
fscale
mov
out
mov
lods
push
stc
ja
popf
outsb
je
pop
test
adc
and
and
xchg
ret
and
scas
fdiv
dec
dec
xchg
xchg
rorb
mov
sub
add
pushf
jb
mov
idiv
adc
xchg
jno
fdivr
sbb
out
into
or
imul
mov
stc
shrb
cli
mov
sahf
push
sbb
ja
sbb
mov
cmp
leave
lret
and
mov
in
dec
repz
and
das
hlt
mov
jg
mov
icebp
idivl
scas
and
lods
fidivl
or
xchg
stos
cmp
shll
jns
xchg
lret
out
lahf
pop
inc
call
cmpsb
adc
dec
push
adc
dec
or
push
testl
mov
mov
adc
add
pop
mov
and
cmc
inc
fistpl
fldl
or
add
and
xchg
cltd
aad
jo
or
pop
dec
mov
mov
js
addb
inc
std
dec
and
cmpsl
cmp
lret
ret
inc
dec
not
std
add
popa
sbb
xor
jbe
stc
add
loop
mov
sahf
dec
cmp
shlb
inc
xor
adc
sbb
xchg
pop
add
test
adc
jp
clc
addr16
out
dec
or
jle
lret
jae
cmp
gs
sar
dec
test
and
mov
jnp
mov
mov
mov
cld
inc
sub
and
lea
push
inc
arpl
nop
stc
aas
inc
xlat
push
sbb
jae
fimull
lods
ljmp
fwait
adc
les
pushf
cmp
or
int3
sbb
mov
xor
out
pop
sub
out
ss
mov
push
mov
leave
xlat
push
and
sub
cmp
je
je
addr16
shlb
ficoml
mov
sahf
inc
and
int3
cltd
or
test
adc
fwait
imul
ss
xchg
cmp
or
mov
test
jl
push
sbb
out
neg
jnp
cld
sbb
add
stc
inc
inc
cs
lock
out
andb
adc
in
or
inc
xchg
aad
sbb
out
popf
or
sbb
loope
repnz
dec
loope
aaa
cmc
lret
inc
pop
pop
mov
sub
outsl
pop
aam
rol
mov
xchg
push
dec
fnsave
jbe
sahf
popf
in
push
sbb
movsl
mov
pop
fisttpl
mov
pop
sbb
aad
jmp
inc
lahf
mov
dec
icebp
lcall
out
data16
call
inc
mov
xor
ss
icebp
ret
mov
stos
out
xor
dec
daa
jp
cld
adc
pushf
add
xor
mov
and
orb
jo
call
dec
sahf
std
fldl2e
test
jle
add
push
mov
mov
cmp
or
fldenv
mov
mov
in
pusha
jnp
sbb
or
inc
rclb
shrb
sbb
push
push
fldenv
xor
fisubl
dec
lea
adc
lods
xor
cmp
xor
adc
daa
cmc
leave
imul
aas
fstpt
pusha
in
push
sbb
call
je
and
pop
mov
mov
ds
flds
cmp
xchg
daa
movsl
add
xchg
adc
xor
jae
xchg
xor
cmp
ss
pop
stos
inc
adc
and
jp
imul
cmpsl
lea
inc
jno
scas
and
cmp
mov
jb
popf
jmp
pop
jp
rcrl
dec
fmuls
shll
movsl
and
test
ja
out
jae
orps
std
and
insb
mov
and
cmp
mov
cmp
fistps
or
cltd
clc
sbb
mov
mov
inc
mov
dec
cmpl
pop
pop
add
lds
mov
loope
outsl
mov
cmp
or
adc
aaa
jge
and
jmp
sbb
cmp
and
push
js
adc
or
out
lds
sbb
fucomp
dec
addr16
divb
rcrl
pop
mov
xor
xor
jbe
out
sbb
lahf
add
inc
or
cwtl
lret
sub
mov
mov
pop
sbb
push
adc
dec
in
lods
fildl
xchg
jne
andl
into
mov
mov
xor
cwtl
sahf
lea
mov
lods
mov
mov
lea
sub
mov
dec
xchg
cmp
lahf
push
fcmovnu
jecxz
loope
and
mov
jo
mov
ficomps
cmpsl
cmc
or
nop
pop
mov
fildl
cmp
dec
stos
jle
push
jnp
sti
jle
leave
shl
mov
adc
shlb
lea
inc
rcrb
lock
xchg
in
data16
push
sub
xor
movsb
pop
or
mov
sub
sbb
es
sbb
push
lods
ljmp
vprotq
shlb
icebp
sub
inc
repnz
push
test
or
fistl
mov
cmp
popa
mov
jmp
push
arpl
ret
icebp
mov
into
mov
sub
aad
scas
adc
add
stos
insl
hlt
daa
insl
movsb
lcall
cmpsl
popf
push
dec
mov
cmp
mov
sarb
shl
mov
xor
pop
xor
out
enter
push
pop
dec
outsl
es
fistl
xor
ds
in
xchg
jmp
stc
shl
sub
cs
js
in
cwtl
pop
lds
and
jl
ss
fcomip
fcomps
sub
xor
pusha
mov
add
pusha
xchg
or
stc
cmpsl
int3
pop
pop
icebp
cld
push
fdiv
outsb
divb
lods
call
sbb
test
ja
out
iret
push
push
sarb
jo
ror
jns
lods
jne
mov
cld
icebp
push
adc
fucomp
cli
push
xchg
movsl
fcomp
push
aaa
fistpll
lds
imul
movsl
stc
fcmovu
sbb
sub
fdivrp
dec
andb
xchg
jge
fadds
gs
mov
mov
xorb
test
je
push
int3
in
std
aaa
lods
sub
push
xchg
dec
jle
push
mov
dec
push
add
xchg
inc
sub
pop
push
dec
fildll
pop
jae
cmpsb
push
adc
into
add
jmp
ret
daa
mov
push
sub
mov
lahf
stos
or
data16
push
sub
cmp
pop
adc
jb
out
mov
sub
xchg
lods
mov
aam
daa
sbb
or
inc
imul
pop
push
popf
and
js
outsl
and
enter
xchg
nop
jg
jbe
outsb
push
les
hlt
xchg
cmp
bound
lea
andb
into
inc
fnsave
cmp
fistps
jge
mov
data16
cwtl
and
cmpsb
xchg
jo
cmpl
sbb
push
test
movl
push
cmpl
cli
ljmp
cmovp
paddq
les
inc
inc
mov
decb
sub
mov
cmpsl
sub
stos
scas
scas
jnp
xor
repnz
inc
mov
in
push
js
jo
lret
inc
inc
pushf
jno
push
mov
or
inc
daa
je
sbb
push
sbb
and
out
cmp
jb
or
jecxz
push
sub
mov
pop
loope
jl
sub
jno
push
push
repz
dec
sarb
push
push
cld
mov
xor
rorb
or
lcall
leave
repnz
in
mov
mov
lret
dec
mov
or
xchg
insb
mov
test
sbb
lods
cmc
push
fs
hlt
std
and
vmwrite
mov
push
leave
adc
push
insl
xchg
pop
xor
jl
pop
push
mov
or
inc
movsl
test
mov
pop
mov
lret
xor
add
pushf
lea
jmp
ss
mov
pop
jae
adc
adc
in
std
gs
dec
imul
xchg
cmp
mov
std
xor
dec
jle
aaa
pop
xor
cwtl
jae
jp
sbb
stc
lds
repz
cli
lods
nop
outsb
jo
or
aad
push
sub
mov
cltd
xor
outsl
push
test
and
sub
insb
adc
push
ds
fucomp
dec
cli
pop
dec
jno
xchg
push
cmp
mov
mov
pop
mov
dec
lods
pop
in
rorb
lock
and
xor
in
cmp
movsl
inc
cmpsl
lahf
jo
xchg
mov
call
sbb
inc
cld
add
pop
lahf
int3
mov
out
add
inc
int3
test
lret
imul
les
ja
push
cmp
outsb
push
add
or
pop
pop
sub
icebp
std
mov
inc
repz
pop
dec
fisubrs
jo
jg
pushf
movsl
into
inc
cmpsb
inc
xchg
xor
movsl
stos
popa
jle
mov
ljmp
aad
mov
mov
cmp
push
mov
push
sbb
xor
repz
loope
jbe
pushf
les
jo
sub
lods
cmp
mov
jg
aas
aad
mov
sbb
or
test
cmp
xorl
or
inc
xor
xchg
lea
pop
sbb
push
and
cs
mov
push
lea
fbstp
fucomi
fdivs
lahf
mov
inc
mov
das
shlb
adc
jmp
sub
jl
mov
push
and
pop
loope
push
mov
pop
and
sbb
andl
xchg
mov
dec
add
and
pop
xor
iret
hlt
subb
mov
inc
sbb
lcall
push
lcall
mov
out
push
push
lret
push
mov
push
push
sti
mov
dec
pop
movsb
and
and
fisttpl
hlt
sub
jl
pop
dec
or
xor
sti
jp
ss
je
pushf
inc
xchg
ficomps
add
add
fnstsw
bound
sub
mov
mov
add
rcrb
push
mov
xor
fnstcw
into
pusha
push
xor
cwtl
cmpsl
aam
imulb
nop
cmp
fdivrl
xchg
push
mov
inc
adc
jnp
test
leave
negl
rolb
inc
scas
dec
out
dec
sbb
dec
fsub
imul
inc
pop
push
int3
adc
fstps
scas
adc
jge
rcr
hlt
ljmp
xor
hlt
insl
jae
adc
lret
mov
push
imul
pop
mov
mov
ficoml
shrl
out
daa
adc
pop
ret
dec
add
inc
ja
jb
outsl
addb
mov
and
mov
sub
sub
call
mov
les
inc
test
test
mov
dec
mov
test
out
test
sbb
lods
add
sub
repz
sti
cmp
sbb
ljmp
inc
mov
xor
xchg
mov
fildl
aad
jg
mov
sbb
je
out
push
enter
movb
mov
dec
mov
rcl
push
in
jne
or
push
ret
mov
add
jp
push
push
enter
fadds
push
xchg
or
int3
cmp
xor
out
movsb
cld
test
nop
sbb
pop
pop
cmpsb
lcall
ret
jae
in
sub
cs
rorb
xor
leave
add
repz
cmp
cwtl
andb
test
loop
adc
sahf
stos
or
rolb
jb
adcb
pop
xor
push
dec
out
daa
jle
pop
pop
xchg
push
inc
or
shlb
mov
xor
pop
cmp
add
xor
mov
xchg
and
sti
xchg
mov
nop
repz
cmp
lods
das
lret
push
jl
je
or
fbstp
pop
rorb
lret
adc
or
inc
lods
lock
das
sbb
das
sub
ljmp
insl
dec
mov
je
push
mov
cld
jb
out
fdivrp
dec
push
push
fildll
dec
pop
jp
aaa
loopne
shll
mov
lods
pop
pop
js
sbb
divl
dec
outsb
dec
or
popa
lods
bound
test
iret
push
xchg
lea
fists
cbtw
pop
mov
sub
movsl
mov
outsb
add
loope
lock
inc
outsl
cwtl
insl
shrl
pop
push
xchg
mov
mov
inc
je
andb
mov
rolb
inc
cmp
mov
pop
ja
adc
out
or
adc
lds
fsubrs
test
dec
std
mov
fcomps
je
lods
and
mov
ret
push
repz
adc
test
push
lock
push
jb
and
xchg
imul
scas
inc
mov
or
adc
testl
push
mov
sub
xchg
inc
ds
iret
and
mov
add
push
andb
rcll
xor
cmpsl
push
push
or
call
sahf
addb
sub
dec
jno
outsl
icebp
and
push
shrl
iret
stos
jo
outsl
pop
xchg
das
stos
jg
dec
add
jmp
pop
inc
mov
or
cwtl
sahf
out
cmc
xor
incl
push
into
insb
push
cld
cltd
mov
ss
bound
test
loope
in
das
repz
pop
mov
dec
cli
push
pop
adc
fcom
pop
cmp
push
popf
xchg
push
inc
aas
lods
xchg
sub
xchg
sti
xor
inc
inc
dec
mov
xchg
lds
lcall
add
fildll
lret
int3
fs
xor
pop
pop
cmp
pop
shlb
dec
sub
xor
rcl
call
data16
cld
mov
mov
inc
sahf
jmp
fdivr
ja
daa
dec
frstor
imull
xchg
lea
fimull
out
into
sbb
inc
iret
or
cwtl
lods
adc
mov
lcall
stos
rcrl
inc
xchg
movsl
xchg
es
xchg
imul
cmp
pop
adc
fdiv
cmp
pushf
shrl
loopne
add
sub
and
cmp
xlat
push
mov
cwtl
loopne
les
int3
inc
imulb
sbb
inc
addr16
mov
sbb
stos
dec
xchg
jb
jno
hlt
outsb
inc
testl
movsb
mov
and
sbb
div
push
sub
shrl
push
sub
ror
push
push
jg
ja
cmp
je
mov
shrb
scas
mov
shlb
mov
stos
mov
xchg
stos
pcmpgtb
call
jnp
test
stc
mov
stos
outsb
data16
mov
jl
xor
ljmp
dec
movl
fmull
icebp
jb
imul
gs
push
ret
test
lret
and
jnp
ss
dec
out
fs
jle
mov
xor
enter
or
loope
cwtl
cmc
clc
fnsave
lahf
mov
xchg
cmpsl
push
dec
cwtl
aad
adc
lret
cmp
int3
adc
xlat
and
adc
nop
ljmp
push
xchg
hlt
pop
jmp
adc
dec
roll
xor
daa
jo
adc
jle
sti
jbe
jae
loope
add
jns
cltd
into
es
iret
xlat
ret
sbb
xchg
cwtl
and
dec
sbb
in
lock
mov
ret
pop
mov
mov
mov
xchg
fisttpl
push
aad
incl
rorl
clc
and
call
push
mov
xchg
sub
shll
push
lret
pop
adc
or
inc
ror
lods
jmp
into
test
add
add
fucomi
mov
lods
pop
adc
mov
fisubrl
addl
mov
arpl
add
outsl
lcall
or
push
es
mov
mov
adc
repnz
cmc
lcall
mov
xlat
lods
jae
adc
test
xchg
ds
pushf
jb
or
dec
shr
mov
pop
in
push
subb
inc
cmpsl
out
push
fbstp
add
jb
sub
push
mov
iret
mov
out
inc
cmpsl
jbe
mov
scas
addr16
mov
fs
xor
pop
sbb
mov
sti
add
pop
cmpsl
ljmp
push
sbb
je
scas
inc
sub
sub
ds
jb
push
jo
fadds
xchg
fdivrs
cmpsl
and
jae
sub
mov
mov
out
cmpb
in
pushf
lea
loopne
repnz
xor
pop
mov
ds
stos
jle
xchg
inc
xchg
pop
inc
mov
in
jle
sbb
dec
aas
mov
jg
mov
int
addb
mov
fsub
bound
xchg
les
xchg
lcall
mov
and
scas
add
push
pusha
lcall
jge
imul
test
call
jae
sub
jg
repnz
sbb
inc
lahf
xor
aaa
fidivrl
dec
adc
add
xor
aas
mov
and
xor
sbb
pop
cmc
icebp
inc
ja
ret
push
leave
addr16
inc
les
mov
int
mov
dec
sub
gs
mov
jb
and
sbb
mov
mov
dec
xchg
icebp
cltd
and
popf
pop
pop
push
mov
dec
pextrw
inc
je
mov
jecxz
aam
jge
sub
lret
shr
insb
dec
or
dec
ja
pop
cld
push
cmp
test
cmc
ja
mov
mov
xchg
decb
jne
dec
into
idiv
nop
sti
mov
mov
or
aad
pop
sub
scas
sbb
imul
into
pop
rcll
or
out
cmp
out
mov
add
leave
and
aaa
mov
add
and
outsb
xchg
lods
int
sub
push
push
ds
insb
in
shll
sahf
mov
xchg
push
cs
sbb
lea
mov
inc
js
loop
gs
xchg
push
mov
repnz
pop
ljmp
notl
add
int
fwait
mov
idivb
test
mov
xchg
mov
inc
jmp
int3
jno
adc
push
lods
rolb
and
loopne
push
aas
cli
add
dec
jo
subl
pop
cmpb
cmp
xor
xchg
rclb
push
xchg
push
push
outsb
xor
push
sbb
lret
xor
mov
pop
and
push
cmpsb
jo
xor
push
push
repnz
outsb
mov
movzbl
mov
mov
push
loop
lock
cmp
or
dec
pop
cwtl
jge
hlt
int3
test
cld
mov
xchg
push
daa
cmpsb
pop
cmpsb
pushw
test
mov
std
sub
inc
movsb
push
pop
int
xchg
jge
movsl
mov
outsl
mov
popa
insb
lock
iret
jbe
inc
sub
js
xchg
addr16
out
push
pusha
push
das
leave
xchg
jo
hlt
rcll
mov
ret
mov
pop
or
inc
cmp
repnz
mov
push
outsl
mov
add
push
push
xchg
fcmovnbe
scas
pusha
dec
cltd
dec
add
lahf
addr16
aas
dec
and
fidivl
in
and
mov
rcrb
xchg
fsubl
adc
inc
jb
aad
in
jno
pop
in
aad
jb
pop
xor
mov
mov
inc
out
scas
jae
mov
test
sbbb
xor
xchg
and
sti
ss
xchg
or
xor
jmp
mov
jl
xchg
xlat
xor
fdivrl
dec
cmp
cmp
lret
lds
imulb
sub
add
pusha
push
jns
mov
sbb
jne
ds
mov
sub
inc
stc
and
sbb
and
cwtl
jnp
jb
sub
xchg
iret
gs
aaa
adc
jae
scas
scas
ret
jmp
rcrl
cmp
xchg
sahf
jl
sub
pushf
addr16
or
mov
adc
repnz
je
in
arpl
aam
stos
lret
ljmp
lret
std
popa
loop
jb
popa
ret
push
xchg
insl
sbb
add
lea
adc
xchg
ds
push
pop
notb
or
xor
orb
sub
mov
repnz
push
mov
cs
sbb
fwait
test
ret
repz
andl
cmp
in
pushf
stos
repz
dec
pop
daa
cmp
stos
add
in
aad
inc
push
mov
xchg
insl
test
mov
bound
mov
pop
and
sub
lock
mov
or
sbb
hlt
sbb
imul
mov
mov
xchg
add
ftst
loope
lock
and
mov
out
cli
sbb
outsl
leave
ja
mov
mov
xchg
rorl
jae
cwtl
add
lcall
popf
pop
sarb
insb
pop
adc
sub
xor
xlat
adc
adc
pop
xor
and
mov
test
movl
fcoms
out
push
ds
sti
push
int
adc
mov
fimuls
jne
jl
cmp
scas
shrl
xor
jae
mov
jmp
mov
xchg
add
fs
or
out
movsl
test
lock
in
push
add
xor
lcall
insl
jmp
and
fbstp
mov
push
out
cmpl
fs
insl
ljmp
arpl
outsl
push
scas
test
scas
adc
inc
and
rclb
into
jne
andb
jg
xchg
sbb
shll
flds
stc
repnz
and
stos
hlt
adc
jecxz
les
xchg
mov
mov
jno
loope
das
test
push
dec
sub
jecxz
out
je
pop
fwait
sbb
fwait
out
shll
xchg
cmp
jne
or
jmp
out
xchg
xor
lds
fiaddl
stc
in
or
jp
bound
mov
test
das
bound
imul
cmp
fs
push
dec
jle
push
cwtl
lret
pop
aad
dec
inc
das
or
add
dec
push
mov
and
and
cmp
lahf
mov
lods
ss
cmp
pushl
xchg
into
fwait
popf
cmpsl
cmp
hlt
pop
mov
inc
aaa
dec
insb
hlt
movsb
cmp
xchg
pop
aaa
push
xchg
test
push
inc
cli
push
push
clc
pop
imul
xchg
inc
xor
pop
daa
sbb
fldenv
mov
xchg
cs
fsub
mov
lahf
dec
mov
push
push
mov
scas
or
push
sbb
push
hlt
rcl
pop
das
and
out
subl
jmp
push
xor
outsb
mov
xor
stc
inc
inc
push
loop
aad
aaa
shrl
popf
scas
mov
or
xchg
lcall
stc
sti
and
je
pop
in
cmp
cld
leave
push
xchg
jl
push
and
aas
mov
dec
adc
rcr
mov
out
leave
out
repnz
jmp
loop
pop
mov
jno
xor
loop
lret
xchg
push
daa
jp
lods
pop
pop
es
cmpsl
pop
add
es
lret
stos
mov
mov
ds
push
shlb
or
mov
lds
inc
jle
mov
inc
setne
lcall
mov
test
lret
sbb
inc
arpl
jecxz
jl
loopne
and
cmc
mov
cmpsb
daa
mov
imul
sti
push
sub
pop
idivl
cmp
incl
fsub
rcrl
test
jns
mov
or
mov
lods
cmp
gs
xchg
test
lret
mov
mov
pop
dec
rol
xor
rcpps
mov
pop
mov
push
sub
or
lea
jg
gs
imul
pop
lods
push
lret
jbe
and
adc
sbb
ja
mul
jl
in
and
cli
scas
outsb
jl
push
scas
push
jae
sub
mov
cmc
sbb
mov
mov
jecxz
testl
mov
jno
jmp
mov
scas
dec
push
and
ja
xor
shlb
xchg
or
testl
pop
jle
data16
leave
arpl
mov
shlb
xor
xor
dec
fdivs
scas
add
lods
mov
js
mov
xchg
cmpb
js
push
dec
xchg
xchg
or
int3
sbb
cmp
std
jae
push
or
mov
xor
shlb
mov
lods
lds
xchg
stos
sub
mov
test
inc
loopne
test
nop
movsb
mov
jl
or
and
es
ret
sub
push
xchg
or
jae
dec
pop
shr
pusha
aad
mov
mov
repz
fwait
mov
je
jge
mov
mov
sbb
push
fidivrs
popa
or
jmp
je
cltd
es
push
mov
fidivl
or
std
lock
push
cli
pop
push
inc
push
cld
bound
std
jge
in
xchg
cmp
or
mov
fsubs
mov
imul
cmp
test
xor
xchg
pop
rol
adc
xlat
and
jecxz
cmovns
in
ss
gs
or
aas
mov
adc
sub
cmp
pushf
cmp
and
mov
aam
cmp
stc
mov
test
das
cli
js
mov
sbb
xlat
xor
sub
add
cmp
push
mov
xor
pop
mov
pusha
pop
in
mov
clc
add
dec
adc
lods
call
mov
and
cli
cmp
jns
decl
cmp
pop
add
lods
outsb
push
and
lock
lcall
outsl
sub
test
sub
sub
mov
push
mov
push
mov
push
mov
fcomip
jnp
jns
les
push
in
cwtl
cmpsl
stos
sbb
mov
and
jg
push
and
subl
and
call
add
test
or
bound
pop
add
xchg
in
sub
cmpsb
ficoml
add
jno
jb
fbld
push
out
lods
xor
xchg
mov
pop
jmp
and
ret
fists
xcrypt-cfb
cmpsl
and
sbb
adc
dec
or
inc
add
ds
sbb
insl
sub
into
cli
push
mov
push
rolb
inc
xchg
push
fs
orl
insl
imul
and
jl
dec
push
movsl
test
into
lea
js
and
sahf
inc
movsl
daa
xlat
stos
loopne
add
loop
aad
testb
jno
mov
push
sbb
adc
vorps
out
cwtl
sbb
jne
sti
sub
test
mov
hlt
pop
cmpsl
fs
mov
ret
sub
jbe
xor
loope
repz
nop
and
bound
sbb
shl
cmp
negl
or
scas
mov
or
inc
cmp
lea
addr16
in
in
movsl
inc
inc
add
cli
jmp
or
push
jb
xor
jo
add
mov
push
jle
cmp
inc
fisubrs
mov
adc
mov
jns
movl
nop
ja
out
mov
loop
mov
push
add
or
insb
xchg
mov
mov
add
push
xchg
xor
xchg
inc
sbb
mov
adc
out
testb
and
add
push
add
sub
and
aam
aam
jg
inc
mov
ss
sti
ror
or
push
scas
mov
mov
cltd
mov
or
repz
stos
loopne
jg
fcoms
mov
je
or
in
push
and
mov
jecxz
dec
and
inc
inc
mov
add
bound
pop
and
in
jne
js
mov
scas
pop
sub
xor
mov
sahf
lcall
bnd
mov
xor
push
or
cmp
add
cmp
addr16
xchg
shll
xchg
xchg
movsl
jb
push
sub
aam
in
dec
mov
cmp
pop
jge
pop
mov
jne
push
cmp
test
stc
sub
outsb
cmc
pushf
in
jp
stos
jge
fnstcw
or
shll
pop
enter
pop
push
sub
and
xchg
dec
int
sbb
xorl
ljmp
outsl
add
and
sub
mov
pop
or
ret
std
xor
cmp
mov
cli
cmp
dec
inc
mov
push
ja
leave
cli
adc
sbb
test
mov
add
lcall
add
cmc
leave
inc
popf
loop
mov
rep
pop
out
in
js
popf
mov
je
subl
sar
cmc
and
lahf
cmp
xchg
lret
test
mov
add
mov
sub
dec
out
gs
lods
sub
xchg
shl
repnz
addr16
in
push
in
add
cmpps
addl
sar
xchg
jmp
sti
fmuls
imul
sub
je
sbb
adc
cmc
xchg
hlt
mov
data16
mov
pop
or
ffree
lcall
push
and
sbb
test
sub
jl
fs
aas
mov
out
data16
lea
sub
jo
stos
dec
dec
push
mov
jo
mov
push
stos
popf
add
stos
test
xor
popf
or
sbb
adc
push
add
sub
fwait
mov
sub
xor
mov
scas
mov
or
mov
insl
push
arpl
shr
adcl
arpl
xchg
lahf
pop
cmc
jno
fbstp
dec
xchg
int3
and
mov
outsb
insl
je
add
mov
sbb
xchg
call
rorl
fisubs
pop
in
testb
ret
mov
sbb
and
xlat
ror
mov
or
mov
xchg
jns
shr
cmp
fwait
inc
jnp
adc
sar
xchg
pop
xor
jmp
or
repz
add
incl
lea
push
out
sub
stc
movsb
aad
icebp
pusha
and
mov
popf
add
movsb
lods
push
aam
std
test
and
sbb
cmp
add
frstor
pop
je
add
notl
iret
daa
in
dec
mov
inc
mov
pop
pop
pop
push
aas
frndint
inc
pop
mov
ficompl
or
add
stos
push
xchg
lock
push
iret
push
test
adc
ss
js
inc
sub
mov
scas
or
xchg
and
call
mov
pop
ds
movsl
or
fistpll
bound
int3
fldcw
mov
ret
adc
shlb
rclb
repnz
xor
jo
add
push
dec
and
loopne
outsl
ret
sbb
inc
sarb
jmp
dec
pop
divb
mov
data16
or
mov
pop
and
fmull
pop
add
gs
xchg
sarl
hlt
xchg
or
xor
mov
mov
test
xor
push
cmp
je
repnz
pop
subb
cmpsl
or
pop
cmpsb
mov
jl
adc
dec
push
xor
cld
enter
aas
lods
jle
faddl
jmp
dec
loop
push
in
sub
push
fildl
mov
mov
in
cs
xor
scas
mov
es
je
int3
adc
add
xlat
cmp
shrl
nop
push
lahf
inc
dec
mov
clc
jnp
loopne
out
std
mov
ds
push
gs
or
add
or
rcll
push
cwtl
aaa
clc
cmp
adc
sbb
and
rcll
inc
lahf
flds
dec
lret
push
fisubrl
lea
outsl
movsb
arpl
xlat
or
sub
sub
jecxz
test
cmp
ss
insb
mov
mov
mov
test
xchg
and
xor
xor
adc
mov
mov
ss
xchg
imul
enter
sub
xlat
lcall
cmpb
ror
xor
js
je
cmp
jmp
xor
ljmp
int3
cmp
aaa
cmp
xor
insb
xchg
inc
mov
lret
dec
xor
mov
ret
push
add
sub
adc
inc
push
pop
shrb
lahf
mov
cmp
pop
mov
in
fs
inc
cmc
dec
jnp
ret
mov
adc
imul
addr16
ret
mov
inc
jl
dec
mov
push
adc
xchg
fcom
pop
pop
jle
fsubrs
xlat
ss
push
jne
nop
arpl
sahf
aas
sub
jnp
or
inc
xchg
adc
mov
mov
xchg
popf
pop
or
jp
js
add
xor
jns
or
sub
sbb
ret
push
hlt
aas
ss
sbb
movsl
in
mov
cmpsb
das
and
sarl
pop
sub
insb
jb
fcoml
pop
pusha
jl
aas
xchg
js
cmp
sbb
in
inc
add
cld
lahf
mov
into
jecxz
pop
xchg
int3
xor
les
ja
daa
pop
xchg
xor
or
lea
call
sub
arpl
dec
les
mov
mov
pop
mov
out
clc
pop
jb
movsl
push
cmp
pop
leave
cmp
push
xor
movsl
sub
pop
adc
fildl
repnz
adc
mov
xor
test
inc
shlb
loopne
data16
and
pop
adc
mov
fiadds
fnsave
cmp
dec
fcoms
add
movsb
add
out
pop
aam
xor
dec
cmp
jnp
mov
mov
lahf
xchg
out
lret
jns
and
jnp
xchg
imul
pushf
pop
mov
adc
jne
loopne
xorl
mov
adc
out
and
imul
movsl
lock
push
fcmovb
push
and
jno
aas
mov
dec
imul
jp
xor
movsb
insb
dec
sahf
and
xchg
pop
inc
fwait
and
mov
lret
lods
insl
push
inc
test
cmpsl
je
ja
add
jo
push
mov
jbe
mov
cmpl
sub
mov
xchg
push
sar
int
shlb
fldenv
outsl
mov
in
adc
shll
sub
mov
and
lods
dec
outsl
pop
mov
mov
jb
pop
outsl
or
jp
sarl
adc
sahf
fdivrp
cli
cmp
mov
sbb
adc
fwait
cmp
jb
xchg
daa
rcl
and
icebp
or
cltd
mov
int3
outsb
xor
and
in
add
jo
push
ja
jbe
or
movsb
dec
cmpsb
push
fwait
icebp
ja
jge
mov
fmull
hlt
repnz
mov
inc
xchg
mov
push
cmpsb
jmp
jecxz
adc
lret
push
imull
jnp
mov
in
out
xchg
bound
lcall
push
sbb
or
enter
rorl
add
ljmp
pop
add
subl
les
dec
jnp
and
xor
mov
mov
pop
fldcw
adc
sbb
sbb
inc
in
aad
data16
push
dec
lcall
bound
pop
pop
inc
fnstcw
rorb
addr16
int3
inc
and
adc
js
mov
adcl
add
ja
add
and
ret
aad
testb
ja
inc
in
lods
pop
in
lcall
adc
imul
jecxz
xor
mov
call
rcl
mov
addr16
cmp
xor
stos
add
mov
or
and
mov
dec
cmp
mov
test
and
jo
mov
cs
inc
jne
orl
or
sub
or
xchg
sbb
push
jp
xchg
sti
fadds
fwait
lods
stos
out
into
mov
cmp
pop
mov
lds
xchg
sub
aam
subl
idiv
mov
repz
push
jmp
testl
pop
xor
lods
je
or
call
inc
and
dec
or
sbb
mov
push
adc
incb
pop
and
std
sub
mov
movsb
into
cmpsl
addl
aad
sbb
xlat
std
add
cltd
data16
in
test
jg
lret
cmpsl
mov
icebp
jne
cmpsb
xor
jnp
push
shrb
out
add
scas
xor
mov
add
cmpsl
inc
add
mov
inc
fsubrl
add
in
xor
aas
adc
lea
xchg
mov
jmp
xchg
out
inc
inc
add
mov
out
sahf
lahf
inc
dec
jo
lods
push
loopne
mov
mov
ja
or
es
lret
inc
cmp
outsb
mulb
das
loope
scas
jae
inc
jne
fcompl
stos
daa
xchg
adc
pop
mov
mov
shll
ret
xor
lret
inc
sub
mov
loopne
inc
inc
and
sub
lods
pop
loopne
add
leave
jl
fs
in
loope
inc
mov
adc
dec
test
mov
xchg
add
or
mov
iret
out
je
out
sub
in
enter
shrl
pop
imul
shlb
push
pop
call
jnp
jp
aaa
in
add
pusha
xchg
fucom
fsub
dec
and
out
pop
aad
arpl
sub
mov
mov
lcall
nop
pop
addr16
std
push
xor
clc
loop
mov
push
and
dec
adc
mov
push
and
adc
xor
mov
mov
xchg
xchg
loopne
pop
or
fs
cmpsl
mov
lret
hlt
mov
and
hlt
cmpsl
outsb
in
cld
mov
ret
loope
ret
mov
fs
sub
int3
bound
hlt
aam
jle
mov
in
rcrb
in
xchg
mov
lcall
aaa
mov
aas
outsl
sbb
loop
icebp
add
es
pop
cmp
cmc
and
fsts
push
ja
mov
sub
out
lcall
stos
cmpsl
sahf
aad
mov
push
mulb
fisttpll
fs
frstor
inc
sub
or
mov
loop
cmp
sub
lock
fwait
jmp
cmpsl
push
out
sbb
lods
cmp
or
sbb
cmp
pop
out
push
cmpsb
jl
js
mov
nop
std
mov
ljmp
jno
add
mov
mov
clc
cmp
test
icebp
daa
jo
inc
jle
data16
push
adc
lock
xlat
adc
sbb
sub
sbb
sahf
and
js
std
outsl
fld
clc
dec
inc
fidivl
mov
inc
lods
repz
cmpb
test
pop
xor
cli
ret
add
ret
jns
fwait
or
xchg
xor
xchg
ret
inc
cmp
inc
cmp
xchg
xchg
into
enter
pop
mul
push
push
outsl
pop
sarb
add
repz
cmp
enter
test
pusha
rclb
fs
cmp
or
insb
pop
inc
or
sbb
adc
adcl
sub
or
or
pusha
mov
lret
adc
stos
pop
dec
mov
and
gs
xchg
fucomi
push
push
inc
mov
pusha
mov
int3
dec
and
shlb
leave
ljmp
imul
mov
push
nop
dec
add
xor
pop
std
aad
or
enter
mov
stc
pop
xchg
fstl
lds
pop
pop
vcvttpd2dqx
movb
xor
xchg
dec
daa
inc
sahf
sbb
cmp
adc
sahf
outsb
iret
xlat
mov
sub
loope
jno
in
xchg
xchg
jae
xor
dec
in
and
aam
and
adc
push
ljmp
push
sahf
inc
xchg
cmp
shrl
sub
mov
xor
sbb
or
lds
inc
mov
fwait
int
mov
xlat
xor
xchg
cwtl
scas
fisubs
and
xchg
add
sbb
ds
push
js
jne
jns
push
pop
outsb
lods
mov
shrb
out
xor
dec
lods
rcl
sbb
mov
inc
out
mov
out
sub
les
xor
mov
push
adc
push
inc
int3
cs
fildll
and
pusha
inc
xorl
rcrl
js,pn
mov
adc
inc
xor
mov
xchg
and
add
xor
imul
out
dec
jnp
push
mov
jmp
movsb
lcall
sbb
sub
xchg
test
sub
arpl
sub
add
cmp
inc
mov
shll
mov
ja
mov
mov
es
lret
aad
imul
xchg
jb
cmp
aad
xchg
sbbl
ret
jb
cli
mov
jo
mov
dec
add
sub
popa
jg
out
iret
push
inc
jbe
cs
xor
jo
or
add
push
lcall
sub
cmp
movsl
inc
sub
push
lret
sub
push
fnstenv
outsb
inc
pusha
jge
pop
std
aas
ret
cld
repz
popa
addr16
shr
loop
cli
sub
or
and
xchg
inc
sub
hlt
nop
dec
std
in
jl
sbb
sub
push
outsl
jno
xor
scas
or
scas
xchg
inc
ja
rcll
pushl
jnp
jno
push
sbb
popf
inc
adc
sti
les
aas
test
rcl
inc
pop
xor
aas
or
push
add
pushf
jb
insl
mov
adc
pop
dec
add
daa
ret
mov
fcompl
popa
out
dec
jmp
fidivrs
add
loopne
mov
data16
movsb
jmp
movsl
sbb
pop
lods
lea
pop
adc
mov
xlat
lds
int
mov
fstpl
jno
cmp
fxch
les
mov
mov
icebp
sti
jnp
stos
movsl
repnz
in
or
xor
js
rorb
push
popa
lea
shll
leave
bound
test
repz
cs
je
pop
xor
jecxz
and
rcll
push
mov
mov
test
inc
les
mov
test
int
push
xchg
mov
push
loope
es
xchg
loopne
call
lea
pop
lret
fidivs
scas
stc
int
sbb
inc
inc
adc
and
test
mov
jg
adc
lcall
fwait
mov
sub
stc
push
cmp
jg
orb
in
loop
jns
nop
lods
jno
inc
aam
and
mov
jmp
cmp
in
imul
push
fmuls
addr16
mov
or
xor
mov
cmp
mov
and
add
lret
ss
scas
add
dec
pop
iret
test
pop
adc
pusha
testl
cmp
out
mov
push
stos
ljmp
mov
sub
mov
xchg
push
jecxz
out
aam
stos
xor
std
mov
pop
test
push
jo
add
call
dec
into
loope
jne
sahf
cwtl
pop
mov
mov
in
sub
dec
dec
loope
add
loop
or
push
add
mov
xchg
lret
fnsave
cmp
pop
push
pop
int3
push
arpl
pushf
divl
pop
sbb
cmp
rcrb
push
push
out
mov
aam
jno
dec
jmp
daa
test
fs
mov
sbb
lods
jp
rclb
sbb
ret
dec
dec
or
lret
lods
test
scas
popf
std
pop
adc
mov
pop
rorl
push
jns
push
cwtl
dec
dec
iret
or
ljmp
in
mov
out
and
push
push
inc
pop
and
in
lret
jge
push
rcl
mov
dec
cmpl
pop
faddp
je
clc
mov
xchg
and
enter
xor
cmp
stos
int3
xlat
jns
scas
imul
lods
lock
stos
jb
scas
les
xchg
in
call
push
push
movsb
inc
insl
lea
js
adcb
push
daa
jno
outsb
outsb
sub
add
cld
clc
sub
loopne
cs
lret
ljmp
cmp
ss
aam
clc
dec
dec
aaa
xor
cltd
hlt
mov
ret
or
dec
decl
xchg
xchg
xorl
and
pop
cmc
enter
xchg
push
jmp
and
and
lds
jecxz
xchg
add
ficomps
sti
loope
sbb
or
ja
sbb
mov
stos
inc
mov
mov
jmp
fisttpl
and
sbb
fwait
test
div
xchg
inc
dec
xchg
or
adc
mov
or
xor
xor
push
xor
insb
ja
shlb
shll
pusha
gs
test
xor
std
push
js
lahf
mov
mov
sub
loop
in
insb
mov
lds
dec
cmpsl
mov
mov
adc
stc
cmp
mov
sahf
cmp
jnp
aaa
or
xor
mov
jle
ret
lods
scas
popa
in
push
xor
xor
fsubrs
jmp
xor
addr16
cltd
adc
pop
mov
outsb
mov
andb
test
and
inc
xor
pop
xor
sbb
les
bound
jmp
js
lahf
push
loop
xchg
jl
bnd
test
mov
jg
jl
rorl
nop
xor
add
enter
fcompl
outsl
daa
daa
pop
shll
add
test
jl
sub
cmp
lea
jl
xor
add
pop
and
cld
aas
mov
dec
push
push
dec
pop
ret
jge
cmp
aam
aas
sbb
imul
xlat
lcall
sub
and
mov
inc
stos
mov
lea
roll
lret
and
mov
out
adc
xchg
scas
xchg
inc
pop
clc
mov
int3
add
mov
ds
pusha
out
js
bound
sahf
hlt
xor
lcall
leave
push
jns
aaa
loopne
insb
jbe
add
pushf
popa
adc
add
mov
das
jmp
cmpb
mov
ds
mov
nop
sbb
sbbb
lock
push
and
mov
test
js
inc
into
lahf
jb
insb
push
and
in
jg
add
out
and
mov
mov
loopne
out
jle
subl
movsl
push
retw
pop
jecxz
lods
int
stc
add
or
mov
out
dec
ss
jg
out
sbb
scas
dec
push
movsl
pop
icebp
push
mov
stos
scas
inc
fdivs
fdivl
mov
or
sub
leave
jne
mov
sbb
xlat
je
cmp
lahf
inc
inc
cwtl
jmp
mov
test
enter
nop
and
jnp
ds
jae
mov
sub
jno
fidivs
cmp
neg
scas
cld
lods
outsl
dec
ret
pop
fildl
into
stc
cmp
adc
inc
and
jp
dec
and
jmp
jp
addr16
adc
lret
sub
pushf
jg
cmp
inc
cs
gs
inc
mov
pop
cmc
lods
hlt
mov
push
repnz
fwait
das
pop
lret
iret
inc
sbb
sbb
jb
xchg
mov
in
fcomps
daa
rorb
push
and
pusha
mull
jae
cmp
ja
mov
into
hlt
mov
mov
mov
dec
jb
push
jne
icebp
mov
push
adc
xchg
pop
cmp
cmp
lds
push
out
and
mov
push
sahf
dec
mov
or
sub
pop
cmp
mov
into
sub
or
shr
icebp
mov
mov
push
popa
cmp
int3
popf
fdiv
loope
pop
movsb
mov
fsubrs
mov
adc
lods
hlt
icebp
mov
dec
test
sbb
sahf
adc
das
andb
insb
in
dec
jl
jge
xor
sub
cmpsl
dec
push
mov
inc
ret
push
sub
push
cwtl
test
pop
popf
mov
mov
jg
dec
adc
push
icebp
sub
test
push
sbb
mov
mov
add
mov
sahf
mov
fdivrs
cmpsb
daa
jl
mov
mov
xchg
in
dec
xchg
mov
xor
jle
aad
mov
pushf
ss
shrd
and
or
out
int
and
xchg
aad
das
cmp
jbe
sar
shl
inc
addr16
in
out
idivl
sbb
xor
movsl
mov
out
jl
test
popf
ret
sbb
add
lahf
or
push
mov
push
ja
xor
mov
add
ja
mov
std
jns
stc
jne
ret
popf
push
cmp
or
into
pop
adc
mov
decl
outsl
xchg
fnsave
jmp
or
imul
int
cmp
mov
lcall
push
jb
mov
test
sbb
xchg
xor
pop
cmpsb
add
jno
jecxz
adc
adc
outsb
cltd
loope
dec
xor
iret
std
pop
jge
ds
test
leave
push
addr16
leave
pop
mov
cmp
les
xchg
jnp
inc
cmp
push
sub
loopne
dec
mov
xor
jbe
fldt
or
dec
pop
inc
insb
jb
test
jnp
sbb
std
iret
clc
shrb
and
jno
add
cmp
and
mov
daa
dec
dec
orl
mov
les
in
insl
rcl
fildll
mov
sahf
aad
outsl
clc
mov
cwtl
or
adc
adc
adc
lret
cmp
jl
fwait
cmp
fstpt
lock
gs
xor
and
adc
mov
fs
add
movb
lcall
fs
rdpmc
inc
mov
or
addb
test
fistps
xchg
fdivl
cmpsb
in
hlt
mov
jle
xor
adc
mov
cmp
fdiv
xor
leave
mov
inc
movsl
add
pusha
sub
daa
xchg
or
pcmpeqd
fimuls
nop
jb
add
xchg
cmp
out
xchg
mov
bnd
jl
inc
sub
adc
pop
cmp
mov
shl
push
sarl
mov
outsb
lods
jnp
int3
mov
push
js,pn
cmpsl
cltd
inc
ss
push
mov
mov
cmp
or
testb
and
lea
inc
repnz
or
jmp
les
pop
adc
insl
loopne
inc
ss
stc
mov
lret
push
add
pop
fidivrs
pop
pop
mov
cmpsl
nop
daa
in
out
mov
hlt
xor
daa
push
cwtl
cld
push
pop
jmp
push
or
dec
fisubl
xchg
sbb
mov
xchg
xor
jno
sahf
jo
pushf
out
lods
lods
stos
rorl
fidivs
push
out
out
loope
xor
adc
out
sbb
add
test
sub
lods
ficompl
dec
test
add
leave
inc
shlb
xchg
xor
mov
jmp
adc
xor
inc
cmp
cmpb
std
fmuls
shl
scas
mov
sbb
sbb
dec
clc
ljmp
mov
pop
add
lock
arpl
adc
test
loop
and
mov
xchg
pop
sbbl
cwtl
mov
fsubr
pushaw
adc
pop
or
in
sti
sbb
fidivs
push
rorl
push
andb
xor
out
xor
jo
cmp
pop
inc
test
push
xchg
sahf
jp
dec
xchg
out
or
mov
mov
sbb
add
pop
and
cs
mov
sub
pop
push
jbe
xor
insb
sbb
imul
cwtl
sbb
rol
das
cltd
call
jmp
dec
out
lahf
sub
mov
xchg
inc
mov
jl
jp
mov
sub
and
push
xor
loop
js
mov
in
adc
xchg
addr16
push
dec
cmp
cwtl
cmp
testb
xchg
ds
jo
mov
add
scas
dec
test
jb
decl
into
stos
popa
xor
push
pop
jb
arpl
add
imul
jecxz
xor
daa
ret
addr16
enter
xor
leave
mov
push
mov
pop
or
fwait
lahf
pop
repnz
jnp
mov
scas
or
mov
sbb
sbb
sub
subb
or
xchg
xor
fists
mov
pop
cmp
mov
dec
jbe
pop
and
cmp
and
ds
sub
inc
cwtl
xor
js
lcall
jbe
enter
int3
mov
cmp
std
divb
adc
lods
jmp
and
lods
mov
jae
pop
loope
nop
movsl
adc
inc
out
sub
imul
jno
sub
int3
ret
ret
ds
adc
nop
pop
aaa
cmp
pop
xlat
clc
xor
aas
sarb
std
in
and
movsl
sub
data16
adc
outsl
mov
nop
sbb
subb
test
call
mov
inc
inc
xchg
pop
inc
addr16
cmp
cmpl
sbb
es
arpl
cmpsb
mov
xchg
ja
pusha
stos
sub
jp
jmp
les
fptan
rcr
xor
iret
in
negl
inc
mov
fwait
add
mov
mov
lods
cmpsb
push
daa
loop
cmp
push
pushf
push
jmp
adc
inc
pop
mov
mov
addl
ja
pop
sbb
sbb
cmp
and
xchg
pop
pop
ret
ret
adc
or
push
cmc
mov
sahf
xchg
pop
add
mov
push
xor
lods
cmpsl
sbbl
and
js
sbb
xchg
adc
xchg
nop
adc
push
pop
xchg
sbb
int3
in
fdivrl
leave
dec
sub
adc
jae
xlat
hlt
jnp
sub
ja
jmp
aam
jmp
addr16
ficomps
mov
adc
push
scas
sahf
push
jbe
add
leave
pop
push
in
pop
xchg
js
sbb
mov
sbb
stos
adc
enter
jle
push
xchg
ficompl
test
loop
mov
add
lock
cmpsb
cwtl
out
popf
shll
pop
das
rcll
mov
les
rcl
decb
fcmovb
xchg
pushf
lahf
xor
dec
sahf
lcall
jne
pop
addr16
je
inc
repz
jbe
mov
out
or
into
push
loope
hlt
or
xor
jb
icebp
into
test
xchg
xchg
cmc
dec
xchg
fcompl
mov
fwait
clc
fidivrs
pushf
push
dec
push
jo
out
lock
out
lcall
adc
jns
stc
pop
nop
xchg
pop
stc
clc
fisttps
sbbb
xchg
pandn
mov
dec
jo
cmpsl
lods
sahf
sbb
adcb
fdivrs
cmp
shll
push
test
gs
cmpb
and
frstor
jge
outsl
inc
push
hlt
lahf
xor
xor
xchg
push
pop
inc
mov
stos
jne
ljmp
pop
ds
and
ret
imul
or
sti
ljmp
sarl
adc
mov
inc
outsl
xor
out
aad
scas
mov
int
cmp
lahf
push
cmp
inc
pop
mov
jmp
and
jae
js
mov
lret
mov
or
rolb
in
add
mov
or
adc
dec
sbb
adc
lcall
cmp
jmp
inc
fsubrl
lret
shrb
loop
adc
jmp
push
adcl
inc
shlb
addr16
cli
pusha
push
shld
jecxz
jmp
jae
mov
pushf
mov
fsts
aam
enter
call
lcall
das
mov
adc
out
cmc
pop
pop
sbb
adc
jo
push
xchg
mov
pusha
idivb
jnp
data16
sahf
mov
cli
repz
ss
sub
lock
mulb
xor
lahf
dec
mov
lea
inc
pop
dec
std
pop
inc
sbb
push
sti
frstor
in
into
jp
push
adc
das
out
jns
or
mov
inc
sub
inc
or
out
and
aam
push
dec
sbb
fwait
xchg
add
and
mov
sbb
lret
or
cmp
andl
shll
xchg
mov
mov
leave
scas
outsl
fsubl
and
daa
fwait
hlt
hlt
mov
nop
les
test
test
or
loop
insl
push
repz
xor
cli
ja
cltd
sbb
daa
and
les
shll
mov
jo
rorl
dec
idiv
shlb
mov
ret
xchg
imul
adc
jne
mov
inc
or
xor
add
sub
loop
mov
fcmovnb
dec
dec
adc
rorl
cli
and
popf
mov
pusha
push
pushf
sbb
cltd
mov
and
cwtl
or
js
push
mov
xchg
push
pop
mov
out
sub
or
icebp
push
pop
xor
stos
sub
loopne
cwtl
sbb
insl
arpl
jno
cli
cmp
lea
out
mov
shr
inc
test
mov
mov
loope
aas
divb
ds
movnti
repnz
xchg
out
xor
aad
dec
inc
jne
mul
adc
daa
gs
xchg
in
lds
and
adc
mov
jge
dec
xchg
shl
cwtl
sbb
xor
xchg
das
mov
lret
sbbb
lea
pop
out
and
xor
int
out
repz
insb
stc
int3
sahf
jg
sbb
xorb
jb
divb
repnz
add
or
lods
sub
std
sub
inc
outsb
cmp
int3
mov
mov
loope
test
ret
popa
mov
lret
xchg
movsl
ljmp
mov
pop
fcompl
sti
negl
aas
xchg
adc
dec
mull
imul
hlt
and
push
push
adc
imul
mov
xor
fwait
inc
jp
sbb
andl
pop
dec
daa
xchg
pop
mov
mov
outsb
dec
outsl
movb
out
sbb
imul
xchg
mov
push
pushl
mov
daa
imul
cmp
jmp
mov
flds
leave
sub
pop
push
jg
je
mov
test
mov
mov
fimull
sub
stos
aam
adc
xor
push
push
rcrb
test
inc
icebp
rcll
repz
xchg
jnp
cmp
push
mov
sub
push
xchg
mov
jge
popf
stos
adc
inc
fwait
mov
call
xchg
cmc
mov
dec
lret
add
mov
jp
mov
cmp
fisubs
loop
les
sti
aaa
das
pusha
aas
lds
clc
inc
xchg
mov
dec
fadd
xchg
bnd
cmpsl
fidivrs
imul
imul
enter
enter
sub
aad
nop
mov
out
insb
cmp
daa
loopne
repnz
enter
lcall
add
add
adc
in
push
xor
outsb
push
mov
cmpsl
xor
cs
xlat
bnd
xchg
jmp
dec
aad
xlat
nop
cmp
fwait
jae
imul
jg
pop
jo
jbe
test
pop
out
and
pop
and
push
push
sub
push
dec
xor
add
inc
jo
scas
xchg
jbe
ljmp
pop
cld
push
fisttps
enter
aam
out
jo
sub
add
icebp
insb
or
jnp
pusha
mov
popf
cmp
imul
jnp
repnz
sbbb
add
sbb
push
push
daa
jl
sbb
jno
loopne
xchg
adc
jge
mov
orb
hlt
sub
adc
shrl
jns
push
out
imul
sub
fwait
arpl
fidivs
lds
ds
jp
fwait
daa
xor
std
xchg
xchg
repnz
xchg
cmc
cmc
push
inc
mov
push
movsb
mov
popf
sbb
jns
inc
lcall
or
or
push
and
jl
and
mov
hlt
test
lcall
popa
arpl
jbe
push
sbb
pushf
pushw
xchg
das
cmc
push
push
add
les
lcall
jne
jo
insl
push
mov
xorb
jecxz
movsb
je
notb
test
fisubrs
mov
and
inc
test
mov
cmp
mov
lcall
fstl
adc
lods
nop
mov
adc
je
xor
jmp
loopne
stc
sti
fcomps
adc
roll
repz
fldenv
mov
xchg
dec
lret
pushl
sub
loopne
rorl
loope
pop
adc
dec
jno
mov
adc
mov
push
test
pop
int3
xor
repnz
add
inc
fbstp
jnp
mov
sub
inc
cmp
adc
loopne
mov
add
xchg
adc
mov
or
xchg
inc
ret
add
movhps
leave
cltd
jnp,pn
fsub
jns
jbe
and
cmpsl
imul
in
cmp
push
mov
test
inc
mov
jecxz
or
movb
testb
sbb
sub
and
cmpsb
out
in
cltd
mov
xchg
incl
sti
mov
sbb
outsl
and
push
jl
adc
loopne
add
or
jo
jmp
into
mov
push
insl
cmpsl
icebp
in
lcall
pop
cmp
loop
inc
rclb
nop
les
mov
enter
shl
ljmp
je
or
add
cmp
xor
stc
test
cmp
in
jecxz
or
test
out
inc
ja
or
pop
cs
inc
jns
lret
pop
mov
outsl
pushf
imul
mov
sub
adc
xchg
ret
cmp
jmp
push
addr16
aad
sti
and
test
imul
dec
sarl
inc
sbb
jns
aam
and
sub
mov
jg
or
mov
adc
andl
cmp
fiadds
xchg
xchg
inc
jge
adc
pop
mov
mov
add
inc
or
and
int3
or
jecxz
nop
aam
mov
test
lret
mov
imul
in
push
mov
xchg
xlat
js
cmp
add
or
out
adc
or
es
cwtl
fisubl
xor
in
insb
fimuls
push
adc
in
lods
les
je
cs
dec
lret
fwait
pusha
push
ja
iret
shrb
mov
in
hlt
cltd
sbb
ja
mov
dec
jns
out
cmpl
and
into
push
test
inc
mov
or
push
fidivrl
mov
mov
lods
jl
jmp
insl
dec
popa
sbb
sbb
ds
ret
dec
divb
or
push
mov
mov
ret
dec
arpl
int3
inc
mov
dec
mov
popf
call
xchg
pop
push
jo
aad
mov
xor
lods
cltd
int3
push
test
sbb
out
aaa
andb
mov
push
ret
sbb
xchg
inc
pop
mov
mov
daa
insl
sub
mov
mov
daa
jle
sbb
dec
sbb
mov
pop
push
xor
fs
and
cmp
pop
add
push
cwtl
inc
std
pop
cmpsb
jne
pop
jns
jns
sbb
adc
and
or
pop
ja
xor
out
clc
movsb
xor
cmc
xor
mov
sbb
lahf
insb
cmpl
cmpsb
pushf
xor
mov
pop
or
push
sahf
add
sbbl
les
in
and
mov
imul
xor
dec
or
pop
out
xorb
mov
add
sub
push
pop
mov
cmp
out
push
xchg
shll
lea
mov
mov
movsl
sbb
lods
clc
loop
cmpsl
and
lods
out
push
sbb
ljmp
mov
mov
rol
lret
add
orb
push
lods
sub
stos
push
dec
dec
cmpsb
int
aam
jnp
cmpl
dec
in
enter
sar
stos
pop
pop
hlt
out
lods
jg
cmp
cmpsb
in
sub
pop
push
cmp
into
repnz
test
mov
pusha
dec
stos
out
sbb
sub
insb
mov
mov
aaa
je
mov
gs
add
aaa
lret
cwtl
notb
aad
xchg
cmc
jge
jle
insl
inc
mov
out
add
cwtl
adc
mov
mov
aaa
icebp
cmp
les
sahf
pop
daa
lret
and
into
or
xchg
dec
xchg
lods
pop
sbb
fcmovnbe
into
ficoml
or
sbb
and
xchg
sahf
dec
leave
sbb
xor
jp
inc
addr16
mov
adc
pop
rclb
add
div
das
inc
cmp
mov
dec
popa
mov
test
cmpsb
iret
sub
decb
stos
addb
cmp
inc
test
out
clc
mov
add
cld
daa
add
int
xlat
nop
dec
cld
jnp
push
aas
std
or
jmp
lret
es
mov
pushf
adc
sbb
cld
dec
pop
rolb
fisttpl
mov
int3
mov
stos
frstor
bnd
out
mov
pop
stos
or
fnstsw
cmp
xor
sub
jnp
pushf
or
sub
fsubrl
out
in
push
and
xor
cmpl
andl
test
add
adc
ja
in
cli
and
sub
xor
push
ljmp
movsl
lret
inc
adc
mov
and
xor
lret
or
imul
inc
stos
push
sarl
pop
mov
push
in
mov
arpl
jno
test
sub
and
push
aad
sbb
sbb
jl
aaa
mov
xlat
inc
outsb
mov
jecxz
popl
arpl
dec
orb
scas
dec
xchg
mov
pop
adc
mov
ret
iret
cmp
imul
sub
sbb
cmp
sub
stc
sbb
iret
sahf
movsl
lcall
sub
imul
insb
movsb
jg
bound
mov
mov
xor
lods
cmc
and
and
dec
arpl
jg
or
sbb
in
mov
add
idivl
data16
or
cs
and
rcrb
cli
