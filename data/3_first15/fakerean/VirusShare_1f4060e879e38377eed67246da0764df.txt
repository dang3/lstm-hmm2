mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
imul
add
add
mov
xchg
add
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
shl
or
mov
mov
mov
mov
mov
mov
mov
mov
push
push
mov
mov
add
push
call
mov
push
push
mov
mov
mov
mov
movl
mov
add
push
call
mov
add
lea
mov
mov
push
push
mov
push
mov
mov
call
test
je
mov
cmp
je
cmp
je
mov
call
lea
mov
push
push
push
mov
inc
call
test
jne
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
dec
test
jne
mov
test
je
movl
mov
test
je
add
mov
mov
ret
mov
dec
test
jne
mov
test
je
movl
mov
test
je
add
mov
mov
ret
mov
dec
test
jne
mov
test
je
movl
mov
test
je
add
add
mov
ret
mov
dec
test
jne
mov
test
je
movl
mov
test
je
add
mov
mov
ret
mov
dec
test
jne
mov
test
je
movl
mov
test
je
add
mov
mov
ret
mov
dec
test
jne
mov
test
je
movl
mov
test
je
add
mov
mov
ret
test
jne
mov
test
je
movl
mov
test
je
add
mov
mov
ret
xor
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
xor
movl
mov
mov
mov
xor
jo
inc
je
inc
js
inc
jl
xchg
xchg
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
pushf
lds
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
push
mov
mov
test
je
mov
xor
test
setne
mov
mov
xor
push
test
setne
mov
mov
xor
test
setne
mov
cli
mov
leave
setne
mov
mov
xor
test
setne
mov
mov
xor
test
setne
mov
mov
xor
test
setne
mov
mov
xor
test
setne
mov
mov
mov
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
das
int
add
add
xchg
rorl
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
xor
test
mov
setne
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
shr
cmp
jne
cmp
jae
mov
mov
push
push
call
mov
call
pop
ret
xor
mov
push
push
call
mov
call
pop
ret
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
mov
mov
shr
cmp
jne
cmp
jae
inc
and
and
shl
or
mov
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
xor
mov
mov
mov
dec
out
add
mov
mov
movl
mov
mov
mov
mov
pop
ret
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
fldl
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
mov
test
je
mov
push
mov
mov
mov
mov
mov
jmp
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
mov
mov
mov
mov
mov
mov
loope
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
add
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
mov
push
call
mov
test
jne
mov
test
jne
push
mov
movl
call
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
movl
lea
movb
mov
call
push
mov
movb
movl
call
mov
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
jne
mov
mov
push
push
push
push
call
mov
test
je
lea
lea
add
add
add
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
mov
lea
lea
push
push
mov
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
lea
add
push
push
mov
add
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
mov
lea
lea
add
push
push
mov
push
push
call
add
pop
ret
nop
nop
mov
mov
ret
nop
nop
nop
lea
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
call
mov
lea
push
push
call
mov
mov
sub
push
push
push
push
push
lea
call
mov
mov
push
push
push
push
call
mov
or
push
push
push
push
call
mov
call
mov
call
pop
mov
pop
add
ret
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
call
mov
mov
xor
push
test
push
push
setne
push
mov
call
push
push
mov
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
test
je
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
jne
push
lea
call
push
push
mov
call
mov
call
push
push
jmp
push
lea
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
push
push
mov
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
mov
push
push
push
push
call
mov
push
push
push
push
lea
push
push
push
mov
call
push
push
push
mov
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
mov
call
xor
lea
mov
call
mov
mov
push
push
push
push
movb
call
lea
cmp
je
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
lea
push
push
lea
movb
call
lea
movb
call
test
jne
xor
mov
push
call
lea
push
mov
mov
call
push
mov
mov
call
mov
mov
push
push
push
push
call
mov
lea
push
lea
push
push
mov
push
push
lea
push
push
mov
add
push
push
mov
lea
push
push
lea
push
push
mov
mov
call
mov
mov
add
mov
mov
mov
push
call
mov
movl
test
jle
mov
push
lea
call
lea
mov
mov
push
push
push
push
call
cmp
je
push
push
push
mov
call
mov
inc
cmp
jl
lea
push
push
push
mov
call
mov
mov
sub
mov
imul
push
mov
push
push
push
call
mov
test
je
push
call
mov
call
mov
call
lea
movb
call
movl
call
mov
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
push
test
jne
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
mov
jne
test
push
je
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
lea
lea
push
lea
add
add
lea
push
push
call
add
mov
call
pop
ret
test
je
lea
push
lea
push
push
push
call
add
mov
call
pop
ret
lea
lea
push
push
push
call
add
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
push
call
mov
add
add
add
jb
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
push
lea
call
lea
movl
call
cmp
je
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
pop
pop
mov
mov
add
ret
lea
push
push
lea
call
mov
movb
test
jne
lea
push
lea
push
mov
push
lea
push
push
lea
push
push
call
add
jmp
mov
push
push
call
add
test
je
mov
lea
push
lea
push
push
push
call
add
push
mov
call
mov
mov
xor
push
push
push
push
call
test
jle
push
lea
push
push
push
mov
call
mov
push
push
push
push
inc
call
cmp
jl
pop
push
lea
movl
call
lea
mov
mov
push
push
push
push
call
mov
cmp
je
mov
push
push
push
push
call
push
push
push
lea
call
mov
call
lea
movb
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
push
push
push
mov
push
call
lea
test
je
push
mov
lea
push
push
push
push
call
push
lea
push
push
lea
lea
call
mov
movl
test
jne
lea
push
lea
push
lea
add
xchg
lea
push
push
call
add
jmp
mov
lea
lea
push
push
push
call
add
lea
movl
call
test
jne
pop
mov
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
push
lea
mov
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
cmp
jne
mov
mov
add
mov
call
mov
call
lea
mov
call
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
lea
call
push
lea
movb
call
mov
mov
push
push
push
mov
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
movl
mov
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
sub
push
push
mov
xor
cmp
je
push
push
lea
call
push
lea
mov
call
mov
mov
push
push
push
push
call
or
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
cmpl
je
lea
call
mov
push
push
lea
push
push
movb
call
test
je
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
cmp
je
cmpl
jne
mov
mov
lea
movb
call
mov
mov
inc
add
cmp
mov
mov
jb
mov
cmp
je
mov
push
mov
mov
push
push
push
call
mov
call
lea
movl
call
pop
pop
mov
pop
pop
mov
add
ret
nop
mov
test
je
jmp
ret
mov
mov
ret
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
sete
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
cmp
je
mov
lea
push
mov
lea
mov
testb
je
movl
test
je
movl
mov
mov
test
je
mov
testb
mov
je
mov
push
mov
aad
add
jmp
xchg
movsb
add
add
add
pop
je
movl
test
je
mov
testb
je
movl
mov
push
shr
and
mov
mov
call
mov
call
pop
pop
ret
push
mov
cmpl
je
push
push
call
mov
mov
cmp
mov
ja
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
movl
jmp
mov
mov
lea
mov
jmp
mov
mov
lea
mov
mov
mov
lea
lea
mov
neg
sbb
and
or
mov
sub
pop
je
dec
je
dec
mov
lea
je
mov
mov
jmp
mov
movl
jmp
mov
mov
lea
movl
jmp
mov
lea
mov
mov
mov
mov
lea
lea
mov
neg
mov
sbb
and
or
mov
pop
ret
lea
ret
cmp
and
fdivrl
and
push
and
push
mov
mov
test
je
push
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
lock
outsl
jl
add
pop
je
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
pop
enter
ret
add
push
icebp
inc
add
mov
add
add
push
push
push
call
pop
pop
ret
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
xor
test
setne
mov
adc
inc
add
test
setne
add
lea
push
mov
call
push
mov
call
mov
call
pop
ret
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
xor
mov
mov
mov
setne
mov
mov
mov
xor
test
setne
mov
mov
mov
add
push
push
call
add
pop
ret
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
call
mov
test
je
mov
test
jne
mov
test
je
mov
jmp
xor
test
je
mov
test
je
mov
jmp
xor
test
je
mov
scas
enter
pushl
inc
insb
test
je
mov
jmp
xor
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
add
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
mov
call
movl
lea
xor
mov
mov
call
push
mov
movb
movl
mov
mov
mov
inc
fldl
add
pop
jo
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
inc
add
add
inc
jp
add
jo
inc
add
fidivrl
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
mov
mov
mov
mov
cmp
jbe
mov
push
lea
add
mov
lcall
add
inc
add
mov
test
jne
movl
push
mov
call
add
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
mov
push
mov
mov
mov
mov
mov
mov
add
add
add
insb
add
push
push
call
mov
add
cmpl
jne
cmpw
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
or
inc
add
cmp
sete
mov
push
push
mov
call
mov
call
push
push
mov
call
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
xor
movl
mov
mov
and
jo
inc
add
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
add
xchg
ja
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
mov
mov
mov
cmp
jbe
mov
mov
mov
push
mov
mov
cld
rolb
add
lcall
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
mov
test
je
push
call
mov
mov
mov
mov
cmp
jg
test
jge
xor
jmp
cmp
jle
mov
mov
mov
mov
mov
mov
inc
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
xor
mov
push
push
push
push
call
lea
call
push
lea
mov
call
lea
call
movb
mov
push
push
lea
push
push
call
mov
mov
test
je
push
mov
push
push
push
call
inc
cmp
jle
mov
push
push
push
push
call
test
je
mov
push
push
push
push
call
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
cmp
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
push
push
push
call
mov
mov
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
push
push
call
test
jl
mov
lea
push
push
call
test
je
lea
push
push
call
add
lea
push
call
lea
movl
push
call
test
jl
mov
test
je
mov
mov
push
push
call
mov
push
mov
call
pop
pop
add
ret
push
push
push
push
call
mov
lea
test
push
push
setne
push
push
mov
mov
call
add
test
je
xor
call
mov
pop
pop
ret
mov
push
push
push
call
add
test
jne
xor
mov
push
call
call
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
push
lea
movl
call
lea
xor
mov
movl
movl
mov
mov
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
mov
movl
lea
movl
mov
lea
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
mov
lea
movb
call
mov
movb
call
lea
add
lea
movb
call
lea
movb
call
mov
movb
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movb
call
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
push
push
push
push
mov
lea
push
call
push
push
push
push
push
call
mov
mov
add
test
je
push
push
call
add
push
call
lea
mov
xor
mov
push
push
rep
push
call
push
push
push
push
push
call
mov
add
test
je
push
push
push
push
call
add
push
call
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
push
call
mov
mov
add
test
je
lea
push
push
push
call
add
push
call
mov
push
push
push
inc
push
push
mov
call
mov
add
test
je
push
add
push
push
push
call
add
push
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
push
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
call
add
test
jne
mov
mov
push
push
push
call
mov
add
push
call
pop
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
push
push
push
mov
push
movl
call
mov
add
test
mov
je
lea
push
push
push
call
mov
add
push
call
lea
push
push
push
push
movl
call
add
test
jne
mov
lea
push
push
push
push
call
add
mov
mov
push
call
test
pop
je
mov
mov
cmp
je
lea
push
call
add
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
mov
call
mov
test
je
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
lea
movl
call
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
push
mov
mov
call
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
call
mov
test
jne
movl
jmp
movl
add
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
cmp
mov
jne
lea
mov
push
push
push
push
push
push
push
push
push
call
test
jne
mov
test
je
mov
push
mov
call
xor
pop
ret
cmp
jne
mov
mov
push
push
push
lea
push
push
mov
push
push
mov
push
push
mov
movl
call
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
push
mov
mov
call
mov
push
push
push
test
push
mov
jne
lea
test
je
mov
test
je
mov
push
call
xor
jmp
mov
call
lea
lea
push
push
mov
call
mov
call
mov
lea
push
lea
push
push
push
push
push
movl
call
push
call
push
mov
call
test
jne
cmpl
jne
mov
mov
mov
lea
mov
jmp
movl
mov
mov
call
cmp
jne
mov
call
push
push
push
push
push
push
call
add
push
push
push
push
push
push
call
push
call
push
mov
call
xor
jmp
cmp
jne
lea
call
mov
movl
test
jne
mov
push
push
call
or
test
je
push
push
lea
call
push
mov
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
jmp
push
push
lea
call
mov
push
mov
push
push
call
or
lea
push
call
mov
push
push
push
push
push
call
add
cmp
jne
mov
push
push
call
test
je
push
push
lea
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
push
push
call
test
jne
call
mov
push
push
push
push
push
push
push
push
push
call
mov
call
lea
mov
call
xor
jmp
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
movl
movl
movl
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
push
mov
push
call
mov
pop
test
setne
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
and
push
mov
call
inc
add
xchg
add
add
call
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
push
push
call
mov
mov
call
inc
add
add
jne
mov
push
mov
call
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
push
mov
call
mov
call
add
push
push
push
push
call
mov
call
mov
pop
ret
push
mov
call
test
jne
pop
ret
mov
call
mov
push
call
add
test
jne
mov
test
jne
xor
pop
ret
mov
pop
ret
nop
nop
nop
push
mov
push
call
inc
add
add
add
rolb
int
add
stos
add
mov
call
inc
add
call
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
neg
sbb
neg
cmp
je
mov
mov
call
pop
ret
nop
push
mov
call
mov
call
inc
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
add
lea
call
neg
sbb
push
neg
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
pop
add
ret
sub
push
mov
push
push
lea
push
push
call
mov
add
test
je
push
mov
xor
lea
rep
push
lea
push
push
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
setne
push
lea
call
push
call
add
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
mov
and
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
inc
add
sbb
and
xchg
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
mov
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
call
ret
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
cmpl
jne
mov
test
je
push
mov
push
push
push
lea
push
push
and
push
push
mov
mov
push
call
mov
push
call
pop
ret
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
cmp
push
mov
jb
cmp
jb
cmp
jb
cmp
jae
mov
mov
cmp
je
pop
pop
mov
pop
ret
cmp
jb
cmp
jae
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
pop
pop
pop
ret
add
cmp
ja
jmp
mov
test
jne
pop
pop
mov
pop
ret
pop
movl
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
push
mov
call
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
mov
mov
push
push
mov
call
pop
pop
xor
pop
ret
mov
test
je
mov
cmpl
jb
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
movl
mov
push
movl
test
push
je
mov
push
push
add
push
push
call
add
jmp
mov
mov
push
push
push
call
add
mov
test
je
mov
mov
push
push
mov
call
test
je
mov
mov
push
push
push
call
add
push
push
call
add
sub
je
sub
je
movl
push
movl
call
mov
add
pop
pop
pop
pop
ret
push
movl
movl
call
mov
add
pop
pop
pop
pop
ret
movl
push
call
add
mov
pop
pop
pop
pop
ret
mov
mov
call
pop
pop
xor
pop
ret
mov
test
je
cmpl
jb
mov
test
jne
pop
pop
mov
pop
ret
mov
mov
push
mov
call
mov
pop
pop
xor
pop
ret
mov
mov
cmp
jb
mov
mov
mov
push
mov
call
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
xchg
and
pop
and
fcompl
and
pop
and
jmp
pop
and
jbe
and
sbbl
xchg
pop
and
enter
mov
push
mov
mov
mov
test
jne
call
mov
mov
mov
test
jne
call
mov
mov
mov
test
je
push
call
add
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
xor
push
mov
push
mov
push
mov
mov
rep
mov
test
jne
mov
mov
mov
rep
pop
pop
pop
add
ret
mov
push
mov
mov
lea
mov
mov
mov
sub
mov
mov
mov
mov
sub
sub
mov
mov
lea
add
mov
movl
jmp
mov
mov
mov
add
add
push
mov
push
mov
mov
mov
mov
push
push
call
mov
mov
add
add
push
push
mov
mov
push
push
call
mov
mov
sub
mov
mov
sub
movl
jmp
mov
mov
add
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
add
mov
mov
add
mov
add
mov
dec
mov
mov
jne
lea
movl
mov
lea
mov
mov
sub
sub
movl
mov
lea
mov
mov
mov
lea
add
mov
mov
mov
dec
mov
jne
mov
mov
mov
mov
add
mov
add
cmp
mov
mov
jl
mov
lea
pop
mov
add
add
cmp
mov
mov
jl
mov
pop
mov
pop
pop
add
ret
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
mov
test
je
mov
test
je
push
mov
xor
lea
rep
mov
mov
mov
mov
lea
push
push
push
mov
call
lea
push
push
call
add
add
lea
mov
push
push
sub
push
push
lea
push
push
push
push
push
call
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
test
push
jne
mov
pop
mov
pop
ret
mov
test
movw
movw
jbe
push
mov
push
mov
push
push
push
call
push
push
push
call
add
add
dec
jne
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
push
xor
test
jbe
mov
mov
test
jle
mov
push
push
push
call
add
test
je
jmp
cmpw
je
inc
add
cmp
jb
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
nop
push
push
push
mov
push
cmpw
jne
add
cmpw
je
mov
mov
push
push
call
mov
add
test
mov
jne
push
push
call
add
mov
mov
mov
sub
sar
cmp
jbe
mov
mov
mov
push
push
push
push
call
add
test
jne
mov
lea
lea
lea
mov
lea
mov
shr
rep
mov
and
rep
mov
add
lea
mov
lea
movw
mov
inc
mov
mov
cmp
jae
mov
cmpw
mov
jne
lea
cmpw
jne
pop
pop
pop
pop
ret
nop
mov
push
mov
xor
mov
push
push
push
rep
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
mov
push
mov
and
push
push
push
push
push
call
mov
add
and
test
je
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
lea
push
push
call
mov
lea
push
push
add
push
push
call
push
lea
push
push
push
call
add
and
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
mov
push
push
push
push
push
call
mov
push
lea
push
push
and
call
push
lea
push
push
push
call
lea
lea
push
lea
movl
lea
lea
push
push
movl
movl
call
lea
push
lea
push
push
call
add
add
lea
push
push
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
test
je
push
push
push
call
add
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
cmp
jne
mov
mov
push
push
push
push
mov
push
push
push
push
push
call
ret
mov
mov
push
push
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
movl
call
test
jne
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
mov
pop
pop
mov
mov
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
mov
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
mov
call
test
je
pop
pop
xor
pop
pop
ret
cmpl
je
pop
pop
xor
pop
pop
ret
mov
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
sub
push
push
push
call
add
add
nop
mov
xchg
cltd
lock
jecxz
add
jno
add
add
xchg
mov
xchg
mov
addr16
add
add
inc
in
push
lea
push
lea
push
call
movsb
push
add
mov
addr16
add
add
scas
repnz
add
adc
pushf
add
loope
fcompl
mov
lods
pop
loope
rcl
std
add
add
add
jns
mov
out
stos
std
jnp
mov
mov
mov
jo
popf
jbe
int
push
hlt
lcall
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
jns
add
add
call
add
add
xorb
aad
add
out
jns
mov
mov
out
in
pop
ret
repnz
ja
out
scas
mov
sub
pop
push
push
lea
push
push
push
push
push
push
push
call
add
mov
int3
add
xchg
push
scas
mov
shll
jle
mov
add
mov
fwait
cmpsb
add
hlt
add
add
mov
sti
jb
add
mov
mov
add
jns
je
mov
add
xchg
rolb
pop
push
push
push
push
lea
push
push
push
lea
push
call
add
add
lods
cli
mov
add
push
ret
add
aad
pusha
mov
add
mov
loope
sarb
pop
fsubrl
add
lods
add
add
add
cmpsl
add
add
add
out
arpl
add
add
add
sarl
or
add
push
push
push
push
push
push
push
push
push
push
call
leave
add
fwait
xchg
push
push
pop
out
add
xchg
add
mov
icebp
mov
pushf
add
data16
rolb
fcoms
lods
sub
pop
call
push
push
push
push
call
jo
add
add
add
stc
int
add
addb
mov
pop
stos
add
movsl
mov
mov
rolb
pop
xlat
lods
pop
push
add
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
add
push
add
popf
enter
lahf
add
mov
ja
add
scas
testb
testb
mov
in
lahf
cltd
fs
add
bound
mov
mov
in
fcomps
push
push
push
push
push
push
push
lea
push
call
add
jns
push
lods
lcall
out
add
add
test
cmc
xchg
pop
stos
jp
imul
add
pop
add
inc
hlt
mov
push
lea
push
call
out
add
add
add
add
mov
mov
fdivr
add
jo
push
jns
jns
add
test
add
add
shr
jne
sarb
mov
mov
clc
popf
popa
mov
in
clc
lcall
pop
in
push
push
lea
push
push
call
xchg
add
lods
add
add
xchg
add
dec
jbe
add
push
add
add
sub
pop
add
add
push
push
push
push
push
push
push
push
push
push
call
mov
into
std
add
add
cmp
add
jecxz
cld
add
add
jge
popf
pop
pop
int
enter
scas
jnp
xchg
add
add
fsubl
pop
push
lret
push
jmp
mov
add
jns
add
xchg
add
add
outsl
cwtl
pop
popa
add
lcall
pop
add
push
push
push
lea
push
lea
push
call
mov
lods
mov
add
fldl
mov
hlt
jl
add
nop
jecxz
lods
add
jne
popf
mov
mov
mov
sub
pop
xor
push
push
call
sarb
xlat
mov
and
mov
add
add
add
mov
add
add
pop
add
in
xchg
sub
pop
add
push
push
lea
sub
add
push
push
pop
add
lea
lea
sub
lea
lea
pop
add
shl
ror
dec
pop
push
push
push
push
push
call
je
lahf
add
addb
add
pusha
in
add
xchg
in
jb
pop
lret
add
jge
idivb
fildll
push
out
add
mov
add
add
lcall
jne
push
lea
push
call
add
std
push
add
mov
loop
mov
xlat
push
add
pop
fadds
push
push
or
add
add
sub
pop
call
mov
push
push
push
push
push
lea
push
push
push
call
jo
jae
jns
in
movsl
xchg
cmpsl
mov
ret
enter
add
scas
pop
fwait
add
add
add
ljmp
popf
add
add
cmc
mov
add
lcall
inc
call
jne
call
testb
add
add
outsl
enter
add
out
add
push
jmp
out
icebp
add
push
xchg
mov
scas
sub
pop
push
pushl
push
push
push
push
push
push
push
call
data16
outsl
push
add
cltd
add
add
add
add
add
imul
jle
add
add
enter
sti
int3
stos
jmp
add
mov
add
stos
ljmp
add
add
add
add
mov
in
in
pushl
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
add
xchg
or
push
pop
cld
add
lods
push
fwait
xlat
add
pop
jl
fnstcw
pusha
fildl
add
mov
mov
add
movsb
sub
pop
call
push
push
push
push
push
lea
push
push
lea
push
call
cmpsl
imul
xchg
add
mov
scas
add
jnp
mov
add
scas
fwait
lret
add
add
not
add
mov
in
add
sti
pop
mov
fadd
nop
add
mov
fwait
je
mov
add
in
loopne
lcall
jne
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
pop
int
add
ficompl
push
fs
stos
add
test
incb
add
scas
add
xlat
add
add
ljmp
add
xchg
xchg
sub
pop
pushl
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
stos
fiadds
add
aam
imul
in
fadds
lods
add
outsl
add
xchg
add
pop
add
pusha
add
add
mov
out
loop
notb
mov
add
cli
mov
add
lcall
daa
add
push
push
xor
inc
rol
lea
push
or
inc
add
shr
sub
sub
xor
inc
pop
add
pop
push
push
push
push
lea
push
push
push
push
call
add
aad
add
add
je
rolb
add
add
add
add
jbe
xchg
mov
loopne
addb
insb
xchg
add
out
jnp
xchg
fcmovu
add
add
ljmp
push
cmpsl
add
lcall
jne
push
push
push
push
push
call
add
test
add
add
jmp
out
push
add
add
les
add
test
pop
add
add
push
aad
add
pop
jmp
add
add
sub
pop
call
push
push
push
call
out
add
sahf
rorl
add
add
pop
add
fstpt
fadd
test
add
mov
xchg
mov
add
mov
mov
fcmovnbe
add
inc
push
push
not
push
and
add
shl
sub
add
sub
pop
shl
pop
push
push
lea
push
lea
push
push
push
push
call
mov
add
les
add
mov
add
add
lahf
jl
outsl
add
outsl
aad
testb
cmpsl
add
in
in
push
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
jb
popf
xchg
pop
jp
cli
cltd
mov
push
cmc
push
out
lds
jb
cwtl
lds
add
fcomps
rorb
mov
hlt
push
lea
push
call
add
xchg
je
add
mov
mov
mov
add
cmc
cmpsl
push
mov
pop
add
mov
mov
push
add
add
add
add
lcall
push
push
lea
push
lea
push
push
call
add
add
add
add
mov
loop
jge
cld
jns
lods
incb
xchg
jl
add
add
jmp
enter
add
out
add
fbld
testb
js
mov
jne
add
add
jo
in
in
lcall
mov
push
lea
push
lea
push
call
add
mov
pop
xchg
add
add
add
stc
sti
xchg
pop
mov
xorb
mov
add
add
test
mov
mov
lock
pusha
pop
call
ret
mov
add
add
out
pushf
sub
pop
add
push
push
lea
push
push
push
push
call
add
add
mov
ficomps
lret
jp
add
add
in
add
cmpsl
add
jo
test
mov
stc
mov
jmp
pop
add
add
add
out
push
scas
fadds
add
imul
sub
pop
add
push
push
push
call
add
insb
icebp
add
lds
mov
in
xchg
add
mov
fnstsw
add
mov
les
in
hlt
lcall
ret
movsl
dec
add
push
push
push
call
loope
rclb
mov
imul
mov
ja
add
scas
add
add
push
pop
out
add
stc
push
mov
add
test
add
mov
rolb
add
ror
sarb
in
hlt
pop
mov
xor
push
push
push
push
push
push
push
push
push
push
call
test
pusha
int3
mov
add
cltd
in
add
add
lods
add
jnp
add
add
add
subb
pop
add
testl
add
xchg
test
call
hlt
xchg
insb
test
lods
imul
in
pop
add
icebp
fsubrs
imul
mov
add
add
cmpsb
imul
lcall
mov
push
push
push
push
push
call
pop
add
popf
shll
lret
pop
shl
popa
mov
push
add
enter
fiaddl
je
imul
lcall
popf
push
imul
push
add
shll
mov
arpl
addl
mov
pop
test
loopne
jl
sub
pop
xor
push
push
call
push
lea
shlb
add
fnsave
push
add
scas
add
flds
pop
jle
add
lcall
les
push
lea
push
push
push
push
push
push
call
add
add
add
int
add
enter
add
fiaddl
cwtl
add
add
scas
popf
test
aam
sti
add
add
add
add
sub
pop
add
push
push
push
push
call
call
pop
add
iret
add
movl
add
add
lea
pop
fiaddl
lret
add
sbb
pop
jecxz
mov
add
ljmp
fadds
mov
mov
out
fnsave
fldl
pop
pop
lcall
lcall
mov
xor
push
lea
push
push
push
call
add
mov
add
lahf
fiaddl
jne
fildl
add
loope
add
fldl
add
int
add
sti
sarl
lock
lcall
mov
push
push
push
push
call
add
pop
push
hlt
enter
add
scas
add
std
popa
jne
mov
scas
add
loop
aam
add
shll
outsl
out
add
rcr
add
lret
loop
add
stc
add
lcall
push
out
leave
loope
xchg
add
add
mov
hlt
pop
xor
push
push
push
lea
push
call
rcrl
add
add
add
sahf
xchg
xchg
mov
add
add
push
add
cli
add
les
add
add
mov
add
in
lock
add
push
push
push
push
push
call
jnp
jle
add
jge
mov
stos
xchg
jo
add
add
jnp
add
iretw
mov
push
add
ficompl
outsl
add
jbe
add
add
imulb
pop
mov
test
testb
in
add
iret
add
cmpsl
jo
push
movsb
add
in
in
lcall
enter
leave
lea
push
push
push
lea
push
call
nop
add
add
push
pop
out
les
insb
push
add
add
xchg
popa
enter
mov
add
add
push
fiaddl
add
sub
pop
pop
push
push
push
push
push
push
push
push
lea
push
call
xchg
add
xchg
add
into
mov
lods
add
add
add
add
stos
add
add
add
add
mov
push
stc
push
into
add
fistpl
mov
push
mov
xchg
xchg
mov
aad
add
movsb
pop
push
push
push
push
push
call
add
jle
add
xchg
xchg
shll
cmc
add
mov
add
push
loop
stc
add
data16
pop
faddl
jne
push
in
jl
fdivp
pop
add
rol
add
out
xchg
add
jae
add
jnp
add
add
mov
add
mov
fadds
sub
pop
mov
push
lea
push
call
fwait
add
ret
pop
add
jge
ret
ja
add
out
add
add
add
add
shrb
clc
pop
add
push
push
lea
push
push
push
push
push
push
call
lds
lds
add
add
add
xlat
add
push
push
lcall
in
xchg
pop
lcall
mov
pop
out
add
gs
in
mov
xchg
out
add
stos
aad
in
cmpsb
sti
sti
add
mov
xchg
add
pop
add
push
push
lea
push
lea
push
lea
push
push
push
call
push
add
arpl
fiadds
xchg
add
pop
add
pop
mov
push
add
ljmp
xlat
mov
add
out
cltd
jmp
add
add
add
lret
outsl
add
push
bound
aam
clc
scas
gs
popa
add
fldl
add
xchg
add
data16
mov
pop
add
push
lea
push
lea
push
call
jl
add
ror
add
mov
sti
add
add
xchg
add
add
iret
mov
add
test
repnz
add
faddl
neg
mov
xchg
mov
test
add
xchg
push
jne
mov
xchg
mov
add
xchg
push
jns
pop
sti
xchg
sub
pop
mov
xor
push
push
push
push
push
push
push
call
repnz
add
push
test
lods
add
loopne
add
lcall
mov
add
jle
lret
fstps
movl
mov
add
testl
sub
pop
mov
xor
push
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
movsl
mov
push
pushf
add
loope
out
stos
add
test
lcall
addb
popa
add
fnstenv
je
roll
popf
int3
add
add
ljmp
pop
fistpl
mov
push
mov
mov
xchg
add
mov
loopne
mov
lcall
dec
sub
push
push
push
push
lea
push
call
add
xchg
add
pushf
add
shrl
mov
add
add
add
push
addb
add
fnstcw
xchg
add
add
mov
enter
mov
add
add
xchg
add
imul
pop
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
push
call
repnz
imul
add
add
add
iret
mov
rolb
xchg
jno
out
shl
scas
js
add
iret
add
add
add
addb
add
add
out
fdiv
add
fdivr
lcall
rcll
push
push
push
call
add
testb
mov
add
add
ja
js
pop
out
addr16
add
movl
add
out
lock
cmpsl
add
add
add
push
data16
mov
mov
mov
faddp
add
add
add
lcall
fsubrs
pop
mov
xor
les
leave
push
or
inc
add
inc
inc
rol
ror
sub
lea
inc
shl
pop
inc
dec
pop
push
push
lea
push
push
lea
push
lea
push
call
pop
xorb
add
add
mov
push
add
add
pop
movsb
cmpsb
xchg
add
xchg
adc
pop
mov
pop
add
add
call
add
stc
or
add
add
mov
mov
add
mov
in
call
pushl
push
push
lea
push
push
call
xchg
add
add
pop
mov
testl
imul
ja
out
add
ret
add
test
not
mov
add
out
jns
in
add
add
mov
lock
call
push
push
push
lea
push
push
call
fcomi
lret
mov
cmpsl
pop
add
xchg
pop
xchg
mov
add
popl
jo
add
add
aam
stc
enter
sti
add
adc
pop
add
mov
pop
add
push
lods
les
pop
push
shrl
add
pop
xchg
xlat
mov
in
in
pop
push
push
push
sub
push
push
pop
add
shl
inc
sub
sub
xor
sub
sub
not
pop
add
shr
pop
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
xchg
je
fildl
mov
xchg
xlat
fldl
pop
add
push
add
add
mov
ficoms
mov
sub
pop
push
push
sub
xor
pop
push
call
push
push
lea
push
push
push
push
call
mov
iret
push
add
pusha
les
add
add
in
push
mov
pop
out
jle
ret
test
mov
call
push
lea
push
call
add
add
popa
add
shlb
add
xchg
mov
jae
mov
bound
cmpsb
add
add
shrl
add
add
push
jo
push
mov
add
mov
mov
mov
pop
push
push
push
lea
push
push
call
add
jmp
les
mov
add
je
add
add
pop
mov
add
add
sbbl
shr
int
loope
xchg
add
movsl
add
jl
cld
add
ret
add
sub
pop
push
mov
push
dec
pop
add
push
dec
sub
pop
add
push
lea
push
lea
push
push
lea
push
lea
push
call
add
push
cmpsb
imul
add
mov
pop
pushf
les
jle
movsl
stos
js
add
add
add
mov
jle
xchg
add
roll
cltd
xchg
fiaddl
mov
xchg
add
fiaddl
fadds
nop
add
in
add
sub
pop
add
push
push
lea
push
push
call
mov
mov
add
add
add
mov
push
lcall
xchg
arpl
pop
add
std
add
xchg
add
add
add
ljmp
add
push
rolb
jge
sub
pop
mov
xor
push
xor
pop
add
push
lea
add
pop
push
push
lea
push
push
push
push
push
lea
push
call
fildl
nop
add
ljmp
add
add
fildl
add
push
lds
addr16
insb
add
add
mov
push
add
add
mov
lcall
pop
les
xchg
mov
mov
pushf
mov
js
fcoms
in
in
mov
push
push
push
push
push
lea
push
push
lea
push
push
push
push
call
js
mov
xchg
mov
shl
add
jbe
add
pusha
addl
sahf
add
iret
jle
add
testb
add
mov
add
out
adcl
add
out
add
add
lret
pop
jae
xchg
add
add
jb
pop
sub
pop
xor
push
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
add
les
lret
ljmp
add
int
mov
jecxz
xchg
sub
pop
add
push
push
push
push
lea
push
push
push
push
lea
push
call
pop
bound
popa
addr16
add
fldl
f2xm1
add
xchg
add
pop
pop
mov
hlt
mov
cld
lods
bound
add
push
add
add
mov
add
fiaddl
and
push
divb
jns
in
fcompl
lock
push
push
push
push
call
nop
add
add
add
mov
pusha
add
jmp
stc
lods
addb
lcall
icebp
add
add
add
add
pop
lahf
add
into
mov
add
xchg
mov
sub
pop
mov
xor
push
push
lea
push
push
push
call
add
add
add
in
jmp
bound
add
cmpsb
add
aad
out
stc
xchg
add
lock
add
mov
scas
mov
pop
rcl
add
mov
xchg
add
mov
push
xchg
add
push
add
mov
add
add
in
in
lcall
movsb
push
push
push
push
push
call
mov
pop
push
fwait
add
movsl
add
shrl
add
push
add
mov
jae
mov
ljmp
add
add
push
add
push
add
fs
jmp
aad
lahf
pop
add
lcall
dec
and
icebp
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
add
xor
push
mov
add
add
mov
mov
xchg
add
add
cld
push
mov
fildl
mov
add
xchg
lcall
mov
orl
in
addb
add
pop
scas
loopne
mov
test
mov
fwait
jno
in
fdivr
lcall
leave
je
push
sub
pop
mov
xor
push
push
push
push
call
add
add
lods
mov
add
jl
fincstp
mov
in
add
push
js
add
out
shr
in
add
insb
loop
movl
mov
sahf
add
add
roll
in
add
sub
pop
mov
push
push
push
push
call
add
add
lea
add
mov
aam
add
nop
add
add
add
push
xchg
xchg
add
int
fstps
add
add
insb
popf
out
stos
add
add
je
pop
mov
add
leave
jp
mov
roll
add
mov
sahf
xchg
lcall
adc
push
push
push
push
call
add
xchg
mov
add
push
pop
test
fildl
nop
incb
incb
add
add
lods
add
mov
add
sti
add
add
fstl
add
add
add
lock
add
add
mov
add
test
pop
add
push
inc
ror
pop
add
add
push
lea
push
push
push
push
push
call
add
add
lahf
add
add
add
in
lcall
add
add
jns
fiadds
fadds
mov
add
insb
mov
add
imul
xchg
scas
sub
pop
push
push
push
lea
push
push
call
add
mov
add
add
xlat
add
pop
movl
mov
popf
add
add
mov
lret
ljmp
add
add
add
add
outsl
add
lret
lret
pop
add
add
mov
lea
lcall
inc
or
push
add
pop
add
push
push
push
lea
push
call
mov
addb
imul
mov
mulb
add
add
ja
add
mov
roll
jl
lods
xchg
aad
hlt
add
leave
in
add
lock
lcall
rep
push
lea
xor
pop
mov
push
push
lea
push
push
call
hlt
add
add
out
hlt
xchg
add
xchg
mul
pop
mov
mov
jno
cltd
les
loop
outsl
add
add
sbb
push
addl
jge
jne
mov
add
popl
movsl
add
add
pop
add
ja
in
hlt
lcall
or
push
lea
push
push
push
push
call
add
add
add
add
jl
stos
roll
xchg
fwait
pop
cmpsl
rolb
add
in
add
fdivr
pop
jbe
cmpsl
jmp
aam
add
mov
jb
lods
cltd
add
mov
scas
add
xchg
lcall
les
sub
pop
or
je
push
push
push
push
push
call
jns
mov
outsl
add
testb
mov
popf
add
push
add
loope
xlat
xlat
loope
mov
aad
cli
push
add
lcall
repz
push
shr
xor
pop
rep
push
push
call
xchg
add
faddl
test
add
mov
add
add
add
repnz
ljmp
add
notl
fisubrl
cwtl
data16
add
add
in
clc
pop
pop
push
push
rol
push
sub
add
sub
sub
shr
shl
sub
pop
dec
lea
pop
push
xor
lea
rol
dec
pop
pop
push
add
add
pop
mov
mov
push
push
push
call
fistpll
add
mov
popf
jecxz
lcall
add
aad
add
add
cld
cltd
mov
leave
add
sti
add
pusha
xchg
js
mov
push
imul
lock
pop
mov
push
pop
jmp
push
push
lea
push
call
xchg
jno
jle
in
xchg
addl
in
pop
add
mov
add
call
imul
add
popf
jmp
in
add
scas
test
lock
test
addw
in
add
add
lcall
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
sbbl
add
add
add
add
cltd
add
add
fisubrs
pop
add
add
add
add
sub
pop
mov
push
lea
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
loop
add
add
roll
lock
add
pop
add
mov
movsl
xchg
out
add
xchg
std
lahf
loopne
xor
mov
lcall
cld
push
push
shr
not
pop
push
push
sub
pop
push
push
push
call
add
mov
popa
gs
out
leave
add
addl
add
jp
pop
testl
add
mov
add
xorl
push
sub
sub
ror
add
pop
pop
push
xor
shr
sub
xor
pop
pop
pop
push
push
push
push
push
push
lea
push
call
jo
add
in
test
add
fadds
push
mov
mov
add
add
add
xchg
add
add
outsl
lcall
and
out
add
int3
andl
sub
pop
pop
leave
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
ret
push
adcl
add
mov
pop
pop
cmpsb
ljmp
lahf
js
movsl
mov
addb
notb
add
jae
shrb
push
stos
call
add
add
mov
in
addb
out
mov
add
sub
pop
ret
push
push
push
push
lea
push
push
push
push
push
push
call
out
add
add
mov
add
jno
mov
mov
fwait
clc
je
add
testl
add
add
pop
cltd
in
pop
push
mov
cli
leave
roll
add
add
adcb
icebp
mov
add
shl
mov
stos
popl
pushf
sub
pop
push
mov
push
not
dec
shr
pop
add
push
push
rol
add
pop
push
push
push
not
inc
pop
push
push
rol
add
xor
pop
movl
push
push
lea
push
call
test
add
icebp
sti
add
pop
lods
lcall
aad
cltd
popa
jp
xchg
jbe
lahf
add
fs
out
mov
mov
cli
loop
jmp
fadds
loopne
cltd
pusha
add
int
testl
cwtl
push
in
hlt
lcall
inc
clc
incl
add
add
addr16
push
push
lea
push
push
call
push
int3
mov
xchg
xchg
rorl
nop
fiaddl
add
arpl
fldl
ja
mov
mov
movsb
add
add
popf
pop
sub
pop
mov
pop
push
push
push
push
lea
push
push
push
push
push
call
mov
xchg
test
scas
add
add
mov
add
add
rolb
push
lea
mov
add
je
icebp
mov
add
add
add
push
add
fdiv
lahf
add
sbb
mov
jns
int
mov
push
popa
out
aad
in
fcompl
push
lea
push
push
push
lea
push
push
push
push
call
stos
add
add
jno
add
add
add
test
lods
mov
mov
rolb
jmp
fcompl
lea
add
add
jmp
add
add
mov
hlt
add
scas
jno
in
mov
mov
in
loopne
lcall
push
sub
pop
pop
push
inc
add
pop
leave
ret
push
inc
pop
push
push
lea
push
push
call
add
add
add
jns
add
add
add
fildl
mov
add
xchg
add
subb
add
add
mov
loopne
test
addl
add
push
fistl
pusha
jb
add
add
lret
jno
add
add
add
hlt
pop
mov
push
shr
add
pop
add
push
push
push
push
push
push
lea
push
push
call
in
add
add
add
lock
add
mov
jbe
mov
arpl
repnz
push
out
add
add
add
sbb
add
mov
testb
mov
mov
in
loopne
lcall
push
not
sub
inc
pop
push
push
push
push
push
push
push
push
call
add
nop
lods
test
scas
add
out
pop
add
add
mov
mov
add
jp
add
popa
stos
add
shlb
in
call
sbb
cmp
or
push
lea
push
push
call
loope
add
jl
je
add
pop
pop
push
enter
push
mov
add
add
mov
mov
cmpsl
pusha
add
add
out
shrb
lcall
inc
cld
add
add
push
ror
rol
pop
addl
push
push
lea
push
push
push
push
push
lea
push
push
call
js
subb
je
mov
mov
add
pop
xchg
add
add
pop
xchg
add
js
add
roll
add
push
add
fwait
jle
mov
add
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
pop
add
add
add
add
cmc
add
in
lds
mov
add
movsb
jnp
mov
push
add
sub
pop
call
mov
push
sub
pop
pushl
push
rol
xor
sub
lea
pop
push
push
xor
sub
pop
push
push
push
lea
push
push
call
test
popf
in
jne
imul
push
add
addr16
add
xlat
add
mov
jne
add
xchg
jo
add
pushf
xchg
jne
add
insb
int
mov
jbe
lcall
mov
add
add
mov
add
add
filds
lcall
je
call
ret
movsb
xor
rcrl
jge
add
test
lcall
push
push
push
push
push
call
push
aam
add
jns
xchg
add
repnz
test
add
lahf
pusha
xchg
add
xchg
mov
sti
add
mov
pop
in
in
add
add
cld
add
add
cld
add
test
add
add
addb
pop
pop
push
push
push
lea
push
push
call
mov
fistpl
add
data16
add
add
xchg
add
movsb
add
in
repnz
add
adc
mov
add
add
mov
add
add
add
push
add
int3
imul
sub
pop
pop
push
pop
pop
push
pop
leave
ret
push
inc
pop
push
mov
push
lea
push
push
push
lea
push
call
add
push
mov
mov
add
ficompl
add
add
add
add
xchg
xchg
sahf
add
jns
jmp
in
in
pop
add
push
push
call
mov
mov
jbe
add
add
shll
hlt
mov
imul
xlat
add
add
add
shlb
movsl
mov
mul
add
sub
pop
push
push
sub
pop
push
push
push
lea
push
push
push
lea
push
call
jl
xchg
popf
add
fs
mov
jo
lcall
add
js
out
add
add
add
add
add
scas
mov
pusha
add
add
add
add
add
mov
mov
add
cmc
mov
stc
hlt
leave
sub
pop
push
push
push
push
push
lea
push
push
call
sti
add
add
call
out
in
add
jl
add
add
stos
push
push
xchg
add
lret
imul
les
mov
addb
add
jb
test
jmp
add
add
jp
mov
jnp
addl
add
test
inc
cld
or
add
push
push
push
push
push
push
push
lea
push
push
push
call
out
out
add
xchg
add
add
add
test
lea
popf
xchg
sarb
scas
push
add
movsb
add
mov
loopne
lods
clc
xchg
enter
jae
outsl
mov
fcompl
sub
call
out
add
rol
sub
pop
push
call
push
push
push
lea
push
push
push
push
push
call
xchg
popa
fwait
ret
arpl
test
jb
movl
add
add
xchg
mov
lods
jge
test
mov
movl
jns
iret
mov
stos
movsl
add
jae
add
mov
sub
pop
subl
push
shr
pop
cmpl
jne
push
rol
rol
rol
not
pop
pop
push
rol
pop
pop
pop
push
add
xor
not
pop
pop
push
lea
pop
leave
push
inc
shr
not
pop
ret
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
add
xchg
movl
add
in
add
testb
mov
popa
xchg
add
sbbb
repnz
push
iret
add
cli
stc
lret
jnp
ljmp
add
sub
pop
push
push
sub
add
pop
mov
push
push
push
call
push
add
lcall
xchg
into
mov
pushf
mov
add
lds
add
add
push
add
lods
add
add
call
add
in
add
in
hlt
lcall
cld
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
shlb
nop
add
add
mov
fwait
add
add
jb
lahf
xchg
shlb
cmpsb
iret
addb
add
pop
push
movl
pop
jge
add
fcomps
push
xor
rol
shl
pop
push
push
rol
shl
inc
dec
pop
push
push
push
push
shl
xor
push
sub
add
xor
add
sub
sub
sub
shl
rol
not
pop
shr
xor
not
inc
pop
push
push
push
push
push
lea
push
push
push
push
lea
push
call
mov
js
cmpsb
in
mov
imul
fiadds
test
sti
add
pop
mov
mov
fst
outsl
sti
xchg
mov
cmp
add
imul
lcall
jne
call
push
ror
shr
sub
add
pop
call
push
push
ror
not
push
push
pop
add
add
lea
not
rol
sub
shl
xor
inc
pop
sub
ror
pop
push
sub
pop
pushl
push
push
lea
push
push
push
push
call
add
popa
fildl
arpl
fwait
xchg
fnsave
add
add
scas
aad
sar
mov
add
jl
add
xchg
add
in
call
add
call
push
push
add
xor
push
push
pop
add
lea
shr
sub
not
dec
inc
pop
add
add
add
rol
pop
push
rol
rol
rol
lea
pop
pushl
push
push
push
call
xchg
add
add
fcomip
mov
xchg
add
pop
push
add
add
addl
add
lret
add
lock
xchg
lcall
sub
pop
call
push
pop
call
push
push
dec
inc
ror
sub
push
xor
add
add
shl
sub
add
shl
rol
inc
pop
lea
pop
push
ror
ror
pop
pushl
push
push
push
push
lea
push
call
xchg
nop
add
add
mov
out
add
add
ja
add
add
bound
add
add
add
lods
add
add
out
push
rolb
add
xchg
add
sub
pop
call
push
add
shr
pop
call
mov
push
lea
lea
pop
lea
push
shr
pop
sub
push
inc
add
pop
mov
push
sub
ror
not
not
pop
shr
push
push
push
push
push
call
add
xchg
mov
add
add
mov
fildl
arpl
mov
jo
add
mull
add
insb
mov
add
js
in
in
pop
add
mov
push
push
push
push
push
push
push
call
mov
jno
int
mov
enter
pop
add
add
add
fdivs
sahf
add
loopne
fwait
clc
cmc
data16
out
add
add
in
in
mov
add
push
push
push
push
push
push
lea
push
push
push
push
call
add
cltd
mov
add
enter
mov
pop
add
add
rcr
mov
iret
mov
add
add
add
mov
push
lcall
incb
lcall
shlb
inc
add
add
mov
xor
xor
pop
mov
cmp
jne
push
push
call
xchg
xchg
add
jb
add
fiaddl
add
xchg
aad
fisubs
jmp
add
jge
xchg
add
pop
push
push
xchg
je
shll
push
stc
mov
jecxz
add
mov
cli
cmpsl
sub
pop
cmp
jne
push
ror
inc
pop
mov
movl
push
push
call
cmp
add
add
arpl
fdivl
filds
mov
jo
cmc
add
add
add
test
mov
add
mov
xchg
pop
add
arpl
test
fmul
int3
add
add
pop
jmp
push
not
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
lea
push
call
mov
lock
add
subb
add
lods
mov
cmc
push
add
add
add
stc
push
into
arpl
jl
cmpsl
rolb
cli
add
push
mov
mov
into
add
faddp
add
mov
add
push
or
adc
test
cmpsl
je
int3
call
lea
jae
add
jns
add
add
add
clc
les
add
popl
add
mov
add
xchg
popa
add
mov
mov
imul
add
xchg
lcall
inc
adc
add
add
push
xor
add
xor
pop
jmp
push
push
push
push
push
call
add
add
in
add
xchg
add
push
lahf
add
ja
add
sti
loopne
fiaddl
sub
pop
mov
push
push
push
push
call
add
add
add
add
fs
mov
add
sti
scas
jge
push
out
add
out
mov
mov
add
mov
lock
enter
add
aad
outsl
add
xor
cwtl
jecxz
jae
xchg
add
leave
imul
add
push
stc
jbe
jnp
add
sub
pop
mov
push
shr
sub
pop
cmp
jne
mov
push
push
lea
push
lea
push
call
add
jle
add
popl
lcall
test
test
sti
imul
xlat
fstps
xchg
add
cwtl
jmp
add
add
fsubs
pop
fstpl
into
int
sub
pop
movl
push
push
push
push
push
push
push
push
call
rolb
add
add
mov
loop
add
add
shl
add
out
add
into
pusha
add
roll
add
add
push
fldl
movsl
lret
push
push
add
test
push
mov
je
add
mov
add
loopne
lcall
pushf
pop
add
push
shl
pop
mov
push
add
lea
inc
pop
cmpw
jne
push
push
push
push
push
call
push
add
test
add
add
add
int
push
sahf
mov
roll
add
add
iret
add
lock
pop
bound
sub
pop
mov
push
sub
rol
pop
movl
push
not
not
pop
jmp
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
in
lock
aam
arpl
xchg
mov
fldt
add
mov
mov
push
mov
mov
loope
mov
cmc
mov
pop
cli
imul
in
fcomps
pushl
pop
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
enter
cwtl
mov
leave
add
loop
stos
add
pop
xchg
rolb
add
add
xchg
xchg
xchg
mov
xlat
pop
pop
jb
in
out
xchg
sahf
jmp
jns
add
scas
cmc
xchg
movsb
add
popf
mov
cmp
mov
push
in
add
pop
stc
neg
add
fildll
sub
pop
mov
mov
push
push
push
push
lea
push
push
push
push
call
mov
out
test
sahf
add
add
push
loop
mov
pop
add
loope
push
xchg
clc
lcall
outsl
scas
add
add
bound
loope
in
loopne
lcall
push
or
ljmp
iret
push
xlat
add
shr
sub
dec
pop
xor
sub
pop
push
push
push
call
popf
jne
add
add
add
addl
add
fstl
add
add
add
shrl
testb
stc
scas
outsl
xchg
lods
aad
add
pop
std
in
add
pop
add
js
add
popa
xchg
out
add
fiaddl
mov
addb
lods
add
in
hlt
lcall
call
push
lea
push
push
push
push
push
push
call
xchg
add
add
bnd
ja
insb
add
add
jge
add
movsl
push
add
cld
pop
mov
push
idivl
in
in
cmpl
je
push
push
ror
rol
shr
push
push
pop
add
lea
sub
shl
shl
inc
dec
pop
dec
pop
push
shl
pop
push
push
shl
shl
add
sub
pop
call
push
shl
pop
cmpl
je
push
push
lea
shl
xor
push
push
pop
add
sub
ror
shr
lea
sub
xor
pop
add
add
pop
push
pop
push
push
push
push
lea
push
push
push
push
call
add
add
xchg
add
add
fs
add
add
jb
pop
add
mov
add
mov
stc
add
xchg
popa
add
mov
push
add
movsl
add
add
add
xchg
add
add
add
int
mov
ja
bnd
movl
push
sub
dec
pop
cmpl
je
push
push
add
sub
sub
push
push
pop
add
shr
ror
sub
add
add
pop
sub
shl
pop
push
not
sub
pop
push
call
push
dec
sub
not
pop
cmpl
je
push
push
shl
push
push
pop
add
add
xor
xor
not
sub
add
pop
add
shr
pop
push
shl
rol
pop
push
call
push
push
push
push
push
push
call
mov
mov
ljmp
jae
xchg
push
adcl
add
pop
imul
clc
jbe
add
mov
mov
mov
pushf
ljmp
out
pop
add
add
jge
add
add
mov
flds
sub
pop
cmpl
je
push
push
inc
xor
add
push
and
add
sub
add
sub
sub
dec
ror
pop
lea
xor
xor
inc
pop
push
shr
ror
shr
not
pop
push
push
push
call
add
mov
enter
add
mov
insb
loop
fcompl
cmpsb
push
mull
add
rol
fldl
imul
ljmp
add
add
mov
idivb
add
addl
mov
sub
pop
call
push
lea
push
push
push
lea
push
call
add
mov
add
addb
add
add
mov
clc
sti
mov
push
cld
rclb
add
fiadds
mov
xchg
jbe
sbb
add
add
add
lcall
js
xor
pop
ret
xor
add
push
lea
push
push
push
push
push
lea
push
push
push
call
lock
jae
mov
add
les
add
push
cli
add
add
test
add
add
mov
add
pop
imul
shrb
add
lods
add
fistps
add
popl
add
add
addb
add
add
inc
adc
add
add
add
pushf
rcll
fcoms
push
lea
push
push
lea
push
push
lea
push
call
lds
add
add
data16
push
add
jmp
stos
jecxz
add
add
jne
push
jo
call
hlt
stc
add
add
xchg
add
add
jo
xchg
mov
pushf
stos
fxch
add
lcall
fsubrl
imul
addr16
loopne
pop
xchg
add
leave
stos
push
add
lcall
je
add
xor
push
push
lea
push
call
jo
add
add
shrb
add
mov
lock
add
fcomip
scas
add
add
pop
fstps
add
clc
add
ljmp
add
sti
pushf
pop
sti
xchg
add
push
into
out
pop
mov
push
xchg
add
add
push
pushf
add
in
notl
lcall
push
sub
xor
pop
pop
push
push
push
call
shl
repnz
mov
add
add
lds
push
cli
pop
cli
xchg
loop
jno
add
add
lock
add
popa
movsl
xchg
push
scas
leave
add
mov
in
hlt
pop
pop
push
push
push
push
push
call
jno
aad
jae
add
mov
add
jnp
add
add
data16
add
mov
push
mov
sub
pop
pop
push
dec
pop
leave
push
add
rol
shl
pop
ret
push
lea
push
call
push
mov
sbbb
add
add
add
sbb
add
mov
sbbb
mov
add
push
add
add
mov
mov
add
in
jp
add
add
mov
int3
add
movsl
sti
add
pushf
mov
jge
gs
pop
push
mov
push
push
push
push
lea
push
push
push
push
call
imul
jle
bound
add
iret
imul
mov
je
add
xchg
cmpsb
add
icebp
add
xchg
rcl
add
add
popf
mov
add
lcall
in
push
push
lea
push
push
lea
push
push
lea
push
push
call
in
add
lds
add
lods
mov
xorb
scas
add
loope
mov
rolb
imul
test
add
jle
jmp
mov
add
add
out
lock
add
cld
mov
incb
out
add
xchg
ffree
test
lcall
jge
add
test
test
rcl
push
dec
not
push
xor
add
inc
sub
sub
shl
pop
sub
pop
push
rol
ror
sub
sub
pop
pushl
call
push
shl
inc
add
pop
push
push
push
lea
push
push
push
lea
push
push
call
xchg
pop
add
popa
mov
pop
add
xchg
add
sbbb
rcl
mov
flds
lods
std
jmp
in
add
xchg
pop
stos
movsb
into
jne
add
add
leave
mov
add
int
jl
add
loop
jmp
lcall
rclb
icebp
shr
add
pop
jmp
cmpl
jne
push
sub
pop
mov
push
lea
push
push
push
push
push
call
add
mov
iret
movsl
add
mov
add
add
add
les
movb
add
add
test
stos
mov
add
add
mov
push
add
mov
push
popf
push
sub
pop
ret
jmp
push
sub
rol
pop
cmpl
jne
push
push
shl
xor
rol
push
and
add
not
ror
inc
sub
add
pop
add
rol
xor
pop
push
add
shl
pop
pushl
call
push
push
push
lea
push
push
push
push
push
push
call
mov
lret
xchg
mov
add
add
pop
add
add
fs
int
ja
mov
lret
add
push
xchg
push
pop
add
leave
add
mov
mov
xchg
pop
push
cmpsl
add
add
mov
fisubs
push
add
add
hlt
xchg
sub
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
stos
scas
xorl
add
add
in
fcomp
add
add
add
lahf
enter
add
lds
add
clc
add
add
test
lret
neg
xchg
imul
mov
sub
pop
call
push
lea
add
lea
pop
jmp
push
sub
xor
pop
cmpl
je
push
dec
shl
add
pop
cmpl
jne
push
push
push
lea
push
push
push
lea
push
lea
push
call
push
cmpsb
out
add
add
add
add
xchg
add
add
cmc
fmul
add
stc
sahf
add
lods
sarl
flds
add
lret
add
nop
add
mov
scas
add
xor
add
lcall
add
add
mov
push
sub
shr
pop
push
push
push
add
push
or
inc
add
lea
sub
sub
sub
sub
xor
shl
add
pop
add
pop
push
sub
ror
shr
pop
pushl
push
lea
push
push
push
call
pop
test
rcrl
bound
add
scas
add
add
leave
add
test
add
add
mov
enter
add
lock
add
shrb
xchg
sarb
push
push
xor
add
add
shr
not
sub
sub
dec
rol
pop
sub
pop
push
push
push
push
push
push
push
call
xchg
add
add
add
push
add
add
repnz
rcrl
nop
add
mov
jns
movl
iret
cmc
popa
test
xchg
idivl
mov
xchg
add
jo
mov
scas
sub
pop
pushl
push
lea
push
push
lea
push
push
push
push
push
push
call
pop
jae
add
clc
ret
add
add
mov
repnz
jmp
add
testl
jnp
js
rcrb
in
fdivr
lcall
and
add
shrb
call
push
xor
add
add
shl
sub
ror
add
not
pop
xor
pop
push
lea
push
lea
push
push
call
loopne
in
add
push
add
add
out
add
cmpsb
fwait
decb
pop
add
push
add
rcrb
mov
add
hlt
add
jne
add
add
int
icebp
enter
fadds
add
add
add
add
jne
push
push
push
push
push
call
add
add
add
cld
add
mov
add
jp
add
loopne
popa
add
add
add
int3
loop
cwtl
test
add
add
test
icebp
imulb
add
out
mov
sub
pop
call
push
push
push
push
push
push
call
popl
pop
xlat
jp
mov
add
lcall
xchg
lods
popa
add
add
nop
out
popl
jbe
add
add
add
popf
hlt
aad
scas
lock
cmpsl
add
iret
sub
pop
call
push
push
add
push
and
add
lea
sub
sub
shl
pop
dec
shl
pop
push
lea
push
push
push
push
push
push
call
add
fcoms
bound
mov
add
add
cmpsb
add
add
leave
mov
arpl
add
add
add
add
add
add
mov
add
int
pop
lcall
push
add
add
add
in
in
pushl
call
push
push
push
push
lea
push
lea
push
push
push
push
call
lods
add
add
add
add
lds
jnp
mov
loop
add
add
add
aad
add
hlt
rolb
test
outsl
cltd
add
add
xchg
add
xchg
add
add
int3
addl
fiadds
add
aad
in
fcompl
shrb
call
int3
push
xor
add
lea
lea
sub
xor
xor
pop
shl
pop
push
push
push
push
push
push
lea
push
push
call
lcall
add
fdivrp
add
add
jae
fldt
xlat
xchg
mov
add
mov
mov
push
in
loopne
lcall
jne
push
push
push
push
lea
push
push
call
add
jne
test
xchg
add
mov
cwtl
mov
popf
jp
add
enter
enter
mov
add
test
push
add
in
add
jle
pop
jb
add
movsl
jo
add
add
in
add
popa
test
sub
pop
call
call
push
push
shr
lea
push
and
add
xor
sub
add
pop
lea
xor
add
pop
push
ror
shl
ror
pop
pushl
call
push
sub
shr
xor
pop
call
push
push
push
push
pop
add
sub
add
shr
rol
sub
inc
pop
add
pop
push
push
call
add
add
clc
xlat
xlat
cwtl
je
push
add
xlat
imul
push
call
addl
add
in
clc
lcall
jne
push
xor
pop
call
call
push
push
sub
ror
sub
lea
push
xor
add
ror
sub
inc
pop
sub
rol
add
pop
push
sub
pop
pushl
push
dec
inc
pop
call
push
pop
call
push
push
not
shr
not
push
sub
add
xor
sub
dec
pop
rol
ror
xor
pop
push
add
shl
pop
pushl
call
push
shl
sub
sub
lea
pop
call
push
push
lea
push
push
pop
add
shl
dec
add
sub
add
inc
pop
lea
shr
pop
push
shr
shr
pop
pushl
call
push
ror
shl
pop
lea
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
lock
add
cmp
mov
stos
ja
mov
add
iret
addr16
add
add
fcomps
shrb
mov
push
push
pop
add
add
xor
sub
add
pop
pop
push
lea
not
lea
lea
pop
pushl
push
pop
call
push
dec
pop
call
push
push
sub
add
shl
push
or
not
add
shr
rol
sub
add
pop
sub
xor
pop
push
lea
shr
dec
pop
pushl
push
push
push
call
add
movsl
jmp
movsb
add
add
std
js
add
cmpsb
test
add
xlat
lods
add
pop
cltd
pushf
shlb
add
push
add
add
add
aam
mov
out
hlt
add
sub
pop
call
push
push
lea
push
push
lea
push
push
push
call
leave
jl
add
add
jl
cli
pop
add
into
hlt
add
add
push
add
in
out
add
xchg
add
mov
fstpt
add
out
sub
pop
call
push
push
add
sub
push
or
not
add
add
inc
sub
pop
inc
pop
push
lea
shr
pop
pushl
call
push
lea
xor
sub
ror
pop
call
push
push
add
dec
lea
push
or
inc
add
ror
ror
inc
lea
sub
shl
shl
ror
add
pop
not
pop
push
pop
pushl
push
push
lea
push
push
push
lea
push
push
call
add
add
movl
rcl
jp
pop
mov
mov
addr16
mov
ret
in
cwtl
add
in
outsl
addb
add
add
add
cltd
add
loopne
andl
cmc
js
add
iret
rcrl
sub
pop
call
push
push
not
push
or
not
add
rol
rol
lea
ror
sub
sub
shl
pop
not
sub
pop
push
push
ror
push
sub
add
not
sub
add
inc
rol
pop
dec
shr
shl
pop
push
lea
push
push
push
lea
push
push
call
ljmp
add
push
lods
jae
negl
insb
add
andl
xlat
add
in
add
aam
mov
cli
push
clc
add
loope
push
test
call
in
call
push
not
sub
pop
dec
jne
push
push
shl
inc
push
xor
add
not
shl
not
sub
inc
add
inc
pop
add
pop
push
dec
pop
pushl
push
sub
sub
pop
call
push
add
sub
sub
xor
pop
mov
push
lea
push
push
push
lea
push
call
add
rcr
add
push
add
pop
add
mov
push
cld
push
push
add
out
popa
xchg
jecxz
les
mov
pop
add
add
add
arpl
add
mov
xchg
add
in
in
lcall
pushf
and
ljmp
adc
mov
ror
inc
push
or
not
add
inc
sub
lea
not
add
pop
sub
ror
shr
ror
pop
push
push
push
push
lea
push
push
lea
push
push
call
add
add
add
push
cwtl
add
ja
add
cli
add
add
add
stos
imul
add
rolb
add
mov
fiadds
lcall
jne
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
enter
popa
fldenv
xchg
addb
pop
add
std
add
add
jnp
stos
add
addb
sub
pop
call
push
push
push
push
push
push
lea
push
lea
push
call
push
lret
pop
add
in
cli
jae
jae
stos
add
xchg
add
add
repnz
add
jo
add
add
ror
roll
test
add
lcall
add
push
push
push
push
push
push
push
call
mov
fildl
add
add
xchg
add
add
out
push
add
add
mov
test
add
add
push
mov
add
mov
in
in
lcall
push
shr
pop
push
push
ror
sub
dec
add
pop
push
push
shl
lea
ror
pop
pushl
push
push
inc
push
xor
add
sub
inc
dec
sub
sub
not
pop
not
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
ljmp
ljmp
outsl
add
add
jge
add
movsl
loop
lret
lahf
add
push
mov
push
fadd
add
clc
cltd
gs
xchg
pop
addb
add
add
add
cmc
jecxz
push
fcompl
lods
add
test
test
lcall
call
push
push
lea
push
push
push
push
call
movsb
in
add
mov
add
addl
jl
add
lret
add
repnz
jb
enter
add
add
filds
popf
lahf
add
loopne
add
loopne
xchg
mov
xchg
add
pop
add
in
call
add
mov
push
sub
pop
lea
push
push
lea
lea
push
and
add
shl
sub
rol
pop
dec
add
pop
push
lea
push
push
lea
push
push
push
push
push
push
call
push
add
xchg
mov
add
addl
mov
nop
add
xchg
lea
js
les
add
testl
add
add
add
test
add
push
imul
add
add
lcall
jne
call
push
lea
push
push
push
push
push
push
push
push
push
call
add
xchg
mov
fadds
testb
add
mov
jae
add
xchg
add
add
in
add
test
pop
add
fadds
roll
add
push
pop
mov
pushf
in
je
add
cld
add
add
ret
imul
lcall
call
push
push
lea
lea
shl
sub
push
xor
add
not
sub
lea
sub
pop
rol
lea
pop
push
lea
add
pop
pushl
push
sub
add
add
pop
call
call
push
ror
add
sub
lea
pop
mov
push
push
push
push
push
push
lea
push
push
call
movsb
bound
flds
add
add
mov
add
pushf
negl
filds
cld
les
add
mov
add
ja
add
add
add
ja
iret
add
xlat
jge
mov
enter
mov
jl
ljmp
pop
lea
push
push
dec
sub
push
sub
add
shr
add
rol
sub
dec
sub
pop
inc
xor
sub
xor
pop
push
sub
shr
add
pop
pushl
push
push
push
push
call
pop
jo
aad
bnd
add
add
xlat
pusha
addb
pop
gs
mov
add
sub
pop
call
push
push
push
push
push
push
push
push
push
push
call
pop
add
add
mov
add
idivl
push
pop
add
add
mov
lcall
mov
in
add
xchg
add
mov
movsl
jbe
add
clc
jmp
in
fcomps
add
push
rol
sub
pop
push
push
inc
pop
push
push
lea
push
lea
push
push
call
js
mov
add
pop
int
add
add
push
fiadds
mov
lret
loopne
add
fiaddl
add
cmpsl
add
xchg
add
js
pushf
mul
mov
add
mov
icebp
roll
add
fstpt
add
add
mov
jne
pop
add
add
add
add
add
mov
add
add
scas
xlat
add
add
lock
xorl
xchg
cmc
jmp
add
incb
in
add
rol
rcr
add
jnp
imul
mov
mov
add
mov
in
clc
lcall
jne
push
push
inc
sub
inc
sub
push
or
not
add
rol
inc
sub
sub
add
pop
xor
add
dec
pop
push
lea
push
call
xchg
mov
add
xchg
add
pushf
push
mov
fiadds
out
ffree
popa
push
lret
add
add
in
clc
pop
push
push
rol
sub
ror
pop
call
push
push
inc
push
and
add
sub
sub
not
sub
dec
sub
pop
add
lea
shl
pop
push
push
push
push
call
scas
add
jno
out
lret
mov
add
jae
fistpll
jbe
faddl
in
add
jecxz
add
add
jo
add
push
nop
add
add
add
out
jecxz
les
arpl
add
add
iret
aad
jno
in
lock
lcall
jne
push
lea
shl
pop
call
push
lea
sub
sub
pop
push
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
outsl
jle
ficomps
gs
mov
add
testl
in
loope
mov
mov
add
push
cmpsb
movsl
cld
add
sub
pop
call
push
push
add
lea
push
and
add
sub
lea
sub
xor
pop
shl
shr
shr
pop
push
push
push
lea
push
push
push
call
cmc
add
enter
out
add
lcall
mov
add
add
add
add
xchg
jecxz
jp
scas
mov
in
add
negl
add
shll
call
pushl
call
push
push
push
push
push
call
lea
xorl
add
jne
ror
jecxz
lods
xchg
loop
jns
enter
lret
call
add
add
add
add
push
add
std
add
in
add
jns
mov
add
add
in
pop
call
push
pop
pushl
push
add
pop
mov
push
push
call
pop
mov
aam
add
add
int3
clc
fists
add
add
add
add
mov
js
sahf
add
jmp
add
fucomi
add
repnz
fstps
add
add
cmpsb
mov
in
clc
pop
jmp
push
push
dec
ror
rol
inc
push
and
add
add
not
sub
add
shr
pop
pop
push
lea
push
push
push
push
lea
push
push
call
pop
test
add
mov
movb
stos
xchg
add
scas
mov
leave
jge
add
add
lea
loopne
roll
mov
xchg
stos
mov
add
imul
jmp
jge
add
sub
pop
pushl
push
not
rol
pop
call
push
push
sub
pop
call
push
push
sub
ror
lea
push
sub
add
sub
add
ror
sub
ror
pop
ror
pop
push
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
add
add
out
jle
add
jle
mov
add
add
add
mov
js
out
out
jns
addl
cmpl
add
add
fldt
jae
add
mov
add
leave
add
js
hlt
cmpsb
lea
xchg
sub
pop
pushl
call
push
inc
inc
xor
pop
push
push
xor
add
add
pop
call
push
lea
push
push
push
call
push
mov
add
imul
add
mov
cmc
add
add
add
add
push
out
lds
add
roll
add
lcall
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
push
call
pop
in
fcmovu
mov
add
fwait
add
add
jnp
add
aad
xlat
add
push
jno
add
mov
arpl
add
add
mov
leavew
add
add
pop
ret
add
ffree
add
add
add
mov
ret
mov
lret
fcomps
les
pop
push
push
call
mov
push
add
jp
add
pusha
xchg
popf
mov
pop
lret
mov
add
subl
add
mov
out
add
jb
stos
add
in
clc
lcall
pop
push
lea
push
push
lea
push
push
push
call
cmc
add
add
push
add
add
pop
movsb
add
stos
add
cmpsb
add
enter
push
add
scas
leave
add
ljmp
add
incb
mov
ror
lret
mov
add
add
cmc
sub
pop
xor
inc
push
not
inc
shr
inc
pop
ret
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
imul
add
add
pushf
test
add
bound
xchg
pop
call
xchg
add
add
add
leave
add
clc
add
loop
leave
add
rolb
add
add
call
add
xchg
mov
jne
add
lahf
add
add
lcall
ret
push
pop
push
push
lea
push
lea
push
push
push
push
push
call
add
in
add
std
add
pop
fmul
add
jle
add
pusha
add
cli
push
jbe
add
mov
mov
jmp
in
in
mov
push
rol
shr
sub
pop
cmpl
jne
mov
push
push
lea
push
push
call
push
add
add
movsl
mov
scas
loope
loopne
ret
test
cmc
add
popa
popa
add
fdivrs
add
add
fdivr
sti
add
fiadds
mov
add
cli
out
add
add
sub
pop
jmp
push
xor
pop
mov
push
add
add
pop
and
push
shl
pop
xor
push
sub
rol
pop
xor
add
push
ror
pop
xor
push
sub
xor
rol
pop
dec
push
dec
pop
sub
push
push
push
push
lea
push
push
push
call
mov
add
add
test
add
add
add
stos
add
ljmp
ja
call
add
push
add
add
roll
add
mov
jmp
lret
xchg
add
push
mov
mov
push
add
add
stos
repnz
add
cwtl
sub
pop
jmp
sub
push
push
push
push
call
cmc
add
rolb
jle
out
add
add
mov
push
add
jmp
add
mov
std
add
xchg
add
les
jbe
add
xchg
sub
pop
pushl
pop
push
push
push
lea
push
push
push
call
fmul
outsl
add
je
add
into
xchg
stos
out
add
xchg
xlat
add
add
jns
mov
jnp
ljmp
sub
pop
sub
cmp
jne
push
not
rol
pop
mov
lea
push
push
push
push
push
lea
push
push
lea
push
call
je
add
push
add
add
mov
pop
scas
add
add
jle
arpl
xor
addl
fs
xchg
add
mov
mov
aam
add
add
mov
in
sub
pop
sub
push
push
push
push
lea
push
push
push
push
lea
push
push
call
jbe
add
add
jb
pushf
stc
fbstp
add
add
data16
xchg
ljmp
add
sub
pop
mov
shr
push
rol
sub
sub
pop
add
push
push
push
push
call
push
add
les
add
leave
push
pushf
scas
add
add
nop
mov
out
enter
rclb
sar
add
sti
add
xchg
mov
add
sub
pop
sub
push
push
lea
push
push
push
push
lea
push
push
push
push
call
push
add
mov
xlat
cli
insb
cli
out
test
mov
mov
pop
rolb
in
lods
pop
push
fsub
mov
add
mov
mov
je
sub
pop
pushl
push
push
call
cmpb
js
mov
add
fadds
add
hlt
call
lods
mull
mov
cli
mov
test
sub
pop
pop
push
push
push
push
push
lea
push
push
call
mov
loop
add
popf
cltd
je
test
rol
sti
add
add
xlat
test
testb
fs
rolb
mov
add
add
jmp
fiaddl
jnp
repnz
add
xchg
add
not
out
div
jmp
cmpl
mov
sub
pop
shr
and
push
rol
shl
pop
sub
push
sub
inc
not
shr
pop
cmp
jne
push
sub
add
pop
leave
ret
push
sub
rol
inc
shr
pop
push
mov
push
shr
pop
add
push
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
xchg
add
rolb
lods
jl
pop
aad
add
push
jae
add
jbe
push
push
lret
xchg
xchg
add
add
pop
add
fcomps
push
inc
pop
push
push
xor
sub
pop
push
push
dec
ror
add
sub
pop
push
push
ror
not
add
pop
mov
lea
push
push
push
push
call
add
cmpsl
jecxz
add
in
add
push
xchg
repnz
add
jb
hlt
xlat
mov
loopne
popl
jnp
lods
fildl
mov
lcall
mov
loop
add
add
push
add
sub
pop
sub
push
push
push
call
pusha
xchg
out
loop
mov
push
add
imull
int3
add
pop
add
popa
movsb
outsl
aam
add
ror
add
add
add
in
add
popa
add
fldl
xchg
xlat
add
cmc
mov
add
cwtl
push
mov
insb
jne
jb
in
hlt
lcall
adc
ljmp
add
push
lock
add
jle
pushf
jmp
jmp
int3
pop
push
add
lret
add
pop
filds
add
lock
jecxz
cld
add
xchg
lock
pop
add
mov
push
sub
pop
add
push
not
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
mov
mov
add
fsubr
out
jecxz
lret
in
test
add
add
lcall
mov
movsb
fwait
lahf
pushf
add
add
add
movb
xchg
xchg
mov
les
add
jge
xor
push
ror
add
pop
mov
push
lea
sub
shl
pop
and
push
sub
lea
pop
rol
push
shl
xor
pop
rol
push
push
push
push
call
rclb
shl
mov
add
jp
mov
add
iret
add
jge
add
add
add
lret
ja
gs
push
add
lods
aad
pop
fadds
mov
mov
xlat
add
add
add
pushaw
scas
add
clc
lcall
add
data16
mov
mov
add
add
pop
cmpb
jne
push
shl
ror
add
sub
pop
add
push
not
pop
cmp
je
add
push
push
lea
push
lea
push
push
push
push
lea
push
push
lea
push
call
push
mov
add
mov
add
lock
rolb
lahf
add
add
lods
push
addb
add
add
add
add
add
jae
add
arpl
int
scas
out
lret
add
sub
pop
cmpl
jne
xor
push
push
lea
push
push
call
in
pop
add
nop
add
add
jge
imul
js
pop
add
imul
fwait
push
add
neg
push
in
nop
mov
add
add
jecxz
out
add
data16
les
mov
ror
add
mov
out
pop
add
add
je
add
loopne
add
lcall
pop
push
lea
pop
pop
push
xor
shr
shr
pop
pop
push
lea
lea
dec
add
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
call
in
push
mov
filds
pop
push
add
add
add
xchg
cld
jae
add
cltd
add
add
out
jle
cli
inc
mov
nop
add
xchg
ja
add
leave
ret
push
inc
add
sub
pop
mov
push
add
pop
add
mov
push
push
push
call
add
add
lods
stos
cmc
add
add
mov
add
xchg
mov
leave
sahf
add
add
orl
pop
cmp
push
sub
sub
sub
ror
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
add
mov
lret
add
pop
add
add
add
add
std
movsb
add
pop
push
movsb
popf
add
roll
popa
int
mov
xchg
xchg
add
add
add
in
fcomps
push
call
ret
rol
adc
fistpl
xor
pop
push
lea
push
push
push
call
loope
mov
clc
out
int3
fldl
popf
stos
lea
add
lret
pushf
fidivs
xchg
add
lret
scas
loop
mov
add
sar
out
add
jl
in
lock
lcall
push
push
push
call
test
mov
std
mov
push
mov
add
test
shrl
pop
add
xchg
movb
add
in
hlt
lcall
push
rol
add
sub
xor
pop
pop
push
push
lea
push
push
push
call
xchg
mov
mov
arpl
add
roll
out
push
push
pop
add
xchg
rcll
add
mov
jae
jbe
pop
scas
add
add
add
pop
ja
add
frstor
mov
ret
pop
add
xchg
add
add
popa
fs
cmc
movsb
out
jle
cmpsb
lahf
push
xchg
mov
fs
addr16
add
add
sub
pop
pop
push
lea
push
lea
push
call
add
stos
push
xchg
add
add
add
add
add
mov
jge
test
mov
xchg
into
mov
add
js
xchg
add
add
js
add
add
lcall
push
lea
push
push
push
call
jl
add
mov
add
movsb
cmc
xchg
ljmp
loop
xchg
add
jnp
add
mov
add
int
push
cmp
fs
mov
xchg
jnp
jecxz
pusha
roll
add
pop
jne
xlat
add
cmpsb
add
pop
push
sub
pop
ret
push
push
push
push
push
push
push
push
call
add
add
cwtl
out
push
addb
test
xchg
scas
sti
lret
jecxz
rol
add
jno
add
add
jmp
repnz
popf
add
add
add
mov
add
push
dec
not
not
pop
push
push
push
push
push
push
push
call
data16
pop
jo
add
add
mov
add
mov
fwait
add
mov
lret
add
mov
mov
test
mov
add
lcall
push
push
rol
inc
rol
sub
pop
mov
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
lea
mov
push
repnz
icebp
jnp
movsb
add
add
rcr
add
stos
lret
incb
mov
add
jl
int3
stos
add
xlat
leave
loop
xchg
add
mov
fdivr
lcall
push
lea
push
lea
push
push
push
push
push
push
push
call
lcall
add
add
xchg
in
frstor
add
fs
roll
add
mov
cld
sub
pop
pop
push
lea
not
pop
lea
push
push
push
push
push
lea
push
push
lea
push
call
js
add
add
jo
stc
pop
xchg
cltd
add
add
mov
mov
add
fwait
scas
cltd
add
jno
pop
filds
jl
mov
mov
mov
fistl
add
mov
in
loopne
lcall
ljmp
lea
push
push
call
jp
jne
add
iret
add
add
mov
scas
xchg
add
js
mov
loop
mov
bound
fildl
cmpsb
add
lock
lcall
ljmp
lea
push
call
shrb
rcrb
add
subb
in
add
add
add
add
add
movsb
add
push
mov
clc
cli
add
lahf
mov
jae
out
lds
in
in
lcall
fimull
shrl
rcrl
fsts
ret
fdivrl
pop
pushl
push
rol
sub
sub
ror
pop
popl
push
lea
push
lea
push
push
call
lock
add
add
add
mov
add
add
add
mov
mov
test
mov
add
jae
pusha
add
fmuls
movl
add
xchg
xchg
addr16
jae
add
sti
push
add
mov
add
jnp
add
push
dec
inc
rol
pop
xor
push
sub
lea
pop
lea
push
push
push
push
push
push
push
push
push
call
aad
add
add
add
add
add
in
bound
pop
sar
imul
stos
push
out
add
add
xchg
arpl
in
fcompl
adc
loop
pop
add
xor
push
ror
not
inc
pop
rol
push
rol
add
rol
sub
pop
nop
push
lea
add
pop
nop
xor
push
push
lea
push
call
test
mov
add
test
push
push
add
add
add
mov
xchg
icebp
outsl
fiadds
shr
stc
add
add
add
hlt
lcall
nop
push
lea
push
lea
push
lea
push
push
call
add
mov
pop
std
add
xchg
add
movl
push
in
jbe
loope
mov
add
add
lret
aam
fiaddl
nop
push
push
push
call
cli
lret
mov
xchg
mov
mov
add
add
mov
mov
add
lret
add
add
hlt
lcall
push
push
lea
push
call
jmp
add
mov
add
xchg
add
xchg
xchg
add
jb
add
xorb
add
int3
aad
data16
add
add
int
lods
mov
in
hlt
pop
cmpb
jne
add
push
lea
rol
pop
nop
push
push
push
call
test
add
imul
frstor
leave
add
loop
xlat
mov
add
lcall
jns
js
jbe
out
rolb
add
add
add
xchg
add
add
add
jp
loopne
add
loope
add
mov
add
nop
cmc
addr16
mov
movsb
les
add
into
sub
pop
nop
cmp
je
push
shr
inc
pop
nop
nop
push
push
push
push
lea
push
push
push
push
call
nop
add
push
jmp
cwtl
add
add
add
cmpsb
je
xchg
fs
xchg
mov
add
jae
jnp
add
mov
xchg
mov
add
scas
xchg
push
push
xchg
cmpsb
add
lcall
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
lods
xchg
cmpsl
add
jle
xchg
lcall
mov
add
add
xchg
js
add
add
add
add
xchg
push
add
ja
adc
les
jne
icebp
add
push
mov
cmpsb
arpl
nop
push
not
rol
pop
nop
cmp
jb
push
shr
sub
pop
xor
push
lea
push
push
push
push
lea
push
push
push
push
push
call
add
add
add
add
add
add
mov
cld
xchg
add
pop
add
std
js
add
in
fdivr
lcall
addl
out
fdiv
xlat
pop
mov
add
push
dec
pop
movzwl
push
sub
pop
mov
push
add
pop
add
push
lea
inc
pop
mov
push
lea
push
push
push
push
push
push
lea
push
call
add
cli
add
add
into
je
add
add
ret
les
in
add
flds
push
in
pop
add
add
push
int
mov
jge
sahf
add
int3
add
cli
imul
imul
sub
pop
xor
push
push
push
push
push
push
lea
push
lea
push
push
call
out
add
add
into
mov
imul
add
mov
add
add
stc
mov
jne
add
add
les
mov
mov
add
add
add
add
sub
pop
xor
push
ror
add
pop
shl
push
push
push
call
out
aad
test
lret
add
pop
add
fdiv
movsb
add
into
pop
mov
cld
lds
add
shl
loopne
add
xchg
mov
add
lcall
dec
nop
add
loope
push
push
push
push
push
call
add
add
add
roll
add
add
test
cmpsb
out
mov
in
xchg
mov
mov
fiaddl
add
add
add
add
rcll
add
add
icebp
incb
popf
mov
add
lcall
dec
nop
add
test
push
push
push
call
jmp
cmc
cli
aam
push
push
add
add
in
xchg
add
xchg
mov
pop
not
imul
sarl
add
enter
jno
lcall
mov
rcll
jns
xchg
add
add
into
pop
xchg
cltd
mov
add
loope
push
lea
push
push
push
push
push
push
push
push
push
call
out
mov
negb
fs
add
pusha
sti
add
arpl
fildl
idivl
xchg
scas
add
add
pop
loop
add
add
and
je
in
fcomps
or
mov
push
push
push
push
push
call
ljmp
add
out
add
xchg
add
mov
add
arpl
ljmp
mov
add
mov
cli
lods
mov
add
nop
jl
aam
add
mov
add
add
jo
stos
xlat
loopne
add
in
pop
add
push
push
call
add
mov
fiadds
imul
add
mov
add
sbb
pop
pop
cmc
aam
add
add
shll
nop
jns
test
mov
ja
add
cwtl
scas
add
add
in
clc
lcall
push
push
push
push
lea
push
push
lea
push
push
push
call
add
lcall
movsl
in
lods
lods
mov
ja
mov
popf
mov
add
clc
test
jp
add
add
add
push
in
add
lahf
in
ret
add
leave
mov
movb
jno
cmpsl
add
add
sub
pop
pop
push
push
push
push
push
call
iret
fiadds
add
add
lret
hlt
cmp
pop
add
add
sti
test
add
add
add
mov
add
in
add
gs
lret
add
add
add
add
out
add
xchg
pop
add
ja
lods
addl
in
in
lcall
push
sub
pop
pop
leave
push
add
shl
not
ror
pop
ret
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
mov
add
add
stos
add
lods
les
cli
add
xchg
add
test
fcmovb
out
mov
imul
lea
add
xchg
jecxz
test
shr
pop
add
mov
ficoms
enter
pusha
push
icebp
fs
mov
in
fdivr
lcall
push
rol
shl
pop
mov
push
push
dec
xor
rol
inc
pop
push
push
push
add
xor
add
pop
push
mov
push
push
push
push
call
add
add
jmp
add
push
lds
add
jae
fcompl
xchg
pushf
jnp
add
add
les
addb
xchg
pop
add
lcall
popl
arpl
out
add
je
outsl
shr
in
lock
mov
push
push
push
push
lea
push
push
call
add
js
mov
sahf
add
jbe
mov
add
add
ljmp
cli
add
xchg
fs
xchg
add
in
jb
add
pop
add
xchg
cmc
faddl
add
add
lret
les
add
add
enter
clc
fwait
xchg
sub
pop
mov
push
push
push
call
push
add
mov
cltd
je
stos
shll
lahf
mov
add
add
mov
mov
add
fld
add
in
add
test
movsb
test
add
sub
pop
test
je
mov
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
in
mov
add
mov
jbe
out
je
mov
fiadds
loop
cmpsl
out
cld
add
push
lcall
testb
leave
add
add
inc
pop
mov
push
xor
add
pop
mov
push
sub
rol
inc
pop
inc
push
shl
xor
add
add
pop
cmp
je
push
shr
pop
test
je
push
push
push
push
push
push
push
push
call
ljmp
test
movsb
lahf
stos
mov
test
clc
test
jge
add
jle
pop
fstpl
stos
lds
add
mov
mov
add
clc
pop
mov
add
jmp
jmp
mov
rolb
add
add
jne
sub
pop
mov
push
add
xor
sub
pop
inc
cmp
je
push
sub
shr
add
xor
pop
test
jne
push
add
xor
pop
xor
push
xor
pop
pop
push
push
lea
push
lea
push
push
push
call
add
fucomip
add
jmp
roll
div
jnp
add
cwtl
add
add
add
mov
add
mov
in
call
pop
pop
push
lea
sub
pop
pop
push
inc
dec
sub
pop
leave
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
cli
fistps
push
add
loop
jb
xchg
add
mov
addl
scas
jge
lock
mov
add
add
add
stos
in
movsb
std
pop
add
out
fwait
roll
insb
add
pushf
mov
fdivr
lcall
or
push
sub
add
pop
mov
inc
push
dec
ror
sub
shl
pop
cmp
jne
push
push
call
add
add
add
add
add
mov
cmpsb
add
mov
add
add
add
add
mov
jl
add
jmp
insb
int
add
stos
jbe
add
push
clc
add
lcall
jle
push
lea
push
push
push
call
mov
mov
add
in
in
testb
lret
add
sahf
arpl
add
add
lods
lahf
fcomi
xlat
push
loope
imul
mov
push
int3
add
add
in
add
mov
add
lret
mov
mov
push
xchg
push
add
mov
lock
lcall
popa
add
add
push
lea
push
lea
push
call
icebp
add
pusha
mov
lock
xlat
add
mov
shlb
add
divl
add
add
push
mov
add
xchg
in
jnp
cld
mov
fs
fsts
in
hlt
lcall
push
push
pop
add
push
push
push
push
lea
push
push
push
push
push
call
pop
mov
mov
movl
scas
scas
cmpsl
les
jb
add
lds
mov
add
add
add
in
bound
movsb
data16
addl
add
jp
xchg
cld
jnp
mov
bound
in
fdivr
lcall
loopne
test
call
loopne
pop
mov
push
push
push
push
push
push
lea
push
call
add
add
pop
popa
fs
xchg
add
pop
popf
xchg
add
jno
insb
add
add
addb
add
out
add
testb
jno
push
rolb
sub
pop
test
je
mov
push
push
call
lret
jbe
add
fnstcw
mov
imul
test
arpl
add
add
bound
add
call
fwait
cwtl
mov
add
add
jle
add
mov
js
test
push
sub
pop
add
push
push
lea
push
push
lea
push
push
push
call
mov
add
pusha
jle
movsb
mov
add
fwait
push
arpl
add
add
pop
jle
push
xchg
add
add
lock
mov
push
pop
add
mov
icebp
icebp
std
negb
push
shl
add
ja
add
cmp
je
push
inc
dec
pop
jmp
xor
push
push
push
call
add
je
in
add
add
test
add
out
addl
add
add
mov
int3
add
add
jns
in
add
jecxz
add
icebp
in
push
mov
addb
loop
addl
add
add
int3
add
jo
scas
add
add
push
mov
sub
pop
pop
pop
push
sub
not
sub
pop
pop
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
pop
jae
pushf
add
push
aad
pop
jl
out
add
imul
add
mov
sarl
jno
xchg
add
add
mov
add
jns
rclb
stc
xchg
aam
add
sub
pop
pop
push
ror
inc
add
pop
leave
ret
push
inc
rol
pop
lea
push
sub
pop
pop
pop
push
pop
pop
push
ror
rol
dec
pop
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
xlat
cwtl
add
cltd
add
add
add
push
add
jecxz
push
push
hlt
arpl
add
mov
add
add
add
iret
clc
add
add
add
add
xlat
push
pop
mov
add
add
mov
mov
add
jb
aad
nop
sub
pop
leave
push
sub
pop
ret
mov
push
push
push
push
push
push
push
lea
push
call
add
xchg
loop
jle
call
add
add
pop
push
cwtl
add
shrl
add
add
js
pop
add
add
push
pop
add
push
rolb
movsb
add
add
leave
outsl
int3
add
add
add
add
add
sub
pop
pop
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
add
add
les
add
sahf
add
mov
rolb
add
add
ret
lahf
add
sub
pop
pop
push
xor
shr
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
test
stos
add
xor
leave
add
add
in
test
in
push
add
jecxz
fisubrs
out
mov
popf
icebp
lds
add
push
fmuls
flds
loop
hlt
jne
cmpsl
xchg
stos
xchg
add
add
mov
cwtl
add
add
xchg
into
add
iret
add
add
leave
push
ror
inc
pop
ret
decl
ds
adc
ljmp
decb
fldl
std
decb
cld
cmp
xchg
popa
sahf
mov
dec
jle
shr
addr16
outsb
scas
add
jl
jge
push
cmpb
movsb
jo
adc
scas
or
push
mov
add
adc
jg
lods
ret
inc
or
mov
insb
and
sahf
movsb
cs
cli
push
sbb
or
mov
leave
pop
adc
mov
adc
add
dec
add
dec
inc
ret
dec
repz
inc
pushf
lret
call
repz
jb
mov
fldenv
lods
popl
enter
jl
xchg
push
std
push
jns
mov
pushf
popa
cld
adc
jg
jge
xorl
bound
adc
test
push
outsl
mov
mov
push
subb
mov
or
jb
pop
xor
xor
push
test
daa
icebp
mov
into
sbb
or
hlt
dec
scas
out
arpl
mov
dec
or
xor
xor
pop
sbb
pop
lods
sbbl
mov
or
push
stos
xlat
inc
jge
dec
rclb
or
inc
shll
push
push
push
add
enter
call
es
movsl
dec
mov
add
sbb
sub
jae
leave
xchg
test
mov
pusha
insb
fstpt
xchg
cltd
stos
ljmp
cmp
fwait
into
jne
int3
jne
push
xchg
jb
pushf
stc
and
pop
cmp
lret
and
cld
pop
ljmp
out
lea
cltd
stos
and
xor
xor
or
scas
sahf
dec
inc
jne
fcomps
ficoml
or
inc
stc
nop
mov
daa
into
pop
pop
xor
jno
push
mov
push
enter
and
pop
or
addb
in
fs
insl
jge
dec
iret
or
popa
stc
inc
shll
mov
test
or
mov
dec
outsl
iret
pop
daa
jle
in
cmp
xchg
cmp
imul
pop
push
cmpl
sub
bound
push
jl
ljmp
out
xor
sub
inc
leave
adc
pusha
mov
push
adc
inc
add
push
incl
fmul
in
push
and
jg
jns
sbb
or
mov
popf
shr
pop
notl
fs
inc
jge
cmc
aad
mov
repz
js
gs
neg
lock
aaa
dec
lds
mov
adc
repnz
rcl
and
dec
inc
and
sbb
fnstsw
xchg
fnsave
repnz
push
loope
fucomp
ficoms
xchg
mov
jmp
add
data16
add
mov
hlt
mov
jne
pop
jmp
insb
pop
inc
nop
js
mov
out
add
movsl
rcrb
les
dec
pop
cltd
adc
sahf
pop
xchg
mov
fcomps
enter
dec
repz
add
and
sbb
pop
std
fwait
cmpl
mov
jle
pop
xlat
mov
or
mov
add
or
jl
arpl
dec
cwtl
and
mov
call
roll
add
inc
push
xchg
xor
pop
dec
sub
jecxz
dec
or
mov
push
xchg
ret
sub
mov
xchg
xchg
xor
dec
dec
push
es
add
in
xchg
into
stos
dec
stc
dec
or
mov
sti
push
iret
jp
ret
inc
dec
sti
fistpl
push
ss
pop
fcomps
ret
cmpsl
cmpsb
daa
lret
jl
push
pop
push
dec
mov
pop
inc
push
lea
out
and
lahf
mov
bnd
adc
dec
out
xchg
imull
xchg
les
adc
jecxz
jmp
adc
lahf
out
xchg
mov
and
imul
pop
sub
fs
sub
in
in
outsb
dec
and
mov
in
mov
ret
dec
adc
fdivs
push
dec
inc
ss
cltd
les
inc
rcr
jae
cmp
scas
lods
and
int
adc
out
dec
inc
aam
or
mov
pusha
fs
ret
push
push
fwait
xor
mov
lds
mov
inc
test
mov
pop
fidivrs
scas
push
mov
les
insb
mov
push
mov
push
push
sbb
or
jl
and
push
jae
loopne
xor
es
pop
incb
pop
arpl
cwtl
inc
xchg
cli
movsl
test
incb
sbb
jns
jns
punpckhbw
add
or
add
fmuls
lea
test
sub
pop
lret
insl
pop
push
xor
lds
inc
mov
adcb
mov
push
sub
and
mov
std
lods
test
push
adc
mov
les
mov
push
fiaddl
pop
cwtl
imul
push
push
aaa
dec
pop
decl
fs
dec
idiv
sbb
cmpsl
mov
scas
aam
mov
sub
leave
or
xor
pop
mov
sbb
mov
dec
push
xor
inc
rcl
outsb
lret
mov
daa
lods
outsl
and
lcall
orl
cld
in
fistl
or
dec
enter
inc
jmp
call
mov
mov
outsl
fcomi
in
lock
mov
sti
jns
add
test
inc
icebp
mov
mov
push
int
je
add
cli
inc
adc
jg
pop
xchg
test
dec
bound
mov
push
xor
mov
inc
xor
adc
dec
in
xchg
add
mov
xchg
mov
leave
push
dec
nop
push
dec
loopne
fsubrp
sbb
cmp
ljmp
movsl
lret
adc
movsb
imul
or
stos
gs
xorb
push
leave
sarb
rorb
stc
pop
sub
ret
rorl
jmp
xchg
xchg
ret
inc
xor
inc
repz
fdiv
jmp
pop
js
xor
stos
cmp
rclb
mov
nop
dec
repz
dec
andb
idivl
imul
movsl
out
sbb
sahf
jg
mov
aam
lods
int
rcl
mov
push
xlat
stos
cmp
adc
pop
popa
and
push
mov
pop
push
mov
icebp
sub
ss
adc
push
arpl
mov
mov
subb
xor
fstps
cld
and
roll
dec
or
dec
xlat
push
push
test
or
pop
test
lret
sbb
adc
stos
dec
pop
sahf
outsl
inc
adc
adc
lahf
mov
out
or
insb
or
inc
fstps
mov
push
ds
cld
dec
cwtl
cli
loope
pop
mov
call
imul
fldt
sti
mov
mov
out
into
mov
jbe
into
lahf
sarb
shl
push
mov
xchg
push
outsl
mov
and
leave
repnz
inc
push
jo
sub
mov
popa
xchg
pop
je
arpl
push
ds
aaa
test
xchg
jp,pt
fcomps
and
mov
push
jne
addb
stos
sahf
decl
mov
cs
daa
das
out
cmp
dec
repz
loope
pusha
push
test
xchg
pop
and
arpl
test
lods
adc
sub
jmp
pop
jne
xchg
shl
or
lcall
lcall
xor
fisttps
pop
mov
movb
or
movsl
jb
icebp
icebp
orb
sbb
sub
inc
insl
pop
fcoms
mov
stos
pop
std
cwtl
pop
mov
in
inc
loop
fdivl
aas
cli
sbb
mov
lea
dec
mov
in
or
sahf
inc
sti
lcall
stos
jg
cmpsb
xchg
repz
push
fcomi
push
or
mul
loopne
roll
imul
adc
sahf
cld
pop
ja
jecxz
mov
frstor
mov
jmp
mov
mov
xchg
pop
ss
lcall
ds
pop
and
scas
add
fdivrs
aad
inc
jno
jp
xchg
lret
xlat
popa
int3
jmp
fs
test
add
inc
push
test
pop
bound
bound
les
pop
fildl
data16
sti
inc
mov
mov
dec
adc
pop
jmp
outsl
cwtl
insb
pop
leave
lcall
inc
inc
xchg
sahf
dec
dec
xlat
jge
xor
mov
push
ficompl
cmc
and
imul
bound
sub
testl
xor
mov
sub
nop
and
cltd
std
mov
cmp
js
dec
mov
push
sub
lock
cwtl
adc
mov
in
sar
and
inc
dec
lea
lds
sub
sahf
fcompl
divl
mov
dec
mov
jecxz
pop
xor
outsb
sbb
cli
adc
add
mov
shll
addr16
mov
cmpsl
pop
icebp
mov
mov
xchg
fwait
add
jle
stos
test
pushf
inc
add
xor
fucomp
subl
ror
mov
sub
ja
push
and
inc
dec
cmp
rcrl
rorb
vmread
mov
xlat
add
movsl
mov
pushf
push
ret
mov
clc
es
fisubrl
mov
iret
xor
add
test
lods
or
andb
push
jo
push
mov
leave
cli
in
adc
add
jmp
and
xchg
cltd
scas
shl
out
sbb
adc
pop
nop
xchg
adc
int3
push
jp
mov
insb
cmc
js
cltd
pop
out
aad
icebp
clc
add
cmp
iret
add
cmpsl
mov
xchg
pop
and
pop
movsl
xchg
pop
xor
loop
pop
insb
aad
movsb
mov
stos
popf
loope
dec
aas
out
pop
mov
mulb
in
cmc
push
push
xor
sub
sub
adc
pusha
shr
mov
pop
xchg
dec
mov
les
lds
out
mov
repz
out
mov
and
sbb
mov
out
mov
inc
mov
iret
mov
jl
push
add
xchg
fnsave
sarl
out
call
xor
add
push
dec
jl
in
repnz
push
ja
push
fistpll
loop
fwait
inc
dec
in
or
mov
out
mov
lcall
add
mov
int3
pop
or
push
push
iret
pop
clc
push
mov
imul
mov
ret
loop
ret
enter
xor
sbb
pop
flds
xor
add
enter
or
in
sub
pusha
pop
xor
jno
and
nop
aaa
jb
iret
jns
sub
mov
out
mov
je
lret
mov
jl
sbb
sahf
add
pushf
sarb
pop
or
daa
jmp
xchg
filds
xor
in
divl
cmc
test
push
lret
push
movsl
stc
fisubs
sarb
movsb
cmp
les
xchg
in
shlb
ljmp
das
outsl
pop
out
lahf
rorb
mov
adc
into
and
add
leave
jle
xor
leave
test
fwait
cmp
sub
xor
xor
dec
es
adc
fdivl
mov
lock
cmp
rcrl
jns
jns
sbb
and
pusha
sbb
jo
aaa
or
sarl
or
cs
into
out
outsl
fbld
cld
mov
xor
pop
aaa
cwtl
or
cmpsl
clc
imul
pop
addl
mov
xlat
es
or
mov
sub
push
out
mov
push
cmp
orl
movsb
repnz
push
pop
cmpsb
arpl
aad
aaa
jns
mov
loope
pop
and
test
out
negl
sbb
mov
cmpl
dec
mov
fcmovbe
cmp
sub
pop
cmpsb
or
fdivl
lea
jle
mov
push
inc
out
or
faddl
xor
sahf
pop
lcall
mov
xlat
pop
xor
iret
and
xor
shrl
sbb
push
mov
pop
or
sub
sub
xor
test
add
and
test
pop
xchg
and
cmp
pop
sti
xor
je
pop
aam
fwait
sub
jg
cld
rol
mov
mov
sarl
inc
cmp
adc
imul
mov
xor
mov
scas
jecxz
push
jmp
jne
mov
jae
outsl
in
cmp
inc
shrb
mov
out
scas
pop
push
or
lret
lea
lret
jge
in
loop
je
ss
enter
aaa
cli
cmpsb
or
add
es
test
pop
clc
push
lds
and
sahf
xchg
xchg
aaa
inc
icebp
jae
jecxz
push
mov
fwait
pusha
cmc
incl
pop
xchg
push
stos
loopne
lret
js
cmp
mov
lods
sub
paddusb
int3
mov
fdivrs
xor
adcl
sahf
sbb
sub
push
dec
adc
pop
adc
lret
cmp
fwait
add
xchg
dec
les
pop
mov
je
rcrb
sub
xchg
pop
lahf
pusha
lret
rclb
loop
mov
in
jg
loop
xlat
repnz
xlat
in
sub
push
mov
lea
dec
add
jne
sbb
sbb
aaa
popf
cmp
mov
das
daa
pop
test
add
mov
xchg
cmc
sbb
jmp
jo
mov
pop
mov
cld
dec
fs
jae
xchg
jg
and
les
or
pop
mov
popa
mov
loopne
rcrb
xchg
add
ljmp
lock
hlt
shll
sbb
scas
push
gs
nop
mov
movsl
mov
and
and
sub
cmp
and
pushf
adc
push
mov
or
aam
aas
testb
dec
lret
stos
dec
push
cwtl
push
mov
movb
jecxz
mov
lea
xlat
shll
jle
imul
jne
fisubrl
cmp
dec
test
in
mov
jae
jmp
mov
stos
icebp
add
ds
mov
push
stos
in
mov
push
dec
sub
or
sbb
pop
push
fs
jmp
ret
lds
mov
popf
add
lods
outsl
push
sub
ret
clc
cmp
inc
push
sbb
xchg
mov
cmpl
inc
aas
push
cmp
pop
sbb
ss
test
sbb
icebp
fs
loopne
neg
mov
mov
and
bound
cmp
and
js
lcall
xchg
leave
std
pinsrw
jno
add
push
mov
test
and
or
in
dec
add
inc
clc
xchg
push
ds
int3
outsb
enter
xchg
fistl
lcall
push
test
popa
sub
sub
pushf
inc
fmulp
mov
fnstenv
pop
repnz
push
mov
loopne
js
int3
sbb
js
and
mov
add
dec
into
ss
adc
gs
and
dec
adc
mov
lods
pop
std
pop
cltd
push
pusha
lret
cmpsl
mov
cmp
cmp
pop
push
mov
and
and
scas
add
mov
jnp
lods
mov
xor
cmp
in
outsl
shrb
jmp
out
andl
stc
iret
jge
mov
scas
addb
sbb
mov
mov
mov
movsb
and
je
insb
xchg
adc
mov
sti
sbb
insb
ror
clc
es
imul
mov
xchg
fisttps
jae
sub
cmp
mov
dec
outsl
xchg
in
ja
sbb
mov
lcall
imul
cmc
testb
adc
repz
fnsave
mov
cmp
jno
pop
jecxz
arpl
cmpsb
or
dec
xchg
cmp
push
pop
jbe
movsb
fldl
sub
rcrl
xchg
insl
jge
sbb
loope
rcrb
push
shll
fsubl
mov
cmpsb
sbbb
mov
xor
cs
sbb
sbb
mov
push
sbb
adc
inc
mov
adc
loopne
jge
mov
or
pop
jnp
adc
ljmp
fcompl
push
or
sbb
inc
in
push
shrb
or
xchg
cltd
inc
inc
mov
jno
test
sbb
mov
ret
in
inc
gs
sbb
in
mov
jns
bound
in
add
cmp
lds
test
test
pushl
inc
lods
dec
sahf
add
ds
jmp
jl
sbb
sti
pop
imul
pusha
shlb
add
xlat
push
push
rol
sub
sti
jg
outsl
mov
xor
mov
lds
or
clc
and
in
stos
xchg
test
sub
mov
push
sub
mov
repnz
mov
mov
inc
push
addr16
lods
loope
das
imul
negb
add
pop
data16
mov
sub
cmp
push
push
int
stc
inc
mov
rcl
cli
and
adc
pop
icebp
fwait
cwtl
jl
leave
les
test
jne
arpl
cwtl
ja
in
pop
out
mov
pushf
ljmp
mov
mov
adc
imul
es
sbb
int
ret
cmp
push
push
push
sbb
xchg
and
jne
jecxz
inc
rcrl
data16
add
loope
outsb
out
sbb
out
mov
roll
pop
mov
int3
ljmp
mov
pop
pop
pop
testl
pop
mov
cli
cmp
aam
rol
lahf
outsb
into
inc
dec
fmull
push
cltd
jecxz
int3
stos
sbb
repz
xchg
out
sbb
notb
push
push
es
xchg
into
sbb
mov
xor
or
or
xor
xlat
push
xorl
mov
add
ret
and
jne
jo
outsl
sbb
icebp
pushf
inc
push
testl
or
lds
inc
movsb
and
dec
cwtl
mov
filds
orb
dec
add
jp
fwait
sub
inc
rcll
enter
sbbl
push
aas
fstps
xlat
lahf
adc
in
cltd
xchg
push
and
lret
iret
dec
mov
cltd
pop
push
into
in
pop
dec
sbb
pop
out
mov
jne
scas
cmpsb
mov
rcl
loope
xchg
push
in
sub
or
sub
pusha
xchg
loope
mov
js
sub
js
gs
popa
aas
orl
lods
pop
inc
in
pusha
cltd
in
aam
shrb
adc
sub
adc
xor
mov
out
aad
arpl
pop
push
pop
mov
push
inc
cmp
cmp
xchg
js
dec
push
sbb
add
out
mov
cld
js
and
loop
add
mov
aad
or
and
pop
cmpsl
sub
notb
xchg
mov
lahf
jg
add
xchg
inc
loope
rolb
test
movsl
cwtl
in
mov
js
add
cmpsl
out
pop
adc
jbe
lret
pop
xchg
fiadds
mov
inc
mov
aaa
ret
dec
adc
mov
pop
adc
jge
das
es
jecxz
repnz
int
and
popf
sub
and
fisubrl
fsubrs
ret
movsb
icebp
mov
in
sarb
in
cmc
movsl
cmc
dec
cwtl
inc
xlat
mov
adc
imul
and
dec
dec
fisttpll
sarl
and
or
jbe
js
push
mov
add
mov
or
iret
dec
das
sahf
add
dec
ja
add
mov
scas
mov
lret
in
je
movb
nop
test
xlat
add
or
jecxz
and
out
and
push
mov
repnz
sbb
into
popf
ret
add
xor
lahf
or
or
cli
mov
push
mov
lock
in
mov
sub
lds
xchg
mov
subl
inc
pop
push
les
ja
fs
movb
sti
dec
xchg
sbb
adc
pop
pop
add
cmpsb
movsb
pop
or
cmp
andps
cltd
lahf
out
push
sbb
orl
repz
imul
pushf
dec
in
jne
mov
faddl
mov
push
shlb
and
add
push
adc
adc
neg
push
int3
add
jnp
dec
mov
mov
popa
pop
lret
mov
jbe
jne
inc
pop
mov
pop
inc
mov
movsb
inc
cmpsl
fmul
cmp
notl
mov
jge
aam
repnz
out
or
add
xor
jp
test
cmp
sub
ljmp
sbb
repz
outsb
ret
in
lock
fcmovnb
test
xor
xchg
dec
lret
ss
jo
mov
pushfw
iret
jno
sbb
add
shll
inc
pop
sub
sbb
pop
loope
ds
mov
das
cmovns
sbb
repz
pop
dec
testl
push
or
pushf
jge
mov
jecxz
inc
dec
cmpsb
pop
mov
out
add
fwait
cmp
lret
sti
stos
push
pop
ljmp
ja
inc
sti
enter
lods
icebp
pop
sub
sbb
fwait
test
mov
je
roll
cld
ljmp
and
push
imul
imul
pusha
loopne
or
shrb
adc
push
test
cmpsb
mov
sbb
ret
in
push
outsl
enter
enter
pop
bound
xchg
popl
pop
cwtl
lods
push
xchg
mov
mov
dec
repz
pop
or
xlat
add
sbb
jns
out
mov
inc
dec
mov
stc
sti
mov
or
int
jno
and
sub
push
pop
push
cmp
enter
dec
cmc
out
outsl
mov
dec
dec
pop
aam
adc
mov
adcl
fdivs
out
push
aad
inc
push
cmp
arpl
and
sub
jg
movsl
xor
out
enter
sbbb
jae
out
xchg
rclb
inc
dec
aas
pushf
insb
mov
and
imul
ror
add
leave
popf
pop
jmp
and
mov
int
xchg
pop
mov
ud1
cmp
push
mov
movsb
mov
loop
and
ss
or
adc
jle
stc
andl
pop
dec
cmpsb
js
das
loop
xchg
leave
push
repz
or
xchg
push
adc
cltd
adc
mov
dec
mov
inc
pop
jo
push
pop
jl
mov
inc
sub
out
xchg
inc
xor
pop
jnp
fidivrl
jge
lret
mov
or
or
insl
repnz
mov
outsl
ljmp
inc
stc
fstl
fnsave
out
sub
testl
out
in
push
enter
mov
mov
push
mov
scas
pxor
cmp
adc
inc
mov
mov
xlat
insl
and
into
jno
add
movsb
sub
insl
dec
add
inc
in
push
mov
cmp
push
push
andb
cmp
mov
sbb
jnp
aaa
mov
test
mov
jb
data16
inc
dec
xchg
mov
scas
mov
xor
mov
mov
or
mov
shll
xor
imul
mov
cs
sub
repz
fwait
aaa
in
xchg
push
in
sbb
call
or
or
movsb
lret
sbb
push
iret
pop
dec
test
call
out
xlat
and
lcall
jae
aas
scas
imul
iret
push
insb
cld
incl
fmuls
mov
fisttpl
mov
inc
ja
je
cmpsb
add
cwtl
xchg
and
jle
out
jg
cmp
sub
inc
outsb
ret
adc
push
sbb
inc
jae
ret
mov
les
xchg
inc
loopne
mov
scas
mov
outsl
sti
clc
add
xlat
and
in
je
lahf
push
lods
cmp
fsubrs
sbb
std
rcr
sbb
outsl
in
scas
pop
ljmp
repz
fldl
push
xor
push
stos
pushf
js
xor
pop
das
aaa
daa
out
jnp
fldl
sti
mov
adc
pop
cmp
test
fistps
out
rolb
aaa
pop
mov
mov
cmpl
add
and
dec
inc
sbb
or
lea
cmp
sub
jae
ret
mov
mov
push
scas
ljmp
addr16
cmp
add
jnp
repz
arpl
and
stos
test
sub
int3
mov
push
pop
in
je
ficomps
xchg
addr16
dec
xchg
dec
mov
ret
pop
pop
pop
out
inc
sub
out
faddp
aad
jp
and
je
jl
push
ret
mov
aaa
sahf
inc
clc
imul
or
arpl
ds
pop
inc
insb
loopne
adc
push
loopne
jns
daa
jmp
cmp
inc
xor
jb
fstpl
lock
mov
xchg
aad
pop
and
dec
jle
xchg
pushf
adc
lods
ret
pop
mov
shr
jp
js
xchg
inc
jmp
or
cli
xor
pop
jbe
mov
lock
mov
in
roll
cwtl
pusha
pop
push
imul
cmp
and
loopne
dec
mov
mov
jge
js
mov
mov
xchg
cld
inc
test
lahf
movsb
lahf
sub
xchg
mov
arpl
and
in
jno
out
mov
mov
out
movsb
jle
fs
mov
arpl
lahf
mov
scas
lock
incl
ja
rcrl
push
test
add
and
xchg
dec
push
insl
jne
xchg
sub
shrl
hlt
lret
movsl
jg
mov
ficompl
lods
lcall
and
fldenv
adc
arpl
or
hlt
xchg
subl
xor
scas
pop
jo
xchg
mov
shrl
push
cmp
mov
aaa
cmp
scas
xor
mov
addr16
outsl
gs
rorl
inc
in
pop
out
clc
jle
ret
in
arpl
push
ljmp
pop
mov
fidivs
jle
xchg
insb
data16
cmp
xchg
pop
dec
and
mov
lahf
out
imul
cmp
lock
imul
adc
jge
pop
mov
jae
xchg
in
pop
in
jp
cmpsb
leave
sub
and
xor
push
xchg
pop
add
inc
pop
fucomp
cmc
das
adc
xlat
and
add
test
pushf
push
add
xor
arpl
ss
mov
movsb
mov
adc
jp
sarl
mov
xchg
jl
ds
inc
fisubrl
repnz
xchg
test
dec
push
and
imul
hlt
mov
mov
dec
aaa
mov
sahf
mov
enter
jmp
xchg
and
int3
sbb
pop
mov
fmuls
mov
loopne
das
lcall
jp
pop
pop
sbb
or
cmp
mov
orb
test
in
repnz
int
movsb
adc
pushf
js
je
push
cmp
pop
pop
cltd
ret
lods
mov
imull
in
scas
cmpb
jecxz
push
mov
shr
jnp
ficoml
jb
pop
sub
fdivl
mov
inc
mov
ja
outsb
jb
xor
mov
mov
subl
mov
pop
mov
dec
pushf
sub
imul
sub
or
test
sahf
ds
mov
movsl
xchg
adc
pop
in
push
in
inc
or
and
pop
in
mov
lcall
and
lods
cmc
testl
lods
mov
pop
inc
or
fwait
imul
xchg
cmp
or
jbe
enter
test
rcrb
icebp
lods
orl
cmp
pop
xorb
mov
mov
sub
out
mov
pop
aad
xchg
sbb
jle
and
sub
cmp
test
ffree
popf
push
push
lcall
insl
movsb
cmpsl
ret
pop
rorl
mov
inc
inc
jmp
cld
cli
iret
shrl
fnsave
mov
and
and
xchg
mov
push
adc
std
mov
lret
repnz
mov
lods
pop
and
outsb
jge
push
jae
sbb
dec
adc
mov
std
iret
sarb
loop
add
es
daa
pusha
add
mov
mov
mov
add
dec
ret
cli
xor
or
add
ret
push
jnp
xor
jle
cmp
dec
into
add
popa
lret
sbb
in
imul
mov
rol
cmp
cmc
test
jns
cmp
mov
lea
leave
sti
movsb
call
push
lock
add
clc
pop
xchg
mov
outsl
sbb
aam
mov
sbbl
jb
loopne
cmp
and
aaa
insl
jg
sbb
rorb
mov
testb
push
insb
insl
test
lret
cld
addr16
fs
repnz
inc
xor
pop
mov
add
jns
pop
loopne
push
sti
lret
movsl
scas
cmc
imul
outsb
je
test
sbb
dec
and
sahf
out
mov
xchg
in
out
sub
gs
dec
xor
inc
cmp
adc
call
shrb
out
out
dec
movsl
xchg
sahf
fs
push
jp
je
xlat
sub
sub
and
mov
mov
or
pusha
sbb
mov
addr16
jle
stc
inc
add
outsl
push
mov
xor
sub
pushf
std
pop
dec
and
in
daa
adc
or
mov
push
mov
mov
cmp
jle
nop
adc
fsub
mov
xchg
adc
je
repz
dec
fldl
sub
daa
popf
mov
outsb
cmc
and
lea
repnz
flds
lea
dec
mov
lods
ror
push
push
stc
mov
popf
mov
fsubp
fbstp
test
xor
test
rcr
sub
popa
xor
das
xchg
je
lods
mov
je
cmp
mov
jge
xlat
jge
std
or
cmp
pop
repz
xor
ss
lock
pop
leavew
jbe
pop
aad
rorb
out
jmp
inc
cmp
aad
push
xchg
sub
call
addr16
add
test
sub
mov
jmp
ljmp
mov
jp
mov
mov
arpl
ret
sarl
inc
jbe
add
nop
pop
cltd
adc
add
stc
and
jns
cmp
dec
cltd
mov
int3
imull
mov
sbb
cld
negl
and
lea
loope
push
ljmp
cmp
mov
pop
mov
scas
jbe
cwtl
loope
andb
add
xor
jb
pop
rorb
orb
cmc
fidivs
ss
and
aas
and
out
pop
push
xor
jge
mov
xchg
add
addr16
xlat
push
fnstenv
test
ljmp
lods
push
scas
inc
js
cmp
pusha
aaa
jae
jbe
sahf
xchg
fadd
adc
inc
adc
mov
cltd
repz
xor
push
loopne
fmuls
cmpsl
mov
pop
les
mov
gs
lock
pop
fs
lahf
rcll
pop
mov
mov
shlb
xor
and
jge
push
push
push
les
sti
adc
pop
jle
dec
mov
test
mov
add
inc
push
test
inc
adc
iret
inc
cmp
inc
ljmp
cwtl
dec
mov
jmp
imulb
inc
mov
cwtl
out
je
fstl
dec
xor
test
sbb
out
shll
mov
int3
xor
cli
loope
aam
mov
sbb
cmp
adc
push
scas
dec
push
mov
in
into
mov
inc
or
fimull
das
xchg
into
jl
cmp
push
xchg
push
cmp
aaa
repz
bnd
mov
shlb
rcrl
ret
shrl
sarb
sub
es
pop
in
cmp
cmp
mov
popa
jno
push
repz
sarb
or
xchg
popa
and
jmp
std
inc
fistpll
push
sbb
adc
cli
adc
adc
xchg
jno
test
cmp
and
outsl
push
mov
fs
cmp
mov
sbb
loope
fnstenv
repnz
std
sarb
iret
in
cltd
inc
add
mov
and
mov
pop
nop
in
sub
xchg
xchg
dec
adc
push
lret
mov
cmp
and
fwait
sbb
imul
xlat
mov
stos
push
mov
js
in
out
xchg
mov
aam
mov
movsl
jnp
mov
dec
in
iret
test
in
pop
mov
movsb
push
push
rolb
test
inc
sarl
arpl
iret
sti
sbb
mov
int3
aas
ss
xchg
mov
and
sub
push
pusha
dec
cwtl
pop
inc
and
inc
or
cmp
push
sti
or
pop
bound
xor
jno
fists
shll
fwait
xchg
jns
inc
push
js
and
ret
sbb
out
icebp
fcmovb
lahf
jp
mov
inc
inc
sub
mov
xchg
aam
mov
dec
adcb
jmp
push
aad
std
lods
rol
ja
xchg
pop
mov
jecxz
aam
rorb
pop
pusha
js
xchg
lcall
xlat
ficomps
bound
pop
add
mov
push
fsin
pop
mov
cmp
dec
in
lea
mov
push
xchg
addr16
mov
jns
xor
push
repnz
push
roll
lods
scas
push
popa
mov
lret
mov
aaa
shll
mov
int
dec
jbe
lahf
arpl
lret
and
push
pop
ja
mov
fstpt
imul
sub
shll
inc
sub
pushf
sbb
add
mov
rclb
ror
mov
jae
sbb
ljmp
pop
mov
jl
dec
mov
mov
mov
cltd
cld
jns
push
stos
ljmp
pop
insb
repz
adcb
xchg
mov
popf
mov
aam
jno
push
lahf
test
fdivrp
gs
leave
mov
or
loopne
cmp
shll
loope
loopne
jl
xchg
cmc
xor
jmp
push
add
sub
cmp
rorb
jmp
rorl
ret
add
and
lods
xor
cmc
mov
iret
add
mov
xchg
and
cli
sub
cmp
cld
push
es
jge
jnp
cld
in
dec
inc
xor
inc
jg,pn
fiadds
cli
in
sub
in
in
mov
daa
dec
inc
pop
filds
xchg
sub
inc
or
loopne
sahf
rcl
aas
test
in
adc
das
mov
push
stc
inc
mov
cli
jl
xchg
lcall
call
sbb
pop
dec
outsl
aad
out
xchg
das
push
and
mov
in
push
sbbb
cli
movsb
dec
sub
fs
mov
cwtl
xor
hlt
mov
xchg
ja
ds
imul
call
jmp
dec
cld
push
popf
sbb
inc
enter
and
push
cmp
inc
fwait
cmp
jle
leave
mov
xchg
test
add
mov
jns
pop
jl
in
out
dec
enter
lcall
sti
addb
cmp
incl
bound
xchg
and
in
cmp
or
test
cli
add
aam
loopne
outsl
jg
sub
pop
push
cmp
bound
pop
sub
xchg
cltd
mov
xor
je
subl
xchg
jae
pop
enter
aam
add
rcl
mov
pusha
jl
in
clc
sbb
add
add
in
add
in
mov
xlat
mov
in
adc
fcmovb
repnz
out
call
imull
lcall
xchg
mov
pop
push
cmc
testl
stc
nop
push
test
fwait
sub
pop
lds
sar
cmpsb
mov
loop
mov
dec
mov
lods
cmc
sbb
sub
xchg
js
loope
sarb
roll
jle
sub
dec
lods
mov
mov
mov
aam
and
inc
push
adc
push
adc
sti
mov
les
push
repnz
and
lret
xorb
int3
fidivrl
addr16
inc
jo
mov
shr
cmpsl
enter
mov
adc
xor
cmp
jbe
cwtl
repz
lret
call
jge
mov
shr
xchg
ljmp
sbb
xor
pop
mov
sti
loop
cs
inc
adc
mov
sub
push
int
sub
sub
inc
mov
push
mov
int
out
aaa
incl
push
cs
mov
inc
aas
ficoms
in
xchg
lods
loopne
or
jb
data16
inc
ds
mov
push
out
shll
and
lret
jne
lret
pop
repz
addr16
loopne
pop
lret
das
das
rcrb
je
nop
fs
dec
pop
mov
lahf
mov
loop
and
fwait
daa
outsl
or
adc
icebp
xor
inc
mov
mov
sbb
mov
mov
fsubr
stos
aam
cld
lods
call
adc
adc
les
jno
pop
or
insb
mov
out
es
inc
jae
add
push
xchg
neg
lods
pop
ret
and
pop
bound
stos
and
jecxz
inc
rcr
mov
mov
neg
jo
add
and
daa
clc
add
cltd
mov
bound
pop
push
std
lock
inc
imul
repnz
mov
sbb
roll
and
imul
push
mov
dec
dec
dec
mov
sbb
push
fs
sti
jnp
pop
xchg
lret
adc
roll
mov
mov
repz
adc
or
subl
jg
mov
and
out
cmpsb
or
mov
push
add
fiaddl
dec
outsl
xchg
pop
dec
es
fwait
das
adc
repnz
mov
cmp
test
xchg
xchg
icebp
mov
out
pop
inc
sti
sub
mov
das
sti
ljmp
sub
xchg
outsl
xchg
sub
mov
fbld
out
mov
add
pusha
es
push
pop
push
addr16
outsb
outsl
jmp
sub
loope
jb
dec
sbb
dec
mov
push
sti
and
fstps
jbe
outsb
cltd
rclb
aaa
stos
stc
enter
out
fisttpl
cmovg
push
push
ss
outsb
icebp
je
insl
adcb
sahf
out
push
jmp
pop
mov
lahf
pop
cmp
sti
inc
inc
sbb
or
sbb
add
mov
mov
cmp
inc
pop
pop
aam
jg
jle
dec
or
mov
das
ret
jp
lods
mov
adc
sbb
dec
gs
push
div
cltd
test
adc
gs
mov
dec
mov
fstps
push
sub
jo
dec
mov
fdivrs
xor
push
adc
cmp
jo
test
pop
mov
stos
std
gs
lock
push
jae
mov
outsl
aaa
cs
sar
cmp
mov
sahf
loop
lea
fprem1
sbb
idiv
push
xchg
push
out
xchg
or
and
xchg
mov
addr16
xchg
clc
test
iret
cmp
xchg
movsb
inc
xor
mov
in
lcall
lcall
mov
popf
sub
jnp
mov
push
cmpb
dec
jns
cld
sub
push
lods
test
pop
cmp
dec
sub
or
and
mov
push
xchg
cmp
xchg
adc
mov
xchg
sbb
mov
adcb
add
mov
dec
add
daa
mov
sbb
dec
push
jl
test
jb
and
inc
shlb
mov
cltd
enter
and
movsl
daa
add
jp
push
lock
bound
mov
adc
stc
mov
fcmovnbe
mov
aas
jmp
arpl
int
repz
es
jp
cmpsb
xchg
cmp
push
gs
clc
mov
aaa
daa
jmp
enter
adc
aaa
xchg
sub
xchg
inc
aad
nop
dec
cmc
cmpsl
cmpsl
and
inc
inc
addl
pop
and
in
adc
in
loopne
rclb
xor
cmpl
testb
sub
add
outsb
outsb
lret
aad
sub
in
cmp
cmp
dec
xor
push
pusha
inc
popf
out
lock
loopne
imul
lret
mov
xor
push
xchg
out
cmp
aas
add
hlt
scas
jbe
xor
inc
add
lcall
and
cmpsb
jo
arpl
fcomi
pop
js
imul
cmp
dec
addr16
cli
nop
push
jp
in
shll
shrb
xor
push
ds
or
dec
xchg
xchg
movntps
iret
mov
push
pusha
inc
insl
in
cmp
jns
stos
sahf
push
xchg
jp
cmpsb
scas
push
push
xorb
in
ja
lds
mov
aam
push
push
xchg
mov
sahf
or
or
ret
popf
fwait
sbb
cs
fcmovne
push
addr16
enter
in
and
adc
mov
lods
sub
lock
iret
cmp
sub
in
dec
loope
and
push
mov
cmp
pop
movsb
lret
out
pop
neg
dec
xchg
adc
xchg
or
out
mov
sti
jecxz
nop
xchg
mov
es
sbb
pop
cltd
fiadds
mov
mov
in
xchg
mov
adc
inc
mov
stos
jp
and
insb
sbb
mov
pushl
mov
loopne
sarl
fst
in
lahf
jp
sub
pop
mul
jmp
daa
cltd
mov
jno
mul
push
xchg
sub
scas
or
rclb
dec
pop
sub
inc
xchg
dec
push
xor
mov
into
pop
mov
jmp
fisubl
call
push
xchg
mov
or
mov
and
xorb
mov
or
sbbb
pop
add
ret
jge
bound
push
adc
jp
cwtl
rorl
sub
pop
ja
mov
and
lcall
fwait
sbb
cld
ljmp
dec
adc
call
aas
sti
mov
mov
fimuls
pop
icebp
popf
push
lds
fucomp
sbb
add
aaa
mov
xor
cmp
adc
add
sbb
adc
into
in
cs
inc
push
mov
scas
dec
hlt
mov
cmp
cmp
fists
mov
stc
sarl
push
xchg
sti
negl
push
and
mov
push
mov
jecxz
shrb
dec
pop
push
mov
sub
mov
mov
fwait
mov
mov
jle
aas
sbb
std
xor
sub
lods
cltd
xchg
inc
int3
jo
push
loop
dec
push
adc
test
sbbl
xchg
xor
in
push
sbb
je
dec
decb
lahf
and
add
pop
rcrl
jne
sbb
xor
xor
sub
shl
xchg
xchg
stos
in
lods
orb
pop
in
mov
inc
clc
sub
into
pop
sbb
push
adc
pop
cmc
cmpl
fidivl
sbb
test
lods
sbb
add
jb
jnp
test
subb
push
mov
sub
adc
fiaddl
mov
fnsave
iret
adc
cwtl
sbb
popf
xorl
xchg
das
cmp
sbbl
es
xor
aas
mov
xchg
data16
lahf
push
or
sub
adc
nop
jp
add
ds
lds
jbe
cli
jbe
fldenv
in
ds
mov
data16
push
pop
mov
push
dec
mov
aaa
cmpb
or
add
mov
adc
inc
mov
push
xor
mov
inc
lret
outsb
out
add
stos
inc
adc
inc
addr16
ja
adc
and
fiaddl
pop
xor
cmpsb
jne
movups
ds
pop
adc
or
sahf
lea
leave
dec
popa
leave
test
sub
notl
dec
push
xor
hlt
or
pop
outsl
cmp
dec
mov
push
push
gs
or
repnz
das
aam
adc
mov
push
pop
fs
jae
dec
fs
jecxz
flds
enter
loop
mov
movsl
std
adc
jnp
cmp
or
push
repz
mov
mov
push
sub
lods
ret
mov
push
mov
and
js
and
mov
add
cmpsb
mov
mov
or
cmp
or
adc
lds
js
xchg
jl
outsl
gs
std
and
jae
flds
mov
arpl
add
pop
xchg
ror
dec
jo
push
jg
addb
std
pop
jae
dec
inc
jmp
clc
je
lret
cmp
and
stc
scas
mov
mov
and
mov
xchg
test
pop
into
and
add
xchg
sbb
xchg
in
xchg
add
adc
scas
push
cmpsl
dec
ss
aaa
enter
or
fcomps
call
and
arpl
inc
adc
pop
xor
mov
mov
add
das
sbb
insl
imul
fidivl
sub
xchg
fidivrs
icebp
inc
int
push
lahf
pop
mov
push
popa
push
stos
and
aad
xor
adc
test
dec
stos
mov
cltd
and
push
or
shl
or
or
imul
movsl
pop
pxor
int
shlb
mov
pop
or
xchg
out
sbb
cmp
leave
mov
push
dec
add
ljmp
adc
dec
imul
int
mov
xchg
push
das
push
inc
jl
arpl
push
sarl
push
loope
pop
gs
mov
subl
into
clc
lret
mov
ret
test
mov
mov
and
fbld
clc
xchg
sbb
enter
test
jl
cmp
aam
lahf
push
add
push
mov
jl
pop
loop
outsl
fcoms
and
sahf
aaa
push
fwait
aad
lods
push
out
mov
inc
push
jns
or
loop
xor
xchg
add
dec
push
mov
cmp
mov
sbb
fnop
pop
pop
fcomip
imul
mov
daa
int3
pop
das
mov
xchg
adc
xor
fisttpl
mov
mov
ret
dec
and
push
daa
and
jns
cmp
add
xchg
push
fldcw
jl
outsb
mov
stos
mov
cmp
pop
fs
pop
or
pop
adc
sub
mov
insl
ret
and
mov
xchg
xchg
lock
in
movsb
je
rcr
mov
inc
cltd
addr16
pushf
in
ss
push
hlt
scas
lods
stos
das
jo
xchg
in
mov
xor
stos
mov
pop
xchg
rorl
push
or
test
adc
sbb
xchg
icebp
pop
or
test
les
ljmp
dec
mov
sbbl
cwtl
inc
std
jmp
insb
pop
addr16
dec
xor
dec
fdivr
imul
pop
movsl
movsl
in
ja
jns
test
std
aaa
inc
or
movsb
add
mov
stc
aaa
mov
lret
stc
out
jmp
and
enter
gs
cmp
xchg
lods
fisubrl
in
adc
xor
mov
sbb
clc
hlt
les
push
and
adc
popa
lahf
mov
push
inc
mov
mov
jl
movsb
mov
dec
leave
lock
lds
out
insb
loopne
dec
pop
jp
jo
adc
insb
or
movsb
or
adc
pop
shrb
stc
mov
mov
scas
push
shrl
xchg
shl
shlb
pop
jp
xor
aas
jo
std
repnz
xlat
fcomi
popl
mov
and
int3
and
rcr
add
lock
mov
push
pop
cmp
mov
fdivl
sub
dec
adc
jmp
jle
dec
inc
shll
dec
pushf
data16
xor
lds
sahf
ljmp
cld
jmp
test
adc
dec
mov
mov
mov
std
mov
or
mov
xchg
mov
mov
adc
mov
adc
or
adc
cmp
pop
and
jo
mov
adc
rclb
lds
or
xor
or
and
mov
pop
cmp
hlt
jbe
mov
xchg
xor
adc
shrl
jae
int
jl
mov
rolb
aad
rolb
xchg
add
fstpt
aas
cmp
fimuls
xchg
sub
push
add
vdivps
dec
repz
ret
testl
and
pop
sub
movsl
xchg
pop
mov
jmp
mov
xchg
cmp
ret
fidivrl
arpl
outsb
push
jno
cwtl
adc
mov
cld
or
sbb
pop
aad
ret
push
add
ja
sub
cmpsl
outsl
or
stos
jae
ret
ffree
cmp
in
sahf
gs
repnz
xchg
aaa
out
xchg
pop
mov
lods
dec
addr16
mov
cmp
adc
lcall
pushw
ja
jmp
out
or
lahf
mov
and
cmpsb
lahf
add
fbstp
repnz
stc
lea
sbb
and
push
cmc
cmpsb
push
je
add
rorl
dec
scas
inc
idiv
xor
test
mov
or
sbb
add
xchg
repnz
cld
inc
hlt
adc
pop
fsub
jmp
rcll
mov
mov
in
jne
test
hlt
cmp
jb
add
fistl
fwait
in
and
popf
sti
mov
mov
dec
sar
cmp
fs
mov
loope
bound
fsubs
mov
in
inc
cli
pop
mov
adcb
sti
add
or
lds
out
fisubrs
lods
testl
jmp
xor
pop
pop
in
lds
jp
repz
pop
cmp
jg
inc
ret
cmp
fstl
sbbl
inc
mov
add
cwtl
dec
dec
sbb
das
rclb
push
mov
xor
and
cmc
xlat
bound
add
es
out
xor
ljmp
out
xchg
xchg
imul
jp
sub
vmwrite
nop
xchg
repz
push
cwtl
sub
xor
movsl
and
xor
lahf
push
or
jb
test
inc
sbb
sahf
pop
insl
int3
dec
sbb
xor
inc
mov
stc
mov
adc
sub
mov
inc
add
out
sbb
aaa
pusha
and
xor
sbb
jne
iret
in
mov
dec
jmp
lahf
ds
xchg
leave
out
dec
pop
iret
dec
and
daa
dec
pop
push
pop
jo
jno
cmp
outsl
test
mov
dec
mov
enter
ljmp
lret
or
rol
add
repnz
cld
icebp
jb
jp
cwtl
add
sahf
lret
push
jae
inc
loop
sbbb
or
cwtl
or
jg
xchg
or
dec
je
imul
rorb
or
bndldx
add
add
mov
xlat
arpl
mov
mov
sbb
jmp
into
cwtl
mov
imul
lret
shll
les
lret
std
aam
and
in
insl
lods
bnd
nop
xor
lret
inc
iret
mov
xor
push
daa
sbb
and
in
fs
in
push
fmul
rcr
jp
and
add
in
sarb
xchg
and
out
push
mov
add
xchg
mov
push
loop
les
push
cmpsb
movsl
pop
andl
fistl
jp
mov
cmpb
pop
add
push
and
shl
cmp
inc
xchg
mov
pop
mov
cld
mov
rcrb
xor
call
ljmp
adc
or
ja
mov
nop
mov
js
or
mulb
lahf
sarb
mov
sbb
rorl
pop
mov
xor
negw
insl
add
sbb
and
fdivl
aas
cmp
and
imul
jo
xor
les
loopne
and
mov
shlb
sub
and
ja
pusha
jle
rcrl
shl
push
cli
insb
repnz
std
sti
int
cmp
fidivrs
bound
imul
jne
jle
dec
mov
ja
fldz
loop
stos
pop
test
pop
inc
int
adc
popa
mov
aam
ljmp
into
push
jg
push
icebp
pushf
test
pop
mov
push
xchg
cmpsb
aaa
sub
fsubrs
into
aam
xchg
push
call
in
pop
js
outsl
mov
cmp
icebp
xchg
fstps
jle
cmp
inc
rol
test
ficompl
dec
inc
scas
xchg
lea
push
aam
add
jb
repnz
xchg
iret
xor
mov
mov
xor
xor
movsl
js
popa
notl
jno
push
test
sub
pop
jmp
xchg
pop
add
mov
push
cs
dec
pop
adc
fimuls
mov
sbb
xchg
cmp
xchg
das
ljmp
fstl
into
ljmp
dec
popl
adc
sbb
sub
outsl
adc
test
popf
lods
loopew
and
insb
inc
mov
jl
ja
dec
mov
lods
jae
loop
sub
pop
out
sahf
xor
icebp
lahf
add
cmpsl
in
mov
and
scas
inc
push
gs
das
subl
mov
mov
repz
into
push
ret
sub
fildll
push
hlt
cmpsl
sub
mov
fstps
aaa
mov
lds
bound
inc
test
iret
lods
ret
jo
out
fwait
push
xchg
jl
sbb
loop
xor
shl
mov
cwtl
leave
push
mov
inc
pusha
pop
stos
xchg
stos
int3
sub
mov
mov
int3
out
mov
fimuls
cmc
or
rorl
gs
fldt
leave
push
stc
pop
sbb
movswl
aam
or
or
test
cmp
add
js
stos
iret
push
pop
movsl
pop
sub
sub
mov
in
push
xchg
cmp
lods
out
test
or
and
adc
jo
cmp
mov
sub
loope
dec
push
inc
sbb
out
loope
out
idivb
js
out
test
cmpsl
xchg
stc
outsl
outsl
add
pop
adc
and
jo
inc
pusha
pusha
iret
lahf
shlb
cs
mov
push
mov
test
add
pusha
mov
or
stc
test
pop
push
int3
inc
and
push
test
sti
int3
arpl
adc
push
aas
fucomp
push
pop
clc
movsb
push
pushf
mov
cmp
jbe
bound
aad
mov
popf
movsl
rcrb
adc
or
fisttps
mov
test
mov
push
ror
in
bound
and
jne
and
mov
pop
popl
dec
roll
inc
out
add
lret
jb
in
and
xchg
lret
daa
mov
push
or
dec
ret
test
jg
adc
daa
js
lock
jle
cmp
mov
jae
ret
movsb
rorl
and
pop
xchg
test
ret
fcompl
dec
inc
insb
mov
mov
fbstp
jae
jae
lcall
adc
into
pop
lcall
pop
adc
lods
popl
iret
jg
enter
aaa
lods
mov
sahf
inc
xor
testb
xchg
push
cwtl
call
imull
mov
push
ljmp
ds
test
mov
fcompl
bound
xchg
out
iret
add
lahf
nop
mov
sahf
and
aam
movsl
outsb
xor
pushf
pop
pushf
push
xor
shlb
sti
imul
lods
pop
clc
mov
js
mov
jae
loopne
mov
mov
imul
cld
loop
jl
movsb
xchg
inc
or
push
pop
mov
ror
in
frstor
pop
js
fidivrl
jnp
call
push
shlb
push
mov
push
sbb
pop
xor
stos
bound
mov
pop
pop
mov
inc
cli
int3
adc
aas
fs
xchg
sub
or
ja
push
insl
repz
and
adc
loope
cmp
mov
add
rclb
fcoml
sbb
les
das
jb
lods
rcll
icebp
aaa
sub
dec
out
dec
cmc
mov
mov
mov
mov
leave
aad
aas
inc
sub
repnz
and
iret
dec
adc
scas
and
sahf
inc
mov
mov
rorl
push
fwait
pop
sahf
lcall
dec
inc
pusha
popf
inc
mov
pop
jne
in
rolb
je
cs
es
scas
imul
mov
mov
shlb
fadds
lds
jle
dec
inc
sarl
clc
pop
out
test
pop
pop
cmpsl
mov
dec
ret
jns
je
push
sub
push
pop
jo
mov
or
sti
scas
cmpsb
stos
imul
mov
adc
arpl
push
lock
lret
sbb
scas
push
mov
inc
pop
mov
in
pop
shr
shl
popf
add
cmc
pop
sbb
leave
hlt
jae
or
add
mov
xchg
insl
dec
inc
inc
add
nop
inc
dec
mov
test
popf
dec
fisttpl
dec
dec
sub
fldenv
xor
out
movsl
leave
cltd
mov
loopne
aas
int
out
xlat
scas
cld
imull
enter
push
dec
and
aad
mov
roll
addr16
fstp
cmp
cmpsb
in
int3
mov
mov
popf
adc
aaa
call
cwtl
add
inc
jne
xor
pop
push
sbb
sbb
jmp
pop
pop
dec
hlt
xchg
push
jle
out
cwtl
clc
push
add
in
jo
std
cmpsl
jge
aam
jo
push
mov
push
out
rcrb
aad
dec
int3
aaa
ja
mov
nop
out
xor
in
out
test
or
xchg
xchg
cltd
popa
ret
scas
loope
inc
lcall
mov
mov
lods
mov
loope
test
adc
popa
dec
cmp
xchg
das
mov
test
repnz
push
leave
mov
test
pmaxub
jno
fwait
shll
mulps
ljmp
push
inc
jae
sub
stos
jo
imul
inc
clc
daa
xchg
rorb
bound
push
pop
push
push
adc
cltd
add
sub
sti
pop
jne
rcl
and
test
and
loop
xor
ficoms
cmp
daa
pop
loop
fldl
lahf
shrb
test
outsb
sbb
pop
jae
rolb
stc
adc
pushf
andl
pop
cmpsl
sub
mov
cmp
out
mov
rorb
aas
in
fwait
sti
or
mov
jl
add
into
outsb
loop
xchg
pushf
ret
push
adc
inc
fcmovu
cmp
addr16
rclw
or
fcmovnb
jnp
cmp
cwtl
fwait
sbb
inc
pop
cmp
xor
adc
inc
js
pop
cmp
out
je
aad
mov
sti
or
inc
cmp
idiv
jp
sub
xor
outsl
sahf
in
xchg
insb
and
cmc
nop
adc
or
in
or
ja
and
inc
dec
in
sub
and
pop
mov
xor
push
iret
js
push
mov
addl
bound
jle
fdivrl
lcall
sub
shlb
or
xchg
add
pop
pushf
mov
inc
in
mov
rorb
sarl
test
es
int
adc
and
jl
out
in
movsl
popa
xor
sub
adc
xchg
or
jo
pop
pop
sub
jmp
ret
mov
pop
aam
cli
fstps
loope
fcmovnb
jp
cmp
scas
stc
lods
push
pop
and
xor
movsl
sub
daa
rclb
add
cmpl
jo
xchg
arpl
movb
test
int
arpl
aad
pop
lods
push
bswap
stc
sub
dec
pop
leave
roll
adc
mov
inc
lds
das
dec
pop
imul
xchg
aaa
xchg
lret
ror
xor
out
loop
hlt
sbb
push
mov
rcrl
rclb
mov
cmp
jmp
outsl
lret
movsb
push
and
andl
pushf
js
jge
stos
into
mul
inc
mov
mov
inc
out
call
gs
lea
push
addr16
jno
add
mov
popa
add
sub
sub
sub
addb
pop
jle
jbe
shrl
ss
mov
push
xchg
cld
or
lods
inc
mov
inc
scas
pop
or
mov
aad
imulb
bound
sbbl
ret
ror
stos
xchg
fcoms
push
xchg
dec
test
sub
cmpsl
or
push
mov
add
ret
lahf
in
inc
pop
pop
jae
or
jne
in
xchg
test
mov
andb
mov
xchg
dec
call
cli
imul
std
push
push
mov
xchg
leave
jg
cmp
dec
sbb
ja
pop
or
sub
insb
out
mov
adc
lds
test
and
jmp
mov
iret
ds
fwait
pop
sub
shr
sub
fwait
lsl
add
rcrl
sbb
cmp
jae
test
mov
pop
arpl
sub
mov
insl
fldt
in
or
push
jnp
or
lret
ret
or
and
lret
shlb
push
and
fs
or
push
in
push
cltd
sub
and
push
lar
xchg
and
shrl
inc
and
and
icebp
xchg
mov
aad
lea
push
test
sub
inc
mov
mov
adc
cmpsl
inc
bound
popf
dec
call
bound
push
int3
and
int3
pusha
cs
in
test
mov
xorl
dec
std
or
jle
cmp
das
aam
fwait
pop
fsubrs
test
mov
ss
sbb
addb
jnp
loope
sbb
mov
sub
xor
shlb
es
loop
in
cmp
pop
push
je
add
mov
lea
inc
stos
in
sbb
jg
fcomps
xchg
sahf
testb
adc
addr16
shrl
iret
pop
fcmovnu
mov
jl
mov
jno
mov
mov
repnz
les
jb
out
or
rorb
mov
mov
mov
rcll
iret
sbb
pop
testb
push
mov
mov
stos
cli
mov
cmp
js
movsb
outsl
in
jbe
rclb
out
jmp
fiadds
out
fmuls
scas
lock
aam
ret
cmp
inc
loopne
pop
cmpsl
es
fs
mov
push
aaa
xchg
mov
pop
jnp
add
roll
and
dec
mov
aaa
push
dec
mov
stc
mov
lea
mov
or
test
mov
clc
ret
insl
cmp
stos
addr16
or
add
mov
and
and
test
adc
xchg
xor
fidivrs
dec
test
icebp
pop
inc
inc
hlt
and
and
loope
jno
adc
loopne
subb
movsw
inc
aam
xchg
clc
scas
gs
push
xor
inc
aas
aas
int
dec
push
pop
inc
dec
in
fmuls
and
and
out
lds
lcall
jno
dec
lds
mov
test
pop
movsl
push
int3
cmpsl
mov
pop
fldcw
popa
adc
jge
adc
mov
jne
icebp
sahf
jecxz
mov
mov
inc
ret
fmull
jno
in
jno
sbb
cmp
xor
hlt
sub
cmpsb
sbb
cld
addr16
mov
sub
in
outsl
push
imul
jno
ret
push
das
and
insl
add
adc
ret
fcoml
cmp
loop
jo
and
adc
sub
pop
inc
cltd
imul
push
pop
mov
stos
inc
pop
loop
pop
xlat
mov
sub
lret
cld
mov
jecxz
dec
sbb
popa
rcrb
lea
adc
mov
xchg
jg
mov
cmp
cmpb
test
inc
movb
loop
xchg
imul
xchg
aaa
pop
js
cltd
mov
xchg
adc
sub
mov
or
xor
xchg
inc
out
xor
xchg
cltd
lds
unpckhps
mov
idivl
push
out
add
mov
out
add
shlb
hlt
or
int3
leave
adc
pop
rcrl
hlt
sahf
xor
jns
testb
pushl
push
adc
nop
das
sbb
sbb
push
filds
sub
cmp
bound
mov
xchg
test
sbb
push
adc
jb
bound
xchg
inc
mov
push
outsb
int3
or
pop
push
mov
iret
mov
mov
mov
inc
dec
xor
ret
and
jg
loop
and
movsb
fldenv
xchg
mov
xchg
mov
popf
mov
stc
icebp
cmp
jnp
sarl
aas
dec
jb
adc
in
in
ds
add
call
fisubrl
or
fists
dec
adc
jns
jbe
loope
fdivl
xor
jg
pop
or
out
scas
cmp
iret
in
adc
mov
rcrb
imul
outsl
xlat
push
lods
insb
andb
xor
ljmp
loop
sub
test
lock
sbb
pop
cmp
adc
xchg
bound
or
je
clc
sbb
insb
pop
adc
in
ds
js
mov
and
jecxz
xchg
cmpsl
pop
icebp
push
cmpb
xor
mov
shl
js
lods
cli
cmp
pop
aad
mov
sub
dec
mov
push
xor
cmp
mov
sbb
sarl
sahf
inc
fistpll
mov
sbb
inc
xor
test
loopne
push
in
inc
jl
lods
test
cmp
xchg
mov
xchg
loopne
or
daa
xchg
ss
mov
lea
test
xchg
dec
pushf
pop
je
dec
mov
out
cmp
pop
bnd
test
xor
lock
insb
mov
cmp
sti
jl
push
sub
lahf
xor
jbe
lret
or
adc
pusha
xor
push
rorb
mov
push
jbe
es
punpckhdq
lahf
out
push
mov
add
loopne
mov
sub
jmp
pop
xor
shrb
imul
in
rorl
in
mov
mov
imul
and
dec
jle
or
inc
ja
cmpsl
push
out
cwtl
pop
stos
jnp
ja
mov
lods
js
daa
or
push
push
mov
pop
and
leave
mov
adc
repnz
int
int
pop
mov
cli
xchg
test
fwait
stc
stos
enter
lods
shrb
rep
mov
adc
cmpsb
lahf
int3
int
movsl
adc
iret
lds
test
push
idivl
mov
pop
das
xchg
repz
add
pop
jmp
cli
rolb
in
push
mov
add
jo
inc
mov
lods
inc
xchg
add
cmpsl
hlt
mov
fs
and
out
cmp
mov
mov
push
call
movb
movb
in
test
lods
sbb
stc
pop
aam
mov
mov
stos
aam
mov
mov
jmp
mov
sbb
movsl
jl
fwait
sub
pop
adc
lock
popf
mov
sbb
daa
in
jns
xchg
in
cmp
lds
add
lret
sbb
insl
inc
es
cld
movsb
pop
pop
and
pop
and
add
sti
jge
cmp
rcrb
leave
inc
dec
inc
shlb
shll
outsb
pop
imul
pop
jns
pop
jle
push
sbb
sti
mov
xchg
xchg
jbe
leave
sub
rorb
jbe
pushf
decb
dec
repz
cmp
inc
inc
xlat
mov
cwtl
in
add
push
add
add
pop
pop
xchg
pop
pop
clc
mov
aas
rolb
jno
insb
popf
test
adc
jl
inc
xchg
into
inc
sbb
jno
cmp
aad
cmp
or
mov
cmpsl
fcompl
add
mov
dec
and
int3
stos
add
divb
scas
pop
aad
and
insl
mov
int3
test
in
andl
jp
cld
incb
stos
dec
nop
pop
push
repz
mov
out
cs
sti
aam
jl
es
mov
push
jb
mov
and
outsb
mov
xchg
mov
cli
mov
mov
sub
adc
lcall
repnz
inc
movsb
enter
rcrb
mov
scas
mov
xlat
ljmp
xchg
jns
out
mov
jns
pop
and
jp
jecxz
ficoms
xchg
divl
insb
insb
mov
pop
sbb
cmp
mov
lods
sub
jecxz
addr16
xchg
and
outsl
xchg
adc
fidivrs
add
xchg
xchg
addr16
sub
inc
cli
shll
int3
ss
mov
inc
and
mov
cmp
roll
push
sahf
ja
mov
dec
lahf
fsubl
call
lret
test
addr16
hlt
loop
adc
rcll
int
lret
push
and
aaa
pop
mov
adc
jmp
ja
rcll
cmp
push
push
or
pop
mov
fwait
popa
icebp
jmp
adc
fisttpll
cmc
push
outsl
rcrl
incb
jg
add
xchg
inc
pusha
fistpll
push
mov
enter
sbb
lea
fwait
sub
shl
cmpsb
pop
cmp
jns
in
fs
xor
addr16
mov
das
cld
cmpsb
push
leave
add
push
and
xchg
ja
jno
cltd
orl
xchg
enter
push
popa
sbb
mov
lods
roll
enter
ljmp
lret
lahf
mov
inc
nop
and
mov
mov
aam
inc
mov
dec
xchg
pop
lock
dec
add
push
add
pop
xor
inc
or
icebp
pop
xchg
or
lret
cld
sub
sti
mov
lea
adc
mov
loop
jae
push
js
pop
push
pop
rcll
jbe
sub
sub
sbb
or
pop
and
cmc
ljmp
daa
repnz
dec
arpl
cwtl
out
or
xchg
pop
jle
or
pushf
xor
cmp
and
das
outsb
repnz
mov
cmpb
shll
mov
addl
sbb
sbb
jmp
pop
js
outsl
mull
mov
dec
rorl
mov
enter
or
test
test
add
movsl
testl
lods
mov
jae
inc
xchg
lods
xor
fcomp
push
lea
adc
push
dec
fwait
mov
or
xor
arpl
xor
or
sub
mov
cmpsl
sbb
sbb
jne
and
mov
dec
lahf
test
jmp
mov
xor
jmp
jle
mov
or
aam
jo
push
insl
push
dec
mov
addr16
sbb
cmpps
loop
mov
in
ret
cmp
mov
sbb
lds
or
js
movsb
or
xor
fs
add
test
pop
aad
lock
cmp
inc
xchg
fdivrp
mov
std
mov
pop
daa
add
stos
mov
xor
ljmp
loope
and
sub
inc
dec
mov
xor
inc
stos
lahf
int
cmp
pop
fisubrl
push
push
jecxz
fs
cli
les
lret
or
ret
imul
push
cmp
xchg
pop
dec
mov
lahf
mov
add
sbb
push
push
jl
pop
aas
adc
jb
push
inc
pushf
loopne
push
or
ja
clc
xchg
push
call
lret
and
inc
jmp
fcomp
pop
pushf
stc
pushf
les
push
mov
in
xor
cmp
add
aas
xor
cwtl
sbb
or
xchg
mov
push
daa
pop
pop
loop
add
int
push
pop
cs
push
sub
out
jne
ret
mov
xor
shrl
imul
sbb
adc
leave
lahf
pop
out
lcall
adc
xlat
mov
adc
jl
lahf
and
push
les
push
imul
insb
hlt
aam
pop
jecxz
sbb
or
pop
or
in
dec
sbb
mov
movsb
jp
sbb
loopne
sub
insb
fstpt
mov
into
sub
pop
imul
lcall
popa
cmp
and
jb
and
mov
js
mov
jnp
jmp
push
scas
pop
in
addr16
mov
jl
xchg
mov
cwtl
cmp
lahf
movsb
pushaw
jb
mov
dec
aam
inc
jae
xchg
xchg
mov
pop
mov
das
mov
aaa
adcb
test
cmp
pop
mov
pop
movb
push
bound
xlat
nop
jae
lea
xor
ss
pop
subl
inc
cmp
push
push
stos
fwait
cmc
icebp
clc
cmc
add
adc
mov
jno
push
cltd
pushf
add
mov
xchg
and
push
arpl
lret
faddp
xor
inc
push
cmp
insl
bound
pop
jo
sub
xchg
sub
xor
or
popa
mov
testl
in
mov
pop
fisttps
add
dec
adc
in
push
cmpsb
outsl
in
inc
cs
jno
mov
aad
loope
sbb
pop
push
xchg
icebp
mov
jb
mov
cmp
cltd
add
fistps
bound
scas
ret
or
push
xchg
push
icebp
repnz
push
idivb
fwait
insl
xchg
fadd
jns
sub
repz
stc
fwait
push
ljmp
pop
pop
dec
jo
cmpsl
push
and
sbbb
pop
adc
or
daa
jmp
add
mov
call
mov
ja
es
inc
sahf
xchg
jl
mov
jb
mov
fwait
cmp
dec
and
dec
jp
dec
cmp
arpl
cmp
add
push
js
push
and
sbb
jmp
inc
pop
out
xchg
cli
ds
fs
in
xchg
lock
mov
and
adc
test
aam
push
hlt
dec
inc
sti
mov
lret
iret
mov
jb
mov
fnstenv
rorb
ret
insb
cwtl
adc
mov
mov
ds
push
push
gs
jg
jne
mov
jge
xor
jb
arpl
cmp
enter
fsubr
add
test
movb
shrl
add
push
xchg
dec
mov
ror
inc
mov
xchg
sbb
int
xchg
arpl
insb
xchg
aas
mov
mov
imul
xchg
fisubs
xchg
jle
mov
cli
cmc
js
pop
xchg
jl
xor
sahf
mov
rcrl
ss
insb
mov
roll
lock
adc
push
add
xchg
lret
inc
lahf
xor
and
and
add
sbb
push
fcmovnbe
int
xchg
mov
add
cld
data16
mov
inc
shrl
les
add
rcrl
int
ret
or
fs
mov
out
cltd
dec
mov
sub
push
mov
pop
std
dec
ljmp
shr
push
xchg
icebp
and
jmp
jecxz
jp
iret
jp
dec
les
push
and
sub
inc
pop
adc
push
repnz
mov
or
push
movhps
mov
daa
push
pop
movsl
and
jmp
mov
je
cld
dec
jns
sbb
and
or
lcall
push
inc
jge
lods
sti
jmp
or
lea
sahf
repz
pop
or
jo
jnp
lods
jg
lds
push
stos
aaa
or
push
mov
stos
adc
cmp
test
shlb
and
sbb
pop
xchg
dec
inc
stc
clc
aas
xlat
es
pop
adc
cmp
xor
push
mov
jno
and
test
out
inc
jl
fld
je
xchg
movsb
in
push
push
push
fstpt
cmp
or
sub
nop
popa
jmp
call
sub
jb
js
loopne
fsubp
push
cmpsb
sbb
movsb
mov
sahf
fcoms
imul
bound
mov
jae,pt
fstps
test
xor
ret
dec
cmp
push
dec
in
add
mov
pop
aad
adc
adcb
rcll
pop
adc
xorl
jmp
push
cld
les
aaa
lods
sbb
push
shrb
test
je
mov
xchg
insl
and
shlb
xchg
mov
test
jmp
mov
or
mov
outsb
push
add
inc
inc
mov
xchg
out
and
mov
fsubrs
jmp
mov
and
rcll
dec
fiadds
jns
sbb
xchg
push
cmc
ficompl
push
scas
push
or
movsl
pop
test
cmc
xor
test
das
or
in
or
test
xor
xchg
ja
mov
mov
inc
inc
in
or
test
add
fistpll
push
stos
push
lret
xor
dec
mov
xor
lock
xchg
jle
push
inc
mov
mov
fwait
cmp
pop
pop
aaa
fs
in
fsts
pop
incb
stc
lods
aaa
addb
add
xor
push
loopne
shlb
sbb
cmp
push
int3
adc
push
mov
inc
ja
mov
xor
es
test
mov
int
insl
or
loop
inc
shl
pusha
xchg
std
inc
in
in
imul
pop
pusha
push
dec
mov
lea
in
data16
and
mov
push
test
lret
mov
or
pop
jae
lea
addr16
mov
jbe
cli
xor
cli
mov
pop
in
sbb
dec
sbb
jp
sbbl
in
mov
bound
mov
jne
and
cmp
out
inc
sbb
sub
jecxz
arpl
mov
add
jo
int
lret
cld
cli
cmp
dec
pop
jbe
lds
push
cltd
sub
lahf
add
jmp
std
jb
ljmp
xchg
mov
enter
faddp
in
cmp
or
dec
inc
jnp
xor
mov
push
int
mov
lea
mov
in
dec
fdivrp
leave
fsubrl
fistps
xor
pop
fistpll
movsl
dec
cli
jnp
adc
out
jge
mov
pop
or
mov
dec
int
inc
mov
jl
push
push
cmc
mov
or
mov
xchg
sub
cmp
jmp
adc
dec
rolb
in
iret
lret
fidivs
pop
movsl
push
mov
jnp
rcl
ss
int
fwait
pop
xchg
lods
lcall
adc
ret
shlb
dec
mov
cmp
dec
ljmp
cmpsl
pop
gs
rol
pop
lods
sbb
negl
xor
fstpt
add
jge
aam
fisubl
movsl
dec
fisttps
xchg
cmpsb
daa
jbe
daa
jne
fcompl
dec
clc
xchg
mov
mov
xchg
mov
push
and
dec
sub
insl
and
cmpsl
jno
sti
shlb
mov
mov
aam
out
movsl
mov
adc
mov
sub
mov
sbb
sbb
inc
lock
push
addr16
into
jae
fs
mov
or
and
mov
xor
rorb
and
loop
mov
xchg
out
daa
mov
lret
iret
adc
add
outsl
shl
inc
or
shll
shl
mov
mov
jmp
jnp
sub
push
sub
xor
fsubrs
pop
bound
dec
vucomiss
repz
hlt
movsb
ds
inc
fsubrs
push
inc
jo
cld
and
adc
fdivl
dec
fisttpll
dec
xor
out
mov
jmp
aad
mov
jno
inc
lods
push
popa
movsb
mov
cmp
test
sbb
and
ret
jne
outsb
mov
or
push
lods
out
sbb
inc
or
adc
and
xchg
pop
imulb
add
jl
cwtl
rolb
aam
mov
popf
lcall
jae
in
sti
lret
call
pop
push
push
adc
xlat
sub
insl
fildl
dec
outsb
bound
mov
pop
xchg
stos
mov
daa
lods
xor
dec
in
mov
clc
out
rcrb
jo
cmpsb
mov
adc
ds
fidivrl
inc
cmpb
jbe
sub
aam
out
mov
sub
mov
rcrb
xor
clc
mov
adc
jns
pop
out
sbb
jnp
inc
pop
push
jge
and
in
scas
xor
and
adc
push
cmpsl
pusha
add
dec
loop
addl
push
shl
outsb
mov
mov
mov
nop
imul
roll
mov
leave
or
mov
in
push
insb
ret
lds
fwait
inc
cmp
inc
call
dec
lods
xchg
cmc
jp
cmp
dec
jnp
sub
rcrl
out
xor
ljmp
dec
sbb
add
dec
sbb
adc
push
bound
or
inc
gs
out
mov
aaa
cli
push
add
cmc
jle
lods
push
mov
pop
adcl
repz
into
scas
sub
loopne
mov
push
sahf
out
mov
insl
pop
jmp
xorl
jo
icebp
repnz
xchg
cmp
and
dec
and
aam
out
jg
iret
gs
jne
imul
pop
jp
lahf
fnsave
int
jg
add
nop
lods
mov
dec
mov
jecxz
arpl
mov
stos
insb
fwait
ss
sbb
xchg
mov
sub
sbb
aaa
lret
les
cmc
sbb
inc
icebp
es
mov
mov
or
sub
sahf
mov
add
pop
mov
dec
jo
pop
dec
data16
inc
fiaddl
xlat
call
int3
cmp
xchg
mov
mov
fcmovne
inc
jnp
sbb
fbstp
push
outsb
cmp
mov
adc
adc
shrb
pop
cmpsb
cwtl
jp
mov
mov
dec
push
and
std
jb
neg
adc
mov
test
lea
rep
repz
dec
jp
js
sbb
enter
jmp
xchg
stos
movsb
movsl
faddl
mov
das
outsl
add
jp
sbb
jmp
push
pushf
push
ret
cmpsl
dec
out
push
popa
xchg
lret
jbe
int
mov
pop
add
add
scas
enter
mov
fiaddl
cmp
cld
bnd
jg
xlat
nop
lret
inc
loopne
or
lods
mov
inc
int3
arpl
cltd
and
adc
test
lret
pop
leave
int
in
jg
dec
xchg
test
jnp
xor
in
movb
jns
pop
shll
cmp
fisubl
in
inc
cwtl
fwait
ds
rcrl
scas
loope
push
mov
inc
aam
popa
or
loopne
btc
fstps
popf
mov
jno
fists
lods
aas
jno
pop
inc
inc
addl
add
mov
jmp
cmc
jecxz
dec
inc
push
popa
inc
push
insl
ret
lahf
mov
jno
cmpsb
push
lods
test
test
mov
ret
mov
inc
mov
inc
mov
fistl
ret
xlat
rcrl
bound
mov
lods
inc
fwait
or
scas
cmp
js
push
insb
lret
cwtl
movsl
push
or
fisttpll
jns
mov
xchg
mov
xchg
xchg
push
adcb
sbb
jp
mov
fmuls
mov
inc
pop
movsl
adc
hlt
mov
cmp
xlat
std
inc
enter
push
or
sahf
sub
xor
cmp
push
pop
xor
add
pusha
inc
out
mov
shll
or
jl
mov
jecxz
and
data16
push
cmpsl
cmpsl
es
mov
pop
fidivl
shr
clc
pop
mov
mov
sti
xorl
cmp
pop
push
jae
je
popa
ficompl
imul
adc
sub
mov
sbb
jmp
inc
jge
sbb
aas
jne
dec
pop
push
and
xchg
fcmovnb
push
das
mov
inc
jmp
clc
leave
imul
lods
stos
imul
stos
cmp
aaa
xchg
fimuls
out
lods
lcall
or
call
enter
outsb
popf
loopne
xor
shll
fldenv
lds
leave
ljmp
outsb
aaa
lret
add
ret
push
imul
dec
call
dec
cmp
bound
cmp
repz
ja
cmp
icebp
add
sbb
jge
aad
adc
and
ja
xchg
or
in
sarb
lock
loopne
xchg
fcmovb
int3
dec
nop
or
push
pop
inc
lock
mov
repz
sub
sub
xchg
mov
mov
outsl
les
aad
xchg
cmp
faddp
or
std
or
int3
arpl
iret
sbb
push
rcr
stos
cltd
subl
push
mov
adc
aas
sbb
jmp
adc
sub
mov
sub
sbb
mov
sahf
icebp
lea
ss
pop
fisubs
pop
je
out
push
inc
mov
mov
sub
xor
xchg
jecxz
dec
andl
pushf
inc
dec
mull
lahf
cmp
xchg
sbb
data16
fcoml
loopne
inc
enter
scas
add
jae
push
cs
mov
dec
clc
jp
int3
push
xchg
je
push
xchg
add
cmp
jae
shrl
cmp
sbb
popf
arpl
int3
inc
popf
jno
outsl
push
aas
aaa
shll
fwait
pop
out
dec
mov
imul
jmp
call
pusha
sbb
and
bound
idivb
test
ja
into
sub
add
push
fisttps
mov
sahf
ret
xor
leave
popa
and
pop
mov
dec
jl
aam
mov
icebp
lds
mov
lock
test
cmp
pop
mov
sbb
in
mov
pop
cmp
xchg
mov
inc
and
addb
jg
adc
dec
jp
jle
pop
xor
sub
and
out
out
and
out
mov
sub
push
lret
shlb
sbb
jbe
mov
cmpsb
push
cltd
lcall
push
cmp
push
cmp
mov
sar
jle
insl
pop
jb
std
arpl
push
push
lods
fwait
fwait
pop
jmp
aad
xchg
mov
inc
pop
scas
jmp
pop
test
insl
fists
scas
add
lock
fnstsw
arpl
add
mov
push
pop
pop
inc
sbb
cmp
std
or
nop
fbld
xchg
sti
mov
push
pop
jno
jp
in
testb
dec
inc
jno
repz
sahf
pop
daa
cwtl
jmp
lods
or
out
stos
jp
mov
mov
lods
cmc
inc
adc
mov
addb
jge
je
jb
xchg
dec
add
js
outsl
cmp
or
pop
movsl
test
mov
sub
ds
pop
xchg
ret
outsb
lods
repz
mov
out
stos
adc
inc
sub
mov
ret
les
adc
cmc
mov
add
xchg
test
xchg
or
mov
in
cmp
adc
sbb
enter
lock
xor
ljmp
ja
lcall
repz
pop
clc
cltd
ds
adc
xchg
ds
int3
xchg
sub
fistps
jecxz
xchg
sub
out
clc
data16
sbb
jecxz
push
sbb
jnp
sbb
mov
int3
inc
inc
nop
repz
pop
ret
ds
test
fdivs
iret
popf
inc
leave
inc
nop
pop
popf
adc
xchg
sub
daa
mov
out
add
dec
mov
xor
jmp
xor
mov
mov
inc
test
outsb
adc
loop
push
test
lock
pushf
dec
int3
aad
and
pmulhw
xor
mov
jle
jbe
sub
dec
sti
or
dec
dec
mov
cmpsl
sbb
adc
das
mul
xor
mov
leave
jns
popf
pop
aam
and
mov
inc
push
pop
bts
std
sahf
push
incl
mov
fldl2e
xchg
mov
imul
jb
fimull
aad
xchg
or
loopne
lock
pop
jl
cmpsl
mov
mov
addr16
outsb
aaa
pop
push
jnp
shll
popa
iret
imul
cmp
ljmp
adc
mov
out
push
lcall
mov
push
or
addr16
and
ret
sub
add
inc
push
bnd
adc
lret
js
cmc
out
or
add
rclb
mov
adc
inc
leave
pop
in
xor
adc
lret
jns
fstpt
ja
xchg
and
test
lea
iret
inc
scas
stc
decb
or
push
std
sbb
xchg
lcall
negl
sahf
push
xor
cltd
jbe
sar
fdivs
pop
ljmp
scas
or
mov
pop
test
fcoml
sub
out
and
in
loope
adc
leave
cmp
adc
mov
lcall
fimuls
ljmp
movsl
adc
shlb
inc
cmpsb
lea
aas
sti
inc
loope
popa
adc
xchg
loop
shrl
popa
mov
insl
sub
cmp
leave
push
int3
lods
int3
lret
and
cmp
sub
and
add
inc
lds
push
sahf
push
cmp
pop
mov
push
gs
mov
or
inc
stc
inc
dec
cld
imul
push
xchg
mov
adc
xor
inc
sub
and
sbb
lret
lahf
mov
xchg
aam
loop
add
adc
inc
mov
aam
and
bound
aad
mov
sbb
jl
sub
cmp
mov
xlat
in
mov
jbe
push
and
adc
pop
mov
pusha
jp
ret
cmp
jo
and
or
ds
or
jnp
subb
inc
xor
pop
call
out
push
jno
push
int
and
add
fisttpl
in
mov
jg
jl
jo
jg
or
mov
push
dec
xchg
cmp
xchg
adc
movsb
adc
in
mov
fdivs
cltd
cmp
test
in
mov
jne
mov
fwait
cmp
and
inc
leave
push
in
dec
jge
add
mov
aad
xor
jnp
inc
imul
mov
mov
xor
pop
adc
push
aaa
dec
or
inc
subl
sahf
dec
sub
sbb
call
xlat
mov
stos
jb
xor
mov
xlat
popf
mov
xchg
test
inc
dec
mov
mov
cmp
arpl
icebp
mov
dec
outsl
loop
push
push
cld
int3
push
enter
lea
mov
cmp
pop
orb
jge
mov
mov
or
jl
xor
hlt
sbb
jg
fcmovnu
pop
out
leave
push
imul
sbb
push
mov
cmpsb
jb
inc
jp
xorl
pop
jnp
subl
push
aaa
vmread
jae
sub
inc
fistps
imul
insl
jno
sti
les
fldcw
cmc
fildll
cwtl
inc
fstps
out
fnstenv
mov
mov
aaa
xchg
cmc
data16
clc
jae
cwtl
dec
adc
mov
xor
shlb
inc
mov
inc
out
fnsave
iret
dec
test
rcrb
cld
push
cmpsb
mov
cld
imul
xchg
ljmp
clc
popa
push
fidivrs
pop
test
cld
insl
shlb
fstpl
mov
mov
cltd
pop
jmp
int3
sub
mov
fisttps
repnz
mov
test
xor
lods
scas
xor
dec
imul
dec
inc
mov
loop
xchg
vpcmpeqb
imul
fisttpll
insb
jl
mov
bound
dec
mov
insb
mov
cwtl
adc
mov
jns
or
mov
add
pop
xchg
addb
int3
sbb
dec
sub
xor
and
xchg
ss
xor
movsl
jmp
shll
mov
push
xor
and
jb
or
jns
xor
les
add
dec
xor
gs
icebp
shll
movsb
and
mov
mov
pop
mov
mov
inc
mov
cmp
fs
inc
sub
rolb
loopne
cwtl
and
cmc
xchg
bound
push
and
stos
mov
push
movsb
or
xchg
ret
dec
mov
lahf
shlb
in
inc
popa
stos
int
das
and
sbb
stc
mov
sti
fs
mov
xchg
xchg
adcb
inc
fisubs
pop
jg
nop
add
test
icebp
jp
int
clc
pop
mov
inc
icebp
fisubl
out
and
enter
out
shrb
lds
mov
sub
dec
inc
movsb
push
outsl
cltd
jb
mov
add
loopne
insl
pop
mov
dec
rep
xchg
cmp
push
push
or
mov
xchg
sbb
mov
pop
out
loope
iret
test
cmp
mov
cmp
xor
scas
pop
inc
push
xor
inc
cmpsl
mov
xchg
lcall
xchg
loope
xor
dec
lods
xor
and
arpl
cli
xchg
add
popa
mov
rorl
mov
scas
jno
xchg
mov
inc
cli
jg
icebp
mov
push
lret
sarl
pop
adc
inc
out
adc
xor
ljmp
dec
xor
xor
inc
push
push
int3
fidivrs
push
jmp
add
cltd
insl
aaa
adc
int3
pop
mov
adc
add
fwait
cmp
mov
push
test
push
mov
and
fxsave
sahf
or
inc
and
or
push
imul
clc
adc
ljmp
mov
xor
xor
sub
mov
sbb
or
jl
mov
shll
push
and
in
call
aas
xor
xor
sbb
push
sub
mov
shlb
or
mov
or
mov
aaa
pop
xor
imul
adc
shll
outsb
rorl
test
lahf
pop
adc
mov
push
dec
imul
cmpsl
mov
mov
nop
das
mov
adc
pop
xchg
adc
shrl
popf
xor
mov
cmp
daa
push
out
mov
push
arpl
mov
push
mov
lds
in
inc
bound
xchg
mov
stos
lds
xchg
leave
aam
cltd
pusha
pinsrw
insb
or
imul
xchg
pop
leave
pop
xlat
les
xor
cmpsl
adc
inc
adc
xor
adc
mov
enter
lret
cs
cmp
lods
mov
sahf
test
les
bound
sbb
sbb
xchg
and
inc
mov
mov
mov
je
dec
ret
cli
fucomp
nop
push
mov
xchg
mov
imul
cmp
push
pop
movsb
loopne
arpl
mov
xor
repz
mov
daa
mov
xlat
adc
pop
jp
xchg
jno
and
inc
in
inc
jge
testb
jae
imul
cmpsb
pop
bound
push
jl
movsb
pushf
adc
fcoml
adcl
into
mov
mov
sub
fadds
loopne
mov
dec
loop
les
add
out
sub
dec
adc
dec
insb
scas
mov
lds
iret
ss
or
push
cld
adc
dec
sub
jno
jb
sub
shlb
pop
out
mov
mov
mov
in
sub
cli
or
aam
push
fmulp
cmpsl
fs
dec
xor
mov
add
fisubrl
gs
dec
mov
push
cwtl
arpl
xchg
mov
or
mov
pusha
out
or
int
lcall
adc
push
stos
notb
pop
jne
imul
hlt
push
aas
fstpl
push
imul
jmp
sarl
jmp
popf
inc
push
sahf
pop
subb
push
ret
nop
andl
iret
push
mov
cmp
and
or
sarb
fistpll
xchg
addr16
xor
rorl
repz
add
jg
divb
out
repz
cmp
fsubrs
les
pop
ljmp
rcl
fwait
je
xorb
jnp
fiadds
into
dec
test
cmp
call
sub
cmp
and
xchg
insl
ret
daa
enter
std
call
repnz
cld
movsl
ljmp
call
pop
stos
call
xchg
jb
out
xchg
and
xchg
int
data16
pop
out
mov
test
daa
adc
mov
je
testb
shlb
dec
cwtl
inc
add
mov
fnsave
cwtl
xchg
lahf
ss
jle
mov
xchg
push
mov
mov
repz
shl
ja
shll
jnp
sbb
data16
fcmovbe
lock
fsts
fsubrl
testl
dec
int3
cmpsl
lahf
sbb
sti
add
arpl
fiadds
out
pop
mov
fidivrs
cld
and
sarl
cmp
pop
gs
loopne
jae
and
outsb
push
or
push
mov
not
ljmp
test
push
mov
lcall
fdivl
outsb
push
nop
add
mov
clc
fwait
jno
out
ds
add
out
xor
sbb
jb
stos
jge
dec
dec
ss
mov
push
rcrl
hlt
inc
enter
pop
mov
call
xchg
lods
mov
pop
call
mov
mov
icebp
sub
gs
pop
cmpsl
aas
lahf
test
mov
ret
jb
xchg
lret
popf
cltd
iret
leave
push
mov
iret
ljmp
cltd
push
inc
cmp
push
dec
lods
sub
addr16
repnz
lods
or
xchg
dec
lahf
inc
fs
pop
xor
loopne
bsf
les
add
pop
pop
shll
or
push
out
sub
fs
aad
jmp
lcall
sbb
cld
mov
pusha
test
mov
adc
or
leave
ret
fwait
lds
rcll
mov
scas
push
roll
jns
popa
xor
mov
inc
mov
frstor
inc
mov
not
jmp
shlb
and
adc
imul
repz
movsb
fs
mov
aad
pushf
xchg
test
push
cmp
lea
sbb
loop
cwtl
cmp
scas
sbb
jae
xor
out
popf
or
jo
inc
sahf
mov
fcompl
js
movsl
and
add
mov
ja
xchg
xchg
sub
jp
loope
mov
fcmovb
adc
lahf
inc
mov
inc
jle
cmpl
inc
cmp
test
cmp
cmpsb
inc
arpl
test
js
addb
jae
aad
ret
and
sub
dec
rolb
loop
jecxz
add
rorb
out
scas
rcrl
leave
lret
dec
les
aas
jl
xchg
aaa
pop
test
pop
inc
sub
fmul
lret
xchg
testb
inc
les
stos
dec
nop
in
aad
movsb
push
test
dec
mov
addb
push
in
xchg
stos
js
add
pushf
repnz
dec
or
jnp
pop
sub
leave
cmp
sub
sbb
pop
lret
adc
jns
movsb
mov
daa
lds
lret
adc
loopne
popf
test
dec
das
mov
sub
mov
add
add
jo
notb
ss
popf
jb
loope
clc
mov
stos
dec
repnz
jecxz
xor
adc
clts
or
mov
mov
cmpsb
in
popf
or
mov
mov
xor
mov
dec
sub
cmp
aas
dec
mov
ret
hlt
jo
push
dec
xchg
xor
dec
xor
rorb
inc
popf
aad
jge
test
and
xchg
ja
out
dec
cmp
pop
or
js
addr16
js
xor
hlt
xlat
stc
repnz
mov
pushf
and
aaa
and
stc
outsl
enter
iret
out
cmp
fs
stc
mov
out
dec
xor
jo
and
repz
sbb
pop
ljmp
push
ret
hlt
es
aad
or
push
inc
pop
xlat
cltd
ret
sub
stos
mov
gs
int3
aaa
sbb
loope
outsl
xchg
mov
cli
cmp
sub
shrb
rorb
js
repz
xchg
xor
jmp
mov
jg
cmc
mov
inc
xchg
jmp
lods
ljmp
lahf
nop
lret
fcomps
jl
outsb
scas
or
push
shll
pop
push
jmp
and
pop
jmp
add
sarb
or
lock
cmp
iret
mov
loop
or
test
inc
pusha
jg
jb
std
data16
or
sbb
pop
popf
movsl
push
mov
sbb
xchg
and
mov
xor
sbb
pop
fldt
pop
cmpsb
out
in
leave
mov
out
jno
test
test
inc
das
mov
pop
pop
mov
aaa
stos
in
bound
lret
test
mov
push
mov
test
inc
cmp
inc
inc
scas
cmp
test
mov
mov
xchg
cltd
and
hlt
in
push
test
mov
mov
push
cwtl
mov
xchg
sub
imul
dec
and
psrlw
into
imul
fwait
xchg
sahf
and
sub
cwtl
ljmp
dec
addr16
add
outsl
dec
cmp
inc
add
and
loope
add
mov
and
pop
sbb
push
rcl
lods
and
dec
call
lret
xchg
cmp
scas
push
sub
adc
mov
daa
rorl
not
lds
insl
mov
fcoml
daa
arpl
xchg
sbb
mov
xchg
fdivp
cwtl
aaa
mov
mov
or
jmp
pop
dec
pop
jae
jns
dec
mov
pop
sub
jo
ss
sub
inc
add
dec
imul
repnz
movsl
clc
mov
out
loope
gs
xchg
jae
or
sub
pop
test
popf
out
imul
xlat
je
xchg
cmp
sub
dec
ja
mov
xchg
or
mov
loopne
or
and
into
shl
inc
out
pop
jno
mov
sub
xchg
inc
je
jp
xor
mov
xor
jge
push
mov
mov
mov
mov
mov
adc
sub
outsl
sbb
movsl
inc
xchg
popa
pop
mov
or
or
jo
cmp
ror
enter
mov
lcall
lea
js
xchg
push
je
cli
ss
test
add
into
pusha
inc
mov
jmp
ret
adc
xor
sahf
popa
xchg
repnz
lret
jle
out
push
push
es
outsl
out
rcrl
cmp
scas
inc
stos
aaa
stc
fstps
pop
imulb
xchg
jb
std
fs
push
scas
jbe
add
jecxz
jno
xor
xchg
adc
or
dec
orl
push
xrelease
shrl
cwtl
mov
jge
mov
out
push
mov
push
adc
inc
xchg
rcrb
sbb
fmuls
call
into
jmp
add
in
inc
fwait
and
xor
push
pusha
punpckhbw
mov
mov
push
call
push
xchg
lret
insb
jb
cmp
int
mov
aas
dec
xchg
clc
pop
orl
scas
cld
xchg
ds
dec
scas
repz
stos
bound
mov
and
scas
mov
add
and
mov
add
pop
dec
js
push
repz
sarb
mov
jp
and
inc
cmp
dec
add
out
scas
fwait
jno
lock
push
mov
scas
jg
push
push
lds
jle
add
iret
mov
push
iret
clc
dec
out
xchg
popf
cmp
inc
hlt
and
fmulp
xlat
push
jle
out
xchg
cmp
mov
fisttps
xor
push
shl
sahf
andb
lods
adc
dec
push
push
fdivrp
add
dec
rol
movsl
mov
mov
mov
xchg
pop
popa
das
sti
add
dec
ja
and
aad
int3
cmp
loope
imul
in
jmp
andl
fs
mov
mov
test
out
xor
jmp
jnp
scas
jmp
mov
mov
xchg
push
js
lahf
adc
xorb
clc
jb
mov
pusha
sbb
sbb
jmp
pop
andb
sub
fisubs
xor
je
pop
test
dec
adc
mov
mov
pop
popf
pop
movsl
jo
lods
sbb
mov
xchg
aaa
cmc
mov
mov
outsl
mov
fcomi
sbb
jae
out
push
cwtl
add
push
mov
test
lret
outsl
sub
pop
and
jecxz
dec
xchg
xchg
js
xchg
add
sbb
xchg
es
fs
fcoms
cmc
mov
mov
dec
xchg
fimull
inc
rcr
mov
mov
mov
push
orb
stos
js
push
sub
jge
popa
addb
mov
ja
repz
notb
imulb
lret
cltd
jae
fadds
mov
push
jecxz
or
pop
and
stc
xchg
push
or
popf
dec
aam
cwtl
mov
push
adc
mov
out
mov
mov
jle
or
outsb
adc
jge
stos
cmpsb
push
mov
cwtl
or
mov
xchg
arpl
and
loop
adc
inc
out
fwait
insb
push
jae
xorl
loope
scas
lods
push
ss
out
cltd
aaa
outsb
pop
cmp
imul
loope
push
xor
jnp
pop
lds
sti
push
sub
mov
imul
repnz
inc
cmp
or
xchg
cmp
cmpsl
jno
pop
sbb
pop
push
or
cmp
xchg
leave
js
xchg
xchg
mov
jo
sub
mov
in
xor
arpl
mov
fcoms
shr
mov
incb
test
je
mov
int3
das
or
fcmovu
cmpsb
push
xor
mov
sub
aaa
fadd
mov
xchg
fs
pop
mov
sbb
fistpll
and
xlat
outsl
sbb
repz
ds
ljmp
in
mov
imul
add
jecxz
aas
movsl
push
push
sub
test
fiaddl
pop
dec
jecxz
jecxz
sbb
lcall
adc
movsb
adc
jp
jp
inc
mov
adc
sbb
cwtl
push
int
xlat
fwait
lret
add
ljmp
shll
jle
inc
sbb
sbb
test
pop
dec
repz
mov
mov
inc
scas
lret
clc
xor
movsb
xchg
push
out
mov
sub
xor
mov
jg
pop
inc
ljmp
adc
pop
push
std
mov
scas
aas
xlat
inc
dec
xchg
daa
jge
sub
outsl
push
cmp
jns
fstpt
fcomip
mulb
les
cmp
pop
pop
or
pop
adc
insl
sbb
mov
sahf
mov
xchg
out
outsb
aad
clc
daa
movsb
sub
js
mov
lret
jle
push
mov
test
adc
mov
xlat
pop
push
in
call
adc
outsb
xor
movsl
imulb
xor
sub
cmc
fldl2t
fdivrs
mov
roll
clc
fmull
icebp
out
scas
loope
push
xor
lret
mov
xor
enter
cmc
loope
rolb
pop
lods
dec
in
pop
mov
dec
cmp
outsl
mov
pop
pusha
sbb
in
mov
fdivrp
adc
loopne
mov
xor
mov
movsl
and
dec
ja
jns
sarl
pop
invd
and
icebp
inc
sbb
mov
test
fbstp
mov
insb
shl
out
sti
jecxz
ficomps
rcrl
in
inc
push
or
xchg
jmp
jl
lret
aaa
push
push
mov
insl
cmp
fcoms
es
push
lret
dec
imul
lcall
mov
stc
cmpl
sub
jp
push
repnz
sbb
pusha
fisubl
sbb
jmp
rcr
frndint
jmp
pop
dec
sub
sub
dec
jbe
roll
sub
roll
in
jns
jle
jmp
adcl
popa
jno
leave
jno
adc
ret
popf
xchg
call
and
cmc
call
repz
movsb
sub
lahf
pop
sub
fs
xchg
or
fidivrs
cmp
lret
lahf
xchg
adc
inc
ficomps
lcall
lcall
pop
xchg
pop
nop
pop
mov
faddl
aam
stos
lahf
or
dec
nop
mov
push
adc
scas
fwait
sub
mov
cltd
pop
popa
push
push
leave
xchg
pop
adc
xchg
mov
and
mov
sub
call
outsb
pop
push
scas
leave
mov
pushf
jmp
sub
xor
lea
mov
arpl
mov
outsb
test
leave
mov
mov
xchg
xchg
and
into
sbb
arpl
jne
xor
in
push
sub
pop
mov
dec
dec
f2xm1
pop
popf
scas
mov
add
adc
or
test
xor
push
shl
sbb
adc
pop
or
xchg
mov
in
mull
scas
testl
pop
popa
ds
pop
psrlw
xchg
popf
mov
push
rcl
xor
enter
mov
int3
jle
loope,pt
sub
je
imul
jno
outsb
orl
pop
sub
pop
outsb
push
sub
sub
adc
adc
jg
jo
mov
jno
in
jg
mov
call
mov
jmp
aas
cmp
xor
sbb
xchg
imulb
jle
stos
adc
cli
mov
fcmovb
mov
shll
jne
stos
and
sub
cli
mov
inc
mov
push
jno
mov
and
iret
cld
adc
mov
xor
mov
frstor
adc
push
fisttps
xlat
or
cltd
shlb
out
dec
pop
pop
push
push
fs
sti
fdivrs
xchg
shll
or
test
das
mov
out
rcrb
pushf
into
pop
xchg
xor
cmpsl
imul
cmp
sbb
push
ss
test
cmp
xchg
data16
aas
sub
orl
insl
aam
jne
popf
inc
push
in
fimull
out
roll
push
jp
dec
enter
cld
pop
hlt
lea
dec
mov
jbe
fisttps
push
xor
bound
fidivrs
aas
mov
sti
add
mov
sub
cmp
push
popf
cmp
add
loope
or
cltd
sub
loope
mov
push
icebp
test
ds
mov
outsb
ret
push
push
insb
mov
sub
push
dec
leave
cld
hlt
fsubs
sbb
loopne
add
data16
sub
jno
loope
jb
call
stc
jo
adc
lret
mov
popa
aaa
and
cwtl
mov
xchg
insl
loop
leave
mov
mov
stos
aad
xchg
mov
xlat
lods
mov
sti
mov
movb
ja
jmp
rcr
mov
push
loopne
and
push
inc
es
aas
or
sbb
xchg
fstl
jo
loope
nop
pusha
jmp
xlat
or
rolb
rcll
out
dec
sub
iret
sub
loopne
mov
sbb
sbb
adc
aas
xlat
mov
sbb
sub
jo
cmp
enter
rorl
inc
mov
rolb
cmp
or
int
faddp
dec
stos
mov
jo
sbb
aas
xchg
sub
mov
add
push
pop
or
push
cs
rcrb
outsl
xor
add
sbb
call
clc
nop
js
stos
push
icebp
dec
shlb
scas
arpl
push
pop
sub
in
xor
push
mov
jecxz
cmp
iret
ficompl
mov
ds
roll
hlt
dec
push
xor
cld
out
pop
les
cld
and
or
xchg
inc
jbe
out
jecxz
in
or
test
outsb
pop
cmp
jle
rcr
and
pop
push
ret
les
inc
in
adc
push
inc
in
pop
pop
scas
lods
inc
jbe
mov
pmuludq
adc
das
dec
dec
insl
mov
push
mov
xchg
xchg
mov
inc
cmp
add
pusha
popf
movsl
ja
bound
push
stos
fwait
pop
jg
fmuls
mov
mov
mov
outsb
orb
repz
fbstp
icebp
push
dec
adc
lods
test
xor
and
xchg
sbb
xor
mov
les
loope
xchg
xchg
push
out
imul
jp
sahf
sti
loope
xchg
sbb
push
fisubs
outsb
xor
xchg
adc
or
mov
out
xchg
pop
inc
orb
in
sub
mov
add
nop
fldenv
inc
rcr
daa
repz
adc
jne
and
out
or
test
ljmp
popf
push
pusha
sub
pushf
add
mov
shlb
sub
mov
mov
shrb
stos
sub
pop
jae
pop
sub
aam
jae
and
lahf
push
mov
aad
and
int3
cmc
xlat
pop
fidivl
jns
repnz
or
pop
popa
mov
jg
in
pop
aam
lods
arpl
in
cmc
add
cmp
pop
or
push
repz
dec
mov
add
xchg
adc
inc
std
pop
xlat
push
push
out
and
sub
lcall
push
add
mov
movsl
outsb
and
scas
dec
inc
call
out
aaa
pop
mov
enter
push
xchg
jg
inc
setns
pop
sbb
and
xor
add
int3
jecxz
fcom
ja
nop
pop
or
int
xor
pop
cmp
fadds
push
movsl
lret
incb
xlat
pop
jmp
mov
jb
dec
xchg
stos
xchg
lock
out
mov
les
ljmp
mov
nop
cmpb
xchg
fbstp
in
stos
mov
pop
mov
fst
mov
pop
fucomp
clc
inc
mov
xor
outsl
out
push
jmp
loopne
xchg
mov
sub
inc
push
out
xor
xor
lods
jl
inc
mov
es
data16
push
cmp
int
aad
dec
mov
inc
push
dec
imul
mov
mov
outsb
push
push
pop
imul
arpl
pushf
push
or
xchg
and
idivl
jecxz
pop
xchg
dec
mov
and
test
mov
sbb
inc
loopne
dec
fsubr
sti
lock
inc
call
push
out
xchg
adc
mov
shll
shl
sub
test
xor
mov
fbld
call
adc
mov
add
and
push
jbe
cmc
and
sbb
push
mov
test
gs
xchg
cltd
loop
imulb
hlt
push
test
adc
and
push
lods
arpl
scas
cmp
stos
mov
or
xor
addl
into
xor
inc
adc
push
nop
cli
sbb
loop
cli
push
popa
dec
xor
xchg
and
in
mov
lahf
xor
lds
popa
push
or
cmp
shrb
pop
inc
mov
loopne
adc
call
and
dec
bnd
loope
inc
js
or
xchg
mov
nop
testb
and
in
add
ret
adc
dec
sarb
mov
pop
mov
xchg
divl
pop
jl
js
test
jge
out
and
aam
popa
mov
and
js
xchg
push
jmp
fistl
enter
je
inc
cmpsl
mov
repz
xor
jnp
test
pop
cmc
mov
mov
push
movsb
jb
out
jno
fwait
cltd
scas
inc
dec
inc
dec
lret
mov
je
and
jle
lahf
add
scas
mov
int3
imul
or
mov
cmp
pop
call
mov
fcomps
jl
pop
or
mov
movsl
outsl
xor
or
mov
cld
ss
push
imul
aas
lahf
dec
inc
js
aaa
pop
xchg
addr16
loope
cmp
lds
arpl
jo
mov
cmpb
cmp
movsl
push
push
xchg
out
push
cmp
dec
inc
cmp
daa
mov
lcall
add
inc
mov
and
xor
mov
mov
addr16
inc
lock
fsts
gs
fcomps
in
jae
mov
inc
xchg
jp
stos
ljmp
ret
clc
xor
gs
nop
or
pop
dec
jae
dec
das
xchg
dec
idivl
pop
jbe
loope
or
out
out
mov
mov
stos
jle
in
movsb
inc
notb
mov
mov
imul
fdiv
fs
outsb
jbe
push
xor
loopne
mov
jle
shl
flds
sbb
add
mov
out
add
icebp
in
push
sbb
sub
andb
jno
fadd
lret
inc
add
test
pop
jnp
cli
jne
sbb
mov
loope
cmpsl
add
in
adc
sbb
ds
sbb
sbbl
push
iret
cmp
fimull
aaa
push
in
stc
sahf
pop
mov
in
sbb
ret
and
iret
mov
jbe
and
jg
lods
push
cmp
stos
jns
or
and
fidivl
jno
movsb
into
scas
or
mov
ret
pop
push
nop
andl
test
inc
repz
lods
xor
in
cmp
xchg
scas
jg
mov
loopne
divb
outsb
popf
mov
out
ja
cli
pop
sbb
cmpsl
dec
bound
cmpsl
cs
pop
xor
xor
mov
push
cmc
add
jmp
xchg
inc
add
dec
xchg
add
inc
repnz
notl
imul
mulb
push
fldl
and
repnz
pop
mov
or
xlat
cs
mov
xchg
jo
push
pop
aad
test
and
mov
popa
icebp
push
mov
lea
adc
sahf
mov
nop
test
test
popl
shrl
jle
sbb
divb
stos
sbbl
jbe
lret
mov
movsb
clc
pop
pushf
pop
ds
insl
movsb
lock
insl
dec
ret
fsubrl
ficoms
jl
adc
repz
or
xor
xchg
pop
xchg
sub
sbb
lret
loopne
pop
shrl
icebp
fs
cmp
jb
mov
cmp
pop
lock
aam
daa
mov
push
pop
xor
mov
jae
lods
xrelease
repnz
loopne
out
mov
stos
es
add
xor
sub
jg
loope
add
jo
or
fldz
aam
fldt
fistpl
add
dec
sub
mov
cli
adc
jmp
insb
popf
jp
sub
sti
lods
ljmp
mov
repz
mov
movsl
in
add
cwtl
ds
jge
sbb
add
shl
dec
in
cmp
mov
popa
push
cmp
cmp
daa
and
inc
xor
push
hlt
cmp
jmp
mov
lock
push
negb
lods
push
add
es
add
lcall
pop
cmpb
repz
pop
mov
in
dec
push
inc
mov
sbb
jmp
xor
scas
cmp
inc
in
xchg
xchg
xchg
and
push
cld
jle
inc
add
in
and
mul
cld
xlat
movsl
rolb
inc
lods
fidivrl
rclb
push
jb
xor
jl
sarb
jecxz
les
dec
add
push
xchg
out
xor
xchg
xchg
dec
inc
jmp
sbb
inc
cmc
dec
pop
outsl
ret
and
sbb
sub
push
lret
jns
fcompl
mov
or
test
mov
mov
mov
xor
int
pop
dec
ja
rclb
popl
dec
es
outsl
xchg
jns
lods
adc
mov
sbb
sub
out
jnp
mov
mov
push
pop
pop
sub
leave
enter
lods
mov
push
lds
fmulp
clc
sahf
scas
push
lcall
popf
mov
xor
out
movsl
mov
lret
insb
adc
cmp
sub
and
push
lcall
sarb
jmp
int3
mov
test
sar
xor
outsb
sbb
rcll
insl
leave
mov
add
addl
aam
ss
sahf
mov
nop
icebp
inc
cli
jp
inc
imul
xchg
shlb
out
mov
fbld
pop
pop
stc
and
adc
mov
imul
test
sti
pushl
mov
pop
arpl
mov
mov
imul
mov
dec
into
sub
jl
fwait
add
idiv
add
imul
cmc
pop
test
scas
outsl
dec
dec
pusha
pop
rorl
cmpsb
add
mov
mov
insl
pop
pop
popa
cmc
dec
or
pop
outsb
and
fdivl
lret
mov
sub
xor
cmc
movsl
or
lock
lahf
or
or
std
cmp
adc
xchg
adc
aam
shll
and
sbb
mov
in
pop
negl
rolb
mov
cmp
fimull
ljmp
push
in
cmpsb
ficomps
xchg
aad
out
mov
cmpsb
imul
rorb
mov
pop
inc
outsl
add
dec
push
cwtl
cmp
imul
cwtl
cmpb
repnz
fcompl
paddw
bound
stc
in
inc
fidivl
das
xor
add
mov
lcall
fiadds
xor
xor
mov
add
aas
in
in
push
jle
jo
ljmp
scas
dec
xchg
enter
adc
dec
push
test
sahf
adc
adc
xchg
cmpl
mov
jecxz
jmp
mov
sbb
push
pop
cmpsl
sub
and
test
sub
outsb
xor
inc
cmp
iret
testb
jns
out
js
xor
out
aas
faddl
iret
inc
loope
inc
popl
insl
xchg
test
adc
sub
test
mov
mov
arpl
cmp
cli
cmp
fists
inc
loopne
adc
repnz
add
xorl
int
and
aad
add
gs
cmp
sbb
jp
or
sti
daa
fnstsw
ror
ret
dec
aad
stos
xor
pop
push
cli
xchg
clc
jmp
in
dec
dec
cs
lods
dec
xchg
push
push
lcall
sbb
dec
mov
outsb
mov
fwait
adc
cmp
jle
pop
dec
std
rep
ret
push
in
jne
pop
insb
iret
out
sbbl
arpl
sbb
push
imul
inc
jbe
jmp
mov
fildl
xor
popf
clc
add
mov
dec
add
push
xchg
dec
out
call
mov
inc
mov
ds
and
mov
or
iret
mov
call
pop
jmp
sub
push
jo
addr16
hlt
jbe
insl
sbbb
std
jnp
out
and
add
test
jg
dec
das
lods
adc
ror
scas
int3
das
loop
jbe
xor
je
idivb
leave
cmp
ret
sbb
dec
out
and
and
push
jmp
add
mov
or
cmp
mov
dec
pop
flds
jmp
xor
pop
adc
sbb
nop
sub
pop
mov
sub
push
sub
jle
xchg
mov
imul
movsl
orl
mov
mov
sub
scas
add
sub
xor
jo
cmp
das
std
mov
rorb
mov
cmp
mov
pop
cmpsb
inc
adc
xchg
sub
fnsave
push
jg
xchg
fcomps
mov
jnp
loopne
in
stc
pop
push
mov
scas
imul
fcomps
loopne
in
xchg
out
or
loope
flds
flds
jecxz
int3
mov
movsl
imul
jmp
mov
sub
sbb
lea
imul
inc
cmp
idiv
sbb
imul
aaa
pop
inc
mov
mov
insb
pop
das
test
xchg
add
xor
shlb
es
push
ret
dec
dec
cmpsb
test
int
lea
in
push
xchg
lret
xor
dec
inc
sub
dec
clc
dec
fucom
callw
jmp
cld
cmpsl
adc
and
out
push
outsb
out
mov
pop
in
jle
ljmp
cmpsl
jns
rorb
xor
test
xor
mov
lods
mov
xor
mov
inc
jmp
sub
fwait
mov
pop
and
jne
push
xchg
jo
cmc
mov
cltd
xlat
mov
push
arpl
pop
lods
add
test
icebp
sti
ss
adc
inc
inc
aad
xchg
cmpl
cltd
xchg
push
mov
dec
jo
std
out
jecxz
or
orl
aas
sub
in
cmc
imul
sbb
mov
cmp
in
aas
bound
cmp
lds
sbb
popl
jmp
fdivr
mov
movsl
mov
xchg
fnstcw
jns
dec
int3
fcmovbe
dec
ret
in
mov
pop
mov
sub
jg
pop
or
mov
int
sub
outsl
outsb
xorl
pusha
dec
mov
jne
lods
cld
pop
and
test
stc
js
push
push
ja
gs
jne
call
aad
in
pop
sahf
mov
or
inc
jge
jns
ds
and
adc
jno
push
repz
jg
xchg
add
ret
push
mov
and
dec
in
push
in
aas
sub
lods
lea
sub
scas
add
loope
in
adcb
nop
loopne
add
js
fldl
stos
jno
cmpsl
test
sbb
mov
and
outsb
stc
jae
stos
in
rorl
les
into
xor
pop
cmp
fwait
mov
loopne
or
pop
adc
mov
sbb
jmp
xchg
addl
pop
xchg
ss
shlb
sbb
insb
push
notb
sub
xor
pop
inc
ja
cwtl
or
jle
push
dec
lods
lock
cmc
add
dec
std
outsl
mov
imulb
call
add
add
xlat
dec
shrl
ret
bound
inc
push
inc
movsb
je
aas
out
jo
push
jp
sbb
push
sbb
inc
daa
mov
das
sub
decb
aaa
outsl
int
push
jo
xchg
pop
sbb
or
nop
jno
mov
or
jecxz
cmpsb
test
jmp
movsb
loop
mov
bnd
dec
in
and
sub
lret
inc
je
jns
jl
mov
mov
or
mov
aad
mov
mov
push
mov
inc
mov
stc
nop
xor
mov
lds
cmp
fldcw
lret
sub
add
dec
into
jg
cmp
and
push
and
lcall
add
mov
push
mov
subb
add
jl
repz
jge
bswap
call
push
std
pop
xor
cmp
jns
movsl
pushf
insb
es
sbb
push
push
adc
pop
in
aam
orb
addl
xor
insb
push
jns
add
mov
xlat
push
sub
loop
les
push
mov
cltd
roll
aaa
lods
std
and
and
pop
scas
mov
or
stc
jmp
xorl
orl
xadd
xor
test
fwait
shrb
inc
gs
xor
jle
mov
sarl
adc
sub
push
sub
shlb
mov
xchg
mov
sti
mov
dec
nop
or
jecxz
ret
cwtl
mov
mov
sbb
xlat
push
aad
pop
jecxz
cmp
jge
movd
push
mov
cmp
lret
out
mov
lret
repnz
nop
jnp
jg
xor
add
dec
xchg
jns
insl
push
xor
pop
pop
mov
pop
mov
push
mov
insb
mov
shlb
lock
mov
cmpsb
pop
mov
fprem
lock
or
or
pop
std
pop
imul
fstpt
xchg
jmp
sarb
ret
add
add
push
adc
repz
test
iret
xchg
pop
rcll
jns
cmc
inc
movsb
sahf
mov
ss
in
xchg
shrb
sbb
jle
and
mov
in
test
xchg
mov
out
adc
inc
jbe
jmp
fucomi
lahf
out
shrb
mov
jno
rcl
mov
fisttps
mov
mov
lds
fs
xlat
or
add
lds
xlat
cs
pop
sbb
arpl
js
jl
lods
incl
int
push
dec
nop
fidivs
movsb
fcoml
js
repnz
sbb
leave
xor
xor
jmp
pop
daa
cmpsl
dec
out
out
les
sbb
and
fbld
pop
add
inc
push
mov
jl
inc
cld
ljmp
xor
fdivr
sbb
sbb
aas
not
mov
out
jae
and
xor
pop
mov
pop
cmp
mov
repnz
ss
aad
decl
xchg
or
repz
xchg
fidivl
pop
aas
sub
imul
rorl
mov
iret
bound
mov
cwtl
mov
xlat
aad
inc
sub
dec
lret
in
and
xor
ret
or
je
fcompl
movsl
aas
ljmp
shl
pop
stos
xchg
in
pop
mov
xchg
ss
cmp
sub
lret
decl
fldt
cli
adcb
sub
outsb
stos
jmp
loop
ja
push
and
inc
dec
jle
nop
mov
xchg
add
mov
and
rolb
jecxz
into
mov
mov
loopne
inc
push
arpl
add
sub
jg
roll
rcrb
xor
push
cmpsl
mov
adc
jnp
lds
xchg
push
and
ret
and
xchg
lahf
les
jg
sbb
je
mov
daa
mov
sti
clc
add
ljmp
sbb
ret
pop
out
loope
popa
push
and
pop
insl
dec
inc
andb
dec
jno
dec
sbb
pop
je
fadds
sbb
loope
popa
push
jle
loop
pop
add
repz
ja
or
add
xchg
jnp
xchg
xchg
mov
jecxz
or
push
jns
mov
rcrl
pop
xlat
repz
cmpsb
add
mov
ljmp
lahf
sbb
scas
inc
gs
dec
xchg
mov
outsl
leave
and
movlps
pushf
out
dec
xlat
xor
ss
jge
adc
and
ljmp
sub
lahf
test
jno
repz
inc
mov
in
cmp
push
bnd
mov
lea
cltd
xor
inc
push
test
inc
cltd
scas
iret
adc
loope
pop
mov
sub
mov
add
jno
pop
push
push
into
adc
sbbl
mov
mov
cmc
fldcw
push
pop
inc
daa
cmp
mov
rolb
cmpsb
dec
jl
adc
test
dec
xchg
lcall
sub
lods
imul
mov
dec
pusha
loop
lods
mov
mov
or
scas
loopne
daa
ds
mov
out
inc
jmp
mov
pop
int
pop
pop
mov
mov
aas
mov
mov
dec
dec
pop
xchg
cmpsl
jb
pop
roll
jo
or
cmp
cmc
loope
rclb
sahf
repz
adc
scas
pop
lcall
xor
adc
push
mov
fists
xor
xchg
dec
dec
movsb
dec
cmpsl
lahf
xchg
adc
dec
sbb
push
sbb
adc
adc
add
add
sbb
jo
cmpsb
push
icebp
mov
in
pop
jnp
cmp
mov
out
mov
fistps
mov
nop
push
imul
dec
mov
fidivrl
inc
mov
sbb
es
fs
lods
adc
add
mov
int
mov
lods
adc
nop
mov
imul
dec
pop
mov
mov
out
jmp
iret
es
inc
jae
hlt
add
sub
and
aam
nop
or
shlb
or
push
mov
mov
icebp
inc
stc
or
fst
pop
push
cmp
mov
and
push
dec
setle
add
dec
outsb
xchg
fwait
push
xor
or
inc
lcall
dec
cmp
push
lret
sbb
cmc
push
xor
push
movsl
into
test
push
inc
clc
adc
push
pop
sahf
arpl
cwtl
jbe
movsl
pop
lods
scas
dec
mov
adc
les
loop
add
jge
loopne
aas
je
lea
daa
movsb
cld
not
dec
fstl
mov
in
bound
or
std
push
ljmp
and
cvtpi2ps
jge
inc
aad
inc
fsubs
sub
adcl
outsb
imul
lret
dec
jns
inc
mov
daa
dec
jb
mov
xor
aam
xchg
int3
std
jnp
or
lcall
aad
lea
in
rep
in
sub
lods
and
xchg
sbb
mov
dec
bndstx
pop
cli
call
movsl
or
nop
fnstsw
mov
rorb
jle
insl
ds
dec
pushf
mov
inc
mov
cmpb
jbe
mov
sbb
imul
ljmp
and
adc
pop
mov
push
fsubs
les
ljmp
mov
sbb
dec
xor
aad
dec
sbb
je
js
jg
orl
dec
pop
mov
mov
pop
fnsave
movsl
cmp
mov
dec
dec
pop
rolb
out
js
jmp
lods
xlat
pusha
push
js
mov
add
cmpsb
nop
lea
das
dec
sti
sbb
pusha
inc
jmp
mov
fdivr
scas
jle
xchg
xor
dec
iret
test
out
je
adc
mov
in
cmp
and
mov
xlat
mov
sbb
mov
lds
push
test
stos
mov
xchg
mov
xchg
inc
or
mov
xchg
in
shll
xchg
js
lret
addr16
adcb
fmuls
mov
push
in
hlt
lcall
mov
mov
fldenv
mov
pop
shrl
and
mov
test
arpl
xlat
mov
jne
and
scas
aaa
sub
test
and
or
cld
xchg
xchg
adc
fucomip
movb
insb
jecxz
mov
enter
insb
and
jb
aad
jle
and
test
fbld
outsl
dec
loope
scas
out
mov
cmpsb
cmp
cmpsl
jge
in
pop
jecxz
cs
incb
or
mov
shll
sub
andb
xor
adc
arpl
insl
xor
mov
sub
mov
xchg
ss
push
add
scas
adc
daa
sub
push
mov
lahf
stos
in
push
jno
into
mov
adc
push
xchg
lret
inc
push
lahf
pop
shll
xorl
sub
mov
sub
test
mov
in
xor
mov
je
ss
or
xchg
or
push
subl
lret
cli
sub
out
push
jmp
cmp
push
xchg
cmpsl
jno
pop
mov
int3
movsb
mov
out
pop
cmpsl
repnz
cwtl
pop
shr
jns
push
icebp
adc
cmp
sub
sub
dec
mov
loope
les
cmp
pop
test
cld
xchg
mov
xchg
xchg
pop
and
dec
addl
mov
scas
neg
aam
pushf
add
lret
rol
and
xchg
jnp
mov
das
or
aam
test
jle
sub
clc
fs
jbe
ret
out
jo
xor
fcmovnbe
jnp
add
arpl
cmp
test
out
sub
and
sub
push
mov
lock
popa
out
cmp
pop
addl
es
xor
add
rcrb
add
iret
ljmp
inc
pop
add
stos
pop
sti
popf
sub
out
fcoms
push
mov
push
lcall
sub
lahf
stos
andb
xor
aaa
and
sti
std
insl
sbb
pop
in
jl
cmp
lahf
cmp
cmp
ds
scas
loopne
je
jle,pt
cmp
fsubrl
pop
mov
sub
cwtl
and
sti
fcmove
push
popf
ficomps
adc
xor
jae
aam
mov
pop
sbb
push
jbe
pushl
add
jno
negb
enter
shrb
push
pop
and
pushf
test
mov
adc
mov
inc
dec
sub
and
and
adc
dec
mov
add
mov
jmp
mov
aaa
adc
mov
lods
fstp
rcr
xchg
sub
lahf
push
and
icebp
cmpb
pop
fldcw
adc
in
mov
ffreep
insl
xchg
loop
outsb
call
xchg
add
fisttps
sub
sarl
xchg
jb
mov
lods
imul
fcompl
aam
pop
ljmp
sar
testl
mov
sbb
jb
mov
aaa
adc
sbb
sub
dec
lods
lret
js
out
rcrb
push
jne
add
aas
inc
dec
dec
js
ljmp
rolb
fdivs
mov
in
push
sti
fwait
cvtpi2ps
notb
int
call
pop
inc
sub
pushf
int
mov
pop
xor
pop
or
mov
loopne
xor
les
data16
inc
int3
push
ret
inc
fadd
xchg
lds
sbb
mov
decl
add
mov
loopne
ljmp
insl
push
push
and
sarb
sahf
nop
jmp
push
in
mov
clc
push
stos
mov
jnp
push
dec
cmp
arpl
mov
pop
cli
or
imul
stos
dec
sarb
adc
into
std
mov
pop
mov
bound
xor
mov
dec
jecxz
or
push
xor
or
shl
fistpll
add
xchg
mov
lahf
sub
jne
mov
sub
add
rorl
subl
xchg
int
repz
fs
aas
out
out
push
push
in
loope
pop
or
jmp
jae
push
adc
xchg
mov
iret
cli
mov
daa
xor
inc
mov
inc
xchg
xor
test
mov
int
int
pop
sbb
sub
mov
add
mov
mov
adc
jecxz
orl
sbb
jns
mov
movsl
js
sbb
sbb
lock
xchg
aad
shrl
inc
jns
sbb
pusha
ret
popf
or
mov
loopne
insb
inc
mov
icebp
repz
inc
dec
int
out
lods
movsl
adc
cmp
outsl
dec
daa
cltd
add
fs
mov
stos
popa
hlt
push
cmc
jnp
repnz
stos
fcomip
cmpsb
dec
sbb
adc
sarl
daa
xchg
dec
inc
lahf
into
adc
adc
pop
clc
mov
cs
pop
jnp
jge
dec
ss
nop
lods
jne
in
mov
sub
mov
xchg
es
je
mov
cmpsb
push
lahf
test
ss
xchg
push
lahf
imul
fildll
mov
xchg
sub
inc
mov
imul
inc
and
sbb
push
in
negl
arpl
cli
mov
rolb
mov
nop
push
popa
cmpsb
gs
xor
pop
adc
or
cwtl
sti
popa
loope
hlt
loop
jmp
adc
aad
dec
call
pop
jmp
stos
mov
mov
xor
lcall
cmpsb
test
adc
mov
cli
lock
lods
pushf
aaa
cmp
inc
leave
pxor
mov
push
pop
sub
mov
sbb
inc
lods
xchg
add
inc
dec
js
sub
test
rclb
decl
jle
adc
sarb
fadds
push
mov
ret
sti
pop
lds
mov
fcomps
mov
pop
push
inc
xchg
pop
and
out
test
std
or
xor
pop
mov
sub
mov
xor
jp
je
inc
lods
push
inc
fyl2xp1
add
xchg
fisubrl
xchg
ret
mov
sub
testb
cmp
mov
xchg
jp
adc
shlb
mov
inc
test
sbb
daa
mov
js
xor
pop
xor
and
add
cli
int
xabort
cmp
pop
xchg
push
orps
xchg
adc
movsb
pop
fdiv
push
sub
clc
movsl
push
es
push
and
pop
dec
cmp
dec
test
outsl
xor
adc
push
fwait
jl
lods
insl
in
mov
add
mov
fcompl
imul
push
pop
and
push
subl
fcoms
add
inc
cli
mov
mov
xor
jp
pop
mov
mov
inc
or
or
push
adc
mov
lret
out
loop
mov
sarl
cmpb
and
push
mov
add
dec
lahf
bound
movl
jmp
push
push
bnd
mov
push
ret
call
cmpsb
enter
fcmovnb
adc
addr16
sub
add
jp
sti
mov
jecxz
lea
xor
int
insl
mov
push
aad
shll
jo
pop
shl
adc
push
outsl
outsl
aad
lcall
xor
mov
es
hlt
stos
in
or
add
xor
ret
add
mov
pop
cmp
stc
xchg
inc
int
test
xchg
add
lret
setb
xchg
mov
sub
mov
xchg
iret
out
stc
sar
andb
bound
popa
push
jmp
cs
fdivs
paddusw
add
xor
lods
xor
xlat
pop
jl
sbb
addl
rorb
push
int
jmp
xchg
imul
push
lea
insl
vprotb
xchg
mov
stos
cli
js
pop
std
out
cmpsb
dec
push
mov
sub
cmpsb
dec
jmp
mov
cmpb
call
xchg
sbb
adc
imul
popf
xchg
subl
std
test
mov
lea
daa
int3
les
xchg
enter
mov
sub
xor
ljmp
inc
mov
gs
call
paddsb
jmp
ljmp
push
sub
sub
cmp
dec
arpl
sub
cld
mov
fldl
les
lds
or
adc
jns
push
test
sub
lret
scas
cltd
mov
insl
dec
pop
xchg
jnp
rcrl
addr16
stc
mov
cmp
inc
sbb
enter
lret
add
enter
cmpsb
test
lea
in
inc
jae
mov
pop
outsl
stos
loop
cli
mov
xor
dec
sub
imul
add
sub
loop
lahf
dec
pop
xchg
clc
pushf
ljmp
gs
or
jo
pushf
loope
or
push
loop
int3
jg
imul
xor
dec
xor
paddusw
lret
jbe
jecxz
xor
sbbb
inc
xchg
and
and
push
cmp
jb
jbe
cmp
cmp
lods
push
pusha
dec
insb
mov
or
xor
outsb
sbb
stos
mov
sar
cmp
xor
leave
repnz
inc
outsl
sub
pop
jbe
or
sub
push
clc
jne
test
xor
test
dec
sarl
or
lods
sbb
bnd
jg
out
insb
out
jmp
xchg
and
and
movsl
imul
and
push
mov
pusha
mov
mov
jb
cmp
or
rcll
lret
rcrl
mov
sub
in
jp
mov
insb
addr16
mov
nop
imul
jb
shrb
adc
aas
jns
mov
fiaddl
ss
in
pop
sar
sub
xor
std
in
jno
add
pop
pop
lods
mov
push
movsl
lret
in
mov
call
bound
mov
pop
aas
aas
out
nop
sub
mov
adc
sub
ds
pop
mov
lods
dec
jecxz
clc
add
shll
subps
jnp
push
jge
xchg
or
stc
lret
fsubrl
sub
cmp
cmp
cwtl
out
lock
sbbb
hlt
inc
sub
sub
mov
mov
incb
aam
and
mov
jle
cmpsl
jb
xchg
das
push
mov
lods
dec
js
in
testb
mov
and
popf
mov
jmp
jno
in
popf
daa
push
inc
and
movsb
inc
mov
stos
nop
mov
pop
mov
setb
das
lds
cwtl
loope
xor
clc
scas
inc
and
mov
push
inc
int3
loop
jne
pusha
nop
ljmp
cltd
aad
sub
pop
xchg
shlb
cltd
fistps
add
mov
imul
sub
push
jb
jae
adc
nop
cmp
jo
je
inc
leave
negb
into
pop
ret
lret
xchg
jmp
pop
aad
mov
pop
aas
pop
push
adc
jns
test
data16
addr16
repnz
stc
mov
cmc
mov
and
cmp
push
or
call
lret
movsl
loopne
mov
stos
mov
and
mov
lds
sti
daa
sub
cld
mov
cwtl
mov
out
repz
sbb
shr
jno
aam
and
loop
pop
loope
iret
ret
dec
dec
cmp
push
or
add
mulb
xor
push
pop
pop
cmp
stos
repz
fildl
fwait
adc
mov
aas
leave
sbb
or
jp
inc
lea
lods
mov
xchg
stos
pop
aad
sarb
pop
xchg
mov
leave
pushf
outsb
push
negl
aad
enter
jp
mov
imull
mov
cwtl
mov
cltd
mov
or
loopne
adc
jns
inc
ret
nop
icebp
xchg
mov
fcoms
mov
jecxz
sahf
or
jecxz
dec
mov
jno
addr16
shlb
out
sbb
or
ror
addr16
jae
js
in
stos
nop
out
adc
enter
jmp
add
scas
movsb
push
daa
jg
and
adc
cmpsl
daa
mov
or
mov
arpl
sub
movsl
aad
pop
push
imul
add
fwait
and
push
pop
and
lock
sub
ss
dec
sub
clc
testb
inc
push
adc
push
and
dec
int3
sub
sub
mov
fwait
xchg
inc
jp
mov
into
xchg
hlt
xchg
test
push
pusha
mov
mov
pop
cmpsb
test
loope
mov
adc
adc
bound
popa
xor
jmp
push
mov
inc
ja
sti
cmp
stc
and
int
push
lea
int3
stc
xchg
lahf
pusha
cwtl
icebp
jno
xchg
test
lahf
int3
loop
outsb
fmuls
xchg
xchg
sbb
jns
jg
gs
sub
adc
inc
int3
dec
or
nop
dec
movsb
lret
pop
cs
adc
add
sahf
daa
xor
rcr
add
cmp
out
jb
nop
repz
stos
sbb
shl
or
push
fstp
sbb
ficompl
mov
fs
or
lret
push
adc
mov
lahf
scas
test
inc
sbb
jnp
iret
push
push
or
sahf
rcr
testl
imul
int3
jns
dec
adc
out
pop
rcr
lret
add
and
mov
mov
mov
push
cwtl
gs
inc
enter
out
iret
push
or
jne
xor
push
test
cltd
insl
dec
xchg
mov
lcall
mov
xchg
cmc
shll
jne
call
test
add
pop
mov
stos
or
push
push
jl
call
sahf
sahf
cli
inc
add
jnp,pn
mov
pop
sbb
lcall
adc
mov
jecxz
xchg
cmp
xchg
es
loopne
sub
pop
scas
in
jg
out
or
aas
cmp
xor
test
aaa
mov
movntq
out
push
push
leave
fistl
fisubl
enter
mov
aaa
pop
fsts
stos
mov
ds
cmpsb
gs
fistl
int
inc
js
lcall
lret
cmpsl
jmp
aaa
fidivrs
inc
lods
xchg
stos
fnsave
pop
sbb
aad
lock
cmpl
rcll
xorl
pop
and
pop
rcl
add
mov
leave
sbb
sbb
popf
mov
into
pop
push
lea
inc
add
arpl
nop
fildll
movb
push
leave
in
je
ficoms
and
jbe
stos
inc
cmp
xchg
setbe
add
aam
data16
push
push
sub
fiadds
adc
aad
xor
in
mov
xchg
mov
xor
ffreep
cmp
cltd
es
mov
mov
flds
mov
fs
std
pop
mov
sbbb
pop
pop
inc
jne
cmc
call
into
and
mov
scas
inc
jmp
push
inc
mov
in
aad
sub
js
shl
loopne
cmc
clc
notl
xchg
sahf
adc
in
ret
mov
xchg
jle
inc
rorl
pop
sub
mov
sbb
sarb
outsl
or
lds
push
xchg
andb
mov
pop
pop
pop
aaa
lcall
cmp
dec
xlat
imul
jb
imul
movsb
xor
jl
notl
leave
add
or
sub
jle
stc
fstpt
rorb
and
add
fdivl
stos
jg
icebp
pop
mov
sarl
sub
insl
or
ja
shr
int3
push
mov
div
scas
jg
jmp
pop
loop
fistpll
scas
mov
push
push
scas
push
cmp
addr16
fdivr
add
inc
into
push
jmp
test
test
stc
cmp
nop
cmp
cs
lcall
scas
inc
jge
lea
shr
pop
pusha
in
adc
mov
push
and
mov
adc
and
dec
pop
cmpl
mov
into
fsubrs
adc
loopne
lret
cmp
scas
popa
inc
mov
xchg
rcll
dec
in
mov
cmp
mov
xor
cmp
jnp
int
daa
xor
mov
pop
or
cmp
jb
dec
ds
inc
jmp
ret
fisttps
adc
or
enter
jae
jns
mov
fimuls
xchg
test
sub
lea
mov
dec
cld
iret
dec
popf
push
sahf
add
jae
cltd
ljmp
xchg
aas
shrb
push
ljmp
fists
pop
push
sub
sub
and
adc
pop
movsl
andl
sahf
lock
filds
clc
scas
or
jne
fyl2x
inc
ret
pusha
cmp
dec
lahf
pop
dec
push
dec
in
roll
lret
adc
scas
lret
pusha
cmp
xchg
sub
sub
shrb
mov
ret
lea
mov
je
lock
add
push
test
xchg
in
ret
divb
push
mov
mov
adc
lahf
out
sub
fcmovbe
movsb
test
rcl
mov
aad
mov
hlt
loop
sbb
sbb
dec
jl
mov
into
nop
xor
ljmp
xchg
test
mov
mov
into
push
add
mov
mov
and
push
int
arpl
repz
mov
repz
add
mov
in
test
cmp
lods
jo
push
pop
test
mov
push
inc
pusha
adc
ret
outsl
push
out
sbb
aam
xchg
or
push
int
mov
lods
std
lret
push
pop
sbb
mov
insb
xchg
hlt
add
movsb
cmpsb
fwait
dec
pop
outsl
int
fstpt
push
jns
pop
jae
repnz
jne
and
xchg
and
and
add
out
cmp
sbb
icebp
inc
in
addl
icebp
leave
xchg
gs
mov
sbb
out
pop
out
sub
ja
pop
inc
dec
dec
cmp
stos
mov
sub
or
mov
ficoml
and
ss
inc
sti
fs
imul
lods
cmp
gs
jge
push
or
push
out
shll
mov
dec
or
int
rcl
mov
bound
lods
xchg
adc
clc
mov
insb
fs
mov
jge
and
sub
cmp
push
lds
jo
or
cli
or
mov
inc
out
call
adc
mov
jecxz
into
jae
ss
je
pop
dec
test
sub
xchg
mov
ret
imul
movsb
or
xchg
push
js
loope
stos
movsb
out
loop
jmp
iret
std
insb
lahf
xor
adc
xor
push
rolb
scas
ljmp
cmpsl
push
mov
cmp
aas
push
dec
xchg
imul
sbb
push
mov
sub
add
xor
popaw
aas
js
xor
pushf
sbb
push
shll
pop
xchg
out
xor
jl
pop
adc
pop
cmpsl
sbb
mov
mov
pop
sub
stc
sti
dec
fists
and
lahf
lock
cmp
aaa
jg
sbb
push
sbb
test
repz
rcrb
and
icebp
dec
jle
das
sbb
data16
cmp
jg
enter
or
push
aam
movsl
dec
xor
cmp
adc
jl
mov
and
nop
dec
cltd
mov
stos
push
push
cmp
fldt
xor
and
imul
jp
add
sbbb
out
lea
pushf
mov
cmp
das
and
leave
xabort
adc
loopne
and
std
out
mov
rcrl
ror
inc
mov
sub
popf
test
cmp
mov
hlt
pusha
xor
xor
push
enter
shl
repnz
mov
aad
jp
loope
xor
mov
jecxz
movsl
mov
mov
cmp
or
push
push
xor
fsubrp
pop
push
cli
out
imul
sbb
outsl
jbe
xchg
push
pop
rolb
dec
xchg
lods
repz
insl
bound
xchg
pop
into
mov
sbb
pop
shll
xchg
movsl
lods
out
push
dec
mov
dec
jle
xchg
popf
lret
sub
cmpsl
mov
mov
cmp
loope
test
outsl
and
roll
sub
outsl
xchg
push
mov
xor
mov
adc
push
push
sbb
jnp
loope
jnp
xor
arpl
stos
mov
leave
dec
call
pop
test
inc
pop
lahf
repz
jb
mov
outsb
dec
mov
stos
into
loopne
push
ja
or
and
out
popa
popf
dec
notl
inc
fcomps
cmp
jne
sbbb
andb
pop
test
les
dec
sub
pushf
add
push
fsubl
inc
call
jbe
cmp
stos
xchg
rorb
push
stos
inc
cld
dec
lahf
add
cs
mov
push
fsubrs
cmp
leave
test
lahf
jne
aam
loopne
clc
test
in
imul
inc
rorl
adc
mov
xchg
popa
dec
jg
lret
jge
add
cmpsl
fdivrs
jbe
inc
mov
daa
test
iret
call
xor
sub
cmp
mov
adc
loop
mov
jmp
push
adc
cmpsb
sbb
pushf
jge
xor
jo
mov
loopne
xchg
hlt
fisttpll
icebp
xor
inc
cmpsl
dec
adcb
divb
push
hlt
sbb
enter
mov
rcll
fiaddl
shlb
xchg
xrelease
into
data16
cli
cmp
negb
mov
es
push
add
and
dec
sbb
mov
sarb
add
fld
repnz
arpl
mov
inc
and
aam
lds
addr16
cmp
dec
mov
enter
int3
imul
int
xor
enter
dec
push
movb
iret
xor
xorl
mov
fdivl
hlt
insl
jno
xchg
fadds
push
dec
clc
call
arpl
xchg
sbb
mov
addr16
xlat
or
fstps
fadd
popa
push
and
movsb
pop
sbb
jp
push
es
mov
or
std
leave
inc
lret
pop
fnstsw
lods
jecxz
or
aam
adcl
test
xchg
je
mov
sarl
ss
mov
fldt
jbe
jno
fcmove
std
data16
lea
sub
xchg
mov
test
imul
addl
cmpsl
ljmp
fwait
int3
imul
push
adc
adc
mov
faddl
lea
adc
int3
push
ret
sub
enter
mov
mov
in
cli
mov
xchg
xchg
jo
mov
leave
js
sbb
fstpl
adc
mov
dec
jo
or
dec
adc
sti
add
and
fsubl
pop
imul
mov
hlt
mov
out
ret
or
or
das
in
xchg
xchg
inc
ror
lcall
les
adc
movsb
pop
bound
sahf
mov
inc
out
sub
inc
mov
test
add
mov
sub
hlt
testb
sti
stos
out
xlat
or
push
jle
ja
mov
adc
adc
pop
sub
push
lock
insl
xchg
das
sub
pop
xor
ds
jl
jle
or
dec
mov
xchg
icebp
push
or
mov
inc
popa
jle
inc
pop
sbb
movsb
jb
mov
adc
adc
jns
cmp
cmp
rclb
push
xlat
dec
ljmp
imull
xchg
push
int3
xchg
jmp
mov
inc
push
pop
inc
dec
fisubrs
jmp
mov
cmpsl
js
lea
mov
sbb
ret
pop
adc
stos
sub
insl
in
push
fwait
cmp
lods
mov
fmul
sbb
ret
mov
andb
add
js
push
dec
inc
add
dec
ss
repnz
jp
inc
cmp
out
jle
sub
ret
pop
push
inc
sub
cmpsb
and
push
inc
push
loopne
mov
loop
sub
jmp
mov
mov
loop
out
rcrl
and
xchg
xchg
bt
dec
sub
and
jb
and
movsb
adc
scas
daa
pop
mov
cmp
ss
xlat
popa
fstpl
imul
mov
mov
insl
and
push
cli
sbb
cmp
sbb
pop
lret
or
pop
rclb
pop
mov
test
cmp
lret
dec
insb
jmp
lea
les
push
repnz
repz
nopl
mov
adc
test
rolb
inc
fwait
dec
insb
lcall
jbe
inc
leave
dec
fldl
jmp
inc
add
sbb
js
pop
divl
lock
xor
ljmp
or
fildl
repz
stc
dec
rcl
in
ret
jecxz
enter
sbb
in
mov
mov
outsl
lahf
and
cmp
push
je
push
dec
hlt
cld
xor
adc
pop
mov
cld
imul
aam
cwtl
add
sub
and
rolb
mov
dec
outsl
lds
in
push
pop
lds
mov
je
mov
test
cmpsl
rcrb
mov
lds
adc
test
or
push
add
pop
cwtl
imul
addr16
imul
addr16
test
lock
divb
rcrb
stc
pop
imulb
fimuls
jge
ret
stos
pop
xchg
imul
xlat
jmp
or
xor
imul
out
movsl
pushf
adc
sbb
stos
push
dec
loop
mov
in
inc
inc
push
out
sub
in
aas
ja
fldl
jp
jp
mov
fdivr
adc
shll
rcrb
ror
ss
adc
daa
jle
cmc
mov
sub
jae
addr16
lcall
mov
push
mov
mov
xchg
das
cmp
adc
cmpl
inc
into
push
inc
xor
ljmp
fcoml
adc
xchg
daa
adc
jnp
pop
outsb
mov
cmovp
mov
jno
std
lcall
cmp
mov
fsubrl
es
jge
adc
dec
imulb
push
push
mov
cmp
sub
inc
push
in
pop
jns
movsb
stos
das
push
jbe
push
cmp
and
data16
xor
jle
dec
or
sub
test
hlt
adcb
fidivrs
int3
mov
inc
lea
test
fstpl
mov
mov
mov
sub
stc
popa
adc
or
aam
mov
push
push
pop
and
jno
add
or
imul
and
pop
dec
push
fucomi
mov
push
add
in
pop
mov
mov
out
sbb
in
test
je
mov
inc
xchg
jecxz
add
rorl
cwtl
sahf
sub
pop
pusha
call
push
repz
mov
xchg
sbb
sbb
and
jb
or
push
cmp
rol
push
icebp
or
scas
sbb
cmp
sbb
divb
pop
mov
and
xor
adc
mov
clc
leave
and
repnz
std
dec
subl
filds
stc
mov
bound
inc
pop
hlt
inc
add
pop
clc
add
sbb
js
jns
add
rcrb
lret
pop
int
insl
das
push
dec
pop
dec
push
clc
xchg
aam
rorl
imul
push
das
flds
bound
stos
es
and
dec
pop
xor
pop
ss
and
aam
mov
mov
xchg
jle
cmpsb
inc
sub
and
jle
sub
dec
pop
lds
jmp
xor
pop
jae
addr16
and
fisubl
mov
ret
pop
xor
mov
aas
arpl
sahf
mov
ret
jns
lcall
adc
pop
leave
and
mov
or
mov
push
xchg
ds
xchg
gs
repz
fst
pop
and
push
fisttpll
shl
popf
hlt
sbb
xchg
enter
gs
jno
and
pop
out
inc
sbb
fimuls
popf
popa
scas
or
pop
movsb
aad
loopne
lea
ljmp
mov
jl
hlt
addr16
mov
pop
daa
or
xor
push
inc
push
xor
ds
cwtl
into
mov
sub
in
mov
fists
mov
sub
iret
ljmp
aas
jmp
int
xchg
cmp
nop
shlb
add
lret
cmpsb
xchg
xor
out
stc
lret
xor
adc
mov
shll
inc
mov
sub
adc
push
imul
inc
sti
xchg
xor
push
push
ret
sub
out
lea
pop
jae
inc
or
and
dec
sbb
fidivrs
push
cmp
xchg
and
aaa
dec
cmp
jnp
fs
scas
push
pop
outsb
add
fs
pushl
pop
pop
mov
inc
test
rcll
add
hlt
lahf
add
adc
xchg
sarb
out
and
fwait
adc
jne
mov
clc
cs
sar
and
inc
mov
das
outsb
sbb
imul
mov
adc
jnp
mov
not
xchg
cmp
int3
in
mov
inc
icebp
mov
sarl
outsl
das
outsb
jae
cmpl
lcall
mov
xor
cwtl
stos
jno
jbe
xor
or
dec
in
dec
xor
adc
pop
in
lds
add
and
add
sbb
dec
sub
cmp
sbb
pushf
inc
mov
cmp
lcall
cmc
subb
xor
sahf
ficoml
xor
sbb
mov
out
dec
sub
or
mov
lcall
jbe
push
dec
jl
lcall
mov
fcmovb
int3
xor
push
dec
xor
daa
add
fisttpll
cld
adc
mov
pop
or
fcompl
or
pop
fisubl
or
add
adc
sbb
push
mov
loopne
sbb
decb
sub
xor
jge
adc
dec
loopne
pop
sub
clc
into
add
fsubrs
inc
xorl
and
into
xchg
sbb
xor
or
es
scas
imul
in
ss
adc
test
dec
jge
push
and
repz
and
lret
cmp
leave
add
mov
sub
mov
mov
cltd
int3
rcr
mov
adc
push
icebp
shrl
or
cli
scas
insl
adc
loop
jae
push
out
jns
push
lret
xor
inc
test
fsubrl
and
cmpsb
add
in
and
lcall
fdivrp
lea
adc
mov
testl
cmp
adc
push
test
stos
and
call
cmc
call
pop
enter
out
xchg
arpl
iret
outsl
mov
jo
push
or
mov
sahf
jmp
sub
push
dec
sbb
xor
adc
and
out
insl
nop
test
add
xor
std
enter
jmp
pop
cmp
addr16
mov
outsb
into
lret
cmp
addr16
ficomps
lahf
jge
pop
mov
xchg
mov
sbb
test
push
fidivrl
sub
xchg
mov
cmp
xchg
aad
cltd
loop
push
mov
lea
xor
lods
inc
jg
test
aaa
ret
cld
xor
notb
das
sub
pop
and
xor
cmpsl
mov
sub
mov
add
js
lret
add
sti
lret
scas
sarb
addl
jo
leave
enter
or
stc
jmp
pushf
adcl
daa
repz
push
fnstsw
cld
inc
jmp
icebp
cld
call
or
inc
call
inc
in
jmp
test
pop
aad
push
or
outsb
test
xor
pop
stos
push
push
vpunpckhdq
xchg
ljmp
aas
ja
xor
ret
mov
enter
sti
shrl
ret
popf
hlt
shlb
xor
imul
test
dec
enter
repz
arpl
pop
or
adc
dec
fmulp
test
imul
int
xchg
pop
push
jge
jg
mov
and
cmc
mov
jp
jb
outsb
imul
cs
test
adc
pop
sub
add
xchg
insb
or
or
out
dec
mov
sahf
jne
jno
xor
mov
mov
jae
and
mov
sub
in
pop
nop
adc
add
test
aad
lods
mov
test
and
sub
aaa
addr16
dec
mov
xor
in
push
xchg
jg
adc
aam
push
add
mov
sub
push
lahf
inc
push
scas
cli
sbb
xchg
cmp
in
xor
pop
nop
loope
jle
pusha
lock
lds
cmp
data16
jg
push
cmc
popf
push
scas
sub
jecxz
mov
addl
adc
sub
cli
bound
scas
jnp
and
jp
xchg
pop
les
ds
int3
xor
sbb
rcrb
sbb
mov
mov
shll
jecxz
ja
cmpsb
add
imul
mov
cmpsb
cmpsl
movsl
add
sub
mov
add
aad
sbb
jae
dec
aad
clc
inc
push
je
mov
mov
jae
scas
adc
xchg
sub
mov
add
sahf
or
add
lds
push
sub
scas
cmp
outsb
lret
xchg
out
dec
aaa
jne
mov
aaa
test
xor
cwtl
imul
dec
and
xchg
es
in
fnsave
sbb
fmuls
cmpsb
dec
xchg
mov
gs
pushf
repnz
mov
lahf
sub
sbb
fs
pop
sbb
or
or
cmc
inc
cs
enter
test
aaa
loop
fwait
pop
dec
test
or
cltd
aaa
out
fadd
mov
mov
sbb
sbb
push
movsl
or
fcom
shll
sbb
adc
in
mov
cmpsl
push
stos
hlt
xchg
out
mov
pop
scas
push
mov
xchg
dec
lea
adc
test
mov
pop
xor
jns
popa
pop
or
mov
ja
jne
push
sahf
scas
push
mov
mov
popa
mov
xor
int
xchg
in
jle
push
inc
mov
aam
cltd
les
jge
push
sbb
xor
push
xchg
inc
inc
pop
mov
aam
mov
xor
icebp
jbe
pusha
js
std
xchg
loopne
loope
inc
push
ds
cmp
movsb
xor
icebp
je
out
outsl
stc
and
shrl
xchg
cli
inc
xchg
out
fldz
fs
push
call
shlb
sbbl
fwait
sti
and
ja
clc
stos
cmp
test
mov
outsl
mov
fldcw
outsb
call
sbb
jnp
push
jo
jno
add
popa
pop
cld
jge
jl
daa
sbb
push
jmp
inc
bound
shlb
lods
xor
movsb
sbb
lahf
fcomip
and
jne
insb
pop
icebp
call
mov
cmpsb
mov
stos
mov
xor
push
inc
and
inc
sbb
mov
sbb
xchg
stos
mov
jbe
fmull
mov
push
lds
or
std
push
add
lahf
std
mov
or
imul
jno
adcb
fnstsw
cld
lods
xor
out
xor
mull
jl
sarb
gs
arpl
adc
dec
stc
push
jecxz
sub
loop
jp
mov
outsb
pusha
xor
test
or
js
dec
cltd
sub
pop
idivl
add
push
or
fbld
data16
mov
popf
mov
mov
mov
and
inc
ret
je
cmp
gs
or
sbb
rclb
adc
cmpl
hlt
push
insl
imull
sahf
add
lcall
loope
mov
add
and
loop
stc
or
ret
sbbb
xchg
inc
mov
mull
push
pop
xchg
sub
push
lods
jo
or
cs
rcrl
push
aam
mov
xchg
cwtl
inc
lea
loopne
jmp
sub
and
dec
ss
pop
loopne
inc
mov
cli
fnstsw
and
in
jo
mov
mov
dec
test
cmpsl
cmpsl
mov
pop
jno
movl
shl
inc
push
mov
pushf
cmp
xorb
gs
mov
sub
jg
testl
xchg
mov
push
stos
push
enter
inc
lods
or
loop
inc
lods
imul
repz
ret
mov
das
imul
aad
push
or
ja
xchg
add
pop
push
rolb
push
imul
inc
jle
frstor
cmpl
mov
lahf
movsb
out
inc
popa
fs
add
jg
xor
mov
enter
mov
or
pop
or
aaa
mov
push
mov
and
scas
pop
add
in
into
and
xlat
mov
inc
mov
mov
fistl
lea
test
jmp
mov
dec
push
mov
cmp
mov
xlat
daa
test
aas
sbb
xchg
popf
mov
xchg
stos
mov
jecxz
idivb
es
cld
sub
jle
xor
jg
aaa
mov
or
sbb
mov
pop
sarl
xchg
pusha
cwtl
inc
aad
idivb
push
popa
xor
xchg
fsubl
call
out
push
dec
cmp
fnstsw
gs
iret
xor
sub
out
sbb
jg
adc
mov
in
test
mov
imulb
xchg
add
adc
mov
or
jp
xchg
int
dec
push
ret
cmp
and
imul
inc
xchg
test
jo
and
iret
cmp
push
lods
pushf
test
loopne
cli
sub
faddl
out
pop
movsl
mov
sahf
out
popf
andb
addr16
xchg
jl
and
in
adc
and
cli
push
outsl
mov
roll
pusha
sahf
xchg
sub
je
jns
stc
sbb
xor
adc
das
mov
scas
push
sbb
subb
scas
cmp
mov
popa
mov
movsb
pop
ror
mov
mov
push
out
outsl
mov
add
cwtl
lret
bound
sbb
mov
mov
xor
subb
sbb
dec
jge
push
outsb
popf
sbb
dec
nopl
int3
push
push
inc
bound
es
lods
bound
in
mov
nop
mov
jno
stos
dec
pop
push
dec
xchg
lea
imul
int3
lret
je
rcll
adc
in
lahf
adc
roll
add
sahf
mov
sbb
jp
fcoms
mov
shrb
ds
gs
sbb
inc
lds
cmp
out
bound
jecxz
cli
aad
cmc
jecxz
jl
addr16
adc
mov
add
loope
fwait
out
stos
dec
and
jp
add
cmp
or
lock
shll
push
xor
out
jecxz
divb
push
loop
jl
xor
mov
add
and
pop
arpl
cmp
data16
add
cmp
jmp
or
push
or
je
and
shrb
into
xchg
inc
enter
cli
std
mov
in
mov
lahf
inc
ja
lret
xor
push
pusha
clc
cld
ja
xchg
fisubl
lahf
xor
out
cmp
imul
or
hlt
jb
addr16
push
nop
test
faddp
inc
out
sub
fnstcw
loopne
les
in
das
rcll
dec
fisubs
shlb
pop
xor
fnstcw
mov
icebp
push
pop
cld
mov
repz
sbb
lret
lea
sti
push
aad
sub
dec
and
cmpsb
pusha
mov
incl
adc
aas
int3
inc
ret
push
inc
xor
adc
sbb
iret
xchg
mov
sbb
pop
mov
movsl
stos
imul
scas
and
jbe
mov
push
pushf
scas
ja
pop
mov
mov
call
pop
pop
lds
mov
ds
jns
sbb
xor
adc
mov
rorb
push
pop
divl
jg
cmp
mov
cld
in
sbb
mov
pop
xorb
mov
mov
shll
fcmove
pop
or
or
push
jo
hlt
mov
dec
loopne
aaa
fbstp
movnti
daa
xchg
mov
xchg
cmp
mov
gs
lock
stos
cmp
add
addl
mov
fstps
lret
and
pop
xchg
jmp
cwtl
fsts
add
adc
add
lods
xchg
out
jbe
out
ljmp
push
out
pop
sbb
outsl
sti
test
or
insb
dec
jp
ss
dec
cmp
int3
xchg
mov
and
clc
lahf
ret
push
cwtl
test
xor
and
cmp
sti
fs
cmpsb
xor
mov
lea
mov
xchg
inc
mov
push
pop
mov
outsl
and
adc
or
add
xchg
test
xchg
fsts
data16
mov
insl
scas
js
imul
or
in
repz
jmp
push
pop
mov
loope
jb
dec
mov
push
cmc
das
rclb
cmp
push
mov
mov
pop
push
sub
out
arpl
add
jne
test
pop
and
lods
movsb
int
shlb
hlt
push
imul
sbb
dec
pop
mov
or
mov
rep
or
jl
or
add
ficoms
loopne
cli
movsb
sub
arpl
insl
das
mov
outsl
in
dec
jbe
sysenter
dec
loop
movsl
lret
or
add
xchg
pushf
mov
mov
lret
inc
push
std
stos
lods
pushf
jmp
pop
ret
ret
pusha
add
sub
lret
arpl
mov
test
xor
out
popa
jl
ja
jmp
nop
push
hlt
pop
scas
xor
jge
out
orl
lcall
test
fdivl
lods
lods
fistps
scas
push
sbb
mov
jb
pop
mov
addb
jns
fsubl
push
mov
mov
sub
loopne
xchg
pop
ja
sti
and
mov
mov
pushf
mov
xchg
xor
outsl
adc
add
movsb
xlat
sti
fwait
add
cmp
pusha
add
push
mov
push
stos
jno
insl
adc
jnp
push
xor
aad
push
test
cld
in
stos
add
inc
fildll
sbb
sub
sbb
and
jno
mov
jmp
daa
fidivl
out
sub
sahf
mov
add
leave
mov
jmp
pusha
mov
je
pop
xchg
xor
inc
sbbl
jae
push
or
adc
inc
pusha
and
clc
sub
xor
dec
jbe
daa
imul
add
sub
push
dec
les
add
fcoml
popf
push
push
decl
push
sub
fsubrl
mov
fnstcw
fcoms
xor
insb
rcrl
dec
or
pop
in
add
int
out
lds
cmpsb
mov
out
cmp
dec
lock
pushf
xchg
adc
dec
sarl
pop
xchg
push
imul
cmp
push
and
inc
dec
pop
ret
test
pop
cmc
in
fwait
daa
push
or
mov
push
mov
rcr
repnz
imul
jbe
sbb
addr16
mov
xchg
pusha
les
push
pop
ret
ret
out
out
pop
jno
cmpsb
je
dec
adc
cmp
test
jae
adc
push
add
test
sub
sub
mov
ret
mov
jge
mov
dec
inc
xchg
sbb
add
test
mov
xor
das
dec
scas
aaa
adcb
mov
std
mov
lret
fstpl
dec
xor
dec
aaa
je
test
jne
push
mov
bound
mov
mov
leave
dec
dec
repnz
or
sub
jb
sti
xchg
nop
cmp
test
jae
lahf
ret
in
idivb
cmpsl
stc
stc
inc
and
mov
sub
push
push
dec
mov
repz
mov
insb
dec
stos
or
mov
ret
sub
enter
dec
pop
push
pop
ret
xor
iret
fiadds
stos
stos
in
lock
ret
or
and
xor
cmp
je
shrb
push
cmc
sub
sub
nop
xchg
lcall
int
xor
popl
mov
stos
sbb
push
xor
xchg
insb
sti
lods
mov
fcoml
ficoml
lahf
popf
movsl
inc
mov
pop
jg
data16
mov
add
rcl
ret
xchg
cs
add
lret
insb
je
nop
mov
outsb
mov
cltd
add
data16
dec
ljmp
mov
sahf
data16
enter
pop
pop
mov
leave
into
add
lcall
adc
pop
push
ret
mov
mov
icebp
xchg
out
decb
xchg
loopne
adc
or
cli
stc
push
mov
or
insb
add
dec
pop
cltd
jge
dec
jp
ret
in
in
ds
cmpsl
push
ja
scas
sbb
mov
les
subb
pop
push
lock
mov
xlat
adc
or
fmulp
call
aad
ret
mov
das
push
popa
mov
or
xchg
sub
add
dec
js
xchg
pop
push
xor
dec
cmp
fwait
jecxz
mov
fcompl
repz
xchg
scas
addb
gs
push
stos
sub
dec
mov
ret
lea
add
or
das
cli
cli
pushf
inc
adc
dec
fists
xchg
xchg
push
cs
mov
dec
pushf
js
mov
fisubrs
popf
mov
cmp
jle
lds
pop
push
dec
mov
je
sbb
push
enter
test
mov
test
mov
mov
cmpsb
loop
mov
adc
les
sbb
imul
mov
cmp
testl
sbb
and
xor
mov
cmpb
push
mov
xchg
jno
dec
inc
cmp
and
sub
cmp
pop
mov
inc
data16
xchg
lret
fnstcw
hlt
cmpsl
outsb
popa
sub
dec
mov
mov
mov
and
mov
cmp
addr16
clc
lock
lret
dec
inc
mov
inc
es
pop
cmpl
shlb
cmpsl
pop
add
dec
in
cmpsl
sub
jge
roll
in
adc
dec
pop
lods
mov
aad
ret
addb
mov
inc
lahf
sub
es
sub
lods
xchg
popf
or
mov
inc
pop
aad
push
sub
stos
add
test
adcb
push
or
xor
ja
inc
pushf
add
loopne
mov
xor
cwtl
xlat
add
in
es
push
push
fldcw
add
iret
jge
sbb
in
shlb
mov
addr16
orl
push
mov
fmul
jbe
fistl
aam
cmpsb
and
test
xorl
sub
xchg
cli
js
inc
xchg
int
call
sub
mov
fcompl
or
cmp
fdivrl
push
push
imul
inc
mov
lods
cmp
xchg
sahf
jmp
and
jb
nop
orb
inc
mov
push
sahf
inc
sub
ds
add
sub
pop
xor
test
lods
inc
xchg
icebp
and
jbe
inc
or
adc
arpl
shrb
or
mov
arpl
pop
mov
div
push
mov
clc
lods
daa
insb
popa
cltd
pop
xor
in
push
or
pusha
add
fwait
daa
lcall
fs
xorl
jl
xchg
mov
mov
out
pushf
testl
sbb
or
and
cmp
push
mov
sbb
xchg
mov
loopne
cltd
ss
cli
pop
js
mov
xchg
adc
fs
testl
cwtl
add
dec
popf
das
xor
mov
inc
pop
mov
add
rolb
sub
les
pop
mov
loope
div
xor
movsl
push
loope
push
adc
fistpl
inc
hlt
int3
push
lds
lcall
iret
fcomps
mov
pop
rcll
xchg
das
cs
mov
or
fcmove
stos
out
mov
das
mov
adcl
jbe
jnp
sahf
insl
sub
stos
mov
inc
and
mov
out
mov
push
data16
dec
cmp
mov
stos
inc
mov
dec
add
fadds
fs
pop
outsb
fwait
push
sub
js
and
iret
xchg
notl
xchg
inc
mov
inc
repz
sbb
add
das
sbb
out
into
dec
scas
cmpl
push
inc
mov
arpl
jb
ret
jo
in
mov
xchg
inc
xchg
shlb
dec
hlt
pop
or
mov
in
rcll
sbb
nop
jo
push
dec
movsl
xchg
fdivl
lock
rorb
xlat
jbe
je
test
or
sbb
lret
gs
jge
cmp
cli
mov
sub
mov
iret
das
pop
push
pop
pop
test
mov
icebp
pop
adc
adc
or
push
shrb
frstor
subb
arpl
xchg
inc
xchg
jne
adc
sbb
xor
xchg
enter
cmp
mov
jns
ljmp
nop
xchg
cmpps
int
loopne
ss
loope
cmp
fiaddl
sub
int3
inc
sahf
jnp
inc
xor
movsb
mov
out
ds
cmp
popf
push
cs
push
push
lcall
shlb
notw
adc
int
and
jnp
sub
sarl
andl
inc
and
inc
je
and
divl
arpl
pop
or
popf
in
lds
jge
test
ds
or
call
in
dec
loop
add
addr16
jp
aam
jae
mov
xor
dec
loop
je
in
out
sbb
addl
mov
inc
movsl
ret
ret
mov
test
inc
loope
jnp
sub
mov
leave
scas
lods
das
xchg
rcll
jb
hlt
pop
push
into
adc
lods
ljmp
mov
aad
cmp
jo
or
mov
mov
ficomps
add
je
adc
pop
sbb
arpl
lods
and
add
inc
mov
test
js
add
imul
and
add
enter
into
push
jbe
outsb
and
sbb
and
fnstsw
mov
sbb
sub
in
leave
cmpsl
push
pop
loop
push
adc
call
mov
jecxz
aaa
adc
out
xchg
in
cmp
mov
gs
fdivrs
sbb
xorl
mov
push
mov
clc
push
pop
movsb
and
out
jg
dec
mov
das
mov
fsubl
cmpsl
jp
fisubrs
jge
xchg
test
popl
or
int3
push
dec
cmp
dec
ljmp
mov
inc
insl
jno
jle
add
xchg
fisubs
sbb
inc
test
scas
sar
jge
jp
insb
repnz
sbb
xor
cltd
mov
dec
cmpsb
fisubrs
sub
dec
jbe
popf
push
insl
push
xlat
aad
dec
aas
jno
aaa
or
sti
lock
bound
sbb
call
dec
or
and
xchg
adc
repz
out
adc
mov
rclb
bound
enter
jl
popf
div
jnp
enter
jecxz
pop
add
out
js
adc
ja
pop
jnp
and
test
ret
lret
rcpps
fists
in
or
push
pop
jno
jne
mov
xchg
rolb
fwait
xchg
jecxz
and
push
cmp
mov
add
adc
jmp
cmc
sbb
sbb
andb
mov
and
test
mov
mov
out
sub
insl
add
int
jmp
sub
pop
aas
in
push
out
cmc
dec
mov
repnz
add
sbb
int3
xor
subl
xchg
and
add
sbb
out
js
mov
lahf
mov
xlat
loope
or
sub
lock
fnstenv
xor
xchg
shlb
int
sahf
jnp
push
push
test
hlt
push
add
js
and
and
lret
lret
fsub
or
lcall
shrb
dec
std
jmp
filds
mov
and
push
test
add
push
ss
pop
or
add
adc
dec
mov
test
mov
sbb
insb
xorl
mov
cmpsb
sub
stos
mov
nop
sbb
aam
add
and
xchg
movsl
enter
lahf
cmpsb
pop
lock
movaps
in
push
lds
mov
or
test
fmull
inc
pop
cmp
addr16
fs
push
xchg
inc
pusha
inc
or
sbb
cs
sub
sbb
std
popa
ret
daa
lods
adc
mov
jmp
movsl
mov
in
mov
adc
in
aam
pop
mov
loopne
adc
or
inc
sub
xchg
add
adc
inc
daa
pop
das
pop
mov
xchg
idiv
xchg
and
outsb
insb
cmp
cmp
repz
aam
mov
and
cwtl
adc
dec
xor
push
or
adc
or
int
pop
ret
shrl
push
jmp
jbe
cmpl
fwait
xchg
jle
in
repnz
push
test
mov
adc
pop
nop
shrb
sti
mov
push
ret
lock
sub
leave
xchg
jns
daa
insl
add
dec
mov
icebp
ds
les
xor
mov
neg
popf
rcrl
adcb
imul
out
inc
jp
pop
rclb
in
subl
cli
xchg
pop
fidivs
sbbb
ljmp
lret
push
or
xchg
xor
pop
clc
into
sbb
call
jno
adc
out
xchg
add
data16
mov
pop
mov
jb
jmp
or
push
or
sub
xor
test
lcall
jmp
mov
mov
jne
push
std
test
cs
bound
andnps
mov
inc
cwtl
jmp
roll
or
jnp
shlb
add
in
fmull
aam
add
xor
or
mov
jmp
xchg
int
insb
jmp
sub
movsl
pop
cltd
pop
or
adc
negl
out
pop
inc
div
and
sbb
cmpsb
scas
cmp
push
insl
scas
xor
rclb
or
push
mov
loop
lret
ficomps
cs
jb
push
cmpsl
out
cmc
iret
pmovmskb
sub
repnz
leave
push
inc
pop
sbb
fistps
icebp
fdivrl
mov
pop
sahf
or
add
add
mov
push
sub
pop
cmp
pop
dec
aad
rcr
test
outsl
rorb
pop
loope
cwtl
sbb
xor
out
push
jp
push
lds
adcb
enter
sub
das
jo
jecxz
arpl
jge
mov
test
sub
lcall
add
push
cmc
sbb
or
iret
fnstenv
dec
xchg
mov
cmp
inc
je
xchg
dec
scas
mov
dec
add
scas
movsl
add
adc
ljmp
out
sbb
jmp
gs
out
mov
aas
cs
xchg
mov
stos
mov
and
jle
lcall
adc
aad
or
mov
dec
outsl
and
inc
cmpsb
jae
movsb
mov
xchg
leave
xchg
fs
adc
std
xor
xor
add
je
adc
jmp
movsb
cmp
push
jecxz
push
adc
into
lock
nopl
ja
cli
sub
ret
xlat
mov
outsb
jmp
xchg
add
test
cltd
inc
dec
rcr
stc
jno
cmp
push
daa
xor
mov
ficoml
leave
das
insb
in
xchg
faddp
sti
outsl
xor
mov
in
and
das
sub
daa
out
insb
cs
jb
xchg
fcomps
in
mov
xor
mov
test
hlt
push
loope
out
ss
sahf
adc
mov
mov
cld
inc
je
pop
add
addl
dec
test
dec
cli
push
cmpsl
inc
mov
fsubl
out
popa
mov
loopne
fsubp
movsl
cmp
sarl
jmp
xchg
mov
sub
data16
sahf
shrb
jle
adc
out
xor
jp
fscale
mov
cmp
inc
mov
pop
test
push
out
daa
insl
sti
not
jbe
xchg
pop
cmp
fwait
lahf
lret
gs
repz
mov
mov
or
imul
push
or
xor
or
rcr
and
sub
mov
sub
sbb
mov
or
mov
test
lea
ljmp
inc
inc
jno
loopne
and
insl
lcall
push
mov
jg
add
fildl
ss
test
cs
aas
pop
or
push
pop
cld
fnstsw
mov
rorb
mov
fyl2x
popw
clc
idivl
xchg
cmp
inc
push
sar
pop
xor
fwait
icebp
jnp
inc
les
sub
or
fistl
dec
setp
gs
loop
lods
out
sub
add
addr16
add
test
bound
xlat
push
lds
adc
lods
out
arpl
sti
xchg
js
pop
testb
sub
mov
fidivs
test
jb
mov
adc
stos
push
mov
loop
push
sub
mov
pushf
push
cs
mov
pop
jo
arpl
mull
filds
sub
es
idiv
aas
in
popa
add
lods
js
cmpsb
dec
aaa
addr16
xor
mov
inc
popw
mov
inc
fwait
mov
decb
ds
dec
pusha
stc
cmc
xor
mov
sti
jmp
filds
or
sbb
test
push
xchg
sbb
jnp
cmp
or
mov
xor
mulb
test
adc
cmp
enter
shrb
or
mov
mov
stos
or
mov
and
scas
pop
std
sbb
popa
or
sarb
xchg
dec
add
add
adcl
xchg
aad
xchg
adc
cmp
loop
fadds
mov
mov
mov
add
push
or
scas
dec
xor
lods
outsl
jo
shl
add
xor
out
repz
dec
insl
stos
pusha
test
xchg
dec
push
mov
pop
repnz
add
and
fwait
mov
outsb
imul
add
xor
cld
clc
push
es
push
in
adc
push
add
pop
std
es
cld
lods
or
ljmp
leave
mov
sbb
sbb
gs
mov
adc
pop
adc
rcll
or
sub
clc
lahf
loopne
mov
pusha
adc
fdivs
jg
out
sub
lods
into
cmp
nop
cmp
call
jae
aad
inc
js
addr16
xchg
pop
xor
inc
int
push
inc
ss
rorb
loopne
jo
mov
dec
jne
cmp
mov
shrb
inc
adc
mov
in
call
jl
adc
sub
cmp
push
jae
pushf
jmp
sub
fnstsw
adc
add
je
or
mov
rorb
clc
lods
stc
sbb
or
mov
ss
outsl
imul
ljmp
jl
scas
jmp
std
jns
shlb
cs
mov
dec
sbb
pop
lret
rcll
fucomi
stos
shrb
jne
mov
sub
adc
inc
add
fiaddl
pop
sub
dec
push
movsb
push
cmp
cltd
mov
xor
push
mov
das
xor
pop
in
mov
sub
sub
ljmp
inc
and
and
outsb
mov
les
decb
cmp
ret
movsb
or
decl
pop
insb
cmpl
cmc
call
call
cwtl
jae
mov
out
or
xchg
out
jno
cwtl
cmp
xchg
add
in
mov
mov
dec
xchg
mov
add
push
xchg
cmp
mov
mov
enter
push
aas
xchg
push
mov
lock
xchg
jg
mov
nop
adc
and
xor
mov
inc
pop
sbb
pop
daa
lea
data16
and
aam
jmp
insl
or
mov
sub
adc
lcall
aaa
pop
push
cmp
sub
sbb
ja
scas
cmp
xor
cwtl
mov
pop
in
inc
ret
test
cmpsl
insl
add
dec
cmp
mov
ja
int3
aad
pop
push
xchg
orb
cmp
stc
xchg
mov
dec
inc
sbb
stc
push
adc
xorl
imul
hlt
cmp
movsl
lock
mov
push
imul
pop
lods
sub
cltd
push
mov
iret
aam
sbb
mov
cmp
pop
out
cmp
mov
cvttps2pi
inc
mov
jno
lcall
ret
inc
mov
fdivp
xor
mov
jle
sub
sbb
repnz
mov
fadd
out
dec
pop
movsb
pop
popf
bound
cld
adc
xor
in
and
jns
dec
adc
test
sub
out
lcall
scas
into
in
fwait
int
sahf
fxtract
xchg
sub
cmp
repnz
fadds
notl
mov
mov
jae
orb
push
jbe
adc
jae
dec
fidivs
in
mov
outsl
inc
out
sar
movsl
jb
dec
and
inc
out
push
sub
dec
mov
inc
subl
or
das
test
aad
and
adc
pop
data16
loopne
adc
cmp
jno
or
out
lcall
jno
fdivs
jmp
sub
jb
mov
mov
mov
loop
inc
sti
pop
xchg
gs
pop
cmp
cmp
jl
int
pop
adc
outsl
sti
and
mov
cltd
xchg
stos
or
negb
ljmp
mov
rcpps
dec
push
xor
xchg
adc
and
stos
and
dec
testb
add
stos
adc
pop
cmp
or
pop
aaa
sbb
les
lcall
lea
insl
out
cmp
aas
add
mov
jecxz
outsl
cmp
test
dec
dec
inc
push
out
sub
fs
lods
movsl
push
add
xor
push
mov
ja
loope
mov
mov
aaa
jge
fsubr
sub
fwait
cwtl
test
hlt
xor
mov
xchg
lods
fs
pop
lock
mov
out
repz
mov
daa
out
out
loopne
rcll
lahf
dec
adc
popa
and
dec
jl
loopne
imul
xor
add
pcmpgtb
test
xchg
cmp
dec
movsl
mov
sbbl
mov
sbb
jmp
xchg
negb
daa
mov
dec
pop
js
insb
push
dec
rolb
pop
add
add
inc
lahf
add
or
lock
mul
rol
jne
dec
imul
jno
stc
icebp
inc
test
pusha
mov
js
jo
pop
popa
aad
push
rolb
xchg
fcmovu
lahf
jge
cmp
ja
mov
adc
fistpll
sub
lcall
pusha
xchg
pop
xor
fwait
insb
sbb
jg
jmp
lods
pop
inc
add
dec
in
inc
and
jno
int3
cltd
out
add
insb
or
mov
xor
mov
adc
filds
scas
mov
jo
inc
inc
mov
mov
fnsave
mov
add
fidivs
sub
pop
push
addr16
push
mov
xchg
sub
stos
jl
shrl
mov
fldl
lcall
xor
enter
adc
push
push
stc
cmp
xor
mov
jae
and
outsl
xchg
jb
sbb
notb
inc
mov
sbb
mov
scas
xor
mov
shrb
mull
dec
test
cmovae
and
and
xchg
cmc
add
test
cmpsl
jbe
andl
das
cltd
adc
lods
divl
pop
jnp
or
or
ljmp
or
xchg
or
in
xor
dec
add
xorl
sarb
std
ljmp
mov
js
dec
add
es
pop
out
popa
mov
jne
fwait
repnz
sti
loope
add
call
daa
jne
push
lods
pop
call
movl
fcoml
mov
movsl
jle
out
pop
inc
xor
xchg
sbb
loop
bound
clc
jne
add
iretw
aad
loope
aaa
xor
mov
jle
xchg
cld
bound
jne
and
insl
packuswb
fwait
mov
jmp
clc
sarl
fwait
mov
push
xor
inc
fidivl
mov
scas
dec
xchg
adc
push
mov
lea
mov
push
dec
es
insl
int
or
or
out
adc
aam
mov
shlb
jns
lret
popa
add
or
xchg
aam
xchg
lock
stos
aas
in
jmp
das
or
lret
insb
setns
mov
and
xchg
mov
aaa
xlat
jge
fcomp
mov
pop
sbb
inc
addr16
fldcw
mov
cmp
xchg
sub
mov
js
cmp
add
dec
test
nop
push
subps
pop
enter
xor
sbb
cmp
insl
dec
lcall
adc
popf
xchg
sub
sub
js
push
pop
test
inc
mov
insb
adc
cmova
jne
xor
cmp
ljmp
mov
jbe
stos
jo
and
xchg
adcl
and
pop
inc
mov
push
les
pop
stc
jl
sahf
mov
scas
add
lahf
push
lods
xor
cmp
jae
int3
cs
negl
sbb
daa
fsubl
pop
xor
aam
in
push
add
mov
sub
xchg
in
xor
in
cli
push
pop
inc
jg
push
mov
repz
mov
jnp
cmpl
loop
push
dec
subb
mov
daa
test
cmpsb
jno
mov
xor
mov
ds
int
adc
into
int
mov
push
in
jbe
imul
test
dec
adc
mov
and
xchg
add
dec
stc
addr16
movsb
cmc
mov
inc
in
xor
movb
sub
test
xchg
dec
push
xchg
iret
dec
jmp
lds
sbb
xor
leave
xor
inc
dec
mov
sarl
aas
popf
inc
in
jae
inc
dec
lods
test
and
cli
jnp
mov
ds
cmp
jnp
push
sahf
and
rcrb
cmp
pushf
mov
jbe
mov
enter
out
mov
mov
repz
dec
addb
decl
shrl
push
ja
lock
jns
testl
mov
je
or
inc
idivb
mov
sub
inc
xor
gs
pop
and
adc
test
cli
in
outsl
mov
xchg
fcmovbe
andb
sub
adc
lahf
mov
rcll
aas
loope
cmp
mov
in
call
scas
fadd
pop
and
mov
sbb
pop
fistl
xchg
cmp
or
jecxz
sbb
insl
mov
out
test
push
popf
mov
mov
mov
pop
test
aas
pop
push
imul
pop
aam
imul
in
clc
loope
stos
cmpb
inc
xchg
xor
adc
leave
xchg
cmp
das
into
xchg
inc
outsb
xor
outsb
jb
pop
push
mov
outsb
nop
or
sti
xor
mov
mov
das
xor
stos
mov
int
xor
in
ficoms
add
xchg
and
mov
adc
jp
imul
inc
ja
inc
pop
les
fwait
or
add
test
mov
jne
add
lock
xor
dec
push
xchg
or
jl
pop
bound
das
xchg
sub
inc
scas
jne
bound
lret
test
add
cmp
pop
movsb
lcall
test
sub
fucomip
xor
sub
mov
fdivrl
sbb
xchg
lahf
or
loopne
jg
stos
leave
sbb
lcall
inc
or
mov
pop
pop
push
jns
pop
stc
push
xor
add
cld
and
hlt
in
or
pop
cmpl
insl
xor
in
cmpsl
dec
or
pushf
push
shrb
sub
lods
out
xchg
pop
testb
xlat
fsts
loop
clc
fsubr
sub
fwait
xchg
rorl
mov
adc
pop
push
pop
mov
and
movsb
out
jae
push
sub
rorl
loope
ret
pop
lret
cmp
cmp
xor
or
sbb
sub
ror
data16
dec
lods
iret
fldcw
cmp
dec
pop
sbb
mov
jmp
das
or
bound
push
cmp
push
fwait
xchg
pop
pushf
ljmp
stc
int
test
scas
shlb
lret
dec
push
inc
xor
mov
clc
fs
fiadds
test
int
test
dec
push
into
cs
out
pop
add
loopne
push
or
dec
add
pop
cwtl
test
pop
push
lock
mov
je
fwait
mov
fbld
sub
mov
cld
cld
mov
mov
and
adc
shrb
dec
mov
adcl
and
inc
movsb
sbb
jge
repz
lret
ret
lock
mov
lret
aaa
in
arpl
inc
int
xchg
adc
pop
sbb
pop
fidivl
fstpl
adc
sbb
mov
pop
inc
das
mov
cmpl
bound
mov
or
mov
and
je
jle
inc
dec
xchg
mov
loopne
ret
mov
lods
outsl
cmc
es
out
xlat
jp
jne
sub
mov
xlat
cmp
iret
xchg
sti
cli
scas
sbb
call
rcrb
das
icebp
xor
aas
test
lock
inc
push
mov
lea
dec
cli
retw
call
rcr
push
movsb
mov
or
mov
pop
dec
sbb
mov
or
test
push
fs
or
xor
stos
test
mov
mov
lock
das
adc
cmpsl
faddp
pop
sbb
lcall
dec
xchg
bound
and
push
xor
ret
push
outsl
enter
adc
jne
push
mov
or
dec
inc
mov
and
fsubrs
jmp
or
push
mov
std
push
iret
cmc
xor
pop
xchg
xor
inc
sbbl
mov
lret
jae
imul
insl
notl
scas
push
jg
imul
sti
inc
pop
mov
push
mov
jecxz
iret
jne
data16
cmp
test
cld
sbb
clc
test
and
jecxz
jnp
jle
hlt
sbb
push
xchg
push
add
insb
fcoml
loope
cmp
mov
hlt
pop
es
jge
pop
loopne
out
aaa
cmp
xchg
sub
mov
roll
incb
andl
lcall
lret
leave
js
into
fdivs
test
shll
cmpsl
xchg
xchg
ja
push
dec
std
mov
xor
lret
pop
cmp
pop
sub
dec
insl
xchg
subb
mov
sbb
out
jg
cmp
mov
xor
adc
and
sbb
pop
push
ss
dec
mov
push
inc
cwtl
dec
test
enter
mov
pushf
bound
cmp
out
repnz
ds
mov
gs
insb
cli
jno
inc
in
out
cmpsl
sbb
sbbl
and
cs
popf
push
stos
mov
orb
in
insb
adc
sahf
cmpsl
outsb
jl
jp
pop
fidivs
repnz
leave
int3
jl
daa
daa
mov
sti
and
aas
decl
xor
or
sbb
adc
push
insb
stos
mov
sbb
sbb
mov
push
fidivrs
cmp
es
inc
xor
push
mov
sub
sub
fmul
adc
push
ds
cs
fimull
enter
or
xchg
xchg
repz
fidivrl
xor
xchg
sub
data16
and
jmp
cld
hlt
push
fildl
push
adc
outsl
cmpsl
je
lods
int
dec
std
cmp
dec
scas
orb
gs
movsl
pop
lods
arpl
loope
enter
sub
mov
ret
xchg
mov
test
push
movsl
xor
filds
mov
ja
sub
pushf
push
cli
mov
mov
pop
ret
push
mov
pop
imul
bound
dec
pop
push
into
lahf
add
sbb
jmp
inc
fcoml
xchg
icebp
xchg
ret
jbe
push
pop
imul
inc
lret
push
pusha
in
sub
lahf
push
fs
jno
out
addr16
mov
cmp
repnz
and
shlb
pop
mov
cmc
adc
mov
jmp
cld
cmp
in
outsl
inc
stc
cli
ffree
pop
call
ds
popf
pop
xchg
hlt
bound
mov
jno
fistpl
xor
push
mov
ds
and
negb
mov
lods
loop
push
fs
adc
mov
popf
sbb
push
xchg
mov
xchg
jmp
xor
sbb
fdivs
jecxz
ds
lock
xchg
stc
sbb
js
push
push
xchg
or
shl
test
jmp
xor
jne
pop
nop
cmp
rorb
std
lret
adc
das
outsl
dec
and
repz
pusha
nop
push
cltd
jb
pop
xchg
add
addr16
test
jns
mov
xorb
pop
mov
repnz
in
pushf
adc
xlat
add
lods
inc
ja
mov
mov
lret
xor
iret
xchg
jae
daa
pop
mov
push
clc
sub
jmp
fadds
mov
jmp
in
cwtl
xchg
sbb
push
pop
fnsave
popf
mov
xchg
test
jbe
pop
sub
or
adc
out
adc
and
mov
push
mov
shlb
sbb
inc
std
add
jno
lret
mov
ror
push
mov
aam
jo
pop
mov
aas
jle
lea
cmp
data16
or
out
cmp
sub
mov
fs
push
mov
and
push
jl
iret
inc
scas
hlt
dec
mov
test
nop
cmp
in
push
adc
and
sbb
out
cmp
mov
jb
mov
add
rcl
aam
cmpsl
mov
rcll
sbb
xlat
sahf
out
and
cmp
inc
xor
sbb
fs
ret
cmp
jecxz
data16
pop
push
jmp
fidivl
lcall
and
gs
mov
jecxz
cmp
cmp
cmp
inc
imul
or
cmpb
outsl
push
xchg
loope
jg
hlt
les
mov
in
insb
jo
inc
mov
stos
mov
js
and
insl
dec
push
movsb
bound
rorl
popf
adc
jbe
pop
pop
adc
and
add
push
push
push
ficoms
pop
sahf
ds
adc
out
push
mov
dec
xor
jmp
dec
test
sub
ret
test
mov
popf
int
jge
pop
cltd
enter
sub
fcmovnbe
jnp
sti
inc
fidivl
fmuls
movsl
cmp
test
pop
adc
adc
jb
push
dec
ljmp
cs
sub
jg
and
lret
or
mul
aam
or
sbb
push
je
xchg
loop
xchg
test
cmp
push
sub
loope
sti
mov
pop
orb
iret
cmpsl
mov
xor
cmp
sub
out
mov
and
or
loopne
fimuls
inc
loop
test
int3
jnp
clc
jnp
push
fadd
addl
das
lods
sub
loopne
aaa
leave
pop
lret
stc
push
fidivl
or
int3
xor
iret
es
les
xchg
jbe
pop
test
jle
mov
xor
je
mov
mov
int3
inc
xchg
fistpl
cs
sbb
adc
cmpsl
pop
mov
aas
inc
je
push
push
mov
insb
lret
push
imulb
cmp
mov
jge
sbb
dec
or
call
mov
ja
jmp
mov
cmp
adc
dec
inc
mov
repnz
inc
pop
test
mov
sub
pop
aam
fsubs
push
gs
pop
jge
int3
outsl
cmp
cmp
and
pause
movsb
stos
je
fnsave
mov
mov
dec
cmp
in
xchg
inc
dec
dec
lock
inc
shll
push
cltd
fcomps
cmp
push
movsb
push
test
daa
or
inc
rclb
fxch
sub
std
jnp
lret
aad
jo
cli
and
ja
test
adc
int3
int
and
or
cltd
mov
mov
pop
mov
jnp
div
push
lods
adc
inc
pop
dec
repnz
fsts
adc
fisubrs
lods
push
mov
cs
inc
hlt
enter
xchg
fstpl
adc
dec
sbb
or
pop
in
popa
push
outsl
into
sub
push
sub
dec
cmp
incb
ja
es
jae
cmp
fnstsw
mov
mov
addr16
testl
add
pop
cmpb
pop
rol
xchg
hlt
decl
and
mov
jecxz
popa
and
pusha
in
or
pop
imul
xchg
pop
sub
leave
pop
in
xor
pop
jo
jno
xchg
lods
cmp
test
lds
notb
sbb
mov
scas
and
pusha
idivb
ja
inc
xor
xchg
inc
stos
mov
cmp
mov
loope
mov
loope
je
ja
pushf
hlt
lea
fs
out
dec
pop
cwtl
or
movsl
ljmp
adc
lods
pop
outsb
jbe
mov
push
cld
int3
ss
cmp
push
fisttpll
xor
mov
adc
jecxz
insb
mov
adc
shrb
jo
mov
aam
stc
sub
push
movl
call
outsb
fwait
push
dec
ljmp
xchg
in
and
and
pop
cmpsl
leave
test
or
imul
in
pop
add
or
out
adc
pop
sbb
js
movsb
int
fwait
inc
test
and
loop
jp
pop
jge
sub
jmp
out
fstl
dec
ret
push
std
scas
xchg
cwtl
jmp
sbb
xor
push
dec
inc
data16
flds
push
cmp
lret
or
inc
std
sub
in
or
lds
pop
ljmp
or
lea
cli
cmp
lods
dec
loop
lret
add
jge
mov
lods
and
sub
cltd
dec
outsb
pavgw
aam
mov
sbb
cmp
or
mov
in
leave
sbb
mov
aaa
sbb
cmp
scas
xor
test
adc
mov
mov
jp
int
sub
jmp
adc
push
ret
inc
lret
mov
mov
xor
lret
int
push
rcr
cwtl
sbb
popf
andb
push
lods
sbb
adc
inc
push
int3
pop
adc
stos
cltd
insl
sub
shl
mov
aas
out
pushf
jg
dec
sub
adc
imul
cld
out
mov
imulb
xor
clc
sbbl
in
insl
movsb
sub
adc
push
push
lret
aad
or
in
mov
out
enter
mov
es
xorb
jnp
jge
out
pop
imulb
push
and
pop
pop
ret
das
shl
test
imul
inc
movd
pop
sbb
jae
nop
jne
push
rcl
sbb
shlb
ljmp
mov
push
push
inc
jg
mov
fists
pushf
jnp
or
arpl
mov
push
lods
jl
mov
mov
aam
int
aas
gs
cmp
adc
xor
roll
in
data16
cs
xor
shll
and
stos
pop
and
mov
inc
iret
adc
loop
incl
inc
out
push
mov
xchg
imul
fsubrl
imul
fwait
cld
mov
cmp
stos
adc
mov
pop
aas
dec
fidivs
dec
hlt
dec
or
xchg
sub
repz
lret
inc
mov
push
mov
push
fstp
loop
jle
outsb
cmpsl
sbb
cmp
mov
repnz
dec
mov
orl
push
xlat
inc
fnstcw
fimull
sbb
loope
popa
xchg
cmpb
sub
jno
mov
cltd
lcall
xchg
pop
shlb
xor
cltd
jne
outsb
scas
ret
daa
imul
int
sbb
add
push
or
jl
aas
pop
cmp
push
fbld
bnd
dec
inc
inc
mov
cli
add
ljmp
pop
in
pop
push
out
addb
sti
outsb
flds
sbb
mov
pop
inc
sarl
dec
mov
mov
mov
lea
jecxz
out
sbbb
ja
adc
sub
mov
push
sbb
mov
sub
pop
ret
xchg
test
sub
in
jno
sbb
mov
cltd
jae
cmpsl
mov
add
and
lret
stos
xchg
sub
adc
inc
add
xchg
mov
pop
lcall
cwtl
jbe
gs
jge
push
es
leave
aaa
xchg
packuswb
sub
and
jmp
cmpsb
leave
mov
jb
insb
clc
pop
loop
sti
pop
movl
jp
movsl
adc
mov
pop
mov
mulb
xor
jae
xchg
adc
loop
lcall
sub
adc
pop
movsb
sbb
jo
or
add
jl
adc
lret
psubb
jnp
in
pop
push
rcrl
xchg
and
loop
inc
pusha
call
test
in
or
xchg
xchg
leave
out
jo
jmp
jle
sbb
lret
jns
push
xor
arpl
pusha
xchg
out
stos
mov
push
mov
lret
cmc
call
fsubrp
sub
into
fldcw
fwait
shl
adcb
or
add
loopne
stos
loope
mov
mov
sbb
xchg
into
mov
inc
sbb
push
cld
pop
dec
pop
fnstenv
test
jge
fcoms
shl
mov
jnp
xor
pop
cltd
inc
adc
jle
pop
mov
fnstcw
xchg
sub
mov
je
rolb
loopne
sahf
icebp
test
push
ss
hlt
xor
mov
test
push
sbb
popa
xchg
pushf
xor
push
bnd
fcoms
fsubrl
push
filds
mov
in
mov
lcall
add
in
imul
xor
pop
ljmp
mov
jmp
jl
das
cld
jns
test
push
and
lods
mov
in
aad
ss
nop
mov
and
pop
leave
gs
test
add
repz
fstps
aaa
xchg
int
mov
push
fs
dec
push
pop
in
fadd
add
hlt
adc
les
sbb
mov
jno
addb
sbb
clc
add
push
mov
mov
push
pop
imul
mov
push
int
dec
and
std
mov
out
pop
push
and
dec
adc
inc
jno
sbb
push
pop
adc
fnstcw
inc
out
lea
inc
lret
cmp
or
inc
out
in
lret
outsl
mov
lahf
jo
int
adc
cmpl
pop
push
jne
ret
stc
jmp
inc
inc
or
decb
mov
cmpb
xchg
addb
mov
add
cmpsl
cmc
sbb
popf
sahf
xor
cmpsb
adc
enter
xchg
stos
outsb
inc
das
and
adc
dec
jae
cli
xchg
fldl
dec
xchg
es
jg
mov
dec
cmp
mov
int
push
stc
in
iret
add
stos
xor
mov
pushf
ficoml
add
pusha
mov
andl
rol
es
or
inc
iret
repnz
fcompl
xor
xchg
xor
jmp
data16
jne
sbb
jb
ret
inc
sbb
mov
cmp
push
cmpb
cmpsl
incb
pop
lahf
loopne
and
cmp
jne
jae,pt
sbb
dec
pushf
xchg
test
shr
mov
push
leave
imul
jne
add
pop
mov
jns
and
pop
in
ret
decb
mov
push
lods
and
sar
sub
or
dec
push
jne
sti
xor
fisubs
test
xlat
andb
mov
stos
out
into
in
push
xchg
mov
popf
xor
jl
js
add
mov
sti
not
fcoml
lcall
fs
add
sbb
test
jbe
fwait
adc
sub
outsb
add
sbb
mov
adc
mov
and
mov
adc
xor
xchg
rorl
mov
and
dec
test
cmp
scas
add
daa
stc
aad
shlb
jle
dec
int
int3
cmp
shrl
enter
adc
add
push
gs
add
sub
lret
cmp
and
mov
or
mov
shlb
pop
xchg
out
lret
mov
in
loop
pop
push
cli
xor
sbb
pop
cmpsb
xchg
or
push
push
adc
push
or
push
das
jae
ljmp
jmp
ljmp
xchg
cmp
and
inc
es
in
xchg
push
inc
popf
addr16
dec
inc
movsb
movsb
das
and
ret
sti
push
mov
fdivrl
push
mov
add
dec
mov
aaa
mov
add
movsb
dec
stos
loopne
repnz
adc
cwtl
pop
adc
jnp
pusha
cmp
push
out
rolb
outsl
or
in
or
aas
dec
ljmp
sar
or
jmp
fcompl
pop
mov
rcrb
call
push
enter
and
lea
leave
adc
fldl
sbb
xchg
xor
call
jecxz
or
pop
xchg
cmpsl
testb
aaa
cmp
out
sbb
sub
xor
push
xchg
pop
mov
jge
fidivrs
mov
or
in
inc
mov
add
lock
mov
lea
adcl
jl
mov
xor
mov
addr16
bound
push
mov
loop
mov
bnd
pop
add
or
inc
sarl
dec
xor
arpl
fcmovnu
shrb
in
ja
icebp
pop
divb
rorb
fs
push
mov
push
inc
inc
add
xor
hlt
lds
out
inc
mov
stos
stc
pop
push
add
repz
pushf
adc
test
or
enter
add
add
ljmp
jno
lods
jp
or
dec
fisttpll
sbb
leave
cmc
fsubs
insl
sbb
loope
int
outsl
cmp
cmp
sub
add
xor
imul
mov
and
pop
pop
xchg
les
imul
ret
jge
sub
inc
dec
mov
outsl
mov
mov
movsl
lods
lods
fs
xchg
jp
leave
shlb
pop
es
mov
pusha
test
mov
ss
add
lcall
dec
cwtl
inc
shl
inc
cltd
xchg
lds
lods
xor
shlb
mov
int3
jne,pt
sar
and
xlat
call
int3
aad
jnp
les
aas
pop
pusha
push
xchg
mov
repz
push
iret
outsb
call
movsb
push
seto
xor
sub
or
ret
loope
rol
push
gs
ljmp
dec
divb
xchg
test
push
inc
pushf
inc
mov
js
call
ret
fwait
pop
or
dec
or
inc
leave
pop
clc
cmp
cmpsl
push
int3
sbb
leave
movsl
movl
data16
bsr
cmpsb
cmpsl
iret
add
add
adc
imul
mov
out
sbb
rol
iret
shrl
and
pop
mov
push
insl
cmpsl
mov
cmp
ret
andb
popa
mov
sub
mov
mov
scas
subl
jg
sbb
call
test
push
clc
pop
xor
jg
sahf
push
xchg
in
inc
pop
in
xchg
mov
xor
scas
cwtl
add
push
jge
xor
xchg
pop
mov
adc
mov
js
cmp
xor
mov
shl
mov
subl
push
pop
sbb
xchg
lods
lock
adc
movsl
loope
pop
ret
in
xchg
mov
jne
pop
movaps
inc
dec
add
pop
rcr
flds
xchg
daa
daa
jbe
adc
jmp
dec
push
mov
push
outsb
gs
hlt
jmp
jge
pop
jg
aaa
into
mov
inc
push
loope
jb
mov
sub
ja
push
seto
mov
lret
xchg
xchg
ss
fwait
pop
jp
cmp
pop
inc
mov
adc
jecxz,pn
or
mov
cld
cmp
aam
dec
pop
jmp
jb
enter
mov
sar
push
sbb
mov
lret
inc
adc
jne
push
test
adc
loopne
nop
mov
and
jecxz
cmpb
xchg
xor
daa
out
jmp
rolb
pop
movsb
xchg
scas
add
xchg
imul
mov
ja
cmpsb
cmpsl
popa
in
mov
or
sub
lcall
leave
xor
and
or
into
cmc
and
lahf
adc
or
pop
jb
pusha
xchg
sbb
inc
push
aas
jl
push
pop
test
inc
pop
jmp
xchg
push
xchg
or
dec
cli
call
aad
mov
push
inc
jnp
add
hlt
mull
xlat
cmp
jbe
adc
mov
add
mov
cmpsl
int3
ljmpw
adc
or
push
sub
and
add
lret
or
mov
sub
pop
dec
add
dec
jb
sub
and
insl
icebp
or
ds
bound
gs
gs
out
shlb
or
mov
adc
mov
data16
mov
or
decl
xor
mov
aam
notl
test
dec
incb
pop
pop
arpl
jnp
pushf
xchg
xchg
rcr
push
leave
mov
mov
lcall
popf
mov
cmpsl
cmc
or
les
in
outsl
call
push
dec
cmp
jo
dec
push
push
cli
rorb
out
dec
int
or
push
xor
cmpsl
jl
push
or
cmp
or
pop
inc
iret
xchg
mov
cs
mov
and
jbe
push
daa
xlat
and
sub
pusha
mov
iret
sbb
cmpsl
cmp
mov
sub
imul
inc
pushf
ja
in
push
lcall
pop
lock
bound
repz
repnz
xchg
add
push
mov
movsl
ljmp
xchg
pop
mov
mov
push
jmp
push
push
mov
ret
mov
jb
sbb
adc
std
out
or
lcall
dec
push
arpl
jb
add
pop
xor
add
lods
es
into
shll
lcall
pop
jg
jo
xchg
cmp
adc
and
add
inc
pop
ror
cltd
aaa
pop
dec
dec
add
imul
dec
js
aaa
das
aas
fwait
jecxz
mov
sbb
scas
in
and
and
fstpt
in
scas
mov
int3
test
cmp
dec
aas
popf
adc
fsts
dec
pop
enter
inc
leave
aas
push
in
jns
cmp
sbb
inc
add
out
mov
je
push
aas
lods
cmp
aaa
xchg
pop
mov
mov
sbb
and
mov
xor
xor
jbe
pop
mov
mov
pop
movsl
lds
jmp
inc
push
ret
aam
icebp
add
dec
fcoml
jmp
scas
push
push
cmpsb
jne
mov
or
cmpsl
mov
loope
cli
lods
pop
add
das
aaa
aam
ja
imul
bound
xlat
xchg
mov
or
mov
clc
popf
fistpll
lahf
cmp
int3
add
scas
xchg
push
cltd
push
xor
test
jno
hlt
inc
lds
mov
addr16
xchg
mov
and
jle
xor
int3
icebp
xor
inc
mov
jnp
add
fisubrl
xchg
test
and
in
xchg
add
andb
and
or
push
push
and
xchg
xchg
sahf
and
fiaddl
push
cmpsb
mov
push
shll
or
jno
arpl
mov
std
nop
rcr
mov
add
pop
add
pop
sub
add
dec
cli
stos
xor
inc
push
pop
xlat
add
arpl
jmp
xchg
inc
push
cmpsl
mov
jecxz
jo
jne
push
push
mov
cmp
in
add
mov
scas
xor
dec
inc
dec
scas
and
outsl
outsl
imul
jecxz
and
movsl
call
mov
imul
push
dec
fsubr
ljmp
sbb
push
nop
fldcw
sub
mov
test
cmp
cmpb
loope
jecxz
sub
pop
dec
and
cmpsl
sub
add
ja
stc
and
sub
ja
cmp
and
shrl
nop
xlat
pop
icebp
fiaddl
lret
idivl
pusha
movsb
in
lahf
lods
repz
mov
xchg
lock
shll
rcrb
inc
push
stos
pop
xor
dec
sbb
jge
or
sarb
stos
ret
fwait
jl
jge
scas
dec
xor
or
xchg
xor
jle
sub
mov
repnz
cs
loop
lea
popa
mov
jae
jo
loopne
xchg
notl
xor
hlt
sbb
fiadds
lahf
dec
lock
pop
xchg
pop
xor
fs
jl
rorl
ret
aas
xchg
js
add
stos
jl
push
xchg
lret
rorb
stos
and
cmpsb
sub
sbb
cwtl
in
push
lcall
xlat
cmc
dec
test
pop
and
mov
jecxz
pushf
pop
inc
cwtl
dec
push
inc
mov
fstl
cmpsl
pop
jecxz
adc
mov
fidivrl
movsl
leave
btc
mov
cmp
xchg
mov
popa
cmp
dec
aas
xchg
pop
dec
adc
mov
cmp
cmp
xor
push
pop
aad
xchg
rcr
imul
out
jmp
cmpsl
jb
jp
mov
pushf
xchg
call
xor
js
cmpsb
push
mov
insb
jmp
in
inc
jb
push
shlb
sub
les
cmpsl
or
push
xchg
xchg
adc
lea
cmpsb
insb
mov
xchg
mov
arpl
test
fdivs
pop
repz
cmp
cmp
gs
xor
test
cmpsb
push
mov
rcrl
out
dec
or
insl
mov
aam
cmc
test
push
xor
cltd
test
xchg
jnp
cmp
bound
xor
les
pop
stos
pop
test
jmp
and
dec
xchg
jo
push
mov
int3
sub
loop
sbb
jae
xchg
jbe
cmp
arpl
fcmovnb
mov
xor
cmp
arpl
adcb
inc
add
rorl
push
mov
ret
pop
cltd
jae
xor
enter
popa
sarb
cs
pop
pop
int3
pop
mov
repnz
mov
xchg
movsb
add
cltd
fldt
mov
out
jae
std
pushf
dec
or
divb
les
call
mov
mov
mov
sub
push
in
fwait
repz
sub
and
mov
xchg
std
sbb
fsubr
fidivs
dec
push
xchg
test
ret
cs
push
mov
sub
sbb
or
inc
mov
popa
rorl
xchg
sub
aaa
insb
gs
sbb
ds
fwait
ja
pop
inc
push
mov
jmp
mov
shll
outsb
or
push
into
push
dec
mov
test
jmp
in
pop
pop
add
fildll
mov
jbe
jg
mov
jecxz
and
jae
mov
push
test
sub
fwait
aas
sti
pop
mov
cltd
cmp
pushf
ficomps
testl
cmp
les
out
mov
mov
jne
inc
sbb
fs
sub
subb
aam
cmp
xchg
push
xorb
stos
push
jae
ficoms
push
pop
stc
jge
cs
in
push
jns
push
idivl
or
inc
movsb
sub
shrb
leave
cmpsb
cmc
push
and
lret
sbb
push
and
sahf
xor
es
dec
mov
jne
pop
cwtl
cmpsb
ds
add
in
ljmp
push
dec
inc
testb
mov
pop
cwtl
add
fcomp
adc
pusha
cmpsb
cmp
inc
loope
xchg
pop
cmp
pop
adc
sbb
mov
jno
xor
xor
dec
adc
adc
xchg
ret
push
jae
jecxz
popa
sbb
sbb
outsl
negb
cmpsl
cmp
or
add
lods
aam
dec
enter
pop
sahf
mov
jne
dec
jb
rdpmc
sbb
sahf
ds
pop
jle
mov
jecxz
fstps
aaa
sahf
jbe
popa
stc
sbb
dec
fs
xor
xchg
and
cltd
enter
inc
jle
sbb
dec
daa
sub
clc
xorb
lcall
out
sbb
or
sahf
inc
inc
test
and
into
mov
and
roll
or
movsb
icebp
fsts
cld
adcb
sub
lret
test
mov
push
mov
mov
int3
jae
mov
push
lret
adc
mov
dec
rcll
or
mov
cmpsl
mov
hlt
and
sub
lcall
shlb
outsl
lcall
mov
xchg
hlt
sbb
jle
ret
je
cs
hlt
cmc
jle
push
stos
mov
xor
mov
mov
sbb
push
sbb
pop
mov
and
pextrw
mov
or
inc
stos
or
push
xchg
sub
flds
js
sbb
orb
fscale
mov
sbb
push
inc
jb
push
xor
adc
mov
pop
push
ja
push
in
sti
adc
or
push
add
popf
cmc
movsb
push
push
ds
shlb
pop
mov
lret
out
fdivrl
push
xchg
aam
in
lods
dec
push
jo
push
aam
outsb
dec
xor
mov
or
and
in
pop
add
add
rorb
ftst
add
popa
sbb
int3
jmp
ds
lcall
xchg
pop
in
add
in
dec
mov
insl
imul
dec
xchg
and
in
js
fwait
push
push
mov
js
jmp
jmp
and
mov
stos
xchg
bound
leave
int
imul
pop
xchg
jge
jg
daa
mov
mov
mov
outsl
divl
gs
pop
and
scas
sbb
popa
push
aas
push
sarb
sahf
mov
mov
mov
xor
and
push
iret
jp
dec
pusha
out
bound
ret
out
cmpsl
push
int
iret
mov
aas
shll
push
cmpsb
or
pop
or
add
xor
cld
jno
insl
fcmove
inc
imul
and
push
sub
dec
xor
pop
je
mov
nop
out
dec
add
dec
mov
or
add
jnp
adc
sbb
and
dec
pushf
push
rol
sbb
push
xor
xorl
es
add
imul
inc
adc
xlat
mov
adc
mov
sbb
call
mov
ret
cmpsb
jns
out
aas
call
imul
into
push
int3
cmp
adc
add
sub
out
xchg
lahf
mov
psubb
mov
jmp
xorb
xchg
sbb
cmp
and
sahf
outsl
push
xor
andl
dec
movsl
jno
xchg
lods
mov
cltd
mov
aad
pushf
mov
pop
daa
push
lcall
mov
ret
xchg
stc
push
push
rcl
sahf
sub
scas
lds
out
mov
sub
addr16
mov
call
int3
aam
ret
push
xchg
or
cmc
gs
lahf
push
das
call
inc
test
push
sub
popa
test
fs
fisttpl
mov
popf
std
roll
mov
aaa
call
mov
mov
out
je
lcall
ret
xchg
cmp
sbb
mov
and
pop
lret
gs
ret
jle
dec
mov
test
xor
fwait
test
push
je
mov
inc
pusha
sub
mov
outsl
dec
mov
inc
sbb
dec
adc
adc
nop
lods
daa
jmp
daa
hlt
fdivl
mov
loop
sbb
sarl
xchg
push
sarl
gs
xor
bnd
lods
leave
lcall
aaa
aam
mov
pop
pop
cmp
shrl
jp
sbb
mov
push
pop
push
lahf
push
inc
mov
icebp
rcrl
add
and
std
jne
mov
lods
dec
mov
xor
pop
add
mov
ret
out
sub
lock
shll
shrb
mov
pop
popa
hlt
or
aaa
jp
loop
mov
and
in
lret
jmp
add
xorb
jg
fimuls
or
sub
aas
and
int3
mov
xorb
xchg
sbb
ret
adc
and
mov
sub
movsb
mov
movsb
add
mov
xchg
ss
shrb
mov
cs
dec
pop
shll
add
mov
std
push
ss
sahf
cmp
fsubl
stc
fldenv
sti
aaa
add
je
lds
lret
pop
mov
test
adc
mov
sbb
mov
push
adc
mov
imul
movsb
xchg
jno
push
ds
mov
ret
cmp
pop
movsb
fbld
test
and
lret
mov
add
insl
test
int3
xchg
push
mov
xlat
aad
pop
push
mov
fwait
dec
jno
xchg
pop
jne
std
xchg
rorb
jg
dec
fcmovnb
adc
xor
out
stos
cmp
insb
int3
xor
aaa
xchg
mov
cld
es
cwtl
cmp
mov
movsb
popf
call
mov
ficomps
loopne
add
adc
out
imul
fisubl
mov
lret
enter
xorl
repnz
mov
adc
mov
jnp
pop
cmp
out
jle
and
mov
and
adc
ljmp
mov
pop
mov
imul
or
push
xchg
call
sub
pushf
sti
jle
lahf
orl
lea
xchg
in
out
cmp
mov
mov
and
lret
xor
nop
out
pop
in
xor
movsl
xor
and
sti
push
add
sar
imul
pop
xchg
les
je
pop
sub
clc
xor
inc
sub
addr16
sub
scas
inc
inc
mov
fwait
xchg
jle
cmp
bound
jge
bound
xor
in
add
in
enter
mov
sarl
stc
dec
jns
jmp
nop
pop
mov
inc
mov
test
insl
clc
clc
cmp
mov
mov
mov
mov
bound
jbe
cmp
jp
es
and
cmp
sub
outsl
scas
or
repz
xchg
ficoml
inc
jecxz
sub
pop
scas
dec
fadds
adc
ja
rorb
std
push
adc
fs
popf
jg
xor
xor
ja
out
rclb
mov
add
loopne
mov
aaa
setp
ljmp
mov
xchg
lods
into
jp
cmp
into
addl
or
fcomi
gs
dec
daa
fs
cmpl
push
mov
shr
in
jno
test
pop
lret
dec
xchg
inc
xor
push
test
dec
scas
aas
fs
pop
leave
mov
mov
mov
int
xchg
jno
mov
push
mov
fwait
sti
mov
push
int3
xchg
xor
push
dec
mov
out
mov
popf
inc
push
aas
dec
loopne
aam
jno
leave
test
push
fnstsw
push
shlb
ljmp
mov
ret
fsubs
add
fimull
cwtl
fisttpll
sub
pop
cmp
dec
jle
in
rorl
mov
add
andb
repz
lea
cwtl
aas
pop
mov
ret
pop
fistpll
jl
jle
mov
imul
cmp
insb
sub
jmp
mov
push
or
fidivs
xchg
inc
or
xor
inc
sbbb
pop
les
add
ljmp
mov
jl
xor
inc
fucomp
fstps
cld
mov
cmc
push
rcll
push
cmpsl
shl
pushf
or
sbb
mov
lcall
lret
mov
jnp
mov
adcb
or
and
inc
inc
nop
jno
sub
arpl
scas
pop
test
mov
cmp
mov
pop
hlt
lcall
push
inc
ret
push
idivl
pop
lret
stos
movsl
jo
xchg
or
pop
jge
je
ja
fs
xchg
pop
jo
imul
stos
mov
lods
cmp
clc
inc
xlat
add
outsb
outsl
loope
sahf
xor
imul
mov
mov
jae
test
in
jg
inc
push
in
inc
xor
sbb
pop
lret
ljmp
add
adc
dec
lret
rolb
stos
adc
mov
sahf
shll
and
into
adc
imul
inc
lret
push
mov
pop
sbb
imul
jns
push
adc
pop
int
inc
shl
push
xlat
mov
jecxz
dec
dec
mov
sub
dec
cmp
and
imul
or
add
inc
adc
sub
push
jmp
dec
hlt
xchg
iret
fstl
mov
std
sti
add
and
xchg
out
je
mov
and
xchg
ss
lods
and
cmp
and
negl
push
sbbb
inc
or
mov
fstpl
repnz
sahf
xchg
xchg
loop
mov
adc
jb
jbe
add
push
adc
sub
push
xor
cmp
xchg
call
cld
mov
mov
outsb
andnps
jp
push
movb
loopne
lds
ret
aad
jmp
pop
push
cld
mov
clc
int
jecxz
out
aas
lret
pusha
adc
fists
add
and
jmp
cmc
dec
push
mov
jne
xor
dec
and
dec
pop
push
dec
rolb
push
movsb
sbb
cmp
mov
aas
arpl
imul
pop
jno
cmp
sub
push
jmp
cmpsl
fdivs
lds
mov
out
xor
aas
sbb
dec
lods
inc
or
sub
inc
xor
sarb
xchg
adc
sub
loop
mov
imul
in
orl
ja
out
or
loope
lea
lret
dec
subb
out
std
mov
pop
rcll
jb
pop
and
push
ds
lods
mov
inc
mov
lcall
jbe
sti
out
int
xchg
add
std
setne
cmp
cmp
fdivrp
loope
adc
xchg
and
icebp
ljmp
sub
pushf
addr16
pop
repz
jbe
stos
dec
cli
mov
pop
ja
into
or
pop
cmpsb
rorl
ss
jo
inc
dec
sbb
and
sti
dec
cmpsb
mov
ffree
mov
aam
cli
scas
fwait
adc
adc
int3
stos
in
orb
jb
fcomi
jmp
jmp
stos
mov
sbb
repnz
pop
movb
stc
sub
xchg
insb
into
xor
decb
mov
sub
leave
mov
sbb
sub
inc
cmp
ds
cmp
jg
iret
xchg
jmp
faddl
imul
pop
or
popf
jb
fstpt
sbb
lods
inc
add
fisttps
jae
cmp
shl
sbb
and
push
adc
add
aaa
or
mov
xchg
insl
scas
nop
subl
pop
aas
xlat
mov
not
aas
shlb
push
test
cs
pop
fcompp
lret
jnp
xchg
fwait
xor
pop
sub
daa
ja
aas
adc
pop
pop
addr16
mov
fisttpl
push
out
mov
sub
sbb
movsb
push
shrb
loop
das
pop
lcall
rcrb
out
vpshufhw
test
or
cltd
dec
enter
js
outsb
xlat
std
out
add
in
xchg
ret
inc
add
cmc
iret
cli
push
stos
jo
clc
sub
stc
cmc
xorl
les
inc
mov
jae
mov
and
inc
loop
lahf
lock
or
sub
inc
mov
or
iretw
cmpsl
jle
dec
movsl
pushf
xor
aas
jl
dec
cmpb
mov
into
mov
cltd
dec
and
daa
ficompl
pop
imul
jmp
pop
and
mov
sbb
mov
insb
repz
sbb
movsb
dec
movsb
xchg
inc
arpl
adc
sar
mov
ret
jge
in
mov
insl
or
cli
lea
push
or
adc
inc
fstpt
push
sti
xchg
movsb
mov
and
pop
jo
pop
push
inc
lods
les
jbe
sarl
sar
push
mov
xchg
sub
cltd
stc
loop
test
ss
outsb
push
leave
lret
push
in
xor
sub
adc
sbb
adc
roll
xchg
cmp
inc
das
and
cli
lret
jae
sbb
lcall
sahf
jmp
adc
out
pop
call
loopne
out
flds
iret
insb
inc
adc
xor
dec
pop
flds
adc
push
icebp
jp
mov
lcall
sbb
jne
lock
ds
test
out
dec
fwait
testb
gs
pop
jg
mov
mov
shlb
xlat
adc
inc
mov
popf
sbb
adc
divb
stos
popa
mov
fldenv
pop
dec
pop
stc
clc
push
lods
or
gs
sahf
mov
xor
mov
or
mov
pop
adc
or
jecxz
test
xchg
inc
push
bswap
cmpb
add
bound
repz
out
jle
dec
dec
jmp
adc
mov
gs
lret
repz
rcll
sub
jg
scas
aad
pop
je
nop
dec
jmp
sub
xor
sub
imul
cmp
or
jmp
ss
inc
mov
inc
push
jo
push
in
cs
xlat
jne
fwait
loop
rclb
sub
fnstenv
test
pusha
xor
xor
je
mov
mov
push
push
push
jg
add
movsl
mov
out
or
popf
inc
xor
mov
popf
cmp
imul
dec
cmp
outsw
push
cwtl
push
mov
sbb
aaa
push
push
je
xor
inc
add
movsl
or
fmulp
icebp
addr16
jmp
fildll
sbb
cmpsl
stos
dec
pop
jae
xchg
inc
or
mov
stos
inc
popa
pop
ret
inc
sub
rclb
les
dec
cld
insb
cmp
sbb
dec
sti
addr16
andl
add
add
push
xchg
jl
xchg
ljmp
lret
mov
jg
cmp
rorl
push
push
insb
js
leave
mov
push
ret
mulb
cmp
insb
cli
test
fistpl
push
lock
mov
and
pop
xor
gs
mov
insl
popf
movsb
cmp
mov
cmp
xor
js
or
add
pop
out
out
mov
subb
and
push
inc
in
jecxz
out
mov
or
stos
adcb
aas
lods
aam
push
lret
fldl
sbb
out
outsl
or
dec
test
xor
cld
notb
shll
outsl
lahf
mov
sti
stc
leave
dec
cmp
loop
fisttpll
popf
in
imul
ja
aad
sub
cmc
adc
sub
jmp
rol
out
mov
mov
test
sbb
in
jns
jns
shlb
push
add
insl
loope
incl
lret
cmpsb
mov
adc
bound
mov
sbb
pop
imul
and
pop
push
mov
dec
pop
adc
pop
adc
jl
std
sahf
ss
ret
lods
in
jo
es
sbb
xchg
adc
cmp
mov
push
ret
cmp
stc
leave
xchg
in
dec
ds
adc
mov
push
rclb
sbb
jle
push
push
bswap
mov
cs
xor
or
dec
insb
jnp
adc
fs
mov
rol
or
hlt
adc
rcrb
popa
imul
xchg
scas
sbb
cmpb
dec
sbb
xor
fwait
lar
xchg
fucomi
daa
js
cmp
jg
lock
push
add
add
adc
scas
jle
test
mov
push
out
pusha
inc
mov
xchg
xchg
push
mov
dec
and
repnz
nop
shrl
call
cmp
imul
mov
push
psllw
test
outsl
ja
data16
mov
shll
lods
pop
or
or
push
xchg
pop
ja
xchg
adc
rcr
inc
sbb
pop
jg
repz
leave
xor
cmpb
adcl
enter
mov
add
or
cs
lret
mov
cmp
or
aas
fbld
bound
push
cmp
xor
mov
mov
cmp
push
incl
daa
add
adcl
mov
adc
ja
lret
xlat
leave
shrb
in
push
dec
test
cmp
xchg
icebp
clc
loope
xor
fildl
ds
aaa
dec
push
mov
enter
cmp
divl
int
adc
cmp
fidivrl
cmp
push
sbb
in
enter
sbb
push
loope
into
mov
push
gs
cmpsb
jo
inc
out
dec
dec
xchg
je
adc
popf
fdiv
pushf
mov
mov
add
pop
dec
popa
add
jle
mov
adc
ljmp
or
pop
cmpsl
mov
push
mov
mov
xchg
pop
fisubs
int3
adc
push
cltd
and
stc
xor
repz
xor
push
dec
stc
mov
aad
and
mov
int
leave
dec
jge
mov
or
negb
sbb
or
jns
bound
xchg
mov
xchg
in
sbb
iret
add
enter
lods
das
adc
push
repnz
mov
outsl
mov
shrb
jmp
aad
add
movsl
fdivr
das
divl
lret
sbb
and
subb
adc
pop
or
cmp
lret
or
in
aad
movsb
inc
movsl
jae
pop
pushf
xor
mov
xchg
push
imul
cmp
pop
jle
xlat
add
not
stc
insl
subl
and
jp
int3
lds
in
inc
mov
ret
xchg
fstpt
jns
xchg
dec
arpl
mov
adcb
scas
fwait
rolb
mov
repz
push
jecxz
mov
aas
sub
ficompl
pop
jnp
negb
xchg
aaa
fimuls
push
fbstp
xchg
sahf
mov
cld
xor
or
dec
stos
xchg
push
lret
push
mov
nop
inc
push
mov
push
dec
aas
inc
pop
adc
fwait
xor
mov
cld
ficomps
adc
dec
xor
fisttpll
nop
clc
into
mov
adc
test
push
nop
addr16
cmp
sub
lds
es
push
add
sub
fists
cmp
in
inc
ror
rclb
fmull
sub
repnz
mov
dec
int
cmc
ljmp
cmp
daa
or
lahf
xor
sub
jb
fs
lcall
negb
cwtl
popf
popa
es
aas
or
in
mov
jl
mov
dec
sub
shll
sbb
dec
test
and
and
pop
xchg
push
adc
cwtl
push
or
jg
sahf
lds
rcr
push
add
xchg
ds
outsb
and
mov
cwtl
mull
cwtl
push
fsts
popa
lods
lret
iret
out
or
daa
mov
mov
stos
fs
ljmp
push
icebp
mov
lret
dec
pop
ss
jnp
inc
lret
addl
lods
idiv
es
lcall
jae
xchg
lahf
int3
in
mov
outsl
stos
cmp
xor
adc
hlt
cmpsl
andb
sub
mov
sub
mov
sbbl
or
push
dec
js
and
dec
sub
movsl
add
outsb
jae
pop
mov
dec
and
daa
and
mov
aad
xchg
fwait
inc
mov
mov
lcall
and
andb
test
or
mov
lods
inc
icebp
movsl
mov
ret
and
sbb
mov
xchg
xlat
pop
popa
out
mov
test
push
cmpl
xchg
mov
add
add
xchg
jg
in
sbb
shl
adc
nop
mov
rolb
sbb
lret
cmpsb
sbb
jle
test
add
outsb
push
dec
mov
hlt
adc
test
add
negb
and
and
test
add
andb
cmp
xor
scas
mov
cmp
je
xor
outsl
ja
in
mov
popf
xchg
mov
inc
push
cmp
pop
mov
push
mov
mov
icebp
icebp
cmp
inc
sbb
gs
repnz
adc
outsl
rol
mov
fistpl
mov
scas
aad
pop
cs
xor
ret
dec
push
scas
pop
cld
or
aad
inc
loop
cmp
pushf
inc
mov
cmp
mov
bound
dec
ficompl
inc
xor
adc
ss
and
jg
jmp
pop
mov
rorb
jne
clc
xor
xchg
mov
arpl
out
notl
pop
push
add
jnp
pop
jb
and
jns
stos
pop
call
inc
js
mov
jns
int
cmp
lcall
xor
cmp
and
xchg
xorb
jne
cmp
call
imul
loop
add
mov
enter
mov
lret
cmp
xchg
mov
scas
daa
decb
jl
or
sbb
jbe,pn
add
inc
testb
popa
test
inc
mov
cltd
adc
mov
movsb
and
in
pop
xchg
pmovmskb
add
jns
or
pop
cmpb
sbb
sti
mov
imul
xlat
xchg
dec
rorl
xchg
test
outsl
dec
pop
je
add
push
jmp
jmp
call
push
and
insb
cmpsl
adcl
repnz
adc
stos
adc
outsb
xchg
ret
xchg
loope
mov
loop
dec
cmp
nop
notl
pop
in
mov
in
jo
test
out
test
adc
adc
ja
xchg
addr16
mov
pop
loopne
jnp
adc
mov
sbb
and
into
push
jae
xor
and
fdivrl
sub
lock
or
lock
mov
lods
pop
mov
push
dec
adc
fwait
mov
and
loopne
daa
and
jbe
adc
hlt
jecxz
mov
fwait
iret
xchg
jne
sahf
or
dec
movsb
pop
inc
mov
out
sbb
arpl
stos
orb
jmp
dec
push
add
sbbb
fistl
aaa
cs
mov
ftst
jp
push
repz
or
pop
mov
dec
das
icebp
paddw
sbb
shrb
pop
mov
add
jmp
cwtl
popf
mov
notb
dec
cld
rorl
sub
popa
xor
sbb
lock
fimuls
xchg
xor
pop
xlat
loope
jmp
lods
add
popf
loope
je
and
mov
pop
xor
add
popa
movl
mov
js
mov
mov
lea
into
daa
leave
adc
pop
mov
jl
icebp
mov
xchg
mov
pop
pop
test
pop
loope
mov
gs
pop
fsts
sub
or
mov
and
lods
xchg
fldl
shrl
inc
push
xchg
xlat
xchg
adc
inc
adc
lret
sbb
dec
pop
repnz
jns
push
pop
cmpsl
mov
mov
jg
cmp
dec
adc
sub
pop
fld
cld
sub
xchg
into
rcrb
out
div
repnz
pop
rolb
insb
cwtl
xchg
pop
loope
out
jg
hlt
ret
push
mov
iret
repz
dec
in
fmuls
xor
and
mov
cwtl
push
mov
sub
cmpsl
mov
dec
mov
iret
add
jg
pop
dec
imul
push
pushf
mov
add
mov
mov
xchg
and
cmp
xor
shl
pop
lods
test
push
popa
add
test
sbb
jb
sub
or
divl
fidivl
popa
shl
popf
mov
mov
popf
int
mov
mov
adc
xchg
ja
bound
sbb
lcall
push
inc
inc
add
jnp
outsb
cmp
jle
mov
push
push
mov
add
xor
not
dec
sbb
mov
scas
movsb
popa
mov
adc
ja
aas
rorb
mov
cmp
mov
push
jmp
pop
pop
add
sbb
sub
insl
add
pop
dec
test
pop
sbb
xchg
popa
lcall
mov
sub
call
cmpb
in
xchg
roll
inc
dec
movsb
mov
add
xor
mov
fwait
xchg
jp
icebp
push
scas
sbb
or
add
shl
jae
mov
push
pop
test
xor
dec
mov
pop
pop
das
pop
mov
jae
cmp
and
test
pop
inc
lea
fisubs
mov
loope
sarl
push
repnz
ret
xchg
aad
fcmovnu
pop
mov
add
adc
dec
mov
gs
xchg
stos
mov
ds
mov
mov
or
mov
int
std
adc
test
and
mov
pushf
arpl
in
jb
lock
xchg
stos
data16
jbe
jmp
aaa
mov
mov
mov
mov
movsb
push
icebp
cli
int
mov
mov
sahf
push
lods
dec
imul
dec
pop
enter
sub
sti
mov
cli
mov
ljmp
movsb
jne
pushf
pop
mov
xor
xchg
repnz
inc
pop
cmpsb
sbb
mov
xchg
and
in
test
or
incb
adcl
mov
fistpl
lds
je
and
push
shrl
enter
adc
in
loope
sbb
fildll
and
or
xor
cmp
out
xor
cmp
negb
pop
inc
mov
mov
ret
inc
in
gs
jp
jae
xchg
sbb
sahf
pop
das
inc
int
outsl
push
adc
or
sbb
adc
or
push
leave
nop
jmp
lea
mov
es
or
mov
pop
repz
adc
lods
sub
mov
insb
pushf
mov
adc
scas
call
shlb
ret
addr16
aaa
sub
inc
js
adcl
bound
sbb
scas
mov
das
xchg
jns
inc
dec
leave
sar
loopne
xchg
es
enter
pushf
into
ret
jg
sbb
mov
jb
jle
mov
pop
into
gs
add
xchg
lds
inc
xchg
mov
out
out
sahf
fs
das
aam
fsubrl
ret
shlb
push
pop
jo
sub
lods
add
stos
cmpsl
inc
jnp
mov
pushf
mov
imul
xchg
mov
pop
push
jae
or
in
cmp
mov
mov
dec
js
insl
lea
insb
mov
mov
sub
loopne
imulb
adc
mov
cmc
bound
imul
mov
cltd
repz
sub
fadds
fnstcw
push
add
cmp
mov
inc
inc
mov
adc
mov
data16
push
pop
adc
loop
jbe
gs
out
pop
in
fisubs
inc
sbb
aad
sahf
sub
data16
mulb
gs
xchg
xor
dec
pop
or
into
popf
movsl
and
imul
pop
mov
and
loope
xor
lret
fcmovu
outsl
movsb
pop
sbb
cmp
icebp
jo
out
or
xor
push
pusha
or
lahf
stos
mov
fnstcw
lock
test
sti
xor
fldl
in
cmc
fisttpl
dec
dec
and
xchg
adc
and
push
ret
test
xchg
dec
cmpsl
pop
enter
lret
push
bound
xchg
mov
loopne
mov
les
testb
fnstcw
add
lret
xchg
inc
enter
pop
jae
mov
cld
cwtl
stos
or
add
loop
lds
xchg
inc
addr16
or
in
data16
jnp
sti
sarl
leave
negb
ljmp
push
lods
repz
cmc
movsl
jmp
ret
push
mov
fidivrl
push
jnp
xor
inc
adc
in
ljmp
inc
testl
jnp
sub
mov
lea
clc
jg,pt
orb
cmc
mov
sbb
arpl
insl
test
shrb
inc
adc
insl
addr16
call
pusha
pop
or
aad
pop
loopne
loope
push
jle
dec
and
xlat
mov
pop
int
mov
xchg
dec
push
shl
xchg
inc
jae
bound
and
sub
test
cmp
pop
imul
scas
ret
pushf
clc
js
js
sbb
cmp
sbb
leave
insb
rolb
add
negb
add
cmp
inc
clc
ja
sbb
and
inc
mov
gs
sub
scas
fwait
je
xchg
cmc
repz
stos
mov
push
mov
rcl
lods
in
sub
cmp
push
or
std
icebp
cmp
fcomps
adc
fisubs
repnz
jg
sahf
cwtl
sub
mov
push
lods
jmp
lahf
in
shl
and
and
mov
sti
aam
testb
push
dec
jmp
les
nop
xchg
addps
fcmovne
xor
inc
pop
add
jl
scas
pop
inc
mov
and
push
mov
mov
jp
or
test
ret
pushl
fcmovne
add
or
pop
lea
ret
xchg
loope
xchg
stc
fists
add
addr16
dec
jne
dec
or
sbb
pushf
imul
xchg
ffreep
and
sbb
xor
mov
sar
mov
cmp
jne
outsb
pavgb
pop
push
gs
push
icebp
push
xor
les
mov
inc
inc
ljmp
or
xor
rclb
inc
jno
push
jns
test
sbb
out
xor
data16
or
outsl
stos
adc
add
and
pop
daa
push
xor
shrb
orb
rcl
sub
push
inc
push
aaa
pushf
push
rolb
xor
out
aam
adc
lret
dec
xor
sti
out
sbb
mov
xor
dec
lret
mov
imul
mov
std
jle
addr16
in
imul
gs
sub
sbb
ret
rcrb
jmp
sbb
icebp
insb
mov
fdivs
pop
cmp
repnz
ret
cs
pop
int
orl
fadd
dec
repz
jmp
or
xchg
into
sub
cltd
cmp
addr16
jbe
les
out
fwait
sbbb
sub
mov
outsl
cwtl
addb
adc
dec
test
outsb
cmp
xor
int
pop
mov
orb
pusha
rorb
insb
sti
insb
dec
imul
lcall
sahf
jle
add
mov
inc
adc
inc
adc
xor
xchg
jb
pop
or
jmp
sbb
fidivrs
mov
test
sbb
aam
mov
mov
mov
imul
jmp
icebp
ljmp
test
jg
push
push
fstpt
push
jo
jecxz
xchg
cmpsb
ljmp
mov
fidivl
xchg
cmpsl
mov
mov
std
and
stc
push
xchg
insb
mov
aad
xorb
and
movsl
cmp
outsb
hlt
or
jne
jno
call
push
jge
fsubrl
les
mov
insl
lock
push
inc
ficoml
lds
notb
leave
rol
movsl
push
dec
sub
jmp
adc
cmp
jb
dec
jg
or
repnz
dec
dec
xor
dec
enter
pop
add
dec
inc
sub
push
fstpl
test
or
fcos
stmxcsr
or
cmp
mul
mov
cmp
pop
jmp
mov
pop
fmull
adc
icebp
jmp
repnz
jb
cmpsb
lret
test
pop
inc
mov
pop
repz
fs
push
stos
test
les
sub
adc
push
sub
mov
sahf
mov
outsb
jno
cmc
push
add
es
fcomps
sbb
daa
adc
jge
add
repnz
inc
sub
add
dec
dec
test
push
pushf
rcll
sub
pop
lret
into
mov
cmp
cli
out
ficoms
jmp
cmpsb
insl
push
mov
enter
sub
call
je
sahf
mov
clc
lds
mov
fprem
mov
cmpsb
dec
scas
push
imull
icebp
add
jecxz
data16
fldl
jo
or
jae
sbb
repz
popa
xor
insl
xchg
arpl
adc
fisubl
mov
lock
mov
gs
or
xlat
or
in
test
add
lds
ficompl
xor
adc
sub
hlt
movsl
addr16
test
std
sbb
mov
xorb
sti
mov
in
jp
loope
into
pushl
inc
pop
ret
fwait
mov
mull
cwtl
xchg
clc
or
loop
pop
xor
mov
aad
outsl
jne
inc
xchg
xor
icebp
lret
cmp
daa
mov
insb
mov
outsl
mov
in
subb
xchg
jmp
sbb
fstps
mov
imul
add
cmp
out
pop
mov
inc
fcmovnbe
sti
mov
aad
add
fisubrs
leave
cs
xlat
rolb
add
scas
iret
xchg
leave
and
pop
xchg
sub
xor
mov
xlat
xchg
inc
leave
js
out
pop
cmpsb
push
in
loop
repz
movsb
mov
in
sub
enter
xchg
add
scas
add
pop
add
leave
gs
cmp
les
aaa
movsb
sbb
jmp
or
cmc
mov
daa
or
cmp
jecxz
ret
and
mov
and
lods
cmp
stos
fdivrp
xchg
cltd
add
sub
jb
cmpsb
test
int
jns
mov
icebp
xchg
dec
xchg
cmpsb
mov
loop
xor
aam
leave
inc
jp
jno
jecxz
cli
ret
push
cmp
xchg
dec
jp
lods
mov
mov
int
and
mov
add
xchg
cltd
stos
xlat
fucom
and
xchg
sbb
mov
loopne
pushf
cmp
mov
add
fs
cwtl
sub
or
dec
push
iret
mov
fs
xor
in
inc
mov
ss
data16
and
shlb
xchg
addr16
test
pop
cmp
incl
popf
push
mov
inc
push
and
dec
mov
adc
addr16
lea
mov
imul
push
sti
adc
lret
popa
inc
scas
pusha
add
dec
push
cli
inc
sbb
dec
jle
repnz
dec
dec
les
mov
popa
mov
ds
xchg
jbe
stc
cli
imul
jmp
sbb
mov
xchg
bound
xor
xchg
or
pop
lods
jge
shlb
cmc
sti
push
or
push
addr16
inc
jnp
jle
adc
mull
or
cmp
jmp
pop
rolb
je
push
push
jno
lds
in
sahf
cmp
fcomip
jne
xor
out
aam
push
jp
lea
and
fwait
sub
stos
jne
in
stos
sarb
and
dec
jmp
adc
inc
out
repnz
dec
cmpsb
mov
fsubrp
clc
lock
repz
in
ja
fwait
shll
push
xor
jecxz
in
divl
jb
mov
daa
clc
mov
push
mov
sub
loopne
dec
ss
jo
and
jle
outsb
cmp
cld
out
fwait
dec
iret
mov
clc
out
mov
cmpsb
test
jnp
out
mov
mov
lcall
in
xor
push
push
xchg
cmp
movsb
stos
jbe
mov
pop
sahf
es
call
clc
sub
mov
stos
dec
dec
aas
xor
cmpsb
enter
call
pop
in
cmpsl
loop
ds
or
add
std
cmp
enter
test
dec
inc
pop
pop
push
cltd
in
jb
jo
cmpsb
insl
push
leave
xor
mov
pop
mov
adc
int
icebp
jl
call
or
mov
cmpsb
push
jl
push
ret
jge
jns
jo
inc
and
sbb
test
les
sbb
cld
sub
cmpsl
xchg
mov
dec
xchg
stos
dec
sbb
xchg
stos
enter
sbb
mov
mov
lods
add
mov
cmp
subl
or
cmpsb
jg
les
mov
sub
xchg
dec
cld
lcall
add
pop
xlat
stos
int3
or
mov
clc
jmp
ljmp
scas
fistpll
das
shl
popf
out
cs
data16
aam
mov
lcall
pop
inc
dec
or
jb
int
sub
mov
mov
adc
mov
lret
add
jns
dec
pop
dec
fcmovne
jl
in
out
sub
dec
insb
sub
repnz
xchg
mov
ljmp
sarb
nop
into
jne
and
sbb
mov
adc
gs
in
mov
xchg
mov
bound
leave
add
int
pop
hlt
bound
int3
ss
mov
jns
jg
sub
movsb
push
pushf
pop
xchg
mov
stos
mov
out
xor
mov
mov
jl
fsts
sti
or
and
int
mov
cmpsb
arpl
fstpl
jmp
sbb
push
iret
jne
fsubr
or
mov
imul
notl
push
ret
add
push
out
outsl
das
aam
jl
test
xorl
adc
jbe
jp
fdiv
leave
inc
mov
pusha
mov
push
aas
mov
dec
popa
xchg
push
outsl
pop
mov
fisubrs
xchg
cmp
daa
fstpt
and
aad
xor
adcl
aad
and
lods
add
enter
sbb
sarb
inc
scas
shlb
js
xchg
mov
enter
or
jne
ret
jne
or
out
lea
or
daa
sub
outsb
cmc
data16
cmp
mov
add
cmp
jecxz
data16
fistps
dec
nop
ljmp
or
cmp
sub
sahf
mov
and
ds
inc
jl
push
mov
aas
out
mov
outsl
movsl
xchg
pop
and
push
add
jg
hlt
or
pop
movd
and
jmp
clc
gs
or
inc
push
fstl
stos
sub
mov
xchg
fisubs
stos
lret
rorb
insl
test
push
test
mov
and
in
xchg
mov
shl
outsb
xchg
popf
rorb
les
sub
icebp
icebp
pop
mov
mov
push
mov
mov
in
adc
dec
pop
mov
je
imul
mov
loop
pop
pop
cmpsb
or
mov
aaa
call
add
aam
lock
xor
fildl
nop
out
movsb
sar
lea
cli
cmp
idivb
addl
pop
sbb
xchg
sti
or
jns
jns
gs
fcoms
std
and
jnp
into
scas
je
pop
in
mov
inc
dec
sbb
lock
jle
add
pop
imul
sar
jo
leave
fcmovu
shlb
sub
sub
jnp
aas
shll
adc
pop
testl
js
adc
gs
outsl
mull
mov
jnp
addr16
insb
insl
pusha
dec
jge
mov
adc
fdivrs
cmp
mov
hlt
inc
outsb
pushf
pop
jne
pop
mov
ror
std
out
out
pop
mov
sub
int3
jae
sub
leave
int
cmpb
lahf
or
fs
out
mov
mov
inc
inc
xchg
cld
lahf
and
out
repz
fcoms
pop
es
sbb
jns
mov
lds
mov
pop
aas
cmpsl
and
ret
nop
jp
add
push
in
gs
add
dec
cmp
mov
outsb
sbb
outsb
mov
or
adc
mov
loop
jle
lret
das
xchg
fst
mov
out
test
adc
add
fdivrl
jge
stos
xchg
cmpsl
sarl
xchg
fwait
std
in
adc
adc
and
lods
test
fdivl
push
dec
push
orl
push
sub
insl
sahf
cmp
filds
int
cmp
hlt
out
or
add
mov
mov
fiaddl
xchg
inc
insl
cs
bound
lret
ljmp
out
jecxz
mov
outsb
or
push
fistl
jmp
lods
or
lods
enter
lahf
mov
test
pop
push
shlb
mov
push
repnz
out
test
jge
and
sub
test
les
xchg
jge
mov
out
push
cmpsb
jns
sarb
mov
insb
and
jg
gs
push
enter
xor
cmp
pop
push
insb
cwtl
and
dec
loope
inc
sub
js
dec
xor
ss
int
scas
xor
dec
jge
inc
rcr
pop
dec
mov
or
shlb
pop
and
shlb
jecxz
mov
test
pop
mov
mov
nop
imul
pusha
lcall
loope
leave
rcll
cld
js
dec
push
push
sti
pop
lock
fs
lds
cwtl
nop
jne
pop
repz
mov
add
mov
add
mov
aad
sub
mov
addr16
mov
xor
jo
pop
pop
test
ljmp
call
stc
je
shrl
pop
push
cmp
push
jl
dec
repnz
push
xor
push
ret
push
xor
sbb
les
adc
rcrb
push
loope
ja
xor
mov
popf
stos
repz
push
pop
xlat
test
cmp
sbb
out
pusha
sub
imul
aam
and
adc
mov
mov
sub
pop
xor
dec
cwtl
outsb
sbb
add
ja
in
jl
in
pop
mov
aas
and
dec
ret
scas
jo
mov
sub
test
sbb
sub
ror
mov
add
outsl
xlat
push
or
pop
arpl
ficomps
push
loop
push
and
sbb
movsb
fists
andl
inc
aam
mov
mov
std
add
daa
inc
repnz
mov
popa
push
icebp
cmp
mov
loope
fstl
test
xor
lods
clc
stos
sbb
pop
cmc
jns
cmp
push
or
adc
adc
xor
out
mov
fidivrl
adc
add
jne
mov
test
xor
nop
popf
shrb
push
xchg
inc
into
sbb
in
cwtl
mov
stos
mov
imul
sbb
mov
xor
addr16
outsl
pop
or
call
or
jae
mov
adc
sub
push
outsb
mov
adc
push
push
mov
mov
inc
jmp
mov
filds
mov
or
mov
loop
jmp
and
push
xor
mov
push
shll
mov
adc
fwait
clc
dec
mov
fildll
lret
xorl
mov
mov
dec
xor
test
ss
xor
ljmp
jns
data16
pop
ret
fidivs
mov
aaa
xor
and
enterw
insl
stos
xor
mov
in
adc
les
aaa
or
stos
sub
dec
jg
pop
adc
js
pusha
mov
jo
or
pop
lcall
fs
jae
andl
pop
lds
jg
stos
imul
popa
jae
sub
daa
fsubl
mov
lcall
xchg
mov
lods
mov
sub
lods
mov
push
push
adc
lds
dec
xor
out
daa
jbe
stc
mov
sub
adc
push
lret
pop
cmp
jge
pop
mov
popf
push
imul
cmpsl
pushf
xor
xchg
cli
jle
repz
add
and
push
push
xchg
jl
out
push
dec
inc
sbb
arpl
ss
mov
or
adc
dec
adc
mov
in
lret
iret
test
add
adc
sbb
in
push
sbb
js
rorl
pop
fistpll
fs
sub
push
mov
xor
push
dec
mov
add
xchg
sub
in
out
repnz
lahf
add
sbb
loop
enter
pop
dec
addr16
push
mov
hlt
aad
mov
pop
and
call
push
ljmp
dec
adc
stos
aad
sbb
pop
aam
xor
mov
jp
fistpl
inc
push
mov
je
fnstsw
test
scas
into
rol
das
xor
cs
jne
out
pop
jl
out
mov
scas
dec
xchg
inc
out
daa
mov
arpl
push
out
adc
in
aam
fst
jnp
pop
sahf
jns
mov
cmp
rol
popf
sub
push
adc
dec
jle
push
insl
sbb
cmp
mov
lahf
ja,pt
sahf
adc
push
lahf
stos
push
cwtl
test
jle
push
lcall
or
inc
test
mov
lods
dec
and
mov
fs
fdivl
stos
adc
scas
mov
mov
push
stos
adc
push
sbb
mov
arpl
and
enter
in
push
push
dec
insl
mov
js
pop
fmuls
jb
imul
in
aam
push
movsb
cmp
inc
mov
xchg
pop
imul
fdivr
cmp
pop
lods
mov
ljmp
movsb
pop
or
cmp
pop
arpl
or
add
fcoms
xorb
hlt
xchg
in
sub
pop
sahf
push
and
fildll
lods
in
fdivl
inc
inc
adc
and
xchg
xchg
xlat
mov
add
js
int
mov
loopne
mov
mov
sub
fwait
add
lcall
insb
mov
outsl
imul
fists
loope
xchg
dec
movsb
mov
mov
pop
loope
movsb
out
and
mov
cmp
jb
push
shlb
fidivrl
inc
call
dec
daa
sbb
or
arpl
mov
xor
gs
ss
cmc
sarb
inc
rcll
xor
jle
mov
sbb
hlt
lock
dec
in
add
jb
mov
or
cmp
shrl
push
jmp
add
mov
jnp
mov
mov
pop
xor
sub
sbb
fstp
out
fcomps
mov
pushfw
sub
jle
fstps
sarb
push
sub
int3
shlb
fdivrs
mov
test
add
mov
movsb
mov
sbb
pop
sub
cld
pop
in
inc
push
pop
cmpsl
jl
mov
stos
jmp
test
js
hlt
rorl
xchg
ljmp
outsb
and
pop
mov
jno
sub
cltd
pop
out
int3
push
push
inc
test
fiaddl
outsl
mov
hlt
pop
and
stos
mov
gs
cmc
xchg
ror
ss
dec
stos
outsb
push
jns
dec
jmp
jns
add
iret
add
fcmovne
jmp
popf
and
nop
pusha
xlat
mov
jno
sbb
jns
int
mull
xchg
and
mov
lods
xor
enter
in
inc
xorl
xchg
mov
xchg
jmp
add
dec
add
iret
mov
sub
mov
jmp
icebp
dec
add
fdivp
mov
pop
insl
push
sub
imul
add
sahf
fld
int
jae
lahf
mov
jecxz
lods
pop
rolb
push
into
xor
sbb
inc
and
add
adc
out
int3
aas
pop
mov
shlb
push
in
cmp
xor
leave
ror
xchg
inc
shll
out
fistpll
fstps
sub
or
sar
or
xlat
xchg
lcall
scas
push
repnz
mov
jg
push
and
mov
jmp
icebp
xchg
mov
jmp
mov
mov
stos
aad
sub
sub
out
and
leave
inc
subb
jns
mov
push
jbe
push
int3
movsb
jmp
and
jne
gs
jge
lods
dec
dec
jl
xchg
mov
int3
xor
seto
ret
lahf
in
cmp
sbb
pop
xor
inc
dec
sub
add
outsl
out
rorb
sub
pop
adc
push
inc
movsb
push
jl,pt
out
jnp
dec
popf
fmuls
test
filds
inc
cld
scas
xor
xor
mov
push
push
xchg
sbb
pop
test
ljmp
dec
rol
iret
ret
insb
movsb
pop
xor
cmpsl
cwtl
andl
roll
pop
add
jb
jge
adc
call
roll
in
mov
sbb
add
cli
jno
lods
push
jl
in
stos
jb
cmp
mov
mov
inc
inc
pusha
imul
sbb
lahf
lods
jmp
popf
pushf
sbb
in
inc
adc
aam
mov
shll
into
cmp
pushf
sbb
sbb
jecxz
jo
jecxz
sub
jle
sbb
cmc
std
or
jnp
pop
xor
adc
scas
in
sub
std
out
popf
cmp
add
push
lods
xor
stos
call
inc
push
add
cmp
ficompl
xorb
pop
and
sahf
mov
in
mov
mov
imulb
fcoms
test
or
arpl
mov
add
stc
loope
imul
in
and
inc
ljmp
int
add
scas
insb
insl
sub
leave
xchg
arpl
fisubrs
movsl
sar
mov
push
cmp
sbb
xchg
dec
shr
dec
and
jae
clc
movsb
mov
fdivrp
subl
mov
ja
push
aas
fbld
push
ss
sbb
xor
xor
and
xchg
pop
push
lea
sub
jnp
sbb
jns
mov
mov
inc
pop
jno
out
or
pop
fcompl
push
std
add
xchg
mov
out
ds
das
or
imul
sar
insb
stc
pop
adc
shlb
mov
fistl
aam
pop
les
jmp
aad
jne
loop
dec
pop
ret
mov
push
dec
scas
inc
xor
lods
dec
ret
push
outsb
push
cmp
jne
dec
push
cmpsb
mov
xor
pop
or
arpl
out
fisttpll
push
sbb
out
bnd
add
imul
cmpsb
aaa
inc
xchg
sub
shll
icebp
cwtl
rolb
enter
lods
mov
test
and
js
jl
outsb
fwait
jecxz
jbe
cmp
je
int
jmp
lahf
cwtl
movsb
or
pop
fnstsw
out
js
inc
scas
jno
pop
les
push
popa
out
mov
pop
push
and
adc
or
pop
lods
out
inc
mov
fcom
sub
jp
outsl
andl
sbbl
fsubl
pop
pushf
xor
sub
xor
add
pop
xchg
hlt
cmc
jp
sarl
mov
aas
jae
mov
mov
sub
pop
fcomps
jl
mov
js
ds
lods
pop
ja
jno
push
int3
lret
movb
xchg
mov
pop
jns
testl
jae
out
lods
inc
pop
les
pop
cs
addr16
icebp
inc
aaa
adc
mov
loopne
ss
lods
loopne
jbe
movsb
push
add
or
addr16
and
lock
aam
xchg
mov
repnz
mov
loopne
mov
test
ja
xchg
dec
or
jno
jo
pop
mov
not
push
add
aad
sti
shrl
xchg
sbb
push
inc
cmp
mov
mov
mov
mov
mov
ja
jnp
mov
inc
add
popa
adc
fldt
and
into
push
shll
jne
movsb
pop
mov
es
ret
mov
popf
jae
push
fiaddl
inc
fdivrs
mov
push
mov
sbb
popf
out
dec
repz
js
daa
xlat
fldenv
lret
lods
mov
xchg
and
je
test
repnz
add
fucomp
pop
int
add
mov
mov
mov
in
scas
out
cmp
xor
adc
shll
scas
ret
in
jae
and
test
push
in
lcall
idiv
pop
insb
scas
das
popf
xchg
aad
cmp
adc
movsl
and
out
lret
cmp
lret
pop
mov
aas
daa
div
adc
jecxz
pop
or
adc
mov
push
stc
or
mov
in
jle
ss
mov
or
pop
enter
fs
or
xor
loop
and
mov
inc
push
loope
xchg
insl
int3
orb
push
repz
mov
add
inc
cmpsb
dec
decl
pushf
pop
mov
int
lea
or
test
push
pop
rcrl
jbe
push
inc
mov
stos
adc
stos
jo
mov
out
fstl
mov
or
dec
push
js
add
test
aas
mov
mov
jmp
rolb
loopne
test
gs
push
cmpl
jp
sbb
xor
test
jbe
iret
push
out
xor
dec
xchg
push
adc
adc
mov
jmp
int
das
mov
imul
ds
mov
pop
mov
outsb
mov
stos
arpl
sub
pop
mov
cld
loop
xchg
cmp
pop
iret
sete
loopne
push
inc
or
mov
inc
cmp
test
pop
adc
in
ret
cmp
fcoml
lds
mov
clc
add
fwait
lret
imul
mov
add
mov
add
movsb
pop
leave
ljmp
mov
fcoms
in
lahf
adc
mov
das
mov
dec
jae
push
and
into
hlt
test
push
int3
cmp
adc
test
nop
mov
mov
test
jb
stos
arpl
loop,pn
mov
and
std
test
addb
mov
xor
in
sub
and
stc
jecxz
push
lods
test
inc
in
dec
push
cmpsl
pop
lea
jecxz
js
repnz
xchg
xchg
std
rcl
shlb
mov
iret
jmp
mov
in
add
imulb
lea
cmp
mov
cmp
idivl
adc
je
lahf
sti
jae
pusha
mov
or
data16
sti
mov
dec
mov
sub
adc
or
or
ret
enter
push
pushf
xorb
or
add
stos
or
rclb
mov
mov
push
jg
pushf
loop
sahf
movsl
cmp
test
lret
mov
jl
hlt
push
add
sub
mov
sub
mov
push
push
lcall
push
fimull
or
jmp
mov
bound
fmuls
or
lods
test
sbb
out
adc
testb
sahf
rorl
scas
add
lds
nop
mov
enter
sbb
adc
arpl
hlt
jns
jp
pop
stos
out
push
push
pop
fwait
test
scas
repz
movl
xchg
scas
icebp
jmp
cmp
xchg
in
repnz
dec
popa
cli
mov
icebp
dec
fisubs
mov
xchg
mov
or
cltd
sti
into
sub
test
push
les
lcall
mov
lret
dec
faddl
outsb
flds
pop
jns
int3
dec
jg
push
jae
int
jge
mov
fcoml
mov
gs
push
popf
sub
les
pusha
into
and
push
add
dec
fisubrl
gs
and
xor
icebp
add
lds
cltd
pushf
mov
pop
cwtl
loop
mov
lret
inc
cltd
or
sbb
dec
sbb
adc
or
pop
inc
mov
sub
lds
or
cmc
xchg
clc
mov
dec
inc
push
pop
inc
out
add
pop
jb
scas
leave
repnz
flds
stc
pushf
mov
repnz
jo
dec
jo
mov
jp
adc
cmp
jnp,pt
test
stos
and
jle
decb
xor
mov
jmp
in
mov
mov
out
scas
mov
lock
pop
mov
enter
cli
cmp
sbb
or
inc
sub
pop
adcb
fsubl
stos
xchg
or
lods
je
jg
dec
add
sbb
data16
mov
call
xchg
into
cli
jo
inc
mov
dec
lcall
out
mov
push
or
jle
jns
cmp
pop
xchg
scas
enter
sub
sbb
inc
in
les
dec
stos
aas
sbb
and
sub
push
xor
int3
icebp
repz
addr16
dec
fstps
add
aad
dec
out
cmpb
int3
xor
push
adc
xchg
sahf
out
loopne
adcl
fs
jnp
insb
pusha
fwait
dec
out
outsb
push
xchg
addr16
rorl
dec
mov
sarb
clc
dec
jg
add
add
loope
inc
mov
mov
xchg
out
ret
push
sub
mov
pop
dec
out
mov
fcomps
cmp
inc
test
addr16
sarb
jns
repz
and
jge
push
jne
jecxz
mov
cltd
jp
add
and
xor
sbb
xor
popf
push
pop
cmpl
arpl
xchg
mov
ljmp
add
sbb
xchg
data16
mov
roll
xchg
stc
mov
fnsave
rcrb
loope
push
mov
push
push
addl
xor
fs
test
mov
xchg
fucom
lret
enter
mov
jb
or
adcl
xorb
mov
push
inc
bound
jae
cld
das
pop
mov
xchg
or
ja
push
mov
shll
or
int
daa
cli
push
xchg
sbb
xor
fcoms
mov
mov
dec
pop
lds
mov
aam
inc
loopne
sbb
out
stc
aam
fistps
add
inc
into
jno
push
and
stc
jmp
xchg
sub
hlt
add
and
out
rorb
rorl
cmp
adc
out
mov
mov
push
xor
xlat
int3
mov
clc
pop
fnstenv
xchg
test
scas
sbb
cmc
enter
repz
mov
push
in
addb
and
adc
cmp
lret
lret
insl
fs
xchg
lret
xor
out
movsb
push
sub
jns,pn
pop
mov
cmc
jmp
in
sbb
xor
add
pop
mov
cmp
ja
adc
lock
xchg
mov
or
adc
push
pop
adc
xor
lret
movsl
ret
fsubs
jns
clc
arpl
mov
loope
inc
jo
lea
xorb
mov
iret
or
push
push
push
fcompl
aad
test
bnd
mov
pop
jns
mov
lret
fistl
jmp
inc
sub
sbb
test
std
add
sub
jg
or
mov
out
push
dec
xchg
cmp
lahf
or
mov
and
imul
add
mov
jne
pop
sub
jo
xor
lds
jge
pop
popf
push
jmp
cmpb
loopne
pop
stc
nop
mov
mov
or
lret
shrb
loopne
push
cmpsl
ret
lds
cld
es
test
cwtl
xchg
push
mov
sub
xchg
add
dec
add
scas
out
fbstp
jl
pop
sbb
sub
mov
in
lea
mov
shlb
jae
icebp
shrb
cs
inc
push
push
stos
mov
popa
fdivp
cmp
loope
fldt
into
mov
imul
xchg
xor
sarb
idivl
jno
jo
xor
cmc
ret
or
aaa
or
lcall
jecxz
mov
xchg
mov
dec
push
in
mov
insl
xor
std
andl
mov
jb
gs
addr16
adc
cld
jp
sbbl
sub
xor
pusha
push
je
mov
inc
cmpsb
adcl
movl
inc
in
xchg
in
push
adc
inc
mov
jl
lret
sti
mov
ja
ja
lcall
lds
std
push
pop
lcall
cmp
mov
or
xor
stos
mov
push
es
mov
push
cmpb
insb
pop
outsl
and
jg
stos
out
and
cmp
xchg
pop
repnz
push
pop
arpl
mov
loop
aaa
jbe
lods
or
popf
das
das
jne
xchg
xor
sub
sti
jb
sub
stc
pop
sti
xchg
pop
sub
ret
mov
push
and
lcall
into
cmp
or
shlb
inc
sub
insb
mov
lds
subb
ljmp
dec
push
aaa
shll
xchg
aam
insb
je
fwait
into
loope
or
insl
cmpsl
add
shll
push
sbbl
clc
push
std
mov
cwtl
adc
inc
fdivs
xor
push
js
push
add
shll
dec
pop
and
scas
inc
mov
jbe
adc
std
inc
xor
mov
dec
mov
int
mov
rol
das
xchg
sub
and
push
xchg
cmp
cmp
sbb
js
cmp
pop
ret
push
aaa
lock
mov
popf
andl
cmp
add
mul
pop
shrb
sub
mov
loop
jb
inc
sub
mov
sti
mov
push
pushf
inc
or
mov
movsb
out
dec
mov
pop
dec
enter
mov
inc
sub
jl
cmp
pop
mov
and
push
jg
sahf
pop
push
ljmp
jmp
out
jne
jnp
jne
fwait
dec
fucomip
pop
out
cmp
jge
inc
fs
iret
int3
sub
fnsave
jmp
cmpsb
shrl
and
lock
sub
loopne
imul
dec
ja
xchg
imul
movsb
jb
lea
cmp
inc
jmp
mov
hlt
ds
mov
daa
push
std
or
dec
add
ror
sbb
call
mov
ret
or
jmp
lea
sub
cwtl
movsl
push
arpl
adc
hlt
imul
fxch
mov
ret
mov
pop
mov
iret
in
sbb
pop
cld
push
xor
cmp
sbb
and
addb
mov
jl
lea
fistpl
jmp
loop
dec
sub
out
push
enter
jae
imul
test
mov
repz
and
xor
fwait
xor
jne
and
into
dec
mov
lea
loop
mov
dec
cmp
xchg
mov
mov
and
mov
mov
test
add
jle
pop
pop
or
xchg
icebp
test
xchg
pop
pop
jle
test
jecxz
pop
jmp
lods
mov
std
sarb
dec
or
mov
pop
int
daa
or
in
xor
lea
pushf
mov
cltd
push
stos
xchg
push
loope
sbb
dec
aad
pop
mov
insl
in
iret
iret
fincstp
das
pop
xor
sub
mov
and
push
xor
lock
jl
dec
movsb
or
sub
dec
mov
mov
jecxz
jnp
dec
sub
push
mov
es
and
xor
fstps
mov
jecxz
sbb
daa
jb
negb
movsb
jb
jbe
or
mov
inc
jg
jecxz
rcrl
jmp
iret
and
dec
jne
cmc
sbb
xchg
dec
call
pop
sbb
out
push
mov
les
pop
mov
xor
loope
add
sub
out
ss
mov
push
rol
inc
or
cmp
cmp
fdivl
inc
mov
or
jne
lcall
xor
mov
repz
jmp
icebp
cwtl
jmp
out
in
outsb
pop
jmp
imul
scas
sub
xchg
add
mov
jno
rcrl
mov
bound
add
iret
out
imul
adc
dec
daa
jp
mov
adc
push
push
loope
loopne
stos
or
mov
loope
repz
push
or
inc
adc
imul
cld
jne
fxch
lock
shr
sub
jecxz
icebp
fstl
sub
cmpsl
nop
into
sarb
mov
xor
mov
jnp
shr
filds
push
sub
xchg
cld
lahf
lods
ret
ds
cld
sub
push
dec
jg
inc
lods
inc
scas
push
jp
shll
inc
sub
mov
lahf
es
add
scas
js
mov
add
xorb
cmp
mov
insb
mov
push
out
clc
fchs
mov
push
inc
sub
sub
mov
mov
lcall
test
mov
xor
call
inc
andb
push
leave
cs
adc
xor
out
push
dec
push
mov
aaa
cmp
pop
fisubrl
dec
jl
test
add
imul
stos
ss
push
enter
cmp
xchg
insl
cmp
stos
scas
cwtl
loope
jne
in
repz
add
arpl
adc
cmp
push
movsb
push
ret
in
mov
dec
add
push
outsb
jecxz
mov
push
shlb
ljmp
inc
sbb
imul
xlat
subb
add
jle
sub
loope
aas
lds
lret
in
pop
mulb
add
fcomps
pusha
pop
into
scas
push
out
or
sub
pop
dec
roll
mov
ss
pop
push
jmp
call
iret
adc
inc
js
popa
inc
pop
ss
xchg
jmp
flds
jns
lods
push
pop
nop
mov
jo
add
loop
sbb
shlb
fldt
jnp
jmp
bound
pop
xor
scas
pop
dec
jl
or
cld
scas
dec
or
bound
pop
push
lret
loopne
test
cmpsl
pop
ljmp
sub
mov
cmp
adc
or
cmpsb
push
push
in
pop
test
pop
mov
jno
ds
sbb
dec
fmulp
gs
inc
out
mov
mov
cwtl
cli
add
jb
push
lcall
xor
pop
sti
sub
mov
cmc
fnstsw
in
mov
lock
mov
call
popf
loopne
ret
push
jl
jmp
push
loope
sarl
outsb
iret
aas
mov
mov
into
lods
inc
loop
dec
mov
outsl
add
xor
sub
pop
popf
xchg
or
rcll
imul
mov
cltd
mov
call
iret
imul
jns
cmpsl
dec
jmp
pushf
bound
push
jmp
jg
mov
add
test
cwtl
jb
mov
or
nop
jge
mov
cmp
ret
aam
dec
ja
fadds
push
xchg
in
mov
mov
in
pop
int3
pusha
xchg
mov
push
inc
lret
and
sub
sub
jns
inc
pop
lods
outsl
xor
jmp
mov
in
inc
pop
add
sub
xor
test
push
out
push
xchg
jecxz
inc
enter
adc
clc
sub
inc
cmp
inc
hlt
pop
aas
mov
pushf
inc
hlt
pushl
in
xor
xor
testb
in
sarb
repz
jne
and
in
xchg
sbb
leave
jb
stc
iret
movsl
mov
xchg
mov
out
mov
out
cld
cmpsb
out
daa
test
data16
in
fidivl
jg
arpl
in
fnstenv
sub
mov
pop
in
jecxz
jnp
aam
cli
push
cmpsl
jne
mov
cli
xchg
iret
subb
mov
popa
and
cwtl
inc
xchg
inc
adc
cmp
ds
mov
mov
popa
pop
mov
push
push
orl
mov
std
mov
test
repz
sub
add
imul
mov
jle
bound
cmp
in
bnd
test
inc
mov
jg
lcall
inc
add
call
sub
dec
inc
inc
inc
or
adc
inc
shll
lods
xchg
xor
je
icebp
insl
cs
add
jg
dec
cmp
rcrb
loop
iret
mov
cwtl
testb
pop
adc
nop
xor
mov
cmp
and
cli
roll
add
jno
popa
cmovb
leave
mov
or
testb
xor
mov
jo
rorb
jle
cltd
and
mov
out
push
push
mov
adc
push
outsb
add
mov
mov
rcll
fsubrp
out
les
outsl
sbb
test
incb
push
aam
es
outsb
ret
add
adc
dec
je
cmp
mov
ljmp
cmp
mull
cmp
les
ja
aam
stos
shll
jle
push
mov
hlt
fidivrs
pushw
loope
ds
jo
movsl
jae
xchg
mov
dec
dec
push
add
movsl
or
pop
mov
dec
in
adc
lret
xchg
sbb
and
in
push
jmp
pushf
xor
mov
lds
mull
fsubrs
scas
mov
dec
stos
ja
loope
and
aas
imul
mov
push
sbb
das
fistpl
inc
ds
sbb
sbb
mov
ret
cmp
add
xchg
jmp
rcll
inc
ja
decb
xchg
add
repz
mov
xor
pop
jne
cmc
jno
clc
cmp
cld
and
cmp
pop
xchg
lahf
insb
dec
in
inc
pop
push
out
inc
mov
outsl
push
push
and
jbe
outsb
push
inc
mov
jl
pop
out
jns
stos
xchg
es
rolb
xor
mov
icebp
aaa
sbb
mov
ret
or
mov
das
mov
pop
add
or
add
enter
in
addr16
test
pop
xchg
ret
xchg
sub
out
nop
mov
inc
aam
push
xchg
mov
mulb
pop
add
jmp
outsb
cs
outsl
movsl
mov
out
mov
data16
fimuls
scas
addr16
mov
arpl
lods
push
mov
gs
and
out
rcrb
in
dec
lcall
fstps
mov
push
jno
ss
sbb
pop
mov
and
pushf
xchg
dec
andl
stos
iret
rcr
sarl
jo
jp
jns
push
aad
push
inc
and
loopne
sti
addr16
sub
mov
inc
aam
dec
push
popa
add
jae
fsubrs
push
pusha
clc
mov
test
dec
inc
jbe
jns
aas
push
add
lret
outsb
lret
mov
cmp
sbb
pop
jae
mov
pop
scas
pop
jp
mov
lods
stos
lret
jecxz
sarl
jo
jecxz
cwtl
add
movsl
popa
push
sub
push
std
icebp
jnp
jnp
movsb
xchg
test
enter
mov
or
adc
les
imul
xor
ss
mov
sbb
push
dec
cmp
ds
mov
ljmp
dec
fildl
pusha
lret
xchg
and
lret
cltd
sub
mov
ds
pusha
jns
js
loopne
int
mov
cltd
outsb
test
mov
rorb
in
and
jae
dec
push
out
adc
bound
inc
adc
add
stc
sub
jne
in
mov
xor
push
int3
dec
cmp
push
adc
rcrb
xlat
pop
xchg
and
mov
adc
imul
mov
pop
push
addr16
mull
into
mov
jo
dec
sbb
dec
mov
jo
in
lods
adc
inc
pop
test
lahf
xor
inc
inc
cli
popf
scas
sbb
pop
push
out
jno
inc
popa
cmp
dec
xchg
ficoms
mov
leavew
aad
sbb
mov
sub
andb
jno
rclb
mov
dec
cmp
dec
dec
ds
xchg
or
sbb
jo
test
sub
insl
gs
inc
adc
ss
popf
jae
in
push
mov
insl
imul
enter
xlat
jle
cmp
sub
xchg
mov
mov
sbb
addr16
adc
sub
out
inc
fs
arpl
cmc
jns
cmpl
in
sbb
data16
pop
inc
push
fxch
pop
xlat
sti
das
cwtl
xor
sub
pop
cwtl
daa
mov
lock
sahf
cwtl
aam
add
mov
aam
push
fcoms
out
les
or
sbb
jbe
jns
xlat
jne
pop
cld
pop
jl
ljmp
sub
insl
push
out
push
jns
inc
movsl
data16
fisubl
js
xchg
cmp
ljmp
iret
mov
clc
dec
mov
nop
lahf
sti
cltd
mov
sbbl
in
pop
sahf
test
and
xchg
cmp
cli
dec
cmp
fdivrl
sub
add
mov
sub
imul
lret
sub
cmp
add
adc
adc
dec
mov
sti
mov
mov
mov
push
add
test
cmp
pop
nop
and
adc
or
pop
sbb
imul
lahf
lds
push
push
cwtl
sbb
xchg
sbb
imul
mov
pop
insb
add
mov
push
adc
ja
push
mov
insb
je
daa
jns
add
repz
xchg
xor
xchg
sbb
pop
xchg
and
pop
inc
rcrl
sbb
aad
std
test
add
fs
xchg
scas
nop
leave
aaa
add
dec
xor
mov
incl
ret
pop
std
stos
lahf
adc
popf
ret
jb
add
dec
hlt
mov
push
nop
sub
jp
cmp
scas
imul
stos
sub
or
xchg
lret
jp
out
xor
or
scas
jp
mov
das
push
sbb
xchg
jmp
psraw
ds
repz
pop
push
xchg
adc
ret
mov
mov
adc
ss
sbb
or
mov
imull
xchg
out
xchg
xor
test
ljmp
dec
ja
jecxz
inc
jmp
add
xor
shl
lods
mov
dec
or
rol
xor
pop
arpl
ds
inc
in
mov
cmc
aam
push
jb,pt
dec
stos
test
xchg
jl
adc
cltd
add
int3
lea
pop
mov
vpmacsdd
iret
push
and
data16
xor
into
xor
sti
xchg
inc
push
rcll
jo
aad
pop
loope
pusha
sbb
ret
fdecstp
lds
pop
fmuls
orb
inc
xor
mov
pop
data16
lret
sbb
sarl
ret
mov
lea
sub
jecxz
fimull
xchg
mov
or
jbe
push
inc
adc
mov
cmp
iret
add
push
shrl
jecxz
into
cmovbe
fdivs
movsb
xlat
cmp
sbb
daa
fildl
ja
sub
jne
iret
xchg
dec
and
mov
fildll
push
popa
jg
fadds
pop
pop
push
jl
daa
jg
lcall
mov
iret
cmp
dec
mov
push
sub
push
fstl
mov
pop
jl
ds
dec
sbb
sub
sbb
sub
cmp
push
in
jge
xchg
jne
add
sub
xchg
and
xchg
or
std
cmp
sub
adc
inc
fldt
imul
lock
sub
or
jmp
add
jno
outsl
mov
jae
daa
inc
sbb
inc
jle
mov
or
aaa
loope
mov
notl
ret
subl
scas
jp
push
push
push
leave
jl
iret
ja
xor
jge
add
out
popf
out
popf
bound
testl
cwtl
ss
insb
cmpsl
scas
testb
cli
sahf
add
rorb
stc
dec
mov
mov
fwait
mov
arpl
daa
sub
imul
andl
cmpsl
and
sub
mov
test
and
jb
sbb
add
jmp
sar
out
xchg
push
rcrb
and
lret
xchg
mov
adcb
xchg
std
stc
aas
gs
sub
mov
insb
stos
sbb
fcomps
pop
sub
mov
add
scas
xchg
bound
ret
or
push
int3
out
push
jbe
fwait
pusha
xchg
in
adc
mov
inc
pop
xchg
xchg
dec
scas
sub
arpl
push
fbld
test
cld
adc
sbb
lcall
clc
sbb
rcl
xchg
adc
pop
cmp
lock
sbb
mov
lret
push
mov
dec
pop
inc
jns
mov
test
pop
pop
sbb
pushf
aam
mov
das
mov
and
clc
cmpsl
lret
fistpl
xor
hlt
inc
mov
push
or
xchg
and
ja
movsb
cmp
jle
stc
jae
repz
inc
fwait
out
cli
xchg
jns
xlat
scas
int
fnstcw
int3
sub
popa
ja
jbe
iret
int
lods
mov
mov
int
stos
call
aad
sub
ret
cwtl
add
mov
imul
adc
adc
mov
subb
lea
cmp
std
inc
out
orb
dec
ja
xor
jp
insb
lods
cmp
jb
icebp
sub
jecxz
fstpl
dec
out
jmp
mov
pop
mov
pop
pop
jecxz,pn
inc
pop
int
lock
inc
mov
je
mov
into
insb
jnp
push
add
scas
mov
decl
xchg
in
cmpb
jo
outsl
and
xchg
aam
sbb
jmp
xchg
push
iret
arpl
fsubl
call
repz
xchg
mov
movsl
xor
pop
add
inc
mov
jae
ds
cmp
movsb
mov
or
mov
mov
inc
neg
scas
aam
lret
cmp
push
xor
sbb
bound
and
cld
push
mov
dec
int
xorl
adc
loop
iret
enter
mov
mov
or
xchg
xor
mov
or
xor
scas
push
loop
mov
ds
nop
shrb
xchg
cmp
sar
jae
sbb
xchg
ret
jns
arpl
mov
jns
sub
movsl
xor
outsl
test
push
outsb
out
imul
xor
xor
sbb
ds
data16
jb
pop
inc
mov
cltd
cld
mov
fimuls
sbb
xlat
inc
mov
lea
dec
outsl
fldl
int3
in
pop
out
rcrl
rclb
dec
cmpsb
push
adc
add
add
xor
je
pop
and
lods
mov
cmp
outsl
in
test
push
or
cmp
out
in
movsb
dec
popa
std
imul
jae
arpl
lea
jg
pop
pop
mov
mov
mov
jp
mov
stos
adc
shl
pop
clc
mov
lods
push
out
or
xchg
cmpsl
xchg
movsl
sbb
out
ret
sbb
je
bound
dec
cmp
push
sbb
inc
sarl
mov
mov
cmc
inc
stos
dec
dec
clc
dec
imull
cwtl
aas
xchg
mov
cld
jbe
daa
aas
fstpt
sbb
in
pop
xor
in
dec
jg
jmp
adc
idiv
inc
sub
or
or
lods
jno
popa
filds
repnz
out
test
cli
jecxz
lods
push
push
cmpsb
int3
dec
movb
cmp
sub
nop
cmpl
mov
repnz
aam
aaa
nop
mov
scas
out
imul
dec
xor
add
jo
sub
push
mov
push
icebp
test
mov
pop
dec
xchg
test
rcrb
das
fcmovu
ret
pop
mov
hlt
xor
lock
das
ds
xchg
mov
add
repz
divb
push
and
or
and
testl
stos
pop
pop
and
fildl
test
ret
jo
fsubs
pop
or
fldenv
xchg
cmpb
xchg
ds
ss
or
out
sbb
cld
aas
arpl
sbb
insl
pop
bound
ret
adc
mov
lods
lds
push
adc
lcall
jecxz
mov
pop
aam
out
pop
xchg
scas
sahf
ja
pushf
jbe
aad
mov
cmp
sbb
cmp
and
aam
jbe
xchg
in
lcall
inc
cld
jge
jae
push
ds
je
push
add
pop
inc
cltd
popl
jno
rorb
fsub
aad
add
sbb
test
push
push
outsl
push
ljmp
outsb
into
popa
adc
push
stos
rcr
incl
mov
adc
jno
lret
adc
push
lock
test
cmp
popf
outsb
lret
and
mov
dec
dec
xor
ja
mov
outsb
daa
lcall
mov
fistl
lds
push
loop
mov
jno
cmpsl
or
push
stos
fidivl
es
mov
push
or
add
inc
and
addb
inc
mov
pop
insb
jne
or
push
icebp
ds
sbb
repnz
aaa
fucomip
cmp
dec
cmp
dec
std
pop
xor
ficoml
adcl
call
stos
lea
aas
popl
mov
push
lret
scas
or
sub
or
jle
fdiv
pushf
xchg
mov
aam
leave
sbb
jns
sub
es
or
nop
xchg
decl
mov
sub
ss
pop
das
xor
dec
icebp
roll
cltd
stc
jmp
cli
gs
dec
subl
adc
outsb
xchg
scas
inc
cs
ss
sahf
adc
sahf
push
stc
sub
and
xor
outsl
int
aas
cmp
adc
fs
xor
test
addr16
testb
aaa
dec
jo
adc
mov
fbstp
repnz
imul
sub
mov
ret
shrl
addr16
test
addl
inc
sbb
call
pop
ficompl
lds
cmp
mov
sbb
sub
adc
jo
add
mov
movsl
lods
rol
dec
es
mov
mov
ds
inc
test
pusha
imul
in
adc
call
xchg
scas
jmp
call
cmpsb
test
icebp
and
jle
insb
sbb
push
es
ret
cmp
jl
mov
xor
pop
push
adc
loope
dec
hlt
push
out
xchg
loop
addb
imul
add
mov
mov
pop
insb
and
cli
addr16
or
loopne
push
add
jo
call
out
std
dec
lods
call
gs
orl
adc
sbbl
mov
jns
lret
jg
enter
inc
aad
ja
lods
sbb
js
cmp
imulb
les
aaa
push
pusha
mov
push
sbb
jg
ror
int3
lods
into
sarl
lret
xchg
ds
add
mov
pop
daa
cltd
cmpsb
out
jge
out
ret
mov
shlb
xor
or
fwait
xchg
push
mov
push
cmp
pushf
cmpb
and
adc
pusha
ss
rcrb
xorl
ficomps
or
incb
push
jb
das
mov
xchg
pop
sub
push
or
movb
mov
mov
xchg
xor
mov
rorb
cmp
fnstcw
or
int
and
in
jne
mov
inc
or
adc
pushf
rcll
enter
scas
sahf
orb
mov
or
mov
shlb
scas
pop
jne
jb
lcall
in
cld
mov
insb
push
mov
inc
sbb
inc
inc
sub
sbbl
dec
icebp
jb
and
leave
outsb
dec
psllw
mov
daa
out
adc
in
and
push
add
mov
jae
pop
pop
das
clc
sbb
les
repnz
inc
sbb
sahf
sarb
cmp
rorl
add
sub
inc
or
sti
xor
testb
pop
push
arpl
jae
rol
and
mov
pusha
aaa
xor
mov
sub
mov
pushf
xchg
sub
push
jne,pt
jno
sub
jo
orb
push
sbb
popf
xchg
xchg
xchg
xor
mov
mov
fidivs
lods
mov
jp
xchg
pop
not
pop
imul
subb
mov
push
int
mov
aad
lods
lods
cmpsl
xor
and
mov
mov
xchg
cld
rcll
jb
sub
inc
fidivrl
pop
nop
int
pop
pop
adcl
jle
aas
iret
dec
add
sbb
lea
addr16
add
out
mull
scas
inc
inc
aad
sub
fs
pop
loopne
sbb
xchg
repnz
jl
mov
cmp
mov
dec
mov
xor
arpl
mov
cs
add
repnz
int3
push
imul
subl
xor
inc
jecxz
adcb
wbinvd
sbb
out
push
das
mov
insl
ficomps
inc
mov
popf
aaa
mov
js
mov
daa
ljmp
out
add
lret
pop
inc
push
lfs
xchg
cwtl
or
pop
push
cmp
repz
daa
sahf
adcb
idivl
xor
adc
ja
xchg
xchg
xor
or
add
inc
and
ret
les
push
pop
movl
in
js
jle
mov
jge
add
enter
ds
jle
mov
jmp
add
insl
fcomps
icebp
cltd
pusha
cli
or
lret
mov
pop
xor
jno
jns
pop
fdivrl
inc
inc
add
negl
imul
iret
lahf
jno
push
mov
sahf
mov
out
imul
jno
jge
cld
rorb
pop
sub
or
push
or
mov
test
ss
or
adc
gs
mov
push
gs
repz
les
cwtl
adc
lcall
fisttpll
mov
sar
mov
outsl
jb
cltd
jno
mov
hlt
lods
jl
rcrb
fwait
out
add
mov
in
jns
pop
lret
push
add
add
adc
xchg
sti
fcoms
in
clc
jmp
arpl
cs
bound
movsl
jno
cmp
mov
int3
cli
idivl
mov
xor
xchg
outsb
aam
rclb
out
push
les
jp
pop
test
push
sti
inc
cld
sbb
pusha
fstpl
fstpl
fdivrs
std
shll
mov
repz
insl
mov
add
lahf
mov
jge
mov
gs
cmp
adc
es
out
push
fidivl
out
and
push
mov
incb
sbb
add
xchg
jno
lcall
popa
pop
mov
sbb
mov
mov
add
mov
rcrl
push
xor
mov
xor
faddl
mov
dec
or
jb
adc
stc
dec
nop
mov
ja
push
push
jmp
pop
or
mov
push
decb
rcr
movsl
sbb
lret
push
xor
push
xchg
adc
mov
add
mov
cmp
jl
imul
fdivp
les
sub
mov
xor
dec
mov
or
daa
insb
icebp
lret
mov
dec
push
ret
call
cmpsb
lahf
or
ss
into
pop
js
scas
in
outsl
fcmove
hlt
lock
xchg
in
daa
mov
mov
scas
pop
repz
imul
pusha
insb
add
sbb
xchg
dec
mov
adc
add
mov
pop
icebp
and
hlt
jbe
sahf
jae
fnstsw
in
aas
jo
roll
fistpl
ja
cmpsb
add
ja
and
lret
dec
stc
mov
or
mov
xor
inc
xor
adc
sbb
jmp
aas
xchg
test
or
leave
push
inc
bound
cmp
jb
mov
orb
cmp
idiv
pop
cmp
fadd
push
cli
inc
sub
inc
mov
out
sub
imul
pop
lods
stc
ds
ret
adc
adc
lea
xchg
xor
iret
clc
bound
je
mov
pushf
fmulp
jp
faddl
and
pop
or
lea
xor
push
int
dec
aas
mov
insl
in
nop
test
inc
ficoms
dec
daa
cmp
pop
mov
je
jae
mov
xor
xchg
pop
mov
repz
cwtl
mov
jp
adc
mov
push
les
fcmovu
notl
mov
xchg
aam
push
addr16
mov
mov
lock
icebp
sarb
mov
dec
xchg
lea
sub
sar
mov
adcl
push
xor
cltd
fdivl
add
mov
jae
pop
in
lds
push
aaa
shll
lahf
xchg
mov
outsb
jle
sbb
dec
fdivs
scas
mov
sub
mov
int3
les
sti
fcmovnbe
dec
adc
data16
adcb
mov
xchg
test
scas
iret
imul
pop
pop
cmp
out
arpl
pop
rcll
popf
ss
xor
mov
daa
mov
mov
aas
xor
sub
dec
neg
insb
add
rcll
mov
jge
and
add
aaa
push
mov
dec
cmp
je
dec
loope
mov
mov
push
mov
scas
stos
pop
add
mov
das
sbb
sub
dec
jne
cld
cmpsb
and
loop
movsl
dec
gs
data16
test
push
and
insb
pop
dec
xchg
or
es
xlat
movsb
fistl
shlb
pop
cmp
push
jb
mov
bound
inc
jns
in
lahf
fptan
or
in
scas
push
push
hlt
lret
mov
in
add
cli
rcl
ret
das
in
js
lods
or
pop
bound
jae
and
xchg
outsb
loop
pop
ret
hlt
das
cld
jno
in
push
popf
negl
nop
mov
call
shll
xchg
add
sti
fisttps
sub
and
je
mov
mov
test
lcall
std
and
mov
pop
pop
push
aad
cmp
xchg
outsb
sti
movsl
fmull
sbb
pop
cmpl
lahf
or
sbb
aaa
outsl
xchg
test
outsl
call
fsubl
lea
cli
pop
movsl
pop
mov
xor
push
call
xchg
xchg
shll
sub
test
mov
insl
xchg
dec
in
aad
or
push
inc
mov
and
xchg
insl
ljmp
push
inc
sbb
push
stc
cmpb
mov
and
popl
or
cmp
or
jb
enter
icebp
xor
mov
jp
insb
xor
and
test
sbb
inc
cwtl
into
xor
gs
dec
pop
xor
push
lods
test
pop
lock
inc
mov
scas
fsubrp
sbb
aad
mov
jg
sub
xor
sub
bound
pop
fs
lret
leave
lods
dec
int3
mov
pushf
hlt
adc
into
rcll
repnz
and
cmp
push
push
cmp
or
sub
mov
push
mov
push
shlb
pop
pop
cmp
mov
sbb
sub
dec
cmpsl
icebp
xlat
xor
dec
outsb
xchg
adc
inc
je
sti
insb
sbb
inc
sarb
jecxz
xchg
cs
rorb
lock
add
jp
rcrb
hlt
jo
xor
aaa
pop
sbb
dec
dec
dec
sub
adc
jge
sbb
pop
push
jmp
stos
jge
and
and
sahf
dec
cld
mov
push
nop
lock
xlat
mov
pusha
mov
lock
imul
mov
pop
pop
mov
mov
out
pop
jnp
jo
jno
xor
jp
adc
popf
inc
push
ret
jge
dec
scas
les
push
dec
daa
lret
out
in
inc
stos
pop
cmp
ljmp
mov
adc
test
mov
clc
cmp
imul
or
sbbb
jb
aam
das
mov
popa
jl
ret
sub
loope
in
jge
pop
dec
sarl
inc
or
inc
inc
nop
repz
dec
hlt
cmpsl
dec
add
dec
xchg
cmp
adc
std
xor
push
add
fs
add
xor
dec
sarl
jnp
andb
mov
test
ret
ret
push
mov
cltd
mov
add
jp
or
dec
call
inc
outsb
sbb
sbb
dec
jb
insb
out
xlat
or
cli
repnz
mov
cmpsl
pop
nop
xchg
pop
push
and
mov
push
inc
xor
das
mov
sbb
popa
mov
loop
xchg
fdivrs
in
xchg
fsub
mov
dec
mov
pop
push
sbb
repnz
pop
test
jne
in
mov
lret
mov
sarl
mov
adc
in
int3
popa
icebp
ret
mov
sub
sbbb
push
xor
jle
and
mov
movsb
cmp
mov
push
or
stc
dec
xchg
insb
jb
mov
add
jnp
in
lahf
mov
sbb
mov
mov
sub
ret
push
xchg
ds
adc
xchg
aam
xchg
mov
out
lods
daa
fdivl
int
lret
sbb
cmpsb
add
mov
ret
subl
bound
xor
scas
xchg
out
pop
xchg
xchg
jmp
push
sbb
or
test
mov
mov
cmp
fwait
cmp
scas
pop
mov
and
cmc
adc
sahf
mov
std
cmpsb
sbbl
and
data16
lret
xchg
fsub
jp
aam
outsl
es
cmpsl
flds
fidivl
lds
add
inc
shll
out
fisubl
imul
nop
jnp
xor
ljmp
mov
xlat
mov
nop
pop
fnstcw
add
inc
cltd
cmp
adc
lahf
jne
std
inc
add
sti
cmp
pop
mov
dec
lret
imul
add
adc
popf
scas
ret
xchg
rcl
stos
adc
aas
pop
int3
cltd
cmp
jmp
test
in
pop
shrl
inc
scas
lods
pavgb
mov
and
cltd
push
nop
sub
mov
sbb
test
push
or
xorl
mov
loope
mov
cmc
mov
repnz
mov
mov
jno
ficoms
shl
fdivs
loope
add
repnz
cs
mov
dec
push
jno
push
ficoml
popa
inc
je
fidivrs
aas
inc
or
out
mov
icebp
aam
mov
adc
mov
mov
jg
xor
pop
in
jp
mov
bound
in
stos
lock
mov
xor
adc
dec
inc
sti
push
scas
ja
sub
add
mov
adc
jb
mov
rcrb
inc
and
push
hlt
mov
add
test
js
mov
or
xor
adc
xchg
adc
jbe
xor
cmp
jb
rclb
or
loopne
xchg
fcoms
jbe
and
in
sbb
sbb
ss
cmc
cld
mov
mov
dec
pop
loopne
xlat
andl
adc
and
xor
pop
lea
cmp
jp
scas
push
call
jl
dec
dec
mov
sbb
les
push
cmp
xchg
call
push
fbld
sbb
fldl
mov
cltd
xor
bnd
pop
loopew
inc
push
push
repnz
ds
popa
cld
gs
push
cmpsb
sub
out
popa
mov
flds
cltd
lcall
pop
inc
sahf
push
movb
stos
leave
flds
adc
lods
or
in
sarl
jecxz
dec
cld
lret
pop
fwait
mov
inc
pop
and
jae
mov
test
pop
insl
neg
stos
jb
adc
ret
mov
in
cmp
mov
push
mulb
fistpl
pop
std
or
out
or
push
inc
dec
or
shrl
push
mov
pop
jge
push
mov
fwait
or
int3
inc
or
repz
cmp
test
pop
rcll
adc
popl
jl
leave
movsb
inc
decl
xsavec
jae
add
inc
cmp
lret
sbb
enter
inc
sub
fstpt
dec
mov
loope
shll
xchg
dec
or
mov
sbb
sahf
xchg
clc
cmpsb
lods
push
mov
mov
fnstcw
jns
dec
cltd
mov
mov
jp
mov
push
jb
call
or
mov
dec
mov
sbb
ds
aam
xchg
imul
decb
add
popf
imul
xchg
int3
je
jge
add
pop
cmc
xor
mov
xchg
pop
sbb
or
lret
sarb
mov
push
mov
fwait
sbb
mov
fdivrs
cmp
nop
cltd
or
cltd
sub
mov
test
incl
fxch
dec
push
and
into
pop
cmc
sub
push
cmpsb
inc
hlt
xlat
push
add
add
lock
xchg
sahf
jge
jl
outsl
xchg
jge
inc
push
pop
push
pop
and
jecxz
jle
popf
pop
push
stc
or
push
std
mov
xor
cli
bound
inc
add
jo
outsb
cmp
sti
sbb
repnz
fdiv
fucomip
xchg
scas
gs
imul
cmp
mov
dec
cmp
int3
loope
push
pushf
jmp
inc
lods
fnstenv
fs
add
jo,pt
into
xchg
inc
jp
in
add
loopne
push
push
sbb
lcall
and
dec
sahf
ret
jno
jg
dec
push
or
mov
dec
pushf
push
cmp
mov
clc
mov
adc
jp
adc
shlb
sub
js
mov
push
dec
pusha
repnz
push
into
jo
mov
repnz
std
push
test
push
inc
pop
sub
lock
test
mov
dec
cmp
add
lods
out
add
cmp
pop
ficomps
cmp
sbb
cmp
cmp
int
pop
jge
stos
cld
ja
flds
jno
arpl
nop
jnp
mov
inc
mov
movsl
inc
or
mov
ja
or
and
fsub
pop
jo
push
fcmovbe
adc
shl
push
dec
idiv
js
push
and
inc
test
roll
rcll
or
or
bound
mov
jno
xor
push
lcall
dec
push
repz
lret
cmpsb
mov
cmp
xchg
pop
sub
sbb
incb
and
imul
ljmp
andl
cmp
fstpt
ss
mov
sbb
add
je
xor
fimull
mov
add
call
dec
mov
sti
cwtl
pop
inc
and
mov
out
insb
mov
addl
repnz
mov
xor
push
jle
faddl
popf
insl
aad
adc
les
arpl
and
dec
mov
repz
jnp
out
mov
mov
enter
mov
imul
mov
scas
mov
cmp
int
rorl
push
loope
or
loop
and
daa
dec
cmp
data16
and
rorb
dec
call
jbe
mov
jnp
push
jb
mov
dec
dec
sbb
aad
rorl
ljmp
es
in
xchg
jmp
push
sbb
in
adc
loopne
cmp
insl
nop
ret
pushf
pop
mov
jg
aad
pop
add
bnd
sbb
xor
aam
xor
aaa
mov
xor
sub
scas
push
orl
movsb
dec
mov
cmpl
pop
cmp
movsb
aaa
and
inc
push
mov
cld
or
sub
loopne
cmp
stos
add
imul
jl
ljmp
call
inc
lock
aam
xor
mov
sbb
or
scas
addr16
jl
repnz
loope
insb
mov
jp
adc
dec
inc
imul
enter
jne
add
int3
fbld
mov
mov
sub
xchg
jo
xchg
jmp
div
push
repz
in
jno
sub
iret
jmp
mov
pop
cld
imul
mov
jle
lods
loopne
xchg
divb
std
fildl
inc
mov
inc
dec
seto
int
fwait
inc
sbbb
movsb
and
lahf
clc
fistl
mov
mov
dec
daa
lods
mov
mov
pushf
mov
int3
jo
or
jp
out
pop
push
xchg
mov
jbe
ret
dec
jmp
test
mov
xchg
mov
add
xor
mov
pop
jnp
inc
cmp
push
addr16
adc
add
test
push
repz
jns
inc
jnp
xor
lock
popa
cmp
test
pop
xchg
int
add
fbld
cmp
mov
jg
push
out
das
fistl
repz
repnz
mov
pusha
adc
das
xor
cmp
mov
xchg
sahf
mov
mov
aas
sub
mov
lcall
scas
mov
adc
sahf
cmp
mov
cmpsl
mov
mov
dec
sbbl
xchg
stos
adc
mov
inc
aaa
jmp
cmp
push
pop
xchg
mov
jge
decl
daa
push
and
inc
mov
shll
stos
adc
cltd
mov
add
lods
sub
xchg
fldcw
cmp
mov
sub
jle
shrb
inc
lret
dec
xchg
inc
mov
test
pop
jmp
ds
js
push
pop
sarl
pusha
add
jne
test
mov
popa
push
add
fisubrl
pop
aas
pushf
lods
ljmp
push
or
rclb
dec
or
jno
bswap
jle
mov
std
pop
cmp
ret
shll
push
cmp
pop
or
lods
fsubs
jmp
loope
xor
mov
mov
push
mov
mov
fistpl
imul
push
jg
mov
mov
mov
mov
pop
addb
adcb
out
xchg
fldt
push
inc
dec
add
adc
les
push
daa
addb
daa
fimull
pop
adcl
call
bound
into
pop
jae
inc
cmpsb
mov
or
inc
xchg
pusha
stos
push
or
or
sub
fdivrp
xor
incb
bound
jge
sbb
lea
adc
inc
mov
jp
jb
pop
push
outsb
andb
xchg
or
sub
jg
xchg
mov
inc
mov
xor
gs
ret
in
push
xor
out
inc
outsl
jno
push
cmp
push
mov
and
fsubrl
ds
mov
xchg
popf
sub
test
sbb
xchg
das
mov
cli
pop
in
and
push
xchg
int
nop
leave
xchg
dec
call
pop
std
in
add
lahf
nop
cmp
loope
popf
cltd
int
jbe
icebp
imul
mov
sub
data16
daa
mov
je
xchg
lret
mov
adc
add
bound
into
and
sbb
out
orl
js
adc
test
decl
lock
lcall
sarb
jg
dec
adc
pop
jl
mov
aaa
jbe
mov
mov
adc
and
out
add
jg
cs
push
aad
sbb
repz
aas
mov
lock
stos
mov
sbbb
fldl
mov
arpl
out
aam
ret
sarl
adc
loopne
imul
inc
jp
mov
ret
ror
lods
jb
push
scas
loopne
ljmp
mov
int
pop
sbb
sbb
test
mov
decl
movsl
push
mov
fcoml
mov
mov
lods
lret
dec
sbb
movsl
or
sbb
cmp
xchg
pop
push
jb
push
imul
pop
pop
jnp
mov
mov
inc
pop
and
jge
outsl
in
fsubs
das
icebp
sub
push
xor
xor
stos
push
xchg
in
lock
ljmp
pop
in
jmp
out
mov
inc
shrl
insb
repz
repnz
inc
jle
pop
and
add
repnz
jmp
sahf
pop
jmp
movsl
dec
sbb
push
xor
das
inc
mov
mov
in
sti
orl
pop
xor
xchg
outsb
imul
fdivrs
bound
pop
lret
lods
xchg
adc
sub
lahf
cld
add
loope
cs
jbe
iret
inc
pop
roll
imul
jg
push
stc
pusha
lret
imul
jmp
lret
rolb
repz
icebp
jecxz
and
xchg
jbe
sti
ficompl
popf
push
jns
cmp
addr16
shr
enter
inc
das
inc
ja
inc
inc
outsb
xchg
out
rolb
lret
mov
and
cmp
jge
lcall
dec
insb
mov
sub
insl
pop
ja
sub
xor
je
jnp
cmc
xor
sbb
test
inc
xor
inc
cld
xchg
sub
pop
fwait
stos
xor
ss
xchg
sub
pop
repz
call
add
mov
or
pop
aam
pop
imul
push
adc
and
lds
sub
out
in
inc
mov
sub
jnp
nop
mov
inc
or
adc
rcr
cmc
ret
dec
mov
aad
test
push
push
ret
mov
and
aam
je
mov
mov
mov
and
insl
xor
xor
sub
mov
pop
mov
jae
rcl
repnz
fbld
test
movsb
aad
add
mov
rcr
inc
dec
hlt
push
dec
inc
loop
push
adc
xor
dec
xchg
lods
mov
fninit
xchg
sub
pushf
pop
xchg
add
in
out
in
pop
mov
sarb
lea
adc
pop
mov
pop
das
lods
lcall
dec
and
repnz
call
or
sbb
decl
sub
push
loope
cmp
mov
in
mov
outsb
mov
pusha
mov
sub
outsb
add
adc
mov
sub
cmp
insl
pop
js
inc
sub
jo
cmpsl
loope
sahf
push
push
sbb
xchg
cmc
and
fadd
pop
jmp
mov
sbb
mov
sub
jae
outsl
sbb
cmpb
adc
in
xlat
cltd
xor
jecxz
cmp
mov
aaa
aaa
in
mov
jmp
loop
fbstp
or
jns
ljmp
outsl
lea
stos
jbe
inc
sbb
jns
add
push
ficoms
push
test
out
adc
sti
ret
scas
jg
xchg
ljmp
xchg
xchg
sbb
xorb
pop
ja
fdivrl
cmp
jnp
mov
and
gs
xor
jns
push
pop
jp
loope
inc
sbb
lea
mov
jns
sti
fstpl
addr16
nop
test
or
nop
lods
dec
jb
or
scas
and
cmp
cmpsb
sbb
jo
xchg
add
movsb
test
ret
in
shll
or
lods
subb
bound
push
or
or
sbb
mov
movsl
jnp
shrl
sahf
icebp
ret
mov
shr
out
push
dec
stos
test
adc
pop
fcompl
std
push
cmp
fstps
adc
lock
jl
xor
push
nop
cmp
dec
inc
mov
rcll
test
inc
add
pop
repnz
and
push
test
pop
mov
fidivl
push
fsub
dec
jp
ds
jmp
out
inc
or
dec
aam
daa
insb
inc
inc
rep
fwait
mov
insb
jns
loop
and
outsb
dec
fmull
xor
cltd
dec
sub
mov
adc
cmp
mov
daa
and
aad
addr16
inc
push
je
movsb
push
adc
cli
ja
inc
add
out
mov
jo
push
jmp
mov
fldenv
sahf
lock
mov
neg
add
in
sub
mov
add
xor
rcll
push
or
loop
das
xchg
mov
aad
add
sbb
or
jno
dec
sti
jae
push
outsl
cmpb
std
enter
push
mov
gs
ret
pop
sub
mov
jp
data16
das
es
xor
or
or
pop
cmp
daa
jo
adcb
loop
idiv
jmp
add
cmp
pop
inc
mov
leave
out
loop
insb
inc
pop
lds
inc
xchg
ret
xor
hlt
push
fisubl
xor
cmpsb
cmp
cs
sub
and
cltd
sub
xchg
in
push
popa
mov
dec
aad
stos
int3
pop
xchg
int3
mov
mov
mov
scas
push
ja
or
push
aas
xor
inc
xor
test
add
xchg
lcall
repz
lea
mov
sbb
pop
and
insb
cltd
mov
add
mov
adc
sub
addr16
inc
cmp
movsl
push
sbb
ss
insb
pop
js
fdivrl
out
fwait
push
leave
call
dec
ljmp
adc
ss
jl
lods
inc
cmovp
ja
add
lods
outsl
mov
mov
sbb
cltd
fcoms
xchg
mov
imul
imul
add
arpl
mov
push
stc
push
push
shlb
sub
and
arpl
cmp
jne
inc
sub
lds
adc
movsl
add
cmp
xor
dec
mov
jg
jg
aad
push
sbb
sbb
sarl
xor
cmpsb
xchg
inc
cmp
xor
xchg
sahf
sahf
insb
push
dec
ss
mov
sub
mov
xchg
xor
jmp
ja
jl
hlt
inc
sbbl
hlt
lock
xchg
test
sahf
js
dec
jp
mov
sar
in
enter
scas
or
dec
lahf
pop
repz
insl
iret
mov
mov
pop
inc
push
cmp
xchg
pop
dec
jno
xchg
and
inc
jle
dec
ret
gs
js
iret
int
shll
sub
imul
push
bnd
pushf
sub
mov
xor
pop
pop
jg
test
xchg
push
mov
cld
push
in
push
mov
int
pop
sbb
sub
mov
ret
jl
call
stos
shrb
xchg
out
pop
test
jo
loopne
sub
cmc
sub
es
mov
sub
push
and
fimull
cltd
fistps
sbb
push
xor
xchg
jne
daa
or
mov
jo
lea
push
push
out
fsts
xor
ja
pop
xor
aam
dec
scas
mov
out
ror
dec
or
push
leave
lds
addr16
sbb
cld
adc
lret
outsl
mov
and
nop
sbb
testb
xchg
pushf
jno
sbb
and
lret
in
test
pop
jns
insb
pop
movsl
sahf
sarl
mov
mov
and
out
daa
cmc
insl
fwait
cmc
add
out
mov
xor
nop
push
fcoml
scas
fisubrs
fcoms
add
adc
aas
andl
lcall
inc
mov
jb
xchg
push
pusha
and
lock
mov
push
xchg
jmp
insl
add
xor
mov
add
imul
or
dec
imul
push
cmp
and
jle
ret
inc
movsl
xchg
stos
aad
cltd
loope
scas
lahf
dec
lret
jnp
fs
cmpl
jecxz
add
mov
dec
fmulp
sbb
and
mov
xor
les
out
dec
rcll
cmp
xor
test
notb
out
sub
ja
or
mov
mov
mov
out
imul
enter
aad
xor
mov
pusha
cmp
or
jge
push
dec
fiaddl
popa
mov
cmp
mov
lret
lods
hlt
cltd
cmpsl
into
jo
sbb
jl
and
ljmp
or
bound
mov
enter
sbb
int3
pop
stos
push
push
jne
cmpb
test
xchg
adcl
mov
inc
add
add
das
daa
push
faddl
movb
push
push
mov
mov
or
mov
inc
mov
mov
mov
fcoml
outsb
fstl
pop
arpl
fsub
dec
nop
out
pop
ss
mov
lods
ds
jmp
stc
cli
mov
xchg
je
sub
sub
adc
aaa
mov
out
movl
in
or
pop
cmp
pusha
inc
enter
sub
popa
pop
aam
aas
and
dec
cli
pop
xchg
addl
mov
pop
mov
in
mov
cli
push
xor
mov
pop
pop
cmp
enter
stos
mov
push
lods
adc
inc
mov
cwtl
fdivrl
cmp
bound
movsb
mov
aaa
je
sarl
outsl
xor
dec
loopne
leave
arpl
cltd
push
popaw
adc
fcmovu
mov
mov
cmpsb
sbb
cs
add
in
cmpsb
ficomps
ja
fdivs
nop
lock
iret
test
inc
push
add
in
popf
pop
shl
add
inc
out
push
cltd
mov
mov
insl
std
sub
and
jle
mov
es
adc
dec
in
test
mov
cmpsl
aaa
sub
or
aas
sbb
mov
inc
mov
dec
ljmp
fcmovb
xlat
jno
ljmp
cmpb
sbb
ret
mov
push
push
dec
add
dec
xlat
orb
fs
aad
sub
inc
adc
les
mov
jb
insb
in
jmp
ljmp
pop
repz
cmp
inc
add
xchg
stos
int
lods
mov
and
subl
push
mov
hlt
add
add
push
dec
pop
add
call
test
cld
sub
iret
cmovnp
sbb
mov
mov
fnop
imul
adc
sbb
mov
xor
mov
stc
or
push
cmpsl
dec
inc
inc
mov
nop
push
xor
cmp
pop
jns
std
jle
data16
movsb
adc
jp
mov
icebp
and
in
adc
add
mov
int
fiaddl
fdivrs
ret
pop
imull
inc
jnp
loopne
insb
mov
xchg
sbb
mov
int
jo
push
imul
lock
push
subl
aam
jg,pt
mov
fs
jae
push
mov
nopl
push
push
js
ror
cmc
in
cvtps2pi
pop
sub
pop
mov
add
push
xchg
push
pop
cmp
fs
add
gs
cmp
mov
inc
and
cli
mov
cli
mov
mov
mov
and
icebp
mov
flds
push
or
mov
mov
xchg
std
shl
imul
push
jg
jns
aaa
cmp
mov
add
add
mov
aam
mov
pusha
mov
mov
fld
sbb
lret
pop
sbb
rorl
or
jo
fcmovne
sbb
rclb
sbb
test
mov
xchg
sbb
mov
fnstenv
pop
lret
aas
icebp
xor
shll
pop
mov
pop
mov
push
in
pop
sub
aas
dec
inc
mov
push
mov
bound
popf
and
cmc
sub
in
fwait
dec
sbb
test
pop
lock
movsb
jne
addb
shll
or
pop
mov
xchg
xchg
jnp
lret
mov
bound
stc
out
cmp
out
call
and
mov
mov
sbb
movsl
jge
cs
cmpsb
lds
mov
cmp
mov
cmp
repz
imul
mov
dec
rorb
test
mov
aad
adc
and
xchg
cmp
test
mov
test
orb
adc
mov
cmp
test
pop
xor
push
sub
xlat
bnd
sbb
out
test
mov
mov
push
mov
pop
popa
mov
jae
xlat
fimull
mov
out
cmp
ljmp
ja
xchg
mov
jae
clc
sbb
iret
call
shlb
mov
enter
xchg
divl
xchg
mov
mov
mov
mov
jb
loopne
pop
inc
xchg
push
stc
xor
cmc
mov
cmp
inc
int3
mov
fcmovbe
fdivrs
lea
sub
int3
cmp
xchg
mov
out
pop
fnstcw
adc
add
bound
les
movsb
push
insl
mov
call
pop
das
aam
lret
dec
cmpsb
sbb
test
inc
add
out
subb
add
cwtl
movsb
into
dec
push
fdivr
data16
mov
push
aad
mov
mov
xor
aas
int
inc
push
push
loop
lcall
dec
in
stc
and
or
cmp
jecxz
sbb
sbb
int3
push
jb
dec
lods
dec
fnstcw
cmp
das
inc
int3
dec
adcb
test
int3
dec
inc
out
sarl
aam
push
jo
mov
xchg
cmp
pushf
jns
jns
jbe
dec
mov
or
mov
cmp
iret
outsb
roll
clc
rorb
ss
adc
jae
push
nop
das
sbb
data16
roll
fsts
mov
or
cmp
jns
mov
sbb
and
lret
fld
cmp
subb
lods
jmp
loope
jnp
pop
cmp
jbe
in
movsb
mov
mov
into
inc
cs
mov
test
jns
sbb
das
pop
js
fs
sub
in
push
sbb
mov
popf
call
dec
add
xlat
mov
mov
push
sarb
sahf
lea
movb
adc
shlb
push
mov
and
bound
add
pop
jno
cmp
push
subb
pop
into
lods
mov
sbb
out
inc
mov
sub
rorb
add
add
jo
loope
inc
add
sub
jecxz
rclb
xor
mov
fldenv
stc
jmp
push
add
fisttpl
mov
inc
jge
movsl
sti
dec
push
popa
das
or
pop
add
rcl
inc
in
popa
or
xchg
cmp
sahf
inc
xor
test
loop
imul
pop
sub
sbb
shlb
pop
in
mov
push
mov
push
or
cmp
inc
pop
mov
and
fidivrl
cmpsb
cltd
jnp
lods
pop
jne
adc
into
push
mov
cwtl
je
int
cmpsb
std
enter
push
or
sub
shlb
cltd
cmp
xchg
mov
xchg
pop
dec
int3
ror
adc
mov
jnp
sub
jbe
ss
mov
push
in
fs
mov
scas
lret
xor
and
in
adc
imul
shll
jecxz
cld
sub
out
mov
jne
in
cmc
mov
gs
push
dec
ret
jno
out
cmp
xlat
jno
loope
and
popf
jno
sbb
int3
scas
push
fldenv
loopne
ficoms
xchg
xlat
or
out
outsb
pop
test
or
add
sbbb
add
movsb
xor
mov
in
ja
cmp
ret
je
push
mov
or
adc
jp
negl
dec
sbb
xor
ja
inc
push
sbb
push
loopne
push
iret
pop
cld
jmp
out
jbe
int
inc
sub
adc
cmp
insb
dec
loopne
and
loop
stos
sub
cmp
loope
mov
jle
mov
fsubl
xchg
subl
scas
mov
stos
mov
adc
lahf
xchg
sbb
xchg
ja
jle
fsin
jmp
sbb
mov
out
in
lods
clc
sub
repz
movsb
fistps
popf
in
push
ds
adc
dec
rorb
mov
incb
test
je
adc
sub
hlt
imul
insb
xchg
adc
mov
or
jns
out
jbe
mov
mov
xchg
jle
mov
iret
cmp
sbb
pop
lea
sbb
mov
imul
std
mov
icebp
lods
dec
pop
sub
addr16
in
aaa
sub
push
lcall
mov
cwtl
mov
loope
dec
loopne
sub
xchg
xchg
xor
sbb
sbb
stc
mov
mov
jae
movsb
stos
sub
or
fdivrl
les
scas
push
es
lods
jge
ss
mov
aas
xor
push
das
test
or
jbe
loop
pop
xor
adc
sarb
push
mov
add
sub
push
test
data16
push
fistpll
mov
adc
mov
push
jnp
mov
ret
call
sbb
and
shlb
mov
bound
push
fidivs
mov
js
in
sarl
cmp
mov
sub
sub
xor
fdivs
stos
pop
testl
andb
rolb
nop
add
sub
add
fmulp
sahf
push
cmc
add
push
dec
mov
dec
sub
cmp
sbb
out
addr16
xor
repnz
pop
inc
dec
push
pop
fnstenv
sbb
add
dec
mov
jecxz
lock
outsb
pushf
and
and
fdivs
push
jo
js
dec
cltd
or
mov
sbb
sbb
jnp
or
lods
sbb
jl
adc
repz
lods
jae
mov
out
call
mov
popa
orb
notb
add
pop
and
xchg
sub
sub
movsb
aad
add
xchg
sbb
add
add
ljmp
fisttpl
mov
lret
outsb
pop
xor
std
insb
cmp
sub
and
mov
xchg
imul
dec
xchg
push
mov
dec
fcmovbe
out
aad
es
rolb
lret
rorb
dec
jge
arpl
mov
ljmp
lods
aas
subb
mov
jae
pop
insb
into
mov
jl
mov
mov
xor
or
xchg
sbb
add
mov
scas
jecxz
popa
dec
sub
jb
xchg
test
icebp
add
adc
hlt
and
test
pushf
into
test
js
dec
jecxz
jb
xchg
imul
cwtl
mov
inc
lods
push
hlt
dec
xor
fmul
xor
sbb
jbe
scas
pop
mov
dec
mov
insl
xor
insb
xchg
stos
outsb
out
cltd
add
mov
dec
mov
mov
push
jo
bound
aad
fs
mov
fisubrl
cmp
mov
lfs
push
mov
jecxz
inc
js
mov
sub
invd
ret
stc
adc
jmp
std
fnstsw
mov
sub
and
test
xor
loopne
jp
clc
ljmp
ss
xchg
mov
dec
movsb
sub
cmc
outsb
cmpsl
aad
mov
jg
lods
xorb
jno
ret
pop
gs
jo
push
sub
cmp
xor
loop
mov
mov
push
dec
jg
or
ds
aas
cld
mov
incb
in
mov
mov
jecxz
mov
mov
movsb
jge
icebp
enter
and
jns
ja
push
cmp
push
xchg
push
xlat
inc
dec
cmpl
xchg
cmp
out
imul
addr16
push
out
fildl
out
mov
stc
out
test
pop
mov
jo
dec
jb
fwait
and
and
mov
in
nop
xchg
pop
push
mov
ljmp
stc
cmp
fcomi
fisubl
inc
loopne
jle
movsb
xor
imul
or
outsl
fcmovnb
ljmp
lret
xor
inc
push
popa
scas
cmpsl
subb
sub
out
mov
sahf
aaa
sub
inc
lret
daa
push
sbb
jg
add
leave
idivl
fs
shll
push
fstpt
test
inc
shll
fwait
mov
movsb
dec
testb
rcrl
sahf
cmp
cmp
jecxz
jge
cli
pop
cmpsl
and
mov
push
addr16
mov
push
sti
jmp
jg
mov
cmc
xor
xchg
scas
dec
xchg
cmp
adc
stos
mov
movsl
fdivrl
mov
stos
xchg
mov
mov
icebp
movsl
cmp
out
add
pop
xor
scas
xchg
inc
out
push
jno
inc
rclb
int3
adc
sub
hlt
cmp
fwait
cli
mov
add
jg
ss
dec
pop
or
push
loop
pop
inc
dec
lret
xor
stos
inc
jecxz
pop
xchg
imul
insb
testb
add
inc
dec
dec
pop
and
sbb
gs
clc
pop
pushf
idivl
incl
rcll
cmpsb
push
jb
pushf
lret
js
test
cmp
jbe
fsubl
cmp
fidivs
stc
push
add
mov
cmp
inc
rclb
push
cltd
mov
repnz
xchg
push
dec
pop
fcompl
out
push
aad
mov
or
jmp
call
dec
call
lds
lret
and
ss
mov
fs
dec
sub
mov
cmp
xor
xchg
cmp
bswap
add
loope
mov
stc
and
add
outsb
sub
loopne
push
lods
adcb
pop
filds
jns
fsts
push
push
sub
adc
sti
and
inc
cmp
lret
test
insb
dec
sbb
xorl
rorb
pop
cli
repnz
subl
mov
or
jbe
nop
cmp
cmp
imulb
in
pop
xchg
jns
add
hlt
mov
xlat
push
ret
into
adc
and
orb
cmpl
adc
sub
cmp
loop
scas
push
cli
test
fwait
cmp
imul
clc
adc
inc
rcrb
les
inc
out
and
in
or
cmp
imul
icebp
inc
xchg
jmp
mov
sub
and
sahf
xor
es
cmp
int3
cltd
sub
dec
cmp
push
and
lock
inc
sbb
bound
mov
xchg
or
roll
rorl
lret
insb
daa
push
iret
mov
push
stc
ds
fcompl
and
mov
xchg
dec
and
cmp
data16
dec
fadds
mov
pop
std
fcmovnbe
fbstp
jb
in
insl
or
or
insl
xchg
hlt
aad
fs
ss
or
aad
push
adc
xchg
push
sar
scas
loopne
insb
xchg
jne
pop
mov
lcall
dec
imul
sub
inc
loope
pop
inc
aaa
in
cld
iret
mov
jmp
inc
mov
sbb
xchg
fcoml
mov
lret
dec
add
xor
sub
cmp
cmpsl
stc
mov
sub
and
mulb
stos
test
sbb
loop
jb
and
stos
mov
jp
adc
jg
sahf
icebp
adc
movsb
add
dec
nop
decb
insb
cmc
lock
xchg
lret
mov
loope
outsl
and
mov
sbb
daa
out
and
and
daa
xchg
jge
dec
aas
pop
xchg
movl
shll
call
lds
inc
subl
push
test
fs
ret
adc
lea
pop
leave
xchg
mov
insb
pop
mov
lret
push
and
cmp
andb
dec
sub
fbstp
inc
push
or
ss
addr16
jne
sbb
das
out
fiaddl
ss
inc
sbb
adc
fidivrl
fdivrs
jg
mov
sub
mov
jno
ds
mov
movsl
mov
push
jge
xchg
into
dec
subps
push
lods
cltd
mov
dec
xor
xor
push
idivl
rcll
cld
outsb
gs
push
stc
psraw
rep
mov
daa
xchg
push
call
cmp
xchg
xor
rolb
or
push
lea
int
add
cmpsb
mov
mov
in
js
mov
mov
cmp
in
ss
and
std
push
xor
cmpsb
lcall
pop
inc
gs
dec
push
adc
inc
push
cmp
out
inc
jne
pusha
xchg
in
aam
dec
fucomip
loope
push
shrb
icebp
pop
push
xchg
mov
jns
cmp
cmp
insb
push
push
push
or
aaa
inc
push
add
test
imul
gs
out
pop
test
stos
inc
push
jnp
stos
inc
fisubrs
cs
cmc
dec
push
popf
test
push
outsl
mov
push
pusha
jl
mov
push
jmp
test
mov
add
sti
ljmp
push
test
inc
pop
xchg
cmc
adc
jae
sub
sub
outsl
iret
xor
push
mov
dec
xlat
push
push
aam
lea
push
pop
in
fs
repnz
jge
mov
int
and
repz
jno
dec
sbb
pop
cmp
out
mov
xor
or
fnstenv
mov
or
pusha
sub
mov
dec
test
sahf
cmp
sbb
fldcw
les
adc
add
and
gs
test
adcl
mov
ret
mov
outsb
mov
mov
orl
stos
and
jb
sahf
call
mov
pop
popa
mov
jecxz
add
mov
insl
pop
and
and
notb
mov
fsubs
or
imul
xor
lcall
shll
push
inc
cwtl
xor
dec
dec
pop
sub
scas
out
js
jmp
mov
add
sub
rol
or
in
in
cld
push
aam
dec
loope
cwtl
sub
jecxz
jae
pop
cs
aaa
sub
xchg
lret
lods
or
dec
jns
repz
sbb
filds
cwtl
pop
adc
adc
movsl
jl
sub
jge
mov
subb
test
inc
stos
add
mov
and
mov
in
dec
stos
aam
pusha
cmc
sbb
push
cld
mov
sub
aas
mov
fmull
mov
mov
cmp
out
mov
and
sbb
movsb
push
rolb
int
xor
push
out
js
aas
leave
ljmp
ja
fsubs
insl
fnstenv
in
or
dec
cmp
pop
dec
lods
stos
daa
jno
xchg
jp,pn
mov
das
jg
inc
inc
mov
and
cmp
icebp
test
push
imul
in
adc
mov
in
xchg
ret
and
lock
test
das
cmp
xor
sub
or
mov
mov
jge
mov
mov
xor
mov
and
sbb
aaa
cmp
mov
sahf
or
mov
cmp
inc
notb
jmp
mov
jle
out
in
loopne
xchg
in
sub
xor
sub
lahf
data16
icebp
inc
test
sbb
mov
fstpt
in
jns
ds
fdivrp
push
repz
outsb
mov
add
push
or
inc
outsl
mov
xor
cmp
sub
stc
inc
call
push
movsb
in
mov
and
push
push
fdivrs
daa
int3
sbb
scas
and
mov
repnz
clc
les
lods
imul
and
bound
pop
dec
dec
push
repz
xor
mov
andl
ds
jns
out
cli
pop
jno
mov
mov
addb
xchg
aaa
out
out
sbb
mov
pop
mov
aas
dec
and
pop
cld
xchg
inc
mov
mov
inc
popa
mov
fcmovnbe
sub
jle
mov
lcall
mov
dec
jmp
scas
stc
imul
test
jecxz
insl
imul
jo
jno
push
dec
add
inc
cmc
sahf
jo
pop
cmp
fnstsw
jbe
aaa
dec
lea
cmp
dec
out
mov
pushf
inc
or
mov
ja
pop
into
push
popf
rolb
fldl
mov
je
loope
inc
push
xchg
iret
ja
mov
mov
outsb
sbb
xor
in
test
into
inc
hlt
xchg
xor
pop
pushf
cltd
mov
cmp
adc
test
enter
cmpsb
popf
add
test
pop
fwait
lods
ds
sbb
dec
fpatan
das
daa
popf
iret
pand
and
insb
dec
mov
mov
dec
bound
push
out
or
in
addr16
dec
and
data16
adc
dec
xlat
call
sbb
jmp
lret
add
into
mov
lods
int3
sub
divl
push
cmp
adcl
mov
xor
push
pop
stos
dec
in
leave
fcmove
xchg
addr16
xlat
dec
jb
fmull
aad
jnp
sbb
inc
jg
mov
xor
xchg
pop
jmp
jbe
aas
and
xchg
sub
js
int3
mov
lds
mov
pop
cmp
pop
ja
jnp
xlat
dec
jp
aaa
pop
adc
xchg
pop
and
cmpsb
fbstp
or
xchg
ret
xchg
ficompl
test
xchg
in
dec
popf
push
ret
push
inc
daa
hlt
mov
push
ja
hlt
adc
daa
xorb
aaa
lods
lcall
pop
sbb
imul
orl
movsl
addr16
push
sbb
pop
sub
jecxz
in
cmpsl
xor
mov
shr
cmp
xchg
popf
dec
mov
mov
mov
adc
mov
push
and
and
js
inc
stos
aas
mov
cmp
pop
mov
fs
data16
sbb
mov
cli
add
movsb
aad
inc
repz
arpl
ja
mov
stos
lock
mov
dec
mov
jmp
mov
and
cltd
mov
push
arpl
clc
popa
stos
jecxz
pusha
mov
xchg
xor
cs
pop
xchg
scas
add
mov
repnz
xchg
shrb
jge
adc
xchg
rep
jno
jb
je
test
push
xchg
jg
jo
test
xchg
and
adc
loope
push
jge
adc
fmul
and
test
rorb
lds
mov
sarb
in
or
int
and
outsl
addb
inc
push
sbb
cmc
inc
jb
jle
loopne
leave
mov
pop
in
xlat
mov
add
jp
push
pop
push
in
fdivrs
push
pop
adc
pop
enter
iret
mov
je
dec
incb
fucomp
mov
fadd
outsl
pop
push
mov
fs
mov
mov
std
and
xor
fsubs
add
sbb
jae
bound
or
fidivs
jecxz
push
adc
ljmp
xchg
sub
cmp
and
mov
rcrl
les
xor
jno
dec
sbb
inc
adc
test
scas
out
cmp
dec
mov
dec
push
jecxz
ret
sbb
ret
insl
jecxz
sbb
cltd
or
fcmovnb
xchg
mov
xchg
mov
dec
push
pop
lods
leave
xchg
les
dec
xor
mov
inc
mov
cwtl
push
cmp
add
into
outsl
dec
scas
imul
xlat
inc
cmpsb
and
rorb
repnz
sub
std
clc
xchg
push
cwtl
mov
sahf
ja
fs
out
shl
jl
pop
call
jo
icebp
or
or
mov
adcl
pop
and
jge
aam
jle
test
lahf
mov
push
frstor
adc
pop
inc
inc
outsl
js
js
xchg
jb
push
movsbl
mov
push
cmc
adcb
jo
xchg
cmpsb
popa
and
movsl
fists
outsl
faddp
cld
lea
es
lcall
lock
cmpsl
pop
jg
sbb
roll
xchg
mov
jl
and
loope
mov
leave
pusha
and
pop
sahf
mov
clc
dec
sbb
in
es
ljmp
cmp
sbb
std
or
in
xor
jp
repz
mov
stos
out
sbb
cmp
fnsave
mov
repz
fwait
daa
imul
push
lret
aaa
mov
popa
sbb
and
mov
and
loop
in
std
in
cwtl
test
repz
mov
rclb
ret
bswap
ljmp
pop
int
or
jno
push
bound
mov
xor
fldpi
jmp
popa
push
ret
fdivrs
popf
popa
xchg
out
mov
and
push
jnp
clc
push
out
pop
push
jmp
cmp
stos
mov
mov
hlt
push
fwait
outsb
lock
dec
cltd
push
fsts
psllq
imul
and
out
inc
push
outsb
xor
hlt
push
pop
adc
add
test
fcomps
jg
int3
cmp
or
and
std
mov
dec
mov
lret
out
mov
jno
inc
mov
insb
push
test
shlb
jp
arpl
jp
add
or
test
add
inc
mov
xor
dec
mov
lret
push
icebp
and
xor
js
icebp
jmp
incl
outsl
mov
movsl
inc
out
dec
repnz
outsl
std
xor
mov
scas
repz
lds
lcall
or
mov
shl
jle
outsl
js
mov
pop
add
mov
scas
dec
add
or
or
jns
adc
stos
dec
push
icebp
dec
inc
inc
movsl
mov
mov
sub
mov
dec
jo
mov
pop
dec
in
outsl
andl
mov
imul
rcr
cmc
mov
shlb
bound
test
jno
std
jecxz
pop
call
cmp
push
ret
gs
push
subb
xchg
inc
into
mov
xor
cmp
fbstp
mov
inc
mov
mov
std
add
rcrl
bnd
cld
mov
les
icebp
mov
insl
and
je
pop
enter
push
je
xlat
sti
shl
cmp
ss
sub
add
mov
aas
mov
test
enter
out
xor
xchg
fbstp
mov
sub
jo
fisubrl
lods
sbb
fidivs
std
pop
push
xor
cld
sub
mov
mov
inc
sbb
repz
cltd
sbb
xchg
loope
iret
test
or
std
mov
enter
outsl
pop
add
stos
mov
adc
and
loope
ret
inc
jo
std
inc
mov
lret
lods
mov
mov
stc
pushf
aad
inc
jo
int
repz
repnz
or
mov
inc
push
pop
xchg
arpl
or
jg
push
ret
out
pop
into
outsl
jo
test
xchg
daa
pop
inc
testl
mov
adc
insl
test
mov
sti
xor
inc
testl
ret
add
pop
lcall
mov
ds
cwtl
nop
jnp
add
or
xchg
or
ficoms
rcll
mov
or
in
mov
loop
inc
fs
sub
add
fcomps
mov
xorb
jbe
testl
scas
xchg
loope
fs
sub
ja
pop
xchg
or
test
pop
dec
inc
xchg
flds
xchg
push
in
ret
fwait
pop
inc
shlb
iret
insb
xchg
push
fcomi
in
pusha
mov
cli
mov
aas
aam
inc
pop
gs
sub
in
adcl
and
dec
jl
fildll
test
sub
jne
inc
shrl
inc
push
xchg
pop
bound
xchg
and
lea
jecxz
adc
and
push
sub
push
lock
bt
cmp
push
les
shlb
and
and
test
pop
pop
imul
cld
push
xchg
mov
fucomp
out
xor
lock
pop
icebp
xor
popa
pop
int3
or
dec
inc
mov
adc
xchg
insl
jecxz
mov
pushf
xchg
push
inc
scas
movsb
lcall
cmp
xchg
pusha
push
bound
mov
rcrb
mov
stos
or
xor
adc
lret
mov
popa
cmp
jle
cmpsb
dec
les
out
ljmp
xor
cmp
cmc
rclb
mov
jno
lahf
mov
sub
cmc
cmp
push
dec
inc
pop
jbe
imul
xchg
xchg
sub
xchg
incl
mov
and
dec
and
or
mov
cmp
je
mov
xchg
or
push
cmpsl
lea
lds
into
mov
mov
popa
inc
rcrl
sbbb
mov
sti
mov
mov
jmp
mov
push
rcll
cli
push
outsb
jno
js
and
repz
mov
xor
mov
call
xchg
mov
aad
push
mov
cmc
cmp
lret
imul
lret
lret
shlb
mov
stc
push
mov
loop
push
pop
icebp
fucomip
fcompl
cmp
sub
fdivs
push
xlat
xor
idivl
aas
mov
and
pop
outsl
out
pop
ficompl
xchg
and
out
callw
mov
rol
jo
jns
popa
push
repnz
add
xchg
mov
cltd
pop
mov
mov
std
out
xor
xchg
int3
sahf
mov
or
lock
mov
push
mov
mov
in
xor
lcall
and
push
inc
jbe
push
and
sub
or
stc
xchg
rolb
inc
and
push
mov
mov
sub
dec
sbb
and
or
push
dec
sub
lcall
lods
xchg
jmp
xchg
and
pop
lock
and
jae
add
or
jns
loopne
test
dec
lret
loope
or
nop
inc
or
and
int
clc
imul
test
sub
sub
jl
int
bound
sbb
mov
aas
test
outsl
adc
pop
inc
or
lcall
cmp
js
les
pop
fcmovne
cmc
mov
out
or
repnz
addr16
add
shl
fcmovne
mov
add
stos
fsubrl
or
fldenv
xchg
mov
cmc
mov
xchg
icebp
dec
fildll
xchg
cld
adc
jl
push
pop
mov
and
xlat
rol
xor
mov
fiaddl
fisubl
test
nop
fs
sub
push
pop
sbb
cwtl
cli
mov
repnz
mov
jnp
fiaddl
sub
dec
lds
xchg
inc
pop
adc
mov
adc
loopne
xor
sub
pop
rolb
sbb
cmp
out
fwait
cmp
ja
cmc
push
xchg
mov
xor
or
cmpsl
xor
addr16
lahf
into
shr
xor
imulb
popa
xchg
push
int3
mov
in
mov
jnp
push
dec
adc
cwtl
shlb
mov
fnsave
incb
loop
outsb
fsubrs
mov
inc
xchg
outsb
add
pop
lret
xchg
xchg
inc
dec
xor
sti
pushf
pop
xchg
mov
stos
fidivrl
mov
xchg
shlb
stos
ret
rolb
pop
xchg
imul
adc
jmp
jo
mov
addr16
add
or
orb
out
bnd
sub
adc
shrb
xchg
cli
sub
outsl
xor
jnp
jnp
aas
push
ljmp
sub
iret
sahf
push
jo
arpl
incb
lahf
mov
xor
fcomi
out
incl
std
imul
and
push
lock
fistps
xchg
inc
add
pop
movsb
mov
cmpsl
sbb
js
subl
mov
or
sahf
jl
adc
inc
xorl
dec
add
outsb
jno
shl
mov
cmpsl
movhlps
adc
fs
push
fnstenv
popl
push
in
adc
push
clc
inc
pop
inc
pop
aas
icebp
inc
pop
pop
add
push
push
ret
pop
mov
rclb
dec
jnp
push
mov
lods
pushf
daa
mov
sub
std
xchg
rorb
movl
inc
std
bound
out
sbb
test
fcompl
popf
adc
sub
popf
xor
fsub
sbb
inc
test
imul
push
lahf
in
insl
sub
aad
add
js
icebp
mov
sti
dec
dec
jle
in
loop
fstps
xchg
enter
adc
outsb
add
sub
pop
xchg
mov
push
imul
mov
bound
outsb
jno
xchg
out
adc
insb
mov
sbbl
jmp
ljmp
cmp
fcoms
incb
out
cwtl
xor
subl
pop
lods
xor
test
icebp
scas
cwtl
dec
xor
test
enter
aad
sub
inc
push
arpl
adc
adc
mov
popf
lock
inc
xor
push
ret
jae
lret
or
sahf
push
xor
stc
cltd
adc
dec
mov
sarb
stc
nop
xchg
data16
xchg
mov
pop
dec
xorb
push
push
jnp
sbb
pushf
adc
lret
sbb
repz
int
push
popa
jle
jae
std
fnsave
mov
and
mov
inc
jp
sysexit
sbb
pushf
sub
popa
mov
pop
clc
jmp
pop
push
mov
inc
sbb
ljmp
push
lock
mov
clc
cmp
repz
ja
add
lock
mov
iret
jnp
pop
mov
and
inc
xchg
ret
movsb
mov
mov
xchg
mov
out
push
sahf
orl
ljmp
push
jno
sub
movsl
repnz
gs
xchg
add
lds
jecxz
sti
test
ficoml
fs
mov
sbb
dec
shr
int
cmp
popf
cvttps2pi
mov
lcall
xor
push
pop
pop
test
cli
fdivrs
sub
mov
sub
dec
mov
or
test
mov
jno
repnz
sbb
iret
pop
imul
lods
cld
add
mov
and
add
or
lock
push
mov
insb
sub
jb
aaa
and
das
movsl
mov
aam
add
int3
fwait
andb
sub
imul
mov
push
shl
test
call
es
ljmp
push
insb
xchg
lret
rcrl
out
xor
test
jbe
inc
std
rol
notb
jne
mov
jp
and
xchg
push
fidivs
nop
mov
fisubs
sub
pop
test
adc
jle
mov
jmp
ret
fstpl
push
and
mov
ljmp
inc
or
xchg
sbb
fwait
dec
sub
xor
cmp
jns
sbb
adc
nop
rorl
js
data16
inc
or
push
imul
xchg
test
cltd
data16
cltd
out
mov
pop
push
cltd
sbb
aaa
lea
mov
mov
mov
mov
mov
sbb
adc
mov
in
fbld
leave
inc
rcrl
test
ficompl
mov
fdiv
lahf
gs
call
cmp
in
popf
lret
jp
out
mov
fwait
nop
addr16
lock
jg
testl
pop
mov
jecxz
jmp
mov
mov
xchg
out
and
repz
sbb
rolw
pop
sbb
mov
adc
enter
arpl
xor
cmp
mov
cwtl
loope,pt
xor
sarl
test
in
jbe
mov
ret
repz
inc
es
adc
xor
jle
mov
and
jmp
clc
xorb
cmpsl
push
inc
aad
mov
jns
cmc
jmp
inc
inc
mov
xorb
xor
push
sarl
or
insb
xchg
lds
push
push
sub
push
xorl
leave
dec
std
clc
pop
adc
push
xchg
les
dec
inc
cmp
pop
pop
lds
xlat
add
xchg
jg
adc
xchg
xlat
ret
mov
xchg
ljmp
pop
stc
jns,pt
imulb
in
jne
cli
sti
rorb
sub
iret
dec
push
jmp
es
nop
sbb
fmul
inc
leave
mov
sub
sarb
add
into
mov
pop
test
push
xchg
ret
cmp
sahf
scas
cmc
daa
inc
mov
sub
xchg
mov
cmpsb
gs
sbb
hlt
sbb
aad
jmp
xchg
cs
mov
dec
and
lock
lods
add
mov
in
pop
repz
testl
fstpt
cld
xchg
test
pop
rorb
pop
lret
lds
or
iret
dec
and
das
adc
push
repz
mov
aas
mov
je
and
adc
jns
sub
pop
sub
inc
nop
add
push
add
js
or
push
or
adc
lods
js
xor
xchg
out
lret
cld
cld
mov
cli
mov
push
cmp
xor
xlat
pop
movsl
push
addr16
xchg
xor
pop
das
pop
jb
pop
aaa
mov
mov
ja
sahf
sub
mov
gs
dec
or
dec
das
or
and
out
cltd
dec
xor
adc
pusha
mov
iret
sarl
jb
fsubrl
cwtl
dec
or
jg
xor
jo
sub
imul
int3
dec
pop
test
scas
rcrb
jbe
inc
pushf
aaa
push
cmp
mov
sub
push
pop
jne
pop
popa
adc
push
sub
push
cltd
add
xchg
sbb
repnz
js
jne,pt
dec
adc
das
sbb
nop
sbb
fisttpl
jbe
outsb
push
cwtl
adc
xchg
add
mov
xlat
adc
inc
inc
jns
push
push
movsb
add
xor
mov
ss
rcl
xchg
pusha
xchg
pop
shr
cmpb
fcompl
sub
push
cmpb
loope
divl
xorl
xor
sbb
mov
fstpt
lods
icebp
mov
mov
and
jo
mov
arpl
lret
pop
inc
movl
or
xor
inc
js
pop
push
mov
jns
push
repnz
stos
fnstcw
cli
and
jle
addl
pop
add
into
into
mov
dec
rorl
loopne
mov
ret
mov
iret
out
movsb
xor
scas
sbb
push
fstps
in
and
jne
mov
mov
lods
scas
loopne
mov
or
push
push
sub
sub
push
adc
add
pushf
sub
or
loope
xchg
in
lcall
out
xchg
js
inc
gs
ljmp
push
dec
mov
or
sub
mov
mov
dec
shlb
jge
jae
mov
mov
mov
mov
mov
mov
aad
and
nop
mov
dec
jp
xchg
mov
push
mov
xchg
xor
or
pop
mov
inc
imulb
or
push
scas
daa
pop
mov
stos
cs
push
push
adc
dec
pushf
stc
mov
decb
xor
addr16
xchg
and
shll
iret
sbb
out
sbb
mov
mov
cs
sbb
lahf
gs
cmp
cmp
jmp
push
sbb
push
pop
into
pop
mov
repz
arpl
or
popf
jp
ss
add
imul
arpl
mov
mov
dec
or
add
addr16
xchg
insl
gs
andnps
shlb
fdivrl
out
jg
cli
pop
xor
jle
push
adc
or
push
jg
neg
test
cmp
sbbl
xor
inc
sarb
fstp
mov
aad
sub
dec
push
jp
pop
ja
gs
jmp
ljmp
pop
mov
das
pop
lcall
jmp
int3
mov
clc
xchg
arpl
add
jbe
lock
push
push
setae
push
jecxz
adc
jae
insl
mov
jb
push
movsl
les
pop
mov
ja
sti
jo
jae
movsb
or
cmp
popa
aam
mov
or
and
push
es
cli
sbb
jns
out
ret
in
sti
cli
sub
clc
push
lods
fldenv
imul
stos
jl
sub
cltd
daa
arpl
hlt
add
aaa
test
sbb
aas
push
int
dec
and
stos
repz
jg
jecxz
mov
xchg
mov
sbb
and
and
cmp
mov
test
rcrb
mov
int3
sbb
adc
sbb
xchg
aaa
dec
es
add
or
push
jge
aad
xchg
popl
jae
int3
fisttpll
or
adc
cmp
xor
push
mov
sbb
sub
sbb
sbb
mov
sub
imul
dec
or
bound
cli
mov
push
mov
pop
stos
mov
std
ds
sbb
gs
xchg
jbe
arpl
jp
fisttps
adc
dec
enter
rclb
push
ret
xor
repz
shrl
dec
pop
iret
mov
mov
es
cmp
and
stos
icebp
mov
js
jl
rolb
lea
out
or
jbe
mov
in
sbb
or
ljmp
push
add
aad
insl
in
out
cs
sbb
and
bound
jne
and
inc
jae
mov
xor
add
lcall
pop
dec
ljmp
sub
xor
fmull
dec
scas
sbb
movsl
jge
mov
fnstcw
or
dec
fcoms
mov
ds
lret
xchg
adc
push
push
test
dec
std
shl
or
call
push
rorl
add
push
pop
rorl
mov
popf
pop
iret
jae
pop
xchg
cmovo
loope
ret
cli
xor
cmp
pop
xor
mov
movsb
mov
enter
sbb
pop
inc
or
xor
pop
shrb
xchg
cmc
jo
aad
adc
loope
mov
enter
adc
jecxz
hlt
cltd
lcall
popa
fistpll
stos
jno
dec
sbb
leave
push
es
std
mov
pop
sti
aad
es
jbe
xchg
xchg
imul
mov
mov
xchg
cld
xchg
into
lods
jne
xchg
sbb
std
lcall
sub
fdivrs
fcmovu
add
and
add
insb
js
cli
mov
lds
test
jecxz
in
push
mov
push
and
mov
subb
mov
and
test
jecxz
arpl
outsb
imul
cmp
sbbb
fsubs
enter
push
lods
xchg
sti
add
and
cmp
jns
adc
mov
jmp
imul
jo
or
dec
clc
mov
jnp
or
lods
stc
or
inc
adc
dec
xor
inc
into
fisubrl
sbb
inc
cmp
out
xchg
das
aad
loopne
jb
aad
inc
movsb
out
stos
in
shr
ljmp
dec
sbb
cmpsl
rcl
inc
and
shlb
and
jge
vmwrite
inc
mov
sub
mov
loope
bound
push
xchg
jmp
mov
inc
add
pop
addr16
xchg
or
adc
xchg
mov
sahf
dec
pop
out
xchg
stc
pop
inc
data16
repz
addr16
lds
or
out
ss
lds
cmpsb
push
pop
cmp
dec
add
cmp
xchg
sub
push
roll
jne
call
mov
mov
imul
in
pop
mov
mov
ja
mov
das
xor
loope
cmp
add
ret
imul
dec
or
adc
jmp
xchg
repz
call
push
ret
sub
fldt
pushw
outsl
shrb
adcl
jge
fcmove
xor
popl
leave
ss
dec
ja
lds
jl
ret
push
sbb
xlat
arpl
cmp
daa
mov
repz
jecxz
outsb
mov
xchg
lods
push
es
imul
mov
jno
les
ficoms
jbe
aaa
iret
test
imul
out
inc
inc
pop
mov
add
cmpsl
gs
sub
scas
aad
leave
mov
nop
in
push
cs
inc
iret
mov
push
aas
mov
addr16
call
std
jecxz
xchg
stos
push
jp
out
mov
push
cwtl
ds
je
popf
xchg
dec
push
shl
mov
je
dec
std
loopne
and
js
cmp
jne
sbb
movsl
lods
fiaddl
add
push
in
push
outsl
sub
test
jb
out
xor
out
push
push
lea
addb
adc
mov
pop
pop
test
inc
xchg
fstpt
notb
dec
mov
dec
ficompl
mov
in
in
insl
dec
xchg
cmp
and
adcb
sbb
clc
fs
movsl
popa
cmpsl
out
incl
xchg
ret
inc
xor
or
xchg
idivb
or
sub
out
dec
pop
outsb
sarl
pop
bound
in
mov
jl
inc
cli
ja
mov
mov
and
push
divps
inc
enter
stc
jns
xchg
sub
scas
enter
lret
js
int3
jl
pusha
stos
call
or
nop
popa
lret
push
add
insb
mov
cli
jge,pt
dec
enter
loop
imul
mov
cwtl
out
mov
imul
mov
lds
jne
data16
shr
popf
ret
cmp
movsl
sbb
mov
loope
test
in
add
in
adc
call
movsl
sbb
fwait
hlt
aad
fstpl
or
pop
sbb
jge
ljmp
scas
pop
xor
sub
loopne
push
cli
mov
lock
add
test
pop
jmp
add
aas
push
lret
std
and
ja
cmp
decb
push
cmpsl
cmp
cltd
icebp
xor
jns
mov
daa
xchg
idivw
daa
push
or
cmpsb
sbb
cs
fcmovnbe
in
imul
movsl
add
not
shr
and
push
or
outsb
push
into
sub
scas
mov
scas
movsb
imul
inc
cwtl
pop
fwait
imul
std
iret
mov
in
pushaw
push
mov
sti
jae
imul
sti
out
int3
push
fs
push
fists
inc
push
cmp
pop
add
scas
outsl
cmp
sub
out
mov
push
mov
daa
mov
dec
adc
jmp
dec
mov
aad
push
out
clc
dec
iret
jo
sbb
dec
xchg
sub
xor
stos
dec
sub
sub
and
mov
fldenv
cmp
in
pushf
push
xchg
add
add
je
cmpsl
out
mov
nop
mov
mov
pop
mov
and
clc
xchg
ficoms
xlat
pop
add
pop
insb
subb
shrb
jecxz
push
mov
xorl
mov
rcl
xchg
ror
cmp
xchg
out
xchg
aas
mov
mov
pop
loop
int3
dec
movsb
push
mov
push
call
cmpsb
sbb
bnd
adc
outsl
out
mov
jg
shr
shll
cmpsb
sub
addl
mov
loope
push
stc
pushf
sbb
lods
into
mov
sbb
or
sub
lret
loopne
rcll
int3
xor
pop
dec
jge
fstps
out
stos
xor
lock
loope
mov
loop
inc
lcall
mov
cld
add
mov
cmp
les
or
inc
inc
xor
js
js
pop
sub
cmp
push
imul
push
xor
fldl
sub
mov
or
rorl
sub
xchg
cmpsb
or
shll
dec
and
out
shlb
shrl
ljmp
xchg
in
or
ret
ss
cmp
psubb
cmpsb
sub
outsl
mov
pop
cmpsl
leave
dec
mov
adc
xchg
fnsave
lock
pushf
cmp
cmp
popa
es
xor
gs
jp
pop
insl
push
lock
adc
clc
mov
lods
xchg
pop
pop
fdiv
repz
or
ss
pop
mov
adc
cmp
loopne
ds
std
pop
out
adc
sbb
mov
push
cs
sub
jo
push
lcall
pop
xor
jle
repz
sub
jbe
jl
push
syscall
test
movl
jne
stos
das
dec
call
aad
mov
mov
lahf
mov
repz
push
pop
cmp
jae
in
sub
push
cmpsl
adc
inc
pop
incl
pop
jnp
jp
mov
pop
test
stos
pop
adc
xor
in
sbb
stos
divl
sub
xchg
lds
ss
ja
cs
insl
jae
frstor
cwtl
aas
testl
mov
scas
sbbb
sub
xchg
mov
pop
mov
insb
int3
mov
cwtl
xchg
jmp
outsb
mov
xor
pushf
sub
sbb
inc
adc
inc
js
loopne
scas
xchg
cmp
jg
add
pusha
jne
xchg
ljmp
xchg
stc
adc
push
jns
outsb
jns
sub
movsb
mov
xor
lea
mov
fstl
xchg
fildll
cmpsl
sub
mov
pop
clc
mov
stos
cld
jbe
add
push
ret
icebp
dec
pop
das
lods
pop
enter
shrl
mov
sar
fs
aad
push
movsl
lods
push
push
xor
xchg
sbb
sub
ret
rcrl
std
push
std
in
sbb
sahf
sbb
stc
fwait
and
xchg
rcll
add
fwait
sub
adc
mov
and
push
out
ljmp
mov
xchg
aam
sub
test
decl
fs
pop
pop
insl
and
outsl
aam
pusha
sbb
inc
adc
rcrl
dec
dec
mov
jmp
clc
adc
xchg
sbb
lcall
inc
push
jo
xchg
pusha
adcb
aad
pop
xchg
jnp
sub
push
sbb
lret
push
cmp
add
inc
pop
enter
push
sub
sahf
pop
in
xor
loope
shlb
cmpsb
pop
mov
faddl
dec
cmp
or
fldcw
testl
pop
cmp
sbb
inc
sub
into
rcr
mov
repz
test
js
pusha
stos
fcompl
mov
shl
mov
mov
cli
xor
int3
icebp
sbb
push
jbe
inc
and
loop
arpl
shr
xor
mov
adc
repnz
jle
fildl
mul
das
stos
in
cmp
ds
cmp
xor
sub
adc
repz
mov
sahf
jo
in
lahf
mov
xor
pop
ljmp
mov
jns
popf
mov
adc
test
pop
mov
or
sub
andl
inc
pushf
xchg
sbb
lods
out
jns
inc
ss
mov
pushf
fcomps
sub
test
jne
pop
stos
mov
loopw
mov
shll
cmp
mov
push
adc
bound
add
mov
xlat
mov
lret
int3
mov
push
fwait
jno
andb
xor
xor
adc
out
fnstsw
enter
out
lds
xor
es
loope
cmpsl
inc
mov
jge
jmp
mov
inc
mov
cmp
das
jno
cmp
mov
pop
and
mull
sahf
dec
std
daa
xchg
imul
sub
push
push
out
ljmp
loope
push
dec
xchg
popa
xchg
mov
rorb
popa
dec
out
call
add
movsl
aam
push
dec
shrl
test
push
inc
cmc
mov
cltd
pusha
fcmovbe
jp
icebp
push
mov
in
sbb
add
jae
movsb
repz
nop
test
leave
sbb
mov
inc
xor
dec
jno
arpl
rorl
jge
in
adc
cs
popf
jp
adc
mov
hlt
ret
mov
out
sahf
pop
mov
xor
ljmp
hlt
fisttpll
jnp
stos
push
div
xchg
scas
or
repnz
das
mov
into
adc
dec
push
jb
enter
push
ja
and
push
cmp
mov
fwait
jb
mov
dec
pop
movsb
or
add
inc
insb
or
inc
cld
xchg
lret
fbstp
mov
pop
jae
push
pop
mov
mov
lahf
rcl
ret
decb
leave
sbb
push
or
adc
lods
dec
cmp
fcomps
push
add
pop
ret
movl
mov
inc
mov
jecxz
clc
mov
idiv
pop
in
inc
push
les
in
in
push
xchg
sbb
mov
cmp
lea
lods
mov
std
pop
sti
mov
and
push
dec
loopne
jae
sbb
mov
and
push
dec
push
ja
and
cltd
cld
cmp
push
add
lret
jnp
in
into
btl
nop
mov
jne
jo
push
cwtl
sub
lret
inc
insl
dec
jmp
arpl
sbbb
lods
pop
ss
shll
cmpsl
data16
mov
sub
xorl
cmpsl
loope
jmp
inc
mov
ret
cmp
add
push
sti
in
std
jnp
xor
and
popf
or
mov
sbb
loopne
push
popf
repz
enter
mov
sbb
adc
sbb
pop
or
lret
and
mov
push
and
mov
rolb
pop
cmc
mov
sbb
arpl
dec
shrb
adc
push
push
lahf
push
cmp
lret
stos
and
lea
outsl
sahf
cmp
or
mov
push
mov
add
mov
movsl
icebp
rcrl
and
testb
leave
dec
jg
and
jmp
cmp
fwait
popf
movsb
aaa
mov
cmpsb
xlat
mov
adcl
pop
sahf
out
xchg
or
sub
orl
add
lret
dec
das
icebp
push
lock
ja
js
pop
mov
lret
sub
je
in
adc
test
cmp
pusha
and
add
cmpsb
sti
ror
jne
repnz
jle
dec
jge
clc
mov
icebp
cmp
mov
icebp
loope
loope
pop
subb
cmpsb
xor
push
lods
sub
dec
loopne
scas
lods
shr
lods
ljmp
je
pusha
pop
testl
mov
sub
idiv
fimull
pop
add
or
fldcw
imul
mov
icebp
add
xor
push
addr16
in
popa
aad
lods
cmp
in
leave
sub
and
pushl
cmp
mov
or
xchg
and
push
fisttps
insl
out
xor
movsb
stos
aad
stos
test
mov
xor
mov
mov
and
jg
daa
hlt
inc
mov
movsb
data16
xchg
outsb
jnp
hlt
cmp
in
sub
insl
xchg
fsubs
mov
imull
xchg
fs
pop
mov
sbb
sbb
adc
push
jp
andb
or
and
inc
dec
add
ljmp
or
cltd
sub
enter
or
sbbb
popa
fwait
adc
sub
mov
je
xchg
xchg
mov
pop
in
xchg
rorb
dec
push
lock
inc
cmp
ja
dec
add
je
xchg
xchg
cwtl
dec
sbb
dec
mov
dec
push
mov
es
gs
repz
gs
sub
cmp
add
sbb
ja
nop
out
sbb
jp
jo
fdivrl
xor
js
sbb
fistps
mov
test
mov
push
loope
dec
push
clc
xor
push
insl
jmp
dec
cmpsb
pop
cmp
adc
mov
mov
and
mov
cwtl
xchg
push
cmp
mov
xor
and
sub
inc
push
ds
imul
mov
mov
aam
sti
xchg
cmp
jno
stos
fs
in
lds
lock
sbb
or
test
push
inc
mov
repnz
loop
stos
clc
sbb
mov
pushf
into
or
pop
add
mov
push
outsl
pop
jbe
mov
sub
adc
pop
stos
adc
inc
cmpl
mov
add
inc
push
mov
add
lds
lds
xchg
iret
add
out
into
add
jmp
jno
jle
fdivrl
rclb
xor
xor
add
or
lret
inc
jl
aam
xchg
sti
adc
and
popa
es
mov
cmpsb
sti
das
xlat
gs
pop
sahf
mov
sub
leave
loope
adc
inc
mov
orb
jns
and
mov
and
movsl
mov
in
in
ret
mov
push
xchg
out
sahf
in
insl
test
int
cmc
cli
and
addr16
shrl
xchg
lcall
rolb
cmp
sbb
data16
imul
fstpt
out
lret
mov
fnstsw
jno
es
cwtl
loop
or
cmp
mov
pop
in
xchg
cmp
and
xchg
nop
cmp
or
cmp
push
push
enter
jg
fimuls
mov
mov
pusha
jge
adc
insl
or
jp
xchg
xchg
enter
enter
scas
jle
xchg
push
cltd
sub
lret
sub
and
adc
je
push
pushf
scas
mov
nopl
push
adc
jns
imul
fdivs
cmp
mov
jb
pop
or
add
scas
popf
mov
xlat
les
int3
mov
mov
dec
mov
int3
jg
adc
add
cmp
mov
mov
rcll
fdivrs
xchg
inc
outsb
rolb
test
cs
fdivrl
popa
mov
push
in
xor
and
fsts
out
out
dec
inc
loopne
cmp
enter
outsl
mov
es
cmc
jbe
and
lret
pop
out
clc
filds
sub
pop
aas
mov
pop
js
lret
cmpsl
fcomi
lcall
sbb
rcl
in
pop
mov
pop
xchg
dec
fcmovu
lods
faddl
arpl
xchg
stc
mov
sahf
jo
bound
mov
orb
test
dec
pusha
jne
add
in
adc
pusha
lahf
and
aam
dec
out
pop
jbe
mov
cmp
sbb
sbb
add
xor
xchg
push
or
cmp
mov
and
sbb
or
or
dec
cltd
cli
divb
mov
lret
mov
jne
jg
or
add
inc
movsb
and
je
adc
xor
cmpsb
shll
mov
mov
sbb
scas
dec
imull
setl
xchg
pop
mov
outsl
or
mov
jnp
push
lds
shrl
cmp
outsb
inc
xor
and
push
stos
inc
xchg
add
stos
xor
mov
ljmp
mov
cmp
cltd
sbb
sub
adc
dec
rcr
sti
jl
stc
xor
call
and
xchg
mov
imul
jbe
sub
xor
in
scas
test
lret
fs
dec
mov
call
xor
hlt
push
out
adc
xor
cmp
and
push
sbb
or
sub
or
iret
cmc
iret
pushf
mov
jb
call
dec
sbb
imul
pop
andb
lods
push
data16
add
mov
push
push
fwait
loope
adc
leave
pop
xor
daa
out
xchg
and
cmp
arpl
ret
xchg
mov
push
icebp
jbe
lahf
cmp
jne
sbb
jno
je
dec
pop
les
mov
and
in
mov
jae
jno
or
outsl
fcmovnu
xchg
push
fcomip
fisttpll
nop
ljmp
inc
les
push
outsl
fcmovnu
pop
or
xor
sub
fldt
out
jns
push
inc
int
pcmpeqw
jnp
shlb
xchg
dec
jge
scas
cs
sub
in
cli
mov
jl
mov
sbb
xor
lret
mov
or
rcrl
jno
jecxz
jmp
sub
dec
bswap
jo
add
movsl
jns
xchg
mov
pop
test
pop
stc
and
int3
je
push
sub
mov
or
sbb
movsb
jne
mov
test
clc
into
mov
int
aad
inc
pop
and
aam
fnsave
into
imul
jb
mov
ret
cltd
mov
test
cmp
jmp
inc
fnstsw
aam
fisttps
into
sub
dec
andl
pop
in
mov
insb
gs
jp
xor
pop
repnz
inc
push
outsb
es
movsl
ret
xor
ja
push
fcomps
bound
jle
xchg
push
clc
or
mov
sbb
adc
cmp
test
dec
jle
mov
lea
cwtl
loop
pop
jbe
add
add
adc
je
int3
aas
dec
dec
test
outsb
xchg
adc
int3
loope
sahf
push
aam
test
xchg
xchg
repz
pop
and
lret
or
into
leave
xor
test
fs
xor
push
and
hlt
add
out
cld
xchg
sti
jnp
bnd
adc
paddusw
pop
pushl
sarl
jle
js
mov
xchg
imul
mov
in
pop
xchg
push
imul
cmp
aad
cwtl
push
mov
pop
in
dec
insl
jno
pushf
xchg
pop
icebp
xor
arpl
xchg
sbb
push
add
sub
popl
daa
sub
lahf
cwtl
and
sbb
and
iret
adc
add
pop
cmp
adc
cmp
out
jecxz
xchg
pop
lods
ror
pop
add
out
imul
mov
and
pop
test
int3
jnp
loop
sbb
inc
sbb
ficoms
push
in
add
js
lahf
lds
bound
fxtract
jnp
push
stos
cmp
test
mov
cmp
sub
xor
sbb
cmpsl
xor
enter
xor
push
cmpsl
mov
popa
pop
js
jne
test
xchg
sbbl
push
movsb
dec
shll
cs
dec
xchg
dec
push
popf
outsb
sbb
lret
inc
repz
sub
lcall
insb
imul
push
and
cltd
flds
jl
sub
xor
negl
jmp
in
pusha
fnsetpm(287
xchg
dec
mov
jmp
and
in
cmp
test
dec
loopne
xchg
pusha
loope
aaa
cmp
jg
xlat
into
and
cltd
mov
ss
add
popa
cmp
pop
nop
push
notb
mov
jbe
inc
adc
push
rol
insl
pushf
xchg
or
pop
fisttps
mov
wbinvd
dec
adcl
pop
pop
popa
fimuls
cmp
clc
mov
push
xor
mov
leave
and
mov
insl
movsl
fdivrs
push
daa
mov
jb
mov
fstpt
lret
inc
leave
jne
sub
cli
inc
clc
mov
cmpsl
outsl
pop
lea
inc
pop
push
bnd
sub
or
test
repz
push
pop
pop
jmp
imul
inc
xchg
adc
sbb
outsl
loopne
mov
cli
cmp
or
push
jmp
or
cmp
xor
int
jecxz
mov
inc
jae
jg
cmp
pop
test
dec
fistps
bound
es
jne
push
sub
cmp
repnz
pop
and
inc
dec
and
daa
xor
cmp
mov
int
inc
sub
xlat
pushf
testb
pop
aas
shr
pop
out
xchg
push
cmpsl
ds
scas
fistl
mov
push
adc
hlt
sbbb
and
inc
inc
cwtl
inc
cmpsl
enter
outsl
int3
sbb
hlt
jno
mov
mov
mov
insb
dec
call
jae
or
leave
xlat
es
mov
pop
cmc
mov
daa
fsubrs
jbe
lea
dec
imul
jl
into
pop
pop
decl
call
fisubs
pop
lods
push
jb
icebp
push
adc
outsl
addr16
mov
lret
add
mov
mov
ficompl
inc
dec
pop
and
mov
mov
dec
cmp
sahf
xchg
cmp
sub
xchg
push
out
inc
repz
xor
daa
add
enter
das
jl
pop
push
fisubrs
fcoml
outsl
pop
fwait
pusha
mov
add
push
movsl
cwtl
xchg
push
or
jmp
pop
adc
ds
sbb
insl
sub
sub
lea
xchg
popa
adc
add
mov
dec
inc
jecxz
and
dec
scas
loop
lahf
jns
mov
mov
fstl
push
mov
ja
fidivs
fstpt
rclb
es
icebp
cld
push
ret
out
shll
pop
test
pop
pusha
loope
cmp
movd
adc
lods
dec
incl
inc
loopne
loope
xchg
xor
bound
or
jo
inc
jb
mov
pop
or
in
lret
fisubs
out
jmp
hlt
sub
repnz
jmp
movl
pop
je
out
push
nop
sub
jl
push
sub
stos
out
stc
movsb
jl
add
jne
icebp
divb
inc
mov
or
insb
cmp
xor
mov
das
jp
aam
je
dec
sub
sbb
xor
or
mov
ret
out
xchg
movsb
rcrb
xchg
dec
inc
jmp
mov
rorl
aam
sbb
and
scas
fldenv
jno
jg
jns
cmp
fldl2e
pop
sbb
stc
sbb
insl
inc
faddp
adc
sub
sbbl
data16
adc
mov
inc
mul
jge
xor
out
das
in
xor
mov
mov
call
stos
dec
inc
pusha
insb
push
push
jle
lods
xor
stos
movsl
outsl
inc
dec
and
or
ret
jl
xchg
jge
adc
push
cmp
mov
pop
ja
sub
or
xor
fbld
in
movsb
cmpsl
sbbl
cmpsb
pop
arpl
mov
insb
inc
push
mov
cmp
xor
and
jge
shr
push
int
int
mov
push
cmp
jae
push
push
push
cmpl
ficoms
push
daa
test
mov
xor
fsub
sbb
repz
lods
dec
mov
mov
pusha
inc
push
in
mov
outsl
xor
dec
or
imul
cmp
cmp
mov
cmp
cld
lods
push
xchg
fwait
shl
lahf
jae
mov
xchg
dec
sarb
pushf
push
mov
jno
les
cmpsb
sub
pop
xor
popa
push
fs
pushf
into
outsl
fwait
rolb
call
test
inc
popf
pop
jmp
inc
and
xor
aad
arpl
cld
add
xchg
mov
rcrl
cmp
mov
jo
sub
mov
mov
ficoml
sub
mov
and
enter
pusha
adcb
lea
mov
lock
mov
dec
sbb
mov
sbb
add
fwait
xor
xchg
insl
pop
in
shrb
and
sbb
adc
and
jbe
lea
pushf
xorl
cmpsl
scas
mov
push
cmp
push
inc
jge
cmp
aad
lods
jl
lcall
xor
cmp
mov
mov
push
outsl
mov
sar
in
fwait
pushf
gs
js
and
loop
inc
cmp
xchg
js
jo
mov
loopne
adc
inc
xor
aas
rcrb
aaa
adc
jae
xor
jle,pt
call
pop
bound
leave
and
push
mov
loope
sbb
ds
repz
sub
xor
mov
push
pop
out
xlat
in
in
adc
xlat
cli
andb
popf
insb
sub
addr16
in
push
jno
out
sbb
pop
ljmp
wrmsr
imul
dec
cmpsb
push
jb
sub
aam
stc
push
sbb
jge
cmpsb
test
insl
lds
xchg
inc
jl
push
test
pop
push
and
push
ds
inc
add
mulps
stos
push
jae
and
je
sbbb
into
hlt
fists
cs
mov
jns
scas
stos
add
jbe
xchg
inc
lcall
cltd
push
lret
dec
mov
jns
data16
fsubrs
push
arpl
ljmp
ret
cmp
xchg
pop
mov
jo
sub
jns
jno
xor
pop
jge
push
pop
jnp
aad
inc
insb
cmp
mov
cmc
add
fimuls
shrb
jbe
lods
lds
mov
sub
xchg
sub
pusha
es
ds
test
jb
adc
stc
inc
push
push
xor
shll
mov
shlb
adc
arpl
in
shl
xchg
cmpsl
stos
mov
push
mov
loopne
jne
dec
ret
or
xchg
icebp
or
daa
in
add
pop
jno
ss
jg
sub
call
stos
sbbl
into
push
mov
ret
push
sub
ret
cmpsl
xor
lret
inc
fdivs
inc
pop
push
addr16
push
mov
subl
mov
imul
popa
dec
jne
sub
clc
xor
popf
or
lret
inc
adc
jnp
or
mov
icebp
dec
push
jmp
mov
pop
and
push
sbb
ret
jmp
xchg
cs
scas
add
push
in
cmpsl
jne
test
cwtl
push
cmp
addl
mov
icebp
imul
lcall
pop
sahf
sbb
cmp
fdivr
xchg
mov
jecxz,pn
loopne
pop
js
divl
cmovns
mov
mov
push
cmpsb
nop
mov
xor
rcll
int
jmp
enter
pop
sub
or
pop
xchg
sub
cmpsl
cmp
dec
and
pop
xchg
push
lock
xlat
adc
dec
xor
fcmovnbe
loope
sub
insl
sub
adc
push
sbb
and
mov
adc
ss
and
dec
mov
sbb
pushf
jbe
push
dec
inc
and
xchg
lods
dec
adc
jge
mov
sub
mov
xchg
push
xchg
test
xor
and
out
pop
adc
xchg
nop
inc
mov
dec
subb
sub
test
xor
and
and
int
adc
sbb
jb
jmp
mov
out
subl
mov
mov
enter
mov
js
shll
adc
in
jp
stos
push
pop
mov
call
sub
add
hlt
test
imul
xchg
xchg
sti
repz
fdivrs
test
mov
push
test
in
gs
mov
stc
and
push
push
daa
nop
and
sarl
fs
sti
test
cs
popa
or
add
push
or
pushf
outsl
pop
pop
cmp
inc
sbb
nop
mov
sub
data16
inc
stos
out
cmc
fsubr
into
mov
jns
std
inc
adc
cmpb
ljmp
rcrl
lret
push
out
inc
mov
cltd
test
add
shlb
adc
adc
xchg
push
in
rcl
repnz
add
dec
cwtl
xor
inc
aam
xor
out
test
sub
pop
lods
adc
rcll
pop
push
js
repnz
mov
jecxz
adc
push
lret
mov
mov
ljmp
add
adc
cmp
std
jl
shlb
subl
push
xor
jecxz
dec
jno
xchg
dec
sbb
imul
sbb
or
lea
pushf
sbb
xchg
add
xlat
jg
stos
adc
add
mov
inc
cmp
dec
or
push
mov
push
fs
stos
mov
out
dec
push
fcmovbe
jmp
add
outsb
aam
cltd
jbe
sub
mov
popf
outsb
or
cmp
popf
inc
into
mov
xchg
dec
or
fisttps
jl
mov
scas
mov
sub
hlt
mov
test
lds
mov
mov
and
scas
cmpl
stc
sti
data16
imul
daa
in
sbb
mov
cld
lods
cmpsl
pop
sub
mov
xor
and
ret
push
mov
pushf
inc
lret
adc
and
xor
es
arpl
dec
mov
arpl
lret
sbb
or
jo
popf
int
cmp
aas
mov
pusha
in
loop
xor
jae
fisubs
lret
sbb
mov
mov
xchg
jae
jne
dec
inc
roll
popl
sub
inc
mov
sub
nop
cmc
and
jbe
rcrb
xor
in
mov
mov
add
dec
push
cmp
dec
xchg
sti
mov
mov
imul
and
test
clc
and
repz
lea
mov
pop
pop
mov
pushf
or
call
fists
jle
inc
adc
in
cmp
ret
mov
mov
ds
int
ja
stc
aaa
test
data16
testb
and
cmpsb
xchg
sar
dec
push
fistl
push
add
jmp
xchg
xchg
inc
dec
sahf
pop
mov
int
jne
add
xchg
in
xchg
ficoml
shlb
xor
movhps
out
hlt
adc
loop
jo
mov
pop
enter
repz
inc
cwtl
daa
fidivs
pop
roll
mov
movsl
gs
mov
dec
mov
jge
fisttpl
fists
jp
jbe
pop
fwait
out
sbb
outsl
cltd
mov
inc
dec
daa
and
jg
out
push
dec
test
in
push
lods
aad
dec
arpl
sarb
jecxz
mov
xor
stos
sub
or
data16
mov
xor
jecxz
stc
sub
cwtl
mov
mov
je
mov
or
jl
sub
repnz
daa
xor
xchg
jg
adc
out
lods
stos
cmp
es
lret
fiadds
cld
fdivp
cmc
adc
sub
sub
rol
lods
repz
lock
add
inc
push
imul
fisttps
jle
jne
push
pop
test
mov
or
dec
aad
lods
scas
and
cmp
and
aad
inc
loopne
mov
push
in
cmp
fadds
testl
dec
inc
lods
xor
mov
stos
pop
push
sbb
sub
popf
cld
mov
and
add
push
loopne
and
push
sar
push
or
fidivl
adc
push
push
hlt
ss
repz
mov
fcomp
adc
leave
loopne
fwait
mov
mov
lds
loop
insl
xchg
or
popf
fmul
jp
xchg
imul
mov
xchg
adcb
scas
adc
sarl
dec
fimull
sahf
fcomps
int
fnstsw
xchg
pop
shlb
cmpsb
xchg
cmc
aaa
mov
dec
test
add
in
xlat
pop
shrl
enter
adc
push
and
enter
arpl
and
mov
lods
ja
inc
jns
jle
jne
inc
jbe
bswap
mov
gs
cmp
mov
sub
jno
and
mov
stc
push
push
xlat
inc
or
cmp
cmp
or
stc
jg
xacquire
dec
jb
les
mov
cmp
data16
idivl
pop
shrl
pop
or
hlt
cs
stos
mov
cmp
les
jno
inc
aas
rclb
mov
dec
jp
aaa
xchg
xor
mov
lret
jl
flds
in
cwtl
mov
adc
imul
imul
and
jge
xchg
stos
push
js
popa
lea
pop
in
jmp
inc
push
rclb
inc
dec
rolb
push
movsl
stc
cwtl
cmpsl
test
mov
subb
lret
push
sbb
mov
nop
icebp
sub
sbb
and
xchg
xor
push
jbe
iret
pushf
xor
in
test
add
xor
lock
xchg
iret
mov
fists
gs
decb
ret
loope
add
je
shl
sbb
push
clc
out
in
mov
mov
aaa
mov
cmp
pop
loope
and
and
push
mov
out
scas
in
lret
xchg
jbe
pusha
jb
add
lock
jge
xchg
out
subb
popa
insl
pop
pushf
fwait
pop
inc
scas
xchg
mull
jo
mov
testl
pop
push
dec
xchg
mov
lods
xor
push
dec
cli
ficomps
jge
mov
xor
push
out
nop
popa
dec
sti
popa
mov
inc
and
enter
daa
stc
shlb
and
xor
std
adc
test
or
incl
mov
xor
pop
jle
test
add
inc
dec
popf
dec
adc
and
sahf
inc
pop
xchg
or
lods
imul
add
jne
into
movsb
adc
add
testl
clc
test
ljmp
mov
inc
cmpsl
mov
xchg
std
rclb
aas
sub
dec
mov
push
ja
jmp
mov
add
scas
dec
enter
inc
and
and
movsl
aad
or
mov
fcoms
shrl
popf
or
lods
int3
leave
dec
jmp
dec
cld
push
push
xorb
and
lret
es
pop
in
imul
lcall
dec
cld
addr16
pushf
adc
aas
jg
ja
ret
std
mov
idiv
mov
fwait
fsts
andl
mov
xchg
mov
mov
call
and
mov
mov
mov
imul
xor
insb
jge
xor
fwait
pop
pop
sarl
push
mov
sti
and
and
mov
sbb
inc
inc
fcomps
push
xchg
inc
pop
sbb
jb
ds
lcall
push
cwtl
xchg
aam
add
sbb
push
sub
add
out
pop
fidivrl
sbb
cltd
stc
or
mov
stc
or
push
and
xor
ljmp
in
stc
xor
dec
js
mov
pop
pusha
xor
cltd
mov
xlat
fbld
cli
cli
sbb
in
dec
popa
xchg
cmp
inc
inc
jno
push
pop
fisubrs
sar
repz
lock
aam
or
and
cmp
xchg
dec
mov
or
fwait
cs
andl
xor
add
push
repz
xor
in
mov
in
dec
add
xchg
dec
fsubrl
sarb
jg
imul
iret
sbbl
sub
sub
xchg
inc
and
push
lods
xor
mov
dec
scas
mov
shrl
or
push
loop
or
or
test
outsb
shlb
cmp
leave
xchg
cmp
sub
pop
je
addr16
aaa
jle
mov
enter
std
fsub
iret
in
xchg
shll
mov
jno
sbb
pop
out
jmp
nop
sbb
jg
sub
sbb
test
shll
insl
jo
mov
or
add
inc
imul
push
daa
adc
shrb
ja
jp
and
or
dec
mov
fisubs
jno
xchg
mov
fdivl
push
pop
fwait
mov
stos
xchg
mov
fstp
lods
loop
sub
rol
sbb
push
xchg
sbb
adc
dec
cmc
call
fadds
sbb
hlt
mov
jl
fwait
dec
jne
fcoml
iret
push
push
sbb
lret
sbb
fadds
ja
dec
stc
mov
fcmove
movsl
scas
out
int
xor
aas
adc
fsubrs
sahf
js
imulb
movsl
pop
negl
mov
xchg
fdivrp
sub
pop
cmpsl
push
outsl
push
cmp
lret
mov
fsts
lahf
cmp
jns
xchg
imul
das
pop
add
mov
in
call
sbb
out
shll
mov
pop
int3
insl
in
stos
xchg
cmp
and
push
rorl
in
js
lahf
das
pop
xchg
popa
dec
mov
in
cli
out
mov
push
jae
push
mov
push
ror
add
rcll
lods
out
dec
inc
scas
or
push
jae
stos
sub
enter
push
and
hlt
inc
ljmp
jle
ljmp
lahf
mov
stc
push
sbb
insb
push
mov
push
xor
btr
inc
push
in
das
mov
xor
flds
sti
mov
jbe
cmc
add
xchg
or
shrl
inc
mov
lret
cmp
dec
rcrb
inc
add
imul
aam
jb
mov
mov
and
pusha
pop
jge
mov
and
pop
push
inc
sbb
subl
test
fcmovbe
sti
mov
popf
int
sbb
cmpsb
push
lods
xchg
jnp
sub
mov
das
dec
mov
test
dec
jae
pop
jbe
cmc
cwtl
shrb
jp
gs
cmc
inc
adc
aad
xchg
into
cmp
js
imul
jo
sahf
and
scas
mov
cmp
add
adc
stos
pop
movsb
pop
loope
stos
xchg
mov
js
jmp
mov
push
or
fs
ss
pusha
xchg
ret
sbb
ds
popa
iret
push
mov
cmp
pop
addb
sub
or
test
pushf
aaa
inc
jecxz
leave
sbb
daa
pop
lret
xor
rep
xor
in
int
push
lcall
xchg
cmc
mov
or
xchg
clc
and
xchg
call
mov
mov
out
xor
mov
sbbb
sti
pop
ror
adc
mov
test
sarl
cvtpi2ps
xchg
jno
sub
xchg
push
dec
enter
in
cmpsl
inc
in
pop
dec
cmpsl
xor
inc
add
jl
iret
push
mov
je
jbe
test
jae
loopne
and
std
cld
loope
lods
sbb
daa
mov
scas
sub
lret
add
arpl
add
rclb
pop
mov
lods
jmp
adc
mov
pusha
shr
out
jb
int
or
cmc
sbb
jo
imul
enter
nop
xor
pop
dec
mov
jmp
bound
popf
adc
pusha
js
lea
add
cmpsl
inc
xorb
pop
push
loopne
lea
mov
shl
jg
mov
jb
divb
mov
push
cwtl
idivb
sbb
mov
mov
leave
push
in
test
outsb
idiv
fldl
sbb
mov
cmpsl
sar
adc
xchg
cmpl
ret
scas
aad
xchg
js
push
ljmp
adc
fcomps
pusha
mov
push
cmpb
push
imul
ljmp
mov
push
pop
jge
fsubr
add
js
dec
fidivrl
sub
insl
stc
loop
cmp
ja
jno
push
xchg
ret
ficompl
out
xor
fbstp
jae
push
pusha
mov
pop
sub
push
pop
xchg
int3
out
fisubs
fsubrl
dec
inc
mov
jge
stc
cmc
adc
cld
cmpsb
cmp
frndint
in
pushf
mov
lahf
das
out
mov
cmp
add
scas
inc
cld
mov
sbb
jl
lcall
popl
dec
and
outsl
clc
mov
insl
fidivl
das
std
mov
jne
pop
das
xchg
dec
das
or
sti
inc
mov
mov
sub
pop
int3
and
movsl
in
or
push
icebp
adc
lds
inc
dec
pop
fstl
cld
xor
cmp
adc
xor
add
pop
fnstsw
mov
jb
xchg
jge
cli
mov
mov
push
scas
es
fidivl
push
mov
daa
shlb
int
inc
je
es
pop
repz
cs
fs
sub
aas
jl
inc
les
popa
jo
int
mov
sbb
sub
add
pop
dec
sbb
movsb
inc
in
jbe
in
push
loopne
mov
lods
push
cs
std
jns
mov
and
cmpl
mov
push
in
jnp
in
mov
ljmp
into
into
cmp
cmc
cld
mov
inc
bound
in
inc
hlt
xor
cmpsb
cmp
xchg
sub
loop
mov
xchg
mov
cmp
push
popa
or
frstor
xchg
dec
xchg
pop
push
mov
fildll
dec
repnz
getsec
out
stos
ss
leave
cs
add
fldcw
aad
or
mov
into
adc
jae
int3
enter
outsl
mov
daa
cmc
test
xor
push
pushf
insl
in
pop
inc
into
lock
fucomi
xlat
fstpl
mov
cld
negb
and
xchg
adc
popf
mov
in
xor
repnz
leave
pop
imul
fdivp
dec
mov
jbe
adc
in
jmp
pusha
inc
fisttpl
not
push
cmp
cmpsb
fxch
pop
push
pop
push
and
sub
xor
xchg
sub
sahf
sti
repnz
sub
push
or
xchg
in
rclb
mov
pushf
in
push
shll
or
add
test
movsb
pop
cmpsb
dec
adc
arpl
loop
ret
icebp
adc
adc
hlt
push
add
fsubrs
ret
push
ss
jl
lcall
icebp
sub
mov
cmp
popf
jae
sbb
mov
jg
or
push
jle
xor
push
out
jg
hlt
addl
mov
sbb
js
ret
out
inc
cli
hlt
sti
scas
stc
out
and
mov
cld
lods
add
imul
dec
test
push
xchg
jno
cs
lahf
sub
cmp
push
adc
sbb
int3
adc
in
clc
negl
pop
pop
test
leave
ret
dec
cld
int3
cli
sti
and
arpl
test
inc
les
xchg
mov
jns
inc
cmpsb
jg
pop
pop
outsl
xchg
xor
and
jo
xor
dec
jp
das
addl
in
cmp
stc
pusha
cmp
divps
fmul
sahf
xchg
dec
movsb
mov
dec
out
xor
adc
sti
outsl
fisttps
cmp
int3
jg
adc
pop
or
jbe
dec
sbb
mov
fcmovnu
add
ret
xor
add
sub
push
js
xchg
jl
jb
sbbb
out
xchg
stos
pusha
fldcw
mov
add
pop
cld
cld
js
popf
mov
int
sbb
jg
mov
xor
cmp
jne
xchg
out
mov
rorl
stos
icebp
adc
or
mov
pushf
add
lret
std
jecxz
dec
out
jbe
idivl
iret
int3
ljmp
dec
insl
addr16
mov
mov
push
out
cmp
push
and
aaa
movsb
pop
cmp
test
pop
mulps
jnp
das
add
es
imul
aaa
push
jge
lcall
aam
dec
mov
mov
xchg
push
sbb
xor
in
ret
popa
popf
push
mov
fdivs
inc
imul
or
lea
xchg
pop
cmpsl
in
in
insb
ret
out
jnp
xor
lret
in
xchg
mov
inc
cmp
mov
xchg
fwait
pop
scas
dec
ret
sbb
dec
xchg
mov
push
adc
and
mov
rolb
stc
enter
testl
insl
inc
dec
out
fld
lock
jns
push
sub
push
testb
loope
cmpsl
into
mov
cltd
cmp
mov
push
pop
test
lret
rol
xor
out
push
mov
pop
dec
sarb
or
add
stos
sbb
outsl
ljmp
rcl
pop
pop
movsb
enter
mov
xor
push
es
sbb
jecxz
xchg
mov
inc
xchg
mov
cwtl
test
stc
xchg
in
sub
jl
inc
js
add
lahf
js
dec
out
dec
push
or
adc
orl
pop
roll
inc
orl
popf
pusha
call
push
cmpsl
test
mov
sbb
nop
arpl
ret
jecxz
inc
stos
mov
or
push
out
push
push
test
in
sbb
inc
inc
cmp
jmp
mov
xor
add
insl
mov
cmp
pop
xchg
leave
loop
cmp
xor
sahf
pop
sbb
jne
and
cltd
in
xchg
push
in
sbb
jg
in
js
mov
adc
xor
cmp
inc
ret
jns
mov
adc
or
sbb
nop
lcall
stos
out
andl
adc
cmpsb
lret
inc
leave
mov
add
or
cmp
xchg
pushf
ficoms
adcb
cli
cvttps2pi
inc
cmp
int3
and
and
fnstcw
cli
inc
mov
ja
fildll
push
xor
xchg
int
ss
add
and
into
push
and
adc
popa
rcll
cmc
decl
add
imul
fwait
mov
stos
push
js
in
mov
imul
xchg
adc
pop
pop
push
clc
pop
push
in
insl
das
les
into
mov
stc
sub
ss
int3
jg
cmp
call
mov
mov
orl
jno
insl
adc
pop
mov
nop
and
addr16
dec
or
aam
mov
pop
sub
mov
daa
mov
aas
cmp
ficompl
push
cmp
add
and
cmp
sub
pushf
and
sbb
push
outsb
sub
daa
pop
inc
sub
nop
sarl
outsb
iret
por
in
lods
mov
adc
jp
stos
mov
add
fimuls
add
jl
sti
mov
out
idivl
mov
jg
cmp
adc
sbb
or
mov
rclb
cmpsb
inc
and
or
xchg
adc
cmc
jle
xchg
cs
outsl
or
mov
imul
cmp
lahf
sub
aaa
xchg
and
cwtl
sbb
repz
inc
testb
stos
jmp
xchg
inc
repnz
jb
addb
jb
cmpsb
mov
push
push
jmp
cld
sbb
mov
push
or
mov
push
pushf
add
pop
xor
inc
add
or
xchg
fld
roll
nop
cmp
jo
inc
sbb
lods
stos
or
jne
sbb
xorb
idivb
dec
pop
sub
mov
pushf
add
pushf
test
sub
adc
in
jo
sbb
sbb
cmpsl
sub
dec
inc
mov
jle
fucomip
ret
mov
lret
mov
inc
out
andb
lret
jecxz
and
sbb
mov
xor
scas
cmpsl
dec
push
sarl
outsl
cld
sbb
cmp
pop
sbb
inc
outsb
cmp
fldl
stos
add
dec
adc
jbe
aam
jns
jmp
and
push
rorb
and
ja
add
lock
testl
test
mov
and
mov
outsb
mov
jmp
mov
pop
cmc
jb
repz
fcos
mov
bnd
pop
jnp
fisubl
fstpt
shrl
cltd
xchg
xor
push
jno
inc
and
inc
mov
stos
lcall
imul
push
hlt
mov
loope
adc
xchg
adc
cwtl
or
or
das
jg
xor
shrl
and
daa
loopne
sub
pushf
test
mov
bound
push
cwtl
std
mov
mov
inc
jg
and
mov
inc
mov
add
sbb
ds
shlb
ret
push
dec
sub
push
jl
addb
repnz
sbb
fidivrl
incb
faddl
jno
inc
mov
sti
lret
mov
testb
in
xchg
dec
mov
mov
add
adc
enter
add
ja
jge
arpl
xchg
mov
pop
fdivl
dec
pushf
shlb
xchg
stc
sbb
xchg
mov
mov
jb
adc
xchg
inc
mov
mov
je
mov
fdivs
mov
jo
or
shlb
adc
adc
pop
pop
and
jns
lods
or
mov
fwait
xor
inc
adc
lahf
cli
dec
imul
sbb
dec
lea
adc
mov
xchg
sbbl
dec
test
ss
xorl
adc
and
popf
pushf
inc
push
arpl
sbbl
jnp
arpl
dec
adc
cmpsl
ds
xchg
jb
jg
and
jecxz
sbb
fsubrs
push
stos
lock
pop
push
es
dec
cld
ds
sub
lahf
aad
rol
and
mov
dec
xor
jne
or
or
imul
push
mov
dec
cmc
pop
mov
or
es
mov
je
sbb
out
leave
sub
fs
gs
xor
mov
xor
pop
xor
and
lahf
les
mov
stos
mov
adc
popf
jno
scas
fwait
imul
add
adc
cwtl
mov
repnz
stos
es
cmp
and
cmp
add
ret
sbb
or
fnstsw
into
jecxz
push
or
push
lea
shll
dec
push
add
mov
xchg
or
mov
inc
pushf
push
pusha
mov
cmc
inc
out
hlt
icebp
loop
adc
and
jns
push
inc
cltd
jo
and
pop
cmp
sub
xchg
adc
inc
mov
inc
jmp
sub
or
sub
mov
pop
es
js
adc
or
div
mov
mov
pop
fmulp
js
add
jle
sub
xor
xlat
cmp
test
push
add
pop
sbb
xchg
movsb
adc
pushf
aad
pop
rolb
scas
jge
mov
jo
pop
movsl
push
sbb
out
enter
ljmp
cli
shll
xor
and
fidivrs
inc
dec
sbb
add
push
or
sub
jno
xor
sub
sahf
inc
cmc
mov
and
and
jae
scas
push
insl
dec
inc
ss
push
ss
aam
lcall
cld
scas
push
push
or
bound
adc
dec
push
or
jo
adcb
jbe
gs
push
scas
data16
mov
arpl
jmp
pop
sbb
push
xor
mov
imul
stos
jle
loopne
jnp
push
sbb
insl
jp
repnz
mov
out
cs
and
dec
inc
xchg
cld
je
ficompl
xor
cltd
pop
icebp
xor
sub
inc
and
das
repnz
rcl
insl
jns
lods
lds
jmp
dec
iret
push
fistpll
xor
outsl
or
sub
insb
stc
out
imul
and
mov
je
push
jo
sub
mov
das
sbb
inc
imul
adc
ficompl
mov
pop
pop
xor
aas
xchg
mov
jnp
sarb
outsl
lcall
add
or
data16
adc
arpl
push
xchg
lret
push
fs
pushf
jmp
fisttpl
push
adc
dec
inc
call
in
push
loope
mov
test
add
mov
mov
and
jp
cli
imul
and
loope
pop
jae
enter
add
jl
add
push
xchg
dec
xchg
andb
aas
aad
cmpsb
cwtl
mov
test
xchg
mov
jns
cmp
and
xchg
gs
mov
mov
mov
mov
push
mov
arpl
dec
add
sub
inc
ljmp
rcl
sti
std
sub
and
fsubrs
push
shlb
loop
mov
in
xchg
gs
jae
sarl
or
adc
xchg
in
pop
test
out
xchg
jmp
fiaddl
inc
rclb
or
aaa
mov
sbb
inc
fucomi
rorb
cmp
adc
sub
repnz
mov
pop
lcall
out
popa
push
fcmovnb
out
sbb
in
inc
sub
jae
add
cwtl
jecxz
push
icebp
mov
mov
mov
xor
sub
cwtl
sbbb
mov
rcr
jne
das
push
ret
push
jge
das
inc
rorb
data16
test
sub
pop
mov
inc
xor
pusha
roll
sbb
lcall
js
outsl
jb
repnz
mov
xor
push
xorl
push
dec
cltd
cmpsb
jno
test
pop
xchg
jno
xchg
fmul
jecxz
jne
mov
jo
std
cmp
push
aam
mov
cmpsl
mov
cltd
leave
and
push
mov
cmp
jne
push
mov
push
mov
jl,pt
push
pusha
hlt
sub
cmpsl
jge
cli
testl
cmpsl
mov
lods
push
pushf
mov
mov
xor
push
adc
pushf
or
cltd
jno
fiadds
mov
xor
lds
jo
sub
leave
inc
das
jnp
mov
fmull
stc
xchg
add
xchg
aaa
mov
sub
sbb
test
lahf
lret
push
je
outsb
popa
out
mov
or
std
out
ja
sub
push
and
pop
and
sti
cmpb
mov
pop
stc
lock
add
mov
inc
mov
inc
sub
sbb
push
insl
addr16
jae
ret
out
and
stos
shll
mov
repz
push
js
popf
out
add
mov
xchg
sub
dec
repnz
or
sti
mov
xchg
in
jle
outsb
pop
mov
sbb
xchg
jno
data16
pusha
push
sub
icebp
int3
pop
fldt
mov
fiadds
aaa
outsb
hlt
mov
inc
xor
rcrl
insb
lea
pop
jl
mov
ljmp
cmp
int
cmpsb
call
iret
inc
dec
cmp
push
sahf
lcall
dec
xor
mov
pusha
adc
shll
int3
sahf
ss
iret
push
punpcklwd
push
or
out
lds
xchg
dec
shll
lcall
aad
loop
mov
push
push
out
dec
xchg
es
sub
lahf
add
aaa
or
mov
out
adc
sub
pusha
mov
les
sub
xlat
addr16
pop
jge
adc
add
push
dec
int3
in
mov
add
mov
mov
dec
out
insb
mov
or
cmc
mov
xchg
ret
push
mov
mov
outsl
pop
cmp
jns
sbb
aad
test
loope
bound
xor
adc
imul
ljmp
shrb
adc
cli
out
es
outsl
es
adc
imul
out
pop
aad
sub
inc
pop
out
add
in
outsl
push
data16
push
ret
jg
lock
jb
push
outsb
test
cmp
push
pop
mov
rorb
inc
jae
lcall
sbb
pop
stos
and
dec
sub
les
stos
xchg
jae
xor
nop
pop
pop
add
add
inc
xor
scas
push
test
or
xor
ja
lock
scas
inc
js
movsb
ss
test
mov
inc
mov
xor
dec
out
dec
fcompl
jb
and
imul
push
movsl
dec
into
clc
adc
mov
mov
popf
jno
repnz
rcrl
outsl
iret
faddl
das
pop
adc
lcall
rorb
jle
and
push
jl
mov
dec
jmp
into
mov
lcall
fsubrs
movb
je
add
movsl
mov
stos
cmpsl
cmpsb
loop
sbb
insl
sbb
out
mov
push
dec
xor
inc
cmpsb
movsb
inc
sti
add
mov
fisubrs
in
jp
xchg
push
test
xchg
mov
jmp
movsb
xor
inc
dec
int3
adc
mov
xchg
arpl
add
pop
push
mov
cmp
mov
sub
lcall
je
js
pop
jecxz
loope
push
mov
mov
xchg
insl
fisubrl
or
sub
fiadds
outsl
pop
or
verw
idivb
push
imul
cmp
sbb
pop
mov
ret
sbb
adc
lods
in
bound
sub
xchg
xor
in
idivb
or
push
cmp
jnp
aam
xchg
decl
add
jg
pop
fidivl
jecxz
mov
add
stc
xchg
repz
dec
ficomps
sbb
and
test
ret
jbe
cmp
mov
movsl
xlat
jle
sub
lret
and
and
xchg
dec
mov
stos
push
ss
pop
ds
jne
cmp
insb
sbb
push
mov
push
xchg
shrd
lret
push
sti
subl
fadd
jb
cmpsl
das
mov
dec
sbb
imul
xor
fldl
daa
iret
mov
adc
loope
sub
jg
inc
adc
stos
and
push
sbb
dec
pop
add
hlt
jecxz
dec
outsl
push
mov
mov
mov
scas
test
mov
repz
cmpsb
out
subl
sub
pop
les
xchg
mov
cmp
ret
adc
loopne
sbb
aas
test
ficompl
inc
jo
xchg
xor
daa
and
fidivl
mov
inc
add
roll
in
mov
test
jbe
jmp
mov
xchg
mulb
fimuls
add
ret
rcl
nop
add
adc
sub
mov
or
hlt
addl
pop
pop
mov
mov
pop
adc
mov
adc
lret
data16
pop
clc
es
jecxz
cmp
xchg
mov
or
outsb
ror
or
pop
cmp
push
mov
dec
es
mov
or
imul
adcl
lods
adc
nop
gs
or
icebp
dec
mov
popa
sub
sub
les
dec
mov
pusha
int3
rclb
test
addb
loope
adc
and
xchg
xor
cs
dec
mov
push
jb
scas
testl
xchg
ljmp
popl
ret
inc
cmp
adc
fs
mov
push
adc
movsbl
std
repz
stc
and
xlat
out
xchg
outsl
sbb
call
test
dec
cmc
js
inc
mov
les
xchg
push
cld
daa
scas
fildl
jno
sbb
jp
in
mov
jo
aaa
fwait
push
movsl
pop
xchg
adc
dec
inc
pop
icebp
adc
mov
mov
inc
mov
mov
das
inc
cmp
jbe
cmp
jo
jl
pusha
jno
cmp
jg
push
xor
ds
jge
addr16
ret
xchg
cwtl
lahf
push
rol
loope
push
mov
xchg
lods
test
xchg
sti
mov
dec
cmp
jl
flds
ret
int
test
fbld
lret
repz
cmpsb
xchg
repnz
and
rol
push
test
jno
or
cmp
sub
fldt
cmp
adc
mov
dec
xchg
xor
inc
test
inc
in
movsb
lret
lea
xor
pusha
les
push
push
xorb
mov
adc
mov
mov
adc
les
idivl
outsb
sub
out
pusha
and
lods
push
movsb
clc
scas
stos
aaa
push
jne
pusha
lret
stos
jb
int3
inc
and
stc
jmp
xchg
loopne
lahf
testb
es
or
mov
test
push
jne
pop
inc
filds
nop
stos
mov
push
fbld
rorl
call
sub
push
inc
icebp
pop
mov
ret
xor
jnp
incl
out
hlt
xor
std
and
in
sub
or
push
scas
imulb
aas
test
cmp
push
clc
xor
out
loopne
cmp
inc
cld
cmp
fstp
jmp
push
nop
sub
add
xor
dec
and
push
push
loope
bound
popa
ds
cmp
movsl
fsubrl
jp
movsl
mov
cmpsb
mov
rcr
rclb
jne
je
mov
js
mov
imul
pop
gs
std
cmp
dec
stos
pop
inc
arpl
pop
xchg
dec
push
push
je
push
inc
ljmp
push
push
subl
add
int3
sub
add
push
daa
mov
mov
mov
aas
jnp
aas
mov
ret
movsb
ss
pop
xchg
cmp
ljmp
or
jo
or
pop
add
dec
arpl
popa
cmc
mov
inc
xchg
and
daa
lret
push
fstpl
push
mov
aad
mov
inc
mov
pop
aaa
lock
jne
push
test
or
xor
xor
test
leave
lret
rcrb
pop
dec
jne
call
xor
adc
mov
push
mov
or
mov
push
rcrl
jl
adc
loop
xchg
arpl
and
out
mov
xchg
sahf
scas
aad
addr16
ss
setle
adc
mov
and
sbb
adc
movsl
inc
mov
test
iret
add
sub
movsb
add
rcrb
mov
pop
push
push
mov
mov
xchg
sar
test
cmp
xor
xchg
mov
fimull
push
fiaddl
cmp
leave
add
popf
sub
xchg
mov
mov
inc
or
jo
cmpsl
jg
cmp
ror
jbe
push
and
ljmp
sahf
pop
mov
adc
in
sbb
test
aaa
sahf
mov
jns
adc
pop
ret
jae
lcall
sub
loop
xchg
inc
jmp
pop
das
or
mov
mov
imul
cmc
push
push
mov
mov
daa
mov
and
ret
aad
addl
adc
lods
mov
out
dec
mov
jbe
dec
cltd
or
sub
xchg
sub
lcall
inc
test
xchg
add
leave
aad
jle
pop
lahf
mov
fbstp
push
pop
xchg
mov
push
mov
cmp
push
push
ja
and
mov
notl
pop
out
cli
cmp
sbb
imul
jg
mov
sbb
fsubs
sbb
es
addr16
jne
cld
popf
inc
subb
sbb
mov
inc
icebp
stc
jns
mov
xchg
cmc
lea
icebp
lret
and
and
jecxz
jb
inc
sahf
cltd
dec
aas
inc
push
in
mov
push
mov
jge
je
mov
std
push
push
popf
pop
lcall
xchg
push
mov
aas
fbstp
cmp
loope
mov
cmp
xchg
popf
jle
mov
adc
fdiv
sub
icebp
pop
fisttpll
add
mov
cmp
adc
cld
mov
and
out
lock
outsl
cmp
sbb
scas
mov
mov
pop
dec
std
and
dec
sub
aas
cwtl
push
lret
dec
sbb
int3
fdivr
pop
fwait
push
mov
or
cmp
repnz
mov
sub
mov
lret
or
sub
inc
inc
dec
sbb
mov
xor
aaa
jns
lock
imul
xchg
jge
add
dec
pop
xchg
jle
sbb
into
xor
rcl
xor
fcomp
or
dec
lods
mov
dec
repnz
lcall
pop
lret
xor
fnstcw
mov
les
rolb
aad
pop
mov
cmove
mov
xchg
pop
rorb
inc
fwait
lret
pop
ss
add
ja
imul
cmp
inc
or
pop
cmpl
lods
andl
mov
lret
mov
jae
insb
xlat
ret
push
jbe
lods
mov
loop
scas
push
setp
and
std
out
mov
fistl
pop
jl
sti
clc
cltd
cltd
lods
inc
movsl
sub
jecxz
out
push
sti
lret
addl
fiadds
or
push
xchg
push
mov
rolb
add
addr16
fstpl
and
add
outsl
cld
push
push
lods
mov
and
or
stc
pop
mov
lcall
stos
loop
xor
outsb
xchg
lcall
xor
repnz
dec
shr
mov
shrl
loopne
pop
mov
outsb
pop
sar
bound
es
in
loopne
adc
xchg
mov
pop
mov
inc
js
fcmovnbe
xchg
rcrb
mov
mov
cmp
mov
jnp
dec
cld
cmc
sub
outsb
fmul
adc
and
dec
lock
rclb
push
test
adc
fdivrl
dec
adc
jp
mov
aas
push
std
mov
out
inc
ret
or
outsl
sahf
mov
lods
dec
mov
push
mov
scas
jp
dec
jg
add
dec
hlt
pop
pusha
add
into
pop
mov
test
frstor
cmovns
hlt
or
lock
lcall
std
movsb
sub
and
jne
add
mov
inc
jg
sbb
mov
lcall
pop
enter
lcall
daa
jle
mov
mov
arpl
outsb
rcrl
dec
push
jns
xor
hlt
mov
subl
negl
fwait
jns
xor
movsl
lcall
insb
sbb
out
ja
cltd
popa
cli
cmp
movsb
in
call
out
repz
xchg
sbb
mov
push
cs
call
out
mov
xor
fistpll
aas
arpl
ret
xchg
push
add
fisubl
lahf
pop
push
jnp
jns
inc
cmp
call
pop
mov
cmp
or
lods
adc
add
jg
pop
pop
sahf
scas
cmpsl
cmp
and
shr
jge
inc
mov
std
clc
mov
cli
lods
test
xor
popf
jne
pushf
enter
leave
ret
sti
nop
cmp
test
ret
pop
sbb
and
mov
repz
push
movd
out
es
test
inc
xchg
push
lcall
movsb
mov
iret
dec
fidivl
mov
popl
notl
inc
mov
pop
mov
push
adcl
dec
lret
fstl
push
pop
inc
fists
mov
xlat
add
leave
sahf
dec
shll
mov
mov
jmp
into
inc
inc
pop
xchg
call
adc
push
loopne
mov
mov
mov
cld
push
mov
or
pop
neg
push
aam
lret
sub
out
push
ja
adc
mov
out
inc
ret
fiaddl
cwtl
or
or
call
add
es
cld
arpl
test
cmp
xor
lea
mov
fs
cmpsb
orb
xchg
lea
lret
aaa
wrmsr
hlt
lret
mov
jecxz
xor
test
jmp
sbbb
out
push
popw
testl
insl
repnz
sub
xor
mov
outsb
loop
ret
repz
fstp
rcrl
std
out
call
lea
fisubl
mov
mov
int3
aaa
setge
mov
daa
jmp
popf
pop
fs
mov
ja
ljmp
call
popf
scas
mov
and
hlt
inc
adc
out
or
mov
aad
or
fistpl
cmp
or
insb
adc
sub
pop
mov
pop
mov
fnstcw
add
repz
push
andb
xor
mov
mov
xchg
jl
imul
mov
xchg
adc
fldt
ficompl
sub
jnp
lret
cmp
or
push
jo
int3
push
add
fs
insb
or
sbb
stc
add
pop
test
imul
pop
and
inc
fmuls
push
repnz
fistpl
cmpsl
cmpsl
cmp
jg
or
and
inc
inc
lret
add
xchg
cmpb
insb
push
daa
repnz
imul
inc
sbb
sbb
test
mov
into
mov
in
inc
mov
stos
aam
pop
out
sti
sbb
sub
mov
adcl
aas
jg
rorw
jno
cmp
pop
xchg
ja
xchg
int3
jbe
lods
and
frndint
jp
imul
out
shll
sbb
mov
xchg
push
sarb
nop
movsb
stos
xorl
rol
jne
sub
push
mov
mov
negb
mov
dec
insb
cwtl
xchg
mov
sub
sub
dec
loope
jl
dec
xchg
jns
jmpw
xchg
mov
testb
ljmp
xchg
add
fbld
push
xchg
loopne
sbb
cmp
adc
insb
je
into
loop
inc
repnz
int3
pop
push
xor
lcall
adc
addr16
shlb
out
fwait
das
cwtl
data16
shrb
addl
popa
xor
xchg
rcrl
ljmp
lock
out
fistl
mov
int
pop
bswap
hlt
les
in
cmp
mov
arpl
repnz
sbb
pop
push
adc
xchg
mov
repnz
jno
and
jne
pop
les
mov
sub
pop
cmp
hlt
movsl
lods
es
clc
push
push
test
pop
movsb
das
and
cmp
pop
jl
shll
aam
aaa
fwait
lret
stos
mov
dec
std
sbb
xor
sbb
jle
xor
js
mov
mov
push
sahf
ficompl
jns
lea
jp
pop
ds
xchg
pop
mov
adc
test
jne
inc
inc
outsb
scas
dec
movsl
dec
xor
ljmp
or
shrl
cmp
or
repz
pop
ja
daa
mov
fisttps
in
std
pop
pop
lcall
pop
fildll
cmpsb
pop
pop
cmc
pop
push
iret
pushf
cmp
adc
ss
jle
dec
inc
es
sub
jmp
push
push
repz
push
mov
outsb
pop
jae
rcrl
push
js
scas
xor
mov
shlb
callw
xor
mov
and
loopne
mov
pop
xchg
in
adc
adc
fidivrs
test
out
insl
mov
xor
stos
shl
sub
fbld
repz
or
lea
adc
in
xchg
push
out
cmp
jle
jle
les
lcall
push
cwtl
psubq
int3
faddl
movl
inc
inc
test
outsb
outsb
shlb
inc
out
fstl
mov
sub
imul
ret
adc
hlt
movsl
pusha
data16
out
imul
add
out
insl
jno
cmpps
pop
iret
mov
adc
jne
cmpsl
arpl
movsb
dec
lea
adc
clc
es
push
ja
inc
movsl
es
sbb
push
test
das
xchg
shlb
test
es
mov
jno
mov
call
xchg
pop
xor
sarb
dec
dec
and
fistpll
outsl
mov
xor
out
mov
or
mov
ds
push
loope
push
jnp
outsl
add
add
xchg
fcmovnb
ret
xorl
adc
xchg
es
xchg
and
inc
stos
rorl
cmp
jbe
xlat
mov
or
rorb
and
jns
mov
decb
and
iret
push
mov
pop
xchg
xchg
lods
addr16
test
dec
add
inc
push
pop
mov
xlat
xor
pop
lds
jb
hlt
xchg
leave
sbb
out
push
aam
mov
jno
lods
call
cwtl
xor
inc
and
add
jns
push
dec
bound
test
inc
and
lret
push
jmp
scas
jbe
fisubrs
jmp
jne
push
dec
outsl
xor
jnp
call
and
dec
xchg
lcall
mov
out
clc
sub
icebp
fldt
test
and
cmp
dec
roll
aas
xlat
mov
pop
call
rcrl
lcall
add
test
mov
subl
stos
hlt
jno
mov
cmp
lret
shrl
inc
push
inc
cmc
add
cld
or
jmp
mov
cmp
leave
inc
pop
loope
jge
mov
cltd
xchg
jl
xchg
outsb
dec
sub
inc
popa
gs
notl
mov
mov
rol
jle
cmpsl
sub
test
test
popa
jl
jmp
repz
test
cld
cmp
mov
add
test
mov
dec
mov
imul
sbb
xor
pop
dec
cmpsl
in
push
in
rcll
cmc
pop
ret
dec
mov
cmp
pop
nop
cs
test
cli
in
out
pushf
pop
pop
lods
insb
mov
test
xchg
jae
pop
lret
ror
loope
scas
push
xor
call
xor
xor
inc
mov
jbe
imul
test
arpl
rorl
xor
fidivrl
or
push
add
push
mov
loop
dec
imul
and
add
lds
sub
ret
out
dec
xchg
push
pop
mov
add
mov
xlat
imul
lods
lahf
ds
out
sbb
pop
filds
xor
rorb
and
idivl
mov
mov
xchg
cmc
mov
push
addl
fstpl
lret
cmpsl
xchg
mov
xchg
dec
andl
pop
int
and
aaa
jae
push
stc
pop
xor
aad
test
xchg
frstor
lret
nop
mov
and
mov
push
aam
call
out
roll
test
mov
shl
inc
pop
lea
xor
adc
pop
repnz
inc
xchg
data16
lret
dec
pop
add
mov
sbb
xor
icebp
add
outsb
cmpsl
mov
loopne
fcmovu
xchg
jge
repz
das
xchg
xlat
jno
subl
leave
and
insl
outsl
addr16
inc
stos
xor
pop
cmc
cltd
sbbb
test
shlb
sub
sbb
adc
repnz
or
xor
dec
ss
dec
mov
das
adc
or
lds
adc
mov
lods
popa
fldl
mov
test
iret
push
dec
ds
cmpsl
push
push
xor
int
push
sarb
adc
xchg
push
mov
mov
jbe
push
mov
imul
lahf
loopne
sub
lock
mov
mov
orl
shl
mov
in
icebp
jp
insb
sti
mov
add
daa
adc
pusha
int
fisubs
out
lret
pop
sub
dec
out
pop
lcall
dec
jmp
in
pop
sahf
int3
outsb
test
gs
jo
lret
stos
or
mov
xor
cli
out
dec
mov
sub
call
hlt
es
ja
pop
movsb
cmp
lret
and
arpl
mov
sub
push
mov
stos
mov
loope,pt
into
jbe
ja
sbb
sbb
shrb
mov
mov
jecxz
popf
push
push
xchg
push
je
sub
inc
loopne
es
pop
push
subb
mov
lret
clc
imul
or
jnp
loop
sub
cmp
xchg
cmp
mov
mov
out
ljmp
or
adc
sahf
fcomip
shll
push
test
rcrl
jb
cmp
adc
ret
loope
and
es
push
xchg
xor
insb
jae
and
pop
mov
or
inc
dec
lods
shlb
jmp
popa
mov
in
push
sbb
xlat
orb
inc
rep
pushf
int
mov
add
into
hlt
aam
mov
fisubrl
jbe
dec
lahf
sub
jnp
lcall
into
mov
aaa
sbb
add
sub
fcmovb
jecxz
pusha
lahf
push
rcrl
xchg
out
dec
sub
push
out
loop
mov
cmp
pushf
mov
push
out
pop
adc
inc
xorl
cmpsb
xchg
push
es
lahf
test
add
xchg
loopne
out
mov
popa
jo
dec
push
adcl
inc
ljmp
std
or
xor
subb
fwait
lret
gs
mov
lods
orb
jecxz
xchg
sub
adc
popa
or
sbb
mov
mov
cmp
stc
or
dec
call
in
sub
push
adc
rorb
push
push
insl
cmpsb
xchg
or
and
cli
mov
stc
stos
sub
inc
test
int3
mov
loope
lods
push
mov
jbe
jne
push
sbb
scas
out
sub
cmp
lcall
adc
mov
adc
sahf
js
ds
dec
push
sub
shlb
and
das
ljmp
leave
repnz
lock
inc
dec
stc
cmc
jb
test
popf
sub
ljmp
cwtl
sub
push
repz
push
pop
or
add
sub
jno
cmp
dec
fistpll
enter
out
xor
jno
int3
repnz
cmc
xchg
mov
aaa
mov
mov
daa
jb
jge
in
mov
mov
inc
sub
popa
movb
mov
sub
gs
popf
data16
sbb
fadds
adc
or
lret
movl
aas
filds
cltd
jbe
mov
and
sahf
xor
std
xor
into
xor
sub
xor
test
shlb
movsb
jge,pt
aad
jmp
xchg
andb
sub
inc
shrb
cmp
adc
dec
and
lock
in
add
inc
or
cltd
daa
cmp
mov
movsl
fsubs
call
jl
sbb
insl
iret
popa
inc
dec
jl
mov
shl
adc
nop
xor
cld
mov
sbb
ret
jb
adc
cmc
adc
add
fldcw
jp
or
xor
shll
mov
shlb
add
cmp
sub
push
enter
popa
std
mov
push
pop
iret
or
jne
sbb
cmp
dec
jge
cs
ret
xchg
push
and
and
shl
mov
inc
out
push
push
cltd
adc
mov
mov
fstpt
xchg
js
jo
repz
cmpsb
mov
mulb
popa
pop
icebp
and
cmp
and
das
pusha
xchg
pusha
mov
inc
cmpsl
fnstcw
jae
mov
jae
pop
frstor
imul
add
rcll
and
ljmp
jmp
sub
fldl
cmp
pop
cmc
ss
lods
mov
ror
push
xchg
cmpl
jne
push
inc
push
jne
push
or
dec
xchg
pop
adc
cmc
jb
insb
fisttpll
jo
jg
lret
xchg
cmpsl
push
int
adc
push
jecxz
andl
mov
arpl
push
sbbb
cmpsl
add
dec
or
or
mov
push
jge
ljmp
aam
push
mov
test
popa
es
jo
fs
cld
test
out
shll
sahf
mov
sub
out
adc
daa
test
mov
and
cmc
xchg
jl
xor
faddl
mov
jp
sub
mov
int
mov
xlat
jg
mov
decb
xor
cmp
and
out
repnz
clc
mov
js
add
add
or
out
out
and
scas
repnz
jmp
and
dec
inc
rcrb
fadds
ss
mov
lods
or
pop
jmp
mov
cltd
inc
jg
xchg
popa
cmp
in
cli
inc
push
mov
iret
adc
sti
int
rolb
cmp
inc
cmp
ror
or
xor
cmp
mov
or
xchg
sti
inc
xlat
cmp
sbb
gs
nop
inc
xchg
push
ds
ud1
test
pop
push
add
or
cmc
sti
testl
rorb
out
int
fwait
lret
cmp
mov
insl
inc
mov
jae
jnp
mov
mov
out
bound
jne
outsb
sub
imul
gs
jecxz
negl
cmp
movsl
cs
push
aas
pop
fwait
rclb
pop
sub
or
into
in
sub
mov
jecxz
cmp
xchg
mov
jge
sbb
fmul
lcall
cltd
sti
sub
in
int3
push
aam
mov
sbb
inc
ret
icebp
or
iret
push
pop
adc
sar
fisubrl
inc
or
dec
and
jg
je
pop
and
in
inc
xchg
fidivl
xchg
mov
arpl
iret
ds
test
mov
cltd
arpl
out
xchg
out
aad
std
icebp
or
aaa
dec
mov
pop
cmp
aaa
push
iret
adc
ljmp
std
and
jne
call
pop
and
xor
cltd
cmpsl
push
ret
add
adc
addr16
rorl
repnz
out
cmpsb
cmp
mov
shr
lea
bound
imul
add
jns
je
mov
push
lcall
xor
enter
xchg
lahf
imul
or
popf
ret
mov
dec
pop
cmp
ss
mov
outsb
imul
jmp
movsl
lea
repnz
xchg
subb
jle
aas
stos
xchg
sbb
je
sbb
fmul
jno
loopne
flds
mov
lahf
push
andl
gs
call
imul
movsl
push
jnp
inc
cmp
in
or
jae
mov
repnz
jnp
ret
inc
notl
rcrb
rol
in
gs
xchg
push
pop
or
mov
or
mov
adc
scas
xchg
mov
int3
int3
mov
fstps
sbb
mov
adcl
es
cwtl
sub
daa
enter
mov
dec
pop
int
mov
lods
jmp
ss
addr16
mov
push
push
imul
loopne
pop
mov
push
xchg
xchg
incl
loop
jbe
push
sub
add
sub
es
push
jnp
pop
js
icebp
nop
adc
cmp
mov
mov
int3
in
repz
adc
cs
inc
mov
push
call
mov
mov
pop
dec
lea
mov
mov
fwait
mov
outsl
test
dec
push
mov
adc
pop
lahf
loop
xor
mov
cmp
addr16
decb
imul
mov
mov
sbbb
mov
popa
call
imul
aas
imul
xchg
fldt
shlb
push
push
xchg
sahf
test
mov
jno
pop
cmp
popa
roll
cs
push
pop
enter
aaa
push
dec
xor
pop
aaa
movsb
or
push
push
aaa
and
cli
and
lcall
jge
pop
out
scas
repz
aas
mov
mov
gs
and
fs
ljmp
mov
lret
loop
repnz
stc
out
pop
outsb
ret
inc
mov
enter
add
dec
mov
add
mov
test
nopl
sub
dec
lret
jnp
sub
push
jp
ret
xchg
shl
mov
pop
lret
jne
loop
test
sbb
inc
xor
pusha
arpl
test
and
xchg
jp
nop
cmpsb
insl
mov
jmp
popf
sbb
fs
ljmp
pop
shlb
subl
je
stos
scas
ljmp
fiaddl
in
pop
lret
jge
sub
xor
cmpsl
mov
inc
lock
imul
push
mov
lds
pushf
outsl
lcall
dec
mov
fwait
es
aaa
push
clc
iret
pop
jae
data16
pusha
xchg
cmp
xorb
lret
sti
ja
sbb
jo
or
dec
jae
adc
cmc
cmp
adcl
aas
pop
inc
jno
mov
jge
out
jb
xchg
loopne
jge
popaw
call
dec
push
out
xchg
mov
pop
loop
dec
nop
imul
insb
bound
inc
push
daa
out
push
push
cmp
fisttpll
lret
add
and
data16
mov
in
and
push
data16
sbb
lods
shlb
xor
pop
rcrl
loope
xor
sbb
jb
out
out
scas
add
cwtl
cmp
jp
xor
lods
cmp
jmp
lcall
outsl
jecxz
mov
cmp
xor
sbb
inc
addr16
cmp
xchg
cwtl
mov
push
mov
sub
jl
out
push
fsubrs
into
shr
lahf
mov
fdiv
mov
push
xchg
fldcw
and
mov
insb
and
xchg
and
out
sahf
rolb
sbb
sbb
fbld
xchg
sub
mov
mov
outsl
dec
ret
cmpsb
or
insl
stos
lods
push
push
inc
fldln2
js
and
ss
pop
push
pop
ljmp
jmp
xor
xor
mov
push
loopne
xchg
adc
popa
das
mov
cmp
xlat
xchg
in
shrl
ss
push
std
ret
lea
loop
xor
pop
jo
add
jle
dec
shrd
hlt
cmp
and
das
sti
sbbl
icebp
jbe
push
xor
je
xchg
rorb
push
dec
mov
mov
fimuls
je
enter
pop
sub
int3
clc
aam
dec
scas
je
adc
iret
add
shrb
push
push
mov
jns
repnz
fdivrl
pop
shl
sbb
fidivrs
push
jg
in
adc
or
sbb
loope
imul
pop
xchg
loop
ljmp
mov
and
mov
or
or
xor
adc
gs
dec
leave
out
xchg
stos
push
enter
jmp
je
fadd
add
movsb
pop
call
ja
xchg
add
bound
push
faddl
imul
add
sub
lcall
cmpsb
pop
or
test
xchg
xchg
push
ficoml
outsl
push
adc
fldl
pop
pop
mov
mov
andl
lock
je
pmaxub
sti
mov
add
stos
sub
or
dec
dec
stc
fdivl
out
cwtl
lret
fdivl
or
mov
pop
push
call
inc
js
and
sub
clc
dec
fs
shll
pop
fwait
jle
jg
sbb
add
cmp
std
adc
out
mov
pop
xchg
ja
es
mov
inc
hlt
fisttpll
imul
repz
je
pop
jb
aam
mov
lds
xor
ror
test
sub
iret
lret
jb
shlb
push
es
mov
adc
or
lock
mov
loop
dec
or
popa
sbb
test
sbb
push
leave
test
aaa
pop
arpl
mov
popf
js
add
shl
pop
adc
aaa
cmp
jno
cmpsb
and
insl
out
sar
push
imul
xchg
loope
inc
push
fsubrp
and
push
in
ds
orb
into
jp
jmp
add
add
and
test
mov
sti
gs
mov
xchg
jnp
xchg
lods
psrad
jmp
pop
mov
loope
or
bound
xchg
in
movsb
sbb
test
repnz
lock
aam
hlt
loopne
add
jecxz
test
arpl
xor
or
jns
push
dec
ret
decb
mov
loope
push
mov
fidivrs
imul
xor
vpaddsw
sub
andb
leave
das
psubw
je
lds
fcoml
mov
mov
dec
inc
jge
mov
mov
sub
aam
stos
mov
addr16
jg
mov
movsb
int3
fadd
inc
jmp
andl
pop
fcmovb
stos
inc
pop
ja
mov
rclb
cwtl
popf
sbb
lret
mov
cmpb
ret
test
mov
je
jmp
flds
xchg
pop
pop
push
sahf
iret
mov
pop
ss
add
aas
out
scas
es
pop
or
jno
movsb
jle
xchg
push
stos
or
add
add
xor
mov
cmp
mov
mov
push
dec
xchg
stos
mov
dec
and
xchg
or
das
mov
cltd
iret
jno
and
cmp
lock
stos
das
les
mov
aam
fwait
rep
rcll
cmp
pop
arpl
xlat
test
imul
das
mov
pop
sbb
xor
into
adc
jmp
js
sti
in
lret
shlb
loope
movsl
pop
repz
mov
shll
out
mov
stos
mov
mov
adc
incb
mov
xchg
sub
out
sbb
jno
test
push
cld
shrb
cld
out
xor
inc
and
stc
pop
xorb
dec
ret
jb
lds
mov
orb
fst
push
or
push
cmp
inc
add
in
ror
idivl
js
dec
aaa
cmp
fs
xchg
inc
iret
ss
jp
int3
push
mov
dec
mov
sbb
pusha
gs
int3
push
add
sbb
dec
loopne
pop
pop
int
sahf
mov
mov
imulb
push
bound
xor
aad
nopl
dec
mov
fs
mov
clc
inc
aaa
fstps
lcall
mov
pushf
outsl
jb
sbb
cmp
or
imul
lea
fs
jae
out
ds
and
pop
test
leave
jle
ror
push
inc
add
ficoml
cmpsl
stos
cmp
xor
test
iret
mov
sbb
xor
sti
push
leave
repz
test
and
sbb
jns
jle
pusha
fiadds
mov
xchg
cmp
scas
add
sub
popf
scas
nop
lds
cld
mov
fcmove
lahf
loop
cmp
push
jl
dec
add
fistpll
dec
inc
pop
jns
fidivl
adc
mov
xlat
in
arpl
lock
adc
das
insb
lock
icebp
es
sbb
jecxz
dec
xchg
jmp
jne
dec
cmpsl
sub
adc
add
stc
lds
aas
addb
outsl
adc
xchg
lcall
dec
or
testl
add
mov
iret
lret
adc
inc
not
add
xchg
test
addr16
out
dec
xchg
dec
inc
cld
mov
dec
negl
add
cmpsl
jecxz
outsl
cmp
jp
or
std
or
imul
pop
out
stos
aaa
mov
jae
in
pushf
cld
mov
push
dec
pushf
data16
out
imul
jmp
xor
mov
adc
popf
je
sub
jne
jnp
pop
jle
mov
aam
add
rcl
test
cmc
pop
clc
push
gs
pop
fs
inc
sbb
mov
fisttpl
push
popf
sahf
inc
stos
sahf
aam
int
aas
imul
cwtl
negb
out
xor
xlat
lods
ljmp
filds
and
std
jmp
ss
sub
inc
leave
sbb
gs
imul
mov
cltd
sbb
push
dec
sbb
push
shl
push
cmp
loop
js
adc
push
ja
hlt
push
sub
mov
xor
cmp
mov
fstl
xor
in
mov
stos
aam
jle
es
xchg
lret
inc
stos
and
or
mov
stos
ja
in
cwtl
insb
movsb
movsb
jmp
or
addr16
push
jb
pop
and
aaa
mov
sbb
add
jp
cmp
clc
loope
mov
push
inc
in
hlt
push
push
xor
mov
adc
adc
movsl
lret
push
mov
jmp
jo
arpl
test
and
movsb
imul
ffreep
mov
clc
repnz
mov
decb
dec
cltd
fstp
xlat
mov
stos
sahf
dec
or
dec
and
fisttpll
xorl
inc
jge
mov
mov
mov
jge
and
fistpl
pop
adc
adc
adcb
or
fldenv
push
das
hlt
add
in
pop
xchg
nop
aas
mov
mov
lock
fwait
shl
std
cs
stos
out
daa
push
lahf
out
insl
dec
push
ds
ja
fistps
fdivr
test
aaa
fwait
sarl
sbb
lret
sbb
lret
pop
pop
mov
testl
push
jns
cli
mov
inc
fs
push
xchg
leave
into
sub
jae
mov
out
lods
movsl
in
incb
andb
jp
xor
and
push
clc
sbb
mov
and
sbb
or
pop
sbb
lock
insl
mov
fwait
test
push
into
mov
mov
mov
test
sbb
xchg
sahf
out
mov
mov
mov
out
mov
add
cli
jnp
vhaddps
xorb
adc
arpl
add
daa
push
scas
filds
inc
sbb
cltd
cli
inc
dec
xchg
jbe
jnp
sub
insl
cmp
or
jl
cwtl
and
jno
pop
es
adc
pop
das
outsb
dec
incb
insl
nop
push
fwait
push
shl
mov
or
aam
shl
scas
inc
fwait
pop
jge
push
or
xchg
out
jo
mov
ljmp
imul
sub
shrb
loop
or
insl
pushf
add
inc
adc
sar
aaa
pop
icebp
or
stos
fcomp
int
pop
mov
test
out
sarl
int
xlat
or
aam
repz
fwait
hlt
jb
sbbb
mov
dec
daa
mov
push
sub
adc
mov
xchg
in
sub
jecxz
loop
ljmp
push
or
mov
cmp
xor
or
jb
es
in
xor
cmp
je
jns
imul
in
inc
int
pushf
fistpll
sub
insb
mov
outsl
jns
iret
sub
or
movsl
xchg
repnz
sub
jp
out
mov
inc
leave
stos
dec
sbb
push
ljmp
sbb
mov
subl
pop
sahf
lea
roll
test
sub
dec
push
jb
fcompl
jno
or
xor
add
fwait
scas
int
fwait
mov
mov
adc
mov
push
mov
xchg
cmp
jbe
out
repz
adc
pop
xor
or
mov
enter
cmp
xchg
ret
push
cmpl
aam
mov
sbb
xor
xor
imul
jne
pop
xchg
adc
xchg
mov
adc
sub
add
adc
ret
sub
popf
cmp
cmc
scas
cli
or
out
mov
or
and
hlt
repz
shll
sahf
xchg
fptan
cld
enter
push
jmp
ja
in
ds
enter
xor
ss
sbb
dec
incl
cmp
in
cmpl
rclb
jmp
lcall
nop
cmp
or
mov
mov
clc
fimuls
jbe
and
arpl
add
in
mov
push
jae
enter
mov
lret
push
icebp
das
mov
cmpsl
xchg
or
dec
mov
daa
add
loopne
test
dec
ret
jecxz
stos
in
insl
movsl
lea
lea
std
daa
mov
sbb
sub
imul
fwait
mov
pop
stos
sub
cmp
in
mov
aas
stos
xor
outsl
cs
push
jo
xchg
cmp
cmpsb
cmp
cmpsb
xorl
cli
cmp
sub
jbe
fwait
inc
negl
call
test
or
jecxz
call
or
push
jge
push
imul
fcoml
inc
clc
mov
cwtl
jno
aaa
cs
cmpsl
rolb
out
dec
lods
xor
jg
mov
inc
adc
xor
dec
out
outsb
adc
xor
pop
jne
push
dec
dec
inc
icebp
aaa
dec
pop
inc
movsb
pushf
xchg
adc
dec
or
pushf
sub
jp
cmpsb
fsubrl
jne
cmpsl
repnz
push
jg
or
adc
pop
outsl
fwait
adc
cli
arpl
push
jge
cmc
inc
xorl
paddusb
dec
mov
jl
insb
push
inc
leave
and
mov
mov
mov
daa
lret
shlb
stos
andl
push
shl
dec
inc
push
call
pop
push
mov
movsl
adc
sub
aad
sub
es
mov
jbe
push
push
pop
push
and
repz
cwtl
add
jo
mov
sbb
inc
out
xlat
sahf
xchg
xor
insb
push
movsl
mov
ret
push
and
adc
and
dec
sbb
fcompp
xchg
orb
cwtl
xchg
mov
inc
and
mov
pop
sub
cld
rep
jne
sub
sarl
test
cmp
insl
shrb
dec
sub
dec
mov
jp
fcmove
pop
jns
imul
shll
adc
loopne
outsl
sub
addr16
push
aaa
jne
adc
mov
xor
jg
adc
inc
cmp
fists
sbb
stc
jnp
jge
cmpsl
aaa
pop
loopne
test
out
mov
cmpb
nop
push
push
jae
or
adc
fstps
sub
test
cli
xchg
dec
push
sbb
in
iret
cs
xchg
xchg
aaa
imul
ds
jp
mov
insl
sub
clc
adc
es
repnz
cmp
push
inc
bound
mov
rcr
dec
scas
mov
sub
call
dec
pop
pop
xor
divb
pop
outsl
xchg
into
mov
jnp
jecxz
pushf
test
mov
jae
push
pusha
inc
xlat
push
mov
inc
imul
ja
test
inc
mov
sub
gs
xchg
repnz
iret
outsb
jae
pop
pop
inc
add
push
loop
dec
xchg
addb
inc
add
andb
jne
push
fsubl
sbb
and
fiadds
nop
xchg
std
shrb
cmp
mov
xor
dec
nop
inc
aam
push
ljmp
or
mov
or
je
outsb
mov
imul
movsb
inc
add
sub
loope
lods
jmp
nop
jb
hlt
sbb
cwtl
add
xor
or
sti
test
push
fcomi
std
imul
sub
shrb
pop
pushf
sub
xchg
jmp
pop
fdivrs
mov
out
idivl
mov
inc
jno
in
inc
out
cmpsl
or
loope
adc
das
es
dec
sbb
sub
test
aas
loopne
jo
sub
dec
push
test
daa
push
into
out
mov
sub
mov
mov
push
aad
addr16
pop
adc
dec
or
mov
ret
xchg
ret
lahf
ja
sbb
push
ds
cmpsb
data16
ds
test
mov
add
ds
pop
cli
add
sahf
xchg
push
pushf
jbe
aaa
add
push
imul
stos
ds
sahf
andb
test
imul
ret
dec
or
cs
fs
je
lods
add
out
fsubl
and
insb
repz
rclb
cwtl
sti
sub
xchg
mov
sbb
jmp
xor
lcall
mov
or
push
and
or
mov
std
sub
mov
mov
fmulp
hlt
xchg
fbld
mov
movsb
jecxz
cwtl
push
xor
pop
jmp
and
in
movsl
jnp
jmp
les
cmp
push
cmp
push
popa
dec
push
sub
jge
add
mov
scas
addr16
ds
mov
sbb
adc
add
push
lock
dec
or
xchg
movl
clc
adcb
push
scas
movsb
jo
push
and
aad
fadds
repnz
push
cld
cmp
les
je
sar
loop
sub
fs
pushf
pop
mov
in
in
arpl
cmpsb
clc
jo
movl
sbb
cmpb
leave
jb
rolb
push
inc
outsl
ss
mov
shlb
es
mov
add
mov
adc
outsl
push
je
cld
or
mov
push
enter
repnz
xor
subb
or
fmull
xor
pop
dec
xchg
mov
out
sub
mov
dec
test
mov
js
lcall
js,pt
push
fucomp
mov
int
cmp
jp
lods
adc
addl
add
pop
lods
jmp
sarl
and
sub
loope
jbe
lret
outsl
pop
push
sub
mov
lcall
imul
and
repz
lahf
call
cltd
lea
pop
std
out
xor
push
cmpsb
loope
mov
mov
cmp
pop
or
lret
dec
mov
xlat
adc
filds
sub
bswap
xchg
hlt
gs
inc
fistpl
imul
pusha
dec
stos
sahf
mov
imul
xchg
jl
notb
es
add
in
and
stos
into
push
in
nop
xorl
cmp
push
push
mov
fdivs
sub
inc
insb
sub
inc
sahf
int3
pop
and
inc
popa
mov
aas
sahf
fidivrl
mov
aad
pop
inc
aam
dec
sub
subb
push
leave
scas
sub
or
mov
push
add
shl
push
sti
add
fcomps
mov
mov
sbbb
and
mov
ds
inc
or
or
cmp
dec
cmp
arpl
sahf
orl
lea
xor
jp
jne
nop
mov
push
pop
stc
stc
fs
sub
push
add
lahf
pop
lock
jbe
out
popa
push
pushl
shr
push
dec
jae
fidivrl
and
in
xchg
repnz
stc
js
mov
ds
fwait
in
jo
fwait
movsb
mov
call
inc
or
adc
dec
cltd
bnd
jmp
xchg
dec
xchg
lcall
rorl
xor
mov
stos
sbb
cwtl
push
add
sub
mov
into
test
shll
int3
lret
outsb
stc
push
addb
test
mov
mov
mov
push
xchg
or
push
lods
loop
dec
jecxz
jge
in
pusha
stos
pop
xchg
xchg
xchg
cltd
scas
xor
cmpsl
jne
popf
and
scas
add
sbb
movsl
lea
aas
int
mov
pop
inc
jo
rolb
sbbb
aam
std
sub
xor
push
sub
inc
stos
dec
and
lcall
iret
mov
mov
inc
mov
cld
push
xchg
ret
and
test
cs
test
push
leave
mull
pop
daa
xchg
movsb
in
lods
iret
mov
mov
pushf
es
xor
and
imul
arpl
xchg
sub
pop
cmp
xchg
or
jbe
in
xchg
jle
imul
aam
xchg
popf
cmp
fmull
sahf
pop
inc
popf
xlat
push
sub
mov
dec
ljmp
addl
in
mov
sbb
cmp
and
jne
popf
jge
test
cmp
cmp
mov
lret
addr16
insl
adc
hlt
xor
lcall
inc
or
push
fwait
sbb
pop
cltd
or
cmp
mov
mov
bound
mov
xlat
fs
add
stos
xchg
loopne
pop
xor
dec
adc
in
aas
inc
inc
jbe
aaa
mov
lock
xor
xchg
inc
adcl
push
inc
outsl
xchg
ret
pop
out
arpl
nop
incb
dec
loop
icebp
jb
sub
xlat
data16
or
aam
xor
fnstcw
add
mov
loope
sbb
sbb
push
mov
mov
xchg
in
mov
lods
add
pop
ret
pop
push
jp
inc
push
push
in
and
fisubs
add
pop
scas
inc
push
cs
in
movb
pop
in
mov
xchg
xchg
sbb
sub
nop
xchg
jns
cmc
inc
mov
fcmovnbe
out
mov
add
stos
nop
sbb
sub
ljmp
clc
scas
push
ficoml
insl
es
ret
adc
sbb
jle
insl
mov
sbb
mov
mov
repnz
gs
in
cmpsb
daa
or
stc
std
mov
addr16
idiv
jns
push
ret
test
out
loopne
xor
inc
mov
loope
rolb
arpl
cltd
mov
fwait
ss
fwait
lcall
jb
dec
daa
xor
cltd
dec
dec
mov
test
sbb
mov
inc
cwtl
pop
pop
inc
xchg
pop
mov
pop
cmpsb
dec
and
shlb
idivb
add
insb
es
sbb
push
xchg
insl
pop
fidivl
push
fsubs
inc
dec
add
dec
nop
repz
dec
and
dec
sub
jle
push
mov
imul
imul
cmp
jne
mov
pop
lods
push
addr16
inc
add
test
pop
push
or
ds
and
repz
cmp
sub
lret
add
mov
inc
mov
sti
dec
into
sub
loope
cmp
scas
movsl
push
movl
shll
out
jne
jge
cmp
idiv
mov
adc
iret
clc
push
scas
negl
cmp
aas
lds
pushf
jmp
push
mov
xor
cmp
stc
scas
stos
fmull
daa
inc
test
lret
push
mov
xchg
xor
insb
icebp
out
push
lahf
mov
popf
into
inc
push
shlb
jno
push
cmpsl
sbb
fs
inc
mull
jp
mov
in
dec
adc
mov
icebp
mov
pushf
les
mov
cmp
les
psrld
jne
dec
sbb
pop
popa
ljmp
or
or
xchg
out
mov
mov
cwtl
loope
pushf
scas
mov
shl
out
jecxz
mov
outsb
or
ficompl
inc
pmovmskb
xor
rolb
stos
mov
lods
push
or
ret
push
dec
lret
insb
fisttpl
popa
dec
popf
push
int3
mov
cmp
repz
xor
in
add
inc
popf
notl
fs
sub
jnp
jmp
rorl
and
out
adc
ds
cwtl
test
or
lahf
out
test
mov
int3
xor
out
stos
cmp
xor
sbb
xor
push
and
and
cmp
addr16
scas
add
mov
stos
shrl
xor
and
mov
aad
mov
and
pusha
sub
mov
mov
dec
sbb
mov
xchg
pop
movl
push
ja
cmp
fsub
test
xlat
sbb
add
dec
stc
lods
jb
mov
je
ljmp
mov
inc
sahf
repz
jle
jb
push
dec
cltd
mov
call
daa
pusha
imul
pop
repz
and
loop
les
add
ss
ja
push
add
cmp
add
pop
mov
mov
jl
lea
aam
mov
cmp
dec
lret
mov
mov
sub
insb
xchg
dec
pop
rorl
sti
pusha
cmp
adc
addb
xchg
iret
ds
sub
jnp
imul
cmpsb
daa
cld
add
cmp
add
adc
pushl
xchg
enter
sbb
or
and
movsb
call
mov
add
out
push
cmp
ficompl
pop
out
and
les
clc
sub
and
mov
cltd
popa
pop
push
cmp
xor
adc
mov
push
rclb
in
cmp
inc
and
xlat
out
sbb
call
leave
mov
or
inc
stos
push
ret
push
jmp
or
jge
jno
dec
jecxz
push
rorb
mov
cmp
cmp
push
imul
jnp
setne
stc
ss
sub
sub
out
xchg
ret
push
arpl
push
push
ds
outsl
data16
mov
ret
pop
leave
imul
out
mov
push
and
test
or
push
mov
or
jmp
add
push
jmp
imul
lods
test
addl
repz
test
xchg
xchg
push
push
adc
int
fcom
fdivrs
rcrl
and
xor
mov
popf
out
sbb
cmpsl
adc
xor
int
scas
ja
mov
xlat
scas
lods
test
les
cmp
xlat
mov
sub
faddl
or
inc
or
cmpsl
clc
cli
call
adc
testb
mov
inc
xor
ljmp
int
push
int3
mov
mov
lock
sahf
xchg
pop
push
loopne
cmp
cltd
adc
or
shll
add
icebp
push
aam
cmp
push
sub
inc
jle
fstpt
pop
negb
neg
popa
mov
es
faddl
lret
push
xchg
movsl
xor
dec
pop
push
loope
ja
pop
inc
adc
sar
inc
xchg
mov
pop
xchg
sti
icebp
rcll
xor
test
pop
mov
jne
aaa
fldz
nopl
aas
mov
ret
dec
xor
adc
xor
cmp
imul
rcl
xor
movsb
dec
and
pop
lret
jno
fs
leave
shll
dec
leave
gs
jae
mov
outsl
shrb
mov
pop
push
xor
sbb
enter
jnp
arpl
pop
into
or
sar
sub
and
ret
fs
dec
and
and
sbb
int
sarb
mov
sub
push
sub
jmp
xor
cld
push
call
insb
mov
lea
icebp
mov
insl
das
mov
mov
subl
scas
lds
jl
xor
jbe
or
in
dec
cltd
pop
push
sub
jmp
lcall
push
addr16
push
and
push
jl
lea
sahf
cmp
cmp
cwtl
pop
dec
lahf
add
mov
orb
inc
hlt
stos
mov
lret
jae
inc
jecxz
jp
xchg
mov
test
test
out
out
rolb
xchg
out
adc
jne
int
inc
arpl
cmp
out
std
insl
mov
push
ljmp
add
insl
mov
pop
jmp
fs
adc
lret
fdivrs
lahf
pop
mov
push
and
imul
lret
add
cltd
inc
add
mov
lcall
and
movsl
and
inc
sarl
lods
pop
lea
sub
xor
clc
leave
aas
mov
mov
in
popa
gs
pop
cmp
stos
or
xor
cli
inc
push
mov
pop
in
js
and
ja
test
push
mov
pop
sbb
mov
fwait
jnp
xor
fistps
inc
stos
je
and
pusha
sub
or
dec
sti
aaa
test
in
mov
lods
mov
mov
push
dec
test
popf
pop
insb
lods
insb
jns
mov
shlb
cmpsl
mov
hlt
pushf
cmp
inc
stc
or
or
into
push
fcmove
popa
adc
pop
jle
movl
call
lock
add
fisttpl
sbb
push
andl
pop
cmp
repnz
mov
mov
and
jecxz
mov
cmp
andl
add
in
inc
mov
lahf
sub
es
jmp
or
pop
add
mov
push
cmp
out
loopne
leave
clc
adc
push
inc
lahf
or
sbb
ret
dec
rorb
cmc
push
jg
or
mov
add
orb
rcrl
pop
and
pop
lahf
push
add
and
jns
aaa
mov
xchg
lods
adcb
mov
jecxz
sbb
mov
sarl
sti
mov
jl
dec
push
or
cmp
aaa
jge
aad
int
jae
adc
in
xchg
movsl
in
jle
inc
pop
jno
add
jb
bound
xchg
push
sti
aas
pop
adc
cmp
cmp
jle
mov
into
fsts
cmp
dec
sub
in
pinsrw
lds
arpl
push
cwtl
mov
mov
xchg
add
adc
mov
decb
adc
jg
insl
adc
gs
dec
xor
mov
cmp
ss
adc
push
cmpsb
pop
mov
xchg
fwait
push
cmc
mov
and
js
xchg
lods
dec
add
mov
mov
test
cmp
lods
jno
call
jns
insb
inc
mov
lret
inc
dec
dec
ljmp
add
shll
ljmp
int3
cmpl
add
push
mov
or
cmpsl
cmp
push
lcall
in
jbe
dec
dec
stos
mov
loope
cmp
mov
and
stos
test
xchg
xchg
pushf
fildll
and
cmp
sub
stc
lds
lds
and
cmpb
pop
popf
mov
dec
es
sub
scas
adc
repnz
dec
movsb
ret
pop
xor
inc
sub
xor
add
int
adc
out
shlb
xor
movsl
pop
cmp
xchg
push
nop
je
rcrl
icebp
mov
test
and
lds
loope
sub
xor
outsl
stc
mov
push
gs
addr16
bound
loope
je
ljmp
and
jl
test
scas
push
je
out
push
cmc
push
pop
xchg
sub
xor
decl
hlt
adc
adc
daa
jno
xor
xor
push
roll
and
mov
push
gs
out
sub
push
ret
mov
fistps
jle
mov
fdivp
xor
cmp
mov
push
jbe
popf
or
movsb
and
and
mov
jge
jle
inc
fisubrl
adc
in
aad
inc
jnp
call
aaa
stos
pusha
inc
pushf
gs
ljmp
insb
mov
test
outsb
sub
hlt
mov
dec
or
scas
mov
jns,pt
in
cmpsl
mov
push
ret
sub
cs
jle
ror
pop
pusha
clc
loop
sub
cmp
icebp
insb
arpl
xlat
pop
mov
imull
je
mov
adc
addr16
addl
sbb
ret
pop
in
das
push
out
icebp
adc
test
and
rol
lcall
out
dec
in
loope
fistpll
xor
clc
fwait
lods
dec
xchg
in
dec
fucomi
imul
jge
ljmp
sahf
inc
jae
xor
mov
sbb
lock
pushf
imul
leave
push
inc
shll
mov
mov
lea
rolb
sub
add
sbb
scas
fdivl
mov
pop
vmwrite
pop
push
cs
nop
adc
cmp
or
test
stos
aaa
idivl
mov
cmpps
scas
jno
adc
dec
mov
add
jno
add
rolb
addr16
lcall
add
xor
lahf
xchg
pusha
stos
lahf
arpl
mov
test
fwait
sahf
dec
xlat
lock
jecxz
inc
sub
loope
mov
cmp
mov
in
cmp
adc
mov
cld
lahf
hlt
mov
popf
add
data16
dec
dec
add
xchg
lock
mov
dec
sub
test
inc
cs
push
pop
aas
insl
xchg
iret
pop
mov
pop
dec
or
testl
rcrl
push
mov
add
mov
in
mov
stos
cmp
lods
rorb
pop
or
sub
and
lock
and
xchg
das
mull
pop
not
add
pop
aad
push
or
dec
fsubrs
outsl
ds
ret
push
mov
int3
push
dec
out
mov
imul
xor
sub
lret
mov
call
out
dec
iret
in
mov
mov
scas
sbb
cltd
cmp
xchg
inc
or
test
divl
xor
mov
movsb
movsb
aaa
loopne
pop
pmuludq
sbb
mov
pop
pop
leave
cmp
dec
cmp
pop
ja
loopne
sbb
adc
xor
scas
inc
call
sbb
add
lret
in
xor
adc
adc
push
icebp
sbb
imul
jne
mov
ds
aam
daa
push
scas
ja
sbb
testb
sub
xor
xlat
negb
and
mov
mov
nop
les
push
outsl
ljmp
rcrl
pushf
xchg
push
popa
es
push
stc
jmp
outsl
mov
outsb
pusha
mov
jge
xchg
mov
push
xor
pop
aas
xlat
xor
call
or
sub
or
xchg
cwtl
or
andl
mov
inc
xor
sbb
das
fistpl
sub
pushf
xor
shl
imul
jb
lret
lcall
decb
sub
mov
jecxz
add
xchg
test
or
pop
lock
adcb
mov
mov
mov
xchg
or
inc
fldl
clc
lock
loopne
add
repz
dec
xchg
dec
xchg
sar
jnp
or
out
sub
mov
mov
in
add
push
jnp
popa
in
jmp
adc
pop
shrl
push
cmp
out
icebp
pop
leave
mov
pop
in
push
sti
mov
fldt
mov
ss
adc
mov
lahf
or
inc
dec
adc
lahf
out
subb
in
std
and
pop
mov
insb
inc
xor
jecxz
sti
and
xlat
pop
mov
mov
sub
inc
pusha
fistpl
xor
das
dec
sub
imul
roll
cltd
inc
cmp
pop
inc
jns
ret
cmp
inc
cmp
sbb
adc
dec
dec
dec
out
mov
sub
test
shrb
es
mov
cmc
jle
popa
aam
jmp
or
mov
cltd
add
dec
add
call
out
sub
jecxz
cs
sub
in
jl
or
movsl
daa
dec
and
in
or
sbb
or
andb
in
nop
inc
adc
sbb
push
mov
mov
lret
es
cli
rolb
popa
xchg
cmc
add
sbb
stos
fmul
push
push
or
in
imull
mov
cmc
nop
xchg
mov
pop
sbb
sti
scas
pop
fbld
mov
subb
insl
iret
xlat
and
aaa
inc
mov
clc
inc
fistpl
jne
fcmovnbe
movsl
loopne
daa
ja
pusha
xchg
stc
fwait
in
jo
mov
in
jnp
into
sub
sbb
lcall
addr16
xlat
inc
cmpsl
lods
dec
bound
imul
lret
dec
push
data16
je
fld
add
jo
lret
jl
jmp
and
jne
icebp
add
loopne
shrl
sbb
xchg
sbb
xchg
xor
js
mov
dec
cltd
sub
inc
mov
lahf
sahf
cmp
nop
xor
push
and
jmp
lret
add
cmp
push
jecxz
je
mov
push
cmpsl
dec
cltd
push
mov
lcall
dec
loopne
pop
xor
les
push
rcrb
sub
add
aas
push
fdivrl
inc
insl
jo
push
lahf
pop
cmp
fbstp
out
sbbl
int
jno
pop
cld
lods
and
push
xchg
push
call
nop
xor
push
outsl
xchg
add
pop
xchg
sbb
subb
repz
insb
inc
cmp
sbb
bound
xchg
fwait
mov
jmp
mov
dec
data16
jle
fst
mov
in
add
imul
xchg
add
sbb
addr16
adc
inc
jbe
xor
aad
pop
int
fwait
cmp
test
arpl
adc
jge
pop
mov
rcll
es
push
mov
and
mov
fsub
xlat
adc
andb
pop
lahf
xor
fwait
dec
xor
xor
bound
or
in
sub
mov
pop
push
mov
push
jge
fsubs
in
scas
lret
mov
push
daa
add
jae
bound
iret
push
adc
or
push
adc
xor
jp
das
sti
stos
int
xlat
loope
sub
cmpb
aad
enter
pop
mov
in
insl
aaa
jecxz
in
jge
loopne
in
mov
arpl
push
jmp
jno
cmc
test
iret
lods
push
xor
pop
fucomi
pop
mov
cmc
jb
inc
or
mov
mov
pop
sbb
clc
mov
aad
add
sub
iret
adcl
loopne
push
jne
adc
mov
arpl
sti
roll
push
sbb
scas
in
push
cli
xor
fisttps
rcll
pop
mov
lds
mov
mov
andl
dec
jnp
mov
dec
addb
out
ja
scas
gs
in
push
in
pop
addl
clc
add
aaa
out
cli
loopne,pt
mov
ljmp
add
idivl
pop
arpl
mov
jge
arpl
mov
mov
push
jnp
in
fsubl
cmp
je
push
xchg
sbb
jmp
hlt
lahf
in
and
loope
test
xlat
enter
push
movsb
cld
adc
insl
mov
daa
test
jae
adc
lds
dec
in
xchg
jmp
inc
mov
shrl
mov
adc
scas
mulb
jae
xlat
sbb
scas
mov
nop
or
test
rcrl
lahf
add
adc
scas
andl
xchg
cmp
lret
movsl
or
pop
out
inc
inc
rol
loop
daa
pop
in
subb
int
xor
mov
mov
mov
dec
fwait
in
add
push
arpl
jg
mov
inc
xor
rorb
mov
mov
push
aaa
xchg
fistpll
test
out
cmp
pusha
push
clc
and
out
addr16
cmp
dec
xchg
cmpsb
es
test
mov
into
sub
pop
ja
adc
jl
out
data16
pop
dec
nop
pop
pop
sbb
add
fbstp
mov
aam
fwait
shl
pop
fcomi
nop
in
add
dec
ljmp
adc
mov
pop
or
jp
add
pop
cmp
notl
jb
dec
out
push
mov
xchg
jnp
mov
cmp
inc
or
xor
movsl
je
mov
jne
inc
aad
addb
in
and
jg
leave
adc
jg
popf
pop
gs
pop
mov
mov
and
fsubs
or
int
jp
jbe
push
add
imul
fwait
xor
lock
cwtl
jne
aad
pop
into
xor
rep
pop
jmp
adc
mov
shr
pop
jmp
jp
cmpsl
jp
add
jbe
sbb
test
sbb
dec
push
aad
or
fisubrl
inc
xchg
cltd
jae
mov
fwait
sub
or
stos
jge
sub
pop
pop
jbe
pop
sbb
lahf
sahf
aas
popa
test
or
jg
mov
push
inc
push
icebp
sub
cltd
pop
adc
orb
xchg
mov
mov
in
sbb
push
mov
movsl
or
gs
stc
loope
cld
sbb
mov
or
dec
dec
xchg
dec
ss
adc
fisubrl
dec
rclb
adc
inc
fadds
pop
stc
fstpl
add
bound
add
pop
outsb
add
sbb
push
pop
lods
mov
je
cs
bound
mov
push
lcall
add
add
mov
xchg
out
mov
push
pushf
pop
push
mov
in
int3
rolb
add
call
push
and
in
cld
mov
and
adc
adc
outsl
pop
xor
in
or
aad
aas
fs
dec
pushf
jle
push
cld
sbb
adc
int3
js
mov
xchg
int
mov
jno
sbb
and
mov
or
fisubrl
icebp
xor
push
inc
dec
push
sub
dec
xchg
stc
push
es
xor
xor
dec
pop
inc
fdivp
inc
push
pop
push
jnp
hlt
fstpl
insb
out
rcll
fprem
adc
aam
xchg
mov
push
xchg
jecxz
pop
rcr
dec
mov
cmp
into
jp
fs
mov
aam
in
inc
mov
rorl
jne
in
clc
cwtl
imul
xor
pop
daa
shr
or
mov
cmpsb
xor
xor
push
fs
dec
iret
pop
mov
stos
std
and
inc
bnd
cmpsb
xchg
sbb
sub
shrl
lock
insl
mov
in
push
shll
je,pn
dec
xchg
hlt
inc
shrb
mov
aas
xchg
pop
push
ret
cs
jp
repz
jns
xor
sub
push
int
cmpsl
mov
mov
mov
jecxz
mov
test
lahf
out
sbb
mov
pushf
pop
pop
sub
fldcw
cmpxchg
jbe
push
sar
sbb
jo
jne
mov
adc
push
repz
push
mov
lods
sub
add
mov
int3
subb
bound
shl
xor
push
js
dec
mov
mov
test
clc
push
mov
pushf
fcmovnu
out
and
jnp
test
mov
inc
insb
dec
flds
test
in
and
xchg
insl
mov
xchg
mov
and
andb
test
fimuls
add
ja
dec
add
scas
aad
lret
out
push
pop
push
or
lcall
inc
bound
in
dec
insb
mov
push
mov
mov
fnstenv
test
clc
add
ret
int
pop
in
outsl
push
adc
cmc
mov
test
popf
adc
fdivp
stos
xchg
es
sub
pop
jg
addb
jne
push
mov
mov
inc
test
xor
adc
sbb
ljmp
or
jo
xchg
fucomi
lods
out
mov
loope
and
scas
mov
mov
pop
sub
jp
mov
out
loop
bound
mov
adc
xor
das
in
iret
push
push
out
movsl
incb
shll
jle
das
xchg
mov
and
sar
jecxz
imul
or
or
in
int
in
jne
scas
repnz
jnp
pop
jnp
ret
xchg
jg
and
jecxz
add
es
push
mov
push
jle
aas
in
inc
dec
mov
push
inc
cmp
xor
ret
mov
lods
and
es
in
pop
xor
jmp
fcompl
adc
pop
insl
aas
mov
xor
xchg
fdivrs
xchg
cmc
push
mov
push
movups
and
pop
faddl
movsl
iret
inc
mov
pusha
jp
loopne
pushf
cld
bswap
adc
jecxz
dec
push
ja
rcrl
adc
fstpt
jns
test
xchg
push
cmp
ret
xchg
cld
push
mov
jecxz
inc
repz
inc
xor
frstor
pusha
push
out
subl
pop
fcomi
out
xchg
add
sbb
mov
sub
outsl
dec
popa
lods
insl
daa
xchg
sub
adc
mov
out
imulb
inc
fwait
test
ds
ja
xchg
and
loop
adc
test
insl
or
push
movsb
xor
movsw
and
les
fistpll
popf
les
fists
fmul
sarb
aad
and
xor
insb
jne
pop
test
test
xor
arpl
inc
test
mov
and
mov
and
adc
mov
ss
aad
sub
mul
xor
push
cmp
lods
xor
push
testb
xchg
icebp
cmpsl
sbb
addr16
idiv
loop
mov
sarl
mov
fwait
sub
jmp
gs
sub
mov
sbb
pop
in
mov
cmovge
repz
cmp
bnd
sub
jnp
lcall
aaa
cmp
in
pop
mov
add
sub
lcall
xor
jns
out
fldt
and
test
daa
mov
mov
inc
js
insb
imul
fwait
mov
push
xor
xchg
push
mov
popl
dec
stos
fwait
arpl
inc
xor
xchg
shll
arpl
bound
lods
fistl
jb
sbb
jo
test
cli
std
and
xchg
sbb
mov
out
and
adcb
mov
push
dec
xchg
sbb
test
or
dec
aaa
imul
mov
xchg
faddl
test
psraw
mov
xor
daa
inc
orl
add
das
movsb
aad
jge
aad
mov
idivl
adc
dec
in
addr16
jnp
sub
lret
sub
aaa
or
out
add
hlt
lahf
idiv
mov
sub
inc
sbb
xchg
ss
jns
mov
and
loop
lahf
xor
mov
lahf
outsl
cmc
xchg
sub
sub
cmpsl
fstl
dec
aas
jae
dec
lret
add
sbb
push
ds
insl
mov
outsb
lds
mov
push
insl
imul
daa
cmpsl
int
insl
inc
sahf
push
stc
mov
dec
cmp
xchg
sbb
in
xor
push
mov
jo
inc
repnz
insl
xchg
mov
jno
test
std
ljmp
test
pop
iret
bound
cmpsb
fistps
movsb
xor
lcall
dec
jecxz
cmc
jmp
add
addr16
add
and
repnz
loopne
mov
mov
aaa
sub
and
dec
jae
repnz
push
pop
fldt
dec
or
xchg
test
ja
lods
and
aad
dec
loope
xchg
push
mov
fwait
lahf
dec
sub
sbb
mov
lcall
xchg
add
and
and
and
add
cmp
lahf
push
test
rorb
in
inc
mov
loopne
in
leave
popf
sub
cmp
jl
fidivs
inc
lcall
daa
inc
ret
lret
cmp
jle
or
xchg
insb
adc
jg
and
in
data16
shl
imul
and
jp
shll
imul
insl
fabs
pop
sbb
cmp
inc
sahf
gs
mov
sbb
data16
insl
push
int3
mov
add
lret
popa
iret
mov
push
mov
ljmp
icebp
xor
outsl
push
lods
in
movsl
scas
xchg
imul
jg
jbe
popa
je
mov
das
leave
fmul
shll
add
mov
vandpd
jno
sub
imul
mov
add
or
ja
push
lock
jmp
hlt
jae
adcl
mov
pusha
sbb
loopne
xchg
inc
fidivrs
lret
test
pusha
or
cmpl
sub
or
sub
mov
mov
pop
repnz
jecxz
hlt
stos
outsl
adc
mov
mov
sarb
xchg
add
push
bound
outsl
pop
push
cmp
jns
cld
call
call
jmp
mov
xchg
add
pop
and
or
test
pop
mov
mov
xor
mov
lret
lds
fs
pushf
mov
push
pop
inc
pop
movsb
je
fsubr
push
jae
test
in
pushf
adc
inc
enter
mov
pop
lock
arpl
popf
inc
mov
xchg
fcoms
mov
outsl
sarb
lahf
xchg
push
push
mov
jbe
push
in
pop
push
sub
and
into
lock
mov
mov
mov
xchg
inc
lock
test
fst
sub
or
inc
mov
push
add
mov
sub
inc
dec
xchg
addr16
shrl
add
aam
push
dec
jb
adc
mov
xchg
or
push
cwtl
mov
test
dec
mov
fiadds
xor
mov
adc
mov
jl
mov
mov
sbb
push
xchg
pop
cmp
xor
cmp
nop
xchg
aam
inc
pop
cmc
mov
arpl
mov
pop
pop
aas
cmpsl
inc
cmp
in
and
xor
hlt
inc
pop
std
shll
cmp
ret
push
inc
or
jo
ret
or
std
flds
and
jmp
hlt
jp
outsl
xlat
push
loope
pop
adc
out
sti
push
cli
jb
add
add
xchg
mov
cmovns
insl
and
icebp
daa
jmp
int3
cmp
mov
xchg
jmp
ja
push
push
dec
push
sahf
imul
adc
mov
ffree
aam
mov
lds
adc
jp
rcrb
or
pop
sbb
jmp
xor
adc
in
fs
add
xchg
shlb
sahf
push
jle
pop
mov
ja
mov
imul
or
aas
cmpsb
push
cmp
rorl
sarb
dec
jmp
ret
mov
dec
mov
mov
test
in
mov
mov
mov
mov
icebp
sub
adc
das
push
sbb
push
xor
mov
and
scas
add
mov
cwtl
movq
dec
loope
cmp
in
push
push
sahf
pop
mov
repz
aas
insl
or
sub
addr16
mov
push
rorl
adc
or
xlat
cs
test
pop
sbb
adcb
inc
jmp
mov
jbe
pop
inc
push
in
push
enter
rcl
add
repz
imul
jno
jbe
scas
rcll
mov
cmc
out
sbb
clc
pop
xchg
hlt
or
outsl
aad
arpl
inc
dec
cmpsb
pop
test
lret
fcoms
xor
lods
cli
fcomps
sti
outsl
stos
mov
outsb
mov
ds
sub
iret
lods
push
xor
push
icebp
or
in
push
fwait
xchg
mov
test
sbb
inc
stos
mov
loopne
sbb
int
add
jecxz
sub
sarl
ljmp
jecxz
in
out
mov
fwait
clc
cmp
stos
bound
dec
mov
jns
loope
xor
sub
cmpb
sbb
jne
test
stc
repz
sub
and
and
inc
daa
dec
inc
push
xchg
and
mov
or
loopne
adc
ss
scas
aad
xchg
sbb
adc
mov
std
insb
out
cs
mov
aaa
jl
stc
xor
movsl
hlt
lock
and
addr16
xor
dec
adc
jnp
xchg
je
add
push
add
cmp
xor
push
cmpsl
xor
cli
push
lret
fsubrs
enter
shrb
xlat
push
hlt
cs
push
cs
mov
ds
sub
pusha
sahf
push
rcll
mov
sub
jge
sbb
push
mov
ret
jle
pop
pop
dec
sub
jmp
js
or
push
mov
mov
pop
lea
adc
cmp
jl
arpl
cmc
xchg
ss
jns
bound
out
pop
xchg
pop
ret
inc
repz
dec
pop
rol
stos
add
iret
in
mov
adc
outsb
push
pop
xchg
push
add
adc
fyl2xp1
dec
adcb
movsb
push
mov
cwtl
inc
aad
xlat
jne
add
adc
sbb
hlt
xchg
xor
test
adc
pop
std
jg
pop
loop
pusha
sub
ret
aaa
aam
xchg
into
iret
inc
call
enter
fisttpll
jl
icebp
mov
adc
xchg
push
fsub
loopne
mov
jo
jge
inc
adc
or
jg
or
mov
test
mov
imul
xor
orl
xchg
push
int3
lods
sbb
pop
mov
mov
adc
xor
cwtl
ljmp
push
xor
or
adc
out
mov
xchg
pop
outsl
sub
lcall
int
inc
cmp
fnstenv
mov
shl
jno
in
adc
jle
popa
iret
jb
ror
mov
into
into
dec
mov
popa
pop
add
stos
sarb
push
inc
mov
sub
cmpsb
aad
xor
mov
mov
fwait
addl
mov
adc
pop
push
imul
int3
mov
icebp
mov
cmp
loopne
inc
stos
test
or
cmpsb
add
aad
jmp
adc
out
int
fmull
push
jbe
push
sub
push
adc
orl
mov
cli
pop
push
push
pop
mov
jmp
popf
mov
jbe
and
arpl
sub
jge
mov
jge
add
dec
mov
aas
daa
pop
movsl
xchg
add
push
fwait
push
push
sub
sarl
mov
roll
mov
or
push
cmpsb
test
out
mov
test
out
out
dec
pop
adc
test
inc
pop
dec
jb
scas
cmp
pop
add
mov
les
mov
cmp
not
sbb
stos
and
or
cmpsl
pusha
test
mov
mov
ret
ss
ss
rorl
fdivrs
pop
dec
enter
mov
pusha
lods
add
cmp
inc
mov
jae
ret
mov
lds
xchg
idivl
xlat
cmp
push
sbb
sbb
pop
ret
nop
test
mov
test
mov
popf
push
fwait
cmp
mulb
xor
daa
or
cmp
fnsave
out
loope
mov
std
stc
xor
nop
ret
arpl
idiv
mov
stos
aad
shlb
jns
stos
insl
sti
fdivrl
add
xchg
mov
pop
lret
or
sub
lret
mov
fadds
push
outsb
sahf
mov
mov
sbb
adc
outsl
cmp
xor
sbb
dec
jno
push
mov
test
inc
push
jae
fdivl
add
xorb
jbe
dec
cltd
sbbl
fcmovnb
scas
popf
push
stos
jcxz
lea
xor
hlt
cli
mull
fisubrl
in
test
in
js
or
hlt
fcompl
lock
mov
mov
adc
mov
pop
jmp
pop
push
or
adc
and
and
sbb
jae
mov
push
dec
mov
movsb
test
out
inc
out
leave
pop
pop
std
scas
adc
fidivl
sbb
rclb
xorb
push
push
pusha
pop
jl
mov
jge
xchg
out
aaa
les
adc
scas
lret
or
fidivrs
cltd
mov
mov
cmp
jp
cli
clc
and
add
xor
popf
pop
pop
hlt
sub
jp
minps
xor
mov
aaa
cmp
xor
mov
andb
mov
xchg
inc
xor
xor
cwtl
push
mov
inc
mov
mov
sti
cmp
je
mov
inc
loopne
xchg
push
int3
push
push
int3
inc
cmpsl
je
xchg
dec
test
push
cmp
mov
leave
movsl
imul
push
dec
mov
xor
inc
out
mov
inc
imul
in
rcrl
in
adc
xorl
inc
ljmp
push
outsl
out
in
fst
jns
jl
push
into
mov
jmp
push
cmc
mov
bound
cmp
adc
fsubr
jb
rcrl
or
loop
popa
in
pop
jp
fildl
adc
xor
ljmp
mov
test
out
push
lahf
test
ds
inc
mov
ljmp
mov
pop
push
das
xor
xlat
int
inc
popa
adc
lods
jbe
roll
jge
loope
jno
or
ds
int3
xchg
loop
mov
pop
daa
xchg
mov
lock
adc
add
push
stos
pop
pop
lret
fsubrs
addr16
das
cmp
pop
dec
pusha
mov
and
test
add
inc
cmp
push
lahf
fimuls
cli
adc
hlt
mov
or
push
cmp
inc
pushf
xor
shl
rcrl
inc
cmp
popa
jmp
or
mov
sub
dec
cwtl
mov
sbb
adc
and
mov
insb
xchg
and
js
cmp
pop
repz
sahf
adc
inc
dec
push
sahf
stc
cmc
lahf
cmpsl
mov
add
testb
pop
xor
in
xlat
jnp
mov
aaa
sub
jo
into
sbb
adc
fisttpl
mov
outsb
mov
xchg
jo
stos
or
xchg
in
aas
clc
jle
insl
xor
lds
in
adc
mov
jmp
add
or
cwtl
movsb
shl
js
xlat
pop
dec
pushf
xchg
shlb
outsb
push
jge
sbb
stos
pop
lds
shll
ficoml
ds
mov
rclb
or
sub
adc
pop
xor
push
inc
cmp
push
jo
dec
movsb
lods
sub
and
hlt
mov
pop
mov
add
roll
orl
out
imul
test
dec
test
sub
ror
popf
mov
pusha
push
scas
xor
arpl
movsb
cmp
arpl
dec
mov
and
cld
lahf
mov
aaa
jecxz
jb
adc
movsb
fiadds
pop
sarl
repnz
cld
mov
cmp
leave
into
cmp
bound
divb
sub
enter
mov
jno
popf
add
cmpsb
push
into
jae
jb
inc
xchg
loope
out
dec
in
das
sbb
and
sbb
pop
ljmp
out
cs
jp
clc
mov
jbe
shrb
add
stos
mov
gs
addr16
nop
inc
dec
pop
xchg
pop
xor
mov
cmp
cmp
outsl
push
cmp
movsb
sarl
push
jmp
aas
test
or
imul
jp
dec
int
push
repnz
shrl
xchg
rcr
in
inc
mov
jns
pop
imul
add
push
dec
xchg
pop
xchg
push
mov
jecxz
lahf
dec
inc
mov
push
add
jmp
outsb
int3
mov
into
xchg
lahf
mov
xchg
sub
or
inc
mov
jmp
lods
xor
jecxz
pop
mov
xchg
outsb
inc
pop
sarb
ret
lds
arpl
mov
dec
sub
pop
outsb
jae
or
dec
rclb
push
dec
dec
stos
or
pop
adc
ret
push
mov
arpl
mov
jno
push
fsubl
enter
js
bound
pop
lahf
mov
pop
push
pop
xchg
cmp
jmp
lods
or
sub
xchg
jmp
push
sub
pop
push
test
sbb
push
shlb
sub
xchg
sub
rclb
xor
cwtl
andb
loop
fisttpll
lcall
lcall
adc
dec
clc
loope
dec
andb
inc
dec
xchg
mov
push
icebp
cmpl
jne
mov
div
xchg
cmp
popa
lea
mov
jle
movsb
cmc
and
add
or
mov
mov
fidivs
mov
mov
sub
sbb
cld
sub
and
jp
out
ret
mov
loope
repnz
or
faddl
pop
add
fidivrl
mov
mov
inc
roll
lods
xor
scas
jae
lret
scas
push
mov
in
pop
jmp
jp
lahf
push
dec
mov
cmc
xchg
pop
sub
xchg
and
mov
shlb
rolb
out
aaa
adc
mov
xor
fs
dec
or
loopne
push
xchg
jno
icebp
mov
aad
rcll
shl
lret
orb
sub
dec
addl
in
lock
subb
fcompl
jl
loop
xchg
pushf
enter
xor
pop
jecxz
nop
jbe
adc
xor
cmp
adc
js
dec
add
sub
sarb
lds
pushf
aaa
xor
fs
lds
in
sub
dec
and
xor
sbb
lock
ljmp
cltd
and
pop
pop
xchg
dec
orl
cmc
xor
pusha
out
les
mov
in
mov
adcb
out
sarb
mov
filds
push
loopne
ljmp
xchg
loop
add
pop
call
call
lsl
pushl
push
jae
or
xchg
fldl
je
insl
push
adc
fsts
and
xor
adc
xlat
movsl
add
jle
filds
jbe
add
and
mov
xchg
adcl
push
add
push
les
pop
mov
imul
andb
daa
mov
and
push
jae
sbb
aam
jnp
xchg
mov
or
call
xchg
adc
xchg
xchg
out
js
aam
loopne
jle
mov
mov
sbb
mov
inc
adc
fcompl
add
call
shr
incl
push
inc
loope
mov
stos
sbb
jmp
xchg
incb
mov
or
push
cmp
or
push
xchg
push
idivb
push
jge
xor
pusha
jle
cmp
cld
mov
and
cmc
mov
scas
ret
cmp
pusha
or
movsl
aas
cwtl
pushf
out
ficomps
fcomp
xchg
pop
mov
cwtl
jmp
iret
mov
cld
data16
xchg
lods
pop
sub
daa
jb
jns
stc
mov
sbb
mov
xchg
xchg
fs
imull
push
cmove
fisubl
pop
fucom
in
mov
mov
xor
push
mov
movsl
jne
pop
les
or
lea
jge
add
mov
and
push
mov
xchg
sub
cmp
xor
xor
sub
add
idiv
mov
call
and
loope
mov
jge
lret
push
das
call
mov
add
mov
inc
mov
or
lea
sbb
sub
mov
outsb
aaa
mov
neg
aam
in
dec
into
or
lods
mov
cmc
shll
pop
sbb
addb
cs
cli
scas
sub
call
ljmp
ss
cwtl
in
fstl
cwtl
outsb
lahf
adc
sahf
movb
mov
pusha
sub
xchg
cmp
and
movb
ss
pop
push
xchg
mov
pop
fisubrs
outsb
fnsave
or
and
fldcw
sbb
ja
mov
xor
cmpsl
mov
push
int3
xchg
adc
pop
fwait
and
push
and
in
push
ret
or
in
repz
dec
pusha
jb
daa
shlb
xchg
sub
into
dec
xchg
adc
addr16
pushf
add
adc
loop
pushf
add
es
sub
test
int3
sti
stc
pusha
xchg
into
pusha
jle
mov
outsb
mov
jmp
test
mov
test
and
leave
lret
lret
outsl
das
mov
jl
stos
or
xor
xor
dec
cmpsb
xor
push
pop
in
enter
arpl
pushf
out
jns
dec
jo
addl
xadd
test
stos
mov
dec
inc
hlt
stc
fsubp
mov
pop
or
loopne
std
dec
sub
clc
cmpsl
dec
loope
xchg
pop
or
xorl
arpl
test
cmp
sti
xor
push
dec
push
xor
and
mov
mov
sub
inc
dec
shlb
popf
xchg
push
sarb
cmp
out
mov
mov
leave
aaa
xlat
lahf
lea
push
cmpsb
lods
out
jno
test
orl
leave
adc
lds
cmp
cs
xor
leave
sbb
rcl
loopne
sbb
int3
push
xor
xor
mov
insb
dec
and
add
sub
mov
sbb
xor
jae
addl
mov
pushf
fildll
and
fldcw
ja
xchg
push
scas
lret
add
xchg
dec
into
fld
add
std
adc
mov
btc
hlt
pop
imul
cmpsb
sbb
int3
fwait
outsl
loopne
aam
arpl
out
cmp
mov
jl
leave
loope
lret
shll
gs
and
push
ja
outsl
repnz
push
ds
insb
pop
sub
jl
dec
leave
sub
xor
mov
pop
xchg
mov
cwtl
imul
xchg
jmp
aam
ja
mov
popa
or
ja
loope
push
mov
sub
inc
cmp
fiaddl
gs
pop
xor
cmp
ds
dec
in
mov
sti
mov
add
add
xchg
inc
mov
push
ret
inc
mov
lods
mov
fdiv
cmp
cmp
adc
in
daa
aad
dec
pop
data16
cmpsl
data16
add
das
mov
int3
push
cmpsl
and
flds
pop
test
add
int
sub
imul
cmpsl
mov
daa
jmp
xor
popa
push
repnz
push
xchg
mov
jge
repz
lock
dec
inc
aad
sub
pop
mov
rolb
cmp
negb
cmp
clc
ds
or
jle
fcoml
enter
shl
aad
stos
fs
jns
inc
sbb
sbb
in
mov
mov
out
push
and
and
dec
sub
movsl
stos
xchg
adc
call
cmpsb
push
inc
mov
je
adc
jns
fidivrl
je
ficoml
mov
js
xor
fildl
test
pop
jge
das
scas
sub
jmp
out
xchg
or
movsl
sub
or
lock
xor
inc
cmp
cli
movsl
xor
mov
mov
mov
pop
lret
pop
sub
xchg
mov
pop
inc
jmp
adc
sbb
negb
dec
jmp
fistpl
adc
cmpsl
add
sarb
push
cld
std
mulb
bound
dec
sarb
lahf
ret
out
mov
dec
sbb
sbb
mov
xchg
or
add
enter
int
insl
adc
inc
leave
push
bound
jmp
stos
int
lret
push
mov
in
pop
xchg
xchg
sub
cmp
mov
jmp
cmpsl
cmp
jae
jne
xchg
inc
xchg
xchg
popa
ret
ret
je
out
add
mov
call
iret
lret
test
xlat
cmp
pop
jnp
jmp
loopne
in
scas
ljmp
aad
rcl
dec
loop
push
out
dec
daa
lret
mov
fistl
cmp
orb
push
mov
out
or
loopne
jo
repnz
scas
lds
jae
pop
gs
mov
hlt
inc
ds
lods
test
dec
rep
leave
xchg
push
fs
push
add
in
jmp
pop
and
rcrl
and
mov
sbb
sahf
cmovo
jg
shll
hlt
out
cmpsl
inc
xor
or
push
dec
rcrb
aas
dec
sub
push
cmpsb
dec
daa
orb
xchg
jmp
push
xor
xchg
xchg
imul
mov
sub
lock
and
xchg
mov
cmpl
lds
push
jg
std
lret
mov
testl
std
xchg
cli
pop
xchg
bound
out
mov
imul
or
lcall
subl
jbe
push
jecxz
aas
lods
mov
roll
or
negb
mov
scas
jg
push
sub
xchg
sbb
dec
and
fldt
and
test
and
les
cmc
mov
sub
les
xchg
jle
std
inc
in
xor
aam
stos
lds
int
lea
push
sbb
jge
jo
mov
or
data16
iret
jle
xchg
fsub
ror
and
jo,pn
fbstp
push
pop
aaa
cmp
and
jb
jb
lret
andl
fimull
imull
cmpsl
ja
sti
jns
sub
mov
lods
push
mov
stos
addr16
cs
push
scas
out
pop
jb
cmp
xchg
imul
aad
xchg
ljmp
push
adc
cmpsl
int
dec
push
in
cltd
inc
dec
scas
or
push
add
adc
adc
movsb
pop
or
xor
mov
jp
lret
popa
scas
mov
sub
jb
fadds
inc
xchg
scas
test
loop
shrb
mov
daa
sbb
xchg
mov
inc
test
ret
inc
lods
lcall
hlt
add
fldenv
stc
lret
mov
and
movsl
and
mov
lods
sbb
jg
shrb
or
or
outsl
dec
xor
jle
sbb
popf
and
enter
push
add
push
into
ret
ja
movsb
cmpsb
mov
movsb
jne
sbb
stos
jmp
ljmp
mov
mov
aas
mov
movsl
adc
insl
nop
mov
mov
or
scas
cwtl
stos
lods
dec
add
pop
inc
xchg
add
mov
repz
inc
in
pop
mov
add
jno
sbb
bnd
xchg
ror
sub
mov
rolb
xor
sbb
mov
aas
jb
add
cmp
adc
loop
daa
shlb
cwtl
adc
pop
and
cmp
call
and
aam
sar
jno
pop
orb
aam
ss
ret
mov
and
mov
cmp
cvtps2pi
flds
shll
stos
mov
andl
in
nop
add
cmpsl
pop
fidivs
push
nop
mov
pop
stos
xor
ljmp
lea
ret
inc
cmc
shl
add
mov
add
stos
cmc
clc
fs
dec
lods
and
pop
pusha
shrl
pushf
lods
adc
sub
sub
pop
add
cmp
xor
dec
cs
aad
cmp
jp
mov
mov
xor
lea
mov
mov
xchg
pop
push
cmc
mov
jne
add
fs
adc
sbb
in
mull
mov
int3
mov
cli
les
add
cmp
lock
mov
sarb
and
arpl
cli
pop
lods
ds
or
inc
cwtl
add
test
jns
sbb
cltd
insb
mov
mov
adc
in
sub
xchg
dec
push
cmp
mov
jo
sub
jne
divl
in
xor
xchg
xor
dec
inc
int
pop
cmp
adc
les
fmulp
stc
lea
adc
jb
call
xchg
jl
mov
jl
aas
ss
sarl
scas
pusha
std
pop
add
or
mov
inc
push
hlt
adc
mov
pop
adc
jo
jge
inc
test
aaa
sbb
cs
sub
cli
je
mov
sarb
inc
aad
movsl
mov
test
bnd
insl
fimull
add
movsl
lock
lods
loopne
addb
and
ja
add
aam
scas
xchg
mov
xchg
push
aad
inc
ds
mov
add
inc
pop
rorl
mov
adc
mov
pop
les
outsb
lds
xchg
pop
out
popa
lea
data16
bound
test
mov
dec
jge
sahf
arpl
or
xlat
lcall
inc
enter
lods
daa
iret
mov
dec
mov
cmp
inc
mov
xchg
sub
mov
jns,pn
or
or
ljmp
inc
in
imul
fildl
jb
mov
stos
fstl
icebp
mov
pop
repz
fildl
pop
mov
or
outsb
imul
popf
xchg
cmp
lret
pop
adc
and
sub
mov
das
sub
out
mov
add
shrl
jecxz
dec
gs
inc
xor
fstps
xchg
cwtl
mov
pop
bound
mov
scas
jmp
out
rclb
arpl
dec
sub
jp
jl
scas
mov
out
std
mov
mov
push
jae
adc
js
adc
xchg
das
mov
sub
cmpsl
repz
and
inc
lods
repz
push
imul
pop
sbb
fwait
sahf
fadds
das
jecxz
sub
jb
mov
xchg
mov
dec
aaa
cmc
mov
das
adc
cs
add
inc
push
aam
dec
inc
cmp
lret
in
js
xor
push
loope
mov
imul
in
mov
jb
loope
ss
bound
xchg
pop
cmp
pop
mov
mov
icebp
aam
mov
sub
adc
movsb
outsl
test
cmc
jmp
and
sti
mov
dec
addb
xlat
adc
sub
call
jae
int3
inc
xchg
cmp
pop
ds
mov
outsl
xchg
or
int3
and
mov
ret
mov
jno
or
imul
xor
imul
mov
or
inc
push
or
notb
out
dec
mov
pop
arpl
cmp
ret
fdivp
mov
add
mov
dec
push
sub
mov
repz
jnp
lods
push
dec
mov
add
dec
push
ror
roll
xchg
hlt
out
xchg
mov
loop
jne
inc
mov
call
jnp
mov
add
insb
pop
xchg
dec
jmp
xchg
std
enter
mov
jp
cmp
movsl
cmpsb
jecxz
cmp
orl
mov
into
mov
mov
pop
push
icebp
popf
jge
aad
jb
xchg
repnz
lahf
arpl
dec
or
cmp
in
out
ss
mov
sub
add
lret
pop
gs
fistps
andb
mov
bound
gs
insb
nop
mov
test
jp
mov
and
out
push
mov
fwait
mov
mov
xchg
cmp
xor
movsl
inc
lret
xlat
xchg
pop
loop
pop
pop
and
pusha
popa
popl
push
xchg
sub
test
into
sub
xchg
mov
lods
jno
mov
pop
out
fldenv
and
jge
in
call
jo
push
cmpsb
pop
inc
imul
and
fdivr
fsubl
mov
xor
pop
sbb
popa
ds
add
lcall
ja
dec
cmp
out
in
fcmovbe
xor
clc
push
enter
mov
lea
dec
or
lahf
dec
and
mov
aas
pop
inc
shlb
in
repz
push
pushf
hlt
cmp
aaa
into
out
fs
insl
jle
daa
add
jo
dec
or
in
dec
scas
out
fisttpll
lahf
arpl
mov
mov
and
jno
out
addr16
in
cli
inc
cmp
loopne
repnz
xor
mov
ljmp
insl
pop
into
loope
pop
adc
imull
icebp
jnp
repz
sbb
sbb
out
cmp
mov
mov
mov
sar
xlat
mov
pop
sbb
daa
xor
inc
negl
or
or
mov
out
xchg
and
jge
mov
xor
mov
stos
push
push
into
jne
aad
rolb
inc
mov
cmp
add
mov
scas
jp
mov
in
scas
ficompl
xchg
jne
or
dec
cmc
test
rorl
lods
push
adc
mov
scas
movsb
mov
sahf
inc
popf
xchg
in
cmp
mov
add
iret
dec
scas
in
cmp
add
clc
in
int
incl
pop
or
mov
adc
mov
jp
mov
lcall
arpl
rcl
arpl
mov
adc
xor
popf
add
dec
push
and
and
cwtl
aad
jecxz
rcrl
jnp
mov
adc
mov
jno
push
loopne
push
push
pop
inc
icebp
jl
and
and
and
ret
xchg
or
outsl
jge
push
mov
and
or
test
xchg
and
and
or
pop
mov
add
dec
movsl
add
jo
mov
xor
js
mov
xchg
mov
cmp
es
shlb
xor
repnz
shll
xor
cmpsb
ja
nop
xor
push
xchg
and
xchg
xchg
sbb
lods
push
leave
iret
jne
pop
push
jle
dec
mov
adc
outsl
inc
adc
stos
cmpsl
mov
jge
push
fs
adc
leave
jmp
adc
cmp
pushf
and
cmp
mov
bound
std
and
cmp
dec
fisubs
sbb
mov
pop
cmp
mov
test
test
shl
stos
push
adc
dec
repnz
inc
push
out
and
cmp
jb
out
jb
or
pop
ljmp
xchg
fisubl
dec
in
mov
pop
xchg
mov
scas
pop
lds
cmpsb
in
dec
mov
popf
inc
cmpsb
add
dec
les
outsl
jne
mov
mov
ljmp
sti
enter
dec
adc
ja
mov
popf
mov
fisubrl
js
sub
test
mov
scas
movsl
push
mov
pop
scas
push
mov
sbb
ss
xchg
push
insb
dec
shll
push
lahf
lcall
push
shrb
mov
jmp
inc
es
outsl
cmpsb
add
icebp
dec
mov
repnz
stos
repnz
xor
movsl
cs
mov
clc
jg
hlt
add
imul
dec
out
sbb
mov
xor
add
cmp
je
sarl
mov
xorb
addr16
imul
inc
mov
push
loopne
mov
inc
inc
hlt
or
cs
cltd
add
xchg
xorl
pop
rcrb
ds
ljmp
cmp
mov
dec
cltd
gs
iret
pop
rolb
xchg
mov
mov
mov
jg
movsl
sub
jno
out
lods
pop
push
fs
outsb
mov
xchg
pusha
scas
add
mov
lock
sub
into
xor
add
adc
add
outsb
or
inc
aad
xchg
mov
aad
sbb
mov
mov
pop
loop
sub
fldenv
stos
stos
mov
call
jne
sbb
nop
push
dec
pop
fcoms
or
das
lahf
scas
xor
test
push
ret
inc
insl
mov
push
aam
out
mov
aam
pop
pushl
ds
cwtl
lea
xchg
lock
in
or
xchg
inc
push
imul
sub
and
mov
orl
jp
ret
xchg
mov
push
xchg
xchg
xchg
sbb
sbb
xor
or
incb
xor
mov
inc
push
ds
les
pusha
pop
jbe
push
jb
xor
or
adc
mov
push
aam
inc
imul
push
jp
xor
xchg
cmp
cld
in
xor
test
push
sub
mov
or
das
rorl
icebp
jle
mov
sub
shll
data16
or
adc
test
lods
gs
add
push
jb
inc
xchg
in
sbb
or
dec
and
push
cld
mov
mov
dec
shrl
sub
sbbb
je
sbb
shl
fsts
sbb
add
pushf
jmp
outsl
clc
sub
imul
cmpsb
mov
sti
dec
mov
and
sbb
in
stc
pop
push
std
and
pop
xchg
push
sarl
mulb
sub
lret
ficoml
sarb
mov
mov
push
fisubrs
inc
mov
sbb
movsl
rorl
inc
sar
arpl
roll
dec
sbb
inc
mov
inc
cmp
adc
dec
cmpb
pop
ljmp
jecxz
jp
jne
jbe
xor
rcll
jl
cmpsl
insl
mov
pop
je
mov
cld
sbb
xor
mov
xor
out
adc
pop
add
cmc
stos
add
sbb
popf
add
jae
cld
outsl
adc
dec
enter
xchg
jle
lods
inc
addr16
mov
cs
lods
fstps
pop
adc
loop
jg
movsl
mov
pop
sub
shrw
jae
pop
xchg
stc
lods
sbb
fwait
sbb
popa
ja
mov
ljmp
jnp
loopne
rcrl
out
cltd
mov
nop
jecxz
test
mov
add
mov
inc
and
push
test
pop
dec
imul
bts
fnsave
xchg
mov
addl
fcomp
pop
pop
add
inc
mov
mov
or
jnp
add
cltd
adcl
aas
iret
mov
mov
dec
mov
mov
cmpsl
push
imul
pop
push
jo
mov
fists
loop
cmpsl
jg
data16
sbb
cmp
push
xchg
jge
inc
xor
sahf
nop
aad
mov
fcmovnbe
out
test
std
sti
pop
jle
push
and
pop
leave
out
loope
adc
pop
insb
push
xor
pop
xchg
inc
dec
push
stos
fcmovnu
jnp
test
icebp
jb
ja
add
fsub
aas
mov
cmpsl
pop
hlt
into
sub
mov
sti
pop
loopne
sub
ljmp
adc
lcall
xor
sub
push
mov
loope
loope
shl
push
mov
xlat
cmp
gs
xor
dec
in
adc
loopne
xchg
imul
test
mov
fidivrl
rorb
pusha
fcomps
icebp
xorl
mov
imul
dec
jecxz
sub
or
sti
dec
mov
stc
ds
sub
and
push
les
lret
cmpsl
fimuls
fistpll
pusha
mov
inc
daa
sbb
adc
scas
or
js
sbb
inc
add
addb
cld
repz
cli
mov
mov
jae
fdivs
cmp
rcll
cmp
dec
shll
add
je
jecxz
mov
and
xchg
fidivrs
adc
pop
daa
sub
pop
into
loopne
int
ret
lock
das
loope
imul
loopne
sbb
ret
subl
push
and
push
pop
cmpsl
mov
mov
out
in
xchg
jl
test
mov
xchg
dec
outsb
mov
test
inc
and
adc
lahf
jl
inc
sub
push
adc
and
dec
cmp
cmpsb
push
or
sub
mov
jb
inc
and
lret
fcomps
dec
xchg
adc
in
push
int
out
mov
sbb
adc
sbb
stc
or
sbb
lret
dec
repnz
cmpsl
and
or
adc
mov
inc
and
and
mov
cmp
testl
jb
ret
sbb
mov
fwait
or
es
aam
mov
inc
js
jb
adc
pusha
inc
jge
out
int
out
stos
loope
xchg
sbb
pop
xor
adc
mov
cld
pop
call
test
insl
inc
jp
jae
out
or
outsl
pushf
aaa
in
lret
cli
popf
inc
mull
mov
faddl
lods
xchg
cmc
mov
jl
sub
push
cmp
mov
movsl
pop
clc
mov
int
movsb
mov
jno
mov
movl
pop
jne
jge
addr16
cmp
test
xchg
mov
lock
xlat
pop
cmp
push
jle
in
sub
lret
push
lret
rorb
mov
inc
imul
outsl
fs
data16
loopne
inc
je
lret
jp
push
push
aaa
dec
mov
add
inc
dec
xchg
lret
jp
cmpl
mov
xchg
dec
jge
lahf
push
nop
jne
pop
and
or
add
lods
aam
icebp
dec
jnp
push
jle
jecxz
cmp
push
jmp
sbb
pushf
dec
pushf
push
inc
mov
aas
ret
pushf
dec
addl
mov
jge
xchg
xchg
mov
popa
add
or
ja
mov
sbb
mov
inc
mov
push
pusha
cmpsb
in
xchg
mov
jg
loop
movsb
adc
loop
cmpsl
and
jo
dec
hlt
loopne
cmp
mov
dec
mov
sbb
nop
aam
mov
stc
pop
pusha
aaa
jmp
pop
insl
into
push
adc
fcomi
pop
pushf
or
jmp
mov
loope
sbb
mov
addr16
lret
xchg
loop
adc
fwait
adc
outsb
mov
les
pushf
addr16
lret
jle
pop
test
sahf
mov
les
icebp
and
xlat
pushf
adc
icebp
cmp
dec
out
inc
push
jne
cmc
cmp
and
xchg
lret
jl
xchg
loopne
jecxz
jnp
xchg
mov
outsl
test
inc
loopne
ret
incb
xor
sbb
adc
push
xor
hlt
sbb
and
mov
cmp
push
mov
sub
in
imul
sbb
sbb
push
fstps
jne
mov
xchg
lods
daa
enter
mov
adc
fnop
sbb
xchg
xor
mov
lret
push
cli
add
ret
je
les
cli
push
jnp
jns
fisubs
xchg
and
pop
jle
mov
int3
sub
rcrb
sub
sub
push
arpl
adc
xchg
call
enter
loope
sbb
cmc
in
jb
stc
mov
in
test
jecxz
clc
xor
lds
mov
aad
jecxz
lods
ds
rcl
dec
jl
mov
add
dec
or
inc
mov
jno
or
insl
jecxz
jl
orl
push
and
inc
pop
fwait
in
or
outsb
pop
jno
clc
sbb
idivl
lahf
xor
fnstenv
push
jl
loope
hlt
mov
ret
not
push
cld
mov
mov
push
dec
lret
cmp
push
leave
lock
fsubrl
jp
xorb
std
test
mov
mov
popa
testl
in
and
out
xchg
clc
cli
xlat
push
aas
push
add
imul
xor
sub
cmpsb
cmp
sbb
and
int3
mov
mov
imul
pop
inc
sarb
pop
inc
mov
pop
push
rorb
cmp
ror
outsl
scas
lock
sbb
shrb
jae
cmc
jmp
cmpsb
popa
sahf
sub
xor
add
dec
inc
imul
sub
add
and
outsb
xor
inc
or
pop
sbb
popa
inc
mov
jg
cli
push
mov
nop
adc
jmp
das
xor
xchg
xor
lret
xchg
xor
mov
pushf
pop
aas
pop
test
pop
and
es
mov
orb
out
dec
mov
xlat
push
aam
sub
shlb
xchg
popf
aad
xchg
pop
jp
add
and
test
xor
call
push
test
lods
test
push
cmp
rol
out
add
popa
mov
jne
push
sbb
call
sub
pop
xchg
addl
loop
push
jns
and
sub
fwait
push
nop
cmp
mov
xchg
aam
cmp
and
push
dec
xor
aas
jp
adc
aas
mov
push
jmp
mov
adc
xchg
and
gs
xchg
jg
test
mov
sbb
repz
out
inc
mov
loop
fidivs
scas
sahf
bound
jge
iret
add
shr
test
vunpcklpd
stos
xchg
imul
sbb
xchg
popa
popf
mov
add
ja
pop
inc
dec
inc
pop
mov
out
mov
mov
mov
jae
or
push
sub
dec
movsb
dec
cmpsl
rcrb
inc
test
xchg
das
adc
js
hlt
stc
incl
int3
stos
push
mov
pop
rcrb
sbb
inc
sub
lods
and
or
add
aaa
sbb
rolb
inc
xchg
push
dec
leave
xchg
outsb
sub
clc
inc
shll
hlt
ja
subl
mov
inc
jo
outsb
push
mov
shl
sub
add
cmp
repz
sbb
pop
ret
shlb
stos
das
adcb
xor
lret
jb
popf
lahf
push
mov
lret
movsl
mov
adc
cli
push
xor
xor
loopne
mov
insl
mov
xchg
pop
jne
addb
lock
dec
sahf
push
cmc
cs
imul
add
movsl
out
jbe
jae
lcall
psubw
sarl
popf
in
push
int3
scas
dec
xchg
andb
imul
ja
push
sahf
shlb
cmp
push
ret
jmp
jmp
mov
mov
mov
add
adc
sub
xchg
ret
mov
mov
insb
pop
fwait
das
pop
add
divb
addr16
repz
outsl
jp
sbb
sbbb
inc
data16
mov
push
out
shld
out
repnz
dec
aas
push
inc
inc
add
cmp
cmp
lahf
je
rorb
push
pop
aas
call
jae
sbb
pshufw
stos
sub
push
mov
sti
adc
pop
add
jle
sub
add
lods
or
out
iret
arpl
dec
pop
mov
out
out
fidivrs
mov
push
add
test
loopne
rcll
fcompl
stc
fidivs
push
enter
xor
push
pop
mov
sbb
jnp
mov
repnz
inc
pop
xor
cmpsl
mov
lock
mov
call
xor
push
dec
sbb
mov
jnp
jns
dec
or
pop
xchg
pop
pop
xor
js
xchg
test
movsl
hlt
aaa
mov
dec
jg
sbb
pop
gs
js
pop
aam
mov
add
mov
decb
dec
mov
out
push
repnz
inc
les
mov
outsb
cld
jl
push
repnz
out
stc
lret
lods
ljmp
adc
xchg
shlb
cmp
js
int3
daa
push
les
adc
push
xor
lcall
pop
push
push
icebp
in
divb
lods
add
movsl
popa
jnp
loope,pt
fstl
add
add
bound
out
or
jle
inc
mov
jb
mov
mov
pop
lea
add
into
repnz
lret
dec
aam
in
pop
clc
sub
and
xchg
jl
inc
mov
cs
hlt
std
cmp
lahf
cmpsl
xchg
push
cltd
mov
int3
sub
push
push
inc
sbb
push
das
pop
stos
jp
mov
mov
lcall
dec
sbb
movsb
hlt
mov
lahf
loop
jnp
jno
orl
inc
lds
xorb
push
cmp
dec
je
shlb
add
fnop
out
push
adcb
jg
popa
mov
movl
mov
push
jbe
pushf
jmp
enter
xchg
sbb
test
leave
mov
add
fs
push
inc
out
loop
pop
inc
in
xor
lcall
push
dec
insl
rorl
hlt
jb
mov
lahf
pop
pop
xor
sti
out
add
jmp
sbb
mov
sub
bound
ds
dec
es
int3
gs
outsb
push
push
jle
xchg
cmp
or
xor
sbb
xchg
dec
leave
pushf
test
js
fnstsw
mov
dec
into
jno
pop
and
sub
pop
aam
fucomp
and
pop
inc
div
movsb
or
and
mov
mov
xchg
pop
mov
das
mov
inc
push
jle
and
stc
inc
or
and
push
jecxz
fstps
rorl
ss
dec
mov
fcompl
cmp
fiadds
scas
cs
jno
mov
ljmp
dec
movsb
cmp
pusha
rcrl
aad
jo
cltd
roll
xchg
ss
loope
mov
fdivs
leave
lahf
xor
lods
ret
cwtl
cmp
push
cmpl
movsl
lcall
push
sub
mov
jno
in
imul
cmp
lahf
mov
mov
sti
enter
mov
add
lock
aas
xor
in
mov
mov
movsl
dec
int3
clc
sub
and
xor
push
stos
cmpsl
clc
fnstsw
cmp
data16
mov
mov
test
push
or
popf
sbbl
out
or
stc
int3
jle
xorb
inc
adc
aam
add
cmpsl
fwait
aam
sub
mov
or
clc
lods
jnp
idivl
inc
inc
pop
add
js
test
mov
cmp
lods
shlb
fnstcw
addr16
jne
scas
sahf
add
xchg
jge
aad
in
cs
lret
out
sbb
movsb
xchg
mov
je
mov
shl
xor
fs
stos
popa
sub
pop
cmp
mulb
imul
test
inc
sbb
sub
add
dec
and
repnz
std
inc
icebp
outsl
adc
daa
enter
and
ret
xchg
jl
or
xor
fwait
add
les
adc
xchg
shr
xor
add
sbb
pop
pop
in
sbb
lret
cmp
mov
mov
movsl
jns
adc
xchg
rcll
lcall
sub
xchg
mov
cmc
sbb
test
mov
lret
adc
dec
pop
movsb
test
test
pop
pop
arpl
push
loope
sti
sub
in
popa
int
call
push
mov
aam
stos
push
test
test
in
mov
dec
cltd
rorl
jne
jns
fldcw
xor
es
repnz
fadd
cmpsl
mov
jl
jne
cld
lods
aam
push
inc
addl
psubb
lds
adc
divb
cmpsb
cltd
out
push
push
std
sti
inc
mov
and
sbb
sti
hlt
push
cmp
or
lock
test
pop
lock
mov
or
lahf
dec
add
inc
fists
mov
sub
mov
sbb
jle
add
jnp
xchg
add
aad
sub
dec
lds
pop
jmp
popa
out
cmp
dec
mov
mov
js
inc
mov
push
aaa
jmp
pop
scas
pushf
sbb
add
addr16
add
xor
mov
ret
fcmovnbe
adcl
fisttps
adc
dec
das
jg
insb
mov
roll
cmp
sub
ja
jg
pushf
inc
popa
out
inc
xor
inc
or
jp
sbb
enter
sub
dec
xchg
enter
fmull
push
ret
pop
iret
mov
les
push
aas
sbb
scas
sarl
xchg
cmp
in
ror
push
xlat
add
pop
cmp
sub
fisubrs
in
xor
sub
jecxz
call
mov
das
push
push
add
int3
aaa
stos
push
repz
ror
lahf
mov
rclb
movsb
repnz
mov
push
mov
or
ljmp
out
mov
sbb
xchg
test
in
es
pushf
cmc
je
lods
push
inc
dec
and
push
outsb
fsubr
xchg
mov
push
ja
xchg
in
in
pop
leave
adc
fucom
pop
cmp
daa
mov
loopne
gs
loope
nop
mov
ss
sub
inc
fdivr
int
ror
xchg
adc
adc
pop
push
jmp
mov
test
inc
jnp
add
enter
ret
inc
sti
pop
aad
jbe
add
mov
shr
mov
push
push
popf
mov
ds
pop
cmp
out
and
sbb
mov
ret
mov
pop
aam
pop
push
stos
cmp
xchg
pop
fdiv
xor
and
and
incb
call
rcrb
lods
into
add
notb
fs
mov
push
jno
pop
xlat
test
bound
popf
or
call
xor
xchg
test
mov
push
cli
mov
repnz
xchg
or
cld
adc
ljmp
and
xchg
mov
roll
shlb
test
mov
cmpsl
orb
sbb
pavgb
pop
or
xchg
mov
pop
xchg
int
mov
imul
mov
push
cmpsl
aam
imul
test
ljmp
xchg
jle
leave
jl
loopne
pushf
lea
lods
lods
fldcw
out
mov
insl
mov
jnp
xor
push
dec
xchg
push
add
xsha1
cmpsb
mov
arpl
add
mov
loope
cld
je
mov
push
lret
orb
dec
mov
loopne
inc
rcll
pop
imul
sub
inc
in
loopne
xchg
pop
test
movsl
shr
in
test
pop
jecxz
in
fsubrl
mov
hlt
pushf
adc
push
jnp
fildl
aas
inc
xchg
sbb
aaa
mov
call
sbb
adc
xchg
mov
mov
xor
pop
lds
dec
imul
leave
mov
loop
scas
mov
enter
lods
leave
xchg
xchg
sub
repz
enter
adc
lods
dec
sbb
xor
pop
pop
fstps
inc
movb
mov
dec
loope
xchg
jo
xchg
add
cld
dec
adc
lahf
sub
adc
and
sar
std
loop
jg
movsb
out
int
add
inc
mov
inc
xor
cmp
es
add
fs
lock
mov
mov
adc
dec
fisubrl
cmpb
stos
and
pop
xchg
push
and
into
loope
pop
cmp
add
xor
xor
adc
loope
jns
adc
xor
aam
sub
xor
sbbl
xchg
add
nop
icebp
pop
mov
xor
jne
rolb
mov
sbb
jns
lods
sub
fcompl
nop
aad
clc
cltd
hlt
ficompl
adcl
dec
loopne
and
lock
push
out
add
dec
or
lret
push
sbb
cmp
push
test
add
scas
sbb
std
sub
mov
and
sub
lea
sbb
sbb
cmp
mov
xor
sub
lds
xor
xorb
jmp
sub
out
adc
enter
bound
or
hlt
cwtl
and
lret
lea
pusha
out
push
aas
jns
jbe
gs
jmp
testb
fbld
je
adc
sbb
in
into
mov
and
imul
push
xchg
popf
ss
pushf
sub
lret
mov
inc
das
out
mov
mov
pop
cvtpi2ps
sbb
sub
pop
stc
ljmp
push
dec
outsb
ljmp
cmp
push
lods
int
insb
jno
xchg
dec
stos
adc
sbbb
push
hlt
sbb
push
pop
mov
cmp
out
out
fs
cltd
test
and
mov
addb
pop
imul
icebp
mov
cmpsb
and
pop
and
pop
sti
inc
ljmp
scas
dec
jmp
push
bound
pcmpgtw
outsl
add
and
add
fistpll
sub
push
mov
push
jne,pt
data16
xor
cmp
or
mov
jne
and
mov
fstps
push
daa
stos
mov
xor
cld
xor
mov
sbb
mov
or
ss
pop
xchg
jp
xchg
mov
jo
pop
inc
add
mov
popf
mov
push
pop
aad
and
or
call
add
mov
push
popa
test
push
fnsave
mov
idivb
dec
sbb
stc
clc
adc
sti
dec
int3
mov
and
outsl
pop
add
rcr
adc
ljmp
sahf
and
mov
cmp
mov
out
scas
cmc
and
sub
in
out
ds
sub
rcrl
mov
enter
mov
xchg
jne
sbb
dec
jno
aaa
movl
inc
sbb
hlt
mov
jg
outsb
dec
roll
in
jo
xchg
add
pop
ds
mov
jl
rol
or
mov
add
loopne
mov
sbb
sub
movsb
cmc
xlat
pushf
adcl
dec
aad
in
clc
mov
sbb
pop
imul
mov
xorb
dec
cmp
movsl
mov
sub
and
mov
sub
cmp
incl
xchg
mov
pop
cmc
mov
xchg
in
dec
cmpsl
addl
and
lods
push
fwait
cltd
pop
mov
mov
xchg
sub
ds
pop
xor
pop
sbbl
adc
cmp
cmp
sbbl
cmpb
fwait
mov
imul
push
loope
movsb
rclb
in
push
repz
rolb
stos
loope
shll
scas
push
mov
pop
push
sbb
repz
push
mov
andb
cmpsb
mov
dec
rcrb
sub
popa
xlat
xorb
pop
push
shlb
pop
mov
add
lcall
mov
lock
inc
jae
mov
push
pop
into
mov
mov
push
cs
dec
push
mov
push
mov
mov
rclb
pop
add
insb
rcll
ja
lret
jae
pop
mov
decb
sti
jno
movsl
in
outsb
shll
fnstsw
mov
dec
pushf
std
enter
lea
lea
cmc
and
ret
mov
outsb
and
iret
in
cmc
xor
imul
mov
repnz
nop
std
add
pop
dec
inc
xor
jmp
inc
push
lcall
and
sti
pop
xchg
xor
mov
arpl
fwait
add
bound
jmp
adc
mov
daa
mov
adc
data16
pop
inc
mov
and
jns
cmp
adcb
xor
sbb
in
test
clc
rorl
jmp
stos
enter
mov
out
mov
bswap
add
sahf
aad
int
mov
andl
jo
push
jbe
sarl
pop
mov
gs
ja
add
lret
pop
aaa
sbb
cmc
push
fdivrs
pusha
out
inc
inc
mov
jns
inc
sbb
ret
imul
dec
add
pop
add
lds
adc
das
cltd
rcrb
inc
xchg
dec
test
adc
enter
sub
jns
adc
leave
add
out
xchg
pop
fisttps
inc
push
pop
mov
imul
or
dec
popa
js
cmp
mov
sbbb
xchg
and
imul
bswap
stos
fdiv
adc
mov
cmp
sub
lret
mov
movsb
hlt
mov
jno
sbb
mov
jg
push
gs
push
xchg
andl
leave
mov
in
and
cld
inc
testl
push
js
mov
leave
lret
push
in
mov
xor
or
data16
mov
or
and
cmpsl
mov
inc
sub
cmpsb
dec
and
fiadds
mov
shll
sbb
fwait
int
push
das
js
cmpsl
sbb
jg
clc
push
xchg
adc
faddl
movl
rol
xchg
and
lds
fwait
adc
clc
popl
insb
iret
nop
push
dec
inc
pop
fadds
lods
xchg
xor
jmp
xor
mov
into
inc
js
dec
popf
cmpsl
daa
lods
std
xlat
pop
dec
inc
int
push
andl
inc
sbb
roll
mov
dec
js
add
stc
adc
adc
enter
xchg
ficoms
add
sbb
inc
adc
push
test
push
shll
xchg
or
xor
mov
pusha
pop
ret
dec
push
in
sbb
shll
add
loope
adc
and
inc
outsl
fistps
adc
das
out
addr16
jne
mov
inc
test
add
adc
jle
cli
adc
jns
xchg
push
push
repz
sub
push
ret
pop
jne
jecxz
jmp
imul
xchg
sub
stos
into
xor
movsl
pop
insb
popa
inc
stos
jmp
leave
push
or
jl
push
negb
dec
mov
jg
and
mov
cmp
cmp
jne
adc
sbb
jp
or
cltd
leave
jmp
jo
sub
dec
inc
cmp
and
addr16
cli
xor
add
stos
mov
xchg
out
imul
stc
pop
repnz
jecxz
mov
cs
into
mov
dec
shlb
pop
push
outsl
shll
arpl
cmpsb
int
pusha
mov
push
inc
push
dec
ret
movsl
ja
imulb
jne
jge
leave
mov
loopne
ret
inc
adc
mov
or
cmp
inc
xorb
andl
gs
push
cld
ss
mov
cltd
daa
scas
jno
test
xor
and
sub
xchg
jb
xchg
mov
clc
mov
pavgw
or
pop
xor
ds
call
stc
sub
out
popa
out
add
loopne
cmp
in
mov
clc
iret
lret
clc
iret
daa
dec
sbb
mull
ljmp
mov
dec
fidivrl
push
mov
mov
popf
pop
fistps
and
pop
xor
insl
dec
sti
add
pop
jns
push
pusha
repz
lock
sarb
ds
pop
mov
xlat
dec
daa
add
daa
mov
sub
orb
clc
inc
xor
mov
sbb
or
enter
mov
lds
xor
inc
fcmovnbe
pop
mov
fistpll
xchg
add
add
lret
addr16
lcall
pop
adc
dec
daa
insl
dec
xlat
fidivrs
ficoms
outsl
jmp
mov
xchg
xchg
cmpsl
push
xor
lea
mov
mov
jno
mov
fadd
repnz
ljmp
adc
pop
mov
xchg
cmpsl
jb
mov
add
mov
dec
cmp
inc
inc
lret
mov
cld
fistl
stos
cmp
or
sub
sbb
add
jnp
aam
shll
rol
sub
mov
data16
or
dec
negl
mov
mov
mov
cmpsl
out
jne
das
notb
mov
mov
mov
mov
cmp
shrb
andb
fmuls
andl
adc
jns
and
lahf
mov
repnz
fisubrl
fs
mov
cmp
mov
add
repnz
dec
das
lcall
das
mov
pop
lret
cli
repnz
dec
popf
jl
aam
pop
push
mov
mov
and
lret
je
cmpsb
cmp
nop
rolb
cmc
xchg
out
lret
inc
divl
dec
iret
mov
fadd
inc
sub
add
xchg
pop
add
mov
aas
aam
and
dec
push
jg
int
sbb
pop
movsb
adc
xchg
out
sub
xor
in
call
adc
dec
push
jp
pop
mov
fdivl
jle
dec
jb
pushf
insb
push
sub
sub
adc
jecxz
xlat
loop
fwait
pop
sub
jns
jecxz
ds
roll
nop
aas
repnz
mov
lret
lahf
ds
inc
xor
xchg
mov
sbb
rclb
enter
ds
push
cltd
dec
mov
and
repz
sarl
cmp
jge
int
pushf
shr
cmp
jecxz
jnp
inc
test
out
adc
sub
and
insb
adc
xor
mov
decl
imul
jb
shrb
outsb
adc
xor
xchg
mov
stos
mov
leave
pop
aam
mov
ficompl
into
mov
mov
sub
jb
sbb
insl
movsb
xlat
pushf
andb
mov
les
movsb
popa
pusha
cmp
arpl
inc
xor
and
cmp
or
cmpsb
mov
cmp
addr16
jge
ret
cltd
bound
jl
test
jecxz
cmp
inc
sub
adcl
stc
cmpsl
xchg
jmp
mov
xor
inc
dec
insl
sbb
stos
arpl
aad
repnz
sub
out
push
dec
or
cmp
std
adc
leave
push
jne
jle
mov
loopne
sti
jp
in
mov
std
jl
adc
repz
fistpl
int
cs
cli
sti
inc
and
imul
dec
sbb
mov
push
outsb
data16
lret
sbbb
movsb
or
out
icebp
sbb
xor
push
inc
movsl
fdivrl
outsl
lcall
lds
imul
jge
or
xor
push
sbb
into
cmp
sbb
xchg
outsl
mov
inc
sbb
mov
in
add
xor
adc
adc
and
xchg
fs
sbbb
ja
fsub
or
pop
dec
jo
pop
sbb
jmp
or
dec
jecxz
xchg
jo
inc
jp
popa
push
addb
popf
in
out
push
loopne
xchg
push
pop
fiadds
xor
ljmp
mov
fcoml
arpl
push
xor
xchg
cmp
jle
xchg
mov
ficoms
repnz
repz
aas
loope
gs
in
adc
adcl
jge
pop
fldenv
ss
dec
cs
add
adc
aad
movsl
push
cmpsl
inc
in
ljmp
push
push
in
sub
push
out
testl
and
ret
mov
in
dec
fs
lret
jp
movsl
push
mov
insl
jmp
test
out
jbe
ret
pop
iret
pop
and
cwtl
test
cld
call
iret
mov
lods
out
mov
pop
addr16
shlb
xor
das
mov
mov
sahf
imul
dec
test
loopne
mov
mov
cmp
dec
test
pop
fcompp
or
stos
sahf
inc
jmp
fsts
ss
outsb
sbb
movsl
jnp
pop
adc
mov
call
xor
aas
dec
and
mov
push
call
add
sahf
sti
repz
dec
std
jns
nop
jmp
loope
xchg
je
shrb
mulb
adc
mov
sti
dec
add
cmpsb
add
add
cmpsl
sub
iret
jl
push
gs
or
das
iret
nop
js
or
sbb
sbb
or
pop
movsl
pusha
ret
mov
push
inc
lcall
push
pop
dec
das
aam
mov
js
call
and
fs
pop
fstpt
shrb
pop
cmpsl
pop
xchg
shll
pop
pop
aaa
test
cmp
dec
mov
mov
cmpsl
mov
imul
cld
imul
mov
pop
adc
sub
sbb
pop
jmp
pop
xor
push
sub
dec
cmp
push
in
mov
lods
jo
mov
repz
nop
addl
out
int
cmp
add
jmp
idiv
jge
lret
imul
int
scas
je
pop
or
fnstcw
adc
mov
rcl
adc
loopne
lods
add
leave
pusha
jg
fwait
testl
sbbb
cmp
jae
fdivs
cmp
pop
out
pop
inc
adc
decl
aaa
inc
sbb
in
xor
ds
xor
fsubs
mov
lds
mov
mov
jmp
xor
jno
dec
or
adc
jnp
scas
jmp
xchg
mov
pop
sarb
push
rcrb
popa
mov
gs
andl
xor
mov
cltd
out
ljmp
in
mov
mov
sub
xchg
loop
push
ljmp
shl
dec
aaa
ret
iret
jnp
cmpsl
jl
pop
push
outsb
stos
in
pop
mov
xor
dec
mov
jmp
mov
mov
es
into
stos
aam
int3
mov
mov
xchg
dec
fldenv
fadds
push
mov
cli
or
lahf
outsl
pop
cwtl
movsl
jne
and
inc
xorl
test
mov
lahf
mov
jle
aas
inc
push
lods
aad
pop
lock
loope
in
rcll
mov
xchg
or
add
xor
rcr
mov
test
arpl
into
dec
pop
scas
mov
mov
negb
inc
imul
cli
cs
imul
xor
jnp
mov
cmc
sbb
or
jnp
movsl
mov
arpl
adc
cld
xor
or
adc
jne
inc
jae
fwait
add
adc
jmp
fs
das
and
cwtl
dec
ret
xor
lret
cmp
int
inc
addr16
das
mov
jl
leave
push
addl
aad
xchg
xchg
outsb
sahf
cmp
add
push
pop
sub
xlat
dec
lret
lds
push
fisttps
sti
or
sarl
pop
iret
jecxz
xchg
dec
pop
and
repz
mov
or
push
xchg
mov
out
lods
lret
test
jmp
iret
sahf
mov
out
int3
push
mov
sahf
sub
sti
push
cwtl
mov
and
mov
mov
mov
push
andl
xchg
lret
cs
loopne
or
adc
xchg
ds
pusha
sbb
or
ss
add
xorl
xchg
adc
icebp
cmp
lods
dec
inc
adc
punpcklwd
cmp
loop
pop
sarl
cmc
adcb
pop
dec
jle
aas
scas
mov
and
dec
jae
xor
or
sub
mov
loope
cmp
xlat
mov
rolb
mov
adc
fisubrs
mov
xchg
pop
popf
inc
lret
rorb
pop
push
push
adc
stc
or
fcoms
mov
in
std
js
popf
std
fwait
push
jp
sub
and
imul
mov
call
mov
imull
inc
inc
xchg
in
push
sahf
daa
add
neg
ret
pop
dec
mov
xor
sahf
mov
ss
dec
xor
mov
jl
sahf
xor
sub
inc
or
out
cmp
mov
mov
xor
sbb
fists
sub
sbb
jecxz
fwait
int3
imul
xchg
das
shlb
ss
js
and
fisubrs
cltd
mov
cmpsb
ret
add
xchg
movl
bound
inc
sbbb
adc
sbb
dec
stos
fwait
inc
sahf
das
push
dec
sbb
popa
rcrl
jecxz
push
stos
insb
jl
stos
xchg
xchg
outsl
fcomip
mov
shrb
js
inc
jne
scas
and
aas
daa
or
fisubrs
mov
push
sub
imull
adc
xor
xlat
push
out
push
ljmp
outsb
ljmp
cmpsl
mov
xchg
adc
lahf
mov
adc
jp
inc
and
push
mov
je
cmp
movl
sub
in
in
repnz
aas
out
lea
insb
inc
jecxz
sbb
xchg
movsl
cmp
test
mov
outsl
test
xor
jp
aaa
mov
pop
inc
jae
xlat
sbb
cmp
lret
enter
mov
dec
mov
add
icebp
test
or
sbb
fwait
jle
fld
insl
ret
lods
mov
fs
adc
and
push
mov
xor
shlb
pop
arpl
int
sbb
adc
iret
xor
sbb
sahf
out
lret
popf
jmp
and
in
fstl
lret
mov
jge
es
cmp
pop
add
xchg
fs
jnp
cmp
pop
push
jmp
xor
jge
cmp
rcll
nop
dec
fstps
cmp
into
int
pusha
sub
pop
or
insl
adc
aam
es
stos
and
xchg
in
push
sbb
in
sub
movsl
aad
inc
mov
xchg
jb
push
enter
iretw
ret
test
icebp
and
loopne
jl
mov
imul
xor
and
pop
je
cwtl
in
fwait
mov
jg
repz
or
rcll
jg
test
imul
loop
rol
in
int
xchg
mov
popa
mov
das
test
or
push
sbb
add
dec
js
cmp
mov
outsl
imul
push
ja
adc
sub
push
sub
or
pop
cwtl
test
and
incb
dec
call
ret
movsb
test
addb
push
dec
mov
mov
lret
das
fiadds
mov
xchg
jo
or
push
cmpsl
repnz
dec
xchg
dec
movsl
clc
cmc
movsb
jns
outsl
popf
cmp
vmovdqa32
lret
int3
shll
xlat
fprem1
out
gs
lcall
icebp
js
loop
push
dec
lods
lds
into
and
mov
sbb
pop
in
inc
addb
mov
mov
pop
fld
jnp
xor
pop
out
mov
and
inc
mov
and
xor
cmp
sub
jle
js
jno
cld
je
outsb
out
dec
sbb
pop
lods
mov
pop
jns
pop
xchg
sarb
rclb
add
jo
sub
push
int
dec
add
addr16
or
sbb
cmp
shll
dec
dec
dec
int
sub
mull
aad
inc
jmp
scas
xchg
cmpb
pop
add
imul
xchg
mov
repz
adc
rclb
fisttpll
mov
jmp
mov
call
mov
mov
adc
lods
mov
shrl
or
dec
push
aad
jnp
int3
push
je
or
jle
lea
inc
iret
jmp
insb
cmc
cltd
xchg
mov
push
mov
imul
push
imul
mov
pushf
and
mov
xor
cwtl
xlat
jmp
sahf
in
mov
jmp
jecxz
pop
mov
rcll
push
mov
add
scas
xor
add
pop
cld
js
inc
neg
inc
imul
jle
xchg
dec
xor
cltd
rcl
sbb
es
cmpsb
ds
or
jno
ret
ljmp
testb
add
mov
inc
shlb
xor
xor
lds
jecxz
cmpsl
or
xor
mov
jns
mov
aad
jno
movsl
mov
inc
movsb
mov
iret
xor
push
jmp
push
aam
add
pop
xchg
aaa
shll
cmp
dec
in
fldl
cwtl
movlps
lcall
lret
hlt
cmp
outsl
mov
jae
jns
mov
mov
adc
ret
icebp
das
imul
add
add
aam
cmp
in
xchg
imul
jae
pop
pop
mov
pushf
lcall
xchg
sbb
mov
or
and
mov
fldl
pop
mov
inc
ret
mov
das
jbe
outsl
outsl
push
mov
add
outsl
sub
mov
xchg
hlt
sub
jne
inc
jnp
jae
into
and
xlat
out
xorl
or
lcall
push
unpckhps
mov
inc
flds
rorb
xor
aad
adc
or
dec
xor
xchg
int
outsl
push
sbb
addr16
shll
inc
in
push
jae
sbb
in
inc
loopne
inc
sbb
xchg
rcll
ljmp
imul
sub
xor
imull
fsubrs
cmp
out
add
or
xchg
cmp
in
cs
data16
arpl
iret
rorb
ljmp
ret
mov
je
fcmovb
call
and
xlat
push
jmp
cltd
inc
xchg
imul
sarl
adc
inc
sub
or
subl
push
insl
movsb
js
repnz
add
js
mov
xlat
sbb
movsl
mov
lods
shr
cmc
loop
lahf
mov
jns
fwait
inc
or
xor
push
jb,pt
aam
ds
add
testl
sub
mov
jecxz
repz
je
imul
jecxz
cmp
negl
jp
clc
push
xchg
in
in
jne
mov
loope
cltd
sbb
dec
cld
dec
pop
sub
mov
jecxz
dec
sar
out
mov
repnz
and
ds
lods
movsl
test
popf
ja
or
sbb
mov
addr16
jno
dec
and
xchg
dec
xlat
addr16
aas
outsb
push
mov
xchg
push
outsl
xor
mov
mov
mov
push
lret
pop
add
outsl
movsl
lds
std
jo
jbe
mov
sub
std
test
mov
iret
cs
jle
movsl
aas
lret
js
push
loope
and
and
dec
mov
sub
es
jge
mov
adc
mov
push
adc
sub
notl
test
repz
mov
mov
iret
mov
add
xor
out
popa
into
hlt
movsb
xchg
cmp
pop
xor
push
mov
adcl
xor
inc
rclb
mov
das
push
jno
stc
aas
push
sbb
es
or
mov
cli
jp
push
or
mov
and
lds
push
testl
cmp
and
das
mov
xchg
aaa
fcompl
lea
xchg
xchg
fistl
icebp
shrb
aas
sbb
clc
cmp
daa
sub
pop
inc
sbb
pop
inc
push
jge
arpl
scas
lea
pop
hlt
or
xchg
scas
jb
push
outsb
mov
xchg
jns
and
pop
xor
push
add
scas
fwait
sarl
jecxz
mov
pop
fsubrl
mov
sbb
cmp
xchg
xchg
sbb
xchg
and
mov
jbe
mov
jns
add
rol
jnp
mov
scas
add
adc
and
pop
scas
cs
pusha
stos
sbb
xor
xchg
push
xor
sub
pop
rorl
fs
jp
aaa
push
push
sub
mov
sbb
aaa
push
xchg
cmp
call
lret
test
mov
push
ret
imul
push
sbb
mov
xchg
dec
mov
repnz
lods
shlb
xchg
call
dec
lock
inc
jae
pushw
cmpsb
pop
lock
repnz
in
mov
imul
lock
mov
adc
cmp
dec
ss
inc
inc
stos
ud2
sahf
ljmp
jg
jp
dec
call
xchg
out
xchg
cmp
adc
test
mov
sbb
and
cmp
adc
push
xlat
add
fadd
inc
dec
in
scas
jns
scas
pop
sub
movl
cltd
std
ret
dec
mov
lret
cwtl
sbb
cmpsl
cmp
mov
adc
fs
sahf
inc
insb
sub
jl
mov
iret
test
lea
xchg
adc
jl
loop
or
popf
fs
sub
pop
arpl
sbb
outsl
mov
test
les
cmpsl
in
or
clc
mov
push
mov
cmp
leave
insb
jnp
inc
xchg
push
outsl
xchg
jmp
cld
dec
xchg
cmpsb
scas
ja
scas
mov
push
mov
test
lahf
nop
inc
push
jmp
loope
roll
scas
inc
jnp
ret
stos
aam
mov
xchg
stc
xchg
rcr
ret
xchg
test
mov
jmp
out
cmp
cmpsb
push
cmpsl
test
and
and
rorb
int3
adc
or
xor
mov
cwtl
scas
xchg
sub
adc
stos
pop
and
mov
js,pt
dec
mov
lock
jmp
push
pop
add
mov
pop
out
pushf
mov
cmp
add
cltd
push
daa
mov
xchg
dec
iret
cmpsb
pop
out
sbb
cs
test
cmpsb
imul
and
int3
dec
xorb
mov
ljmp
add
xchg
jne
xor
insb
and
notb
and
and
fmul
cmp
jge
push
vpaddq
dec
jle
rep
jl
call
jge
mov
mov
out
mov
mov
xor
mov
adc
mov
dec
add
mov
adc
jae
ds
dec
push
dec
pop
sub
enter
daa
in
sub
hlt
stos
roll
addb
sub
cmp
adc
mov
aam
cmp
inc
daa
cmp
ret
test
rclb
jmp
push
mov
xor
dec
cs
lret
cli
adc
push
stc
and
sub
pop
shlb
mov
dec
xchg
stos
dec
shl
clc
adc
notl
xchg
fidivrs
adc
imul
outsb
out
xor
scas
dec
or
addb
mov
inc
sahf
outsl
ret
fisubl
popa
pushl
inc
scas
adc
test
inc
leave
mov
incl
mov
fcmovnb
mov
fisubrs
push
pop
out
bound
jecxz
fistpll
scas
mov
xchg
and
mov
mov
push
mov
test
std
xchg
cli
pop
inc
push
dec
subb
nop
lods
scas
jmp
xlat
and
loop
out
mov
cltd
dec
mov
sub
mov
insl
xchg
mov
xchg
add
and
aaa
mov
in
lods
jmp
adc
or
and
xchg
cmc
in
xor
test
add
sbb
aaa
mov
xchg
and
jmp
xchg
lds
adc
push
push
ss
lret
outsb
mov
dec
clc
inc
mov
arpl
cmp
and
js
call
les
mov
push
push
push
arpl
xor
adc
test
sub
push
add
push
cmp
sahf
xchg
cmp
test
inc
cmp
clc
fwait
push
fldenv
jecxz
ret
push
mov
lcall
fdivs
push
adc
xchg
sahf
imul
xor
sub
loopne
and
loopne
add
cmpsb
adc
and
and
movsb
mov
jmp
mov
test
int3
push
ja
mov
jo
mov
pop
push
lea
gs
icebp
adc
mov
test
call
lods
pop
mov
jmp
mov
movsb
into
testl
ss
xchg
sub
daa
inc
int3
arpl
in
fs
inc
push
mov
lcall
mov
andl
and
add
in
and
popf
mov
mulb
add
sub
inc
lods
mov
dec
inc
popa
mov
xchg
sbb
mov
stc
and
mov
mov
test
inc
dec
sub
push
pop
fs
popf
ret
movl
push
cmp
rclb
mov
jg
mov
insb
jmp
add
cmp
stc
popf
mov
mov
pop
dec
popa
cmpsl
lds
imul
gs
mov
arpl
adc
mov
cmp
cmp
lahf
adc
push
out
push
pop
pop
test
adc
outsb
in
mov
in
cmp
fsubr
xlat
xchg
loop
mov
xor
add
and
pop
iret
lahf
loop
shlb
jecxz
in
xchg
jp
aaa
adc
mov
int3
movsl
mov
and
mov
dec
in
adc
mov
lret
add
cmp
jmp
xchg
std
out
pop
fimuls
mov
rclw
pop
push
int3
cs
lock
or
mov
es
and
loop
cs
sbb
imul
inc
sub
aas
dec
cmp
and
jle
xchg
popf
pop
fcoml
lret
mov
lea
in
xchg
or
cwtl
or
scas
adc
clc
pop
outsl
test
sub
cmp
and
dec
pop
push
push
sarb
add
xlat
je
dec
cmpb
loopne
aam
xchg
xor
leave
push
adc
fidivrl
loop
push
fbld
pop
mov
sahf
fmuls
add
roll
and
xor
and
lret
js
mov
pop
jl
mov
and
cmp
shrb
pop
mov
xchg
rorb
push
mov
lcall
jg
movsl
stos
inc
xchg
leave
scas
popf
int3
xlat
dec
clc
subb
lahf
jge
jg
pop
cmpsb
out
sub
das
sbb
sti
daa
pop
inc
mov
adc
and
adc
clc
dec
lds
mov
call
scas
inc
ret
sbb
mov
xchg
cmp
sahf
movsb
push
cmp
mov
out
dec
add
fcomps
mov
pop
repz
or
call
imul
dec
sbb
lock
sub
in
cs
hlt
or
cmp
push
leave
cmpsb
push
mov
dec
lods
arpl
int
sub
test
xchg
sarl
adc
pop
mov
cmpsb
dec
in
xorl
fnstenv
lret
lods
call
mov
adc
rcrb
insb
jge
lock
lock
outsl
push
das
icebp
scas
pusha
sbb
sbb
push
pusha
dec
push
xor
inc
jecxz
mov
push
push
movsl
jae
ja
adc
adc
xor
pushf
movsb
mov
fucomi
jmp
addb
mov
xor
inc
sub
addr16
subb
add
ds
cs
mov
out
inc
and
jne
adc
push
pushf
addr16
jp
mov
aaa
mov
sbb
add
test
jae
movsl
and
cmp
out
scas
mov
stc
aaa
repnz
mov
out
sahf
jmp
mov
fiadds
jmp
stos
sub
mov
popa
shlb
inc
stos
int
adc
pop
or
dec
jp
inc
inc
inc
mov
push
mov
mov
aaa
fisttpl
mov
je
xchg
inc
mov
jg
data16
pop
popf
call
rcrl
addl
inc
add
jge
or
dec
rolb
push
or
fistps
arpl
jle
mov
sbb
adc
rclb
push
in
clc
mov
sbb
daa
sbb
dec
xchg
push
insl
xlat
xor
loopne
stos
dec
nop
mov
insl
cmc
mov
mov
imul
stc
pushl
pop
xor
cmp
popf
sbb
scas
mov
in
inc
jns
out
lret
inc
adc
inc
push
jl
push
lea
push
or
scas
pop
orl
add
fsubrs
in
push
xchg
add
sarl
cmpsb
iret
dec
push
sub
or
dec
test
mov
imul
lods
mov
adc
xor
cmp
stos
jae
mov
in
scas
js
or
xlat
cmp
outsl
or
test
mov
jge
mov
addr16
insb
lret
adc
pop
outsb
xor
fadd
mov
adc
loope
cmp
or
lret
fdivl
aas
pop
popf
push
imul
jb
adc
mov
xchg
repnz
out
mov
xchg
stos
and
xchg
test
push
aas
stos
jnp
test
std
insb
pop
sar
dec
lods
add
mov
fsub
add
or
mov
test
mov
and
dec
mov
out
out
mov
aad
cmpb
mov
cltd
es
jmp
in
sub
jo
adc
loop
shrb
inc
mov
inc
xchg
out
pop
loope
movsl
and
pop
xor
sub
lods
cmp
jl
jmp
xchg
arpl
lret
aas
movsb
stos
add
jne
cmp
sbb
sbb
mov
das
push
xor
or
jmp
ljmp
mov
mov
dec
mov
cltd
mov
and
scas
sbb
clc
mov
mov
ja
das
fsubl
pop
out
mov
dec
jbe
or
dec
sbb
scas
sub
ret
dec
sarl
jae
fstpl
inc
cli
bnd
jle
jne
or
icebp
or
je
mov
mov
adc
loope
jae
xchg
xchg
jno
xchg
insl
shrl
sub
out
loopne
je
push
rcrl
js
cmp
ret
scas
stc
leave
pusha
sub
add
sub
cmpsb
test
movsl
call
xor
movsl
in
jp
mov
push
das
or
dec
lods
inc
add
push
xchg
hlt
frstor
lcall
push
ljmp
xchg
add
lods
add
xchg
mov
and
jecxz
push
pop
sub
flds
xor
jge
dec
pop
out
jge
jno
mov
inc
adc
fsubrl
mov
jae
mov
mov
sub
mov
mov
fistps
adc
jl
out
mov
jbe
dec
sub
push
stc
mov
inc
decb
cltd
movsl
adc
ficoml
push
lea
pop
pop
cmp
stos
fldl
shll
jae
cmpsb
test
inc
fbstp
mov
out
inc
inc
adc
cmp
sbb
imul
inc
dec
idivl
pop
add
push
or
nop
stos
ss
inc
inc
mov
pop
xor
cmpsl
mov
cld
cltd
stos
imul
aaa
bound
mov
adc
mov
mov
and
cmp
mov
repz
push
fldenv
jecxz
fsts
lret
fs
push
arpl
aas
mov
inc
sub
lret
sub
hlt
les
and
testl
aas
leave
push
dec
dec
in
mov
test
mov
xor
push
mov
cmp
cmpsb
or
cmp
xor
hlt
sbb
sub
aas
clc
inc
fwait
pop
pop
in
loope
stos
and
mov
and
and
nop
in
push
cmp
mov
xchg
cs
push
mov
shrb
in
mov
xchg
mov
xchg
nop
scas
or
jp
fdivrp
ret
ljmp
hlt
add
sahf
lods
in
sbb
test
pop
mov
lds
icebp
sbb
push
fs
std
out
mov
pop
pop
inc
fildll
int3
push
popa
test
sub
jmp
pop
fdivrl
sub
inc
lds
inc
pop
mov
sbb
xchg
push
sbb
sbb
sbb
cmp
or
ljmp
clc
lret
out
in
sub
aam
fbld
mov
ret
pop
inc
pop
or
js
pop
push
mov
lahf
nop
add
icebp
arpl
test
sub
lret
rcll
inc
shlb
shrb
pop
fs
push
xchg
cmpsl
fdivs
pop
in
movsl
mov
pop
push
sub
mov
or
xor
cld
outsb
xchg
test
pop
popf
jg
cltd
ror
shrb
leave
aas
cltd
in
sub
jnp
and
testb
adc
out
inc
xor
insl
js
mov
mov
scas
sub
repnz
pop
jnp
cmpsb
fcomps
mov
jae
xor
daa
enter
adc
xlat
mov
hlt
in
or
enter
xchg
adc
push
in
inc
pop
sub
ffree
add
and
adc
pop
xchg
xlat
rorb
scas
mov
push
xchg
xchg
inc
xor
js
pop
shll
pop
adc
sbb
inc
fdiv
aaa
jmp
movsb
xchg
notb
lea
incl
pushw
lret
stos
mov
fs
push
and
out
aam
or
adc
mov
add
shll
ficoml
dec
jno
mov
xchg
or
mov
aas
dec
fucomip
rolb
mov
in
adc
cli
sbb
popa
mov
add
adc
ficoml
cmp
pop
sub
sbb
aam
xchg
fistpl
jp
xchg
leave
ret
test
push
mov
push
cmp
mov
ja
push
aad
int
jl
cmp
push
clc
push
inc
mov
xchg
ds
or
lret
test
orl
xchg
lret
jp
je
leave
push
mov
xchg
das
dec
push
sbb
push
xor
icebp
push
mov
pop
mov
jge
xchg
inc
pop
movsl
pop
pusha
movb
rcrl
inc
addr16
stos
pop
mov
fcoml
cmpsb
pop
sbb
call
ficoml
cmpsl
and
jae
insl
dec
pusha
aad
sahf
jbe
pop
inc
sub
mov
pop
stc
enter
xchg
xor
push
dec
fucom
ret
jnp
andb
fbstp
test
or
test
mov
scas
mov
aad
mov
icebp
shl
movsb
inc
sbb
add
push
jae
xchg
add
je
mov
push
js
cmp
adc
repz
pop
lds
xor
pop
arpl
daa
cmp
arpl
imul
push
repnz
imull
clc
dec
inc
cltd
jl
xor
shll
xchg
inc
in
add
jo
push
mov
gs
outsb
std
loopne
outsl
inc
xchg
cmc
cmp
cs
stos
hlt
movsb
lret
arpl
loopne
lds
punpckldq
cmp
mov
mov
pop
cwtl
jmp
test
mov
and
sub
loopne
mov
aas
pop
xchg
lcall
std
out
rcrl
push
dec
and
adc
shrl
lret
fldcw
dec
in
orb
sub
mov
pop
aaa
mov
in
push
enter
imul
inc
add
sub
scas
fldt
in
or
mov
pop
add
inc
out
jae
xchg
adc
xchg
add
ja
and
adc
xchg
mov
lcall
sub
or
ljmp
push
jg
pushf
dec
sub
sub
fwait
jne
aam
or
in
xlat
out
jo
mov
int
sahf
setl
lds
xchg
cmp
push
loop
outsb
ffreep
mul
shrb
dec
decl
cmpsl
lea
pop
jns
out
in
add
fiaddl
adc
out
lahf
xor
jle
test
mov
in
lods
xchg
xchg
arpl
adc
into
pop
adc
pop
popf
and
pop
fisttps
xchg
sbb
jmp
add
add
std
pop
das
push
mov
pop
in
inc
fisttpl
shrb
fstpt
aad
je
std
adc
stos
aad
cmp
xchg
mov
sub
int
stc
je
mov
pop
push
or
in
cmp
xor
jmp
sbb
les
sbb
push
jecxz
xor
and
push
cmpsl
fs
cmp
fcoml
xchg
inc
loop
out
cmp
gs
lcall
popa
mov
add
ds
pusha
shlb
dec
test
fisttpl
push
jmp
adc
imul
sub
mov
test
and
push
pop
adc
incl
fists
popa
jo
loope
arpl
sbbb
lock
fistpl
imul
sbb
imul
andb
push
push
and
out
leave
lret
add
ljmp
jae
lahf
mov
popa
in
inc
sahf
push
xor
inc
mov
ds
adc
jnp
mov
jmp
mov
outsb
xor
jno
mov
push
in
add
sub
push
les
dec
sarl
cwtl
jg
lcall
test
ja
inc
dec
movsb
mov
rorl
mov
cmpsl
dec
shrl
push
into
nop
pop
imul
int
enter
xor
pop
xchg
arpl
dec
cmp
xor
leave
dec
mov
cmp
int3
sbb
push
fmul
sbb
mov
cmp
imul
cmp
lahf
push
push
and
mov
lahf
inc
push
into
decb
xchg
cmp
imul
in
dec
call
int3
and
mov
mulb
jl
inc
mov
shr
inc
or
addr16
xchg
in
xor
repnz
negb
sub
outsl
sub
inc
adc
loope
pop
loop
lcall
aaa
in
push
xchg
pop
pop
xor
mov
add
jne
test
adc
sub
negl
imul
sbb
lds
pop
nop
stc
mov
mov
into
stos
std
xchg
insl
mov
push
inc
mov
xorl
mov
sbb
sub
loop
xor
test
xor
out
scas
mov
dec
cltd
mov
insl
ss
outsl
sbb
inc
xor
xchg
xor
xor
inc
jnp
repnz
mov
dec
mov
dec
hlt
xchg
les
imul
mov
jmp
out
push
ss
sbb
xor
push
sbb
std
pop
dec
cmp
mov
hlt
mov
jl
and
js
mov
popa
xlat
sub
jp
lcall
xchg
dec
adc
adc
mov
or
shlb
mov
pop
adc
dec
repz
stos
cld
cmp
sarl
test
into
inc
sub
leave
add
gs
arpl
pop
or
inc
jmp
popa
cmp
push
xor
sub
mov
fstpt
imul
push
sbb
adcl
xchg
or
xor
je
mov
add
testb
cmp
lcallw
ss
stos
add
fisttps
or
dec
or
xchg
or
imul
inc
aaa
and
out
inc
lods
sbb
fwait
int
test
inc
xchg
add
cmp
jbe
jg
stos
adc
cwtl
adc
mov
popa
shrl
pop
mov
test
push
dec
cmp
popa
loope
sbb
xchg
cmp
das
lahf
sahf
loopne
fsubrs
fisttpll
aas
cmpsb
push
adc
cmp
mov
in
mov
adc
jnp
and
push
jbe
xor
xor
iret
mov
leave
xchg
or
push
mov
notl
aaa
pop
sbb
push
movsb
aad
mov
xchg
fdivs
or
jp
push
jle
mov
aas
cli
cmp
xlat
test
xchg
aaa
fists
mov
inc
lahf
mov
repz
push
mov
cmp
inc
out
fildll
pop
test
stos
add
xchg
ja
xchg
or
pop
fnstsw
adc
mov
dec
push
mov
adc
pop
aaa
cmpsl
and
jb
push
or
repnz
xor
rclb
adc
jmp
repnz
add
add
jae
inc
mov
les
ret
mov
fisttpll
cs
cmp
lods
bound
js
lds
std
dec
popl
pop
push
dec
inc
and
cmpsl
adc
fidivrs
sbb
xlat
ret
lret
test
adc
adc
pop
sub
insl
mov
cld
jmp
inc
lret
mov
stc
xchg
xchg
stos
mov
cmp
inc
cwtl
in
sub
fldenv
dec
and
pop
mov
imul
push
in
sub
inc
xchg
pop
idivl
xorl
pop
in
push
std
aam
mov
mov
cmp
insb
mov
ja
cmpl
aam
mov
jno
jne
cmp
sub
in
lcall
dec
cltd
in
into
jp
sub
jge
jle
call
add
xor
or
mov
cwtl
sub
int
dec
cmpsl
addr16
popf
jne
pop
xchg
insb
inc
jno
movsb
mov
movsl
push
rorb
lock
mov
ja
aas
pushf
xor
add
adc
xchg
sbbl
mov
insl
inc
pop
inc
pop
add
xlat
pop
dec
mov
pop
aad
and
scas
sahf
mov
or
push
es
cmp
dec
pop
cmp
pushf
and
shl
stos
pusha
shll
test
mov
test
mov
and
js
add
mov
mov
dec
adc
jecxz
pop
and
popa
das
sbb
mov
mov
push
xor
jno
repnz
shr
dec
cwtl
ljmp
jbe
add
mov
in
jle
adc
imul
dec
and
jno
mov
mov
mov
mov
ffree
fistpl
int3
inc
mov
in
mov
insb
popf
and
aam
aas
xor
mov
cmp
lods
sbb
push
call
pop
dec
cmp
rclb
xchg
les
pop
mov
dec
cmp
xchg
dec
setle
mov
daa
lahf
sub
xor
sar
adc
push
sbbb
and
push
jbe
add
shrl
imul
sbb
cmp
test
lods
mov
cmc
mov
lods
aaa
mov
mov
stos
xor
in
dec
pop
fcomps
ja
aas
cmp
mov
movsb
mov
daa
movsb
fnsave
and
push
xchg
xor
sub
dec
mov
mov
imulb
inc
and
insl
lahf
push
pop
in
pusha
scas
mov
xor
jg
stos
sbb
push
and
mov
xchg
movsb
cmp
loope
or
push
aaa
or
fistpll
pop
fidivl
xchg
and
roll
push
pop
xor
or
dec
sub
cs
filds
mov
mul
loop
aam
gs
sub
test
fsubr
xchg
dec
pop
mov
jl
jae
frstor
incb
sbbb
xchg
jmp
es
mov
inc
aam
cmp
jecxz
adc
pop
and
push
inc
mov
cld
add
dec
mov
xor
out
fnstsw
mov
add
xchg
in
jl
xor
imull
stos
and
add
or
into
stc
sub
and
mov
mov
or
aam
test
cltd
and
jnp
push
mov
cli
cs
xchg
jbe
push
dec
sub
mov
xchg
mov
xchg
jo
inc
ret
inc
loop
jmp
andb
cmp
in
ret
ja
and
mov
sti
js
nop
stos
fimull
iret
mov
loope
leave
adc
aad
lahf
orl
and
ret
dec
lcall
lea
and
mov
fpatan
fisubrl
sub
jl
cmpsb
dec
jae
fstl
pop
push
push
mov
inc
pop
cmp
cltd
cmp
outsl
cmpb
cli
js
push
test
add
push
or
mull
faddl
inc
and
cmp
xchg
repz
sbb
cmp
data16
mov
jnp
hlt
mov
jae
sub
push
mov
push
jg
add
outsl
inc
mov
fisttps
dec
push
dec
mov
aam
mov
ds
scas
scas
addr16
cmp
lret
jmp
adc
push
pop
mov
dec
fcmovbe
std
push
xchg
jge
outsl
fcomps
enter
mov
ret
insl
xor
mov
