inc
and
mov
cmp
jbe
pop
pop
xor
pop
pop
ret
mov
lea
push
lea
push
push
push
push
push
call
neg
sbb
pop
pop
inc
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
lea
push
mov
push
lea
push
push
push
push
push
movl
call
test
jne
cmpl
ja
cmpl
jne
lea
lea
push
lea
push
push
push
push
push
call
test
jne
mov
push
push
lea
push
call
mov
mov
mov
push
shr
push
movw
lea
push
call
add
mov
pop
pop
pop
add
ret
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
mov
push
push
push
push
call
neg
sbb
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
lea
push
push
push
push
push
call
add
adc
nop
nop
nop
nop
push
mov
push
call
mov
mov
lea
push
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
push
mov
push
push
push
push
call
add
ret
nop
mov
sub
lea
push
push
push
push
call
lea
push
call
mov
lea
shl
push
push
push
call
mov
mov
lea
push
push
push
push
call
add
pop
add
ret
nop
nop
nop
mov
push
push
mov
push
xor
push
mov
mov
mov
mov
call
mov
cmp
jne
pop
pop
xor
pop
ret
push
push
call
cmp
jne
push
push
call
test
je
mov
mov
movl
movl
mov
push
call
pop
mov
pop
pop
ret
push
call
push
mov
call
xor
cmp
pop
pop
sete
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
jne
ret
cmp
jne
push
call
mov
ret
mov
push
test
je
mov
cmp
jne
call
test
je
push
push
call
test
mov
je
jmp
movl
xor
pop
ret
mov
mov
push
mov
push
mov
push
push
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
test
jne
add
ret
lea
push
push
call
add
test
je
add
jmp
lea
movw
mov
push
lea
push
push
call
add
lea
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
xor
lea
rep
mov
mov
mov
mov
test
movl
mov
pop
je
lea
push
push
push
call
add
jmp
movw
lea
mov
push
push
push
lea
push
push
push
push
push
push
call
mov
neg
sbb
not
and
add
ret
sub
mov
push
push
push
push
mov
mov
xor
lea
mov
rep
lea
lea
stos
mov
push
push
push
push
push
movl
call
add
test
je
mov
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
movl
call
add
test
je
lea
lea
push
push
call
add
test
je
inc
lea
push
push
push
call
lea
push
push
push
push
call
mov
add
test
jne
push
lea
push
push
call
mov
lea
push
push
push
push
call
add
test
je
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
mov
push
push
push
push
call
add
pop
pop
pop
pop
add
ret
pop
pop
pop
xor
pop
add
ret
nop
nop
nop
nop
nop
mov
push
mov
push
push
push
lea
movl
push
call
xor
mov
xor
lea
add
mov
rep
mov
mov
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
mov
movl
test
je
push
call
add
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
test
push
jne
pop
pop
pop
xor
pop
ret
mov
test
jne
mov
lea
xor
test
je
push
call
mov
add
inc
test
jne
lea
push
call
mov
add
test
mov
jne
pop
pop
pop
pop
ret
mov
xor
mov
shr
rep
mov
and
rep
mov
test
mov
mov
mov
jle
mov
mov
mov
mov
add
dec
jne
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
xor
mov
push
mov
test
jbe
lea
cmp
je
inc
add
cmp
jb
jmp
mov
lea
mov
test
mov
jne
mov
call
mov
test
jne
mov
mov
movl
call
mov
add
test
je
mov
jne
xor
jmp
mov
push
call
test
je
mov
push
call
mov
add
test
jne
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
mov
cmp
jae
xor
ret
mov
push
mov
cmp
pop
je
xor
ret
mov
ret
nop
nop
nop
nop
nop
nop
push
mov
lea
push
call
add
cmp
mov
jne
movl
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
test
je
mov
add
test
jne
mov
mov
cmp
jne
push
call
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
mov
push
push
push
mov
mov
call
lea
xor
mov
mov
call
mov
movl
movl
mov
mov
mov
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
push
mov
mov
test
je
mov
push
call
mov
test
jne
mov
test
je
mov
mov
cmp
ja
mov
call
pop
ret
xor
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
test
je
mov
push
mov
call
ret
jmp
nop
nop
nop
nop
nop
push
mov
test
je
cmp
je
mov
push
call
push
call
mov
push
push
push
push
call
pop
ret
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
push
mov
push
push
mov
push
call
test
jne
mov
mov
cmp
je
push
call
cmp
je
pop
pop
pop
xor
pop
ret
mov
cmp
je
cmp
je
push
cmp
push
push
mov
je
call
pop
pop
pop
pop
ret
call
cmpl
jne
mov
test
je
push
call
pop
pop
pop
mov
pop
ret
push
mov
call
test
je
mov
mov
call
jmp
push
mov
call
test
je
mov
mov
call
push
mov
call
mov
pop
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
push
mov
mov
test
je
push
call
mov
call
pop
ret
nop
nop
nop
nop
sub
push
push
push
mov
call
mov
push
call
push
call
mov
mov
push
push
push
push
call
mov
test
je
push
lea
push
push
mov
push
push
lea
movl
movl
mov
mov
call
mov
push
push
push
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
push
lea
push
push
push
call
lea
push
push
movl
call
mov
add
test
je
push
call
add
cmp
je
push
push
push
push
call
add
test
je
lea
push
push
push
push
call
add
test
je
movl
push
call
add
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
lea
push
push
xor
call
mov
add
test
je
push
call
add
cmp
je
push
call
mov
add
test
je
push
push
push
push
call
mov
push
push
push
push
call
add
test
je
push
push
push
push
call
mov
add
test
je
push
call
mov
add
test
je
mov
mov
push
push
push
push
mov
mov
call
add
mov
mov
pop
pop
pop
pop
add
ret
push
call
add
mov
pop
pop
pop
pop
add
ret
nop
nop
nop
push
mov
test
je
mov
push
call
push
call
add
pop
ret
nop
nop
nop
push
push
push
push
push
mov
lea
push
push
push
push
movl
call
inc
add
je
mov
mov
lea
push
push
push
push
call
add
test
jne
cmp
je
lea
push
push
push
push
call
mov
add
test
jne
pop
pop
pop
xor
pop
pop
ret
mov
pop
pop
pop
pop
pop
ret
nop
nop
nop
mov
push
dec
push
cmp
push
ja
mov
mov
mov
jmp
push
push
push
call
add
test
jne
push
push
call
mov
add
test
je
push
push
push
push
call
add
test
jne
push
push
call
add
mov
pop
pop
pop
ret
mov
mov
mov
push
push
push
call
add
pop
pop
pop
ret
xor
pop
pop
pop
ret
fcmovnbe
and
fcmovnbe
and
and
fcmovnbe
and
or
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
call
mov
ret
nop
nop
push
push
push
mov
xor
push
cmp
je
mov
mov
mov
push
push
call
add
test
je
mov
add
push
push
call
add
test
jne
cmpw
je
lea
push
push
push
call
add
test
je
mov
test
je
mov
inc
add
cmp
jge
push
push
call
lea
add
cmpw
jne
mov
pop
pop
mov
movw
pop
pop
ret
pop
pop
pop
or
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
mov
push
push
mov
movw
xor
mov
test
je
and
push
lea
push
push
call
add
test
jle
push
push
push
call
add
lea
push
push
push
call
add
inc
add
cmp
jl
pop
pop
pop
pop
add
ret
nop
nop
mov
mov
push
push
movw
mov
push
push
call
add
ret
push
mov
push
movw
call
mov
mov
lea
push
push
push
push
call
add
pop
ret
nop
nop
nop
nop
mov
sub
lea
push
push
push
call
mov
mov
lea
push
push
mov
push
push
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
mov
lea
lea
push
mov
push
mov
push
push
push
movl
call
add
test
jne
add
ret
mov
lea
push
push
call
add
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
xor
mov
mov
mov
mov
lea
movl
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
push
call
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
xor
test
jne
pop
xor
pop
ret
push
mov
lea
push
mov
push
lea
push
push
push
push
push
call
test
jne
mov
cmp
je
cmp
jne
mov
test
jbe
push
call
mov
add
test
je
lea
lea
push
push
push
push
push
push
call
test
je
push
call
add
xor
push
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
mov
lea
lea
add
rep
mov
push
lea
push
mov
call
mov
mov
shl
add
mov
lea
in
leave
inc
add
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
add
mov
mov
test
mov
jne
push
push
push
push
call
add
mov
push
call
mov
jmp
mov
or
xor
repnz
not
push
call
mov
mov
or
xor
add
mov
repnz
not
sub
mov
mov
mov
shr
rep
mov
mov
and
rep
test
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
xor
movb
mov
test
je
push
lea
push
push
call
add
lea
mov
push
call
test
lea
jne
mov
push
call
add
mov
push
call
pop
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
push
call
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
mov
push
push
lea
push
mov
call
mov
mov
mov
push
push
push
push
push
call
add
test
je
mov
test
je
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
mov
call
pop
pop
xor
pop
add
ret
mov
push
xor
test
mov
jle
xor
mov
lea
push
push
call
add
test
jle
mov
inc
add
cmp
jl
mov
push
mov
call
mov
lea
mov
rep
mov
cmp
jl
mov
inc
xor
cmp
jne
cmp
je
push
call
add
mov
mov
mov
mov
jmp
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
mov
mov
mov
jmp
mov
cmp
jg
cmp
jle
mov
mov
shl
add
sub
push
lea
push
call
mov
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
add
shl
mov
mov
shr
rep
mov
mov
and
rep
mov
sub
push
mov
shl
add
lea
push
call
mov
push
call
mov
mov
mov
mov
out
flds
push
add
inc
or
push
lea
push
push
mov
call
mov
mov
mov
shl
shl
add
add
shl
shl
sub
lea
push
push
lea
mov
shl
add
lea
push
call
mov
add
add
mov
xor
mov
rep
mov
xor
shl
add
pop
shl
mov
mov
add
mov
lea
add
rep
mov
dec
test
jne
mov
push
call
pop
pop
mov
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
mov
push
lea
push
mov
call
mov
xor
movb
mov
test
jle
xor
mov
mov
test
je
cmpb
je
mov
push
push
push
call
add
mov
mov
add
push
push
push
call
add
mov
inc
add
cmp
jl
mov
push
call
pop
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
lea
push
push
push
push
push
push
push
call
add
lea
push
push
call
mov
add
test
je
movb
mov
inc
mov
add
mov
je
mov
mov
push
push
call
add
test
jne
mov
jmp
inc
push
push
call
add
test
jne
mov
cmpb
je
push
push
call
add
test
jne
mov
push
push
call
add
mov
dec
cmp
jne
mov
lea
sub
push
push
push
call
add
test
je
jmp
lea
or
xor
repnz
mov
not
dec
push
lea
push
push
call
add
test
je
mov
mov
add
test
jne
pop
pop
pop
xor
pop
add
ret
pop
pop
pop
mov
pop
add
ret
nop
nop
sub
push
mov
push
push
lea
push
push
movl
mov
call
push
push
mov
call
lea
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
mov
push
neg
sbb
mov
not
and
push
call
mov
mov
xor
lea
test
mov
rep
je
mov
push
push
call
mov
add
test
jne
push
push
call
add
mov
movl
movb
mov
test
je
push
lea
push
push
call
add
lea
push
mov
call
mov
lea
lea
push
ljmp
or
mov
lea
push
call
mov
mov
shl
add
lea
cmp
inc
add
add
add
movsl
mov
lea
test
jne
mov
cmp
jle
mov
push
push
push
push
call
add
mov
push
call
mov
add
push
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
mov
push
mov
mov
not
test
je
mov
push
mov
call
jmp
mov
call
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
jmp
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
mov
mov
xor
shr
rep
mov
add
and
rep
mov
mov
jmp
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
jmp
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
not
test
je
mov
mov
shl
add
shl
push
push
call
pop
pop
pop
pop
add
ret
mov
shl
add
shl
push
push
mov
call
pop
pop
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
mov
movl
test
je
push
call
add
mov
movl
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
push
cmp
push
mov
je
mov
mov
xor
cmp
jne
mov
cmp
je
push
call
add
mov
mov
mov
pop
pop
pop
pop
ret
mov
cmp
jne
mov
shl
add
shl
push
call
mov
mov
mov
xor
shr
mov
add
rep
mov
and
rep
pop
mov
mov
pop
pop
pop
ret
mov
cmp
jg
mov
cmp
jle
mov
mov
shl
sub
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
pop
mov
pop
pop
pop
ret
mov
cmp
jne
mov
cltd
and
add
sar
cmp
jge
mov
jmp
cmp
jle
mov
add
cmp
jge
mov
jmp
mov
mov
mov
shl
add
shl
push
call
mov
mov
mov
mov
shl
add
mov
shl
mov
shr
rep
mov
mov
and
rep
mov
mov
sub
shl
add
mov
shl
add
lea
shl
mov
xor
shr
rep
mov
and
rep
mov
push
call
mov
mov
add
mov
mov
mov
pop
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
mov
push
mov
mov
shl
add
xor
shl
mov
shr
rep
mov
and
rep
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
xor
mov
rep
mov
push
push
push
call
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
movw
lea
add
test
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
push
mov
test
je
push
push
call
add
lea
push
push
push
push
call
add
test
je
pop
pop
xor
pop
ret
mov
push
push
push
push
call
mov
add
push
call
pop
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
push
mov
test
je
mov
push
push
call
add
jmp
mov
mov
push
push
push
push
call
lea
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
mov
movw
mov
add
test
je
push
push
push
push
call
push
push
push
call
add
add
test
jne
mov
test
je
test
mov
jne
mov
mov
xor
mov
push
push
push
rep
call
add
movw
movw
movw
test
je
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
pop
ret
push
lea
push
push
push
push
call
add
test
je
xor
pop
ret
mov
mov
mov
push
push
push
call
mov
add
push
call
mov
pop
ret
nop
nop
mov
push
mov
push
push
mov
push
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
push
push
push
call
lea
add
test
jne
mov
push
push
push
push
call
add
push
push
push
call
add
pop
pop
pop
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
test
je
mov
push
push
call
add
jmp
mov
mov
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
mov
add
movw
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
mov
test
je
mov
test
mov
jne
movl
mov
mov
xor
mov
push
push
push
rep
call
mov
add
movw
movw
movw
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
mov
push
mov
push
push
push
push
push
call
lea
add
test
mov
jne
mov
push
push
push
push
push
call
push
push
push
push
mov
call
mov
mov
and
lea
add
and
test
mov
jne
mov
push
push
push
push
push
call
add
push
push
push
push
mov
call
mov
add
and
pop
pop
pop
and
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
jmp
mov
jmp
push
push
push
mov
push
call
movl
mov
pop
ret
push
mov
call
testb
je
push
call
mov
pop
ret
jmp
push
call
pop
ret
mov
jmp
mov
call
push
push
push
lea
call
pushl
andl
pushl
pushl
pushl
call
mov
mov
mov
mov
mov
leave
ret
mov
ret
push
mov
push
push
cmpl
push
jne
push
push
xor
mov
call
call
push
push
push
mov
pushl
mov
call
test
je
call
mov
test
je
mov
mov
call
test
jne
mov
mov
call
call
jmp
pushl
mov
mov
push
call
push
call
test
pop
je
push
push
mov
call
movl
mov
call
pushl
call
mov
pop
pop
jmp
cmpl
jne
push
call
mov
call
mov
call
mov
test
je
mov
mov
call
call
push
call
call
push
push
call
jmp
cmpl
jne
push
lea
call
call
push
call
pushl
call
mov
mov
mov
push
pop
pop
leave
ret
cmpl
jne
push
push
call
test
je
push
push
call
call
push
mov
call
mov
pop
jmp
cmpl
jne
call
pushl
call
push
pop
ret
int3
jmp
int3
int3
int3
int3
push
cmp
lea
jb
sub
sub
test
cmp
jae
sub
mov
test
mov
mov
mov
push
ret
int3
push
push
push
xor
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
mov
or
jge
inc
mov
neg
neg
sbb
mov
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
dec
jne
neg
neg
sbb
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
cmpl
jne
pushl
call
pop
ret
push
push
pushl
call
add
ret
pushl
call
neg
sbb
pop
neg
dec
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
or
jne
mov
mov
xor
div
mov
div
mov
xor
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
xchg
mull
add
jb
cmp
ja
jb
cmp
jbe
sub
sbb
sub
sbb
neg
neg
sbb
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
or
jne
mov
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
jmp
mov
test
jne
cmp
jle
decl
mov
cmp
mov
mov
jne
push
call
test
pop
mov
jne
xor
jmp
andl
mov
push
push
mov
call
incl
pop
pop
jmp
test
jne
mov
test
je
mov
push
lea
cmp
jb
mov
test
je
call
mov
sub
jmp
push
call
andl
pop
pop
push
pop
ret
push
mov
push
mov
push
mov
push
mov
test
jne
cmpl
jmp
cmp
je
cmp
jne
mov
test
je
push
push
push
call
test
je
push
push
push
call
test
jne
xor
jmp
push
push
push
call
cmp
mov
jne
test
jne
push
push
push
call
test
je
cmp
jne
push
push
push
call
test
jne
and
cmpl
je
mov
test
je
push
push
push
call
mov
mov
pop
pop
pop
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
push
push
mov
push
mov
mov
mov
lea
push
ret
int3
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
add
inc
shll
jmp
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
hlt
decl
jo
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
mov
inc
add
sahf
stc
dec
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
add
mov
jmp
mov
add
jmp
mov
jmp
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
add
decl
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
add
add
in
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
add
dec
shll
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
push
call
ret
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
add
jmp
mov
add
jmp
mov
add
jmp
add
jmp
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
and
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
push
call
pop
ret
mov
jmp
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
lea
jmp
lea
jmp
mov
jmp
int3
int3
int3
mov
push
call
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
jmp
add
push
shll
jmp
int3
int3
lea
jmp
mov
jmp
push
push
mov
push
call
lea
xor
mov
movl
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
lea
push
mov
lea
push
push
push
push
push
push
push
push
movl
call
test
jne
mov
test
je
mov
test
jne
movl
jmp
movl
mov
push
push
push
lea
push
push
push
push
push
push
movl
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
test
mov
jne
call
lea
mov
push
push
push
push
push
push
push
push
push
movl
call
xor
pop
mov
mov
add
ret
cmp
jne
mov
test
jne
call
push
push
push
push
push
push
push
push
mov
push
call
xor
pop
mov
mov
add
ret
lea
call
push
push
lea
movl
call
mov
push
push
push
call
push
lea
call
mov
push
push
push
push
push
call
add
cmp
jne
call
push
push
push
push
push
push
push
push
mov
push
call
lea
movl
call
xor
pop
mov
mov
add
ret
mov
mov
pop
mov
add
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
mov
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
push
mov
push
push
mov
push
push
mov
push
call
mov
mov
test
jne
mov
call
cmp
je
mov
call
cmp
jne
mov
push
mov
call
pop
pop
mov
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
mov
mov
push
push
call
mov
call
mov
neg
sbb
and
add
push
push
mov
call
mov
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
movl
test
jne
movl
mov
mov
push
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
sub
push
push
mov
push
push
lea
push
call
mov
add
test
je
xor
push
mov
lea
mov
push
mov
push
mov
call
mov
mov
push
lea
push
push
push
push
call
mov
add
test
je
mov
test
je
mov
jmp
xor
test
mov
push
setne
mov
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
push
movl
call
add
mov
test
movb
je
mov
push
mov
call
jmp
xor
mov
movb
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
je
mov
test
je
mov
push
call
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
call
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
ret
nop
nop
nop
nop
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
mov
push
push
call
ret
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
jmp
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
jmp
nop
nop
nop
nop
nop
nop
mov
add
nop
nop
nop
nop
nop
push
call
pop
ret
nop
nop
nop
nop
mov
add
idiv
call
nop
push
push
mov
push
mov
push
push
mov
mov
call
push
movl
movl
call
mov
add
mov
mov
pop
add
ret
nop
push
push
mov
call
mov
push
push
call
mov
add
mov
call
mov
push
call
add
test
je
push
call
add
call
mov
mov
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
movl
mov
mov
mov
mov
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
call
push
lea
call
mov
movl
test
jne
mov
mov
mov
mov
mov
mov
add
ret
mov
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
mov
push
call
mov
mov
mov
mov
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
movl
movl
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
adc
adc
movl
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
push
call
mov
xor
mov
mov
mov
movl
mov
mov
pop
ret
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
movl
jmp
nop
nop
nop
nop
nop
mov
push
push
call
mov
rcrl
xchg
mov
add
add
fidivs
add
mov
pop
repnz
fstl
mov
jp
mov
testl
pop
fwait
add
fildl
mov
lret
mov
jns
in
in
js
cld
aam
int
mov
add
add
test
sahf
add
add
mov
in
add
push
push
lea
push
lea
push
push
push
push
push
push
call
incb
je
add
mov
repnz
enter
addb
lds
jbe
add
mov
add
scas
mov
int3
jno
ja
call
mov
push
add
add
add
insb
add
js
mov
mov
jmp
movsl
sub
pop
popl
push
lea
push
push
push
push
push
push
lea
push
call
leave
addr16
jne
cli
xchg
rcr
xchg
rcrl
xchg
fcmovu
lds
add
push
add
mov
movsb
push
add
int
nop
aad
add
sti
add
add
add
out
mov
out
shlb
add
add
lcall
push
push
push
lea
push
push
push
push
push
push
push
push
call
out
ret
mov
add
jp
jo
mov
add
mov
sbb
icebp
in
add
add
pusha
xchg
lret
jecxz
add
add
outsl
add
add
test
out
xchg
add
add
lret
add
rol
stos
in
mov
loop
push
imul
pop
push
push
lea
push
lea
push
push
push
push
call
mov
add
pop
aad
mov
add
xchg
imulb
add
xchg
add
jbe
xchg
add
add
fildl
mov
loop
add
icebp
nop
add
xchg
mov
movl
jle
stos
xlat
jmp
cmpsl
lret
add
stc
add
addb
jbe
add
lcall
call
push
push
push
push
call
nop
roll
mov
push
add
outsl
loop
jmp
add
icebp
loope
add
xchg
jp
lea
add
pop
call
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
push
add
data16
imul
movsb
jno
out
add
add
add
mov
add
add
mov
mov
mov
sub
pop
call
push
push
push
call
add
mov
call
add
cmpsb
jge
add
lret
les
xchg
popf
pop
jae
outsl
in
nop
mov
aad
add
cwtl
movsl
add
addl
roll
add
add
out
ffree
add
jp
lret
mov
loop
in
hlt
pop
jmp
push
push
push
lea
push
push
push
call
add
add
rolb
add
jbe
pop
jnp
test
add
faddl
testb
pop
lock
add
hlt
add
scas
addb
mov
jecxz
popa
lcall
add
add
add
add
jl
add
add
cmpsl
add
add
jbe
lds
add
xchg
lds
mov
test
add
jb
jp
sub
pop
ret
push
push
call
cmc
int
pop
mov
pop
mov
cli
in
add
out
into
jno
leave
pushf
mov
add
add
add
fadds
add
jmp
mov
add
stos
add
add
add
add
add
add
add
add
add
add
rcr
add
int3
int
sub
pop
mov
push
push
push
push
call
mov
add
add
add
je
add
lds
add
outsl
lds
add
add
push
add
movsb
cmpsl
fimull
fstpl
outsl
xchg
int
sarl
js
add
mov
push
mov
add
push
jno
add
nop
add
add
out
add
lcall
pop
hlt
push
push
push
push
push
call
add
mov
sti
add
add
into
cli
add
mov
add
in
add
xchg
loope
add
jns
add
aad
movsl
pop
popa
add
scas
add
lcall
pop
in
push
push
push
push
push
push
call
lods
test
add
add
add
mov
pop
mov
lahf
add
test
loopne
jb
mov
cwtl
add
data16
stc
add
fnsave
add
mov
lcall
ret
add
add
push
lea
push
push
call
add
js
add
testb
add
add
fildl
add
push
add
add
jmp
add
add
fwait
add
mov
add
gs
pop
add
fadds
add
mov
xlat
stos
add
sub
pop
add
push
push
lea
push
call
add
data16
add
js
add
scas
test
add
add
add
lcall
jns
jae
add
jbe
pop
rcrl
leave
fistps
add
imul
jne
add
pop
bnd
enter
call
lcall
pop
add
xor
adc
inc
push
push
push
call
mov
push
outsl
add
xchg
test
xchg
cld
add
add
xchg
arpl
fildl
fsts
add
movsl
jb
jle
rcll
push
add
jmp
fs
xchg
push
add
add
add
repnz
add
add
lods
add
xor
push
push
push
push
call
rolb
outsl
jge
in
add
add
mov
add
shrl
jecxz
fildl
cltd
sar
add
push
add
cli
clc
mov
aad
testb
add
add
repnz
jmp
jmp
mov
cli
push
jmp
sub
pop
add
push
push
xor
push
and
add
inc
add
sub
sub
rol
sub
sub
pop
sub
sub
add
pop
push
push
push
push
push
push
push
push
push
push
call
fnstsw
push
add
xchg
mov
ret
mov
mov
add
jo
or
lock
out
push
add
xchg
data16
add
xchg
popa
add
add
movsb
xchg
pop
xchg
add
fwait
mov
push
movsb
add
push
add
cltd
sub
pop
pushl
call
push
push
push
push
push
push
push
push
call
jl
xchg
mov
push
faddl
add
fcomps
xchg
fs
add
add
pop
in
add
add
data16
mov
fisubrl
aad
test
jnp
lahf
sar
jbe
sar
fimuls
pop
mov
push
push
push
push
push
push
push
push
push
call
add
mov
mov
add
add
data16
iret
add
xchg
mov
out
add
bound
add
cmp
mov
add
add
addl
add
mov
add
scas
imul
hlt
cmpl
add
add
push
push
push
push
call
xchg
push
jno
add
add
mov
push
test
xchg
jbe
add
clc
jp
andl
fdivrl
add
sub
pop
lea
push
push
push
push
lea
push
call
test
jmp
outsl
out
add
cmc
fwait
mov
outsl
std
mov
add
rolb
data16
stc
jl
add
rol
add
add
cld
rcrb
pushl
pushl
push
push
push
call
add
add
leave
mov
ljmp
add
add
lock
fnsave
add
add
mov
add
movl
add
add
jecxz
jne
mov
roll
ret
mov
jb
jge
jmp
add
loope
add
std
pop
add
int3
sub
jnp
add
lcall
mov
jne
push
push
push
lea
push
push
lea
push
push
push
push
call
jbe
add
data16
add
add
mov
aad
jp
add
testl
add
int
add
add
sub
pop
pushl
call
push
push
rol
push
xor
add
ror
sub
shr
pop
ror
not
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
add
add
add
add
add
icebp
add
add
add
xchg
fildl
mov
imull
jecxz
pushf
add
add
cwtl
pusha
scas
hlt
filds
add
mov
push
add
mov
mov
aam
xlat
jo
mov
lds
lcall
jne
push
push
push
push
push
push
push
lea
push
call
add
sbbb
jp
add
lea
pop
imul
stos
sbbb
add
pushf
scas
cld
lcall
loopne
in
loopne
lcall
data16
push
push
push
ror
push
push
pop
add
sub
sub
lea
xor
sub
rol
pop
ror
pop
push
push
push
push
push
push
push
call
mov
add
add
imul
lret
imull
pop
loop
iret
xchg
xchg
pop
mov
std
add
add
mov
loope
mov
in
in
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
addb
jns
adcl
lods
add
add
add
jb
jl
pop
bound
add
add
add
lds
les
roll
stc
out
add
jp
aam
add
movsb
fcmovnb
add
xorl
in
loopne
push
push
push
call
icebp
orb
out
shll
les
jmp
shl
pusha
add
pop
add
cmp
jmp
andl
popf
jbe
add
xchg
add
add
insb
repnz
jo
cwtl
imul
out
push
add
aad
push
add
les
add
lcall
rclb
push
push
push
push
push
push
push
lea
push
call
mov
add
add
loop
stc
aam
add
sahf
aam
pushf
add
pop
addb
data16
jle
jp
mov
in
mov
in
roll
add
stos
add
add
add
push
add
add
add
add
add
push
add
lcall
clc
push
push
push
push
push
lea
push
call
mov
cltd
jp
movsb
leave
imul
sahf
add
add
add
add
add
xchg
add
add
mov
std
incb
add
add
add
lret
jecxz
popf
add
add
add
add
add
add
stos
mov
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
mov
jl
fiadds
add
cmpb
leave
clc
bound
add
test
nop
lret
cli
testl
add
add
add
in
fcompl
pop
hlt
add
push
push
lea
push
lea
push
push
push
push
push
push
call
add
rolb
jle
nop
add
add
add
add
xchg
pusha
test
out
jecxz
add
cmc
add
add
jmp
add
out
add
stc
cmc
shl
add
add
jle
hlt
xlat
pusha
add
in
fadds
add
mov
add
ret
add
add
add
push
push
push
lea
push
call
hlt
add
jecxz
add
test
add
xchg
add
add
mov
add
scas
mov
add
sub
pop
mov
push
push
push
push
call
aad
add
fiaddl
pop
push
divb
xchg
add
add
mov
add
add
mov
push
add
push
add
test
add
add
add
stos
add
loop
lcall
pop
xor
push
push
push
push
push
push
push
push
lea
push
call
int3
add
push
pushf
add
add
cltd
std
lret
add
add
add
add
int3
into
add
sub
pop
add
push
push
lea
push
lea
push
push
push
call
xlat
mov
push
add
xchg
add
jmp
add
jnp
push
ja
mov
mov
jmp
jb
mov
add
xchg
add
add
call
add
push
push
push
push
lea
push
lea
push
call
mov
loope
add
mov
push
xchg
xchg
test
add
pop
fidivs
call
add
add
add
out
rcrl
repnz
add
mov
add
mov
mov
jb
add
xchg
add
sub
pop
mov
xor
push
push
lea
push
lea
push
push
push
call
jmp
add
add
roll
jns
add
in
add
add
add
js
lock
outsl
xchg
add
and
add
pop
add
push
push
push
lea
push
lea
push
call
jmp
xchg
add
test
add
mov
add
add
add
mov
rcrl
add
enter
iret
add
xchg
xchg
add
add
add
add
add
addb
add
pop
pop
je
sub
pop
pop
mov
xor
push
push
lea
push
push
push
lea
push
push
call
int3
ret
add
add
add
jge
ror
add
int
mov
cmpsl
add
xchg
cltd
pop
add
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
pop
in
call
add
add
add
mov
add
add
mov
test
mov
add
jbe
add
je
push
add
gs
add
add
add
imul
add
sar
out
in
fcomps
inc
or
adc
push
push
lea
push
call
xlat
iret
xchg
cli
lret
add
rcr
fstps
subb
xlat
add
leave
test
pop
rcrb
mov
push
pop
add
jnp
add
jmp
testl
mov
pop
out
add
mov
cmpsl
roll
xchg
xchg
outsl
int
std
add
js
cmpsl
add
enter
push
lea
push
push
lea
push
lea
push
call
jecxz
add
add
lods
addb
add
add
mov
add
jne
add
js
add
enter
mov
ja
ja
jmp
imul
std
mov
testb
test
mov
outsl
in
add
mov
add
pop
rep
push
lea
push
lea
push
push
call
add
mov
lods
outsl
add
fidivl
jmp
enter
add
call
imul
add
aad
add
roll
lea
add
add
jns
add
icebp
push
int3
add
jns
icebp
add
sub
pop
pop
mov
push
push
push
push
push
call
push
add
stos
add
push
push
lahf
mov
push
add
shr
add
mulb
xorl
aad
add
fildl
pop
in
push
push
push
push
push
push
call
mov
std
popa
add
out
enter
cwtl
xchg
add
mov
add
add
mov
hlt
add
mov
stos
add
lock
add
add
add
add
insb
add
add
add
repnz
outsl
push
fiadds
add
add
out
testl
lcall
ret
add
add
add
push
push
lea
push
call
add
add
add
pop
add
lods
push
leave
pusha
xlat
mov
pop
bound
add
cmpsb
popf
add
add
jle
mov
add
xchg
jecxz
add
add
mov
je
test
int3
addl
add
add
stos
rol
ficoms
mov
xor
push
lea
push
push
push
push
call
out
out
movl
add
add
test
fadds
jne
add
add
stos
ljmp
add
lahf
int
add
test
add
xorl
ficoms
jmp
add
lret
xchg
push
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
lock
hlt
xchg
shll
roll
add
push
add
add
add
xchg
add
push
add
xchg
add
int
add
add
ljmp
jl
roll
add
add
xchg
add
jl
add
pop
xchg
testb
mov
add
add
mov
add
adc
push
push
push
push
push
push
call
add
ret
pop
ljmp
adcl
popa
jno
xchg
push
jbe
add
lahf
add
add
jne
out
jecxz
scas
out
test
add
add
add
add
out
cltd
mov
popf
rcl
add
fistpl
add
mov
xchg
add
lcall
les
add
push
push
lea
push
push
lea
push
push
push
call
popa
add
add
add
call
leave
movsb
outsl
movsb
mov
out
mov
fstpt
add
clc
pop
add
dec
sub
jno
adc
sbb
data16
rol
pushf
mov
popf
loopne
push
push
push
push
push
push
lea
push
call
add
jns
jae
xchg
jl
ret
out
jle
stc
mov
testb
pusha
mov
out
add
loope
jno
mov
add
imul
add
push
mov
add
jle
gs
in
fdivr
lcall
or
push
push
push
push
lea
push
push
push
push
call
mov
loop
add
add
add
out
rolb
add
stc
add
add
mov
call
mov
jae
add
mov
pop
add
pushf
add
add
add
int3
ret
add
scas
in
stc
add
sub
pop
add
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
stos
cltd
stos
push
mov
add
mov
add
mov
jo
add
add
leave
hlt
std
push
add
add
int
clc
in
add
pop
add
mov
aam
fdivr
jecxz
add
enter
add
faddl
add
pop
xchg
add
sahf
lock
sti
push
sub
pop
add
push
lea
push
push
push
push
lea
push
call
add
stos
rolb
mov
jecxz
jbe
sti
add
mov
add
mov
xchg
jbe
push
push
fucomip
add
mov
add
add
lea
add
add
rolb
mov
rol
add
lcall
rorl
stos
push
xor
push
or
inc
add
sub
sub
xor
ror
xor
add
pop
lea
not
pop
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
add
pop
add
mov
add
fadds
xchg
push
push
test
add
add
mov
add
loopne
lcall
jne
push
push
push
lea
push
call
add
popf
mov
add
rolb
add
mov
push
bound
fldenv
mov
add
push
pushf
mov
scas
mov
lock
call
push
push
push
push
push
push
push
push
call
roll
add
add
add
fiadds
add
add
sti
jl
add
jae
cwtl
add
sarb
pop
add
add
mov
mov
sub
pop
push
push
push
lea
lea
sub
push
xor
add
shr
shr
dec
ror
sub
xor
dec
lea
sub
pop
add
pop
push
push
push
call
add
hlt
add
jbe
incb
pop
cmc
cmpsb
out
add
xchg
jb
mov
mov
in
pop
add
test
mov
add
xchg
sub
pop
push
push
push
push
lea
push
push
call
lods
sahf
add
cmpsl
mov
stos
mov
pusha
mov
add
add
add
mov
pop
data16
lods
loope
add
std
mov
imul
fiadds
jge
add
lcall
add
mov
or
add
add
outsl
push
js
cltd
jae
in
add
mov
movsb
push
mov
mov
add
jmp
add
ja
xchg
pop
add
jecxz
add
in
bound
add
push
lret
arpl
mov
test
movsb
scas
shrl
out
add
jae
roll
add
cld
add
sub
pop
call
mov
push
rol
rol
pop
push
push
dec
not
ror
pop
push
push
lea
push
push
push
push
call
ja
add
fs
add
in
add
fcoms
jle
jb
cltd
int3
testl
lcall
ret
add
mov
scas
faddl
arpl
lock
add
loopne
mov
int
add
jmp
je
jbe
add
out
add
jecxz
add
in
pop
mov
push
sub
sub
shl
pop
add
add
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
push
push
jbe
mov
bound
testl
add
add
mov
jns
mov
xorl
add
mov
add
add
jl
mov
xlat
add
add
sub
pop
add
push
xor
pop
mov
push
push
push
push
push
push
push
push
push
push
push
call
nop
mov
add
in
add
add
mov
mov
fcompl
outsl
orb
jge
xchg
add
js
loopne
out
enter
push
add
faddl
xor
push
push
call
int
add
add
imul
push
add
jo
mov
sub
pushf
push
stos
add
add
jmp
add
test
fldl
add
xchg
mov
push
add
fwait
mov
mov
pop
cmpsl
sub
pop
add
push
lea
push
push
push
push
push
push
lea
push
call
add
ja
test
mov
add
clc
fwait
add
push
cli
xchg
jle
mov
or
mov
rcl
add
push
scas
mov
mov
add
add
je
nop
add
cld
xchg
jmp
out
mov
add
cmpsb
add
sub
pop
add
push
push
push
push
push
call
in
movsl
add
lea
push
mov
xchg
aam
add
add
add
outsl
add
fdivs
test
out
loope
add
leave
add
sub
pop
push
push
lea
add
inc
pop
mov
push
push
push
lea
push
push
push
push
lea
push
push
push
push
call
int
fiaddl
lods
add
in
addl
push
mov
jb
add
add
add
push
add
mov
mov
add
std
lcall
add
gs
add
xchg
xchg
scas
push
int3
sub
pop
xor
push
push
push
call
cld
cmc
add
mov
loopne
pop
pop
cmpsb
mov
icebp
rcl
add
mov
add
popf
mov
add
rolb
clc
add
push
push
enter
add
mov
xchg
add
add
lcall
les
add
push
push
lea
push
push
push
lea
push
call
add
lea
pushf
jne
add
clc
add
jge
add
stc
lret
push
imul
mov
in
add
ja
add
lock
lea
xchg
shr
push
add
out
add
add
std
arpl
add
cmpsb
mov
jae
sub
pop
add
push
not
xor
not
pop
pop
mov
xor
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
add
jns
jecxz
add
add
add
add
lock
add
int
add
push
clc
mov
mov
xchg
push
loope
add
add
add
add
lcall
movsb
push
rol
pop
mov
push
push
push
push
lea
push
push
lea
push
push
call
add
negb
into
add
filds
add
shll
push
cwtl
add
rcrl
add
add
add
add
add
lret
mov
icebp
aad
cltd
imul
and
push
push
push
call
add
add
add
add
loopne
add
xchg
add
jae
mov
add
add
xchg
loopne
cmc
add
mull
pusha
add
add
add
hlt
jle
into
jae
add
add
iret
add
pop
jns
sub
pop
add
push
lea
ror
shr
pop
or
je
mov
xor
push
push
push
push
push
push
lea
push
push
push
call
lds
push
add
add
add
in
add
aad
add
pop
loopne
addr16
add
add
addr16
pop
mov
xor
push
not
xor
shr
inc
pop
add
add
push
push
call
cwtl
mov
aam
mov
add
jl
add
push
aam
mov
data16
add
add
fnstenv
iret
add
lea
icebp
loope
in
clc
pop
push
push
shl
sub
pop
mov
push
push
push
push
push
call
cli
add
add
jo
call
add
add
mov
pop
push
add
ljmp
add
add
jle
in
lock
xor
push
push
call
pop
sahf
add
je
add
mov
in
jp
add
add
cmpsl
iret
add
add
in
push
add
add
add
pop
out
je
cmc
add
add
popl
push
int3
nop
cmc
sti
mov
jl
add
add
les
add
push
dec
pop
add
push
push
lea
push
push
push
push
push
push
call
add
insb
int3
data16
xlat
enter
add
add
mov
cld
cld
cmpb
stos
add
mov
add
pop
xchg
loopne
mov
loopne
push
add
les
nop
add
add
add
jge
add
xchg
out
add
in
loopne
pop
push
shr
pop
rep
mov
xor
push
push
push
push
push
push
push
push
call
stc
xchg
mov
add
add
jmp
testl
add
add
mov
pop
cmc
jbe
add
mov
pop
add
cmc
jb
in
jmp
fstl
loopne
mov
lcall
leave
je
push
lea
lea
add
pop
mov
push
push
lea
push
push
push
push
lea
push
push
call
add
rolb
add
ret
enter
push
pop
add
aad
pusha
xchg
add
hlt
jle
movsb
movb
add
mov
add
out
push
add
nop
aad
outsl
or
std
mov
scas
add
scas
add
cld
add
push
in
loopne
lcall
sub
dec
inc
pop
add
push
ror
sub
not
sub
pop
rep
push
xor
pop
pop
push
push
sub
not
push
sub
add
inc
sub
pop
inc
shr
pop
push
shl
dec
lea
sub
pop
pop
mov
push
pop
mov
push
shl
xor
shl
pop
mov
push
lea
push
push
push
push
push
push
call
imul
fstl
out
add
add
out
mov
mov
xchg
jecxz
jecxz
xchg
stos
add
add
xchg
fnstsw
add
ja
aam
fcoml
shl
out
loop
add
xchg
add
stc
mov
xchg
flds
scas
add
popa
add
ljmp
push
in
in
jmp
push
shr
rol
pop
push
mov
push
push
push
push
push
push
push
lea
push
lea
push
call
mov
add
aam
add
jbe
sarb
add
add
scas
add
add
pushf
popf
mov
mov
ret
loope
ja
in
xchg
outsl
add
add
add
add
add
add
cld
jl
add
out
cli
xchg
mov
add
mov
add
incb
add
fcompl
cld
push
push
shr
dec
pop
push
push
push
push
push
call
fld
jl
rolb
add
int
mov
fsubrp
mov
pop
add
xchg
jbe
scas
fadds
scas
add
ret
add
fistl
fwait
enter
add
add
pop
xchg
add
xchg
add
iret
push
fadds
add
out
push
loopne
add
pop
add
in
lock
lcall
push
push
push
push
push
push
push
lea
push
call
push
out
loop
xchg
xlat
pop
xchg
ficomps
xchg
in
nop
add
pusha
jno
inc
lcall
lcall
inc
cld
push
rol
add
ror
pop
pop
pop
push
push
push
push
push
push
push
call
mov
add
add
add
fcomps
add
rolb
mov
stc
add
pop
add
mov
out
add
scas
addb
mov
jne
testl
add
test
aad
xchg
mov
in
lcall
push
sub
pop
pop
push
inc
sub
pop
leave
push
add
not
sub
pop
ret
push
shr
add
pop
push
push
xor
pop
mov
add
push
add
not
dec
not
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
mov
jp
mov
mov
add
rclb
mov
test
bound
jno
popf
lahf
jge
movsb
add
add
mov
popa
popf
rolb
add
xchg
add
add
add
lcall
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
addr16
xchg
lds
add
into
rcrb
mov
add
popa
je
faddp
ljmp
jp
mov
mov
ljmp
out
xchg
mov
fadds
mov
in
loopne
push
push
lea
push
push
call
mov
add
add
rcr
lds
jl
add
mov
imul
pop
divl
mov
in
mov
cmpsl
sub
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
cmc
loop
add
add
add
xorl
push
mov
pop
add
add
fidivs
add
jno
data16
in
xchg
add
add
add
jb
lods
rolb
add
lret
add
in
fdivr
lcall
inc
cld
add
add
push
xor
add
pop
addl
push
rol
pop
test
je
mov
push
push
push
lea
push
push
call
add
add
movsb
mov
pop
cmc
add
pop
mov
xchg
add
jge
jb
into
add
in
pop
pop
push
ror
sub
pop
pop
push
push
lea
push
lea
push
push
push
push
push
call
leave
xchg
out
add
add
add
movb
js
pushf
jge
add
add
imul
faddl
mov
cmpsl
add
add
cltd
mov
pusha
rol
add
mov
cmc
add
add
push
mov
add
xchg
stos
fcmove
orb
in
loopne
pop
pop
push
lea
add
pop
leave
push
lea
push
call
movl
cmc
mov
cmpsl
stos
rorb
add
jbe
add
repnz
mov
pop
add
adcb
mov
add
add
hlt
jecxz
add
mov
test
add
add
rcrb
mov
sahf
add
add
jo
test
lds
fiaddl
add
add
push
lea
push
push
push
push
push
push
push
push
call
add
add
gs
add
add
add
cmpsb
mov
add
iret
enter
loop
in
add
call
icebp
mov
jl
ret
loopne
add
aam
pop
mov
add
add
add
add
lcall
push
sub
sub
shl
pop
mov
push
shr
ror
pop
add
push
sub
add
add
pop
push
push
sub
inc
pop
push
push
push
dec
pop
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
ljmp
xchg
pop
iret
popf
add
mov
jp
jecxz
addl
gs
sti
add
jl
add
ficomps
add
sub
pop
testl
push
not
rol
sub
not
pop
addl
push
sub
shr
rol
pop
push
push
push
push
call
pusha
test
shlb
ret
add
add
add
call
add
add
add
add
add
loopne
nop
add
add
pop
add
add
xlat
pop
jns
fdivr
scas
mov
lret
mov
jnp
leavew
add
lcall
push
sti
call
repz
pop
mov
push
dec
xor
pop
pushl
push
push
not
sub
shr
pop
push
push
not
ror
lea
pop
call
cmpl
jne
push
push
push
push
push
push
push
push
push
call
les
loop
push
mov
add
cmpsb
jp
push
in
add
add
xchg
mov
pop
mov
hlt
pushf
add
push
jne
out
add
mov
jnp
mov
add
fdivr
lcall
push
lea
push
push
push
push
call
add
scas
add
mov
jnp
rcrl
movsl
jp
test
ljmp
enter
out
push
mov
add
insb
in
in
in
pop
pop
push
ror
rol
xor
pop
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
cwtl
flds
jnp
cltd
test
jle
add
add
push
mov
mov
jns
add
cltd
add
add
lret
aad
lock
push
leave
movsb
add
mov
mov
int3
push
aad
pop
add
push
pop
fcmovne
sub
pop
pop
push
push
push
lea
push
call
fists
lods
add
test
add
int3
add
jle
mov
jb
fists
add
mov
imull
add
lret
add
je
out
xlat
aad
lea
sti
fiadds
out
add
add
add
outsl
mov
mov
lcall
push
push
push
call
pop
std
push
add
xchg
mov
mov
pop
mov
mov
add
in
ljmp
lcall
cli
add
mov
xchg
mov
ja
loope
fcmovne
add
xlat
add
add
ret
movl
mov
bound
mov
add
fistpl
add
mov
lcall
add
push
push
lea
push
lea
push
call
ret
mov
fstp
add
jne
mov
cli
jmp
shrl
add
jne
pop
push
jbe
add
add
roll
testl
mov
add
in
add
push
push
lea
push
push
lea
push
push
push
call
mov
add
sahf
mov
lds
add
jmp
lret
mov
int
mov
mov
mov
add
add
pop
xchg
pop
mov
jb
ret
add
cld
test
pop
mov
mov
mov
xchg
add
jecxz
add
bound
add
add
add
out
add
in
in
lcall
push
lea
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
test
add
push
add
mov
pop
je
imul
add
xchg
add
add
push
addr16
add
ja
add
hlt
addb
roll
repnz
cltd
add
mov
pop
lock
add
add
push
push
inc
xor
dec
pop
push
push
dec
sub
pop
movl
push
add
shl
sub
pop
push
push
lea
shl
xor
pop
call
push
push
ror
pop
call
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
sahf
add
add
mov
add
mov
clc
cmpsl
mov
mov
add
add
add
add
test
add
jmp
add
subl
push
push
call
add
movsl
push
bound
add
mov
mov
int
jecxz
cmc
arpl
add
add
arpl
add
add
jbe
mov
rolb
arpl
fadds
mov
lcall
jge
add
test
call
xchg
sbb
arpl
push
lea
push
push
push
lea
push
push
call
cli
test
lret
add
add
add
mov
mov
xchg
into
add
andb
add
jnp
mov
add
add
add
clc
mov
add
jb
add
lcall
pop
push
rol
pop
pop
push
sub
pop
pop
leave
push
inc
xor
pop
ret
push
push
push
lea
push
push
call
pop
xorb
add
add
loopne
sti
push
jnp
jnp
loop
pop
xchg
popa
add
jnp
nop
add
sbb
scas
add
sub
pop
mov
add
push
push
lea
push
push
push
lea
push
push
call
cmpsl
add
xchg
add
filds
lods
insb
jns
add
mov
in
fsub
cmpsb
add
lods
add
add
xorl
push
mov
cld
cmc
fildl
add
roll
in
in
push
push
push
inc
pop
push
push
add
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
add
mov
pop
xchg
add
mov
mov
stos
mov
add
add
js
push
js
pusha
aad
add
add
sub
pop
mov
push
dec
shl
pop
lea
sub
push
rol
ror
pop
mov
push
push
push
push
push
lea
push
call
add
add
fimull
aam
gs
push
add
into
add
add
push
add
add
je
xchg
add
lahf
je
add
add
movl
cmpsl
jns
mov
add
cmpsl
mov
mov
movsl
add
mov
in
call
shr
push
push
push
push
push
push
call
add
mov
fxam
fadd
add
add
lret
add
pusha
jmp
in
gs
int
lcall
incb
mov
add
xchg
mov
idiv
out
add
mov
data16
push
xchg
add
add
iret
mov
imul
cli
add
pop
mov
mov
push
lea
pop
add
push
rol
pop
add
mov
push
add
pop
mov
cmp
jne
push
sub
ror
sub
pop
cmp
jne
mov
push
add
xor
pop
movl
push
lea
push
lea
push
call
add
add
imul
cld
add
add
add
cmpl
mov
add
pop
mov
jmp
add
pop
mov
jge
je
loope
shll
pop
iret
pop
scas
add
mov
in
hlt
lcall
imul
pushf
push
lea
push
push
call
jp
add
out
loope
add
add
xchg
out
add
add
add
loop
add
loope
pop
int
out
scas
add
je
js
lahf
xchg
cld
add
add
add
shll
push
add
shrl
jge
int
std
push
mov
in
in
lcall
inc
cld
push
add
pop
mov
push
sub
pop
sub
jne
push
push
push
call
mov
outsl
mov
add
rcll
add
stc
add
incb
add
jge
push
std
mov
imul
mov
rolb
cmpsb
add
fisttpll
sbbb
out
add
add
add
mov
add
sub
pop
mov
push
sub
pop
movl
push
xor
shr
pop
jmp
mov
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
lods
add
mov
add
add
repnz
add
jbe
call
jge
vpmaxsw
lock
add
add
test
rcr
rcr
add
mov
sahf
insb
add
add
xchg
loop
popa
add
jbe
pop
je
incb
jbe
sub
pop
mov
push
push
push
push
lea
push
call
add
lcall
add
scas
add
add
test
mov
je
lret
add
arpl
mov
mov
add
cmpsl
mov
push
jecxz
add
add
testb
add
sub
pop
cmp
jne
push
push
push
push
push
push
push
push
push
call
cmpsb
add
movsb
out
add
incb
mov
mov
add
mov
movsl
jb
add
scas
repnz
addr16
add
push
add
add
mov
mov
add
add
lcall
inc
adc
add
add
add
pop
jmp
mov
push
add
xor
rol
pop
cmpw
jne
push
push
lea
push
push
push
push
call
arpl
add
add
pop
jb
add
mov
push
add
fiadds
cmpsb
add
push
mov
add
add
add
lcall
inc
adc
pop
ficompl
push
push
push
push
push
lea
push
call
cli
add
xchg
jno
ret
ja
enter
mov
push
clc
add
pop
ret
mov
jl
mov
movsl
out
add
add
cltd
push
add
clc
add
test
cmpsb
cmpsl
add
xchg
add
add
cmc
imul
repnz
out
add
sub
pop
movl
push
inc
lea
pop
jmp
push
sub
pop
pushl
push
lea
push
push
push
push
push
call
add
xchg
shll
add
stc
insb
add
add
lret
lahf
gs
jb
pop
add
add
repnz
add
lcall
push
lea
dec
sub
pop
mov
push
inc
rol
sub
pop
mov
mov
push
push
sub
sub
sub
dec
push
or
inc
add
add
add
ror
inc
sub
ror
inc
rol
pop
sub
lea
rol
pop
push
push
call
pop
add
add
lea
xchg
add
int
movb
mov
lods
add
xchg
add
scas
add
add
add
scas
test
lcall
push
lea
push
push
push
push
push
push
push
push
push
call
xchg
roll
add
mov
mov
mov
jno
mov
mov
jle
add
mov
ficoms
pop
cld
mov
xchg
jp
cmpl
icebp
add
jp
ljmp
ljmp
outsl
mov
add
ljmp
fnstcw
fdivrs
add
in
fcomps
arpl
add
push
push
push
lea
push
call
test
pop
xlat
mov
add
rolb
mov
rcrl
lds
add
popa
mov
nop
add
cmpsb
mov
mov
add
add
mov
test
add
js
int3
fldz
ret
les
add
push
push
dec
sub
sub
push
xor
add
ror
lea
xor
shr
sub
sub
ror
inc
pop
shl
shr
pop
push
xor
pop
push
call
push
push
push
push
lea
push
push
push
call
jl
popf
pusha
in
add
mov
popa
jb
sti
fildll
ljmp
add
add
add
pop
xchg
add
cmpsb
mov
add
out
add
loope
add
cwtl
add
push
fisttpll
int
aam
add
add
add
mov
add
fs
add
in
lcall
js
int3
fldz
ret
std
or
add
or
out
rol
push
push
pop
add
inc
inc
sub
ror
ror
rol
pop
add
pop
push
sub
add
lea
pop
push
push
dec
inc
dec
pop
call
push
pop
cmpl
je
push
push
add
push
or
inc
add
add
sub
add
pop
dec
shl
pop
push
inc
pop
push
call
push
inc
shl
pop
cmpl
je
push
push
sub
shl
push
or
not
add
add
sub
sub
not
xor
not
pop
add
sub
sub
pop
push
shl
add
pop
push
call
push
sub
pop
cmpl
je
push
push
sub
shr
lea
push
or
inc
add
lea
sub
pop
add
pop
push
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
test
pop
jnp
add
push
push
add
add
jae
scas
add
mov
add
add
add
aad
in
add
shlb
add
fdivs
in
fdivr
lcall
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
loope
mov
add
fnstsw
pop
js
mov
mov
jbe
cmc
clc
cltd
jl
xchg
xchg
enter
add
jl
add
add
jae
out
sub
pop
call
push
rol
pop
cmpl
je
push
push
inc
ror
add
push
or
not
add
ror
dec
xor
sub
rol
rol
pop
add
pop
push
inc
add
xor
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
cmc
mov
push
add
sahf
leave
add
mov
add
cmpsl
push
push
fildl
jbe
pusha
loopne
add
roll
popf
add
jl
add
out
add
cmpsl
in
add
andl
mov
out
std
sub
pop
call
push
push
push
lea
push
push
push
lea
push
call
add
subl
add
mov
add
add
add
add
testl
jb
add
mov
movl
fsubs
add
xchg
out
add
add
mov
add
push
lea
add
cltd
add
sub
pop
cmpl
je
push
push
shl
not
push
and
add
add
dec
shr
sub
xor
pop
shl
pop
push
push
push
lea
push
lea
push
call
rorl
gs
mov
mov
add
xchg
add
out
rcl
outsl
add
add
add
cmpsl
add
insb
add
mov
mov
add
jb
mov
cmpl
in
pop
push
push
shl
pop
call
cmpl
je
push
push
shr
sub
push
and
add
not
dec
sub
pop
add
pop
push
lea
push
push
lea
push
push
call
add
add
js
out
add
sti
jb
js
scas
add
cltd
add
in
add
clc
je
loopne
in
imul
pop
in
add
mov
lock
imul
lea
nop
add
add
out
ret
add
sub
pop
push
call
push
push
push
push
push
push
push
call
add
movsl
add
addl
movsb
jl
add
pop
jp
cltd
xchg
mov
mov
cmpsl
add
outsl
adc
add
add
mov
cli
add
add
js
mov
jl
stos
mov
jns
add
testl
in
lcall
cmp
rol
je
push
push
sub
sub
shr
push
push
pop
add
add
sub
dec
sub
sub
sub
pop
xor
inc
inc
pop
push
push
push
lea
push
lea
push
call
pop
add
mov
pop
lret
mov
xchg
stos
arpl
sti
add
add
add
mov
add
xlat
addb
mov
pushf
push
bound
gs
into
add
jp
add
stos
add
lcall
call
push
push
push
call
insb
add
add
je
lods
add
add
add
add
add
push
mov
add
scas
add
add
mov
mov
add
add
cmpsl
loopne
add
add
add
outsl
jo
cwtl
add
add
add
in
hlt
pop
cmpl
je
push
push
shl
shl
sub
push
push
pop
add
rol
sub
xor
shl
pop
add
add
shl
sub
pop
push
push
push
push
push
push
push
push
push
call
mov
pop
into
mov
add
add
add
mov
add
add
mov
imul
out
loop
add
mulb
push
push
push
lea
push
call
jmp
add
mov
jle
add
jecxz
ficompl
jmp
jo
add
fbstp
add
fwait
nop
bound
add
xchg
imul
add
leave
scas
addb
lret
add
lds
add
iret
addl
sub
pop
call
push
dec
pop
cmpl
je
push
push
push
push
pop
add
dec
rol
sub
shr
not
sub
pop
add
not
add
pop
push
push
push
push
push
lea
push
call
mov
add
add
cltd
add
pop
mov
lods
push
add
std
add
jb
add
jb
fs
out
lds
mov
in
fisubl
int3
push
add
testl
test
fs
fidivl
add
add
sub
pop
push
call
push
add
pop
cmpl
je
push
push
lea
push
xor
add
shl
sub
shr
xor
shl
pop
sub
pop
push
push
push
call
push
andb
add
push
cli
jl
add
pushf
fcomp
add
sarb
out
lcall
cwtl
roll
add
popf
push
popf
jnp
add
mov
stos
add
add
in
mov
mov
add
shl
mov
fadds
pop
add
mov
lcall
call
push
push
lea
push
lea
push
push
call
add
add
add
popf
stos
loopne
cmpsl
add
roll
add
outsl
add
add
leave
clc
sub
add
pushf
add
jle
out
jle
add
xchg
lcall
popf
push
add
push
jnp
std
add
out
add
sub
pop
cmpl
jne
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
add
add
jno
faddl
lahf
xchg
add
in
mov
jne
stos
call
add
push
jecxz
stos
add
lcall
addl
jne
outsl
bound
sub
pop
mov
push
xor
dec
pop
movl
jmp
push
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
shll
xchg
push
ljmp
add
add
push
pop
mov
add
mov
jp
mov
mov
std
mov
add
testb
add
shlb
mov
xchg
mov
lcall
rclb
jae
pop
push
sub
pop
pop
push
push
push
call
aam
add
add
test
pusha
mov
loop
les
std
fwait
mov
jb
add
ficomps
push
test
add
push
add
add
push
add
shl
lods
imul
loopne
shlb
jb
fsubr
add
push
sub
inc
shr
dec
pop
pop
push
inc
dec
pop
leave
ret
push
sub
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
out
loop
rolb
mov
pop
jb
add
add
add
ret
aam
add
fisubrs
add
add
jo
iret
lds
iret
fcompp
lret
mov
xchg
cmpsb
test
clc
add
push
mov
shr
sub
pop
mov
add
push
xor
lea
inc
pop
cmpl
jne
push
push
push
sub
add
add
shr
sub
shl
add
shl
ror
pop
dec
pop
push
push
push
push
push
push
push
push
call
addl
fistl
les
imul
cwtl
les
int
push
add
in
data16
mov
int
pop
sub
pop
pushl
push
ror
pop
call
push
push
push
push
push
push
push
call
shl
lcall
addr16
rcrl
enter
mov
push
add
xchg
add
add
add
add
into
pop
out
xchg
lret
pushf
add
add
flds
xchg
call
call
push
lea
push
push
push
lea
push
push
push
push
call
lret
add
add
rcrb
scas
jle
jl
add
test
scas
add
sti
add
cmc
push
lahf
add
fwait
les
jecxz
add
add
add
out
hlt
imul
aad
add
add
push
xchg
push
add
add
sub
pop
jmp
push
add
add
pop
cmpl
je
push
inc
add
shl
pop
cmpl
jne
mov
push
dec
pop
call
push
push
inc
inc
shr
push
xor
add
add
shr
sub
inc
pop
add
add
shl
pop
push
shl
pop
pushl
call
push
push
push
push
push
push
lea
push
push
push
call
lds
mov
test
pop
mov
add
jnp
mov
enter
lds
insb
mov
mov
mov
add
add
push
imul
pop
lea
push
push
not
lea
pop
push
push
inc
pop
push
push
push
ror
pop
call
push
push
push
call
mov
add
add
add
jmp
push
mov
scas
popl
xchg
add
fwait
add
add
add
lods
jge
pop
sub
pop
ret
push
push
push
push
push
lea
push
push
call
add
push
mov
add
mov
add
add
jp
add
xchg
add
bound
cld
cltd
mov
add
jge
nop
mov
in
in
jmp
push
shr
add
lea
pop
cmpl
jne
push
push
rol
sub
push
sub
add
sub
lea
inc
pop
not
pop
push
push
push
push
push
push
call
bound
add
mov
jge
add
gs
add
imul
add
mov
pop
mov
fsubrs
pop
pushl
push
push
push
push
lea
push
push
push
push
lea
push
call
enter
movb
mov
pop
js
add
test
add
mov
call
add
mov
add
mov
add
add
add
ficoml
in
fcompl
in
add
push
push
push
push
push
push
call
stc
add
mov
in
add
add
jnp
add
xchg
rolb
xchg
add
push
shlb
add
rol
ror
ficompl
call
jl
add
sti
not
add
add
add
call
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
push
orb
cmpl
neg
in
add
mov
fildl
fildl
ja
push
fs
push
cltd
add
add
test
test
add
add
add
test
rclb
inc
dec
mov
push
push
push
push
lea
push
push
push
push
call
pop
roll
loope
add
add
mov
test
lods
mov
push
add
add
add
add
ljmp
xchg
mov
add
add
add
in
fdivr
lcall
fistps
add
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
insb
lods
test
push
add
add
add
nop
mov
add
movsl
mov
popf
add
loopne
jns
add
jo
gs
sub
pop
cmpl
jne
mov
push
not
add
ror
pop
mov
push
push
push
push
push
push
push
call
push
add
add
add
mov
jmp
shl
iret
outsl
nop
jl
mov
add
add
les
add
shl
arpl
add
loope
cld
sub
pop
push
push
pop
jmp
push
push
rol
inc
push
and
add
inc
sub
sub
shr
add
dec
not
pop
dec
pop
push
add
pop
pushl
push
inc
shr
pop
call
push
push
push
push
push
push
push
push
call
add
add
add
add
xchg
add
loope
jle
arpl
push
fiadds
add
cld
rclb
push
lock
not
add
popl
add
add
add
mov
add
lock
add
add
mov
pop
in
fwait
add
ret
mov
lcall
shrb
mov
push
sub
rol
sub
push
push
pop
add
dec
add
sub
shr
rol
inc
xor
pop
not
not
pop
push
not
inc
not
rol
pop
pushl
push
dec
pop
call
push
sub
lea
pop
call
push
push
push
or
not
add
sub
sub
xor
pop
sub
xor
pop
push
xor
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
push
push
call
push
cwtl
pop
idiv
cmc
addr16
shr
push
add
add
fildl
add
mov
push
cmpsl
nop
add
jp
jl
add
mov
jp
sub
pop
call
push
lea
push
push
push
push
push
lea
push
call
jne
push
add
add
scas
mov
xchg
xchg
cltd
fsubl
add
add
rcll
outsl
mov
lods
jmp
jne
add
mov
add
add
in
js
push
add
xchg
jp
stc
add
mov
add
sub
pop
call
push
push
not
not
push
sub
add
sub
shl
sub
ror
pop
dec
not
pop
push
shl
pop
pushl
call
push
push
push
push
push
push
push
call
add
je
stc
add
nop
ljmp
lods
xchg
lret
add
add
leave
add
lock
cwtl
lea
add
xchg
fs
fcomp
push
pop
jns
push
imul
scas
push
roll
stos
gs
add
sti
jne
pop
add
sub
pop
lea
push
push
xor
pop
call
push
push
shl
add
inc
push
or
not
add
sub
ror
pop
rol
rol
shl
pop
push
push
push
push
lea
push
lea
push
push
push
push
push
call
jno
stos
fscale
xchg
addr16
pusha
add
add
jle
mov
jp
in
aad
pop
mov
add
sahf
ja
add
sub
pop
pushl
call
push
lea
push
push
call
mov
add
add
mov
add
add
add
add
add
pushf
add
mov
in
in
mov
data16
add
out
outsl
enter
lahf
testl
pop
call
push
push
sub
not
shr
push
push
pop
add
not
add
sub
sub
add
pop
add
pop
push
dec
inc
shr
pop
pushl
push
shl
ror
sub
pop
call
push
add
add
add
dec
pop
call
push
push
add
push
xor
add
shl
sub
pop
add
pop
push
lea
sub
pop
pushl
push
not
shr
pop
call
call
push
lea
add
pop
lea
push
push
xor
rol
push
sub
add
rol
sub
rol
not
pop
ror
dec
pop
push
dec
dec
pop
pushl
push
push
push
push
push
call
add
add
xchg
add
add
faddp
xchg
test
add
xchg
mov
jbe
pop
add
add
add
add
iret
add
gs
jge
addb
fadds
xchg
loope
pop
mov
imul
add
sbb
add
shl
pop
call
push
push
rol
inc
sub
push
and
add
xor
dec
dec
shr
sub
lea
pop
not
add
shl
pop
push
push
push
call
mov
add
jb
pop
add
lds
add
add
add
add
je
push
fldcw
in
mov
pop
fcomps
sub
pop
pushl
push
lea
sub
pop
call
push
push
push
push
call
pushf
add
add
add
push
cmpsb
int3
add
add
mov
add
add
nop
lret
ret
add
add
int3
mov
aad
push
call
pop
add
data16
add
add
mov
add
push
jl
jns
add
sub
pop
call
push
ror
inc
pop
mov
push
push
sub
push
sub
add
not
dec
xor
sub
xor
rol
add
pop
not
pop
push
push
push
call
stos
leave
add
xchg
out
test
xchg
mov
mov
lock
jp
add
push
add
add
jo
add
add
add
add
jp
add
pushl
push
add
pop
call
push
push
push
push
push
call
aam
add
data16
push
pop
mov
ja
add
cmpsb
xchg
add
sahf
add
add
add
add
mov
stc
nop
cmp
pusha
add
mov
add
pop
into
add
in
lock
pushl
call
push
push
add
push
or
inc
add
add
inc
sub
add
rol
pop
add
ror
pop
push
lea
push
push
push
lea
push
call
add
add
xchg
add
add
add
pop
push
mov
pop
add
xchg
mov
xchg
add
add
sub
pop
pushl
push
push
lea
push
lea
push
call
push
jo
in
add
faddl
add
popa
rolb
stos
cmc
add
add
add
add
pop
loopne
fildl
test
stos
mov
add
scas
push
add
lods
fisttpl
xchg
testl
add
add
sub
pop
call
push
push
inc
ror
not
push
or
not
add
add
ror
ror
shr
sub
xor
sub
dec
pop
add
dec
add
pop
push
push
lea
push
push
pop
add
add
sub
ror
sub
shl
pop
xor
pop
push
push
call
cmp
add
add
testl
ja
scas
xchg
add
test
rcl
push
add
lcall
xlat
scas
iret
outsl
add
sub
pop
call
push
push
push
push
pop
add
add
sub
sub
pop
sub
rol
pop
push
shr
pop
pushl
call
push
not
inc
dec
pop
mov
push
ror
dec
pop
lea
lea
push
shl
add
ror
pop
push
push
lea
rol
not
pop
push
push
push
push
push
push
push
push
call
mov
fbld
add
out
add
add
out
in
mov
add
mov
push
cmc
add
outsl
xchg
mov
arpl
clc
add
add
je
int
aad
arpl
shl
mov
add
fisubrl
test
lcall
add
push
cmp
push
push
call
add
mov
add
stos
push
add
add
test
hlt
add
push
add
shlb
add
ljmp
mov
fnstsw
fildl
add
fwait
lods
not
lret
add
add
int3
arpl
jo
icebp
add
add
add
clc
add
push
push
push
dec
dec
add
pop
push
push
push
lea
push
push
push
lea
push
push
call
jne
fists
bound
cld
add
lret
clc
mov
testb
movsl
jmp
nop
mov
add
shll
mov
add
push
mov
cltd
add
add
add
lcall
add
jne
push
shl
shl
sub
ror
pop
push
push
not
sub
pop
call
push
push
shr
push
and
add
sub
sub
not
ror
shr
shl
pop
lea
pop
push
lea
push
push
push
push
push
lea
push
call
add
aam
add
repnz
xchg
pop
test
jge
lahf
add
jbe
mov
mov
in
add
popf
add
jle
in
in
pushl
push
lea
rol
xor
pop
call
push
dec
pop
call
push
sub
dec
pop
mov
push
sub
sub
dec
add
pop
pop
dec
jne
push
push
push
push
call
add
andb
addl
mov
add
add
cld
loopne
add
testb
add
repnz
add
add
add
mov
lds
popl
sub
add
push
push
lea
push
push
push
push
call
jnp
cltd
add
push
add
mov
loopne
add
scas
add
jb
add
add
ret
add
popf
clc
lcall
scas
xchg
add
gs
mov
jno
push
add
leave
mov
loop
call
out
lcall
arpl
xchg
xchg
int
xchg
in
add
mov
sub
pop
call
push
push
add
rol
push
sub
add
shl
sub
ror
add
pop
pop
push
not
sub
pop
pushl
call
push
pop
push
call
push
push
lea
push
call
lahf
add
movsl
loopne
xchg
lcall
stos
outsl
gs
add
add
add
out
add
pop
xchg
clc
add
rcr
add
movsb
add
pusha
mov
movsb
addb
add
mov
loopne
mov
mov
hlt
lcall
add
add
push
push
lea
push
push
lea
push
call
add
scas
add
add
shrl
add
fsubrs
xchg
aam
in
add
into
add
int
add
fcom
jl
mov
jbe
insb
add
shll
fwait
add
add
fistpll
ret
add
cwtl
mov
in
in
lcall
pushf
and
ljmp
lods
mov
das
fdivl
add
not
sub
sub
rol
sub
inc
add
ror
sub
pop
sub
add
pop
push
add
ror
xor
pop
pushl
push
push
push
push
push
push
push
push
push
call
add
in
add
int3
aad
xchg
add
les
xchg
add
cli
vmovd
add
fcomi
add
xchg
xchg
add
sbb
stc
add
ljmp
add
mov
add
sahf
push
add
mov
movsb
add
add
test
add
add
xchg
sub
pop
call
push
lea
push
call
in
lea
jns
imul
mov
add
jo
jnp
add
cli
sarl
incb
pop
add
add
cmpsb
jge
add
add
add
add
add
mov
pop
push
call
push
push
inc
shl
push
or
not
add
ror
inc
sub
xor
dec
add
rol
pop
add
xor
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
loopne
add
add
add
mov
jl
add
sti
scas
mov
add
scas
add
imul
into
add
push
mov
add
shrb
add
add
mov
pop
add
jge
add
pushf
pop
scas
mov
add
std
sub
pop
pushl
push
rol
pop
call
push
shl
xor
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
call
xchg
mov
add
add
add
rolb
add
mov
cmpsl
pop
add
add
add
test
fwait
jbe
cmpsl
cmpsb
out
add
add
push
add
mov
push
add
add
sub
pop
mov
push
push
push
push
push
call
add
sbbb
cmpsb
js
add
je
add
ja
lret
data16
add
out
pop
cmpsl
js
lret
add
add
add
mov
add
aad
popf
iret
jmp
movl
add
jmp
fadds
lods
add
add
add
cld
lcall
pushf
and
ljmp
cmc
lock
add
xor
push
and
add
xor
sub
sub
shl
pop
not
add
shl
pop
push
push
push
lea
push
push
push
push
push
push
call
fdivrp
jle
mov
loope
faddl
add
add
ja
bound
js
add
loope
nop
in
add
push
xchg
push
add
add
arpl
lcall
jne
push
push
push
push
push
push
lea
push
push
call
add
xorb
add
add
cli
stos
add
scas
add
std
in
add
add
add
add
add
add
fisttpll
call
lea
push
add
shr
pop
push
push
push
push
call
lea
ja
loopne
ljmp
jbe
frstor
fs
data16
pushf
jno
ja
add
shl
movsl
cmpsl
jo
push
pop
test
add
add
add
push
shll
lods
pop
mov
addb
nop
add
lcall
add
inc
and
push
lea
push
push
lea
push
call
jmp
addl
add
add
insb
popl
imul
data16
add
add
add
push
popa
mov
add
add
add
mov
jmp
movsl
add
add
add
mov
mov
addl
add
shrb
stc
movsl
ret
in
push
pushl
push
push
sub
sub
inc
push
push
pop
add
sub
sub
lea
rol
inc
pop
xor
pop
push
push
lea
push
push
call
call
sti
push
add
xchg
lea
ja
jmp
add
add
add
divl
fsts
hlt
add
add
aad
push
mov
mov
mov
loop
xchg
sarl
add
jae
lods
add
fcom
pop
out
add
lcall
push
push
push
push
push
push
lea
push
push
call
add
add
add
cltd
add
add
rcrb
cltd
add
loope
mov
fldlg2
filds
arpl
add
mov
addl
xchg
loop
mov
add
iret
loopne
add
add
add
popa
test
lcall
shrb
mov
in
push
push
push
pop
add
lea
rol
inc
add
sub
inc
pop
shl
inc
pop
push
push
push
lea
push
push
push
call
add
add
add
movb
mov
hlt
lds
jne
add
add
mov
sti
lea
xchg
ja
cmpsb
sub
pop
pushl
call
push
add
sub
add
pop
push
push
push
lea
push
push
push
push
push
push
push
call
cmpsb
mov
add
add
fs
jbe
add
add
fistpll
push
add
add
lods
data16
lods
mov
rolb
in
add
add
add
add
add
and
in
fdivr
lcall
shrb
out
lea
dec
push
sub
add
shl
ror
sub
add
xor
xor
pop
add
pop
push
pop
pushl
push
dec
pop
call
call
push
lea
add
pop
jmp
push
push
push
lea
push
call
add
je
test
jge
popf
aam
lods
add
andb
cmc
jecxz
cmpsl
jae
nop
lods
lock
xchg
add
add
popa
add
into
add
add
pop
scas
add
xchg
add
pushl
push
ror
sub
shl
pop
mov
jmp
push
push
xor
rol
push
or
inc
add
lea
add
sub
sub
sub
add
pop
rol
shl
shl
pop
push
push
push
push
push
call
xchg
cmc
add
add
add
movsl
lret
mov
push
lods
cli
pop
add
outsl
add
jp
addl
xchg
xchg
mul
enter
add
icebp
loopne
cmpsl
add
mov
add
add
add
lea
add
add
jp
loope
fldl
add
lcall
jne
push
lea
push
push
lea
push
push
push
push
push
push
call
add
into
mov
add
mov
add
add
imul
jne
add
jge
in
add
fldl
lock
add
push
push
lea
push
call
mov
add
mov
add
rolb
xlat
mov
scas
add
add
andb
lcall
nop
jecxz
pop
add
push
idivl
clc
add
add
add
cwtl
lcall
add
clc
add
add
in
hlt
pop
call
push
push
shl
push
sub
add
add
sub
ror
sub
pop
xor
add
shr
pop
push
inc
ror
sub
pop
pushl
push
pop
call
push
shl
add
ror
pop
push
call
push
push
push
push
call
push
mov
add
je
jns
add
push
scas
js
cltd
aam
xchg
add
aad
add
add
cmpsb
lahf
mov
push
into
aam
jl
lret
out
mov
add
add
add
add
cld
add
push
add
repnz
add
xchg
stos
add
add
les
add
add
add
repnz
pop
leave
push
dec
lea
inc
pop
add
push
lea
push
push
push
call
addr16
jns
pop
mov
add
mov
pop
add
lret
push
ja
adcl
pop
iret
add
cld
push
add
mov
jns
mov
add
incb
out
mov
imul
popfw
stc
mov
add
mov
lcall
pop
push
shr
xor
pop
pop
push
lea
push
lea
push
push
push
call
out
mov
add
mov
add
js
mov
adcl
push
xchg
shlb
add
lods
popl
add
jl
pop
mov
mov
add
add
xchg
imul
mov
lcall
push
push
push
push
call
add
add
shrl
add
gs
fs
add
jge
add
xchg
xchg
add
ja
int3
push
roll
fidivl
les
rolb
insb
add
test
fstpl
xchg
lds
add
add
pushf
pop
std
rolb
mov
rcl
sub
pop
leave
push
push
push
push
push
push
call
pop
mov
xchg
jnp
arpl
leave
add
add
add
jecxz
add
pop
cwtl
add
pop
out
popl
lret
add
les
push
call
add
icebp
testb
pushf
mov
jmp
push
scas
rcll
jbe
add
add
leave
add
pop
lea
jl
popf
lock
fsub
add
add
pop
push
addb
test
mov
xchg
test
add
pop
ret
leave
push
push
lea
push
call
addb
add
aam
lock
add
add
hlt
leave
ror
fstpl
mov
add
add
add
arpl
add
add
ficompl
popa
jge
add
pop
add
mov
add
mov
jge
add
mov
jne
gs
int3
pop
add
add
clc
push
mov
in
hlt
lcall
or
push
lea
shl
inc
pop
push
push
push
push
push
push
lea
push
push
push
call
add
add
popl
outsl
add
nop
add
add
mov
cltd
add
add
test
leave
mov
into
out
popf
in
negl
add
add
push
add
add
leave
ja
jno
gs
push
add
ftst
add
lds
in
loopne
mov
push
lea
push
push
push
lea
push
push
lea
push
call
iret
add
add
add
incb
pop
lcall
lcall
add
add
movsb
mov
push
out
add
lret
mov
add
fstpl
into
add
outsl
lock
pop
cmpl
jne
push
push
lea
push
push
push
call
add
add
add
jge
scas
movsl
xchg
add
lret
repnz
xchg
add
add
add
les
add
icebp
andl
lret
add
and
add
mov
add
outsl
push
sti
cmpsb
in
imul
jbe
push
add
in
add
lcall
inc
and
push
not
add
pop
jmp
push
push
push
push
push
call
in
add
add
mov
pop
add
fidivs
fs
add
int
xchg
faddl
add
add
incb
add
shlb
add
outsl
add
xchg
jo
add
pop
mov
and
push
sub
add
xor
pop
xor
push
ror
xor
sub
add
pop
xor
push
push
push
lea
push
push
push
call
faddl
add
add
mov
add
jbe
add
loop
mov
pop
add
pop
mov
add
add
std
push
add
add
pop
add
out
jmp
sarb
push
add
lock
add
testb
add
add
pushf
add
sub
pop
add
push
push
lea
push
push
push
lea
push
call
mov
push
mov
add
movsb
add
add
aam
in
jl
mov
int
clc
jecxz
in
sub
pop
xor
push
sub
not
pop
dec
sub
push
push
lea
push
push
push
push
push
push
push
call
add
mov
xchg
mov
sahf
sahf
add
movsb
add
add
mov
cltd
jl
add
mov
enter
out
push
stos
scas
cld
popa
add
push
lock
mov
mov
js
add
jmp
push
push
lea
push
push
lea
push
push
push
call
add
push
xlat
xchg
add
jle
repnz
mov
add
pop
add
xchg
cli
xchg
add
add
nop
mov
add
test
add
add
scas
fs
xchg
les
out
out
add
add
roll
cld
add
shl
add
lcall
add
add
push
lea
inc
pop
pushl
push
push
push
lea
push
push
push
call
mov
add
jb
add
jp
mov
add
add
std
into
add
add
scas
cmpsb
roll
in
call
pop
sub
push
lea
push
call
mov
jecxz
mov
pushf
pop
int3
mov
jle
xchg
add
add
mov
mov
jmp
fwait
ljmp
add
push
std
addl
jge
add
jle
mov
add
fistps
add
add
push
mov
add
rcr
in
movb
lods
leave
xchg
lcall
cmp
and
call
push
push
lea
push
push
push
push
lea
push
call
in
leave
add
add
mov
sti
add
mov
scas
aam
push
push
add
add
sahf
add
sti
add
add
movl
add
lcall
enter
lea
xor
pop
lea
sub
push
add
lea
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
push
mov
add
add
add
add
push
add
mov
cli
mov
push
add
addl
mov
add
sub
pop
shr
add
push
push
push
lea
push
call
pop
add
repnz
imul
add
enter
les
add
ret
add
add
add
fwait
jle
add
add
xchg
ljmp
in
lock
sub
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
sahf
cli
add
pop
add
mov
add
lea
fs
add
jl
add
add
jo
mov
movb
in
popa
fdiv
enter
lahf
in
movl
pop
push
shr
xor
pop
shr
push
lea
dec
pop
and
push
shl
pop
sub
push
shl
shr
pop
cmp
jne
push
push
push
push
push
push
push
push
call
lret
jnp
nop
clc
add
xchg
add
add
fnstenv
leave
add
cmpsl
lahf
add
jnp
jae
cltd
sarl
lods
popf
ja
add
add
cltd
push
add
add
leave
push
sub
ror
lea
pop
ret
push
rol
pop
push
push
push
lea
push
push
call
in
add
mov
js
fxch
add
movsb
icebp
ljmp
add
add
xchg
add
into
cltd
std
pop
arpl
neg
add
test
data16
not
in
sahf
push
add
lret
je
mov
sub
pop
mov
push
inc
inc
pop
add
push
push
call
loop
sahf
add
mov
out
pop
jecxz
add
xchg
add
add
push
add
movsl
mov
add
lahf
add
add
mov
mov
add
add
add
add
mov
jge
pop
cmpsl
jl
jno
in
clc
pop
push
push
push
call
xchg
repnz
imul
add
filds
aad
jp
jmp
cmpsb
add
mov
roll
out
add
pop
add
test
into
movl
aad
lret
pop
add
out
in
ja
add
add
fninit
add
add
in
pusha
add
in
clc
lcall
push
push
xor
add
pop
push
push
lea
push
push
push
push
push
call
add
add
stc
cmpsb
subb
mov
popf
cli
add
add
push
mov
add
add
sti
add
xchg
mov
loopne
add
add
loop
push
movsb
movb
fiadds
add
mov
add
fnsave
out
in
call
pop
mov
lea
push
inc
sub
pop
sub
push
push
push
push
push
call
add
xchg
add
out
xchg
out
jecxz
xchg
add
fs
roll
stos
ljmp
add
out
jl
add
add
data16
add
pop
pusha
mov
js
add
jnp
push
add
add
add
jge
mov
jo
lods
add
in
pop
mov
shr
push
push
push
push
push
lea
push
call
push
add
add
arpl
add
jecxz
jne
add
add
insb
addl
jo
mov
mov
add
lcall
fimull
add
iret
lcall
pop
or
stc
pop
mov
push
shl
inc
shl
inc
pop
add
xor
push
rol
pop
mov
push
lea
push
push
push
call
add
loop
add
push
push
out
pushf
add
sahf
add
jl
int
fisubl
in
add
leave
fs
pop
pop
add
fs
add
add
imul
ficomps
mov
add
loopne
push
pop
rol
push
inc
sub
dec
pop
rol
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
push
add
add
lret
add
add
add
int
shrl
add
sub
pop
xor
inc
push
lea
push
push
call
add
frstor
add
add
add
add
ljmp
mov
lahf
mov
pushf
test
int3
faddl
in
clc
out
add
cmpsb
add
movsl
jge
add
lcall
cmp
jne
push
push
push
push
lea
push
push
push
call
jmp
add
lret
add
imul
cmpl
loopne
int3
jo
jno
fcmovb
add
fiadds
add
addr16
mov
add
add
add
push
call
in
lcall
inc
pop
ss
cmp
je
push
lea
push
lea
push
push
lea
push
push
push
call
add
add
add
add
ljmp
movsl
add
mull
nop
js
push
pop
in
add
cld
add
test
add
add
leave
mov
lds
add
into
add
add
add
push
add
jle
mov
jo
push
sub
pop
add
push
lea
push
push
call
ljmp
out
roll
mov
add
add
movsb
xchg
add
repnz
jp
sti
add
mov
add
hlt
add
add
add
add
add
add
add
insb
add
bound
hlt
lret
add
idivl
add
xchg
add
lcall
jnp
add
test
pushl
rclb
pop
pop
push
push
call
add
add
std
outsl
outsl
cmpsb
push
add
add
mov
add
add
xchg
lds
add
add
xchg
xchg
mov
in
add
mov
push
add
mov
rolb
enter
jmp
mov
xchg
add
sub
pop
pop
push
push
lea
push
lea
push
call
push
add
fstpt
out
pop
add
cmpsb
mov
pop
add
add
fldt
stc
add
arpl
add
push
xchg
add
push
push
jns
jl
jge
lds
in
lock
lcall
push
push
push
push
lea
push
push
lea
push
call
lods
fwait
imul
add
je
add
insb
mov
push
add
test
jmp
add
lahf
add
fucompp
add
add
add
add
int3
cwtl
iret
jcxz
lods
jge
pushf
mov
add
in
test
add
mov
add
add
lcall
pop
push
push
push
push
push
call
mov
jno
push
lods
fdivrp
rorb
bound
cltd
data16
les
ror
add
add
push
add
add
push
nop
mov
jecxz
add
push
add
pop
cmpsl
add
ljmp
ret
add
add
imul
in
in
pop
leave
push
add
not
dec
pop
ret
push
add
sub
pop
mov
add
push
shr
pop
push
push
xor
not
pop
push
add
push
shr
shr
sub
pop
mov
push
push
call
pop
lds
add
shl
add
bound
mov
imul
mov
mov
scas
cwtl
mov
add
add
add
ffreep
fldl
call
mov
add
ljmp
pop
testw
push
shr
xor
shl
sub
pop
pop
push
lea
push
lea
push
push
push
call
push
movsb
add
js
mov
popa
push
xchg
loop
lock
pop
out
rclb
mov
add
add
add
jno
adc
jns
add
mov
push
pop
push
push
rol
not
shr
pop
call
push
push
push
lea
push
push
push
push
call
jae
lret
xchg
add
fwait
in
mov
mov
add
add
mov
out
std
add
add
ror
lea
add
sub
pop
xor
push
pop
pop
push
lea
push
lea
push
call
outsl
stos
add
mov
add
test
mov
mov
into
mov
cli
mov
push
add
push
add
pop
mov
sub
pop
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
add
fisubl
xchg
add
rorb
xorl
add
mov
add
outsl
loope
add
lods
sahf
rolb
add
add
add
in
sub
pop
pop
pop
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
testl
xchg
add
stos
scas
jecxz
pusha
add
enter
add
mov
fldl
fs
mov
xchg
loopne
call
mov
imul
fcomps
leave
push
not
pop
ret
push
push
push
lea
push
lea
push
push
push
push
call
lahf
add
pop
les
push
lods
popf
add
addb
add
mov
add
push
into
mov
add
add
mov
add
popf
add
push
add
fwait
mov
add
test
stc
test
jbe
lahf
add
add
in
push
add
pop
add
push
push
push
push
push
push
push
push
push
push
call
add
mov
loopne
add
cwtl
add
enter
add
jno
push
stos
add
pop
add
mov
aad
pop
add
mov
sub
pop
push
push
not
sub
pop
push
push
ror
pop
push
mov
push
rol
add
sub
sub
pop
push
push
not
add
add
pop
pop
push
lea
push
push
lea
push
push
push
lea
push
call
xchg
jae
mov
push
add
movsb
subl
lcall
nop
cmpsl
jge
add
ja
testl
mov
jl
add
jmp
in
in
lea
push
push
push
push
push
push
push
call
imul
add
add
add
imul
add
mov
mov
push
out
pusha
enter
ljmp
jl
in
add
jo
fadds
sub
pop
sub
push
shl
inc
not
inc
pop
mov
push
pop
shr
add
push
add
pop
mov
push
dec
sub
sub
xor
pop
add
pushl
push
sub
lea
ror
pop
popl
push
push
push
push
push
push
push
push
call
mov
jnp
add
mov
ret
shrb
add
cwtl
jmp
jne
add
vminss
call
add
mov
rcl
jns
jmp
mov
js
in
mov
add
mov
lcall
jnp
add
push
push
lea
push
push
push
push
push
push
lea
push
call
mov
mov
jnp
mov
mov
add
push
int
pop
xchg
add
add
add
jl
hlt
lods
xchg
sub
pop
xor
push
push
push
lea
push
lea
push
call
fdivl
stc
add
add
push
add
faddl
mov
mov
add
add
add
add
jne
add
add
popa
aam
jns
add
mov
add
in
pop
lea
mov
push
add
pop
add
push
push
push
lea
push
call
jne
add
ljmp
add
testl
faddl
test
push
add
mov
add
jmp
jmp
lods
sti
ljmp
xor
push
sub
pop
rol
push
lea
add
pop
nop
push
add
rol
add
pop
nop
push
lea
add
sub
pop
xor
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
and
jo
xchg
xchg
jno
add
roll
mov
imul
mov
notl
pop
add
mov
add
je
add
add
add
add
add
lcall
push
push
push
push
call
jb
jp
add
add
pop
cld
mov
add
ficoms
push
add
mov
add
mov
cwtl
sub
pop
nop
inc
push
sub
pop
nop
push
add
ror
pop
nop
push
not
dec
dec
add
pop
cmpb
jne
push
lea
push
push
push
call
lock
lret
add
lods
mov
jo
push
add
add
int3
add
add
mov
add
out
add
mov
in
lods
aam
ja
jns
fcoml
stos
add
jbe
pop
in
add
clc
sub
pop
add
push
inc
shl
pop
nop
push
dec
pop
nop
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
jmp
add
je
add
add
add
add
loopne
push
stc
sti
lods
test
add
ljmp
mov
jns
add
add
addl
in
mov
movsb
aad
add
popa
jl
add
fs
movsl
movsb
lods
mov
mov
pop
sub
pop
cmp
je
nop
push
push
push
push
call
aam
lret
stc
jp
cmc
add
add
push
add
jle
add
add
add
add
add
cwtl
jo
int
scas
jbe
push
std
add
in
repnz
mov
lds
adcb
sub
pop
nop
push
sub
pop
inc
push
add
pop
nop
push
lea
push
lea
push
push
push
push
push
call
add
jb
rcrb
add
bound
add
imul
mov
jle
mov
lock
mov
push
mov
add
movl
add
ret
test
mov
add
aam
add
add
lcall
cmp
jb
push
push
lea
push
lea
push
push
push
call
xchg
add
jbe
jbe
rcr
leave
std
mov
imul
add
jge
add
xlat
popf
push
mov
mov
mov
add
add
add
push
jge
roll
hlt
jns
add
add
push
call
add
pop
jmp
mov
push
dec
not
dec
pop
add
push
shr
inc
add
xor
pop
movzwl
push
sub
inc
shr
add
pop
mov
push
push
push
push
push
call
imul
add
out
fldt
lods
call
xchg
rcll
add
add
rolb
mov
add
je
test
add
add
add
repnz
add
add
add
add
cld
add
xchg
mov
add
add
in
in
pop
add
push
pop
mov
xor
push
pop
xor
shl
push
lea
push
lea
push
push
push
call
mov
pop
lods
incb
add
add
add
add
jo
int
nop
mov
cmpsb
add
pusha
pop
ljmp
in
in
lcall
dec
nop
add
lret
and
ret
inc
add
lea
pop
shl
push
add
pop
xor
push
add
sub
pop
shl
xor
push
push
push
push
call
shll
add
iret
add
add
js
xchg
enter
add
add
add
mov
add
add
jo
add
mov
add
test
loopne
les
mov
add
sti
jo
arpl
lcall
rcll
rol
pop
add
push
xor
rol
rol
xor
pop
pop
pop
push
ror
sub
pop
pop
push
push
lea
push
push
push
call
arpl
add
add
add
push
add
lods
mov
adcl
add
add
add
add
test
push
ret
in
in
lcall
leave
push
lea
push
push
push
call
mov
jae
push
pop
lock
popl
add
push
push
mov
jmp
add
jns
call
add
faddl
cld
pop
cmpsb
into
lods
add
xchg
add
add
in
lock
lcall
or
push
push
lea
dec
pop
mov
push
push
pop
push
push
not
add
inc
pop
push
push
xor
pop
push
push
shr
shr
pop
mov
push
ror
rol
add
pop
mov
push
push
push
call
add
add
lret
icebp
add
scas
lods
push
add
in
cld
int
mov
add
mov
xchg
add
in
hlt
pop
mov
push
lea
push
push
call
xchg
lods
lret
add
add
add
add
add
scas
add
jmp
mov
mov
lahf
mov
imul
mov
faddl
pop
fstl
out
jne
in
movsb
mov
loope
push
push
mov
add
iretw
add
add
sub
pop
test
je
push
ror
inc
pop
mov
push
shr
shl
dec
pop
test
je
mov
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
addl
cltd
add
add
add
stos
pop
lods
add
mov
xchg
add
add
add
je
mov
ror
add
stos
add
lret
add
scas
add
cmpb
cmc
lods
repnz
add
stos
clc
scas
mov
add
test
lcall
dec
or
inc
xor
pop
mov
inc
push
xor
ror
sub
pop
cmp
je
test
je
push
ror
pop
mov
push
lea
push
push
call
cmc
jp
fs
xchg
add
add
add
pop
add
add
jnp
shll
xchg
add
mov
add
out
push
mov
cltd
loop
rolb
mov
pop
jnp
in
mov
add
movsl
stc
add
fiadds
add
add
add
push
add
add
sub
pop
inc
push
lea
push
push
push
push
push
lea
push
push
call
add
add
leave
add
movsb
add
lret
push
out
add
call
outsl
sti
call
pop
jb
add
xchg
fwait
aam
mov
add
lods
negl
add
pop
add
loopne
lcall
rorb
test
add
push
lea
push
lea
push
push
push
push
push
push
push
call
std
divl
mov
test
mov
add
add
add
xchg
insb
insb
xchg
mov
mov
dec
add
add
add
jo
movsb
add
jnp
clc
add
lock
add
add
pop
gs
mov
shl
add
addb
add
pop
jno
sub
pop
test
jne
xor
push
rol
ror
pop
pop
pop
push
add
xor
lea
pop
pop
pop
push
push
lea
push
push
call
call
add
jle
data16
add
mov
mov
pop
add
sahf
je
add
add
push
push
push
call
scas
add
insb
push
loope
popl
jo
js
add
push
mov
cli
mov
mov
popf
add
add
imul
mov
jb
leave
ljmp
mov
je
pop
add
add
mov
jns
into
add
cmpsb
add
les
add
lcall
or
mov
push
add
inc
ror
pop
inc
cmp
jne
push
inc
add
pop
lea
push
push
lea
push
lea
push
push
push
push
push
push
push
call
popl
add
add
cmpsb
pop
insb
add
movsl
insb
movsb
add
lret
sarb
in
lods
sub
pop
mov
test
je
push
lea
push
push
push
lea
push
push
call
loope
add
add
test
jecxz
pop
int
add
push
add
mov
add
add
repnz
or
icebp
add
in
call
push
push
lea
push
push
push
push
call
mov
mov
mov
add
xchg
icebp
out
lea
mov
mov
pop
clc
add
mov
mov
in
add
add
imul
add
add
add
add
ret
mov
add
lcall
movb
loopne
test
sti
call
das
add
cltd
push
rolb
inc
lea
push
push
push
push
call
fiadds
mov
add
add
call
les
outsl
incb
push
push
rcrb
add
mov
cli
int
fxch
les
add
add
fildl
add
aad
add
add
mov
push
add
push
add
add
ljmp
call
sub
pop
mov
push
push
push
push
push
push
push
push
push
push
call
add
int3
add
mov
lret
xchg
jnp
js
add
movsl
incb
add
add
add
add
cltd
movsb
add
add
add
mov
add
insb
push
fists
pop
movsb
addr16
add
out
lods
jecxz
add
add
out
push
add
enter
add
test
je
push
dec
shr
pop
mov
add
push
rol
lea
pop
cmp
je
push
inc
pop
jmp
xor
push
not
rol
shl
not
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
jne
shr
jge
flds
add
mov
iret
fsubs
add
add
add
add
imul
add
lods
mov
mov
add
mov
in
fdivr
lcall
pop
push
push
lea
push
lea
push
push
call
add
push
mov
or
add
insb
int
add
mov
enter
mov
int3
scas
bound
iret
add
filds
test
push
add
fists
xchg
add
cwtl
add
call
rclb
popa
rol
mov
sub
pop
pop
push
lea
push
call
sti
add
cld
jb
leave
std
test
repnz
add
js
add
xorl
mov
mov
jle
add
add
add
add
clc
mov
mov
aam
add
call
pop
stc
cmpsl
add
sub
pop
leave
push
push
push
push
push
push
call
enter
nop
lret
xchg
hlt
add
loope
add
lret
subb
stos
add
add
lahf
add
jno
xchg
add
mov
mov
push
add
add
add
xchg
sahf
xchg
push
add
int
mov
shl
add
add
mov
data16
mov
in
call
push
push
call
mov
mov
mov
push
out
cld
filds
test
add
out
les
push
rcll
test
push
add
add
mull
mov
cld
sahf
scas
movsl
fcompl
clc
mov
push
add
add
fldl2t
jns
jb
mov
lea
pop
push
add
inc
pop
pop
push
push
call
jnp
aam
ja
jns
add
mov
filds
faddl
push
lret
add
add
call
stos
rolb
mov
test
add
jns
xchg
gs
push
push
add
jp
aam
add
je
add
add
mov
pop
add
add
in
clc
pop
pop
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
mov
cmpl
add
not
enter
add
add
add
mov
in
fdivr
lcall
leave
push
dec
sub
pop
ret
push
ror
ror
pop
mov
push
xor
inc
ror
pop
pop
push
push
push
lea
push
call
push
add
jbe
mov
call
in
aam
mov
sbb
pop
test
fstpl
add
add
add
ljmp
pop
add
add
lcall
push
push
lea
push
call
lods
lods
cmpsb
add
mov
add
rcl
add
add
pop
mov
mov
jns
sub
add
add
add
mov
add
rolb
lods
roll
fwait
add
mov
add
add
fisubrl
jl
add
int
in
hlt
pop
pop
pop
push
shl
sub
inc
add
pop
leave
push
shl
pop
ret
xor
cmp
xor
adc
add
adc
and
adc
sbb
cmp
xor
adc
jb
adc
cmp
mov
add
dec
sti
push
andl
push
adc
or
lcall
stc
sbb
fsubrp
mov
jae
inc
repnz
inc
js
mov
adc
dec
pop
pop
stos
sbb
movsb
mov
cmpsl
lods
dec
mov
out
test
dec
lds
pop
adc
icebp
cmp
push
stos
add
and
lret
xchg
xchg
ja
lcall
and
xor
ds
mov
pop
pop
cmpsl
jns
dec
lahf
fsubrs
and
dec
push
imul
scas
mov
daa
stc
clc
dec
or
imul
and
mov
js
popf
cmp
stos
xchg
sbb
adc
hlt
rcrl
rorb
jae
jae
sarb
jne
pop
mov
jl
popl
out
dec
mov
icebp
test
sub
pop
adc
xchg
daa
gs
sub
adc
ret
lds
add
xor
jl
inc
add
and
lcall
cmc
mov
popf
and
push
icebp
push
dec
iret
pop
mov
push
pop
adc
jne
fisubrl
in
jne
sahf
cwtl
or
inc
inc
cli
sbb
xchg
popa
mov
testb
or
imul
rcrl
sub
test
xchg
or
out
loope
imull
adc
push
call
cmpsl
clc
test
push
jb
mov
push
pusha
mov
into
mov
or
sarl
lcall
cmp
test
inc
mov
fisubrs
sbb
clc
inc
shl
push
imul
ficomps
cmpsb
mov
jo
push
push
inc
inc
xchg
xor
push
sub
std
or
pop
neg
mov
testb
add
mov
and
imul
cmpsl
lods
fistpl
lds
push
adc
fwait
jecxz
shll
frstor
sub
mov
gs
mov
xor
jle
movsl
cmpsb
push
out
in
fiadds
aam
mov
cmp
popa
je
add
movsb
pop
push
test
jo
pop
adc
xor
repz
pop
and
jge
add
sbb
lret
roll
xor
mov
outsl
dec
fs
xlat
or
push
mov
mov
cli
sub
dec
pop
je
sbb
cltd
imul
mov
outsl
lods
jbe
fists
and
adc
xchg
pop
ds
push
das
mov
or
gs
push
or
idiv
fists
mov
sti
jns
xchg
imul
test
mov
fsts
jmp
popa
js
push
fwait
data16
pop
cmp
dec
aaa
int3
sbb
sub
movsb
repz
and
sbbb
cmpsb
jmp
into
push
movsl
cmpsb
std
insl
lret
inc
jmp
inc
popf
cmp
push
and
sbb
cmpsb
dec
or
jb
nop
pop
sbb
inc
fwait
jo
frstpm(287
and
push
mov
insl
dec
jmp
push
push
ss
nop
dec
hlt
insl
lahf
mov
rcl
push
or
outsb
ljmp
push
xchg
subb
adc
sub
xchg
ds
shl
lds
fiadds
pop
xor
and
cmp
mov
jne
pop
int3
and
div
ljmp
out
out
push
add
scas
ljmp
sbb
rcll
mov
fistpl
mov
fmulp
mov
dec
add
inc
mov
push
push
xor
push
mov
fdivp
sub
pusha
or
pop
pop
push
in
testl
rcrb
push
addr16
lcall
xor
lods
call
adc
mov
cmpsb
shlb
out
fisubl
mov
les
hlt
cmp
testb
push
ffree
popa
dec
and
jmp
xchg
xor
adc
shlb
jge
jp
mov
cltd
mov
mov
int
xor
inc
into
stos
and
push
push
and
aas
mov
mov
shlb
in
fs
ficomps
dec
mov
dec
mov
fwait
sbb
ret
data16
sbb
xchg
mov
push
add
js
aad
loopne
fadd
add
loope
sbb
ret
insb
fs
sub
cmp
dec
adc
sbb
cld
fdivrl
push
adc
arpl
pop
mov
jmp
shrl
xchg
add
cwtl
pushf
enter
dec
cltd
sbb
fidivrs
je
push
in
test
rolb
mov
jae
das
sub
or
mov
mov
mov
andb
mov
popa
hlt
push
jp
pop
sti
loope
lcall
daa
add
stos
add
rolb
jb
cmp
sbb
xor
xchg
adc
cltd
jno
cmp
inc
in
xorl
cmp
negl
lret
fnstenv
cwtl
test
cmp
mov
pop
jg
std
stos
int
lret
pushf
popf
mov
dec
outsl
ja
pop
pop
sbb
pop
push
pop
test
push
push
sti
scas
add
push
std
xchg
mov
aad
popf
inc
repz
adc
je
add
les
push
cmp
por
inc
mov
loopne
fnstenv
out
sbb
loopne
ja
andb
push
cmpsb
add
sub
shrl
jg
pop
xor
imul
rclb
mov
mov
addr16
pop
jecxz
add
push
jo
or
mov
cmc
sti
ljmp
jp
lcall
cmpl
insb
loope
or
out
cmp
or
pop
cli
xchg
pop
dec
push
push
inc
sti
pop
push
in
fs
push
lret
jmp
mov
jp
sub
inc
xchg
inc
mov
bound
fstps
jge
mov
std
push
add
in
dec
jge
jle
and
lcall
pop
mov
dec
aam
dec
xchg
sub
repz
mov
mov
decl
jg
and
loop
jl
fcoml
shlb
mov
and
dec
frstor
add
fwait
sub
push
in
insl
and
fs
xchg
dec
cmp
cmp
and
in
into
xor
push
movsb
or
or
xlat
cli
xchg
cmp
incl
add
inc
sub
jecxz
enter
pop
fsubs
inc
fucom
add
xchg
loope
xchg
pop
sahf
push
scas
ljmp
mov
sti
popf
arpl
add
add
sub
dec
das
clc
ret
jecxz
jg
push
add
sbb
jns
in
int
mov
lock
cmp
mov
mov
sahf
dec
xor
out
addr16
mov
or
cmp
in
adc
es
idiv
fsts
sub
shll
stc
enter
ja
loopne
cltd
push
mov
adc
cmp
and
jg
or
inc
mov
enter
push
sbb
sub
xorl
lods
adcb
cmpsb
push
sub
pop
xlat
push
dec
sub
daa
mov
add
fsubl
sub
aam
fst
and
xchg
inc
dec
in
sub
out
jns
adc
add
push
stc
xchg
in
sbb
push
mov
fcmovnu
aaa
sub
in
mov
pop
andl
mov
popa
rolb
sub
fildl
rcl
jge
jecxz
out
xchg
add
adc
lahf
mov
or
dec
sbbl
xchg
in
loope
adc
sub
stos
lret
ret
cs
pop
lret
hlt
into
les
sbb
inc
lds
ja
sti
xchg
ds
lods
push
sar
sbb
lock
mov
jbe
cmp
or
or
cld
jbe
or
xor
and
cmp
mov
les
in
movsl
cld
pop
addl
sbb
adc
imul
sti
pop
jmp
mov
sahf
push
fsubrs
popf
xchg
xchg
pop
aas
loope
inc
movsb
dec
pop
cmp
test
push
xchg
cltd
mov
in
faddl
lret
mov
push
xchg
loope
int3
outsl
mov
jmp
sti
hlt
adc
ds
jno
repz
stos
adc
mov
add
xlat
movb
cli
aad
stc
repz
mov
popf
mov
add
inc
mov
jge
cmp
mov
dec
or
xchg
shlb
jmp
lods
sub
inc
push
mov
stc
aas
jno
in
jmp
fwait
js
mov
cmp
inc
in
out
insb
dec
insb
pusha
xchg
hlt
sub
fdivs
push
hlt
cltd
adc
add
dec
sbb
push
fisubrs
ret
push
loopne
mov
test
add
ficoms
ljmp
lea
jge
lods
dec
xchg
mov
pop
adc
addr16
mov
loope
imul
ds
mov
and
lods
xchg
or
pop
xchg
outsb
push
push
mov
stc
ljmp
cmp
arpl
stc
push
popf
cld
lods
adc
add
mov
hlt
adc
cmp
adc
shrb
in
mov
xchg
pop
jne
lds
aas
dec
xchg
les
aas
les
dec
jns
add
add
push
out
pop
outsl
xor
xor
roll
lret
lret
mov
xor
scas
sub
pop
lcall
mov
xor
mov
cmc
cltd
sub
jge
daa
and
fdivrp
dec
mov
cmp
mov
loop
pop
cltd
mov
xor
mov
repz
dec
mov
inc
int
pop
jmp
aas
xchg
lret
jge
loop
jecxz
push
fst
mov
in
or
es
mov
ss
test
std
loop
xchg
cmove
sub
xor
je
sahf
cmp
jmp
movsl
lahf
shlb
aad
bound
xchg
test
pop
sub
cltd
shrb
iret
shrb
das
movsb
push
into
pop
mov
fcmovne
cli
or
stos
cmp
add
cmp
daa
insl
ficompl
loope
lds
jp
inc
cltd
add
out
add
sbb
xchg
js
test
mov
cmpsb
or
mov
and
les
out
cmpsb
mov
sub
push
je
in
jmp
dec
in
xchg
jp
sub
push
add
loopne
loope
stos
jmp
jle
push
adc
ds
mov
push
sbb
sahf
sbb
shrb
cltd
divb
xor
inc
mov
pop
xchg
ss
sbb
ljmp
sahf
adc
jns
icebp
push
push
or
and
adc
dec
pop
dec
and
int3
pop
add
cli
mov
jno
jb
inc
dec
jo
cltd
loope
repnz
jg
shll
mov
adcl
stc
in
add
cmp
dec
sbb
jo
xchg
mov
sbb
imul
ret
inc
lahf
xchg
mov
cwtl
xchg
dec
or
rorb
leave
pusha
scas
sub
cmpsb
xlat
call
call
call
cwtl
or
pop
xlat
int
repz
fiadds
inc
or
fisttps
out
jae
shr
mov
jnp
add
dec
mov
test
jg
mov
mov
dec
push
lret
dec
xchg
mov
stc
loope
lahf
inc
fiadds
xchg
add
mov
leave
test
push
dec
xchg
inc
jne
fisubrl
cmp
divb
fwait
daa
call
insb
jecxz
or
pushf
xor
sub
adc
cltd
add
add
jmp
insl
jae
pushf
push
jae
cmp
jb
leave
or
loopne
pop
jbe
test
add
andb
lcall
jne
data16
stc
inc
repz
sbb
fisubrl
push
pusha
cmp
mov
xlat
and
iret
cmp
and
mov
mov
sbb
dec
ret
mov
mov
mov
mov
fidivl
cmpsb
adc
ja
push
es
push
adc
repz
inc
dec
flds
jns
xchg
push
leave
inc
rcrl
mov
leave
push
lret
fisubl
lods
or
loope
jg
in
es
or
sbb
mov
cmp
fnstenv
ficomps
dec
jge
add
idiv
xor
loop
daa
clc
lahf
jp
popa
mov
mov
jo
add
and
bound
aas
push
rorw
orb
ss
mov
pushl
movl
add
cltd
sbbl
aaa
lods
or
inc
cmp
test
xchg
pop
je
mov
fisubl
adc
inc
leave
xchg
adc
or
pop
add
push
fldenv
cmpsb
inc
fstpt
cli
inc
sbb
lcall
rorb
ja
mov
insb
hlt
imul
out
aaa
movlps
xchg
push
add
sahf
shrl
adcb
pop
lds
into
andb
loope
mov
mov
loopne
xor
cmpsb
stos
stc
dec
push
in
test
insb
dec
icebp
or
sub
fs
mov
sub
jno
outsl
out
jge
inc
bound
jge
into
lds
nop
lahf
ja
addr16
add
sub
pop
push
xchg
add
vcvttss2si
jae
lods
mov
mulb
fs
std
repnz
test
add
mov
jbe
pop
std
or
cmpl
xchg
cli
and
nop
orb
sbbl
lret
add
jne
mov
jg
mov
cmp
mov
shll
iret
inc
cmp
and
lods
fdivrp
mov
les
int
push
mov
addb
loop
mov
mov
daa
mov
ficoms
or
int3
out
lods
or
add
int
ja
arpl
mov
notb
xor
shr
mov
out
nop
mov
and
inc
iret
jmp
cld
outsb
loope
sub
ljmp
jno
or
pop
aam
xor
adc
ficoms
data16
cli
aad
mov
push
mov
rorb
inc
xor
gs
out
stos
adc
sar
xor
ja
stos
test
mov
pop
sub
repnz
scas
inc
andl
cs
add
mov
vpaddsw
cs
pop
jbe
cwtl
lret
aad
stc
push
das
jg
aas
push
push
insl
rorl
add
sub
or
push
sub
leave
sahf
test
xchg
pushf
jo
outsb
sti
icebp
push
jp
sbb
mov
out
and
nop
pop
mov
jp
comiss
xor
mov
data16
sub
cmp
pop
lcall
and
insb
mov
in
sbb
xchg
mov
xchg
clc
enter
fnop
dec
js
pop
nop
pop
cmc
push
leave
loope
test
es
push
push
dec
mov
int3
lea
sahf
unpckhps
xor
jne
addl
inc
inc
push
into
cmpsl
xchg
fidivs
js
fiadds
and
mov
add
sub
mov
push
and
ljmp
adc
mov
mov
test
ret
mov
inc
xchg
push
inc
push
jge
sbb
push
sbb
and
cld
cmp
outsb
outsl
push
test
push
mov
fucomi
push
test
xchg
cmp
test
cmpb
cmp
cld
mov
and
sti
mov
stos
mov
sbb
aam
sub
mov
xchg
imulb
stos
dec
notb
mov
pusha
loope
ret
aam
mov
pop
xor
cli
inc
mov
mov
loop
dec
aad
and
mov
in
adcl
in
cmc
jmp
insl
data16
mov
jl
add
mov
cwtl
lahf
dec
dec
call
nop
jg
push
andl
mov
outsb
pop
adc
jl
and
xchg
pop
add
pop
gs
loop
subb
mov
pop
mov
cmp
xor
xlat
inc
dec
mov
jmp
jge
or
cmp
in
sub
xor
push
mov
inc
mov
mov
scas
lds
hlt
ss
outsl
stos
outsl
movsl
inc
jmp
add
inc
dec
inc
mov
inc
adc
inc
lea
xor
scas
mov
sub
cmp
push
aaa
xchg
jno
jp
mov
xchg
nop
push
pop
add
mov
out
sub
mov
mov
inc
inc
outsb
loopne
xor
xchg
cmp
cmp
outsb
mov
int3
xchg
and
ds
mov
mov
push
imul
pushl
scas
sti
jmp
adc
add
dec
or
cli
mov
stc
je
jae
lret
pop
push
push
dec
cmp
and
test
fwait
cld
cltd
enter
test
and
inc
cmp
inc
jb
sbb
std
adc
sub
sbb
outsl
mov
sahf
pop
cmp
pop
xor
jmp
jns
dec
movlps
enter
inc
sub
push
push
jp
or
icebp
adc
nop
and
push
jnp
or
mov
cmpsl
mov
addr16
pop
and
ljmp
ja
jp
in
iret
push
cmpsl
jg
and
enter
add
lea
inc
sub
push
push
or
mov
movsl
adc
stos
jno
mov
movl
clc
add
adc
std
jmp
sbb
setp
sbb
stos
loopne
pop
notb
mov
repnz
rcl
push
pop
inc
jns
ss
insb
fmull
out
xchg
inc
push
pop
pop
out
xor
push
cmpsl
pop
inc
aad
push
mov
outsb
mov
jmp
push
inc
inc
and
ljmp
xchg
movsb
cmp
leave
and
push
cmp
jo
and
pop
shr
scas
inc
xchg
fildll
mov
adc
popa
mov
add
add
test
adc
test
out
push
fldt
sub
push
and
push
arpl
es
pop
lahf
jmp
sub
rcr
and
ja
mov
jne
and
push
fists
mov
aad
test
sub
pop
mov
fcoms
loop
mov
aas
outsl
push
cmp
xchg
push
lock
arpl
xor
xchg
dec
imul
loope
jmp
jnp
mov
or
jg
cmp
in
aad
nop
adc
subb
adc
xor
or
out
stos
imul
or
leave
xorb
inc
int3
leave
andl
xchg
ljmp
inc
inc
jno
mov
jecxz
jnp
popa
ret
or
dec
mov
aas
or
fcoms
sbb
flds
sbb
shl
push
sarl
fisubrs
jne
icebp
test
jb
push
leave
mov
test
xchg
xor
rcl
sbb
jg
inc
ds
idivl
mov
xchg
insb
loop
shrl
in
nop
mov
repz
sub
mov
inc
in
dec
xchg
mov
repz
notl
icebp
loopne
leave
in
addl
fwait
push
pop
push
pop
outsb
xchg
xchg
sub
add
jne
lods
xchg
ljmp
rorl
sub
push
js
shlb
sbb
pop
bound
imul
jo
cmpsl
stos
pop
lcall
xor
jb
mov
inc
out
outsb
ret
jl
add
adc
pop
out
jae
arpl
sbb
mov
add
add
insb
lea
ljmp
cmpsb
pushf
inc
mov
clc
inc
dec
loope
clc
movsb
rol
std
mov
mov
or
push
xchg
lret
in
leave
mov
repnz
repz
add
lea
xorb
jle
jp
mov
adc
pop
sbb
cmp
adc
dec
lahf
push
out
pop
push
xchg
inc
push
sub
test
or
popa
cld
sbb
dec
xor
or
sbb
jbe
sbb
scas
pop
rorb
mov
inc
mov
pusha
jns
mov
fidivrs
ja
lret
fs
push
fisubs
jg
mov
add
out
test
adc
or
jle
jno
dec
xchg
arpl
movsl
into
and
mov
aam
xchg
pop
sub
stos
mov
xor
sbb
add
dec
imul
jle
lret
stos
mov
sbb
xchg
add
clc
pusha
test
lret
jp
xchg
stos
push
mov
nop
pop
or
add
inc
inc
and
push
adc
fisubrs
sahf
jmp
xor
pop
clc
loopne
cld
js
lret
push
xor
sub
stos
xchg
dec
mov
in
rcll
sbb
sbb
call
push
mov
idivl
rcrb
jge
cmpsl
stos
sti
into
lcall
dec
iret
rolb
inc
and
scas
and
push
in
jl
ds
std
daa
push
imulb
iret
insl
jmp
lret
add
mov
sbb
cmpb
jg
insb
aad
fwait
xor
fsubrl
mov
cmp
mov
out
push
push
jnp
inc
sub
push
sub
xor
je
stos
lret
es
rep
repnz
pop
mov
stos
dec
fmull
mov
sbb
inc
sub
cld
fsubs
jmp
loope
enter
shlb
pop
jl
mov
filds
xchg
and
mov
inc
out
push
push
hlt
sahf
jg
pop
movsl
sti
push
or
push
xchg
inc
cmpsb
sub
rorl
ljmp
add
imul
stos
test
movsl
test
pop
mov
in
push
xor
ret
mov
push
dec
cmp
es
inc
imul
or
addl
mulb
sub
lahf
pop
push
mov
notb
fisttpl
adc
add
mov
add
mov
lods
jp
clc
add
add
lds
in
or
repz
inc
xchg
push
pop
jl
push
push
fstp
jecxz
add
jno
dec
or
andl
gs
bound
xchg
icebp
movsl
inc
push
mov
ljmp
data16
pmaxub
fs
movsb
push
jnp
pop
outsl
xor
xchg
mov
hlt
jae
dec
xchg
gs
push
shll
fisttps
xlat
lods
nop
ss
leave
in
pop
sub
mov
fiaddl
sbb
dec
push
add
shrl
int
mov
jge
shlb
notl
jae
adc
and
mov
mov
pusha
mov
in
sahf
add
rclb
cmp
lcall
je
push
scas
mov
add
mov
std
rolb
hlt
sub
fmull
loope
jb
jne
push
bound
sbb
push
jae
and
pusha
or
test
push
xor
es
insb
lret
in
xor
lahf
dec
push
jo
ljmp
adc
inc
ret
xlat
loope
mov
test
jle
sub
test
fisttps
scas
add
and
mov
xchg
sbb
ret
sbb
cmp
xor
sti
je
pop
imul
pop
mov
loopne
add
ljmp
out
jmp
push
icebp
sub
loopne
ds
jae
mov
pop
pop
bound
pusha
lret
pop
testl
inc
adc
ss
inc
pop
pop
icebp
pop
mov
ret
mov
fwait
adc
jg
movsl
dec
test
jl
sbb
ret
stc
addb
push
fnstsw
addb
jmp
push
popf
cltd
rorl
stos
mov
adc
imul
test
adc
pushl
idiv
xchg
fmuls
cld
xchg
sub
jne
xchg
sbb
loope
mov
lds
rcrl
ljmp
cmpsl
mov
add
push
int
mov
dec
pop
push
clc
jae
inc
or
leave
fwait
xor
repz
lods
and
sarl
xchg
inc
push
dec
imul
mov
dec
push
or
mov
dec
mov
add
and
jl
and
add
cmp
hlt
dec
mov
rclb
push
test
imul
jbe
ja
and
lret
sbb
mov
add
outsb
jbe
pushf
stos
ss
loopne
fstps
jge
xchg
inc
cmp
jno
cmp
in
sub
int3
and
mov
fwait
iret
aaa
outsb
jb
inc
icebp
test
cld
cli
fisubs
mov
scas
pop
out
mov
sub
xor
cmp
sub
cmp
xchg
push
pop
lea
jecxz
jmp
int
mov
sbb
mov
neg
pop
mov
or
movsb
mov
cmp
lods
cmp
call
jne
ljmp
scas
insl
mov
fnstenv
dec
lcall
xchg
push
xor
rcr
dec
mov
cmp
jge
lret
push
fimuls
lock
pop
add
shrl
cmp
mov
push
dec
call
loop
or
sub
mov
test
daa
adc
popa
pop
pop
mov
pop
inc
fwait
xchg
addb
mov
arpl
push
scas
rep
pop
mov
xor
and
mov
sbb
test
push
or
in
sub
rcr
sahf
and
and
idivl
js
xor
mov
dec
jp
gs
test
mov
bound
enter
push
and
iret
xchg
sbb
stos
push
jmp
shll
jg
fucomip
daa
jl
inc
stos
imul
mov
cli
inc
inc
cmp
push
push
btr
ret
cmc
push
mov
lock
movsl
fs
pop
xor
xchg
dec
mov
or
pop
dec
mov
mov
rol
push
dec
xchg
call
mov
cmpsl
aam
and
stc
repnz
mov
sbb
cld
jae
mov
pop
sarb
imul
xor
popa
mov
or
clc
int
mov
add
outsb
push
adc
test
pop
je
adc
jl
ds
sub
je
dec
ficoml
loopne,pt
xchg
loope
popa
and
aad
mov
scas
subb
filds
cld
int
iret
lret
or
inc
movsl
jo
jl
xchg
std
jecxz
test
roll
xchg
sbb
inc
push
jg
jmp
sub
ds
mov
pop
mov
les
or
mov
movsl
mov
test
mov
xlat
mov
idivl
mov
lods
popf
xor
mov
mov
mov
ret
dec
test
lcall
xor
call
sub
xor
cmpsb
or
mov
stos
jp
or
scas
cmp
xchg
cmp
push
lcall
mov
sub
inc
jmp
out
outsl
xchg
mov
lods
pop
stc
fdivs
mov
repnz
xchg
mov
sbb
rclb
jg
pop
ret
xor
repnz
orl
dec
mov
push
pop
mov
hlt
and
stos
roll
nop
pop
sub
jmp
test
xchg
inc
sub
or
popf
loope
ja
aas
dec
adc
xor
or
dec
mov
xchg
movsb
inc
mov
xchg
fldl
pop
push
pusha
jmp
mov
daa
sub
ljmp
mov
call
mov
dec
sarb
dec
enter
sub
loopne
call
outsb
repnz
les
mov
test
les
jecxz
or
jp
and
inc
call
and
cmp
int3
cmp
adc
mov
sbb
jns
xchg
push
jns
lock
shr
lods
fisttpll
lea
sub
aam
scas
sbb
jecxz
int3
sbb
jno
add
jecxz
outsl
xor
add
add
dec
notb
orb
mov
jg
shld
jae
add
rorl
mov
fmul
shrl
or
or
cmpl
fisttpl
push
popf
sti
adc
mov
pop
pop
jle
sti
add
push
arpl
outsb
loopne
popa
pop
fwait
dec
adc
mov
into
and
push
aaa
inc
mov
shlb
adc
sbb
mov
sbb
dec
cmpsb
cmp
popf
lcall
repz
and
ret
cmp
xlat
lret
insl
lds
push
pop
cmp
scas
cld
shr
mov
stos
and
xchg
inc
cmc
lret
in
cmp
out
jno
mov
push
push
push
jae
call
push
add
imul
loope
test
orb
add
mov
jnp
cmc
xor
ret
mov
fs
scas
cmp
testb
rolb
sarb
xchg
and
or
xchg
and
jecxz
dec
std
pop
dec
sarb
sti
mov
or
aam
arpl
scas
or
dec
mov
sbb
ret
pop
adc
pop
jp
stos
jns
lcall
repz
ljmp
nop
rcrl
cmp
jnp
and
orb
mov
stc
sarl
jbe
ret
fidivl
ja
andl
addr16
pop
sub
cli
jl
test
mov
jge
inc
xor
xchg
or
xchg
int3
shrl
push
mov
cwtl
test
mov
or
int3
mov
jle
add
out
imul
jo
into
jmp
or
arpl
cmpsb
xchg
add
adc
or
pop
jg
jbe
stos
loope
fbld
and
push
mov
jg
loop
pusha
cli
add
ss
mov
mov
adcb
cmp
jns
mov
push
in
ja
mov
and
push
adc
xchg
dec
sub
lahf
add
dec
cltd
lahf
push
in
cwtl
push
and
dec
push
add
mov
out
pop
or
xchg
or
or
cmc
fistps
xchg
mov
call
shrb
sbb
inc
add
fwait
pop
mov
add
stc
insb
pop
enter
push
lcall
jmp
adc
leave
stos
rorb
cld
jmp
test
or
imul
icebp
mov
cmp
dec
iret
jmp
lea
rcrb
fwait
lods
mov
mov
mov
clc
jle
sar
and
cmp
sub
lods
or
add
rorb
sbb
xor
fisubl
mov
mul
or
dec
inc
mov
pop
sahf
or
mov
in
push
cmp
int
add
mov
cmp
aaa
fsts
andnps
adc
cmp
out
xchg
xor
fildl
pusha
insb
cmp
cwtl
in
lcall
jl
mov
mov
mov
and
pop
cmpsb
jne
fcompl
pop
lock
outsb
test
add
mov
dec
aam
xor
adc
dec
or
in
les
test
and
in
sub
xchg
stc
or
call
test
pop
mov
xchg
lea
insl
scas
fs
dec
xchg
shlb
mov
fs
and
xor
addb
test
mov
sbb
out
xchg
divb
rol
adc
js
jmp
jmp
xchg
mov
add
ret
push
leave
xchg
test
stos
lret
inc
push
push
repz
mov
repnz
int3
xchg
insl
sub
cmpsb
call
mov
ds
mov
pop
cltd
mov
adc
jl
xchg
sbb
xor
push
add
fistps
and
fnstcw
movsl
xchg
fmull
ss
negb
fisubrl
out
push
and
mov
mov
inc
add
idivb
pop
xor
adc
push
mov
push
test
and
and
jmp
xor
hlt
sbb
pop
jb
cmp
xor
and
push
mov
or
push
mov
cmp
pop
adc
leave
push
in
shrl
inc
jo
addr16
scas
jp
mov
lock
push
out
data16
scas
mov
mov
jne
bound
cmp
dec
pop
adc
xor
aam
lea
dec
nop
repnz
mov
jno
xor
lret
push
jbe
rorl
inc
mov
jmp
lahf
dec
pop
push
inc
add
sub
addr16
push
cmp
fbstp
mov
jno
push
ss
out
push
mov
in
fiadds
mov
jge
and
xchg
cmp
scas
jbe
out
enter
mov
add
xlat
xchg
xchg
lret
push
jg
xor
inc
jl
insb
push
mov
arpl
lret
out
divl
adc
dec
and
push
cltd
loope
fstl
fisubrl
xchg
pushf
mov
cmp
cmpsl
cmpb
or
xchg
insl
dec
pop
insl
sbb
push
es
jmp
das
cmc
arpl
hlt
jp
nop
cmp
mov
push
push
pop
pop
les
push
cmc
or
mov
sarl
pop
and
add
adc
roll
push
mov
sub
test
das
cli
or
cpuid
sbb
lods
incl
pop
lock
je
insb
fisubl
test
stc
movsb
xor
scas
sub
sub
jne
mov
jne
and
mov
xor
adc
outsl
dec
inc
rcrl
push
push
popf
test
pop
cmp
call
jmp
call
pop
cmpsb
add
addr16
aad
mov
mov
repnz
mov
dec
xor
iret
push
sbbb
shll
xchg
sbb
cli
lock
je
or
jns
imul
xchg
lret
insl
push
nop
js
test
aas
mov
cltd
mov
enter
icebp
fs
leave
cmpsl
lcall
push
loop
inc
shrl
insl
dec
test
xlat
into
push
stos
mov
cmp
fistl
out
imul
push
in
lods
test
mov
lds
or
inc
inc
insb
jne
dec
inc
cli
int3
int
stos
sub
add
jno
xchg
push
andl
sub
sarb
add
jns
pop
mov
inc
in
inc
mov
mov
hlt
lock
sub
jbe
sbbb
leave
not
lea
rol
iret
pop
pop
inc
pop
ficomps
cmc
pusha
pop
push
add
jno
jge
loope
inc
and
leave
in
jns
rclb
out
adc
push
cmc
lret
pop
xchg
pusha
mov
lret
jecxz
inc
jmp
stc
stos
ja
lahf
addr16
mov
jp
push
int
aam
inc
std
mov
mov
js
or
inc
xor
inc
negb
out
or
aad
test
mov
sbbl
push
adc
mov
xchg
sbb
push
loopne
ret
jmp
sub
add
orl
dec
lret
dec
jl
movsl
jno
in
xchg
or
add
lds
ds
jno
cld
inc
aas
mov
or
call
cmp
xor
push
into
jbe
sub
dec
push
push
stos
sub
dec
push
adc
add
cmp
sbb
xor
test
mov
lds
sbb
push
and
sub
mov
xchg
cli
nop
xor
daa
shlb
pushf
jne
pop
out
mov
cmp
xor
pushf
adc
in
or
sub
addl
lret
push
clc
jle
data16
xchg
shrb
es
mov
cli
or
cwtl
sbb
jbe
aad
lret
aas
mov
ficomps
pop
xchg
cmp
dec
int3
je
int
daa
inc
lock
pusha
or
lahf
pop
leave
inc
adc
call
inc
or
cs
jo
leave
rorb
cld
xor
nop
pop
outsl
stc
sahf
push
inc
hlt
hlt
ljmp
xchg
ret
rorl
dec
jl
mov
or
jns
mov
test
lods
int3
sub
outsb
pop
push
xorb
sub
pop
rol
mov
in
cmp
jno
inc
scas
sbb
xchg
loope
xchg
push
or
popf
or
mov
enter
and
ret
mov
xor
movsl
je
inc
fnstcw
and
inc
pushf
enter
aam
mov
ja
push
and
or
push
sbb
cmp
add
lds
cmpsl
sbb
loope
cld
stc
in
xchg
mov
add
out
xchg
jb
lods
push
shrl
and
in
clc
into
sarb
jp
inc
lahf
pop
les
int
xchg
daa
shlb
xchg
insl
lock
mov
call
mov
sbb
pop
leave
shrl
cltd
fidivrl
mov
inc
mov
jmp
jnp
mov
sbb
pop
or
pop
psrlq
dec
lods
sbb
or
jmp
shr
jns
lds
imul
fsubs
and
push
jb
pop
int
mov
sbb
in
or
mov
lds
ret
loop
mov
gs
clc
and
sub
pop
add
shrl
std
das
faddl
pop
mov
or
fdivp
jns
adc
hlt
int
inc
repnz
inc
inc
repz
mov
iret
cmp
insl
adc
cmc
pop
adcb
sti
test
test
jp
cmpb
inc
in
lcall
pop
mov
add
sub
sub
push
cmp
and
add
loopne
or
pusha
jbe
dec
jge
pop
cwtl
mov
fisubrs
or
je
sahf
and
popa
sbb
push
in
enter
mov
dec
xor
pop
fchs
sahf
mov
aad
adc
je
out
or
sahf
adc
push
push
jo
dec
jle
jecxz
adc
inc
lds
mov
fisttpl
shll
inc
out
fsubl
ja
out
dec
mov
lret
xchg
loope
inc
aam
pop
fistps
jne
dec
add
dec
imull
mov
cmc
mov
movsl
sbb
push
push
push
mov
cltd
lock
test
dec
jp
or
fwait
xchg
push
sub
jge
dec
inc
cmp
inc
clc
jp
xchg
pop
mov
adc
daa
mov
mov
rorb
popf
ja
sarb
loop
lock
xor
fisubrs
rclb
or
pop
ds
loop
mov
xchg
rcrb
mov
xchg
xchg
add
fidivs
lret
lcall
lret
scas
loope
ja
les
and
xchg
in
mov
inc
cmp
lds
test
rcrb
adc
or
fstpl
jnp
sub
and
cmp
pop
icebp
mov
inc
inc
xor
ret
ljmp
jp
scas
cmpsb
inc
movsb
mov
mov
jns
inc
fwait
movsb
repz
and
sub
ret
mov
cltd
outsl
in
in
pop
popf
jae
cs
push
and
or
out
inc
js
fists
int3
lahf
lret
xchg
test
xchg
mov
clc
jbe
pop
in
sub
lret
xchg
lds
loop
lret
jns
jp
ret
push
nop
push
scas
xor
dec
fsubr
sbbb
mov
imul
icebp
in
sub
add
jae
mov
ret
jl
jnp
movsb
rcr
pop
adc
cltd
fstl
fidivl
push
xor
add
and
sbb
add
mov
jg
pop
mov
les
sbb
add
pop
cmp
dec
outsb
pop
pop
jp
in
cmp
into
inc
sbb
push
mov
scas
push
jmp
dec
sub
push
dec
or
movsb
adc
cli
leave
andb
sub
sbb
stos
xor
sub
lods
dec
xor
std
ds
and
mov
daa
xchg
mov
mov
out
cmp
gs
vmovsldup
mov
in
mov
ret
sbb
inc
inc
in
bound
stos
adc
jae
xor
aam
in
js
sub
jl
out
pop
lea
inc
add
sbb
sub
std
insb
sub
jle
decl
insl
and
das
inc
or
adc
dec
jnp
mov
xor
enter
sti
jl
sub
adc
adc
test
sub
mov
lcall
shlb
and
mov
add
mov
pop
inc
adc
out
and
dec
sbb
loopne
pusha
sbb
jmp
pop
aas
int3
cmc
mov
or
or
mov
pusha
sub
inc
loope
mov
xor
aas
xor
in
addr16
scas
adc
daa
jb
xor
hlt
xlat
and
aam
ret
enter
pop
xor
mov
and
cmc
xor
gs
ja
push
lret
loopne
ja
adc
push
push
les
and
std
in
mov
jo,pt
add
shr
insl
fdiv
insb
loopne
pop
test
pop
loop
data16
out
adc
cmpsl
ljmp
mov
mov
and
or
aad
push
mov
mov
lods
pop
add
dec
fyl2x
cmp
sbb
and
mov
adc
mov
sub
jbe
adc
daa
aas
xor
and
scas
int
hlt
pop
popa
outsl
test
add
or
xchg
sub
int3
jl
lret
xchg
out
adc
mov
fwait
sbb
pop
pop
push
sarl
in
rcl
jle
xchg
mov
clc
cmpsb
inc
sub
jbe
fidivrl
cmp
push
iret
testl
dec
push
pop
jb
mov
js
push
mov
jbe
cmp
fdivr
mov
jne
mov
mov
push
pop
xchg
mov
hlt
sbb
mov
mov
push
lcall
popf
mov
or
jno
xlat
scas
mov
xchg
ret
sbb
roll
loop
mov
xchg
roll
dec
lock
lods
mov
adc
aaa
cmp
das
lret
loop
dec
add
fwait
push
arpl
pop
out
popa
addl
faddl
sarb
daa
sbb
fcmovnb
cwtl
sbb
push
out
inc
fdivs
mov
and
out
loop
inc
and
sbb
gs
push
push
dec
sbb
loop
fbld
adc
cmc
subb
in
cmp
cltd
outsb
fidivs
insl
push
adc
push
addb
sti
lock
jle
push
mov
xchg
cld
add
dec
mov
lret
jmp
xchg
js
pop
ret
sbbl
loopne
xor
push
cltd
pop
xchg
cmp
xor
or
jecxz
and
leave
pop
mov
leave
mov
aaa
ret
leave
out
and
clc
sti
or
sahf
sti
mov
jmp
dec
in
test
or
and
xchg
sbb
inc
mov
cltd
icebp
test
popa
or
rorb
mov
xchg
inc
jp
or
inc
mov
stc
ret
sub
add
mov
shll
or
cmc
pop
pop
xor
sarl
sub
and
sarb
or
int
mov
mov
or
out
adc
in
lock
cmp
xor
pop
xor
pop
jns
or
xorb
pop
adc
cmp
popf
jp
sub
xor
adc
cmp
dec
jnp
test
mov
inc
pop
pop
pop
icebp
rol
aas
popa
pushf
dec
pop
dec
xchg
pushf
insl
shlb
cmpsb
mov
in
sbb
clc
fadd
lret
scas
in
fldenv
clc
jge
jp
jg
lcall
mov
xchg
xchg
push
mov
sbb
sbb
mov
add
aas
mov
addr16
and
sub
les
popa
xor
and
leave
popf
mov
scas
jge
and
adc
fadds
ja
jmp
cwtl
ds
mov
cmp
rorb
sbb
push
popa
mov
into
sbb
dec
and
push
scas
mov
fs
pop
sti
push
out
xor
int3
shrb
and
popf
sub
in
push
fidivs
pop
in
adc
mov
in
sub
cli
jns
adc
jmp
jp
sbb
in
mov
gs
xchg
lret
insl
inc
loope
mov
in
iret
mov
mov
int3
and
adc
fisubl
rcrl
add
fistpl
ffreep
xchg
mov
jle
sbb
xorb
pushf
adc
cmp
inc
mov
push
and
xchg
jecxz
or
sbb
push
imul
mov
popf
stos
mov
adc
sub
xchg
std
leave
subb
xor
bound
sbb
aam
xorb
pop
mov
mov
negb
mov
outsb
xor
jmp
out
pop
sahf
and
adc
in
repz
add
outsl
cmp
xlat
imul
jo
push
xchg
imul
mov
subb
nop
dec
dec
add
test
cli
daa
std
inc
ret
add
xor
and
cltd
adcl
mov
pusha
jnp
push
push
push
mov
leave
cmp
jl
jnp
stc
int3
data16
dec
dec
loope
ss
pop
sahf
cmp
dec
mov
jge
mov
ret
and
cmc
push
jmp
add
dec
mov
jecxz
leave
repz
stos
ljmp
outsl
stc
mov
fidivl
cmp
into
adc
cmp
negl
xor
test
cwtl
xchg
dec
loope
pop
shrb
ror
dec
jg
sub
notb
or
sbbl
lcall
and
mov
mov
mov
pop
push
pextrw
mov
push
pop
arpl
lods
and
outsb
and
rorb
adc
loope
or
fwait
jns
data16
sub
cltd
lahf
mov
out
nop
std
cmc
push
dec
push
add
mov
push
dec
push
fimuls
mov
mov
add
outsb
sbb
and
das
mov
mov
pop
jnp
aam
lods
xlat
jmp
xor
lcall
iret
cld
dec
push
dec
push
test
jnp
adc
push
cld
mov
imul
test
scas
aam
add
cli
fs
shlb
pop
nop
push
les
decb
movsb
shlb
sub
xchg
fwait
cmp
push
xor
push
mov
inc
inc
stc
icebp
rolb
pop
dec
push
cli
je
int3
arpl
cmpsl
mov
out
lods
mov
xchg
lahf
movsb
xchg
les
inc
sub
mov
mov
int3
sbbl
mov
sti
movsl
aam
push
outsb
mov
jo
cmpsb
jl
fs
xchg
jnp
into
xchg
or
pop
pop
xor
and
lea
mov
mov
cmp
sub
adc
mov
ja
xor
xor
hlt
dec
dec
mov
in
mov
mov
xor
scas
es
mov
dec
int
cmpsl
and
imul
insb
sbb
mov
jns
imul
xchg
dec
subl
and
dec
das
push
icebp
lahf
inc
or
std
icebp
cmc
mov
or
test
xchg
out
dec
mov
loope
das
add
aad
and
inc
add
or
push
popa
je
xchg
shr
inc
jo
stos
pop
pop
inc
mov
rolb
int
mov
leave
mov
jp
inc
pop
pop
xor
mov
push
add
outsb
dec
and
xchg
imul
lahf
sbb
inc
lcall
fistl
or
cld
insb
sbb
sub
pop
sub
jmp
cmp
jg
in
das
shll
mov
mull
push
aas
ficompl
fptan
cmp
jb
adc
sbb
ret
ficoml
mov
mov
push
add
fiaddl
inc
mov
lea
enter
movsb
movsl
jb
in
fwait
lds
pop
add
sub
jecxz
push
dec
ds
or
sub
adc
popa
push
push
adc
pop
cmp
out
adc
mov
in
dec
ficomps
sbb
jnp
jmp
aad
loopne
mov
mov
cmpsl
addb
aaa
repnz
arpl
imul
fnsave
mov
adc
ret
push
jp
sbb
adc
pop
mov
lahf
and
push
adc
out
xchg
scas
sub
jmp
mov
and
out
add
jecxz
cld
cmp
arpl
and
dec
jbe
inc
xor
in
cmp
movsb
jb
sub
out
jmp
outsb
adc
out
je
cmp
mov
in
xlat
xchg
add
movsb
pop
test
dec
icebp
inc
and
ja
xchg
dec
dec
or
push
cmc
or
cmp
mov
aaa
and
fnstsw
out
subl
ret
push
into
fadds
pop
push
hlt
rcrl
out
sbb
sbb
xchg
sub
aam
and
xchg
shrb
pop
imul
in
and
push
sub
jns
mov
sub
popa
enter
inc
add
repz
pop
rcrb
je
nop
or
rol
es
jbe
cli
xchg
loop
bound
inc
and
aam
jl
xchg
cmp
mov
jb
sub
mov
scas
jge
cmpsb
call
pop
adc
and
es
dec
out
in
adc
sbb
fcoms
pop
xlat
mov
push
mov
cld
lret
insl
xchg
and
sbb
fidivrs
add
insl
mov
and
sbb
mov
fnstsw
in
loop
adc
cwtl
add
ror
add
pop
pop
sub
icebp
mov
cmp
nop
aas
sub
cmp
out
int3
jbe
fistpl
adc
or
jo
loope
fisubl
into
mov
xor
loope
out
fucomp
lret
adc
lds
arpl
mov
add
mov
jle
dec
fwait
xchg
sbb
push
lods
lret
sahf
inc
insl
xchg
mov
xor
mov
sub
cltd
repnz
xchg
jbe
pop
in
mov
std
aad
sbb
or
leave
cs
js
in
lds
cmp
dec
hlt
gs
adc
xchg
nop
insb
pop
jmp
repz
std
push
arpl
out
or
and
ljmp
xor
idivb
fdivs
in
jne
ljmp
cwtl
or
mov
add
sbb
and
insl
push
xlat
inc
jo
cmp
xchg
push
push
dec
cmpsl
dec
xchg
ds
push
mov
enter
lods
mov
fidivs
leave
add
aam
lahf
or
enter
leave
cmp
pop
sub
icebp
xchg
xchg
jo
mov
inc
stc
rcrl
xchg
mov
imul
in
push
jmp
inc
mov
adc
pusha
gs
rolb
jns
das
loop
inc
gs
or
je
jbe
jbe
xor
xchg
xchg
daa
repnz
cmp
mov
push
clc
inc
jo
dec
rcrb
cmp
cmp
stc
xor
outsl
cmpsl
mov
or
pusha
sbb
in
and
arpl
rorl
pop
loope
insb
popf
cmp
jno
xor
aaa
sbb
pop
mov
jle
lahf
inc
mov
pusha
rcrl
mov
pop
jg
mov
xchg
jle
jno
gs
nop
lea
les
and
sahf
and
cmp
dec
push
dec
pop
xchg
lret
cmp
mov
cmp
int
xor
ret
ret
sbb
xchg
stos
push
sbb
pop
fcomps
and
and
mov
test
adc
adc
or
fistpl
test
mov
nop
dec
adc
adc
lock
jmp
xchg
sti
xchg
aaa
inc
xorl
jb
addr16
dec
scas
xchg
jg
xchg
gs
push
xor
ret
jl
shl
mov
loopew
movsl
inc
cmp
std
data16
out
scas
enter
add
adc
out
jle
imul
sbb
and
xor
dec
and
push
dec
mov
dec
pop
popa
rorl
in
cmpsb
xor
sub
dec
idivl
mov
add
mov
ss
jp
add
lcall
pop
sbbl
push
scas
lahf
or
hlt
inc
out
and
loope
popa
fmul
idivb
mov
dec
xor
fdivrl
jg
rclb
jmp
dec
xor
xbegin
rcrl
push
mov
fistpll
jbe
sarl
int3
dec
mov
add
imul
stc
cltd
xlat
mov
hlt
dec
or
out
mov
or
dec
jecxz
sub
sti
mov
xor
ja
xlat
jno
sub
jmp
jp
jmp
ret
xor
add
cmc
push
cmp
popf
mov
out
insb
loopne
mov
in
and
ljmp
sub
aas
push
out
sahf
subl
addl
test
out
leave
add
mov
out
dec
inc
xor
pop
repnz
imul
mov
mov
xchg
insl
push
gs
push
pop
or
mov
sbbb
mov
and
mov
xchg
mov
cmc
dec
shll
dec
xchg
sarl
push
test
pop
cmp
jnp
int
negl
call
add
mov
inc
jge
adc
fs
sbbl
sub
stos
ret
add
sbb
movsb
mov
and
mov
ljmp
sti
push
js
int3
aad
repnz
cmp
dec
outsb
dec
or
fmuls
sbb
xlat
out
dec
hlt
and
ret
cmp
adc
clc
fistpll
insl
add
cmp
jl
mov
and
jecxz
ljmp
mov
jle
mov
fwait
xor
push
into
fcmovb
jns
data16
in
ds
dec
loop
stos
pop
inc
cli
pushf
jge
sub
clc
push
sbb
fiadds
in
pop
pushw
xor
hlt
cmp
in
fucom
push
lret
sbb
mov
jmp
imul
or
push
push
xchg
push
pop
xchg
mov
sub
xchg
aaa
lret
dec
mov
shlb
sbb
push
out
pop
jmp
sub
in
sbb
mov
ror
test
clc
cmp
sarl
mov
lahf
std
push
xlat
inc
xor
sub
xchg
jecxz
shll
fcoml
lahf
mov
push
outsl
jmp
xor
int
mov
stos
mov
dec
fimull
decl
inc
push
xor
adc
lods
jne
inc
popa
test
out
fs
dec
imul
repz
xor
push
add
pusha
mov
push
jmp
push
sti
aaa
movsl
or
mov
adc
ljmp
inc
sahf
popf
pop
mov
stc
cli
hlt
pop
cmp
fdivs
cmpsb
mov
pop
outsb
sub
add
jge
sbb
mov
in
faddl
pop
movsb
sub
int
js
jge
push
jnp
in
xchg
sbb
push
or
xor
mov
rcl
mov
fisubrs
add
int
push
and
sub
dec
jo
psllq
sahf
repnz
fwait
push
pop
outsb
call
mov
rcll
int3
push
and
test
decl
fistps
popf
jae
and
adc
andb
stc
rorb
adc
cmovnp
stc
xorb
in
mov
adc
dec
iret
push
or
mov
fcompl
out
hlt
mov
lret
shrb
inc
inc
rorl
pop
rorl
out
loope
inc
sbb
stc
and
push
cld
test
pop
rcrl
pop
and
cltd
lods
nop
insl
adc
sbb
fdivrs
sub
jge
int
ret
imul
imul
xchg
pop
cmp
xor
mov
xor
and
add
sarl
cmpsl
jnp
sbb
inc
fstpl
sub
dec
jae
or
jp
and
out
mov
clc
shl
cmp
stos
dec
ret
pop
in
mov
push
outsl
add
mov
sbb
icebp
or
mov
pop
jne
push
movsl
xor
pop
push
lahf
adc
and
decb
sub
gs
std
adc
ja
call
jns
jns
pop
enter
cli
xchg
cmp
pop
sti
push
xchg
push
inc
js
cmp
insb
sub
jg
push
cmpb
sbb
xor
and
push
cmp
fcomip
addr16
cmp
mov
push
inc
and
es
inc
scas
xlat
addr16
push
jmp
mov
int
fimull
jo
add
lds
mov
test
or
movsb
loopne
sub
sbb
sub
lahf
call
pop
in
lods
add
repnz
cmp
adcb
cmpsb
jecxz
dec
add
lds
ficomps
inc
mov
mov
ljmp
scas
das
frstor
pop
adc
sbb
jg
sbb
test
ss
inc
repz
or
ss
cmc
mov
lret
cli
mov
cmpsb
mov
jno
xor
pop
xchg
mov
cmp
mov
ficompl
fdivl
ret
int
cmpsl
lret
sbbb
xchg
jle
cmp
out
inc
scas
insl
das
into
sbb
push
ret
scas
into
retw
sti
stc
mov
enter
aad
push
je
push
dec
pop
movb
andl
insb
jno
push
lcall
cltd
sbb
and
jns
jle
pop
out
outsb
sbb
pop
rorb
mov
inc
or
stc
sbb
repz
dec
cs
leave
repnz
scas
jmp
daa
cmp
xchg
imul
scas
lcall
aam
xor
fisubrs
gs
stos
xchg
mov
mov
adc
fnsave
add
push
sbb
aam
js
inc
mov
mov
fmul
mov
cmp
scas
insb
inc
cmpsl
and
clc
mov
pushf
fsubs
insb
je
int3
xor
dec
in
adc
lahf
push
sbb
dec
adc
or
scas
xchg
rolb
ret
insb
mov
icebp
adc
xchg
leave
pop
dec
mov
xchg
cli
enter
in
mov
insb
stc
test
push
decb
pop
inc
mov
adc
jmp
add
mov
divl
mov
xor
mov
jne
xlat
cli
andb
adcb
or
sub
push
out
fisubrs
fs
jns
mov
xchg
xchg
pop
push
setnp
call
fmull
jne
imul
ret
pop
and
xor
adc
jae
cmp
fwait
cmp
in
jae
push
mov
int3
add
in
pop
nop
sub
pop
data16
xchg
push
shrl
out
xchg
loopne
sti
pop
xor
mov
mov
in
jg
lods
aam
fldenv
js
lds
je
out
fs
jo
loopne
or
push
faddl
xor
inc
faddl
push
iret
sbb
cmp
inc
mov
pop
daa
dec
mov
imul
and
or
or
jecxz
inc
inc
imul
sub
mov
sti
jmp
push
imul
popl
xor
das
inc
mov
sub
addb
lods
or
push
mov
scas
lahf
cmpsb
orb
sub
and
out
add
movsl
cmp
mov
xor
and
clc
bnd
pop
test
scas
je
inc
push
add
fs
mov
jno
repz
hlt
cmc
in
lds
loope
dec
cmc
outsl
dec
pushl
pop
lcall
or
xchg
adc
sarb
outsb
xchg
movsb
int
imul
pop
aad
pop
es
dec
popf
inc
pushf
jo
movsl
dec
push
inc
mov
xor
jbe,pt
outsb
mov
inc
lea
fiadds
xor
jg
dec
push
adc
pusha
decb
cs
pushf
jl
outsl
push
mov
mov
xchg
push
xlat
add
inc
call
fstps
adc
out
jne
jno
pop
adc
adc
lock
fmull
mov
inc
ss
sbb
pop
jle
xlat
out
mov
and
loope
scas
mov
leave
and
sub
adc
and
inc
pop
lahf
lret
jg
iret
popf
cmc
in
pop
hlt
mov
mov
rorl
push
hlt
sub
fisttps
jle
mov
fsub
and
jge
xchg
push
mov
or
jp
pushf
xor
popf
mov
sub
xlat
jns
jo
jp
mov
js
scas
into
xchg
mov
xor
mov
xchg
insl
dec
sbb
pushf
xor
pushf
loopne
jg
mov
and
cmp
cmp
fcomip
insl
jmp
jbe
mov
pop
movsb
mov
rcl
add
sbb
cmpsl
sub
xor
and
mov
lds
cmpsb
and
sub
jnp
mov
xor
enter
daa
push
and
aad
cltd
dec
ret
lods
int
loop
add
das
sbb
xchg
jns
inc
push
xchg
and
cmpsb
mov
push
fsin
stos
stos
lret
push
or
enter
ja
cltd
inc
addb
mov
dec
cwtl
aam
push
cli
mov
sbb
and
jbe
xchg
lods
pop
imul
pop
sbb
shrl
cmp
fcmovbe
in
lret
xchg
pushf
out
xchg
sbb
dec
lods
inc
inc
mov
pop
dec
mov
xchg
into
sbb
sbb
sbb
cmc
sub
ljmp
jl
je
push
lea
mov
and
cmp
pop
mov
push
lahf
jge
inc
insl
pop
mov
inc
mov
lds
loop
mov
mov
sbb
stos
cmp
out
pop
outsl
push
sbb
ljmp
addr16
sbb
ror
cmovs
cmpsb
je
lods
cmpb
les
xchg
jno
cmp
mov
jge
cltd
divl
fcom
shlb
comiss
jmp
pop
jle
lea
sti
xor
nop
mov
jnp
dec
es
mov
adc
dec
out
inc
call
scas
dec
cwtl
pop
cltd
xor
fldenv
xchg
nop
or
push
cld
push
adc
push
adc
imul
in
fs
imul
or
loopne
stos
or
push
xchg
mov
mov
lods
out
cmp
fdivrs
dec
pop
daa
ficoml
sbb
mov
insl
mov
xchg
pop
sbbb
sub
test
jne
ds
fdivs
push
loop
notb
vpmacssww
into
mov
mov
inc
jge
testl
mov
mov
arpl
in
into
pop
aaa
cmp
aaa
adc
in
cwtl
jns
mov
hlt
mov
jg
mov
push
sbb
jle
xor
test
sbb
lcall
sbb
jnp
lea
aas
mov
cmp
gs
push
lea
std
mov
mov
add
pop
fs
cmp
pushfw
and
fnstenv
push
add
mov
add
xchg
adc
scas
in
stos
cld
jge
mov
aaa
sbb
mov
cmc
pop
mov
xor
stos
je
push
mov
subl
out
sti
adc
inc
xchg
mov
loop
dec
nop
mov
lods
aaa
imul
outsb
data16
icebp
test
jl
dec
dec
cli
push
inc
jno
sbbb
cmp
js
mov
aad
or
icebp
shrl
cmp
jnp
push
mov
pop
push
mov
les
mov
push
in
insl
rcrl
sti
push
incb
push
jmp
aad
int
or
lea
sbb
pop
mov
and
jp
xor
pop
dec
sbb
ja
pop
loope
arpl
gs
ljmp
shll
pop
mov
scas
inc
out
and
xor
sti
cs
fdiv
aad
mov
inc
std
fmull
pop
adc
mov
icebp
inc
add
cmpb
stc
ljmp
fisubrs
stc
inc
scas
lods
jns
test
mov
lock
daa
lret
add
daa
xchg
fisubrl
cmc
mov
cmp
bound
hlt
pop
fmull
pop
mov
cmp
xchg
or
mov
lods
push
jae
mov
dec
bound
cmpb
adc
and
xor
repnz
xorb
aam
xor
insl
sbb
ss
sahf
dec
movsb
into
mov
xchg
test
dec
je
mov
js
or
inc
sahf
xor
pop
inc
sub
je
jmp
push
repnz
test
bound
leave
cmp
dec
xchg
adc
sub
xor
dec
frstor
cmp
insb
ret
and
repz
push
dec
repz
add
pop
or
adc
adc
movups
nop
repnz
pushf
mov
or
lret
stos
inc
imull
popf
hlt
idivl
outsb
iret
pop
inc
in
lahf
sub
mov
dec
push
fs
ficoml
scas
jae
and
mov
add
test
mov
and
in
sarb
and
rcrl
and
loop
stc
shrl
sbb
daa
outsb
xchg
movsb
addb
and
nop
sbb
stos
sbb
roll
sub
icebp
aam
sub
pop
and
loopne
mov
loope
dec
push
push
scas
rol
xlat
pop
data16
sbb
test
push
and
adc
pop
cs
or
sub
in
in
cltd
xor
inc
aas
daa
xchg
cmp
jp
scas
xchg
test
xchg
popa
dec
xchg
mov
pop
mov
movsb
lahf
jge
sub
or
pop
loope
ja
sbb
loop
imul
mov
pushf
aas
inc
push
fidivs
pop
test
sub
cmp
dec
add
ret
loop
in
stos
pop
push
mov
hlt
cwtl
adc
int3
push
sti
and
mov
outsl
roll
adc
add
data16
jne
in
je
mov
push
cmpsl
fisubrs
or
int
xchg
or
roll
cmpsb
and
pushw
mov
adc
repz
jl
cmpl
mov
stc
mov
iret
and
pop
dec
inc
daa
jle
mov
lcall
jp
popf
xor
sti
jnp
test
test
js
mov
jle
jmp
leave
repz
cs
xchg
jmp
pop
shl
sbb
sub
imul
mov
mov
repz
xchg
sbb
pop
pop
mov
shlb
jmp
sbbb
sbb
inc
cmpsl
and
out
in
xchg
push
sub
loopne
xchg
push
dec
sbb
xorl
push
mov
sub
push
add
sub
clc
ja
push
out
pushf
adc
std
xor
lahf
popa
filds
ret
arpl
mov
push
popf
fcomps
jns
mov
gs
shl
dec
cmpsb
pop
movsb
subl
xlat
jecxz
mov
in
and
mov
outsl
lcall
adc
xchg
pop
dec
je
pop
push
pop
out
xchg
call
pop
out
inc
pushf
or
push
movsb
std
cmp
loopne
xchg
pop
addr16
nop
fdivs
ds
cmpsb
gs
push
sti
and
mov
adc
inc
mov
pusha
jmp
dec
icebp
jmp
pop
ss
repnz
xchg
icebp
add
out
xchg
jbe
pop
shlb
sti
inc
xchg
mov
jbe
fdivrl
xor
int
mov
lods
jnp
fwait
cmp
fs
pop
pop
test
inc
call
pop
cmp
call
call
lahf
ja
xor
mov
jl
lods
rep
out
push
pop
ja
arpl
xchg
fmull
testb
pop
mov
pushf
mov
repnz
pushf
lret
rorb
scas
cmp
push
leave
enter
adc
push
mov
imul
sarl
add
cld
subb
cmp
loope
rcr
dec
xchg
inc
movsl
or
jle
mov
adc
and
into
jmp
loopne
fldcw
sub
dec
cmp
jae
andb
xchg
les
int
dec
dec
adc
add
mov
adc
sbb
inc
or
inc
js
dec
xchg
sbb
mov
pop
pusha
jbe
out
ss
and
lea
push
and
sti
xor
out
mov
test
inc
addr16
cli
inc
mov
aas
sbb
push
or
imul
jge
dec
test
xchg
nop
addb
iret
into
or
sub
loop
xor
dec
ror
xchg
pop
std
mov
enter
in
daa
shll
mov
lea
add
repnz
pop
aas
test
outsb
shrb
dec
and
aaa
and
je
push
dec
sti
jns
aam
push
idivb
cmp
fs
xor
call
adc
test
pop
fsts
sub
fisttpll
dec
and
or
push
xor
mov
repnz
push
leave
rclb
out
adc
je
jno
pusha
push
mov
faddl
pop
sub
inc
nop
push
sbb
fisubrs
add
add
mov
sahf
inc
push
int3
sub
adc
jmp
out
movb
data16
xor
add
out
in
sub
push
cltd
cs
rcll
pop
push
and
inc
test
jecxz
mov
pop
mov
cmpsl
fnstsw
mov
and
aad
inc
jecxz
add
inc
lret
inc
cwtl
scas
inc
aad
jle
mov
jecxz
adc
xchg
jbe
mov
dec
aad
test
addb
testb
xor
inc
or
and
mov
out
shlb
sbb
pop
mov
inc
cmpsl
fisttpll
dec
inc
push
dec
and
push
cmp
fmull
aas
xor
add
pop
xchg
xchg
mov
mov
pop
out
push
lea
cld
push
or
leave
ljmp
adc
mull
sub
sti
clc
movsb
dec
icebp
sbb
jmp
cs
cmp
lret
adc
or
xor
or
fwait
leave
jmp
cmp
adc
xor
filds
push
fwait
stc
or
jno
pop
jnp
inc
fldl
push
adc
xchg
loopne
jmp
jns
test
mov
sahf
mov
push
pop
ret
clc
adc
xchg
xchg
xor
pop
push
sbbl
pop
stos
fistpll
push
insl
mov
mov
push
jb
aam
sub
test
std
jge
add
fistps
stos
pop
outsl
adc
bound
sti
mov
std
aas
add
js
cli
pop
mov
jne
call
xchg
cmp
push
mov
stc
js
mov
iret
pop
gs
rcrl
adc
jae
jl
ja
jb
icebp
fwait
pop
mov
jno
jne
mov
jno
ja
fwait
xor
xor
mov
notrack
sbbl
mov
test
dec
mov
lods
add
aas
cld
shlb
loope
pop
das
jle
jecxz
pushf
call
dec
adc
int
ret
and
xchg
jne
stc
cs
leave
mov
hlt
cmp
fs
adc
orl
fimull
lret
inc
pushf
xchg
mov
clc
jl
and
js
es
popa
ret
xchg
and
or
loopne
xor
ja
adc
ljmp
jb
xor
outsl
loopne
mov
add
jg
jmp
icebp
xchg
mov
fbld
mov
and
dec
loopne
mov
hlt
xor
fiaddl
xor
jle
sarb
outsl
and
xchg
xorb
cld
dec
xchg
mov
push
sbb
adc
repnz
or
mov
mov
loop
push
pushf
mov
orl
sbb
jle
push
and
cmp
push
inc
icebp
mov
push
lret
xchg
outsb
stos
pop
cmpsl
cmp
and
xorl
popf
stos
mov
arpl
andb
add
jae
sub
cli
adc
xchg
mov
cmp
lcall
or
jo
pusha
mov
loop
jno
sub
or
les
out
mov
mov
inc
pusha
test
xchg
mov
xchg
hlt
mov
sti
mov
mov
or
leave
xchg
inc
xchg
movsb
daa
mov
jb
frstor
mov
push
xor
js
xor
leave
add
inc
inc
or
mov
xchg
daa
rcll
xchg
lea
xlat
jae
mov
add
xchg
jo
leave
mov
int3
negl
and
lcall
ret
negb
pop
mov
sub
mov
stos
ret
xchg
icebp
mov
in
mov
aaa
inc
mov
out
hlt
or
popa
push
xor
shr
adcb
mov
add
cmp
pop
jnp
fsubrl
fistl
jmp
mov
xor
cmc
mov
push
repnz
mov
xchg
movsl
push
int
add
sbbl
dec
or
adc
test
ljmp
aam
push
addr16
repz
pushf
mov
sub
adc
sti
std
sahf
lock
cltd
cmp
lods
dec
test
insb
sbb
or
ljmp
add
cmp
rolb
mov
dec
push
sub
dec
imul
dec
pusha
sbb
mov
mov
mov
lds
ja
rorb
jl
lcall
fldl
xor
jb
fnsave
ja
dec
adc
pop
xchg
or
lods
mov
mov
jne
push
aas
xor
xchg
push
jne
xor
inc
scas
dec
cltd
nop
fwait
xchg
sub
xor
sub
mov
mov
call
imul
and
mov
fsubrp
mov
dec
push
inc
ja
cmp
jb
in
jp
pop
or
nop
add
cs
mov
shlb
mov
jl
cli
movsb
mov
cmp
mov
loope
int
sbb
xor
das
mov
dec
cmc
xchg
cmpsb
sbb
lret
ja
mov
fimull
cmp
mov
sbbl
rclb
fdivr
pop
ljmp
dec
mov
imul
jle
pop
jo
cmp
jo
pcmpgtw
frstpm(287
pop
xorb
push
mov
mov
push
mov
mov
and
inc
jne
daa
xor
test
mov
mov
cwtl
push
cmc
push
mov
int
mov
iret
jo
push
jne
in
xchg
xchg
gs
xchg
jno
je
testl
leave
jbe
push
aam
ret
dec
pushf
in
cmpsb
jg
mov
push
mov
movsb
clc
mov
imul
lds
imul
mov
notl
lods
enter
repz
push
mov
push
rcrl
add
mov
sbb
inc
jb
daa
jb
cmp
mov
or
dec
push
push
xchg
xor
jg
in
cmp
fistps
mov
ret
rcr
xchg
xor
flds
mov
subl
aaa
shr
data16
nop
add
shll
dec
outsl
in
andl
cmp
int3
clc
mov
leave
mov
xchg
lret
aad
inc
push
adc
sbb
or
xor
jp
mov
mov
mov
adc
mov
sbb
jecxz
dec
push
scas
push
xchg
cs
xor
xor
int3
and
jb
inc
cli
dec
pop
dec
pop
xchg
outsb
cwtl
lahf
add
push
jecxz
inc
in
mov
aaa
adc
sbb
call
test
pushw
mov
pop
addr16
test
pop
jp
adc
dec
mov
jb
fstl
cmp
jg
fisttpl
fdiv
mov
inc
push
mov
cmpsl
jno
repz
or
add
dec
fldl
mov
jae
in
insl
add
mov
add
aad
lds
sub
cmp
push
add
fistpll
dec
enter
mov
and
jmp
jmp
push
ja
test
xlat
in
mov
push
sub
shrb
jo
push
repz
clc
pop
das
sbb
aad
mov
stc
sub
adc
jne
jnp
insb
jg
jp
aad
sbb
cmp
sahf
in
jmp
xchg
mov
add
jecxz
cmp
xchg
dec
hlt
mov
lods
jle
stos
out
movl
aas
insl
mov
inc
lods
pop
or
adc
and
pop
mov
mov
sub
add
es
jnp
dec
sbb
fimull
and
inc
fcomps
loopne
icebp
jno
movsl
sub
aaa
scas
out
int
mov
sbb
inc
arpl
rolb
fwait
js
cmp
push
cmp
cmp
push
mov
fldcw
xor
xchg
mov
ret
push
repnz
js
nop
mov
insl
mov
lea
jl
das
xchg
fwait
add
sbb
das
dec
mov
and
xor
sub
sub
push
gs
mov
sti
pop
in
inc
xor
sbb
cmp
fbstp
add
fxch
dec
outsb
adc
sbb
dec
adc
cmpsl
sbb
jecxz
add
in
adc
lods
mov
cmovns
xchg
sbb
sub
sub
cs
jo
pushf
xchg
sub
xchg
and
fadds
insl
add
pop
lds
std
insl
xor
mov
movsl
incb
cs
push
mov
inc
imul
subb
repz
imul
pusha
or
xor
xchg
push
arpl
adc
lods
ja
enter
stc
mov
mov
add
mov
dec
jecxz
jp
outsl
adc
movb
test
pushf
xor
test
inc
cltd
fldt
sub
aad
in
out
out
flds
xor
jle
scas
cmp
cmc
idiv
enter
mov
push
add
incl
inc
insb
pop
jnp
out
add
inc
pushf
push
popa
xchg
adc
dec
stos
sbb
cmpsl
sub
rcll
inc
pop
femms
rclb
mov
shrl
inc
ret
in
mov
mov
stos
ss
inc
dec
cmp
in
xorb
into
sbb
clc
dec
push
daa
icebp
xchg
sbb
outsl
pop
mov
loopne
fdivr
stos
clc
cmp
pop
shrb
ret
test
mov
imul
popa
add
cli
sbb
sub
sbb
into
or
bound
mov
cwtl
jl
cmp
or
cmp
sbb
outsl
mov
mov
add
and
iret
dec
jne
inc
loope
push
pop
ds
into
jns
inc
mov
hlt
inc
cmp
icebp
popa
push
pop
es
imul
out
repz
pop
in
mov
sub
inc
jp
je
daa
scas
clc
ficoms
or
cwtl
cmp
sub
and
out
scas
in
push
fstl
and
test
repz
or
add
out
fs
int
cmpl
lea
addr16
and
in
pop
cmpsb
jnp
pusha
jmp
sbb
xor
std
loopne
adc
jecxz
add
push
out
stos
int
jbe
enter
or
sub
adc
push
aam
xchg
sub
pop
movsl
dec
lds
out
pusha
mov
insb
dec
out
fdivr
cmp
fs
push
jae
and
rcrb
cmp
rcll
mov
push
adc
shlb
lock
add
lods
sub
jns
je
das
loope
dec
mov
outsb
pop
lods
inc
jne
movsb
ds
cmp
enter
clc
xchg
fldt
jo
pop
dec
fistps
dec
sbb
sub
pop
out
xchg
mov
into
mov
cmp
loopne
adc
leave
or
loope
and
or
xor
inc
sub
lods
push
stos
out
data16
pop
mov
rorb
pop
stos
cmp
xchg
inc
movsl
inc
mov
mull
les
ud0
mov
sbb
filds
arpl
std
out
shrb
sbb
sub
adc
div
mov
or
lods
fdivrl
out
pusha
add
je
push
je
mov
cmp
sbb
jecxz
jns
jns
mov
rcll
cwtl
mov
xchg
enter
stos
jns
cmpsb
jnp
add
int
aaa
clc
xchg
rolb
adc
addr16
add
repz
daa
push
std
out
dec
lcall
mov
loopne
stc
push
add
cwtl
in
je
or
cmp
ja
hlt
inc
scas
lds
cmp
subb
push
pop
in
hlt
mov
dec
pop
add
fbstp
jb
cmp
cmp
cmp
ss
sbb
fyl2x
inc
out
roll
adc
pop
xor
int3
cmpsb
lock
dec
outsl
jle
fisttps
bound
addr16
jmp
aam
xor
cs
dec
xor
aaa
in
das
js
inc
test
mov
mov
add
mov
inc
repz
and
fisttpll
insl
jne
cmc
aad
daa
out
dec
cmpsl
adcl
xchg
out
add
insl
mov
cmp
imul
or
iret
dec
add
ds
into
test
jge
push
dec
pop
cmp
ljmp
bound
sbb
mov
cmp
jb
rcrl
sub
stos
inc
mov
mov
cmp
xchg
jmp
mov
dec
and
jl
clc
ficoms
test
mov
jnp
xchg
dec
adc
enter
imul
je
mov
mov
pop
aad
jmp
push
xor
push
mov
push
add
cmc
mov
test
mov
out
pop
jge
cmpsb
mov
inc
push
rcr
ss
mov
je
mov
xchg
outsb
fnstenv
mov
mov
pop
mov
cmpsb
aam
mov
adc
aaa
lcall
push
imul
add
sbb
xchg
sub
mov
push
add
scas
xchg
xchg
cmp
xchg
mov
push
mov
jge
in
mov
cmpsb
shrb
sbb
push
add
iret
push
pop
dec
lods
and
push
cmp
jbe
xchg
xchg
or
mov
dec
shr
nop
cs
in
loope
mov
arpl
mov
xchg
setle
sbb
mov
pop
pushf
inc
adcl
cwtl
inc
stos
loop
pop
add
mov
dec
cmp
in
pop
stos
aad
enterw
and
push
xor
adc
repz
pop
push
pop
iret
arpl
mov
daa
outsl
push
shr
xchg
int3
mov
add
sub
stos
js
push
shll
std
adc
bound
mov
into
mov
out
dec
dec
pushf
mov
jmp
ja
lea
lahf
cmc
in
cmp
sub
push
dec
xchg
mov
xchg
mov
inc
lret
aaa
popa
and
mov
jbe
mov
and
mov
arpl
mov
sarl
gs
leave
inc
js
jecxz
les
inc
nop
pop
jmp
insb
enter
arpl
sbb
xor
test
fsubrp
orb
out
pop
or
jmp
lods
stc
lcall
ret
call
loopne
fsubl
test
jp
push
or
rcll
inc
cwtl
rcrl
sbb
je
xor
jb
add
loope
mov
shll
repz
cmp
ds
xchg
mov
sbb
and
cmc
lds
mov
js
push
add
test
push
sbb
test
adc
aaa
xor
mov
add
push
mov
cmp
aad
lret
and
xchg
scas
mov
push
mov
test
cmp
xchg
dec
fsub
xchg
pop
lods
xchg
int3
add
arpl
leave
pusha
test
ss
std
test
mov
iret
cmp
sub
out
cwtl
inc
mov
pop
dec
jns
cmpsb
mov
dec
fildl
and
sub
and
stos
rol
pop
jecxz
xlat
cwtl
lods
invd
das
adc
leave
clc
cwtl
int3
inc
dec
loop
jl
adc
jae
sbb
cs
or
jne
and
and
into
or
movsl
das
adc
jns
movsl
adc
mov
cmpl
mov
mov
push
or
out
xchg
and
int
jae
iret
ja
lds
sub
jecxz
sbb
xchg
ss
fwait
int
pusha
cmp
sub
lahf
push
fsubr
xchg
icebp
adc
enter
js
repnz
cmpsb
adc
jl
mov
cmp
fidivs
xor
cmp
add
and
cmc
mov
push
es
inc
jae
xchg
push
and
dec
repz
jno
mov
insl
inc
ds
fs
movsb
push
movsl
mov
repz
sub
jo
cmpsb
pop
je
jb
repz
popaw
mov
je
ljmp
and
aaa
mov
or
fistl
out
pop
fldenv
imul
das
pop
cmp
cwtl
out
xchg
fisubs
jnp
mov
push
cmpsl
sbb
jg
pop
aam
xchg
jo
mov
dec
mov
sub
dec
and
xchg
inc
xchg
jbe
in
mov
mov
lods
cmc
popa
mov
in
popl
sub
mov
std
xor
cmc
jle
fsubrs
push
xchg
jmp
js
dec
je
nop
je
test
std
psubb
je
or
mov
bound
and
movsl
or
iret
fcomi
rcll
xchg
mov
addr16
hlt
adc
pop
stos
add
mov
sub
xorl
mov
push
lret
jmp
sbbl
adc
mov
jno
jae
inc
pop
mov
rorl
loop
sub
cmp
dec
add
lods
enter
push
push
lret
push
fcmovb
push
addr16
jmp
jbe
sbb
xorps
xchg
shl
push
push
add
cmpsl
gs
lcall
ja
mov
jge
mov
pusha
mov
das
xor
jae
xchg
cs
pop
ja
jno
xor
cmpsb
int3
bound
dec
sub
or
xchg
and
test
dec
or
loope
not
sahf
dec
lods
xchg
mov
dec
pop
loop
mov
cwtl
mov
dec
sbb
jp
or
lea
add
pop
std
jp
inc
mov
cmp
xchg
xchg
js
leave
out
stos
cmp
mov
in
cmpsl
xor
in
jnp
mov
mov
orb
push
xchg
inc
and
dec
lods
xchg
ds
pop
cmp
dec
dec
pop
lahf
mov
add
adc
test
mov
lock
or
rcr
add
cmpsl
pop
cld
fildll
pop
sub
test
jb
mov
and
movsl
test
push
add
rorl
jg
push
push
cli
fs
add
cmp
mov
das
mov
popa
xorb
cmp
fdivp
mov
sbb
lods
insb
jne
push
push
jle
pop
sbb
ljmp
pop
push
mov
cmp
hlt
inc
or
sub
mov
pop
jecxz
xchg
cs
psubw
cld
dec
inc
scas
dec
aaa
pop
stos
mov
push
shrb
xchg
sub
test
jp
loopne
popf
or
push
mov
ss
mov
or
scas
mov
push
and
dec
int3
jb
lret
or
dec
pusha
lahf
fs
or
fdivrl
push
outsb
sbb
test
cmpsl
js
xchg
pop
adc
test
fnsave
or
lock
pushf
jmp
lds
out
std
repz
xchg
adc
ficoms
push
imul
xchg
xor
jb
movsb
comiss
sarl
lahf
popa
repnz
mov
insb
sti
push
shll
mov
and
xchg
lcall
xor
mov
mov
push
pop
shlb
mov
cmp
mov
adc
mov
mov
mov
lret
fsub
push
or
ja
or
mov
arpl
ja
mov
rep
cli
repz
xchg
xchg
repz
jbe
std
jbe
loopne
cmp
mov
and
xchg
ljmp
mov
pop
jnp
testl
scas
and
pop
fsqrt
or
jb
or
fbstp
cmp
mov
xchg
jno
nop
ret
sub
mov
lods
lock
insw
mov
pop
gs
int3
scas
mov
fisubs
stos
jbe
imul
xchg
loop
push
hlt
add
rol
inc
adc
aas
mov
mov
cmp
fimull
lcall
dec
ljmp
cmp
cmp
pop
dec
push
popf
jg
add
mov
dec
mov
aam
sbbl
hlt
and
or
in
adc
or
repnz
mov
popa
adc
pop
or
pop
push
aam
cmp
js
cs
cmp
ljmp
jge
xchg
fcmovb
loope
into
cmp
in
lahf
mov
pop
mov
subb
cmp
dec
or
popa
addr16
call
jp
loope
pushf
imul
bound
inc
and
inc
mov
mov
inc
pop
adc
lcall
sub
ja
aaa
outsl
mov
push
inc
loop
adc
mov
mov
movsb
negb
mov
cwtl
pop
ja
cmp
mov
arpl
cmp
add
push
sub
rorb
iret
in
outsl
ljmp
sub
lea
cmp
aad
and
and
mov
int
subb
jg
mov
roll
test
fdivr
lock
dec
call
ljmp
xchg
call
imul
inc
sbb
fstpl
in
sub
and
mov
test
sub
test
sbb
jbe
in
sbb
outsl
cli
jle
cmp
loop
out
out
adc
xor
cwtl
inc
daa
inc
std
enter
int
daa
sub
loope
inc
lret
bound
sub
loopne
aaa
mov
shll
daa
or
inc
push
in
in
xchg
push
xchg
xor
call
dec
adc
scas
lcall
jle
mov
pop
std
add
xor
js
shlb
into
subl
dec
cmp
xchg
inc
hlt
insb
inc
jmp
sub
sub
mov
shrb
pop
jae
std
jno
pop
and
mov
loop
adc
mov
mov
or
call
outsl
xchg
pop
call
sahf
stc
add
inc
jno
movsb
push
jbe
jp
fs
push
mov
cmpsb
cld
enter
clc
inc
mov
and
xchg
fldcw
add
or
cmp
and
mov
stc
nop
cmpsl
jl
or
dec
hlt
pop
cs
shl
sbb
push
aaa
lods
adc
imulb
pop
dec
mov
jge
sbb
std
jp
mov
repnz
insl
lahf
push
icebp
fcompl
in
inc
sbb
out
out
ret
inc
sub
dec
lods
xchg
push
cli
pop
dec
mov
or
adc
sub
insb
push
lock
mov
push
and
repz
mov
ror
pop
adc
pushf
jl
pop
xor
cli
and
and
lds
push
divl
out
dec
xor
jbe
fsubrp
out
sub
pop
scas
xchg
sbb
lcall
or
xor
ds
inc
sbb
or
inc
mov
int
ss
lods
mov
jle
fstpt
and
aaa
and
xlat
sub
divl
pushf
test
cmpsb
loope
dec
mov
pop
cltd
ret
mov
dec
mov
lcall
mov
sbb
adc
rcr
repnz
xchg
mov
fisubrl
jo
sub
jns
push
inc
cmp
xor
sbb
push
dec
push
dec
adc
stos
xchg
jnp
or
jo
inc
inc
xor
pop
mov
jo
inc
and
lods
call
xchg
mov
dec
ja
adc
xor
mov
aaa
out
mov
inc
push
xchg
jb
nop
pop
add
popa
lret
out
or
lds
inc
mov
cmp
es
lea
sub
in
test
daa
lods
push
mov
mov
cmc
out
sbb
jae
insb
pop
cmp
xor
pop
jle
aas
add
push
or
xchg
mov
cmp
hlt
stos
mov
clc
add
ja
fisttpll
aad
xor
into
push
adc
ljmp
inc
xchg
test
cmp
dec
imull
xchg
subb
scas
cld
pop
sbbl
xor
fcompl
scas
pop
cmpsb
push
jecxz
sti
repz
scas
repnz
mov
adc
lods
sub
pop
mov
scas
inc
or
dec
mov
sub
loop
stos
sub
mul
out
mov
sarb
pop
mov
lcall
arpl
std
add
lahf
cltd
xchg
ret
sbb
pusha
cld
insb
cmpsb
cs
mov
stos
psubsw
mov
in
pusha
aam
aad
cwtl
jae
cld
mov
dec
push
xchg
dec
testl
jnp
push
push
inc
pop
mov
xor
jbe
xchg
push
jmp
or
dec
jo
xor
insb
nop
mov
xor
jae
jnp
movsl
lock
clc
test
sbb
adc
jne
mov
and
xchg
lret
mov
pusha
push
sub
dec
push
or
or
and
inc
xor
cli
repnz
pop
orps
xchg
es
mov
test
fstps
test
push
fldt
jecxz
das
and
jb
std
bound
sub
cmp
and
mov
xor
mov
sbb
aad
push
inc
in
movsb
fs
cmpl
imul
stos
add
movsl
mov
and
sbb
sub
jl
outsb
mov
jne
pusha
xchg
jbe
ffree
lea
frstor
mov
pop
lcall
pop
pop
push
in
aam
sub
es
inc
and
ret
mov
xor
shll
adc
add
mov
jae
test
cmp
mov
call
mov
or
filds
roll
cmpsb
jae
jecxz
dec
test
ret
and
sub
lods
xchg
push
pop
adc
lret
push
mov
xchg
sti
xor
cmp
adc
ftst
jecxz
xchg
mov
adcl
repnz
cmp
cli
push
mov
test
cmp
pushf
pop
aam
shl
rcll
push
inc
lds
dec
cmp
dec
adc
shrl
ret
push
in
pop
mov
lret
repnz
dec
pop
out
int3
add
jae
aas
fs
mov
fcmovb
jmp
and
cs
int3
jg
xchg
xor
outsl
mov
lcall
mov
push
mov
roll
lret
cmp
in
dec
out
fisubl
shrb
or
inc
dec
add
xchg
and
pushf
sbb
xor
inc
mov
cmc
imul
ds
sahf
pop
insb
repz
cld
rcll
cmc
dec
inc
xchg
pop
mov
loope
fwait
mov
and
sti
lock
dec
push
mov
xchg
or
fwait
dec
xor
adc
sbbl
ja
rcl
cmp
nop
dec
in
or
push
mov
pop
mov
movzwl
mov
or
xchg
stc
xor
sbb
addr16
xor
adc
inc
sub
jo
mov
jae
ja
rcl
cld
shrl
jp
mov
out
test
sbb
jg
cld
xchg
mov
subb
cwtl
dec
pop
mov
xlat
loop
negb
cmpl
push
icebp
pop
lret
sarb
pop
add
ljmp
gs
test
mov
adc
and
xor
data16
cmp
daa
popf
jae
pop
push
ds
push
add
cmp
mov
lahf
xor
pop
stos
sti
in
movsb
je
in
cli
push
cmpsl
daa
or
mov
cli
pop
push
and
faddp
imul
push
adc
cld
push
cmpsb
repnz
push
test
stos
dec
xor
mov
popa
mov
into
xchg
clc
hlt
pop
dec
adc
dec
sarl
in
pop
mov
dec
xchg
mov
mov
mov
xor
test
das
or
xadd
mov
xchg
in
stos
mov
sbb
cs
jno
clc
pushf
inc
add
gs
shl
xabort
push
dec
mov
out
cmp
out
sbb
out
cmp
xchg
arpl
ret
cmp
jle,pt
jne
sbb
mov
cmc
mov
or
icebp
mov
add
ret
imul
stos
pop
ss
xchg
xor
push
push
ret
lods
cmp
mov
xchg
xor
popf
aam
mov
in
pop
addb
dec
mov
fucomp
jb
inc
and
in
pop
push
push
ficompl
outsb
lds
and
loopne
lods
mov
testb
inc
in
out
adc
stos
nop
shlb
fwait
xor
test
movsl
jo
inc
cltd
imul
jle
pushl
mov
mov
sub
stos
out
fisubrl
jg
push
add
out
lods
sub
mov
sub
cld
fdiv
lcall
push
dec
push
jmp
jne
xorl
dec
lock
add
iret
ret
cli
insb
push
sbb
push
aam
inc
repnz
jg
pop
inc
dec
les
aaa
push
adc
rcrl
pop
outsb
nop
insb
and
add
repnz
popf
gs
add
xlat
stos
out
sbb
aaa
sbb
xchg
shufps
loopne
push
jp
pop
lea
int
dec
xchg
pop
fisttps
dec
lret
pop
inc
jl
test
lods
xorb
xor
push
cmp
fcomps
call
mov
jmp
inc
add
mov
mov
cmp
insl
in
sub
ficoms
sahf
xchg
pop
mov
or
sub
in
pushf
pusha
outsb
and
add
fldcw
call
fimuls
cs
pop
or
cmp
dec
ret
ljmp
loop
das
inc
jp
push
std
shll
or
mov
aas
gs
cmp
inc
out
pop
fchs
lret
jmp
outsb
ss
bound
out
xchg
jp
and
sub
mov
cmpsl
lcall
aad
arpl
ljmp
sub
dec
lret
leave
movsb
pop
aad
fwait
fnstsw
movl
add
pop
mov
cmp
in
mov
rcrl
cmpsl
cmp
pusha
shll
loopne
jnp
mov
add
nop
adc
divb
dec
xchg
mov
rcr
cmp
je
ret
adc
arpl
mov
dec
data16
jmp
push
pop
lret
push
or
xorb
ljmp
pop
and
adc
gs
xchg
dec
bswap
cmp
jns
shrb
in
lods
jecxz
or
mov
adc
sub
dec
ds
je
out
sbb
scas
enter
fisttpll
mov
ret
push
out
push
sub
lahf
add
sahf
negl
loope
inc
dec
pop
add
add
repnz
xchg
jmp
test
into
stos
or
addr16
pop
sbb
and
test
fstpl
inc
pop
fwait
mov
jne
sbb
cld
inc
outsl
adc
or
lea
mov
stos
les
xchg
sub
mov
add
in
push
adc
add
lcall
cmpsl
xor
pusha
cwtl
and
aaa
mov
repnz
stos
leave
sub
sti
scas
jno
fidivs
and
into
aad
pop
sar
pop
xchg
inc
add
xchg
mov
dec
inc
loopne
add
pop
mov
out
hlt
sbb
push
jp
nop
sub
or
xchg
inc
in
jmp
lcall
xor
push
lods
or
bound
dec
loopne
mov
je
scas
mov
push
mov
mov
lahf
dec
mov
xlat
pop
jae
sub
mov
int
jne
sbb
push
out
jo
jae
or
ljmp
lea
movsb
sbb
mov
outsb
sbb
loope
pushf
lock
mov
mov
lds
cs
int
dec
aam
pushf
mov
mov
jne
in
mov
xlat
cwtl
xchg
sbb
cmc
mov
ds
cld
call
xlat
stc
pop
fisttpl
das
loop
mov
pop
ds
xor
insl
pop
mov
bound
mov
push
sbb
loop
call
jp
pop
mov
imul
scas
jp
insl
inc
movzbl
rcll
sub
test
inc
adc
stc
test
insl
push
fistpl
and
push
insl
rorl
cmpsl
cmp
std
push
and
jecxz
push
sbb
or
pop
in
jno
xor
and
mov
xchg
jecxz
cmp
cli
data16
cmc
loope
add
sub
adc
pop
cld
insb
inc
movsl
lahf
call
xlat
outsb
pushf
mov
push
ss
cld
cmc
out
sub
adc
fisttps
aam
xchg
pop
stos
sbb
mov
inc
rorb
cli
cwtl
xchg
out
ljmp
jmp
cltd
fisubrs
leave
test
jb
in
mov
jb
jecxz
mov
sbb
sbb
je
gs
mov
ficomps
add
insl
ret
int3
sub
and
je
adc
popf
rcrb
arpl
lock
jbe
mov
xchg
xor
mov
push
outsl
inc
cmp
dec
shll
outsb
mov
mov
insl
icebp
mov
in
dec
lock
push
cltd
int3
mov
mov
ficomps
push
push
and
mov
out
es
sbb
shrl
inc
and
and
pop
notl
jge
jne
into
sbb
sub
jl
cld
pop
out
loopne
mov
out
push
jecxz
sbb
loopne
mov
loop
add
out
aaa
cmp
scas
mov
scas
clc
pop
gs
pusha
push
jmp
out
sub
cli
fwait
push
in
xchg
cmp
jae
sbb
push
add
js
jb
test
icebp
inc
jnp
pop
mov
lock
add
cmp
inc
ljmp
sub
jb
lds
cwtl
and
int
loope
fisttps
push
add
lret
movsb
test
sbb
subb
xchg
xchg
je
dec
add
rorb
pusha
movsb
inc
fsubrs
lret
nop
push
sbb
push
stos
dec
enter
shl
jns
in
xor
and
ret
push
sbb
xlat
dec
fwait
movb
rcl
mov
dec
es
mov
inc
mov
pop
mov
pushf
cbtw
lock
xor
lret
add
jb
fistpl
stos
repz
pop
and
inc
mov
xor
loope
and
arpl
test
mov
push
movsl
imul
stos
arpl
xchg
aas
xor
imul
push
xor
xchg
cwtl
stos
jecxz
cwtl
mov
ds
ljmp
je
xor
mov
js
cmp
adc
sub
outsb
mov
fs
sahf
push
xor
pop
mov
pop
ret
insb
mov
popa
fs
push
dec
mov
mov
xchg
pop
lahf
mov
and
push
notb
xor
jmp
inc
imulb
imul
out
jnp
test
enter
add
mov
jge
jne
mov
ja
pop
inc
adc
mov
loopne
wbinvd
xor
xchg
mov
daa
mov
shlb
pop
mov
xor
pop
adc
scas
mov
rcl
push
pop
push
out
sbbl
sbb
loop
ljmp
out
movsb
icebp
nop
inc
dec
add
jns
arpl
mov
sbb
mov
cmpsl
sbb
ds
ja
popa
mov
xchg
lahf
icebp
push
mov
fucomi
push
sbb
dec
ljmp
xchg
jle
in
dec
stos
or
mov
mov
inc
insl
loopne
ret
loopne
loop
adc
jp
push
insb
mov
push
add
fwait
out
jns
pop
cmpsb
int
das
test
test
adc
push
push
mov
pop
sbb
or
es
pop
jb
push
data16
adc
scas
inc
xchg
fld
add
xchg
shl
xor
push
test
cmp
fidivl
push
ja
mov
andl
pop
mov
dec
adc
addb
inc
test
jns
sub
jp
hlt
add
xor
fsts
adc
or
insb
pusha
std
negl
push
or
pop
push
out
test
sub
push
xchg
xor
aaa
and
call
mov
push
xchg
add
sahf
sub
ja
sbb
cli
push
mov
jle
test
ss
das
cmp
sub
sti
mov
js
lcall
cmpsb
adc
shrb
bswap
and
sub
or
scas
pusha
fdivs
pop
popf
or
push
xor
inc
and
or
mov
cli
push
jle
insl
repnz
adc
ss
std
push
loope
es
repz
aaa
out
sub
jbe
jno
jae
orl
mov
push
sbb
xor
push
enter
adc
call
les
ficoms
nop
cmp
jl
xor
and
mov
dec
cwtl
gs
hlt
faddl
jecxz
gs
xor
imul
pop
mov
or
jno
push
dec
add
dec
inc
sti
idivl
jno
stos
outsl
cmp
jo
jbe
add
adc
xchg
ss
in
xchg
mov
jge
push
push
movsl
ja
aaa
orb
xchg
push
andb
push
mov
int3
mov
push
test
roll
lret
lea
popa
outsl
sub
mov
jmp
push
mov
pop
fistpll
mov
jle
int3
cmp
inc
pushf
leave
pop
mov
repnz
dec
rolb
popa
jmp
pop
add
jg
sub
add
and
add
adc
xchg
push
pop
in
mov
pop
inc
in
cmp
mov
sub
mov
aam
inc
jl
jl
adc
pop
aaa
int3
jecxz
leave
xor
push
fs
lret
sub
pop
jmp
dec
lahf
jns
inc
ss
xor
lods
iret
or
pop
lret
sbb
into
jb
push
dec
lahf
add
pop
lahf
jns
or
popa
jbe
pop
arpl
jns
add
or
sbb
inc
jmp
jo
lahf
push
rorl
adcb
lret
push
pusha
mov
sub
imul
or
dec
jge
mov
cmp
cmp
daa
push
and
ret
shll
repz
adc
ret
cmp
mov
movswl
subl
mov
sarl
mov
data16
push
test
pop
int3
adc
std
push
push
cmp
jae
fimuls
add
nop
shrl
mov
mov
mov
std
js
adc
or
adc
fidivl
push
mov
jb
rcrl
mov
out
sub
cmp
pushf
sub
das
push
mov
lods
ret
mov
cld
mov
in
push
add
andl
xor
lods
adc
cld
mov
es
xor
loope
lock
mov
adc
cmp
in
out
bound
pusha
aas
sarl
sahf
or
jnp
fists
scas
xchg
data16
loope
enter
mov
or
into
sub
dec
xchg
lods
aaa
add
ds
mov
outsl
into
pop
xchg
lods
es
push
inc
push
lock
dec
sti
xor
out
inc
add
sbb
int
js
outsb
dec
xor
fcom
push
adc
iret
adc
insb
test
push
rolb
jl
sub
jb
cld
mov
and
pop
push
xchg
mov
xchg
mov
pusha
into
mov
mov
mov
in
repnz
lock
sub
xor
and
sti
ss
lea
hlt
or
cmc
lock
imull
call
outsl
sub
nop
int
clc
in
mov
insl
or
xor
les
jge
sub
xor
mov
dec
cmpsl
xlat
xor
es
lret
add
push
stc
fstl
test
outsl
scas
and
sub
add
dec
loop
mov
push
pop
push
movsl
dec
adc
mov
mov
enter
lods
cmp
iret
mov
push
incl
lds
sub
sbb
add
mov
int3
das
jno
and
or
popf
adcb
add
lcall
daa
sub
push
popf
xchg
sbbb
insb
dec
add
jne
xchg
test
orb
inc
push
dec
mov
sbb
adc
out
mov
pushf
push
dec
push
pop
hlt
adc
lock
pushf
clc
and
in
divl
lcall
adc
cld
ficoms
shll
mov
pop
scas
dec
adc
decb
xor
in
and
jg
cmp
lds
push
les
add
lahf
rcll
pop
dec
iret
cmp
cmc
movsb
in
out
dec
jle
je
adc
xchg
mov
js
pop
xor
lods
sbb
dec
adc
stos
and
xorb
and
jl
and
push
aam
inc
ds
shlb
je
mov
cmp
popa
cmp
addr16
dec
jmp
lret
popa
lock
pop
adc
in
push
cwtl
es
shlb
inc
mov
aaa
aam
into
mov
push
mov
leave
mov
repz
xor
add
push
into
adc
loope
fwait
stos
add
sbb
and
pop
enter
repnz
push
xor
sub
or
sbb
cwtl
xor
shrb
orb
jae
xor
fists
mov
jp
jae
xchg
add
jae
cmc
inc
out
push
mov
roll
push
mov
andb
sbb
jmp
jne
inc
leave
pop
push
cmp
fiaddl
mov
sub
mov
cmpsb
out
xchg
hlt
xchg
addb
push
dec
cmpsb
lds
xlat
call
sub
ficompl
repnz
xor
aaa
cmpb
enter
and
ljmp
xchg
xchg
lock
out
and
addb
dec
mov
and
test
adc
jle
pop
pop
test
popa
push
out
adc
aam
cmp
ficomps
ret
das
pop
mov
imul
push
fiaddl
ja
push
xor
fucomip
and
xor
and
xchg
push
jbe
das
hlt
mov
push
jg
movsb
shlb
cmp
adc
movl
roll
xchg
inc
mov
ficoms
and
sbbb
push
sti
mov
add
xor
dec
adc
sub
dec
xchg
iret
pop
fs
dec
loopne
inc
fsubrs
notb
dec
dec
sti
out
pop
adc
mov
add
or
add
out
dec
add
push
push
inc
or
leave
jns
cli
test
and
aaa
jns
adc
arpl
xchg
aas
lret
lcall
icebp
adc
popa
lahf
xchg
fists
add
inc
arpl
clc
add
cld
out
ret
cmp
jl
scas
xlat
repnz
push
dec
pop
dec
xchg
jae
pop
push
test
and
arpl
lahf
push
sub
mov
lret
or
fnstsw
loopne
divl
mov
push
fcomip
push
stos
shll
daa
mov
mov
push
adc
mov
xor
cmp
les
xor
or
movsl
pop
imul
movl
mov
in
loopne
mov
jno
jmp
jnp
xor
int
in
fnstcw
pop
fwait
cmp
mov
jmp
adc
andl
int3
out
test
mov
pop
lret
cmpsb
arpl
xor
mov
jbe
lds
test
fisubrl
mov
je
pop
cmp
scas
mul
adc
test
mov
mov
orl
lock
cmp
cmpsb
jp
xadd
div
inc
pop
adc
or
or
mov
aad
sti
inc
repz
mov
stos
push
mov
dec
mov
gs
sbb
in
outsl
add
loope
xchg
add
dec
jp
and
movsl
fnstcw
test
dec
or
les
add
xchg
es
xchg
xchg
movsl
iret
jo
push
lods
insb
mov
xor
inc
dec
dec
js
cmp
jge
dec
in
dec
pop
jnp
jbe
adc
bound
ret
and
fwait
stc
lret
xor
xchg
push
inc
je
mov
push
fs
cmpsb
mov
mov
mov
lahf
icebp
inc
mov
clc
jle
add
mov
loop
cmpsl
insb
fstps
add
ja
add
push
pop
pop
pop
and
push
lods
xor
mov
ljmp
xchg
xchg
mov
test
pop
pop
pop
mov
adc
mov
xor
pop
fnstcw
mov
mov
fisttpll
addr16
xchg
cmp
insl
dec
outsb
out
cmp
jae
aaa
cmpsb
loopne
addr16
nop
and
sti
aam
pushf
xchg
out
cli
dec
sub
push
scas
es
sbb
dec
push
int
incl
mov
and
sarl
jmp
cmp
movsl
inc
cmp
idivl
or
pop
xchg
xchg
pop
jle
hlt
jbe
jo
sub
cs
lret
adc
scas
mov
loope
adc
pusha
add
adc
mov
lcall
kmovw
aaa
and
jnp
xchg
int3
lea
and
popf
xchg
dec
fimuls
push
dec
lea
jl
and
pop
or
sbb
fsub
or
stos
mov
mov
sub
sbb
pop
cmp
loope
sbb
pop
mov
jns
push
cs
leave
lods
xor
and
test
mov
popa
xchg
sbb
adc
inc
jb
lods
xchg
hlt
mov
mov
pop
mov
ret
sbb
dec
push
sub
mov
cmp
push
cmp
stos
and
enter
mov
push
sub
mov
lds
ret
gs
add
in
adc
imul
push
data16
or
mov
loop
sbb
mov
test
push
adc
dec
fwait
pusha
sahf
ss
lds
lods
dec
scas
cmp
jae
cltd
fstpt
mov
dec
gs
out
add
dec
add
adc
add
popf
mov
cwtl
aas
mov
mov
es
pop
jo
xlat
movsb
sbb
in
jb
or
bound
sbb
dec
add
sti
ljmp
sti
inc
fmull
sahf
push
ds
out
inc
lahf
adc
cmp
fidivrs
add
insb
hlt
inc
push
or
dec
mov
xor
rol
lahf
cmp
ds
out
sbb
dec
cmpb
movl
dec
pop
jb
xchg
adc
and
outsl
call
mov
adc
mov
add
loop
push
pop
cltd
ja
mov
sub
sbb
scas
jne
dec
cmp
movsl
test
sbb
out
loope
jl
add
mov
sub
jg
test
scas
or
sbb
syscall
loope
frstor
les
cmpsl
sbb
and
cmp
inc
cltd
fcoms
adc
ret
push
cmp
aad
insb
inc
or
lds
xchg
xchg
add
jb
sub
daa
mov
xchg
bound
ljmp
pop
mov
inc
imul
and
mov
fiadds
dec
jecxz
outsb
mov
jmp
fbstp
lock
ds
popf
insl
jns
loopne
int
scas
mov
inc
cmp
mov
push
pushf
inc
flds
lahf
scas
les
pop
movsl
pop
cmp
inc
mov
add
add
fcmovnbe
cmpsl
aas
pop
sahf
bound
outsb
add
push
jge
sti
rorl
xchg
jae
pusha
loop
cltd
lret
negb
jne
lea
jg
cmp
adc
mov
adc
imul
mov
out
mov
cmp
fs
dec
jae
mov
pop
or
add
stos
data16
mov
sub
fdivrp
mov
rolb
daa
sbb
cs
sti
leave
xchg
add
cmp
adc
push
xchg
shll
xchg
daa
or
repz
dec
test
aad
add
testl
popa
in
inc
aas
sti
mov
fnsave
ja
repz
in
leave
aam
dec
shl
aas
sub
mov
and
inc
sbb
push
jo
mov
call
fisttps
sub
jg
cmc
inc
aad
fisttpll
imul
mov
dec
cli
or
jmp
jnp
leave
sbbb
cmc
sbb
repz
adc
jbe
scas
xchg
xchg
or
mov
push
push
or
and
xor
xchg
sbb
leave
mov
mov
aad
test
jecxz
fisttpll
sbb
cs
and
or
lock
dec
inc
sub
cs
sbb
outsl
sub
out
or
push
mov
imul
hlt
mov
imull
int
mov
and
cltd
add
scas
add
enter
enter
mov
add
lea
mov
insb
xor
cld
xchg
xlat
cmc
mov
push
jecxz
je
andb
dec
es
xchg
fidivl
add
shll
dec
imul
insb
popl
mov
fimuls
mov
dec
lret
push
aas
push
push
test
add
loop
xor
jb
mov
inc
cli
xor
xchg
jbe
xor
dec
test
in
mov
adc
rorb
sar
js
in
mov
xor
sbb
lcall
jno
divps
popa
lea
daa
imul
popa
sub
mov
dec
jmp
adc
adc
fs
pop
dec
ds
add
cmovbe
repnz
lods
pop
dec
jo
pop
jle
or
pop
adc
inc
sbb
inc
fstps
jbe
cmp
dec
sti
xchg
into
lods
out
mov
sub
lods
popa
and
or
push
lods
add
jecxz
insl
aas
jno
add
inc
push
xchg
rcl
ror
mov
outsl
test
jb
push
adc
nop
dec
imul
repnz
dec
sbb
bound
scas
sub
mov
movsl
insb
push
mov
adc
loopne
or
mov
pop
clc
movsl
push
outsl
inc
jno
pop
or
aad
and
jno
xchg
jae
mov
jbe
in
jge
stc
imul
dec
ret
test
int3
stos
cmp
mov
jno
mov
and
shr
popf
mov
stos
cltd
jne
mov
loopne
xor
push
fnsave
jbe
and
popf
ja
fistpll
sub
mov
insb
jns
inc
mov
jo
mov
dec
ret
sub
and
fldenv
out
add
add
loopne
insb
add
xchg
mov
sub
inc
iret
shrb
testb
vpunpcklbw
nop
ja
sub
sbb
stos
dec
cmp
testl
lea
xchg
jg
xor
fnstenv
xchg
arpl
adc
enter
shlb
mov
inc
movsl
fldl
fcmove
jmp
mov
inc
repnz
jb
cmpsl
add
jnp
sbb
xchg
push
push
popf
xlat
dec
mov
cmpl
xchg
ljmp
adc
mov
ss
dec
xchg
into
or
arpl
lcall
aam
sbb
pop
shr
leave
test
dec
jns
insl
fdivrp
jge
xorl
fcmovb
pushf
mov
int
mov
and
pop
mov
pop
andb
push
xor
ljmp
push
stos
adc
mov
and
pop
mov
rolb
rcrl
sbb
les
insb
mov
aas
shr
inc
lods
inc
cmp
stos
dec
clc
in
jg
xor
fmulp
add
add
ljmp
ja
sub
sbb
out
or
inc
dec
sahf
mov
inc
negb
push
int3
mov
mov
pop
mov
xchg
xchg
mov
ss
dec
popf
pop
xchg
pop
sti
xchg
popa
fmull
fwait
stos
sbb
push
add
inc
and
lods
fiaddl
xchg
negl
std
scas
rclb
jb
sbb
add
push
stos
push
jge
movsl
push
rol
xchg
loopne
inc
dec
jle
mov
mov
sbb
pushf
cmpl
mov
sbb
cltd
sbb
and
ret
adcl
not
cmp
dec
cld
into
adc
subb
and
sub
cld
adc
aam
sbb
lret
es
loop
jb
inc
cwtl
cmpsb
gs
mov
in
lea
or
dec
inc
in
adc
mov
push
imul
xor
aam
add
cs
popa
add
mov
movsl
lcall
mov
jl
cld
lods
pop
stos
cld
and
sub
mov
inc
adcb
mov
mov
xchg
sbb
xor
xorb
roll
clc
ret
stos
mul
in
sub
pop
xchg
mov
inc
push
mov
int
cld
or
jne
xor
dec
fistpll
mov
mov
sub
sbb
inc
int
sbb
xchg
pop
add
ljmp
in
in
jbe
les
or
test
fisubrs
mov
das
lods
mov
loope
adc
fwait
cmp
cmp
cmp
lods
iret
add
xor
push
mov
inc
and
jmp
xchg
ret
add
pop
push
nop
mov
inc
clc
sahf
push
cmp
and
push
dec
cmpsl
pop
stos
pop
cli
mov
stos
mov
jl
jbe
mov
je
lahf
cmp
pop
and
push
in
xor
pop
lcall
mov
lods
cli
jmp
sub
lahf
int
xchg
mov
push
dec
ret
cmpsb
or
insl
out
and
fsubs
jnp
insl
insb
jae
or
out
pop
rolb
movsl
jne
jge
das
and
mov
popf
push
adc
jge
pop
mov
xor
push
lahf
popa
pop
push
fs
jp
sbb
jns
or
pop
mov
adc
or
adc
pop
aad
and
rol
lret
pop
in
ret
mulb
loopne
add
cmp
jmp
xchg
cmp
les
cld
rolb
or
in
jnp
mov
mov
pop
mov
xchg
les
in
or
loopne
adc
jecxz
xchg
jge
test
add
mov
lret
leave
pop
cltd
push
rorb
cmp
lahf
lret
cmp
cmp
ret
sub
addb
inc
in
pop
nop
lcall
jl
pop
mov
iret
rorb
stos
nop
adc
pushf
and
jge
lret
dec
jbe
dec
and
sti
xchg
out
lret
mov
xlat
inc
or
push
lret
inc
inc
movsl
xchg
add
aam
jg
pop
int3
mov
pop
or
dec
pushf
aaa
scas
jno
dec
stos
fistpl
jno
sar
cmp
jae
mov
pushf
rol
sahf
out
mov
adc
mov
lds
dec
inc
mov
lret
add
sub
ljmp
and
out
into
jl
rorl
repnz
fnstsw
mov
hlt
sub
scas
outsb
rcl
and
cmc
mov
mull
jge
push
pop
xchg
push
jne
push
push
lahf
addl
outsb
fs
into
popa
dec
cs
push
jmp
or
inc
rorl
sar
mov
and
jmp
ja
pop
cmp
stos
addb
cmp
xor
xchg
push
and
cmp
gs
fbld
and
nop
push
dec
aaa
inc
inc
cltd
xchg
jle
add
mov
jl
aas
jl
std
cs
dec
aad
adc
adc
mov
mov
stc
cld
xlat
or
hlt
or
jecxz
divb
or
outsb
xchg
inc
aam
popa
rcll
loopne
imul
adc
daa
aad
pop
or
sub
faddl
jne
outsb
pusha
fidivrl
sub
bound
xchg
push
lcall
jmp
pop
bound
sub
push
daa
test
je
ja
into
or
mov
and
push
pop
loope
sbb
jg
adc
mov
ss
push
test
js
jo
xor
sub
mov
mov
mov
pop
dec
in
dec
and
mov
pop
sbbl
sbb
dec
mov
xor
ja
or
push
pop
lock
fadds
xlat
notb
cmp
inc
mov
fadd
icebp
aam
lods
cmp
mov
into
iret
xor
enter
movsb
nop
xor
imul
mov
cmp
jno
mov
roll
stos
add
add
mov
cld
push
cwtl
div
mov
les
jecxz
adc
or
inc
lods
insb
in
out
pop
jne
insb
pop
mov
add
sbb
lea
xchg
iret
mov
aam
stc
push
add
aaa
mov
cmp
sbb
or
mov
push
and
cld
pusha
add
mov
repnz
push
pop
jns
sub
std
adc
nop
rcll
push
push
and
pusha
jnp
dec
notl
add
mov
aam
orb
dec
scas
fidivl
cmp
mov
xor
fsubrl
adc
repz
xor
pop
inc
data16
fbstp
mov
jmp
stos
add
loopne
outsb
andb
mov
sbb
mov
inc
dec
js
fwait
rcll
cmp
leave
aas
cli
or
cld
lcall
jmp
or
or
and
push
scas
xor
nop
jp
inc
shlb
repnz
lods
arpl
data16
repz
jecxz
lods
push
lock
test
in
sbb
mov
mov
fists
lods
ret
rcrb
ds
adc
repnz
dec
xchg
rolb
xor
std
repz
and
pop
inc
ss
xchg
or
cld
mov
rorb
xchg
mov
lods
repz
mov
xchg
push
pop
mov
xchg
aad
dec
sbb
aam
sub
mov
mov
movsl
xor
sub
pop
jae
adc
test
cmpsb
mov
test
ss
and
xchg
xchg
jmp
xchg
cwtl
aaa
push
inc
int3
aam
push
rcrb
mov
hlt
push
jno
inc
mov
popa
push
jae
mov
cmpsb
mov
pop
mov
outsb
pop
mov
lods
dec
xor
stos
addr16
push
cwtl
sahf
and
shl
fsubl
or
scas
push
je
out
sub
or
pop
test
mov
pop
lods
fbld
in
pop
out
pop
cmc
rorl
and
adc
push
sbb
sub
hlt
push
dec
imul
jbe
jbe
dec
call
cmp
sub
push
dec
inc
sar
lea
daa
xchg
xor
pop
sub
movsl
sub
mov
repz
push
popa
xchg
inc
inc
or
test
fnstcw
js
lahf
push
or
push
cli
jle
pop
push
lea
cwtl
xchg
mov
mov
xor
jg
dec
mov
outsb
cmp
mov
xchg
pushf
sbb
repz
adc
test
xlat
jnp
sahf
rep
mov
xor
inc
dec
nop
lea
test
push
sahf
fistpl
fsubrs
xchg
jb
ds
jbe
sub
lahf
xchg
jmp
fimuls
xor
in
xor
xchg
aad
leave
mov
or
ret
pop
jae
aam
cmp
push
sti
inc
mov
mov
outsb
insb
shlb
dec
out
imul
mov
out
pushf
sbb
mov
push
mov
adc
mov
jge
lret
scas
dec
inc
jmp
sbb
hlt
test
sub
jb
sbb
push
cwtl
pop
ja
subb
outsb
out
and
inc
arpl
ljmp
flds
repnz
ja
jl
dec
sub
cmp
add
xchg
jmp
or
pusha
dec
lods
pop
clc
push
mov
sarl
sarl
ret
rorb
cld
pop
adc
jae
add
insb
mov
sahf
xchg
lock
inc
sub
into
jns
imul
aaa
stc
lahf
pop
sarb
sbb
mov
pop
adc
push
jno
xor
insl
sbb
cltd
scas
sbb
pop
mov
hlt
test
enter
icebp
sub
add
adc
arpl
adc
and
popf
sarl
xor
inc
add
jnp
lcall
jp
dec
cltd
inc
mov
mov
sarl
fdivp
shrb
cmp
imull
xchg
incl
shlb
dec
xchg
nop
stc
and
mov
inc
and
lret
push
fmul
ljmp
dec
mov
mov
out
fwait
aad
loopne
and
push
cltd
xlat
jg
mov
adc
and
mov
movsbl
sub
sub
mov
cmpsb
inc
clc
in
out
imul
fldl
nop
cmp
jns
stc
je
shll
test
mov
cs
mov
in
jecxz
mov
hlt
aaa
pop
icebp
dec
jnp
jle
test
negl
stos
fisttps
fiadds
dec
and
jmp
rol
dec
sbb
dec
lret
enter
jbe
sub
cmp
shrl
mov
xchg
or
xchg
mov
xchg
aaa
inc
xchg
cmp
jg
inc
repz
aas
call
sub
xchg
jp
xchg
in
xor
dec
dec
dec
test
jno
fcmovnbe
mov
scas
stc
mov
push
and
lods
hlt
sbb
shl
and
pop
ljmp
aas
lcall
sbb
or
add
pusha
xchg
test
pop
mov
mov
xor
jns
ljmp
rolw
cmp
mov
mov
ja
aam
bound
lds
pushf
mov
mov
sub
jae
fmuls
cmp
sub
int3
xchg
sbb
insb
jno
or
or
enter
add
mov
adc
ftst
popa
leave
jnp
xchg
iret
inc
mov
fwait
pop
lods
ljmp
xor
arpl
aam
mov
mov
inc
adc
jbe
fs
inc
mov
out
cmp
dec
test
fs
or
push
xchg
adc
insb
add
add
js
cmc
fdivs
mov
mov
pusha
outsl
flds
sub
xchg
inc
stos
das
icebp
adc
xor
sbb
jae
xchg
adc
loop
leave
movsb
dec
push
mov
lahf
imul
mov
pop
gs
int
adc
mov
pop
or
les
pop
adc
cmpsl
daa
xchg
stos
push
cmp
dec
or
add
dec
dec
push
and
inc
int3
mov
jo
daa
xchg
dec
icebp
xor
test
arpl
rcll
push
pop
test
stos
lret
ljmp
sub
xchg
sub
mov
push
mov
push
imul
rcrw
and
dec
push
xchg
push
adc
fcom
pop
xor
push
test
mov
or
repnz
xchg
stc
mov
and
std
mov
scas
cmp
sub
pop
dec
jp
or
push
js
cli
sub
iret
xchg
sbb
xor
and
and
and
idivl
sarb
mov
popa
ret
add
xchg
iret
repnz
sarl
or
mov
pop
popa
push
dec
mov
dec
loop
je
leave
adc
test
aas
js
jle
inc
adc
adc
lret
adc
out
push
add
xor
cs
push
mov
or
incl
cmp
inc
adc
push
jl
adc
rorb
add
xor
filds
dec
inc
adc
dec
clc
push
mov
stos
or
negl
push
pop
fdivrs
arpl
out
inc
int3
lahf
iret
push
xchg
sub
jno
mov
xchg
inc
loope
in
xor
ret
or
sarl
xor
les
adc
inc
sub
aaa
jecxz
stos
add
ds
sbb
lea
ja
and
mov
gs
pop
xlat
loopne
mov
push
pushf
cmc
mov
sbb
outsb
leave
xorl
les
in
ja
nop
rorl
ret
outsl
in
cmp
out
pop
xor
mov
cmpsl
in
pop
push
jbe
dec
xor
insl
sbb
andl
iret
lods
mov
jo
push
xor
ds
push
mov
insb
and
dec
addr16
adcb
enter
add
rolb
dec
xor
push
insb
push
inc
or
pushf
push
or
xchg
fsubrl
das
es
shll
leave
add
pop
mov
mov
cmp
stc
test
cli
push
test
jo
bound
inc
xor
nop
xlat
outsb
mov
inc
xchg
jle
aaa
in
bndldx
jo
xchg
push
jbe
add
adc
sahf
lods
and
mov
cmp
add
xor
push
jnp
push
and
xchg
mov
mov
add
hlt
dec
lock
inc
jle
dec
jne
pop
mov
cmp
mov
mov
imul
sti
xchg
test
mov
or
cwtl
mov
dec
or
fnsave
mov
push
sub
test
fdivrl
mov
jmp
sahf
mov
rolb
cmc
shlb
jns
and
add
dec
pop
mov
and
add
fistpl
jae
movsl
or
arpl
insb
test
rorl
ret
ds
adc
xchg
mov
jno
cwtl
loope
cmp
ljmp
cmc
shlb
xchg
scas
mov
and
lds
mov
dec
stc
mov
inc
adc
adc
leave
out
cmc
std
test
in
pop
lods
stos
jle
ds
mov
fwait
pushf
xchg
mov
jae
sti
stc
jge
mov
or
sbbl
jbe
xor
mov
out
add
inc
or
push
and
mov
mov
lds
sub
inc
jno
inc
xor
rcll
push
add
aam
pop
sub
dec
xor
rolb
sub
xchg
and
and
dec
inc
or
push
fsubrs
xchg
fwait
stc
fbld
or
add
addr16
subb
or
dec
jg
mov
aam
add
mov
xchg
ja
inc
test
lea
jp
xchg
in
cmpsb
jo
out
and
or
xchg
mov
dec
dec
adc
int
dec
mov
pop
and
lea
adc
mov
xchg
shlb
movsb
lock
pop
inc
cld
lock
imul
mov
or
add
sahf
cmp
dec
iret
lods
btc
jbe
dec
sarl
insb
ret
mov
inc
fwait
pop
cmp
inc
mov
inc
lods
in
push
mov
add
add
shlb
cld
push
std
insb
inc
shrb
popf
adc
mov
lds
out
sbb
sbb
fisttpl
fcmovbe
xor
sub
or
or
xor
aad
imul
mov
loope
add
loop
mov
cmp
addr16
cmp
mov
adc
cwtl
cmp
shl
inc
out
sti
jp
xchg
mov
mov
jae
out
shll
rcll
sbb
aas
xor
xchg
stos
lcall
ja,pt
adc
sub
mov
hlt
insl
loopne
push
aas
lea
jge
lret
inc
insb
dec
xorl
and
icebp
in
mov
jne
xor
pop
fcmovnb
in
fcmovne
xor
push
int
pop
adc
mov
lock
adc
jns
fimuls
cmp
pop
std
xchg
andl
adc
lods
cmp
add
add
cmp
test
add
popa
adc
iret
mov
mov
xor
pop
and
imul
popl
iret
in
cmp
mov
fwait
sbb
rclb
testl
fldenv
lret
add
mov
je
fiadds
and
inc
jle
inc
jae
fwait
jl
xor
push
jmp
and
xor
cli
stos
jae
inc
push
sbb
mov
inc
roll
cmpsl
cmpsb
and
in
rolb
rcrb
push
pop
inc
mov
call
dec
jb
cmpsb
adc
dec
jae
inc
jae
aam
inc
js
out
clc
dec
jne
jge
ret
rcr
idivb
push
xchg
sahf
jecxz
fsubl
dec
xchg
mov
rcll
push
xlat
cmp
loope
inc
sbb
leave
jle
jb
mov
xor
push
mov
push
mov
mov
imul
jbe
sbb
addr16
dec
dec
jno
loop
outsl
adc
pop
or
push
clc
fdivr
lcall
ja
aad
push
popa
mov
and
mov
xor
dec
ds
add
mov
dec
push
xchg
inc
call
ror
les
jle
dec
jnp
add
adc
xchg
sahf
lret
outsb
nop
sbb
cmc
addl
pop
jmp
pop
sub
iret
sahf
ja
loope
mov
and
ret
test
arpl
add
je
push
js
sub
mov
stos
or
pop
mov
adc
pop
mov
push
fiadds
popl
sub
lods
adc
and
sub
sbb
adc
dec
mov
ret
cltd
push
mov
lea
cmp
and
mov
dec
in
cmp
push
mov
pop
mov
jo
xchg
xchg
pop
sub
rol
shll
lods
imul
mov
xchg
sub
fwait
push
push
mov
mov
scas
or
and
icebp
scas
cmp
aaa
mov
aad
xchg
sarl
stos
xchg
in
jmp
xchg
pop
adc
xor
pop
jns
cmp
inc
push
jp
mov
or
sub
add
fldcw
fdiv
xlat
mov
sub
xor
subb
scas
sub
jmp
into
push
insb
or
add
mov
pop
or
push
repnz
inc
push
icebp
imul
mov
ljmp
jle
outsl
add
mov
cmp
xchg
jg
cltd
adc
in
pusha
sahf
je
pusha
ret
jnp
lods
sub
push
push
mov
shrl
add
sub
pop
sbb
cmc
dec
mov
sbb
mov
fldt
xor
stc
push
test
xor
pop
fldcw
fmull
ja
arpl
jg
mov
imul
mov
sarl
pop
sub
ljmp
pop
mov
lcall
ljmp
jp
push
or
fnstsw
ljmp
mov
or
pusha
sbb
jo
push
jb
dec
pop
mov
loope
aas
movl
xor
cmp
leave
adc
sbb
push
test
pop
jge
push
stos
or
cld
cwtl
cli
insl
sub
pop
movl
cmc
lcall
xor
xor
xchg
repz
add
pusha
test
mov
push
rolb
test
pop
jae
fdivp
or
pop
pop
mov
xor
jge
in
scas
arpl
or
push
je
scas
xchg
pop
dec
ss
fmull
roll
xchg
push
push
movsb
mov
sbb
fcomi
pop
and
rorb
jae
dec
mov
scas
add
mov
cmc
sbb
std
cltd
loope
je
test
or
iret
add
push
push
jle
mov
popl
cmp
mov
fwait
outsl
cmovb
xchg
add
dec
push
xchg
cmp
test
mov
data16
push
xor
arpl
repnz
test
xchg
mov
divb
jl
jl
leave
sbb
and
sub
cltd
dec
pop
call
js
add
sbb
sbb
gs
shll
inc
push
insb
jb
xor
loope
in
lcall
fcomip
pop
mov
imul
not
mov
stos
sahf
nop
je
mov
mov
pushf
dec
scas
adc
sbb
dec
loope
syscall
xchg
fs
daa
pop
xchg
xlat
dec
and
ljmp
scas
push
enter
jl
sub
movsl
mov
mov
imul
xchg
inc
xor
das
adc
xor
fwait
sahf
xchg
add
rol
ds
sub
sarb
clc
mov
inc
jne
adc
mov
sbb
mov
fs
in
add
inc
add
rclb
js
push
dec
aam
scas
pop
call
mov
scas
fiadds
add
incl
insl
jne
outsb
aad
mov
jl
jmp
jmp
dec
xchg
arpl
xchg
loopne
dec
repz
xor
sbb
cmp
scas
imul
and
mov
je
push
inc
mov
ja
jg
setno
lods
adc
or
or
fldcw
icebp
jl
lock
fcmove
and
fistpl
out
xor
sbb
outsb
shl
push
pop
cmc
aam
sti
push
icebp
cwtl
ret
sub
jno
sbb
cmpsl
add
dec
shrl
inc
orl
lds
int3
lock
mov
fs
repnz
repnz
shlb
outsb
scas
aaa
push
pusha
popf
jl
test
sbb
xor
jns
sub
cmp
add
push
sub
cmp
adc
mov
mov
xchg
imul
pop
and
jnp
xor
or
cmp
sbb
sbb
jecxz
jb
outsb
lret
xchg
test
mov
dec
dec
inc
mov
popa
jecxz
outsl
push
adc
test
arpl
roll
xor
jae
sbb
loopne
movsl
sar
push
push
mov
les
call
repz
jge
sub
je
aaa
fiadds
pusha
mov
and
rolb
sbb
bts
mov
add
scas
sarl
stc
sub
movsb
insb
jo
add
mov
sbb
pop
add
pop
sbb
movsl
je
ljmp
cli
xor
push
jae
cmp
pushf
test
hlt
sub
je
arpl
clc
add
enter
mov
or
xor
bound
arpl
lahf
mov
xor
dec
adc
orb
insb
mov
mov
adc
add
fdivs
les
add
push
insl
cmp
in
add
xor
push
add
cmp
mov
in
adc
into
xlat
cmpsl
jnp
dec
lea
mov
aam
std
jae
jbe
ja
jnp
pop
mov
ficomps
mov
xchg
sahf
jge
in
push
lods
dec
andl
pusha
addr16
lods
sub
mov
ret
loopne
fistl
outsl
push
xchg
rol
shl
push
pusha
xchg
and
jl
mov
mov
add
inc
cmp
push
inc
xor
mov
add
in
scas
jo
orb
aas
cmp
inc
in
lcall
das
dec
cmpsb
insl
es
or
mov
or
cmp
xchg
aam
packuswb
pop
sbb
push
jmp
sbb
add
dec
divb
cs
pusha
stc
inc
scas
mov
or
sarl
lods
sub
lret
int3
add
xor
push
dec
clc
jecxz
and
adc
sbb
dec
xchg
xorb
mov
shrl
inc
sub
mov
mov
cmp
mov
push
mov
cmpsl
in
in
ljmp
enter
adc
pop
pop
test
lods
xchg
or
mov
lods
test
cmp
or
test
dec
mov
mov
or
sub
enter
stos
sarl
cmp
push
repnz
jge
fimull
loop
pop
cmp
sti
lahf
sti
cmp
add
into
push
shll
push
cmpsl
cmc
push
stos
scas
inc
aam
mov
cmc
sub
push
xor
pop
fidivs
leave
cmp
push
pop
cld
flds
js
push
inc
inc
xchg
cmp
std
test
adc
ja
pop
aas
mov
cmp
scas
ds
inc
push
xchg
addr16
lcall
adc
ret
imul
cmp
int
mov
sub
scas
push
outsl
icebp
mov
lret
dec
inc
out
mulb
ja
ja
lods
repnz
call
pop
lret
lcall
test
adc
sti
push
ja
dec
cmp
cwtl
add
jne
les
and
adc
or
mov
fwait
sub
mov
sub
in
cs
cmp
sti
das
sarl
addr16
lods
mov
es
sbb
fadds
cmc
mov
xchg
dec
bnd
mov
and
push
lods
insb
jb
pop
jno
ss
mov
adc
adc
insb
jb
test
cwtl
mov
sbb
test
mov
adc
cs
mov
cmp
cmpsl
loope
imul
jno
outsb
jg
out
test
les
pop
cmp
div
mov
mov
pop
icebp
lcall
mov
out
push
je
inc
sub
or
xchg
icebp
xorb
xchg
daa
jecxz
sub
fldenv
jno
sub
or
xchg
inc
les
leave
sti
pop
stos
fwait
mov
cmp
data16
std
decb
ds
inc
push
inc
lret
sbb
mov
push
xor
fisttps
mov
out
imul
cmpsb
loop
mov
push
outsb
xor
and
outsl
sbb
cmp
fsub
add
cmpsl
sbb
add
scas
clc
sbb
push
pop
mov
inc
imul
jo
mov
mov
mov
dec
outsb
test
push
mov
inc
out
jp
or
jae
mov
int
cmpsb
cmpsb
pop
mov
mov
cmp
cmc
inc
sub
mov
fistpll
push
push
repz
or
data16
adc
jp
xor
xor
loopne
dec
repnz
repnz
sbb
aas
xor
pop
aas
stos
mov
push
out
adc
sahf
fwait
or
jnp
cwtl
mov
pop
mov
sarl
push
lds
add
inc
jg
in
pop
sub
dec
inc
punpckldq
pop
aaa
xor
mov
mov
lahf
leave
and
pop
or
sub
dec
sub
xchg
push
jmp
ljmp
pop
mov
jae
xchg
sub
pop
ret
adc
pop
add
inc
push
xchg
and
testl
jge
mov
subl
mov
dec
jb
mov
ss
jle
mov
insl
popl
outsb
mov
push
xchg
push
cmp
xorl
lods
lock
ret
out
jo
outsb
xor
dec
jl
popa
dec
mov
add
jnp
or
xchg
dec
leave
jns
aam
adcl
add
iret
mov
subb
push
int3
dec
add
dec
pop
push
sti
je
inc
mov
adc
inc
mov
fadds
ss
and
aaa
jle
jp
adc
fisttpl
cmpsb
movsl
sub
add
int
xchg
sbb
cwtl
mov
mov
pop
test
xor
push
out
out
push
loope
loopne
xchg
movsb
add
ss
xchg
sub
cmp
dec
arpl
insl
ficoml
inc
mov
jge
loop
outsb
jne
fstpt
scas
repz
mov
mov
hlt
popf
cmp
cmp
addr16
int3
inc
int
pop
mov
add
lock
xchg
clc
in
in
inc
lock
push
pop
lea
sarl
pop
stc
int3
call
aam
dec
dec
mov
push
jne
xor
jl
int3
test
sub
adc
inc
imul
adc
xchg
cmpsb
call
aad
adc
arpl
mov
cltd
rcrl
rcll
popa
and
clc
das
iret
andb
data16
push
ja
push
repz
jmp
subl
shrb
outsb
shrl
or
shrl
aaa
mov
push
test
dec
out
mov
mov
mov
cwtl
std
inc
ss
call
adc
sub
cld
jo
push
mov
mov
or
mov
ss
test
shll
fs
jns
dec
pusha
divl
pusha
lcall
inc
dec
int
test
jge
bound
cmp
inc
or
jge
fstl
mov
and
and
cmp
dec
pop
cmpsb
mov
das
lock
dec
inc
cli
mov
add
loopne
cli
or
ljmp
cmp
leave
cli
rolb
cli
push
inc
jnp
pop
pop
imull
push
mov
adc
and
add
data16
cli
mov
xchg
inc
fs
loopne
mov
pop
pop
arpl
je
jg
mov
rol
lcall
mov
push
sarb
xor
lea
ja
sub
push
push
clc
imul
and
jg
lcall
jecxz
mov
ret
xchg
or
lea
addr16
repnz
and
jnp
test
mov
imul
out
imull
adc
in
mov
fwait
mov
pop
xchg
xor
add
push
dec
shlb
repz
xchg
cmc
mov
mov
addr16
dec
aaa
lret
dec
add
jbe
xchg
js
rcrl
lea
stc
movsb
xor
mov
rcrl
test
sar
dec
test
mov
push
inc
fistps
fdivs
lods
test
fmull
xor
adc
lea
and
clc
hlt
jnp
aaa
sbb
push
in
test
loope
push
sbb
cli
xchg
cmp
dec
repz
int
push
mov
xchg
js
insb
scas
mov
xor
testb
xchg
subb
mov
push
or
in
stc
loope
jno
xchg
insl
sahf
shll
flds
lea
in
cli
lahf
fldt
mov
adc
cmp
mull
sbb
test
mov
dec
mov
in
sub
shrb
imul
or
push
mov
not
into
cmp
and
push
shl
rcrb
push
xchg
xor
pusha
adc
dec
sub
mov
mov
data16
fbld
adc
and
dec
mov
adc
ror
pop
mov
push
sbbb
push
dec
pop
mov
int3
fcmovu
sbb
std
xor
mov
scas
pop
push
loop
inc
outsl
and
ret
xchg
loop
push
pusha
in
mov
sahf
lcall
nop
dec
movsl
ja
loope
movsb
rcll
pop
lea
cvtdq2ps
test
out
push
stc
decb
fcoms
not
enter
jl
cwtl
pop
add
add
clc
xor
jbe
jl
sbb
push
sti
dec
add
pop
push
mulb
fdivrp
jns
xor
pop
fcoms
jno
dec
mov
cmp
inc
inc
push
les
dec
xchg
fmull
pushf
push
dec
movsl
int
pop
cmp
adcb
and
inc
fsubrl
xor
pop
sub
mov
lret
add
mov
push
pop
inc
cmc
xorl
xor
sub
mov
pop
mov
push
xor
outsb
decb
fdivl
adcl
nop
xor
sti
mov
out
pop
imul
sub
mov
add
test
aas
jns
push
mov
mov
cmp
lahf
jne
shrb
jno
jne
insb
outsl
fadds
pop
mov
jo
ljmp
das
popa
mov
sarb
adc
jl
sbb
stos
popa
mov
jge
mov
or
fmuls
pop
lret
sub
push
inc
cli
stc
push
je
insb
cmp
add
lea
mov
je
call
ret
xor
push
or
push
jo
lea
and
gs
cld
add
mov
sbb
lods
popa
dec
aad
mov
mov
push
xchg
mov
inc
movsb
push
aas
rcrl
and
inc
fldt
xor
in
or
adc
cmpsb
sarl
leave
or
arpl
incl
xor
shufps
mov
pop
push
mov
xchg
xchg
out
add
jp
outsl
xorl
or
andb
movsl
aas
aad
in
es
adc
cmp
test
cld
das
lret
sbb
dec
inc
shrl
xchg
mov
mov
jnp
or
out
dec
and
aad
sub
cmp
xor
js
push
xor
adc
fwait
xchg
int3
sbb
les
dec
mov
outsb
ljmp
inc
fdivrp
adc
call
jmp
int
fs
enter
lret
je
or
rcl
mov
js
xor
shll
jbe
adc
or
jl
ret
jns
hlt
pushw
adc
fs
mov
ja
add
xchg
sahf
cmp
sbb
jp
push
ja
inc
clc
aad
sbb
sbb
fldenv
push
xor
lahf
bnd
ja
lcall
insl
cltd
mov
outsb
adc
cmp
pop
add
repz
xor
cmp
jge
pop
sbb
fxch
pop
sahf
fwait
adc
sub
ficompl
and
movsb
aas
cli
mov
pop
jg
add
clc
js
repz
aaa
pop
or
xor
nop
daa
cltd
mov
icebp
mov
enter
mov
test
mov
div
inc
jg
aad
cmpsl
inc
mov
test
push
xorb
fiadds
fidivrl
lea
daa
mov
test
xchg
dec
stc
adc
in
push
inc
jbe
stos
cmp
cmp
jle
push
xor
pop
cmp
cmp
movsl
fldcw
int3
push
clc
movsl
negl
adc
sahf
adc
hlt
lahf
sub
mov
jp
bound
arpl
sahf
xchg
inc
xorb
or
add
stos
stos
lret
es
and
mov
test
add
ss
mov
xchg
cltd
dec
add
or
and
fs
andb
mov
dec
decl
cmp
cmc
cmpsl
mov
jl
test
incl
jg
sbb
lods
jmp
stos
hlt
cmc
push
sahf
push
faddp
sub
pop
jns
outsb
mov
cld
inc
adc
sti
mul
sbb
jae
pop
je
data16
pop
cmpsb
pop
je
xchg
mov
and
cmpsl
leave
adc
arpl
jecxz
leave
in
leave
in
dec
push
sti
push
push
inc
in
sbb
adc
fldenv
ljmp
or
dec
jl
and
cmp
inc
dec
mov
pop
test
xchg
scas
sub
xchg
mov
add
incl
mov
prefetchwt1
pop
pop
repz
jmp
std
movsb
mov
ret
cmpsl
int3
movsb
sbb
mov
push
lcall
idivl
ret
mov
cltd
sbb
jecxz
cs
mov
inc
loop
sbb
jno
mov
ret
jnp
xchg
into
fsubl
and
mov
inc
sub
incb
sbb
insb
jecxz
xor
adcl
jmp
scas
mov
inc
jae
dec
jmp
xor
mov
div
cmp
jmp
jno
pop
ljmp
mov
push
ss
xchg
cmpsb
mov
loop
outsl
mov
mov
cmc
lahf
out
call
inc
dec
add
cwtl
pop
pop
xlat
xor
or
adc
adc
out
test
fisttps
cmp
sub
jae
stos
pop
push
inc
dec
push
or
cmc
test
and
out
pop
stc
cmp
addr16
lret
repz
clc
sbb
stos
hlt
sub
xchg
lcall
pusha
lock
sbb
shlb
xor
xor
xor
sbb
sbb
sahf
fstps
xor
pusha
les
lret
sbb
outsb
pop
lret
pop
sub
lods
out
arpl
sbb
mov
outsb
jle
pop
push
into
cmp
shll
cmp
movsb
ret
addr16
push
outsl
frstor
sbb
pop
mov
cmp
mov
bound
rcr
pop
sbb
daa
push
sbb
sub
push
leave
scas
jg
or
xorl
and
add
lret
aaa
pop
in
lea
mov
cli
jg
into
out
or
push
sti
xorb
mov
and
cmpsb
shl
popf
cmp
pop
hlt
lock
mov
rcrl
stc
add
mov
dec
stos
add
in
adc
scas
cmp
nop
sub
jno
aam
insl
stos
push
adc
es
in
xacquire
ds
fsubl
push
sbb
inc
insb
outsb
loop
add
xor
and
cmp
push
fsubr
adc
push
pop
or
icebp
cmpsl
shr
jb
or
shll
sbb
cltd
sub
pop
xchg
test
rorl
sub
in
jae
loope
orb
out
xor
js
jno
mov
popf
and
std
mov
fwait
cld
inc
push
mov
push
es
shlb
fcoms
xchg
inc
push
xchg
pushf
xlat
dec
adc
insb
mov
movsl
sbbb
sub
or
mov
pop
pop
pop
mov
jge
scas
ja
pop
into
cmpsl
xchg
adc
dec
jae
adc
push
jae
add
jnp
iret
xchg
sarb
xchg
inc
mov
stc
adc
in
das
add
jns
xchg
mov
hlt
in
sub
xchg
idivl
jg
sub
sub
scas
insb
xchg
sti
sbb
and
fisubrl
insb
sti
sti
inc
stos
mov
aam
mov
cmp
cmpsb
mov
pop
test
icebp
xchg
cmp
push
push
pop
test
push
es
leave
pushf
aas
inc
fs
cmp
push
cmpb
ljmp
lods
rorb
push
push
push
movlps
jns
out
adc
and
roll
add
das
xchg
adc
mov
mov
lds
lods
push
mov
xchg
jns
ss
pusha
fldl
and
cmp
test
xor
jmp
mov
push
test
repz
or
cmp
gs
ret
add
jecxz
adc
lret
hlt
std
sub
ja
out
loopne
push
std
and
xor
push
aaa
pusha
cmp
sbb
xor
and
mov
mov
mov
sbb
xor
clc
fiaddl
dec
dec
jecxz
es
jg
and
mov
cmp
xor
ret
jno
adc
fidivrs
loope
or
xchg
mov
push
rclb
mov
jp
addb
stos
cltd
loop
push
adc
xor
inc
in
std
pop
mov
lahf
cmp
insb
mov
sub
decl
mov
mov
shlb
or
sub
lea
and
add
ljmp
lahf
lods
imull
mov
pop
mov
push
mov
cmp
add
mov
scas
or
sti
adc
test
icebp
test
in
test
push
add
cs
call
cmpsl
ret
pushf
jecxz
movsl
ja
not
mov
ret
push
jae
int3
pusha
inc
inc
cltd
inc
cld
inc
mov
cmp
or
dec
adc
stos
rcl
movb
add
popa
cmpb
test
cld
push
fisttps
lods
mov
pushf
cmp
inc
addr16
dec
icebp
inc
cmpsl
mov
xchg
cmpsl
and
add
lock
fists
and
jno
mov
out
lcall
push
fidivrs
fs
roll
xor
cld
jo
mov
cli
xor
push
pop
mov
clc
sahf
dec
add
lods
mov
icebp
jg
stos
lahf
mov
aaa
cmp
lods
pop
dec
std
pop
jmp
imul
mov
js
mov
pop
xor
insb
cwtl
mov
xchg
aad
cmp
jnp
jp
xor
and
cmp
fucomp
aas
notb
xchg
or
pop
insb
fcoms
fcmovnu
rcrb
stos
ret
jp
or
mov
xchg
push
jne
insl
imul
cltd
lea
add
add
shll
movsl
orl
xor
xchg
icebp
dec
mov
testb
es
lods
fldl
rcl
inc
lds
push
xor
ljmp
leave
sbb
mov
pop
mov
rorl
xor
int
inc
inc
into
test
mov
sbb
sbb
jmp
xchg
divb
sbb
adc
mov
bound
fsubrs
jle
xor
leave
add
add
push
inc
fdivrs
divb
push
xor
dec
fisubrs
loopne
sysenter
inc
test
jg
mov
out
mov
subl
dec
scas
fwait
or
fs
insb
jmp
daa
insb
push
fiaddl
nop
and
das
pop
in
xor
es
mov
push
imul
cli
loop
popf
outsl
jo
sub
fmull
pop
xor
jg
adc
repz
cmp
xor
sub
add
sbb
mov
or
mov
inc
push
add
mov
addr16
adc
cltd
inc
xor
fwait
cld
push
std
sbb
mov
sub
incb
popa
andl
dec
in
es
mov
in
dec
dec
xchg
leave
or
popf
inc
sub
cld
mov
decl
inc
fucomip
jp
dec
ret
and
add
mov
xor
roll
je
sbbb
lret
jne
sti
xchg
xor
pop
sbb
enter
hlt
jne
or
sbb
shrb
cmp
das
pushf
shlb
jl
jno
call
shlb
push
pop
pop
sub
dec
nop
and
clc
pmuludq
popa
cwtl
in
mov
movsl
push
xchg
inc
bnd
enter
cmpsl
and
idivb
loop
jge
add
mov
jnp
xchg
push
jbe
shl
popf
jb
mov
inc
mov
mov
jmp
dec
sbbl
jns
fiadds
ret
xchg
imul
adc
xlat
cld
cmp
mov
push
mov
outsl
sahf
lcall
mov
push
les
or
mov
daa
lods
push
add
jo
pop
shll
dec
push
pop
mov
sahf
or
movsl
dec
in
or
xor
bound
jae
pop
popa
pop
pop
xchg
test
jmp
xor
cmpsb
cmpsb
lahf
xchg
mov
push
lds
fimull
mov
sbb
mov
pop
pusha
push
ja
shrb
shll
dec
jae
leave
mov
and
xchg
gs
insl
enter
jge
and
stos
imul
mov
adc
lcall
test
mov
jb
lahf
push
das
in
sbb
sahf
test
xor
orl
push
repnz
adc
aas
outsb
stos
pushf
test
xchg
out
out
orl
jne
repnz
cmp
filds
mov
ljmp
js
sbb
pop
push
lods
push
insl
jmp
adc
cwtl
or
daa
loop
adc
dec
lea
cmp
sbb
popf
sub
xor
add
xchg
dec
lods
xchg
jbe
jmp
add
and
inc
xor
pop
add
aad
cmp
mov
dec
ljmp
in
fcmovnb
adcl
mov
mov
call
repnz
loope
popf
repz
mov
inc
pop
out
ret
scas
rcrl
test
cmpsl
push
das
pop
add
adc
fdivrl
int
movsl
xor
xor
cmpb
push
inc
mov
fwait
ret
out
aas
subl
ret
ss
cmpb
enter
iret
push
andb
mov
dec
jge
mov
mov
daa
out
shrb
sahf
jl
ja
fsubl
les
lcall
sbb
pushf
clc
add
jo
pop
call
fwait
cs
es
addr16
inc
adc
loope
pop
fsts
out
fdivs
loopne
ljmp
fsubr
imul
insb
dec
scas
pushf
pop
mov
push
loop
mov
data16
sbb
aad
in
and
int
test
test
xchg
mov
jle
fldl2t
stos
pop
cmp
data16
out
sub
fisubl
std
gs
xchg
cld
data16
pop
cld
mov
addr16
sti
fldt
in
faddl
adc
inc
or
jns
negl
inc
push
int3
es
xchg
outsb
sbb
pop
ror
imul
repnz
pop
dec
push
pop
jb
loope
repnz
hlt
jge
adc
ja,pn
mov
popf
adc
movsl
es
push
mov
dec
aaa
mov
out
jp
add
int
and
xchg
sub
mov
xor
rcl
sbb
inc
dec
jae
dec
in
js
jno
ds
dec
inc
and
aam
das
mov
and
dec
push
fsubrs
fisubs
jmp
add
scas
inc
imul
inc
fdiv
mov
mov
add
xor
ja
mov
mov
ss
mov
xlat
arpl
mov
xchg
jnp
int3
sbbb
loop
lret
and
sahf
push
scas
jae
clc
dec
cmc
divl
lret
add
push
and
mov
fdiv
stos
dec
hlt
push
aaa
lahf
imul
sub
aas
aas
lods
scas
lahf
sbb
adc
sarb
fldl
mov
inc
aaa
repnz
lds
pop
xor
in
imul
in
mov
lds
lds
pop
cwtl
inc
scas
jmp
cmp
stos
js
mov
pop
push
jmp
lds
dec
mov
pusha
xchg
jne
fimull
dec
or
and
push
sbb
mov
leave
leave
adc
pop
mov
cli
imul
cmp
xchg
jbe
test
neg
jns
fisubrl
push
push
aas
jbe
imul
lcall
push
sub
outsl
divl
cmpsl
sahf
push
data16
cmp
adc
mov
loop
js
lods
es
dec
cmpl
cmp
cmp
outsb
shr
roll
int
sbb
mov
mov
fadds
orl
imul
mov
adcl
loopne
cmp
pop
or
loopne
pop
mov
addr16
adc
loopne
xor
xor
subb
push
ret
pop
sbb
into
out
xorb
inc
pop
outsl
xchg
sbb
xorl
lahf
jmp
dec
decl
or
clc
mov
or
sbb
sbb
repz
das
call
arpl
adc
jge
adc
mov
and
and
cmp
push
nop
sarl
ficomps
es
jbe
mov
enter
sbb
mov
add
push
cmp
addb
dec
adc
xor
mov
fsubrs
xchg
dec
nopl
push
cs
cmpb
cmc
mov
xchg
stos
push
cmp
stc
sbb
lds
mov
xlat
in
ret
pop
stos
or
inc
dec
pop
neg
push
mov
cmpsb
shlb
outsb
test
mov
mov
push
ss
xchg
jmp
pop
cltd
sub
cmpl
out
hlt
sbb
cwtl
mov
into
lods
bound
or
into
hlt
inc
loop
cmc
loope
sbb
int
mov
pushf
popa
sub
adc
mov
movsb
stos
es
pop
ja
sbb
jl
mov
fnsave
and
inc
push
adc
mov
cmp
and
pop
sti
and
or
mov
dec
movsl
pop
ss
mov
inc
stos
inc
cltd
jnp
jle
and
add
jle
cmp
push
xchg
sbb
repnz
adc
icebp
mov
jl,pt
arpl
sbb
cmp
addl
cmc
call
lock
cs
jle
push
jmp
rolb
leave
jle
jge
or
mov
popa
mov
mov
fs
dec
xor
stos
std
imul
sarb
ret
adc
outsl
xchg
ljmp
jne
mov
jae
mov
mov
je
xor
std
push
and
ds
mov
add
push
xchg
mov
sub
and
jg
lods
aaa
push
scas
push
xor
inc
call
lds
subl
xor
xor
xor
dec
popa
inc
std
jp
mov
xor
repnz
lahf
fcmove
scas
xchg
lea
cmp
mov
int3
nop
xor
add
jo
lahf
enter
das
push
mov
fwait
or
test
test
out
inc
clc
push
or
jg
adc
dec
pop
pushf
cmc
fldt
ja
jae
pop
fimuls
jg
inc
mov
dec
and
push
xor
xchg
adc
push
mov
cmpsl
dec
xchg
pop
add
subb
mov
test
in
insl
aam
movsb
outsb
stos
pop
jno
xchg
das
fsubrs
es
push
icebp
pop
push
add
cmp
sub
xchg
nop
sbb
hlt
and
push
or
hlt
mov
add
dec
cltd
jl
test
add
mov
pop
sahf
sub
sahf
pop
inc
jmp
push
loop
jo
das
pop
test
test
mov
inc
sub
movsb
ds
sti
jns
xor
cmp
les
xchg
in
ljmp
sbb
pop
imul
mov
or
or
sbb
jbe
xchg
or
fisubl
sbb
add
orb
imul
sti
out
loope
enter
pop
push
out
popa
mov
test
sub
jg
in
repz
lret
aaa
out
ljmp
sub
sbb
sti
pop
xor
rorl
inc
loop
gs
jl
ret
xor
pushf
push
gs
sub
std
subb
jae
xchg
adc
mov
xchg
cmp
sbb
cmp
jae
cwtl
xchg
mov
test
gs
test
cltd
xchg
jp
push
inc
fldpi
push
push
xchg
push
stc
xchg
add
hlt
mov
mov
icebp
add
jbe
dec
scas
in
and
rcll
inc
fnstsw
xor
rclb
nop
outsb
in
sub
arpl
test
push
push
shr
inc
cwtl
add
mov
push
insb
cmp
add
dec
lods
or
add
stos
idivb
sbb
push
addb
xor
incb
jge
mov
test
push
lcall
mov
sub
movsl
adc
shrl
fldt
test
mov
and
sbb
push
mov
movb
dec
cmp
mov
sbb
in
inc
stc
icebp
jo
mov
adc
rcll
fldt
ret
sub
xor
call
push
add
stos
mov
clc
inc
sbb
mov
sti
negb
ja
out
fbstp
mov
pop
xchg
jne
xor
jle
gs
push
jmp
sbb
loopne
push
xchg
icebp
xchg
push
fstl
lds
cli
hlt
stc
fisttps
fdiv
adc
dec
popf
xlat
addl
mov
not
in
mov
popa
pop
test
sbb
lock
hlt
xor
push
or
pop
lods
enter
push
mov
fcmovnu
test
jns
adcl
pushf
jp,pn
icebp
fnstcw
data16
inc
aas
mov
orb
outsl
mov
je
xchg
loop
xchg
int3
loope
xchg
xchg
clc
loop
repz
subb
inc
cmpsb
xor
ja
adc
push
pop
mov
jg
fildl
cld
xor
icebp
dec
mov
clc
popa
mov
fistl
jmp
adc
xchg
shll
pusha
or
sar
or
add
lahf
cmp
push
push
outsl
adc
and
lret
sbb
int3
lock
std
test
push
sbb
or
in
int3
lds
xchg
jns
xor
out
into
jmp
push
mov
add
push
push
add
xor
xorps
gs
or
mov
test
add
sti
push
divps
adc
inc
jmp
sbb
mov
loope
xchg
jo
cmp
xor
xor
rcrb
cmp
fsubr
mov
outsl
aas
jno
enter
mov
xchg
dec
mov
popf
aas
fstl
aas
inc
push
iret
pop
jbe
shll
in
dec
das
decl
cmpsb
cmc
mov
mov
mov
loop
push
adc
mov
ficoml
add
mov
loope
imul
mov
insb
add
scas
inc
xor
xchg
testb
add
add
test
dec
outsb
dec
mov
jmp
faddl
lahf
pop
scas
pushf
or
lret
and
jbe
popa
cmpsb
fcoms
xchg
adc
jle
push
push
push
sub
int3
ds
sub
push
mov
cld
or
xchg
cmp
cmp
and
adc
mov
jae
add
mov
out
ret
pop
shrl
loop
pop
mov
mov
cmpsl
push
push
psubsw
hlt
fcmovnu
push
push
filds
jp
jb
inc
sti
mov
sbb
call
nop
cmp
push
and
mov
mov
mov
addr16
arpl
ljmp
sub
push
jle
fs
mov
mov
sub
inc
jge
in
jno
mov
inc
pop
mov
test
or
pop
jne
push
cmp
xor
inc
push
or
push
mov
push
push
lods
jecxz
or
push
stos
iret
push
in
xchg
push
cmp
ret
std
js
stos
cmpsl
loopne
cmpsb
cwtl
cmpsl
out
int3
in
push
cmp
lock
lds
outsb
out
xchg
pop
mov
mov
iret
mov
test
mov
loop
out
cmpsb
or
and
mov
inc
lahf
jmp
ret
mov
in
sub
cs
cmp
shlb
fwait
or
jb
cmp
nop
cmp
sub
jl
mov
bound
aad
psubw
xor
xchg
scas
mov
test
ud0
popf
jb
mov
add
std
dec
add
and
adc
xor
add
push
fsubr
add
mov
scas
mov
mov
loope
out
sahf
dec
adc
cmp
jl
fistpl
inc
adc
sbb
ret
fadd
jbe
imul
push
xor
push
cmp
cmc
xchg
cmpsb
xchg
stos
xchg
ja
sub
and
or
dec
lahf
xor
in
cmpsl
loope
inc
stc
lods
sbb
mov
lods
push
inc
push
clc
fldt
mov
sub
cmp
sub
and
cmpsl
arpl
stos
jge
test
inc
imul
fwait
xor
mov
addb
lods
push
cmpsb
sbb
lret
inc
xorl
cmp
ja
rclb
fbld
insb
push
bound
or
notb
pusha
out
loop
ret
int
cmp
lcall
fmulp
mov
fmuls
xor
cld
iret
cmp
xchg
pushf
push
int
jae
imul
cli
outsb
mov
mov
aam
push
dec
xor
shl
lret
dec
xchg
inc
dec
imul
xchg
xchg
mov
xor
adc
pop
jbe
aam
and
push
and
fcom
in
loope
jae
int3
in
inc
les
arpl
lods
pushf
xor
fwait
and
daa
ror
mov
sti
dec
mov
xchg
rcl
cltd
xor
aaa
jle
jno
inc
and
jecxz
xor
or
ret
push
mov
loopne
clc
inc
cmp
adc
lods
imulb
ret
sub
movsl
adc
push
xor
enter
out
mov
jl
out
shlb
push
xchg
stos
xchg
mov
jb
xchg
and
adc
push
jns
imul
xor
jmp
out
bnd
jge
cmc
lahf
mov
jne
xor
push
je
test
add
fistl
scas
mov
repz
xor
pop
or
mov
dec
lahf
jne
fisubrl
jbe
mov
scas
cli
lods
sbb
cmp
cli
lea
sbb
jns
sub
loopne
loopne
imul
bound
sbb
sub
jbe
mov
sarl
leave
sub
xlat
jb
lahf
es
cmp
test
in
push
push
mov
adc
mov
roll
adc
loopne
cmpsl
push
push
pop
loop
push
jnp
sub
in
add
dec
and
es
add
pop
jbe
pushf
lahf
push
idivl
sbb
pusha
mov
shlb
adc
into
ljmp
push
pcmpeqd
repz
adc
push
xchg
cmpsb
ljmp
stc
repnz
sub
mov
mov
pop
push
or
xchg
lret
pop
addl
popa
xlat
push
mov
arpl
lahf
aad
mov
mov
iret
mov
fstpl
stos
sub
cs
shl
pop
xchg
jl
sbb
adc
pop
dec
and
or
out
loopne
js
add
push
mov
sub
repz
cmp
insl
out
sbb
arpl
pop
xchg
and
mov
pop
inc
inc
xchg
mov
sub
or
ror
inc
addr16
stc
jno
les
aad
incb
adc
lea
jns
fbld
std
decl
lcall
add
cmp
cli
or
cmp
mov
mov
jp,pn
adc
ljmp
out
loope
cmc
or
mov
fs
cld
xchg
push
sbb
jmp
ljmp
mov
lds
int
test
fnstsw
outsl
xchg
cmp
lahf
cmp
js
jno
pop
add
sub
movl
mov
pusha
repnz
aas
ficoml
jecxz
es
xchg
mov
mov
sahf
push
add
pop
adc
mov
addr16
xchg
push
cltd
and
insb
mov
xchg
dec
gs
ljmp
mov
or
mov
repz
test
addl
out
cmpsb
dec
mov
dec
das
inc
negb
adc
pop
test
insl
dec
outsb
adc
or
in
xchg
mov
inc
mov
push
pop
push
lods
call
into
hlt
cmpsl
outsb
and
aaa
out
pop
xor
or
int
loopne
push
je
sbb
cmp
mov
and
shr
jae
repnz
cmp
in
jle
xchg
mov
mov
dec
out
stos
or
xor
flds
sbb
pop
add
xchg
in
cmc
sub
leave
add
cli
push
xor
push
mov
xor
inc
aad
in
inc
jno
fisubl
lahf
lahf
gs
sub
sbbl
call
std
jmp
xor
sbb
fs
jne
popf
jecxz
lret
push
xor
cwtl
pushf
xchg
sub
repz
sarb
je
push
test
dec
cmp
in
out
lock
sbb
lods
out
adc
pusha
dec
mov
xchg
inc
pop
mov
mov
push
mov
repnz
outsb
mov
out
mov
rcrb
sarl
in
adc
xor
not
or
push
sub
or
lea
mov
add
add
in
jge
fsubrs
xchg
dec
mov
lret
inc
sub
shll
stos
adc
das
mov
inc
inc
push
dec
sarl
shll
push
xor
adc
int3
or
pop
pop
add
cli
jmp
fcomps
std
push
pop
xchg
add
sub
pop
mov
je
roll
pop
jp
push
rolb
stc
ret
xorb
ss
lods
bound
es
popl
movsb
outsl
inc
sub
sub
sbb
aas
dec
stc
sub
mov
loope
mov
imul
sbb
xchg
add
mov
mov
lret
stc
in
nopl
mov
dec
les
push
lods
pop
scas
jae
mov
jbe
xlat
push
addr16
sub
push
movaps
xlat
mov
cmp
pop
adc
push
mov
push
xchg
scas
stos
inc
bswap
cmp
ss
add
xor
sub
mov
cmp
mov
sti
mov
orb
pop
push
sbb
addb
out
mov
mov
sbb
fidivs
lea
ret
ja
lahf
sub
mov
jbe
mov
and
xor
pop
cmpsb
fs
das
cmpsb
cmp
jmp
pushf
ret
scas
sarl
cmpsl
sbb
scas
mov
es
xor
mov
mov
insl
xchg
xchg
subb
gs
cmp
fildll
inc
jecxz
jp
fcmovu
stc
dec
fldcw
pushf
dec
and
sub
test
popl
es
lret
mov
adc
fmulp
mov
cwtl
jb
cs
sub
in
pusha
jp
sub
jbe
push
fcmovnu
jmp
jecxz
sar
test
and
push
pushf
loope
xor
adcb
jnp
imull
cltd
sbb
cli
ds
clc
inc
xchg
rcll
ret
dec
fsubrs
out
pop
ret
insl
add
divb
mov
inc
out
fistps
lods
adc
rcrb
jecxz
stc
adc
out
dec
adc
clc
stc
hlt
mov
push
lock
mov
lret
divl
and
mov
jnp
neg
in
lahf
loopne
mov
aad
dec
xchg
loop
sub
cmc
dec
es
adc
xchg
in
jbe
std
int
test
dec
in
in
jb
cld
and
mov
pop
add
add
stos
out
sbb
mov
jecxz
jbe
xor
sbb
fstpl
push
popf
xchg
mov
cmp
sbb
cmpsb
in
mov
mov
pop
fldl
pop
mov
dec
call
add
aad
xor
pop
mov
push
enter
sti
jb
into
movsb
test
adcl
clc
pop
xor
rcrb
xor
sub
cmpsb
pop
aad
jecxz
les
jno
cmp
imul
outsl
mov
pushf
nop
popl
xor
add
or
test
cmpb
cs
mov
mov
push
push
pop
xor
or
cmp
cmp
sbb
jbe
sub
andb
fisttpll
and
adc
sub
adc
mov
shll
lds
push
mov
test
out
cli
mov
in
mov
jecxz
inc
ja
jnp
loop
dec
sbb
das
and
dec
add
testb
xor
cs
aam
cs
fidivrs
incb
es
cmp
push
add
dec
test
cmc
setl
jbe
xchg
mov
popf
mov
jns
int
shll
jo
jmp
outsb
inc
pop
hlt
gs
out
enter
jmp
jge
or
pusha
daa
mov
lret
add
fwait
cmp
pop
popa
pop
sbb
push
in
cmpsl
jb
push
push
scas
cmpsb
aad
push
push
lret
mov
fisubrl
xor
mov
sbb
sub
js
dec
xor
nop
xchg
xchg
lret
sub
fwait
push
cmp
sbbb
dec
ds
aad
pop
jge
ja
icebp
js
xor
push
xchg
push
mov
mulb
cmpsb
mov
pop
incl
mov
mov
fwait
inc
adc
mov
jle
xor
jp
lea
and
mov
test
cs
int
sti
xchg
add
cmp
jb
inc
or
sub
insb
adc
pop
adcl
xchg
mov
insb
loope
xor
clc
dec
iret
fs
out
in
jle
cmc
dec
stos
mov
and
lds
dec
stc
xchg
mov
pop
mov
sub
repnz
outsl
jle
xchg
les
insb
add
in
jnp
pusha
ret
xlat
mov
sahf
jns
mov
and
fsubs
call
mov
mov
xchg
mov
lret
into
popa
outsl
movsl
scas
in
add
aad
pop
mov
inc
xchg
adc
push
fs
insl
out
add
sbb
jne
pushf
roll
push
ret
or
sbb
das
mov
mov
andl
inc
push
test
out
in
fst
jp
ss
loopne
mov
jb
mov
filds
mov
test
loope
xchg
pushf
lods
out
add
pop
sbb
cmp
cmp
lds
lahf
sbb
mov
test
add
inc
ret
push
push
insb
out
inc
testb
mov
shlb
fwait
mov
push
mov
jno
push
test
mov
jp
cltd
into
jg
pop
lret
and
lahf
xchg
movsb
loop
inc
fdivrp
push
dec
fdivs
into
imul
mov
and
out
add
int
sub
out
fimull
sbb
lods
inc
in
sbb
repz
lcall
jno
aad
sahf
mov
cli
mov
jg
adc
dec
adc
jl
popf
jne
push
mov
push
mov
stc
adc
lret
mov
lahf
push
lret
jmp
dec
leave
xchg
pusha
rol
pushf
push
pop
or
pop
sub
pop
cmc
lock
das
cwtl
in
test
aad
in
xchg
std
mov
lock
or
shlb
pop
cmpsl
xor
mov
dec
add
fiadds
idiv
pop
movsl
add
dec
jo
jo
ljmp
cmp
shll
in
or
or
stc
cmpsl
fucomi
in
jae
mov
test
and
je
add
sbb
fmull
dec
addr16
jle
pop
mov
imul
pop
loope
pop
pop
mov
mov
cmp
shll
cmp
fs
outsb
or
xchg
dec
rcll
mov
imul
xchg
aad
cli
jne
sbb
mov
add
xchg
mov
adc
fimull
inc
leave
fcmovb
mull
movsb
jnp
scas
test
shl
and
popf
notb
sahf
dec
add
mov
and
sub
lods
xor
mov
mov
ljmp
stos
fwait
leave
test
xchg
out
popa
pop
es
dec
loopne
bound
pop
or
adc
sahf
push
andl
rclb
stc
adc
insl
xchg
inc
js
sub
xor
movsb
ljmp
test
push
xorl
fisubs
aam
shll
xchg
mov
push
xchg
lcall
sbb
lods
test
cmp
mov
iret
pop
adc
mov
jo
mov
addb
add
lret
cmp
push
ja
add
pushf
popa
scas
frstor
jle
dec
xchg
ret
dec
outsl
push
scas
cli
les
mov
push
adc
pop
movsb
pop
outsb
loop
in
and
in
fidivs
ss
jnp
data16
out
inc
sti
pop
leave
and
in
or
das
shr
les
sub
xchg
pop
inc
or
adc
cwtl
jo
pop
icebp
call
vmwrite
outsl
fiaddl
aas
ficompl
jb
je
push
inc
call
dec
frstor
aaa
ja
scas
mov
sub
aaa
jle
mov
adc
mov
sbb
xor
les
scas
cltd
adc
movsl
mov
out
cltd
ds
stos
mov
int3
rcll
cmp
xlat
xor
aas
inc
mov
mov
shrb
mov
movsb
pop
xchg
pop
push
push
es
jle,pn
push
rol
pop
js
decl
mov
jnp
or
mov
loope
pop
push
sbb
xchg
scas
cmc
sub
in
xor
outsl
mov
test
sbb
pusha
pop
push
outsb
push
movb
out
sub
adc
das
cs
mov
insb
or
xchg
pop
insl
sub
xlat
sub
xor
adc
push
outsb
mov
mov
lcall
xor
push
test
jo
push
mov
aaa
push
mov
dec
sub
mov
incb
ret
daa
loop
fadd
mov
pusha
outsl
sub
push
fcmovnbe
pop
icebp
push
enter
push
es
les
and
and
ja
jns
aam
xor
notb
jns
out
loope
js
mov
fistpll
cmc
cs
insl
cmpsb
jg
sahf
xor
fists
push
dec
ret
push
pop
mov
jns
test
out
push
or
and
mov
aaa
lcall
cs
pushf
dec
sti
cmp
add
stos
and
pop
cs
jb
pop
xchg
jle
sub
sub
sbb
sub
fwait
push
mov
test
adc
pushf
xor
push
fs
test
insb
xchg
fmull
dec
and
es
mov
push
sbb
lods
or
iret
fs
xor
mov
adc
bound
push
das
lahf
mov
bound
or
or
xor
scas
lret
jecxz
outsb
scas
leave
mov
push
fists
sti
loopne
jle
js
mov
mov
xchg
sub
nop
hlt
inc
xlat
movsl
add
dec
int
outsb
rolb
arpl
aaa
insb
push
stc
ret
stos
test
aad
jp
dec
in
jnp
or
xchg
xor
fstl
pop
mov
lret
das
fsubrl
inc
inc
mov
push
icebp
xlat
push
in
cli
fisubl
or
lret
sub
call
xchg
imul
xchg
nop
int3
outsl
or
fisttps
and
xchg
xchg
lea
fs
sub
outsb
adc
xor
add
rcll
pop
xchg
js
or
daa
jp
clc
mov
les
jmp
xchg
div
clc
fistps
push
mov
cmp
push
jmp
inc
lahf
pop
pop
adcb
test
adc
and
insl
and
pop
in
push
jb
addr16
push
das
xchg
push
inc
adc
cmc
mov
test
cltd
sbb
sbb
rcl
test
icebp
jecxz
shlb
sub
popa
jmp
push
lahf
mov
mov
stc
cmp
ret
ret
mov
out
mov
sbb
lret
sbb
xor
outsl
and
dec
mov
rorb
arpl
enter
ljmp
cmp
test
jmp
mov
ret
loope
pop
addr16
pop
gs
inc
es
inc
clc
int
test
cld
cmp
jp
pop
xchg
xchg
aad
loope
add
mov
inc
and
inc
mov
mov
jge
xor
ljmp
ljmp
inc
sub
inc
popf
mov
xorb
pop
jge
dec
leave
dec
adc
dec
clc
xchg
cmp
jge
sub
fldl
or
xchg
mov
and
dec
clc
push
xchg
out
xor
loope
in
mov
scas
dec
aad
or
sti
incb
xor
mov
test
movl
aam
or
pop
cli
and
sbb
dec
gs
lock
jns
xchg
cltd
dec
mov
fs
jecxz
fsubrl
les
xchg
and
mov
lods
int
mov
lret
sbb
push
jge
movsb
in
sbb
imul
push
xchg
pop
cmpsl
in
pop
or
jno
fldt
xor
xchg
push
xchg
pushf
and
xchg
add
dec
jg
ds
pusha
andb
pusha
inc
fsubl
repnz
sub
cmp
lds
hlt
out
out
inc
inc
mov
cmc
les
mov
sbb
jbe
decb
stos
xchg
push
test
enter
daa
out
sub
dec
dec
adc
fiaddl
cmp
cmp
sahf
jge
cld
movb
fiaddl
loope
mov
lahf
leave
jb
dec
xorl
inc
cmp
push
cmc
cmp
add
dec
imul
pop
adc
mov
sbb
inc
je
loop
imul
call
jno
cld
mov
cli
push
je
sbb
mov
fisubrs
pop
inc
push
es
divb
mov
stc
inc
inc
dec
add
cmp
jl
jb
mov
outsl
or
mov
cmp
pop
mov
push
je
lret
jmp
mov
jmp
mov
cmpsb
jne
lods
xchg
lret
mov
xor
push
mov
addps
imul
rclb
mov
jge
adc
sbb
dec
movl
out
in
insl
mov
pop
xor
adc
leave
shrb
lods
push
les
insl
or
ss
mov
inc
inc
out
xchg
stos
loop
dec
jns
aad
std
fsts
repz
add
movsl
push
bndstx
jl
test
mov
fisubl
push
stc
stc
nop
dec
xor
insb
cmp
loope
jp
mov
inc
jp
fsubs
nop
xor
dec
xchg
outsb
or
sahf
cmpsb
sbb
rcll
popa
lcall
jo
popa
pop
jmp
or
mov
cmp
call
add
scas
aad
cwtl
inc
adc
sahf
repz
clc
rcll
dec
sbb
mov
cmp
jmp
mov
mov
push
or
insb
mov
sbb
clc
test
popf
dec
lret
push
loopne
mov
arpl
popa
arpl
push
push
mov
xchg
and
ja
nop
adc
repz
cmp
cmp
aad
push
pusha
sub
cmp
and
mov
jp
lds
fstpt
add
jmp
push
icebp
push
add
repz
daa
jae
or
jge
test
add
cld
call
jecxz
movsb
fisubrs
jle
or
sbb
cmp
jne
push
xorb
cld
aad
aam
xlat
stos
sub
repz
and
and
lds
inc
and
daa
aam
test
inc
das
fwait
pop
xor
jmp
adc
test
in
clc
in
mov
xor
xchg
mov
xorl
sbb
mov
push
add
fcmovnbe
push
jmp
ljmp
push
fwait
add
pushf
sahf
inc
shll
pop
push
scas
pop
mov
mov
lods
psubusw
std
xor
and
loopne
dec
xchg
insb
scas
sbb
jne
mov
cwtl
mov
enter
in
mov
daa
pop
push
hlt
push
push
inc
fistpll
sarb
int
cmc
dec
iret
pop
xchg
std
cmp
stc
outsl
adc
mov
subl
add
gs
test
fnstsw
decb
jne
inc
cmp
cwtl
push
in
fildl
inc
ljmp
dec
add
push
add
xchg
push
imul
lods
dec
push
popf
sub
loopne
fildl
rclb
mov
mov
push
rol
aas
add
int
imul
call
lds
pop
xchg
fdivrl
je
shrb
call
test
in
pop
mov
xchg
es
mov
xchg
mov
ljmp
test
pop
cmp
mov
ljmp
sti
mov
mov
shrl
ljmp
gs
jbe
push
out
test
mov
rep
rclb
mov
xor
scas
les
add
fnsave
ljmp
mov
imul
lds
loope
jp
nop
js
addr16
nop
mov
fists
adc
adcl
jl
rol
fsub
xor
lret
mov
imul
push
pushf
call
call
jg
mov
adc
sbb
arpl
mov
nop
subb
arpl
adc
movsl
adc
and
gs
std
aaa
int3
or
pop
jb
nop
push
andb
sub
mov
test
dec
and
sub
ficoms
loope
dec
xor
push
fistpl
and
jno
pop
dec
cmc
push
jb
repz
jns
icebp
ljmp
insb
adc
dec
test
or
and
js
daa
aad
popf
dec
lret
or
push
mov
ret
cs
mov
frstor
xchg
shll
mov
mov
inc
pushf
pop
and
rorl
mov
aad
sbb
push
sub
cmp
call
iret
cmpl
add
fs
rcrb
cmp
lahf
mov
add
scas
jg
jns
pop
icebp
js
jne
jbe
push
xor
divl
shl
or
jo
mov
stos
pop
lahf
and
fmulp
xchg
inc
aad
xlat
push
aas
movsb
add
fidivrl
stos
mov
add
mov
sahf
push
lret
mov
xor
add
lret
hlt
lock
jnp
fcmovb
fisttps
sub
adc
cwtl
cld
insl
sahf
sbb
mov
mov
mov
xchg
and
pusha
mov
mov
mov
insb
fwait
ss
or
imull
inc
ret
xor
sub
jmp
xchg
mov
arpl
ja
mov
push
pop
xorl
mov
mov
outsb
js
cmp
into
or
mov
adc
sub
repnz
hlt
push
loope
jecxz
mov
pusha
arpl
mov
fnstcw
sti
and
inc
sub
sbb
pop
sub
cmp
ja
addl
jns
jle
mov
adc
or
sahf
xchg
mov
das
xor
ja
mov
mov
rorb
stc
add
sub
andb
xchg
enter
xchg
enter
fst
mov
enter
lock
jmp
hlt
pushl
loopne
or
or
int
in
and
leave
fbstp
push
mov
mov
mov
pop
call
jmp
orb
mov
adcb
xor
cwtl
jge
fdivs
sbb
push
sub
and
or
inc
cmp
notb
and
cli
push
pushf
lock
sub
sub
xchg
inc
mov
fiaddl
adc
call
dec
mov
adc
lret
movsb
sahf
adc
es
jae
cs
cmp
pop
push
ja
mov
inc
xchg
sbb
shl
inc
pusha
les
xchg
mov
loope
ret
mov
jle
test
push
adc
das
dec
mov
xchg
icebp
loop
mov
and
repz
lahf
mov
adc
mov
xchg
mov
outsl
mov
inc
cli
mov
xor
dec
add
cwtl
stos
dec
lods
xchg
imul
lock
inc
es
stc
jl
push
cld
outsb
pusha
imul
das
testl
inc
mov
xor
rorb
popaw
adc
add
cmp
push
aad
xchg
push
add
inc
mov
pop
cmc
pop
xor
cmpsl
xchg
fs
jmp
or
cmp
rcrb
cltd
js
test
sbb
repnz
mov
loope
sbb
mov
div
jmp
ret
and
popa
lret
and
or
gs
fsubr
popa
es
out
fucom
adc
or
iret
jg
and
bound
mov
enterw
pop
mov
out
decb
in
decb
sub
pop
mov
pop
and
mov
movsb
pop
fdivs
outsl
nop
cmpsb
mov
push
in
fnsave
xchg
jae
push
xchg
mov
mov
sarb
leave
fs
xchg
jb
mov
jns
lds
lret
sbb
orl
inc
sbb
jmp
sub
xchg
xchg
mov
aad
jo
push
mov
fistpl
adc
insb
shr
lds
lret
repz
aad
imul
std
cwtl
ljmp
and
subl
call
xchg
hlt
pop
xchg
push
sbb
aad
jno
push
xchg
pop
scas
iret
xchg
pop
xchg
adc
mov
call
fnsave
jmp
jl
cmc
push
mov
pushl
push
add
lcall
and
ret
sahf
inc
mov
inc
insl
push
imul
dec
jnp
xchg
and
inc
pop
jb
cltd
cmpl
and
sahf
ja
loop
loop
push
inc
sub
push
stos
in
inc
fldt
lock
lahf
xchg
ss
ret
sahf
mov
repnz
sbb
sub
or
push
xor
out
adc
pop
xchg
stos
inc
hlt
inc
xor
jo
push
mov
insb
ja
jecxz
inc
sbb
int3
mov
fldt
dec
mov
dec
xchg
jae
pop
lods
add
mov
push
pop
movsl
in
pop
fdivs
cld
std
decl
inc
enter
jns
shlb
mov
and
mov
lds
dec
inc
mov
mov
test
out
push
pushf
mov
pop
sbb
out
enter
jno
fcompl
inc
push
enter
lock
cmpsl
addr16
dec
cvtps2pi
test
aam
pop
pop
cli
hlt
std
inc
sbb
je
jl
dec
cltd
stos
rol
push
lcall
outsb
sahf
cli
arpl
cltd
jp
cs
mov
jmp
pop
xchg
adc
adc
jmp
xor
lret
in
dec
sbb
leave
cld
jle
addb
push
sahf
mov
dec
jle
cmp
std
pop
or
loopne
adc
mov
loopne
sbb
loopne
dec
mov
mov
mov
xchg
add
mov
mov
cwtl
mov
out
mov
adc
pop
mov
rclb
fmul
push
pop
in
mov
shll
add
mov
sti
lret
pop
pushf
pop
lahf
mov
xor
cltd
je
int
xlat
cli
addl
test
mov
or
cmp
inc
push
lods
add
pop
ds
out
cmp
sub
push
outsb
scas
out
push
push
or
or
in
mov
or
xchg
movsb
jge
add
inc
daa
xchg
jle
fwait
and
bound
cli
dec
sahf
pop
aaa
cmp
mov
test
dec
cltd
and
jle
cmc
or
jg
mov
lret
and
pop
inc
std
sbb
pop
jnp
push
add
div
jle
popa
mov
cli
ds
loop
sub
lds
test
in
lock
sti
and
stos
mov
ret
jb
fdivl
cmp
test
insl
nop
inc
fnstsw
push
cli
sub
sbb
sahf
mov
mov
roll
mov
jg
push
pop
mov
outsb
stc
inc
cmc
int
js
mov
mov
xchg
vmovsd
inc
mov
imul
inc
pusha
mov
out
insl
enter
repz
mov
imul
or
popa
les
mov
pusha
mov
sbb
push
cmpsb
popa
pop
push
scas
fcoms
movsb
mov
fwait
cmp
cmp
cwtl
je
fwait
mov
adc
mov
adc
orl
outsb
rolb
insb
subb
dec
ja
aas
push
mov
xchg
adc
ja
stos
sbb
mov
mov
xchg
pushf
xchg
lcall
or
jp
and
dec
pop
xor
xor
mov
cmp
cmc
mov
imul
push
add
xchg
cmp
stos
fadd
push
add
jmp
mov
es
mulb
stos
std
or
add
outsl
sub
sbb
mov
lods
das
mov
mov
gs
xor
inc
ret
scas
aam
and
rcl
imul
add
sbb
inc
dec
sub
mov
iret
js
xchg
xor
xor
iret
es
mov
in
scas
pop
addr16
jge
cmp
fistps
xlat
adc
movntq
sbb
sahf
push
jle
add
sbb
mov
push
lods
frstor
inc
or
lahf
jo
in
out
sub
or
das
sbb
sbb
repnz
movsb
mov
in
and
in
lods
or
push
lcall
inc
pop
fstpl
xchg
cmp
ljmp
lret
pop
mov
out
push
cmp
popa
mov
lcall
sahf
mov
cmp
mov
shll
shr
stos
das
loopne
mov
shll
fisubl
mov
imul
inc
icebp
mov
addr16
addl
iret
push
xor
pop
jle
js
outsl
movsb
testl
pop
mov
aas
cs
mov
xadd
stos
pusha
fsubrs
push
hlt
lock
fsts
mov
fistps
jmp
and
insb
xor
lret
cwtl
les
adc
cmc
xor
cmp
jecxz
mov
mov
mov
aaa
adc
push
xchg
ss
lods
and
aaa
jmp
push
and
ja
dec
adc
jbe
fistpll
les
int3
and
fwait
lret
jmp
stc
jmp
jp
test
imulb
outsl
adc
sti
jne
jae
pop
jb
xchg
or
test
andl
adc
pushf
sarb
add
dec
iret
bound
or
repnz
sti
sbb
push
iret
insl
out
fbstp
test
jp
pushf
cltd
fidivs
pushf
sub
cmpl
pushl
dec
cmp
rorl
sbb
loopne
xchg
cmpsb
into
ret
xor
push
or
enter
out
pop
cmp
or
mov
sub
scas
jmp
loopne
jp
add
add
push
push
sbb
push
js
push
add
xor
lcall
sbb
aam
leave
sub
adc
push
cmp
push
fmuls
push
pop
jmp
add
xchg
dec
sbb
jl
movsb
sahf
xor
sub
sub
sbb
sbb
pop
xor
mov
lods
dec
lods
jae
ror
call
mov
daa
leave
call
test
cs
pushf
jge
or
and
cmpsl
gs
fstp
push
jb
dec
insl
pop
enter
push
loopne
incl
mov
lods
and
fs
test
xchg
movsl
add
cmp
daa
cmp
daa
mov
and
cmp
rcl
das
mul
push
push
jne
pop
test
sbb
aad
sub
or
inc
popf
rcll
int
sub
sub
stos
cmp
aam
imul
gs
and
inc
inc
pop
jne
pop
fisubrs
push
pop
daa
mov
mov
jp
std
and
cmpsl
mov
daa
sbb
sbb
xchg
xor
and
in
popa
pop
sbb
cmp
sbb
mov
inc
push
fmul
in
mov
stc
xchg
push
out
cs
loop
add
push
fdivr
addr16
adc
cmp
insb
xchg
gs
insl
xor
push
iret
inc
add
ljmp
clc
shl
pop
jle
sbb
pop
sbb
fisubrl
xor
inc
mov
out
mov
popf
jb
repnz
sub
dec
lods
popf
stos
cmpsb
cmp
mov
mov
and
cmp
mov
dec
add
xchg
xchg
addb
push
jle
adc
xchg
xor
mul
or
cltd
pusha
mov
inc
pop
or
and
and
jl
sti
int
cmp
sbb
and
outsl
xor
push
add
xor
daa
aam
fistpll
clc
push
inc
js
notl
pop
jg
je
lcall
out
clc
pop
enter
divb
rolb
push
inc
push
push
jmp
stc
repnz
fidivrs
test
push
dec
inc
push
xchg
cmp
shlb
es
fcoms
sti
xorb
nop
and
imul
sbbl
xchg
push
xor
std
fsubl
sbb
xor
js
push
ret
cli
mov
jecxz
pop
mov
sbbl
dec
jne
fldcw
mov
je
mov
sub
lds
in
pop
adc
or
dec
mov
outsl
cmp
sub
stos
gs
add
loopne
outsb
dec
fdivr
pop
push
movsb
test
sbbl
inc
add
pop
insl
pushf
loopne
out
cmpsl
jecxz
pop
xchg
and
cmpsl
adc
xchg
adc
cmc
leave
push
mov
mov
subb
cs
test
cmp
inc
lods
loopne
dec
icebp
dec
and
leave
cltd
shll
repnz
out
cmpsl
and
in
dec
sub
cmp
jno
jmp
stc
sub
mov
fiaddl
xlat
mov
das
cmc
pop
in
lret
jg
daa
loope
aaa
fisttpll
cmp
add
fsub
xchg
xchg
scas
test
insl
sub
push
cmc
push
int3
jmp
push
out
mov
stos
pop
in
stc
subb
addr16
into
xor
out
fwait
js
scas
pop
iret
cwtl
cmp
mov
hlt
aam
call
jg
stos
cmpsb
aas
mov
les
test
jae
xchg
jle
lods
mov
push
pushf
xorb
jnp
arpl
arpl
push
in
xor
mov
lods
cmpsb
cltd
ret
sti
imull
adc
cs
pop
inc
mov
fwait
fwait
adc
push
mov
xor
jbe
scas
mov
mov
cmc
nop
jl
rorb
lds
mov
push
scas
loopne
lea
ret
xor
xchg
inc
push
or
or
pop
cld
loope
pop
test
lahf
cmpl
gs
or
mov
popf
fldcw
out
mov
dec
unpcklps
mov
push
imul
mov
and
dec
and
and
repnz
mov
and
data16
rcll
out
outsb
push
or
mov
cmpl
xchg
pop
lds
into
cmp
sub
push
jmp
rcll
mov
mov
test
and
test
pop
adc
or
adc
in
lahf
clc
mov
pop
pop
imul
test
ja
ret
in
test
movsl
out
fldcw
fmull
inc
sbb
mov
or
cmpb
ret
sbb
out
push
repnz
insl
loopne
lret
lock
jo
neg
add
inc
js
fucomi
adc
inc
add
and
xlat
das
fadds
xor
add
xlat
es
aaa
aaa
or
xchg
xchg
cwtl
stos
push
sub
cwtl
adc
mov
bound
cmp
fiaddl
movsl
or
stos
fs
cmpsl
push
jp
adc
mov
arpl
inc
jmp
mov
and
repnz
mov
push
dec
adc
sub
icebp
scas
popf
lahf
negb
nop
test
jae
inc
repnz
mov
gs
cwtl
xchg
and
mov
sub
mov
sar
mov
jbe
std
xchg
mov
xor
adc
pop
je
mov
test
outsb
sbb
cld
xchg
and
mov
ret
shll
inc
outsl
lods
repz
fsubl
shl
sub
cmp
jne
pushf
lret
imul
ljmp
cs
outsb
push
jno
dec
psubusb
dec
dec
mov
imul
lds
cwtl
adc
sub
decl
movl
outsb
adc
jmp
mov
dec
and
xchg
lock
mov
into
ljmp
imul
lods
xor
outsl
adc
add
adc
mov
adc
stos
and
mov
adc
mov
scas
sbb
ja
movsb
xor
movsl
xchg
mov
mov
cmpsl
es
cmovb
and
jmp
shll
push
xor
inc
jmp
fmuls
lcall
imul
shrl
lods
push
mov
dec
mov
xchg
cli
mov
sbb
sahf
jge
sub
adc
scas
lcall
test
adc
das
cli
fwait
mov
sub
fmull
arpl
cmc
sahf
nop
cmpsl
pop
jl
xor
ret
xchg
rorl
test
dec
fs
xor
stc
scas
pop
rolb
es
xchg
orl
jae
inc
xor
loopne
pop
pop
adc
mov
cltd
shrl
test
in
push
leave
fwait
aaa
add
mov
push
sub
push
mov
xchg
lret
loope
pop
or
mov
push
sbb
daa
cs
xor
cmpsl
popf
sub
mov
sahf
sbb
adc
cmp
addb
cs
sub
out
push
test
mov
pop
jge
push
cmp
and
test
insb
testb
ljmp
fistps
cmp
adc
mov
test
mov
outsb
xor
popf
outsl
adc
jecxz
int3
add
xchg
adc
push
push
mov
xlat
push
jno
pop
es
subb
fcomps
sub
add
inc
mov
push
sub
stc
sub
mov
ljmp
mov
in
inc
mov
aas
enter
dec
popa
in
jo
lods
test
repnz
sarl
rolb
cs
dec
clc
xchg
pop
cmp
sub
sarb
jnp
sbb
mov
adcl
dec
mov
movb
dec
into
pop
cwtl
in
std
popa
gs
mov
in
addr16
clc
jno
loop
adc
mov
jge
xchg
repz
test
mov
int
and
xor
scas
loop
scas
push
nop
test
or
fidivs
push
leave
dec
test
cmpsb
int3
ja
push
sub
ja
insl
or
cmp
fsubr
cmp
stc
cmp
xchg
pop
mov
insb
cmc
adc
add
shrl
push
cwtl
mov
cli
iret
pop
scas
es
aas
je
push
enter
sub
mov
cmpb
fwait
test
dec
mov
mov
in
dec
mov
dec
xlat
xchg
pop
aad
fisubrl
rorl
data16
popf
jle
sahf
xor
rorb
and
pop
mov
int3
stc
push
fistpl
addr16
jbe
sahf
cmp
rcrl
jg
pop
ficompl
jge
add
mov
stc
in
in
in
rcrl
sbb
push
push
mov
aad
mov
mov
adc
lds
pop
inc
push
add
jne
and
scas
stos
and
push
scas
into
into
fildll
stc
mov
jmp
out
xchg
push
mov
jnp
dec
int3
cwtl
negl
int
repnz
lcall
jb
adc
fistpll
stc
filds
lods
rcl
or
jg
add
adc
out
in
movsb
sbb
loopne
or
out
pop
mov
insb
repnz
ja
aaa
jo
mov
das
xor
sbb
leave
cmp
sub
mov
cs
adc
dec
fnstenv
icebp
test
ret
mul
out
jbe
pop
push
cmp
or
testb
out
and
or
mov
sub
mov
jae
sar
mov
aas
xchg
mov
and
out
aas
and
adc
outsl
lret
imull
lahf
aaa
sbb
add
stc
xor
clc
icebp
push
mov
jp
ss
push
movb
mov
aas
jo
imul
mov
pop
sub
arpl
stc
push
sub
mov
loope
rcl
push
shlb
rcll
lods
shll
inc
lods
leave
add
lret
mov
xorl
adc
repz
bound
js
les
testl
fimuls
repz
stos
sub
out
out
gs
mov
leave
lods
into
stos
aam
es
scas
out
xor
cwtl
flds
cli
lahf
ja
and
cs
inc
mov
pop
sub
mov
xor
repz
loopne
sub
push
repz
popf
stos
xor
sbb
shl
std
movsl
mov
mov
jns
popa
sti
icebp
ds
inc
xor
xor
push
mov
movsl
xchg
int
add
ss
pop
adc
test
mov
jl
arpl
bound
cmp
cmp
or
pop
in
sub
or
push
xchg
cltd
stc
stc
imul
sub
int3
enter
fwait
or
xchg
cwtl
mov
imul
mov
xor
ja
mov
mov
and
cwtl
cmp
int3
push
mov
add
dec
js
mov
cli
das
in
outsb
inc
fisubrs
dec
repz
out
dec
dec
xchg
out
loop
inc
dec
xchg
nop
test
xor
sub
pop
adc
cmp
or
testl
jae
rorb
fistpll
push
cmpsl
add
int3
lock
mov
mov
pop
test
and
ret
push
sbb
sti
xchg
jg
push
scas
stos
pushf
shrl
fnstcw
aam
sahf
cmpl
xchg
movsb
push
xchg
mov
div
shlb
jno
and
cltd
fisttpll
adc
outsl
cli
cmp
cmp
or
in
je
arpl
push
out
mov
jb
xchg
jp
sub
sbb
cmp
dec
dec
leave
dec
dec
lcall
cmp
adc
int
adc
icebp
mov
inc
rcrb
sub
pop
dec
mov
pop
jb
outsl
dec
dec
in
adc
push
pushf
jb
mov
cld
addr16
and
adc
pop
cmp
pop
mov
ret
jle
and
push
dec
sbb
pop
fadds
sahf
pop
push
inc
out
imul
sub
mov
xor
or
pop
sahf
out
xor
ja
or
mov
jnp
imul
cmp
sub
cmp
mov
js
sub
and
push
dec
loopne
ret
cs
sub
adc
in
lret
sbb
pop
es
loopne
call
inc
dec
fiadds
dec
lods
out
rclb
fsubrs
xlat
notb
lahf
sti
sbb
dec
cli
push
clc
jle
sub
fdivs
inc
ja
xchg
stos
inc
xchg
cli
mov
lea
jle
jl
arpl
xlat
test
push
in
jo
nop
push
mov
mov
sub
mov
push
rclb
jns
in
push
cmpsb
adc
ds
fwait
repz
fwait
roll
pop
aaa
ja
popa
int3
jae
cmp
scas
jp
fwait
and
ds
mov
call
add
shlb
push
cmp
add
sti
or
stos
scas
shlb
pop
in
loopne
add
and
stc
mov
ret
lods
ljmp
test
sbb
sbb
cmp
push
sbb
mov
movsb
cmp
iret
fisubs
movsl
mov
ja
stc
mov
push
push
pop
xor
xor
jg
and
adc
mov
xchg
loope
dec
cmp
movsb
sbb
stos
push
movsb
repnz
les
pop
icebp
es
and
add
lahf
test
xchg
push
xchg
imul
rcr
dec
or
popf
adc
push
dec
cli
xor
pushf
cmc
adc
xlat
leave
cwtl
add
scas
mov
test
dec
sbb
xlat
outsb
sub
shll
and
pushf
cmc
push
jnp
icebp
test
cltd
cli
push
lahf
dec
in
jmp
sbb
push
int3
sbb
mov
sbb
xor
test
push
hlt
or
mov
xlat
add
rclb
pop
xor
mov
aad
aad
and
cwtl
mov
daa
jbe
or
jns
jb
adcb
sar
jl
loopne
iret
pop
int3
ret
or
or
and
repz
mov
fwait
dec
dec
or
and
xor
insb
or
mov
cmp
inc
jge
adc
fldt
jmp
stos
add
jae
pusha
mov
xor
lds
jl
xchg
push
xor
loop
mov
mov
dec
cmpsb
fimuls
lods
jno
fildll
orb
clc
jb
mov
push
loop
test
mov
dec
mov
pop
outsl
xchg
cmp
or
inc
daa
xor
in
mov
or
and
dec
pop
dec
mov
inc
push
push
mov
int
push
popf
cmp
jecxz
ja
fistpll
pop
mov
sub
mov
ss
out
xchg
sbb
fadd
add
add
insl
sbb
incb
xchg
mov
lods
sbb
cmpsl
stos
ss
ficoms
cli
fiadds
sbb
xor
int3
inc
cmp
push
mov
jle
pop
ficompl
movl
cltd
cmpsl
popa
das
ljmp
fnsave
mov
mov
je
fs
shll
loop
inc
leave
test
sahf
add
dec
jno
out
and
xchg
insb
leave
xlat
add
fldl
in
pop
mov
xchg
cmpsb
rcrl
pop
clc
jp
dec
ljmp
imul
hlt
and
pop
push
out
push
addl
std
dec
fimull
and
movsb
mov
inc
cmp
clc
dec
jp
jo
cmp
mov
sbb
mov
test
vpaddusb
lods
pop
pop
sti
aam
push
push
sbb
fistpll
push
and
sarb
dec
fiadds
stos
mov
mov
arpl
mov
movsb
mov
aad
push
sub
adc
jg
cs
xor
out
push
imul
and
lret
lock
dec
dec
sub
dec
lret
xor
pop
adc
icebp
leave
nop
xor
add
and
mov
imul
inc
lea
adc
repnz
filds
mov
mov
and
mov
mov
dec
pushf
cmp
das
mov
fs
jns
mov
cmpsb
pop
loopne
movsb
fcom
outsb
aam
xchg
cltd
mov
mov
test
pop
xor
xchg
jno
pop
es
mov
lret
and
mov
outsb
or
fsubl
mov
adc
scas
fldl
sbb
fidivs
outsl
dec
adc
xchg
pop
repnz
lods
jae
jge
ficompl
pusha
mov
or
add
dec
cmp
jge
sbb
mov
popf
cmp
jne
ficompl
inc
jb
dec
or
popf
inc
jo
mov
sbb
lea
stc
std
cs
cmp
mov
mov
fiadds
pop
gs
lahf
roll
les
icebp
push
xor
adc
hlt
and
insl
cmp
icebp
push
and
loope
and
test
or
mov
in
pushf
pop
lea
repz
nop
movsl
add
inc
shrb
sbb
cld
popa
lods
pusha
jno
mov
mov
cld
dec
rorl
push
aam
sbb
push
cltd
and
pop
push
mov
jnp
sub
stos
inc
or
push
jno
enter
pop
sahf
scas
dec
rorl
shll
bound
add
inc
or
int
addr16
pop
xchg
mov
jmp
out
addr16
fwait
inc
jns
jnp
adc
popa
cmc
cmpsl
iret
in
push
dec
imul
mov
in
add
adc
dec
xor
lret
iret
dec
or
pusha
in
sub
xor
ficompl
fisubrl
jno
popf
or
add
cmpsl
push
sub
outsl
jns
orl
jns
mov
xchg
mov
jmp
sar
cmp
dec
jnp
cmp
in
jbe
jmp
je
leave
inc
cmc
push
cmpsl
jecxz
out
std
mov
aas
sarl
cmp
and
in
xchg
dec
lret
xchg
insb
cltd
inc
ror
mov
fidivs
mov
xchg
mov
sbb
mov
or
inc
jg
jo
ret
sbb
sbb
lods
push
repnz
adc
out
test
lods
pop
xor
add
pop
jmp
xor
shll
inc
out
or
icebp
outsb
cmp
mov
lret
test
pop
add
outsb
nop
push
add
movsb
cmpsl
outsb
jp
adcl
loop
int3
push
dec
jne
pop
outsl
lcall
scas
sub
gs
mov
pusha
xchg
xchg
es
aad
jo
push
or
jne
mov
lcall
cli
jne
ffree
jo
push
adc
rcrl
adc
nop
cmp
cmpsb
pop
fwait
pop
repnz
dec
pcmpgtw
jnp
popf
fsubs
pop
dec
iret
cmpsb
test
test
or
mov
sub
xlat
cmp
inc
pop
in
fdivp
sbb
popf
arpl
push
push
and
push
and
add
xchg
cmp
inc
xlat
mov
pushf
jmp
cmp
inc
xchg
loopne
test
mov
loopne
insl
sti
xor
popa
popf
pop
push
xchg
pop
in
ja
push
add
cmpsb
add
sub
jmp
xchg
mov
add
adc
rcll
stc
and
jmp
call
arpl
or
mov
sbb
adc
flds
jl
repz
or
adc
xor
adc
shlb
call
pop
stc
cs
mov
negl
xorl
mov
pop
aam
pop
lods
in
pop
pushf
jge
pop
xlat
setl
mov
mov
dec
mov
jmp
fyl2xp1
fstpt
inc
mov
sbb
cmc
mov
push
xor
arpl
imul
test
mov
loop
push
repz
mov
inc
push
push
test
fnsave
mov
cmp
or
push
pop
mov
ret
nop
enter
cmp
imul
aaa
pop
pop
xchg
cmp
roll
mov
dec
cmpsb
mov
cmpsl
sub
insb
mov
pop
imul
adc
test
jo
sub
pop
sub
push
mov
mov
ljmp
mov
adc
adc
cmp
outsl
push
das
or
popa
fstpt
mov
xchg
cli
sub
in
hlt
push
inc
std
jb
adc
jno
ret
sarb
loopne
aas
xchg
push
and
sbb
mov
sbb
jnp
popw
shrb
dec
dec
dec
mov
or
push
ja
sub
js
call
dec
sub
loop
fmull
push
es
sti
hlt
lret
sbb
js
fmul
rcrb
insl
push
bound
lods
inc
and
ret
sub
adc
adc
or
add
outsb
pop
and
mov
mov
or
mov
pop
pop
mov
rclb
scas
out
push
mov
in
sub
js
mov
jmp
pusha
mov
pusha
jle
jmp
jg
mov
call
je
pop
cmp
data16
lds
insb
push
inc
jns
xchg
shrl
sub
rcll
mov
js
sbb
cli
and
mov
sub
xchg
fistpll
in
adc
mov
gs
sub
arpl
out
push
mov
cmpsb
stc
jecxz
test
pop
aam
push
popf
push
movsb
mov
add
test
dec
std
mov
ds
ja
shlb
pextrw
js
dec
inc
mov
movsb
sub
add
mov
mov
cmp
xchg
xor
imul
push
add
cli
lds
repnz
loop
sub
and
rcrb
sbb
aaa
arpl
and
addr16
jo
dec
leave
inc
test
pushf
jg
cli
outsb
in
or
shrl
nop
adc
dec
ljmp
sub
sahf
mov
js
mov
push
outsl
xchg
addr16
adc
into
sub
xchg
mov
jp
inc
in
jp
mov
gs
hlt
das
cmp
scas
rcl
and
fwait
jge
push
mov
and
cwtl
mov
cmp
mov
add
sub
mov
mov
mov
pop
int
shlb
inc
inc
aaa
ds
pop
or
repnz
xchg
lret
loope
mov
mov
jg
push
xchg
sbb
adc
fbstp
jnp
push
cld
inc
jg
dec
into
sub
test
xor
adc
mov
aam
mov
jle
inc
push
cmpsb
sub
fdivrs
add
mov
mov
xor
or
hlt
rcr
lods
pop
xchg
pushf
push
punpcklwd
stos
push
mov
ja
sub
imul
adc
lods
lret
pop
lods
pop
ret
out
test
rcrb
call
fsubs
popf
sub
into
daa
dec
push
repz
and
aam
adc
out
dec
sub
fisubrs
jne
lods
fstl
mov
cmpsl
sub
nop
lret
cmp
xchg
insb
push
dec
js
into
stos
mov
lock
cmp
insl
enter
fmul
outsl
imul
inc
xchg
xor
xor
scas
mov
lds
test
mov
push
les
dec
cmp
mov
and
add
xor
mov
add
sub
fdecstp
mov
in
or
lds
inc
out
mov
std
aad
cmp
adcb
ret
push
jle
roll
inc
xchg
je
sbb
push
lahf
ficompl
leave
nop
fucomi
rclb
jne
pop
mov
dec
dec
adc
xor
pop
outsl
leave
mov
or
jnp
icebp
movsb
jl
inc
push
cmp
push
mov
cld
dec
test
jb
scas
es
mov
rol
mov
in
or
jne
and
xchg
test
inc
xor
dec
push
fadd
inc
imul
daa
call
les
and
pop
cmp
fwait
cli
push
stos
cwtl
out
packssdw
cmp
mov
fucomp
or
outsl
or
adc
push
sbb
inc
cmc
lods
outsb
loopne
dec
sbb
leave
lea
cmp
insb
lcall
call
pop
repz
cmpsl
mov
xchg
iret
test
or
popa
cmp
loopne
xchg
mov
xchg
fdivs
paddb
rcrl
inc
out
push
pushf
flds
pop
or
jns
push
push
dec
dec
ss
mov
mov
pushf
jp
sub
inc
andb
fucom
dec
ljmp
leave
sbb
test
test
aaa
xchg
push
jecxz
ret
lret
pop
cmpsb
push
mov
outsl
test
cli
into
sbb
cmp
push
push
pop
loop
sbb
sbb
shl
push
out
push
push
pop
pop
test
mov
mov
push
add
mov
mov
in
push
push
jle
xchg
pop
aad
out
push
nop
push
push
jne
bound
sbb
frstor
jae
scas
jnp
mov
out
mov
icebp
out
xor
fucomi
shlb
shrb
test
testl
lcall
mov
int3
mov
jge
xchg
hlt
jnp
adc
pop
mov
push
negl
push
into
and
stc
pop
or
push
jo
inc
cmp
lret
cltd
ds
mov
adc
sub
ret
lods
loop
dec
pop
xlat
mov
mov
cli
in
ss
push
aaa
and
pop
out
rcrb
fs
sar
cmc
lods
inc
inc
xchg
mov
cld
cmp
dec
mov
inc
ss
sbb
mov
stos
dec
orl
add
aam
test
cmpsl
pop
mov
inc
clc
std
rcll
rclb
jg
ds
out
ss
sub
addb
mov
add
bound
fistl
sbb
shrl
dec
or
sar
xor
outsb
fucomip
std
fisttpll
mov
mov
loope
cmp
push
and
jle
mov
mov
xchg
cs
aad
mov
testb
push
jo
xchg
pop
push
inc
adc
cwtl
dec
ficomps
mov
jno
dec
or
cld
pop
sub
je
int3
and
into
inc
cld
mov
lcall
idiv
or
xlat
sbb
scas
cli
divl
dec
rorb
rcrb
sbb
scas
cmpb
outsb
jl
jge
jge
inc
sbb
pop
push
fidivl
pop
js
jb
aad
insb
leave
sbb
cltd
fstpt
mov
movb
popf
lahf
xchg
dec
or
mov
add
fbstp
iret
dec
dec
mov
push
and
cltd
mov
pop
adc
pop
adc
or
ror
cmp
lds
pop
ret
mov
dec
and
sti
lahf
or
mov
adc
pop
mov
mov
aad
cmp
xor
ret
int
and
cmpsl
lods
dec
pop
loopne
out
divb
scas
pop
imul
mov
dec
outsb
xor
js
pop
jl
add
fisubrs
mov
and
out
rorl
loop
cmp
push
loope
pop
mov
daa
out
xorl
sarl
push
outsl
jecxz
adc
mov
lret
faddl
jg
dec
hlt
sub
stos
jno
cmp
or
pop
les
add
fwait
sbb
ss
outsb
sarl
pop
sbb
pop
lahf
sar
shlb
clc
lods
pop
scas
jmp
push
leave
loope
xor
dec
shlb
inc
add
aad
xorl
mov
outsb
mov
icebp
push
js,pn
push
sti
push
push
shrl
das
cld
stos
faddl
push
inc
ja
fsubs
popa
sub
and
adc
mov
inc
or
sbb
jae
ja
push
sti
xchg
lea
cli
repnz
adc
push
pushf
cmpb
aam
sub
mov
dec
or
hlt
in
sub
scas
mov
cmc
les
jmp
push
xchg
and
mov
xchg
cmpsl
push
fstl
or
push
sbb
and
jbe
movl
sbb
xor
sbb
insl
add
pop
push
in
fwait
push
scas
pop
xchg
lds
mov
mov
leave
mov
icebp
dec
fstps
xchg
pop
xchg
out
out
test
jp
sbb
cli
cmpsb
dec
ror
out
xor
addl
lods
jb
repz
adc
sahf
lea
sbb
or
fs
scas
jo
out
jo
fimull
push
pop
stos
test
ljmp
xchg
sbb
xchg
fcoms
cli
loopne
repz
cmpsl
jle
repnz
mov
ljmp
rcrb
push
sub
adc
loope
outsb
das
clc
push
xor
popa
sub
ret
out
int3
push
sub
jg
fisubl
fidivl
test
repz
xor
or
pmulhuw
dec
adc
jl
xchg
inc
ficoms
add
rcrl
xor
mov
add
adc
outsl
mov
sbb
das
or
xchg
sub
inc
cwtl
dec
dec
dec
lahf
iret
xorb
not
scas
div
jg
outsb
pop
mov
cmp
jg
push
out
xchg
push
sbb
and
xor
add
sub
hlt
popf
test
stos
inc
sub
insb
fsqrt
sbb
aaa
and
add
hlt
mulb
xor
jns
lods
sbb
pop
in
mov
inc
mov
xor
nop
push
orl
sbbl
fwait
das
fimull
dec
loop
pusha
in
inc
and
jno
jle
mov
mov
add
pusha
push
mov
push
mov
push
adc
pop
jae
inc
insl
cmp
shll
jecxz
loop
push
sub
shlb
mov
and
mov
jp
jo
movsl
adc
push
gs
adc
dec
aam
cltd
push
mov
push
dec
xor
or
xor
sbb
sbb
into
mov
adc
test
out
cmp
fwait
lods
mov
xor
pop
xchg
movsb
pop
dec
push
and
pop
loopne
int3
mov
cmp
sti
es
push
xor
sbb
lock
ljmp
lret
aam
sbb
pop
test
xchg
inc
or
hlt
movsl
push
rcrb
or
jno
xor
sub
dec
sub
imul
vpshufhw
inc
mov
ret
in
jp
push
outsb
test
jle
iret
jns
pushw
adc
shlb
xchg
arpl
pop
sub
daa
xlat
int
push
insl
xor
or
mov
iret
cmp
inc
data16
mov
sub
lods
cmpsb
jne
adc
sbb
cmp
stos
stc
sti
xchg
sti
sbb
mov
jae
daa
jb
dec
cli
adc
fimull
test
jno
mov
orb
std
pop
stos
ljmp
jge
add
or
mov
cmp
int3
cld
push
and
jnp
inc
add
cmc
movsb
outsb
mov
mov
push
push
js
mov
stos
xlat
jo
cltd
std
push
jp
xchg
test
rcrb
sbb
rclb
or
xor
mov
mov
stos
mov
cmc
loope
inc
lahf
mov
mov
cld
push
test
icebp
sbb
loop
in
scas
push
sub
mov
sub
cmp
jle
scas
shld
pop
push
or
jb
mov
mov
push
nop
lds
push
add
pop
rclb
stc
sub
insl
xchg
cmp
ret
mov
addr16
es
jo
and
fildl
xchg
lahf
pop
add
lret
jae
cld
loop
aas
jae
adc
ds
xchg
or
aas
push
push
jp
out
cmpsl
jnp
cwtl
jecxz
sti
push
mov
lods
cmpsl
imul
and
inc
adc
jne
sbb
cs
aas
lock
fwait
xor
gs
ret
sbb
mov
or
mov
xor
inc
jb
mov
mov
imul
sbb
loop
inc
lcall
push
fiadds
ljmp
mov
adc
fdivrs
or
aaa
mov
daa
scas
adc
ret
cs
sub
cld
jp
icebp
std
sub
cmpsl
bound
add
repnz
into
and
imul
repnz
dec
jno
shlb
test
out
adc
mov
cmp
sahf
or
aam
mov
mov
mov
mov
sahf
adc
inc
and
or
xor
imul
add
test
outsl
movsl
push
clc
cmpsl
add
xor
mov
mov
dec
ljmp
xchg
xchg
mov
mov
cmpsb
lds
xor
mov
xchg
mov
gs
add
mov
jg
in
mov
add
cmpsb
mov
iret
in
pop
jnp
inc
adc
aaa
add
push
pop
arpl
sbbb
lret
xorb
in
pop
in
sbb
iret
cmp
mov
lods
filds
in
mov
sub
dec
out
gs
call
or
or
mov
mov
aas
lcall
jp
sbb
push
add
add
xchg
adc
push
mov
aam
or
adc
loopne
cmp
js
pop
add
das
out
cmpsl
cmpl
sub
mov
shrb
xor
adc
and
cmp
inc
pop
into
sahf
mov
add
inc
push
sti
pop
dec
add
lcall
repz
pop
and
push
clc
pop
lcall
push
adc
aam
pop
jno
fucomp
mov
inc
push
loopne
fisubrl
dec
fisubrl
xchg
mov
mov
cmovne
mov
and
mov
jae
insb
mov
inc
rcll
mov
test
mov
out
sti
xchg
cwtl
pusha
dec
cmp
movsb
cmp
lahf
aaa
rcrl
insb
mov
cmp
les
pop
jmp
adc
cmp
pop
sub
jp
mov
adc
sbb
popf
lock
mov
cmp
les
rcll
jge
xor
mov
mov
pop
fisttpll
in
pop
add
pop
mov
aad
add
push
push
adc
mov
pop
fnstcw
ret
inc
xor
cwtl
jo
pusha
xor
xchg
xlat
cld
fs
mov
xchg
push
scas
int3
or
mov
divl
fdivr
push
jno
cmpsb
jae
fisttpll
fdivrl
mov
jo
push
js
add
mov
mov
ljmp
pop
ss
xor
add
enter
xor
scas
loope
and
pop
imul
aad
xchg
push
fdivl
pop
mov
es
mov
mov
ds
in
mov
loop
pop
gs
faddl
push
ljmp
pusha
pop
mov
mov
xchg
ret
arpl
daa
hlt
cmp
test
or
out
pop
cld
bound
jle
imul
movsl
mov
add
mov
push
mov
testb
jmp
leave
push
call
cmp
or
aas
jbe
into
inc
icebp
enter
mov
imul
cmp
push
insb
jne
xlat
and
lock
lret
pusha
add
shll
cltd
movsl
enter
stos
hlt
or
pop
ds
ja
lret
pop
mov
fimuls
xchg
test
jo
xlat
repz
bound
ss
jo
fidivl
xor
mov
pop
jp
in
or
cmpl
loope
xchg
fstpl
rorb
dec
cli
cmpl
pop
ja
sbb
aaa
adc
rcll
xor
les
std
ret
stos
rcll
mov
cwtl
add
inc
and
or
jnp
cmpsl
cmp
rcr
push
push
and
lret
pop
sub
test
lods
movsb
scas
popf
push
div
cltd
or
test
xchg
xchg
mov
inc
jge
popf
sub
js
outsl
mov
mov
test
push
out
push
nop
loope
lret
xchg
mov
push
mov
sub
popf
stos
pop
jmp
sbb
cmp
loope
mov
xchg
adc
pop
repz
mov
xor
and
sahf
dec
add
fdivl
pop
in
add
mov
xchg
cmpsb
jmp
dec
out
sbb
inc
popf
push
or
out
dec
aas
add
and
and
leave
mov
mov
mov
insb
mov
mov
sub
cltd
ret
cld
pop
pop
outsl
jnp
mov
dec
pop
cmp
arpl
shrl
invd
fwait
push
push
xchg
mov
and
es
sub
dec
sub
cwtl
pusha
inc
bound
cmp
xchg
pop
sahf
in
lods
sub
mov
out
push
test
xor
cltd
js
out
adc
stos
popa
out
int
pop
sar
xchg
outsl
mov
fnstenv
mov
pop
pop
lea
enter
loopne
and
lret
mov
jecxz
lds
in
lcall
xchg
iret
popf
fimull
xchg
jmp
int
push
test
lods
scas
imul
push
mov
clc
lcall
insb
jl
popf
test
xchg
daa
sbb
xchg
and
out
call
jne
or
sub
popa
xor
mov
outsb
push
adc
scas
mov
mull
mov
nop
sub
movsb
mov
incl
mov
cmp
imul
test
enter
shr
shld
stos
fwait
jae
pop
pop
xchg
out
popa
in
add
push
movsb
arpl
cld
sub
jne
pop
stos
and
jb
mov
mov
call
dec
inc
call
gs
sbb
pop
pop
inc
pop
mov
cli
lock
nop
fs
sub
mov
xchg
stc
iret
mov
jo
stc
jo
mov
adc
dec
fcoml
fstps
lret
ss
nop
push
cltd
pop
pop
icebp
sbb
cs
mov
pushf
pop
cmp
pusha
mov
jmp
stc
in
scas
mov
popf
stos
add
xor
xchg
pop
mov
sbb
scas
cmp
arpl
xchg
pop
xor
jmp
jge
mov
adc
inc
lds
loope
fsubrl
in
orl
cwtl
inc
sbb
jne
in
xor
dec
adc
test
iret
mov
rcrb
dec
push
inc
cmp
sbb
xor
repnz
xor
bound
ljmp
and
mov
repnz
sbb
es
ja
mov
adc
movsl
aad
jg
clc
dec
cmp
decl
bnd
mov
inc
test
repz
and
popa
and
push
imul
dec
pop
pop
and
clc
aas
or
insb
mov
and
mov
lcall
and
jl
mov
sbb
mov
insb
add
jns
aaa
adc
je
push
dec
lcall
mov
or
ljmp
push
fcoms
inc
inc
dec
inc
fs
popa
sbb
mov
int
dec
jns
xor
cmc
jne
icebp
enter
pop
dec
adc
outsb
add
iret
xchg
addl
or
repnz
inc
es
cmp
addr16
sti
cld
or
jnp
lock
jnp
add
aas
movsb
out
push
cli
iret
fildl
sub
dec
mov
lock
sub
dec
aam
repnz
stos
dec
out
test
mov
and
iret
mov
xor
jmp
xorb
lret
mov
jge
pop
test
je
and
mov
inc
es
fisttpll
adc
push
mov
add
inc
lret
pop
jmp
mov
mov
push
add
hlt
mov
popa
xchg
ss
sbb
hlt
imul
sbb
ret
mov
inc
pop
xor
mov
jmp
rcr
shl
ret
inc
cmp
repnz
mov
shll
jl
scas
sub
das
ret
repnz
sahf
xchg
decb
sub
mov
scas
dec
mov
jnp
xor
out
xchg
jo
in
push
lds
xchg
xchg
or
les
mov
test
in
jno
dec
xchg
mov
push
adc
aas
add
xchg
in
push
add
mov
push
insl
push
jmp
movsl
lods
lods
or
es
pop
es
pop
shlb
rorl
in
mov
stos
rcrb
ret
push
lods
fmul
push
shl
mov
jo
lahf
push
int3
sti
sbb
sub
rclb
adc
pop
stc
lret
cmpsb
pop
int
xchg
pop
fs
cmp
jnp
mov
xchg
sarl
mov
shrw
push
cmpsl
fcoms
out
xor
aaa
scas
popf
sbb
inc
das
inc
or
add
cmc
mov
adc
or
jg
test
inc
movsl
fnstsw
gs
js
rol
leave
cmp
and
arpl
popf
fildll
pop
jp
lods
push
dec
fdivrl
std
mov
enter
fs
mov
add
jnp
sbb
inc
dec
jecxz
ljmp
call
int3
jne
mov
ss
ret
mov
or
imul
mov
stos
sub
ficomps
sbb
out
pushf
push
add
es
hlt
mov
orl
fdivrl
in
movsl
int3
inc
jg
pop
lock
xchg
pushf
or
xor
mov
call
xor
movsl
rol
inc
jae
rcrb
inc
and
hlt
push
insb
lret
rol
loopne
fisttpll
mov
ficompl
scas
orb
dec
aaa
inc
push
std
faddp
cmp
aam
inc
out
into
dec
push
fldl
into
and
mov
pusha
and
dec
xchg
repz
jmp
mov
in
ja
imul
js
mov
dec
dec
mov
or
or
adc
or
stos
mov
dec
add
xchg
lahf
lret
mov
cli
add
mov
psllw
or
jl
xchg
test
mov
test
aam
daa
mov
int3
repz
gs
fs
add
jp
sub
ret
lcall
adc
pusha
push
inc
fscale
mov
int
mov
fdivl
das
ljmp
add
or
stos
test
repnz
push
lcall
inc
or
in
or
cmp
mov
inc
enter
sub
clc
movsb
arpl
mov
sbb
sbb
out
out
ds
std
pop
adc
xor
inc
loope
and
or
cs
insb
fisttpll
xchg
icebp
fcoms
icebp
push
mov
xor
into
add
xor
mov
test
push
mov
sub
loop
cmp
jo
xchg
dec
add
dec
dec
pop
inc
sbb
add
shlb
cmp
scas
mov
loop
es
dec
cs
dec
adc
sti
and
mov
sbb
icebp
mov
push
cmpsl
sahf
gs
cmp
iret
loop
xor
push
cmpsl
xchg
clc
stc
outsb
jmp
and
xchg
mov
jle
add
mov
xor
mov
mov
bound
inc
jae
pop
cmp
sarl
or
in
es
jmp
pop
cld
xchg
cld
xor
ret
mov
inc
sbb
insl
jecxz
imul
lahf
aad
adc
arpl
pushf
popf
gs
into
sbb
in
xor
int
push
aad
xor
fsts
mov
xchg
fcmovnb
push
adc
loopne
repnz
push
fidivrl
fdivrp
inc
inc
arpl
test
dec
sub
or
xchg
cmp
pusha
xchg
das
mov
loop
xor
fsubrl
push
xor
popf
lret
xchg
xlat
lock
jno
daa
aam
sbb
bound
dec
pop
xor
gs
or
lret
lahf
xor
out
adc
sub
jge
xor
es
std
push
fldenv
ficoms
mov
out
pop
inc
or
aad
int
sbb
xchg
jb
mov
insb
mov
bswap
lods
pop
sti
div
lahf
push
call
lahf
mov
mov
or
int3
test
orb
inc
fs
dec
dec
push
xchg
je
push
cmp
out
pop
cwtl
inc
push
add
xchg
inc
in
xchg
lds
xor
nop
jmp
pop
mov
pop
out
fisubrs
sub
fcmovb
fdivrp
jae
xlat
out
jns
pop
dec
addl
aam
lods
sbb
mov
pop
test
mov
stc
fimull
jl
aad
int3
clc
aas
dec
filds
incl
mov
lods
adc
jp
out
cli
es
push
or
mov
fildll
xlat
cwtl
in
sbb
pop
clc
and
dec
sahf
fdivl
icebp
jne
lods
and
and
hlt
push
xchg
xchg
jecxz
jnp
mov
lcall
sbbb
movsb
mov
push
adc
lret
jp
mov
out
call
imul
pop
push
jne
push
sbb
mov
pop
and
dec
pop
jl
scas
sub
add
xchg
arpl
fwait
scas
sub
jecxz
push
shlb
mov
dec
in
rolb
add
add
int3
sub
in
addr16
popf
and
out
in
pop
shlb
mov
jae
out
mov
into
pop
icebp
negb
jne
push
lahf
addr16
enter
add
in
pop
pop
lret
jge
sub
call
add
aaa
outsb
xor
lods
sub
mov
shlb
inc
adc
or
in
lock
mov
lahf
jne
jb
loop
mov
test
xchg
test
cwtl
insl
mov
xlat
add
inc
stc
jbe
outsl
cs
or
or
cmpb
mov
xor
jbe
notb
into
outsb
push
fldl
adc
cltd
push
pop
loope
addr16
xor
insl
adc
push
pop
xor
xchg
fwait
invd
push
pushf
nop
lods
das
scas
inc
and
add
lret
pop
adc
pop
dec
xor
mov
sbb
and
xchg
inc
xor
sti
icebp
xor
pop
jbe
mov
sub
push
scas
cli
pop
test
imul
mov
jns
inc
inc
fwait
jmp
and
xchg
movsb
xor
xchg
bound
adc
or
push
inc
push
mov
enter
imul
adc
sub
cs
cmc
inc
mov
inc
xor
stos
xor
roll
add
je
sbb
add
push
cmp
repnz
lods
test
hlt
push
mov
dec
int3
in
imul
arpl
cmpsb
fwait
inc
mov
scas
es
cltd
and
mov
les
mov
xchg
cmpsb
inc
leave
jne
insl
or
xor
fisubrs
lcall
ja
aas
shll
and
cmp
pusha
scas
sahf
sub
jp
pop
out
inc
ss
jae
pop
mov
adc
or
mov
aaa
std
fsubs
adc
dec
and
fcmove
js
cmpsl
dec
mov
mov
fdivl
jmp
or
shlb
mov
push
sub
pop
fildl
pop
sub
mov
pop
push
fcomip
out
mov
mov
add
mov
push
push
xchg
or
imul
jg
and
icebp
mov
dec
inc
inc
dec
cmp
pop
inc
cmp
fsubrs
repnz
mov
cmp
xor
int
dec
jl
imul
into
push
sub
lcall
adc
bound
push
in
out
hlt
dec
mov
mov
pop
xchg
inc
xchg
pop
xor
cmp
test
out
sbb
dec
sub
inc
adc
push
jp
or
nop
stc
push
je
lea
call
fists
daa
or
mov
daa
inc
pop
test
xchg
pop
or
adc
and
popf
add
clc
mov
mov
sbb
mov
push
push
das
sub
mov
fisttpl
mov
xchg
dec
xchg
out
push
mov
inc
or
gs
sarb
ljmp
jecxz
mov
fimuls
pushf
fisubs
and
jb
mov
out
pop
cwtl
lahf
lods
pop
je
int3
mov
rcrb
pusha
scas
rcll
xor
repz
shrl
enter
mov
mov
sub
sbb
add
push
mov
into
sbb
xor
lods
xlat
push
subl
or
testb
mov
mov
mov
push
cmpsb
fcoms
sub
jg
arpl
out
cmp
repz
ja
sbb
fisubrl
ret
sbb
cld
mov
or
movsb
dec
mov
cli
rcll
fildll
lea
xor
push
jl
add
cmp
ss
loop
push
or
sub
mov
adc
sub
jp
cmp
and
push
xor
mov
pop
and
loop
sbb
pusha
js
nop
jmp
fcmovbe
clc
push
mov
jno
cwtl
in
in
cmp
out
iret
adc
sti
test
aam
lea
mov
push
xchg
mov
stos
pop
mov
jp
popf
bnd
jne
pop
mov
mov
pop
insb
into
stc
cmp
test
add
xor
dec
loopne
add
pusha
xor
jmp
xchg
sbb
ret
arpl
mov
loope
movl
xor
sbb
xlat
cmp
xor
ss
push
pop
or
jne
or
ja
mov
sub
dec
or
inc
aad
xor
inc
mov
cs
cmp
ret
fidivl
test
sub
leave
fs
xchg
jge
fwait
in
dec
or
fs
daa
xchg
mov
or
subl
ljmpw
in
and
gs
dec
adc
je
dec
dec
pusha
int3
test
add
ss
movsl
jg
dec
mov
je
pop
jno
sub
mov
xchg
cmp
jnp
fidivs
mov
pop
xchg
inc
jnp
jns
pop
je
cmp
xlat
sahf
sbb
pop
sub
jl
std
jle
or
or
pop
adc
jns
mov
cmp
add
push
xor
xor
inc
xchg
pop
shl
push
add
call
fst
in
and
andl
fs
icebp
scas
pushf
xor
inc
leave
xchg
lret
or
mov
and
loop
les
xor
ljmp
fldz
fsubp
sarb
add
movsl
jo
shrb
out
iret
mov
insb
lea
push
pop
push
sub
mulb
mov
xor
out
or
mov
insl
stc
dec
frstor
aam
adc
xor
out
filds
adc
push
xchg
gs
rclb
data16
push
push
outsb
retw
outsb
je
or
daa
movq
dec
aas
ret
imul
aad
mov
int3
push
sahf
mov
insl
mov
jmp
lea
xor
stos
fildll
pop
rcll
pusha
jp
pop
movb
sub
into
fs
dec
loop
jmp
lahf
in
imul
pop
push
insl
inc
rclb
jbe
jmp
sbb
adc
adc
cld
mov
out
ds
rcrb
and
cli
mov
mov
xor
add
adc
inc
test
out
mov
fiadds
dec
test
sbbl
pop
dec
push
fists
push
es
fnstenv
dec
inc
pusha
push
mov
jbe
push
leave
leave
dec
inc
jbe
sti
xor
test
pop
xor
cmp
loopne
test
cmc
cli
mov
jae
orb
inc
mov
cltd
cwtl
mov
fxch
cs
sub
xchg
and
xor
mov
iret
sbb
ja
movsl
push
mov
fwait
jne
jge
test
xor
mov
subl
mov
pop
push
shll
cmp
adc
jne
add
fidivl
inc
and
inc
push
sbb
mov
in
dec
adc
fistpl
fstps
orb
pop
jp
xor
dec
fstpl
push
test
mov
adc
aaa
add
mov
add
sub
mov
lods
call
adc
stc
loopne
xor
les
lock
mov
enter
test
inc
push
mov
jns
fcom
dec
out
jnp
mov
dec
sbb
roll
out
loope
lea
gs
mov
out
push
shrb
lea
bnd
pop
and
imul
sbb
mov
fldt
rorl
cld
xor
popa
push
mov
jbe
jo
data16
int3
outsl
add
jb
cmp
dec
lcall
test
out
ja
in
xor
jecxz
rolb
inc
xchg
repz
cmp
jle
shll
cmp
dec
jmp
cld
mov
popf
stos
jmp
inc
sub
or
stos
pusha
push
fxch
adc
sbb
adc
mov
outsl
push
aaa
jmp
aam
pop
shrb
dec
call
mov
cld
sbb
sub
in
loop
xchg
icebp
jbe
adc
and
negl
iret
add
or
rorb
cmp
push
push
adc
jno
repz
stos
cmp
test
gs
mov
icebp
inc
and
inc
nop
clc
or
lock
mov
pop
leave
out
rclb
add
js
mov
les
jb
mov
pop
mov
add
inc
xor
add
mulb
sub
dec
outsl
insb
loop
push
add
adc
mov
enter
xor
add
mov
add
ret
sub
xor
addr16
cltd
mov
add
xor
push
cmp
movsl
dec
cmc
pop
mov
inc
adc
sahf
in
imul
push
fwait
std
and
lret
push
push
ffreep
subb
cwtl
adcl
pop
data16
inc
fsubl
sub
or
cmpb
mov
jb
shll
xor
cmpsl
movsl
inc
xchg
pop
pop
pusha
add
xchg
jns
mov
push
scas
int
xor
pop
mov
das
fsubrs
pop
or
repz
inc
add
sbb
sbb
jbe
add
lea
loope
adc
loop
popf
mov
cmp
push
outsb
mov
mov
cmpsl
mov
push
icebp
arpl
pushf
movsb
xchg
cs
pop
jmp
movsl
mov
xchg
int3
push
cltd
dec
ja
test
mov
and
loope
movsl
pop
sti
sub
push
xor
push
fildll
inc
push
imul
or
stos
add
adc
dec
push
lret
popf
in
lret
es
pop
push
mov
pop
mov
ja
xchg
pop
loop
jle
pop
mov
xchg
mov
icebp
and
lea
lahf
xchg
loopne
jbe
int3
xchg
jmp
mov
sub
inc
dec
mov
in
push
insl
xor
add
jge
sub
xlat
nopl
push
mov
arpl
int
ja
in
mov
jnp
sbb
cs
pushf
addb
mov
daa
mov
and
pop
call
and
ja
aam
imul
mov
inc
popa
xor
mul
das
jle
push
push
xchg
cld
or
ja
push
std
stos
add
stc
imul
test
pop
push
jl
push
popf
lahf
aad
and
jnp
cld
sbb
or
lock
lods
xlat
jl
xlat
test
out
push
push
pop
mov
int3
test
cmp
mov
out
fiaddl
adc
cmp
or
inc
pop
xorb
pop
fbld
mov
adc
pop
fstpt
mov
jle
mov
jno
mov
mov
mov
xor
aad
lret
adc
and
or
inc
mov
mov
lods
add
cmp
test
idiv
mov
rcr
aam
fst
cli
cmp
add
sub
adc
mov
sbb
insb
std
inc
jno
fwait
and
pushf
pop
movsb
xchg
enter
push
in
sub
into
outsl
add
cmp
cmp
test
popf
loopne
mov
out
pop
sbb
fwait
mov
and
repz
xchg
sub
xchg
push
xorl
inc
jno
stos
cltd
dec
jge
andb
mov
and
or
clc
inc
sar
lret
aad
mov
insl
xchg
int3
scas
int3
mov
pop
jo
ret
inc
add
and
out
and
dec
or
jle
xchg
lret
ret
xor
lret
div
adc
js
shrb
jg
out
and
ret
mov
adc
popa
mov
cmpsl
test
popf
test
mov
jmp
in
fldz
xchg
cld
aaa
adc
jns
fdiv
nop
cmpsb
or
xchg
aas
mov
jnp
pop
in
dec
into
dec
into
mov
cmp
int3
aam
movsl
dec
fiaddl
cmp
adcl
in
in
inc
mov
jle
pop
or
lret
jecxz
aam
test
jo
loope
inc
adcb
pop
lods
cli
or
outsl
lret
sbb
mov
cmp
mov
dec
addr16
inc
mov
lahf
or
or
mov
dec
sbb
mov
stos
push
fucomip
dec
imul
fldcw
ret
or
and
or
mov
and
mov
loopne
pop
and
sbb
add
push
mov
add
inc
dec
out
test
jmp
pop
maskmovq
imull
ss
cld
enter
in
lods
xor
and
addl
sti
inc
hlt
stc
pop
mov
movsb
xor
mov
inc
push
pop
enter
push
leave
fildll
push
xchg
out
lret
pusha
mov
stc
popa
mov
push
push
shrl
or
pop
sbb
xor
push
push
lock
ds
arpl
dec
aam
int
mov
or
outsb
scas
into
mov
jg
push
mov
cmc
add
cmp
xor
push
cltd
out
lahf
add
push
cmp
out
shlb
shrl
mov
out
mov
xor
repnz
or
les
cld
lods
push
xor
ja
jge
insb
mov
jbe
sti
add
sbb
rcl
add
cli
jge
loope
dec
dec
pusha
cmp
mov
rolb
stc
test
mov
loope
out
jno
inc
aad
stos
in
xor
sub
daa
sbb
jnp
in
inc
jbe
mov
outsb
jns
sbb
popf
sub
dec
insb
xchg
dec
imul
cmc
arpl
mov
aam
jg
enter
ds
sbb
lcall
dec
or
xor
pop
mov
fwait
sbb
cmpsl
dec
js
pop
push
push
adc
lock
xor
push
push
addr16
rorb
cli
cmpsb
sahf
addr16
rcll
sbb
jne
fdivrl
inc
rcrl
sti
pop
cs
and
sbb
hlt
int3
shlb
out
push
and
and
adcb
mov
inc
jae
call
jbe
cli
lret
cltd
popf
inc
mov
scas
and
int
insb
das
pop
xchg
add
add
jge
in
jmp
push
mov
push
inc
push
loop
add
sbb
cwtl
xchg
or
adc
ficoms
push
hlt
dec
inc
sub
cmpsl
xchg
jg
mov
mov
dec
mov
ret
scas
andb
adc
into
es
jb
mov
in
mov
and
xor
pop
pop
xchg
cli
jmp
call
test
ljmp
cli
std
add
std
ret
in
mov
pusha
add
rolb
mov
mov
cmpsb
push
xorl
push
sbb
cmp
sbb
call
and
idivl
outsb
mov
out
sbb
jmp
repnz
les
mov
repz
xor
jle
in
cmpsl
call
jae
mov
lret
xor
xchg
mov
push
sbb
adc
jns
and
in
ljmp
dec
aaa
pop
sbb
dec
sbb
cmp
adc
and
rolb
and
mov
es
push
lods
mov
pop
add
inc
jp
arpl
inc
adc
dec
inc
jge,pt
int
or
out
std
imul
mov
jb
mov
cmp
pop
push
sbb
mov
enter
dec
dec
jns
dec
into
daa
leave
mov
mov
ficomps
push
jg
jle
dec
cmc
xchg
jb
cli
inc
push
sarl
or
push
into
das
adc
dec
add
lahf
cltd
adc
xchg
iret
inc
pop
adc
push
jnp
jle
out
jle
xor
dec
adc
pushf
push
xchg
xchg
pop
inc
or
lock
mov
leave
iret
mov
jo
bound
pop
ffreep
mov
xor
push
push
mov
inc
imul
adc
test
das
push
cltd
jmp
shll
pop
imul
xchg
cmpsb
cmpl
out
pop
add
cltd
cmp
xor
pop
and
dec
ds
and
cmp
adc
or
out
mov
sbb
mov
and
lds
insb
sub
jmp
out
adc
dec
mov
push
in
scas
lods
add
push
or
xchg
mov
xchg
ret
or
ret
scas
mov
rcll
test
cs
mov
adc
mov
sbb
mov
or
mov
ss
arpl
sbb
gs
pop
add
dec
idivl
arpl
push
data16
in
inc
push
arpl
shlb
or
add
xor
add
dec
cmpsl
sbb
pusha
push
mov
jo
jecxz
jnp
es
js
mov
sbb
cwtl
adc
pop
icebp
adc
ljmp
movsl
fcmovb
lcall
mov
jp
cwtl
sub
rcl
es
xchg
insb
into
inc
jae
or
scas
loop
or
push
mov
shlb
test
cmp
xchg
and
imul
add
or
xchg
aas
cld
icebp
jo
cmc
push
fisubrs
add
mov
jns
push
cmpl
inc
in
std
call
loop
iret
jne
out
cmp
cwtl
test
jmp
mov
test
xor
addr16
or
stc
insl
add
xchg
repz
and
mov
pop
dec
int
add
and
sub
add
lods
out
lds
fidivl
and
inc
push
dec
cmpsb
fstp
subl
or
orb
and
cmp
mov
stos
inc
or
scas
mov
pop
pop
movsb
mov
jb
adc
xor
add
int
cmp
std
stc
das
hlt
pop
enter
and
lret
mulb
jbe
fyl2x
sub
adc
cmp
xchg
fisubl
ret
aaa
inc
pop
push
push
stc
pop
xchg
cli
pop
push
mov
enter
jae
insb
rcr
popa
push
ds
les
sarl
fwait
sbb
mov
xor
stc
stos
inc
neg
testl
mov
xchg
adc
fs
repz
lcall
pop
inc
inc
mov
or
rcrl
icebp
mov
les
xchg
dec
sub
into
xchg
inc
repnz
sub
fnsave
repz
pop
push
je
test
mov
loopne
xor
jge
scas
sub
aas
aas
fldl
add
enter
das
stos
push
fisttps
in
cmp
and
dec
mov
pop
jmp
in
mov
mov
bnd
jne
ret
or
pop
xchg
dec
subl
fwait
les
push
pop
xchg
cmp
jno
inc
shl
mov
adc
and
mov
mov
dec
test
bound
clc
mov
gs
clc
pop
inc
enter
into
pusha
jle
pop
push
or
sahf
out
push
and
cmp
int3
sub
rcrl
mov
pop
out
pop
sub
adc
mov
loop
jle
push
xlat
das
dec
je
push
cmpl
add
lds
sbb
daa
fsubrs
xchg
test
fs
fiaddl
jns
fldt
rorb
add
mov
jmp
inc
pushf
xor
cmp
lahf
add
sbb
sar
insb
repz
xchg
dec
sbb
in
vxorps
mov
and
dec
xorb
test
jnp
jns
xor
out
test
js
rcr
fdivrs
adc
pop
adc
std
pop
ret
test
sub
lock
out
sbb
push
mov
shlb
loopne
movd
mov
scas
das
cmp
lahf
cmpsb
ljmp
mov
cmp
add
out
jp
push
aaa
inc
cmp
lods
cwtl
clc
andl
pop
adcl
push
jbe
add
adc
adc
popf
pop
lea
sar
jbe
cltd
out
and
push
int
ss
aad
sti
and
adc
out
pop
hlt
in
cmpl
aaa
jnp
lcall
in
jg
sbb
shlb
inc
test
sbb
mov
jae
dec
adc
jno
xor
sbb
jl
xchg
das
sbb
into
add
pop
pushf
add
sub
inc
xor
jp
ljmp
cmpsb
leave
insl
icebp
sub
rcll
pop
inc
cwtl
push
enter
ljmp
ja
inc
mov
mov
sub
cmpsb
xchg
adc
fldl
sbb
push
mov
iret
into
ds
frstor
divl
loope
pop
cmp
add
mov
mov
mov
fidivrl
icebp
imul
out
imul
imul
cli
push
shll
jno
sub
adc
clc
cmc
les
sub
xor
stos
and
jecxz
inc
outsl
inc
push
cmp
test
xchg
push
xchg
and
jae
pusha
xchg
jmp
ja
clc
bound
adc
push
popa
imul
bound
push
cli
jno
loopne
bound
xor
pusha
jo
jae
rcrl
cli
mov
fwait
lcall
idiv
stc
in
cmp
xchg
sti
mov
std
aaa
test
add
lret
in
in
cmp
sbb
inc
sbb
cmp
dec
inc
xor
idiv
movsb
dec
pop
jecxz
mov
xor
mov
sahf
push
iret
cwtl
outsb
mov
fwait
cmp
pop
cmp
int
jp
cwtl
in
push
out
pop
xor
lret
out
and
adc
add
iret
mov
les
rcrb
mov
inc
xchg
xor
dec
xchg
dec
push
push
movsl
inc
je
xor
pushf
ret
xor
dec
cmp
testb
lock
jns
adc
hlt
fwait
push
fisubrl
push
arpl
xchg
xor
pop
orb
stos
add
negl
aas
or
sbb
cmp
mov
xchg
mov
mov
xor
clc
jp
xor
js
jbe
gs
out
in
loope
nop
test
mov
sbb
js
int3
fldenv
test
jp
lcall
sbb
jmp
mov
xchg
push
push
or
std
adc
jl
call
test
adc
outsb
pop
xchg
out
add
cmp
mov
leave
lods
jne
lock
pop
adc
xchg
inc
insb
fsubrs
xchg
sbb
jo
fsubs
fmull
sub
lret
mov
sbb
cmpsl
pop
test
mov
scas
pop
scas
cmpb
sub
mov
xchg
dec
lods
push
test
dec
out
pop
arpl
addr16
movsl
mov
mov
and
imul
rcrb
mov
add
outsl
stos
lret
dec
shlb
insl
xlat
and
fwait
push
sub
jno
mov
mov
or
sbb
ror
sti
add
add
imul
push
push
out
enter
lret
in
popa
sbb
jnp
nop
and
iret
in
fbld
fldenv
repnz
mov
ja
jb
in
mov
dec
xchg
mov
adc
dec
push
pusha
pop
insb
pop
fucomp
xor
ja
ja
jl
xchg
shlb
sbb
lcall
and
cmpsb
sub
scas
mov
shlb
dec
pusha
stos
push
or
movsl
xchg
sti
popl
inc
cld
adc
test
jmp
inc
mov
push
out
in
orl
sbb
xor
mov
jne
mov
push
int3
fwait
lods
pop
inc
add
inc
cmp
pop
pop
adc
mov
cld
hlt
js
adc
xchg
jecxz
dec
cmp
aam
aad
insb
mov
xchg
ret
xchg
cmp
ljmp
pop
pop
data16
push
imul
xchg
int
addr16
sub
sub
cwtl
jle
lock
imul
js
aaa
cmp
ficoms
dec
and
push
pusha
push
pop
pushf
sbb
aas
out
out
lods
jl
clc
call
lea
mov
jl
out
pop
jmp
jle
int3
cmpsb
cs
xchg
mov
jno
sub
cld
insb
lods
shll
xor
mov
test
inc
insl
add
call
sub
jnp
cltd
push
inc
stc
int3
test
pop
mov
ja
lret
adc
xlat
xchg
pushf
rorb
into
les
push
inc
repz
popf
jg
lret
ds
cld
sub
enterw
stos
and
addb
dec
daa
cmp
in
cli
movsb
pushf
cld
fmull
pop
ja
ret
out
jl
and
dec
jnp
repnz
xor
popf
rcrl
aaa
imul
bound
in
add
cmp
adc
cli
cmp
shlb
scas
pusha
daa
adc
fcoml
mov
subl
hlt
ret
mov
out
inc
mov
stc
xchg
pop
cltd
cwtl
mov
daa
xchg
mov
in
shl
inc
stos
cmpsb
testb
cld
jnp
int3
ja
push
jle
iret
mov
and
shlb
lret
pop
mov
ret
and
sub
push
jl
jge
arpl
scas
cwtl
or
jmp
adc
pop
xor
sub
pushf
pop
adc
xor
loope
fiaddl
fwait
xchg
ds
into
roll
out
lock
test
mov
fcomps
cmc
jp
xor
cmp
dec
data16
scas
dec
dec
insb
xchg
push
and
cmpsl
jae
push
pop
test
call
je
xor
cwtl
jo
inc
ret
sub
jp
inc
adc
cli
mov
data16
mov
jge
xchg
add
or
add
cld
ret
cmp
sar
les
mov
std
inc
mov
sub
decb
mul
data16
addr16
mov
push
rcrb
adc
cs
or
rcr
loop
push
shlb
mov
in
mov
out
lret
test
fldenv
imul
pop
popf
push
fstpt
je
mov
fistl
pop
mov
rcll
add
scas
xor
jge
fistl
ljmp
mov
push
les
push
imul
mov
addr16
out
mov
sub
mov
add
dec
daa
jo
dec
jae
jp
sub
add
inc
pop
mov
jp
xchg
pop
fadd
int3
mov
jb
call
cmovl
cmp
push
js
or
adcb
shll
fimuls
rcrl
stos
orb
test
pop
fisubrs
loope
cwtl
push
lock
loopne
fnsave
sub
push
pop
xchg
shll
mov
out
ljmp
mov
cmp
xor
xchg
dec
inc
cltd
sbb
shr
xchg
cmp
push
bound
test
mov
in
xchg
arpl
inc
into
js
js
loope
insb
or
sub
enter
pushaw
insb
or
fcompl
xchg
jnp
xchg
out
push
adc
test
cmc
lea
inc
iret
fdivrp
addr16
mov
or
mov
int
test
iret
add
nop
fcompl
mov
in
aam
fisttpll
jne
sahf
fidivrl
loope
into
sub
out
aaa
push
add
sti
aad
movsl
cltd
add
push
push
pusha
push
loope
test
insb
jb
mov
popf
decl
loopne
fmul
lret
pandn
adc
xchg
enter
scas
sub
fistpl
nop
pusha
pop
pop
push
mov
fstpt
sbb
in
shll
inc
pop
jne
aas
pop
mov
out
sub
daa
aam
imul
add
pop
daa
sub
pop
fnstcw
loope
sbb
in
and
sbb
lcall
test
jge
das
pop
mov
sar
xor
popa
arpl
stos
xor
mov
and
or
ret
hlt
mov
adc
movsb
les
les
out
inc
leave
cs
cmp
push
adc
add
push
adc
cltd
push
sbb
or
xchg
adc
int3
and
jle
jmp
out
push
mov
mov
repz
cwtl
fwait
repnz
je
jo
mov
inc
pop
ja
std
cmp
outsl
sbb
outsb
cmpsb
in
leave
lret
cld
jmp
pusha
add
or
or
xchg
inc
xor
adc
fsubrs
adc
pushf
lds
mov
xorb
pushf
pop
aas
scas
es
rolb
push
lahf
push
pop
rcrl
aas
hlt
mov
pop
xor
jnp
mov
addb
aad
push
push
mov
popf
xchg
imul
fistpll
cmp
cmpsb
pop
in
jo
rcrb
in
xchg
cmp
pop
mov
inc
cwtl
mov
xchg
dec
jge
pop
push
xchg
mov
and
sub
mov
movnti
insl
mov
repz
je
ds
out
sbb
pop
xor
mov
hlt
push
cld
pop
cmpsb
or
xchg
test
test
ljmp
jnp
andb
nop
xchg
shld
test
adc
xor
enter
mov
jo
cmovl
rcr
bound
fs
push
and
adc
lea
jns
repnz
push
rorl
or
mov
ret
push
in
sbb
ret
std
xchg
aaa
and
je
sbb
add
jno
or
and
int
pop
cwtl
cmovnp
mov
pop
out
or
jmp
aad
fdiv
ja
ja
lcall
jl
in
inc
mov
std
lret
inc
ret
fucomp
mov
pop
xchg
lcall
dec
cmp
test
add
lods
pop
test
outsb
cmp
xchg
sbb
lret
xchg
cs
xchg
sub
lcall
push
shll
sarl
pop
aad
cmp
sub
fsubrs
out
sbb
stos
dec
loopne
xchg
jp
movsl
and
pop
mov
inc
or
inc
insl
mov
sarl
mov
lcall
adc
fisubrl
into
sub
ljmp
into
loop
inc
into
adc
xchg
into
cwtl
jecxz
push
push
jnp
filds
add
jne
leave
mov
add
mov
je
inc
test
push
daa
xchg
sub
sar
repz
add
pop
ficoml
xchg
jno
and
jne
dec
sub
les
lods
jns
js
nop
and
push
ds
inc
shlb
dec
pop
jo
cmp
repnz
add
jo
xchg
mov
mull
jb
pop
xlat
hlt
or
shlb
fisubrl
mov
jns
stc
inc
in
add
and
mov
rcrl
push
pushf
sub
jge
push
mov
jnp
sbbl
pop
adc
or
in
inc
stc
rcrb
push
ja
mov
inc
pop
aaa
xchg
adc
sub
les
sub
adcl
dec
xlat
jmp
mov
push
outsb
cmp
fs
pushf
movsl
xchg
add
leave
mov
xchg
pop
jmp
cltd
xchg
mov
es
aaa
push
pop
dec
in
int
jae
lea
pop
jno
lock
push
dec
call
lea
pop
jo
ret
or
cli
fldt
popf
jnp
in
cltd
cmp
adc
jb
pop
popa
dec
aad
test
adc
adc
jae
loopne
es
add
fsts
popf
or
or
aas
push
sarl
push
push
dec
add
cwtl
lock
scas
dec
daa
mov
adc
insb
int
out
stc
inc
or
xor
jb
dec
call
dec
pop
lods
call
push
pop
stc
push
imul
repz
mov
mov
jl
add
xchg
xlat
or
int
rcrl
inc
push
aas
sub
mov
xchg
dec
addr16
and
divl
push
test
add
addr16
mov
cmp
or
jmp
sub
sbb
lahf
sbb
movsbl
das
pushf
add
sub
fsubrp
test
js
mov
addb
shl
cmpb
inc
fsubs
mov
xchg
pop
dec
fidivrs
sub
xchg
test
mov
out
lods
out
fs
outsb
adc
cltd
pop
jg
loopne
mov
pop
fdivrs
cli
mov
fmuls
xchg
cmp
mull
inc
mov
push
or
cmc
imul
sbb
in
imul
inc
push
cli
dec
dec
dec
xchg
les
das
mov
or
mov
xchg
cwtl
jns
sbb
jl
test
push
loopne
icebp
fcoms
add
lea
adc
cmp
int
shr
frstor
nop
mov
imul
fs
out
xchg
xchg
sbb
jo
insl
inc
scas
hlt
imul
seto
ljmp
nop
sbb
add
sub
repz
scas
cwtl
inc
xchg
inc
xchg
jg
xlat
shrb
dec
lahf
adc
pop
aaa
test
inc
jbe
ds
mov
xchg
add
call
mov
mov
mov
mov
testl
ficompl
push
popa
jns
stos
sahf
imul
push
dec
mov
mov
cli
pop
adc
adc
pop
call
push
lret
cs
sarb
pop
out
mov
negl
xor
insb
in
scas
sub
pop
push
add
lods
notb
js
arpl
fnsave
lods
popa
sbb
mov
jle
fcoms
jg
subl
mov
sub
test
xor
pop
cmpsl
or
pop
pop
xchg
mov
push
call
stos
adc
jecxz
je
pop
pop
movsl
push
adc
loope
inc
fisubs
adc
inc
adc
es
popa
scas
cmp
cmp
icebp
xlat
sub
cs
mov
fcomip
adc
sub
push
scas
in
leave
sarl
xor
shll
int3
cmp
cli
rolb
scas
daa
mov
xlat
loope
mov
pusha
xchg
loope
xor
cld
out
push
decl
pushf
lret
xor
inc
nop
xchg
jmp
es
out
cli
cwtl
out
dec
leave
lods
movb
movsl
push
and
lret
imul
and
shrl
call
adc
or
sbb
iret
dec
mov
in
scas
loop
dec
mov
lods
fcmovnb
popa
daa
jnp
aad
dec
mov
or
std
sbb
stc
insb
xorb
testb
add
xchg
lret
mov
loopne
push
les
pop
adc
push
int
mov
add
jmp
mov
mov
pop
cmp
fs
add
sbbl
adc
cmpsl
cli
js
add
adc
push
cmpsl
aad
cmpsl
adc
out
mov
cmpsb
jbe
adc
sbb
aad
bnd
std
sub
loopne
mov
and
mov
ret
cmp
sti
mov
xor
sarl
aad
xorps
and
cmp
shrl
cltd
adcb
imul
bound
mov
jp
push
insl
mov
test
lock
mov
dec
xchg
mov
jno
and
sbb
dec
nop
imul
or
test
xchg
dec
movl
and
insb
lret
iret
xchg
ds
xorl
push
and
mov
dec
mov
cmc
dec
popa
hlt
pushf
or
xchg
mov
pop
leave
sbb
and
into
push
xor
jb
pusha
pop
inc
add
jge
lahf
data16
adc
and
lea
jae
jecxz
adc
add
jge
inc
mov
in
sahf
or
frstor
loope
out
push
subb
pop
sbb
and
clc
xchg
mov
rclb
cltd
sub
jbe
movsl
mov
lea
fdiv
movsl
clc
das
dec
push
xchg
fadd
sarb
mov
in
lahf
xchg
in
in
int
mov
out
mov
je
aam
bsf
imul
cmpsl
mov
ljmp
dec
push
shrb
repnz
aad
stc
mov
and
pusha
push
mov
mov
in
std
movb
and
mov
out
jns
pop
insb
xor
loop
or
inc
mov
pushf
lcall
or
testl
lcall
loopne
mov
fcompl
pop
push
xchg
or
jl
jecxz
xchg
neg
loop
lea
push
adc
sbb
push
or
pop
dec
mov
mov
call
xchg
inc
ret
mov
pop
fwait
sbb
sub
loop
lock
jle
adc
mov
fcmovne
orb
xor
xor
rorl
popf
cmp
cltd
and
sbb
pop
adc
cmp
sbb
mov
adc
out
adc
push
out
mov
sahf
rclb
fwait
in
out
jl
pusha
loopne
data16
fwait
cmp
inc
mov
addr16
dec
aad
inc
xchg
adc
push
mov
jge
gs
xchg
hlt
adc
call
repz
data16
sti
icebp
mov
or
dec
hlt
xchg
adc
icebp
jbe
pop
adc
adc
sub
test
aas
jne
xchg
push
dec
or
stos
test
mov
or
push
aam
loope
jns
imul
icebp
jg
mov
lods
pop
vsqrtpd
or
and
xchg
aas
mov
jo
dec
pop
xor
rorl
pusha
ds
imul
leave
sti
xor
pop
dec
pavgb
movsb
ret
adc
cs
cmp
jno
dec
mov
nop
mov
add
sbbl
ss
sub
or
inc
dec
push
cltd
int
pop
scas
jp
inc
stos
mov
and
testl
or
andb
hlt
xor
dec
jnp
fnstsw
imul
and
popf
bound
gs
mov
ss
iret
mov
push
dec
sub
mov
icebp
push
mov
sbb
inc
ret
in
repnz
xchg
jg
cmp
and
enter
xor
enter
lret
inc
ficompl
cmp
add
mov
cli
xlat
int
xchg
hlt
scas
popa
cmc
xor
call
or
jb
sbbb
xchg
mov
and
cmp
movsl
sbbb
cmp
loop
xor
shrb
pop
xor
jae
sbb
fistpl
lcall
inc
jbe
mov
vpsubw
aaa
lds
sbb
mov
sahf
or
or
pop
xlat
lds
mov
daa
xchg
xchg
stos
leave
aam
mov
loope
pop
fiadds
fldt
dec
in
lods
and
cld
push
mov
inc
xchg
addb
cltd
sbb
adc
sti
pminsw
jne
push
sbb
adc
push
pop
jo
push
cld
pop
jecxz
pop
xor
mov
push
mov
movsb
dec
repnz
and
arpl
lret
mov
lret
xchg
hlt
dec
outsb
test
cmpsb
mov
push
leave
mov
inc
cli
test
mov
cmpsl
in
fldl
shll
push
lcall
shrl
and
cli
push
test
clc
fnstsw
mov
push
mov
dec
ja
clc
mov
aad
push
bound
xor
faddl
sub
popf
or
inc
and
jae
inc
xchg
mov
jmp
leave
jg
fwait
shll
hlt
arpl
repz
push
xchg
insl
cmp
in
cmp
jnp
dec
lods
lahf
aam
aaa
push
mov
insl
daa
les
mov
gs
sub
mov
stc
or
and
rclb
and
xor
es
mov
rcll
cli
out
lock
mov
insl
mov
and
inc
fs
cmpsb
pop
int
movl
push
push
mov
std
ficoml
mov
mov
or
aad
mov
mov
and
xchg
xchg
push
popa
mov
sbb
dec
mov
iret
lcall
jl
ljmp
xor
pop
xor
fnsave
or
cmp
lahf
lods
imul
pop
shll
push
rorb
cmp
dec
xor
fisubrl
push
push
xchg
repz
in
pop
or
cmp
cld
movsb
jle
inc
or
xchg
and
cltd
mov
repz
cmpsb
mov
add
push
mov
cli
cmp
mov
in
jbe
or
fidivl
aam
xchg
and
and
lea
stos
test
lods
jp
je
lea
jl
xchg
ficoml
sbb
push
lods
inc
jge
pushl
cwtl
stc
xchg
inc
cmpl
nop
enter
xor
aam
push
jo
mov
cs
pop
pop
sbb
fwait
cld
pop
jmp
add
aaa
inc
scas
iret
cld
xchg
rclb
mov
incl
leave
and
test
je
sbb
gs
pop
test
fistps
or
aas
or
scas
mov
scas
cli
lcall
push
adc
mov
push
aam
fsubs
xchg
out
movsl
ja
std
les
lahf
fldenv
xchg
dec
out
inc
bound
insl
cwtl
xchg
cmp
jge
popa
cmpl
loope
cltd
fldenv
adc
sub
mov
push
movsb
rcll
mov
pop
xchg
adc
pop
popf
loope
cmpsb
sbb
dec
push
jnp
in
orl
sbb
rcll
mov
scas
test
cmp
add
dec
insb
push
or
mov
bound
movsl
ds
push
push
sub
lock
pop
cmp
popl
sub
push
jl
add
cmpsl
in
insl
xchg
jns
in
insl
xor
inc
adc
xchg
or
xchg
repnz
jmp
ret
mov
lret
xchg
mov
xchg
nop
divl
xor
fs
xor
add
and
aam
add
rcr
and
adc
sbb
rorl
xor
and
out
adc
outsl
cs
add
add
jne
lea
out
add
inc
add
fdivrs
lea
jmp
gs
or
mov
xchg
int3
inc
adc
and
jecxz
xchg
aas
inc
cs
mov
jle
fnsave
daa
insl
insb
or
mov
lcall
lock
xlat
in
fistpll
mov
pop
jb
and
push
sti
xchg
in
push
movsl
cltd
sub
testl
shrb
filds
lcall
mov
xchg
pop
rcrl
jbe
cmpl
jo
imul
xchg
pushl
sub
and
aad
mov
dec
aad
cmc
call
xchg
loope
int3
insb
or
or
push
push
mov
fucomip
xchg
and
jb
cmpb
dec
add
jns
xchg
lods
pop
xchg
fcoml
fnstenv
inc
mov
imul
jae
mov
push
subb
pop
int
fmulp
sbb
loopne
xor
daa
shrb
mov
inc
xlat
cmp
and
sarb
es
mov
gs
mov
rep
jg
loope
adc
mov
mov
jle
incl
popa
addr16
xchg
int3
flds
push
fnsave
jb
pop
lds
cmp
xor
mov
fisubrs
fistl
adc
imul
les
rcl
cmp
outsb
in
adc
pop
mov
sti
sub
cmc
push
dec
mov
call
dec
and
xor
mov
mov
fwait
movsl
fdivrs
xchg
clc
jecxz
jbe
rcll
sbb
outsb
cwtl
push
arpl
and
ret
mov
jmp
cld
xor
push
into
pusha
and
pop
add
lret
roll
loop
out
mov
mov
pop
insb
jecxz
outsb
and
call
sbb
adc
ss
imul
das
push
les
xor
je
pop
dec
mov
mov
sahf
out
call
addb
adc
pop
inc
cwtl
jae
popf
loopne
andl
jno
scas
arpl
sbb
les
push
mov
decb
cld
jmp
das
lea
lods
pop
lret
sbb
das
jl
std
xchg
iret
les
sub
jmp
and
mov
in
xor
ret
xor
pop
mov
sbb
sub
popfw
jmp
in
stc
and
std
xchg
faddl
aas
cmp
lods
nop
icebp
dec
jnp
sbb
mov
push
mov
call
pop
xlat
xor
loope
lock
cmp
repz
pop
fwait
cmp
dec
mov
adc
lea
punpckhbw
mov
xor
push
pop
xchg
or
inc
test
inc
push
xor
push
xchg
inc
fs
insb
test
adc
icebp
jne
xchg
fwait
stos
dec
push
pop
in
adc
xchg
push
xchg
subb
push
mov
inc
xchg
xchg
or
mov
ds
adc
mov
jnp
mov
push
jg
push
out
popa
pop
out
pop
jnp,pt
cli
jns
sub
fildll
mov
mov
push
imul
and
int
es
cmc
mov
fsubs
cwtl
mov
xlat
cmp
pop
sbb
xchg
cmpsl
subb
or
inc
add
push
rdpmc
jp
inc
inc
roll
shlb
and
sub
push
into
or
and
add
int
fisttpll
jmp
je
jge
dec
fdiv
push
sub
decl
inc
stos
inc
arpl
cmc
pop
cltd
packssdw
mov
push
bound
sub
cli
adc
mov
aam
jno
es
cmp
lret
dec
aas
jp
aad
gs
jno
pusha
jecxz
jb
int
clc
and
imul
loop
mov
clc
xor
in
and
in
push
lret
xchg
pop
ja
mov
xchg
stc
pop
shlb
push
mov
lods
xchg
movsb
xor
lods
dec
outsb
sti
mov
push
stos
or
les
cmp
jns
test
and
cs
push
out
xchg
sti
pop
jg
xchg
dec
cltd
and
ficoml
mov
cmp
ljmp
mov
dec
sti
insb
inc
cmp
inc
insl
lock
xor
or
jno
ret
ret
xchg
mov
cmp
adc
lds
nop
fcoms
fcomps
inc
xchg
inc
cmpb
out
push
and
mov
test
ret
add
bound
movsb
pop
lds
gs
rcrb
aaa
test
push
xor
mov
ljmp
jmp
xchg
lret
in
test
sarb
rcrb
jne,pn
stos
shr
pop
cmpsl
rorb
cld
sahf
cwtl
xor
or
or
push
out
add
mov
iret
jp
lahf
jecxz
int3
in
mov
ret
insl
sub
enter
jnp
popf
mov
inc
dec
aas
fcoms
les
call
cmp
aam
scas
dec
mov
repnz
mov
sbb
lret
leave
rolb
bound
mov
movsb
push
mov
mov
sbbl
jno
mov
ret
sti
lods
jb
xor
xor
inc
sbb
mov
mov
test
xorl
jge
cmp
emms
inc
sbb
ja
mov
scas
push
xchg
rcll
lret
rol
out
mov
mov
fsubrl
sbb
enter
pop
dec
fwait
cmp
and
dec
mov
xchg
adc
or
jo
xor
repz
leave
rorl
push
das
jge
lock
ret
xchg
push
sbb
pop
push
rolb
lret
xor
outsl
ss
setne
push
inc
push
stos
dec
dec
movsb
das
out
in
xor
xor
daa
and
pop
sbb
aad
jnp
and
cmc
mov
aam
int
movsl
cmpsl
subl
sbb
sub
pop
and
rep
dec
sarb
mov
sbb
xchg
add
int3
test
shrl
mov
mov
cltd
std
jle
mov
pop
jo
sbb
lcall
inc
rolb
les
adc
cmp
jb
std
scas
out
push
ret
push
sub
and
and
jne
or
cltd
or
pop
mov
jp
xor
cmp
lods
adcb
or
ja
xchg
insb
cmpps
cmpb
sahf
shrl
inc
adc
pop
movsb
inc
sbb
mov
jmp
arpl
xor
or
out
jb
inc
fcoml
mov
pusha
cmc
or
jg
inc
pusha
push
ds
mov
aas
inc
lock
mov
sbb
mov
ror
pop
mov
aad
or
or
lret
lea
sub
pop
cld
push
inc
inc
and
mov
je
pop
xchg
sub
negw
mov
filds
fnstsw
imul
lock
pop
mov
orb
icebp
push
jg
pop
xor
mov
add
stos
xchg
jecxz
add
dec
fcompl
pop
js
push
js
pop
jae
repnz
jae
pop
pushf
mov
fmuls
loope
cmp
js
cmp
mov
mov
mov
outsl
gs
fimuls
bound
popl
cmp
push
data16
cs
scas
xchg
enter
aas
adc
cmp
mov
and
inc
mov
xchg
je
sbb
lahf
scas
popf
pop
int3
lret
out
cmpsb
outsb
adc
outsl
pop
mov
hlt
repz
sub
hlt
add
into
stc
or
mov
loop
cs
test
out
push
pushf
mov
pop
out
xchg
xor
repnz
aad
frstor
sub
ljmp
hlt
adc
cld
pop
lds
push
into
fwait
lods
out
inc
adc
ljmp
test
cld
mov
repz
hlt
xchg
int3
insl
pop
pop
add
lret
add
les
sbb
in
xor
stos
push
inc
arpl
jle
pop
in
mov
jl
popf
pop
jns
mov
in
out
dec
sub
adc
dec
mov
add
mov
es
xor
jg
cmp
inc
dec
aam
push
add
mov
inc
cmp
cmp
dec
push
cmp
imul
sub
mov
lock
fs
dec
inc
fstl
pop
mov
fs
in
sbb
add
jg
lods
ret
jp
out
push
mov
xchg
push
iret
mov
out
pushf
dec
rcr
push
test
test
mov
mov
pusha
ficoml
shlb
pop
in
movsb
hlt
shlb
les
push
add
in
jecxz
or
push
out
add
les
mov
fwait
xchg
fdivs
insl
aaa
mov
add
and
add
lods
pop
roll
sub
push
scas
pop
mov
inc
xor
fmuls
outsl
and
nop
cltd
xchg
stos
xchg
jb
shr
fdivrl
imulb
lods
push
sub
push
jmp
xchg
lahf
pop
pop
xor
and
jl
pushf
sub
jmp
sub
mov
push
pop
cld
in
fsub
pop
and
push
add
mov
jecxz
lea
jbe
fistl
dec
ljmp
or
mov
jecxz
aam
arpl
add
or
or
divb
sbb
iret
sub
mov
xor
mov
loope
cmc
adc
or
xchg
iret
sub
add
push
lds
push
jb
test
mov
add
cmpl
cmp
jle
aad
out
push
adc
cmp
dec
mov
mov
clc
cmpsl
push
add
cltd
int
dec
je
into
imul
in
leave
xchg
push
icebp
push
cmpsl
ret
outsl
inc
out
sbb
loop
int
mov
pop
add
jne
out
lods
mov
inc
idiv
and
xlat
ficoms
mov
cmp
cltd
or
test
add
or
repz
stos
add
adc
arpl
dec
dec
fdivs
stos
pop
sub
fistps
xchg
sbb
mov
daa
xchg
cltd
stc
and
in
fwait
iret
shrl
sahf
mov
jmp
mov
cmc
jp
inc
mov
xor
mov
fsubrl
cmp
mov
mov
rclb
sahf
aam
inc
nop
ret
fistpll
mov
in
pop
loopne
add
lcall
push
dec
xor
xchg
clc
inc
stos
dec
adc
js
ljmp
dec
mov
add
cmpb
add
ss
mov
jo
pop
and
xor
push
and
add
dec
and
sub
mov
jle
in
dec
lret
mov
adc
xor
loopne
gs
sub
xor
push
mov
xlat
push
dec
xor
aad
jno
mov
jg
lods
jae
aam
or
and
mov
push
pop
dec
lods
and
testl
inc
out
es
cmp
data16
add
aaa
test
mov
sbb
xchg
pop
pop
pop
fmull
and
or
in
int
push
push
mov
lea
mov
aaa
sahf
xchg
jns
cmc
push
lods
cmovne
insl
dec
xchg
sub
mov
dec
pop
ja
jmp
cltd
lahf
xlat
cltd
scas
stos
ljmp
jg
jl
lahf
add
sub
test
roll
push
imul
sbb
enter
push
ficomps
sbb
push
push
jg
inc
into
test
sbb
inc
mov
jge
push
orl
imul
fisttpll
fidivl
or
cmpsl
fsubs
ret
push
add
clc
mov
pusha
push
leave
push
lret
insb
dec
dec
inc
call
test
cmpxchg
and
ljmp
and
lcall
push
add
pusha
inc
jo
lods
test
sub
cmp
pusha
jno
mov
mov
lret
out
inc
outsb
add
in
ja
pop
sbb
xor
ret
dec
mov
lahf
dec
adc
pop
insl
and
sahf
shufps
movsb
in
and
cmc
jl
jge
dec
adc
movsb
jp
mov
push
fildll
cmp
lods
ljmp
aad
rolb
stos
fnsave
mov
xor
inc
sub
jbe
aas
dec
hlt
add
sbb
aas
enter
outsl
pop
repnz
adc
fwait
jnp
sti
sbb
cltd
fistpl
xchg
mov
fbstp
dec
lret
ret
movsl
daa
mov
addr16
daa
pop
adc
xor
or
jp
mov
out
cmp
or
mov
adcb
jo
lahf
push
test
and
ffreep
sar
data16
popa
cli
mov
test
sar
mov
vmaxps
xchg
adc
cld
mov
sub
xor
test
loop
outsl
repnz
cmc
mov
sbb
pop
push
mov
gs
adc
cmp
std
mov
cwtl
std
pop
int
enter
adc
in
inc
mov
roll
sbb
mov
and
sub
push
movl
sub
push
mov
xor
repnz
int3
cmc
out
bound
stos
test
push
push
cld
sub
cmp
int3
push
aas
jmp
mov
mov
adc
or
daa
outsl
lcall
push
adc
sbb
adc
stos
sub
xchg
jecxz
and
fstpt
jle
pminub
xchg
push
cmp
cwtl
add
in
or
ret
js
inc
sbb
pop
xchg
mov
cmp
mov
inc
mov
mov
stos
mov
add
fsts
int3
jl
push
mov
mov
add
dec
sti
adc
sub
pop
loop
pop
xor
dec
fwait
and
mov
sbbl
pop
rorb
outsl
imull
icebp
testl
dec
jo
mov
jns
shll
cld
lds
adc
sbb
inc
pop
cmp
cs
mov
sbb
pop
xchg
flds
je
and
lods
pop
mov
popf
pusha
out
mov
cli
rolb
jge
out
sbb
mov
cwtl
cmp
sahf
das
ret
fstl
es
mov
xor
jmp
cwtl
sub
xor
push
jne
jns
imull
aam
cmp
fimuls
sbb
out
cs
mov
and
mov
test
testl
in
movsb
mov
jns
xchg
adc
pop
xchg
pop
movsb
pop
inc
pop
mov
sub
jne
push
cs
mov
repz
jnp
pop
fistpll
add
pop
je
mov
dec
jge
out
pop
loopne
out
dec
inc
cld
pop
dec
xchg
jo
insb
xchg
iret
and
jo
jmp
icebp
dec
data16
xor
testb
jecxz
adc
cmc
adc
roll
dec
dec
repnz
cs
dec
adc
mov
fcmovne
es
pop
xor
push
les
mov
ds
test
xchg
cmpsl
aas
xchg
xor
sbbb
xchg
dec
movsl
fimuls
push
es
cmpsl
loope
out
ja
mov
fdivrl
ja
cmp
mov
and
dec
bound
mov
pop
sbb
mov
lcall
mov
jns
insb
dec
add
pop
lahf
mov
andl
jno
iret
test
and
pop
jmp
xor
push
add
cmp
push
jmp
jg
aam
jb
inc
enter
xor
xchg
xor
push
cs
jae
mov
ret
jecxz
push
stos
sbb
mov
jl
ss
sub
das
leave
dec
mov
lcall
push
cwtl
xchg
sahf
cmp
mov
test
push
popa
sahf
jle
and
popl
push
jmp
xchg
lret
popa
or
nop
dec
push
dec
bswap
mov
in
in
inc
je
lahf
sub
out
xor
add
pusha
sub
sbb
sbb
mov
int
jb
pop
ss
cmpsb
das
lahf
pop
add
mov
ljmp
cli
shll
sub
pop
movsl
addr16
in
es
xchg
fnstsw
cwtl
or
sbb
outsb
xchg
cltd
sbb
pop
adc
jl
ret
adc
cmpsb
mov
dec
loopne
xor
int3
test
cmovo
mov
fadds
test
sbb
daa
insb
jp
add
mov
stos
mov
jb
sti
lods
mov
dec
adc
jmp
xchg
jp
pop
fcomps
push
sbb
mov
rcrb
or
inc
pop
into
ficoms
cmp
xchg
dec
inc
cmpsb
jne
push
cltd
movsl
mov
mov
or
loopne
and
clc
sti
pushl
test
arpl
es
rolb
pop
sbb
pop
int3
sub
mov
lock
and
jo
pusha
std
cmp
orb
xor
cmp
cmp
lret
mov
arpl
scas
mov
sub
sbb
xor
fs
pop
lret
roll
push
stos
jmp
cmp
xor
test
aas
sub
aaa
xor
sbb
mov
push
scas
lret
hlt
pop
or
and
dec
imul
xchg
loop
scas
dec
mov
xlat
xchg
add
xor
jne
fiaddl
push
jae
nop
add
push
negb
xchg
scas
or
stos
xchg
clc
dec
cmp
and
jb
mov
adc
cwtl
lea
add
adc
hlt
imull
int
and
and
cmp
inc
nop
cmpl
cmp
mov
out
sbb
and
pop
xchg
ret
inc
mov
rorb
popa
sub
sub
sub
mov
cwtl
jns
test
inc
cmp
add
pop
fisttps
xor
mov
stos
out
lret
and
inc
in
test
loope
or
ja
sub
jns
mov
je
cld
int
mov
stos
jo
shlb
mov
and
mov
sub
and
popf
lock
les
jg
cli
dec
jne
andb
dec
or
enter
je
inc
stc
xlat
cmp
shr
mov
jp
daa
aas
push
push
dec
imul
inc
in
inc
and
mov
sbb
mov
out
lds
and
scas
jbe
and
scas
negb
enter
imul
insb
and
lods
push
mov
jns,pn
push
or
fnstsw
je
inc
sub
sbb
pop
sub
cmpsb
xlat
bound
and
int3
lods
clc
xor
imul
xchg
cmpsb
outsb
fimull
xor
and
pop
mov
retw
rorb
aaa
clc
lods
sub
xchg
or
add
inc
jns
std
mov
xchg
insb
pop
push
lock
out
test
jmp
and
push
pop
int3
es
dec
ljmp
or
push
pop
adc
xchg
imul
sub
addr16
and
xchg
mov
and
insl
mov
sub
test
jae
int
pop
xchg
jmp
push
mov
and
mov
ret
fisubrl
xor
xchg
ret
int3
push
adc
cmc
fildl
jno
adc
cld
pop
xchg
int
insl
add
les
or
clc
inc
fsubrl
pop
mov
jmp
repnz
leave
pop
mov
pop
mov
sub
sbb
ret
cmc
fnstsw
fldcw
outsb
adc
cmp
jp
jne
mov
int
popf
xchg
cmp
push
shrl
mov
cld
xchg
cmpsl
xchg
mov
xchg
mov
lods
push
std
jns
pop
into
test
fwait
sti
fwait
out
subl
daa
pop
fisttpl
sub
push
inc
insl
outsb
cmc
sub
mov
jle
mov
mov
or
adc
int
adc
xor
lock
cmp
shrl
out
push
push
das
xchg
repnz
jecxz
jle
xchg
mov
jg
add
add
sbb
sbb
push
mov
scas
fiaddl
lret
in
jmp
jge
dec
out
and
jb
aas
inc
jno
mov
push
xchg
inc
std
fucompp
filds
or
add
dec
xorb
mov
adc
adc
jo
inc
add
outsl
xchg
das
movsl
mov
les
aam
loop
popf
mov
fisttps
pop
pushf
out
adc
int3
pop
and
push
fs
aam
sbb
daa
repnz
insb
dec
or
cmp
add
inc
mov
dec
loop
sti
loope
ret
push
jle
push
shll
popa
xchg
cld
xor
xor
adc
pop
fs
ja
loopne
sub
call
inc
add
and
xor
adc
jge
ret
divw
push
or
cmp
push
lcall
inc
les
sarl
shl
adc
inc
shrb
mov
pushf
sbb
jnp
xlat
adc
pop
scas
pop
shlb
mov
sbb
add
cli
shl
mov
mov
lock
je
fcomip
sbb
cmpsl
mov
fdivs
popf
push
mov
fsts
push
inc
dec
sub
pop
lods
mov
fldl
mov
rcll
cmp
jno
test
sub
mov
push
ficomps
lds
fistl
movsl
cltd
test
popf
cmp
xchg
fistpll
std
push
js
loopne
push
or
and
test
leave
cltd
add
insl
aas
js
push
xchg
testl
inc
cmp
outsl
pop
repz
ss
or
push
imull
xchg
and
movsb
outsl
lret
loop
mov
in
ficoml
xor
mov
xor
fwait
inc
repnz
jbe
sub
or
loope
movsl
jno
jns
xchg
adc
mov
pusha
inc
nop
ljmp
cs
sbb
sbb
jg
inc
push
das
jecxz
bound
aaa
mov
mov
lods
cmc
mov
xchg
inc
mov
shll
lcall
cmp
negb
dec
clc
ss
xor
call
and
mov
mov
lret
sarb
popa
pop
mov
or
sti
enter
sub
inc
xlat
hlt
xchg
and
mov
xor
aad
test
xor
cmp
mov
fnstsw
xchg
mov
push
jo
or
adc
testl
adc
sub
jmp
mov
pop
shr
test
mov
imul
push
ficoms
lret
ret
orl
mov
popa
push
test
daa
jg
out
mov
and
and
std
test
push
enter
push
xchg
data16
sahf
jb
and
xchg
pop
or
aaa
jge
pop
dec
ljmp
test
insl
mov
fucomi
xchg
mov
imul
es
adc
call
jno
add
xchg
cmp
mov
xchg
and
fimuls
imul
mov
in
test
xor
js
sub
mov
leave
xchg
das
mov
xchg
add
pop
cmpsb
mov
mov
adc
cmpsb
xor
xor
sti
pop
rcr
mov
mov
bound
push
cmp
fbld
enter
push
ss
or
inc
mov
popa
and
push
mov
daa
negb
repnz
xchg
xor
loop
jns
inc
lods
lcall
icebp
or
jb
and
and
mov
sub
mov
frstor
and
inc
stos
shlb
ja
mov
mov
out
lods
push
add
hlt
repnz
int
lea
dec
dec
outsb
mov
loopne
ljmp
popa
sahf
les
in
mov
outsb
insb
cmp
jae
xlat
xor
orl
xchg
pop
pop
pop
bound
jne
pop
lods
mov
icebp
dec
dec
mov
sahf
pop
pop
pop
mov
popf
hlt
jecxz
inc
and
add
cwtl
push
pop
or
test
lcall
std
xor
out
lcall
mov
rolb
pop
out
out
add
xchg
jns
repnz
and
add
sbb
sbb
jl
imul
adc
xor
push
add
mov
getsec
jmp
ret
cmp
push
adc
cmc
push
inc
mov
push
pop
mov
dec
and
leave
fstl
mov
cmp
mov
pop
jbe
inc
mov
adc
lcall
fnsave
push
dec
rorb
or
pop
pop
in
sbb
cmc
jns
or
pop
int3
inc
inc
and
outsl
popa
or
fldcw
ret
mov
stos
cvtpi2ps
ss
push
pusha
mov
fmull
sbb
mov
fidivl
fnstsw
test
dec
int
add
sti
push
test
cmpl
sbbl
push
iret
js
add
jecxz
imul
icebp
out
stos
sub
or
hlt
add
popa
xchg
pop
mov
jecxz
in
mov
jne
add
movsl
add
mov
movsb
sbb
lock
rolb
cmpsb
imul
nop
jo
dec
inc
cmpsl
andl
mov
push
lcall
jo
mov
ret
lcall
in
pop
mov
insl
pushf
add
in
and
mov
pop
xchg
lock
mov
and
inc
es
in
mov
scas
add
sbb
mov
jmp
cmp
out
mov
inc
jl
stos
push
imul
pop
in
pop
add
cs
lea
xlat
push
fdivrs
dec
push
stos
pushf
pop
pop
mov
push
popa
sub
mov
push
mov
mov
pusha
icebp
xchg
sbb
xchg
push
pop
jp
xchg
sub
push
or
sub
jp
adcl
out
fmull
inc
push
xchg
and
or
es
push
dec
ss
cmp
sbb
sti
adcb
mov
push
xchg
int
push
popf
xor
iret
ret
mov
push
ds
xchg
cld
or
mov
and
xchg
lahf
retw
adc
in
cli
pop
jbe
inc
xor
and
in
das
jno
mov
dec
or
ret
enter
enter
add
cmp
aam
xchg
inc
jmp
addr16
in
jno
ffreep
out
in
dec
cltd
jns
push
clc
test
mov
mov
push
sbb
mov
add
int3
cwtl
ss
xor
aam
jo
sub
sbb
rolb
movsl
jge
xchg
fiadds
xchg
add
sarl
xor
inc
mov
adc
jns
les
test
jl
pop
xchg
mov
in
aam
or
nop
loop
mov
loope
sbb
aas
and
inc
adcl
rcr
xor
mov
nop
mov
mov
pusha
xchg
push
xchg
mov
outsl
pushf
lds
xor
out
mov
loope
sub
xrelease
pop
pop
cli
lahf
cwtl
notb
shll
aaa
in
jne
xor
jmp
ret
push
push
sub
dec
test
cmpsl
bound
sahf
adc
add
push
push
xor
aaa
fld
fnsave
std
subb
push
add
jmp
js
imul
mov
inc
and
add
mov
lret
lds
les
cs
xor
pop
fwait
add
xchg
xchg
fistpll
subl
imul
lods
out
pop
sub
orb
or
lcall
inc
push
mov
mov
inc
sub
pop
icebp
movsb
mov
shlb
or
loop
add
std
ljmp
or
dec
add
int3
sub
add
mov
out
in
xor
jae
inc
aad
pop
jmp
daa
push
lds
stos
mov
dec
insb
or
dec
and
cmc
int3
adc
dec
ja
mov
and
gs
push
dec
scas
psrld
jge
jl
jns
scas
andb
mov
lock
dec
xchg
aam
pop
lea
bound
cmpsl
imul
insl
in
pushf
nop
mov
sbb
imul
std
loop,pn
cli
mov
pushf
pop
pop
roll
ret
bound
add
gs
ds
cmp
lret
sbb
push
fimuls
and
xor
hlt
mov
push
in
mov
mov
aaa
jbe
dec
jle
movsb
pop
scas
into
jecxz
xor
lds
lea
push
dec
mov
test
leave
sub
mov
fs
inc
pcmpgtd
stos
or
pop
imul
decb
call
test
into
mov
or
addr16
cmp
pop
xchg
pushf
sarb
test
sub
sbb
mov
adc
jns
and
mov
scas
subl
sub
mov
add
inc
mov
repnz
inc
adc
mov
inc
pop
xchg
xor
cmc
sti
adc
jmp
mov
insb
popf
and
mov
gs
aas
loop
xchg
stos
scas
sarl
fwait
out
mov
lds
ret
jg
ret
outsl
and
dec
es
fwait
jb
xchg
iret
bound
jne
cld
loopne
xchg
cmp
sbb
adc
shrl
push
cmc
hlt
mov
pop
inc
xor
push
pusha
push
popa
lret
jo
loop
xchg
pop
push
hlt
aam
and
int3
aad
add
les
sarl
or
nop
mov
popf
jmp
or
inc
je
pause
addl
jbe
mov
int3
mov
sti
cmc
fisttpl
lds
icebp
mov
or
loopne
jge
pop
imul
outsl
imul
mull
pop
scas
test
stc
add
mov
pop
cltd
pop
mov
adc
pop
in
pop
xchg
mov
jb
cmp
stos
sarb
jge
mov
enter
pop
inc
into
add
repz
pop
jecxz
popa
jl
xchg
jle
jg
in
push
adc
outsl
sbb
push
adc
sbb
or
in
sbb
shll
clc
dec
lods
lods
inc
out
les
xchg
in
pusha
jnp
mov
sub
jmp
fcmovu
mov
lods
mov
xor
xchg
mov
inc
xchg
idivl
stc
xchg
sub
in
jae
push
jmp
sbb
push
push
cmpsb
pop
mov
mov
push
int3
aam
ret
addr16
dec
aam
std
dec
fbld
xor
repz
insl
imul
fwait
dec
pop
mov
inc
pop
lds
push
push
popf
sbb
jne
mov
shll
cld
mov
xchg
sub
jl
jno
imul
jg
test
addr16
test
or
xor
dec
stc
push
hlt
roll
out
das
loope
or
ja
inc
jnp
add
xchg
inc
inc
mov
push
inc
shl
insl
and
daa
mov
aaa
movsb
outsb
lahf
inc
mov
mov
or
icebp
cmpsl
movsl
inc
pop
test
lock
mov
dec
pop
rclb
cmpsb
in
push
enter
push
mov
xchg
or
mov
sub
mov
test
lcall
sub
outsb
ds
and
push
pop
xor
lods
mov
cld
cmp
xchg
xchg
fdivrl
cld
or
fsubrs
shrl
add
lods
xor
loopne
mov
inc
ret
fbld
lods
lret
out
jmp
imul
stc
in
lret
aas
xchg
movsb
shl
imul
xchg
inc
sti
insl
mov
movsb
sbb
pop
out
lcall
xchg
leave
mov
lea
sub
aam
jae
lea
mov
lret
sbb
addr16
push
fstl
dec
int3
lret
push
pop
lea
cs
lods
cmp
pop
pop
xor
into
lods
push
xchg
lock
pop
ljmp
mov
inc
fimuls
loope
repnz
adc
dec
mov
rolb
push
dec
movzwl
arpl
aaa
sbb
cltd
subl
sbb
push
push
cmc
call
pushf
out
and
scas
lret
je
pop
mov
stc
add
fisttpll
sbb
mov
mov
push
iret
or
xchg
ret
pop
icebp
xchg
add
push
pop
adc
push
loopne
mov
dec
pop
push
pop
push
rorb
and
andl
icebp
jl
sub
fbld
fadd
lea
out
rolb
movsb
into
ljmp
adc
sbb
mov
xchg
push
jp
sahf
cmp
sbb
pop
mov
xchg
sub
std
movsl
int
pop
dec
dec
les
inc
jnp
loopne
movsb
mov
scas
dec
mov
cld
and
add
out
push
das
test
pop
cmp
and
jp
imull
dec
test
lods
fstl
sahf
gs
cmp
jge
mov
mov
adc
mov
mov
cwtl
adc
lea
sub
test
mov
add
dec
sti
sbb
std
sti
push
or
pop
jl
and
mov
in
int
iret
pop
neg
cli
lods
inc
add
addr16
movsb
xor
ss
bound
out
das
cmp
cmp
xor
shll
es
lret
ret
cmp
imul
lock
bound
leave
adc
movsl
sbb
push
punpckhdq
je
daa
fwait
xor
in
jo
fwait
cld
movsl
mov
call
push
leave
and
xchg
rcrl
adc
mov
setge
aam
inc
cmp
loopne
lret
mov
aam
mov
dec
jp
clc
fstpt
add
mov
mov
mov
mov
popf
je
test
jmp
scas
shlb
inc
push
xor
mov
shl
insl
xchg
jg
jbe
mov
pop
fwait
popw
cmp
repnz
sub
hlt
stos
push
in
dec
push
jnp
mov
xchg
pop
cmp
lods
xchg
mov
int3
addb
popf
mov
push
adc
scas
mov
jne
xlat
into
and
mov
mov
jge
jns
push
push
inc
cmp
jge
insb
lfs
xchg
add
push
fwait
pop
idivb
and
dec
pop
push
ljmp
xor
daa
adc
int
and
aas
mov
loop
mov
mov
repnz
cli
mov
add
sub
push
rolb
jmp
dec
outsl
xor
rcr
adc
mov
dec
mov
xchg
xchg
in
adc
cmc
into
pop
pop
test
aas
fcoms
scas
push
lret
mov
addr16
lea
xchg
cmp
rcll
sti
enter
mov
jle
push
adc
pop
sbb
dec
mov
pop
mov
sbb
dec
jg
cld
hlt
fst
inc
mov
loope
fwait
sub
xchg
ficoml
iret
jl
leave
cwtl
mov
addb
haddps
pop
aaa
subl
inc
in
xchg
loop
leave
adc
aad
jmp
call
fst
aam
popf
shlb
in
hlt
pop
sub
sbb
pusha
jle
cld
cmp
loopne
jo
scas
clc
push
sub
push
jp
mov
fdivl
test
xchg
stos
mov
lods
fldenv
xor
cmp
and
mov
insb
dec
leave
cmp
add
push
leave
loop
xchg
jnp
hlt
imul
pop
sub
ja
xchg
dec
ljmp
fistpl
scas
inc
and
data16
das
adcb
mov
ret
mov
push
sbbl
daa
call
movsb
mov
lahf
cmpsb
and
rorl
sub
pop
movsb
xor
mov
mov
fwait
aas
jns
inc
fisubl
fcompl
mov
les
cmp
pop
pop
mov
cltd
scas
ret
jmp
push
mov
pusha
js
mov
lods
cmc
roll
sahf
cmpsl
dec
sbb
out
pop
jmp
test
addr16
stos
dec
lds
lods
ret
add
scas
jp
in
je
test
lds
add
inc
mov
adc
adc
js
fwait
pop
fcoml
mov
addr16
mov
mov
dec
sub
mov
xor
ds
or
mov
repz
xor
xchg
xchg
jno
mov
inc
andl
xor
stc
mov
ret
cmp
push
arpl
dec
pop
out
lahf
pop
fsubl
movsl
mov
lahf
fistpll
mov
cmp
jg
lret
adc
push
ret
in
pop
addr16
arpl
les
jno
cmp
mov
push
orb
adc
mov
pop
loopne
and
iret
lret
cwtl
out
and
pop
pop
movsb
dec
mov
out
adc
es
adc
mov
test
sub
and
cld
adc
sub
jge,pn
ds
pop
pop
mov
leave
sub
xchg
lcall
cmp
fisttpll
hlt
std
mov
popf
insl
jno
scas
loopne
fildl
or
pop
stc
jle
mov
inc
mov
sub
sbb
test
cmc
inc
in
add
out
ds
add
es
loopne
movsb
mov
dec
cwtl
mov
mov
loope
xchg
xchg
das
pop
in
mov
imul
aas
repnz
add
das
and
daa
in
iret
aam
add
insb
xchg
aaa
out
fisttps
adc
insb
and
and
movsb
and
mov
cmc
and
mov
sub
mov
arpl
xchg
sarl
adcl
dec
ljmp
jmp
lock
js
ja
repz
out
insl
mov
stos
sbb
adc
aad
pop
jb
repnz
pop
xor
inc
inc
iret
fdivrl
jbe
jb
icebp
adc
sahf
mov
repnz
cmpsl
fwait
loope
rcrl
pop
icebp
fcomi
out
push
ja
xchg
insl
push
mov
test
adc
sbb
sub
jne
mov
shrl
and
in
adc
fmuls
cmc
lret
lahf
loopne
test
or
rcrb
jae
add
sub
test
adc
inc
pop
cmpsl
nop
loop
or
push
inc
fcmovne
jnp
xchg
xor
lds
fdiv
mov
pop
xchg
add
push
mov
mov
out
out
push
mov
in
cli
push
push
sub
insb
push
push
outsb
popf
dec
fsub
adcl
insl
arpl
je
jecxz
inc
and
and
add
push
xor
in
push
mov
stos
bound
pop
cmp
push
fimuls
lea
outsb
mov
and
dec
int3
lahf
push
out
sub
mov
outsb
dec
aaa
sbb
xchg
dec
and
lods
mov
or
bndldx
lcall
xor
in
push
popa
push
js
gs
inc
sahf
out
imul
stos
mov
movl
bound
lods
push
mov
pop
mov
mov
xor
push
xor
xchg
sti
mov
push
lsl
jns
rolb
push
mov
add
sbb
xor
sbb
pusha
xor
outsb
lods
iret
pop
pushf
add
cmpsb
jg
push
icebp
divb
cmpsl
ljmp
push
enter
cltd
sbb
dec
mov
push
les
sbb
std
leave
jo
stos
jns
shll
mov
push
inc
adc
xchg
cmpsl
decb
dec
cmpl
lock
es
outsb
mov
xchg
pop
xchg
ljmp
into
imul
insl
jge
xor
adc
insl
cmpsb
sbb
rcrb
mov
lret
int3
bound
bswap
adc
arpl
mov
or
push
xchg
rclb
push
nop
push
inc
sarb
out
lock
and
inc
mov
mov
add
in
inc
xchg
mov
inc
or
jo
nop
xor
stc
sub
mov
mov
cs
add
mov
mov
lods
jns
pop
outsl
mov
ficompl
add
out
stos
and
movsl
mov
rclb
fwait
stos
pop
call
adc
push
btr
jle
popa
mov
lret
mov
lret
scas
dec
or
mov
popl
lret
push
cmp
push
stos
xor
je
fs
pop
sbb
sti
mov
adc
cld
xchg
fcomi
shlb
push
addr16
mov
out
mov
or
inc
popf
adc
outsl
or
ja
xchg
stc
lea
roll
push
adc
in
ja
fdivrp
or
ja
addl
mov
dec
mov
adc
inc
mov
cmp
adc
mov
iret
and
cmp
sub
shrb
mov
push
dec
push
hlt
sbbb
xchg
sub
mov
stos
pop
dec
insb
pusha
fisttpl
lock
pop
mov
sub
or
jnp
in
dec
pop
xor
or
or
ljmp
iret
test
icebp
pop
dec
and
push
jmp
daa
mov
cmp
or
js
pop
adc
les
into
xor
fimull
mov
and
int3
shufps
pop
addr16
mov
fisubrl
test
nop
mov
cmpsl
xor
xor
sub
and
jl
fwait
mov
fs
sub
sbb
push
outsl
lea
lds
in
jg
fsubr
add
push
or
xlat
inc
xor
pushf
lret
pushf
rcll
das
fsts
es
mov
ret
mov
aaa
inc
imul
mov
or
mov
fwait
popa
mov
pushf
sub
or
sub
movsb
out
clc
mov
mov
lahf
dec
pop
dec
ret
in
jl
xchg
sbb
mov
scas
sub
xchg
scas
dec
cltd
sub
aaa
daa
inc
mov
cmp
jno
push
xchg
pop
rcrl
inc
cmp
sbb
ret
push
lods
push
adc
sbb
dec
pop
loopne
rorl
out
mov
or
stos
cmp
ljmp
push
js
pop
rol
mov
aam
mov
pop
jns
sub
lcall
push
clc
std
xor
testl
mov
pop
push
add
pop
add
fcmovnb
dec
stos
mov
test
push
test
dec
stc
mov
mov
je
inc
in
or
sbb
adc
rcrb
mov
xor
mov
mov
mov
jmp
lcall
movsb
mov
inc
rcl
jp
jg
lret
sub
or
stos
movl
into
sbb
pop
pop
mov
call
push
cmc
cmpl
and
test
adc
hlt
and
xchg
pop
popa
test
rorb
imul
or
push
cld
fwait
insl
mov
dec
jge
push
in
adc
insl
or
sub
mov
bound
inc
loop
leave
adcl
pop
mov
shr
inc
cmp
cmpsl
add
xchg
cltd
inc
mov
xor
dec
push
add
movaps
and
cltd
hlt
jmp
cmp
mov
lcall
mov
faddl
aad
jae
arpl
adc
xchg
add
clc
pop
sub
inc
mov
cmp
pop
lahf
in
or
adc
out
mov
shlb
add
jle
mov
rclb
ficoms
mov
mov
jnp
call
andb
or
push
lods
jbe
pushf
ret
pop
xchg
sbb
sub
lret
add
add
adc
rol
out
mov
shrb
mov
pop
into
xor
inc
inc
cmpsl
sub
cli
aaa
pop
adcl
cmc
and
or
das
and
xor
sbb
sbb
sub
bound
xchg
adc
fadd
lods
mov
add
adc
inc
push
push
and
xchg
xor
add
jle
hlt
adc
push
bound
push
mov
dec
push
add
fldl
fstl
mov
jp
test
sbb
sbb
mov
ss
ret
sub
pop
sub
xor
nop
jg
add
pop
mov
stc
jb
xchg
xor
and
lcall
lods
add
jecxz
ja
lahf
or
mov
je
sarb
in
cmp
rcrl
mov
je
in
jb
and
aaa
pop
push
mov
xor
hlt
out
jl
out
lds
ljmp
lea
cmpsl
adc
cmp
jmp
pushf
lds
adc
xchg
pop
pop
leave
add
pop
mov
push
outsb
sub
and
pop
dec
filds
mov
call
rolb
lods
movsb
inc
dec
push
inc
in
sub
call
cmp
ljmp
or
mov
inc
lods
xchg
in
sub
ds
jnp
insl
sbb
sbb
out
jb
xor
pop
or
aam
loope
push
movsl
fcompl
scas
sbb
jne
pop
sbb
je
push
push
icebp
idivb
int3
push
lds
movsl
jmp
out
jne
mov
xor
jge
mov
outsl
xchg
cmp
add
out
out
inc
xor
adc
ret
lcall
or
xchg
movsl
pop
aaa
loop
pop
and
mov
push
lret
clc
adc
mov
dec
cmp
inc
fwait
cmpsl
mov
int3
inc
xchg
cs
jae
mul
clc
stc
pusha
jo
jo
mov
mov
test
out
xchg
popf
mov
or
add
lods
stc
les
cmp
clc
sub
cwtl
enter
lock
inc
or
adc
adc
icebp
test
push
xchg
xchg
lret
sahf
jb
pop
add
pop
xchg
pop
xor
push
or
inc
movsl
fldt
xlat
dec
or
jae
mov
jae
frstor
fmulp
fwait
and
andb
ret
push
test
data16
cmpsl
xchg
jne
pop
or
jo
ret
or
mov
inc
cmp
xor
mov
js
add
pop
shl
hlt
daa
xor
sub
cmp
out
jb
push
mov
rcll
dec
mov
and
insl
insl
shr
lret
adc
lock
or
out
rcrb
cmpsb
jo
push
pop
imul
rorl
repnz
enter
nop
popa
mov
fs
fimull
cmp
inc
xlat
dec
in
sbb
lahf
fisubrs
cmp
in
or
push
or
mov
or
add
mov
push
jmp
jo
inc
inc
xor
cli
shlb
nop
jecxz
jns
mov
pop
loope
into
shl
les
xchg
mov
xchg
pop
jmp
out
enter
inc
in
add
out
shl
shr
shrl
stos
adc
or
or
push
dec
sbb
jg
dec
cmpsb
pop
rclb
fwait
dec
dec
add
xor
data16
adc
repz
cmp
js
clc
xchg
push
test
roll
pop
int
push
xchg
int3
test
fs
rcrl
xor
inc
aam
ret
shlb
jmp
out
sub
sub
adc
fwait
add
jmp
add
in
testb
or
add
bts
mov
dec
cmc
jo
pop
push
jmp
push
jns
in
push
hlt
repnz
scas
mov
pop
mov
dec
xor
cmp
mov
cmp
jnp
push
sbb
aaa
je
xlat
imul
jnp
mov
pusha
mov
ds
inc
repnz
je
test
sarb
pop
negb
push
xchg
call
push
push
dec
push
cmp
xor
pop
mov
jle
mov
imul
loope
je
inc
sub
jns
pop
push
test
pop
dec
jbe
scas
mov
addl
aaa
sbb
lods
aas
push
cli
fiaddl
sbbl
pop
mov
mov
xlat
das
sbb
pop
arpl
fwait
xor
call
cld
or
int
sbb
cwtl
xchg
stos
and
inc
mov
or
test
xchg
mov
adc
cwtl
sub
repz
mov
xor
cwtl
and
jl
dec
or
adc
mov
push
adc
stos
or
jne
movsl
xchg
pop
mov
lods
dec
aaa
lcall
cli
jnp
xor
lret
nop
push
scas
xchg
ja
daa
aam
cltd
inc
jg
std
addr16
push
mov
sbb
aam
push
dec
adc
stos
or
xor
mov
ret
movsl
pop
push
ss
ja
mov
cmp
xor
pop
mov
jge
mov
cld
loop
pop
insb
dec
jg
mov
mov
push
inc
loopne
pop
or
push
sbb
movsb
stc
je
pop
test
ret
dec
lahf
into
ljmp
xor
scas
inc
mov
sub
mov
add
pop
cmpsl
ja
inc
in
cltd
aam
fs
xchg
mov
out
lea
adc
pushf
mov
inc
repz
xor
fwait
ret
aas
jbe
pop
sub
dec
popa
out
and
cmc
push
sub
and
push
enter
jb
sbb
add
or
xchg
push
movsb
daa
sub
test
or
dec
or
aam
popf
pusha
pop
mov
xor
icebp
call
xlat
xchg
xchg
xor
jne
and
outsb
mov
inc
push
push
xchg
addr16
mov
mov
mov
sub
mov
inc
cmc
cmp
sahf
push
bound
insb
lret
mov
repnz
scas
xor
mov
xchg
jno
fmull
jns
stc
sbb
jae
add
mov
imul
es
stc
mov
mov
in
sahf
fdivs
xchg
cli
test
aad
sarl
dec
popa
outsb
out
inc
idiv
cld
fs
lods
cmp
repz
or
mov
js
fldcw
add
jp
ret
js
call
add
pop
cmp
hlt
test
dec
int
adc
cmp
pop
out
fwait
imul
lds
cmpsl
or
cltd
leave
xor
das
mov
in
rclb
stos
neg
sbb
inc
ficoms
loopne
sti
test
push
inc
repnz
push
arpl
out
aas
or
aaa
cwtl
sbb
pop
mov
xchg
jg
cmc
mov
push
sarl
shl
cmp
sub
mov
inc
sbb
inc
addr16
mov
in
mov
enter
push
push
xlat
rorl
cltd
dec
mov
test
sbb
mov
adc
cmp
xchg
xor
ds
test
push
sub
or
pop
movsb
and
push
fstps
push
stc
shrl
mov
mov
fcoml
fdivrl
or
xor
push
leave
mov
mov
sub
addl
push
push
dec
push
repz
cmpxchg
add
inc
das
sbbb
inc
mov
ret
pusha
jecxz
push
sbb
rcll
cmp
inc
in
xor
push
cmp
pop
cmp
insb
cltd
cs
icebp
or
xchg
mov
mov
adc
and
aad
subb
movsl
lret
iret
push
paddusw
outsb
dec
and
sbb
loop
bound
mov
sbb
mov
pop
lret
xor
xchg
dec
lds
test
out
or
push
cmc
pop
cmpsl
test
fadd
imul
repz
push
inc
shll
mov
and
icebp
idivb
lods
out
aas
movsl
xor
cmp
and
sub
push
add
sbb
sbb
sbb
lock
and
and
in
repz
popa
pop
mov
xlat
addr16
cwtl
iret
and
icebp
inc
mov
pop
adc
or
and
and
cmovae
inc
inc
sbb
lods
sub
xchg
int3
out
mov
out
es
inc
lahf
inc
std
mov
jmp
pop
subb
mov
cli
adc
sbb
fsubrs
gs
cmp
pop
clc
jecxz
cmp
rol
mov
pop
mov
loope
mov
fs
dec
add
dec
inc
mov
lcall
cwtl
dec
std
push
jecxz
lret
mov
mov
cs
sbb
icebp
dec
add
mov
mov
pop
and
add
push
leave
rolb
in
loop
adc
call
xchg
dec
pop
test
push
orb
or
loope
sub
cwtl
pop
push
push
dec
call
outsb
add
movsl
mov
sub
dec
fsub
inc
xchg
cli
stos
xchg
mov
xor
sub
cmp
aam
xchg
clc
mov
jno
mov
shrl
nop
xor
test
leave
jmp
lock
add
sti
xchg
xchg
mov
push
jae
add
fwait
adc
pinsrw
sbb
inc
lcall
xor
shrb
pop
mov
add
pop
xchg
arpl
mov
adc
inc
sub
pop
ret
jge
add
xchg
mov
aam
lds
and
stc
ficoms
mov
movsb
inc
xor
cmp
repnz
into
inc
lods
pop
insl
mov
ja
pop
daa
aas
xchg
mov
dec
clc
ficoml
std
jno
or
aad
nop
push
icebp
scas
aas
pop
push
xchg
push
push
ret
jo
mov
sbb
ret
call
inc
add
add
repnz
lret
xchg
insb
mov
sti
insl
adcl
add
stc
and
push
in
sub
pop
xchg
and
sub
arpl
sbb
jecxz
leave
decl
xlat
aam
inc
frstor
sti
scas
xchg
ret
and
add
mov
data16
xlat
push
mov
xor
sub
out
lahf
jno
shll
icebp
cmpsb
jno
inc
outsb
in
dec
jecxz
cmp
cld
stos
adc
mov
stos
and
mov
add
mov
or
fbld
pop
push
adc
andb
dec
or
movsl
dec
pop
insb
push
rcrb
idiv
inc
fwait
scas
dec
rolb
xchg
test
or
push
xor
in
sti
iret
test
ja
push
mov
fnstenv
adc
adc
fldl
enter
aam
jb
andl
out
nop
shrl
out
sbbb
inc
xchg
pop
loop
stc
ret
repnz
xlat
out
int3
mull
dec
pop
mov
mov
test
xchg
inc
jp
lods
pop
ror
add
fisubrs
and
xor
outsl
or
popa
pop
pop
xor
orb
ja
mov
pop
in
jge
outsb
fildl
pop
xor
pop
xor
rorl
or
out
data16
aas
adc
cmpsb
dec
daa
fcoms
push
call
mov
jg
push
jns
sbb
fstpl
mov
mov
popf
out
stos
xor
or
and
add
and
cmp
cli
fs
fisubl
loopne
jle
push
pushf
arpl
dec
sub
xor
xchg
aad
mov
and
push
pop
rorl
or
add
lea
testl
pop
outsb
lret
cmp
dec
loop
std
es
and
mov
or
sti
daa
or
or
popa
popf
test
int3
sbb
mov
or
xor
xchg
xchg
mov
inc
jbe
movsb
mov
das
mov
pop
aad
xchg
xor
mov
fistpll
sbb
sbb
popf
mov
xchg
adc
out
add
movsb
packuswb
dec
mov
mov
imul
push
push
jle
sarb
inc
test
ficomps
pusha
in
dec
cmp
and
cld
jno
add
and
xor
xor
test
ljmp
scas
inc
test
jge
arpl
mov
inc
and
or
popf
fnstenv
ret
mov
cld
and
ret
xchg
repnz
stos
cmp
push
adc
into
xor
sti
out
mov
dec
and
mov
psraw
and
sahf
mov
dec
mov
ljmp
jbe
jns
clc
xchg
lea
mov
or
dec
xchg
rol
cmpsl
mov
sub
cmp
pop
cmp
ret
ret
push
sbb
dec
les
fsubr
fstps
add
enter
mov
mov
adcb
movsb
jl
testl
push
mov
sbbl
mov
pop
pop
aad
jno
lods
sahf
shl
pushl
dec
lcall
or
into
inc
inc
pop
dec
xchg
aad
sbb
lock
dec
faddl
or
mov
add
lahf
fneni(8087
cld
out
mov
mov
jnp
fbld
jbe
push
xchg
mov
push
insb
add
xchg
jbe
mov
insl
dec
sub
mov
out
jae
lret
push
mov
sub
test
sti
ds
dec
sahf
push
call
fnstcw
movswl
imul
out
sbb
fidivs
sub
sbb
xchg
add
sbb
orb
push
sti
lock
loope
cs
cmp
test
sar
scas
mov
xor
imul
fstps
sbb
pop
data16
mov
fwait
or
ret
nop
mov
lods
in
outsl
xchg
xor
insb
repz
xchg
push
inc
jg
stc
inc
push
inc
jb
push
inc
je
subl
add
xchg
fdivp
loop
jne
jb
bnd
iret
add
leave
xchg
shll
test
push
and
insb
mov
cmc
aad
and
imul
dec
iret
insl
ds
addl
ret
stc
mov
pop
aam
xchg
push
dec
je
jl
jns
pushf
mov
es
gs
rol
or
push
jbe
and
mov
ljmp
push
and
adc
imul
inc
cmp
jecxz
jne
icebp
rclb
cmpsb
cmpsl
jbe
ja
cwtl
jle
and
enter
cli
loopne
test
sub
stos
frstor
pop
cmpsb
repz
xchg
jo
jbe
jns
dec
js
or
mov
cmp
mov
push
das
in
cmp
aam
repnz
mov
xchg
test
out
push
arpl
jno
movsl
lods
out
cli
call
out
je
sbbl
xorb
mov
xchg
cli
jg
repz
push
test
cmpsb
imul
insl
add
inc
mov
jmp
xchg
xchg
movsb
and
inc
sbb
jl
aaa
out
andb
pop
dec
mov
and
sbb
push
lret
dec
mov
mov
lds
dec
loopne
cmpsl
jg
frstor
nop
cmp
icebp
jmp
mov
movsl
into
pop
push
push
imul
and
iret
or
nop
shrl
ret
or
ljmp
xlat
and
add
mov
movsb
cmp
mov
push
add
jbe
cltd
inc
dec
bound
pushf
mov
lea
rorl
mov
inc
sbb
mov
jnp
fwait
out
xchg
loope
clc
fcoml
ljmp
xchg
outsl
cmp
orl
push
repnz
imul
add
stos
xchg
dec
and
mov
dec
ret
jmp
and
sbb
or
fsubrp
add
jle
pop
hlt
in
sub
adc
or
dec
pusha
add
lcall
mov
hlt
xor
mov
arpl
stc
shll
in
sahf
mov
fadds
push
addr16
jno
push
data16
sbb
mov
inc
xor
lahf
add
jns
fiadds
out
sub
cmp
icebp
xlat
rcll
leave
cltd
jle
cmp
add
das
jmp
and
imul
xchg
std
es
lret
jbe
sarb
push
stos
out
lea
cmc
shrl
hlt
xchg
cmpsb
mov
xor
lea
mov
inc
xor
fisttpl
stc
push
mov
inc
push
pop
js
push
adc
cli
add
ret
shrb
test
rcpps
mov
add
addl
idivl
sub
popf
push
push
mov
js
rolb
and
xor
mov
lahf
rclb
xchg
dec
or
sbb
pop
pop
lock
addr16
cmpsl
inc
push
into
inc
mov
sahf
popf
repz
mov
jbe
xor
add
jp
push
xorl
lret
and
mov
xchg
cwtl
pushf
call
loop
fistl
push
cmp
orb
push
add
cwtl
lret
dec
cmc
sbb
add
and
sbb
xor
imul
loopne
nop
repnz
push
push
test
je
popa
arpl
fmuls
dec
ss
jle
push
lret
xchg
push
or
lcall
lds
cmp
sbb
mov
icebp
pusha
stos
or
push
jbe
pusha
test
or
imul
fcmovbe
incl
push
popf
mov
int3
dec
cmpsb
cmpsb
inc
cmp
jecxz
stos
andb
pushf
lea
push
divl
aad
mov
in
cmp
shl
sbb
ficoml
test
sub
fists
insb
pop
jno
xor
dec
lret
cmp
jmp
and
mov
je
pop
aaa
sub
cld
sahf
push
add
push
adc
gs
dec
rcrl
int
cmc
jmp
jmp
adc
sbb
push
or
hlt
jmp
pop
or
add
int
pop
cmpb
cli
pop
push
mov
inc
mov
rclb
popf
mov
shl
cli
iret
inc
imul
out
mov
sbb
enter
loop
adc
icebp
cmc
inc
je
imul
ficoml
stos
mov
rorb
out
cmp
push
minps
adc
dec
arpl
cmpsl
or
test
popa
xor
fistps
scas
sbbl
std
inc
lahf
scas
fldcw
adc
add
xchg
dec
pop
xchg
fwait
adc
iret
inc
js
dec
sbb
addr16
push
adc
sub
loop
outsl
jl
loopne
mov
arpl
sbb
cmpsl
jl
push
jae
inc
mov
dec
fdivs
add
outsb
arpl
mov
mov
jp
mov
insl
out
inc
cltd
pop
xchg
aaa
adc
call
orb
pop
std
xchg
aam
imul
pop
shrb
push
in
push
out
pop
insb
push
and
xchg
pop
add
pop
lods
sbb
shrb
push
push
clts
nop
xlat
clc
sar
nop
pop
outsb
add
iret
cld
and
add
push
sub
or
inc
mov
add
adc
dec
inc
add
jns
adc
pop
pop
addr16
imul
das
imulb
mov
and
sub
ja
jmp
sub
pop
rcrb
push
sbb
inc
int3
sub
add
jecxz
repnz
frstpm(287
or
inc
pop
pop
ficomps
add
cmp
push
adc
ficompl
and
lea
pop
out
or
fdivs
xlat
adc
in
imul
popf
loopne
jecxz
dec
out
add
cltd
or
add
pop
xor
and
sbbb
cmp
cwtl
sahf
jmp
inc
cmp
aad
jecxz
xchg
or
bound
sbb
adc
cld
popa
in
jle
sub
popa
enter
xor
ljmp
inc
ss
dec
sahf
js
adc
or
roll
jl
mov
fisttpll
jle
popf
push
xor
cmp
pop
pop
adc
mov
mov
mov
mov
cs
scas
pop
les
std
idiv
lret
rorb
inc
stos
and
lahf
jge
cmp
pop
lret
xor
cmc
mov
in
lea
insl
fcmovnbe
xor
mov
stos
add
inc
popa
int3
xchg
push
insb
loop
sarl
push
dec
push
std
adc
xchg
cwtl
fidivl
push
out
negl
stos
in
mov
push
shll
cmpsb
sub
jb
ds
and
js
push
scas
imul
cli
xchg
ret
pop
int3
pop
test
sbbl
rorl
pop
xchg
fldt
movsb
jmp
adc
aad
mov
rcrb
mov
jnp
jecxz
out
in
ljmp
jge
les
sub
xchg
rcll
mov
aas
pop
repnz
xor
pop
arpl
mov
adc
xchg
es
xor
aad
ds
das
xor
in
lods
inc
mov
std
mov
lcall
sub
jno
mov
dec
sti
add
adc
ret
imul
out
adc
xor
lahf
push
xor
movsb
movsb
gs
adc
sbb
fnstenv
push
loopne
cmp
xchg
loope
jbe
add
leave
aad
dec
and
cltd
loopne
push
daa
test
cmpsb
jmp
js
dec
xlat
sub
xchg
sbb
sub
sbbl
in
insl
sub
xlat
sub
pop
mov
pop
cld
and
cmc
lahf
ficomps
rol
rcrl
mov
adc
mov
popa
std
inc
fldenv
mov
insb
mov
xor
addr16
rorl
adc
scas
imul
orb
push
mov
mov
jmp
push
dec
xchg
cwtl
and
lods
dec
in
inc
cmp
mov
movsb
mov
or
aad
inc
je
mov
or
out
push
jne
sbb
xchg
jecxz
stos
mov
jbe
les
jae
jo
sbb
pop
push
es
adc
jmp
dec
imul
mov
and
sub
inc
mov
sti
push
mov
cmpsb
ljmp
xchg
shr
sbb
aaa
test
mov
jns
cmc
data16
fdivrs
cmp
xor
ds
inc
dec
mov
dec
jne
in
jae
push
add
ret
mov
fidivl
add
xor
call
hlt
mov
adc
mov
add
cmpsb
leave
fldl
fsin
daa
mov
xor
cmc
clc
push
clc
add
in
jge
push
int3
shll
lods
ja
and
stos
stc
sarl
cmp
cltd
addr16
repz
sbb
sub
fisttps
push
jp
mov
xor
in
jmp
int3
xchg
mov
xor
loopne
addl
cmpsl
mov
mov
scas
mov
mov
cld
inc
test
lods
dec
mov
bound
shr
insb
std
pop
mov
imul
int3
add
pcmpgtw
sub
cmp
daa
nop
or
inc
stos
push
dec
or
push
cli
mov
cmp
das
mov
and
lcall
inc
mov
cwtl
stos
data16
pop
ds
out
push
out
mov
movsl
and
or
loope
paddsw
andl
imul
inc
shrl
jge
stc
jns
mov
mov
adc
imul
mov
push
jle
adc
sbb
aaa
pusha
int
pop
lods
jp
out
call
fwait
stc
mov
in
adc
ds
sbb
mov
pop
dec
push
or
add
pop
cmp
or
jge
roll
scas
shr
mov
outsb
adc
push
mov
fld
dec
mov
in
jns
lds
sbb
cmp
icebp
xchg
adc
es
xor
call
xchg
jbe
xchg
add
push
jge
inc
int
xchg
pop
adcb
out
fnstsw
cmpsb
add
ja
loop
pop
push
lahf
into
scas
jb
and
es
movsl
iret
jae
pop
xchg
push
and
inc
ffree
mov
mov
test
cwtl
cmpsb
pop
jl
popf
push
jecxz
sub
mov
popa
or
cltd
cmp
sarl
rorl
cmp
mov
jno
insb
insb
in
and
je
fcomp
enter
mov
popa
sbbb
in
cmp
pop
adc
adc
push
in
daa
mov
fsubrl
aas
in
add
cltd
pop
xchg
fdivs
xchg
jp
cmpsl
or
out
adc
xor
pop
sahf
sub
inc
xlat
jle
into
jp
mov
adc
daa
add
push
lods
aas
cmpsb
les
inc
and
and
aas
push
fdivr
sub
push
aam
xor
add
popa
clc
xor
sub
jmp
or
enter
jo
js
inc
cmp
popa
inc
inc
add
in
out
rcrb
jle
movsb
sub
insl
jbe
adcb
es
mov
fists
mov
sub
mov
or
mov
fwait
jg
jle
sbb
into
cmc
cs
shrl
lret
movsl
add
cli
fucomip
setp
pop
sbb
sub
lods
xchg
sbb
xchg
cmc
incl
pop
xchg
and
xor
mov
push
push
rorb
lret
lret
jge
loop
push
lret
xor
adc
into
sbb
jecxz
mov
sbb
scas
pop
xor
nop
xchg
mov
add
das
ret
loopne
adc
push
inc
inc
cmpl
rolb
movsb
and
mov
jle
test
leave
lret
mov
gs
pop
movsl
pop
mov
mov
sbb
xor
ret
inc
stos
inc
sub
or
sbbb
push
lcall
inc
fwait
mov
mov
dec
js
xchg
in
cmp
repz
addb
mov
pop
into
mov
push
dec
jns
add
jle
mov
jo
sub
jp
mov
fs
and
cmpsl
push
inc
rcrb
cmc
outsb
bound
int
push
insb
idivb
mov
hlt
adc
pushf
js
jbe
sarl
cmp
jp
repnz
xchg
dec
movsb
cmpsb
sub
lods
push
inc
mov
lcall
pop
shlb
cmc
or
adcl
es
scas
add
ja
imul
mov
sbb
xchg
cmp
pop
push
mov
mov
out
mov
stos
jb
hlt
int
sub
or
mov
jle
mov
enter
xchg
jmp
aad
sbb
push
xor
shrd
out
xor
pop
jb
fsts
sbb
sub
adc
fistl
aad
mov
sub
nop
dec
repz
or
dec
add
pop
jg
xor
inc
lcall
mov
jbe
inc
sub
ss
out
cmpsb
cmp
and
push
mov
mov
adc
arpl
pop
sub
les
dec
lds
arpl
imul
pop
jb
test
mov
xor
xchg
jecxz
imul
out
test
cmp
imul
pop
lret
adc
push
mov
mov
cmc
push
jmp
cmpsb
es
mov
mov
popf
add
dec
filds
clc
jecxz
pop
lock
mov
and
nop
dec
dec
iret
call
ja
inc
jmp
jge
rcll
bound
pushf
addr16
imul
sub
adc
lcall
add
cltd
xchg
lahf
cld
sar
pusha
rcr
ljmp
lret
push
lret
xchg
push
shrl
pop
fbld
mov
mov
or
dec
xchg
int
pushf
pop
fld
xor
dec
adc
xchg
xlat
fdivs
jecxz
imulb
inc
and
jbe
and
sbb
out
add
inc
test
dec
and
shlb
and
loope
mov
lods
fistpll
adc
in
xchg
jns
jo
in
mov
out
mov
mov
mov
imulb
mov
js
inc
mov
lock
sahf
inc
push
push
push
mov
pop
rorb
fsub
mov
or
repz
sub
lahf
adc
sbb
xlat
inc
or
jg
jnp
pop
mov
idiv
orb
xor
aad
adcb
out
or
lcall
jl
add
cli
add
movsb
lds
je
sub
pop
jp
xor
popa
or
push
lods
mov
mov
fs
rcrb
scas
mov
je
fldenv
cmpsl
nop
jb
ljmp
mov
and
std
notl
stc
lods
inc
fwait
and
push
mov
adc
int3
mov
orl
je
fdivs
lret
add
jae
mov
sbb
dec
les
sbb
sub
test
xlat
cmc
and
mov
out
in
das
inc
sub
ret
and
adc
jg
rcrb
aad
and
leave
mov
insl
test
inc
ret
shlb
in
pop
sub
nop
pop
stc
or
or
push
sbb
add
std
add
gs
sbb
push
je
les
sbb
scas
test
in
fmull
fildll
daa
xchg
daa
sub
fistpl
lds
mov
fcoms
stc
shr
cwtl
add
mov
call
pushf
mov
add
inc
cli
jp
fucomi
shrl
push
dec
popl
daa
arpl
sbb
and
pop
sbb
out
shlw
push
out
cmp
ja
cs
mov
faddl
inc
movsb
iret
iret
insl
je
mov
fcoml
mov
sub
inc
stos
pop
pop
xchg
inc
push
inc
fiadds
cmp
fdivrs
rorl
adc
lea
adc
lahf
xlat
repnz
es
mov
aam
mov
mov
rorl
push
test
gs
nop
lcall
repnz
sbb
sti
mov
flds
push
negl
jl
cmp
repnz
sbbl
lcall
cmp
xchg
ds
fstpl
mov
and
lahf
adc
clc
mov
and
scas
dec
sbb
lock
rep
or
mov
pop
rcrl
dec
fildll
pop
push
mov
mov
nop
mov
or
mov
xorl
xchg
jne
loopne
mov
scas
fwait
xor
cmp
cmc
or
shrb
xchg
addl
inc
fistl
xchg
xchg
dec
cli
jecxz
and
add
popa
ja
push
mov
aam
ljmp
push
ljmp
and
lock
xchg
jp
ds
cltd
xor
int
mov
sbb
and
adc
bound
mov
mov
adc
cmp
mov
adc
inc
add
dec
dec
imul
push
mov
mov
inc
cltd
sub
pop
cld
repnz
mov
push
and
push
les
cmp
jecxz
or
xchg
mov
lea
paddb
daa
fbld
inc
ss
dec
sub
mov
add
popf
jecxz
lret
cli
lahf
pop
vmovq
popa
add
mov
mov
push
pop
push
xor
adc
mov
aaa
and
xchg
cmc
popa
int
sub
and
cs
mov
cmp
loopne
inc
sbb
mov
ljmp
sbb
scas
dec
jge
lock
mov
dec
jl
fsts
sub
cmp
xchg
push
insl
leave
cli
inc
inc
lock
mov
adc
loopne
xor
into
or
jne
loop
jo
mov
push
ss
or
rolb
popf
mov
and
fs
fbld
xor
jmp
andb
lea
or
jge
testb
lock
sbb
mov
push
cs
or
stos
scas
cmp
push
xchg
jl
outsl
mov
adc
scas
test
inc
repnz
jmp
push
aad
adc
rep
iret
xlat
cld
pop
jp
inc
pop
addr16
sub
sub
sahf
push
ret
popf
dec
lret
cmp
sub
jl
dec
sarb
add
cwtl
call
out
arpl
or
pop
push
xchg
lea
jae
lods
stos
mov
imul
popw
imul
lock
lcall
dec
pop
dec
cmpsl
sub
xchg
pop
pushf
es
and
lcall
insl
xor
and
push
flds
jns
std
jo
loopne
dec
arpl
addr16
xor
mov
cli
fsts
mov
dec
pushf
cmp
outsb
jae
mov
xchg
in
lcall
out
mov
lods
bndstx
jg
mov
psrld
mov
add
mov
xor
push
cld
sub
mov
mov
mov
add
push
dec
mov
out
jns
fidivs
int
jnp
add
or
mov
mov
xchg
xchg
xchg
push
fcoml
mov
mov
into
in
ds
rep
ds
lret
xchg
mov
loopne
push
dec
scas
push
mov
xchg
mov
cmp
negl
mov
stos
pop
fidivs
lock
mov
xchg
iret
pop
adc
mov
mov
push
and
cmpsl
dec
repz
imul
mov
adc
or
adc
inc
xchg
outsl
lods
es
adc
jbe
sbb
push
les
inc
push
mov
jmp
jb
movsl
push
push
loope
sbb
xor
lods
sbb
mov
xchg
cltd
mov
adc
jecxz
push
pop
mov
xchg
mov
aad
sahf
in
iret
fadd
lcall
and
ds
cmp
or
bound
fistps
loope
fs
pusha
iretw
sub
inc
pop
sub
or
into
out
jne
dec
cmpb
gs
imul
test
xchg
std
aaa
stos
outsb
cs
and
rorl
stos
outsl
rcr
iret
lods
adc
xor
sub
repnz
mov
fsubrl
adcl
test
and
adc
push
mov
and
push
sbb
dec
movsb
bound
add
or
push
aas
mov
jg
and
subb
test
mov
pop
mov
popa
pop
imul
cmpb
aaa
mov
std
fstl
sarl
movsl
push
out
jnp
pop
adc
sub
fstps
packsswb
movsb
clc
cmp
mov
pop
adc
hlt
dec
xor
and
notl
rcll
add
ds
ret
fstpl
clc
cmc
mov
aad
hlt
pcmpeqd
inc
mov
push
pop
out
mov
cmp
sahf
adc
ret
xor
sahf
adc
in
add
daa
push
fdivrs
dec
push
xchg
fwait
push
loop
mov
mov
and
scas
je
test
negb
popa
fildll
xchg
jp
cmp
scas
fisubs
push
push
sti
push
sbb
lcall
lds
jmp
ret
sbb
pop
pop
sub
inc
das
mov
jg
sar
popf
shrb
lcall
movsl
mov
orb
jge
mov
xchg
movl
push
in
leave
test
mov
mov
in
sbb
dec
cmp
cmp
popa
sub
pushf
pop
xchg
jb
or
adc
cmc
push
push
sub
ljmp
fabs
cmc
cmp
ja
add
mov
fdivp
inc
mov
adc
aad
stos
cmp
dec
mov
push
adc
pusha
mov
mov
dec
sub
shll
sbb
andb
xchg
cmp
lock
xor
popf
inc
outsb
cli
jbe
cmp
lahf
shrl
sub
and
decl
mov
pop
hlt
jb
push
les
pop
jo
push
in
into
xor
mov
mov
mov
aaa
adc
outsl
aad
fldenv
mov
pushf
popl
inc
adc
cmc
ds
test
inc
add
mov
mov
adc
ret
inc
outsb
sub
notl
test
xchg
sti
dec
jns
pop
rclb
inc
lds
cmp
dec
in
mov
out
popa
xchg
loope
mov
aad
jle
xchg
pop
pop
jbe
or
decl
mov
les
fsts
arpl
out
movsb
mov
test
dec
rolb
xor
scas
lcall
push
xlat
lock
sub
xchg
add
and
add
cwtl
cld
jg
adc
pshufw
lahf
nop
rolb
stos
cmpsl
adc
jb
or
lods
mov
and
xor
mov
mov
ror
jmp
mov
fildl
pop
fadd
lahf
xor
pop
in
cmp
and
out
or
aad
out
xchg
int
popf
cld
in
pop
adc
lods
outsb
or
icebp
adc
outsb
fwait
sahf
testl
add
js
adc
inc
xchg
lods
mov
enter
and
cmp
rorb
cwtl
lahf
sbb
cmp
xchg
and
pop
insb
repnz
pop
iret
loope
leave
insl
out
mov
mov
mov
inc
cmp
push
pop
ds
pop
adc
mov
cld
push
inc
insb
cwtl
fbld
repnz
sub
xchg
loop,pt
pop
loop
mov
loope
data16
mov
adc
aas
lret
sbb
inc
lea
dec
cmp
leave
divb
push
jns
mov
cmp
cmpl
pop
adc
or
popf
xchg
sub
imul
popa
test
jmp
inc
sbb
adc
icebp
test
shrb
movsb
shlb
clc
scas
jae
xchg
hlt
xchg
or
or
mov
sbb
aaa
mov
push
adc
dec
stos
in
and
pop
push
sbb
lret
xor
inc
add
mov
lea
jno
and
popa
dec
jmp
lods
push
sbb
jnp
push
aad
stos
sbb
cld
rcl
test
ljmp
jg
lahf
lea
test
sub
scas
or
cld
push
outsb
mov
xor
aam
in
adc
push
mov
pop
adc
addr16
fbstp
fsubr
push
pop
ret
xor
and
scas
insb
pop
dec
icebp
mov
call
in
push
adc
jae
inc
xchg
test
out
jle
mov
out
xchg
in
mov
fistl
push
ds
ficoms
adc
lock
sbb
nopl
test
pop
pop
mov
hlt
mov
mov
add
or
ficompl
sub
aam
jmp
ds
movsb
push
mov
das
xchg
ds
insb
add
ss
fwait
lea
inc
mov
mov
in
cwtl
push
mov
in
and
dec
adc
pop
xor
notb
sbb
sub
das
fdivr
movsl
sub
ja
loop
dec
cwtl
jmp
xchg
or
outsb
fs
outsl
sub
daa
push
pop
int3
push
jecxz
cmc
xchg
or
add
pop
xorb
jl
and
add
and
addb
mov
jne
rorb
addr16
mov
xor
mov
test
mov
push
mul
and
push
cmpsl
xchg
inc
sub
inc
push
jne
leave
xchg
icebp
ja
lahf
jge
ljmp
insb
xchg
icebp
dec
stc
sub
dec
jg
int3
pop
popf
cwtl
test
aad
imul
aam
pop
fucomp
js
xchg
fidivl
adc
adc
adc
sbb
cs
and
stos
push
pop
mov
insb
aam
push
sub
push
xchg
int
movsl
mov
shrb
dec
xchg
insl
scas
push
hlt
fwait
push
jo
movsb
jge
xor
jnp
aam
mov
xchg
imul
pop
outsl
push
dec
xchg
gs
push
dec
dec
loope
mov
or
pop
dec
pop
test
mov
cwtl
xchg
jb
scas
jge
subl
lret
and
push
cmp
adc
dec
jb
inc
dec
inc
mov
push
scas
icebp
inc
inc
outsl
xchg
es
stos
sbb
mov
push
jno
out
sbb
jnp
call
lret
mov
sar
iret
int3
cmp
xchg
mov
xchg
fs
inc
and
stc
movsl
mov
pop
inc
out
and
cs
xlat
adc
mov
xor
cwtl
pop
xchg
ds
addr16
test
jo
pusha
xor
fcoml
dec
mov
lock
int3
popf
in
jnp
mov
sbb
sub
xchg
test
sbb
push
imul
sub
or
fwait
sub
cmpsl
lret
inc
enter
pop
sbb
cmp
push
sbb
jb
xor
xor
add
test
mov
mov
lock
repz
or
iret
in
xchg
mov
ds
xor
lods
mov
add
add
push
fstpl
jp
out
xor
add
sbb
lret
out
pop
idivl
mov
or
lods
mov
add
rcll
mov
mov
scas
xchg
nop
add
into
and
decb
inc
subl
mov
sub
sub
dec
adc
mov
mov
jecxz
or
sub
sbb
shl
xchg
int
aad
es
aaa
jmp
or
or
scas
dec
ds
xchg
xor
mov
outsb
jmp
inc
cmp
xlat
or
jbe
test
das
or
adcl
adc
dec
loope
testl
xorb
outsb
inc
xor
repz
sub
cmp
push
ds
fadd
scas
mov
test
mov
imul
jns
cmpsl
jae
xchg
sbb
jp
pop
mov
xor
test
in
lret
mov
jne
std
imul
fmull
jne
xchg
push
pop
sahf
movsb
fdivrs
mov
add
xchg
stos
inc
pushf
loop
jb
not
xchg
out
xor
bound
pop
jb
sbb
sbb
push
lahf
mov
in
or
imull
xchg
adc
or
cmp
loopne
sub
dec
int3
mov
dec
ds
bound
xor
mov
sti
in
aam
imul
addb
and
sbb
jl
sub
sub
mov
pop
push
jmp
push
inc
xor
aaa
or
outsl
cmp
push
mov
mov
dec
in
loopne
das
hlt
pop
sbb
fwait
fnstsw
imul
loop
xchg
xor
or
push
push
sub
jp
rcl
cs
pop
jnp
xchg
sub
rorb
xchg
xor
xor
pop
aaa
mov
sbb
loope
cli
aam
mov
jo
and
jecxz
xor
pop
cmp
loope
and
inc
push
mov
push
in
in
or
add
aaa
test
jns
jb
jb
jo
cmpl
imul
mov
dec
out
sub
dec
xor
pop
fdivrl
call
fdivrs
in
cmp
mov
cli
inc
inc
clc
lcallw
inc
xor
sbb
fsubrl
pop
mov
cltd
or
loop
pop
shrl
daa
pop
push
fnstcw
out
adc
mov
es
push
sub
pop
jp
clc
je
jge
adc
ss
and
cmp
pop
xchg
or
out
ret
add
cmp
sbb
pop
ljmp
sbb
inc
xchg
pop
xlat
jb
rorl
ds
mov
sti
lds
int3
jnp
divb
ret
mov
mov
lods
mov
test
adc
out
incl
in
mov
in
xchg
scas
dec
lea
mov
daa
cmp
gs
xor
iret
js,pn
pusha
sub
xchg
pop
outsl
hlt
mov
scas
imul
das
test
sub
cmp
test
jb
mov
sahf
stos
mov
push
xor
xchg
adc
loop
and
pop
pop
sbb
add
mov
test
cmp
push
call
mov
add
lret
popf
xchg
cwtl
adc
jns
jo
adc
cmp
cmpsl
dec
andb
int3
lods
cmc
rorl
pop
cmp
pop
insb
or
mov
mov
sub
inc
imul
fucomp
aaa
lods
add
jle
repz
js
adc
outsb
adc
ja
jmp
xor
inc
mov
daa
mov
push
or
scas
push
xchg
cltd
in
ja
rclb
and
testl
out
out
dec
adc
stc
pop
fdivrl
gs
imul
xchg
imul
sbb
add
addr16
icebp
fucomip
add
push
addr16
aam
fisubrs
aam
insb
push
and
add
cmp
gs
loope
pop
dec
aam
xchg
sub
fs
out
in
testl
sbbl
or
pop
pop
inc
mov
inc
jne
jg
xchg
push
shl
imul
and
push
into
xchg
jp
shlb
lea
push
xchg
leave
mov
sarl
rclb
lea
inc
or
call
adc
mov
clc
add
mov
in
dec
inc
loope
int3
fwait
adc
jne
insl
xlat
push
inc
push
or
or
mov
pusha
lock
lahf
lods
xor
jecxz
mov
call
add
mov
hlt
mov
jecxz
sti
adc
mov
int
mov
add
enter
enter
mov
push
push
cli
xchg
sub
jle
and
std
lods
mov
repz
cs
dec
repz
nop
sahf
movsb
or
ljmp
iret
push
hlt
loop
stc
pop
xchg
lods
xchg
push
cmpl
aas
je
inc
adcb
push
rorb
scas
movsb
push
mov
out
xchg
sub
jecxz
jnp
sti
shl
push
icebp
jecxz
repnz
scas
mov
pusha
xchg
rclb
mov
and
add
mov
xchg
pushf
pop
ret
dec
lds
lds
movsl
clc
pop
scas
ss
sub
or
push
xchg
ja
ret
inc
in
adc
nop
inc
into
mov
lock
aaa
in
cmc
movsl
out
push
pop
mov
and
js
push
loopne
repnz
ja
ja
xorl
jnp
push
lods
popf
jno
insb
add
mov
jle
inc
add
xchg
js
ja
cmp
in
out
sbb
add
imul
test
test
movsl
push
push
insb
jmp
mov
clc
pop
sti
pop
dec
faddp
nop
fdivrp
mov
mov
dec
xchg
sarl
test
adc
aaa
pop
aam
sti
stos
xor
rcrl
ds
sysenter
psrld
scas
cs
push
inc
test
sbb
xchg
in
fmul
or
and
call
xor
cwtl
cmpsb
cmp
jbe
xor
sbb
jp
stc
cmp
aam
repnz
xchg
es
adc
int
push
add
inc
cmp
rorb
cmp
dec
adc
dec
jle
jge
gs
daa
sbb
mov
int3
js
rclb
fisttpll
mov
and
sbb
pushf
leave
idivl
loop
shrl
add
xchg
ss
xor
leave
mov
sbbl
sub
popa
cmpsl
cmp
add
xchg
push
enter
leave
xchg
dec
jb
push
jle
fdivl
inc
dec
cmp
sub
sbb
in
hlt
push
test
cltd
jnp
loope
pop
enter
in
repnz
lcall
cwtl
icebp
aam
push
imul
add
fmulp
int
movsb
xchg
or
jns
adc
dec
in
repz
fldenv
aam
and
cmp
cmp
push
loop
cmp
add
rorl
jp
jbe
adc
xor
movsl
mov
dec
cmovo
dec
xchg
jge
std
gs
add
sub
stos
pop
cmp
dec
mov
cmp
leave
cmp
js
pusha
push
cmp
xchg
cld
sti
sbb
cli
dec
inc
or
int3
pop
dec
inc
lea
lea
xchg
xor
mov
ret
out
push
push
sbb
insb
adc
cmpl
cmp
sbb
dec
leave
add
sub
inc
setbe
icebp
pop
sbb
int3
lock
push
xor
mov
out
movsb
lcall
sub
mov
sar
cltd
mov
leave
inc
mov
pop
subb
lret
subl
push
pop
mov
das
dec
mov
sub
movsb
sbb
aam
mov
mov
orl
cltd
mov
cmc
hlt
je
dec
fiaddl
insb
mov
rorl
lcall
int
jns
jge
pop
xchg
mov
add
jb
fdivl
mov
pusha
jno
push
insb
xchg
pop
cmp
or
inc
aad
loop
inc
arpl
and
fsub
add
loop
add
ljmp
inc
test
adc
cltd
push
ja
mov
jno
mov
lret
subb
xor
stc
gs
jns
push
mov
adc
scas
mov
mov
push
ficomps
subl
xchg
cmp
mov
pop
jbe
jns
jnp
test
inc
dec
cmpsl
push
mov
ds
repnz
cmp
or
cli
cli
cmc
mov
nop
mov
xchg
sub
xorb
testb
pop
in
mov
xor
jo
xor
dec
jg
xchg
icebp
std
call
scas
mov
adc
ja
sbbb
sbb
mov
xchg
rorb
das
jb
xor
xor
test
andb
jae
stos
addr16
and
adc
cmpsb
xor
out
int3
hlt
pop
mov
pop
inc
mov
jge
sbb
mov
cmpsb
in
test
imul
lea
lret
push
cs
shrl
inc
lods
or
sub
jge
inc
xor
sub
push
inc
sub
and
fistpl
xchg
sub
fdivrs
pop
xor
out
pop
lret
lods
sub
xor
icebp
cmp
rolb
mov
aam
adc
lds
pushf
outsl
push
cmpsb
dec
push
xchg
add
inc
push
add
push
in
sti
arpl
cmp
loop
ss
fcmovnu
mov
mov
fists
scas
fcomps
push
xchg
pop
rcll
push
sbb
pop
dec
pop
dec
mov
out
xorb
fdivrp
add
ljmp
cmp
rol
mov
push
xchg
cli
sbb
push
sbb
stc
pop
push
sub
jmp
mov
add
popa
adcl
push
inc
and
into
inc
push
push
fdivr
jl
inc
mov
sub
hlt
adc
xor
adc
sub
xor
sbb
or
aaa
ds
pop
dec
icebp
pop
es
cmp
ficompl
or
ret
das
dec
scas
js
test
jnp
daa
es
xchg
pop
mov
add
ficomps
movb
push
rorb
iret
fisubrl
jl
sbb
adc
sahf
mov
or
jae
sub
inc
in
sbbb
xchg
les
imul
icebp
or
call
sbb
stos
mov
test
call
dec
test
inc
orl
rclb
pop
jl
xchg
mov
dec
lcall
add
fistl
and
les
jg
pop
les
movsl
cmpsb
es
mov
xor
mov
inc
popa
mov
cmp
loopne
leave
mov
dec
pop
ret
dec
pop
dec
hlt
psraw
out
xchg
push
cwtl
lea
sbb
loop
sahf
adc
js
lea
cmp
mov
dec
lcall
dec
dec
dec
out
repnz
scas
sbb
mov
es
jb
imul
jae
test
xchg
xor
mov
xchg
mov
xchg
sub
jge
rcrb
cld
mov
mov
or
dec
dec
out
je
pushf
sbb
ja
push
or
add
in
dec
jmp
test
gs
mov
movsb
lret
mov
push
cmp
xor
push
mov
nop
add
outsl
in
arpl
xor
mov
fcompl
mov
fsubp
mov
in
out
sub
cltd
cltd
lret
dec
push
adc
xchg
clc
cmpsb
idivb
mov
cwtl
shrd
mov
fidivrl
imul
test
mov
and
enter
dec
mov
shll
popf
pusha
jmp
std
sub
roll
test
cli
push
add
inc
xchg
out
out
fstl
mov
xor
jmp
loopne
mov
movsb
sbb
and
xorb
push
adc
dec
dec
mov
jbe
xor
adc
outsl
les
fwait
cmp
ror
cmpsl
mov
xchg
aad
lods
and
cmp
mov
in
rorb
push
dec
push
cltd
pop
mov
push
stos
cli
lret
gs
jae
mov
xchg
cmp
sub
pop
and
mov
mov
mov
sbb
mov
loope
add
faddp
mov
cmp
pusha
scas
mov
jae
stc
scas
dec
and
mov
gs
pop
out
jmp
jmp
lret
mov
cmp
mov
jno
xchg
push
xchg
add
xchg
xchg
push
into
test
adc
loopne
test
mov
add
daa
cld
sub
push
pushf
adc
ret
cltd
pop
sub
xchg
jns
clc
movsl
fwait
shlb
stos
and
stos
nop
pop
lret
cmp
jmp
jne
cmc
sbb
int3
imul
out
adc
push
xor
cwtl
or
cmc
adcb
dec
ret
jae
mov
jmp
inc
aas
popa
add
adc
jge
icebp
stos
sub
aaa
adc
jp
add
jbe
stos
shlb
outsb
repnz
movsb
in
add
sbb
stos
push
jbe
insl
sbb
fsts
sbb
sub
subl
aam
mov
addl
addl
push
adc
and
outsb
fiaddl
sub
sub
sbb
daa
inc
test
inc
clc
ds
clc
les
fwait
push
adc
je
ret
pop
scas
filds
int3
xchg
js
lds
daa
cmp
inc
sub
cld
in
in
pop
xor
pop
mov
add
inc
sub
and
push
js
pop
aam
fdiv
pop
push
loopne
ficoml
cs
pop
add
fisttpl
pop
inc
outsb
pop
in
scas
lea
test
fwait
cld
jnp
mov
adc
sub
mov
pop
je
loopne
and
fnsave
call
mov
jp
add
sbbl
mov
xchg
aad
mov
ret
out
dec
or
xchg
std
inc
pop
mov
loopne
dec
clc
arpl
mov
test
inc
pushl
je
push
ss
cmp
popl
imul
xor
sub
xor
pop
add
pop
cmpsl
xor
push
mov
loope
ret
pop
lods
and
hlt
mov
mov
les
jae
xchg
subb
inc
in
iret
push
sbb
subl
xchg
jnp
dec
dec
test
icebp
push
mov
push
insl
lret
aam
rcrl
inc
int
stos
popf
lret
xchg
aaa
push
push
cmp
mov
andb
cmp
and
lret
shlb
pop
pop
mov
out
push
dec
ret
mov
movsb
lea
stc
test
mov
jle
fistpll
outsb
shll
xchg
inc
aam
stos
jo
cmp
add
mov
adc
out
ja
adc
cli
fdivs
orl
mov
mov
mov
jns
jge
jbe
out
repnz
je
push
dec
dec
ljmp
lock
in
pop
or
jne
sbb
andw
mov
das
jae
js
loope
lods
push
int3
roll
aad
xor
sub
int3
ds
shrb
ds
push
dec
loopne
je
cmp
sbb
or
sub
aam
inc
aam
mov
scas
inc
lods
mov
push
push
mov
outsl
xchg
loop
mov
dec
sub
subl
add
cs
dec
and
xlat
xchg
adc
xor
fsubrl
inc
incb
pop
dec
mov
pop
inc
cmpsl
inc
cltd
or
es
or
mov
lods
cmc
lods
mov
jne
and
xchg
and
sub
rcrl
bound
sahf
sarl
lock
inc
std
add
jo
pushf
xchg
inc
sbb
mov
inc
dec
bound
lods
pop
push
pop
test
pop
push
je
mov
es
mov
push
stos
rcl
inc
xchg
pop
lahf
jg
leave
jle
add
xchg
cld
push
sbb
jno
aaa
lock
fsubrs
mov
mov
xor
mov
popw
icebp
mov
inc
pop
xchg
sbb
in
jl
pop
xchg
sahf
stos
sbb
xchg
push
mov
mov
lock
leave
push
imul
mov
pop
or
int3
and
adc
inc
aad
cmpsl
jns
stos
adc
aad
data16
dec
sbb
xor
lret
xor
int
sbb
loopne
lds
push
ret
jne
push
jmp
adc
pop
sbbb
jb
push
ss
push
sub
xchg
jecxz
cmp
in
outsl
pop
out
xchg
push
pop
cld
pop
arpl
add
xor
lcall
push
je
push
xchg
jae
mov
lea
fwait
and
and
dec
adc
mov
pop
sub
jl
aas
shlb
ja
xor
addl
ret
cli
stos
lret
bound
gs
bound
inc
out
sahf
jge
dec
ljmp
lret
das
mov
mov
adcl
sbb
xchg
icebp
idivl
or
push
cmpsl
dec
adc
scas
movsb
hlt
in
mov
ljmp
xchg
xchg
pop
outsb
cmc
movsb
in
lds
aad
ds
shll
pop
arpl
cmp
pop
insb
xchg
push
mov
jae
sub
sub
nop
inc
lods
mov
and
out
xchg
rorb
mov
shl
push
or
jge
cmc
addr16
jmp
dec
enter
sahf
mov
sbb
mov
fisttpl
mov
icebp
mov
and
int3
sub
loop
nop
mov
mov
xorl
and
out
stc
jb
rcl
mov
jle
loop
push
xlat
and
ja
in
fsubr
mov
push
shlb
divl
cmp
mov
mov
sub
mov
imul
add
mov
js
xor
aam
cmp
jmp
fadd
and
adc
sub
aas
push
inc
lea
dec
andl
xchg
and
or
mov
stos
syscall
and
pop
into
test
pushf
inc
lock
lock
cld
cmp
dec
mov
cmc
and
xor
push
push
cld
in
push
dec
mov
mov
je
daa
movsl
fmull
aas
pop
jle
mov
push
fucomp
mov
ret
xchg
mov
cli
popf
hlt
cmp
mov
xor
pop
pop
jbe
dec
leave
enter
push
stos
xchg
fidivs
xor
in
mov
or
lret
xchg
inc
cwtl
mov
int3
out
xchg
into
pop
ss
add
sarl
sbb
imul
jo
test
je
lods
xchg
pop
xchg
or
pop
dec
mov
mov
sub
lret
mov
les
in
shrb
fucomi
scas
add
adc
push
test
or
sub
or
xor
cwtl
sbb
mov
mov
adc
or
mov
sub
and
sahf
xor
leave
dec
lcall
into
push
fistpl
popl
ret
xor
and
jle
sbbb
and
inc
inc
dec
mov
insb
inc
repz
loop
cmp
sub
test
repnz
lea
popf
push
lret
mov
add
pop
cmpsl
xor
or
popf
dec
test
jle
bound
shll
fcmovbe
cmp
pushf
xchg
int3
and
inc
adc
stc
rorl
in
pop
xor
push
push
pusha
fbld
xor
inc
jbe
adc
inc
jbe
push
out
push
mov
fadds
or
sbb
dec
adc
xchg
sbb
into
inc
loop
rcr
fmull
cmc
pop
pop
loopne
push
mov
add
cmp
mov
xor
out
mov
lods
xchg
push
push
pop
adc
cltd
outsb
mov
and
lock
jmp
sbb
xchg
out
gs
aaa
mov
pop
pusha
and
jp
shrl
mov
jle
outsl
lock
inc
inc
pusha
add
and
ljmp
outsl
arpl
std
negl
inc
adc
ficoms
lea
xor
insl
lret
fidivrl
sub
mov
lret
mov
ret
adc
testl
and
ljmp
mov
xchg
adc
mov
sbb
add
sub
add
sbbb
jl
add
dec
mov
ds
inc
jp
xchg
lds
sbbl
ja
mov
cmp
insl
adc
rclb
mov
mov
or
stos
inc
out
daa
in
arpl
mov
aaa
push
and
leave
cmc
push
jno
outsl
or
notl
xchg
add
dec
xor
jnp
mov
je
mov
adc
dec
mov
out
ss
push
dec
int
fs
push
outsl
bound
xchg
sub
xchg
push
mov
xorl
scas
mov
stc
sbb
and
out
jmp
je
iret
fdivr
hlt
stc
or
arpl
pop
test
mov
xor
movzbl
xlat
enter
mov
idivb
lods
pop
decl
inc
fmul
pop
inc
test
lds
stos
xchg
pop
loopne
push
orl
or
jle
rcrb
and
iret
loopne
lods
inc
int3
test
in
adc
push
insb
mov
cmp
enter
pop
push
xchg
jmp
lahf
push
mov
cltd
xchg
int3
subl
adc
xor
mov
mov
cwtl
cmpsl
dec
push
fdivr
add
add
push
sub
xchg
sub
call
jnp
push
mov
jno
adc
xor
mov
int3
iret
inc
lock
stc
push
jne
mov
shrl
inc
add
and
std
movsb
in
inc
aad
xor
cwtl
inc
sub
sub
lret
adcl
call
mov
cmp
sbb
xor
push
cli
xor
out
call
sub
shrb
in
movsb
xlat
inc
inc
sub
add
or
pop
cmp
dec
andl
jno
jmp
pushf
outsb
inc
outsl
xlat
aad
test
mov
xchg
push
lock
aad
dec
movsb
mov
mov
lock
outsl
fwait
add
js
out
loop
sarb
call
dec
stos
out
adc
and
cmovge
cltd
int3
xor
scas
or
rcll
sbb
aas
test
dec
jg,pt
into
dec
stos
shl
xchg
jg
lock
mov
xor
inc
aad
pop
xor
lds
stos
insb
inc
pop
sub
jmp
and
pop
popa
stos
call
stc
dec
pop
insl
cmp
sub
js,pn
jp
or
dec
dec
and
lret
push
mov
push
sbb
inc
les
into
adc
xor
mov
push
addl
outsl
sub
sbbl
in
jo
adc
cli
scas
mov
fistpll
xor
mov
push
sbb
dec
adc
fwait
sbb
sbb
pop
mov
aam
ret
or
adc
outsl
loopne
cmp
out
in
cli
popf
xor
inc
mov
pop
popf
pushl
not
mov
mov
mov
fisttpl
data16
cmp
push
fadd
jg
mov
fwait
pop
lods
test
lds
xchg
adc
push
push
push
dec
jbe
clc
cmpsl
jg
lcall
lods
mov
aas
arpl
dec
cmp
mov
out
aam
stc
mov
xchg
xor
dec
xor
dec
sbb
push
mov
call
dec
mov
mov
xorb
ret
sbb
into
pusha
lods
push
xchg
adc
mov
xchg
cmp
cmpsb
repz
and
stos
dec
aas
or
xchg
test
or
adcl
addr16
and
data16
cmp
pop
scas
in
nop
mov
int
sub
mov
xchg
push
dec
mov
add
mov
pop
sbb
pop
push
popl
test
iret
mov
fwait
decl
lcall
lahf
inc
repz
dec
inc
xor
pusha
dec
sbb
aaa
test
dec
xor
mov
mov
and
lcall
inc
lret
arpl
dec
lahf
pop
xor
add
add
in
cmp
mov
xchg
inc
push
int
push
dec
jg
fptan
push
or
jbe
in
aaa
cmpsl
dec
sahf
push
pusha
or
clc
cmp
int
push
mov
ss
mov
test
mov
xor
inc
movsb
cld
nop
ret
jb
fs
pop
or
mov
dec
pushf
xlat
add
sbb
xor
mov
cmp
shll
xor
xor
dec
sbb
mov
insb
sub
and
out
cmp
mov
pop
cmpsb
insb
test
andb
xchg
fbstp
push
xchg
sti
fsubp
arpl
nop
dec
test
loope
iret
lahf
aaa
mov
rcl
push
cmpsb
test
push
popl
movsl
push
jmp
xchg
xchg
push
dec
and
gs
les
jo
add
inc
mov
jg
dec
mov
sti
xor
cmp
sahf
add
push
pop
out
arpl
push
xor
xor
jecxz
aas
mov
inc
les
jle
or
sbb
sbb
mov
mov
mov
das
mov
jecxz
test
mov
adc
mov
les
jmp
xchg
sbb
dec
or
test
and
ja
cmp
mov
adc
leave
sbb
dec
fcomi
dec
add
stos
mov
out
push
in
and
sub
mov
pop
ret
push
inc
push
mov
xchg
mov
inc
ljmp
cmp
sub
lods
movsl
scas
or
loope
sti
inc
push
add
xchg
and
int3
pop
sbb
jg
xchg
subl
jp
inc
mov
cmp
push
in
jecxz
jae
test
dec
mov
push
push
dec
mov
in
push
cld
fnstenv
sbb
mov
inc
pop
outsl
mov
jl
sub
lea
test
cltd
dec
stc
sahf
aad
mov
mov
mov
subl
lahf
mov
test
jns
enter
adc
insl
sbbb
cmp
fsubl
das
xor
mov
jg
mov
adc
lcall
xchg
pusha
roll
jg
pop
jle
xchg
pop
ror
adcb
push
inc
sbb
xor
daa
icebp
shr
shlb
mov
cmp
adc
mov
sbb
popf
aas
mov
outsl
in
popa
sub
xlat
xor
cmp
and
fcompl
fstl
mov
or
jb
mov
xchg
adc
push
je
sub
stos
out
pop
xchg
sub
dec
dec
and
inc
adc
mov
outsb
sub
shrl
adc
mov
shlb
les
gs
jbe
lcall
adc
test
cmp
mov
sarl
push
pop
invd
pop
jbe
jnp
jo
ficoms
insb
mov
and
data16
jno
xchg
add
jae
push
cmp
jb
stos
pop
movsb
jge
loopne
fcoml
mov
loopne
ljmp
jne
push
mov
sbb
mov
insb
or
cmp
mov
fisubl
sbb
inc
leave
jne
ror
push
pop
fdivs
aas
mov
das
dec
jnp
jle
lock
mov
or
in
xchg
mov
out
movsb
sub
cmp
lcall
or
hlt
data16
or
dec
sub
pop
xor
mov
jb
lock
cmp
out
ljmp
dec
into
mov
lods
test
aas
inc
mov
xchg
sbb
xchg
stc
mov
mov
pop
xor
cmp
cmpsb
pusha
shrb
int3
xchg
fistps
dec
and
aaa
les
jae
push
xor
jmp
data16
aas
mov
data16
lcall
pop
stc
outsl
sub
jg
scas
xor
addr16
out
push
adc
mov
sbb
cli
lea
aad
inc
cmp
fdivr
or
add
push
jmp
je
aas
lock
mov
or
xor
cmc
mov
das
inc
and
in
popa
push
enter
fisubrl
jecxz
dec
repz
sbbl
cs
cmp
imul
stc
out
ds
or
add
in
cmp
psllw
mov
jecxz
xchg
cmpsb
pop
push
loop
inc
pop
add
in
and
add
push
stos
jecxz
mov
xchg
dec
sbb
adc
ret
sub
into
inc
clc
mov
mov
pop
clc
inc
push
mov
pop
jnp
loop
sbb
fcoml
sub
out
inc
adc
popf
xchg
sub
dec
jp
pusha
pop
cmp
js
mov
xchg
push
mov
xchg
adc
daa
xor
dec
sub
mov
and
jnp
dec
xchg
sub
ljmp
fwait
jno
repz
push
cmp
mov
in
decb
jmp
or
pop
ljmp
sbb
or
pop
cs
cwtl
push
push
cmpl
dec
fisttpl
sub
mov
adc
pushl
int
mov
and
in
test
jns
jae
daa
adc
xorb
xor
inc
pop
add
movsb
sub
adc
adc
clc
mov
xchg
in
lcall
sub
scas
lcall
mov
mov
mov
test
test
mov
mov
lods
dec
xchg
jl
inc
lahf
mov
fst
dec
pushf
lods
imul
ljmp
fidivrs
in
jae
sbb
dec
aaa
push
and
or
inc
repnz
in
fldl
add
push
leave
cmpl
xchg
xchg
and
sub
pop
mov
test
shll
std
lock
or
movsl
xchg
pop
imul
xlat
call
cmp
movsl
inc
jne
adc
add
movsl
je
xor
adc
lea
and
insb
rclb
inc
mov
cmpsl
das
into
xor
sbb
pop
ja
pop
mov
incb
sti
pushf
fdivrs
dec
and
test
and
inc
test
shlb
in
jmp
cs
pop
int3
push
jmp
aas
mov
js
dec
inc
std
pop
sbb
scas
xchg
ss
mov
add
pop
into
pop
mov
aad
push
push
adc
addr16
stos
cli
add
dec
mov
cs
movsl
sahf
dec
inc
inc
or
scas
sbb
aad
xchg
call
pop
insb
loopne
inc
enter
xchg
cltd
sti
adc
daa
iret
testb
sub
cmpsl
test
sbbl
dec
jecxz
mov
adc
scas
outsl
lret
sbb
popa
inc
pop
lahf
cmp
xlat
mov
test
pop
mov
or
add
inc
push
mov
mov
je
js
cld
xchg
inc
mov
pop
daa
add
aam
dec
sbb
inc
es
dec
lret
scas
ljmp
cmp
loope
and
pop
mov
inc
and
lcall
mov
mov
pop
out
dec
fnstcw
out
or
cmp
cmp
test
push
dec
cmpsb
out
cmp
cmpsl
test
pop
mov
clc
movswl
stc
xchg
adc
xchg
ss
pop
lahf
repz
jnp
inc
imul
aaa
mov
mov
adc
push
cli
pop
mov
out
sbb
fwait
sahf
cltd
adcb
cmp
cmp
pop
scas
loopw
repnz
repnz
push
add
mov
xchg
mov
mov
pop
fstpl
adcb
lahf
ficomps
sahf
inc
inc
fimuls
mov
pop
mov
stc
jnp
shr
repz
lret
mov
adc
and
or
sbbl
lahf
lock
pop
xor
fcoml
nop
or
cli
mov
xor
nop
in
repnz
mov
cli
mov
imul
inc
rcl
aad
int3
mov
testb
pop
pop
pop
sub
mov
fucomip
out
sub
test
popf
clc
ja
sti
imulb
xchg
mov
pop
add
push
rcrl
add
mov
mov
and
cmpb
mov
nop
iret
mov
loope
pop
dec
lcall
cmp
sub
add
mov
mov
mov
loope
xchg
push
mov
lret
stos
fstps
stos
xor
cwtl
add
xchg
out
dec
test
xor
push
fstp
call
add
add
xor
lcall
mov
xchg
out
inc
and
dec
lods
aaa
pop
or
push
push
insl
add
mov
xchg
lret
pusha
rorl
lock
mov
sbb
push
jge
adc
iret
sbb
xor
test
or
jb
out
test
hlt
std
adc
jecxz
pushf
cmc
jecxz
push
xchg
mov
shlb
push
stos
addr16
xchg
fdiv
cmp
das
outsl
xor
bound
fbld
lock
shll
sbb
out
into
dec
icebp
pop
mov
fsubrl
or
iret
mov
mov
push
mov
xor
dec
sub
lods
jnp
decb
call
or
inc
es
jae
repz
mov
cli
mov
std
movsl
addb
sahf
mov
jno
cld
fcomps
imul
test
xor
lcall
pop
jnp
pushf
out
mov
stos
cmp
lret
aam
mov
std
loopne
lods
sub
jae
or
xor
cmp
lock
push
test
or
loopne
rolb
xchg
orb
ljmp
add
adc
rolb
jnp
sbb
xor
push
sub
stos
xchg
sub
jns
test
rcrl
mov
loope
imul
xor
mov
aad
aam
test
repnz
jl
push
aaa
les
sbb
daa
xor
dec
divb
mov
xchg
in
sbb
outsb
loopne
push
sbb
add
sbb
xchg
rorl
incl
loope
and
add
cmp
hlt
loopne
xor
sahf
xor
xor
jbe
subl
jae
les
mov
add
shlb
stos
jl
sbb
imulb
loope
or
cmp
pop
dec
stos
mov
sbb
fsubrl
add
popa
pop
jg
jbe
fidivrl
inc
cmp
pop
mov
sti
aam
lds
inc
mov
cld
std
xor
adc
cwtl
std
mov
and
loopne
inc
mov
or
lea
iret
scas
leave
shrl
xor
pop
loopne
and
jb
stc
imulb
pusha
sbbb
push
and
clc
mov
outsb
repz
mov
mov
sbb
cli
and
bound
lods
sub
xor
mov
bound
out
xchg
in
shlb
xlat
sahf
insb
test
mov
adc
xorb
data16
scas
addr16
icebp
nop
mov
repz
pop
gs
rorl
mov
pop
jnp
in
mov
and
gs
push
inc
xchg
icebp
cmpsb
jb
and
cs
bound
cmp
outsb
cmp
push
out
jg
jae
ret
xlat
stc
push
mov
or
cmpsl
les
pushf
xor
push
or
pop
sub
and
inc
xchg
push
test
repz
xchg
add
hlt
fbstp
inc
ja
mov
icebp
adc
mov
je
aam
xchg
xor
sub
xlat
inc
push
ja
int3
xor
adc
aad
nop
into
xchg
mov
pop
imul
loope
mov
fbstp
std
sarb
cmp
cmp
and
adc
loop
ljmp
xchg
popf
inc
lea
dec
nop
cwtl
dec
xor
jge
xor
lahf
shr
sarb
les
pop
cmp
adc
cltd
mov
xchg
mov
xchg
or
pop
popf
fadds
xor
mov
orb
mov
xchg
filds
add
aad
jno
fisubl
xor
imul
jae
and
rcrb
inc
jns
nop
jge
jns
jno
scas
pop
pop
jl
scas
in
test
inc
stc
cmp
xor
mov
scas
xchg
mov
pop
sub
mov
es
add
dec
add
outsl
inc
lds
inc
push
subl
imul
enter
enter
fsubrl
bound
int3
in
pop
inc
insb
dec
mov
repnz
lods
lds
les
ja
dec
mov
hlt
js
add
mov
das
inc
mov
stc
lcall
jl
sbb
lret
ret
push
fcomp
pushf
push
jno
xor
cmp
insb
mov
xor
jecxz
cs
adcb
shrl
push
rcrl
mov
mov
mov
sarl
stos
mov
rorl
jbe
std
jno
mov
inc
jns
push
add
pushf
jno
pop
sub
or
stos
imul
pushf
hlt
out
imul
jbe
xchg
std
adc
mov
xchg
push
fnstcw
dec
add
xchg
imul
cmp
mov
shl
mov
enter
fcomp
out
scas
dec
jecxz
dec
or
ljmp
jne
xor
mov
mov
inc
jnp
pop
arpl
mov
out
sub
jmp
in
jp
insl
aas
test
shl
popa
faddl
fisubs
insb
das
loope
push
add
cmp
loopne
inc
loope
stc
les
out
pusha
cmp
iret
inc
jo
cmpsb
imul
mov
insb
pop
xor
pop
and
xor
clc
or
push
mov
cwtl
loope
push
ficoml
pushf
mov
fmul
push
add
fcmove
in
cmp
inc
icebp
dec
xchg
clc
jg
inc
cmpsb
dec
rcr
loop
es
rorb
jno
push
xor
inc
jl
out
cli
sbb
cs
pop
and
test
in
jg
jo
ret
lahf
adc
movsb
sahf
adc
jne
mov
aaa
xchg
dec
or
push
scas
ret
addb
lret
cmp
cs
lret
inc
scas
gs
movsb
pop
jmp
int
mov
xchg
jbe
jg
les
cmp
mov
aaa
dec
xchg
dec
repnz
dec
cmp
push
imul
or
mov
mov
xchg
fsub
sub
push
xchg
pop
adc
clc
jge
fisttps
les
lret
inc
inc
mov
pop
neg
insl
jl
mov
pop
insl
data16
jmp
dec
mov
inc
ljmp
decl
js
in
and
fs
jne
pushl
shrl
fcompl
jle
add
imul
aas
pushf
dec
jo
lcall
adc
cmp
inc
pop
pop
add
out
xor
push
jl
leave
mov
add
sbb
bound
aaa
stc
pop
push
jnp
cs
adc
push
mov
pusha
inc
std
out
fs
mov
jl
addr16
stos
push
in
add
hlt
and
cltd
inc
out
aas
pop
pop
out
ret
adc
call
mov
and
inc
or
sbb
inc
sub
cmp
mov
mov
mov
jne
aaa
xchg
fistpll
add
cmp
push
das
lcall
lea
pushf
shll
rolb
cmp
aaa
nop
sub
les
in
out
and
outsb
outsl
clc
pop
push
inc
bound
frstor
xchg
pop
xor
adc
popa
pushf
aaa
jmp
stos
cmp
and
push
jae
add
push
adc
movsb
push
inc
sbb
mov
mov
leave
icebp
es
repnz
mov
or
in
mov
push
shll
add
mov
arpl
iret
sbb
leave
xchg
add
add
loopne
in
subb
mov
mov
xor
mov
jns
mov
outsl
mov
enter
jecxz
mov
ljmp
in
mov
rcrb
loopew
adc
add
lods
xchg
cmp
cltd
xchg
mov
mov
in
sar
pop
mov
mov
out
aaa
data16
fwait
mov
testb
movsl
scas
mov
dec
push
scas
std
mov
xchg
int
pop
add
je
sbb
add
jg
push
push
pop
popa
dec
jecxz
jno
or
jb
js
cmp
pop
push
jb
lods
cmp
mov
mov
fucomp
out
pushf
out
or
shl
xchg
pop
inc
aas
add
imul
sub
arpl
test
fs
daa
jg
jb
rorb
sbb
push
add
loopne
ret
pop
aaa
pop
mov
push
xchg
enter
pop
jbe
pop
sub
leave
fcomi
push
mov
sub
mov
shll
pop
mov
add
std
nop
ret
outsb
push
movsb
adc
lcall
ret
inc
push
sub
jnp
cmp
inc
inc
add
ljmp
mov
insl
xchg
and
cwtl
sub
mov
adc
jne
nop
js
test
lds
adc
add
scas
push
aam
sti
fwait
xchg
xor
iret
stos
movsl
inc
pop
loopne
outsl
mov
test
cmp
int3
mov
xor
or
pop
mov
inc
sub
and
push
mov
loope
mov
mov
ret
mov
and
inc
mov
imul
aam
add
cmc
popa
mov
jns
and
sub
leave
inc
inc
push
cmp
cmp
push
aad
repz
cmp
pop
daa
jle
lock
nop
xlat
pop
cmp
push
xor
adc
aas
movsl
mov
adc
lret
push
adc
adc
adc
lock
mov
jnp
dec
jae
ror
in
dec
out
dec
inc
movsb
sub
or
loopne
add
xor
bound
ljmp
inc
adc
inc
iret
inc
fidivrl
push
xor
outsb
push
mov
cmp
test
dec
adc
jnp
ss
fdivp
scas
sbb
pop
xor
push
push
pop
xchg
sub
jnp
call
sbb
inc
mov
nop
jns
or
out
xchg
pop
xchg
xor
fcom
imul
xor
fst
mov
lea
mov
aas
mov
jge,pt
ss
sub
push
and
adc
sub
jg
ljmp
test
mov
ret
mov
xlat
inc
xor
mov
pop
or
data16
cmp
add
out
mov
stos
add
lret
jl
cmp
rclb
lods
fidivrl
sub
iret
or
or
inc
loope
xchg
and
scas
or
jp
addl
add
in
shrl
arpl
loop
cmp
add
loope
shrb
lcall
add
jl
push
ret
inc
jmp
xchg
rclb
pop
ljmp
int3
clc
negl
cmp
bt
xchg
pop
out
pop
xor
rclb
pause
outsb
mov
imul
jno
ficoms
xchg
call
fucomip
leave
stc
pop
pop
testl
rorb
push
stc
pop
gs
add
push
add
mov
into
mov
mov
pop
mov
cmp
push
mov
ret
lret
pop
int
xchg
sub
ja
xor
int3
adc
mov
iret
test
mov
ja
ss
mov
notb
mov
mov
hlt
pop
adc
lahf
xchg
dec
pop
jmp
in
xchg
pop
cmp
aaa
movsl
jnp
cltd
out
cs
pop
xchg
fisttps
push
sbb
stc
outsb
or
add
jecxz
xchg
xor
das
xor
decl
shl
fsub
inc
lock
dec
mov
sub
cmp
mov
sub
pop
jo
lods
push
adc
mov
inc
mov
jno
mov
inc
add
push
test
movsl
push
pop
mov
addr16
cmpsl
movsl
dec
dec
or
cs
ljmp
jo
sub
in
add
mov
and
insl
rcrb
cmp
ljmp
add
ss
sti
mov
jecxz
xor
jb
mov
leave
ret
jno
mov
cld
dec
mov
xchg
sti
sub
call
lds
xor
cmp
out
pop
bound
sub
mov
in
lock
pop
mov
les
and
mov
rcll
mov
push
nop
cmp
imul
rcll
pop
and
cmp
xchg
cmp
xlat
loope
mov
push
fsubr
xchg
aaa
mov
mov
into
dec
mov
cmc
or
ljmp
mov
adc
mov
or
push
mov
aad
add
inc
mov
jmp
jl
decl
inc
std
dec
fldt
xchg
arpl
inc
int
es
add
ljmp
sub
fsubl
fcmovb
out
xor
xchg
and
dec
pop
ds
xchg
jo
dec
loopne
mov
aaa
loop
mov
lea
jl
sbb
outsb
xor
dec
rcr
js
lcall
pop
sbb
xchg
ror
fbstp
shrb
xchg
icebp
mov
es
xchg
inc
insl
dec
negb
mov
xchg
xor
and
sarb
xchg
addr16
jp
sbb
lret
aas
inc
fimuls
jne
popa
and
xorb
mov
outsb
jg
stos
mov
push
inc
cmp
jbe
mov
shrl
outsl
dec
or
test
and
fs
inc
push
sub
ret
jl
mov
movsl
mov
imul
add
xchg
aam
push
inc
xor
mov
pushf
sti
xchg
inc
mov
jno
fwait
mov
cld
or
xorl
mov
push
mov
test
sbb
ret
shrl
dec
iret
pop
ret
pushf
inc
call
dec
popa
stc
push
mov
adc
jmp
xchg
outsl
cmp
mov
xor
inc
iret
pushf
pop
and
je
psubd
add
jmp
or
push
xchg
loop
or
movsl
ljmp
mov
jmp
test
popf
loop
pop
out
jg
mov
in
pop
xchg
push
sub
mov
cmc
notb
pop
add
test
jae
cltd
test
cli
pop
addr16
mov
decl
cmp
mov
ja
pop
cmp
lcall
push
insb
imul
cmp
pop
std
pop
push
sbb
sub
jbe
xor
movsl
imull
pop
test
mov
bts
dec
gs
stc
call
fisubl
lcall
xor
mov
jecxz
jmp
adc
lods
mov
adc
cmpsb
stos
imulb
arpl
clc
enter
dec
call
out
push
adc
push
xor
rorl
std
rorl
scas
sub
and
ret
popa
popf
loopne
xor
xchg
cmp
jmp
sub
loopne
clc
jae
aad
enter
outsb
int
stc
dec
lret
fs
jle
pop
sbb
xor
movsb
pop
add
pop
lcall
pop
or
jp
or
scas
push
cs
inc
outsb
mov
nop
lock
cwtl
fisttpll
or
mov
mov
mov
rolb
mov
hlt
cmp
or
mov
movsl
xchg
mov
test
ret
fstpt
ret
pop
stc
aad
dec
xlat
pop
sarl
loope
xchg
mov
mov
add
aas
movsl
cmp
xchg
and
popa
xorb
mov
cmpsl
and
mov
or
gs
neg
cmpsb
xchg
stc
jecxz
in
add
mov
mov
inc
jbe
xchg
aaa
cld
pop
inc
aad
movsb
out
call
adc
shl
cmp
jl
scas
xor
out
jne
mov
push
jno
cmp
test
mov
xchg
add
dec
adc
test
push
adc
out
repz
leave
sbb
in
fwait
mov
mov
mov
into
mov
test
movb
cmp
in
xor
ja
out
inc
stos
dec
int3
scas
out
dec
call
icebp
ret
cs
push
cmpb
loop
testb
push
inc
jno
xchg
and
lcall
push
mov
scas
and
shlb
cmpsl
mov
ret
xor
xchg
or
addl
les
lea
jp
mov
jecxz
lock
add
xchg
adc
ljmp
adc
rcll
jno
mov
mov
mov
xchg
pop
insl
shr
cmpb
int
test
mov
loopne
mov
cmc
mov
out
sub
out
dec
dec
or
adc
icebp
orb
xchg
mov
adc
imul
push
out
mov
sarb
xchg
mov
xchg
stos
pop
adc
mov
sbbl
push
jno
cmp
call
fsts
aaa
dec
decb
pop
add
bound
rcll
repnz
out
xchg
mov
lock
imul
lcall
mov
shrl
xchg
and
jge
sbb
inc
scas
shl
sti
aad
aas
fimuls
outsb
call
aad
or
add
sub
in
mov
xor
stos
cmp
jno
leave
ljmp
mov
dec
pop
jns
push
xor
hlt
int3
pushf
sub
jbe
popa
decb
cmp
stos
test
jns
popf
inc
popa
mov
popa
dec
insb
sbb
insl
ss
xchg
push
pop
mov
loop
lock
jecxz
xor
add
xchg
pop
nop
jge
cmp
inc
dec
xor
fadds
test
test
scas
sbb
push
jbe
sarb
dec
lret
mov
out
inc
mov
mov
ror
fdivrp
jg
jg
sub
cmp
outsl
arpl
or
outsb
js
fs
push
mov
jae
std
xor
dec
imul
or
mov
push
adc
or
pop
or
jae
xchg
or
xor
pop
mov
lods
insl
out
sub
adc
icebp
inc
in
fwait
add
push
and
mov
mov
out
jae
cli
ret
sub
ljmp
repnz
xor
sub
jne
outsb
sahf
insl
in
sahf
sub
push
out
fcmovnu
lahf
sbb
dec
imul
popf
clc
push
mov
inc
or
imul
add
lret
jp
loop
mov
dec
adc
ljmp
or
cmp
adc
adc
in
push
ficomps
icebp
xchg
dec
xchg
jmp
or
jae
lahf
rol
jb
push
mov
pusha
fildll
int3
movsl
sub
pop
add
or
rclb
stos
mov
fiadds
cmp
cmp
repnz
leave
in
test
xor
jp
adc
call
pavgb
into
jne
lds
dec
adc
aam
push
jbe
mov
inc
movsb
and
sub
jecxz
mov
add
xor
mov
bnd
lods
jle
push
jae
xchg
andb
xor
pop
enter
arpl
test
xor
or
pop
in
add
je
mov
dec
mov
in
dec
es
js
mov
icebp
lret
cmp
sub
cmpsb
adc
cld
add
xor
and
add
mov
out
pushf
and
loope
xor
ret
cmp
or
jecxz
lahf
stos
dec
pop
test
push
or
iret
xchg
cmpsb
mov
shl
outsb
mov
mov
sub
mov
pop
mov
lahf
lds
dec
popf
jl
mov
xchg
and
lcall
es
iret
sbb
in
push
insb
and
push
cld
pop
repz
hlt
fcom
xor
stos
loope
aas
sub
dec
mov
scas
jmp
js
xchg
mov
call
das
and
fistps
push
dec
popa
jbe
mov
xor
add
sbb
insb
pop
adc
mov
shl
jmp
sub
jnp
pusha
inc
mov
stc
sbb
lock
hlt
or
repz
mov
orl
fdivr
dec
testl
mov
jo
fsubrl
enter
jae
xlat
inc
ret
notb
loopne
fwait
dec
sub
sti
xor
aas
xchg
es
das
cmp
inc
push
test
mov
fidivrs
pop
add
rcrb
dec
xchg
lea
xlat
push
lret
xchg
add
popa
rol
pop
gs
cmp
and
mov
lcall
or
clc
mov
pop
mov
fistpl
dec
test
les
adc
pushaw
shll
mov
sbbb
inc
mov
popa
loope
xor
outsl
mov
push
sbb
movsl
inc
call
mov
adcl
ja
or
orb
add
xchg
nop
mov
inc
push
sbb
stos
xlat
movsb
mov
stos
das
lods
imul
xor
daa
test
sbb
jecxz
leave
mov
popf
xchg
loopne
sbb
jp
jg
mov
pop
leave
ficoml
aaa
cwtl
das
jbe
lods
fstpl
adc
fistpll
test
dec
cmp
je
aam
mov
iret
ret
repnz
imul
add
mov
sub
pop
ljmp
lods
popa
das
pushf
addr16
jge
mov
lods
pop
ss
sti
jno
mov
add
hlt
jne
xchg
rol
jne
leave
pusha
enter
inc
daa
rol
or
shlb
jno
gs
lahf
sub
out
cld
and
movsl
arpl
loope
push
xchg
cmp
or
pop
fsts
fcoml
add
cmpsl
sbb
pop
mov
fldenv
stc
sub
fimuls
pop
pop
cld
sbb
xchg
frstor
jae
pop
xchg
stos
stc
and
mov
repz
lea
mov
xchg
pop
fs
pop
pop
add
jb
mov
xor
mov
pop
movsl
ja
sahf
mov
repz
pop
lea
mov
sub
lcall
js
adc
mov
out
mov
lods
add
addl
ret
mov
pop
push
lahf
push
in
add
lods
fwait
cs
fcomi
lret
call
mov
ja
jle
filds
lret
mov
bound
add
sub
in
xor
xor
mov
aam
les
lret
or
repnz
push
pop
repnz
cmp
sbb
pop
mov
in
xchg
cmp
daa
in
je
sti
imul
jmp
cmpb
dec
xchg
shlb
stos
and
mov
inc
and
test
jae
int
cmc
mov
push
mov
push
lock
mov
arpl
filds
push
mov
lret
dec
loopne
inc
xor
jmp
inc
clc
sbb
inc
popa
add
rcrl
aam
xor
fcomps
shlb
xor
or
fadds
lret
mov
aad
inc
popa
out
inc
js
cs
cltd
push
push
xor
xlat
clc
push
mov
lds
or
cmc
in
xor
adc
addr16
fcompl
jnp
dec
popf
aas
mov
add
mov
jne
mov
cmpsb
pop
jb
imul
push
pop
sbb
sub
into
lods
push
nop
addr16
fisttps
out
fcoml
cltd
nop
int
lcall
cli
cld
pop
pop
in
rcl
cmp
popa
stc
xor
push
daa
mov
and
jge
sub
pextrw
sub
dec
push
cmpb
vcomisd
sub
repnz
into
sub
push
push
fdiv
dec
xor
fldl
push
insl
push
or
in
into
mov
jp
sarl
dec
shlb
pushw
jl
ss
out
gs
and
mov
orb
addr16
jne
dec
loope
mov
xorb
jnp
bound
push
jl
jecxz
jne
iret
loop
jae
sbb
shll
data16
xor
dec
aaa
loopne
call
push
xor
test
xchg
xchg
mov
cmpsb
jae
jge
outsb
cmpsl
add
leave
loop
push
push
punpckhdq
fcomp
std
mov
popa
lret
or
inc
pavgb
ljmp
jnp
jbe
adcb
push
movsb
cld
in
xchg
xchg
xor
sbb
outsl
xchg
sub
xchg
das
cmp
mov
push
dec
lahf
mov
int3
clc
inc
ss
rcll
push
cli
fs
xchg
jg
mov
xchg
mov
sbb
and
dec
fnstsw
jne
and
sarb
sahf
int3
jle
repnz
fsubrl
sub
mov
test
shrl
inc
inc
daa
cld
hlt
orl
aam
sub
notl
fimuls
clc
inc
ficoml
sub
xlat
lods
and
cmpsl
or
out
aad
push
inc
jmp
fscale
xchg
pop
cmp
inc
movsl
mov
repz
out
adc
mov
dec
repz
aaa
jbe
scas
rclb
xor
adcl
mov
sbb
and
popa
mov
ds
inc
mov
imul
popf
sbb
imul
push
sbb
pslld
out
mov
clc
mov
call
sub
pop
sti
in
in
loope
stos
inc
test
jmp
xchg
dec
ss
out
es
mov
pop
xor
mov
cli
movsl
sti
movsl
mov
lahf
aam
cwtl
lret
xchg
fidivrl
sbb
out
out
aam
repz
jns
fcoml
mov
push
es
adc
inc
sub
arpl
jno
cmpb
lret
or
fcmovne
mov
push
cmp
gs
pushf
dec
icebp
and
gs
jns
fistl
cwtl
mov
cmp
lahf
adc
cmp
dec
into
outsl
stc
fsubrl
pop
push
cld
pop
ss
lock
test
pop
lcall
adc
test
inc
in
mov
mov
into
jbe
cmp
mov
or
sub
pop
mov
jno
pop
stos
xor
shl
sub
push
cmp
inc
push
xor
sub
imul
loop
sub
js
testb
or
mov
shlb
dec
rcrb
push
test
repz
dec
mov
xor
cmp
push
stos
xchg
das
or
fs
cmp
stc
inc
lds
push
cmc
xor
loopne
or
fcoml
cmp
cmpl
mov
mov
inc
cld
mov
and
insb
push
call
arpl
and
pop
inc
sahf
daa
sbb
or
aam
push
and
stc
jbe
mov
xor
jl
xchg
ljmp
or
pop
mov
dec
repz
nop
mov
cld
and
or
cs
sub
scas
les
add
xchg
pop
aam
cmpb
and
lods
xchg
mov
fs
xchg
lcall
mov
push
lahf
jp
lods
push
push
jno
pushf
sahf
mov
cmp
gs
mov
dec
sarl
sub
std
pusha
push
jb
aaa
mov
cmc
gs
sbb
insl
loopne
lret
push
sbb
sbb
outsb
notl
inc
xchg
jno
cmpsb
negl
push
push
or
stos
imul
ja
sub
sbb
cmpsb
lea
aam
outsb
stos
inc
cmpsl
sbb
mov
pop
dec
call
sub
pop
adc
outsb
dec
pop
sub
mov
shll
adc
push
cli
inc
dec
imul
cld
flds
xchg
or
mov
repz
dec
repz
xchg
cmp
imul
mov
or
es
push
out
sub
das
in
pop
nop
fisubrs
cwtl
lods
pop
leave
nop
lahf
cmc
jge
xchg
pop
cmp
sbb
adc
gs
imul
loop
xchg
sarl
inc
inc
in
dec
fisttpll
push
mov
mov
mov
push
mov
fstl
mov
fiaddl
cmp
jo
mov
repnz
push
or
inc
inc
cmpl
insl
lret
insl
aam
xlat
loope
ret
mov
cmpsl
loopne
inc
daa
cmc
or
pop
mov
mov
mov
xchg
inc
sti
inc
shrb
jle
jl
inc
clc
stos
pop
adc
pusha
or
out
adc
popa
int
out
sbb
and
dec
cld
cmp
fcompl
das
add
adc
mov
popf
or
out
and
xchg
adc
sub
mov
push
roll
sbb
lods
xor
adc
jb
lcall
test
cmpsl
cmc
cltd
push
sbb
clc
dec
fs
push
inc
pop
pop
out
mov
mov
mov
jmp
fsubs
in
fwait
lret
mov
arpl
mov
movsb
pusha
ret
add
lock
aaa
cmp
out
sub
mov
mov
push
ret
lea
pop
pop
dec
mov
or
cmp
fsubs
xchg
call
mov
lock
push
andb
lret
dec
daa
popa
movsb
add
sub
inc
jno
psubq
and
loop
daa
xor
mov
jns
js
out
in
cmp
xlat
call
push
sub
aad
ficoms
or
push
iret
add
wbinvd
mov
loopne
cmp
pop
lds
pop
out
xchg
ret
test
aaa
jb
sub
jne
adc
or
push
imul
cwtl
test
lret
mov
jecxz
cmp
fistps
jmp
lahf
fcomi
or
loopne
sbb
mov
cmp
out
mov
mov
faddl
fistps
in
mov
push
dec
pop
dec
leave
cli
push
hlt
mov
jecxz
imul
add
fisubrs
jl
jb
aam
push
test
arpl
xor
repnz
mov
cmp
leave
mov
popa
movsl
scas
or
pop
loope
aas
push
and
mov
pop
push
addr16
jns
mov
push
repz
dec
pop
cmp
add
out
xchg
out
loop
lods
mov
inc
cld
imul
add
and
xlat
imulb
sbb
mov
iret
jae
and
adc
imul
adc
ror
std
mov
cld
mov
push
out
cli
pop
out
in
jecxz
lret
out
das
in
and
push
add
add
sbb
mov
mov
push
data16
adc
jg
add
jnp
jg
jp
arpl
mulb
xchg
push
scas
adc
dec
xor
pop
fucomip
mov
pop
sub
adc
arpl
adc
adc
adc
hlt
push
aam
pop
mov
push
mov
xor
mov
cmp
add
push
push
nop
test
cmc
jl
cmp
es
lahf
dec
imul
test
add
lsl
int
mov
fnstsw
ja
mov
loop
or
lret
adc
push
test
idivl
icebp
and
jno
and
clc
rorl
mov
mov
sub
add
mov
push
mov
xlat
pop
xchg
mov
pop
test
lcall
mov
leave
mov
add
cmp
in
imul
xchg
add
mov
push
data16
hlt
xchg
mov
xchg
mov
cmp
cmc
jge
pop
pop
out
xchg
hlt
sbb
mov
mov
or
cmpsl
lea
cmp
or
pop
fs
das
les
jle
stos
sub
pop
ror
fmull
das
js
sub
push
pop
das
mov
inc
jno
fbld
dec
cmpl
xlat
sti
pushf
addr16
arpl
mov
jg
xchg
add
inc
cmpsb
leave
xor
rcr
add
pop
or
call
lods
ret
xchg
cmp
cmp
adc
mov
cmp
add
ds
dec
inc
cmp
mov
icebp
nop
arpl
cld
and
pop
mov
loopne
icebp
inc
fcompl
sbb
movsl
fs
jnp
loop
xor
jb
push
pop
inc
sbb
aam
arpl
adc
xchg
ret
mov
int
sbb
clc
mov
sbb
dec
xlat
sarb
sub
cmc
lock
les
in
push
loopne
outsb
mov
mov
pop
jle
sahf
mov
jecxz
das
call
mov
lret
mov
dec
cmp
jecxz
jecxz
in
pop
stc
daa
xchg
into
imul
scas
sbb
adc
jge
leave
jle
mov
sub
mov
mov
repnz
inc
out
loop
inc
ss
pop
movsb
jge
xchg
push
ret
sub
add
fadd
cmc
ja
mov
das
xchg
dec
popa
fs
add
hlt
clc
fsubrp
xor
xchg
mov
inc
cltd
jns
sub
sub
xchg
fisubl
lods
addr16
mov
mov
cmpsb
jne
xchg
push
jns
add
cli
lret
data16
flds
mov
mov
push
iret
dec
ljmp
pop
xorb
in
fsubrs
inc
shrl
aaa
and
icebp
jmp
into
out
pop
push
into
xchg
xchg
mov
jo
dec
push
jg
movsl
push
push
incb
mov
pop
into
cwtl
test
xor
mov
nop
les
or
pop
out
jns
mov
sbb
or
mov
adcl
dec
inc
clc
mov
shl
ret
adc
jge
rcrb
adc
jmp
clc
fsts
nopl
in
addr16
pop
popf
fldt
lahf
nop
dec
jns
loopne
inc
jmp
jmp
fistps
sbb
and
pop
xchg
orl
xchg
dec
xor
and
sub
out
rcll
int
adc
in
out
or
pop
movsl
lods
loopne
xor
dec
out
mov
out
test
ds
inc
add
repz
mov
cltd
movsb
adc
dec
adc
insl
mov
out
cmc
in
xchg
add
lods
mov
loopne
movsb
sub
lcall
stc
fsubrl
dec
cs
mov
mov
shrl
lcall
repnz
cmpsb
dec
add
cmc
cltd
mov
stos
jnp
mov
cmpsl
sbbb
mov
jge
and
and
push
lods
xor
and
cs
pop
jge
les
outsb
xchg
stos
lods
jae
mov
sahf
and
fwait
push
mov
aad
jns
icebp
out
lcall
jge
pop
cmp
roll
cltd
adc
insb
xchg
out
mov
dec
daa
pop
lock
add
aam
movsl
lea
call
cmp
call
bound
inc
sbb
sub
rep
ljmp
addr16
fwait
mov
clc
pop
in
sub
and
jge
dec
push
mov
mov
shr
lret
xchg
pushf
mov
inc
mov
out
in
insb
mov
mov
shlb
or
arpl
fldt
in
subb
nop
mov
jmp
js
mov
push
mov
push
and
enter
loop
testb
push
into
test
repnz
and
xor
ret
push
lds
and
xlat
cs
stos
xchg
lcall
dec
in
lret
pop
bnd
addr16
sahf
lock
clc
addr16
into
fsubrl
jge
mov
or
sahf
mov
jns
cmp
lahf
ret
jp
popa
sbbl
std
movsl
add
rorb
je
xchg
aaa
out
sbb
and
sub
xchg
push
out
call
loope
fsubrs
push
in
push
rcrl
mov
jb,pt
lock
sbb
and
aaa
or
push
hlt
int
iret
sub
jne
cmp
sbb
fisubrs
mov
cmp
pop
xchg
stos
or
sbb
ds
jo
cmp
adc
sub
inc
rcl
xchg
imul
ret
cmpsb
stc
dec
scas
setae
inc
jle
jnp
outsl
dec
fs
push
xor
sbb
adc
mov
cmc
mov
push
pop
repz
fsubl
mov
loope
ss
pop
and
dec
inc
call
sub
movb
sub
push
flds
int
es
mov
or
stos
arpl
icebp
cmp
jmp
and
jbe
sub
jns
cmp
data16
mov
out
dec
lock
or
and
jecxz
adc
jge
xor
inc
add
int
inc
repnz
mov
lahf
pop
cmp
adc
or
xchg
pop
xor
mov
cmc
and
cmp
lret
shl
int3
inc
xchg
fs
jmp
subl
dec
repz
or
rolb
loopne
xchg
adc
mov
sbb
push
lahf
test
jae
aaa
iret
xchg
inc
jle
scas
pop
sub
dec
ja
loopne
imul
inc
std
add
push
jo
call
xor
mov
or
xchg
in
fsubrl
mov
ds
stos
aas
dec
xchg
aad
cmp
mov
sahf
mov
cmp
fildll
pushf
sub
loope
mull
fistpl
push
xchg
push
in
cmp
pop
inc
jle
add
into
cvttps2pi
mov
jnp
mov
xor
adc
dec
out
sbb
dec
mov
test
inc
lds
pop
cmp
subb
inc
sub
cmp
xlat
xchg
xlat
cmp
mov
addl
lahf
enter
mov
add
repz
adc
mov
imul
daa
cld
incl
fwait
jae
cli
jae
mov
mov
pusha
les
iret
mov
addr16
stos
insl
adc
xchg
lods
mov
xchg
sbb
in
mov
and
jns
gs
mov
lea
add
pop
popa
lret
sbb
mov
pop
push
lret
sbb
jl
fs
data16
insb
lds
xchg
inc
in
adc
sbb
xorb
fcomps
jp
in
dec
push
out
adc
dec
sbb
flds
aaa
inc
scas
mov
adc
dec
nop
mov
add
es
lods
adc
mov
fdivrl
outsb
xor
push
test
jbe
ret
ljmp
fisttpl
jo
pop
dec
mov
mov
rclb
cmp
ds
or
sub
add
jb
sbb
sbb
mov
mov
lahf
shll
std
int3
pop
or
xchg
aad
sets
popf
add
mov
or
xchg
adc
daa
shlb
loope
push
scas
cmp
add
bnd
xor
das
pop
lahf
xor
sbb
cmp
sub
test
fsubrs
jmp
pop
jns
adc
sbb
xor
cmp
mov
cmp
testl
sbb
stos
cmp
inc
mov
clc
pop
in
gs
inc
cwtl
lods
mov
jp
inc
loopne
inc
or
adc
out
das
inc
add
mov
cmp
js
iret
divb
mov
popf
jmp
mov
xchg
cwtl
add
mov
and
adc
mov
jnp
pop
dec
and
push
pop
sub
js
lods
addr16
add
test
or
movsl
lock
sub
adc
xor
testl
sub
cltd
icebp
xchg
fcoml
mov
mov
push
dec
jl
fwait
push
pop
mov
imul
inc
loop
mov
mov
xor
jmp
adc
mov
lea
enter
push
shrb
test
movsb
inc
mov
xchg
lcall
stc
leave
or
add
leave
xchg
mov
jno
push
jbe
mov
xchg
fsts
mov
pop
and
outsl
sti
mov
push
adc
cmpsl
aas
adc
fwait
dec
dec
lret
in
cld
mov
test
cli
repnz
mov
andl
push
icebp
shll
call
add
int3
add
sbb
push
fcoms
mov
xor
xor
sbb
mov
mov
lret
in
jg
pop
dec
int
ss
pop
mov
add
mov
lods
out
mov
roll
leave
cmc
cmp
push
adc
ljmp
mov
sbb
addr16
repz
ffreep
xor
mov
push
jge
add
mov
or
test
out
fimull
pop
jmp
mov
mov
pusha
test
aad
cmpsb
or
or
xchg
ljmp
dec
icebp
push
add
jp
repnz
push
cmpsl
mov
and
sar
cmp
lds
mov
rcrb
imul
xchg
mov
push
inc
jno
je
pop
test
cli
out
dec
mov
sub
xlat
stos
mov
test
sbb
lahf
push
cmp
cmpsb
pop
std
fsubrs
lret
cmp
sub
xor
mov
dec
sbb
mov
sti
xchg
sbb
lods
sub
pop
jne
jge
sbb
sub
bnd
sub
imul
xchg
xchg
test
sub
cmpsl
shlb
imul
pop
fs
fsubrs
outsl
sahf
jl
enter
test
push
enter
enter
movsl
or
aad
mov
clc
sti
push
arpl
push
pop
idivl
push
movsb
push
icebp
out
sub
adc
mov
mov
aad
mov
popa
jle
lret
test
test
dec
and
adc
or
xchg
pop
cmp
push
stc
dec
movsl
xor
jb
jmp
rorb
lret
in
pusha
and
insb
adc
shrl
loope
sbb
je
xor
mov
push
nop
mov
outsl
xchg
sarl
js
ss
mov
ds
mov
leave
aaa
loope
movsb
loope
icebp
jb
jae
mov
adc
test
mov
mov
cmp
add
std
and
in
xchg
xor
mov
add
sti
into
repnz
outsl
or
xchg
pusha
xlat
gs
add
jns
into
lock
adc
adc
pop
mov
push
outsl
inc
into
mov
mov
xor
addr16
int
fs
add
stc
adc
subl
xchg
aad
push
bound
mov
adcl
push
ljmp
lds
in
jmp
sub
dec
jo
loope
pop
pop
in
jge
mov
sbb
push
xchg
movsb
pusha
mov
cltd
adc
jge
and
in
out
pop
int3
push
enter
out
dec
or
dec
sub
push
push
fcomps
push
fidivrs
dec
jecxz
lea
jmp
cmpsl
cmp
adc
lcall
popf
lods
test
jmp
cmpsl
loope
mov
add
subl
xor
xor
and
sbbb
adc
inc
aas
add
faddp
je
rcl
dec
cmp
xor
ljmp
aam
jns
push
das
out
popf
leave
sti
out
movsb
ljmp
mov
jae
mov
mov
xor
jle,pt
daa
adc
mov
leave
popa
sahf
or
mov
cltd
pop
xor
lea
rcrl
jl
aas
fnsave
sahf
and
loopne
out
inc
cli
mov
imul
pushf
pop
nop/reserved
mov
jg
out
xchg
adcb
les
gs
out
or
cmc
vunpcklps
imul
inc
loop
subl
dec
ja
adc
pop
aam
sbb
lcall
jb
outsl
or
lods
neg
aad
jg
fimull
cmp
push
scas
test
daa
daa
inc
rcr
das
or
int
aaa
sub
mov
cs
add
in
and
bound
insl
cli
clc
dec
sub
stc
inc
shrl
lahf
jo
sbb
popa
cltd
jle
push
inc
movl
and
lcall
mov
jae
es
lret
pop
lea
loop
mov
loopne
stc
push
scas
push
js
pop
out
hlt
mov
xchg
in
repz
cmpb
fsts
sbb
lahf
cs
xchg
push
test
cmp
arpl
gs
dec
jg
rorl
pusha
push
fidivl
xchg
or
jle
mov
fwait
dec
movsb
inc
test
sbb
fisubs
mov
xchg
jae
lcall
stc
mov
xchg
xorl
repnz
hlt
dec
mov
sub
or
mov
movsl
mov
stc
shll
mov
mov
lock
mov
xchg
mov
out
int
sub
mov
adc
mov
sbb
jecxz
popf
xchg
adc
sub
adc
in
adc
and
adc
cmp
push
or
lcall
jecxz
push
or
andl
dec
fwait
clc
fsub
repz
jno
cli
cltd
sti
inc
stos
scas
pop
jl
xchg
rcrb
cs
cli
pop
inc
fcmovu
loopne
sti
repnz
xor
ud1
notb
std
testb
sub
lret
mov
mov
lret
add
clc
push
leave
sbb
sti
shll
std
xchg
js
out
pop
sub
sub
xchg
mov
mov
lret
cmp
test
dec
or
test
or
pop
xor
pop
adc
sub
fsubrl
sbb
shl
cwtl
inc
pop
cmpsb
loope
movsb
inc
mov
shll
andl
xchg
aaa
jae
or
mov
fists
into
pop
jo
cwtl
mov
movsl
sub
adcb
dec
inc
sbb
adc
lret
pop
invd
add
ljmp
fnstsw
sbb
imulb
pop
mov
sub
lcall
sbb
imul
pushf
test
sbbb
mov
lea
je
mov
pop
pop
mov
dec
inc
or
jo
repz
insl
call
sub
jbe
in
and
inc
add
jae
pop
sbb
pop
call
dec
jo
xor
adc
mov
sbb
dec
xor
outsl
xor
jg
xlat
or
sbb
daa
in
jnp
imul
mov
add
into
aas
xor
adc
std
repnz
adc
adc
xor
xor
mov
mov
adc
mov
je
in
mov
cmp
pop
mov
movsb
loopne
or
or
pop
pop
aas
xchg
xchg
jae
inc
jecxz
adc
pop
mov
adc
and
test
repnz
and
cltd
push
dec
and
and
movsl
in
pop
dec
push
out
adc
push
shl
adc
mov
push
lret
test
jne
pop
cwtl
add
lock
jo
and
rcr
adc
mov
or
jb
jae
mov
jl
sbbb
mov
pop
les
push
adc
dec
insl
sub
push
les
cmp
rolb
pop
adc
push
cld
insb
or
sub
mov
aas
adc
pop
sub
filds
add
outsl
arpl
je
inc
imul
inc
insb
or
insl
mov
jl
cltd
fstpl
insl
push
jmp
pop
mov
fs
sbb
lcall
jle
cmpsb
jae
add
cld
call
or
push
std
lods
cwtl
pusha
nop
inc
jae
aam
fsubs
stos
mov
hlt
mov
mov
mov
cmp
pop
daa
and
or
push
mov
popa
lahf
loop
out
mov
xor
xchg
mov
loop
sub
outsl
pop
mov
std
xchg
add
jle
repz
push
dec
pop
fistpl
xor
clc
xor
mov
xchg
mov
test
sbb
push
mov
in
lods
pop
sbb
dec
stc
nop
push
xlat
test
or
mov
mov
xchg
xchg
pop
dec
ja
inc
dec
loope
jp
or
mov
or
imul
push
add
lret
bound
and
mov
rorb
dec
xor
xchg
or
icebp
mov
int3
mov
fwait
or
mov
or
aam
add
push
pop
jmp
enter
add
movsl
orb
jo
dec
enter
pop
js
xor
pop
ss
or
sub
pop
out
pusha
stos
das
or
xchg
mov
mov
mov
imul
xlat
xchg
push
daa
jne
shll
loopne
fwait
mov
out
jmp
cmp
stc
out
cli
xchg
or
push
pop
cmpb
push
stos
pop
or
dec
int3
repz
sbb
int3
outsb
jnp
int3
lret
imul
mov
das
std
add
lock
addb
and
imul
dec
loope
mov
and
sub
fnstcw
and
leave
cmp
xchg
xor
arpl
jle
cmpb
adc
mov
inc
inc
dec
xchg
loope
inc
jmp
out
out
xchg
repz
adc
jp
mov
pop
stos
adc
gs
fsub
into
add
adc
cmp
orl
jb
mov
data16
jns
or
movsb
in
hlt
lret
sbb
ja
xchg
jmp
sbb
popa
sbb
nop
mov
xor
dec
cld
sahf
frstor
sub
cs
sub
push
int3
pop
pop
sbb
xchg
bound
cs
mov
xchg
or
pusha
jo
mov
jno
jl
sar
jns
inc
and
pop
ret
paddb
jo
xchg
pop
and
sub
adc
xchg
jl
inc
xchg
popf
rorl
out
sbb
scas
inc
out
std
mov
xorb
mov
dec
subb
push
je
xchg
lret
dec
shrb
jbe
popl
stos
hlt
mov
dec
jmp
jbe
xchg
lods
adcb
pusha
int
mov
ljmp
ret
dec
arpl
sahf
cmc
lcall
repz
mov
mov
cs
add
cmp
pushf
lahf
lods
sar
int3
in
and
scas
add
aaa
mov
pop
or
xchg
pop
inc
push
or
movb
gs
or
xchg
or
idivl
shr
orb
addb
push
add
jg
scas
scas
inc
inc
push
roll
shrl
sbb
sub
loope
xchg
bound
inc
sahf
scas
push
push
mov
outsb
dec
xor
mov
mov
xchg
pop
lret
sub
add
test
cwtl
fstl
leave
rcrb
cltd
data16
imul
jmp
fdivrl
sbb
dec
jp
test
push
jb
add
addl
imul
mov
push
lret
pop
ret
sti
cmpsb
pop
in
test
lret
fcmovnb
repnz
push
inc
and
sti
xchg
shrl
mov
mov
dec
movsb
testb
push
andb
into
fbstp
mov
push
je
out
dec
adc
or
sub
mov
adc
scas
into
int
test
sbb
inc
sub
outsb
xchg
and
xchg
dec
pop
fld
ja
test
cmpsb
lcall
add
in
inc
mov
mov
in
es
xor
pop
repnz
insl
test
mov
jecxz
dec
or
outsl
mov
or
fmul
cli
rol
mov
sar
mov
xchg
inc
push
add
adc
xlat
add
scas
adc
xchg
sbb
add
in
push
pop
mov
es
xor
adc
jge
inc
testl
jge
mov
std
call
xchg
test
aaa
mov
cmp
lea
mov
sub
dec
jnp
mulb
filds
lock
mov
test
adc
popf
jbe
test
call
stc
mov
imul
test
mov
mov
or
daa
test
loopne
pop
movsb
loop
call
push
movsb
pop
dec
and
lds
stos
mov
fldenv
or
pop
and
mov
mov
sbb
mov
dec
mov
repz
cwtl
dec
sti
ret
fwait
sub
and
insl
imul
das
in
test
sub
lahf
and
cli
push
inc
dec
xchg
mov
dec
pop
aad
pushf
jl
imul
dec
cs
or
loope
iret
pop
stc
cmpsb
es
mov
fisubrl
pop
insb
sub
int
cli
adcl
xor
dec
push
and
xor
jmp
rclb
jle
out
jnp
test
cs
pop
pop
aas
jo
andb
push
imul
dec
pop
into
cmpsb
stos
jo
and
add
push
fldt
and
inc
mov
cmpsb
fsubs
jo
addb
pop
nop
pop
inc
int3
sbb
nop
outsb
dec
adc
mov
or
mov
cli
fldt
imul
test
xor
mov
cmp
out
pusha
pop
jmp
sbb
aad
pop
sub
clc
hlt
or
js
mov
push
and
mov
subl
bswap
jl
rcrb
sub
push
push
in
adc
mov
stos
shll
sub
mov
cld
or
xor
xor
jne
cmpsb
mov
sub
dec
dec
mov
rclb
movntq
scas
dec
outsl
hlt
mov
jae
movsl
repz
loopne
mov
enter
ret
pop
std
int
cli
dec
cmp
call
jae
lods
shll
stos
pop
and
jnp
and
and
pop
cmp
pushf
cs
lods
sbb
shlb
out
pop
lahf
movl
inc
xchg
mov
repnz
ffreep
mov
cmc
jge
jns
mov
aaa
mov
loop
xor
or
pop
fsts
sbb
pusha
inc
inc
ja
jle
add
dec
out
cltd
mov
test
rolb
pop
je
fwait
jp
stos
aaa
ss
sahf
frstor
xor
addr16
pop
inc
jbe
sbb
inc
jns
sub
out
into
jbe
xchg
xchg
push
push
push
in
stos
iret
pop
pushf
adc
fisttpll
dec
gs
jecxz
cltd
sub
test
fildl
mov
jge
aad
rorl
xor
lret
loope
icebp
push
icebp
fdivrp
pop
mov
not
inc
sahf
shrl
xchg
dec
jl
fwait
sub
mov
lret
lret
mov
lods
cmp
cmp
int3
mov
and
push
inc
sub
jb
lret
aas
bound
pop
scas
mov
adc
test
jle
imul
add
or
outsb
sub
fildl
sbbl
movsb
sbb
cmp
icebp
test
sub
mov
sbb
sbbl
dec
push
loop
or
das
and
aad
dec
pop
or
mov
aaa
and
fs
sarb
inc
mov
aas
cmpsb
imul
mov
je
or
nop
aad
sbb
sub
push
ror
shl
fwait
mov
adc
fwait
cld
fisubrl
pop
dec
add
xchg
pop
xor
push
movsl
shll
subb
mov
pop
add
ror
push
test
scas
dec
xchg
pop
add
dec
xchg
and
push
ss
sub
and
mov
daa
mov
jns
in
fwait
mov
adc
sbb
je
ja
loop
and
test
decb
push
or
hlt
fimull
and
pop
pop
sub
xchg
fs
lret
add
dec
fdivl
clc
divb
jmp
loop
inc
add
add
not
out
cmp
inc
ja
test
mov
xchg
test
push
mov
in
xor
sub
push
jno
cmpsb
outsl
push
sbb
shrl
outsl
testb
testb
pop
jge
in
das
mov
and
or
push
pop
add
cmp
outsl
fisubl
add
cld
addr16
and
out
faddl
pop
cltd
push
xor
test
sbb
pop
jo
xor
cld
loop
sub
pop
mov
loop
mulb
repz
bound
and
stc
dec
push
cmc
adc
repz
jle
mov
imul
dec
xor
adc
xor
add
sub
add
xchg
clc
fldenv
mov
je
xchg
stc
jmp
mov
mov
lret
shll
pop
push
ljmp
loopne
fcomip
add
add
and
mov
ljmp
jecxz
popa
insb
lahf
bound
leave
inc
push
mov
outsb
cmpl
lea
jg
push
sbb
insb
mov
jbe
pop
lret
cmp
stos
lds
push
dec
aam
shll
push
xor
inc
xorb
dec
fbld
lock
push
rcl
xchg
in
xlat
sub
ret
push
test
adc
sbb
pop
pop
int3
dec
cmp
out
les
inc
mov
and
push
add
into
adc
sbb
jne
jmp
pop
push
lock
push
mov
into
enter
aam
pushf
and
jnp
aad
dec
xchg
jg
dec
jge
repz
je
fs
aaa
mov
dec
insl
orb
jge
mov
add
std
cld
xchg
inc
mov
mov
push
nop
add
test
es
jbe
je
xchg
test
rolb
sub
out
jle
add
mov
xlat
inc
nop
cld
add
mov
add
inc
lea
inc
cmp
notl
inc
notb
mov
jae
ret
pop
xor
rcrb
jle
mov
lock
sbb
lret
jmp
sbb
cmp
fidivrl
sti
call
sbbl
mov
into
push
mov
stos
add
pop
adc
pop
call
ds
jg
imul
fxam
mov
pop
xor
in
lcall
pushf
loop
sahf
fadds
les
stc
stc
xor
fiadds
push
push
cmc
ljmp
mov
dec
push
mov
outsl
mov
xchg
cmpl
movsl
jbe
sbb
pop
sub
and
mov
push
out
repnz
mov
scas
or
mov
pop
cmp
int
pushf
out
lfs
mov
push
inc
ret
sbb
adcb
ficomps
pusha
sub
setg
dec
xchg
xor
pop
jb
adc
mov
xor
xchg
jge
fidivl
es
data16
int3
je
sbbb
movb
fnop
push
stos
in
pushf
adc
mov
ret
cli
dec
mov
call
movsl
push
in
and
xor
jae
sti
and
incb
lcall
lahf
push
inc
push
movsl
movsl
xor
iret
mov
ja
inc
add
cmpsl
data16
jo
push
imul
mov
inc
push
mull
mov
fyl2x
sub
xchg
mov
inc
inc
aas
fisttpll
cmpsb
dec
int
jns
dec
lret
jno
fisubs
cmp
jp
repz
fs
mov
mov
xlat
xchg
divb
cmp
mov
inc
cmpsl
pusha
shlb
xlat
xor
dec
es
clc
inc
dec
xchg
xlat
rorl
ljmp
lds
mov
pop
mov
sbb
lds
jecxz
icebp
sahf
xor
scas
jp
dec
insl
xor
lods
jbe
clc
jnp
push
jne
fldcw
push
dec
divb
ss
xchg
push
adc
push
push
icebp
inc
mov
push
stos
fs
jg
xchg
mov
xor
sti
adc
test
fisubl
xchg
add
pushf
inc
mov
roll
push
lods
fidivrs
imul
popa
mov
divb
subb
pop
loope
sar
stc
mov
int3
movsl
add
xchg
cmp
cmp
dec
call
orb
fsubrs
push
jbe
push
lret
sti
stos
sub
fcomi
add
jecxz
loopne
stos
or
sub
leave
fidivs
xor
xor
ds
pop
xchg
add
jno
inc
andl
ror
outsb
neg
dec
icebp
jp
mov
mov
shrb
and
test
sbb
push
insb
pop
jle
iret
adc
das
mov
push
or
into
test
pop
pop
ljmp
nop
dec
ffree
sbb
out
jo
adc
mov
loopne
repnz
mov
dec
mov
pop
cmc
sub
pop
or
cmp
push
cwtl
pushf
ret
xchg
adc
cmpsl
push
in
push
mov
or
lahf
cmc
sbb
neg
rclb
stos
ja
idivl
mov
push
push
clc
jl
and
xlat
loop
and
addr16
insl
into
push
mov
test
cld
add
xorl
stos
jmp
fbld
test
xchg
pop
lcall
jb
shrb
pop
adc
mov
pop
fsts
sti
shl
cmp
mov
mov
pop
mov
mov
cmp
dec
test
xchg
int3
lods
int
lods
jbe
cmp
enter
and
fcom
pop
adc
loopne
dec
and
les
or
scas
cmc
nop
inc
mov
hlt
in
iret
fwait
xchg
xor
dec
int
ss
dec
stc
push
sub
test
sbb
cmp
in
xor
jbe
jl
insb
dec
xlat
sbb
iret
cli
fcmovnu
cwtl
jp
push
push
jg
in
lea
mov
stc
hlt
sbb
outsl
and
fucomp
jne
pop
in
xchg
sahf
and
ret
popa
inc
and
sti
jo
push
sbb
cmc
and
push
xchg
jecxz
mov
or
lock
popa
loopne
les
icebp
sbb
add
std
sti
in
xchg
lahf
lods
pop
xchg
sbb
cs
cmc
out
dec
jmp
adcb
or
inc
inc
cmpl
xchg
out
mov
xorl
je
xchg
sbb
and
jb
mov
jge
or
scas
and
sub
and
mov
outsl
test
pop
jmp
mov
jl
mov
sbb
imul
das
lods
push
push
adc
mov
or
sbb
lcall
xor
leave
aad
jge
test
push
cmp
jnp
rclb
xorb
sti
ficoms
mov
mov
and
mov
push
cmc
dec
hlt
mov
mov
das
popa
lea
xor
push
xor
sahf
out
out
push
xchg
movsl
mov
mov
rorb
sub
lahf
cwtl
or
cmpsl
push
lea
lea
in
push
xor
pop
aas
js
push
out
cmpb
push
pextrw
mov
push
std
mov
push
insl
or
mov
sub
in
inc
scas
into
nop
daa
ds
inc
add
test
pop
bswap
mov
sbb
rcr
dec
out
dec
out
dec
pop
cld
shlb
dec
dec
cmc
sahf
xchg
dec
leave
notb
sbb
arpl
push
rcl
cmp
xchg
iretw
and
and
xor
mov
mov
gs
xchg
imul
movsl
outsl
daa
fiadds
adc
xchg
mov
mov
sub
repnz
add
loopne
jbe
fsts
fimuls
xor
aad
stos
fwait
cmpsl
fisubs
push
stc
lahf
insb
dec
xchg
ja
dec
arpl
dec
pop
adc
xor
pop
lods
lcall
jmp
ret
in
add
loop
sahf
mov
jmp
mov
pop
sub
or
loop
mov
mov
addr16
ror
adc
push
enter
and
lret
ficoml
movsb
push
fsubrl
and
into
mov
jl
jb
and
xchg
and
sbb
jo
movb
mov
daa
testl
arpl
pop
mov
and
jle
mov
sahf
lock
xchg
mov
sub
iret
rcll
mov
shrl
inc
sbb
sub
daa
or
repnz
gs
mov
pop
nop
and
adc
mov
hlt
push
add
sbb
adc
rcr
mov
or
insb
xchg
sahf
imul
jge
push
rcr
cld
mov
ss
je
xchg
lret
iret
mov
mov
enter
fisubs
inc
lods
loope
loop
insl
addr16
jo
aaa
and
ds
xor
rcrl
xchg
xor
or
fwait
lret
and
xchg
pop
rclb
shrl
lods
push
in
jge
cmpsl
test
lahf
jl
push
jne
stos
lret
js
sub
bound
mov
cs
pop
sub
inc
ret
inc
fnstenv
jns
nop
adc
sbb
ja
add
test
push
rclb
or
orl
add
inc
fs
stos
dec
movsl
add
jnp
push
out
dec
cmp
mov
into
sub
mov
sarb
jno
popf
sub
mov
mov
in
lds
inc
mov
stc
aam
mov
cmpsb
inc
inc
repz
inc
cmpsl
or
sub
inc
cmp
jecxz
dec
mov
xchg
repz
mov
loopne
cltd
pop
sbbb
push
xorl
and
dec
mov
test
pusha
and
pop
shlb
mov
xchg
cmp
jbe
xchg
testl
fbstp
push
cmovns
sahf
mov
cli
gs
adc
push
and
push
pop
aad
xor
orl
jbe
imul
sbb
sbb
ficompl
lds
test
adc
out
ficoms
xchg
jb
lcall
jle
xchg
dec
jmp
hlt
mov
add
pop
mov
adc
ret
adc
push
adc
xchg
or
sbb
push
das
out
and
je
mov
int
mov
cli
mov
mov
push
mov
xchg
mov
cmp
mov
call
shl
inc
inc
mov
daa
bound
push
dec
fdivr
test
dec
imul
sbb
out
das
sarl
imul
cmpsb
xchg
mov
push
push
pop
cmc
pusha
std
ja
rcll
jnp
insb
jmp
xchg
leave
testl
out
mov
loopne
negl
sbb
repnz
arpl
mov
movsl
mov
pushf
clc
les
fistps
cld
dec
cmp
and
je
xor
sarb
adc
xchg
fidivs
cli
lods
leave
nop
mov
mov
mov
pop
sbb
insb
xchg
sub
in
adc
fwait
icebp
pushf
add
icebp
adc
push
fisttps
inc
movsb
and
xor
icebp
addr16
mov
int
imul
xchg
xchg
jle
xor
adc
xor
dec
push
lea
mov
sti
icebp
enter
adc
rorb
mov
lea
cli
mov
imul
shrb
dec
push
and
inc
andb
push
scas
imul
out
call
dec
or
push
add
testl
in
push
repnz
dec
or
sub
into
std
std
mov
xor
inc
negl
mov
push
ret
leave
cmc
mov
adc
imul
cmc
rolb
pop
lahf
add
sbb
test
adc
aad
adc
imul
push
bound
adc
sub
push
push
rorl
push
mov
lods
insb
fwait
sbb
mov
or
ror
imul
mov
xchg
in
pop
or
adc
mov
hlt
cmp
adc
mov
imul
push
inc
rorb
push
out
aam
movsb
mov
xor
sbb
jg
into
push
push
stc
jmp
and
push
adc
imul
xor
stos
out
jp
xor
jns
mov
cmp
and
test
mov
sub
test
out
adc
adc
out
sub
clc
je
hlt
cltd
sbb
shlb
cmpsl
cmpsl
addr16
sub
fdivrl
cmpsb
pop
fucomi
les
or
ljmp
xor
mov
lock
outsb
fimull
pop
xor
mov
fisttpll
mov
shll
mov
stc
cmp
push
ds
in
push
or
inc
inc
sub
pop
pop
mov
jmp
sub
ror
and
jbe
add
ficompl
jnp
mov
add
push
andl
rolb
fisubl
repz
out
lock
fwait
mov
repnz
lock
mov
ss
push
and
loopne
add
mov
int
das
or
xor
cmp
fmull
sbb
lret
xor
popf
out
loop
mov
sbb
lds
mov
push
aas
or
jo
das
xchg
xor
dec
push
aad
sti
call
call
and
and
bound
mov
and
mov
movsl
outsb
dec
or
jmp
shrb
mov
arpl
iret
sbb
mov
lret
jo
dec
cmpsb
repz
stos
mov
inc
rol
push
pop
subl
inc
movsl
mov
in
fisubs
outsl
out
pop
dec
and
std
push
push
cmpsb
insb
in
and
shll
jb
add
fistpl
pushf
test
ret
stc
xor
loop
and
test
ficoms
ds
ret
faddl
inc
adc
cmc
sbb
jae
mov
mov
jae
sbb
adc
inc
adc
ret
insl
sub
ret
aas
jbe
mov
or
xchg
inc
imul
xchg
movsb
js
mov
mov
fs
dec
mov
dec
mov
dec
sarb
repnz
mov
std
and
popf
icebp
insl
into
adc
ja
xchg
rcl
inc
popa
lahf
pop
mov
sbb
filds
in
pop
cmc
lahf
mov
pop
fs
addr16
sbb
sub
or
add
cld
jle
data16
inc
scas
ficomps
fisttpll
cmpsl
arpl
sbb
dec
cld
or
in
add
cmp
fstpt
push
aam
adc
cwtl
hlt
aaa
jbe
push
leave
insb
lcall
dec
addr16
dec
sub
sub
cwtl
gs
call
pop
cmp
movsb
add
stos
aam
neg
in
sub
ja
xor
mov
jno
or
das
xchg
popl
daa
out
xchg
jp
in
shl
sahf
push
lahf
test
mov
ja
mulb
jnp
pop
jo
jb
push
cmp
mov
pop
jmp
push
mov
xor
rolb
jb
or
inc
mov
pop
shl
sub
jne
stos
jo
rcl
sub
call
pop
add
daa
pop
out
cld
mov
int
sub
lcall
jecxz
inc
xchg
sub
mov
repz
imul
inc
jg
mov
js
add
mov
or
pop
jae
adc
movsl
jno
leave
hlt
mov
fistl
daa
daa
orb
lods
fldcw
lret
rcll
jo
pop
lret
sub
sbb
pop
cmp
inc
inc
mov
test
or
push
lods
cmp
inc
outsl
sbb
icebp
lds
into
stos
push
push
fadd
or
mov
pop
xor
std
mov
or
leave
movsb
in
imul
xor
mov
in
add
hlt
fwait
inc
cs
mov
mov
cmc
push
xchg
es
ljmp
and
out
dec
push
sti
jecxz
cmp
ret
jge
push
mov
or
push
imul
into
xchg
movsb
pop
aam
jl
fcompl
out
pop
jnp
pop
ljmp
scas
loopne
daa
cmp
sbb
int3
xchg
dec
repz
cwtl
pop
jbe
add
dec
jne
cmp
mov
and
xchg
adc
ds
pop
pop
dec
xchg
lock
test
mov
cmp
jae
fstps
lea
ret
mov
or
adc
or
sbb
cmp
aas
out
int
jns
mov
daa
je
mov
adc
aam
jbe
mov
cld
jecxz
fwait
enter
mov
out
mov
jle
mov
out
insb
xor
sar
mov
cld
dec
dec
ja
pop
ret
mov
ds
jmp
add
pushf
cld
out
sbbb
fmull
pop
imul
add
xchg
in
insl
pushf
mov
add
rcl
loop
push
xchg
or
xor
push
fldcw
ficomps
rorb
enter
iret
shrb
inc
insb
jge
loopne
and
xchg
add
enter
pusha
lods
mov
stc
inc
dec
dec
inc
xchg
pop
inc
adc
roll
pop
push
aad
enter
or
outsb
xor
add
dec
xchg
stos
mov
inc
xchg
fcom
cs
sbb
push
mov
sub
imulb
js
cmp
addl
into
pop
dec
dec
arpl
ret
or
leave
vmread
cmc
and
loopne
dec
mov
rorl
jae
subb
or
sti
and
fcomi
pop
mov
lods
in
aad
in
mov
lahf
ljmp
in
lret
and
mov
jae
inc
cmp
cltd
sub
xorb
xchg
add
xchg
roll
jecxz
cmp
jo
pushf
out
adc
fildl
sbbl
or
inc
fcmovbe
outsl
dec
inc
jg
jbe
ret
orb
mov
pop
mov
mov
pop
mov
ljmp
sar
fldenv
jnp
pusha
mov
push
pop
test
jmp
pop
push
or
inc
into
movl
xor
fucomp
in
inc
daa
mov
hlt
hlt
push
mov
fsubp
sarb
push
adc
mov
sub
gs
fadd
aas
push
jle
es
sub
data16
fmuls
stos
mov
fiaddl
push
fcompl
inc
cmp
sub
sub
cwtl
fcomps
rorl
jne
xchg
push
aam
pushf
push
test
lock
enter
imul
cmp
je
push
inc
lret
les
xlat
pop
jge
and
or
add
add
mov
fisttps
sahf
pop
dec
jo
dec
cmp
ret
bound
rcrl
add
std
jbe
xchg
ljmp
or
add
and
pusha
dec
and
jp
testl
sbb
dec
gs
mov
push
test
jno
push
mov
xchg
jae
pushf
pusha
out
mov
test
imul
insb
or
lret
daa
xchg
ja
jge
dec
jmp
jae
les
arpl
cmp
cmp
clc
adc
lret
je
dec
add
rcll
sbb
ds
nop
pop
ja
or
mov
dec
mov
inc
repnz
decl
clc
xchg
gs
add
jbe
adc
in
and
lret
xchg
push
cmp
ret
push
adcl
dec
movsl
inc
pop
mov
jo
cltd
cmp
movnti
inc
adcb
push
sub
add
push
xor
in
jp
mov
mov
outsl
cmpsb
ud1
cmp
xchg
fidivrs
xor
sub
add
in
jmp
sub
pushf
mov
pop
popa
stos
xor
js
shr
je
dec
adc
cmp
test
mov
lods
loope
xchg
sub
div
movsl
xchg
lcall
mov
push
in
repz
mov
sbb
mov
mov
test
xchg
lcall
ret
stos
add
add
sub
lcall
xor
lods
aaa
cli
subl
dec
pusha
push
sbb
mov
rorb
sbb
movsl
xlat
adc
sub
mov
cwtl
faddl
outsl
push
push
mov
inc
dec
mov
je
jno
mov
mov
int
push
dec
fbstp
dec
xor
adc
mov
scas
mulb
loopne
pop
scas
pop
adc
jl
cmp
into
push
sti
mov
lret
push
aaa
jns
sub
mov
mov
pusha
mov
and
ret
push
gs
mov
mov
repz
test
adc
add
addb
mov
add
inc
mov
mov
mov
push
movsb
xchg
in
jg
pop
ja
lahf
popf
or
or
fsub
jns
pop
orb
imul
and
adcb
push
cmpsb
cmp
sbb
cmc
push
loopne
adc
idivl
push
mov
dec
cmp
mov
sub
clc
xor
pushf
adc
sbb
mov
and
mov
lfs
cli
leave
dec
mov
xlat
stos
es
les
ss
mov
jmp
push
loop
and
sbb
clc
fs
jno
jnp
fwait
cld
add
add
div
test
mov
addr16
push
scas
push
mov
movsb
outsb
loopne
shr
adc
sbb
stos
jle
cmc
fs
aas
mov
add
cli
cmp
inc
inc
mov
xchg
push
cmp
and
bound
jge
pop
mov
test
cltd
loopne
loop
jbe
movsl
xchg
fisubs
xchg
jmp
nop
test
cmpsl
adc
es
and
jae
icebp
xchg
pusha
popa
call
js
movsb
lahf
insb
loope
sti
cmp
icebp
and
pop
data16
call
jl
stc
arpl
push
mov
xor
inc
mov
out
sarl
andl
jns
sub
jnp
add
cwtl
mov
adc
adc
cmc
cmc
mov
xor
xor
inc
pop
sbb
aad
dec
push
jns
inc
lds
ret
mov
insl
hlt
out
dec
scas
popa
pop
push
mov
push
cmp
jnp
les
notb
mov
stos
inc
mov
in
xor
pop
jnp
adc
enter
aad
loopne
cmp
push
and
inc
mov
fldl
cs
addb
shll
out
sti
ficoml
jge
call
pushf
in
aad
dec
mov
xchg
pop
xchg
clc
lds
rolb
mov
inc
push
xchg
roll
jae
jbe
jl
es
and
xchg
cmpsb
xor
rcll
jbe
push
pop
sbb
scas
cmp
lret
mov
push
neg
dec
dec
scas
stos
mov
fcomip
jl
sub
or
adc
push
outsb
scas
fldenv
push
ret
pxor
psubw
jnp
cmpsl
push
cmp
in
mov
pop
dec
cmp
fsubr
subb
in
add
cmp
cmc
sub
mov
ret
push
dec
bound
cmp
xchg
pop
test
dec
xor
sub
fdivl
pop
mov
loopne
es
fs
and
inc
mov
bnd
push
cmp
push
dec
jns
out
lods
sub
cmp
push
pop
push
fisttps
lea
sbb
mov
fstps
xchg
xor
push
pop
call
in
xchg
xor
mov
aas
xor
scas
xchg
jge
cs
imul
sub
nop
ficompl
mov
pcmpeqw
lcall
test
dec
mov
dec
imul
xor
mov
lcall
jmp
adc
push
leave
fcomps
mov
and
in
outsb
pop
fsubs
xlat
fimull
xor
aam
mov
sti
pop
loopne
mov
adc
sub
jo
shrl
in
pop
pop
and
cmpsl
ror
adc
sti
into
inc
enter
fstpt
sub
push
xchg
mov
sbb
shll
repz
jno
addr16
pop
inc
fisubs
lea
sti
cmp
jmp
jle
xchg
push
leave
mov
xchg
rorb
shlb
outsl
sahf
and
cmp
stos
dec
inc
push
ja
js
mov
and
inc
pop
add
out
mov
push
mov
mov
je
adc
xor
loopne
cmc
sbb
sahf
test
lds
lcall
fsubrl
andl
xor
popa
data16
stos
pop
icebp
and
or
add
shl
sub
jbe
push
sbb
mov
iret
push
pop
or
lds
lods
imul
sbb
sti
jns
xchg
cmpsl
repnz
adc
xchg
jl
xor
insb
call
xchg
mov
jne
cmp
ret
xor
xor
fbstp
sub
and
clc
cli
push
add
popf
ss
xchg
push
or
sbb
or
in
sub
aas
enter
adc
hlt
cmp
cld
out
xor
divl
jg
or
je
orb
test
inc
push
addr16
mov
shrl
cltd
sti
int3
lock
mov
jnp
gs
mov
popf
mov
mov
mov
xchg
pop
leave
fisubrl
xor
scas
push
test
data16
jl
imul
cs
mov
call
jle
ret
add
shr
lret
cli
fadd
xlat
xchg
gs
add
cmp
popa
mov
lea
je
pop
insl
add
scas
mov
adc
mov
shrl
add
xchg
cld
sti
popf
mov
mov
punpcklwd
jg
pop
fnstsw
in
int3
inc
stc
aas
daa
loop
inc
sysret
gs
xchg
roll
jl
incl
fldt
cmpsb
sub
arpl
shl
jle
jl
xor
pop
fcmovnb
popa
mov
xchg
sahf
test
mov
das
add
push
lods
dec
push
in
imul
pushf
mov
aas
in
adc
jns
jge
cmp
fs
jecxz
push
aam
ss
test
ret
aas
sub
mov
inc
lahf
arpl
cmp
loopne
lret
bound
pop
inc
jne
test
xchg
xor
jno
ret
cltd
cmpsb
mov
add
lods
push
add
imul
faddl
ljmp
cmpsb
sub
insb
test
sbb
add
bound
mov
xchg
pop
add
call
les
jbe
test
sahf
mov
sbb
mov
pop
fwait
shr
bound
lahf
pop
pop
jne
aad
leave
jbe
pop
fnstsw
xchg
sbb
ja
or
mov
iret
outsl
test
fmul
pop
add
sbb
and
mov
in
mov
mov
inc
fwait
jge
add
or
stos
or
popf
jle
and
jg
stos
jo
dec
leave
jl
cmpsb
mov
in
call
sahf
lods
push
clc
js
jnp
dec
das
push
daa
dec
xor
es
inc
lods
inc
xchg
ss
lods
cld
cmc
arpl
ret
popa
mov
pop
jl
shlb
xor
popf
lcall
or
mov
inc
and
sbb
mov
sbb
in
adc
dec
lcall
sub
mov
cld
cltd
push
rclb
popf
lods
lds
and
jge
mov
xchg
stos
or
xor
ret
cltd
or
in
jo,pt
popa
dec
mov
sti
and
push
push
leave
cmpsb
mov
pushf
in
movsb
aaa
or
jbe
push
test
sbb
or
cli
xor
int3
lock
jmp
cmp
mov
in
cltd
add
add
mov
mov
int
sbb
or
scas
mov
mov
pop
lret
pop
cmpsl
scas
xor
xchg
xchg
push
into
stos
push
shlb
push
add
inc
insl
shl
xchg
sub
lock
movsl
rclb
call
or
sbb
adc
dec
std
cld
shll
test
orl
sub
in
or
in
mov
or
pop
pushf
or
xchg
jne
xchg
aam
les
mov
mul
jbe
sbb
push
and
mov
mov
mov
test
sub
jns
xchg
lret
fcoms
test
fmulp
mov
mov
xchg
add
xchg
pop
xchg
sti
adc
xchg
iret
mov
push
push
rcrb
add
sub
dec
pushf
enter
sahf
jnp
adc
bound
clc
adc
shll
addr16
or
aad
lcall
inc
into
sub
mov
out
int
mov
outsb
je
inc
insb
outsl
bound
push
arpl
das
xchg
add
shlb
les
sbb
dec
sub
ficomps
mov
icebp
call
add
outsb
out
jg
cmpb
int3
or
stos
rcrb
sub
sbb
adc
mov
inc
dec
push
sub
test
in
jo
in
cmp
xchg
mov
xchg
outsb
adc
mov
add
leave
pop
inc
in
xor
dec
pextrw
js
jle
mov
add
xor
sbb
std
sub
sbb
testl
ficompl
leave
es
cmp
out
xlat
aaa
cli
subl
pop
test
cwtl
xor
pop
sbb
mov
clc
lret
pop
jmp
dec
movsl
outsl
icebp
inc
and
and
push
imul
inc
sub
or
and
scas
mov
jns
push
hlt
test
inc
mov
mov
mov
scas
adc
scas
ror
std
in
add
lcall
das
xlat
ss
pop
icebp
inc
sbb
cmc
fmull
js
adc
pop
orb
pusha
add
add
pop
xor
cli
cmp
jae
je
imul
or
ss
out
add
cmp
push
sbb
sbb
jnp
dec
and
xchg
jnp
sbb
outsl
xlat
test
xchg
mov
lret
sbb
and
cmc
fchs
jg
inc
add
mov
xor
jbe
aas
je
xchg
xchg
rclb
call
out
or
cmp
push
mulb
or
push
push
xor
jns
fcomps
or
call
inc
mov
imul
ss
jmp
mov
mov
push
ror
iret
mov
test
les
mov
xchg
repnz
call
mov
jo
fstl
cld
xchg
cmc
mov
dec
popa
ficomps
sar
in
or
mov
enter
subl
out
test
push
add
out
jbe
mov
or
leave
or
stos
fs
rcrb
inc
jge
mov
and
xabort
pushl
mov
inc
add
test
pop
movsl
aas
test
ret
xor
jge
or
testl
or
and
imul
nop
mov
jg
hlt
pop
sbb
loopne
mov
xor
mov
jmp
test
cmpsb
sahf
jmp
xchg
xlat
cmpsb
xchg
rol
jno
push
cmp
jb
in
or
int
mov
xchg
mov
jp
jecxz
ds
jne
xchg
jbe
or
lock
sub
test
pop
movl
std
cs
mov
inc
add
les
mov
addl
and
xchg
pop
mov
sbbl
lods
adcb
in
fnstenv
inc
xchg
fldl
bswap
jle
jmp
jae
xor
nop
int3
push
add
orl
fbld
xor
cmc
sub
push
jge
fidivs
or
ljmp
lods
jbe
inc
test
in
popf
add
xchg
adc
popf
cmc
stc
sub
sahf
dec
sbb
loop
ljmp
pushl
scas
shr
popf
cmc
and
cld
push
aad
pusha
push
and
clc
std
movswl
dec
cmp
xchg
mov
jecxz
jmp
mov
sub
jle
mov
mov
xchg
aas
stc
dec
addr16
push
jne
in
shll
inc
mov
xor
xchg
scas
jp
inc
mov
mov
mov
cmpsb
in
cmpsl
and
jb
out
test
popf
lods
xor
push
xchg
jnp
inc
mov
rcrb
push
pop
aam
dec
rcl
stos
lock
frstor
stos
mulb
call
push
jbe
sub
jne
or
lret
mov
loop
call
scas
xchg
mov
shl
sbb
loopne
cwtl
inc
xor
mov
lods
push
pop
dec
push
data16
sbb
xchg
sub
cmp
sub
xchg
lahf
sbb
mov
jb
cmp
fbld
xchg
push
sahf
xchg
and
dec
adc
repz
or
adc
inc
mov
sarb
fistps
add
xchg
cmp
das
pop
mov
jecxz
sbb
push
push
repz
insb
dec
nop
stos
scas
sbb
or
jg
mov
dec
xchg
pop
mov
bound
fsts
sub
add
jmp
jg
inc
xlat
idivb
mov
out
sbb
inc
lret
test
lcall
sub
mov
xor
ret
adc
jg
mov
fwait
iret
adc
mov
pop
scas
pusha
lods
pop
sti
int3
push
xor
push
aas
xchg
mov
movsb
mov
jmp
xchg
inc
push
adc
mov
cmpsl
cmp
inc
and
gs
push
dec
cmp
cmp
jg
repnz
adc
out
clc
shll
aas
jo
hlt
adc
lock
xor
mov
add
cmc
and
std
or
cld
mov
mov
aas
and
movsb
jg
aad
movsb
bound
fbld
and
in
xchg
sbb
loopne
and
fimuls
int3
lret
push
sarb
arpl
push
xchg
movsb
push
lock
insl
sub
inc
lcall
fcmovne
add
add
ljmp
ds
sub
sub
cltd
push
ds
inc
sbb
adc
ficompl
stos
in
cmpsl
jb
or
popl
sbb
mov
rcrl
cs
jno
push
ljmp
daa
pop
pop
cmp
sahf
push
push
mov
push
stc
pop
nop
mov
ljmp
jo
es
out
lods
and
dec
pop
cmp
ss
fsubrs
cli
mov
push
mov
insl
mov
rcrl
push
cltd
xor
shrb
sbb
mov
cmpl
loope
addr16
shll
pop
dec
pop
mov
inc
das
ljmp
sub
dec
sahf
aad
cmp
pusha
mov
mov
pop
mov
mov
xchg
jae
jbe
pop
subb
inc
jbe
popf
shrl
or
sbb
push
es
xchg
mov
rcrb
or
lahf
jmp
dec
pop
mov
mov
js
jmp
icebp
insl
mov
out
push
fs
lods
add
test
push
adc
jge
xor
dec
push
or
add
or
mov
cmp
test
out
mov
es
aad
or
jle
mov
pop
aam
sub
jle
ds
stos
loop
es
bound
push
push
rolb
inc
xor
in
cmp
enter
sub
scas
fiadds
into
dec
push
lret
lahf
je
ret
in
mov
sti
and
cld
bound
jb
pop
movsb
mov
pop
push
call
add
test
xor
push
mov
fstps
and
jg
sub
mov
test
bound
xlat
and
test
loopne
cmp
adc
pop
xlat
mov
mov
dec
push
push
test
cld
mov
stos
mov
in
lock
push
rclb
notb
sbb
or
icebp
inc
pop
ret
sbb
unpckhps
mov
out
jle
int3
dec
aaa
cmc
push
xor
inc
and
sub
and
pop
xchg
aaa
mov
dec
out
cmp
inc
js
ret
xchg
push
hlt
movsl
lds
cmpsl
jge
inc
scas
jne
xlat
mov
pop
jecxz
shl
mov
insl
in
jp
mov
mov
cmc
mov
mov
in
dec
lret
pop
xor
lret
sbb
into
xor
push
repnz
sbb
outsl
sbb
pop
fwait
enter
and
lds
dec
mov
xor
pushl
mov
loop
sub
jno
xor
and
ljmp
dec
test
popf
dec
xor
mov
mov
inc
popa
pop
mov
xor
xor
mov
leave
jl
mov
ss
and
iret
sarb
inc
popf
int
mov
addr16
or
nop
push
mov
aad
lds
imul
xchg
or
pop
xchg
cmc
push
insl
loopne
mov
subb
push
mov
daa
jp
sti
cmp
movsl
pop
push
iret
ret
add
push
mov
xchg
sbb
sub
nop
je
mov
jbe
orl
adc
sub
pop
inc
shr
stc
jmp
add
inc
dec
lret
jle
nop
xchg
inc
inc
fcmovnb
sbb
jnp
lds
repnz
xor
test
and
xchg
push
in
cmp
xchg
je
popa
js
adc
test
jmp
aad
loop
rclb
inc
addr16
repz
popa
test
xchg
test
xchg
add
ss
or
into
out
inc
push
test
push
mov
cmp
jbe
cld
and
mov
sbb
inc
test
mov
cmp
popf
cmp
cmp
fbld
out
add
arpl
jmp
mov
push
add
cmp
gs
jg
fistpl
jnp
xor
cmp
repnz
addl
mov
inc
arpl
loope
fcmovnu
das
inc
call
xchg
insb
jl
push
pop
out
jb
lret
stos
stos
out
xlat
ret
int
lcall
gs
mov
imul
push
mov
dec
xchg
outsb
int3
bsr
rorl
add
inc
cwtl
js
inc
and
nop
xchg
push
shlb
xchg
push
pop
outsb
rcrl
fistps
lods
lahf
popf
push
mov
jae
mov
filds
ret
ss
ja
test
movsl
push
out
xor
cmp
push
xchg
cwtl
adcl
int3
enter
inc
mov
jne
inc
lods
rolb
int3
mov
push
add
insb
test
cmc
xchg
xlat
xor
mov
imul
hlt
sahf
mov
jecxz
clc
xchg
sub
dec
mov
inc
pop
int3
hlt
mov
fidivl
cwtl
xchg
dec
jmp
dec
test
into
mov
test
add
stos
sbb
adc
loope
jbe
adc
lcall
mov
leave
pushf
ljmp
push
loopne
rorb
popa
test
mov
jbe
fbld
dec
repnz
adc
jne
lahf
push
jg
inc
sbb
lea
cmp
fldl
add
mov
dec
pusha
dec
xor
xor
add
repnz
cwtl
push
sti
int
push
jg
sbb
cli
xor
xchg
shll
scas
add
lret
sar
inc
add
lea
iret
imul
pushf
seto
insb
dec
iret
mov
push
gs
pop
insl
jne
fsubs
cmpxchg
push
cwtl
mov
xchg
dec
push
push
cwtl
mov
dec
cmpsl
leave
orb
jmp
sbb
sub
lret
pop
xchg
xor
push
in
hlt
lahf
jno
or
cmpsb
push
inc
and
jmp
aas
shrl
mov
add
lret
adcl
adc
shlb
cmpsl
xabort
popf
inc
leave
mov
outsb
test
or
cmc
rcr
shll
aam
and
lret
jg
dec
adc
inc
jns
inc
sbb
test
mov
fists
push
inc
imul
das
jb
shl
into
call
sbb
fimull
jg
mov
testl
mov
ss
mov
stos
ficomps
clc
mov
je
xor
call
xchg
hlt
jle
popl
adc
fsubr
fiaddl
adc
push
pop
in
mov
popa
popf
call
and
mov
rclb
jg
lea
or
enterw
icebp
push
ljmp
int3
or
mov
xchg
lahf
das
push
popf
add
adc
out
inc
xlat
hlt
xor
cmc
mov
push
orb
sbb
es
ds
scas
je
popf
inc
insb
jle
pop
mov
mov
jnp
iret
fstps
in
inc
mov
mov
pusha
or
hlt
mov
sub
sti
into
fwait
jecxz
mov
into
add
inc
lea
mov
add
gs
sbb
scas
push
mov
inc
pop
mov
and
lahf
rorb
xor
xchg
mov
imul
das
out
push
mov
in
in
sbb
loopne
sub
cs
mov
or
bound
repz
in
sbb
aam
shll
mov
or
cli
aam
mov
push
push
sub
out
jo
or
xor
dec
sub
call
mov
sti
xor
fcompl
aad
in
test
cld
stc
rorb
aaa
xor
pop
xchg
inc
popa
push
std
std
lods
add
xchg
push
cmpl
sbbb
or
push
loop
call
test
ja
sbb
xor
fistpll
popf
or
inc
mov
out
rcrl
pop
mov
fiaddl
call
push
dec
cmp
sub
out
cmp
sbb
xchg
js
mov
pop
fsts
movsl
push
add
les
dec
repz
push
push
sub
xchg
aas
dec
mov
and
ljmp
outsl
mov
mov
and
xchg
sbb
fbld
insb
in
into
outsl
pushl
pop
pop
or
inc
mov
xchg
in
sbb
pop
and
stc
loopne
sbb
pushf
cmpsl
push
stos
push
shr
inc
sbb
xor
leave
adc
mov
jns
mov
ljmp
rorb
mov
jae
in
cmp
mov
repnz
mov
and
jae
outsb
mov
jno
in
xor
jno
adc
aas
in
xor
mov
mov
pop
mov
push
cmc
or
and
outsb
lcall
mov
imul
sbb
mov
in
or
xchg
out
xor
pop
cwtl
int3
lcall
mov
add
mov
das
xchg
sbb
out
xor
scas
jg
mov
add
jp
push
inc
mov
pop
ds
fs
dec
mov
xchg
daa
popf
fiaddl
movsb
clc
mov
loope
push
cmc
lods
xor
ret
xor
xchg
and
sub
movsb
inc
call
xchg
inc
xchg
push
fptan
test
pop
das
repz
cmp
test
call
cmp
gs
fstl
popa
jne
out
pop
lea
mov
fistpll
adc
hlt
lock
jl
xor
dec
mov
mov
jb
jb
cmp
add
or
fcomps
int3
mov
jl
and
pop
pop
sbb
inc
jge
adc
push
sub
xchg
inc
lret
cmp
fidivrl
lds
shll
inc
ret
jo
outsl
fidivrl
dec
nop
mov
stc
cs
xchg
adc
inc
arpl
sarb
pop
repnz
and
imul
out
jne
loope
ret
sub
sbb
cmpsl
in
lea
insb
sub
loope
arpl
hlt
xchg
inc
stc
popa
pop
inc
sub
inc
vmulsd
cwtl
ss
pop
bswap
lods
add
lock
cld
cmpsb
sbb
data16
aad
jge
cld
in
cmp
xor
lods
mov
xchg
negb
loopne
add
adc
mov
popf
add
pop
pop
mov
out
leave
mov
test
ret
or
xchg
outsl
movb
sbb
scas
inc
shl
stos
adcl
flds
dec
icebp
add
cmp
scas
popa
test
cmpsl
int3
pop
inc
xor
in
jge
movsl
cmp
cli
push
mov
inc
out
inc
cli
dec
out
jl
ljmp
add
push
sahf
fnsave
call
mov
out
test
add
leave
cld
adc
sbb
insl
push
mov
mov
cwtl
fs
cmp
les
add
stc
dec
nop
cmp
aad
mov
test
shll
pop
sub
jmp
test
idivl
in
inc
negb
es
test
sub
push
or
shlb
inc
int
adc
roll
cmovbe
mov
mov
cmp
aad
into
push
jp
out
push
inc
dec
or
add
bound
enter
leave
mov
inc
xchg
xchg
hlt
cmp
nop
dec
xor
loopne
sub
cpuid
mov
cmp
xchg
cmp
push
add
inc
fwait
add
adc
rcrl
or
cli
vmovsd
das
stos
sti
adc
sub
idiv
mov
mov
in
pop
adc
or
add
or
test
test
or
addl
hlt
mov
add
ljmp
lods
cli
aad
in
mov
mov
mov
mov
test
cmpsb
cmp
push
sahf
pop
dec
xor
lahf
movsb
xlat
jae
lret
mov
push
add
scas
shll
sbb
pushf
push
cmc
jmp
fsub
mulb
jecxz
add
pop
outsl
ret
dec
adcl
inc
and
fcos
sbb
mov
xchg
sbbl
mov
fimuls
movsb
cs
cmpb
xor
sub
js
dec
das
sarl
call
stos
imulb
push
ret
push
xchg
std
jns
push
scas
int3
shrl
push
je
enter
mov
clc
xchg
popa
adc
inc
mov
inc
test
sbb
aas
mov
mov
add
mov
jo
dec
or
jge
lods
mov
sbb
jmp
jge
xlat
inc
sbb
jmp
clc
push
cmc
xor
fiadds
sbbl
shl
sub
mov
mov
out
rorl
test
mov
imul
adc
arpl
mov
mov
enter
push
pop
inc
sbb
jge
int
or
or
lea
je
lahf
imul
aas
daa
ja
imul
cs
es
push
inc
and
xchg
f2xm1
icebp
ds
mov
push
mov
sub
add
mov
gs
cmp
jbe
inc
ret
popf
jb
movsl
cmp
sbb
rcll
cmp
push
mov
jne
mov
test
gs
or
clc
aam
mov
popa
cmp
fisubrs
mov
addb
lcall
inc
in
adc
repz
sub
fwait
xchg
and
jns
hlt
dec
stos
leave
mov
jle
es
aam
push
inc
js
pop
fs
pop
and
imul
xchg
sub
mov
add
pop
ret
xor
mov
pushf
sub
shrl
push
dec
pop
mov
mov
jae
lods
mov
lods
xchg
js
dec
pusha
aam
add
negb
lcall
xchg
lods
xchg
arpl
lcall
jne
mov
jge
stos
sub
pop
xchg
add
cwtl
cmpl
xchg
outsb
mov
sbb
stos
mov
push
mov
add
xchg
or
inc
pop
mov
test
push
aaa
push
pop
xchg
lret
aaa
cmovle
mov
js
clc
repz
pushf
add
pop
xchg
movsl
sbb
arpl
add
push
add
hlt
push
dec
cltd
pop
pop
adc
cli
cmp
xchg
jns
add
mov
iret
or
daa
cwtl
imul
dec
and
mov
hlt
push
xchg
cli
cmp
jmp
ret
cmc
pop
jo
ret
jbe
mov
jb
jbe
lret
fs
loope
into
lock
dec
push
mov
sahf
lods
scas
xchg
les
in
dec
mov
in
loope
push
scas
pop
clc
xchg
dec
mov
and
adc
insl
outsl
xchg
out
pop
rcrl
pop
mov
xchg
ret
lret
aam
and
and
shll
mov
jecxz
mov
dec
mov
mov
je
lret
ret
shlb
pop
popa
mov
int3
aam
aad
sbb
or
int
arpl
ficomps
jl
stc
imul
or
cld
out
clc
mov
pop
lods
rcrb
cs
inc
das
rcrb
mov
dec
mov
sub
ds
test
jo
popa
adc
sarb
adc
lcall
sbb
cld
inc
mov
stos
fldcw
cmc
mov
adc
ret
mov
out
add
fs
pop
mov
push
add
sub
gs
sbb
inc
push
aad
je
cmpsl
jns
sbb
and
in
sub
jnp
les
xorl
jge
push
mulb
sub
jp
and
dec
and
mov
subl
xor
test
aad
xor
push
adcb
sub
mov
dec
out
in
jno
jne
add
div
hlt
jmp
movsb
out
xchg
shrl
stc
subb
push
jg
mov
push
fistps
scas
outsl
xor
xorl
nop
fdivr
hlt
jo
push
dec
pop
into
fcmovbe
int
addr16
mov
adc
leave
mov
sbb
roll
ss
or
push
es
cwtl
adc
mov
loopne
and
imul
pop
jnp
jbe
mov
push
add
sbb
pop
sahf
pop
xor
aam
test
mov
mov
mov
sahf
pusha
scas
stc
shrl
lea
xor
js
jno
lret
icebp
pop
and
sub
pop
cwtl
xchg
push
sbb
mov
movsl
ss
cmp
add
scas
dec
nop
jnp
imul
stos
xchg
imul
jl
pop
mov
xor
push
in
js
xor
lods
push
popa
nop
cmc
dec
inc
arpl
pop
and
frstor
out
jb
out
shlb
jecxz
push
inc
lret
inc
mov
rcl
sub
pop
shrl
push
mov
jg
xchg
xchg
rol
push
lds
aad
arpl
xchg
popf
cmp
cld
call
jbe
repz
in
add
xor
outsl
sub
pop
out
mov
repnz
fimull
shl
das
or
lahf
xor
cmp
adc
sahf
in
dec
jmp
mov
je
jp
push
test
cwtl
loop
push
ficompl
imul
enter
call
fisttpll
push
dec
in
cmpsl
pop
add
mov
pop
fistpll
push
andl
jmp
in
mov
mov
cmpsb
mov
sub
pop
jecxz
mov
cmp
out
test
shl
pop
leave
and
data16
sub
mov
xlat
inc
add
mov
dec
imul
es
add
mov
cld
add
pop
inc
shll
popa
ror
cli
push
and
cmp
mov
dec
pop
nop
stos
push
shrb
and
pusha
lea
outsb
dec
xorb
and
xor
push
loop
mov
sub
jecxz
xor
cld
cmc
outsl
mov
enter
fcmovnb
ss
cmpsl
shlb
imulb
xchg
jl
incl
in
int
fdivs
aad
scas
and
adc
push
ret
pop
and
adc
and
jmp
sub
xchg
inc
scas
cltd
mov
rolb
test
lcall
fnsave
int
faddl
int3
lcall
mov
push
push
dec
and
xchg
adcl
aad
sub
mov
jb
lods
xor
mov
sub
mov
inc
lods
pop
mov
leave
mov
std
xchg
cmp
dec
out
ret
mov
cmp
lret
pop
mov
and
dec
dec
lock
cli
mov
sub
xchg
or
pop
inc
js
or
mov
and
cmp
xchg
sub
xor
mov
jbe
outsl
jbe
adc
lret
and
fadds
rcll
mov
imul
jmp
and
js
out
fdivrl
and
ret
sbb
int
and
and
rclb
cmp
sti
mov
ss
mov
mov
pop
scas
push
push
mov
mov
sbb
pop
jp
mov
pop
cmp
fdivrl
lods
jp
dec
jmp
xchg
shlb
dec
dec
dec
mov
lods
test
and
popf
xor
in
or
daa
or
test
or
mov
adc
sti
dec
leave
dec
mov
ret
scas
mov
jns
mov
lret
or
xacquire
std
or
xor
clc
add
ficoml
cmpsb
pusha
sub
dec
xor
shl
add
inc
mov
jge
lahf
fdiv
aad
out
les
mov
das
or
lcall
or
arpl
sbb
jo
add
fbstp
aas
repz
mov
aaa
dec
in
xchg
movsb
mov
dec
fsubrl
loope
xchg
roll
inc
rcl
andl
cmp
out
loopne
add
test
dec
mov
ret
adc
fidivrs
imul
std
fwait
dec
sub
mov
pop
push
addr16
int3
movsb
dec
xchg
cmp
in
repz
dec
dec
and
add
mov
xorl
mov
mov
int3
push
xchg
mov
mov
or
lahf
cwtl
fldenv
rcrl
mov
pop
pop
cmpsb
bound
int3
stos
fldcw
and
lea
ja
pop
shlb
jp
outsb
data16
push
xor
cmpsb
cmp
in
mov
jnp
xor
add
jl
sub
pop
loop
pop
jle
shrl
sti
or
popf
into
xor
lock
lahf
aam
push
ja
adc
push
mov
pop
cli
inc
sahf
adcl
out
mov
mov
sub
jmp
mov
dec
cmp
jle
iret
jmp
sub
je
dec
cltd
ret
loopne
or
lret
cmpsb
sbb
adc
out
sarl
in
push
xchg
push
xchg
mov
fldt
pop
rolb
int
adc
ret
lods
jmp
ljmp
rolb
loop
dec
add
and
lcall
xchg
sub
fdivrp
stos
test
jae
jae
sub
mov
hlt
mov
andb
es
adc
xchg
inc
aad
in
push
mov
loop
add
stos
jnp
aaa
outsb
lcall
inc
xor
daa
xchg
jecxz
lcall
movsl
test
insb
outsl
pusha
adc
add
aaa
or
dec
test
xchg
in
pop
bound
imul
addb
or
pop
mov
push
dec
int3
stc
mov
add
xchg
pop
dec
cwtl
and
push
daa
inc
fstpl
mov
sbb
pop
push
jne
pop
cld
mov
andb
inc
fldl
inc
fwait
dec
stos
sub
cmpsl
inc
pusha
in
pusha
lahf
andb
clc
in
pop
aam
and
inc
ja
sbb
call
insl
leave
ficoms
inc
inc
push
fwait
orl
lahf
jge
sahf
pop
push
cmc
adc
dec
ret
cmp
in
ljmp
mov
call
lds
daa
or
das
cmp
mov
sbb
and
push
dec
les
out
xchg
and
dec
adc
sti
gs
cli
sbb
and
mov
stos
daa
mov
jnp
cmpsb
adc
sbb
lds
test
out
push
sub
imul
jmp
fdivs
jb
test
push
dec
jo
lods
xor
out
rcl
mov
icebp
sub
repnz
in
fisubl
movsb
push
hlt
and
adc
notb
iret
addr16
aaa
insb
push
jl
xchg
fnstenv
scas
xchg
pop
xchg
pop
lock
lret
xchg
lods
shrb
mov
mov
dec
into
xchg
push
movsl
idivl
mov
and
in
adc
xchg
and
or
jne
push
leave
ficoml
int3
icebp
lcall
adc
jecxz
call
lret
xlat
mov
mov
dec
sbb
mov
sbb
sub
rolb
xchg
mov
push
mov
mov
es
pop
add
fs
outsl
cmp
sub
jnp
push
out
cltd
cmc
xchg
sbb
jge
mov
mov
or
sbb
adc
jmp
fcoms
push
nop
sar
pushf
push
ljmp
lret
test
ds
bound
lods
mov
adc
sbb
and
cld
in
jle
imul
mov
and
fisttpl
sbb
in
lahf
xlat
inc
sub
mov
inc
mov
scas
loop
cmp
mov
in
push
sub
jns
mov
mov
out
ja
cmp
jg
xor
pop
adc
jmp
lahf
stos
sbb
pop
lret
hlt
dec
adc
nop
and
push
pop
sub
cmpsb
lret
sub
cmpsl
pushf
cmp
push
pop
andl
mov
cmp
popa
sbb
sbb
mov
jnp
cmp
out
inc
mov
sahf
aas
lahf
push
dec
insb
mov
ficomps
iret
ret
pop
fcomip
inc
xchg
mov
in
or
sahf
jae
xor
sbb
dec
xchg
or
pop
push
scas
cwtl
mov
popf
out
and
cmp
nop
jo
xchg
cli
pop
ds
out
scas
inc
xor
xchg
mov
mov
pop
ss
sub
fcompl
cmp
inc
mov
xlat
xchg
shrl
adc
dec
pop
addr16
insl
sub
mov
inc
test
jle
enter
es
pop
outsb
sbb
adc
and
jne
cld
adc
dec
lret
les
jp
stc
mov
and
jo
add
sbb
jecxz
mov
push
jp
cmp
xlat
es
enter
cwtl
mov
mov
out
xor
stc
mov
hlt
and
push
daa
xchg
shrb
iret
pop
mov
add
inc
sbb
es
divb
jl
lods
in
in
inc
sahf
movsl
mov
xor
mov
push
nop
xor
inc
xor
cmp
sbb
mov
insb
fstpl
add
dec
bound
repz
push
cmp
idivl
pop
pop
jb
daa
sarl
push
mov
dec
into
out
stos
test
xor
sub
in
push
sub
rcll
popf
adc
mov
fsubrs
jnp
data16
mov
mov
inc
mov
shrl
pop
xor
das
int3
cmp
nop
scas
iret
insb
and
insl
lea
aas
fistl
gs
mov
cld
lret
push
jl
pushf
jl
in
xor
add
lahf
cli
es
popa
or
test
mov
push
jnp
flds
and
pop
fprem
inc
or
lret
out
push
int
push
cmp
ds
dec
push
repz
mov
addl
lcall
cmp
ja
shlb
scas
in
xor
push
cmp
mov
xlat
imull
adc
mov
jae
jp,pt
xchg
dec
data16
imul
mov
daa
add
out
and
pop
pop
fwait
and
push
xchg
xchg
in
mov
rorb
sbb
in
pop
out
mov
stos
push
ja
cmp
pop
movsl
push
lcall
cs
push
dec
loope
lock
push
xor
fwait
xor
or
lea
xchg
scas
sahf
les
data16
fcompl
inc
sbb
dec
xor
inc
outsl
sahf
jmp
push
mov
enter
xchg
jnp
in
pushf
mov
aam
hlt
pop
xchg
xor
adc
sub
mov
js
hlt
mov
sbbl
push
sbb
movb
aam
adc
push
shl
or
mulb
xor
xchg
leave
ret
stos
aas
aas
inc
je
mov
sbb
xchg
test
in
es
ja
outsl
in
mov
jo
lock
xchg
enter
cmp
out
and
pop
mov
pusha
insl
cmp
arpl
sbb
pop
jp
jp
xchg
push
ja,pn
push
sti
dec
add
jge
sbb
pop
mov
das
sbb
inc
out
add
fistps
out
or
inc
shlb
pushl
lods
in
dec
andb
test
push
jne
push
sahf
adc
dec
mulb
out
dec
into
shr
loop
push
dec
dec
or
fbstp
fiadds
in
mov
fstpt
dec
mov
rcl
adc
cmp
push
mov
jmp
in
popa
insb
inc
adc
jmp
push
push
add
data16
add
test
enter
fwait
cwtl
out
fidivl
lret
fiadds
sbb
mov
sub
mov
inc
incl
dec
jmp
mov
shrl
cwtl
lds
mov
andb
dec
aas
add
push
sbb
add
in
xchg
out
jno
nop
inc
sub
jbe
dec
mov
push
mov
ret
jno
cmpb
leave
jnp
jnp
dec
loopne
jbe
mov
jns
or
push
mov
mov
inc
mov
hlt
dec
mov
imul
aam
mov
pop
popa
cmp
sbb
gs
imul
mov
mov
arpl
js
jno
mov
sbb
adc
push
add
cmc
xchg
pop
jnp
jns
jae
mov
xchg
popf
push
in
jns
test
sbb
inc
pop
aaa
fdivrs
into
rorb
mov
mov
addr16
dec
mov
push
addr16
jb
sbb
pop
sbb
mov
xchg
cmp
popf
rclb
fs
push
push
xchg
outsl
or
ss
fcoms
adc
xor
orl
inc
cmp
aam
adc
je
movsb
inc
mov
xchg
out
mov
inc
ret
pop
mov
xchg
fldt
mov
adc
xchg
fistpl
and
xchg
test
adcb
decl
mov
and
mov
dec
les
dec
cmpsb
lret
pop
enter
je
mov
adc
or
push
ficoms
or
popf
xchg
push
scas
ja
mov
or
jl
mov
mov
iret
js
mov
and
dec
sub
pop
andl
push
fs
or
inc
stos
mov
cmp
not
or
mov
xor
mov
popa
dec
sub
and
jb
xor
and
inc
imul
aas
push
int
insl
mov
adc
push
mov
scas
fidivrs
push
repnz
addl
pop
leave
addr16
sub
and
sar
iret
int3
mov
xchg
or
add
inc
push
popa
lea
cmc
je
mov
lods
sti
inc
hlt
sarb
mov
jl
mov
js
ljmp
mov
aam
mov
loopne
sub
cmc
ljmp
sub
inc
dec
outsl
sbb
add
scas
mov
jg
add
mov
mov
loop
out
ret
pop
shrb
iret
pop
pop
push
mov
cwtl
in
cmp
fiadds
add
xchg
and
push
pop
repz
fsts
movsb
mov
shrb
cli
gs
mov
mov
and
pop
xor
or
cmp
sbb
add
mov
popf
mov
ss
sub
jl
sub
xchg
aam
movsl
nop
sub
push
jae
shll
xor
and
pop
repnz
xor
repz
pusha
shrb
sub
mov
ret
pushf
in
push
jo
jo
pushf
sbb
pop
lret
js
xor
inc
pop
or
lds
fmull
imul
clc
mov
aad
outsb
inc
shll
outsl
inc
jl
sub
repnz
push
push
out
jb
cmp
shll
cmpsb
pop
sub
add
push
mov
jne
inc
inc
sub
mov
leave
add
xchg
in
pop
jp
mov
adc
mov
fldt
xor
sbb
or
xchg
jnp
out
mov
addr16
xchg
neg
mov
add
ss
jle
lcall
inc
mov
cmp
repnz
out
cmp
repz
arpl
jae
jne
mov
xchg
cltd
stc
adc
sbb
cmc
repnz
fcoms
notl
subl
and
push
ret
sub
mov
mov
xchg
test
js
sbb
je
sub
clc
push
cwtl
inc
pushf
and
cmp
pop
out
arpl
xchg
pcmpeqb
xchg
xchg
shlb
adc
jno
jle
shrb
dec
bound
dec
cltd
ss
adc
sbb
pop
repz
pop
lahf
insb
lods
popa
test
ja
and
cli
sbb
in
movsb
mov
xchg
pop
mov
or
paddsw
pop
jne
imul
test
cmp
ss
mov
add
sub
nop
pusha
lcall
ret
repnz
adc
or
stos
arpl
jecxz
push
sbb
jg
rolb
popa
jo
xor
cs
hlt
mov
div
add
cltd
or
inc
inc
inc
mov
jbe
adc
inc
jne
xchg
pop
mov
into
outsb
mov
addr16
dec
jo
sbb
xchg
jle
sahf
in
rolb
jne
aam
sbb
xor
fsubl
jmp
xlat
sbb
lret
and
mov
std
and
shl
jl
sub
sahf
idivl
and
adc
pop
mov
popf
nop
mov
fadd
mov
sti
fs
mov
xor
ret
inc
xchg
aaa
cltd
dec
aaa
es
push
jecxz
aaa
lods
lcall
ret
js
mov
pop
scas
fldl
aaa
or
pushf
sbb
cld
lcall
cld
jmp
xlat
lcall
xor
sbbb
into
sti
aad
in
sahf
lods
daa
outsl
in
ret
int3
and
scas
in
or
or
and
dec
and
outsl
sar
mov
jae
dec
js
scas
out
lahf
jnp
rol
cld
shll
push
push
out
mov
aad
outsl
imul
aad
pop
inc
and
scas
lcall
and
xchg
mov
arpl
add
sahf
xlat
aas
ja
adc
das
dec
push
lret
dec
xchg
dec
lahf
push
stos
aad
ret
mov
and
mov
or
or
mov
ja
push
cld
data16
sbb
jnp
imul
xor
dec
mov
shrb
movsl
int
fs
jne
cs
xlat
add
xor
out
cld
add
pushf
ret
add
adc
jae,pt
adc
aam
test
sbb
lret
scas
int
jo
pop
or
popf
push
outsl
xchg
lcall
das
shll
inc
or
sbb
inc
jecxz
mov
inc
jg
mov
mov
testb
scas
jg
jno
and
es
rcrl
les
sub
mov
adc
movl
shl
sbb
sbb
aam
mov
sub
ss
inc
xor
lods
push
repz
not
mov
mov
das
and
add
xchg
jge
adc
mov
fwait
dec
mov
pop
aam
dec
arpl
bound
pop
and
fstpt
cli
xchg
pop
fwait
cmp
std
mov
mov
aas
pushf
loope
xor
push
add
mov
xor
xor
shr
sub
cmpsl
jp
push
push
mov
mov
testb
cmp
outsb
push
dec
int
mov
shl
mov
iret
cs
push
pop
aaa
push
incl
sub
push
ljmp
outsb
jl
insb
int3
jp
xor
mov
jle
fdiv
in
insb
loope
jns
bound
jmp
mov
add
mov
leave
push
test
test
xorb
divl
sahf
repnz
jae
cmp
ljmp
lods
xor
mov
mov
test
jmp
fnsave
sub
and
std
aas
adc
add
mov
andb
idivb
dec
xor
cld
adc
out
or
fsubrs
lahf
sub
pop
sti
loope
adc
lock
adc
ficoml
ret
mov
push
jmp
int
push
cli
bound
pop
or
pushf
std
adc
mov
roll
mov
or
mov
and
add
inc
or
lahf
repz
jb
subb
push
popf
lea
pop
push
jecxz
xchg
jbe
cmp
mov
push
lret
out
xor
shl
iret
xchg
xchg
jg
xor
or
ja
fiadds
or
sub
add
hlt
cmp
sbb
push
and
fmuls
pop
cmp
negb
mov
adc
xor
pop
jnp
jns
push
test
andb
popf
add
sahf
mov
or
aaa
shlb
adc
cmp
pop
iret
xchg
adc
jne
das
mov
xchg
cmc
out
and
dec
xor
xchg
jb
lret
and
lret
fstl
sbb
or
xchg
imul
sbb
lret
push
mov
xor
adc
sbb
mov
push
iret
fsts
popf
jp
lret
repz
mov
push
sbb
cmpsb
shrl
notb
jo
push
jecxz
jo
arpl
pop
cmpsl
jb
xor
iret
roll
adc
sbb
je
add
cwtl
ljmp
xchg
imul
push
aas
das
aad
cs
dec
push
mov
mov
lea
pop
imul
cli
pop
or
lock
lret
sub
add
push
dec
cmp
out
xor
popf
test
sbbl
pop
sti
pop
and
mov
idivb
test
fisttps
xchg
rclb
push
movsb
push
aam
xor
inc
sbb
sti
mov
cli
test
rcr
out
mov
sub
xchg
daa
addr16
or
fidivl
movsb
lock
call
sbb
ret
jae
adc
xchg
xchg
js
pop
ds
testb
sbb
loop
xchg
stos
movsl
xor
mov
xchg
mov
and
icebp
sub
out
xor
je
sbb
pusha
push
lcall
pop
push
fdiv
dec
popa
fwait
pop
testl
jp
outsb
jne
push
dec
ja
sbb
inc
faddl
pop
push
outsl
pop
daa
dec
das
push
ja
push
fnstcw
fadds
fwait
or
cs
stos
add
mov
popf
sbb
les
sub
mov
int
mov
mov
clc
mov
jg
ljmp
mov
jp
mov
mov
add
push
sbb
add
and
cwtl
lahf
add
xor
inc
aaa
dec
testl
jl
push
leave
xchg
mov
cli
es
pusha
pop
je
cli
jl
data16
jno
xor
dec
lock
mov
out
mov
cmpsl
cmpsl
cmp
movsl
inc
mov
jo
aad
lret
fdivl
mov
dec
testb
addr16
push
add
loop
xor
jo
sti
mov
adc
mov
inc
inc
adc
jae
fs
ja
jecxz
addr16
out
dec
push
mov
push
mov
popf
fcoml
xchg
loope
push
iret
mov
lret
rcrb
hlt
dec
rorb
push
jb
movb
lea
push
sbb
mov
roll
lahf
or
push
add
es
jecxz
mov
or
add
mov
aaa
andl
jmp
pusha
xor
jb
pop
mov
sub
lahf
pusha
ja
pop
inc
add
imul
add
mov
cmp
lock
mov
fcmovu
rolb
xchg
dec
push
shlb
push
sti
test
clc
je
stos
jmp
test
jnp
js
lds
mov
pop
fnsave
je
dec
cmpsb
sub
push
xchg
sahf
leave
sbb
or
adcb
xchg
inc
movsl
cld
mov
inc
mov
inc
add
pop
fsubr
xchg
mov
pop
imul
fstpl
repnz
mov
jg
rorb
out
pop
clc
or
mov
cmpsb
lock
sub
arpl
dec
jb
loop
xchg
inc
in
test
or
dec
sbb
and
shrb
inc
daa
mov
fisttpll
sbb
scas
push
aas
mov
sbb
add
pop
add
out
repnz
loopne
dec
jecxz
and
xor
out
enter
jmp
pop
fidivl
outsl
xchg
push
les
inc
leave
inc
test
out
xchg
xor
psubusb
adc
popf
cmp
dec
iret
rcrb
fbstp
popa
push
mov
inc
stos
scas
mov
pop
shrb
dec
jp
dec
daa
ror
in
arpl
cli
fstpt
and
jmp
push
jnp
mov
addr16
inc
vmovaps
stos
cmp
jg
loopne
cmpsb
adc
add
xchg
dec
sub
outsb
test
pop
fsubs
vpsubusb
cltd
sub
jmp
ret
shrl
mov
fstps
out
xor
or
into
sbb
cltd
jae
aas
jmp
mov
jg
dec
pop
pop
test
inc
inc
sub
push
arpl
imul
lret
into
stos
int3
cmp
aas
and
sbb
push
dec
into
fidivrl
push
sbb
shrb
imul
jno
push
lret
xchg
in
cmpsl
adc
mov
push
cwtl
mov
call
leave
and
mov
cwtl
push
ja
in
shl
insb
pop
stos
lahf
sub
sub
jo
push
sbb
jge
lcall
pop
fimuls
fmulp
loopne
movsl
ljmp
daa
jns
pop
or
lret
in
js
out
scas
stc
sub
inc
mov
testb
mov
js
fistpl
jg
jmp
jnp
mov
cmp
in
xor
lahf
sbb
lds
cld
lahf
xor
mov
loopne
gs
pusha
ret
jp
or
pop
push
cmp
adc
stos
out
icebp
mov
js
loopne
or
shlb
rcrb
push
jb
cmp
mov
push
repnz
int
jmp
adc
jne
pop
in
lds
popa
jl
pop
mov
xor
lcall
cld
decb
jl
mov
jp
rcrb
fimull
fisttpll
jno
mov
repz
add
and
mov
push
dec
xor
pop
sub
pop
jo
mov
fs
pop
xchg
call
lcall
mov
xchg
insb
xchg
das
insb
aas
lcall
shll
loope
xchg
repnz
inc
adc
scas
xchg
outsl
adc
dec
insl
loop
add
push
leave
mov
xor
or
repnz
sub
jmp
sub
push
ret
lds
mov
int
mov
xchg
addr16
adc
dec
adc
inc
mov
movsb
push
add
sub
ret
xchg
sub
push
scas
lea
add
nop
push
scas
xchg
xor
imul
subb
jae
inc
fdivrs
mov
jle
and
cmp
in
push
xlat
sbb
jne
pop
sub
sub
mov
shl
pop
outsb
loop
aam
push
add
enter
rolb
subb
push
add
xor
mov
call
outsb
test
sbb
out
rclb
sbb
mov
xchg
and
xchg
les
test
xlat
add
adc
ret
outsb
mov
or
pop
pop
aaa
push
out
push
adcb
and
dec
push
mov
xchg
and
jmp
lret
lahf
lds
inc
aas
and
mov
inc
lret
cmp
inc
push
and
fsubl
push
aas
push
fstpl
cs
popa
or
xchg
adc
jecxz
jne
test
fwait
nop
mov
ret
rclb
cltd
xor
and
imul
scas
pop
aas
add
nop
in
in
lds
push
pop
xchg
inc
adc
dec
adc
std
mov
pop
sbb
jmp
insl
rcr
lahf
dec
pop
aaa
add
out
adc
mov
gs
lods
insb
cmpsb
dec
inc
adc
loopne
lahf
dec
sub
les
jmp
cld
test
pop
mov
idivb
mov
jb
call
adc
lret
jne
ljmp
cwtl
xor
scas
out
in
inc
dec
push
mov
or
fstl
fisttpl
jmp
jnp
adc
dec
mov
cmc
rcll
repz
adcb
adc
inc
jge
jnp
sarl
inc
cmp
jmp
test
mov
dec
inc
jb
std
jns
addr16
and
and
sahf
xchg
aad
xchg
jno
cmp
cltd
mov
xchg
out
scas
addr16
add
pop
xchg
or
sbb
push
add
scas
mov
lods
pop
sbb
xor
push
pop
in
ljmp
lret
cltd
fld
pushf
jle
js
sub
xor
test
ja
aas
xor
inc
pop
ror
ss
add
adc
mov
push
scas
aaa
fs
push
and
imul
outsl
xor
and
or
jne
sti
cmp
fidivrs
xchg
in
icebp
repz
mov
icebp
fadds
rolb
cwtl
stos
pop
or
dec
popa
xchg
pop
test
stc
and
lahf
stos
dec
adcb
mov
fildll
or
clc
cmc
mov
aas
mov
sub
or
add
pop
jae
xorb
sub
xor
lahf
les
xor
xchg
sarl
shlb
insl
shlb
stos
add
pop
and
clc
mov
jae
jmp
inc
lods
hlt
adc
sbb
or
dec
sub
aam
mov
adc
call
frstor
pushw
jecxz
mov
sti
test
or
xor
pushf
test
fcomps
lret
rclb
mov
xor
jecxz
mov
xchg
jle
adc
cmp
mov
pop
sar
xchg
or
negl
sbb
and
or
pop
les
and
pop
sbbb
and
loopne
and
enter
xchg
jno
es
mov
andl
adc
xor
dec
pop
xor
stos
mov
outsl
movsb
pop
or
sub
sub
mov
xor
xchg
fnop
xlat
add
cmc
rcll
in
mov
push
dec
ror
mov
xchg
mov
dec
push
and
mov
pop
sbb
add
lds
mov
jae
xchg
in
cld
sub
xlat
ljmp
inc
jae
addr16
imul
xchg
add
test
fstps
fnstcw
xchg
adc
adcb
andl
jae
les
cmp
fwait
jmp
loop
mov
jmp
cmp
mov
mov
loopne
jecxz
mov
xchg
xor
dec
dec
insl
daa
gs
ljmp
jns
popa
aaa
cmpb
imul
xor
xchg
pop
js
divb
outsl
call
cs
jb
sub
into
mov
push
inc
cwtl
mov
xchg
xchg
mov
into
pop
mov
std
test
hlt
push
push
mov
and
je
icebp
fstps
sbb
into
push
movsl
enter
xor
insl
jge
inc
or
adc
mov
sbb
push
inc
aam
dec
arpl
inc
mov
aad
jle
jno
mov
push
cs
jb
cmc
loopne
mov
in
mov
xchg
test
outsl
fucom
jge
mov
sbb
test
call
aas
loope
arpl
or
push
pop
lahf
cmp
cmc
arpl
loop
cmp
xor
movsb
jl
jmp
inc
pop
ror
repnz
jne
cmp
dec
push
daa
sahf
dec
mov
and
xchg
sbb
ljmp
inc
add
adc
decb
push
mov
sub
lds
adc
iret
and
push
test
in
fstpl
xor
push
jno
dec
add
inc
pop
mov
xor
jo
shll
adc
or
pop
lds
push
mov
dec
cmpsb
sahf
sahf
loop
pop
in
xor
mov
mov
xchg
pushf
sub
lcall
mov
and
add
mov
mov
hlt
rol
lds
lock
pushf
dec
pop
xorb
or
xchg
mov
sub
jnp
jecxz
les
aam
mov
push
pop
cmpsl
cmp
inc
fidivrl
jp
jp
leave
cld
fsubp
rorl
in
jns
push
js
xchg
adc
dec
add
add
pop
or
fs
es
xchg
or
add
push
xchg
mov
test
call
jl
sbb
dec
inc
jmp
in
loop
mov
and
stos
mov
arpl
andb
repz
push
cld
fmul
mov
aam
push
adc
mov
in
rorb
cmp
and
mov
insl
fcoml
xor
lods
jp
int
nop
xor
mov
data16
sub
xchg
sbb
fildll
push
testl
pop
cli
je
data16
shlb
shrb
fs
and
lret
or
lret
mov
hlt
xor
aaa
adc
xchg
dec
add
sti
fs
sub
subb
shlb
push
mov
sub
pop
movsl
arpl
add
push
cmp
inc
xchg
or
cmp
pushf
or
sub
loop
mul
imul
mov
inc
outsl
xchg
cmp
ror
cmpb
sti
xor
xchg
mov
cmp
cmc
xor
mov
jae
scas
dec
cmp
add
inc
sub
mov
mov
sbb
dec
and
adc
leave
or
xchg
or
inc
incl
out
cwtl
or
jo
and
pop
cltd
data16
popa
push
aas
or
adc
stc
data16
in
xor
xchg
nop
sub
jp
insb
fs
cltd
imul
and
fdiv
lea
cmp
push
and
add
das
mov
inc
and
push
xchg
jl
xor
inc
and
push
shl
sub
loopne
cltd
or
test
inc
pushf
daa
ljmp
cmp
mov
push
mov
inc
or
jbe
adc
loopne
aad
sub
jmp
into
push
sbb
mov
adc
addr16
icebp
xchg
xchg
scas
add
add
mov
pop
js
shr
xor
loope
jecxz
jne
cmp
mov
in
sbb
imul
out
outsl
fidivs
lea
mov
xchg
sbb
pop
ds
lock
lret
xor
addl
pop
push
xchg
lock
cmp
repnz
adc
fildll
fsts
stc
pushf
mov
fsubr
js
mov
and
push
lcall
ss
es
push
lret
jns
mov
rorb
dec
jecxz
jns
fisttpll
scas
ret
cmp
into
in
xor
insl
mov
fadd
jmp
into
mov
imul
shll
inc
push
ss
and
sbb
push
jg
stos
pushf
lods
push
mulb
jb
jnp
add
andb
popa
daa
aad
inc
fwait
js
mov
ljmp
sbb
pushf
sbb
adc
jnp
sub
arpl
in
sbb
movsb
loop
mov
in
or
jge
mov
or
jl
adc
jo
xchg
mov
jae
mov
lds
dec
dec
jne
imul
rol
incl
adc
in
and
inc
adc
push
ja
fidivrs
add
in
stos
fdivs
or
aaa
mov
cmp
fwait
mov
pushf
jg
push
xor
ret
ds
cwtl
mov
enter
cmpsl
clc
push
pop
lret
lea
xchg
loop
push
loop
test
call
inc
jae
cmc
mov
inc
push
loopne
js
stos
mov
mov
sbb
mov
test
pop
ljmp
test
inc
dec
mov
leave
push
mov
jle
pusha
push
or
pop
shll
sbb
cmpsb
lret
xchg
cmpsl
mov
jns
adc
shll
fmulp
aaa
in
inc
mov
fcoms
out
mov
jne
sub
adc
or
call
cmp
add
cwtl
mov
add
xor
ljmp
out
pop
int
dec
je
outsb
mov
sub
or
xor
xchg
cmp
jb
xchg
test
bt
mov
inc
xor
sbb
sub
pop
mov
icebp
mov
std
and
jg
mov
push
mov
add
cmc
inc
mov
rorl
hlt
rcll
fsubrl
popf
push
subl
rorl
mov
cmp
repz
lret
sbb
xchg
mov
xor
xchg
stc
lea
in
leave
lods
mov
mov
dec
adc
mov
imull
mov
lahf
xchg
jae
push
pop
fsubs
mov
dec
aas
pop
cmpsb
sar
or
xor
push
adc
mov
add
daa
imul
lock
sub
neg
notl
inc
dec
rclb
xchg
cld
je
jno
cmp
repz
push
xor
xor
inc
xchg
call
fcmovnu
sub
shll
test
xor
fwait
loope
mov
push
adc
mov
sub
es
push
ds
clc
loopne
cmc
in
jg
dec
jle
sbb
mov
cmpb
loop
mov
mov
icebp
hlt
sub
mov
in
cltd
inc
gs
fiaddl
inc
sysexit
sbb
cltd
stos
imul
sub
or
test
leave
jb
test
lods
nop
ljmp
push
or
aam
ficomps
std
jbe
out
into
jno
js
out
push
inc
cmp
add
jl
jae
mov
xchg
xchg
or
arpl
jmp
mov
orb
js
push
outsb
jae
movb
inc
in
loopne
xlat
test
leave
ljmp
push
scas
adc
js
dec
pop
dec
leave
pop
frstor
stos
jo
jp
sub
fidivs
test
daa
ss
pop
mov
leave
lcall
fwait
loopne
xchg
fsts
stos
out
popa
pop
cmp
mov
jge
jmp
dec
bound
shr
dec
cs
mov
dec
lret
sub
xchg
imul
adc
cmpl
sub
scas
int3
in
es
filds
sbbb
push
popf
pushf
push
scas
jl
cmp
fdivs
xchg
jbe
in
les
rorl
lahf
shrb
sbb
loop
jmp
mov
inc
pop
xchg
rcll
mov
push
clc
lahf
or
and
jecxz
xor
out
xor
sbbb
mov
or
or
xchg
out
call
sub
mov
mov
rclb
and
mov
fwait
and
mov
in
cmpsb
subb
call
mov
mov
aas
gs
push
xlat
mov
or
or
adc
int3
dec
popf
out
xor
iretw
aas
pushf
mov
arpl
xor
lods
imul
xor
mov
mov
mov
xchg
inc
int
push
inc
push
mull
add
fs
push
xchg
pop
ss
xchg
xchg
inc
dec
test
lahf
mov
int
mov
cwtl
push
inc
int
mov
addr16
jg
adc
xchg
lahf
dec
add
pop
jo
mov
dec
test
and
jecxz
xchg
out
push
shll
jb
dec
mov
xchg
xor
pop
cmp
aas
js
cmpsl
andb
lret
fildll
pop
sbb
add
inc
andl
stos
outsl
sub
notb
leave
out
jg
scas
scas
insl
bound
rsqrtps
adc
mov
lcall
push
aaa
or
xchg
and
sub
inc
into
cmp
jmp
add
and
add
sarb
adc
and
xchg
shlb
rcrl
mov
rcrb
dec
push
push
mov
cmpsb
pop
gs
aas
pusha
out
or
ljmp
jo
in
aam
sub
je
and
lods
xchg
pop
outsb
int
shll
xchg
out
and
sti
add
mov
xor
inc
and
bnd
xchg
pop
sub
out
out
or
adc
subb
cld
cs
rcll
push
sub
aas
mov
cmp
jecxz
out
popf
xchg
mov
jge
jae
push
add
movsl
push
jmp
mov
loop
int3
mov
xchg
pop
push
test
andl
shlb
imul
push
sub
lret
pop
ret
cld
out
jno
cmpl
pop
lea
xor
cltd
out
sbb
mov
iret
mov
test
mov
sbb
xchg
les
fisubl
ds
je
ja
sub
in
mov
dec
or
add
xor
stc
xchg
mov
jno
cmp
xor
xchg
dec
pop
sbb
mov
dec
sbb
fiaddl
jmp
push
adc
dec
mov
imul
stc
pop
loopne
or
rcl
push
xor
movsl
dec
stos
loop
daa
rclb
out
and
and
ja
cli
push
mov
into
jo
sub
fisubrl
cmp
int3
jnp
fstpl
mov
stos
adc
xchg
dec
bound
pop
lret
mov
inc
sub
jo
add
imul
test
fwait
filds
adc
add
je
stc
and
ss
push
loope
sub
and
pand
icebp
mov
push
rol
inc
adc
push
mov
frstor
add
fnstcw
iret
icebp
sbb
pop
push
jmp
ja
and
bound
xchg
xchg
outsb
add
push
mov
mov
push
dec
je
repz
mov
cmc
mov
dec
pop
pop
scas
mov
sub
test
sti
pop
imulb
int
sarb
sub
or
fcmovb
movb
aad
pop
in
popf
or
dec
cmc
sbb
lods
or
aam
cs
fcoms
stos
sub
mov
hlt
jns
and
jbe
cmp
adc
sub
jge
pop
dec
enter
test
pop
cmp
push
cmpsb
mov
cmp
inc
stos
mov
xchg
push
jnp
dec
test
cltd
push
push
dec
movsl
inc
jbe
push
and
jne
cmp
cltd
add
xchg
arpl
or
lret
push
pusha
add
int3
fcoms
mov
repz
inc
sub
sbbl
mov
add
push
inc
cmp
leave
imul
fstl
lret
jecxz
push
dec
out
pop
dec
movsb
stos
jae
sbb
js
sbb
or
stos
lahf
inc
notl
popa
mov
push
lcall
jae
movsb
gs
rol
sti
mov
insb
fnstenv
pop
pop
inc
pop
mov
mov
or
mov
outsb
add
loope
push
dec
xor
mov
lds
jno
push
sub
test
mov
add
fidivrl
sti
aad
ja
or
sub
sti
add
inc
repz
std
add
mov
gs
rcrl
and
jge
sbbb
sub
and
sub
mov
test
loope
rorb
mov
or
xchg
fnstcw
jnp
out
dec
popa
pop
fadd
lea
push
jne,pt
frstor
cltd
xchg
clc
jp
ss
mov
inc
dec
inc
imulb
push
mov
outsb
mov
jg
inc
stos
jmp
fisubrs
cs
lahf
cwtl
notb
ficompl
adc
fwait
pop
mov
and
ror
jmp
pop
or
pextrw
cmp
das
ljmp
cs
sbb
mov
mov
xor
mov
cltd
pushf
push
mov
xchg
sbb
or
cmpsb
dec
popf
rolb
push
stos
pop
roll
mov
sbb
and
pop
pop
rcl
and
cmpsb
or
aad
and
mov
iret
mov
leave
aas
inc
or
mov
loope
mov
scas
call
mov
incb
nop
out
lret
push
mov
cmpsb
cld
lcall
mov
cmp
push
rcrl
lock
pop
cmpsb
loopne
fwait
out
mov
push
mov
xor
fnsave
push
and
mov
xchg
std
sti
out
insl
adc
loopne
mov
dec
push
aas
clc
fnstsw
out
mov
sbb
mov
jne
std
sbb
fisttps
movsb
inc
cmc
lret
stos
ret
push
outsb
scas
xor
fprem1
cmpsb
cmpsl
cmp
aam
push
les
mov
or
testb
xor
mov
add
lods
xchg
jae
lcall
lea
add
fldcw
fs
mov
mov
cmp
mov
aaa
inc
and
mov
lea
pop
aaa
adc
jo
adc
movsl
into
xor
cmpsl
inc
pop
sahf
shlb
jae
jle
daa
ret
data16
les
out
mov
dec
lcall
sbb
xchg
jnp
inc
imul
iret
mov
cmp
pop
cmp
mov
push
add
xor
in
mov
ljmp
shlb
cmp
mov
test
scas
leave
out
ljmp
add
mov
shll
push
jbe
in
js
inc
pusha
frstor
dec
aas
jns
sbb
xchg
inc
aas
or
and
lret
sbb
and
subb
sub
mov
mov
popa
pushf
pop
mov
sub
push
stc
cmp
mov
pop
sub
in
shl
adc
out
jno
inc
push
in
shl
pop
xchg
popf
jbe
adc
sub
sub
xchg
cmpsb
sahf
mov
mov
add
jae
dec
call
shrb
sbbl
ret
adc
jmp
jmp
mov
repnz
xchg
ret
pop
test
mov
jge
mov
out
test
in
loope
loop
shlb
dec
xchg
dec
mov
mov
dec
jmp
xor
cmp
xor
sub
icebp
mov
in
lcall
inc
sbb
flds
or
pusha
cmp
push
es
clc
xchg
lret
pop
sbb
add
mov
xchg
push
mov
inc
dec
or
push
cmp
fs
pop
dec
sbb
fnstenv
sub
test
xchg
sub
dec
sbb
cli
push
loop
sub
cmp
insl
popf
pop
hlt
jmp
cmp
popf
aad
shlb
inc
mov
or
into
push
cli
pusha
push
cs
push
and
ret
push
pop
mov
out
hlt
ss
adc
shlb
pop
push
jl
mov
iret
pushl
pushf
mov
sub
inc
mov
pop
dec
jl
daa
rcr
cmpsl
in
insb
test
out
push
addl
push
enter
loop
rorb
insb
mov
pop
add
leave
push
sbb
xchg
cmc
xor
testl
push
cwtl
sbb
jl
push
pop
cltd
scas
push
jecxz
mov
cmc
push
cwtl
icebp
ret
xor
lcall
cmp
or
xor
cmp
adc
and
sub
test
push
xchg
js
daa
or
jecxz
cmpsl
mov
hlt
call
sub
scas
stc
sub
mov
jb
fsubl
scas
ret
jns
shlb
add
xor
ficomps
fs
dec
out
mov
sahf
mov
out
icebp
out
dec
out
mov
adc
xchg
inc
test
pop
xor
int
or
jmp
loop
movb
xor
inc
in
xchg
popa
ljmp
aaa
lock
mov
sub
ja
mov
rcll
hlt
mov
int
fwait
jb
in
outsl
or
or
dec
jb
cld
adc
and
jge
mov
divl
dec
aas
std
mov
movsb
jmp
aas
jae
cmpsb
insb
lahf
push
mov
pusha
xor
pusha
andnps
popf
pusha
mov
mov
rcrb
push
jo
inc
xchg
dec
jno
loopne
fsubl
inc
mov
and
subl
idivb
push
cwtl
push
add
stc
ds
pusha
rcrb
sub
mov
das
xor
sbb
aam
jnp
aam
shrl
stc
mov
call
add
add
or
mov
and
lcall
and
incb
in
out
lds
arpl
or
add
ret
sbb
mov
jo
ss
ja
in
cli
div
xchg
out
out
add
mov
nop
outsb
xor
pop
call
cltd
push
push
pusha
sub
pop
sub
jmp
bound
scas
int
pushf
push
xchg
lret
sbb
shrb
mov
mov
xchg
xchg
mov
incl
dec
jecxz
outsb
cmc
int
fcoml
shlb
xchg
andl
mov
cmpsb
push
into
pushf
xchg
iret
push
cli
gs
xor
jb
sbb
push
xchg
bnd
adc
dec
add
mov
add
xchg
pusha
dec
jbe
xchg
in
sti
adc
jb
repz
mov
jmp
push
dec
fistl
xchg
popa
test
ret
idivb
and
orb
push
cld
cwtl
stos
leave
aas
xchg
jge
xchg
pop
adc
aas
scas
mov
sahf
inc
out
ret
or
mov
xor
mov
add
sbb
icebp
mov
push
fs
mov
popa
aam
mov
xor
sarl
mov
push
jge
jl
mov
add
sarl
jmp
mov
jne
negl
dec
shl
mov
imul
jo
imul
shrb
fdivrs
mov
jns
int
aad
cwtl
pop
sbb
mov
mov
sub
sbb
mov
in
adc
cli
xor
popa
jo
inc
test
mov
loope
js
mov
mov
or
popf
in
es
and
arpl
lods
and
fmulp
mov
movsl
xor
push
push
pop
mov
pop
jno
sbb
daa
subb
les
pushl
dec
push
dec
mov
mov
mov
mulb
sbb
sti
pop
sbb
dec
in
xor
mov
clc
xchg
push
mov
cltd
or
xchg
push
mov
fcom
or
incb
insl
lret
mov
pop
int3
shll
dec
cld
xor
push
out
add
mov
loope
and
mov
scas
sub
push
je
add
loopne
aad
sub
hlt
xorb
paddb
adc
sahf
sub
or
pop
call
es
out
mov
xor
jle
iret
sub
test
cmpb
or
inc
scas
push
add
mov
inc
cmc
add
stos
cmp
je
fs
add
in
xor
xchg
lret
jg
or
filds
movd
dec
jg
xchg
sbb
shlb
outsl
mov
stos
into
or
sbb
ss
mov
call
fists
cmc
add
insl
xor
jo
arpl
shlb
pop
adc
es
sub
add
adc
leave
and
ret
and
orb
pop
inc
cmp
sub
scas
sub
xor
pop
add
dec
scas
nop
mov
testb
dec
mov
xchg
adc
cmp
scas
mov
inc
cmp
lahf
lock
xchg
leave
dec
ja
jmp
inc
xor
insl
jno
cmp
dec
push
sub
mov
mull
add
xor
cltd
add
add
inc
sub
and
arpl
inc
mov
xchg
dec
jge
shrb
inc
lcall
lret
jmp
jg
xor
arpl
mov
mov
push
xchg
pop
jae
je
mov
shr
jb
daa
scas
inc
insl
push
cwtl
mov
xor
inc
sbbl
mov
fbld
push
or
in
ftst
xchg
mov
dec
push
mov
pop
pushf
fiaddl
mov
notl
bound
mov
jg
or
bound
repz
lock
adc
pop
cmpsb
mov
aad
pop
lcall
inc
ds
sbb
or
add
jns
cmp
aam
repnz
cwtl
push
es
fbld
addr16
in
out
das
jnp
add
push
scas
sbb
data16
in
jo
in
and
lds
test
add
sbb
fldenv
loop
mov
ds
aaa
xchg
mov
adc
les
bnd
or
cmpsb
pop
inc
mov
pop
mov
dec
popf
jne
cmc
out
push
or
pop
je
cmp
mov
gs
stos
push
in
insl
mov
sub
out
or
sbb
sbb
pop
mov
into
mov
das
mov
dec
cmpl
adc
cmpl
push
outsl
addr16
inc
mov
mov
imul
pop
call
dec
stos
xchg
xor
fs
jmp
ja
dec
shrl
ds
outsb
xor
out
or
push
push
add
and
dec
cmp
cs
lret
cmp
inc
div
mov
mov
mov
mov
sub
mov
add
inc
decl
insl
loope
sbb
fwait
pop
arpl
fstl
lods
ss
xorl
aad
lcall
ficoms
inc
imul
adc
lahf
ljmp
mov
xchg
clc
addb
cmpsl
popa
arpl
mov
in
mov
push
ret
xchg
dec
xor
cmpsb
arpl
movsb
imul
fdiv
bswap
push
xlat
cltd
mov
sub
jmp
cmpsb
xor
push
rorb
outsl
flds
stos
daa
mov
xor
out
test
addr16
icebp
adc
fldl
or
push
add
mov
cmp
lahf
hlt
clc
in
pop
shlb
pop
mov
shr
push
mov
testl
inc
loopne
pusha
sbb
aad
jbe
xor
or
aad
sbb
in
fdivr
pop
inc
cmpsl
sub
mov
dec
add
dec
xor
pop
sbb
cwtl
aad
jno
ficomps
aaa
pusha
xor
push
jp
jnp
push
jo
mov
xor
xchg
or
cmpsl
pop
mov
ljmp
pusha
push
pop
pop
fucomp
lahf
xor
mov
mov
pusha
jecxz
leave
pop
cld
aam
or
push
aam
xchg
ja
dec
ret
mov
and
repz
iret
and
add
addr16
imul
push
bound
cltd
mov
dec
and
mov
cmp
enter
and
xor
add
adc
out
lahf
mov
loop
or
inc
fadds
cmp
fwait
cli
inc
jno
test
mov
popa
lds
sbb
popf
hlt
adc
inc
fwait
sbb
jp
into
addr16
inc
mov
push
scas
xor
jle
lods
mov
and
cmc
cli
adc
js
in
dec
inc
popa
shlb
mov
ret
ror
dec
ret
lock
stc
adc
rclb
lods
aam
adc
inc
pop
pushf
into
adc
je
fdivrl
cmp
movsl
loope
mov
push
dec
xor
out
pop
mov
scas
imul
testb
sbbb
push
ret
jl
f2xm1
mov
push
xchg
pop
fsubr
sub
jnp
or
pop
xchg
pop
cmpsb
sahf
sbb
dec
cwtl
cmp
repnz
xor
push
xor
nop
adc
fldenv
out
dec
dec
xor
fwait
push
aad
mov
push
into
hlt
and
and
add
jl
cld
mov
das
cmp
outsl
sbb
xchg
mov
and
ja
sbb
aas
xor
push
out
shlb
or
cmp
test
cmc
pop
leave
shll
mov
cmp
lahf
push
mov
sub
testl
cmpsb
stos
mov
jae
mov
mov
mov
lds
imull
mov
das
or
adc
push
bound
pop
jmp
cmp
xor
lock
ret
or
popf
mov
fwait
inc
jo
in
ret
test
std
ljmp
aad
lcall
xchg
sbb
add
sub
sub
jle
sbb
jnp
sti
add
mul
aaa
in
push
mov
mov
pusha
sub
push
aam
mov
cs
fwait
cwtl
xor
test
push
adc
push
cmpsb
lods
mov
xor
fmuls
or
lea
mov
sbb
inc
pusha
mov
xchg
xor
cs
jbe
sub
push
push
add
add
dec
mov
mov
mov
mov
mov
les
int3
shlb
pop
call
dec
xchg
mov
pop
or
in
or
or
fs
mov
lods
xorl
loope
aaa
icebp
dec
stos
push
mov
stos
xchg
mov
adc
cli
clc
jmp
or
jmp
adc
das
mov
xorl
dec
sbb
test
scas
cmp
pop
inc
sub
xchg
xor
xchg
mov
sub
mov
fdiv
push
test
insl
mov
dec
mov
sub
enter
push
insb
mov
jmp
andl
sub
jo
das
xorb
pmulhw
lret
mov
movsl
mov
lock
inc
pop
or
sub
xchg
bound
aam
mov
mov
push
mov
decl
xor
and
stc
int
mov
sbb
ljmp
clc
dec
fidivl
push
mov
lods
ror
imul
and
pop
std
andb
xor
lods
call
mov
rcrb
push
sub
fcoml
sub
and
fiadds
insl
mov
xor
sarl
ret
mov
pop
push
mov
das
or
cmp
leave
and
inc
cmp
mov
push
les
adc
mov
adcl
jb
push
lds
imull
jbe
cmp
lea
mov
jmp
dec
xchg
pushf
orl
mov
insl
or
gs
je
or
inc
js
aas
jecxz
dec
or
or
fdivrl
decb
dec
sahf
in
dec
dec
mov
jle
pop
adc
sbb
add
lcall
loop
decl
pop
pop
fistpll
sti
icebp
lea
loopne
fbld
arpl
in
stos
xrelease
jnp
dec
sub
out
xchg
inc
pop
js
push
push
out
push
xlat
lret
repnz
xor
lahf
cli
outsl
adc
imul
mov
andl
pop
scas
bndldx
mov
repnz
out
out
in
cmp
pushf
aam
and
clc
mov
scas
jo
mov
adc
mov
es
rcrl
movsl
xor
stos
sbb
stc
mov
aam
je
sbb
insb
scas
imul
xor
subb
push
sbb
and
cmp
dec
push
andl
xchg
sahf
mov
test
rol
js
jecxz
jbe
xchg
popa
movsb
insl
rcrl
addr16
lea
cmp
imul
cmpsb
dec
decl
fidivs
popl
or
and
and
cmp
ret
notb
adc
flds
andl
inc
dec
scas
nop
and
and
jmp
int3
mov
fisubs
sbb
mov
adc
cld
pop
mov
dec
sbb
clc
push
mov
add
loop
scas
pop
dec
jne
mov
test
fs
cmpsb
in
in
call
je
xorb
insl
imul
test
adc
in
out
mov
jnp
mov
fs
icebp
inc
popf
add
xlat
cmc
sar
dec
jl
push
sub
pop
push
cld
xchg
and
rcl
fsubrs
jbe
pusha
and
leave
mov
mov
inc
out
scas
lods
adc
loop
fistl
movb
xor
xchg
xor
push
mov
or
pop
xor
jns
pop
push
cmp
lahf
xor
loop
shll
je
xor
cmp
jp
lock
stos
aad
neg
je
cmp
sbb
jnp
jae
loop
loope
mov
lret
lret
pop
or
xor
in
jle
pop
jecxz
loopne
idivb
subb
jmp
call
jle
xor
push
push
js
sub
aaa
xor
dec
into
stos
xor
xor
jecxz
sub
inc
sarl
pop
jmp
mov
in
mov
jnp
mov
push
mov
sub
mov
mov
push
xor
iret
xor
pop
flds
rorb
adc
dec
lahf
pusha
loopne
mov
daa
push
mov
pop
rcr
clc
mov
push
xor
popa
push
std
xlat
clc
xlat
add
jg
mov
call
mov
enter
adc
popa
push
aas
fdivs
sub
fisubrs
mov
mov
cltd
test
fwait
aam
lahf
xor
in
adc
mov
and
mov
mov
mov
lds
subl
mov
jg
lcall
fistpll
mov
push
in
out
adc
mov
jnp
mov
js
ljmp
sbb
movsb
push
pushf
push
push
cmp
mov
aad
call
pop
pop
jbe
cli
or
out
jbe
repnz
mov
sbb
add
push
jle
stos
and
mov
sub
inc
push
mov
vgetexpps
mov
lock
inc
adc
cmpsl
add
fcomps
cmpsb
sbb
xchg
push
or
xchg
jns
pushf
cmp
jmp
xchg
xor
cs
cmp
jno
mov
inc
aam
pop
lods
mov
imul
mov
fucomi
addr16
push
sarl
mov
add
adc
or
inc
and
fisubs
stos
clc
cs
jmp
dec
lea
fsubs
pop
jae
ds
fmuls
cmp
jno
imul
stc
rclb
bound
mov
mov
in
pop
sub
xchg
jge
outsl
aad
inc
fwait
repz
stos
push
out
pusha
mov
xchg
and
enter
jge
scas
sahf
mov
mov
jl
iret
aam
jno
pushf
xchg
rol
jnp
in
adc
das
inc
adc
dec
xchg
lret
mov
xchg
subl
and
femms
sub
inc
cmp
push
sbb
sbb
cmp
fisttps
fcmovbe
pusha
cmp
fsubl
push
xchg
cmp
jmp
jge
pop
xor
out
mov
js
mov
inc
test
lret
roll
xor
pop
outsb
sbb
mov
popl
mov
jns
mov
cmp
adc
inc
inc
clc
xchg
mull
imul
ljmp
lds
dec
testl
fists
stc
ljmp
es
ret
mov
jno
leave
enter
iret
out
ljmp
insb
mov
std
in
and
scas
in
add
add
dec
je
mov
pushl
sbb
mov
sub
sub
jle
out
fisubs
pop
jle
inc
and
xor
xorb
push
sub
adc
addr16
std
adc
cs
jl
adcb
mov
enter
std
and
fadd
outsb
enter
out
xor
sbb
sbb
mov
and
imul
pop
jnp
out
sbb
sbb
or
ret
sub
adc
pop
sbb
mov
pushf
movsb
lahf
lea
add
pop
mov
jnp
fs
push
mov
gs
push
aas
xchg
loopne
and
cwtl
xchg
shrl
mov
or
imul
cmpsl
addr16
jmp
adc
ret
int
sarl
xchg
jb
mov
js
or
fstps
ror
and
jle
mov
sbb
rcrl
sahf
test
jnp
dec
std
stos
imul
pop
jecxz
adc
fxch
imul
scas
call
bound
not
fnsave
into
sbb
loopne
inc
jl
mov
cli
fsubs
shll
dec
mov
leave
pop
pop
ds
add
xchg
test
cld
mov
cs
lds
test
push
movsl
aad
inc
test
cmpsl
sbb
sar
das
or
add
jge
stc
xor
lds
pop
add
sbb
mov
ja
pop
into
add
nop
test
jo
xchg
push
sub
inc
int
inc
call
mov
movsb
outsl
stos
add
in
clc
add
ljmp
add
lret
mov
dec
adc
pop
sbb
xor
pushf
xchg
or
sbb
fsubrs
push
or
inc
pop
inc
cmp
lsl
jmp
xchg
insb
sub
push
repnz
inc
mov
mov
popf
adc
les
cli
jns
movsb
fstl
pop
dec
and
gs
push
cmpsl
adc
adc
mov
scas
sub
jo
xchg
ficomps
lea
xchg
mov
xchg
adc
mov
dec
mov
cmp
push
sbbl
inc
inc
xchg
movl
mov
test
add
jmp
adc
fcomps
mov
sbb
insl
sbb
cmp
mov
jecxz
xchg
pop
les
cmp
mov
subb
push
xor
ffree
xchg
scas
xor
sub
testb
jmp
lret
data16
icebp
fcomip
add
ja
ljmp
scas
push
rcrb
or
fsubl
sub
push
int3
sub
xor
outsl
insl
mov
xchg
lods
adc
xlat
or
popf
incb
idivb
fcomip
lods
push
or
loopne
lock
pop
pop
xor
adc
cmp
mov
mov
and
xchg
sub
mov
aad
bound
sar
adc
dec
in
fsqrt
jbe
dec
arpl
pcmpeqd
in
add
out
xchg
xor
movl
mov
adc
fcmovu
ljmp
pop
cltd
loope
sti
xor
sub
cmp
mov
mov
mov
pop
xlat
and
sub
sub
fisubl
push
sbb
scas
in
repnz
adc
and
rcrb
test
jp
mov
add
xchg
add
push
outsl
adc
adc
sbb
in
cmp
pop
and
mov
sub
les
in
cmpsl
cmpl
jle
nop
cmc
es
ja
cmpsb
xchg
mov
ss
xor
pop
adc
xchg
stos
dec
sub
cmp
or
adc
xchg
aas
or
mov
icebp
fwait
mov
push
add
data16
add
jg
or
nop
imul
push
cmc
mov
inc
push
out
dec
xor
fcmove
adcb
loopne
push
enter
xlat
mov
sub
or
pop
mov
xor
or
sahf
push
test
fwait
xchg
pop
xchg
int3
add
xor
cltd
aad
pop
sahf
es
gs
dec
arpl
add
sub
arpl
jmp
fimuls
mov
adc
xor
add
add
pop
add
xor
jp
lds
jnp
push
adcb
mov
in
xchg
mov
cmp
pop
dec
cmp
mov
jbe
dec
dec
mov
sbb
js
stos
fsubs
xor
cmp
adc
mov
mov
mov
aam
or
jne
mov
addr16
pusha
std
dec
sbb
adc
xchg
test
jge
cwtl
stos
lret
and
mov
mov
sub
jle
pop
arpl
jle
aas
das
jae
pop
jae
and
add
aad
adc
stos
in
stos
repnz
cltd
push
addr16
bound
cmp
sbb
xchg
mov
pushf
xlat
rorb
fldt
dec
xor
push
add
fstps
xor
push
ret
sbb
jae
dec
sbb
lods
jmp
or
add
test
jnp
cltd
push
mov
repz
mov
inc
js
mov
cmp
inc
repnz
lock
xchg
lret
cltd
mov
cmp
loopne
sbb
mov
or
pushf
lret
das
push
loop
dec
sbb
les
pop
popl
cmp
rcl
or
lcall
out
jo
mov
aad
iret
sahf
jle
ja
and
testb
push
jge
fnstsw
loopne
icebp
add
test
lock
xor
push
clc
add
pop
jns
js
jb
add
push
sarl
xchg
sahf
insb
xor
or
pop
xchg
in
xchg
aam
xchg
xchg
jmp
cmpsl
and
enter
sarl
pushf
jne
int
aaa
int
loope
sbb
dec
test
jnp
sbb
int3
cli
bound
fadd
outsb
mov
js
mov
jecxz
sbb
mov
push
das
sbb
repz
or
pop
lods
push
push
xchg
mov
fnstenv
xor
xchg
cmpxchg
je
cwtl
push
jno
push
imul
mov
adc
rclb
loopne
add
je
sub
and
das
pop
jl,pt
sub
das
or
jmp
ljmp
jo
ljmp
inc
push
mov
mov
hlt
sbb
mov
cmpl
aad
jp
pushf
or
or
inc
ljmp
outsl
loopne
inc
sub
mov
mov
push
mov
xchg
sbb
jmp
add
mov
stos
nop
leave
leave
fsin
mov
mov
negl
lea
mov
jmp
mov
rcrb
mov
shrl
dec
xor
in
aas
mov
iret
iret
lods
xchg
xchg
dec
loope
addr16
popa
add
rcrl
sub
fldenv
mov
or
into
fstpt
add
outsl
sbb
cwtl
mov
fisubl
pop
stos
dec
andb
orl
or
and
popa
pusha
les
data16
adc
xor
pop
loop
outsl
mov
fwait
insb
push
or
push
jmp
add
pop
sub
add
cltd
arpl
lret
inc
jg
repnz
ficompl
stos
xchg
packuswb
sub
add
mov
ror
dec
hlt
gs
orb
fidivl
fisubl
test
dec
lock
mov
jno
int
adcl
lods
push
adc
testb
in
cmp
mov
fs
push
flds
shlb
adc
shrl
push
outsb
inc
dec
sbb
cwtl
ljmp
shl
sub
int3
clc
wrmsr
sub
pop
cmpsb
cwtl
push
gs
test
aas
pop
subl
adc
adc
jmp
push
and
repnz
sbb
fs
push
xor
stos
dec
jmp
enter
gs
cmc
jmp
lods
or
xlat
mov
rcrl
and
adc
mov
cmp
lahf
sub
subl
adc
ds
push
xor
ljmp
sub
cld
fwait
rcr
add
push
cmp
jecxz
adc
insl
xchg
fs
leave
insb
mov
lret
or
loope
test
or
jb
out
inc
test
jmp
push
jecxz
in
ret
push
icebp
aas
xor
inc
mov
mov
movb
jg
scas
lret
inc
xor
jle
add
ss
outsb
mov
fdivrl
scas
test
rcrl
out
pop
jae
cltd
push
dec
mov
pop
mov
hlt
xchg
push
imulb
mov
adc
hlt
jg
mov
into
testl
add
in
pop
or
ficoml
lcall
push
jae
adc
add
mov
jb
adc
hlt
cmp
adcb
in
aam
cmp
cmp
les
rep
dec
lods
add
adc
cmc
aam
push
js
sub
adc
push
aad
shll
insl
pop
xor
out
jae
push
dec
and
pop
and
lret
sub
mov
inc
call
roll
mov
jmp
out
pop
push
cmpsb
mov
scas
lock
ficoml
cld
aam
test
test
mov
ret
popf
pop
xor
push
nop/reserved
inc
pushf
sub
rcrb
in
jno
jmp
inc
cld
rcr
fbld
ljmp
lods
test
xchg
xchg
lea
pop
out
fldl
mov
das
mov
addr16
jno
lock
ds
ficoms
xchg
adc
mov
cmc
sti
adc
in
test
dec
mov
or
test
mov
mov
aaa
ja
out
ljmp
mov
push
wrmsr
adc
cli
lds
mov
repnz
sub
cmp
pop
xor
aas
and
mov
lock
push
idivb
cmpsl
xchg
sbb
mov
pop
mov
dec
movsl
mov
xchg
in
sar
pusha
test
lcall
rcrl
and
adc
mov
fsubrs
add
cwtl
pop
inc
rclb
mov
and
dec
je
in
pop
js
and
and
inc
loopne
negl
lods
sub
scas
sub
in
mov
mov
inc
clc
addr16
and
test
scas
out
adc
sbb
subb
push
jns
adc
mov
sbb
push
sub
dec
xchg
pop
flds
push
addb
xchg
jb
mov
hlt
push
cltd
repnz
lods
jae
jns
mov
test
shrb
call
push
popa
push
mov
pop
xor
or
lods
adc
xor
xor
add
sti
out
jae
into
jns
mov
icebp
fsubrs
stos
out
mov
pop
scas
pop
jecxz
outsb
and
inc
cmp
dec
sub
je
cmp
enter
dec
addr16
lret
jle
cmp
call
pop
push
and
dec
mov
ljmp
das
pop
imul
mov
test
stos
mov
in
lcall
inc
dec
inc
lods
or
lret
and
les
push
movsl
iret
or
rcr
fsubs
mov
pop
out
outsl
leave
or
sub
sbb
sbb
mov
aaa
fildll
jbe
jb
dec
repnz
xchg
int
bound
das
out
inc
cmp
jle
into
add
jp
pop
cmp
push
cld
cld
jmp
jge
add
shl
mov
and
gs
es
or
mov
into
cld
xchg
out
mov
adc
cmp
push
loopne
in
add
rcll
dec
xchg
sbbl
mov
jg
inc
dec
jb
fimuls
out
push
loope
movsl
mov
inc
fimull
sub
mov
lds
push
pop
mov
popf
cltd
inc
push
gs
aam
jg
cmpsl
iret
jne
test
sbb
pop
mov
in
stos
imul
mov
or
sbb
mov
add
sti
xchg
adc
dec
jnp
mov
imul
sub
pop
lea
inc
sub
push
jne
adc
cli
inc
popf
xchg
cli
shr
int
jp
loopne
jnp
add
jmp
lret
pop
sub
sub
dec
push
outsl
xchg
out
mov
orl
cmpsl
test
push
and
push
dec
shrl
pop
cmp
push
imul
into
ja
jae
add
xchg
cltd
sub
and
sbb
addr16
mov
pop
arpl
sbb
or
xchg
xchg
xchg
add
sub
mov
movsb
push
mov
add
dec
cmp
clc
in
cmp
and
aaa
dec
imull
mov
xchg
loopne
cmp
cld
xor
jns
clc
inc
fwait
sub
pusha
and
loop
cmp
insb
mov
ficoml
lock
test
dec
mov
sbb
dec
rcrl
mov
xchg
mov
loopne
mov
lret
and
or
jne
sbb
xor
push
dec
ss
mov
cmp
fisttpll
push
or
xor
cmp
adc
push
push
repz
je
sbbl
xchg
mov
add
gs
xchg
shl
mov
testl
ret
lods
push
mul
jg
dec
lods
sub
cmpsb
mov
sub
add
mov
or
in
ss
cmp
mov
xchg
mov
mov
in
out
push
ds
hlt
or
bound
lods
popa
fisttpl
arpl
mov
xor
es
jae
mov
push
pop
out
repnz
xor
xchg
iret
inc
loopne
movsl
cmpsb
andl
mov
out
xchg
aas
xor
shl
adc
add
jb
nop
test
jae
dec
nop
fcompl
jmp
push
leave
into
mov
ficomps
sbb
jecxz
das
mov
and
hlt
pop
sti
push
loope
fs
jnp
pusha
pop
shl
push
mov
adc
sub
stos
inc
cmp
addr16
insb
out
call
xchg
daa
out
mov
mov
loop
xchg
jp
fcmovnb
push
fucomip
jne
sbb
jge
jge
sub
jg
push
test
cs
dec
and
out
cmp
mov
add
pop
jns
ud2
in
mov
jo
or
and
mov
mov
cmp
sarb
ret
pop
adc
data16
mov
out
mul
imul
ds
xchg
mov
jne
xor
xchg
mov
insb
push
cli
ds
or
iret
fnstcw
xor
adcb
mul
push
push
scas
out
outsl
mov
mov
inc
adc
gs
dec
std
jno
outsb
inc
sbb
insb
cmp
jb
pop
loope
jmp
in
shll
dec
aas
sub
mov
push
jno
dec
rolb
std
ljmp
sub
jecxz
adc
mov
and
sbb
inc
ret
xchg
stos
mov
xchg
xor
sbb
or
aad
jbe
sbb
sub
loopne
negl
mov
add
mov
push
cmp
xor
mov
mov
or
ror
xchg
dec
cvtdq2ps
adc
push
pop
mov
xor
pop
mov
pop
shll
cld
pop
pop
es
dec
dec
sub
sub
xor
int
xor
enter
in
ret
lods
daa
popa
sub
xorb
test
dec
stos
pop
inc
outsl
jl
and
aad
aam
push
into
insb
adc
unpckhps
outsl
cmp
cmpsl
inc
sub
rolb
cmpsb
inc
xchg
xlat
scas
daa
jb
aaa
test
xchg
repnz
arpl
cmp
mov
nop
xchg
daa
stc
and
mov
dec
pop
mov
cwtl
in
mov
dec
int
out
ret
inc
sub
testb
sar
pop
inc
neg
sbb
cmpsl
outsl
or
cs
cmpsl
dec
test
jo
mov
sbb
ja
xor
inc
mov
test
sub
dec
mov
pop
mov
mov
test
push
mov
inc
ficompl
add
pop
loope
mov
movsb
lret
les
int3
test
pop
das
lret
outsb
lods
data16
mov
inc
icebp
cli
sarl
rorl
stos
iret
gs
and
and
xor
adc
cli
xor
popa
adcb
shl
mov
pusha
pop
addr16
test
xor
clc
cld
sbb
insb
and
ss
push
jno
fs
movsb
sahf
jno
rolb
js
dec
or
je
stc
mov
jecxz
shlb
push
sub
cmc
adc
mov
mov
pushf
inc
fistpl
jge
ds
lds
jo
icebp
dec
decb
movsl
repz
adc
roll
scas
jecxz
leave
push
pop
mov
add
pop
xchg
mov
data16
and
loopne
imulb
add
mov
cmpb
lahf
sub
dec
or
js
push
out
lods
test
xchg
in
clc
push
dec
jmp
sub
loope
mov
cmp
cmpl
jno
stc
jno
shll
mov
mov
inc
adc
lds
lahf
dec
incl
push
sub
jecxz
mov
push
sbbl
push
inc
jns
or
orl
sbb
mov
pop
mov
or
xor
outsb
pusha
cmp
addr16
adcb
pushf
xchg
hlt
jb
fwait
test
sbbb
jae
pop
dec
jle
mulb
je
fstp
jb
in
mov
ror
ja
or
and
imul
jo
fbld
mov
test
adc
cs
movsb
mov
cmp
enter
or
imul
jnp
jp
pop
fists
mov
push
test
sarb
jge
aad
inc
outsb
dec
sub
dec
pop
int3
jno
and
adc
out
lcall
dec
jo
cli
mov
adc
sbb
mov
scas
jmp
adc
fsubr
shll
aas
push
imul
mov
in
sbb
out
mov
leave
jne
push
jmp
sub
out
dec
mov
outsb
cltd
mov
cmp
sbb
xor
les
fwait
and
sar
adc
jo
test
aaa
int3
lds
mov
pop
xor
push
xchg
js
or
sbbl
ljmp
pop
adc
lods
xchg
cli
sahf
push
rclb
aaa
lret
mov
loop
inc
pop
dec
xchg
lret
in
sbb
and
inc
cld
sub
mov
pop
test
mov
push
xchg
mov
std
dec
arpl
add
imul
cmp
xchg
stos
orb
lds
jno
in
jl
loop
aas
mov
cmpsl
jno
push
mov
stos
insb
sbb
pop
pop
mov
xchg
fnstsw
add
rol
xchg
jmp
lods
lahf
inc
inc
pop
mov
jns
cmp
jp
push
inc
mov
icebp
test
fcoms
adc
mov
loopne
inc
xor
ss
call
stc
xchg
out
pop
lcall
pop
and
mov
inc
dec
sub
sub
xchg
repz
cli
xor
scas
jbe
mov
lods
jne
sub
bound
or
fldenv
lahf
shl
lods
aam
sbb
mov
sub
in
adc
jno
dec
dec
adc
lock
xchg
nop
fisubs
into
jmp
outsl
cwtl
out
dec
test
jae
sub
jle
dec
jbe
jbe
in
aaa
mov
lods
test
cs
sub
push
inc
rorb
iret
push
inc
ljmp
push
mov
mov
mov
sahf
fdivl
out
aaa
orl
shlb
out
xchg
pop
pushf
jb
popa
aam
ss
stos
push
gs
xchg
push
and
xchg
ss
loopne
test
mov
mov
jbe
mov
sbb
mov
mov
sbb
loop,pn
inc
mov
popa
test
scas
sub
add
pushf
cmpsb
add
mov
xchg
test
mov
hlt
cmpsl
rorb
lahf
mov
pop
mov
loope
fcmove
mov
and
outsl
push
jo
roll
and
negl
push
test
aas
cmp
xor
add
cmp
dec
inc
pop
cmpsl
and
xchg
fsubp
push
cmc
enter
in
int3
inc
imul
movsb
push
incl
jno
ljmp
shl
fs
fucomi
ret
rep
aam
fwait
stos
rorb
into
stos
push
adc
not
insb
jle
sahf
cmp
mov
lods
icebp
inc
inc
fs
xchg
xchg
and
sbb
push
bound
mov
and
dec
jae
in
call
and
and
je
ljmp
leave
xchg
pushf
mov
jp
fdivs
je
pop
mov
pop
xchg
insb
idivl
test
lds
mov
fs
pop
cld
je
jmp
cwtl
shr
pop
out
inc
icebp
push
lcall
add
outsl
enter
cmp
add
ret
inc
ret
stos
adc
inc
jmp
xor
das
das
shl
inc
clc
jns
int
jbe
cmp
sub
mov
sub
mov
addr16
inc
cmpsl
lds
js
call
adc
cmp
sahf
push
sub
add
jg
pop
mov
lahf
mov
mov
or
adc
decb
adc
ljmp
add
push
jno
mov
nop
dec
fwait
out
lock
stc
mov
mov
arpl
dec
mov
xor
out
pop
stos
addr16
sub
or
pop
sbb
cmp
mov
mov
outsb
out
adc
and
pop
ds
stos
int
cmp
pop
jg
push
imul
inc
into
xchg
ljmp
jecxz
or
daa
cmp
inc
nop
int
xor
pop
fiadds
leave
pop
mov
add
fstpt
push
stos
dec
add
pushl
jns
add
fistpl
fs
mov
sbb
data16
dec
aad
imul
cmc
jecxz
fdivl
and
mov
push
jnp
xlat
xchg
xchg
and
mov
add
or
add
dec
mov
xchg
mov
stos
xchg
clc
test
jns
sahf
daa
ret
cli
repnz
xor
arpl
mov
mov
push
icebp
adc
stos
daa
hlt
mov
dec
cmc
das
mov
outsb
cmc
push
cs
jno
xor
aad
outsb
jle
push
out
xor
scas
cmp
fstpl
pop
push
sbb
xchg
cli
push
xchg
lret
fisubs
loop
mov
or
push
leave
inc
push
cltd
shrl
lods
mov
jae
xchg
jmp
mov
icebp
loop
or
mov
mov
filds
mov
jb
ss
push
imul
pusha
icebp
shll
outsl
dec
mov
dec
cli
call
fiadds
or
inc
scas
outsl
dec
cmc
sbb
sub
sub
sbb
sbb
add
mov
inc
aas
sub
and
stc
fmul
sub
mul
rol
lcall
daa
lods
cmp
mov
test
aaa
testl
xchg
mov
jge
bound
int3
push
and
inc
out
xchg
inc
push
and
inc
aam
rorb
scas
stos
shlb
lock
inc
inc
dec
dec
sbb
bswap
mov
cmp
daa
out
mov
out
popf
adc
rclb
adc
jl
mov
dec
jmp
lret
std
inc
cli
lret
sbb
pop
scas
incl
jmp
add
push
shrl
dec
or
shl
pop
mov
push
insl
pop
in
mov
rorl
insl
fldcw
xlat
adc
or
insb
jmp
push
adc
int3
xor
pop
xor
cmp
pop
movsb
inc
sti
dec
adc
out
pop
jo
inc
scas
mov
sahf
dec
sarl
push
cmpsl
es
mov
cli
aam
xchg
add
xchg
jp
out
sti
dec
xor
int
repz
push
xchg
xor
shr
pop
mov
pop
out
cltd
jmp
fnsave
fnstsw
insl
push
mov
daa
lret
dec
imul
lahf
testl
fsubs
jmp
nop
cmc
pop
mov
mov
xchg
inc
mov
or
mov
mov
inc
mov
out
loope
jae
xor
lock
dec
adc
dec
adc
adc
push
jp
addb
cmp
dec
jg
not
dec
pop
or
inc
jb
stc
inc
arpl
sti
clc
add
daa
cmpsb
cs
and
loope
aaa
into
mov
jg
loope
sbb
ficoml
and
pop
jo
ljmp
testb
outsb
xor
fldl
pop
in
sbb
mov
movsl
mov
clc
jge
jae
je
std
inc
clc
adc
xlat
into
inc
cmpsb
icebp
push
lcall
scas
bound
enter
jbe
xchg
fwait
test
mov
ret
and
mov
pop
mov
and
in
leave
cmpsb
xor
cmp
scas
aam
adc
aam
push
fmull
cld
les
mov
jns
adc
adc
jnp
aad
mov
and
push
lcall
loope
cmpsb
and
jecxz
inc
cmp
stc
ret
mov
je
jb
inc
shll
dec
ds
xor
add
mov
repz
pop
mov
fsubr
mov
mov
and
subl
cmp
jle
in
gs
fs
jbe
loop
cmc
push
ret
inc
mov
mov
lods
add
shlb
mov
xor
enter
pop
popf
int3
stc
sub
pushl
nop
loop
pop
pop
aaa
fstp
mov
int3
mov
xor
lahf
and
insl
fstpt
cmp
mov
pop
adc
adc
mov
rcrl
mov
adc
outsb
movsl
jns
dec
sti
pop
push
jbe
scas
jl
pop
sub
or
pop
jbe
push
xor
jmp
cmp
and
cltd
mov
cmpsl
push
outsb
out
mov
xchg
sbb
jp
pop
pop
add
mov
clc
test
sahf
lods
aad
jb
jo
or
push
sub
xor
lret
test
mov
les
sbb
and
ds
mov
or
out
shl
int3
push
push
mov
or
xor
mov
popa
cld
lret
dec
mov
xor
pop
or
stos
ja
xlat
dec
xchg
mov
cmp
inc
dec
and
lods
stos
flds
test
mov
sbb
cmc
cmp
adc
pop
sub
push
push
mov
xchg
inc
call
addb
xor
jno
pop
pop
movsb
fidivl
sbb
and
cmp
rolb
outsl
mov
fildl
in
mov
push
jle
mov
imul
stc
pop
cmc
dec
inc
int
pushf
or
lea
jl
aad
or
pop
mov
test
jo
dec
xchg
cmp
ds
ljmp
push
or
adc
and
and
cltd
mov
xor
xchg
outsl
daa
xor
xchg
push
mov
push
je
sub
push
ror
stos
fcom
loopne
ret
fsubl
gs
xor
xchg
ljmp
shl
aad
sbb
or
fmuls
cmp
xchg
push
in
sbb
das
and
daa
popa
mov
lock
cmpsl
pop
and
outsl
or
hlt
lea
aas
sbb
xlat
sti
movsb
or
iret
jl
jl
mov
mov
inc
jb
and
cwtl
add
ss
xor
outsl
dec
push
adc
mov
in
outsb
jb
cmp
pop
mov
sbb
ja
and
and
or
imul
mov
cwtl
test
ret
push
lret
mov
jbe
sbb
cmc
and
lret
pop
push
dec
jo
jbe
hlt
repnz
push
mov
inc
jne
mov
out
xchg
cmp
lahf
aam
lea
jnp
add
ret
ja
adc
or
cmc
dec
call
sarl
sub
in
mov
fldcw
mov
decl
mov
pop
and
pusha
cli
scas
mov
psubsw
add
fnstsw
jp
xchg
jge
sub
orl
subb
lcall
mov
pop
mov
adcl
movsb
jecxz
cmp
and
xchg
rorl
xchg
push
push
sub
xchg
cwtl
daa
fstps
sub
inc
test
test
adc
mov
sub
mov
lret
sub
ja
mov
sub
xor
xlat
inc
and
mov
iret
repz
sarb
or
push
lcall
xchg
xchg
cmpsl
fdivrs
push
adc
add
pop
jl
push
xchg
enter
dec
rcr
scas
jmp
divl
dec
inc
je
int3
hlt
cld
fstpl
adcl
sbbb
ret
push
xor
daa
test
push
je
jl
in
scas
push
fsubrs
cmp
jl
subb
inc
jmp
jb
ret
ss
fldl
mov
std
mov
mov
and
lcall
push
push
mov
mov
je
dec
idivl
test
cmp
dec
loope
mov
std
xchg
test
add
pushf
sbb
sub
cmp
push
idivl
clc
jne
out
jbe
dec
jne
jge
jnp
ror
inc
subl
mov
divb
rcrb
pop
lea
ss
adc
dec
xchg
pop
clc
sbb
movsb
ljmp
into
jnp
jl
dec
mov
ror
bound
fcmovu
sahf
movsb
popa
mov
and
sahf
cmp
in
outsl
xor
into
sub
dec
clc
fwait
lds
ret
ret
or
push
jb
xorl
cmp
test
aam
cwtl
ret
pop
lahf
outsl
pop
mov
ret
xlat
sbb
cmp
sbb
sbb
inc
test
call
cld
shlb
inc
icebp
sarb
and
or
dec
call
sbb
or
std
out
mov
xchg
lret
add
in
mov
push
lds
repnz
pop
lahf
je
push
int3
dec
sub
push
mov
jno
stos
sub
fbstp
push
mov
rcll
ret
push
jle
or
js
stc
push
mov
mov
enter
mov
fsubrl
stos
dec
xchg
mov
std
in
cltd
sbb
lcall
out
es
jne
ja
mov
out
and
add
out
bound
dec
push
andl
or
dec
jl
and
outsb
iret
sbb
mov
mov
xchg
jge
mov
inc
push
xchg
jbe
stos
scas
popf
sbb
aaa
out
dec
cmp
fwait
pop
cmc
jmp
jns
jne
lret
arpl
xor
jo
dec
add
cmc
test
push
mov
movsl
sbb
lods
int
lods
add
js
dec
add
pop
fbld
scas
push
test
dec
mov
push
xchg
xor
pop
movsb
lods
dec
insl
cmp
inc
jp
es
pop
fldenv
pop
add
sbb
mov
test
cmp
out
jnp
sbbb
repz
ja
dec
sub
int3
test
aaa
iret
sbb
into
push
xchg
jbe
flds
popa
loopne
jae
xor
adc
jle
mov
push
xchg
push
jmp
mov
jp
bound
xchg
rol
out
in
inc
mov
xchg
lods
push
xchg
pop
dec
or
push
in
adc
into
mov
push
pop
rolb
das
xchg
cli
stc
leave
divl
sahf
cmp
cmp
inc
cmp
jnp
arpl
lcall
jecxz
cwtl
leave
mov
sbb
pop
scas
jg
call
loope
je
sbb
push
fbld
fstpt
enter
pop
xchg
inc
push
ret
xchg
xchg
in
xor
into
icebp
gs
movsb
movsl
shlb
add
add
outsb
movsb
mov
popf
mov
cli
xchg
pop
fucom
cs
jmp
subb
sub
ljmp
stc
int3
adc
cwtl
int3
inc
pop
sbb
push
mov
cmp
sbb
pop
sti
mov
mov
rcll
sub
xor
in
mov
sub
sbb
inc
xlat
jbe
dec
fisttps
cltd
outsl
push
xor
lods
push
loope
jne
pop
push
iret
jbe
insl
jbe
lods
cs
fwait
or
or
xchg
incb
pop
test
adc
push
imul
enter
leave
pop
mov
test
mov
mov
xor
addb
test
cwtl
sub
pminsw
cmp
movsb
push
push
mov
sarl
aad
out
xchg
xlat
or
mov
faddl
push
push
add
movsb
pop
inc
or
jp
ljmp
clc
jbe
and
push
call
aas
sub
jle
cmp
pop
pop
gs
lods
push
xor
and
xchg
mov
pop
pop
inc
in
xor
push
insl
xchg
inc
stos
lret
lds
pop
inc
lea
pushf
jge
push
insb
roll
inc
nop
hlt
inc
inc
inc
inc
cld
in
aad
ror
fldenv
jecxz
jbe
add
int3
mov
ss
js
popf
xor
cmp
pusha
mov
rorl
test
mov
mov
inc
xchg
push
insl
xor
ja
pop
push
mov
popa
mov
mov
push
and
mov
jb
call
repz
test
lock
jmp
popa
test
xchg
jg
inc
lock
lret
mov
sbbb
sbb
sub
sub
ss
loop
dec
or
push
cmp
xlat
outsb
inc
lret
push
add
xlat
add
dec
pop
cmp
push
mov
cmpsl
test
shrb
cld
adc
pushf
cltd
ja
pop
popf
insb
dec
popa
push
popa
push
scas
scas
das
insb
mov
add
aaa
int
cmc
daa
jp
cwtl
aas
das
mov
mov
outsl
leave
and
jle
addl
cmp
push
xchg
cmovge
iret
roll
ds
inc
mov
inc
pop
adc
and
rcrb
test
lcall
cmp
cmp
push
out
lea
lods
sbb
mov
cmp
mull
or
cmp
add
push
call
ljmp
cli
mov
cmp
repnz
rcl
dec
mov
mov
int3
jmp
scas
stc
jge
test
test
and
out
xlat
das
aad
push
test
and
ret
pop
xorl
add
inc
loopne
push
sbb
or
push
push
into
xchg
or
jno
dec
popa
loopne
mov
mov
cmp
mov
mov
mov
or
hlt
sub
hlt
in
dec
insl
clc
js
test
jo
hlt
or
jecxz
nop
std
pushf
adc
ficompl
daa
push
xchg
xor
imul
and
jnp
adc
lahf
mov
lea
lods
mov
push
in
mov
js
add
cmp
stos
mov
into
and
imul
popa
stc
xor
mov
sbb
dec
call
mov
maskmovq
testl
inc
shl
add
jnp
ja
cmpsb
xor
es
js
ret
imul
add
add
mov
jg
popf
or
fidivrl
ret
jmp
jno
adc
imulb
lock
arpl
lret
outsl
call
mull
push
push
lret
sbb
lahf
mov
out
xor
xor
sbb
sub
mov
xchg
out
push
xchg
mov
xchg
xlat
lret
subb
fcomps
mov
testb
jmp
jl
mov
mov
mov
pop
movsb
dec
mov
and
or
orb
xchg
je
rcrl
or
arpl
dec
pop
cmpsb
add
sub
sub
xchg
jmp
imul
cmpsb
xchg
imul
mov
shll
cld
mov
lock
nop
push
xlat
and
sbb
out
xor
sbb
pop
pop
movlps
aaa
jecxz
je
xor
add
call
dec
cmc
aas
movsb
sub
sub
scas
test
cmpsb
mov
fcomps
mov
std
repnz
mov
vpaddw
bound
sub
mov
aam
jmp
pop
scas
ss
ret
scas
adc
movsl
sahf
dec
xor
jl
fidivl
fstps
outsl
mov
ja
scas
fdivs
repz
fwait
and
insl
pusha
inc
js
mov
outsb
jle
sub
mov
cmp
loope
mov
fnstcw
arpl
and
popa
pop
fcomi
stc
adc
adc
in
push
jp
pop
add
popa
gs
or
xor
decb
test
mov
inc
xor
lret
sub
adc
outsb
loop
sbb
iret
sub
adc
lods
jno
inc
cli
mov
push
push
lcall
js
decl
jl
cwtl
leave
bound
xor
setg
ret
mov
test
push
and
push
or
outsb
dec
ljmp
mov
mov
sub
test
mov
into
push
outsb
call
dec
ja
fistpll
cs
push
sub
inc
aaa
and
aad
ret
add
je
test
notl
push
mov
or
sub
push
call
movsl
jl
movsb
dec
lea
stos
add
popf
lock
lock
inc
jp
or
cmp
cld
adc
cld
loopne
inc
out
xor
push
in
add
int3
jle
enter
push
xor
jmp
mov
pop
adc
jg
add
xchg
and
movsl
testl
and
clc
sahf
nop
shr
jb
lahf
dec
popa
addl
stc
dec
aam
ds
and
repnz
jp
lret
ret
dec
pop
mov
sbb
mov
fwait
mov
faddp
out
xchg
sub
push
and
stc
mov
sahf
dec
imul
mov
jbe
mov
mov
and
mov
sti
mov
test
mov
push
in
sbb
addr16
xchg
and
mov
das
idiv
icebp
aad
add
imul
cs
lret
cwtl
frstor
sub
enter
add
sbb
xor
ret
pop
dec
push
pop
jae
icebp
mov
fsubs
jo
dec
jno
ss
jmp
sub
inc
dec
jmp
xor
pop
and
cmpsl
or
sahf
jo
inc
repz
pop
add
or
sbb
cltd
dec
fsubrs
cmpsb
dec
mov
dec
cltd
int
pop
cld
sbb
imul
dec
daa
dec
sub
js
pop
xor
fwait
dec
cmp
xchg
ja
add
cli
add
inc
cltd
cld
jnp
jno
repnz
ret
add
adcb
mov
insb
fdivl
cmpl
in
xor
xchg
pusha
icebp
push
scas
jo
push
push
xor
pavgw
pop
jge
xchg
popf
fs
jne
push
lods
pop
jp
ficoml
in
int
fdivrs
std
andl
mov
adc
insl
pop
dec
aaa
sbb
mov
push
and
add
sub
movsb
push
out
repnz
dec
test
xor
push
pop
ret
rorl
push
frstor
int3
mov
and
xchg
xor
imulb
shl
xlat
inc
xchg
shl
popa
mov
inc
mulb
pop
fldenv
mov
or
dec
scas
aas
sbb
nop
xor
dec
cltd
enter
testb
inc
pop
arpl
test
mov
or
movsb
mov
ret
sub
mov
and
shll
mov
popa
mov
inc
scas
js
js
jne
lret
xor
xchg
and
push
sbb
dec
xchg
xlat
int
mov
push
mov
test
andb
jge
jle
adc
inc
push
dec
cmp
inc
xor
cmc
stc
jg
pushf
adc
inc
je
in
inc
jle
sbb
cmpsb
dec
jb
xor
cmpl
xchg
cli
roll
xor
cmp
or
and
xchg
pop
pop
fwait
popa
loope
push
cmp
mov
cld
cmp
cmp
or
mov
xor
xlat
cmpb
das
mov
sbb
mov
xlat
rol
push
loope
test
mov
adc
stc
popf
andps
fsts
insl
jecxz
or
faddl
add
repnz
je
in
pop
imul
insb
push
and
test
cwtl
mov
ja
enter
dec
dec
data16
sahf
xor
mov
pop
bound
lods
push
adc
adc
fcmovne
mov
cli
lcall
inc
xor
push
pop
leave
mov
xchg
sti
push
push
mov
je
xor
dec
ret
mov
xchg
sarl
lret
fnstenv
inc
daa
xchg
adc
xchg
sbb
or
ret
arpl
gs
cs
or
enter
dec
xchg
xchg
inc
xor
repnz
jle
mov
pop
addb
cmp
enter
lods
cmc
out
fs
subb
sti
mov
mov
movsl
imul
imul
or
ja
mov
push
jl
add
jp
insb
mov
xchg
dec
gs
xchg
int3
loopne
cs
jne
inc
std
aas
sub
cmp
gs
sub
sub
je
mov
iret
or
movsb
or
jno
sub
cs
cmp
lret
or
loope
int
movsb
cmc
or
test
add
dec
jbe
inc
popa
pop
mov
imul
fwait
jnp
cmp
lcall
in
pop
lock
xor
icebp
test
mov
in
pushf
xchg
aaa
mov
je
orl
int
lock
enter
xchg
jmp
aam
cmp
mov
mov
jmp
mov
jnp
arpl
jmp
es
xchg
mov
out
call
clc
mov
push
stos
pop
outsl
mov
pop
loopne
lret
movsl
push
lahf
insl
mov
mov
in
pushf
push
daa
pop
xchg
cmpl
cmp
outsl
push
sahf
inc
call
pop
xor
xchg
movsb
or
ret
ljmp
sub
cmpsb
inc
push
out
loope
lea
xchg
test
shll
xchg
adc
dec
pop
popf
pusha
pop
aaa
push
out
rorl
jns
push
scas
cmp
stos
fbstp
rolb
sbb
and
in
insl
icebp
loopne
mov
fsubl
pop
ror
insb
pop
sub
add
scas
les
mov
outsl
in
dec
jae
data16
pusha
mov
rcrl
daa
mov
fistl
sub
push
fcoml
and
add
mov
pop
pop
fmuls
jmp
lea
imul
mov
xor
fidivl
test
mov
push
std
aas
push
fisubrs
push
iret
xchg
fldcw
andl
and
xor
dec
shll
jl
push
adc
ss
pop
pusha
test
scas
sub
mov
cmp
rorb
jnp
