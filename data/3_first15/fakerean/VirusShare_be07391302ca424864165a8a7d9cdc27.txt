adc
jl
sbb
sub
inc
and
add
add
and
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
jne
xor
mov
jmp
xor
jmp
mov
mov
jmp
push
mov
push
mov
lea
push
lea
push
pushl
movl
call
mov
mov
and
neg
sbb
not
and
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
lea
mov
mov
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
mov
mov
mov
mov
mov
add
cmp
mov
je
cmpl
jne
call
mov
and
mov
mov
shl
shr
lea
lea
or
mov
mov
mov
add
cmp
movl
mov
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
or
mov
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
lea
or
call
subl
jne
push
push
push
lea
push
call
mov
pop
pop
pop
pop
add
ret
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
int3
int3
int3
int3
sub
push
mov
test
je
push
mov
movl
mov
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmpb
jne
mov
test
je
push
mov
lea
movl
call
mov
test
je
mov
mov
mov
push
call
lea
call
cmpl
je
xor
pop
pop
pop
add
ret
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
mov
cmpb
je
lea
call
test
je
mov
mov
add
push
push
push
call
pop
pop
pop
add
ret
mov
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
jne
push
push
lea
call
xor
add
cmp
je
mov
movl
mov
lea
cmp
movl
movl
movl
mov
mov
je
mov
mov
push
call
test
mov
je
mov
mov
push
call
mov
test
je
xor
call
push
mov
call
mov
mov
mov
push
mov
call
lea
call
pop
lea
jmp
add
jmp
push
mov
sub
push
mov
mov
test
je
testb
je
push
push
xor
push
lea
mov
call
lea
push
mov
lea
call
test
pop
js
pushl
mov
lea
mov
mov
call
mov
cmp
je
mov
lea
push
push
call
test
jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
cmpl
lea
jne
push
call
add
test
je
push
push
xor
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
mov
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
movl
mov
movl
call
or
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
or
or
or
or
and
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
pop
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
and
and
or
and
or
or
or
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
adc
pushf
add
adc
mov
add
adc
add
mov
int3
adc
add
call
sbb
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
push
push
call
mov
add
pop
push
loopne
movsl
stos
add
add
add
mov
add
mov
pusha
gs
clc
pop
add
add
add
mov
add
test
in
hlt
push
mov
add
push
push
lea
push
push
push
push
call
mov
mov
add
add
add
loope
lret
add
stos
add
push
pop
aam
pushf
jbe
add
pop
movl
jp
iret
push
out
add
pop
add
hlt
loop
aad
fnstsw
faddl
scas
jnp
cmpsb
repnz
jmp
add
lcall
inc
in
push
lea
push
push
push
call
clc
fwait
add
repnz
add
in
add
lods
cmpsl
fdivrs
jae
lret
jge
mov
push
sub
pop
push
push
push
push
push
lea
push
lea
push
push
call
xchg
les
pop
mov
in
rcr
add
into
add
pusha
add
mov
loope
add
scas
mov
add
gs
shrb
in
add
add
cld
add
xchg
fiaddl
lods
fdivs
cmpsb
add
add
cwtl
add
aad
rol
mov
aad
add
lcall
push
push
push
push
push
push
push
call
add
xchg
mov
add
loope
or
add
mov
fucom
out
addl
add
js
add
fbld
jmp
add
add
add
add
add
mov
add
pop
add
lea
jae
add
add
add
std
scas
mov
add
int3
arpl
add
test
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
lahf
add
add
arpl
pop
cld
add
add
aad
add
stos
mov
add
outsl
cltd
hlt
lds
add
add
jle
add
add
xchg
out
push
mov
roll
add
add
mov
test
fucom
out
pop
add
sub
pop
call
push
push
push
push
push
push
call
cltd
ror
mov
int3
imul
add
mov
xor
cmpsl
add
add
add
jmp
xchg
add
add
clc
jmp
push
add
xorl
in
call
push
push
push
push
lea
push
lea
push
push
push
push
push
push
call
jb
jle
out
scas
clc
add
mov
out
add
xchg
mov
mov
add
add
add
pop
iret
pop
fildl
pop
lret
sahf
xchg
mov
gs
lahf
mov
iret
mov
rolb
add
js
add
gs
add
out
xor
test
lcall
cmp
add
push
push
call
shl
addl
mov
jp
add
add
lret
outsl
add
fistl
call
mov
add
add
add
sub
pop
jmp
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
movsb
xchg
jge
orl
mov
lret
add
mov
lods
je
js
add
add
clc
scas
rcrb
add
push
push
push
push
push
push
push
call
cwtl
scas
add
add
add
stos
add
scas
iret
scas
xchg
add
mov
jo
add
aam
loope
add
addl
add
pushf
idivb
add
add
add
push
xchg
add
add
add
add
stos
xchg
fbstp
js
add
add
add
inc
hlt
push
push
push
push
push
call
scas
fwait
add
in
ja
add
lret
lods
add
sar
shll
out
mov
cli
faddl
movsl
xchg
lea
js
add
push
xchg
out
add
lcall
test
add
movsl
mov
add
jns
add
xchg
add
fnstsw
mov
jae
push
rorb
mov
push
push
push
push
call
xchg
mov
add
push
shlb
leave
add
add
add
add
pushf
add
add
add
add
add
add
add
push
push
push
push
call
jl
add
add
add
add
add
add
lock
push
jp
testb
mov
fucomi
lock
loop
bound
add
add
add
je
repnz
scas
loope
in
lock
lcall
ret
cmp
add
push
push
push
lea
push
call
add
aam
add
scas
test
out
incb
add
lret
rorl
xchg
mov
cli
add
add
lods
xchg
add
xchg
xchg
add
out
jge
mov
add
out
mov
lret
js
push
add
lcall
pop
add
repz
or
dec
push
or
inc
add
rol
ror
dec
sub
sub
xor
pop
add
pop
push
push
push
push
push
push
call
mov
add
subl
lcall
scas
mov
mov
cmpsl
push
add
add
loopne
add
fs
add
add
clc
arpl
jnp
add
add
xchg
jge
in
call
push
push
push
call
lea
lahf
out
fwait
insb
xchg
into
movsl
add
fcmovb
in
add
add
add
fistpl
jle
add
add
add
push
jo
add
xchg
adcl
jmp
mov
hlt
lcall
mov
add
mov
push
lea
push
push
push
push
call
push
lahf
add
addb
pop
add
lcall
fstps
lcall
lret
repnz
add
add
cmc
xlat
clc
aad
sub
pop
movl
push
push
call
fiadds
add
xchg
add
add
stc
add
add
insb
int3
add
filds
add
fstl
add
aam
cltd
add
in
add
push
add
lods
mov
add
rolb
jno
push
mov
inc
call
sbb
fimuls
jecxz
mov
push
push
lea
push
push
call
xchg
xchg
faddl
jb
add
cld
iret
add
mov
add
add
add
push
add
repnz
add
add
pop
ja
test
jns
test
add
hlt
sub
pop
push
pushl
push
lea
push
push
push
push
push
push
push
lea
push
call
fsubs
push
add
add
mov
mov
lcall
pop
scas
fldenv
add
add
mov
sub
pop
pushl
call
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
xchg
add
pop
scas
add
movsb
add
clc
add
je
cmpsb
clc
add
jb
push
add
push
push
cmc
faddl
mov
hlt
add
loope
leave
jle
jb
add
add
scas
add
loopne
pushl
push
push
push
lea
push
call
imull
push
add
add
add
mov
idiv
add
mov
add
pop
mov
imul
lock
pushl
push
push
push
lea
push
lea
push
call
fwait
add
add
pop
sahf
test
xchg
add
out
lods
add
add
imul
insb
ljmp
xchg
pop
mov
fistps
mov
test
mov
in
pop
call
push
push
ror
push
push
pop
add
lea
sub
sub
shr
pop
xor
sub
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
call
mov
sub
push
lret
xchg
add
gs
push
add
add
add
ret
mov
jl
js
add
sar
mov
lods
add
mov
fs
add
add
pop
out
popl
add
int
pushf
add
shrb
add
add
add
mov
jmp
in
fdivr
lcall
jne
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
add
out
pop
jle
mov
add
lcall
test
add
jmp
add
faddl
add
add
fcompl
cmp
add
push
push
xor
push
sub
add
add
not
sub
shr
sub
inc
pop
dec
add
inc
add
pop
push
push
push
push
push
push
push
push
push
call
rcl
stos
popl
out
add
neg
add
add
pop
add
add
divl
add
jnp
add
add
push
push
int
add
push
lea
outsl
add
add
add
add
xchg
add
fdivr
lcall
push
push
lea
push
call
lret
mov
mov
rolb
add
cmc
lock
mov
lret
add
mov
call
add
add
arpl
xor
push
push
push
push
push
call
jnp
movl
add
add
scas
add
sbbb
add
add
movsb
xchg
rcrb
popf
fistpll
add
stos
pop
add
testl
sahf
add
movsl
add
pop
fistps
pop
xchg
mov
jne
in
fdivr
lcall
rclb
mov
pop
add
add
in
xchg
out
pop
add
mov
add
lret
arpl
jae
imul
mov
and
add
add
lret
les
xchg
add
roll
add
add
ja
lods
add
push
movl
jns
add
add
lret
ret
add
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
call
xchg
divb
addb
jne
in
mov
add
test
test
add
xchg
rcl
add
push
jae
movb
int3
sub
pop
push
push
push
call
pop
jl
push
icebp
jp
add
movsb
testb
test
xchg
add
jl
add
jns
test
leave
push
in
xchg
jae
add
movsb
jo
sbbb
add
pop
rclb
mov
into
sub
pop
mov
add
push
push
push
push
call
jae
jle
lret
mov
mov
jmp
jae
mov
add
clc
jp
add
push
jl
shl
add
idivb
mov
lcall
ret
add
add
push
push
push
push
push
push
call
push
jmp
add
fldln2
mov
add
add
add
pusha
popf
in
fcmovu
add
bound
mov
sahf
data16
push
push
add
jmp
push
in
jne
out
nop
push
mov
cmc
add
arpl
rol
sub
pop
add
push
push
push
push
push
push
push
lea
push
call
mov
jp
std
andb
add
add
add
add
out
mov
mov
xchg
add
out
jmp
lock
add
mov
add
jb
push
lret
in
add
int3
bound
test
into
add
lret
add
jns
mov
add
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
lea
push
call
in
in
call
add
icebp
push
jle
lods
add
xchg
jecxz
add
cld
cmpsb
add
add
add
clc
add
add
pop
push
aad
add
movsb
lret
data16
sti
arpl
add
fcmovbe
ljmp
testl
mov
jmp
lcall
xor
push
push
push
push
lea
push
lea
push
push
push
push
call
outsl
add
rolb
add
add
add
jle
movsb
test
jge
add
add
jecxz
jb
add
lcall
addl
out
jle
add
mov
add
mov
in
add
ja
add
loop
mov
repnz
add
mov
add
in
fdivr
lcall
les
add
push
push
push
push
lea
push
push
push
push
push
push
call
lea
imul
jl
loopne
add
add
xlat
add
add
add
add
push
movsb
lods
xchg
push
add
add
aad
add
jo
je
add
add
xchg
fimuls
push
stos
add
pop
mov
jae
mov
add
add
add
jns
std
into
icebp
popl
sub
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
call
movsb
mov
mov
mov
add
scas
popf
add
add
jae
test
in
mov
add
cmpsl
testb
pop
push
push
push
push
push
call
add
add
lods
les
add
mov
icebp
push
add
icebp
sahf
rolb
cld
mov
outsl
iret
add
into
mov
in
lock
lcall
inc
or
mov
push
push
push
push
push
lea
push
lea
push
call
movsb
movb
stos
cmc
add
add
data16
add
mov
xchg
jl
mov
add
fdivrp
xchg
add
lcall
add
add
push
add
in
fadds
add
rol
jecxz
add
sti
adcl
aad
add
add
cwtl
add
aam
add
fldl2e
add
movsb
gs
add
sub
pop
add
pop
push
push
lea
push
push
push
push
call
xchg
add
lahf
add
lods
cld
lahf
add
add
fadds
jno
xchg
pop
add
cmc
lds
add
add
rolb
in
push
add
add
add
jno
mov
call
xor
push
lea
push
push
call
movsb
ret
add
pop
add
lret
loope
xlat
push
jns
jmp
xchg
jne
mov
add
lds
add
gs
add
popa
xchg
add
add
add
ja
add
add
add
add
push
add
lods
mov
sub
pop
push
push
lea
push
push
push
push
push
lea
push
push
push
call
icebp
arpl
add
imul
mov
hlt
push
pushf
add
pop
push
add
add
add
loope
loope
fwait
pushf
add
std
pop
lahf
mov
jle
jb
add
pop
testl
pushf
iret
popf
std
stos
mov
add
leave
add
mov
sub
pop
mov
xor
push
push
lea
push
push
lea
push
lea
push
push
push
push
call
fldl
add
add
std
add
add
add
out
add
add
xchg
scas
stos
test
in
in
mov
push
bound
test
les
rcrl
mov
rcl
int3
jo
add
sahf
add
xchg
sahf
mov
mov
pop
sub
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
xchg
nop
xchg
lret
mov
clc
ljmp
int
add
xchg
test
mov
add
int
fiadds
int
push
add
in
fdivr
lcall
push
push
push
push
push
lea
push
push
call
fisttps
add
mov
mov
push
rolb
add
in
add
add
mov
enter
mov
out
push
jb
add
add
data16
icebp
lds
scas
popf
add
mov
push
imul
add
add
sub
pop
rep
pop
push
push
push
push
call
add
add
in
add
movsl
add
iret
add
cmpl
add
add
xchg
add
add
add
pop
int3
scas
add
add
mov
mov
add
out
xlat
mov
popf
into
add
add
pop
hlt
add
push
shr
xor
dec
shl
pop
add
add
push
push
push
push
push
push
push
push
push
lea
push
call
add
push
add
sbb
pop
add
xchg
gs
add
call
sahf
mov
add
add
ja
add
add
mov
ret
add
lcall
inc
and
or
dec
push
push
push
lea
push
call
cmpsb
aad
add
xchg
mov
add
add
fsub
add
add
faddl
xchg
add
add
pop
ret
movb
faddl
add
andl
add
mov
add
call
add
add
sub
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
je
test
mov
jle
pop
shl
mov
loope
add
lods
test
mov
add
cltd
repnz
mov
mov
scas
movsl
jecxz
ja
pop
mov
add
add
scas
ljmp
add
add
mov
cmpsl
jl
add
cmpsb
add
mov
add
push
lea
xor
add
lea
pop
mov
xor
push
push
lea
push
push
push
push
push
call
lds
mov
add
mov
add
add
bound
negl
roll
scas
lret
scas
mov
xchg
mov
fcompl
enter
fs
fisttps
stos
xchg
and
fidivs
popf
add
cmpl
dec
sub
or
fistl
xchg
loopne
fsts
add
lahf
in
add
addl
addb
push
add
out
fildl
add
stos
js
add
jb
add
mov
addb
scas
in
je
addl
loopne
mov
add
jle
cmpb
add
fdivrs
add
add
add
xchg
xchg
add
in
lcall
or
push
push
push
push
push
push
push
push
push
push
call
add
lcall
add
ret
cmpsl
jno
movb
add
add
test
push
add
add
add
mov
xchg
add
add
movsb
lods
fwait
in
lock
mov
add
add
in
add
mov
xlat
call
out
loop
add
fcomps
les
lea
push
lea
push
push
call
add
cld
addr16
cmpsb
add
test
add
add
mov
add
add
test
scas
add
fbstp
push
out
pop
push
add
int
push
enter
add
add
movsb
lods
mov
add
pusha
xchg
add
mov
mov
sub
pop
add
push
ror
shr
pop
add
push
push
call
add
add
cmpsb
jmp
add
add
mov
mov
mov
add
add
scas
fsubs
push
add
add
add
roll
pop
fistpl
sub
pop
mov
push
push
shl
shl
shr
push
xor
add
not
not
xor
dec
sub
not
add
pop
pop
push
not
add
shr
sub
pop
pushl
push
inc
ror
pop
call
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
add
add
add
add
jo
shlb
add
pushf
loope
sti
popl
add
test
push
shll
add
popf
sub
pop
push
push
push
not
not
push
sub
add
shr
sub
sub
shr
pop
shr
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
popa
test
ror
add
add
add
push
jge
stos
add
mov
add
test
add
add
pushf
add
mov
lods
into
stc
add
lea
popa
add
mov
in
fcomps
push
not
sub
pop
push
push
push
push
call
lret
push
add
add
add
int3
mov
testb
add
loopne
mov
mov
int3
add
mov
add
leave
test
lock
add
add
jecxz
test
jecxz
mov
fisubrl
jns
stos
pop
add
mov
cmc
add
mov
sub
pop
call
push
push
push
call
je
add
enter
add
mov
add
fsubrs
jecxz
lods
mov
shll
into
aam
add
add
add
fnstsw
push
mov
movsl
mov
popa
pushf
add
mov
sub
pop
mov
push
lea
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
add
mov
add
add
rolb
xchg
cwtl
add
mov
add
popl
add
lock
sahf
pop
add
add
aad
pop
add
subb
fldenv
mov
jge
add
scas
add
add
push
push
push
push
push
push
call
stos
insb
fildl
add
add
add
mov
add
add
add
ret
add
mov
int
add
mov
add
aad
movsl
in
data16
push
lea
mov
in
call
mov
push
sub
shl
pop
add
push
push
push
push
push
push
lea
push
call
mov
push
xchg
subb
int
gs
add
stos
mov
rolb
push
add
cld
mov
pop
add
add
add
movsb
popf
add
mov
add
neg
aam
add
jmp
hlt
les
sub
pop
add
add
push
lea
push
push
push
push
push
lea
push
push
push
call
add
mov
push
add
in
add
test
xchg
test
add
pop
jns
add
lcall
add
js
lcall
add
add
movsl
mov
add
xlat
xchg
jmp
fcompl
jae
push
push
lea
push
lea
push
push
push
push
call
popl
add
mov
cmpsl
push
repnz
scas
imul
lahf
add
out
add
add
add
add
xchg
mov
lcall
loope
sub
pop
xor
push
push
push
push
push
push
push
call
pushf
xchg
pushf
enter
mov
mov
ret
rcrb
add
nop
data16
out
add
fcomps
add
popf
cmpsl
add
jnp
jb
xorl
loope
add
add
clc
add
add
push
pop
add
push
pop
push
mov
push
push
push
push
push
lea
push
push
call
add
pop
out
xchg
rolb
icebp
jle
lock
mov
nop
pop
in
pushf
mov
add
imul
mov
cli
add
mov
pop
lea
mov
sub
pop
xor
push
push
lea
push
push
push
push
call
stos
add
add
push
xchg
roll
add
imull
movsb
in
test
add
int3
pop
ja
lock
mov
stos
add
push
add
xchg
movl
jmp
add
test
add
lcall
hlt
jbe
faddl
push
add
add
into
xchg
jp
in
call
add
add
push
push
push
push
call
add
mov
clc
mov
add
pushf
rcr
add
mov
repnz
pop
add
jae
add
add
add
push
test
add
rcr
sub
pop
add
push
push
push
push
push
call
aam
add
add
add
add
faddl
push
add
pop
test
aad
push
xchg
jp
repnz
add
add
lea
cltd
jae
sbb
mov
ror
in
add
jge
rcll
cmc
add
add
fldl
gs
add
lcall
mov
xor
push
push
push
push
call
add
add
cmc
add
arpl
add
repnz
mov
xchg
cli
loope
popa
add
mov
cwtl
test
movsl
pop
add
add
add
add
add
std
add
sub
pop
rep
push
push
push
push
push
call
add
add
fs
cmc
add
jno
cld
add
imul
push
add
add
pop
popf
add
add
gs
add
stos
mov
add
add
stos
pop
xchg
rcrb
xchg
into
add
mov
add
xchg
aam
mov
in
in
lcall
dec
and
cmp
outsl
xchg
arpl
bound
jbe
arpl
add
add
add
jnp
add
add
push
push
mov
cli
add
add
add
mov
movsl
add
add
stos
jo
mov
icebp
fbstp
xchg
add
mov
jno
lea
add
add
fcoms
push
push
add
push
movsb
add
push
test
in
loopne
lcall
or
push
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
loopne
adc
test
add
add
movl
pop
add
lea
mov
out
add
add
pusha
mov
out
xchg
cli
add
add
add
pop
xchg
int3
int
add
js
jo
aad
jl
add
shll
hlt
sub
pop
add
push
shr
sub
lea
add
pop
or
je
push
lea
sub
dec
pop
mov
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
shll
jle
popa
add
cmpsl
add
fadds
add
fistpll
add
cmpsl
add
mov
lret
addl
pop
xorb
sahf
xchg
add
fildll
popa
jno
mov
add
fdivr
lcall
xor
push
lea
push
push
call
jae
out
cwtl
jns
shl
mov
imul
sahf
add
fimuls
add
ficomps
add
sub
pop
add
push
lea
push
push
push
call
cld
add
movsl
add
add
jecxz
fimuls
leave
push
popa
add
cli
cli
add
add
add
add
add
add
clc
imul
add
add
lret
pop
je
lret
mov
add
add
xchg
cmc
in
add
ret
add
sub
pop
mov
xor
push
dec
rol
pop
add
push
push
push
call
add
movsl
push
push
add
add
addb
add
roll
jns
arpl
mov
out
cmpsl
pop
add
add
std
push
aad
add
sahf
fildl
mov
jo
pushf
pop
je
xchg
out
add
sti
add
shl
cmpsl
fldenv
add
push
add
out
in
in
in
hlt
pop
add
push
add
pop
push
push
push
push
push
push
push
call
mov
mov
add
add
movsl
add
mov
mov
add
mov
pop
pop
popa
test
mul
in
push
add
add
push
lods
int
mov
pushf
mov
mov
xor
push
not
lea
lea
pop
add
push
add
pop
pop
rep
push
xor
xor
xor
shr
pop
mov
push
push
push
push
push
push
call
add
add
xchg
add
jecxz
mov
add
add
add
xchg
pop
add
push
int3
fsub
call
add
cltd
sbbl
mov
add
xchg
loope
ljmp
pop
out
mov
rclb
lcall
or
push
push
call
add
mov
xchg
add
stc
imul
mov
cld
jno
add
add
pusha
jo
out
add
in
test
subl
je
test
push
push
nop
leave
jns
pop
lea
jnp
add
mov
sub
pop
add
push
lea
push
push
push
push
call
jle
lcall
mov
add
add
fucomp
test
rolb
jns
shl
movsl
rorl
add
sahf
outsl
cmpb
ret
add
mov
movsb
add
popf
add
std
add
popa
add
jno
sub
pop
or
je
push
push
lea
push
call
add
add
mov
insb
mov
xchg
add
add
arpl
into
add
add
shl
arpl
fidivl
push
add
mov
rcr
loopne
add
add
add
push
add
mov
mov
lcall
mov
hlt
pop
mov
push
sub
add
sub
shr
pop
add
add
push
shl
inc
shr
shl
pop
rep
push
xor
add
lea
rol
pop
pop
push
push
add
rol
push
or
inc
add
sub
sub
sub
sub
sub
rol
pop
rol
pop
push
sub
shl
lea
inc
pop
pop
mov
push
lea
push
push
push
lea
push
call
xchg
add
add
clc
push
movb
mov
je
add
add
fsubp
mov
add
add
out
mov
add
add
add
mov
add
leave
add
xlat
mov
add
out
fistps
sub
pop
mov
mov
push
dec
pop
jmp
push
push
dec
pop
mov
add
push
shl
not
xor
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
add
jp
add
cld
incb
enter
mov
xchg
add
fwait
add
jnp
in
pop
cmc
imul
pushf
add
bound
movsl
mov
add
add
vpaddq
mov
mov
add
add
cmpl
jl
outsl
int
mov
lods
add
jns
mov
add
loop
in
loopne
push
push
push
dec
pop
push
push
ror
dec
pop
mov
push
add
pop
pop
push
inc
pop
pop
push
sub
pop
pop
pop
push
push
push
push
push
push
call
insb
mov
jne
mov
xchg
add
add
popf
add
les
add
add
mov
add
add
mov
add
add
call
push
push
push
lea
push
push
call
hlt
add
loope
decb
outsl
push
add
cld
scas
cwtl
stos
lahf
in
add
mov
iret
fcomps
stos
add
add
add
pop
cld
in
add
lods
movsb
lahf
mov
add
add
jp
loopne
mov
add
loope
int3
scas
jge
mov
sub
pop
ret
push
push
lea
push
lea
push
push
push
lea
push
call
mov
mov
bound
add
add
add
fwait
call
movsb
add
add
cld
imul
mov
lret
add
add
in
icebp
jb
add
fldl
lds
xchg
mov
aad
add
rolb
add
test
mov
in
push
push
push
call
aam
and
addl
int
mov
jo
test
aam
add
addl
std
stos
add
int
jecxz
fildl
frstor
push
mov
pop
add
pop
add
mov
sub
pop
mov
add
push
add
pop
push
push
push
lea
push
push
push
push
push
call
add
mov
add
xor
vprotd
mov
mov
mov
xchg
add
push
mov
add
iret
fwait
popa
lods
jp
int
popf
add
lods
mov
mov
push
push
lea
push
call
add
add
add
add
jecxz
jae
add
cli
add
add
out
scas
into
jmp
jp
lods
add
sti
add
mov
add
xlat
lock
pop
add
mov
jle
add
add
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
fs
add
add
out
add
jecxz
xchg
fucomip
mov
xchg
stos
add
in
repnz
add
add
add
fiaddl
mov
pop
and
add
mov
in
in
lcall
inc
cld
add
add
push
shl
xor
pop
addl
push
shr
sub
ror
pop
test
je
mov
push
lea
push
push
call
aad
leave
repnz
add
add
jno
add
add
addb
jmp
add
mov
mov
out
stc
mov
cltd
mov
hlt
add
jge
cltd
add
cld
loope
mov
movl
sub
pop
pop
push
rol
pop
pop
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
jns
xchg
add
add
xchg
lahf
mov
add
in
rcll
pop
jae
add
into
add
add
sahf
add
add
xlat
fs
add
jb
pop
out
add
add
jmp
fcoml
xchg
add
flds
popa
add
add
enter
add
add
lret
lcall
push
lea
push
lea
push
push
call
fidivrl
add
pop
mov
gs
xchg
add
mov
scas
mov
add
add
add
mov
in
mov
pop
push
add
add
rolb
pop
leave
push
push
push
call
add
push
add
add
add
xchg
add
jbe
mov
mov
add
mov
add
mov
add
add
push
ljmp
ja
mov
mov
addb
add
pop
add
popf
push
add
in
hlt
pop
ret
push
push
push
lea
push
call
jae
mov
pushf
sti
add
sahf
add
mov
add
iret
cmpsb
cld
push
popf
icebp
cld
pop
mov
add
cwtl
cli
push
imul
lcall
push
lea
push
call
add
add
fildl
add
loope
add
cmc
rolb
in
mov
mov
jb
pop
aad
add
push
movl
mov
sub
pop
mov
push
push
push
call
lods
add
add
lahf
jne
rolb
add
add
jno
add
add
cli
mov
jae
pop
iret
addr16
mov
hlt
lcall
cld
push
push
sub
ror
rol
pop
push
push
push
xor
add
lea
pop
push
push
sub
sub
pop
testl
addl
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
mov
jmp
add
out
cltd
fdivr
add
fwait
roll
cld
mov
jl
ret
push
add
mov
je
jge
sub
pop
push
push
add
lea
pop
call
mov
push
push
push
call
mov
add
add
xchg
stos
add
out
pop
lds
pop
add
jae
mov
add
hlt
leave
popl
add
add
lods
add
add
add
fbld
popa
fmulp
add
movsl
jns
add
loopne
in
hlt
lcall
jne
push
shr
shl
pop
push
push
inc
shr
add
lea
pop
push
push
shr
add
lea
pop
call
push
lea
push
push
lea
push
push
push
push
push
call
add
add
jnp
add
add
pop
popf
add
add
add
lods
pusha
jbe
pusha
test
add
stos
push
jle
add
add
jbe
add
sub
pop
cmpl
jne
push
xor
dec
pop
pop
push
lea
push
push
push
lea
push
push
call
add
add
stc
add
lods
add
add
mov
add
subl
ljmp
add
add
jp
pop
test
add
push
loop
addr16
iret
add
add
add
mov
cltd
stos
add
add
add
js
insb
cwtl
mov
cli
mov
popf
add
pop
pop
pop
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
insb
add
add
add
add
hlt
sahf
nop
add
fmull
sahf
mov
int3
fildl
add
data16
add
out
orb
in
fcompl
leave
push
push
lea
push
push
lea
push
push
call
jns
loop
add
roll
mov
add
pop
push
in
cmc
add
add
imul
xchg
xchg
mov
mov
call
push
xor
sub
pop
push
push
xor
sub
pop
mov
push
dec
sub
shr
pop
add
push
lea
xor
pop
push
push
push
add
sub
pop
push
push
lea
push
push
push
push
push
push
push
push
push
call
jge
into
add
stos
add
add
push
add
add
fiadds
popf
add
pop
fldt
add
pop
in
cli
add
jle
xchg
cmpsl
mov
add
outsl
add
test
roll
add
add
mov
push
js
jge
mov
shl
int3
pushf
mov
imul
stos
hlt
int3
cwtl
add
movl
push
push
lea
push
lea
push
call
add
in
stc
rcrl
imul
jge
loopne
xchg
push
mov
add
add
rolb
xchg
push
nop
clc
cmpsb
fiadds
mov
jecxz
mov
hlt
cmpsl
roll
mov
add
loopne
shrl
mov
in
lock
lcall
add
psubb
call
leave
xchg
int3
sub
pop
push
push
add
dec
pop
call
subl
push
add
pop
cmpl
jne
pop
push
add
add
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
add
add
cwtl
out
popf
lret
add
in
mov
add
fistps
sti
mov
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
xchg
pusha
rol
add
pop
popf
mov
add
add
mov
add
jb
mov
test
add
add
add
cmpsl
jb
shlb
add
add
add
test
add
mov
add
add
add
add
sub
pop
pop
leave
push
inc
sub
pop
ret
push
push
lea
push
lea
push
push
push
call
jno
add
add
int
roll
adc
add
rolb
nop
mov
repnz
jne
mov
out
xchg
add
add
add
add
add
mov
add
sti
rcrl
enter
sahf
nop
add
rolb
add
sub
pop
mov
push
push
push
call
pop
add
add
add
add
add
add
insb
add
gs
add
add
add
call
insb
add
cmpsl
add
add
lret
add
add
jo
jp
mov
add
add
arpl
imul
in
hlt
lcall
cld
push
push
push
push
call
rcr
xchg
add
addr16
enter
jmp
test
jo
add
xchg
ja
add
call
pop
push
push
push
add
pop
push
push
add
pop
push
push
rol
xor
pop
mov
push
xor
pop
lea
push
push
push
lea
push
call
sti
add
add
push
add
push
add
add
lods
neg
add
add
cld
jbe
mov
arpl
sub
pop
sub
push
ror
add
inc
lea
pop
mov
shr
push
lea
not
pop
add
push
push
call
fwait
mov
xchg
mov
lret
flds
add
xchg
xchg
add
add
mov
cmc
xlat
addb
add
xchg
pop
add
add
testb
mov
add
mov
xchg
add
xchg
sub
pop
mov
push
push
call
aam
cld
xchg
pop
iret
fmulp
lret
out
call
push
add
stos
out
scas
xchg
add
fiaddl
stos
mov
pop
mov
push
push
push
push
lea
push
call
mov
add
mov
mov
stc
add
mov
add
add
add
add
xchg
out
mov
icebp
loopne
iret
pop
jmp
filds
add
cmpsb
mul
out
add
add
fmul
imul
push
mov
mov
add
loopne
mov
pop
add
push
shr
pop
add
push
shl
shr
pop
mov
push
push
push
push
call
add
enter
add
cli
imul
jns
addl
add
add
mov
jge
add
add
lock
mov
cmp
jne
push
not
add
lea
sub
pop
cmp
jne
push
push
push
push
call
sahf
lahf
add
add
lea
mov
popa
lds
mov
gs
mov
mov
mov
nop
pushf
mov
out
add
add
add
in
lock
mov
push
shl
pop
movl
jmp
push
push
push
push
push
push
push
push
call
add
add
fiaddl
add
add
mov
pushf
outsl
add
stc
repnz
add
add
cli
xchg
add
add
mov
add
lcall
inc
cld
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
mov
add
lret
add
add
lcall
sti
incb
movsb
push
rcl
add
roll
lods
mov
in
fcomps
push
or
adc
test
add
add
mov
jecxz
jmp
push
call
int
add
test
jecxz
call
pop
add
mov
pop
in
add
imul
add
add
addb
mov
mov
imul
add
add
jl
cwtl
leave
add
add
inc
adc
add
add
push
ror
xor
shr
pop
jmp
push
lea
push
push
push
push
push
push
push
lea
push
push
call
mov
mov
xchg
in
enter
jns
push
clc
push
add
add
add
repnz
fidivl
in
fdivr
lcall
inc
cld
mov
push
push
push
push
push
lea
push
push
call
add
clc
mov
add
add
add
lods
mov
add
aam
add
adcb
xchg
add
add
jp
add
add
mov
add
mov
add
je
add
push
push
add
lcall
cli
add
test
add
push
lea
push
push
push
push
push
push
push
push
call
imul
cld
add
xchg
add
add
push
xchg
insb
add
add
addl
lds
add
jne
hlt
add
add
add
stc
add
add
cmc
add
mov
xchg
inc
adc
add
add
add
jmp
mov
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
lods
hlt
int
push
add
in
repnz
out
pop
insb
jne
add
mov
add
add
add
push
mov
add
int
repnz
push
add
add
scas
add
lahf
add
cmpsb
data16
std
add
jmp
cmpw
jne
push
push
call
add
add
lds
cmp
scas
test
test
stos
push
mov
outsl
xchg
add
add
fisttpll
add
mov
lcall
inc
adc
rorl
mov
movl
jmp
push
sub
not
lea
ror
pop
pushl
push
rol
pop
pop
push
push
push
lea
push
push
push
push
push
push
call
add
jl
add
mov
fldt
add
fdivrl
xchg
mov
jmp
lods
jns
add
fwait
push
add
pop
bound
jno
sub
pop
mov
push
sub
dec
pop
mov
push
inc
pop
mov
push
push
sub
push
push
pop
add
not
sub
sub
dec
sub
not
pop
pop
push
add
pop
push
call
push
ror
add
pop
cmpl
je
push
push
dec
rol
shl
push
push
pop
add
shl
shr
inc
dec
sub
sub
sub
shr
pop
rol
sub
add
pop
push
dec
shl
rol
pop
push
call
push
add
sub
not
lea
pop
cmpl
je
push
push
sub
shr
push
or
inc
add
ror
sub
dec
sub
xor
pop
not
rol
dec
pop
push
push
push
push
push
push
push
call
lret
add
push
js
add
clc
rcll
mov
fwait
jbe
mov
jmp
test
add
add
movsb
mov
into
add
mov
mov
into
add
add
jecxz
add
add
xchg
scas
outsl
jo
jb
mov
lcall
push
not
rol
inc
lea
pop
call
push
lea
push
push
push
push
push
push
push
push
push
call
add
jae
jne
repnz
add
jmp
add
add
idiv
mov
add
je
ljmp
add
in
cld
add
movsb
add
xchg
add
mov
xchg
lret
add
add
add
add
in
fdivr
lcall
cmp
add
int3
je
push
push
dec
dec
push
push
pop
add
ror
xor
sub
add
xor
pop
rol
sub
not
pop
push
sub
inc
pop
push
call
push
add
pop
cmpl
je
push
push
shl
shl
add
push
sub
add
not
add
sub
sub
add
pop
shl
xor
pop
push
not
pop
push
call
push
dec
lea
pop
cmpl
je
push
push
rol
sub
sub
push
sub
add
add
inc
inc
sub
shl
add
pop
add
ror
pop
push
not
pop
push
call
push
inc
pop
cmpl
je
push
push
inc
push
push
pop
add
sub
sub
sub
dec
pop
xor
inc
ror
pop
push
push
call
les
shl
add
lret
repnz
stos
jbe
jmp
mov
jle
add
int3
push
pop
xchg
add
add
popf
add
jns
add
roll
add
mov
mov
add
add
add
add
sub
pop
push
push
xor
pop
call
cmpl
je
push
push
shl
sub
ror
lea
push
or
not
add
xor
shr
sub
dec
sub
add
pop
add
sub
dec
pop
push
push
call
jecxz
cltd
rcll
cmc
test
add
icebp
add
test
add
loopne
lahf
add
cld
loopne
nop
mov
rcr
testb
jo
mov
addr16
jp
add
shrl
rolb
pop
cmpsl
mov
andb
add
iret
add
jb
popl
sub
pop
push
push
push
push
push
push
push
push
call
fs
cltd
outsl
fiadds
in
xchg
add
add
clc
mov
add
popf
mov
add
bound
mov
add
xchg
add
add
add
add
mov
pop
flds
clc
add
add
sub
pop
call
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
push
call
jle
mov
lahf
pop
xchg
mov
pusha
shr
add
add
ret
add
int3
add
add
add
loopne
add
mov
xchg
je
ja
jne
add
add
loop
jno
add
clc
fcmove
add
add
add
cli
lea
add
mov
lahf
icebp
add
cld
mov
sub
pop
cmpl
je
push
push
xor
push
or
inc
add
lea
dec
dec
sub
shr
not
not
pop
inc
pop
push
sub
xor
add
pop
push
push
sub
inc
shl
shr
pop
call
push
push
push
push
push
push
push
call
mov
add
out
mov
in
add
push
add
cli
add
scas
lods
lods
stos
mov
add
add
jns
roll
scas
int
add
push
sub
pop
cmpl
je
push
push
not
ror
push
push
pop
add
rol
sub
ror
ror
pop
shl
add
pop
push
push
push
push
call
jnp
test
ficompl
add
jae
cwtl
push
add
ljmp
add
out
cmpsl
add
jmp
add
cld
mov
out
fsubl
add
xchg
add
add
add
add
mov
test
add
add
add
sub
pop
push
call
push
shl
ror
pop
cmpl
je
push
push
inc
add
push
and
add
inc
sub
rol
sub
lea
rol
pop
not
pop
push
add
dec
pop
push
call
push
push
lea
push
call
movsl
icebp
call
add
jne
mov
add
jne
xchg
mov
iret
fndisi(8087
add
lods
add
loop
mov
std
jb
in
hlt
pop
cmpl
je
push
push
inc
not
ror
add
push
and
add
not
shr
sub
pop
inc
pop
push
sub
add
pop
push
push
push
push
lea
push
call
add
add
test
in
mov
out
add
add
add
lahf
add
add
in
hlt
repnz
rolb
add
int3
fs
add
pop
add
ret
add
sub
pop
call
push
sub
sub
sub
pop
cmpl
je
push
push
add
shl
push
sub
add
inc
sub
xor
pop
not
not
pop
push
push
push
lea
push
call
iret
jns
cld
imul
add
out
push
add
add
add
addl
add
imul
jecxz
add
in
add
icebp
mov
jbe
push
cmpsl
shl
test
into
add
je
add
sub
pop
push
push
lea
push
call
add
add
jne
mov
mov
add
add
add
add
add
mov
out
add
add
add
add
pusha
pop
mov
add
nop
aad
loopne
mov
add
push
add
jge
in
clc
pop
call
cmpl
jne
push
not
dec
ror
pop
mov
push
dec
pop
movl
jmp
push
push
push
push
call
jge
xlat
add
xchg
pop
push
leave
add
movsl
add
add
sub
out
cli
testl
add
aad
std
add
xchg
xchg
add
add
ror
jo
movsb
jl
add
add
into
add
in
data16
test
push
sbbb
xor
pop
push
push
push
call
add
mov
repnz
add
add
mov
int
cli
loop
mov
cltd
add
jae
add
xchg
lods
pushf
mov
pop
push
not
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
leave
mov
jmp
arpl
add
jbe
jnp
shll
stc
mov
movsb
push
add
add
fdivr
lcall
leave
push
dec
pop
ret
push
add
pop
push
push
push
push
call
xchg
add
int
lea
add
rolb
roll
lret
pop
add
mov
xlat
push
cwtl
lds
test
jmp
hlt
mov
out
lahf
add
pop
add
mov
lcall
cmc
add
mov
xchg
hlt
pop
mov
add
push
add
xor
pop
cmpl
jne
push
push
push
xor
add
shr
sub
shl
shr
add
pop
dec
inc
pop
push
sub
sub
rol
sub
pop
pushl
call
push
push
push
push
push
push
push
push
push
lea
push
call
xchg
jecxz
stos
jl
jne
mov
loope
add
add
rolb
mov
add
mov
jge
pop
add
scas
mov
imul
lcall
call
repnz
pop
call
push
lea
push
push
push
push
push
lea
push
lea
push
call
jns
bound
arpl
add
add
cli
add
fwait
add
add
add
std
push
pop
add
sub
pop
jmp
push
push
push
lea
push
push
push
push
push
push
call
add
add
scas
in
out
add
add
lret
mov
fs
gs
enter
add
call
add
add
arpl
sarb
sti
xchg
mov
cmpsb
mov
arpl
add
add
lods
push
add
push
roll
test
mov
lds
add
sub
pop
cmpl
je
cmpl
jne
push
push
lea
push
lea
push
push
push
call
add
add
iret
mov
rolb
jle
in
mov
in
add
push
add
add
add
lock
add
xlat
add
push
shrb
add
popf
add
test
stc
add
push
xchg
jmp
add
movsb
mov
jns
add
leave
push
push
stos
into
pop
jp
hlt
int3
add
imulb
sub
pop
mov
push
lea
push
push
push
call
add
mov
add
pop
imul
popl
add
pop
mov
add
hlt
ret
hlt
in
out
add
jns
add
add
add
out
lret
sub
pop
call
ret
push
not
add
add
ror
pop
jmp
push
push
call
add
out
insb
pusha
jge
add
pusha
add
imul
add
add
xchg
movsb
add
add
mov
add
js
add
mov
in
mov
pop
cmpl
jne
push
push
sub
push
or
not
add
shr
shr
sub
add
sub
sub
shl
pop
sub
lea
pop
push
dec
pop
pushl
call
push
push
push
push
push
call
jecxz
rcrl
add
lahf
stc
add
mov
jge
mov
in
jo
mov
jb
data16
mov
in
add
mov
add
add
sub
pop
push
push
shl
pop
call
push
shl
pop
jmp
cmpl
jne
push
push
push
lea
push
call
add
add
jmp
add
add
add
aad
nop
add
mov
mov
sahf
int3
mov
add
add
movsb
add
adc
add
popa
sbbb
ja
andl
in
lock
lcall
add
add
push
lea
lea
shl
add
pop
mov
push
add
pop
push
push
push
inc
lea
ror
push
sub
add
dec
add
inc
shr
sub
add
shr
pop
inc
pop
push
push
lea
push
call
mov
add
cld
js
fwait
xchg
add
add
add
gs
cld
mov
add
mov
add
icebp
scas
call
filds
addl
js
add
aam
add
mov
add
push
loopne
add
add
std
mov
in
hlt
lcall
jne
push
shl
sub
pop
call
push
push
call
test
mov
mov
movsl
fwait
addb
add
add
push
pusha
mov
add
gs
add
mov
add
push
add
mov
add
stos
pop
clc
incb
jnp
mov
mov
add
xchg
add
clc
pop
call
push
push
not
shr
push
and
add
sub
dec
sub
pop
shr
add
inc
pop
push
dec
sub
sub
pop
pushl
call
push
shl
add
dec
add
pop
call
push
push
inc
add
push
or
inc
add
sub
add
sub
dec
pop
rol
add
not
xor
pop
push
push
push
lea
push
lea
push
lea
push
push
push
call
push
mov
shrl
add
fldl
add
add
add
add
mov
add
add
mov
add
add
call
rcr
sarb
nop
add
movsl
sub
pop
pushl
push
inc
sub
pop
call
push
dec
add
pop
call
push
push
add
dec
sub
push
push
pop
add
ror
sub
xor
pop
inc
shl
inc
shr
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
jne
fidivs
xchg
push
loopne
lret
add
addl
in
mov
add
add
push
addr16
pushf
mov
sahf
test
add
sub
pop
pushl
push
shr
pop
call
push
not
lea
dec
rol
pop
call
push
push
sub
rol
xor
xor
push
xor
add
add
inc
sub
sub
sub
sub
pop
shr
pop
push
pop
pushl
push
dec
sub
sub
pop
call
push
not
inc
add
dec
pop
call
push
push
sub
push
sub
add
inc
not
sub
sub
shl
pop
pop
push
not
ror
sub
pop
pushl
push
add
add
add
pop
call
call
push
push
shr
push
or
not
add
shr
sub
shl
pop
sub
ror
pop
push
push
push
lea
push
push
push
lea
push
push
call
jmp
fmull
jp
scas
add
pushf
add
mov
push
add
add
mov
add
mov
xlat
add
jecxz
push
fs
xchg
cwtl
sar
data16
mov
mov
rolb
lret
icebp
add
pop
pushl
call
push
push
push
push
lea
push
call
fildll
clc
add
add
fwait
push
jae
mov
mov
xchg
cli
add
lea
repnz
add
imul
repnz
pop
call
push
push
add
rol
sub
ror
push
sub
add
sub
lea
ror
sub
shl
pop
dec
pop
push
push
lea
push
call
lea
add
pop
add
in
push
add
add
add
fiaddl
push
add
add
pop
loopne
je
mov
ja
pop
outsl
test
into
mov
aad
mov
pop
mov
test
jmp
sahf
fs
incb
fs
xchg
xchg
add
scas
xlat
jle
fs
addl
jnp
add
push
push
push
push
push
push
push
call
popa
jmp
xchg
add
add
push
into
add
add
add
add
mov
mov
lock
arpl
cltd
mov
mov
add
imul
loopne
xchg
add
add
mov
add
sub
pop
call
push
push
add
ror
not
sub
push
xor
add
inc
sub
sub
rol
pop
shr
shr
pop
push
push
push
lea
push
push
push
push
call
insb
add
xchg
jl
add
shlb
enter
add
jae
xchg
mov
stos
cmpsb
mov
ljmp
add
add
fsubrs
sub
pop
pushl
call
push
push
call
je
lret
aam
call
add
jecxz
movsl
add
add
xchg
add
in
jno
add
push
add
add
sahf
mov
jo
mov
cwtl
mov
add
stc
repnz
movsl
into
add
add
mov
jb
sub
pop
call
push
push
add
sub
ror
push
or
inc
add
sub
sub
sub
sub
pop
inc
sub
pop
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
popa
pop
fwait
pusha
icebp
add
cmpsb
add
testl
add
popa
add
add
add
jb
add
add
add
add
mov
leave
mov
mov
jmp
pop
add
push
add
repnz
add
jnp
test
add
mov
rcrb
into
push
add
add
add
lcall
jne
call
push
not
sub
pop
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
aad
incb
add
add
rolb
jecxz
lea
mov
fidivs
add
data16
push
jo
add
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
lcall
add
mov
repnz
add
loop
out
clc
nop
xchg
push
add
mov
jle
ja
xchg
add
jl
sub
pop
call
push
push
inc
add
lea
rol
push
and
add
shr
sub
sub
xor
pop
inc
sub
add
sub
pop
push
push
push
lea
push
push
push
push
push
call
mov
leave
add
xchg
pusha
mov
jecxz
fbstp
je
ja
imul
pop
add
add
movsb
add
add
mov
add
jge
jb
mov
rolb
mov
lock
pusha
pusha
add
add
fadds
add
js
negl
bound
lcall
jne
push
push
lea
push
push
push
push
lea
push
push
push
push
call
addr16
mov
add
add
hlt
repnz
add
data16
mov
jecxz
icebp
lods
filds
int
mov
out
sbbl
leave
add
pop
add
push
les
mov
mov
shl
mov
sti
push
jle
outsl
pushf
fists
shr
cmpsb
les
faddl
subb
lea
sahf
add
lcall
xchg
sbb
add
shrb
adcl
xor
add
inc
and
add
sub
pop
lea
lea
pop
push
xor
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
jbe
flds
clc
rcrl
add
push
clc
add
cmc
cmpsb
pushf
cmpsl
add
add
fwait
add
lea
add
gs
shlb
add
call
call
push
push
lea
not
add
push
sub
add
xor
shr
sub
add
rol
add
pop
inc
not
inc
rol
pop
push
add
pop
pushl
call
push
inc
pop
call
push
push
xor
push
or
not
add
sub
lea
pop
lea
pop
push
inc
inc
pop
pushl
push
lea
push
push
push
push
push
push
push
lea
push
lea
push
call
add
mov
add
clc
push
add
pop
push
lea
jae
push
add
add
mov
xchg
push
pop
call
shlb
xchg
lret
jp
xlat
mov
push
pop
out
add
mov
add
rolb
add
add
lea
sub
pop
call
push
push
ror
sub
push
push
pop
add
rol
add
sub
ror
inc
dec
shr
pop
inc
inc
pop
push
push
rol
sub
push
or
inc
add
inc
sub
not
pop
sub
sub
pop
push
lea
push
push
push
lea
push
push
call
les
xchg
rcrl
pusha
mov
push
add
add
leave
mov
mov
add
lds
mov
add
add
int
f2xm1
sub
pop
call
push
sub
shl
not
pop
pop
push
sub
sub
add
pop
dec
jne
call
push
push
push
lea
push
push
call
jae
fwait
mov
add
cwtl
loope
add
add
add
jo
pop
mov
incb
mov
mov
add
iret
add
iret
add
addr16
add
add
div
mov
arpl
mov
add
xchg
pushf
add
add
int
scas
js
sub
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
add
add
mov
add
cwtl
lcall
mov
enter
fwait
mov
add
lret
jno
lds
jge
jecxz
add
mov
aam
in
add
test
cld
scas
cltd
ljmp
xchg
add
add
add
in
fcompl
add
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
mov
scas
cli
leave
jecxz
jecxz
add
shlb
xchg
negl
lock
add
ror
cmc
movsb
add
xchg
addr16
stos
add
out
arpl
push
add
add
add
add
add
add
icebp
cwtl
add
js
addb
sub
pop
lea
push
push
rol
lea
xor
push
xor
add
sub
sub
shl
shl
rol
lea
pop
sub
pop
push
ror
pop
pushl
push
push
push
push
push
lea
push
push
call
rcr
hlt
imul
xchg
fadds
add
mov
insb
sbbb
add
imul
add
add
mov
loop
push
into
jb
in
in
lcall
inc
adc
add
push
push
push
push
push
lea
push
push
call
add
cmpsl
add
mov
xchg
add
subl
fwait
movb
xchg
cwtl
add
iret
std
jnp
pop
out
add
neg
mov
test
mov
jp
sub
pop
push
push
push
push
push
push
call
xchg
add
insb
mov
lahf
test
cwtl
mov
out
pop
imul
movsb
add
add
xlat
ja
add
xchg
pop
add
jge
stos
xchg
add
add
out
mov
fwait
mov
pop
add
add
mov
lcall
shrb
lahf
out
push
push
shr
rol
add
push
or
not
add
add
inc
rol
shl
sub
add
add
pop
shr
add
add
pop
push
dec
shl
pop
pushl
push
inc
pop
call
call
push
not
not
pop
mov
push
shr
shr
pop
lea
push
push
not
push
or
inc
add
rol
sub
sub
sub
pop
dec
dec
sub
xor
pop
push
push
push
push
call
add
outsl
fnstenv
add
mov
lea
mov
add
add
add
add
add
add
iret
icebp
add
mov
add
arpl
jnp
scas
add
ficompl
mov
add
add
scas
shl
sub
pop
pushl
push
add
sub
add
pop
call
push
lea
push
lea
push
push
push
call
icebp
jmp
mov
call
mov
add
xchg
mov
xchg
add
int3
in
push
add
jb
in
in
pop
lea
push
sub
sub
shr
pop
push
push
shr
dec
pop
push
push
lea
shr
inc
add
pop
push
push
push
push
lea
push
call
xchg
call
push
add
shlb
add
add
mov
scas
add
int
jae
imul
add
add
sub
pop
pushl
push
push
xor
rol
push
xor
add
ror
not
inc
sub
sub
not
sub
pop
dec
xor
ror
shl
pop
push
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
add
js
jnp
popf
scas
add
loop
into
lods
mov
add
gs
add
add
bound
addb
mov
cld
cmpsb
movsl
test
sub
pop
push
call
push
push
rol
add
add
push
or
inc
add
not
add
sub
lea
inc
not
pop
shr
pop
push
push
push
push
call
std
insb
add
scas
imul
add
mov
lahf
test
push
shll
jb
lcall
iret
pop
fsubr
add
mov
jns
add
add
mov
fwait
movsl
add
xchg
faddl
out
add
scas
add
clc
add
add
add
add
jl
add
xchg
lcall
jne
push
push
push
lea
push
push
push
call
add
add
int
add
add
mov
test
mov
int3
jo
jp
mov
mov
outsl
aam
add
xchg
push
popa
add
in
call
add
push
push
sub
pop
call
push
push
push
or
not
add
shl
shr
xor
shr
sub
not
pop
add
pop
push
sub
pop
pushl
push
lea
push
push
lea
push
lea
push
push
call
add
add
xchg
into
jbe
add
mov
add
add
mov
fnstcw
add
cmpsb
fwait
into
lock
lret
cltd
add
fidivl
mov
in
add
mov
xchg
mov
add
add
push
add
sub
pop
call
call
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
jecxz
push
out
data16
mov
iret
subb
add
push
in
add
mov
jl
pop
add
mov
fcoml
pop
add
mov
xchg
add
jl
roll
std
pop
mov
fdivrl
push
mov
push
pop
int3
movsb
sub
pop
pushl
mov
push
sub
dec
sub
dec
pop
jmp
push
push
shl
push
and
add
rol
shl
sub
dec
xor
xor
pop
inc
pop
push
push
push
lea
push
lea
push
call
add
cltd
add
sbbl
add
lds
bound
jp
loopne
add
push
add
add
jmp
xchg
cmpsb
sub
pop
pushl
push
push
push
lea
push
lea
push
push
push
push
call
add
jbe
add
sarl
jmp
add
xchg
out
jne
add
jae
repnz
movsb
xchg
mov
iret
fwait
int
arpl
std
cmpsl
int
mov
mov
js
aad
stc
loopne
arpl
iret
add
iret
add
add
std
add
in
loopne
call
push
push
lea
pop
call
push
push
add
shr
dec
push
and
add
ror
shl
sub
inc
pop
inc
add
pop
push
push
push
push
push
push
lea
push
push
call
mov
movsb
movsl
add
stos
jnp
add
rolb
out
sarb
jecxz
jae
int3
add
arpl
add
add
ja
add
cmpl
or
iret
pop
sahf
fwait
push
call
jne
add
add
add
cltd
rcr
add
fcomps
lods
jne
add
popf
mov
push
call
scas
sub
pop
call
push
not
pop
push
push
xor
add
lea
pop
call
push
shl
ror
add
pop
leave
push
inc
dec
pop
add
push
lea
push
lea
push
push
lea
push
lea
push
call
cwtl
xchg
add
jge
add
ja
out
sahf
mov
jae
nop
add
mov
mov
add
shll
pushf
add
add
add
add
add
add
add
add
andl
add
sub
pop
pop
pop
push
push
push
lea
push
call
adc
jl
xchg
mov
add
add
add
mov
fmul
add
mov
rolb
out
scas
add
sahf
mov
mov
add
push
push
call
add
mov
loope
add
outsl
aad
add
add
jecxz
cmc
mov
add
jecxz
cmc
bound
push
gs
cmpsb
pop
add
xchg
add
pusha
add
mov
mov
jecxz
addl
add
lods
lret
repnz
push
sub
pop
xor
push
pop
inc
push
push
push
push
push
push
push
push
push
push
call
mov
scas
aam
les
jo
int
xlat
push
push
int
xchg
loop
add
mov
in
fdivr
lcall
or
push
push
lea
push
call
test
mov
ljmp
scas
add
add
ret
add
roll
mov
add
push
out
add
je
add
mov
add
repnz
add
ljmp
add
std
add
lcall
lcall
push
lea
push
push
push
call
cmpsl
lea
clc
mov
nop
add
add
fsubrl
mov
cld
in
fists
add
xchg
add
add
add
add
fstp
add
in
xchg
mov
lcall
or
push
add
add
xor
add
pop
push
mov
push
dec
pop
cmpl
jne
push
push
push
lea
push
push
push
call
je
shll
test
pop
sti
ret
push
add
jb
pusha
ror
mov
call
add
add
add
lcall
inc
and
push
push
lea
push
push
call
add
ficomps
enter
rcl
fildl
add
jecxz
add
push
imul
add
xchg
into
xchg
test
cmpsl
add
jle
cmpsl
add
mov
loope
ja
add
xchg
std
add
add
rolb
lcall
addl
add
push
lea
push
push
lea
push
lea
push
push
push
call
jecxz
add
add
pop
add
loopne
add
orb
mov
stos
add
imul
test
push
add
mov
xchg
out
add
add
jp
cltd
pushf
roll
push
add
popa
in
incb
rcl
in
push
add
adc
add
mov
lcall
inc
or
xor
inc
pop
and
push
inc
add
sub
inc
pop
xor
xor
push
add
dec
pop
add
xor
push
rol
add
xor
inc
pop
dec
push
shl
inc
add
pop
sub
jmp
push
inc
ror
pop
sub
push
add
not
pop
pushl
push
add
xor
add
shr
pop
pop
push
inc
sub
pop
sub
cmp
jne
push
push
push
push
push
push
push
call
mull
mov
add
mov
add
int3
cltd
add
add
add
fcomi
add
add
add
mov
mov
pop
sahf
lcall
lcall
pop
mov
push
xor
pop
lea
sub
push
push
push
push
push
push
push
push
push
call
add
test
add
add
in
add
add
add
add
xchg
into
jno
negl
test
movb
add
xchg
mov
push
xchg
add
push
push
push
add
add
lcall
or
jmp
sub
pop
add
push
shr
pop
sub
push
shr
shl
dec
ror
pop
pushl
push
add
shr
pop
pop
push
lea
push
lea
push
push
lea
push
push
call
add
add
lock
jle
push
int3
aad
mov
cmpsl
movsl
movsb
popfw
xchg
cmpsb
repnz
add
add
scas
add
mov
fs
add
in
test
jne
add
push
jge
add
sub
pop
shr
and
push
push
push
push
push
push
push
call
in
test
jmp
add
lret
testl
pop
shrl
lock
add
fs
arpl
mov
xchg
add
pop
mov
jns
js
mov
fiadds
stos
xchg
add
add
mov
mov
add
add
cli
mov
imul
int3
mov
roll
filds
add
mov
sub
pop
sub
push
inc
add
pop
cmp
jne
leave
push
push
call
pop
pop
hlt
add
popl
fs
leave
shrb
rcrb
mov
nop
addr16
add
add
mov
mov
pop
add
loopne
popf
sti
add
lock
ja
scas
fildl
mov
add
iret
add
xchg
lcall
add
push
rol
not
pop
push
mov
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
pushf
xchg
add
add
add
add
scas
mov
jecxz
bound
add
scas
mov
loope
add
add
sub
pop
add
push
push
pop
push
push
push
lea
push
push
call
add
scas
popl
add
mov
add
mov
add
test
cmpsb
add
add
in
add
add
add
add
add
add
rcll
add
add
roll
rcr
xchg
mov
push
roll
roll
push
shl
pop
push
push
push
push
lea
push
push
call
mov
repnz
aad
push
pop
fmul
xchg
jp
jb
pop
mov
add
roll
push
jb
add
mov
rolb
test
mov
mov
mov
movsl
enter
xchg
xchg
mov
stos
add
call
add
jo
in
lock
lcall
pop
or
sub
shl
pop
lea
push
lea
push
push
push
call
imul
add
out
lods
add
out
add
mov
jecxz
jecxz
rcrb
sahf
lods
nop
bound
add
sahf
mov
fsubrl
fidivs
clc
rorl
in
add
mov
mov
add
lock
lcall
ljmp
out
xor
ljmp
fimull
add
rcrb
pop
or
rcrb
or
inc
add
shr
ror
pop
add
xor
push
xor
dec
pop
mov
and
push
push
push
lea
push
push
push
push
push
call
add
push
addr16
je
xchg
popf
add
mov
fldl
xchg
add
rolb
lock
pop
mov
xchg
xchg
add
stc
lcall
std
add
add
sarb
add
add
mov
cmpsl
fiaddl
add
int
add
in
add
mov
iret
jns
add
cmpsb
lods
sub
pop
rol
rol
push
lea
push
push
push
push
lea
push
push
call
movsb
add
add
add
cltd
mov
popa
mov
pushf
rolb
add
mov
add
add
jmp
add
out
add
cli
pushf
js
in
in
lcall
add
lds
push
shr
pop
cmpb
jne
add
push
xor
pop
cmp
je
push
rol
pop
add
cmpl
jne
push
push
push
push
push
push
push
lea
push
call
add
add
mov
pop
je
imul
fstpt
jb
add
add
pop
iret
ja
jns
push
scas
add
add
mov
sarl
in
loopne
xor
push
shl
ror
pop
pop
push
pop
pop
push
xor
pop
pop
push
sub
rol
pop
pop
push
push
push
push
push
push
lea
push
push
push
push
call
add
add
mov
add
push
xchg
int3
rol
mov
add
lods
add
add
out
mov
int3
jl
add
loope
add
add
aad
in
mov
add
push
iret
xchg
xchg
add
add
add
mov
sub
pop
pop
leave
push
sub
add
pop
ret
mov
push
shl
shl
pop
add
push
sub
sub
pop
mov
push
rol
not
shr
pop
push
mull
push
dec
pop
pop
push
push
lea
push
push
push
lea
push
push
push
call
lahf
add
aad
fisttps
add
arpl
sarb
stos
mov
add
sahf
add
mov
add
add
loopne
lcall
add
call
cmc
lea
dec
pop
push
push
ror
pop
call
push
push
push
call
xchg
cmpsl
repnz
mov
mov
jbe
into
lods
arpl
add
add
add
add
push
pushf
out
sub
pop
xor
push
lea
push
call
add
pushf
add
add
addb
add
jmp
add
jns
popf
pop
add
add
loop
add
subl
add
add
add
add
ljmp
lods
jnp
nop
rorb
lcall
pop
push
push
push
lea
push
push
push
push
push
call
add
jbe
jp
add
cwtl
ficoml
add
sahf
lods
pop
add
add
outsl
test
mov
out
add
xchg
jns
add
fwait
loopne
out
stc
sub
pop
pop
push
shr
xor
sub
pop
pop
push
not
shl
sub
pop
pop
push
sub
add
inc
pop
leave
push
push
push
push
push
push
call
add
add
add
add
mov
add
xchg
mov
jbe
xchg
nop
call
lods
jb
pusha
add
add
mov
jecxz
cmc
fldl
lcall
or
push
lea
lea
shr
xor
pop
push
push
push
push
push
push
push
push
push
call
xchg
mov
int3
add
mov
add
add
out
add
pop
leave
fs
jge
outsl
andl
mov
enter
add
call
add
push
add
in
add
push
inc
shr
not
pop
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
cmpsl
scas
stos
test
mov
mov
rcll
les
pop
orl
lods
mov
repnz
out
add
repnz
mov
mov
add
lcall
push
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
out
std
out
test
jae
aad
incb
leave
add
testb
add
add
add
add
mov
add
sub
pop
push
push
push
lea
push
push
call
add
add
sbb
in
hlt
mov
add
insb
fcomip
in
add
add
add
add
add
xchg
int
xchg
sub
pop
mov
push
push
sub
pop
pop
push
inc
ror
rol
pop
lea
push
lea
push
push
push
lea
push
call
imul
xchg
hlt
rol
cmpsb
pop
add
xchg
test
xlat
add
mov
push
add
test
add
push
iret
imul
add
roll
popf
sahf
add
dec
lods
xchg
in
leave
in
add
mov
lcall
ljmp
add
sub
pop
shr
push
shl
not
dec
pop
add
push
push
lea
push
push
push
call
faddl
arpl
add
jmp
fcom
bound
addl
lahf
add
add
jmp
add
mov
cmpsl
jae
fmuls
xchg
cld
add
ja
roll
rolb
lcall
pop
js
push
push
lea
push
push
push
push
lea
push
call
xchg
add
jmp
add
mov
roll
fs
add
rolb
out
add
sarl
add
imul
lcall
fcos
jae
push
lea
push
push
push
call
xchg
roll
add
xchg
test
add
push
mov
add
add
shlb
bound
add
add
cmc
loope
in
lock
lcall
inc
clc
mov
push
add
xor
inc
pop
add
push
push
lea
push
call
add
mov
testb
mov
add
pop
iret
add
in
jmp
push
add
lea
mov
add
icebp
add
add
add
lcall
testb
push
call
add
add
add
add
mov
add
pop
fdivr
add
push
add
scas
jns
rcr
in
test
rcr
arpl
add
xchg
jmp
add
xchg
add
mov
add
lahf
add
jl
shlb
stos
pop
mov
fadds
jp
add
popf
cli
notl
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
add
pop
add
popa
imul
loope
add
shll
js
add
pop
fisubs
test
add
jmp
add
add
fcoms
sarb
sub
pop
add
xor
push
push
push
push
push
push
call
loop
xchg
stos
sarl
sti
mov
pushf
jmp
add
jbe
add
mov
add
add
test
add
jne
stos
add
add
stos
mov
lret
jb
xchg
add
shll
add
push
add
mov
xchg
sub
pop
rol
push
push
push
lea
push
lea
push
push
call
add
int3
add
push
mov
add
mov
push
roll
mov
add
mov
in
add
call
push
push
push
push
call
add
add
jo
fs
data16
add
xlat
add
out
add
mov
xchg
add
scas
sub
pop
nop
xor
push
push
push
push
call
add
arpl
add
xchg
add
add
add
cld
int
pop
cmpsb
push
add
mov
popl
lock
in
add
mov
nop
add
add
fsubrl
call
popl
mov
add
in
int3
add
mov
jmp
add
lcall
push
push
push
call
add
add
int
add
add
xchg
jo
test
add
mov
add
mov
out
add
out
mov
movsb
add
mov
add
jnp
add
xchg
fcomps
popf
lock
mov
sar
add
push
scas
add
shlb
movsl
add
stc
fnstsw
add
sub
pop
nop
inc
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
aad
xor
imul
jge
pop
roll
add
push
jmp
add
add
add
imul
add
push
add
pop
pop
movsl
mov
jecxz
push
test
popa
ljmp
pop
nop
nop
push
xor
lea
pop
cmpb
jne
add
push
push
push
call
movsl
add
fiadds
cmpsl
pop
mov
lock
add
stos
out
addl
cwtl
ljmp
mov
fists
std
sub
pop
nop
push
not
shl
pop
nop
cmp
je
push
sub
xor
not
pop
nop
push
push
push
push
push
call
push
add
cmpsb
insb
xchg
fs
mov
add
clc
add
popa
mov
test
cwtl
push
jecxz
lahf
aad
add
out
add
jb
ror
jbe
mov
add
add
jp
jmp
loope
sub
pop
nop
inc
push
add
dec
add
pop
nop
nop
push
lea
push
push
lea
push
push
call
add
add
add
xchg
add
out
add
pop
jecxz
cmc
jbe
xchg
notb
fldl
add
add
imul
add
add
popa
jge
push
mov
pusha
add
mov
sub
pop
cmp
jb
push
lea
push
lea
push
push
push
call
mov
cld
add
test
pop
add
out
stc
push
hlt
jge
faddl
add
add
imul
out
pop
jmp
add
fsubrs
into
fiaddl
gs
add
add
out
mov
add
lea
jne
pop
sub
pop
xor
push
push
push
push
push
call
add
jae
negl
xchg
je
js
fstpl
mov
add
add
add
mov
ja
loopne
negl
pop
add
scas
lods
int3
add
rorl
mov
jmp
orl
add
pushf
add
add
mov
sub
pop
jmp
push
lea
push
push
push
push
push
push
push
lea
push
call
add
add
add
xchg
push
add
andl
push
add
addb
jnp
add
add
loopne
lods
cld
add
int3
push
clc
add
add
xchg
add
ret
cwtl
xchg
test
lcall
push
and
rcll
ror
shr
pop
movzwl
push
lea
sub
inc
pop
mov
add
push
inc
add
pop
mov
xor
push
add
not
sub
shr
pop
xor
push
push
push
push
push
lea
push
push
call
repnz
nop
add
add
loop
je
insb
jb
stos
pop
add
add
bnd
idivl
out
mov
add
int3
stc
faddl
mov
mov
add
add
add
mov
in
add
mov
out
sub
pop
shl
push
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
mov
jo
add
add
add
mov
add
add
sbb
sahf
leave
cli
mov
add
add
popa
fldl
push
add
xchg
lods
fidivs
pusha
add
popfw
ficoms
jl
mov
xchg
add
movsb
sub
pop
xor
push
push
lea
push
push
lea
push
call
out
cmc
add
mov
roll
xchg
sarb
lods
lods
add
enter
stc
pop
cli
cltd
aad
pop
std
mov
lock
add
jecxz
in
in
pop
shl
xor
push
ror
sub
dec
sub
pop
shl
push
push
lea
push
call
add
add
lahf
add
jbe
push
fistpl
pop
js
leave
addr16
cltd
pop
add
mov
in
xchg
roll
sub
pop
xor
push
lea
push
push
push
push
push
push
push
push
lea
push
call
add
mov
pusha
mov
mov
lods
mov
add
xchg
add
mov
jp
insb
add
sub
pop
mov
add
push
push
push
lea
push
call
jmp
mov
jl
lds
xchg
push
pop
in
xchg
mov
add
icebp
jae
add
in
xchg
jb
jbe
jne
add
xchg
add
add
mov
add
jns
add
leave
xchg
add
scas
add
rolb
lcall
pop
push
lea
push
call
add
sarb
outsl
add
mov
scas
mov
add
add
movsb
mov
add
fucompp
cmpsb
js
jns
add
popf
testl
add
pop
push
push
push
push
lea
push
push
push
call
mov
bound
std
mov
cwtl
loope
lds
push
jb
push
mov
ljmp
addb
movsb
xchg
out
mov
sub
pop
leave
ret
push
inc
ror
pop
push
push
sub
pop
mov
push
ror
pop
push
push
add
add
ror
pop
push
push
push
not
add
sub
pop
push
push
push
push
lea
push
call
stos
add
push
in
push
lcall
fldenv
clc
xchg
mov
cmpsl
pop
add
add
test
addr16
add
mov
add
xchg
xlat
fsts
mov
iret
add
imul
fs
stos
add
xchg
xchg
lock
mov
push
pop
mov
push
push
push
push
push
call
not
add
addl
scas
add
add
add
incb
mov
add
add
add
lods
add
loop
fstpt
lahf
add
pop
test
lods
out
movsb
add
js
insb
xchg
movsl
jle
test
lcall
jge
push
dec
not
add
add
pop
test
je
push
push
push
push
call
pop
add
pop
add
xchg
loope
push
mov
loope
add
add
out
add
loopne
mov
push
je
add
jl
mov
jnp
sub
pop
mov
test
je
push
push
push
push
push
call
rcll
fists
lds
js
enter
add
push
add
add
into
sti
add
push
enter
add
add
int
add
out
lret
mov
mov
add
xchg
jno
add
push
add
test
negb
popf
in
add
sub
pop
mov
push
lea
push
lea
push
call
mov
mov
add
add
int
mov
add
rcl
xchg
pop
out
in
mov
add
mov
push
loopne
test
mov
addr16
add
movsl
pop
addr16
lret
add
nop
movsl
add
add
add
imul
sahf
out
stc
sub
pop
mov
push
not
pop
mov
inc
push
push
call
std
cmpsb
add
popl
push
fcmovnb
add
add
add
add
add
mov
add
movsl
xlat
mov
xchg
mov
pop
add
add
cld
test
add
add
lahf
mov
shr
add
push
ret
jo
les
mov
cmp
je
test
je
push
xor
sub
rol
pop
mov
push
rol
sub
pop
inc
push
add
ror
pop
cmp
je
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
add
add
add
mov
add
push
add
push
lea
add
out
popa
add
out
movsl
shrl
rolb
add
add
push
push
add
add
add
xchg
add
pop
cli
sti
add
outsl
jne
addr16
lret
mov
sti
add
scas
gs
pop
test
jne
push
push
lea
push
call
pop
pop
add
add
add
jo
addr16
imul
add
ljmp
add
lret
xlat
rcll
std
add
add
add
mov
xchg
mov
lcall
rclb
xchg
push
push
lea
push
push
push
call
sahf
add
pop
add
mov
jae
leave
add
push
clc
outsl
add
xchg
add
cltd
mov
add
fnstenv
xchg
rolb
mov
add
add
mov
add
mov
pop
push
sub
ror
ror
pop
pop
pop
push
not
add
add
pop
pop
push
push
push
push
push
push
push
push
push
push
call
mov
fdivl
cld
stc
add
xlat
out
add
loopne
mov
xchg
add
jbe
add
out
bound
add
mov
movsl
lcall
iret
add
faddl
fidivrl
add
mov
xchg
add
cli
gs
stc
jmp
pop
leave
push
push
push
push
call
jp
call
xchg
lock
sti
add
lds
mov
leave
cmc
mov
add
add
xchg
popf
mov
add
add
mov
add
add
add
add
add
bound
mov
subb
in
lock
ret
push
sub
not
pop
mov
push
push
call
jno
mov
add
fsubr
fisubs
add
xchg
mov
xchg
test
add
add
jnp
out
push
jmp
hlt
add
ja
addb
pop
aad
add
testl
mov
mov
sahf
add
add
mov
sub
pop
inc
push
sub
pop
cmp
jne
lea
push
push
push
push
push
push
lea
push
push
push
push
call
mov
outsl
add
repnz
gs
add
add
add
add
iret
add
add
lret
add
int3
add
add
pop
add
mov
add
add
xchg
bound
mov
loop
add
add
out
sub
pop
mov
push
lea
sub
ror
pop
test
je
push
push
push
push
call
add
in
lods
add
js
add
lcall
add
add
jns
js
mov
add
insb
test
lcall
push
push
not
shr
pop
add
push
push
lea
push
lea
push
push
push
push
lea
push
call
push
xchg
add
lret
xchg
fiaddl
in
add
rolb
mov
add
test
add
mov
add
xchg
add
xchg
xchg
mov
add
out
fsubrp
aam
movb
jle
mov
jp
add
imul
test
cli
decl
sub
pop
test
je
push
lea
push
push
call
lock
xchg
repnz
fwait
jne
fbld
xchg
mov
fbld
push
add
pop
ret
insb
shr
jge
xchg
in
pushf
sahf
jle
mov
out
addb
add
xlat
add
add
add
add
add
xchg
out
out
add
callw
xchg
push
call
jge
stc
insb
add
add
add
in
mov
jp
call
iret
mov
adcb
add
add
rolb
add
addr16
pop
out
pop
mov
add
jae
arpl
push
add
lahf
add
fcompl
in
hlt
pop
add
push
push
push
lea
push
push
push
call
add
add
pop
add
add
stc
add
add
lret
add
push
add
add
jge
clc
add
xlat
add
lcall
loopne
test
std
call
adc
hlt
lea
push
call
stos
add
addr16
out
mov
out
add
pop
add
mov
mov
ljmp
xchg
add
push
in
add
leave
ffree
data16
mov
xchg
add
mov
iret
add
lcall
push
stc
call
mov
push
or
push
push
push
call
cmpsl
into
add
add
enter
test
xchg
cwtl
nop
jnp
mov
jnp
add
jbe
pushf
add
in
iret
flds
in
add
mov
mov
xchg
ficompl
stos
jbe
add
add
mov
flds
lcall
rclb
not
sub
pop
pop
push
push
push
push
push
push
push
call
add
add
cwtl
in
idivb
add
add
add
add
movsb
add
stc
lcall
cmpsl
jge
scas
add
add
fcoms
jns
pusha
cmpsb
leave
add
add
add
in
in
add
xchg
add
add
add
add
push
mov
add
jo
in
in
pop
push
dec
not
rol
pop
pop
push
push
lea
push
lea
push
push
push
lea
push
push
call
aam
movsl
fst
jle
add
push
push
out
xchg
add
loopne
stc
add
cwtl
imul
je
fs
add
scas
pushf
add
out
leave
xchg
mov
add
mov
add
sbbl
cmpsb
jle
in
loopne
pop
push
add
pop
leave
ret
push
push
push
call
add
stos
jmp
fiaddl
add
pop
mov
mov
add
cmpsb
add
add
add
out
shrl
mov
add
xchg
enter
add
add
in
hlt
lcall
inc
call
sub
dec
pop
pop
pop
push
push
push
push
lea
push
push
push
push
push
push
call
out
mov
imul
add
add
add
add
cmpsl
add
push
sti
movl
add
in
fdivr
lcall
pop
push
not
xor
sub
lea
pop
leave
push
push
push
push
lea
push
push
push
push
push
call
add
add
aad
xchg
jae
add
add
xchg
jo
pop
mov
add
lret
xchg
add
add
add
pop
add
cwtl
mov
scas
jb
add
out
callw
popl
add
movsl
roll
filds
lcall
or
push
push
lea
push
push
lea
push
push
push
push
push
call
in
pop
in
add
xchg
out
outsl
add
fadds
imul
add
js
mov
cltd
add
add
mov
xchg
loopne
sub
pop
mov
pop
push
xor
sub
inc
pop
pop
pop
push
push
push
push
push
call
mov
mov
add
xchg
add
add
movsl
jo
add
add
outsl
pop
jno
add
cmc
stc
add
add
cltd
push
mov
add
add
xchg
jge
fdivr
out
mov
add
xchg
fs
data16
push
add
add
add
add
in
in
pop
pop
push
push
push
push
push
push
push
push
push
push
call
mov
mov
mov
xorl
cwtl
add
ljmp
leave
mov
xchg
add
add
cmc
jo
movsb
sub
pop
leave
ret
cmp
mov
inc
lret
ret
lret
add
mov
ror
mov
mov
mov
repz
dec
mov
xchg
lret
or
orl
add
cmp
fistpl
mulb
inc
mov
jge
lock
fs
data16
mov
push
jg
cwtl
adc
xchg
jg
bound
int
jns
dec
mov
push
cmpsl
mov
jno
lahf
mov
push
mov
mov
into
push
popf
shl
jg
sub
aad
rorl
mov
outsb
or
cltd
ret
lret
clc
push
sbb
jmp
xchg
inc
lods
rcrl
clc
cmc
adc
cld
or
xor
xchg
fists
cld
cld
add
or
inc
pop
out
adc
xchg
out
in
aam
adc
cwtl
and
mov
jno
dec
pop
or
dec
aaa
or
jle
adc
push
add
xchg
gs
xchg
add
sub
jp
enter
sbb
sbb
sbb
mov
push
in
and
cmp
fsubrs
in
cltd
lret
pushf
call
movb
and
xor
lea
pop
stc
cmp
pop
jns
aas
stos
int3
sbb
push
pop
test
sub
mov
push
and
push
sub
clc
dec
xor
and
cmp
and
xchg
rorb
mov
add
fs
inc
stos
repnz
mov
enter
fdivl
shl
sahf
cld
add
jg
lds
hlt
lods
ret
lds
mov
cwtl
inc
xor
adcb
push
sub
outsl
cli
inc
popa
js
cmp
outsb
fwait
hlt
xchg
repnz
sahf
sub
lods
lret
std
leave
cld
sbb
sbb
inc
jne
mov
xor
jnp
add
jae
xor
jbe
and
loopne
mov
hlt
mov
xchg
sbb
fisttps
nop
hlt
mov
push
jecxz
test
mov
mov
xchg
cmc
mov
cmp
cmpsl
mov
lea
mov
pop
dec
pop
dec
subb
bound
out
dec
test
scas
rorb
xor
inc
cld
and
jmp
insl
movsb
inc
cmp
adc
test
pop
mov
add
adc
fldt
fsub
jg
adc
mov
pop
mov
inc
mov
outsl
mov
lock
push
inc
push
mov
xor
sbb
mov
addl
pop
dec
int
push
or
mov
cmpsl
je
fwait
mov
push
and
vpaddusw
add
inc
popf
fmul
movsl
and
loop
hlt
movsb
cmp
aaa
mul
cmp
push
and
adc
data16
adc
push
inc
jg
add
and
xlat
or
int3
insb
lds
xacquire
pusha
add
into
jo
mov
cmp
inc
ss
aaa
push
movsl
push
adc
fmull
lock
sti
jnp
xor
and
sub
lahf
cmp
push
jmp
dec
sbb
xor
jno
pop
sub
test
push
scas
dec
mov
jnp
aas
push
cmp
fiadds
cmp
or
inc
sub
add
cltd
sbb
jns
in
mov
cld
xchg
ret
enter
enter
cmp
adc
inc
lret
adc
mov
mov
cli
outsb
lahf
std
xchg
mov
movsb
pop
dec
sub
fs
adc
cmp
mov
inc
adc
cvtdq2ps
es
jmp
mov
aam
adcb
mov
mov
shrl
ds
nop
pusha
ss
outsb
test
imul
pop
sahf
mov
jbe
or
ret
lods
and
jl
add
jl
cmp
xor
mov
push
xor
mov
insl
fsubs
dec
je
outsb
pop
lahf
std
add
mov
je
repnz
popf
enter
aad
or
mov
mov
ret
push
les
aas
pop
orl
fists
xor
lods
cwtl
lfs
pop
dec
cmc
test
jl
aad
fdivr
mov
lret
mov
outsl
lea
call
sahf
sub
ja
cmp
test
push
mov
outsl
mov
or
jne
push
subb
stos
push
std
jmp
loopnew
push
push
call
cmp
push
mov
xorb
andl
xchg
xchg
mov
mov
xchg
xchg
out
xchg
cmp
in
test
xor
movsl
lods
mov
inc
dec
add
inc
imul
inc
popf
call
movsb
pop
cmp
and
ds
fstpl
pop
jp
jle
push
stos
jnp
adc
xchg
lahf
pop
cwtl
lods
jne
pop
add
or
and
push
dec
cmpsl
pushf
push
das
add
loopne
mov
mov
pusha
andb
shl
cmpsb
xchg
icebp
mov
xor
mov
and
ds
popa
jge
outsl
inc
int3
jle
and
stc
ret
sub
dec
bnd
xchg
xchg
cmpb
hlt
sti
pushl
and
or
push
xor
fsubr
arpl
xor
pushf
dec
pop
pop
lods
mov
sbb
test
test
fs
xchg
cmp
in
xor
jnp
push
jbe
push
xlat
repnz
scas
mov
cmpb
insb
mov
sbb
xchg
sbb
adc
cmp
and
add
clc
mov
inc
xlat
rorb
orb
sti
xor
mov
stos
xchg
hlt
enter
xor
xchg
or
pop
mov
add
push
push
aas
les
insl
dec
mov
pop
loop
push
in
outsl
adc
out
push
mov
and
and
icebp
jecxz
add
sti
out
or
mov
and
lock
mov
push
test
mov
imul
add
in
js
arpl
je
xor
inc
scas
adc
sbbl
hlt
dec
jmp
push
in
jl
xchg
mov
insb
hlt
in
sahf
orb
jle
or
ss
fsubp
adc
scas
lds
push
jns
cli
fistpl
data16
fsub
dec
dec
pop
add
enter
loope
jg
xor
jo
sbb
outsb
adc
sbb
scas
bound
sbb
rorl
lahf
gs
inc
daa
movsl
inc
jb
push
test
fistps
jnp
jl
add
xchg
aas
jnp
add
or
mov
test
and
mov
mov
ljmp
outsl
jmp
mov
dec
sahf
fcoms
jg
outsb
or
xchg
or
pushf
insl
and
or
mov
and
test
ret
jle
and
cmp
rorb
cmp
sahf
faddl
popf
sbb
push
inc
mov
xchg
xchg
adc
lret
mov
xor
cmp
push
lea
lods
xor
adc
into
mov
ret
test
lds
into
inc
push
bound
jae
mov
or
cmp
arpl
push
xchg
push
int3
loope
dec
movsl
add
mov
cmp
xchg
insb
cmpsb
adc
mov
xor
lcall
dec
mov
xor
inc
out
out
push
mov
dec
xor
xor
inc
cmc
clc
rol
mov
cmp
sahf
je
nop
jp
dec
xchg
jge
sub
jns
shl
ja
or
das
adc
dec
or
cmpb
inc
xor
push
pusha
jo
imul
push
pop
fistl
pop
test
fnstenv
ror
mov
popa
out
pop
scas
sti
pop
addr16
imul
mov
and
mov
outsl
xor
imul
inc
ljmp
jle
mov
movsb
shlb
je
sbb
xchg
das
popf
jge
xchg
xchg
mov
enter
incb
jge
xchg
lahf
xchg
jb
or
cld
mov
push
loope
jnp
sbb
test
push
pop
cmp
mov
mov
lock
adc
adc
sbb
sarb
cmp
and
fs
outsl
push
pop
fstl
imul
jl
xchg
adc
repnz
xlat
mov
fdivrs
sti
iret
fchs
in
data16
test
imul
roll
jmp
fsubl
push
insl
je
pop
call
cmp
js
sub
mov
iret
push
xchg
jns
inc
sub
inc
xor
jg
fnsave
xor
inc
xchg
mov
sub
cmpsb
int
push
dec
fsubrp
jg
jbe
subb
sti
mov
cmp
jmp
xor
mov
xor
xchg
mov
sub
add
dec
pop
push
xor
mov
imul
mov
bound
xor
jne
push
call
pushf
mov
mov
arpl
inc
jno
cmc
ss
clc
in
sbb
repz
sub
cmp
or
sbb
and
and
iret
hlt
dec
movsl
ror
pusha
mov
lahf
push
aad
inc
cmc
cmp
icebp
ffree
jnp
adc
fidivrs
rcrb
divl
jo
sti
add
pop
repnz
sub
fimull
out
jns
outsb
dec
cltd
jbe
dec
fcoms
lods
xor
push
jae
inc
xor
push
repnz
stc
xchg
xchg
loopne
dec
dec
pop
add
loope
pushf
ja
lret
inc
aaa
dec
inc
add
aam
mov
scas
cmp
into
sbb
das
sub
leave
sub
jecxz
jne
mov
fsubl
ss
in
loopne
outsb
sub
push
cmp
jns
pop
sub
xor
sub
mov
clc
sub
cmp
sbb
lret
adc
fs
insl
lods
inc
mov
xor
es
push
jo
outsb
ja
incb
jbe
mov
shll
fs
mov
ss
pop
or
mov
lret
mov
decb
jg
xor
pop
mov
push
dec
aas
movsl
mov
hlt
aaa
xlat
clc
cmp
outsb
loop
sbb
andb
xchg
xchg
add
popa
ljmp
idivl
scas
adc
cmp
cs
stos
and
and
mov
mov
inc
lcall
mov
imul
mov
cmc
shrb
jns
pop
rcl
inc
mov
mov
iret
sub
imul
adc
dec
fsincos
dec
daa
out
xchg
addl
jecxz
or
push
aad
roll
sub
and
mov
outsl
je
pusha
pop
mov
mov
inc
mov
aam
lcall
or
ja
lds
cmp
test
and
adc
bound
xor
outsl
mov
wbinvd
sbb
add
outsb
stos
movsb
call
fldcw
mov
dec
pushf
ja
rorb
loopne
mov
in
cltd
das
push
sub
lcall
cltd
es
mov
movsl
fistpll
or
or
imul
mov
dec
mov
lcall
mov
subl
bnd
cmp
repz
in
je
enter
sub
aas
ss
sub
cmpsb
xchg
lods
cmp
cltd
xor
popf
lods
adc
in
scas
add
test
push
sub
or
sbb
divb
pop
inc
add
int
outsb
pop
add
mov
jl,pt
mov
dec
xor
loop
lods
sbb
xor
addr16
cmp
cltd
xor
cltd
lret
lds
push
pop
out
xacquire
lret
or
jae
sbb
dec
add
mulb
adc
pushf
jae
jmp
push
lock
xchg
cmp
push
mov
lcall
aaa
xchg
push
lods
push
push
aas
jl
adc
subb
les
xor
adc
cmc
push
jo
and
cmpsl
mov
mov
mov
in
sub
pop
movsb
pop
jl
inc
mov
mov
pushf
out
sbbl
leave
rolb
cmovs
xchg
dec
add
mov
pop
adc
cmp
dec
aam
loopne
pop
std
jo
mov
sbbl
inc
mov
outsb
push
push
leave
add
and
inc
outsl
insl
mov
out
jns
add
mov
in
ficoms
ret
ja
scas
fsubl
add
push
jb
xchg
test
dec
testl
test
lahf
sarb
pop
jl
imul
sbb
dec
addr16
jle
mov
notl
cltd
sub
lds
andb
jo
test
mov
adc
mov
push
test
sub
jecxz
xchg
inc
or
jne
jl
xchg
mov
adc
push
cmp
mov
and
dec
mov
loopne
xor
movsl
xchg
dec
jmp
shll
xor
out
fiaddl
and
fxam
andl
imul
inc
rolb
sahf
mov
xchg
aaa
pop
mov
and
xchg
iret
outsl
adc
jne
xor
int3
mov
js
out
mov
dec
fs
cmpsl
jnp
shll
mov
add
mov
or
loopne
cmp
cltd
arpl
mov
or
mov
sbb
jne
out
scas
gs
jae
repnz
ret
cmc
loopne
imulb
sarb
icebp
in
adc
pop
dec
in
loopne
pop
test
cmp
adc
add
dec
xchg
xor
inc
enter
inc
das
push
xor
insl
lods
mov
add
scas
nop
out
lahf
and
test
daa
cmp
dec
mov
jnp
lahf
lcall
dec
out
sbb
fcoml
imul
jno
push
xchg
dec
push
xchg
das
or
pop
xor
and
or
jns
xlat
sbb
sbb
fcoml
xchg
call
out
lahf
arpl
jl
and
insl
cli
cmc
inc
loop
sti
or
inc
imul
mov
mov
sub
dec
hlt
adc
mov
pushl
jl
out
sbb
cmpsl
mov
mov
jge
mov
add
ror
jne
xchg
jle
inc
pop
sub
mov
pop
aam
inc
xchg
shl
outsb
gs
jbe
pop
sarb
xlat
pushf
fldcw
inc
pop
or
daa
lods
loop
fsubl
xor
mov
test
adc
out
pop
int
cmpsl
and
leave
cli
lea
xchg
adc
mov
fwait
adc
push
xchg
pop
xchg
dec
shrd
and
cmpsl
inc
hlt
add
in
pop
sbb
cmp
stos
pop
inc
xchg
inc
and
out
fs
movsl
stc
call
out
jo
xchg
xchg
pop
or
cmp
dec
inc
cmp
jb
lods
xchg
sets
bound
out
out
sub
js
testb
sbb
aam
xorl
push
xor
pop
mov
sbb
add
aas
call
pusha
jecxz
push
in
arpl
push
jge
fstps
gs
or
cs
clc
pop
push
pushf
pop
cmpsb
clc
mov
dec
mov
cmc
xchg
push
call
pushf
rcrb
jbe
mov
mov
dec
jle
sbb
and
enter
stc
fstp
popa
dec
adc
pop
andl
aaa
lods
xor
push
std
xchg
adc
das
push
stc
and
push
sbb
inc
add
cmp
push
push
in
xor
jno
sar
ljmp
in
sbb
hlt
mov
pop
pop
repz
out
xchg
movsl
dec
add
movsl
sbb
in
cmp
xchg
mov
push
xor
flds
sbb
ss
push
and
incb
fcom
fsubp
cmp
addb
out
adc
jp
scas
pop
cmp
sub
sbb
mov
inc
scas
vmovdqu
push
and
in
dec
mov
sub
or
jle
xor
stc
mov
ret
arpl
pushf
mov
fadds
mov
dec
cwtl
repz
fdivl
adc
movsb
mov
loope
icebp
pop
rcl
nop
cmp
push
xchg
lods
xchg
mov
arpl
inc
pop
negl
test
ret
lret
add
das
and
lcall
pop
nop
push
pop
cwtl
pop
arpl
arpl
xchg
mov
lods
addr16
jl
sub
mov
xchg
add
ret
pop
dec
push
enter
mov
cs
push
out
lret
push
adc
in
mov
inc
js
xor
in
divl
and
pop
lcall
gs
call
movsb
jg
outsb
cwtl
ja
dec
call
jg
cmp
jmp
pop
aad
jl
add
xlat
cwtl
int
int
adc
shll
jg
mov
jp
inc
jmp
cltd
push
fsubl
jmp
loop
jg
mov
mov
push
dec
or
jg
mov
outsb
pop
shlb
mov
call
pop
mov
out
jge
dec
and
das
hlt
mov
and
lahf
cwtl
xchg
insl
sarb
cwtl
out
outsb
mov
outsl
std
into
stos
jl
xor
inc
insb
pop
mov
and
jp
adc
test
xchg
scas
add
cli
cli
mov
adc
lcall
fmuls
cli
xor
xchg
or
aam
enter
mov
xchg
cmpsb
shrb
sbb
and
pop
xor
out
cmp
mov
pop
mov
pusha
in
mov
fisubrl
out
mov
and
jbe
aad
nop
stos
lods
incl
jl
inc
sar
ret
push
std
pop
cli
mov
movsb
lret
fiaddl
jnp
pop
mov
sbb
loope
popf
cmc
dec
sahf
inc
fistl
dec
scas
xchg
xchg
movsb
mov
jno
jg
mov
fsubr
ror
lods
mov
test
mov
fs
mov
rsm
dec
sbb
xlat
mov
add
pop
xlat
dec
nop
inc
mov
ljmp
push
mov
cli
mov
mov
in
icebp
test
bound
jle
js
popa
aaa
sbb
mov
fdivrs
aaa
lahf
scas
sahf
test
mov
pop
pop
andl
jnp
clc
lock
cmp
out
adc
mov
out
sub
push
dec
pushf
roll
mov
flds
shlb
icebp
cs
aaa
ljmp
fadds
pop
dec
mov
and
ret
push
jl
xchg
jns
inc
xor
test
adc
pop
xor
hlt
or
sbbb
xor
cmpsb
adc
inc
inc
pop
adc
jmp
jb
ss
mov
out
mov
es
addr16
cltd
loop
or
inc
ds
dec
out
pop
mov
cmp
sbb
imul
dec
ret
mov
pop
mov
les
dec
mov
pop
inc
enter
add
test
push
mov
push
std
pop
out
push
jae
inc
movsb
nop
fdivrl
hlt
les
or
jl
sbb
mov
jl
imul
loop
cltd
sub
es
add
fisubl
jge
push
or
mov
stc
sbb
scas
popa
xchg
stc
test
xchg
adc
sub
jp
xchg
jo
movl
movsb
adc
mov
mov
push
xchg
pushf
loope
ss
and
std
pop
mov
outsl
lcall
jp
pushf
jne
push
arpl
adcb
jl
icebp
mov
scas
jmp
jle
aad
mov
mov
or
jge
mov
stc
inc
mov
in
lret
pop
xchg
mov
fnstenv
add
xchg
shll
adc
xchg
and
pop
in
test
jp
xchg
mov
adc
push
jg
mov
add
loop
fisubrs
sbb
negl
or
mov
push
mov
sub
xchg
sahf
je
stos
cmp
insb
push
xor
insb
mov
push
ja
jp
lret
add
pop
aad
pop
or
popa
push
dec
out
push
test
sahf
ror
sar
lret
fbld
push
stos
xorl
xor
int3
jae
mov
lret
dec
subl
repnz
cmp
sub
xchg
adc
mov
xchg
sbb
popf
lods
push
pop
scas
push
and
and
cli
sbb
in
pop
gs
pop
xorl
dec
add
fildll
sbb
dec
jb
mov
pop
sahf
sub
pop
mov
push
sti
xor
leave
inc
lret
mov
repz
popf
jmp
cmc
les
inc
fistps
cmp
jne
dec
mov
fldt
iret
push
add
jbe
out
mov
jl
mov
pop
or
or
enter
xlat
arpl
imul
sub
sub
mov
pop
pop
and
mov
lahf
fnstenv
nop
outsl
jae
sbb
repz
imul
sbb
out
movsl
stos
sub
test
add
or
cmp
stos
loope
fnstcw
int
pop
push
and
push
daa
lret
jge
jl
xchg
insl
imul
inc
insb
xor
std
pushf
dec
das
inc
cli
jmp
and
popa
and
lea
in
mov
xor
mov
pusha
sub
push
mov
test
pop
jle
mov
or
iret
lods
dec
and
mov
rcr
inc
dec
sub
das
add
or
movb
outsl
add
ret
push
cmp
add
and
pop
out
outsl
aad
and
dec
testb
push
mov
pop
imul
ret
imul
in
shld
popa
inc
dec
add
pop
adc
rcl
movsl
xchg
add
inc
jl
fldcw
orl
stos
dec
pop
cmp
nop
ljmp
lret
test
mov
mov
lods
enter
adc
jge
or
xchg
cmp
jp
jge
mov
test
subb
lcall
jns
pop
mov
ss
std
push
inc
pusha
add
xorl
rcrl
jns
shrb
leave
add
pusha
or
ja
or
addl
dec
test
daa
pushf
pop
scas
aas
sbb
xor
test
mov
mov
xchg
adc
xlat
dec
xor
popa
insb
add
or
mov
fmull
sub
or
inc
lock
aad
dec
jnp
mov
mov
add
inc
insb
sarl
xor
lret
push
or
in
pop
xchg
dec
ror
jmp
int
daa
xchg
jl
scas
dec
dec
and
pop
cmp
sahf
arpl
adc
and
mov
icebp
imul
push
stos
cs
loopne
loopne
and
lret
sub
inc
mov
dec
mov
sbb
negl
xor
sub
jecxz
inc
bound
addb
push
pop
inc
gs
cmpsb
mov
push
mov
mov
pop
xor
inc
out
call
aas
or
or
mov
or
pop
push
sub
cmp
jns
add
repz
lret
push
mov
dec
faddp
into
mov
mov
fwait
or
rcll
and
outsb
mov
int
lock
xchg
push
cmp
add
cmp
inc
inc
imul
cmp
test
int3
xor
std
scas
imul
loope
ret
inc
sub
outsl
pop
xchg
add
and
jle
sub
mov
into
sbb
lds
pop
cmpl
inc
jbe
repz
fists
scas
push
aad
sti
shl
add
ret
negl
mov
xchg
cs
cli
mov
outsl
stos
aad
call
mov
cmp
adc
aam
pop
inc
and
push
push
inc
cwtl
push
bound
dec
add
mov
xor
loop
mov
cwtl
pop
mov
xor
rcrb
mov
mov
dec
fsubr
sbb
addb
out
pop
xor
sbb
in
mov
cmp
adc
je
lret
int3
jne
mov
mov
repnz
dec
push
gs
test
inc
add
pop
cmc
iret
or
dec
pop
cmp
push
mov
loopne
xor
loop
arpl
add
sub
mov
adc
mov
xchg
incb
and
hlt
shlb
std
jmp
or
lcall
je
sbb
pop
hlt
sarl
repz
sbb
and
xchg
test
movsb
sub
insl
outsl
and
jb
adcb
enter
outsb
scas
inc
shl
push
adc
mov
aam
sub
cwtl
xchg
sub
pop
cmp
loopne
fldt
cmpsl
cmpsl
ss
nop
xlat
ret
xor
stos
ds
mov
lahf
jne
repnz
pop
xchg
lret
enter
std
xor
rclb
es
fwait
insb
jge
enter
push
add
jecxz
pop
shll
push
lods
pop
and
pop
stos
pop
arpl
repz
sbb
or
sbb
add
or
lds
cmc
push
mov
mov
js
jae
cltd
cmp
sub
loope
and
aaa
aaa
fsubrs
je
cltd
jecxz
inc
sub
adc
xchg
push
insb
xchg
jmp
adc
and
aas
imul
pop
jmp
call
aas
stos
pop
popa
mov
inc
sub
jae
fs
sbb
mov
pop
dec
mov
adc
in
add
xchg
je
sub
loop
mov
outsl
inc
mov
jno
outsl
test
sbb
push
leave
cmp
fstps
clc
pop
cmpsl
pushf
pop
mov
loope
xor
test
jecxz
dec
mov
mov
ja
lret
xchg
lcall
test
imul
mov
lret
adc
loopne
das
dec
repnz
cmp
jno
push
jb
leave
xor
jg
xchg
jne
xchg
mov
sbb
icebp
mov
push
or
rcl
cmpsb
sbb
hlt
cmp
mov
sub
cmp
sub
into
mov
data16
sbb
ja
sahf
or
stos
dec
arpl
fcmovb
rol
xchg
mov
lea
sub
ljmp
dec
js
mov
lahf
mov
mov
and
pop
outsl
jge
movsb
mov
andb
ds
ffreep
mulb
push
mov
aas
in
fwait
stc
in
mov
add
fnsave
mov
daa
in
daa
xchg
insl
fiaddl
sti
sbb
js
loopne
inc
mov
cwtl
push
xchg
dec
xchg
jae
xor
stos
test
cmc
cmp
std
fs
inc
sbb
in
pop
sbb
in
nop
testl
adc
jbe
dec
test
mov
fdivrl
mov
jg
pop
into
mov
xor
les
in
ljmp
fucompp
mov
push
push
pop
inc
xor
fsubl
sbb
or
sub
nop
daa
mov
dec
enter
jl
test
adc
adc
or
mov
jg
mov
aas
adc
adc
jns
lea
outsl
and
xor
jb
cmp
rcrl
loopne
xchg
cltd
cmp
mov
dec
dec
int3
mov
sub
xchg
pop
cltd
cmpsb
sysenter
jno
dec
outsb
adc
push
xlat
lods
jle
into
push
push
arpl
mov
push
xchg
fwait
movsl
cmp
push
in
fs
pop
ljmp
pop
adc
adc
leave
or
stc
out
fmull
and
shl
push
stc
fadds
lret
arpl
lock
sub
in
out
outsb
dec
push
add
jmp
jg
mov
cmc
test
je
in
jg
shl
mov
push
xor
push
fsts
int
inc
movl
lds
std
sbb
sbb
out
dec
mov
loop
js
pop
adc
fs
xor
cld
adc
div
push
dec
inc
andl
jae
mov
push
mov
xchg
jae
jp
and
inc
xor
push
repnz
std
scas
pop
je
js,pn
sbb
sbb
data16
adc
push
inc
std
xor
shl
das
jp
push
sbb
add
pop
out
jbe
xor
jnp
daa
dec
push
js
icebp
sbb
pop
mov
sub
stos
xchg
and
and
insl
pop
imul
push
mov
inc
ljmp
and
pop
inc
inc
imul
incb
cmp
xchg
mov
cld
imul
adc
mov
push
pop
adc
jmp
imul
dec
adc
xor
gs
push
push
fdecstp
mov
dec
lret
arpl
sbb
ret
mov
add
loope
mov
cs
ret
loope
adc
ret
cld
sbb
sbb
dec
add
into
lret
ja
jo
adc
push
leave
push
insb
ret
push
outsb
dec
cmp
int
push
sub
imul
idiv
cmp
or
and
xchg
inc
adc
mov
das
jmp
test
xchg
push
pop
movb
jg
in
insb
ss
sub
pop
jmp
and
jnp
pop
ret
or
je
sbb
xchg
lea
dec
or
add
push
sbb
jne
fmull
std
mov
dec
shlb
jp
mov
pop
and
test
push
and
sub
ret
mov
dec
fwait
push
jo
sbb
sub
and
sub
xor
leave
dec
aam
mov
sti
add
dec
pop
pop
andl
mov
inc
clc
stc
aaa
adc
cmp
sbb
mov
das
ret
inc
cltd
cld
sub
xor
push
rcrl
rcrb
jnp
lds
and
out
daa
push
paddd
add
push
icebp
cmp
inc
and
inc
loop
xchg
mov
or
pushf
lcall
xchg
cltd
jmp
pop
lret
dec
das
js
push
xor
mov
jno
cmp
inc
mov
xchg
and
sti
stc
cmp
ljmp
iret
cmpsl
and
ja
movsb
xchg
xor
cs
nop
jo
mov
lock
xor
jge
mov
and
test
fcmovu
mov
add
ret
push
cmpsb
fldcw
jo
xchg
push
ret
clc
mov
push
xor
bnd
rcrb
jb
lret
cmp
xchg
dec
mov
aas
inc
out
gs
outsl
mov
imul
cwtl
inc
pop
fmull
or
bound
jmp
jp
aam
pop
clc
scas
adc
aam
mov
mov
or
adc
dec
mov
sbb
push
lahf
push
mov
sub
daa
xchg
pushl
aam
outsl
hlt
int3
sbb
enter
ret
dec
out
sbb
mov
leave
rcrl
inc
daa
add
sti
cmp
jge
scas
mov
aam
andb
mov
xor
cmp
sarl
pop
daa
in
outsl
xorb
mov
pop
mov
xorl
in
insl
rclb
les
dec
lods
inc
out
mov
bound
inc
sub
insb
stc
bswap
lret
jae
jmp
hlt
inc
cmp
push
sub
and
push
fdiv
dec
negl
push
shrl
pop
pusha
push
data16
dec
sarb
add
pusha
push
jb
push
and
ret
xor
in
testl
lock
test
insl
and
loope
fildll
popf
les
xchg
or
ljmp
rclb
bound
ljmp
jle
dec
push
dec
and
mov
jl
lods
add
hlt
push
pop
call
cltd
adc
repz
adcl
out
out
mov
outsl
outsl
jbe
std
mov
mov
xchg
add
repz
ds
loope
mov
aaa
daa
dec
inc
xor
rcl
mov
test
mov
cmp
adcl
add
jecxz
cmp
cmp
imul
pop
into
sbbb
pushf
and
add
add
xchg
push
out
pushl
pop
push
dec
inc
mov
cwtl
sub
scas
sbb
inc
pop
iret
and
cld
cltd
mov
pop
add
stc
lcall
lds
pop
adc
jnp
icebp
fs
mov
gs
xorb
leave
cmp
xchg
push
cmp
mov
fsubs
jmp
lock
lret
pop
repnz
jne
filds
mov
enter
jo
xchg
dec
getsec
addr16
imul
dec
xchg
xchg
xchg
jl
addl
cmc
push
push
xor
mov
movsl
push
xchg
test
cmpb
insb
or
outsl
push
inc
outsb
pop
ds
jge
lret
jbe
inc
dec
js
aad
sub
and
rclb
mov
sub
dec
xchg
repnz
mov
lock
inc
mov
shlb
jecxz
es
stc
sbb
push
mov
gs
sbb
pusha
fisubl
jl
sub
outsl
jbe
jnp
ret
and
ret
jl
inc
mov
jge
or
inc
pusha
mov
mov
dec
ljmp
push
fsubs
add
mov
cmp
daa
in
imul
jp
int
pusha
fmull
adc
pop
aad
js
lea
xor
lahf
jle
icebp
lea
fsts
insl
inc
lds
jno
test
sysenter
jns
mov
push
jmp
xor
cmp
push
out
jge,pn
mov
lret
rcrb
sbb
fistpll
xchg
notl
movsl
loop
jno
and
add
fiaddl
inc
dec
movsl
mov
es
stos
ret
adc
in
xchg
sbbb
out
jle
scas
jne
xchg
aas
dec
shrl
rcl
jo
cmpsb
add
cs
les
clc
negl
mov
fstl
adc
dec
lods
dec
aas
pop
fwait
cmp
lods
pop
fidivrs
in
lahf
out
in
lahf
or
sub
xchg
push
repz
and
shll
jp
sbb
lods
inc
sbb
sub
in
cltd
xchg
sub
clc
cmpl
adc
adc
sbb
adc
jmp
inc
arpl
ret
cmc
xchg
cmc
jl
faddl
mov
jnp
sub
adc
inc
movsb
dec
jbe
mov
pop
sbb
scas
mov
sbb
push
push
outsb
jge
ljmp
pop
testl
jns
mov
sbb
shlb
xchg
lret
jb
aas
lret
jbe
jb
scas
cld
cli
push
cmp
outsb
mov
nop
xchg
daa
imul
je
fcoms
sub
sub
cmp
ficoml
icebp
leave
lcall
or
jo
mov
add
pushf
hlt
push
shlb
jecxz
lahf
fbld
into
out
call
add
dec
push
cmp
and
mov
mov
hlt
mov
loope
pop
add
pop
jmp
push
fmull
xchg
xchg
pushf
insb
lret
fdivr
leave
cld
add
mov
ss
inc
mul
jp
add
inc
inc
flds
sbb
out
sbb
fimuls
add
mov
ja
js
popa
push
xor
mov
cmc
inc
mov
and
xor
pop
jmp
dec
sbb
xor
das
pop
movsl
or
pop
push
fists
add
adc
sub
repnz
imulb
stc
int3
sub
dec
outsb
iret
loopne
sub
dec
add
rclb
xchg
int3
lods
push
mull
fcompl
mov
mov
sub
fisubrl
xor
stc
mov
add
sub
dec
push
sbb
cmc
jl
push
js
stos
and
movsb
das
pushf
push
dec
xchg
loope
femms
xchg
jle
xchg
xchg
popa
mov
gs
arpl
push
insl
jmp
mov
push
push
insl
xor
dec
add
ds
pop
in
pop
jno
mov
mov
in
aas
scas
stos
dec
adc
je
mov
mov
shll
lret
push
int3
hlt
fwait
jns
pop
sahf
mov
pop
sub
dec
pop
outsb
lahf
lcall
ja
mov
xor
pop
inc
sarb
gs
adc
nop
push
aad
mov
add
leave
jecxz
pop
sub
movsb
subb
icebp
loopne
add
ss
add
cmpb
out
popa
mov
ficoms
sub
lahf
or
or
out
test
push
mov
xor
insb
ret
data16
cmp
cwtl
in
mov
push
scas
mov
jp
movsb
sub
add
mov
jns
jge
stc
mov
bound
pushf
mov
je
cmp
mov
mov
and
xor
cmp
sahf
mov
jbe
xor
rcrl
lahf
mov
out
mov
adc
cmpsb
repz
mov
add
adc
dec
inc
mov
pop
hlt
push
add
decl
clc
arpl
push
ud2
lcall
into
int3
scas
inc
dec
pop
fs
js
andl
add
shl
sbb
test
cli
dec
dec
je
sub
lock
dec
adc
pop
into
fs
ret
push
in
xchg
scas
sbbb
or
jl
mov
adc
in
leave
daa
addr16
adc
sub
xchg
pop
insl
popf
test
cwtl
lds
fld
sbb
loopne
or
xor
repz
sarl
push
fs
mov
repnz
out
ljmp
andb
xchg
outsl
cmp
inc
in
test
cmpsb
push
fmuls
mov
iretw
xor
xor
pop
loopne
add
cwtl
xchg
mov
and
pop
insb
push
subb
or
pop
adc
cmp
mov
mov
sbb
push
je
cli
jo
das
cmp
daa
mov
cmp
in
sbb
xchg
mov
stos
stos
inc
mov
dec
repnz
mov
pop
sub
int3
cmp
sub
fwait
push
sub
loop
xchg
sbb
and
out
pushf
imul
add
imul
mov
test
bound
pop
and
pop
mov
andl
xchg
adc
add
cs
aas
xor
pop
xor
push
cmpsb
pop
or
imul
aaa
les
insl
ja
mov
enter
lods
cmp
das
pop
popf
jmp
cmp
lcall
push
jecxz
sarb
ret
pop
pop
and
popa
pop
xor
sbb
dec
aaa
popa
lret
leave
sbb
out
imul
pushf
inc
add
aad
pop
xchg
jecxz
or
fld
ss
fnstenv
inc
pop
cmp
es
icebp
cmc
pop
mov
aas
sbb
jnp
cmpps
jge
dec
cmp
mov
mov
inc
mov
out
lsl
adc
and
aam
push
outsl
scas
in
xchg
mov
jp
inc
addl
icebp
mov
frstor
xor
cmpsl
outsl
jp
cltd
enter
inc
orl
cmc
loop
shrb
fisttpll
pop
add
aas
mov
int
jmp
push
pop
test
pop
mov
jle
ret
popa
mov
pop
pop
push
mov
xchg
sub
outsb
xchg
dec
adc
adc
cmp
addr16
pushf
pop
xchg
int
dec
push
popf
rclb
fisttpl
and
stc
pop
shrl
in
mov
gs
jmp
dec
addr16
sbb
fwait
push
mov
xorb
cld
adc
jmp
or
scas
or
int3
testb
sahf
xor
inc
pop
mov
adc
adc
jbe
dec
fldt
inc
mov
pop
inc
in
test
cmp
xor
pop
inc
shl
cwtl
imul
mov
movsb
hlt
dec
xchg
jge
nop
sub
pop
iret
aam
imul
pushf
adc
inc
fld
movsl
push
mov
insl
xor
xchg
idivb
and
mov
or
daa
dec
sub
imul
lods
jb
lods
mov
ret
add
jno
ljmp
call
dec
mov
push
sbbl
pop
dec
or
ret
push
push
in
mov
dec
mov
cltd
mov
sub
xchg
ljmp
mov
test
inc
mov
and
imul
add
cmp
loopne
pop
fs
xchg
sub
sub
inc
xchg
into
sbb
add
ljmp
int
pop
fs
sbb
daa
and
loop
std
push
inc
mov
mov
fisttps
sbb
movsl
push
cld
inc
dec
lcall
xchg
stos
pop
add
in
ss
cmpsb
adc
je
in
es
jnp
inc
fnstsw
sbb
and
subl
inc
mov
mov
dec
pop
push
out
loope
pop
lcall
and
pinsrw
in
mov
jo
sub
in
in
push
dec
dec
das
js
ret
and
lcall
jo
and
add
inc
fsubr
adc
jae
mov
std
or
jo
movsb
adc
js
ret
mov
or
xchg
jb
cmp
rorb
xor
and
add
lcall
inc
sbb
in
jmp
out
ds
fisubrs
adc
push
cmp
cltd
lret
sbb
popf
in
in
orl
rol
jnp
ja
in
lahf
lock
clc
xchg
xchg
aam
pop
iret
jp
adc
xchg
fistpll
xchg
sub
sub
dec
adc
sub
out
mov
cld
mov
rclb
adc
in
mov
ss
mulb
mov
stc
adc
adc
push
xchg
cwtl
inc
in
push
scas
cmp
adc
loop
ljmp
aas
or
call
cmpsl
jg
test
ret
adc
fistps
mov
cmp
nopl
jns
adc
jns
js
xor
pop
pusha
enter
mov
xor
repz
ret
scas
call
xchg
dec
mov
add
pop
push
mov
adc
jne
fmuls
push
mov
jnp
jbe
xchg
pop
enter
scas
mov
pop
ja
push
enter
icebp
rclb
mov
rcr
lret
bound
cmp
mov
scas
ret
sbb
mov
sbb
and
jbe
das
out
subb
test
lret
sub
sbb
lcall
outsb
dec
push
addr16
shl
pop
loope
inc
aad
add
ss
int3
mov
repz
popf
and
xchg
insb
xchg
rolb
out
mov
clc
cmc
adc
faddl
outsb
adc
bound
xor
test
sbb
xchg
push
add
inc
xor
dec
jecxz
fsub
jns
xchg
aad
outsl
pop
mov
sub
cmc
iret
je
pop
inc
dec
nop
mov
in
sti
jecxz
jns
aas
push
push
xchg
cmp
adc
and
outsb
fisttpll
jmp
aaa
lock
fld
dec
std
insl
inc
cmp
pop
push
mov
aaa
enter
pop
mov
xchg
or
fucomp
insl
pop
lods
cmp
xor
add
xchg
add
idivl
xor
cwtl
xchg
cmp
jae
popf
movsl
pusha
adc
mov
cmp
xlat
and
mov
add
adc
lret
push
fsubl
jb
and
xchg
xor
jb
and
cmc
sbb
lds
in
inc
jle
and
cmpl
lcall
add
mov
inc
add
adc
aaa
xor
popf
sar
ficompl
or
or
leave
neg
sub
xchg
adcl
push
mov
bound
and
xchg
push
sbb
and
adc
aad
mov
sub
test
sti
jmp
or
aas
or
dec
xchg
mov
adc
push
and
push
inc
lahf
clc
mov
cs
in
je
ror
pop
daa
hlt
cmp
mov
and
lock
pop
test
pop
lods
fmull
aas
cmp
stos
or
dec
pop
or
les
cmp
insb
lahf
iret
dec
and
dec
fstps
pop
mov
or
stos
popa
dec
push
repnz
pop
ja
ja
mov
aas
xchg
and
pusha
stos
mov
clc
inc
bound
xchg
dec
pop
lcall
hlt
js
push
dec
push
fwait
mov
js
arpl
cmp
sbb
xchg
or
mov
xlat
sbb
push
icebp
mov
push
dec
and
fwait
out
movsb
add
lahf
loopne
push
stos
pop
testl
decl
pop
lods
lahf
mov
loopne
sbb
sub
add
testl
mov
ret
mov
ja
testl
adc
iret
das
jg
cmpsb
push
enter
cmc
cs
rcll
mov
mulb
in
mov
ret
xchg
leave
xchg
xchg
mov
aas
adc
ljmp
in
xor
fnsave
xor
ret
add
js
mov
aam
sahf
dec
jo
pusha
lods
test
mov
pop
cmp
mov
adc
mov
in
ret
gs
dec
imul
insl
mov
sbb
or
gs
mov
jae
ss
std
add
add
lods
xor
cmp
mov
jbe
mov
push
sarb
push
jne
fldenv
jbe
es
clc
add
adc
addb
dec
cmp
add
jp
jne
pop
mov
dec
xor
movsl
addb
jmp
sub
mov
mov
xor
mov
cmp
xor
clc
jl
push
into
jno
cmp
jae
or
add
dec
out
jno
pop
add
jp
clc
add
cmp
inc
jbe
rcrb
inc
das
jmp
dec
and
push
push
sbb
lods
push
lcall
sbb
jp
test
ret
cli
sub
pop
cmp
jl
stos
adcb
add
cmp
or
sub
ret
shrb
scas
jecxz
sub
jae
cmp
lcall
cmp
in
sbb
inc
sbb
mov
jo
dec
lea
shrb
cld
mov
out
mov
movsb
je
leave
mov
jb
mov
push
jne
mov
pop
fxch
cmp
adc
add
push
cmp
push
repnz
cwtl
nop
test
pop
pushf
sub
arpl
cmp
sbb
sahf
inc
add
daa
fmul
sbbl
fstl
mov
std
loope
xor
dec
push
out
ds
mov
sub
xor
out
sbb
test
jnp
cmp
push
outsb
xor
sub
inc
add
cli
fdivl
rorl
nop
jp
sub
pop
mov
cmp
push
cmp
pusha
jge
sti
outsb
out
mov
out
fmul
nop
imul
popa
test
mov
pop
fsubs
and
fimull
ljmp
sbb
repz
loop
cmp
and
insb
movsb
out
push
rcr
pop
cmp
sub
aam
mov
sub
mov
cs
cld
lret
out
fildll
dec
and
inc
xchg
push
insl
ja
nop
fisttps
jl
ficoms
imul
mov
mov
sbb
jne
cmc
idivl
mov
and
push
sub
sti
inc
push
mov
cmc
add
idivl
outsb
inc
and
push
jno
arpl
negl
cmp
pop
and
decb
xor
stos
les
xchg
iret
sbb
adc
or
push
mov
xacquire
sahf
and
pop
jo
movsl
xchg
jle
fidivl
or
in
cmpsb
je
xor
mov
repz
jns
mov
andb
repnz
fbld
fnstsw
ds
call
out
es
idivl
test
loop
mov
dec
das
xor
add
inc
push
movsb
pop
sub
fwait
pop
inc
inc
dec
iret
pushl
mov
popa
scas
and
xchg
je
push
jae
loopne
mov
ficomps
add
es
inc
div
lahf
cli
imul
xor
sahf
inc
ret
mov
xchg
mov
data16
cmc
popf
fisubrs
inc
out
dec
sub
xchg
cmc
inc
sbb
or
mov
call
test
test
or
movsl
inc
sbb
push
push
nop
xor
inc
jns
push
adc
inc
iret
jo
jne
testl
and
sub
jbe
add
mov
push
mov
movsb
and
insl
pop
sbb
in
and
call
dec
pop
sub
icebp
push
cld
inc
xchg
xchg
inc
jns
mov
inc
push
cmc
std
push
stos
outsl
lock
push
xor
xchg
fwait
push
pushf
adc
jb
jl
inc
ja
cmp
inc
mov
sub
sbb
idivl
loope
pop
in
pop
aaa
das
int
adc
xor
sbb
or
cli
cmp
jmp
fidivl
dec
add
stos
adc
add
xchg
shlb
dec
push
pop
lods
cmpsl
iret
adc
leave
adc
sbb
mov
call
popa
mov
lret
stos
xchg
lock
ja
push
or
fcomi
mov
mov
movsb
jne
test
inc
jl
cwtl
ret
jnp
mov
lea
mov
dec
mov
xchg
int
and
push
push
and
loope
dec
pop
sub
mov
cmp
pop
xlat
sub
dec
int3
inc
pop
push
cmpsl
sbb
stc
out
imul
jbe
xor
call
mov
cmc
ret
cmpsl
mov
cmp
out
jnp,pn
inc
cmpsl
pop
adc
outsl
xor
jns
add
pop
cmpsb
push
test
push
mov
add
das
jl
fldcw
add
push
or
cmp
pushf
adc
fstl
jbe
icebp
adc
sbb
and
leave
push
into
add
int3
gs
sub
sbb
mov
es
mov
mov
cmp
gs
push
pop
pop
sub
cmp
push
shll
std
js
dec
jmp
jns
hlt
lods
xchg
insb
loopne
xor
rolb
cmpb
jl
pop
test
mov
sbb
stc
lret
jb
movsb
pop
sbb
and
jmp
xchg
cmp
push
test
dec
rcrl
mov
jge
daa
out
push
and
repnz
imul
add
lret
push
into
sub
jecxz
popl
sbb
sbb
outsl
pop
adc
in
xchg
xchg
setnp
sbb
mov
fcmovu
addr16
and
ja
out
test
aas
jne
fsubrs
popl
jle
test
add
clc
push
rolb
ljmp
in
lods
xchg
cmp
mov
adc
fidivs
sub
mov
and
and
pandn
or
cmp
push
fidivrl
or
push
add
pop
inc
je
jl
fsubr
in
inc
dec
pop
stc
mov
cmpsb
mov
repnz
xchg
sbb
mov
cmpsl
loope
ret
mov
xor
xchg
mov
pop
shll
push
lret
or
inc
sbbb
std
int
fisttpl
mov
fstp
pop
cmp
add
scas
pop
pop
xchg
pop
xchg
loopne
pop
pusha
xorb
jge
fwait
gs
adc
push
push
insb
inc
inc
je
or
inc
xchg
xor
enter
xchg
hlt
add
xlat
push
test
cmpsl
jnp
arpl
ss
push
cmc
popa
cmp
fists
and
jl
xlat
mov
jbe
aaa
lret
xchg
test
nop
mov
sbb
lahf
ja
xor
jmp
jle
jnp
insl
insb
mov
inc
push
test
lock
pop
sub
and
pop
push
inc
fisubrl
inc
cmpsl
pop
lret
adc
shrl
ljmp
mov
je
mov
mov
jg
aaa
test
lahf
dec
out
dec
int3
lds
add
xchg
xor
xor
aad
fsubrs
lock
push
cmp
pop
stc
dec
lret
jg
icebp
cmpl
mov
call
nop
sbb
aam
popf
fidivrl
ret
sbb
adc
xchg
mov
push
pop
movsb
ror
sub
inc
pushf
test
dec
into
sahf
mov
pop
fstl
ljmp
lret
rorb
add
cmp
add
mov
push
xchg
sub
stos
ficompl
cld
cld
jbe
and
push
aas
and
inc
aaa
mov
sub
jbe
inc
fcomp
sub
mov
cmpsb
pop
enter
xchg
sbb
push
dec
jg
test
cmpb
push
sub
jno
lret
outsl
lahf
jbe
and
jne
icebp
adc
pop
ret
loopne
sub
lods
outsl
add
test
test
and
xor
fsubrp
lea
dec
or
scas
jmp
out
test
mov
les
xor
stos
roll
enter
and
dec
test
push
hlt
jne
into
sub
jp
into
cltd
adcb
loope
ret
add
in
adc
aas
lock
dec
lea
jp
enter
xchg
sti
xchg
out
rorb
outsl
aas
jb
iret
stos
dec
adc
mov
pop
loope
jmp
pop
dec
orb
jns
and
mov
mov
and
sti
popa
push
iret
mov
cmpsl
into
push
xchg
mov
pop
adc
outsl
jno
ds
pushf
add
mov
pusha
push
push
ficoml
cmp
dec
sbb
mov
lods
xchg
in
mov
ret
lcall
pop
push
cmp
cli
data16
push
or
bound
shrb
popa
cmp
fldenv
inc
rolb
mov
aam
xor
bound
rcrb
fldcw
pop
call
aaa
lods
add
pop
in
adc
jns
push
mov
push
test
lahf
or
pop
fwait
test
iret
pusha
cmp
mov
lods
xchg
add
jg
stos
or
xchg
dec
into
pop
xor
jg
push
sti
add
cmp
cld
fucomp
push
call
jae
mov
mov
stos
andb
add
dec
andb
xor
mov
add
mov
sbb
add
xor
mov
cmpsl
loopne
dec
lods
or
es
adc
popf
mov
out
inc
xchg
sbb
sti
xchg
add
jmp
adc
xor
stos
test
mov
pop
mov
enter
ret
or
xor
xlat
pop
inc
adc
mov
negl
mov
negb
pop
mov
and
out
divb
inc
ja
je
fisubrl
mov
test
xor
iret
jecxz
jne
lea
clc
movsl
leave
cld
jmp
sub
push
xlat
arpl
or
pop
js
andb
pop
loop
xchg
or
les
xchg
ja
sbb
insb
sahf
lret
push
pop
push
js
mov
aam
push
sbb
fxch
push
xchg
cmp
int3
jns
mov
push
int3
ljmp
fs
cmc
movsl
cwtl
repz
dec
pusha
add
addr16
ret
dec
ret
cmpsl
mov
fwait
xchg
ret
sbb
xchg
jg
test
fidivs
jg
aas
push
xchg
jle
mov
cli
cli
mov
insb
hlt
cmp
rcr
push
jns
sbb
fcomip
jne
or
inc
loope
add
xorl
cmp
sbb
xor
xadd
mov
or
mulb
insl
jle
push
mov
icebp
sbb
mov
enter
int3
sbb
mov
xor
pop
jne
inc
pop
cmpsb
movsl
mov
aas
lods
clc
mov
mov
pop
test
cli
and
nop
or
aas
sub
cs
fdivl
jo
stc
ret
jae
addl
loopne
pop
notl
dec
leave
adc
lds
push
daa
std
cmp
push
and
add
stos
not
jno
xorl
add
mov
iret
mov
push
mov
stos
int3
jb
pop
jmp
push
or
add
pushf
pop
shlb
iret
rclb
out
fldcw
cld
fmull
push
cmp
push
loop
sbb
and
stc
cs
mov
mov
pop
inc
mov
and
insl
pop
dec
test
in
xchg
dec
dec
popa
lds
es
scas
xor
sahf
mov
repz
mov
dec
iret
mov
negb
stos
push
into
ficompl
and
sbb
dec
xchg
out
mov
push
inc
pushf
jo
sti
mov
cmpsb
push
pusha
cmpsl
nop
push
cmp
inc
popf
mov
add
push
sbb
mov
repz
ds
icebp
cld
or
aad
jb
aad
push
or
mov
cmp
cmpsb
imul
das
sahf
adc
or
ret
mov
pop
xchg
call
aas
dec
stc
sarb
ret
repnz
cmp
lret
sub
push
outsb
pushf
jno
sti
cmp
loop
inc
in
pop
pop
lock
aas
aad
xor
add
pop
rolb
cltd
push
lods
ljmp
outsb
xchg
pop
inc
test
add
sub
cmp
or
pop
call
mov
jb
and
dec
bswap
aas
jno
adc
pop
mov
adc
mov
call
in
push
sahf
dec
imulb
dec
mov
loopne
in
pop
or
jl
or
in
xor
jno
dec
and
inc
fiadds
fbld
lret
dec
jle
mov
popa
mov
das
aaa
cmp
add
push
adc
or
jle
lret
push
mov
out
es
lcall
call
stc
inc
mov
stc
push
rcrb
mov
xor
imul
adc
loop
shl
sbb
and
fldcw
test
test
sub
lods
sbb
nop
push
xchg
or
xchg
xor
lcall
rcrb
or
mov
add
and
sahf
loop
out
cld
ja
lock
pop
mov
mov
orl
add
das
fs
mov
mov
sbb
pop
jae
add
cmp
lea
inc
leave
push
es
mov
mull
dec
cmp
je
xlat
lcall
xchg
push
scas
fadd
push
sub
and
cld
dec
lods
icebp
nop
test
ljmp
je
aam
aam
mov
test
cmp
and
or
in
in
mov
lret
into
fisttpll
push
sub
lods
pop
xchg
insb
out
dec
xchg
mov
pop
xchg
scas
lock
and
clc
je
push
loope
jmp
push
and
and
mov
in
mov
and
and
jmp
test
mov
inc
mov
pushf
cwtl
adc
pop
pop
dec
dec
jno
cltd
pop
jns
and
add
and
sub
jl
int
jb
and
fs
sti
mov
cld
mov
cmp
out
xchg
jg
dec
xor
mov
jp
pop
fbld
stos
in
mov
std
in
repnz
pop
loope
jno
mov
adc
cmpl
mov
cld
jecxz
je
aam
imul
lret
rcr
mov
inc
push
stc
fcmovnu
push
adc
pop
mov
sub
push
andb
ret
cltd
xchg
xchg
push
pop
mov
loopne
mov
cmp
ret
jne
sub
scas
pop
inc
test
jge
xchg
sub
dec
pop
fnsave
sbb
mov
dec
cmp
imul
inc
push
cwtl
sahf
repz
es
jl
add
sub
adcb
cmpl
cltd
jne
jno
and
in
mov
sbb
js
out
or
jbe
dec
dec
push
outsl
fs
or
pop
fwait
repnz
sar
inc
aas
or
mov
enter
cmpl
and
stc
jno
inc
jno
dec
cmova
push
push
add
aam
inc
nop
xchg
mov
mov
pop
xlat
push
iret
cmp
mov
flds
dec
add
jb
imul
loope
ret
popf
cmc
aad
mov
lret
cltd
jmp
push
ret
movsb
mov
call
dec
inc
xchg
test
insb
or
mov
adc
xor
cmp
cld
or
cmp
in
inc
jb
xchg
adc
mov
call
mov
popa
pop
jno
mov
or
jecxz
push
jl
int
inc
mov
cwtl
xchg
test
pop
push
ret
cmp
adc
jnp
test
mov
aam
lret
pop
and
rol
pop
push
insb
sub
or
jmp
pop
jl
int3
pop
xchg
mov
mov
fucomip
or
xchg
xor
fidivrs
jnp
xchg
jecxz
add
jno
movsl
push
push
inc
lret
popa
push
or
fwait
pop
lods
adc
in
addb
sbb
inc
inc
adc
xchg
add
mov
push
xlat
xchg
sub
insl
fs
mov
xor
imul
fdivl
sbb
sbb
adc
gs
sbbl
pop
popa
jae
inc
ds
mov
push
shl
fstps
sub
adc
shll
sbb
mov
or
out
mov
add
sbb
jns
stc
mov
lahf
ds
mov
dec
mov
add
mov
pop
cli
out
inc
imul
inc
xor
sarl
jns
sbb
js
sbb
in
out
add
fcmovu
cwtl
or
sub
cmpsb
push
jp
movsb
pop
stos
inc
loop
aad
dec
mov
xchg
adc
cwtl
mov
cs
scas
iret
inc
xchg
lods
cs
and
add
test
nop
jge
stos
sbb
out
test
pop
dec
fdivr
mov
xchg
mov
call
jp
cmp
pop
sbb
dec
sbb
stc
fistpl
xchg
loope
aaa
call
sub
cmp
sbbl
or
adc
in
inc
sub
aad
and
mov
dec
iret
xlat
and
push
or
rolb
iret
and
out
cli
aam
and
mulb
stos
and
mov
in
and
cltd
mov
mov
push
mov
pop
stc
xchg
out
mov
or
jo
pop
lahf
adc
inc
andb
rclb
and
jmp
inc
sub
mov
xchg
int3
das
push
inc
mov
pop
mov
add
in
outsl
sub
lret
mov
xchg
test
dec
scas
sub
xor
xor
das
mov
daa
iret
das
cmp
jae
jg
in
or
jno
das
xchg
lahf
dec
sarl
dec
dec
dec
cltd
jae
sbb
orb
dec
inc
mov
inc
xchg
fists
aad
pop
nop
pop
arpl
or
div
mov
ja
xchg
xchg
cmp
das
insl
mov
pop
cmp
fbld
fs
mov
mov
xchg
mov
mov
mov
fsubrs
mov
test
mov
je
scas
dec
push
decb
sub
int3
out
push
neg
rcll
and
data16
mov
mov
outsl
aaa
pop
out
jl
icebp
mov
loope
jp
sub
scas
pop
adc
insl
out
lahf
sbb
cmp
add
aaa
xchg
inc
inc
mov
cmp
test
fstl
push
gs
je
push
fistpll
push
mov
bound
inc
enter
mov
mov
adc
loop
jecxz
add
add
mov
fisttps
lods
or
loope
or
jl
lods
lods
ret
jp
lcall
dec
sub
shrl
add
loope
ss
xor
movsl
inc
xchg
adc
mov
xor
push
mov
adc
cmp
ss
xchg
cmpsb
dec
and
int3
cmp
sbb
dec
jbe
mov
jo
mov
adc
rorb
pop
lret
shll
inc
add
ret
shll
add
mov
mov
rol
adc
in
mov
jns
adc
test
rorl
pop
mov
hlt
inc
push
movsb
call
xchg
lea
lds
or
inc
dec
nop
and
cmp
adc
sbb
dec
orb
mov
sub
movsb
pop
cmpsb
mov
aas
cmpb
xlat
dec
aas
ret
lcall
mov
lods
mov
loopne
iret
xchg
push
xchg
mov
addr16
test
lods
jmp
xor
sub
test
mov
rolb
pop
or
lcall
out
inc
sub
dec
movsl
icebp
xchg
mov
add
add
or
cld
aaa
mov
inc
out
adc
xchg
dec
mov
sbb
add
jp
xchg
in
inc
xor
pop
int3
mov
xor
adc
pop
xor
gs
cmpsl
arpl
mov
popf
pop
xchg
sub
nopl
outsl
fwait
test
test
shlb
ja
mov
call
fwait
mov
jae
aam
cld
loope
adc
pop
add
lcall
repz
xchg
movsb
xor
in
mov
pop
dec
add
dec
add
insl
testb
xorb
scas
cmpsl
add
ljmp
push
mov
inc
sub
je
jne
rcrb
jle
sahf
add
stos
sbb
jecxz
imul
movsb
loope
in
jle
cmp
movl
or
stos
mov
or
mov
outsb
stc
nop
jnp
mov
dec
std
and
xor
xor
xchg
jp
out
test
incl
mov
nop
int3
inc
mov
and
out
sub
cwtl
ja
mov
fnstcw
or
sbb
push
xchg
insb
mov
out
inc
out
push
sub
getsec
jae
adc
loope
gs
aas
sets
les
dec
stos
sub
mov
loope
cmc
inc
add
mov
int
ljmp
lock
mov
adc
mov
ss
movsb
adc
pop
mov
dec
cmpsb
nop/reserved
or
scas
push
dec
xchg
mov
jae
mov
in
cmp
cmp
pop
push
jmp
inc
add
jne
daa
std
cmp
add
arpl
gs
pop
or
hlt
mul
scas
push
xor
ss
andl
hlt
pop
sbb
mov
lahf
shlb
lret
scas
cmc
jg
repz
xor
ret
ja
jb
gs
mov
dec
outsb
notb
ss
cmp
lret
pop
adc
mov
int
sub
cmp
xchg
scas
or
xor
sbb
ja
cmc
iret
push
sbb
or
jnp
mov
fldenv
ljmp
cmpsb
subl
test
add
bound
int3
test
jmp
outsl
and
inc
add
cmp
mov
mov
insl
inc
jl
cmp
enter
sub
xchg
mov
jnp
cmp
cmpsb
fdivl
out
rorl
push
cmc
xor
bound
jnp
iret
dec
adc
jmp
and
test
cmpsb
shl
jp
cmp
lea
test
mov
pop
dec
aaa
jne
out
roll
in
rorl
adc
lea
sahf
mov
push
hlt
xchg
and
test
cs
in
repnz
sahf
push
mov
movsl
mov
fsubrl
mov
scas
sub
mov
push
add
and
cmp
adc
push
dec
mov
mov
sub
sbb
orb
xor
dec
ljmp
adc
iret
sbb
sti
scas
pop
lcall
outsl
in
jmp
jbe
push
xchg
rcl
inc
loope
jle,pn
cld
clc
mov
xchg
sbb
loope
jbe
je
jge
test
xchg
jl
mov
and
mov
shll
scas
out
lock
jo
cmpsb
clc
je
mov
imul
pop
js
sub
push
pop
mov
and
js
or
flds
movl
out
xchg
ret
jbe
jecxz
jmp
cmp
nop
mov
dec
mov
sbb
xor
mov
addr16
in
xor
lcall
iret
std
inc
xchg
roll
xlat
test
repnz
cmpsb
push
jae
mov
cltd
pop
lret
shrb
mov
icebp
and
and
xchg
cmp
sbb
sbb
or
rcll
popa
push
jb
mov
push
hlt
pop
lods
xchg
pop
lea
sub
xor
out
sahf
jg
icebp
stos
clc
fisttpl
adc
inc
sti
jecxz
adc
addr16
lcall
fisubs
int3
shr
adc
mov
imul
mov
gs
das
add
add
lret
daa
insb
pop
das
out
outsl
jle
sbb
in
fisttps
mov
pop
addr16
cmp
pop
out
xchg
dec
daa
pushl
cmpsl
sub
mov
xorl
repz
rclb
aad
sub
icebp
xchg
push
in
xchg
push
push
aas
sub
sbbl
lea
xor
fdiv
pop
xchg
jmp
out
data16
in
ja
ss
jnp
stc
or
das
xchg
mov
stos
pop
shlw
jmp
cmp
negb
sub
ds
push
push
mov
mov
pop
clc
and
je
adc
test
adc
hlt
mov
std
mov
sti
nop
or
int
cmpsl
js
cld
cli
fdivrs
mov
push
xchg
ljmp
adc
mov
and
mov
mov
xchg
hlt
inc
insb
inc
lcall
repz
icebp
inc
pop
xchg
sarl
pop
stos
add
adc
gs
ss
sub
sahf
or
or
aaa
adc
clc
inc
out
pop
xchg
push
jb
and
jge
fmull
jg
bound
xor
out
jg
cmp
rolb
xchg
pusha
and
add
popf
and
xchg
idiv
test
popa
mov
ja
xchg
cmc
movsb
hlt
sti
pop
into
test
sub
xchg
xor
xlat
adc
xchg
adc
aad
je
add
mov
aaa
sub
cmp
aad
cli
cmp
inc
and
adc
sub
sub
cltd
in
cmc
in
push
repnz
pushf
imul
or
sbb
lods
xchg
enter
or
in
xchg
movsl
aas
int3
push
or
mov
xor
out
push
cmp
pop
jne
push
push
add
or
outsl
and
mov
dec
fdivl
mov
pop
inc
rcr
shll
rol
or
pop
inc
fs
lcall
inc
fnsave
out
pop
fdivl
mov
fstp
scas
cs
pop
sub
int
add
mulb
sar
shll
in
cmpsb
cmp
jb
adc
fadd
insl
push
jl
jmp
push
imul
fiaddl
shrl
outsl
jmp
adc
testl
lahf
mov
dec
loopne
arpl
cmp
xchg
adc
pop
dec
adc
inc
cmp
or
sbbl
cmpsb
mov
lret
xchg
jecxz
stos
popf
test
sahf
sub
lahf
test
sahf
popa
test
popf
stos
in
inc
fldl
push
xor
sbb
pop
add
lock
mov
sub
xchg
lahf
andb
imull
xchg
or
mov
fsubrl
jl
sbb
add
insl
cmpl
shll
arpl
sub
xor
dec
mov
test
or
or
out
cmp
daa
mov
leave
lds
shl
pop
lock
xchg
call
ds
imul
xorb
faddl
pop
call
mov
test
push
mov
lods
fsubrl
jle
aas
popf
fldl
and
lret
inc
scas
ret
daa
cli
imul
lea
faddl
dec
mov
stos
and
insb
mov
out
xchg
jo
les
push
insl
in
xor
ret
fisubl
or
dec
xchg
mov
fiaddl
rdmsr
pop
dec
xor
xorb
imul
and
inc
and
iret
repz
ja
inc
sbb
inc
pop
je
push
sub
xchg
shll
and
inc
xor
int
xchg
add
cmp
out
sbb
or
push
sahf
mov
addr16
dec
adc
pop
xor
mov
sbb
add
pop
sahf
xor
and
lret
sbb
repz
fimull
push
jno
sti
adc
xchg
sbb
jg
sbb
xchg
dec
mov
sbb
call
xor
push
lods
lret
xor
mov
fwait
pop
imul
and
ljmp
test
adc
mov
out
or
sbb
pop
mov
pop
pop
jmp
mov
cmpsl
fisttpll
jmp
dec
sub
sbbl
mov
js
pushf
jbe
movsb
sub
sub
pusha
cs
xchg
test
cmpsb
ret
iret
sbb
fwait
and
data16
adc
in
dec
pop
mov
sti
lcall
pop
push
lds
loope
cltd
inc
or
repz
repz
xchg
iret
rolb
mov
cmp
data16
mov
mov
cltd
push
pushf
ret
outsl
dec
popf
pop
mov
arpl
shlb
mov
lods
add
ljmp
loopne
jne
pop
jns
dec
arpl
pop
pop
mov
dec
dec
add
xchg
aad
rcrl
in
loope
xchg
xchg
arpl
push
mov
dec
int3
cmp
aad
push
and
or
cs
pusha
shlb
sbbb
jl
push
cltd
sub
data16
push
pop
test
sbb
add
add
sub
shlb
xor
and
cmp
repnz
xchg
jb
adc
cmpsl
imul
pop
pop
cmp
movsl
sub
mov
sbb
inc
jl
jbe
or
mov
cld
mov
fsubrs
push
sub
orb
pop
dec
in
sahf
xlat
lods
mov
mov
aaa
add
xchg
out
stos
loope
ss
jne
sub
jmp
std
cmpsb
loope
jb
dec
shll
ret
pop
adc
ret
pushf
outsb
fs
xchg
insb
ficompl
pop
fwait
cld
or
loope
jmp
pop
push
pop
inc
adc
loope
sub
add
and
pop
mov
in
dec
xchg
sahf
ds
popf
xor
jp
sbb
lock
dec
jo
lds
jg
adc
xchg
daa
test
in
and
add
insl
inc
fs
inc
test
cltd
cld
popa
stos
or
dec
shrb
sbbl
xor
shr
fbstp
xchg
or
cmc
jecxz
push
push
fwait
dec
cmp
add
and
mov
or
scas
negb
enter
sub
popf
push
push
insl
lds
sti
sahf
dec
xchg
pop
pop
pop
xlat
stos
mov
lock
stos
add
jl
dec
out
stos
push
jne
fldt
mov
lahf
cmp
fs
mov
push
loopne
test
ret
xlat
mov
sub
cli
lods
repz
test
or
sub
and
loope
pop
sub
mov
cwtl
xchg
inc
and
pop
test
or
mov
push
or
incl
mov
jle
cmp
outsl
outsb
repz
pop
daa
lahf
adc
sbb
lret
mov
inc
shlb
mov
mov
or
fmuls
adc
cs
jno
and
mov
in
add
insl
cmp
repnz
lea
jbe
mov
js
jecxz
mov
mov
mov
cs
jo
loope
aaa
cmp
mov
push
fs
icebp
mov
adc
in
in
lds
cmp
inc
adc
je
push
pop
pop
or
aam
das
or
stc
outsb
or
popl
in
or
add
movsb
lock
std
add
xchg
lea
inc
dec
dec
lret
dec
mov
cli
loope
inc
xchg
fcoml
mov
xlat
mov
stos
insl
int3
icebp
lea
aad
rcr
inc
fdivs
cmp
cmovb
sbb
adc
clc
jmp
std
mov
push
mov
rorb
and
shrl
std
pushf
jns
mov
jp
int
mov
subb
add
das
jae
sub
jno
or
jb
or
adc
xlat
add
movsl
push
mov
adc
test
test
adc
adcb
imul
jp
mov
test
pop
scas
icebp
cmp
loopne
fs
inc
push
movsb
in
dec
test
add
ds
push
cli
popa
xor
loop
xor
pop
add
scas
test
icebp
into
mov
mov
adc
out
dec
hlt
xor
push
xchg
mov
sbb
jb
adc
mov
fidivs
filds
out
mov
sbb
in
xor
mov
sub
xchg
aaa
mov
and
cmp
and
or
push
test
test
adc
mov
pop
sbb
jecxz
mov
inc
pop
cmp
jmp
int
cmpsl
nop
or
or
ds
mov
dec
out
out
mov
pop
daa
subb
fwait
dec
add
sbb
dec
pusha
sub
fs
or
push
pop
push
test
repz
arpl
movsl
bound
lahf
mov
jo
xlat
in
dec
xchg
addr16
call
imul
mov
adc
xchg
out
push
lret
adc
outsl
loopne
pop
subb
inc
stos
lods
dec
bnd
xor
int
imul
cli
cmp
fs
out
push
inc
lods
stos
stos
cmp
push
adc
xchg
lret
ljmp
or
jg
add
decl
cwtl
sbb
out
gs
and
sub
jmp
and
mov
in
mov
in
loop
add
fisubs
test
cmp
out
xor
adc
sbb
dec
fnstcw
addl
lock
bound
push
lods
cld
sub
fstpt
loope
rclb
test
push
incl
lea
in
pop
mov
test
pop
jo
inc
and
daa
jmp
lds
mov
cmp
xchg
int
lahf
pop
jnp
push
aam
mov
lea
das
aad
into
push
ret
and
popf
out
aas
movsb
xchg
add
sarl
mov
frstor
cmp
pop
pusha
add
sahf
fs
fs
jnp
xchg
push
adc
iret
movsb
out
lret
fstpl
add
fimull
xchg
repnz
lods
insl
sub
imul
jne
xor
cltd
xor
mov
push
jmp
ret
push
ds
hlt
dec
adc
sub
mov
mov
cmp
and
nop
lds
xchg
sbb
pop
cmp
jl
and
jns
pusha
stc
sub
pop
scas
push
mov
push
pushf
sar
std
out
inc
mov
add
pop
mov
jo
jae
add
xchg
clc
ja
arpl
insl
ja
scas
popa
pop
arpl
pop
sbbl
mov
shrl
repz
ja
push
push
mov
test
stos
pusha
cmp
xor
adc
bswap
lock
dec
rolb
push
arpl
xor
jecxz
je
mov
push
push
mov
fnstcw
int3
inc
mov
jns
mov
outsb
test
fst
dec
bnd
adc
pop
inc
aaa
sub
ljmp
fsub
mov
adc
cmpl
int
jle
xchg
cld
mov
cmpsl
in
mov
call
shrl
xchg
sub
ja
std
lret
sub
add
lret
aas
push
test
pop
ficoml
divb
pushf
add
out
sub
popa
sub
imul
mov
inc
pop
inc
lret
shr
cmpsb
lcall
inc
mov
push
sub
sub
push
and
sbb
jle
cmc
mov
dec
ss
ss
fisubs
inc
xchg
jnp
sub
mov
gs
int
mov
lret
xor
enter
subl
dec
call
adc
inc
ds
mov
cltd
test
and
fildll
lea
pop
xchg
incb
inc
mov
icebp
das
dec
outsb
cmpsb
jecxz
jle
int3
mov
adc
jecxz
lcall
sub
scas
lds
xor
pop
ret
xchg
mov
push
movsl
cmp
jnp
inc
mov
inc
or
mov
insb
sub
or
cmp
test
addr16
or
push
xchg
addb
std
ret
ret
mov
or
arpl
push
and
adc
int3
aam
jnp
fidivl
inc
sti
or
jp
gs
in
push
fdivrp
imul
inc
xchg
sahf
sub
movsb
or
addr16
nop
push
sub
push
lea
ds
ss
xlat
sub
jl
mov
inc
fnstenv
test
in
jge
dec
mov
pop
hlt
push
icebp
push
jecxz
js
cli
out
cmp
adc
mov
mov
mov
aam
mov
rorl
loop
ds
ljmp
in
inc
popf
lods
loop
or
inc
xlat
cmp
cmp
jae
std
mov
sti
mov
int3
sub
xor
lret
mov
cli
dec
sysret
aam
pop
sbb
inc
pop
xchg
dec
ljmp
cmc
jle
mov
into
sub
loop
mov
daa
ficompl
pushl
mov
jne
nop
and
pop
xchg
push
in
adc
mov
sbb
push
into
fimull
rcrb
enter
push
out
aas
pop
cli
nop
xchg
js
pusha
jb
stos
add
cmpb
movsb
add
push
sbb
push
cmpsl
push
inc
adc
popf
mov
call
sbb
aas
sub
fildll
push
mov
and
mov
in
pop
lret
pop
hlt
clc
or
cwtl
int
aaa
les
and
lds
xor
jae
pop
adc
pop
pop
scas
cmp
fisubrs
sub
shr
push
jg
test
xchg
nop
mov
cmp
rolb
out
xor
fnstsw
addr16
enter
repz
add
inc
mov
cwtl
mov
cltd
lods
cmc
out
inc
insb
popf
mov
or
cmp
je
rorb
leave
loop
mov
cmc
lcall
cmpsb
pop
pop
loop
inc
mov
and
add
fdivl
nop
add
add
insb
push
lock
push
fiaddl
dec
mov
mov
ljmp
cmpsl
mov
jo
and
jo
cmp
sub
es
xor
adc
mov
mov
mov
repz
repz
jo
push
xor
sahf
shll
leave
push
mov
lods
push
mov
scas
dec
or
add
push
jne
xchg
pop
stc
in
dec
jle
fldt
lahf
sub
fwait
out
fnstcw
sub
dec
cmp
aas
jns
daa
sbb
pop
ret
lods
aas
mov
and
lea
loop
rclb
xchg
dec
lcall
loope
jb
mul
lods
or
adc
mov
stos
jge
sahf
js
sbb
inc
push
and
icebp
sub
lods
jp
or
jmp
sbb
pop
das
cs
cltd
std
cmp
xor
xchg
jmp
adc
ret
pop
pop
lret
pop
cmp
scas
cli
pop
ss
push
ret
fnstsw
mov
inc
push
and
mov
dec
int3
push
cmp
int
aad
push
mov
cltd
sbb
in
cmovp
adc
lds
mov
adc
inc
jecxz
and
push
sbb
mov
mov
jg
dec
pop
dec
hlt
imul
pop
pop
loope
mov
pop
pusha
fsubs
imul
js
sub
outsl
mov
jmp
xor
jno
mov
pop
dec
nop
jmp
lretw
dec
cwtl
iret
lret
sarb
pop
fildl
dec
mov
xchg
ss
mov
setae
cmp
sbbb
mov
inc
or
lods
lods
jb
jo
scas
shlb
lahf
mov
dec
jl
push
mov
push
cmp
sub
jb
adcb
das
push
jl
pop
adc
popf
rolb
xchg
outsl
or
mov
inc
and
or
xchg
xchg
jo
in
push
inc
cmp
imulb
sbb
add
mov
dec
arpl
dec
xchg
sub
and
sbb
sub
xor
xchg
add
popa
in
mov
dec
and
and
mov
out
movsb
scas
add
out
shrl
mov
push
les
loopne
jns
int3
sbb
push
push
mov
push
cmc
sub
cmp
cld
sub
jae
adc
pop
xlat
cmpsl
xchg
stc
push
dec
fidivrs
ljmp
xchg
aad
mov
ficomps
mov
dec
loop
scas
clc
popa
in
lahf
insl
in
xchg
out
stos
lret
sub
add
shll
and
adc
add
and
out
cli
cmp
cmp
cmp
cmp
je
pop
shr
in
arpl
fisubs
jl
insb
push
ja
outsb
hlt
pop
ljmp
pop
mov
mov
mov
mov
ja
movsl
inc
cld
fs
in
sbb
testl
test
lcall
sbb
pop
jg
mov
imul
xlat
adc
sub
add
dec
mov
lds
lcall
lret
lret
mov
outsb
pop
rcrb
push
mov
cli
cmpsl
xchg
inc
and
jne
mov
inc
inc
dec
mov
mov
lcall
dec
jbe
pop
mov
imul
mov
xlat
adc
clc
inc
xchg
dec
or
cltd
xchg
mov
in
or
mov
int3
push
rorl
xchg
sbb
mov
arpl
pop
rorl
mov
std
push
jae
fwait
inc
mov
enter
aas
sub
scas
xchg
and
mov
divl
xchg
add
lahf
ret
jb
sbb
ja
push
jp
mov
jns
inc
dec
insb
xchg
mov
dec
jge
in
or
pop
mov
cs
add
sti
lods
pop
inc
xchg
add
xor
xchg
shlb
lods
orb
sbb
sarb
mov
rcrb
clc
sbb
sub
adc
mov
sub
insl
sbb
and
dec
jo
dec
ret
mov
imull
and
into
ficompl
fstpl
pushf
add
and
jg
mov
aaa
nop
aaa
or
adcl
mov
ret
jbe
loop
pop
popf
scas
mov
lds
in
sbb
add
shlb
adc
mov
jno
or
or
rorl
dec
testb
dec
or
iret
stc
or
jmp
push
inc
jbe
pop
push
cld
mov
pop
pop
and
insb
test
lods
add
jecxz
dec
or
es
push
xchg
pusha
add
or
outsl
jl
test
adcl
in
and
cwtl
cmp
mov
adc
xchg
push
inc
dec
aad
and
mov
jbe
js
inc
or
imulb
push
jp
negl
mov
xor
out
push
fisttpll
jne
pop
das
mov
cmp
nop
inc
or
sub
inc
shl
push
push
fmuls
mov
insb
repz
xor
popl
mov
in
js
scas
inc
dec
jb
lock
sbb
shl
inc
xor
enter
pop
xchg
push
push
dec
adc
and
jne
jle
xlat
jp
into
mov
add
stos
jge
mov
test
and
mov
pop
push
xchg
call
and
nop
mov
add
insl
sbb
sbb
mov
jne
sub
nop
jle
ja
push
jp
inc
cmp
enter
sbb
ret
push
repz
inc
add
outsl
sub
loopne
shl
negb
xchg
je
mov
cmp
arpl
fadds
inc
adc
adc
xchg
adc
addb
jnp
mov
sub
je
movsb
dec
pop
push
and
and
ret
mov
pushf
lea
orb
xor
and
aam
call
int
xchg
fcmovnb
xor
outsl
dec
lahf
cs
dec
push
mov
filds
pop
pop
sbb
cmp
adc
aaa
sbb
xchg
js
xor
stc
or
aad
filds
add
adc
in
frstor
imul
xchg
idivl
mov
lods
cmpsl
jle
nop
push
repz
stos
mov
mov
pop
dec
cs
or
loop
negb
pop
dec
xor
cmp
mov
aam
xor
in
leave
cmpsl
xor
in
xlat
movsb
outsl
daa
adc
scas
xchg
cmpsb
jbe
and
pop
jns
std
dec
cmp
dec
cmp
fstl
lahf
push
mov
xor
push
roll
test
xchg
mov
dec
push
adc
adc
sbb
jns
push
cwtl
push
addb
and
adc
in
lret
and
sub
xor
cmp
sbbb
inc
int
rep
lock
jno
jno
adc
cwtl
adc
inc
es
dec
nop
push
stos
dec
std
xchg
cmp
sbb
int
or
jne
inc
mov
leave
xchg
xchg
mov
popf
xor
mov
mov
cmovns
mov
mov
jno
outsb
add
rorl
repz
xchg
dec
or
dec
lcall
adc
cmpsb
enter
mov
adc
mov
and
add
sub
xchg
push
push
pop
sub
repz
sbb
xor
mul
add
loopne
fistpll
bound
add
mov
mull
idivb
loop
insb
fimuls
mov
sbb
sti
lods
in
mov
outsl
xchg
iret
hlt
cmp
mov
inc
jmp
add
scas
mov
pop
cmc
mov
movsl
imul
pop
sbbl
mov
aaa
shl
dec
jle
xor
push
repnz
inc
repnz
cltd
xchg
mov
push
stos
stos
dec
rcrb
xorb
loop
mov
addr16
out
mov
lods
adc
jae
adc
ret
jl
loop
mov
jge
pushl
add
aas
mov
fnstsw
push
lods
cmp
daa
mov
xor
pop
mov
fwait
jae
int3
rcll
xor
mov
jb
xchg
adc
or
cwtl
inc
push
mov
inc
outsb
div
xor
out
mov
cmp
out
xchg
push
ja
adc
cltd
out
ret
mov
jae
jmp
ret
pop
sub
arpl
push
inc
and
loop
sarl
xor
int
insb
xchg
add
mov
iret
push
lea
cwtl
scas
pop
sahf
jb
jp
fidivs
subl
sbb
stos
cld
xor
xor
iret
call
leave
jmp
and
push
out
inc
push
stc
aas
clc
stos
dec
xchg
adc
lret
into
dec
push
mov
or
dec
fldt
shll
rcll
out
mov
mov
pop
sbb
sbb
pop
es
notb
dec
aaa
gs
in
fcoml
cmpsl
pop
xchg
test
in
scas
and
mov
andb
bound
stos
test
out
jbe
jmp
jg
test
rorb
andl
outsl
sahf
cmp
inc
jbe
dec
movsl
fsubrs
adc
mov
cmpsb
jp
mov
push
inc
mov
xchg
lock
mov
aam
cmp
or
mov
mov
imul
scas
lret
sbb
jmp
xor
add
mov
mov
adc
cmp
fidivl
inc
inc
add
push
jle
aad
scas
leave
iret
out
movsl
mov
push
sbb
sti
adc
ret
cld
fsubr
adc
cmp
mov
and
adc
mov
mov
pop
jg
enter
imul
faddl
fsubrs
insl
in
stos
push
je
cld
into
mov
fdivrl
push
aas
mov
aaa
int
jne
sahf
sbb
cmp
jge
ja
insl
data16
roll
rcrb
lea
add
fidivs
mov
cmp
jo
push
mov
cmpsb
dec
scas
test
lds
xor
imul
stos
mov
lea
cmp
mov
cs
out
enter
cmp
jge
arpl
add
je
js
add
xchg
dec
test
sub
push
in
repnz
dec
adc
cmc
leave
sub
lret
add
and
into
and
adc
ret
scas
daa
jmp
call
pop
xchg
push
mov
out
push
sub
add
pop
jb
pop
sub
cmpsb
scas
xchg
add
pop
in
jp
xor
jp
mov
push
sbb
iret
jmp
filds
test
out
push
fsubrs
sbb
outsl
outsb
aam
push
scas
loopne
int3
inc
dec
xchg
test
mov
sub
pop
jp
movsl
jl
fld
push
jp
xor
pop
mov
iret
pop
lock
lock
dec
pop
push
out
cli
xor
sbb
iret
ficomps
push
push
in
xorb
movsl
fisttpl
mov
xchg
pop
add
adc
scas
in
mov
cs
xchg
std
out
std
scas
loop
and
sbb
jmp
dec
scas
das
sub
dec
cmp
add
hlt
sbb
mov
outsl
imul
fsubrs
xor
loopne
push
add
jecxz
jg
mov
ret
mov
jge
rolb
xchg
andb
fistl
dec
push
cmp
lods
mov
or
adc
popf
sbb
movsl
orb
inc
push
cmc
jp
xchg
jbe
sti
sub
bound
negb
add
sbb
shl
jge
mov
leave
icebp
fnstcw
dec
or
cmpsb
xchg
inc
xchg
lds
jbe
lret
ljmp
xor
out
xor
out
mov
ljmp
mov
movsb
dec
xor
xor
or
test
sti
rorb
push
movsb
outsb
or
mov
push
or
mov
lea
mov
aam
loopne
out
pop
lock
cmpsl
push
add
les
mov
xchg
addr16
sarb
and
rcrb
es
mov
adc
in
jne
stc
dec
jmp
frstor
movb
xor
test
outsb
jle
rclb
and
fistpll
and
pop
cmp
push
sahf
pop
mov
lret
rcll
pop
xor
and
movsl
fisubs
lret
ds
cmpsb
stos
mov
mov
int
mov
ljmp
inc
in
clc
mov
cmp
loop
mov
push
mov
or
sbb
mov
subb
dec
mov
mov
outsb
mov
mull
pop
fstps
adc
or
and
jbe
shlb
adc
lea
lcall
xchg
mov
jns
test
fildl
repz
mov
int
sub
arpl
in
sbb
in
mov
or
mov
cmpsl
hlt
sub
pop
sub
jno
inc
js
pop
lret
and
mov
aad
mov
stos
mov
insl
dec
xchg
mov
mov
adc
xlat
push
mov
push
lcall
repz
loopne
loope
leave
jg
mov
aaa
popf
lods
mov
and
jg
adc
push
mov
mov
fmull
sub
lods
int3
cld
cli
repnz
mov
dec
adc
mov
and
or
insl
stc
loop
lret
dec
cmpsb
mov
mov
in
cmpsb
mov
jl
mov
push
cli
cmp
movsl
sbb
adc
outsb
shlb
jecxz
push
push
imul
push
xchg
daa
fsubl
addb
in
inc
fcomps
test
mov
dec
xchg
popf
jmp
pop
test
mov
mov
sub
aam
rorb
push
xchg
fistps
or
shlb
icebp
scas
out
fadd
fsubp
cltd
ss
sbb
mov
test
xor
shlb
outsl
ds
push
imul
fmul
shr
repz
cs
cvtps2pi
repnz
ret
and
sub
rcrb
movsb
cmpsb
ret
sub
in
or
push
jae
cmp
dec
sbb
push
int3
or
pop
jmp
test
gs
jl
lret
jnp
ljmp
call
or
push
lcall
fwait
imul
shll
pop
or
in
sub
nop
xlat
cmpsl
mov
jns
add
bts
repnz
in
in
or
mov
fs
add
jl
sub
cmpsl
dec
mov
mov
sub
dec
ds
pop
sbb
shr
pop
push
movsb
pop
or
and
pop
pop
bound
test
xchg
popa
stos
dec
test
outsl
lahf
leave
into
lea
xchg
push
sub
jp
fcmovbe
fwait
in
dec
out
int
pushf
lahf
inc
and
and
data16
mov
shlb
ljmp
mov
loope
daa
jp
or
cli
jp,pt
rclb
adc
pop
push
jmp
mov
cmp
or
xchg
mov
push
fwait
sbb
jmp
outsl
int3
cmp
dec
push
les
subb
ss
stc
or
pop
dec
cmp
and
sahf
jo
imul
jb
push
ret
sar
dec
jae
and
clc
movsb
adc
fstps
xchg
mov
pop
pop
or
or
sbb
daa
mov
cltd
add
out
fucomi
pop
cmp
movsb
sbb
enter
jle
ret
les
xor
adc
and
in
cmp
cmpsl
mov
cmp
dec
add
es
push
inc
and
inc
jne
cmc
cltd
adc
sbb
lods
sub
out
nop
xchg
adc
aas
faddl
das
push
mov
iret
scas
aad
imul
or
enter
cli
jns
ret
ja
add
popa
sub
adcb
imul
jb
stc
mov
jge
sub
pop
lret
out
and
hlt
jl
ret
add
cwtl
mov
loopne
pop
mov
mov
test
mov
sub
cmpsb
movsb
adc
inc
inc
es
mov
sbbb
movsl
lcall
push
sbb
jbe
and
insb
mov
jmp
sbb
jp
mov
mov
mov
repz
repnz
cli
push
sub
mov
or
push
sbb
xor
cmc
je
push
xchg
xchg
xchg
jns
and
outsb
mov
scas
xchg
jle
out
stos
add
imul
daa
and
stc
jl
cli
adc
gs
repnz
jnp
pop
movsl
jmp
js
xchg
xor
inc
adc
jbe
mull
fs
stos
scas
and
cmp
pop
fbld
push
jmp
test
inc
fstpl
dec
push
and
test
lds
divb
loope
bnd
jae
sbb
lock
lret
mov
mov
mov
mov
jecxz
loope
xchg
xchg
inc
or
cmp
jbe
sbb
sbb
popf
pop
stc
std
repnz
mov
mov
and
ljmp
cltd
ja
in
jno
adc
jecxz
andb
xor
sbb
mov
and
dec
dec
lods
or
xchg
sbb
loopne
and
or
adc
and
mov
movhps
jecxz
fs
test
jmp
popa
repnz
in
hlt
xchg
dec
inc
inc
fisubl
std
push
mov
stc
ds
adc
call
pop
pop
adc
lcall
and
inc
es
call
data16
icebp
inc
loopne
ret
notl
scas
out
or
xchg
aaa
sub
dec
and
daa
push
lods
notl
cli
hlt
or
loop
aaa
les
lret
cmp
pop
cs
xchg
iret
imul
iret
or
loopne
push
shlb
inc
insb
loopne
cmp
pushf
and
pop
mov
xchg
or
mov
mov
sar
out
and
inc
dec
and
push
inc
sbb
scas
adc
inc
ret
test
insl
in
lock
jecxz
lretw
pop
imul
xchg
inc
mov
xchg
ja
xchg
push
js
sbb
sbb
sbb
sub
adc
mov
add
xchg
ja
xor
fiadds
fstps
adc
insl
mov
add
loopne
sarl
clc
int
xchg
xor
jp
cmp
inc
jnp
sub
shll
out
and
lret
mov
cmp
iret
jle
jmp
sahf
push
loope
push
out
fwait
iret
or
out
cmp
xchg
test
leave
add
test
dec
imul
sbb
leave
jo
add
test
call
push
cwtd
xchg
jnp
in
and
rorb
xchg
sub
loop
test
or
cltd
sarl
cmpsl
insl
mov
daa
dec
mov
lods
rclb
adc
add
jge
inc
pop
ss
lock
cltd
daa
ret
add
jl
xor
out
xor
jae
aam
push
popa
lcall
pop
sub
xor
std
mov
push
sar
or
std
cwtl
xchg
insl
test
out
mov
scas
xor
data16
ds
lds
sub
cmp
out
mov
daa
lock
iret
movhps
lret
xor
pop
arpl
daa
insl
fprem1
push
fbstp
mov
jg
push
out
sub
or
and
fdivrs
inc
and
adc
jno
sbb
aam
mov
fdivs
das
push
fbld
push
inc
jp
inc
mov
add
pop
pop
lcall
adc
in
loopne
jb
fnstsw
adc
push
xor
mov
xchg
repz
adc
clc
xor
loopne
cmp
dec
cld
or
popa
bound
xor
aaa
push
or
stos
mov
sbb
add
fcoms
push
popf
dec
pop
mov
leave
add
out
dec
xchg
enter
mov
inc
fiaddl
loopne
push
out
add
mov
testl
xchg
in
out
and
or
ja
out
or
sub
repnz
sbb
iret
sub
jnp
in
leave
jg
mov
xchg
test
add
aas
loopne
cmc
mov
inc
jmp
les
jns
clc
pop
jmp
mulb
jl
mov
ret
sub
xor
test
scas
lods
push
inc
dec
aam
or
xlat
cmpsb
aaa
dec
outsl
inc
push
xor
pop
int
in
in
or
push
ss
pop
xchg
adc
cmc
dec
push
adc
ljmp
xchg
in
push
cmc
mov
adc
push
ljmp
icebp
mov
add
lds
loopne
dec
repz
sbb
repz
fcmovb
jno
mov
pop
cwtl
mov
push
sbb
push
pop
push
mov
xchg
hlt
mov
jnp
and
shrl
arpl
adc
movsb
nop
cmc
or
or
or
xor
out
add
pop
fnstcw
out
call
fnstenv
inc
cmp
fcmovne
ljmp
sbb
cmp
jne
mov
inc
inc
jmp
daa
pop
mov
jo
insb
inc
decb
cmpl
std
out
inc
ret
add
int
mov
loope
pop
cmc
push
inc
inc
jg
or
iret
test
idivl
lret
adc
mov
mov
es
and
div
sub
sub
aas
inc
dec
xchg
adc
pop
ret
cmp
ja
jp
fbld
xchg
cmpsl
imul
flds
or
mov
pusha
movsb
rcr
xor
pop
leave
cld
test
mov
mov
decl
lret
daa
push
cmp
jge
scas
addr16
dec
sub
mov
punpcklwd
push
pop
lcall
sahf
ja
jno
push
xchg
cmpsb
enter
add
das
sub
sub
add
mov
jns
fwait
and
mov
inc
cmp
addb
int3
iret
sbb
cs
mov
mov
mov
in
mov
xorb
bound
jmp
or
add
sub
jg
aam
imull
mov
inc
lds
stos
fildl
mov
dec
and
in
xchg
lock
mov
data16
fdivs
or
rcrb
mov
test
mov
add
cmp
add
pop
cmp
xor
add
scas
cmpsb
add
stos
test
test
fisttps
test
mov
lea
sbb
mov
imul
dec
lds
push
mov
rclb
push
into
sahf
test
xchg
insb
repnz
jbe
test
test
daa
aad
dec
mov
repz
mov
das
outsl
mov
dec
jecxz
call
ja
inc
mull
sbb
cmpl
mov
push
pop
mov
dec
push
ficoms
cli
cmp
mov
push
aaa
out
jno
xchg
les
mov
ret
bound
mov
xlat
sti
sbb
mov
push
add
inc
add
mov
mov
inc
or
add
out
lods
lahf
mov
xchg
shlb
mov
enter
mov
mov
and
jg
or
adc
add
add
adc
ja
mov
in
fs
jo
sub
shrb
push
cmp
shl
decb
fucomip
das
push
pop
xchg
lea
inc
stc
inc
loope
cs
mov
mov
pop
ljmp
bound
sub
sahf
mov
int3
mov
cli
xlat
ss
adcb
adc
mov
shlb
cmpl
cld
adc
call
mov
xchg
mov
cmp
pop
cmpsb
data16
adc
xor
adc
loop
mov
add
xchg
xor
cs
lods
cmp
shrl
or
out
out
xor
adc
sti
dec
xlat
lret
out
or
mov
rcrl
jo
aas
xchg
movl
sub
in
pop
xor
mov
jecxz
pop
cmp
and
test
pop
ja
popf
sub
adc
repz
cmpsl
pop
push
cmp
pushf
mov
dec
leave
addl
das
push
imul
cmpb
add
mov
push
xchg
adc
lds
xor
mov
dec
out
push
jo
mov
roll
mov
xchg
popa
add
sub
cli
mov
sub
roll
inc
into
in
divl
arpl
mov
adc
add
sbbl
lcall
fsubs
pop
and
lahf
in
mov
cmp
arpl
pop
mov
je
cmpsb
cmp
xchg
mov
pop
jecxz
inc
jno
mov
or
je
or
jne
in
imul
iret
add
push
lcall
cmp
sbb
les
sbb
push
sbbb
movsb
sbb
out
cli
jp
add
add
stc
fwait
insl
jecxz
ret
aaa
pop
sbb
sti
ljmp
lods
sbb
dec
test
pop
sahf
adc
outsl
xchg
insb
jno
add
rcl
push
insb
cmpsl
pop
dec
data16
pusha
das
bound
jle
in
sbb
adc
pop
dec
popf
jnp
mov
test
ja
mov
mov
push
xor
stos
xchg
leave
xchg
and
lret
fidivs
dec
dec
ja
jmp
in
roll
repnz
pop
sub
mov
jb
fmul
dec
pusha
mov
lcall
xor
sarl
mov
cmp
jle
sub
loop
rclb
sbb
rorb
in
outsl
dec
mov
jnp
mov
add
push
hlt
cli
add
test
adc
jnp
mov
push
pusha
inc
push
addb
adc
cwtl
lds
jp
inc
fsubrs
lds
or
jl
push
mul
or
clc
cmp
int
ja
xorb
iret
and
jl
cmp
cmp
aaa
or
into
lea
pusha
ja
imul
test
int3
cmpsb
stc
popa
jo
pop
or
jp
sub
inc
ljmp
mov
popf
or
add
inc
pop
push
pop
mov
pusha
mov
mov
clc
scas
mov
dec
or
ret
stc
aaa
inc
jae
ret
xor
bound
xor
loop
outsb
popa
push
cli
and
das
or
inc
jge
loopne
xchg
cmp
fbstp
and
mov
lods
push
cwtl
jecxz
adc
mov
incb
sbb
call
xor
push
cmp
sub
loopne
shlb
imul
and
lahf
repz
sub
push
pushf
out
mov
fidivrs
rolb
pop
cmc
push
mov
sub
fsubl
enter
js
pop
cmp
push
int
cmp
sahf
cld
xchg
cmc
fwait
ljmp
movsb
push
cmp
mov
sub
loope
in
fnstenv
pop
and
cmp
or
push
fsubs
test
out
test
clc
and
sbb
scas
rorl
jl
pop
pextrw
mov
mov
jb
jp
or
lret
xchg
imul
rcrb
or
add
je
add
shl
add
ss
inc
repz
push
push
cld
outsl
cld
testl
dec
inc
inc
sub
xchg
test
add
cmp
mov
mov
scas
div
cmp
sbb
arpl
out
loope
call
add
jecxz
mov
xchg
data16
fldt
out
repnz
ret
cld
sbb
jecxz
push
aaa
int
xorb
rolb
xchg
add
jbe
mov
mov
sbb
mov
sub
xor
and
lods
sti
fisubl
mov
ds
mov
sbb
or
orb
xor
push
cmp
mov
dec
into
pop
jo
jmp
jmp
cltd
lock
pop
cmp
xor
stos
jb
mov
popa
mov
cmp
sysret
sbb
popa
js
mov
jno
mov
sub
mov
cmc
fistpll
ds
cmp
ljmp
and
bound
sub
in
mov
lret
daa
xor
pop
popf
cmp
inc
xchg
daa
jno
je
inc
inc
mov
scas
jne
mov
mov
or
dec
fmull
adc
pop
imul
dec
rcrb
insb
cltd
stos
das
fisttpll
cwtl
pop
out
call
test
js
dec
fs
cwtl
pop
lods
rcl
jbe
loop
fildl
xchg
jno
jmp
cmp
add
mov
push
ljmp
mov
mov
push
or
push
dec
test
xor
sbb
lcall
mov
in
mov
in
insb
mov
mov
aas
movsb
inc
fimull
cmp
mov
pushf
dec
mov
aaa
not
cmp
ja
dec
outsl
cmc
sub
add
mov
iret
mov
jbe
dec
inc
inc
mov
mov
cmp
pop
loop
rcrl
mov
cltd
rorb
icebp
xor
les
or
dec
lods
fdivrl
mov
outsl
les
lods
mov
popa
stc
mov
sbbl
lret
dec
adc
into
mov
xor
mov
repz
fstl
lahf
adcl
jl
push
sar
cmp
push
pop
pusha
jns
sbbb
bound
nopl
int3
sbb
incb
xchg
sub
and
iret
insb
xchg
testb
out
sub
mov
adc
push
cmc
iret
test
jb
mov
inc
add
rcll
loop
sub
lods
cmpsl
andl
jle
enter
out
inc
xor
imul
and
xchg
xor
lret
push
inc
cmpsl
into
push
aaa
out
cmp
and
jecxz
outsb
fsubs
or
jnp
mov
hlt
lea
out
pushf
clc
inc
and
test
push
in
mov
fldenv
popa
pusha
in
std
sbb
adc
in
out
push
adc
mov
xor
cmp
jecxz
lea
fists
inc
jle
loopne
sbb
xlat
nop
push
out
mov
and
insb
sub
orb
out
sete
movsl
inc
fmulp
pop
and
add
das
outsl
jecxz
insb
fs
pop
ret
pop
mov
out
out
cmc
out
mov
push
ret
es
daa
inc
clc
mov
fnsave
xor
jmp
fldenv
adc
repnz
fldcw
push
dec
mov
dec
adc
enter
imul
mov
cmc
xchg
outsl
pop
xor
pop
push
cmpl
fistpl
or
push
add
icebp
jb
pop
adc
outsl
fadd
adc
out
dec
jnp
adc
lods
fidivl
subl
inc
sub
xchg
mov
das
out
mov
addl
mov
mov
push
aaa
std
sahf
push
je
aas
repz
rclb
into
dec
imul
xchg
ljmp
xor
fnstsw
jl
loope
ljmp
and
and
enter
imul
xchg
and
lcall
and
fisttpl
inc
fistps
test
inc
jle
dec
cmp
ss
pop
fdiv
sbb
mov
inc
lret
and
movsl
mov
loopne
dec
in
iret
stos
jmp
xchg
lcall
mov
jecxz
jae
js
pop
mov
in
test
sbb
mov
repnz
push
push
in
xor
fs
sub
jp
mov
sbb
test
jg
and
aaa
sbb
jp
movsb
inc
cmp
push
cmp
cmp
sbb
gs
xor
lret
xor
xchg
sub
daa
jle
cmp
sbb
pop
cmp
cmovbe
add
push
xchg
bnd
pop
ds
loope
or
shll
fsubp
adc
pop
push
push
cli
cmp
int
movsl
mov
lods
mov
dec
les
mov
xchg
adc
dec
xorl
xchg
mov
push
movsb
mov
aam
mov
and
inc
lods
scas
push
and
sub
ljmp
pop
int
fldl
pusha
lods
sub
je
push
fnsave
sbbb
aaa
add
ss
addr16
cmpsl
fdivr
adc
rcrb
and
or
movsb
pop
fidivl
xor
xor
push
add
sub
adc
and
jecxz
lahf
mov
aas
sbb
cmp
ret
and
pop
dec
ret
xor
cmp
movsb
sbbl
loope
jg
inc
loope
orl
xorl
cmp
jmp
sub
or
fdiv
jge
and
sbb
or
cmc
cli
sbb
adc
dec
or
jb
mov
repnz
sbb
cld
pop
xlat
ja
int3
cmpsl
in
jb
pop
inc
cmp
shll
mov
or
jne
xchg
add
xor
out
and
cmp
in
ret
xlat
add
push
adc
cltd
cs
or
pop
xchg
push
enter
lret
imul
push
lock
je
push
xchg
inc
pop
or
imul
loope
aam
nop
adc
pop
aaa
test
addr16
adc
and
sbb
inc
mov
or
inc
sub
mov
mov
imul
lahf
adc
add
mov
xchg
and
push
daa
fsubrl
xchg
adc
xchg
cmpsl
cld
jl
gs
xorb
lock
decl
adc
lahf
push
jns
jne
popa
lret
imul
out
pop
data16
data16
jnp
jecxz
repz
test
xchg
and
test
mov
xor
add
int3
inc
mov
arpl
cwtl
insl
xchg
fwait
pusha
fucom
xor
in
and
lds
xchg
cmp
jg
pop
sbb
xlat
xchg
mov
mov
repz
inc
inc
jbe
dec
mov
call
mov
dec
lret
bound
mov
in
repnz
subl
stos
dec
cwtl
xlat
dec
shl
cmp
pop
addl
es
mov
les
dec
jp
sahf
rcrb
rclb
push
xorl
cld
cwtl
popa
jnp
mov
popa
int
hlt
clc
out
test
cmpsl
pop
lahf
fnstcw
dec
jg
shrl
add
ljmp
or
repnz
dec
shlb
dec
cmp
mov
js
cld
mov
push
rol
add
xchg
sub
adc
inc
pop
jne
sub
gs
rcll
imul
test
xorl
push
push
mov
mov
jl
aaa
and
pop
and
fstp
scas
aas
or
mov
mov
sbbb
bound
bound
aaa
adc
pop
inc
imul
mov
and
push
ffree
std
adc
push
pop
sub
mov
fistl
outsl
dec
adc
jns
xor
mov
sub
add
out
enter
loopne
jmp
jmp
xchg
adcl
jge
es
dec
loope
imul
and
mov
dec
movsb
movsl
inc
mov
lret
int
out
fnstsw
es
fnstsw
mov
xor
test
add
sbb
sbb
cmc
pop
cmp
addr16
and
scas
stos
mov
sub
cmp
lahf
or
mov
fs
out
mov
insl
push
dec
imul
data16
inc
pop
scas
mov
ss
adc
in
stos
inc
movsl
and
xchg
push
arpl
rclb
nop
jb
sub
inc
test
insb
popa
or
enter
jno
in
jge
ret
lahf
popa
inc
mov
cmp
push
sub
popf
cmc
call
daa
arpl
popf
cltd
or
jle
into
aaa
adc
lods
movsb
mov
pop
mov
hlt
fmul
add
sub
jns
xorb
push
ja
fistl
in
sbb
pop
sarb
not
mov
shll
add
mov
dec
and
aam
mov
cmp
pop
lods
sbb
cmp
imul
fwait
in
repz
dec
hlt
inc
xlat
pusha
je
out
sahf
pushl
imul
pop
int
mov
sbb
push
jbe
pop
fwait
loope
and
das
in
mov
cmp
mov
cmp
out
sbb
fs
pop
das
incb
jmp
xchg
add
into
cmpsb
inc
data16
pop
jno
loope
cmpsl
cltd
cmp
psubq
shrl
pop
jmp
mov
lea
hlt
dec
xor
loop
mov
mov
in
bound
xor
add
sub
fadd
ja
jge
dec
mov
das
pop
xchg
jb
test
rolb
outsl
stos
loope
mov
outsl
xor
jae
sarb
sar
out
mov
fildl
dec
decb
ret
xor
dec
inc
addl
aaa
sub
mov
js
mov
sub
xlat
mov
lea
popa
insl
or
loope
je
mov
insb
sub
icebp
ror
adc
inc
mov
cwtl
loope
xchg
out
lea
dec
lds
mov
pop
mull
xchg
adc
sbb
out
xchg
pop
jnp
or
jno
pusha
mov
pop
or
or
and
jle
testl
fcoms
mov
push
lds
and
inc
mov
pop
repz
xchg
inc
push
shrl
cmpsl
xchg
shrl
jnp
insb
cmp
mov
mov
cs
pop
fsts
sbb
fidivs
aaa
push
dec
sbb
pop
jp
jbe
das
or
movsl
lcall
pop
and
mov
jecxz
cmp
test
nop
aas
cmpsb
fsubrs
fidivl
mov
arpl
inc
or
cwtl
sub
jbe
xor
xchg
pop
addr16
inc
mov
xor
mov
add
sysexit
push
cmp
je
shl
rolb
mov
fidivl
sub
push
xchg
cld
and
fidivs
scas
cmpsb
dec
sub
cmc
lret
roll
xlat
sub
push
test
aaa
fistpll
sti
imulb
sbb
out
leave
lret
fbld
lea
adc
mov
fimuls
dec
mov
enter
repnz
ja
mov
loope
pop
jb
add
data16
into
pop
sbb
and
test
popa
decl
stc
xchg
push
cmp
js
adc
fdivrs
add
dec
faddl
sbb
sbbl
fstpt
push
mov
lods
inc
or
call
mov
cmp
loope
icebp
std
repz
sub
or
and
jmp
inc
rcll
mov
lds
pop
mov
test
clc
fnsave
loopne
insb
mov
mov
mov
xor
jmp
mov
inc
and
mov
add
inc
xor
jge
mov
outsl
icebp
jae
sub
jl
loop
mov
ret
adcl
pop
hlt
clc
in
shrb
mov
cmp
sti
dec
mov
mov
dec
pushf
cmpsl
xchg
mov
push
nop
cltd
shlb
adc
mov
fsubr
out
ret
mov
sub
aad
mov
dec
xlat
aad
xchg
out
rolb
test
imul
aad
pop
xor
insb
jmp
pop
in
lods
dec
addr16
data16
ljmp
jle
xlat
notb
inc
jne
push
mov
cmp
into
in
cwtl
pushf
stc
push
cmp
enter
add
add
push
outsl
pop
out
pop
mov
push
xor
and
mov
inc
enter
in
or
lds
leave
outsb
jg
dec
fmuls
pop
sub
es
mov
mov
in
xor
fmuls
xchg
pop
daa
insb
adc
push
jnp
andl
out
jp
divl
add
popa
sub
pop
add
mov
mov
dec
pop
pop
mov
mov
leave
mov
popf
fldcw
push
jg
dec
xor
out
in
pop
orl
xlat
mov
pop
cmc
mov
jl
leave
fisttpl
dec
xchg
aas
or
addr16
sub
ljmp
add
cmp
cwtl
mov
dec
pop
jae
mov
dec
sub
out
ficompl
lods
mov
xlat
out
pop
xor
adc
ficomps
and
add
push
mov
lcall
leave
test
cmp
xchg
inc
out
cmp
inc
mov
jnp
rcrb
in
sahf
stc
fcmovu
jo
fdiv
push
popa
les
push
lret
andl
dec
sub
stc
dec
call
xchg
push
mov
lcall
adc
iret
dec
or
mov
jbe
unpckhps
sub
insb
ljmp
fwait
jbe
dec
mov
push
mov
jl
out
xor
dec
jge
push
xlat
mov
aas
sbb
mov
and
movsl
and
push
pop
enter
dec
inc
fidivrl
in
test
je
dec
jno
aam
cmp
cltd
jp
jmp
pop
subl
pop
dec
lret
sbb
js
and
dec
lock
jbe
int
push
mov
sbb
repnz
mov
cs
flds
loopne
sti
in
fdivrp
inc
sub
xchg
test
pop
shll
dec
jbe
outsb
cmp
xchg
push
daa
xchg
and
rorl
and
popl
jbe
lret
mov
fsubrp
sbb
xor
je
aam
sarb
sbb
dec
test
insl
ds
sbb
pop
lods
out
or
adc
cmp
dec
mov
sbb
outsl
add
ljmp
es
pop
sti
xor
adc
inc
mov
sub
pushf
dec
fistpll
int
dec
or
pop
outsb
xor
shlb
xor
jnp
aad
aad
pop
push
andb
fwait
push
stc
jns
mov
out
ja
add
xchg
dec
pop
jecxz
aad
bound
or
dec
cld
and
decb
push
xlat
mov
push
gs
das
hlt
in
lods
and
pop
add
arpl
je
sub
ret
dec
or
and
jno
mov
loop
inc
lock
fcmovu
nop
add
enter
mov
push
cwtl
pushf
idiv
ret
sbb
enter
cmp
dec
shll
test
jmp
dec
and
inc
push
bound
sbb
inc
js
cmp
mov
pop
int
lcall
or
lods
ficompl
xor
mov
lock
dec
insb
add
inc
out
pop
std
fwait
arpl
jp
imul
and
jecxz
jns
lods
lods
aam
push
sub
nop
subl
leave
movsb
sbb
adc
leave
sub
cld
stc
out
fidivs
cmp
inc
movsb
sub
cmp
xchg
cwtl
cmp
or
lods
xchg
ss
sbb
test
fcoml
ja
jbe
pop
dec
call
cmp
push
loopne
inc
das
nop
sbb
xor
lret
xlat
repz
and
ret
and
pop
or
outsb
xor
divl
stos
lock
pop
pop
xchg
jno
cwtl
cmpsb
jns
ljmp
test
cmp
jmp
psubsw
fs
repz
xchg
js
lock
lret
fidivs
into
ficoml
es
out
stc
push
inc
mov
inc
out
notb
lods
jle
jb,pn
xchg
or
xchg
test
mov
in
cmp
daa
cmp
xorl
add
sub
mov
mov
shrl
cmp
pop
inc
into
push
fdivrs
mov
or
imul
xor
add
inc
sbb
pusha
sbb
je
or
mov
pop
ret
psrlw
pop
cmpsb
loopne
in
cmp
mov
push
pop
das
inc
xchg
pop
xchg
xchg
pop
notl
mov
push
add
sub
mov
dec
sahf
sub
outsl
outsb
xchg
sbbl
movsb
je
gs
push
sbb
push
pop
fld
hlt
push
mov
push
mov
shll
mov
and
mov
test
popf
mov
or
xlat
in
jge
push
cmpl
jne
aad
push
loopne
fisubl
add
imul
inc
dec
pop
and
mov
cmc
in
movsl
xchg
cltd
aaa
mov
adc
enter
jl
xchg
jecxz
cmpsl
das
mov
cltd
insl
fisttpl
inc
imul
push
lods
mov
pop
inc
adc
stc
hlt
pop
inc
pop
aas
mov
testl
pop
movsb
mov
or
jmp
out
arpl
hlt
xchg
sub
pushf
pop
das
dec
in
lahf
leave
jl
mov
daa
mov
ret
push
lock
fisttps
fdivs
movsl
and
mov
pop
repnz
fwait
addr16
out
icebp
sub
xchg
mov
xchg
jns
sub
and
insl
aaa
mov
fucomp
je
enter
dec
mov
ds
xchg
lret
pop
jp
jb
xor
lcall
enter
addr16
insb
pop
in
mov
inc
cmp
mov
dec
sahf
cmpsl
add
or
or
push
jno
and
das
sti
push
jns
sahf
into
and
in
ret
test
or
jne
repz
jle
cli
add
testb
push
or
scas
sub
sbb
mov
ret
push
mov
add
nop
std
shl
pop
sti
std
into
xchg
mov
sahf
lahf
xchg
mov
xchg
add
jg
pop
jg
mov
mulb
das
lret
pop
iret
jne
imul
je
adc
dec
repz
mov
iret
lcall
sub
mov
repz
psubusw
dec
int
arpl
jo
mov
or
mov
cli
loope
inc
aad
pop
scas
jns
sbb
and
mov
xchg
or
mov
fsubrs
push
mov
lock
call
xor
icebp
cmpsb
aaa
scas
sti
ret
aas
pop
adc
stc
pop
mov
fwait
ret
movsb
cld
xchg
popa
mov
or
rolb
in
sti
ja
and
call
loope
leave
mov
inc
aad
add
dec
nop
xlat
jecxz
mov
inc
mov
xor
pusha
xor
ss
int3
push
ret
mov
repnz
and
mov
outsl
inc
mov
ret
test
sub
mov
js
inc
add
dec
xchg
mov
xor
or
jge
sbb
loope
fsub
adc
jne
dec
ret
xchg
push
cmpsl
adc
jno
out
leave
sbb
popf
cld
mov
jl
cltd
mov
pusha
and
cs
frstor
jl
xor
cmpsl
loope
adc
pop
push
mov
lahf
insl
mov
int3
fwait
inc
jae
dec
pop
cmp
ja
pop
jecxz
push
xchg
outsl
xchg
dec
ljmp
add
cltd
mov
loop
and
mov
pop
push
pop
or
push
mov
inc
pop
shrb
jle
repnz
or
xchg
mov
sbb
fldt
popl
sar
aas
push
jl
sub
dec
int
and
adc
mov
test
mov
inc
or
mov
mov
pop
add
fistps
or
int3
xor
and
inc
xchg
sahf
and
shrb
jno
inc
lds
xchg
xchg
mov
fdivrs
loop
dec
adc
sbbb
jle
rolb
arpl
and
push
cmp
inc
pushf
data16
adc
mov
sub
push
insb
ja
pop
pushf
push
sbb
and
fisttpll
cmpsb
fidivs
and
or
cmpsb
lcall
mov
fsubl
lret
mov
rcrl
inc
ficomps
test
push
xor
cmp
add
add
ja
dec
push
fstps
add
mov
daa
cmp
mov
sbb
xchg
loope
or
js
jle
arpl
jmp
mov
mov
add
pushl
rclb
jl
pop
roll
and
ds
dec
pop
stos
xchg
insb
gs
andb
jl
sub
mov
ficompl
pusha
lahf
loope
dec
inc
sub
inc
pop
leave
icebp
popf
xor
rcll
jno
daa
cmp
aas
fistps
xor
cmp
ret
inc
cmp
mov
test
sahf
insb
pop
or
mov
and
or
adc
pop
outsb
repz
or
js
rolb
cltd
aam
push
mov
or
pop
sub
or
or
xchg
lahf
xchg
cmp
int3
cmp
test
int3
in
fistpll
add
out
sub
adc
add
call
jp
add
sbb
xor
xor
aas
sub
and
popf
out
xor
lcall
xlat
dec
fdivrl
adc
jb
lahf
xchg
fsubr
test
dec
nop
or
adc
leave
imul
cmpsl
es
push
xchg
cld
mov
cmp
jae
das
xor
clc
test
push
and
in
xchg
pushf
repz
gs
mov
lahf
and
fnstenv
jecxz
lret
xchg
inc
mov
inc
orl
jae
inc
loopne
sarb
push
cli
adc
mov
add
adc
das
xor
sub
jno
adc
ret
in
dec
push
rol
pop
in
jb
test
sub
es
test
sbb
mov
stos
shll
lock
adc
dec
mov
into
inc
fucomi
mov
cmp
and
cli
clc
out
mov
pop
mov
push
ret
cmc
cmp
rorb
sbb
mov
mov
aas
jl
rorb
imul
test
xor
push
lret
loopne
lcall
inc
sbb
mov
push
cmp
icebp
imul
cmc
xor
test
xchg
arpl
in
in
sbb
cmp
lods
or
and
xchg
xor
lock
roll
out
in
scas
mov
jo
out
in
cmpsl
inc
inc
sbb
movsl
sbb
add
inc
call
or
mov
fimull
dec
pop
pushf
xlat
dec
add
test
lahf
sbb
jge
add
mov
or
push
or
jb
jb
mov
sahf
dec
into
jbe
xchg
lret
int
nop
fisubl
inc
cmpsl
and
xchg
das
repnz
leave
inc
inc
sub
pop
jno
pop
xor
stos
inc
lret
ret
sub
addr16
addb
cmp
jbe
xchg
in
pushf
mov
mov
aam
sub
push
mov
pop
mov
or
jmp
movsb
loope
cmp
xor
xchg
sar
jmp
inc
xchg
test
sub
dec
mov
pop
push
pop
fdivrl
shrb
sub
pop
mov
ss
push
inc
nop
or
dec
das
fcomp
aam
fwait
jne
sahf
adc
xchg
jp
testb
movsl
scas
loopne
pop
out
test
stos
out
inc
out
sbb
imul
aad
lods
mov
pop
lea
or
add
test
mov
mov
testb
imul
gs
in
es
mov
xchg
jbe
sahf
xor
std
and
mov
adc
xchg
push
sub
ficompl
sub
push
inc
or
in
fsubrl
inc
jmp
or
int3
and
pop
dec
dec
jnp
sbb
es
mov
adc
push
xor
movl
stos
adc
add
mov
jle
pop
adc
xor
das
enter
imul
jo
sarl
mov
stos
daa
repz
decb
xor
xor
mov
inc
and
jns
fisttpl
add
jbe
sbbb
mov
fnstenv
adc
test
imul
into
cmp
movb
rclb
cld
or
shrb
jg
cmp
cmpsb
fistl
ljmp
pop
add
fadd
jns
mov
gs
call
mov
or
orl
xchg
inc
stos
jmp
js
pminsw
push
xchg
addr16
pop
or
pop
cli
hlt
cmpsl
shrl
ficoms
mov
push
test
jecxz
pop
fsubr
dec
jae
xchg
or
stc
cwtl
test
int3
pop
pop
xor
scas
hlt
daa
push
adc
sub
imulb
pushl
mov
push
pop
lock
lcall
pop
dec
sahf
jle
push
negl
popa
sahf
pop
rcrl
pop
mov
test
mov
jne
iret
sar
ret
repz
mov
jecxz
pop
push
add
das
clc
or
lock
cmp
test
push
out
mov
mov
add
push
ja
adc
stos
imul
and
negb
push
jo
fldcw
push
mov
aam
movsb
jl
jl
push
cli
sahf
mov
std
adc
adc
leave
std
fildll
imul
sub
leave
test
imul
cs
sub
addb
pop
jl
or
movsl
das
mov
xchg
and
loope
shll
pop
adc
or
in
mov
les
add
aam
pop
sub
or
mov
sub
in
shlb
xor
cmp
pop
lods
movaps
imul
mov
ja
test
in
sti
int
adc
sub
das
pop
push
xlat
jle
clc
push
neg
adc
sbb
or
jle
inc
add
pop
lcall
imul
mov
dec
sahf
stos
hlt
mov
int
cmp
sub
iret
push
std
add
clc
jb
lcall
aam
pop
mov
jle
cmpsl
in
je
adc
orb
push
sub
xchg
out
fstpl
cmp
add
xor
pop
xor
out
cwtl
divl
cmp
adc
adc
out
pusha
cltd
push
arpl
or
stos
insb
mov
xchg
les
push
popf
push
in
adc
mov
rcll
lea
pop
aam
pop
fmull
sti
les
lcall
mov
mov
mov
test
aad
rorb
cmp
push
aam
lock
xchg
push
outsl
insl
jle
outsb
push
cmp
fs
pop
push
and
insl
mov
dec
pop
push
cmc
pop
sbb
aas
movsl
in
mov
hlt
add
call
adc
mov
mov
icebp
adc
jb
and
imul
shr
jmp
aas
clc
gs
enter
lods
out
ret
jle
fldcw
inc
dec
scas
fs
sub
jp
in
adc
jb
cmp
ljmp
mov
sub
mov
adc
and
inc
out
xlat
pop
add
movsb
xlat
cld
out
sbbl
dec
mov
mov
mov
inc
jo
inc
in
xchg
lcall
iret
pop
out
ret
out
addb
orl
dec
aad
out
xor
or
push
es
imul
sbb
enter
fidivl
lsl
insb
xchg
pop
insb
jg
mov
mov
mov
lds
clc
popl
js
add
int3
lods
xor
es
cmpsl
fucomip
sbb
ljmp
icebp
mov
mov
or
add
das
sbb
dec
or
xchg
push
or
loope
ret
push
cltd
mov
lods
mov
lret
into
jecxz
sub
mov
and
and
notb
arpl
or
xchg
xchg
imul
jb
push
push
pop
jno
shr
mov
add
adc
adc
jo
xorl
or
pop
add
add
jp
subb
mov
mov
sub
dec
jmp
sbb
jl
mov
mov
push
mov
ret
cltd
fnstcw
cld
cs
adc
xchg
and
jle
and
inc
sbb
rcrb
ss
pop
jne
inc
scas
jle
popa
add
jge
stos
loope
fldt
aad
or
xor
xor
xchg
pop
pop
fistl
ljmp
add
sub
lods
dec
sahf
testb
push
outsl
das
dec
jmp
mov
dec
xchg
jmp
lret
cs
jae
jg
clc
or
mov
out
or
push
dec
pop
icebp
jbe
scas
popf
mov
mul
fcomps
push
dec
adc
loope
ss
nop
rclw
outsl
scas
pop
outsl
movl
test
pop
inc
jge
repnz
rolb
cmp
sub
cmp
push
cmpb
sub
xchg
popf
xchg
hlt
cmpsb
addr16
addr16
aam
leave
inc
ret
in
ja
or
mov
mov
mov
mov
xor
jle
mov
lods
das
popa
mov
js
and
imul
loopne
aas
imul
jne
mov
cwtl
mov
pop
inc
pop
xchg
mov
sbb
mov
jmp
popf
bound
inc
mov
mov
inc
lods
xor
jmp
notb
and
iret
jbe
sub
xor
mov
pop
dec
mov
fbstp
in
push
adc
mov
dec
rcrl
out
imul
lods
xchg
dec
pop
mov
and
lods
pop
xchg
jb
in
stc
push
inc
rorb
lahf
cltd
filds
aas
mov
pop
mov
pop
cmp
je
mov
add
int3
cld
dec
cltd
push
mov
xchg
clc
gs
out
push
jbe
fdivrs
test
jnp
sbb
mov
push
out
mov
push
scas
dec
jle
loopew
sbb
mov
mov
stos
pushf
mov
mov
inc
icebp
fs
inc
nop
lock
cmpsb
in
jp
dec
and
add
jae
test
ffree
lahf
xor
sub
loope
or
sbb
pop
enter
xor
cmc
out
fs
andb
arpl
je
into
mov
ficomps
adc
xor
mov
dec
xchg
jp
mov
ss
push
adc
in
or
cmpsl
das
mov
xchg
push
mov
testb
cld
cmp
sbb
cltd
out
push
popa
shlb
adc
fiadds
pop
pushf
xchg
inc
mov
lret
push
fcmovbe
fimull
es
insb
inc
xlat
scas
rclb
xchg
out
jns
jae
je
cmpsl
pop
fyl2xp1
arpl
push
adc
hlt
je
divb
lea
mov
jb
movsb
sub
xor
orb
mov
scas
or
loope
ret
icebp
test
add
mov
or
mov
dec
pop
pop
jae
mov
test
cli
aaa
inc
mov
pop
or
mul
jns
outsl
in
in
pop
add
add
mov
in
mov
mov
cmp
ret
sbb
inc
mov
jecxz
push
jb
add
sbbl
jns
cmp
mov
ljmp
aam
loop
sbb
xchg
sbb
adc
rcrb
pop
cmp
popf
pop
scas
xor
jmp
sar
insl
cmp
inc
jmp
stos
imul
out
mov
lahf
popf
sub
mov
aas
hlt
sub
mov
push
sub
mov
jge
xor
inc
mov
add
je
call
lcall
fmulp
mov
ljmp
cmpsl
mov
xor
inc
std
cmp
inc
scas
arpl
or
cmp
mov
mov
pop
out
dec
cltd
and
push
lea
mov
inc
pop
mov
std
pop
adc
movl
fbld
mov
jbe
pop
push
popl
sbb
dec
leave
imul
mov
or
jo
cmp
imul
lods
push
nop
adc
pop
je
movb
inc
add
cltd
jno
and
jb
jl
scas
cwtl
ret
fdivrl
dec
mov
xchg
rorl
cld
fisubl
rclb
cmc
xchg
pushf
push
add
push
icebp
add
or
test
jbe
sbb
scas
aaa
sub
dec
leave
out
and
fbstp
shll
das
out
sbbb
out
dec
pusha
mov
orb
xchg
add
push
icebp
mov
xchg
cs
sub
xor
inc
inc
push
jno
sarb
mov
in
fdivs
jnp
inc
rolb
adc
sbb
and
xor
je
sarl
lds
adc
fiadds
or
in
out
jg
mov
dec
js
aad
mov
repz
test
cld
into
mov
jecxz
xchg
push
cmp
rorl
pop
out
inc
js
pop
mov
rorl
dec
push
cld
cmpsb
stos
or
pop
stc
xchg
jecxz
lea
mov
in
pop
mov
popf
stc
movsl
add
jecxz
mov
cwtl
add
mov
es
pop
cmp
imul
xchg
iret
xchg
fnstcw
sub
pop
imul
filds
sub
fidivrl
lret
sub
fimuls
mov
dec
out
lret
pusha
xchg
fwait
adc
outsb
cmp
mov
dec
mov
inc
push
push
lods
test
push
jle
jp
xor
aas
xchg
sub
out
mov
outsb
pushf
pop
dec
pop
icebp
subb
or
pusha
in
mov
inc
mov
mov
or
jg
shrl
add
loop
shr
xor
add
shl
loop
out
jne
lds
leave
movsl
push
mov
push
pop
mov
or
push
test
aas
push
mov
jo
mov
jns
add
pop
mov
xor
pop
orl
test
orl
lea
mov
das
xor
or
mov
gs
mov
cmpsb
push
test
mov
call
sbb
mov
mov
mov
lcall
dec
movlps
inc
fldcw
or
lcall
push
cwtl
push
aas
dec
jbe
lret
add
insl
fcomps
push
cmp
inc
sub
xchg
push
roll
sub
sbb
dec
hlt
adc
cld
xchg
int
jo
call
jg
clc
jb
lcall
ja
movsl
cli
mov
jle
aas
mov
in
decb
repz
sbb
das
push
test
lock
rclb
in
scas
sahf
mov
inc
mov
insb
repnz
pop
shrb
enter
push
mov
inc
leave
xchg
xchg
scas
daa
adc
shrb
adc
mov
loopne
jle
mov
xorl
fcompl
jbe
and
idivl
cli
fstl
push
xorps
scas
sub
scas
mov
cmp
mov
imul
inc
mov
lret
cmp
sti
fs
mov
mov
xchg
cld
jmp
out
pusha
data16
mov
lea
negb
or
cmp
push
mov
jno
adc
aaa
xor
mov
adc
adc
jle
insb
ljmp
les
cmpsb
sbb
subl
dec
test
pusha
icebp
test
pop
aad
jo
inc
add
push
int3
iret
test
or
punpcklbw
fwait
ss
and
inc
sub
push
pop
scas
daa
cmpl
call
es
in
sbb
andl
mov
and
jg
xor
xor
or
gs
fcmovbe
call
test
rcrb
mov
push
mov
jp
scas
bound
and
aam
ljmp
mov
fstp
sub
xchg
xchg
ljmp
and
push
fcoms
jo
jne
pop
gs
fstps
arpl
int
loope
stos
pop
cmp
sbb
loopne
lcall
lods
adc
mov
and
inc
add
push
mov
pop
cmp
or
xor
andb
sbb
xchg
xchg
stos
sarb
pop
lds
mov
cmp
mov
stc
fwait
hlt
and
mov
or
mov
sub
lea
rorl
mov
divb
mov
mov
clc
sar
jno
or
dec
enter
cmc
sahf
mov
adc
je
mov
incl
stc
aad
push
lret
xchg
jmp
cs
stos
jae
or
jp
sahf
shll
shl
mov
inc
decb
lea
cmpsb
pop
jge
add
xorl
aas
lods
mov
lods
jmp
call
lods
lcall
push
sbb
pushw
dec
dec
filds
jp
push
push
inc
shlb
ss
aad
push
cmp
stc
pop
push
in
sbb
sub
and
inc
test
mov
sub
add
jns
dec
mov
cmp
mov
add
ds
movsl
call
js
jle
push
cmpsb
test
jle
dec
adc
jg
imul
arpl
stos
and
cmp
jnp
xchg
rorb
adc
sub
test
xor
mov
dec
jae
add
cmc
jg
sbbl
flds
test
jne
xor
rcll
addl
inc
shrb
imull
xchg
clc
das
push
scas
out
mov
imul
sub
cmpb
jmp
sahf
ds
jmp
jmp
add
or
test
adc
lret
dec
insl
cmp
out
mov
aam
push
fcomi
ja
bound
cmp
xchg
loope
sbb
jecxz
mov
int
xchg
mov
push
mov
inc
fiaddl
sub
lret
sbb
sub
push
fsincos
cmp
shlb
adc
inc
mov
mov
fisttpll
pop
insl
fldcw
dec
add
jnp
mov
iret
bound
sbbb
js
adc
mov
repnz
inc
lahf
dec
mov
call
dec
mov
or
shll
xchg
repz
fdiv
or
pop
add
sbb
or
and
stc
cmp
cmp
rorl
jle
xchg
jnp
dec
aas
xor
test
sbbb
or
es
xor
out
sub
sahf
nop
loopne
sub
xchg
int3
inc
push
xchg
pop
jne
or
fistpl
push
sub
jg
or
out
adc
jecxz
aaa
dec
mov
mov
pop
insb
pop
and
lods
fdivs
loop
arpl
jmp
xchg
and
sarb
pop
xor
mov
mov
leave
stos
push
mov
loopne
push
adc
mov
push
fcompl
pop
aam
xor
mov
imul
add
repz
jmp
ret
and
jmp
arpl
out
push
mov
jmp
faddl
jae
mov
subb
enter
xor
pusha
sbb
je
cli
and
mov
xchg
icebp
hlt
popf
sbb
add
mov
test
mov
loope
insb
mov
xchg
mov
push
mov
sbb
out
xor
pushl
js
mov
test
xchg
ja
or
lds
pop
movsl
aaa
jne
xchg
cmp
fstps
jno
ret
pop
adc
push
add
xor
xor
cs
jmp
push
mov
cmp
xor
adc
dec
roll
lahf
ret
mov
shll
loopne
inc
push
xchg
adc
shll
daa
call
icebp
lcall
mov
jge
push
adc
mov
push
inc
push
dec
outsl
sbb
lret
dec
cmpb
add
addl
push
je
std
scas
movsb
cmp
loope
popa
dec
or
push
or
cmp
xchg
int
add
scas
loop
jge
ja
cmp
or
lcall
jmp
leave
cs
hlt
mov
mov
out
adc
insl
lock
add
cmp
in
in
push
ljmp
cs
stos
loopne
xchg
push
jae
scas
dec
clc
push
repz
push
xchg
into
inc
subb
push
inc
popa
lcall
xor
xchg
or
lret
mov
pop
sarb
dec
push
jne
jbe
pop
jecxz
and
push
xchg
ficoml
jmp
xchg
push
mov
dec
push
lds
in
xchg
fwait
sbb
cld
fstl
loop
cs
fstl
pop
stos
inc
sbb
pop
dec
loope
jl
pop
push
sub
sbb
dec
fidivs
and
pop
ss
inc
popa
out
cmc
pop
pusha
daa
mov
sub
jmp
js
idivl
xchg
test
imul
jmp
mov
and
pop
into
mov
out
xchg
mov
and
mov
or
push
ljmp
andb
xchg
outsb
dec
fidivl
cmp
stos
out
cmp
mov
enter
jnp
mov
rorl
nop
aad
jecxz
pop
xchg
adc
adc
xor
pop
inc
pop
xchg
imul
cmp
js
in
sbb
inc
cmp
jp
pop
aas
js
stos
pop
mov
test
fwait
add
int
outsb
fwait
pop
jmp
xor
mov
sahf
cs
push
fstps
push
filds
push
call
decl
inc
ret
outsl
stos
pop
lret
lea
inc
pop
fstl
std
stos
mov
cs
adc
pop
je
mov
adcl
shrl
movsb
mov
or
cmp
mov
pslld
test
adc
mov
mov
out
sub
aam
insl
inc
addr16
add
popf
adc
popa
inc
jmp
test
roll
or
pop
cmp
jge
aas
ret
mov
mov
aad
aad
mov
sbb
inc
cmp
ds
cli
lods
insl
les
dec
xor
pop
push
jecxz
loopne
adc
movl
pop
ljmp
js
mov
je
push
mov
aad
adc
pop
adc
shlb
ret
arpl
fwait
and
into
add
sbb
mov
stos
into
sub
xor
sub
mov
xchg
jmp
and
ja
jno
cmp
jnp
orl
inc
xchg
jecxz
aam
sub
in
sbb
jns
xchg
xchg
xorl
push
sub
inc
sub
inc
add
out
and
mov
xchg
dec
mov
test
popf
aam
jae
shrl
sub
popa
dec
scas
pop
cmc
push
xor
out
je
imul
ret
orl
inc
mov
popf
fldl
movd
mov
clc
gs
repnz
xchg
push
push
inc
rcl
sbb
stos
inc
decl
gs
cmp
pop
sbb
fiaddl
jp
jns
mov
fnstsw
fcmovbe
mov
stos
cmc
adc
out
lock
addr16
xlat
in
icebp
lds
mov
enter
ss
das
mov
nop
mov
hlt
push
mov
inc
xchg
jbe
popa
push
xor
rcr
scas
aam
xchg
dec
cmp
test
ret
pop
adc
ss
insl
mov
mov
and
fdiv
adc
xor
mov
je
paddd
pop
test
sbb
sub
jg
es
je
in
sahf
daa
cld
imul
jns
mov
aam
push
shl
scas
or
shrb
int3
mov
out
movsb
daa
xchg
jnp
dec
dec
mov
push
int
lock
addr16
scas
sub
pushf
xchg
cmp
neg
loop
outsb
inc
pop
stos
aas
sbb
lret
xor
pushf
mov
mov
les
adc
cli
and
into
mov
adcl
cmp
pop
cmp
xchg
out
pushf
jo
add
mov
cmpsb
pop
addb
xchg
lea
psubsb
add
shr
push
jmp
pop
pop
nop
xor
dec
jecxz
orl
leave
sbb
jle
call
adcl
adc
mov
outsb
in
mov
movsb
fdivrs
aad
rolb
pop
fnsave
dec
and
lret
stc
push
mov
in
lret
fdivrs
push
lahf
jg
xchg
add
mov
xchg
cmpsl
fwait
pusha
cli
bswap
loopne
mov
inc
xlat
and
xor
data16
push
and
js
pop
sbb
aad
or
pop
push
into
dec
fnop
dec
push
lcall
and
add
xor
lret
into
daa
mov
or
cltd
pop
loop
pop
cmc
movsb
sub
sarl
ljmp
push
or
int3
out
outsl
inc
std
sbb
push
jbe
push
xchg
repnz
mov
push
adc
jb
dec
dec
mov
adc
insl
mov
dec
stc
cmp
jnp
ja
gs
pop
inc
pop
pop
js
jno
cli
enter
xor
orb
popa
divb
nop
push
out
rorl
repnz
sbb
andb
jae
and
xchg
leave
mov
adc
jne
xchg
adc
ljmp
sbb
cmc
test
cmpsb
jmp
adc
ret
pusha
push
insl
scas
pop
xor
addr16
xor
movsl
loopne
push
dec
lret
jns
daa
pop
or
cltd
jns
stos
mov
in
xlat
xorb
hlt
jns
inc
and
popa
aad
fimuls
shr
iret
xor
int
mov
into
mov
xchg
call
out
xlat
les
mov
dec
pop
imul
push
popa
xchg
pop
xchg
xchg
das
aam
xor
in
rdpmc
test
cwtl
xor
sbbl
cmp
inc
shlb
xchg
int3
mov
in
sti
sub
sbb
sbb
cmpsl
or
jecxz
fistpll
jo
into
add
fisttpl
sub
jg
sub
cld
test
std
cmp
test
adc
dec
xlat
in
or
push
mov
push
and
add
insl
lds
inc
in
int
sub
inc
lcall
js
inc
inc
out
cmp
mov
sbb
aad
addr16
add
into
inc
fwait
lods
lcall
pop
rcll
into
orl
sub
inc
mov
stc
pop
mov
mov
inc
imul
ja
and
lcall
adc
ds
mov
rorb
jns
das
int
div
fisubl
jbe
push
push
aaa
dec
and
or
xor
sub
sar
movb
outsb
addl
inc
mov
and
jb
xor
jae
scas
imul
sbb
in
jns
xorb
mov
inc
pop
shl
jbe
loopne
lods
pop
stos
jb
sbb
fidivl
inc
sbb
jg
jl
cmp
cld
push
dec
push
lret
sub
xor
int3
xchg
mov
jp
jne
mov
dec
xorl
adc
jmp
test
je
jge
jne
cmp
or
add
mov
add
outsb
mov
cs
adc
mov
roll
or
cltd
mov
sub
jp
sub
add
lock
into
adc
repz
insb
xchg
sbb
rcrb
clc
out
inc
dec
mov
mov
call
adc
inc
repnz
xchg
sub
popf
pop
out
jbe
mov
iret
push
out
fwait
mov
cmp
leave
int
lds
lret
sbb
xor
pop
xlat
scas
ljmp
mov
ret
add
push
add
out
lock
loope
in
mov
hlt
sahf
pop
pop
fwait
in
popa
sub
dec
gs
ss
xchg
dec
xchg
lret
bound
sbb
push
bound
orl
divl
in
cmp
pusha
popa
add
das
jl
push
xor
popl
inc
inc
scas
dec
lods
lock
xor
mov
fdivrp
mov
cmc
aad
inc
jmp
inc
cli
pop
mov
push
js
stc
fisubs
mov
nop
cs
jg
ret
dec
pop
mov
pop
xchg
std
jge
pop
cmp
jne
push
add
jecxz
scas
cld
jno
push
adc
and
aaa
jl
insb
sbbb
and
bound
iret
add
mov
popf
mov
shl
mov
fcmovne
mov
sbb
dec
hlt
divl
aam
inc
fs
jo
pusha
les
loope
pop
ficomps
cltd
cmp
cld
sbb
aaa
shr
sarb
into
jg
mov
xchg
pop
outsl
push
jmp
dec
adc
mov
push
xor
mov
aaa
js
xchg
sbb
out
imul
add
adc
pop
out
jge
out
inc
xor
fwait
pslld
ret
and
mov
cltd
iret
jl
jns
ljmp
insb
out
cli
pusha
sti
sub
cltd
cmp
push
xchg
int
cmp
mov
inc
negb
jg
dec
aad
aad
lea
jnp
adc
mov
fdivl
and
push
lret
pop
mov
js
fildll
sbb
cmp
xor
stc
fwait
and
mov
jae
pop
popf
cltd
adc
inc
or
lods
or
mov
mov
and
cmp
xchg
stc
mov
push
or
xchg
aam
into
aam
iret
push
fisttps
aam
xor
rorl
jbe
and
ficomps
inc
cltd
dec
adc
push
les
or
test
xlat
dec
or
out
xchg
mov
inc
mov
or
xlat
cmp
loopne
push
dec
fs
in
push
std
int
xor
std
ds
mov
jle
jae
and
movsl
mov
lcall
sbb
mov
inc
cmp
sbb
mov
das
pop
sub
inc
or
mov
stc
movsb
outsl
fwait
aaa
xchg
jbe
pop
ljmp
outsl
xchg
aaa
daa
inc
int
int3
mov
in
stos
movsl
mov
pusha
xchg
test
mov
mov
in
rcll
sbb
xor
test
bound
mov
jmp
push
mov
cmp
cmp
xor
jge
test
mov
mov
adc
std
sub
into
cltd
or
or
lcall
out
jmp
hlt
sub
mov
mov
jl
cltd
xchg
imul
ret
insb
mov
shll
or
lret
and
or
gs
adc
ss
test
mov
lret
inc
insb
stos
pusha
jp
data16
pop
ljmp
clc
adc
or
test
xchg
cmp
inc
mov
call
bound
addr16
jg
test
hlt
sbb
je
sub
aad
jmp
jne
scas
sbb
clc
cmp
mov
imul
shll
sarl
addl
ss
scas
loopne
mov
popf
shl
ds
test
gs
xor
xor
or
or
paddb
in
in
sbbb
cmpsb
jbe
scas
test
int
jns
ficoml
cmpsl
ds
mov
insl
lea
sti
push
das
int3
jne
jge
dec
mov
out
push
orl
xor
push
or
mov
inc
xchg
sub
inc
mov
pushf
cwtl
ss
gs
lret
jmp
xchg
xchg
xor
push
mov
mov
negl
jmp
movl
jb
lds
aad
fcoml
outsb
push
fadd
out
xor
outsl
push
fimull
test
jl
sub
push
pop
gs
jmp
push
xor
mov
jmp
add
lahf
lret
xor
je
xchg
jp
test
ret
pop
and
cltd
dec
and
cmpl
loope
repnz
lods
add
pop
sbb
iret
inc
aas
or
sbb
test
orb
cmpb
stos
movsb
ss
das
or
popf
leave
pop
dec
sahf
in
outsb
fdivs
xchg
aad
jecxz
icebp
mov
stc
mov
sub
or
or
adc
in
out
jae
pop
shll
cli
enter
pop
cmp
cmp
sub
xchg
inc
xchg
imul
or
nop
push
xchg
xchg
cmp
les
es
fnstsw
mov
inc
sub
fists
xchg
sbb
sub
or
xor
or
cmp
inc
ljmp
xor
mulb
in
sub
jmp
jmp
and
xorb
mov
pop
lds
mov
imull
xor
adc
bound
add
int
nop
ret
test
fnstcw
loop
iret
xor
mov
inc
repz
or
pop
sbb
add
les
clc
scas
cmp
cmp
mov
pusha
or
or
arpl
aad
ss
lcall
fdivs
lock
mov
lods
outsb
cmc
std
in
ficoml
jno
out
pop
cmpsl
int
adc
or
mov
enter
sbb
xor
or
divb
push
and
fmuls
pusha
cmp
pop
insl
mov
mov
out
out
dec
out
rcll
dec
or
neg
mov
rclb
jnp
push
adc
loop
jne
sbb
inc
push
call
orb
dec
out
mov
sar
popa
ret
dec
fldl
jecxz
daa
adc
xor
in
jmp
in
mov
lahf
fidivl
repnz
add
arpl
call
aad
leave
pop
mov
jnp
lea
clc
xorb
adc
out
inc
insl
loop
inc
outsb
out
test
push
and
movsl
call
data16
fwait
sbb
ret
pop
mov
fstps
sub
repz
xor
mov
jae
mov
in
cmp
push
mov
add
test
shll
sbb
and
xor
mov
jne
out
mov
sub
call
ja
mov
pop
clc
xor
cmp
xrelease
arpl
aaa
jg
mov
ud1
fldt
call
and
inc
stos
into
rol
pop
shlb
lret
sbb
mov
ret
mov
imul
xchg
negl
add
jle
lds
int3
or
push
lret
rclb
pop
mov
add
lahf
out
movsl
xchg
xchg
push
and
test
mov
jae
repz
les
ljmp
cmp
mov
mov
xchg
sti
out
jo
push
cmp
call
jmp
cmp
out
mov
out
ret
es
and
mov
es
ja
pop
subb
sbb
test
jmp
and
mov
pop
mov
sbb
fistl
sbb
fadds
dec
scas
les
rclb
mov
loop
es
fs
faddl
mov
andl
pop
jne
fwait
int
lcall
sbb
xor
mov
mov
in
movsl
shlb
mov
mov
inc
pop
jmp
inc
mov
int
push
std
scas
lds
mov
fildl
out
mov
xchg
sub
push
ljmp
mov
aam
int3
push
inc
jle
xchg
dec
into
icebp
inc
js
mov
pop
pop
jmp
cs
call
sbb
push
pop
ds
mov
cwtl
dec
and
mov
nop
dec
pop
sbb
mov
xor
mov
mov
outsb
outsb
add
mull
mov
cmp
push
test
mov
rcl
out
cmpsb
xchg
jecxz
mov
cltd
mov
test
lods
div
add
hlt
dec
xchg
pop
push
add
xor
out
cli
cmc
nop
or
and
jg
or
cli
rcr
hlt
loope
jbe
mov
push
aam
xor
push
sahf
jb
cmp
sbb
pop
ret
jb
jl
jl
cmp
repz
push
fcoml
push
subl
mov
mov
lods
inc
lock
and
iret
xchg
outsb
fxch
cs
dec
cmp
push
rcll
loope
movsb
nop
push
sub
add
push
sub
ljmp
add
sbb
insb
addr16
arpl
fwait
sub
sub
fmull
aaa
xlat
jne
mov
mov
jns
inc
jmp
ret
imul
xorl
add
cmp
out
jmp
sbb
push
out
jo
xchg
dec
js
insb
add
adcl
push
xor
paddusw
pop
push
iret
test
push
lock
push
xchg
mulb
jge
lret
aas
xor
cs
ss
cmpsb
pushf
out
push
lds
or
push
jle
aas
cwtl
dec
xor
ja
xchg
cmp
icebp
jge
mov
aas
dec
xchg
or
jno
ret
addl
daa
in
mov
stos
mov
push
jecxz
add
xchg
jne
pushf
lock
out
jg
in
sub
into
jo
rorl
sbb
sbb
mov
mov
popf
in
loopne
int3
js
jmp
mov
jle
das
mov
dec
mov
and
pop
sar
nop
pop
fdivrl
imul
movb
fmull
pop
mov
add
les
data16
mov
mov
or
loop
enter
dec
aaa
loop
mov
fimull
adc
cs
xchg
mov
fmuls
xchg
xchg
xor
xchg
and
rsqrtps
pop
sbb
fwait
gs
icebp
dec
arpl
out
jbe
push
jle
adc
lret
dec
aaa
mov
pop
jbe
cmpsb
xor
sub
ret
inc
out
cltd
and
and
movsl
stos
pop
or
stos
jp
sbb
mov
inc
jnp,pn
neg
jecxz
jbe
add
imul
sbb
add
addr16
adc
mov
or
or
cli
into
xor
adc
fisubl
scas
std
int3
mov
mov
xor
std
cli
mov
inc
push
jmp
push
mov
jmp
jle
int
mov
pop
std
js
xlat
iret
gs
sbb
out
pop
inc
push
or
mov
std
int
pop
imull
add
adc
sub
xchg
jp
mov
movsl
rol
or
adc
test
fdivl
xlat
loope
scas
adc
insb
xor
ret
push
lock
lcall
pop
int
shrb
icebp
mull
mov
fisubs
and
mov
ret
adc
adc
mov
ljmp
ss
adcl
adc
test
xchg
cmpsb
push
adcl
movsl
mov
push
or
call
lcall
sbb
enter
xor
bound
fidivrl
cltd
xchg
add
inc
rep
xchg
sub
xchg
inc
xchg
mov
call
aad
xchg
cltd
dec
mov
lds
pop
dec
dec
inc
out
mov
xor
pop
adc
xchg
sahf
in
cmp
cld
jl
jmp
pop
sub
push
nop
adc
clc
sbb
sbb
xchg
jle
sti
in
sbb
stc
and
daa
out
lret
xchg
adc
lahf
xchg
loop
fnstenv
into
repz
xor
cwtl
movsl
mov
jge
xchg
repz
sbb
adc
aam
shll
in
or
xchg
js
sbb
mov
xchg
lock
int
aas
mov
shrb
dec
ja
adc
push
pop
loop
mov
cmpsl
mov
stos
movsb
das
xchg
aad
imul
mov
arpl
es
dec
sbb
jb
jecxz
mov
outsb
or
iret
xor
cld
in
pop
jo
push
sub
lahf
pop
push
xchg
repnz
jo
or
hlt
xchg
jge
int
mov
hlt
push
shl
int
mov
jae
lret
aad
daa
adc
ret
lahf
cmpsl
jge
and
sbb
pushf
sahf
xchg
mov
xlat
or
hlt
mov
ljmp
insb
movsl
ret
ret
rorl
pop
sbbl
cli
lods
aam
pusha
mov
add
mov
adc
add
rolb
clc
movsb
loop
cld
sub
mov
xchg
sbb
cmp
pop
popa
in
or
pushf
mov
dec
fisubrs
push
jns
pop
int3
and
mov
punpckhdq
iret
lds
and
cltd
jae
iret
mov
aad
sub
ljmp
idiv
ja
jp
popa
sbb
cmc
mov
dec
mov
in
gs
scas
mov
push
pop
out
pop
dec
add
lret
jmp
sahf
in
loope,pn
xchg
dec
and
js
or
mov
xlat
push
inc
pushf
in
cwtl
dec
aam
jg
lret
je,pn
or
adc
add
and
cld
aad
sub
add
dec
shll
push
or
out
and
xchg
sbb
dec
cmpsb
and
loopne
or
clc
pop
hlt
and
iret
pop
sbb
out
fsubrs
jnp
xor
arpl
xor
cmp
js
lea
cmpsb
push
inc
fdivrl
pop
mov
jbe
cmp
int
sahf
jns
movsl
sub
dec
or
xor
jmp
mov
adc
sub
outsb
mov
mov
pop
popa
jg
cmp
in
add
mov
mov
insl
cmp
and
andl
xor
dec
sub
jl
mov
out
mov
loop
inc
rclb
lea
cmp
mov
pop
lds
ljmp
add
fisubs
aaa
fsubl
cmp
and
mov
lcall
shrl
incl
or
mov
pop
xchg
aas
outsb
jle
push
adc
shrb
sub
fwait
or
imull
aaa
push
fsubrs
fimuls
popf
scas
rorl
jl
cmc
mov
cmp
popf
iret
sbb
mulb
push
mov
and
sbb
rorl
jae
dec
push
cs
dec
mov
sub
adc
mov
add
test
bound
cli
ret
xor
aam
mov
cmpsl
mov
push
or
jnp
dec
dec
mov
push
es
mov
sub
mov
pop
and
cmp
sbb
mov
cmp
in
adc
xchg
jbe
lods
ja
sti
jae
in
popf
popf
mov
mov
dec
icebp
lds
lods
out
rcl
rcl
in
xchg
push
fucomp
stc
outsl
inc
and
or
stc
add
popa
repnz
ror
roll
cmpsb
jmp
pusha
and
mov
test
jmp
insb
mov
ds
mov
rorl
inc
mov
hlt
push
ficomps
lahf
jecxz
sbb
push
fdivr
cmp
fldt
mov
and
pop
icebp
or
cmp
nop
fwait
jecxz
arpl
rcll
in
mov
fcoml
test
xchg
jp
iret
ja
movsl
imul
mov
inc
sbb
xchg
rclb
ss
js
cltd
adc
mov
std
push
rcrl
ss
sub
xchg
pop
mov
inc
rclb
lret
pop
scas
sub
data16
les
lea
out
sbb
pop
mov
test
push
pop
mov
hlt
adc
fldenv
mov
insl
xchg
das
je
dec
icebp
mov
xchg
mov
in
int3
leave
out
les
cli
in
adc
inc
sar
sub
shlb
setg
movsb
jns
loope
dec
mov
leave
repnz
ficoms
repnz
sub
call
mov
xchg
cmpsl
sub
pop
mov
mov
xchg
jp
xor
testl
xchg
cld
popf
loopne
movsb
arpl
adc
out
pop
pop
dec
jno
sub
mov
fstl
popfw
icebp
xchg
fwait
xchg
dec
jo
jge
int
dec
cmp
lods
xor
mov
pop
push
cmpsl
jge
dec
and
loopne
push
jle
sub
push
pop
xchg
int
push
sub
imul
sub
test
gs
pop
xor
sub
xlat
fs
dec
rcrb
xchg
cmp
mov
repz
add
mov
pop
adc
add
int
fwait
arpl
insl
das
sub
out
inc
xchg
fdivs
rolb
and
subb
fmuls
jl
mov
test
out
js
dec
callw
jecxz
ljmp
sub
data16
mov
pop
adc
adc
movsl
or
adc
cmpl
push
lahf
pop
rcll
inc
push
lds
xlat
fwait
cmp
or
or
into
test
pop
shll
xor
pop
cli
push
das
mov
inc
or
jns
or
adc
ds
sbb
pop
gs
lret
outsl
out
xor
lods
testb
mov
push
lahf
int
in
stos
ljmp
add
aam
dec
pusha
scas
movsl
cmp
jge
lods
and
decl
push
adc
call
ret
add
cmp
scas
std
sub
shll
or
xor
inc
cmc
fucomp
mov
add
adc
imul
movl
out
cmp
inc
std
test
inc
mov
push
enter
pop
and
hlt
jbe
test
sti
jne
mov
fisttpl
je
js
jmp
insl
add
mov
inc
es
clc
test
cli
add
dec
adc
pop
enter
iret
sbb
xchg
and
adc
xchg
and
test
mov
xchg
cmpsl
icebp
cmc
icebp
mov
push
adc
adc
or
jo
push
push
outsl
xchg
addr16
fcomps
lods
and
cmp
sbb
push
ja
jle
pop
xor
int3
xchg
push
arpl
jecxz
fiadds
push
test
sub
data16
andb
icebp
jle
mov
jb
dec
sub
cmp
and
push
popa
lods
aas
add
sbb
jp
gs
xlat
andl
jl
mov
imull
sbb
ljmp
fisubl
xor
xchg
lock
sbb
and
out
mov
dec
push
mov
or
sti
cmpsb
addl
inc
lcall
popa
cs
arpl
push
das
dec
xchg
xchg
shl
xor
cmpsb
cmp
cmovg
lahf
mov
or
es
cmp
and
call
outsl
cli
push
push
je
mov
leave
mov
aas
flds
jl
mov
dec
add
push
xor
aas
push
xor
lcall
lds
adc
pop
jb
mov
jb
push
mov
fiadds
and
int
push
in
dec
cltd
and
dec
mov
into
jo
out
sbb
cmp
xchg
or
fwait
mov
mov
stos
mov
dec
ss
xchg
adc
inc
cmp
imul
out
int3
xor
gs
xchg
jecxz
dec
or
adc
movsb
add
cmp
clc
js
int3
iret
push
into
or
push
pop
inc
rolb
jns
out
roll
je
add
xchg
mov
insb
push
jmp
sub
adc
xchg
mov
adc
jns
adc
sub
popf
mov
cmp
push
dec
xchg
xchg
fcomi
clc
dec
push
xor
mov
sbb
lahf
mov
mov
push
je
mov
out
imul
pop
mov
jge
test
jns
mov
pop
rolb
pop
sub
mov
mov
pop
pop
dec
pusha
loopne
xchg
int
addr16
push
xchg
outsl
in
fistl
and
ds
sub
dec
test
stos
andl
popf
leave
aad
repz
mov
fdivrp
push
dec
lcall
mov
adc
xchg
push
pop
or
fdivrs
push
xchg
int
mov
test
mov
je
pop
sbbb
dec
mov
hlt
pushf
and
les
push
jmp
test
cmp
mov
push
in
xchg
stos
imul
mov
out
xchg
cmpsl
aam
repz
nop
add
mov
or
je
xchg
fidivrs
jg
out
int3
pushf
outsb
adc
pop
das
cmc
xchg
and
inc
inc
push
shrb
mov
mov
test
mov
sbb
jne
cmp
fbstp
cmp
or
xor
sbb
cmp
std
mov
dec
adc
mov
scas
lcall
cmp
insb
sub
sbb
ja
fdivrs
mov
and
xlat
dec
xor
fwait
xchg
add
icebp
leave
sbb
xor
or
push
adc
or
xor
cmpsl
sbb
cmp
ss
cmp
cmp
jnp
insl
cmp
pop
add
sbbl
mov
or
clc
push
push
inc
jp,pn
mov
ret
fwait
leave
je
jbe
das
pop
xor
pop
jl
push
mov
mov
sti
and
lret
sub
mov
push
cmp
imul
xchg
and
dec
shll
out
mov
sbb
test
pop
stc
inc
dec
xor
es
into
insb
mov
flds
inc
cmp
mov
dec
pop
mov
sub
push
ja
pop
jmp
cmp
out
xchg
mov
aam
insl
fcoms
das
es
out
jae
jae
shll
jmp
or
or
jg
sahf
jge
xchg
and
push
pushf
cmp
and
jbe
fisttpll
xor
jb
rcll
not
iret
adc
cwtl
les
js
fimuls
jbe
push
outsb
xchg
xchg
mov
dec
in
sub
pop
lcall
lds
dec
push
out
mov
mov
mov
or
andb
push
add
xchg
test
dec
inc
outsl
jbe
out
mov
mov
lret
inc
jae
sbb
dec
adc
cli
jo
pop
fdivr
imul
sub
cmp
cmpsl
mov
inc
dec
lahf
fwait
mov
rcr
repz
inc
pop
xchg
add
stc
xchg
lret
mov
or
xor
jle
inc
mov
fwait
scas
adc
mov
orl
jb
jnp
int
int
xchg
mov
loop
int3
ret
ljmp
ds
or
popf
inc
shr
ror
out
test
mov
scas
jnp
lret
sti
addl
imul
scas
nop
in
xor
idivl
mov
xrelease
jbe
imul
je
sbb
mov
sbb
dec
and
les
sbb
imul
and
arpl
lock
sub
sbb
xchg
insl
hlt
cmp
jecxz
xorb
or
push
mov
pop
outsb
out
arpl
imul
shlb
cs
hlt
leave
inc
hlt
lcall
inc
push
jecxz
rsqrtps
mov
cmpsl
pop
call
inc
push
xor
mov
movb
xchg
dec
xchg
xchg
cmpsb
pop
lcall
enter
lock
mov
ret
inc
xor
pop
sub
and
xor
cs
cmp
int
test
jnp
jbe
add
clc
dec
adc
pop
mov
rcrb
adc
loopne
inc
xor
pop
and
mov
xchg
sbb
lcall
std
mov
repz
aam
popa
and
shlb
mov
ret
rcll
xor
je
fwait
test
jmp
bound
cmp
mov
stos
push
sar
adc
adc
sub
loope
push
les
push
loope
int
filds
ds
sbb
inc
pop
out
outsl
aas
inc
push
sbb
mov
in
shrb
pusha
lret
cmp
bound
repnz
pop
sbb
sahf
and
jmp
popa
sar
fs
mov
mov
pop
bound
pop
and
cmp
add
ljmp
jle
cmp
push
dec
pop
push
in
inc
test
mov
xor
push
mov
loop
mov
clc
jo
mov
mov
dec
repnz
es
inc
cmc
cmp
jno
pop
cmp
dec
xor
xor
push
inc
aaa
xlat
scas
rol
pop
xorl
fs
jmp
int3
inc
int3
or
dec
in
adc
sbb
shrb
movsl
sbb
pushf
push
push
and
jg
or
mov
sub
pop
push
fisttps
and
pop
pop
inc
inc
and
ja
out
idivl
int
popa
out
jge
sar
xor
pop
adc
addr16
and
mov
inc
les
popf
sub
lods
sub
xchg
bound
es
push
fiadds
mov
fistps
test
mov
imul
popf
adc
test
xchg
mov
leave
clc
inc
xor
jae
cmpsl
fdivl
sub
xor
pop
mov
mov
into
ds
fstpt
pop
pop
call
or
xor
movsl
mov
mov
pop
xchg
stos
loopne
outsl
shrl
aam
outsb
cmp
lret
test
das
les
orb
sub
sub
mov
loopne
sbb
pop
jl
dec
xchg
mov
adc
adc
jbe
xchg
adcl
hlt
add
ret
sbb
sub
gs
xchg
lea
js
andl
lret
sbb
lret
xchg
or
inc
ret
in
lods
mov
insb
in
adc
loop
mov
imul
ds
add
clc
xor
xchg
cmp
pop
sbb
inc
push
mov
gs
add
testl
addr16
jl
ret
fbstp
enter
or
repnz
enter
add
and
mov
and
rcrl
adc
sarb
mov
xchg
mov
cltd
popa
sub
or
push
mov
dec
inc
lret
dec
pushf
les
xor
pusha
sub
fsubp
fwait
push
or
movsb
push
mov
ret
push
lea
popf
andb
mov
push
xchg
lds
mov
push
xor
pusha
push
mov
dec
pop
push
lret
and
pop
daa
arpl
call
pusha
daa
addr16
subb
mov
add
mov
xor
pop
jp
cld
jnp
out
xor
jo
test
pusha
xchg
pop
or
ss
loopne
jno
test
or
popa
and
add
in
notl
mov
inc
push
add
xchg
cmp
mov
leave
and
aas
xchg
hlt
fstps
shlb
insb
cs
cmpsb
sbb
imul
pushf
xchg
mov
pop
test
insl
dec
hlt
cmp
jp
aam
call
mov
int3
rorb
aad
lea
in
ret
test
mov
mov
dec
pop
sub
rcrb
aad
sbb
or
cmp
icebp
in
dec
stc
ds
dec
push
stos
outsl
dec
in
push
lods
mov
loop
inc
add
add
movsl
sub
jecxz,pt
adc
imul
inc
inc
aaa
or
mov
dec
and
pusha
shrl
int
cmp
fadd
push
dec
mov
cmp
rolb
fimull
push
dec
mov
cmpsb
sbbl
push
or
jg
frstor
or
dec
xor
and
lahf
mov
aaa
fcmovbe
ja
mov
imul
mov
and
push
je
add
jns
and
movsb
cmp
dec
inc
stc
gs
cmp
shrb
or
decl
mov
mov
dec
mov
shl
dec
in
pop
test
and
movsb
push
aas
mov
inc
inc
inc
jmp
mov
cmp
cwtl
add
mov
test
mov
jecxz
mov
sub
push
idivb
cmp
mov
inc
mov
xchg
jle
push
jnp
addb
or
clc
push
fidivl
insl
xchg
fs
sbb
out
xchg
inc
mov
or
in
lret
pop
dec
mov
test
jl
sbb
or
add
sub
notl
iret
call
xchg
cmp
sub
pop
jg
and
imul
or
xor
mov
pop
jne
rcr
dec
cwtl
bound
aaa
rorb
ror
push
mov
ljmp
inc
push
cmpsb
movsb
int
push
faddl
sti
xor
ljmp
or
out
stc
push
sub
push
sub
dec
mov
pop
dec
push
sub
test
sbb
jns
mov
cwtl
rorl
jb
adc
add
inc
cmp
cwtl
lret
xchg
sbb
fsubrs
push
mov
shrb
push
mov
imul
pop
pop
jg
fnstcw
mov
test
cwtl
leave
lock
dec
add
fcoml
shlb
push
iret
in
aas
dec
pushf
out
cmp
or
sar
pop
adc
pop
dec
xchg
dec
pop
jmp
add
sub
call
jae
pop
add
mov
sbb
sbb
out
bound
mov
popl
fsubrl
rcrl
dec
fsubp
pop
sub
xchg
cmp
mov
add
rcl
mov
in
mov
xor
loop
jg
adc
leave
mov
push
mov
pusha
insl
fs
stc
imulb
cmp
add
stos
pop
dec
xor
shlb
imul
inc
sub
push
or
pop
inc
or
inc
movsl
inc
sub
dec
pop
or
and
pop
push
lret
xor
dec
ds
aam
jle
in
adc
jno
out
mov
int
sbb
outsl
mov
cmp
fdivrs
lea
repnz
mov
adc
mov
xor
xor
in
and
lret
xor
not
mov
stos
xchg
pop
mov
jecxz
sub
mov
jne
fcom
pushf
mov
fmul
push
cmovbe
xchg
hlt
lods
aas
rcll
test
mov
bound
mov
das
mov
inc
aam
add
dec
jp
cmp
xor
aaa
pop
mov
jo
xchg
in
lcall
sbb
sub
jo
add
das
dec
ret
jmp
jecxz
aas
ret
mov
jb
icebp
arpl
jno
lcall
pop
fwait
sbb
dec
popf
in
xor
fcomps
and
notl
repz
add
xchg
fucomip
or
sbb
pushf
lds
sub
or
pop
cmpsb
jecxz
xor
jae
adc
cmc
sbb
dec
std
out
adcl
arpl
fsubrs
xlat
outsl
cld
inc
stos
sub
add
fidivrs
divb
cwtl
stos
dec
lods
sbb
iret
mov
push
nop
cmp
pusha
sub
sti
cmp
rorb
pop
pop
jbe
xor
mov
jns
and
pop
inc
fildll
jns
imul
adc
sub
lods
xchg
mov
and
in
enter
add
aaa
push
push
or
push
cmpsb
add
pusha
lock
cmp
pop
jmp
outsl
das
fistpl
and
ja
cwtl
mov
pop
cmp
cmp
mov
cs
push
adcb
xchg
loope
mov
xlat
insl
mov
sbb
lahf
xchg
inc
rcrb
xchg
sbb
subb
popf
fistpl
out
pop
clc
add
fcomps
imul
movsb
xchg
cmc
adc
push
dec
lcall
pushf
mov
jmp
and
icebp
loope
das
pop
jl
testl
jmp
mov
mov
out
inc
mov
jns
mov
or
xor
out
add
cwtl
add
cmp
scas
jbe
inc
add
cmp
cmp
stos
popa
jl
ss
push
push
int3
xchg
dec
pop
repz
xor
dec
arpl
nop
repz
lcall
pusha
lock
dec
push
jbe
mov
xchg
lcall
or
mov
lds
aaa
fiaddl
push
mov
popf
mov
jg
testl
frstor
sahf
dec
test
sbbb
xchg
mov
mov
mov
xchg
pop
or
imul
aam
add
xor
cmp
cld
pop
or
lock
rcl
jle
xchg
pop
mov
sbbl
inc
into
inc
mov
fistpl
fnclex
jle
mov
cmp
push
mov
or
xchg
pop
popf
sbb
icebp
jno,pt
pop
or
sub
pop
cmp
daa
push
lahf
ret
push
shlb
xor
daa
push
mov
ret
push
imul
subb
testl
mov
xlat
cmp
jmp
add
test
sub
inc
sahf
repnz
mov
sbb
aad
xchg
ficomps
pop
mov
lcall
ret
or
cmp
inc
testb
std
jl
or
popf
stos
test
xor
mov
icebp
iret
movsl
inc
cld
movsb
cmp
fstl
jae
jno
push
inc
mov
pusha
fwait
lods
lret
mov
push
imul
adc
jmp
sub
ja
push
stc
inc
xlat
dec
lods
and
fstpl
stos
cmp
les
xor
rorb
lock
loope
fwait
nop
in
mov
in
mov
xor
lahf
lods
jmp
imul
pop
stc
and
fcmovnu
int3
mov
int3
lcall
icebp
ljmp
imul
mov
jg
sbb
jb
mov
sub
xchg
fildll
bound
std
inc
je
cmp
leave
cli
jns
ret
push
xor
jmp
adc
xchg
jge
adc
fs
clts
push
addr16
daa
cmc
cmp
pushf
pusha
dec
movsb
cs
decb
sbb
shrl
addr16
cmp
mov
sbb
push
insb
cmc
stc
xlat
pop
scas
mov
and
push
movsl
jno
push
mov
push
inc
mov
dec
mov
sbb
push
jecxz
stc
imull
jmp
pop
sbb
cld
inc
adc
repz
movsl
mov
jbe
sahf
cmpsb
pop
shrl
mov
mov
inc
fstpl
mov
pop
mov
push
je
cmp
negb
jmp
lods
mov
adc
sbb
dec
test
mov
call
xor
das
ret
jbe
xchg
jg
ds
adc
xchg
jne
lods
arpl
fs
cmp
notb
mov
mov
push
and
jl
push
gs
movsb
cmpl
jmp
lock
ret
daa
jle
adc
cmpsb
cmpsb
dec
dec
rorl
idivb
push
out
push
jp
test
xor
pop
sub
xlat
ret
xchg
push
ss
cmpl
push
cmp
jl
js
or
aas
fdivs
call
aaa
mov
inc
iret
inc
fsubrl
sub
cmp
in
gs
bnd
imul
popf
pop
sbb
out
popa
xor
cmp
inc
cmp
fld
sub
xchg
pushf
fld
cmp
mov
in
leave
adc
loopne
outsl
lahf
sbb
aad
pop
aad
cmp
repz
dec
lds
iret
pop
shl
mov
cmp
dec
repz
or
pop
inc
fcom
ret
movsb
fisubrs
cli
insl
jmp
test
xchg
adcl
mov
add
lcall
jmp
xor
fildll
mov
push
movsl
mov
mov
mov
sbb
mov
ftst
or
out
repnz
xor
sub
jno
add
mov
fs
mov
inc
cmpl
push
hlt
dec
sub
repz
insl
mov
shl
adc
cmp
mov
enter
outsb
mov
push
out
push
sub
inc
sbb
push
jl
jle
aam
fwait
and
lods
out
stc
mov
xchg
mov
insb
hlt
in
cmp
push
add
into
xchg
iret
jns
xor
jmp
stos
in
mov
xchg
xor
movsb
lret
test
dec
ret
mov
mov
cmp
inc
cltd
test
test
je
jmp
aaa
pop
and
push
cmpsl
or
adc
lock
push
push
jp
cmpsb
sbb
gs
enter
stos
lret
insb
cmp
fwait
inc
mov
stos
mov
mov
jnp
xor
jne
in
stos
aaa
or
nop
jecxz
rcrb
outsl
sbb
mov
inc
add
out
add
jb
test
hlt
cltd
test
mov
ds
jb
ss
int
adc
rcll
xchg
xlat
data16
outsb
push
mov
inc
jns
add
or
stos
inc
sti
loope
jb
pushf
mov
sbb
sub
xchg
pop
mov
lods
lock
jne
leave
jl
or
mov
adc
rcll
jmp
addl
and
repnz
mov
dec
pop
aaa
sbb
imul
pop
insl
add
jo
mov
pop
mov
push
jp
mov
add
scas
xchg
daa
dec
add
es
jnp
lods
xor
mov
leave
andl
pop
cwtl
dec
and
movsl
or
mov
daa
sbb
dec
dec
pop
das
rcr
cmp
adc
xor
adc
mov
fsubl
je
adc
inc
cld
add
stos
and
sti
stos
repnz
std
in
xchg
or
lea
repz
mov
notl
dec
mov
js
pop
pop
or
mov
pusha
xor
rcrl
and
add
dec
shrl
fldt
jnp
inc
mov
les
sub
cwtl
aam
xchg
jl
andb
or
repnz
mov
add
mov
mov
jbe
inc
mov
mov
negl
repz
movq
jp
add
adc
jbe
mov
pop
and
loopne
movsb
adc
add
sbb
in
popa
outsl
adcb
and
cmp
sbb
jmp
jb
pop
daa
fistps
shll
mov
aad
ds
add
sbb
cmp
dec
mov
inc
and
ret
mov
mov
fmuls
sbb
and
aad
jno
xchg
and
dec
je
xchg
insl
dec
clc
divl
inc
mov
test
clc
in
sub
mov
bound
mov
loope
mov
cltd
icebp
inc
push
xchg
or
and
mov
and
inc
adc
popf
jg
icebp
mov
mov
xchg
cmc
dec
or
jmp
add
aad
xchg
in
lods
lods
filds
test
out
popa
ret
rol
fildl
mov
es
dec
imul
push
lds
cmp
data16
repz
incb
pop
and
icebp
inc
test
cs
sahf
pop
mov
jmp
mov
push
jmp
fmuls
mov
movsl
jge
adc
add
adc
sbb
ljmp
xchg
daa
push
sbb
inc
xor
mov
mov
les
insl
xor
repz
sub
fldt
popa
cmp
out
jle
push
adc
sar
icebp
loop
sbb
fidivs
filds
enter
and
bound
sbb
jg
leave
lods
loopne
ja
xor
cmc
sbb
sbb
in
lods
add
in
lret
seta
sub
pop
push
inc
pop
xchg
ss
jl
xor
lret
notb
js
and
mov
shll
test
jne
and
xchg
jae
xadd
lret
pop
clc
or
mov
int3
in
xor
daa
stos
test
xlat
cmpsl
lea
test
decb
cmp
add
sub
jge
and
das
fstl
movsb
lret
sub
popa
fmulp
sbbl
js
cli
outsb
outsb
mov
sub
cld
lret
xor
mov
sub
cmpsl
and
lret
popfw
imul
divl
xchg
sbb
adc
pop
popa
dec
bound
stc
scas
lds
mov
xor
out
and
fs
or
xor
ret
jbe
xor
pop
xor
ljmp
pop
jle
mov
adc
cmpsl
data16
out
push
out
mov
cmp
cmpsl
aaa
push
xchg
dec
mov
mov
push
int3
loopne
push
inc
in
es
mov
fs
pop
addr16
cli
imul
push
es
adc
rclb
sbbb
aad
mov
roll
push
pushf
insb
pop
pop
pop
xchg
adc
jmp
and
test
mov
xlat
jne
mov
add
inc
xchg
or
jge
xlat
mov
jg
mov
lret
lods
xchg
out
das
add
mov
movntq
sbb
inc
sbb
test
shl
mov
mov
sbb
push
jo
xor
ds
fs
add
cmp
pop
in
nop
fbld
loope
daa
ja
add
mov
xor
loopne
mov
inc
xchg
adc
adc
adc
mov
sub
jg
daa
dec
cmp
negl
andb
fstps
adcb
ret
or
mov
xor
push
mov
cmp
sar
sbb
sbb
dec
jge
ret
movsl
push
cmpsb
xchg
inc
imul
xchg
cs
adc
inc
popa
mov
add
push
aaa
lock
jge
cli
gs
sub
arpl
mov
mov
es
outsb
xchg
cmpsb
arpl
xchg
jns
sub
shll
push
mov
and
adc
mov
lahf
xor
mov
xchg
jecxz
mov
stos
outsl
int3
mov
xlat
and
jbe
jge
mov
cmpsb
popa
imul
fs
aaa
cmp
cmp
sahf
xchg
and
or
pop
shlb
mov
sbb
loopne
test
inc
mov
sbb
jge
pop
xor
test
test
loopne
cmp
jo
push
push
xor
insb
push
sub
push
decb
scas
dec
pop
pop
adc
or
jno
fdivrs
sbb
push
into
into
xchg
push
adc
fidivrl
inc
movsb
and
jnp
ret
es
mov
mov
iret
push
cmovg
fstps
dec
pop
fdivrs
sbb
fistpl
movsb
in
cmp
movsb
or
mov
and
pop
repnz
mov
pop
rorl
and
mov
mov
les
movsb
adcb
xchg
jo
cmp
outsb
cli
outsl
jecxz
pop
sarl
fsubs
push
pop
addl
stos
mov
dec
cmp
jecxz
out
roll
push
movsl
jns
loopne
mov
aaa
hlt
mov
fidivl
ds
xchg
push
loope
aas
xchg
shl
push
mov
push
push
es
jbe
test
fmull
adc
push
aad
test
addr16
sub
lock
sarb
andb
rorl
jns
insl
sbb
sbb
rclb
pop
shrl
ljmp
repnz
lea
mov
js
sub
je
clc
push
ja
xchg
pop
adc
pop
mov
jae
fs
fists
dec
add
dec
sahf
lret
cmc
push
shlb
pop
fwait
adc
lret
xchg
xor
pop
les
or
fdivrl
mov
in
gs
inc
cmp
cmp
lods
out
stos
dec
jno
loope
add
in
cmpsb
jo
jbe
dec
movsb
ret
add
and
pop
lahf
dec
or
imul
call
fidivrs
jmp
sub
inc
popa
push
sub
nop
jne
cltd
std
fs
push
sub
push
lret
push
jne
shl
inc
xor
fistps
jns
testl
or
hlt
cmp
xor
mov
aaa
shrl
adc
adc
lret
sbb
ret
mov
insl
shlb
jg
pop
sbb
jbe
inc
add
xchg
mov
cmp
jns
jge
push
mov
xor
push
inc
adc
ljmp
pop
sbb
mov
mov
mov
std
data16
rcl
popf
push
cmp
fiadds
dec
cmpsl
or
add
jmp
movsl
andb
jns
dec
sub
fnstenv
push
push
or
scas
rolb
test
cs
pop
in
cli
ja
mov
movsl
popa
fsts
pop
mov
ljmp
shr
je
or
mov
jb
or
fsqrt
cli
add
popf
adc
enter
cmp
test
xchg
push
jg
dec
dec
xor
insl
or
sub
mov
dec
and
jnp
jnp
ds
fdivs
inc
call
iret
movsl
cmc
xchg
aam
xor
jo
jno
je
xchg
mov
and
fimull
adc
mov
cli
and
shl
fimuls
sbb
cs
cwtl
je
sbb
mov
loope
mov
fldcw
or
leave
in
movsl
or
xchg
and
inc
xchg
dec
cmc
dec
addr16
lret
sahf
or
ds
and
and
mov
xchg
lahf
push
iret
pusha
sbb
and
lcall
mov
push
cmp
rcll
cmp
add
orl
cmp
adc
dec
cli
fiaddl
lock
dec
imul
mov
pop
cmc
push
mov
fstl
test
pushf
xchg
jp
std
pop
imul
add
and
data16
ja
push
scas
pop
or
jno
dec
aaa
out
arpl
into
js
imul
or
out
popa
mov
sbb
insl
pop
sbb
or
das
les
mov
std
cs
mov
cli
jmp
insb
push
lea
ffree
sub
pop
test
inc
mov
inc
and
stc
loopne
scas
xor
jne
xchg
inc
sbb
or
loopne
jmp
pop
out
movsb
fsubr
mov
inc
iret
dec
or
arpl
std
mov
or
mov
and
clc
daa
xchg
cs
negb
std
mov
mov
push
adc
movsb
cmp
push
pop
sahf
pop
repnz
dec
mov
pop
hlt
sarb
pushf
out
inc
mov
sti
aam
push
add
out
xchg
push
or
lock
push
pusha
cltd
and
or
aam
fsubrs
jb
jg
push
push
mov
notb
mov
push
addr16
adc
pushl
sbb
pop
push
or
xchg
dec
push
fisttpl
ret
dec
les
out
adc
jle
dec
mov
je
cmpsb
lahf
ja
cld
aaa
jb
stos
stos
sti
jb
add
push
pop
mov
call
jmp
es
addr16
cmc
pusha
clc
adc
int
pop
or
js
adc
dec
std
jp
add
sti
mov
rcl
aas
inc
ffreep
movsl
mov
sub
cwtl
mov
ret
mov
mov
inc
jge
jae
fcoml
jbe
jge
int
adcl
gs
insb
ss
loopne
mov
fdivl
andl
add
into
xor
mov
test
iret
sbb
xchg
lahf
push
xchg
xor
xchg
scas
lret
adc
add
nop
pushf
loop
out
sub
xchg
leave
test
test
pop
add
addr16
pushf
pop
mov
sbb
add
xchg
push
mov
test
repnz
and
fdivrs
xchg
cld
faddl
popf
dec
sarl
push
gs
and
dec
jb
into
mov
fidivrs
hlt
add
and
scas
lcall
aas
xchg
shlb
stos
and
lret
test
movl
or
test
movsb
aas
lret
arpl
pop
repnz
cmp
loopne
mov
or
pop
adc
and
popf
ret
daa
adc
insl
adc
and
daa
pop
insb
movsl
mov
jne
xchg
in
lret
data16
inc
daa
cmp
aam
xchg
sarb
mov
stos
cmp
jecxz
mov
pop
mov
inc
ds
popf
in
push
mov
popf
iret
push
cmp
jae
jno
cmp
sub
xchg
jg
adc
mov
ja
add
rolb
repz
jnp
cld
mov
insl
test
jecxz
mov
mov
fwait
mov
sbb
ret
lahf
or
mov
cmp
std
shl
pop
aaa
decl
pop
notl
jp
call
fldenv
and
xchg
dec
mov
push
ja
es
popa
sub
mov
dec
shll
es
fwait
cwtl
or
jge
add
pop
inc
jae
fwait
jl
ffreep
fs
and
test
push
push
jmp
out
testb
add
outsb
je
out
pop
bound
mov
adc
pop
gs
pop
faddl
test
insl
pop
test
js
mov
push
jle
lods
leave
jbe
push
out
push
sbb
pop
or
mov
push
or
push
stos
push
je
add
mov
nop
in
icebp
xchg
sar
pop
pop
ret
dec
pop
dec
scas
fsubl
clc
add
outsl
mov
push
inc
and
arpl
mov
lds
pop
pop
push
lahf
xor
push
movsb
js
sub
test
or
cmp
push
fs
js
hlt
test
out
pop
and
es
fbstp
mov
addl
lods
call
xchg
mov
add
js
xchg
mov
shll
orb
dec
fimull
or
sub
xchg
push
push
push
and
loopne
cltd
mov
pop
insl
enter
mov
jecxz
mov
repz
add
sbb
lcall
cmp
popf
pop
xchg
inc
inc
add
lgs
sub
fnstsw
shlb
xchg
out
cmp
or
and
inc
iret
jp
ljmp
mov
test
push
pushl
aad
xchg
push
mov
cld
leave
outsb
pop
or
adc
jp
inc
dec
sbb
jbe
pushl
jne
cmpsb
mov
cmp
ss
adc
getsec
ja
and
call
adc
lcall
rorb
sbb
shr
repz
push
hlt
testb
loope,pt
pop
out
insl
pop
or
lock
push
repz
daa
inc
lcall
cmp
adc
rcrb
cli
add
ret
cmpsb
or
lea
push
imul
rol
xchg
lods
sbbl
ficoms
cmp
mov
lret
jb
std
push
add
test
mov
popf
or
and
adc
adc
clc
jne
mov
in
mov
cltd
or
and
cmpsl
ss
ss
sub
fistpll
and
push
jb
in
sub
mov
add
idiv
in
jns
xchg
cld
lock
jmp
cld
leave
adc
cwtl
and
xchg
es
fldl
js
insl
in
push
shll
gs
pushf
lret
cwtd
iret
fsubr
sbb
lds
ljmp
and
cltd
add
push
sub
lcall
mov
sbb
outsl
lahf
and
push
mov
and
sar
add
test
push
or
inc
leave
insl
test
adc
pop
and
adc
insb
arpl
sbb
adc
loopne
fnstcw
mov
add
bnd
sub
and
dec
push
cli
in
xchg
cmp
dec
ret
pop
push
fistps
jbe
adc
shlb
repnz
xor
pop
data16
rcr
in
orl
ds
push
repz
jo
icebp
es
cli
in
inc
and
xor
xchg
rcrb
mov
xchg
insl
or
mov
xor
sbb
jns
push
adc
testl
in
or
aam
mov
ljmp
fcoms
cmpsl
in
mov
jb
pop
insl
xchg
pop
inc
and
or
inc
fs
sub
and
fists
inc
shr
and
shr
test
mov
xchg
add
xchg
sbb
movsb
pop
pop
xchg
imul
pmulhuw
mov
test
fwait
pop
imul
sti
adc
mov
xchg
insb
or
cmp
inc
outsb
or
jp
rcrl
ljmp
xchg
jnp
out
leave
sbb
into
pop
xlat
cmp
andl
js
jno
mov
and
mov
lret
pop
fdivl
adc
pusha
cmp
inc
pop
inc
data16
lahf
mov
sti
divl
pop
adc
imul
xchg
outsl
scas
sbb
and
lds
int3
and
xor
push
and
std
mov
push
and
inc
int
or
pop
ljmp
out
cli
mov
data16
pop
xor
fistpll
jge
cmp
pop
test
jbe
jle
push
es
cmp
aam
xchg
rol
pop
dec
clc
loop
dec
dec
and
add
inc
dec
cld
rolb
add
fstl
lods
add
mov
dec
sar
push
pop
mov
insl
mov
aaa
dec
xlat
cltd
in
lahf
inc
mov
cs
addb
ds
or
fisubs
das
aam
xchg
mov
ss
scas
gs
hlt
sub
enter
call
cmp
movsl
call
test
or
mov
push
movsb
lret
popf
fwait
subb
bnd
push
lds
push
movsl
int
inc
jns
lret
jo
insl
shll
lock
mov
xor
fnstsw
jp
xor
arpl
movsl
notl
test
push
inc
push
test
add
call
sub
addl
mov
push
mov
out
addb
mov
rcr
test
or
or
mov
push
mov
jae
and
leave
ret
arpl
inc
lds
call
nop
jo
adcl
imull
jbe
and
scas
insb
or
sahf
mov
jnp
js
arpl
addr16
sub
jmp
or
loopne
sub
inc
orb
outsl
cmp
xchg
dec
inc
imul
add
adc
xchg
add
mov
push
mov
imul
mov
loopne
inc
sub
adcb
sbb
jg
ljmp
lcall
shl
outsb
sarb
dec
mov
js
test
shrl
ret
pop
inc
inc
xchg
or
std
xor
cmc
adc
gs
imul
xchg
aad
pop
sbb
cwtl
test
js
inc
fdivrl
hlt
aas
xchg
lcall
push
sbb
sbb
sub
jmp
jl
cmpsl
sub
sbb
out
cwtl
popf
lahf
cld
push
pop
test
gs
movsb
add
sbb
push
and
mov
inc
in
dec
stc
sbb
aam
cmp
jge
scas
jae
sti
cmp
mov
mov
sbb
jmp
mov
cmp
sub
lds
jo
sub
push
cmp
jmp
loop
lods
inc
pop
add
ja
idivl
es
mov
xor
in
orl
mov
xor
xchg
mov
aad
cld
sbbl
lods
xchg
push
and
mov
loope
mov
mov
sbb
int
dec
adc
out
cwtl
in
dec
xor
adc
subb
orl
out
mov
cmp
movsl
mov
jg
outsl
lahf
or
cmp
shlb
jmp
gs
mov
inc
xchg
sbb
add
cmp
mov
movsl
sub
into
pusha
sti
in
addl
stos
lods
shlb
in
add
out
pop
ret
inc
pop
stos
inc
les
stos
popa
xchg
incl
xchg
mov
xor
in
icebp
xor
adc
out
sub
es
mov
pushl
es
rorw
in
jle
inc
fcmovne
pop
out
fdiv
mov
cmp
rcl
outsb
or
push
into
insl
aas
fildll
mov
in
and
rcrl
pushl
rorl
push
ds
fistps
adc
ljmp
cmpl
jae
into
ret
repz
push
inc
add
jmp
lds
push
jg
mov
std
roll
xchg
push
mov
mov
and
or
cmp
mov
loopne
outsl
adc
es
cmpsb
int3
fstpl
xchg
aam
jns
arpl
insl
insb
repnz
sbb
repnz
loop
ror
mov
xchg
cli
icebp
fldcw
fstpl
mov
jb
insb
pop
iret
pusha
out
mov
cmp
insl
lods
mov
sahf
filds
push
cmpsb
jo
fadds
dec
mov
std
test
mul
mov
push
or
test
jno
sub
sahf
imul
test
lods
inc
dec
out
in
xchg
or
push
dec
addr16
mov
arpl
out
push
push
xchg
mov
jge
cltd
xchg
jp
pop
cwtl
iret
lods
sub
pop
xor
insl
ljmp
pop
imul
push
pop
ljmp
sti
mov
adc
dec
inc
push
xchg
inc
mov
mov
adc
rorl
add
mov
add
ds
cmp
pop
cmp
adc
mov
in
xchg
out
mov
mov
pop
insl
push
fbld
add
or
cmp
jle
push
sub
lret
or
cmc
lods
lcall
cmpsl
movsl
cmp
cmp
xor
or
sbb
test
add
addr16
fdivs
push
lcall
inc
je
les
cmp
sbb
fstl
cmc
dec
pop
iret
ja
push
shlb
xlat
jns
jb
jae
lods
addr16
aad
jo
aas
insl
xor
jmp
filds
or
fwait
push
jb
pop
pusha
adc
jo
cmp
lcall
dec
adc
pop
std
mov
mov
adc
clc
lret
jmp
out
pusha
and
xor
ds
xor
sarb
or
int3
xchg
mov
mov
push
sbb
aaa
nop
lahf
scas
jnp
push
sbb
addb
xor
data16
sbb
cmc
inc
jg
loop
push
mov
cmp
dec
hlt
das
add
jno
and
repnz
push
jle
push
rclb
scas
and
and
scas
and
pop
pop
int3
adc
mov
rolb
std
mov
jmp
xor
stos
jl
jl
push
push
inc
icebp
xchg
testl
mov
sub
imul
push
subb
sbb
cld
adc
insb
jge
insb
movb
or
or
test
daa
sub
sbb
loope
xchg
aad
xchg
das
push
test
pop
adc
xor
cmp
sbb
jne
cmp
cmpsb
mov
jbe
lcall
fldt
jge
mov
or
sbbb
lea
adc
testl
adc
ljmp
loope
cmpsl
sbb
adc
lahf
mov
cmp
xchg
inc
sub
mov
outsb
dec
add
popa
dec
gs
and
rcr
fstps
inc
pop
mov
int
push
adc
mov
aad
and
dec
jge
sar
mov
jae
fucomip
inc
or
and
cmp
push
test
loop
mov
pusha
sbb
andb
pop
orl
test
outsl
xchg
xlat
mov
sub
test
fists
sbb
stos
pop
cld
pop
out
lret
xlat
push
jg
mov
push
test
jmp
pop
icebp
insl
rcr
iret
mov
mov
jl
dec
clc
mov
and
imul
je
mov
mov
shll
lods
jmp
push
mov
lock
lods
int3
lret
and
sbb
bound
add
push
lret
imul
lahf
mov
icebp
sbb
scas
lret
es
in
jnp
stc
or
leave
sub
or
inc
in
dec
mov
imul
push
insl
push
lea
aam
xchg
lahf
cmp
mov
mov
push
jecxz
and
inc
adc
push
stc
mov
test
xchg
pop
jae
andb
or
loope
jl
inc
adc
daa
dec
call
mov
fsubrp
sahf
jge
imul
adc
fistps
sbb
jo
push
fisttpl
incl
ret
sti
cmp
lods
ljmp
push
mov
pop
fbstp
stc
cmp
sti
xchg
int
sbb
lock
push
cmp
pop
out
sub
dec
call
mov
dec
mov
xlat
xchg
dec
shlb
and
aam
pop
sbb
pop
mov
and
lcall
lret
data16
or
xchg
push
stc
out
stos
repnz
outsb
dec
fisttpll
fisubl
jecxz
and
jae
pop
mov
mov
sti
inc
sbb
das
and
js
mov
xchg
xchg
mov
inc
cmpsl
push
dec
sbb
mov
jae
jns
jle
shrl
mov
arpl
out
add
rcrl
sbb
inc
nop
jge
cli
loopne
jmp
dec
pop
shl
push
lahf
mov
push
push
mov
cmp
mov
test
int3
rcl
fistpll
mov
ljmp
and
addb
add
sub
sub
sbb
mov
cmp
add
repz
mov
xchg
loop
push
push
test
rcl
mov
jbe
cs
sarl
rcr
out
inc
clc
add
push
push
jle
sbb
xchg
or
cmp
fsubl
gs
loopne
mov
and
sti
insb
mov
push
incl
push
push
mov
mov
loop
in
lds
xchg
sbb
add
mov
shrb
xchg
addr16
xor
jle,pn
pop
insl
sub
dec
jb
mov
cwtl
stos
add
jns
dec
and
sarb
inc
mov
out
cld
jl
xor
dec
cltd
add
ds
addl
lods
test
in
mov
loop
sub
pop
outsb
or
dec
or
icebp
fildll
xor
shr
orl
or
andb
xlat
or
jl
mov
lret
ret
insl
xchg
or
gs
push
mov
inc
adc
and
mov
imul
or
jecxz
int3
sbb
nop
mulb
xchg
das
ror
push
pushf
popf
mov
inc
mov
adc
orl
mov
pop
icebp
lcall
loope
mov
insb
mov
or
push
arpl
add
sub
xchg
sarb
mov
clc
push
faddl
add
jmp
flds
mov
adc
repnz
xorb
imul
sbb
push
dec
cltd
jbe
push
test
dec
pop
fisttpll
jnp
movsb
pop
sti
iret
mov
xor
out
fs
mov
fwait
jne
push
push
and
mov
loop
mov
mov
mov
jmp
cmpsb
inc
into
add
out
in
hlt
lods
xor
pop
sbb
clc
and
cli
mov
sbb
push
sub
mov
fldenv
loop
mov
or
jne
mov
mov
cltd
mov
andb
jo
outsl
mov
cmp
jp
push
ljmp
std
and
fdivrs
inc
cmpsb
enter
adc
xor
rcr
std
cmp
aam
mov
lahf
inc
mov
cmp
insl
sbb
sarl
in
notb
and
cli
jge
add
ljmp
push
or
cmpsl
addr16
outsl
stc
mov
jl
shrb
or
push
dec
pop
jge
lret
pcmpeqb
les
xlat
adc
lret
sbb
aaa
push
cltd
xor
xchg
xchg
inc
mov
mov
enter
rorb
mov
popa
inc
mov
nop
mov
push
pop
das
mov
fstpl
test
mov
mov
jl
cltd
fnsave
xorl
mov
and
jo
decb
or
pop
push
add
fsubrp
imul
xor
mov
xor
push
push
lea
xchg
mov
push
cwtl
out
pop
out
ss
mov
pop
inc
fsubs
push
mov
adc
outsl
add
sbb
mov
push
lret
addr16
pusha
les
or
pop
sahf
flds
add
loope
ja
daa
repnz
or
stos
fdivs
scas
or
fsub
mov
lods
xor
lahf
out
ret
aaa
sub
push
jbe
hlt
aas
call
nop
sbb
pop
and
stos
adc
inc
lea
dec
out
jb
or
mov
mov
fmuls
mov
adcb
jbe
dec
xor
mov
addl
ret
jecxz
pop
test
les
and
and
add
lret
sub
xchg
clc
pusha
pop
sbb
cltd
insb
lret
xlat
movsb
out
cmp
bound
mov
aam
cmpsl
stos
mov
mov
cmp
inc
aaa
cs
pusha
add
repz
mov
das
les
add
lds
pop
or
pusha
cmpsb
scas
xchg
inc
repnz
or
jno
outsb
and
mov
and
xchg
or
sub
mov
or
fldenv
out
ror
sub
imulb
outsl
gs
fxch
add
lret
add
jmp
xlat
out
fs
aaa
pop
push
mov
and
mov
fldenv
shl
arpl
jp
jge
mov
fidivrl
add
mov
pop
scas
test
add
iret
shlb
mov
aaa
test
mov
pop
jb
sbb
dec
lds
mov
sbb
mov
cmc
scas
insl
pop
add
or
cli
and
bound
shlb
clc
clc
dec
loope
cs
sbb
and
das
cmp
out
jno
mov
cmp
in
std
mov
push
fsubr
fs
inc
adc
imul
adc
ss
xor
dec
fidivrl
add
pop
int
movsb
xchg
pop
mov
xor
xchg
addr16
test
mov
mov
and
cmp
xlat
aas
cli
xor
sti
cmp
push
cmp
mov
ja
cmpsl
xor
repz
pusha
and
inc
fwait
xor
add
orl
mov
xlat
clc
xchg
shlb
and
push
cmp
jmp
in
clc
fcoml
ja
hlt
lret
add
shll
aam
jns
mov
in
push
rorb
jle,pt
mov
adc
notl
and
cs
aas
dec
xor
cld
mov
pop
mov
imul
cld
test
incl
inc
stos
test
sub
sbb
dec
mov
mov
das
sbb
inc
ror
das
inc
sbb
scas
outsb
xor
push
shlb
ret
push
movsb
pop
aad
jmp
cmp
ljmp
inc
sub
pop
push
inc
lds
in
jo
add
ja
pop
add
jno
cltd
inc
cmc
mov
cld
xchg
mov
inc
fldt
dec
in
inc
adc
inc
pop
out
sbb
dec
int3
and
push
jnp
fiaddl
repnz
xchg
repnz
jb
xor
imul
mov
and
dec
iret
rclb
xchg
clc
sahf
mov
mov
mov
mov
jmp
cld
cwtl
inc
mov
dec
ds
mov
sbb
dec
arpl
test
pushf
xchg
shlb
jo
dec
and
pop
pop
pop
loop
imul
xor
jp
sbb
mov
pop
cmp
push
loop
push
test
mov
sub
subl
push
fstpt
add
adc
enter
lods
sbb
outsl
cmc
insl
enter
test
xor
xchg
pop
mov
loope
mov
subb
mov
das
jne
fucomip
out
lret
dec
push
loop
mov
fisttps
orb
xchg
add
push
std
outsb
shlb
aas
xchg
xchg
fists
scas
pop
push
insb
mov
sbb
lret
test
scas
inc
repnz
push
add
mov
xchg
clc
or
mov
pop
call
mov
xchg
dec
pop
mov
je
adc
mov
pop
popa
xchg
out
aam
xor
cld
mov
sub
iret
daa
xor
popa
xor
xor
into
addb
sahf
movsl
xchg
mov
out
addl
mov
mov
add
aaa
add
enter
mov
inc
sbb
inc
jno
test
sub
data16
in
cld
jno
jmp
imul
shrb
xchg
jne
sti
cld
js
leave
pop
dec
aam
jl
pop
arpl
xchg
add
aad
mov
lods
into
xor
icebp
inc
dec
xor
ljmp
push
jp
lods
dec
fisubl
mov
daa
test
pop
outsb
jmp
inc
and
pop
out
cltd
aas
jo,pn
cmp
jae
jbe
testl
jbe
jl
out
cwtl
cwtl
cmp
mov
jge
je
pop
cwtl
imul
dec
sbb
ret
mov
test
in
add
dec
xchg
insl
mov
ret
stos
sub
and
jmp
dec
imull
xchg
out
dec
dec
jp
mov
sbb
jno
je
cli
ss
lret
jmp
fidivl
jo,pt
or
push
push
sbb
add
push
mov
or
aam
sbb
xchg
xor
dec
pop
xchg
mov
xor
bound
jnp
cmpsb
push
cmpsb
and
sahf
scas
sbb
outsb
and
into
inc
or
cli
xor
jbe
and
test
and
xchg
stos
gs
pop
adc
mov
jg
cs
jne
push
insb
clc
cmpsl
inc
mov
push
sub
mov
push
aas
mov
sbb
xor
push
mov
pop
sub
les
je
add
pop
pop
jo
mov
add
stos
xchg
xchg
pop
std
cmpsb
notb
dec
and
fbld
mov
mov
icebp
cmpsb
fs
adc
sar
aas
cli
loope
push
add
test
fs
outsb
mov
fsubl
add
pop
rcl
sbbb
xor
fwait
mov
shll
pusha
cmp
movsb
or
cmp
out
sarb
add
mov
and
in
enter
test
aaa
add
es
mov
push
inc
dec
sbb
repnz
and
or
push
mov
mov
enter
lods
stc
lods
pop
sub
stos
test
push
pushf
inc
xchg
aas
or
and
scas
or
jecxz
int
add
and
and
add
mov
and
ret
out
ja
sbb
add
out
xor
fiaddl
adc
mov
fs
test
aad
xor
push
pop
xchg
and
dec
test
cmp
adc
xchg
lret
sbb
pop
sbb
in
dec
xchg
cmpsb
mov
and
leave
sbb
lods
nop
cmp
jmp
sbb
jmp
jg
rolb
enter
cmc
ret
pushf
add
push
ret
mov
shll
insb
mov
fildl
push
insl
and
out
jb
loopne
fnstenv
pop
mov
push
pop
xchg
xor
out
push
rcl
enter
out
xchg
inc
mov
test
push
mov
inc
add
dec
mov
sti
sub
jle
sbb
lret
inc
cwtl
stc
enter
daa
cmp
xchg
cmp
cmp
movsb
push
shlb
or
aam
mov
pop
test
pop
mov
cld
lahf
insl
jnp
stos
dec
pop
movsb
dec
bound
or
in
sub
mov
sahf
jbe
shlb
aad
lahf
xchg
leave
stc
cmc
ret
xchg
xor
pop
inc
pop
lcall
outsb
iret
dec
push
or
mov
notl
ljmp
jns
push
stc
lock
xor
divb
mov
sub
stc
mov
test
out
jns
pusha
icebp
addr16
inc
sub
test
mov
push
fdivrl
dec
leavew
loope
fnstsw
fstpl
adc
sub
push
loopne
inc
mov
test
rcll
data16
test
dec
cmpsb
sbb
push
dec
test
iret
cli
sbb
fcoml
outsl
dec
cmp
cli
mov
push
push
mull
mov
sub
sahf
inc
mov
jbe
test
mov
and
loop
repnz
mov
inc
iret
jp
pushf
repnz
lcall
mov
xor
add
dec
fsubrs
and
ret
aam
push
outsl
push
xchg
adc
sbb
sub
or
test
xor
mov
mov
and
js
mov
inc
lret
dec
mov
loop
std
inc
sar
sub
inc
in
and
fs
cltd
movsl
add
jbe
inc
xor
mov
int3
scas
sarb
jne
aad
or
sbbb
sbb
pop
int
ja
sub
sub
jecxz
in
push
jmp
xor
and
in
out
in
xchg
pop
movsb
jecxz
sub
idivb
adc
lock
cltd
cmpsl
fisubrs
sub
mov
mov
mov
sub
je
push
icebp
out
decl
pusha
bound
lods
daa
jecxz
xlat
cli
mov
mov
cmp
xchg
xchg
pop
jge
dec
fmul
or
push
adc
or
ret
inc
sbb
mov
sbb
cmp
aaa
inc
xor
cmp
add
xchg
xor
sbbl
clc
or
jno
push
mov
mov
divb
mov
sub
mov
shrb
xchg
mov
jae
data16
ret
into
or
hlt
adc
fimull
stos
adc
cmpsb
test
aaa
cli
or
lods
dec
dec
push
push
std
or
ret
je
push
inc
lahf
cmpsl
ljmp
push
or
jl
ljmp
jnp
out
push
outsb
popf
lock
lcall
cwtl
push
cmp
mov
ret
push
mov
xchg
out
add
sbb
imul
lret
jne
pop
push
lds
inc
mov
fs
nop
inc
or
dec
xor
cld
das
mov
pop
lret
push
aam
xor
dec
jg
add
and
test
and
ficoml
movsb
or
mov
cmp
xor
jo
imul
out
scas
push
inc
cmpb
out
mov
mov
outsb
ja
add
xor
icebp
pop
call
ljmp
and
dec
mov
lretw
sbb
sbbb
adc
mov
xor
in
jno
mov
jle
sahf
jmp
sub
mov
xchg
rcll
push
add
pop
test
stos
loop
lds
aad
push
mov
call
jnp
fs
movsl
dec
je
sub
icebp
mov
repz
movsb
jle
testb
cmp
xlat
lods
inc
mov
lds
sbb
data16
xor
xchg
dec
pusha
das
aam
repnz
jne
dec
sbbb
and
daa
aas
movl
sub
inc
clc
mov
ds
xor
adc
in
repz
cmp
iret
pop
mov
scas
pop
arpl
ds
ret
inc
loopne
rorb
mov
add
xchg
xor
cmp
arpl
mov
adc
andb
jnp
adc
jnp
dec
stc
mov
jle
inc
dec
fmuls
movsl
ret
pop
test
out
jl
mov
scas
shlb
add
jp
ds
repnz
sbb
movsl
repnz
fcom
adc
in
out
and
and
ja
popa
outsb
push
fwait
push
inc
outsl
and
and
and
into
pop
jg
ror
mov
nop
lcall
mov
in
aas
cmp
pop
xchg
jmp
dec
inc
ljmp
add
and
jmp
sub
add
rorl
hlt
lds
inc
sbb
jle
xchg
xor
push
xor
decl
xor
cmpsl
in
lret
outsl
lret
add
fcomip
cmc
enter
clc
in
adc
pop
loopne
imul
leave
push
lock
inc
dec
xchg
lret
cmp
vmptrst
sub
dec
push
int
hlt
xor
scas
mov
lods
decl
inc
cli
push
lea
inc
fcmovne
inc
mov
out
jo
push
or
dec
test
cli
inc
dec
adc
dec
jne
popa
lods
enter
addr16
jmp
divl
mov
cmp
cmp
les
xchg
pop
lret
inc
or
out
scas
lret
xchg
out
mov
movsb
pop
movsl
or
movsb
pop
lret
push
test
dec
sbb
hlt
les
pop
or
in
mov
mov
out
xor
and
test
mov
mov
jl
in
pop
dec
aas
sub
ljmp
mov
filds
mov
mov
pop
mov
xchg
xor
cs
mov
pop
cmp
leave
lret
lock
in
mov
aad
jbe
sarb
pop
adc
sbb
cmp
mov
movb
ret
inc
out
xor
sub
lahf
fcoms
add
mov
jnp
pop
mov
dec
ljmp
ficoml
dec
sub
loop
jne
jne
imul
and
fbld
xchg
xor
mov
push
mov
sti
cmp
leave
pop
push
insl
adc
testl
xchg
nop
sbb
mov
icebp
outsl
jmp
push
leave
in
loopne
or
lret
mov
xor
inc
jmp
loope
scas
inc
dec
jmp
rcrb
sahf
xchg
ret
roll
imul
sub
popa
insb
and
pop
mov
outsb
fnstcw
divl
inc
fildll
sbb
sbb
jl
leave
adc
sub
lock
xchg
call
sub
push
clc
xor
mov
push
jae
sti
and
adc
cmc
sbb
sub
fidivrs
xchg
adc
push
jae
pop
into
into
iret
mov
mov
inc
sub
xor
stc
rclb
shll
enter
lret
jae
xchg
adc
cmc
sbb
test
mov
test
pusha
pop
shlb
push
daa
clc
arpl
adc
lods
pop
lods
jnp
jo
mov
xchg
test
iret
outsl
outsb
add
fisttpl
cmpsb
cmc
push
mov
sub
xchg
stos
dec
or
mov
rclb
nop
and
stc
mov
and
sub
test
fwait
mov
mov
test
inc
inc
lock
jb
ja
inc
sbb
std
stc
xor
pop
js
cmc
and
and
rcrl
out
xchg
cwtl
push
ljmp
dec
adc
add
lahf
jmp
sbb
outsl
test
mov
int3
shr
inc
les
sbb
pop
dec
je
lret
les
add
rcrl
sub
push
idivl
jno
mov
lods
cmp
cltd
add
add
in
int3
call
scas
mov
mov
int3
xchg
aad
jg
mov
in
hlt
std
call
mov
xchg
and
loopne
mov
add
mov
or
mov
pop
or
data16
mov
mov
add
mov
das
insl
pop
and
mov
add
pusha
nop
mov
mulb
sbb
sbb
mov
add
mov
dec
jmp
outsl
shrl
fldcw
mov
push
dec
xchg
mov
fimull
xchg
xor
sbb
xchg
adc
cwtl
and
fcomps
aas
popa
jbe
jecxz
and
pop
fistpl
sub
icebp
jns
dec
cwtl
pop
inc
jb
repz
cwtl
inc
jo
repz
pushf
ja
movsb
jg
cmp
xchg
mov
mov
xor
pusha
sub
adc
es
insb
cmpsb
hlt
push
add
int3
test
shlb
mov
lds
sub
xchg
hlt
mov
imul
sbb
mov
loop
jp
mov
sahf
test
test
sbb
ret
and
sarl
pop
xlat
xchg
test
stos
inc
out
and
fistps
call
jge
jmp
jle
mov
imul
sub
shrl
fnstcw
maskmovq
notl
pop
hlt
arpl
pop
inc
mov
je
xor
es
aad
push
fdivrl
or
or
repnz
fists
xchg
pop
sub
inc
add
jl
test
sbb
add
sub
cmp
sub
test
push
pop
add
sub
adc
cmp
repnz
xchg
mov
repnz
jno
push
add
cmp
push
leave
aaa
xchg
daa
lahf
fmuls
js
sbb
push
jnp
adc
rolb
jecxz,pt
pusha
repz
sti
xchg
xchg
int
push
mov
xchg
jns
jge
add
notb
xchg
scas
sub
pop
mov
inc
lea
loope
xchg
sub
push
push
pop
sbb
xchg
lods
fisttps
stos
gs
fnstenv
out
add
jle
aaa
repz
push
or
dec
sbb
add
add
lods
idivl
rolb
and
pop
frstor
pop
fs
inc
push
adc
lods
xor
pop
adc
sbb
test
or
xor
push
sub
addl
add
adc
lret
mov
cmp
aaa
loop
mov
mov
or
or
pop
ret
mov
jecxz
sub
inc
pop
pop
lods
mov
jo
mov
jne
xchg
mov
adc
into
outsl
push
cmpsl
or
pop
lcall
ljmp
lcall
mov
pop
sub
or
movsl
cmp
mov
negb
or
loop
and
mov
arpl
loopne
pop
aam
jo
dec
jmp
lock
jae
inc
jle
cmp
lret
int
pop
popa
mov
mov
shrl
iret
daa
rclb
lods
mov
sahf
jb
inc
pop
lds
imul
std
decl
jecxz
cld
test
pushf
aaa
pop
adcb
pop
sbb
je
addr16
scas
cmp
inc
stos
je
in
imul
ds
rolb
dec
dec
das
out
jge
add
in
mov
fs
testb
xchg
fsubr
ret
mov
cmp
rcll
fsubr
fsubs
sub
add
fisttpl
and
fcompl
sbb
xor
mov
lods
inc
jl
jecxz
ljmp
mov
notb
cmpsb
xorb
scas
je
clc
inc
wbinvd
xchg
adc
dec
xor
sub
sub
mov
sbb
and
sub
sbb
decl
inc
jne
add
fs
cmp
inc
out
mov
scas
cmp
or
sub
sub
pushf
sbb
lock
lahf
clc
dec
xchg
in
imul
mov
inc
lret
fldcw
add
jne
dec
aas
movsb
cmp
jae
mov
mov
daa
or
jno
jns
int3
fnstcw
push
imul
data16
fsub
pop
enter
dec
outsl
js
mov
cld
cltd
in
fcomps
xor
and
int
cmp
leave
inc
pushf
stos
cmc
loop
adc
dec
mov
ja
dec
call
icebp
inc
xor
stos
add
xchg
hlt
imul
rolb
jecxz
cmp
cmc
adc
repnz
push
jo
cltd
les
sub
push
inc
in
cs
call
pushf
fwait
les
xchg
xchg
icebp
dec
cmpb
xchg
jmp
fs
mul
sub
mov
sub
mov
test
inc
lods
incl
cmpsl
aas
notb
inc
dec
mov
in
jmp
std
sub
dec
mov
call
mov
sbb
test
pop
mov
mov
adc
fimuls
xchg
sbb
mov
fisttpll
cltd
fstl
sbb
adc
adc
fwait
inc
dec
cltd
data16
stos
jne
scas
je
push
mov
push
int
cmp
and
xor
or
mov
ljmp
push
sbb
dec
sti
cmp
push
cmp
xlat
and
pop
dec
repz
dec
stos
mov
push
stos
stc
mov
jb
stos
call
fstl
into
adc
lods
test
popa
ljmp
adc
mov
xor
jp
inc
das
insl
add
cmp
xor
ficoml
ljmp
cmp
and
xchg
shll
xor
aam
out
inc
and
enter
xor
mov
inc
add
mov
fincstp
cwtl
loopne
xchg
ret
sti
sub
bound
sub
inc
das
jg
adc
ja
jl
stc
mov
test
push
lahf
and
jno
xchg
sti
dec
int3
xchg
out
jbe
cmpsl
and
fstpl
jns
movsl
xor
out
add
push
mov
cmpsl
outsl
data16
mov
adc
dec
and
xor
fxch
xchg
xchg
lea
lods
loopne
clc
rorl
xchg
xchg
jnp
xor
jno
add
xor
ret
ds
mov
neg
push
out
sub
or
xor
popa
sti
jne
out
outsb
pushf
sub
lea
aam
pop
sub
sbb
cmp
int3
jmp
dec
scas
rcll
jnp
xchg
inc
js
jae
inc
xor
sahf
add
outsl
add
sub
sub
mov
xchg
cs
pop
mov
xchg
dec
pop
fcomp
jbe
bound
stos
sub
mov
push
bound
mov
xchg
mov
jns
lahf
pop
daa
sub
jb
les
push
cmp
push
aad
data16
or
ror
hlt
adc
mov
in
hlt
insb
insb
adc
xor
scas
push
cmpsb
mov
scas
inc
inc
and
icebp
jp
adc
in
sbb
mov
inc
xchg
jecxz
inc
lods
add
inc
xchg
inc
mov
xor
jl
or
mov
adc
aad
divl
and
xchg
xor
or
push
fldenv
inc
cli
add
lea
add
push
int
xchg
jg
inc
and
push
loope
mov
jp
cmp
insl
lock
cmpsb
cmc
test
jno
xchg
scas
add
mov
and
loop
out
bnd
lret
ret
sub
imul
in
jmp
fnstenv
pusha
mov
lahf
jne
or
das
mov
mov
inc
popf
pop
dec
int3
test
xor
jle
push
inc
iret
cmpsl
scas
push
and
aad
inc
fistpl
and
ficomps
jg
or
gs
push
stos
lahf
aas
insb
pop
fsubrs
inc
xchg
popa
neg
and
jo
andb
outsb
xor
sub
cmp
je
cli
pop
push
jno
gs
push
lea
popa
mov
mov
lahf
push
sub
call
dec
dec
mov
ja
push
stos
xchg
mov
jb
push
and
mov
fxam
loop
xchg
add
and
pusha
cmp
push
mov
out
sbb
inc
xor
mov
mov
or
add
sub
out
outsl
adc
add
iret
push
dec
mov
xchg
jle
xchg
push
pop
sbb
divb
inc
test
popf
adc
adc
repz
test
add
sbb
add
cmp
js
and
in
cli
dec
add
notl
fwait
aaa
push
imul
lods
call
sub
sbb
pop
ds
inc
and
jnp
xchg
fsubl
test
inc
ret
ret
lret
loop
sbb
xlat
pop
lret
xor
lods
mov
xor
das
sub
mov
push
sti
push
xlat
push
jle
push
lods
pop
and
sub
dec
cmpsb
test
bound
dec
xchg
sarl
inc
inc
addr16
sbb
mov
or
dec
mov
mov
add
cli
sbb
ss
and
pop
nopl
add
push
sub
lods
scas
add
jmp
jp
and
or
loop
sbb
arpl
cwtl
cwtl
je
out
mov
sub
cmc
daa
or
push
sbb
pop
in
stc
mov
clc
pusha
sahf
and
insb
adc
in
xchg
sub
jb
adc
js
and
xlat
enter
imul
mov
inc
push
rcrl
adc
repnz
repz
adc
loop
xor
scas
or
jmp
pushf
adc
fldl
dec
jo
call
mov
lret
sub
je
test
pop
push
outsb
test
xchg
loop
hlt
push
xchg
nop
and
jns
push
dec
sahf
mov
sbb
dec
jae
fs
jne
lock
xchg
push
fcmovne
fwait
adc
xlat
lds
and
add
mov
imul
jb
aaa
push
lret
popa
fld1
mov
add
icebp
andb
popa
mov
dec
mov
out
and
xor
xor
stos
cmp
xor
xchg
pop
or
adc
shll
mov
mov
adc
mov
add
ss
or
test
sub
xor
in
sub
pusha
xlat
rcl
fst
and
aad
jle
pop
adc
stos
sbb
scas
mov
aam
push
push
enter
xor
pop
pop
and
sbb
mov
inc
jmp
lret
js
cld
rorb
inc
sbb
xor
stos
cmp
xor
and
sub
int3
xor
dec
popf
or
in
fucomp
dec
push
popf
add
xor
rclb
std
inc
cltd
xor
cli
jnp
jge
shrl
je
jge
mov
roll
pop
xchg
push
in
mov
pop
adc
inc
sub
lock
push
imul
cmp
test
cld
and
pop
mov
mov
outsl
add
rorb
mov
aad
and
add
pop
aas
pusha
adc
fdivl
aaa
mov
push
scas
popa
bound
shlb
inc
sub
daa
adc
push
sbb
adc
sub
inc
jl
push
mov
push
cmp
inc
cwtl
push
int
mov
pop
xchg
mov
out
xchg
insl
add
xor
mov
inc
cmp
mov
shl
and
daa
mov
sub
cld
mov
push
loope
push
int
inc
or
xchg
adc
iret
jl
imul
push
cli
xchg
test
test
outsb
pusha
rcll
mov
xchg
cmp
cli
pop
das
into
sub
movntps
jge
or
mov
add
cmpsl
js
jl
jae
sub
mov
cli
jne
pop
addr16
call
xor
cmp
or
mov
jl
xchg
xor
sub
mov
push
adc
adc
inc
cld
insw
mov
fisttpll
push
int3
inc
roll
push
fsubrs
imul
xchg
sub
sub
popa
ds
xchg
into
sbb
dec
fisttpl
ljmp
enter
ss
lods
push
scas
and
xchg
pop
pop
loop
aad
mov
test
call
sbb
rcr
mov
mov
sbb
inc
mov
ret
into
stc
mov
jo
xor
loope
subl
push
adc
mov
test
js
rcrl
das
out
das
push
jge
arpl
mov
pop
out
mov
inc
lahf
pop
add
dec
inc
pop
mov
adc
test
test
fwait
adc
dec
mov
mov
xor
ds
pop
mov
mov
iret
or
mov
bnd
mov
adc
lds
mov
out
xor
fcmovnb
mov
scas
mov
add
and
or
add
loop
test
je
mov
inc
push
insb
and
jecxz
loope
fsts
xchg
sbb
idivl
jl
inc
or
repz
nop
rcl
jbe
lahf
flds
popf
xorb
cmp
jl
mov
or
xchg
mov
xor
jl
mov
mov
xchg
xchg
inc
loop
inc
divl
pop
loope
push
movl
mov
xchg
int
or
jle
hlt
pop
pop
movsl
xor
xlat
rorl
lret
sahf
sbb
push
cld
jno
xor
stos
insb
ljmp
jns
adc
push
xor
lds
and
loope
jp
inc
icebp
push
inc
xchg
jp
adcb
sbb
lret
les
insb
pushf
jmp
stos
add
cmp
hlt
xor
adc
pop
call
jl
loope
jbe
fadd
into
inc
sbb
mov
pop
imul
sbb
mov
sbb
in
xchg
lcall
mov
mov
icebp
adc
loopne
out
or
xchg
dec
mov
mov
sbb
ja
xchg
inc
and
bound
dec
popl
data16
and
mov
ljmp
inc
insl
idivl
adc
test
cmp
push
loope
push
nop
add
inc
in
bound
and
mov
mov
sub
mov
sbb
cmp
ret
scas
in
dec
stos
hlt
enter
xor
push
or
loop
pop
and
xor
insb
and
mov
mov
scas
add
mov
cmp
lahf
push
dec
cmpsl
sub
shll
mov
sub
inc
inc
push
mov
out
stc
lret
pop
add
adc
out
ret
jmp
and
jle
jecxz
pop
ja
mov
sbb
jns
add
mov
inc
jg
and
mov
inc
xor
rorl
cli
sbb
push
into
cmp
jb
test
cmp
cmpb
in
into
xorb
cltd
and
bound
inc
add
push
sbb
out
sub
mov
scas
popa
sub
mov
insl
cmp
dec
xor
push
cld
sub
aas
out
aaa
repz
out
mov
insb
push
aaa
push
imul
mov
hlt
cmc
fcmovnb
cmpsb
inc
xchg
jecxz
cld
dec
push
xchg
mov
jmp
outsb
imull
shlb
and
xor
repnz
sti
test
sbb
aas
aam
loope
fisubrl
adc
jbe
mov
xchg
icebp
mov
mov
inc
lea
out
sub
mov
jmp
dec
int3
dec
cmp
fnstcw
sbb
out
insl
sbb
in
push
mov
scas
jo
jbe
fsts
movsl
out
lea
scas
mov
imul
shrb
xor
addl
xchg
fwait
mov
sti
add
ljmp
xchg
mov
and
repnz
pop
movb
dec
dec
mov
or
mov
dec
or
jecxz
pop
cmc
shrd
adcl
mov
ret
imul
mov
dec
inc
push
mov
es
insl
mov
les
mov
aad
mov
sub
scas
and
ret
int
cmp
and
push
mov
xlat
mov
ljmp
mov
or
enter
mov
fisttpl
cwtl
movhlps
cmpsb
sbb
repz
int3
xor
adc
popf
negb
push
lea
movsb
arpl
ljmp
leave
clc
adc
mov
je
push
sub
push
add
shl
push
push
adc
loope
pop
push
sub
sbb
bound
add
inc
cltd
xor
mov
test
sub
add
jo
xchg
cmp
inc
les
mov
cli
sub
add
mov
jmp
in
sbb
sti
rorb
jbe
repz
popa
mov
mov
lahf
inc
sarb
adc
rorl
cmp
movsl
jne
test
push
imul
je
leave
iret
popf
icebp
inc
lods
pop
and
stos
out
push
into
pop
mov
popa
icebp
lret
jmp
add
xor
xchg
sti
xchg
fiaddl
xchg
mov
jmp
mov
test
scas
insl
mov
in
adc
jecxz
jmp
jecxz
push
xor
adc
ss
push
xor
ja
mov
ss
pop
mov
xchg
xchg
push
dec
xchg
mov
jno
ss
roll
ret
imul
push
test
add
xchg
subb
popa
jmp
and
and
and
sub
out
push
cmp
icebp
mov
in
inc
pop
ret
cmp
xchg
adc
scas
pushf
shll
pop
in
mov
lock
mov
ss
xchg
fsubr
jg
mov
ss
and
push
or
scas
dec
adc
dec
xor
popa
cli
jl
imul
mov
pusha
xchg
xchg
xorl
daa
insl
jne
push
hlt
adc
or
sub
pop
nop
jle
in
pop
add
stos
sbb
outsl
incl
aaa
pop
iret
sbbl
push
mov
ja
mov
mov
outsl
mov
xchg
xor
push
mov
xor
push
sbb
cs
je
sbb
or
ss
lcall
in
push
jmp
cmp
push
lcall
sub
push
repz
mov
mov
inc
movl
cld
imul
sub
bound
inc
inc
fcomps
cmp
subl
outsb
xchg
outsl
stos
pop
cmp
adc
ja
out
in
push
add
jae
dec
imul
flds
or
std
pop
aaa
sbb
sbb
xor
push
divb
outsl
mov
cmp
std
xchg
mov
cmp
mov
adc
fsubs
or
adc
into
stc
mov
outsl
sub
add
pop
mov
inc
jno
jmp
lcall
dec
and
enter
sub
cmp
adc
lret
sahf
dec
cmpsl
js
dec
add
out
sbb
sbb
xor
cwtl
imul
jns
leave
adc
daa
mov
jo
in
mov
xor
mov
push
jl
pusha
fidivrs
imul
push
loope
xchg
mov
xlat
and
push
mov
mov
int3
dec
mov
movsl
jl
lods
data16
cmp
sub
call
leave
cmp
push
outsb
fisubl
pop
into
push
js
xchg
and
xor
insb
inc
and
sti
loope
add
mov
pcmpgtd
test
mov
add
movsl
dec
mov
dec
fwait
sbbl
rclb
lcall
mov
jp
test
fldl
test
orb
adc
test
lock
dec
xchg
xchg
out
mov
and
sub
movsb
jae
pop
and
add
std
pop
mov
dec
dec
sub
mov
push
repz
sti
jecxz
shll
add
jl
mov
sub
insl
movsb
movsl
inc
jo
in
testl
sbb
add
add
jle
xchg
sbb
pop
data16
cmp
ss
jge
push
andb
bound
insb
cmp
push
ret
addl
xor
das
mov
jns,pt
sbb
xor
out
push
or
inc
and
je
movsl
stos
fisttpll
fwait
jno
hlt
shlb
ljmp
cmp
call
call
lret
mov
imull
adcl
repnz
xchg
inc
sbb
xor
push
pop
sarl
dec
lock
test
mov
inc
adc
shrl
arpl
cmp
mov
and
xor
ficompl
sahf
mov
jl
inc
dec
push
in
cmpsl
push
mov
js
sarb
push
nop
imul
dec
jg
cmc
jne
loop
out
scas
je
loopne
mov
sbb
fisubrl
dec
shl
or
inc
mov
cmpsl
inc
pop
xor
out
test
xchg
mov
aas
mov
lret
xchg
xchg
movsl
mov
mov
add
rorb
imul
lods
sahf
add
pop
inc
dec
pop
jae
aad
aad
mov
dec
push
cmp
sub
or
inc
das
js
inc
push
adc
sbbb
pushw
mov
pop
data16
xchg
mov
mov
fdivrs
sbb
jmp
inc
cmpsl
fidivrl
shrl
mov
in
push
jp
dec
iret
testb
outsb
idivb
adc
mov
mov
sbb
push
sysret
std
loopne
and
pop
aad
insb
lahf
xchg
js
push
mov
aam
mov
test
imul
shl
add
inc
xchg
xor
mov
cmc
subl
daa
and
mov
stos
mov
push
mov
or
fistl
inc
push
xor
fcomip
les
ss
inc
cmp
cmp
fs
xchg
jle
fsubs
loopne
or
mov
cs
pop
jmp
mov
dec
mov
jp
ret
xor
lds
adc
or
or
enter
dec
and
testb
mov
outsb
jo
or
push
test
rclb
test
test
std
cwtl
jae
xor
icebp
mov
push
sub
sub
mov
aam
movsl
in
cmc
cmp
and
outsl
repnz
das
imull
jne
out
jae
cmp
scas
pop
mov
sub
add
mov
loop
rcrb
and
aad
xchg
ja
dec
repz
jb
adcb
or
dec
mov
fisubrl
adc
aad
lret
mov
test
daa
loope
xchg
mov
in
shr
xchg
add
shrl
stc
insl
add
sub
cld
xchg
fbld
insb
in
xchg
add
xchg
iret
in
push
test
iret
pop
movsb
lds
mov
fsubl
ljmp
das
sahf
sub
add
aas
xchg
push
inc
push
pop
ret
int
add
mov
comiss
jmp
xor
jo
lret
or
pop
push
mov
lods
dec
test
xlat
sti
stos
ret
out
test
cmc
mov
mov
xor
sbb
cld
jmp
and
int
push
aam
and
rcrl
aaa
push
jnp
pop
sbb
adc
or
xchg
mov
cs
sub
pop
jnp
fprem1
cs
into
mov
push
add
add
fsts
push
mov
mov
xlat
inc
and
mov
std
cli
mov
test
cmp
xchg
or
jl
adc
cmp
hlt
mov
ja
orb
mov
sahf
test
addb
out
xchg
hlt
imul
sbb
out
push
pop
es
test
sub
int
mov
dec
and
mov
jne
or
xor
sahf
jg
jmp
mov
int
mov
mov
xchg
xlat
sbb
aam
scas
or
dec
adc
cmp
stc
cmp
xor
mov
mov
clc
jg
sti
ret
popf
mov
push
popf
mov
jne
outsb
sbb
pop
das
in
lds
or
sbb
mov
int
pushf
xor
xor
mov
out
mov
fstpl
adc
sbb
fnstenv
cmpsl
pop
mov
mov
lret
out
cmpsb
xchg
test
xchg
jle
fldt
dec
popf
std
mov
loope
jnp
lcall
ja
adc
add
ljmp
and
ja
popf
mov
push
mov
push
out
dec
push
sti
mov
push
cmpsb
add
push
inc
outsb
xchg
pop
bound
lods
mov
sub
call
xlat
xor
and
sub
cmp
jmp
add
inc
movsl
cli
hlt
je
sbb
mov
lods
mov
adc
stc
push
pop
adc
and
fcompl
xchg
mov
xchg
mov
push
xor
or
lea
mov
push
mov
loopne
add
inc
xchg
testb
ror
lfs
sub
mov
adc
mov
je
pop
imul
push
cmpsl
out
cld
data16
insl
push
or
push
mov
sbb
inc
push
decl
and
ret
push
dec
xor
inc
push
xor
shrb
cmp
xchg
scas
ret
push
pop
insb
sbbb
inc
jo
push
cwtl
push
jo
jns
test
cmc
ljmp
test
inc
jecxz,pn
arpl
mov
pushf
mov
sub
int
js
test
lods
cmpb
inc
popa
lods
hlt
fbstp
cmpsb
xchg
push
xor
bnd
inc
fnstsw
and
push
push
jae
sbb
inc
daa
out
mov
sub
fdivl
inc
mov
add
mov
test
sbb
xchg
arpl
fisubrs
push
inc
fdivrs
enter
jno
sub
imul
jmp
add
pop
adc
pop
int3
mul
inc
repnz
or
lahf
loope
push
push
mov
mov
pusha
jmp
test
subl
sbb
jno
push
out
rcr
jge
iret
xchg
movsl
in
cmp
fistpll
mov
and
xor
mov
cmpsl
int3
dec
addr16
dec
xchg
sub
mov
jle
cltd
dec
xchg
mov
stos
push
ljmp
push
or
cmp
ljmp
adc
insb
test
push
imul
or
xlat
nop
push
or
bound
sbb
xchg
push
and
or
mov
or
std
push
sub
jne
inc
mov
mov
divl
pop
pop
hlt
dec
mov
pop
xchg
mov
mov
or
lret
adc
movsb
xchg
ljmp
pusha
mov
adc
in
daa
mov
shll
test
sub
fwait
push
add
sub
adc
sgdtl
fs
jp
int3
or
push
clc
mov
les
pop
pushf
add
push
rorl
sbb
mov
cmp
ja
in
fstps
cmp
adc
mov
pushf
jecxz
jo
arpl
cmp
add
les
stos
adcb
adc
fs
push
nop
sbb
mov
and
lds
lret
pop
xor
cmp
adc
push
jbe
pusha
and
aas
scas
xor
sbb
cmpsb
loop
addb
inc
xor
sbb
push
in
sub
divl
mov
inc
cmpsl
fdivp
cmp
sbb
push
push
jo
cmc
andl
cli
sub
push
dec
sub
and
fldt
pushf
ja
filds
enter
mov
mov
lret
pop
stos
fdiv
dec
js
clc
fs
leave
fdivrs
fldcw
mov
pop
cmp
das
jae
add
fs
pop
ret
xchg
fs
out
icebp
sub
mov
js
inc
push
cltd
cmp
fwait
add
inc
mov
inc
inc
inc
sbb
hlt
pop
jecxz
mov
stc
lds
stos
xchg
jae
xchg
push
jbe
imul
scas
test
out
test
es
out
fildl
mov
stos
push
shrb
xor
or
je
cmc
pop
push
lahf
mov
cmpb
shlb
lcall
arpl
fwait
push
jge
pop
cmpsl
out
mov
add
movsl
fstl
push
xchg
into
add
pop
dec
inc
jae
jle
pop
mov
pop
and
hlt
dec
pop
mov
push
les
xchg
arpl
mov
sarb
mov
jecxz
sub
das
push
movb
fwait
ss
pusha
xor
std
inc
mov
fdivp
lret
imul
and
add
rcll
sahf
insb
pop
lret
or
mov
das
jl
lods
adc
mov
dec
popa
sub
add
sub
mov
scas
mov
out
cmc
sbb
stc
adc
mov
sbb
mov
negl
cmpxchg8b
enter
pushf
mov
mov
loope
stos
cmpsl
adc
mov
lcall
sbb
inc
push
xor
adcb
mov
jbe
arpl
in
push
push
lahf
outsl
outsb
rorb
fs
ret
ret
xchg
fs
lds
cltd
xor
addr16
mov
sahf
loope
mov
cmp
push
add
cmp
enter
mov
push
cmc
adc
lret
scas
xor
and
test
push
js
in
add
stos
sub
push
jge
sub
scas
test
cmp
sbb
fstpl
lock
and
xchg
pop
add
lahf
popf
jmp
jl
sub
push
jne
stos
daa
inc
pushf
stos
cmp
adc
inc
fisubrl
les
nop
and
add
jg
call
and
xchg
xor
orl
cwtl
sbbl
or
dec
sti
les
pop
push
leave
out
add
aaa
inc
sbb
fxch
inc
ljmp
enter
test
into
xchg
xor
jle
out
inc
add
push
fmulp
push
cmp
out
mov
arpl
mov
sub
mov
sti
jl
clc
imul
sbb
xor
xlat
inc
dec
mov
jb
cmc
inc
mov
daa
or
scas
and
sbb
ljmp
pop
mov
inc
fidivrs
jno
jne
adc
out
cs
dec
mov
lods
fwait
and
enter
sub
cmc
mov
je
daa
sbb
insb
ds
jae
or
lock
push
int3
fnstenv
or
sti
leave
shll
adc
test
or
ljmp
push
mov
and
loopne
das
enter
sub
jmp
add
xchg
add
addr16
pop
loop
bnd
sbb
jne
pop
test
test
and
sbb
into
push
mov
xor
jnp
or
sarb
pop
jb
xchg
rcrb
mov
lea
movsl
fwait
popa
push
imulb
es
sub
push
and
xor
add
push
inc
or
sub
pop
jg
push
adc
xor
int
loope
cmp
into
dec
testb
ficoms
xchg
test
mov
sbb
and
das
test
mov
sub
push
inc
mov
shlb
pop
cs
pop
cmpsb
dec
daa
out
repz
cmp
or
fcoms
ja
lret
in
lea
andl
call
pop
lods
jle
movsb
mov
add
and
cmp
out
or
add
je
push
or
cmp
inc
lea
out
xor
out
xchg
aad
sbb
ret
jb
xchg
mov
add
xorb
inc
xor
xchg
aad
xchg
xor
and
mov
xchg
or
jns
enter
lahf
xchg
mov
mov
inc
xchg
xchg
cmpsl
dec
jbe
mov
fcompl
pop
and
fnstenv
mov
sub
test
mov
ficomps
lds
test
addl
lods
cmp
push
inc
popa
mov
addl
sub
inc
push
sub
fldcw
mov
aas
cli
fcoml
jae
into
xor
lret
in
push
leave
sbbl
fiadds
shlb
adc
sahf
pop
lds
mov
and
das
cmpsb
lea
ficomps
cmc
and
jge
test
pop
iret
dec
or
or
cli
das
sub
pop
call
cld
cmpsb
std
jmp
jp
mov
cmpsb
mov
or
inc
xchg
hlt
in
push
jbe
inc
xor
mov
pop
xchg
xchg
clc
js
out
andb
or
repz
or
popf
push
push
aam
or
and
mov
aad
sbb
push
lods
pop
pop
jle
movl
mov
cltd
mov
mov
cmp
xchg
es
imul
hlt
and
lods
in
arpl
std
or
mov
push
sahf
sub
and
es
cmc
push
mov
mov
sbb
mov
nop
cltd
push
out
or
outsl
lahf
inc
push
jl
mov
scas
test
imul
push
sysret
arpl
add
leave
pop
mov
push
cmp
sub
cmp
aad
push
sbb
mov
jo
cmpsl
stos
cmp
mulb
xor
leave
xor
imul
sarl
in
inc
aaa
mov
shrl
jge
adc
cwtl
dec
out
jmp
pop
nop
inc
popf
add
dec
shlb
push
adc
insb
popa
pop
aad
adc
fadds
sub
loop
mov
fisttpl
jmp
mov
pop
add
jle
mov
in
sbb
mov
movl
cmp
stc
stos
jl
dec
fs
ss
call
dec
mov
jnp
dec
and
arpl
xchg
mov
xchg
cmp
mov
loop
mov
pop
sbb
idivb
loopne
lcall
fdivl
out
dec
pop
pop
aas
in
pop
push
in
xorl
loope
or
in
add
cmp
add
add
outsb
lea
sti
enter
in
imul
sub
stos
xor
aaa
sbb
repz
ss
cld
stos
popa
cmp
outsl
lahf
call
mov
xor
lods
add
inc
mov
mov
or
mov
jns
push
jl
rorb
mov
xor
or
insb
pop
popf
adc
xchg
stos
push
cmp
cmp
loope
mov
mov
jle
iret
or
pop
and
jo
stc
adc
mov
cmp
sahf
or
lahf
movsb
fnstcw
cmpsl
cmp
shll
sbb
hlt
pop
sti
out
arpl
mov
xchg
popf
add
cmc
fdivl
lods
cmp
push
sbb
cmp
pusha
test
fmuls
and
popa
xchg
les
aas
dec
push
adc
loop
mov
imul
int
arpl
xor
mov
lods
mov
mov
shr
sbb
mov
jae
inc
xor
je
inc
loop
in
push
sub
push
test
xchg
mov
push
fcomp
dec
cltd
xor
sub
loop
mov
or
cmp
or
cmp
push
gs
xchg
mov
pop
ja
aaa
dec
jnp
and
sbbl
lods
popf
lea
push
mov
int
repnz
sub
add
sub
fwait
sti
jnp
mov
push
mov
out
rcrb
fcompl
inc
inc
xchg
rcrb
push
aaa
enter
jg
cwtl
sbb
and
imul
iret
xor
jae
lock
mov
repnz
sbb
fldl
testl
lea
lods
xchg
dec
xor
pop
ficomps
sbb
repnz
or
add
mov
out
das
cli
xchg
cmpsb
inc
sbbl
inc
clc
dec
cmc
push
sti
ficompl
sbb
inc
cmp
adc
les
cmpb
scas
lods
mov
sbb
lods
loope
popf
inc
add
cmp
pop
add
sub
out
arpl
stos
cmpsb
push
xor
out
cmp
push
mov
mov
lret
dec
lea
dec
pop
mov
xor
fwait
cs
js
xor
xchg
xchg
popf
cmpsl
sahf
sub
outsl
mov
out
sub
push
mov
stos
arpl
ds
xchg
lock
mov
jge
hlt
dec
call
fistl
push
or
iret
popf
insb
das
xor
dec
or
mov
xchg
ss
inc
and
out
leave
pop
pop
add
fwait
ja
rcrl
jnp
jge
mov
in
mov
push
fstpt
xor
in
xchg
and
pop
add
lahf
arpl
ljmp
xor
test
jno
inc
pop
ja
mov
xchg
xchg
neg
mov
jecxz
jno
or
out
mov
ffree
out
aad
das
sub
push
cmpsl
sarb
cmp
push
cmp
ret
mov
rcr
movsb
outsb
xchg
and
mov
iret
jmp
push
push
inc
sbb
xchg
push
shll
dec
jecxz
outsb
jno
stos
lock
push
je
xchg
xor
lcall
aas
push
sbb
jg
mov
jmp
xchg
pop
adc
lods
pop
clc
mov
cld
data16
vpunpcklqdq
sub
jg
sub
xor
in
xlat
push
cmp
in
test
add
inc
negl
daa
loope
or
push
aaa
shlb
sub
lods
dec
and
mov
ja
fcoml
mov
dec
or
cmpsl
lock
cmp
sbb
xor
insl
pop
test
cmp
imul
xchg
jg
dec
inc
fidivrl
loope
std
xchg
andb
idiv
ljmp
fsubrs
sahf
dec
clc
pop
call
mov
sahf
scas
mov
dec
ja
add
movsl
out
lods
jne
fistpll
lods
push
mov
dec
adc
xor
ss
movsb
pop
inc
push
mov
pop
sub
lock
fnstcw
xor
enter
or
out
mov
push
jbe
sub
xor
iret
push
scas
mov
pushf
mov
sub
sahf
sbb
push
dec
jnp
mov
pop
aad
inc
popa
ljmp
or
outsb
cld
jo
repz
in
cli
xchg
mov
sahf
repnz
cmp
clc
mov
mov
add
pop
int
fcomp
dec
int3
repz
mov
enter
and
js
jbe
adc
mov
and
call
dec
inc
js
gs
and
stos
shll
or
dec
mov
leave
xchg
cmp
mov
cwtl
testb
or
and
clc
test
jo
inc
out
push
shlb
cmp
lds
in
daa
in
iret
and
add
or
pop
sub
mov
outsb
mov
or
ficomps
lret
or
push
cmc
cmp
mov
movsl
insl
push
mov
ja
mov
aad
and
fidivl
push
mov
cmc
inc
jmp
inc
adc
insb
lret
imul
lods
dec
inc
repz
aas
aas
sbb
mov
jge
cmpsl
xor
mov
cmp
aas
pop
jmp
imul
lods
jge
aas
fildll
mov
xchg
lods
icebp
xchg
push
cmpsb
test
ret
jae
adc
sbb
fsubl
and
ja
xchg
mov
xor
dec
movd
sbb
stc
sbb
sahf
lods
pop
sbb
mov
mov
int
dec
rclb
inc
pop
imul
test
pop
xchg
pop
repz
int
xor
adc
mov
or
xor
pushf
ror
insl
mov
lahf
test
add
add
and
xchg
cwtl
add
mov
imul
inc
inc
mov
movsb
into
xchg
outsl
mov
orb
inc
outsb
in
movsb
sub
cmpsb
mov
pushf
xchg
sbb
push
mov
add
and
rcrl
cmp
mov
sub
mov
rcrl
mov
xor
pushf
inc
jne
out
imul
xchg
dec
idivl
dec
scas
cmp
add
out
mov
cmpl
push
fstl
push
lea
insl
sbb
xchg
jns
test
sbb
call
shll
ficompl
mov
roll
ret
inc
mov
outsb
jmp
xor
jno
pop
inc
daa
sub
repnz
in
hlt
cltd
sbb
and
sub
inc
push
insb
insb
pop
inc
adc
sub
xchg
in
inc
fidivs
test
fldl
push
xor
cltd
jae
out
mov
cmp
stc
imul
dec
jbe
fwait
test
jno
pop
dec
push
xor
xor
mov
call
aas
les
mov
rorb
cld
mov
push
add
sub
fisttpl
jnp
fildl
lds
xor
ret
lret
popf
cmp
push
ja
lds
xchg
aam
adc
fnstsw
insl
mov
in
xor
or
mov
aam
jle
dec
sub
sbb
xor
cld
jno
mov
pop
pop
cli
and
adc
aam
jae
mov
xchg
addr16
mov
pop
pop
adc
push
aaa
aam
jae
cmp
outsb
leave
sub
xchg
ret
aaa
and
in
push
aam
mov
add
popf
jecxz
in
sbb
push
pop
dec
jnp
test
inc
mov
pusha
dec
jbe
imul
adc
fs
mov
dec
std
and
add
into
mov
ljmp
enter
gs
js
outsl
dec
or
popf
inc
je
aas
cmp
pusha
hlt
mov
push
outsb
dec
in
mov
inc
or
xlat
push
xchg
shll
xor
popf
jmp
and
mov
insl
jmp
or
adc
icebp
mov
sbb
aad
in
mov
imull
fdivrp
and
int3
xchg
lods
pushf
dec
je
dec
and
or
pop
xor
popa
jo
sub
cmp
cmp
fcmovnu
jecxz
push
pop
sahf
cmp
pop
test
inc
sub
and
pop
pop
ret
lahf
pusha
pop
movsb
xchg
xchg
jle
cwtl
jb
addl
xor
scas
lahf
loop
clc
inc
or
fstps
out
lret
daa
aas
jecxz
mov
outsb
mov
repnz
clc
fimull
aad
or
test
mov
pushf
and
lahf
pushf
movsb
inc
pop
push
push
lods
cmc
leave
and
pop
test
loopne
mov
rcrl
aam
jnp
jnp
lea
push
sbb
or
sub
repnz
popf
lahf
sahf
clc
mov
mov
out
lock
lods
jno
sbb
mov
mov
xor
push
insb
push
and
xlat
push
call
jge
ret
adc
sub
dec
mov
lret
adc
push
out
mov
aaa
jae
jg
jmp
aad
sbb
jmp
sbbl
mov
mov
gs
push
cmp
xchg
insb
lcall
sub
pop
cmp
jno,pt
xchg
jmp
xchg
mov
sub
adc
inc
xchg
es
test
lock
and
in
repnz
in
sbb
add
aad
dec
dec
or
lret
shrl
xchg
out
aad
or
es
mov
push
dec
mov
jo
xchg
mov
imul
cld
imulb
fs
movsb
stos
xchg
int
and
icebp
fcmovb
and
pop
loop
add
xchg
push
mov
ja
fstpt
sbb
lahf
mov
xor
and
fimuls
mov
push
dec
ror
and
icebp
test
pushf
inc
gs
xlat
imul
jl
cwtl
adc
out
adcl
pop
push
rclb
aas
jno
repnz
xor
ja
adc
movsl
ret
testb
mov
out
push
popa
xchg
inc
inc
int3
movzwl
repnz
repnz
lcall
fidivrl
lds
lret
push
ficoms
sti
jnp
mov
jae
mov
loopne
xor
push
scas
mov
insb
cmp
jno
rcll
sub
adc
test
nop
add
test
mov
dec
ja
add
and
cltd
inc
and
xorl
test
sti
insb
fucomp
out
sbb
lcall
scas
cltd
movsb
aam
aam
rcl
inc
jo
and
ja
mov
fs
and
test
cmp
jg
mov
xor
out
subl
dec
sub
out
mov
insl
cmp
negl
incl
ss
mov
and
mov
pop
pusha
push
push
mov
dec
cmp
pop
lea
jmp
aas
xor
in
mov
call
stc
insl
push
int
mov
mov
mov
sarb
insb
mov
scas
lret
es
jb
jmp
or
sahf
in
sbb
sub
pop
mov
mov
imul
jb
mov
dec
test
mov
nop
pop
fidivrs
dec
dec
lds
lock
loope
pop
call
loop
mov
testl
xchg
fimull
or
sbbl
mov
ficoml
mov
xchg
cmc
jg
dec
lahf
js
int
outsb
mov
hlt
sub
mov
imul
insl
out
xorb
mov
fisubs
xchg
pop
sub
push
xor
xchg
inc
ljmp
ljmp
stc
ret
movsl
out
add
inc
popa
sahf
adc
xchg
inc
std
out
enter
push
mov
jecxz
mov
sub
mov
or
push
out
adc
outsb
adc
int3
push
inc
call
adc
push
or
out
cltd
sbb
mov
xor
mov
dec
add
test
xor
lods
jecxz
rcll
sbb
pushf
mov
sti
mov
insl
push
push
fucomip
test
cmp
mov
cld
scas
ret
mov
lret
in
lods
lahf
mov
cmpsb
push
push
add
xchg
in
push
leave
xchg
jg
dec
jl
jecxz
dec
sub
shll
int
inc
es
cmp
dec
cmp
and
push
jno
dec
or
mov
lock
in
add
stos
adcl
inc
leave
cld
enter
bound
push
jns
xchg
and
icebp
mov
jbe
cwtl
or
mov
add
mov
mov
imul
jle
lahf
fwait
in
mov
xchg
lods
cltd
push
fnstenv
cmp
cmp
or
or
mov
jmp
xchg
push
movsb
fcoms
insl
cmp
call
dec
pop
jmp
push
push
dec
imul
xor
inc
pop
gs
mov
add
loope
push
dec
in
mov
inc
adc
lods
inc
mov
push
push
jecxz
sbb
inc
iret
rclb
and
mov
out
lret
adc
fisttpll
add
ljmp
xor
mov
cmpsb
loope
jl
out
push
loopne
outsb
stos
xchg
mov
xchg
push
sbbb
xchg
mov
mov
cld
sbb
je,pt
int3
insl
das
test
adc
std
xor
cwtl
mov
mov
out
ja
dec
rclb
jge
fmul
add
and
pop
shl
mov
sbb
and
pop
mov
out
sbb
and
and
into
ljmp
cltd
push
das
and
stos
or
mov
bound
roll
xchg
std
hlt
and
lcall
mov
dec
popf
pop
pop
mov
add
add
out
adcl
cmpsb
pop
nop
xcrypt-cbc
cmpsl
push
and
mov
cld
cli
fcmovne
or
cld
jge
sbb
mov
jmp
icebp
mov
mov
aam
push
mov
sub
movl
pop
stos
scas
and
adc
jecxz
lods
sub
lahf
mov
jne
dec
xor
test
sub
jno
xchg
scas
or
dec
outsb
xchg
pop
pop
or
push
out
rcll
xchg
test
add
pop
sub
cmp
push
jne
push
mov
add
neg
outsb
sahf
push
cltd
or
jg
cs
and
and
push
or
sub
sbb
mov
lahf
sbb
cmp
xor
test
scas
jmp
popa
or
jge
pop
repnz
add
cmp
cld
and
cmpsb
nop
in
sub
fimull
xchg
xlat
jge
call
data16
mov
pop
iret
pop
lock
sbb
lret
and
and
or
loop
fs
or
ja
sar
ret
outsl
out
loope
xchg
imul
mov
dec
nop
leave
ror
std
fisubrs
int
enter
or
in
jp
out
loope
add
imul
std
int3
sarb
mov
js
dec
push
xchg
lods
cld
loope
lods
mov
outsl
xchg
or
inc
cld
jl
xchg
shll
stos
xchg
fsubs
inc
adc
mov
mulb
sti
mov
pop
sarl
das
fadds
or
dec
or
in
fdivs
xchg
ret
inc
stc
push
jmp
outsb
xchg
mov
xchg
lea
std
jle
test
rolb
pop
inc
imul
push
rsqrtps
sbb
inc
cmp
mov
loop
fildll
insl
push
sti
subl
rcrb
sbb
mov
mov
inc
loopne
or
cmp
mov
cmp
stos
cwtl
dec
push
loopne
inc
mov
pop
in
dec
push
pop
jge
loopne
arpl
addb
bound
rcr
and
cmp
jecxz
push
outsb
cmp
xchg
push
dec
cmp
scas
popa
mov
enter
das
push
cmp
push
xor
out
fnstsw
dec
rolb
push
xchg
addb
int3
push
aaa
aaa
adc
adc
mov
ds
dec
xor
sub
jp
and
push
cmp
andb
push
or
xchg
pop
cmp
inc
cmc
icebp
adc
mov
mov
push
into
xchg
stos
imul
mov
sub
jle
xor
mov
test
add
aad
xchg
incl
insb
sar
pop
sbb
repnz
or
ljmp
mov
dec
je
enter
xor
mov
pushf
cld
add
or
adc
sahf
mov
inc
xor
scas
mov
sub
sbb
out
mov
clc
mov
inc
mov
mov
lret
fidivl
push
in
inc
fists
mov
mov
pushf
daa
cs
mov
push
bound
mov
sbb
daa
stc
pusha
clc
rclb
push
xor
inc
fdivr
or
outsb
cltd
fidivs
push
fildll
and
jae
test
insb
pop
or
subl
add
push
leave
negb
xchg
sarb
cmp
cmp
sub
call
lret
std
push
cs
or
fcoml
push
dec
fsub
xchg
xchg
lret
das
scas
dec
fldt
mov
xchg
cmc
fidivl
mov
inc
sbb
jne
xor
iret
xor
rorl
push
or
addr16
mov
loop
xchg
imul
incb
pop
repnz
sbb
out
movsb
gs
add
shr
sbb
push
jmp
push
sub
or
pop
or
sbb
imulb
lahf
insl
jge
mov
pop
jecxz
xor
xchg
call
sbb
popa
jge
jge
insl
jge
mov
in
sbb
mov
xlat
loop
enter
sbb
mov
dec
test
or
das
push
test
insb
and
mov
push
lock
mov
dec
fcmovnu
or
out
inc
pop
push
add
movsb
jnp
mov
fmuls
sbb
jmp
sahf
mov
adc
arpl
push
insw
or
dec
mov
xchg
pop
or
dec
sarl
jl
jmp
dec
and
outsb
and
les
pop
inc
pop
addb
je
subb
fmul
fistps
roll
pusha
fdivrs
popa
ja
push
cs
inc
xchg
pop
add
mov
inc
pop
jecxz
mov
cwtl
cmc
stos
adc
pop
mov
cld
ret
inc
sbb
jge
jne
movsl
or
xor
jg
rcr
pop
sarb
shrb
mov
rolb
lds
test
roll
shrb
in
scas
inc
push
inc
pop
gs
dec
je
stc
pop
imul
xor
lods
fmuls
lds
xchg
ljmp
or
sub
arpl
mov
sarl
les
mov
push
xor
mov
and
adc
dec
push
fistpl
add
sbb
fcoms
or
add
sub
lret
push
jo
pop
arpl
add
mov
xor
iret
or
mov
mov
push
daa
jae
xchg
or
test
outsl
loope
adc
pop
dec
pusha
sub
jo
or
xchg
add
mov
andb
mov
repz
mov
arpl
icebp
lret
test
mov
sub
ret
cmp
jp
jg
in
jp
insb
sbb
cmp
cmpsl
ss
imul
mov
popf
aad
out
out
jmp
jg
scas
cmp
ret
xor
push
pushf
mov
mov
jno
mov
filds
push
mov
mov
xchg
out
iret
fcom
int
push
repz
inc
ret
rcrb
xchg
shl
adc
push
push
jge
and
jnp
mov
pop
iret
fs
sti
outsb
cmp
jle
clc
dec
sbb
stos
jle
sub
sub
pop
push
pusha
lock
push
sbb
loop
lds
in
or
jno
fsub
mov
stos
mov
inc
fmuls
cld
addr16
and
xor
in
cmpsl
pop
inc
imul
test
jg
mov
cmp
add
in
test
outsb
das
in
xor
dec
and
cmpsl
lret
clc
and
sti
xchg
insl
hlt
mov
lahf
fisubl
mov
push
rclb
mov
mov
xor
push
cltd
adcb
hlt
mov
xchg
mov
into
cmpsl
mov
loopne
clc
xor
xchg
pop
mov
xor
xchg
hlt
dec
insb
loop
cmpsb
add
imul
scas
mov
in
pop
ret
sarb
sbbb
mov
fs
sbb
leave
mov
mov
adc
add
jecxz
scas
ret
push
sahf
out
jg
pop
fcoml
fs
xor
mov
sub
ror
imul
movsl
scas
outsl
ljmp
lret
into
or
testl
mov
fucomp
ret
sub
test
xor
sbb
inc
and
pop
mov
orb
push
mov
stos
int3
jno
lret
mov
ljmp
rcr
bound
aad
push
inc
cmpsb
cmp
add
fadd
hlt
mov
mov
cmovl
insb
rolb
cld
mov
jge
cmp
adc
aam
dec
jmp
into
push
jno
mov
dec
push
mov
pop
xor
pop
int3
into
and
sub
and
adc
clc
inc
js
and
mov
push
jl
les
push
les
adc
xor
repnz
push
idivb
xor
psllw
and
addr16
jge
test
cmp
call
iret
push
das
sub
lock
push
js
adc
xor
pop
insb
int3
sub
sbb
inc
dec
outsb
mov
les
sbb
mov
std
arpl
jo
int3
enter
inc
cmp
fistps
lea
iret
cmp
leave
pop
dec
inc
movsb
out
scas
xor
jns
andb
dec
loopne
sub
sbb
add
js
lcall
sub
fstl
adc
ljmp
clc
outsb
cmc
add
sub
js
fcmove
mov
mov
aaa
pop
xchg
out
adc
sbb
shll
cltd
arpl
jle
lahf
lock
sti
jno
dec
jg
lds
inc
push
xchg
outsl
iret
cmpsb
mov
jno
push
and
lret
sti
fs
pop
lds
cld
shld
add
xor
mov
add
cmp
shrl
cwtl
xor
enter
dec
outsb
xchg
dec
lret
push
xor
arpl
pop
adc
call
mov
js
jne
pushf
cltd
fiadds
cltd
jmp
jp
xchg
rorl
outsb
mov
lcall
jge
fs
insb
and
test
mov
xchg
adc
fs
ss
mov
sub
jmp
push
or
es
icebp
into
in
packuswb
fmulp
lret
fs
dec
lods
dec
mov
ss
push
fcomi
push
dec
popa
repz
out
insb
rorl
sti
mov
sub
pusha
mov
fs
shll
push
mov
les
add
nop
movsl
in
in
out
and
mov
add
gs
lds
push
fcmove
lahf
mov
pop
daa
mov
jg
daa
mov
xchg
into
xchg
lods
jle
push
mov
pop
lahf
jecxz
sub
cltd
jl
in
xor
pop
ja
aas
in
or
fcmovb
and
popf
int3
ret
test
cmc
cmp
cs
leave
xchg
push
outsl
out
cmp
les
push
adc
inc
jne
and
imul
push
push
mov
dec
jg
mov
pop
rorl
mov
or
lret
das
cmpb
lcall
lods
outsl
mov
aas
cwtl
insb
int
mov
dec
into
or
inc
push
xor
fisubs
outsb
test
hlt
les
xor
nop
push
push
adc
push
mov
fcompl
push
cmpxchg
in
pop
das
cmp
lahf
cmp
sbb
sub
mov
push
push
jge
test
jb
lds
enter
clc
push
repnz
loopne
fwait
jae
jnp
mov
ss
pusha
push
daa
push
or
sbb
out
gs
mov
push
mov
loop
xchg
repz
mov
push
adc
adc
bound
ret
clc
jns
and
xor
push
mov
adc
xor
and
adc
loopne
xor
lahf
stc
and
insl
and
xor
cmc
lods
add
scas
inc
testl
cmc
cmpsl
add
jae
mov
sbb
mov
adc
fnstcw
scas
xchg
sbb
sbb
mov
mov
jmp
cmpsb
int3
sbb
shl
xchg
add
jge
mov
mov
adc
push
fs
dec
sub
test
ret
cmp
jne
lcall
pusha
lds
movsb
and
jb
add
or
mov
cmp
addr16
xchg
iret
inc
int
pusha
xlat
push
sub
pop
call
jnp
out
lret
ret
fnstcw
ljmp
add
lods
mov
lock
cmp
adc
loopne
ret
mov
fidivrs
and
sub
dec
inc
sbb
xchg
test
xchg
xchg
mov
movsb
mov
jb
sub
jno
int
nop
and
jle
jne
std
mov
cmp
or
dec
pop
pop
test
sbb
push
aam
cld
and
lea
adc
push
in
arpl
jl
mov
les
cltd
jae
test
inc
xchg
adc
scas
and
call
je
cmpsb
nop
test
xchg
mov
cmpsb
jmp
xor
lock
out
inc
leave
push
imul
and
mov
inc
pop
push
cmc
add
out
repz
xchg
aad
pop
js
push
jbe
lcall
bound
dec
fmul
inc
loope
pop
cli
xor
xor
movsl
in
mov
xlat
ret
mov
cmp
cltd
inc
fstpl
mov
shlb
insb
fnsave
popa
inc
push
xor
push
xor
jnp
leave
aas
jp
sub
pop
leave
int
mov
xchg
add
int
push
jbe
cltd
push
adc
push
sbb
mov
cmp
leave
mov
js
in
call
mov
push
sub
leave
push
sub
mov
mov
adc
mov
leave
mov
inc
rcrb
jno
rcr
push
and
xchg
jb
cmc
jl,pn
sahf
pushf
mov
jmp
mov
rol
sub
mov
shl
cli
repz
mov
xchg
mov
dec
mov
call
push
pop
jecxz
pop
bound
sbb
dec
jne
pop
inc
ja
and
shrl
dec
jl
fisubs
outsl
sbb
das
adc
or
xchg
push
stos
and
cwtl
repnz
icebp
ljmp
je
cmp
dec
pop
fildll
gs
inc
aaa
pusha
je
bound
inc
cli
int
incl
sbb
mov
adc
in
lret
xchg
shll
xchg
and
mov
les
cmp
pop
inc
sub
dec
insb
loope
mov
sbb
add
dec
cmp
inc
adcb
and
addr16
into
cld
leave
adc
jo
cwtl
xchg
pop
lret
scas
add
stos
xor
inc
mov
pushf
mov
sbb
addr16
cmp
mov
mov
ret
cmp
and
add
out
push
inc
cmpb
pop
ficomps
sbb
xor
mov
jmp
adc
xchg
in
or
xchg
add
fmul
repnz
aad
test
cs
sbb
jecxz
jne
cmp
je
in
cmp
fstp
cli
lods
or
adc
imul
and
cwtl
mov
xor
and
mov
add
in
and
adc
out
push
stc
add
lret
stc
idivb
mov
mov
loope
cwtl
mov
sbb
test
clc
fisttps
shlb
jnp
jnp
add
das
mov
xchg
jge
popl
pop
xchg
push
insb
and
sbb
adc
xor
sbb
pop
adc
iret
and
mov
push
pop
add
stos
and
push
dec
sbb
push
int3
popf
ja
pop
xor
ret
out
aam
stos
pop
mov
and
inc
jp
sub
test
je
pop
pop
inc
aam
je
pusha
jmp
fwait
sub
or
or
loopne
pop
fists
mov
dec
ficoms
dec
jo
cmpb
push
fcompl
pusha
lcall
sub
lret
xor
or
in
cmp
test
xor
adc
adc
fs
pop
rclb
fidivs
push
mov
cli
pop
aam
mov
cltd
bswap
ja
imul
inc
out
iret
cld
mov
cwtl
sbb
pop
outsl
add
inc
mov
ds
sub
js
mov
cwtl
imul
cmpsl
imul
insb
mov
fldenv
jne
jae
popf
pop
lods
jne
pop
mulb
ja
hlt
notb
test
movsl
mov
outsb
xchg
dec
movb
dec
push
js
cmp
mov
scas
iret
xor
repz
lahf
sub
xor
xchg
sti
mov
inc
mov
inc
push
pop
sub
xchg
mov
pop
mov
pop
mov
mov
or
push
movsl
and
xchg
pop
bound
pop
push
push
lret
mov
cltd
pop
sub
mov
cmpsl
loope
xchg
sbb
mov
push
rorb
lods
or
inc
out
inc
xor
push
jnp
xchg
ret
je
test
mov
loope
adc
imul
push
mov
mov
in
xchg
daa
daa
jp
jnp
mov
lahf
xor
push
fwait
mov
push
int
sbb
jp
mov
mov
cmp
jbe
cli
sub
jne
test
pop
dec
mov
mov
fbld
cmp
pop
shll
cmpb
adc
xchg
out
lea
mov
negl
imul
add
sub
cmc
out
push
movsl
or
sahf
mov
jmp
add
mov
pop
imul
cmp
les
adc
or
stos
jp
mov
mov
cmp
sbbb
arpl
dec
cltd
loop
negb
divl
or
xor
gs
lock
push
lds
je
xor
pop
gs
xlat
cltd
mov
loope
outsl
lahf
pop
or
jnp
xor
sti
loopne
dec
push
shlb
jp
fdiv
jge
cmp
repz
xchg
movsl
rcrl
fs
aas
movsl
xor
inc
mov
inc
push
loope
dec
or
or
jae
lcall
inc
cmpsl
sub
sbb
mov
lret
sub
scas
sahf
cmp
ljmp
movsl
jo
mov
jne
jae
and
xor
movsl
clc
cmp
outsb
sub
not
push
inc
out
and
mov
mov
cmp
push
int
loopne
cmp
cli
neg
and
mov
pop
pop
gs
in
dec
mov
jle
jno
xor
rcll
out
lea
jno
in
push
outsb
ds
sti
inc
stos
adc
pop
ds
mov
sub
add
and
pop
shrb
push
cmp
xchg
test
fdecstp
mov
aaa
cld
mov
mov
iret
pop
cwtl
pop
enter
fcmove
pushf
movsl
xchg
sub
fucomp
lahf
jns
loope
ret
mov
ret
sbbl
mov
jl
xchg
pop
pop
cmp
pop
data16
hlt
not
sub
push
and
jns
pop
aam
shl
or
xchg
movsl
popf
movsb
pop
ss
stos
pop
dec
fsubrl
mulb
pop
pop
pop
aad
dec
dec
xor
test
gs
pop
or
and
jge
sbb
insb
or
jbe
js
pop
out
push
in
imul
lahf
mov
cmp
adc
hlt
int
scas
shlb
vmaxpd
rclb
cltd
rorl
idiv
sarb
push
push
xor
push
mov
mov
lock
jmp
mov
cmp
jl
mov
ficompl
and
xchg
mov
dec
ss
jle
add
xor
icebp
pop
pop
sub
hlt
imul
insl
pop
arpl
std
fcomp
inc
xor
movsl
aaa
jle
push
mov
aam
mov
test
and
xchg
in
icebp
movsl
inc
rcrb
aas
and
sbb
xchg
out
and
inc
pushf
bound
sarl
lret
leave
mov
movsl
lock
push
xchg
subl
cli
inc
dec
jnp
incl
std
ljmp
pop
fimuls
xchg
aam
fwait
push
test
xor
xor
test
fsubrl
xchg
leave
shll
mov
out
lea
jbe
or
jle
add
rorl
pop
repz
fwait
push
pushf
mov
jg
bound
mov
and
xchg
pop
outsl
and
cmp
pop
loope
or
jle
sub
jl
mov
adcl
fisttpl
lock
dec
mov
mov
add
rorl
into
mov
dec
sub
xor
lret
xchg
push
xor
mov
sub
icebp
frstor
mov
jl
rorb
cmp
sarb
push
lods
or
mov
jo
in
xchg
inc
pop
mov
push
sub
mov
pop
add
add
imul
xchg
inc
adc
push
ficoms
jecxz
push
ja
arpl
push
das
cmp
fiaddl
mov
lret
xchg
leave
mov
push
sub
cmc
iret
adc
bound
fildl
cmp
shlb
leave
cmc
add
adc
push
inc
mov
cmp
sbb
loop
xchg
xor
sub
or
adc
lock
cmp
je
dec
push
sbb
ds
lock
push
sub
mov
jmp
aad
out
xchg
xor
andl
movsl
jae
xchg
and
cmc
and
jmp
mov
loop
xor
aad
jmp
and
add
imul
out
ss
sub
clc
mov
std
scas
test
call
daa
cltd
std
jle
push
push
sahf
int
sbb
xchg
jns
inc
les
cmpb
push
in
out
aam
repz
stos
ret
popa
in
scas
cmp
mov
add
pusha
hlt
inc
xor
mov
adc
scas
int
lock
pop
jge
lods
test
inc
popa
dec
push
jns
push
outsb
incb
xchg
xchg
adc
jno
adc
leave
cmc
add
and
lods
xlat
sub
in
push
repz
or
dec
jl
cmpsl
rolb
cmp
xchg
les
adc
jbe
add
es
lods
mov
dec
jl
repnz
cmc
adc
ljmp
lret
fisubl
aas
insl
inc
sti
push
rcrl
fimull
sbb
adc
loop
dec
cmp
jmp
dec
xor
xchg
xlat
xchg
sbb
adc
xchg
shlb
mov
inc
adc
andb
sub
in
insb
jl
mov
shrb
or
inc
mov
rolb
adcl
arpl
or
mov
test
test
pusha
sbb
pop
loope
or
fstpl
dec
xor
pushf
cmp
xor
adc
xchg
mov
sbbb
jo
jns
jl
test
and
out
add
xchg
es
aaa
cmp
mov
mov
dec
and
cmpsb
jmp
cmp
mov
test
dec
addr16
and
push
cmp
sub
adc
aas
inc
aas
pop
fsubr
outsl
ss
or
inc
add
outsl
cltd
mov
loopne
mov
mov
adc
sub
sub
adc
lds
imul
cmpsl
or
fldt
pop
mov
fcom
out
mov
js
cmp
in
add
add
add
call
mov
jp
and
loopne
sbb
jmp
jns
adc
sub
cltd
js
gs
push
sti
scas
xor
inc
aas
jns
and
jmp
outsb
sbb
clc
fimuls
popf
jecxz
fdivrp
cmc
rcrl
int
fstl
inc
repz
push
cmp
mov
cmp
adc
dec
xchg
and
jmp
lods
mov
ljmp
icebp
add
dec
in
loope
cmp
push
xchg
jae
mov
stos
push
dec
pop
jecxz
paddd
fsubr
jle
add
movsl
rcll
add
pop
or
dec
or
ficoml
inc
xorb
jo
popa
imull
jno
push
sbb
cmp
fimuls
xor
ficompl
jnp
mov
subb
add
cltd
ss
adc
into
mov
pop
out
sub
fnstsw
xlat
addl
dec
mov
lds
aad
cs
mov
fiaddl
inc
xchg
and
mov
inc
in
dec
ror
inc
sub
mov
mov
sbb
stos
lcall
adc
sbb
push
incl
daa
shlb
jge
add
cwtl
outsl
adc
and
and
mov
cltd
adc
push
or
add
cld
shr
fldt
adc
movsl
mov
mov
or
mov
shrl
pop
push
dec
jns
std
sbb
mov
cmp
xchg
fnsave
xchg
adc
jmp
es
sbb
loopne
scas
xor
lods
int3
cmpsb
inc
xor
xor
xor
xlat
imul
gs
cmp
fcmovb
movsb
mov
push
lds
inc
ss
outsb
sahf
sub
add
sti
sahf
pop
mov
stos
and
add
add
or
cmp
adc
lret
mov
sub
xchg
ficoml
je
daa
xchg
fsubl
push
dec
cmp
dec
mov
dec
add
dec
in
xchg
xchg
roll
scas
mov
xor
dec
push
xchg
mov
adc
or
rorb
out
sahf
pop
mov
add
insb
sti
je
or
sbb
pop
xchg
push
push
xor
jae
mov
je
and
call
cli
out
jg
ss
and
push
dec
out
scas
push
inc
adc
pop
jecxz
push
jno
jnp
pop
jecxz
xchg
rorl
pop
insb
aam
sub
add
xor
fwait
pop
test
fmull
and
add
je
xchg
fstps
arpl
roll
inc
pop
mov
ljmp
pop
movq
mov
or
pusha
xchg
sahf
cmp
cmc
sti
jne
leave
adc
jge
add
dec
xchg
push
mov
add
lahf
adc
cmpsb
sbbl
push
shl
leave
add
mov
dec
add
jbe
out
mov
pop
adc
and
or
orb
hlt
test
mov
lret
xlat
adcl
aad
test
pop
cmp
cmp
jg
xor
push
fsts
xor
adc
adcl
cmp
popf
test
push
int3
jl
sbb
mov
push
mov
int3
adc
sbb
or
sbb
dec
cmc
insl
test
jnp
jo
in
mov
pop
loopne
mov
call
aaa
call
mov
lock
insb
and
fisubrs
cmp
aad
adc
jl
sbb
and
lock
loope
imul
mov
repz
and
in
inc
fimuls
in
loopne
sub
sub
xor
sub
jne
dec
sub
pop
lock
xor
popf
call
mov
cld
sbb
stos
decl
pop
test
mov
push
or
mov
push
jmp
jb
cwtl
jle
pop
mov
call
mov
push
pushf
push
xor
aaa
or
jnp
jecxz
daa
jmp
push
xchg
int
push
jns
imul
mov
push
js
jmp
popa
cli
jp
mov
push
mov
mov
gs
int
repz
test
ljmp
mov
jb
enter
xorl
jp
cmpsl
mov
mov
xchg
cmp
sub
or
dec
rcll
dec
jno
das
test
addr16
fisttpll
pop
imul
loope
test
cwtl
fdiv
out
adc
pop
lds
xchg
imul
jae
jecxz
sahf
aam
jne
pop
sub
xchg
movb
sbb
pop
ret
add
hlt
das
call
loop
jno
xchg
add
in
push
les
mov
sub
rep
cmp
cmp
les
rcrb
and
es
sub
mov
mov
cmpsl
cmp
mov
nop
or
pop
and
add
sub
jb
pop
insb
mov
mov
scas
mov
push
cld
mov
sub
mov
notb
xchg
jns
repnz
push
mov
ret
add
imul
sub
sbb
pop
iret
inc
dec
fwait
and
cmp
test
cmp
iret
repz
outsb
jmp
outsl
out
lds
scas
pushf
pop
push
mov
imul
mov
pusha
insl
push
sub
push
mov
sahf
mov
mov
mov
xor
addr16
jns
andl
scas
test
in
or
aam
lahf
push
xor
shr
and
fsubrs
adc
xlat
dec
ret
mov
pop
ja
xor
out
pushf
inc
insb
negb
xlat
shl
enter
arpl
sbb
pushf
rorb
out
mov
adc
fs
mov
sti
add
jns
insb
or
std
jg
inc
das
or
es
clc
jp
or
xor
xchg
pop
or
push
repnz
adc
inc
sub
or
inc
popf
mov
pushf
stos
loope
notb
cmp
sub
cmp
mov
lret
lret
daa
cmpsb
pop
mov
flds
sbb
push
lcall
add
dec
or
push
imul
mov
cmc
jns
xchg
clc
inc
hlt
cmp
push
mov
jae
inc
aaa
cmp
sahf
loope
push
xchg
pop
pop
and
xlat
cmpsl
xor
mov
enter
pop
addr16
mov
cmpsl
sti
xchg
andb
insb
scas
or
dec
dec
pop
std
imul
jnp
sub
je
aad
and
xchg
cmp
jbe
call
mov
mov
mov
loope
ret
jns
sbb
jl
popf
vmovaps
push
and
or
stc
les
sbb
mov
and
mov
ss
jle
push
pop
pop
addb
leave
imul
pop
xchg
sahf
and
adc
ja
mov
push
shll
arpl
jmp
push
or
cld
movsl
jne
shl
fstpt
popl
in
dec
nop
inc
pop
and
mov
inc
inc
xor
aam
lods
daa
push
inc
shl
outsb
jnp
push
ljmp
mov
push
jp
sbb
xorl
fstl
not
push
jmp
dec
pop
xor
dec
cmpsb
xchg
cli
mov
ss
stos
loope
jnp
in
repz
gs
lret
push
mov
popf
lret
shrb
sub
xchg
addr16
cmpsb
stc
aam
cli
aaa
push
pop
fisubl
jecxz
cmpsl
ficompl
dec
lock
adc
cli
orb
and
stos
or
adc
lds
and
xchg
pop
cmc
adc
imul
jbe
and
outsb
add
lock
sbb
adc
loope
shl
nop
jle
insb
push
ljmp
and
sbbb
mov
add
arpl
adc
lock
jno
xor
inc
lahf
bound
lret
lock
inc
bound
sarl
popa
jle
sbb
je
pop
jmp
mov
ret
sarb
and
aas
pop
sbb
pop
dec
cli
jecxz
bound
sbb
in
lock
enter
mov
xchg
imul
cmpsb
iret
push
xchg
or
dec
iret
jnp
std
nop
outsb
jecxz
add
sbb
out
mov
testb
inc
imul
rcll
sti
inc
loop
push
lods
cmpb
mov
stos
xchg
inc
cmc
lcall
cli
fsubrl
push
push
inc
in
loop
std
jne
fs
adc
push
test
test
nop
lret
add
inc
pop
in
adc
incl
mov
shll
dec
scas
shrb
iret
pop
mov
js
arpl
ja
inc
or
orl
stos
or
and
and
cmpsb
repz
add
cltd
imul
int3
es
dec
shrb
inc
les
aas
inc
pop
fimuls
enter
xor
fisubrs
push
or
imul
lods
enter
into
sahf
xlat
mov
xlat
adc
and
iret
leave
push
sub
xchg
pop
cmc
movsl
mov
mov
cmpsl
iret
mov
ss
in
jb
sahf
jb
sbb
iret
stos
repz
pusha
mov
insb
bound
adc
outsl
jb
mov
test
stos
xor
pop
andl
jo
mov
rorb
fildll
mov
cld
jg
fiadds
mov
into
sub
js
dec
test
sbb
pop
xor
loopne
inc
inc
in
leave
stos
int
push
loope
out
idiv
mov
jl
mov
out
sbb
es
aaa
int3
jmp
push
and
inc
movsl
add
fimull
jns
pop
jns
orl
adc
dec
jp
aas
lcall
enter
xorb
insb
xor
rcl
or
xchg
adc
sub
pop
push
push
pop
jle
push
in
mov
inc
pop
mov
mov
test
lret
imul
xchg
cltd
inc
repz
sbb
orl
add
pop
sub
sbb
jae
cli
repz
mov
mov
jo
fisubrl
test
mov
adc
ret
fildl
in
mov
aaa
adc
fistpl
int3
mov
test
push
or
mov
nop
cmp
lret
inc
mov
dec
add
xor
ja
outsb
mov
fwait
subl
add
hlt
pop
push
mov
pop
and
adc
mov
fisubs
sbb
nop
outsl
xor
outsb
mov
jae
jnp
insb
add
out
add
pop
mov
jbe
out
xorl
add
mov
adc
fldt
mov
push
pop
xchg
mov
repnz
stc
pop
lahf
cs
xchg
add
jno
out
cmpsb
jae
ja
push
cltd
gs
pop
lods
adc
mov
mov
xor
inc
adc
call
sbb
mov
jnp
lahf
or
jns
add
pop
mov
pop
jp
aas
adc
jge
xor
push
jbe
xlat
stos
pop
ja
add
and
loop,pn
scas
ds
into
xchg
cmp
inc
sti
pop
cs
lahf
shl
xor
xchg
imul
xor
xchg
mov
mov
inc
addb
cmp
mov
xchg
add
or
mov
adc
repnz
pop
ja
mov
test
in
leave
xlat
fldenv
mov
in
mov
mov
mov
aaa
mov
fists
or
mov
and
subb
call
je
jg
das
adc
out
imulb
fs
in
mov
xchg
lret
sti
imul
imul
push
dec
sub
movntq
mov
xchg
lahf
sbb
mov
push
test
jbe
xor
mov
outsl
addl
adc
jnp
aaa
je
cmpsb
mov
cmp
aad
cwtl
pop
sub
loop
dec
call
push
xor
addr16
ds
pop
mov
lock
ss
adc
jb
add
ffreep
jae
push
pop
test
lahf
mov
aam
fcmovne
cmp
popa
mov
idivl
jl
cltd
cli
pop
addl
mov
shrb
jp
mov
pop
cmp
movsl
sti
mov
andb
roll
pop
dec
pop
std
cmpsl
daa
cmp
pop
les
mov
mov
out
adc
fadd
repz
cmpxchg
ss
stc
or
cmp
pop
sbb
loope
and
xor
push
jae
sahf
cmp
arpl
xor
lock
shr
xchg
and
cld
jge
dec
or
cmp
xchg
in
xor
movsl
dec
xor
out
lods
ret
fisubrl
pusha
mov
pop
xor
fcmovne
adc
fistpl
cmp
jmp
sbb
cmp
sub
repnz
pop
andb
sub
inc
mov
rcr
push
jno
add
mov
and
in
aad
frstor
sbb
inc
gs
sbb
mov
pop
cmc
and
sub
outsl
jno
push
jae
aam
or
mov
jle
mov
jbe
pop
mov
fbld
aam
cmpsb
sub
hlt
mov
rol
movsl
arpl
imul
jo
xchg
mov
adc
ret
insl
xchg
movsb
aad
mov
aaa
cwtl
divb
jne
jnp
mov
rcr
inc
dec
ja
clc
cmc
repnz
pop
push
mov
and
mov
mov
out
mov
in
pop
das
pop
dec
mov
loopne
cmp
pop
enter
rorl
push
sbb
inc
cwtl
lea
stos
fisubs
push
test
push
subb
imul
mov
cmp
push
cmp
popa
or
mov
push
ret
lea
ljmp
add
mov
pop
pop
popf
dec
cli
jp
mov
in
xorb
cli
push
xlat
cmp
xor
sbb
jge
push
lods
rcrl
or
js
adc
adc
inc
jae
out
xorb
jecxz
pusha
in
push
mov
or
adcl
and
les
jae
dec
cmp
int
bound
xor
mov
push
sub
push
fs
pop
insl
cwtl
icebp
in
adc
adc
aam
iret
fs
fwait
aaa
out
insl
jno
jge
dec
clc
mov
jge
mov
ret
cs
sbb
fwait
mov
mov
inc
cmp
fwait
loop
pop
push
test
das
cmp
into
mov
sbb
xchg
data16
pop
jp
mov
pop
and
fcoms
inc
lahf
iret
pop
jns
mov
xchg
insl
mov
cs
cmp
dec
rcr
xchg
adc
push
add
pop
sub
inc
jg
add
fists
enter
sub
int
dec
mov
fldenv
push
loop
mov
test
xchg
in
mov
cmp
das
insl
mov
stos
cmp
fbld
out
popa
rol
jns
jbe
popa
imul
in
icebp
jmp
repnz
popa
fisttps
inc
sbb
fld
or
test
cwtl
add
mov
je
sbb
jne
mov
sbb
jp
xchg
dec
mov
aad
std
cltd
fidivl
sub
push
icebp
hlt
mov
jnp
mov
push
sahf
adc
lret
mov
xchg
cmp
sub
mov
jp
add
mov
repnz
aad
inc
mov
jmp
loopne
bnd
xlat
xor
cld
jl
mov
mov
test
jb
imul
pop
cmp
fmull
push
lret
aas
dec
mov
lcall
loopnew
adc
add
pop
lods
arpl
sub
clc
dec
pxor
push
jbe
rorb
jnp
clc
jnp
add
mov
cli
sbb
adc
jg
and
mov
cmp
dec
movsl
jecxz
push
push
pop
sbb
loop
icebp
in
iret
lea
pop
lods
clc
inc
js
ja
jle
push
test
stos
mov
xor
or
push
jmp
pop
pop
addr16
mov
dec
lods
sahf
and
dec
lret
ljmp
pop
arpl
dec
rcr
fdivrs
xor
mov
dec
loop
icebp
add
xchg
inc
xor
incb
bnd
push
lcall
mov
subb
jecxz
sbb
jb
jmp
push
ret
lods
loope
sbb
subb
jge
jmp
sub
xchg
je
add
outsl
mov
cmp
scas
imul
pop
jecxz
cmp
lret
clc
loopne
xor
xor
and
nop
enter
fcompl
shrb
add
push
push
adc
out
inc
pushf
xlat
xor
sahf
test
jle
mov
and
and
lods
aam
int
test
or
mov
push
cld
mov
pop
mull
fs
xor
call
lods
inc
orb
mov
lods
arpl
adc
bound
test
cmp
mov
push
daa
or
dec
xor
xor
lret
pop
sarl
mov
mov
test
ficoms
movhps
mov
ja
rorb
push
nop
or
pop
and
lds
aas
mov
lods
jnp
enter
jne
sub
mov
insb
test
jo
test
pop
nop
and
inc
test
pusha
pop
daa
dec
fmull
lcall
bound
jbe
cmp
sbb
adc
arpl
inc
mov
mov
les
clc
sarl
or
push
or
mov
cmpsl
hlt
call
shrb
test
pop
cld
xchg
ds
dec
or
out
xor
notl
nop
out
test
sti
cwtl
xchg
sbb
rcrb
xor
clc
dec
andb
mov
es
sub
mov
rcll
xchg
lea
sub
bsr
fadds
cmpl
pop
outsl
ljmp
push
jo
jns
out
inc
cld
lret
fs
out
cmp
jmp
std
leave
and
mov
mov
xor
faddl
je
or
lahf
out
popa
cs
pop
or
cltd
sub
mov
push
xchg
or
mov
pop
js
adc
sub
mov
adc
mov
jg
jne
into
sub
int3
callw
out
push
faddp
xchg
jo
pop
loope
int
aam
rep
fcomps
ret
sub
insl
int
jecxz
shl
testb
mov
dec
push
jno
rcrb
aam
or
jo,pn
scas
aas
ret
imul
ljmp
or
dec
mov
add
daa
rcrl
into
adc
mov
mov
lret
mov
inc
jbe
stc
jecxz
cmpxchg
mov
mov
jl
testl
leave
sub
movsb
imul
out
xor
or
test
add
adc
mov
push
sub
enter
fcompl
and
lods
inc
fisttps
jne
fs
mov
das
cli
rclb
shlb
dec
cmp
into
jno
sub
sti
test
or
mov
mov
into
in
mov
nop
lods
xchg
fimull
out
pop
jae
cmp
mov
mov
fiadds
adc
imul
and
loop
inc
push
or
mov
xor
int
sbb
lret
nop
aas
test
movsb
mov
mov
pop
inc
das
push
jecxz
jmp
rcrl
pop
cmpsl
ds
or
imul
mov
int3
jmp
inc
enter
test
jno
jg
or
das
mov
pop
sahf
into
js
sub
or
in
ja
flds
inc
mov
dec
sub
shr
add
push
in
enter
xor
sarb
xor
mov
bound
loop
fstps
mov
mov
inc
push
shll
lock
inc
dec
cli
xchg
loopne
stos
shrb
cltd
fwait
push
mov
stos
fisttpll
inc
mov
xchg
mov
inc
jae
sub
adc
cmpsl
shlb
jg
cmp
push
jns
add
mov
pop
test
outsl
push
pusha
test
pop
es
pop
int3
addr16
insb
adc
insb
std
sarb
cmc
jne
int
fisubl
addr16
cwtl
sbb
fstps
sub
dec
jns
fsubs
dec
int
loopne
pushf
pop
xchg
sbb
mov
sbb
jg
divl
or
or
and
sub
sub
bound
mov
xchg
push
mov
ljmp
das
pop
push
addb
sbb
or
lock
sbbl
mov
cltd
mov
aam
stc
adc
mov
jae
cltd
mov
out
jnp
test
cmp
pop
push
mov
test
shlb
lea
std
sahf
test
dec
sbb
jnp
movsl
adcb
xchg
and
or
mov
loope
xchg
mov
inc
jno
mov
fidivl
fadd
loope
sbb
sub
add
adc
jmp
lret
test
mov
push
fdivs
and
sub
outsl
xchg
adc
or
inc
daa
sub
cmc
jae
repnz
popf
das
popf
add
leave
fisubrl
jl
shlb
test
or
pop
jo
ds
test
dec
jge
pushf
sti
mov
test
mov
lahf
loop
push
xor
push
les
sbb
dec
jb
mov
xor
es
inc
xchg
or
cli
or
test
popa
cwtl
jae
inc
ficomps
adc
cwtl
pop
dec
jne
imul
inc
xchg
inc
scas
pop
lea
adc
pop
add
mov
sti
jle,pn
decl
or
sub
stos
mov
push
mov
cmp
pop
stos
xchg
inc
jae
aam
je
adc
fisttpl
push
mov
into
loopne
addr16
xor
cmpsb
bound
adc
and
es
or
mov
outsb
inc
mov
xor
pop
movsl
ja
xor
pop
fnsave
je
mov
dec
cwtl
adc
repnz
lret
mov
inc
sub
xchg
dec
or
lds
push
and
xor
mov
ret
lahf
adc
fmull
mov
out
adc
mov
mov
dec
jbe
es
mov
push
mov
movsb
mov
and
fisubrl
xlat
test
push
cmpsb
iret
adc
movsl
sbbl
es
les
sbb
sub
ficompl
movsl
inc
sbb
mov
loop
jns
pop
in
push
push
ljmp
sub
in
dec
inc
mov
adc
fildll
ret
cltd
popf
loope
xlat
add
sahf
or
aam
scas
jns
repnz
ficoml
cld
cs
push
pop
dec
and
gs
testb
andb
add
movsb
imul
and
aas
mov
jp
cmp
jae
enter
in
lahf
xor
xor
add
hlt
int3
testb
lea
add
stc
jmp
rorl
iret
mov
out
xchg
aad
mov
cwtl
sbb
icebp
gs
adc
imul
rol
mov
divb
test
jmp
test
push
mov
mov
mov
xor
add
cwtl
nop
lret
test
stc
xchg
add
xchg
inc
push
dec
sbb
or
fsubp
pop
inc
mov
jo
inc
pop
push
enter
addr16
lods
movsl
hlt
push
jl
imul
inc
push
in
and
or
push
les
cli
and
or
push
push
add
addr16
rcrl
inc
pop
bound
xchg
gs
dec
outsb
mov
jne
fldcw
add
and
clc
jmp
into
push
lds
xor
mov
and
clc
cltd
mov
inc
rol
pop
js
adcb
ret
cli
inc
mov
aas
pusha
lret
out
mov
push
stos
cltd
add
testb
lcall
mov
cmp
pop
inc
rcl
dec
xchg
and
popf
jo
ljmp
out
adc
pop
adc
stos
jne
andb
push
add
int
and
push
mov
hlt
ret
xor
pushf
xchg
mov
arpl
add
sbb
and
clc
pushl
mov
ret
ds
dec
jnp
ret
pop
daa
add
push
ljmp
or
mov
add
imul
sub
xchg
orb
mull
sarb
jno
and
sarl
sub
sarl
js
jle
fwait
push
js,pn
push
mov
inc
fildl
addr16
jne
cmp
scas
jecxz
xchg
xchg
or
sub
xor
dec
xor
and
ljmp
jg
mov
mov
sub
dec
pop
dec
mov
xlat
iret
mov
cltd
dec
fldenv
int
fmuls
nop
outsb
lock
jo
cmpsl
aam
out
xor
xor
enter
jl
sub
fsts
movsl
int3
ror
shll
mov
lahf
adc
loop
jne
imul
rorb
sub
aad
push
int
xorl
mov
mov
jle
scas
mov
rclb
rcl
popf
sti
fwait
push
xorb
or
orl
ss
cmpsl
repz
mov
shll
xlat
fcmovnu
enter
cmpsb
mov
outsl
adc
and
in
add
add
cmp
mov
jle
push
inc
aas
sti
repz
push
dec
cmp
and
in
mov
or
jg
or
add
mov
outsl
add
mov
push
ret
inc
sub
mov
mov
test
outsb
lock
imul
jg
imull
jg
ret
jb
iret
cmp
lods
cmp
pop
loopne
mov
sarb
in
ret
mov
push
sub
sbb
mov
xorb
call
fidivl
lock
mull
push
aam
movsb
and
andb
adc
ret
call
cwtl
sub
mov
add
in
das
mov
xchg
mov
sbb
or
push
and
and
push
cmp
push
adc
cs
xchg
sti
sub
and
mov
jmp
stos
cmp
fnstenv
adc
lret
lcall
repnz
or
call
mov
xor
add
fxtract
xchg
inc
test
inc
mov
mov
and
mov
inc
and
out
test
ret
sbb
jno
jnp
sbb
pop
in
movsb
sbb
int
scas
push
sbb
int3
push
lock
adc
push
jg
je
out
movsl
jg
lret
cli
xlat
insl
xor
lret
push
sbb
and
xchg
mov
enter
sbb
dec
mov
jecxz
shlb
pusha
imul
pop
les
fstps
sub
xchg
das
loopne
sub
call
xchg
mov
pop
sahf
xchg
dec
pop
push
cmp
xorl
stos
add
xor
ss
das
xchg
cmpb
jae
out
into
pop
sbb
xlat
into
mov
mov
add
lret
xchg
push
inc
push
daa
insl
jo
dec
mov
stos
adc
call
fsubs
push
mov
cmpsl
mov
jne
pop
push
sti
push
aaa
iret
inc
cmp
je
pop
mov
mov
stc
daa
inc
dec
cs
or
cmpsb
fadds
mov
ret
inc
loopne
pop
dec
adc
push
jmp
or
imul
dec
fwait
out
mov
stos
pushl
mov
sub
sub
ds
sub
andl
xor
push
ljmp
inc
pusha
add
loope
scas
xchg
pusha
stc
mov
and
or
dec
fsubrl
and
mov
push
popa
sahf
mov
subb
out
cmp
lock
xor
outsb
sbb
sub
or
mov
adc
adc
xchg
jae
dec
adc
test
int3
cs
ret
jns
xor
pop
fisubs
pop
push
add
stos
dec
mov
pop
hlt
mov
or
ret
out
loopne
call
popf
pusha
pop
cs
test
mov
sub
dec
push
push
and
xchg
mov
mov
mov
rclb
icebp
push
repnz
push
inc
aaa
mov
xor
sbb
data16
pusha
mov
mov
mov
test
out
loopne
repz
psubd
add
inc
lods
or
inc
cmp
pop
repz
cmpsl
movaps
je
jnp
and
or
pop
fwait
push
les
ret
jo
shlb
je
inc
add
xchg
xor
mov
mov
lods
cli
adc
lcall
push
cmp
mov
inc
stc
cmp
orb
ret
inc
sub
fs
dec
mov
iret
sti
popa
outsb
inc
ret
imul
outsb
jno
add
je
loope
push
cli
jne
pushf
in
lock
fs
das
xor
xchg
jge
xchg
das
shrb
aas
insb
flds
jmp
xor
push
sub
mov
divb
push
lods
sub
std
or
in
pop
adc
mov
sub
insl
addr16
int
or
lret
fldcw
je
rcrb
xor
jle
mov
or
dec
das
jmp
pusha
insl
mov
jno
mov
jecxz
or
scas
rol
mov
mov
inc
fisubrs
jns
adc
mov
das
imul
sub
cld
push
push
mov
rcll
add
shll
or
cmp
cwtl
bound
or
pop
outsb
add
das
movsb
mov
cmp
inc
test
movsb
push
inc
sbb
sahf
divb
inc
ret
xchg
out
xchg
pop
je
push
or
or
push
sti
xchg
dec
xchg
mov
outsl
or
rcrl
xchg
mov
sti
push
and
sub
add
mov
xchg
rolb
ja
sti
loopne
add
shrl
xlat
lret
dec
mov
mov
int3
fdivrl
or
lods
enter
dec
mov
outsl
mov
aam
dec
clc
fwait
xor
cmp
mul
cld
mov
xchg
fsubrp
orb
mov
imul
repnz
jge
call
pop
adc
push
sub
xor
je
arpl
dec
aas
pop
in
or
sbb
push
push
out
jns
pop
shlb
aam
out
lock
adc
jo
popw
shr
pop
imul
stos
cmc
rorl
mov
aad
pop
push
inc
adc
push
mov
push
inc
pop
and
dec
shrl
test
push
push
lods
cld
movsb
ss
cld
popf
std
jb
mov
ret
and
insb
into
insb
and
idivl
adc
mull
mov
cmpl
stc
das
rorb
or
sti
mov
nop
lahf
or
pop
or
in
jl
cmpb
sub
out
les
std
mov
lcall
repz
ret
xor
push
add
fldcw
jle
mov
rol
fnstsw
sbb
int
mov
and
sub
mov
mov
repz
xor
mov
lcall
mov
and
call
mov
lea
mov
mov
mov
subl
cmp
pop
or
push
jecxz
in
mov
into
aam
rcrl
jmp
push
xchg
mov
push
dec
push
in
jo
leave
ja
cltd
sbb
sbb
jno
xor
jo
jbe
sbb
adc
add
sahf
inc
pop
lods
sbb
add
aas
inc
lds
add
mov
shlb
push
pop
les
inc
xor
dec
xchg
dec
cli
xor
cmp
daa
filds
sub
out
or
or
mov
test
adc
ljmp
andl
push
add
lea
lds
adc
xor
push
icebp
fisubrs
fnstsw
out
fnstsw
xchg
xor
shrb
pop
and
sbb
add
pop
sub
test
fld
js
cmp
or
into
pop
inc
movsb
negl
ja
and
jnp
cmpsb
es
jbe
jp
ret
test
test
je
cli
jo
dec
dec
adc
dec
pop
dec
mov
lret
or
push
jnp
imul
mov
cmc
and
test
add
xorl
addr16
and
jae
stos
iret
or
pop
rcrl
cmp
pop
add
pusha
xchg
mov
lods
sub
pop
dec
xor
xor
in
mov
call
mov
push
mov
jno
ds
xchg
fidivl
roll
jne
shlb
add
dec
arpl
in
ret
gs
outsb
mov
lahf
gs
dec
movsl
das
mov
test
push
or
lcall
dec
adc
rcrl
or
cmpsl
repnz
ja
inc
arpl
lds
push
mov
pop
shll
lahf
pop
jns
jecxz
cmp
std
mov
jp
je
jg
insl
imul
sbb
pop
movsl
mov
call
stos
test
mov
aad
data16
dec
xchg
pop
aaa
mov
lds
fistpll
out
clc
mov
push
mov
outsb
dec
cwtl
push
test
sbb
mov
mov
mov
xor
cmpsb
cmp
cmp
jbe
and
movsb
cmp
test
add
cmp
dec
mov
mov
sbb
sub
in
in
shrb
or
xchg
add
mov
sbb
aas
aaa
lret
mov
mov
cld
loope
ret
xchg
insb
cmp
adc
ret
mov
mov
inc
fidivl
popf
mov
out
lret
ss
fwait
push
xchg
out
cmp
sub
sub
fs
mov
es
mov
imul
sub
xchg
test
in
mov
mov
ret
aas
mov
sbb
inc
rcrl
aam
in
xchg
lret
push
cmc
rorl
or
aas
stos
cmp
pop
mov
sub
xchg
insb
sti
lock
xchg
scas
leave
cltd
out
rcl
std
xchg
mov
sarl
cmpsb
test
xor
dec
enter
fs
out
push
mov
loope
push
rorl
ss
xchg
xchg
jnp
les
pop
pop
jne
lds
push
fistps
sbb
leave
lds
jb
xor
xor
das
insb
add
sbbb
int3
push
jl
push
mov
inc
loop
or
pop
orl
lea
cmp
addr16
mov
sbb
in
sbb
das
dec
dec
popf
int3
je
pop
pushf
cli
into
lret
adc
int3
movsl
adc
int
mov
lods
dec
cld
mov
rorb
jae
lret
shlb
push
or
jae
cmp
mov
xor
cld
lods
out
push
jne
push
sbb
mov
je
xchg
aam
jl
mov
and
xchg
xchg
xchg
shlb
sbb
xchg
cmpsb
mov
hlt
mov
das
cmpsb
add
lahf
mov
and
mov
cltd
call
in
ret
jecxz
mov
fmull
jl
and
or
push
mov
fcoml
mov
js
call
mov
pusha
xor
mov
sub
push
xchg
mov
sahf
cli
ljmp
ss
fwait
mov
push
xchg
imul
adc
ja
xchg
imul
dec
fwait
out
cwtl
xchg
fldl
bound
fiadds
adc
pop
pop
fstl
sub
popf
adc
inc
sbb
inc
pop
shll
loope
nop
add
addl
aad
call
cwtl
mov
popf
repnz
mov
out
mov
sbb
lods
lret
or
mov
movsl
adc
test
iret
pop
clc
xlat
or
pop
in
sub
fistpll
sbb
sbb
push
mov
ss
aas
leave
push
pop
popa
out
fbld
add
std
mov
or
cmc
jecxz
arpl
leave
xor
mov
shll
and
aas
dec
inc
repnz
fcmovu
pop
enter
iret
and
lret
mov
subl
add
xlat
xor
cmpsl
jno
xor
and
push
jo
and
pusha
rorb
sbb
movsb
xor
notl
pop
inc
push
ss
mov
es
and
pusha
negl
or
xor
xchg
sbb
repz
jb
mov
lret
cmp
into
xchg
mov
dec
ljmp
popa
cli
pop
push
es
cmc
push
arpl
in
xchg
push
aaa
pop
sub
arpl
daa
xchg
mov
imul
jnp
jnp
mov
xchg
sub
or
and
lcall
outsb
mov
and
push
inc
or
mov
push
xchg
adc
xor
jno
fldcw
popf
pop
jnp
adc
cmc
mov
mov
lea
xchg
mov
mov
jl
aas
je
xlat
cli
sarb
cmp
inc
pop
andl
in
lcall
push
jl
dec
fsubr
cmp
and
fiaddl
jno
fs
push
mov
sarb
cmp
inc
es
aas
mov
mov
lahf
cmpsb
jmp
fisubs
shrb
out
or
fstpl
or
or
inc
mov
addr16
dec
mov
rolb
mov
int3
mov
rolb
fnstcw
sarb
movsl
inc
xchg
ja
sbb
negb
or
mov
push
cmp
adc
add
aaa
test
add
xchg
xor
into
xor
test
leave
std
scas
and
mov
orl
fnstsw
sarb
das
je
and
ds
add
sbb
fucomip
cwtl
rorl
push
jg
mov
call
add
scas
pop
jae
sub
mov
test
lret
stos
xchg
jb
daa
cmp
orb
or
fprem
jnp
cltd
test
sarl
jo
cmp
push
adc
sbb
mov
gs
test
pop
push
gs
cmp
sub
jne
mov
mov
or
xor
mov
push
call
dec
add
adc
out
stc
xchg
mov
adc
xchg
adc
dec
ljmp
inc
lret
cmpsl
push
xchg
push
dec
fprem
xchg
movsl
inc
mov
cwtl
add
cli
xchg
arpl
nop
cmpsl
test
or
xchg
mov
xor
mov
pusha
inc
cmp
and
mov
gs
mov
push
mov
pop
add
mov
adc
fiadds
jno
pop
sub
out
fists
push
push
sbb
in
mov
lea
hlt
dec
movsl
lock
lea
cmp
xor
lea
dec
mov
ret
mov
mov
jecxz
nop
in
push
enter
fldenv
mov
sahf
jbe
cmp
cmp
fwait
dec
mov
test
call
dec
xor
xchg
cmpsl
aas
mov
xor
cmp
and
shlb
dec
aad
fcmovu
xor
test
ret
movsl
enter
inc
inc
fistpl
sbb
and
or
inc
outsl
mov
stc
xchg
ss
sarl
mov
loope
pop
imul
mov
scas
je
mov
popf
xchg
inc
or
dec
cmp
shlb
fildll
dec
sti
push
cmc
mov
push
dec
js
push
push
mov
push
lock
mov
shl
pop
or
jns
loopne
ret
xor
add
jle
outsl
fadds
xlat
cmp
imul
mov
test
sub
movsl
das
or
js
mov
sbb
aad
data16
push
sti
add
or
add
rol
push
inc
cmpl
add
jne
int3
in
mov
push
mov
jo
aas
icebp
loope
xchg
mov
xchg
repz
roll
scas
push
out
popf
jecxz
in
fbstp
sahf
pop
jne
fdivp
jg
jae
xchg
xor
pop
xor
loop
out
fcmovbe
pop
stc
xlat
jns
mov
push
jnp
push
jb
push
mov
in
and
out
lcall
mov
insl
jns
test
rolb
sti
lods
enter
push
pop
cs
add
sbb
iret
cli
sbb
mov
xchg
and
cmp
imull
jb
jne
pop
in
xchg
xchg
hlt
out
gs
daa
scas
imul
inc
lcall
ds
in
lret
adc
pop
pop
pop
flds
xchg
out
cmpsl
lods
lret
inc
add
dec
pushf
xchg
roll
or
aas
jnp
cmp
jnp
push
push
repz
push
xchg
lret
js
xor
into
pop
or
inc
mov
mov
push
out
popa
adcl
popa
mov
repnz
xchg
push
sbb
es
xor
mov
in
cmp
jns
lea
push
jne
in
loop
loope
bound
cs
xchg
mov
push
mov
test
push
xchg
leave
xchg
arpl
xchg
das
xor
hlt
loopne
stos
loop
in
out
mov
notl
jno
dec
push
or
jmp
xchg
cmp
sbb
loopne
rclb
out
push
push
das
ljmp
mov
pop
sbb
sbb
nop
in
sbb
cltd
pop
rcrb
cmp
and
cltd
fildl
jmp
sahf
sbb
inc
cld
adc
inc
lret
imul
jle
lret
lds
les
mov
jecxz
cmp
xor
xchg
mov
sarl
xchg
jge
jge
mov
adc
mov
xchg
push
xor
loope
mov
popa
stos
sbb
shll
jne
dec
cmp
addr16
push
dec
leave
ss
mov
imul
les
addr16
fdivs
add
push
inc
fnstenv
std
mov
add
mov
inc
mulb
cwtl
popf
int3
mov
pop
fcoms
inc
jb
pop
xchg
dec
ljmp
js
adc
test
loop
stos
sahf
and
mov
xchg
mov
pop
jae
repz
lds
mov
mov
aam
push
shrb
jp
mov
or
aam
or
arpl
xchg
mov
mov
jne
mov
repz
sub
jne
insb
xlat
xor
push
mov
popf
or
jge
insb
xchg
loope
shl
stc
inc
ret
sub
or
sahf
mov
mov
jns
faddl
out
adc
test
cmp
pop
test
inc
or
mov
rcll
or
pop
add
and
sub
jp
lock
cld
out
lea
adc
cmp
stos
mov
sti
mov
push
icebp
push
movsl
shrb
adc
lods
fwait
sub
push
xlat
lret
gs
jecxz
sub
clc
xacquire
sub
aas
push
sub
inc
movsb
sbb
jne
mov
hlt
mov
xor
nop
arpl
mov
xchg
pop
cmp
add
xchg
xchg
sub
mov
sub
add
adc
inc
nop
mov
mov
fucomp
icebp
das
dec
pop
push
shlb
pop
push
pop
add
lret
decl
iret
dec
int3
and
das
push
shlb
cmp
push
sub
sub
cmc
sub
cmpsb
testl
mov
rcll
test
mov
sub
cmp
outsb
xchg
inc
ret
mov
sub
rorl
add
in
mov
shlb
mov
cmp
call
sub
or
faddp
sub
icebp
mov
xchg
adc
lods
idiv
pusha
les
jno
jo
cmp
fildl
aad
push
iret
lea
fsubs
xlat
cmp
and
sub
stc
dec
dec
icebp
ret
pusha
xchg
roll
or
mov
aam
push
sahf
in
dec
aas
pop
shlb
pop
lret
xor
inc
xor
cs
sbb
dec
mov
into
push
fistl
ficomps
mov
movsl
lret
xor
repz
fldenv
push
outsb
dec
mov
bound
and
movsl
movsl
pop
lea
xorb
push
fimull
pop
mov
cs
xchg
mov
jg
mov
test
sub
daa
or
or
sbb
xchg
add
adc
jnp
xchg
jb
jnp
xchg
jl
jo
hlt
mov
mov
loop
fstps
fwait
and
jmp
xchg
loop
xor
jnp
xchg
sub
aam
adc
push
dec
pop
in
pop
sbb
jbe
jle
add
mov
mov
cmp
enter
nop
or
add
xlat
sub
adc
jmp
mov
ss
mov
mov
decl
jmp
jle
lcall
lock
fcomps
pop
sbb
adc
add
mov
jp
clc
inc
int3
pop
cld
out
mov
mov
adc
pop
push
jge
sbb
leave
jo
loope
mov
pop
inc
push
daa
fmuls
iret
mov
stos
addr16
sarb
stos
mov
mov
pop
mov
int
and
and
push
sbb
jnp
ss
je
and
xchg
cmp
inc
daa
adc
mov
adc
ljmp
push
fisttpl
bound
mov
xor
pop
mov
cmp
jae
in
js
dec
decl
imul
je
inc
pop
mov
cltd
adc
mov
mov
mov
cmp
pop
daa
mov
lret
cmp
dec
add
mov
lret
dec
mov
xchg
call
dec
mov
jo
in
or
inc
cmp
pop
rcll
stc
lock
push
mov
xchg
in
lods
dec
loope
fistpll
loop
xchg
in
mov
jmp
out
sbb
xor
test
popf
out
call
js
into
cwtl
sbb
sbb
and
mov
in
mov
fisttpl
pop
add
repnz
sub
ljmp
lods
fs
mov
fwait
push
rcll
scas
cmp
fucompp
sti
mov
cltd
out
xchg
loopne
mov
lods
ds
pop
mov
pusha
push
std
xor
cmp
loop
mov
xchg
push
aad
loopne
fs
jl
lods
clc
vmread
xchg
dec
push
add
mov
add
out
lret
pop
dec
clc
jge
ret
jno
xchg
fbstp
xchg
ss
pop
scas
xchg
inc
loopne
cmp
es
jle
xor
fwait
mov
mov
movsb
mov
lods
jecxz
shrb
jge
push
mov
movsb
stos
lret
xchg
sub
or
sub
lret
or
test
jge
mov
lret
push
fwait
shrb
sub
jno
jns
outsb
test
push
insl
fsqrt
pop
es
push
fsubs
out
outsb
sbbb
mov
pop
and
sahf
mov
and
pop
mov
pop
or
inc
add
fcmovnu
dec
add
cli
faddl
mov
dec
jo
stc
mov
inc
cld
es
pop
push
ja
lcall
ljmp
mov
movsl
lods
xor
gs
cmp
sub
punpcklwd
movsl
fwait
jmp
ljmp
push
stos
xor
jnp
or
mov
and
addr16
cmpsb
call
lea
scas
sbb
rcl
in
mov
sub
pop
adc
out
cwtl
mov
int3
icebp
fsubrs
or
jl
dec
std
dec
pop
shll
aam
outsb
sti
sub
lock
icebp
push
inc
fs
lahf
pop
loop
mov
xchg
inc
scas
xchg
mov
add
adc
outsb
mov
nop
imul
lahf
movsl
sahf
pop
push
sbb
movsb
jg
add
fsts
pop
pop
mov
pop
lret
push
insl
in
or
fimuls
pop
mov
push
cmp
mov
or
inc
scas
xlat
call
mov
adc
aaa
xor
mov
gs
sbb
xor
sub
mov
fldcw
push
outsb
adc
nop
pop
xchg
sti
in
movsl
fdivrp
movsl
mov
int3
pushf
push
imul
js
scas
dec
sti
repz
add
shlb
dec
cmp
or
push
imul
bound
mov
out
cltd
mov
add
js
add
ss
add
push
push
cmpsb
mov
inc
shr
sub
jo
jb
jp
pop
jne
sub
fs
jmp
sub
ret
popf
inc
xor
in
out
inc
imul
adc
mov
lods
outsl
cli
sbb
xor
jg
and
fprem1
inc
in
test
icebp
jbe
imul
mov
jno
popf
and
or
out
mov
pop
shrb
add
xorb
ja
fs
sbb
xchg
stos
sbb
and
fsubrp
xor
add
pop
pop
push
sub
mov
enter
mov
sub
dec
adc
pop
mov
lahf
sub
loop
loope
ret
rol
test
xchg
loopne
jne
dec
and
dec
test
jecxz
movsb
imul
in
scas
rcr
ret
mov
fsubs
rolb
xchg
call
mov
mov
sbb
mov
or
and
inc
movsb
lods
cli
push
pop
push
xchg
ret
mov
mov
xor
xchg
bound
add
hlt
stos
call
jne
xchg
mov
mov
negl
in
test
inc
lret
lret
lcall
in
xor
aas
sub
dec
add
sti
js
jb
gs
push
inc
les
mov
aad
and
fimull
pop
sub
lcall
jp
adc
xchg
push
pop
xchg
mov
icebp
mov
sbb
ss
leave
ficomps
inc
add
lret
pop
add
push
dec
jmp
dec
push
or
gs
mov
ja
icebp
rclb
mov
les
aaa
mov
rcl
xor
sub
push
or
ficompl
test
mov
mov
push
xchg
ja
xchg
dec
dec
jmp
add
lock
outsl
inc
or
cmp
mov
call
add
lea
inc
jl
mov
mov
cmc
cli
push
std
repnz
adc
add
insl
das
cmp
pop
jo
enter
push
pop
xchg
mov
mov
mov
shll
inc
mov
loopne
cwtl
or
xchg
sbb
cmpsl
sub
daa
mov
dec
aas
jmp
mov
push
dec
movsl
repz
xchg
sbb
leave
sbb
cmc
fs
push
and
xlat
push
or
test
push
jle
cmpb
rcll
js
pop
add
inc
test
call
repz
rolb
call
lret
test
leave
stc
mov
fcmovb
cmpsb
cmp
iret
sbb
cmpsl
rcrl
into
in
push
fnstcw
stos
aad
cmpsl
loop
dec
mov
cmc
pop
dec
popl
push
jp
loope
jns
inc
add
aas
rcll
int
ret
and
in
or
in
sub
mov
aaa
cmp
imul
pop
lret
cmp
lea
pop
dec
and
mov
add
or
mov
sar
push
add
stc
pop
sub
xor
jae
mov
lock
push
dec
jmp
jnp
pop
sub
mov
insb
std
and
mov
fisubs
mov
sub
fstpl
or
bound
inc
cmp
dec
or
sbb
jg
test
int
mov
lahf
add
ja
pop
mov
mov
inc
ja
cmp
adc
shrl
pop
jp
lcall
push
cmpb
in
sti
hlt
ljmp
inc
cltd
inc
mov
cs
inc
cmp
loope
mov
out
icebp
jae
not
jo
leave
pushf
jnp
shlb
xor
inc
out
mov
push
lods
add
loopne
pop
sahf
jns
adc
ljmp
push
sbb
stc
sbb
push
push
add
pop
js
cs
pop
xchg
sbb
lock
out
out
call
dec
cmpsb
sti
mov
mov
xchg
add
and
mov
or
cmc
inc
sub
cs
push
movsb
int3
push
mov
ret
dec
mov
push
adc
popa
mov
mov
dec
xlat
or
mov
sbb
idivb
or
cmc
fwait
adc
mov
add
lcall
lcall
pusha
fnstcw
add
mov
fsubrs
sub
movsb
lods
xor
xchg
pop
lea
and
push
pop
aas
int
clc
jnp
ret
das
dec
pop
cmp
jecxz
repnz
sahf
repnz
popf
cmp
sub
adc
sbb
mov
inc
cmc
popf
mov
ds
jmp
leave
jbe
bound
aad
ffree
and
or
xchg
pop
adc
inc
pusha
inc
sarl
repz
in
icebp
insb
cli
fcom
xchg
or
push
aad
add
outsl
xchg
cmpsl
jnp
shrb
movsb
clc
or
loop
add
jno
fadds
out
sub
shr
cmp
adc
mov
ds
and
push
cmpsb
xchg
jne
inc
decb
daa
sbb
inc
adc
pop
out
or
mov
fidivl
jb
mov
popa
fisubs
das
mov
lods
pusha
push
inc
and
mov
pop
pusha
sbb
cmpsb
cltd
lcall
push
pop
push
push
cmc
jecxz
and
movsl
push
pop
stos
cmp
hlt
jecxz
push
leave
rolb
scas
cmp
xor
lods
sub
cmpsb
jmp
jge
add
dec
cmpsb
clc
jp
push
and
jmp
xchg
cmp
js
test
cmp
mov
fimuls
xchg
adc
inc
push
jle
gs
push
rcr
sahf
inc
loope
mov
rorl
dec
or
or
xlat
dec
or
or
jge,pt
cld
fdiv
push
lock
sahf
jl
leave
cmp
fnstsw
cwtl
fidivs
add
pop
xchg
ss
rcrl
frstor
fcompl
cmp
or
loopne
push
push
dec
and
scas
loopne
mov
clc
lock
fiadds
leave
push
and
adc
inc
xchg
jns
loop
out
sub
adc
fmul
outsb
popa
cmpsb
testb
jmp
pop
iret
sbb
and
loopne
mov
fstl
add
pop
and
out
mov
roll
into
leave
push
cs
fdivrs
sub
push
push
ret
sti
pushf
jae
xor
bound
cmpsb
inc
push
aas
jae
push
or
adc
fimuls
pop
mov
push
sahf
aas
jnp
xor
inc
sub
jb
scas
out
stc
test
mov
aas
xor
les
ror
cmp
and
fsts
adc
imul
mov
fcoms
xlat
dec
dec
pusha
inc
mov
cmpsl
jmp
xchg
mov
mov
jl
and
mov
out
roll
enter
mov
push
xor
rcrb
stc
hlt
jge
inc
jno
inc
add
jle
sub
dec
testb
sub
sbb
mov
inc
pop
fisttpl
gs
pusha
insb
lods
and
pop
loop
enter
hlt
mov
or
and
pop
lahf
dec
mov
aam
xchg
inc
and
int3
adc
in
jns
mov
jnp
stc
test
adc
gs
je
aam
or
push
sti
rolb
push
jbe
daa
lea
ficompl
fs
mov
lahf
sbb
jb
test
bound
daa
enter
push
mov
mov
stos
call
and
aaa
into
sbb
ss
adc
cmp
fs
mov
imull
sub
call
mov
xor
pop
push
leave
xor
cmp
push
in
mov
mov
lock
loop
add
mov
cmpb
rcrl
icebp
aam
jp
and
push
mov
jns
cwtl
jnp
sub
adc
dec
pop
mov
and
call
or
jae
out
or
out
push
leave
xor
xchg
cmp
leave
std
andl
xchg
cmp
loope
sahf
ss
mov
mov
and
fnstcw
xchg
cmp
mov
dec
cmpsb
jge
leave
jae
mov
fcoms
and
sbb
adc
movsb
xor
sbb
out
dec
jmp
push
popf
dec
loop
add
shrl
inc
shrl
xchg
out
das
jno
dec
mov
inc
popf
mov
mov
loop
jnp
mov
shll
popf
prefetch
jmp
push
sub
imul
repz
mov
pop
jns
jp
xchg
xchg
scas
mov
pushl
mov
leave
bound
stc
jnp
pop
mov
and
out
in
dec
ja
mov
inc
jecxz
test
je
xchg
jecxz
dec
mov
cmpsl
pop
add
addr16
add
jo
xchg
or
nop
movsl
fbld
xor
fstpl
sub
dec
lahf
and
add
rol
fdivrp
sbb
add
sbb
push
lods
aam
mov
das
repnz
loop
cs
cli
hlt
into
pushf
sbb
out
dec
std
mov
push
aam
jbe
clc
push
mov
int3
adc
mov
jne
or
xchg
into
lock
push
jg
out
pop
and
sbb
push
pop
out
xchg
xor
shll
cmpsb
dec
push
pop
nop
jmp
push
aas
sahf
ret
stos
mov
daa
jnp
mov
movsb
mov
add
xor
add
std
stos
lcall
outsl
addr16
pop
pop
into
push
adc
mov
cmpsb
adc
in
push
imul
jns
fldenv
aaa
ja
addb
add
cltd
jno
das
mov
push
mov
add
insb
cltd
mov
mov
rcrb
mov
sub
cmpsl
inc
fs
out
call
in
repnz
sarb
das
orl
and
xchg
lock
lcall
mov
pop
xchg
sbb
ljmp
outsl
jle
and
cmc
push
outsl
je
xor
xor
enter
sub
data16
je
daa
rorl
mov
mov
call
aaa
xchg
addl
adc
nop
pushf
cmp
inc
sub
dec
mov
outsb
xchg
mov
and
ret
shlb
mov
sahf
nop
and
loope
jb
mov
out
dec
int3
mov
popa
loopne
lea
jne
scas
leave
mov
stos
jmp
setbe
verr
xlat
test
scas
in
test
jae
ss
or
pop
sbb
mov
mov
jnp
sub
xor
mov
roll
or
in
and
ret
xchg
bound
pop
in
and
movzwl
fdivrl
repnz
das
andl
ljmp
iret
bound
sti
push
arpl
lds
enter
leave
hlt
sub
sbb
stc
or
mov
dec
and
sub
outsb
mov
inc
insb
push
sub
pop
push
mov
icebp
int
aas
mov
and
adc
arpl
adc
imul
push
pusha
pop
pop
loope
inc
insl
xor
or
es
int3
push
idivl
fsubrp
xchg
repnz
in
movsb
add
adc
fistpll
dec
shl
repnz
push
mov
pop
sahf
or
dec
fld
dec
and
or
out
je
and
les
lahf
jo
cmp
addr16
jne
lahf
movl
inc
mov
movsb
out
push
add
jnp
dec
inc
push
mov
jmp
scas
sbb
push
dec
scas
cmp
or
jge
movsl
dec
inc
xchg
popf
enter
adc
pusha
sub
push
fldl
dec
call
scas
push
xor
xchg
leave
inc
cmp
jle
ljmp
xchg
fisubs
je
mov
add
cmp
aam
in
sub
push
and
popa
dec
cld
bound
lcall
jo
movsb
idivb
jo
out
fs
cltd
popf
cltd
push
push
sbb
and
jb
dec
and
in
jbe
push
dec
pop
and
or
data16
inc
test
jmp
js
jle
rcrb
pop
loopne
dec
ss
test
jno
ficomps
pushf
pop
sahf
out
aad
sbb
mov
adc
push
cs
mov
xor
fwait
sub
xor
leave
mov
out
push
jne
pop
cmp
mov
mov
push
push
sbb
aam
int
mov
out
shll
pop
sub
shrl
xor
ds
dec
out
push
mov
rolb
shlb
movsl
fucomip
sub
lret
inc
push
jmp
fnstcw
imul
fbstp
cmc
out
mov
popf
into
xor
int3
mov
dec
jbe
xor
fidivs
mov
cmc
pop
pop
add
adc
push
call
into
pop
mov
push
mov
adc
and
mov
fstpl
cmp
lret
push
push
jns
loopne
lret
jbe
add
jl
xor
mov
rorb
sub
cmpsb
mov
movsb
ss
add
movsl
fstpt
insb
or
arpl
mov
loop
jne
push
or
aad
insb
call
setbe
cmp
sbb
std
mov
adc
mov
pop
or
arpl
pop
push
std
mov
dec
cs
cmp
lcall
loopne
mov
iret
push
out
mov
sub
sub
movsl
jnp
adc
push
and
jmp
mov
dec
jno
lds
cmp
mov
push
ret
mov
sbb
rolb
inc
out
lcall
mov
inc
inc
inc
cwtl
stos
gs
jbe
daa
bound
pop
cltd
dec
rcll
sbb
lods
stos
insb
andb
sbb
daa
scas
xchg
test
jns
push
dec
mov
fdivp
sub
clc
sub
pusha
sti
xor
cs
xor
rcll
and
xor
sbb
imul
xor
sub
adc
inc
mul
sub
mov
and
popa
push
inc
lods
xor
movsl
or
popa
fiaddl
mov
out
inc
jg
mov
jl
lods
cltd
inc
outsl
inc
jb
dec
icebp
ss
sarl
or
push
int
fcmovb
data16
xor
jg
gs
jno
jo
dec
scas
out
hlt
xchg
cmpsl
push
ret
loopne
push
test
adc
mov
push
pushf
xchg
popa
cmpsl
sub
xor
inc
push
lock
mov
inc
cmc
repz
inc
adc
sbb
mov
mov
pusha
hlt
loope
or
xchg
leave
jle
jle
sahf
fsubrs
dec
leave
rol
idiv
lods
cmp
mov
sbb
sub
cmpb
add
adc
test
loopne
cld
enter
sbb
jb
inc
out
lret
lock
movsb
into
mov
pushf
mov
daa
or
xor
pop
push
fstpt
mov
fnstcw
lods
popf
pop
lock
push
cmp
mov
imul
mov
aam
dec
popa
xor
xchg
test
sub
push
inc
roll
jne
negl
push
fsub
xchg
adcb
xchg
nop
mov
test
cmp
xchg
movsb
iret
mov
idivb
aam
test
or
cmp
cmp
test
aad
xor
loop
jmp
fisttpl
and
add
insl
lcall
push
push
std
das
xchg
mov
adc
xlat
pop
inc
push
inc
fstl
in
push
stos
int
and
scas
in
inc
mov
das
xor
pop
sbb
xchg
push
inc
xchg
add
dec
jne
mov
mov
mov
out
lods
aaa
add
dec
or
in
mov
mov
fimuls
mov
rcrb
dec
jecxz
gs
call
stc
scas
sbb
loope
in
push
mov
inc
imul
or
enter
sbb
nop
sbb
movsb
xchg
inc
dec
loope
jae
xchg
sbb
in
test
rcrb
fsts
jb
divb
mov
mov
mov
out
and
jo
popa
cwtl
mov
push
mov
orl
inc
xor
inc
jmp
add
lret
inc
pushf
fs
xchg
iret
das
ja
cmp
xchg
lcall
adc
insb
das
or
data16
sahf
xor
ret
and
std
inc
push
cmc
xor
mov
dec
sbbb
jecxz
jb
lahf
mov
lock
xchg
lds
mov
movb
sub
movsl
flds
nop
xor
sub
or
ret
shlb
jge
or
mov
cmp
inc
loop
call
dec
scas
test
addr16
inc
cmpsb
push
test
sbb
into
mov
stc
sbb
jmp
jg
sarl
pop
xor
in
mov
data16
xchg
inc
push
sbb
ret
push
stc
sub
test
jns
or
fldcw
jbe
xchg
jb
mov
xchg
imul
adc
scas
gs
ss
and
bound
sbb
pushf
loop
mov
call
mov
jb
mov
loope
or
or
je
fsubrs
je
fisttpll
leave
xchg
dec
lods
dec
xchg
fisubrl
jo
inc
pop
jge
cld
xchg
frstor
test
movl
push
iret
xchg
aad
adc
dec
fidivrl
or
and
xor
pop
clc
rcrl
mov
mov
push
push
push
popf
daa
push
push
popf
popa
loop
dec
cmp
cld
jo
push
mov
movb
arpl
fcompl
pop
inc
gs
fs
fimuls
cltd
dec
lahf
in
sbb
mov
xchg
xor
pop
add
movsb
add
cld
addr16
outsl
call
repnz
aad
mov
dec
in
mov
jb
imul
add
dec
xchg
add
ss
mov
jnp
lds
sub
pop
push
lret
xorl
lea
cs
sbbb
shrb
add
pushf
or
or
ljmp
mov
push
int3
arpl
mov
xchg
cmp
notl
fucomip
jnp
and
xlat
or
lret
cmp
daa
outsb
int
shlb
roll
inc
cmpsl
repnz
push
in
inc
jns
push
jl
pop
adc
es
sbb
jo
fbstp
mov
push
dec
push
or
test
orl
les
cld
cmp
jle
jno
ret
mov
push
cmp
dec
pop
jns
xor
pop
into
mov
in
jle
iret
iret
xchg
xor
subl
mov
ljmp
fidivrl
mov
mov
jl
mov
jnp
xchg
sub
sbb
jmp
mov
inc
aad
mov
inc
inc
aaa
inc
cmpsb
fs
lahf
mov
or
icebp
orb
adc
test
lods
sbb
rorl
fnstsw
les
or
sub
mov
and
popf
mov
dec
rorb
fiaddl
inc
mov
push
cmp
jns
cmp
fimull
xchg
mov
mov
out
bound
shlb
mov
test
xor
inc
or
push
dec
jnp,pn
inc
ret
mov
clc
mov
mov
push
loop
gs
cmpsl
jno
jae
jae
push
sub
push
test
mov
insl
addr16
das
mov
ss
icebp
or
cltd
inc
mov
gs
sbb
xor
out
inc
jnp
imul
scas
fimuls
imul
and
ds
cwtl
pusha
adc
pop
cmp
popf
leave
insl
inc
cltd
adc
lods
mov
fadds
test
sub
mov
push
outsb
dec
inc
into
sub
jl
sar
pop
cmp
adcl
mov
fiaddl
adc
fnstcw
mov
inc
in
ss
cmp
adc
mov
loopne
iret
sub
mov
out
fsubrl
xchg
repnz
sub
mov
aam
es
jge
ljmp
lea
insb
in
lock
mov
mov
rcrb
xchg
mov
test
ret
stos
rclb
or
adc
xchg
fs
aam
cmp
leave
add
pop
push
dec
xor
fisttps
mov
dec
sub
xchg
stos
imul
inc
xchg
stos
js
and
or
test
jp
dec
lcall
fwait
test
push
mov
test
cltd
sub
sub
stos
int
mov
or
mov
push
push
int3
inc
add
mov
push
cmp
mov
adc
mov
cmp
test
ja
stos
out
push
mov
pop
mov
xchg
dec
in
inc
mov
ret
xchg
sbb
jae
dec
pop
daa
adc
jmp
in
mov
jbe
sahf
adc
mov
sbb
mov
cmpsl
aam
mov
aaa
xlat
cmp
push
mov
xor
gs
fucomp
cmp
imul
mov
std
xchg
ret
or
mov
mov
jmp
lret
or
and
loopne
repnz
cmp
dec
xchg
fistl
and
nop
clc
fwait
xchg
and
cmpsl
gs
dec
popa
mov
bound
mov
push
pop
ja
jg
cmc
repz
push
jo
jo
imul
cmpsb
loopne
int
push
sub
je
add
ficoml
jle
in
xor
or
imul
pop
cmp
xbegin
ret
mov
mov
add
jle
and
or
sti
xlat
mov
or
frstor
and
adc
dec
scas
push
fs
pop
dec
push
ljmp
or
cmc
xor
cwtl
fnstenv
cltd
loopne
add
fidivl
sub
cmp
scas
or
jae
cmpsb
and
shrb
cmp
adc
sub
test
jnp
cwtl
cmp
cmpsl
in
or
mov
adc
mov
mov
mov
ret
in
pop
adc
xchg
pop
cli
loop
imulw
inc
xchg
and
jge
idivl
push
add
cmp
push
mov
sahf
cmp
leave
rorb
xor
das
xor
dec
fnsave
pop
imulb
das
dec
arpl
cmp
sub
push
test
data16
repz
notb
rcrl
out
pusha
sti
movsb
jp
inc
in
testl
movb
push
imul
inc
cmp
pop
scas
mov
pslld
stc
pop
push
mulb
and
sub
cmc
icebp
add
xlat
jno
add
sahf
popa
xor
add
dec
cs
pop
sbb
aas
outsl
xor
dec
sub
aaa
lock
stos
mov
cmp
pop
pushf
or
mov
mov
inc
xchg
int3
xchg
in
mov
nopl
addb
cmpsb
mov
fadds
mov
inc
movl
xor
into
sbb
lret
cltd
add
mov
xchg
daa
jb
in
test
movsl
pop
jnp
fsts
leave
pop
or
sub
or
mov
jg
or
hlt
ss
and
push
jp
movsb
sbb
push
cmpsl
cmp
pop
jl
mov
inc
dec
mov
jmp
ja
insl
dec
hlt
xor
mov
push
nop
int
and
push
push
push
push
push
dec
pop
aaa
cmc
jnp
fdivl
jmp
imull
stos
out
sbb
movlps
mov
xchg
jo
aaa
sbb
dec
xchg
jg
rcl
xor
divl
repnz
mov
test
and
and
in
sarb
pushf
rolb
cmp
adc
hlt
outsb
adc
lods
sbbl
pusha
subb
ja
cmpsb
and
stos
dec
sahf
jmp
inc
ss
out
test
push
xchg
and
adc
jp
shr
js
cmp
cwtl
add
mov
jp
adc
cmp
sub
mov
sbb
sbb
stos
sahf
cs
mov
out
lds
aaa
sub
test
fdiv
fisubs
call
mov
or
inc
mov
inc
das
lods
mov
lds
enter
rorb
mov
lods
aad
jae
mov
push
daa
lahf
push
jbe
call
pushf
sub
and
pop
stc
xchg
cmp
std
test
mov
dec
push
lret
lds
out
or
in
cmp
fdivrl
imul
aad
sub
adc
pop
inc
mov
xchg
lock
add
cmp
arpl
lock
lcall
fwait
add
mov
mov
sub
pop
aam
inc
mov
sub
dec
mov
scas
push
int
add
push
mov
dec
rolb
and
add
mov
xchg
and
jae
jo
lcall
ljmp
ljmp
repz
icebp
fistl
in
jl
dec
jbe
and
je
iret
inc
cli
pop
ss
fidivrl
out
dec
mov
fldl
push
cmp
loopne
pop
adc
int3
aaa
bound
insl
scas
fsub
rorb
ret
icebp
aaa
push
rcrb
aam
mov
clc
cltd
mov
out
adc
dec
inc
and
jg
xchg
pop
mov
jmp
xlat
or
cld
in
push
and
pop
aam
push
adc
movups
xchg
dec
lods
std
sbb
aam
mov
or
inc
jle
ret
fisttpl
and
sub
out
mov
cmp
xor
adc
addr16
scas
and
lret
cmpsb
push
or
push
pop
shll
stc
int3
and
adc
sub
cmp
dec
imul
xchg
push
ror
popf
xchg
sbb
stos
inc
stos
test
push
fcoms
mov
and
or
jecxz
cltd
and
shlb
pusha
xor
insb
add
popa
pop
and
stc
mov
dec
adc
and
mov
insb
out
pop
and
jle
stos
sti
jl
jae
fmul
les
out
add
push
mov
cwtl
js
jmp
and
pop
cmp
es
out
pop
jmp
dec
arpl
cmc
movsb
sub
adc
jo
scas
ljmp
jne
inc
xlat
jne
in
fs
loop
loop
fisttps
cmp
mov
stos
adc
push
and
add
mov
and
je
or
scas
xlat
lods
into
cwtl
inc
popf
bound
orb
subb
or
xchg
imull
jns
mov
dec
test
pop
push
cltd
int
inc
inc
scas
shlb
mov
pop
adc
aas
loop
imul
fsubl
insl
inc
shlb
add
inc
int
sub
andb
lret
cli
repnz
or
xchg
aam
aas
lods
pop
sub
pop
int3
push
repnz
scas
dec
xlat
xor
aaa
int3
or
mov
jnp
or
jnp
sahf
mov
out
sbb
aas
mov
cmpsb
fwait
pop
and
dec
sub
mov
inc
rcrl
inc
xchg
loopne
insb
leave
sbb
cmc
iret
aaa
cltd
push
push
cwtl
cmp
dec
push
adc
cwtl
xchg
cmp
xchg
mov
les
dec
mov
and
or
push
jge
je
jl
push
cwtl
pop
cli
xor
push
push
jmp
adc
xchg
popa
mov
xor
cltd
call
scas
clc
aaa
ss
iret
sti
fidivl
aaa
dec
lock
mov
daa
push
sbb
shl
dec
mov
daa
dec
leave
mulb
xor
xchg
add
jae
shl
pop
and
into
dec
stc
add
stos
and
jle
data16
in
inc
xchg
ss
mov
rcl
jge
push
insl
lcall
jle
ljmp
sti
cmp
add
jl
mov
sbb
xchg
aad
xchg
shll
xchg
sub
add
adc
cmp
xchg
sbb
ret
cmc
icebp
inc
mov
aas
popf
push
mov
sti
push
jne
roll
dec
xchg
dec
mov
dec
movb
and
mov
mov
or
in
push
mov
cmp
push
push
inc
adc
mov
lret
jmp
jb
jg
in
rcl
ficoms
rcll
sbb
xor
mov
and
sub
inc
or
pop
mov
dec
pop
sbb
pop
cmp
inc
push
push
sbb
addr16
adc
lds
fcomp
insb
out
stc
insb
inc
adc
xor
adc
jb
gs
inc
cmp
mov
pusha
push
aad
rorb
pop
bnd
xlat
xor
sti
jg
sahf
cmpsb
push
xchg
sub
sub
lcall
pop
sub
push
adc
xchg
pop
je
jb
fs
jne
ret
jns
idivb
jle
iret
pop
mov
cmp
adc
or
call
dec
fistl
sti
or
xchg
fisttps
call
ror
scas
sbb
sub
out
sub
movsb
push
inc
shrb
xchg
sub
xchg
adc
imul
mov
mov
cmp
les
aad
ds
lock
adc
jo
and
mov
xchg
xlat
pop
fsub
clc
cmp
out
mov
test
mov
xchg
jb
iret
hlt
push
or
scas
push
sbb
mov
ja
leave
mov
jae
sub
pop
jg
ret
jbe
jae
mov
push
or
in
mov
fstl
arpl
test
bound
xchg
mov
add
xor
les
mov
jns
in
push
and
sub
dec
jnp
mov
jbe
add
aaa
cmpsl
or
add
fnstcw
iret
push
push
ds
mov
sub
inc
jae
cmp
xlat
lock
mov
popf
dec
mov
shrb
push
lahf
cmp
aas
cmpsl
mov
aam
pop
loop
aad
scas
mov
mov
xchg
icebp
aas
mov
sub
stos
xor
jb
jno
movsl
mov
daa
in
lret
add
test
f2xm1
xlat
lcall
sub
xor
mov
pop
push
sub
popa
mov
jge,pt
sbb
lods
bndldx
add
push
test
cmp
in
push
pop
fucomp
insl
mov
adc
dec
ss
aam
std
int
jno
cmp
jle
leave
inc
fildl
mov
idivb
aaa
jecxz
imul
xchg
out
xor
jge
fstpl
push
mov
jno
jne
xor
push
xor
fstpt
dec
shld
xlat
jb
nop
adc
mov
cwtl
rorl
ror
subb
and
add
push
and
xchg
adc
push
xchg
loopne
push
lea
xchg
stos
mov
fwait
enter
sarb
testl
xor
jl
cmpsl
xchg
iret
push
in
int
fidivrl
inc
fwait
inc
mov
cmp
push
lds
or
mov
cmpsl
pop
adc
enter
xchg
pop
ret
xchg
fwait
mov
aad
js
sub
push
ds
xor
inc
je
in
int3
mov
pop
fbstp
sub
xor
and
cmp
cs
aas
ret
jno
fcmovbe
dec
mov
xchg
fisttpll
xchg
add
xor
stos
add
sahf
add
mov
dec
scas
jne
xor
ret
loopne
sbb
push
decb
loope
lahf
push
mov
repz
jle
scas
lahf
xor
out
gs
insb
lret
std
int
in
aad
ljmp
nop
xor
iretw
sub
loop
dec
mov
das
aad
shll
in
ja
es
mov
daa
ja
push
and
xchg
inc
xorb
daa
inc
xchg
push
out
mov
movsl
data16
movsb
mov
fsubrl
loope
test
pushl
sub
outsb
fcmovnbe
cmovp
ror
repnz
stos
cld
mov
aam
inc
jae
adc
cli
ja
and
adcl
jb
mov
cmc
dec
mov
in
loopne
insb
repz
push
aas
jge
rolb
push
sub
add
leave
insl
inc
pop
cmp
cmp
xor
mul
pushf
popa
loopne
nop
daa
xchg
outsl
adc
dec
mov
jmp
shlb
loopne
sbb
aaa
add
iret
popf
test
dec
gs
mov
dec
call
cmp
sbb
ficoml
mov
mov
ljmp
pop
in
rclb
xlat
daa
jecxz
mov
xchg
outsb
call
jg
inc
cmp
xchg
or
or
add
pop
bound
cmp
jnp
and
mov
push
dec
cli
or
add
pusha
cmp
cmp
in
lods
in
in
outsl
inc
push
jae
cltd
jnp
es
mov
loop
les
pushf
std
push
leave
lret
in
int
inc
stos
insl
xchg
jl
in
xchg
jge
sub
inc
imul
movsl
lcall
push
ljmp
jae
pop
xor
test
lcall
cltd
outsb
jmp
push
into
ds
daa
push
movsl
scas
pop
pop
or
push
xchg
bound
jnp
inc
xchg
aam
mov
out
cmp
xchg
imul
mov
js
es
mov
lods
pop
fadd
pop
mov
mov
mov
sbb
pop
or
mov
xchg
xorl
mov
cmpb
es
jmp
cmp
jns
fdivrs
mov
cmp
rorl
lds
or
cmc
mov
gs
rcll
sbb
inc
push
mov
fiadds
test
jle
int
movb
push
mov
repz
inc
js
mov
cld
aam
enter
xchg
xor
push
aad
xor
sbb
out
ljmp
lock
jbe
fs
cmpsl
xchg
jb
cmpsb
or
mov
inc
push
xor
insb
ljmp
dec
sti
or
and
scas
das
fidivrs
pop
dec
pcmpeqb
xchg
arpl
xchg
enter
out
fldcw
cmc
test
push
in
and
hlt
sub
cmp
arpl
aaa
pushf
fdivrl
in
pop
dec
and
xorl
ljmp
and
les
fidivs
ljmp
ret
cmp
bound
out
inc
notb
lret
jle
jp
cmc
fstps
xor
mov
push
lods
xor
or
mov
and
xchg
stos
cwtl
icebp
adc
sti
std
jb
jmp
lods
repz
mov
scas
sbbl
jo
jae
fidivl
push
lret
inc
nop
pop
dec
insl
je
adc
push
jmp
inc
mov
sub
sub
sbb
fcmovnbe
add
sbb
enter
xor
aas
in
mov
pop
insl
add
adc
xlat
lods
es
push
mov
or
sub
imul
les
imul
mov
test
lods
imul
jmp
es
pop
and
mov
sub
iret
push
call
mov
pop
sbb
or
dec
popa
jmp
test
fisubrs
fistpl
out
addl
xchg
mov
loop
mov
out
fldl
repnz
pop
repnz
andl
pop
pop
movsb
stc
cmpsb
sub
loopne
add
mov
pop
jnp
jne
repz
jno
sbb
mov
xchg
test
push
xchg
xchg
mov
dec
cmovg
clc
sub
stos
jbe
pop
insl
mov
mov
mov
fsts
ret
mov
add
enter
mov
xor
hlt
out
xor
into
sub
inc
cmp
cltd
loop
icebp
loopne
cmpsb
outsl
mov
inc
addb
cmp
sub
mov
loope
outsb
fiaddl
jle
pop
lret
nop
repnz
pop
lcall
aas
xchg
adc
jbe
xchg
lds
arpl
ret
dec
pop
xor
inc
lods
add
mov
pop
inc
test
jg
sbb
leave
mov
push
xchg
push
shll
lcall
add
loop
repnz
sbbb
cmp
subl
bound
jnp
mov
daa
inc
inc
mulps
xchg
pop
xchg
adc
loopne
scas
jp
pop
cwtl
outsb
ret
sub
push
aaa
rcrb
jp
add
jge
popa
add
xchg
dec
fstp
jmp
shll
ljmp
sbb
jne
xor
jbe
ret
push
dec
cli
in
mov
cmp
mov
add
nop
sub
loope
jecxz
and
sub
mov
mov
jno
in
cltd
jl
mov
and
mov
cmpsl
out
pushf
mov
push
or
or
dec
mov
xlat
mov
movsb
sub
adc
xor
xchg
arpl
adc
out
je
jb
and
pop
sub
push
clc
adc
or
mov
std
xchg
loop
jge
loopne
lret
add
std
aad
aas
js
scas
jge
jns
xor
arpl
adc
outsb
mov
jl
cmc
push
pushf
in
in
std
sbb
fstl
in
mov
inc
insl
sbb
scas
fistpll
testl
arpl
dec
orb
sahf
cltd
cmp
add
test
test
cmc
aad
push
bound
clc
popf
popa
stos
sbb
xor
cld
xor
mov
xchg
pop
test
and
lea
outsb
dec
je
push
loopne
sbb
or
jg
xor
dec
sub
repz
imul
fwait
dec
jmp
pop
and
add
fstpl
pop
leave
ret
movsl
movsb
add
xorb
int
lcall
xchg
dec
inc
mov
xchg
jns
test
pavgb
push
sub
sbbb
jge
imul
xchg
or
arpl
es
and
jl
andl
outsl
xor
shr
push
inc
mov
iret
xchg
dec
or
aam
movsb
jp
stos
das
push
jmp
mov
jle
lods
cld
loop
movsb
jmp
leave
xor
sbb
mov
out
and
xchg
or
sahf
pop
push
and
sub
mov
je
xlat
or
mov
push
and
pusha
lcall
shrl
push
adc
out
adc
rcll
mov
fildll
push
sub
push
jecxz
push
mov
and
es
fwait
aam
and
xchg
push
pop
add
mov
pusha
mov
shlb
loop
mov
call
cltd
and
sarb
jg
out
sbb
data16
add
scas
cmp
adc
arpl
push
sarl
data16
cwtl
out
test
decb
sbb
imul
movl
add
push
jnp
arpl
inc
and
inc
lahf
loope
mov
cmp
mov
je
sub
cmp
fsubr
dec
outsl
push
sbb
inc
clc
push
shrl
stc
fsubs
ret
rcrb
stc
out
cwtl
outsl
movl
mov
sub
mov
sahf
int
das
fadd
data16
pop
mov
adcl
push
in
ret
jne
test
fnsave
dec
dec
mov
nop
insb
lret
das
jle
adc
jne
xlat
cmpl
mov
lds
rorl
pop
movl
jae
popf
mov
mov
cmc
sub
or
popa
arpl
test
enter
push
mov
jg
jae
jno
xor
or
out
out
fisubrs
xor
scas
mov
push
ficomps
and
push
jmp
dec
shrl
shl
and
dec
cmc
sbb
mov
inc
dec
or
or
mov
fidivl
sub
push
xchg
xchg
jns
stos
loopne
pusha
and
cmp
mov
ja
seto
xor
push
adc
pop
inc
jo
mov
hlt
loopne
gs
addr16
or
shrl
aas
lret
mov
sub
add
ss
and
jns
cmp
lea
testb
gs
cmp
popa
jne
add
js
ret
push
sub
outsb
pusha
push
and
and
sarb
xor
enter
dec
lock
in
fwait
test
outsb
in
or
push
insl
xchg
aad
shrd
jmp
fsubr
lahf
adc
push
pop
sub
call
jp
inc
lahf
pop
stos
dec
mov
pop
dec
push
push
adc
aad
adc
sbb
mov
sbb
mov
stos
fadd
xchg
jecxz
aas
mov
call
popf
push
cmpl
out
jg
push
pop
loop
test
imul
and
inc
adc
hlt
mov
push
pop
push
popf
and
aam
jo
fwait
cmp
popf
repz
cmp
movsl
es
adc
push
or
and
push
dec
mov
lds
idivl
push
push
sbb
les
imul
jo
outsb
outsb
mov
out
and
sbb
mov
nop
pop
push
test
add
das
mov
jmp
out
ftst
jp
xor
cli
xchg
push
cmpsb
sbb
fsubl
push
jg
scas
or
out
outsl
pop
xchg
int3
dec
push
sbb
or
inc
adc
mov
jmp
stc
mov
cmpsb
jmp
push
and
dec
or
ds
jp
lahf
push
or
lret
aad
adc
mov
jmp
lods
sub
mov
xor
stc
pop
mov
pop
sub
stc
fisubl
mov
stos
sub
inc
gs
cmp
push
xchg
mov
es
clc
jle
es
xchg
clc
adc
les
inc
pusha
pop
sti
hlt
inc
roll
inc
scas
jae
pop
xchg
xchg
add
in
xchg
sbb
or
int
mov
cwtl
jo
mov
aam
sahf
mov
mov
fsubr
lods
arpl
rorl
gs
mov
inc
loopne
inc
xorb
fildl
xor
push
sub
or
daa
sahf
xchg
pop
scas
jge
adc
jb
pusha
loope
fbstp
push
adc
add
add
fidivrl
movsb
lret
dec
inc
std
inc
sbb
adc
mov
sbb
cmpsb
and
lds
adc
fdivrl
rclb
ret
xchg
xlat
cmpsl
mov
jbe
mov
iret
ds
add
int
sqrtps
fstpt
sub
jnp
sbb
add
test
push
xlat
pop
mov
sub
rorb
pushf
incb
xor
lea
sarl
lds
jb
sub
out
jecxz
push
inc
scas
leave
gs
jecxz
jbe
or
inc
dec
fdivrl
push
nop
pop
xor
hlt
inc
lahf
les
scas
jl
jae
inc
xor
xchg
pusha
fs
lods
clc
mov
jle
mov
in
mov
pop
stos
jbe
and
xor
push
mov
loope
je
sbbb
scas
dec
les
mov
push
cmp
pop
icebp
adc
aam
push
dec
jle
lods
push
sti
sub
seta
divl
cld
shll
fisubrl
stos
mov
mov
jbe
scas
jo
xorb
dec
lock
lods
jno
adc
lds
stos
sub
lcall
ja
shll
jge
sub
push
stos
push
cmp
cld
icebp
jo
ficoml
and
outsb
mov
out
popa
stos
inc
pop
dec
lahf
jp
sub
outsb
and
cmc
pop
shll
test
push
loopne
stos
sub
jmp
adc
cmpsb
mov
test
jmp
popf
add
mov
cmp
cs
cmp
cmp
ret
adc
sbb
add
cmp
adc
cmp
sbb
jmp
cmp
clc
movsb
xor
adc
push
xor
mov
repz
jae
jmp
or
pushf
fistpll
lods
icebp
in
and
dec
and
cs
lea
sar
daa
shl
das
add
scas
mov
sbb
and
or
mov
cmp
leave
popa
imul
push
mov
jne
ret
add
mov
xor
xchg
fcoms
cwtl
pop
scas
dec
add
lret
adc
mov
scas
sub
dec
out
cmp
mov
xchg
divl
dec
adc
inc
shlb
cs
pop
push
pop
mov
insl
clc
cmpsl
scas
aam
lods
inc
dec
aad
mov
mov
jl
mov
add
mov
pop
xchg
push
mov
data16
mov
dec
mov
stos
push
sbb
or
pop
ljmp
mov
in
scas
lcall
roll
rcrb
into
jbe
or
xchg
sub
not
pop
cmc
data16
add
add
fldl
inc
gs
out
push
xchg
es
stos
xchg
mov
cltd
add
push
in
cli
mov
in
or
lock
mov
mov
cmpsb
adc
push
xor
fidivl
outsl
mov
imul
lret
mov
jae
stos
out
push
xchg
pop
mov
sbb
jg
sti
inc
jmp
imul
bound
mov
push
jbe
scas
outsl
push
fwait
or
in
lcall
adc
loope
push
jmp
add
mov
into
push
popf
mov
aad
jo
lock
dec
push
pop
sbb
mov
fwait
out
inc
popf
jne
in
or
ret
push
daa
pop
adc
lea
stc
nopl
sbb
xor
sar
loop
clc
pop
pop
xor
or
iret
jmp
dec
call
out
adc
mov
sbb
add
push
mov
inc
inc
nop
and
out
imul
sub
test
inc
add
pop
push
cmp
cmp
push
fidivs
cli
repnz
adc
cwtl
bound
int3
outsb
jp
dec
test
les
push
and
mov
in
bts
xor
arpl
pop
xor
lods
jnp
out
jmp
test
outsb
jl
daa
decb
shll
fbstp
loop
outsl
pop
jecxz
and
cltd
cld
push
xor
add
aaa
add
testl
jbe
sar
out
lahf
leave
enter
stos
mov
and
int3
ret
cmp
adc
scas
and
in
jl
loopne
inc
scas
fsubrs
daa
adc
cli
and
or
ret
jns
aam
mov
jle
shll
lods
dec
daa
mov
dec
dec
sti
lods
and
mov
mov
ficoms
mov
imulb
jo
cmp
test
daa
sbb
mov
mov
sar
sbb
out
inc
cmp
mov
mov
insb
dec
lock
arpl
push
sub
sub
loope
and
mov
inc
adc
lods
mov
in
mov
stc
mov
flds
enter
push
cwtl
mov
adc
addr16
mov
mov
lcall
xchg
js
scas
mov
pop
mov
and
push
into
xor
inc
pop
add
pop
add
cli
in
js
aam
lahf
or
pop
packuswb
xchg
mov
rorb
add
push
xor
mov
xchg
shll
xchg
ret
loop
rorl
filds
dec
mov
pop
xor
push
xor
add
pop
push
and
push
test
mov
int
aad
adc
ja
mov
dec
add
jno
cmp
inc
lret
js
scas
sub
test
pop
dec
mov
or
fstpt
and
roll
lcall
outsb
fmul
and
lds
xchg
dec
mov
int3
mov
mov
cld
clc
test
mov
and
push
adc
js
push
cvtps2pi
fistl
pop
mov
pop
mov
filds
add
leave
repz
or
js
leave
add
xchg
aas
push
fs
loop
pop
dec
adc
shll
xor
movsb
xor
ret
mov
jno
dec
clc
jge
push
push
out
addr16
movsl
inc
mov
sbb
mov
mov
inc
movb
adcl
inc
ds
sub
xchg
mov
dec
lock
push
in
cld
mov
pop
test
popa
aad
lods
fidivs
cmp
popa
clc
idivl
jp
popf
adc
cs
popa
inc
mov
sahf
cmp
jp
test
inc
dec
cs
jnp
cmp
loope
loope
or
and
cs
push
xchg
stos
pop
ja
insl
out
sbb
sbb
add
push
pop
mov
popa
lods
int
mov
loope,pn
notb
scas
sub
lods
outsl
mov
rorl
pop
test
dec
popa
inc
adc
mov
mov
cmpsb
inc
ret
mov
subw
in
and
xchg
pop
add
cmpsl
xchg
jl
mov
scas
add
data16
in
sub
subb
adcl
mov
sub
adc
lcall
jp
sbb
or
xor
sbb
and
mov
int
and
sub
and
mov
sbb
flds
jae
in
push
loope
jp
jae
outsl
lcall
ja
int3
in
or
je
mov
xor
mov
andb
setns
ret
sbb
out
jo
lret
pop
fisubl
movsb
add
inc
jnp
arpl
inc
jle
out
lret
rorb
fnsave
jne
sbb
rcrb
rol
in
cmpsb
and
jnp
xor
inc
push
repz
inc
add
and
xchg
lds
mov
out
jns
adc
inc
ljmp
mov
mulb
cmp
pop
call
shll
hlt
movsl
xchg
and
push
test
or
loope
sub
push
cmp
and
in
cwtl
mov
push
outsl
cmp
inc
sub
lea
rcrl
mov
hlt
inc
sub
mov
lret
and
aaa
popa
ljmp
imul
orl
dec
xor
mov
popf
insl
outsl
mov
ret
sbb
sbb
and
movsl
rorl
mov
test
add
aad
sub
mov
std
mov
push
push
mov
shlb
sbbl
ret
mov
mov
daa
mov
xchg
sub
mov
movsb
movhps
push
aas
dec
mov
fcomp
xor
cmp
aam
mov
jb
cmp
sbb
es
pop
out
and
mov
add
dec
xchg
dec
jae
andb
cmp
out
lods
cmp
jp
inc
in
outsl
je
mov
js
stos
push
push
je
mov
jbe
dec
ret
cmp
adc
sbb
aaa
adc
int
fists
push
aaa
xor
add
mov
and
mov
mov
aas
sbbl
or
call
je
rclb
xchg
adc
and
cmp
addl
lds
xor
jl
cmpsb
fstpt
aas
loope
xchg
ds
pop
mov
jo
xchg
rolb
cltd
arpl
push
int
jg
inc
mov
negl
adc
inc
cmc
xchg
sti
xchg
rcr
lret
xor
ljmp
or
sub
sub
stc
mov
movsb
std
daa
or
js
enter
inc
add
ljmp
repnz
add
movsb
xchg
and
mov
sbb
out
in
rorb
pop
mov
pop
push
mov
push
push
mov
js
das
sbb
fisttpll
scas
push
sbb
mov
shll
mov
mov
loope
into
pop
cmp
lcall
jo
mov
sahf
cld
sbb
fstps
lret
addr16
mov
sbb
sub
ror
mov
stos
add
cli
adc
jnp
lods
jbe
cltd
and
cltd
pop
inc
push
sbb
mov
add
outsb
xchg
in
sahf
mov
mov
or
stos
out
jg
jg
and
xor
pop
mov
sub
jmp
add
rcrl
push
fcmovb
xchg
adc
in
mov
pop
in
dec
mov
pop
fwait
push
jge
push
and
cltd
fisubs
jne
and
mov
aad
add
jp
nop
adc
hlt
push
mov
sahf
call
pop
mov
sub
mov
repnz
mov
push
addl
or
xchg
cmp
mov
lds
outsb
rcrl
lret
pop
std
cmp
push
lahf
sbb
pop
push
je
cmp
push
roll
xchg
hlt
jae
add
dec
inc
mov
jo
fwait
out
jle
repz
push
sub
and
or
andb
xchg
imul
mov
sub
in
mov
or
push
mov
cmp
sbb
inc
xchg
mov
inc
fisttpl
or
subb
movsb
divl
aaa
leave
mov
or
mov
roll
movsl
divb
gs
data16
std
das
mov
divb
mov
ret
xchg
xchg
sub
pusha
es
jns
push
sbb
outsb
adc
xor
mov
jae
jge
pushf
jno
mov
dec
cld
sub
test
outsl
rcrl
mov
movups
or
rcr
pop
jge
mov
and
pop
lcall
mov
insb
and
sbb
ss
outsl
mov
mov
rcrl
stc
jne
movsl
sub
sbb
xchg
inc
sub
inc
aam
scas
call
lret
dec
bound
scas
dec
sbb
xorb
jns
pop
dec
pop
pop
outsb
mulb
mov
push
cmp
in
arpl
sub
popf
daa
repnz
out
dec
mov
movsb
or
jecxz
pop
sahf
ds
xchg
xchg
push
sub
pop
ficomps
stos
push
mov
mov
lods
xor
int
andb
pop
push
outsl
adc
jae
inc
scas
jo
in
mov
mov
loop
sub
cmp
sbb
pop
mov
imul
jo
dec
std
test
bound
je
in
mov
mov
pop
pop
ja
aad
popa
sbb
aam
insl
inc
fpatan
iret
fwait
sbb
leave
mov
stos
stos
push
sub
std
push
idivl
mov
cmp
ljmp
xor
int
sub
cmp
adc
pop
int3
insl
test
cwtl
cmp
fisubrs
or
mov
adc
mov
out
xchg
int
stc
add
arpl
push
dec
mov
xor
pop
std
adc
popa
push
inc
aaa
mov
jo
push
popa
xlat
mov
imul
inc
iret
mov
inc
loopne
jl
xor
les
loope
cltd
mov
xlat
mov
and
cmpsb
xlat
pushf
daa
mov
sub
and
ss
mul
stos
pop
xchg
dec
ljmp
jecxz
add
sub
dec
scas
insb
aas
out
jecxz
xchg
movsl
repz
and
push
push
inc
adc
add
addr16
ret
and
iret
xchg
push
xor
cmp
outsl
mov
add
or
adc
mov
adc
pop
mov
push
test
xchg
mov
es
sbb
test
lcall
push
cs
hlt
movsl
movsb
pop
stos
stos
jae
mov
cmc
cmp
xchg
popl
xchg
mov
jecxz
add
dec
push
jns
fwait
sbb
daa
jle
push
xchg
jp
cmp
jae
jecxz
cmp
test
out
mov
fldl
dec
xor
jo
inc
leave
xchg
dec
adc
push
adc
call
add
adc
pop
xchg
cld
sub
jp
pusha
in
lods
lahf
loop
ror
add
push
mov
push
jbe
and
jmp
lahf
test
and
xor
sub
leave
xchg
add
xchg
fidivrs
xorl
mov
pop
test
lods
test
in
jne
out
xor
fdiv
in
dec
jmp
xor
fstpl
sbb
or
xlat
xor
js
scas
sub
movsl
popa
lods
shrb
int
adcl
mov
testl
in
shrb
jb
sarl
jge
popa
stos
scas
addr16
xchg
or
jp
xor
imul
lret
push
inc
cli
inc
repz
lock
addb
mov
fnstenv
scas
inc
cwtl
addb
push
jl
movsl
jg
mov
lret
shll
ficompl
test
insl
mov
neg
sub
dec
xchg
push
out
inc
fists
imul
sub
pop
inc
fidivrl
mov
push
ja
cwtl
dec
push
cmp
add
or
push
pop
sbb
xchg
mov
jns
push
arpl
adc
cs
movsb
mov
enter
test
clc
cmp
mov
pushf
lahf
int3
sbb
mov
je
cmpxchg
lahf
xchg
addr16
into
sub
jecxz
mov
repz
cmpb
mov
mov
xchg
and
jg
insl
sbb
push
mov
adc
sub
js
call
mov
add
cmc
ret
add
rol
mov
bound
pop
dec
out
adc
cld
aaa
xchg
ss
xor
jle
and
leave
xlat
inc
sbb
ficoms
jns
fimuls
repz
gs
xchg
sahf
pop
xor
mov
cmp
test
fcmove
adc
test
je
mov
imul
imul
cld
ljmp
bswap
mov
dec
push
xchg
pop
xchg
xor
insl
inc
sub
adc
cmp
xchg
sub
insb
sbb
cmp
jmp
jp
push
cmp
popa
rclb
dec
add
les
xor
sub
lods
bound
pop
mov
std
outsl
cmp
rorl
xchg
adc
dec
jne
cmpsl
ret
inc
mov
sbb
cmp
scas
jbe
pop
inc
xor
fcoms
repz
stc
jle
dec
jp
test
outsl
aas
cmp
mov
and
cs
cmp
ljmp
cmc
je
lods
lds
xor
je
mov
jle
outsb
jnp
test
inc
xchg
je
lahf
ds
mov
xor
ja
pop
aas
add
or
mov
lret
inc
mov
pusha
mov
mov
ret
or
enter
fcomps
and
and
call
int
int3
inc
inc
enter
cmp
fwait
or
cli
pop
inc
pop
scas
xchg
rcrl
fwait
mov
dec
sbb
sarl
mov
sahf
push
inc
xchg
daa
xchg
scas
or
ficompl
sbb
pop
xchg
xchg
js
add
pop
or
or
or
imul
arpl
stos
in
or
cmpsl
cmp
dec
bound
pusha
dec
dec
xchg
mov
test
in
sub
jno
jmp
push
es
cmp
cmp
dec
pusha
push
sbb
cmp
xchg
or
inc
push
cli
into
cmpsl
mov
pop
out
jge
sbb
xchg
jl
xlat
stos
inc
inc
andl
sti
sub
lahf
faddp
out
ss
xorb
aad
xchg
inc
negb
dec
pop
add
imul
mov
add
out
cmp
fldcw
add
shl
mov
jmp
insb
mov
pop
shlb
insl
stc
cmp
cltd
sahf
mov
test
icebp
cmp
fstp
imul
shll
push
xlat
adc
pop
mov
aam
pop
or
fistl
scas
flds
movsl
xor
bound
sarl
lea
out
dec
inc
pop
jecxz
imul
mov
sbb
in
push
sub
sub
fs
testb
or
ss
sub
neg
aas
lods
mov
sbb
subl
nop
push
push
jge
add
in
dec
add
out
jge
inc
loopne
mov
lods
adc
cmp
rcrl
mov
xor
in
or
lods
test
and
push
fstl
scas
or
inc
iret
mulb
mov
cmc
pushf
jle
in
or
adc
lret
inc
out
leave
fistpl
jp
mov
dec
jb
and
cld
or
into
fdivrl
js
les
subb
lods
mov
inc
mov
pop
mov
test
mov
fdivrs
sbb
aad
cld
xlat
outsb
mov
dec
je
mov
enter
mov
shlb
in
fcomps
adc
scas
or
loop
and
cmp
loope
or
arpl
xchg
scas
into
cli
cmpsb
jne
sahf
xchg
ss
inc
ljmp
mov
sar
inc
arpl
shl
arpl
enter
pop
sub
loop
gs
loopne
arpl
sbb
sub
notl
pop
xlat
cli
or
cmp
arpl
mov
aad
adcl
lock
cmpsl
jbe
cltd
cltd
cmp
ja
cmp
jle
sti
adc
fists
jmp
sbb
mov
adc
pop
cmp
sub
sub
popf
adc
mov
lock
push
cmpsl
repnz
fstpt
jg
std
or
in
sbb
xor
xor
ret
inc
mov
mov
xorb
sub
xchg
sbb
std
repnz
push
cmpsb
jg
ljmp
jl
sub
add
rcrl
push
push
cmp
xor
or
xor
jge
fldcw
out
sarl
cs
jecxz
je
pop
sbb
push
and
and
cmpl
jle
jl
push
jl
in
xor
adc
sub
xchg
in
or
mov
fmull
or
int3
pop
adc
dec
mov
sbbb
mov
in
mov
cli
jno
and
les
push
mov
rcll
or
aad
add
cld
mov
sbb
xchg
mov
dec
xor
imulb
ja
xchg
insl
mov
pushf
jl
jmp
mov
adc
clc
mov
in
inc
mov
xchg
adc
aas
rclb
shll
or
push
jge
push
cmp
addl
fdivrs
mov
xchg
movsb
call
xchg
mov
call
jl
mov
mov
add
mov
pop
fdivrl
jle
test
lcall
mov
into
mov
sahf
call
into
cmpsl
xchg
mov
mov
call
inc
mov
aas
push
movsl
cmp
dec
push
mov
lret
jl
mov
icebp
mov
das
addr16
aaa
scas
ror
jle
call
out
pop
sbb
inc
mov
js
and
dec
fs
adc
push
mov
xlat
cmp
int3
mov
sub
ja
out
mov
hlt
clc
js
sarl
cmp
aam
dec
add
fstps
cld
adc
ffreep
mov
popf
shll
mov
mov
fiadds
arpl
sub
test
mov
mov
inc
push
jle
adc
adc
nop
push
loope
sahf
push
pop
call
mov
popf
aam
cmp
aas
push
test
mov
jno
mov
mov
orb
ja
popa
push
daa
jecxz
mov
xor
xchg
sbb
cltd
cltd
std
in
add
out
in
loope
pop
popa
pop
arpl
movsl
into
icebp
test
aam
xlat
fstpt
pop
ja
scas
add
test
cmp
jp
mov
fnstcw
mov
repnz
cwtl
nop
inc
fbstp
je
out
aaa
popf
fldl
repz
mov
xchg
loope
add
push
mov
xlat
in
add
lret
cltd
aaa
ljmp
pop
and
push
add
loope
imul
mov
jno
cs
stc
push
into
mov
inc
cmp
inc
shrl
inc
mov
pop
nop
xor
sub
je
ret
cmpsb
js
outsb
scas
mov
pop
test
push
push
hlt
aaa
stc
test
popf
stos
andl
shll
scas
push
cmc
loop
cmp
pop
xchg
xchg
lea
dec
lcall
pop
in
fprem1
pop
lret
mov
mov
fwait
movsb
or
int
in
shr
das
mov
cmpsl
xchg
popf
mov
test
jnp
lods
or
lcall
xchg
dec
xchg
add
and
mov
arpl
call
cmovge
inc
rolb
or
call
inc
out
mov
inc
cmp
rorb
inc
sbb
ffree
mov
cli
ja
or
inc
cwtl
xchg
jno
out
cmp
ret
mov
push
aaa
dec
mov
pop
scas
faddl
je
mov
dec
lods
sbb
dec
call
shl
in
mov
popl
jl
bound
push
push
add
push
cltd
lret
scas
xor
arpl
cmpsb
ret
stos
sub
push
leave
mov
adc
cmpsl
mov
pusha
movsb
sbb
push
sbb
xchg
sbb
sub
cmp
sub
aas
test
xchg
fwait
mov
cs
xchg
pop
mov
popf
lea
aaa
pop
mov
add
call
sub
mov
mov
xor
push
push
xchg
orb
mov
push
xchg
xor
sbb
pusha
jmp
sbb
jg
lods
push
lock
fs
cmp
cmp
lcall
rcr
push
pushf
jns
add
lea
pushf
pop
ljmp
in
lret
nop
sbb
sbb
adc
ds
lock
scas
gs
add
addr16
pusha
movsl
fld
cmp
popa
fdiv
sti
sub
test
insb
or
dec
bound
push
mov
call
xchg
in
repz
ja
or
scas
mov
imul
shl
lods
mov
add
xchg
push
mov
or
repnz
dec
cmp
shll
adc
dec
aam
lcall
cs
dec
stos
insb
pop
mov
ficompl
and
pop
xor
mov
cld
xchg
je
or
cmpsb
adc
les
pop
hlt
add
add
adcl
testb
shrb
xchg
roll
aam
push
mov
sarb
dec
sub
leave
push
sbb
cmp
mov
push
repnz
mov
icebp
jle
je
sub
shrl
and
movsb
fwait
ret
lods
shlb
dec
adc
mov
sbb
push
cs
pop
lods
daa
cs
bnd
in
sbb
inc
push
loope
fadds
lcall
outsb
dec
xchg
loopne
call
mov
adc
mov
xchg
dec
sub
repnz
jp
adc
outsl
pop
popf
add
fdivrs
or
inc
fldt
ficoms
cmp
pop
pusha
jle
sub
stos
or
sbb
pop
popa
or
xchg
sbb
jle
stc
pop
imul
xchg
mov
xchg
and
pop
inc
sarb
pop
test
sar
sbb
dec
mov
xchg
into
aam
cmc
pop
movsl
mov
scas
and
enter
jae
inc
leave
mov
xchg
mov
push
je
popf
fcomps
or
nop
or
shll
jge
imul
jmp
cmp
jnp
bound
fidivrs
push
add
inc
inc
cmc
adc
pop
inc
push
fmuls
cmpsl
repz
orl
mov
push
arpl
xchg
lret
and
imul
dec
pusha
xchg
cld
imul
add
adc
aam
or
mov
inc
addr16
out
in
inc
mov
push
daa
mov
push
sbb
or
mov
js
and
scas
push
pop
mov
dec
sti
cltd
mov
xchg
dec
adc
and
pop
xor
clc
leave
push
or
popa
aad
scas
push
inc
sbb
jl
imul
sbb
pusha
cld
das
cmp
mov
xchg
cmp
jg
je
push
cmpsb
vmovsldup
dec
dec
push
int3
push
adc
inc
outsb
add
sbb
pop
popa
leave
mov
out
or
sub
in
dec
fs
push
pop
mov
fcompl
xchg
inc
mov
fidivl
cmpl
and
fs
shl
xor
loop
adc
jb
and
adc
repnz
mov
scas
sbb
push
cmpb
test
xchg
dec
ss
ret
fdivrs
jns
push
lcall
and
iret
repz
roll
das
sbb
cmp
mov
addr16
mov
fstl
nop
jle
and
jmp
dec
roll
push
and
dec
test
daa
mov
xor
adc
dec
adc
adc
loope
xchg
addr16
lods
push
int
mov
in
and
pushf
inc
fmul
mov
mov
adc
imul
jp
leave
xchg
cmp
xor
icebp
push
mov
jle
cltd
aam
out
aas
les
insl
inc
or
in
leave
cmp
pop
push
cltd
xchg
push
pop
xor
jg
test
pop
clc
xchg
rcrl
pop
gs
stc
ret
rcll
dec
and
int3
cli
or
inc
std
imul
es
aaa
pop
iret
out
mov
cmp
rcr
stc
sub
adc
xchg
mov
xchg
adc
movsl
pop
pusha
test
cli
loop
hlt
icebp
loope
cmp
pop
mov
mov
mov
pop
std
xor
mov
imul
inc
and
cmp
das
dec
pop
sub
cli
rcr
lods
movsl
aas
lahf
pop
sub
movsb
cmpsb
pop
xor
xor
enter
lea
sbb
bound
cmp
js
mov
movsb
loopne
mov
test
pop
adc
aas
std
xlat
push
sti
stos
dec
sahf
pop
pushf
dec
xor
mov
stos
mov
call
imul
push
subl
add
mov
ret
int3
mov
pop
pop
bound
xor
gs
mov
ret
mov
pop
pop
dec
ret
dec
mov
xor
jecxz
xchg
or
cmpsb
and
xor
test
lock
scas
sbb
movsl
jg
lds
sub
or
cmp
xchg
cmp
imul
or
cmpsl
aad
and
xchg
mov
push
xchg
outsl
dec
sbb
push
jo
popf
adc
out
dec
mov
xor
rcr
rolb
or
xor
push
movsl
pop
sub
or
scas
paddsw
aaa
push
add
imul
and
dec
mov
ficoms
mov
rcll
aas
mov
clc
jle
adc
adc
lcall
add
inc
add
or
cmc
imul
dec
test
push
mov
xchg
push
dec
sbb
repz
push
daa
xor
ret
mov
and
leave
or
and
test
loop
stos
shrb
sbbl
push
inc
stos
and
les
mov
shll
inc
shll
xor
xor
es
push
mov
fwait
fwait
xor
push
fcmovbe
shlb
je
xchg
test
insb
scas
es
sub
mov
inc
mov
mov
stos
or
xor
cwtl
push
add
jg
aad
je
dec
hlt
ja
repz
inc
addr16
jo
in
scas
aad
xlat
dec
insb
iret
fmulp
hlt
jg
push
adc
sub
push
lods
fstcw
lret
je
add
add
aas
gs
bound
push
push
mov
lret
bound
shrl
insb
leave
lods
push
jecxz
daa
push
mov
push
push
and
push
cmp
test
rorb
jbe,pt
mov
jnp
mov
xchg
insb
mov
or
testb
int
out
xchg
data16
outsl
xor
jmp
xchg
mov
call
leave
lods
mov
sub
scas
and
fwait
mov
lret
and
xor
repz
jmp
sub
out
lods
mov
mov
arpl
fwait
imul
add
xor
aad
movsb
pop
pusha
inc
mov
mov
inc
subb
fidivrs
mov
adc
out
fcompl
jo
xchg
mov
or
xchg
xchg
loop
leave
rolb
pop
aaa
sti
sbb
mov
movsb
ds
std
jne
xor
pop
stc
dec
es
push
mov
loop
in
fs
dec
xchg
xor
jecxz
arpl
js
cmp
adc
das
xor
lcall
push
mov
xchg
inc
dec
sahf
into
cmc
lret
mov
andb
popa
test
dec
andl
sub
into
mov
js
xlat
loopne
arpl
dec
push
popa
mov
mov
imul
popa
ret
inc
mov
jmp
lret
movsl
inc
fsubrs
push
mov
mov
and
sub
adc
jae
and
inc
mov
pop
sub
jp
ja
cmp
arpl
sub
ljmp
enter
nop
call
lods
push
lcall
fbld
lea
inc
movsb
mov
pop
mov
or
xchg
stos
jb
mov
push
jl
cwtl
add
jle
mov
mov
pop
cmpsb
jns
aad
roll
cmc
movsl
std
mov
jno
leave
add
cwtl
xchg
gs
iret
repnz
and
andl
sub
jnp
in
pop
xchg
sub
addr16
fwait
pop
out
xor
lods
jecxz
adc
mov
push
jne
or
add
jle
jno
mov
ljmp
push
jmp
or
add
or
or
xor
pop
jae
sbb
mov
test
mull
sub
ja
jmp
gs
lcall
int3
mov
out
jmp
cmp
mov
mov
push
stos
cmp
and
out
mov
xor
xchg
jmp
jb
or
jp
sub
out
push
cmp
fbld
fs
xchg
jne
jecxz
out
lods
jecxz
jo
loop
xchg
mov
das
xchg
or
push
arpl
movsb
push
sub
and
in
push
xor
jns
push
sti
mov
cmp
scas
outsb
pop
aaa
daa
cmp
ret
lods
sbb
adc
push
lret
adc
mov
lock
mov
fdivrp
xchg
add
je
sub
pop
pop
mov
fstpl
cli
push
adc
shrb
lcall
call
std
mov
daa
or
push
and
fisubl
cmp
call
scas
jns
dec
adc
mov
adcb
mov
jg
clc
bound
in
arpl
sub
jno
or
cmp
lods
mov
stos
cwtl
std
jne
inc
push
pop
fs
fisttpl
mov
aaa
inc
or
pop
nop
jmp
adc
and
js
mov
add
movsl
or
fmuls
int3
adc
jb
dec
pop
sub
cmp
push
ljmp
mov
cmpsl
loope
dec
mov
jle
lahf
pop
mov
jp
inc
push
lret
jl
js
lahf
gs
push
cmp
inc
add
add
sbb
inc
sbb
das
cwtl
push
mov
data16
xor
adc
ja
aas
push
aam
decb
insb
daa
lahf
dec
in
ret
popa
and
sbb
lea
test
and
mov
and
aas
call
ds
push
ret
push
pop
sub
mov
push
subl
mov
mov
lods
push
orl
mov
lods
popf
pop
popa
push
mov
movsl
xor
jbe
cltd
push
mov
mov
call
roll
out
out
pop
std
ret
inc
fwait
dec
loop
daa
mov
insb
xor
mov
stc
adc
loop
mov
sbb
in
mov
sahf
decb
mov
cmp
inc
sbbb
xor
ja
lock
xchg
push
mov
aas
aas
out
jb
push
dec
add
sub
lea
cmp
lret
and
adc
mov
mov
pop
sti
pop
add
mov
adc
mov
xchg
push
lahf
fimull
xor
loop
sbb
hlt
jmp
adc
xchg
lds
outsl
aas
inc
pusha
vpunpcklwd
mov
jae
fcmovu
mov
dec
mov
inc
loopne
in
in
adc
sub
mov
jae
adc
push
ljmp
stos
mov
inc
sbb
push
and
inc
cmc
mov
rcll
lock
nop
or
push
jp
and
in
xor
mov
sahf
sbb
mov
popf
cli
push
mov
adc
aam
dec
or
and
stc
sbb
cmpsb
pusha
bound
gs
fisubrl
ficompl
shrb
js
jle
daa
pop
cltd
or
aas
loope
push
dec
inc
fcoms
aad
dec
fcomi
insl
dec
sbb
aad
xchg
call
pop
imul
xchg
das
rolb
push
mov
subb
cwtl
sbb
mov
pop
fstl
aas
push
mov
es
mov
and
fidivs
out
push
xchg
mov
test
stos
fs
in
xchg
jg
stos
mov
arpl
add
aad
scas
iret
push
mov
pop
add
sarb
push
shll
dec
addr16
xlat
add
xchg
inc
or
cs
adc
mov
cmp
xlat
ficoms
mov
pusha
mov
adc
jecxz
lret
push
mov
adc
jno
pop
push
jp
cmpsl
outsb
mov
and
add
jg
inc
ret
pop
xchg
clc
and
aas
and
add
jno
cld
sub
test
inc
fsubs
rorb
adc
pop
add
mov
out
lret
aad
mov
and
cmp
outsl
cmp
fldl2e
mov
out
shlb
testb
lds
adc
mov
out
xor
iret
scas
inc
outsb
mov
cmp
out
pop
sbb
sub
mov
cld
js
nop
push
jle
sbb
xor
fistpl
push
scas
pop
inc
fisubrs
ljmp
nop
add
scas
repz
dec
in
or
xchg
in
sub
xchg
cmp
push
mov
dec
or
std
cmpsl
popa
jle
sub
movsb
loop
aaa
js
inc
fnstsw
out
push
ficompl
mov
mull
inc
jecxz
in
sub
data16
cld
xchg
testb
test
ret
jecxz
insb
jno
and
enter
iret
pop
int
loopne
add
repz
aas
push
xor
shlb
cwtl
in
mov
sub
and
mov
xchg
shll
mov
jp
cs
movsl
and
and
lret
push
out
mov
imul
pop
sub
mov
inc
mov
push
inc
es
in
imul
and
int
push
insl
cmp
mov
daa
pop
and
std
jmp
jg
lods
push
jne
dec
pusha
das
mov
pushf
insl
lret
sahf
out
insl
xor
push
fwait
push
test
push
in
mov
or
lret
ret
dec
xchg
mov
rorl
or
lcall
adc
mov
scas
popf
orb
clc
imul
xacquire
dec
in
xchg
dec
sbb
imul
pop
mov
push
sub
add
add
xchg
int
bound
jmp
lcall
shl
enter
inc
mov
add
lea
fs
adc
xor
mov
cwtl
mov
imul
cli
int
stc
leave
scas
fwait
mov
repnz
xchg
cmp
or
jl
cmp
js
adc
rolb
push
mov
out
inc
dec
pop
inc
sahf
insb
je
xlat
and
pop
in
adc
out
in
aas
xchg
push
fsubs
xlat
stos
test
leave
push
dec
fdivl
nop
hlt
call
cmpsb
imul
sbb
ficoml
fisubrs
xchg
pop
ret
xor
clc
mov
jl
test
jbe
mov
stc
movsl
jne
sbb
out
adc
mov
inc
mov
mov
pop
aad
dec
movsl
and
dec
arpl
fs
sbb
jbe
mov
insl
ret
je
xlat
mov
lret
pop
rcr
or
and
sbb
jge
jbe
and
add
mov
add
dec
test
dec
adc
fiaddl
lahf
xchg
adc
mov
fistps
or
push
inc
fnstenv
leave
clc
add
xchg
insb
sub
repnz
arpl
dec
sahf
cmpsb
js
bound
xor
or
mov
faddl
sub
mov
jecxz
test
sub
addl
sbb
aas
sub
add
std
aas
jbe
push
aaa
sahf
int
push
sbb
dec
and
cmc
add
clc
xchg
adc
fcomip
xor
or
insb
ja
shll
lods
cmp
cld
dec
pop
aaa
ret
movaps
push
adc
ljmp
repz
psrlq
lahf
push
jo
adc
into
insl
xor
nop
mov
repnz
push
or
sbb
jns
push
inc
inc
test
sahf
in
cmp
inc
dec
inc
or
insb
lret
movsb
cmp
enter
xchg
push
mov
lret
lea
cmp
inc
pop
or
sub
mov
push
movsb
mov
dec
xchg
dec
adc
mov
pop
inc
sbb
mov
ret
adc
push
ss
jo
add
cmpsl
subl
dec
add
addl
or
sub
shll
leave
andl
mov
xchg
cs
lds
xor
add
or
popa
lods
mov
adc
sub
je
and
dec
mov
dec
fcmovnbe
push
push
call
pushf
aam
and
push
xor
cli
adc
fsubl
add
inc
outsl
add
pop
push
outsl
arpl
mov
mov
enter
orb
mov
and
and
pop
repnz
js
rcrl
sub
imul
cmp
pop
imull
out
vmovdqa
test
push
test
cmp
or
sar
aaa
addr16
shlb
sbb
sbb
xor
out
inc
movsb
imul
xchg
cmp
imul
mov
ret
or
lods
aaa
scas
in
mov
lahf
leave
movsl
scas
data16
push
add
push
and
xor
adc
dec
xor
adc
mov
push
dec
ret
cmpsl
out
xchg
adc
lds
mov
mov
popf
test
repnz
ffree
ret
mov
inc
test
cmp
cmp
aad
je
clc
pop
fdivs
hlt
push
negb
push
or
repz
mov
dec
mov
adc
and
push
js
pusha
into
movsl
xchg
mov
pop
fiadds
mov
xlat
aam
int
jg
cmp
pop
inc
add
inc
std
mov
js
shrb
and
or
or
add
aaa
sbb
arpl
cmc
outsb
movsb
mov
cmp
mov
jecxz
repz
mov
shrb
push
xor
push
daa
notb
pop
sbb
xchg
pop
or
sar
and
sub
and
loope
test
lcall
sbbb
jmp
cmc
lret
test
in
cmpsl
jmp
cmc
fidivrl
in
cmpsb
dec
and
fiadds
push
dec
xor
add
add
push
dec
push
inc
cs
pop
or
pop
mov
or
mov
out
test
cmp
shr
out
outsb
subl
cltd
stc
loopne
xor
add
cmpsl
or
mov
sub
sbb
mov
or
pop
push
das
cmp
mov
xchg
shl
test
sbb
adc
pop
jecxz
pop
sub
cld
cmp
adc
pop
outsl
jne
call
pop
lret
outsl
call
cltd
call
repnz
xchg
stc
xchg
xchg
push
xchg
add
dec
lock
fstpt
xcrypt-ecb
cmpsl
lret
mov
cmp
mov
aad
dec
xchg
or
cmpsb
inc
jecxz
pop
divl
sub
and
add
or
xor
dec
dec
mov
inc
mov
xor
jo
mov
mov
sub
fptan
hlt
pop
jp
cmp
xor
and
xor
dec
mov
flds
and
loopne
sub
sbb
fmull
push
pop
push
mov
mov
cmp
mov
adc
and
adc
pusha
mov
and
push
scas
and
xchg
mov
xchg
mov
fstpl
adc
mov
fisubrs
cmp
cmpsl
sahf
lock
call
cmp
xor
or
jae
bound
xor
xchg
cld
cs
rcr
jno
push
mov
cmp
fs
adc
je
aad
aas
sahf
add
lcall
lahf
pop
test
nop
push
cwtl
jno
lret
js
pop
mov
or
xchg
jo
insl
ja
negb
push
dec
pop
jge
scas
popf
sub
sbb
mov
cltd
inc
imul
clc
and
test
dec
xlat
arpl
pop
test
or
jno
adc
mov
xor
push
xor
arpl
sub
lcall
mov
mov
in
sub
std
stos
in
subb
insb
sub
mov
cli
enter
addr16
or
mov
mov
orl
pop
sti
ja
push
or
add
rcrb
sub
std
jne
push
push
orb
dec
mov
and
push
fcompl
das
and
inc
mov
insb
andb
scas
addb
aam
cli
and
push
int
repnz
out
popf
aaa
shll
scas
mov
shr
pop
leave
lea
cmp
adc
push
fnsave
mov
or
stc
dec
dec
in
bound
jbe
pop
xchg
dec
push
std
std
in
int3
push
xchg
int
shlb
inc
pop
dec
cld
pop
xor
jns
in
inc
xchg
in
mov
mov
pop
das
in
sub
pushf
adc
cmpl
js
andb
sahf
lock
mov
je
lods
lea
outsb
fidivl
repz
loopne
add
js
stc
pop
ret
lods
pop
mov
or
pop
out
xchg
cmp
pop
xor
popf
push
xchg
fldt
lret
popf
into
frstor
dec
ss
scas
cmp
es
in
add
loope
jle
lret
ljmp
stos
in
das
push
hlt
or
hlt
inc
jmp
sub
repz
int3
icebp
in
jl
lods
or
and
fcmovnbe
adc
fcomps
lea
add
stos
pop
sbb
decb
rolb
inc
add
les
cwtl
aaa
dec
in
fsubl
shlb
sbb
jecxz
idiv
pop
mov
cmp
jl
dec
push
add
hlt
sub
fcmovnu
xchg
int
cmp
in
lea
fwait
lds
lahf
dec
into
jb
sub
testl
shrl
aam
jo
dec
cmp
stos
or
add
pusha
xor
adc
sbb
in
mov
add
jae
or
stos
xor
ja
fcom
dec
adc
mov
das
cmpsl
insl
in
nop
mov
inc
sub
sbb
inc
xchg
stos
loop
dec
fstl
jecxz
mov
bound
cmc
cmp
xor
adc
lcall
pop
xor
popf
mov
pusha
cwtl
push
lahf
aaa
mov
roll
lods
jle
insb
adcl
call
sbb
pop
inc
fnsave
pusha
push
loopne
pop
xchg
outsb
dec
iret
jb
mov
lcall
sahf
jno
cmp
pop
cmp
call
xlat
mov
lahf
enter
mov
mov
pushf
aas
jb
pop
jne
into
fidivrs
jmp
or
cmp
ret
lret
mov
subb
inc
mov
xor
add
movsl
pop
lea
and
jp
cmp
and
dec
fdivr
les
popf
push
rclb
out
push
mov
popf
dec
push
stos
sub
lret
sub
jge
mov
fcomps
mov
sub
cmp
push
mov
fwait
movsl
jmp
mov
arpl
push
sbb
scas
cmpsl
movsl
inc
dec
jns
cmp
mov
das
sbb
adc
out
repz
pop
or
or
fdivrl
mov
mov
jb
xchg
stos
adc
inc
lcall
mov
sarb
xor
mov
mov
ret
pop
addb
pop
idiv
dec
decl
push
mov
inc
and
in
mov
stc
ret
push
ja
dec
mov
ds
rcrb
pop
cmp
mov
fists
std
int
add
cmp
xor
in
sarl
pusha
repnz
sub
cmp
ret
je,pn
mov
or
lea
inc
ds
sti
mov
lock
stc
mov
xchg
test
mov
cmp
pop
add
in
bound
rol
cmp
data16
mov
mov
mov
xor
je
stos
mov
or
mov
push
stc
adc
sbb
inc
fadds
aas
inc
pushf
jns
repnz
lcall
push
ss
cltd
je
xchg
or
dec
mov
push
pop
fwait
sbb
cmpsl
ret
nop
or
push
and
dec
repz
loop
dec
jle
add
adc
and
outsb
sub
mov
sbb
xchg
and
mov
out
adc
jne
inc
or
rclb
dec
in
test
mov
mov
adc
dec
vcvtps2dq
std
add
je
dec
das
fsubrs
enter
or
sarl
aas
pop
movsl
sub
jae
mov
mov
dec
dec
xor
sbb
adc
mov
pop
fidivrs
xor
mov
and
div
out
fs
mov
pop
mov
fstl
lahf
jge
rcll
and
adc
loopne
rorl
pop
adc
movsl
or
cmpsb
sarl
jg
daa
xor
cmp
loope
dec
pop
dec
incb
test
inc
cmp
insl
xchg
scas
push
ret
int3
imul
sub
dec
jp
popf
dec
dec
xor
loop
dec
scas
lahf
dec
ds
add
into
fisttpll
ds
adc
push
xorl
ss
aam
out
out
pop
aam
pop
les
stc
test
jne
sbb
cmp
js
sahf
pushf
dec
scas
lret
repz
push
lret
addr16
cmp
inc
jge
mov
xor
mov
dec
ret
add
clc
out
out
imulb
mov
jge
popa
xchg
mov
adc
popf
dec
cmc
xor
sahf
divb
cmp
pop
gs
mov
nop
stc
cmp
adc
hlt
cld
in
call
jge
outsl
loope
mov
popa
xchg
rcll
cmpsl
push
push
mov
sbb
mov
xor
sub
sub
mov
outsb
sub
fildll
jno
cmp
sbb
xor
xchg
cs
push
pop
scas
pusha
push
pop
sbb
clc
ds
dec
lea
cmpsl
or
sahf
fcomps
loopne
les
dec
fisubs
outsb
ret
dec
int3
and
das
lahf
dec
test
cmp
test
mov
orl
jae
xchg
mov
jnp
nop
inc
mov
mov
aad
mov
addr16
addr16
mov
pop
lahf
stos
mov
mov
lea
test
push
add
jne
adc
sub
fdivrs
in
xchg
cmc
xor
push
sub
xor
popf
jge
cli
cmp
adc
and
push
mov
addr16
dec
icebp
jne
imul
sub
pop
dec
vmread
dec
les
and
cmp
ret
rcrb
push
push
push
aam
pop
aaa
xor
int3
jo
cmc
sub
add
pop
ds
movsl
inc
mov
inc
push
jns
sbb
adc
jno
cmc
mov
fucomp
and
daa
out
pop
jg
or
out
jb
pop
pop
mov
push
decl
pop
clc
pop
push
mov
sti
cmpsb
scas
aas
or
call
pop
jae
sub
mov
into
add
mov
jmp
fldt
sbb
jle
loope
mov
xor
testl
sub
xor
in
shrl
loop
or
lret
sbb
pop
outsb
pop
pop
nop
testb
lds
fcomps
push
insl
adc
add
xlat
jecxz
das
lods
mov
enter
sahf
lods
push
mov
ja
xor
xor
popf
push
mov
pop
sahf
pop
pop
pop
cmp
add
sbb
cmp
call
push
mov
xchg
add
push
daa
punpcklwd
mov
xor
popf
les
jmp
scas
ret
fmul
xchg
in
adc
hlt
xchg
int
xchg
ret
lret
mov
ret
push
xlat
imul
adc
cltd
scas
repz
hlt
movsl
repnz
dec
movlhps
jecxz
outsb
mov
lea
jns
jbe
ss
or
xchg
cmc
addb
rcrb
push
pop
lds
icebp
js
in
movsb
push
push
mov
adc
aas
sbb
and
xor
aam
pop
sub
fistps
pop
inc
enter
inc
outsb
lods
loopne
dec
and
ss
sub
std
mov
rclb
adc
in
es
test
ret
or
inc
jl
pop
push
sbb
shl
mov
in
rcl
outsl
push
sub
mov
jge
sub
xchg
lods
das
rorl
jb
xor
ficompl
mov
adc
ret
sbb
xor
shl
js
out
mov
pop
pop
andl
into
xor
and
sbb
and
cmp
pusha
insb
enter
xchg
inc
test
mov
ljmp
shlb
sub
lret
out
cltd
sbb
or
xor
fwait
scas
shlb
rcrl
imul
cmpsb
push
mov
mov
outsb
fwait
xor
fdivl
xor
repz
dec
dec
dec
loopne
ror
test
mov
movsb
sbb
jecxz
loope
mov
cmpsl
sahf
sub
jbe
pop
dec
pop
jae
pop
scas
jg
pop
dec
fbstp
jmp
dec
cmpsl
jno
icebp
loop
cwtl
icebp
sub
stos
mov
dec
xchg
std
test
or
sbbl
std
add
sbb
adc
mov
outsl
mov
ret
sub
adcl
outsb
ret
dec
jmp
xlat
les
fsubs
mov
out
iret
js
pop
cmp
out
jnp
out
testl
sbb
push
std
sahf
push
inc
cld
stos
xor
push
push
dec
aaa
movd
xlat
test
es
scas
stc
fyl2x
fdivl
pop
cs
push
mov
dec
mov
adc
imul
mov
mov
out
out
movsl
jecxz
and
inc
adc
lods
fdivrs
cld
icebp
sbb
sbb
dec
pop
xchg
xchg
or
dec
cli
stos
xchg
sbb
rorb
incl
jge
pop
sub
jne
in
push
push
sub
add
shll
cmp
push
cwtl
out
mov
mov
icebp
lahf
push
sub
ret
shll
lret
popa
sub
cs
fstl
sbb
outsl
insb
pop
inc
or
sbb
xchg
lret
adc
loop
jbe
dec
dec
xchg
xor
std
dec
or
inc
stos
lock
adc
cmp
scas
pop
sub
icebp
repz
inc
push
lods
dec
jp
pop
push
insl
cmp
loop
ds
les
jg
outsl
cli
sub
push
outsb
dec
ds
inc
cmp
rep
lret
adc
push
pop
sbb
xchg
aas
pop
fistps
pop
cmp
sbb
or
fcomi
add
jo
dec
fdivrs
loope
repnz
dec
pextrw
mov
test
mov
xor
ror
push
nop
scas
jecxz
fimuls
adc
fmuls
ror
sahf
sbbb
fisttpll
mov
movsl
lret
mov
add
push
add
inc
lock
adc
insl
mov
in
sbb
sbb
lret
mov
cwtl
xchg
ljmp
inc
sbb
or
xor
fmuls
enter
push
loopne
js
in
jmp
mov
mov
push
dec
or
ret
adc
fxch
sub
arpl
adc
sbb
sbb
mov
mov
pop
sahf
jno
pop
cmp
pop
cmp
scas
add
out
dec
cwtl
mov
and
jmp
int3
cmp
or
test
cltd
cmp
add
xchg
xchg
cmp
in
pop
push
fadd
sub
loope
loop
inc
clc
mov
bound
push
mov
mov
mov
inc
rolb
fisubl
inc
in
push
mov
test
mov
les
push
lock
or
repnz
mov
nop
mov
mov
xor
jae
lods
je
jb
sub
jns
aad
iret
jae
mov
dec
pop
xchg
inc
sarl
xor
ljmp
xchg
jecxz
jl
addr16
lea
sbb
rcrb
int
mov
shlb
adcl
faddl
lods
xlat
negl
push
pmulhw
inc
scas
loop
cmp
dec
outsb
adc
mov
leave
jg
inc
mov
mov
je
mov
fisttpl
add
mov
push
sbb
mov
int3
mov
mov
inc
decl
out
cmc
scas
out
fs
popf
in
rclb
mov
lods
mov
or
push
into
dec
inc
rcrb
cmp
insl
mov
fsubp
push
les
shll
jnp
mov
lds
push
outsb
test
push
mov
sub
pop
icebp
pop
cmpb
nop
sahf
stos
rol
incb
sbb
lods
cs
fisubl
stc
sbb
jp
mov
push
frstor
push
scas
push
es
rorl
push
es
ds
ret
dec
xlat
add
lock
lock
pop
loop
push
xchg
std
fidivrl
jge
jnp
mov
jns
mov
cmp
add
xchg
loope
jp
fwait
sbb
test
sub
xchg
mov
aas
cmc
inc
shlb
xchg
push
jne
fisttpl
stos
xchg
mov
add
xchg
dec
ljmp
not
push
adc
rorb
push
aad
and
movsl
jl
or
sub
push
loopne
pop
cmpsl
xchg
xchg
arpl
sbb
and
pop
sbb
adc
shlb
fldt
les
pop
ljmp
dec
mov
stos
movsl
cmp
lds
imul
cmpsl
rcrb
xor
adc
add
je,pt
mov
nop
xchg
ret
inc
fwait
mov
test
inc
mov
imul
cltd
repz
or
adc
sub
and
enter
fdiv
data16
ficompl
int
fucom
mov
jbe
out
cli
inc
sbb
rcll
stos
pop
addr16
int
aam
movsb
lea
jb
outsb
and
stos
dec
decb
cli
call
inc
push
cld
stc
gs
xchg
mov
xchg
mov
push
call
addl
test
subl
xchg
xchg
sbb
sub
cwtl
inc
sbb
xor
cs
sub
in
aad
sub
pop
and
jbe
enter
or
inc
aad
inc
cwtl
xchg
push
dec
lahf
mov
cmc
mov
and
leave
out
adc
mov
divb
insb
jbe
les
mov
sub
mov
jp
pop
in
sub
mov
jns
in
mov
sub
aas
iret
lock
sbb
movsl
in
fldenv
jg
jnp
mov
add
xor
mov
adc
sbb
pop
and
mov
decb
pushf
cmpsb
call
sub
inc
fiadds
mov
push
call
add
fadd
jmp
loopne
push
mov
push
adc
adc
adc
mov
mov
pop
out
pop
xlat
sahf
jno
push
jge
sti
loop
out
comiss
mov
pop
lods
lret
jl
xlat
stos
cmp
adc
mov
add
and
add
mov
je
xor
push
ret
cmp
inc
and
mov
sbbl
es
and
mov
imul
fs
ja
adcb
pop
xor
jmp
repnz
jno
or
mov
jp
pop
jns
xlat
dec
les
jb
testb
je
sbb
aad
mov
jne
inc
mov
sbb
mov
or
add
sahf
outsl
rcl
repnz
mov
fucomi
dec
scas
sbb
pop
int
inc
add
or
test
js
fisubs
cltd
mov
push
test
jno
mov
ljmp
mov
push
fidivrs
jp
iret
incb
std
outsb
fbstp
xchg
lods
push
xchg
dec
sub
scas
jecxz
push
cmp
sahf
mov
loope
mov
fsubrl
sub
push
mov
sar
pop
xchg
adc
or
pop
sub
jb
cmp
lret
ret
xchg
dec
adc
int3
shlb
and
stos
cmp
data16
insb
into
and
and
jbe
or
jbe
mov
stos
and
cwtl
jo
mov
sub
dec
dec
sbb
aam
in
es
sbb
ja
and
fisttpll
adc
cmpsb
jne
add
std
jno
stos
imul
bound
and
inc
out
cmpsl
or
and
cmp
add
or
pop
or
or
out
cmpsl
inc
pop
adc
cs
into
dec
ljmp
mov
addr16
push
loopne
and
push
mov
xchg
xor
push
shll
mov
test
in
pop
mov
pop
pushf
push
stc
xabort
sbb
xchg
pop
outsl
imul
arpl
xor
adc
or
lods
push
sbb
jne
sub
inc
dec
daa
test
pop
icebp
rol
lods
dec
ss
mov
in
lock
dec
mov
xor
outsb
push
inc
mov
out
imul
mov
roll
mov
mov
ja
mov
lods
sbb
je
sarl
mov
jb
jecxz
cmpsl
inc
fidivs
fcoml
je
ret
aaa
adcb
jge
jb
xor
jnp
imul
iret
dec
or
cmp
xor
aaa
rcl
cmp
and
xchg
outsb
lds
sbb
sbb
ficoml
xor
adc
push
and
shlb
test
lret
rcr
jecxz
and
cmp
xchg
aaa
ss
cmpsb
popf
nop
sub
sub
jo
js
mov
enter
dec
test
filds
cmp
add
cmpsb
ljmp
dec
fsts
mov
pextrw
cmp
pushf
dec
pop
xchg
out
idivl
std
mov
incb
lods
inc
jg
and
cs
mov
or
insl
jmp
pop
popa
inc
push
mov
and
mov
inc
in
jae
sarl
sbb
sar
scas
data16
jecxz
pop
adcb
subb
int3
in
mov
fabs
aas
mov
push
sub
push
or
out
mov
adc
leave
push
or
sub
ds
and
test
xor
add
clc
push
adc
cli
in
fistpl
aad
pop
rorl
std
jno
lods
mov
pop
gs
dec
xor
pop
dec
push
adc
insl
jge
dec
inc
mov
pop
xor
push
enter
fsubrl
fists
dec
scas
mov
dec
in
cmpb
dec
mov
add
repz
sbb
push
xchg
pop
fs
mov
addr16
fisubrl
decb
rcrb
and
outsl
push
ja
mov
pop
jl
test
inc
sbb
js
stos
push
dec
sbb
jle
dec
xchg
dec
jns
push
movsb
mov
pop
ljmp
movsb
jns
jo
cmp
stos
dec
inc
icebp
pop
sub
jnp
push
in
es
jns
xor
enter
sub
jmp
mov
cmp
je
hlt
inc
fmul
imul
push
mov
test
sar
insl
aaa
mov
in
mov
xor
jge
flds
in
sbb
sub
notl
scas
mov
out
fldenv
push
or
aad
cmp
aam
push
jmp
mov
mov
int
sub
jp
xchg
inc
sti
aaa
loop
cltd
jnp
fs
or
fisubrl
and
cmp
cmpsl
push
push
and
add
dec
xor
jno
movsl
and
sub
insb
xchg
adc
les
neg
xchg
jno
test
movsl
push
popf
xchg
cmp
add
in
shl
xchg
xor
xor
xacquire
lcall
insb
adc
xchg
jl
ret
pop
out
clc
add
shrb
jl
cmp
xor
fdivl
mov
xor
sub
pop
shlb
aas
dec
les
jno
mov
std
leave
mov
les
int
fbld
addr16
test
inc
inc
mov
ret
fcmovbe
mov
aaa
jbe
jns
ret
ret
addb
orl
shll
fmull
xor
icebp
mov
mov
or
mov
mov
inc
fmull
nop
leave
xor
je
add
push
xor
inc
pop
mov
bound
sarb
mov
cs
inc
call
xlat
cmp
pushf
mov
mov
sub
jne
pop
dec
daa
fs
mov
inc
mov
andl
inc
pop
fs
ljmp
pop
mov
mov
mov
bound
cld
es
daa
xor
jle
push
jge
rcl
mov
and
xchg
jne
iret
adc
sti
fsts
inc
xlat
ja
push
add
jno
dec
popf
outsb
jae
jmp
mov
movsb
in
mov
push
pop
inc
gs
outsl
inc
pop
dec
ficomps
inc
andb
rcrb
fidivrl
push
dec
inc
jmp
in
shrl
push
fimuls
rcl
notl
adc
stc
scas
push
cltd
stos
push
inc
dec
adc
clc
ss
fidivs
sub
shlb
inc
xchg
sbb
add
mov
into
jge
pop
mov
pop
sub
movsl
sub
mov
hlt
xor
mov
mov
mov
lds
mov
pop
das
sbb
adcb
sub
pop
dec
lods
fimull
pop
inc
cwtl
sbb
sbb
add
stos
xchg
push
push
ret
data16
and
out
nop
nop
cmp
fwait
mov
dec
sbb
ljmp
out
mov
addl
adc
sub
icebp
sub
test
inc
loopne
inc
stos
jae
or
call
jbe
jp
mov
jae
inc
jnp
leave
out
lds
push
cmp
mov
pop
and
mov
sahf
lret
adc
shlb
inc
xor
jmp
jo
rclb
xor
fs
in
add
or
jp
ljmp
xor
pop
in
mov
bound
sub
sti
sar
and
inc
div
pop
mov
cmp
inc
je
mov
rcr
pushl
and
mov
pop
mov
mov
xor
pop
clc
sub
jns
dec
add
int
das
add
in
push
push
mov
inc
fimull
repz
mov
sub
xchg
sbbb
push
cmpsb
rclb
dec
cmpsl
in
jb
dec
imul
and
rcl
bound
cmpsl
push
das
pop
sbb
mov
dec
mov
rorl
adc
xchg
push
xor
lret
mov
jbe
and
mov
mov
iret
jecxz
jl
mov
push
cmp
inc
xchg
ds
ja
sub
lahf
mov
xchg
push
iret
ds
out
insb
test
mov
ja
xchg
inc
not
push
xchg
adc
stos
mov
or
or
pop
shlb
lret
js
pop
xchg
dec
outsb
into
or
in
sub
in
aaa
or
out
jge
inc
cmc
jge
push
mov
test
test
aad
les
loope
test
adc
js
and
xchg
sub
and
adc
loope
movsb
in
dec
popf
mov
sbb
mov
mov
jo
jo
adc
insl
pop
inc
lahf
in
out
lds
pushf
sub
enter
lcall
xchg
and
mov
push
rcll
addb
aam
dec
rcl
imul
loop
sbb
push
inc
dec
mull
sahf
ljmp
orl
lods
xor
repz
pop
imul
push
rolb
int
iret
stos
mov
ret
pop
rcl
mov
inc
pushf
fwait
jne
test
mov
enter
stos
sub
xor
xor
scas
xchg
fiaddl
sbb
insb
or
jp
ret
sbb
push
adc
aaa
ds
mov
lock
scas
inc
pop
es
xchg
pop
fs
fsts
imul
adc
and
adcb
mov
stos
out
pop
pop
fldt
sbbl
mov
push
neg
mov
or
cmc
mov
lea
or
xchg
pop
xor
clc
xchg
fcmovu
xor
test
and
push
xchg
testb
cmpl
xchg
cwtl
ds
xor
dec
sbb
shlb
jmp
jnp
je
adc
jbe
push
scas
sub
mov
jb
mov
and
das
shrl
mov
jne
mov
es
jl
stos
cmp
leave
imul
cmp
lods
cld
sbb
loop
fistps
jne
dec
addl
and
sbb
sahf
cmpsl
movsb
sbb
icebp
mov
push
mov
adc
jp
xchg
jle
aaa
pop
jmp
imul
add
cltd
xor
repz
jmp
dec
jecxz
and
pop
stos
test
sub
cmp
nop
mov
loopne
adc
mov
nop
pslld
sub
sub
test
add
and
sub
jge
cmp
icebp
cwtl
repz
fwait
mov
inc
xchg
into
push
pusha
adc
push
mov
jmp
jae
mov
sbb
out
jge
sti
pop
mov
jo
xchg
sub
jecxz
out
fiadds
bound
sub
mov
cld
mov
add
pusha
lahf
push
inc
dec
subl
jb
mov
xchg
mov
test
mov
adc
push
push
xlat
loop
pop
mov
iret
xor
mov
in
hlt
fcompl
sarl
push
fcmovnu
jo
inc
push
inc
div
push
sahf
fistpl
dec
leave
sbb
aaa
dec
xchg
cmp
adc
fstpl
gs
enter
dec
mov
xchg
jae
jecxz
arpl
lcall
clc
xchg
iret
aad
ds
inc
sub
movsl
lods
jle
add
cli
inc
test
aas
mul
dec
mov
jbe
movsb
cltd
test
add
push
adc
hlt
add
mov
mov
icebp
inc
mov
jns
push
lret
clc
sub
jg
push
pop
or
aas
xor
mov
out
popf
insb
add
arpl
pusha
clc
pop
lods
mov
fwait
inc
push
ror
jecxz
sub
fwait
nop
lds
cmp
add
sub
add
ja
sbb
test
and
jmp
test
repnz
lahf
sub
push
negl
jbe
leave
add
leave
lds
mul
fisubrl
sub
adc
jle
jle
mov
and
xchg
jns
and
clc
iret
ret
xor
stc
aaa
xchg
or
xor
mov
inc
mov
ljmp
gs
xchg
and
dec
ljmp
mov
ss
mov
pushf
paddw
jnp
enter
arpl
jbe
add
int
jmp
push
popf
push
scas
xlat
cli
cmpsl
push
das
xlat
icebp
subb
sbb
jmp
movsl
push
xor
xor
or
fstpl
into
decb
test
mov
fisubl
std
and
sub
jb
pop
add
icebp
call
loope
jo
test
adc
jp
sar
dec
mov
sbb
lcall
push
lret
push
lahf
negb
pop
fwait
mov
call
and
arpl
and
sbb
inc
sub
xor
or
stc
sub
xchg
popf
sub
mov
ss
iret
pop
xor
outsb
and
inc
fmulp
out
inc
sub
adc
push
add
fimull
pushf
pop
and
dec
lcall
aas
mov
or
xorl
scas
insl
sbb
add
fnstsw
mov
iret
nop
inc
inc
jbe
xchg
and
test
push
popf
push
sub
adc
sub
mov
pusha
js
xor
dec
cld
push
insl
cli
in
int
mov
sti
xchg
insb
adc
sbb
and
pushf
sub
test
dec
decl
cwtl
lds
sbb
es
jl
repz
cmp
pop
dec
jge
and
mov
jl
stc
dec
push
inc
push
fcmovu
pop
iret
dec
sbb
sahf
jbe
adc
outsb
in
gs
imul
mov
mov
xchg
mov
xchg
notw
stc
rep
xchg
sbb
and
fadd
add
push
aam
addr16
jl
pop
loopne
push
test
dec
rcrb
fistps
jecxz
xchg
rclb
loope
lods
or
sub
loope
outsl
inc
in
leave
call
out
xchg
fsubrs
or
cmp
fadds
xor
imul
adc
jnp
stos
sahf
cli
in
push
push
addl
dec
add
add
test
push
xchg
dec
std
cld
xchg
test
sbb
push
jmp
cmp
push
in
dec
push
xor
mov
xchg
or
sbb
decl
xchg
les
aas
insb
insb
xchg
shrb
sub
mov
shll
shll
add
jb
cmp
jge
xor
mov
xor
ret
add
rclb
lahf
testb
mov
adc
lahf
shr
sti
pusha
mov
pop
and
xchg
int
push
pop
movsb
out
fiadds
mov
popa
inc
sub
cld
scas
mov
leave
fs
mov
sub
push
scas
cmpsl
sbb
lcall
or
pop
lock
lahf
mov
movsb
sub
adc
xchg
enter
xor
popf
sbb
inc
xor
and
xchg
sub
ljmp
dec
cltd
mov
mov
lcall
jo
fs
mov
scas
sbb
push
inc
mov
sbb
movsb
and
pop
out
mov
cmp
movsl
call
shlb
cwtl
cwtl
adc
adc
div
jecxz
in
fs
into
jno
std
out
jb
cli
out
mov
and
sbb
imul
fld
popl
or
stos
fs
addb
add
pop
lods
sbb
outsl
adcl
movsb
popf
lret
cwtl
mov
dec
fs
stos
and
testl
jg
arpl
test
fnstcw
orb
imul
push
cmp
js
popa
push
inc
fdivrl
xchg
shll
mov
out
fistl
push
roll
aam
imul
hlt
inc
add
inc
mov
jne
repnz
call
cmpsb
xchg
loope
sbb
enter
mov
push
pop
mov
adc
xor
mov
mov
lds
int3
in
inc
lods
xchg
inc
js
jp
inc
jne
jnp
in
dec
cmpsl
jecxz
daa
xor
dec
xor
out
lret
jbe
int
ficoml
lock
divl
out
sbb
jns
sbb
mov
out
push
inc
xchg
lret
outsb
adc
lods
dec
repnz
xchg
adc
aaa
ret
push
cwtl
test
sbb
mov
dec
pop
popf
mov
aaa
jae
lea
aam
out
push
mov
cmc
pop
sbb
mov
mov
dec
mov
cmp
jne
xchg
fisubl
jbe
xchg
or
pop
sbb
mov
pop
add
xchg
fcoms
mov
xchg
pop
and
jo
sub
cmp
lahf
push
jbe
pop
xchg
mov
jmp
push
inc
pop
add
out
sti
fwait
sbb
ja
adc
mov
push
push
cld
mov
jbe
lods
rolb
xchg
add
aaa
out
inc
sbb
jno,pt
inc
ret
cwtl
inc
mov
mov
mov
mov
adc
test
ja
leave
cltd
insb
rolb
es
jg
je
push
lock
and
adc
mov
lock
add
sub
adc
adc
dec
push
xchg
ret
pushf
dec
mov
sub
lods
popf
mov
adc
inc
dec
push
xchg
pop
and
cmp
lcall
push
test
mov
in
mov
out
movsb
fldt
iret
lcall
mov
fcompl
mov
mov
insb
in
or
in
dec
sub
pop
fildl
fwait
inc
rcrb
or
insl
push
add
jne
pop
pop
dec
jecxz
ljmp
cmc
jp
and
cmp
add
dec
and
loopne
repnz
lret
stc
pop
adc
add
int
mov
subl
outsl
lods
insb
cmp
aaa
mov
sbb
push
mov
gs
dec
lret
mov
testl
sbb
add
loop
xlat
push
push
loopne
inc
pop
insb
jmp
sarb
pop
scas
jnp
std
xchg
mov
mov
cmpsl
xor
out
cmp
adc
xor
cs
stos
call
and
adc
cmpsl
adc
and
inc
xchg
imul
adc
add
rol
cmp
push
sub
mov
sub
das
mov
push
ficoms
scas
call
loope
push
testb
lods
add
or
xchg
mov
jecxz
mov
cmpsl
mov
push
loope
xchg
ret
or
lods
dec
jecxz
fadds
rolb
cmp
xchg
sbb
sahf
test
das
adc
fbstp
adc
mov
pushf
pop
sete
cli
outsb
rcrl
aad
jae
or
mov
cmp
cmpl
push
push
mov
cltd
andl
jae
cltd
push
xor
cmp
dec
in
loop
xorl
or
jnp
jecxz
sub
sub
sbb
pop
mov
xchg
pop
bndldx
adc
incb
out
ret
sub
push
fsubrs
sub
xchg
add
scas
jo
int
mov
cld
and
cld
dec
push
push
mov
push
mov
fbstp
mov
pop
stos
lock
movb
incl
jnp
mov
sbb
ja
adc
gs
lcall
cmp
sub
xchg
jns
pop
aam
jle
js
pushf
xchg
out
outsb
cmpsl
arpl
cltd
inc
push
and
jmp
sbb
test
imul
fisttpl
popa
faddl
lock
ja
dec
out
xlat
dec
and
inc
lods
xchg
or
lock
pop
arpl
addr16
jmp
sub
push
rcrl
std
adc
or
out
inc
jl
mov
call
iret
std
sbb
adc
addl
and
add
pop
jge
jge
hlt
mov
xor
cmc
dec
sbb
cmp
aam
scas
je
in
add
mov
mov
pop
pop
cmp
mov
repz
jae
push
pop
mov
xchg
xchg
bound
mov
fwait
into
lcall
and
cmp
push
inc
push
icebp
push
test
push
pushf
sub
adcl
mov
sub
mov
mov
int3
dec
enter
cmp
in
mov
mov
xchg
in
push
push
ror
in
mov
sub
push
subb
out
jae
jge
out
aam
pop
mov
pusha
sbb
mov
cli
or
xchg
addr16
sahf
enter
fs
sub
inc
aaa
pop
mov
loop
int3
fldt
cmpsl
call
popf
mov
add
out
int3
lret
push
out
insb
fsub
xor
xor
gs
add
adc
hlt
ljmp
xor
div
cld
push
lahf
cmp
movsb
int3
sbb
aam
and
dec
push
arpl
arpl
mov
imul
push
xor
inc
lock
out
stc
mov
in
and
fwait
out
mov
cltd
aam
shll
push
sub
es
pop
mov
adc
jnp
lea
or
aaa
xor
inc
cmp
sub
add
mov
shll
lds
inc
leave
hlt
pop
dec
push
lock
in
push
gs
xchg
push
orb
mov
inc
jne
movsl
jmp
aam
idiv
rcr
push
ret
rcll
xorl
push
dec
fisubrs
push
arpl
lahf
mov
mov
inc
and
inc
ja
hlt
shll
sub
sub
dec
lahf
or
jle
lds
mov
sbb
imul
loope
or
adc
jns
rcl
enter
lock
push
mov
fwait
adc
push
lock
ret
sub
mov
gs
lods
jns
add
xchg
push
mov
insb
outsb
popf
mov
test
enter
and
and
insb
idiv
cmp
mov
leave
jno
ljmp
stos
cmc
aam
xor
add
loopne
icebp
xchg
test
mov
mov
jmp
out
mov
mov
xor
xchg
rolb
adc
repz
and
jbe
adc
jl
mov
and
mov
adc
je
dec
movsl
lret
mov
pop
mov
or
or
adc
dec
enter
jge
subb
fimuls
dec
in
mov
cltd
aas
jns
push
or
je
pop
inc
pop
fst
inc
std
add
pop
lret
pushf
ror
mov
and
xor
mov
mov
sub
repnz
subl
test
and
or
inc
mov
dec
sub
out
push
and
out
inc
cmp
rclb
dec
loope
xor
xchg
unpckhpd
out
cltd
push
inc
jne
jne
lds
loop
push
dec
xlat
negb
loop
xor
mov
loop
mov
or
adc
in
loopne
push
call
inc
cs
add
sbb
mov
pop
stos
pop
fldenv
mov
sub
cli
cmp
push
aaa
sahf
in
sarb
dec
or
xor
sub
lcall
fsubrl
leave
mov
lds
std
or
cmpsb
outsl
mov
cmp
into
and
jg
push
mov
mov
js
in
xchg
push
ja
fcomip
sarb
pop
pop
rcrb
and
ja
pop
cmpsb
sahf
xchg
jns
jb
mov
jb
test
test
jae
imul
mov
test
add
jne
xchg
je,pt
js
rcll
or
fnsave
mov
push
xor
add
adc
sub
pop
repz
cs
add
xchg
subl
or
xchg
push
sbb
das
out
imul
mov
lea
xor
iret
popf
add
sahf
loope
cmp
jo
ss
cltd
into
imull
ret
or
inc
push
xchg
dec
inc
adc
insb
adc
or
sahf
ljmp
mov
aam
lea
int3
xchg
xor
jle
pop
cs
repz
xchg
dec
sub
adc
or
movsl
pop
mov
mov
mov
xchg
pop
cld
cmpsb
mov
mov
repz
or
inc
pop
cltd
aam
mov
dec
or
nop
and
add
pop
adc
cmp
mov
arpl
mov
fists
xchg
push
int
mov
outsb
pop
mov
shl
inc
push
test
xchg
ffree
xchg
sbb
pop
sbb
push
dec
rorl
sar
cmpsb
push
int
dec
les
frstor
mov
leave
inc
xchg
and
xor
imul
icebp
jmp
call
cmp
fwait
movl
insb
sub
je
mov
pop
cmp
movsb
rolb
push
lret
cmp
push
pop
inc
mov
mov
and
mov
bound
cmpsb
pop
imul
pop
enter
xchg
xchg
cmp
lret
jge
mov
inc
or
xor
or
mov
shl
mov
jne
and
mov
and
lds
jmp
xchg
mov
es
push
xchg
std
test
pop
shlb
dec
std
pop
dec
sub
cmp
dec
xor
mov
pusha
repz
out
sub
mov
jecxz
push
xchg
inc
les
xlat
iret
sub
push
lret
enter
in
lea
inc
push
or
mov
jle
inc
push
jge
sub
stc
popf
cmpb
sahf
fs
in
add
push
insb
test
jnp
jnp
aaa
push
jno
jl
inc
push
push
inc
frstor
push
test
test
mov
cli
pop
mov
push
mov
mov
das
repnz
push
mov
inc
adc
cmp
fs
icebp
cwtl
lahf
xchg
ja
fs
push
sahf
int3
enter
fstpt
inc
sub
pop
lods
fs
lret
out
movsb
mov
aaa
jne
mov
cmp
out
movsl
imul
mov
add
les
mov
std
dec
sub
mov
mov
push
mov
imul
addr16
xor
or
into
jle
into
aam
add
stos
repz
or
popa
negb
pop
lret
call
jbe
xor
inc
sahf
pop
mov
add
ret
inc
iret
mov
push
rolb
xor
push
int3
xchg
dec
fstl
aad
xchg
arpl
mov
push
rorb
sub
lret
dec
rcrb
sbb
lea
dec
fldenv
push
int
aaa
movsb
out
into
pusha
mov
ss
adc
dec
push
add
outsb
dec
fisubs
add
and
arpl
aas
dec
inc
jl
call
test
aas
mov
out
sbb
fsubrs
xchg
jl
jecxz
cwtl
mov
push
cmp
mul
fistps
rcll
test
shlb
inc
mov
jno
and
adc
add
leave
mov
mov
xor
sub
xchg
call
push
jmp
sub
sahf
xchg
dec
xchg
dec
pop
inc
sbb
add
xor
cmc
out
inc
pop
add
movsb
mov
adcb
mov
cmp
mov
lea
add
pusha
and
loop
loope
shlb
ret
xor
inc
pop
xchg
cmp
stos
test
jmp
ja
mov
popf
fdivl
imul
adc
xor
push
or
inc
adc
pop
daa
into
mov
and
sahf
data16
popa
cli
mov
jp
dec
ret
frstor
cmp
bound
cwtl
das
xchg
sub
push
repnz
or
and
xchg
imul
adc
popf
adc
outsl
mov
test
adc
mov
dec
sbb
cmp
out
mov
sbb
mov
xchg
das
iret
mov
adcb
les
orb
and
mov
out
push
je
inc
xor
dec
mov
inc
sub
mov
jp
daa
jle
adc
cmc
lret
scas
pop
and
scas
mov
push
push
add
out
xchg
push
push
daa
fldenv
leave
sahf
sarb
cmp
cltd
jmp
cmp
lret
pop
adc
or
or
add
mov
fiadds
mov
icebp
dec
add
popf
loop
fcompl
out
je
pop
sub
push
mov
push
xchg
mov
lea
mov
loopne
mov
cld
mov
das
decl
mov
das
xchg
lret
push
dec
std
andb
ja
push
jg
jns
and
insb
enter
scas
jne
jp
fstps
mov
sahf
adc
stos
adc
and
push
mov
rol
sub
sub
out
push
cld
test
push
movsb
lahf
cmc
add
clc
out
mov
or
cmc
mov
js
mov
inc
insb
jne
push
insl
leave
jle
push
mov
inc
stos
lds
or
jae
xchg
out
rclb
sbbb
mov
in
pop
pop
call
sbb
shr
imul
nop
test
out
lods
mov
ficomps
ret
int
ret
cli
in
loopne
movsb
pop
and
leave
mov
jbe
mov
js
shlb
cmpsb
repnz
mov
pusha
fsts
jb
lahf
stos
dec
pop
test
jge
lods
int
jb
adc
ja
pop
mov
lods
clc
and
cwtl
and
in
push
not
push
orl
sbb
adc
sub
call
mov
mov
aas
adcb
mov
out
movb
jle
dec
pop
cwtl
xlat
cmp
les
lahf
lock
sbb
cli
fisttps
sti
movhps
cmc
push
das
sar
dec
cwtl
test
test
mov
mov
sbb
insl
rcrl
jge
dec
jbe
and
add
mov
cmpsb
inc
pushf
fdivrs
call
cmp
mov
xchg
push
mov
mov
jp
in
or
push
adc
ret
xor
test
insl
push
add
push
test
int3
sti
dec
fnsave
lods
pushf
das
aad
dec
sbb
dec
dec
shrb
neg
or
loop
inc
fs
shrl
xchg
sbb
out
clc
cmpsl
mov
adc
enter
nop
xchg
pop
sub
mov
jb
push
scas
out
inc
aas
mov
mov
scas
mov
fxch
subb
inc
jge
popa
sar
push
jne
cld
push
adc
cltd
iret
sbb
adc
loopne
mov
and
stc
jno
mov
loope
es
repz
pop
divl
je
pop
xchg
movzwl
addr16
xor
dec
lcall
aaa
xchg
xor
push
cmp
es
inc
shll
pop
jmp
scas
or
and
int
pop
add
stc
jne
mov
pusha
add
stos
iret
inc
xchg
aam
or
dec
shrb
adc
mov
in
pop
lret
jb
aaa
sub
js
test
mov
hlt
roll
pop
pop
mov
insl
hlt
push
aam
cmp
push
cwtl
xor
ret
sbb
ja
subb
cmp
loop
sbb
xor
mov
jmp
push
jno
pop
sub
leave
jne
pusha
nop
mov
or
xchg
cmp
and
fists
fisttps
sub
and
sub
pop
int
adc
pop
inc
and
adc
xchg
xor
test
mov
out
int3
jns
test
jmp
and
pop
lcall
test
daa
cltd
cmp
in
jl
mov
add
icebp
sbb
inc
lret
pusha
mov
push
or
ss
negb
xlat
pop
cs
adc
dec
mov
push
insl
xchg
push
pushl
mov
lahf
and
add
inc
aaa
xchg
test
mov
mov
add
gs
adc
in
and
sti
sub
rcl
sarl
in
daa
outsl
movsl
mov
sub
sub
scas
fmul
mov
sub
repnz
outsl
mov
mov
inc
and
loopne
xchg
push
in
add
jmp
loope
lods
xor
cmp
lods
jbe
push
ret
aam
push
and
cltd
scas
xchg
sbb
pushf
sub
lret
fldt
add
stos
pop
pop
xor
jbe
out
nop
fsts
cltd
sub
xchg
insb
dec
mov
push
xor
cmp
sbb
cmp
sub
jle
leave
shll
jnp
enter
loopne
inc
jl
jno
lret
sahf
xorb
jae
sub
rcrb
dec
push
movsb
call
es
add
sub
mov
or
cli
mov
and
cli
lea
jne
js
out
fldcw
fnsave
jns
fbstp
cmc
add
in
adc
jne
or
scas
subb
ja
xor
ret
or
pushf
xor
xchg
aas
std
jecxz
add
lcall
inc
mov
pop
dec
fildll
add
test
faddl
mov
jae
xchg
mov
loope
add
fsubrp
jno
xor
push
sub
insl
loop
loop
icebp
inc
cli
rol
cmc
sub
in
xchg
cld
and
je
aaa
pushf
xlat
or
xlat
aas
mov
outsl
inc
pop
repnz
cmp
imul
sbb
mov
dec
sub
ror
push
aam
adc
or
scas
ds
nop
fwait
mov
lock
cmpsb
sub
ret
xchg
mov
fisttpll
cs
inc
repz
push
lock
bound
ss
scas
or
cmp
sbb
lcall
mov
js
iret
mov
adc
and
sub
in
mov
xor
fsts
pop
ret
dec
cmpsb
mov
push
and
insb
push
and
mov
out
pop
leave
adc
jecxz
mov
and
mov
mov
xchg
mov
add
fistpll
mov
pushw
pop
shl
imul
xchg
add
in
jae
push
insb
inc
push
mov
mov
jns
je
orb
pop
scas
pop
ss
or
mov
xor
push
xor
negb
ja
xor
push
jno
ss
xchg
jl
or
jo
fwait
les
lea
int3
add
or
or
inc
seta
xor
jnp
mov
inc
jo
jge
pop
xor
lock
outsl
jmp
std
xor
push
fnstenv
sub
xchg
cli
or
cmp
sbb
clc
repnz
and
adc
les
test
scas
negb
mov
fistl
insl
cmp
pop
ds
mov
jno
cmp
enter
sbb
sbb
aad
es
testb
cmpl
mov
add
shrl
fmull
cmc
shl
mov
pop
or
sbb
mov
push
push
std
pop
sub
outsb
mov
jp
lds
bound
inc
iret
lret
push
js
adc
cmp
lea
ja
testb
loopne
push
call
cmpsl
push
imul
loope
jo
push
lods
dec
stos
divb
xchg
xchg
mov
fs
daa
pop
loop
roll
movq
cmp
jae
stos
sahf
jae
ss
jb
dec
cmc
mov
jbe
push
cltd
sbb
and
icebp
loopne
aaa
leave
xor
popa
addl
call
popf
ja
aam
clc
xor
xor
add
sete
xor
mov
cld
daa
outsl
testl
sub
pop
lcall
hlt
pusha
lret
jbe
je
push
je
shll
or
or
in
filds
mov
ja
xor
aam
pop
sahf
mov
popa
inc
cmp
out
dec
push
repnz
outsb
pushf
pushf
mov
push
mov
push
xor
inc
data16
push
iret
cwtl
push
jo
xchg
loop
or
stos
sub
jg
sbb
mov
bound
inc
xlat
addr16
jp
cld
pop
aad
fsubrl
adc
mov
es
repnz
cwtl
jmp
hlt
cwtl
and
idivb
jae
cmp
sub
mov
fcoms
in
mov
add
stos
pop
cli
daa
add
adc
jle
push
call
mov
or
mov
cltd
popf
mov
data16
ffreep
fistps
pop
lds
lea
ja
mov
lods
fdivs
sbb
inc
push
pop
inc
mov
or
sbb
outsl
and
mov
gs
in
or
mov
xor
insl
jg
mov
xor
ss
movsl
test
fisttps
jge
out
fnstcw
icebp
enter
int3
xorl
int
jp
mov
pop
push
or
fmull
ret
inc
cmpsb
into
xor
jnp
es
xor
cmpsl
cmc
inc
jge
int3
pusha
dec
scas
pop
mov
inc
add
xchg
hlt
xchg
lods
adc
xor
dec
xor
push
push
mov
push
or
mov
mov
mov
jle
repz
add
stos
lret
push
mov
mov
fsubp
push
mov
dec
ljmp
arpl
lret
repz
mov
inc
ja
inc
cmp
mov
outsl
cmpsl
mov
mov
mov
add
fcoml
sub
mov
vmovapd
daa
push
push
hlt
mov
cmp
sub
add
aam
out
ret
sahf
test
jle
xlat
lret
jp
jmp
mov
loope
test
push
cli
push
and
loop
ja
mov
scas
mov
test
repnz
add
mov
mov
addr16
sbb
jno
mov
xor
out
outsb
xchg
pop
in
inc
scas
jne
sub
inc
cmp
test
les
in
xchg
xor
jl
xchg
fs
subl
sbb
rcl
add
mov
add
sub
iret
pop
pop
in
lods
pop
fsubl
out
scas
arpl
push
test
testb
ja
arpl
or
pop
inc
pop
or
and
jg
fs
pusha
push
stc
rorl
cltd
ret
mov
fcmovnb
push
dec
cli
daa
mov
lods
fildl
aad
test
gs
cmpsb
push
incb
pop
jno
dec
shll
cmp
ret
xchg
daa
lods
or
pop
mov
jbe
loope
movsb
imull
pop
test
dec
add
adc
mov
out
jmp
into
cld
lahf
popa
mov
jmp
mov
pop
popf
lret
sbb
aad
mov
lods
xchg
and
mov
loope
in
mov
and
movsb
out
lahf
pop
fiadds
dec
inc
push
addr16
push
dec
lods
or
dec
or
shrb
ja
flds
push
mov
jmp
aam
les
pop
test
adc
dec
loop
xor
icebp
leave
inc
cmp
mov
in
inc
stc
sub
inc
stos
xlat
and
jp
mov
jo
or
inc
xchg
adc
or
inc
lock
adc
addr16
repz
daa
or
inc
movsl
adc
outsl
aas
jecxz
push
pop
xor
xchg
fwait
ss
pop
mov
inc
inc
icebp
mov
inc
sub
in
sub
daa
xchg
btc
clc
popf
in
shll
inc
sbb
adc
clc
fwait
mov
bound
mov
js
jg
sub
push
cmpsl
cmpsb
push
mov
addr16
clc
cmp
xor
mov
outsl
mov
sub
pop
and
adc
fisubrl
adc
ljmp
push
and
in
push
sbb
lcall
add
shr
fists
push
rclb
rcrb
xor
mov
adcl
sbb
imul
add
push
into
sub
repz
cmpsl
or
xchg
push
je
repnz
out
ja
cwtl
mov
in
xchg
add
clc
packssdw
push
rol
pop
movsb
orl
xchg
arpl
in
ret
xor
fistl
jnp
arpl
shll
mov
fdivrs
in
fwait
roll
out
fistpll
out
push
stos
repz
mov
lret
mov
rclb
ret
or
xchg
jg
push
xlat
stos
pop
adc
pop
imul
lcall
scas
sub
dec
pop
aaa
stos
sbb
sub
dec
insb
pop
adc
stos
mov
mov
adc
arpl
in
jae
fiadds
sub
cs
push
inc
mov
adc
lock
ljmp
pop
adc
ret
out
es
insl
and
mov
mov
lea
pop
xor
sbb
push
inc
ret
in
mov
sbb
push
in
repz
jl
and
sub
dec
xchg
xchg
hlt
inc
mov
cs
push
out
xchg
or
insl
pop
inc
bound
out
push
dec
jns
je
pop
imul
aad
in
loopne
test
popa
sbb
cmp
sub
outsl
push
mov
adc
lea
xor
ret
or
jmp
push
mov
push
lcall
test
or
jbe
das
in
gs
mov
dec
scas
xchg
test
add
jbe
push
lods
cmp
popf
mov
push
int3
enter
dec
pop
aaa
scas
and
pop
mov
inc
dec
jnp
sbb
sub
test
push
push
and
test
push
stos
sub
repz
stc
mov
sub
and
mov
jnp
call
inc
loope
mov
mov
test
push
outsl
push
sbb
pushf
fsubrl
xor
lcall
and
jecxz
or
rorl
rolb
sub
idivb
mov
sbb
xor
mov
inc
push
inc
or
lret
dec
jmp
pop
sarl
dec
add
loope
adc
inc
mov
dec
dec
gs
cmp
fstl
and
rcrl
adc
cmp
mov
outsb
ds
jmp
in
adc
xchg
push
xor
cli
sbb
and
adc
sub
ds
mov
shrl
push
sub
and
mov
out
mov
xchg
adc
pop
push
adc
mov
bound
out
jmp
lods
cli
mov
mov
inc
mov
out
pushf
ret
into
jmp
in
xchg
lcall
sbb
dec
mov
dec
fstps
jmp
pop
adc
push
jb
adc
ret
cwtl
dec
les
mov
movsl
add
adc
pop
mov
mov
mov
pop
inc
scas
mov
and
ljmp
repnz
dec
push
dec
xor
add
inc
loope
mov
insb
sub
pop
stos
idivb
das
rclb
or
test
dec
fnstcw
icebp
push
dec
repnz
pop
test
or
in
rolb
xor
inc
fldcw
add
mov
sbb
jb
loop
pop
je
cmpsl
test
aaa
lds
xor
mov
xor
pop
and
jp
inc
enter
fldl
or
shrl
jle
mov
test
sub
je
pushf
in
pop
mov
xchg
or
pop
fdivrl
push
push
dec
insl
cmp
sub
subl
icebp
fsubl
mov
adc
jp
push
mov
mov
push
sub
mov
popf
mov
fs
mov
dec
out
das
cmp
mov
inc
dec
xchg
push
loop
jb
mov
fidivrs
mov
stos
fstpt
inc
leave
xchg
mov
mov
outsb
push
cli
xor
call
test
sbb
xor
jo
andb
cmp
jp
xchg
jge
lods
mov
mov
shrl
dec
cld
mov
lret
lret
sub
arpl
outsl
or
cmp
mov
jno
mov
or
add
in
pop
pusha
repz
mov
aaa
mov
pop
stos
ljmp
push
pop
std
xchg
aad
pop
pushf
sarl
inc
mov
imul
fistps
dec
xlat
out
sbb
fistpl
stc
fidivl
sub
sub
cmp
enter
call
int
int3
prefetchnta
fstpl
mov
cmpsl
sub
shlb
pop
lahf
imul
dec
inc
in
push
shrl
or
mov
mov
mov
and
iret
mov
inc
outsb
pop
adc
mov
dec
cltd
jnp
cmp
nop
lcall
mov
movsb
stc
inc
xor
mov
js
inc
ss
and
push
jmp
jno
mov
leave
mov
fadds
sbb
mull
xchg
mov
sbb
jb
sbb
and
test
popf
xchg
arpl
addr16
sub
mull
aam
sub
mov
cmp
sub
and
inc
mov
xchg
mov
mov
lahf
xchg
clc
inc
jno
call
cltd
sub
cmpb
es
cld
pop
iret
jno
cmpsb
daa
and
inc
sbb
inc
mov
leave
sbb
jns
adc
lret
fistpl
testb
cmp
orb
fildll
jg
cs
jle
xchg
dec
mov
xlat
mov
or
add
sahf
jp
fsubrs
stos
cwtl
cmp
jbe
xor
sub
xchg
mov
int3
stos
sarb
adc
and
out
xchg
sub
and
xorb
ret
or
ficoml
ficoms
sub
test
xlat
xchg
mov
sub
pop
dec
mov
xchg
jecxz
or
pop
jb
aam
cld
dec
and
notl
jle
add
xor
xchg
lods
int3
add
in
jg
enter
scas
pushf
fidivs
lahf
jb
insb
jl
pop
std
lcall
test
cmp
adc
jl
jp
xchg
flds
out
enter
daa
rorl
pop
adc
dec
xor
into
lret
clc
or
lret
mov
push
add
xor
outsl
test
cmp
loopne
out
les
push
aam
add
dec
pop
adc
xor
jno
cmp
mov
punpcklwd
ret
mov
mov
cmp
push
std
and
decl
call
ret
insl
shl
inc
int3
mov
fiaddl
push
int
ror
xchg
pop
cld
sbb
aaa
mov
inc
xchg
in
pop
lds
cli
jns
sub
ljmp
inc
and
ds
xchg
rolb
cmpb
dec
cmp
inc
andl
and
lahf
adcb
inc
push
dec
int3
imul
cmpsl
sub
insl
or
dec
pop
pusha
add
lds
in
pop
dec
scas
into
mov
xor
loopne
pop
fs
insb
dec
push
mov
dec
fdivr
popf
cmp
fmull
jbe
insb
stos
in
mov
pop
cmpsb
jge
mov
stos
scas
dec
pop
cmp
jb
test
sbb
repz
push
or
inc
mov
cmp
lds
cmp
push
das
loope
or
sbb
gs
je
daa
jae
or
push
push
cmpsb
push
pop
push
fsubl
lahf
shrb
mov
mov
flds
dec
or
lea
inc
pop
lods
fcmovnb
adc
jmp
mov
or
xor
mov
cwtl
ss
sbb
jecxz
inc
popa
iret
xchg
lods
jne
xor
mov
push
loope
into
test
mov
mov
aaa
pop
xchg
jns
push
bound
popf
fdivrl
cwtl
jp
das
movsl
push
imul
dec
lock
dec
sub
dec
movsb
push
fisubrs
and
inc
mov
movsl
mov
push
mov
add
lret
in
inc
popa
jnp
and
or
roll
jle
mov
int
bound
je
push
lods
nop
adc
sub
loopne
repz
daa
pop
inc
xor
sahf
rol
add
ret
push
mov
cmp
aas
shlb
xchg
movsl
pusha
subl
pop
addr16
mov
mov
cmp
cli
xchg
dec
push
jns
add
xlat
adc
ret
imul
andl
mov
aam
rcrl
sbb
xchg
ror
pop
push
mov
arpl
xchg
or
les
add
gs
and
sub
sub
test
sti
out
xchg
adc
inc
add
out
cmpsl
push
es
pushf
sub
mov
sub
pop
inc
bound
cmp
mov
call
outsl
imul
dec
scas
cltd
push
xchg
dec
and
ficoms
rcl
gs
aam
lcall
pop
fdivr
loope
cmpsl
ds
inc
xchg
aas
rorb
push
scas
jbe
stos
or
arpl
pushf
cmp
dec
sbbb
pop
cmp
dec
sbb
cmpsb
fbld
xor
aam
and
popl
inc
ret
clc
sbb
xor
mov
in
testl
pop
jle
andl
xor
repnz
in
sub
cmp
lret
jle
lcall
in
orb
adc
pushl
in
dec
lret
adc
and
adc
imul
mov
inc
fldl
sub
mov
push
in
jb
and
rep
adc
lods
xchg
test
pop
addr16
push
lahf
push
incb
xchg
les
mov
inc
sbb
adc
xor
or
pusha
dec
dec
lods
sub
adc
shlb
lea
jecxz
inc
insb
test
jg
lcall
mov
push
aas
ljmp
mov
mov
aaa
jo
lock
pop
add
add
in
xchg
rcrb
and
shl
lahf
cmpsb
cli
sbb
mov
lahf
adc
dec
push
or
cmc
sbb
ljmp
mov
xlat
mov
or
adc
test
aad
mov
mov
addr16
xchg
fcomps
adc
sub
and
sbb
hlt
push
inc
orb
loope
pop
pop
sbb
push
les
inc
mov
in
mov
dec
sti
fwait
xor
adc
cmp
lods
call
ret
xchg
sahf
test
addr16
and
subb
mov
jae
and
or
in
sar
adc
mov
stos
dec
lret
loop
cmc
sti
mov
jb
or
stos
das
aam
cld
mov
dec
mov
iret
int
daa
repz
jnp
inc
push
lods
mov
jae
call
movsl
jne
int
dec
pusha
and
cmpsl
pop
insb
mov
xor
add
or
imul
mov
imul
pop
call
push
and
and
cli
jmp
jl
pop
fsubs
insb
pop
mov
mov
pop
lahf
movsb
mov
xchg
iret
xchg
push
sarl
jo
jge
push
mov
dec
in
mov
into
out
rorb
and
mov
inc
das
pop
xchg
in
push
test
outsb
mov
int
push
mov
mov
xchg
cmp
or
pop
sbb
fisubrl
addb
push
fists
dec
xor
aaa
out
stos
orl
mov
pop
imul
mov
stos
adc
adc
mov
jb
xchg
popa
out
dec
dec
or
mov
stos
aaa
mov
mov
pop
xlat
in
jg
jl
imul
cmp
repnz
lods
pop
pop
xlat
cmp
mov
mov
push
test
mov
cmp
mov
mov
lods
xchg
lods
or
lods
lock
fs
mov
stos
idivl
into
mov
inc
lock
sbb
and
cmpl
repnz
adc
jns
push
sbb
ljmp
lock
hlt
add
cltd
inc
sahf
adc
jmp
mov
das
stos
and
insb
dec
sub
push
and
add
pop
sub
lret
jbe
stc
jecxz
and
cmpsb
imul
dec
inc
sub
mov
movsb
sar
adc
add
sub
mov
jbe
and
ret
jns
sbb
rcr
adc
sbb
sarb
lods
and
les
xchg
xchg
cmp
mov
repnz
push
andb
sbb
popa
aaa
loope
add
mov
outsl
mov
testl
repnz
mov
pop
pusha
mov
pop
leave
push
shr
fisttpl
test
test
inc
mov
movsb
je
xor
mov
cltd
add
cmpsl
sbb
push
loope
xchg
shl
pushf
ret
jb
add
repz
cmp
pusha
lret
add
mov
in
ds
nop
push
xchg
push
dec
subl
add
xchg
xchg
lock
loopne
jmp
in
ret
inc
lea
bound
insl
xchg
jg
lds
test
ret
imul
cmp
pushf
bound
in
mov
mov
push
inc
gs
in
add
xchg
out
and
dec
cld
mov
aas
add
pop
dec
daa
sub
hlt
inc
xor
hlt
rcll
pop
out
out
adc
pop
movsl
out
xor
inc
xchg
cmp
xchg
or
clc
loopne
mov
aam
andb
aaa
push
bound
les
dec
out
push
inc
add
sbb
int
add
or
icebp
stc
push
cmp
inc
add
movsl
pop
fs
cs
push
sahf
jmp
jo
faddl
outsb
sbbb
ficompl
mov
ficoml
pop
pop
sbb
mov
mov
jl
dec
pop
fiadds
test
test
inc
sub
and
int3
out
jecxz
jge
xchg
sbb
jg
mov
fimull
mov
cld
inc
cmp
inc
lds
xorl
jae
cmc
cs
enter
hlt
add
and
js
push
lods
xor
push
jno
pop
das
or
and
inc
mov
jbe
mov
aad
xor
add
pushf
ss
fcmovnb
std
xchg
int3
ret
nop
push
cmpsl
cmpsb
or
cmp
ja
mov
movb
or
dec
ffreep
cmp
daa
js
sub
pusha
pusha
ret
dec
xchg
xor
ret
cmpsb
inc
icebp
cmp
jmp
fadds
xor
stos
in
mov
pop
loop
test
icebp
je
fcomps
xor
aaa
dec
mov
stc
dec
mov
sub
stc
int3
gs
xor
cwtl
pop
aaa
js
and
cmpsl
clc
mov
xchg
xchg
pop
xchg
fwait
xor
sbb
mov
dec
aad
ljmp
mov
adc
push
sbb
imul
int3
dec
sbb
pop
imul
nop
mov
fnstcw
fistpl
adc
mov
sub
rcrb
ficomps
iret
pop
sahf
jmp
push
sub
das
xchg
push
insb
and
adc
inc
mov
mov
push
sub
insb
xor
movb
and
in
jnp
icebp
mov
std
notb
int
pop
mov
or
rcrb
negl
mov
cmc
in
xchg
mov
sahf
and
mov
mov
aas
mov
sahf
sbb
shl
sahf
add
pusha
aad
aas
jne
lods
inc
stos
push
adc
nop
test
stos
out
jae
ja
mov
mov
andb
bound
mov
and
or
jns
lret
and
mov
mov
lods
adc
push
les
mov
ficomps
dec
jae
inc
pop
fs
dec
popf
ds
or
mov
sub
mov
hlt
lret
sahf
xchg
divl
dec
pop
cmpl
jae
dec
jg
xor
mov
pop
ret
in
mov
ds
pop
in
int
andl
push
rcrb
mov
add
inc
iret
in
fstp
decb
xchg
ds
xlat
jno
sti
lods
jne
inc
xchg
movsb
xchg
loope
mov
insb
mov
sub
outsb
leave
add
jnp
xor
enter
or
pop
and
sbb
xor
jmp
lock
sahf
enter
call
arpl
mov
pop
add
out
jge
daa
adc
add
sbb
inc
inc
xchg
cmp
pop
les
ja
scas
into
jp
cmp
fcompl
das
jnp
mov
xorl
xor
and
int3
sbb
ljmp
lret
xor
jp
adc
icebp
call
hlt
lods
addl
and
int
add
jmp
mov
mov
lahf
or
pop
push
in
repz
push
les
or
mov
daa
repz
inc
jne
mov
add
mov
mov
mov
inc
aaa
addr16
mov
frstor
pop
and
dec
lods
fs
cmpb
stos
aas
sub
cmovb
xor
stos
sbb
pushf
jb
jg
mov
mov
xchg
or
rcl
stos
das
outsb
mov
int
fldl
iret
cmpl
popa
out
sub
jp
add
arpl
push
dec
enter
movsb
data16
icebp
push
jo
mov
inc
fsubrp
rclb
add
mov
lods
icebp
push
xchg
ret
jno
add
dec
shl
inc
std
mov
xlat
lods
add
arpl
sti
movsl
sbb
mov
int3
pop
rorl
ljmp
lret
xlat
hlt
in
mov
mov
or
add
out
mov
lcall
xchg
bound
xchg
xchg
cmp
inc
das
mov
xchg
add
negl
mov
testb
ljmp
in
jmp
ret
jo
orl
rorb
inc
jecxz
xor
cmpl
imul
mov
dec
pop
sub
adcb
pop
stc
cmp
push
xor
cmpsl
imul
dec
mov
fdivl
mov
xlat
jg
rclb
dec
pusha
sbb
vmread
pop
cltd
es
dec
inc
cmpsl
ret
adc
xchg
into
pusha
mov
in
inc
movsl
adc
sbb
cmpsb
sbb
cmpsb
clc
inc
push
dec
into
add
ljmp
dec
loop
test
sti
push
add
dec
sti
cld
fs
cld
dec
dec
ds
push
xchg
int3
jp
dec
push
cmp
pop
call
jge
lds
or
cmc
lret
mov
xchg
arpl
sbb
lcall
les
mov
ss
mov
mov
fdivrs
inc
mov
aaa
jge
xchg
imul
xor
rorb
inc
std
xchg
in
test
xchg
iret
aas
add
add
dec
out
or
add
jmp
push
in
std
mov
xchg
addb
pop
rorb
jg
aaa
dec
pusha
aad
fistps
jge
adc
push
fisttps
repnz
mov
mov
cli
and
jl
or
xchg
and
mov
mov
int
inc
mov
pop
add
mov
out
fdivrl
cwtl
fdivrl
inc
gs
lods
jg
cwtl
jns
test
cli
xchg
pop
push
aam
sub
push
icebp
inc
cmpsb
or
lock
pop
mov
adc
hlt
lea
and
xor
or
cmpsl
filds
xor
mov
filds
flds
cmp
out
loop
cs
or
test
inc
insb
sbb
lds
pop
pusha
xor
fsubrl
outsb
loope
enter
les
xor
push
or
cld
loope
mov
mov
rcll
sbb
or
mov
and
pushf
sbb
scas
sbb
jno
pushf
fsts
in
dec
cli
pop
mov
mov
jle
lret
insl
fidivrl
lret
jae
clc
mov
adc
mov
jmp
sbb
push
out
nop
cmpsl
dec
jg,pt
xchg
mov
push
out
addr16
xchg
add
jno
icebp
xor
daa
addl
lahf
xchg
add
xor
pop
mov
daa
nop
xchg
scas
ret
push
pop
mov
in
repz
pop
movl
adc
in
push
xchg
mov
xor
sub
mov
pop
insl
mov
sbb
sub
sub
and
je
xor
adc
or
adcl
mov
call
mov
in
icebp
cmp
cmc
cmpb
rclb
mov
pop
pop
push
mov
dec
sbb
daa
lods
subl
pop
mov
push
cmp
imul
sub
mov
push
lds
cmpsl
xor
pop
jbe
das
add
into
fsts
jge
fdivl
push
es
cmp
push
mov
cmp
mov
movsb
repz
leave
int3
pop
xchg
cltd
fidivl
inc
sti
push
leave
xchg
or
mov
movl
in
mov
dec
or
imul
shrl
pop
std
push
sti
les
leave
lahf
pop
cmp
test
sbb
hlt
cmp
mov
aam
and
movsb
or
test
retw
push
loopne
mov
dec
add
or
in
in
rorl
pop
sbbb
enter
sarb
int3
lret
les
jns
scas
jg
or
xchg
mov
add
pop
pop
bound
leave
cmpsl
sbb
setnp
xor
movsb
cs
mov
das
inc
pop
ret
es
ss
dec
testb
mov
dec
cmpsb
pop
dec
push
or
mov
lods
push
jns
cmp
mov
icebp
bound
ret
lods
adc
sahf
bound
sub
jb
pushf
and
test
inc
push
ja
push
stos
sub
push
adc
fnstenv
sbb
add
pusha
ror
ficomps
into
or
jl
js
das
pop
or
jle
xchg
cltd
push
stc
inc
lea
out
mov
mov
je
subb
sarb
xor
sbb
cmpsb
xchg
pop
dec
stc
into
jb
aad
mov
movsb
icebp
cmpsb
or
popa
and
fisubrl
dec
outsl
jl
xor
pushf
push
xchg
or
pop
inc
mov
xor
cli
mov
arpl
ret
fdivrs
dec
or
push
add
lock
adc
ror
sbb
jo
mov
dec
out
cltd
sbb
repnz
mov
jl
pop
sbb
jne
int3
enter
xlat
js
and
or
pop
adc
push
sbb
xor
fisttps
cltd
lods
aad
xchg
sarb
shlb
popa
xor
imul
or
jle
addr16
addr16
stos
jmp
sbb
std
js
cwtl
sub
and
cmp
push
xor
gs
sbb
cs
movsl
adc
cltd
sbb
sbb
push
fisttpll
jne
mov
mov
add
jb
test
pop
imul
movsb
push
stos
adc
push
add
lods
jne
and
mov
add
mov
rclb
orl
mov
push
imul
lods
xor
jae
jbe
rcr
fdivl
clc
jne
fdivrl
call
pop
outsb
and
dec
fldpi
ljmp
ja
mov
mov
mov
shrb
push
xchg
pop
lea
jno
sub
add
es
ret
and
jge
sbb
lods
sub
adc
fisttps
fsub
sub
or
cltd
jecxz
mov
out
in
push
in
lock
xchg
popf
std
rcll
fbstp
pop
sbb
xchg
adc
imul
incb
outsl
jp
mov
jne
or
jae
sub
push
inc
andb
fldl
cld
aas
xchg
ficompl
outsb
aam
adc
sti
pop
dec
call
stc
dec
adcl
decb
lret
stc
rorb
movsl
adc
rcr
push
bnd
add
out
xchg
sub
fidivl
sbbl
dec
xchg
bound
lods
lea
stc
ss
xor
xchg
repz
dec
sbb
pop
push
in
pop
or
addb
es
or
outsb
hlt
clc
call
push
ds
std
test
pop
pop
gs
shlb
jmp
out
dec
xchg
das
or
jge
fstl
pop
mov
add
loopne
cmpsb
test
sbbl
and
push
les
mov
rcll
into
sar
ds
cmc
push
fcmovu
movsl
cmp
dec
insl
xchg
xor
out
or
jo
mov
imul
lret
pop
das
fldenv
jg
js
insb
and
jne
xor
mov
mov
test
repnz
dec
dec
jl
cmpsb
pop
add
cwtl
mov
sub
aaa
imul
ljmp
push
addr16
ljmp
aad
xor
xchg
cmpsb
repnz
js
rorl
mov
imul
aas
filds
inc
ss
mov
cmp
fadds
in
test
daa
outsl
jp
lcall
jl
clc
mov
loop
cmpsl
xor
xor
aam
repz
mov
push
sub
subb
jge
add
stos
in
imul
mov
loopne
sub
pop
enter
shr
in
movsb
jl
mov
dec
out
sbb
pop
idiv
dec
mov
ljmp
pop
jne
or
xchg
js
jbe
sbb
cs
ja
out
imulb
lahf
add
das
push
cmp
cld
dec
daa
pushf
popa
sbb
mov
inc
pop
aam
jg
movb
sub
xor
or
jnp
xchg
stc
dec
jecxz
pop
sub
mov
and
dec
orb
add
jns
js
ds
cld
pop
pushl
pop
push
pop
in
or
test
rep
cwtl
fcompl
pop
je
dec
mov
add
mov
cltd
cmc
jcxz
ljmp
fcompl
sbb
sbb
loop
sub
mov
clc
out
and
dec
std
cltd
inc
pop
insl
pop
cmp
out
dec
jnp
shr
imulb
cmp
movsl
mov
cmpsb
sbb
mov
pop
popa
mov
sbb
rorl
lret
inc
insl
mov
add
dec
push
fs
pushw
push
cmpsl
push
mov
test
cmovo
mov
cmp
orb
out
imul
sbb
sub
mov
lds
dec
dec
insl
mov
mov
inc
sub
je
cltd
enter
lret
push
or
repz
inc
cmc
mov
pop
arpl
or
jecxz
ljmp
add
dec
ror
jns
paddb
rcl
cmp
push
sub
mov
shrb
pop
pop
jg
inc
fidivrl
pop
les
mov
pop
inc
imul
cmpsb
xor
and
arpl
jle
int
andb
jbe
pop
test
xor
imulb
mov
or
daa
xor
dec
test
sbb
lods
cmpsl
push
inc
fsub
add
aad
lea
stc
xchg
push
sbb
pop
push
in
int
xor
mov
mov
jb
adc
rolb
mov
xor
incl
pop
pop
popf
and
sbb
adc
cmc
push
xor
sbb
dec
mov
inc
adc
add
jo
into
dec
fcompl
dec
imulb
lods
sti
jns
and
arpl
adc
lods
lret
cltd
cmp
and
fsubl
and
mov
cmc
cmc
add
testl
sbb
dec
pushf
jae
sti
int3
cmp
mov
cmpsl
dec
and
pop
sub
loop
jb
test
mov
lods
xor
les
fmuls
lea
cmp
push
dec
inc
aaa
cld
call
push
enter
cmc
incl
outsl
push
xchg
out
cmp
jl
cmp
jbe
mov
jle
add
imulb
repz
fdivrs
inc
in
jecxz
jno
add
out
ja
orb
dec
dec
sti
or
lahf
lds
add
or
mov
inc
pop
dec
fisubrs
xchg
mov
aad
mov
mov
jne
inc
jl
movsl
jnp
pop
dec
mov
mov
mov
lods
stc
inc
or
ljmp
subl
bound
or
xchg
inc
pushf
add
sub
lcall
cmp
xchg
mov
cmpsw
fs
cmp
aad
jo
test
lret
mov
in
cmp
push
mov
or
fs
mov
jl
pop
fstps
mov
lcall
mov
or
inc
repz
sub
jle
push
hlt
mov
cmp
sahf
xchg
shlb
cwtl
xchg
js,pt
inc
sub
jb
out
loop
addr16
mov
xchg
pop
xchg
cmp
xor
lock
sbb
push
scas
sub
js
fwait
mov
jo
or
adc
test
mov
pop
inc
mov
push
scas
dec
pop
jbe
xchg
stc
in
in
or
aam
into
mov
mov
orb
xchg
clc
jl
cmc
or
sub
pop
into
fistpll
and
ret
jle
cmpsl
or
jg
dec
xchg
cs
out
outsl
sbb
outsb
ds
add
loopne
shlb
xlat
fcmovb
sbb
cli
fbstp
std
xor
add
pslld
ret
test
mov
shrb
or
xor
shl
imul
sbb
push
and
cld
mov
dec
mov
mov
adc
mov
xchg
aam
jp
hlt
xor
les
fdivp
popf
js
push
addb
andl
sub
cs
mov
andl
mov
ret
xchg
enter
add
adc
out
mov
nop
aam
rol
dec
in
jbe
sbbl
and
sahf
add
lret
or
dec
lods
out
cwtl
sub
mov
or
push
sbb
or
call
lods
repz
out
fyl2xp1
push
inc
daa
xchg
popf
mov
test
push
cmpsl
popa
insl
movsb
bound
std
movsl
enter
sahf
sub
mov
sbb
push
dec
cmp
ret
in
rcrb
push
popf
and
popf
mov
out
in
add
xchg
imul
rcrl
loope
and
mov
push
mov
icebp
jno
xchg
xor
scas
xor
int
xor
xchg
ds
mov
stc
adc
stc
and
dec
jne
pop
dec
cmpsl
add
int
mov
mov
and
addr16
jbe
icebp
mov
xchg
jbe
cmp
sub
add
daa
sbbb
xor
lds
into
sbb
int
mov
popf
push
push
jno
push
addb
test
cs
add
fcmovbe
xchg
mov
inc
inc
scas
leave
xchg
repz
cmc
sub
cmp
inc
ficomps
or
movsl
orl
das
cs
rorl
jl
jmp
popf
dec
in
data16
pop
xchg
pushf
popl
adc
mov
push
sbb
pop
repnz
or
enter
repnz
leave
testb
add
out
movsl
sub
adc
jo
xchg
shrb
add
aas
insl
ret
dec
xlat
xchg
mov
out
or
movb
mov
xchg
cmp
add
dec
cmovb
aas
shll
mov
inc
or
fmuls
push
aad
mov
add
test
mov
jae
int
sub
dec
push
xor
push
mov
out
aad
ror
fdivrl
outsb
shlb
inc
js
fld
adc
fists
mov
mov
icebp
xchg
pop
jg
aad
int
xor
and
mov
aaa
in
sbb
push
lds
push
out
sub
enter
test
pop
adc
int
dec
lret
push
and
inc
pusha
shl
cmc
mov
cmp
cltd
mov
mov
ds
seto
loopne
mov
add
data16
lea
jb
movsl
xor
les
adc
cmp
faddl
sbb
popl
pop
popf
test
dec
inc
sub
sti
sbb
push
xor
nop
subl
cmp
repz
add
inc
mov
scas
rdpmc
mov
sub
test
lahf
push
cmp
les
fadds
insb
xchg
repz
adc
pop
push
pop
mov
xchg
icebp
rol
adc
pushf
mov
cmp
lcall
xchg
fadd
mov
or
stos
push
add
ret
mov
enter
out
push
xchg
into
sbb
cmpsb
xchg
insb
mov
sbbb
ds
pusha
js
test
jmp
adc
dec
daa
lods
ss
adc
add
pop
and
popf
mov
xchg
mov
pop
mov
and
test
movsb
gs
loope
jo
in
pop
imul
sub
mov
daa
shlb
in
call
push
outsl
or
adc
jmp
push
cmc
adc
adc
mov
dec
imul
icebp
dec
inc
lret
insl
in
rol
mov
fldl
movsl
and
pushfw
jbe
in
adcb
mov
push
jb
into
pop
and
pop
jg
push
jns
call
mov
jl
insl
frstor
pop
sti
cld
and
mov
inc
out
hlt
clc
jo
inc
xchg
jle
fucomp
sub
push
inc
and
add
jp
outsl
lret
loopne
out
sbb
lds
xchg
add
test
ss
sub
sbb
addr16
jg
std
sbb
icebp
pop
loopne
mov
jae
mov
cli
xchg
xchg
add
cwtl
or
push
adc
repz
adc
dec
out
loopne
lods
stos
or
hlt
es
mov
neg
jno
cmpsb
inc
xchg
rorl
xchg
jbe
push
aaa
subb
rcr
inc
mov
mov
push
ja
sub
sti
dec
xchg
fisttpl
pop
pop
pop
andl
push
popf
inc
into
mov
adc
sahf
cmp
mov
test
daa
incb
outsb
std
bound
push
xchg
sbb
jmp
packuswb
mov
lock
push
das
cli
inc
rcll
cli
add
les
cmp
ja
cmp
cmc
jne
sub
inc
pop
rcr
adc
out
test
fisttps
pop
add
dec
fistps
loopne
aam
dec
sub
and
pop
xor
mov
jne
in
dec
mov
cmp
popa
mov
enter
fwait
push
and
xor
stos
jge
ds
dec
js
fadd
mov
jbe
dec
cs
scas
xchg
xorb
lock
jmp
in
pop
push
data16
sbb
into
loope
pop
es
loopne
flds
sbb
and
jne
adc
xor
aad
mov
aaa
mov
xchg
pushf
push
and
push
ja
xchg
cs
fsubl
std
sarl
out
rclb
inc
ret
sub
repz
sub
cmpsb
subb
fmull
xor
out
mov
sbb
data16
jle
jecxz
mov
pushf
push
cli
cmpsb
addr16
mov
into
fldenv
dec
test
mov
divb
icebp
movsb
xor
cmc
mov
test
js
dec
sbb
pusha
sub
mov
cmc
addl
xor
mov
sub
int
add
mov
aad
push
sub
cmp
cmp
add
bound
stos
push
inc
or
push
fldt
notl
movsb
adc
cmpsb
and
clc
fs
inc
xchg
push
pop
shll
leave
jb
pop
mov
shlb
stos
out
mov
inc
test
sbb
or
test
enter
push
andb
add
aad
cli
mov
mov
popa
jl
cmpsl
aam
push
and
sti
lret
mov
sub
pop
xchg
mov
int3
and
ret
and
xlat
hlt
std
testb
fsubrs
lods
cmp
jnp
mov
in
inc
int3
mov
roll
pop
push
push
cwtl
out
popf
iret
jnp
dec
loopne
and
scas
mov
in
popl
jne
cmp
popa
jbe
push
or
and
pop
cld
in
out
adc
add
and
icebp
in
gs
std
stos
loopne
addr16
imul
gs
pop
sbb
inc
cmp
inc
in
into
mov
mov
lea
mov
ret
inc
lahf
ret
repz
adc
rcr
loope
or
xor
adc
repnz
mov
dec
jg
test
mov
pushf
in
sti
and
sub
test
pop
andl
sub
out
ss
data16
xchg
or
xor
in
adc
push
lods
jae
dec
stos
dec
sbb
cmp
mov
bound
push
frstor
insl
cs
or
cmp
cmpsl
out
or
mov
sub
lret
shll
pushf
sti
loopne
mov
frstor
arpl
pop
shll
in
int
and
pop
jmp
adc
test
mov
xchg
fstps
les
sarb
enter
dec
loopne
inc
sub
sub
pop
adc
jae
push
shlb
jno
sbb
out
push
adc
popl
mov
and
mov
popf
xor
lahf
lea
fisubrs
ljmp
cld
cmc
aas
pop
xchg
jb
lret
iret
mov
into
out
push
inc
mov
inc
mov
xor
jecxz
xor
outsl
ds
adc
scas
aas
insl
iret
xchg
jle
dec
sub
mov
into
pop
mov
pop
dec
movsl
mov
sbb
or
mov
aaa
lds
inc
inc
cmp
sarl
shlb
ljmp
call
in
push
jbe
mov
mov
popf
push
ret
leave
addb
pop
xchg
jae
adc
test
mov
pop
jge
or
inc
aam
push
push
adc
jns
fsts
cmpsb
jg
arpl
sbb
loop
xchg
pop
or
and
std
sub
in
mov
ret
add
adc
inc
cmp
bound
jnp
cltd
mov
and
cltd
in
cmpsl
cmp
insb
add
xlat
cmp
xchg
mov
int3
cmp
inc
out
inc
jns,pt
in
mov
push
pop
xchg
out
jmp
out
add
loop
enter
jmp
int
clc
mov
icebp
pusha
popa
daa
dec
adc
adc
loope
adc
sbb
cmpsl
xchg
lods
push
and
jp
pop
test
ror
gs
aam
push
jg
xchg
out
pop
and
ret
pusha
out
add
dec
push
mov
cltd
xchg
sub
sti
lds
rep
add
mov
rorb
xor
mov
and
cmp
add
test
in
and
cmp
loop
out
in
cld
shll
push
leave
and
movsl
sti
test
scas
icebp
xchg
sbb
mov
cmp
and
push
iret
jb
pop
test
dec
ds
mov
pop
pop
sbb
jl
fs
pop
daa
xchg
fiadds
dec
int3
mov
and
adc
das
rcll
jbe
pop
push
mov
cmp
jno
in
adc
mov
orb
fucomi
push
mov
fisttps
in
add
pop
outsb
mov
cli
out
std
push
dec
movsb
mov
xor
cmp
icebp
mov
jae
daa
test
clc
insb
mov
mov
stc
push
pop
ljmp
push
xchg
push
int3
popf
stos
or
not
leave
push
mov
jg
enter
dec
cmpsl
adc
dec
push
mov
add
das
dec
and
xchg
xchg
sarb
cmp
push
xor
inc
out
in
mov
hlt
jae
daa
push
aas
cltd
addl
ja
mov
adc
ja
mov
jns
out
aaa
out
mov
or
lcall
fisttpll
and
inc
jecxz
repnz
push
sub
ret
imul
cltd
loop
jns
and
shrl
mov
dec
sbb
jb
adc
mov
std
cmp
orb
push
adc
sahf
ret
sti
and
out
push
jp
xchg
movl
jne
es
clc
jo
mov
bound
cwtl
pop
xchg
mov
jne
mov
cmpsl
jmp
iret
frstor
out
imul
insb
add
sete
pop
outsb
jae
xor
cmp
add
nop
cs
outsb
dec
jecxz
or
scas
mov
sbb
dec
hlt
pop
dec
mov
sahf
iret
gs
ss
nop
gs
pop
mov
call
data16
in
cmp
popa
repz
scas
lret
hlt
dec
or
jp
test
lahf
jb
push
mov
lret
lds
out
jmp
fwait
mov
cmp
xchg
pusha
cmpsl
or
clc
imul
mov
xchg
dec
xchg
inc
orl
outsb
fiaddl
or
mov
in
std
test
cmp
pop
sbbb
mov
sub
sbb
es
cmpl
cmpsl
bound
mov
daa
xchg
in
cmp
fildll
rcrb
lock
or
daa
sarb
cmp
mov
mov
jno
or
loop
jae
lret
mov
ljmp
mov
das
and
sarl
into
add
fs
lret
mov
mov
jle
mov
gs
or
pop
mov
aam
loopne
xchg
push
sbb
pop
test
ret
scas
mov
inc
jmp
ret
sbbl
pop
xor
arpl
mov
aas
mov
daa
in
les
leave
add
inc
inc
sub
xor
roll
cwtl
cmpsb
leave
lahf
daa
and
mov
test
push
movsb
sub
adc
in
imul
fucom
push
inc
cwtl
mov
lea
mov
and
arpl
mov
cmc
dec
add
and
mov
push
stc
or
shl
aad
imul
imul
es
and
inc
movsb
adc
lock
xchg
mov
cmpsl
jecxz
sub
movsb
xor
popf
or
xlat
dec
xchg
and
adc
nopl
stc
insl
sub
mov
lods
xchg
jg
movsl
push
mov
or
es
clc
lods
inc
xor
pop
mov
mov
test
xchg
popa
fcomi
repz
push
ds
insl
sbb
mov
push
js
adc
arpl
xor
loop
fsubs
pop
outsl
pop
mov
sbb
mov
test
stos
in
mul
sub
insb
scas
xchg
push
jp
lahf
gs
out
xchg
and
loopne
nop
fsubr
and
push
test
call
jae
ljmp
pushf
xchg
rorb
dec
jne
clc
push
push
out
test
xchg
sbb
enter
xchg
in
pop
mov
cwtl
idivl
xor
adc
jo
ss
or
mov
mov
xor
lahf
movsb
cmp
inc
leave
sbb
fnsave
scas
sti
pop
dec
xchg
mov
movsl
or
push
ret
push
dec
sub
xchg
clc
dec
pop
int
nop
fwait
inc
out
sbb
push
cli
mov
or
enter
test
addl
xor
outsl
mov
aas
mov
or
dec
loop
jge
inc
inc
pop
push
pop
sub
jno
add
add
stc
mov
repz
cmc
lods
sub
push
adc
cmc
cltd
pop
leave
outsl
adc
jb
lret
add
in
sub
inc
dec
ret
enter
sub
es
les
xchg
jp
push
mov
pop
mov
insl
sub
pop
imul
jo
movsb
mov
xchg
out
push
push
mov
adc
push
dec
mov
xor
leave
mov
add
loopne
mov
push
je
sti
popf
ljmp
or
jb
xor
jg
cmpsb
and
mov
inc
fldt
repnz
push
addr16
hlt
sbb
inc
sbb
out
mov
mov
jp
xor
outsb
cmp
pop
adc
dec
jo
sub
inc
jb
insl
xor
aas
lods
mov
repz
mov
aas
jne
xchg
data16
int
mov
out
jecxz
add
fs
gs
data16
out
es
jge
stc
dec
xor
pop
adc
fidivrl
lea
push
sar
cmc
add
jbe
dec
adc
mov
mov
xor
sbb
stos
mov
or
out
jae
mov
out
je
mov
mov
mov
test
sub
mov
repnz
mov
or
pop
fstl
mov
add
gs
cltd
cmp
adc
notb
orl
fstpt
and
in
inc
xchg
xchg
and
pop
pop
lcall
shrb
insl
cmpsb
mov
cmp
jle
dec
xor
test
inc
pop
call
adc
shll
stos
outsb
dec
mov
enter
pop
adc
pop
xchg
xchg
xor
sub
xor
fldcw
pop
scas
aad
negl
iret
das
out
pop
cmc
imul
adc
pusha
push
sahf
and
fisubrs
arpl
pop
cmpsl
gs
call
iret
xchg
stos
dec
add
cwtl
inc
push
lret
inc
push
jo
in
adc
dec
sub
fsubrs
arpl
or
bound
addr16
jle
xchg
out
out
jne
xchg
lods
test
sub
aad
mov
or
clc
stos
jbe
or
mov
daa
pop
inc
or
dec
mov
push
xor
adc
movsb
mov
push
cmpsl
scas
repz
lods
decl
lods
fildll
gs
lahf
cmp
rorl
imulb
sub
push
aad
sbb
cs
or
aad
jl
pop
fcmovnu
fcmovbe
dec
add
aaa
sarb
pop
jg
mov
out
adc
xchg
inc
std
out
arpl
test
dec
xchg
pop
pop
mov
enter
push
adc
ret
in
xchg
pop
lock
push
stc
sbb
pop
pop
jns
or
mov
ja
pop
imul
inc
sti
or
or
nop
cld
jmp
lret
xor
xchg
add
daa
adc
cmp
adcl
cmp
push
mov
ret
shll
icebp
es
popa
sub
sbb
jl
cmp
cmp
jbe
sahf
dec
xchg
push
xor
cmp
xchg
cli
int
bound
cld
loope
push
jo
sets
mov
xor
mov
adc
xor
cmpsl
hlt
push
notb
cmp
test
push
lock
dec
jg
cmpsb
popl
sti
push
push
pusha
movsl
mov
push
cmp
xorb
add
xlat
stos
in
and
cmp
movl
pop
mov
loop
mov
pop
out
out
or
jnp
xchg
int3
lcall
popf
test
add
dec
jbe
sbb
int
pop
stc
in
out
xchg
pop
adc
lock
pop
cmp
sub
addr16
in
arpl
mov
or
mov
adc
dec
icebp
xor
test
push
mov
in
daa
mov
aaa
mov
arpl
rorb
inc
cmp
fsubl
sbbb
loopne
mov
adc
mov
sub
mov
add
pop
xor
sbb
outsl
xchg
pop
sub
iret
inc
adc
adc
dec
into
push
loop
dec
imul
jbe
cmp
es
add
loope
cmp
nop
stos
lret
ret
mov
lea
rcl
or
push
add
loop
jmp
movsb
cmp
cmp
ljmp
aam
mov
aaa
sub
jp
or
stos
cltd
cmp
or
fisubs
dec
sahf
jns
dec
cmp
cmpsb
in
aaa
push
inc
and
mov
aam
xor
pop
or
inc
je
into
ret
sar
add
lods
sub
mov
sub
jl
add
scas
cs
int
ljmp
and
jae
and
in
mov
int
ret
inc
insl
push
out
push
clc
jb
dec
mov
push
test
xor
lret
aam
xor
ja
or
mov
push
nop
cmc
cmpsb
out
arpl
sub
iret
mov
jg
es
adc
or
or
fisttpll
push
mov
mov
xor
cltd
ret
cmc
shrl
push
push
movsb
mov
mov
out
fisubl
cmpsb
sbb
push
shrl
xor
mov
loop
inc
sub
cwtl
pop
push
xor
insb
in
jmp
clc
out
mov
addl
sbb
lcall
loope
cmp
cmp
pop
jl
fwait
xchg
sbb
sbb
xchg
sub
frstor
in
pop
scas
sbb
mov
jb
xor
iret
std
and
leave
unpckhps
push
mov
push
mov
bound
scas
movsb
repnz
fsubrl
mov
pushf
cltd
je
mov
inc
movsb
xchg
push
mov
xor
std
mov
jns
fidivrs
inc
mov
lahf
mov
sbb
inc
mov
lahf
mov
les
mov
inc
movsb
adc
outsl
or
and
insb
or
sbb
adc
jecxz
dec
dec
pushf
pop
cmp
jp
out
jbe
or
sbb
popa
in
nop
pusha
lods
or
stc
inc
add
popa
add
sbb
sbb
mov
sbb
inc
shr
cmp
inc
call
iret
test
xor
movsl
fisubrs
into
shrb
push
or
sbb
insb
test
outsb
jmp
sub
cmpsl
aam
out
mov
jl
xlat
repnz
adc
push
pop
and
jbe
adc
shll
jp
push
mov
dec
and
sbb
dec
add
mov
in
ss
mov
add
insl
and
movsb
xor
mov
jno
pop
lds
sahf
sub
add
adc
cmp
inc
adc
mov
in
scas
adc
popa
sbb
test
jg
jae
add
and
cld
std
pop
leave
and
insl
fdivp
sub
jbe
push
xchg
mov
sub
sbb
push
mov
xchg
mov
sarl
adc
mov
xchg
mov
stos
std
sub
dec
push
jae
adc
push
pavgb
inc
loope
int
mov
jb
pop
lahf
inc
lcall
mov
pop
cmp
cmp
lods
ss
sub
adc
lds
adc
sarb
les
test
repnz
pop
outsl
inc
comiss
add
cmp
shl
and
in
leave
or
dec
inc
rorl
sbb
mov
iret
in
or
clc
sbb
idivl
cmpsl
jge
sub
outsl
mov
xchg
mov
mov
inc
mov
pop
ficoms
jg
aaa
sbb
mov
pop
into
xor
sbb
cwtl
ds
outsl
hlt
ficoml
mov
out
inc
add
in
inc
mov
and
call
and
inc
push
popa
ret
inc
icebp
push
xor
iret
es
jecxz
aad
out
clc
test
addr16
mov
orl
xor
jbe
push
stc
cmp
adc
sbb
xchg
or
jo
pop
push
mov
das
sbb
jnp
jmp
rcl
jge
in
pusha
push
cmp
ja
sub
fists
or
xchg
mov
insb
mov
cmpl
inc
out
into
mov
dec
es
xor
xchg
mov
dec
mov
pop
aam
repnz
dec
adc
stc
and
dec
insb
push
pop
cwtl
or
xchg
cmp
mov
ds
mov
sub
in
sbb
sbb
or
jle
push
psrlq
or
in
and
xlat
xchg
es
cmpsb
dec
cld
pop
xor
pop
orl
push
pop
stos
jae
sahf
out
jmp
and
orl
loope
pop
test
push
cmp
clc
aas
sbb
dec
imul
lock
push
xchg
dec
leave
sub
push
adc
xor
dec
rcrb
sbb
dec
jb
xor
mov
sub
nop
pop
lahf
dec
and
pop
das
loopne
jecxz
js
enter
push
cmp
call
lods
and
test
mov
testl
ret
pop
xchg
dec
daa
loop
cltd
or
cmc
int3
aas
fnstsw
enter
xchg
fs
jge
rcrb
insl
mov
lea
push
sbbb
push
mov
fdiv
lds
mov
pop
add
jecxz
adc
pop
cmc
js
ret
pusha
loope
lret
lret
sbb
dec
adc
scas
xchg
insl
push
fadd
or
test
jmp
push
iret
cmp
pop
inc
push
jl
insb
movzwl
or
and
pop
xor
faddl
jmp
aaa
imul
arpl
sahf
repnz
fs
add
xlat
mov
sub
mov
dec
dec
jecxz
push
mov
pop
cld
jmp
gs
sub
dec
pushf
sub
in
pop
gs
orb
stos
jle
call
outsb
jge
mov
lea
loop
ljmp
ja
outsl
icebp
jo
popf
mov
sbb
mov
jp
pop
cld
xor
sub
clc
and
jne
cmp
shrl
xor
lods
lahf
lret
lods
ja
or
mov
push
mov
daa
adc
mov
inc
out
adc
sbbl
push
stos
outsb
xlat
fidivrl
xchg
sbb
sbb
repz
push
mov
inc
pop
out
daa
adc
mov
jne
fptan
dec
lcall
xor
add
dec
ret
inc
clc
add
jnp
push
add
imul
xchg
add
je
dec
xor
test
or
xchg
and
shll
cmp
sub
outsl
into
mov
xchg
lods
dec
into
push
ret
or
sbb
fcoml
mov
jns
or
xchg
fisubrs
add
ret
mov
jno
pop
jae
and
popf
add
outsb
repz
adc
sub
fldl
jnp
add
jmp
outsb
add
lea
add
imul
xchg
in
inc
mov
sar
aaa
sub
popf
pop
xor
pop
enter
cwtl
enter
cmp
xchg
mov
mov
pop
push
and
sub
mov
movsb
sub
xor
and
and
cmp
mov
jle
or
loope
xor
xor
xchg
mov
jb
loopne
dec
sbb
push
inc
dec
push
out
shrl
jae
shrl
hlt
fcmove
pop
push
inc
mov
lock
add
jg
popf
fcoml
inc
sub
lahf
out
fisubl
sub
sbb
inc
shll
sub
push
js
mov
gs
andb
dec
daa
and
push
mov
scas
jle
or
dec
ss
orl
sub
mov
push
inc
mov
push
fdivrl
btr
je
xchg
mov
sbb
xorb
rcl
adc
cmp
xchg
inc
adc
mov
jmp
jo
xchg
mov
mov
outsl
pop
push
fwait
in
xchg
cs
inc
cmp
fstps
out
pop
push
nop
mov
or
add
subb
xchg
xchg
mov
ds
adc
jp
test
pusha
movsb
mov
or
into
cwtl
subl
inc
xor
jl
adc
leave
int
mov
xchg
and
add
xchg
lods
pop
ror
std
push
frstor
push
lock
or
mov
and
or
pusha
xor
jbe
fiadds
clc
test
mov
test
mov
fisttpl
inc
rol
hlt
sub
imul
jmp
pushf
pushf
cwtl
jns
daa
sub
fisubl
adc
lods
movsb
mov
sub
dec
dec
jl
adc
dec
cld
sub
cmp
or
sub
mov
es
scas
push
jl
jp
inc
xor
test
xchg
in
rorl
das
jnp
dec
dec
test
jmp
sub
push
cmpsl
xchg
add
addr16
jo
adc
cmpsl
sarl
imul
les
sub
pushf
inc
add
mov
adc
andl
call
int3
cmp
into
inc
rcrl
enter
pop
xchg
adc
push
cmp
and
jbe
pop
inc
incb
sub
mov
pop
movsb
cmp
inc
inc
and
cltd
or
aas
xor
ret
dec
lret
push
mov
lock
xchg
sub
jge
sub
or
ja
mov
std
in
jecxz
fldcw
xchg
pop
sbb
sbb
lock
mov
pop
cli
pop
xchg
and
mov
push
sub
pop
xchg
push
push
mov
int3
repz
mov
mov
sbb
push
ja
pusha
shrl
push
jns
cmp
or
fs
xlat
out
sub
mov
xchg
mov
push
xlat
out
imul
pop
pop
mov
aam
xor
pop
in
jne
lea
sbb
outsb
gs
jbe
push
test
scas
sub
inc
or
in
mov
pop
mov
leave
cwtl
xchg
scas
test
test
aad
jmp
xchg
lds
push
ljmp
in
mov
or
xchg
push
std
fstl
mov
es
sahf
xchg
jne
in
inc
daa
loop
pop
fstl
jno
aaa
dec
cs
dec
ljmp
loope
stos
mov
cmp
aad
or
iret
add
insb
shr
out
mov
xchg
fstl
inc
xchg
mov
int
sbb
test
pop
sbb
ja
xchg
cmpsl
xchg
test
iret
pop
mov
lcall
loop
scas
add
int
dec
push
add
inc
pop
pop
jb
mov
push
pop
jl
sub
into
ret
mov
popa
repz
loop
aas
push
and
push
clc
insl
mov
xchg
dec
out
mov
mov
aaa
and
stc
push
ret
movsb
pop
repnz
cli
fnstsw
adc
adc
minps
dec
outsl
add
push
adc
inc
sbb
repnz
inc
out
xchg
mov
stos
into
mov
sbb
fstl
sbb
pop
mov
in
and
xor
xorb
js
stc
sub
dec
cmp
fdivrp
dec
or
in
out
dec
mov
jmp
ret
or
cmp
inc
fists
outsb
icebp
jno
aad
fbstp
jp
pop
in
inc
loop
mov
pop
fldl
movsb
pop
dec
mov
cli
xor
lods
into
test
enter
xchg
rcrl
jle
out
pusha
or
jecxz
popf
sahf
into
jb
into
int
sarl
aaa
lcall
xor
or
cmp
pop
lock
arpl
mov
add
mov
pop
mov
mov
loope
fbstp
cmpl
shrb
fmul
sbbl
rorl
sbb
xor
lods
addl
repz
dec
ret
mov
sub
aad
xchg
push
mov
sub
shr
idivb
aaa
pop
or
lret
cld
xchg
xchg
fcoms
sbb
sbb
sub
sti
leave
adc
mov
rcrl
ja
sarb
mov
repnz
repz
int3
into
mov
jl
jmp
insb
inc
loope
pop
sub
xchg
ret
cmpsl
mov
xchg
icebp
dec
pop
lds
movsb
sbb
pop
mov
jecxz
gs
je
push
inc
lcall
cmp
add
and
clc
stc
push
lret
pusha
out
xchg
and
jle
jb
imul
mov
push
mov
sarl
lahf
xor
add
pushf
out
clc
xchg
lods
push
popa
jmp
notl
push
addr16
or
pmulhuw
and
ficompl
mov
mov
test
or
add
flds
pop
jnp
cld
and
mov
and
add
insb
enter
pop
push
jnp
cmp
loope
daa
js
and
lds
pop
and
stos
xchg
lods
outsb
inc
stos
mov
xchg
sbb
in
push
sahf
fisttpl
loop
inc
addr16
ljmp
dec
dec
xor
iret
das
mov
or
sbb
pop
lock
not
adc
rcrb
stc
dec
inc
sub
shl
push
not
mov
fidivrl
mov
sahf
pop
dec
add
orb
andb
movsb
ds
sub
jmp
call
ret
jle
gs
icebp
xor
lcall
decl
or
pmulhuw
inc
fwait
rcl
aaa
jbe
out
inc
fs
xlat
ja
jo
loop
add
bound
sub
cmpsb
sahf
cmp
mov
daa
add
cs
push
dec
push
adc
adc
loop
and
mov
cmp
pop
leave
cmp
movsb
jge
mov
push
ficoms
sbb
test
je
scas
mov
inc
xor
xchg
in
jne
add
lcall
mov
repz
push
je
leave
or
ffree
xlat
in
xor
in
cs
fisttpll
daa
add
test
in
inc
pop
pop
jge
pop
mov
outsl
push
cs
push
decb
sbbb
add
xchg
rep
jne
cmpsl
xor
add
cli
dec
mov
push
mov
insl
and
sbb
push
pusha
push
psrld
daa
xchg
jecxz
push
loope
mov
mov
sub
pop
jae
xchg
jp
xchg
testb
pusha
shll
rcl
dec
stos
popf
sbb
push
push
mov
aam
and
inc
mov
xor
mulb
push
pushf
cmp
adc
ljmp
push
fimuls
jns
sbb
and
adcl
xor
mov
push
pop
or
push
sti
xor
cmc
cltd
loope
andb
mov
fnstcw
xchg
lahf
lret
cmpsl
xor
icebp
mov
aaa
mov
adc
into
cli
dec
pop
mov
mov
pop
test
jge
push
sti
xchg
cwtl
pushf
jnp
xchg
dec
pusha
dec
push
ret
pop
mov
ret
add
sti
movsl
sbb
popa
leave
jle
adc
dec
ja
jb
mov
xor
push
sbb
out
mov
adc
mov
mov
inc
in
in
sbb
sub
mov
lods
push
xor
rorl
imul
ja
jl
pop
lcall
ds
mov
xor
pop
jmp
mov
mov
scas
pushf
hlt
inc
mov
jp
out
je
rclb
orb
gs
xchg
lock
jo
jb
fcos
ds
jne
pusha
loop
xchg
dec
cmpsb
aad
sbb
enter
inc
clc
inc
out
pop
imul
inc
insl
mov
inc
and
lcall
adcl
imul
movsb
repz
rorb
stos
add
inc
lock
pop
push
je
jmp
loopne
pop
mov
test
hlt
leave
and
mov
rep
cmpsl
mov
insl
and
inc
out
mov
mov
into
loope
and
inc
sahf
inc
mov
cmp
out
or
mov
loop
xor
push
mov
jnp
jecxz
stc
nop
cs
adcl
pop
inc
push
mov
jg
xchg
jne
cmpsb
js
sub
inc
add
jae
das
loop
and
and
les
int3
cmp
inc
rol
xor
sarl
sub
cltd
mov
ja
push
ret
int3
push
cli
jp
adc
imul
sti
dec
xor
add
xchg
pop
aas
mov
int3
int3
and
lds
add
hlt
sub
in
mov
es
outsb
lahf
repz
jge
mov
fwait
xchg
add
xor
cmpsl
movsl
push
ret
cmc
into
sub
mov
adc
stos
ret
les
cmpsb
cmp
data16
jg
dec
nop
push
inc
je
xor
daa
or
mov
jg
jne
xor
dec
arpl
rol
lods
mov
or
in
insb
movl
or
fucomp
sbb
test
pop
sbb
add
push
push
xchg
cmp
jmp
adc
xchg
clc
inc
push
cwtl
mov
les
ja
push
dec
loope
insb
push
mov
bound
mov
dec
fcom
inc
popf
fcmovnb
sti
addr16
xchg
dec
lcall
pop
push
aaa
gs
sbb
test
sbb
mov
push
xor
aad
insl
mov
jmp
imul
bound
mov
add
test
sbb
mov
push
fidivs
out
outsb
inc
mov
fiaddl
add
cmpsl
rcll
out
in
xchg
xchg
dec
add
popf
out
jae
mov
cmp
int
movsb
imul
xor
push
mov
push
pushf
adc
fwait
pop
sbb
or
push
mov
inc
pushf
push
ljmp
outsl
lret
cmpsl
push
xor
pop
js
adc
ss
out
xchg
nop
imul
pusha
les
xor
xchg
push
into
in
xchg
addr16
mov
cltd
ljmp
out
mov
mov
sub
ror
push
pop
cmc
push
pop
repnz
mov
mov
or
cld
cmpsb
insb
sbb
and
jecxz
inc
std
popf
pop
xor
add
mov
push
movsb
out
incl
inc
fnstsw
mov
aad
ss
pop
xor
xchg
or
and
mov
stos
xchg
std
ss
sub
mov
sti
pop
in
mov
imul
scas
iret
lret
xlat
out
or
sbb
movsl
pop
stos
js
rol
call
cmp
dec
and
adc
mov
imul
jecxz
test
xor
mov
rcr
mov
jno
sti
vextractps
and
adc
lods
or
popa
js
push
rol
mov
mov
insb
inc
mov
sub
mov
stos
test
movsb
mov
in
fs
sbb
mov
push
int3
sbb
cmp
and
sub
dec
and
clc
adc
dec
jecxz
cli
xlat
out
lahf
roll
lcall
jle
or
aas
lret
mov
sarb
lods
cmp
jle
inc
rorl
pop
mov
inc
aad
shr
inc
or
xchg
xchg
inc
mov
out
nop
sbb
adc
outsl
lcall
sub
insl
pusha
xor
or
roll
mov
and
imul
popa
adc
ficompl
leave
jno
cld
out
insb
hlt
cltd
pop
mov
call
lock
enter
loop
js
aad
and
sub
pop
or
aad
push
add
jge
out
cmp
sub
gs
ja
fwait
pop
andb
fnstenv
ja
sbbl
repnz
lods
mov
add
cwtl
mov
add
std
ret
push
mov
cmp
sbb
rorl
sub
jp
js
jnp
xlat
pushf
out
test
scas
rcrb
cmp
mov
xor
enter
addl
push
xchg
or
sti
adc
lods
jge
cld
mov
adc
push
jecxz
or
dec
mov
insb
je
fs
lock
out
pop
jb
push
xor
jo
ljmp
scas
sub
push
cmp
loope
pop
add
and
es
inc
xor
xchg
stos
add
insl
push
test
mov
movsb
lahf
sub
sub
imul
pop
and
mov
adc
mov
das
pop
mov
push
and
fwait
mov
fistl
out
push
out
cmpsb
lods
xchg
cmc
inc
pop
mov
lret
icebp
push
or
in
imul
in
dec
mov
enter
dec
pop
adc
adc
andl
dec
push
cmp
ret
push
cld
std
mov
jle
inc
xor
lahf
jg
lds
sub
inc
lret
and
shrl
cs
jns
jp
push
pop
adc
cmp
dec
dec
cmp
adc
mov
and
inc
lsl
or
cmp
insl
shlb
andb
cld
cld
push
arpl
insl
sub
testb
jno
dec
call
cmp
xor
pop
dec
je
mov
sbb
test
sbb
outsb
inc
stc
lock
xchg
popa
or
in
mov
mov
pop
imul
inc
in
pushf
dec
xchg
call
fisttps
cmp
bound
mov
je
push
push
mov
push
fbstp
mov
aaa
mov
inc
ljmp
mov
jp
mov
gs
cmc
lahf
xchg
ret
dec
cmp
pop
xchg
mov
sbb
push
lods
shlb
xchg
mov
shrl
cli
fistl
mov
cwtl
mov
adc
outsb
dec
das
lret
fldl
rolb
add
inc
popf
fidivl
cmp
inc
pop
mov
shr
push
ret
or
sti
jo
lock
push
cld
pusha
inc
call
xchg
lock
add
xchg
movsb
ss
mov
pop
subb
test
aaa
mov
testb
test
movsl
xor
pop
jno
push
aam
sub
sbb
mov
mov
and
mov
mov
mov
rorb
xor
xor
out
aaa
sti
add
cmc
cmp
xchg
dec
or
mov
sahf
mov
or
cmp
sub
cmpsl
aad
mov
sbb
lods
leave
je
xchg
shll
js
xor
into
xor
mov
sbb
repnz
xor
and
push
ss
imul
roll
jl
mov
add
outsb
inc
sub
insl
stos
adc
adc
ja
int
subb
lahf
hlt
inc
xor
mov
mov
subb
fsts
mov
jp
mov
adc
push
inc
mov
xchg
cs
inc
popf
loopne
test
scas
cmp
loop
lcall
ljmp
sti
pop
push
ljmp
mov
inc
xor
lahf
sbb
movsl
cmp
jbe
push
icebp
cmp
mov
pop
adc
jmp
hlt
or
cmpsb
jo
into
push
cmp
mov
pop
mov
dec
ja
iret
push
jge
mov
mov
mov
cmp
pop
idivl
and
test
fs
mov
stos
scas
aas
std
pop
push
and
or
mov
adc
mov
xchg
lea
xor
xor
inc
cmp
add
addb
xor
data16
add
cmp
cmp
inc
cmc
add
push
in
mov
sub
movsl
pushf
shl
popa
jecxz
sbb
ffreep
or
dec
test
out
push
sahf
into
out
test
sbb
xor
lret
mov
fcomp
mov
pushf
aad
xor
jge
sub
add
andb
cld
add
lcall
push
pop
addb
in
jp
cwtl
add
cmp
leave
jnp
js
dec
insl
dec
cmp
xchg
stos
sub
lahf
lahf
inc
js
push
push
and
pop
pop
arpl
loope
mov
shrl
in
push
lods
inc
fwait
pop
iret
push
dec
sahf
or
push
fidivl
mov
mov
or
lds
lret
pop
push
add
sub
push
mov
enter
and
out
and
ja
xchg
rcrb
addl
sbb
pop
sti
cli
loope
popa
pop
xor
shll
pop
xlat
sbb
js
add
inc
mov
cld
jne
jl
pushf
imul
and
fidivrl
mov
jns
push
xor
dec
add
inc
adc
repz
lcall
jne
arpl
xchg
mov
out
addr16
cld
hlt
cld
or
stos
xor
mov
adc
mov
xor
dec
std
and
dec
xchg
loope
sbb
sbb
gs
movsl
imul
inc
and
out
adc
imul
orb
bound
cwtl
jmp
mov
pop
mov
stos
subl
sbb
add
scas
inc
iret
nop
clc
fistpl
pushf
ja
inc
sub
fisubl
les
or
or
aaa
dec
pop
scas
mov
mov
into
pop
hlt
xlat
gs
out
and
lds
xchg
add
sub
ror
add
ffreep
lahf
imul
mov
push
dec
mov
fsub
pop
jno
xor
push
cltd
int
in
mov
lcall
dec
mov
in
aas
sbb
lahf
cmc
add
outsl
hlt
out
js
sub
filds
push
and
lods
cmc
jp
pop
je
movsb
xchg
gs
sbb
sbb
and
and
insl
mov
fbld
and
pop
icebp
ljmp
stos
testl
popa
cmp
mov
push
inc
adc
mov
inc
sub
push
mov
pop
fnstcw
pop
xor
std
ss
lods
push
inc
rcll
iret
test
lret
lret
bound
fnsave
adc
xor
ret
shrb
aas
add
xor
cli
test
push
xchg
mov
in
lahf
sub
js
leave
jg
sub
in
dec
mov
pushf
inc
mov
xor
xchg
cltd
pusha
pop
mov
sbb
aas
gs
cmp
jo
test
add
lock
xor
adcl
push
mov
ljmp
pop
jmp
andl
shll
dec
sub
fadd
stos
stc
mov
mov
pop
cwtl
jo
ss
sbb
adc
aaa
mov
jl
sbb
enter
test
cli
jl
or
fiadds
clc
cwtl
push
imul
mov
or
aad
lods
cs
arpl
test
ficoms
jb
sbb
scas
je
ljmp
into
js
fsubl
lcall
jl
fcompl
out
xchg
in
fcmovb
push
or
mov
arpl
sub
enter
int3
stc
repnz
and
xchg
xchg
pop
xchg
and
sbb
nop
or
push
fmuls
xchg
lret
movl
les
dec
push
jmp
dec
push
push
les
and
mov
stos
mov
pushf
sub
add
xor
out
inc
jmp
sub
add
lods
mov
pop
and
xchg
mov
mov
push
and
jo
lea
sbb
ret
loopne
out
xchg
adc
jmp
cmpsl
adc
add
loope
inc
push
push
push
adc
addr16
cmp
enter
scas
cmp
cwtl
outsb
out
aaa
xor
sub
out
fsubr
xor
rcr
ds
ja
cltd
dec
push
mov
xchg
pushf
push
jl
push
inc
cwtl
inc
orb
or
or
push
inc
in
dec
add
cmpsb
mov
dec
nop
imull
icebp
nop
sbb
cltd
imul
sub
mov
insb
inc
fdivrl
mov
test
pop
cmp
xlat
mov
sbb
pop
jp
mov
cmp
mov
add
push
adc
mov
inc
jmp
aaa
xchg
mov
adc
into
xorb
lods
data16
mov
xlat
push
jae
push
push
out
xor
push
cmpsb
xchg
sbb
cmp
jl
mov
imul
push
daa
mov
fisttpl
mov
jae
mov
test
sub
cld
stc
mov
cs
dec
icebp
fxam
clc
push
arpl
cmc
adc
in
pop
xchg
out
inc
adc
adc
out
in
or
in
in
fbld
lret
sub
mov
jp
xor
ret
fbld
xchg
mov
les
jg
push
aam
insl
mov
inc
push
jl
mov
movsb
orl
pusha
lock
inc
shrl
sub
add
push
push
adc
jb
ljmp
pop
pusha
test
inc
movsw
into
imul
lock
adc
fildl
or
fnclex
sbb
cmc
test
data16
adc
dec
pop
arpl
fwait
call
push
aad
loope
and
fisttpl
pop
out
leave
mov
inc
jle
in
pop
scas
jge
push
pop
mov
xor
inc
stos
and
sbb
into
into
jg
mov
cltd
xlat
fidivrl
fs
cmovg
sbb
xchg
and
enter
pop
adc
inc
mov
mov
mov
mov
push
or
ss
mov
dec
sub
and
lods
lret
cmp
push
mov
add
in
les
sbb
stos
aaa
mov
dec
xchg
push
mov
sub
sub
fadd
xor
mov
mov
cltd
test
mov
xchg
mov
sbb
mov
mov
adc
pop
std
mov
mov
push
push
jo
shlb
lret
mov
sbb
iret
subl
adc
and
sub
cmpsl
enter
out
pop
pushf
and
xor
das
xchg
dec
mov
jnp
rcrb
inc
cmpsl
mov
add
mov
imul
sbbl
push
out
jo
mov
cmp
jae
pop
in
dec
inc
fdiv
lcall
pop
sub
shll
inc
into
stc
js
dec
fucompp
sub
fwait
std
mov
int
repz
mov
mov
pop
scas
or
mov
push
sbb
scas
cwtl
pusha
andl
pop
pusha
imul
adc
xchg
fstpl
inc
sbb
loopne
add
or
cmc
lcall
gs
jl
lds
dec
push
adc
hlt
or
subb
sub
pop
dec
int
push
cwtl
in
push
inc
popa
lock
inc
sbb
lret
sbb
testl
inc
dec
out
mov
ret
aaa
cmp
adc
insb
xchg
pop
mov
test
popf
pushf
push
jns
aam
insb
ror
in
cmp
jp
mov
test
in
testl
lock
sub
rcll
mov
xor
std
ret
pusha
pusha
adc
xor
ljmp
or
daa
sub
push
xchg
idivb
into
push
pop
imul
cmp
mov
call
or
xchg
sti
mul
cmp
test
pop
cmpsb
test
jb
cwtl
adc
cmp
jns
inc
inc
lret
mov
mov
leave
nop
sbb
adc
insl
xchg
nop
or
sbb
lahf
arpl
sbbl
aas
mov
frstpm(287
jmp
sub
stos
or
mov
cmp
sub
and
sub
cmp
mov
xchg
cwtl
aam
mov
mov
push
pop
inc
clc
mov
mov
and
mov
mov
jo
dec
sbb
adcl
cmp
jg
mov
push
aas
gs
xchg
jecxz
sub
xlat
fcom
jns
fs
adc
icebp
ds
jp
jae
sub
sub
mov
ljmp
push
test
mov
jbe
xchg
lret
mov
fldenv
mov
xchg
testl
jnp
aad
fldl
dec
out
jae
cmp
dec
shrb
mov
test
pop
in
jno
leave
in
add
pop
scas
daa
fimull
enter
popf
out
pop
into
mov
xchg
std
push
push
adc
es
xchg
rclb
lods
xchg
ret
test
inc
cmp
iret
stc
xchg
push
sbb
pop
cmp
pop
xchg
cmp
aaa
in
push
sub
sahf
mov
dec
lock
ret
bound
push
das
cltd
cld
and
ja
sbb
insb
call
jle
sub
cmp
sub
mov
sub
xchg
add
data16
push
xor
iret
or
rclb
mov
inc
in
daa
dec
jp
inc
leave
fisttps
fwait
cld
imul
xchg
push
mov
sbb
and
stos
xchg
ds
test
stos
jle
mov
jno
adc
add
jb
aas
mov
dec
sub
pushl
fcompl
xchg
loop
add
dec
in
popa
inc
add
pop
mov
pop
cld
sub
sbb
cmp
rorl
mov
push
nop
std
jge
lret
jmp
cmpsb
je
add
jmp
loope
ret
out
add
and
fmul
ret
out
inc
sti
dec
mov
loopne
popf
xchg
call
pop
shlb
ret
jmp
das
insb
cmpb
mov
ret
mov
or
sbb
cmp
xchg
test
and
outsb
inc
pusha
cwtl
mov
cmp
or
mov
leave
mov
test
stos
addr16
ficoms
cld
sub
jb
add
mov
cmp
bound
push
test
clc
adc
mov
push
cmpsl
ret
adcb
sbb
add
sub
insl
inc
scas
cmp
imul
inc
pop
popf
popa
add
xchg
pop
push
push
xlat
or
je
push
jo
lods
push
into
ror
call
inc
aas
je
mov
fisubs
fmul
punpckhbw
test
in
lods
mov
cmpsb
pushf
and
xor
sbb
xor
pusha
clc
ficomps
adc
xchg
mov
xchg
into
stc
xchg
push
mov
int
cmc
pushl
bound
aad
mov
pop
cli
cmc
xchg
imul
jge
sbb
and
add
scas
movsl
lahf
movsbl
push
pop
jg
xchg
shlb
orl
xchg
cmp
rcrl
lret
subl
icebp
ljmp
imul
shll
fisubrl
pop
fucom
pop
or
adc
inc
adc
cmp
vpandn
jle
lods
jno
dec
or
jge
cmpsb
repnz
out
xchg
leave
push
insl
pop
lods
cltd
movsb
aas
movsb
jmp
xlat
inc
inc
lea
xlat
mov
loop
mov
notb
call
enter
test
lods
jno
iret
adc
add
push
add
jp
jnp
push
dec
xchg
inc
scas
xor
cmp
push
add
sbbb
fsts
loope
out
push
cmp
lods
jns
cmc
test
addr16
xchg
ret
xchg
jnp
ret
mov
je
cmp
push
cmpl
mov
mov
and
test
popf
mov
outsl
bound
pop
out
addr16
push
mov
mov
dec
in
xor
out
add
imul
les
mov
mov
xchg
and
sub
and
pop
movsb
stos
mov
push
adc
cmp
or
sub
mov
outsl
cmc
dec
dec
dec
add
dec
lods
out
mov
xchg
sbb
mov
sub
outsw
cmp
lock
movsb
add
dec
fbld
or
inc
cmp
mov
inc
ds
or
lret
jne
mov
test
inc
jae
pop
inc
mov
dec
dec
push
loop
mov
cmpsb
inc
mov
jno
xchg
std
call
inc
lock
mov
popa
roll
or
mov
or
std
jmp
jg
pop
movsl
sbb
enter
pop
out
sub
imul
or
xlat
call
aaa
sub
mov
sub
clc
xchg
mov
pop
cld
stos
jmp
push
repnz
nop
sub
xchg
ss
inc
and
adc
add
lods
scas
subb
push
scas
aad
addr16
and
sbb
mov
outsb
dec
jnp
dec
cmp
mov
rcr
add
mov
and
push
cmp
fwait
loope
pop
sub
das
xchg
arpl
and
mov
push
inc
outsb
cmpsb
roll
pop
push
cltd
daa
scas
jecxz
adc
movsl
or
dec
adc
stc
pop
loopne
stos
add
sbb
mov
inc
pop
dec
cmp
jo
xchg
sub
xchg
in
sub
or
scas
clc
push
shl
cs
mov
xchg
in
aaa
data16
test
orl
inc
cmp
stos
jl
xchg
cmp
les
sub
out
shl
cld
add
xorb
cwtl
fyl2x
mov
sbb
ss
or
xor
pusha
push
mov
gs
rcr
data16
repnz
sbb
inc
mov
jb
push
leave
sbb
add
loop
cmp
xchg
mov
jp
test
mov
push
sarb
addl
mov
xor
insb
xchg
test
mov
stos
rcrb
rcrb
outsb
rol
cmp
les
cmp
inc
inc
pop
cmpsb
sub
stc
or
add
push
insb
mov
xchg
pop
pusha
jecxz
cltd
jge
andb
das
push
xchg
in
and
sbb
jmp
in
das
popa
xor
cmp
sti
mov
mov
sub
cmp
add
mov
xchg
shll
insb
mov
add
xor
data16
shr
dec
mov
scas
mov
or
loope
push
xchg
test
cmpsb
xor
shlb
ljmp
jge
pop
sahf
das
add
ret
inc
imul
fs
jg
add
adc
push
out
pop
cmp
cmp
aam
stos
mov
std
pop
scas
out
test
cmp
mov
sub
push
subb
sub
push
add
xor
femms
push
std
dec
repz
movsb
out
int3
imul
xor
sub
sbb
mov
jmp
enter
sbb
insl
adc
mov
out
iret
xlat
mov
mov
add
sbb
dec
addl
pop
sbb
push
sbb
stc
push
adc
lock
push
rcl
xchg
cwtl
in
subb
pop
and
or
jg
xchg
lret
dec
and
cmp
test
bound
cmp
jns
mov
sbb
mov
stos
stos
les
push
mov
add
shl
mov
jmp
jmp
cmp
cwtl
loop
dec
outsl
xorl
into
sub
push
xor
pop
dec
fidivl
xor
add
inc
rorl
mov
cmpsb
sub
lret
sbb
mov
insl
mov
insl
pop
leave
mov
cmp
sbb
cli
cmp
cmc
pushf
mov
loopne
rcll
sbb
shl
aas
sub
push
mov
or
sbb
leave
cmp
ds
cmp
mov
test
mov
scas
stc
ss
stos
into
push
pushf
and
mov
in
jecxz
jne
cmp
fldcw
sub
xchg
mov
jmp
and
xchg
push
mov
call
pop
and
xchg
shlb
xor
arpl
addr16
lds
mov
mov
lahf
pop
xchg
inc
aaa
insb
sbb
mov
fnstcw
pop
inc
dec
fucomi
outsb
push
stos
xor
shrl
mov
and
inc
insl
ret
test
xor
and
js
or
imul
gs
pop
movsl
adc
sub
sbbb
inc
js
imul
jmp
data16
mov
lock
fwait
cmp
sub
stos
inc
xor
into
loop
mov
inc
sub
jne
pop
dec
cmc
stos
stos
aam
adc
jns
loope
fidivrs
stos
or
sbb
clc
imul
faddl
mov
aaa
adc
or
dec
mov
push
pop
outsl
insl
mov
adc
mov
lock
pop
pop
mov
popa
aaa
push
dec
cmp
mov
xchg
push
sbb
popa
mov
mov
cli
test
xchg
push
mov
mov
sti
add
movsb
dec
out
rcl
cmp
inc
arpl
sbb
push
aaa
xor
jg
pop
leave
pushf
sahf
popa
movsb
dec
fst
mov
sub
pop
shlb
cli
lret
loop
addr16
cli
xlat
sub
leave
xchg
pusha
movhps
imul
cmp
mov
scas
gs
sbb
imul
sbb
sub
sbb
fisttpll
arpl
lahf
lds
push
aad
scas
xor
mov
cli
aam
jecxz
pop
pop
push
dec
fcmove
jl
mov
hlt
mov
pop
adc
inc
sahf
jbe
ljmp
xchg
dec
stc
or
cmp
jns
iret
cmpl
fs
dec
cltd
push
push
push
enter
inc
pop
cltd
sbb
push
inc
push
popf
mov
lock
jle
in
push
and
xor
adc
pop
ret
subb
mov
jecxz
in
xor
out
fmuls
ror
or
lahf
std
shr
jp
dec
lcall
out
rorl
pop
adc
or
pushf
mov
enter
pop
sti
push
movsb
dec
xchg
cmpsl
or
sahf
repz
cmpsb
lret
bound
xor
movsl
and
insb
fisubrl
jnp
jmp
or
jb
fidivs
sub
inc
imul
and
inc
mov
int
idiv
mov
fisubl
xchg
loopne
cmc
pop
cltd
outsl
jmp
jmp
dec
sbb
test
cmc
leave
jl
xor
std
hlt
into
fneni(8087
cmpsb
aaa
and
loope
loopne
dec
dec
imul
inc
inc
pop
stc
inc
mov
mov
mov
inc
push
jno
cwtl
shl
rorl
adc
lcall
int
sub
pop
dec
dec
decl
dec
pusha
xchg
mov
adc
mov
in
outsb
jp
aaa
adc
add
in
test
or
or
and
sti
mov
push
jp
je
mov
cmpb
insb
mov
inc
cmpb
inc
call
add
imulb
test
or
and
shl
test
sbb
sub
int3
lahf
xor
idivl
and
fs
mov
repz
loopne
xchg
ret
sub
mov
sbb
xor
push
or
push
popf
loope
popa
mov
popf
push
sbb
mov
sub
mov
lret
push
sub
xor
test
int
outsb
xor
and
sub
add
imul
push
ficompl
pop
mov
ret
sbb
fldt
pop
imul
mov
lods
leave
dec
ror
cmp
xor
outsl
stos
enter
repz
inc
pop
add
dec
and
inc
jge
cli
inc
push
mov
push
pop
mov
mov
sbb
rcrl
idivb
jle
int3
lods
in
mov
xchg
ss
sbb
mov
incl
insl
adc
push
add
cli
imul
dec
cli
sub
repnz
and
imul
popf
shll
sbb
push
pop
cmp
hlt
adc
or
test
clc
mov
fldt
add
popf
jne
rcrl
lahf
loope
out
add
fnstcw
shrl
popf
movsb
push
push
cmpsb
jbe
xor
daa
cs
mov
cmp
sbb
clc
dec
lock
lods
fmulp
insl
xor
adc
mov
adc
cmc
divb
es
jns
movsl
dec
or
outsl
mov
sub
mov
and
filds
push
outsb
iret
sbb
shll
jae
push
fisubl
dec
test
jp
jg
dec
dec
pop
dec
test
xchg
fwait
repz
movsl
sub
push
adc
movsb
mov
xlat
ret
push
jnp
dec
inc
cltd
push
sub
scas
xchg
sbb
aam
mov
inc
mov
repz
or
mov
cmc
call
out
shll
mov
add
ds
inc
jecxz
clc
mov
cs
pop
push
mov
dec
mov
fcoms
fisubrs
pop
jle
cmpsb
fsubp
or
lahf
mov
decl
lret
jb
dec
aaa
rcl
gs
pop
movsb
push
add
mull
scas
push
pop
xor
mov
jo
pushf
bound
repnz
icebp
int
call
jp
sbb
mov
pop
dec
push
sbb
scas
mov
dec
mov
mov
jno
or
mov
xchg
push
shl
inc
cwtl
ss
jge
enter
test
or
test
vcvtsi2ss
sbb
xchg
loope
insb
push
push
dec
ret
lods
data16
add
sbb
into
jle
jne
xor
jmp
push
fistpll
popf
fnsave
daa
shlb
dec
aas
shrl
jbe
push
adc
push
or
cwtl
imul
out
or
or
xchg
jns
cmp
in
loop
jo
mov
adc
pop
mov
aaa
mov
ds
out
dec
ljmp
arpl
insb
sbb
or
mov
jge
sbb
jecxz
mov
enter
das
mov
xchg
lds
mov
and
inc
sub
bound
cmpsl
fsub
inc
xchg
xor
out
mov
rcr
lcall
mov
adc
jne
mov
inc
mov
sub
adcb
or
cmp
jg
inc
jmp
pop
push
pop
movsb
movsl
xor
push
cmp
cltd
mov
cmpsb
inc
add
scas
js
push
jno
push
and
cltd
adc
icebp
or
xchg
pop
je
shr
out
out
inc
shlb
cmp
repz
into
enter
leave
xor
jns
xchg
std
cmp
sbb
jno
sbb
jle
push
mov
xor
shll
dec
sbb
stc
mov
iret
lcall
pop
pop
loope
add
jo
add
stos
lcall
cmp
xorl
outsl
jge
icebp
popf
mov
ret
push
mov
jnp
pop
sub
jb
jns
sbb
repnz
push
mov
aad
xlat
xchg
xor
mov
scas
mov
daa
out
sahf
in
loope
inc
sub
or
xchg
jle
in
outsl
ret
xchg
fiadds
ret
imul
insb
enter
adc
pop
jbe
adcl
in
popl
rcr
test
sub
sub
addl
movsl
adc
cmp
adc
leave
xlat
rcrl
out
fucomi
shrb
and
or
xlat
pop
in
xchg
addr16
test
mov
shll
cmp
add
xlat
mov
lock
in
enter
shrb
inc
iret
mov
lds
addr16
jge
dec
cmp
sbb
add
lcall
sbb
adc
lds
fwait
imull
or
adc
ja
repnz
je
out
pop
fmuls
call
enter
sbb
jg
pop
jg
outsl
sahf
or
add
loop
fidivrs
and
push
xchg
dec
and
jl
jle
lea
dec
inc
mov
in
jbe
mov
dec
push
arpl
or
into
sub
pop
xor
pushf
fsubl
icebp
or
xchg
push
lea
cmp
das
frstor
loopne
scas
lods
ss
fstps
sahf
cmp
testl
subl
ret
add
mov
dec
cmpsb
adcb
sub
pop
lds
inc
outsl
loopne
les
dec
sub
aaa
mov
push
clc
or
add
ja
jmp
mov
mov
sub
adc
push
nop
sarl
pop
lock
push
ljmp
and
test
dec
sub
outsl
cli
mov
xor
dec
push
sub
movsl
jmp
jnp
jp
mov
in
dec
popf
or
xchg
bound
test
std
sub
pop
xor
scas
cmp
mov
adc
xor
jmpw
in
mov
dec
in
cmpsl
push
rol
sti
imul
cmp
add
mov
fisubl
in
stc
push
mov
cmpsl
outsl
jnp
cmp
pop
add
fs
or
sbb
add
rclb
pop
lock
sub
pushf
shll
mov
cld
lea
or
testb
xchg
lods
inc
mov
adc
xor
xchg
outsl
add
sbb
aam
lods
mov
ljmp
lds
pop
and
sub
cmpsl
jb
mov
inc
fistpll
xlat
mov
mov
sbb
popf
mov
jl
loop
mov
aaa
add
insb
xor
mov
scas
outsb
clc
adc
es
js
inc
dec
test
loope
clc
mov
adc
sbb
test
jb
cmp
std
rcrl
add
ret
xor
enter
ficompl
fwait
adc
jno
in
ss
jo
or
out
add
dec
bound
sbb
push
xchg
push
out
mov
mov
sbb
mov
lods
mov
cmp
push
dec
dec
cmp
add
push
jmp
enter
pop
ljmp
les
mov
jns
mov
sbb
pop
incb
fwait
mov
mov
call
push
sar
pop
jmp
mov
pop
aam
cmp
cmp
inc
iret
adc
iret
sbbb
test
xchg
inc
shll
cltd
movsl
test
aaa
jp
test
movsb
lcall
and
and
lea
test
orb
sbb
lcall
pop
cli
xchg
fnstenv
shrl
in
cltd
sub
jmp
leave
or
cmp
lock
mov
adc
lcall
inc
dec
fldt
pop
add
xchg
test
fsts
adc
or
xchg
roll
shl
mov
scas
sbb
and
and
inc
pop
shrb
popf
xor
cmpsl
dec
pop
test
mov
mov
aad
clc
shrl
mov
push
subb
loope
addr16
sti
mov
jb
clc
push
mov
and
lahf
test
push
add
mov
out
lea
test
mov
cltd
ds
in
xchg
cmp
scas
faddl
adc
lcall
add
pop
pop
dec
cltd
loop
add
mov
push
shr
frstor
cli
xchg
stos
adc
lcall
jecxz
scas
out
dec
dec
jae
xchg
movl
or
test
repnz
xor
add
aad
push
sarb
xor
shl
lods
pop
sbb
mov
or
incl
jecxz
inc
sub
cld
mov
filds
ret
pop
sub
mov
or
std
shr
and
xor
push
lds
insl
nop
jg
mov
jge
inc
jmp
xor
ret
cmp
adc
mov
xlat
and
push
cmp
es
out
xchg
mov
adc
jne
pop
or
shr
addr16
rorb
cmp
fisttpll
sub
mov
data16
into
arpl
add
pop
aas
push
xchg
lea
lods
in
jl
out
iret
int3
into
es
sbb
dec
je
repnz
xor
jmp
fidivs
dec
test
bts
sub
xchg
mov
test
test
lds
mov
aaa
test
ja
mov
aad
cld
popf
ror
out
lcall
hlt
imul
dec
push
pop
imul
pop
push
inc
mov
enter
movsb
fimuls
fidivrs
gs
or
fdivrs
mov
imul
insb
jne
and
cmp
jle
push
das
hlt
jge
xchg
mov
jecxz
add
sub
int3
test
or
jg
adc
test
sbb
pop
jb
adc
movl
lahf
jo
daa
add
push
dec
and
inc
and
pusha
and
in
out
push
dec
cmp
inc
sub
sub
xor
lret
cwtl
in
pop
mov
ret
aaa
cwtl
inc
xor
mov
insl
adc
sub
dec
int3
push
aas
cmc
aaa
clc
ds
stos
popa
and
jle
stos
xor
mov
arpl
call
push
dec
push
sbb
or
in
inc
mov
mov
jae
movsl
and
pop
inc
adcb
mov
fisubrl
sub
mov
jnp
sbb
cltd
cli
xchg
cs
fiaddl
xchg
pop
jne
add
lea
popa
jae
inc
inc
mov
adc
repz
lods
mov
and
lock
or
add
push
aas
repz
mov
call
rclb
jg
fbstp
pop
sbb
mov
scas
movl
enter
adc
xor
in
lock
je
inc
push
mov
fistps
loop
ficompl
mov
push
xor
mov
in
pop
xchg
sub
idivl
or
jmp
adc
or
inc
xchg
arpl
ret
xchg
fmull
mov
push
and
mov
xchg
mov
fiadds
add
mov
pop
out
xchg
aad
test
xchg
fs
mov
icebp
fldenv
add
daa
mov
and
xchg
aas
xlat
insl
xlat
xchg
inc
es
pop
push
scas
or
pop
mov
push
xlat
adc
sahf
push
jns
ret
xchg
in
adc
out
in
outsb
jl
lds
and
pop
and
xor
in
and
mov
and
or
loope
push
subl
lcall
cmp
push
je
pop
adc
xor
pusha
or
xchg
fmulp
sbb
xchg
aas
inc
push
les
dec
movsb
cwtl
sbb
stc
push
outsb
ljmp
sbb
dec
jmp
push
pop
and
mov
mov
incb
xor
notl
lea
pop
jae
and
pushf
popfw
jge
icebp
xchg
outsb
fnstenv
xor
jns
scas
int
pop
push
xchg
jge,pn
mov
decb
scas
test
fstpl
inc
lds
mov
scas
je
insb
add
das
mov
jge
pop
sub
pop
and
inc
cmp
into
aaa
in
sbb
gs
data16
push
in
add
cwtl
xchg
fildll
mov
pop
xchg
sbb
addr16
jns
xchg
mov
addl
jmp
je
cwtl
popa
cmp
out
ds
adc
sbb
push
sbbl
sub
nop
adc
imul
pop
insl
enter
jecxz
shll
int
rcrl
xlat
mov
ss
mov
lret
addr16
cmp
sahf
or
bound
testb
cmp
outsl
cmc
and
or
xchg
mov
shll
daa
leave
arpl
test
les
inc
out
mov
into
stos
test
sbb
sbb
pop
pop
cld
cmp
lret
test
add
adc
ds
add
clc
in
or
in
and
cmc
dec
xchg
fildll
test
mov
aam
lahf
jmp
inc
push
mov
mov
mov
pop
icebp
pushf
enter
setae
and
push
popf
fwait
jle
in
inc
add
into
cmp
scas
fstpt
xchg
or
pop
adc
mov
or
mov
mov
std
xchg
sbb
idivb
xor
int
or
loopne
add
sub
jae
fucomp
fisubl
sbb
es
adc
outsl
xor
mov
lds
je
fwait
pop
nop
mov
fs
cld
xchg
mov
ret
pop
or
lea
das
cmp
adc
jne
mov
sub
fimull
add
xchg
push
dec
cmp
cmp
mov
push
mov
daa
cs
cltd
mov
adc
dec
in
xchg
and
bound
inc
jp,pt
jp
sub
mov
xor
ljmp
and
dec
add
int
xor
pop
jno
mov
and
pop
push
add
xorl
mov
mov
inc
lods
scas
sub
jno
mov
mov
jns
push
push
rclb
push
jnp
sub
add
cmp
ss
cmp
out
in
and
orb
int3
and
mov
out
mov
clc
dec
lret
sub
sub
lock
lahf
cmp
xor
xor
in
std
push
mov
xor
xchg
je
push
aas
xlat
and
jne
fs
ja
faddp
and
add
loop
inc
movsl
xorb
imul
push
fisttpll
test
test
ss
add
ja
lret
fimull
lods
inc
cli
sbb
imul
mov
mov
lcall
fcoms
xchg
xor
pop
add
cmp
pop
movsl
xchg
out
xor
bound
fdivrs
adc
idivl
lret
and
jno
fldcw
cmpsb
and
repnz
lret
shl
xchg
mov
aam
shll
out
and
add
lods
scas
push
fwait
es
in
push
roll
mov
pushf
add
cli
mov
test
movsl
xchg
mov
call
test
adc
cmpb
data16
cmp
cmp
push
jo
jo
jg
or
jmp
jg
dec
mov
xchg
dec
mov
arpl
mov
push
xor
dec
roll
xchg
insl
pop
repz
inc
call
aam
cwtl
ss
xor
push
shlb
lret
cmpsl
es
nop
lock
xchg
inc
js
pop
and
jmp
sqrtps
pop
mov
add
mov
pushf
cmp
xlat
fistps
data16
xchg
push
dec
loop
mov
in
orb
cmpsb
xor
jb
addr16
fnsave
sub
cwtl
je
push
cmp
das
aam
icebp
cmp
add
inc
shrl
mov
adc
xchg
cmp
xchg
cmp
leave
inc
lods
pop
xchg
enter
sub
dec
popf
push
shlb
mov
test
and
rorl
popf
pop
out
in
icebp
dec
xchg
cli
insb
cwtl
push
xchg
js
dec
insb
leave
loopne
jl
jecxz
xchg
movsl
adc
out
in
fisttpll
push
jb
mov
sbb
insb
mov
jnp
adc
inc
or
adc
mov
adc
fcoml
icebp
lock
enter
pop
lea
scas
mov
push
nop
andl
testb
notb
loope
inc
fwait
inc
divb
mov
ss
arpl
les
cmp
scas
mov
cwtl
es
movsb
pop
mov
es
test
data16
lret
adc
mov
dec
popa
or
out
jp
push
jge
fsubrp
and
fdivl
insl
sub
js
xor
rcll
pop
call
fbld
adc
mov
mov
mov
and
adc
pop
jge
outsl
cmp
add
mov
shr
jmp
xchg
idivl
pop
inc
aad
scas
jmp
jno
push
or
mov
dec
decb
or
enter
xchg
jecxz
aam
aam
lock
hlt
dec
dec
sub
push
mov
inc
fimull
int3
sub
cmp
pop
out
testb
cmc
or
in
xlat
rcrl
jmp
sbb
sbb
cmp
add
ret
xor
or
xor
cmp
push
push
mov
repz
sahf
cmp
pushw
fnstsw
push
outsl
mov
test
adc
pop
dec
aad
ficompl
push
fisttpll
sub
or
cmp
inc
push
popf
rcr
xchg
push
jbe
xchg
cmp
cmpsl
dec
aad
lods
lods
in
jmp
mov
xor
pop
stos
and
push
sbb
int3
adc
add
call
int3
scas
test
aaa
inc
in
cmp
jecxz
push
or
enter
movd
pushf
push
std
mov
pop
mov
add
ret
test
push
cltd
hlt
lret
das
stc
jnp
cmp
xchg
subl
movsl
pop
add
in
sbb
test
xchg
and
mov
ss
pop
jne
xchg
cwtl
cmc
or
push
push
subl
jle
pop
imul
or
imul
fists
or
int3
sub
xchg
mov
xchg
inc
jbe
sub
add
orl
test
leave
stos
fsubp
idiv
cwtl
xor
or
aas
sbb
or
scas
mov
mov
mov
jnp
jmp
cltd
hlt
lock
test
stos
mov
stos
repnz
scas
cld
xor
push
out
xor
in
inc
out
mov
adc
out
scas
dec
dec
in
push
pusha
and
iret
mov
mov
inc
jbe
and
stos
sub
push
in
and
xor
aam
imulb
dec
mov
call
dec
jae
icebp
add
fdivr
ds
fst
jle,pt
stc
ffreep
enter
sbb
outsb
shlb
sbb
xchg
call
outsl
scas
lock
aaa
int
cld
jle
or
lcall
sbb
lds
jae
jle
shlb
data16
mov
or
pop
iret
pop
pushf
or
xlat
push
xchg
inc
rolb
pop
inc
daa
push
test
mov
xor
xchg
fidivs
mov
cmp
dec
cmp
mov
mov
fcoml
nop
and
dec
pop
xor
or
dec
or
insb
or
lods
mov
sub
aas
lods
nop
lret
mov
stos
insb
jg
mov
mov
xlat
push
sti
cmc
xor
test
in
mov
jmp
xor
pop
cwtl
xchg
int3
cmp
je
aaa
sub
jo
jnp
add
adc
iret
pop
inc
ja
push
lods
xor
cmp
dec
mov
or
mov
notl
leave
cmp
out
in
pop
adc
aad
fwait
fwait
icebp
cmp
repz
lock
mov
or
icebp
lds
add
clc
shll
shll
xchg
lods
imul
sbb
pinsrw
std
mov
mov
jnp
sbb
jmp
clc
sub
cmpsl
nop
sbb
jl
dec
lretw
or
pop
adc
xchg
out
pop
mov
jno
jae
outsb
faddp
popa
xorb
push
movb
or
pop
int3
pop
xor
xor
fsubp
inc
insl
or
decb
aas
xchg
and
sahf
rorl
pop
daa
into
aam
mov
mov
jb
popf
inc
fisubl
cmc
add
xchg
pop
jno
insb
inc
loop
sub
lods
in
cmpsb
cmp
cltd
clc
and
sub
ja
fcmovnb
iret
test
enter
add
adc
xor
insl
mov
dec
shrb
andb
xor
sbb
dec
inc
lods
popa
dec
inc
inc
inc
mov
test
dec
sub
filds
xor
pop
or
je
jg
sbb
sbb
cmpsb
aas
cmc
ljmp
jns
xorl
mov
push
mov
push
stos
test
xor
shrb
lds
loope
pop
sbb
sub
dec
test
fcom
aaa
mov
adc
and
out
hlt
sub
js
add
dec
cltd
cmpsb
cmp
adcl
add
inc
arpl
cmc
stc
mov
jnp
std
dec
dec
scas
sbb
pushf
ja
xchg
scas
dec
shl
shl
inc
and
cld
or
lcall
mov
les
mov
icebp
push
add
in
inc
movsl
sbb
mov
mov
mov
out
out
mov
jnp
xor
mov
xchg
inc
scas
dec
mov
test
shrb
mov
aam
sub
push
cmc
xchg
hlt
stos
ret
cmp
mov
jo
jo
out
imul
mov
or
in
and
fnstenv
inc
ret
jl
mov
or
push
clc
test
cmp
call
adc
cltd
std
jae
jbe
mov
ds
fldl
dec
in
xorl
mov
push
out
mov
orb
dec
inc
sbb
cmp
stc
movsb
ret
lea
movsl
mov
add
fs
int3
lds
pusha
mov
push
lea
and
inc
mov
adc
dec
fsubrs
iret
data16
insl
out
mov
outsl
inc
stc
push
es
dec
pop
frstpm(287
push
add
aas
cmpsl
insb
mov
sub
cld
add
adc
lds
lods
inc
fidivl
cltd
pop
cmp
jns
push
leave
subl
mov
mov
shl
and
mov
pop
sarl
inc
jle
sub
iret
test
xlat
xor
xor
fsubs
je
mov
xchg
vmulss
adc
push
push
cltd
aad
sarl
sbb
js
outsl
cmp
mov
inc
cmp
out
adc
loop
imul
hlt
subl
xchg
jno
mov
pop
mov
xor
and
loop
fsubrs
push
imul
notrack
mov
les
ja
push
imul
sub
push
and
aaa
xchg
dec
xchg
dec
movsb
daa
or
xlat
fisubrs
push
adcl
xchg
sbb
sub
adc
js
movsl
add
sbb
or
pop
jle
ret
sahf
cmp
dec
pop
in
sbb
xor
lock
jge
or
or
push
jmp
xchg
jo
sub
add
icebp
je
mov
xor
das
cmc
mov
jp
outsl
pop
adc
or
int
orl
mov
lret
out
inc
pop
iret
pop
test
outsb
dec
int
sub
xor
sahf
stos
dec
shlb
ret
in
mov
xchg
xor
lahf
jge
inc
aad
test
push
pop
in
cmpsl
bound
fdiv
lcall
cld
mov
jno
mov
dec
cmpsl
sub
cmpsl
sub
or
pop
push
in
mov
pushf
mov
mov
popa
pop
pop
mov
pusha
push
fdivs
es
fs
movsb
cmpsb
dec
xor
rol
js
ret
cmp
mov
dec
sbb
inc
shlb
das
mov
jae
xchg
mov
cltd
aaa
fmull
andps
add
std
sbb
sbb
pop
xchg
movsb
loop
fcompl
fwait
je
ficompl
adc
mov
js
cmovp
xlat
xor
pop
mov
nop
mov
nop
jbe
ljmp
jmp
sbb
scas
mov
aas
aaa
lahf
jmp
test
or
jp
push
mov
nop
mov
lret
mov
mov
push
es
add
push
rcll
les
mov
push
sbb
outsl
push
out
mov
into
jns
mov
push
ret
push
sbb
hlt
pop
movsl
addl
jp
adc
loop
les
sbb
jecxz
mov
jecxz
fs
in
xchg
add
push
dec
pop
pop
mul
mov
adc
bound
dec
fcmovnb
popa
jp
jno
mov
in
adc
ret
xor
cmp
push
jb
push
lcall
shll
push
jne
fisubs
insl
fsub
push
lea
mov
repnz
xchg
aam
outsb
sub
int3
fisttps
aaa
clc
jg
ja
ds
adc
inc
and
adc
adc
lods
push
or
mov
stos
jb
xchg
adc
repz
in
xchg
sub
cltd
rcrb
jnp
or
jae
xchg
xchg
or
push
lds
cmp
decb
out
shl
pushf
call
mulb
ret
mov
and
lds
bound
ficoml
mov
add
shll
push
ljmp
das
cmpsb
mov
in
xor
aaa
dec
mov
pop
jae
mov
push
push
xor
cmp
mov
jae
bound
jns,pn
std
xor
jg
push
pop
subb
movsl
push
jae
icebp
icebp
xor
arpl
pushf
mov
xchg
jns
mov
mov
lcall
mov
dec
movsl
stos
sub
pop
mov
scas
sbb
mov
out
mov
sub
jp
mov
xlat
lahf
push
aam
push
cli
mov
sbb
and
pop
push
movb
mov
lea
mov
mov
aam
mov
cwtl
js
insb
xlat
xchg
sahf
xchg
push
inc
shrl
cli
mov
fimull
aam
or
xchg
mov
pop
mov
or
icebp
mov
inc
ror
addb
gs
mov
and
pop
std
mov
inc
jae
jle
pushf
cltd
neg
out
testl
mov
mov
mov
out
popf
leave
add
ds
inc
mov
sub
arpl
jnp
mov
es
sbb
pop
sbb
insl
outsl
or
xchg
xorl
push
popf
mov
stos
movsb
xor
push
mov
cmp
cmpsl
insl
sub
outsb
adc
sub
xor
mov
ret
arpl
in
movl
dec
movsl
push
cli
dec
sbb
loop
sbb
stos
push
stos
call
pushf
push
pop
push
sub
xchg
pop
mov
mov
test
xor
xchg
add
pop
frstor
dec
jo
sbb
mov
adc
insb
cld
sahf
mov
jae
or
stos
pop
mov
dec
jge
enter
fdivrs
mov
testl
cmp
push
or
xchg
adc
call
xchg
scas
imul
cmp
aam
test
xor
push
add
andl
or
xor
cmp
sbb
xorb
sub
xor
jbe
fmul
or
cmp
in
icebp
ja
sbb
loope
jno
mov
mov
adc
icebp
pop
fwait
and
jo
mov
out
dec
aaa
add
js
mov
xor
out
insb
mov
unpckhps
inc
aad
jmp
or
lods
pop
xor
sbb
adc
cmc
adc
mov
xchg
stc
jae
xor
jp
mov
in
xor
dec
mov
mov
push
push
jge
pop
push
mov
pop
cmc
sub
xor
pop
pop
int3
lock
pop
outsl
push
into
pushf
scas
das
xchg
and
pusha
sub
push
lret
cmp
movsb
jl
imul
stos
adc
push
xchg
dec
and
ds
add
mov
nop
bound
sub
dec
mov
call
add
ja
jmp
scas
push
stos
mov
xorl
divb
jecxz
inc
add
xor
pop
je
pusha
push
xor
pop
inc
pop
out
mov
push
imul
ss
aad
subl
mov
adc
mov
outsl
mov
cmpsb
add
cmp
jb
adc
scas
inc
divl
daa
mov
daa
or
inc
pop
out
mov
inc
or
lret
or
add
sub
sbb
mov
and
push
daa
cld
and
xchg
fidivrs
mov
out
les
std
jle
mov
negl
pop
xor
or
push
mov
lods
testl
je
cmp
lods
icebp
int
inc
test
cmpsl
je
mov
jle
int3
loope
rcll
sub
xchg
out
or
pop
mov
cmpsl
or
jmp
push
xchg
xchg
pop
or
lea
insb
mov
sub
cltd
shl
xchg
cmp
mov
inc
insl
inc
sbb
xor
out
inc
or
push
lret
pop
xor
aad
lods
call
fnsave
sbb
push
mov
movsb
clc
mov
lods
in
pop
pop
cmp
lods
mov
or
mov
push
rcrb
jg
push
cwtl
sub
push
in
repz
gs
sbb
cmc
pushf
jae
cltd
nop
cmp
in
shl
xor
arpl
scas
aaa
pop
popf
xchg
pop
jle
call
sub
movsl
clc
inc
adc
push
sub
fsubrl
in
in
push
add
and
push
jo
cmp
or
popa
inc
inc
gs
popf
andl
push
cmp
jle
mov
sbb
lret
mov
jmp
pushf
mov
xor
fsts
popa
leave
pusha
inc
cli
enter
int3
ss
pusha
cs
and
xor
mov
dec
sti
mov
mov
out
add
xchg
adc
and
stos
xchg
jge
pop
iret
add
int3
popf
cmp
das
xchg
aas
lahf
pop
and
lods
mov
jne
mov
clc
outsl
dec
push
outsl
xchg
out
dec
out
icebp
xlat
les
cmpsb
inc
fisttps
lods
aam
cmp
xorb
aam
mov
out
jp
lods
push
jle
jecxz
das
fimull
dec
jle
fistpl
dec
sbb
fisttpl
or
sbb
out
push
cmp
ja
mov
sahf
dec
mov
cmp
js
sub
mov
xlat
out
out
add
scas
inc
imul
in
jl
mov
dec
cmc
out
or
pop
das
insl
aam
lea
clc
fldl
xor
add
je
mov
js
arpl
inc
mov
js
push
fstl
adc
mov
popa
nop
je
add
sbb
repnz
das
dec
in
pusha
adc
and
pop
mov
stos
mov
push
jle
das
xor
movsl
mov
or
daa
xor
sbb
sbb
mov
pop
xorb
xchg
dec
iret
inc
es
pop
sbb
fs
mov
aaa
lret
push
repnz
and
add
cmp
aad
xchg
jo
aad
mov
push
imul
cmpl
or
test
call
int
cmp
sub
jne
popf
adc
loop
jb
popf
pusha
xor
pusha
scas
outsl
lcall
xchg
add
add
outsl
push
es
dec
xor
xor
rcrb
dec
adc
cmp
bound
shrb
popf
mov
test
add
sbb
fcompl
cwtl
and
int3
loope
into
mov
mov
push
in
xchg
leave
dec
sub
inc
mov
sub
sar
vmread
call
jge
lahf
and
fstps
xor
and
inc
sbb
mov
mov
cmpsb
addb
push
jecxz
dec
adc
jo
cmp
xor
and
mov
sub
jae
cwtl
jnp
and
enter
test
mov
xchg
push
stc
inc
lods
push
mov
dec
mov
jecxz
dec
jnp
sahf
mov
sub
xchg
stos
or
jmp
scas
scas
je
test
repnz
or
sti
jo
dec
pop
stos
sub
adc
repz
shl
or
jno
inc
add
sub
push
jecxz
add
ret
inc
add
andl
xchg
clc
std
fs
aaa
ret
mov
mov
rorb
test
fs
xlat
xor
pushf
lahf
leave
cwtl
jns
out
push
dec
push
mov
dec
aas
imul
mov
sub
push
stc
cmp
or
xor
mov
imul
sub
sbb
fidivrs
mov
js
inc
sbb
xor
dec
xchg
loop
fcom
mov
cmp
dec
rolb
mov
add
adc
lods
push
aam
sbb
in
cli
cmp
movsl
or
jp
adc
movaps
sub
aam
sub
cmp
lcall
mov
bound
inc
daa
push
mov
orps
popf
jmp
push
enter
push
or
jle
jl
inc
movsb
scas
out
stos
ljmp
loop
mov
mov
fisttpll
lea
and
sbb
dec
and
mov
mov
jo
jae
cwtl
insb
fidivs
mov
cmp
jmp
cmp
mov
sbb
xor
xchg
jge
js
je
mov
mov
xchg
pop
hlt
add
dec
adc
push
in
into
fcmovnu
ljmp
mov
sbb
jge
dec
sub
xor
cmp
clc
lods
leave
dec
cmp
sahf
xor
add
aas
mov
inc
mov
fcmovnbe
nop
in
call
mov
int3
dec
and
lahf
inc
jge
fbstp
mov
push
xchg
jmp
negl
out
insl
mov
sub
push
push
addb
cs
sahf
out
popf
xor
ljmp
aam
pop
sub
mov
lock
