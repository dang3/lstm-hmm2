inc
adc
add
push
mov
push
xor
movl
mov
call
push
push
push
mov
mov
push
mov
mov
push
mov
mov
push
pushl
mov
mov
pushl
mov
mov
push
mov
mov
mov
mov
mov
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
mov
mov
mov
mov
testb
jne
push
lea
push
call
test
je
andb
cmp
je
lea
xor
cmp
mov
lea
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
push
call
add
test
jne
lea
push
call
test
je
push
mov
mov
call
test
je
mov
push
push
lea
push
lea
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
lea
push
call
push
call
test
jne
jmp
movzbl
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
xor
cmp
je
cmpb
je
inc
add
mov
mov
call
test
je
inc
add
incl
jne
mov
mov
mov
call
cmp
je
inc
add
push
call
cmp
je
inc
add
adc
test
je
inc
add
call
cmp
je
mov
mov
mov
call
lea
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
add
and
add
mov
mov
mov
mov
add
add
call
cmp
jne
push
mov
lea
mov
call
mov
cmp
je
lea
push
lea
movl
movl
movl
mov
mov
push
push
call
mov
test
jne
test
jne
cmp
jne
lea
call
mov
cmp
je
cmp
jne
push
mov
lea
mov
call
mov
mov
mov
push
push
mov
call
cmpb
mov
jne
mov
mov
mov
mov
mov
mov
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
mov
cmp
jne
push
call
add
cmp
je
mov
mov
push
mov
call
mov
test
je
mov
mov
push
call
test
mov
je
mov
mov
movb
movb
mov
mov
lea
call
mov
mov
cmpl
je
mov
test
je
cmp
jne
call
test
je
push
mov
call
lea
mov
call
mov
mov
push
call
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
push
lea
call
push
lea
lea
call
lea
push
push
push
call
test
js
mov
test
je
xor
lea
call
test
je
mov
mov
push
lea
lea
call
lea
push
push
lea
push
call
test
jns
cmp
jne
mov
mov
push
push
call
add
or
push
lea
lea
call
lea
push
push
lea
push
call
test
mov
jns
cmp
jne
mov
push
push
call
add
mov
mov
push
push
call
add
lea
call
xor
jmp
mov
add
call
jmp
push
mov
push
push
call
test
pop
je
andl
mov
movl
mov
test
mov
je
mov
push
call
push
pushl
call
lea
call
leave
ret
xor
jmp
push
mov
push
push
mov
mov
push
mov
push
push
lea
call
push
push
push
call
mov
call
test
jne
pushl
inc
in
inc
add
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
andl
push
pop
mov
test
jne
cmp
jl
andl
push
pop
mov
test
je
mov
cmp
jl
andl
push
pop
mov
test
jne
cmp
mov
jl
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
pop
xor
pop
pop
ret
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
mov
jmp
mov
call
test
jne
mov
pushl
mov
push
call
incl
add
jmp
int3
int3
sub
push
mov
xor
mov
call
call
movb
flds
fimull
call
flds
fstps
mov
mov
mov
flds
fadd
faddl
fistpl
flds
mov
fstps
sar
mov
movb
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
sub
mov
xor
mov
push
mov
mov
push
xor
push
mov
mov
mov
mov
mov
call
cmp
je
push
push
mov
mov
mov
cmp
je
mov
mov
lea
lea
push
mov
mov
mov
push
push
mov
mov
movl
movl
mov
call
mov
cmp
je
cmp
je
mov
mov
test
je
mov
add
push
call
add
test
je
add
cmp
jne
pop
pop
mov
pop
pop
xor
call
add
ret
mov
mov
cmp
jne
mov
jmp
test
je
jmp
mov
push
mov
call
add
test
jne
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
push
mov
mov
test
je
mov
test
jbe
andl
push
pop
mov
mov
test
je
pushl
mov
pushl
push
call
test
jns
incl
add
cmp
jb
mov
pop
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
test
je
push
push
push
mov
test
je
mov
mov
push
call
cmp
mov
je
cmp
je
cmp
je
mov
lea
call
test
jne
pop
pop
pop
pop
add
ret
mov
mov
mov
add
mov
mov
test
mov
je
mov
xor
test
mov
jle
add
mov
add
mov
cmp
jne
cmp
jne
add
cmp
jne
mov
mov
cmp
je
test
je
lea
push
lea
mov
call
jmp
mov
mov
lea
push
push
push
push
movl
call
mov
add
test
je
mov
test
jne
push
push
mov
call
test
je
mov
mov
push
call
test
je
mov
mov
push
mov
call
jmp
xor
jmp
xor
jmp
addl
mov
add
cmp
jl
mov
jmp
mov
jmp
push
lea
sub
add
enter
mov
push
mov
push
mov
push
call
test
je
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
pop
mov
pop
xor
xor
pop
call
add
leave
ret
push
mov
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
je
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
push
mov
push
push
push
push
push
mov
lea
movl
movl
movl
call
mov
test
mov
je
mov
push
lea
push
push
call
mov
xor
cmp
je
push
call
mov
mov
push
push
push
push
call
cmpl
mov
jne
push
call
andl
pop
xor
mov
cmp
jne
lea
call
lea
call
mov
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
movl
jne
pop
pop
pop
leave
ret
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
push
push
push
push
lea
movzwl
test
jle
mov
mov
mov
mov
lea
push
push
call
and
neg
sbb
not
and
mov
cmp
je
decl
add
cmpl
jg
xor
pop
pop
leave
ret
push
mov
sub
mov
mov
push
push
xor
push
mov
add
mov
call
mov
cmp
je
mov
call
push
mov
lea
mov
call
mov
cmp
je
pushl
pushl
call
test
pop
pop
je
push
lea
mov
call
push
lea
push
lea
push
push
push
pushl
pushl
pushl
call
add
test
js
cmp
push
mov
pop
mov
mov
movl
je
mov
mov
push
pushl
pushl
push
push
push
push
pushl
pushl
call
add
test
je
lea
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
push
pushl
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
andl
test
je
mov
push
call
lea
mov
andl
test
jne
lea
mov
andl
test
jne
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
call
jmp
dec
loop
add
xor
cmp
je
push
mov
add
jmp
mov
add
cmp
jne
push
call
cmp
pop
je
mov
mov
mov
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
movl
mov
movl
je
push
mov
mov
cmp
je
movzwl
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
lea
push
call
mov
cmp
mov
je
mov
lea
push
push
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
movzwl
movzwl
push
pushl
or
push
lea
push
push
call
lea
call
lea
call
lea
call
movzwl
lea
xor
call
mov
inc
and
lea
mov
call
jmp
cmp
jne
testb
jne
testb
jne
pop
pop
leave
ret
mov
add
call
jmp
push
mov
sub
push
mov
push
xor
cmp
push
mov
mov
mov
mov
je
push
lea
call
mov
lea
push
push
call
pushl
xor
pushl
pushl
push
pushl
push
call
add
test
js
pushl
mov
lea
call
mov
xor
inc
cmp
jne
mov
push
mov
add
mov
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
push
pushl
lea
push
movl
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
pushl
mov
lea
mov
call
mov
cmp
je
pushl
mov
push
call
mov
pushl
mov
push
call
lea
call
jmp
test
jne
push
mov
pop
push
push
call
jmp
push
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
mov
push
push
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
movl
mov
test
jns
push
push
push
call
pop
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
int3
int3
int3
int3
mov
mov
cmp
push
je
nop
stc
inc
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
sub
push
mov
cmp
je
push
mov
cmpl
jne
cmpl
jne
pop
pop
leave
ret
push
mov
lea
push
push
call
cmpl
jne
test
jne
pop
jmp
lea
push
push
push
push
push
mov
mov
call
test
je
mov
mov
mov
call
cmp
jge
mov
mov
mov
add
pushl
mov
mov
call
mov
push
mov
call
pushl
mov
pushl
call
incl
mov
incl
cmp
jge
jmp
mov
mov
call
cmp
jge
mov
mov
push
push
push
mov
call
push
push
push
call
inc
cmp
jge
jmp
push
mov
mov
sub
push
mov
push
push
mov
mov
call
lea
push
pushl
pushl
push
lea
push
push
call
xor
cmp
je
mov
call
mov
mov
mov
call
mov
push
push
push
push
push
pushl
mov
lea
lea
call
mov
mov
cmp
je
cmp
je
xor
inc
mov
cmp
je
cmp
je
cmp
je
andl
cmp
je
cmp
je
andl
pushl
fldl
lea
fstpl
push
push
lea
mov
call
xor
add
cmp
mov
jne
cmp
mov
jne
add
mov
cmp
ja
mov
jb
mov
mov
cmp
jbe
mov
lea
push
mov
sub
push
pushl
call
fstps
flds
push
fstps
call
mov
pop
mov
cmp
mov
je
cmp
je
add
cmp
jg
mov
cmpl
mov
je
push
pushl
lea
pushl
pushl
call
add
cmp
je
lea
push
mov
sub
push
mov
push
call
fstps
flds
push
fstps
call
add
or
leave
cmp
jne
cmp
jne
mov
inc
cmp
mov
jbe
cmp
jae
push
dec
push
lea
call
mov
sub
imul
call
mov
lea
call
add
leave
ret
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
je
mov
testb
mov
je
movzbl
cmp
movl
je
mov
cmp
jne
cmp
je
jmp
andl
xor
inc
jmp
mov
jmp
mov
jmp
mov
jmp
andl
jmp
mov
mov
push
push
mov
shr
and
jne
movzbl
movzwl
cmp
je
cmp
je
cmp
jle
cmp
jle
cmp
je
xor
pop
pop
ret
call
neg
sbb
inc
jmp
mov
cmp
je
cmp
je
test
jne
xor
inc
jmp
call
jmp
push
mov
push
push
push
push
mov
mov
xor
cmp
push
jne
mov
cmp
jne
mov
cmp
mov
jne
lea
movl
lea
push
push
push
movl
mov
call
push
push
push
call
add
add
decl
jne
lea
mov
cmp
jne
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
cmpl
je
mov
cmp
jge
xor
xor
cmpb
jne
add
add
cmp
jb
mov
ret
cmp
jne
jmp
mov
sub
je
sub
je
sub
jne
scas
pop
inc
add
mov
push
call
jmp
push
mov
sub
push
mov
push
mov
push
push
pushl
call
test
jns
push
xor
cmp
ja
movzbl
mov
jmp
movl
jmp
push
lea
push
push
push
movl
call
movzbl
and
mov
mov
pop
pop
pop
leave
ret
movl
jmp
mov
movl
jmp
call
jmp
mov
jmp
mov
movl
jmp
movl
jmp
call
neg
sbb
inc
jmp
push
mov
call
test
jns
jmp
mov
jmp
mov
jmp
push
call
add
mov
push
adc
roll
adc
roll
adc
aaa
aas
adc
aaa
aas
adc
rolb
adc
push
adc
aaa
aas
adc
aas
adc
aaa
aas
adc
aas
adc
push
adc
push
adc
push
adc
push
adc
roll
adc
aas
adc
aaa
aas
adc
rolb
adc
push
adc
roll
adc
add
add
add
pop
add
or
or
movups
adc
adc
inc
and
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
push
push
mov
mov
mov
mov
call
test
je
cmpb
jne
mov
mov
call
cmp
je
pop
pop
ret
push
mov
push
push
push
mov
push
push
mov
lea
mov
call
mov
lea
call
mov
mov
mov
mov
movb
movb
fildl
xor
cmp
fidivl
push
setne
mov
fstpl
call
test
pop
je
flds
lea
push
lea
push
movzbl
push
push
movzbl
push
push
fstps
pushl
fldl
push
push
movzwl
fstpl
push
movzwl
push
movzbl
push
mov
call
pushl
mov
push
mov
mov
push
call
test
je
incl
mov
test
mov
jne
mov
mov
call
cmp
pop
sbb
pop
and
pop
leave
ret
push
mov
push
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
flds
lea
fstps
push
lea
push
call
add
push
lea
push
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpl
push
mov
movl
jne
mov
push
call
add
testb
movl
je
push
call
add
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
xor
cmp
je
mov
mov
cmp
jne
cmpl
push
mov
movl
jne
mov
push
call
add
push
movl
call
add
pop
mov
mov
pop
pop
pop
ret
push
mov
call
mov
mov
pop
pop
pop
ret
push
mov
mov
test
movl
je
mov
push
call
andl
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
xor
sub
cmp
je
cmp
je
push
mov
cmp
je
mov
cmp
mov
jne
mov
mov
push
lea
lea
movl
mov
call
mov
pushl
mov
mov
push
pushl
push
call
lea
mov
call
mov
pop
leave
ret
push
mov
mov
sub
test
je
andl
push
push
push
mov
mov
mov
test
jbe
andl
movl
mov
mov
mov
test
je
andl
push
lea
call
mov
test
mov
je
mov
push
call
mov
lea
push
pushl
push
call
cmpl
jne
lea
call
incl
addl
cmp
jb
pop
pop
xor
pop
leave
ret
mov
mov
mov
push
call
lea
call
jmp
push
mov
sub
push
mov
orb
xor
cmpl
push
sete
andl
push
push
push
mov
mov
mov
lea
push
call
test
jne
lea
call
jmp
mov
call
test
jne
push
inc
mov
call
test
je
push
call
test
pop
je
andl
andl
mov
pushl
mov
push
push
call
test
jne
lret
in
add
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
cmpl
jne
lea
call
mov
mov
shr
lea
lea
xor
and
inc
shl
or
cmpl
je
lea
call
andb
xor
inc
pop
pop
pop
leave
ret
push
mov
mov
test
je
mov
cmp
jne
mov
mov
mov
xor
pop
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
add
test
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
lea
push
push
xor
lea
push
lea
push
push
push
push
mov
mov
mov
mov
mov
movl
mov
pop
faddl
mov
mov
call
add
test
je
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
push
xor
lea
call
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
int3
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
inc
add
test
inc
or
jne
mov
movl
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
pop
xor
pop
ret
cmp
je
cmp
je
mov
mov
call
test
jne
mov
mov
call
test
je
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
xor
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
xor
mov
mov
mov
mov
mov
mov
mov
cmp
mov
pop
jne
cmp
je
mov
lea
push
mov
push
push
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
mov
push
push
mov
push
mov
call
test
pop
je
mov
xor
mov
mov
mov
mov
mov
imul
and
lea
push
lea
push
lea
push
lea
push
push
xor
push
inc
push
mov
mov
mov
call
add
test
je
cmp
jb
andl
lea
push
lea
mov
mov
push
push
push
push
mov
lea
call
add
test
js
cmpl
ja
xor
cmpl
ja
xor
mov
push
push
push
xor
lea
call
xor
cmp
je
push
lea
mov
call
mov
mov
lea
push
lea
push
pushl
push
call
test
js
mov
push
push
xor
lea
call
xor
cmp
jne
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
lea
call
lea
call
mov
cmp
jne
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
jmp
mov
mov
jmp
push
mov
and
push
mov
push
push
push
xor
push
inc
call
test
je
mov
lea
mov
test
je
mov
mov
push
push
call
test
je
test
je
mov
push
call
mov
mov
movl
testb
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
push
mov
call
test
jne
cmpl
je
push
push
push
or
push
mov
call
jmp
or
mov
mov
test
je
mov
test
jle
lea
mov
call
xor
push
inc
mov
call
test
je
pushl
pushl
call
pop
xor
pop
inc
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
lea
push
movb
call
test
je
andl
mov
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
je
cmp
je
jb
movl
mov
ret
push
mov
sub
test
push
mov
je
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
xor
lea
push
mov
mov
mov
mov
mov
push
call
mov
mov
cmp
je
mov
add
add
mov
mov
cmp
je
mov
add
add
mov
test
jne
pop
leave
ret
pushl
mov
lea
push
mov
call
mov
mov
mov
mov
push
mov
call
pop
jmp
push
mov
sub
push
mov
mov
call
test
je
mov
cmp
pop
jb
or
call
test
je
mov
mov
add
mov
mov
lea
mov
mov
mov
mov
sub
add
push
lea
push
call
leave
ret
xor
jmp
xor
jmp
push
mov
push
mov
push
pushl
mov
pushl
push
call
cmpl
mov
jne
mov
mov
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
mov
mov
andl
mov
mov
movl
mov
movl
push
mov
call
pop
pop
pop
ret
mov
mov
mov
mov
mov
movzwl
mov
mov
push
push
call
xor
ret
mov
testb
jne
mov
mov
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
stos
or
add
add
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
push
mov
mov
test
movl
movl
add
js
les
je
push
call
pop
lea
call
lea
call
lea
call
lea
call
lea
pop
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
mov
push
xor
cmpb
mov
mov
je
mov
cmp
jne
movzbl
cmp
jne
movzbl
cmp
jne
mov
cmp
mov
mov
mov
je
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
xor
cmp
jne
mov
mov
mov
mov
xor
cmp
mov
mov
mov
jne
test
jne
xor
xor
mov
cmp
mov
jle
mov
mov
mov
add
add
cmp
mov
jle
mov
lea
add
push
push
lea
mov
call
mov
mov
mov
mov
xor
mov
sub
sub
add
cmp
mov
mov
mov
mov
jl
lea
cmp
jl
lea
cmp
mov
mov
mov
jne
lea
push
lea
push
lea
lea
push
mov
call
mov
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
add
mov
add
cmp
jge
neg
cmp
jle
xor
mov
cmp
jl
mov
cmp
jl
mov
cmp
jne
mov
mov
mov
mov
mov
lea
mov
call
test
je
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
cmp
je
jmp
mov
jmp
cmpb
jne
jmp
cmp
mov
jne
xor
push
lea
push
lea
call
mov
mov
add
jmp
cmp
je
mov
mov
add
lea
cmp
jge
mov
neg
cmp
jle
xor
mov
cmp
jl
cmp
jl
mov
cmp
je
xor
pop
pop
pop
pop
add
ret
lea
jmp
mov
mov
mov
mov
jmp
mov
jmp
lea
jmp
xor
jmp
push
mov
call
test
mov
je
mov
push
push
push
push
mov
call
test
js
mov
mov
xor
jmp
xor
jmp
lea
jmp
mov
mov
jmp
lea
jmp
pop
pop
pop
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
push
mov
push
mov
mov
xor
test
push
mov
mov
mov
mov
mov
mov
mov
mov
outsb
inc
add
sbb
dec
inc
add
inc
dec
push
add
rolb
jb
mov
mov
mov
cmpw
jne
sub
cmp
jae
cmp
mov
ja
test
je
mov
cmp
jbe
mov
cmpw
jne
add
cmp
jb
cmp
mov
jb
mov
mov
movzwl
add
sub
js
add
cmp
jbe
test
jg
movw
mov
lea
mov
add
add
cmp
mov
jb
test
jbe
xor
lea
cmpw
jne
add
cmp
jb
mov
sub
je
sub
jne
mov
sub
mov
mov
sub
mov
movl
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
lea
mov
mov
cmp
movl
mov
mov
je
cmp
jne
cmp
jb
jmp
movzwl
movzwl
mov
movzwl
addw
lea
jmp
mov
mov
jmp
cmp
jae
mov
jmp
sub
sub
test
mov
jne
lea
mov
shl
mov
test
jne
test
je
lea
and
add
addw
movzwl
addl
test
mov
je
cmp
ja
mov
mov
mov
movzwl
mov
mov
sub
mov
movzwl
cmp
jge
movb
mov
mov
mov
sub
mov
mov
shl
mov
shr
mov
mov
lea
add
lea
mov
jmp
mov
shr
test
jne
jmp
jle
movzwl
mov
add
mov
mov
mov
mov
mov
jmp
mov
and
cmp
je
mov
test
je
mov
mov
lea
mov
sub
add
cmp
mov
jae
mov
shl
mov
lea
movzwl
sub
test
jg
mov
mov
shl
add
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sar
mov
mov
jmp
cmp
je
mov
movzwl
movzwl
jmp
xor
jmp
test
jne
mov
mov
lea
add
mov
mov
mov
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
add
add
add
cmp
mov
jae
jmp
mov
mov
jmp
cmp
jne
cmpl
jmp
movl
movl
movl
jmp
mov
mov
movl
jmp
movb
movw
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
mov
shr
and
cmp
mov
je
test
je
cmp
jb
cmp
jae
test
je
cmp
jb
mov
shr
movzbl
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
movzbl
add
add
sub
add
add
sub
jne
test
je
movzbl
add
sub
add
add
test
jne
mov
mul
shr
imul
add
mov
mul
shr
imul
add
mov
pop
shl
pop
or
pop
ret
pop
pop
mov
pop
ret
test
je
nop
movzbl
add
sub
add
add
test
jne
cmp
jae
mov
mul
shr
mov
shl
sub
add
pop
shl
pop
or
pop
ret
int3
int3
int3
int3
int3
int3
int3
mov
sub
test
push
je
mov
test
je
cmpl
je
cmpl
je
cmpl
je
mov
mov
push
mov
push
mov
faddl
push
mov
mov
mov
mov
mov
mov
mov
movl
jmp
add
jne
test
jne
and
mov
movl
mov
test
jne
mov
mov
movl
mov
mov
shl
sub
and
mov
mov
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
inc
stc
inc
add
enter
movzbl
add
shr
sub
test
mov
jne
mov
shr
and
mov
mov
movl
mov
test
je
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
mov
movl
cmpl
je
mov
sub
mov
cmp
ja
mov
sub
mov
mov
mov
cmp
ja
sub
mov
mov
sub
mov
mov
mov
add
add
sub
jne
cmp
jne
movl
mov
mov
cmp
jne
cmpl
jae
mov
mov
mov
shl
movl
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
lea
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
ja
test
jne
mov
shr
movzbl
add
shr
sub
mov
shr
test
mov
mov
jne
movl
jmp
cmp
ja
jmp
cmpl
je
mov
mov
add
subl
movl
jmp
test
jne
mov
shr
movzbl
mov
mov
movzbl
add
mov
shl
mov
mov
shr
sub
and
shr
add
mov
mov
mov
shr
movzbl
movzbl
add
cmp
ja
movzbl
mov
shr
sub
mov
jmp
sub
cmp
ja
mov
cmp
mov
ja
sub
add
mov
cmp
mov
jbe
mov
jmp
cmp
jb
mov
mov
shl
sub
sub
and
add
shr
add
jmp
cmpl
jne
movl
cmpl
jne
movl
movl
mov
mov
mov
mov
mov
fiadds
mov
cmpl
mov
mov
je
mov
mov
push
push
call
add
test
jne
mov
mov
sub
mov
sub
add
add
add
cmpl
je
test
je
cmpl
push
jne
mov
mov
sub
call
add
mov
mov
mov
mov
neg
sbb
and
cmp
je
xor
cmp
je
cmp
je
xor
add
add
add
test
mov
je
cmpl
je
mov
pop
pop
pop
pop
add
ret
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
push
mov
or
add
pop
cmp
decl
push
adc
mov
out
inc
add
push
add
les
cmpl
mov
mov
mov
je
mov
jmp
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
cmpl
je
cmpl
je
cmpl
jne
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
shr
mov
and
and
sub
cmp
mov
jne
movl
shr
mov
sub
jmp
mov
jmp
movl
movl
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jb
mov
and
add
mov
shr
mov
and
mov
add
shr
mov
mov
and
add
shr
sub
cmpl
mov
mov
ja
cmpl
ja
movl
movl
mov
test
inc
add
cmp
jb
mov
and
inc
add
scas
lahf
adc
mov
and
mov
mov
add
enter
jmp
sub
cmp
mov
jb
mov
cmp
leave
ljmp
add
scas
lahf
adc
inc
push
jo
add
inc
push
out
xchg
add
insb
mov
mov
lea
push
push
lea
push
lea
push
mov
movl
call
add
test
mov
jne
mov
mov
xchg
rolb
add
mov
add
cmp
int
inc
add
in
inc
add
loopne
dec
dec
sub
and
mov
mov
shr
movzbl
cmp
mov
ja
mov
shr
cmp
jae
mov
shr
movzbl
cmp
jb
movzbl
mov
dec
out
inc
add
dec
and
mov
addl
in
inc
add
mov
add
cmp
push
jecxz
add
jmp
mov
add
test
xchg
xor
lea
lea
mov
mov
lea
push
push
mov
lea
push
lea
push
movl
call
add
test
jne
mov
lea
push
lea
push
mov
lea
push
mov
mov
lea
push
movl
call
add
test
mov
jne
cmpl
movl
je
movl
jmp
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
jae
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
mov
shl
mov
mov
sub
and
mov
mov
shr
movzbl
cmp
mov
jbe
jmp
mov
cmp
je
cmp
movzbl
jne
lea
cmp
jb
shr
mov
and
add
mov
shr
mov
sub
add
mov
movl
mov
or
inc
add
pusha
mov
cmp
ja
cmpl
je
mov
mov
in
inc
add
mov
addl
roll
sbb
jne
jmp
movzbl
lea
cmp
jb
mov
cmp
inc
add
xchg
xor
movzwl
mov
and
add
shr
mov
mov
sub
jmp
lea
cmp
jae
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jb
shr
mov
and
add
mov
shr
mov
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
cmpl
jne
movl
jmp
mov
and
shr
sub
movl
mov
jmp
cmpl
jge
mov
mov
cmp
jne
jmp
mov
cmpl
je
movzbl
subl
mov
shl
mov
add
add
add
lea
cmp
mov
jae
jmp
mov
shr
mov
movzbl
mov
movzbl
add
mov
mov
shl
mov
sub
and
shr
mov
shr
add
mov
mov
mov
movzbl
mov
shr
movzbl
add
cmp
ja
movzbl
mov
shr
sub
add
jmp
jmp
lea
cmpl
je
mov
movzbl
mov
shl
mov
add
mov
add
movzbl
add
subl
mov
shl
mov
add
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
sub
je
sub
jne
cmpl
movl
movl
movl
movl
movl
jne
jmp
test
jne
jmp
cmp
jae
jmp
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
mov
sub
mov
add
add
test
je
cmpl
mov
jne
mov
mov
sub
push
mov
call
add
mov
mov
mov
mov
cmpl
mov
mov
mov
jne
and
mov
shl
add
xor
mov
shl
add
mov
shr
add
cmp
jne
xor
mov
xor
jmp
cmp
jae
lea
cmpl
je
movzbl
subl
mov
shl
add
add
mov
add
cmp
mov
jb
testb
jne
mov
test
movl
jne
testb
je
movzbl
shl
mov
shr
add
xor
mov
div
test
jne
mov
and
cmp
jne
mov
shr
mov
and
add
test
je
sub
cmp
ja
mov
shl
push
xor
xor
mov
call
mov
add
test
mov
mov
jne
mov
xor
mov
mov
xor
jmp
cmpl
je
jmp
movl
mov
jmp
add
sub
sub
jmp
lea
cmpl
je
movzbl
mov
shl
mov
subl
add
add
movzbl
add
mov
mov
shl
mov
add
mov
sub
and
shr
movzwl
add
mov
mov
mov
shr
movzbl
add
cmp
jbe
jmp
nop
push
cmc
push
adc
xorb
xchg
xorl
adc
xorl
inc
test
adc
test
adc
test
adc
xchg
adc
push
adc
xchg
adc
mov
adc
mov
adc
push
adc
push
adc
adc
push
adc
in
push
adc
in
push
adc
out
push
adc
out
push
adc
out
push
adc
adc
aaa
adc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmpl
je
cmpl
je
sub
push
mov
cmp
jae
sub
cmp
jbe
mov
mov
mov
add
push
sub
push
push
call
add
sub
jne
add
mov
mov
cmp
je
mov
cmp
jae
add
mov
pop
pop
pop
xor
pop
ret
mov
mov
shl
movl
movl
mov
jmp
mov
mov
mov
shl
mov
push
push
push
call
add
test
mov
jne
jmp
mov
mov
push
sub
push
push
call
mov
add
pop
mov
movl
pop
pop
xor
pop
ret
mov
mov
push
sub
push
push
call
mov
add
pop
mov
mov
pop
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
sub
cmp
push
mov
mov
push
lea
jb
lea
mov
mov
lea
push
push
mov
call
mov
add
test
je
cmp
jne
mov
mov
sub
test
mov
je
mov
push
mov
call
add
cmp
mov
jne
lea
push
call
mov
add
cmp
jne
xor
pop
pop
pop
ret
mov
cmp
jne
jmp
xor
jmp
push
mov
cmpl
jne
cmpb
jne
lea
xor
call
push
movb
call
test
js
mov
test
je
call
test
js
mov
mov
mov
mov
push
call
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
push
sub
push
push
push
mov
xor
xor
push
lea
mov
mov
mov
test
je
mov
test
je
xor
mov
xor
mov
mov
mov
cmp
jne
cmp
je
push
mov
push
push
call
mov
mov
xor
cmp
jne
mov
mov
cmp
je
lea
mov
or
lock
dec
je
movl
mov
mov
mov
pop
pop
pop
pop
mov
pop
ret
cmp
ja
jmp
cmp
je
mov
mov
sub
mov
cmp
jae
lea
mov
test
je
mov
push
mov
add
push
push
call
add
mov
add
mov
mov
xor
mov
cmp
jb
mov
mov
cmp
je
call
jmp
lea
jmp
mov
jle
cmp
mov
cmp
popf
adc
adc
cld
push
adc
in
mov
call
test
js
push
pushl
mov
pushl
mov
pushl
mov
push
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
cmpl
je
xor
pop
ret
cmpl
push
push
push
lea
je
mov
mov
cmpb
je
mov
push
mov
call
mov
mov
push
push
mov
push
call
test
js
mov
mov
mov
add
push
push
call
test
js
xor
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
je
xor
cmp
je
mov
mov
cmp
jne
xor
pop
pop
add
ret
mov
push
mov
push
push
lea
push
push
push
push
push
lea
mov
call
test
js
mov
cmp
je
cmp
je
xor
mov
movl
lea
cmp
je
mov
cmp
jge
mov
mov
mov
cmp
mov
jne
cmp
mov
mov
jne
add
cmp
jge
cmp
jle
sub
mov
mov
js
lea
mov
sub
cmp
mov
mov
jge
lea
mov
mov
cmp
jl
push
call
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
addl
mov
addl
mov
jmp
lea
call
mov
cmp
jne
xor
pop
pop
pop
pop
add
ret
lea
call
mov
cmp
je
testl
je
push
call
add
pop
pop
pop
xor
pop
add
ret
push
mov
push
push
xor
cmp
je
cmp
je
push
push
mov
lea
mov
test
je
pushl
mov
xor
inc
mov
shl
lea
push
push
pushl
pushl
pushl
push
call
inc
add
cmp
jl
mov
pop
pop
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
je
test
push
push
je
sar
add
mov
lea
or
mov
pop
mov
pop
pop
pop
ret
mov
test
mov
je
call
cmpl
jne
mov
or
mov
addl
mov
add
lea
pop
or
mov
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
call
test
jne
add
mov
cmpb
je
mov
mov
std
inc
add
add
cmpb
je
mov
mov
mov
mov
add
add
add
mov
movzbl
add
add
xor
sub
je
sub
jne
mov
add
add
mov
mov
sub
mov
pop
pop
mov
pop
add
ret
int3
int3
int3
sub
push
mov
push
mov
push
push
mov
mov
add
call
cmp
jne
movl
mov
xor
test
mov
jne
mov
cmpb
mov
je
mov
lea
push
lea
push
push
call
testl
jne
cmpl
je
mov
movl
mov
call
mov
mov
xor
xor
cmp
je
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
mov
mov
mov
call
mov
lea
call
test
jne
mov
mov
cmpb
mov
jne
mov
cmpb
je
mov
mov
cmpl
je
mov
add
mov
mov
cmpb
jne
mov
mov
mov
mov
call
cmp
jne
xor
xor
lea
cmpl
je
mov
mov
mov
push
lea
push
call
mov
mov
mov
add
mov
add
cmp
jne
mov
mov
mov
add
add
add
mov
sub
mov
mov
sub
mov
mov
sub
mov
pop
sub
pop
sub
pop
mov
mov
pop
add
ret
mov
push
lea
mov
call
mov
mov
lea
push
mov
mov
cmp
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
add
test
rorb
dec
loopne
add
and
mov
mov
jmp
mov
mov
push
lea
mov
call
inc
add
pushl
mov
pushl
mov
pushl
mov
push
call
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
push
push
pushl
mov
call
dec
dec
inc
add
add
add
xchg
add
add
enter
add
cmc
add
add
push
jmp
cld
mov
add
push
push
push
mov
add
push
push
push
call
add
mov
cwtl
arpl
int
mov
in
test
add
push
int
xchg
add
enter
xchg
repnz
add
in
add
add
add
sbb
popf
loop
mov
add
imul
pop
popl
push
push
push
push
lea
push
push
push
call
je
add
pop
add
mov
add
in
mull
cmpsb
lahf
pushf
add
push
add
enter
fisubs
add
add
xchg
xchg
add
popa
xchg
or
mov
aam
mov
add
jbe
add
pop
fs
nop
add
test
push
sub
pop
push
push
lea
push
push
call
mov
leave
flds
lock
js
pop
lcall
mov
pushf
cmc
shr
push
mov
add
add
mov
add
nop
cmc
add
mov
lcall
push
push
lea
push
lea
push
call
mov
mov
int
jns
xchg
lock
add
add
ret
loop
add
clc
mov
add
int
push
add
lds
cli
mov
sahf
enter
loop
mov
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
addl
add
mov
repnz
add
jbe
add
add
notb
cli
mov
push
add
add
add
jle
add
test
push
add
lcall
sub
add
call
push
push
call
shl
aam
lret
int3
test
jmp
mov
mov
add
pop
mov
push
cmpsl
sti
iret
shrb
xchg
adcl
mov
clc
lcall
add
jge
mov
call
add
add
popf
add
scas
add
test
mov
add
pusha
call
xchg
add
add
add
mov
call
push
lea
push
lea
push
push
push
push
push
call
push
lods
sti
add
mov
adcb
cmpsb
icebp
pusha
add
in
add
rolb
add
xchg
push
add
add
aad
loope
stos
sti
jne
add
clc
add
in
lcall
flds
add
push
push
push
push
push
push
lea
push
push
push
push
call
add
pop
idiv
jge
mov
nop
fwait
out
mov
bnd
lods
jp
add
add
xchg
stos
add
mov
test
jno
jecxz
push
mov
xchg
clc
mov
add
add
xchg
add
loopne
add
lea
fcomps
push
lea
push
call
lods
jo
aam
mov
mov
add
iret
add
fs
add
add
roll
jb
add
add
mov
xchg
out
add
test
loope
push
mov
add
outsl
add
add
gs
push
xchg
add
add
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
rcrl
xchg
fs
xchg
push
add
movsb
je
arpl
bound
jnp
fsubrp
fsubl
xorl
out
lcall
add
rolb
pop
mov
add
push
push
call
add
xchg
cmc
mov
add
imul
add
add
add
ret
pop
push
add
mov
mov
add
xchg
rclb
add
repnz
add
mov
add
jns
sub
pop
add
add
push
lea
push
call
add
fcompl
into
lods
movsb
pusha
fiaddl
ljmp
add
add
push
add
orl
add
cmc
add
sti
lcall
add
add
add
popf
mov
aam
in
clc
pop
mov
push
push
push
push
push
push
push
push
call
mov
add
cltd
notb
add
sti
add
clc
leave
stos
mov
fs
fmul
pop
add
add
iret
xchg
mov
add
add
add
add
add
lret
ljmp
add
add
mov
jmp
int3
add
add
xchg
add
add
mov
in
in
xor
push
lea
push
push
push
push
lea
push
lea
push
push
call
push
ret
add
rolb
xchg
add
popa
pushf
lock
add
push
movsl
add
add
in
loopne
add
push
push
rol
sub
push
and
add
inc
sub
sub
pop
add
add
pop
push
lea
push
push
push
push
push
push
lea
push
push
call
jecxz
pop
push
jle
scas
add
addl
add
fistpll
cld
in
mov
roll
add
xchg
sahf
add
mov
loop
mov
nop
enter
add
fcompl
push
pusha
enter
add
add
shrl
add
add
movsb
add
jne
push
push
lea
push
lea
push
call
mov
add
push
nop
std
add
mov
mov
add
xlat
cltd
add
add
addb
rolb
add
popl
jo
add
add
filds
add
leave
mov
pop
add
add
iret
out
shl
add
add
push
push
call
mov
jmp
add
data16
add
movsb
mov
jle
mov
add
out
pop
add
add
test
addb
add
mov
mov
mov
lahf
add
leave
pop
add
jge
jecxz
push
mov
add
mov
sub
pop
mov
movl
push
lea
push
lea
push
push
push
push
call
mov
mov
les
add
imul
xchg
xchg
add
mov
test
test
iret
into
lods
test
call
mov
add
push
outsl
add
inc
call
inc
add
add
mov
add
add
cmpsl
mov
cltd
cwtl
fisubrl
in
fs
add
jmp
mov
add
add
in
test
add
jo
add
add
mov
jno
add
lods
insb
pop
add
sub
pop
pushl
pushl
push
push
lea
push
push
push
call
add
add
testl
add
add
cld
lds
jne
fiaddl
mov
jnp
add
sub
pop
call
push
push
push
push
push
push
lea
push
push
push
push
call
add
xchg
out
pop
cmpsl
stc
add
fiadds
mov
mov
fisubrl
add
in
in
xchg
out
xchg
jno
add
add
movb
mov
fiaddl
add
push
add
add
add
add
popf
mov
add
jecxz
jbe
xchg
mov
lcall
jne
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
pop
add
add
aam
stos
mov
add
jmp
add
lret
shll
aam
rolb
sti
add
sub
pop
pushl
call
push
push
lea
shl
push
push
pop
add
xor
not
sub
xor
shr
shl
pop
shr
rol
rol
pop
push
push
push
push
push
push
push
push
push
call
enter
add
add
add
ret
add
nop
xlat
movsb
cmpsb
add
push
jbe
pop
jbe
mov
sahf
add
mov
enter
mov
movb
mov
add
mov
add
xchg
mov
mov
add
lcall
jne
call
push
push
push
call
add
add
xchg
add
jnp
adcl
add
scas
lcall
pop
stc
add
add
lods
add
xchg
fdivl
add
pusha
push
jge
iret
add
add
add
add
loope
sub
pop
push
push
push
rol
shl
add
push
xor
add
not
xor
sub
add
xor
pop
add
not
xor
pop
push
push
push
call
aad
adc
add
add
rclb
stc
push
rolb
add
add
ficomps
add
pop
nop
add
add
mov
mov
add
add
xchg
fadds
test
jmp
mov
std
add
mov
jl
mov
int3
add
push
push
lea
push
push
push
lea
push
push
lea
push
call
shlb
stc
add
add
add
xlat
lahf
add
mov
add
test
je
add
roll
iret
iret
enter
fistl
fldcw
add
add
add
push
add
mov
pop
push
call
push
lea
push
push
call
add
add
lods
test
cmpsl
scas
faddl
mov
nop
xchg
push
jne
call
lods
jno
cli
test
bound
add
fwait
lock
loopne
xchg
lods
fwait
je
pop
pop
loop
mov
lds
fiadds
stos
sbb
shlb
add
add
sub
pop
mov
push
push
push
lea
push
push
push
push
push
push
push
call
add
nop
js
pop
mov
add
int3
add
into
add
jmp
jae
imul
mov
add
cmpsb
mov
add
lcall
push
push
push
push
push
push
lea
push
call
icebp
add
mov
icebp
add
jmp
rcll
aad
add
add
add
into
pop
add
pop
movl
call
mov
jmp
xchg
arpl
add
add
in
push
mov
push
push
push
push
lea
push
push
lea
push
push
call
add
out
insb
mov
add
jb
add
add
add
mov
ret
add
outsl
les
add
add
testl
add
add
popa
ret
lret
xchg
mov
icebp
add
jp
movl
loopne
add
push
push
push
push
push
lea
push
push
push
push
call
pop
add
icebp
stos
cld
and
cld
stos
pop
add
add
stos
mov
add
fiadds
mov
add
rcrl
mov
sub
pop
add
add
push
push
lea
push
push
push
push
push
push
call
jp
add
add
js
leave
popa
add
scas
mov
aad
movsb
push
add
in
jp
xlat
rolb
insb
std
imul
xchg
add
std
mov
add
add
sub
pop
mov
push
push
push
lea
push
push
call
jae
xchg
mov
shlb
add
lock
add
add
sahf
fst
xchg
add
test
add
roll
mov
fldl
lea
xchg
add
arpl
add
repnz
xchg
add
rcr
shl
int3
lret
add
icebp
sub
pop
xor
push
lea
push
push
push
call
cmpsb
xchg
add
push
bound
add
add
mov
add
mov
popf
popa
add
add
jno
data16
in
ficoml
fldl
lea
lock
xchg
fldcw
fwait
add
outsl
jle
push
add
pop
les
jmp
jbe
shrb
addb
add
pop
pop
add
les
push
push
push
push
push
push
push
push
lea
push
call
push
ficomps
add
add
stos
add
add
in
in
add
mov
lea
jl
add
add
lock
arpl
add
add
scas
leave
pop
mov
add
sub
pop
add
push
push
push
lea
push
push
call
add
roll
add
add
xchg
rolb
add
add
mov
add
add
add
add
test
mov
cmc
scas
add
sti
xchg
push
movl
clc
add
add
add
pushf
jp
mov
jno
cwtl
cmpsl
add
add
xchg
lcall
inc
or
push
push
push
lea
push
push
push
push
push
push
call
add
incb
bnd
cmc
xchg
add
pop
fsubrs
lock
shl
push
add
xlat
add
mov
leave
mov
fidivrs
out
mov
sub
pop
add
push
push
push
push
push
lea
push
push
lea
push
call
test
leave
aad
mov
mov
add
add
cmpsl
jecxz
pop
pop
stos
add
push
add
xlat
add
jae
sti
add
aam
jb
add
pop
add
xchg
add
rcrl
add
xchg
add
jne
add
testb
xchg
mov
in
loopne
lcall
push
push
push
push
call
pusha
xchg
mov
popf
add
jbe
add
add
jmp
testl
mov
add
pop
faddl
mov
lods
add
mov
add
int
mov
test
add
mov
xchg
add
in
rcr
fildll
pop
mov
in
lock
mov
xor
push
lea
push
push
push
push
lea
push
push
push
call
ret
aad
mov
scas
add
mov
mov
bound
add
mov
add
add
add
xchg
sahf
add
add
add
add
pushf
add
add
pop
push
push
push
push
push
push
push
push
push
push
push
call
pop
lods
in
lea
stc
add
mov
add
in
add
add
add
add
test
les
push
std
xchg
push
mov
pop
mov
push
pop
loope
mov
fildll
aam
add
add
add
filds
xchg
jns
pop
add
add
lcall
inc
or
push
push
push
push
push
lea
push
push
call
jns
jnp
cwtl
pushf
xchg
jmp
pop
push
scas
rcll
pop
aad
leave
add
imul
out
mov
add
test
jbe
add
mov
hlt
add
fsubr
ljmp
add
out
add
xchg
test
addb
add
mov
jb
in
call
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
cmpsl
pop
jecxz
add
sahf
repnz
int
add
add
lods
mov
clc
fsubp
add
sub
pop
rep
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
in
add
mov
mov
add
mov
sarb
std
into
test
jl
scas
in
add
add
shll
ja
fiadds
add
lcall
mov
push
lea
push
push
push
push
push
push
push
call
add
add
mov
pop
push
out
push
ficompl
pushf
rcl
addl
jmp
scas
scas
add
jns
sahf
ja
push
std
add
sub
pop
add
push
push
push
push
push
lea
push
lea
push
call
out
add
cwtl
mov
add
fmull
add
mov
add
imul
orl
icebp
add
add
push
lea
push
push
push
push
lea
push
push
push
push
push
call
ljmp
push
xchg
mov
je
add
cmc
add
js
xchg
add
add
scas
add
sarl
add
add
stos
stc
popf
add
in
std
add
mov
add
push
mov
pop
add
add
add
arpl
lret
add
add
call
fildl
ret
sbb
push
call
add
xchg
add
push
add
mov
shrb
add
addr16
loopne
mov
jns
pop
movsb
jae
jle
add
push
add
xchg
mov
stos
add
movb
jecxz
push
mov
add
add
arpl
add
loopne
add
je
add
mov
mov
add
add
sub
pop
mov
push
push
push
call
roll
add
add
loop
xchg
mov
add
lahf
lock
pop
js
add
imul
add
add
mov
pop
add
cld
sahf
add
ljmp
sarb
clc
pop
xor
push
lea
push
push
lea
push
push
push
lea
push
push
push
push
call
push
rclb
lock
filds
mov
add
aad
xchg
add
mov
arpl
imul
jmp
mov
pop
mov
add
sub
pop
add
push
push
lea
push
push
call
add
outsl
lahf
xchg
jae
add
roll
cld
push
mov
iret
les
jge
add
push
mov
jecxz
mov
add
data16
mov
add
add
out
pushf
jp
jae
add
sar
push
lods
fildl
add
leave
add
add
pop
scas
stc
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
loopne
stc
add
sti
imul
pop
jae
add
mov
add
add
mov
arpl
add
add
push
sti
lods
push
add
aad
add
loope
add
divl
add
add
add
faddl
addl
and
lea
push
push
call
add
add
testl
xchg
add
mov
aam
add
push
add
add
push
push
xchg
pusha
add
pop
sarb
sub
pop
add
push
lea
push
push
push
push
push
push
push
push
call
jl
add
cmpsb
mov
cld
add
push
test
add
rcr
add
add
add
jge
faddl
movsl
enter
jae
add
lcall
dec
sub
pop
jae
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
fidivl
rclb
outsl
add
jno
stos
scas
mov
add
add
add
add
decb
jbe
les
mov
add
jns
add
icebp
add
sti
cmpsb
push
add
sub
pop
xor
push
lea
push
push
call
icebp
shlb
add
cli
stos
add
jle
movb
add
jp
mov
add
icebp
jbe
in
hlt
lcall
les
add
push
push
push
call
add
add
add
les
add
aad
jns
scas
mov
add
repnz
pop
mov
add
fildl
mov
lock
add
mov
pop
add
push
inc
add
add
pop
add
mov
push
push
rol
push
or
not
add
add
sub
pop
not
pop
push
push
push
lea
push
lea
push
push
push
call
into
in
addl
add
pop
nop
add
add
add
mov
cmpsl
pop
add
mov
add
stos
mov
add
jne
fiaddl
mov
out
js
ror
add
out
fwait
add
add
sub
pop
pushl
call
push
sub
sub
xor
pop
push
push
push
shr
push
sub
add
add
ror
not
sub
inc
pop
inc
dec
pop
push
not
pop
push
push
push
call
add
add
jle
mov
lret
add
add
jae
pop
nop
jecxz
arpl
loopne
xchg
xchg
std
mov
jge
mov
testb
add
push
push
push
lea
push
lea
push
push
push
call
pop
add
jmp
addl
push
xchg
add
add
mov
fldenv
pusha
mov
add
shll
add
add
in
add
xchg
add
sub
pop
call
push
push
push
push
lea
push
call
jge
add
aam
add
aam
add
testl
std
jo
ljmp
cmc
add
jo
add
lock
pop
mov
pop
rolb
in
lcall
clc
push
push
push
lea
push
push
push
push
push
push
push
push
call
mov
in
fcomps
add
out
js
add
add
movb
push
add
add
add
fdivr
lcall
mov
push
push
push
call
add
add
mov
pop
vphaddubd
cld
add
sahf
add
add
xchg
push
sti
hlt
add
add
out
mov
mov
add
in
hlt
lcall
pop
in
push
pop
add
push
push
push
push
push
lea
push
call
call
cld
mov
jp
imul
push
add
push
mov
add
pop
jle
add
in
call
add
push
sub
pop
mov
push
push
push
push
push
push
call
add
jns
lods
push
add
fdiv
ret
add
mov
mov
xchg
mov
iret
loop
add
add
popa
add
push
add
add
lcall
xor
push
push
push
call
mov
add
mov
add
xchg
iret
repnz
lods
add
jmp
cmpsb
add
addl
pop
mov
add
int3
out
in
loop
pop
pop
add
mov
add
cmc
sub
pop
add
push
push
push
push
push
lea
push
push
call
add
popa
mov
pop
add
jmp
cmpsl
mov
notl
lret
repnz
lods
enter
add
sub
pop
add
push
push
push
lea
push
push
call
insb
roll
add
in
push
cmpsl
fistpl
ja
add
shrl
add
add
enter
lcall
imulb
popa
pop
out
jns
imul
add
sti
add
add
sbbb
add
add
in
in
pop
push
push
push
push
push
push
lea
push
push
push
call
xor
mov
xchg
pop
cwtl
mov
add
fs
add
push
cmpsb
mov
cmpsl
push
add
stc
add
jp
add
jle
add
xchg
in
loopne
lcall
inc
adc
test
push
push
lea
push
lea
push
push
lea
push
push
call
add
pop
add
testb
and
ror
fldl
xlat
roll
add
pop
add
add
add
add
scas
mov
push
sub
pop
xor
push
push
push
push
lea
push
push
push
push
push
lea
push
call
cli
jnp
add
repnz
add
pop
add
clc
andb
xchg
add
add
mov
rolb
shrb
mov
mov
add
andb
xchg
mov
aam
mov
mov
sub
pop
add
push
lea
push
push
lea
push
lea
push
lea
push
push
lea
push
call
fldl
fldt
mov
push
add
add
sahf
out
cltd
mov
stos
add
add
testb
xchg
pop
cmc
stos
in
fwait
mov
les
scas
movsb
add
fidivl
mov
xchg
rclb
movsb
add
add
add
loopne
lcall
lock
push
lea
push
push
push
push
lea
push
push
call
jae
test
pop
add
add
popf
sahf
ljmp
loopne
add
out
lea
mov
jb
xchg
mov
lcall
dec
and
push
push
lea
push
push
push
push
push
push
call
outsl
in
add
add
add
jle
jle
in
movsb
add
jb
xchg
flds
stc
rclb
mov
pop
pop
jp
add
jecxz
lret
mov
in
add
mov
jb
jmp
fwait
pop
iret
cmpsb
in
loopne
add
pop
cwtl
or
movb
adc
mov
add
cli
fldl
lods
aad
sti
jmp
pop
rep
push
add
pop
mov
xor
push
push
lea
push
lea
push
push
call
push
add
xchg
jge
add
jns
jo
mov
mov
jns
add
mov
add
pop
in
add
mov
add
add
add
add
add
add
mov
mov
mov
push
cld
int
cmpsb
mov
jnp
pop
mov
cld
mov
shlb
add
cwtl
testb
je
push
dec
sub
rol
pop
mov
xor
push
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
lods
fnsave
repnz
xchg
test
sti
hlt
add
test
add
ljmp
add
add
add
cwtl
add
pop
loopne
add
add
add
xor
push
push
call
add
add
add
jmp
push
loop
mov
out
loope
jmp
imul
lcall
lcall
les
add
push
dec
add
not
pop
add
push
shr
pop
add
push
push
pop
mov
xor
push
push
push
call
mov
lret
jmp
std
les
push
ja
add
cmpsl
mov
bound
push
add
leave
add
subl
add
jp
xchg
add
out
test
xchg
pop
push
out
add
hlt
pop
add
push
push
push
push
push
call
pop
test
js
add
stc
add
jnp
mov
data16
int3
jge
add
add
in
mov
negb
add
addr16
add
lods
add
add
add
push
movl
add
pop
rep
push
inc
pop
mov
push
push
push
lea
push
push
lea
push
push
push
call
mov
movsb
add
iret
push
jnp
mov
scas
add
add
mov
mov
rorb
add
add
in
lcall
or
push
lea
push
lea
push
call
cld
mov
add
xchg
movb
add
pop
out
add
add
leave
pop
xchg
add
add
jb
loopne
scas
add
lcall
les
add
push
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
add
lods
mov
mov
mov
jecxz
pusha
add
mov
add
add
cmpsl
add
loopne
add
mov
pop
movsb
movsl
push
add
popa
mov
xchg
jo
movsb
push
jno
add
int3
je
aam
mov
add
lcall
leave
je
push
shl
add
add
pop
mov
push
lea
push
push
push
push
call
test
add
add
add
stos
in
jo
pop
add
loope
add
insb
into
push
icebp
mov
xchg
add
add
sarl
int
jnp
push
jmp
xchg
add
shrl
xchg
add
bound
add
fwait
pop
add
mov
mov
outsl
lcall
in
lcall
sub
movb
add
push
sub
inc
rol
sub
pop
rep
push
inc
pop
pop
push
push
sub
rol
sub
push
push
pop
add
not
add
ror
shl
sub
sub
pop
add
pop
push
push
lea
push
lea
push
push
call
add
push
jecxz
cli
cmpsb
add
push
into
lahf
jmp
scas
add
gs
call
pop
fdivl
add
lods
add
mov
movsb
xchg
add
sti
mov
mov
bound
mov
mov
add
add
add
lcall
push
inc
pop
mov
mov
push
shl
inc
sub
rol
pop
mov
push
push
lea
push
push
lea
push
push
push
call
mov
je
lret
stc
push
icebp
pusha
add
mov
lret
mov
add
cltd
add
aad
add
fiaddl
add
mov
push
mov
popl
lods
rolw
sti
fidivl
add
add
subl
in
in
jmp
push
inc
sub
pop
push
mov
push
push
push
call
filds
int3
in
pop
repnz
mov
icebp
mov
mov
lahf
jecxz
cmc
add
add
outsl
push
subl
push
sub
pop
add
push
inc
pop
push
push
rol
xor
dec
inc
pop
push
push
push
lea
push
call
add
mov
fdivs
add
jbe
add
jl
out
mov
add
incb
imul
add
add
stos
mov
add
stc
add
roll
add
jo
add
les
jl
testb
add
xchg
mov
push
push
push
rol
not
dec
pop
mov
push
add
ror
lea
pop
pop
push
sub
pop
pop
push
add
sub
pop
pop
push
ror
not
ror
pop
pop
push
pop
leave
push
not
ror
rol
pop
ret
push
push
lea
push
push
push
call
add
add
jp
add
add
add
add
add
mov
add
add
add
call
out
xchg
xchg
add
out
lret
jno
add
add
jb
add
addr16
fs
add
add
roll
add
mov
jne
add
add
add
in
je
push
into
cmpsb
sub
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
lcall
push
add
lret
add
movl
add
pop
xchg
add
push
add
stos
mov
lret
fwait
add
mov
add
add
imul
call
rolb
add
testl
addr16
stos
sub
pop
mov
push
push
call
cwtl
scas
mov
fmull
mov
lods
in
add
fadds
mov
mov
add
xchg
pop
add
sti
add
add
and
push
add
push
ja
push
mov
testl
stos
fs
add
pushf
jecxz
divb
ja
rolb
add
add
clc
lcall
clc
push
add
inc
pop
push
push
lea
push
push
push
push
push
push
push
push
call
addl
jnp
in
loop
pop
out
cli
scas
pusha
push
add
add
push
add
add
bound
mov
int
ret
add
push
push
push
push
push
push
lea
push
push
call
jno
movl
aam
scas
add
mov
mov
push
out
in
stos
pop
scas
arpl
add
jecxz
in
add
stos
jo
stos
lods
pop
add
popa
push
add
add
in
sub
pop
push
push
lea
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
aam
xchg
add
ljmp
add
mov
mov
add
jne
test
ljmp
test
stos
add
pop
mov
push
pusha
into
xchg
mov
add
pop
mov
ljmp
loop
faddl
add
sub
pop
movl
push
add
pop
addl
push
lea
shl
pop
test
je
mov
push
push
push
lea
push
push
push
push
push
push
call
leave
add
add
xchg
add
fldcw
lea
pushf
cmpsl
jmp
mov
xlat
add
in
add
mov
lock
push
data16
add
mov
add
loope
mov
mov
pop
add
hlt
add
out
jnp
push
add
push
sti
lcall
sub
pop
pop
push
push
push
push
push
push
push
push
push
call
clc
repnz
add
mov
mov
mov
add
pop
ljmp
pop
add
roll
xchg
add
cmpsl
cwtl
mov
add
add
into
add
add
add
out
add
je
fcoml
in
fcompl
pop
push
push
push
push
push
call
add
shl
add
add
add
testb
test
test
mov
xchg
mov
mov
add
shlb
in
pop
pop
push
add
shl
xor
pop
leave
push
xor
pop
ret
push
lea
push
push
push
push
push
call
add
leave
fisubl
xchg
cmc
loop
addl
insb
xchg
test
push
sahf
jge
pop
rorb
ja
popf
bound
add
movsl
mov
sub
pop
push
mov
push
lea
push
call
lods
jbe
add
repnz
mov
mov
add
pop
mov
loopne
pop
out
add
push
pushf
mov
ret
lret
test
cld
push
add
out
fldenv
lds
add
push
pushf
cld
into
mov
push
add
add
test
add
cld
push
not
dec
pop
push
push
sub
pop
push
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
stc
les
mov
add
xchg
mov
add
add
add
mov
into
loope
add
add
add
fbld
fdivr
lcall
push
push
push
call
add
add
cmpsl
je
add
addr16
add
fildl
subl
push
enter
pop
add
add
xchg
add
add
jns
xchg
hlt
add
add
sub
pop
testl
push
lea
push
lea
push
push
push
lea
push
lea
push
call
clc
rol
add
cltd
ret
test
arpl
pop
test
add
lds
add
popf
repnz
fimuls
add
add
mov
add
xchg
add
add
inc
or
push
push
lea
push
push
push
push
call
fwait
movsb
add
mov
add
stos
int
add
push
mov
rolb
jecxz
xchg
aam
push
lods
pop
out
add
add
cmc
int3
push
jbe
add
testb
mov
jle
add
add
push
add
lcall
add
ffree
jmp
sub
pop
call
mov
push
sub
pop
pushl
push
dec
xor
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
push
add
pop
add
mov
push
ror
jns
xchg
popf
lret
scas
mov
jo
mov
add
icebp
mov
add
addb
lcall
add
inc
shr
pop
call
push
dec
pop
cmpl
jne
push
inc
rol
lea
inc
pop
pop
pop
push
push
push
push
push
lea
push
call
add
repnz
rclb
xchg
add
xchg
mov
pop
clc
sahf
bound
add
add
add
lods
jne
mov
mov
ja
in
call
pop
pop
push
push
call
stos
jmp
jmp
test
jp
add
scas
fucomi
flds
jl
add
out
jo
mov
add
mov
mov
imul
loopne
add
jbe
push
mov
aam
lret
je
jns
add
fcompl
popa
add
lcall
push
not
not
lea
pop
ret
push
push
sub
shl
pop
mov
push
push
push
lea
push
lea
push
lea
push
push
call
add
aad
incb
add
addb
add
push
ret
mov
add
in
lret
add
push
push
add
add
mov
stos
jle
mov
mov
add
add
ja
sti
jne
outsl
add
out
sub
pop
add
push
dec
add
rol
pop
push
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
popa
add
add
test
cmc
add
lock
mov
addb
mov
jl
aad
in
mov
cwtl
xlat
int
into
outsl
loope
fwait
notb
add
in
fdivr
lcall
push
add
ror
pop
push
push
rol
add
pop
movl
push
push
push
push
push
push
push
push
push
call
cltd
imul
push
add
add
add
flds
jbe
add
int
add
aad
in
add
add
in
leave
std
add
add
lock
int
lock
fnstenv
add
mov
add
aam
add
add
stos
add
fcoms
sub
pop
call
push
not
shl
xor
pop
push
push
push
lea
push
push
push
lea
push
call
cli
add
xchg
icebp
add
fadds
add
push
fs
add
into
mov
add
add
add
ret
js
jle
mov
sub
pop
call
push
push
lea
push
call
out
add
cwtl
fildl
addb
in
mov
add
icebp
insb
popa
aam
jae
add
mov
aad
add
loopne
ja
mov
sar
add
mov
mov
imul
jae
mov
scas
add
mov
add
outsl
push
add
loopne
add
sub
pop
subl
cmpl
jne
push
lea
push
call
loop
lds
rcr
iret
leave
cmpsl
addl
add
add
roll
mov
xchg
rorl
stos
mov
add
mov
add
cli
scas
jmp
push
add
lods
add
add
add
fprem1
into
add
lods
add
pop
push
add
add
pop
pop
push
sub
sub
ror
pop
pop
push
inc
pop
leave
push
inc
pop
ret
push
push
push
push
push
push
push
lea
push
lea
push
push
call
mov
data16
add
add
add
sarl
add
lds
pop
lods
mov
imul
shr
rcl
fs
add
add
add
add
pop
add
add
mov
add
mov
popf
repnz
xchg
movsb
add
data16
add
lcall
in
push
inc
pop
add
push
add
inc
xor
xor
pop
push
push
shr
add
pop
push
push
push
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
fistpl
mov
fstl
out
ljmp
add
rolb
jo
add
add
add
add
mov
add
push
jp
out
out
sub
pop
push
push
push
push
push
lea
push
call
add
add
cld
add
loop
jae
xchg
nop
mov
rcrl
add
jo
ja
jbe
lods
add
roll
add
aam
jmp
ljmp
rol
std
add
mov
add
inc
or
xor
lea
pop
lea
push
rol
lea
dec
lea
pop
sub
push
push
call
mov
add
mov
add
aam
icebp
xchg
add
lods
xchg
xchg
add
push
ret
sub
pop
mov
shr
push
push
call
add
add
mov
push
pusha
mov
pushf
stos
popl
imul
insb
add
outsl
je
test
jp
insb
loop
mov
out
movsl
add
sub
pop
add
mov
push
push
push
push
call
jl
addl
add
outsl
in
add
add
mov
nop
mov
add
fwait
add
rcr
add
pop
add
add
mov
sahf
add
fiaddl
xchg
mov
sub
pop
mov
push
push
push
push
push
push
call
add
pop
mov
pushf
mov
add
add
push
add
add
mov
ljmp
stos
icebp
lret
sti
pop
pop
add
rcrb
xchg
add
cltd
add
mov
in
call
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
fisttpll
add
add
pushf
jb
addl
push
test
mov
add
add
loope
add
in
add
xchg
xchg
add
pusha
loopne
push
in
pop
hlt
add
js
add
sub
pop
add
mov
push
push
lea
push
call
ret
add
sahf
add
add
mov
test
add
push
lock
andb
imul
je
add
jns
sub
pop
mov
push
inc
pop
cmp
jne
push
shr
xor
pop
cmp
jne
mov
push
add
inc
pop
movl
jmp
push
shl
sub
shl
pop
mov
mov
push
add
pop
sub
jne
push
add
inc
rol
pop
mov
movl
push
push
push
push
push
lea
push
push
push
lea
push
call
stos
insb
jecxz
add
add
xchg
pop
mov
mov
add
jno
mov
int
cltd
outsl
push
add
sub
pop
jmp
push
lea
push
push
call
add
add
scas
mov
clc
push
insb
jmp
pop
add
arpl
add
mov
lcall
inc
cld
push
push
push
call
add
add
sbb
xchg
add
add
aam
add
add
pusha
stos
repnz
lock
jmp
add
pop
add
popl
add
push
mov
add
lcall
nop
mov
add
cmp
jne
push
ror
not
dec
pop
mov
push
shl
xor
sub
sub
pop
movl
jmp
push
push
call
add
push
out
xchg
mov
add
add
add
cmc
add
add
test
mov
fiadds
add
mov
push
add
faddl
add
fdivrl
add
pop
mov
cmpw
jne
push
push
push
push
push
call
mov
add
add
add
mov
mov
add
loop
loopne
nop
enter
filds
jo
add
jb
jo
mov
out
add
jne
addb
sub
pop
mov
movl
push
push
push
push
push
push
push
push
lea
push
push
call
add
sti
incb
rcrb
sahf
jae
jns
jp
add
mov
lock
pop
add
mov
js
add
stos
mov
add
add
mov
test
lcall
hlt
push
imul
add
sub
pop
jmp
push
shl
not
pop
pushl
push
push
call
add
add
add
add
lods
movsb
add
mov
add
add
ret
add
jge
mov
les
nop
in
add
std
popf
test
xchg
addb
loop
add
xchg
add
lods
sub
pop
pop
push
sub
rol
lea
pop
mov
push
add
xor
pop
mov
push
lea
push
push
push
lea
push
push
push
call
int
mov
adc
mov
jecxz
lock
std
lock
add
xlat
mov
popf
add
add
push
arpl
add
popf
lds
aam
lret
add
add
fimull
xchg
xchg
add
jle
sahf
cmc
mov
add
sub
pop
mov
push
push
xor
push
and
add
xor
add
sub
pop
dec
shl
ror
sub
pop
push
push
lea
push
push
lea
push
lea
push
call
add
add
push
aam
lret
iret
jne
icebp
mov
lea
add
in
loop
add
add
scas
mov
fs
cli
insb
fadds
add
push
pop
call
cmpl
je
push
push
add
push
or
not
add
dec
sub
add
not
sub
sub
rol
shl
pop
lea
dec
pop
push
push
lea
push
call
add
add
add
test
pop
out
pop
rol
mov
lds
add
loopne
jb
idivl
jns
test
sti
add
fucomp
mov
addr16
mov
add
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
push
arpl
add
test
leave
mov
add
add
add
add
push
jnp
add
xlat
add
add
mov
lret
add
lea
jmp
sub
pop
call
push
lea
push
push
push
lea
push
call
add
subl
pop
add
jecxz
ljmp
add
test
jo
jge
add
rcll
add
lcall
js
int3
fldz
ret
inc
or
add
mull
push
sub
sub
push
or
not
add
not
sub
shl
pop
inc
shr
pop
push
push
push
lea
push
push
call
shl
add
incb
add
popf
shll
lods
jno
aad
push
in
sahf
mov
add
add
jle
add
sub
pop
push
push
push
push
push
push
lea
push
push
push
call
std
popa
loopne
jb
lds
add
add
mov
add
imul
add
add
out
loop
fadds
stc
add
in
loopne
lcall
pop
cmp
add
rorl
rcrl
js
int3
fldz
ret
insl
or
add
mov
ror
rol
add
inc
push
or
not
add
add
sub
add
pop
add
pop
push
xor
pop
push
call
push
lea
push
push
push
push
lea
push
push
push
push
push
call
imul
popa
rcrl
add
lret
lret
stos
add
ret
testb
push
add
idivl
in
fmull
mov
jl
data16
add
xchg
add
pop
fiaddl
cmpsb
in
sub
pop
cmpl
je
push
push
sub
xor
push
or
inc
add
xor
sub
rol
add
pop
ror
pop
push
push
lea
push
push
push
lea
push
call
jbe
add
shrl
outsl
out
jb
arpl
xchg
sahf
mov
loop
add
imul
lods
xchg
add
out
mov
add
jne
call
sub
pop
push
push
push
lea
push
lea
push
push
call
pop
mov
mov
sar
add
movb
mov
imul
jo
popl
std
cmp
mov
mov
add
movb
push
lods
stc
ljmp
pop
call
cmpl
je
push
push
inc
inc
push
xor
add
ror
sub
ror
add
pop
add
rol
dec
pop
push
push
call
add
jbe
out
add
ja
loopne
outsl
push
lods
pop
shlb
fisubl
add
add
mov
arpl
mov
add
in
add
add
add
push
mov
add
cmp
in
loope
int
int3
fwait
sub
pop
push
call
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
add
add
add
mov
int3
add
rorb
ljmp
nop
cmpsl
stc
add
in
add
mov
jnp
add
add
xchg
sub
pop
cmpl
je
push
push
shl
push
or
not
add
shl
inc
sub
shl
dec
pop
shr
lea
pop
push
lea
shr
shl
dec
pop
push
push
push
push
lea
push
push
call
popf
addl
mov
add
test
jmp
stos
pop
add
loop
add
loop
mov
out
add
into
mov
jo
add
pop
add
add
add
into
mov
data16
fiaddl
cmpl
cmpsl
add
mov
in
pop
call
push
push
push
push
push
push
call
aam
movsb
aam
loopne
add
add
add
lret
arpl
add
repnz
add
ja
out
lcall
mov
add
push
add
mov
add
fs
lods
xchg
push
std
xchg
add
loope
jl
enter
lcall
cmp
or
int3
je
push
push
lea
lea
inc
push
and
add
add
lea
sub
sub
shr
not
xor
sub
pop
sub
lea
pop
push
push
push
push
push
push
call
add
ljmp
add
push
jp
push
pop
rorb
int
js
add
loop
add
pop
addl
add
add
mov
xchg
stc
data16
nop
mov
add
lret
xchg
movsb
add
ja
movsb
add
in
add
add
mov
popa
mov
je
jns
add
push
sub
pop
push
push
sub
pop
call
cmpl
je
push
push
xor
lea
push
or
not
add
lea
sub
dec
sub
dec
not
pop
xor
shr
shr
pop
push
add
pop
push
push
push
lea
push
push
push
push
call
jmp
add
out
add
js
add
rolb
mov
imull
add
add
mov
scas
mov
ret
hlt
mov
mov
iret
add
add
pop
call
cmpl
je
push
push
lea
shr
xor
not
push
or
not
add
shl
inc
sub
sub
shr
not
pop
dec
sub
pop
push
dec
lea
pop
push
push
add
ror
pop
call
cmpl
je
push
push
ror
add
not
push
sub
add
lea
rol
xor
shr
sub
ror
pop
rol
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
call
mov
add
add
add
in
add
add
popa
add
add
push
fstps
add
pusha
add
add
push
add
jle
add
mov
add
add
add
xchg
sub
pop
push
call
push
lea
push
push
lea
push
push
lea
push
push
push
call
testb
mov
popa
mov
fs
int3
addl
add
test
add
cli
add
mov
push
mov
pop
mov
fcoms
jns
sub
pop
cmpl
je
push
push
rol
push
or
not
add
not
ror
sub
dec
add
pop
not
pop
push
lea
push
lea
push
push
push
push
push
call
fildll
loop
add
jno
jae
pop
push
mov
add
out
add
faddl
mov
mov
stos
movsb
add
cmpsl
stc
jl
ret
test
mov
std
add
add
add
arpl
pushf
popf
cwtl
mov
add
add
in
in
push
call
push
add
pop
cmpl
je
push
push
dec
shl
not
push
or
inc
add
xor
inc
sub
sub
shl
shr
pop
pop
push
push
push
lea
push
push
call
jp
addb
push
add
add
mov
les
add
in
add
jne
pop
add
fxch
add
mov
add
mov
add
cwtl
xchg
int
aad
sub
pop
push
push
shl
add
lea
shr
pop
call
push
push
push
push
push
lea
push
push
call
xchg
pop
push
add
add
add
lret
push
popf
add
add
std
add
mov
push
mov
repnz
add
add
pop
add
cmpsl
mov
add
push
call
fsubr
add
popa
add
add
xchg
sub
pop
cmpl
jne
push
dec
pop
mov
movl
push
ror
sub
xor
shr
pop
jmp
push
lea
shr
pop
xor
push
not
sub
pop
pop
push
xor
sub
pop
pop
pop
push
push
push
push
lea
push
call
jle
add
add
xchg
xlat
jne
add
add
pop
pop
int3
pop
add
add
xchg
sahf
jmp
scas
add
cli
mov
add
add
add
pop
int3
add
add
add
lcall
leave
push
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
subl
push
push
add
add
jb
addb
add
in
ljmp
shlb
add
out
jo
jno
pop
push
vmulpd
movl
sub
pop
ret
push
push
lea
push
push
push
lea
push
lea
push
lea
push
call
mov
add
movl
push
xchg
loop
addl
mov
xlat
test
cmpsl
lret
add
pop
add
add
stos
xchg
call
filds
jnp
ret
in
mov
push
not
rol
dec
dec
pop
add
push
lea
not
pop
cmpl
jne
push
push
xor
inc
add
push
or
not
add
shr
sub
not
shl
pop
add
shl
pop
push
push
push
push
lea
push
push
push
push
push
push
call
pop
outsl
icebp
add
add
lea
cwtl
mov
push
imul
movsl
jo
cltd
rol
mov
add
pushf
subl
add
stc
aam
add
add
jne
push
mov
add
add
sub
pop
pushl
push
push
call
mov
xchg
jae
mov
divl
add
ret
pop
fldcw
add
add
add
add
add
mov
add
movl
js
addb
jne
jae
push
lods
cltd
pop
lods
mov
add
popl
outsl
cwtl
jo
add
add
inc
sub
push
push
push
push
push
lea
push
call
fdivl
push
mov
add
add
fcmovbe
add
mov
add
mov
ror
fldl
add
xchg
add
lcall
call
push
push
push
push
push
push
lea
push
call
xchg
mov
in
mov
cmpb
js
pop
cwtl
add
mov
add
jle
add
add
mov
rclb
popf
add
aad
add
outsl
add
mov
pop
call
push
push
push
push
lea
push
push
call
loop
in
xchg
mov
mov
add
fstl
add
add
mov
add
jno
je
lcall
repnz
data16
add
add
sti
push
add
fidivs
pop
jmp
push
shr
add
lea
lea
pop
cmpl
je
push
push
push
call
lret
jne
add
add
out
out
fcoms
add
add
add
rcl
mov
pop
lock
jno
add
cmpsb
add
lods
add
add
call
lock
addb
clc
add
add
sub
pop
cmpl
jne
leave
push
lea
push
push
lea
push
push
push
push
push
push
push
call
iret
add
add
push
out
jge
loop
popa
add
ret
mov
lcall
mov
insb
ljmp
jae
add
add
add
mov
add
addb
int
sarl
add
add
xchg
lcall
or
fbstp
fstpl
push
add
pop
pop
push
lea
push
push
push
push
push
lea
push
push
call
add
test
call
lods
jnp
mov
add
add
add
pop
or
lock
stos
test
add
push
add
jge
pop
jnp
mov
add
stc
push
add
in
loopne
lcall
push
push
push
push
lea
push
push
lea
push
call
add
jo
pusha
add
scas
mov
fmulp
push
pushf
cmpsl
add
add
add
mov
call
fwait
add
popa
pop
mov
shr
add
jp
in
in
lcall
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
add
add
scas
loop
mov
xchg
mov
add
lret
mov
add
into
pop
arpl
in
fdivr
lcall
push
shr
pop
add
push
push
lea
push
lea
push
push
call
testb
mov
add
hlt
arpl
xchg
add
int3
arpl
gs
add
scas
mov
add
xchg
jno
fs
mov
add
add
sti
lret
add
add
add
add
add
jmp
push
lea
push
push
push
lea
push
push
call
movsl
jno
sahf
stc
add
clc
push
pop
ja
mov
add
add
fisubrs
add
xchg
add
add
cmpsl
std
add
lcall
jge
add
test
fcoms
xlat
push
add
lea
push
or
not
add
shr
sub
shl
pop
pop
push
dec
lea
pop
pushl
call
push
lea
rol
not
pop
push
push
lea
push
push
push
push
push
call
xchg
lret
xchg
add
add
pop
mov
add
stos
popf
mov
lahf
add
add
pop
fucomi
arpl
sub
pop
call
jmp
push
lea
add
shr
shr
pop
cmpl
jne
push
sub
dec
inc
pop
mov
push
pop
mov
push
push
push
push
push
push
push
lea
push
call
pop
mov
add
fadd
add
jo
add
loope
mov
push
add
in
movsl
clc
mov
mov
mov
loopne
lcall
adc
add
push
lea
push
push
push
lea
push
call
faddl
scas
jnp
mov
rolb
sti
add
xlat
add
pop
stos
push
mov
pop
mov
add
pop
nop
push
imul
add
mov
std
in
pop
add
mov
fistl
in
add
add
stc
lods
jle
add
add
push
push
dec
ror
add
push
or
not
add
shr
sub
sub
shl
inc
pop
not
add
pop
push
push
push
push
push
push
push
push
lea
push
call
pop
idiv
add
clc
aad
cmpl
ja
add
add
add
add
js
add
scas
in
add
lds
mov
shr
pop
add
xlat
sub
pop
pushl
call
push
add
pop
call
push
push
sub
dec
inc
push
sub
add
sub
add
dec
rol
sub
not
xor
shl
add
pop
pop
push
inc
sub
pop
pushl
call
push
ror
sub
pop
call
push
push
lea
not
lea
sub
push
push
pop
add
add
sub
lea
pop
shr
sub
pop
push
not
lea
ror
pop
pushl
push
not
ror
pop
call
push
shl
pop
call
push
push
shl
push
push
pop
add
lea
sub
shl
pop
shl
add
lea
pop
push
push
push
push
push
call
add
scas
pop
jnp
add
std
add
cld
pop
lahf
add
add
int
jno
mov
xchg
add
sarl
pop
add
jbe
push
jle
xchg
add
add
jne
leave
sub
pop
pushl
call
push
lea
xor
pop
call
push
push
add
push
and
add
lea
ror
sub
pop
ror
xor
add
pop
push
sub
dec
pop
pushl
push
add
shr
rol
pop
call
call
push
push
shr
push
or
inc
add
dec
sub
sub
sub
ror
dec
pop
add
shr
pop
push
push
push
push
push
push
push
push
call
add
cmpsl
mov
add
pop
add
add
data16
add
push
fstpl
fwait
add
add
push
add
lcall
jne
call
push
not
rol
pop
call
push
push
shl
push
or
inc
add
shr
not
lea
sub
sub
sub
sub
pop
rol
pop
push
push
push
push
push
push
push
push
push
push
call
clc
pop
addl
add
in
xchg
add
call
loope
add
xchg
scas
mov
aad
add
mov
jl
add
add
add
push
add
add
test
sarb
je
add
lcall
jne
push
push
call
int
test
mov
xchg
add
mov
add
add
mov
add
add
fwait
add
add
leavew
test
add
push
add
add
mov
add
lret
add
cltd
add
lcall
cmp
add
shrb
cmp
cmp
fisttps
lret
push
rolb
add
push
and
add
shl
pop
shr
pop
push
not
pop
pushl
call
push
push
push
push
push
call
add
imul
add
cmpsb
add
ret
shlb
mov
imul
pop
jmp
add
add
cli
add
lahf
push
fiadds
add
mov
add
jne
add
add
add
scas
push
add
mov
sub
pop
call
push
push
shl
sub
shr
sub
push
sub
add
sub
sub
not
shr
pop
rol
not
not
pop
push
ror
xor
inc
pop
pushl
call
push
ror
shl
pop
call
push
push
dec
add
not
push
xor
add
add
sub
add
lea
sub
add
dec
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
sti
roll
scas
add
ljmp
add
movsb
add
in
jae
pop
test
stc
movsl
lahf
jbe
xchg
mov
aad
add
cwtl
pusha
add
add
add
add
add
add
leave
subl
scas
jp
jne
leave
xchg
add
jp
data16
add
popf
mov
in
loopne
lcall
jne
push
dec
not
pop
call
lea
push
push
lea
push
push
push
call
imul
mov
mov
add
add
mov
push
imul
add
push
movsb
fsts
lcall
lods
pop
pop
sarl
test
in
in
pop
push
call
push
push
xor
ror
push
xor
add
sub
dec
sub
pop
rol
sub
shr
shl
pop
push
shl
sub
inc
add
pop
pushl
call
push
shl
add
pop
call
push
push
add
sub
push
sub
add
ror
ror
sub
dec
shl
dec
sub
pop
not
sub
pop
push
shr
add
not
pop
pushl
call
push
ror
shl
pop
call
push
push
dec
sub
inc
xor
push
push
pop
add
inc
sub
pop
ror
add
ror
pop
push
sub
inc
inc
pop
pushl
call
push
rol
pop
call
push
not
dec
not
pop
lea
push
push
shl
shr
dec
push
xor
add
xor
sub
not
pop
dec
pop
push
add
pop
pushl
push
push
push
push
push
push
call
stc
mov
roll
add
out
jbe
add
bound
mov
sahf
outsl
add
add
fdivrs
add
add
cmpsb
add
jae
add
jge
pop
jnp
xchg
in
into
xchg
xchg
push
mov
add
in
pop
movsb
mull
gs
add
add
add
jmp
add
pop
sub
pop
call
push
lea
push
push
call
addl
add
add
lcall
xchg
lahf
add
imul
add
into
add
mov
lcall
push
dec
pop
call
push
push
inc
sub
push
or
inc
add
lea
sub
sub
shr
pop
lea
lea
pop
push
push
call
clc
push
mov
frstor
roll
pop
cwtl
fldenv
add
add
add
add
xchg
rolb
pop
add
clc
pop
pushl
call
push
push
push
call
add
lea
mov
imulb
add
add
pushf
add
add
lea
fstpl
add
icebp
add
mov
rcrb
add
add
push
stc
popl
in
add
add
call
hlt
pop
call
push
push
push
push
push
push
push
lea
push
call
mov
hlt
nop
out
lods
add
add
fwait
xchg
push
add
xlat
add
add
add
cwtl
add
lods
mov
shlb
xchg
pop
test
add
nop
testl
fldt
add
subl
push
mov
cmc
mov
add
addb
icebp
add
mov
loopne
lcall
inc
cld
push
push
add
dec
add
sub
push
push
pop
add
shr
sub
sub
sub
lea
pop
inc
pop
push
ror
pop
pushl
call
push
add
inc
not
pop
push
pushl
push
push
push
call
scas
add
scas
stos
call
add
lods
addb
test
test
ror
add
in
gs
outsl
out
xlat
jne
test
mov
add
jb
jno
add
ja
sub
pop
call
push
push
ror
push
and
add
ror
inc
sub
shr
not
sub
pop
add
shr
shl
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
add
fbstp
andb
lods
add
mov
add
std
add
add
outsl
clc
test
jnp
mov
add
add
fstps
add
jne
call
push
push
inc
push
or
inc
add
shr
sub
pop
rol
xor
pop
push
push
rol
sub
sub
push
sub
add
shl
sub
xor
not
inc
pop
sub
add
not
sub
pop
push
inc
ror
ror
pop
call
push
push
sub
push
push
pop
add
add
lea
shl
add
sub
pop
dec
shr
pop
push
rol
rol
pop
pushl
push
rol
shr
ror
pop
call
push
push
call
jl
add
xchg
add
xchg
repnz
add
test
mov
andl
lods
add
add
popl
rcrl
xchg
shlb
testl
push
add
xchg
clc
lcall
clc
pop
mov
push
lea
push
call
out
mov
add
aad
rolb
add
pop
cmpsl
add
xchg
std
mov
add
cltd
add
lcall
loop
push
pushf
add
addr16
add
lcall
pushf
and
call
call
add
loopne
jae
scas
add
push
movsl
scas
cwtl
pusha
mulb
ljmp
fidivs
add
shrb
imul
test
xchg
mov
mov
iret
add
xchg
sub
pop
lea
push
not
shr
pop
push
push
push
dec
lea
sub
pop
push
push
push
call
rolb
ljmp
mov
xlat
push
pop
clc
add
add
enter
mov
stos
rolb
in
add
cwtl
jb
imul
addb
sub
pop
push
push
push
push
call
push
test
push
xchg
fsubrl
out
xchg
add
add
add
mov
lret
jecxz
stc
xchg
roll
add
add
in
hlt
lcall
add
push
lea
push
lea
push
push
push
push
push
push
call
add
test
add
pop
push
add
mov
lea
add
add
jle
add
scas
mov
cli
hlt
repnz
add
lcall
add
push
push
push
lea
push
push
push
push
call
add
push
add
test
add
xchg
pop
int3
test
add
test
push
add
lahf
ffreep
aam
scas
iret
add
jno
mov
stos
add
add
iret
fistpl
add
add
test
movsl
mov
fcomps
sti
add
testb
add
scas
movl
fs
adc
push
push
push
push
push
lea
push
lea
push
lea
push
call
xlat
add
add
jecxz
andb
test
add
pop
pop
cli
add
add
add
mov
mov
out
xchg
add
jne
add
add
add
xlat
mov
mov
add
mov
pop
add
add
ja
add
add
add
jl
jp
call
imul
xlat
add
pushf
jo
leave
jbe
add
leave
roll
incb
add
cwtl
outsl
add
push
push
add
movb
xchg
icebp
lcall
jmp
add
sub
pop
call
push
push
rol
xor
shl
sub
push
or
not
add
sub
xor
xor
sub
ror
sub
inc
pop
ror
add
inc
pop
push
sub
shr
ror
pop
pushl
push
lea
push
push
push
call
out
jl
push
add
jp
add
mov
mov
leave
test
add
incb
cwtl
push
xlat
xchg
mov
add
add
add
lock
test
je
add
je
add
push
lea
push
push
push
push
call
xchg
jb
xlat
jns
add
cmc
add
add
mov
mov
add
add
add
lods
shlb
mov
fsubp
inc
je
mov
in
repnz
popa
imul
loop
pop
pushf
add
lcall
rclb
fimuls
or
inc
clc
push
lea
push
lea
push
push
lea
push
call
lods
in
lods
lods
popa
mov
add
clc
pop
sti
orb
aad
addr16
jl
mov
lock
lcall
add
je
add
test
in
xchg
ljmp
push
pop
dec
jne
push
not
not
pop
call
push
push
sub
xor
push
push
pop
add
sub
sub
sub
sub
inc
not
pop
inc
rol
ror
pop
push
lea
push
call
mov
idivl
fstl
outsl
mov
add
int
add
add
add
clc
add
mov
sarl
clc
lcall
jne
push
lea
not
xor
add
pop
call
push
xor
xor
dec
sub
pop
push
call
push
add
pop
mov
lea
push
push
push
push
pop
add
xor
add
xor
sub
shr
lea
pop
ror
ror
not
pop
push
inc
pop
pushl
push
sub
add
sub
pop
call
push
pop
push
push
push
call
add
rorl
out
in
loope
add
add
xlat
addl
popa
push
rolb
jne
add
mov
jnp
roll
jb
add
add
stos
add
xchg
add
clc
add
fwait
add
lods
jae
flds
mov
mov
add
jnp
add
push
sahf
loop
mov
mov
call
push
push
add
inc
push
xor
add
sub
ror
sub
shr
not
add
xor
pop
sub
rol
sub
pop
push
add
not
pop
pushl
push
inc
rol
rol
pop
call
push
not
ror
sub
sub
pop
call
mov
push
pop
lea
push
push
push
and
add
sub
sub
dec
lea
pop
shr
pop
push
push
push
push
lea
push
call
rcr
add
add
fistps
fucom
mov
push
add
add
cmc
add
lahf
out
add
fistpl
add
icebp
insb
pop
push
imul
nop
popa
lcall
test
flds
jne
push
shl
sub
rol
shr
pop
call
lea
push
shl
pop
push
push
push
push
call
add
mov
fdiv
sarl
filds
add
scas
add
add
in
xchg
iret
push
cli
jle
add
add
fadd
fwait
pop
add
push
add
mov
lcall
add
rcl
std
insb
xor
pop
pushl
push
push
not
shr
push
and
add
lea
sub
shl
not
add
pop
not
xor
pop
push
push
push
push
push
push
push
call
jo
push
popf
add
add
pusha
add
cmpsl
add
add
in
add
out
add
test
add
add
add
add
into
add
xchg
pop
fistl
add
cmpsl
mov
push
jmp
jb
in
in
push
call
push
push
shr
push
xor
add
dec
dec
shr
sub
pop
add
sub
pop
push
push
push
push
lea
push
push
push
push
push
call
lcall
push
cwtl
out
test
add
shlb
jle
add
add
add
divb
in
fcompl
jne
push
sub
xor
pop
call
push
push
push
push
lea
push
push
push
lea
push
push
call
into
test
jae
push
mov
add
loop
pop
lods
add
mov
push
sti
pop
fcom
add
mov
je
jo
add
shrb
loopne
push
lea
add
push
xor
add
sub
sub
dec
sub
pop
add
shl
pop
push
lea
add
pop
pushl
call
push
lea
push
lea
push
lea
push
push
push
push
call
mov
lods
mov
add
lds
test
pop
add
add
bound
ja
out
add
pusha
add
jl
add
fisttpl
add
add
lret
add
add
push
pop
add
sub
pop
call
push
push
lea
push
lea
push
push
lea
push
lea
push
call
pusha
pop
add
add
mov
mov
mov
jne
arpl
sbbb
lock
mov
push
pop
mov
jmp
pushl
push
push
push
push
push
call
mov
add
add
add
add
add
sti
jb
jmp
add
aam
test
movsb
add
out
jbe
mov
out
xchg
clc
roll
add
add
push
flds
stc
add
sti
mov
pop
roll
add
add
add
add
sub
pop
mov
push
not
add
sub
add
pop
jmp
push
push
add
push
and
add
shr
shl
sub
sub
sub
sub
add
lea
pop
xor
sub
ror
add
pop
push
push
push
lea
push
call
mov
jp
add
addl
js
add
push
roll
add
leave
pop
jnp
pop
xchg
out
in
mov
xchg
into
bnd
ret
lock
lcall
jne
push
not
shl
shl
pop
call
push
push
push
call
add
hlt
mov
ja
add
add
add
pop
add
out
out
adcl
mov
add
add
mov
add
add
add
test
push
call
push
push
rol
add
sub
rol
push
or
not
add
xor
sub
shl
pop
rol
not
inc
pop
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
stos
add
add
cltd
cltd
pop
fidivrl
add
jbe
add
add
mov
call
add
add
nop
pop
mov
mov
loopne
pushl
push
push
lea
push
push
push
push
call
clc
mov
mov
add
xchg
stos
stos
push
sti
clc
popf
mov
add
add
add
hlt
add
lcall
in
call
call
push
push
shr
rol
pop
call
leave
push
xor
rol
add
pop
add
push
push
lea
push
call
add
jno
add
add
imul
add
add
push
mov
lret
test
add
lea
data16
add
add
add
lea
pop
push
add
pop
pop
push
push
push
push
push
call
add
fs
pop
add
imul
fiadds
imul
out
ret
stos
add
add
push
xchg
add
and
jle
cmpsb
add
mov
add
popa
hlt
xchg
add
lcall
lea
in
pop
pop
pop
push
lea
push
lea
push
push
push
call
mov
mov
add
jl
xchg
lahf
add
push
add
test
pop
cli
mov
add
in
in
lcall
add
push
push
push
call
add
add
add
add
movsb
jbe
add
add
push
pushf
mov
sti
fwait
in
add
xchg
mov
in
clc
add
mov
lock
xchg
into
sti
std
popf
mov
jecxz
pop
push
add
sub
pop
ret
leave
push
add
sub
xor
xor
pop
ret
push
push
push
push
push
push
lea
push
call
add
pop
add
int
movsb
add
jmp
lock
shll
cmpl
push
add
xlat
add
orb
add
out
add
add
mov
add
into
sbb
call
push
lea
push
call
cli
cwtl
call
jp
add
pop
insb
add
add
fcomi
add
mov
test
mov
pop
js
add
imul
add
cwtl
sub
pop
cmpl
jne
push
push
lea
push
push
push
push
push
push
call
xchg
aam
pop
xchg
add
add
mov
xchg
in
add
mov
jne
mov
mov
add
add
add
add
add
aad
pusha
stc
add
loopne
push
add
add
shr
add
mov
lcall
inc
and
push
push
push
push
push
push
push
push
push
call
add
loop
mov
add
lcall
ja
mov
out
mov
lahf
add
out
roll
add
lea
fcompl
push
add
push
lea
push
push
call
out
rorl
add
in
pop
add
lea
lock
rcr
xlat
add
add
jmp
add
mov
lret
je
addb
add
lods
push
mov
sub
pop
mov
push
lea
pop
and
push
push
push
call
cli
add
jns
jmp
lea
jl
add
data16
adc
add
leave
ljmp
push
xchg
mov
mov
add
subb
add
add
jmp
arpl
add
xchg
ljmp
lcall
leave
push
push
push
push
lea
push
push
push
call
fsubrs
int3
clc
add
jl
add
rolb
jb
gs
jo
in
imul
orb
add
lods
mov
fildl
jno
mov
add
pop
add
add
mov
fiadds
roll
sub
pop
xor
push
inc
inc
pop
add
push
sub
rol
inc
pop
xor
dec
push
push
push
push
call
cmpsl
add
add
add
test
aam
mov
into
add
add
add
jbe
fsubs
add
xchg
jge
add
scas
jmp
sahf
imul
add
imul
pushf
add
jmp
push
push
call
pusha
add
jne
cmpsl
insb
std
lea
add
xorl
mov
jae
add
rcrb
not
jno
xchg
jecxz
int
mov
add
mov
pop
mov
add
add
lcall
in
add
add
push
lea
push
push
push
push
push
push
push
call
pop
add
jl
aam
add
aad
cld
loop
xchg
mov
add
pop
nop
add
cmc
mov
add
stc
add
add
out
add
add
lret
movb
add
test
jne
add
xchg
add
add
pop
mov
mov
loopne
in
loopne
lcall
xor
rcrb
lea
push
lea
push
push
push
call
incb
out
add
mov
add
int3
je
add
mov
popf
add
add
imul
sahf
scas
jns
ja
add
add
push
stos
mov
add
jns
add
add
test
mov
mov
mov
in
pop
sub
push
pop
cmp
jne
push
sub
pop
mov
push
add
pop
lea
push
lea
push
call
add
int
popf
insb
add
push
lods
add
int
add
add
add
fwait
mov
push
add
mov
stos
lea
add
add
mov
addl
lea
mov
cwtd
mov
add
roll
add
add
jmp
sub
pop
sub
push
sub
xor
sub
pop
mov
shr
push
not
pop
add
push
add
lea
rol
rol
pop
sub
pushl
push
inc
pop
pop
push
push
push
push
lea
push
lea
push
push
push
call
int
addw
sar
mov
add
pop
push
bound
mov
add
fs
pop
add
add
jnp
push
loope
pop
add
add
imul
jle
pop
in
lock
add
add
mov
xchg
icebp
cmc
repnz
into
call
add
add
jb
add
lcall
jmp
shl
pop
and
sub
push
lea
push
push
push
push
call
add
shl
add
add
cld
add
addr16
add
pop
shr
cld
out
add
aam
add
push
add
sahf
std
mov
imul
stos
add
add
add
fadds
sub
pop
cmp
jne
leave
push
push
lea
push
push
call
loopne
iret
in
add
push
add
clc
clc
cltd
addr16
add
jne
pop
jne
jnp
incb
add
add
xchg
add
mov
std
jne
orl
movsb
add
insb
add
add
cwtl
add
add
xchg
add
jl
add
add
lds
lock
lcall
add
push
lea
push
call
cmc
std
add
jle
add
cltd
add
mov
cmc
xchg
jo
mul
add
add
nop
gs
insb
pushf
sti
sahf
movsl
fsubp
cmpsl
fwait
cli
add
add
movsl
add
add
push
cld
add
add
popf
add
add
sub
pop
push
push
lea
rol
pop
mov
push
push
push
push
push
push
push
push
push
call
in
add
pop
add
add
shrb
cwtl
enter
add
add
shll
add
gs
lods
ret
orl
add
repnz
roll
fdivl
sarb
pop
add
add
lods
add
pop
lret
push
xchg
enter
add
lcall
cld
push
inc
shl
pop
push
push
ror
dec
pop
push
push
push
push
lea
push
call
add
cmpsb
xchg
add
test
add
lea
jno
add
cmpsb
add
test
call
add
into
pop
add
add
not
pusha
add
lcall
jb
test
test
sub
pop
push
push
dec
ror
dec
pop
push
push
dec
shr
dec
add
pop
mov
push
push
push
call
mov
ficoms
mov
into
out
xchg
mov
push
add
cmc
push
mov
repnz
add
add
push
add
mov
xchg
mov
jb
mov
imul
insb
outsl
addb
jae
roll
lret
enter
add
out
stc
add
sub
pop
lea
sub
push
sub
ror
pop
mov
push
push
push
lea
push
push
push
call
add
std
add
mov
loop
add
scas
jo
jle
int3
nop
mov
add
add
pop
add
jae
out
call
pop
shr
push
xor
xor
lea
shr
pop
add
push
push
call
testb
jne
add
gs
mov
lahf
xchg
mov
add
mov
lock
lret
add
clc
lcall
fwait
addb
add
pop
or
leave
shrl
out
xor
xchg
sbb
push
lea
push
call
ret
jmp
xchg
add
add
std
jo
mov
add
add
sti
add
push
add
bound
pop
mov
push
add
pop
add
xor
push
lea
push
push
push
lea
push
lea
push
push
push
push
call
in
test
addb
add
add
add
lret
cmpsb
add
add
pop
popa
jecxz
add
jbe
mov
xchg
call
add
into
mov
cmc
jae
mov
add
sti
fstpl
jbe
into
add
mov
add
lcall
xlat
push
sub
pop
and
rol
push
pop
rol
xor
push
push
lea
push
lea
push
push
push
call
scas
add
add
add
subl
add
add
add
mov
xchg
add
in
jae
add
add
push
lahf
jnp
or
xchg
add
mov
pop
fadds
push
stc
add
sarl
pop
inc
cmpb
jne
push
ror
shl
pop
add
cmp
je
push
sub
xor
xor
pop
add
push
ror
dec
lea
pop
cmpl
jne
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
fildll
cltd
rolb
push
xchg
add
pushf
imul
mov
xchg
mov
js
pop
test
in
push
xlat
aam
add
movsl
mov
add
repnz
add
popa
cmpb
add
xchg
add
add
lcall
rclb
and
fcomps
push
inc
inc
shr
pop
pop
push
sub
xor
pop
pop
push
sub
lea
pop
pop
pop
push
lea
add
pop
leave
push
push
lea
push
push
push
call
fwait
scas
add
gs
mov
add
testl
int
add
add
leave
add
add
lods
pusha
add
add
cmc
xchg
lahf
mov
ja
add
sub
pop
ret
mov
push
push
call
cwtl
mov
add
add
jns
out
hlt
fwait
add
test
fcompl
loop
mov
testb
lea
test
addl
add
clc
lcall
push
or
xor
sub
sub
pop
push
push
lea
push
call
hlt
add
out
add
in
push
add
movsb
jmp
add
xchg
add
add
add
push
jl
jl
add
add
fnsave
fwait
stos
pop
add
add
add
into
add
add
add
add
movsb
idivb
nop
push
sarb
clc
pop
add
mov
push
lea
push
lea
push
lea
push
lea
push
call
roll
pusha
xchg
pop
add
jecxz
hlt
lret
jmp
add
mov
lds
rolb
out
cltd
add
jl
add
fiadds
add
pop
hlt
sub
pop
testw
push
push
lea
push
push
lea
push
push
call
jmp
in
add
fsubrl
add
jle
pop
into
add
add
xchg
icebp
fmul
fadds
aad
std
add
nop
add
add
add
jbe
movsb
pop
add
xchg
lock
fldl
leave
xchg
arpl
sub
pop
pop
push
rol
rol
add
pop
pop
push
dec
pop
mov
push
push
push
call
add
addl
nop
push
push
jp
add
cmpsb
in
mov
add
add
testb
jbe
add
mov
jl
fnstsw
add
mov
add
mov
push
lret
add
add
loopne
sahf
orl
add
add
xchg
push
in
mulb
pop
call
xor
push
push
push
push
push
call
add
xchg
roll
jno
imul
fs
pop
add
xchg
fsubl
jle
add
leave
jge
sahf
cli
mov
into
add
ret
push
cltd
add
push
add
adcb
addl
lret
mov
mov
in
in
lcall
push
push
lea
push
push
push
lea
push
call
mov
add
add
mov
xchg
test
fiaddl
stos
add
add
add
testl
add
cwtl
bound
add
outsl
std
add
jl
add
add
jne
addl
add
nop
pushf
add
pop
push
add
push
add
movb
add
in
call
jmp
sub
pop
pop
push
add
not
pop
pop
push
inc
pop
pop
leave
push
lea
push
call
add
add
icebp
add
fwait
roll
jp
add
add
loope
add
add
xlat
add
ja
xchg
add
add
add
lret
fiaddl
add
testl
arpl
add
add
into
les
jo
pop
stos
leave
add
add
add
lods
cmc
cmpsl
mov
cld
add
mov
in
clc
lcall
or
push
push
lea
push
push
call
add
add
aad
push
add
popa
nop
lods
add
add
test
jl
enter
pop
add
add
jne
mov
add
add
fld
mov
lock
push
push
add
add
pop
mov
add
push
lea
push
push
push
push
push
call
mov
add
add
test
add
mov
add
repnz
ljmp
int
add
gs
fldenv
jmp
xchg
int3
add
add
cmpsb
add
movsl
add
jecxz
imull
add
call
cmc
xor
out
push
push
push
lea
push
call
in
add
cld
add
add
mov
mov
add
test
addl
add
lods
jp
in
sub
pop
push
push
push
push
push
call
out
add
add
mov
loop
mov
js
add
cmpb
add
add
push
jae
add
push
cmpsb
add
add
add
pop
push
push
push
dec
add
add
pop
mov
push
add
pop
push
pop
push
add
pop
lea
push
ror
shr
pop
sub
push
not
pop
mov
shr
push
inc
dec
pop
add
mov
push
push
lea
push
push
lea
push
push
push
call
push
mov
out
mov
add
jp
mov
add
add
add
mov
add
sub
pop
add
push
lea
push
lea
push
push
push
push
push
push
call
xchg
jecxz
xlat
add
gs
add
fcmovnu
enter
enter
add
imul
cltd
outsl
push
subl
rcl
testb
add
lcall
jae
push
add
shr
lea
shr
pop
popl
push
push
push
call
add
mov
add
les
add
add
cld
add
icebp
out
pusha
out
push
add
hlt
roll
add
jl
mov
add
mov
add
jnp
push
shl
sub
sub
pop
add
xor
push
xor
add
pop
lea
push
add
inc
pop
mov
push
add
pop
add
push
xor
dec
dec
dec
pop
xor
push
sub
shl
sub
pop
rol
push
xor
add
sub
pop
nop
nop
push
inc
rol
dec
pop
xor
push
sub
not
pop
nop
nop
push
push
lea
push
push
lea
push
push
push
call
cmc
xchg
lret
pop
mov
out
add
add
add
aam
add
mov
pop
add
mov
add
cmpsb
in
add
add
lcall
push
dec
pop
nop
push
push
push
lea
push
lea
push
lea
push
push
call
out
data16
std
add
add
fnstsw
mov
out
ret
sarl
mov
bound
fisttpll
jl
add
add
mov
add
in
lcall
push
push
push
call
mov
add
push
add
add
mov
mov
xchg
add
arpl
add
in
hlt
pop
cmpb
jne
push
not
lea
sub
shl
pop
add
push
push
push
push
push
push
lea
push
push
call
pop
add
popf
in
in
mov
testl
shll
add
js
mov
cli
cmpsl
add
add
pop
push
push
mov
add
testl
push
add
rcrb
add
add
add
add
lcall
push
not
pop
nop
push
sub
pop
cmp
je
nop
push
shr
shr
shr
pop
nop
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
add
add
add
fs
pop
mov
add
jo
shlb
add
xchg
mov
add
mov
pop
inc
nop
push
xor
pop
nop
push
push
push
call
lods
cmpsl
test
fisubs
imul
add
lret
cmpsb
cmpsl
mov
out
xchg
add
add
fldl2e
test
add
add
add
add
js
pop
nop
jecxz
pop
addr16
mov
add
add
addb
jb
mov
add
rolb
lcall
jne
jb
push
push
push
lea
push
push
push
call
add
clc
add
add
add
add
fld
add
fdivl
roll
add
pushf
mov
pop
add
add
lods
sub
pop
xor
jmp
push
lea
push
lea
push
push
push
lea
push
push
call
lock
jp
rcr
into
jo
cwtl
push
add
int3
fldl
add
insb
mov
add
test
out
shlb
add
add
imul
jno
addl
out
lcall
mov
movsb
add
add
add
in
in
lcall
push
and
rcll
push
push
push
lea
push
push
push
call
outsl
lock
mov
mov
mov
fidivrl
cltd
mov
add
mov
mov
add
lea
add
out
add
sti
lods
add
add
pusha
add
lods
mov
fimull
loopne
movzwl
mov
push
push
push
call
add
loopne
les
add
push
add
int
xchg
stos
fiaddl
pop
stos
js
jne
add
push
add
add
add
add
add
in
hlt
lcall
rcll
sub
pop
mov
push
lea
push
call
mov
add
add
mov
xchg
cld
pop
add
push
sarl
jnp
ja
xlat
add
movsb
add
jmp
iret
cli
hlt
cltd
gs
cltd
repnz
add
mov
sub
pop
xor
xor
push
add
pop
shl
push
rol
pop
xor
shl
push
push
call
mov
movsl
sti
nop
ljmp
pop
xchg
mov
pop
mov
add
mov
mov
lock
add
hlt
add
pop
std
fs
int3
mov
mov
add
add
cmc
push
mov
ja
arpl
imul
add
roll
push
push
sub
pop
xor
push
lea
add
sub
sub
pop
shl
xor
push
push
push
lea
push
call
xchg
mov
add
add
mov
add
popa
push
add
add
add
mov
add
jp
in
add
mov
mov
jo
call
add
add
movsl
add
cltd
add
add
add
add
add
lcall
rcll
lea
pop
add
pop
push
push
push
call
add
xchg
add
add
mov
in
add
clc
data16
add
sar
push
ljmp
jns
les
add
faddl
push
add
fisubl
pop
jmp
cmc
data16
insb
add
lcall
pop
push
push
push
push
push
push
push
call
pusha
lods
lods
mov
popa
pop
add
scas
out
add
add
pusha
add
add
loope
add
add
push
add
add
xchg
cwtl
add
stos
add
pop
add
bound
add
add
add
add
add
clc
push
add
add
add
leave
push
add
shl
pop
ret
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
add
add
arpl
add
pop
mov
add
jmp
add
add
push
push
push
push
push
push
push
push
lea
push
call
sti
lock
jecxz
xchg
mov
imul
jbe
add
add
cltd
mov
in
rolb
cld
add
addl
add
add
mov
add
fidivl
fiaddl
fiaddl
outsl
aad
add
ret
les
fadds
in
push
lea
push
lea
push
push
push
push
push
push
push
call
add
imul
add
addb
arpl
push
shll
add
pop
lcall
add
mov
rcl
mov
add
add
test
stc
imul
mov
sub
pop
push
push
push
dec
lea
not
pop
push
push
push
lea
push
lea
push
call
add
add
arpl
jge
add
push
push
stos
xchg
add
pop
mov
mov
testb
aad
imul
add
data16
add
add
cltd
aam
add
mov
add
scas
add
add
add
out
in
lock
push
push
push
push
push
lea
push
push
lea
push
push
call
jno
shlb
iret
jp
loopne
push
loope
jae
push
add
lods
add
mov
add
add
xchg
add
add
mov
jo
add
add
mov
lods
sub
pop
mov
push
dec
rol
not
not
pop
mov
push
push
lea
push
push
call
mov
add
stc
mov
ljmp
add
imul
stos
add
cmc
add
rolb
add
enter
mov
xchg
popf
lds
nop
iret
pushf
divl
add
test
ja
add
add
xchg
mov
mov
push
shl
sub
lea
pop
test
je
push
push
call
add
add
mov
jnp
push
add
xchg
jge
faddl
faddl
jl
std
add
add
lods
test
popf
xchg
fcomi
jno
add
les
lcall
jno
push
not
xor
pop
test
je
push
push
call
add
push
mov
pop
addl
out
jmp
fldenv
roll
jecxz
movsb
pop
in
mov
ret
cmp
jl
into
add
rorl
arpl
add
movsl
int3
in
fidivrs
scas
xlat
sti
je
mov
add
add
into
add
mov
add
lcall
testl
loopne
mov
push
inc
pop
inc
cmp
je
push
pop
test
je
push
rol
pop
mov
push
push
call
pop
add
add
jno
mov
nop
push
add
cli
xlat
add
icebp
add
jge
sahf
repnz
push
enter
test
jnp
fcoml
sub
pop
inc
cmp
je
push
add
rol
pop
test
jne
push
inc
pop
xor
push
push
push
push
call
mov
add
mov
int
xchg
mov
add
add
add
add
je
cmpsl
add
lcall
pop
push
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
pop
movl
xor
testl
add
loope
add
fs
popf
add
add
push
iret
fwait
loop
mov
add
add
repnz
add
mov
mov
add
add
mov
sub
lcall
pop
push
push
lea
push
call
clc
add
add
add
add
arpl
mov
mov
lret
add
push
push
push
cwtl
add
mov
std
rorl
add
mov
outsl
loopne
jo
ljmp
mov
testb
data16
in
mov
add
loopne
subl
sub
pop
leave
push
dec
pop
ret
push
add
sub
lea
pop
mov
push
push
push
push
call
add
add
add
jnp
lds
add
add
loopne
in
add
xchg
add
cmpsb
pop
stos
pop
add
pop
add
push
loopne
add
mov
add
arpl
add
testl
in
lock
inc
push
shl
add
pop
cmp
jne
push
rol
ror
pop
lea
mov
push
push
push
push
call
out
add
pop
pop
js
add
add
les
add
add
fcompl
std
mov
add
xchg
popl
add
add
rol
pop
fwait
js
lcall
add
test
add
add
pop
add
add
in
sub
pop
test
je
push
push
push
push
call
mov
xchg
mov
sti
add
add
rcrl
mov
std
ljmp
xlat
add
ret
add
add
mov
jmp
add
add
mov
xchg
movsl
fnsave
add
lock
lcall
push
add
push
lea
push
push
push
push
push
lea
push
push
call
pop
add
add
add
add
add
add
push
pusha
scas
mov
jo
ret
add
cltd
xchg
xchg
movsl
add
mov
pushf
add
lcall
loopne
test
call
xor
out
add
arpl
push
lea
push
push
lea
push
call
mov
fldenv
add
icebp
add
fcomps
jns
add
data16
mov
add
push
add
add
add
push
data16
add
mov
mov
lods
sub
pop
mov
push
push
push
lea
push
push
push
call
fisubl
add
jb
xchg
mov
cmpb
icebp
call
repnz
std
loope
push
jbe
add
add
xchg
jecxz
mov
mov
test
je
push
lea
push
push
push
call
pushf
mov
jnp
add
add
lods
push
pop
jnp
mov
add
popa
cli
scas
add
mov
test
add
loope
add
mov
sti
into
cmpsl
leave
imul
loope
add
xchg
add
add
imul
loopne
in
lock
mov
push
inc
pop
add
push
push
push
lea
push
push
push
call
pop
frstor
stos
loope
mov
xchg
lahf
in
add
pop
hlt
add
cltd
add
in
pushf
hlt
xchg
xchg
shrl
test
jne
js
fwait
add
movsw
xor
jno
add
push
iret
add
in
call
cmp
je
push
push
push
call
jecxz
je
add
popf
add
add
xchg
add
xchg
add
mov
add
fyl2x
add
mov
add
add
loop
aad
pop
fs
add
arpl
jo
push
add
add
add
lock
pushf
lcall
sarl
popa
mov
add
add
add
fs
add
sub
pop
jmp
push
add
add
pop
xor
push
sub
shr
inc
inc
pop
pop
push
push
push
push
push
call
mov
mov
mov
add
popa
mov
test
call
scas
mov
add
mov
add
pop
add
cltd
add
stc
add
mov
lcall
push
rol
pop
pop
pop
push
inc
sub
add
pop
leave
ret
push
push
push
push
push
push
lea
push
push
push
call
add
repnz
add
out
imul
nop
push
mov
out
ljmp
add
rolb
xlat
add
fs
add
aad
jge
mov
jo
add
in
fdivr
lcall
inc
call
cmpb
dec
pop
pop
push
push
push
push
call
stos
fdivr
add
sahf
add
add
leave
adcb
jmp
mov
add
pop
stos
out
add
xchg
add
add
add
mov
mov
add
add
add
jnp
int3
pushf
add
sub
pop
pop
push
push
push
push
push
push
call
add
gs
fdivl
cmpsb
jno
jp
ret
mov
pusha
iret
add
add
movb
popf
mov
loop
push
jno
ja
cmpl
add
mov
icebp
add
mov
negb
shl
data16
pushf
mov
in
add
lcall
pop
push
pop
leave
push
push
push
push
push
push
call
lcall
add
ja
rcr
aam
int
rcrl
add
jae
add
push
add
data16
mov
cltd
add
add
add
xchg
ret
mov
push
lea
push
lea
push
push
push
push
lea
push
push
push
push
call
icebp
leavew
fsubrp
lret
add
push
add
loopne
rclb
add
xlat
bound
add
add
in
add
pop
addb
add
mov
lahf
xchg
add
add
fsubrl
pop
std
mov
add
cld
js
add
mov
add
out
in
in
fdivr
lcall
push
push
lea
push
push
push
push
push
push
push
call
jl
xchg
fsub
add
fildl
mov
fisubrs
add
add
fdivrl
add
jnp
stos
jp
add
add
add
pop
pop
push
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
out
rolb
mov
out
mov
shr
addr16
out
imul
pusha
mov
hlt
notl
mov
pop
add
sbbb
mov
sub
pop
pop
push
push
lea
push
push
push
lea
push
push
push
push
call
lahf
data16
add
add
jle
add
jp
add
xchg
push
add
icebp
lret
add
pusha
fildl
mov
add
add
xchg
ret
popf
cwtl
movsl
cmc
xchg
mov
in
add
nop
mov
jns
in
fcompl
push
lea
push
call
push
les
lahf
clc
pop
xchg
cmpsb
add
add
mov
add
outsl
fcmovnu
add
fiadds
loop
pop
pop
jl
popf
add
mov
adcb
addr16
fsts
jo
mov
jo
mov
in
add
jle
mov
add
add
stos
hlt
jle
in
clc
pop
leave
push
ror
sub
add
add
pop
ret
test
jae
aaa
sbb
test
ja
test
jae
sbb
push
pop
xor
jae
test
push
test
push
lods
mov
and
xorb
lahf
mov
and
cmp
or
mov
incl
mov
sbb
loopne
imul
sub
push
mov
xor
and
sub
pop
das
jbe
push
sub
xor
iret
pop
hlt
jnp
adc
jb
mov
testb
jmp
loope
or
aas
outsl
sti
sub
fmul
mov
push
cmp
mov
loope
pop
add
iret
mov
xorl
iret
add
xor
orl
jbe
mov
mov
xchg
inc
sub
cmpsb
fsubr
je
sbb
rolb
push
or
andl
fbstp
cmp
cmp
or
into
outsl
mov
loopne
ror
adc
or
dec
lea
add
fwait
xor
std
ss
and
push
test
sbb
dec
push
mov
cmc
std
jge
cmp
mov
push
mov
out
ljmp
decl
in
movsb
xchg
xchg
pusha
mov
xor
lahf
xor
iret
cmp
and
clc
xor
or
movsb
fcoms
xor
pop
les
test
push
outsl
sbb
fsubl
imul
outsb
lods
inc
xor
dec
outsb
idivl
pop
and
jnp
add
inc
aad
loopne
mov
ret
xor
ror
outsb
cmp
pop
mov
dec
lods
add
les
pop
xor
mov
lret
pop
sub
ret
sahf
stc
movsl
xchg
sbb
or
cmp
stos
jge
adc
pop
mov
into
lahf
movsb
and
xlat
popf
aas
testb
cmpsl
pop
mov
daa
dec
xor
jl
test
fldt
add
pop
sub
ss
rep
pop
mov
test
insb
call
mov
aam
dec
outsl
loope
lret
movsl
pop
mov
stos
fcoms
mov
cltd
push
xchg
imul
mov
and
inc
sub
cmpsl
inc
and
add
xor
ret
dec
aas
cwtl
add
pop
sbb
or
add
stc
outsl
pop
sub
and
or
icebp
rcl
lods
sub
ret
insl
push
xor
iret
jo
or
pop
fsubrs
out
xchg
cwtl
jge
scas
sti
and
addr16
je
lods
push
pop
test
inc
xchg
cmp
jge
loope
cli
iret
jnp
cli
pushf
mov
jle
stc
and
fs
leave
rclb
push
fimull
fbstp
mov
jl
add
inc
rolb
lds
mov
mov
ds
jae
arpl
in
fcmovbe
mov
ficomps
and
cltd
cmpsb
in
add
xor
in
adc
xchg
stos
adc
popa
imulb
stos
in
movl
adcl
mov
adc
mov
adcb
jnp
or
cmpsl
arpl
in
dec
sbb
dec
mov
lret
orb
rclb
mov
cmpsl
notl
test
sbb
movsl
and
cwtl
add
mov
sti
insb
push
es
fstpl
test
scas
add
adc
push
js
and
jne
pusha
ror
mov
movsl
mov
pushl
push
dec
dec
jl
xchg
lret
jl
push
ror
push
test
lock
repz
push
test
dec
sahf
inc
jle
cmp
dec
xor
xchg
xchg
rclb
fdivs
sub
ficoml
fdiv
roll
popf
imul
into
out
add
dec
inc
enter
nop
and
fwait
inc
and
sbb
xchg
or
cmpsb
dec
jo
fneni(8087
jb
sbb
out
imulb
add
rol
mov
rcrb
sbb
cmc
out
out
jle
xor
aaa
cmp
mov
jl
shr
sub
xchg
mull
push
xchg
pop
sbb
lock
dec
in
call
divl
fs
out
dec
or
mov
mov
xchg
shll
push
sti
in
sub
dec
daa
dec
enter
pop
lods
xchg
mov
bound
gs
pop
push
daa
rcll
and
js
add
gs
pop
andl
stos
ficomps
sub
sub
mov
cmpsb
insb
push
push
cwtl
mov
out
outsl
mov
movsl
cmpsb
jmp
adc
cltd
jecxz
inc
dec
mov
lcall
cmp
hlt
push
imul
pop
mov
pop
mov
jg
xorl
outsb
jmp
inc
sar
xor
std
imul
mov
sub
daa
jnp
or
sub
and
daa
leave
inc
pop
add
cmp
hlt
mov
pop
mov
repnz
das
lret
xchg
cmp
scas
xor
fcoml
mov
add
clc
cmp
sub
lock
xor
jbe
data16
pop
jge
into
out
mov
rolb
xlat
clc
rcrl
xor
jle
out
cli
mov
pop
push
add
call
cmp
add
pop
add
jb
repz
pushf
imul
push
push
pop
and
sub
jne
xlat
loope
test
out
out
jg
fsubrl
sete
fstps
subl
sub
lret
mov
mov
test
scas
jle
hlt
dec
in
push
dec
ja
mov
cmpsl
aaa
push
daa
ret
or
dec
jge
int3
pushf
pop
push
and
mov
push
loopne
and
mov
daa
popa
roll
stos
dec
push
xchg
and
movsb
enter
adc
adc
mov
test
stos
push
scas
rorb
cmp
push
lods
pop
jbe
jno
jge
idiv
popf
xchg
imul
in
insb
lret
push
in
clc
ss
xchg
cmpb
mov
inc
shl
xchg
ss
ja,pt
out
pop
and
js
lahf
shlb
repnz
sub
mov
mov
lret
stos
sbb
mov
fxtract
cmp
dec
push
rcr
push
jns
jp
outsl
stos
sbb
int
and
xchg
dec
aas
sub
mov
out
aad
and
push
pushf
movsb
lea
cli
push
cmp
mov
cmp
and
out
inc
daa
pop
jecxz
rcll
and
mov
je
adc
mull
mov
sahf
in
loope
repz
shl
rcl
inc
pop
stc
push
lret
inc
stc
inc
sub
xchg
cmp
decl
test
mov
push
xor
icebp
sbb
sbb
imull
stos
out
mov
lret
lds
jns
cmp
je
jae
push
add
dec
test
mov
dec
gs
mov
sbb
pop
int
or
cs
movsl
jae
arpl
sbb
orl
inc
les
xor
subl
cmc
jnp
test
pop
aaa
into
stos
or
sbb
mov
sbb
pop
test
aad
xchg
sbb
sti
mov
nop
xchg
lahf
or
insl
dec
and
fdivs
ljmp
leave
in
adc
xor
push
and
dec
dec
js
inc
dec
imul
add
shll
push
aad
das
icebp
dec
push
cld
xchg
lret
mov
in
enter
mov
test
lds
lds
xor
int3
jnp
sbb
pop
inc
pop
mov
cmp
shll
mov
movsb
xor
out
out
ss
xor
dec
dec
mov
std
imul
stc
jb
jnp
or
repz
xchg
and
pop
xchg
push
scas
sub
mov
xor
lock
dec
lahf
cmp
inc
sbb
shll
outsb
cmp
pop
and
loop
data16
std
cli
rorb
push
or
push
mov
xor
ret
mov
xchg
xchg
stos
test
cmpl
int
mov
stos
ret
into
fstpt
sbb
cmp
repnz
inc
mov
nop
ss
jp
test
xor
pop
decl
jo
inc
jp
lret
mov
movsl
repz
pop
aaa
cmpsl
mov
dec
dec
inc
sub
dec
addr16
out
enter
push
xchg
dec
push
popf
ret
mov
cltd
xchg
and
jns
out
pop
or
pop
popa
sbb
xor
popa
lcall
das
mov
int
rcrb
add
lahf
lahf
lcall
lods
cmpl
pop
scas
jne
push
mov
fidivrs
js
fwait
int3
jl
sbb
icebp
outsl
push
mov
dec
sub
adc
sub
add
or
dec
dec
inc
xorl
es
outsl
cltd
out
or
or
jbe
jne
xchg
andl
bnd
lods
inc
fldl
hlt
ret
ds
int3
cs
push
fs
sbb
mov
lret
cmc
in
adc
xchg
test
pusha
push
mov
jnp
out
popa
pop
pop
cmp
mov
aaa
lods
stos
add
addr16
mov
lods
arpl
sbb
out
ss
aaa
js
xchg
int
add
sub
push
push
xchg
scas
adc
in
mov
pop
mov
mov
push
out
sbbb
mov
nop
mov
push
mov
aam
jo
ficompl
xchg
stos
icebp
sub
lea
lea
scas
sahf
sub
dec
sub
push
cld
sbb
fsubl
ret
sub
js
pushf
dec
dec
incb
lock
lea
xchg
nop
idivl
or
iret
ja
cli
sbbb
adc
clc
xor
adc
nop
in
sub
ret
lods
and
push
xor
jae
enter
ret
push
enter
mov
inc
xorl
lods
or
sahf
pushl
mov
adc
sub
dec
adc
cs
inc
cmp
sbb
js,pn
jmp
cmp
test
cmp
jle
fdivrs
dec
mov
or
mov
or
inc
cmp
cmc
mov
xchg
add
inc
aam
mov
sarl
sbb
gs
pop
loopne
pop
inc
push
jp
int3
insl
pusha
enter
into
xchg
int3
popf
testl
add
adc
adc
mov
cmp
lds
mov
fcoms
push
cmpsl
pop
je
push
test
and
inc
fsubrl
or
scas
mov
les
mov
mov
and
cmp
out
add
out
test
ret
cmp
scas
popa
or
xchg
shlb
mov
fisubs
rcrl
std
mov
mov
adc
xor
scas
mov
xor
hlt
pusha
inc
int
dec
jae
fwait
add
addr16
or
push
lret
aaa
mov
std
cltd
or
mov
pushw
hlt
outsl
push
push
daa
pop
sbb
dec
call
lds
mov
mov
fwait
idivb
iret
ljmp
inc
ds
out
insb
dec
xchg
inc
adc
arpl
sbb
jae
adc
and
shrl
push
fcompl
mov
leave
cltd
xchg
mov
adc
rcrb
inc
fs
in
xchg
addr16
jl
push
pop
lods
pop
cmpsl
add
rcrl
dec
and
cmpsb
nop
jecxz
mov
dec
xor
jae
cmpsl
xor
fistpll
mov
pushf
or
popa
xchg
push
and
pop
pop
push
dec
sbb
lahf
cmc
push
out
lcall
jge
loope
mov
jmp
out
mov
dec
paddd
aam
or
repnz
mov
movsb
lock
mov
sub
jo
jecxz
fndisi(8087
adc
inc
rclb
aas
enter
loopne
sub
dec
jnp
push
cwtl
inc
fadds
sub
inc
pop
mov
jle
rcrl
sbb
xor
enter
int
xchg
clc
inc
fsubs
mov
adc
sahf
ficoms
mov
ret
enter
icebp
jns
ljmp
cmp
push
mov
out
inc
jmp
or
shl
mov
adc
push
nop
xchg
jbe
xor
xchg
imull
xchg
scas
dec
or
ret
mov
add
fildll
out
rcr
lds
or
es
bound
das
popf
bound
loope
negb
arpl
ljmp
rorb
cmpl
fstp
adc
popa
xor
fwait
cli
aaa
pop
out
pop
mov
test
and
scas
sub
jne
jecxz
enter
dec
lods
xchg
mov
addps
xchg
xchg
pushf
or
pop
test
jo
insb
std
ljmp
push
fwait
clc
mov
jp
xchg
push
sbb
popa
jle
loop
push
and
or
push
int3
xor
sub
pop
jne
ret
inc
call
push
push
addr16
or
xchg
push
mov
aam
xor
or
jnp
sub
cmp
mov
lock
push
pop
repz
fisttps
and
in
fbstp
and
pop
lret
or
add
sub
mov
ss
mov
mov
dec
int3
orl
push
jae
cmp
jns
cmp
lret
outsb
in
or
mov
mov
loop
aam
sbb
popf
mov
xchg
sbb
loope
lods
aas
push
loopne
add
sub
out
add
mov
shrb
and
loop
adc
je
push
inc
and
cmc
cli
not
jp
mov
mov
jg
xor
push
out
stos
xchg
into
call
xor
xor
pop
fisubl
dec
sub
mov
push
adc
sahf
loopne
loopne
daa
cs
clc
jnp
cmpsl
pop
orl
lahf
adc
sub
fnsave
mov
cmp
push
jo
dec
sbb
xchg
mov
mov
loop
cmp
xlat
inc
ror
xor
lcall
hlt
pusha
out
push
je
loope
hlt
inc
ds
pop
xchg
sub
and
push
outsb
mov
ljmp
jmp
adc
and
lret
pop
xchg
into
pop
pushf
pop
ds
lcall
xchg
clc
outsl
ja
pop
in
ss
cmp
xchg
out
ljmp
insb
sti
enter
testb
insl
sub
fisttpll
xchg
pop
mov
repz
cld
fiaddl
jmp
fdivr
xchg
cmp
js
repz
imul
add
inc
push
dec
xlat
aaa
pop
je
cmp
mov
out
sub
stos
cmp
fmul
add
jg
orb
inc
or
data16
lods
std
fidivl
mov
sbb
and
outsb
lcall
or
mov
push
push
add
int
cmpsl
mov
je
fisubs
adc
push
das
cltd
mov
sti
mov
or
xor
fistpl
pushf
pop
dec
cltd
or
mov
xor
cmp
mov
push
sbb
push
data16
test
mov
pop
adc
andl
lret
lods
inc
dec
jmp
aad
xchg
in
add
mov
xchg
xchg
pusha
int
in
mov
mov
mov
pop
add
or
imul
pop
pop
push
or
mov
fdivs
fdivrl
pop
pop
cmpsl
les
faddl
negb
int3
add
xchg
pop
jns
outsl
fimuls
sub
ds
jp
inc
fsubs
xlat
cmc
stos
add
xlat
dec
jg
pop
pop
mov
pusha
sbb
jl
test
jns
frstor
push
jmp
sbb
and
sbb
cmc
testl
movsl
stos
into
cmpsb
mov
xor
loop
fsts
mov
or
minps
mov
cmp
pop
or
push
mov
push
leave
in
loope
std
lock
nop
mov
sbb
sbb
mov
xchg
and
pusha
adc
shll
je
addr16
add
cli
pushf
jge
dec
popa
or
add
mov
xchg
mov
cwtl
iret
movsl
aad
loopne
or
sbb
lcall
push
popa
fcomps
bnd
sbb
xor
loope
mov
das
push
sbb
push
mov
add
sub
add
mov
xlat
ret
push
aas
cwtl
pop
mov
jmp
pop
mov
in
lock
push
scas
in
push
push
sbb
leave
nop
and
cmc
pop
jecxz
jl
inc
push
jno
mov
push
aaa
mov
add
jno
sbb
test
xchg
inc
jg
nop
xor
add
xchg
test
jecxz
test
sbb
push
popf
jnp
loope
xchg
loop
add
aam
out
jb
cmc
outsl
jg
lret
jg
jns
stc
mov
jl
movsl
mov
dec
ja
push
xor
mov
notb
jl
cwtl
cmpsl
loop
push
std
aam
xor
pop
js
cmp
jb
lret
xor
adc
pop
ret
add
dec
hlt
lcall
add
sub
sub
out
xor
mov
pop
repz
aad
in
mov
sub
push
fistps
sub
lock
pop
or
push
pop
add
xor
scas
in
adc
add
sub
jo
sub
addr16
rcl
insb
or
subb
fxch
cmp
mov
filds
imul
mov
cmp
mov
inc
dec
mov
jae
sti
loop
lret
les
or
add
je
jecxz
jae
clc
fs
pop
mov
pop
cli
rcrb
ss
js
dec
and
movsl
pusha
sbb
mov
mov
cs
clc
aad
mov
outsl
ret
mov
ss
cli
lcall
insb
lds
cmp
or
mov
daa
cmp
icebp
inc
jns
lret
push
push
inc
push
lock
fsts
popf
inc
sbb
xor
jae
lods
sbbb
or
aam
jmp
jae
mov
add
aaa
xlat
cmp
out
jns
lods
sub
pop
fbstp
inc
mov
dec
add
cmc
and
pop
bound
sbb
shlb
aad
mov
adc
pop
addr16
or
mov
bound
inc
test
fdivrs
sub
mov
jle
movsl
jg
bound
xor
dec
aam
call
bound
mov
xor
push
cmc
mov
jp
inc
ficoms
push
xchg
or
andb
adc
daa
add
push
mulb
and
stos
xor
xchg
push
ror
aaa
add
pop
mov
xchg
mov
cmp
lea
xor
xor
jp
insl
in
pop
or
outsw
js
call
scas
jbe
repz
pop
pop
repz
xsave
pop
mov
push
test
jecxz
and
sar
sub
xor
mov
mov
jge
xorl
data16
cmp
out
pop
jbe
push
push
push
das
pop
jne
mov
inc
xchg
jl
nop
out
xor
fsubs
mov
mov
mov
into
lahf
and
mov
sub
cli
pop
xchg
pop
pushf
movsb
jmp
pop
arpl
mov
notb
sub
repnz
jns
notl
jl
cmp
aaa
mov
lods
sub
pop
dec
lods
pop
jno
lods
stos
or
xchg
mov
ret
ljmp
xorb
leave
in
nop
cwtl
add
mov
xor
xchg
xchg
je
dec
rcrl
mov
pushf
xchg
add
in
xor
mov
stos
or
flds
test
mov
out
dec
jge
and
lods
call
mov
popa
cli
fistps
push
sbb
sbb
adc
sbb
out
mov
lea
ja
adc
pusha
stc
jae
fnstenv
mov
inc
rolb
fistps
iret
lret
or
mov
or
pop
scas
in
mov
movsb
xlat
xchg
mov
aaa
fldcw
push
enter
fs
pop
dec
ja
add
xor
fisubrs
ret
xchg
and
add
clc
add
test
insb
aas
pop
add
jb
inc
cmp
jbe
and
push
push
nop
gs
fisttps
out
adc
dec
sbb
dec
in
inc
icebp
add
adc
or
cltd
dec
pop
dec
cmp
mov
cmpsl
outsl
cwtl
jmp
mov
repz
pop
ja
cli
and
shlb
cltd
sub
mov
add
call
mov
inc
mov
mov
divl
and
insb
adc
dec
adcl
inc
pop
cmp
push
fs
outsl
in
rcll
dec
dec
push
das
mov
bound
cld
mov
push
add
sbb
mov
and
dec
shlb
push
div
sub
cmpsl
cltd
clflush
and
sbb
push
popa
bound
sarb
popf
sub
mov
incb
add
loop
lods
mov
pop
cwtl
pop
adc
subl
mov
stos
rorb
int3
jmp
cmp
push
jle
sbb
pop
pop
pop
mov
outsb
and
and
inc
je
dec
aam
dec
pop
mov
out
lods
jne
test
test
lods
or
push
cvtdq2ps
test
xchg
mov
add
push
dec
es
pop
lea
jmp
pop
lret
hlt
testb
aad
xor
xchg
out
sti
jmp
in
sbb
add
das
dec
std
popf
cs
loop
std
push
fdiv
dec
or
clc
insl
mov
push
xchg
arpl
xchg
jns
test
xchg
jle
dec
imul
sub
mov
mov
xor
jmp
mov
or
cmc
sub
out
dec
add
mov
js
xor
aaa
sub
and
mov
int3
jp
ret
lods
aas
aad
pop
push
adcl
mov
popa
mov
mov
int3
movsl
jle
and
lret
sbbl
faddp
lock
aas
bound
jne
ficoml
adc
adc
inc
xor
inc
outsb
repz
pop
mov
inc
mov
mov
stc
movsl
pop
mov
pop
push
lea
movzwl
pop
pop
pop
iret
lret
mov
int
movsl
xor
out
lret
pop
clc
add
push
cs
xor
add
mov
out
pop
cmpsb
dec
jbe
decl
int3
mov
or
int
pop
xchg
lds
ficomps
call
jb
jp
xchg
inc
cli
out
stos
xchg
push
xor
repnz
into
and
or
mov
sub
stc
scas
add
push
loopne
ja
add
rcl
std
xor
add
dec
ret
sub
imul
fdivrs
inc
fsts
inc
sub
icebp
popf
das
push
push
xor
cmc
stc
xchg
imul
xchg
ret
xchg
in
mov
push
add
cmp
or
sub
inc
lea
xchg
xchg
jo
scas
pushf
mov
stos
mov
lret
fistpll
dec
lds
bound
int3
scas
int3
xchg
or
das
hlt
dec
xchg
shll
or
sub
sub
xchg
popf
je
xchg
bound
fstl
ret
push
mov
mov
cwtl
pop
repnz
mov
cwtl
add
inc
xchg
ret
fisubrs
cmpsl
and
test
dec
out
fstpt
das
sub
lods
mov
inc
mov
int
sub
lds
cmpsl
inc
and
sub
imul
pop
mov
add
dec
rorl
mov
push
xor
mov
data16
xchg
faddl
repz
jecxz
loopne
mov
mov
pusha
dec
testl
cmp
in
aaa
mov
jns
mov
xchg
mov
rcr
movl
pusha
jge
mov
lret
mov
aas
mov
enter
nop
xchg
jle
popa
cmp
ja
loop
cmpsl
fisttps
xchg
push
or
mov
add
sbb
push
sub
cmp
fbstp
sahf
lcall
jnp
cmp
pop
push
ret
outsb
mov
std
push
push
outsb
push
into
pop
shll
sti
jae
fidivrl
pop
add
movsb
pushf
mov
push
ja
mov
test
fdivl
push
sbb
pop
mov
cld
jb
fcmovnbe
push
sbb
mov
aas
gs
frndint
ljmp
jl
int3
out
sbb
and
xor
or
xor
es
inc
aaa
or
arpl
inc
xchg
clc
mov
sbb
lods
sbb
push
popa
cli
adc
movsl
sub
inc
jecxz
pop
pop
movsl
test
sub
pop
mov
mov
loope
jge
xchg
push
mov
lret
xchg
dec
fidivs
out
lock
rorl
mov
mov
ss
adc
mov
out
mov
lods
and
nop
test
call
xor
cmp
cmp
ljmp
ds
imul
stc
and
enter
inc
ret
int3
xor
das
pusha
mov
fwait
mov
cmp
sbbl
sub
push
roll
fistpl
xchg
imul
inc
add
mov
pop
leave
imull
mov
pop
jbe
pop
xor
inc
je
sub
inc
loopne
mov
repz
aas
divl
cmp
or
mov
inc
lcall
popf
rcll
loopne
scas
add
dec
stos
ds
sub
mov
xor
cmp
loopne
cmpsb
xchg
sbb
jae
pop
mov
pavgw
mov
jg
jge
mov
pop
add
testb
pop
lret
inc
cmp
scas
cli
scas
mov
cmp
decl
sbb
xchg
shll
xor
push
aaa
test
bound
cwtl
into
xlat
or
loope
xor
sub
scas
sub
jle
jmp
dec
outsb
push
mov
push
inc
dec
mov
add
sbb
jg
pop
mov
push
xchg
inc
sub
jle
hlt
push
fs
imul
sbb
sbb
ss
cmpb
push
push
xchg
sub
std
sbb
add
mov
mov
mov
out
jb
pop
adc
add
sti
jae
cmc
jg
loope
arpl
cwtl
out
inc
add
into
add
xlat
lods
push
xorb
xchg
pop
pop
add
push
and
iret
insb
addr16
jns
imul
jecxz
add
inc
mov
pop
pop
sub
jmp
xchg
hlt
bound
mov
ficompl
dec
ja
xor
xchg
test
adc
or
in
push
xchg
mov
jg
and
mov
ljmp
dec
inc
sbb
loop
push
or
xchg
adc
arpl
ds
test
icebp
dec
push
mov
jge
xchg
cmc
rcrl
mov
fcoml
dec
xchg
sub
jp
test
inc
push
sbb
scas
mov
pop
test
dec
int3
xchg
dec
jnp
test
xlat
pop
sbb
fcmovbe
mov
adc
xor
sbb
jmp
jecxz
jp
adc
test
jmp
pop
mov
and
jl
pop
push
mov
mull
rcl
xchg
cs
jno
xchg
ljmp
xor
xlat
or
hlt
mov
pop
or
pop
sbb
jo
hlt
inc
out
adc
push
shrb
sahf
xor
cmovp
cmc
imul
inc
out
push
sbb
pop
pop
inc
pop
add
mov
xchg
iret
into
sbb
cmp
aas
pop
mov
call
pop
sbb
and
cmpb
jo
and
outsb
test
jne
inc
lods
ja
popf
pop
xchg
stc
xbegin
pop
jecxz
pop
fsubp
adc
cltd
imul
outsb
push
lds
cmc
into
jecxz
inc
dec
gs
adc
mov
inc
inc
adc
iret
dec
jmp
dec
xchg
jg
fdivp
ficoml
adc
sti
jb
pop
lret
mov
aam
or
sub
sub
mov
lods
ja
ljmp
arpl
aas
ret
jns
clc
mov
fistpll
in
push
ljmp
dec
xchg
stos
dec
loop
or
lock
cmpsl
ds
aaa
inc
dec
leave
cmpsb
jge
xchg
adc
pop
stc
mov
in
mov
sub
xor
outsl
loope
aaa
dec
subb
enter
ja
ja
adc
pusha
or
cli
mov
push
addr16
cmp
notb
and
sub
rcrb
ret
in
push
cmc
mov
mov
dec
inc
cli
imul
sub
insb
fidivrs
dec
dec
enter
stos
add
cmp
subb
adc
ja
jmp
cmp
aas
mov
icebp
inc
push
test
cwtl
fsub
out
dec
aaa
mov
xor
and
cld
xor
addl
cmp
lret
dec
lock
sahf
mov
addb
pop
testl
sbb
sbb
jne
pushf
data16
jbe
jnp
xchg
lods
les
mov
push
mov
xor
in
scas
mov
or
and
sahf
mov
nop
inc
inc
pop
push
in
in
cltd
sti
mov
cli
mov
fdivs
adc
bound
sub
aas
cmp
xor
push
jl
out
push
jge
movsb
sbb
xor
push
mov
xor
lret
fsubs
pop
ficomps
fwait
adc
dec
fdivr
mov
fcmovnbe
testb
or
cld
addr16
cmp
lock
inc
loopne
dec
call
adc
scas
rclb
xor
pop
mov
popa
je
js
sti
xchg
sub
mov
iret
add
mov
pop
xorl
pop
jbe
or
imul
pop
sub
imulb
mov
jle
mov
outsl
and
pusha
add
push
push
in
stos
or
cmp
popa
icebp
xchg
outsl
aad
pop
adc
jle
jbe
mov
rcrb
pause
mov
mov
fsubrp
xor
movsb
xor
xlat
push
in
pushf
fcmovnb
or
mov
add
or
dec
sub
pop
outsl
rclb
outsl
rcrb
mov
sub
adc
call
imul
mov
jae
or
stos
les
cli
xor
insl
xlat
cmp
cwtl
pusha
shll
pop
sub
gs
decl
leave
pop
adc
mov
int
cmp
mov
mov
notl
cmp
jge
xchg
mov
xorb
xchg
dec
mov
xor
or
ret
pop
cmp
lret
mov
dec
jmp
mov
cli
mov
andl
or
shrb
lods
cwtl
jne
cmpsb
adc
sub
dec
cmp
jmp
dec
inc
jmp
movsb
sub
js
insl
enter
out
mov
scas
sbb
mov
lds
sub
shll
test
xchg
aas
mov
ret
aam
dec
push
ret
inc
ret
cs
loopne
add
jnp
std
out
daa
daa
lods
std
mov
push
pushf
ret
dec
out
cmpsb
sbbb
pop
mov
mov
jb
jge
addr16
inc
dec
fmul
mov
es
adc
roll
fcoml
adc
add
repnz
add
add
adc
or
sbb
fwait
dec
adc
insl
not
pop
xor
das
pop
ljmp
dec
mov
add
sbb
mov
xor
add
popa
adc
lret
test
test
and
sub
or
jnp
or
or
push
jbe
in
xchg
sbb
nop
xor
mov
sarl
bound
outsl
push
sar
mov
movsl
jne
pop
sub
xchg
adcb
xchg
cmpsb
jmp
add
vshufps
xchg
jae
mov
xchg
jne
jge
dec
lea
lods
dec
in
mov
jb
add
inc
jne
pop
jl
lahf
scas
mov
inc
pop
popw
shlb
test
add
lods
adc
fldcw
mov
and
and
stos
iret
mov
sub
int
jbe
mov
rorl
xchg
je
dec
aad
dec
sbb
jnp
and
stos
sbb
test
cmp
in
pop
test
sub
call
xor
and
test
cld
mov
dec
dec
dec
push
sbb
outsl
sahf
add
das
shl
call
push
push
mov
dec
sbb
call
xchg
jmp
and
inc
stc
cmp
adc
or
mov
popa
bound
les
cmp
cli
addr16
ja
or
inc
mov
adc
and
in
sub
cmp
and
stos
shl
xchg
mov
lret
inc
shrl
int3
cmp
cld
push
pop
jecxz
xchg
push
outsb
cwtl
pop
pop
imul
bound
test
imul
fs
imul
loope
sub
jecxz
mov
js
out
aas
movsl
jp
and
sbb
sbb
movsl
mov
fstps
outsl
scas
rorl
dec
mov
es
cmp
sbb
jns
jle
rcrl
dec
sub
inc
or
test
insb
lcall
lods
mov
jo
out
fcmove
adc
push
mov
sbb
xchg
stos
cli
repz
popf
test
cli
dec
aad
add
jg
fistps
push
subl
aad
cmpsb
xor
cmp
push
popa
mov
push
xchg
inc
push
hlt
jbe
aad
mov
push
ficoms
xlat
mov
jne
push
mov
scas
xchg
out
psrad
cmpsb
inc
add
andb
pusha
push
outsl
inc
sbb
out
in
loopne
in
lds
jg
mov
ja
mov
aaa
roll
outsl
popa
sub
cltd
sub
cmp
mov
jge
imul
sbb
and
shll
and
ret
cltd
adc
push
dec
xor
loope
mov
jmp
mov
mov
int
mov
or
fs
ret
adc
ss
cli
lds
dec
push
mov
cmp
jns
test
mov
rcr
push
rcll
mov
lock
mov
fdivs
pushf
fsincos
notb
movsl
pushf
inc
sbb
mov
jbe
mov
cltd
mov
in
sub
dec
or
aam
xchg
push
push
sub
add
jle
call
ret
aad
pop
arpl
inc
xchg
push
hlt
pop
repnz
lahf
out
pop
insl
pop
lods
ds
ficomps
or
mov
in
inc
data16
pop
mov
or
mov
push
mov
jo,pn
or
call
xchg
leave
enter
stos
adc
jg
push
mov
sub
and
idivb
mov
and
call
test
paddusb
sbbb
mov
sbb
fwait
ljmp
mov
out
mov
sbb
sahf
adc
mov
lea
mov
mov
loop
dec
sub
xchg
cmpsb
bound
mov
cmp
fisubrs
arpl
movsb
dec
popa
adc
stc
pop
leave
jmp
ds
sub
mov
mov
out
out
out
loop
movsl
sbb
cmp
mov
lret
mov
add
orb
pop
jl
or
sub
dec
into
and
jne
push
xchg
cltd
stc
jnp
and
push
mov
sbb
das
insl
loopne
sub
and
or
jle
lea
sahf
push
adc
bound
data16
in
ja
imul
sarb
push
ficomps
dec
jmp
test
inc
dec
push
lret
add
mov
push
jl
lret
cmp
inc
lret
pop
mov
out
inc
jge
call
outsl
add
add
pop
xor
jnp
adc
insb
push
sbb
or
in
imul
sbb
and
es
mov
jmp
push
rcr
xor
pop
jne
leave
mov
sbb
rol
sub
enter
jle
pop
lds
in
add
xchg
test
js
lock
fcmovne
inc
adc
sub
fs
inc
rorb
imul
mov
mov
jbe
jbe
inc
mov
push
shl
rclb
std
lret
iret
mov
ss
es
mov
dec
cltd
dec
lds
mov
mov
mov
aaa
movsl
pop
sub
mov
xchg
mov
adc
ja
enter
leave
jmp
inc
xor
pop
mov
in
addl
push
xor
dec
mov
fs
adc
cmpsb
neg
inc
push
fimuls
sbb
push
bound
stos
in
imul
sub
jmp
in
xor
sbb
push
mov
andl
stos
mov
ret
and
popa
call
and
xchg
xor
mov
dec
fdivp
dec
popa
ret
xchg
cmovae
push
filds
sbb
jp
or
and
mov
cmpb
test
mov
mov
imul
mov
fneni(8087
rcrl
rolb
lods
xchg
fsubrs
add
sbb
popf
cmp
mov
pop
out
or
push
dec
sbb
xchg
ljmp
iret
out
shll
mov
loop
jb
dec
in
test
mov
loop
lea
push
mov
xchg
fstl
sub
std
ja
push
test
ret
or
or
dec
xchg
add
call
jmp
sbb
lret
mov
pop
lahf
add
cmp
xchg
jge
jg
xor
daa
jb
into
imul
fdiv
push
lock
xor
aam
movsb
aam
faddp
and
and
jnp
popf
jno
pushl
inc
aaa
jecxz
test
int
loopnew
sub
mov
sbb
jbe
mov
inc
xlat
and
pushf
push
push
lret
out
shll
mov
add
and
sti
cltd
out
imul
xchg
or
cwtl
xor
or
iret
aad
hlt
insb
sub
clc
mov
push
jl
xor
arpl
cwtl
addr16
fisubrs
jne
or
cmp
xchg
sbb
push
loope
pop
popa
lret
out
or
fs
jle
ret
mov
and
add
sahf
cmp
mov
and
add
push
pop
mov
cmp
xchg
movsl
rcrl
loopne
shll
push
adc
mov
or
push
jmp
out
inc
pop
in
mov
rclb
push
add
xchg
test
xchg
jle
in
je
insb
test
xchg
push
movsb
push
cmp
aad
js
mov
push
xchg
int
cwtl
mov
mov
jle
adc
aaa
out
adc
in
out
pop
sub
pop
xchg
sbb
mov
or
icebp
xchg
test
ror
push
push
add
xor
xchg
mov
push
dec
add
insb
out
xchg
iret
sbb
in
or
lahf
pop
sbb
je
jb
fs
sbb
jne
fimuls
xchg
lods
fidivrl
fldt
jp
fsubr
xor
xor
cmp
lds
xchg
cld
pop
mov
lods
mov
call
cmp
jbe
mov
dec
jmp
adc
mov
insb
pop
xchg
mov
fiadds
cmp
cwtl
push
out
and
lds
rcrb
test
subb
push
pop
test
jbe
xor
push
jmp
adc
icebp
sbb
fstp
mov
inc
dec
lcall
lahf
push
stos
xchg
jge
insl
xchg
fildll
push
adcl
or
push
out
jle
xor
imul
mov
xor
push
fbstp
or
neg
mov
in
ror
cli
fiaddl
jb
or
mov
pop
push
lods
js
fcmovnb
movsl
mov
pop
movsl
lret
inc
push
cli
jecxz
xchg
mov
or
pusha
mov
test
cmpb
adc
push
mov
int
js
and
loopne
sub
sbb
test
bound
xor
mov
push
adcl
lods
and
inc
into
test
sub
mov
xor
sbb
int
pop
mov
sub
shll
nop
icebp
pop
inc
mov
push
mov
outsl
or
mov
pop
adc
push
jle
pushf
sahf
pushf
sub
inc
lcall
lahf
xchg
jp
rorb
test
fwait
shrl
fs
xor
push
repz
lods
std
inc
lea
es
or
test
into
das
insl
sarb
inc
fs
adc
dec
push
push
mov
mov
xlat
sbb
dec
push
sub
pop
icebp
aaa
pop
ret
imul
rcr
hlt
xor
push
imul
imul
fbld
cs
sub
inc
inc
push
fisubrl
inc
and
movsb
push
mov
repnz
mov
scas
nop
stos
rorb
in
loopne
or
sub
shlb
pop
pop
pop
aaa
push
mov
sbb
jo
pop
stos
in
cwtl
fldl2e
cltd
mov
sbb
sahf
mov
cltd
mov
je
mov
std
jl
jo
push
movsl
lret
inc
mov
cld
ret
in
jns
lret
xlat
mov
jmp
xchg
outsl
arpl
leave
sbbb
ret
or
mov
repnz
ja
pop
aam
cltd
inc
in
movsl
xor
les
movsb
adc
push
lret
jp
sub
ja
iret
jmp
hlt
and
xchg
mov
sbb
mov
push
aaa
push
dec
test
cmpsb
mov
sbb
test
sbb
adc
out
push
mov
inc
cmp
stos
inc
or
jg
daa
cltd
mov
aaa
push
leave
inc
int3
push
xchg
inc
push
jle
sti
jmp
jg
ret
jo
shll
adc
mov
mov
stos
xor
pop
cmp
in
in
ror
lea
lret
inc
lods
xor
and
mov
jge
add
aam
imul
pop
mov
addl
clc
adc
or
push
adc
cld
mov
jno
scas
cmp
and
pop
cmp
imul
mov
ljmp
push
fsubl
sbb
mov
out
push
jmp
lahf
push
fbstp
into
sub
out
shrd
jno
and
mov
aam
jle
jmp
mov
sbbb
in
lods
sub
cli
push
mov
aas
mov
arpl
divb
push
in
mov
or
ret
and
jo
jg
mov
xchg
insb
inc
mov
loope
jle
or
add
adc
xchg
ds
cmpsb
stos
mov
enter
and
and
jecxz
xchg
mov
push
and
bound
pushf
jne
cwtl
mov
lcall
mov
aam
lods
iret
sub
repz
jnp
sbb
stc
inc
loope
in
sbb
in
mov
push
mov
lcall
call
fldt
sub
aaa
add
jecxz
jle
sbb
out
or
mov
inc
insl
add
iret
jl
mov
xchg
dec
cmpsb
cmp
xor
push
mov
into
mov
pushf
fidivs
sbb
cmpb
ja
aam
mov
jecxz
cmc
cmp
dec
pop
add
xor
fs
pop
lret
cli
pop
sbb
test
idivl
bound
push
bound
push
push
imul
xchg
inc
mov
leave
daa
dec
mov
dec
xchg
adc
aas
sub
incl
mov
sbb
scas
sbb
scas
cmp
push
xor
repnz
decl
pop
mov
jae
lret
cmp
pop
rol
mov
fsubrl
ds
aas
pop
mov
sub
adc
gs
in
mov
cmp
pop
xchg
jne
int
push
imul
inc
xor
adc
pop
mov
cltd
mov
dec
push
sar
fildll
rolb
jmp
push
cmpsl
push
pushf
bnd
movups
add
mov
or
dec
fmull
ret
jl
sahf
pop
jmp
pop
divb
dec
scas
lock
cmp
xor
push
pop
lds
lret
aaa
mov
xchg
insb
push
push
xlat
sahf
loopne
lcall
movsb
jns
insl
mov
push
mov
add
inc
ja
in
mov
adc
mov
subl
not
mov
xlat
sti
shlb
jbe
cmpsl
test
push
jp
pop
ja
inc
movsl
es
pop
popf
lock
clc
lret
add
push
xorl
push
inc
cmp
adc
xchg
lock
pop
inc
out
adc
sub
andb
leave
add
hlt
dec
mov
mov
cld
cs
cmp
push
or
mov
cmpsb
loopne
push
jo
test
xchg
push
hlt
adc
jg
or
xchg
xchg
js
xchg
iret
mov
cld
cmp
cld
adc
mov
xor
test
and
leave
nop
fisubrs
jmp
leave
popf
imul
push
int
and
push
xchg
stc
push
cmp
jecxz
xor
push
mov
xor
mov
pusha
inc
cmp
add
idivl
sarb
mov
xor
inc
adc
mov
push
fmull
adc
mov
xorb
mov
mov
xchg
xor
shl
jnp
xor
pop
cs
or
xchg
daa
pop
lods
cmp
stos
mov
mov
fidivrs
mov
mov
roll
hlt
xchg
in
ljmp
mov
push
pushf
mov
jb
xlat
cmp
cmp
clc
push
loope
clc
jne
jb
testb
adc
mov
add
mov
arpl
js
outsl
push
inc
xor
popa
cmp
push
lret
das
and
fsubrl
and
sub
mov
dec
int
dec
and
xor
test
ficoms
daa
and
add
sarb
test
popa
inc
ss
sub
mov
pusha
mov
xchg
lret
jo
mov
push
arpl
in
cld
mov
outsl
in
out
in
push
xchg
arpl
sbb
in
stos
adc
mov
add
pop
into
out
pop
or
addr16
mov
pushf
adc
stos
fstpt
in
dec
cs
cwtl
rcl
sarl
cmp
mov
and
fsubrs
ja
jns
imul
adc
es
xchg
push
aas
jle
inc
and
pop
lret
jns
or
mov
sbb
add
cmp
pop
scas
insb
lret
imul
mov
ja
cmpsb
inc
xorb
and
mov
push
pushf
adc
mov
or
sbbb
sbb
push
jne
push
dec
and
lods
leave
cltd
adc
iret
inc
js
prefetch
xchg
adc
push
out
sub
jns
add
and
cmpsb
inc
popa
jg
js
or
clc
xchg
adc
pop
outsl
int3
xchg
into
orl
in
jle
aad
ret
pushf
sti
dec
nop
test
enter
pop
add
sbb
test
push
stc
mov
fcomps
loopne
jmp
dec
sbb
sub
and
xchg
test
es
xor
mov
pop
dec
fwait
and
cmp
add
cmp
movsb
cmc
leave
mov
mov
adc
out
in
iret
xchg
cmc
mov
mov
lahf
scas
jb
or
sub
cmp
sub
dec
repnz
mov
push
or
inc
icebp
je
cmp
and
sub
inc
mov
hlt
aam
sub
outsb
or
fiaddl
mov
xchg
js
and
rclb
mov
sub
fisubs
idivb
xchg
lcall
fldenv
hlt
ja
jl
mov
inc
and
lods
and
add
jmp
fdivr
mov
nop
pusha
loopne
loop
or
add
inc
movsb
mov
stc
push
sbb
sbbb
lret
ljmp
out
movl
xor
daa
xor
jle
pop
mov
adc
xor
sub
sub
xchg
cwtl
mov
sub
test
cmpsb
pusha
or
cmpsl
mov
pop
in
and
pushl
lahf
or
loop
lods
inc
add
push
cmpsl
inc
test
fiadds
sbb
aas
or
ret
scas
into
hlt
loopne
out
push
sahf
hlt
lcall
adc
cmc
fs
test
out
dec
stc
fsubrs
loopne
lcall
xor
inc
aad
lds
addr16
fcmovnbe
sub
xchg
push
ja
mov
iret
into
push
rcr
or
add
mov
outsb
sub
lock
icebp
mov
inc
dec
out
scas
push
leave
adc
es
push
jns
add
dec
lret
insl
cmp
repnz
xchg
inc
push
data16
clc
push
and
mov
scas
sbb
mov
sar
pop
pop
mov
mov
lds
enter
je
test
sbb
out
push
bound
pop
dec
inc
bnd
mov
lahf
mov
sbbb
enter
mov
arpl
sbb
aas
push
or
movsb
stos
faddl
pop
test
xor
jno
adc
xor
into
out
pop
jnp
gs
jge
nop
insb
aad
mov
cmc
pop
pop
lock
sbbl
call
push
mov
xchg
jnp
aad
test
add
pop
int3
xchg
mov
xchg
cmp
xchg
xor
jl
xor
dec
cmc
pop
sbbb
adc
jg
or
jno
fwait
xor
outsl
pop
insl
cli
cmpsl
dec
cmpsl
testl
test
insb
popa
dec
adc
in
xor
movsb
lret
add
ja
cmc
ja
inc
mov
mov
orl
xchg
mov
fdivrl
in
mov
mov
fwait
movsl
xchg
add
mov
imul
movsl
mov
cmp
xchg
jnp
pop
xchg
xor
insb
icebp
push
pusha
stos
cmp
movl
pop
pop
sti
fadd
stc
pop
xchg
jecxz
addb
cmp
cmp
dec
loopne
dec
jecxz
jmp
sub
mov
aam
jecxz
scas
mov
mov
adc
push
stos
or
mov
xor
bndldx
fnstenv
loope
movsb
fs
ss
outsb
dec
insl
negb
rcll
cmp
out
and
in
js
jge
cld
and
and
mov
jno
sub
sbb
fmul
aaa
mov
push
mov
adc
pop
fbld
outsb
mov
add
in
loopne
or
ret
or
insl
xchg
xorl
cmc
mov
add
popf
jp
std
sbb
int
scas
xchg
movsb
fisttpl
ret
lahf
jns
fwait
xchg
fdivrl
test
jle
pop
jl
in
jbe
and
inc
lock
push
movsbl
int3
pop
lcall
push
dec
das
shlb
jns
or
addr16
or
mov
pop
dec
xor
add
test
jo
mov
mov
cmp
sbb
adc
cmp
sbbl
test
jp
xchg
push
mov
and
pop
rcll
mov
pop
cwtl
movsb
cltd
push
loop
pushl
mov
inc
out
stos
xlat
sub
sbb
mov
cwtl
inc
mov
ds
pushf
jp
push
adc
nop
nop
in
fwait
dec
sbb
jo
mov
add
jnp
loope
cs
sbbl
mov
inc
adc
add
pop
and
add
xor
aam
bswap
daa
mov
sbb
mov
fistpl
cld
push
out
enter
xchg
mov
rorb
or
or
mov
push
push
loopne
ret
in
mov
cmp
sbb
or
sarl
cmpsb
insb
loop
movsl
push
popf
adc
jg
pop
jnp
dec
jg
repz
pop
push
cmp
push
fs
dec
out
insb
fistl
ret
leave
cmp
arpl
pushf
cmc
repz
rcrb
mov
xchg
aad
xor
stos
dec
jmp
xor
lea
mov
xchg
jl
in
xor
adc
test
jecxz
cmp
mov
and
das
test
push
jge
jg
fidivl
xor
jno
jbe
mov
xor
test
out
jno,pn
jle
sub
call
mov
xchg
loope
dec
sbb
and
and
xor
gs
or
mov
mov
push
in
push
sahf
scas
into
mov
adc
gs
sbb
test
shll
mov
inc
jno
lods
leave
lret
mov
gs
sbb
push
push
mov
mov
pushf
jmp
push
push
imul
xor
nop
scas
fstps
xchg
mov
movsb
cmp
cmpl
xchg
js
std
jmp
inc
mov
cmp
ficoml
out
xchg
inc
sbbl
into
mov
stc
mov
negb
movsl
neg
mov
loope
stos
call
inc
sub
jno
and
ret
ud0
lret
int
rcr
add
nop
adc
inc
ret
jg
popf
es
clc
cmp
icebp
pop
call
mov
inc
stc
loope
stc
aas
hlt
pop
sti
dec
push
xor
pop
mov
daa
test
addl
mov
leave
call
movsl
and
push
add
jl
into
adc
push
fsubrp
into
lret
pushf
je
fsubl
ja
jno
fcomps
jmp
lods
lret
or
das
pop
imul
xor
mov
inc
sbb
pop
sbb
lcall
je
stc
test
fcmovb
call
dec
ljmp
negb
test
ss
pop
cmc
lods
test
pushf
jp
inc
movsl
add
and
cs
dec
sbb
dec
filds
shll
fmul
test
pop
testb
sbb
mov
shrl
xchg
fsubrs
insb
mov
in
cld
mov
lea
rcrb
lcall
ss
cwtl
fildl
jecxz
and
imul
mov
icebp
xor
lods
or
fsubrl
pushf
and
xor
or
clc
xchg
cmp
xor
stc
xlat
dec
repz
in
into
cmc
das
popa
mov
mov
cmp
xchg
aaa
mov
fnsave
adc
ds
pop
shrb
cld
pop
movl
insl
cwtl
daa
iret
imulb
add
add
lds
mov
cmc
insb
push
ficoml
out
clc
iret
lds
and
int
pop
sbb
sbb
push
gs
iret
dec
addr16
es
cs
push
mov
out
jmp
iret
dec
aas
scas
aad
inc
xor
rcr
sti
jo
or
sbb
pop
mov
add
nop
rcrl
sub
or
push
testb
mov
sbb
insb
shll
push
mov
push
fdivrl
fstps
subb
clc
sbb
rol
mov
jle
ds
pusha
and
ja
popf
mov
cld
test
fwait
and
xchg
fnstcw
cmp
mov
in
cmp
imul
inc
orl
sub
int
cmp
in
nop
or
stos
jge,pn
adc
xchg
jg
cmp
jnp
scas
jbe
lea
pop
add
std
loope
test
es
addl
xor
xor
add
cmp
les
xor
es
pop
jns
sub
sub
push
or
pop
add
in
mov
sahf
adc
ja
mull
and
jo
bound
fs
mov
mov
dec
mov
movsb
xor
pop
testl
aaa
iret
xor
jo
and
fdiv
ss
out
mov
pop
gs
aas
inc
inc
xchg
pop
pushf
xchg
mov
dec
and
adc
inc
in
shl
mov
idivl
call
push
adc
jae
das
xor
push
mov
outsl
push
or
mov
push
cmp
addr16
cmp
adc
aam
fcmove
repz
pushf
sbb
mov
xor
xor
ljmp
cmpl
xchg
mov
outsl
ret
inc
pop
scas
push
test
adc
mov
lods
push
add
out
jge
sub
gs
outsb
jmp
js
sub
sub
pop
inc
imul
push
jecxz
and
adc
pusha
test
add
icebp
dec
test
loop
or
aas
jg
mov
sub
out
xchg
sahf
stc
stc
push
mov
outsb
push
mov
jl
cmp
cwtl
lods
idivb
repnz
mov
add
mov
mov
nop
dec
pushf
sub
xlat
fimull
lret
outsb
add
stos
loopne
or
add
push
cmp
push
bound
ficomps
mov
cmp
xchg
mov
cmp
adc
and
stos
mov
jns
push
push
add
mov
push
dec
cld
movsl
leave
xchg
dec
sbb
xchg
mov
sbb
stos
mov
jecxz
or
or
cwtl
jo
sub
test
jle
add
insl
add
loop
loop
mov
add
lret
adcl
mov
pop
xor
iret
pop
sahf
sbb
mov
mov
nop
push
std
mull
hlt
pop
mov
push
test
cld
scas
pop
sbb
ds
jmp
iret
fcmovb
push
cld
jge
adc
clc
mov
mov
mov
lods
cmp
xchg
das
out
out
mov
cmp
iret
push
cmc
push
sub
pop
dec
fwait
mov
mov
inc
fdivrl
sti
iret
push
aaa
arpl
leave
mov
cmpsl
mov
shll
repz
cs
mov
and
fstpt
jbe
fdivl
inc
dec
loopne
lahf
mov
mov
mov
pop
test
mov
mov
pop
cmp
mov
jl
stc
and
pop
scas
xchg
outsb
das
bound
enter
int3
sub
mov
lods
xchg
fwait
xorb
xchg
mov
jo
sbbb
stc
loop
into
pop
ja
pop
and
adc
insl
fwait
test
lret
jl
insb
or
imul
enter
out
sarb
dec
pop
or
sub
leave
mov
or
test
sub
pop
push
mov
repz
cmpsl
sbb
dec
add
jae
lods
pop
inc
insl
es
lret
lock
jl
add
les
mov
loope
sbb
cld
scas
and
mov
movsb
je
adc
divl
inc
cltd
add
jnp
pop
mov
add
ret
sarl
xor
jge
sub
aaa
or
mov
jmp
ftst
cmpsb
je
xchg
clc
push
std
mov
decb
les
pop
cmp
lock
fstps
andb
cmc
xor
cmpsb
popa
enter
int
test
push
lahf
lds
adc
lret
cmp
pop
ljmp
daa
inc
xchg
sbb
in
lahf
cmp
and
or
xor
xchg
xor
movsb
sbb
ret
or
sub
pop
mov
fbld
adc
sbb
sbb
xchg
movsb
add
das
cli
lods
jmp
iret
in
test
cs
cmp
pop
addr16
push
pop
jbe
xchg
xchg
loop
mov
pop
xchg
or
sub
mov
add
test
sbb
into
add
rcrl
test
pop
dec
in
mov
xchg
shlb
pusha
xlat
add
inc
cmp
adc
pop
fwait
iret
or
sub
aaa
into
imul
fistpll
sti
sarb
xor
pusha
cmp
mov
add
ret
ljmp
ret
lahf
inc
cmp
jle
arpl
mov
repnz
xor
int
xor
pop
mov
xor
xlat
mov
cld
loopne
mov
mov
out
add
pop
push
or
push
cwtl
aaa
sbb
fwait
inc
add
dec
push
into
das
and
cmp
add
and
inc
jns
fdivr
sub
add
or
adc
js
ja
not
test
push
inc
call
fs
lret
adc
add
in
jl
ljmp
push
jns
sahf
dec
mov
adc
sbb
xchg
jg
and
clc
inc
cmp
mov
sub
call
sar
mov
cmc
cltd
cmp
stc
jbe
push
mull
mov
repz
push
add
cmp
and
leave
repnz
pusha
lret
faddp
and
std
test
pushf
push
cmp
stc
into
cmp
xor
repz
out
sbb
in
xchg
sbb
pop
cmpb
cmpsl
leave
xor
pop
insl
pop
js
lcall
or
jnp
xchg
sbb
fwait
hlt
dec
aas
std
pop
xor
jmp
pop
test
push
xor
fildl
jne
pushf
fists
jo
cwtl
cld
lock
mov
push
sti
ja
lcall
data16
push
ret
leave
lods
adc
mov
das
pop
ds
sti
stos
cmc
pop
push
cmp
mov
ja
pinsrw
iret
jne
repz
push
sbb
mov
cwtl
or
xor
das
push
fwait
xchg
loope
jmp
rorl
aad
and
cli
clc
add
dec
lret
es
pushw
js
imul
and
and
popf
jb
mov
jb
xchg
inc
clc
pop
sar
pop
mov
mov
and
cs
and
xchg
sbb
xchg
aaa
lock
dec
xor
arpl
addr16
jmp
jp
negb
stos
pop
cld
je
pusha
stc
aam
cwtl
push
sbb
jnp
lock
fwait
lds
jge
mov
fdivs
fidivrl
shrl
popl
push
or
sbb
and
rcrl
sahf
arpl
push
jns
sbb
dec
xchg
fimull
sub
xor
pop
out
test
sbb
jecxz
aad
enter
and
add
or
cmp
pop
dec
lds
aad
std
sub
arpl
xchg
jg
adc
jae
stos
adc
inc
fstps
xchg
cmp
jbe
mov
pop
test
or
aad
mov
xlat
jne
test
aad
sahf
inc
das
xchg
mov
mov
mov
out
or
xchg
pop
lret
fists
fimuls
xchg
xchg
mov
jne
fsubl
xchg
roll
int3
xchg
mov
loop
unpcklps
cmp
lods
rcl
or
stc
pop
jmp
inc
repnz
cmc
jmp
mov
and
push
mov
mov
jmp
push
outsl
cs
leave
xchg
mov
test
mov
test
push
mov
pop
sbb
imul
mov
mov
dec
arpl
mov
fistpll
cwtl
dec
mov
rcl
mov
mov
and
xchg
adc
xchg
jne
lcall
jge
lods
mull
jg
sub
shll
outsl
popl
cmp
out
push
ret
adc
jg
push
xchg
enter
xchg
imul
xchg
dec
inc
mov
sbbl
adc
movsl
mov
sahf
lea
cmp
mov
pop
pusha
add
out
and
popa
jae
lods
cmp
addr16
cmp
jno
jecxz
aam
in
aam
pop
fld1
imul
push
xor
cmp
hlt
xor
mov
into
aam
popf
test
jno
mov
jae
adc
cmp
add
xchg
adc
xchg
inc
sbb
aaa
sti
jp
movb
lds
fimuls
fistpll
sbb
mov
push
test
push
pushf
sti
cmp
mov
stc
loop
ret
imul
ret
sbb
addr16
mov
test
scas
mov
orb
nop
inc
outsl
xchg
inc
fsubrl
xchg
out
mov
mov
mov
pop
sub
lds
mull
push
mov
movsb
xchg
in
lock
cli
jb
inc
and
add
push
jne
shl
push
pop
test
sbb
dec
repnz
sub
fimuls
lahf
jae
cli
mov
jae
aad
push
fildl
sub
pop
stos
mov
dec
rclb
je
lea
insb
cwtl
mov
add
movsl
iret
or
add
mov
xchg
cmpsl
jns
psubusw
iret
dec
dec
scas
cmpl
mov
and
nop
pop
cs
ficompl
pushf
imul
leave
xor
ja
out
cs
es
mulb
test
pushf
aas
aaa
or
subl
das
mov
add
addr16
int
xchg
ljmp
rorb
repnz
inc
xlat
xor
jl
dec
push
cld
imul
aas
push
pop
popa
aas
xchg
mov
loope
shlb
jnp
lds
mov
sbb
cmpsl
push
cmpsl
ret
jne
fidivrs
orps
xor
bound
ret
iret
aaa
xlat
cmc
dec
jmp
stos
mov
das
loop
push
and
add
xor
xor
enter
jp
sbb
inc
loopne
xchg
movsb
aam
test
cmc
in
fwait
mov
ret
sub
mov
mov
jns
sub
jno
shll
push
inc
jle
cmp
daa
push
xchg
xchg
lock
and
or
lret
loopne
adc
push
mov
vmovups
mov
mov
cmpsl
into
in
pop
cmp
test
shrl
add
or
sub
cmp
cs
jns
cmp
jp
lahf
gs
push
in
adc
jle
mov
jns
xor
jmp
cmc
pop
sub
js
sub
lret
push
jle
sub
xchg
xchg
xchg
mov
daa
iret
filds
xor
scas
outsl
jmp
xchg
pop
or
cltd
repz
mov
cltd
rolb
fldl
add
je
sbbb
xchg
cmp
mov
sub
ss
mov
pop
aaa
mov
mov
jg
mov
imul
outsb
fcompl
cmpsl
cmp
mov
test
pop
nop
test
bound
in
mov
scas
sub
fbstp
jbe
popa
pop
ja
imul
cmp
jbe
jl
pop
imul
dec
subb
mov
sbb
xor
aam
rcl
push
notl
rorl
pop
mov
mov
add
in
jl
sub
or
push
dec
mov
jbe
adc
sahf
mov
cli
and
pushf
imul
xchg
xor
dec
lahf
mov
lods
cmp
push
aaa
inc
lods
fxch
std
call
in
cli
adc
mov
push
adc
std
fs
mov
or
lds
adc
pop
inc
mov
cwtl
ret
mov
out
pop
mov
fwait
add
mov
sub
add
inc
test
pusha
inc
fisttpll
sti
enter
out
mov
xor
pop
imul
int3
adc
dec
sub
add
shrb
sbb
arpl
xchg
pop
in
mov
stos
push
out
jb
fsubl
mov
neg
xchg
sbb
dec
out
fwait
jb
ret
xor
out
mov
or
pop
adcl
xchg
mov
xor
lahf
mov
lahf
test
je
pop
call
or
je
fdivs
mov
dec
mov
and
adc
cs
ss
mov
xlat
test
in
mov
addr16
daa
mov
cmp
mov
loop
ljmp
mov
mov
mov
call
cld
flds
dec
cmp
push
adc
movsb
cmpsl
shll
pop
push
sbb
pop
cmp
mov
pop
int
xchg
test
int
and
inc
test
pop
jnp
sbb
testb
into
into
adc
out
lods
add
and
xlat
push
push
mov
or
shll
mov
dec
ss
clc
lret
scas
mov
fcomps
out
jmp
xor
push
jb
subl
leave
cmp
dec
inc
in
test
stc
inc
aam
cmp
outsl
inc
jge
je
hlt
inc
xchg
aad
sub
mov
or
ja
push
testb
loope
outsb
fistl
xor
mov
fwait
push
or
jp
jmp
int
mov
mov
and
adc
cmpsl
mov
aad
pop
ja
and
jno
pushf
xchg
push
xchg
mov
pop
lret
out
sbb
xchg
test
mov
mov
sbb
dec
jmp
sbb
xor
and
cmp
cmp
sete
scas
sahf
xchg
pop
ficomps
rolb
push
pushf
paddq
sub
repnz
adc
cmp
jae
cmpb
inc
std
pop
push
adcl
lock
sub
cmp
jb
incl
lret
sahf
dec
adc
fldenv
mov
inc
jg
and
dec
lahf
mov
movsb
mov
add
insb
sbb
push
lods
mov
orb
mov
sub
mov
dec
in
into
mov
imul
lret
adc
fs
lds
dec
jae
lods
mov
mov
xchg
sahf
fadds
pop
mov
adc
jne
addr16
inc
outsl
jbe
push
ds
test
push
pop
dec
inc
jnp
pop
push
mov
sub
mov
pop
rcrb
jg
push
pop
das
inc
test
sbb
pop
push
cmp
ret
cmp
negl
lahf
push
int3
rorb
into
movsb
cmp
clc
shll
outsb
pop
imul
mov
icebp
icebp
push
aam
repnz
lods
addr16
add
in
fdivrs
mov
inc
pusha
aaa
iret
nop
shrb
add
xchg
jecxz
mov
sbb
loopne
adc
sbb
div
pop
mov
add
pushf
mov
subl
cmp
sub
add
enter
imul
mov
fistps
jp
orb
xchg
xor
mov
loop
jge
fcoms
xor
icebp
push
dec
enter
ds
leave
pop
mov
lods
xor
subb
int
data16
and
mov
fwait
jp
test
xor
cmp
rdmsr
pop
adc
lods
out
pop
outsl
hlt
cmp
cmp
add
insl
pop
dec
xlat
sub
jnp
pop
roll
scas
lods
push
lock
dec
int3
icebp
push
adc
inc
cmpsl
mov
or
cmp
fistpl
int3
push
or
ja
push
pop
out
fwait
inc
pop
lock
and
lcall
mov
stos
push
push
lahf
lret
dec
movsl
push
lahf
inc
jnp
ds
sub
lret
aaa
out
mov
jge
test
pop
fstpt
ret
out
mov
out
ds
jle
cmpsb
dec
pop
jl
mov
in
aam
pop
into
out
out
leave
dec
push
lods
xlat
loope
mov
aam
scas
inc
jge
cmp
stos
jmp
mov
push
sahf
xlat
fisubs
xchg
inc
lahf
or
mov
sbb
xchg
bound
xor
cwtl
add
call
cmpsb
lea
add
xchg
sub
out
movsl
inc
cmp
inc
lods
out
loopne
enter
ss
mov
scas
push
adc
sahf
mov
notb
xor
mov
sbb
or
sahf
aas
popa
add
adc
jmp
in
mov
mov
int3
fwait
imul
push
add
or
and
out
mov
jle
out
mov
sbb
ret
xchg
push
cwtl
jl
mov
into
inc
aad
ja
and
aam
xchg
testb
or
jnp
xlat
sub
jl
cli
fbld
sub
sbb
mov
int
icebp
push
loopne
out
fldt
mulb
and
jno
xchg
cld
xchg
divb
push
cwtl
pop
stc
jne
sbb
pushf
scas
xchg
aam
out
shlb
mov
mov
stos
cld
adc
mov
xchg
dec
sbb
cli
jle
push
push
or
shll
dec
mov
das
lock
sub
aas
push
sarl
mov
scas
or
sbb
test
cli
leave
mov
fmull
push
arpl
add
jg
roll
cli
add
jecxz
and
adc
cwtl
insb
iret
push
mov
testb
rol
sub
lret
push
std
gs
pop
mov
hlt
in
pop
mov
loop
icebp
arpl
or
or
cmc
pop
lea
adc
enter
sbb
push
stos
int
lret
cmp
loop
mov
add
mov
pop
cmpsl
or
and
and
push
push
add
mov
push
enterw
ds
mov
insb
cmp
sbb
xchg
jg
sarl
jp
lret
cld
mov
push
add
add
pop
xor
aam
leave
mov
sbb
adc
and
sub
cltd
pop
icebp
in
jp
test
mov
mov
and
aas
cld
je
mov
lret
push
das
lahf
aaa
jno
outsb
and
shrl
cmp
sbb
inc
inc
mov
popa
xor
repnz
fisubs
or
into
mov
xchg
clc
mov
ss
add
xchg
or
mov
ja
insb
test
dec
fisubl
mov
iret
xorl
iret
mov
cmp
gs
inc
mov
fwait
imul
xor
out
popa
aas
pop
cmp
push
cmp
cmp
nop
adc
testb
mov
mov
rclb
dec
sbb
mov
add
movaps
mov
or
outsl
rorl
ss
mov
out
mov
test
jne
out
sbb
xchg
ljmp
push
push
sbb
mov
in
push
je
insl
jo
jle
push
xor
mov
rorl
jnp
repnz
arpl
leave
aaa
inc
pop
out
ret
lea
add
stos
call
pop
in
cmp
cld
arpl
fdivrl
pop
ret
jne
mull
inc
rcl
unpcklps
adc
pop
mov
cs
jmp
and
xchg
in
roll
adc
pop
inc
push
or
inc
xchg
dec
fcompl
sub
sahf
sub
adc
jmp
es
sbb
mov
aam
mov
movsl
test
or
sbb
dec
ljmp
lahf
in
pop
pop
mov
fwait
popa
lods
adc
and
repnz
es
mov
jp
jno
test
icebp
inc
and
inc
mov
xchg
mov
jge
jp
out
loopne
negb
outsb
dec
and
movsb
mov
mov
add
cmp
fwait
pop
movsl
lock
in
or
lea
jnp
add
test
and
test
adc
and
aaa
pusha
xorl
jg
dec
inc
dec
fs
push
add
clc
and
shl
jbe
sub
inc
les
shrl
pop
imul
imul
fiaddl
stos
jnp
fidivrl
and
dec
add
idiv
fs
daa
and
aaa
pusha
sbb
pop
dec
in
push
lods
push
ds
sti
pop
mov
dec
in
outsl
mov
aas
dec
aam
daa
push
in
jg
xor
fimuls
push
imul
int3
aad
mov
lea
stos
bound
fsubrl
xchg
push
and
dec
sbb
xor
mov
adc
inc
and
fldl
or
jl
nop
ljmp
addr16
jns
std
mov
cmp
cld
sub
and
clc
rcrl
mov
mov
xchg
gs
mov
lock
dec
popf
xor
inc
stos
pusha
out
les
daa
icebp
inc
mov
pop
lea
pusha
in
sub
cmpsl
ret
jne
and
stos
dec
insl
faddl
rcll
or
data16
nop
fs
and
out
jb
jo
or
mov
xchg
ja
xor
cmp
outsb
add
push
push
mov
jmp
sahf
stc
cmp
xchg
jg
xchg
pushf
cli
push
dec
repz
mov
data16
inc
in
mov
mov
leave
shlb
mov
fldcw
mov
imul
or
pushf
cmpsb
fisubrl
enter
pop
cmp
int
push
dec
jb
xor
outsb
add
sbb
xchg
cmp
scas
xchg
je
lods
inc
inc
shlb
xchg
fwait
jo
call
cmp
push
sahf
sbb
lcall
mov
jmp
inc
sub
or
imul
mov
cmp
shlb
loope
aad
scas
add
sbb
adc
int3
pop
testl
lahf
test
push
push
ret
mov
mov
adc
adc
mov
sbbb
or
xchg
and
xor
int3
lea
jo
mov
mov
repz
repnz
cwtl
shlb
cmp
rcrl
or
and
adc
in
push
jb
lods
or
cmp
jo
ja
out
push
popf
inc
mov
push
fsubrl
cmp
movsb
xor
sub
xchg
cmp
push
orb
idiv
stos
sti
imull
sarb
shr
or
jo
jge
fbld
or
xchg
out
add
insl
rcl
cmp
mov
mov
xorl
outsb
mov
xor
mov
dec
lret
ds
fs
hlt
int
lret
mov
xchg
adc
mov
fs
mov
mov
pushf
xchg
add
ret
ret
push
mov
movaps
xorb
shr
cmpsl
mov
xchg
out
aam
movsl
or
pop
arpl
push
arpl
sbb
fadd
push
arpl
mov
cs
jno,pt
stos
iret
imul
jbe
push
pop
ret
leave
nop
bound
sbb
dec
aad
dec
inc
aad
or
add
mov
mov
cld
xchg
fucomp
mov
and
ljmp
mov
cmpb
lods
xor
aam
jmp
pushl
icebp
mov
and
adc
xchg
and
push
int3
cmp
imul
lods
mov
inc
insb
repz
ss
repz
int
mov
cmp
adc
jns
sbb
aad
inc
and
mov
fmul
pop
daa
inc
push
mov
int3
mulb
je
mov
and
xchg
imull
clc
jbe
in
and
dec
rolb
xor
push
mov
mov
iret
push
add
rcr
inc
jge
xchg
dec
int3
sbb
call
icebp
pop
iret
cmp
dec
push
or
mov
mov
xor
xlat
cld
mov
scas
out
inc
add
movsl
popf
test
rorb
leave
xchg
in
cs
cmp
cwtl
sub
lret
daa
dec
adc
shll
cmp
pusha
add
adcl
inc
fisttpl
js
jg
das
xchg
lahf
test
sbb
popa
imulb
adc
je
call
push
dec
mov
test
cmp
outsl
lret
mulb
add
fwait
mov
mov
cmp
lods
clc
cltd
push
jp
add
sub
sub
fmull
adc
aaa
dec
adc
cmp
jo
fisubrl
mov
cmp
out
rcr
mov
mov
pushf
dec
mov
add
icebp
push
aaa
nop
cmc
pop
leave
inc
push
mov
xchg
sbb
or
cmp
cld
xchg
sub
imul
loop
adc
push
out
sbb
sub
mov
femms
in
pop
pop
std
in
mov
mov
cwtl
out
xor
jae
sbb
cmp
or
or
dec
shrl
movsl
out
stos
test
mov
mov
dec
stc
cs
lahf
arpl
sti
std
xor
lods
pop
xor
cmpsl
push
add
mov
or
ljmp
mov
rorb
dec
fists
mov
lods
mov
mov
data16
sbb
sub
lods
push
aaa
xchg
cli
shlb
and
mov
scas
push
xchg
leave
mov
sti
adc
jo
rolb
mov
out
arpl
mov
pop
and
ret
mov
cmp
data16
lods
movb
mov
sbb
sub
dec
pop
rol
loope
loop
xchg
movsl
sub
xchg
jecxz
outsl
in
repnz
test
cltd
test
mov
in
arpl
jecxz
mov
mov
daa
aam
sub
pop
inc
adc
jp
cmp
xchg
daa
insb
pop
cmc
filds
xchg
fadds
fsubrp
aaa
adc
xor
ss
aaa
dec
popa
in
fcmovbe
cmp
pop
fiaddl
movsl
xchg
cltd
jle
stos
mov
je
add
adc
outsl
xor
out
lret
mov
pop
data16
sti
push
mov
stc
sahf
cmpsl
lods
in
scas
inc
aad
push
inc
xchg
cld
xor
out
fbld
test
testl
fcompl
jae
stos
mov
pop
scas
push
pusha
sbb
xchg
add
mov
mov
add
pop
fs
stos
add
call
arpl
es
cmpsl
jmp
pop
or
mov
rclb
daa
cs
and
rorl
mov
xchg
push
jge
xor
inc
push
push
adc
mov
insl
mov
mov
jo
dec
push
popf
push
adc
mov
aas
ss
ljmp
ret
imul
cmp
pop
inc
or
jge
jle
jle
daa
test
add
jno
enter
push
scas
fadd
in
test
test
int3
idivb
out
xchg
xlat
jmp
aam
lcall
and
decb
push
movsl
aad
insb
cmpb
mov
add
mov
jne
mov
ljmp
jbe
mov
or
out
push
dec
or
ljmp
jge
cs
adc
je
int3
loope
xchg
pop
cmpsl
inc
ret
push
jns
rcll
enter
sub
or
push
pop
jmp
stc
push
enter
xchg
xlat
hlt
insb
adc
push
aam
shll
out
in
mov
xchg
pop
cmp
aam
fiaddl
fwait
jnp
mov
push
stos
cmpb
pushf
gs
adc
sub
xlat
rcr
jns
retw
jle
xor
fsubrp
mov
jo
mov
mov
pop
add
sbb
imul
enter
in
rcl
adc
int
aaa
jp
movlps
les
lahf
test
inc
shl
mov
test
and
ror
js
call
jmp
pop
loope
mov
adc
cmpsl
pop
xchg
int3
mov
mov
jge
adc
outsb
pusha
cld
inc
mov
mov
cmp
shll
cmp
adc
inc
pop
xlat
addr16
sbb
inc
jne
mov
jns
scas
mov
cmp
cmp
inc
sbb
lea
inc
sahf
popa
and
outsb
xor
cli
push
pop
mov
xlat
xor
mov
sub
mov
test
and
add
test
push
js
pop
lods
lahf
test
pop
mov
icebp
add
adc
dec
mov
inc
mov
push
push
fiaddl
xchg
hlt
sub
push
push
mov
fistps
push
movsl
shl
orb
sub
xchg
je
andl
ljmp
xor
push
popl
je
ror
inc
cli
adc
fidivl
test
pop
mov
xchg
inc
dec
fistl
mov
shlb
adc
test
xchg
fwait
push
cmp
test
xchg
push
scas
sub
mov
adc
ss
jg
inc
xchg
xor
ss
mov
dec
jle
jecxz
ret
add
test
xchg
dec
stc
insb
push
jae
insb
or
mov
inc
stc
xchg
cmp
repnz
push
xlat
mov
outsl
outsl
mov
cwtl
daa
into
push
add
cmpl
mov
shlb
inc
sub
aam
mov
andl
mov
mov
xchg
fsubrl
cmp
push
scas
loope
imul
inc
mov
xor
lods
push
inc
insl
xchg
push
and
call
dec
mov
icebp
fabs
repz
jae
mov
jno
xlat
dec
outsl
inc
ret
jb
arpl
sahf
pusha
mov
in
jae
in
std
mov
sahf
addl
inc
ds
inc
fsubrl
jne
mov
and
les
clc
pop
jo
cmp
mov
push
mov
mov
fmull
push
ret
and
aaa
ficompl
stos
je
cmp
or
xchg
cld
mov
xchg
xor
mov
xor
pop
lds
jl
aam
sub
mov
sub
pop
jge
cwtl
outsl
jl
rcrb
push
pusha
mov
pop
das
stc
imul
cmp
push
shl
fstl
call
dec
iret
xchg
sbb
in
xor
mov
iret
in
fs
hlt
ja
cmp
imul
adc
andb
jle
repz
repnz
pop
cmc
cmp
aas
push
movsl
jg
loop
push
mov
xchg
scas
arpl
inc
mov
mov
cld
sbb
scas
sub
jp
mov
xchg
mov
test
cmp
push
int3
jecxz
jle
jmp
xor
sub
fcmovbe
sbbb
xorb
mov
xchg
push
ror
xor
adc
mov
or
faddl
inc
enter
cli
mov
data16
loope
test
fiaddl
sub
mov
icebp
clc
lret
roll
push
fdivl
cmp
push
aam
and
pop
dec
incb
sbb
adc
scas
in
push
dec
mov
jg
xchg
js
mov
pop
clc
mov
dec
js
and
jns
or
mul
loopne
sti
in
stc
push
pop
xor
fldcw
and
rcrb
push
cmp
cmovbe
dec
cli
xor
das
mov
xchg
repz
test
inc
jg
xlat
mov
pushf
pop
pop
cmpl
mov
push
enter
inc
inc
xlat
aad
sub
cli
sub
jmp
and
xor
aaa
ret
movsl
cmpb
and
mov
inc
cli
adc
loop
or
pop
cmpsl
mov
sub
mov
inc
mov
mov
jp
sub
push
push
test
data16
lea
ja
iret
addr16
cmpsl
sbb
insl
inc
mov
ja
lahf
sub
push
scas
mov
push
movb
mov
sbb
out
mov
push
sub
pop
cmp
inc
jle
cmp
lcall
cmp
jmp
sahf
mov
insl
aad
cmp
pop
lea
dec
cmc
addr16
mov
mov
enter
xor
lcall
dec
push
sbb
or
aam
mov
inc
push
cld
cs
push
inc
adc
lahf
or
imul
dec
hlt
test
lea
out
in
aad
xor
lret
adc
push
jge
jae
enter
test
in
mov
hlt
lock
ror
clc
es
pop
sub
dec
pushf
mov
dec
mov
rcrl
adc
mov
push
mov
pop
mov
lock
pop
or
loopne
fadds
repz
jp
andl
xchg
scas
add
leave
pop
push
pop
lret
cs
inc
mov
ret
jns
ret
mov
lods
out
arpl
mov
sub
ret
ljmp
push
sbb
in
add
test
hlt
sub
jge
imul
jle
sti
xor
adc
add
adc
jg
mov
stc
testl
das
pop
cmp
dec
andb
pop
mov
loopne
hlt
jnp
imul
jns
dec
scas
test
stc
in
es
dec
sbb
insl
js
xor
ljmp
sub
jl
sbb
cmp
jb
insb
outsb
sub
mov
sbb
adc
xchg
and
into
jge
test
sti
mull
mov
cmp
push
repnz
mov
mov
xchg
or
sahf
daa
push
jo
roll
faddp
jmp
and
mov
dec
fwait
divb
mov
mov
mov
mov
rolb
call
loopne
sub
dec
mov
fistl
and
adc
fimull
dec
sub
addl
enter
and
in
pop
lahf
pop
outsb
scas
lahf
sbbl
sbb
mov
mov
fdivrl
mov
sbb
or
mov
lock
shr
adc
push
push
jp
or
fcoms
and
imul
push
lret
dec
ds
mov
int3
dec
inc
pop
lods
cmp
cmpsb
dec
popf
imul
sbb
sub
cmpsl
pop
insl
mov
fmulp
mov
mov
mov
ja
xchg
xchg
mov
iret
pop
inc
lods
mov
push
and
mov
nop
xchg
jge
lods
push
dec
adc
icebp
fdivs
push
jg
scas
dec
loopne
xor
mov
push
sub
inc
inc
xor
adc
or
pop
stc
push
imul
or
data16
gs
stc
pop
aaa
and
filds
sub
test
jecxz,pn
xlat
ja
pop
cmpl
popa
xor
xchg
jp
pop
sbb
dec
faddl
pop
dec
icebp
std
sbb
fcom
xchg
fiaddl
xor
xor
push
dec
pop
mov
int
sti
add
out
lock
adc
push
sub
sbb
fcoms
mov
sub
lods
es
cmp
fmull
movsl
lret
and
out
cmp
in
jb
mov
sti
js
mov
into
imulb
sub
sub
in
mov
loope
jnp
ljmp
imul
mov
roll
mov
lods
andl
loop
cmp
and
out
or
dec
push
dec
rol
add
imul
adc
aas
mov
mov
lcall
cmp
imull
jmp
sbb
subb
cmc
push
inc
pop
pop
lahf
sahf
push
bound
scas
cmp
xor
pop
jl
ljmp
movsl
adc
and
sbb
dec
cmpsb
pop
loop
mov
or
dec
mov
bound
mov
xchg
add
adc
and
dec
sub
fdiv
or
push
mov
push
jle
loopne
insb
fstl
jge
sbb
int
in
add
inc
adc
mov
dec
aaa
cmc
adc
pop
pop
mov
test
jecxz
movsl
xor
arpl
fildl
std
aad
mov
xor
lea
jns
mov
daa
aaa
sub
push
and
mov
cwtl
outsl
mov
sub
mov
mov
lcall
jne
rorl
xchg
fldcw
add
sbb
inc
int3
fcomip
mov
cmpsl
jecxz
push
lret
fstpl
fisubrs
push
ja
ja
in
scas
cmp
push
aas
push
arpl
cmp
int
repnz
lea
sahf
movb
mov
push
cmp
setb
jp
cs
pusha
outsb
or
inc
aas
pusha
int
xchg
push
push
loop
lods
jle
sbbb
roll
orl
in
inc
xlat
mov
sbbl
es
dec
jmp
jb
enter
bound
jg
popf
in
xchg
or
decb
mov
dec
adc
in
insl
and
incl
stc
and
jge
or
bound
in
dec
mov
pop
pop
data16
xor
sqrtps
push
mov
fsubp
or
imul
inc
xchg
pop
mov
adc
sahf
cmp
js
fldl
mov
out
mov
aad
mov
sub
xchg
cmp
dec
dec
jb
sar
jp
inc
pop
das
pop
pop
mov
add
add
lahf
mov
out
repz
xor
jb
dec
lret
push
sub
out
xchg
jmp
mov
rorl
jl
arpl
stos
gs
push
shrl
ret
xor
scas
test
dec
push
fs
dec
and
ret
xor
lods
aad
mov
xor
jo
call
dec
test
sub
lods
lds
int3
addr16
jg
dec
sar
mov
mov
mov
cmc
dec
call
add
jno
stos
inc
inc
pusha
jle
ss
mov
cwtl
inc
in
in
xorb
fcom
mov
pop
cwtl
out
or
mov
lods
test
ss
mov
testb
and
jmp
jo
mov
mov
mov
and
dec
mov
pop
scas
test
test
and
inc
pop
fstps
jmp
popa
xchg
in
pushf
adc
push
xchg
mov
jne
xchg
into
sub
dec
or
jo
jmp
or
aam
add
push
in
push
xor
pop
enter
mov
sub
lret
sub
xchg
testb
movsb
mov
mov
sbb
data16
mov
jns
xchg
int
fmuls
sub
lret
mov
stos
lods
xchg
outsb
aaa
pop
sub
xchg
mov
aaa
jle
push
clc
int3
mov
popa
mov
add
pop
insb
cmp
inc
mov
and
jnp
hlt
cmpl
sub
mov
mov
repnz
aad
fs
out
jno
or
jo
xchg
push
mov
cli
orl
sub
dec
xchg
div
push
xchg
push
clc
xchg
jecxz
add
mulb
mov
add
adc
cmpb
roll
repnz
sbb
add
pop
fnstsw
jmp
dec
pop
pop
ret
loope
mov
push
add
jbe
xchg
jo
adc
lods
cmp
ljmp
insl
test
sbbl
fistpll
lahf
mov
hlt
movsb
pop
jbe
xor
adc
popf
js
xchg
add
adc
dec
sub
rcrl
lret
arpl
adcl
lods
pop
jle
int3
call
lcall
loop
pop
imul
mov
jno
fisttpll
pop
and
in
ja
cmp
fwait
lahf
ror
push
xchg
shll
jne
jnp
mov
push
mov
inc
cld
int
sub
pop
repnz
xchg
jg
push
inc
dec
pop
mov
js
nop
sub
xor
jo
sbb
lods
lret
jb
cmp
xor
hlt
stc
enter
and
shrb
jg
push
pop
xchg
lods
ds
mov
jno
xchg
sbb
aad
sub
lcall
add
stos
mov
push
rol
aas
adc
popf
jne
inc
clc
xchg
icebp
jo
push
pusha
ret
ret
lret
fcomps
out
gs
loope
dec
and
jne
add
xchg
push
xlat
adc
faddp
cltd
imul
or
sub
and
repnz
fsubl
push
fdivrl
loop
mov
cltd
jae
pop
sarl
mov
push
inc
mov
dec
push
into
push
adc
stos
insb
lret
iret
inc
pop
stos
dec
ret
fisubl
xchg
scas
jne,pn
add
adc
push
adc
adc
lock
int3
rolb
fsubr
das
pop
in
ja
pusha
pusha
mov
out
ret
pushl
fcmovne
popa
sbb
inc
push
repnz
sti
xchg
jmp
movsl
jnp
sahf
pop
xchg
addr16
lret
out
mov
jnp
les
adc
mov
dec
and
xor
or
pop
imul
icebp
add
loope
sbb
stos
mov
jmp
fsubr
fistpll
hlt
cltd
scas
adc
mov
adcl
pop
xchg
push
es
mov
test
and
sarb
sub
inc
jno
jecxz
ret
mov
jmp
orl
ds
xlat
mov
push
nop
in
fs
fwait
mov
insb
and
das
mov
pop
dec
push
sahf
mov
addr16
sbb
int3
fcmovu
lcall
cmp
test
cmp
std
inc
gs
cmp
push
test
jne
scas
xlat
clc
inc
jae
inc
rcrl
jbe
mov
push
adc
jle
pop
cmp
push
push
inc
jmp
jecxz
mov
mov
jne
hlt
ja
jp
stos
cmp
jle
inc
in
imul
sub
and
in
jo
pusha
xchg
in
and
insl
add
sbb
stos
mov
push
mov
imul
into
or
int3
js
shll
pop
int3
sbb
cld
clc
pop
into
xor
inc
fisttpl
std
arpl
inc
mov
xor
nop
sarl
mov
aad
and
insb
and
imul
add
cmpsb
mov
fcomps
les
shlb
nop
repnz
xor
jmp
xchg
push
negl
sbb
je
mov
out
fadd
or
arpl
sbb
mov
xchg
inc
jns
outsl
lret
sub
push
cmp
fcomi
xchg
mov
mov
xchg
jbe
hlt
pop
mov
into
cmc
aam
jmp
dec
js
push
pop
cwtl
mov
jbe
adc
mov
in
in
in
sub
push
fnsave
push
shlb
daa
inc
ds
sti
xchg
and
ficompl
cwtl
jno
mov
push
stos
adc
out
push
stos
jo
loopne
test
mov
dec
bound
loopne
cmp
push
stos
rorb
mov
dec
fwait
cs
dec
sbb
push
and
pop
mov
xchg
imul
adc
adc
xchg
jge
and
mov
xchg
inc
rclb
cs
das
lret
push
jmp
push
lret
mov
aaa
in
test
mov
jae
aaa
or
sub
roll
lds
jg
test
push
pavgb
adc
lcall
dec
pop
push
and
jge
or
repnz
pushf
cmpsb
adc
xchg
aam
xchg
mov
dec
mov
stos
rcll
sub
jp
mov
inc
leave
inc
jge
stos
pop
fdivr
stc
sarb
fstpl
or
or
sbb
mov
xchg
push
cltd
sub
das
cmp
ret
mov
push
mov
xchg
pushf
repz
xor
dec
cmp
mov
mov
jecxz
xchg
jp
or
and
pop
test
rolb
mov
outsb
fistpll
cli
jp
pop
dec
xor
enter
xor
add
push
fwait
insl
adc
repnz
sbb
and
cmp
std
mov
fldenv
or
mov
sbbl
jnp
mov
shll
push
mov
cmpsb
js
outsb
adc
dec
or
lods
mov
hlt
jecxz
movsl
add
and
adc
xor
aad
xor
adc
cmpsb
or
sbb
or
jnp
cs
into
addr16
add
adc
mov
aam
fsubrl
xchg
mov
add
cmc
jo
and
les
xchg
mov
adc
pop
cmp
sbb
icebp
and
out
in
arpl
pop
xor
mov
clc
jbe
sub
pop
jmp
hlt
loope
pop
outsl
xchg
lahf
test
add
dec
aaa
cmpsl
pop
fimull
cli
add
push
mov
les
adc
mov
push
cmp
and
xchg
inc
cltd
lea
clc
pop
and
aad
cli
cmp
mov
push
loop
xchg
leave
add
es
int3
and
cmp
xlat
aad
cmpl
mov
leave
cmpsb
icebp
mov
cld
jbe
inc
out
jbe
cld
adc
outsb
and
shll
or
and
repz
mov
je
sbb
or
xchg
sub
adc
iret
mov
mov
hlt
stos
adc
outsl
and
out
pop
xchg
pop
punpckldq
xchg
ljmp
pop
pusha
rcrl
adc
call
mov
das
cmpsb
insb
or
mov
pop
lods
xchg
lahf
jp
jecxz
xchg
add
inc
jo
repnz
jp
jmp
mov
lret
mov
xchg
sub
sub
repnz
scas
shrb
arpl
popf
addr16
add
vmovlps
inc
adc
das
dec
andb
cmc
cmp
test
cwtl
dec
div
cmpsb
dec
aad
loop
push
clc
or
add
fildl
cmp
add
hlt
mov
mov
hlt
cmp
mov
mov
cmp
je
adc
pop
fidivrs
in
lods
mov
dec
add
rorl
and
mov
jl
sbb
mov
mov
and
cmp
bound
jns
int3
cmp
push
dec
sub
xor
iret
hlt
xchg
loop
fcoml
mov
dec
push
add
pop
mov
leave
mov
cmp
inc
add
rorb
sbb
movsl
xlat
adc
xor
outsb
adc
fmull
popa
jae
ljmp
ret
pop
jb
inc
in
shll
inc
aad
or
pusha
scas
je
in
sub
push
std
insl
add
leave
mov
xchg
fcomps
cli
xchg
xorl
xchg
push
int3
adc
stos
pop
xor
cmpsl
aaa
scas
pop
lcall
push
jo
cmpsb
adc
push
sbb
loopne
vpsubb
call
push
es
mov
cmc
jne
std
insb
sbbb
insl
add
pop
cmp
movsb
sub
orb
mov
pop
in
clc
inc
xor
test
das
sub
xchg
or
sub
nop
aas
fcompl
out
jge
cmp
vmread
lcall
inc
leave
aam
lock
pop
adc
add
lods
mov
xchg
scas
or
push
add
sbb
mov
xchg
lcall
adc
xchg
fcomi
scas
pop
sbb
mov
push
repz
cmpsb
loope
aam
push
mov
out
xor
lcall
pop
push
or
clc
sbb
insb
aas
movsl
lods
sub
push
jge
stos
mov
and
pop
lahf
cmpsb
rol
lcall
nop
xchg
add
gs
or
andl
lret
xor
adc
xchg
aaa
scas
int3
add
push
adc
push
stc
sahf
shrb
inc
addl
or
mov
mov
push
in
test
cmp
outsl
pop
leave
push
inc
or
jg
shll
incl
stos
pushf
test
jge,pn
push
pop
mov
mov
dec
jo
add
jno
xor
scas
adc
mov
cld
lods
mov
in
stos
scas
pop
arpl
pop
pop
jge
sbbl
adc
pop
push
mov
rolb
xor
jns
push
and
mov
sahf
or
fisubrs
pop
pop
adc
lret
sarb
adc
popa
nop
xchg
dec
jge,pt
pop
stos
mov
aaa
inc
pop
aas
or
lret
call
jo
dec
ficomps
pop
xor
pop
imul
stos
push
mov
iret
xchg
fwait
mov
addr16
add
mov
dec
lea
sub
and
and
pop
loopne
pop
and
ss
ljmp
cli
mov
out
push
nop
cmp
scas
push
mov
fiaddl
cmpsl
add
dec
fxch
inc
fsubp
scas
clc
mov
notb
xchg
les
testb
push
mov
dec
mov
enter
shrl
rorl
popf
pop
inc
adc
data16
sub
xlat
call
dec
ret
sbb
imul
aam
arpl
movsl
push
sub
mov
dec
lods
jp
enter
pop
cld
in
fwait
mov
mov
inc
stos
xchg
outsb
divl
jns
rcl
cmp
pusha
jbe
mov
pop
loopne
pop
mov
mov
mov
cmp
jl
stos
mov
add
sbb
inc
mov
mov
mov
or
out
into
jae
out
cmp
enter
test
mov
inc
gs
pop
cmpsl
test
out
xchg
pop
sub
jae
rclb
js
pop
ds
push
inc
lods
jo
loopne
out
cmpsb
out
push
daa
popa
adc
push
pusha
xchg
insb
jp
mov
popa
ret
fdivp
inc
add
loopne
jb
mov
rcrl
in
out
icebp
pop
dec
pop
imul
mov
mov
insl
repnz
adc
out
or
lods
push
cli
dec
imul
xlat
xchg
iret
mov
popf
jno
movb
js
add
ja
fstpt
mov
jmp
mov
mov
ret
adc
sbb
push
or
dec
rorb
lock
cmp
test
in
sarl
push
out
popa
lea
popa
dec
idiv
mov
adc
loope
pop
inc
push
cmp
lock
hlt
adcl
inc
imul
pusha
imul
pop
sahf
cmp
ret
mov
sub
push
outsl
mov
and
repz
adc
xchg
add
ret
out
es
test
pop
mov
shlb
add
jp
fwait
ret
xchg
adc
rcrl
test
mov
loope
mov
es
mov
out
mov
adcb
sbb
sbb
jle
out
rcrl
adc
pop
and
push
mulb
xchg
sti
fs
shl
lret
mov
ja
mov
xchg
aaa
js
fcmovu
fnstcw
xchg
repnz
add
rcrb
add
dec
sub
movsl
in
jmp
gs
push
fsts
nop
hlt
addb
mov
or
loop
adc
mov
out
xor
add
shll
and
add
repnz
cmp
sahf
mulb
pop
xor
lcall
test
dec
or
and
fisubrs
cmp
iret
lret
mov
xor
mov
lcall
xchg
cmp
cmpsb
add
sbb
dec
mov
das
mov
pop
jecxz
les
cmp
jbe
xor
test
add
mov
mov
pop
fadd
scas
adcb
jecxz
lret
stos
inc
push
mov
imul
shrl
mov
ja
pushf
fstpt
pop
inc
das
repz
pop
out
sub
dec
xchg
mov
shrb
and
stos
or
stos
jl
mov
sar
movsb
adc
cli
jecxz
test
shll
cmpsl
jo
imul
mov
cwtl
sub
addl
push
sti
orb
dec
push
mov
add
sub
test
out
std
push
lcall
lcall
popa
cs
addr16
and
xchg
xchg
pop
xor
sub
or
imul
and
in
sbb
xchg
add
push
fistps
movsb
mov
mov
cmpb
sub
adc
stc
dec
adc
loope
fbld
ret
xchg
pop
iret
adc
dec
repz
dec
or
out
cwtl
xchg
test
or
pop
data16
add
addr16
addr16
pop
dec
sub
sub
jns
mov
test
mov
movsl
fwait
mov
xchg
sbb
fsubrs
lea
and
les
int
mov
lahf
xchg
adc
cwtl
std
jo
ficoml
xchg
mov
xchg
inc
xor
repz
aam
ja
ja
ret
xchg
jnp
shl
inc
mov
or
imul
es
outsl
add
ret
fnstenv
stc
out
mov
pop
xor
nop
add
pushf
jbe
in
scas
mov
inc
in
add
scas
xchg
cmc
imul
mov
popa
adc
ret
jns
jnp
ja
mov
sarl
fiadds
add
dec
sbbb
xchg
mull
xor
xchg
adc
test
push
hlt
mov
pop
mov
aam
add
loopne
stos
cmp
movsb
and
mov
rorl
add
addl
inc
push
je
push
sub
mov
scas
push
mov
jae
xchg
test
pop
ss
inc
fisttpll
shll
out
sbbb
lods
jp
mov
push
lcall
rorb
movl
and
sarb
mov
hlt
icebp
xor
pop
jns
or
sbb
push
mov
pop
clc
ljmp
test
into
xor
adc
pop
sub
push
fdivp
jmp
out
test
loop
bound
in
cmp
pop
imul
jecxz
jl
jne
cmp
pushf
out
xor
add
jns
pop
decl
adc
add
xor
aam
nop
ja
inc
sbb
mov
add
add
insl
ljmp
aam
cld
or
aas
mov
mov
dec
lret
rolb
mov
sbb
mov
push
push
jecxz
imul
cmp
notb
xchg
call
loope
inc
mov
mov
into
and
jb
fsubrl
xchg
fidivs
xor
add
or
aad
or
mov
cmp
mov
dec
pop
mov
add
repz
dec
out
lods
pop
xor
cmp
cld
hlt
cmp
fwait
insl
cmp
stos
push
sbb
and
mov
dec
mov
jecxz
mov
push
into
in
push
jge
daa
shll
pop
inc
insl
pop
dec
insb
data16
pop
sub
lea
xor
jne
out
dec
mov
xchg
adc
xlat
adc
pop
inc
test
pop
lds
pop
adc
cmpsb
sub
scas
add
test
dec
arpl
fsubs
xor
adcb
and
into
dec
test
xor
mov
inc
mov
cmp
jg
mov
stc
aas
and
rcrl
icebp
mov
fstps
rcl
push
shll
xchg
mov
sbb
cmpsb
cmovp
ja
jbe
test
in
std
pop
push
mov
push
aad
int3
xor
dec
sbb
adc
sbb
std
mov
leave
pop
adc
dec
out
add
xchg
xchg
dec
inc
cmpsl
mov
out
jne
imul
xchg
xor
ja
filds
sub
loopne
pop
sarl
mov
js
push
dec
mov
push
js
jae
ja
xchg
push
iret
daa
sbb
push
xor
test
dec
ficomps
mov
js
pop
rcl
xor
push
or
decl
fdivrl
lods
adc
dec
mov
mov
mov
add
mov
jmp
add
push
mov
mov
and
add
ja
gs
outsb
adc
icebp
cmp
pusha
add
inc
mov
jns
adc
pop
inc
jns
popa
add
cmp
push
in
pop
negl
lret
stc
and
sbb
cwtl
jns
cltd
adc
es
jns
pusha
sahf
test
or
ficompl
jno
scas
popa
mov
popf
jmp
cmp
lods
cmp
push
imul
cmp
mov
stc
stos
shrb
inc
cmp
roll
popa
pushf
subb
inc
mov
fidivrs
sbb
or
rorb
mov
xor
fnsave
aad
add
popf
movsb
dec
leave
cmpsl
mov
cld
repz
dec
cmp
popa
pushf
jbe
xchg
gs
adc
mov
cmp
sub
jmp
pop
repz
inc
add
xchg
add
lods
daa
push
in
pusha
xchg
scas
aaa
repnz
add
lds
je
cmp
mov
mov
pop
aas
cld
push
mov
aas
inc
dec
pop
in
xchg
add
sbb
loop
stos
xchg
outsl
sub
imul
mov
inc
int
cmp
or
or
inc
dec
cltd
les
pop
jl
orb
sbb
sub
inc
dec
or
and
leave
fisubl
lea
jbe
mov
and
bound
mov
hlt
xlat
shl
push
cld
jne
test
sbb
or
out
push
daa
and
add
xchg
ja
and
xor
xor
fsubs
mov
mov
inc
xor
adc
cli
aaa
push
add
std
sar
mov
jecxz
xlat
xor
cwtl
mov
adc
ljmp
rcrl
xchg
cmp
lock
in
mov
mov
ret
cwtl
pusha
sahf
and
push
fbld
jae
mov
sbb
add
mov
push
fldenv
jmp
pop
arpl
rcrb
shll
shlb
pop
mov
sub
cld
cmp
adc
je
fisubrl
movsb
div
lods
inc
dec
cmp
cmp
movsl
cli
inc
out
mov
or
loope
scas
sbb
divl
jl
movsb
cld
cld
sub
icebp
and
es
xor
mov
push
mov
cmp
or
leave
mov
inc
iret
fmull
adc
stos
adc
sbb
push
fcom
pushf
xchg
mov
xor
insl
outsl
call
out
xchg
testl
lods
cwtl
js
arpl
shll
pop
mov
dec
lea
and
push
push
cmp
push
jno
rorl
insb
push
sub
aas
loopne
push
lods
or
into
add
or
lret
push
out
mov
jnp
sbb
mov
dec
push
xorb
mov
out
inc
fs
push
jl
lcall
fnsave
pop
pop
jmp
cmp
mov
scas
jp
or
outsb
xchg
outsb
cmpsl
lods
mov
push
mov
repz
jnp
outsl
subl
push
xlat
inc
int3
jo
xchg
je
jmp
mov
mov
sub
test
and
insb
in
outsl
add
loope
dec
out
ret
stc
arpl
mov
leave
ficoml
in
dec
into
clc
xchg
add
dec
mov
mov
test
gs
shr
jle
mov
xchg
adc
and
sub
mov
inc
stc
inc
repz
add
adc
mov
xor
hlt
ljmp
mov
clc
jge
pusha
jns
push
ret
sub
push
pextrw
shr
addr16
xchg
loope
cbtw
push
mov
cli
ficompl
cltd
xchg
xchg
sahf
out
in
inc
faddl
jp
outsl
pop
sti
fdivs
out
iret
mov
mov
mov
ds
cmc
mov
in
dec
cld
push
mov
inc
mov
pop
test
fcomp
fsubrs
imul
pusha
jne
pop
loope
lods
inc
pop
pop
mov
inc
jge
xchg
cltd
aad
rclb
mov
movsl
inc
lea
adc
lret
incl
add
in
jbe
out
rcr
in
add
jl
iret
and
or
nop
lret
push
movsl
lahf
adc
sbb
out
add
push
pop
xchg
pop
push
andl
inc
xchg
jo
and
pop
int
stos
cmp
jge
loop
imul
out
mov
or
pusha
inc
pop
pop
test
orb
daa
pop
pop
pushf
ljmp
sbb
ja
xlat
imul
and
jns
and
push
aam
sbb
xchg
in
or
or
mov
mov
sub
sahf
and
cmpsb
cltd
shll
cmp
enter
pop
ss
loope
sbb
pop
in
ljmp
stc
inc
sub
sbb
xchg
add
lret
mov
jbe
sbb
inc
loope
lds
movsl
ljmp
inc
jmp
push
mov
cmp
movb
and
gs
rol
das
cltd
pop
je
ret
std
sub
sub
jns
or
sub
and
xor
xor
pop
adc
cmpl
cmpsb
adcl
inc
fbld
cmp
xchg
jle
imul
ret
push
jne
ljmp
mov
mov
negl
add
pop
or
ss
pop
stos
push
and
mov
fnstcw
add
jg
pop
sbb
add
jns
add
aad
dec
test
mov
into
test
ss
stc
pop
push
lret
xor
pop
test
in
pop
and
mov
lret
add
push
mov
adc
sbb
or
xchg
jge
cwtl
ss
xor
lret
sbb
or
mov
sub
test
pop
aam
add
sbb
inc
in
push
in
jecxz
sub
test
fldcw
inc
fwait
mov
mov
pushf
jg
fldenv
test
notb
pop
pop
jns
insb
daa
jne
scas
imul
mov
adc
dec
mov
or
outsb
push
jo
cltd
aam
cli
into
imul
xor
mov
jg
sub
pop
pop
lock
jbe
lock
in
sbb
leave
xor
cmpsl
xorb
lret
lods
add
es
psrlw
pop
xchg
cmp
push
jo
test
data16
roll
lock
xchg
ds
jnp
add
jp
movsb
cmc
rolb
or
and
loopne
insb
dec
rorb
lret
sbb
inc
mov
insb
cmp
push
mov
out
pop
mov
rclb
divb
lods
pop
mov
lds
jae
sub
cmp
pop
fldt
clc
sar
inc
les
inc
xchg
cmp
adc
lock
sbb
and
loop
xor
test
daa
or
xor
mov
xor
pop
gs
lods
or
inc
test
rclb
out
push
out
add
adc
sbbb
cmp
push
lret
dec
insl
inc
push
inc
lcall
inc
jo
bound
jge
push
loop
sti
adc
aaa
dec
outsl
fnsave
lahf
shlb
fldenv
cmc
mov
jmp
dec
add
enter
loop
and
lahf
inc
jg
or
cmpsb
cltd
es
inc
nop
inc
lcall
mov
mov
mov
pop
and
ds
dec
jecxz
cmp
adc
mov
push
cmp
dec
xor
xchg
xor
fcom
sbb
scas
fwait
cmp
and
jo
jae
aaa
sbb
or
fld
push
lods
nop
lret
out
lea
ljmp
jle
das
sub
ss
mov
xchg
je
ja
add
mov
push
outsl
pop
fwait
rorl
rorl
add
pop
push
push
scas
inc
fidivs
int
enter
scas
add
xlat
cs
add
ljmp
in
addr16
mov
jo
or
sub
xor
das
jmp
lret
jb
pushw
ret
pop
xor
pop
jbe
inc
hlt
repz
mov
jo
cmp
negb
xchg
roll
push
pop
cli
out
cs
xchg
cli
xor
fildll
andb
rcrb
cmpsb
adc
ret
out
shr
sub
negb
jb
incb
lds
inc
inc
call
sub
imul
mov
and
mov
sar
jmp
mov
pusha
jg
mov
out
and
xlat
mov
mull
jecxz
fnop
int3
nop
mov
icebp
into
mov
out
xor
loope
es
inc
inc
scas
inc
adc
fwait
xor
push
enter
xor
divl
test
xchg
and
lods
movsb
stos
out
push
imul
test
push
shr
cmc
mov
aad
push
movsl
mov
add
shlb
hlt
dec
ret
push
cmpsb
sub
roll
adc
js
sbb
loopne
daa
push
inc
gs
ds
and
movsb
pusha
cmc
jbe
pop
je
enter
mov
xor
xor
mov
xor
ret
xor
sub
fisubs
xor
loopne
out
in
popa
or
and
sti
leave
sbb
cld
das
pop
xchg
divb
xchg
pop
gs
mov
fnstcw
aas
scas
pop
aas
push
andb
sbb
in
and
mov
lods
add
inc
push
xchg
xlat
cld
dec
and
inc
je
into
outsb
sbb
cmp
int3
test
sbb
add
ja
xor
xchg
and
mov
push
push
fwait
push
lock
mov
and
mov
cmp
sub
cmpsl
test
stos
rcrl
sub
out
fcmovnb
cli
jmp
xchg
ljmp
mov
bound
pop
cmpsb
repnz
mov
ror
mov
jbe
pop
inc
nop
lret
popa
popa
dec
jmp
xchg
fidivrs
add
push
or
aam
jge
lcall
xchg
loopne
cmpsl
pusha
repnz
inc
add
icebp
outsb
sbb
icebp
mov
out
jp
inc
dec
nop
dec
sub
xor
or
sahf
jmp
jecxz
ds
xlat
sarl
mov
xchg
and
jecxz
test
gs
aam
mov
lret
rclb
ljmp
lcall
adc
sbb
pop
shrl
adc
sete
outsb
push
icebp
imul
mov
jne
pop
jnp
lcall
mov
stos
push
addl
pop
lret
push
enter
loopne
mov
int3
adc
adc
scas
stos
adc
jle
std
mov
ljmp
sahf
push
fdivl
shrb
and
xchg
dec
push
mov
add
leave
sub
sub
movsb
jmp
pop
subb
mov
icebp
jns
pop
inc
push
or
xor
icebp
cmpsl
aam
xrelease
call
movsl
pop
movsb
add
fnstsw
xor
adc
leave
mov
lods
pop
test
push
out
mov
and
dec
push
addl
aad
test
ljmp
fisttpl
in
rcrl
bound
xor
inc
pop
pop
inc
loopne
xor
push
push
lcall
lods
add
add
rcrb
into
jno
inc
cltd
mov
xchg
push
sbb
xor
inc
in
xchg
fistps
cmp
sahf
movsb
and
jmp
jns
jb
jl
add
jo
sub
notl
pop
shlb
and
mov
std
and
sbb
mov
cld
cli
cmc
inc
xchg
push
iret
mov
lret
hlt
int
push
mov
shll
imul
sub
ret
xor
popa
pop
jmp
popf
rcll
pop
adc
pop
ds
enter
mov
xchg
inc
sub
sbb
in
out
sbb
mov
test
xchg
inc
daa
sub
jge
in
mov
xor
out
stos
movsb
push
xchg
xor
sbb
cmp
jb
dec
shrl
xor
xor
inc
psubw
sbb
xor
stc
mov
mov
outsl
fcmovnu
mov
movb
hlt
or
jmp
inc
imul
push
jne
jnp
xchg
test
push
push
adc
mov
mov
ja
mov
andl
popf
out
imul
xchg
ror
imul
fld
push
sub
jb
aaa
pop
push
rorb
mov
loopne
xor
out
mov
and
adc
pop
mov
bound
jge
fcomi
mov
stos
add
je
xchg
repnz
dec
jg
jno
mov
mov
in
add
dec
pop
cmpb
mov
in
jmp
inc
stc
aas
pushf
xchg
lret
jecxz
sub
mov
dec
push
pop
push
add
iret
pop
ja
out
jno
in
lods
fstpt
pusha
xor
fsubr
push
cmpsb
cmp
pushf
inc
nopl
sbb
aaa
pop
push
pushf
in
icebp
into
xchg
jge
sbb
aaa
outsl
rol
test
pop
cmp
fdivrs
lock
pop
push
in
mov
push
and
outsb
int
push
push
aas
stos
mov
xchg
jge
ja
xchg
xchg
stc
adc
fsubrp
sbb
mov
je
xchg
lods
testb
pop
ss
pop
imul
into
gs
fs
inc
and
adc
xchg
inc
pop
rcrb
jne
pop
mov
pop
xchg
push
sbb
mov
jg
outsb
jno
jle
mov
dec
sbb
js
xor
pop
sub
xor
pop
mov
inc
push
in
popa
pushf
sahf
cmp
mov
mov
addl
cli
call
adcl
jmp
inc
or
rorb
sub
pushl
jecxz
jg
inc
test
cltd
in
xor
mov
xchg
mov
xchg
mov
addb
and
push
loop
test
lahf
out
cmp
inc
clc
jae
pop
inc
jmp
aaa
imul
out
jmp
in
mov
lcall
std
cs
jp
push
test
add
or
mov
clc
inc
sar
mov
xor
pop
pop
xor
fidivrl
inc
mov
fsubl
inc
loopne
sbb
inc
dec
mov
fwait
cmp
repnz
orb
call
jb
or
flds
sti
mov
jle
xchg
es
push
or
xchg
sbb
pop
test
lret
fwait
clc
daa
jae
fcmovnu
lods
adc
popa
stos
bound
jmp
jns
lcall
mov
int
scas
inc
cmp
push
std
outsl
pop
faddl
inc
ret
mov
gs
sub
shrl
ds
in
xchg
cwtl
lds
mov
add
bound
repz
cmp
roll
mov
xchg
lock
sbb
arpl
clc
push
cli
je
scas
pop
pop
dec
xchg
outsb
inc
or
lahf
mov
pop
mov
sbb
or
into
sub
and
add
cmpsl
cwtl
mov
sub
mov
iret
testb
and
mov
cwtl
addr16
inc
fadds
sub
dec
push
roll
lds
jnp
push
into
out
xlat
pop
pop
jb
pop
rcrl
cs
sbb
inc
sbb
fldt
lret
inc
xchg
mov
sahf
sub
sbb
xchg
mov
cmp
rolb
ficoml
mov
dec
stos
pop
xchg
lret
test
push
mov
fcoml
pop
pushf
scas
cmc
loope
inc
inc
shlb
and
fiaddl
movsl
mov
jno
rcl
xchg
xchg
movsl
test
js
clc
cmp
xchg
imul
bound
das
pop
jbe
pop
lret
mov
call
add
cltd
xchg
lods
jne
jg
inc
inc
out
inc
xchg
pop
mov
dec
push
ds
imul
les
loope
shlb
jge
cmp
push
fistpl
pop
pushf
les
repz
mov
inc
mov
mov
mov
sahf
adc
xor
mov
scas
ret
sub
stos
sub
push
sti
adc
incb
and
repnz
ds
xchg
jg
xchg
add
and
sbbl
decb
xor
mov
push
mov
xchg
ss
jge
mov
or
fsubl
mov
push
sub
outsl
sub
mov
xor
ficompl
xor
nop
jnp
pop
fcoml
or
or
cld
inc
adc
loop
pop
push
mov
add
mov
pusha
jns
andl
cs
fnstenv
adc
cmp
jl
sbb
dec
push
shll
test
push
push
stos
rclb
daa
sbb
adcb
xchg
cmc
insb
cld
push
jno
xor
pop
cmpsl
dec
push
imul
jmp
call
sub
jo
filds
shl
hlt
dec
fsubs
sbb
lea
sub
inc
xor
cmc
iret
jne
leave
push
faddl
push
ficoms
mov
into
mov
add
inc
cmpsb
or
xchg
xor
adc
push
fnsave
push
in
sbb
add
cmp
lock
xchg
dec
and
xchg
push
sbb
pop
mov
stos
pop
loope
inc
insl
stc
cmp
push
cmp
sbb
lds
cs
dec
push
xor
sbb
mov
mov
push
out
inc
mov
inc
pushf
xor
icebp
in
aad
test
aaa
popf
gs
xor
pop
jns
fidivs
mov
lods
ficoml
leave
ja
mov
fcoms
mov
aam
mov
std
out
dec
psraw
mov
xchg
loopne
xor
push
sbbb
call
mov
scas
sbb
cmp
xor
jbe
rolb
xor
cmp
push
pop
cwtl
or
mov
js
lods
mov
mov
jnp
pop
xor
inc
frstor
jmp
lret
outsb
call
out
inc
push
push
das
rorl
and
jge
jmp
xchg
jecxz
jmp
loop
or
jbe
gs
dec
inc
stc
mov
pop
cld
push
scas
repz
push
cwtl
add
fists
inc
dec
andb
addb
out
je
cmp
lock
sti
cmpsb
cs
mov
std
adc
sbbb
xchg
hlt
mov
sbb
inc
xchg
cmp
repnz
sysenter
mov
out
push
imull
jnp
fstl
ficomps
mov
jnp
sbb
jne
test
in
repz
movsl
fisubrl
push
andb
xor
dec
decb
mov
imul
mov
add
mov
mov
mov
xchg
rorb
mov
mov
test
sub
mov
clc
in
mov
test
nop
fwait
add
cmp
xchg
stos
test
mov
movsl
jl
and
mov
shlb
les
leave
movsl
test
fisubl
out
or
mov
in
fimuls
test
mov
fwait
jecxz
mov
adc
add
scas
mov
nop
gs
adc
mov
xchg
addl
sar
xchg
add
adc
push
sbb
mov
int3
test
insl
cs
or
or
ja
in
cltd
sbb
pop
jg
adc
and
orb
ret
sbbl
andl
stos
mov
data16
push
pop
fnstsw
cmp
mov
mov
sub
out
stos
mov
xchg
into
or
cmp
sbb
xchg
mov
push
and
mov
fimull
inc
outsl
dec
ret
lds
sub
sbb
add
jo
leave
int
mov
adc
xchg
push
int3
sbb
subb
add
aad
dec
loope
inc
aas
xor
inc
push
jb
mov
cmpsb
sbb
fldenv
stc
lea
hlt
dec
int3
xor
cli
insl
jmp
xlat
xchg
pop
sub
dec
mov
jge
push
adc
inc
pop
mov
scas
fdiv
sbb
sti
mov
call
dec
dec
push
jle
dec
sbbb
mov
data16
and
repnz
mov
jle
xchg
mov
xor
iret
jl
clc
or
lods
or
pop
sub
mov
jae
cmovbe
xor
pop
loope
push
rclb
and
sub
xchg
outsl
xchg
inc
fwait
into
pusha
mov
fsubr
adc
test
imul
jbe
movsb
mov
mov
negl
sub
push
in
arpl
jb
lock
xchg
pop
and
push
jno
inc
in
movb
mov
js
mov
in
jmp
clc
add
int3
mov
popa
sub
mov
and
push
es
popa
or
pusha
aaa
popl
or
gs
vpsrlvw
cwtl
mov
in
dec
out
sub
and
mov
roll
xchg
or
cld
sbb
fcmovu
mov
pop
sub
mov
mov
cmp
ja
in
icebp
jg
testb
clc
fbstp
sbbb
fcomp
pusha
sti
popl
stos
aad
enter
enter
hlt
mov
mov
push
out
xchg
cmp
repnz
xchg
cmp
jmp
pop
sub
test
clc
test
jae
hlt
sahf
pushl
jp
mov
icebp
hlt
push
push
shrl
imul
movsl
sbb
add
cwtl
adc
xchg
jmp
fwait
mov
sbb
enter
inc
mov
aam
cmp
loopne
jmp
cmp
imul
test
lods
cmpsl
jno
loope
ljmp
jge
arpl
into
push
mov
movsl
xor
mov
sarl
movsb
leave
pop
outsb
fcomps
pop
xchg
inc
loope
movsl
or
out
mov
les
rcl
push
jg
xlat
jmp
jae
fsts
lret
int
push
je
push
adc
jae
add
push
scas
jo
mov
test
mov
sbb
outsb
mov
movsl
push
xor
jns
mov
inc
mov
sbb
fldt
mov
mov
andl
sti
push
sbb
rol
in
pop
jns
push
mov
jnp
iret
in
xor
test
mov
fcmovne
mov
sbb
stos
sub
sarl
fldenv
and
or
xchg
daa
test
dec
or
jns
dec
andb
stc
push
test
inc
mov
pop
stc
imul
int3
xor
dec
ror
sub
rcrl
or
or
test
push
sbb
dec
in
rolb
pop
add
sbb
outsl
cltd
fildll
xchg
mov
xlat
sbb
test
pop
sahf
and
pusha
jnp
fistpll
enter
cmp
jmp
iret
das
incb
lds
ret
ror
mov
insb
xchg
jmp
and
cli
jbe
xlat
cmpsl
out
inc
ror
insb
mov
stos
xor
out
ror
inc
jmp
mov
inc
cltd
dec
xor
sub
jbe
inc
pop
cmp
mov
int3
cli
insb
ja
dec
ret
loope
mov
mov
inc
pop
jb
jge
in
imul
sbb
rol
xchg
mov
dec
mov
sub
jne
ds
shll
fimuls
icebp
shlb
sub
pop
rcrb
aad
leave
mov
and
push
outsl
sub
mov
sbb
adc
lret
pop
outsb
data16
push
fsubs
enter
jae
cld
out
mov
fsubrs
jnp
push
inc
mull
xchg
mov
push
ret
icebp
rcrb
jecxz
in
push
out
push
mov
scas
pop
test
arpl
lret
inc
ljmp
xchg
arpl
cmp
movsb
xor
mul
inc
ffreep
nop
mov
stc
sub
jo
mov
jle
ret
mov
fincstp
popa
das
in
aad
xlat
imul
movsb
imul
cmpsb
movsl
inc
sub
add
in
push
xchg
push
mov
mov
push
pop
dec
xchg
sub
stos
pusha
mov
push
hlt
push
mov
inc
mov
outsl
xor
pop
js
rorb
imulb
hlt
fists
pop
sbb
adcb
daa
cli
fidivl
pop
add
pop
push
fimuls
add
mov
out
stos
repz
cvtps2pi
cmp
mov
xchg
adc
iret
test
fcomp
sbb
push
adc
add
push
ljmp
sbb
outsl
dec
gs
jecxz
imul
adc
addl
in
jo
jmp
mov
lahf
aas
aad
mov
sub
push
dec
insl
dec
jns
icebp
jbe
je
rclb
mov
es
pusha
lods
arpl
push
aad
bound
or
notb
jp
jo
dec
pop
lds
ds
or
inc
xchg
cmpsl
out
imul
gs
arpl
cwtl
insb
mov
leave
jmp
adc
iret
js
cmp
pop
or
mov
shll
and
cmpsl
xor
imul
frstor
adc
insl
ret
fwait
mov
jns
xlat
and
out
fists
sub
xchg
ret
xchg
std
dec
xor
int3
or
mov
addr16
and
jle
ret
xor
lea
sbbb
sub
cmp
rcll
dec
mov
sbb
push
mov
mov
jbe
xchg
lcall
addr16
cmp
sub
pop
test
mov
xchg
jne
jp
ja
jg
lods
add
sub
sbb
addb
and
lds
inc
cmpsl
ljmp
or
push
xchg
out
cmc
notl
add
addr16
push
adc
lea
clc
cld
or
ljmp
cmp
push
out
jne
mov
movsl
add
leave
jno
add
or
sarb
mov
and
cmp
jl
pusha
sbb
lar
xor
xor
mov
ss
lret
jne
and
inc
stos
cmp
stos
add
mov
adc
lock
push
dec
popa
sbb
fdivl
test
add
mov
jne
hlt
sub
mov
mov
push
push
lea
shrb
inc
mov
jae
mov
xchg
push
adc
fmuls
cmp
mov
mov
movsb
inc
adc
and
stos
popf
or
mov
cmp
pop
mov
push
cld
ljmp
hlt
push
sbb
rcrl
adc
ja
lahf
sub
dec
xor
and
daa
push
jae
inc
xchg
movsl
xor
jne
imul
sub
mov
push
aam
cli
rorb
lahf
in
and
fs
out
sbb
or
mov
dec
adc
pushf
push
push
xchg
mov
fs
int
lahf
adc
push
pusha
outsb
je
out
out
jg
pop
mov
stos
das
pop
dec
fcomps
out
xchg
out
aaa
adcb
movsl
in
xor
pushf
mov
lds
inc
mov
nop
aas
jmp
int
pop
cmp
mov
jecxz
dec
pop
mov
mov
je
packuswb
call
pop
cmc
idivb
icebp
dec
xchg
or
dec
inc
xchg
iret
fwait
pop
and
cmp
lcall
push
sarl
add
aas
add
mov
repz
pop
stos
cmpsb
sbb
aad
nop
cltd
aas
pop
aaa
aad
jns
popa
add
scas
add
dec
cltd
cmc
mov
sub
adc
pop
test
pop
fwait
mov
scas
aad
xchg
cmp
cld
xchg
push
dec
cmp
ds
pop
mov
and
negl
jle
popa
mov
mov
test
test
xchg
adc
js
arpl
and
sub
add
outsb
add
stos
mov
imul
lret
pop
sbb
test
stos
out
daa
jg
enterw
into
adc
add
leave
xor
mov
mov
jno
fwait
stos
mov
scas
push
dec
in
mov
mov
fcoms
xor
sahf
test
idivb
test
loop
adc
inc
mov
push
in
xor
imul
pop
pusha
ret
adc
pop
bswap
xlat
sub
dec
jbe
mov
stos
xor
dec
sbb
mov
movl
pop
call
outsb
scas
adc
sbb
mov
fwait
lods
cmc
ret
lcall
jmp
mov
nop
xchg
test
aaa
xchg
and
add
cld
inc
cmc
pushf
pushf
lods
insl
push
stos
sbb
cs
fstps
or
mov
ds
or
invd
push
popf
ja
dec
std
xchg
sti
sbb
andl
cltd
fcomip
push
fwait
xor
stc
and
stos
xchg
outsl
lcall
mov
cld
in
out
xor
arpl
and
ret
mov
or
test
fnstenv
xor
xor
jg
and
push
inc
mov
into
leave
lcall
punpckldq
hlt
jae
sub
out
sub
mov
add
adc
int
push
jecxz
les
bound
pop
jge
pop
es
les
fidivrs
popf
icebp
cwtl
cmp
push
and
adc
mov
mov
scas
lock
push
or
loope
pop
push
xchg
inc
es
mov
insl
adc
out
adc
push
jns
sarb
bound
push
sbb
and
xchg
repnz
sbb
dec
or
xchg
stos
inc
out
fnsave
mov
push
jne
adc
xchg
dec
mov
inc
loop
repnz
popa
and
sahf
jbe
daa
and
pop
dec
dec
into
sbb
popf
inc
cs
nop
mov
mov
mov
subb
fstps
lret
mov
xor
or
sub
cmp
dec
pusha
pop
std
fldcw
lret
in
cmp
mov
sbb
adc
add
push
push
adc
xor
lock
aam
mov
ret
das
fildl
insb
orb
jl
mov
mov
mov
ret
in
fisttpl
sub
sub
sub
fdivs
mov
out
mov
in
pop
scas
in
jp
lods
outsb
add
sbb
adc
xor
xor
xchg
je
xor
mov
shr
cmpsl
test
adc
mov
pop
scas
mov
add
pop
push
jmp
lds
ss
xchg
dec
or
inc
cld
jbe
cld
pop
lret
push
cmp
xchg
pop
cwtl
adcb
jnp
aad
ja
mov
xor
add
lret
push
movsb
je
sbb
add
fs
imul
add
pop
cmp
cmp
enter
xchg
js
mov
xchg
mov
lret
dec
xchg
push
mov
push
repz
into
inc
and
or
and
movsl
dec
sbb
xchg
mov
loopne
inc
or
int3
mov
dec
jno
testb
jmp
test
jmp
xchg
pop
cli
and
scas
test
mov
mov
push
sbb
lahf
shlb
movsl
inc
mov
rcrb
dec
dec
into
iret
dec
mov
rorb
cltd
mov
dec
fisubl
das
out
ss
mov
stos
pusha
xchg
pop
xchg
and
clc
jp
xchg
outsb
push
stc
dec
inc
jne
sbb
lds
pop
mov
shlb
cmp
ret
and
out
imul
ss
xchg
loopne
addr16
push
cmp
and
ljmp
pop
mov
icebp
jecxz
adc
or
fs
mov
inc
shll
sbb
xor
xor
inc
aam
sbb
and
mov
sbb
adc
mov
call
mov
cmp
xchg
push
dec
jmp
mull
out
xor
xchg
xchg
in
push
jge
stc
xchg
movsl
sbb
popf
pop
insb
adc
mov
in
mov
rcrb
jg
in
fs
push
lock
mov
xlat
aaa
loope
inc
mov
mov
jno
insl
test
sti
xor
inc
push
dec
pop
fldenv
pop
movsb
inc
test
xor
pop
mov
sub
cmp
sub
mov
ds
loopne
mov
aas
push
mov
and
sub
jnp
adc
sub
jmp
or
bound
lods
enter
clc
pop
pop
mov
add
ljmp
or
pop
lods
sub
sbb
testb
fsts
cwtl
adc
push
sub
jmp
push
add
push
mov
loop
das
test
push
and
adc
fadds
enter
inc
imul
xchg
popa
push
and
out
fimuls
adc
in
jae
mov
test
mov
mov
jp
addb
int3
fldenv
fisubrs
jno
ficoml
sbbb
fiadds
xor
popf
movl
jmp
in
hlt
mov
push
lods
stos
push
int3
pop
push
sub
arpl
daa
into
push
inc
ret
in
orl
scas
and
push
sbb
xchg
loope
mov
mov
sbb
push
mov
mov
test
clc
pusha
push
push
out
rcrb
inc
push
add
aad
inc
jmp
push
imulb
rcrl
fs
ret
fs
sbb
jne
cmp
mov
bound
inc
add
and
add
xor
in
cmp
dec
push
lea
push
mov
rorl
popa
or
add
sbb
mov
shrl
xchg
pop
jg
adcl
push
mov
dec
in
push
cltd
mov
maxps
mov
sbb
out
jmp
in
insl
jbe
hlt
add
mov
stos
movsb
xchg
xor
inc
pushf
mov
pop
sub
cmpsb
daa
clc
popa
int
loopne
push
ret
sti
add
pop
or
cwtl
jge
mov
pop
xor
js
ja
mov
sub
mov
test
pop
xorb
or
mov
ret
lods
dec
inc
adc
ret
cmpsb
lret
aas
clc
push
shrl
in
lret
add
mov
loope
imul
sarl
lcall
mov
ret
into
movsl
pop
pushf
dec
pop
negb
pop
jmp
imul
stc
dec
mov
xor
mov
ret
add
jle
pop
mov
pop
loop
mov
data16
test
mov
mov
push
mov
xchg
sub
test
jnp
jmp
mov
xchg
test
add
xchg
les
mov
rcl
inc
add
mov
js
xor
dec
jb
sub
rcl
and
add
fcompl
fwait
mov
xchg
repnz
test
arpl
out
repz
std
out
push
lahf
ljmp
testb
stos
pop
or
pushf
or
lods
cmc
add
or
xor
and
xchg
out
xchg
fldenv
pushf
shlb
outsb
lahf
popf
test
ja
dec
mov
sub
andb
jl
or
cwtl
ret
test
jnp
test
cmpsl
inc
sarb
push
pop
aas
mov
dec
inc
jae
aad
outsl
repz
out
dec
loope
dec
call
sbb
in
nop
mov
mov
fimuls
sbb
add
push
and
test
cmp
pcmpgtw
sub
push
and
cld
mov
das
insb
and
daa
jb
cmc
mov
bound
xor
cmp
sub
mov
or
fwait
ss
adc
mulb
loopne
sbb
lods
cmpsb
dec
stos
jp
jnp
out
cld
jmp
add
jo
push
fwait
lcall
push
bound
sub
dec
xchg
aas
mov
sbb
pop
addr16
dec
in
or
lea
or
pop
xchg
imul
aam
imull
call
jne
pop
fildll
inc
cmp
pop
xorl
sbb
negb
icebp
aaa
pop
aaa
scas
push
aaa
std
push
dec
cmp
popf
scas
out
xchg
mov
dec
pop
mov
adc
in
mov
imul
ja
and
mov
lahf
or
xchg
xchg
test
mov
cmc
mov
inc
xor
push
in
sbb
jae
push
out
sarb
mov
xor
adc
enter
sbbb
es
sahf
ret
lods
inc
lret
xchg
daa
jno
cmp
jmp
in
test
and
xchg
push
call
adc
mov
subl
addr16
testl
popa
and
xchg
loop
stc
int3
add
jno
add
inc
dec
dec
sbb
ss
lcall
add
mov
icebp
mov
popf
dec
int3
jb
mov
gs
push
mov
out
add
jb
mov
loope
xor
lods
stc
aaa
stc
lods
das
push
popf
ja
int3
cmc
mov
sub
dec
rol
and
pusha
pop
pop
loop
jl
stc
or
les
out
and
dec
pop
mov
in
push
ljmp
xor
std
and
push
popa
push
hlt
sub
and
or
or
dec
loope
push
jo
scas
lods
dec
push
mov
push
dec
or
ss
fmulp
aam
sahf
mov
or
xchg
stos
je
jae
addl
aas
movsl
leave
mov
test
popf
stos
and
shrb
mov
fnstcw
in
lahf
cli
fmul
adc
lock
into
or
inc
outsl
push
and
mov
lds
pop
lret
loop
sub
ja
rcrb
into
in
mov
jae
lret
mov
xor
adc
push
fwait
cltd
sbb
ss
mov
xor
pop
mov
jmp
stos
sarl
enter
dec
test
fs
mov
sub
or
loope
and
fs
xor
shll
jmp
xor
repz
xchg
cs
cmpsb
xlat
fsubrs
in
inc
push
pop
push
lret
inc
sub
push
insb
inc
jg
cli
cmc
pop
nop
movsl
out
and
pop
cmp
pop
adc
stc
pushf
dec
dec
jmp
ljmp
sbb
xor
dec
mov
daa
in
jl
sub
push
jb
fnstenv
sbb
jmp
stos
movsl
jnp
insl
pop
jmp
mov
mov
adcl
cld
pop
sbb
sti
les
data16
test
lcall
sub
pop
lock
cmp
enter
xorb
dec
jb
repnz
jnp
pop
mov
pop
lcall
lods
clc
lret
fsubl
jg
sub
test
aas
mov
in
in
test
jmp
xchg
xlat
push
das
test
pop
test
dec
aas
push
loopne
nop
and
push
fmuls
mov
mov
incb
dec
mov
lcall
dec
push
inc
inc
lds
xlat
lcall
push
das
jecxz
outsb
mov
sbb
movsl
add
xchg
test
and
fld
cwtl
xchg
enter
loope
jp,pt
movsb
inc
clc
fldpi
mov
popf
addr16
repz
lret
mov
sub
rcll
and
ja
incl
imul
addr16
ds
pop
adc
dec
push
mov
xchg
ja
je
mov
pop
xor
jp
test
cmp
out
add
mov
mov
mov
mov
insb
cld
cmp
cmc
add
insb
xor
ror
mov
out
adc
mov
in
inc
xor
add
mov
add
in
sahf
pop
mov
lret
cmpsl
mov
dec
pop
xchg
stc
mov
sahf
mov
xlat
dec
dec
fnsave
adc
in
pop
dec
cmpsb
cld
mov
pop
add
or
pop
das
xchg
shll
sahf
out
cwtl
addb
fsubr
fnstsw
mov
loopne,pn
mov
mov
in
es
xor
aad
pop
out
enter
or
out
jbe
push
jne
cmp
out
js
test
arpl
sub
movsb
dec
xchg
and
mov
xabort
sbb
rclb
xor
adc
and
ja
mov
lock
lock
loope
sbb
pop
shl
sar
xchg
sarb
mov
lret
test
repnz
lock
sub
sub
dec
jb
jg
or
ja
js
cmpsb
fcoml
mov
jb
ret
out
or
jne
add
cli
jo
lret
pop
ret
out
fisubrl
ficoml
roll
popa
rcrb
cwtl
inc
mov
cmpb
sbb
xchg
mov
mov
mov
push
sub
ss
and
pop
pop
pop
gs
jno
push
push
or
push
xor
adcb
icebp
fistl
sub
mov
jo
pusha
mov
addl
mov
enter
subl
lahf
cmp
xchg
mov
add
cmp
jne
adcl
jle
mov
stc
mov
lcall
test
cmp
gs
stos
into
jg
or
cwtl
rorb
lret
imul
iret
mov
inc
in
repz
insb
jecxz
and
sahf
mov
scas
mov
test
push
clc
daa
loopne
lcall
or
fstps
pop
inc
rcrb
lds
bound
cltd
and
lret
push
pop
es
sarl
push
in
mov
jne
rolb
loop
hlt
mov
out
pop
mov
aam
rol
or
jbe
insb
pop
out
cmc
cmp
fdivs
icebp
sbbl
fbld
and
jno
mov
cli
repnz
ret
aam
arpl
loope
lock
gs
inc
out
sbb
mov
jp
movsl
or
js
push
sti
aad
or
sub
enter
dec
ds
dec
mov
movsl
enter
hlt
scas
insl
dec
mov
xchg
data16
mov
imul
lods
xchg
popa
mov
fdivrs
ret
dec
mov
mov
sbb
mov
jl
jbe
mov
sbb
in
xorl
lahf
sbb
add
adc
push
push
or
push
add
lret
adc
or
adcb
adcl
sti
ficompl
sti
or
or
xchg
imul
leave
scas
jmp
or
mov
pop
int3
dec
mov
cmp
mov
add
mov
inc
dec
rclb
xor
lock
xchg
clc
xor
inc
adcb
jl
test
gs
jae
test
aad
fsubrl
push
subl
and
sbb
and
shl
xchg
movsl
inc
push
xchg
lods
mov
enter
jmp
js
shlb
fisttpll
cmpsl
adc
or
insl
fwait
into
inc
dec
lods
push
and
aas
imul
jmp
inc
mov
call
aas
cmp
je
jo
xchg
inc
loopne
mov
xchg
mov
or
jg
jbe
cld
add
loope
sarl
add
push
out
sahf
jecxz
aaa
push
loop
rep
cmp
repnz
sbb
jbe
movsl
mov
adcl
xor
mov
nop
mov
sti
mov
lock
and
xor
int
mov
les
das
or
inc
pop
mov
adc
xchg
enter
test
mov
mov
mov
mov
jle
adc
xor
fdivl
lret
orps
mov
pushl
pop
adc
mov
or
or
mov
in
test
sti
mov
data16
sbb
and
cmp
mov
sbb
std
cli
or
lahf
cmpsb
icebp
mov
or
loope
add
push
mov
lret
out
and
mov
in
aaa
sub
stos
mov
xor
or
cmp
jge
xor
adc
imul
xchg
xchg
fiadds
mov
sbb
scas
jbe
xchg
lods
shld
cli
iret
xchg
stc
ret
dec
mov
or
fcom
xchg
ds
cld
jle
scas
dec
movsl
repz
ret
push
arpl
hlt
mov
loop
stos
cs
adc
sbb
cmp
sbb
jmp
loop
jnp
cmp
jae
sbb
subb
data16
daa
in
fstps
in
mov
pop
js
fwait
jnp
push
test
jb
pop
jns
and
addr16
cwtl
lret
adc
outsl
lret
push
sbb
dec
adc
dec
xchg
push
mov
jl
add
cmp
push
xchg
adc
add
lea
inc
gs
adc
add
push
fsubs
test
xor
fsubs
mov
lret
push
push
loopne
pop
aaa
inc
repnz
or
mov
adc
movsb
dec
ss
push
lock
xor
lock
inc
jge
inc
mov
push
sub
negl
mov
inc
insl
or
test
js
fsubs
xchg
xor
pop
or
cmpsl
roll
ficoms
ret
shl
pop
pop
cld
xor
hlt
into
jno
cmc
lds
mov
ljmp
clc
mov
jl
mov
mov
adc
jg
movsb
hlt
push
push
lahf
int3
pop
std
call
push
add
cmp
lods
inc
aaa
or
jp
pop
or
rolb
sbb
cmp
xor
cmpsb
in
das
mov
cmp
pop
roll
aas
sub
inc
mov
push
xchg
test
cmp
mov
loopne
xor
sbb
mov
call
aaa
lret
xchg
and
push
sub
lock
stos
test
add
pop
sub
addps
in
mov
cmpsl
adc
push
push
sub
divl
sbb
pop
fildl
enter
mov
adc
cmp
lret
rcr
push
push
jno
adc
lea
ret
stc
push
sti
jp
nop
cmpsl
pop
cmpsl
in
mov
movl
mov
mov
pop
inc
cmp
ds
cwtl
inc
enter
je
mov
xor
add
in
out
inc
sub
int3
and
aad
push
push
inc
int
push
mul
xchg
imul
or
add
sub
xchg
jp
mov
inc
es
xchg
cmp
lret
je
cmp
inc
mov
in
mov
shlb
inc
xor
mov
sbb
pop
dec
mov
cmp
mov
mov
lret
pop
inc
aad
or
mov
aam
mov
xchg
dec
ror
mov
jle
inc
fstpl
xchg
push
mov
or
test
push
cmp
fldt
add
mov
clc
sbb
dec
add
cli
inc
jno
inc
jno
push
test
fnstcw
inc
mov
fnstenv
jge
or
xor
jle
mov
adc
dec
int3
inc
add
adc
adc
sahf
jge
pusha
fisttpl
ja
negb
shll
adcb
xchg
lret
lcall
push
in
inc
ret
lods
mov
lret
int
mov
clc
addr16
cs
repnz
out
sbb
nop
inc
xor
cmp
pop
and
xchg
mov
testb
jl
arpl
lahf
push
pop
hlt
lret
aam
jecxz
cmp
add
mov
mov
out
and
xor
loop
aas
scas
loop
cmp
and
xchg
or
inc
nop
jno
xchg
push
push
fstp
dec
adc
cmp
or
out
mov
pop
xchg
fisubl
mov
dec
xchg
push
imul
dec
stc
nop
push
daa
and
add
int
sub
cmp
dec
cmp
xor
xor
jne
jmp
jne
adc
mov
jns
insb
dec
jecxz
mov
mov
push
fimuls
xlat
sti
sub
pop
jnp
dec
loopne
subb
and
dec
sbb
add
pop
call
jns
xor
xor
arpl
lds
fdivr
jbe
clc
dec
repnz
mov
mov
mov
adcb
jne
addr16
hlt
xchg
dec
fcmovbe
push
pop
out
mov
in
and
inc
movsl
roll
add
push
inc
popa
lds
push
jecxz
test
pop
mov
dec
adc
movsb
es
jns
in
rcrw
fmuls
cmp
fsubl
popa
mov
sub
and
cli
aad
and
lret
insl
stos
out
pop
dec
mov
into
mov
mov
jle
aas
or
mov
rolb
ljmp
push
test
and
imul
and
ljmp
jb
add
loopne
shrb
push
call
dec
fsubrl
arpl
pop
lea
loop
and
inc
scas
inc
or
mov
mov
iret
ja
dec
scas
ljmp
not
xchg
icebp
roll
mov
mov
rcrl
add
aad
jmp
dec
je
es
int
lods
push
dec
cli
pop
cmp
test
int
fmul
mov
es
jb
pop
jne
sub
inc
mov
je
dec
lods
push
jae
ja
add
jmp
out
xchg
adc
xchg
mov
shl
cmc
filds
mov
xchg
mov
pop
test
andl
leave
adc
sbb
push
jno
sbb
sbb
push
jb
jae
addr16
xchg
mov
adc
cmc
lahf
into
sti
mov
push
les
ret
xor
clc
fcoml
rcll
out
push
inc
nop
or
in
popa
or
jge
pop
test
pusha
into
sub
cli
lods
push
adc
push
push
xchg
std
mov
add
xchg
sbb
aam
mov
adc
xlat
push
aaa
sbb
icebp
hlt
xor
sbb
and
dec
add
or
cld
pop
into
icebp
inc
mov
push
jp
call
lds
call
dec
imul
jb
ljmp
popl
call
sbb
dec
mov
hlt
push
lret
les
push
fdivrp
push
cld
or
dec
outsb
insb
or
xor
adc
in
pop
aam
pop
hlt
push
inc
mov
xor
xchg
sbb
mov
shlb
shrl
mul
je
dec
inc
sbb
nop
add
mov
xchg
xor
fwait
ja
jne
add
testb
adcb
adc
mov
jmp
sbb
jge
scas
ret
fwait
shlb
cmc
lods
jp
xchg
scas
lret
jg
sub
stos
adc
xchg
in
mov
or
dec
jo
add
stos
mov
aad
shl
mov
hlt
loop
pop
mov
insl
add
sbb
inc
pop
xor
jnp
jg
push
lods
pusha
mov
arpl
cltd
cmc
sub
jmp
enter
jle
pop
cld
shlb
push
xor
pushf
jae
ja
lea
addb
clc
mov
cmp
cli
dec
paddq
int3
push
or
int3
xchg
sarb
cwtl
aad
shlb
cmp
mov
inc
cs
jge
mov
xlat
sub
outsb
xor
cs
inc
sbb
jp
pop
addr16
jne
insb
pop
ja
ret
pop
testl
cmpsl
sub
inc
pop
mov
loop
shlb
testb
roll
mov
jae
mov
ja
imull
mov
je
repnz
or
test
popf
cltd
pop
lea
xor
fdiv
ret
sbb
ret
je
xchg
ja
xor
xchg
pushf
sub
mov
mov
pushf
cmc
fldenv
push
std
notb
cs
cld
imul
mov
out
pop
hlt
cmp
jno
fwait
mov
fidivrl
mov
mov
sub
insl
arpl
es
jl
xchg
cwtl
or
mov
sub
sbb
push
push
in
sbb
scas
insl
aam
lret
roll
mov
push
or
movsl
mov
rcrl
shrl
hlt
loope
dec
inc
mov
and
std
movsb
aad
cmp
inc
mov
fistpll
pop
pop
mov
jno
lock
jno
scas
lret
cmpb
xchg
iret
lret
popa
xlat
popf
test
scas
push
out
loopne
ss
mov
and
rolb
mov
add
rclb
fdiv
xchg
std
out
add
or
push
ds
adc
repnz
or
xchg
xor
in
pop
xchg
mov
dec
lock
sti
sub
addr16
lret
ds
enter
and
pop
insl
cwtl
sarl
xchg
jge
sti
inc
xor
scas
cmp
stc
add
pusha
mov
ja
dec
cmp
mov
inc
lret
inc
or
es
sbb
cmp
jmp
fistpl
jg
mov
popa
or
pushf
adc
add
xchg
es
paddusw
pop
mov
mov
inc
jle
sub
sub
sub
xor
jp
lea
jp
inc
push
out
lea
xor
shlb
lcall
xchg
cmp
push
dec
or
mov
sbb
shrb
ret
aaa
negb
jle
mov
lods
addr16
ret
add
pop
pop
pop
dec
sahf
cmpsb
mov
aaa
das
sbb
dec
jno
data16
jecxz
pop
in
scas
into
sbb
sbb
incl
ss
in
xor
aaa
call
je
pushf
push
mov
js
jns
fbstp
dec
stc
mov
imul
insb
lret
jge
std
and
int3
mov
ret
sti
das
jge
xlat
ljmp
insb
cwtl
or
sub
in
and
pushf
jae
mov
sahf
dec
pop
add
jae
arpl
mov
aam
scas
adc
ljmp
mov
cmc
fs
xchg
dec
movsl
iret
lock
pop
xchg
popf
and
test
repnz
inc
shlb
sbb
daa
test
sarl
fadd
sbb
mov
cmp
add
jl
mov
aam
xchg
mov
insl
jo
xor
test
mov
in
push
ljmp
xor
cmp
pop
jns
xchg
jmp
jl
xchg
mov
xchg
push
sbb
mov
imul
pop
imul
out
mov
jl
imul
add
pop
cmpsl
xchg
loope
imul
adc
dec
mov
cmp
mov
sti
inc
add
mov
jg
insl
push
mov
test
dec
outsb
jge
ret
addr16
mov
push
sbb
rolb
loopne
mov
lods
xchg
mov
push
xchg
xchg
adc
pop
pop
cltd
xor
in
adc
adc
lea
sti
sar
sub
and
xor
test
sub
ret
cmp
gs
outsl
int3
sub
lods
loopne
outsl
ss
jb
mov
popa
mov
xorb
incb
clc
jecxz
ucomiss
sbb
punpckhdq
std
jo
daa
pop
and
jo
sub
stos
lods
lahf
xchg
outsl
inc
mov
inc
mov
mov
loop
test
outsb
dec
lods
inc
sub
add
or
bound
fdivl
cmp
in
mov
add
cmc
or
movsb
xchg
and
lcall
pop
sbb
dec
cmp
insb
add
and
adc
push
nop
in
loop
adcb
sub
cmp
pop
xchg
push
orl
and
lahf
mov
or
jae
jg
dec
push
lcall
adc
in
ljmp
movb
lods
orb
popa
enter
add
inc
outsl
sbb
add
cwtl
push
jle
and
xor
movsl
mov
jb
cmp
push
lret
mov
iret
add
jge
in
xchg
mov
std
jbe
and
in
in
mov
sbb
cli
xor
std
mov
mov
xor
inc
aad
cmp
push
imul
inc
pusha
fs
sti
add
stos
mov
cmp
cli
imul
push
cmp
jb
xor
jg
shll
sbb
in
cmpsl
add
lret
cmpsl
lret
scas
mov
or
arpl
dec
test
and
pop
in
inc
lea
adc
test
int
mov
imul
fwait
js
out
out
adc
fisubs
pop
fisubrl
adc
cmp
cmp
leave
lret
or
mov
mov
dec
mov
and
jnp
sub
addb
sbb
pop
mov
push
rcr
shll
scas
sbb
mov
mov
rcll
jno
sbb
push
xor
outsl
shll
aad
push
aad
inc
fs
xor
sahf
int3
pop
and
fs
ljmp
mov
out
sub
popa
pop
insb
cmpsl
ljmp
add
jmp
sarb
fcoml
loope
or
mov
std
and
jne
fstl
inc
mov
or
push
in
cwtl
jne
add
adc
mov
ret
and
push
sub
outsl
jmp
inc
in
xchg
in
in
pop
ss
fwait
mov
rolb
aam
cmp
ret
mov
out
dec
cmovb
ja
push
lock
es
push
jmp
xor
movsb
in
inc
lea
in
int3
sbb
jns
and
jno
mov
out
lcall
int
pop
sbb
jp
test
lahf
mov
icebp
test
pand
leave
push
aam
xor
aad
xchg
imul
cmpsb
mov
xor
pop
fsts
mov
gs
in
dec
fs
test
insb
ds
jno
orb
sub
insb
call
lret
adcl
sbb
insb
stc
xchg
sti
xor
pop
add
push
xlat
or
xchg
outsb
adcb
push
cld
pop
xchg
loop
int
jl
loop
dec
jmp
aad
ficoml
inc
addr16
dec
ss
out
jae
mov
xchg
popa
aam
and
cmp
xor
push
adc
into
mov
cmpsl
mov
into
mov
push
icebp
push
enter
aas
mov
hlt
xorb
cld
fsubrl
mov
mov
pop
xchg
cmp
sbb
cmpsb
xchg
pop
icebp
xchg
sub
imul
pop
imul
inc
jl
mov
and
sti
push
dec
nop
sbb
xor
je
fldt
cs
lret
cmpsb
sbb
mov
mov
inc
pop
sub
cmp
xchg
inc
push
cmp
mov
ss
mov
mov
dec
inc
imul
jae
mov
dec
or
scas
outsb
inc
push
int
mov
push
fistpl
cld
std
sarl
out
int
outsb
jno
adc
shl
sti
inc
mov
jmp
std
and
mov
push
idivb
mov
inc
adc
xlat
inc
pusha
push
clc
fisubrl
les
ljmp
jae
push
sarl
ss
jle
fcoml
aad
xor
es
dec
sti
or
mov
xchg
fmull
adc
sub
inc
cmp
mov
mov
fmull
into
scas
addr16
fdivrs
in
stc
mov
cmpsl
fsubrl
inc
xor
or
cmp
cmc
xchg
mov
jb
pop
lds
sbb
inc
mov
cmpsb
jg
dec
shrb
mov
mov
add
stos
inc
push
iret
sarb
cmp
stos
fadds
outsb
xchg
int
pop
test
jge
repnz
jb
ljmp
mov
ja
rcll
call
lea
test
lahf
dec
inc
loop
movsb
adc
popa
pop
mov
mov
je
push
dec
pop
mov
push
das
nop
push
add
xchg
mov
xchg
repnz
lods
mov
sub
jns
xchg
fildl
sub
cmp
xchg
adc
das
sbb
test
popf
mov
fxch
bound
cmpsb
xor
sarb
ljmp
push
jne
nop
adc
and
mov
sbb
ss
cmp
ss
dec
in
cmpsl
fidivs
lahf
movsl
ret
add
ljmp
jno
pop
mov
je
imul
loop
mov
cltd
adc
adc
inc
jge
testb
imul
stc
adc
js
jmp
cmp
inc
push
mov
fistl
daa
push
inc
sbb
ljmp
or
lock
jnp
pop
sahf
pop
push
push
stc
out
int3
daa
dec
repnz
or
popa
mov
rcr
adc
push
mov
iret
into
sbb
mov
arpl
inc
mov
ret
insl
into
cli
cmp
cwtl
fisubrl
ljmp
sbb
mov
mov
pop
orb
in
cwtl
imull
mov
fildll
xor
test
in
test
ret
mov
or
dec
xorl
repnz
in
or
sbbl
ffreep
mov
inc
into
pusha
sbb
test
repnz
mov
xchg
pop
loopne
xchg
dec
stos
enter
xchg
cltd
xchg
inc
inc
cmpsb
jb
xor
mov
shlb
add
js
ds
jbe
in
jb
icebp
mov
jp
jle
loope
sarb
out
pop
jge
movsl
pop
xor
cmp
nop
call
aam
adc
mov
add
das
scas
lods
out
sbb
jmp
dec
stc
pop
test
mov
sub
or
mov
imul
dec
repnz
sti
lahf
xor
dec
repz
shrl
xor
push
nop
shrl
mov
push
mov
mov
pop
lahf
or
sbb
cmc
divb
addl
pop
or
or
loope
jmp
les
mov
mov
fmull
cmp
jecxz
push
inc
add
repnz
ret
adc
imul
mov
fwait
cs
cmpsb
sbb
cmpsb
jbe
adc
test
dec
mov
mov
movsl
mov
push
loop
out
xlat
sub
incb
xor
push
fs
sahf
push
neg
sub
ds
and
sub
xchg
add
int
inc
minps
fdivrp
out
pop
cmp
lods
shrl
pop
mov
mov
cmp
out
add
mov
in
adc
xlat
movsl
sub
add
test
cmc
dec
xchg
pop
fs
inc
xchg
rcr
xor
nop
lds
test
fstpl
push
in
xchg
sahf
clc
cltd
nop
xchg
inc
push
sub
fs
imul
adc
xchg
ja
fisttpl
je
jge
movsl
ja
ffree
aas
sarb
fwait
mov
scas
cmp
push
push
pusha
test
and
mov
push
inc
aam
daa
jp
xchg
mov
dec
das
cli
xchg
pop
out
jns
adc
adc
xchg
xor
inc
mov
les
cmpsl
mov
and
test
push
outsb
xor
jb
jmp
cli
stos
pusha
mov
xchg
aaa
stos
pop
ficompl
lods
daa
mov
clc
rorl
out
mov
xorl
hlt
leave
fs
mov
popa
add
push
add
xlat
sahf
jnp
adc
insl
rcrb
pop
aas
js
push
jns
inc
fidivrl
push
into
push
fnsave
xchg
and
es
push
mov
aam
xchg
sbb
xchg
cmp
pusha
mov
jp
movsb
int3
clc
scas
jge
push
insb
or
mov
adc
dec
mov
sahf
pop
shll
fstpt
sbb
sbb
mov
sti
out
call
pop
hlt
xchg
incl
cmc
loopne
popf
jae
jp
imul
sbb
outsl
cld
or
repz
hlt
mov
inc
sbb
sbb
push
xor
imul
mov
or
pop
in
lret
sub
fs
subl
jecxz
test
shl
cli
loope
mov
sbb
push
loopne
ds
repz
pusha
or
je
dec
adc
add
push
pop
or
mov
cmp
jo
hlt
pop
fildl
mov
and
jg
jno
pop
mov
rcl
jo
pop
mov
int3
or
scas
adc
mov
xor
dec
jg
sub
aas
repz
jb
outsl
add
js
jmp
ret
xorl
mov
enter
cmp
and
adc
mov
ljmp
adc
cmp
sbb
pop
push
aam
jecxz
gs
sbb
in
push
out
out
mov
or
and
ds
pop
jae
push
es
stc
pop
mov
das
and
iret
lods
cld
cmpl
cli
mov
mov
or
dec
and
fidivs
pop
mov
or
lock
sti
sbb
rcrl
je
std
shlb
cld
icebp
dec
enter
scas
adc
outsb
pop
movsl
lret
repz
cmp
mov
rep
fldl
dec
xlat
dec
push
popa
out
add
dec
popf
dec
pop
jmp
mov
push
dec
sub
dec
mov
ja
jmp
cmp
fs
clc
cmp
pop
in
xor
sahf
mov
lahf
jl
mov
lret
rcr
mov
dec
push
jle
jp
cmp
mov
xor
adc
fdiv
outsl
inc
pop
mov
jle
cmp
xor
pop
aaa
pop
inc
stos
xchg
cld
pop
dec
test
or
inc
mov
mov
mov
mov
jecxz
test
ret
push
fwait
cli
loopne
icebp
push
shll
test
add
or
test
addr16
mov
enter
inc
sbb
jmp
mov
dec
dec
cmp
push
jo
shll
scas
into
and
div
test
dec
jo
push
and
adc
es
jge
or
loopne
jne
and
xor
scas
stos
sub
jo
popf
out
scas
popf
cwtl
mov
inc
enter
shl
inc
lret
loop
dec
or
cmp
hlt
jmp
out
push
mov
inc
out
loope
dec
inc
jne
mov
lock
scas
sub
ret
jns
xchg
negb
adc
shlb
xchg
clc
add
mov
dec
push
xchg
std
inc
inc
mov
testb
push
sub
sbb
dec
addr16
mov
gs
jl,pt
pop
mov
jae
push
jp
or
lcall
mov
pusha
lds
mov
fldt
loop
cmp
push
or
add
hlt
inc
je
jp
daa
ret
fs
push
cli
mov
pop
mov
push
dec
mov
fstpl
pop
add
icebp
adc
pop
mov
scas
mov
add
xor
mov
fldl
fdivs
jb
sahf
xor
mov
sub
aas
bound
sub
pop
pop
lds
pop
aas
iret
pusha
push
sub
cmpsb
xchg
ror
in
sbb
xor
je
xor
minps
enter
push
dec
in
mov
sub
sbb
cli
and
lret
subl
sub
sub
xchg
pop
dec
mov
and
insl
dec
imul
sub
xchg
shrb
or
pop
loopne
decb
in
mov
inc
outsl
fistps
out
roll
sub
adc
mov
xchg
int
insb
adc
or
dec
pop
and
fs
sbb
stos
insl
lret
add
lods
jns
das
inc
push
push
bound
incl
aas
ja
stos
sti
push
int3
outsl
fs
nop
mov
jp
push
sub
or
insb
lods
add
mov
repnz
lret
lock
test
jbe
or
pushf
das
mov
gs
test
sub
outsb
mov
lods
fisttpl
sbb
lods
mov
in
cmc
sbb
mov
popa
repnz
repz
sub
ret
pop
nop
pop
hlt
jmp
lret
push
pop
pop
pop
arpl
xlat
jb
mov
push
xchg
xor
or
das
es
inc
jbe
mov
loopne
mov
testb
fs
cwtl
cs
mov
movsb
xor
dec
lds
xchg
xor
or
shrl
adc
cltd
mov
mov
dec
fidivrl
call
lret
mov
adc
cmp
sub
fildll
and
imul
add
aaa
out
inc
data16
mov
add
cmp
lea
aas
and
aaa
push
cmc
xor
cmp
sbb
iret
adcl
movsl
clts
ja
outsl
mov
mov
mov
mov
or
dec
mov
inc
sbb
ljmp
stc
dec
push
adc
inc
test
loope
mov
clc
in
or
jnp
xchg
dec
decl
test
add
dec
push
jmp
sbb
lret
push
push
pop
les
jl
scas
pop
jno
sahf
cld
jo
jno
into
insb
loop
xchg
mov
cmp
add
int3
fnstenv
addl
pop
sub
add
inc
fldl
jae
dec
add
fmulp
call
adc
ljmp
scas
fists
xchg
fwait
xchg
xchg
jle
mov
fs
fwait
gs
pop
in
aad
gs
xor
inc
scas
add
mov
sarb
inc
pop
test
jns
insb
inc
cmp
fs
lahf
cltd
pop
jl
jecxz
cli
jbe
insl
adc
adc
das
sbb
lods
mov
or
rorb
fisubs
add
sub
xchg
push
xor
push
insb
iret
popf
ret
xor
rcrl
pop
into
fidivs
sub
hlt
lds
or
ja
je
into
cmpsl
mov
lods
jo
push
mov
push
ds
into
mov
ret
push
mov
lods
ljmp
addl
inc
mov
ffreep
divl
jne
aam
out
mov
fdivr
xor
stos
cmp
sahf
fnstsw
clc
push
pop
popf
mul
xor
mov
fwait
push
pop
sub
loop
or
mov
lods
mov
sub
jb
push
cltd
mov
xchg
aas
push
pop
sbb
sub
sub
aad
fwait
icebp
and
cwtl
dec
or
ds
daa
fnstsw
aaa
dec
jp
sbb
sahf
fldl2e
jb
xchg
mov
cltd
leave
mov
in
stos
sahf
in
mov
data16
adc
mov
arpl
mov
mov
lea
test
nop
aas
data16
jmp
roll
mov
adc
test
mov
dec
push
gs
adc
and
xchg
imul
int
pop
lret
and
scas
lea
adc
xchg
adc
stos
cmpsl
jl
or
fwait
pop
or
fmuls
or
jmp
inc
pop
mov
ret
leave
das
lods
push
out
add
outsb
xchg
rorl
out
push
outsl
adc
mov
push
jno
ficomps
dec
ljmp
lds
inc
mov
cli
and
push
push
xor
popf
push
jp
out
fcmovne
xor
sahf
push
scas
shrl
xchg
imul
daa
fisttpll
or
add
jns
mov
cltd
pusha
cmp
mov
sbb
mov
andb
notl
daa
push
imul
cmp
cltd
mov
add
push
xchg
outsb
test
aam
fs
lea
mov
hlt
cld
push
xchg
add
jg
sti
mov
mov
clc
imul
lods
sub
push
lar
mov
je
push
mov
in
aam
push
les
jns
mov
fidivrl
mov
movsl
dec
mov
ljmp
aad
push
test
xor
loop
icebp
aad
lahf
xchg
pop
rorl
ss
push
scas
loopne
xor
dec
ljmp
arpl
sub
push
lods
pop
idivb
cmpsl
sub
jle
aam
and
mov
es
jmp
push
fdivs
aad
and
lahf
cmp
mov
or
jae
dec
stos
ret
popf
lock
push
mov
push
pop
jl
pop
adc
dec
inc
call
sbb
mov
lock
xor
lret
aas
sbb
adc
push
sahf
lds
xchg
sub
xlat
stc
jno
cmp
imul
inc
jp
xchg
divb
insl
push
cltd
fists
fcoml
mov
lds
jl
cs
test
or
sti
inc
and
shll
jp
dec
sti
lea
xor
movsb
popa
adc
bound
jmp
iret
data16
inc
xor
addr16
loop
jg
mov
aaa
sbb
xor
ljmp
and
mov
test
out
cltd
aad
jp
mov
push
mov
add
jo
push
jns
cld
push
adc
sbb
int3
mov
xchg
xor
cmc
xlat
mov
sub
ret
popf
iret
adc
sahf
add
fldcw
push
mov
jle
cwtl
call
xchg
inc
imul
cmpsb
repnz
xor
jo
rcrl
add
push
adc
out
testb
sbb
add
fldt
push
sub
pop
es
call
push
pop
push
push
mov
jne
repz
into
inc
fwait
sti
fcoms
and
lcall
das
jae
ljmp
in
add
jl
and
rcrl
mov
dec
or
fsubs
push
and
sub
mov
push
jns
dec
int3
sbb
das
pop
std
fisubs
ret
xchg
add
les
add
dec
clc
outsl
pop
add
mov
push
and
jcxz
xchg
test
into
imul
ficoml
scas
mov
in
pop
xchg
push
mov
sbb
ja
fstpl
mov
xchg
inc
into
cwtl
cmp
mov
cli
das
lret
push
enter
leave
xor
cli
fnstsw
nop
xchg
sbb
cmc
gs
xchg
sub
aaa
call
cltd
dec
lcall
pop
mov
inc
js
les
gs
out
jl
stos
mov
adc
call
gs
jo
fucomip
push
xchg
mov
ja
jbe
jle
push
sub
adc
xchg
xor
sbb
cmc
cld
mov
arpl
dec
jo
push
shrl
pop
jbe
jo
xor
gs
xor
pop
icebp
jno
and
scas
in
shlb
pop
jmp
imul
mov
push
add
dec
inc
scas
add
cmp
arpl
or
xor
xchg
sbb
mov
dec
xchg
push
push
cltd
mov
cmp
je
shll
cld
cmp
hlt
jnp
in
hlt
daa
and
inc
and
mov
out
sbb
daa
push
jb
mov
lds
mov
xchg
es
insl
sbb
fdivr
add
sub
xchg
inc
pop
popa
add
push
or
adc
sarb
or
add
mov
cmp
inc
adc
mov
ljmp
into
cli
vpunpckhqdq
and
leave
dec
lds
inc
fcompl
xchg
jle
leave
adc
mov
xor
xor
stc
mov
sbb
xchg
jns
das
nop
ret
dec
sbb
orb
jecxz
mov
fildll
or
inc
add
sahf
repz
outsl
and
inc
jno
out
lret
sub
pop
adc
movsl
repz
or
xor
hlt
or
out
loop
gs
and
pop
sbb
or
or
fdivl
outsb
pop
push
sub
push
xor
adc
sarl
adc
cs
dec
repz
mov
shl
jo
push
jg
adc
ljmp
pop
add
jl
xchg
xor
std
pushf
inc
dec
setnp
pop
adc
lock
sub
xchg
inc
icebp
pop
dec
imul
inc
clc
sti
arpl
int
dec
leave
dec
dec
aas
push
jno
jmp
movsb
sbb
cmp
out
subb
inc
shl
decb
or
fisubrl
mov
dec
iret
adc
test
les
sbb
jg
clc
js
daa
jle
pop
je
sbb
pop
pop
std
imul
mov
xchg
sub
or
dec
push
fmull
pusha
cs
or
loopne
out
xor
sbb
iret
lahf
in
je
fs
push
pop
lea
mov
fsts
pushf
push
dec
add
mov
les
dec
push
push
repz
pop
add
xchg
popf
cmp
add
popa
lahf
adc
and
mov
lret
loopne
cli
insb
es
icebp
inc
jp
pop
cmp
mov
jae
mov
ss
xchg
nop
add
and
push
fldt
push
mov
xchg
add
push
sbb
add
add
and
nop
in
cwtl
mov
int
sub
sti
jns
xor
inc
popa
mov
enter
out
arpl
pop
into
xchg
fsub
andps
jl
iret
or
dec
test
es
lds
repnz
dec
data16
aad
aam
fistpll
adcl
jp
jb
sarl
cmp
mov
dec
push
mov
jnp
cmp
daa
xlat
and
shlb
add
or
leave
pop
in
test
mov
ret
sub
xchg
sub
test
lock
sub
push
aad
je
ljmp
test
les
bound
cmp
cli
add
adc
cmp
adc
and
sub
mov
add
jne
cltd
sub
test
and
shrb
pop
xor
gs
mov
fwait
lcall
jns
inc
sbb
jbe
mov
out
cmpl
mov
cmp
or
jb
js
xor
scas
roll
add
decb
je
inc
pop
or
mov
sub
les
cmp
inc
insl
sbb
scas
sahf
iret
adc
sahf
jno
out
aas
or
xor
dec
filds
sahf
fsubrl
pusha
fsubrs
xchg
sub
call
andb
dec
cmpsl
addb
pop
dec
lahf
and
mov
mov
inc
sbb
xlat
xchg
vunpcklps
popf
in
and
sbb
fadds
enter
sub
shlb
pop
jbe
push
xchg
hlt
sub
jb
in
inc
cmp
repz
mov
cmpb
leave
mov
cmp
or
cmp
pop
or
inc
jo
iret
into
pop
cwtl
xchg
push
xchg
pop
out
xor
xorb
aad
jp
hlt
xor
call
aas
stos
loope
xor
pop
testb
leave
push
cld
and
test
dec
out
pop
pop
xor
xchg
jns
sbb
or
push
xchg
dec
add
jns
xor
mov
int
inc
mov
popa
jg
pop
or
shr
mov
inc
sub
shrb
bound
cmp
cltd
rolb
pop
cwtl
aam
das
popf
mov
adc
cltd
popf
and
mov
out
xor
pop
pop
sub
mov
les
cmp
faddl
shll
shrl
cmp
mov
mov
pop
lock
sub
fisttps
rcll
jl
cmp
aam
test
cmp
cli
push
xlat
out
push
repz
adc
cmp
jl
lahf
push
in
push
xchg
test
mov
enter
cmp
mov
insl
and
pop
mov
push
push
xchg
bound
jge
ja
mov
push
not
xchg
call
and
popf
test
jp
xor
pop
lcall
inc
lea
mov
xchg
mov
xchg
jns
jbe
mov
sbb
js
lcall
incl
dec
leave
shll
stc
bound
shrb
icebp
xor
arpl
in
enter
std
into
mov
sbb
flds
dec
lahf
mov
inc
daa
push
fldl
or
outsl
out
out
std
jmp
pop
test
sti
push
fwait
sub
sbb
sbbl
icebp
test
push
add
lret
mov
inc
out
popf
fiaddl
mov
mov
inc
mov
in
sbbb
clc
scas
jle
mov
ret
mov
les
shl
adc
adc
mov
lods
adc
xor
and
test
cltd
xchg
cmp
xchg
and
adc
jp
and
jl
jg
or
xchg
cwtl
outsl
xor
pop
add
adc
xchg
arpl
pop
fs
int3
jg
and
es
adc
pop
push
cmp
dec
sbb
lock
stc
shrl
pop
mov
push
pop
data16
xor
das
gs
addr16
aas
fwait
notb
mov
and
ds
dec
mov
cmp
cmp
jae
jno
mov
test
test
mov
or
xchg
aaa
divb
and
test
push
movsb
out
push
inc
addb
adc
stc
or
jnp
push
mov
cmpsb
jmp
xchg
int
iret
pop
xor
jg
xor
iret
mov
movsb
repnz
rolb
push
xacquire
bound
movsl
push
xor
jo
imul
mov
lret
mov
lods
popf
push
mov
jmp
xchg
loopne
mov
fimull
cwtl
jb
rclb
stc
lods
xor
inc
test
or
fwait
add
dec
sarb
out
lahf
pop
jo
data16
lds
lods
movsl
repz
or
sub
dec
ja
mov
in
mov
and
mov
mov
cltd
adc
test
mov
jl
js
xor
mov
aaa
inc
push
sub
xor
cwtl
popa
aaa
push
pop
mov
ljmp
add
std
xchg
or
mov
pop
mov
mov
pusha
sbb
jmp
sub
int
loop
or
aam
fucomi
jle
push
cmp
nop
mov
dec
outsb
rcll
lret
stos
mul
mov
imul
loopne
mov
xchg
cwtl
fcomps
jl
mov
ret
js
fdivl
fistpl
jecxz
imul
adc
les
cmpsb
xchg
loope
call
repnz
repz
fs
adc
jl
into
sub
test
fdivrs
outsb
adc
and
push
pop
and
loope
xlat
jae
outsl
rcll
jecxz
pop
adc
mov
repz
rcrb
push
aam
ljmp
inc
icebp
aaa
lods
and
hlt
bound
popf
mov
inc
adc
pop
pushf
pop
pop
addr16
sbb
mov
xchg
xchg
inc
add
jp,pn
aam
pop
pusha
cmc
cld
aaa
adc
add
arpl
aaa
sbbl
nop
js
dec
dec
or
js
ficomps
jg
mov
add
dec
fistpl
arpl
lcall
adc
dec
mov
cmp
and
dec
sub
jle
push
faddp
dec
sub
mov
dec
xchg
out
lahf
rol
gs
xor
add
or
mov
jno
push
nop
or
or
clc
push
xchg
mov
ret
stc
and
shll
mov
and
mov
mov
popa
xchg
into
ret
xor
cmp
and
mov
cwtl
out
mov
pop
ja
pusha
scas
imul
lods
jp
out
pop
mov
lret
out
pop
outsl
mov
lds
xchg
sahf
leave
fidivrl
mov
push
lea
nop
cltd
add
rorl
fisttpl
inc
test
cmc
inc
stos
mov
add
cmp
lahf
aaa
xchg
jno
jbe
dec
lret
sbbb
jne
mov
mov
dec
push
testl
daa
outsl
push
scas
mov
cmp
cltd
mov
push
out
stc
out
mov
fistpl
mov
xchg
jno
add
fs
cwtl
arpl
add
aas
sub
pop
outsl
arpl
into
push
scas
push
jmp
lods
imul
pop
in
mov
repz
inc
cmp
mov
mov
andl
cltd
into
loope
ds
lea
mov
sbb
fsubr
icebp
mov
mov
xor
imul
jbe
mov
or
pusha
or
shrl
cmc
mov
xchg
insb
mov
mov
cmp
jne
adc
xorb
and
into
add
pop
inc
xor
sbb
fwait
mov
or
push
sub
mov
push
stos
aas
mov
jp
loopne
inc
pop
pop
imul
dec
push
add
mov
jns
stc
loopne
in
jo
mov
mov
shl
push
dec
sahf
divb
jo
in
aas
sub
in
iret
inc
rol
ljmp
mov
push
les
test
daa
aaa
jle
repz
mov
xchg
and
mov
ret
jmp
cmpl
xor
jmp
push
mov
mov
scas
fcomps
push
call
add
pop
das
insb
inc
loop
sbb
je
iret
pop
sub
subl
adcb
les
jbe
outsb
sbb
cmpsl
mov
pop
and
add
movsb
out
in
push
aam
add
mov
in
adc
daa
push
cmp
xor
out
mov
ret
cld
xor
mov
mov
or
push
push
mov
mov
push
xor
clc
mov
mov
push
mov
nop
xchg
dec
mov
loop
xchg
std
bound
fwait
dec
mov
repz
adc
int
or
mov
cmp
dec
mov
je
repz
inc
jo
int3
in
xchg
mov
mov
sbb
dec
je
pop
loope
jo
imul
or
daa
cli
andl
pop
adc
push
je
call
xchg
sbb
or
cmp
in
mov
xor
mulb
enter
pop
enter
movsb
in
out
mov
cmp
cs
mov
push
or
pop
sub
mov
loopne
fldenv
mov
add
negl
sahf
into
adc
xorb
fldt
or
push
fsubr
mov
pop
xchg
inc
gs
ljmp
aas
jnp
ds
mov
mov
int
push
dec
jmp
mov
inc
push
or
out
jl
pop
push
xor
testl
dec
je
je
dec
ret
movsl
push
cmc
pop
jp
shl
push
xchg
rol
orl
sub
pop
lea
adc
stc
test
push
add
inc
sub
hlt
adcb
outsl
scas
sbb
rcrb
mov
loop
mov
faddl
icebp
inc
mov
fstps
cli
and
mov
cmc
pop
ret
dec
push
cmp
push
xor
mov
push
jl
bound
pop
in
pop
clc
ja
call
sbb
sbb
and
pop
insl
mov
cmp
std
out
adc
mov
push
mov
ljmp
mov
inc
xor
dec
fistps
pop
fsts
cltd
cmp
adc
into
dec
imul
fistps
fsubrl
mov
add
in
push
enter
arpl
repnz
pushf
jae
cmp
adc
mov
in
aaa
fwait
xchg
cmp
cwtl
lds
push
dec
mov
and
inc
xchg
cmp
stos
arpl
aaa
inc
jae
std
shr
out
lea
pop
lods
dec
mov
pop
adc
insb
pop
in
jno
push
in
xchg
fisubl
int
pop
sahf
mov
pop
cmp
das
cmpsl
out
mov
aas
in
xor
aaa
push
add
inc
incb
adc
mov
insb
bound
fistpl
adcl
in
or
adc
mov
hlt
inc
xchg
rcrb
push
rol
sub
cltd
pop
gs
lock
xchg
mov
mov
daa
inc
out
aad
jbe
jne
out
pop
cmpsb
test
mov
das
cwtl
out
push
jnp
or
mov
add
mov
movl
mov
int
sub
icebp
xor
cmc
push
inc
ficoms
cmp
mov
cli
aam
jno
xor
push
int
pushf
push
jle
cmp
js
stos
lods
mulb
imul
shlb
inc
insb
fsubp
rorb
dec
icebp
push
ret
sarl
inc
pop
cmp
les
add
xor
xor
mov
xchg
jecxz
shll
mov
fists
imul
aad
repz
lret
inc
int3
push
or
lea
jo
adc
int3
out
in
cmp
pusha
cli
sarl
sub
mov
xchg
xchg
lods
xor
mov
dec
sahf
mov
fsubrs
jnp
jns
xor
addb
pop
dec
call
pop
push
lods
test
or
aaa
push
push
inc
pusha
xor
ret
popf
dec
gs
mov
mov
inc
in
mov
out
insb
pop
or
shlb
mov
xor
xchg
cmp
inc
test
cmovo
xchg
pop
and
xor
imul
cmp
sbb
das
arpl
insl
addr16
ffreep
into
sub
movsb
sub
add
out
idiv
pop
int3
add
fists
fsub
enter
or
movsb
mov
cmp
roll
cmp
sbb
xchg
dec
decb
dec
or
mov
cmp
cmpsb
fbstp
add
jno
sbb
xchg
mov
popa
pop
in
ljmp
pop
test
sbb
clc
pop
sbb
push
jne
mov
aas
or
mov
test
ja
push
lds
test
adc
out
xor
stos
mov
xchg
dec
and
rdtsc
lea
sbb
icebp
push
jge
fmuls
xchg
in
lret
daa
lret
pop
adc
add
mov
hlt
daa
dec
dec
orb
cmp
ljmp
or
xor
xor
and
jle
xchg
add
or
shrb
stc
adc
in
ror
and
arpl
test
leave
cmp
scas
cs
adc
push
dec
cld
fildll
mov
arpl
push
popf
pop
mov
bnd
dec
out
insb
jae
pop
push
sub
pop
nop
jb
cmp
insl
std
pop
xor
mov
mov
push
jo
into
mov
add
lods
shll
adc
aam
and
sarl
xor
ret
sahf
adc
push
maskmovq
testl
inc
cmpsb
in
hlt
and
push
sbbl
cmpsb
xchg
std
dec
jne
jne
sti
push
adc
divl
xor
jg
in
push
jno
movl
adc
cmp
dec
or
mov
decb
daa
dec
inc
jae
push
xchg
ljmp
in
sahf
je
xor
sbb
mov
jmp
and
push
xor
xor
push
addr16
aam
call
icebp
mov
ljmp
sub
or
mov
in
xchg
hlt
adc
hlt
test
adc
mov
in
mov
add
or
pop
sbb
int
mov
xchg
aad
ja
push
repz
test
mov
dec
out
repnz
push
inc
out
fmul
aas
bound
mov
sub
lcall
ficomps
mov
xor
jo
pop
js
cli
pop
nop
lds
adc
sub
scas
das
dec
std
sti
jnp
loop
pop
xor
xor
scas
xchg
cmp
outsb
outsb
ror
inc
movl
mov
and
loop
enter
lret
cmova
push
movsl
lea
lock
idiv
fwait
dec
pop
sti
or
jb
les
xchg
mov
dec
jno
add
xchg
or
add
fnstsw
push
dec
or
push
cmp
jb
mov
and
mov
cltd
pop
sub
mov
inc
adc
pusha
jb
jb
ja
lahf
nop
jae
out
imul
inc
mov
cmpsl
or
sbb
xchg
push
adc
pop
inc
ja
cs
and
rcll
sub
inc
sbb
xchg
dec
shll
mov
push
xor
mov
int
fisttps
aam
push
test
sub
mov
popa
dec
push
ja
xchg
shll
sahf
lret
testl
loope
or
dec
insb
mov
out
add
push
rcrl
lret
cmp
jno
adc
inc
movsb
push
adc
jno
mov
fcom
popa
in
pop
adc
cmp
cmp
mov
es
fmuls
out
cli
cmp
mov
cmp
clc
dec
jle
cwtl
xchg
outsl
insb
push
aam
divl
ja
leave
lods
xchg
sub
cwtl
inc
mov
shll
jg
lret
or
stc
jb
and
js
xor
call
jne
loopne
call
rcll
lahf
andb
movsl
push
cmp
dec
xchg
dec
iret
jecxz
sbb
nop
rcrb
adc
sarl
sub
repz
andb
fstl
mov
sahf
inc
pop
lret
dec
pusha
inc
jmp
xor
cmp
cmpsb
pop
ds
jo
pop
jp
sbb
call
dec
mov
and
cltd
xor
pop
in
sahf
adc
xchg
push
or
sbbl
in
into
hlt
lods
or
push
pop
push
or
cmc
inc
dec
adc
ljmp
dec
fdivrl
push
leave
jae
cmpl
pushf
imulb
je
jb
push
sbb
dec
in
incl
leave
sub
das
shlb
sbb
cmc
js
pop
lods
adc
enter
jb
cmpsb
jl
push
les
test
lods
scas
mov
dec
mov
aaa
out
daa
jb
fcoml
popl
and
mov
xlat
iret
mov
jmp
xor
cs
nop
stc
ret
jno
push
mov
dec
fcoml
or
and
fwait
insl
sub
pop
inc
mov
mov
sbb
push
xchg
ret
adc
or
lahf
in
sbb
or
mov
jb
sub
cmp
or
pushf
push
fmuls
scas
stos
push
jno
sub
ret
mov
repz
rorl
mov
scas
je
mov
test
cmp
dec
sub
aas
xchg
jno
xor
scas
out
pop
aas
imul
ja
jb
lds
inc
mov
leave
in
xlat
jecxz
and
sbb
loope
das
stc
sub
xlat
je
dec
inc
dec
xchg
xchg
xchg
aas
sahf
outsl
das
jle
mov
outsb
inc
xchg
cltd
das
es
lea
sbbl
dec
xor
clc
and
hlt
pushf
xchg
inc
add
mov
scas
xchg
xor
daa
jae
iret
shlb
lds
jno
xor
mov
mov
rdtsc
testb
lods
insl
xor
insl
arpl
xor
mov
xchg
push
jne
out
out
add
jge
xor
popa
jmp
pop
inc
lret
test
mov
add
cmp
bound
push
mov
push
in
in
scas
or
jge
inc
pop
out
pop
repnz
push
ficompl
dec
mov
int3
mov
pop
int
sub
xchg
push
gs
call
pop
fcmovnu
xchg
and
mov
jo
mov
stos
sub
mov
les
mov
or
fidivrl
fwait
adc
or
fidivrl
ucomiss
test
pop
leave
ficoml
pop
lcall
fisubrl
lea
sbb
push
xlat
or
mov
or
jp
jae
inc
inc
stc
adc
push
in
test
bound
out
sub
mov
mov
pop
repnz
xor
mov
dec
dec
cmp
fisubs
jl
xchg
aaa
flds
addr16
and
inc
dec
jge
sbb
ljmp
xchg
and
xchg
dec
pop
and
pop
mov
dec
pusha
pop
fstpt
repz
xchg
push
add
dec
inc
mov
cmpsl
dec
dec
int
and
in
ficoml
stc
jp
loop
sysenter
adc
xchg
ss
sub
cwtl
addl
sub
xchg
out
sub
icebp
cmpsb
int
arpl
adc
testb
cltd
sub
fdivrp
aaa
js
dec
cli
imul
lea
test
jbe
mov
inc
subl
mov
fcos
jnp
mov
xchg
and
mov
jnp
xchg
aaa
fildl
cmpsb
add
call
lock
jge
mov
xchg
outsl
loopne
repnz
int
sbb
dec
icebp
adc
mov
sub
and
inc
push
test
jns
push
shr
jg
subb
sbb
ffreep
xor
lods
bswap
sbb
and
adc
stos
cltd
not
ret
aad
fnstcw
cmp
into
aam
push
push
xor
pop
cli
xor
or
loope
pop
mov
add
int
in
push
in
leave
fadds
fxch
push
sub
cmp
mov
adc
popa
jb
test
push
pop
xlat
adc
sub
imul
cmp
inc
mov
mov
cmp
shlb
test
fisttpll
rcrl
jge
arpl
es
cmp
lea
pop
jo
es
or
mov
scas
cs
nop
jp
dec
je
ljmp
add
sub
je
sub
sub
add
jp
push
inc
scas
mov
mov
test
mov
insl
mov
arpl
mov
xor
mov
shl
aam
gs
ret
jae
jmp
sub
fisubs
cmp
lods
mov
lds
or
add
and
js
push
push
mov
sbb
sahf
pop
dec
add
inc
jo
outsl
mov
xchg
mov
ljmp
leave
jge
and
dec
loopne
push
jne
in
or
sub
loop
repz
pop
ret
cmp
jl
xchg
cmpl
cs
mov
in
push
mov
lds
out
mov
pusha
pop
mov
dec
push
fsts
mov
add
aas
xchg
jne
ljmp
cmpl
aas
stos
jmp
jne
mov
mov
mov
or
sub
push
xor
dec
sub
pushf
mov
lret
testb
popf
xor
jne
fstl
sarb
cltd
aaa
sahf
dec
pop
fs
sub
pop
js
push
push
adc
xchg
out
imul
xor
mov
dec
in
pop
push
test
leave
and
movb
jg
adc
imul
test
mov
dec
jmp
inc
sub
frstor
sti
stc
nop
insb
sbb
push
pop
sbbb
iret
pop
fs
fistl
std
ss
or
xchg
cmp
push
mov
out
cmpl
mov
push
cmc
shlb
sbb
stos
popa
push
imul
cltd
out
push
inc
lea
xor
into
pusha
jle
loop
pop
loopne
pop
loopne
aam
xor
aam
enter
mov
inc
add
cmp
fnstcw
sahf
rclb
lahf
mov
pop
jp
cs
out
push
dec
add
mov
or
setae
lahf
out
jmp
in
pop
pop
imul
pop
mov
inc
sub
addr16
push
stos
push
mov
jnp
push
or
pop
mov
mov
mov
je
push
sarl
test
push
jecxz
js
mulb
adc
cmpb
pop
mov
cmpsb
lcall
and
cmpsb
gs
or
ror
data16
mov
push
ret
mov
push
xchg
mov
inc
pusha
filds
mov
pop
mov
dec
ret
cmpsb
cli
loope
xor
push
mov
sarl
mov
mov
nop
js
xchg
int
pop
jg
push
pop
or
popa
imul
imul
xchg
mov
mov
js
ret
ficoms
cs
cmc
mov
cltd
cwtl
in
xchg
xor
xor
or
outsl
xorl
pop
push
mov
daa
sbb
jnp
mov
dec
or
or
loop
sbb
ds
cmpsl
rcrb
cs
xchg
xorl
in
fildl
test
mov
cmc
jp
loop
loope
clc
mov
mov
sub
xor
dec
sub
sbb
repnz
inc
stos
adc
cmpsb
mov
dec
sbb
clc
leave
loop
out
sahf
fsubs
add
pop
sti
pop
ljmp
jp
mov
jge
out
ret
and
ds
cmp
mov
loopne
lea
add
xor
stos
inc
daa
dec
fwait
aas
mov
mov
jge
subb
push
hlt
xor
aas
mov
cmp
sarl
out
in
test
sub
pop
lcall
jl
fs
fistpll
sti
shll
jmp
xchg
fmull
test
dec
hlt
inc
test
lea
dec
in
in
jle
shlb
mov
cli
fbstp
jae
dec
pop
mov
ds
test
lret
je
dec
mov
or
cs
stos
addr16
xchg
mul
imull
popf
jo
cmpsb
mov
sbb
orl
sarb
sbb
push
rclb
jns
cmp
push
or
in
stc
addb
mov
orb
sbb
mov
pop
mov
stc
lods
sbbb
in
js
pop
xchg
dec
outsb
mov
dec
rcrb
stos
test
outsl
or
ficoml
mov
cmpsl
push
ds
cli
pop
pop
mov
dec
out
sub
mov
xor
ss
mov
add
adc
adcl
or
push
adc
outsb
out
sbb
mov
and
stc
lret
adc
dec
add
dec
sbbl
loopne
cli
pusha
mov
dec
pop
aad
adc
sbb
mov
insb
shrl
push
lea
cs
mov
inc
xor
movsl
xchg
xor
mul
movsb
push
jge
scas
dec
sbb
push
cmp
cmc
jne
cmpsl
mov
dec
mov
roll
adc
mov
mov
mov
out
xchg
je
cmovo
into
add
shlb
jo
pop
mov
ret
ds
nop
int
sub
aaa
sub
stos
adc
test
xchg
ja
push
add
cmc
negl
and
pop
out
jmp
cld
lret
scas
xor
lret
movsl
sbb
stos
or
fidivrl
ss
mov
in
and
hlt
mov
addr16
jbe
xor
or
das
fbld
or
mov
arpl
xchg
mov
pop
popa
mov
xor
into
sbb
mov
dec
das
adc
int3
pop
insl
push
imul
push
ret
out
adc
rorb
push
insb
xor
cld
std
fcmovnu
ret
ja
mov
cmc
daa
and
ss
push
mov
mov
lods
mov
test
mov
out
in
call
fs
rcrb
add
dec
xor
out
xchg
mov
pop
das
sub
rclb
jge
push
jmp
pop
fadds
sti
movsl
inc
lds
cmp
fistpl
pop
fdivs
mov
loope
daa
test
pop
sub
xor
imul
ljmp
rol
mov
mov
insb
aaa
pushf
jnp
jmp
roll
mov
pushf
aad
ljmp
adc
pop
pop
pushl
insl
adc
xchg
or
dec
movsb
in
jge
inc
dec
pop
xor
mov
bswap
insl
lods
in
pushf
push
loop,pn
sub
sub
ja
push
or
cs
dec
push
or
push
pop
rcl
fbld
fwait
ljmp
xchg
jns
dec
scas
out
sub
into
outsb
ds
test
cmp
push
xchg
cmp
lods
adc
out
call
imul
cmp
out
sub
mov
cmp
shll
or
xchg
rcrl
loopne
sub
xorb
test
pop
into
rcrl
rcrb
je
out
dec
mov
cwtl
and
test
out
gs
inc
imul
jl
shl
xchg
mov
outsl
out
je
jo
int3
jle
or
scas
mov
cmpsb
shll
loope
shlb
adc
stos
loope
adc
or
test
mov
shl
push
mov
pop
shlb
fstl
jecxz
jbe
popa
fidivrl
add
dec
popa
adc
das
out
cwtl
xchg
scas
add
sbb
jno
jne
stc
sti
hlt
mov
iret
cmc
sub
fiaddl
in
int
adc
sbb
std
fidivrs
stos
test
orl
ja
hlt
setne
adc
ljmp
jecxz
add
cmpsl
negb
sbb
pop
aam
pop
inc
sub
dec
push
adc
dec
cwtl
push
nop
xchg
test
cmp
dec
cmpb
andl
cmp
ficoms
push
out
dec
mov
and
mov
out
cltd
enter
pop
xchg
mov
decl
dec
hlt
arpl
sti
pop
inc
or
insb
loop
int3
insb
or
push
mov
fcompl
mov
pop
cmp
incb
das
mov
pop
cmp
push
adc
pusha
das
jp
pop
xchg
mov
add
test
jp
add
leave
push
stos
lret
pop
xchg
sbbb
push
adc
sbb
call
mov
repz
pop
rcll
leave
push
and
and
mov
mov
dec
leave
mov
jb
xor
inc
push
cmpsb
and
insb
adc
decb
mov
out
cmp
cmp
dec
xchg
push
loop
adc
add
pop
dec
jns
mov
ret
and
clts
aad
test
lods
ficompl
out
jp
push
jne
lahf
scas
in
ja
cmpsl
push
mov
inc
loope
ljmp
loope
push
push
jae
lock
jb
je
dec
and
push
test
cs
fwait
icebp
pop
mov
sarl
fwait
imul
repnz
ds
cli
out
inc
rclb
cmp
sub
pop
popa
lret
imul
push
sbb
rorl
or
adc
and
fstpl
adc
aas
pop
xchg
mov
arpl
xchg
jb
mov
push
xchg
jl
cli
test
push
cli
dec
dec
mov
xlat
push
insw
jb
cmovne
shlb
pop
xchg
inc
fsubr
ljmp
outsl
jp
es
or
cmp
push
mov
or
lock
pop
test
mov
sahf
pop
arpl
mov
or
inc
pusha
jbe
sub
in
jb
jns
sbbb
pop
faddl
add
test
stos
push
push
stos
push
rol
pop
cmpsl
popa
es
cs
xchg
stos
rcrb
test
addb
push
fadds
fyl2xp1
fwait
mov
lea
push
dec
push
jg
push
inc
popf
outsb
pop
fwait
je
xor
mov
and
lods
push
pop
cwtl
cmpsb
mov
push
or
mov
es
sub
push
cmc
pop
sbb
pop
ljmp
pop
or
and
pop
dec
rolb
mov
or
outsb
mov
adc
jae
loopne
xorps
or
testw
cld
xlat
sub
sarb
orl
popl
stc
dec
mov
movsb
mov
or
jg
adc
mov
and
mov
fidivl
inc
stos
pushf
dec
lcall
loop
cmc
movsb
add
cld
or
popf
adc
xbegin
adc
lods
shl
sahf
pusha
int3
xor
es
dec
je
jnp
push
mov
shlb
adc
adc
jmp
fistps
xchg
mov
adc
add
popa
adc
out
adc
cltd
and
xor
ror
jo
mov
adc
aad
inc
add
lcall
decl
sbb
lea
push
out
lock
pushf
imull
sub
notb
scas
and
dec
sub
stos
jle
and
and
pop
orb
pop
mov
push
fisubrs
ret
cmp
stc
divb
pop
addl
fnstsw
pushf
add
and
arpl
mov
sub
xchg
mov
mov
and
stos
repz
int3
push
gs
push
mov
mov
not
insl
pop
pop
push
in
mov
xchg
mov
imul
lea
ds
rcll
loop
hlt
add
and
loopne
add
inc
jnp
test
add
into
xchg
iret
add
scas
imul
popf
daa
adc
xor
pop
xor
push
aad
dec
pusha
pusha
mov
jg
mov
fdivs
xchg
cs
dec
out
nop
mov
xchg
adc
pop
mov
xchg
insb
lahf
jp
aad
jmp
stc
std
jmp
mov
add
jno
dec
adc
ja
mov
daa
subl
das
in
dec
mov
sbb
inc
jae
jl
xlat
cmpsl
aam
rclb
test
cmp
pushf
scas
or
jg
mov
mov
sahf
hlt
push
cwtl
jg
xor
xor
mov
push
sub
jno
loopne
jp
and
push
icebp
xor
cld
jb
in
inc
sbb
imul
mov
cs
ret
push
insl
ret
std
adc
pop
sahf
fisttpl
das
rcr
icebp
imul
loope
gs
scas
dec
jb
cmp
mov
je
xor
xor
iret
in
repz
xlat
sti
push
ret
fisubs
jge
jnp
push
adc
inc
sub
or
je
ret
push
jb
add
std
xorl
ficoml
mov
stos
sarl
add
fimuls
adc
mov
mov
dec
add
aaa
push
aam
movsl
adc
in
mov
lret
pop
mov
jp
dec
and
sbb
loope
push
hlt
jecxz
andb
lods
adc
add
fscale
ficoml
imul
xchg
pop
inc
mov
mov
loope
jmp
dec
cmpsl
push
and
mov
js
loopne
jle
stos
cli
ret
cmp
les
jbe
xor
cmp
dec
push
mov
dec
mov
ja
sahf
mov
outsb
ds
sbb
mov
in
frstor
mov
ret
jae
jae
pop
mov
fcmovne
mov
insl
mov
or
sbb
mov
fdiv
pop
xor
repz
xchg
repz
xor
jne
dec
dec
push
hlt
aaa
cld
lods
lcall
loop
jecxz
aad
sbb
rcl
xlat
and
outsb
iret
dec
test
daa
cltd
mov
in
cmp
jle
int
mov
sub
mov
shll
sti
iret
orb
xchg
xchg
ret
sub
push
jno
bound
jp
add
mov
mov
aaa
adc
xor
test
inc
and
mov
jge
push
mov
push
enter
fimull
test
out
cltd
dec
or
test
xchg
mov
cli
icebp
pushf
and
push
mov
neg
sub
pop
inc
es
push
add
mov
pop
lods
and
push
cmp
call
frstor
es
insb
and
adc
outsl
enter
sbb
ljmp
lods
xor
or
add
loop
adc
out
nop
cmpsl
jle
fsubrl
cltd
or
mov
adc
and
or
sti
je
cmc
or
fs
aas
mov
jno
sub
ss
pushf
movsl
iret
dec
xor
lea
sub
inc
movsl
mov
outsb
xchg
enter
pushf
xchg
fwait
add
roll
xchg
mov
jle
inc
imul
in
mov
adc
jns
loope
sub
popf
mov
mov
dec
fnstenv
in
cmp
fcmovnb
outsl
ds
xchg
lock
jl
add
daa
int3
push
mov
cli
cmp
inc
mov
mov
inc
jle
aas
lock
xor
mov
and
les
cmp
stos
pusha
les
cmp
and
jnp
xchg
fmuls
sub
pop
dec
ret
hlt
jecxz
out
xchg
je
stos
mov
js
mov
cwtl
and
fisubs
cltd
add
add
pop
xchg
jg
cld
cmp
jmp
jmp
es
insb
lds
paddsb
loop
out
test
negl
pusha
jg
push
rolb
jae
fildl
and
testl
aaa
fwait
out
sti
inc
sub
cli
dec
xor
daa
test
je
xor
andb
mov
mov
insb
adcb
dec
lods
push
aas
or
rclb
pop
push
ret
mov
mov
mov
push
jnp
xor
test
hlt
pop
int
cli
fwait
aam
out
bound
inc
imul
les
rcll
mov
mov
and
imul
fcomi
sti
js
enter
in
inc
and
data16
or
pop
and
lods
loopne
xorl
dec
scas
das
mov
in
mov
mov
dec
and
mov
mov
idiv
jp
addb
or
pop
ljmp
dec
mov
fimuls
call
sub
rclb
push
adc
icebp
sbbb
inc
jns
ja
adc
outsl
loop
sbb
mov
and
std
scas
pop
fmull
arpl
popf
inc
stos
mov
cmp
shlb
sub
repz
mov
mov
movsl
push
mov
dec
leave
mov
mov
outsb
push
dec
movsl
mov
add
stc
pop
push
and
lock
dec
mov
mov
repnz
test
xor
sbb
add
movsb
inc
aas
stc
andb
fldcw
mov
and
adc
mov
push
xchg
xchg
pop
rorb
int
jne
mov
or
mov
mov
jecxz
sbb
int3
xchg
cwtl
sti
adc
adc
or
pop
jbe
xchg
xchg
ret
inc
leave
jno
test
xchg
jmp
mov
xlat
jno
xchg
shrb
push
les
pop
leave
sub
xor
cmpsb
xor
data16
lcall
pop
sbbb
jne
sub
push
jo
inc
subl
push
into
pushf
push
push
cmp
pop
in
js
neg
push
clc
icebp
icebp
fiadds
jne
inc
out
push
sub
dec
inc
sbb
mov
mov
mov
mov
mov
and
mov
push
push
jmp
shrl
mov
repnz
jae
loope
rcpps
push
rcl
push
outsb
cmp
mov
pusha
leave
test
push
or
sub
subl
loop
ds
ficomps
cmpsb
sub
iret
scas
data16
mov
push
cmp
fildll
inc
fsubl
adc
pop
sub
add
fsub
test
inc
cmpsl
mov
fsubl
inc
add
jmp
inc
mov
xor
add
dec
dec
pop
stc
fcompl
dec
jnp
imul
movsb
scas
sbb
mov
cmp
and
loopne
mov
jg
popf
out
push
fsubs
dec
adcb
repnz
cmp
fldl2e
push
scas
test
mov
outsb
es
hlt
test
js
hlt
jo
push
ds
cmp
stos
cmp
lret
jecxz
fiaddl
cmpsb
nop
ja
pop
add
dec
aad
rclb
call
ds
pop
and
sbb
aaa
fs
incl
mov
sti
add
cmp
nop
sbb
cmpsb
lods
iret
iret
xor
mov
fcmovb
fstps
push
pop
xor
les
mov
cmp
jl
dec
int
das
sti
cmp
fidivs
hlt
push
xchg
dec
and
mov
mov
std
xor
pop
rcrb
loopne
xchg
hlt
cltd
and
cltd
fsubrl
imul
sub
mov
pushw
mov
negb
out
imul
mov
shl
cwtl
sub
push
mov
sub
xor
or
pop
cwtl
ficoml
test
std
nop
push
adc
dec
xor
xchg
adc
mov
push
mov
pop
cmp
sub
xchg
shlb
pop
push
cwtl
cmp
push
dec
pop
or
push
dec
pop
adc
lock
sbb
dec
loope
movsl
lods
add
lcall
int3
adc
idivl
in
cwtl
cld
pop
dec
cmpsl
aad
loopne
mov
inc
and
mov
xlat
imul
pop
aam
pop
fwait
std
inc
lcall
mov
push
jo
add
loopne
mov
stos
jecxz
stos
sbb
lcall
hlt
jle
xchg
xor
movl
lahf
sub
and
xchg
mov
mov
inc
inc
fdivs
and
dec
fwait
in
push
imul
and
or
mull
cmp
and
mov
adc
shll
das
mov
subb
xchg
ret
mov
cmp
xchg
dec
inc
ja
idivb
xor
scas
mov
mov
hlt
rcl
stc
sub
fwait
jmp
jb
fwait
adc
adc
lahf
inc
sti
push
dec
sti
iret
inc
leave
loopne
lret
aam
mov
popf
movsb
sbb
ret
jns
dec
cmp
clc
push
push
jbe
inc
repz
sbbl
sbb
sarb
test
xor
faddl
pop
mov
fdivrp
aaa
out
cld
push
xor
jg
lods
int
mov
adc
sub
dec
das
jbe
int
mov
mov
test
pop
xchg
mov
cmp
inc
or
sbb
xor
out
lret
inc
lret
insb
subl
lea
jge
in
hlt
dec
fisubrs
es
ret
nop
xchg
les
scas
jle
mov
inc
mov
push
mov
jle
mov
xchg
push
push
and
nop
sahf
arpl
clc
mov
cmpsb
sbb
push
rorl
xchg
loop
inc
pushf
incl
adc
sub
cld
out
xor
fldcw
iret
test
jmp
movsb
cld
sti
or
int3
and
jae
fdivrl
pop
test
out
pop
aas
jns
loope
mov
cli
es
cmpsl
cmpsl
outsl
xor
ret
mov
mov
inc
dec
push
dec
aas
inc
rol
fsubrp
roll
cmp
lahf
mov
inc
cmp
add
sbb
sub
cmp
imul
lods
out
mov
sbb
xor
jne
shrb
dec
inc
repz
lcall
movsb
addr16
int3
jl
clc
test
or
ss
or
je
add
cmp
sbb
mov
das
push
inc
and
dec
int
add
xchg
inc
arpl
cli
cli
aam
pop
out
pop
adc
shrb
mov
cmp
add
cs
and
cmp
out
xor
xor
fbld
mov
in
mov
mov
imul
jecxz
movsl
jne
popf
mov
out
adc
pop
mov
xor
jnp
daa
sahf
mov
int3
cltd
mov
cmp
xchg
sbb
lds
in
jecxz
sbb
xchg
cmp
lret
repnz
or
shll
arpl
imul
pop
psrld
sbb
sbb
and
add
pushf
sbb
jb
movsb
pop
mov
cmp
rol
jno
xorb
iret
movl
shrl
mov
test
lret
pop
push
jg
repnz
les
or
dec
outsl
stos
mov
xchg
sarl
mov
fsts
push
inc
test
out
push
push
xchg
push
jns
mov
or
cltd
test
xor
pushf
and
jne
cld
rcll
int3
sub
mov
in
jne
xchg
stos
push
push
stc
push
dec
push
in
sub
push
movl
jmp
dec
xchg
mov
mov
push
cmc
scas
cmc
data16
insl
lods
jl
rcr
mov
stc
shrl
enter
pop
divl
out
jb
mov
fsubr
jbe
inc
or
repnz
aas
inc
fmul
push
xchg
pop
mov
mov
aam
pop
in
shlb
mov
sahf
jge
test
pop
jecxz
or
mov
lret
int3
test
dec
jne
cmp
insl
mov
sbb
xor
push
fcom
mov
aad
xor
sbb
jmp
lods
and
cld
cld
cli
scas
mov
or
cmp
and
test
fwait
mov
into
aam
loop
xchg
mov
mov
je
test
pop
enter
mov
xor
xor
imul
pop
ud2
jge
mov
pop
push
lret
out
xchg
js
add
adcl
sti
inc
testl
fwait
jmp
rorl
xor
inc
cli
jbe
pop
outsb
outsb
lods
out
sbb
adc
pop
test
nop
xchg
cmp
int3
xor
out
arpl
cmc
and
in
icebp
out
jle
clc
sbb
push
fdivrp
xor
xor
ss
adc
sub
rorb
test
push
dec
lret
lcall
mov
fsubrs
jne
repnz
xchg
lds
inc
insb
dec
mov
mov
fmull
mov
lret
xchg
cmp
inc
daa
adc
pusha
dec
imul
out
sbb
mov
adc
test
imul
sti
shl
or
jb
dec
jecxz
cwtl
jmp
fidivrl
add
sbb
cmp
loope
aaa
mov
in
and
dec
ss
mov
sub
add
jae
jnp
sbb
sarl
pop
cmp
addr16
sbb
outsl
xchg
mov
out
or
vpmullw
sub
aas
fildll
sti
outsb
cmpsl
pushf
repz
lcall
mov
in
cmc
lret
cmp
push
xor
cmp
inc
movsl
repz
movl
pop
and
inc
dec
mov
inc
mov
aaa
mov
xor
adc
clc
sub
jno
loopne
filds
dec
fdiv
je
cwtl
sub
nop
sub
xor
mov
sub
cmc
jge
sbb
jne
mov
jno
cmp
std
sub
dec
inc
mov
lret
adc
mov
jns
adc
fists
lret
rcrb
add
or
adc
pop
shl
lret
jnp
loop
pop
aaa
ret
adc
or
and
adc
pop
cli
and
call
cmp
xor
dec
fiaddl
add
shlb
inc
cwtl
push
mov
lcall
add
sbb
loopne
push
mov
push
mov
xchg
push
inc
lea
sahf
sbb
shll
sub
lcall
mov
push
rcll
int
xchg
in
outsl
pop
push
jp
or
adc
out
pushf
imul
jb
das
bound
test
iret
sub
inc
int
mov
jnp
xchg
push
pop
stos
mov
xchg
inc
fdivl
or
mov
mov
rorl
mov
cmp
push
ja
jo
push
fdivp
les
and
addr16
adc
or
das
xchg
mov
cmp
cwtl
mov
rclb
scas
inc
mov
movsl
iret
push
fmuls
cmp
or
mov
mov
jle
iret
test
and
adc
mov
xchg
push
lock
fsubr
mov
push
inc
lret
xor
test
or
ret
orl
lock
rorb
jle
mov
js
aad
call
mov
push
jecxz
shlb
mov
mov
sub
mov
test
pop
xor
cmp
out
push
rorb
in
leave
out
jg
or
mov
cmp
pop
outsl
add
mov
push
xchg
mov
cmp
pop
xchg
fucomip
fxch
rcll
adc
sub
and
insl
stc
lret
mov
sub
std
popa
int
hlt
shlb
xchg
je
cmp
enter
sar
mov
xlat
lret
push
add
andnps
sub
push
fisubrs
push
pop
inc
insb
gs
in
repz
sub
lds
in
iret
cmp
inc
lahf
mov
jecxz
mov
cmp
push
and
push
call
jne
shlb
add
push
int3
lock
push
adc
pop
pop
adc
mov
pushf
xchg
gs
aas
dec
sbb
movsb
and
adc
ja
das
aad
or
jo
shrl
mov
shlb
jecxz
mov
pop
mov
in
mov
push
adc
jno
inc
xchg
inc
or
into
into
cmpsl
js
inc
push
testb
mov
sti
adc
out
push
cld
nop
adc
negl
sbbl
cs
rcl
xchg
rcr
mov
xchg
and
loope
xchg
adc
ljmp
mov
add
movsl
sarb
in
imulb
or
test
stc
add
mov
outsl
call
ds
je
push
out
out
cmp
sub
jp
inc
cli
idiv
add
jg
and
push
push
pop
add
push
sahf
pop
scas
cli
loopne
xchg
dec
inc
pop
out
lds
inc
filds
movb
lds
mov
ret
sti
add
in
insb
mov
cmp
xor
xchg
mov
rcrb
sbb
imul
jg
sbbl
pusha
pop
adc
pop
dec
loope
pop
jmp
orl
dec
push
push
leave
and
and
cmp
dec
mov
cmpsl
fcoms
int
mov
test
pop
test
call
push
xchg
ficomps
cmpsl
pop
dec
decl
clc
add
adc
jae
aad
jbe
add
sub
xchg
sub
sub
call
xor
repnz
aas
enter
aad
xlat
loope
jno
scas
add
jmp
ret
pusha
ret
pop
ret
pop
popf
das
cmp
xchg
dec
lock
jns
mov
movsb
in
sub
jno
imul
cmp
fdivl
fwait
test
add
mov
push
mov
out
pop
mov
sti
pop
mov
xor
shrl
aam
dec
jge
pop
lret
sbb
call
stos
mov
and
jp
adc
flds
rcrb
mov
bswap
add
shl
and
pop
sub
lcall
sbb
aaa
pop
rcl
inc
and
mov
rorl
test
imul
mov
cmpsl
add
cmp
fldt
push
shr
xlat
jp
aad
in
mov
xchg
stc
sbb
es
pushf
add
rorb
jecxz
aas
imul
shrb
jge
dec
gs
adc
xchg
push
ss
outsb
ret
nop
adcb
int3
push
dec
pop
fs
loope
addl
add
and
mov
xor
ss
mov
out
pop
dec
mov
enter
icebp
xor
xor
xchg
xlat
sti
and
and
popa
outsb
mov
pop
mov
iret
dec
xchg
jb
incb
mov
add
xlat
lods
call
add
stos
or
jge
mov
ds
jl
inc
dec
ss
mov
or
push
lods
mov
inc
in
mov
jp
test
pop
pop
fidivl
fsubs
push
test
leave
dec
daa
pop
dec
mov
es
addr16
or
aas
mov
inc
loopne
jno
inc
mov
mov
add
clc
aaa
je
adc
lcall
rcr
cmpsb
mov
in
push
fwait
dec
dec
lret
loope
popa
push
sub
xor
xchg
cli
add
mov
and
rorl
iret
shlb
jp
pop
sub
cwtl
cld
pop
mov
orb
push
push
aas
inc
andl
rcr
je
sbb
dec
lock
xchg
movl
mov
xchg
fldt
das
sbb
sti
popl
stos
jle
push
cmp
inc
add
call
into
mov
lret
jo
mov
cmpxchg
test
fcoml
enter
out
jecxz
push
pop
mov
cmp
imul
loop
cmp
push
imul
sbb
push
dec
test
xor
and
int
inc
lock
xor
dec
mov
dec
fstl
icebp
or
std
pushf
sbb
mov
fcoms
pop
fists
jo
lock
adc
fildl
xor
ja
arpl
lock
pop
cmp
jne
pusha
out
sub
add
xor
cmp
dec
xchg
fnstcw
ret
cmp
pop
insl
out
sbb
xchg
push
sbb
sub
xlat
dec
lods
inc
cwtl
ret
add
pop
push
loope
das
push
and
cld
cli
mov
add
movsl
ds
stos
or
scas
and
mov
aas
mov
ficomps
jne
adc
sahf
or
lds
mov
inc
sbb
leave
push
ljmp
mov
cmpsb
pop
mov
sbb
jo
popa
mov
fadds
cmpsl
cmpsb
mov
cli
mov
mov
dec
adc
and
jne
jmp
ret
das
ficompl
dec
jmp
pusha
mov
int3
jnp
int
pop
sbb
sbb
jg
mov
mov
jbe
mov
jg
pop
or
cwtl
add
inc
out
pop
shrl
subl
cmp
sarb
lea
imul
dec
clc
les
es
mov
dec
sbb
pop
nop
mov
cmp
hlt
push
rcl
fidivl
pop
lds
ja
lea
int
dec
outsb
fidivl
mov
outsb
lahf
aad
test
js
push
mov
jno
mov
test
jge
fcmovnb
shl
dec
cli
jb
aam
lea
fdiv
xchg
pop
xchg
cwtl
andl
xor
repnz
pushf
sub
and
adcl
rorl
jge
cmp
mov
ror
pop
add
add
fisttpll
decl
cmp
ss
inc
je
cmpsb
call
repnz
sub
daa
fcom
adc
outsb
jne
sbb
cmp
aas
std
pop
xor
scas
cmpsb
in
imul
push
push
mov
andb
call
pop
test
mov
cmc
and
cld
in
dec
in
push
ds
xor
stc
jmp
cmp
scas
out
pop
xor
adc
sahf
out
lcall
cmp
xor
in
enter
fwait
mov
dec
jns
xchg
pop
iret
enter
mov
or
repz
mov
add
test
daa
dec
scas
aad
in
cli
sbb
mov
cmpsb
fs
sti
lds
out
ja
pop
xor
add
shl
decl
jae
hlt
mov
jo
in
mov
adcl
out
pop
push
sbb
cmc
push
pushf
push
inc
aad
test
jno
pop
xchg
mov
push
mov
fisubs
ljmp
enter
xchg
test
adc
mov
test
fiadds
out
xor
mov
popf
sub
pusha
cmp
int3
sbb
add
daa
or
out
mov
adc
sub
mov
loop
cmp
mov
hlt
and
adc
mov
dec
notb
and
push
les
and
cmp
outsb
adc
mov
cli
outsl
gs
mov
cmpsl
sahf
out
subps
xchg
jae
lea
mov
lods
lods
fsubl
xor
adc
shlb
out
sub
mov
or
mov
mov
sbb
mov
mov
sub
inc
cmp
dec
mov
cmpsl
mov
fcmovnbe
xor
push
scas
es
xor
flds
pop
inc
shl
mov
mov
jbe
nop
es
inc
pushf
pusha
andl
inc
cmc
push
ja
fnstenv
dec
adcb
mov
and
xchg
jne
fwait
pop
xchg
inc
stos
lahf
jl
rol
inc
lret
push
xorb
mov
aaa
lcall
jp
daa
jp
mov
jg
jno
repz
push
sbb
and
icebp
rclb
cmp
fldl2e
scas
repnz
mov
jnp
shr
add
lock
pop
or
mov
inc
xchg
adc
mov
test
cmpsl
add
dec
push
mov
mov
pop
jbe
js
lock
or
out
inc
pop
out
or
xchg
repnz
xchg
mov
sti
movsl
adc
and
in
mov
jle
inc
xor
sbb
icebp
pop
and
gs
ret
aad
xchg
push
sbb
aam
mov
sub
lea
dec
enterw
jno
cmp
cld
hlt
xchg
shrl
inc
adc
sbb
cltd
mov
incb
pop
into
xchg
lods
lret
cmpsb
mov
test
adc
mov
stc
xor
pop
adc
aad
pusha
add
dec
adcb
sub
pushf
inc
and
jae
xor
neg
rcr
xor
and
scas
popf
out
jbe
out
fcmovnbe
repnz
aas
iret
and
adc
pop
mov
jns
or
js
leave
xor
xchg
iret
mov
sub
loope
mov
ja
or
and
mov
rol
adc
dec
cs
into
mov
push
into
fcoms
lods
pop
inc
mov
icebp
push
pop
fs
scas
in
pop
subb
sub
lret
inc
mov
cmp
fidivs
xor
sbb
movsl
and
jge
jle
sbb
gs
outsl
or
ret
jge
scas
adc
rorb
xchg
mov
push
into
rcl
outsb
add
sub
dec
popf
lea
ds
mov
mov
pop
int3
jns
mov
lahf
leave
jge
xor
lret
dec
add
xchg
sti
push
loopne
xor
cmp
into
std
cmpsb
and
movsb
loop
scas
or
mov
mov
lahf
push
in
lea
je
and
push
mov
jmp
lods
lods
cmp
scas
and
cli
call
imul
shrl
loop
dec
in
pop
add
dec
xor
jnp
fdivr
fildl
mov
mov
cmp
xor
dec
dec
mov
popa
fisttpl
je
ffree
mov
fnsave
idiv
stos
xchg
mov
movsl
lcall
sub
leave
sub
sbb
and
adc
aam
dec
movsb
jge
sub
mov
add
push
pop
fwait
cmp
add
mov
jp
jnp
jmp
in
fwait
aad
mov
mov
or
or
xchg
mov
and
xchg
push
ret
out
sarb
aaa
mov
add
mov
mov
ja
dec
xor
inc
aas
jne
fwait
dec
inc
mov
aaa
mov
or
push
aam
nop
rcr
inc
xchg
out
cmp
stos
fidivrl
mov
mov
repnz
xor
cld
sbb
lret
pop
mov
into
dec
adc
or
xchg
mov
or
out
les
mov
ret
inc
adc
arpl
push
out
xchg
into
rcrl
xchg
pop
das
mov
arpl
clc
add
ret
sti
repz
mov
push
test
loope
cmp
into
xchg
in
outsb
sbb
or
mulb
dec
les
adc
sarb
jns
sbb
lret
dec
inc
xchg
sahf
sub
jge
test
inc
lock
adcl
rcll
ja
or
nop
add
pop
and
imul
loopne
fwait
xchg
pop
lret
mov
jmp
fldenv
insl
cmp
into
inc
ljmp
sbb
divb
cmpsb
inc
mov
les
rorl
mov
lods
xor
dec
ds
daa
fwait
ja
outsb
fs
xchg
imul
inc
fsubp
cmp
clc
testb
or
xor
aas
push
push
push
sbb
insb
out
cwtl
stc
mov
mov
cmp
imul
mov
fcmovbe
cld
mov
mov
sbb
and
push
ljmp
rolb
inc
movsb
loope
cmc
mov
jno
or
pop
inc
dec
add
jno
sub
sbb
mov
inc
in
mov
sub
loop
in
jg
movsb
jle
or
test
add
dec
mov
sub
aad
addr16
adc
popa
mov
bound
out
in
cmc
and
pop
rorb
mov
ljmp
inc
cmp
jmp
dec
jae
dec
lsl
aaa
sbb
mov
mov
jmp
lock
leave
pop
adc
ljmp
shrl
inc
orb
icebp
cmp
inc
and
mov
sbb
cmp
sub
pushf
insl
shrb
lods
mov
sbb
out
rolb
rcll
addr16
outsl
inc
pop
cmp
sti
adc
enter
adc
ret
mov
mov
js
xor
std
mov
in
inc
xchg
push
dec
repnz
scas
mov
scas
cmp
inc
pop
fucom
mulb
dec
loope
pusha
adc
std
nop
imul
cmpb
add
lahf
dec
dec
pop
ds
loopne
sbb
push
adc
mov
aam
adc
pop
jb
pop
lea
xchg
loop
lret
jp
jg
scas
jo
lock
insb
mov
negb
sahf
pop
stos
jno
movsb
nop
jmp
mov
inc
jnp
hlt
ljmp
push
push
xchg
mov
mov
loop
shrl
push
mov
mov
inc
lret
and
cltd
mov
imul
inc
imul
lcall
repnz
loop
push
fwait
jge
in
jb
pop
jecxz
xchg
out
lret
in
sub
shlb
test
test
mov
hlt
sub
fwait
mov
icebp
imul
cltd
out
addl
fwait
xorb
clc
ret
in
mov
sahf
cmp
mov
xchg
test
mov
mov
pop
pop
mov
stos
mov
sahf
mov
fdivs
inc
push
dec
pop
dec
mov
mov
aad
test
mov
pop
adc
lock
fisttpll
dec
data16
sub
ljmp
repz
fsts
mov
loope
adc
lret
jecxz
push
movsb
out
mov
call
adc
mov
leave
bound
jnp
inc
push
aam
aam
jns
cmpsb
stc
jo
je
rorl
cld
outsl
dec
cmp
cmp
ljmp
paddsw
cmp
aaa
aas
dec
sbb
pop
repnz
ljmp
mov
nop
mov
cmc
test
sbb
es
jo
lret
adc
cmpsl
xchg
addr16
inc
or
daa
adc
push
jle
mov
sbb
aas
leave
cmp
add
dec
xchg
sbb
test
je
or
inc
jns
aas
add
testb
sar
cmp
inc
in
fisubrs
imul
mov
pop
dec
shl
xcrypt-ecb
cmpsl
dec
sub
xchg
dec
ret
movsb
lods
pop
out
int3
out
clc
inc
jmp
sub
ljmp
aam
repz
cmp
push
and
mov
dec
jae
push
jge
and
imul
testl
push
rorb
jge
push
push
add
ss
dec
fwait
and
aad
mov
call
jo
test
outsb
mov
stc
mov
subb
cmpsb
out
jne
jge
jns
rorl
and
movsl
dec
mov
scas
les
inc
aam
jnp
ljmp
sahf
enter
test
es
outsb
test
pusha
insb
jbe
xchg
cltd
int
or
sub
mov
cmpsl
or
push
and
mov
and
orl
iret
cmpl
jo
mov
das
and
jp
dec
mov
scas
push
popf
mov
mov
pop
iret
pop
inc
sbb
fstps
add
or
clc
sarb
aas
imul
push
mov
jno
inc
inc
flds
out
add
xchg
enter
imul
mov
pop
testb
mov
inc
cltd
fldl
popf
inc
and
mov
out
popa
ja
xor
leave
scas
idivl
addb
ret
test
xchg
push
scas
pusha
int
shll
adc
ret
xchg
jno
aas
adc
add
rorl
cli
fildl
xor
adc
adc
cwtl
scas
cmp
test
pop
or
xchg
lcall
and
cmp
lock
mov
sbb
dec
mov
movsl
sub
in
aad
and
push
test
push
mov
mov
dec
int
push
outsl
inc
xor
in
push
in
mov
push
je
lea
mov
sbb
and
sub
mov
clc
jge
cmc
add
add
sti
cmc
push
pushl
inc
rcl
out
cli
sub
loopne
bound
rcr
inc
add
test
push
cli
lret
or
je
jge
push
dec
cmp
inc
cwtl
lret
ret
and
clc
std
pop
add
push
cmp
inc
in
js
add
push
flds
rol
out
adc
insb
icebp
pusha
dec
mov
roll
scas
jecxz
ljmp
mov
outsb
fs
mov
nop
in
pop
mov
aam
in
hlt
pop
iret
fisubl
andb
add
les
mov
add
notl
test
inc
dec
adc
bound
mov
inc
sbb
sbb
sub
cmp
je
dec
psrlq
call
lahf
jge
sahf
daa
fwait
cmp
negb
aad
mov
aad
push
in
btc
sub
push
shrl
push
dec
jne
mov
call
mov
adc
in
inc
xor
out
aaa
xchg
ret
lds
push
lcall
mov
dec
cmp
or
out
cld
clc
adc
push
lods
mov
mov
imul
shll
mov
pop
out
mov
fnsetpm(287
shl
not
test
in
inc
mov
push
mov
out
call
jg
jecxz
add
repz
inc
inc
int3
lahf
jno
ret
hlt
inc
lcall
xchg
xlat
mov
into
xchg
inc
fadds
dec
mov
xor
gs
inc
xor
push
xor
lahf
xchg
cmc
inc
xchg
mov
jmp
in
inc
addr16
mov
or
mov
out
inc
lds
mov
jp
pop
movsl
dec
add
ljmp
pop
repz
jmp
mov
mov
cmp
insl
notb
xlat
movsl
pushf
or
pop
add
mov
in
adc
cli
add
or
dec
pop
sahf
adc
jo
sub
es
test
jg
nop
test
jp
add
sbb
adcl
repnz
mov
and
inc
gs
ret
xchg
loopne
imul
fnstenv
mov
sub
xchg
loop
add
movsb
ljmp
stos
jle
in
nop
test
mov
sub
xchg
inc
xor
jnp
vpsrlw
aas
rcl
and
les
outsb
jle
mov
sbb
lods
mov
aad
mov
bnd
xor
jg
aas
xchg
push
push
into
push
shlb
sbb
xorl
clc
loopne
cmp
imul
aas
xchg
pusha
movsb
add
mov
cmpsl
fidivs
dec
iret
and
scas
lock
sbb
xchg
lods
xchg
mov
cwtl
cmpb
rolb
mov
push
call
dec
lds
std
push
mov
sbbl
or
xchg
call
shll
das
or
jmp
in
jle
sbb
hlt
and
int
jne
sbb
lahf
movsb
sub
cwtl
arpl
cmpsb
push
mov
insl
xor
lret
sub
pop
sbb
push
in
sbb
and
test
dec
sub
scas
mov
inc
sbb
sti
into
fsubrp
icebp
out
inc
arpl
jae
mov
inc
mov
push
sub
fcmovnbe
lcall
leave
ficoml
push
mov
addl
aad
jo
lods
pop
mov
cmc
push
xchg
xchg
push
in
or
imul
lods
lea
add
sub
fadds
andb
fstpt
dec
jge
sub
jp
sbb
xchg
push
adc
shrb
scas
testb
sbb
jle
movsl
mov
cld
ret
jnp
and
sub
dec
mov
jmp
mov
push
mov
test
mov
or
out
adc
cmpsl
je
sahf
aaa
push
sub
inc
jl
leave
pop
jne
filds
inc
mov
imul
out
icebp
out
aaa
popf
push
push
and
cs
sub
dec
mov
fidivl
cmp
inc
insb
mov
enter
pop
stos
cmp
xor
aad
rcl
xchg
notb
fcomip
jecxz
cmpsl
ficoms
dec
repnz
cltd
stc
push
loop
mov
aam
mov
sub
jns
push
lea
dec
ja
add
xor
mov
scas
push
test
sbb
push
aad
jno
adc
inc
test
pop
dec
pop
in
and
dec
adc
imul
push
sub
dec
iret
pop
pop
cmp
scas
mov
xor
es
scas
add
cmp
cmp
dec
pop
pop
xchg
clc
add
mov
inc
inc
xchg
mov
les
repnz
sub
pop
std
dec
cmpsb
fisubl
dec
lea
jmp
xchg
or
mov
testl
shr
jmp
xchg
sarb
xchg
mov
xchg
xor
leave
scas
adc
stos
int
pop
jns
xchg
rcll
lret
and
mov
mov
add
xor
inc
test
dec
iret
jmp
ret
fidivl
cltd
fstpt
repz
andb
mov
jns
mov
sarb
rcll
leave
popf
xor
or
inc
scas
jmp
mov
roll
je
ficompl
sbb
pop
daa
aaa
add
loope
mov
xchg
pop
xor
mov
fisubl
ja
fldl
dec
mov
repnz
pop
rorl
push
xchg
push
lret
or
cmp
test
and
pop
mov
inc
xor
ret
orb
test
ret
cmp
dec
sbb
rorl
test
rcrb
dec
pop
cmc
sahf
fs
pop
stos
add
sahf
jmp
loope
and
fisubrl
movsl
and
ds
cmp
mov
loope
shll
fmul
jmp
xor
jecxz
push
ljmp
pop
stc
jmp
stos
fmuls
ja
mov
das
push
das
outsb
jmp
js
mov
jl
jne
push
dec
idiv
adc
xor
test
sbb
fisttpll
pushf
cmpsl
in
push
inc
shlb
mov
or
in
je
mov
js
sbb
hlt
push
cmpsl
fmuls
stos
movb
jne
inc
pop
push
into
daa
xchg
movsl
push
mov
data16
fs
mov
idivl
cmp
pop
sub
ret
inc
dec
cmp
gs
repnz
push
xchg
fdivl
cmpb
push
ja
sub
pop
adc
stos
push
pushf
jb
jae
sar
jbe
xchg
and
jne
in
and
xor
std
pop
pop
push
daa
xchg
mov
xchg
xchg
es
lret
push
sub
push
rorl
out
inc
imul
or
aad
loope
clc
test
cld
out
jne
jg
cmp
xor
scas
ret
cmp
cmc
popf
scas
hlt
nop
sub
sti
stos
mov
in
or
mov
mov
loope
out
dec
popf
test
int
clc
aas
outsb
in
lods
or
lea
cmpsl
mull
or
push
insb
adc
cld
jne
push
ljmp
push
jae
shrb
lahf
and
adc
dec
mov
scas
push
andb
std
sub
int3
lret
into
push
dec
loope
mov
shlb
mov
cmp
adc
sbb
inc
inc
popf
ret
sarl
pushf
adc
push
xlat
sub
push
and
rcrb
or
es
sub
lods
and
pop
aam
xchg
mov
sub
jbe
mov
dec
scas
in
ficomps
sub
pop
cmp
fcoml
xchg
mov
cmp
out
fcompl
mov
dec
or
in
xchg
mull
adc
jl
sub
mov
into
xor
ja
lret
clc
ss
sub
xor
mov
xchg
cmp
int3
xor
mov
push
adc
cld
mov
push
mov
add
sbb
push
adc
or
shlb
sbb
dec
adc
std
je
adc
jae
jg
aam
push
fistl
xchg
sub
dec
inc
data16
in
out
clc
and
insb
roll
cmc
flds
mov
or
cmpsl
imul
cmpsb
sub
mov
out
push
cmc
push
push
hlt
and
xor
xchg
das
xor
insb
push
push
sub
not
cmp
daa
mov
jae
bound
test
loope,pn
xchg
push
sub
arpl
les
test
ss
fst
daa
or
jbe
or
shrl
mov
out
cltd
ja
jecxz
push
dec
lcall
jecxz
push
dec
sub
fiaddl
adc
jge
sub
enter
fbstp
lea
push
clc
into
sub
and
push
loope
inc
call
dec
popa
loope
addr16
iret
rorb
and
push
pop
jge
cmp
imul
stc
xchg
test
test
inc
lcall
mov
mov
ret
xchg
pop
test
shrb
mov
aad
jl
addr16
aaa
push
jb
or
arpl
stos
fmull
sti
dec
xor
sti
or
xchg
and
jl
mov
js
cmpsl
inc
push
inc
sub
and
cmp
pushl
es
adc
jns
mov
popa
pop
or
ds
divl
int
push
test
pusha
int
fists
pop
cs
jno
addr16
fisttpll
imul
mov
sub
packsswb
into
cli
xor
leave
scas
adc
stos
mov
jnp
stc
cmpsb
xor
aam
shl
cwtl
dec
cmp
or
add
sti
addb
jmp
adc
data16
xchg
lcall
gs
pop
jbe
lea
xlat
inc
add
iret
mov
jae
sub
jle
inc
aaa
pusha
jecxz
push
xorb
sbbl
lahf
arpl
inc
cs
rorl
dec
out
mov
or
aas
rcll
mov
xor
adc
popa
xlat
js
inc
and
mov
or
mov
rcrb
push
and
push
sub
mov
nop
xor
push
pop
sub
fisubrs
push
mov
or
aas
or
dec
lds
out
or
inc
inc
adc
and
loop
mov
sbb
pop
dec
inc
xor
stc
mov
mov
pop
imul
jns
mov
adc
das
dec
in
lret
push
or
adcl
xor
jns
in
stc
call
dec
test
hlt
mov
and
sti
fs
movsb
cmp
insb
sbb
lds
cmp
xchg
nop
jmp
xchg
push
cmc
popa
xchg
add
sub
mov
xor
lcall
rcl
xor
adc
and
push
jmp
add
outsb
stc
and
xchg
cmp
adc
fldl
jl
pop
sti
or
in
sbb
fsin
sub
clc
jbe
mov
popf
add
xor
rclb
xor
loop
push
rcrb
fbstp
dec
gs
dec
in
leave
pop
and
push
daa
jg
arpl
js
xlat
mov
les
jo
outsl
mov
push
popf
xor
jp
add
mov
imul
aas
enter
fld
icebp
popa
in
leave
pop
sub
scas
mov
fwait
int3
and
scas
cmp
pop
movsb
ret
or
pushf
jb
cmp
in
movsb
or
iret
mov
pop
pop
dec
stc
das
movsb
ror
dec
mov
in
test
mov
imulb
or
mov
push
mov
pushf
fnstenv
push
jmp
int
lea
frstor
aam
cli
cmpsl
xchg
push
push
jp
ds
sti
and
icebp
hlt
imul
ss
add
jb
cmp
nop
cmp
mov
test
test
and
adc
out
notl
out
adc
scas
jnp
sbb
push
mov
mov
sbbl
push
xchg
loope
sbb
stc
pop
push
andl
pop
xor
push
push
adc
mov
sbb
aad
inc
in
lret
lcall
iret
pop
cmp
xor
sub
xchg
fs
xor
inc
lods
lock
xor
bound
js
mov
pusha
sti
sbb
rorl
div
ja
adc
daa
mov
and
lret
shrl
push
mov
pop
or
xchg
or
cmp
sahf
fisttpl
add
mov
mov
pop
in
xchg
cmpsl
pop
aaa
jecxz
das
dec
mov
jb
push
jae
and
incb
xor
clc
cmpsb
pop
adc
push
xor
jne
movl
mov
inc
lcall
or
scas
jb
xlat
add
ret
lret
push
in
idivb
push
mov
xchg
pop
fmuls
dec
lret
inc
sub
sbbb
adc
fcomi
sahf
test
repnz
mov
or
fwait
scas
pop
in
scas
stos
xor
jnp
insl
mov
into
pop
dec
mov
je
xchg
out
fmull
or
add
xchg
push
mov
stc
int3
das
lods
cli
pop
sbb
dec
pop
jns
jmp
inc
pop
sbb
lcall
mov
mov
mov
or
subb
jnp
mov
dec
icebp
leave
daa
pop
mov
call
cwtl
out
pop
or
insb
test
icebp
sbb
ljmp
testb
jg
popa
iret
mov
or
andl
arpl
out
outsl
jl
push
repnz
and
bound
fcoml
cmpsl
lcall
das
pop
pop
jge
mov
jno
sub
and
cmc
sbb
xchg
inc
movsb
mov
xor
add
or
aad
out
dec
sub
sbb
fldcw
sub
xchg
xchg
cmp
scas
inc
sub
mov
pcmpgtd
lods
lret
lcall
out
jge
add
inc
imul
jge
imul
mov
mov
jle
cmc
sbb
notl
lds
push
addr16
sbb
mov
mov
inc
adc
fidivs
sbb
loop
add
mov
inc
lock
fadds
sbb
mov
dec
sbb
outsb
jg
mov
sub
sbb
mov
jmp
push
pop
inc
sbb
test
and
mov
in
sub
mov
icebp
jnp
stos
mov
icebp
lret
pop
inc
out
xchg
vfnmsub132sd
xchg
adc
xchg
out
mov
test
and
daa
lds
xor
jo
loopne
adc
mov
cwtl
jae
mov
mov
xchg
aam
pusha
mov
jge
test
addb
cmp
add
es
or
inc
cli
insl
cmp
insb
repz
rorb
sub
mov
int
xchg
push
push
cltd
xor
push
outsl
sahf
fistps
int3
xor
andb
shl
insl
mov
pop
cmpsb
idivb
sub
imul
sbbb
mov
movsl
in
xor
in
add
fsubrs
repz
push
call
cli
cmp
mov
fsubl
imul
or
jne
ret
xchg
inc
dec
dec
rorl
jle
loopne
cltd
push
enter
mulb
mov
pop
cmp
call
inc
push
std
ltr
push
and
shlb
hlt
imul
xchg
arpl
jmp
xchg
mov
jnp
jmp
mov
or
mov
mov
add
outsl
aas
popf
dec
cmc
cmovs
xor
jmp
push
inc
add
ja
lcall
aam
and
fbld
push
mov
cmpl
add
fwait
rcrl
lcall
cs
mov
pusha
mov
mov
jmp
xorl
mov
iret
jne
iret
jmp
sub
add
mov
aad
xchg
xchg
loope
enter
mov
into
pop
es
shrl
push
jle
loopne
mov
push
cmp
js
pop
pop
negb
pop
inc
and
mov
pusha
das
jnp
loopne
inc
ss
insb
shl
dec
and
addr16
mov
mov
push
jbe
movsb
andb
jb
lcall
enter
xchg
cwtl
mov
pop
out
outsb
rolb
jno
mov
fistl
dec
sbb
arpl
pusha
mov
out
sbb
or
jno
cs
les
lcall
pop
push
ret
ret
and
shll
in
shll
pop
inc
or
jecxz
mov
in
pop
aad
leave
outsl
jae
aam
movsb
add
repz
ss
dec
repnz
mov
xchg
mov
movsb
fildl
jnp
sbbb
mov
and
fwait
adc
out
xor
mov
add
sarb
xchg
jge
popf
inc
sub
dec
movsb
jg
push
fs
movsl
or
fwait
out
mov
dec
pop
shrl
in
out
sub
mov
lret
mov
pop
mov
ret
lods
sbb
stos
jno
lock
std
data16
dec
fidivl
hlt
adc
xor
mov
xor
mov
mov
fistl
dec
outsb
test
jo
sub
mov
cmp
cmc
lcall
fmul
lret
cs
aam
ret
jecxz
iret
lock
std
add
mov
lock
dec
in
divb
add
mov
mov
subl
data16
scas
and
push
int
and
push
jecxz
push
lods
or
jae
inc
ds
lret
push
int
out
pop
mov
out
lods
icebp
je
and
lods
jp
push
sub
xor
test
loop
incl
push
jecxz
xchg
bound
sbb
cs
into
xor
mov
imul
stos
cmp
push
pusha
cs
test
fdivs
stos
into
in
inc
xor
or
inc
test
imul
loopne
lods
pop
data16
in
jmp
loope
in
sahf
xchg
cmpsl
mov
loopne
pop
inc
aad
pop
test
sbb
fistps
or
jae
aas
shlb
sahf
addb
fwait
clc
push
or
out
xchg
pop
cmp
mov
xor
and
push
stos
push
loopne
sbb
int
sub
jns
mov
inc
inc
mov
mov
dec
lahf
mov
inc
jae
pop
rcrb
dec
push
adc
pop
std
jge
sbb
or
pusha
sub
xorl
cli
pop
leave
cmp
idiv
repz
add
insl
test
jmp
test
lret
stos
add
xlat
ss
repnz
mov
jmp
in
in
in
mov
or
or
push
adc
daa
xchg
mov
jae
gs
scas
out
pop
call
push
imul
push
mov
pop
ljmp
mov
lds
mulb
aas
popf
je
les
add
insb
dec
gs
incl
inc
mov
mov
xor
mov
out
das
mov
push
or
stc
loopne
and
push
lods
sbb
add
jge
lahf
cwtl
lods
in
ljmp
ret
pop
add
dec
movb
xchg
fsubl
ret
leave
inc
pushf
xchg
mov
insb
jo
sbb
xor
dec
jne
mov
shrl
pop
out
pop
dec
addl
in
push
jg
ficompl
cmc
adc
cmp
dec
sbb
loope
mov
fbld
movsb
adc
lret
pop
movsl
mov
xchg
icebp
jo
test
cmc
cwtl
ljmp
mov
or
jb
pop
jl
andb
outsb
jne
ret
jl
scas
sbb
lods
and
ret
mov
and
imul
ret
call
aam
pop
sub
xor
pop
mov
ljmp
sbb
push
and
and
fdivp
sar
jo
mov
push
mov
movsb
aas
or
cs
push
gs
jmp
and
fbld
test
sub
dec
addr16
adc
movb
repnz
xchg
sbb
mov
mov
cli
pop
lahf
cmpsw
les
shr
add
xor
pushf
sbb
inc
cld
das
cmp
mov
in
cmp
push
mov
mov
sbb
and
repnz
adc
cmp
lea
jp
jle
stos
sbb
scas
stos
and
fbstp
adc
pushf
pop
aaa
scas
add
aaa
mov
test
mov
fmuls
mul
cltd
sbb
xchg
in
jle
sbb
fisubrs
ds
lock
pushf
ljmp
push
std
xchg
or
dec
sahf
sbb
imul
in
in
add
dec
xchg
mov
push
jo
in
cltd
pop
mov
jno
stc
je
cltd
sub
outsb
sti
movsl
ljmp
ja
push
add
mov
mov
ret
dec
adc
mov
mov
shll
jno
popf
shrb
xor
movl
sahf
in
in
nop
jmp
sarb
push
aas
or
repz
mov
adc
js
dec
fwait
push
add
cmp
and
loopne
push
iret
out
jmp
add
les
mov
pushf
js
or
sub
or
pushf
mov
sub
movsb
nop
shrb
stos
dec
cmp
loop
pop
in
in
out
mov
or
mov
dec
mov
lea
mov
mov
data16
imul
lds
add
fsubl
outsl
arpl
aad
or
stc
xchg
shl
mov
sbb
in
xchg
sub
jmp
nop
dec
mov
ret
test
ja
shll
pop
sub
nop
loopne
mov
jnp
lods
int
pop
xchg
and
cmp
lea
ds
lock
sub
sub
mov
movsl
jecxz
repz
fabs
push
inc
mov
pop
movsb
lds
sub
stc
aaa
dec
fdivl
call
bswap
and
xor
lcall
sub
adc
and
lcall
arpl
je
out
pop
or
loope
sahf
and
movsl
mov
add
add
lods
sub
mov
pop
sub
fwait
xor
js
cmp
mov
cmpsl
push
lcall
mov
jge
jecxz
adc
cltd
fistps
push
sar
push
ss
or
xor
push
ret
ret
and
loope
rcr
adc
out
xor
sbb
jb
aam
dec
jb
jae
es
fdivrp
insl
xchg
popa
clc
bound
adc
call
adc
mov
shrl
scas
or
and
sarl
dec
mov
and
add
into
pop
lods
mov
outsb
fsubrl
push
jecxz
fstps
addl
mov
les
iret
int3
sub
xchg
das
or
mov
arpl
cmp
inc
sbb
mov
fdivrl
pop
daa
pop
jmp
mov
mov
insb
lea
stos
out
cli
push
loop
aaa
mov
jle
or
push
je
mov
ret
xchg
lret
fs
aam
sub
fists
adc
xor
xlat
stos
jp
cld
aaa
cmp
mov
aaa
fsubrs
push
enter
inc
test
jns
add
gs
je
sub
push
sub
cmp
pop
sbb
and
out
pop
inc
xor
xlat
mull
mov
cmpsb
inc
push
loopne
jnp
dec
mov
shl
push
push
sub
pop
sbbb
add
inc
jo
jl
xor
xchg
fimuls
or
enter
inc
dec
xchg
jbe
getsec
out
sub
fwait
and
xor
outsb
mov
testl
mov
das
dec
adcl
in
imul
roll
pop
adc
out
lcall
scas
data16
nop
adc
add
mov
jnp
cmpsl
xor
out
cmp
subl
xchg
and
into
xchg
sub
std
imul
adc
cmp
stc
pop
ficoml
test
push
outsb
add
push
mov
cld
sub
aam
sub
jbe
xchg
lock
test
sub
idivb
repz
jnp
popa
clc
xor
jbe
cmp
jecxz
dec
mov
lret
fisubrl
mov
cmpsl
call
push
test
mov
dec
push
xchg
lods
cmp
pop
clc
jl
das
and
daa
dec
xchg
stos
mov
inc
jae
xchg
lods
or
or
lds
and
out
imul
cmc
js
xor
and
push
mov
cmp
call
xchg
add
call
xor
mov
add
or
cmc
outsb
outsl
jne
xchg
les
js
push
insl
into
insl
mov
imul
inc
sub
bound
and
in
lods
movsb
cmp
je
pop
and
push
xor
test
shlb
add
mov
push
push
loop
xchg
xchg
jb
in
mov
arpl
pop
lret
inc
aaa
mov
push
adc
xlat
jecxz
mov
call
sbb
jne
cmpsb
cltd
or
sbb
pusha
js
adc
mov
cmpb
scas
jp
test
mov
fcmovnb
add
or
nop
and
sub
add
and
mov
jbe
push
pusha
or
movsl
nop
push
lods
adc
popf
mov
aam
negl
fcmovb
stc
int3
mov
sub
in
repnz
add
aad
or
fisttpl
xchg
cmp
sbb
fldl
sti
sub
in
out
xchg
lcall
inc
mov
insl
push
adc
xchg
mov
dec
or
jnp
and
lock
push
add
pop
jg
es
js
add
pop
xor
cmp
jg
push
sbb
loop
fildl
pop
ficompl
pop
rcrb
dec
gs
pop
cli
jns
rcl
popf
ds
sahf
fstpl
popa
add
mov
xor
add
sbb
pop
xchg
out
lds
pop
xchg
cmp
or
in
xchg
pop
push
pop
ret
repnz
xlat
imul
pop
dec
push
es
pop
int3
movb
ret
out
testb
push
lcall
xchg
lods
adc
js
sarb
repz
movsb
pusha
out
daa
in
ror
and
lahf
icebp
lret
int
add
and
mov
push
nop
popf
jno
inc
ficompl
mov
push
or
mov
loope
jg
outsb
out
lea
pop
clc
jecxz
fwait
cmp
add
jp
adc
shl
cmp
dec
dec
ja
jo
cmp
inc
aas
stos
sti
mov
inc
sub
mov
cs
add
test
dec
xchg
lods
jecxz
add
xchg
push
dec
fisttps
pop
inc
inc
gs
mov
pop
cwtl
sub
out
sub
fadds
or
lcall
xchg
sub
xchg
shll
aad
mov
pop
mov
or
ret
adc
int
pop
mov
adc
cmp
dec
mov
pop
ljmp
dec
dec
and
nop
iret
cmp
popa
add
cmpb
mov
scas
addr16
jne
nop
lods
xor
je
dec
pop
dec
push
dec
ja
nop
lahf
ucomiss
iret
mov
fwait
addb
xchg
mov
dec
jmp
cli
sbb
pusha
mov
mov
push
dec
sar
adc
cmpsb
movsl
inc
dec
adc
xchg
mov
fimuls
int
adc
imul
mov
sub
in
mov
movsl
dec
xor
std
pop
add
inc
sbb
test
sbb
mov
jp
inc
sub
pop
dec
faddp
push
add
lds
sbb
xlat
inc
pop
lahf
popa
lcall
xchg
call
pop
imulb
and
mov
aas
test
mov
push
aam
shll
inc
or
dec
xor
and
cs
add
rol
mov
xor
add
push
stos
sahf
xorl
insb
popf
dec
mov
inc
or
lret
add
lds
test
dec
xchg
jge
sub
cld
sub
lcall
adc
scas
add
andl
sbb
push
add
pop
cmp
push
mov
mov
int3
outsb
testb
nop
and
jns
out
aaa
insl
dec
or
pushf
sar
pop
mov
hlt
jle
dec
out
arpl
pop
mov
inc
and
push
cld
shll
jno
xchg
dec
or
popa
cltd
and
adc
sub
and
pop
inc
xor
lret
and
sti
push
xchg
repz
fsubrl
ror
xchg
out
cmp
dec
pop
loop
pop
add
add
insl
jb
sbb
das
and
dec
sti
adc
sahf
aaa
add
push
cpuid
and
mov
push
in
mov
xor
in
pop
daa
add
pop
dec
or
or
xchg
pop
cld
outsl
int3
mov
rcrl
push
push
into
inc
pop
inc
pop
clc
dec
xchg
rol
dec
inc
lea
add
mov
es
cmp
pusha
sbb
insb
xchg
mov
fcmovbe
out
jb
inc
push
inc
out
jo
rorb
sbb
push
sub
mov
pop
data16
pop
xchg
ja
in
pop
and
sub
jae
add
xor
cmpsl
xor
sub
lahf
mov
test
out
hlt
dec
mov
jne
rolb
dec
push
jmp
cmc
scas
cmpb
movsb
adc
cmp
xchg
and
pop
xchg
int
jp
inc
push
rorl
pop
jge
jno
icebp
xchg
mov
push
imul
leave
mov
ror
out
pop
roll
shlb
scas
outsb
xchg
sahf
sub
inc
clc
outsl
test
fsubrs
sbb
roll
imul
aad
imul
js
mov
in
into
arpl
repz
mov
push
mov
push
std
bound
cmpsb
jo
iret
bswap
and
rep
cmc
rcr
add
cmp
lcall
sbb
and
jne
sbb
loopne
fdivs
jnp
inc
test
pop
jno
add
add
jg
cmc
fs
shrl
push
push
mov
xor
cmovg
mov
jg
push
dec
call
aaa
jle
xchg
xor
sub
or
aas
inc
and
jns
and
mov
jo
cmp
bound
lcall
fdivrp
sti
sbb
imul
data16
das
and
pop
push
mov
cmp
std
xchg
gs
ljmp
mov
arpl
rol
call
lahf
xchg
les
fistl
sub
xchg
aad
mov
in
or
in
insb
pop
dec
lcall
aad
arpl
sbb
cmp
out
jb
push
les
sub
or
adc
add
sbb
xorb
inc
or
cmpl
xchg
divb
xchg
nop
add
les
xor
and
mov
inc
insb
aaa
mov
or
fldenv
inc
mov
sbb
lret
lret
or
leave
sub
es
aad
rorl
cmpb
mov
and
lods
sub
mov
pop
cmp
cmp
movsl
es
cmp
sub
icebp
cmpsb
jbe
mov
sub
andl
mov
cmp
pop
jb
popf
lahf
cld
jmp
add
aad
loope
xor
fldcw
push
jmp
mov
mov
jge
jno
shlb
or
movsb
scas
testb
rcll
mov
xchg
es
mov
ret
mov
cld
int
leave
in
xor
or
or
mov
shlb
jl
imul
rcrb
push
sub
jne
repnz
scas
mov
xchg
loope
arpl
mov
lret
inc
ret
dec
fcmovne
pop
popa
sbb
in
jno
cltd
push
adc
push
mulb
mov
inc
jns
cwtl
jnp
es
dec
addr16
dec
data16
and
arpl
mov
mov
sti
xor
ficomps
lds
pop
aam
push
push
dec
das
imul
and
fsubp
cwtl
cmpsb
lock
and
mov
push
sahf
adc
adcl
dec
aam
inc
dec
mov
cli
das
popf
push
mov
scas
sbb
fsubrs
push
repz
inc
cmp
mov
aaa
xor
cld
fwait
push
xor
in
cmp
cmpb
push
cmp
adc
scas
cmpsl
insl
aas
loopne
lahf
rol
push
push
bnd
sub
push
dec
cmp
ljmp
or
movl
mov
xchg
and
jbe
pop
iret
iret
scas
daa
les
cmpsl
mov
sub
gs
xchg
aam
adc
mov
ficompl
jae
mov
out
cmp
sub
test
outsl
mov
aad
mov
cltd
out
loopne
gs
pop
mov
or
mov
dec
jbe
inc
into
notl
sbbl
fs
test
pusha
and
data16
lea
mov
xor
lods
xor
addr16
mov
cmp
repnz
loop
icebp
xchg
imul
push
sub
out
das
testb
movsl
inc
pop
inc
sbb
cmc
movl
xchg
shlb
xchg
fisubl
loopne
iret
scas
or
inc
xchg
movsb
jmp
sub
fildl
out
sub
divb
mov
pop
push
push
mov
mov
loopne
mov
cmpl
shrb
xor
sbb
lea
fxch
cmp
test
xchg
mov
lret
xor
or
dec
cmpb
add
je
push
fwait
xadd
dec
pop
xor
cmp
mov
fld
mov
sahf
pusha
movsb
out
fs
sbb
or
or
cmpsl
ret
mov
or
jbe
sbb
int
jo
pop
mov
push
rolb
daa
repz
jge
sti
or
mov
dec
add
ja
int3
mov
outsb
adc
les
es
lea
ret
jmp
inc
out
sti
inc
scas
nop
cltd
mov
sbb
negb
sub
stos
mov
fcoml
push
cmp
push
push
jnp
testb
adc
lock
adc
cmp
shlb
push
dec
mov
rorl
jg
lcall
mov
jno
sub
mov
inc
and
mov
rcrb
fsubl
lods
test
shrb
add
bound
rcll
dec
and
and
lds
fcmove
lock
xchg
fiaddl
out
inc
iret
mov
lahf
fucom
jb
push
or
fistpl
mov
sbb
out
mov
mov
xlat
dec
sub
cmpsb
out
lahf
stc
jp,pn
mov
rorl
cmp
cmp
jne
movsb
dec
lods
cltd
xchg
repnz
mov
sub
mov
push
lods
icebp
movsl
imul
jmp
rcrb
mov
inc
fdivrp
repz
idivw
std
push
or
mulb
mov
push
pop
notb
xor
inc
xor
rcr
mov
repnz
or
cwtl
sub
das
js
aaa
mov
pusha
xor
lods
rorb
push
cwtl
fidivrl
sbb
add
and
stos
xorb
jl
adc
fidivrs
and
sbb
pusha
out
test
mov
fadds
jecxz
pop
and
inc
cmpsl
xor
and
mov
and
inc
int
add
add
enter
and
sbb
sub
and
sbb
ljmp
test
add
mov
leave
mov
jge
jae
xor
adc
inc
dec
pop
dec
outsb
add
adc
repz
push
mov
push
sbb
xchg
mov
mov
loope
ja
cmc
xlat
adc
lret
popa
add
pop
fdivrl
and
sbb
mov
xor
mulb
or
in
push
adc
cmc
fdivs
adc
mov
es
lods
add
test
cs
jnp
shl
push
pop
mov
mov
push
add
jo
pop
mov
scas
dec
inc
outsb
mov
subb
dec
pop
cmp
mov
pop
out
cmp
mov
sbb
daa
pop
shlb
fs
fs
sarb
jmpw
sbb
pop
hlt
adc
mov
ja
jb
vminsd
xor
js
dec
jl
pop
inc
sbb
aad
or
cmp
addr16
in
mov
lods
cmc
xchg
inc
mov
jbe
add
mov
jecxz
inc
aam
dec
jb
sar
ret
scas
mov
lock
sti
mov
mov
and
mov
fldt
bswap
pusha
sahf
pop
daa
dec
mov
mov
and
mov
and
test
mov
sbb
ss
cltd
sub
js
push
mov
sbb
or
js
arpl
cmp
push
ja
imull
ds
push
adc
jnp
cmpsl
mov
and
adc
clc
je
loope
mov
pop
leave
fnstsw
ror
out
jo
adc
cmp
loop
adc
dec
push
popf
push
inc
dec
fsubrs
pop
jl
ret
mov
cmc
out
pop
push
test
pop
pop
ljmp
jbe,pt
or
and
notb
insb
popa
nop
lds
cmpsl
pusha
sbb
scas
addr16
sarl
daa
sbb
imul
ss
xorb
pop
jle
repnz
jge
add
xchg
adc
xchg
sub
and
sub
out
pusha
dec
cs
jns
inc
inc
adc
popl
dec
ds
aam
jbe
gs
pop
mov
jno
outsl
pop
mov
addr16
pop
popa
ss
std
mov
or
loopne
xchg
and
insb
xchg
negb
aad
daa
fidivl
mov
jge
out
adc
movsl
repz
adc
mov
lea
xor
nop
jge
in
jbe
adc
dec
or
jecxz
test
out
out
fistpl
pushf
fstl
mov
faddp
idivb
cs
cmp
sbb
mov
ss
mov
jle
jbe
sbb
jo
push
mov
mov
dec
outsb
cmpsl
stos
fiadds
xor
jle
loop
pushf
push
into
or
mov
and
ret
loop
shrb
js
test
push
std
mov
xchg
jle
mov
dec
and
lret
aam
ja
xchg
push
mov
cmp
ss
mov
popa
inc
jbe
gs
inc
pop
outsl
enter
lods
ja
mov
sbb
aas
arpl
movsb
lock
mov
push
sahf
cwtl
mov
cmp
fcompl
adc
sbb
lea
cmp
imul
adc
stos
push
hlt
stos
test
popa
daa
pop
mov
add
xor
add
cwtl
mov
call
jmp
xchg
add
pop
adc
mov
iret
dec
or
das
cmp
adc
into
lahf
call
clc
mov
add
inc
jle
out
jle
test
sbb
or
lcall
jle
in
int
decl
shufps
mov
aad
inc
pop
sub
arpl
in
repz
cmp
xor
cmp
loopne
icebp
repnz
jo
imul
gs
add
bound
sub
iret
xchg
mov
in
loop
rorb
jmp
les
imul
add
in
cmc
jnp
out
push
cmp
dec
test
seta
ret
mov
sbb
xor
xchg
adc
ds
sbb
sahf
test
mov
hlt
movsb
fbstp
rorl
jecxz
out
dec
loope
mov
xor
nop
test
xchg
jnp
jno
dec
and
fstp
and
push
lahf
mov
loopne
mov
inc
fidivrs
les
lds
jmp
fnsave
stos
push
shll
pushf
sbb
push
jp
dec
fs
mov
sti
das
shrb
out
sbb
mov
nop
outsl
mov
push
insb
pop
sub
xor
jmp
jl
xlat
and
inc
xchg
cs
and
inc
loop
pop
pop
les
sti
xchg
fnstenv
fisubrs
js
shlb
push
mov
adc
in
loope
sbb
fidivl
scas
fwait
lds
add
cmp
std
outsl
push
jb
sbb
psrad
scas
push
mov
insl
push
mov
pop
lret
test
xchg
jge
push
out
test
ds
pop
xor
stos
or
repz
pop
loopne
mov
addl
or
hlt
decl
push
sbb
adc
outsb
pop
xor
mov
negl
sub
add
movsb
sti
jle
sar
bound
test
cmp
pop
dec
cld
mov
mov
fucom
sti
inc
fs
gs
jmp
pushf
mov
sub
or
sub
mov
dec
inc
lcall
add
push
xlat
cmc
xor
out
and
enter
cmp
or
sti
mov
fadd
cmp
inc
mov
mov
popa
pop
jg
adc
add
add
add
pop
stos
mov
xor
mov
inc
pop
inc
adc
mov
movb
sub
icebp
xchg
jl
or
mov
test
mov
je
xor
adcb
daa
jge
xchg
xchg
sahf
out
testb
rclb
leave
fisttpl
div
add
push
stc
pop
push
jnp
xlat
daa
jp
push
adc
push
ds
jb
and
lds
lock
cmp
jge
add
xor
aad
cmp
cs
decl
filds
stc
cmp
jb
mov
or
divl
das
push
fbstp
cld
inc
jno
cmp
enter
pusha
cwtl
imul
ds
in
pop
and
std
shl
mov
aam
subl
cs
leave
pushf
in
add
idivl
lret
ret
cmpsl
test
xchg
stos
addr16
inc
loop
add
mov
adc
inc
call
fcomi
or
ffree
or
cmp
mov
cmp
fwait
test
adc
ss
mov
sti
ds
mov
sbb
push
ds
decb
lds
jle
mov
js
enter
jno
and
ja
jae
mov
push
daa
jbe
mov
cmp
jne
adc
loopne
movsb
lret
jmp
xchg
loopne
subl
adc
dec
pop
sti
add
pop
inc
loop
pop
push
adc
cmp
cmpsb
push
fadds
cli
ljmp
adc
inc
movsl
hlt
jg
jnp
push
pop
test
cmp
and
addr16
imul
sahf
repz
fsubrs
shlb
movsl
fwait
push
sub
xchg
inc
dec
sub
and
and
xor
fsubrs
gs
sahf
xchg
andl
mov
ror
imul
jno
jne
inc
sbb
pusha
test
pop
hlt
adc
pop
and
or
sub
pop
hlt
cli
push
sti
bnd
pop
int3
jge
and
sti
insl
adc
jle
andl
inc
push
cmp
cmp
adc
adc
or
je
in
xor
hlt
aad
movlps
dec
sbb
add
shrl
mov
xchg
push
xchg
adc
pop
sub
rorl
sbb
xlat
je
jns
js
mov
shr
pinsrw
fdivrl
jmp
push
gs
sbb
pop
add
or
jg
pushf
xor
lea
lock
inc
movsl
pop
sahf
in
rorb
rcrl
rcll
xchg
lcall
sti
ret
out
mov
data16
std
pop
and
scas
mov
loope
cmpsl
jmp
push
popf
aam
sahf
popf
inc
dec
mov
inc
shlb
cltd
popa
dec
mov
mov
bnd
mov
cmp
fisubrs
rcr
sbb
inc
adcl
or
xchg
ficomps
jno
pop
clc
mov
ja
xchg
inc
add
das
dec
mov
out
mov
nop
ds
test
rorl
and
faddl
shlb
outsl
aas
bnd
add
dec
mov
pop
jmp
mov
xor
cmpsb
sub
and
inc
aas
pop
andl
inc
jge
dec
loop
cld
gs
sbb
add
add
repz
pop
jns
inc
mov
sbb
xor
jecxz
jg
movsb
xchg
cmpl
xchg
sbb
jnp
lds
pop
addr16
cmp
xchg
icebp
mov
sub
pop
inc
add
cltd
stos
add
aas
sti
movsl
push
mov
stos
lcall
imul
ljmp
lcall
ret
and
jns
daa
add
popf
cmp
ret
cmp
daa
inc
push
call
and
cmpsb
fildl
dec
dec
mov
loopne
xchg
fwait
dec
ja
mov
mov
ret
cmp
mov
arpl
fdivrs
pop
jge
test
lcall
ret
push
push
mov
mov
sar
mov
or
icebp
in
bound
in
push
push
dec
loop
xchg
test
pop
je
aaa
sbb
and
or
pusha
fmuls
stos
sub
dec
call
push
xchg
aam
cmp
jne
test
mov
mov
sub
jb
stos
push
fstpl
lahf
inc
mov
and
sub
imul
imul
push
xchg
mov
fs
cli
leave
xlat
ret
subl
in
rcrw
pusha
aad
and
lods
cltd
daa
into
dec
cmpsl
shlb
xor
xchg
push
fstp
pusha
ror
scas
mov
orl
push
hlt
inc
aaa
arpl
push
adc
xchg
add
xchg
mov
rcll
and
xor
pop
out
mov
sbb
mov
dec
push
or
xchg
arpl
ss
push
mov
lret
mov
xor
inc
dec
fcomp
pop
pop
pop
xchg
je
inc
adc
xchg
xlat
idivl
cli
loope
sub
mov
pop
push
xchg
cmc
push
pop
inc
insb
ljmp
fs
mov
sub
aad
jo
mov
jns
push
cwtl
pop
aam
movsb
xor
insb
dec
push
subl
lahf
std
movsl
sbb
ret
mov
aam
ss
dec
xchg
or
es
jbe
or
mov
adc
bound
cli
int
int3
sbb
cltd
aas
xchg
xor
xor
jmp
sbb
rol
cmp
sti
xor
mov
rorl
xor
stc
xchg
jb
jbe
mov
cmp
add
inc
fwait
call
shlb
es
sub
xlat
cmp
pop
movsl
pop
or
mov
ret
scas
push
jmp
mov
pop
xchg
lea
mov
sarl
loopne
imul
test
dec
ds
int3
dec
jp
mov
ds
mov
mov
push
dec
aam
sahf
xchg
rolb
mov
call
outsb
jmp
pop
mov
push
adc
pop
pusha
lods
jne
ret
xchg
mov
clc
fldl
push
cmc
add
aam
add
mov
dec
adcl
insb
fsubrs
push
arpl
lds
fldz
xorb
xchg
inc
jne
fidivl
pop
aaa
outsb
pop
jbe
sbbb
push
xor
pop
sbb
imul
roll
xlat
lahf
std
xchg
and
lods
pop
cmp
cmp
mov
sub
cmp
pop
sbb
mov
lods
or
cmp
stos
ja
or
add
bound
xchg
ljmp
jle
pushf
xor
pop
sahf
das
add
std
sbb
cmp
mov
lahf
cmc
aas
push
dec
inc
mov
xor
inc
push
bound
test
sbb
xor
ljmp
std
insl
mov
push
mov
arpl
push
lods
fdivrs
lret
lea
lods
mov
lods
movsb
jo
and
jae
mov
mov
addr16
fimuls
insl
imul
sub
mov
sub
xchg
arpl
imul
adc
flds
pop
jg
pushf
scas
adc
push
dec
mov
jne
cmp
push
fs
sbb
popf
test
loopne
filds
push
push
push
bound
fdivs
movsl
addr16
pushf
cwtl
push
sbbb
or
dec
clc
movsb
mov
xor
ljmp
push
pcmpeqw
ret
cwtl
test
ds
inc
push
mov
add
cmp
aas
jg
jnp
dec
fs
pushf
shl
stc
push
add
inc
dec
leave
xorb
xchg
mov
sbb
aaa
fs
scas
test
in
clc
sbb
fs
sbb
mov
dec
imul
add
rcrb
sub
and
ja
aad
xchg
rol
inc
in
mov
adc
into
shl
test
das
loope
or
test
adc
test
ljmp
add
outsb
out
jp
mov
popf
insl
stc
dec
cmp
dec
outsb
adc
into
mov
sub
add
in
push
and
stos
mov
jo
add
push
push
dec
imul
dec
and
push
into
test
pop
out
jns
adc
pop
mov
xor
wrmsr
outsb
mov
repnz
pop
lods
xor
or
or
leave
insl
mov
jl
pusha
lds
pop
fbld
aas
fucomp
lahf
jg
js
flds
enter
pop
icebp
testb
sbbb
pop
insl
in
push
std
movsl
inc
jb
loope
cmpsb
dec
push
test
jb
adc
fcom
sbb
mov
pop
cmp
inc
xor
sahf
or
cmpsb
mov
dec
in
ret
jno
js
pusha
cmp
adc
jge
pop
repnz
adc
lahf
pop
push
insb
outsb
pop
cltd
arpl
adc
jmp
test
cmp
sbb
iret
or
xor
or
adc
roll
jae
xor
push
outsl
or
lret
fs
mov
loope
fisttps
and
push
push
or
cltd
add
sbb
lea
inc
icebp
or
push
fldenv
gs
xor
out
dec
mov
pop
lahf
pop
insl
sub
dec
jo
mov
jecxz
movsl
xlat
jo
sti
lea
jno
mov
sarl
adc
mov
cmpsb
mov
jne
test
lahf
lea
test
inc
push
inc
or
push
add
repz
inc
dec
arpl
jge
icebp
and
fs
dec
pop
pushf
push
xor
loop
sbb
pop
mov
xchg
shll
add
adc
push
addr16
sarl
pop
rorb
push
or
inc
sbbb
out
jno
pop
stos
or
ja
ja
push
mov
xchg
sahf
repnz
xchg
stc
repz
out
in
sahf
add
xchg
test
inc
imul
cmp
xchg
or
pop
mov
or
ret
mov
xor
pushf
sbb
mov
and
mov
xchg
or
jge
lret
sbbb
mov
int3
sbb
xor
mov
sti
inc
mov
cmp
xchg
sti
sbb
je
adc
lcall
cmpsb
xor
cmovp
sub
out
lock
sub
xchg
test
sbb
fbld
jmp
add
push
or
xor
jb
sbbl
mov
shlb
dec
cli
and
jne
mov
dec
add
cli
repz
push
pushl
mov
push
push
mov
sbb
fsubrp
jb
push
inc
add
sarb
mov
or
jns
es
xor
lock
dec
adc
xor
fsubrp
scas
xor
cmp
popa
out
cmp
pop
mov
les
or
inc
adc
in
xor
pop
sti
cmp
bound
inc
add
int3
dec
adc
cmp
or
movsl
sbb
dec
sbb
fidivl
xchg
popa
inc
pop
std
inc
sbb
repnz
dec
cld
push
inc
cmpsb
dec
mov
sbb
sub
fwait
repz
push
in
jecxz
add
loope
cltd
data16
or
lock
stos
std
pop
mov
andl
adc
push
inc
xchg
scas
xchg
adc
out
add
fistpll
iret
sbb
push
xor
xchg
aam
sbb
cmp
cmp
pop
imul
xchg
arpl
into
stc
add
push
jl
cmp
test
xor
cmp
pop
xchg
push
pop
nop
xor
xchg
outsl
outsb
mov
in
ljmp
jecxz
inc
and
push
scas
mov
fcompl
push
push
jl
shrd
push
cmp
cmp
jo
pop
ficoms
and
outsl
mov
mov
inc
outsb
dec
outsb
fnstenv
cwtl
aam
pop
pop
sbb
lock
cwtl
push
or
adc
add
lcall
clc
sbb
xchg
mov
and
fisubs
mov
lods
rcll
icebp
sbb
andb
jge
addr16
add
sub
dec
dec
pop
pop
jle
lcall
push
lret
test
icebp
dec
iret
loope,pn
sub
mov
jns
xor
scas
outsb
lret
test
mov
or
cmc
mov
dec
and
int
adc
xchg
stos
and
enter
dec
push
inc
lea
mov
ret
mov
or
daa
pop
cs
ss
jbe
cmp
jno
mov
jne
pop
add
sub
movsb
or
ds
mov
add
inc
add
mov
dec
mov
notb
js
inc
xor
bound
inc
jbe
int3
mov
icebp
outsb
inc
sbb
rolb
or
add
mov
xor
ja
pushf
stos
lahf
movsl
and
sbb
test
jmp
add
iret
push
insb
sub
bound
jne
in
in
cltd
and
xor
mov
or
or
mov
push
jp
push
sbb
pop
leave
in
vmovdqa
das
xor
loopne
push
xchg
es
icebp
inc
add
sub
mov
push
mov
fistps
push
clc
push
cmp
mov
gs
test
out
shlb
das
mov
sub
or
xchg
sahf
ret
push
aaa
rclb
mov
loopne
cmp
hlt
xor
idivl
jae
int
call
sbb
jecxz
popf
inc
sbb
jecxz
lds
and
xchg
lock
test
add
popf
icebp
dec
jnp
mov
mov
xchg
arpl
mov
std
push
repnz
lds
cmc
jne
xchg
in
sub
dec
or
sbb
adc
xchg
pusha
in
mov
jbe
pop
adc
or
mov
adc
js
push
mov
jb
mov
xchg
or
cwtl
push
leave
test
out
push
inc
cltd
test
fwait
sub
popa
mov
jmp
pop
mov
mov
dec
mov
push
aam
mov
dec
leave
adc
add
push
inc
imul
mov
and
pop
pop
mov
fiadds
mov
push
pop
add
cwtd
es
xchg
roll
mov
xchg
insb
outsl
xchg
xchg
xlat
es
daa
cli
cmpsb
add
mov
pop
and
mov
push
cld
cmp
mov
ja
add
cli
shlb
dec
add
sahf
xor
inc
sbb
sub
xchg
mov
and
enter
push
lret
jmp
push
addr16
mov
dec
pop
mov
ret
bound
jp
fnstenv
ljmp
mov
repz
repz
mov
push
lret
into
leave
xchg
jbe
cmpsl
mov
or
cmc
mov
enter
setle
mov
fildl
mov
or
mov
xchg
je
sarb
jb
outsl
into
stos
je
testl
xor
pop
sarl
addr16
outsl
sub
xchg
loope
loopne
call
push
enter
jmp
scas
enter
out
sub
push
xlat
push
sbb
in
mov
mov
mov
inc
sub
ret
pop
xor
inc
add
dec
ficoms
shl
mov
mov
imul
dec
cmp
sti
sbb
sub
cli
mov
push
or
lods
fcoml
jo
inc
popf
ja
lcallw
add
outsb
push
jmp
pop
clc
add
call
ficomps
xchg
repz
mov
std
or
out
sbb
adc
call
rcl
std
notb
decl
jo
sub
mov
arpl
ljmp
test
sbb
pop
inc
add
or
pop
mov
loop
into
mov
mov
mov
lock
std
xchg
adc
test
nop
xor
sbb
jg
testl
push
lea
mov
fadd
lcall
or
mov
pop
pop
mov
mov
sbb
les
aaa
xor
fcomps
loopne
test
je
hlt
jae
push
xchg
pushf
add
jmp
dec
and
and
pushf
iret
fdivl
ror
jns
js
stc
bound
scas
push
daa
inc
push
or
inc
cmp
mov
cmp
iret
jge
imul
push
fdivs
mov
je
adc
sti
xchg
xor
inc
push
push
xchg
xor
inc
cmc
dec
shrb
mov
or
test
mov
stos
xchg
icebp
add
mov
ss
jecxz
add
mov
mov
pop
repnz
sub
fdivs
jnp
push
jbe
lcall
mov
pop
in
enter
mov
sar
dec
repz
nop
cmc
mov
adc
dec
dec
movb
sub
mov
dec
sbb
jno
sbb
sub
lock
add
inc
enter
dec
jmp
test
or
imul
mov
cmpsb
cmc
pop
mov
jge
cmp
sub
call
cmp
test
out
insb
xchg
or
jb
repnz
cmpsb
or
mov
leave
stos
sbb
neg
jno
add
cmp
test
fdivs
dec
data16
mov
cmp
ret
scas
inc
sbb
sbbb
pop
scas
jbe
clc
gs
xchg
or
xchg
jge
adc
push
cmp
mov
jns
test
sub
popf
arpl
aad
aam
xchg
fbstp
aam
sub
hlt
incb
insl
lods
xchg
xor
mov
nop
sub
scas
loope
lahf
cld
mov
jbe
iret
xor
push
outsb
cs
enter
cmpsb
movsl
add
fmulp
add
push
sub
ja
ja
repz
hlt
lret
mov
test
push
out
daa
stos
mov
loop
sbb
xchg
pop
adc
push
lock
mov
mov
jnp
add
pop
mov
adc
dec
mov
lret
jge
push
push
fwait
sahf
mov
stos
call
test
aad
mov
shrb
and
inc
ret
add
mov
push
jle
mov
mov
push
hlt
pop
and
or
mov
mov
imul
add
mov
adc
mov
cwtl
test
pop
and
sub
pop
pushf
jo
jne
cld
aad
imul
lret
out
sbbb
fs
pop
jo
and
fadds
cld
scas
add
jnp
es
push
insl
or
roll
les
imul
and
pop
das
outsb
popa
mov
fwait
cwtl
pushf
ljmp
fadds
mov
outsl
pop
cmp
scas
sahf
std
lea
and
jbe
mov
lea
sbb
push
pushf
lret
add
mov
adc
pop
mov
mov
roll
mov
lea
fwait
cmp
cmp
ret
rclb
enter
add
std
jne
loope
lods
cmpsb
out
inc
sub
mov
inc
stc
and
adc
ja
lcall
xlat
sub
ficomps
aad
mov
cld
daa
fldcw
pop
movsl
outsb
bound
test
ss
arpl
test
fistpll
mov
inc
insb
dec
lret
dec
mov
out
xlat
pop
lds
cld
pop
push
lea
iret
adc
jle
into
out
hlt
jb
dec
pusha
mov
xchg
iret
xchg
inc
je
fbstp
ja
or
lret
add
xchg
xchg
mov
sub
test
shll
pop
clc
sar
or
xchg
xor
cmp
mov
mov
cmova
repnz
adc
fucom
mov
das
push
cmc
jecxz
xor
mov
cmp
out
test
xchg
shrl
inc
xor
icebp
mov
xorl
xor
out
rcll
jns
frstor
or
ja
movb
sub
sbb
mov
outsl
int
sub
imul
out
mov
sbb
mov
insl
cmpsl
or
cmpsl
cmpsb
dec
daa
mull
repz
push
pop
fisubrl
fidivrs
fld
mov
sbb
fwait
push
lea
pop
incl
mov
ss
repz
xchg
or
pusha
jl
mov
dec
nop
jp
and
mov
ljmp
adc
cltd
mov
xchg
fstl
and
rolb
das
dec
mov
jno
es
pop
loop
or
mov
sahf
push
data16
incb
loope
repz
pop
mov
push
push
in
inc
fs
lods
dec
sbb
push
mov
loopne
mov
imul
jo
dec
mov
aam
std
in
xchg
fdiv
jmp
mov
ja
dec
in
outsl
pushf
xchg
stos
mov
mov
xor
daa
out
xchg
fnstenv
adc
scas
insl
std
cmp
mov
and
nop
mov
outsl
adc
or
and
xchg
sub
push
bound
aad
push
dec
mov
xchg
push
cltd
in
decl
adc
mov
hlt
ss
aam
lods
xlat
jbe
mov
mov
stos
lods
stos
ss
xor
add
sbb
sbb
lock
movb
xor
sub
pop
push
pop
test
xchg
or
aam
mov
mov
or
insl
jmp
test
fiadds
jbe
aas
dec
nop
aad
lea
test
or
cmc
cmp
inc
popa
lcall
push
and
movsl
outsl
pop
sbb
popf
fildl
lahf
xchg
mov
push
cmp
mov
inc
sub
and
lcall
sti
xor
mov
dec
push
nop
mov
subl
scas
jne
call
icebp
inc
cs
jae
addr16
int3
pop
cmpsl
mov
sbb
mov
cmp
outsl
fldenv
icebp
stos
insl
out
mov
sbb
and
je
in
inc
add
mov
std
fildll
divb
sub
insb
mov
fistps
cld
xlat
push
dec
adc
jmp
jmp
test
stos
inc
cld
ret
xor
sbb
xchg
adc
mov
inc
pop
hlt
sti
sub
or
inc
das
movsb
mov
and
mov
popf
and
mov
mov
sahf
shrb
mov
cmp
into
cli
fdivs
aaa
lret
jbe
add
or
fmull
mov
pop
jb
fs
les
mov
push
inc
inc
mov
mov
and
adc
pushf
icebp
repnz
mov
mov
mov
mov
pop
cwtl
out
popf
xchg
adc
pop
xchg
push
out
ds
inc
ljmp
mov
rcrl
incl
dec
push
in
cltd
cwtl
notl
sbb
sbb
dec
shl
xchg
mov
or
jns
adc
xchg
mov
cwtl
imul
cmp
addr16
int3
jo
test
ja
int3
push
and
cmp
mov
adc
pusha
push
clc
push
inc
push
xor
das
mov
xor
jmp
sub
adc
jecxz
popf
inc
push
and
mov
sbb
inc
imul
fisttpll
test
in
movsl
mov
jecxz
repnz
mov
pusha
sub
jae
fucomip
aam
jle
pusha
and
adc
inc
pop
cmpb
ss
mov
fcoml
fwait
lret
jl
cmp
iret
aaa
push
fwait
out
out
cmpsl
jl
popf
fdivrs
jo
inc
jo
mov
jp
dec
inc
xchg
xchg
push
push
xor
sahf
xor
push
clc
pop
xchg
out
aaa
addl
movsb
cltd
imul
xchg
cmp
pop
mov
xor
mov
pop
imull
and
nop
mov
dec
inc
lret
icebp
sbb
das
ret
pop
sti
sub
outsb
ljmp
jecxz
clc
repnz
mov
mov
add
es
xor
jp
cmpl
es
mov
or
cs
es
and
iret
adc
dec
fs
push
pop
jae
mov
ret
movsb
cmc
cld
and
movsl
cmpsb
add
ffree
dec
mov
jbe
adc
add
in
imul
stos
lahf
pop
push
lea
push
cs
repz
xchg
lret
pop
flds
fsubrl
loop
mov
aas
sbb
jne
stos
int3
in
arpl
scas
iret
jno
and
mov
lret
xor
inc
jle
fldenv
dec
add
stos
mov
jno
ficoms
ds
mov
adc
stc
sub
mov
mov
sub
rcrl
stc
gs
xor
movsl
mov
aas
popf
out
test
roll
push
out
jmp
push
cmp
ja
sar
clc
adc
mov
mov
pushaw
xor
or
sahf
out
lods
adc
inc
xchg
fisttpl
adc
gs
repnz
fnstenv
adcb
xor
mov
test
pop
xchg
aaa
fcoms
lahf
xchg
mov
xlat
mov
inc
ljmp
push
push
in
loopne
aam
pushf
mov
dec
pop
aad
xchg
insl
bound
test
mov
sbb
in
or
dec
cs
popf
subb
push
pop
shrb
cwtl
cli
or
call
popa
in
sbb
push
adc
out
mov
xlat
sub
cs
cwtl
mov
inc
jbe
jge
and
mov
mov
rorl
clc
insl
test
jbe
mov
les
insl
inc
inc
pusha
js
mov
test
mov
loopne
xchg
inc
addr16
mov
inc
jnp
icebp
pusha
sbb
cli
sbb
sub
cmp
fldenv
test
cmpsl
inc
add
cmp
aam
xchg
mov
mov
into
push
shlb
xchg
int3
bnd
in
scas
dec
insb
call
adcb
sbb
in
inc
scas
in
outsb
loope
insb
xchg
testb
cmp
stos
push
mov
sahf
inc
stos
xchg
cwtl
gs
mov
cltd
pop
ficoms
jne
sub
cld
iret
push
je
or
lret
sbb
pop
jmp
pop
pop
jno
xchg
sbb
mov
xchg
or
je
sti
loope
icebp
pusha
push
or
push
and
dec
jmp
adc
pushf
push
xchg
add
in
sbb
jp
movsb
jne
bound
leave
mov
pusha
xor
jns
and
shrb
sahf
sbb
lret
pushf
dec
iret
nop
and
mov
cli
push
add
rcl
into
fbstp
rcll
pop
popl
jns
mov
lds
xchg
aaa
lds
mov
dec
jo
mov
ret
test
xor
or
xor
xor
inc
inc
ret
enter
pop
adc
out
repnz
fs
mov
enter
add
push
xchg
or
push
mov
cmc
mov
lock
rolb
push
xor
mov
outsl
sub
movsb
xchg
sbb
je
cs
pusha
adc
loope
lds
jnp
int
imul
outsb
ljmp
mov
test
sbb
xchg
dec
add
sub
pop
and
push
sbb
jbe
mov
cmpsl
mov
cmp
cli
pop
hlt
mov
xchg
push
xlat
sarb
or
jp
rcll
imul
xor
xchg
cmp
cmp
push
ss
jmp
add
inc
sahf
fisttpl
or
aaa
add
pop
mov
cmpl
sbb
push
fbld
fcompl
or
loop
add
dec
push
jge
pop
je
add
or
and
cltd
mov
pushf
mov
fisttps
jmp
adc
cmp
mov
sti
push
and
rorb
xor
addb
setno
aad
mov
jecxz
pop
xor
push
xchg
test
xchg
outsl
jle
and
adc
in
inc
xchg
int3
add
leave
push
pop
aaa
lcall
mov
es
shr
pop
dec
xor
int
xchg
sub
fs
leave
orb
lahf
push
jne
mov
pop
sahf
gs
ss
and
mov
inc
mov
arpl
and
push
push
inc
dec
pop
jecxz
adc
notl
dec
ret
aas
fnstenv
sbb
mov
or
in
push
xor
out
fildll
sbb
loope
lods
insl
fimuls
pop
nop
shll
call
jge
mov
push
scas
jge
sbb
or
shrb
pop
movsl
ljmp
add
xor
shl
mov
fbstp
sub
fcoms
sbb
push
add
fcoms
in
push
mov
dec
lahf
dec
cmp
pop
mov
mulps
mov
decl
imul
icebp
and
sbb
mov
add
out
stos
mov
movl
xchg
out
and
fidivs
mov
sbb
jmp
adc
in
out
or
xchg
mov
cmp
mov
pop
pop
mov
mov
mov
mov
ret
ret
pop
xchg
sti
cmpsb
add
cmp
push
mov
sti
into
jg
aam
or
mov
mov
mov
lods
in
pop
sub
pop
lahf
out
dec
xchg
iret
lock
pop
pop
loopne
lea
in
int
inc
or
push
seta
ret
adc
jl
jns
loop
mov
dec
mov
aas
stos
jmp
je
in
out
pop
hlt
sub
cmp
push
mov
cmpsb
jae
incb
je
popf
inc
xor
outsl
and
xor
xchg
sub
call
cmc
or
inc
stos
inc
mov
add
scas
cs
or
pop
sti
and
rcll
sbb
mov
je
xchg
nop
mov
sub
repz
std
test
mov
mov
inc
push
loop
jnp
nop
dec
repz
sub
test
cli
data16
scas
pop
xchg
aam
xor
cld
test
outsb
in
lret
cld
add
pop
add
cmpps
outsb
test
leave
jno
adcb
add
mov
outsl
add
je
push
fs
les
rclb
rolb
sub
or
ror
push
lret
dec
mov
popa
icebp
call
mov
test
xchg
or
movsl
mov
insl
xor
andb
mov
lds
or
cli
pop
in
pop
sbb
insl
les
imul
mov
xchg
int3
call
fnstsw
fisttps
adc
adc
cwtl
dec
mov
mov
mov
movsl
xchg
jne
or
nop
inc
adc
cmp
mov
stc
mov
adc
xchg
sub
mov
lods
cmc
xchg
lock
sti
ss
sbb
cmpsb
adcb
movsl
xlat
nop
repz
stos
popf
sbb
int3
xchg
je
fwait
popf
inc
or
inc
pop
imul
ja
arpl
repz
iret
ffree
push
fwait
call
sahf
lds
pop
xlat
mov
movsb
xchg
mov
mov
cmp
xchg
leave
js
jmp
mov
and
popf
push
lahf
sbb
popa
scas
mov
sbb
adc
mov
mov
sbb
daa
jbe
int3
rcpps
into
jns
imul
popf
loop
push
lock
std
jbe
and
mov
mov
jecxz
mov
xor
js
outsl
dec
jno
ret
jecxz
mov
and
arpl
rcll
hlt
loopne
call
cs
stos
cmpsb
pop
testb
xchg
shll
test
sbb
pop
inc
popf
movsb
dec
dec
xchg
inc
mov
into
jnp
xchg
shr
cli
jmp
popa
push
stos
stc
sub
mov
xchg
xor
mov
push
leave
dec
in
or
ficompl
lahf
aas
push
sti
push
inc
outsl
add
and
int
cmp
xchg
pop
add
enter
shll
scas
pop
dec
sub
es
rcll
sahf
push
adc
cmp
movsb
pop
jp
and
jbe
rclb
cwtl
hlt
mov
les
in
push
std
ja
xchg
mov
inc
aad
call
mov
mov
mov
pop
leave
sub
dec
popf
in
pop
lods
nop
testl
mov
insb
xor
lds
flds
dec
mov
sbb
sbb
lds
cmc
les
pop
sub
out
addr16
xor
jbe
xchg
aam
jo
mov
add
aaa
cld
jg
jecxz
mull
pushf
pop
cmp
adc
add
andb
sti
add
xchg
mov
xor
mov
sbb
cmp
cmp
sub
pop
sbb
insb
dec
scas
sub
inc
fiadds
out
fdivrl
stc
mov
or
xor
cmp
adc
aam
cld
aad
in
inc
adc
mov
dec
push
subl
incl
xchg
lcall
cmp
push
shrl
fbstp
movl
jge
cmpsl
or
aaa
push
dec
test
add
adc
hlt
xchg
dec
pop
mov
jmp
rcr
sarl
aad
mov
enter
pop
inc
add
mov
hlt
xlat
cld
fldt
es
paddusw
insb
xor
ret
pop
push
add
jecxz
cli
hlt
xlat
jb
fsubrl
stos
lret
jae
iret
sbb
iret
lock
cmpl
insl
adc
pop
outsb
nop
or
mov
and
aaa
and
add
xor
mov
xchg
push
sub
push
or
sahf
sub
jle
ljmp
iret
out
push
push
cltd
jbe
xor
rcll
adc
sub
mov
insb
jmp
mov
push
mov
dec
clc
fnstcw
jmp
cwtl
repnz
mov
push
or
pushf
lcall
adc
dec
jp
cmc
lret
mov
nop
jecxz
test
and
cmp
ret
push
cmpsl
jnp
in
cmp
insl
inc
mov
insl
data16
jnp
cmpsb
mov
les
mov
add
icebp
inc
fsubs
mov
inc
loopne
shl
test
sub
mov
cmp
in
mov
dec
imul
xor
sbb
jg
lock
sbb
fcmove
mov
jg
fs
ficomps
insb
or
or
mov
clc
daa
pop
mov
ss
in
ljmp
sub
xor
dec
jg
lods
negl
mov
jg
repz
shl
and
das
or
mov
clc
rolb
adc
or
jl
inc
sub
cld
in
test
sbb
jbe
movsl
mul
dec
fisubrl
adc
mov
push
inc
sahf
divb
or
push
mov
jns
mov
dec
mov
add
cmp
loop
pop
outsl
mov
testl
jl
sbb
stc
aaa
es
push
xchg
pop
mov
ds
mov
loop
icebp
xor
dec
mov
insb
shl
out
imull
jb
stos
or
inc
cmpsl
push
sub
xchg
test
scas
cmp
jae
loope
jo
mov
jno
fyl2xp1
mov
out
stc
jns
je
pop
test
cmp
rcll
inc
cmpsl
jl
push
fnstenv
mov
cltd
in
dec
xchg
dec
sbb
hlt
call
jae
sbb
cltd
lret
faddl
xchg
shl
outsb
push
push
dec
loop
jmp
fwait
pop
idiv
rolw
das
rcll
fsubp
sub
sahf
mov
cs
cmc
mov
into
xchg
cli
dec
shlb
push
shll
lret
and
stos
adc
sbb
adc
repnz
adc
adc
pushf
cmp
inc
shr
inc
xor
subl
rcr
int
pusha
xor
cli
stos
mov
hlt
pop
or
inc
cmp
ret
orl
aaa
add
dec
mov
push
mul
sbb
sbb
shr
jp
adc
ror
jae
add
dec
dec
das
sbb
sub
pop
xchg
das
dec
inc
push
clc
dec
out
mov
xchg
cld
data16
pop
cmpb
pop
notl
fdivrl
orl
pop
mov
push
sbb
or
sahf
jo
pop
push
xor
sbb
pop
hlt
push
fsubp
loope
mov
mov
in
mov
xor
jmp
je
adc
mov
mov
mov
mov
or
sub
pusha
pop
push
adc
adc
popa
insl
shl
sub
stos
dec
cmp
sub
jo
or
xchg
nop
ds
sub
jle
push
add
sahf
jle
pop
fwait
and
inc
inc
mov
add
xchg
sub
and
and
mov
sbb
and
lods
gs
out
loopne
adcb
inc
out
and
jnp
jbe
inc
jns
cli
cmc
xorb
jb
scas
xchg
loopne
loope
inc
shl
rorb
jl
sub
in
out
add
in
inc
dec
dec
cltd
dec
mov
dec
inc
cmpsb
sub
jb
mov
xor
and
sbb
mov
pop
out
lds
push
mov
inc
push
push
aas
fldln2
pop
addr16
mov
imul
push
jge
sub
and
ficoms
scas
cmp
sti
pop
xor
jo
cmp
jecxz
jp
les
loopne
fdivrs
xor
mov
ljmp
mov
sarb
movsb
lret
push
mov
int3
adc
cmp
ds
in
cmpsl
push
clc
rclb
movsl
test
xchg
xlat
dec
scas
idivb
shrb
xchg
ret
sub
cwtl
jl
sub
outsb
fldt
push
stc
add
scas
lahf
add
dec
mov
pop
or
push
popa
inc
out
jno
jno
sbb
shll
mov
mov
xchg
out
and
mov
adc
or
mov
sbb
test
addr16
ficomps
gs
sti
test
adc
and
orb
popa
icebp
pop
out
inc
mov
jg
lret
sub
outsb
xor
adc
dec
lret
jo
dec
fisubrs
imul
loopne
ret
clc
push
rol
push
and
pop
and
stos
jl
fisubrl
fcomi
aam
or
ror
inc
jle
cmpsl
out
xchg
imul
les
jle
iret
or
fldenv
push
fcmove
mov
scas
sub
mov
xor
mov
adc
adcl
mov
lcall
rorl
sbb
arpl
cmpsb
xor
test
fs
mov
bnd
push
lds
fucom
arpl
out
push
pop
inc
mov
inc
push
enter
lds
pop
push
add
rcrb
pop
jmp
ljmp
jne
mov
enter
push
loop
test
js
loope
add
add
adc
mov
icebp
push
lret
jg
mov
xlat
mov
cmc
cmp
loopne
es
jge
and
rorl
jge
dec
mov
sbb
fs
push
or
mov
out
jmp
insl
icebp
xchg
ret
into
jg
push
push
bound
inc
or
movsl
jne
or
or
add
ljmp
ficoml
pop
or
loope
mov
xor
hlt
ds
adc
mulb
pushl
arpl
ret
cmpsb
xchg
fcoml
xchg
mov
mov
dec
lahf
jae
clc
mov
xchg
mov
aam
data16
push
mov
sbb
mov
mov
test
call
inc
test
lret
ss
or
jbe
insb
das
loope
gs
inc
aaa
cwtl
mov
es
push
adc
jg
push
cli
pop
cmp
mov
int3
stos
jb
mov
out
lret
pop
lods
out
cwtl
lret
push
jbe
mov
out
mov
inc
syscall
push
sub
aam
jbe
jl
jg
push
daa
out
fildll
adc
stos
push
aas
stos
cmpl
lret
dec
jae
jle
or
hlt
iret
or
jns
pop
int3
xor
xor
ja
jl
jmp
dec
jae
stos
int
out
adc
jae
xor
mov
inc
xor
mov
inc
mov
mov
xchg
xor
add
adc
and
aam
jns
jae
es
mov
outsb
fs
sbb
sbbl
push
pop
int
out
adc
pushf
and
inc
adc
fmull
ss
xor
mov
mov
cmp
pop
sbb
jmp
mov
clc
mov
xor
aas
int3
scas
out
jl
scas
sarb
imul
imul
mov
jae
xchg
push
xchg
fstpl
pop
xor
mov
xchg
scas
xchg
xor
loop
mov
xchg
cmpsb
jg
mov
mov
call
mov
repnz
xor
sub
push
xor
or
push
push
mov
insb
cmpsl
sti
sbb
in
sub
mov
sub
push
out
daa
das
testw
mov
shlb
lret
xor
lret
adc
jnp
jl
or
jge
mov
push
inc
inc
pop
push
push
add
fcomp
in
sub
mov
test
xchg
push
mov
mov
repz
mul
loop
or
imul
fsub
add
stos
sbbb
jnp
inc
pop
sbb
fdiv
sbb
inc
pop
sub
rol
xor
ficomps
lock
out
pop
lock
shll
mov
xor
sub
lret
cli
pop
jns
xchg
movsl
add
sar
dec
fstp
popa
dec
fistpll
and
movsl
jmp
mov
shrb
pusha
shrl
lds
mov
xchg
cmp
scas
cmp
fcomps
jnp
inc
jmp
lcall
pop
daa
cmp
add
xor
orb
or
add
mov
int3
mov
jp
int3
xlat
mov
scas
je
pop
cwtl
add
rclb
repz
lcall
dec
sub
fisubl
mov
ja
push
fidivrs
mov
jbe
icebp
sti
shl
sti
mov
inc
sbb
dec
mov
ss
lock
das
bound
repz
jnp
inc
inc
insl
or
xor
push
fwait
and
dec
push
sbb
inc
push
stos
jbe
in
sar
fs
repnz
pop
lcall
dec
sbb
push
aas
mov
cmc
clc
xor
xchg
ror
mov
testl
fcmovnbe
mov
mov
adc
shrb
adc
fsubs
pop
push
sbb
ret
leave
sub
cmp
loop
dec
ss
fsubrs
or
ss
jp
inc
jnp
bound
pop
je
sub
push
lahf
leave
imul
adc
mov
in
mov
mov
lods
inc
mov
pop
icebp
sub
lret
jmp
cmpsb
inc
sbb
jecxz
hlt
popf
ret
cmp
add
pop
ret
icebp
jbe
in
xor
pop
in
mov
stos
cmp
movsb
rcrb
jge
mov
imul
mov
and
or
dec
mov
add
repz
mov
inc
nop
inc
mov
push
and
mov
mov
out
pop
test
mov
ja
and
popf
dec
aad
scas
mov
inc
cmp
mov
pusha
dec
and
add
rcrb
hlt
adc
mov
or
dec
in
out
xchg
and
aam
rcrb
xor
mov
inc
ret
sbb
pop
rclb
ja
mov
xor
mov
pusha
sub
jg
mov
in
fiaddl
daa
mov
cmp
iret
push
insl
xor
aaa
add
stos
std
cmpsl
fisubs
scas
in
mov
jge
cmp
xchg
rol
cmp
test
dec
dec
mov
adc
mov
lret
xchg
hlt
cmpsl
pop
fldl
andb
mov
pushf
adc
adc
mov
aas
sub
inc
inc
cmp
inc
xor
mov
hlt
mov
daa
jb
ret
pop
loope
outsb
stos
stos
or
out
xlat
cmp
and
mov
push
rol
nop
or
inc
xor
scas
jnp
add
stos
sarb
sub
mov
cmp
test
dec
gs
sahf
sbb
pop
jmp
pop
jbe
sub
lea
inc
xor
cld
iret
cmp
testb
pop
dec
mov
call
icebp
mov
mov
sbb
push
jp
push
ret
jno
xor
or
mov
inc
xor
sub
or
mov
xor
popf
roll
push
mov
or
xor
push
std
xchg
cltd
je
push
ds
mov
aaa
lahf
mov
or
cltd
and
push
imul
inc
xchg
mov
scas
xchg
sub
sub
idivb
xchg
stc
sub
fs
std
xchg
int
push
mov
xlat
pop
aam
mov
mov
fmull
popa
roll
cmp
shr
in
lret
sti
inc
push
cltd
adc
push
andl
dec
fmul
cmp
out
out
pop
dec
pop
adc
add
pop
fistps
sahf
sub
shlb
mov
xorl
fsubrs
stc
lret
mov
pushf
iret
les
andl
push
idivb
out
mov
cmpsl
xchg
fisttpl
mov
jae
push
push
add
cwtl
adc
xor
push
movl
test
dec
cmp
mov
push
cld
adc
sbb
cmp
ret
aas
push
mov
jg
inc
lock
scas
sub
or
jmp
rolb
aad
cmpsb
and
xor
mov
int
test
mov
push
sub
and
xchg
ret
dec
inc
push
das
or
insl
mov
int
and
notl
ds
hlt
inc
pushf
adc
jae
insl
std
add
dec
dec
pushf
fnstenv
cmp
sti
mov
test
hlt
adcb
jmp
dec
xchg
dec
cmp
jb
lret
negl
rcr
notb
and
or
dec
adc
ficomps
sbb
std
push
push
push
shrl
add
scas
ss
jmp
data16
dec
or
hlt
pop
mov
int3
fwait
data16
jp
mov
inc
je
sub
rep
lock
scas
testb
in
fsts
push
pop
lret
les
test
xchg
fistps
rcrb
adc
lds
inc
js
xchg
xor
jmp
mov
and
ret
cli
scas
popf
out
test
cs
data16
icebp
sub
push
cmp
aam
mov
arpl
sub
add
xchg
jnp
enter
adc
pop
es
int
pop
xor
fsubl
stos
test
pop
cltd
stos
dec
clc
push
cwtl
lds
sub
jnp
mov
out
lret
push
shlb
dec
out
shlb
push
cmp
insl
jg
iret
hlt
data16
cmp
adc
sbb
hlt
in
bound
js
ds
cwtl
fcmovnb
inc
push
hlt
jge
movsl
rclb
jae
cmp
popa
popa
mov
std
jno
and
adc
pop
mov
out
pusha
and
adc
std
outsl
bound
xchg
add
jle
aas
add
adc
or
rcr
pop
xor
add
enter
mov
and
dec
jne
pop
gs
sbbb
and
and
hlt
jmp
mov
imul
jae
jmp
mov
ljmp
cmp
shll
inc
subb
xchg
inc
outsl
dec
mov
out
test
inc
andl
jp
add
daa
inc
popa
mov
inc
jp
and
cmp
push
iret
xor
jne
fstps
jmp
or
nop
push
dec
sub
pop
cmp
mov
mov
out
cmp
xlat
loop
pop
pop
cs
hlt
mov
or
filds
out
jbe
xor
mov
add
dec
xchg
orb
test
inc
cmc
lahf
das
data16
loop
arpl
jl
rol
jle
insb
push
cmp
popa
push
jmp
insb
push
std
andb
sarl
test
aaa
sub
mov
pusha
add
mov
out
and
add
sub
push
fchs
pop
xorb
out
pop
xchg
ret
fwait
sbb
outsb
and
cwtl
mov
ss
pop
jo
cmpsl
pop
outsl
mov
imul
fwait
out
fbstp
cmc
mov
sbb
push
dec
dec
cmpsl
mov
cmp
aad
inc
repnz
fcomi
shll
btr
xchg
addl
cmp
sub
cwtl
pop
push
dec
gs
in
or
pop
sarl
adc
adc
js
jne
or
jmp
popa
lea
cli
pop
test
fidivrl
fidivrl
xchg
in
scas
lods
js
test
inc
mov
in
stos
add
push
mov
mov
stos
test
jge
add
mov
insl
pop
divb
aas
divb
ljmp
jg
inc
inc
adc
push
sub
fistps
inc
outsb
and
pop
xchg
dec
shlb
push
into
jg
lret
lret
insl
xor
stos
add
lcall
ror
std
pop
push
addb
jg
pop
add
addb
ljmp
loope
ljmp
or
nop
inc
loope
jb
push
xor
mov
mov
pop
ljmp
xlat
adc
sbb
in
lock
inc
cltd
jmp
hlt
pop
mov
ret
sbb
dec
mov
aas
pop
je
sub
in
xor
cmp
xchg
xchg
cwtl
xchg
xor
lds
jmp
movsl
xlat
test
mov
pop
sub
sbb
popl
cmp
mov
jmp
sub
inc
cmpsl
call
nop
ret
cmp
inc
add
jecxz
and
push
pop
in
pop
jge
cmp
jecxz
icebp
mov
popa
pop
into
aad
iret
xor
jmp
clc
fwait
js
lock
push
leave
stos
loop,pt
std
dec
mov
fdivs
bswap
outsl
add
nop
scas
push
mov
dec
sbb
mov
pop
das
popf
push
lcall
mov
pop
lcall
sar
stc
mov
mov
ja
pop
mov
xchg
je
mov
and
push
mov
loop
xchg
imul
lock
ret
pop
pop
test
or
nop
icebp
cld
nop
cmp
xlat
dec
sub
bound
pop
cmp
movsb
xchg
int3
into
xchg
aad
pop
mov
bound
dec
and
orb
cwtl
in
xor
sub
test
add
jne
xchg
add
pop
repz
xlat
movsb
or
scas
repnz
jle
je
in
dec
aas
mov
xchg
repnz
outsb
iret
inc
shlb
enter
aad
xlat
jl
add
xchg
add
fimull
ret
mov
enter
leave
and
jle
xchg
loopne
ret
fstl
sub
sbb
bnd
add
gs
mov
push
pushf
cmc
fdivl
cmp
mov
push
repnz
mov
mov
stos
bound
daa
pushf
jmp
sar
mov
sbbl
inc
or
push
popa
fcoms
mov
mov
sub
mov
xchg
or
stc
and
and
sub
rorb
push
lea
mov
xchg
push
xchg
pop
and
call
inc
out
pushf
pop
jp
jl
into
xor
dec
lret
inc
leave
icebp
xchg
shll
popa
pop
clc
loopne
sbb
mov
pop
dec
ja
addb
rcrl
je
sub
jecxz
das
pop
jne
pop
icebp
aad
xchg
xchg
inc
aam
xor
movsb
jo
call
adc
push
clc
ds
pop
or
inc
lods
xor
inc
shr
mov
sbb
mov
jo
enter
inc
js
fidivrl
cmp
enter
icebp
inc
push
and
icebp
aam
into
add
leave
jbe
mov
fwait
stos
lahf
in
sbb
inc
sub
std
in
flds
pop
dec
pop
mov
insb
ret
xchg
jge
loope
loope
lods
add
rorb
cmp
fldt
xor
push
outsl
inc
xchg
or
jle
int
cmp
ljmp
sub
lods
add
sub
push
mov
xlat
pop
repnz
cs
mov
hlt
jg
cwtl
lods
movsl
cli
pop
notl
mov
xor
mov
mov
add
pop
movsl
leave
call
mov
pop
mov
pop
call
mov
jg
and
mov
mov
xchg
fst
cmp
je
adc
xor
outsb
mov
stos
sbb
pop
or
fnstcw
jb
mov
adc
js
jno
mov
jg
mov
out
sub
cmp
jecxz
sub
sub
xchg
jo
pop
mov
xor
push
lret
out
hlt
pop
jae
and
fmuls
xor
pop
jbe
xchg
aas
xchg
in
sub
xor
xlat
pop
aaa
sbb
add
sbb
add
mov
in
adc
pop
rcrl
testb
mov
or
or
sbb
fwait
sbb
mov
sti
lcall
push
leave
sub
loope
mov
aaa
aad
out
xchg
daa
mov
call
xchg
xchg
jge
cmpsl
jg
sub
pop
jns
mov
in
int3
les
insl
and
and
sub
cmp
test
sub
xchg
push
push
out
scas
test
add
sti
mov
es
add
cld
push
push
ret
int3
in
mov
fisubrs
or
adc
pop
jp
repz
mov
xlat
aam
call
lods
jbe
push
mov
mov
mov
js
shll
jae
inc
cli
std
cmp
aad
push
push
sub
xor
and
loop
xchg
cmc
jbe
test
add
xchg
sub
sbb
and
idiv
inc
aaa
dec
mov
mov
jb
mov
lods
cwtl
lea
inc
pop
je
popf
inc
addr16
xor
xchg
cmp
or
xchg
sahf
push
push
pusha
addl
cld
cmp
inc
cltd
in
test
or
aam
into
insb
ja
aaa
dec
and
push
jno
push
jp
popf
lock
addr16
imul
dec
jns
xchg
repz
cwtl
pop
jge
into
in
lret
cwtl
mov
cltd
mov
mov
gs
and
pushf
test
adc
xor
inc
xchg
add
outsl
mul
mov
mov
aaa
xor
adc
inc
inc
mov
popf
lret
sbb
aad
adc
pop
cli
out
jmp
push
dec
mov
jb
out
cli
and
xor
ds
adc
mov
sbb
mov
in
pop
adc
xlat
push
das
ds
pop
arpl
sub
mov
shll
ja
mov
outsl
fs
add
or
inc
jns
jb
es
divl
mov
inc
push
xchg
div
inc
ret
ja
sub
fldenv
fdivrl
aas
das
push
imul
xor
imul
movsb
daa
mov
pusha
inc
test
sub
insl
popf
or
mov
mov
jecxz
in
push
aas
adc
pop
sbb
mov
fadd
sub
add
adc
cmp
pop
push
jo
in
xlat
add
jle
dec
popa
sub
mov
jnp
arpl
dec
mov
and
add
outsb
add
sub
xchg
data16
clc
insl
xor
les
add
pop
mov
lods
adc
pop
subb
movsb
scas
ja
inc
stc
subb
pop
imul
mov
decl
jbe
mov
and
ja
jae
das
mov
ror
jb
mov
sub
loope
or
cmp
leave
mov
jns
imul
xchg
sahf
out
stc
movsl
xor
xor
push
lods
xorb
pop
sub
jnp
mov
fistps
aam
sub
aaa
jne
pop
push
cli
aas
cmp
lret
xor
into
ljmp
stc
mov
imul
cmp
lods
dec
cwtl
insl
push
jne
cli
xor
cmp
add
add
inc
lock
leave
fs
and
pop
mov
xor
enter
in
ljmp
lds
rolb
aad
repz
cs
jbe
mov
dec
add
movsb
out
or
inc
int3
mov
dec
xchg
sub
std
movsl
lds
mov
out
jae
mov
int3
fmull
mov
or
mov
outsb
imulb
pop
adc
int
sub
jle
rcrl
scas
xor
stc
cmp
mov
xchg
adc
mov
push
mov
mov
in
and
add
push
push
sbb
mov
arpl
cwtl
mov
mov
mov
idivl
lret
popf
aam
mov
out
fs
pop
mov
insl
imul
push
es
xor
mov
addb
push
arpl
call
sbb
add
xor
or
mov
in
ss
dec
add
jmp
pop
xor
jp
les
cmp
push
adc
mov
push
dec
mov
packuswb
pop
pop
clc
mov
test
in
push
mov
adc
popf
xchg
leave
pop
mov
out
dec
jb
ficomps
dec
pop
adc
stos
adc
fpatan
fisttps
mov
loope
scas
push
aam
sbb
sbb
add
stos
xchg
dec
lret
xchg
test
test
mov
cmp
popf
xchg
push
adcl
mov
cltd
mov
mov
mulb
cmp
push
aad
dec
jmp
icebp
ret
jmp
jp
cmpl
dec
sbb
mov
out
ss
push
dec
pusha
sahf
jns
aas
xchg
and
jl
adc
rclb
and
cmp
sub
or
xchg
add
adc
and
aaa
sub
outsb
push
pop
jns
jmp
mov
ret
inc
pusha
dec
addb
mov
loopne
jl
aas
loop
dec
fbstp
test
push
gs
mov
mov
pop
mov
mov
cmp
or
inc
push
dec
ljmp
sbbb
pop
leave
cmp
xchg
push
or
jecxz
cmpsl
rolb
je
idivl
lcall
mov
mov
mov
fisubrs
xor
dec
mov
rcl
ret
int3
mov
divl
daa
lods
pop
das
ja
hlt
mov
aad
outsb
push
xor
imul
in
cwtl
fildll
dec
pandn
in
xchg
aas
lahf
lods
icebp
pop
pop
aad
stc
dec
xor
adc
adc
lret
pop
test
test
sbb
mov
sbb
push
popf
jno
xchg
lods
pusha
cmc
cmp
rcrl
pop
popf
jg
adc
mov
popa
sbb
lret
sarl
stos
lret
repnz
sub
jbe
lret
push
inc
repz
sti
imul
jl
fwait
add
mov
jo
push
pop
lret
sahf
ja
fs
xchg
pop
jecxz
enter
into
pop
cmp
add
pop
js
push
push
jnp
jne
mov
jmp
mov
mov
dec
jp
or
repnz
mov
jge
iret
adc
push
jnp
ret
imul
or
jle
test
stc
mov
inc
fwait
xor
enter
in
pop
js
inc
or
lds
loope
fnsave
pop
cli
imul
add
xor
push
mov
jae
out
inc
dec
xchg
inc
or
out
je
sbb
enter
fs
sub
cmc
xor
jae
sub
stos
mov
jge
cwtl
aam
adc
push
test
loope
pusha
icebp
or
icebp
xor
cmp
cmp
icebp
lds
js
dec
sub
adc
xor
add
ss
dec
lock
jbe
lock
arpl
clc
aad
inc
rolb
adc
inc
nop
mov
adc
jns
mov
and
and
in
inc
out
inc
fstps
pop
push
outsb
adc
xchg
adc
gs
je
mov
ds
add
xchg
pop
aaa
lcall
pop
jns
adc
pop
xchg
xor
sbb
out
push
dec
test
cmp
sbb
test
ss
jae
dec
sbb
push
cmc
je
and
jbe
xor
add
cltd
or
loop
pop
mov
shrl
lahf
dec
movsb
pop
fwait
and
ljmp
mov
shrl
out
insl
and
lcall
daa
lea
les
dec
std
imul
lods
jno
mov
add
lods
in
sub
add
mov
mov
shll
enter
gs
das
rcrl
add
inc
popf
jo
dec
and
cmpsb
xchg
jmp
inc
jp
cmp
xchg
iret
inc
mov
mov
shrl
addr16
and
adc
sbb
lds
out
xor
movsl
outsl
out
jbe
xor
roll
or
jo
test
dec
push
mov
loopne
mov
pop
mov
pop
push
xchg
jns
jnp
out
cmp
or
lods
rcl
ss
cmp
mov
push
les
mov
xor
insb
cmpsb
sub
scas
mov
enter
jge
lea
popa
idivl
pop
sti
aad
jge
xor
mov
mov
jg
lods
push
sbbl
pop
cmc
add
insl
pop
pop
xchg
pop
mov
jno
sbb
mov
into
mov
pop
fwait
mov
and
pop
pop
adc
aaa
push
nop
inc
or
lds
pop
dec
mov
add
or
outsl
and
jns
mov
call
out
jecxz
mov
and
dec
sub
xchg
mov
mov
jo
sbbb
sbb
adc
lds
mov
xchg
int
jnp
lret
push
xor
insl
in
push
idivb
or
fimuls
push
add
push
inc
pop
xor
cmp
adc
pusha
leave
adc
ret
movsl
lahf
fsubrs
inc
popa
shrl
cmpb
out
icebp
mov
fnstcw
out
adc
in
push
jo
adc
pop
push
and
xchg
pop
addr16
sarl
xor
push
dec
and
lret
mov
lock
ljmp
sti
sti
cwtl
pop
add
mov
or
cmpsb
inc
push
fwait
and
mov
lahf
xchg
fbld
cmp
imul
test
sahf
movsb
hlt
sbb
jo
cmp
pop
repnz
and
jo
jo
ja
push
mov
movsb
movsb
ljmp
cmpsb
les
hlt
jnp
jp
and
xor
rclb
mov
in
push
push
lahf
fdivrs
jg
mov
fdivl
mov
pop
out
jg
and
movsl
outsl
push
mov
in
xlat
jnp
test
xchg
mov
pop
fldcw
js
mov
mov
jl
xor
js
test
and
add
cmovns
divb
lret
cli
pop
in
push
adc
in
sub
adc
mov
repnz
cli
ret
cli
dec
jmp
jae
adc
pop
sbb
xor
repz
ds
sbb
pop
ficoml
or
pop
jl
je
ficoms
add
loop
or
movb
in
loopw
repz
sub
in
je
xor
cs
call
lods
mov
call
sbb
dec
pop
rcr
not
xor
hlt
daa
in
popa
lahf
pop
mov
fisubrs
mov
lahf
xorb
fdivrs
xchg
pop
xchg
xchg
or
push
aam
add
pop
xchg
hlt
test
ret
mov
add
pop
jl
cmpsl
cmpsl
mov
and
fnsave
xchg
jp
push
loope
daa
adc
scas
pop
movsb
xchg
dec
and
into
adc
fs
add
mov
ja
xchg
pop
and
fstpt
or
test
lods
lret
cli
cmovge
stos
dec
ja
in
push
push
idivl
add
call
mov
fwait
sub
mov
je
push
cs
and
arpl
in
repnz
mov
cmp
jnp
add
test
faddl
in
dec
repnz
sbb
subb
cmp
adc
rcl
std
jl
aas
push
ret
mov
sub
loope
xor
aaa
int3
pop
bound
and
push
into
and
jmp
cmp
mov
call
and
add
lcall
int3
sub
outsb
mov
mov
pusha
jge
pop
mov
sbb
daa
adc
mov
push
fcmovnbe
enter
sti
push
inc
dec
xchg
cmp
and
insb
add
or
leave
in
inc
cmp
inc
sub
adc
cltd
cmp
jl
or
mov
cmp
jg
xchg
xor
scas
aaa
repnz
push
sub
sahf
push
xchg
jp
add
adc
xor
and
fwait
cmp
ljmp
xchg
xor
aad
loopne
popa
jnp
divb
inc
add
outsb
pop
mov
outsl
fsubp
loop
mov
pop
nop
xor
push
mov
or
pop
inc
in
cmp
inc
mov
xor
aas
popf
mov
inc
pop
fwait
mov
dec
mov
jle
sbb
scas
cmpb
loop
inc
pop
aaa
adc
add
xlat
pop
cmp
testl
pop
insl
lea
cli
cltd
js
sbb
sbb
rol
pop
aad
cmpsb
int
in
ss
xchg
add
mov
adc
mov
mov
mov
daa
xchg
xchg
call
pop
pop
ret
scas
sub
sub
scas
mov
repz
push
sti
mov
xchg
dec
jl
mov
lock
xchg
inc
fcoml
in
scas
pop
cmpl
mov
xchg
mov
inc
xor
loop
ret
pop
push
stc
or
cmp
sub
mov
push
jecxz
gs
adc
bound
imul
cmpsb
pop
out
cmp
xchg
add
cwtl
pop
jmp
mov
sbb
testl
lret
sub
ret
test
outsl
aam
imul
jg
mov
or
and
jo
enter
sub
sub
cmp
mov
mov
mov
lock
popl
mov
pusha
incl
inc
inc
adc
out
sub
adc
shl
call
cmp
fs
in
hlt
mov
mov
xlat
lcall
adc
in
inc
push
push
pop
xchg
mov
xchg
ds
xlat
int3
inc
cmpsb
adc
les
jge
cmpsb
icebp
lods
sti
sbb
icebp
idivl
mov
jbe
cmpsb
repz
shrb
jbe
mov
push
xchg
push
dec
jmp
cmp
imul
lds
lea
jmp
inc
scas
scas
imul
subl
fisubl
or
fldl
or
inc
xor
jmp
in
outsb
xor
sarl
repz
sbb
jne
mov
pop
mov
stos
mov
or
les
js
daa
inc
mov
jb
das
leave
mov
mov
sbb
ja
clc
pop
out
scas
cmpl
sbb
pop
ljmp
dec
xchg
add
sub
and
mov
popf
add
ljmp
cs
adc
lds
sub
subl
jecxz
sub
loope
pop
ljmp
adcl
leave
lock
mov
add
jnp
movnti
in
lret
ror
iret
xchg
in
pop
nop
iret
iret
in
imul
mov
mov
xchg
adc
shrb
daa
aam
inc
stos
cmp
negb
arpl
pop
mov
imul
xchg
pop
cmp
push
sbb
mov
mov
xchg
push
and
dec
inc
sbb
add
sbb
rorl
arpl
out
ds
hlt
jle
fsubrl
push
data16
push
hlt
test
ds
xchg
sarl
mov
sbb
mov
fdivl
mov
push
push
push
pop
out
adcb
mov
adc
cmpsb
mov
adc
push
xor
push
xchg
mov
mov
or
push
xchg
push
dec
cmp
aaa
cmpsb
sarb
jl
stc
jp
jns
stos
repz
data16
adc
test
add
jecxz
decb
sbb
cmpsl
ja
or
push
pusha
cmp
and
mov
out
pop
xor
je
and
sub
adc
shll
pop
fnstsw
mov
lcall
cmp
in
mov
lods
rcrl
adc
pop
lods
inc
les
mov
xchg
xlat
in
inc
jmp
lahf
sti
inc
cmpb
mov
lret
push
adc
pop
xor
jns
call
and
cs
cmp
lcall
adc
dec
mull
rclb
in
jg
sbb
inc
test
enter
or
add
add
jle
mov
add
mov
pop
repz
cmp
sub
inc
shll
mov
cmpl
ljmp
ds
insb
or
jb
lds
cs
lret
in
sub
push
jge
mov
pushf
es
sti
aas
lea
adc
push
cld
dec
je
popf
xchg
int3
divl
arpl
xchg
incl
push
orl
cmc
les
mov
lds
out
gs
jno
test
movsl
xchg
pop
mov
xchg
xlat
adc
mov
fwait
dec
orb
mov
loopne
daa
xorl
into
pop
popa
push
or
sahf
or
mov
pop
push
jecxz
jnp
xchg
sbb
arpl
push
dec
and
fldt
test
dec
mov
jb
dec
aas
mov
mov
or
loopne
sbb
mov
pop
outsl
int
adcb
imul
inc
arpl
arpl
push
mov
cmpsb
add
jmp
mov
cs
xor
mov
pop
push
nop
or
jp
shrl
fwait
push
mulb
mov
cmp
xchg
cmpsb
mov
inc
push
push
jle
arpl
fimuls
fincstp
pop
inc
jne
mov
leave
dec
and
xchg
sbb
sbb
xor
fs
mov
ds
loope
dec
push
test
cmp
inc
inc
adc
jg
xchg
add
jmp
dec
test
mov
jmp
fcoms
pop
or
xor
pop
into
bound
xlat
adcb
pop
add
xchg
xor
and
lods
addr16
mov
test
xchg
shrb
push
push
out
sbb
dec
out
xchg
mov
pusha
mov
adc
int
fcmovne
inc
cmpsb
jp
sbb
dec
popf
test
sti
insl
js
es
fsubrl
xchg
xor
scas
neg
out
xor
insl
pop
into
lret
and
sbbb
mov
xor
fsts
lods
jo
push
or
in
jl
xchg
fstl
out
cmp
pop
dec
out
mov
pop
or
xor
add
xchg
pop
je
stos
xor
jns
add
test
pop
push
call
je
sti
nop
xchg
mov
push
pop
xchg
push
divl
stos
jmp
jnp
sti
and
mov
mov
ja
sbb
lods
cltd
jbe
sub
mov
sub
or
lds
ds
and
add
mov
push
scas
xor
lds
daa
and
jecxz
test
aam
popa
and
xor
or
jp
test
cmp
mov
jmp
cmp
sti
push
or
aaa
loop
xchg
adc
xor
mov
jne
add
mov
mov
pop
add
js
lea
xlat
mov
xchg
js
orl
popa
es
push
and
adc
dec
add
push
and
cmp
gs
test
aas
lcall
mov
fsubrs
jns
notl
fidivrl
sub
push
stc
and
adc
fcoml
or
sti
rol
cld
xchg
push
mov
aad
imul
xchg
mov
outsl
mov
xor
cmpsb
ss
cmp
icebp
jmp
add
pop
mov
iret
inc
pop
jp
xor
sub
leave
jnp
mov
push
loopne
pusha
push
pop
xor
and
les
mov
pop
aaa
pop
xor
clc
sbb
mov
mov
aad
mov
stc
xor
dec
popa
sub
stos
sbb
xor
in
and
lds
shll
dec
inc
xchg
mov
fwait
cli
mov
adc
add
push
sbb
pop
jb
add
in
sub
or
sti
rcrl
mov
mov
xchg
fld
enter
push
sub
test
pop
bound
jge
jge
fwait
dec
lds
cmp
inc
outsb
repnz
dec
xchg
inc
or
pop
rorb
push
loopne
push
sbb
add
jle
ds
mov
test
fildl
fbld
insl
dec
or
push
mov
and
adc
hlt
out
mov
pop
xor
xchg
pop
xchg
scas
inc
xor
sbb
lds
sub
mov
and
cmp
xor
push
clc
popa
shlb
lret
fistl
lds
nop
lahf
out
xchg
stos
shrb
or
shll
xchg
push
or
and
pop
xchg
aad
stc
std
jp
shlb
inc
fidivl
jo
test
cmp
mov
mov
xor
push
fisttps
aam
hlt
lock
std
xor
cmpsb
decl
sahf
dec
push
imul
lret
insl
pop
push
jge
icebp
es
shlb
shlb
and
addr16
in
data16
test
jp
bound
arpl
dec
sub
or
pusha
jo
inc
pop
sub
mov
lret
cltd
addl
pop
adc
outsb
push
sbb
xor
repz
cmp
pop
dec
dec
dec
jbe
sbb
fisttpll
or
and
jae
roll
addr16
dec
sub
loopne
xor
sarl
push
push
mov
inc
fwait
cmp
or
pusha
neg
scas
inc
mov
mov
movsb
dec
and
or
sti
push
jae
ret
icebp
add
fnsave
mov
push
cmp
xchg
je
loop
xchg
ds
pop
ret
xchg
rcll
and
xor
adc
jmp
cmpsl
jno
jge,pn
jns
fidivrl
mov
jb
mov
lods
in
arpl
jle
loope
cmp
mov
lahf
pop
dec
sbbl
dec
mov
arpl
cmp
dec
movzwl
push
inc
dec
mov
mov
xor
decl
dec
inc
or
and
mov
mov
rcrl
fsubrl
add
pop
lods
or
hlt
test
cmp
test
iret
enter
inc
js
mov
pusha
push
add
xlat
adc
sti
and
xor
or
out
fisttpll
jl
push
mov
dec
add
inc
loopne
xchg
popa
in
cwtl
scas
add
jge
xor
les
mov
clc
add
imul
imul
add
fwait
cltd
addb
fiaddl
fst
and
movsl
mov
lea
inc
ja
out
push
aam
das
popf
fidivl
in
loop
popa
mov
xchg
stc
mov
ss
cmp
rol
ficompl
shrl
pop
sub
enter
dec
sysret
push
popf
jae
jno
fdivs
xor
pusha
inc
mov
and
jg
and
mov
mov
rcll
push
or
jp
ficompl
xor
cmp
mov
fmuls
and
in
fmulp
in
or
or
sub
push
adc
shr
cli
insl
lret
mov
fwait
push
aad
pop
push
add
jecxz
stc
or
repz
xorb
and
dec
xchg
add
je
mov
adc
lret
inc
movsl
fcoml
jge
icebp
in
int
xchg
popa
shll
sbb
lods
inc
scas
insl
dec
xchg
push
and
clc
lods
mov
ja
push
std
fwait
dec
xchg
jge
fimull
out
test
insb
mov
pop
xor
out
push
jmp
les
mov
push
and
aad
inc
cltd
popa
push
scas
arpl
out
push
aam
or
addb
push
jle
sbb
lods
xchg
lds
inc
pop
xlat
adc
fisubrs
les
mov
pop
aam
pop
loopne
pusha
movsb
inc
inc
jmp
repz
gs
lret
daa
daa
in
jbe
insb
mov
adcl
pop
or
cmp
pop
lret
pop
or
mov
push
inc
inc
add
inc
push
popa
jl
dec
push
pop
ficomps
popf
hlt
push
cwtl
lods
xor
dec
or
fistpl
mov
into
and
pop
sub
mov
mov
and
orl
stc
shrb
in
in
mov
lret
cltd
pop
popl
rcrb
push
mov
adc
and
pop
and
sbb
lahf
xchg
mov
nop
jecxz
and
xor
cmpl
test
dec
or
mov
daa
cmpl
sub
call
inc
hlt
fdivrl
fadd
in
insl
cld
insl
loope
sbb
mov
cmp
dec
or
jl
cmpsb
cli
aam
xor
or
push
xchg
pop
cmp
sbb
sub
jbe
mov
leave
sti
test
lods
js
push
xchg
mov
or
push
mov
push
sbb
jecxz
or
ret
out
inc
pop
out
repnz
xchg
fadd
xor
imul
pop
pop
xchg
icebp
lds
adc
xchg
inc
aaa
xchg
fidivl
cli
loopne
ficomps
aam
sub
sub
push
xor
push
aaa
cwtl
cld
ja
jp
sbb
xchg
jne
mov
push
jne
push
testl
cmpsl
cmpb
fsts
jnp
shrl
adc
cmp
cmpsb
icebp
xchg
mov
roll
ljmp
divb
add
popa
push
xchg
cwtl
cmp
test
sarl
test
rorl
test
je
sub
pop
das
add
das
testb
lods
lods
xor
fs
punpckhbw
cmc
jb
fsubl
lahf
dec
fnsave
cltd
sahf
pop
mov
popa
cmp
iret
scas
int
xor
jge,pn
lea
sub
ss
mov
outsl
jo
mov
and
cmp
fnsave
dec
xor
scas
or
xchg
bound
rorb
add
ljmp
lods
jae
push
or
dec
lcall
mov
or
or
out
mull
push
adc
jg
jge
leave
mov
jmp
cmp
xchg
cmpl
xchg
push
daa
cltd
push
popfw
sahf
and
push
xor
rclb
subb
mov
popa
mov
test
push
pushl
pusha
cmpl
jp
cmp
js
and
dec
ss
push
jmp
dec
cld
xchg
cmp
adc
push
xor
mov
lret
mul
out
icebp
test
ds
inc
push
dec
mov
inc
enter
fstp
test
scas
or
dec
inc
shlb
mov
xor
cmp
mov
push
adc
add
adc
xorb
loop
xchg
ss
popf
mov
mov
test
push
pop
jp
rcll
mov
fsubrp
inc
rol
aas
sub
fdivr
sub
imul
jnp
cmc
cltd
and
shll
lar
push
lret
inc
icebp
mov
dec
pop
add
cmp
adcl
pop
and
jp
jecxz
xor
inc
mov
push
lret
jbe
stos
int3
sarl
pop
cmpb
sub
cmpsl
mov
call
fisttpl
jne
aad
stc
loop
adc
repnz
sahf
cmp
push
or
pop
cli
sti
fcoms
rcll
jge
pusha
or
adc
mov
dec
push
fwait
dec
fucomi
sub
ret
pop
loopne
movsb
xor
sbb
push
cltd
add
xor
test
xchg
cwtl
pop
sahf
cs
fmull
jg
rcrl
push
aas
jne
inc
or
out
sbb
cld
in
shll
lea
cmp
mov
dec
nop
adc
lock
std
cmpsb
rcrl
mov
mov
mov
sub
xchg
jecxz
and
fdivr
mov
sbbl
push
shrl
ret
scas
popf
push
jo
scas
incb
push
push
cmpsb
adc
es
mov
mov
and
ds
out
xchg
jmp
jmp
or
imul
out
cli
jne
xchg
into
or
out
stos
pop
cmpsl
jno
or
out
into
lahf
cwtl
jae
push
adc
enter
popf
sbb
test
pop
test
sub
mov
pushf
mov
push
in
cmpb
xchg
mov
adc
push
mov
es
jl
or
shrl
cmp
xor
adc
xchg
pcmpgtd
pop
lret
mov
xchg
cltd
mov
inc
and
mov
cs
pop
pop
aaa
leave
adc
inc
mov
pop
push
test
loope
out
mov
xchg
out
adc
lds
divl
adc
or
cmp
mov
sbb
mov
jmp
xor
pop
loope
push
js,pt
xchg
mov
mov
cmpsl
inc
ret
inc
sarl
test
int
lret
out
ds
scas
ds
adc
mov
cmpsl
xor
int
test
aam
out
inc
push
and
jp
mov
test
fs
push
in
lahf
cmpsb
add
dec
in
inc
pusha
mov
lea
testb
in
sbb
mov
mov
es
or
mov
popf
cmpsl
push
sti
into
leave
mov
lret
mov
popf
inc
hlt
mov
inc
cltd
mov
jmp
fnstcw
cmpl
xchg
sub
lock
pop
sub
nop
jmp
pop
into
and
pop
mov
xchg
cmp
cmp
jp
hlt
mov
flds
or
adc
sti
cs
filds
xor
jo
divl
xchg
jl
add
gs
popf
add
push
add
mov
push
jg
jns
in
cwtl
xchg
sti
xlat
add
cmp
dec
pop
jns
sub
int
sub
out
adc
test
aaa
ret
adc
mov
add
loope
rclb
mov
mov
pop
sbbl
ja
mov
mov
mov
loopne
push
mov
push
in
int3
push
imul
clc
fistps
test
adc
xor
repnz
adcl
xor
js
nop
pop
pop
inc
cs
mov
adc
mov
and
stc
inc
xorl
pop
idiv
jne
adc
xor
mov
xor
xchg
jae
ds
das
aam
clc
jb
push
sbb
sbb
movsl
cmpb
icebp
out
jne
pop
aas
shll
sbb
xchg
push
bound
push
jb
aam
clc
cmp
out
orl
dec
xor
in
or
dec
add
pop
add
xchg
or
inc
pop
push
loop
and
add
mov
xor
das
sbb
scas
fwait
cwtl
xor
lock
push
or
sbb
adc
adc
mov
aaa
push
popl
leave
sbb
mov
mov
icebp
adc
jns
out
imul
xchg
scas
sbb
mov
adc
out
pop
test
and
ret
lea
xor
arpl
or
mov
stos
jb
jbe
insl
cmpl
adcl
push
lret
fwait
xchg
xchg
push
cmp
sub
xchg
shl
lret
mov
mov
in
mov
sti
stos
sub
push
cmp
fwait
sti
cmpsb
call
fstpt
fists
js
call
pop
mov
jo
jns
loope
test
push
sahf
iret
test
sub
push
sbb
xor
mov
xchg
and
das
xchg
push
fmull
pop
adc
mov
inc
inc
mov
adc
cmp
andl
hlt
stc
jmp
aad
jmp
negb
js
insb
lea
aam
mov
outsl
clc
and
pop
inc
and
je
pop
xor
jl
add
mov
inc
in
shlb
enter
faddl
repz
or
add
adc
imul
jbe
or
in
lret
sbb
rolb
add
and
outsl
pusha
pop
sbb
lcall
mov
subb
ja
pop
mov
aas
xchg
mov
lahf
push
add
cli
out
daa
lods
xor
stos
sbb
hlt
movb
out
mov
in
lods
or
incl
mov
dec
cwtl
push
jo
adc
sub
shl
sahf
sub
and
pop
fimull
xchg
pushf
pushl
mov
inc
cs
xor
sub
jns
cld
cmp
dec
es
arpl
dec
mov
mov
adc
jne
mov
pop
enter
dec
xchg
sub
push
and
aas
xchg
add
ret
pop
fwait
sbb
pop
mov
das
or
test
jne
xor
repnz
icebp
mov
hlt
add
push
icebp
inc
out
xorb
pop
push
jnp
stos
inc
and
pop
aaa
or
push
pop
and
or
mov
out
leave
and
test
adc
jnp
repz
fists
cmpsb
shl
mov
inc
or
addr16
subl
add
scas
cld
push
insb
scas
fstps
push
xchg
add
inc
scas
insl
pop
icebp
push
test
ret
xchg
cmp
int3
sub
or
mov
mov
mov
lds
push
jp
jae
add
push
scas
push
mov
push
nop
cmp
loope
nop
xchg
fucomip
stc
add
jl
mov
cmpsb
mov
sub
inc
adc
imul
rcrl
and
jbe
inc
outsl
leave
mov
cltd
add
addr16
orb
sub
ljmp
fsubl
scas
clc
pushl
outsl
cmc
inc
mov
push
pop
xor
jns
fldt
dec
fmuls
rorl
and
dec
adc
test
pop
or
ret
cwtl
nop
add
sbb
enter
out
into
rorb
or
lods
pop
mov
sub
ret
mov
and
je
ret
out
shll
inc
mov
lret
jnp
rorl
pop
sub
nop
stc
popa
lods
test
mov
push
or
dec
cmpsb
or
mov
sub
mov
mov
ret
mov
xchg
adc
out
pusha
cmp
pop
loope
into
sub
adc
mov
movsb
outsb
rcrl
cltd
mov
and
rorl
in
dec
pushf
xor
pop
out
mov
xchg
xor
xchg
lock
js
idivb
fucomip
ds
fcomi
bound
xor
out
or
cmpsb
rcr
mov
int
cld
in
push
cli
lcall
jns
lods
jae
sar
sahf
xchg
cmc
xor
cmpsl
xlat
cmp
adc
lret
xor
aam
cli
pop
cmp
imul
pop
mov
loop
push
in
int
dec
icebp
pop
mov
inc
xchg
scas
imul
inc
jmp
pop
xor
or
test
pop
and
lods
bound
push
or
test
xchg
xchg
test
mov
roll
push
rorb
jb
jnp
mov
xor
stos
add
lahf
lods
insl
sbb
mov
jbe
repz
jb
mov
iret
out
sbb
jle
cli
jo
cwtl
xor
fdivs
rcrb
xchg
lret
clc
jae
ret
subl
cs
cmp
ljmp
cmp
adc
gs
adc
data16
xor
mov
adc
mov
lods
jnp,pt
pop
ret
mov
mov
fcoml
lds
or
mov
insb
xlat
sbb
addb
ja
mov
xor
jge
popf
call
inc
sbb
test
lret
jmp
xchg
jmp
sbb
mov
push
mov
mov
adc
dec
aaa
testl
movsl
mov
jb
cmp
pop
adc
inc
idivl
or
icebp
fdiv
addr16
jae
ret
push
fnstenv
sbb
shrl
jl
jns
jns
scas
add
pop
mov
dec
adc
xor
and
test
aas
mov
imul
sti
ror
ja
scas
mov
std
mov
in
lock
fiadds
lods
pop
out
sbb
inc
jbe
or
sbb
jnp
test
cmpsb
push
add
xchg
push
pusha
inc
pop
inc
das
lock
inc
xor
adc
mov
lret
fmull
cmp
xor
inc
ja
push
push
fnstsw
lret
out
xchg
xor
mull
mov
aam
dec
and
sbb
out
lahf
xor
push
repnz
mov
pop
mov
add
inc
cwtl
mov
push
fsubl
test
test
or
ja
fistl
sbb
adc
fdivs
mov
mov
mov
mov
lods
adcl
aad
inc
push
pop
push
bound
loop
inc
sub
lahf
xchg
mov
and
dec
stc
mov
cli
mov
jecxz
mov
xor
out
in
loope
ds
xchg
xchg
sbb
jg
mov
movsb
xchg
inc
xlat
inc
or
mov
mov
push
dec
xlat
ja
xchg
into
clc
push
loopne
es
inc
call
and
xchg
incl
out
je
pop
cli
mov
dec
mov
out
sar
or
inc
outsb
sub
jle
push
rorl
ljmp
insl
sub
std
ds
rcll
cmp
push
idivl
les
lods
and
arpl
pop
sahf
stos
or
cld
in
fcomp
aad
mov
pop
add
jp
xor
jp
lret
ljmp
xorl
mov
mov
or
enter
pop
in
xor
sub
fimull
and
mov
fildll
outsb
int
lcall
push
push
leave
lea
push
and
or
add
icebp
adc
xor
jecxz
stc
loopne
mov
int
mov
mov
jnp
xor
or
sbb
mov
push
cmc
incl
rorl
cmp
inc
out
nop
xor
mov
pop
mov
lahf
dec
push
nop
shll
add
fs
rcrl
add
jg
shr
xlat
jecxz
mov
mov
and
outsb
lcall
jae
daa
add
je
add
or
add
cmc
rcrb
lods
pop
sbb
mov
or
xchg
aad
test
push
xor
dec
nop
mov
repz
sub
ljmp
inc
shlb
inc
into
pop
adc
adc
mov
lcall
cwtl
cld
repz
inc
loop
lds
ds
data16
insb
sbb
inc
lea
sub
mov
lock
push
jno
adc
xor
lcall
cs
ja
xor
orl
nop
in
rcrb
enter
in
pop
movsl
or
dec
mov
insl
movsb
popa
add
mov
sub
jecxz
jo
push
imul
clc
xchg
cmp
jmp
dec
out
add
pop
adc
in
jmp
jle
movsb
lock
stos
lret
cmp
neg
mov
jne
or
lock
xlat
aam
xchg
aam
jne
xor
cwtl
adc
addb
adc
and
sbb
cmp
int
lods
ror
lock
je
and
cltd
push
aaa
cltd
mov
add
test
pop
xchg
int3
daa
jmp
mov
aam
sub
mov
or
pop
ret
repz
stos
enter
mov
push
insl
in
shlb
or
push
jae
and
mov
test
push
je
outsl
arpl
xchg
jge
popa
jbe
out
call
aam
testb
addr16
push
test
mov
push
or
cmp
or
in
jnp
fcmove
pop
jae
push
push
sub
jge
test
inc
jnp
adc
mov
adc
sbb
jle
jns
push
rol
push
enter
and
fmuls
lea
test
jo
shrb
nop
fwait
cmp
sub
out
and
in
cmpsl
mov
movsb
sbb
push
jne
mov
fwait
or
pop
inc
test
cltd
adc
xchg
jecxz
xchg
je
adc
xor
aaa
xor
int3
pop
jne
xor
xor
sub
inc
mov
pop
and
sbb
loop
sbb
mov
pop
rorb
pop
mull
daa
and
cwtl
pop
cltd
and
idivl
sub
mov
mov
mov
insb
ror
mov
sbb
fisubl
inc
dec
movsl
sti
push
mov
mov
inc
fucomp
xor
sub
mov
mov
and
mov
xchg
arpl
dec
mov
dec
mov
incb
mov
mov
inc
pop
sub
lret
push
ret
pop
scas
sbb
gs
jecxz
jnp
push
or
bound
test
fcomps
rclb
pushf
cltd
imul
and
cltd
pop
and
loop
fcmove
arpl
inc
pop
ret
rcll
or
pop
xor
lret
sbb
into
hlt
int3
xchg
or
test
sbb
mov
push
xchg
nop
or
jns
xor
add
mov
test
daa
mov
push
or
andb
add
mov
pop
leave
sub
hlt
shrb
cmp
mov
jl
lock
ljmp
shr
out
add
mov
int
call
xor
xchg
adc
jae
mov
sbb
xchg
sti
and
call
sub
cmc
and
sbb
leave
repnz
xchg
daa
add
xor
mul
addl
push
pop
mov
mov
xor
in
out
mov
cmp
jno
popa
imul
out
push
jl
inc
or
pop
cmp
cmpl
adc
jno
inc
sti
cld
scas
pushf
int3
xchg
mov
xor
inc
loope
mov
inc
dec
idiv
push
out
lock
fxch
mov
or
cli
add
faddl
das
mov
loopne
pop
mov
call
dec
jbe
or
orb
sbb
mov
push
cmc
test
gs
roll
and
addr16
loopne
pop
lea
test
mov
dec
xor
sti
cwtl
dec
inc
jo
pop
adc
adc
push
inc
pop
imul
sub
adcb
movsl
mov
xchg
mov
pop
bound
popa
xchg
fildll
fists
mov
les
mov
pop
rorb
das
bound
adc
ljmp
mov
dec
daa
cmp
pop
out
fs
mov
add
enter
adc
test
popf
out
and
enter
sub
mov
repnz
pop
hlt
sbbb
mov
fsubr
mov
ds
inc
cmp
iret
sbb
pop
scas
mov
jae
mov
cmp
iret
cmp
xor
cmp
cmp
in
out
lock
sub
stc
cwtl
fiaddl
scas
mov
mov
ja
ljmp
mov
aad
lea
push
cld
xchg
push
cli
xchg
push
mov
adc
mov
fldenv
fidivrl
sbb
fdivrp
cmp
dec
insl
push
xchg
stos
aam
hlt
fidivrl
jno
mov
mov
add
xchg
sub
gs
lds
aaa
aas
or
lahf
add
mov
xor
mov
inc
jb
push
nop
filds
arpl
hlt
push
in
fnstcw
or
cmp
mov
lret
push
decb
push
test
test
cmp
xchg
leave
insl
cli
jle
rorb
xor
arpl
xor
adc
inc
aad
imul
mov
rolb
dec
aad
jbe
outsb
dec
int
shrl
sarl
data16
lret
mov
and
add
mov
mov
push
jmp
inc
push
jbe
out
jmp
add
add
xchg
mov
aam
rcrl
inc
int3
mov
sbb
dec
clc
xchg
outsb
pop
popa
inc
push
fs
mov
leave
jmp
mov
int3
mov
jne
fcmovu
clc
mov
ljmp
icebp
fistl
imul
mov
and
scas
shr
push
push
sub
and
arpl
into
push
int3
adc
cs
mov
lret
add
out
cmp
sbb
sbb
inc
pop
stos
mov
stos
push
insb
jp
rorl
std
mov
mov
sbb
pop
xor
mov
arpl
cmp
in
mov
movsb
push
push
xlat
fildl
aam
pop
mov
mov
or
pop
jmp
loopne
faddl
mov
sub
loope
or
pop
lock
pop
push
xchg
loopne
fnstcw
addr16
add
bound
in
loopne
jl
mov
sbb
jbe
iret
leave
inc
jnp
sub
mov
std
stos
pop
loopne
jmp
arpl
inc
outsb
shr
jb
imul
or
fldenv
and
sti
mov
mov
jecxz
outsl
dec
stos
outsb
cmp
data16
sarl
lcall
push
jge
scas
adc
rcr
imul
adc
ljmp
das
or
loop
mov
bound
shlb
mov
mov
adc
jl
pop
pushf
push
jg
and
cmp
lcall
cmpsl
inc
pop
sbb
dec
xlat
pop
out
jle
lods
int3
jb
dec
add
addr16
imul
cmc
fisttps
int
jmp
int
pop
mov
pop
xchg
and
mov
xorl
data16
adc
fsubl
jae
mov
pop
std
pop
and
jno
sub
cs
in
and
pop
or
adc
aaa
cs
adc
pop
lds
sub
iret
lea
jae
xchg
jecxz
cmp
subb
in
jle
push
or
adc
mov
jmp
push
bound
es
loop
or
add
push
push
outsl
jp
pop
inc
scas
fldt
cwtl
les
sahf
stos
sti
movsb
lea
mov
mov
idiv
into
push
into
int
mov
jecxz
ret
pop
cmp
or
fwait
cmp
dec
dec
pusha
scas
lock
xchg
insb
adc
xor
inc
ret
int3
pop
popa
insl
adc
popf
btr
mov
fildll
inc
pop
js
stos
and
and
mov
stos
bound
push
ror
scas
and
shld
mov
cmp
jmp
pop
sti
push
ret
and
int3
push
outsb
imul
jns
fdivs
jl
xor
sbbb
pop
pop
pop
mov
push
sub
push
add
or
pop
mov
mov
add
aam
inc
out
xchg
test
or
iret
sub
pop
xchg
mov
xchg
and
or
stos
mov
xchg
adc
bound
into
jnp
pushf
dec
rolb
jnp
pop
hlt
out
push
lods
repz
push
adc
aad
ret
or
xor
fbstp
mov
adc
push
inc
cli
out
imul
clc
jmp
fwait
add
cmp
sbb
lock
or
xchg
sti
cltd
in
sbb
cld
fwait
jo
iret
shrb
pop
aaa
lock
add
inc
fucomp
adc
imul
dec
clc
jbe
fsubs
xchg
outsb
mov
sbb
jno
scas
xchg
out
loopne
stos
push
sahf
mov
lock
lds
rcrl
std
loopne
mov
pop
movsb
xlat
pop
idivl
lcall
fwait
scas
cs
mul
and
shl
pushl
jns
ljmp
add
test
inc
mov
dec
and
fcomp
fstpl
insb
mov
mov
jo
push
lret
cmp
les
gs
test
call
scas
inc
into
sbbl
xchg
and
pop
insl
orb
sbb
add
js
lcall
aaa
das
jl
adc
iret
push
lods
fs
sarl
jge
cmc
xchg
cwtl
rol
pop
xchg
fucomip
mov
sarb
loope
inc
or
imull
cs
icebp
xchg
fs
push
or
repz
lret
aam
sbb
or
imul
call
in
addl
lcall
enter
fwait
dec
sbbb
inc
ss
and
push
incb
lahf
sbb
fwait
popa
call
dec
dec
and
and
loop
mov
mov
loope
push
lock
adc
add
adc
sub
mov
mov
or
in
add
adc
inc
sarl
xchg
mov
je
push
inc
maxps
cmpb
jns
sub
dec
and
mov
fcoml
and
and
sbb
or
mov
call
cmp
xor
mov
mov
stc
jle
add
daa
stos
dec
movsl
mov
imul
push
pop
xchg
jo
and
pusha
and
popa
cli
ficomps
lret
leave
leave
data16
into
movl
into
aaa
adc
jnp
lds
in
incl
push
pop
stc
rorl
aaa
xchg
mov
je
lret
jbe
cmp
xchg
push
mov
or
shrb
arpl
inc
jl
inc
cmpb
outsl
fcom
into
push
rcll
data16
sbb
stos
push
test
fisttps
mov
mov
push
test
xor
jmp
mov
gs
leave
movsb
in
sarb
jg
and
addl
add
adc
std
test
push
test
scas
movsl
add
js
imul
insb
cmp
or
mov
or
adc
stos
jno
push
adc
xchg
mov
fcompl
jae
mov
aad
insl
adc
xor
xchg
xor
pop
out
cmp
mov
pop
xor
in
cli
mov
pop
jl
mov
or
sbb
or
pop
lahf
addb
mov
ret
push
rcl
jne
mov
jle
les
data16
push
outsb
pop
xchg
test
movsb
insl
jle
lock
adc
pop
jbe
add
pop
ds
add
test
pop
lret
out
xchg
mov
push
cmp
jae
or
dec
xor
push
dec
mov
mov
dec
inc
stc
push
jge
notb
dec
shrl
inc
test
loopne
fisubrs
mov
mov
and
cld
arpl
xchg
iret
mov
jbe
cmp
sbb
shlb
js
push
push
testl
lods
push
adc
cli
jns
add
rcll
or
lea
and
xor
push
jmp
adc
mov
es
inc
lock
iret
test
jmp
icebp
fucom
ret
sub
mov
inc
fdivr
aas
test
jae
jle
ja
jb
xor
mov
dec
jo
mov
mov
mov
cli
rcrb
rorl
jmp
jg
fisttpl
jno
sbb
mov
fxch
nop
gs
lahf
movsl
pop
sti
andl
adc
mov
sub
pop
mov
jg
cltd
out
iret
xchg
jecxz
outsl
mov
pusha
and
imul
mov
popl
fisttpl
shrb
rorl
adc
sbb
xchg
xchg
ret
sar
dec
int3
pop
dec
je
lret
ss
push
dec
cmp
push
idivb
dec
push
call
xor
in
int3
adc
mov
xor
cmp
push
xchg
mov
cmp
dec
test
mov
daa
dec
mov
dec
imul
push
adc
incb
xchg
jbe
mov
inc
mov
cmpsb
push
je
jae
inc
xchg
cmpsl
cmp
outsb
push
sbb
dec
dec
sub
int
add
fxtract
sub
in
mov
push
xor
fucomp
pop
xchg
push
in
pop
add
imul
repnz
rcl
bound
add
adc
jle
sbb
or
testl
mov
sbb
mov
add
lock
push
movsl
loop
ljmp
adc
sbb
add
jg
fistl
and
push
inc
xor
movsl
mov
repz
inc
iret
push
cmp
call
or
mov
cmpsl
testb
dec
adc
jbe
adc
mov
fwait
xor
lcall
fnclex
jecxz
ja
jns
xchg
shrl
pop
dec
sti
xchg
push
push
xchg
push
xlat
sti
mov
mov
hlt
stos
lcall
mov
mov
lods
push
insb
jecxz
and
js
xchg
rolb
mov
xchg
testl
cmp
ja
adc
cld
std
lods
clc
out
into
pop
fisubrs
int3
inc
mov
xor
ss
fs
push
lods
xor
mov
ja
dec
and
pop
mov
roll
dec
imul
pushf
add
rclb
psllq
ss
jge
in
inc
jecxz
mov
mov
lds
and
xor
fbstp
lahf
cld
das
dec
loopne
aad
add
hlt
cmp
lahf
outsb
adc
and
push
imul
aaa
mov
fisubrs
int3
idivb
mov
jnp
inc
xor
jb
bound
call
push
pop
mov
push
ljmp
push
stos
inc
jg
and
lock
push
outsb
add
xchg
cmpsb
push
sarl
addr16
ljmp
leave
js
jecxz,pt
mov
shll
idivl
mov
inc
mov
mov
xor
pushf
into
int
pop
sbb
mov
daa
insb
xchg
xchg
scas
push
push
into
adc
mov
outsl
and
add
sub
lahf
cmp
leave
xchg
inc
inc
xchg
pop
popa
sub
add
mov
mov
mov
imul
out
sahf
adc
add
stc
dec
in
popa
neg
insb
xlat
div
lret
stc
ljmp
imul
ja
lret
mov
mov
mov
cmp
add
sti
loope
enter
sbb
fistpll
sbb
stc
cmp
bnd
test
orl
jecxz
testl
pop
jp
mov
repz
jo
or
push
movsl
push
stos
add
lds
std
fs
rorl
inc
ds
jmp
adc
test
add
pop
mov
push
lock
sub
xor
xchg
pop
test
or
sub
dec
test
into
add
fs
in
mov
lahf
fs
and
fistl
xchg
mov
jmp
or
xchg
dec
mov
xor
mov
movsb
jge
sbbb
mov
xchg
popf
add
and
aad
xchg
or
inc
dec
pushf
addl
seta
lods
pop
int
lock
jne
mov
cli
lea
popa
pop
jne
xchg
sbb
xlat
adc
dec
xchg
jo
jg
daa
mov
pop
nop
fimuls
lock
fists
cmp
push
pop
jge
mov
xchg
mov
rclb
rorl
mov
jns
ret
fstpl
push
shl
add
xchg
lds
lods
sti
addr16
fldl
jne
mov
rcll
cmpsl
sbb
mov
mov
sbb
or
cmp
pop
dec
jb
push
xor
fcomps
lret
push
dec
push
lods
lds
xor
fisttpl
filds
mov
inc
call
lods
jl
mov
ja
jae
shrd
ret
dec
xchg
mov
dec
pop
arpl
dec
xor
xchg
bound
outsb
repnz
xor
mov
jnp
std
push
jnp
mov
cmpsl
jmp
fsubl
std
les
and
insl
push
out
cli
pushf
xchg
fs
cld
test
mov
sbb
cs
inc
xchg
fs
mov
loop
sahf
xchg
and
insb
divl
add
or
movsb
sub
aam
sbb
lods
xor
jmp
cld
inc
ja
movsl
push
scas
imul
testl
sub
push
xor
push
ss
lods
fldl
xchg
dec
mov
mov
pushaw
and
mov
mov
push
mov
in
outsb
out
mov
je
jmp
fwait
or
xchg
out
daa
cmp
add
and
xchg
jb
jae
dec
dec
cmpsb
mov
and
mov
inc
fisttpll
xchg
icebp
das
outsl
or
push
xchg
int3
add
xchg
mov
mov
mov
dec
jnp
jns
add
xchg
pop
jmp
adc
jno
hlt
ljmp
inc
stc
sbb
repz
loopne
mov
fstps
loopne
andl
in
jge
jl
xchg
mov
sbb
jge
xor
or
sub
jp
cmpsl
shrb
stc
push
cltd
adc
out
add
mov
in
insl
fstps
push
dec
int
add
ja
in
jp
cmp
xor
scas
mov
xlat
lcall
add
cli
ss
mov
mov
jnp
in
scas
jp
out
bound
aam
pop
lret
dec
jbe
scas
pushf
jg
add
mov
stc
loopne
aad
pop
jnp
cmp
in
dec
mov
adc
push
int
cwtl
adc
pop
scas
xor
mov
ret
add
sbb
pop
cmc
lock
add
cmp
in
popa
inc
or
rcrl
insb
rol
pop
jnp
test
adc
mov
repz
push
jl
lock
dec
ret
imul
mov
jecxz
push
xor
js
or
add
idiv
push
icebp
mov
cmp
and
arpl
jle
mov
xor
inc
xor
pop
or
cs
jge
xchg
pusha
jns
adc
push
ffreep
and
push
lock
xchg
movsb
xor
test
out
dec
aas
mov
ja
xor
shlb
mov
cwtl
adc
mov
sbb
std
popf
push
enter
or
in
inc
scas
and
ljmp
push
ja
clc
xchg
mov
adc
daa
mov
pop
mov
xor
test
mov
in
add
fldt
jnp
and
xor
pop
stos
jae
call
mov
sbb
adc
pushf
add
xchg
pop
mov
dec
iret
test
movsb
push
mov
sub
mov
pushf
xlat
mov
das
hlt
xlat
fists
ror
cwtl
sbb
lret
sub
inc
and
or
inc
push
shll
cmp
cmp
xor
rcrb
imul
mov
cli
pop
mov
cmpb
adc
inc
pusha
jmp
push
xchg
pop
mov
popl
mov
mov
add
aam
mov
push
popl
bound
aaa
push
xchg
jl
jge
sub
leave
add
jp
out
dec
fmull
cmp
add
lret
xlat
mov
pop
add
mov
loop
movsl
lret
leave
aam
loop
push
or
out
andb
xchg
sbb
dec
imul
testl
jae
loop
xchg
or
xchg
mov
cmc
scas
sub
filds
call
push
jmp
gs
push
imul
scas
mov
outsl
scas
stc
ja
mov
fwait
mov
out
not
push
fisubrs
mov
mov
mov
inc
mov
mov
aad
js
pop
mov
lret
push
or
mov
jb
or
fcomps
push
clc
mov
int
xchg
into
andb
mov
imul
lods
stos
sub
xor
pusha
leave
gs
dec
fistl
add
push
sbb
insb
inc
push
ret
push
arpl
jno
cmc
frstor
xchg
adc
jns
test
in
cltd
mov
push
xor
int3
dec
movl
inc
stos
rcr
call
lds
and
xchg
das
rolb
orl
scas
orl
das
int3
sbb
push
fs
jns
das
fnstenv
fwait
lods
pop
push
mov
aaa
add
jnp
add
and
push
add
stc
xor
sbb
shlb
sbb
out
mov
ds
call
adc
movsb
add
xchg
pop
jbe
out
in
dec
mov
jae
clc
add
es
add
sti
mull
lahf
in
jno
mov
push
xchg
or
cmp
dec
xchg
sbb
and
je
add
add
insl
fcmove
or
mov
lret
lahf
out
ret
adc
fnstsw
adc
imul
test
hlt
sar
imul
sub
fwait
mov
xor
ret
bnd
dec
xor
lods
push
mov
btc
bound
fst
mov
adcl
mov
inc
sbb
mov
ret
xlat
leave
test
loop
dec
in
xchg
xor
mov
mov
push
xchg
pushw
aam
xchg
push
rcrl
arpl
pop
sbb
xchg
sub
iret
xor
and
out
dec
sbb
cmp
les
mov
add
dec
jne
mov
cmc
xor
dec
push
outsb
sbb
mov
jne
sbb
cwtl
fcoms
jp
xchg
sbbb
test
and
mov
jns
add
dec
push
hlt
jae
adc
int
lods
inc
pop
cmp
push
in
scas
push
std
rcrl
fnstcw
addl
cmpsb
dec
imul
aaa
fbld
sub
leave
lods
int
inc
es
sub
add
xlat
pop
outsb
add
sti
jb
sub
daa
rorl
inc
and
jge
data16
push
or
inc
mov
fnstsw
or
pop
fcompl
xor
clc
jne
jbe
cld
push
out
mov
xor
frstor
push
std
and
iret
int
xor
pusha
push
add
xchg
pop
lret
rcr
cmpsb
call
mov
xor
rcl
bound
mov
mov
lods
stos
sbb
inc
adc
out
fbld
add
inc
jp
xchg
imul
js
jno
mov
xor
jno
mov
mov
fisubl
mov
fwait
mov
push
iret
adc
cli
in
mov
adc
popf
cs
test
and
cwtl
adcb
filds
les
push
mov
pop
adc
lods
int
xor
mov
mov
cmp
cld
adc
stos
mov
in
inc
dec
stos
xchg
test
lods
gs
pop
orb
movsb
arpl
test
xchg
in
and
fcomps
cld
fcoml
push
fistl
and
arpl
pop
mov
cmc
push
pop
and
icebp
inc
adc
push
jne
mov
jnp
push
arpl
addr16
popf
fisttps
mov
bt
mov
jecxz
into
jle
and
addl
jne
xchg
xchg
inc
sbb
jl
xchg
test
mov
sti
jnp
rcrl
xchg
sahf
xor
loope
lods
subl
push
inc
cli
mov
sub
jecxz
adc
jne
mov
shll
out
dec
sar
cli
lea
xor
or
pusha
cmp
mul
xor
jns
add
jp
imul
sbb
jecxz
lret
loope
jno
xor
xor
mov
adc
jo
mov
or
pop
xor
out
scas
and
pop
outsl
sub
sbb
mov
mov
and
mov
mov
sub
repz
repz
jmp
sbb
mov
cmpsb
adc
or
pop
mov
notb
pop
mov
lret
mov
imul
adc
ret
add
pop
and
pushf
out
call
adc
lret
jecxz
or
mull
jbe
or
lods
rorl
xchg
inc
sbb
mov
lea
out
aas
xor
sbb
inc
sub
imul
js
adc
jnp
add
and
les
movsl
xchg
xchg
rorb
xchg
sub
movsl
imul
and
test
in
out
or
push
dec
mov
xor
mov
pop
dec
push
sub
imull
aad
cltd
pop
cmp
jl
push
ss
pop
dec
adc
ret
mov
cmp
xor
je
fwait
cmp
shlb
dec
ficoms
cli
js
fisubs
add
push
adc
ret
test
je
ret
cli
dec
lock
lea
pop
xor
aas
xchg
rcrl
xchg
shll
das
test
cs
insl
cmp
in
ja,pn
sub
lea
push
scas
rol
cmp
pop
aam
es
out
push
ss
and
jb
mov
sub
inc
testb
xlat
push
xchg
fmull
adc
push
inc
pop
inc
adc
add
inc
shll
mov
outsb
or
sub
push
insb
lahf
ss
aas
pop
pop
data16
inc
cmc
movlps
rorb
xor
addr16
cmp
aaa
sti
pop
inc
addl
sub
cli
pop
xor
pop
aad
shrb
push
jl
jne
mov
lret
movl
xchg
mov
dec
jnp
or
ja
jge
lods
and
std
loope
mov
jnp
cmp
lret
xor
dec
dec
xlat
mov
outsl
cmp
jmp
mov
cmp
pop
pusha
pop
xchg
xchg
and
es
inc
pushf
push
add
out
fists
stos
xchg
push
out
ljmp
cmp
repnz
movsb
jmp
xor
adc
mov
add
push
adc
test
mov
inc
ja
mov
xchg
inc
sub
and
rcrl
or
xor
mov
pop
cmc
mov
out
daa
pusha
cmpsb
fwait
push
cwtl
gs
stos
mov
push
cmp
push
inc
rcll
fistps
push
hlt
ret
test
jnp
test
scas
mov
push
sbb
adc
lds
mov
jge
sbb
or
mov
adc
xchg
mov
cmp
lret
lahf
ds
js
push
pop
int3
dec
and
into
popa
dec
cmpsl
mov
aas
insl
jno
outsl
frstor
icebp
mov
and
test
push
or
stc
xor
xchg
cmpsb
shl
paddd
adc
push
adc
inc
sbb
outsl
pop
inc
insl
sahf
xchg
sbb
je
cli
xor
loop
int3
mov
shrl
xorb
xchg
das
sarl
push
pushf
xchg
push
repz
insl
dec
flds
in
pop
clc
push
push
push
xor
div
addr16
mov
mov
jo
pop
and
lret
inc
mov
cmp
rcll
jcxz
mov
test
add
rcrl
pop
mov
xlat
push
mov
rorl
ret
fnsave
pop
imul
and
jo
test
mov
test
lcall
pop
out
int
sub
int3
or
sub
adc
inc
scas
push
fwait
inc
js
sbb
lock
out
out
mov
das
jmp
push
cli
out
call
and
loope
mov
leave
stos
xchg
repnz
and
jg
sbb
mov
xchg
shrb
xchg
cmpsb
mov
stos
jmp
cmp
push
mov
inc
jns
mov
adc
imull
imul
mov
bound
mov
cmp
push
mov
adc
lock
dec
lods
push
pushf
inc
xor
adc
divl
and
sbb
popf
add
sub
and
lods
imul
bound
fdivrs
das
mov
push
popf
imul
loop
pop
icebp
push
jae
and
dec
add
push
and
mov
rol
loope
hlt
mov
inc
aas
enter
jge
jl
in
cld
test
imul
mov
inc
es
nop
lods
adc
inc
or
mov
les
adc
loopne
adc
arpl
mov
mov
mov
das
dec
pusha
scas
lods
jp
mov
in
cmpsl
dec
rcrl
push
mov
mov
jl
mov
mov
mul
cmp
sub
dec
dec
outsl
fsts
clc
xchg
out
sbb
pop
cmc
sbb
loope
inc
test
inc
xor
sbb
pop
ds
pusha
dec
notl
popf
xor
inc
pop
out
push
dec
hlt
sbb
call
out
and
dec
dec
fidivs
lret
js
js
add
inc
inc
ficompl
jge
or
shlb
scas
dec
jge
lcall
rep
mov
xlat
pop
insb
aaa
xchg
mov
daa
arpl
ret
mov
mov
gs
cmp
cmp
icebp
fwait
mov
out
adcl
repz
es
ffree
aaa
add
loope
imul
pop
push
push
negl
addr16
inc
cmp
push
mov
cmp
pop
mov
jp
jae
inc
inc
dec
and
jp
out
push
popa
xchg
cmp
fdiv
mov
in
jns
adc
mov
in
shll
fcom
mull
add
push
into
div
lret
mov
mov
addr16
into
ja
lret
mov
js
xchg
add
vorps
mov
popf
out
call
mov
out
ljmp
mov
loope
mov
mov
fisttpl
and
mov
sti
and
push
xor
shll
push
into
sub
jg
imul
aad
xchg
ljmp
cmp
test
push
xor
cmpsb
ret
imul
and
push
push
xorl
jno
cmp
cld
mov
mov
shrb
inc
repnz
imul
pop
popf
adc
aaa
jo
mov
xor
sahf
adc
cs
pop
xchg
sub
or
sbb
mov
mov
mov
int
arpl
shl
sbb
lea
pop
addr16
mov
jmp
hlt
jno
pop
insb
jne
lods
outsb
mov
mov
jg
shr
out
aas
jbe
push
lods
xor
jno
punpckhdq
lock
dec
xchg
cmp
jmp
mov
and
and
ret
xor
xor
pop
push
test
jp
sbb
push
and
popf
mov
out
cmp
mov
outsb
hlt
nop
pop
sbb
pushf
cs
mov
jecxz
push
in
pop
pop
jl
aad
int
out
arpl
inc
loop
mov
outsb
inc
add
das
sub
sub
inc
xor
dec
test
js
out
testl
fistl
pop
scas
fdivs
cmpsl
xchg
mov
fwait
add
push
sbb
fs
loope
add
xlat
test
sbb
test
lods
xchg
lods
shll
ss
mov
pop
test
push
mulb
stc
in
dec
ja
xorb
sub
stc
pop
push
shll
dec
rclb
lret
jo
das
test
addl
cmp
pop
sarb
pop
mov
insl
data16
testl
cmp
iret
or
fdivr
and
add
jns
cmc
jb
jge
in
into
pop
push
flds
popa
test
jns
scas
push
add
pushf
push
popf
sti
push
stos
mov
xlat
fidivrl
inc
sub
mov
popf
dec
xor
sysret
xlat
flds
push
xor
aaa
into
aas
dec
incb
xchg
loopne
mov
mov
xchg
xor
adc
fdivl
or
mov
sub
and
bound
inc
push
ja
sub
or
adc
fwait
or
lods
pop
add
sbb
mov
flds
or
fisubs
pop
in
je
mov
sbb
jmp
sti
repz
add
ds
out
jle
xchg
xor
sbb
lods
mov
dec
and
ljmp
out
fimull
jne
cwtl
sbb
sahf
push
xchg
rol
mov
sbb
lea
int
lret
mov
push
sti
hlt
pop
nop
in
inc
stos
sbb
cltd
mov
out
std
es
into
push
lret
std
push
inc
xor
clc
xor
push
cmpsb
push
call
or
outsb
iret
movsl
lods
ljmp
mov
dec
gs
cmp
nop
pop
stos
inc
repnz
adc
notb
lcall
lods
stc
mov
repz
jbe
or
loope
sbb
cwtl
rcrl
mov
mov
data16
inc
lock
addb
jnp
negb
in
jo
orl
push
push
adc
in
push
jo
xchg
sbb
xchg
out
push
test
adc
mov
pop
cmp
fs
mov
scas
mov
jmp
xchg
sbb
movsb
fcomip
inc
scas
lods
call
mov
or
loop
js
or
cmp
xor
mov
int
divl
repz
mov
adc
inc
mov
arpl
int3
jo
mov
jnp
imul
sub
pop
rorl
mov
data16
dec
lock
out
cmp
and
xor
mov
xor
sahf
int3
in
aad
es
mov
ss
inc
dec
shll
lods
inc
ret
scas
lods
sub
fisubl
ret
fwait
mov
or
test
pushf
xchg
loop
jp
movsb
mov
sbb
jg
ljmp
lods
hlt
notb
icebp
cld
dec
je
int
jns
and
arpl
push
rcr
push
into
xchg
out
mov
xchg
add
cmc
dec
ds
adcb
test
bnd
mov
dec
inc
adc
loopne,pt
cmpsl
or
mov
jb
into
and
push
divb
out
call
test
cmpsb
adc
jge
sub
sti
mov
ja
loopne
fadds
sbbl
paddsb
and
pop
popf
mov
loope
xchg
add
mov
and
adc
add
test
push
pusha
mov
and
xchg
xchg
inc
mov
enter
pop
cmp
or
sub
in
jnp
push
lea
cltd
out
outsb
jmp
adc
or
sbbl
jns
and
inc
add
mov
and
dec
outsl
jns
sbb
bound
stos
data16
fists
xor
fisttps
pop
sbb
push
mov
scas
adc
inc
hlt
cmc
repz
hlt
push
or
and
das
int
orb
mov
test
add
int
cmp
push
scas
cwtl
cmp
adc
lea
ja
dec
mov
cmp
dec
cmp
sbb
jmp
out
or
and
notb
lret
pop
cmpb
mov
ficoms
and
aaa
repnz
push
inc
enter
pop
xor
push
mov
cmp
mov
lret
xlat
mov
mov
dec
push
dec
lret
stos
xor
push
and
pop
dec
adc
xchg
imul
push
aad
cmp
cmpl
sbb
sahf
scas
pop
lock
push
scas
cli
out
outsb
mov
mov
cmp
sbb
dec
es
push
mov
arpl
lds
or
jno
xor
rcrl
rcrl
add
les
mov
fidivl
jo
pop
shrb
bound
les
mov
pop
push
mov
lods
sub
imul
pop
sub
push
and
mov
sbbb
inc
lods
mov
pop
fimuls
and
ja
lock
sahf
rolb
das
mov
shr
call
out
cmpsl
aaa
add
cmpsl
sbb
jae
arpl
mov
adc
sti
lcall
mov
out
mov
stos
outsl
mov
dec
jge
mov
jge
xor
or
cld
mov
incb
sbb
lds
push
xor
out
mov
dec
add
jae
push
cmpsb
xchg
out
mov
push
movsl
push
std
test
xchg
mov
fidivl
scas
fldenv
sub
cwtl
rolb
xor
inc
mov
mul
rcrb
push
and
mov
rcll
pop
push
push
sbb
aas
mov
cwtl
jne
push
mov
cmp
shll
or
sahf
dec
or
mov
mov
jl
push
jp
dec
mov
xor
outsb
rcrb
mov
lret
ja
sbb
leave
lcall
pop
rcrl
pushf
pop
xchg
movsl
pop
jp
mov
mov
sub
jle
jne
jns
test
int
popf
popl
stos
data16
out
jbe
pop
test
in
out
lret
inc
sub
negl
adc
aad
pop
rclb
push
adc
sahf
stc
mov
out
xchg
adc
les
pushf
jp
add
push
mov
out
mov
jl
cmp
xor
cld
fstp
add
push
cli
mov
sarl
lea
enter
and
mov
fxch
dec
and
loopne
fs
xchg
arpl
jno
push
movsl
out
dec
divb
loope
jns
fsubs
gs
leave
mov
ret
mov
idivb
ret
lret
aad
stos
jge
jecxz
dec
sahf
sti
dec
imull
in
cmp
mov
or
lret
in
cmpsl
call
add
inc
sub
add
filds
lahf
fdivl
sbb
mov
iret
lea
lahf
adc
mov
pop
dec
pushf
in
or
sub
fnstenv
cli
and
mov
lahf
mov
insl
pop
aam
imul
std
addb
pop
push
arpl
mov
scas
xchg
mov
add
jge
iret
lret
aam
call
rcll
jae
pushf
test
notl
lahf
dec
in
add
or
mov
or
add
add
push
hlt
adc
jno
dec
xor
mov
inc
imull
mov
mov
cmp
fwait
in
cmp
cmpsl
lock
cmpsl
add
inc
xor
jns
jae
dec
xchg
fldl
inc
insb
or
and
aaa
outsb
inc
outsl
fdivs
dec
stos
jae
in
jne
repz
and
push
inc
bound
add
add
test
push
in
aam
push
ret
cmp
mov
daa
ficomps
sub
ficoml
jb
lret
loopne
mov
stc
fstpl
and
ss
cs
mov
les
dec
xor
daa
and
fstpl
mov
inc
inc
mov
cmp
insl
xchg
pop
fcomp
leave
lds
pop
cmpsl
sub
sbb
mov
adc
inc
stc
sbb
inc
andl
pop
push
jns
inc
scas
xor
push
pusha
shlb
mov
leave
inc
mov
adc
push
repnz
cld
jmp
push
jo
xchg
in
ss
inc
inc
pop
sbb
iret
pop
add
or
fisttps
and
pop
add
push
push
test
or
cmpsb
mov
lret
aas
pop
inc
pop
mov
aas
mov
push
dec
push
cmp
pop
or
js
fstl
mov
xchg
mov
stc
popf
fs
or
jnp
filds
cs
pop
pop
lock
pop
adc
mov
iret
mov
push
pop
leave
scas
add
dec
stc
icebp
jbe
pop
sbb
arpl
cmp
fwait
adc
mov
sub
stos
mov
cmp
inc
pusha
jp
xchg
pop
int
mov
loope
xchg
sub
dec
xchg
mov
sub
arpl
mov
cmpsl
insl
test
mov
fcompl
mov
loopne
je
out
sti
jb
add
mov
dec
mov
out
rcll
jl
std
jp
sub
movl
sub
aam
lret
sarl
rcrb
inc
sbb
adc
sub
mov
rorl
lret
pop
ret
lea
pop
xor
add
movb
into
faddl
xchg
in
xchg
jo
lret
pop
stc
sbb
lahf
cmpsb
push
xor
or
xchg
mov
pop
mov
push
xchg
cmpl
xchg
xchg
cmp
popa
mov
lods
jge
sbb
aam
movsl
icebp
outsb
out
mov
and
shl
jae
jb
test
inc
mov
aas
out
sbb
pop
jo
xlat
jae
jnp
lret
in
orl
mov
jo
jne
in
call
and
into
loope
into
hlt
mov
lods
pop
pop
xor
sub
jg
jb
je
out
hlt
sub
jmp
dec
repz
lret
and
mov
mov
cmpsb
push
mov
cmpsl
sbb
jg
rcll
stos
cmp
ljmp
test
jg
push
pop
jne
pushf
sub
mov
jle
jle
stc
jge
cmp
out
push
sahf
subb
inc
ds
mov
and
push
cmp
inc
ja
inc
mov
pop
mov
sbb
or
add
xchg
pop
bnd
xchg
in
stos
push
popf
mov
and
mov
cmp
jb
push
bound
loop
in
mov
or
jge
inc
pop
pushl
js
mov
add
out
lret
outsb
ret
test
popf
mov
or
xchg
ret
lods
and
std
sti
rcrb
insb
mov
in
lfs
mov
in
lcall
dec
iret
pop
push
stc
push
lock
dec
out
das
mov
mov
mov
pop
into
xor
movsl
sub
add
sub
ficomps
lcall
pop
adc
add
xchg
outsb
gs
cli
cmpsl
ja
xor
mov
out
cld
repnz
outsl
shlb
popf
sbb
jg
jo
mov
push
push
popa
insb
dec
and
sub
out
xchg
sub
mov
inc
out
imul
mov
mov
mov
lds
mov
data16
iret
add
std
adcb
xchg
hlt
add
leave
into
test
mulb
cltd
mov
jbe
push
sub
cwtl
dec
and
sarl
imull
push
push
add
sahf
fiaddl
pop
push
mov
je
lods
dec
subl
lds
insb
insl
test
adc
pop
aam
in
movsl
stos
sarb
dec
cli
push
jns
lea
fimull
and
xor
push
and
cmp
pop
xor
in
pop
ficomps
pop
test
cmp
mov
ss
inc
js
cmpsb
sbb
inc
mov
lret
adc
adc
inc
lds
pop
int3
xchg
ljmp
aas
jg
dec
add
aad
mov
nop
daa
pushf
cli
mov
and
in
in
pop
outsb
adc
pop
sbb
xchg
cltd
out
xor
mov
cmp
xchg
test
sbb
roll
shl
arpl
or
outsb
mov
ss
xor
ljmp
outsl
or
cmp
icebp
sub
daa
adc
sub
adc
adc
inc
xlat
jecxz
or
imul
hlt
cmpsl
sub
sarl
test
jb
cli
test
cmpl
out
ficomps
lcall
inc
pop
mov
add
ss
mov
push
cmpsl
pusha
add
aaa
cmp
loopne
push
out
ss
jns
pop
stos
add
call
lret
insb
rcr
fisttpll
loope
xor
out
lcall
insb
cmp
pop
andl
and
sahf
insl
loope
sub
push
push
jle
dec
sub
fcmovnbe
loopne
lock
div
cmc
iret
push
clc
jecxz
jmp
mov
push
push
outsb
xchg
into
push
push
loope
mov
mov
insl
adc
out
jecxz
pop
leave
subl
and
notl
cli
inc
fs
adc
jmp
mov
inc
nop
adcb
or
in
jne
sbb
test
inc
adc
add
push
pop
stos
bound
inc
aad
and
cmp
rclb
das
jmp
or
insl
or
jnp
js
bound
aad
in
mov
mov
mov
cld
and
push
scas
scas
ja
data16
aaa
mov
mov
jl
dec
pop
in
gs
lahf
mov
inc
mov
mov
idivb
add
scas
push
mov
stc
std
ret
fadd
pop
ljmp
pop
fadd
cmpsb
lcall
inc
lret
call
ret
adc
pop
inc
int
inc
add
add
lea
push
push
adc
punpcklwd
orb
inc
mov
xchg
lea
jb
jge
or
lahf
movsb
xchg
cmpsb
stos
mov
xlat
rorb
and
sbb
rorl
jae
fwait
push
cmc
jns
or
xor
mov
std
fisubl
mov
cld
fadds
xchg
fsubr
mov
fisttpl
pop
jns
adc
dec
testl
xor
outsb
leave
ret
inc
test
push
mov
enter
inc
out
imul
rcr
ret
test
adc
in
jg
inc
dec
jge
add
pop
mov
pushf
dec
gs
push
lea
adc
xor
insl
lock
stos
inc
fwait
push
mov
mov
sbb
add
dec
rorb
mov
test
or
std
mov
xchg
jb
in
imul
repz
or
or
aad
inc
lcall
popa
pop
je
sub
lret
xchg
add
jp
push
push
sbb
test
out
inc
jbe
push
xchg
jecxz
ret
push
sbb
jg
loopne
push
push
xor
bts
mov
fiaddl
loopne
test
daa
xchg
test
jae
jbe
nop
out
es
xor
push
fsts
sub
enter
packsswb
lods
test
xchg
mov
dec
push
sbb
sub
mov
xchg
pop
and
andb
cmp
push
cmp
js
inc
clc
fwait
adc
xlat
mov
dec
pusha
iret
repz
jecxz
test
bound
xchg
adc
xchg
cld
in
lods
or
mov
out
fimuls
sbb
dec
ds
pop
nop
popa
inc
leave
jecxz
mov
pop
xchg
jo
sbb
and
jge
inc
jmp
mov
decl
jnp
push
mov
add
jne
test
and
std
mov
pop
test
mov
sub
add
and
rcl
cli
fstps
pop
fsubl
sbb
fstl
add
movsb
mov
insl
adc
lock
ret
loop
popa
lret
xchg
rorl
popf
shrb
dec
movsl
cwtl
aad
mov
mov
push
nop
mov
divl
testl
pop
outsl
mov
and
pop
or
mov
xor
push
mov
mov
bound
fisttpl
insb
addr16
sbb
in
cmpsl
mov
mov
pusha
pop
push
or
pop
adc
sub
push
arpl
ror
inc
xchg
xchg
xchg
int
popa
inc
je
xor
jno
test
and
xchg
dec
xor
xor
rorb
push
dec
in
adc
inc
in
jnp
movsb
jb
pop
addr16
dec
mov
lcall
mov
xchg
pop
shrl
jbe
inc
loopne
jne
pop
push
mov
std
pusha
insb
push
lds
push
pop
adc
and
adc
and
push
cmpsl
stos
inc
add
xchg
das
outsb
out
insl
inc
mov
add
imulb
cmp
push
mov
fisttpl
dec
sub
fisubs
call
aaa
pop
push
into
ja
shll
jle
pushf
test
shrl
jno
jne
sti
cmp
mov
cmp
push
test
lods
cmp
pusha
fimuls
addr16
push
scas
out
xchg
sbb
xchg
xchg
mov
push
ds
ds
push
adc
adc
inc
cmp
jb
sbb
push
mov
loop
cltd
shl
js
test
movsb
mov
lahf
pop
pop
add
outsl
pop
push
fbstp
mov
out
adc
mov
ret
iret
aaa
lcall
inc
xor
out
xchg
lcall
pop
addl
adc
arpl
ss
mov
sbb
inc
lock
sarb
pop
sbbl
mov
and
dec
mov
aad
xchg
dec
xchg
push
dec
repnz
inc
jg
inc
stc
insb
sub
and
iret
int
call
stos
jg
sti
cmp
xor
or
leave
sub
and
mov
cmp
adc
dec
adc
jb
pop
sub
stc
push
adc
jne
pop
std
sub
popa
lret
cmc
cmc
aad
pop
or
add
addr16
mov
jo
cmpb
add
mov
loope
pop
nop
push
ret
lahf
bswap
cld
jecxz
pop
push
imul
lea
nop
aam
xchg
dec
test
xlat
xor
stos
sbb
adc
inc
mov
push
insb
xchg
add
xchg
jne
dec
inc
adc
pop
jge
mov
jmp
cmp
and
fidivrl
mov
and
cmp
jmp
hlt
das
xchg
mov
inc
mov
sub
adc
aas
xchg
inc
out
inc
pop
mov
push
lds
mov
dec
add
dec
out
add
lods
std
scas
inc
add
test
dec
out
addr16
cld
and
aad
insb
adc
in
mov
test
push
add
jg
movsl
mov
or
aad
pop
push
push
test
and
fldl
fidivrl
push
inc
nop
cmp
imul
xor
or
stos
enter
inc
std
xchg
add
sahf
mov
or
arpl
mov
mov
sub
cld
andl
xor
sub
pop
cmp
adc
data16
cmpsb
push
addr16
jo
xor
push
addr16
mov
pushf
pop
add
and
mov
dec
cmpsw
and
sub
in
into
ljmp
and
stos
pusha
cli
add
mov
or
aas
xor
add
pop
mov
test
test
dec
mov
lods
sbb
xor
cmp
xchg
jae
fsubp
insb
sub
sub
mov
outsl
ffree
push
test
loopne
sarl
cmp
push
lret
test
jno
loop
xchg
call
rcrb
mov
fstpt
pop
daa
jg
lea
sbb
iret
std
test
les
inc
or
arpl
lock
int3
lds
mov
sti
inc
cmp
push
jmp
jnp
fmuls
ljmp
mov
jmp
adc
mov
xor
jae
adc
cli
sbb
or
stc
fcmovne
shll
movsb
and
std
nop
out
and
xlat
cmc
leave
leave
cmp
pop
inc
push
lahf
test
pop
xor
xchg
mov
push
mov
cmpsl
pop
cmp
mov
pop
ret
mov
and
clc
ds
and
test
or
xor
mov
mov
push
push
pop
clc
test
dec
repz
mov
ds
mov
mov
or
insb
arpl
inc
aad
js
movsb
push
pop
xchg
movsb
inc
stc
dec
outsl
add
jb
arpl
adc
xlat
adcl
sbb
cmp
push
pop
jecxz
cs
fwait
adc
dec
ret
cwtl
aam
mov
mov
lahf
xor
rclb
jmp
and
xchg
and
mov
stos
in
ja
out
js
call
test
lahf
sbb
arpl
dec
push
addr16
loop
fs
orb
repz
lcall
xchg
sbbl
clc
or
dec
movsb
and
dec
pusha
pop
mov
je
xchg
cwtl
fcom
arpl
push
popf
test
ret
mov
cwtl
pop
cwtl
outsl
int
repz
mov
sub
mov
cmpsl
out
and
mov
mov
sbb
inc
mov
inc
pusha
adc
in
fdiv
jl
fsubs
int3
ss
jbe
sbb
cli
sbb
int
push
nop
mov
mov
jle
fdivrl
stos
cmp
ss
add
or
leave
fiaddl
subl
pop
jmp
dec
jge
jecxz
nop
xchg
lea
pop
dec
or
fcmovnbe
gs
notl
jl
xchg
insl
sbb
lcall
mov
out
insl
ljmp
out
xchg
lret
mov
shll
pushl
sbb
sbb
enter
scas
daa
add
addr16
jo
cmp
and
xor
lock
cmp
xchg
mov
outsb
stos
xor
imul
in
cmpsb
into
test
dec
and
rol
cwtl
test
popf
inc
sub
daa
test
out
sub
xchg
jno
pop
mov
fisubs
pop
sub
adc
adc
std
jmp
and
xor
add
out
cmp
aaa
xchg
and
or
outsl
mov
fidivs
mov
sub
out
popf
push
sbb
dec
loopne
in
dec
jne
and
xchg
push
mov
pop
pop
out
iret
shrb
push
andnps
int
test
lret
and
mov
repz
adc
mov
xor
hlt
loop
and
jmp
mov
fwait
mov
ret
scas
stos
daa
add
test
mov
xchg
jnp
in
inc
push
cmp
pop
mov
test
push
sub
hlt
and
movsb
and
mov
push
sbb
in
pop
or
jecxz
js
int
test
jnp
or
test
ss
mov
xchg
xchg
cwtl
jo
add
cmp
test
xorl
and
lret
and
cwtl
mov
cltd
stc
dec
push
scas
xchg
data16
iret
mov
mov
fcos
mov
xchg
ret
test
jae
and
out
fs
adc
xchg
add
arpl
and
sub
js
popa
or
popf
and
int3
cmp
repnz
cs
and
mov
frstpm(287
shll
inc
cmp
aam
mov
sub
test
aaa
aam
jmp
mov
add
out
add
sub
in
mov
jo
adc
incb
cmp
ja
mov
sub
imul
stos
jmp
inc
push
add
jg
shl
push
adc
dec
lret
rclb
pop
je
loope
adc
mov
sarl
mov
iret
xor
mov
pop
lret
out
das
mov
data16
cmpsl
dec
jbe
mov
xchg
or
arpl
aas
bound
mov
mov
loopne
mov
sbb
inc
out
pop
pop
push
mov
pop
pusha
jle
push
sbb
jne
sub
les
xor
pop
pop
jp
xchg
mov
pop
aam
idiv
repz
adc
mov
push
ljmp
lock
test
mov
pop
mov
adcl
inc
cmp
enter
push
cmpsb
lahf
mov
pop
fwait
int3
or
dec
aam
mov
mov
sbb
push
dec
decb
outsl
int3
in
dec
sahf
cltd
jmp
mov
aad
xchg
bound
sti
ficoml
xlat
jl
jno
push
jecxz
in
adc
sbb
loop
jno
ja
aas
mov
pop
mov
icebp
fiadds
mov
mov
xchg
mov
push
mov
and
cmp
cmpsb
scas
xchg
int3
sarl
or
out
rol
jo
or
jp
pusha
aaa
dec
adc
outsl
xchg
lods
inc
mov
cmpsb
inc
pop
xlat
xchg
mov
mov
push
jo
xchg
push
stc
inc
cmp
out
sub
pop
or
and
and
arpl
push
nop
xchg
cmc
clc
push
popa
dec
mov
pop
and
aam
nop
into
mov
hlt
xor
popf
push
sub
push
aaa
cmp
inc
jmp
jp
mov
mov
js
arpl
sbb
push
jg
test
inc
mov
jo
stos
call
stos
imul
cmpl
imul
mov
ja
in
arpl
fcmovne
sarb
mov
dec
xchg
xchg
dec
imul
xchg
je
fs
add
out
lock
xor
mov
dec
push
sub
repnz
pushf
push
test
push
cs
push
pop
adc
stos
lret
cs
in
inc
push
jmp
jns
adc
and
movsb
cld
mov
jb
push
pusha
xchg
pusha
daa
add
xor
addr16
in
clc
jmp
mov
fs
test
and
mov
cmpsb
pop
jne
xor
mov
iret
outsl
xchg
dec
pop
inc
sbb
lods
cs
outsl
xor
mov
sub
cmp
sbb
mov
test
orb
push
xor
sub
xchg
push
jnp
dec
mov
fs
dec
dec
push
sub
scas
and
popa
dec
jmp
jae
jns
scas
xor
lods
pop
daa
dec
or
lahf
adc
mov
inc
inc
sahf
int
stos
in
mov
divl
in
xorb
fbstp
and
incl
inc
jmp
testl
clc
adc
mov
call
pop
cmp
push
int3
call
mov
subl
pop
int3
lahf
or
fildl
pop
pusha
xorb
xor
loope
je
sbb
mov
pcmpgtb
adc
push
inc
cmp
ja
sub
push
ds
pop
stos
outsb
push
in
jo
out
lahf
cld
clc
insl
sbb
xchg
shl
mov
or
and
mov
cmp
cmp
xchg
sti
add
cmp
push
mov
lds
sti
sub
loopne
dec
sbb
fmuls
dec
sub
lcall
mov
mov
in
cmp
int3
gs
outsl
std
les
push
shrb
or
ss
dec
test
adc
jno
and
lea
dec
xchg
daa
xchg
lods
pop
out
cmpsl
lret
out
std
sbb
fistpl
push
jl
imul
sti
aam
std
fcoml
jb
inc
fxtract
test
rclb
cmp
jl
push
ss
jge
xchg
sbb
je
push
mov
jge
ja
mov
decb
push
je
in
mov
into
inc
hlt
insb
cvttps2pi
iret
cwtl
divl
jne
pushf
dec
bound
and
cld
mov
cmpl
pop
stc
lret
pop
mov
add
sbbl
sub
idiv
in
push
xchg
xor
xchg
inc
dec
xchg
insb
popf
mov
push
in
cs
xchg
jecxz
cmpb
xchg
loope
es
cmpsb
in
adc
clc
mov
mov
filds
push
fisubrs
jo
cmp
sub
outsb
add
push
mov
iret
pop
outsl
add
jecxz
lock
mov
repnz
cwtl
mov
dec
test
mov
dec
cmp
inc
xchg
jg
or
jp
fnstenv
aad
xor
pop
push
jp
jl
mov
add
dec
cli
call
mov
dec
push
scas
or
lcall
cmpsb
sub
or
repz
mov
sbb
push
cld
mov
sub
repz
xlat
jmp
pop
lds
mov
ret
test
cmp
mov
int3
push
sahf
and
fnstsw
movsl
in
lret
dec
pop
lea
mov
aaa
punpckhbw
mov
in
xor
notb
hlt
sub
cmp
vmwrite
popa
bound
sub
data16
decb
or
fnstsw
jmp
lods
push
adc
out
push
ljmp
inc
cmp
lret
cwtl
in
cmp
inc
inc
sarl
ret
daa
sbb
jnp
sbb
mov
ret
daa
xor
adc
cmc
std
lret
aas
ret
sub
jge
pop
cmp
cmp
mov
out
inc
dec
dec
add
fstl
dec
call
enter
sub
pop
jae
repz
adc
sti
pop
lock
outsl
mov
jo
stos
js
mov
mov
push
hlt
lcall
jo
dec
shlb
addr16
add
pop
dec
or
icebp
ds
bnd
sub
adc
jp
ret
push
cmp
push
std
push
loop
inc
jnp
lahf
iret
xchg
push
pop
loop
sbb
xchg
movsb
add
ljmp
ss
test
or
dec
and
ljmp
push
dec
lods
dec
xchg
dec
cmp
jle
jnp
lea
movsb
dec
sbb
inc
push
ret
and
or
and
in
ja
add
mov
fistl
or
mov
inc
daa
xor
xor
aad
out
xchg
adc
jecxz
and
xchg
sbb
add
fsin
lret
xchg
es
and
xchg
lcall
fistpl
jg
shl
dec
sti
iret
push
scas
fists
add
scas
mov
lods
es
sbb
push
or
dec
xor
sahf
dec
roll
sti
fwait
pusha
in
mov
out
movsb
and
push
jecxz
into
cmpsb
iret
test
ljmp
cmpl
pop
sbb
and
sbb
out
push
and
sbb
jecxz
mov
or
lcall
fcompl
xchg
mov
mov
fwait
mov
dec
xchg
mov
imul
gs
xchg
sbb
or
fstpl
js
in
cmp
sbb
jle
cmpxchg
stc
out
push
push
jecxz
xor
mov
jae
fwait
inc
or
jb
daa
fsubs
sub
jns
cwtl
rclb
cmpsl
scas
jnp
mov
pop
das
shl
lods
call
jnp
fdivs
pxor
cmp
pop
mov
in
out
addl
lock
mov
add
lods
fnstsw
fsubrl
in
jmp
dec
mov
add
icebp
adc
push
push
leave
mov
adc
xor
xor
push
fwait
lcall
sub
mov
repz
push
arpl
fcoml
mov
enter
movsl
push
icebp
negb
xchg
fdiv
ds
adc
mov
pop
push
ja
aaa
jmp
lcall
dec
inc
je
add
cmp
test
je
add
or
pop
fdivrs
cmpl
je
stos
pusha
leave
sub
jg
and
fstpt
scas
lods
pop
jo
jne
iret
clc
xlat
xchg
mov
movsb
sbb
sti
pop
and
adc
adc
daa
dec
insl
pushf
pop
inc
or
gs
cs
mov
mov
sbb
mov
aad
sbb
addr16
push
xrelease
add
push
adc
leave
negb
push
and
lcall
jmp
or
pusha
mov
add
insl
addr16
or
xchg
jge
cmp
fnstcw
mull
mov
mov
mov
cmp
push
jo
sbb
jnp
pop
sub
mov
dec
add
in
mov
mov
mov
fst
xor
js
pop
and
xchg
stos
fbld
push
fistl
sahf
and
and
les
jecxz
add
xor
inc
jne
mov
shlb
bound
enter
sbb
jns
fmuls
or
push
pop
cwtl
cmpsb
push
jne
add
pusha
jae
pop
idivl
mov
jp
popa
sbb
lret
loope
mov
daa
mov
sarb
cmc
shlb
das
aad
adc
or
mov
sbb
jbe
test
incl
andb
inc
stmxcsr
jge
sub
push
sahf
pop
push
add
jmp
rcll
lahf
in
add
add
jbe
bound
xchg
outsl
pusha
xor
mov
lret
rclb
inc
jp
sbb
aaa
ja
rol
test
out
gs
dec
aaa
fcomp
out
sahf
cmp
sahf
push
jecxz
and
inc
cmovge
cli
clc
push
inc
imulb
cmpsb
out
fsubrs
adc
stc
sub
imul
adc
dec
jecxz
adc
repz
push
ss
pop
aas
clc
adc
inc
sbb
inc
imul
ret
dec
adc
jle
int
es
or
mov
mov
jp
shll
in
sub
adc
pop
test
mov
repnz
add
or
xchg
cli
xchg
push
loope
loop
pop
fs
jge
lock
xchg
je
mov
sbb
jp
mov
in
xchg
jmp
push
jle
and
push
and
xchg
and
mov
adc
fidivrl
fisubrl
adc
cmp
decl
cmp
movsl
lahf
mov
nop
mov
aam
sbb
and
out
push
je
xlat
insl
ffreep
rclb
mov
mov
test
insb
sti
xchg
dec
push
xor
mov
xor
in
jg
rolb
fdivrl
push
popa
packsswb
nop
mov
enter
cmpsb
jp
push
mov
fsubl
repz
je
mov
insl
dec
test
filds
inc
jb
fstl
lea
mov
or
aam
out
fadds
sbb
lods
push
or
ret
sbb
jge
mov
ret
les
xchg
and
dec
mov
mov
push
sub
cltd
mov
push
adc
sbb
cld
test
mov
mov
and
add
sbb
push
mov
test
dec
add
sub
in
aas
mov
movsb
add
push
stos
push
sbb
sub
and
int
and
stc
cmp
stc
adcl
lcall
fnstenv
push
roll
ret
enter
mov
test
jnp
push
addr16
push
mov
fcoml
lods
add
add
mov
std
sbb
xlat
mov
ret
hlt
stos
imul
arpl
and
cmp
movsb
andl
stc
cmpsb
add
imul
xor
sbb
sti
pop
adc
mov
and
jne
add
leave
push
cwtl
pusha
mov
push
ret
jecxz
cltd
test
test
pop
add
mov
scas
out
jp
ffreep
xchg
nop
sbb
les
movsl
sbb
bnd
xchg
dec
cmp
inc
jmp
cwtl
lock
mov
pop
jge
cmp
dec
dec
pop
jnp
das
aad
jecxz
jge
pop
lods
inc
push
ja
jno
xor
movsb
lcall
cwtl
int3
and
in
dec
pushf
xlat
sahf
jo
mov
mov
cwtl
pop
mov
cwtl
dec
jb
addr16
outsl
lea
cltd
sbb
push
divl
popf
in
rclb
fsubr
mov
adc
movb
push
popa
sti
in
lret
nop
cld
outsb
test
xchg
mov
in
xchg
or
mov
lret
mov
test
or
rep
push
fcmovnbe
xor
fcmove
in
sbb
sub
stos
std
jns
push
movsb
arpl
das
jp
decl
cmp
mov
clc
scas
jns
xor
leave
and
pop
rclb
jae
adc
push
inc
mov
pop
in
std
enter
jecxz
xor
or
or
das
add
sbb
or
cmp
add
xlat
enter
pop
xor
and
adc
repz
mov
sbb
adc
iret
inc
inc
icebp
inc
mov
test
sahf
sub
push
fstl
psubusb
rcrb
pop
stos
pop
pop
cmp
shlb
and
rcrb
ret
cmp
call
in
cmp
adc
and
xchg
nop
adc
shlb
inc
sbb
call
cmova
dec
ljmp
stos
and
icebp
fldenv
add
or
jmp
push
dec
add
push
lds
push
fcoml
adc
mov
in
out
imull
iret
mov
dec
adc
aad
cs
stos
cmp
and
movsl
out
enter
and
loop
out
sbb
enter
dec
dec
dec
dec
sahf
aam
lods
movsl
outsl
negl
and
loopne
leave
ret
inc
test
cltd
sbbb
lods
xchg
and
xor
pusha
xor
cmp
mov
test
repz
xor
rcrb
fs
pop
adc
cld
mov
add
and
add
int
push
cs
scas
arpl
inc
push
inc
enter
lret
std
xor
dec
rcrb
addl
insb
mov
mov
jg
xor
sti
lock
outsl
loop
mov
shlb
jne
cld
inc
pop
cmp
cwtl
insb
mov
mov
sbb
push
cmc
jbe
mov
inc
push
jl
jecxz
cmp
aad
cmp
mov
je
icebp
enter
xchg
jp
and
mov
lahf
mov
lea
sub
jb
or
iret
stos
inc
lods
lods
sbb
sbb
jbe
insl
and
pop
aam
jo
sbb
mov
mov
mov
std
xchg
out
addr16
dec
loop
inc
or
loop
scas
sbbb
lcall
loope
cmp
or
and
outsl
insl
loope
and
loope
xchg
dec
sub
lds
push
sti
cwtl
rorl
xor
cmp
jns
daa
adc
lret
push
push
push
test
jg
push
mov
xchg
xchg
int3
sbb
mov
cs
std
insl
xchg
mov
mov
add
mov
aam
addr16
sub
pushw
jo
push
repnz
sub
sub
mov
loopne
fsubrl
xor
movsl
insb
mov
xchg
enter
mov
and
push
vmovapd
sbbb
in
push
imul
push
dec
mov
shll
cli
jecxz
sbb
adc
push
jnp
mov
out
or
fnsave
popa
sbb
test
inc
add
loopne
and
outsb
scas
push
lret
imul
xchg
mov
cwtl
out
mov
mov
icebp
int
adc
pop
rcrl
roll
push
je
enter
sub
fistl
imul
inc
cld
xchg
pop
mov
mov
mov
xchg
sti
fnstsw
push
stos
push
stos
inc
cmp
jne
iret
lods
jmp
nop
mov
addl
add
hlt
push
push
lret
jo
mov
out
cltd
xlat
cld
mov
sub
inc
sub
or
add
xlat
and
xchg
jmp
sti
mov
scas
cltd
or
test
xchg
fidivs
xchg
fldcw
mov
mov
mov
or
cmp
and
dec
adc
imul
lahf
cmp
pop
push
inc
jo
pop
rcll
les
out
out
repnz
jb
loope
fs
and
xchg
dec
push
ss
fdivs
lret
and
ss
out
ss
ret
push
or
stos
in
mov
sti
dec
add
pushf
imul
jae
lock
sbb
pop
pushf
cmpsb
insb
icebp
mov
lods
add
aad
and
std
lcall
aaa
inc
and
je
outsl
ja
mov
push
and
jae
jnp
mov
fdivr
fldl2e
pushf
xchg
push
or
jae
shlb
popf
jbe
push
jne
sti
inc
cmp
mov
mov
sbb
shll
mov
nop
dec
aam
pop
out
into
ds
loope
sub
icebp
adc
inc
xchg
stc
retw
dec
xchg
adc
scas
cmc
adc
stc
stos
cmp
pushf
or
sbb
inc
mov
arpl
push
xor
xor
fcoms
ds
inc
or
inc
sub
test
lea
shl
lea
mov
pop
data16
movsl
sub
ret
sub
jl
jle
xchg
cmp
and
hlt
aaa
or
mov
mov
mov
cmp
mov
push
sbb
xlat
cmp
loopne
lods
stos
pop
lea
jle
mov
push
jb
inc
imul
movsb
lock
xchg
or
aam
mov
adc
fsubp
pop
lods
pop
mov
into
and
xchg
js
push
jb
testl
insb
add
xor
xchg
mov
mov
js
or
popf
int3
inc
xchg
das
sub
jecxz
xchg
pusha
sbb
sarl
mov
idivl
xchg
jns
push
jl
jne
insb
add
test
mov
fs
nop
cmpsb
arpl
xchg
sbb
xchg
mov
es
mov
push
shlb
push
xor
add
ss
jae
sbb
pop
jbe
mov
xchg
ss
sub
inc
fs
push
pop
or
lcall
xchg
mov
mov
mov
int3
and
test
xchg
scas
int3
fldcw
cmp
jecxz
xor
cltd
call
inc
inc
fistps
test
hlt
and
push
enter
jecxz
mov
jmp
mov
ss
repnz
ret
enter
sub
jge
jecxz
sbbl
dec
icebp
push
repnz
sti
clc
fmulp
push
mov
lods
into
sbb
pop
test
push
jl
out
mov
lds
cmpsl
rcl
xchg
fs
inc
movsb
in
xlat
jb
mov
repnz
lock
mov
rcll
push
aad
mov
xor
ret
mov
and
pusha
add
js
mov
cli
fxtract
add
inc
or
repnz
push
push
ror
test
repz
add
pop
and
shll
xchg
mov
test
jo
add
adc
mov
aaa
push
outsl
fwait
icebp
mov
loop
add
xchg
rol
push
adc
ret
lds
mov
xchg
fsubs
and
inc
pop
lcall
sub
mov
add
loop
sub
mov
mov
dec
aaa
cmp
xchg
dec
fnsave
arpl
sbb
out
xor
dec
adc
jp
push
jbe
adc
adcl
ret
lcall
mov
inc
insb
gs
cmp
inc
shll
jbe
add
sub
and
arpl
lds
xchg
repz
add
js
les
inc
lods
gs
push
lret
push
adc
shlb
xlat
sub
add
dec
push
mov
mov
sub
aaa
and
popw
popa
push
jmp
xlat
lret
pusha
add
fisubrs
lock
jb
cmp
push
out
cmp
inc
aaa
mov
xchg
push
cld
fmuls
jp
loopne
cmp
js
movl
jb
dec
inc
popa
in
adc
or
aam
xchg
dec
loope
jmp
pop
orl
out
xor
adc
pop
dec
scas
ss
movsl
push
mov
ret
mov
xor
cltd
mov
xor
mov
sub
repz
jno
inc
test
push
cmp
adc
mov
jl
sbb
rcrb
adc
test
shl
jne
xchg
and
fisubrs
jg
jp
adc
mov
cwtl
rcr
xorl
dec
leave
idivb
push
sahf
cmp
cmc
mulb
sti
lock
in
add
out
dec
fcompl
or
push
pop
inc
push
lahf
outsb
aam
sub
xlat
sub
fwait
push
shl
or
rorl
jmp
lahf
adc
mov
sbb
pop
fs
add
adc
fs
lds
cmp
fs
loop
jae
push
sub
jae
and
leave
in
mulb
push
dec
fmul
xor
dec
scas
pop
mov
leave
dec
sub
add
add
fwait
inc
jmp
adc
fcmovb
mov
pop
push
je
aas
into
inc
in
movsb
push
cmp
addr16
out
mov
and
pop
xchg
jae
xchg
ret
mov
jbe
sbb
jp
test
iret
scas
arpl
adc
popf
sub
stos
ja
mov
xchg
loop
sub
into
adc
jge
push
cli
lret
insl
out
jl
loopne
cmpsl
test
or
inc
xlat
inc
xor
cmp
repnz
and
movsl
cltd
imul
jl
sti
nop
inc
inc
or
dec
stc
negl
clc
outsl
pop
adc
push
and
mov
scas
les
add
and
stos
fstpl
addr16
stos
xor
lods
and
aaa
sbb
repnz
and
cmpsl
aas
cmp
iret
call
sub
xchg
jmp
mov
push
leave
dec
mov
mov
pop
and
in
xchg
mov
insl
rorl
lahf
adc
and
cmp
mov
jbe
dec
test
outsl
stos
int3
adc
dec
movhps
cli
and
or
xchg
pop
push
hlt
push
pop
adc
and
into
pushf
ja
cmpsl
xchg
scas
repnz
fnsave
lods
mov
xor
cld
sti
out
add
enter
hlt
or
lret
jo
push
inc
jbe
mov
push
pop
mov
test
mov
stos
sbb
jp
mov
and
out
xor
pop
leave
movsb
cmp
divps
jl
sub
rol
movsl
stc
xor
adc
out
or
cmp
movsb
jge
adc
mov
xchg
call
mov
sub
inc
sub
loopne
nop
test
xchg
icebp
test
push
imull
std
mov
insb
push
dec
fwait
add
jl
negb
out
and
jmp
popa
rorl
pusha
jge
mov
mov
pushf
xor
lret
mov
adc
add
test
movsl
jecxz
movsb
shrb
xor
jmp
fcomps
jae
add
es
and
fisubs
enter
ret
test
cmpb
sahf
dec
adc
cwtl
popf
leave
mov
aam
ret
xchg
movsb
mov
sub
or
mov
das
add
mov
fistl
movsb
and
mov
cmp
lea
aaa
cli
test
mov
out
mov
jle
fs
or
mov
mov
in
jmp
push
jge
scas
pop
fsubp
adc
stc
push
iret
inc
in
dec
icebp
lcall
mov
arpl
adc
push
fs
and
xlat
xchg
js
cmp
js
andl
ja
js
xchg
addb
enter
nop
add
xor
popf
xchg
popa
loop
jno
imul
in
inc
loop
mov
mov
test
mov
mov
push
dec
mov
jle
pop
jecxz
sub
adc
pushf
out
lods
jp
pop
cmp
sti
dec
ss
sbb
mov
push
mov
lret
push
stc
fdivrs
mov
pop
testl
lret
xor
push
stos
rolb
add
dec
lret
inc
push
popa
push
cmp
outsb
dec
mov
nop
movsb
cmpsb
xor
jnp
jae
loop
jecxz
sbb
sbb
repnz
ja
popf
cmp
sbb
xchg
push
sub
cmp
popa
in
aaa
ret
je
push
dec
add
adc
hlt
sar
dec
or
cmp
lods
ljmp
stc
and
sahf
clc
rcrb
pop
inc
xchg
ja
jmp
sbb
push
push
loope
jb
mov
mov
dec
sbb
inc
mov
or
ret
out
clc
pop
cmpsl
or
lret
enter
sub
sub
jg
fsub
jp
rcrb
into
bound
cmp
das
jnp
lahf
in
pop
xchg
jns
sub
push
xchg
fidivl
and
shrb
add
into
imul
iret
xor
loop
dec
jns
mov
mov
sbb
inc
sub
fs
les
jp
xchg
fcmovnb
faddl
dec
push
out
jp
sbb
lea
into
pop
pop
repnz
inc
dec
mov
test
push
sub
outsb
push
or
jo
pop
into
int3
sbb
scas
mov
or
add
stc
dec
gs
jnp
scas
ds
add
jo
das
movsb
jne
hlt
test
and
jmp
in
add
and
sbb
sub
pop
in
lcall
test
adc
arpl
and
dec
call
mov
jns
xchg
jne
cmpsl
dec
fstpl
test
pop
push
gs
fsubrl
push
mov
cld
outsl
sub
sub
adc
dec
mov
dec
bound
inc
cmp
scas
pop
add
push
push
es
sti
js
jns
aad
or
mov
divl
or
lret
mov
sub
jne
xchg
xchg
fnstcw
push
and
or
fistpl
cwtl
test
xchg
push
data16
jne
xlat
adcl
inc
add
pop
lods
fldt
imul
mov
xchg
sbb
popf
ss
pop
imul
sbb
ja
dec
test
std
clc
aad
sahf
mov
ffreep
xor
xor
dec
or
jge
les
jno
stos
lock
push
stos
out
je
icebp
mov
add
popf
int3
ffree
jg
int
in
cmp
sub
xlat
mov
inc
shll
stos
push
jmp
notb
adc
std
push
mov
aad
adc
rol
pushf
lret
xchg
xchg
cld
xchg
jmp
pusha
ljmp
test
cs
cmp
pop
cmp
pushf
push
shlb
lods
sub
or
jne
enter
sub
push
cli
add
jmp
rclb
xchg
mov
cmp
lret
or
mov
xor
pop
sub
xor
xchg
adc
push
cmp
push
in
and
push
push
push
push
push
gs
mov
push
je
cmp
xor
data16
popa
fstl
dec
in
int3
rorb
in
or
or
in
add
adc
rcr
sbb
add
pop
cmpsl
add
rolb
or
or
gs
repz
dec
sub
cmp
sbb
push
enter
push
fnstcw
or
es
add
sub
aas
mov
or
and
push
add
sub
rclb
movsb
call
movsb
jne
int
stos
cmp
cmpsl
push
jae
push
adc
mov
test
or
mov
xchg
fisttpl
mov
jmp
push
mov
aam
fcoms
push
sahf
fisubl
jge
ret
cmpsb
mov
iret
fwait
stos
fsts
mov
push
movsl
add
outsl
cltd
pop
mov
popf
loopne
add
jp
clc
sbb
dec
pop
mov
jno
jmp
aam
or
popa
repnz
cli
xchg
pop
pop
arpl
insb
dec
sarl
imul
int3
outsl
repz
jp
loope
xchg
inc
scas
adc
sub
jae
lods
jp
jno
movb
or
jbe
clc
push
out
mov
cmpsb
subb
scas
mull
outsl
imulb
pop
pop
jnp
loope
in
or
mov
mov
jge
xchg
leave
add
lret
or
push
dec
pop
pop
mov
xor
pop
sub
adc
jbe
icebp
push
sub
xchg
mov
out
arpl
sub
inc
fists
xor
adc
adc
shrb
int3
aam
test
dec
pushl
stos
mov
mov
sti
xchg
int
sub
imul
xor
push
mov
ficoml
mov
adc
push
dec
popf
pop
lods
and
and
adc
cmp
inc
ss
mov
pop
and
daa
popa
sar
dec
daa
and
pop
icebp
pop
arpl
cmp
rcrl
movsl
icebp
mov
jl
ret
or
loopne
xchg
sub
rclb
xor
cmpsb
jecxz
mov
add
scas
push
into
and
stos
xchg
sub
mov
mov
pushf
mov
lods
aam
push
or
loope
stos
pushf
mov
scas
in
adc
xchg
add
lret
adc
pop
in
je
pop
add
dec
imulb
and
ret
inc
push
movsb
inc
cmp
pop
pushf
push
pop
test
test
mov
sub
stos
xchg
inc
std
ljmp
xor
and
sbb
xchg
orb
cmpsl
mov
scas
inc
movsb
add
enter
iret
push
mov
loop
inc
inc
je
jo
insl
cli
fnstcw
out
xor
inc
mov
xchg
adc
out
add
push
sti
add
jl
lea
dec
negl
mov
aam
push
or
std
jl
add
pop
insl
sbb
imulb
cwtl
popf
in
cmpsl
rcrl
jbe
aaa
out
cmp
jb
scas
pushf
jbe
xor
das
dec
daa
mov
fs
in
sub
jp
add
popf
ss
or
pop
adc
repnz
jne
dec
adc
cli
jmp
or
jecxz
or
or
into
jl
mov
test
mov
and
dec
ss
pop
pushf
shll
pop
cmpsb
or
bound
pop
jl
aad
adc
inc
jp
cmp
jmp
inc
mov
sub
cs
int3
clc
mov
ja
pop
es
mov
mov
pushl
or
repz
aas
andb
out
shr
mov
or
inc
jbe
add
outsl
cmpsb
pop
lods
imul
push
fnstenv
or
sub
das
push
sbb
sbb
rol
xor
orl
out
inc
push
repz
cmpsb
xchg
icebp
or
in
lds
nop
insl
push
mov
push
or
pop
out
repz
xchg
stos
les
and
lods
ljmp
std
add
dec
mov
notb
aaa
push
sbb
dec
mov
ficoms
or
sbb
push
pop
sbbb
insb
pusha
insb
aas
mov
dec
pusha
sub
or
fsubs
ret
adc
in
jb
lret
mov
mov
xchg
stos
testl
fimuls
loop
inc
sahf
or
mov
daa
inc
push
iret
insb
js
jnp
mov
xor
cmp
out
stos
inc
push
xchg
call
inc
js
in
and
inc
stos
cmpsl
jns
xor
jnp
shl
mov
add
push
fdivrs
jns
lods
les
test
push
jns
imul
aam
ss
scas
and
and
insb
and
inc
aam
bt
shrb
cmpsb
mov
push
lcall
aam
mov
ret
in
sbb
sub
pop
aas
xor
cltd
test
popa
sub
pop
fisubs
sub
cmpsb
bound
inc
xchg
inc
fimuls
filds
and
fs
inc
es
xor
xor
xlat
add
push
jbe
cltd
adc
and
out
pop
test
mov
pop
lcall
mov
loop
aaa
add
jg
into
test
insb
sub
mov
pop
shr
movsl
stos
adc
inc
and
sub
lods
mov
movsl
fnstcw
loopne
testl
js
dec
mov
xchg
call
test
out
mov
or
inc
xchg
or
mov
push
rcll
mov
cmp
flds
out
scas
mov
sub
sti
mov
stos
mov
std
or
ljmp
ret
xchg
sub
jb
sub
bound
and
and
xor
rcrl
mov
imul
lret
dec
pop
outsb
sbb
and
mov
push
mov
mov
lret
inc
mov
mov
int3
and
sub
mov
and
cmp
lahf
sbb
rcrl
mov
lods
push
mov
dec
push
mov
ljmp
mov
in
inc
into
xchg
cld
sti
loopne
and
mov
xlat
pop
or
inc
fs
sbb
je
data16
leave
insb
stos
push
dec
nop
lcall
orl
fs
loop
xor
cltd
aad
nop
inc
leave
imul
or
mov
data16
cld
cld
push
aad
rcrb
and
cmp
incb
fs
dec
scas
cmpsb
cmp
cmp
sub
sub
mov
nop
hlt
dec
xchg
aam
enter
inc
aas
push
cmpsl
push
mov
mov
testl
xorb
sub
dec
mov
push
jne
das
mov
jp
jns
mov
mull
cs
cmp
fisubrs
sbb
add
inc
sbb
popa
dec
cld
shr
xchg
pop
or
pop
rcrl
stos
sahf
in
jb
in
int3
adc
xchg
mov
aad
mov
jmp
stos
std
lods
xor
xchg
les
cltd
hlt
lds
dec
pop
xor
push
bound
push
jnp
testb
add
push
xlat
mov
mov
dec
dec
jb
mov
mov
sbbl
cli
addr16
loopne
jnp
repnz
jns
out
bound
mov
xchg
lret
ret
outsl
push
test
lcall
dec
mov
mov
jg
out
mov
std
out
and
mov
sbb
faddp
ljmp
jl
dec
mov
stc
pop
call
rcll
mov
mov
stc
sub
shll
xor
pop
js,pt
mov
insl
push
out
jl
pop
in
add
sti
lret
cmp
movsl
push
jge
or
mov
pop
adc
sbb
adc
cld
push
ffreep
loop
sahf
stos
jge
js
jecxz
clc
xlat
mov
jbe
mov
jl
push
mov
pusha
aam
inc
ret
push
ss
fisubrl
push
jb
lcall
mov
mov
adc
ss
dec
dec
in
pop
lock
test
and
cli
inc
dec
sbb
inc
and
ds
xchg
cs
mov
inc
push
xchg
add
mov
dec
adc
loopne
sti
mov
pusha
xor
and
mov
fmul
cmpsl
sti
push
hlt
sub
mov
xor
sub
cmp
pop
lock
cmp
sbb
sbb
icebp
scas
push
iret
push
cltd
xor
test
adc
xchg
mov
lahf
call
sti
xchg
in
mov
lods
aad
lods
mov
dec
in
icebp
sub
pop
stc
sub
mov
call
sub
cli
sub
adc
cmp
pusha
fidivl
cmpb
jb
sub
sub
inc
push
repnz
adc
pop
sbb
repz
pop
mulb
iret
inc
or
xor
leave
add
mov
fdivp
cmp
wrmsr
add
or
inc
popl
push
fadd
pop
add
pop
arpl
fcmovnbe
or
fisubs
sbb
xor
dec
and
inc
sbb
das
lea
fmull
and
cmp
int3
loope
addl
cmp
shll
int
mov
or
sub
xor
aaa
enter
and
outsb
mov
movsl
data16
fisttpll
push
fs
sbb
popa
xchg
mov
scas
pop
or
jne
add
cmp
popa
adc
das
fcoml
rolb
enter
push
enter
and
jmp
ljmp
ss
test
jno
mov
jnp
sub
sbb
clc
call
mov
not
jp
out
pop
cli
cwtl
stc
push
dec
in
pop
aas
out
jo
mov
vaddps
mov
repz
or
mov
cmc
mov
ja
push
cmp
aad
jb
fildll
sti
fnstenv
scas
clc
and
jle
jecxz
mov
xchg
and
hlt
push
jg
icebp
fildll
add
pop
and
inc
pop
daa
xor
scas
cmp
enter
scas
sahf
push
mov
les
mov
test
cwtl
daa
cmp
or
outsb
lret
data16
out
ret
and
jne
pop
or
fwait
ljmp
inc
mov
jbe
mov
dec
or
and
jge
stos
loop
loopne
dec
jp
stc
push
and
fs
mov
cmpsb
pop
push
or
sub
and
or
jecxz
and
fcmovnbe
mov
icebp
enter
mov
push
aad
cvtdq2ps
mov
sbb
jl
int
mov
scas
icebp
dec
xor
xor
jle
xchg
add
addb
dec
es
push
xor
ffreep
lock
pop
mov
clc
sub
dec
leave
sbb
or
pop
push
xchg
pop
cli
popa
faddl
lods
sub
fists
shll
jne
scas
or
mov
inc
sub
and
lea
fadd
ret
mov
adc
in
andb
adcl
int
leave
enter
sub
idivl
js
xor
lea
jp
js
ja
fdivrl
out
test
repz
lcall
ret
leave
mov
mov
pop
xchg
outsl
cs
addr16
push
or
int3
xor
fistpll
jae
iret
and
xchg
mulb
out
jno
push
jmp
stos
test
fcmovnb
rorb
jns
mov
cmovae
das
jg
add
xor
imul
push
aas
in
xor
pop
inc
mov
scas
enter
das
fs
adc
daa
xor
pop
and
or
js
int
daa
sub
add
ficomps
imul
out
pop
mov
daa
repnz
leave
pop
cmpsb
adc
loope
cmp
mov
fidivl
dec
jp
rorb
fwait
stos
sub
sbb
push
sahf
xlat
cwtl
testl
data16
mov
adc
xchg
iret
and
pop
sub
test
mov
push
fdivl
loop
cmpsb
dec
aas
sarl
or
sbb
in
dec
pop
cmpsl
push
push
adc
mov
into
jg
ret
mov
add
push
lea
popf
popf
bt
mov
adc
mov
in
cltd
cmp
jle
out
xchg
decl
jns
testb
push
mov
dec
cld
and
mov
mov
push
mov
adc
ljmp
mov
and
aad
jle
sbb
sub
inc
dec
mov
pop
push
cwtl
cmp
mov
iret
in
lock
mov
fisttps
cltd
jle
inc
icebp
pop
in
mov
pop
mov
aad
xchg
popf
xchg
mov
nop
cli
or
test
cmp
sbb
adc
push
fdivrl
pop
xchg
push
bound
aam
sub
jno
jo
data16
pop
test
cltd
mov
jl
mov
mov
add
push
icebp
jae
adc
dec
lods
scas
sbb
mov
xchg
dec
frstor
jo
loope
xchg
out
mov
in
fimull
loop
movsb
jmp
in
push
or
jp
pop
call
lods
dec
or
mov
ret
push
rcll
pop
je
cmp
xchg
sbb
inc
push
dec
test
repz
pop
jo
sbb
lcall
lods
bound
fdivrp
js
push
iret
ret
dec
add
push
mov
sarb
in
sahf
sub
ja
inc
or
and
sbb
and
sbb
push
add
fimull
sub
rcrb
dec
and
les
inc
jge
in
inc
cwtl
gs
pop
lea
ljmp
in
arpl
push
mov
mov
mov
sbb
loope
jecxz
adc
lret
aad
nop
pop
jecxz
adc
ljmp
std
jmp
rolb
adc
fnstsw
sbb
adc
out
xlat
sub
enter
cmp
fs
mov
push
xchg
ret
fwait
add
cmpsl
and
mov
sbb
lcall
testl
cld
stos
fs
lcall
jg
pop
xchg
push
test
adc
push
xor
and
or
sub
xchg
xchg
pop
cmp
xchg
mov
mov
test
cli
push
nop
and
jno
mov
fwait
dec
icebp
xchg
jl
loopne
and
xchg
insb
ret
jge
inc
clc
mov
xor
add
out
pop
mov
cltd
and
lsl
push
insb
xchg
ljmp
and
cmpsl
js
insb
fisubl
popf
dec
dec
and
movb
fsts
xor
jae
jmp
ss
jg
or
jb
sarl
popa
adc
ds
push
mov
push
push
push
int
push
shrl
adc
test
xchg
rorl
hlt
xchg
adc
mov
push
sbb
and
push
gs
dec
ror
dec
inc
inc
pop
sbb
rcll
mov
sbbb
cs
je
xlat
push
mov
mov
lret
xor
xchg
insl
call
les
aaa
and
cmc
xor
rorl
push
dec
and
loop
fistl
pop
in
mov
popf
xchg
mov
push
loopne
adc
pop
aam
inc
add
out
fisubl
lret
sahf
mov
test
and
jl
enter
les
sub
mov
cmp
jne
mov
sti
mov
cmc
in
in
aas
mov
or
test
pop
add
mov
aam
lret
addr16
mov
push
ds
aad
push
test
notb
aam
pop
mov
fisubrl
stos
cmp
push
jae
mov
pop
mov
push
pop
data16
xchg
push
ljmp
cmc
out
fisttpl
push
pop
xchg
jns
or
sub
sti
out
bound
sbb
push
scas
das
dec
xchg
jns
test
push
jg
sub
xchg
jae
stos
sbb
je
rorl
sub
mov
cwtl
repz
adc
jle
sbb
and
push
pop
subb
or
shrb
scas
jno
imul
cltd
iret
jle
sub
push
push
push
mov
lods
jo
std
sbb
cmp
jecxz
and
shrl
add
mov
cli
sbbb
in
movsl
add
rolb
mov
ja
fadds
dec
fiadds
pop
mov
sub
bswap
mov
pop
pop
xchg
mov
mov
dec
sub
cmp
adc
test
orb
std
and
ficoms
cltd
sbb
adc
ja
outsl
pop
adc
jae
mov
aad
in
lods
adc
test
in
ret
rolb
xor
out
iret
pusha
ret
xor
cld
pop
mov
ja
outsb
sub
jbe
ds
and
cltd
xchg
adc
sub
dec
cmp
orl
dec
mov
push
xorb
insl
xchg
test
mov
shl
leave
imul
test
jecxz
adc
xlat
aas
stos
sbb
mov
or
in
mov
jno
mov
ja
in
sbb
jp
ficomps
mov
adc
xor
pop
lods
rorb
cwtl
enter
push
lahf
imul
inc
ljmp
fcoml
outsl
mov
out
jo
sbb
pusha
movsl
pop
leave
test
cmp
push
mov
dec
fidivs
arpl
sub
inc
arpl
lods
push
sbb
add
mov
scas
mov
loopne
out
lods
mov
sti
mov
jge
mov
mov
movsb
jne
popa
iret
add
in
std
or
push
pop
fists
enter
or
ss
clc
out
scas
ret
mov
jge
inc
movsl
lea
dec
adc
insl
andnps
sub
sbbw
bound
lcall
push
adc
subb
add
aam
push
fadds
clc
mov
push
jb
or
cli
jnp
mov
pop
jg
icebp
rorb
and
pop
mov
sub
adc
mov
in
repz
fcomip
sbb
aas
ja
dec
dec
dec
nop
aam
movsb
ljmp
cmp
and
sbb
inc
int3
enter
or
and
insl
loop
outsb
lea
or
mov
mov
jl
mov
shrb
xchg
jbe
mov
push
scas
sub
insl
dec
push
push
daa
ljmp
xlat
rcrl
ret
ss
inc
mov
rclb
push
xor
mov
pusha
fstps
pop
cmp
testl
ret
pop
gs
sub
sub
in
rcrb
andl
pushf
inc
dec
mov
sub
std
pop
or
or
lock
adc
ret
push
xchg
jbe
push
mov
xchg
js
cmp
dec
xor
stos
repnz
into
xchg
das
arpl
addr16
inc
bound
lcall
xor
push
mov
fst
outsl
aaa
cmp
xchg
adc
mov
and
mov
cmp
push
ss
insl
push
lds
pop
push
mov
cs
cmp
bound
adc
loope
lcall
add
jmp
pop
mov
cld
push
xchg
enter
and
loope
adc
push
adc
pop
or
fcmovnbe
and
or
sbb
sub
loopne
shl
js
test
and
loop
jg
insl
xor
mov
pop
mov
ja
ds
out
outsb
or
icebp
cmpl
pop
sub
jno
shll
xchg
in
test
push
cmc
dec
xchg
push
sub
mov
leave
cmp
aaa
testl
dec
cld
in
pop
inc
add
in
and
xchg
pop
movsb
ljmp
mov
or
and
mov
mov
popl
loop
xor
pop
mov
scas
or
sbb
cmp
sub
and
inc
les
std
lret
inc
and
das
adc
jbe
xlat
loope
fwait
add
pop
pop
xchg
cmp
dec
rolb
and
jb
adc
push
insb
push
enter
fsubrs
mov
inc
inc
push
je
push
jns
fdivs
aad
dec
or
mov
add
push
fwait
outsl
sub
xchg
xchg
pop
sbb
jns
cli
cmc
inc
inc
mov
cld
and
loopne
pop
mov
jl
pop
xchg
jb
int
jg
add
sbbb
adc
xchg
ljmp
xchg
mov
call
adc
pop
cmp
data16
cmp
cmpsb
mov
sbb
cmp
mov
frstor
cmp
and
sbb
lret
sub
out
fwait
jno
mov
mov
jo
push
mov
mov
pop
push
jmp
mov
cltd
sub
lcall
daa
clc
dec
divl
dec
xchg
add
or
inc
pop
fldenv
ret
push
sub
add
inc
in
fidivl
add
mov
dec
in
xlat
rorl
add
sbb
sub
test
stc
cmp
jo
cmc
in
ret
aad
fidivl
cmpsl
mov
out
adc
std
cmp
mov
ljmp
mov
jmp
repz
mov
repnz
fildl
cmpsl
push
sahf
ret
jle
dec
pop
mov
loop
sbb
sahf
daa
adc
hlt
scas
push
stos
insb
sub
adc
xor
lods
or
clc
shl
loope
ret
cmpsl
push
jl
call
sbb
hlt
cmp
mov
mov
les
inc
test
andb
xchg
jg
stos
into
rcrl
imul
lcall
add
dec
lods
fisubrl
jo
sub
mov
cmp
rcll
adc
out
cltd
fwait
push
sahf
pop
jno
ljmp
cmc
gs
pop
out
int
inc
cmp
mov
test
mov
pop
notl
jecxz
enter
fiadds
lahf
mov
out
inc
push
negl
push
xchg
fsts
mov
fbld
sub
popl
andl
fwait
ljmp
cld
mov
add
mov
out
shll
out
int3
sub
test
or
xchg
sbb
dec
add
lods
fcomp
adc
or
dec
jne
imul
pop
xchg
pushf
jbe
mov
movsb
jle
es
lcall
jnp
or
scas
push
cwtl
xchg
out
jmp
int
inc
xchg
movsb
cmp
cmp
mov
inc
mov
jne
jae
repnz
outsl
cltd
loope
cli
push
pop
and
dec
cmp
lcall
push
sbb
xchg
bound
test
movsl
xlat
cmc
sbb
dec
xor
push
call
jne
fwait
jle
pop
jbe
shll
xlat
push
fdivr
xor
out
xchg
inc
jg
repz
lea
movsb
push
pop
dec
and
mov
jecxz
sub
cmp
call
out
nop
add
mulb
ds
pop
notl
push
loope
inc
cmp
add
sbb
add
insb
push
push
or
mov
cmp
inc
xchg
mov
push
sbb
sbb
int
aaa
mov
pop
inc
jo
fcompl
test
call
mov
pop
or
push
fwait
es
mov
pop
lock
pop
insb
jnp
shr
push
sbb
lods
in
cmpsl
inc
mov
test
pop
frstor
inc
xlat
push
sub
jl
mov
lods
gs
pop
sbb
subl
xchg
pop
stos
je
repnz
fmulp
cmp
adc
mov
add
sbb
es
mov
mov
sbb
mov
jp
pop
insb
enter
dec
out
add
cmp
notb
fndisi(8087
cmp
add
ljmp
jno
lods
and
jle
fs
imul
sti
jns
repnz
mov
fnsave
cmc
icebp
or
test
fbstp
mov
and
xor
stc
mov
jg
bound
test
or
xchg
loopne
sbb
movsl
lcall
inc
mov
movsl
test
ds
test
push
sbb
pop
mov
inc
add
jbe
out
sar
sub
imul
xor
dec
nop
imul
cli
pop
mov
and
icebp
sbb
push
jns
daa
sarl
lea
fisttpll
xor
iret
jo
lods
pop
icebp
sbb
push
push
movsb
jb
push
fadds
jge
xchg
push
mov
popa
sub
popf
adc
mov
fstl
fs
outsb
xchg
stos
push
aas
lea
into
lret
jmp
out
in
pop
sbb
pop
mov
adc
jmp
sbb
int
or
sbb
cmp
jge
xchg
cs
cmp
mov
inc
inc
cvtps2pi
dec
lock
xchg
out
ja
ss
mov
lods
xor
mov
xor
and
pop
mov
jbe
mov
pop
adc
in
and
dec
ret
mov
inc
rorl
out
lds
mov
test
notl
mov
subl
or
xchg
push
movsl
lret
mov
mov
cmpsb
les
je
mov
mov
pop
adc
dec
xchg
inc
test
imul
addr16
xchg
sub
cmp
fsubs
add
push
pop
fsubrl
mov
insb
cmc
mov
xchg
inc
frstor
push
push
mov
xchg
fcomps
outsb
sub
cmp
in
call
jnp
ret
mov
dec
dec
mov
sub
cmp
enter
cmp
mov
into
jb
aaa
rcr
push
test
xchg
push
add
add
repnz
lahf
xchg
in
push
xor
jl
ficoms
int
lret
or
mov
xor
xchg
loopne
mov
mov
sub
pop
lock
adc
or
insb
mov
lcall
enter
mov
push
mov
adc
jmp
push
mov
mov
push
xchg
and
mulb
cmp
cmp
subl
pop
cwtl
push
out
inc
push
adc
or
idivl
fisttps
jae
cmc
sub
mov
mov
mov
enter
into
sub
mov
rclb
mov
insb
xchg
cmp
xor
fwait
mov
jg
sti
and
inc
add
jb
notl
pushf
pop
arpl
mov
xor
adc
imul
cli
mov
sbb
dec
jae
cmpsb
shlb
add
jns
or
dec
xor
add
fnstsw
adc
xor
scas
lea
in
sub
das
push
jb
leave
andl
fisubrs
sub
in
lea
jecxz
out
stos
sub
inc
pop
add
inc
mov
scas
out
fisttpll
addr16
imul
and
mov
dec
sub
stc
test
xchg
pop
pop
fisubs
pop
push
into
data16
lahf
xchg
mov
pop
sub
mov
mov
xorl
repz
or
aaa
jb
mov
or
jg
ja
pop
repnz
push
mov
repnz
inc
push
cmp
mulb
dec
ret
andps
sbb
ja
jnp
pop
lahf
and
iret
fidivrs
flds
clc
stos
jbe
addl
push
dec
pop
xchg
dec
sbb
imul
cli
int
xchg
jno
xchg
cmp
adc
sub
into
xor
sub
mov
in
mov
xchg
mov
xchg
arpl
lods
sub
fcomps
xor
sub
lds
das
mov
clc
dec
jle
inc
pop
sti
lret
mov
add
popf
in
sbb
and
das
clc
outsl
repz
lods
sub
xchg
pop
pop
xchg
out
adcb
test
lds
sarl
cmp
cld
inc
bound
xor
lods
xor
addl
dec
repz
icebp
iret
dec
lret
mov
push
add
add
int3
shlb
sbb
gs
sbb
lea
std
pop
sbb
cli
push
push
sub
jl
dec
inc
in
icebp
xor
lret
icebp
pop
sbb
lock
gs
sub
addb
repz
adc
stc
fisubrl
pushw
gs
insl
lds
adc
xchg
hlt
pop
push
and
mov
clc
loopne
idivb
enter
movl
test
rolb
sti
test
mov
jo
xchg
jns
out
shll
out
xor
add
mov
and
test
inc
mov
jb
xchg
les
ss
dec
mov
push
ljmp
outsb
mov
adc
push
push
adc
add
cmp
sub
leave
and
adc
addb
rclb
icebp
inc
and
cmpsl
scas
cli
repnz
jg
push
fs
pop
cmpb
push
cmp
lods
mov
cmc
push
lret
mov
fiaddl
cmp
in
jge
and
std
xchg
pop
mov
dec
test
mov
sub
sti
lcall
mov
jmp
lock
dec
test
call
jno
sti
jne
push
adc
push
mov
xchg
dec
jbe
sub
hlt
push
xlat
inc
aam
pop
lods
dec
js
xor
cmpb
lods
jg
out
or
or
jl,pn
mov
sub
jns
mov
loopne
in
xchg
mov
nop
jbe
xchg
xchg
mov
out
lods
stos
push
cmp
in
add
sub
jecxz
in
test
repnz
stos
xchg
inc
pop
xor
jg
testl
sbb
dec
arpl
into
or
mov
imul
in
js
lcall
aas
cld
mov
xchg
mov
jnp
jns
sub
lcall
push
sti
mov
jl
mov
mov
icebp
cmc
inc
fcmovnb
cmpsb
mov
add
faddl
dec
pop
cmp
jne
mov
imulb
mov
cltd
push
rorl
xlat
cmpb
bound
and
inc
adc
ja
fs
inc
cmp
xorl
fstpt
xchg
in
rcl
andb
sub
jle
bound
fadd
fdivr
ljmp
inc
xchg
jo
add
in
xchg
pop
dec
fistpl
stc
add
jg
cmp
mov
adc
dec
es
cwtl
std
cmpsb
xchg
xchg
push
iret
hlt
mov
stos
jno
jmp
dec
and
test
arpl
or
and
sub
sbb
lret
test
cli
rcl
push
add
cmp
outsl
sub
push
lock
shll
push
lea
jns
and
mov
mov
cmp
aam
mov
pop
xor
imul
xor
cmp
fs
rol
sbb
pop
jbe
test
out
push
andl
push
and
movsl
xor
lods
lea
movsb
jnp
fidivrl
or
jge
outsb
int3
or
pop
rolb
repz
repnz
addr16
ss
cmpsl
nop
in
or
dec
add
mov
cmp
test
sub
lret
out
test
lods
mov
inc
pop
sub
mov
and
dec
inc
loopne
add
cs
pop
jge
push
xlat
fnstsw
xor
or
scas
pop
xchg
xor
jmp
sbb
ljmp
ljmp
ja
cmpsl
in
into
add
bnd
dec
lcall
mov
mov
xchg
add
out
xchg
cld
sbb
or
jp
lea
adc
mov
mov
popa
add
mov
adc
and
in
sbb
mov
push
lret
mov
lcall
lea
cwtl
jno
vcvtsd2ss
push
jbe
pop
push
leave
out
aaa
adc
sub
out
mov
outsl
cmpsb
repz
sete
jbe
call
into
mov
fwait
loop
loopne
dec
inc
ljmp
jmp
xor
scas
or
add
cmc
fcoml
stos
dec
das
filds
cs
sub
add
in
out
mov
in
xchg
sbb
jmp
mov
movsl
in
push
pop
lds
xchg
xchg
xchg
jecxz
enter
mov
inc
push
scas
sub
cmpsl
cli
pop
mov
jl
leave
sarb
inc
add
mov
pop
mov
roll
mov
test
popf
sbb
mov
test
cmp
popf
jbe
aad
test
xchg
lock
mov
stos
push
push
sbb
sbb
in
leave
idivb
cmp
cwtl
jo
jl
cmp
jmp
xchg
mov
add
stc
inc
imul
test
adc
or
sbb
inc
jmp
insl
aad
and
sahf
mov
pop
fiaddl
push
loop
stos
inc
mov
mov
or
add
inc
call
pop
movsl
movsl
pop
inc
push
ss
mov
push
mov
mov
out
fstpl
jo
iret
ss
notl
pushf
dec
jmp
push
mov
out
loop
inc
jnp
cld
test
in
cmpsb
shlb
add
nop
jecxz
cmp
sbb
ja
sub
lahf
jne
cmpsb
out
mov
pop
dec
arpl
nop
pop
rcrl
lret
test
ss
mov
mov
mov
jle
adc
dec
add
cld
xchg
call
adc
jbe
add
jecxz
mov
sti
sbb
inc
mov
sti
and
xchg
jmp
mov
stos
les
dec
ljmp
enter
psadbw
fcmovu
cmp
imul
push
mov
shl
mov
and
add
mov
dec
leave
cmp
out
outsb
or
outsl
adc
or
test
jae
ljmp
jmp
jl
mov
jecxz
es
fdiv
inc
add
hlt
or
dec
xchg
loop
xchg
cmp
xor
and
fsubp
jle
stc
std
cltd
jo
in
xchg
fucom
xchg
push
mov
cmpb
and
xor
mov
mov
dec
out
gs
in
sub
cmp
cmpsb
bswap
pop
mull
jle
dec
fldcw
movsb
in
pop
fmuls
mov
jp
lret
outsb
cmp
ja,pt
dec
sti
push
ja
inc
cmc
pop
test
ss
cmp
xchg
dec
js
mov
ja
enter
mov
adc
mov
adcb
jne
std
movsb
mov
lock
in
sbb
xchg
daa
xor
ret
lcall
and
cs
push
adc
ljmp
and
mov
cltd
test
fmuls
jmp
mov
mov
pop
lahf
mov
xchg
daa
call
ja
dec
pusha
cltd
out
inc
data16
ret
xor
outsl
sub
loope
in
adc
add
pop
jecxz
loop
mov
fidivl
sti
mov
stc
push
push
push
stos
adc
inc
imull
into
cmp
mov
push
in
and
int3
icebp
shr
sbb
mov
jmp
fnstenv
fidivl
sub
sar
and
mov
jae
mov
stos
lods
pop
fdivrs
test
cltd
push
xor
push
stos
mov
jl
cmpsl
daa
push
sbb
lea
test
jle
or
or
mov
xchg
dec
xor
push
lods
jbe
mov
lret
and
add
rolb
jle
push
cli
xchg
es
lahf
movsl
dec
test
xor
cmpb
lret
int
cwtl
xchg
inc
mov
and
pushf
stc
sub
lods
loopne,pt
in
inc
xchg
fwait
mov
jmp
mov
fnsave
pop
sarl
xchg
pop
lahf
and
gs
movsb
push
and
andl
jne
xchg
inc
xchg
test
add
lcall
je
push
or
mov
jo
mov
ss
shl
cmpsb
adc
inc
cmp
decb
jne
pop
xchg
imul
hlt
lret
dec
aas
cld
jns
cmp
inc
pusha
mov
aad
outsl
push
and
xchg
pop
lods
adc
iret
outsb
or
dec
jns
cmc
pop
dec
jge
lret
pushl
xchg
into
mov
sub
addr16
and
cmp
stos
subl
into
dec
add
inc
mov
enter
adc
sub
orb
shlb
jb
pushf
cmp
in
sbb
xor
fisubs
jp
xchg
sub
mov
cmpsl
les
adc
js
outsb
popf
xchg
mov
mov
fsts
pop
int
cmpsb
sub
lods
insl
mov
mov
cmpsb
imul
pop
mov
xchg
aad
push
add
xchg
xchg
mov
push
idivb
push
lcall
scas
or
jecxz
sub
insb
inc
inc
mov
pop
and
fistps
inc
inc
call
andb
push
popa
cld
fisubl
dec
pop
mov
jge
mov
mov
cmp
adc
sbb
xor
popf
cs
sbb
out
dec
adc
jle
outsl
insb
pop
sbb
pop
xlat
add
out
jg
mov
test
jo
or
ror
scas
test
jae
lea
nop
mov
outsb
and
sbb
inc
or
jmp
lahf
fimuls
pop
and
ljmp
mov
adc
insb
lods
les
xchg
inc
leave
jo
sub
push
jbe
out
inc
jnp
jp
outsb
mov
pop
inc
jno
cmp
fistps
pop
mov
call
or
xchg
adc
jl
insl
cmp
sub
repz
push
mov
pushl
push
shl
jmp
js
bound
cmp
sahf
mov
aas
call
sub
fcomps
outsl
mov
add
test
add
cs
aaa
inc
add
lds
enter
inc
sub
outsl
movsl
shll
pop
into
es
push
aaa
adcl
xorb
fsubrl
or
xor
xor
or
adc
pusha
jo
fwait
mov
push
lods
inc
jbe
shl
repz
arpl
sub
out
pusha
loop
cld
cmpsl
xor
fdivrp
jnp
cmp
xchg
ljmp
fcoms
or
jle
imul
sarl
fldenv
mov
insl
stos
repnz
and
mov
in
shlb
cmp
sub
mov
adc
or
pop
mov
add
subl
rclb
aas
jl
jmp
movsb
aad
mov
loopne
mov
jo
incb
lahf
mov
inc
das
xchg
shlb
insl
jno
int3
xchg
mov
lret
mov
adc
xchg
cmpsb
pop
stc
lods
aad
js
xor
loop
rolb
addl
mov
push
sbb
jbe
jmp
mov
and
add
movsl
lret
sbbl
mov
imul
lods
pop
jns
xchg
jmp
jo
push
push
jmp
mov
scas
pushf
rclb
cmc
jle
sub
cmp
sarl
mov
mov
jp
popf
mov
lahf
loope
inc
cmp
xchg
fstl
orb
cwtl
lret
cmp
inc
lods
jl
cmp
jbe
sbb
mov
jmp
cli
fisttpll
stos
test
mov
loopne
jmp
rcr
jbe
jecxz
ds
shlb
lcall
adc
mov
add
and
push
and
in
xchg
scas
std
shlb
mov
lret
mov
sti
mov
fisubs
mov
push
cmp
pop
ja
cmpsl
jp
int3
push
push
in
xor
ret
dec
test
out
outsb
push
jbe
lock
aas
sub
mov
leave
jecxz
lods
cltd
add
ss
or
repnz
sbb
jl
mov
addr16
std
ror
cmp
sub
imul
out
fidivl
popf
hlt
jecxz
xchg
pushf
mov
dec
sarb
rcll
and
pop
pop
mov
push
push
xchg
mov
lcall
sub
jecxz
pop
cwtl
pushf
stos
sbb
mov
mov
add
in
gs
mov
push
insb
mov
xchg
pop
int3
dec
jb
push
mov
shll
test
dec
imul
pop
test
pop
inc
sub
loope
adc
cmp
inc
sti
jae
rclb
lea
dec
cmpsb
lret
adc
mov
sbb
ret
ret
sub
and
pop
xchg
mov
loopne
mov
adc
fs
insl
xchg
push
add
fbld
and
adc
jb
mov
sub
pop
cmpsl
sahf
mov
pop
pushf
mull
xlat
or
ret
jbe
xchg
sub
add
mov
loope
test
push
sub
loopne
and
inc
xor
mov
push
hlt
out
dec
jns
push
mov
clc
inc
sbb
cmp
cmpsb
jae
cmc
scas
inc
push
cmp
dec
xchg
fadd
adc
sbb
cmp
push
repnz
out
insl
mov
push
lods
xor
sbb
xchg
sub
sbb
mov
cmp
int3
sub
adc
les
rcr
xchg
repnz
jb
mov
lcall
dec
sub
add
mov
ret
cmp
jg
stc
shll
fs
lods
aam
daa
adc
pop
or
push
pop
inc
sqrtps
js
and
sub
xor
mov
xchg
add
jge
xlat
push
push
pop
mov
arpl
inc
jecxz
or
push
imul
mov
mov
xor
daa
xchg
dec
popa
icebp
sbb
xlat
jo
outsl
rcrb
lea
sub
push
cmp
aam
sub
inc
shl
ljmp
out
into
out
sbbl
inc
mov
int
adc
pushw
pop
xchg
sub
adc
js
hlt
punpcklbw
mov
cmp
push
inc
lcall
cmp
mov
insl
add
rcr
push
xor
pop
pop
mov
les
add
jp
bound
mov
inc
xchg
sub
xchg
mov
jle
push
decb
adc
insb
ds
ja
out
arpl
inc
repnz
cmpsb
jne
xlat
das
xlat
xor
dec
call
xchg
or
insb
inc
decb
or
sarl
rclb
into
fucom
addl
repz
inc
clc
fdivrl
lret
mov
mov
fimull
inc
cmc
test
clc
jecxz
les
or
scas
push
es
jnp
in
and
cltd
out
jl
adc
fmul
scas
mov
cmp
lret
push
sahf
cmpsb
mov
das
insl
out
notb
push
and
mov
sbb
push
pop
add
scas
jge
ja
pushf
jno
mov
std
cmpsb
or
hlt
mov
inc
push
xlat
jb
mov
outsb
repnz
loope
dec
or
and
das
in
movhps
sbb
cmp
outsl
mov
repz
ficomps
xchg
sub
ret
insb
dec
lret
cltd
shlb
sub
sahf
nop
clc
push
ljmp
sub
test
stc
and
test
mov
sbb
rcrl
dec
mov
mov
push
fsubr
lahf
fimull
xchg
shl
jae
sbbb
enter
bound
test
mov
iret
pop
mov
xor
sbb
mov
enter
loopne
xor
dec
sahf
fnsave
xor
push
repnz
xchg
mov
sub
jp
fwait
xchg
sub
xor
jg
mov
fstl
stos
jnp
les
or
cmp
mov
push
or
in
jge
or
add
add
mov
aad
insl
movsl
add
mov
into
cld
dec
and
dec
repnz
xor
cwtl
out
dec
mov
divl
sub
and
xor
lret
pop
notl
test
cli
fsubl
shll
daa
jmp
or
repnz
and
sub
out
aad
mov
sbb
mov
or
ret
and
xchg
mov
lock
mov
push
jne
outsl
dec
ret
cwtl
pop
xchg
stos
pop
push
mov
stc
mov
divl
mov
inc
in
push
inc
jno
data16
xor
jns
js
repz
popa
or
mov
sbb
mov
mov
dec
jbe
flds
inc
icebp
or
aam
int3
or
jp
xor
mov
mov
cwtl
stc
and
lock
or
jecxz
inc
stc
and
imul
lret
sbb
rcll
pop
and
mov
adcb
pop
mov
idivl
add
or
or
es
mov
mov
je
pusha
popf
pop
cmp
loopne
mov
mov
stc
fcomps
lock
jg
dec
sahf
repz
aam
pop
cld
sbb
jno
or
loopne
mov
into
iret
mov
aam
or
cmpsl
jl
add
lahf
adc
arpl
cmp
sbb
xor
rcr
add
lret
xchg
cmp
sbb
mov
sbb
pop
in
pop
push
or
test
push
arpl
cltd
mov
orb
mov
jne
sub
xor
mov
pop
or
rcll
test
jle
iret
jns
ret
loop
pop
sbbl
and
int
cmp
adc
fs
sbb
cmpsl
xchg
popa
add
movsl
insl
negb
mov
imul
mov
sub
or
mov
add
mov
insb
mov
and
movsb
outsl
push
and
ret
or
popf
leave
jno
adc
xchg
add
pop
movb
cmpsl
std
push
leave
lods
leave
frstor
mov
dec
jmp
in
out
jnp
rclb
cwtl
roll
push
dec
push
je
push
clc
iret
jecxz
icebp
movsb
ret
in
mov
pop
and
pop
scas
jg
leave
shl
pop
pop
add
lahf
fisttps
push
sub
mov
aad
rcrb
cmp
int3
xor
sbb
fwait
jmp
sub
fldt
cli
das
fcomps
insl
push
mov
pop
scas
mov
push
popf
fnstcw
mov
test
mov
lods
movsl
dec
inc
pop
in
mov
pushf
std
out
cli
mov
sub
push
cmp
out
fiaddl
jns
aam
repz
enter
cmpb
scas
test
jno
mov
dec
mov
mov
dec
aam
data16
sarl
aaa
xor
xlat
dec
push
aam
pushf
cmp
push
xchg
jg
cltd
mov
jl
test
or
test
lods
cs
jbe
aaa
lret
pop
adc
icebp
jg
add
dec
mov
mov
lods
out
mov
ja
adc
data16
ffree
cli
xor
lds
dec
jne
lcall
test
sbb
test
rcl
jns
into
in
aam
cmp
adc
cmp
jnp
xor
in
sarl
mov
inc
orb
out
cmp
jmp
js
or
xchg
dec
and
mov
jecxz
pop
rcll
mov
orl
sbb
pop
adc
push
shll
push
pop
andl
aad
jle
fcoml
leave
sbb
test
insl
nop
ret
enter
vmovntdq
data16
cltd
push
adc
movsl
jp
jo
jg
or
xor
scas
mov
imul
cmp
subb
mov
push
loopne
dec
cwtl
jg
mov
or
fdivs
add
sbb
sbb
jmp
jno
scas
inc
pop
fnstenv
ret
orb
push
adc
mov
sub
adc
ret
inc
fsts
pop
adc
inc
mov
fs
int
sub
flds
repnz
insb
inc
sbb
cli
clc
stc
sub
repnz
loop
and
jp
in
xor
adc
test
and
pop
cs
lret
pop
imul
and
mov
cmp
insl
mov
mov
adc
test
mov
ficoms
sub
push
out
inc
cwtl
cmp
movsl
xchg
push
fsubs
imulb
xchg
test
or
cltd
mov
jns
inc
jbe
dec
jg
xor
push
adc
aad
gs
sub
dec
faddl
pop
iret
sub
outsb
clc
jg
fisubrl
fsubr
cmp
sub
xor
or
mov
daa
f2xm1
sbb
mov
adc
ret
xor
scas
and
es
sub
pop
addb
fidivrs
cmpsl
or
mov
mov
sbb
mov
fdivl
dec
adc
movsl
icebp
movsl
ret
adc
std
test
or
jmp
push
fdivl
mov
subl
inc
cltd
add
pop
loope
adc
and
dec
and
mov
mov
fisttps
dec
adc
adc
pop
or
out
xor
call
and
jo
in
xor
testb
jne
mov
in
mov
lods
xor
inc
mov
push
aam
xor
xlat
fldenv
imul
xchg
mov
pop
rcl
in
jne
sub
push
sub
js
in
adc
fucomip
das
cwtl
inc
gs
adc
jp
aam
or
js
push
insb
cmp
fisubl
out
xor
xor
inc
cmp
push
mov
fiaddl
ja
lock
cmp
icebp
and
std
scas
bound
test
cmpsl
cmp
jmp
xchg
jle
mov
xchg
jb
lods
mov
les
and
xchg
sbb
mov
jmp
mov
xor
sahf
repnz
sbb
xchg
icebp
cmpsl
outsb
pop
cmc
sar
iret
mov
ds
xlat
divl
dec
aad
clc
or
dec
leave
clc
mov
xchg
mov
mov
xchg
stos
lods
mov
cmpsb
popa
shlb
fdivs
popf
mov
stc
cmc
mov
inc
xchg
cmp
mov
rol
pusha
add
cmp
insl
fsubr
loope
das
push
sbb
js
enter
je
push
mov
and
mov
xor
mov
inc
inc
push
mov
je
inc
pop
add
das
mov
sub
aaa
or
subb
cmpsb
fucomi
outsb
lret
fs
mov
ret
popf
loope
xchg
lahf
xor
sub
cwtl
in
push
and
ficoms
inc
xchg
repnz
leave
stos
test
in
inc
lret
icebp
stc
cmp
leave
inc
mov
xor
mov
xchg
and
dec
sbb
jge
adc
jbe
adc
in
sub
rorb
pop
mov
repz
mov
inc
outsb
push
cmp
scas
xchg
pop
sub
jo
stos
dec
or
inc
lret
rorb
jge
mov
jo
loopne
push
mov
mov
xchg
pop
jl
pop
pop
clc
aas
cmp
loope
pop
fistpll
iret
adc
test
in
mov
daa
jo
jne
mov
pop
shrb
adc
pop
pushf
xsavec
insb
daa
aam
in
sub
sbb
pop
out
fidivrl
jbe
int
stc
or
add
lret
add
pop
xchg
fwait
hlt
mov
adc
mov
dec
dec
xor
stos
in
sub
pop
testl
sahf
cmp
out
ret
lcall
lcall
inc
loop
clc
add
jne
sub
dec
js
fsts
pop
cmp
dec
mov
dec
xchg
inc
in
xlat
xchg
or
xor
icebp
lahf
or
les
shrl
call
lods
loop
or
shrl
push
inc
xorb
hlt
add
mov
jmp
stos
test
cmpb
jge
pop
adc
flds
out
nop
test
or
mov
movsl
aad
leave
fistl
sub
jne
das
call
push
mov
movsl
push
hlt
aas
xor
pop
sub
cwtl
aaa
dec
popf
dec
adc
cmp
cmc
mov
sub
aaa
xchg
push
xor
and
and
jno
xchg
adc
out
and
insb
xor
sub
mov
mov
inc
push
dec
mov
adc
out
imul
push
rcl
sub
inc
push
jl
je
mov
icebp
in
sub
cmpsb
inc
jne
mov
les
cmc
jns
nop
or
fdivrs
mov
shrb
jns
cmp
ret
lret
outsb
out
xchg
cmp
or
mov
ret
mov
xchg
sti
out
cmpb
mov
repnz
jp
leave
mov
inc
mov
push
movsl
fnstcw
lods
fstl
and
fcomps
xchg
xbegin
mov
enter
or
mov
negl
cmp
dec
add
pop
aas
imul
dec
sbb
xor
cmpsb
xchg
push
rol
cmpsl
popa
add
mov
xchg
push
mov
cmp
dec
loop
xchg
icebp
dec
pushf
jl
rcrl
mov
fcoml
icebp
add
call
in
and
pop
lret
lahf
push
insb
xchg
adc
cmp
imul
lock
sub
inc
dec
jbe
jp
mov
pop
xor
in
sarb
adc
movsb
adc
jl
pusha
push
test
out
pushf
aad
mov
pop
jae
xchg
adcb
and
jbe
push
pushf
rorb
push
adc
cmpsl
jecxz
inc
mov
xchg
hlt
rolb
test
sbbb
adc
push
jnp
iret
xor
or
push
int3
les
stc
pop
repnz
jnp
divl
inc
addb
sub
fisubs
gs
inc
js
stc
repz
scas
adc
fisubl
cmpl
lahf
nop
decl
roll
inc
in
add
adc
movsb
jb
mov
cltd
mov
mov
push
add
repnz
dec
cmp
stc
push
cwtl
push
pusha
and
dec
pop
and
cld
jmp
pop
sub
jle
out
mov
shll
fstpl
pop
dec
adc
sbb
mov
jns
ljmp
xchg
cmp
fsubrl
roll
push
jbe
and
fs
pop
das
or
and
xchg
icebp
sub
mov
adc
push
notl
imul
shll
sub
xlat
jle
mov
fwait
add
lods
dec
push
push
pop
cwtl
pop
cld
out
lret
fldl
sbb
adc
insb
cmp
sbb
push
add
fwait
mov
sbb
mov
adc
pop
adc
jmp
mov
pop
push
imul
and
roll
icebp
pop
and
mov
xchg
stos
inc
lret
push
add
inc
cli
mov
cmpsl
dec
or
jle
rcll
cmp
mov
jmp
cmp
xor
gs
dec
les
push
cmp
mov
shll
shr
inc
push
mov
aas
sbb
and
ds
xor
sub
leave
mov
cs
mov
push
jnp
push
adcl
pop
add
push
and
hlt
push
pop
and
outsb
adc
pop
rcrl
jl
add
lea
std
mov
pop
mov
fcmovb
loope
insb
out
loop
sbbl
arpl
push
icebp
push
and
xchg
inc
lret
arpl
out
sub
into
lret
and
or
add
clc
cmp
out
mov
adc
add
or
loopne
pushf
sbb
ja
xchg
mov
cmp
das
sahf
cmp
lock
jae
sub
outsb
aaa
adc
xor
stos
jmp
mov
sbb
outsl
pop
aam
push
dec
outsb
daa
insb
negl
pop
and
and
call
mov
aas
sbb
sbb
testb
add
xor
add
pop
mov
xchg
lcall
jo
out
movsl
xchg
arpl
lcall
scas
push
pop
int
xchg
stos
jae
test
out
sbb
or
daa
fsts
in
clc
rorl
or
call
adc
adc
and
in
xchg
pop
mov
and
push
popa
lahf
adc
inc
fists
clc
jge
jne
xor
aad
push
adc
push
lret
stc
jmp
xchg
fcoml
jnp
fsts
adc
adc
lods
cmp
pusha
xor
mov
ret
clc
fwait
int3
dec
rorl
jg
inc
dec
jecxz
and
sub
ret
jo
pop
lahf
imul
das
mov
ljmp
out
or
mov
fs
stos
test
xor
shlb
or
test
pop
in
pop
orl
je
rcrl
cmp
mov
hlt
mov
sub
stos
ret
or
daa
jp
mov
sbb
test
addr16
bound
push
push
scas
in
ds
sub
popf
inc
cmpsb
mov
sub
stos
ret
and
fidivl
add
xchg
xor
sti
cld
rorb
movsb
jno
int3
mov
popa
loopne
lock
stos
lahf
mov
sbb
dec
shll
add
int3
bound
cmp
aaa
jg
imul
dec
xchg
fldenv
xchg
push
mov
lahf
mov
js
pop
imul
or
jmp
or
cmpl
xchg
mov
scas
clc
shll
lods
stos
push
sti
es
jecxz
jp
addl
pop
fistpll
jnp
xchg
cmp
adc
into
loop
leave
nop
dec
pusha
out
pushf
push
aam
xor
ljmp
adc
push
cld
pop
insb
mov
adc
dec
pop
inc
dec
push
dec
iret
int
test
jg
fisttpl
fs
cvtdq2ps
adc
xor
push
js
or
out
and
and
insb
aad
jno
sub
jmp
adc
lock
lcall
fstp
call
dec
js
ss
pop
jmp
out
mov
jge
shlb
mov
mov
sbb
cs
addr16
fisttpll
pushf
inc
or
dec
inc
sub
jae
mov
push
xchg
hlt
push
mov
push
cmp
in
inc
dec
and
pusha
cmpsl
test
push
push
js
daa
fildl
mov
fwait
fs
ljmp
bnd
push
pop
inc
inc
aaa
ret
push
sub
sti
jnp
xchg
pop
subb
mov
inc
and
imul
ret
pop
sub
repnz
dec
cld
cli
popf
loope
fistpl
lods
lds
ud1
xlat
mov
jo
clc
shll
imul
repnz
pop
das
clc
insl
daa
mov
movsl
mov
arpl
pop
shl
in
je
inc
xor
adc
inc
push
and
adc
ret
dec
jge
hlt
cld
dec
test
gs
aad
jnp
lds
pop
test
dec
loop
ficoms
aas
xor
es
das
mulb
pop
fldcw
xor
xor
aaa
cmpb
dec
rorl
or
aam
es
push
or
daa
mov
insb
pop
pop
sub
and
mov
into
jo
xlat
and
adc
adc
loope
movsb
outsl
ret
adc
stos
test
mov
pushf
adc
movsl
into
sub
xchg
imulb
mov
repnz
push
or
scas
xchg
pop
out
mov
adc
jmp
negl
lret
test
xor
pop
push
ljmp
divb
js
sahf
daa
sti
inc
lret
push
inc
jb
cmp
repz
pushf
std
outsb
jns
cmp
jg
mul
inc
jne
xorb
push
repz
pop
popa
ds
cmp
shll
repz
aaa
mov
ret
fstps
mov
cmp
xor
sahf
jmp
mov
cltd
lods
cld
xor
push
sub
jb
repz
adc
dec
push
loope
in
adc
leave
insb
pop
shl
into
mov
inc
out
or
cmc
xchg
inc
pop
jno
adc
js
push
lcall
cmp
and
cmp
and
xor
and
clc
imul
pushf
loope
fwait
ja
mov
loope
push
hlt
dec
jne
repnz
testb
adc
push
mov
mov
fcomi
bound
mov
adc
add
dec
dec
rcr
adc
dec
push
xor
fdiv
in
ret
sbb
xchg
or
push
dec
mov
insl
lods
jae
fisubl
movsl
in
stc
mov
inc
or
or
cmpl
xchg
iret
xor
cmc
or
lahf
imul
insl
mov
xchg
je
xchg
push
and
sbb
pusha
xor
sub
pop
insl
inc
lds
pop
jl
add
fdivs
pop
and
cmc
ds
int3
mov
cmp
mov
inc
or
mov
insb
add
jns
out
orl
pop
jo
and
cli
mov
and
push
psubq
adc
or
pop
lods
jge
imul
insl
test
bound
addr16
lahf
dec
ds
aaa
enter
scas
sahf
cmpsb
sarl
rol
imull
cmp
mov
dec
xchg
imul
movsb
sbb
mov
cmc
popa
jge
mov
jae
push
test
test
sub
negl
ljmp
sub
in
push
push
xchg
mov
pop
push
xor
dec
cmpsl
or
imul
les
mov
dec
jnp,pt
incb
sbb
xchg
repz
cli
stos
and
or
lock
mov
push
dec
push
pop
add
jno
cmc
mov
fstpl
pop
mov
jbe
xor
inc
mov
push
pop
sub
scas
pop
into
xor
bound
or
lods
jmp
sub
pop
je
aaa
push
fnsave
loopne
cmp
arpl
inc
fdivs
clc
ret
mov
sub
test
lahf
enter
mov
jl
add
lods
popa
lahf
lock
lods
mov
ja
imul
call
cli
dec
cmp
jbe
ret
loop
icebp
sbb
ror
cmp
add
jns
and
out
and
mov
repnz
mov
dec
add
cmp
outsb
or
add
push
inc
clc
test
push
ror
adcl
aaa
dec
jb
sbb
lret
aam
pop
cmp
ds
pop
mull
mov
xchg
fisttpll
mov
push
push
repnz
xor
pop
mov
xor
pop
dec
dec
addr16
ljmp
jnp
js
into
jmp
pop
int
movsl
cs
mov
jbe
fchs
popa
cmp
jnp
xchg
mov
sub
sub
orb
jge
sbb
stos
stos
inc
pop
cltd
push
sub
fidivrl
insl
cli
out
add
cmc
mov
test
push
shl
arpl
imul
pop
rorb
aam
jmp
sub
inc
jecxz
pop
scas
sbb
leave
std
dec
inc
lret
pop
fnstenv
stos
js,pn
inc
out
mov
clc
pop
pop
sti
ret
ja
shrl
inc
pop
push
lcall
jmp
xchg
mov
fidivrs
mul
adc
adcb
mov
push
sub
xchg
or
adc
subl
cmp
dec
cld
adc
inc
pusha
jg
movsb
mov
clc
cmp
scas
xorb
fnstcw
das
dec
jnp
mov
sbb
inc
sbb
ljmp
aas
iret
or
pop
popf
push
jmp
leave
xchg
add
arpl
jne
sarw
jl
andb
sub
mov
test
fwait
jo
sbb
jbe
fdivs
loope
jb
call
mov
mov
or
xor
pop
addr16
daa
nop
mov
fists
inc
fcmovnu
and
jle
sahf
mov
mov
dec
dec
xor
push
les
add
iret
repz
sarb
mov
push
mov
pusha
adc
mov
push
popl
pop
xchg
sub
fimull
pop
sub
mov
sub
dec
adc
adc
push
mov
arpl
pushf
sub
mov
repnz
xchg
fstpl
sbb
pop
push
jo
pushf
cmpb
push
ret
cmp
xchg
in
and
jne
out
jbe
xchg
daa
fwait
inc
push
jecxz
lahf
mov
add
jp
inc
jnp
sub
in
adc
ret
push
inc
lcall
xor
mov
add
rcll
sbb
outsb
subl
shlb
push
push
sub
xor
sbb
in
js
add
cmp
mov
stos
mov
mov
int3
pop
pop
ds
clc
xchg
mov
cwtl
das
arpl
lahf
repnz
rcll
pop
and
movsb
test
cltd
insb
aad
mov
scas
push
push
push
scas
shrl
dec
loope
rcll
xchg
fildl
dec
int3
mov
or
iret
pop
inc
shlb
dec
inc
std
dec
shlb
jnp
xchg
add
movsb
bound
popf
js
loop
push
mov
adc
hlt
add
sub
mov
bswap
bound
adc
push
jae
add
rorb
adc
pushf
aas
aaa
fimull
sub
out
inc
lahf
inc
mov
mov
mov
pop
lahf
sub
ja
loopne
fcomip
xor
in
lcall
dec
mov
xor
mov
adc
dec
mov
cmp
and
pop
add
lds
push
jge
orl
adc
movsb
mov
dec
push
into
xor
jo
xchg
jl
lahf
or
xchg
dec
or
es
mov
pop
cmp
mov
inc
aas
ficomps
sbb
mov
cwtl
popl
jns
imul
in
pushf
jnp
push
jbe
out
sub
imul
or
xor
daa
in
into
push
movsl
cmp
cli
or
and
in
mov
outsl
nop
sub
xor
sbb
popf
xchg
and
cld
je
mov
pop
xchg
leave
add
add
cmp
dec
adc
icebp
outsl
sub
outsb
ja
dec
pop
mov
scas
jne
add
dec
out
mov
sub
inc
loope
xchg
rorb
je
lds
inc
cwtl
xchg
unpckhps
enter
lahf
xchg
repnz
inc
cltd
xchg
je
loop
fcoml
mov
iret
push
mov
jmp
push
test
test
shlb
push
sbb
xor
xor
mov
pop
out
pusha
fidivl
movsb
pop
mov
inc
std
rorb
jb
mov
pop
mov
enter
adc
xchg
adc
ljmp
mov
mov
jecxz
pop
mov
sti
add
inc
sub
fst
xchg
imul
pop
push
shlb
std
stc
pop
sbb
aad
push
cmpsb
xor
inc
xchg
pop
cmp
popf
adc
jl
xor
enter
add
sub
lret
jg
push
adcl
mov
cs
mov
dec
ret
cmp
xchg
pop
pusha
inc
scas
mov
imul
cmp
cmp
sar
adc
test
pop
fisttpl
push
and
or
int3
push
jb
pop
push
sbb
int
mov
negb
xchg
sbb
adc
push
dec
mov
mov
push
test
pop
sbb
insl
insb
sub
stos
mov
fisttpl
mov
les
xor
cmp
jns
sub
pusha
mov
std
in
add
punpckldq
stc
xabort
add
mov
xchg
fidivrl
cmp
mov
mov
imul
fs
subb
jmp
sbbb
fidivs
pop
pop
mov
insl
cmpsb
adc
in
pop
mov
lods
or
cli
sahf
out
aaa
pop
loopne
mov
push
insl
repz
popl
mov
push
jg
ret
cli
cmp
lret
jmp
jecxz
pop
inc
xor
or
jo
cmc
or
mov
and
pop
mov
pop
mov
cli
ret
aam
fdivrl
pop
ret
add
and
cmp
out
in
pop
mov
sub
repnz
add
and
addl
and
and
push
lret
pop
repnz
loopne
je
cmp
movsl
cmp
rcl
mov
jge
int
or
mov
repnz
call
lds
cmp
fsubl
adc
mov
jg
add
sbb
push
push
movsl
mov
popf
fwait
push
das
and
lds
inc
lcall
or
jl
cltd
sbb
clc
xchg
dec
xlat
mov
fwait
or
push
jae
aas
mov
out
sub
jne
fcmovne
mov
pop
mov
dec
or
dec
mov
mov
popf
push
leave
movsl
sbb
pop
pop
clc
popa
mov
add
div
dec
fadds
fidivl
shlb
mov
loop,pt
in
lock
ret
jne
mov
lods
lock
imul
shlb
ror
aad
push
iret
daa
jno
test
shll
popa
add
clc
or
xor
fists
add
adc
pop
xor
jbe
pop
sbb
sub
pushf
push
adc
sub
call
cmp
rol
adc
stc
hlt
test
pop
jmp
iret
pusha
sti
push
mov
shll
mov
daa
lock
pop
gs
lret
pop
adc
dec
lcall
movsl
lods
xlat
ret
test
in
mov
pushf
lea
sbb
dec
sub
xchg
negb
out
pop
pushf
aas
outsl
das
pop
mov
movsl
jmp
pop
adc
addb
jbe
in
adc
xor
sti
bound
lret
cmpsl
stc
mov
sub
or
xor
nop
rcll
outsb
andb
inc
and
jb
fimull
fsubl
popf
dec
pushf
jne
push
pop
sub
fadds
fiaddl
das
xlat
sub
push
dec
clc
je
andb
dec
lock
fcoms
gs
shrb
dec
xor
mov
adc
sbb
pop
and
inc
mov
andl
pop
clc
lods
xchg
call
mov
adc
xor
sar
in
jae
test
dec
pop
push
jmp
adc
pop
das
das
nop
mov
icebp
add
sub
es
test
sub
loopne
into
add
add
fldenv
addb
xlat
xor
cltd
insb
repz
sbb
fidivs
mov
push
mov
and
xor
sub
mov
jae
gs
lds
sarb
dec
and
adc
pop
xchg
cmp
push
mov
sub
insb
sub
add
and
mov
and
add
cli
xchg
pushf
mov
sub
add
cwtl
loop
pop
mulb
nop
or
loope
imul
push
cmp
cli
cmp
xchg
gs
cmc
push
lret
jge
xor
mov
jb
and
lret
stos
jne
sbb
sub
std
cmp
pushf
lcall
fcompl
xchg
in
sbb
push
sbb
loopne
xchg
scas
add
lods
testb
add
out
out
and
push
sub
stos
cwtl
mov
cmp
sub
fnstcw
iret
jne
shld
cmp
mov
aaa
loope
fdivrl
fstps
mov
call
in
pop
stos
jl
popf
scas
movsl
push
pop
inc
sarl
fnstsw
cld
icebp
lods
stos
add
jl
pop
push
jb
or
sbbb
or
cs
inc
and
dec
movsb
jle
mov
out
insl
movsb
fcomip
sub
iret
aam
dec
cmp
cmpsl
enter
xchg
ret
sub
jg
adc
mov
clc
lock
cmp
inc
ljmp
mov
push
pop
push
les
fstp
add
sub
fwait
xor
sbb
aaa
cmpsb
mov
ret
push
movsl
ss
and
xor
mov
cmpsb
jo
and
add
into
jo
ljmp
xor
pop
data16
fucomp
add
scas
cwtl
cmp
lods
popa
pop
cmp
pusha
fldl
pop
cmpb
mov
call
repz
movb
fwait
and
sbb
lcall
pop
in
sub
ss
xchg
xlat
pusha
int
xlat
out
add
fs
mov
xchg
xchg
out
mov
int
aas
ja
mov
push
and
mov
nopl
add
in
fucomip
cmpsb
push
jmp
ret
pop
sbb
inc
out
sbb
pop
pop
insl
mov
fisttpll
xchg
push
sbb
fs
xchg
and
pop
aad
clc
rol
icebp
dec
aas
aam
aam
out
and
stos
dec
lods
mov
repz
aaa
dec
rcll
repnz
and
negb
sbb
cmp
and
and
leave
loopne
mov
les
adc
push
dec
shl
cwtl
jne
out
iret
mov
iret
test
lods
mov
lcall
inc
addr16
inc
test
mov
push
push
inc
lahf
sub
xchg
sarb
clc
or
test
and
and
das
jnp
mov
gs
pushf
cs
movsb
sahf
in
push
scas
sbb
in
mov
pop
into
fsub
mov
daa
testl
enter
fiaddl
push
xor
xor
pop
shrb
stc
cwtl
and
xchg
movsb
sbb
out
cmp
cmpsl
xchg
into
ret
lods
xor
adc
test
jge
mov
mov
push
bound
dec
movsb
mov
aaa
dec
sub
mov
sbb
cmpl
adc
test
scas
outsb
cwtl
pusha
sub
int
sti
cli
sub
scas
sahf
lcall
jno
fimuls
jp
xchg
ss
pop
add
inc
cmp
fidivl
rorl
cmp
dec
cmpsb
and
fwait
xchg
cmp
insb
dec
scas
pop
push
les
outsl
jp
pop
push
xchg
push
cmp
xchg
mov
mov
cli
ds
popf
add
xor
test
pop
and
and
movsl
sahf
jnp
cmpsb
loop
mov
in
mov
das
or
outsl
hlt
je
cmpsb
push
mov
in
push
xor
sbbb
inc
pop
mov
imul
add
adc
rcll
dec
xchg
and
aad
dec
les
je
pushf
cmpl
xchg
cli
fcoms
mov
mov
popf
popa
xchg
push
sbb
mov
inc
imul
ret
xchg
xor
sbb
xchg
push
idivb
js
sahf
mull
rorb
sub
lret
inc
jmp
shrb
inc
xchg
leavew
mov
mov
clc
push
push
inc
std
jbe
loop
mov
mov
add
stc
int3
sub
mov
xlat
rclb
jnp
jg
shlb
push
xchg
scas
lret
icebp
jecxz
test
pop
setno
push
ret
dec
fadds
mov
sub
push
mov
stos
jp
aaa
xorl
insb
adc
pushf
adc
dec
out
mov
inc
jnp
jne
mov
cltd
in
pop
inc
jae
and
adcl
adc
mov
or
scas
mov
sub
xchg
mov
data16
mov
in
and
sub
int
dec
jge
xor
out
add
mov
bound
inc
pushaw
xchg
jl
out
cld
dec
out
fstl
mov
les
xchg
sub
xchg
and
call
push
movsb
cmpsl
jecxz
in
jnp
insl
add
imul
dec
fdivl
mov
cmp
loope
dec
mov
or
xchg
push
test
jne
mov
sahf
mov
fucom
jecxz
xchg
insb
test
mov
and
push
pop
jno
or
flds
insb
insb
into
stos
xchg
mov
mov
add
sbb
sahf
pushf
inc
ret
xor
cmpb
into
xchg
push
and
jns
imul
aam
cld
sbb
loopne
add
int
and
push
data16
xor
loope
mov
mov
adc
ret
cltd
lods
lahf
xor
int3
fdiv
testl
jmp
imul
push
das
mov
das
mov
in
adc
movsb
ljmp
push
cld
sub
mov
sub
cltd
lock
xor
cltd
dec
scas
rolb
inc
test
and
out
push
outsb
xchg
inc
jge
cmpsb
mov
movsl
mov
push
pop
or
imul
mov
add
into
out
leave
sahf
aaa
and
sbb
test
mov
jg
xchg
in
sar
pop
lret
push
sub
enter
das
insb
fwait
add
mov
sub
or
clc
jecxz
xchg
sub
cmp
stos
mov
lahf
movsb
xchg
pop
push
push
xchg
loope
ss
pop
inc
out
push
fisubl
leave
sbb
mov
mov
sbb
das
cs
in
jbe
pop
sub
jne
jbe
aaa
sbb
insb
dec
xor
call
ja
push
pop
daa
insl
lea
push
pop
xor
inc
pop
lahf
fidivl
pop
xor
pushf
xchg
xor
lea
dec
adc
xor
xchg
xor
das
popa
dec
pop
imul
cli
stos
repnz
and
and
add
inc
xorb
lahf
pop
push
stos
in
imul
inc
and
pop
stos
pop
leave
inc
lea
cmpsl
imul
push
jo
enter
push
pushf
add
decl
xchg
or
jp
sbb
pop
mov
daa
xchg
cmc
rorb
subb
dec
and
cmpsb
jg
xchg
jp
imul
sub
push
int3
sbb
daa
mov
inc
cmpsl
cmp
mov
ja
xchg
ret
mov
pop
jne
insl
nop
xor
mov
pop
mov
mov
sub
pop
cmpsl
mov
imulb
sub
push
paddsw
cmpsl
dec
jne
cmp
xchg
sbb
out
add
std
sub
pop
pusha
popf
pop
movsb
inc
jns
push
mov
push
push
lcall
add
mov
fisttpll
xchg
xor
stos
mov
loope
mov
out
pop
sbb
push
pop
nop
inc
pop
clc
and
idivl
mov
lret
jo
mov
sbb
xor
push
lahf
in
call
mov
sbb
das
mov
mov
lds
xor
pop
lds
sbb
js
xchg
mov
pop
int3
inc
mov
ss
xor
and
sub
mov
jae
mov
sahf
pop
or
rcrl
arpl
and
in
mov
push
popf
pop
je
push
out
fisubrl
jbe
mov
in
dec
test
push
enter
cmp
mov
dec
fcmovnu
mov
or
jecxz
cmp
xor
shrb
push
inc
test
imul
sti
add
mov
jno
adc
push
fisubrl
imul
insl
jb
into
ss
mov
pop
push
push
ljmp
cmp
adc
sbb
mov
lds
cs
mov
push
cmp
sbb
and
dec
ss
stos
mov
sub
jl
cmc
xchg
loopne
mov
dec
out
ret
sbb
or
or
ja
cltd
inc
imul
cmp
xorb
fs
data16
cmp
cmp
and
jge
mov
sahf
xchg
int3
fs
enter
adc
sti
jge
mov
jmp
out
int3
and
fisttps
repz
movsb
dec
mov
jno
cwtl
out
mov
insb
push
push
mov
iret
mov
stos
out
loope
lock
pop
pop
ljmp
in
idivb
mov
adc
inc
cmc
lods
les
cmp
in
ljmp
fs
ret
sub
roll
out
mov
test
cmp
lahf
jmp
in
out
push
fs
jp
and
or
cmc
sub
bound
imul
fsubrl
out
jne
sbb
push
jae
orl
sbb
decl
fsubl
fnstsw
push
addr16
jg,pt
cmpsl
xor
es
shlb
loope
test
into
insl
rorb
pop
push
fidivl
and
push
mov
mov
push
insb
mov
mov
cmp
add
cmp
popa
dec
pop
and
fwait
add
clc
push
int
les
adc
popa
jle
dec
cwtl
or
xor
in
sbb
jb
mov
in
popa
cs
lods
sti
or
in
sbb
cmp
mov
pop
daa
dec
adcb
push
xor
stos
sbb
lock
insb
scas
std
test
dec
pop
pop
test
inc
es
daa
pop
push
mov
out
add
arpl
mov
mov
pop
div
jl
add
int3
xorl
inc
push
mov
xor
adc
addl
and
push
iret
stc
sbb
std
pop
cs
or
mov
iret
inc
push
add
sbbl
and
mov
fisttpll
test
lret
xor
icebp
int
imulb
xlat
iret
ret
test
mov
xorl
push
xor
jbe
clc
pop
mov
jecxz
jae
rcr
push
pop
and
mov
pop
cwtl
cmpsb
adc
or
mov
cltd
jns
mov
mov
fistpl
pop
fsubl
adc
ret
cmp
or
in
shlb
scas
les
div
sti
push
cmc
pop
pusha
jne
popa
pop
mov
push
insb
push
jae
out
sub
sbb
mov
mov
cmp
mov
mov
mov
icebp
push
cmpsb
lds
pop
sbb
ljmp
loope
inc
push
retw
xchg
popf
outsb
fimull
lahf
adc
jo
cmp
movsb
push
lea
xor
cmpsl
ja
in
imul
push
xchg
sub
mov
cmc
call
daa
push
dec
repnz
pop
in
es
xchg
inc
cltd
lahf
jmp
iret
jns
cmp
fwait
in
call
sub
and
dec
scas
xor
sub
fsts
or
inc
orl
cmpsb
mov
int
mov
mov
xchg
nop
xor
aaa
sub
push
xlat
ret
lock
fisttps
or
mov
ljmp
jns
data16
sbbb
rcr
addb
pop
lock
shlb
dec
lret
ror
push
aas
inc
aam
mov
sub
sahf
insb
xlat
mov
sub
inc
int3
xor
leave
mov
dec
jns
pop
loope
int3
ret
cs
aaa
push
call
inc
push
pop
cmp
adc
and
or
into
push
xchg
scas
icebp
data16
clc
inc
lret
cmc
push
insl
movsb
pop
fdivr
shlb
loop
gs
inc
jmp
add
mov
xchg
xchg
adcl
lret
adc
push
inc
jl
xor
inc
push
mov
or
repnz
ja
inc
shrl
mov
out
adc
pop
sub
inc
das
rcrb
push
mov
or
insb
sti
movsb
je
sti
repz
in
mov
int3
sbb
pop
jmp
and
push
mov
nop
mov
mov
sbb
push
xchg
adc
in
repnz
pop
ret
cmp
dec
jp
sbbb
clc
cli
sarb
loope
mov
fs
inc
icebp
ret
lock
xchg
pop
aaa
lods
add
xlat
xor
jge
in
sub
repz
scas
adc
idiv
jp
and
cmpsb
xchg
loope
jnp
rcl
ljmp
or
les
mov
jmp
jae
daa
jno
dec
cmp
mov
ljmp
daa
dec
sbb
fisttpll
les
insb
cltd
mov
je
dec
push
mov
mov
xchg
pop
pop
and
adc
les
jl
xchg
mov
mov
lahf
lcall
stos
cmpsl
jno
movsb
out
rcll
lcall
or
std
stos
mov
inc
xchg
out
arpl
pop
out
add
and
insb
lock
scas
subb
pushf
pop
outsb
ror
repnz
mov
fildl
pop
adc
stos
mov
call
ljmp
xlat
rcl
imul
shl
je
pop
jecxz
pop
cmp
xor
add
fsubr
or
into
xchg
subb
lods
loope
or
int
stos
nop
pop
jb
outsl
jecxz
addr16
or
js
mov
and
stos
jns
or
jge
mov
or
mov
xlat
push
lea
mov
mov
jl
fstpt
jmp
les
fs
mov
mov
enter
mov
dec
enter
ficomps
negl
in
movsb
cmp
jecxz
pop
call
mov
roll
mov
inc
outsb
js
xlat
pop
mov
mov
mov
sbbb
rcrb
jmp
lahf
cmp
cmc
mov
mov
push
out
inc
jl
adc
mov
mov
cmpsb
adc
xchg
lods
call
xor
inc
or
add
loopne
jno
fisubrs
addr16
xchg
mov
pop
or
popa
test
xor
nop
dec
sub
push
jb
cmp
and
out
cmc
sub
xor
pop
pop
xor
push
mov
imul
cwtl
push
pop
and
xchg
jge
or
adc
xor
push
or
and
or
stc
jae
inc
mulb
scas
loope
push
or
mov
cmp
sti
std
je
lahf
lcall
lret
xor
jo
inc
mov
lods
pop
and
int
xor
lds
add
xchg
xchg
jns
mov
adc
xchg
adc
push
loope
inc
push
call
insl
scas
rcl
out
inc
xor
mov
imul
pop
in
xchg
outsb
mov
popf
sbb
push
sahf
cmp
mov
mov
sub
push
sti
add
cltd
dec
lods
mov
jmp
xchg
loopne
cmp
dec
xor
js
dec
dec
shll
add
mov
fdivrl
je
sub
or
bound
loopne
fmuls
imul
and
cmp
sub
push
inc
sub
test
sub
addr16
lahf
lods
sahf
mov
scas
xor
iret
dec
pop
repnz
xchg
lcall
movsl
dec
sbb
aad
sti
lea
jmp
mov
shrl
lahf
movsl
ffree
mov
into
mov
std
and
pop
clc
mov
cltd
dec
lret
ss
adc
push
pop
outsb
test
add
cmp
mov
mov
push
stos
mov
data16
lds
loopne
jae
in
mov
mov
repnz
push
test
shll
jae
lods
cmp
clc
sbb
int3
test
xor
jp
cmp
aas
out
fucomip
jns
js
mov
inc
push
cmp
or
inc
lahf
or
mov
adc
mov
mov
roll
fwait
or
xchg
dec
in
movsl
rol
cmp
jge
lods
and
lcall
sbb
mov
push
mov
aad
lahf
movsl
jecxz
inc
arpl
xor
scas
cmp
inc
xor
mov
or
xor
leave
adc
xchg
mov
sub
cmp
xchg
cli
xchg
jne
cli
fnstenv
arpl
dec
and
int3
in
mov
and
xchg
iret
cs
push
mov
jae
sar
popf
mov
mov
cmp
xchg
sbb
sahf
or
shrl
or
sub
xor
inc
sub
shrl
adc
aas
cs
push
jecxz
mov
addr16
mov
push
ss
nop
push
jns
mov
mov
and
mov
sbb
mov
sub
mov
in
scas
sbbb
roll
sbb
mov
inc
inc
sbb
inc
mov
mov
adc
dec
dec
daa
mov
fdivrl
mov
dec
out
lcall
cmp
add
pop
roll
arpl
fwait
lcall
cs
mov
pop
faddl
rcrb
addr16
xorl
mov
out
loope
sbb
lds
inc
adc
jle
inc
inc
test
cmc
test
push
outsb
add
pop
mov
adc
sub
push
sub
push
ss
neg
inc
int
outsl
out
out
out
movsb
test
xchg
sbb
rcrb
mov
xchg
rorl
test
mov
cli
xor
popf
pop
sub
lahf
fsincos
jmp
add
mov
outsb
push
and
lcall
scas
test
mov
sbb
cmpsl
cs
cltd
jg
and
leave
mov
lock
adc
dec
aad
xor
dec
cmp
imul
sti
xor
addr16
xor
imul
hlt
in
adc
jo
pop
mov
popf
repnz
cltd
and
add
jbe
imul
cmpsb
dec
pop
and
sub
in
xor
fst
inc
and
adc
dec
jae
in
push
push
aaa
pop
inc
clc
sbb
mov
ret
fistpl
and
dec
mov
gs
icebp
adc
jmp
je
sub
stos
stos
or
jne
mov
insl
mov
jmp
iret
dec
jnp
pop
sub
jbe
mov
push
aas
add
ret
or
pop
pop
xchg
ret
ds
mov
lcall
shlb
push
mov
lahf
cmp
inc
pop
aad
inc
lds
data16
cld
jb
andb
gs
movsb
cmpsl
inc
pop
and
jmp
dec
mov
sarb
xchg
push
sbb
test
ret
scas
pusha
cmc
lods
dec
mov
xchg
stos
or
or
ja
lock
jbe
fwait
pop
jae
inc
mov
std
push
mov
sahf
inc
fistl
sbb
stos
leave
fidivs
pop
dec
loope
xchg
push
pusha
loop
mov
cmp
push
roll
jne
sub
cmp
call
scas
push
or
pop
adc
aad
fdivs
mov
push
mov
adc
hlt
addb
test
scas
xchg
out
xchg
loop
lret
sub
xchg
ljmp
sbb
push
sbb
jp
fs
pop
and
add
faddp
stos
mov
xchg
jo
test
mov
jae
mov
iret
mov
cwtl
mov
fldt
jno
dec
push
xchg
imul
stos
xlat
xorl
or
mov
xchg
mov
sbb
call
push
shrb
and
push
sbbb
insb
jb
out
out
test
sub
mov
mov
rolb
add
mov
dec
mov
mov
rcr
jp
fsubl
or
and
mov
push
mov
mov
mov
mov
push
sbb
icebp
cmp
les
mov
rorb
sub
adc
or
mov
testl
xlat
or
out
iret
aas
mov
pop
xorl
cmp
fs
fsubr
mov
jmp
inc
cmpsb
out
mov
push
repz
mov
adc
movsb
xchg
sbb
loop
sbb
sub
add
lret
aaa
adc
rol
inc
pusha
push
dec
into
jg
gs
sbb
mov
cmp
mov
insl
sarb
mov
dec
inc
leave
jns
xchg
pop
in
fnsave
mov
pop
adc
mov
pop
js
adc
dec
je
leave
leave
stos
mov
sbb
ret
jae
mov
pop
mov
sub
mov
push
lods
pop
ret
js
jmp
push
orl
lcall
lahf
bnd
call
fsubs
pusha
xchg
loope
aas
hlt
cld
flds
pop
fists
xor
cvtps2pi
or
mov
mov
fadd
cld
dec
jle
xchg
inc
jbe
test
jge
roll
out
sbb
sbb
jbe
cld
lcall
or
add
lahf
add
pop
push
sbb
js
xor
inc
push
xor
mov
dec
add
sub
cmpsl
mov
mul
addr16
jmp
inc
push
lods
aaa
sbb
mov
or
pop
rcr
ljmp
fdivs
test
nop
jle
adc
fsub
cmp
inc
shr
adcl
push
rcr
repnz
cmp
mov
imul
add
mov
lds
stc
jmp
dec
jge
jge
xchg
sbb
xchg
xor
ret
fbld
pop
pop
out
mov
stc
push
xchg
push
daa
and
jmp
out
repnz
in
xchg
xor
adc
stos
and
cmpb
mov
adc
mov
lea
daa
cmp
adc
fcmovnb
test
js
push
jmp
scas
adc
das
shl
and
add
and
andb
cmc
aam
cs
cmpsb
in
sbb
push
jmp
rorl
test
data16
sub
hlt
daa
shll
pusha
int3
cld
mov
int
fstpl
or
xchg
adc
movsl
jo
mov
repz
pop
loope
jnp
add
jmp
add
fs
clc
sbb
sub
leave
mov
sub
add
sub
jmp
mov
add
mov
jmp
xchg
xlat
sahf
movsl
pop
jns
idivl
xchg
fnsave
shlb
popf
xchg
out
lahf
pop
mov
outsb
stos
pushf
dec
cmp
daa
rcll
imul
aad
push
out
bnd
dec
aas
fisubrl
sbb
aaa
jmp
push
popf
jo
xor
rclb
fists
dec
out
out
mov
sub
test
es
ret
movsl
mov
xor
into
ret
fdivrs
xchg
sti
add
jne
cmp
aam
add
xorl
lds
stc
jnp
outsl
mov
cld
inc
add
cmp
imul
mov
fisubrs
lds
shrb
ficoms
test
sub
add
arpl
jo
leave
mov
mov
test
mulb
orb
dec
scas
in
dec
or
jl
add
xchg
movsl
or
cmp
and
dec
pop
mov
loope
xchg
fidivl
ja
inc
lret
mov
xchg
outsl
sub
aaa
inc
pand
lock
push
push
dec
pushf
cmp
fnstsw
test
femms
mov
cmp
rcr
mov
bound
ds
pop
call
add
mov
mov
stos
xchg
xor
lret
add
aam
jb
mov
or
and
or
dec
and
shll
lds
into
or
push
sbb
mov
je
jae
insb
and
jnp
bound
dec
pop
adc
push
xor
xor
in
cmpsb
jp
push
jbe
leave
xlat
push
scas
pop
inc
icebp
mov
mov
pxor
aaa
jne
or
adc
stc
jnp
testb
xor
push
int3
and
scas
std
xadd
push
in
inc
mov
mov
sub
and
sbb
lea
fwait
imul
in
dec
xor
inc
xor
xchg
inc
clc
addl
rorb
jmp
jl
orl
sbb
jae
jge
pop
pop
insb
sub
js
sti
jne
int3
cmp
fdivr
dec
adcl
jg
sub
test
mov
mov
shlb
mov
or
in
mov
jb
inc
js
and
leave
insl
adc
sbb
scas
inc
jb
into
cld
jne
rolb
xor
out
ret
mov
mov
cmpsb
int3
mov
lds
ret
xlat
mov
and
hlt
cs
mov
jecxz
popa
arpl
imul
insb
mov
aam
lds
and
cltd
push
inc
mov
mov
cmc
mov
aad
sub
pop
add
jg
pop
ja
pop
adc
inc
xchg
pop
ss
enter
in
mov
push
fwait
jle
sub
pop
stc
cmp
mov
cmp
pop
sbb
adc
cld
scas
sahf
push
jge
rcll
cltd
js
lahf
pop
mov
lods
shl
leave
xchg
jl
loopne
cmp
push
mov
xchg
pop
sbb
jmp
or
js
inc
out
xchg
gs
sub
lcall
int3
mov
imul
stos
xchg
jns
subb
out
imul
test
jo
gs
iret
out
out
sbbl
sub
inc
fwait
sahf
push
cmpsb
mov
xchg
sub
push
cmp
popf
xchg
push
notl
mov
xor
push
jmp
mov
lock
xchg
rcr
adc
mov
xchg
cmpsb
cmp
jp
mov
scas
mov
stc
imul
xor
pop
adc
js
pop
push
icebp
prefetcht2
scas
pop
lds
daa
scas
mov
and
or
jecxz
push
hlt
xor
cmp
adc
sub
std
push
mov
das
mov
mov
pop
xchg
es
ja
ljmp
mov
or
mov
ret
fcmovb
ss
loop
mov
sar
int
dec
pop
lds
cmpsb
jmp
mov
dec
out
mov
in
xchg
sbb
repz
fdivl
test
push
inc
iret
or
add
out
test
or
pop
xor
ja
cmp
in
fsts
loop
lods
lret
pop
fidivl
js
stc
xchg
ss
add
jl
adc
push
outsl
enter
xchg
jns
imul
cmp
xor
sahf
fcmovb
sar
lock
ror
dec
dec
push
mov
add
or
iret
pop
or
fidivrs
pop
lahf
inc
cmc
mov
jnp
push
ljmp
ds
insl
fsub
out
sti
hlt
movsb
pop
movsl
test
loop
adc
imul
or
push
jecxz
aas
sub
mov
add
inc
ja
xor
jle
out
and
cmpsb
stos
pop
roll
rorl
sti
cmp
icebp
push
mov
insb
lcall
rep
xchg
and
jle
mov
je
shll
fsubl
sub
lahf
inc
and
and
fistps
xor
mov
and
testb
mov
mov
mov
dec
sub
add
add
add
sub
dec
sbb
pop
xor
sub
push
sbbl
add
xchg
push
xchg
pop
dec
pop
lds
pop
push
lret
xchg
dec
inc
sahf
mov
pop
movsb
mov
pop
mov
pop
push
mov
push
scas
lods
mov
cmp
lods
push
pop
mov
repnz
pop
es
push
push
rcrb
sahf
std
add
mov
xchg
pop
test
inc
js
mov
xchg
sub
jno
in
pushf
jmp
cld
xchg
cmp
insl
repz
or
or
inc
iret
mov
mov
rorb
mov
mov
push
xchg
fbld
ja
mov
jne
push
sbb
in
movl
shll
sti
and
adc
sbb
inc
stc
sub
dec
pushf
jg
es
and
jae
jecxz
dec
cmpsb
inc
in
push
or
inc
xor
fisubrs
xchg
push
lret
stos
mov
outsb
pop
stos
pop
in
push
mov
add
inc
push
cmc
sub
wrmsr
arpl
sub
in
push
jbe
aam
mov
jmp
adcb
leave
cmpsl
test
repz
jl
adcl
imul
cs
ret
and
mov
jno
enter
lahf
dec
das
cmp
stos
cmpsl
sarb
in
lret
outsl
sbb
lods
mov
mov
movsb
fmul
add
idiv
xorb
or
sbb
adc
sub
mov
lods
xchg
add
sub
mov
popf
repz
aad
and
out
scas
adc
push
lcall
out
cmp
dec
ficoml
dec
popf
cld
mov
cwtl
dec
push
stos
inc
inc
and
cwtl
or
cli
fisttpll
xor
rcrl
testl
fmuls
adc
das
daa
iret
cmc
mov
insb
cmpsb
cmc
mov
out
dec
and
lret
popf
test
or
pushf
add
push
out
shll
jns
mov
mov
out
push
negb
inc
add
leave
and
call
arpl
sbb
inc
mov
fsts
adc
pusha
xchg
fidivs
mov
stos
xchg
in
mov
loopne
mov
jmp
fdivs
arpl
rorb
mov
mov
inc
lret
jne
mov
loope
dec
jl
jmp
adc
test
adc
add
jmp
push
and
jbe
adc
std
sbb
sbb
gs
xchg
sbb
and
adc
push
or
xchg
sbb
add
dec
mov
movsb
lahf
pop
loope
xorl
dec
push
outsb
inc
cmp
aas
fimuls
xlat
sub
and
scas
lcall
lahf
repnz
xchg
js
mov
loopne
xor
or
jno
xchg
hlt
fs
mov
inc
mov
jp
mov
outsl
sahf
or
mov
sbb
lods
adc
arpl
mov
pop
cmpsl
pop
pop
fcompl
nop
imull
call
sub
or
sub
insb
xchg
js
std
movsb
js
aam
push
int
xchg
push
lds
stc
xlat
mov
fsub
test
pop
jne
ljmp
pop
mov
xchg
lret
ret
jo
jbe
jnp
mov
iret
fdivl
mov
cltd
lcall
sub
fs
int
lret
lds
pop
enter
push
outsb
dec
fidivrl
sbb
outsl
lret
in
sub
jmp
repnz
mov
sbb
push
loop
mov
xchg
sbb
mov
jle
movd
out
nop
out
xchg
add
fiaddl
loope
xchg
cmp
cmpw
lahf
add
mov
xor
cli
imul
sahf
adc
in
jb
imul
jle
lret
pop
or
ret
mov
dec
into
push
rep
dec
jns
push
mov
aaa
outsl
jl
sub
out
mulb
rorl
pop
mov
pop
mov
xor
adcl
pop
mov
outsb
test
gs
dec
subb
xchg
add
and
stos
push
push
push
std
cwtl
into
movsb
int3
cld
sub
sahf
divl
lds
push
jnp
insl
xchg
sahf
sbb
outsb
movsb
in
ss
jae
add
xorb
loop
jmp
shll
mov
pop
or
scas
pop
dec
and
shrl
orl
jb
aas
pop
mov
mov
xchg
pop
clc
shlb
rcrl
xchg
in
imul
aas
aam
cmpsl
mov
add
ret
repz
shlb
and
or
add
sti
dec
sub
jbe
xchg
ljmp
cmp
dec
mov
push
or
mov
push
jmp
enter
mov
lahf
frstor
and
sbb
mov
push
adc
out
pushf
and
stc
fidivrl
dec
and
inc
inc
dec
jl
mov
mov
movsl
push
push
add
and
sbb
cld
lcall
or
mov
clc
fisubrl
cmp
and
outsb
hlt
test
js
faddp
adc
cwtl
mov
cmp
push
sti
mov
insl
loopne
pop
xchg
into
mov
inc
mov
fsubs
leave
popf
xchg
scas
xchg
cmpl
jns
xor
aam
es
int3
push
xchg
jmp
mov
cmc
int
inc
loop
fwait
cs
ljmp
aaa
push
dec
fcmovb
in
test
push
mov
in
jmp
push
out
add
xchg
mov
fldt
pop
push
cltd
cmp
lcall
mov
gs
popf
push
rol
sbbl
call
jno
jae
dec
mov
jo
push
inc
and
repz
lods
enter
arpl
adc
mov
je,pn
sub
into
pop
sahf
push
in
adc
mov
scas
mov
sbb
xchg
fsubrs
stos
lds
test
divb
cmp
insb
pusha
movsb
inc
rcrl
pop
aaa
lea
fildl
cs
push
dec
les
xorb
cmp
cmp
push
cld
mov
push
out
add
cmp
xor
enter
adc
aaa
fisttpl
xor
add
addr16
fildll
push
pop
push
dec
and
push
stos
inc
stc
shll
imul
add
andb
sub
adc
daa
lret
test
cmp
inc
inc
mov
jle
cmp
xor
ljmp
bound
lcall
stc
add
popa
lea
call
out
xchg
pushf
xchg
mov
cmpsl
xor
fdivrl
xlat
addr16
add
xchg
mov
mov
sbb
jne
insl
outsb
xor
shrl
mov
int3
dec
sub
rcrl
dec
int
imull
cmpsl
push
mov
data16
cmpsl
jae
roll
and
stos
imulb
leave
jnp
xor
inc
inc
fs
iret
scas
inc
imul
js
movsb
or
inc
test
dec
sub
mov
stos
adc
jo
loope
mov
in
jmp
dec
sub
enter
out
ret
jo
pushf
fwait
std
scas
mov
inc
xor
loopne
mov
in
mov
fisubrl
dec
adc
xchg
xchg
cmp
fidivs
movsb
push
cmp
ret
or
sub
inc
int3
mov
call
fcmovbe
pop
hlt
mov
dec
cmp
cs
call
das
jl
add
fsubrl
popf
stos
pusha
sbb
mov
fldenv
loopne
arpl
iret
add
jge
je
sub
outsb
lods
pop
bound
and
inc
loop
xor
mov
pop
fiadds
ss
mov
push
insb
dec
cmp
movsl
mov
stos
ret
fisubrl
test
sbb
mov
pop
add
mov
lods
sub
mov
in
sub
lods
imul
mov
adc
imul
sbb
mov
shrl
mov
mov
inc
cmp
add
popa
xor
and
in
shrb
addl
mov
inc
and
gs
xor
jle
mov
and
outsb
lret
mov
pop
mov
jb
mov
sbb
xor
dec
loop
fwait
and
sbb
outsl
out
addr16
jmp
mov
xor
or
xor
repz
mov
arpl
mov
in
fistpl
add
out
pop
jmp
ja
push
or
je
icebp
int
dec
pusha
sbb
adc
sub
dec
mov
mov
xor
aaa
popf
mov
jp
leave
or
xchg
add
in
or
pop
call
clc
mov
stos
loop
sbb
jg
andl
mov
pusha
and
fs
aas
pop
outsb
iret
mov
xor
xor
dec
mov
sahf
cmc
pop
inc
rolb
outsl
xchg
mov
fmuls
sub
push
xchg
sub
mov
shr
xchg
xchg
xor
sub
paddsw
push
ret
cmp
nop
mov
in
xchg
mov
xchg
movsb
pushf
pop
cli
lahf
mov
cmp
inc
pop
movsl
fcomps
mov
adc
in
jle
pop
hlt
hlt
lods
aam
lret
rolb
mov
outsl
fbstp
mov
test
testb
int3
adc
inc
test
pop
leave
push
add
adc
cmp
test
or
inc
mov
sbbl
mov
cmp
mov
sub
mov
loope
and
hlt
inc
xchg
cmp
hlt
push
xor
sbb
shll
mov
lock
lods
pop
ret
and
jg
dec
jmp
lcall
fwait
jg
fnstenv
in
jecxz
sbb
adc
comiss
lea
scas
jge
ljmp
cmp
xor
dec
enter
stc
addl
aas
in
sbb
mov
popa
mov
cmc
push
mov
add
aam
dec
inc
add
or
stos
pop
add
push
or
pop
push
fsubrs
xchg
outsl
add
xlat
mov
push
push
call
in
mov
sbb
insb
daa
and
mov
cmpl
dec
fadds
mov
sbb
movsl
and
arpl
adc
push
cmp
pop
cwtl
in
clc
cli
insl
cs
mov
push
addr16
sbbl
ret
sbb
ljmp
cmp
cmp
leave
pop
fildll
cmp
xchg
mov
jno
cltd
icebp
into
push
inc
sub
jne
insb
cmp
pop
adc
mov
jo
jp
cmp
xchg
popf
pop
insb
pop
pmulhuw
popa
loope
outsb
pop
push
clc
pop
mov
data16
sarl
popf
cbtw
lds
cmp
mov
mov
outsl
lcall
call
jbe
push
add
cld
fwait
sub
xor
ss
sahf
rolb
jno
out
sbb
xor
in
jecxz
or
adc
mov
dec
pop
sub
insb
adc
push
sbb
loopne
orb
das
jl
imul
inc
mov
mov
inc
test
mov
add
movsb
andl
xchg
dec
pop
test
cmp
pop
ret
xchg
out
outsl
pop
call
leave
jmp
add
mov
cmpsb
nop
add
sub
xchg
iret
popa
and
pushf
and
enter
sbb
add
loop
cwtl
std
and
xchg
fistps
sbb
cmpsb
jecxz
in
sbb
sbb
shl
cmc
inc
xor
mov
xchg
je
hlt
jg
pop
ret
les
jae
sub
test
int
test
fadd
push
loopne
fs
cmpsb
subb
sbb
push
xchg
sti
add
outsl
das
mov
sahf
je
cmp
adc
das
jb
jo
add
push
mov
mov
jno
and
popf
ffreep
xchg
push
and
xor
divb
call
or
xor
push
and
daa
leave
fistpl
shll
jmp
mov
jg
mov
mov
in
insb
or
ds
inc
xor
mov
aad
nop
or
dec
inc
mov
in
jne
ja
sbb
push
pop
ss
add
mov
cmpl
mov
out
add
and
mov
mov
pop
push
out
mov
push
push
jecxz
xchg
mov
sbb
stos
pushw
add
icebp
es
jp
stos
imul
mov
pop
mov
hlt
aaa
mov
add
aam
scas
cmp
out
push
xchg
pop
pop
mov
sub
imul
cs
fistpl
scas
imul
adc
mov
adc
xchg
movsb
push
mov
sbb
gs
test
insl
cmp
jns
sbb
mov
sub
jns
push
and
addl
fstps
pop
jecxz
es
push
or
fildll
std
jns
popa
push
cmp
push
mov
mov
rorl
sahf
mov
xchg
rcrb
push
cmp
push
cli
xor
pop
outsb
push
adcb
or
mov
lcall
into
shrb
or
popf
inc
fcmovnb
test
lahf
jle
mov
pushf
sub
nop
in
das
rcll
outsl
imul
xchg
daa
add
xchg
xor
iret
movsb
fsubp
lcall
xor
loope
jecxz
cmp
in
mov
stc
fsubrs
out
xchg
mov
push
les
stos
mov
lds
aam
jecxz
fiadds
sbb
imul
outsb
or
fs
or
jmp
repnz
imul
cmp
ss
roll
cwtl
out
imul
loop
mov
push
xchg
testb
imul
push
push
aad
out
repz
leave
jp
mov
stc
cmp
ret
add
hlt
sti
sub
arpl
push
push
lret
das
mov
jns
je
mov
in
sub
xlat
and
mov
lret
adc
adc
xchg
pop
leave
enter
or
arpl
push
or
pushl
mov
ljmp
mov
inc
or
outsl
mov
movl
shll
nop
dec
ss
mov
shrl
in
in
xor
add
sub
dec
sti
in
cmp
ret
sbb
xchg
xchg
mov
test
je
icebp
or
dec
movsl
mov
cmpl
je
loop
xor
es
popf
or
shll
add
cltd
jp
mov
shll
jae
sbb
test
push
fcmovnb
mov
xor
jno
or
es
jle
fdivrs
ds
inc
leave
dec
mov
cs
or
test
pop
dec
into
cmpsl
pop
movsb
outsb
sbb
sub
xchg
daa
js
lods
pushf
dec
jo
ljmp
divb
mov
hlt
adcb
insl
mov
aam
cltd
pop
movsb
aas
xchg
sub
fcmovnb
push
inc
shl
adc
loop
jp
test
xor
inc
push
cmpsb
or
das
xchg
inc
jnp
mov
leave
jg
jne
pop
mov
jg
cmp
jge
lahf
lods
adc
movsl
out
movl
and
jae
sub
movsb
insl
and
lds
cmp
loopne
fdivl
mov
sub
mov
pop
inc
es
loopne
movsb
push
and
pop
cli
push
and
xor
pop
xor
ja
mov
mov
or
add
xchg
lcall
or
cwtl
sbb
cmpsl
push
adc
cmp
sbb
mov
jle
sbb
jo
int3
xor
jle
xor
jne
push
add
cmpb
notl
mov
pop
push
shrb
fs
or
ret
shlb
inc
ret
dec
orl
dec
mov
loope
call
test
jno
fwait
andl
xlat
mov
clc
pop
out
lock
shrl
add
cld
add
les
pop
fwait
mov
fidivrl
sti
bound
jnp
ja
dec
hlt
inc
dec
rclb
jecxz
jb
cmpsb
push
lea
leave
ljmp
jne
es
xchg
lds
fucom
jne
pop
xchg
inc
and
repnz
rorb
pop
dec
or
rcll
cmp
cmp
jmp
jp
shrl
jbe
ret
xchg
cmp
fs
adc
leave
inc
mov
push
jns
and
orl
test
or
and
mov
jle
lret
test
insb
lds
xchg
das
fs
imul
adc
ss
cwtl
mov
stos
jecxz
mov
jnp,pt
mov
jp
xchg
movsl
clc
lock
xchg
movb
push
xchg
add
stc
ret
mov
in
mov
pmaddwd
imul
in
pop
push
mov
jmp
pusha
shll
xor
add
das
mov
ljmp
pop
cmpsb
inc
rorb
lods
sbb
push
lret
cmp
lods
adc
imul
into
pop
jmp
mov
mov
mov
adc
out
clc
das
data16
mulb
aam
sbb
test
scas
repnz
cltd
pop
das
and
pop
mov
adc
push
jne
sub
fnstsw
add
sbb
pop
gs
outsl
jno
cmp
inc
push
les
insb
int
loope
aam
aaa
push
repnz
mov
int
dec
jle
test
pusha
pop
aam
jne
orb
mov
push
mov
adc
addr16
inc
out
mov
shl
inc
sahf
enter
ret
cmc
cmp
jle
xchg
xchg
xor
fbstp
stc
stos
loopne
jg
out
push
cmp
jo
ffree
aam
lods
iret
ja
or
sbb
stos
out
loop
outsl
add
int3
fcoml
ret
aas
pusha
cmp
or
pop
fsubr
insl
cltd
es
lret
inc
dec
push
sub
cmc
out
xchg
dec
cmp
cmp
adc
mov
push
fdivrs
out
clc
incl
mov
adc
pusha
mov
ror
or
ret
pop
in
out
dec
jns
es
jno
jnp
negl
or
jne
leave
addr16
in
xchg
pop
ret
push
cwtl
or
repnz
push
cmpsb
repz
sub
imul
mov
popf
into
jbe
int
add
xchg
dec
push
enter
xchg
mov
xlat
das
gs
das
repz
movsl
aam
adc
pop
sbb
cmp
cmp
adc
xor
daa
nopl
aaa
add
into
loop
jl
bound
or
mov
or
cmp
adc
mov
pop
outsl
inc
mov
sbb
repnz
outsb
inc
mov
mov
je
je
repnz
pop
jo
adc
test
mov
jns
mov
add
cmp
sub
das
mov
push
cmp
mov
andl
jbe
mov
pop
aaa
testl
cmp
sub
sbb
scas
xor
add
outsb
lods
jp
shrl
dec
dec
jle
das
int
mov
mov
pop
xchg
es
add
fucom
int3
pushf
cmp
dec
sub
pushf
stos
or
cli
mov
mov
adc
int3
cmp
pushf
adc
push
pop
mov
adc
adc
in
pop
pop
jecxz
out
outsb
sub
inc
pop
jge
fidivs
imul
fistpll
jl
dec
xor
mov
les
xor
xor
adc
out
mov
ffree
leave
jae
mov
mov
add
test
sub
and
push
adc
push
fcoml
mov
cmc
ret
lea
push
cmp
dec
icebp
stos
sar
int3
das
in
decl
mov
adc
into
test
cmc
pop
jnp
test
push
jbe
andb
js
shlb
adc
sbb
je
jb
das
and
enter
fimuls
fdivrl
and
pop
mov
xchg
pop
repz
push
in
repnz
pushf
cmpsl
and
or
pop
fwait
addb
movsb
cmovnp
addr16
hlt
scas
insl
sub
cmp
fidivl
sub
test
add
mov
scas
jle
mov
and
pop
std
das
add
push
insb
cmp
loopne
imul
call
mov
push
or
scas
divb
ja
out
aad
add
stc
fimuls
cwtl
adc
cmp
sub
out
into
jns
sub
cmp
out
adc
test
push
mov
pop
repnz
adc
jne
mov
ret
fdivrl
sti
imul
mov
lock
pop
mov
jno
cmp
dec
loope
sbb
fmul
cs
push
fbld
lock
push
aas
push
pusha
dec
inc
pop
sti
xlat
cs
into
or
cwtl
xor
mov
repz
jp
add
repnz
xchg
loopne
mul
loop
add
xchg
jge
cwtl
push
push
jle
int
in
mov
aam
pop
rclb
sub
imul
not
adc
cmp
cwtl
stc
shrl
cmc
notb
aam
sahf
jbe
sub
cmp
adc
pop
into
das
mov
outsl
shrb
arpl
push
int3
clc
out
adc
test
lods
push
add
pop
sahf
mov
adc
cmp
xor
test
fisttpl
inc
mov
insl
dec
clc
or
in
std
mov
in
or
test
or
pusha
arpl
cltd
push
fwait
push
movsb
add
mov
xchg
sti
mov
js
or
sub
xchg
stos
dec
sub
pop
jg
loope
dec
int3
cmp
fists
lods
lret
lret
mov
xor
icebp
loopne
repz
mov
divl
call
in
shrb
test
cwtl
pushf
dec
pushf
sahf
cmp
dec
cs
sbb
sbb
jno
outsl
and
sbb
inc
push
out
mov
loopne
mov
movsl
or
xor
xchg
adc
sbb
mov
clc
pop
lea
cmp
xchg
sbb
lahf
push
out
dec
call
cmpsb
xor
fisubs
jge
imul
jb
les
loope
cltd
stos
xchg
push
cltd
into
inc
xchg
mov
push
movsl
mov
xchg
mov
pop
cmp
test
popf
aaa
xor
cmc
jns
stc
nop
cmp
int3
hlt
sahf
les
popa
inc
xchg
imul
add
test
adc
outsl
inc
inc
movsb
scas
sar
mov
rorb
or
xchg
in
mov
shlb
clc
aad
adc
cmp
je
pop
into
test
jnp
pop
pop
xchg
inc
int3
sbb
in
push
in
xchg
sbb
inc
imul
in
out
lret
dec
dec
jmp
sub
mov
aam
add
ja
or
adc
xchg
inc
out
cmp
cmp
out
mov
push
push
sub
jae
stos
cmp
mov
cmp
popa
fs
add
lcall
shr
mov
push
movsb
xor
mov
sbb
jmp
rol
in
xchg
sub
xchg
movsl
push
dec
push
orl
int
push
aas
mov
inc
fwait
sarl
les
xor
xchg
sbb
aaa
push
in
add
loopne
out
daa
inc
hlt
xchg
or
mov
dec
and
arpl
adc
push
lret
cmpsl
rcll
in
adc
mov
aam
gs
and
fdivl
xlat
pop
jmp
test
jmp
inc
pop
out
push
dec
out
popa
add
scas
sti
push
cmp
sub
cmp
outsl
cmp
lcall
out
and
push
mov
cmp
inc
mov
xchg
repz
scas
push
pusha
lods
dec
or
mov
out
lret
mov
push
bound
jg
xchg
repz
aaa
push
sub
xor
ret
mov
inc
dec
sbb
inc
enter
fwait
call
aaa
lods
je
mov
xchg
jns
inc
xchg
std
mov
mov
aad
test
push
dec
mov
cld
ds
and
std
loop
mov
cmovg
mov
and
push
dec
pop
loopne
and
outsl
xchg
std
adc
ret
add
cld
inc
push
inc
adc
add
xor
aaa
dec
or
ret
lret
push
pop
popf
sarb
test
pop
jbe
iret
int3
cmp
sub
lock
and
cli
push
pop
ljmp
movb
mov
sub
cmc
ljmp
mov
pop
movsl
rclb
push
xor
pop
sarl
nop
bswap
cs
push
pop
daa
pop
dec
loop
mov
lret
sti
sub
push
loope
es
rol
test
mov
push
stc
insl
sbb
xor
mov
pop
cmp
push
inc
dec
subl
cmp
loop
dec
aaa
jge
and
jecxz
aad
ljmp
icebp
bnd
out
aam
jne
inc
sbb
dec
cmp
in
sti
ret
sub
dec
imul
push
loopne
outsb
call
add
sub
ret
sbb
mov
out
jp
not
push
cltd
adc
stos
sbb
popa
jp
vphadduwq
dec
or
outsb
adc
push
subl
stos
mov
daa
push
fisubl
sbb
pop
sub
sbb
or
mov
push
inc
stc
add
scas
gs
xchg
pop
or
aam
sbb
adcb
nop
out
or
xchg
jnp
ja
daa
dec
in
add
daa
aas
xor
jno
mov
stc
xchg
push
or
out
adc
push
mov
mov
sub
push
repnz
jle
shlb
ss
or
jg
movsb
mov
lods
mov
adcl
or
dec
dec
push
dec
cwtl
sub
into
pop
mov
dec
int
loopne
out
fsts
lret
xchg
jne
sti
push
and
les
or
mov
jecxz
loop
out
dec
lods
fbld
adc
sub
sbb
ljmp
mov
stc
sub
mov
pusha
jecxz
sbb
xchg
mov
repnz
loope
cmpsb
lds
bound
jbe
inc
aam
in
das
xchg
or
pop
xor
mov
adc
lea
jno
ret
push
mov
ljmp
jmp
dec
out
popa
mov
add
pop
pop
in
std
mov
push
pushl
orl
add
cmpb
addl
pop
movsl
pop
mov
add
addl
dec
mov
stos
adc
push
lock
cli
xor
aam
xor
ljmp
pop
and
and
dec
sub
fisubrs
and
je
mov
lods
aad
mov
sbbb
pop
mov
test
adc
cmp
jb
cmp
mov
lds
sbb
add
lcall
adc
outsl
dec
fs
dec
mull
rorb
hlt
jne
aas
adc
jae
arpl
aaa
in
inc
loope
pop
les
notl
push
dec
ret
pusha
push
rcl
jmp
xchg
dec
addb
cltd
mov
cmp
sub
cmp
hlt
add
pop
aad
loop
inc
sub
insb
adc
mov
push
lds
mov
add
fidivl
mov
in
adc
fwait
xchg
adc
and
aaa
sahf
add
inc
mov
pop
mov
mov
mov
ljmp
lret
into
pop
xchg
mov
fmuls
jmp
sbb
xor
jne
repz
adc
loope
jp
mov
mov
sbb
leave
dec
rorb
negb
jnp
mov
lods
mov
xchg
push
adc
cmc
push
dec
fs
loop
or
xchg
fscale
push
sahf
xchg
in
popl
sbb
dec
xchg
pop
fildll
cmp
fmul
popf
pop
xlat
lret
out
xchg
outsb
in
jg
lret
mov
movsb
dec
popl
aas
outsb
pushf
mov
mov
rcrl
jbe
js
je
adc
cmp
js
push
sub
lret
lea
and
ljmp
aaa
xchg
fisubl
sbb
xchg
pop
loop
fxam
cmp
rcrl
sbb
fsubp
xor
clc
push
fwait
ss
das
cmp
pop
mov
data16
or
lahf
sbb
mov
mov
scas
mov
inc
out
cmpsb
lret
test
les
mov
mov
das
pop
pop
fsubs
bound
lds
add
fadds
ret
hlt
test
cmp
dec
sub
sub
stc
jmp
push
fists
jnp
push
addr16
or
and
mov
dec
loope
add
scas
mov
push
mov
dec
mov
jp
push
adc
sub
int3
out
dec
aas
jbe
mov
jl
scas
lahf
xchg
bound
mov
in
std
inc
pop
repnz
sub
insb
adc
rolb
outsb
aam
xchg
xchg
stos
mov
pop
push
lret
jmp
xor
push
pusha
dec
sbb
push
pusha
cltd
mov
mov
mov
ds
xchg
adc
or
jae
popa
or
xor
in
movsl
sahf
add
jne
dec
out
roll
mov
int
push
roll
test
mov
das
and
lea
lcall
aaa
popa
add
int3
cld
sbb
adc
data16
in
pop
fnsave
inc
test
and
xor
adc
add
lret
lret
ret
popa
cmpb
loop
cld
into
in
push
jl
ret
or
repz
sub
mov
pop
mov
dec
xchg
scas
shlb
fadd
lret
pop
shrb
jnp
pop
out
scas
std
addl
loopne
jnp
cmp
add
lods
pop
scas
jl
mov
jmp
movsl
aaa
inc
mov
loopne
sub
out
lods
sti
test
leave
ljmp
mov
popa
cmpsb
sub
xor
mov
or
test
or
xchg
mov
xchg
mov
imul
bound
das
into
pop
mov
mov
xchg
pop
sub
cmp
les
das
cmpsb
inc
std
cwtl
mov
arpl
cvtps2dq
mov
xlat
movsl
rcrb
je
call
in
rorl
dec
faddp
fimull
cld
sahf
pusha
loop
sbb
mov
cmpsb
mov
loop
push
xchg
sbb
xchg
fcoms
pop
scas
rorb
fstpl
js
adc
mov
adc
mov
std
or
filds
arpl
ss
test
mov
fyl2x
sbb
xacquire
sub
andl
inc
out
jg
add
and
jp
sarb
shl
cmpsb
fs
xchg
addl
inc
scas
fwait
insl
cmp
push
dec
fidivs
dec
push
arpl
push
iret
movsb
add
and
fsubr
sbb
mov
xor
mov
xchg
mov
movsl
test
mov
push
pop
adc
cmp
jae
push
xchg
jmp
je
lret
push
rcl
xchg
mov
pop
iret
lds
mov
lret
adc
out
out
gs
das
outsl
cmc
lcall
sbb
mov
sbb
rcll
pop
sub
cmp
xlat
dec
mov
sbb
es
add
or
iret
push
shr
jl
add
rcll
jo
not
push
xchg
add
lds
fisttps
push
int
cmp
mov
mov
mov
aam
xor
pop
push
xchg
orl
dec
cmp
sbb
mov
xchg
jns
adc
push
jns
xchg
add
mov
lods
mov
adc
mov
add
sub
pop
fisubrs
pop
mov
dec
push
rcl
orb
dec
leave
cmp
push
ljmp
test
sahf
xchg
mov
sub
add
inc
ja
adc
mov
push
jbe
sub
enter
pushf
lea
fstl
inc
sub
inc
ljmp
and
push
and
es
pushf
push
scas
dec
fsub
in
out
inc
xchg
mov
lret
cmp
push
dec
pop
add
xchg
jg
test
int
ds
aaa
xchg
jecxz
test
sbb
add
sbb
cmc
pop
push
mov
push
mov
ja
mov
insb
sub
mov
adc
push
jno
fildll
nop
mov
lods
gs
mov
ljmp
mov
mov
les
lea
loop
pop
ja
lahf
mov
push
cmp
cltd
or
or
dec
adc
dec
xlat
mov
mov
sar
inc
lea
lock
inc
movl
sbb
imul
pop
outsb
in
jns
testl
sbb
lahf
les
inc
pop
sti
sbb
xorb
mov
gs
cmp
insl
fcmovb
push
cmp
jecxz
std
ljmp
mov
mov
pop
xor
sub
mov
pop
inc
mull
inc
sbb
mov
mov
xchg
sub
mov
mov
mov
push
push
ficoms
adc
scas
and
push
mov
nop
fiaddl
cmp
dec
pop
jbe
mov
add
xlat
dec
xchg
adc
adc
xor
and
inc
mov
mov
jle
jmp
test
lods
or
push
pusha
dec
mov
jge
mov
and
out
pop
mov
sbb
fwait
mov
push
std
into
idivb
repnz
sub
das
mov
sub
shl
mov
jg
sti
bound
mov
cmp
or
sub
ja
out
aaa
add
jmp
sub
das
mov
aam
in
jmp
in
dec
add
in
mov
negb
call
push
push
jmp
ljmp
adc
mov
lea
jmp
pop
dec
cmpsb
std
mov
int
lock
aam
jne
leave
sub
sub
je
stos
jns
iret
pop
ljmp
cmp
xchg
and
or
out
test
js
hlt
sub
fnstsw
ljmp
push
xchg
int3
repnz
sub
lret
addr16
sbb
lock
xor
sbb
aam
mov
cs
lret
and
sub
sbb
push
shll
xchg
sub
sarl
aad
insl
pop
and
mov
bound
ljmp
adc
fadds
lods
pop
sbb
aas
jecxz
mov
outsl
jne
iret
into
pop
or
std
hlt
cs
fwait
in
pop
sbb
sub
jne
push
xor
jle
repz
dec
jge
pop
or
inc
lahf
lds
fwait
jg
rcll
cwtl
fcoms
cmp
sbb
pop
jp
in
or
mov
pop
in
and
test
nop
mov
push
outsb
xor
xorb
mov
cld
aaa
xchg
mov
decb
pop
hlt
je
sub
daa
out
fcomip
negl
insb
dec
jecxz
scas
imul
pop
jmp
mov
cmp
enter
inc
xchg
sub
andb
movsb
jmp
jg
in
fwait
je
pop
jnp
mov
in
mov
fbstp
inc
mov
add
mov
in
pushf
into
adcl
jo
in
shll
sti
fsubrs
in
sub
and
bound
es
int3
pop
xor
xor
pop
jae
xor
inc
sbb
movsl
in
jne
cmp
lahf
out
sub
out
add
lea
mov
mov
sahf
jg
jno
mov
stc
xchg
insl
cli
adc
jae
jg
cld
popf
cmp
hlt
or
sbb
mov
pop
mov
scas
nop
sub
mov
xchg
fisttpl
shrl
gs
or
loop
cmp
cld
ficomps
jne
cli
sbb
dec
test
mov
inc
cmc
lods
stos
int
sbb
shrb
push
call
inc
jl
aaa
out
adcb
cmp
mov
sti
xor
pop
lds
sub
dec
inc
adc
jnp
jns
and
repnz
sub
arpl
inc
lea
dec
mov
inc
mov
jo
mov
adc
cmp
loope
test
insb
xchg
sbbb
push
and
pop
xchg
mov
insl
movl
iret
cmpsb
ljmp
push
imul
push
sbb
cmp
jp
mov
shll
or
cld
xchg
pop
or
inc
pop
cs
mov
stos
aaa
in
jns
stos
mov
xor
mov
xchg
ret
fcomp
repz
imul
test
jb
lods
inc
hlt
and
or
loopne
in
fisubl
push
inc
add
sahf
sbb
mov
mov
mov
and
xchg
cmp
test
out
dec
mov
lret
cmp
into
arpl
nop
and
rolb
mov
lret
shl
insb
imulb
push
and
xchg
jb
xchg
inc
lret
int3
and
mov
js
clc
pop
sub
call
adc
ret
popa
mov
stos
mov
mov
or
out
out
mov
fcoms
xchg
std
in
cmp
cltd
lcall
sbb
dec
xchg
iret
nop
fucomp
dec
xor
test
in
jmp
sbb
andl
mov
cli
mov
pop
jo
negl
mov
pop
lock
mov
pop
sbb
scas
lcall
insb
movsl
jnp
les
push
sub
dec
xchg
cmc
test
repz
pop
loop
lock
sbb
out
mov
mov
cmc
jae
sbb
stos
ret
lcall
iret
sbb
fnstsw
inc
push
sbb
adc
dec
and
or
std
inc
push
pop
cmp
cli
in
fnstenv
ficoml
xor
and
mov
test
fdivrl
xor
pusha
dec
movb
incb
dec
je
jge
mov
addr16
int
das
fdivs
jbe
add
pop
out
and
sbb
mov
mov
sbb
int
das
rol
pop
jne
or
or
shll
ss
add
lds
cltd
enter
pusha
test
mov
mov
cmc
jp
mov
xor
jge
and
pop
pop
lret
pop
cmp
icebp
daa
sub
cmp
fcoms
cwtl
cmp
mov
mov
push
jo
and
pop
sti
das
hlt
les
cmp
lods
pusha
jne
and
call
call
nop
movsl
pop
movsl
mov
sahf
clc
fs
dec
dec
mov
cmp
ja
add
jecxz
inc
gs
jmp
add
jb
xlat
iret
and
fwait
rcr
pop
sbb
fmull
xchg
xchg
popa
pop
pop
cld
sarb
dec
cmp
jnp
jg
shl
fldl
mov
and
lea
xor
not
jle
mov
and
mov
pop
hlt
icebp
sbb
loop
mov
mov
cld
add
jp
dec
cmp
mov
fstpt
or
mov
cld
dec
loop
outsl
mov
inc
in
mov
mov
add
imul
jmp
xor
in
cmpsl
and
mov
js
add
popa
push
mov
leave
pop
rcl
and
add
shlb
inc
outsb
dec
jbe
lahf
pop
test
xchg
push
jno
inc
push
mov
add
andb
add
push
pushf
and
out
into
pop
mov
dec
aaa
sarb
sbb
ret
mov
in
and
push
iret
lods
cli
push
mov
loope
jb
in
stos
ds
lret
ret
imul
inc
dec
aaa
int3
jecxz
xchg
rcll
arpl
out
xchg
add
push
jbe
enter
mov
cmp
lods
ds
loop
push
mov
xchg
ljmp
fnsave
mov
shrb
mov
adc
test
movb
pop
es
mov
mov
jge
int3
int
out
cmp
mov
rcrl
and
jmp
pop
jb
pop
pop
fcoml
or
adc
pop
popa
subl
cmpsb
add
inc
imulb
mov
int3
bound
int3
dec
inc
inc
fcos
lds
pop
sbb
pop
cmp
xorl
mov
iret
das
ror
test
xlat
mov
nop
out
clc
into
jae
xchg
jo
sub
aaa
out
push
fcompl
pop
dec
cmp
inc
aam
daa
lock
jp
lods
or
jns
mov
mov
adc
notb
mov
mov
xlat
xor
and
mov
sbb
cli
pop
pop
inc
push
inc
and
push
in
leave
and
aaa
jl
sbb
mov
in
out
adc
add
lods
ret
repz
daa
mov
mov
push
mov
ds
in
clc
jne
pmulhuw
call
int
out
push
cmpsb
sub
shlb
add
mov
ret
or
push
pop
sbb
push
xchg
int
arpl
daa
fiadds
xchg
sti
movsb
lcall
mov
or
gs
mov
std
cwtl
sti
and
fs
loopne
cmp
inc
mov
mov
in
outsb
pop
jbe
stos
mov
in
inc
stc
add
push
xchg
cwtl
enter
sub
dec
mov
jnp
xchg
cmp
mov
adc
aad
lret
xchg
mov
inc
sub
mov
fisubl
pmaxsw
xchg
lcall
cmpsl
jo
xchg
aad
pop
dec
and
ret
fwait
mov
stc
movsb
jne
or
add
xchg
and
icebp
popa
sub
in
push
mov
pop
outsl
in
les
pop
sti
jae
insb
jne
or
repnz
faddl
xorb
stc
fsts
pop
mov
sahf
sti
in
add
scas
insb
mov
loop
test
lcall
xor
adc
mov
fisubrl
jmp
or
jae
das
ds
xchg
sbb
out
lods
jo
mov
shlb
mov
stos
cld
dec
popa
int3
test
xchg
popa
mov
xchg
fcompl
outsl
xchg
and
fistps
outsb
push
pusha
jge
filds
sbb
sti
jg
mov
xchg
add
xchg
mov
dec
out
mov
enter
mov
inc
mov
fldcw
arpl
daa
fldcw
mov
sub
pop
jl
movsb
mov
fdivl
pop
push
ljmp
mulb
add
movsb
and
mov
movsb
sbb
xchg
iret
jmp
add
sub
inc
sti
shl
outsb
scas
cmpl
mov
jl
nop
imul
fs
insb
loope
mov
sbbl
cmpsb
dec
mov
jne
inc
loopne
int3
dec
mov
cmpsl
mov
cmp
xor
jne
jne
or
inc
push
or
fldl
imul
lret
cli
jge
inc
pop
xchg
jge
fldcw
cmp
mov
push
pop
cmp
loopne
shr
jge
jge
ljmp
jl
adc
addr16
mov
stos
lret
int3
rol
sub
jmp
adc
stos
stos
jae
sbb
in
jle
xchg
fistps
inc
mov
loop
imul
adc
mov
orl
xor
ljmp
sub
xchg
aas
push
icebp
js,pt
test
sub
aam
mov
mov
clc
cmc
shlb
test
or
sub
or
push
xor
mov
push
or
sbb
lahf
inc
in
sbb
mov
call
std
jns
out
mov
repz
loope
mov
in
dec
dec
insb
cmp
stc
cmp
gs
jmp
jb
movsb
fadds
jae
add
shrb
out
test
add
out
dec
add
nop
dec
inc
and
repz
inc
cmp
clc
insl
ljmp
pusha
xchg
es
dec
dec
dec
mov
sbb
test
jle
neg
cmc
mov
add
jg
xlat
mov
push
out
mov
loopne
add
dec
rorb
pop
xor
add
mov
test
ror
fsubrl
test
mov
xlat
pop
xchg
or
ret
pop
jae
clc
push
xchg
and
inc
adc
cmp
test
mov
fsubp
xchg
jmp
test
or
jmp
sbb
jmp
pop
in
out
sarb
fisttpll
or
sbb
out
je
test
loop
sub
repz
in
xchg
push
jp
data16
dec
lret
punpckhwd
lods
lret
mov
addr16
jp
xchg
cmp
int3
mov
mov
jmp
stc
outsl
pop
inc
out
xchg
inc
test
add
mov
jp
idivb
popf
pop
lret
ret
lahf
cmpsl
mov
jno
xchg
xorb
lcall
mov
push
mov
test
mov
ret
outsl
add
push
lcall
fdiv
xchg
lret
xchg
pop
roll
xor
insl
ret
notl
aaa
dec
out
jle
loope
je
cli
aam
adc
jae
push
pop
jmp
mov
popa
je
pop
outsb
imulb
in
pop
cmp
arpl
fnstcw
jnp
das
sub
pop
pop
add
lods
push
and
test
sub
push
loop
jns
xchg
insl
mov
mov
mov
mov
cmp
in
push
fildl
cltd
sbb
dec
stos
xlat
inc
inc
push
mov
or
pop
dec
push
mov
and
leave
les
sub
xor
testb
incl
xor
test
inc
adc
mov
mov
test
fs
mov
push
mov
sbb
inc
jl
imul
pop
movsb
gs
jne
xor
mov
arpl
subb
add
mov
popa
mov
lods
and
lret
adc
inc
imul
cwtl
cmpsb
enter
loope
and
sub
in
pop
mov
rcl
leave
cwtl
orb
rcrb
jg
push
ljmp
push
insb
ret
ja
pop
xchg
push
notb
xchg
xchg
pop
lods
jge
loope
mov
shll
push
pop
adc
sbb
out
dec
pop
push
mov
dec
lds
pop
mov
rcrb
test
inc
mov
push
mov
imul
sub
jge
inc
cmp
test
test
outsl
les
xor
inc
cmp
mov
mov
cmp
adc
or
cld
dec
mov
mov
pop
daa
lods
push
mov
add
xchg
movsl
outsb
loopne
loope
cmp
filds
mov
arpl
push
imul
inc
testb
push
lods
mov
ss
jg
mov
inc
inc
inc
rorb
sar
imul
mov
imul
mov
dec
push
lock
adc
xlat
cmp
lds
fstp
outsl
sarb
mov
fmull
push
out
sub
es
inc
mov
cmpb
jnp
dec
sbb
cmp
cmp
sbb
cmp
insb
imul
pop
faddl
cs
or
popa
jae
xsavec
inc
lret
push
cltd
aam
cmp
movb
xor
sub
xchg
push
out
add
leave
fdivr
mov
push
xor
add
sbb
dec
add
inc
or
add
push
test
sbb
fucomip
leave
jl
mov
pop
in
addl
xor
daa
mov
shrb
daa
ljmp
xor
imul
mov
mov
jl
cmp
mov
imull
mov
xor
or
repz
cld
lcall
xor
xchg
out
movsb
mov
or
mov
cmp
mov
inc
xchg
dec
inc
fdivl
cmpsl
mov
pop
call
push
insb
add
add
pop
inc
out
inc
mov
addr16
mov
fmull
cmc
mov
pop
pop
stc
dec
scas
mov
mov
add
push
mov
cmpsb
cmp
pop
lret
inc
shlb
addl
cld
jp
or
test
push
sti
movsb
pop
push
lods
les
mov
js
cmp
fsubrs
xchg
dec
scas
leave
pop
rclb
out
cmp
sbb
cmp
lds
in
rolb
jno
loopne
test
or
cmp
jae
repnz
or
sarl
push
and
lea
mov
jno
aaa
dec
mov
lock
sub
pop
push
adcb
ss
or
xlat
fwait
test
iret
xor
and
dec
xchg
lahf
mov
bound
inc
jae
subl
sub
call
stos
sbb
fs
inc
stos
add
or
repnz
jmp
mov
dec
insb
psubw
lret
ds
jmp
gs
ret
mov
inc
jne
cwtl
xchg
push
xor
push
cmp
pop
jge
cwtl
stc
pop
bound
mov
test
daa
mov
jae
stos
mov
lods
scas
cmp
jae
mov
xor
das
fnstcw
call
lds
les
dec
cmc
add
in
fmull
stos
idivl
inc
xchg
cs
and
imul
imul
lods
lretw
enter
pop
aad
xor
aad
adc
ljmp
in
and
mov
add
xor
mov
cmpsb
jge
testl
mov
or
mov
push
into
movsb
aad
stos
push
lahf
pushf
call
sti
mov
sub
clc
sbb
dec
jecxz
and
push
mulps
pop
cmovns
push
aad
out
hlt
pop
mov
insb
bnd
out
jns
scas
sub
jb
xchg
mov
stos
cmpsb
inc
repz
mov
cmp
push
stos
imul
jge
adc
push
cmc
call
test
out
and
popa
cmp
cmpsl
add
insl
cmpsl
aam
lret
xorb
and
mov
mov
xor
sarb
movsb
sbb
je
mov
aad
jno
jmp
fwait
mov
dec
dec
mov
mov
lea
dec
pop
loopne
test
int
sti
lods
leave
outsb
int
rorl
fstpl
jle
js
dec
into
or
rclb
jnp
push
hlt
popf
jl
outsl
push
lret
fcomp
dec
insb
cmpsb
cmp
addr16
cmp
push
lret
cmp
hlt
sbb
xchg
jg
mov
aaa
pop
ss
out
cmc
rolb
inc
mov
pop
fdivrl
xor
push
pop
sub
or
xchg
fcomip
mull
js
test
stos
mov
fld1
je
push
inc
mov
imul
add
test
or
xchg
xchg
dec
dec
leave
ffreep
and
repnz
mov
enter
call
popa
pushf
subb
mov
lock
loop
das
stos
gs
push
les
cld
out
cmpsl
sub
xor
sub
mov
in
pop
or
inc
mov
adc
and
lock
cwtl
out
mov
xor
mov
in
mov
popl
xlat
xchg
imul
xor
call
ret
insl
loope
mov
nop
scas
std
or
xor
jge
out
mov
jae
sbb
mov
cmp
xor
or
push
loopne
scas
data16
ja
add
lcall
mulb
test
mov
xor
in
test
push
pop
push
popf
and
and
cmp
cld
jecxz
inc
dec
jmp
and
pop
jae
and
mov
xor
jnp
mov
mov
cmp
jns
shrl
and
jmp
lret
clc
sub
std
and
stos
or
add
add
or
outsb
jbe
aas
dec
adc
arpl
pop
mov
xor
enter
pop
iret
in
push
pop
cwtl
or
lea
rol
inc
push
mov
pushl
jno
mov
cli
mov
arpl
mov
add
xchg
fwait
mov
in
xor
imul
cmp
insb
pushf
data16
add
cmp
xchg
into
cmp
push
and
mov
sub
out
daa
mov
aam
xor
mov
cwtl
dec
fsubl
mov
icebp
mov
out
ds
rcll
scas
inc
xchg
mov
push
sbb
hlt
jecxz
cs
out
sbb
jne
dec
mov
mov
inc
inc
sarl
in
mov
addb
pop
adc
inc
push
addr16
push
lods
into
ds
popf
xchg
xor
pop
dec
mov
ret
insb
jbe
pop
dec
push
popa
sub
or
cmp
fldl
inc
pushf
pop
cltd
les
jne
aaa
gs
jmp
mov
mov
and
inc
push
out
mov
inc
mov
add
dec
pop
fisubs
pop
insl
and
lcall
cs
add
sbb
call
sarb
gs
iret
add
mov
dec
cmpsl
jns
into
cmp
cltd
dec
mov
push
and
into
cmp
cmpsl
cltd
insb
repnz
xor
notl
cli
jg
movsb
daa
or
push
cmp
push
int
sub
mov
dec
adcb
inc
jne
mov
pop
mov
inc
mov
out
xchg
push
sar
sti
push
jb
fimuls
sbb
and
rolb
das
pop
xor
stos
cs
xchg
inc
cmpsl
ds
movsb
mov
out
mov
bound
inc
mov
sti
or
xlat
mov
dec
imul
lock
sub
int3
xchg
or
and
adc
inc
sbb
js
cmpsl
out
xchg
lretw
pop
in
rcl
test
hlt
scas
and
rorl
ljmp
push
ret
adc
in
pop
js
mov
out
leave
mulb
or
in
inc
cltd
add
ficoml
leave
mov
add
dec
int3
xor
movsb
and
popf
je
sub
adc
iret
cmp
xlat
inc
scas
xchg
aad
fldcw
pop
lea
add
or
imul
pop
les
out
inc
cwtl
mov
lahf
gs
or
sbb
jl
shl
into
neg
lods
testb
jb
push
repz
jecxz
inc
dec
pop
cmp
pop
inc
dec
and
in
icebp
xchg
sub
orl
popa
add
pop
and
mov
jle
push
jnp
sbb
mov
sahf
into
aas
add
cli
insl
cmp
mov
into
inc
xor
aaa
xor
out
mov
repz
rol
push
pop
inc
push
mov
movsb
std
stos
pop
int
xchg
cmp
rcr
mov
push
cmp
or
pop
in
pop
add
push
sbb
shl
int3
mov
insl
mov
xor
cs
cmpsl
aas
jae
bound
popa
or
lret
out
push
aaa
out
jge
sar
adcb
push
mov
mov
mov
jnp
xor
jecxz
pop
sbb
push
into
push
fwait
sar
adc
mov
gs
popf
xchg
pop
sbb
stos
stc
jns
cmp
push
mov
jge
inc
in
dec
pop
add
mov
cmp
mov
adc
mov
shll
cmc
scas
mov
cmp
jns
bound
lods
jle
push
subl
repnz
je
xchg
pop
mov
inc
andb
or
sbb
loope
shrb
jne
add
loop
fwait
inc
mov
das
test
jecxz
inc
jno
call
nop
cmc
and
mov
js
in
lret
cs
mov
popf
or
jnp
sti
outsb
test
aad
jns
pop
add
cmp
mov
cmp
inc
mov
mov
popf
and
in
inc
pop
lock
mov
push
arpl
ds
les
jmp
lods
mov
sbb
cmp
mov
lcall
add
cld
stos
cmpsl
sub
repz
insb
jle
int
int3
pop
lods
inc
arpl
xor
leave
xor
idivl
mov
fisttpl
xlat
std
mov
jae
ret
ja
xlat
xchg
inc
mov
add
adc
jbe
inc
jnp
pushl
add
mov
dec
in
ret
jbe
jne
add
push
sub
xchg
scas
notb
mov
scas
add
ret
push
mov
cmp
inc
mov
xchg
mov
fldenv
shrb
mov
add
shl
repz
bound
xor
dec
push
sub
es
sub
gs
in
and
outsb
das
icebp
xchg
push
int
pusha
add
xchg
cmp
popf
fimull
fisttps
rcl
xor
pop
xor
shrl
adc
