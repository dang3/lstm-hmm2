decl
jns
jge
add
test
pop
call
test
pop
je
pushl
mov
pushl
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
call
mov
mov
test
je
mov
push
call
pushl
mov
push
call
test
jne
mov
test
je
mov
mov
mov
mov
cmpl
jne
mov
lea
call
mov
pop
pop
pop
leave
ret
orb
jmp
cmpl
jne
mov
test
je
mov
mov
mov
mov
jmp
push
mov
push
mov
mov
mov
pushl
mov
call
push
push
mov
mov
mov
mov
push
push
mov
mov
mov
mov
push
push
mov
mov
mov
mov
push
push
mov
mov
mov
mov
push
push
mov
mov
mov
pop
int3
inc
add
pushl
pushl
call
mov
add
pop
pop
ret
push
test
je
mov
test
je
push
call
test
je
mov
push
mov
call
pop
ret
xor
pop
ret
push
mov
mov
mov
mov
push
xor
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
cmp
jne
push
lea
mov
call
mov
mov
pop
mov
pop
pop
ret
mov
mov
push
call
xor
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
je
lea
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
je
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
movl
movl
movl
jmp
push
mov
push
push
mov
testb
jne
andl
push
mov
mov
push
lea
push
push
push
call
cmpl
movl
je
mov
test
je
push
call
xor
inc
test
js
mov
mov
add
incl
lea
push
mov
call
mov
mov
call
orb
mov
mov
andl
lea
push
push
push
call
mov
call
mov
pop
pop
pop
leave
ret
movl
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
call
push
call
pop
xor
jmp
push
rcr
inc
add
je
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
mov
pushl
add
mov
push
call
mov
mov
xor
ret
push
mov
lea
movl
call
lea
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
mov
mov
push
mov
push
mov
cmp
jne
push
push
call
mov
push
mov
mov
call
push
push
mov
call
pop
pop
leave
ret
mov
call
pushl
mov
push
call
ret
andl
lea
push
pushl
mov
movl
movl
mov
andw
call
pop
pop
mov
ret
push
mov
push
push
pushl
mov
call
mov
cmpl
pop
jne
push
lea
call
mov
mov
cmpl
jne
push
lea
call
pushl
call
pop
pop
pop
pop
ret
push
mov
push
andl
push
push
pushl
mov
lea
call
mov
mov
push
pushl
push
call
test
js
push
lea
push
pushl
mov
call
test
js
mov
mov
xor
push
push
call
lea
mov
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
jle
xor
mov
mov
movl
mov
mov
mov
mov
mov
lea
mov
mov
cmp
je
mov
cmp
je
incl
mov
addl
cmp
jl
xor
pop
pop
pop
leave
ret
xor
jmp
mov
cmp
mov
jne
lea
call
jmp
mov
push
call
cmp
je
mov
cmp
mov
je
mov
push
call
mov
cmp
je
mov
mov
mov
cmp
je
push
lea
mov
mov
call
lea
push
lea
push
push
push
pushl
push
push
pushl
call
add
pushl
mov
lea
mov
call
pushl
mov
pushl
call
mov
lea
call
mov
mov
call
cmp
jbe
mov
xor
mov
mov
push
call
pushl
mov
mov
push
call
mov
call
push
mov
call
inc
cmp
jb
lea
call
lea
call
lea
call
lea
call
lea
call
mov
jmp
push
mov
cmpl
je
mov
pop
ret
push
push
call
pop
test
je
push
mov
push
lea
push
mov
mov
call
mov
test
je
mov
push
call
mov
test
mov
pop
je
jmp
xor
jmp
push
mov
push
push
incl
mov
mov
cmp
je
mov
mov
mov
mov
leave
ret
push
mov
and
sub
push
push
push
lea
jle
inc
add
lea
push
lea
call
mov
mov
xor
cmp
je
mov
mov
cmp
je
mov
cmp
je
lea
push
lea
call
mov
mov
cmp
mov
jne
mov
mov
push
call
lea
call
cmp
jne
mov
lea
call
mov
in
inc
add
lea
mov
mov
jmp
subl
mov
mov
mov
sbb
inc
add
call
mov
mov
lea
movl
movb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
testb
jne
mov
cmp
je
mov
shr
and
mov
mov
shr
and
lea
mov
mov
push
call
mov
mov
cmp
jne
cmp
je
cmp
je
lea
call
mov
lea
push
push
push
lea
push
lea
push
pushl
mov
pushl
pushl
call
inc
add
cmp
jne
lea
call
lea
call
decl
cmp
jge
lea
call
lea
jp
inc
add
pop
pop
pop
mov
pop
ret
push
mov
mov
push
push
mov
push
mov
xor
mov
mov
call
cmp
jne
mov
cmpl
jne
test
jne
mov
pop
pop
pop
pop
ret
mov
lea
push
mov
call
mov
jmp
cmp
je
push
push
mov
call
test
je
jmp
xor
jmp
push
mov
and
sub
mov
push
mov
mov
fildl
push
mov
mov
fdivl
mov
push
mov
mov
mov
fstpl
fildl
fdivl
fstpl
fildl
mov
fdivl
fstpl
fildl
fdivl
fstpl
fldl
fmull
call
add
jg
cmp
jg
mov
neg
cmp
jl
cmp
jg
cmp
jl
cmp
jg
mov
pushl
call
pop
mov
push
lea
push
call
mov
pushl
call
pop
pop
pop
xor
pop
mov
pop
ret
push
mov
push
mov
mov
push
push
push
xor
push
add
call
cmp
je
mov
cmp
mov
mov
je
movzbl
cmp
jne
cmp
je
mov
cmp
jne
mov
cmp
jne
cmp
jne
pushl
mov
mov
call
mov
mov
mov
push
add
call
xor
cmp
je
mov
cmp
je
mov
cmp
jne
cmp
jne
pushl
mov
mov
call
movzwl
cmp
mov
mov
je
dec
cmp
mov
jne
mov
add
push
mov
call
pop
pop
pop
xor
pop
leave
ret
mov
mov
jmp
mov
mov
jmp
push
call
mov
neg
sbb
and
je
test
je
mov
test
mov
je
mov
push
call
xor
inc
ret
test
je
andl
xor
ret
push
mov
sub
push
lea
cmpl
jne
cmpl
je
andl
andl
push
lea
movl
movl
call
mov
test
jne
mov
jmp
mov
push
pushl
push
push
push
call
xor
pop
leave
ret
push
mov
push
push
test
jne
leave
ret
cmpl
movl
movl
jne
mov
test
je
mov
push
call
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
jne
lea
jmp
lea
push
call
pop
jmp
push
mov
decl
mov
je
pop
ret
movl
call
push
call
pop
xor
jmp
mov
test
push
je
and
mov
test
je
mov
test
je
test
js
mov
pop
ret
xor
jmp
push
mov
push
xor
cmp
push
mov
mov
jne
pushl
mov
pushl
pushl
push
pushl
call
pop
pop
pop
ret
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
push
mov
lea
movl
call
lea
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
mov
andl
cmpl
jne
lea
push
push
call
test
pop
js
push
mov
mov
push
pushl
push
call
mov
mov
push
call
pop
mov
pop
pop
pop
ret
mov
jmp
push
call
test
pop
je
push
mov
call
pop
test
je
mov
mov
mov
push
call
xor
ret
xor
jmp
push
mov
and
sub
cmpb
push
mov
push
push
je
pushl
pushl
push
mov
call
cmpl
mov
jne
mov
pop
pop
pop
mov
pop
ret
push
pushl
lea
push
push
call
pushl
lea
push
lea
push
push
call
mov
lea
movsl
movsl
add
cmpb
movsl
je
jmp
push
mov
decl
mov
jne
push
push
push
lea
mov
movl
call
mov
test
mov
jne
mov
test
mov
jne
test
jne
push
call
pop
pop
pop
xor
pop
pop
ret
lea
call
jmp
mov
test
je
mov
mov
test
mov
je
mov
push
call
xor
ret
push
mov
sub
mov
push
mov
mov
andl
cmp
je
mov
mov
mov
lea
push
mov
mov
mov
mov
push
mov
mov
call
test
je
mov
mov
mov
push
push
push
pushl
call
test
je
addl
jmp
mov
mov
call
test
jne
lea
lea
movsl
movsl
movsl
mov
lea
movsl
movsl
movsl
addl
mov
addl
cmp
jne
mov
lea
movsl
movsl
movl
movsl
pop
pop
mov
pop
leave
ret
mov
lea
call
test
jne
mov
mov
push
push
pushl
pushl
call
test
jne
jmp
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
push
xor
push
lea
mov
mov
movl
movl
mov
mov
call
test
js
mov
push
mov
call
pop
lea
push
lea
push
pushl
mov
call
test
jns
pushl
mov
call
testb
pop
jne
testb
jne
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
call
jmp
mov
mov
push
mov
push
pushl
push
call
test
jns
xor
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
mov
mov
test
movl
je
cmp
je
push
call
pop
mov
test
je
push
mov
test
je
push
call
pop
mov
mov
mov
push
lea
call
test
je
push
call
pop
pop
mov
test
jne
mov
test
je
mov
push
call
andl
pop
pop
ret
push
call
pop
jmp
push
mov
push
mov
movl
movl
movl
movl
movl
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
testb
je
push
call
pop
pop
mov
pop
pop
ret
push
mov
call
test
je
mov
test
je
mov
pop
jmp
mov
pop
ret
xor
pop
ret
mov
call
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
test
je
andl
mov
mov
test
je
mov
mov
push
call
xor
ret
mov
add
call
ret
mov
mov
mov
xor
and
xor
mov
mov
xor
and
xor
test
mov
jne
mov
ret
mov
mov
jmp
push
mov
jmp
mov
mov
call
cmp
je
mov
test
jne
jmp
mov
shr
and
pop
ret
push
mov
and
sub
push
push
push
pushl
mov
pushl
mov
pushl
push
pushl
call
cmp
mov
je
testl
jne
cmpl
jne
cmp
je
cmp
je
cmp
je
cmp
je
xor
push
lea
push
push
add
push
lea
xor
call
mov
pop
pop
pop
mov
pop
ret
xor
inc
jmp
cmpl
jne
cmpl
lea
setne
push
call
jmp
cmpl
je
jmp
push
mov
push
push
mov
lea
push
push
call
mov
lea
push
push
call
mov
sub
cltd
sub
sar
add
leave
ret
push
movl
andl
push
lea
andl
xor
call
push
mov
call
pop
mov
pop
ret
push
mov
push
push
push
push
push
lea
mov
mov
lea
lea
cmp
mov
je
mov
mov
test
je
mov
push
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
testb
mov
movl
je
push
call
pop
pop
mov
pop
pop
leave
ret
test
je
mov
push
call
test
je
mov
test
jne
mov
cmp
jne
movb
xor
ret
push
mov
push
mov
mov
test
mov
jne
push
push
call
test
pop
je
pushl
mov
call
mov
test
je
push
mov
call
mov
mov
call
test
js
lea
call
mov
pop
pop
pop
pop
ret
xor
jmp
push
mov
push
mov
test
jne
test
je
mov
mov
push
call
andl
lea
push
push
call
pushl
lea
call
leave
ret
push
mov
sub
push
mov
xor
cmp
jne
push
mov
cmp
je
mov
push
mov
cmp
jne
pop
pop
pop
leave
ret
movzbl
and
ret
mov
push
pushl
mov
mov
call
pop
ret
push
mov
and
push
mov
mov
push
mov
push
push
xor
cmp
mov
mov
mov
mov
je
mov
cmp
jne
xor
cmp
jne
mov
push
push
call
cmpb
je
lea
mov
movsl
movsl
movsl
movsl
xor
mov
mov
call
mov
call
test
jne
lea
mov
add
mov
add
mov
mov
add
add
pop
pop
mov
pop
mov
pop
ret
mov
jmp
push
push
push
mov
mov
or
cmpl
je
mov
test
jne
lea
orl
mov
inc
push
mov
call
test
je
inc
add
mov
call
test
pop
je
xor
pop
pop
pop
ret
lea
jmp
mov
push
mov
call
test
mov
mov
jne
push
call
test
jne
mov
push
mov
call
test
jne
xor
inc
ret
call
test
je
cmpl
jne
jmp
xor
ret
mov
push
xor
cmp
movb
movb
jne
push
lea
cmp
jne
mov
lea
cmp
jne
mov
lea
xchg
int3
inc
add
mov
add
pop
adc
pop
pop
je
push
lea
push
push
call
add
mov
pop
ret
push
mov
push
push
mov
mov
dec
cmp
push
ja
mov
jmp
cmpl
flds
fstps
jne
movl
flds
fstps
xor
inc
pop
pop
leave
ret
cmpl
mov
mov
jne
fildl
movl
fdivl
jmp
nop
sub
cmp
cmp
cmp
dec
cli
cmp
pop
cli
cmp
pop
cli
cmp
arpl
cmp
jbe
add
jge
cmp
push
cmpsb
add
lahf
cli
cmp
mov
cmp
cli
cmp
in
cmp
clc
cli
cmp
clc
cli
cmp
clc
cli
cmp
push
sti
cmp
push
mov
push
push
mov
mov
test
je
mov
cmp
jb
xor
push
call
mov
test
je
test
je
mov
push
call
test
jne
mov
pop
pop
pop
ret
xor
jmp
push
mov
push
push
call
test
pop
je
mov
mov
andl
cltd
movl
mov
mov
test
push
mov
je
mov
push
call
cmpl
je
pushl
mov
pushl
mov
push
call
mov
lea
call
mov
pop
leave
ret
xor
jmp
push
mov
mov
test
je
andl
mov
mov
push
call
andl
pushl
mov
pushl
call
pop
ret
push
mov
push
mov
andl
push
mov
push
lea
call
mov
lea
push
mov
pushl
push
call
test
mov
lea
js
mov
andl
mov
call
mov
pop
leave
ret
push
mov
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
pop
ret
push
mov
mov
sub
push
mov
lea
push
push
call
test
je
cmpl
push
mov
mov
ja
movl
mov
push
mov
test
jne
call
push
push
push
push
call
or
sub
je
mov
mov
mov
call
cmpl
je
mov
test
je
lea
mov
shl
mov
mov
dec
xor
div
mov
lea
push
mov
pushl
imul
pushl
inc
lea
mov
call
test
jne
mov
mov
and
or
shl
lea
and
or
mov
add
shl
and
push
or
push
mov
call
test
jne
imul
add
shr
add
movl
cmpl
mov
je
mov
pop
pop
pop
leave
ret
test
je
push
lea
push
push
call
test
je
jmp
push
mov
push
mov
call
testw
mov
jne
mov
push
call
test
jne
mov
push
call
pop
pop
ret
push
mov
mov
push
mov
cmp
jb
mov
cmp
jb
mov
test
jne
test
je
cmpl
je
mov
lea
push
call
andl
call
test
je
mov
test
push
je
mov
call
test
js
pop
pop
ret
mov
jmp
mov
jmp
push
mov
push
mov
push
mov
test
je
testw
push
mov
jne
push
push
lea
push
call
test
mov
js
pop
add
call
mov
call
push
call
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
test
je
mov
lea
push
push
call
test
js
cmpl
je
mov
lea
push
add
call
pop
leave
ret
mov
push
mov
call
pop
jmp
push
mov
test
je
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
push
call
pop
pop
mov
test
pop
je
push
mov
call
pop
mov
andl
andl
test
je
push
call
andl
pop
lea
call
lea
jmp
cmpl
je
mov
push
mov
call
cmpl
je
cmp
jne
lea
mov
cmp
jne
mov
push
mov
call
ret
push
mov
mov
sub
push
mov
test
je
mov
andl
push
mov
push
mov
lea
call
cmpl
jne
mov
mov
mov
inc
push
mov
lea
mov
test
mov
je
mov
call
test
js
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
mov
mov
pushl
lea
push
call
mov
add
cmp
ja
push
mov
pushl
lea
push
call
add
xor
test
js
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
push
mov
push
lea
push
mov
call
test
jne
and
mov
push
mov
call
xor
pop
pop
ret
push
decl
push
push
push
push
movl
movl
pop
je
mov
lea
pushl
call
mov
mov
mov
lea
pushl
call
pop
mov
mov
mov
pop
lea
mov
call
mov
cmp
jne
lea
cmp
in
add
pop
cmp
jecxz
add
cmp
push
mov
add
jle
add
jecxz
add
mov
add
ss
pop
pop
pop
lea
pop
add
jmp
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
mov
cmp
je
mov
push
call
mov
jmp
push
push
mov
lea
push
mov
call
test
jne
and
call
push
call
pop
xor
pop
pop
ret
xor
cmp
mov
je
push
mov
mov
cmp
mov
pop
jne
ret
push
mov
push
push
mov
andl
push
push
mov
lea
call
mov
xor
inc
test
je
mov
lea
push
push
push
call
cmpl
je
lea
call
mov
pop
leave
ret
mov
test
je
mov
dec
je
dec
jne
mov
mov
mov
xor
ret
mov
mov
jmp
cmpl
jne
push
push
call
test
pop
je
push
call
mov
test
je
mov
push
push
call
call
inc
add
pushl
mov
pushl
push
call
mov
mov
push
call
mov
pop
pop
ret
xor
jmp
cmpb
je
mov
cmp
jne
mov
cmp
je
xor
ret
xor
inc
ret
mov
cmpb
jne
cmpb
je
call
mov
mov
xor
ret
push
mov
sub
push
mov
testb
push
jne
mov
mov
mov
xor
mov
mov
mov
movb
mov
mov
mov
movl
mov
mov
test
je
mov
cmp
jge
mov
pushl
lea
call
incl
addl
jmp
mov
mov
mov
test
jne
and
mov
mov
mov
mov
shr
and
test
jne
xor
shr
push
push
push
push
pushl
pushl
pushl
pushl
push
call
mov
pop
pop
leave
ret
xor
jmp
lea
call
mov
test
je
mov
sub
sar
ret
xor
ret
push
mov
sub
mov
mov
andl
call
test
je
push
mov
push
mov
mov
mov
mov
add
mov
mov
mov
mov
push
mov
mov
call
test
je
mov
mov
mov
push
push
push
pushl
call
test
je
incl
jmp
mov
mov
call
test
jne
lea
lea
movsl
movsl
movsl
mov
lea
movsl
movsl
movsl
incl
mov
incl
cmp
je
mov
mov
cmp
je
mov
mov
push
push
pushl
pushl
call
test
je
jmp
mov
lea
movsl
movsl
movl
movsl
pop
pop
pop
mov
leave
ret
push
push
mov
push
lea
add
add
add
imul
mov
add
mov
call
mov
test
jne
mov
test
mov
jne
test
jne
pop
pop
pop
ret
push
mov
lea
call
lea
push
call
cmpl
pop
je
lea
push
call
pop
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
push
push
push
lea
push
lea
push
lea
push
mov
push
pushl
call
mov
add
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
cmp
push
jne
mov
pop
ret
push
mov
and
sub
push
xor
push
inc
cmpl
push
jg
jl
cmp
jb
mov
lea
push
push
call
test
je
mov
mov
mov
push
call
pushl
mov
pushl
lea
push
push
movl
movl
mov
call
pushl
mov
pushl
call
mov
test
pop
pop
jne
mov
lea
push
push
call
test
jne
cmpl
je
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
lea
push
push
push
call
add
jne
lea
call
lea
push
pushl
mov
pushl
movl
pushl
pushl
call
test
jne
mov
xor
movl
mov
movl
cmp
ja
mov
push
push
lea
call
xor
inc
mov
mov
mov
lea
mov
lea
mov
lea
mov
lea
mov
xor
lea
push
lea
push
mov
movl
movl
movl
mov
mov
mov
mov
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
lea
push
push
call
pushl
mov
pushl
call
pushl
pushl
call
pushl
dec
mov
add
out
or
add
test
jne
pushl
mov
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
mov
mov
push
call
test
jne
mov
lea
push
movl
movl
mov
mov
push
call
pushl
mov
pushl
call
test
pop
pop
jne
call
push
push
pushl
lea
pushl
push
push
call
call
test
jne
mov
xor
cmp
ja
lea
call
test
jne
cmpb
je
mov
mov
dec
jns
lea
call
lea
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
andl
andw
push
push
push
pop
mov
lea
lea
push
mov
mov
mov
push
movl
mov
call
test
js
push
push
mov
lea
call
lea
mov
lea
mov
mov
lea
mov
mov
mov
mov
lea
push
xor
push
mov
mov
movb
movl
in
inc
add
decl
add
add
test
incl
add
add
int3
mov
movb
call
mov
lea
push
push
push
call
add
test
lea
jne
mov
lea
mov
lea
push
lea
push
mov
call
push
push
lea
call
pushl
mov
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
xor
pop
mov
pop
xor
pop
call
add
leave
ret
push
push
push
lea
call
jmp
jmp
push
mov
push
push
push
mov
mov
test
jne
cmpl
je
testb
je
mov
test
je
mov
push
call
testb
je
cmpl
jne
lea
mov
push
call
add
mov
test
jne
xor
test
jg
pop
pop
xor
pop
pop
ret
mov
jmp
xor
mov
mov
call
andl
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
call
add
repz
jmp
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
mov
mov
test
push
je
mov
test
je
mov
lea
mov
call
cmp
jne
mov
cmp
jne
mov
cmp
jne
pop
ret
xor
jmp
mov
push
push
call
jmp
mov
pop
ret
push
mov
push
push
mov
test
je
mov
test
je
cmpl
je
call
cmp
je
andl
testl
jne
mov
cmp
mov
lea
jg
lea
mov
cmp
jl
pop
pop
pop
ret
mov
push
pushl
mov
call
cmp
jne
mov
jmp
cmpl
je
push
mov
push
call
lea
cmpl
jne
push
call
test
pop
je
movl
movl
mov
andl
mov
test
je
mov
push
call
mov
test
mov
jne
mov
test
je
lea
call
test
je
mov
mov
mov
mov
push
call
xor
pop
pop
ret
xor
jmp
pushl
mov
push
pushl
call
ret
mov
push
pushl
mov
mov
call
pop
ret
movl
movl
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
pop
ret
push
mov
andl
cmpl
jne
push
push
call
test
pop
je
mov
call
mov
test
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
mov
call
test
pop
je
mov
call
mov
test
je
mov
push
call
pushl
mov
push
push
pushl
pushl
pushl
pushl
pushl
push
call
mov
test
js
mov
mov
xor
test
jne
mov
pop
pop
pop
ret
xor
jmp
push
mov
xor
cmp
push
mov
je
push
mov
push
mov
cmp
mov
jne
cmpl
je
mov
test
jne
mov
andl
lea
mov
call
pop
pop
mov
pop
pop
ret
mov
jmp
mov
call
cmp
jne
mov
mov
xor
cmp
sete
cmp
jne
push
pushl
call
call
push
mov
lea
call
jmp
cmpl
je
push
mov
cmp
jae
mov
mov
sub
mov
mov
call
test
jne
pop
mov
ret
int3
int3
int3
int3
int3
cmpl
jbe
push
xor
lea
mov
mov
mov
mov
push
call
add
add
cmp
jb
pop
mov
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
lea
push
mov
push
lea
cmp
je
mov
add
test
jne
cmp
jne
mov
call
lea
call
mov
call
lea
call
lea
call
lea
call
lea
lahf
iret
inc
add
cmpb
mov
je
mov
add
push
call
mov
mov
push
call
add
mov
push
call
add
pop
pop
pop
pop
ret
cmpl
je
jmp
mov
test
push
jne
mov
test
jne
pop
ret
mov
mov
push
call
pop
mov
test
je
jmp
mov
mov
push
call
test
pop
mov
je
jmp
push
mov
push
push
test
je
push
mov
push
test
je
mov
pushl
mov
mov
call
mov
test
pop
jne
pushl
call
pop
jmp
mov
test
jne
mov
test
jne
mov
test
jne
mov
test
je
pushl
mov
call
push
call
test
pop
pop
mov
jne
mov
test
je
pushl
mov
call
push
call
test
pop
pop
mov
jne
lea
call
lea
add
incl
add
pop
pop
jne
mov
test
je
cmpl
lea
sete
push
push
push
call
add
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
pushl
call
mov
add
test
jne
push
call
pop
leave
ret
lea
andl
jmp
lea
andl
mov
mov
push
call
pop
jmp
push
mov
push
push
mov
test
movl
movl
je
call
mov
lea
mov
mov
push
mov
test
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
lea
insb
loope
add
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
mov
test
pop
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
pop
ret
lea
push
call
pop
test
jne
push
call
pop
jmp
lea
call
jmp
mov
test
push
jle
mov
xor
mov
cmp
je
inc
add
cmp
jl
or
pop
ret
xor
inc
test
je
mov
movl
mov
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
add
repnz
add
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
sub
adc
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
add
dec
add
add
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
add
data16
add
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
add
jnp
add
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
data16
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
faddl
fxch
adc
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
add
mov
jl
lret
adc
adc
add
mov
xchg
fxch
adc
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
add
adc
movl
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
add
or
int3
fcmove
adc
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
add
cmp
add
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
leave
data16
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
add
add
add
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
add
lds
add
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
data16
adc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
add
rolb
add
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
data16
adc
mov
mov
mov
mov
add
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
movl
mov
mov
mov
jmp
mov
test
push
push
je
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
push
call
mov
mov
xor
pop
pop
ret
add
mov
test
jne
jmp
add
push
push
je
cmpl
je
mov
push
call
test
pop
je
mov
mov
movl
andl
andl
mov
lea
mov
mov
mov
mov
mov
push
call
test
mov
mov
mov
mov
mov
mov
mov
mov
je
lea
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
xor
pop
pop
ret
xor
jmp
push
mov
push
mov
push
mov
xor
cmp
push
push
je
mov
mov
cmp
je
mov
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
mov
and
call
test
je
lea
xor
cmp
mov
je
mov
push
mov
call
cmpl
jne
mov
test
jne
mov
andl
and
push
pushl
lea
call
cmpl
jne
mov
test
jne
mov
incl
test
jne
testb
je
push
call
test
pop
je
mov
mov
shr
and
and
push
push
mov
call
mov
test
je
call
push
push
push
push
call
incl
orl
mov
incl
mov
test
jne
mov
cmpl
je
mov
push
call
mov
xor
test
js
or
mov
mov
xor
pop
pop
pop
leave
ret
cmpb
je
cmpb
je
call
push
push
push
push
call
cmp
jbe
test
jne
jmp
orl
mov
incl
jb
inc
add
jmp
mov
jmp
mov
jmp
push
mov
sub
push
push
xor
push
mov
mov
cmp
mov
mov
mov
jne
lea
push
lea
push
push
pushl
call
mov
test
jne
mov
lea
push
push
call
mov
mov
cmp
je
cmp
je
andl
test
jne
lea
push
pushl
pushl
call
mov
cmpl
jne
cmpl
je
mov
and
jne
push
pushl
mov
pushl
call
test
jne
mov
pop
pop
pop
leave
ret
cmpl
jne
jmp
push
mov
push
call
pop
push
push
call
cmpl
pop
jne
ret
mov
push
pushl
mov
mov
mov
add
pop
ret
push
mov
lea
mov
or
lock
dec
jne
movl
mov
test
movl
jne
mov
test
mov
jne
test
jne
push
call
pop
xor
pop
ret
push
push
mov
or
push
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
jne
lea
mov
cmp
jne
lea
mov
cmp
mov
jne
lea
mov
cmp
jne
lea
mov
cmp
jne
pop
pop
pop
ret
andl
push
push
push
push
pop
mov
xor
push
pop
mul
seto
neg
or
push
call
pushl
mov
mov
call
mov
xor
push
mov
pop
mov
mul
seto
movl
neg
or
push
call
pushl
mov
call
add
mov
pop
mov
pop
movl
mov
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mul
seto
push
push
mov
push
neg
or
push
call
mov
mov
mov
push
call
xor
mov
mov
mov
mul
seto
mov
neg
or
push
call
mov
mov
push
call
mov
movl
or
xor
mov
mov
xor
mov
mov
mul
seto
mov
mov
mov
mov
mov
mov
neg
or
push
mov
call
mov
mov
push
call
mov
mov
movl
add
cmp
mov
mov
jne
mov
pop
pop
pop
add
ret
mov
cmp
je
push
mov
call
add
cmp
je
insb
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
adc
add
je
cmp
je
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
add
ret
push
mov
push
push
jmp
push
pushl
push
pushl
pushl
pushl
call
add
cmp
je
ret
mov
movzbl
test
jne
mov
sub
push
push
lea
push
push
call
into
mov
mov
int3
divl
add
push
add
xchg
add
test
add
into
add
add
rcrb
nop
addl
sbbb
mov
mov
add
loopne
add
add
lcall
inc
in
push
push
push
push
lea
push
call
insb
int3
jb
lret
call
cmc
add
pusha
xchg
add
mov
jns
add
add
leave
add
leave
mov
add
sti
sub
pop
push
push
push
push
lea
push
lea
push
push
lea
push
call
jecxz
add
jnp
in
add
add
add
xchg
push
add
addl
add
fld
add
add
ja
in
call
push
push
push
push
push
push
call
loopne
add
popl
jo
cwtl
iret
mov
jne
add
jne
imul
lods
bound
mov
into
add
ja
incb
jns
add
sub
pop
push
call
push
push
push
push
push
lea
push
call
lret
je
push
xchg
add
scas
add
add
add
je
clc
xchg
push
movsl
mov
movsb
ljmp
aad
jns
sub
pop
push
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
add
jl
add
add
jmp
add
add
add
xchg
je
add
fidivl
roll
add
lods
mov
pop
add
movsl
mov
add
lods
add
xchg
in
fdivr
lcall
outsb
push
add
push
push
push
push
push
call
movsl
sbbl
mov
sahf
movsl
add
xlat
pusha
addb
add
pop
add
mov
in
push
add
jl
add
add
add
add
add
stos
std
mov
lcall
out
add
add
or
xorps
push
push
push
lea
push
push
call
add
add
rcrl
pop
enter
arpl
in
add
in
jbe
add
mov
fdivrl
push
fadds
push
add
jge
add
add
xchg
add
jl
add
push
add
add
add
je
in
fcomps
push
push
push
push
lea
push
push
lea
push
lea
push
call
in
ret
orb
enter
cwtl
arpl
mov
push
add
scas
mov
mov
add
aad
add
add
popw
hlt
pusha
cltd
add
add
lcall
inc
hlt
push
push
push
call
add
add
add
lret
outsl
add
add
add
cwtl
lret
add
xchg
mov
enter
rolb
repnz
sub
pop
mov
push
push
lea
push
lea
push
call
loope
stos
arpl
add
incb
add
ljmp
add
fcoms
popa
add
in
pop
js
call
incb
add
jnp
lret
sub
pop
add
push
push
lea
push
push
push
lea
push
push
push
lea
push
lea
push
call
shlb
outsl
mov
add
test
jp
add
lret
imul
add
add
push
add
add
add
ret
add
add
add
push
push
lea
push
push
call
mov
lods
ljmp
add
add
xchg
mov
popa
into
repnz
add
add
call
fmul
div
mov
add
popf
jb
fwait
stc
add
iret
lock
lahf
add
add
gs
push
mov
icebp
cli
add
aam
sub
pop
mov
xor
push
push
shl
add
push
or
not
add
shl
sub
sub
xor
pop
lea
sub
not
inc
pop
push
push
call
add
std
add
add
rolb
add
stc
add
nop
jge
add
test
add
mov
add
out
add
add
loop
jecxz
add
scas
lds
adcb
cmpsb
sub
pop
pushl
push
push
push
lea
push
push
push
call
mov
bound
add
fucomip
push
add
add
stos
incb
in
pop
ret
add
lret
add
mov
add
add
js
add
clc
mov
lds
gs
pop
call
push
push
push
lea
push
push
push
call
add
mov
add
in
add
add
lret
add
xor
add
add
add
aad
test
pop
mov
data16
lock
mov
cmpsl
add
add
jo
bnd
roll
mov
mov
pop
sub
pop
mov
push
push
push
lea
push
push
push
push
push
push
call
add
mov
add
add
add
addr16
add
stos
add
sti
add
hlt
cmpsl
mov
mov
add
in
sub
pop
movl
push
push
lea
push
push
push
push
push
call
ror
add
rolb
cmc
add
pusha
mov
add
jecxz
sub
imul
add
icebp
mov
outsl
add
insb
add
add
sub
pop
lea
push
push
call
add
xchg
iret
popl
fstl
add
stos
add
add
add
mov
add
sti
loope
popa
mov
mov
out
add
loopne
jge
xchg
mov
in
lea
test
push
add
push
clc
lock
add
add
lods
add
push
push
push
push
push
lea
push
call
lret
fs
mov
add
add
jl
xchg
stos
scas
add
js
je
pop
push
ja
bound
rorb
testb
into
int3
jnp
stos
out
add
rolb
roll
jne
push
push
push
push
push
push
push
push
call
add
add
mov
mov
mov
in
call
lret
insb
add
add
out
jo
incb
scas
lock
add
cmpsl
add
add
mov
mov
add
clc
add
jmp
mov
add
add
mov
add
add
add
sub
pop
pushl
push
push
push
call
ret
mov
roll
push
jecxz
add
add
icebp
mov
cmpsl
add
loopne
mov
mov
hlt
pop
call
pushl
push
push
push
push
lea
push
push
push
call
into
cwtl
push
add
xchg
add
jp
mov
pop
ja
add
rolb
rolb
mov
add
bound
push
push
add
test
popa
add
aad
pop
stos
roll
add
mov
mov
add
imulb
add
add
jo
leave
add
pushl
push
push
push
call
fsubs
pushf
add
cld
mov
lahf
mov
add
mov
add
js
lret
lea
out
add
int
push
lret
cwtl
mov
jne
add
push
push
push
sub
add
sub
shr
shl
sub
shl
ror
pop
not
shr
sub
sub
pop
push
push
push
push
lea
push
lea
push
lea
push
push
call
add
iret
test
repnz
add
loope
add
xchg
fcomps
add
add
loop
jbe
mov
pop
arpl
add
lcall
jne
push
push
push
call
testb
int
add
sti
addl
mov
stos
pusha
lea
add
jle
mov
add
add
addb
test
add
divl
rolb
push
add
idiv
pop
jae
popa
mov
add
hlt
lcall
les
push
push
push
call
cli
add
mov
mov
rol
add
add
out
fwait
mov
stc
add
add
add
add
int3
imul
jecxz
mov
jns
out
add
add
mov
pop
les
sbbb
add
add
lcall
inc
push
push
add
xor
push
and
add
shl
sub
shl
sub
xor
rol
shr
pop
pop
push
push
push
push
call
jbe
incb
add
add
add
stc
add
mov
in
push
test
add
add
add
add
mov
add
push
popf
mov
pusha
ret
into
popa
lcall
int3
mov
sub
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
lods
add
add
mov
jno
addb
add
imul
popa
cmc
jnp
mov
add
mov
lods
mov
call
out
add
add
in
in
stc
add
int3
mov
in
lcall
rclb
push
cmp
push
push
push
lea
push
call
add
push
add
add
add
add
add
icebp
or
add
add
xchg
push
xchg
add
add
fs
add
jmp
add
call
add
test
add
jo
mov
in
mov
sub
pop
mov
push
lea
push
push
push
push
push
push
push
lea
push
push
call
call
rcll
mov
add
add
sar
mov
push
lcall
add
add
add
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
hlt
add
cmpl
popf
pop
mov
add
add
add
ja
jmp
add
add
in
mov
and
add
xchg
mov
add
mov
push
ficoms
fcompl
push
push
push
push
push
call
test
add
jo
add
add
jae
les
add
mov
add
push
add
pop
mov
in
in
lcall
pop
hlt
push
push
push
push
push
push
lea
push
push
call
xlat
add
test
arpl
jb
add
add
popa
ja
add
jns
mov
add
add
fnstsw
loopne
lcall
pop
in
push
push
lea
push
push
lea
push
push
push
call
add
cmc
xlat
jnp
loop
jnp
sti
add
add
add
lods
jne
add
add
mov
in
sub
pop
add
add
push
push
push
push
push
push
lea
push
push
push
call
mov
icebp
std
int3
jmp
call
addr16
scas
lods
add
aam
pop
nop
add
mov
addl
jae
add
mov
mov
leave
add
add
xchg
add
add
add
test
add
add
lcall
xor
scas
push
push
lea
push
push
push
push
lea
push
push
push
call
fiadds
into
add
iret
out
add
bound
add
mov
add
mov
add
popa
xor
add
xchg
stc
add
rclb
rolb
add
lcall
jne
push
push
lea
push
push
lea
push
call
imul
call
loope
xchg
cmc
xchg
add
scas
lahf
lods
loopne
xchg
aam
in
cld
add
add
scas
jnp
add
add
shrl
rolb
in
add
add
add
lcall
inc
or
scas
push
push
lea
push
push
lea
push
push
call
data16
sahf
in
addr16
lods
push
mov
aad
ljmp
xchg
pop
add
push
stos
jge
add
add
mov
add
sub
pop
add
push
lea
push
push
push
push
lea
push
call
push
mov
add
pop
add
in
test
fbld
std
add
add
mov
rcl
jl
lcall
add
lcall
push
push
lea
push
push
lea
push
push
push
push
call
add
add
testl
repnz
scas
add
add
movsb
cltd
add
fildl
outsl
imul
add
out
movl
add
mov
push
push
lea
push
lea
push
call
mov
add
jno
lods
add
add
pushf
jl
add
jl
mov
mov
mov
lods
lahf
jnp
jno
add
xlat
add
add
fidivrs
nop
imul
in
hlt
lcall
or
push
push
push
push
push
lea
push
push
call
rcl
add
add
xchg
jno
add
mov
add
add
add
add
addb
add
pop
mov
js
add
lahf
add
add
in
in
add
push
push
push
call
jl
push
shll
add
movsl
rcl
les
add
mov
add
add
add
add
sbb
popf
add
mov
add
add
jne
push
add
mov
lods
cld
fildl
lcall
push
push
push
lea
push
push
call
in
xchg
ja
mov
stos
push
movb
add
add
roll
xchg
arpl
mov
mov
add
xchg
in
add
mov
add
add
mov
ret
roll
inc
or
scas
push
push
push
push
call
jne
lds
lcall
fistl
add
js
mov
lcall
add
jge
add
add
in
roll
mov
lock
fwait
mov
rcrl
fs
loopne
movsb
mov
add
add
fisubrs
stc
movb
sub
pop
push
push
push
push
push
call
mov
popf
lret
test
jb
enter
mov
add
add
push
add
xchg
mov
js
xchg
add
sti
insb
enter
int3
rolb
add
pushf
rolb
lcall
movsb
push
lea
push
push
call
pop
rolb
div
add
add
jb
add
into
xchg
xchg
add
arpl
add
data16
outsl
add
lea
fisubl
add
js
add
add
mov
pop
lea
sub
pop
pop
push
push
push
push
lea
push
push
push
push
call
sti
pop
ja
add
push
rolb
rcrl
mov
movsb
popa
jne
loop
pop
add
fs
add
in
pop
leave
add
add
in
movsb
into
pop
mov
movb
fildl
loope
mov
je
add
jo
test
mov
add
jae
add
jecxz
add
loopne
lcall
pop
hlt
add
push
push
push
push
push
push
lea
push
push
push
lea
push
call
in
enter
mov
pop
mov
int
lds
imul
add
popl
hlt
jo
add
add
add
cwtl
repnz
jae
mov
cmpsl
add
mov
add
push
add
add
pop
add
into
xchg
add
icebp
xchg
je
loopne
int
push
sub
pop
add
push
push
push
push
push
call
add
jge
lods
js
loop
xchg
icebp
int3
outsl
mov
xchg
out
add
jp
mov
fildl
add
jnp
mov
add
xchg
add
pop
add
scas
cld
add
shrl
loope
add
add
test
mov
mov
add
aam
fcompl
xchg
scas
sub
pop
add
push
push
lea
push
push
lea
push
push
push
push
call
pop
ljmp
jne
sbb
add
add
cli
add
jmp
add
add
add
lcall
mov
add
pop
loop
jb
lods
xchg
inc
and
scas
push
push
push
push
call
stos
push
mov
push
add
add
ja
add
mov
mov
add
add
mov
cld
add
jbe
pusha
pop
fmulp
test
xchg
jl
add
push
add
add
out
scas
add
pop
add
add
lcall
mov
xor
push
push
push
push
lea
push
lea
push
push
push
call
fdivrs
mov
xchg
add
pop
add
add
loope
add
add
jns
add
mov
add
add
mov
add
pop
add
add
sub
pop
mov
push
push
push
lea
push
push
call
jle
int
std
repnz
add
add
add
add
lcall
add
add
add
add
int3
add
add
mov
add
mov
pushf
add
je
mov
add
mov
in
lock
xor
push
push
call
in
gs
imul
jo
pop
add
cltd
pop
cmpsl
add
cwtl
add
xchg
add
fucomp
lds
pop
lcall
add
add
push
push
add
add
xchg
add
add
add
in
out
add
les
add
push
push
push
push
push
lea
push
lea
push
call
xacquire
les
aad
mov
push
fwait
arpl
call
ret
fdivr
jb
add
mov
addl
add
mov
push
add
mov
cld
jbe
push
add
add
enter
fwait
push
add
mov
stos
mov
lods
roll
in
cld
add
in
add
push
push
push
call
rcl
stos
outsl
cltd
neg
add
add
mov
xchg
jnp
popa
je
add
fldenv
add
loop
pop
scas
sti
mov
mov
std
jbe
cli
popa
in
add
fwait
add
add
add
roll
addr16
add
mov
movsb
add
mov
lret
les
rorl
stos
push
ror
sub
push
and
add
lea
ror
sub
not
pop
sub
sub
pop
push
lea
push
push
call
add
in
lahf
sti
popl
add
add
add
add
test
in
push
add
into
add
add
add
add
loope
lret
add
add
testl
outsl
sti
lock
add
add
add
mov
add
hlt
lcall
jne
push
push
lea
push
push
push
call
out
test
add
add
mov
add
cmpsb
add
add
jae
lret
add
pop
fwait
add
jbe
mov
sahf
into
mov
pushf
add
ljmp
filds
scas
iret
bound
in
add
add
addb
pop
call
push
push
push
sub
sub
push
and
add
shr
sub
xor
sub
add
pop
dec
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
leave
aad
pushf
add
fiadds
arpl
add
mov
add
pop
add
lcall
pushf
je
imul
lcall
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
fdivr
add
push
push
push
lahf
in
pop
pop
je
loopne
add
cmpsl
je
testb
xchg
mov
test
pop
mov
out
jmp
sahf
push
xchg
into
jp
mov
pop
mov
test
pop
push
push
lea
push
push
push
push
push
call
add
mov
add
add
mov
add
add
add
add
data16
add
add
add
add
lcall
rclb
roll
or
ljmp
call
add
shl
mov
add
in
add
adc
add
xchg
xchg
add
add
add
add
push
push
shl
rol
pop
mov
push
push
push
push
push
push
call
test
nop
jecxz
add
je
add
add
rolb
push
jae
add
sbbb
add
add
add
in
mov
add
add
jmp
add
add
fs
aad
add
lcall
pop
in
push
push
push
lea
push
call
cltd
enter
mov
add
imul
add
add
cwtl
add
add
mov
push
cmpb
lcall
ret
add
add
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
lahf
cli
filds
add
jecxz
test
lcall
mov
push
int
mov
add
add
xchg
add
add
testl
fdivr
lcall
ret
sub
add
fisubrl
fadd
lret
add
mov
xor
push
push
lea
push
call
add
je
xchg
mov
xchg
add
movsl
xchg
adcb
nop
push
test
add
add
lcall
jb
test
int
stos
jne
sub
pop
add
push
push
pop
mov
xor
push
push
push
push
call
add
in
add
add
add
mov
add
add
jns
xchg
add
add
push
add
add
popa
mov
add
add
mov
outsl
popf
push
in
add
int
add
shlb
cmpsb
into
roll
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
push
call
add
pop
add
add
js
mov
mov
jmp
jmp
std
mov
mov
mov
popa
subb
bound
lcall
mov
xor
push
add
lea
dec
inc
pop
rep
push
sub
not
shr
lea
pop
mov
push
push
push
push
lea
push
call
insb
add
cmpsl
push
add
jae
arpl
in
xchg
hlt
jno
add
jecxz
add
jns
mov
add
pop
add
add
mov
sub
pop
xor
push
push
push
lea
push
call
imul
add
jnp
xchg
adc
pop
int3
arpl
imul
add
add
jbe
add
add
lcall
les
ror
shr
rol
pop
or
je
mov
xor
push
sub
shr
sub
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
push
call
cld
mov
imul
add
push
into
lock
shll
add
cwtl
mov
xchg
pop
leave
out
mov
add
mov
out
add
xlat
mov
movb
sbb
call
add
mov
sub
pop
xor
push
lea
push
lea
push
push
push
push
call
add
add
out
subl
out
mov
pop
add
cmpsb
ljmp
add
add
xorl
jmp
scas
add
roll
jnp
add
mov
add
les
add
push
push
push
call
jbe
add
stos
add
add
add
cmpsb
add
test
add
add
pop
add
push
lret
mov
in
iret
cmpsb
add
mov
in
hlt
pop
add
add
push
push
push
push
call
lahf
mov
add
fstps
add
add
push
add
add
je
sar
lcall
clc
add
add
cwtl
je
stos
clc
add
movsl
icebp
fs
pop
push
push
push
call
addl
leave
add
push
xchg
into
shr
lods
mov
out
mov
icebp
jmp
mov
xchg
mov
add
fwait
cld
mov
jle
hlt
add
lcall
inc
or
lods
mov
jle
push
push
lea
push
push
lea
push
push
push
call
scas
add
add
add
add
rcl
add
cld
jge
fcompl
cmpsb
add
add
push
jmp
incb
lcall
add
sub
pop
xor
push
push
lea
push
lea
push
call
loope
add
add
lea
xlat
add
mov
add
add
mov
jo
cwtl
lcall
add
add
jbe
add
imul
leave
push
pop
out
cltd
into
in
aam
fistpll
xchg
add
les
push
push
push
push
push
push
push
call
xchg
pusha
pop
mulb
jle
addl
xchg
add
mov
insb
fs
fmull
pop
rcll
add
add
movsb
lcall
add
jge
add
add
jge
add
add
sub
pop
add
push
add
dec
pop
pop
rep
push
push
push
push
push
push
lea
push
lea
push
push
call
push
cltd
mov
add
imulb
clc
jo
add
add
xchg
add
mov
mov
int
add
add
push
add
jns
cmpsl
jmp
add
add
imul
add
add
cld
outsl
jp
enter
mov
pop
cwtl
pop
in
add
pop
mov
xor
push
inc
pop
or
je
push
rol
dec
pop
mov
add
push
add
sub
inc
pop
add
rep
push
lea
push
push
push
push
push
push
call
add
add
pop
add
mov
ror
add
add
add
std
mov
mov
in
jp
add
mov
mov
pop
fwait
in
mov
arpl
jno
sub
pop
pop
push
push
ror
push
or
inc
add
lea
sub
inc
not
sub
shl
pop
inc
pop
push
inc
pop
pop
push
add
pop
mov
push
push
call
out
add
sahf
fdivrl
out
negb
lret
jnp
test
clc
add
lahf
add
rclb
aam
loope
xchg
out
add
add
in
out
pusha
add
add
add
loop
cltd
xchg
mov
sti
add
int3
add
fbld
ja
add
lret
mov
scas
sti
loop
je
add
incb
add
in
clc
lcall
insl
hlt
push
push
push
lea
push
push
call
mov
mov
add
mov
add
pushf
je
movsb
mov
push
add
rorb
add
add
jo
mov
add
fiaddl
lcall
inc
and
push
lea
push
push
call
add
sti
clc
add
aad
mov
mov
enter
add
cli
add
add
in
add
push
push
mov
add
cli
imul
movl
add
jb
jge
add
stos
fists
arpl
test
addb
add
lcall
loopne
push
dec
pop
mov
push
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
call
add
lods
bound
aad
add
mov
add
mov
add
hlt
add
add
sub
pop
push
push
push
rol
add
dec
pop
push
push
dec
pop
mov
pop
push
push
push
call
fst
mov
add
xchg
jnp
shrl
pop
add
add
add
testl
add
add
leave
add
add
add
popl
mov
add
test
add
add
add
add
in
hlt
pop
pop
push
pop
pop
push
lea
push
push
call
mov
add
rcrb
fucomi
into
jl
faddl
jge
xchg
xchg
mov
jbe
sahf
loopne
addb
add
ja
xchg
fidivs
mov
lret
mov
in
hlt
lcall
push
push
lea
push
push
push
push
push
push
push
push
call
add
nop
lahf
mov
push
fldl
add
arpl
add
neg
pop
les
jns
push
mov
jb
add
add
out
imul
rcll
mov
jmp
add
pop
add
add
add
add
call
cltd
outsl
sub
pop
leave
push
push
push
push
lea
push
push
push
lea
push
push
push
call
pop
add
add
mov
shlb
add
add
addl
ja
pushf
fcmovu
fnstsw
stos
imul
aam
pop
out
lock
add
add
pop
add
mov
mov
add
cwtl
pop
repnz
add
out
push
mov
add
add
sub
pop
ret
push
push
add
rol
pop
mov
push
ror
sub
sub
dec
pop
add
push
push
push
lea
push
push
lea
push
push
lea
push
call
repnz
into
std
testb
test
outsl
mov
jo
mov
add
add
mov
fiaddl
cld
add
stos
scas
rolb
pop
mov
push
icebp
in
add
rcl
add
movsl
add
xchg
popa
sub
pop
push
push
dec
pop
push
push
push
push
push
call
stos
add
fiadds
mov
call
movl
jmp
add
add
shr
jl
stos
jns
repnz
add
add
add
hlt
call
add
lock
push
push
sub
pop
push
push
push
push
call
add
out
stos
add
cmpsl
mov
fadds
test
add
mov
sahf
xorb
loop
test
add
arpl
push
add
fisubs
add
add
sub
pop
movl
push
add
rol
pop
addl
test
je
push
push
lea
push
lea
push
push
push
push
push
call
add
sti
add
mov
je
xchg
mov
mov
aam
add
add
jbe
fwait
add
mov
add
lcall
inc
or
mov
push
push
call
neg
add
enter
jae
mov
mov
xchg
add
out
push
cli
add
pop
movl
lcall
add
add
mov
icebp
addl
add
sub
pop
pop
push
lea
pop
pop
push
rol
shr
pop
pop
push
sub
sub
add
pop
pop
push
sub
add
lea
pop
leave
push
push
lea
push
push
push
push
push
call
add
add
pop
mov
add
add
add
int
add
out
add
push
lcall
jne
test
push
add
add
jno
jle
enter
mov
in
in
lcall
add
push
push
not
pop
mov
push
push
call
fiadds
sti
int
add
loope
add
add
xlat
add
jmp
loope
add
lock
cwtl
jnp
mov
add
lcall
cld
push
push
push
push
call
in
add
call
bound
mov
xchg
xchg
adc
sti
imul
js
test
divb
mov
add
aam
add
test
xlat
add
mov
lock
lcall
push
push
call
mov
test
fsts
add
push
add
xorb
add
pop
scas
add
mov
add
jmp
pop
popa
imul
push
push
lea
push
push
push
lea
push
call
loopne
test
add
add
add
mov
outsl
add
sahf
call
int3
cmpsb
pop
faddl
outsl
add
pop
add
lcall
push
dec
pop
push
push
push
push
call
add
test
ja
pop
jge
testl
add
repnz
lret
rolb
cli
add
add
jno
test
out
add
int3
add
add
rol
pop
push
mov
add
sub
pop
testl
push
ror
shr
add
pop
addl
push
push
push
push
push
push
lea
push
push
call
bound
fdivp
pop
add
out
pop
add
icebp
add
cli
aad
add
mov
jecxz
add
test
jge
add
andl
add
add
clc
in
test
scas
mov
add
add
out
pop
sub
pop
push
push
shl
ror
pop
call
mov
push
lea
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
mov
add
lahf
xchg
mov
add
add
push
scas
add
add
jne
push
push
push
push
push
call
cld
add
in
mov
add
jne
xchg
lock
loopne
rclb
add
add
add
add
mov
sub
pop
push
push
push
push
push
call
add
fbstp
push
shll
pop
popa
mov
add
add
jecxz
add
in
mov
sti
add
mov
add
loop
xchg
add
mov
hlt
lcall
pop
clc
incl
test
call
pop
pop
push
xor
pop
pop
push
add
not
not
pop
pop
push
inc
xor
lea
pop
pop
push
ror
ror
rol
pop
leave
push
push
lea
push
push
push
push
push
push
call
jge
add
jecxz
xchg
shlb
add
jl
pop
xchg
mov
add
add
test
addl
mov
push
add
add
mov
add
sub
pop
ret
push
push
push
call
iret
sti
add
jecxz
jne
add
bound
scas
add
add
outsl
enter
add
jge
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
add
fisubrs
add
mov
or
mov
in
out
not
mov
testl
mov
add
in
pop
divl
js
add
imul
roll
mov
mov
scas
add
xchg
add
add
add
add
mov
cmpsl
fscale
test
faddl
lcall
in
push
sub
shr
add
pop
add
push
push
push
push
push
call
add
fstpt
jle
lods
ljmp
imul
loope
popa
add
jle
mov
int
sub
pop
push
push
add
xor
shr
ror
pop
push
push
push
sub
sub
shl
pop
movl
push
ror
xor
pop
push
call
push
push
push
push
push
call
add
xchg
add
add
cltd
les
out
cwtl
mov
add
fs
add
add
std
push
movsl
cwtl
add
mov
lcall
adc
push
mov
je
sbbl
rolb
xchg
fiaddl
xlat
sti
add
add
in
lret
data16
mov
add
mov
hlt
pop
gs
push
mov
mov
mov
xchg
mov
mov
sarb
jp
add
push
add
jnp
in
hlt
pop
call
push
sub
inc
sub
pop
subl
push
push
lea
push
lea
push
push
push
call
fists
stos
ja
js
add
jo
mov
add
pop
flds
add
mov
outsl
mov
fsubs
stc
mov
loopne
add
cltd
add
movsb
jnp
in
call
cmpl
jne
pop
push
not
lea
ror
pop
pop
pop
push
push
push
call
add
cmc
decb
push
add
add
push
add
cld
jecxz
out
add
push
add
mov
add
pop
stc
mov
add
cld
mov
mov
sub
pop
pop
leave
push
add
not
pop
ret
push
push
push
push
call
scas
iret
push
xor
add
xchg
add
push
lret
add
pop
lods
xchg
fldl
cld
movsb
add
and
in
shlb
loopne
popl
cld
jmp
mov
push
push
push
lea
push
lea
push
push
push
call
fwait
pop
jle
mov
add
imul
cmpsb
fcomps
add
movl
pop
add
add
out
add
insb
lods
mov
add
stos
fbld
cmpsl
data16
push
add
add
mov
push
int3
push
add
add
push
mov
push
clc
test
out
lahf
enter
add
scas
add
repnz
lcall
cld
push
push
ror
xor
pop
push
push
push
add
pop
push
push
push
shl
push
push
pop
add
not
sub
pop
dec
pop
push
sub
not
pop
pushl
push
shl
lea
add
pop
call
call
push
push
push
push
lea
push
call
push
jl
pop
jo
imul
lcall
add
mov
mov
fsubs
push
iret
jmp
mov
add
add
xchg
sub
pop
mov
push
shl
shr
sub
pop
lea
push
xor
pop
sub
push
shr
not
not
pop
mov
push
add
add
dec
pop
shr
add
push
xor
xor
dec
pop
mov
push
add
lea
shr
shl
pop
mov
add
push
push
push
push
call
int3
mov
mov
add
add
movsb
add
add
pusha
push
lret
add
add
add
add
add
pop
ret
add
add
add
pop
add
add
add
stos
add
mov
in
lock
add
push
not
dec
sub
pop
mov
push
pop
mov
cmp
jne
push
sub
pop
cmp
jne
mov
push
inc
lea
add
pop
movl
push
push
push
call
xchg
xchg
mov
add
mov
imul
js
xchg
push
les
xlat
leave
fildl
lcall
jmp
mov
test
add
out
mov
add
add
add
add
add
add
xlat
test
add
mov
icebp
lods
add
testl
or
add
rcrb
inc
cld
push
sub
shr
dec
pop
mov
push
lea
push
push
call
add
lods
divl
add
add
pop
cmpsb
scas
add
loopne
push
js
out
add
add
mov
mov
add
add
add
lcall
ljmp
fldl
add
mov
push
push
push
push
call
add
mov
test
add
xchg
out
add
in
add
mov
mov
pop
push
rorl
out
add
add
in
mov
enter
add
add
je
add
in
lock
lcall
add
add
jmp
push
push
push
lea
push
push
push
push
push
push
call
add
jo
outsl
add
in
jmp
cli
pop
xchg
fldt
mov
gs
add
jo
movl
add
jne
pop
negb
lock
xchg
add
mov
jne
add
fsts
testl
fsts
sub
pop
mov
mov
push
sub
pop
cmp
jne
push
rol
rol
lea
dec
pop
mov
push
dec
lea
ror
pop
movl
push
ror
dec
rol
pop
jmp
push
lea
push
push
call
bound
mov
clc
push
add
pop
call
stc
add
add
xchg
iret
cmpl
subb
add
add
jb
add
cmpsl
add
cmc
outsl
add
cmc
fnstsw
testb
add
stc
shll
sub
pop
mov
push
xor
shl
shr
pop
cmpw
jne
mov
push
push
push
push
push
push
call
jnp
add
popf
fadds
fadds
std
add
movsl
pushf
add
imul
add
divb
xchg
add
add
mov
pop
movl
push
dec
shr
dec
pop
jmp
push
sub
pop
pushl
push
push
lea
push
push
push
push
lea
push
call
sti
add
add
add
pop
add
mov
clc
jnp
push
addb
cmpb
add
add
fs
cld
jbe
mov
mov
pop
pop
push
not
lea
pop
mov
mov
push
push
push
lea
push
push
push
push
push
push
call
add
jp
in
addr16
roll
rolb
mov
add
add
in
mov
pop
mov
add
add
pop
add
mov
sub
pop
mov
push
push
dec
inc
push
or
not
add
shr
sub
sub
add
pop
sub
inc
lea
pop
push
push
push
lea
push
push
push
push
push
push
push
call
add
insb
roll
xchg
mov
movb
loope
insb
push
shlb
jle
fiaddl
add
add
je
add
lock
sub
pop
push
push
push
lea
push
lea
push
push
call
lds
add
sbbl
add
mov
add
lahf
mov
add
jl
clc
fimull
jl
xchg
pop
push
pop
xchg
popl
cld
popa
add
imul
movb
mov
jecxz
add
add
add
add
add
in
lcall
outsl
xor
add
enter
add
pop
cmpl
je
push
push
ror
push
or
not
add
add
add
sub
pop
inc
sub
sub
add
pop
push
lea
pop
push
push
push
push
push
push
push
lea
push
push
call
mov
test
in
std
into
fidivs
cltd
loop
add
add
add
jge
mov
fadds
repnz
add
lcall
lcall
xlat
xor
add
mov
pop
cmpl
je
push
push
push
or
not
add
dec
sub
sub
not
inc
add
pop
shr
pop
push
lea
push
push
push
push
push
push
push
push
lea
push
call
jl
jge
mov
shl
add
mov
ljmp
push
addb
rorl
scas
add
gs
add
cwtl
jb
push
add
in
fcomps
push
ror
pop
call
push
sub
pop
cmpl
je
push
push
not
rol
xor
push
xor
add
lea
sub
inc
sub
inc
pop
inc
not
xor
shr
pop
push
add
shr
rol
pop
push
push
lea
push
call
add
imul
mov
addr16
add
add
mov
cmpsb
mov
add
push
add
test
mov
mov
add
je
lods
add
std
pop
repnz
add
add
mov
data16
mov
sub
pop
call
push
push
push
push
lea
push
call
add
add
xchg
mov
mov
popf
pop
lret
jecxz
loop
repnz
into
add
scas
mov
add
push
je
add
push
bound
add
mov
add
xchg
arpl
xlat
insb
shl
xchg
jns
add
filds
hlt
add
fidivrl
add
jge
jne
in
iret
sub
pop
cmpl
je
push
push
add
shr
add
push
sub
add
inc
sub
add
pop
sub
xor
sub
pop
push
add
lea
pop
push
call
push
push
push
lea
push
lea
push
push
call
mov
shll
add
add
cli
jecxz
jne
add
add
add
hlt
add
gs
add
add
rolb
jno
in
call
int3
fldz
ret
cs
cmp
rol
add
push
sub
add
rol
not
sub
sub
lea
pop
dec
not
pop
push
lea
push
push
call
mov
jmp
mov
add
fdivs
add
xchg
test
repnz
add
cmpsl
jmp
iret
mov
cmpsl
push
jbe
addr16
add
xchg
mov
mov
pop
add
pop
into
pushf
add
add
hlt
push
add
add
in
hlt
lcall
call
push
push
push
push
call
movsl
jl
add
push
je
into
add
add
xchg
ljmp
add
add
push
add
clc
add
leave
add
jmp
add
add
mov
add
scas
add
mov
pop
cmpl
je
push
push
rol
push
push
pop
add
sub
sub
sub
sub
sub
shr
pop
rol
dec
pop
push
push
push
push
push
push
push
push
call
xchg
add
add
mov
pushf
pusha
add
xlat
add
cli
add
mov
jne
pop
add
pop
add
loop
int
nop
add
mov
mov
mov
loop
scas
add
push
push
call
addr16
mov
aam
add
add
jl
mov
lods
int
testl
test
add
add
add
fstp
pop
pop
push
jno
add
arpl
add
neg
sub
pop
call
push
push
call
fcmovne
loopne
hlt
mov
add
add
push
add
add
jecxz
lahf
mov
fldl
mov
mov
cmc
mov
fiaddl
mov
pushf
push
add
jmp
sub
pop
cmpl
je
push
push
add
not
push
or
inc
add
add
add
sub
sub
pop
add
pop
push
lea
pop
push
push
sub
ror
pop
call
push
push
push
push
push
push
lea
push
push
call
pop
add
add
jmp
pop
jbe
je
jle
add
push
add
add
movl
popf
add
add
call
cltd
mov
lods
add
scas
add
xchg
scas
adcb
mov
imul
scas
jl
add
shl
in
cmc
jp
cmpsb
add
lahf
pop
pushf
sub
pop
cmpl
je
push
push
dec
push
push
pop
add
shl
sub
shl
pop
ror
lea
dec
pop
push
lea
push
push
push
lea
push
lea
push
lea
push
call
popa
add
mov
mov
ljmp
popf
shlb
ljmp
int3
add
incb
add
sub
pop
push
push
lea
push
lea
push
push
push
push
lea
push
call
jmp
fucomip
jno
icebp
std
std
push
add
fwait
int
int3
add
arpl
cmc
mov
mov
mov
std
addl
loopne
scas
add
out
pushf
add
test
mov
mov
ficoml
call
push
lea
push
lea
push
push
push
push
call
loopne
addl
add
add
add
add
fadds
imul
in
into
add
in
lret
add
cmp
imul
cld
add
pop
mov
add
sahf
movsl
data16
jmp
mov
jecxz
addl
add
arpl
popf
movsb
cmp
jecxz
add
js
jmp
les
je
push
push
ror
push
or
not
add
ror
shl
sub
sub
sub
pop
pop
push
lea
lea
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
add
test
mov
test
mov
pop
popf
xchg
add
arpl
lods
mov
jno
add
xchg
fnsave
les
into
mov
mov
fldt
push
add
add
jecxz
xchg
xorl
add
push
sub
pop
call
push
lea
lea
pop
cmpl
jne
push
xor
pop
mov
movl
push
push
push
push
call
jns
add
les
push
aad
clc
add
hlt
add
mov
add
add
repnz
cmpsl
pop
add
icebp
test
loop
add
pusha
push
add
add
call
add
pop
add
add
xor
pop
xor
pop
push
push
push
push
lea
push
push
push
push
call
mov
mov
add
flds
add
add
lcall
add
mov
add
add
add
add
add
add
cmc
rcrl
jbe
pusha
add
jns
out
add
sbb
lds
mov
les
fdivrl
in
loopne
lcall
push
push
lea
push
push
call
xchg
add
add
pop
bnd
add
aad
add
add
rcl
mov
out
in
jmp
add
add
ja
aam
sub
pop
pop
pop
push
pop
leave
push
push
push
push
push
push
push
lea
push
call
aad
in
out
mov
add
push
lock
lret
lea
pop
pop
add
add
bound
mov
mov
arpl
insb
jge
add
sbbl
loopne
stos
add
fiaddl
add
add
xchg
scas
xchg
push
sahf
std
add
push
mov
add
or
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
pusha
add
test
jns
addl
ret
mov
jecxz
add
add
push
add
jle
add
add
push
cli
imul
xchg
add
add
add
insb
movl
pop
jmp
jne
push
add
rcrl
sub
pop
push
push
shl
lea
sub
pop
mov
push
rol
pop
add
cmpl
jne
push
push
ror
push
push
pop
add
xor
sub
add
pop
rol
shl
lea
pop
push
lea
push
push
call
mov
add
push
mov
add
in
add
ror
jne
roll
add
fst
jae
lods
movsl
add
mull
xchg
pop
push
pop
xchg
les
pop
lcall
xlat
mov
add
add
xchg
sub
pop
pushl
push
push
push
call
into
mov
add
rolb
pop
push
test
add
sahf
add
xchg
shl
mov
add
add
les
fdivrp
add
push
icebp
cmpl
int3
mov
jbe
mov
ljmp
in
hlt
pop
call
push
push
lea
push
call
add
into
add
lcall
lock
mov
orb
add
add
les
lcall
call
into
addb
shr
xchg
sbb
add
shlb
rcrl
jge
add
test
inc
or
pop
call
ret
push
push
lea
push
lea
push
lea
push
lea
push
push
push
push
call
add
jb
addb
add
mov
cmc
iret
jmp
push
jl
test
add
add
add
mov
arpl
mov
jae
mov
lahf
mov
lock
leave
scas
add
scas
add
add
add
jecxz
hlt
jno
aam
sub
pop
jmp
push
dec
pop
cmpl
jne
push
push
add
push
xor
add
sub
not
lea
sub
sub
ror
lea
add
pop
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
jne
test
test
mov
add
add
pop
add
mov
int3
jb
sahf
add
sahf
stos
add
add
sub
pop
pushl
push
push
push
call
add
add
test
add
add
push
push
incb
add
add
add
in
add
add
add
add
imul
push
add
add
in
pusha
fldcw
out
push
add
movl
and
push
shl
lea
pop
call
push
lea
push
push
push
push
push
push
lea
push
push
push
call
add
out
testl
add
scas
add
add
mov
xchg
add
add
xchg
add
add
in
push
add
sub
pop
jmp
push
lea
push
push
push
lea
push
push
push
push
push
call
mov
mov
add
scas
imulb
popa
mov
add
pop
xchg
jb
popf
jns
mov
add
push
testl
xchg
xchg
add
mov
mov
add
add
sub
pop
cmpl
je
push
add
rol
pop
cmpl
jne
push
lea
push
push
push
push
push
push
call
cld
push
movsb
add
mov
lds
add
lock
incb
mov
add
imul
add
movsb
shlb
movsl
jle
bound
int3
add
jne
add
mov
roll
jne
in
in
lcall
add
add
push
rol
sub
pop
mov
push
inc
dec
pop
push
push
push
push
push
push
lea
push
push
push
push
push
call
int
nop
xchg
aam
add
ja
jp
add
jne
add
add
int3
push
rclb
add
iret
aam
sub
pop
jmp
push
push
lea
xor
push
or
not
add
add
sub
sub
not
sub
pop
sub
sub
pop
push
push
lea
push
push
push
call
clc
add
mov
add
fstpl
pop
add
out
add
imul
into
cld
int
mov
lcall
jne
push
push
push
push
call
jmp
mov
lea
add
add
ja
clc
add
lock
aad
pop
lds
mov
push
pusha
jae
cltd
jle
lods
shrl
add
pop
repnz
add
test
enter
add
int
out
push
nop
add
in
lock
call
push
push
call
add
data16
jmp
pusha
add
add
add
push
mov
push
pusha
add
push
add
test
cmc
add
xchg
xchg
add
add
add
add
testl
mov
sti
jmp
lcall
shrb
add
cmp
shl
push
or
not
add
sub
pop
lea
dec
pop
push
add
shr
sub
pop
pushl
call
push
push
push
push
lea
push
push
push
push
push
call
lea
bound
add
mov
roll
imull
mov
std
add
add
les
pop
cmpsl
mov
in
fdivr
lcall
shrb
jmp
rol
ljmp
bound
add
ljmp
dec
and
dec
shr
pop
shl
pop
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
test
pop
mov
xchg
mov
jecxz
out
push
xchg
jnp
ret
add
push
mov
test
loop
lret
mov
mov
hlt
xchg
add
out
add
in
fdivr
lcall
jne
push
push
push
push
lea
push
push
push
push
push
push
call
add
add
add
add
mov
add
add
loop
mov
add
add
push
movsl
outsl
shl
jmp
add
roll
lods
scas
loope
add
add
add
add
mov
add
add
in
fcomps
shll
add
push
dec
xor
pop
call
push
push
ror
push
push
pop
add
not
rol
sub
lea
sub
xor
pop
ror
pop
push
push
push
call
add
push
rcl
lods
add
jne
je
into
add
xchg
add
jno
mov
add
add
fcompl
mov
add
add
mov
add
lods
add
add
sub
pop
pushl
push
add
pop
call
push
push
call
mov
push
mov
in
mov
adc
fsubs
add
add
cmpsb
sarl
add
sar
fadds
add
fistpll
lret
add
roll
add
faddl
add
loop
add
add
lret
fs
add
add
clc
lcall
shrb
sti
loop
push
sub
xor
push
and
add
shr
lea
sub
rol
sub
inc
shl
pop
inc
add
not
pop
push
push
push
push
lea
push
call
stos
fisttpl
fs
push
leave
fadds
pop
pop
aad
add
push
enter
add
adcb
in
in
pop
pushl
push
dec
pop
call
push
push
push
push
lea
push
call
xchg
add
call
mov
add
add
push
pop
push
cld
ljmp
lods
leave
jo
push
jno
add
in
aad
add
add
mov
test
leave
mov
push
int
add
pop
add
add
add
pop
add
add
call
out
mov
sub
pop
call
push
push
ror
push
push
pop
add
lea
xor
sub
ror
lea
shl
pop
ror
inc
ror
shr
pop
push
lea
push
push
push
push
lea
push
lea
push
call
scas
sahf
data16
add
lret
add
js
add
xchg
fucomip
add
subl
add
push
aad
movb
jo
int
imul
or
add
pop
call
call
push
push
add
sub
push
or
inc
add
sub
sub
ror
pop
dec
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
add
repnz
add
jl
cli
lret
mov
add
fdivr
cmpsb
add
insb
add
add
add
mov
sahf
push
xchg
push
add
lcall
in
fcomps
jne
push
push
push
push
lea
push
push
push
call
add
clc
add
lods
test
arpl
add
nop
add
test
movsb
add
cwtd
add
clc
addl
add
outsl
mov
nop
add
add
insb
add
mov
in
in
call
call
push
push
add
ror
shr
rol
push
push
pop
add
xor
shl
inc
shr
sub
sub
inc
pop
shr
add
dec
pop
push
push
push
push
lea
push
call
mov
cmpsl
sti
jb
stc
test
add
xchg
add
loopne
mov
popa
push
add
fwait
pop
add
add
pop
add
icebp
add
mov
add
lcall
in
lcall
jne
push
lea
push
lea
push
lea
push
push
push
push
push
push
push
call
js
jge
add
add
mov
mov
add
jne
movsb
xchg
mov
add
add
add
jge
cld
insb
fiaddl
push
call
add
mov
mov
add
add
mov
add
fists
cmc
in
xlat
add
xchg
mov
add
enter
mov
mov
ja
add
sub
pop
call
call
push
push
ror
not
shl
inc
push
push
pop
add
sub
inc
inc
sub
rol
inc
inc
inc
pop
xor
add
pop
push
add
rol
pop
pushl
push
dec
xor
pop
call
push
rol
sub
pop
call
push
push
dec
lea
push
push
pop
add
ror
not
ror
sub
add
add
add
pop
not
xor
pop
push
shl
add
pop
pushl
call
push
lea
push
push
push
push
call
add
push
les
lock
add
stos
rolb
repnz
std
testb
mov
xchg
add
mov
iret
add
add
loopnew
mov
mov
out
mov
add
imul
jp
out
xorb
cmc
add
fsts
pusha
test
lcall
pushf
and
call
test
dec
push
push
lea
push
push
call
cmc
imul
add
repnz
push
lods
add
aad
mov
add
add
lea
add
push
test
add
add
lods
add
loope
add
add
clc
cli
jecxz
add
push
add
add
push
add
insb
add
popa
push
add
mov
add
add
call
push
push
add
rol
sub
push
and
add
shl
sub
rol
rol
sub
inc
not
pop
add
pop
push
ror
pop
pushl
call
push
push
push
push
push
push
push
call
roll
mov
add
add
pop
jp
push
add
out
push
add
lcall
imul
add
push
mov
fwait
pop
push
jns
fildl
add
fcmovne
pop
stc
add
add
cmpsl
push
jns
in
in
call
push
push
dec
push
push
pop
add
inc
add
shr
sub
add
xor
pop
shl
pop
push
push
push
call
mov
add
xchg
add
add
shr
mov
add
add
add
stos
mov
jmp
ljmp
jne
call
push
sub
dec
sub
pop
call
push
push
add
push
sub
add
xor
not
rol
shr
sub
add
shr
shl
pop
lea
pop
push
lea
pop
pushl
push
rol
xor
rol
xor
pop
call
push
dec
pop
call
push
push
lea
sub
push
or
inc
add
ror
sub
shr
add
shl
add
pop
not
sub
pop
push
push
push
push
push
call
add
xchg
mov
call
add
add
add
out
adcb
add
xchg
rolb
jae
out
lock
add
xchg
jae
add
rolb
ja
add
add
add
add
add
add
add
add
add
imul
add
add
add
jne
push
add
add
ror
sub
pop
call
push
push
add
push
or
not
add
not
sub
dec
pop
shr
pop
push
push
inc
push
sub
add
shl
not
sub
sub
dec
lea
pop
shr
ror
pop
push
push
push
push
push
push
push
lea
push
push
push
call
test
je
add
int3
in
in
addl
fst
je
ja
enter
push
jb
lods
mov
add
add
pop
in
add
pop
les
cmc
fadds
pusha
gs
add
add
mov
xlat
not
mov
sub
pop
call
push
push
lea
push
push
call
loope
lea
addb
add
xchg
add
outsl
fisubl
imul
pop
jecxz
rcr
mov
add
roll
out
jp
mov
ror
add
push
test
sub
pop
pop
push
push
push
lea
push
lea
push
lea
push
push
call
jmp
mov
mov
faddl
loop
popl
add
in
add
repnz
jno
hlt
add
fdivrl
add
add
add
arpl
jb
in
in
dec
jne
push
sub
pop
call
mov
push
push
push
lea
push
push
push
push
push
call
insb
rolb
add
jbe
push
add
add
add
jge
gs
add
add
lcall
add
imul
push
xchg
roll
imul
jb
pop
sahf
sbbb
call
add
jbe
add
add
mov
test
lcall
add
inc
pop
lea
push
push
add
add
ror
push
or
inc
add
not
xor
sub
sub
sub
pop
dec
dec
pop
push
not
shl
inc
pop
pushl
call
push
shl
pop
push
push
shr
not
rol
pop
call
push
push
lea
sub
not
push
xor
add
lea
sub
pop
xor
not
pop
push
dec
pop
pushl
push
lea
push
push
push
push
call
add
add
loopne
sarb
add
movsl
pop
mov
xchg
mov
add
loope
add
mov
add
xchg
testl
add
push
popa
stos
jecxz
add
test
bound
mov
xchg
loop
mov
mov
add
add
in
in
pop
call
call
push
lea
push
push
push
push
call
add
enter
add
mov
jmp
add
add
mov
add
call
push
add
aad
mov
outsl
jle
mov
lcall
mov
add
add
filds
out
mov
mov
divl
call
mov
add
push
pop
mov
in
lcall
inc
cld
push
push
push
push
lea
push
push
push
push
push
push
call
push
lea
add
push
repnz
add
xchg
jae
std
cltd
add
xchg
vpunpcklbw
add
push
addb
in
leave
add
lret
sti
xchg
add
xchg
mov
ja
in
fcomps
pushf
and
ljmp
or
mov
sub
push
and
add
sub
sub
sub
add
pop
add
add
ror
shr
pop
push
lea
push
call
add
add
bound
jnp
xchg
add
add
loopne
imul
add
mov
in
clc
lcall
jne
call
push
lea
push
push
push
push
lea
push
push
push
push
push
call
push
add
mov
add
add
add
add
add
add
add
shlb
int
jne
add
sbbb
add
jge
jmp
push
pop
add
add
add
sub
pop
lea
push
push
push
push
push
push
lea
push
lea
push
call
repnz
add
jmp
xchg
out
int3
repnz
add
out
scas
stos
add
xchg
add
add
cli
in
add
add
lods
add
mov
mov
add
andl
mov
test
movsl
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
push
lea
push
call
icebp
add
add
mov
add
iret
add
mov
add
add
fiadds
outsl
pop
jecxz
mov
in
fdivr
lcall
add
jne
push
push
push
and
add
not
not
sub
rol
rol
not
pop
dec
sub
pop
push
push
call
hlt
add
add
les
push
add
rolb
add
mov
add
add
insb
cmpsb
add
out
fwait
add
nop
mov
xlat
add
add
add
add
add
cmpsl
std
push
add
jae
mov
add
scas
sub
pop
push
call
push
push
xor
push
and
add
xor
dec
sub
pop
not
sub
dec
pop
push
ror
shl
xor
pop
pushl
call
push
shl
ror
ror
pop
push
push
shr
shr
dec
dec
pop
call
push
push
add
inc
push
push
pop
add
rol
rol
add
sub
sub
rol
sub
pop
shr
not
pop
push
not
inc
shr
shr
pop
pushl
push
dec
shr
xor
pop
call
push
xor
dec
pop
call
push
shr
dec
shr
rol
pop
pushl
push
shr
pop
mov
push
lea
push
call
add
mov
fdivr
xchg
enter
cltd
xchg
add
push
mov
lcall
insb
xchg
add
add
repnz
add
andb
add
out
repnz
je
loope
add
cltd
cli
lods
mov
in
clc
pop
jmp
push
push
shr
xor
push
xor
add
ror
xor
sub
not
lea
pop
xor
add
not
pop
push
shr
lea
pop
pushl
call
push
push
push
push
lea
push
push
call
add
add
add
mov
add
add
push
add
pop
outsw
add
imul
xchg
xchg
push
add
add
add
jge
mov
js
pop
pop
add
xchg
jb
add
add
add
popf
arpl
add
add
jmp
mov
add
lcall
add
rol
ljmp
shrb
mov
call
push
add
add
sub
inc
add
not
pop
dec
pop
push
shr
lea
lea
pop
pushl
push
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
loopne
add
lret
add
int3
add
not
xchg
call
call
mov
mov
pop
jle
mov
mov
add
push
in
stos
mov
add
add
std
mov
jmp
jae
mov
add
jno
cwtl
rolb
addr16
stos
sub
pop
call
push
push
push
push
lea
push
call
roll
add
mov
push
mov
mov
mov
add
in
jle
add
add
add
out
js
out
fadds
fiadds
add
notb
sahf
mov
add
mov
out
lcall
aad
sahf
fprem1
popa
sub
pop
call
push
push
push
push
call
cmpsl
ja
mov
mov
add
pop
add
add
xchg
pop
add
sbb
xchg
ficoms
mov
mov
out
int
add
imul
mov
scas
add
pop
add
mov
mov
mov
lret
int
add
lock
leave
add
push
push
lea
push
push
push
push
push
push
call
pop
ret
pop
mov
aam
ret
add
add
xchg
xchg
add
jp
fistpll
enter
push
pop
cltd
stc
xchg
pop
add
mov
add
loop
sub
pop
pop
pop
push
sub
sub
pop
pop
xor
push
ror
dec
add
pop
inc
push
pop
ret
push
push
call
push
lods
mov
mov
xchg
test
lahf
xchg
xchg
add
add
mov
lret
add
lods
push
cmc
mov
gs
lds
int3
jp
les
lret
arpl
sub
pop
leave
push
sub
rol
xor
pop
ret
push
push
lea
shr
pop
mov
cmpl
jne
push
ror
shr
xor
pop
mov
jmp
push
push
lea
push
push
push
lea
push
push
push
push
push
call
add
push
int3
clc
fwait
xchg
add
add
popa
add
add
shlb
stos
add
jae
add
bound
aam
cltd
imul
xchg
mov
push
add
in
fcomps
inc
or
loopne
push
add
shl
sub
pop
xor
push
push
call
lods
test
xlat
add
add
data16
add
cli
clc
stos
add
add
shl
add
add
lock
add
add
loopne
imull
cli
mov
add
mov
add
add
add
add
fidivs
add
add
xchg
cld
add
add
add
clc
pop
xor
add
push
lea
push
lea
push
push
push
push
push
call
roll
push
lock
add
add
push
add
jp
hlt
clc
movsl
xchg
imul
add
push
add
repnz
add
mov
add
jns
adcb
add
mov
xchg
iret
popl
pop
add
push
add
in
xchg
add
mov
pop
xor
dec
push
lea
push
call
jno
xchg
orb
add
rolb
add
add
add
add
mov
pop
jbe
push
jp
mov
mov
cltd
mov
clc
pop
sub
push
add
pop
jmp
sub
push
pop
pushl
push
push
push
push
push
call
add
testl
mov
xchg
add
add
cmpl
add
aad
add
add
add
fiadds
mov
jns
add
add
fadds
add
mov
xchg
add
sub
pop
pop
push
push
call
add
xchg
add
mov
mov
outsl
add
fs
add
add
cmpsl
cmpl
push
add
call
hlt
jnp
scas
add
lcall
mov
jnp
pop
pop
add
add
mov
clc
lcall
jmp
push
not
sub
pop
cmp
jne
mov
push
lea
push
lea
push
lea
push
push
push
call
sbbb
jl
mov
add
out
add
bnd
add
add
jecxz
add
add
add
xchg
add
mov
mov
add
iret
rol
jae
add
add
sub
pop
lea
sub
push
add
lea
pop
mov
shr
push
pop
add
sub
push
shl
pop
pushl
push
shr
shl
add
pop
pop
shr
push
shl
sub
sub
pop
and
push
ror
xor
dec
pop
sub
push
lea
push
call
xchg
mov
mov
lret
add
mov
in
icebp
fs
add
mov
add
jae
add
mov
add
sarb
hlt
add
push
mov
fldcw
popa
add
add
lret
test
add
lods
jmp
push
mov
add
in
add
cmp
jne
leave
push
push
push
push
call
sar
add
add
pop
cmp
lods
out
xchg
jbe
addb
add
movsl
insb
add
mov
rolb
add
add
add
mov
data16
lds
add
add
pusha
movb
cwtl
lret
jb
test
add
add
test
addr16
add
lcall
add
push
push
push
push
lea
push
push
lea
push
call
loopne
pop
add
loope
add
mov
pushf
iret
mov
xchg
pop
pop
add
enter
add
add
add
in
in
push
mov
push
lea
push
call
mov
clc
mov
mov
sti
add
cli
xchg
fs
pop
add
add
ret
popf
lret
addb
fsts
add
fwait
add
popa
loopne
mov
nop
add
jns
xchg
sub
pop
add
push
push
push
push
push
push
call
add
lock
add
clc
enter
nop
fiadds
loop
clc
mov
into
imul
sti
mov
add
push
out
push
jbe
xchg
add
push
subl
add
add
add
jle
sub
pop
push
push
push
lea
push
lea
push
push
push
call
shlb
pop
add
mov
add
cmc
add
int
in
cmc
out
add
cwtl
add
mov
je
jo
mov
lret
les
lcall
push
lea
push
lea
push
push
push
push
call
clc
add
scas
pusha
data16
ljmp
cld
roll
cld
pop
add
add
add
add
fbstp
add
filds
enter
add
pop
jecxz
xorb
add
add
pusha
out
add
lcall
push
push
push
push
lea
push
push
push
push
call
stos
push
mov
cmpsb
shl
fnstcw
add
mov
add
lds
in
add
jno
push
add
stc
test
pop
add
test
in
hlt
test
repnz
mov
push
push
push
push
push
lea
push
push
push
call
add
testb
hlt
popa
add
testl
jmp
mov
iret
add
add
ret
jp
add
icebp
xchg
add
add
test
xchg
add
add
test
add
add
add
push
add
into
sub
pop
lea
push
sub
pop
sub
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
lahf
add
mov
jno
xchg
enter
add
fistpl
rolb
jne
add
add
add
add
sub
pop
mov
shr
push
pop
add
push
push
lea
push
push
push
push
push
call
subl
clc
add
cmpsl
add
icebp
add
movsl
add
out
lret
stos
add
test
jns
xchg
cmc
insb
mov
mov
add
ja
add
add
add
add
mov
push
lcall
fwait
addb
add
cmc
shl
pop
add
mov
push
lea
push
push
call
add
add
add
mov
fistpl
add
xchg
add
jae
pop
mov
nop
aad
fiaddl
cltd
add
add
mov
movsl
lcall
mov
fldl
add
jge
push
shl
pop
xor
push
pop
mov
and
push
pop
rol
push
push
push
push
lea
push
push
push
call
add
lea
add
cli
add
movsb
loope
add
add
mov
add
jne
mov
add
in
in
lcall
rolb
push
push
push
push
push
call
add
pop
add
cmpsl
stc
add
jp
xchg
add
lahf
push
jo
popf
add
fstp
add
add
cwtl
lcall
add
add
xchg
xlat
push
xchg
pop
mov
add
mov
pop
add
gs
add
stos
add
nop
pop
mov
int3
bound
lcall
add
cltd
rcrl
pusha
push
call
mov
mov
into
jne
add
push
xchg
test
addl
mov
lret
int3
rolb
enter
mov
mov
rolb
pusha
testb
lcall
cmpb
jne
push
push
push
lea
push
lea
push
push
call
stos
add
add
ret
jne
mov
scas
ja
add
xlat
scas
test
add
add
movsl
jecxz
imul
filds
jns
outsl
cwtl
repnz
addr16
movsl
add
cwtl
xchg
add
fiaddl
push
mov
add
jno
add
mov
push
add
sub
pop
add
push
push
push
push
lea
push
call
add
fistpl
push
jp
add
ljmp
in
stos
add
mov
icebp
add
popa
jbe
lea
jle
push
add
add
clc
lock
int3
icebp
nop
add
stos
roll
cmc
addr16
xlat
jmp
ja
add
mov
sti
lods
add
add
add
add
stc
sub
pop
cmp
je
add
push
inc
inc
not
pop
cmpl
jne
push
inc
xor
pop
xor
push
dec
shl
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
call
movb
add
bound
ret
xchg
int
js
jb
movsl
add
mov
jge
add
ja
add
add
iret
clc
add
mov
push
add
fisubrs
mov
pushf
sub
pop
pop
pop
push
sub
dec
shl
pop
pop
push
push
push
push
push
call
add
add
out
jnp
andb
leave
mov
add
pop
add
mov
arpl
aam
bnd
add
jle
add
add
mov
leave
push
dec
rol
xor
pop
ret
mov
push
push
push
call
pop
test
add
icebp
fiaddl
movsb
jl
rcrb
jne
test
add
movsb
out
fadds
sti
add
ficomps
mov
lods
add
add
int
mov
add
leave
test
jne
xchg
movsb
rcrb
add
rorl
mov
cli
popa
test
push
or
ja
sbb
push
push
lea
push
lea
push
push
push
call
lock
mov
add
lock
jl
add
add
in
mov
jp
add
add
bound
xchg
lret
popa
jmp
xchg
add
mov
add
addb
arpl
add
data16
mov
add
in
loopne
lcall
add
add
push
xor
not
inc
shr
pop
call
push
push
add
pop
call
push
push
lea
push
push
push
call
add
bound
push
xchg
push
add
mov
mov
add
lds
mov
add
loopne
add
push
testb
add
add
divb
loope
jecxz
push
fcmovnbe
mov
add
arpl
out
push
fistpl
lcall
xor
push
push
push
push
push
call
hlt
cltd
js
pop
add
test
test
test
cltd
into
pop
add
pop
lods
push
add
sahf
faddl
rcll
xchg
add
roll
xchg
mov
loop
add
fwait
iret
mov
into
insb
sahf
sub
pop
pop
push
not
shl
pop
pop
push
shl
shl
lea
pop
pop
push
push
push
lea
push
push
push
lea
push
push
call
add
jbe
add
xchg
stos
mov
add
add
add
aam
hlt
stos
mov
clc
push
loopne
jns
add
out
add
adcl
arpl
test
jae
addb
subl
add
fisttpll
add
mov
int
lcall
lcall
push
not
ror
rol
pop
pop
push
inc
sub
sub
pop
leave
ret
push
push
push
lea
push
lea
push
push
push
call
add
mov
xchg
add
xchg
add
in
add
add
mov
in
push
add
push
xchg
pop
flds
popf
pop
add
lahf
out
mov
add
xchg
fisubrs
add
mov
sub
pop
push
mov
push
pop
add
push
dec
pop
push
push
push
dec
inc
ror
pop
push
push
push
push
call
nop
add
add
add
fcmove
insb
hlt
movsb
pop
add
add
sahf
cwtl
jo
add
enter
jmp
popa
push
mov
add
lcall
push
push
push
lea
push
push
call
add
pop
add
mov
clc
jl
cmpsl
add
sarb
mov
add
add
out
add
mov
add
pop
add
jmp
imul
add
test
lcall
pop
or
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
pop
call
in
test
add
add
out
add
add
fisubl
add
add
cmpsb
push
call
pop
lea
push
sub
ror
lea
pop
sub
mov
push
push
push
push
push
push
push
call
add
lea
jecxz
filds
add
fwait
out
je
arpl
add
std
pop
lahf
ret
xchg
popf
add
mov
aam
push
add
in
flds
jne
xchg
mov
pop
shr
push
push
push
lea
push
push
push
push
call
jo
subl
call
out
add
push
add
enter
xchg
ficomps
test
stos
test
mov
mov
add
add
loope
lock
add
addl
add
push
pop
mov
add
push
push
push
call
clc
jmp
jno
stos
add
test
outsl
add
xchg
int3
add
pop
clc
mov
fadds
jbe
roll
jp
add
sub
pop
pushl
push
pop
popl
push
lea
push
push
push
push
lea
push
lea
push
push
push
push
call
in
add
lds
jmp
stos
xchg
nop
cli
add
pop
add
add
add
fldcw
mov
sub
pop
mov
push
lea
push
push
push
push
push
push
lea
push
call
test
lea
movl
into
testl
rolb
add
faddl
add
test
add
mov
imul
sti
mov
sub
pop
add
push
push
call
nop
jecxz
add
leave
add
shll
add
bound
add
add
add
add
push
add
xchg
mov
mov
add
add
add
add
add
sahf
flds
out
in
add
lcall
testb
mov
add
push
inc
ror
shl
lea
pop
xor
rol
push
push
push
push
push
call
movb
pop
push
add
shrl
mov
add
orl
rolb
stc
add
iret
add
mov
in
sub
pop
nop
nop
push
sub
inc
pop
xor
push
push
call
add
add
clc
add
add
data16
add
add
add
rolb
addb
push
out
in
add
movsb
test
sub
pop
nop
push
add
ror
add
pop
nop
push
ror
shl
dec
sub
pop
inc
push
inc
pop
nop
nop
push
not
lea
pop
cmpb
jne
add
push
push
push
call
add
add
out
add
cltd
cli
popf
hlt
pop
ljmp
add
bound
mov
push
add
add
pop
outsl
pop
add
nop
add
mov
and
add
push
push
add
shr
sub
pop
nop
push
push
push
push
push
push
push
push
push
call
out
cwtl
add
fcmovne
cmpsl
test
add
in
mull
je
add
add
add
cld
add
push
sub
pop
nop
cmp
je
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
add
loopew
scas
add
test
push
add
add
add
rcll
int
pop
jmp
push
add
pop
loopne
mov
pop
add
mov
rcrl
popf
cmpsb
sub
jno
add
sub
pop
nop
push
rol
pop
nop
inc
push
push
call
mov
ja
add
cmpsl
push
add
in
addr16
add
add
xlat
add
mov
call
js
jb
repnz
add
cltd
add
add
mov
popl
push
add
nop
push
push
push
push
lea
push
push
push
push
call
jne
add
add
stc
add
test
popa
mov
xchg
scas
test
add
jmp
stc
je
mov
js
jl
fsubl
ret
into
add
add
add
push
roll
shrl
add
test
repnz
popa
pop
xchg
faddl
std
mov
mov
out
add
add
shrb
in
loopne
lcall
jne
jb
push
dec
inc
pop
xor
push
add
shl
sub
pop
jmp
mov
push
lea
push
lea
push
push
push
push
push
call
lcall
cmp
clc
add
cwtl
add
add
jmp
popf
leave
xchg
insb
fisubrl
add
in
in
lcall
rcll
ret
dec
pop
movzwl
mov
push
add
pop
add
push
push
push
push
push
push
call
jl
shl
bound
mov
fisubl
add
testb
pop
shrb
add
add
stos
lcall
loope
mov
in
call
push
shr
pop
xor
xor
push
push
push
push
push
push
push
push
call
push
add
add
roll
rol
pusha
iret
jecxz
add
lock
out
add
mov
addl
fildl
add
movsl
add
outsl
add
push
add
mov
test
sub
pop
shl
push
xor
lea
pop
xor
push
pop
shl
xor
push
sub
xor
pop
shl
xor
push
lea
push
push
push
push
lea
push
push
push
push
call
test
bound
xchg
imul
ficomps
testb
mov
add
add
add
add
xchg
les
add
xlat
add
enter
lods
mov
xchg
imulb
mov
push
add
add
jo
push
sub
pop
mov
push
add
shl
pop
add
push
shl
pop
pop
pop
push
add
xor
pop
pop
push
push
push
call
add
mov
add
pop
add
add
add
push
add
add
lea
movsb
mov
fisubrl
flds
popf
add
mov
arpl
push
sub
lea
pop
leave
ret
push
push
lea
push
call
jno
mov
add
push
add
add
rolb
mov
popa
mov
test
jle
add
pop
add
roll
add
stos
jnp
rolb
sahf
fdivr
push
insb
push
jo
jle
add
push
add
add
leave
add
add
sub
pop
push
push
lea
push
call
add
jp
addr16
add
addb
add
xchg
add
pop
mov
cld
add
xchg
mov
test
fnstcw
mov
lds
add
ror
add
lds
mov
mov
push
dec
pop
push
push
push
rol
pop
push
push
push
ror
lea
pop
mov
push
add
dec
pop
mov
push
push
call
add
aad
lods
add
xchg
testb
add
add
add
mov
pop
add
sahf
mov
add
jge
in
clc
lcall
jge
push
lea
push
push
call
add
jnp
xchg
cli
mov
data16
add
testl
scas
add
add
jmp
arpl
jbe
add
into
add
add
fwait
add
add
add
std
into
cld
add
add
mov
push
into
jp
ljmp
rorb
test
jno
push
rol
add
add
inc
pop
test
je
push
pop
mov
push
push
push
push
lea
push
push
lea
push
call
add
add
test
loope
fldl
pop
out
lret
mov
lea
jecxz
add
mov
add
add
jb
std
scas
test
add
add
cmpsl
add
add
jmp
in
lcall
dec
or
push
push
push
push
lea
push
push
push
push
call
pop
add
cmc
push
div
mov
outsl
add
add
add
jo
mov
add
lods
rol
cmpsl
div
nop
add
test
mov
sti
mov
imul
add
add
mov
movsb
fiadds
out
stos
push
add
loop
add
mov
mov
push
xor
sub
pop
inc
push
sub
inc
add
pop
cmp
je
push
add
lea
add
pop
test
je
push
push
push
push
push
push
push
push
push
call
push
imul
loopne
not
rcrl
xchg
mov
mov
add
int
xlat
ja
lcall
mov
lahf
test
mov
pop
mov
inc
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
movsl
add
push
xchg
fcmovnbe
jne
imul
mov
add
mov
insb
mov
imul
add
add
fcom
icebp
add
add
push
add
xchg
test
lcall
rorb
test
add
push
push
lea
push
push
push
call
aad
jbe
add
loopne
add
fcoml
xlat
push
fldenv
push
add
popl
pop
int
or
pop
pop
movsl
add
loop
add
movsl
mov
mov
push
mov
in
in
lcall
rorb
xor
call
cs
js
push
call
jmp
insb
out
aad
mov
call
jae
add
cmpsb
pop
cmpsl
ljmp
in
lods
add
add
mov
add
add
add
add
cmpsb
pushf
add
movb
imul
filds
jne
mov
add
out
iret
mov
roll
sub
pop
xor
push
shl
shr
pop
pop
push
lea
pop
pop
push
lea
push
push
call
out
popf
push
fwait
xchg
add
cld
add
arpl
leave
fsubl
iret
mov
xchg
ja
add
rcrl
fdivl
lcall
push
lea
push
push
push
call
add
add
push
add
jns
add
add
mov
cmp
flds
xchg
add
fsubs
std
add
add
add
push
add
add
sahf
lods
add
add
add
fldl
lret
fwait
jne
into
xchg
lret
scas
cmpb
lock
pop
leave
push
push
lea
push
call
cmpsl
push
mov
in
add
loop
pop
adcl
call
clc
add
add
cltd
cld
jge
add
imul
push
int3
add
std
add
mov
rolb
push
add
incb
lcall
or
push
push
lea
push
push
push
push
lea
push
lea
push
push
lea
push
call
test
enter
data16
mov
subb
add
add
aam
push
jp
add
xchg
shl
mov
add
jne
in
add
sub
pop
mov
push
push
lea
push
push
push
call
fildl
jmp
into
push
pusha
add
aam
add
mov
aam
stc
aad
xchg
fs
add
add
stos
add
pop
xchg
push
mov
icebp
flds
add
test
in
in
pop
inc
push
xor
rol
pop
cmp
jne
push
xor
pop
lea
mov
push
lea
push
push
push
lea
push
push
push
push
call
xchg
out
add
lret
notl
add
add
aam
lahf
ja
pop
sti
cli
add
push
lds
push
add
add
je
add
xchg
mov
ret
add
add
testb
jmp
incb
mov
lods
jno
mov
add
add
add
xchg
mov
sub
pop
test
je
push
not
shr
pop
mov
add
push
lea
push
push
push
push
push
push
call
mov
popf
mov
fadds
shr
add
add
add
mov
clc
fsubs
add
jo
add
mov
out
add
imul
test
mov
mov
sub
pop
cmp
jne
mov
push
push
call
add
add
mov
cld
mov
jo
mov
loop
add
fiaddl
call
xchg
in
mov
push
add
je
add
add
add
mov
xchg
add
sub
pop
test
je
push
push
push
push
lea
push
push
lea
push
push
call
in
add
push
aad
mov
add
jb
add
push
arpl
jmp
pop
mov
add
cmpsb
add
add
add
data16
xchg
jno
add
aam
in
loopne
mov
add
push
push
push
push
call
jge
add
mov
mov
add
into
fcmovnbe
movb
stc
test
mov
fwait
pop
add
mov
add
loopne
loop
fiadds
add
add
add
mov
cwtl
mov
rolb
jae
add
cmc
pushf
push
ja
sub
pop
cmp
je
push
ror
pop
jmp
push
add
pop
xor
push
add
lea
pop
pop
push
shl
lea
ror
pop
pop
push
sub
sub
sub
pop
pop
pop
push
lea
add
pop
leave
ret
push
push
push
push
push
lea
push
push
lea
push
push
push
call
jb
andl
add
add
xchg
add
add
mov
mov
les
in
fdivr
lcall
inc
call
cltd
sbb
fwait
push
call
out
lret
out
in
cmc
add
mov
fnstenv
cmc
clc
lods
mov
fstpt
sti
push
lock
add
jo
add
outsl
cltd
jmp
add
scas
ret
addr16
loopne
rcrb
add
mov
filds
add
add
sarb
cmc
mov
sub
pop
pop
pop
push
push
lea
push
push
push
call
roll
mov
add
in
ret
gs
mov
xchg
outsl
push
add
fistpl
popf
add
add
mov
lcall
pop
push
add
not
pop
leave
ret
push
sub
pop
mov
push
inc
inc
dec
shr
pop
pop
push
rol
sub
pop
pop
push
push
push
push
push
call
pop
mov
add
shl
add
jns
leave
out
jecxz
nop
jb
mov
jno
add
add
les
test
in
sahf
fwait
lret
add
jp
clc
add
add
xorl
xchg
sub
pop
pop
push
pop
pop
leave
push
ror
lea
shr
sub
pop
ret
lret
sbb
mov
scas
lret
fnstsw
scas
cmpsb
in
mov
scas
mov
mov
scas
lret
scas
mov
scas
sbb
xchg
and
push
and
fidivrs
adc
sti
stos
push
jns
cwtl
pop
and
fucomip
fistl
xor
data16
xor
mov
sub
std
pop
addr16
dec
repz
stos
pop
imul
xchg
sbb
inc
loopne
mov
pop
push
mov
mov
into
add
add
inc
pop
pop
xchg
andl
lock
test
or
jge
push
shrb
adc
ficoms
lret
rorl
sbb
sbb
daa
stc
mov
xchg
xlat
cs
adc
adc
jecxz
popf
je
aad
outsb
outsl
rcrb
jmp
dec
inc
icebp
push
mov
idivb
mov
cmp
rolb
inc
mov
or
xchg
popf
into
mov
andl
popa
lret
ljmp
pop
push
pop
scas
out
out
jp
subb
inc
jge
out
and
loopne
rolb
dec
mull
dec
jns
das
sbb
rorl
shll
adc
adcb
jmp
pop
mov
test
mov
lret
mov
push
mov
out
pusha
push
call
imul
cmpsb
scas
add
ljmp
mov
mov
add
leave
loope
mov
add
das
lret
or
lea
adc
dec
leave
pushf
dec
xchg
xchg
shll
push
jecxz
dec
sbb
sub
dec
das
stos
push
xor
or
popf
inc
ret
shrb
rcrl
pop
cld
pop
cmp
lret
jl
stc
int3
pop
mov
lods
ds
nop
scas
cmp
insb
ret
inc
inc
mov
and
xchg
loope
mov
aaa
test
dec
imul
push
dec
ret
jae
and
lods
xchg
bound
adc
mov
xchg
pop
in
outsb
cmp
mov
mov
xchg
mov
lods
jp
mov
aaa
into
dec
jle
icebp
push
xor
pop
add
jne
or
mov
out
sub
xchg
sub
pop
mov
les
aaa
dec
mov
sbb
inc
xlat
shll
adc
fsub
push
mov
cmp
loopne
mul
xchg
addl
mov
std
xor
and
jp
add
ret
test
or
mov
sahf
adc
add
movsb
pushf
std
xchg
fimull
and
bound
movsb
mov
inc
inc
mov
pop
mov
ficompl
sub
test
aam
inc
aad
mov
cmp
rcl
ja
pop
daa
scas
ss
lret
push
inc
mov
test
dec
mov
inc
mov
pop
shrb
test
xor
clc
pop
mov
andl
dec
fwait
xchg
add
mov
cmpsl
pop
push
pop
loope
int
adc
les
mov
movsb
xchg
arpl
outsl
and
jmp
test
xor
mov
push
xor
imul
push
ss
sub
insb
adc
jge
out
imul
xchg
fdivs
cmp
push
mov
sahf
ret
test
cmpsl
lds
push
mov
loopne
test
and
out
addr16
out
or
cmp
lock
mov
pop
addr16
push
mov
dec
xchg
or
push
pop
aad
sbb
imul
imul
pop
push
push
shll
cmpsl
ret
mov
or
mov
add
and
cmc
mov
push
cmp
faddp
addr16
mov
sti
jge,pt
cmpsl
add
cmp
mov
stc
xchg
sahf
push
mov
and
dec
dec
enter
shr
inc
outsl
lds
das
in
jmp
mov
inc
or
sti
bound
in
hlt
sub
mov
lods
jbe
pop
xchg
cwtl
sahf
mov
mov
movb
mov
iret
out
mov
pop
jae
and
xor
or
arpl
sbb
adc
std
test
push
push
decb
mov
xchg
js
sbb
or
insl
xchg
xchg
imul
js
or
pop
mov
rorb
push
mov
fcom
dec
add
xchg
sbb
add
dec
or
sub
mov
or
aas
jmp
add
mov
decb
hlt
aad
addr16
push
push
divb
push
push
into
jecxz
jg
subb
jmp
out
sbb
leave
cmpsb
std
stc
inc
scas
hlt
jns
jg
mov
fsubl
xchg
pop
out
icebp
nop
frstor
pop
push
arpl
sub
push
lods
jge
gs
fmuls
insb
pushf
cmp
test
test
cmp
sub
xor
xor
jle
mov
repz
mov
in
fdivl
jmp
fstl
repnz
lret
push
pop
fistl
pop
adc
mov
sti
scas
shl
test
ret
pop
mov
data16
and
shl
clc
dec
test
cld
xorb
nop
mov
repz
cltd
fidivrs
in
hlt
mov
jl
fnsave
cld
push
jo
xchg
mov
mov
jmp
and
int
inc
jae
add
push
aaa
jae
movsb
lret
jecxz
inc
adc
sbb
cmpsl
inc
pop
in
dec
mov
or
lret
outsl
enter
push
lea
fwait
es
and
cmpsl
hlt
push
rol
add
or
inc
pop
pop
add
lret
xor
cmpsl
mov
es
jecxz
stos
jae
ret
mov
dec
hlt
sbb
cmp
sbb
inc
in
mov
lock
ret
clc
jp
jb
jne
xchg
sub
test
bound
scas
jns
xor
add
fwait
xchg
mov
pushf
adc
scas
sub
cltd
pop
jns
aad
jns
shlb
testl
pop
pop
cli
jge
imul
out
aam
jns
repz
push
ret
out
test
ljmp
jnp
push
pusha
pop
out
ljmp
iret
outsb
jne
push
jmp
and
sbb
xchg
seto
xorb
addb
repnz
pop
js
mov
xor
sahf
push
call
aaa
imul
mov
mov
and
mov
repnz
add
aas
mov
sbb
out
mov
popf
leave
xchg
push
test
stos
insb
insl
mov
leave
or
add
xchg
xor
cmp
push
loope
mov
pop
jb
clc
jmp
call
jmp
leave
scas
mov
sbb
pop
lcall
xorb
in
or
push
pop
sti
stc
xor
cmp
xor
xchg
xor
popf
inc
dec
pop
ss
adc
pop
mov
inc
mov
repnz
push
xchg
into
addl
clc
xchg
lcall
push
lods
jne
fs
pop
jo
into
fiaddl
repnz
sti
push
or
imul
mov
mov
inc
or
dec
pusha
sti
dec
jo
jmp
lret
adc
adc
adc
out
addb
lea
add
jb
sub
mov
inc
jmp
sub
cmp
fstps
adc
aam
mov
xor
push
mov
idiv
shlb
or
mov
mov
xor
pop
xchg
xchg
mov
add
xchg
addr16
xor
adc
out
mov
fisttps
ret
in
and
icebp
shll
lcall
enter
fisubl
lods
dec
mov
cmpsl
sub
sub
es
mov
xor
es
add
les
lret
sub
fwait
lds
or
add
xchg
jo
ss
adc
adc
mov
pop
ja
xor
sub
lret
mov
test
cmp
stc
mov
sbb
jecxz
outsb
mov
arpl
xchg
sub
mov
dec
fcomps
pop
cmp
cmp
icebp
adc
inc
stos
adc
pop
je
jmp
mov
add
add
movsl
fstpt
fcomps
push
icebp
cmc
bound
mov
sbbb
and
andl
pop
dec
stos
lahf
sbb
inc
loopne
and
mov
outsl
or
aas
mov
clc
or
test
mov
cli
push
and
jnp
push
dec
or
scas
sub
jne
testl
push
xchg
dec
jne
insl
pop
stos
jmp
pop
adc
jl
or
sbb
and
leave
jl
and
lcall
insb
movsl
jmp
stos
cmp
mov
adc
dec
pop
in
add
mov
pop
dec
push
dec
lahf
movsl
nop
xor
cmpl
sub
inc
fdivs
xor
cmpsb
divl
fldt
popf
jbe
adc
inc
test
jbe
testl
ret
fadds
add
out
out
push
jnp
hlt
test
aad
mov
popl
test
inc
cmpsb
pop
test
popa
mov
sti
xor
jl
out
push
mov
movsl
xor
mov
icebp
je
cmp
inc
xchg
dec
xchg
out
out
xor
scas
cld
into
jbe
push
bound
adc
xchg
test
sbb
jbe
jle
inc
sti
mov
adc
mov
shl
inc
sub
fistpl
cmp
in
test
push
and
cmp
or
out
pop
dec
add
sar
push
lock
cs
enter
sub
or
sbb
xchg
fdiv
cmp
movsl
inc
es
and
int
jle
das
std
in
mov
cmpsb
notl
ret
mov
inc
xor
sbb
orl
setnp
pop
mov
sbb
pop
push
jnp
add
popa
cmp
addb
sub
jge
out
jmp
rcll
cmp
insl
imul
and
addb
inc
adc
pop
into
dec
or
xchg
cmp
in
xor
cmpb
mov
out
push
mov
inc
push
jo
or
and
cmp
lret
leave
or
popl
push
nop
js
jl
nop
mov
subl
fs
xchg
ss
movsl
adc
bound
ja
lock
sahf
das
push
clc
or
icebp
aad
xor
and
mov
ret
or
repz
fldenv
enter
pop
pop
sbb
ret
sbb
in
dec
cli
arpl
xlat
xchg
dec
dec
sbb
and
mov
inc
xchg
cwtl
icebp
add
sbb
push
cltd
lods
hlt
mov
inc
inc
std
push
icebp
test
sar
jg
mov
sbbl
mov
in
rolb
xor
loopne
sub
nop
repnz
push
adc
imulb
adc
push
stos
fnsave
rolb
icebp
adc
mov
insb
out
repz
hlt
repnz
fdivs
inc
sub
test
insl
mov
test
mov
sbb
ja
lcall
xchg
mov
ds
jno
int
das
adcb
cmp
or
cmc
mov
stos
insb
cwtl
cmp
lret
arpl
cmp
mov
add
es
sbb
dec
arpl
add
js
loop
or
push
cmp
movsl
push
inc
scas
fdivl
sbb
push
filds
out
into
pop
and
out
arpl
pop
clc
pop
popf
lods
ret
add
test
pop
xchg
fldenv
xor
push
xor
les
test
rolb
mov
std
stos
test
lea
pop
test
cwtl
mov
lods
rorl
sbb
into
fsubrl
push
push
jp
jae
mov
push
lcall
adc
out
and
xchg
pop
pushf
sbb
mov
mov
mov
stos
out
mov
in
test
test
xchg
adc
lods
scas
ret
xchg
fucomp
ficoml
mov
pop
pop
push
out
cmp
jae
adc
cs
xchg
and
imul
or
jnp
xchg
pop
in
test
mov
cmp
pop
out
mov
cmp
daa
ret
jge
push
scas
xchg
push
jge
and
fwait
arpl
sub
dec
jle
shll
mov
xchg
and
stos
xchg
sti
sub
xchg
dec
jnp
push
push
mov
outsb
ja
pop
cwtl
xchg
mov
out
and
jns
inc
loopne
insb
xor
mov
or
fnstenv
adc
mov
add
dec
inc
dec
pop
jb
fcmovne
clc
and
dec
jns
test
mov
inc
mov
int3
add
jns
scas
mov
mov
sbb
enter
outsb
or
aas
addl
adc
jbe
movsl
push
cli
cs
and
add
loope
xchg
bound
mov
out
cmc
jbe
and
sarb
xor
sti
fdivl
aas
sbb
xchg
mov
nop
mov
inc
subb
dec
mov
mov
xorb
gs
mov
arpl
mov
hlt
sbb
dec
cmc
pop
mov
inc
scas
sbb
push
mov
cs
insl
adc
xor
pop
les
int
leave
arpl
pusha
pop
outsb
fcoml
ret
dec
push
cmp
fmul
lea
mov
inc
mov
sbb
push
fisubs
cli
pop
andb
sbb
notb
mov
mov
nop
pusha
push
add
or
lahf
into
shll
mov
ds
cmp
mov
push
jae
lock
add
andl
enter
xorl
outsl
imul
jne
fldcw
xor
imul
jns
add
inc
in
adc
mov
movsl
xor
xor
and
add
xor
leave
lcall
movsb
cmpsb
inc
push
mov
sbbl
loope
inc
shl
push
roll
scas
sbb
lret
leave
fisubs
adc
sbb
sub
jo
and
test
push
cmc
mov
movsl
xlat
and
jg
sub
fwait
cmp
gs
and
out
inc
and
jecxz
xchg
mov
and
adc
push
sbbl
jmp
sarb
into
cmp
icebp
paddusb
xchg
fcompl
jne
cmpl
inc
test
cmp
adc
lds
jmp
cli
aaa
xchg
pop
gs
and
stc
mov
and
pop
push
imul
pop
xchg
enter
sbb
in
push
scas
xlat
dec
fbstp
imul
xchg
mov
mov
in
dec
or
xchg
inc
movsb
ret
and
notl
cmp
neg
or
cld
or
mov
mov
pop
popa
xorb
in
fimull
pop
adc
pusha
addr16
lret
jae
xchg
leave
mov
jb
iret
cmp
data16
jmp
xor
rcll
arpl
fwait
pop
push
jle
dec
push
cmp
pop
xor
push
push
mov
and
and
cwtl
dec
popa
pop
popf
sub
cmp
add
mov
and
shlb
xchg
jg
dec
xor
or
cwtl
jecxz
pop
xor
in
mov
sbb
sbb
adc
dec
jb
sbb
repnz
xchg
test
pop
mov
mov
xor
mov
cmpsb
shll
mov
ja
lds
and
xor
call
push
xchg
xchg
and
in
test
jecxz
cmp
add
xor
pop
mov
mov
je
scas
mov
insb
push
std
mov
icebp
nopl
xor
test
je
sbb
sbb
sbb
xchg
dec
push
inc
inc
push
adc
push
push
test
loop
push
lods
icebp
pop
lahf
adc
inc
mov
loop
push
dec
movsb
ret
and
imul
and
push
in
inc
fldenv
in
mov
out
lock
jmp
in
adc
dec
jmp
mov
cmpsl
fistl
stos
xchg
fs
xor
dec
adc
inc
xlat
mov
adc
jmp
stos
lret
xchg
stos
into
fadd
cmp
xchg
or
sahf
or
sarl
sub
cltd
scas
in
out
ds
and
cltd
ret
pop
inc
fbld
loopne
jo
cmp
test
and
add
mov
shr
in
mov
out
aam
mov
or
xorb
fimull
mov
mov
push
es
mov
ret
jae
and
mov
pop
test
adc
addl
jns
xchg
mov
mov
add
cmp
sbb
pop
insl
daa
mov
cmp
popa
xchg
sub
add
je
ja
inc
add
inc
sbb
pusha
arpl
jmp
xor
add
cmpsb
pusha
fstl
fimull
in
in
sub
test
adc
fisttpl
dec
cltd
cs
xchg
hlt
mov
dec
mull
jo
jae
push
aad
add
xchg
in
xor
inc
push
inc
push
gs
jg
push
scas
stos
push
add
nop
pop
call
dec
push
fwait
jmp
fstp
out
not
subl
std
call
loop
pop
pop
aam
mov
lcall
adc
xchg
xchg
push
push
jnp
xchg
pushf
xchg
adc
lret
incb
jecxz,pt
jo
rcl
mov
jb
inc
inc
sub
testl
xchg
aam
inc
jb
rorb
mov
push
jmp
hlt
loop
into
adc
sub
sbb
jb
or
gs
int3
mov
pop
lods
fs
clc
lahf
incl
mov
adc
fisubs
xchg
cli
jmp
mov
inc
and
fstpt
jne
mov
mov
and
in
sbb
xchg
ret
mov
and
inc
fldenv
imul
add
scas
adc
sub
fnstcw
pushf
jl
push
rcll
imul
stc
loopne
test
aaa
and
dec
adc
ficoms
mov
xor
cmpl
out
xchg
adc
nop
popf
scas
imul
fldl
fucomip
adc
and
dec
mov
stos
sub
cmpl
pop
repnz
nop
dec
pop
cmpsl
and
icebp
or
push
pushf
movsb
in
add
clc
stc
fucomip
in
je
ret
pop
mov
dec
cwtl
out
ficoml
cwtl
popa
jge
fmulp
les
cwtl
add
mov
inc
fs
push
call
call
shlb
lret
sub
xchg
mov
testl
outsb
out
imulb
add
mov
inc
js
bound
shlb
xor
push
out
rcll
adc
enter
dec
dec
sbb
mov
leave
sbbb
orb
aas
cmpsb
jo
pusha
addl
xchg
xchg
add
imul
xor
sarl
nop
fiadds
mulb
bnd
inc
sub
push
out
jle
clc
sarb
mov
inc
or
aad
es
push
out
add
das
mov
jnp
inc
inc
repnz
test
test
shl
push
cmp
cltd
add
lret
xchg
adc
je
movsb
jns
sbbl
subl
out
dec
repnz
xor
in
rorl
mov
idivl
pop
mov
sub
push
nop
call
xchg
das
test
out
sbb
add
cmpsb
lock
ljmp
mov
mov
xchg
test
xchg
imul
test
mov
es
adcb
inc
sbb
jp
ficompl
dec
xchg
stc
sbb
lea
jmp
sbb
push
outsb
xlat
sbb
dec
pop
leave
aam
jo
test
xchg
dec
push
test
in
push
add
test
out
mul
enter
out
push
rcrb
pop
cltd
push
aaa
ret
inc
inc
push
mov
mov
fisttpll
or
or
cmp
movsb
gs
sbb
mov
movsb
jo
int3
ljmp
leave
int3
inc
mov
out
cmp
sti
loop
jge
and
xchg
add
adc
and
ss
inc
lods
fwait
mov
loop
imul
or
mov
mov
leave
sub
sub
imul
movsl
inc
lds
mov
jae
out
imul
ljmp
xchg
mov
loope
inc
jmp
push
pusha
push
fstpt
imul
pop
test
fisubrl
daa
cmp
mov
sbb
loopne
repz
xor
shlb
fwait
xchg
push
es
stc
inc
inc
or
inc
sti
inc
sub
mov
add
dec
sahf
aad
imul
mov
lds
pop
inc
test
mov
jb
fidivrs
repz
addr16
adc
cmp
fldl
add
xchg
or
mov
icebp
mov
push
rorl
jnp
cmc
or
mov
jle
mov
imul
mov
cs
sub
adc
loopne
lret
mov
pop
inc
flds
pop
dec
mov
test
loop
out
xchg
mov
cmc
sub
cmp
and
mov
pop
nop
pop
inc
popf
fsubs
sbb
sarl
sbb
mov
sahf
adc
push
sub
cmpb
int
repnz
inc
imul
shrl
pop
jne
xchg
fisttpl
aam
movsb
mov
stos
and
push
lcall
cwtl
ljmp
dec
std
pop
aaa
mov
inc
popf
cwtl
mov
in
and
shrl
rorl
fldcw
je
add
in
and
xor
repnz
pop
adc
or
and
jle
nop
lea
lret
push
in
dec
cwtl
mov
mov
lods
lea
add
outsl
aam
xchg
leave
push
cmpsb
cmp
add
test
sbb
jp
jb
stc
sbb
push
and
fistpll
jg
mov
pop
test
scas
ret
mov
movsb
pusha
mov
call
sub
in
add
sarl
jge
push
pop
mov
add
stc
jg
cmp
cwtl
das
scas
insl
mov
cmp
adc
xlat
cmp
pop
arpl
inc
pop
shl
dec
adc
sbb
lcall
xchg
add
popf
jae
lods
arpl
fiadds
sbb
hlt
cltd
pushf
fucomip
or
adc
dec
scas
mov
sub
out
cmpb
in
jg
call
inc
data16
adc
call
aas
rol
dec
cmpsb
jno
jns
out
mov
cmpsb
test
sbb
les
mov
or
data16
sub
daa
pop
mov
xchg
xor
jmp
sub
dec
mov
aaa
pop
jg
decl
lock
sub
mov
add
loop
lcallw
add
imul
jns
je
nop
jmp
mov
xor
pop
mov
mov
sahf
cld
add
insb
or
in
adc
jmp
shll
and
call
mov
push
lods
pop
cwtl
jno
cmpb
adc
pop
shrl
insb
mov
push
pop
sbb
mov
mov
and
mov
mov
mov
cmp
xor
adcl
in
dec
cmpb
shl
enter
insb
fs
push
mov
dec
daa
sarb
xor
fdivs
fisttpll
test
or
stos
xchg
adc
lock
loop
and
les
js
xor
mov
shl
xlat
enter
xor
jecxz
out
pop
mov
xlat
stc
stos
arpl
das
fwait
push
xchg
push
inc
mov
sar
js
js
lock
lods
jge
adcl
adc
mov
in
cmp
xor
mov
into
repz
imull
push
sbb
dec
inc
or
shufps
and
loope
inc
stos
pop
dec
cmp
inc
or
cmp
mov
cmp
mov
daa
jb
into
mov
lock
mov
lahf
sbb
lret
adc
dec
push
mov
js
adc
aaa
jb
push
xchg
ds
std
jl
aam
sub
pop
subb
push
mov
test
inc
push
jecxz
adc
sub
pop
jne
sub
sub
out
mov
and
push
lcall
fldt
add
jbe
mov
adc
xchg
cmp
xor
mov
sub
cmpsb
mov
scas
cmp
xor
cmpsb
lret
pop
out
push
jle
mov
xchg
shll
sub
in
out
inc
es
pop
push
push
lods
pop
rorb
xchg
inc
xor
out
cmp
sbb
dec
std
shlb
sub
call
xchg
fbstp
das
mov
adc
pusha
call
add
in
xor
lea
or
outsb
lcall
dec
adc
into
test
mov
icebp
jb
js
push
lahf
out
inc
out
and
xchg
sbb
iret
push
scas
mov
dec
sbbl
sbb
push
shl
ret
cmp
push
shl
aam
fwait
xchg
loope
mov
mov
sbb
mov
lods
pop
inc
push
mov
scas
lret
jg
imul
dec
cmc
ret
rol
xor
pop
mov
pusha
mov
mov
movsb
mov
std
sub
pop
add
dec
je
pusha
pop
popf
and
inc
rorb
scas
data16
cwtl
mov
cld
dec
packsswb
xor
pusha
push
sarb
out
jmp
dec
rcr
popf
testb
lods
pushf
movb
adc
add
sbb
mov
cmp
dec
sar
mov
mov
xor
sub
out
and
xor
mov
pop
add
jge
imull
xchg
clc
fcomps
jmp
dec
lret
fstpl
mov
sbb
jge
js
mov
xchg
andl
push
in
cmp
fldln2
insl
inc
jp
jo
mov
mov
test
xchg
jp
in
dec
push
decb
pop
imul
outsb
addl
cmpsl
jmp
in
cld
ds
test
pop
icebp
pop
les
fbld
mov
xor
shlb
shll
or
xchg
sbbb
mov
mov
xchg
inc
or
aam
fmul
inc
lret
push
add
dec
mov
imul
push
push
in
insb
pop
addr16
push
dec
dec
xor
fidivs
popf
push
stc
fidivrl
stos
mov
or
xchg
mov
dec
dec
cmp
mov
lcall
cmc
in
addr16
or
xchg
cmp
push
insb
popf
sahf
std
mov
rcrl
or
xor
clc
insb
and
loope
sub
xor
pop
inc
sbb
popf
andb
fs
aad
xor
stc
test
dec
fistpll
lods
mov
out
lahf
in
push
inc
and
mov
xchg
jmp
ljmp
call
lret
and
test
jmp
idivl
push
or
sarl
sub
jp
and
or
dec
inc
push
add
out
stos
push
inc
mov
push
stos
mov
add
icebp
push
sbb
sti
or
jecxz
clc
jo
mov
and
sbb
cwtl
cltd
cmp
aad
loopne
out
pop
aaa
lods
fwait
cld
or
aam
sub
dec
loop
stos
mov
in
add
jl
xor
mov
mov
sub
sbb
leave
arpl
js
add
hlt
leave
mov
call
dec
lea
mov
sub
movsb
sahf
adc
jle
and
mov
xchg
icebp
mov
sbb
inc
push
sub
stos
movsl
jno
je
xchg
mov
out
pop
into
mov
in
mov
add
and
hlt
mov
jl
inc
push
add
out
push
mov
jnp
add
insl
xchg
repz
or
mov
sahf
ss
dec
cltd
adc
fs
dec
lcall
sub
inc
cmc
sbb
cmp
add
jae
cmp
sbb
and
leave
push
mov
xor
xor
push
xchg
stos
and
shl
inc
mov
dec
out
cmc
insb
repnz
xchg
xchg
sti
push
push
iret
inc
pop
jae
jge
or
stos
in
les
jecxz
xlat
cmp
idivl
and
cmpsl
or
shr
lods
push
cmpsb
nop
add
mov
jnp
mov
mov
loopne
icebp
pop
scas
xchg
cli
push
xlat
std
lods
in
mov
inc
outsl
test
loope
stos
mov
adc
add
adc
scas
xchg
mov
sar
hlt
mulb
es
push
sti
scas
fwait
sbb
stos
mov
ficoml
imul
jnp
xor
pop
dec
mov
call
mov
orl
jne
aaa
loope
cmpl
xor
mov
ficompl
rol
push
dec
hlt
clc
rorl
pop
add
daa
nop
fdivs
ds
adc
sarb
notl
xor
out
mov
xchg
insb
fstpl
lahf
mov
dec
adc
xchg
mull
push
cmp
push
ret
ret
mov
pop
and
or
fnstsw
mov
pop
lods
cmp
cli
sub
jecxz
or
sbb
mov
shl
loope
fadd
sarb
xor
inc
imull
xchg
gs
fwait
pop
pop
les
push
add
xchg
movsl
cmpsb
or
cmpsb
rcrl
lods
jecxz
subl
add
jno
mov
mov
ret
dec
clc
insb
ss
or
mov
pop
fdivr
or
pop
mov
ret
sub
aad
push
xor
xchg
out
add
lock
pop
jp
dec
sub
xchg
repnz
into
outsl
dec
mov
cltd
sbb
outsl
imul
adc
jp
es
jae
jp
push
jne
mov
lcall
lea
scas
mov
sti
repz
or
lcall
xchg
cmp
pop
or
jae
ljmp
jle
inc
aad
inc
les
jmp
sbb
jno
arpl
xchg
fsubl
imul
xchg
ja
inc
cltd
xchg
loope
and
repz
sub
das
inc
xchg
loope
mov
jns
adc
test
sub
and
cwtl
jbe
adc
add
add
dec
popa
std
cs
iret
add
das
jbe
jbe
popf
or
inc
sti
pop
push
or
lahf
inc
mov
bound
call
mov
out
sti
sbb
pushf
stos
sbb
xor
jl
dec
clc
leave
lahf
xchg
inc
lds
neg
sti
add
sub
xchg
mov
dec
stos
dec
inc
mov
sub
ja
into
mov
movsb
cmpsl
pop
je
xchg
mov
int
adc
aad
jnp
aaa
mov
shrb
leave
jg
inc
fadds
adc
addr16
je
or
divl
xchg
xlat
inc
xchg
sti
adc
add
xor
mov
pop
pop
ret
mov
jp
lods
jnp
das
fisttpl
and
push
add
insl
popa
mov
sarl
ror
or
int
insb
push
jmp
ret
outsl
aam
in
je
aaa
sub
cmp
mov
in
cld
iret
xor
gs
inc
xor
ljmp
pop
mov
xor
cmpsl
shrb
stos
jbe
cmp
sahf
sti
lcall
nop
cmp
lret
sbb
or
push
fs
push
dec
aas
out
test
jbe
push
je
int3
inc
cmp
imul
push
roll
arpl
dec
push
add
xlat
insl
sub
sbb
pusha
sub
mov
or
aaa
mov
push
scas
fs
mov
sub
in
inc
pop
xchg
bound
adc
pop
enter
xor
mov
push
es
jae
dec
or
out
ja
inc
jnp
lret
cmp
enter
adc
sub
fldcw
idivl
outsl
inc
push
xchg
stos
lcall
pusha
mov
push
lods
adc
jbe
jmp
jge
stos
pop
pop
xor
and
daa
xchg
imul
popa
aas
paddusw
xor
cltd
adc
sbb
loop
lahf
sbb
je
movsl
inc
mov
lock
or
xor
fnstsw
hlt
adc
add
ljmp
cmc
out
or
sbb
ret
and
sahf
xchg
jg
jnp
outsl
dec
aas
ret
mov
sbb
les
mov
clc
int3
in
scas
cmp
mov
mov
movsb
cmc
sbb
out
adcb
std
movsl
daa
jmp
js
cmp
add
xchg
mov
mov
test
and
cmp
call
mov
mov
pusha
pop
fcoms
xlat
int
fcmovne
sti
cmc
scas
xor
daa
cli
lods
dec
fldl
add
scas
jecxz
mov
cmp
jg
movsb
or
popa
add
cmp
add
jmp
outsl
push
xchg
adc
cli
insb
repnz
jecxz
or
movsb
arpl
dec
imul
invd
rorb
cmp
sbb
stos
push
sahf
shr
mov
mov
sub
mov
xchg
std
dec
pop
ret
mov
fnsave
jno
stos
xchg
xchg
jmp
mov
outsl
das
xor
dec
sub
pop
xchg
daa
pusha
fiadds
fidivrs
sub
jg
and
loop
add
imul
ret
or
lret
jecxz
daa
push
sbb
cmpsl
push
xchg
mov
xor
dec
fimull
js
fiadds
fsts
shrl
push
mov
lahf
fdiv
cmpl
leave
push
mov
les
dec
jp
pop
pop
stos
fildl
mov
lock
xchg
xor
jmp
ficoml
js
mov
mov
bound
ficompl
xchg
add
mov
sub
fisttps
or
and
sahf
test
mov
stos
and
ret
mov
stc
jno
scas
xchg
cwtl
int3
outsb
jge
imul
jmp
add
lods
movsl
rolb
popa
ss
inc
hlt
add
and
test
or
fisttpl
mov
and
mov
js
xchg
pop
pushl
call
es
cmpsb
push
jo
mov
add
lcall
xchg
or
or
cmp
outsl
inc
push
mov
xor
movsl
sbbl
sbb
rorl
and
and
jbe
jae
ljmp
mov
push
and
mov
pop
jle
movsl
sbb
mov
xor
in
mov
icebp
iret
aas
or
fimull
test
dec
fmuls
popa
lock
enter
inc
fwait
pop
lea
mov
fcomp
pusha
enter
add
stc
xchg
into
cld
sub
in
or
jnp
popa
dec
sbb
inc
rcrb
fbld
dec
push
and
stc
xor
in
inc
data16
sbb
pop
jb
push
scas
sub
cmpsb
repz
out
jg
add
imul
mov
dec
rcll
fadd
jg
mov
xor
cltd
lods
arpl
pop
sahf
mov
divl
aaa
bnd
jp
insl
xor
mov
cmpsl
mov
das
xor
dec
dec
inc
ljmp
rol
enter
in
out
cmp
fstl
icebp
imul
aad
movsb
push
xor
lret
fsubrl
adc
pop
mov
popf
sub
mov
sub
cmc
rcrb
test
aas
dec
ret
pop
ss
dec
gs
inc
icebp
std
ret
cmp
add
inc
inc
pop
sbb
add
mov
std
add
mov
pop
bound
xchg
repnz
popf
out
push
adc
jmp
mov
push
mov
loop
sub
loopne
sbb
add
sub
mov
rep
dec
jae
fsubrl
xlat
and
jp
out
xor
mov
xor
scas
pop
pop
or
xor
movsb
test
lds
fmull
popa
or
jns
adc
movsb
aam
std
xor
and
pop
mov
push
fwait
mov
mov
and
jo
mov
lret
dec
insb
popf
and
orl
pop
adc
lcall
mov
outsb
call
int3
pop
xchg
pop
inc
les
cmpsl
mov
mov
pop
test
lock
and
inc
js
xor
jmp
jp
sub
aam
push
push
aam
xchg
je
adc
xor
jbe
fimull
xchg
adcl
add
loop
es
subl
xchg
xor
addr16
add
pop
add
data16
or
jecxz
fs
jne
and
imul
xchg
adcb
pop
dec
jns
xor
fnstsw
mov
test
pushf
outsl
in
jne
and
les
mov
xchg
mov
mov
pop
shrb
cs
ficoml
icebp
sbb
rol
sbb
push
dec
outsb
outsb
lods
rcll
clc
pop
jge
test
push
idiv
popa
mov
adc
xor
lds
out
movsl
shlb
enter
mov
clc
pushf
push
pop
xor
push
popf
ja
out
xor
int3
mov
jns
xor
fisubl
push
jl
adc
xchg
mov
cwtl
xchg
xchg
cmp
nop
popa
fadd
addr16
inc
outsl
fwait
aaa
lret
cs
aas
xchg
push
int3
mov
fadd
sbb
aad
push
lods
sub
loop
xchg
mov
mov
jo
les
insl
pop
xchg
mov
sub
dec
sub
imul
mov
clc
xchg
das
int
xor
leave
stc
xchg
push
xchg
push
xor
sahf
decb
lods
mov
push
cvtpi2ps
fwait
je
stos
testl
fcoml
in
je
mov
pop
dec
icebp
imul
scas
xchg
push
add
shrb
call
cmc
sub
lahf
push
adc
lds
xchg
lahf
call
jecxz
adc
lcall
xchg
jo
pop
mov
popf
shrb
pop
xor
stos
pop
cmc
push
fdivrs
movsb
cmp
mulb
inc
mov
adc
ja
in
stos
mov
lods
adc
popf
adc
push
pop
xlat
sbb
sbb
adc
dec
add
push
dec
and
sahf
aaa
test
sub
imul
cwtl
stos
jbe
into
xchg
push
jp
nop
inc
int3
fildl
stc
cld
sbbl
es
jg
aad
dec
repz
cmp
popf
in
dec
sub
cld
frstor
jnp
cmp
mov
mov
pop
mov
bound
aas
lea
and
fisubrl
stc
mov
sbb
aam
or
fndisi(8087
push
lea
ss
test
inc
jle
mov
adc
mov
and
outsb
lret
mov
mov
and
orb
or
mov
and
sbb
roll
jle
test
mov
xor
add
cli
adc
or
mov
sub
or
orl
pushf
cmp
cmp
fwait
out
in
sub
icebp
das
hlt
or
xlat
pop
int
jge
xorl
xor
cld
xchg
sub
pop
mov
insb
lahf
lods
push
cmp
dec
pushf
out
fstpl
push
bound
pop
xchg
aad
push
or
lods
pop
jne
inc
sbb
adc
lock
pop
sub
cs
aad
aaa
aad
inc
daa
or
sbb
data16
stc
movsb
jae
insb
out
rcrb
mov
mov
and
fisttpl
insl
bound
jnp
cmp
daa
popf
push
jecxz
mov
and
rcr
adc
cmp
test
insl
jp
xor
shlb
sub
aad
jecxz
bound
sub
into
enter
pop
std
loope
or
stos
scas
lods
shll
jno
lret
cld
lods
popf
fldl
test
mov
push
jle
loop
pop
add
cmp
xchg
and
jno
stc
sbb
orb
push
aad
sbb
es
pusha
in
in
out
daa
mov
and
rolb
mov
mov
popa
popf
fnstsw
inc
jle
mov
xor
push
bound
jnp
stos
test
lods
and
or
notl
lds
jle
ss
int3
adc
and
xchg
in
test
push
lods
inc
adc
ficoms
je
sub
mov
mov
push
or
push
mov
xor
sub
jge
cmc
mov
call
push
bound
stc
inc
inc
scas
or
movsl
push
testb
inc
sub
test
xchg
push
pop
pop
dec
enter
pop
and
or
shrb
sub
cmpsl
into
mov
push
fisubl
mov
outsb
push
dec
jns
scas
add
jb
aas
rcl
pop
mov
jp
int3
and
push
pop
dec
test
fnstcw
jnp
das
dec
push
repz
xchg
psubsb
loope
adcl
cmpsl
mov
cli
or
push
aam
pop
jb
inc
cmp
rorl
cmc
test
into
lcall
or
aam
and
fimull
out
dec
adcb
pop
out
mov
cmp
aam
out
add
out
mov
lahf
add
and
fwait
jg
fisubl
jbe
dec
xchg
mov
pop
xchg
dec
push
push
pop
in
xchg
out
scas
mov
mov
push
dec
pop
cltd
xor
out
das
push
test
jne
add
shlb
add
lods
ljmp
rcll
jge
addr16
jb
pop
lret
fnsave
inc
sub
jle
push
nop
pusha
repz
fcompl
lret
loope
aaa
inc
sbb
pop
push
and
mov
fcomps
cmp
jle
dec
push
xchg
lods
dec
add
int3
icebp
int
mov
dec
sbb
jno
ret
xchg
addr16
loopne
or
push
push
sub
cmp
rorl
xor
cmpsb
lods
add
fimull
inc
shll
pushf
add
add
xchg
jne
iret
cmc
push
inc
or
sahf
xchg
iret
in
jno
int3
jle
lods
add
adc
pusha
xor
push
add
mov
bound
xorb
fs
mov
bound
add
daa
cld
outsb
push
xor
or
sbb
dec
xor
mov
lods
scas
inc
mov
fcomp
ror
les
add
xchg
mov
repz
push
unpckhps
imul
mov
pop
xchg
ds
cwtl
mov
ljmp
ljmp
xor
loop
push
in
popf
add
or
ljmp
lds
mov
jno
adc
or
fst
xchg
jo
into
dec
push
dec
xor
xlat
mov
inc
xor
lcall
cmp
adc
xchg
sbb
xlat
xor
pop
int
stc
xor
sub
into
jo
fcoms
sub
aaa
insl
mov
add
jno
loope
in
arpl
mov
loopne
lcall
mov
pop
push
jno
mov
mov
dec
test
stc
add
push
cmp
jnp
dec
mov
iret
ja
xchg
sti
mov
pop
or
movb
imul
ss
push
lock
mov
lods
sbb
lret
addr16
test
jno
hlt
pop
out
lcall
mov
int
mov
shl
in
int3
mov
cmp
pusha
scas
jg
xor
insb
xor
cli
lahf
jmp
out
ficoms
enter
sti
sbb
push
jge
outsb
nop
movsb
aaa
mov
rcl
aaa
sbb
mov
xor
lahf
fbstp
test
fistps
aas
jmp
les
xor
inc
fsubl
xchg
jo
xchg
jmp
cmp
mov
lds
pop
dec
and
std
fcompl
inc
enter
fld
dec
or
lds
dec
sbb
sti
fbstp
push
push
test
sub
enter
dec
or
std
movsl
jnp
inc
pop
mov
dec
sub
lods
insl
xor
mov
in
and
mov
and
cmp
mov
xchg
push
jp
push
or
fnstenv
mov
rcrl
add
push
fstp
fildll
icebp
loope
divb
lahf
xor
repz
cld
xor
pop
or
dec
fsubrs
leave
inc
addl
push
adc
inc
movsl
loope
lret
ss
adc
xor
std
int
notb
jnp
mov
scas
icebp
es
enter
cmp
scas
add
dec
or
rcr
lahf
test
pop
inc
loop
mov
cmp
out
popf
rclb
xchg
sub
int
cmp
fwait
test
repz
add
xor
or
fsts
and
add
fiadds
imul
inc
mov
pusha
adc
cld
dec
mov
and
sub
fs
aas
test
pop
lds
mov
adcb
mov
mov
xlat
mov
push
mov
inc
repnz
xchg
mov
enter
jo
or
dec
dec
sbb
les
jo
and
or
enter
scas
aas
cmpsl
cmc
imul
sbb
ret
and
loop
rorb
test
lea
in
inc
std
push
insb
es
dec
adc
scas
out
pop
or
outsb
and
jmp
pop
test
pushf
push
fisttpl
test
jb
jbe
rorb
cmp
out
jne
aaa
cltd
jmp
mov
test
dec
sub
jnp
mov
loop
adc
cmp
xor
cwtl
sub
lcall
cmp
xchg
bound
fiaddl
xor
pop
out
dec
nop
push
jp
sub
popf
jnp
mov
jo
sub
out
push
les
pop
mov
jle
sub
cmp
repnz
mov
clc
out
aaa
mov
inc
mov
and
shlb
ds
je
imul
cmp
cmp
addb
lcall
mov
in
pushf
sahf
shlb
lret
adc
sub
mov
mov
loop
or
int
pop
sar
icebp
sahf
filds
fnstsw
xchg
cmpsb
inc
nop
push
sbb
mov
pushl
push
jbe
jo
add
imul
add
fsubr
sbb
insl
pop
push
pop
ja
push
mov
lretw
imul
test
out
push
or
push
outsl
xchg
movsl
lret
lcall
icebp
push
add
fsubrl
xchg
inc
jecxz
ljmp
cmp
fmuls
aas
enter
pop
lahf
mov
jae
scas
pop
push
cmc
ret
or
and
mov
insb
hlt
mov
test
insl
hlt
mov
dec
lcall
dec
xchg
pop
jae
mov
in
dec
and
xor
and
push
push
push
lahf
and
mov
mov
mov
fcompp
mov
das
mov
lret
rcl
scas
gs
mov
inc
xchg
sbb
test
add
gs
sti
btc
cmpsl
xchg
mov
push
cmp
jge
inc
js
fwait
pop
adc
aam
and
dec
ds
xor
shll
jle
lret
mov
pop
sub
in
ds
push
jmp
sbb
jg
and
stc
cltd
jne
out
pop
sti
stos
or
into
xchg
add
push
cmpsl
stos
insl
loopne
sub
push
push
lea
loopne
ss
and
and
xchg
and
dec
sbb
dec
inc
aam
in
adc
xchg
ror
jbe
daa
cmp
pop
xlat
std
mov
cmpsl
jp
loop
mov
cmpsb
movsb
je
and
cld
lods
mov
xchg
and
or
cmp
jne
mov
pop
xor
into
jno
bound
cmp
mov
and
fwait
lret
sub
ds
dec
inc
sahf
lahf
sbbb
and
shlb
clc
inc
xchg
mov
push
xor
sub
hlt
push
pop
adc
inc
mov
lock
ds
mov
add
and
stc
push
in
inc
outsl
fdivs
cs
sub
popf
dec
pop
ret
cmpsb
stos
test
xchg
or
pushf
push
cmpsl
bound
into
in
repnz
sbb
movsl
inc
or
ret
mov
sub
neg
call
push
call
pop
or
and
mov
cld
mov
jo
inc
cmp
sbb
cmp
push
sub
dec
daa
popf
idivb
sbb
addr16
sub
mov
sahf
cwtl
adc
fidivrs
add
int3
mov
xor
push
dec
jbe
and
adc
push
jge
pop
mov
sbb
cmp
mov
insb
lcall
sub
imul
mov
xlat
xor
sahf
bound
push
add
push
add
jg
mov
and
insl
leave
sub
pop
dec
ret
add
mull
xchg
sbbl
sbb
out
orb
xor
and
in
jg
adc
les
cmpsb
xchg
xchg
in
or
jle
lds
push
add
push
scas
jo
or
mov
jg
cmpsb
movsl
lea
mov
out
sbb
cmc
add
dec
insl
int3
gs
out
pop
outsl
test
in
dec
push
insb
inc
mov
test
lret
jmp
xchg
into
lcall
jnp
or
ret
inc
mov
jge
pusha
sbb
jecxz
push
imul
clc
add
jo
shl
outsb
cmpsl
mov
adc
cs
push
sub
push
mov
and
pop
jbe
pop
ror
daa
loope
lcall
cld
popa
cmc
cmpl
shl
imul
mov
and
jo
mov
fs
bound
dec
lock
cltd
stc
xchg
add
add
rcrl
mov
fucomi
je
or
jns
mov
inc
sbb
scas
xor
ds
je
push
xor
sub
sbb
icebp
and
outsl
sbbl
hlt
xchg
leave
movsl
or
int
or
call
in
xor
in
adc
cltd
dec
inc
mov
push
out
adc
test
mov
test
cld
lods
push
sbb
cmpb
enter
mov
daa
mov
dec
scas
push
ret
cwtl
rcrb
insl
pushf
xchg
data16
jnp
daa
call
xor
adc
movsl
daa
mov
push
test
xor
arpl
or
mov
jbe
and
sub
and
sbbl
cmp
sti
mov
inc
or
dec
lods
lcall
jbe
and
enter
inc
xor
or
les
push
fistl
mov
aas
in
enter
inc
xchg
fadd
adc
sahf
loope
jne
lds
sahf
xor
cwtl
test
jbe
lock
pusha
adc
push
cmp
leave
push
clc
pop
sahf
scas
push
das
or
push
push
sub
in
push
xchg
pop
ja
jl
outsl
pop
xchg
cld
sti
fldenv
mov
sbb
jnp
cmpb
push
adc
fld
mov
orb
sbb
cs
pop
xorl
fcomps
pop
lods
mov
mov
out
jecxz
adc
scas
imul
xchg
push
cmpsl
sub
inc
aam
add
inc
mov
je
xor
or
pop
out
mov
push
mov
fdivrl
inc
cli
fcompl
inc
ret
push
xchg
sbb
repnz
scas
adc
xchg
in
xor
mov
fnsave
xchg
test
push
cmp
sub
test
hlt
rol
movsl
shl
nop
cmp
sbb
xchg
jmp
xchg
xchg
mov
divb
mov
bt
sbb
jbe
bound
add
fidivrs
loopne
das
shl
cmc
xchg
shlb
rol
sbbl
fists
cmp
jl
ljmp
inc
push
lock
mov
pushf
aam
cmp
mov
aad
mov
inc
xor
add
xchg
sub
loope
lods
mov
cmpsl
mov
cli
cwtl
xchg
lahf
arpl
xor
cmpsb
dec
add
dec
call
pop
arpl
iret
sub
inc
daa
xor
add
xor
loop
sbb
loop
mov
jl
inc
mov
jg
cmp
mov
dec
insl
pop
sub
inc
jnp
pop
fiaddl
rorb
xchg
cld
pop
lahf
push
pop
fstp
push
sub
sbb
jmp
test
dec
mov
std
pop
and
jmp
stc
jno
add
mov
mov
int
out
clc
sub
mov
lock
movb
xchg
jno
ret
loopne
dec
dec
int3
mov
ror
mov
push
add
inc
push
xor
iret
jb
and
pop
fidivrl
and
repz
adc
in
mov
pop
or
lods
adc
adc
lea
push
pushf
pop
dec
icebp
popf
mov
sub
dec
mov
bound
push
add
add
push
test
xchg
test
jmp
pop
cmc
push
shll
pop
jnp
push
push
jnp
subl
shlb
sub
sub
mov
bnd
mov
sub
mov
cs
dec
xor
xor
add
push
daa
insl
in
dec
out
xor
dec
or
push
add
ds
repz
sub
jbe
jnp
adc
sub
jp
es
cmc
sub
into
jecxz
dec
push
pusha
lahf
adc
in
inc
lock
movsb
jp
mov
imul
push
pop
sbb
into
and
mov
inc
xor
insb
js
jge
lcall
push
es
jb
stc
pushf
mov
push
lods
or
mov
bound
fcompl
pop
mov
mov
mov
cmp
pop
cmp
faddl
cmp
xor
adcb
lcall
mov
mov
es
jmp
jns
rolb
mov
insb
nop
cli
movsl
scas
sub
cs
rcl
cli
xchg
push
fsts
sbb
mov
sbb
les
loope
sbb
lahf
ret
fdivp
cmp
sub
pushf
jns
in
xchg
mov
hlt
mov
mov
jp
ja
xlat
leave
leave
mov
cltd
les
dec
rolb
cli
mov
or
sti
jne
push
addps
test
ds
dec
insl
fisttps
leave
pop
stos
jb
ja
daa
sbb
jl
or
lods
add
adc
jnp
cmpsb
fistps
les
repz
out
stc
add
test
mov
dec
mov
dec
mov
out
dec
std
arpl
lock
mov
sbb
cmp
fdivrs
ljmp
cmc
lods
popa
cltd
lret
ret
fwait
lods
call
bound
sub
and
mov
out
inc
shl
call
dec
adc
push
cmp
mov
cmc
add
mov
stc
push
lods
dec
and
mov
inc
sub
xor
mov
sbb
test
cmpsb
cmp
xchg
lret
fldt
std
psubq
inc
xor
lock
and
xor
cmpsl
mov
fwait
divb
rorb
xor
dec
in
je
ror
mov
jne
mov
mov
cld
mov
pop
inc
add
lods
clc
out
push
and
idivl
sbb
sub
xchg
jno
xchg
lcall
jle
scas
pop
sub
fisttps
or
movsb
lahf
insl
ljmp
xchg
cltd
xorl
les
xlat
in
enter
es
pushf
out
adc
mov
adc
jecxz
int
testb
xor
mov
mov
lods
jne
movsl
push
aam
cld
jbe
jmp
into
movsb
test
rcrl
sbb
cmp
sub
leave
mov
pop
mov
stc
cmpsb
addl
int3
testb
call
or
movsb
mov
add
mov
lock
outsl
pop
sahf
int
lcall
test
xchg
daa
pop
jg
lods
and
sarl
cmp
sub
cmp
sub
adc
and
adc
jo
or
inc
pop
imul
aam
rol
out
push
jo,pn
mov
mov
cmc
mov
lock
mov
sbb
scas
xor
push
repnz
mov
fcompl
xor
scas
test
dec
ret
ret
outsb
aaa
dec
nop
lahf
vpcmpgtd
or
cmpsw
leave
adc
sahf
push
aam
sarb
pop
adc
jmp
pop
sub
pop
and
subb
cmpsb
jl
pop
push
push
cmp
xchg
bound
mov
imul
sub
mov
adc
repnz
sbb
jns
jle
sbb
inc
scas
pushf
jmp
idivl
icebp
xor
loopne
imul
or
testl
jns
sub
mov
or
fldl
push
add
enter
fcompl
mov
inc
cld
les
sarb
inc
mov
sub
jae
push
lahf
movsl
mov
xchg
xchg
loopne
cmpb
ljmp
es
mov
outsb
stc
mov
jl,pn
xchg
insb
mov
xchg
jmp
add
daa
push
jne
push
dec
lea
cmpsb
adc
xchg
pop
dec
sub
cmc
or
xchg
fyl2xp1
in
daa
cs
and
xor
push
adc
in
fsubr
jp
lock
cmc
pop
movsl
imul
and
jecxz
sub
ljmp
or
inc
mov
cmpsb
test
ds
or
jmp
inc
cmp
xchg
std
aas
mov
sahf
clc
movsb
jl
iret
in
mov
sub
rcrb
push
fistl
mov
ss
mov
pop
push
pop
sub
rcll
mulb
push
mov
mov
or
mov
scas
dec
and
rcll
cmp
mov
xchg
iret
aam
adc
xchg
mulw
mov
jge
jp
outsb
in
inc
imul
adcb
push
pop
testb
inc
dec
movl
test
shl
jg
icebp
cli
mov
aad
aas
xlat
sbb
flds
imull
xchg
mov
call
ror
inc
cmpsl
je
pop
gs
ljmp
sub
sub
ret
imul
in
pop
imul
push
and
pop
insb
pop
adc
jno
stos
mov
rol
xor
faddl
push
out
insb
cwtl
and
mov
ret
push
lret
mov
seta
jno
and
push
sbb
pop
xchg
push
daa
test
or
loopne
sahf
cmpsl
xor
in
mov
xor
stc
mov
mov
dec
adc
mov
std
sbb
cmpsb
orb
enter
mov
dec
jae
xchg
dec
cmp
mov
and
aad
insl
aam
nop
inc
and
cmpb
cmp
vandnps
sub
xor
mov
cmp
jo
aas
adc
scas
add
or
mov
fsubrl
inc
adc
insb
leave
out
shlb
xor
pop
push
addb
jne
dec
in
inc
sbb
scas
pop
lcall
push
mov
adc
aas
cld
test
sbb
pop
int3
add
fisubl
and
jo
pop
popa
mov
les
push
jo
or
lret
int3
repz
subl
and
xor
sbb
lods
insb
or
mov
lcall
xor
add
loope
push
stos
popa
scas
add
in
pushf
or
push
mov
or
add
or
and
sub
xor
push
pop
nop
int3
mov
or
lret
pop
outsl
movl
jnp
sbb
and
mov
lret
push
push
xchg
and
mov
enter
jo
pop
mov
fwait
push
cmp
int
imul
mov
adc
pop
push
leave
fsub
dec
mov
sub
add
jns
inc
and
je
push
xchg
cltd
cld
cwtl
xor
jecxz
shlb
mov
popf
das
pop
add
popa
push
or
sub
jecxz
hlt
mov
lret
cmp
dec
push
in
dec
push
pop
jno
out
mov
test
lock
testl
lcall
sbb
subl
lods
pmaxub
jno
xchg
stos
dec
or
insb
xor
icebp
dec
xor
inc
inc
push
dec
pop
js
daa
mov
ret
cmp
loope
pushf
and
stos
jl
dec
push
lods
and
push
flds
pop
mov
or
leave
jmp
cmp
inc
cmpb
scas
pop
cmovbe
xchg
repnz
jecxz
stos
lods
push
xchg
rcrl
flds
addb
jle
sub
aaa
xor
iret
lcall
xor
mov
enter
out
fisubl
xorb
mov
jl
or
mov
pop
cmp
jp
pop
aas
xor
pop
or
mov
sbb
or
lods
cmp
cmp
fdivrs
cltd
mov
loop
imul
inc
pop
mov
and
mov
bound
aam
mov
mov
adc
adc
stos
adc
jmp
pop
pop
sub
jo
inc
xchg
and
enter
or
shrl
aad
xchg
out
shlb
mov
pop
loopne
call
adc
push
pop
clc
mov
add
pop
je
adc
addr16
cmp
in
lahf
pop
pop
aas
and
jns
cltd
mov
popf
lea
lea
out
out
cli
in
lods
sub
imulb
cmp
mov
push
aas
cwtl
xchg
roll
push
dec
mov
and
outsb
ficompl
repnz
bound
ss
xlat
insl
pop
push
lea
gs
sub
enter
adc
cmpsb
cmp
dec
lea
out
lock
mov
loopne
bnd
xchg
mov
mov
xor
sti
je
hlt
dec
into
hlt
cmp
in
mov
fstpt
lret
jae
push
xor
into
mov
pop
lret
lcall
jnp
push
mov
mov
rcrl
pop
out
pop
xor
jle
addr16
mov
sbb
pop
jns
mov
shlb
pop
jmp
stos
jae
mov
push
lods
ficompl
push
rcr
mov
movsl
lcall
int3
aaa
js
fbstp
lahf
sub
dec
scas
and
nop
stc
dec
rcr
or
add
mov
pushf
dec
dec
pop
ret
jp
insb
cmp
dec
pop
rolb
into
stc
sub
push
mov
aaa
dec
lock
jno
out
fdivr
in
fists
data16
es
cwtl
dec
pusha
fwait
cmpsl
inc
inc
in
cmp
sbb
inc
mov
data16
xor
lcall
xchg
mov
sub
outsb
xchg
rcrl
repz
mov
jnp
sbb
pop
push
mov
mov
int
jle
pusha
aas
mov
ja
inc
mov
iret
lods
popf
andb
adc
sbb
test
iret
and
mov
dec
cli
outsl
rolb
and
sbb
push
sbb
mov
mov
mov
xchg
xor
aam
xchg
add
push
adcl
mov
iret
sub
leave
pop
jle
cmp
movsb
mov
cwtl
in
shlb
push
sub
addr16
iret
mul
bound
popf
frstpm(287
movsl
lahf
push
jo
lea
adc
adcl
xchg
sub
add
fistpll
popf
int
cmp
inc
sbb
cld
push
testl
push
pop
or
sbb
movsl
int
lock
cmp
cmp
push
mov
sub
jbe
popf
xlat
call
or
out
pop
insb
mov
shrb
ja
enter
notl
push
xor
fildll
sti
nop
lahf
mov
inc
dec
cmc
sub
jg
mov
add
inc
test
sbb
mov
or
ret
pushf
aaa
sub
in
xchg
add
jno
ss
or
mov
mov
push
add
and
imul
jb
pusha
rcrl
push
add
aaa
sbb
xlat
mov
xchg
mov
ret
clc
imul
xchg
fadd
icebp
xchg
add
ja
jmp
movsb
loop
lods
dec
scas
hlt
rcrb
inc
push
sahf
lods
lret
outsl
xchg
je
imul
inc
pop
jle
nop
mov
loope
pop
and
xor
add
push
rol
adc
nop
pop
xchg
into
add
push
sahf
int3
or
add
xchg
loop
dec
adc
jp
mov
addl
jne
xchg
jg,pt
aam
enter
lods
loop
test
push
cltd
imul
or
xor
fxch
out
or
out
xchg
ja
cld
push
imul
repnz
test
xlat
icebp
lods
movsl
xchg
mov
jl
loop
fsubr
pop
cmp
push
lret
loop
jmp
cli
push
mov
pop
lods
push
sub
dec
outsl
push
sbb
pop
dec
mov
ss
das
ret
cmc
js
stc
shl
pushf
inc
push
or
jmp
cmp
dec
loop
mov
mov
or
mov
shl
adc
sub
gs
sub
inc
sbb
pop
push
push
out
mov
sbb
inc
das
xchg
cwtl
aad
add
cmp
or
rolb
in
cmp
xchg
lods
and
pushf
adc
pop
push
push
dec
pop
call
movl
in
mov
es
dec
das
mov
cmp
add
outsl
shll
insb
cmpsb
xor
popf
lret
adc
shlb
push
test
addr16
push
aas
mov
mov
fldt
mov
pop
test
pushf
lea
xor
push
out
loopne
gs
pop
add
sbb
icebp
cmpsb
dec
inc
int
outsb
outsl
les
push
fcmovbe
push
es
ret
or
cmpl
decb
xor
dec
mov
jecxz
in
hlt
mov
fimull
and
loope
inc
cmp
adc
adc
mov
out
pop
lret
icebp
push
push
pop
sbb
pop
das
arpl
ret
in
mov
jecxz
repnz
lret
mov
int3
jo
stc
notl
and
pop
pop
aas
repnz
dec
addr16
and
and
cmp
cli
xor
cmpl
sbb
mov
jno
les
rorl
lea
push
sarl
out
jne
cmp
outsl
mov
mov
sarl
xchg
mov
push
lock
add
inc
sub
push
and
inc
inc
add
xor
movsl
imul
mov
xor
dec
out
inc
and
pop
inc
sub
cmpsb
mov
outsb
xchg
sub
jne
push
je
in
movsl
pop
push
pushf
xor
cwtl
arpl
sahf
pop
adc
jecxz
adc
test
fidivs
aas
xchg
outsb
push
push
popa
sbb
stos
mov
fistl
sbb
pop
jp
bnd
cmp
aas
cwtl
jle
outsl
cmp
push
int
xchg
pop
imul
dec
cmp
movsb
add
inc
push
pop
out
sub
out
loop
rol
sub
dec
jb
hlt
and
mov
in
aaa
repnz
inc
cmp
sbb
dec
das
fdivl
es
mov
fdiv
sbb
pop
lds
dec
loope
cmp
loopne
pop
data16
subl
jl
es
mov
hlt
pop
sbbl
mov
loop
and
aam
pop
push
xor
add
fidivrl
lret
and
push
mov
mov
mov
jecxz
cmpsb
jns
jmp
sbb
cmpsb
mov
call
mov
xchg
loopne
mov
imul
add
mov
mov
insb
mov
pop
cs
bnd
add
sub
and
out
pusha
jle
sbb
daa
rcl
mov
xor
cmpl
mov
aam
fsubrs
es
rcrl
in
arpl
aad
cwtl
pop
push
fnsave
push
cwtl
and
in
mov
push
stos
pop
xchg
jmp
add
jg
pop
sbbb
adc
sub
insb
xchg
jb
inc
data16
pop
pusha
mov
jbe
stos
or
mov
mov
mov
fidivrs
test
jmp
aam
mov
fidivs
jno
ret
icebp
add
repnz
push
mov
dec
aam
add
ss
popf
out
negl
outsb
jb
dec
adc
fxch
or
cmp
jmp
push
or
aad
sbb
fidivs
jg
ret
mov
repnz
scas
xchg
push
xchg
mov
scas
lds
add
ss
nop
jmp
mov
in
inc
test
out
cmp
pop
icebp
xchg
push
inc
mov
pop
pusha
cmpsb
sub
sub
fidivrs
xchg
sbb
aam
addl
ds
gs
inc
das
stc
jns
jbe
cld
sbb
push
or
jg
xchg
out
adc
iret
inc
xor
lahf
jne
mov
xor
push
sub
rorb
test
fs
push
outsb
lcall
mov
jns
pop
scas
dec
pop
ffreep
ss
pop
das
out
xchg
imul
roll
lret
add
xlat
sarl
rcr
insb
xchg
mov
jb
test
out
pop
xlat
push
ret
sbb
sub
lret
dec
mov
jbe
enter
sarb
adc
movsb
adc
clc
int
fiaddl
mov
sbb
xor
icebp
int
cltd
clc
nop
sti
mov
jmp
lahf
inc
fstpl
sahf
or
divb
xlat
pop
sbb
call
shrb
cltd
jno
inc
insl
pusha
popf
cmp
jecxz
inc
xor
repnz
aaa
mov
sahf
daa
mov
xor
cmp
mov
loop
stos
pop
mov
popf
and
xchg
or
inc
pushf
add
jg
inc
loope
add
mov
in
mov
mov
jle
mov
jne
push
pop
or
addr16
rcll
jb
mov
ljmp
icebp
push
jle
xor
push
jmp
out
pop
iret
testb
rcll
mov
arpl
dec
mov
shrb
ret
dec
adc
inc
or
lea
test
loope
sbb
loopne
icebp
mov
push
lahf
fwait
imul
js
dec
cmp
dec
push
sbb
std
add
imul
lds
cmp
jnp
xor
scas
int3
ljmp
pop
jae
jns
xor
mov
inc
cmpsb
nop
jo
adc
mov
pop
movsb
adc
cmp
mov
in
xchg
jae
icebp
jae
adc
dec
lret
aad
dec
mov
mov
push
scas
jp
icebp
jns
xor
jae
mov
mov
and
inc
mov
jne
icebp
cmpl
mov
mov
push
push
dec
adc
jg
cmpsb
xchg
jp
loop
or
pushf
test
add
push
jg
cld
inc
jnp
roll
cltd
or
xor
sbbl
bound
sub
cmpsl
dec
mov
ret
lahf
dec
hlt
stos
dec
mov
dec
andl
repz
cmpsb
push
xchg
xchg
mov
hlt
mov
rcll
push
pop
xor
lods
scas
adc
ret
adc
pop
add
xchg
inc
and
mov
das
fldcw
adc
xor
jnp
lahf
xchg
mov
lcall
rorb
pop
ljmp
sbb
mov
push
cmpsl
orb
cld
gs
jo
aam
cmp
aad
lcall
or
sti
and
test
lahf
mov
in
xchg
cmp
aaa
jle,pn
stc
lods
inc
mov
lret
mov
movsl
sub
inc
lcall
imul
inc
loop
pop
mov
xor
imul
xchg
push
xor
jbe
mov
mov
or
das
xorw
faddl
loopne
lock
xor
inc
mov
inc
ss
mov
test
jmp
aaa
call
dec
mov
xchg
fwait
mov
jne
repz
fldenv
das
stos
daa
stos
cmp
fcoml
xchg
ja
adc
fs
in
enter
mov
xchg
xchg
mov
inc
push
dec
or
insl
cli
jae
mov
or
push
sbb
aad
lret
xchg
in
and
out
inc
cmp
inc
mov
jb
mov
or
test
mov
stos
cmpsb
lods
and
outsb
xchg
rolb
scas
jp
or
inc
or
mul
int3
lock
adc
mov
outsl
into
lds
dec
or
cmpb
movsb
jmp
outsb
fnstsw
lret
aaa
xchg
lods
sub
fyl2x
jl
out
pop
dec
jge
mov
xor
pop
jmp
daa
mov
jecxz
sti
sbb
mov
out
lret
gs
mov
dec
ds
mov
mov
xchg
inc
mov
mov
mov
cmp
mov
fadds
ret
ss
cltd
test
mov
mov
js
loope
jbe
pop
outsb
push
xchg
call
xchg
cmp
lahf
lods
pop
icebp
outsl
inc
push
pop
and
xor
sbb
jbe
cmp
sub
mov
cmp
sbb
push
pop
das
lock
sti
rolb
es
xchg
lock
mov
mov
mov
cmpsl
pop
jle
lcall
and
pop
sbb
cmp
xor
dec
ret
dec
jecxz
and
fcomps
pop
xorl
ret
shrb
jo
insb
aaa
dec
in
push
pop
ds
jb
jo
movsb
xor
test
push
dec
jl
xchg
pop
push
test
pop
push
shrl
inc
les
pop
gs
arpl
jno
xor
js
lret
movsl
dec
out
sub
adc
fistpll
lahf
dec
cmp
push
jns
out
mov
or
dec
jns
mov
dec
outsl
lret
cltd
int3
imul
or
push
adc
xchg
cmc
and
sub
ljmp
dec
mov
nop
negl
stos
in
mov
lcall
dec
adc
pop
mov
xlat
ret
sbb
fists
push
nopl
adc
rol
fstpt
shl
dec
pop
das
ds
push
test
jae
movsb
push
pushf
mov
orb
push
out
jne
stc
jl
ud0
xchg
mov
sti
lods
jb
push
mov
fisubl
or
ffree
sbb
into
add
or
scas
mov
push
pop
push
pop
imul
imull
xchg
xor
inc
addr16
jne
aaa
inc
out
sub
jmp
test
icebp
sbbb
hlt
sbb
push
pop
mov
fiadds
jns
mov
pusha
imul
std
lock
mov
pop
notl
inc
xchg
inc
push
xor
insl
or
sbb
mov
imul
les
add
mov
insb
pop
cmp
sbb
insb
adc
inc
testb
test
pop
inc
pop
out
in
rclb
daa
xchg
int
pop
jmp
gs
incb
or
cmp
sbb
mov
mov
cmpsb
add
pop
or
mov
add
loope
push
dec
movzbl
lods
xor
xor
sbb
push
int3
hlt
test
xchg
and
and
mov
out
mov
mov
lret
out
cmp
outsl
shll
mov
mov
push
mov
inc
add
std
inc
xchg
int
jecxz
loop
adcl
ja
daa
fidivs
adc
cmp
fistl
mov
mov
fisubl
and
mov
lcall
cs
mov
cmpsl
cmp
pop
or
test
dec
js
dec
or
mov
pop
adc
mov
es
push
ljmp
imul
inc
fsts
adc
sub
sbbl
mov
cmc
repnz
jbe
xor
pop
lods
out
lea
jmp
popa
ljmp
and
or
xor
mov
mov
int
sbb
sarl
stos
mov
push
push
adc
sub
mov
ljmp
out
cltd
testb
jp
xor
cmp
sbb
pop
push
and
pop
push
jne
cmpsb
push
pop
into
imul
xor
push
pop
out
cmp
dec
ret
std
out
pop
int3
in
sbb
cmp
jne
pop
sbb
sbb
dec
mov
fildll
call
rolb
sti
gs
mov
mov
inc
iret
cmc
addl
push
or
mov
test
sbb
shlb
sub
std
ja
and
leave
cltd
jmp
mov
push
data16
sbb
into
sysret
mov
sbb
sti
mov
sbb
fcmovnbe
ljmp
or
jmp
dec
enter
xor
enter
dec
idivl
or
cs
cmpsl
mov
xchg
push
rcrb
addr16
mov
or
adc
mov
and
cmp
sub
rol
jo
cmc
pop
in
or
or
js
cmpsb
cld
pusha
push
mov
cld
aaa
dec
push
fidivrs
ja
clc
mov
jbe
add
push
flds
cmp
dec
mov
mov
loopne
pushf
dec
fisttps
fnstenv
cmpsb
popa
xchg
outsb
mov
mov
mov
ljmp
xchg
stc
mov
in
jmp
mov
lds
ss
and
mov
cmp
dec
fiadds
jl
adc
jns
xchg
jge
xchg
jmp
dec
ret
into
pusha
add
cmp
rorl
loop
pop
icebp
and
inc
mov
pop
sti
daa
and
out
sbb
test
mov
mov
sub
jecxz
movsl
iret
cli
mov
je
mov
cs
cmp
lods
fsubs
lds
jmp
cmp
dec
pop
shlb
bound
xor
lea
sub
je
sahf
dec
data16
lret
push
jecxz
leave
aad
and
add
push
divb
push
add
popf
ljmp
xor
or
cmp
subb
xchg
inc
mov
pushf
inc
aad
outsb
xor
enter
xchg
mov
js
rcrl
pop
fisubl
out
movl
sbb
pop
add
dec
sub
dec
xchg
push
or
sahf
dec
jne
cmp
push
adc
sbb
ss
mov
mov
int
xchg
mov
dec
pusha
mov
ret
and
psubd
pushf
shl
fdivrl
sbb
mov
fcmovne
jno
jge
test
ja
dec
and
hlt
sub
lea
mov
mov
cmc
pop
mov
and
jae
daa
cmp
js
icebp
push
cmp
xchg
cwtl
or
xchg
or
or
cmpb
xchg
jp
pop
sub
into
aad
cmp
dec
int
push
gs
mov
gs
test
repnz
aas
or
daa
shl
arpl
dec
push
lret
mov
cld
dec
xchg
xchg
or
sub
in
sti
mov
sub
xorl
test
test
dec
cmp
pop
cmp
popa
cmp
mov
xor
lret
sub
jbe
push
sbb
pop
mov
mov
mov
test
add
jo
add
out
adc
sbb
and
fwait
imul
cmc
inc
dec
mov
or
sar
xor
pop
les
adc
jecxz
add
loop
sub
inc
jb
lret
mov
or
adc
pushf
pop
incb
xchg
xlat
mov
inc
add
mov
lcall
shrl
fldcw
out
fcoms
adc
popf
ljmp
inc
aam
dec
aaa
out
iret
cmp
test
std
in
movsb
negl
popa
sub
fnsave
addr16
jl
enter
push
mov
sub
cmc
jb
or
cmpb
dec
outsb
inc
xor
cli
lret
call
arpl
jmp
dec
and
add
icebp
lcall
jns
in
inc
mov
dec
rclb
xor
and
push
mov
jl
jb
jle
movsl
dec
cld
dec
pop
xchg
hlt
inc
xchg
jb
in
jl
imul
loopne
xchg
in
jb
xor
pop
cmp
sbb
jno
dec
enter
shll
in
or
pop
aad
xchg
out
adc
add
jg
pushf
push
cmc
jge
cmp
lods
pop
addr16
pop
sti
inc
xchg
jmp
out
push
add
push
pop
pop
lret
cmpsb
xor
xor
out
mov
adcb
shrb
cld
or
and
incl
lods
outsb
out
cmpb
and
adc
call
push
cmp
jnp
lods
mov
jbe
push
lods
imul
xorb
push
fisttpll
loopne
outsb
add
fsubr
pusha
dec
nop
sarl
sahf
ret
jnp
push
lock
mov
pop
rorl
ja
or
mov
hlt
out
rorl
and
cmpsl
sub
jbe
shll
shlb
xchg
push
mov
push
sub
push
mov
imul
dec
jno
sub
xor
xchg
push
adc
jb
pushl
rcrl
push
xchg
lcall
lret
jmp
adc
negl
loope
mul
les
aaa
jae
inc
nop
fstpl
mov
stc
inc
jle
dec
sbb
fs
push
movsb
pusha
xor
ret
cmp
adc
push
or
jo
jbe
imul
sbb
pushf
cmp
jb
mov
lret
jns
mov
test
push
inc
inc
stos
ja
jp
dec
mov
scas
jge
xchg
xchg
mov
subb
fiaddl
enter
js
aas
xlat
or
sbb
mov
decb
iret
jae
ret
mov
sbb
jecxz
aad
pusha
sbb
jl
cmp
xor
xchg
out
mov
jl
outsb
les
fstpt
cli
dec
jmp
filds
fiaddl
popf
xor
jmp
push
outsb
push
pop
bnd
fwait
clc
add
cmc
ds
or
mov
push
or
mov
push
loope
call
pusha
sub
jno
push
inc
sbb
mov
mov
mov
sbb
pop
xbegin
movsl
sbb
add
mov
push
pop
js
fistpl
jecxz
pop
lahf
int3
dec
or
les
pop
xor
icebp
and
lcall
pop
mov
xor
fsubr
xchg
movsb
icebp
fildll
insb
stos
loop
inc
out
mov
jo
adcb
std
rol
adc
jo
outsl
in
movl
or
incb
inc
outsl
pop
push
mov
aam
push
inc
cld
cwtl
push
mov
cli
pop
jo
frstor
out
push
sub
dec
sub
or
mov
xchg
xchg
push
lock
cs
jmp
out
jns
mov
xchg
int3
dec
jno
in
neg
mov
mov
sarl
daa
jb
cmpsl
push
pop
jno
lret
shl
push
int3
xorb
ds
mov
cmp
addr16
stos
pop
xchg
ss
dec
mov
lock
ja
lret
ss
jmp
pop
pushf
icebp
cmp
jno
cld
mov
shlb
mov
ret
lret
mov
jnp
sub
jmp
mov
sahf
and
cld
fidivl
clc
mov
pusha
cmp
loope
sub
mov
pop
push
pop
mov
into
dec
ljmp
push
inc
push
mov
inc
mov
cltd
pop
jno
shll
adc
dec
adc
aas
pushf
jno
stos
in
sub
xor
movsb
sysenter
inc
xlat
add
xor
sbb
mov
nop
mov
data16
in
and
sub
add
pusha
dec
pop
pop
inc
and
stos
lret
int
ds
xlat
mov
imul
xchg
adc
mov
push
mov
lahf
int3
stos
mov
sub
jle
stc
pop
pop
arpl
xor
addr16
jl
adc
imul
scas
mov
test
and
mov
int3
jbe
les
mov
loop
adc
outsl
loope
imul
sub
loopne
mov
sbb
add
dec
stos
ret
inc
test
push
push
mov
push
jb
test
dec
shrb
pop
cld
insb
push
std
sbb
decb
mov
jle
in
push
push
jns
add
mov
inc
out
mov
jp
cmp
lcall
fisttpl
push
fisubrs
pop
ds
repz
pop
dec
push
mov
repnz
test
orl
ror
push
aaa
xchg
imul
mov
xchg
scas
das
nop
or
cmp
mov
data16
push
sub
and
sub
cmpsl
adc
mov
aaa
loop
imul
jbe
cltd
mov
data16
adc
cltd
pop
jae
jg
jmp
movsb
insl
or
mov
aaa
and
add
xchg
imul
xor
dec
push
mov
sub
cld
cwtl
cmc
imul
jl
testl
dec
pushf
dec
std
pop
lcall
ret
xor
daa
add
add
pop
stos
movsl
fisubl
sar
rorb
xchg
std
add
xor
dec
mov
push
xchg
inc
push
dec
mov
bound
dec
xchg
out
insb
ret
push
jns
dec
dec
jae
iret
jle
cmp
out
lea
cs
fucomi
add
pop
mov
jae
jp
mov
les
push
ret
cmpb
inc
notl
fcoms
jno
jmp
nop
fwait
and
int3
cltd
leave
jbe
xchg
inc
add
mov
add
nop
andl
push
or
inc
es
cld
mov
fbld
test
jbe
sub
cmc
dec
jg
pop
insl
inc
out
jbe
loope
pop
and
adc
xchg
leave
dec
sahf
ret
pop
popf
ljmp
pop
cli
cmp
and
into
mov
jecxz
dec
adc
pop
lret
cld
or
ret
xchg
xchg
cmp
jns
test
dec
aad
and
sub
lahf
fildll
sarb
adc
fisttpll
and
loope
insl
sub
iret
dec
and
mov
lods
pop
repz
add
add
aad
outsl
and
jmp
out
dec
imul
data16
adc
out
or
sarb
into
enter
shrb
in
jmp
ret
xchg
ds
push
xlat
jnp
cmc
test
or
pop
mov
sbb
push
mov
fldl
pop
mov
fdivs
jp
inc
dec
mov
sub
ljmp
ret
push
aam
stos
out
int
mov
cmpsl
test
cmp
adc
rep
mov
jl
and
or
pusha
fistpl
xchg
in
xchg
in
frstor
or
sbb
imul
enter
xchg
rclb
push
jae
popa
std
xchg
fsts
fmuls
in
push
cmp
jp
pop
mov
lds
and
ss
addb
mov
adc
and
test
push
inc
sahf
js
cmp
pop
dec
mov
push
lret
loope
pop
jp
bound
insl
test
mov
fmulp
gs
pop
les
pop
add
idiv
inc
lret
out
and
cmp
movsl
sub
jmp
push
popa
sub
leave
dec
dec
and
pop
adc
xchg
mov
cmc
adc
js
dec
cs
adc
inc
push
stc
add
fdivrs
add
pop
pop
or
jmp
shrl
fdivl
test
shlb
jge
and
imul
or
jle
xor
aas
adc
push
mov
sbb
outsb
pop
adc
icebp
loop
xor
loopne
outsb
test
stos
mov
pop
and
xor
shl
jp
cmp
jo
nop
data16
scas
mov
adc
stc
cmp
sbb
stos
dec
les
mov
jg
aad
rorb
pop
in
sar
inc
mov
inc
btr
sub
sub
rcrb
jg
push
push
popf
push
loope
stos
mov
js
xchg
shll
gs
repnz
add
cmp
shlb
pushf
fsubr
jb
shlb
es
dec
mov
int3
ja
or
lcall
sbb
jg
imul
cli
sbb
arpl
push
cld
dec
sbb
outsl
imul
fucomi
ss
inc
add
mov
add
repnz
or
mov
aas
fcmovnu
fimull
push
mov
inc
popa
mov
xchg
pop
jl
imul
subl
jmp
lods
xor
sub
imul
arpl
jne
cs
icebp
cs
xchg
arpl
add
test
cmc
das
pop
mov
out
icebp
push
cmp
test
int3
push
and
roll
sbb
jp
inc
gs
dec
and
call
jnp
push
sub
jle
add
fidivrs
push
testl
lcall
mov
and
adc
pop
mov
dec
sbb
xor
and
jle
pop
lea
movsl
xchg
adc
aam
and
in
rorb
dec
insb
out
mov
jmp
xor
push
push
or
repz
fwait
sbb
xchg
mov
pop
pop
fs
xchg
int3
pop
rorl
lods
and
imul
push
or
cld
xor
or
push
fwait
or
cmc
mov
mov
jo
sbb
in
call
aam
fidivrl
cli
add
and
jmp
adc
dec
mov
and
jne
call
sub
mov
shrb
jb
sbb
punpcklwd
icebp
mov
cli
adc
cmpsb
and
sbb
daa
sbb
adc
das
jecxz
out
xchg
cli
lcall
adc
push
das
jo
add
lea
inc
fisttpll
faddl
rol
jns
nop
sub
mov
push
test
xchg
jg
scas
mov
pop
pop
adc
lret
fwait
sbb
push
push
mov
into
sbb
push
iret
adc
andb
push
out
cmp
mov
rcrl
aad
sbb
and
loopne
mov
clc
imul
mov
push
mov
sub
adc
jns
jmp
pop
icebp
push
dec
jmp
or
xor
mov
xor
jg
popa
dec
loope
enter
lcall
ret
insb
push
imul
pop
addr16
fbstp
adc
mov
pop
scas
jne
mov
rcl
inc
jmp
aad
mov
std
subl
cmp
sbb
adc
lret
or
inc
mov
sbb
push
sbb
test
jne
jg
lret
push
pop
movsb
and
mov
cmpsb
lods
cwtl
sahf
fwait
push
pop
push
test
lods
movsl
and
scas
and
add
jmp
lret
test
inc
out
jo
cmp
or
mov
xor
jecxz
push
sbb
push
mov
push
in
lea
xchg
lea
sub
push
imul
out
and
xchg
or
lret
stc
aaa
sbb
inc
add
xchg
add
mov
mov
cld
jae
sbb
arpl
push
jmp
lret
fisttpll
adc
pop
cmpsb
lds
cmp
mov
aam
xchg
cmp
cmp
jp
mov
or
movsl
mov
gs
leave
insl
outsl
mov
pop
imul
cmp
sub
or
pop
scas
cld
mov
cmp
idivb
dec
mov
mov
fistpl
jno
xchg
cmp
jp
dec
fs
push
mov
xchg
cli
test
jo
mov
pusha
ret
or
sub
loopne
push
mov
cmpsl
sbb
xchg
mov
loop
insb
loopne
addr16
sahf
pop
call
lret
popf
orl
pop
aas
mov
mov
push
jg
dec
ret
and
pop
sub
push
pop
jmp
sub
mov
jecxz
in
push
inc
jo
insl
popf
mov
sahf
or
aad
call
cmp
push
sbb
test
or
ljmp
xlat
push
add
cwtl
lcall
pop
pop
xchg
bound
pop
jno
push
or
xchg
sub
stc
sbb
mov
pop
std
or
add
stos
int
cmpps
xor
lret
nop
in
inc
adc
rcll
sub
xor
dec
jp
loope
cmp
mov
cmp
pop
fildl
pushf
mul
lds
cmp
sbb
push
dec
in
inc
cwtl
jo
xor
mov
jnp
jns
sbb
nop
mov
clc
into
push
inc
fs
cltd
cmpsb
jne
shl
cmp
icebp
fstp
xor
cs
jmp
xor
stos
jno
jecxz
addr16
imul
dec
outsb
pop
sbb
jno
push
cmc
push
add
jmp
repnz
push
add
mov
jno
push
outsb
gs
mov
dec
or
or
mov
shrb
and
imul
and
jle
mov
push
mov
jbe
loope
mov
inc
xchg
ret
cld
pop
cmpsl
mov
or
ss
jmp
inc
lcall
inc
jbe
int3
and
sbb
fimuls
pop
movsl
fs
movsb
add
pop
mov
pushf
push
mov
cmpsl
sbb
mov
fdivs
fsub
lcall
loopne
inc
mov
popf
lea
gs
and
cmc
xor
sbb
pop
xchg
pop
loop
push
add
popf
sbb
data16
push
xchg
test
loope
sub
adc
int
inc
in
mov
sub
cmp
add
dec
mov
jecxz
aam
mov
clc
pop
inc
mov
or
dec
out
dec
addr16
xor
icebp
push
mov
mov
ljmp
xchg
mov
jno
pop
aad
jne
push
sti
nop
mov
movsl
sbb
mov
jo
insw
aas
push
adc
imul
adc
inc
out
rcl
stos
loope
push
test
mov
lcall
jge
add
xchg
das
int3
push
xchg
orb
ljmp
das
pop
jmp
or
xor
imul
mov
popa
add
xchg
pop
sbb
sbb
mov
mov
je
mov
or
bound
cmpsl
dec
out
mov
cltd
scas
jle
xchg
xchg
jno
xchg
lock
push
jne
cmc
sbb
jg
rolb
inc
cmpsb
and
cmp
mov
xchg
std
xchg
jne
outsl
out
mov
pushf
and
jnp
push
dec
stos
sub
jno
inc
bound
add
out
fidivrl
loop
mov
sbb
jb
push
mov
pop
jbe
xor
jo
mov
lods
mov
jns
testb
fildl
iret
scas
lcall
mov
es
adc
andb
pusha
rcrl
rcr
mov
xchg
test
aas
ret
sbb
pop
jg
imull
pop
stc
popa
xor
loope
jae
mov
fdivrl
std
push
leave
pusha
fmuls
ds
ror
dec
xorl
andb
push
mov
sbb
xchg
jp
lcall
cld
xchg
dec
ljmp
push
inc
sbb
xorb
push
dec
repnz
add
ret
pop
int3
jp
xchg
fistps
push
scas
mov
xchg
push
jg
iret
push
mov
add
mov
cmpsl
mov
dec
add
cld
xchg
iret
divb
addr16
test
aaa
das
fcomp
and
sub
adc
andl
les
notl
pop
out
cmp
lock
and
leave
movsl
mov
into
push
inc
or
xchg
outsb
cld
xor
xor
lods
in
in
mov
int3
xchg
lods
xor
aam
lahf
repz
sbb
cltd
mov
sbb
cltd
stos
mov
jle
mov
jb
mov
fbld
jl
sbb
sbb
cmc
add
out
into
insb
pop
call
pusha
jb
scas
adc
out
cmp
pop
fcomps
loop
xchg
aas
add
int
imul
cltd
mov
andl
ret
loope
mov
sub
push
test
lret
xchg
inc
inc
loop
lock
std
cs
int
jmp
in
pop
sbb
jnp
arpl
sub
adc
mov
push
fdivrl
rcll
xor
mov
or
xchg
shll
xchg
mov
repnz
pop
ret
cmp
xchg
adc
shrb
mov
rol
inc
and
ror
test
stc
sub
imul
inc
mov
cli
xchg
iret
aas
push
inc
pop
arpl
imul
xchg
fcomip
xor
jae
inc
mov
pushf
xchg
xacquire
adc
test
mov
cltd
lock
data16
movsl
xor
lret
aam
enter
add
jmp
xchg
mov
mov
xor
lock
pop
arpl
push
ja
mov
sbb
pop
sti
inc
aam
adc
leave
std
mov
shll
das
shrl
dec
rolb
shlb
ret
pop
mov
subl
mov
inc
cmpsb
mov
push
sub
movb
or
pop
lods
mov
clc
lret
ret
rorb
mov
out
jb
mov
pop
stos
sub
pop
in
repnz
lret
outsl
rcll
dec
xor
sbb
push
adc
jle
aam
xchg
out
ret
cld
jg
mov
sti
xor
aad
sub
dec
outsb
push
adc
mov
lret
sbb
cmp
cli
push
or
ret
ljmp
mov
in
dec
ffreep
pop
or
movsl
inc
pop
daa
dec
sub
popa
mov
enter
mov
pop
jb
outsl
in
movsl
pop
add
in
jg
les
mov
mov
push
jg
xor
jnp
icebp
xor
push
pop
push
inc
xchg
inc
aad
sbb
adc
xor
aam
and
xchg
dec
imul
cmp
ljmp
loope
push
notb
mov
sarl
dec
jecxz
mov
jae
push
call
xchg
mov
sti
shrl
pusha
inc
lret
aad
xor
jge
sbb
bound
jo
mov
sbb
loope
shlb
jp
lea
lret
iret
mov
mov
out
and
jp
sub
or
mov
mov
and
test
cld
or
stos
push
push
pop
je
ljmp
jg
into
mov
sbb
cmpsb
mov
testb
xchg
pusha
les
int3
and
add
sbb
push
lds
cmp
jmp
cli
push
jne
stos
test
nop
sbb
ss
cmp
mov
dec
add
cwtl
enter
mov
stc
dec
out
repz
dec
outsb
hlt
je
mov
in
or
xchg
dec
mov
scas
jge
pop
inc
xchg
sbb
xor
in
inc
and
fnstsw
cmpsl
fsubl
push
push
xchg
imul
mov
into
outsl
int3
push
jecxz
lret
and
push
mov
arpl
daa
bound
stos
mov
int3
xchg
mov
cmpsb
push
sbb
nop
jl
or
adc
jno
scas
push
fstpt
push
sub
jecxz
sub
jmp
jnp
sti
int3
in
outsl
mov
stos
and
inc
pop
jge
leave
outsl
mov
jbe
xor
cmp
jnp
cmc
pop
testl
fcompl
dec
xor
sbb
call
push
rcr
dec
mov
adc
fidivs
rcr
ja
add
les
jns
sub
loopne
sbb
mov
bnd
sahf
or
mov
jle
loopne
inc
mov
or
mov
int3
mov
loopne
jbe
pusha
out
adc
xchg
fstpt
lcall
mul
fstl
jp
pop
add
pop
jbe
shrb
mov
xor
xchg
loope
aad
mov
dec
mov
cwtl
lods
sbb
jge
rcl
sub
xchg
cmp
xchg
inc
clc
repz
xchg
cmp
jo
cmp
dec
add
cmp
or
xor
cs
addb
cmp
sub
mov
stc
js
pop
mov
repnz
ret
jl,pt
mov
aas
lret
das
push
xor
cmpsb
sahf
push
jle
mov
xor
or
adc
in
stos
rcl
pop
popf
mov
stc
or
iret
sbbb
notb
xor
xchg
sbb
insb
pop
cwtl
js
std
pop
sub
ja
and
dec
jno
push
or
pop
adcl
cld
mov
das
or
gs
sar
movsl
adc
mov
sahf
cmp
inc
loop
dec
jl
mov
stos
pop
inc
jo
andb
adc
cmpsb
add
cmpsb
fldenv
lahf
jge
cmc
xchg
sahf
mov
lods
or
mov
sub
out
movl
stos
mov
inc
pushf
push
xchg
xor
out
f2xm1
fucomi
js
inc
lds
xchg
push
rcr
lret
sahf
mov
test
ficoml
mov
cmp
shrb
mov
cwtl
repz
lea
or
outsl
es
lock
adc
jnp
movsl
arpl
iret
in
jge
outsl
sub
mov
clc
ret
lcall
jnp
jnp
lcall
xchg
cmp
cmpsb
mov
fs
xchg
enter
cs
xor
loope
xchg
ret
cmp
pushf
daa
aaa
dec
fmulp
scas
push
in
lods
sub
icebp
fistps
pop
dec
adc
cmpsl
jae
sbb
pop
leave
cmp
out
cld
lcall
andb
push
push
std
aad
lcall
xor
lret
rclb
sbb
scas
cmp
jae
push
push
leave
ret
and
popf
xor
hlt
inc
xchg
and
add
popl
mov
sub
int3
int3
shlb
xchg
mov
adc
cs
jle
nop
sbb
mov
in
jmp
sti
mov
push
rcl
loopne
fdivrp
xor
nop
adc
pop
push
jmp
cli
les
sbb
mov
push
mov
sahf
in
mov
mov
loop
stc
inc
test
inc
mov
dec
lahf
push
sub
cmp
test
rcll
adcb
shll
or
xorb
add
pop
jmp
insb
push
jno
pop
mov
sti
fidivrs
imul
lods
scas
mov
je
test
int3
sbb
dec
test
das
push
xor
insb
and
out
dec
push
out
sbb
loopne
sahf
jl
nop
int
arpl
lret
xchg
xor
clc
ja
mov
pop
cli
sub
xor
xchg
pop
mov
daa
lret
sbb
cs
lock
insb
add
faddp
fsubs
test
or
in
sbb
xor
sarl
xor
into
call
add
mov
or
fnstenv
pop
push
push
pop
push
fisttpll
mov
aas
pop
iret
sti
push
mov
sbb
bound
cwtl
je
mov
std
mov
pop
xchg
dec
into
pop
shlb
sahf
add
aad
mov
aad
push
cltd
push
xchg
push
sub
sbb
inc
sub
in
mov
scas
lahf
inc
push
cmp
outsb
adc
sub
std
leave
mov
pop
dec
xor
and
pop
fs
lret
push
mov
mov
out
cmp
pop
mov
jb
in
cli
icebp
add
pop
pop
and
sbb
xor
pop
dec
add
inc
adc
mov
fwait
ja
xchg
or
inc
pop
jmp
jb
jg
jle
call
and
loop
mov
cli
ror
cmp
bound
je
dec
inc
loop
test
mov
cmpsl
inc
outsl
aam
xor
les
sti
js
icebp
xorl
lret
inc
clc
stos
jbe
fs
inc
lods
sbb
inc
pop
xchg
stos
and
mov
inc
enter
fisubrs
fld
sub
add
inc
ds
mov
cmpsb
adc
cltd
jle
pop
inc
aaa
lods
push
add
mov
mov
lret
inc
lret
insb
sbb
pop
dec
or
pop
clc
stos
xchg
lods
dec
shrl
push
jbe
shrl
dec
add
ss
sub
mov
dec
pop
in
mov
out
cmp
push
stos
cld
pop
push
addb
xor
enter
inc
test
jp
cmpsl
lret
movsb
adc
pusha
jbe
xchg
cmp
ds
add
or
push
ja
out
in
and
adc
out
inc
pop
pop
out
movsl
cmp
lahf
lods
cwtl
pop
stos
xlat
sub
dec
pop
mov
sbb
jbe
lock
push
mov
loope
mov
mov
xchg
jge
stos
inc
push
imul
sbb
dec
pop
addl
mov
lock
mov
and
mov
or
sahf
xchg
or
enter
adcl
cld
repnz
adcb
adc
sbb
dec
stos
xor
mov
jecxz
push
data16
sub
nop
dec
jb
mov
ds
call
stos
cs
mov
aad
mov
dec
sahf
mov
aam
sbbb
and
xchg
lcall
ret
mov
or
imul
lahf
iret
inc
jl
std
inc
cmpsb
inc
repnz
sbb
xlat
mov
push
jae
pop
fdivrs
jp
outsb
add
push
addr16
sbbb
pop
jge
or
aam
or
or
test
fmuls
cmp
das
rcl
sub
push
into
and
inc
push
or
in
push
rcrl
out
pop
mov
fwait
cs
lds
xchg
pop
scas
imul
fbstp
mov
mov
sti
out
mov
in
roll
sub
inc
pop
jae
fs
arpl
xor
sub
push
cmc
sub
out
push
sti
je
push
pop
lea
xor
ret
push
cmp
popf
jne
inc
inc
jmp
add
xchg
repz
sbb
adc
pop
inc
ret
mov
xchg
push
scas
jg
xchg
mov
sbb
sub
flds
add
arpl
inc
data16
xor
fdivrs
pop
sub
xchg
inc
pop
loopne
int
sub
stos
in
jbe
addl
jge
pop
outsb
pop
inc
adc
test
int3
pop
pop
push
mov
daa
and
xchg
jns
insb
add
movsb
or
mov
xchg
cmp
packuswb
outsl
push
data16
popf
dec
jg
insb
push
andb
sub
icebp
enter
fstpl
mov
cltd
push
xchg
jne
sub
insl
mov
jg
dec
fsubrs
es
dec
cld
popf
add
in
push
fsts
mov
inc
cmpsl
idivb
adc
loopne
and
jns
add
xchg
jge
push
sbb
addr16
dec
mov
popf
inc
subb
cmpsb
hlt
roll
je
lods
xchg
repnz
and
daa
test
inc
cmpsb
call
int3
mov
fwait
outsl
mov
in
sbb
mov
sub
icebp
mov
pop
cmp
jmp
jbe
int
and
cltd
outsl
jge
js
shll
mov
ss
roll
popa
jno
jns
push
pop
roll
and
lods
jle
jnp
les
outsl
call
mov
push
jb
sbb
hlt
clc
mov
outsl
xor
outsb
cmp
adc
insb
mov
insl
pushf
jbe
js,pn
mov
mov
in
cmp
xor
sub
in
inc
jmp
xor
mov
mov
movsb
adcb
mov
and
sub
jmp
xchg
test
mov
or
cmpsb
test
cmpsb
jmp
cld
jecxz
cwtl
jge
xchg
fisubrs
dec
add
in
and
sub
aam
jle
push
or
aas
int3
push
lret
xor
stos
lods
mov
cld
popa
mov
inc
test
xchg
xor
divl
mov
inc
out
mov
adc
fisttpl
or
xchg
inc
and
push
call
dec
arpl
aad
xchg
sub
mov
lcall
mov
jne
dec
xor
push
fwait
xchg
pushf
leave
push
outsb
je
sub
int
xor
pushf
repz
stos
dec
xchg
jmp
cli
push
adc
aad
push
mov
pop
cmp
mov
inc
ljmp
jnp
popa
and
ret
into
adc
stc
or
filds
in
pop
dec
jp
fs
mov
mov
jl
push
sahf
mov
mov
mov
cltd
push
in
push
std
push
std
add
js
cmpsl
dec
idiv
pop
ds
mov
xchg
stos
push
jne
jne
jb
iret
add
ficoml
in
and
mov
and
jne
push
add
iret
and
icebp
sub
out
xchg
mov
rcrl
movsl
daa
test
inc
loop
sahf
pop
lods
mov
sbb
cmp
xor
stc
add
sar
insl
mov
aas
push
test
push
ds
pop
cmp
push
pop
and
xchg
sub
add
push
jae
cmovo
jecxz
adc
repz
push
push
lds
and
cld
mov
mov
jb
pcmpeqb
sbb
pop
mov
xchg
adc
adc
xchg
movntq
ljmp
pop
or
ficompl
stos
push
fcmovu
or
xchg
sahf
andb
out
cmp
jns
cmc
adc
mov
mov
xor
aas
out
cltd
push
sahf
shll
cmp
jle
clc
inc
add
xor
int
cmp
mov
cmp
sub
cmp
movsl
sbb
jg
push
cs
lret
test
jns,pn
push
rol
addb
data16
das
test
fcmovb
inc
sub
mov
xchg
lret
dec
in
out
xchg
push
sbb
xorw
or
mov
add
pop
movsl
xrelease
mov
sub
jg
test
inc
movsl
jne
adc
aad
pop
not
add
movsb
push
addb
dec
add
in
imul
jbe
push
and
xor
aaa
add
in
cs
and
jl
dec
outsl
dec
aam
pop
cmp
xchg
mov
cwtl
aad
pop
test
call
sahf
mov
push
call
fistl
xchg
cli
rorb
in
cld
pop
movsl
call
inc
nop
jne
test
loope
add
push
loope
lds
jb
rcl
mov
mov
repz
test
dec
lahf
shlb
mov
lcall
adc
mov
add
dec
loope
inc
cmc
test
leave
notl
stos
inc
mov
test
xchg
not
lea
outsl
add
movsl
push
ljmp
das
sub
adc
xor
aas
into
iret
leave
jmp
shll
fildl
push
cmp
arpl
push
iret
jno
ja
push
mov
repnz
mov
das
push
popf
hlt
movsl
call
dec
fildll
or
xchg
ffreep
stos
push
mov
mov
cli
pop
sbb
lods
jmp
pop
lea
mov
cmpl
and
nop
stos
adc
mov
jbe
mull
mov
mov
mov
test
xchg
pushf
xchg
pop
sbb
pop
jae
sahf
out
xchg
out
mov
xchg
or
jnp
insl
push
adc
mov
pop
jl
lret
int
add
xchg
sbb
dec
mov
push
pushf
sub
leave
mov
lods
aam
fs
loopne
xchg
mov
jp
cmpsl
fstpl
cli
stos
mov
mov
jp
lret
sbb
popf
dec
push
mov
jb
outsb
push
cli
add
loope
fsubrs
dec
sub
in
aas
mov
leave
dec
sub
outsl
add
fst
out
hlt
icebp
test
lds
dec
iret
mov
je
cmp
xchg
gs
sbb
mov
adc
and
rcr
inc
xlat
insl
repnz
add
xchg
jmp
cmpsb
cs
mov
jl
icebp
pop
pop
fldenv
mov
lahf
into
sub
popa
inc
jnp
jge
movsb
jo
jno
add
movsl
sub
sbb
in
adc
lea
outsb
stos
mov
shl
sbb
pop
sub
dec
sti
pop
and
movsb
adc
sbb
add
dec
xchg
insl
filds
loopne
iret
adcb
test
cld
das
add
mov
sarb
fwait
mov
fsub
sbb
xor
les
sub
mov
jnp
loop
std
dec
mov
stos
cmp
imul
dec
sti
sub
adc
jmp
dec
in
dec
cmp
int
dec
pop
lods
adc
mov
addl
nop
lret
les
loop
jo
sbb
insb
icebp
lods
adcb
nop
cmp
stos
push
lret
mov
pop
mov
rorb
stos
or
ja
or
imul
int
xchg
dec
aam
dec
add
push
popf
xchg
cmp
adc
lcall
in
dec
adc
jmp
ljmp
lahf
mov
icebp
or
mov
scas
and
or
jp
push
test
das
aas
imul
ret
push
das
ss
comiss
jecxz
leave
cmp
ret
inc
scas
ficoml
mov
adc
inc
sub
inc
push
xchg
pop
bound
add
xchg
push
mov
xor
out
mov
xchg
inc
addr16
push
push
pop
rorl
dec
lods
xchg
lds
movsl
test
pop
inc
jl
inc
stc
mov
push
ret
outsb
icebp
sarb
repnz
dec
or
enter
sbb
pop
inc
sbb
int
cmp
sbb
int3
inc
pusha
push
icebp
ret
mov
xchg
lods
cltd
dec
daa
lock
mov
out
xchg
mov
dec
or
xchg
jp
xchg
xchg
adc
clc
sbbl
cli
cwtl
xchg
mov
ret
mov
xor
fidivs
pop
cmpsl
andb
push
shll
addl
cmp
sub
jp
cmp
sbb
in
out
jp
push
stos
push
inc
inc
add
lds
fsubrs
arpl
bound
in
imulb
daa
lcall
fldenv
fstpt
or
mov
jno
bnd
dec
inc
das
test
nop
cli
xchg
scas
jae
outsb
shll
in
push
sbb
cmp
jle
and
cs
sub
sbb
adc
jno
rcrb
icebp
cltd
push
aas
and
dec
cltd
fnstenv
out
inc
push
test
xor
push
push
gs
sarb
pop
add
enter
mov
and
lcall
lahf
mov
sahf
mov
pop
dec
sub
sbb
out
pushf
icebp
iret
scas
out
fwait
int3
insl
stc
mov
mov
xor
pop
mov
sub
jmp
movd
dec
movsb
add
lods
filds
stos
cli
scas
js
ljmp
lea
nop
mov
push
push
or
dec
testl
mov
jge
xor
aam
dec
adc
inc
jno
pop
mov
adc
insl
jmp
pop
testb
jb
negb
cmovb
leave
cmp
lahf
loopne
mov
lock
xor
add
lret
dec
xchg
pop
dec
cmp
cltd
insl
loope
pop
cmp
aad
sti
je
imul
sbb
mov
mov
jo
xchg
popf
testl
cmp
mov
fiaddl
ljmp
xor
sub
test
punpckhdq
fdivrl
inc
subl
adc
or
inc
jp
loopne
insb
popf
xor
notb
lods
push
stos
cmpsb
addl
mov
sub
push
sub
cmp
add
dec
jne
jp
add
popa
cwtl
and
adc
insb
clc
and
push
je
mov
sti
cmp
sub
scas
orb
daa
mov
aad
out
out
imul
ds
ror
mov
cmpsl
mov
int
mov
aad
mov
loope
imul
push
data16
mov
repnz
rolb
loop
mov
jns
mov
xor
test
adc
mov
cmp
pop
sbb
cmp
mov
adc
and
mov
popf
and
sbb
fucom
dec
inc
pop
add
sbb
push
pop
dec
aaa
inc
adc
in
jns
loop
cmp
sbb
cwtl
mov
jg
mov
cmpsb
mov
inc
rorb
pop
pop
insl
dec
in
cwtl
es
fistl
cmpsl
mov
sub
mov
mov
inc
adc
cmp
popf
or
xor
mov
jp
cmp
loope
int
idivl
cwtl
into
ss
mov
repnz
lahf
sub
mov
in
push
mov
test
and
inc
or
mov
xchg
mov
repz
xchg
fdivr
in
jnp
xchg
scas
testl
jecxz
or
test
inc
add
jne
nop
cli
dec
jge
mov
and
movsb
pop
jnp
and
adc
xor
sarb
es
pop
fisubs
mov
adc
cmpsl
jae
leave
bound
pop
add
and
and
addr16
fldt
xchg
push
sub
es
mov
pop
dec
sarl
arpl
aaa
dec
pop
xchg
in
adc
dec
mov
pop
imul
jbe
pop
add
call
aas
ja
lahf
sub
and
mov
outsl
iret
popf
jp
jge
mov
or
lret
sarl
or
movsl
out
xchg
cmpsl
rcll
jmp
lret
sahf
addr16
dec
loopne
out
out
mov
or
adc
mov
test
daa
inc
ljmp
cltd
movsb
out
sub
ror
mulb
mov
mov
cwtl
ss
xchg
adc
mov
jl
mov
sbb
das
test
hlt
push
hlt
clc
mov
insb
add
cmpsl
idivl
mov
push
inc
add
or
adcl
xlat
jmp
sub
mov
jb
leave
adc
inc
adc
push
icebp
inc
ret
dec
fcoml
out
imul
mov
jno
loope
push
aad
and
std
xlat
les
cmpsl
adc
outsb
and
push
hlt
jne
mulb
add
popa
xlat
and
push
or
pusha
inc
scas
sub
stos
cmc
shrl
adc
pop
test
fcoml
insb
and
and
lods
popf
pop
push
pop
mov
test
sbb
movsb
mulb
add
lods
mov
arpl
mov
push
sbb
xchg
xor
in
mov
cmpsb
shlb
jo
pop
mov
jne
xor
inc
mov
jnp
jae
cmp
push
int3
dec
enter
mov
fwait
pop
xchg
dec
xchg
dec
test
and
and
mov
push
dec
jg
push
in
sti
repz
mov
and
mov
movsl
cmpsl
in
outsl
xchg
and
sarb
jge
aaa
and
ret
hlt
jns
mov
int
xchg
fildl
and
xchg
xor
add
bound
fdiv
or
lds
pop
mov
xchg
test
int3
sbb
jecxz
push
stc
adc
dec
ja
or
test
adc
push
xchg
xchg
and
pop
add
aad
out
push
xor
call
icebp
mov
dec
jle
jo
ds
push
out
out
push
lret
pop
hlt
jl
mov
in
gs
pop
addb
jne
cmpsb
sbb
mov
xor
inc
mov
mov
jge
fnsaves
fldt
dec
sbbb
add
xchg
cmp
outsb
xor
mov
cmpsl
enter
or
xchg
mov
sarl
add
lods
pop
mov
test
or
inc
sbb
mov
dec
aam
jbe
outsb
fadd
out
aam
mov
adc
loope
mov
xor
cmp
mov
xor
push
lea
and
test
adc
jle
out
int3
aas
and
je
ds
jns
or
sub
fwait
out
jle
push
mov
outsl
xchg
xor
lods
jg
psllq
bound
add
rcll
xchg
xchg
lahf
push
jae
sub
sar
mov
add
addr16
fsubr
movsl
inc
sbb
pop
sbb
lds
pop
cmp
push
mov
pop
mov
dec
or
cmpsl
ret
xchg
int3
jnp
les
das
imul
cs
mov
xchg
or
jge
popa
mov
cmpsl
rclb
mov
xor
pop
xor
insb
out
mov
mov
mov
std
jge
pop
push
cmp
sub
pop
pop
sub
xor
xchg
cmpb
jle
sub
inc
pop
push
repz
cmp
dec
push
dec
test
pop
scas
icebp
das
mov
jbe
lret
pop
pop
mov
xchg
mov
daa
or
shrl
ret
sub
xor
jne
or
push
mov
in
jbe
lret
jns
add
mov
fnsave
imul
cmpsb
test
je
cmpsb
sub
xorb
and
out
sbb
xchg
outsl
test
in
cmp
in
sti
cmp
ds
pop
dec
and
daa
or
adc
mov
aaa
fdivrl
jae
rclb
shrl
pop
push
sub
scas
inc
enter
dec
dec
sub
push
aaa
ret
xchg
testl
jp
mov
jns
test
or
out
rcrl
insl
arpl
adc
outsl
cmp
movsb
push
cltd
jp
jle
dec
in
ror
mov
cmpsb
adc
fisubl
cwtl
push
outsl
pop
and
cli
movl
push
ss
movsl
mov
xchg
jl
cs
int3
pop
adc
mov
mov
mov
imul
push
repz
jno
push
je
xchg
addr16
xchg
addr16
sbbb
testl
jp
mov
cmp
iret
js
mov
imul
leave
inc
cmpsl
xor
push
mov
and
mov
out
jg
stos
gs
pop
push
jle
sti
test
or
hlt
out
fdivp
sub
outsb
test
imul
out
dec
mov
lods
jno
addb
push
mov
add
push
jae
inc
inc
jecxz
std
es
or
sbb
fs
xorl
loope
push
test
pop
sub
add
mov
jno
sub
ret
mov
mov
push
and
mov
sub
ret
cltd
sbb
movsl
or
bnd
dec
int3
rclb
add
enter
push
mov
jne
in
mov
mov
add
int
jnp
andb
xor
hlt
ljmp
dec
cmp
xor
pop
push
stos
dec
mov
dec
cld
sti
orb
pop
xchg
pop
pop
insb
cmpsl
or
mov
loope
cs
mov
stos
sbbb
sbb
jmp
ljmp
js
sbbl
fidivs
out
xchg
std
lret
sub
mov
sub
sbb
push
push
inc
loop
inc
lock
push
pop
pop
jg
outsb
xchg
xchg
leave
mov
inc
jl
lods
ret
lock
mov
lret
lret
pop
sub
or
iret
dec
movsb
in
or
fs
and
or
stos
jecxz
and
sub
fimuls
mov
dec
dec
adc
adc
pop
and
xor
les
pop
cmc
pop
imul
leave
or
pushf
imul
les
cmp
jne
rcrb
sahf
not
adc
add
call
push
cmp
loope
vpmuludq
mov
and
loop
fs
call
add
mov
lahf
mov
inc
sub
mov
mov
sbb
stos
rclb
xchg
sub
mov
notl
push
subb
mov
dec
cmc
mov
inc
adc
mov
jl
mov
and
scas
push
gs
mov
fcmovu
idivl
mov
or
push
stos
rorl
ror
mov
mov
movsb
test
fs
sbb
push
nop
xchg
stos
sub
repz
arpl
mov
aas
lods
aam
inc
sbb
jb
mov
aas
shrl
mov
int3
sub
jmp
pop
xor
repz
cmc
push
movsl
jo
mov
cmp
jle
xchg
mov
shl
mov
inc
add
add
in
insb
vmovntps
insl
pop
sbb
mov
out
jno
cmp
in
stc
inc
lcall
popa
sti
jne
push
add
xor
bound
clc
lock
daa
orb
icebp
mov
lods
movsb
push
adc
les
mov
daa
test
lods
pop
daa
sbb
push
push
or
addr16
and
adc
pop
sub
pop
adc
jo
or
out
add
adc
or
pusha
gs
jmp
xor
xchg
or
in
sub
daa
add
cwtl
xchg
popa
scas
call
ljmp
aad
dec
push
fstpt
dec
and
jae
imul
xor
xchg
mov
pop
inc
pop
mov
sbb
or
aad
dec
push
int3
pop
and
popa
mov
cmpb
and
xchg
pop
or
xchg
gs
dec
out
xchg
jnp
addl
cmpl
or
xchg
inc
in
aaa
inc
rorb
nop
mov
pop
jmp
scas
jae
sub
pop
fstps
mov
mov
mov
jmp
xlat
mov
outsb
stos
decb
mov
adc
mov
insb
sbb
xchg
addr16
xlat
shrb
std
in
mov
mov
and
loop
mov
sbb
loope
mov
testb
test
shlb
fbstp
ja
sti
cmpsl
jge
add
imul
test
fsubl
ljmp
jb
add
movb
xchg
push
pushf
or
pop
xchg
add
gs
les
dec
clc
or
mov
testb
inc
scas
pop
popf
std
mov
in
test
jp
imul
mov
in
pop
lret
cmpl
cmpsl
ljmp
xor
sbb
aam
es
pop
inc
mov
cmp
test
movsl
mov
fimuls
lds
push
ljmp
inc
xchg
jb
push
dec
shll
add
sbbl
sti
out
xchg
jnp
pop
mov
adc
imul
mov
daa
lock
shrb
daa
sub
imull
test
or
insb
outsl
dec
push
lcall
shrb
aam
mov
inc
adc
dec
outsl
mov
push
mov
negb
and
and
mov
or
xor
push
mov
dec
mov
lods
and
mov
js
pop
dec
dec
dec
xchg
jp
jo
mov
xchg
pop
insl
xlat
mov
mov
or
addr16
mov
push
mov
subb
repnz
filds
mov
movsb
xlat
jns
pop
pop
imul
pusha
lods
loopne
push
shrl
jo
pop
gs
ficoms
stc
loopne
xchg
pusha
rcl
js
imul
mov
or
cli
xor
inc
add
add
xor
lods
sbb
mov
or
push
mov
ja
in
or
repnz
aam
cltd
lret
pop
out
dec
int3
cmp
sbb
scas
fstp
or
leave
fs
xor
push
jl
mov
push
mov
dec
mov
in
and
jo
pop
fimuls
xor
mov
nop
jae
aad
jae
rcrl
stc
paddusb
mov
inc
xor
mov
mov
mov
arpl
fsubrs
lock
push
pop
push
stos
mov
outsb
jg
loope
mov
mov
or
mov
push
ja
int
test
leave
mov
std
dec
repz
push
jp
ds
add
mov
and
adc
clc
imul
test
dec
mov
dec
dec
dec
jnp
dec
fsubs
or
xchg
stos
jle
enter
sub
sarb
push
notb
mov
mov
xchg
dec
mov
flds
loope
cld
jge
cmp
in
xlat
and
and
add
mov
cli
cld
ljmp
imul
pop
or
in
xor
in
cli
cmp
inc
xchg
aam
clc
xchg
test
in
add
in
jg
gs
out
sub
inc
int
xor
cmpsl
add
mov
aam
or
or
jae
xor
or
push
ds
mov
jp
loop
mov
or
iret
xor
fwait
cmp
mov
xor
jbe
and
aad
fisttps
and
out
cwtl
out
test
jmp
into
shrl
out
push
pushf
adc
dec
mov
pop
bound
xor
arpl
out
mov
jns
jmp
push
insb
xchg
pushf
je
jne
sub
mov
adc
xor
or
into
hlt
and
sahf
inc
push
cmpsb
push
inc
ja
dec
lds
test
fidivrl
popf
pusha
stos
push
mov
adc
cmpsl
add
jle
in
rcrl
cwtl
push
cmp
ret
out
push
xor
movsb
adc
popf
rcl
inc
cmp
cli
or
les
push
js
decb
loope
pop
cmp
mov
xor
xchg
mov
aas
or
push
push
test
add
loopne
and
mov
gs
push
push
js
fisubs
cmpsb
mov
loop
sbb
popa
outsb
cmp
pushf
test
and
lods
in
mov
mov
jge
and
jp
cmpsl
add
int3
mov
sub
adc
repz
pop
dec
mov
ss
mov
test
stc
cmpsl
jmp
gs
dec
dec
pop
ja
test
mov
mov
inc
adc
cld
mov
lods
add
test
mov
leave
aaa
jns
dec
inc
inc
xor
mov
push
dec
mov
inc
das
inc
sarl
adcl
mov
ljmp
push
jns
add
cmp
lret
inc
mul
divb
mov
push
les
jb
pop
push
xchg
jmp
adc
test
outsb
stos
gs
push
push
shlb
out
mov
test
lods
sbb
mov
sub
lret
dec
jne
cs
inc
daa
out
add
mov
jle
adc
insl
ds
and
loopne
fidivl
xchg
push
sub
sbbl
adc
call
and
jno
imul
cltd
cmp
xor
xor
outsb
mov
xchg
push
jecxz
xor
ja
inc
jne
or
daa
leave
hlt
aas
xchg
mov
loope
stos
xor
call
mov
and
dec
mov
shlb
xor
push
mov
push
fcoms
mov
jecxz
out
dec
and
and
xchg
and
mov
movsb
xchg
fdivrl
sbb
xor
push
jecxz
or
push
les
pop
leave
mov
mov
shrb
cmp
pop
or
lock
adc
lcall
data16
jae
add
mov
jo
xor
xor
mov
add
lret
fwait
jbe
outsb
lea
xchg
aad
ja
cmpsl
fcomi
cmp
and
xor
sbb
pop
xor
mov
mov
sub
add
pop
dec
fs
mov
sub
mov
jo
es
inc
loopne
pop
lods
fmull
lds
cltd
or
aam
pop
outsb
or
not
pop
aaa
push
push
dec
xchg
xchg
mov
xorl
ret
repnz
mov
jnp
push
out
pop
arpl
jbe
jle
lahf
int
test
mov
jp
mov
scas
push
jne
mov
sbb
sbb
xchg
add
jbe
leave
inc
and
adc
mov
dec
out
loopne
sbb
imul
add
pushf
add
insb
mov
int
out
insb
dec
aas
or
movsb
js
xchg
xchg
add
inc
out
and
mov
leave
jl
cmp
stos
movsl
xchg
and
shll
adc
loope
mov
out
pop
sub
outsb
cmp
adc
mov
sar
push
push
sub
xor
push
outsl
fidivl
aam
aas
fdiv
das
mov
out
mov
jo
inc
nop
bound
mov
or
in
fisubl
add
stc
out
inc
sub
mov
sbb
ret
jp
test
insl
arpl
pop
mov
pop
sub
cmp
sbb
cld
mov
dec
and
xchg
scas
sti
add
stos
shl
xor
icebp
and
in
and
pusha
aaa
stos
in
cmp
jmp
dec
stc
lahf
inc
sub
xchg
fs
pop
pop
pushf
stos
mov
or
ss
sbb
or
aaa
mov
daa
inc
fxch
das
cld
adc
daa
sar
inc
lret
mov
shll
movsl
dec
insl
fs
push
stos
cmp
lock
sahf
insb
pop
inc
sub
arpl
mov
sub
mov
mov
in
fisubrl
inc
call
sti
jle
push
or
mov
push
push
inc
fisttps
in
jp
lret
or
jge
mov
jp
jle
popf
out
mov
es
stos
popa
jo
fwait
jmp
fscale
inc
dec
les
sub
sarl
pop
xchg
dec
push
and
loopne
fcomps
cltd
jecxz
fisttpl
je
enter
orb
jmp
cmp
cltd
jnp
or
push
into
ds
sub
jl
mov
lods
std
xor
jnp
mov
outsb
xchg
xchg
xchg
ss
lods
bound
fs
and
dec
stos
scas
gs
or
lahf
cmp
insb
ja
sbb
cmp
je
mov
or
jmp
jge
xor
push
out
int
jg
shrb
mov
and
shll
mov
mov
into
jb
add
mov
lods
mov
xor
or
daa
xlat
xchg
cs
inc
inc
fnsave
idiv
xchg
sbb
push
adc
stos
jns
jge
push
orl
mov
ror
movsl
mov
insb
inc
sbb
fwait
nop
jmp
mov
enter
mov
or
or
mov
jl
pusha
add
xchg
sbb
hlt
leave
inc
cld
ret
mov
pop
mov
sbb
mov
aad
or
in
inc
fisubrs
xchg
add
jb
pop
test
lea
sbb
mov
adc
cmp
xchg
sub
test
mov
push
subb
aaa
jbe
sahf
pusha
mov
mov
mov
scas
or
out
enter
fmul
sbb
daa
cmpsl
popf
sub
cmp
movsl
push
xor
insl
inc
cmp
gs
mov
pop
lret
mov
icebp
dec
adc
js
stc
out
push
call
sbb
outsb
xlat
pushf
push
pop
dec
jae
push
stc
and
leave
pop
mov
sbb
mov
jp
lds
test
inc
insl
pop
inc
dec
mov
xchg
int
mov
int
push
es
aad
es
test
mov
les
movsb
pop
dec
filds
insb
arpl
inc
into
in
mov
pop
out
mov
cs
or
mov
out
fs
jns
imul
jecxz
mov
fisubrs
hlt
hlt
sub
out
js
loop
arpl
into
pop
pop
sub
cmp
loope
sub
imull
xchg
icebp
xchg
jmp
mov
inc
xchg
lods
adc
pushf
xor
mov
fimull
pop
loop
xlat
aaa
mov
cmp
cmp
xchg
mov
push
mov
sbb
cwtl
or
dec
shrl
pop
std
sub
repz
hlt
push
and
or
cmc
inc
push
out
mov
and
aaa
xlat
inc
mov
pusha
push
aas
enter
jmp
int3
cmpsb
jbe
ret
add
add
xchg
andb
mov
mov
insb
das
and
aas
cmp
dec
decl
adc
mov
insb
jl
lahf
dec
lahf
mov
lea
pop
popa
daa
cmc
jb
addr16
push
ja
insl
mov
cmp
pop
and
jbe
xchg
mov
sbb
sub
lret
jns
jae
andb
push
inc
loope
fidivrs
out
leave
dec
int
into
pusha
and
jge
xchg
hlt
in
push
jmp
sub
push
in
ror
jns
jle
and
push
push
push
mov
mov
and
xchg
push
xchg
pusha
out
jle
jae
xchg
and
inc
mov
das
sub
xchg
sub
sbb
mov
cmpsl
pop
outsw
dec
enter
in
mov
stos
mov
push
jae
int
inc
rcl
in
popa
es
jo
fs
mov
mov
xor
stc
and
push
repnz
ffree
pop
call
sub
cmp
iret
lods
pop
rorl
pop
lock
mov
pushf
xor
push
inc
sti
lock
push
aam
sub
je
mov
mov
gs
inc
sarl
clc
mov
test
xor
add
outsb
mov
cmp
mov
stos
or
cmpsb
and
xchg
leave
jb
out
adc
pusha
push
lea
push
jno
ficoms
pop
leave
mov
les
inc
in
inc
jp
ss
and
dec
jg
add
fnstenv
push
in
jle
mov
mov
inc
sub
out
or
inc
int3
imul
mov
lods
pushf
ficoms
mov
adc
pop
dec
fincstp
in
inc
test
fcmovu
jg
pop
or
out
or
ftst
sarl
jmp
or
outsb
xchg
add
imul
sbb
scas
cmpsb
rorb
cmp
loop
inc
iret
imul
stos
out
jmp
or
das
xchg
add
data16
fdivrp
sbb
jmp
andb
out
movsl
mov
rolb
mov
jl
pop
mov
push
je
lds
lcall
pop
adc
ud1
pop
bound
push
xchg
cld
pop
sarl
fists
jnp
in
cwtl
pop
je
mov
shlb
loopne
add
add
fs
js
rorl
pop
arpl
or
lock
sbb
inc
decb
cli
insb
in
bnd
and
scas
rorb
cwtl
in
xchg
push
mov
jbe
jnp,pn
adc
cmp
mov
lods
xlat
or
dec
push
int3
movsb
xchg
add
int3
rclb
shlb
or
sub
add
cwtl
sub
mov
or
lock
sub
orb
xor
jbe
inc
into
mov
inc
xor
adc
ljmp
or
dec
lds
mov
dec
testb
out
repnz
leave
in
insl
cld
scas
repnz
push
sti
xchg
push
lods
or
and
jo
inc
sbb
sbb
lahf
lcall
in
pop
sarl
dec
push
lret
push
pop
lcall
mov
mov
je
jb
orl
adc
mov
rcr
pop
aam
out
cltd
push
jne
fmuls
imul
add
jns
adc
lods
loop
inc
into
insb
orl
push
mov
sub
adc
sbb
aaa
inc
faddl
jg
imul
lcall
xor
and
push
inc
cli
add
pop
mov
lret
xor
xchg
daa
lret
out
aaa
out
pop
or
fnstcw
aam
lods
sbb
pop
dec
int
mov
pop
sbb
adc
jmp
lcall
cmpsb
pusha
pusha
dec
mov
pop
fcmovnu
ljmp
pushf
push
les
or
out
adc
in
cmp
movsb
data16
gs
jl
dec
addl
and
cmc
mov
xor
add
xchg
xchg
mov
stos
ljmp
push
repz
cs
ret
stos
aad
sbb
inc
inc
push
rcr
clc
lods
add
fnstsw
pop
roll
and
sub
mov
movsl
or
jp
clc
push
aad
iret
pop
or
sahf
sar
cmp
jae
insb
loop
add
lea
insl
insl
lcall
fldpi
testb
cmpsb
fnstsw
mov
mov
sub
pop
fistps
dec
outsl
test
hlt
push
mov
into
and
mov
mov
add
out
xor
fadd
adc
xchg
push
xor
jl
decl
and
adc
mov
mov
shl
xchg
fisttps
jmp
and
jl
cmp
or
outsb
shl
ss
sahf
leave
lcall
cwtl
out
in
push
loop
iret
adc
jbe
shl
mov
or
je
xor
xchg
mov
pop
aaa
movq
mov
dec
jg
fnstcw
fcmovnbe
fadds
cmp
mov
xchg
or
fmull
pop
into
cmpsb
ss
shll
lods
cmp
lods
pop
lods
inc
push
scas
dec
nop
jl
in
ret
leave
mov
jae
pusha
jae
jmp
in
pop
or
or
in
sub
fcmovne
and
movsb
mov
repnz
jnp
lea
outsb
int
or
and
push
push
repnz
shl
mov
dec
stos
cld
lock
pop
and
repz
jo
mov
or
cmp
dec
mov
sbb
hlt
repz
ja
sub
fwait
dec
and
insb
pop
lret
push
cmp
jmp
inc
sbb
dec
inc
sbb
mov
xchg
cld
sbb
gs
pop
mov
sub
negl
ss
negl
out
stos
cmc
lcall
into
flds
mov
jno
adc
jo
xlat
or
jo
cmpsb
push
scas
adc
ja
xchg
in
xor
push
lock
andb
sbb
dec
fsubrl
outsl
dec
push
cltd
sti
mov
adc
mov
pop
in
mov
and
adc
push
xchg
xor
sub
and
dec
mov
cmpsb
clc
push
int
push
inc
loop
pop
pop
adc
lcall
repz
scas
push
lahf
popf
push
stos
sar
cwtl
jns
outsl
mov
test
lret
int
push
jnp
cli
repnz
movsl
ja
popa
push
xchg
imul
sbb
gs
mov
jns
sub
insl
outsl
mov
repnz
and
call
pop
aad
add
pusha
pop
dec
and
mov
fcompl
mov
jg
loop
movsl
rcpps
xchg
mov
jae
fcmovnu
push
stos
daa
scas
xor
les
gs
xchg
int
movsl
and
jmp
fiadds
sub
add
jb
mov
pop
mov
bound
stos
rolb
pop
lret
fprem1
ret
ret
cmp
pop
sbb
sbb
xlat
xchg
loop
mov
cmp
repz
add
push
push
or
frstor
dec
out
outsb
or
ffree
ds
xchg
push
lock
xchg
inc
inc
mov
aam
xchg
jne
add
arpl
pop
push
les
adc
addr16
mov
rcl
push
cltd
movsl
scas
out
repnz
pop
dec
inc
and
shll
lock
pop
cmp
xchg
imul
inc
flds
lock
xchg
xchg
jmp
shlb
xor
inc
cmpsl
xchg
adc
mov
imul
fisttpll
loope
neg
fnsave
add
movb
push
fstpt
jno
xchg
lcall
ret
jbe
inc
int3
stc
mov
in
int
ret
sub
lret
ja
xchg
mov
in
mov
jb
and
jne
push
mov
mov
jbe
sbb
aas
mov
cmp
jge
imull
shll
insb
sub
mull
outsl
and
xor
data16
xor
aad
out
mov
cld
jecxz
sub
adc
pop
mov
test
inc
and
adc
mov
mov
sbb
mov
data16
dec
int3
pusha
and
sbb
test
sub
mov
xchg
mov
mov
xor
jns
sub
mov
imull
les
mov
js
add
aad
or
and
cmp
clc
fwait
dec
popa
inc
das
les
pop
pusha
leave
mov
push
mov
push
dec
in
xor
mov
aam
sbb
mov
mov
push
mov
dec
ficompl
shlb
push
in
mov
rolb
fsubrs
ret
out
jl
xchg
loop
call
mul
repnz
enter
int3
pushf
jbe
mov
mov
sarl
dec
sarl
jns
sub
dec
mov
adc
or
pushf
sub
sub
xchg
test
add
stos
jle
andl
lock
xor
stos
insl
mov
or
adc
out
pop
sbb
dec
mov
repnz
xchg
add
imul
in
stos
inc
add
shrl
cmc
xchg
inc
adc
sub
pushf
test
ret
std
push
xchg
inc
faddl
les
icebp
ja
add
cmpb
movsb
and
sub
movq
push
sub
inc
cmp
dec
inc
mov
je
loope
fcmovne
pop
test
mov
and
insb
bound
dec
push
jp
push
aaa
inc
stos
push
sbb
popa
test
sbb
pop
andb
imul
lret
ljmp
push
jns
dec
ret
dec
fiaddl
dec
xor
jae
sub
mov
push
aad
or
test
aas
enter
mov
and
lret
or
pop
push
int
mov
lea
adc
mov
fs
lcall
pop
sbb
inc
lods
lock
repnz
aas
xchg
xchg
jno
hlt
sbb
repnz
sub
sub
cmc
inc
lds
add
pushf
lods
sbbb
jecxz
daa
jp
jp
out
dec
popaw
adc
mov
adc
ljmp
dec
xor
call
pop
or
int
fistpll
mov
call
addr16
out
pop
cmp
data16
adc
mov
dec
arpl
pop
adc
es
pop
cmp
mov
filds
pop
iret
jg
lahf
mov
jmp
adc
leave
cmp
push
push
data16
mov
xor
std
insl
gs
sbbb
and
push
mov
insb
andl
mov
mov
test
js
mov
movsb
mov
dec
clc
in
fisttpll
mov
and
mov
add
xor
sub
sbb
adc
xor
xor
or
pop
mov
mov
or
fisubrs
cmpb
jl
mov
shll
icebp
pop
dec
dec
out
fstp
fdivrl
jmp
dec
jns
repnz
rorb
mov
sub
je
sub
adc
xor
mov
push
insb
cmp
mov
mov
fcmovnb
in
shll
push
jo
mov
mov
filds
dec
sbb
and
fidivl
or
xchg
addr16
and
lds
bound
sbbb
inc
inc
lcall
mov
xchg
dec
push
inc
shl
jo
hlt
inc
dec
sub
pushf
jmp
xchg
movsb
lahf
ds
lea
xchg
stos
in
fdivr
xor
movsl
add
int
sbb
stos
xchg
mov
add
xchg
mov
outsb
jp
ja
adc
mov
pop
dec
lcall
shlb
add
shll
stos
popf
out
inc
repnz
sub
lods
out
imull
loope
and
sbb
out
xchg
inc
pushf
xor
or
repz
mov
addr16
stos
jge
lret
mov
pushf
push
xor
cwtl
fwait
scas
cmp
xchg
jo
xchg
cmpsl
movsl
lock
mov
cmpsb
and
and
ljmp
adc
adc
jno
jmp
xor
jns
add
outsl
xlat
or
xchg
inc
jle
rcrb
adc
cmp
inc
in
cmpsl
sbb
or
rcrl
jge
jecxz
fistps
ficoml
jmp
lret
rorl
in
add
jg
loopne
pushf
scas
pushf
mov
in
dec
mov
or
xchg
sub
mov
imull
pop
xchg
dec
dec
push
fsubp
inc
sub
sub
push
jp
sbb
ret
sbb
aaa
pop
int3
adc
jo
push
add
cmpl
or
fwait
jo
cmpl
sbbb
hlt
enter
hlt
into
mov
cmp
fisubs
call
pop
sub
cwtl
jg
xor
lods
mov
ficomps
xchg
aam
xchg
fldcw
repz
fbld
mov
jno
jmp
cmp
lods
push
arpl
das
push
dec
lahf
adc
cmp
out
lods
mov
stos
scas
inc
sbb
xchg
scas
les
and
mov
sub
insb
arpl
sub
imul
ds
mov
mov
pop
adc
pop
add
loope
mov
cmp
js
sub
movsl
or
in
sti
stos
mov
std
jge
test
stos
enter
push
fs
dec
mov
add
add
je
push
cltd
pop
shlb
cmpps
pushf
adc
icebp
mov
pop
add
idivl
fildl
decb
jg
xchg
pop
or
xor
inc
cmp
enter
or
int
dec
cmpsl
pop
push
clc
test
imul
pop
fistpll
and
leave
in
dec
and
out
xchg
ljmp
icebp
shr
insl
jbe
pop
pop
call
sub
out
fs
fidivrl
sahf
mov
mov
xor
dec
sbb
test
inc
xchg
cmpsl
es
sbb
lcall
dec
mov
pop
ret
push
sub
outsl
cs
cmc
xchg
sbb
fucomi
xchg
cmpsl
movsl
movl
add
or
loope
call
jl
pop
mov
jg
mov
push
cli
xchg
mov
mov
in
xchg
mov
lods
adc
add
mov
xlat
sub
test
dec
mov
dec
movsb
movsl
dec
push
jle
leave
enter
mov
and
imul
fs
aam
roll
inc
jge
push
inc
sbb
jl
lahf
loope
inc
movsl
ss
xor
loop
and
mov
lea
add
jecxz
rcrl
or
jl
popa
push
sub
scas
fs
in
cs
push
adc
aad
call
mov
jge
pop
xchg
ret
mov
mov
sti
mov
inc
das
xchg
pusha
xchg
fildll
sbb
data16
and
and
dec
pop
cmp
mov
adc
mov
push
push
dec
cltd
inc
cld
push
and
test
ds
push
ljmp
scas
test
ja
xchg
cwtl
das
in
cmp
push
leave
adc
xchg
nop
cmp
add
jle
pop
mov
sbb
jl
das
les
scas
test
idiv
sub
test
xor
outsl
mov
jle
mov
dec
je
xor
xor
inc
push
jo
mov
rorb
cld
adc
cwtl
lret
inc
clc
stos
pop
pop
repz
cmc
push
pusha
sti
mov
in
std
cltd
sub
in
movb
mov
icebp
loope
out
adc
popa
cmp
xor
sbb
pushf
xlat
and
iret
push
shl
fiadds
pop
jne
loopne
int
loope
mov
xorb
jecxz
addr16
int
push
scas
dec
pop
dec
mov
xchg
outsb
add
adc
out
orl
sbb
aam
push
fwait
ret
cmp
mov
xor
jg
inc
sbb
pop
inc
xor
cmp
loope
idivl
jo
xor
xchg
je
pop
test
mov
mov
sub
incb
negb
xchg
out
out
push
in
arpl
das
mov
dec
lcall
dec
pop
ret
or
pusha
out
out
sbb
and
cmp
jge
jg
cmp
iret
mov
sub
cs
divb
or
out
push
popf
mov
xor
lods
mov
movsb
in
adc
jo
stos
jecxz
lahf
shll
xor
sahf
push
and
shll
loop
cli
cmp
gs
sub
loopne
jmp
push
lock
jg
jl
sbb
sub
pop
dec
cltd
imul
outsl
icebp
mov
shrb
je
push
mov
in
pop
jnp
mov
adc
cmc
cmp
jecxz
mov
jno
arpl
test
pushf
cmp
out
ss
aaa
inc
imul
jb
pop
or
mov
int3
xchg
dec
mov
jbe
push
pop
adc
notl
mov
push
ja
jecxz
lret
outsb
out
out
pusha
jns
rorb
pop
push
in
out
ss
ror
lcall
out
lret
xor
jmp
dec
sbb
filds
mov
out
xchg
sti
loop
dec
pop
mov
or
sub
mov
fnstcw
sub
lcall
dec
dec
inc
mov
mov
mov
pop
and
and
pop
push
cmp
ret
lods
xor
dec
inc
cmpsl
addb
pop
das
and
and
mov
push
push
or
orb
cltd
lock
rolb
hlt
and
fisttps
push
mov
pop
push
divb
loop
in
inc
lcall
pop
jae
mov
gs
jns
inc
std
cmpsb
xor
sbb
xor
lds
add
inc
cltd
mov
fcmovbe
test
xchg
jae
cmpsb
or
rclb
xchg
jle
inc
cs
push
shlb
es
sbb
aad
pusha
xor
loop
add
rcr
dec
call
add
mov
push
add
mov
xchg
inc
bound
push
push
xchg
pushf
js
imul
xchg
js
add
cmp
mulb
pop
sub
xor
rorb
mov
scas
je
mov
mov
outsb
lret
call
push
mov
sub
inc
xchg
out
std
stos
sbb
call
inc
paddusw
sti
mov
dec
fwait
xchg
and
pop
icebp
orb
push
inc
lret
inc
imul
popa
addr16
pop
sub
nop
lret
addr16
adc
icebp
jnp
int
in
xchg
cmpsb
adc
add
gs
aaa
subl
push
jno
mov
mov
ljmp
dec
stc
jmp
jge
fwait
pop
mov
cmpsb
ja
mov
stc
push
mov
push
sarl
or
insb
add
mov
sarl
lret
mulb
push
pop
ret
divb
push
jbe
aad
adc
stos
dec
popf
mov
arpl
subl
decl
out
lahf
test
mov
iret
xor
mov
sbb
pop
stos
movb
add
sub
in
lret
out
test
and
xor
ds
mov
lods
nop
outsb
jne
xor
je
jle
or
cltd
jle
add
arpl
outsl
lcall
push
fidivrl
imulb
insb
or
shlb
push
inc
pop
or
xchg
dec
push
dec
mov
xchg
push
mov
and
aaa
cmp
dec
pop
lret
test
repz
sbb
leave
sub
fbld
test
dec
insb
cmp
loope
je
jo
inc
ret
and
push
shll
cmc
pop
je
cmp
in
std
cmpb
bound
push
rcrb
sub
cmc
or
mov
and
dec
in
mov
or
sbb
cmp
fsubs
in
cmp
cmp
mov
cltd
mov
shlb
ret
mov
icebp
in
cmp
out
addb
push
pop
mov
jmp
xchg
mov
loopne
xor
mov
or
jle
aad
repnz
xchg
adc
fiaddl
sub
jne
dec
jge
les
mov
test
cwtl
mov
xchg
popf
out
cli
cwtl
sub
das
or
dec
cmp
sti
push
add
dec
in
ret
and
and
mov
pop
or
jge
dec
fildll
push
fwait
cld
cmp
mov
icebp
out
sarb
sbb
adc
mov
mov
enter
scas
lock
jb
jp
sbb
push
clc
xor
mov
pop
adc
push
into
decl
mov
xor
enter
push
adc
push
xlat
arpl
xchg
sbb
push
jge
fstpt
push
in
sarb
and
aam
add
inc
push
stos
jnp
ljmp
outsb
xor
test
push
inc
in
pop
jg
cld
lock
jb
sti
shlb
push
pusha
mov
inc
or
sub
mov
inc
sbb
sub
int3
sub
in
outsb
ret
jecxz
rcll
mov
scas
imul
cmp
sub
dec
add
pop
int
ss
lds
xor
popf
cmp
jns
out
xchg
mov
jmp
fstpt
out
ljmp
and
sahf
xchg
test
cld
loope
dec
and
sub
jle
adc
add
inc
mov
loope
pop
movb
or
fwait
ret
insb
fdivrp
mov
fsubs
imulb
call
outsb
scas
add
push
adc
lahf
pop
pop
ja
call
roll
and
adc
sbb
jb
push
fcoml
or
dec
std
fidivrs
inc
or
push
and
push
test
and
movsb
xchg
pusha
test
push
and
jno
hlt
mov
xchg
xchg
enter
stos
mov
push
arpl
cli
push
stos
out
test
and
movl
jb
push
mov
dec
and
loopne
das
mov
imul
notl
mov
mov
pop
icebp
inc
cmpsb
cwtl
lds
mov
dec
add
call
pop
and
push
in
insl
mov
movsl
add
pusha
iret
lcall
out
inc
cwtl
xor
test
inc
mov
xor
inc
push
ljmp
jb
das
mov
lock
adc
push
jp
lahf
dec
lret
inc
xchg
mov
xchg
pop
cmp
pop
fcomps
add
mov
test
mov
int3
je
jnp
jbe
aad
and
sbb
in
insb
test
cwtl
call
and
popa
jnp
aas
inc
inc
and
frstpm(287
push
stos
mov
push
cmp
mov
add
test
pop
neg
jle
add
dec
mov
mov
jle
or
mov
aas
xor
aam
movsb
mov
cli
adc
repnz
or
lods
cmpsl
lds
mov
aaa
fists
adc
mov
inc
and
out
sub
es
mov
faddl
jae
push
cli
xor
lea
pop
imul
insb
hlt
sarb
lcall
push
mov
divb
dec
stos
sub
arpl
push
orl
and
cmp
mov
dec
rcl
pop
push
dec
or
and
sti
insb
mov
mov
fdivrs
add
xchg
xor
mov
jno
push
test
add
adcl
pop
or
imul
out
sbb
xchg
inc
jp
stos
lahf
pop
jmp
outsb
in
fldcw
gs
pusha
add
stc
dec
aam
shl
addr16
outsb
cmp
sahf
aad
and
leave
out
push
frstor
xchg
shrl
fcoms
jge
or
jb
adc
cmc
pop
test
mov
and
adc
ret
rol
push
pop
pop
out
rorb
hlt
repz
movsl
out
mov
add
adc
pop
in
xchg
cld
movsl
mov
call
call
out
jecxz
std
sbb
mov
xor
call
dec
mov
xchg
lcall
stos
and
cld
loop
test
cs
out
loop
jne
fisttpll
inc
scas
ljmp
inc
insb
rcrb
test
dec
push
sub
fs
mov
pop
lahf
add
push
dec
and
mov
scas
int3
je
mov
pop
aam
push
fmuls
aaa
xor
in
hlt
loopne
sub
ljmp
sbb
out
lock
pop
jb
cmpsb
test
in
mov
lods
ja
test
mov
insl
adc
mov
mov
mov
push
cltd
and
out
xchg
sbb
xchg
lcallw
or
mov
push
shll
out
inc
dec
notb
mov
cmp
push
packssdw
fnsave
xor
mov
in
ljmp
pop
inc
in
int3
cwtl
call
popa
cmc
rcrl
push
in
cmp
and
pop
lods
js
cmpsl
xchg
sbb
mov
push
int3
sub
mov
scas
jl
imul
dec
adc
jp
mov
add
das
pop
xchg
imul
iret
xlat
jmp
and
cmp
xchg
insb
pop
pop
jge
pop
fimuls
and
pop
fisubrl
add
out
test
mov
push
push
sarb
sahf
and
or
pop
lahf
push
outsb
xor
adc
pop
inc
dec
stc
mov
outsb
pop
movsb
int
loope
sub
xor
in
push
pusha
inc
clc
fldl
scas
frstor
fs
add
fcoml
jge
adc
cmpsl
ja
push
lods
jecxz
test
icebp
pushl
mov
outsl
sbb
idivl
xor
pop
xchg
pop
ss
mov
jne
xchg
fwait
sbb
lret
mov
mov
pop
xlat
jl
cmpsl
insl
fmuls
or
and
test
add
enter
jno
inc
addb
push
lea
cmpsb
dec
cmp
cs
xchg
xchg
lahf
sbb
push
xchg
repnz
test
ret
xchg
mov
or
mov
mov
pop
dec
cmp
sarl
or
popa
mov
lods
push
jae
leave
arpl
pop
int3
scas
scas
mov
sub
sbb
fdivp
gs
jnp
sahf
jb
inc
push
imul
fisubl
icebp
or
mov
addb
in
popa
rorb
cmpsl
insl
inc
jno
out
testb
faddl
shl
push
and
ja
push
fnstcw
imul
icebp
or
add
das
and
sub
jae
push
iret
aas
leave
add
insb
sub
and
in
mov
data16
pop
int3
punpckhwd
xchg
fwait
dec
fcmovb
or
popf
cs
push
mov
mov
scas
add
cmp
push
dec
mov
pop
mov
popa
mov
aas
jmp
add
jae
pop
jle
stc
cmc
mov
shrl
jp
adc
cwtl
cmpl
mov
mov
sub
xchg
je
cmp
xorl
dec
pushf
pop
test
cmpb
daa
pop
pusha
dec
test
or
mov
mov
sahf
loope
jb
jecxz
mov
pop
mov
mov
daa
fsub
mov
xchg
sub
lods
push
loopne
add
icebp
xchg
add
dec
sub
rcrl
jg
repz
orl
stos
jmp
dec
mov
les
aaa
mov
fs
mov
cld
sarl
cwtl
jp
mov
push
ret
test
and
mov
adc
xchg
es
mov
popa
dec
ljmp
mov
cmpsb
sbb
jo
xchg
ja
aaa
sbb
push
fstl
mov
test
push
and
int3
mov
sahf
jae
dec
stos
hlt
inc
jecxz
adc
dec
xchg
inc
in
push
xor
push
mov
aaa
xchg
rcrl
sarl
xor
mov
dec
aas
add
mov
mov
int3
fwait
daa
int
les
shrl
dec
cmp
push
add
jbe
leave
pop
mov
inc
shrb
das
adc
mov
and
add
dec
cli
out
in
nop
push
jmp
inc
and
cld
test
add
jae
fwait
add
jmp
int
cmp
imul
outsl
pop
jb
pusha
lods
test
insl
imul
push
sub
or
jp
mov
dec
adc
orl
iret
push
ds
les
out
mov
shll
out
ja
add
cltd
jmp
imul
notb
cmp
add
mov
dec
add
add
lret
mov
cmp
jle
loop
inc
fldcw
popa
pop
bound
sarl
mov
pop
out
lods
add
push
rolb
divl
rcrb
test
and
insl
sbb
or
cld
mov
pop
out
test
xor
mov
fisttpll
cmp
insb
push
test
cwtl
jns
mov
pop
push
iret
push
push
divb
loopne
add
sbb
out
enter
sub
mull
orl
out
sub
aaa
push
jo
dec
mov
mov
ret
ljmp
adc
push
subb
jno
jae
test
call
dec
inc
sub
cltd
jg
push
pop
or
sub
lret
jp
push
out
or
push
mov
jns
stos
test
push
iret
es
pop
inc
gs
adc
cmpsl
enter
lock
cwtl
cli
hlt
cmp
lahf
cmp
push
into
sub
cld
shrl
lods
arpl
sbb
aas
pop
jmp
test
fisubrs
rcl
fwait
sti
and
sbb
cmp
cmc
js
xchg
mov
push
icebp
sbb
aas
stc
push
rcrl
in
icebp
cmc
or
adc
ret
shl
pop
xchg
lods
sub
inc
popa
rorl
jmp
shll
or
mov
mov
and
fstp
cmp
and
push
fldt
cwtl
inc
mov
jle
dec
cpuid
mov
add
roll
cmp
in
data16
cmp
mov
nop
jmp
mov
xchg
cmp
in
cmp
adc
setae
mov
mov
ds
add
stos
in
rcr
inc
insb
imul
mov
sarb
fildll
xchg
je
arpl
cmp
pop
mov
lods
ret
ljmp
jns
add
pop
push
pop
jmp
cmp
xacquire
test
sub
int3
pop
pop
into
jle
pop
scas
mov
insl
icebp
shll
mov
inc
dec
dec
shrl
das
sarb
sahf
ret
fmul
inc
xchg
in
or
xchg
mov
push
sbb
cld
repnz
loop
pop
mov
jecxz
std
push
in
adc
adc
jmp
mov
movsl
jmp
cli
in
adc
inc
xchg
mov
shll
mov
push
xor
mov
jnp
test
pop
mov
pop
ficoml
push
mov
inc
jle
movsb
pop
push
hlt
push
fdivl
jle
in
sarb
popf
mov
notb
sbb
imul
sub
xor
fdivs
sahf
dec
xor
ficomps
loope
and
mov
insb
hlt
shl
loope
in
aam
into
test
jne
aas
fstl
push
rolb
sub
rcrb
ret
cmp
xchg
jecxz
cmp
stc
lret
pop
push
mov
mov
mov
adc
xor
xor
jae
sub
pop
xor
adc
mov
test
inc
cmpb
roll
das
orb
lahf
fldl
sub
les
add
push
dec
pop
aad
sbb
and
fcom
mov
leave
loop
les
jae
shlb
lea
or
mov
mov
xchg
and
pop
fld
aaa
gs
into
out
cmp
mov
add
push
aam
sub
mov
adc
lods
cmp
pop
pop
stos
test
pop
mov
pop
lret
ja
pop
xchg
adc
outsb
inc
cmp
cmp
cwtl
loopne
cmpsl
imulb
arpl
push
xor
ja
jb
inc
flds
frstor
sub
cwtl
push
cwtl
aam
int
test
in
mov
enter
or
push
fmull
dec
push
and
cli
mov
cmpsl
aam
mov
dec
or
pop
xlat
testl
es
cwtl
push
dec
jmp
dec
add
mov
push
out
jnp
push
pop
fidivl
out
add
repz
repnz
xor
movsl
pusha
sti
repz
mov
sbb
in
ret
add
sbb
xor
out
ljmp
in
fsts
mov
or
jmp
arpl
daa
iret
addr16
repnz
xor
stos
arpl
sub
xor
mov
xchg
cmpsb
rcll
loope
adc
cld
fdivr
or
int3
pop
stos
in
mov
push
jne
xor
xor
xchg
or
sub
xor
pop
sbb
push
aad
bound
push
add
sahf
push
fbstp
mov
mov
dec
mov
loop
sbb
sbb
mov
push
sbb
fiadds
push
and
hlt
pop
and
jnp
into
ficoml
rolb
sub
mov
repz
or
call
sbb
xorl
inc
cmc
repz
sbb
lahf
jae
inc
out
in
ror
inc
negb
data16
imulb
push
ja
pop
or
pushf
and
push
in
pop
xor
pop
push
repnz
repnz
fst
int3
fidivrl
or
lret
jmp
or
stos
adc
out
pushf
imul
enter
jle
movsb
xchg
es
frstor
shll
hlt
jle
lds
dec
sbb
xchg
or
cmpb
and
into
movsl
out
notl
loope
pop
xor
sbb
jnp
xchg
cmp
push
js
and
push
jno
pop
hlt
cmp
loop
bound
scas
push
cwtl
inc
add
insl
mov
inc
and
xchg
xchg
sbb
push
dec
mov
mov
sub
jecxz
shlb
sbb
enter
sbb
mov
flds
cmpsb
dec
jb
mov
mov
and
xor
xchg
adc
inc
and
in
aam
aad
je
and
mov
xlat
add
std
sbb
pop
stos
arpl
fistl
std
mov
imul
jne
in
xchg
into
and
or
xchg
sub
dec
xchg
aam
mov
xor
sbb
xor
sub
inc
fdivrs
jge
rcl
xchg
jae
mov
mov
lds
clc
movsl
lds
jg
adc
push
faddl
loopne
sub
jo
mov
cmpsb
sar
adc
xchg
sbb
mov
xchg
repnz
push
mov
xchg
xchg
xor
lea
push
mov
mov
sbbb
stos
mov
jmp
sub
movsb
scas
xchg
jno
mov
int3
pop
sbb
in
mov
pop
xor
xchg
movsb
frndint
jp
mov
fwait
inc
and
mov
adc
repnz
xlat
pop
pop
mov
or
jne
pop
ljmp
push
adc
lahf
adc
dec
jb
lods
test
mov
dec
ret
leave
pop
cltd
in
sbbl
cmp
adc
scas
or
scas
jecxz
sbb
inc
ret
popf
add
cmc
mov
aad
jecxz
lods
sbb
jmp
jo
pop
inc
mov
insb
cvtpi2ps
pop
jbe
fcmovu
ret
push
xchg
cwtl
sbb
pop
paddsw
pop
jg
dec
mov
sbb
in
test
cltd
or
dec
jl
jecxz
rorl
insl
dec
popa
jmp
mov
add
dec
jae
push
ret
xor
mov
cwtl
loope
mov
outsl
fistpl
dec
mov
call
and
sub
ret
test
mov
leave
imul
cs
jbe
pop
jg
sahf
pop
xor
jmp
cmp
dec
test
sar
pop
push
fcmovbe
jne
jle
inc
enter
push
fiaddl
rclb
mov
xchg
mov
mov
mov
jmp
sub
leave
aam
xor
pop
stos
in
pop
es
nop
or
mov
or
fwait
leave
adc
iret
xor
cmpsb
or
ss
jg
cld
jno
add
push
outsl
fdiv
sbb
loopnew
lock
stos
subb
in
cmp
shll
scas
insl
or
out
ljmp
inc
shrb
sahf
jbe
mov
aad
jp
jle
mov
xchg
fcomi
sub
cmp
push
sbb
inc
push
outsb
ret
mov
fistl
pop
and
jo
cld
xor
cmpsb
out
sahf
enter
jp
cmp
or
gs
sahf
out
sbb
sar
cmp
jge
lock
fucom
pushf
push
subl
pop
scas
mov
mov
lods
clc
and
lea
popa
in
jp
enter
ret
dec
add
mov
lods
out
adc
sbb
push
lret
out
fs
or
add
loop
fisttps
mov
pop
inc
in
movsl
mov
or
jno
es
adc
cmpsl
mov
test
in
and
int3
jmp
jbe
cmp
cmp
jp
cmp
leave
push
scas
pushf
mov
mov
out
cmp
popf
mov
or
aaa
inc
mov
inc
adc
movsb
xchg
lock
testl
push
mov
in
insl
nop
xchg
push
add
fstpt
mov
int
mov
test
roll
mov
cmp
int3
push
and
xchg
cwtl
or
pusha
imul
pop
aad
cld
add
mov
inc
sti
sbb
sbb
hlt
mov
hlt
hlt
pop
cmpsb
aam
out
xor
pop
pop
das
jecxz
dec
mov
xchg
movsb
cwtl
dec
add
test
xchg
es
and
outsl
xchg
and
cs
add
inc
and
repz
or
push
sbb
lods
in
in
adc
mov
cmp
fildll
xor
mov
fstps
cld
scas
popa
subb
mov
adc
jecxz
leave
sub
push
push
stos
jb
idivl
mov
and
sbbl
cmp
push
std
mov
mov
add
addr16
add
xchg
sub
adc
and
inc
push
lods
ljmp
mov
sub
mov
adc
adc
cld
clc
jne
jp
aaa
xlat
sbb
cmp
inc
inc
mov
xor
xor
mov
xchg
xchg
repnz
out
insl
mov
sub
push
pusha
fisubrl
push
xlat
add
dec
test
and
pop
push
mov
icebp
lock
sbb
mov
fcoml
icebp
daa
pop
add
in
inc
repnz
das
fiaddl
adc
xchg
mull
fcomps
pop
xchg
push
dec
cltd
in
repz
push
cmpb
jns
lds
sub
fcomip
in
mov
rcrb
dec
or
push
jo
push
ret
push
sarl
arpl
cmp
mov
mov
out
or
dec
or
adc
cmp
iret
aad
pop
push
mov
bound
pop
pandn
fwait
leave
inc
add
mov
jb
add
fadds
call
jecxz
popf
jo
push
iret
sbb
pushw
or
std
mov
fst
nop
mov
xchg
dec
repnz
xlat
cmpsb
stos
int3
mov
gs
les
sub
out
into
aaa
sbb
sbb
mov
mov
sub
cli
fsubr
lods
mov
or
push
test
sub
mov
ds
sbb
cmc
xchg
push
and
add
stos
outsb
cmpsb
es
outsb
push
orl
addb
movsl
lea
push
mov
dec
pop
mov
push
out
xchg
pop
sbb
and
iret
xor
xor
outsl
sbb
and
cmp
or
xor
movsb
sbb
jmp
sub
xchg
call
mov
or
repnz
xchg
mov
pop
ljmp
mov
and
in
ss
fisubs
iret
in
aam
cmc
mov
jge
call
pushf
xchg
dec
insb
es
rolb
add
xchg
lret
je
inc
je
sub
and
les
ljmp
or
call
cmp
and
ja
test
sub
cmpsl
movb
cmc
mov
std
pop
clc
mov
repnz
push
pop
pop
ss
mov
push
insl
cs
jecxz
add
sub
cmp
test
fcoms
cmc
xor
xchg
xorl
push
lods
js
pusha
dec
jl
sub
jnp
call
test
test
aad
or
pop
xor
packssdw
jnp
movsb
je
fdivl
xor
pop
gs
ljmp
dec
out
cmp
and
mov
mov
scas
lds
inc
sub
rolb
mov
or
mov
loope
in
xor
jb
clc
xchg
in
xchg
jb
push
mov
nop
andb
mov
das
push
repnz
mov
jle
insl
stos
loopne
jo,pn
cltd
inc
sbb
sbb
push
xor
cmp
mov
loop
push
xadd
inc
sub
cmpsb
sub
mulb
adc
std
gs
jb
ret
cmp
jecxz
cmp
shlb
ret
mov
popf
repz
lods
mov
adc
loopne
mov
aaa
sbb
fnstsw
fcmovnb
cltd
mov
jbe
js
push
jmp
cmp
in
push
sub
cmp
mov
sub
push
ja
mov
inc
cmp
mov
js
sbb
or
jmp
pop
ds
and
push
cmpsl
xchg
ffree
movsl
pop
popa
add
add
into
sbb
xor
mov
into
pop
xor
cmp
fsubl
cmpb
mov
outsl
cmp
inc
pop
mov
mov
pop
rcrl
sbb
sub
in
rcll
mov
sbb
imul
sti
pushf
mov
pop
xor
dec
xchg
imul
cmp
jecxz
add
cmp
test
jl
fildll
dec
push
clc
xchg
jnp
dec
stos
and
je
sbb
sti
push
sbb
out
push
jg
incb
jmp
push
ret
xor
sahf
fwait
out
mov
mov
test
dec
xor
add
push
sub
xchg
pop
cmp
rcrl
mov
repz
xor
fdivl
das
aas
adc
pusha
call
jg
mov
xor
fbstp
ret
mov
mov
push
add
adc
je
dec
or
cmp
outsb
popf
scas
ret
push
dec
cli
das
std
dec
setg
in
aas
out
lcall
scas
cltd
idivl
leave
adcl
mov
inc
pop
cwtl
mov
adc
scas
xchg
scas
and
mov
inc
pop
das
stc
dec
sbb
sbb
dec
lods
mov
xor
rcll
mov
mov
aaa
arpl
movl
jmp
xor
xorb
int3
jecxz
mov
in
jl
mov
push
cli
sbb
jo
jb
out
icebp
outsb
sub
ret
mov
inc
dec
orb
push
or
sub
sub
mov
shlb
jb
dec
sbb
jl
cmp
sbb
or
pop
into
mov
aaa
nop
inc
xchg
and
imul
and
jg
mov
sbb
stos
cwtl
sbb
cmpsb
xor
lds
jmp
out
mov
std
pop
pop
adc
inc
loope
in
test
cmp
push
xlat
test
push
fsubs
fnstcw
bound
clc
sahf
jl
std
scas
cs
pop
cmpb
mov
les
xchg
hlt
sbb
imul
pop
push
in
cmc
jp
mov
test
mov
rorb
ret
roll
cmp
push
scas
inc
inc
push
loop
out
xchg
jl
mov
mov
lods
ss
js
sub
push
jbe
das
pop
xor
ljmp
fistpll
cmpsb
sti
push
subb
lods
orb
mov
ss
push
xchg
xchg
inc
sbbl
pop
or
push
int3
cmp
shrl
and
cmp
jg
jo
in
xchg
movsb
mov
pop
xor
outsl
sahf
pop
loop
xchg
mov
shlb
fisubrs
orl
in
mov
icebp
sbb
adc
jle
push
mov
lret
pop
fiaddl
cmp
jmp
out
mov
sti
or
sbb
mov
mov
in
cmp
xor
bound
pop
in
push
cmp
in
xchg
sbb
mov
xor
pop
ljmp
imul
orb
jb
pop
jle
ret
adc
ja
test
xor
push
daa
fisubrl
dec
cmp
mov
ja
ds
cltd
or
js
xor
hlt
ret
idivb
dec
aam
jp
xchg
dec
mov
lret
in
adc
mov
ja
dec
dec
inc
rcrl
test
mov
std
movsl
dec
mov
and
arpl
xchg
jb
addl
hlt
inc
repnz
pop
xchg
imul
add
inc
lcall
jle
cli
addr16
scas
pushf
pop
loopne
adcl
sbb
adc
xor
aam
aam
inc
lods
push
insb
sbb
xchg
add
fisubrs
mov
cmpsl
addb
into
stos
mov
dec
sbb
xchg
clc
fsub
pop
add
das
xchg
daa
mov
jnp
std
xlat
jns
in
aas
inc
jno
pusha
dec
or
scas
and
out
mov
and
daa
pop
arpl
out
jmp
jmp
xchg
hlt
gs
lret
repnz
xchg
mov
adc
pop
ds
enter
mov
push
jge
add
pusha
lret
dec
adc
mov
nop
jae
fs
jmp
stc
jl
fisttpl
outsl
add
pushf
rep
and
es
insb
in
test
out
mov
push
loope,pn
cmp
xor
movsb
sbb
mov
lret
movsb
mov
push
insl
cmp
repnz
sub
mov
call
push
sub
sbb
pushf
push
xchg
jle
inc
mov
sub
mov
jle
loopne
mov
and
xlat
dec
insb
xchg
jge
data16
add
ret
cmp
mull
jne
jmp
cld
ds
mov
ret
or
jg
and
insb
jae
xchg
jne
sbb
xchg
inc
xchg
rcrl
cs
mov
rdmsr
outsb
jns
sahf
and
cmp
out
lock
and
push
inc
jns
pop
movsl
add
dec
rol
ficoms
mov
push
or
cmp
nop
xchg
adc
aas
in
mov
and
in
mov
cmpsl
mov
loop
nop
lods
push
imul
mulb
insl
divb
and
pop
outsb
fildl
inc
mov
sbbl
lret
jecxz
fsubrp
inc
pusha
push
add
pop
dec
inc
jl
test
mov
xchg
popa
clc
sbb
dec
popf
push
les
dec
pop
sub
setg
jp
ja
cmpsb
cmp
adc
mov
jecxz
cli
lret
sbb
pop
inc
je
inc
and
popa
lahf
sub
arpl
std
data16
insb
ucomiss
lea
inc
dec
pop
cwtl
dec
inc
test
cmpsl
mov
test
leave
fidivl
popa
in
jmp
out
cld
and
xchg
push
mov
jmp
mov
or
mov
insl
es
cmp
xchg
adc
push
lods
clc
fdivl
adc
je
cmp
dec
sub
les
xchg
mov
pop
mov
notl
sub
lods
test
and
out
inc
es
or
rolb
pushl
stos
aad
scas
pop
pop
jle
cmp
pop
xor
add
push
or
xchg
push
cmp
cmp
mov
xchg
repz
xchg
jo
aaa
inc
fldt
loopne
push
dec
ret
cmp
jb
jns
push
imul
fnstsw
push
movsl
popf
sbbl
mov
mov
mov
push
dec
sbb
xor
fcomps
dec
shr
aaa
mov
imul
ds
bnd
sbb
lea
inc
in
adc
js
adc
sarl
cltd
add
cmp
iret
push
and
subl
xor
add
push
orl
or
fwait
stos
into
mov
inc
sub
xor
push
nop
pop
notl
mov
lret
xor
fs
pop
std
sub
mov
sahf
je
push
inc
aam
enter
movsl
mov
jne
dec
ja
add
jbe
arpl
dec
inc
insl
mov
dec
jg
cmp
rol
and
repnz
cltd
sbb
bnd
xchg
xor
xchg
dec
xchg
ljmp
aad
xchg
dec
adc
xor
push
mov
ja
aas
or
negb
jns
call
mov
pop
add
loopne
inc
cmpsl
fnsave
xor
mov
bound
inc
cmpsb
imul
dec
xchg
sbb
mov
mov
cmc
lds
xchg
xchg
dec
mov
stos
sarl
shlb
xor
pop
xorl
xlat
cmp
jns
repnz
cmp
fsts
push
pop
pop
mov
mov
dec
xor
incb
push
aas
sbb
or
xchg
add
jmp
lcallw
mul
lock
mov
clc
mov
test
ss
daa
and
mov
fisubrl
sub
sbb
pop
pop
aas
das
into
mov
push
jmp
xor
fcom
lret
inc
bound
cmp
push
pushf
jo
cmp
jno
lods
jbe
pop
or
adc
and
jmp
jmp
xchg
push
fisubl
and
decb
mov
dec
cmp
mov
pop
in
jp
lods
scas
push
movsb
mov
mov
shrb
dec
cmp
push
mov
sbb
aaa
hlt
rorb
sahf
or
neg
fldl
xor
inc
andb
insl
icebp
stc
cltd
xlat
sub
jle
jne
scas
add
dec
push
pop
push
outsb
das
sub
jns
cmp
mov
inc
inc
loope
orb
mov
sbb
xor
negb
fsubrl
adc
cmpsl
pop
mov
hlt
mov
add
stc
pop
pop
sub
andl
lret
sbbb
mov
cmp
out
into
loop
ljmp
int3
test
ljmp
lods
and
lahf
sub
mov
stos
test
xor
jecxz
fisttpll
sbb
dec
clc
add
or
loope
or
les
mov
adc
add
mov
cmpsb
movsl
push
lahf
icebp
and
cmp
fcoml
mov
xchg
xor
and
repz
or
fsub
sub
icebp
lret
aam
pop
es
call
dec
sbb
push
mov
mov
or
aas
out
ds
lcall
cmp
bound
popf
cmp
test
lea
cli
out
aam
fldt
inc
adcl
loopne
xchg
sub
and
sbb
adc
sub
divl
aas
push
fmull
test
jae
ret
out
fcoml
lods
test
je
mov
movsl
clc
xor
lcall
sub
into
jl
testl
outsb
add
pushf
leave
sbb
push
dec
pop
fsubs
cltd
ljmp
sub
push
sbb
leave
dec
and
dec
shl
pop
sub
cmp
out
cwtl
fucomip
lret
xor
daa
cli
pop
scas
dec
stos
jne
dec
dec
xchg
aas
stos
or
addb
lcall
sbb
orl
dec
sbb
and
xchg
sbb
pop
dec
inc
adc
clc
mov
aas
cmp
lret
movsb
scas
insb
push
xchg
cld
in
aam
push
push
mov
add
jae
sbb
and
adc
pop
test
cli
es
lcall
mul
cwtl
shlb
xor
inc
ficoms
add
int
push
pop
or
push
cmp
xor
sahf
jnp
mov
mov
ja
out
jbe
subl
lea
cmp
pop
jmp
shl
icebp
popf
pop
ja
enter
push
ja
mov
shl
cld
push
leave
sahf
les
addr16
sub
inc
or
pop
pop
pop
or
sbb
mov
dec
xchg
xchg
cmpsb
out
push
repnz
icebp
mov
jb
xorb
out
cmp
mov
pop
xchg
push
xchg
mov
cs
int3
cmp
push
mov
popa
cmc
cli
xor
pop
cmc
cwtl
fsubr
xor
lods
xlat
flds
and
in
bound
sarl
add
inc
sahf
ljmp
mov
je
leave
inc
dec
mov
sub
lock
cld
push
sbb
clc
rcrb
in
mov
arpl
aad
ret
je
dec
push
sub
and
xor
pop
xor
xchg
pop
inc
sbb
test
les
push
add
jns
dec
popl
movsl
pop
xor
pop
or
mov
cmpsb
clc
xchg
sub
jge
inc
and
cmp
dec
push
outsb
int
cmpsl
aam
pop
test
push
mov
in
adc
aad
cmp
out
sbb
les
inc
jmp
adc
push
into
inc
mov
mov
sbb
adc
pop
pop
adc
mov
sbb
adc
stos
int
insl
xor
rorl
push
inc
mov
jl
lods
cld
jmp
std
inc
push
add
jns
adc
mov
clc
insl
sub
xchg
inc
aam
hlt
dec
mov
push
fsubr
nop
mov
inc
push
adc
shll
in
xor
ja
or
dec
call
cmp
daa
cmpps
repz
scas
or
es
pop
mov
fistpll
mov
dec
push
pop
xor
inc
jns
or
aas
push
das
sub
roll
mov
in
sub
cmp
xorb
shrl
mov
mov
cmpsl
push
fsubl
jmp
add
stc
jp
add
fbld
sub
sti
fisttpll
sub
outsl
sub
jle
mov
xchg
inc
mov
nop
insl
inc
jg
jne
ds
cmpsb
sbbb
cmp
or
imull
adc
pop
mov
loope
mov
in
sbb
xlat
cli
hlt
cli
mov
ss
jo
sbb
push
xlat
cmp
pusha
xchg
xor
mov
in
push
add
sbb
lea
pop
or
push
in
or
sbb
addr16
sub
mov
pop
jmp
cmp
push
addr16
testb
pop
lds
scas
sub
push
orb
mov
jmp
jne
jecxz
mov
mov
xchg
push
push
daa
or
adc
jbe
sahf
xchg
or
push
mov
int3
push
aaa
cmpsl
mov
lea
imul
xor
aas
cmpsl
lods
sbb
cmp
imul
nop
jg
jns
cs
mov
pop
inc
mov
mov
mov
aam
inc
in
imulb
and
pop
adcb
ficoml
cwtl
movsb
mov
int3
aas
scas
push
xchg
mov
adc
cmp
std
in
or
inc
loope
push
and
sub
outsb
cmovne
push
mov
ds
jecxz
push
push
inc
and
sbb
push
loopne
push
scas
mov
dec
push
data16
filds
lcall
dec
out
negb
or
cmpsl
in
imul
pushf
cmp
mov
scas
ficoms
adc
xchg
mov
insl
push
hlt
sub
dec
xor
roll
dec
mulb
out
sub
lods
fstps
add
aaa
scas
push
clc
mov
loope
jo
dec
subb
aad
cmp
insb
test
mov
lret
pusha
or
nop
aas
push
lods
sub
push
adc
js
cmp
ljmp
cmp
inc
jns
xor
shll
xorl
adcl
popf
pop
jl
out
adc
cmc
in
push
mov
in
and
push
arpl
xchg
bound
mov
repz
ret
inc
xchg
das
push
cltd
sbb
pop
fists
ret
cmp
mov
push
es
loopne
sub
in
push
mov
sbb
xor
jae
ja
out
and
sarb
jg
iret
mov
mov
les
je
es
cwtl
mov
jp
cmp
popf
sub
push
xorl
xor
js
cmpsb
jge
enter
xchg
jno
aaa
adc
mov
popa
cmpsl
push
mov
das
stos
int3
jl
cmp
je
or
jne
add
es
adc
xor
add
push
jl
pop
mov
cmc
xchg
fimull
icebp
insb
jo
push
xor
ret
xchg
push
add
sbbb
mov
inc
inc
lods
sbb
lahf
pop
jg
pop
xor
push
ljmp
leave
fisttpl
jmp
mov
loopne
push
sahf
notl
fdiv
js
scas
xchg
shr
add
cli
out
into
mov
jbe
pop
adc
arpl
pop
fisttpl
js
popa
xchg
setae
adc
jo
cld
out
lahf
pushf
push
mov
mov
cmpsb
jg
and
cmp
insb
pop
fs
insl
rcr
jp
pop
or
dec
jbe
fwait
push
lods
sbb
pushw
jp
cmp
gs
inc
std
out
js
arpl
out
incb
rclb
in
push
lret
xlat
arpl
leave
xor
aaa
xchg
inc
jge
imul
fcoml
in
in
das
pop
inc
fistl
adc
mov
pop
test
inc
hlt
lock
decl
popa
pop
adc
xor
lcall
lods
data16
cmp
pop
fxch
or
data16
xor
mov
pusha
push
mov
divb
bound
pminub
xchg
adc
ror
enter
or
pusha
add
and
pop
pop
pop
cwtl
insb
mov
out
or
aaa
aam
outsl
xlat
push
jns
int3
cmpxchg
push
hlt
dec
or
rolb
push
gs
test
lods
push
std
scas
test
fmuls
fwait
jae
mov
sbb
mov
out
call
xchg
out
fsubs
mov
mov
pusha
sub
push
das
push
pusha
movsl
xor
push
out
andl
insl
push
push
push
adc
mov
and
mov
fwait
push
dec
enter
inc
sub
fldenv
int
dec
rclb
cmp
mov
adc
lock
movsb
sbb
jg
xchg
xchg
lret
xor
mov
xchg
sbb
mov
out
fst
mulb
and
push
sbbb
imull
scas
lret
push
jb
sub
cmpsb
jbe
arpl
cmp
add
scas
inc
insl
jge
pushf
cmpsl
outsl
mov
adc
mov
or
inc
mov
adc
adc
addb
cmp
jb
xor
mov
fistl
fadds
test
fcmovnu
pusha
push
call
or
push
mov
mov
sub
mov
add
push
add
pop
pop
push
fdivs
sahf
rolb
roll
mov
in
sbb
imul
mov
mov
sub
pop
hlt
es
das
xor
scas
notl
inc
lds
sub
cmc
mov
xchg
lods
cmp
jbe
roll
pop
shll
scas
in
jnp
cmpsl
mov
cmp
sub
outsl
mov
mov
add
sbb
xor
mov
sub
into
adc
add
in
jp
loopne
jbe
cmp
fisubl
loopne
enterw
orb
cmp
and
push
js
push
sbb
insl
xor
pop
fdivl
enter
mov
and
hlt
fdivrl
xor
insl
dec
sbb
and
push
pop
and
mov
sub
jle
jb
hlt
cmp
xor
add
add
loop
pop
and
jge
imul
aam
lahf
jg
xchg
scas
icebp
rorb
int3
loope
mov
lds
dec
out
push
scas
arpl
mov
stc
pop
mov
fildl
test
add
mov
scas
sbb
in
or
mov
sub
ret
fcmovb
fnstcw
orl
pop
lea
jbe
mov
test
xor
xor
and
ds
xchg
sub
daa
xorl
test
mov
mov
dec
pop
mov
fst
dec
sub
push
add
or
in
add
pop
pusha
mov
push
inc
sbb
push
outsl
in
cmp
mov
sahf
cmp
sub
mov
xor
in
adc
test
xchg
ja
or
push
or
ljmp
mov
inc
int
arpl
inc
jl
out
popf
adc
stc
test
adc
loopne
push
addr16
inc
lret
inc
cmpsl
lea
es
jbe
movsl
push
out
push
leave
jle
or
sub
dec
sbb
mov
lahf
cmc
fstpl
repnz
jmp
and
neg
insl
push
push
pop
subl
mov
jno
mov
pusha
lret
adc
mov
out
dec
fcoml
mov
pusha
push
cltd
mov
push
jb
cmp
push
xchg
pop
addl
imul
outsl
inc
cld
mov
adc
mov
xor
add
dec
int3
or
sub
outsl
push
xlat
add
dec
add
and
insb
dec
jle
divl
stos
arpl
daa
cmpsl
cmp
sub
fists
push
xchg
fdivrs
jns
mov
cmp
jne
into
sbb
push
fistpl
in
bound
imul
not
pop
mov
jno
fisubrl
jnp
test
orl
mov
dec
arpl
xchg
push
in
mov
cltd
xchg
mov
and
faddp
pop
popa
pop
aaa
in
inc
and
lea
cmp
mov
xor
and
dec
fsubl
mov
xor
push
and
and
pop
mov
mov
xor
scas
push
add
sub
cmpsb
cltd
mov
or
jb
outsl
push
cmc
inc
lahf
mov
insl
jnp
cmpb
jb
ja
mov
mov
add
fiaddl
lret
mov
mov
cli
push
lock
std
adcl
mov
sbb
pop
xchg
cmp
mov
mov
jge
sti
and
jbe
inc
lret
arpl
xchg
inc
xchg
out
jns
lea
inc
xchg
sahf
pop
cli
mov
jp
xor
ss
out
xor
sbb
pop
jl
xchg
push
mov
pushl
jae
scas
add
dec
sti
sub
jmp
mov
adc
push
pop
cmp
cmp
vrsqrtps
xchg
rcll
pushf
dec
lret
adc
pop
inc
sbb
or
lcall
mov
dec
mov
mov
stos
test
jno
mov
testb
mov
or
lods
imul
and
pop
add
idivb
and
imul
aas
loopne
jl
or
xchg
jecxz
inc
and
sahf
jle
icebp
inc
mull
mov
pop
xor
arpl
mov
mov
or
cwtl
dec
add
out
test
cli
jno
rclb
cmp
or
pop
les
dec
push
insb
mov
jno
push
call
xor
aam
push
cmp
mov
and
adc
test
mov
adc
rcrb
lea
imul
add
or
cmp
pop
ljmp
or
cmp
cmpsb
dec
fdivrl
loope
dec
imull
add
dec
pop
inc
clc
and
insl
bound
inc
lret
cmp
inc
cmp
xor
call
lcall
test
mov
or
scas
fildll
in
xchg
mov
pushf
rcl
inc
jp
sub
push
or
or
and
sub
jle
test
bnd
mov
in
mov
inc
mov
shl
push
xchg
test
adc
es
cmpsb
cwtl
repz
dec
pushf
flds
and
sti
inc
jecxz
mov
aaa
inc
inc
int
addr16
fisubs
daa
in
pushf
lahf
pmuludq
pop
mov
in
pop
xor
fptan
and
add
push
push
xlat
and
dec
ss
push
loop
jnp
jmp
xor
cwtl
jbe
loop
jl
jl
loope
jecxz,pn
lahf
jmp
int
push
add
insl
mov
pop
push
add
repz
stc
push
sbb
mov
jp
pop
aad
bsr
idivl
js
push
pusha
loop
test
jmp
repz
pusha
movsl
cmp
out
jge
test
out
leave
mov
pop
fidivl
mov
or
call
adc
dec
push
shl
mov
subb
pop
call
mov
mov
fsubr
cmc
or
lea
enter
mov
or
sub
sub
lret
pop
xlat
iret
inc
pop
das
daa
fistpl
inc
jge
fdivrp
testb
ret
ljmp
add
mov
mov
push
aas
inc
popf
cmc
dec
mov
and
fcmovu
xor
dec
xchg
add
lret
out
or
push
gs
mov
aam
adc
or
xchg
ljmp
and
sub
pop
dec
lret
push
out
and
dec
lcall
or
jle
pop
call
mov
call
into
mov
jbe
dec
mov
sub
popf
or
sbb
xor
decl
adc
and
int
adc
cmpsl
in
sarb
jle
pop
adc
xchg
adcl
push
mov
push
jecxz
xchg
inc
push
cwtl
fs
ljmp
lods
repnz
fsubr
push
insb
je
push
lret
sbb
inc
fcmovne
add
test
dec
sbb
outsb
xor
mov
sub
js
cmp
ret
or
lret
mov
pop
into
pop
mov
lret
sub
pop
fisttpl
test
mov
xor
push
pop
aas
data16
push
addr16
mov
jae
aaa
jmp
pop
pop
pushf
or
daa
testb
sub
xor
sarb
sti
out
lock
les
mov
gs
push
mov
jmp
stos
adc
push
icebp
xor
mov
cmpsb
in
hlt
inc
mov
add
orb
into
xchg
dec
movntps
push
jne
enter
jmp
and
lret
jl
and
pushl
ja
lret
into
in
loopne
inc
out
xchg
inc
sub
mov
pusha
pop
add
fisubl
pop
outsl
lock
data16
or
out
mov
push
add
mov
idiv
pop
mov
dec
repnz
xchg
mov
xor
jnp
fimull
push
jnp
test
cli
fcmovnb
outsb
scas
scas
out
mov
jno
cs
xchg
jns
or
and
inc
in
int3
lods
sub
pop
sub
test
sbb
cmp
pop
mov
jne
mov
ret
lea
stos
mov
push
sarl
and
cmp
pop
xlat
or
sub
adc
scas
add
sub
or
in
pop
xor
push
adc
pop
xchg
adcl
rcl
test
cwtl
sub
lcall
cli
cmp
cmp
out
cmp
lret
aaa
addb
jl
xchg
adc
jle
sub
add
stos
addr16
push
and
subb
fstp
imul
sbb
mov
out
fisubl
mov
test
push
add
call
js
mov
aas
inc
jne
outsl
dec
mov
push
sub
dec
fidivrs
pop
xor
and
push
mov
andb
adc
test
jno
sub
jge
adc
std
movsl
sbb
pop
pop
fildl
pop
cmp
ucomiss
cld
rorb
cwtl
mov
sub
xchg
add
dec
sbb
xor
mov
dec
rorb
addb
iret
pop
mov
and
jne
into
subl
ljmp
dec
jbe
es
mov
lds
xchg
adc
jno
xchg
inc
push
hlt
sbb
stc
in
pop
sbb
push
inc
fwait
sahf
cmp
pop
inc
scas
outsb
loop
mov
push
pop
divl
xchg
lds
sarl
sbb
push
sub
call
ds
jge
sbbl
jp
cli
push
out
sub
pushf
dec
jge
movsb
sub
sbb
pop
outsb
pushf
aaa
add
pop
cli
and
pop
pop
sahf
mov
pop
int3
outsb
std
xchg
xlat
popf
cmc
mov
xchg
cmpl
hlt
and
jo,pn
js
std
movsl
jb
rolb
pushf
pop
insb
iret
xchg
repnz
pop
sub
stos
adc
jmp
in
ljmp
lahf
insb
inc
fcmovne
ds
mov
sarb
jne
jns
dec
jns
int
mov
jne
mov
fisubl
into
pop
popa
imul
je
xor
xchg
in
aam
xchg
jo
negl
jae
sbb
mov
push
pop
loope
push
mov
aam
cmp
arpl
and
push
xchg
call
cld
dec
fucomp
sbb
pop
cmpsb
mov
stos
aad
xchg
mov
fnstsw
add
hlt
lcall
push
in
mov
push
lods
mov
mov
jno
xchg
inc
mov
xchg
aam
in
mov
mov
pop
add
xchg
inc
mul
dec
stc
and
cmc
mov
or
addl
mov
repz
cltd
adc
loop
call
lcall
out
scas
push
cld
mov
mov
fcoms
jno
je
mov
es
cmpsb
in
lea
sub
jge
pop
ds
dec
inc
jno
pop
ficoms
xor
popa
pushf
fidivrs
int3
mov
cld
repnz
rorb
loope
mov
and
pop
jo
inc
shl
pop
mov
mov
bound
addr16
inc
ficoml
pusha
sbb
or
mov
jb
in
pop
inc
pop
xchg
cwtl
popa
imul
cmp
push
pop
test
pop
les
xchg
notb
out
cmc
and
xor
cmpsb
jno
fwait
add
gs
xchg
sbb
subl
shr
mov
cmc
push
mov
call
lock
in
mov
sub
jae
add
or
pop
shlb
ljmp
mov
mov
jo
les
push
cli
adc
movl
dec
in
inc
add
lahf
jns
test
mov
sbb
or
imul
orl
push
outsl
xchg
sub
pop
sub
fcomps
jnp
inc
imulb
or
mov
mov
imul
pop
adc
jmp
aaa
xor
jne
sbb
mov
jbe
dec
mov
out
push
out
imul
lods
cmp
inc
iret
outsl
xor
repnz
int
sub
cmp
pop
xor
add
lcall
aaa
sub
arpl
in
iret
jmp
ja
adc
out
xor
fstpl
jne
lret
adc
nop
dec
repz
popf
arpl
in
add
dec
add
imul
mov
int3
mov
bound
stos
xor
jmp
jge
shll
sbb
or
loopne
inc
sbb
jmp
add
int3
mov
push
test
jno
pop
dec
into
fmull
into
and
popf
sbb
jmp
or
jno
shlb
push
ret
inc
jo
dec
add
mov
rcrl
jnp
mov
adc
cmpsw
loope
and
int
lret
mov
je
mov
in
or
addr16
adc
push
sbb
shlb
mov
push
jp
dec
filds
mov
movsl
sbb
cltd
scas
and
stc
nop
xchg
insb
mov
sub
test
inc
test
das
and
xor
push
mov
aaa
and
push
or
adc
arpl
es
xor
sbb
xor
mov
enter
push
sub
fadd
cmp
in
sbb
insl
mulb
daa
xchg
sub
loop
in
jg
pop
test
xchg
xor
mov
and
andl
std
fldpi
ret
inc
fiadds
fdivrl
cmp
and
xor
repz
cmp
clc
push
mov
mov
cltd
in
mov
shl
in
in
mov
sub
ret
jg
pop
or
test
fstl
ja
repnz
mov
mov
test
sub
scas
dec
fs
shrl
mov
sbb
adc
jecxz
bound
ret
cmp
pop
outsl
mov
xchg
mov
out
lods
xchg
dec
jns
push
sub
push
mov
pop
push
aad
mov
mov
cwtl
xor
mov
stos
xor
push
jbe
cmp
popf
notl
or
leave
icebp
push
mov
or
popa
add
testb
xor
inc
xor
loope
xchg
leave
xlat
sub
lret
hlt
inc
repz
xchg
push
pop
ds
scas
sbb
test
rorl
ljmp
push
call
sbb
loopne
mov
stos
dec
mov
jp
clc
std
push
gs
out
sub
mov
addl
nop
xor
inc
out
std
call
pop
mov
cmc
or
or
das
cmpl
outsl
loopne
fnstsw
fists
jmp
push
sbb
gs
scas
jl
fisttps
cli
dec
test
cmp
add
shlb
dec
not
rorl
push
cmpsb
bound
popa
and
or
and
scas
or
shll
std
fcom
fldenv
gs
mov
mov
xchg
sti
mov
scas
ja
sub
call
pop
push
jecxz
cmp
aaa
mov
test
cmc
js
pop
and
cmp
jecxz
add
movsl
cmp
mov
cmp
dec
sbb
rcll
je
jnp
mov
decl
in
lret
sbb
mov
rolb
js
mov
jge
push
mov
jbe
dec
pop
adc
ljmp
adc
push
xor
out
lods
in
loopne
mov
cmp
stos
add
out
out
daa
mov
call
pop
xchg
int3
jnp
rcrl
cmpsl
fwait
mov
pop
add
jns
jo
in
adc
outsl
int3
xchg
outsl
in
adc
sbb
sub
notb
mov
push
push
jns
or
aad
mov
or
insb
and
mov
repz
incb
push
fcomps
cmp
jae
xor
dec
insl
mov
adc
test
ret
shll
sbb
mov
mov
ds
ret
lock
ds
pop
pop
xor
int3
adc
call
repz
sub
in
add
xchg
inc
push
test
lock
outsl
imul
cmc
jnp
jg
mov
push
pop
cld
sti
mov
aam
ljmp
pop
inc
xchg
stos
into
lods
pop
mov
xchg
pop
sti
jg
shlb
push
push
in
xor
push
cmc
aad
xlat
inc
xchg
sbb
lahf
add
pop
jo
mov
sub
ret
pushf
jnp
int
mov
imul
mov
inc
orl
shl
sahf
add
push
mov
loop,pn
cmp
sub
xor
imul
es
mov
mov
mov
jl
mov
mov
jg
dec
xchg
jp
dec
sbb
je
mov
fs
inc
xorl
push
jns
lds
ljmp
adc
icebp
mov
adc
pop
add
ret
mov
xor
stc
inc
out
cwtl
or
jbe
and
and
leave
dec
shr
xor
dec
push
cs
mov
aaa
adc
add
adc
aam
fistps
mov
int
jae
add
sub
negb
sbb
jecxz
imul
dec
push
and
outsl
xchg
addr16
dec
fmull
clc
add
in
push
insb
mov
sbb
outsb
std
lds
pop
out
es
xchg
fldt
fs
jg
mov
in
sbb
inc
cmp
mov
cmpl
fincstp
push
test
jae
mov
test
cmp
sub
dec
mov
mov
repz
inc
lahf
inc
rcrb
js
shrl
fcoml
pop
es
or
or
into
pop
insl
push
popf
sub
xlat
xorb
pusha
pop
movsl
pop
mov
add
icebp
push
scas
cmp
fcmovne
sub
test
fdivr
js
lret
decb
mov
sub
jns
add
das
out
adc
cli
sti
mov
popa
sub
js
add
fdivrl
mov
pop
jnp
push
popf
mov
dec
mov
jns
jae
pop
movsb
fwait
jmp
cmc
mov
jp
addl
push
dec
shrb
xchg
ljmp
lds
jl
mov
stos
scas
xchg
pop
push
decb
outsb
lret
pop
icebp
sarl
sbb
mov
xor
mov
and
aas
cld
jp
fsts
jg
jns
jge
nop
xor
out
fisubrs
daa
testb
xchg
sub
stos
and
out
jnp
mov
xchg
ret
call
loope
repz
add
and
or
push
push
push
enter
jns
dec
enter
pop
cmp
xchg
lcall
sahf
push
xor
bound
and
dec
nop
jmp
es
mov
push
rol
adcl
lock
popf
mov
lcall
imul
andl
pop
sbb
sub
bnd
sbb
mov
or
loope
inc
enter
ds
mov
ss
push
pop
nop
call
test
in
cmp
lcall
xchg
or
push
call
ss
push
ffree
pop
xchg
push
mov
dec
fsubrs
xor
mov
stos
ret
push
cmp
filds
pop
cmpb
pop
fsubrl
pop
stc
mov
outsb
jg
or
sub
push
sub
rcr
rclb
out
test
push
aaa
scas
arpl
fsubrl
mov
sti
xchg
pop
or
mov
movsl
sbb
ret
jl
mov
jno
repnz
in
inc
push
add
stos
add
loopne
mov
rcll
aad
mov
sub
loope
cmp
sbb
xor
dec
cltd
push
xchg
sahf
sbb
sub
mov
seta
mov
imul
mov
rcrl
mov
aad
add
outsb
arpl
or
jle
jbe
shlb
dec
rcrl
cmp
mov
or
inc
movb
inc
in
sti
mov
inc
popf
je
mov
jmp
and
es
adc
in
cmpsb
stc
pop
jle
sbb
mov
push
cmp
add
xchg
mov
shlb
sub
ds
std
adcl
sbb
js
mov
mov
mov
pop
xor
xor
das
arpl
cwtl
adc
fcmovbe
rclb
jmp
add
mov
xor
std
sub
cmc
pusha
xchg
sbb
xchg
xor
popf
insl
stos
cwtl
les
or
mov
add
mov
mov
ljmp
mov
ret
ret
push
sub
mov
or
sbb
cltd
cmpsb
jge
dec
jbe
loope
cwtl
clc
or
cmovs
xchg
jnp
xchg
jb
jo
inc
pushl
mov
and
or
jns
xchg
cmp
sbb
jl
sti
aam
pushf
outsl
hlt
bound
ja
jb
cmp
jnp
faddl
fistps
mov
xchg
sub
pop
pop
mov
sbb
mov
mov
cmpsl
push
aaa
sti
ja
call
jae
push
movsb
jb
cmp
into
mov
je
into
xchg
mov
insb
ret
aam
pop
mov
sbb
jp
aam
ret
jne
bswap
cs
fucomi
xchg
popa
xor
loopne
mov
inc
sbb
into
mov
mov
pop
cmp
and
stos
jnp
adc
insb
stos
xchg
shrb
push
xchg
in
insb
adc
mov
and
ret
push
xchg
sbb
in
int
call
into
adc
adc
pop
outsl
xor
icebp
gs
sbb
cmpb
into
ljmp
push
and
pop
mov
test
imul
call
mov
scas
add
mov
in
mov
xchg
in
xor
xor
xor
fildll
mov
sub
hlt
pop
out
popa
mov
test
lcall
push
jp
outsl
mov
cmc
outsb
mov
dec
and
gs
add
mov
stos
pop
std
add
or
sub
sarl
and
das
mov
add
mov
and
cmp
popf
sbb
icebp
enter
fistps
xor
test
je
movsl
push
sahf
fmull
adc
adc
mov
jle
stos
test
fsub
daa
pop
mov
push
xchg
adc
mov
push
inc
sbb
mov
jg
sub
xchg
sbb
jno
or
dec
leave
fwait
movsl
es
filds
mov
add
add
xor
in
and
xchg
fidivs
test
aas
les
cwtl
das
xchg
aas
dec
lret
or
dec
loope
mov
mov
cmp
loope
cmp
jne
xchg
stos
mov
xor
xchg
cmp
lods
sub
call
aas
cmc
test
fdivrl
outsb
add
adc
enter
lods
fldt
pop
idivl
mov
movsl
lock
push
dec
fisttpll
ljmp
xor
pop
inc
popa
adc
xchg
out
mov
lcall
sbb
pop
popl
mul
and
adc
mov
rorl
and
rorb
subb
pmulhuw
xor
imul
test
cmp
sub
test
mov
ljmp
ds
jo
and
movsb
lahf
negb
jne
popa
in
mov
bound
fwait
fs
shll
xchg
in
fildll
and
popl
fistpll
mov
fxch
inc
dec
or
adc
xor
sub
lret
sbb
fnsave
sub
cmp
mov
loop
das
sub
insl
mov
clc
cs
push
lods
sub
inc
sub
das
mov
std
jo
cmp
and
std
jg
jne
xchg
or
xlat
mov
loopne
scas
fwait
cltd
cmp
cmp
jle
pop
mov
lret
jbe
add
movsl
fwait
cmpsl
andb
lahf
jo
mov
mov
out
fwait
jae
push
test
enter
out
movsb
xor
sub
and
insb
bound
push
add
hlt
cmp
imul
lea
test
mov
das
pop
adc
xor
jle
lret
jne
cmp
mov
add
lret
dec
cwtl
dec
lea
mov
ret
mov
bound
mov
testl
pop
fcmovnb
inc
mov
sti
mov
int
or
lock
jns
sbbl
testb
int
dec
clc
insb
dec
loop
lock
sub
ret
jp
cmp
pop
idivl
push
dec
jp
cmp
fs
cld
cli
stos
xchg
dec
cld
in
fisubrs
push
mov
mov
cmpb
xchg
das
cmpsl
xor
icebp
andl
out
mov
cltd
mov
pop
mov
in
iret
push
cwtl
movb
nop
mov
jle
dec
jb
imul
test
fcompl
scas
cmp
out
pop
cmp
ret
ljmp
dec
std
mov
mov
mov
test
hlt
dec
into
mov
pop
push
aas
lock
mov
push
push
adcl
cwtl
pop
test
jae
outsl
cs
jge
mov
push
pop
or
cmp
mov
mov
in
and
notl
rcr
out
mov
outsl
cmp
cwtl
push
add
add
xorb
ret
mov
sub
imul
inc
or
lar
sub
push
rolb
pop
std
dec
xchg
scas
and
insb
cmp
int3
dec
repz
cmp
cmc
push
jae
jp
or
sub
mov
bound
adc
dec
fdivr
xor
sub
sarl
dec
inc
and
int3
dec
fwait
mov
test
jae
sub
les
out
push
lcall
movb
mov
imul
xchg
lret
daa
insb
xchg
bound
xor
into
pop
in
sbb
pop
or
mov
push
cli
fsubs
cmpsl
jns
dec
and
mov
or
sti
lret
nop
lret
rorb
xor
das
add
fldcw
inc
mov
inc
xchg
pop
insb
das
xor
in
mov
mov
addr16
subl
mov
jbe
dec
adc
imul
out
sti
adc
cmpsb
out
jb
cld
jge
xchg
scas
in
fisubs
cmp
in
lods
cltd
sbb
lock
loope
pop
out
out
mov
inc
loopne
jnp
xlat
mov
fiadds
movsb
loopne
fimuls
xor
push
fst
jge
lock
cwtl
jp
js
sbb
es
xor
push
jl,pt
jb
mov
jno
sbbb
mov
cld
aas
push
stos
xor
push
lods
mov
sub
jge
ficoms
jb
lds
mov
inc
mov
jg
rdmsr
push
gs
or
dec
sbb
push
cmpsb
jnp
aaa
pop
loopne,pt
in
sbb
inc
cld
fidivs
mov
xchg
repz
out
lods
faddl
cmpsl
lret
jbe
xchg
jae
inc
sbb
imul
cs
jecxz
or
les
xchg
fstp
rorb
add
in
jae
xchg
xchg
addr16
lret
lret
jecxz
pushf
mov
insl
rorb
test
mov
mov
test
inc
aam
lret
leave
in
xchg
gs
xchg
mov
out
shl
push
and
mov
mov
aam
movsb
pop
jmp
jl
stos
pushf
ljmp
mov
rorb
stc
cmp
fs
sub
leave
ljmp
enter
scas
ljmp
inc
sub
cs
dec
nop
sar
call
jbe
loope
jbe
inc
mov
inc
mov
mov
add
adc
daa
ret
mov
iret
pop
aam
sbb
arpl
outsb
and
xor
lea
fidivrs
cmc
mov
inc
ss
or
rcrb
mov
arpl
std
testb
lods
mov
pop
push
les
stos
mov
xchg
in
enter
or
push
cltd
scas
dec
ret
jns
fcomi
mov
push
jecxz
popa
sbb
dec
ftst
mov
out
aam
sub
mov
aas
jle
arpl
xor
in
push
iret
outsl
sbb
adc
shll
and
mul
inc
fisttpl
ret
inc
jbe
into
jle
rorb
into
jne
pushf
jle
push
sbb
sub
adc
lods
pop
sub
lock
or
sahf
inc
and
lods
insl
push
enter
fdivs
les
inc
das
mov
sbb
dec
shr
aam
dec
iret
sbb
js
push
sbb
repz
xchg
and
mov
lods
push
sbb
mov
sub
out
jmp
inc
in
dec
ljmp
xchg
rol
mov
sbb
rclb
dec
jo
inc
aaa
imul
stos
cmpsl
out
mov
lock
lods
std
lret
addps
mov
in
xor
pop
test
lods
xor
in
negl
push
xor
jg
mov
lods
sub
nop
sub
aas
test
leave
ds
push
mov
lock
jo
clc
cmp
or
push
loop
lcall
orb
jg
lea
mov
dec
fnsave
mov
notl
shrl
hlt
lret
push
sub
lock
cmp
mov
and
cmp
iret
xor
mov
inc
les
inc
rorb
push
jb
add
and
dec
inc
ss
fnstcw
sub
fsubr
std
iret
mov
fxch
mov
push
ljmp
jnp
jge
scas
mov
xchg
dec
mov
inc
sarl
add
movb
push
test
cs
push
insl
lret
push
fucomp
cmpb
xor
mov
adc
add
lds
pop
pop
in
das
out
mov
sbb
cld
cmpsb
loopne
lcall
aam
mov
hlt
pop
lcall
mov
push
lret
nop
inc
dec
and
jnp
aad
adc
imul
and
pop
outsb
mov
xor
ret
leave
sbb
test
mov
insl
mov
adc
dec
xchg
jb
pop
adc
gs
inc
push
push
inc
sub
and
adc
cwtl
cltd
mov
andl
xor
or
sub
pop
sti
stos
orb
ret
fstpl
jns
daa
inc
xchg
dec
push
sbb
mov
push
sbb
sbb
int3
and
sbb
enter
int3
aaa
ret
pushl
cmpsl
cmpb
or
push
clc
ret
or
inc
test
sub
add
jnp
mov
test
push
and
out
stos
cwtl
jno
out
mov
push
mov
cmp
xchg
inc
pop
fidivrs
push
bound
stos
adc
inc
or
sti
cmpsb
rorl
movsl
cmp
dec
lcall
fmull
ljmp
repnz
sub
mov
aaa
push
cs
xor
mov
push
adc
inc
lcall
mov
push
call
push
arpl
or
xchg
xchg
pop
inc
mov
cmp
mov
sbb
xor
imul
xchg
jnp
fs
fcompl
xor
push
mov
insl
adc
jae
mov
jp
pop
pop
ret
xchg
repz
ljmp
gs
hlt
sub
and
xchg
inc
adc
les
inc
inc
jbe
mov
xchg
xlat
inc
mov
stc
test
leave
loop
push
movsl
mov
cmp
sarb
mov
dec
call
xor
fwait
dec
xor
fnstcw
dec
and
loop
sub
in
sub
rep
mov
mov
fsubl
inc
pop
jbe
aad
dec
cmc
push
adc
inc
xor
and
inc
sbb
jbe
ss
or
mov
push
sub
gs
mov
fdivl
loop,pn
arpl
push
xor
gs
movb
push
inc
adc
imul
mov
sub
inc
sarb
or
lcall
xchg
ljmp
jnp
xchg
in
adc
stos
add
add
add
jmp
dec
sbb
scas
inc
cmp
les
fld
imul
jb
or
cmpsl
lahf
pop
iret
pop
mov
sbb
leave
cltd
xchg
out
jb
mov
outsl
insl
jo
fs
inc
push
ds
xor
into
push
cs
icebp
mov
jg
mov
getsec
inc
xor
ljmp
cli
movsb
daa
dec
cld
xchg
jmp
fldenv
adc
stos
lahf
jecxz
pop
cwtl
sub
jnp
fsubr
shr
rcrb
jnp
or
les
in
jmp
or
fnsave
xorl
lcall
loop
mov
xchg
mov
test
xchg
stos
insl
roll
push
add
inc
sbb
or
test
inc
push
mov
out
mov
jmp
jae
add
lods
repz
test
cmp
and
or
pop
iret
imul
insl
aas
stc
outsb
add
xchg
movsb
lahf
cmpsb
mov
cmp
jne
iret
push
mov
lcall
mov
push
cmc
popf
jne
fwait
adc
rcrl
je
mov
icebp
jne
cmc
pop
jbe
sub
dec
xor
cwtl
pop
push
adc
into
sti
fdivr
jno
lock
ds
inc
in
loope
ss
sub
xchg
push
add
lea
xchg
mov
fcompl
push
imul
add
fiadds
adc
jmp
testb
sub
mov
out
pop
inc
adc
outsl
dec
fcoml
jp
out
lods
push
stos
xorb
mov
push
sub
inc
cmp
leave
lds
icebp
push
fcmove
jnp
jle
mov
iret
mov
push
mov
xchg
push
aad
lcall
mov
movsb
sbb
sub
movsl
sub
mov
test
stos
aad
add
sub
jb
pop
pop
sti
cmp
mov
out
or
push
imul
lock
pop
xchg
loop
insb
jmp
or
adc
pop
setbe
sbb
adc
lods
jp
sbb
sahf
adcb
call
test
lods
nop
test
push
xchg
cld
std
icebp
out
addb
sti
adc
push
cmp
ret
xchg
jno
adc
dec
pop
imul
lds
pop
out
ss
mov
or
or
aad
outsb
dec
xchg
pop
out
lock
enter
mov
fiadds
sub
mov
addb
out
ret
inc
ss
rorl
inc
add
mov
out
sahf
loop
bound
inc
jns
test
mov
adc
popa
pop
push
adc
mov
repnz
or
sti
push
cld
sub
push
imul
adcl
mov
test
out
mov
in
pop
fs
mov
add
cmpl
je
ret
jae
aam
call
stc
cmp
pop
stc
sbb
dec
inc
sbb
sbb
cwtl
push
in
push
int3
pop
push
stc
sbb
push
sbb
push
cli
add
sbb
test
out
fnstsw
adc
add
cwtl
cld
sub
xchg
imul
in
loop
inc
pop
sub
cmp
sbb
aam
push
arpl
out
push
lret
and
dec
sub
push
xor
mov
imulb
pop
scas
clc
mov
xchg
pushw
aad
mov
ja
mov
push
rol
cmc
iret
xchg
xchg
push
mov
adc
push
test
lahf
dec
sbb
xlat
mov
jg
mov
mov
hlt
xor
je
mov
or
ret
add
fiadds
pop
push
mov
adc
xchg
bound
in
pop
jmp
sub
popl
loope
sbb
jo
mov
mov
push
pop
loopne
pusha
mov
or
insl
sbb
pop
hlt
sbb
pop
test
ficomps
lret
add
sbb
jmp
mov
jmp
hlt
dec
jg
dec
data16
fisubl
pop
pop
push
or
jmp
cmp
cmp
hlt
jl
xchg
shlb
jecxz
mov
das
mov
dec
inc
fsubr
mov
cmp
or
das
rcrb
leave
scas
out
lock
cmc
sub
dec
leave
mov
cmpsb
xchg
push
in
test
mov
inc
ret
ret
pop
stos
lcall
mov
test
ljmp
xor
js
mov
cmp
push
cmp
int3
dec
dec
sub
sub
ret
jbe
shlb
and
jge
mov
in
lds
fwait
add
dec
xor
inc
pop
test
div
or
pop
push
sub
in
jl
and
push
in
aad
xor
push
cmp
or
mov
add
sub
mov
cmpb
add
jge
cmc
cmpsb
test
xchg
pushf
nop
lcall
lret
or
cli
nop
outsb
mov
lea
pop
push
dec
sbb
add
lods
lock
dec
test
and
cmp
ja
pop
sub
fcoms
mov
adc
pop
mov
jmp
ret
outsl
fidivs
mov
scas
lahf
jle
rcrl
add
mul
loop
rcrl
cmp
movsl
or
sbb
aad
or
insl
loop
repz
jmp
or
jg
mov
bound
mov
jns
fnstcw
pop
cmp
xlat
sub
pop
jge
dec
push
imul
sub
and
or
insl
pop
add
ret
push
mov
xchg
repz
call
or
out
xor
orb
mov
fsubrl
xchg
push
jg
mov
addr16
lds
iret
insl
stos
sub
test
cmp
js
jecxz
cmc
fbstp
mov
dec
xchg
mov
push
das
ss
fs
mov
data16
aam
lds
pop
cmp
cli
in
sbb
sti
mov
shld
idiv
push
mov
scas
xchg
sub
cmpsl
mov
mov
int3
xor
scas
mov
repz
std
dec
adc
cld
add
enter
dec
out
jg
lds
cs
cmp
jnp
gs
mov
push
inc
inc
jp
mov
hlt
jge
mov
jp
or
movsl
sarb
jp
adc
popa
xor
int3
mov
push
adc
mov
in
out
fiaddl
aam
jae
xchg
and
jle
popa
fwait
xor
xchg
mov
ret
sarb
loop
repnz
mov
out
sub
add
lcall
ss
fdivrp
movsl
ret
jecxz
popa
inc
mov
sbb
das
lock
fsubl
cmp
loop
call
popf
ret
fwait
mov
adc
mov
in
cmp
dec
lea
in
sti
outsb
and
cld
ds
lcall
imul
out
repz
pop
push
push
adc
sbb
mov
push
rorl
leave
cmp
mov
and
push
fs
sub
jbe
or
jecxz
pop
lahf
lock
adc
cmp
int
insl
imul
sub
jmp
movsb
scas
and
pop
inc
fadds
ds
xor
push
test
or
xchg
push
cmpsb
jmp
repz
dec
scas
je
inc
or
aad
call
aas
xor
sbb
adc
push
clc
push
ret
add
inc
andb
dec
pop
lahf
inc
fld1
add
mov
outsb
loope
divb
cmp
jmp
aaa
stos
in
std
gs
push
cmp
mov
push
fnstsw
adc
jne
cmpsb
dec
dec
inc
pop
add
or
sbb
adc
call
roll
cmc
std
js,pt
mov
adc
pop
jae
arpl
mov
addr16
inc
xor
push
jecxz
dec
popf
and
roll
add
fimuls
fstps
cmpl
jecxz
popf
and
lods
fucom
adc
lds
cwtl
shll
out
incb
add
jge
adc
popf
cmp
in
push
jns
dec
jno
call
pop
and
das
testl
std
and
and
add
xor
jo
pop
xor
arpl
add
mov
out
cld
add
mov
adc
mov
add
and
ret
je
lock
fldenv
sbb
outsl
popa
cmp
or
mov
sbbl
jp
pop
jecxz
cmp
adc
fs
pop
das
aaa
test
test
mov
sbb
lods
aaa
xchg
iret
bswap
jle
push
pop
out
mov
jecxz
sbb
pop
pop
sbb
pop
push
jl,pt
lds
es
ljmp
or
jp
cmp
mov
adc
negl
sbb
mov
int3
pop
fistl
mov
mov
arpl
pop
pushl
jns
ret
ret
mov
jg
xor
jl
push
mov
or
jns
addl
inc
or
sub
cs
fldl
fchs
fistpll
adc
jno
inc
dec
dec
sub
popf
jnp
fs
ret
pop
add
rorl
ret
je
ret
bound
call
outsb
xchg
lds
jbe
shrl
out
fcom
fisubl
imul
das
mov
xchg
mov
mov
push
lret
add
cmp
les
stos
arpl
cmpsb
push
dec
leave
jle
int3
sti
hlt
and
outsw
pop
sbb
orb
call
inc
xor
jl
aaa
jl
cmp
jnp
rol
add
push
cltd
push
inc
or
xchg
bound
cmp
dec
mov
sbb
mov
mov
imul
test
jne
push
sub
sub
and
aam
add
cmp
jg
rcrb
pop
popa
adcl
bnd
or
incb
pop
or
sbbl
fidivl
inc
mov
jg
sub
out
cmpsl
mov
jg
or
adc
inc
push
popf
xchg
mov
les
fs
add
aad
popa
fisttps
or
pushf
movsl
ds
mov
xlat
in
rcrb
jmp
scas
stos
mov
popa
add
sub
xor
dec
in
xorb
popf
popf
out
xor
into
cmpsl
mov
xor
xchg
pop
out
out
xchg
mov
ficoms
in
adc
mov
mov
ss
sbb
addb
xchg
lret
mov
loop
fisubl
push
sub
push
jne
mov
mov
cmp
sub
add
or
scas
dec
out
sub
dec
mov
nop
xor
int
jmp
cmpsl
push
lods
dec
push
lods
xchg
fwait
aam
mov
loopne
loope
mov
and
mov
outsb
js
pop
and
mov
xchg
lock
popa
add
xor
mov
fwait
sub
jl
xchg
sahf
sti
pop
pop
dec
push
mov
int3
pop
out
lods
mov
mov
lret
cmp
xor
jns
pop
hlt
jns
mov
clc
movsl
in
push
cmp
sub
jle
dec
lock
inc
sbbl
pusha
dec
push
inc
pop
mov
xchg
stos
push
pop
xchg
jnp
js
mov
into
push
push
popa
loopne
inc
cmp
stc
mov
out
mov
sbb
out
loope
xchg
inc
mov
sbb
in
xchg
ret
jne
loopne
cmp
inc
xor
dec
aad
push
nop
pop
loope
icebp
movsb
popa
gs
test
mov
pusha
inc
cmp
pusha
ljmp
cli
repz
mov
jge
sub
push
dec
pop
dec
mov
add
push
pusha
add
arpl
lahf
mov
sub
jmp
ret
inc
mov
roll
mov
in
xchg
movsl
aam
cli
fisubs
sub
lcall
dec
loopne
lret
fstl
jns
lds
lods
scas
mov
aad
int
cmp
iret
shlb
cwtl
jp
shlb
adc
jmp
jp
inc
add
xor
push
ja
js
add
scas
xchg
cmp
jnp
xchg
ja
mov
jmp
test
inc
dec
popf
ja
dec
push
cmp
out
iret
pop
inc
jae
daa
cmp
orl
xchg
sbb
mov
xlat
fmull
in
lcall
dec
cmpsb
adc
jbe
jmp
lds
push
loop
or
pop
inc
xor
xchg
sub
loopne
aaa
int3
add
jbe
lock
jle
incb
push
ss
out
xor
in
loopne
cmpsl
xor
pop
lret
jge
jecxz
out
bswap
mov
imul
pop
jge
popf
leave
push
mov
pop
into
in
cs
mov
and
push
dec
jle
add
aas
outsb
mov
inc
sub
aas
xchg
nop
xchg
stos
xchg
sub
push
add
js
adc
sub
sbb
test
pop
in
push
sub
jo
cld
push
imul
and
cmp
les
fbld
or
lods
push
inc
sub
ss
sbb
lds
adc
rcrl
jb
fs
add
clc
or
or
jle
mov
ret
add
pop
jecxz
jne
mov
mov
shr
pop
rolb
sbb
imul
inc
mov
dec
dec
mov
ret
mov
cmpsb
push
hlt
out
ljmp
add
test
loopne
imulb
mov
daa
mov
fiadds
bound
xchg
pop
jo
and
dec
jp
cmp
cmp
fwait
add
cli
xchg
je
mov
popf
iret
xchg
pop
iret
bound
or
push
xchg
jle
push
mov
rolb
sub
mov
stc
and
adc
shrl
aad
stos
or
ljmp
pop
pop
out
cwtl
inc
sahf
fsubl
lds
orl
pop
mov
push
testb
pushf
fadd
xlat
adc
in
push
in
outsb
aam
aaa
sbb
cmp
jmp
rol
jbe
inc
jbe
xchg
loopne
dec
loopne
les
sub
js
xchg
test
mov
outsb
mov
outsb
imul
cmp
insb
hlt
shlb
call
ficomps
in
jl
data16
pop
dec
adc
pop
mov
inc
cmp
jbe
mov
int3
mov
movsb
or
mov
mov
jecxz
cltd
inc
pop
push
pushf
aas
jmp
mov
lcall
adc
jbe
enter
and
adc
andl
movsl
mov
jp
das
in
push
cmp
dec
lea
loop
jno
jnp
lods
mov
test
sub
pop
in
data16
cmp
cmp
aad
xor
hlt
jbe
test
loope
imul
sub
iret
ja
test
mov
xor
xor
in
lahf
mov
lods
add
jle,pn
sahf
xor
pop
xchg
push
pop
and
mov
pop
aaa
mov
sarb
inc
aam
out
scas
mov
outsl
cmp
sub
and
jno
mov
roll
cmp
push
xchg
pop
mov
testl
xchg
iret
mov
mov
and
or
sbb
fldcw
and
cmp
rolb
or
mov
xchg
cmp
pusha
icebp
mov
into
enter
out
stos
mov
lahf
mov
pop
dec
and
nop
in
adcl
push
movsb
inc
mov
push
and
jge
sbb
jg
xchg
mov
adc
popa
dec
mov
enter
lret
loop
popa
mov
sub
test
sti
fmuls
movsl
xchg
in
adc
push
data16
fbstp
dec
jae
mov
sub
xlat
add
jle
inc
xor
sarl
repnz
iret
scas
daa
sbb
cmpsl
mov
leave
stos
mov
push
xchg
and
fmull
mov
xorl
in
mov
out
xchg
jle
push
adc
pop
sarb
js
inc
cmp
xor
or
leave
push
mov
sub
cmp
int
inc
sti
fs
pop
movups
call
pusha
adc
rorl
insb
out
mov
sub
or
ret
fmulp
int
mov
cmp
cld
pop
into
mov
cmp
mov
loop
adc
or
divb
in
sbb
sub
mov
out
hlt
push
inc
pop
movsl
dec
lahf
hlt
mov
dec
shl
xlat
in
clc
arpl
data16
fwait
aaa
and
pop
mul
insl
test
mov
lds
test
jae
xchg
stos
mov
es
or
xor
cmp
lds
inc
or
sub
jecxz
out
xor
lcall
mov
pushf
mov
cli
test
mov
sub
push
jo
outsb
xchg
jo
pop
loop
stos
in
in
sbb
mov
fsts
push
adc
inc
sbb
jl
push
lock
fwait
xchg
or
hlt
mov
mov
add
mov
add
push
xor
push
shll
negl
jge
jb
mov
inc
jg
xor
or
cmpsb
movsl
filds
pop
mov
call
bound
adc
jnp
sub
leave
xchg
rorb
and
inc
pop
xlat
mov
push
loope
cmpsb
or
xchg
movsl
ds
xchg
jae
or
sarb
xchg
aad
jno
mov
fisubrl
das
adc
es
mov
bound
out
jp
call
leave
sub
push
mov
add
stos
test
ficomps
sbb
lcall
call
mov
push
incb
arpl
nop
xchg
pop
hlt
push
rolb
fmul
sbb
cmc
jb
dec
nop
sbb
push
jp
cwtl
mov
sahf
dec
adc
push
cmc
mov
pop
sbb
fildl
imul
daa
mov
push
xchg
mov
ror
shrb
ljmp
mov
decl
mov
jecxz
mov
lcall
xchg
lahf
push
pop
xchg
outsb
add
shlb
scas
rol
fs
or
idivl
sub
sbb
loop
dec
xchg
jne
or
and
jge
mov
popf
adc
inc
insb
shrb
dec
cwtl
data16
das
pop
enter
mov
in
rolb
jne
dec
sbb
fistpl
push
call
es
push
push
and
sub
xor
push
sub
push
and
orb
and
adc
sub
push
dec
or
outsl
ss
mov
xchg
insb
dec
dec
in
xor
adc
daa
push
movsl
insb
fwait
outsl
mov
add
sub
pop
loopne
or
dec
fcompl
mov
les
mov
xchg
pusha
push
fmul
sbb
cltd
mov
inc
sbbb
adc
sbb
add
xchg
shlb
es
mov
setb
jno
js
out
pushf
jecxz
jmp
outsb
dec
call
xchg
push
dec
lock
jle
cs
sti
mov
sub
testb
cmp
jnp
push
insl
test
pop
loope
inc
loopne
clc
sub
inc
xchg
xchg
fcmovnb
cmp
mov
icebp
xchg
add
test
add
popa
sahf
xor
pusha
sbb
push
cli
cli
jb
mov
fstpt
jb
jp
mov
in
pop
mov
xchg
ja
mov
mov
add
xchg
scas
mov
mov
push
add
xor
cmp
inc
push
jle
cmpsb
test
jno
pop
pop
and
cmp
loopne
pop
mov
cmpb
lret
sub
mov
jge
inc
mov
fisubl
sahf
ljmp
cli
ss
pop
dec
or
add
cmp
lds
jg
cmp
sub
aam
data16
pop
out
cmpsb
cwtl
xlat
xchg
subl
xor
in
and
fs
nop
jb
jnp
add
cmp
loope
cltd
test
and
sahf
je
push
insl
lcall
insb
or
imull
sub
lods
cs
push
push
lea
pop
sub
jecxz
push
dec
adc
cld
loop
fs
sbb
xchg
in
or
mov
fiadds
sbb
popl
jle
mov
dec
dec
int
and
repz
and
call
call
pop
es
fcomps
pusha
out
stos
dec
inc
pop
cmp
dec
test
insl
jmp
aaa
jle
add
out
repnz
mov
dec
mov
scas
lds
nop
push
shlb
in
int3
push
sti
mov
push
xor
sbb
mov
xlat
clc
repz
jp
jl
fwait
in
iret
xor
fs
out
rcrb
je
lret
test
lret
mov
iret
push
mov
sbb
aad
aas
test
fcmovne
cwtl
push
sub
pop
lcall
daa
cmpsl
in
out
mov
frstor
lods
les
movsb
and
aaa
add
mov
pop
or
divl
and
pop
loopne
xor
pop
adc
mov
dec
jmp
pop
xor
pop
stos
adc
sbb
js
inc
ficomps
mov
sub
pop
ror
stc
hlt
sbb
xchg
popf
cmp
or
push
mov
mov
imul
flds
and
xchg
addr16
cwtl
fwait
pushf
repnz
pushf
cmp
insb
rolb
jae
movsb
cmp
jle
push
lcall
lahf
mov
fs
pop
lcall
test
inc
outsb
add
outsl
pop
mov
scas
jmp
stc
test
ljmp
push
cmc
ret
int
std
add
pop
xor
push
cmp
dec
and
push
sub
pop
hlt
mov
cmp
mov
mov
les
insb
dec
pop
push
ret
pop
pop
pop
push
mov
mov
outsb
test
jnp
xor
out
sub
pop
xor
mov
xor
mov
sbb
gs
dec
cmpl
mov
cld
push
dec
stos
add
jmp
mov
dec
ret
scas
xchg
adc
pushf
add
sub
je
test
jg
aam
pop
std
jnp
sbb
jmp
out
or
dec
xchg
stc
mov
cltd
ss
movsl
test
shlb
dec
xchg
fsubrs
dec
xchg
mov
xchg
ds
jmp
xchg
fdivrl
cmp
cld
ret
ss
add
push
and
daa
iret
jg
ret
pop
dec
push
and
inc
and
mov
nop
sub
mov
ljmp
lea
and
sbb
les
add
jecxz
mov
stc
arpl
jbe
or
xchg
xor
scas
imulb
cmpsl
test
push
loopne
jnp
imul
mov
mov
int3
mov
inc
cltd
or
int3
xchg
mov
jno
sbb
aas
insl
jmp
loop
fs
mov
inc
mov
cmpsl
jo
pop
les
fldt
js
pop
clc
jne
cmpsb
xor
push
adc
jl
popf
xchg
lods
mov
jno
push
fnstenv
subb
cmp
negb
in
aam
dec
fildll
mov
in
pop
imul
test
es
imul
jmp
or
insl
lods
inc
nop
fmull
stos
ljmp
adc
dec
xor
arpl
pop
adc
repnz
loope
sbb
push
in
mov
dec
je
jae
ret
sub
gs
fstps
ss
outsl
sti
insb
mov
jmp
je
cmp
xchg
aaa
nop
pop
or
scas
lock
adc
jb
sahf
jae
stos
jmp
jle
sarl
in
mov
push
xchg
mov
ja
imul
inc
inc
lret
sbb
pcmpeqb
fwait
mov
fadd
loopne
and
mov
or
fs
insl
xlat
dec
lea
push
cmpsl
sub
push
in
pop
fwait
arpl
mov
ret
lods
insl
sbb
lods
rorl
test
jne
cmp
dec
xchg
push
push
inc
cli
ret
rolb
ja
push
push
fidivrl
push
adc
xor
fwait
ret
call
xor
jns
sbb
cs
sarl
xor
out
addr16
enter
adc
cmp
int3
inc
adc
inc
xor
dec
fs
sub
add
adc
fsubr
sbb
mov
mov
repnz
arpl
lret
movsl
stc
sub
mov
fidivl
cmc
or
bound
sbb
push
xchg
and
test
push
rcr
cli
pop
je
mov
pop
and
mov
ja
jo
outsl
hlt
popa
jecxz
xor
and
inc
aaa
stc
lock
ficoml
jb
pop
repz
inc
lret
daa
movsl
inc
in
bound
not
je
adc
add
jmp
mov
pusha
sbb
xor
mov
push
data16
fisttpl
es
jae
mov
clc
push
mov
jecxz
je
popa
mov
dec
sub
mov
push
addr16
lret
adc
in
sti
mov
rclb
pop
fdivs
shlb
mov
sub
jp
adc
dec
ret
dec
xchg
sub
lock
in
mov
mov
stos
flds
loopne
cmpsb
cli
fsubr
daa
pusha
data16
getsec
aam
daa
les
and
mov
push
pop
loop,pn
or
jl
call
or
mov
lds
mov
mov
xlat
subl
dec
sbb
mov
movsl
cli
pop
or
shll
dec
jnp
outsb
inc
push
fwait
ds
inc
pop
lds
jmp
aas
push
dec
pop
inc
jae
int3
cmc
jns
adc
loopne
cs
testb
sbb
and
test
xchg
xchg
mov
punpckhdq
leave
jle
sbbb
je
loopne
test
ljmp
popf
sbb
jo
sub
into
cs
mov
ljmp
push
sub
jle
pop
fidivs
stos
gs
hlt
push
divb
xchg
les
sub
xchg
cs
mov
push
cmp
cwtl
cltd
fdivl
add
mov
bound
fcompl
xlat
pop
insb
ror
xchg
movsl
popa
jge
sahf
gs
cmc
addr16
fidivrl
rorb
mov
dec
es
hlt
or
loope
xchg
fmulp
jp
ja
jb
loopne
call
rorl
pop
imull
test
xlat
add
xchg
jne
cltd
dec
sbb
dec
cmp
icebp
cmpsl
jnp
bound
sub
push
inc
fisttpll
or
xchg
cli
fdivp
and
lret
cli
push
in
mov
mov
adc
adc
push
loopne
cmpsl
scas
mov
dec
dec
out
push
or
icebp
pop
fisttps
sub
add
add
in
and
fwait
or
cmp
test
cltd
xchg
adc
rolb
sub
xor
mov
xor
int
pop
jg
arpl
sbb
mov
mov
es
cmp
pop
sub
dec
xchg
rep
outsb
adc
ss
and
lea
imul
lahf
inc
xor
jo
repnz
mov
in
push
mov
outsb
aas
push
pusha
ret
dec
sbb
rolb
sbb
fwait
jne
sbbl
imul
add
dec
out
mov
mov
ja
add
adc
fisttpll
jne
xchg
test
adc
cmp
scas
sbb
les
aas
dec
sbb
int3
stc
sbb
out
inc
fldcw
adc
pop
das
sub
adc
pusha
arpl
mov
push
pop
xchg
shrl
stc
popw
call
lods
test
in
aam
adc
jbe
into
dec
lahf
sti
inc
mov
mov
push
cmp
sub
lea
pop
push
mov
inc
ds
and
inc
mov
pop
outsb
daa
test
jecxz
jle
and
mov
or
loope
cmp
add
jge
or
add
popf
xchg
add
mov
jno
into
and
fwait
stos
fs
into
lret
push
cs
adc
dec
or
lock
xchg
aad
cli
mov
divb
push
icebp
pavgw
movsb
fistl
mov
call
jb
test
negb
adcl
enter
cmp
inc
clc
push
jne
dec
cmp
jae
icebp
inc
or
cs
js
loope
addr16
dec
or
cmp
mul
ja
cmp
lods
push
pusha
mov
sub
inc
data16
in
mov
std
push
mov
imul
scas
iret
inc
clc
inc
and
das
loope
pop
xor
xchg
cmp
orw
push
mov
in
scas
pushf
test
repnz
fstl
adc
fcomps
outsb
lcall
add
aad
push
push
xchg
ud0
out
push
and
in
pop
aad
loop
pushf
xchg
mov
jmp
mov
jecxz
mov
dec
les
hlt
or
vucomiss
in
or
cmpsl
jp
inc
mov
mov
mov
imul
lock
fstps
shlb
xchg
cmc
and
cmp
je
in
sarb
scas
shll
stc
mov
shl
jge
mov
push
stos
push
push
gs
fldenv
jle
data16
pop
add
das
pop
adc
sub
lock
ret
lcall
xchg
adc
push
push
fs
mov
int
adc
shrb
sub
push
sub
mov
inc
push
out
lea
ljmp
dec
or
sbb
add
cmpsl
sbb
ja
ret
hlt
pop
subps
lahf
subb
out
sub
adc
dec
jnp
xlat
sbb
call
xor
sub
pop
jp
jmp
jecxz
movsb
mov
jae
jge
lods
xor
out
out
lods
pop
pop
ss
pop
pop
movsl
dec
dec
jmp
out
scas
cmpb
ljmp
mov
vxorps
aad
and
je
push
sbb
add
xor
data16
mov
inc
mov
js
fnstsw
movsl
cmc
or
or
lahf
idivl
shll
leave
and
mov
in
imull
dec
or
cs
sub
push
pop
out
pop
cmpl
or
jmp
jmp
cmp
add
mov
push
repz
hlt
jbe
in
dec
mov
jmp
push
movsb
push
daa
cs
fldenv
sbb
xor
ret
cmp
xlat
aad
dec
mov
call
or
adc
cmp
ljmp
sbb
mov
xor
xor
jae
movb
inc
push
and
dec
dec
jmp
sub
pop
jg
push
addr16
insb
cli
push
xchg
lods
insb
inc
add
push
mov
pop
pushf
pop
jge
dec
pop
inc
mov
leave
dec
add
je
adc
pop
sahf
loop
xor
pop
shlb
adc
test
xchg
repnz
popa
xlat
jge
lahf
jnp
add
scas
rcrl
mov
mov
mov
lcall
add
xchg
nop
cmp
in
fcoml
mov
dec
rolb
jge
dec
xor
mov
leave
ret
jne
lods
push
xchg
xchg
add
cmp
push
mov
ljmp
test
mov
aam
sub
push
nop
mov
pop
cmp
jge
ljmp
aad
mov
mov
cltd
leave
or
mov
pop
cmpsb
adc
jo
adc
cmp
iret
cmc
jae
or
mov
arpl
fwait
shlb
push
jbe
pop
xchg
in
std
movsb
into
dec
leave
insb
fs
bound
add
mov
sahf
mov
push
mov
mov
jl
inc
inc
dec
movb
dec
sub
test
xor
add
lret
inc
sbb
mov
insl
inc
and
imul
repz
aam
cld
pop
jecxz
sub
cltd
into
cmp
adc
lock
aas
loope
and
nop
out
lock
mov
daa
or
and
sub
inc
xchg
fld
hlt
and
loop
and
loop
jmp
xor
leave
in
add
or
sub
in
aaa
pop
iret
push
xor
push
fidivrs
xchg
insl
sbb
js
pop
pusha
cmp
fdiv
push
mov
sahf
and
mov
sti
mov
mov
push
imul
mov
lcall
sti
dec
fimull
xchg
stos
cli
push
loope
dec
repnz
add
dec
sbb
jle
pop
rorl
movsl
mov
sahf
push
test
lods
lock
xorl
inc
dec
cmp
xchg
out
setg
notl
push
mov
data16
hlt
dec
aas
or
pusha
xchg
inc
mov
adc
dec
or
inc
or
mov
or
loop
sbb
dec
mov
popa
pop
and
and
sbb
cmp
jg
psrlw
ficompl
mov
sbb
xchg
shlb
cmpsb
mov
push
fsubl
enter
xchg
push
push
dec
mov
cmp
mov
int3
nop
push
sahf
ja
iret
jae
cmp
popa
cmp
adc
idivb
orl
mov
jno
cmp
xor
xor
mov
mov
pop
push
call
jns
or
iret
sbb
movsl
fnsave
loope
leave
mov
fsubl
mov
adc
imul
push
add
pop
vpackssdw
outsb
cmp
push
test
movsb
xchg
imul
push
lret
data16
inc
iret
adc
fwait
gs
or
dec
mov
add
int3
jnp
sub
inc
mov
and
lea
lahf
loop
push
addr16
inc
pop
les
sbb
pop
sti
std
leave
jne
add
inc
stos
jp
cmp
js
adc
sarb
lods
and
xor
rcrb
push
push
mov
cli
fcomip
push
iret
xlat
dec
lret
mov
js
xchg
enter
pushf
data16
push
inc
orl
in
xor
cmp
mov
xor
jno
aas
pop
or
daa
or
and
in
pusha
mov
sub
and
adc
lods
subl
jns
push
dec
and
aaa
add
mov
pop
sbb
std
and
cld
popf
aam
je
aam
mov
dec
and
subl
sarb
ja
inc
out
in
int3
sbb
mov
lret
pop
daa
dec
and
outsl
xlat
lahf
xor
pop
leave
adc
aaa
imul
in
in
jbe
lret
inc
ret
push
mov
loop
cmp
imul
sbb
sub
test
mov
out
adc
fimull
mov
out
push
inc
pop
lcall
adc
call
push
xchg
insl
dec
stos
int3
out
aas
xor
fildl
icebp
sub
xor
popf
jae
test
push
cmpb
test
subl
es
notl
stos
cmpb
les
inc
mov
shl
add
jg
clc
shll
or
arpl
jnp
sub
dec
icebp
xor
je
xor
mov
into
outsb
lcall
stos
rclb
stc
sbb
or
xchg
mov
rcll
jle
jbe
pusha
pop
sub
dec
mov
lock
das
fidivrs
xchg
scas
dec
out
sbb
adc
adc
cmp
xor
cltd
and
lahf
cmp
cmp
test
mov
fwait
test
jle
in
out
inc
outsb
pop
pop
cmp
mov
pop
sahf
es
ja
cmc
orl
roll
rcl
or
scas
jg
mov
out
andb
jbe
test
push
mov
push
pushf
ja
lods
scas
sbb
pop
inc
imulb
mov
adc
sbb
jo
out
add
jno
fistps
jns
fs
inc
cmpl
ljmp
dec
xchg
push
stos
loop
pop
xor
jp
add
aam
cli
pop
imul
popf
pop
sbb
insl
fwait
movsb
outsl
bswap
out
xor
cmp
int3
xchg
mov
jne
mov
lds
xchg
fsts
push
xorl
jmp
push
mov
xor
push
or
inc
iret
adc
or
dec
ljmp
push
or
fidivrs
mov
cmpsl
cmp
mov
push
outsl
jns
xchg
pop
ss
movsb
clc
xchg
and
lcall
aam
shr
sub
cltd
adc
aam
add
jno
dec
fisubrl
sub
pop
scas
mov
fsubs
push
loopne
dec
dec
mov
pop
mov
das
cmp
xchg
push
sbb
dec
loopne
outsb
add
push
mov
lahf
negb
in
mov
subb
xchg
jmp
sbb
or
sub
in
add
aad
or
push
add
popa
stos
inc
in
popf
push
add
dec
sub
icebp
sub
sar
jne
pop
fndisi(8087
push
inc
ja
push
add
pop
mov
scas
mov
loopne
loopne
xor
lcall
cmp
cmp
loop
mov
mov
push
add
and
movsb
mov
rorb
mov
popf
pop
or
out
adc
in
adc
jbe
dec
aam
jo
adc
sar
stos
fisttps
stc
rcrl
cmp
mov
sti
es
subb
pop
pusha
mov
add
add
lods
cli
scas
aad
mov
pop
lea
aam
push
xchg
adc
into
stos
mov
fistpll
scas
dec
pop
push
lcall
out
iret
mov
lcall
xor
cmp
inc
jge
mov
fcompl
mov
inc
and
bswap
out
push
andl
lret
das
mov
jg
xor
or
xlat
in
lret
pop
push
ljmp
sbb
out
out
bound
movsl
mov
xor
ss
mov
pop
inc
scas
mov
pop
mov
inc
and
cpuid
fistps
addr16
add
sub
mov
push
or
roll
jmp
outsb
adc
mov
test
jo
mov
xchg
adc
fidivrl
aas
sub
mov
xor
jl
push
mov
je
xchg
mov
xchg
add
je
orb
push
add
xchg
adc
dec
daa
aas
adc
inc
enter
iret
ljmp
jg
mov
sbb
stos
icebp
and
mov
lock
cld
mov
in
inc
sub
mov
pusha
lahf
jg
stc
sbb
add
lret
mov
jno
out
mov
jmp
rol
inc
stc
pop
adc
ss
out
into
inc
jo
movsb
jmp
ret
mov
xchg
mov
xchg
jo
repz
cwtl
xchg
aas
sbb
push
aaa
lods
lea
aas
jge
pop
add
aaa
fbld
popa
xchg
adc
fsub
jp
out
aad
adc
and
or
push
inc
cmpsb
in
add
out
xor
xchg
mov
adc
and
pusha
mov
in
adc
mov
cmp
or
cltd
cmpsb
xor
jb
loopne
std
jl
jg
sahf
ret
movsl
popf
mov
aas
dec
gs
push
daa
add
dec
ret
mov
cmp
xchg
gs
cmc
push
fwait
ljmp
shl
pusha
cmp
jl
test
jb
cmp
adc
adc
int3
pop
dec
mov
or
or
mov
and
lret
enter
out
into
xor
or
pop
mov
xchg
outsb
in
jne
call
jbe
lret
lods
or
into
xchg
js
popa
out
cmc
pop
cmp
mov
or
pop
jns
mov
inc
lock
adc
add
lods
cmpsb
lods
pop
stos
jo
xlat
outsl
fldcw
inc
or
sub
add
inc
in
sub
push
push
jo
sub
inc
or
jg,pn
mov
cmc
inc
ficoml
iret
pusha
call
fisubrl
fs
and
pop
in
stc
out
or
mov
xor
mov
mov
and
mov
jbe
mov
sub
das
xchg
adc
pop
cmp
loop
sbb
stos
jmp
sub
sub
cwtl
sbbb
cmp
mov
inc
clc
or
inc
push
inc
call
adc
mov
imul
cli
sub
in
jno
cmp
jno
out
repz
mov
cs
aas
test
movsb
sub
repnz
repz
into
add
movsl
xor
lcall
ja
mul
mov
fwait
test
aas
cmp
aam
push
pop
and
shrl
xchg
sbb
notl
aad
je
sub
out
inc
fdivl
scas
ljmp
adc
dec
mov
sbb
imul
xchg
les
cwtl
fstps
sub
xchg
xchg
jmp
pop
movsb
xlat
testb
bound
cltd
lret
cpuid
das
lahf
daa
loope
das
inc
into
mov
xchg
sub
fucomip
adc
loope
push
xchg
stos
xor
or
xor
movsl
xlat
mov
cmpsl
pop
pop
push
add
push
cld
movb
testb
xrelease
adc
add
movsl
pop
mov
sub
aaa
test
xlat
ret
cmp
add
mov
mov
ret
test
in
lcall
cld
insl
push
ds
pop
mov
inc
mov
xchg
insb
pushf
sub
pop
repz
movsb
pop
inc
rcll
dec
hlt
loop
inc
test
outsl
pop
jno
std
in
aam
sarb
xchg
fistl
jno
in
iret
mov
fsub
mov
js
outsb
or
outsb
pusha
test
ret
and
mov
es
loopne
xchg
imul
out
and
lods
fwait
test
cli
in
sbb
mov
mov
sbb
mov
jl
pushl
subb
je
ljmp
std
sub
hlt
in
xor
in
mov
push
scas
popf
mov
and
aad
inc
out
dec
mov
dec
push
ss
push
dec
mulb
or
xor
xlat
pushf
insl
xchg
sbb
and
int3
mov
ds
stos
jns
mov
lcall
clc
sub
ljmp
outsl
cmp
push
push
rcl
dec
push
out
sub
mov
push
mov
clc
dec
imul
jge,pn
cwtl
lret
test
lods
pop
adc
jnp
and
and
or
jo
jo
rorl
popf
scas
call
add
loopne
xor
add
mov
js
mov
sub
sub
in
shlb
inc
stos
jno
jge
call
sti
mov
imul
inc
xchg
jp
scas
cmp
push
rcll
in
mov
and
xchg
pop
loopne
jecxz
shrl
or
xor
jle
outsl
lea
sub
imul
mov
xchg
loop
pop
push
and
mov
push
leave
adc
mov
iret
stc
imul
inc
popa
and
sub
pop
fwait
hlt
insl
jp
leave
fstpt
movsb
push
popa
clc
adc
cmpsl
inc
test
scas
mov
pop
pop
sti
cmp
ret
es
pop
into
inc
stos
aad
xchg
in
aam
mov
mov
and
rcll
or
out
leave
movsl
mov
test
push
ficoml
ds
lcall
test
xor
or
push
add
xchg
xor
push
jle
rsm
adcl
push
xchg
ret
or
adc
out
outsl
aad
jecxz
stc
movsb
dec
leave
sbb
jmp
insb
mov
push
xchg
mov
loope
int3
mov
lcall
jnp
lahf
sub
cmp
mov
std
push
lcall
fimuls
inc
or
ds
adc
mov
cs
sti
jecxz
shll
pop
mov
add
js
mov
dec
mov
pop
and
scas
testb
push
cmpl
or
add
add
shll
xchg
fistps
scas
dec
adc
and
das
mov
loope
data16
loope
cmp
sub
cmc
inc
es
movsb
lret
mov
or
loop
add
jg
lahf
std
cs
ret
hlt
cmp
arpl
pop
enter
dec
add
sub
jo
lret
incl
lods
sub
sub
mov
sub
cmp
jns
mov
lret
xchg
gs
push
jne
mov
fwait
scas
loope
add
xchg
inc
add
pop
inc
movsl
imul
cltd
xor
jmp
sub
jle
aad
adc
push
and
lea
stc
jnp
outsb
xchg
dec
mov
shlb
push
out
cmp
data16
fldl
jo
popa
sbb
rorl
pop
clc
test
ss
jp
xor
imul
test
leave
addb
stos
cmp
pop
pusha
or
add
xorl
pop
sbb
stos
lds
insb
fcmovne
xchg
jo
lcall
sbb
push
add
xchg
iret
jae
push
sti
inc
pop
adcb
mov
stos
pop
adc
cmpsb
cld
aaa
pop
and
ret
data16
adc
sub
inc
sahf
je
mov
xor
pusha
sahf
in
loope
loope
mov
mov
pop
adc
movsl
mov
push
fs
mov
lods
and
xor
inc
lds
movsb
nop
dec
jbe
inc
test
out
mov
pop
push
adc
fdivrl
mov
adc
mov
nop
jnp
rolb
nop
push
push
cld
or
adc
and
push
xchg
popa
push
js
ret
jnp
xchg
gs
adc
jbe
idivl
cmp
inc
subb
repnz
gs
mov
inc
fidivrs
sbb
sub
out
dec
sbb
shrb
shll
setb
lcall
mov
ss
sar
adc
loopne
ret
aad
ret
loope
pop
push
imul
sub
lcall
int3
adcl
mov
or
and
cmp
xchg
adc
fildl
mov
fwait
xor
orl
sarb
arpl
shll
jg
sub
push
js
adc
dec
insb
testb
movsl
add
jnp
jle
jb
pop
push
insl
xchg
out
daa
jo
mov
in
js
clc
mov
rolb
pop
aaa
add
das
cmc
push
int
jno
sarl
xchg
ja
shl
dec
dec
hlt
pop
lahf
das
push
sub
lds
inc
mov
jnp
rorl
cltd
loopne
add
inc
mov
mov
out
jo
push
push
in
xlat
stos
shlb
jge
shl
xor
or
mov
pop
inc
adc
test
push
sbb
push
inc
mov
out
add
mov
mov
cli
dec
ret
push
in
int3
seta
mov
jg
int
dec
in
out
nop
bnd
ss
push
dec
pop
call
leave
cmp
pop
mov
sbb
and
stos
xchg
push
popf
mov
cmp
subl
jp
das
lods
and
and
fnstsw
ret
push
ffree
int3
sub
mov
insl
inc
mov
fsubrl
mov
and
push
ss
xor
push
mov
sbb
or
mov
mov
add
test
or
aam
sahf
pop
loop
mov
sub
inc
std
adc
mov
cmp
outsl
inc
icebp
add
fsts
and
cmpsl
push
ret
and
xchg
decb
sbb
sahf
jle
cmp
mov
mov
push
push
sbb
pusha
push
inc
xorb
ficompl
sub
loopne
movsb
push
jae
leave
jnp
imul
icebp
jb
mov
xor
lcall
imul
das
push
ljmp
iret
push
inc
pop
xchg
cmp
test
push
dec
push
mov
jo
cld
xor
cmp
jle
test
sub
loop
xor
mov
dec
mov
repz
cmpsb
mov
or
xchg
adcb
push
or
es
icebp
adc
mov
test
sub
in
push
rcrb
addb
loopne
hlt
jo
fimull
call
cltd
push
das
or
jg
mov
or
pop
pop
in
pop
add
shrl
movsb
mov
out
sub
or
out
mov
repz
sbb
lods
pop
xor
test
sub
adc
in
or
sub
fisubs
dec
aaa
test
in
xchg
sub
arpl
push
rolb
cmp
fldt
pusha
jmp
lret
repz
sub
into
dec
lds
cld
add
ficoms
push
lahf
cmc
xlat
mov
add
cli
inc
mov
nop
gs
mov
xchg
mov
je
push
cli
scas
or
aaa
iret
mov
ret
mov
aam
shlb
mov
mov
mov
sbb
sub
sub
ret
out
mov
cmp
jge
scas
push
dec
aam
sarb
sub
aam
push
adc
push
shlb
jge,pt
xchg
or
sbb
test
pushf
adc
sub
jl
stos
and
arpl
sbb
ret
xor
xchg
jle
push
cmpsl
cmp
mov
decb
pop
or
divl
mov
stc
loopne
push
lret
outsb
cmc
mov
pop
daa
dec
fsubrl
out
ljmp
nop
jbe
jl
lea
jmp
sbb
lods
pop
xchg
movsl
adcl
lahf
jae
enter
inc
mov
add
sub
icebp
xchg
fdivrs
add
daa
cltd
add
ret
test
stc
rol
lea
test
sbb
pop
in
enter
dec
cltd
loope
jno
dec
sahf
sub
lahf
mov
test
xchg
sbb
mov
cmpsb
add
mov
fs
data16
pop
mov
loope
mov
xchg
int3
mov
mov
xor
jo
pop
adc
out
pushf
adc
xor
pop
sub
imul
add
mov
pushl
adc
mov
scas
jnp
dec
decb
mov
cmp
jecxz
dec
adc
xor
and
jne
clc
gs
push
cs
add
mov
sbb
scas
test
sub
pop
int3
sub
jle
dec
mov
call
xchg
fstl
rolb
cli
dec
jecxz
adc
subl
cmpsl
hlt
dec
les
pop
loop
orl
sbb
sub
data16
jnp
or
jge
mov
mov
lods
iret
sub
mov
or
mov
shlb
popf
mov
mov
cmpsb
inc
inc
lds
jle
ret
daa
pop
or
sub
jg
mov
pushf
in
mov
pop
je
test
test
lret
sub
movswl
jo
xlat
push
pusha
adc
cmc
adc
jp
mov
dec
xchg
out
add
mull
mov
ljmp
cli
dec
shlb
mull
aas
lret
dec
xor
sbb
push
mov
mov
sbb
pop
pop
push
clc
mov
incb
sub
les
xchg
jmp
es
aaa
sub
cli
pop
mov
mov
or
lock
adc
mov
int3
out
out
jle
add
repz
pusha
xor
push
mov
sbb
xchg
pop
jbe
dec
push
dec
scas
push
je
jne
sub
and
movsb
dec
shll
jg
std
mov
mov
xchg
call
or
and
outsb
push
lods
push
or
xchg
inc
mov
test
in
jl
or
xchg
xchg
mov
gs
lods
mov
fcomp
pop
and
push
int
jnp
inc
and
inc
test
jno
add
dec
popf
iret
cmc
iret
cmp
shlb
sub
jcxz
call
xor
clc
das
shlb
fbstp
je
jg
jb
test
andb
mov
and
sbb
sahf
ret
jae
insl
and
outsl
add
movsl
push
or
or
xchg
mov
adc
mov
cmp
je
or
pushf
fisttps
out
xor
mov
mov
mov
or
cs
and
stos
mov
nop
or
jnp
jle
inc
push
jp
imul
popl
add
jae
inc
adc
push
pop
push
push
mov
enter
mov
lret
lock
adc
lods
or
xor
dec
cltd
jecxz
ljmpw
xlat
jo
push
sbb
adc
cld
cld
mov
imul
fnsave
and
rclb
or
add
inc
push
adc
int
repz
idivb
ret
inc
sub
test
es
in
ja
or
mov
ljmp
cmpsb
sbb
add
sbb
mov
hlt
adc
add
mov
in
es
cmp
movsb
insl
mov
repz
mov
push
pop
xor
jp
subl
out
lret
enter
mov
sbb
mov
outsb
outsl
pusha
loopnew
lahf
movsb
pushf
cmp
push
hlt
in
xchg
andl
fwait
jg
pop
or
cmp
jbe
xchg
cwtl
fsubrl
sbb
push
sbb
sub
jnp
and
cmpsb
push
cmp
adc
std
cltd
jge
sbb
sub
sub
bound
push
adc
push
lock
cmp
jecxz
repz
mull
fldl
sub
pop
enter
orl
pop
xor
pop
subb
cwtl
xchg
xor
es
popa
scas
aad
pop
jb
sub
mov
scas
mov
xchg
out
sub
shll
idiv
lods
xor
std
pop
testb
lahf
icebp
jno
add
cli
es
insb
jp
test
pop
icebp
mov
ljmp
or
test
pusha
mov
cmp
test
or
popa
into
fcmovb
loope
cmc
arpl
add
sub
xchg
xchg
inc
xor
sar
in
jb
dec
gs
xchg
xchg
imul
aad
popa
ret
nop
adc
stos
sti
out
push
out
shlb
std
in
sbb
mov
dec
xchg
call
adc
jno
jp
mov
push
adc
addb
into
xchg
mov
arpl
aaa
clc
pop
cltd
sbb
icebp
cmp
andb
mov
les
dec
dec
fmul
ret
outsl
call
push
mov
ljmp
push
ficoms
xorb
pushf
sbb
cld
lea
bnd
pop
fisubs
inc
add
and
sbb
adcl
iret
mov
inc
mov
inc
iret
pop
mov
adc
xchg
call
test
dec
dec
jmp
es
xchg
jnp
mov
cmp
xlat
inc
or
popf
movsl
in
dec
movsl
jl
and
xor
fwait
rcll
adc
and
addl
pop
lahf
movsb
pop
xor
mov
insb
jo
push
adcb
shl
test
adc
inc
jg
fidivl
lds
iret
and
adc
pop
pop
jns
push
adc
adc
xor
ret
cmp
mov
jo
adc
cltd
bswap
inc
or
sahf
arpl
mov
rclb
bound
adc
sti
push
dec
outsl
lret
and
mov
je
pop
mov
push
cli
lcall
sti
movsl
push
loopne
xchg
clc
mov
out
frstor
je
movsb
and
and
mov
cwtl
sub
cmp
sub
std
lcall
mov
jl
les
sbb
leave
push
cmp
and
stos
mov
pop
cmp
add
jo
int3
jecxz
push
fisttpll
jmp
cmp
adc
pop
outsl
sub
xor
lods
imul
andb
push
mov
push
mov
dec
add
pop
and
jle
jle
popf
add
add
cmp
xchg
popf
insb
jp
cmp
bound
dec
loop
cwtl
out
aas
mov
cmp
mov
push
pop
cmp
jmp
cmpsl
pusha
shl
outsl
cmp
add
add
xchg
lea
dec
inc
aas
mov
ret
das
es
insl
and
mov
or
sub
push
mov
lea
dec
xor
sub
and
or
rol
mov
mov
es
mov
ret
push
and
leave
popf
sub
into
jno
scas
push
in
ret
dec
fdivrs
lds
mov
xor
je
add
ljmp
popa
scas
xlat
cwtl
mov
mov
aaa
dec
pop
imul
repnz
mov
dec
stos
cmp
jo
pop
lahf
pushf
xchg
dec
out
fsubrp
mov
mov
cmp
add
std
xor
scas
lds
loop
add
push
cmp
fadds
sbb
out
test
cmp
imul
lret
adc
cmpl
iret
addr16
outsb
adc
jge
pop
stc
sbb
or
dec
and
clc
pushf
rolb
xor
mov
loop
addr16
pop
out
mov
xchg
cmp
pop
sti
dec
movb
add
shrl
jno
mov
xor
mov
dec
add
jp
xor
add
sbb
push
loop
xor
aaa
repz
test
lahf
pop
test
jg
pop
arpl
pop
inc
dec
dec
iret
pop
push
daa
jne
out
sub
jl
add
mov
leave
pop
dec
movb
daa
and
inc
lahf
sbb
gs
sti
pop
cmpsb
dec
hlt
test
lret
mov
test
aad
cmpsl
mov
and
fcomp
or
jne
icebp
xor
dec
daa
mov
arpl
shlb
mov
inc
aaa
cltd
mov
cmp
pop
jbe
repnz
repz
cmp
jne
shrb
ret
add
imul
test
cmp
es
roll
add
adc
gs
dec
mov
aas
mov
imul
ja
fs
outsl
pop
jg
mov
mov
jl
xchg
add
jg
mov
rcrl
adc
pop
bound
xchg
jmp
cmp
icebp
pop
mov
ds
jmp
negl
pushl
inc
leavew
mov
add
pop
cltd
dec
lret
adc
cmp
dec
bound
mov
adc
test
inc
pop
mov
orl
outsl
movl
or
icebp
lock
pop
popa
dec
rorl
into
les
outsb
cmp
mov
mov
inc
and
int
adc
pop
je
jg
push
stos
cwtl
mov
cmp
popf
add
bound
adc
xor
xor
mov
bound
add
lods
aaa
or
push
adc
push
add
movsb
add
adcb
lods
mov
lods
lret
push
or
rcl
push
sub
dec
scas
shlb
test
dec
cltd
mov
bound
dec
ja
push
pop
lret
lods
fwait
insb
jb
mov
sbbl
mov
enter
adc
inc
pop
notl
into
popl
les
ret
pop
ds
or
jns
and
jle
setp
or
dec
and
arpl
mov
mov
inc
int3
xor
pop
in
adc
pop
faddl
or
scas
adc
sub
inc
jns
and
addr16
jle
mov
xor
cmpsb
jl
pop
mov
jecxz
pop
adc
cwtl
dec
enter
dec
scas
lock
call
je
mov
sub
or
ds
mov
pop
aaa
push
call
test
push
enter
int3
inc
jns
and
push
mov
je
add
pop
lret
mul
mov
push
jl
cmp
cmp
cmp
xchg
push
fisttpl
jns
mov
clc
cli
mov
ja
sahf
adc
fmulp
out
nop
rol
movsl
int
jp
scas
and
ss
out
push
out
xor
popa
pop
and
imul
imul
inc
xchg
sub
pop
and
jmp
fistl
mov
test
out
add
daa
ret
je
jne
and
sub
je
stos
stc
subb
mov
mov
mov
jne
sbb
xchg
pop
cmp
xlat
sbb
jmp
fstp
scas
xor
cmp
jl
inc
xchg
jecxz
fs
mov
jne
xor
sbb
cmp
loopne
jbe
lcall
mov
mov
and
mul
xor
mov
aam
jg
xchg
outsb
cs
xchg
fbld
pop
add
xchg
mov
jnp
imul
aad
sub
adc
pop
in
imul
in
ds
dec
aam
xchg
les
loopne
les
pop
mov
leave
out
into
je
stc
ljmp
xor
mov
clc
cli
xor
fldl
jo
sub
mov
pop
fmuls
les
jno
xorl
in
outsb
outsl
std
mov
ret
and
jmp
add
sahf
push
or
mov
push
sbb
jmp
ljmp
cmpsb
dec
mov
xchg
push
or
cmp
inc
dec
mov
or
rcrb
sti
mov
jl
sub
xor
lcall
out
mov
dec
out
lahf
jl
cltd
or
push
call
push
mov
or
int3
cmp
insl
cmp
xchg
outsl
data16
pop
or
jbe
call
adc
andb
add
sar
loop
imul
push
mov
lret
mov
sbb
daa
pop
xchg
mov
enter
mov
xchg
aam
cmc
mov
and
imul
jle
fisubrl
sub
jp
test
jae
and
cmp
mov
subb
cmp
das
push
or
aam
out
adc
cmp
cmpsl
outsb
aaa
lret
jo
sbbb
ficomps
insb
insl
imul
pop
rcrl
push
jmp
fnstcw
jb
jo
mov
inc
dec
cmp
pop
bound
les
fidivrs
notb
xor
push
scas
cmc
data16
cltd
adc
cmp
lcall
ret
xchg
insl
imul
lret
jno
push
fwait
in
mov
push
lcall
jo
adc
push
clc
scas
lret
daa
popa
adc
ss
iret
test
out
jle
scas
xchg
jno
notl
push
es
stos
pop
or
iret
out
mov
jle
push
gs
xor
dec
sbb
pop
imul
cmpsb
pop
pop
rorb
mov
sbb
movsl
inc
push
and
push
addr16
out
sub
xor
adc
xor
mov
imul
lods
mov
inc
jp
adc
inc
mov
mov
mov
mov
xor
inc
mov
js
xchg
mov
mov
sub
sbb
cmpsl
mov
mov
mov
mov
fcomps
addr16
xchg
lea
cltd
ss
jnp
and
sbb
adc
or
cmp
hlt
pop
add
aas
dec
mov
push
mov
pop
fistpll
dec
lcall
jge
add
out
push
push
loopne
jle
adc
loopne
mov
mov
je
sub
test
sbb
push
adc
orl
in
pop
ljmp
cmpsb
jl
js
js
xchg
jb
lret
cli
test
push
jne
xchg
mov
cwtl
rolb
adc
in
ljmp
repz
sbb
fcom
adc
lds
dec
sub
lea
jns
sub
inc
push
push
pop
jmp
scas
arpl
and
js
pop
fists
leave
movsb
rcll
inc
push
daa
lock
lds
idivl
jmp
popf
loope
or
loop
lods
test
sub
mov
pop
fidivrl
mov
mov
arpl
push
mov
sbb
mov
andps
jno
add
or
add
adc
dec
inc
mov
sbb
mov
add
js
sub
ss
xor
sub
je
fidivs
mov
mov
rolb
add
fucomip
jecxz
stos
push
jno
mov
ja
cmp
jae
std
dec
dec
fdivs
mov
mov
xlat
xchg
inc
xchg
mov
aam
pop
pop
inc
stos
es
jecxz
mov
add
adc
hlt
pop
inc
popa
or
movsb
pushf
jge
enter
movsl
push
into
jg
mov
xor
sub
loop
fmuls
notb
shrl
push
lea
inc
add
mov
out
inc
mov
push
mov
adcb
cli
or
push
jns
scas
arpl
push
dec
mov
adc
mov
mov
ret
push
scas
add
mov
add
sbb
add
push
adcl
fiadds
inc
test
dec
loop
ljmp
popf
ljmp
in
jo
dec
call
cld
adc
xchg
daa
adc
sub
sbb
outsl
add
add
ret
js
push
push
orb
and
pop
ret
scas
std
sub
scas
outsb
xor
pop
inc
mov
scas
dec
add
or
or
les
cmpsb
jecxz
mov
addr16
mov
pop
cmp
out
xor
mulb
xchg
lods
shll
dec
inc
in
pop
pop
lock
mov
jp
repnz
push
sub
ss
test
mov
int
into
scas
stos
sarb
mov
sub
ss
lret
pop
outsl
mov
das
enter
cld
out
push
inc
sbbb
loope
inc
outsb
push
mov
mov
jle
dec
mov
sub
push
jbe
mov
sbb
popa
stos
add
mov
fisubrs
push
in
call
sbb
sbb
sbb
loope
mov
adc
xchg
adc
push
inc
jmp
or
sahf
push
popa
push
fstpt
icebp
xlat
adc
sahf
adc
fistl
lods
insl
fimull
pop
and
fimuls
jle
push
xchg
ljmp
fildll
mov
mov
lss
xchg
inc
inc
es
out
or
pop
sub
sub
mov
inc
mov
leave
mov
out
jl
in
test
cmp
add
inc
gs
sbb
jl
pop
std
push
insl
shll
ja
pop
add
outsl
mov
mov
inc
inc
add
cli
popf
or
push
xor
pushf
inc
mov
leave
andb
in
mov
mov
push
add
pop
mov
push
inc
js
mov
or
lahf
in
test
sub
and
xchg
mov
popa
loope
fxch
xor
pop
xchg
jmp
sub
mov
sub
adc
jb
mov
cmpsb
lea
pop
add
pop
pushf
fwait
adc
call
loope
fldenv
dec
adc
xor
insl
cmpsb
orb
popf
mov
dec
ds
sbbl
mov
sbb
xchg
stos
xorl
sbbl
mov
popf
int
jnp
repz
ds
mov
jbe
sub
movsb
imul
mov
jno
mov
sub
cmp
and
push
mov
xchg
cmp
xor
dec
fcmovnb
lds
pop
jno
lods
pop
mov
imulb
test
cs
pop
push
aaa
nop
xor
pop
push
pop
xlat
pop
cmp
and
fwait
mov
rcll
mov
pop
cmpsl
out
jno
dec
cmp
popf
std
inc
lds
pop
inc
adcl
lods
push
add
fucomip
push
push
jp
ret
mov
jb
fs
xor
pop
ljmp
cmp
shlb
adc
sbb
and
in
mov
insl
repz
mov
pop
sahf
pop
gs
xor
loope
jg
repz
sub
inc
dec
lods
pop
pop
and
sub
rolb
and
pop
xchg
enter
jnp
pushf
or
xor
dec
add
mov
ficomps
in
call
cltd
mov
push
xchg
jbe
dec
push
push
sbb
dec
pop
movsl
movsl
dec
lods
xor
outsl
cli
insb
les
xchg
mov
loop
mov
iret
or
dec
xor
xor
add
outsb
dec
fs
inc
mov
inc
loopne
popa
or
movsb
sbb
repnz
push
xchg
addl
xchg
cmp
inc
push
rcrl
ret
out
pusha
ficoml
popa
enter
enter
sub
add
push
cwtl
sahf
imul
mov
movsb
jecxz
pop
les
and
adc
fxch
mov
dec
aaa
push
dec
sub
adc
mov
movsb
adc
adc
adc
push
jno
dec
mov
sbb
shlb
fmul
dec
lock
mov
clc
mov
fldcw
imul
repz
add
add
in
es
dec
push
add
mov
data16
lea
sub
lahf
push
imul
mov
mov
ret
mov
sahf
push
imul
loopne
mov
xchg
mov
shrl
fs
mov
or
cmpsb
negb
adc
sbbb
rorl
jmp
cld
adc
and
jmp
dec
pop
jno
dec
sub
mov
inc
mov
jle
or
xor
sahf
lods
push
lret
lahf
mov
lock
into
jb
and
adc
pop
xlat
ss
xchg
loopne
nop
push
dec
xchg
push
call
or
mov
adc
int
shll
aad
cmpsl
inc
mov
xlat
xlat
dec
adc
push
into
loopne
dec
mov
mov
loop
cmpsb
push
mov
ret
bound
mov
cltd
jge
mov
mov
mov
movsl
push
mov
push
adcb
xlat
mov
stos
adc
popa
clc
pop
jge
imul
loope
pushf
mov
cld
mov
clc
jne
and
pusha
inc
out
sub
fnstsw
mov
pop
notb
jae
push
hlt
sbb
lds
in
pusha
movsl
out
cmpsb
imul
pop
iret
lods
pop
push
pushl
pop
sbbl
sahf
shll
xchg
or
in
fidivrs
adc
sub
ss
cwtl
sub
and
pop
jp
mov
dec
push
mov
sar
sub
dec
insl
push
jae
push
fdivp
sbb
cmp
xor
jbe
cmp
xchg
mov
hlt
ljmp
adc
int3
aam
push
imul
call
inc
fnstenv
jecxz
out
cltd
cmpsb
inc
insb
cld
mov
dec
mov
ficompl
ja
stos
xor
cmc
stos
test
cmp
mov
mov
xchg
xchg
mov
arpl
jle
ljmp
adc
xor
fists
pop
push
pushl
je
sti
push
sub
enter
xchg
mov
test
xor
add
dec
ljmp
rcr
and
lds
and
loop
sbb
scas
push
jmp
push
int3
mov
add
scas
cmp
sahf
mov
aad
pop
xchg
outsb
sub
out
ror
ljmp
push
stos
cli
xor
insl
add
xchg
jae
es
ret
ss
test
ds
mov
ss
addr16
ljmp
add
mov
add
mov
pop
sub
adc
jo
xor
cmp
sub
add
loop
int3
adc
clc
adc
in
jl
ds
jp
add
and
xor
pop
fidivl
push
cmp
fsts
int
xchg
jnp
scas
mov
mov
loopne
rolb
push
ret
ja
sub
int
js
js
ret
js
mov
into
pop
xor
jl
out
into
inc
rcrl
aad
movsb
sub
out
push
imul
cmc
push
pop
adc
xlat
pop
sbb
xor
out
lods
dec
pushf
xor
aam
push
sub
fldl
js
xchg
rcrl
repz
and
push
mov
add
mov
ljmp
outsl
inc
sub
gs
mov
in
shll
ret
mov
pop
jns
jmp
cmp
aam
push
mov
data16
lods
mov
adc
popf
int
test
dec
push
stos
sti
lahf
sbb
sbb
scas
add
fstpl
mov
jp
aam
or
je
lret
and
in
mov
jno
insl
or
mov
je
xor
or
pop
dec
mov
repz
push
hlt
loopne
push
xchg
push
dec
mov
or
jmp
mov
insb
sarl
cmp
sub
adc
jecxz
aam
js
cwtl
test
fucom
adcl
dec
inc
dec
push
add
repnz
in
sub
or
inc
pop
mov
cmp
add
or
loope
jmp
andb
pushf
into
insb
fisubl
xor
cs
cmp
jecxz
jbe
cmpsl
iret
ss
jno
jmp
inc
pop
test
jb
mov
sub
xor
sbb
lods
inc
popf
cmp
mov
lret
bound
call
jnp
jge
mov
hlt
add
jno
in
sbb
fldcw
sub
or
bound
or
outsl
dec
push
ficoms
lds
mov
pop
sahf
imul
jae
lock
scas
cmp
mov
pop
or
lret
call
les
jecxz
push
push
jbe
jno
pop
addl
fiadds
lcall
and
sbb
lods
push
xor
sub
mov
shrb
pop
mov
in
push
fwait
mov
sub
fldt
stos
imul
add
mov
adc
mov
lahf
pusha
jb
jb
and
mov
dec
fistps
cmc
decb
shl
jno
jecxz
shrl
bnd
loope
inc
xor
in
sti
inc
pushf
aad
push
loopne
pop
adc
or
pop
enter
not
sub
in
popf
or
js
dec
daa
mov
inc
sub
and
popa
mov
cmpsl
loope
or
or
call
xorb
xchg
cli
sub
rolb
pop
pop
jg
pop
mov
mov
jo
or
lods
and
push
dec
loope
test
mov
enter
imul
lret
push
xchg
xor
ret
and
sbb
data16
dec
out
cmpl
stc
push
rclb
mov
jnp
leave
in
cmpsb
idivl
fisttpl
sahf
pop
fsubs
das
pop
dec
lahf
add
push
pop
pop
sub
call
lds
fnstenv
cmp
adc
ss
jle
bound
aad
push
mov
push
insb
cwtl
into
pop
mov
add
fcompl
mov
mov
test
dec
jb
dec
jae
mov
adc
movsl
inc
xchg
adc
xchg
sbb
dec
xchg
test
cmc
pop
and
push
xor
outsb
xor
add
and
sub
sahf
pop
cmp
in
sbb
sbb
lods
pop
push
in
stos
fimuls
sub
mov
mov
sbb
cmp
inc
pop
add
clc
in
and
aas
dec
out
cli
cmc
mov
movsl
or
mov
mov
xor
fldcw
cmp
in
jne
outsb
push
loop
jno
push
std
nop
sub
or
jl
dec
stos
cmp
cld
cltd
mov
mov
mov
sbb
xchg
shr
scas
xor
mov
xor
mov
pop
pop
shll
cmp
cwtl
and
aam
in
in
sub
xor
adc
xor
cld
lds
lods
mov
in
jmp
mov
lea
mov
jge
cmp
leave
out
sub
xchg
mov
push
insl
fsubrl
or
xchg
sbb
iret
shll
inc
push
enter
cmpsb
sbb
cltd
popa
or
loope
push
mov
mov
je
aad
iret
xor
ja
ljmp
aaa
rorb
push
loopew
push
push
mov
sub
and
dec
ret
mov
dec
shlb
mov
insl
mov
lock
add
fcoms
xchg
adc
mov
jmp
xchg
sub
inc
mulb
pop
sub
mov
mov
xchg
lret
cmp
mov
inc
int
xlat
sbb
in
jp
mov
ret
pop
and
jno
lret
or
je
xchg
xchg
cmp
sbb
jae
mov
sub
lock
iret
scas
jne
cmp
daa
jns
cmp
stos
dec
je
mov
mov
jp
into
mov
data16
pusha
mov
dec
jae
fcoms
dec
imul
pop
dec
mov
mov
rorb
ret
and
jl
sub
sbb
sbb
aas
mov
imul
pop
inc
add
dec
ret
sahf
dec
cmpsb
cmp
loope
jecxz
nop
shlb
fldl
out
add
pop
xchg
data16
push
inc
jo
xchg
test
loope
xchg
mov
outsb
mov
int
mov
cmp
out
xchg
inc
cmp
dec
data16
es
xchg
jmp
pop
loop
iret
sub
shr
in
fwait
shr
out
sub
sub
repnz
sub
outsl
dec
add
adc
in
mov
aad
jns
test
dec
test
ja
cmp
mov
bound
inc
sub
or
push
addr16
sub
addr16
mov
sahf
test
xlat
jp
sahf
outsb
xor
dec
xlat
jmp
cwtl
loope
adc
sub
sti
push
jae
addb
push
daa
sbb
nop
frstor
hlt
aad
add
rorb
test
in
nop
in
xlat
sti
push
xchg
enter
sub
fists
lahf
mov
insl
lods
pop
popf
sub
test
mov
push
je
and
ljmp
pop
sub
xchg
lcall
mov
push
xor
std
push
imul
std
cmp
pop
sub
mov
mov
adc
sbb
lods
lea
or
lods
mov
jne,pt
sbb
decl
shl
xor
mov
out
aam
jle
out
jae
icebp
in
mov
addr16
jne
jo
jl,pt
cmp
ret
xchg
add
loopne
sarl
ret
shll
xor
nop
dec
shll
push
jmp
xchg
xor
add
mov
mov
rcrb
mov
mov
xchg
and
mov
mov
pop
scas
adc
jl
dec
jl
rcll
rolb
movsb
test
push
call
push
clc
and
pusha
je
shl
or
add
hlt
dec
ljmp
lea
jle
outsb
leave
fsts
scas
xchg
bound
xchg
mov
je
in
inc
int
mov
xor
ja
rclb
ljmp
or
into
jae
push
popf
popl
maxps
mov
adc
ljmp
rcll
and
inc
xor
inc
push
or
add
dec
call
test
xchg
mov
and
rolb
push
test
pop
push
push
adc
cmpl
push
add
ss
xor
sub
push
mov
push
lret
stos
mov
or
icebp
add
icebp
mov
stos
test
movl
cmp
or
repnz
cmp
cmp
mov
mov
fwait
out
les
dec
mov
xchg
js
dec
ja
pop
loop
rcll
in
stc
mov
xchg
mov
xchg
inc
and
sbb
inc
pushf
les
jb
fldt
testb
je
out
call
jb
lods
adc
in
movsl
push
fcoms
icebp
push
aas
adc
add
scas
adc
dec
cli
imul
push
dec
jge
fadd
in
pop
imul
enter
cs
sar
sbb
xor
iret
or
xlat
jg
out
ds
jno
jbe
ljmp
bound
mov
mov
mov
fdivrl
adc
or
aas
xor
cwtl
dec
mov
jmp
aad
pop
xor
out
imul
mov
insl
fadds
mov
fdivp
dec
sbb
mov
popf
sub
jno
in
xchg
les
push
cmp
xchg
fstps
loop
ds
cmc
dec
jne
mov
gs
arpl
subl
lcall
lret
push
xor
push
lahf
loopne
push
jb
sbb
out
sbb
fmull
loop
xor
add
dec
enter
jp
mov
cmp
and
mov
or
jge
sbb
add
pusha
aas
inc
nop
jecxz
pop
dec
pop
enter
jmp
pop
mov
sub
mov
and
and
and
sub
ljmp
dec
out
ret
xchg
aad
dec
daa
and
mov
out
sahf
cmp
jl
insl
push
xor
fs
sahf
movsb
movb
sub
fildl
dec
gs
les
pop
loopne
pusha
jbe
outsb
inc
loop
lret
je
mov
xor
jl
cmp
popa
rcll
sub
mov
jbe
iret
icebp
push
xchg
and
push
insb
cmp
test
sbb
aad
mov
mov
ja
add
jmp
jbe
ret
stos
fbld
inc
mov
lods
push
cltd
xor
imul
outsl
cmp
movsl
and
jo
mov
ljmp
cwtl
push
fs
in
sub
add
sub
in
sbbb
mov
inc
jp
int3
mov
adc
ficompl
popf
or
sbb
subb
xchg
lret
push
leave
inc
mov
out
dec
or
mov
js
xor
inc
into
xor
js
mov
sbb
popf
cmp
ds
ror
add
sub
js
sbb
dec
out
je
pop
pop
mov
ljmp
pop
xchg
loope
ret
addr16
icebp
movsb
rclb
clc
mov
cs
ss
icebp
in
fnsave
into
mov
inc
adc
push
dec
or
inc
inc
sub
or
fisttps
test
outsb
cmp
stos
lret
xchg
bound
push
mov
xor
scas
stos
shl
cmovl
sub
dec
jne
inc
mov
add
pop
cwtl
fbld
push
mov
enter
pop
push
adcl
fstp
in
xor
imul
iret
push
int3
aam
mov
push
cwtl
and
into
leave
jecxz
ret
test
pusha
mov
movsb
and
mov
pop
pop
int3
enter
lods
addb
jl
cmp
add
mov
test
outsl
pop
jns
inc
leave
xlat
push
cmp
pop
fildl
leave
jge
psllq
cmp
inc
dec
adc
or
xchg
stos
popf
sti
xchg
fbld
xchg
repz
lock
imul
mov
aaa
cli
dec
in
dec
dec
popf
cmp
pop
fldcw
dec
fwait
mov
sbb
loop
sub
mov
mov
fimull
loope
sahf
fcompl
xchg
stos
mov
mov
mov
or
inc
cmpsb
in
int3
inc
mov
jecxz
sbb
mov
daa
jns
inc
jnp
or
enter
and
xor
jb
xor
sub
adc
cwtl
push
pop
inc
je
xchg
mov
stos
sbb
sub
add
sbb
ja
outsl
or
fists
cmpsb
jg
cs
call
jl
mov
and
fnstenv
dec
mov
and
xchg
clc
pop
xlat
xor
pop
or
adc
jne
rcll
mov
pop
lds
mov
sarl
loop
and
mov
rclb
jb
repz
out
push
sub
dec
or
leave
or
cmpsl
push
out
xor
je
in
shr
cmp
cld
add
add
in
sub
mov
jle
test
jp
jns
cli
or
xor
pop
and
rcl
xor
xor
hlt
xchg
jmp
ja
imull
int3
loope
lods
mov
pop
xchg
daa
or
out
ss
insb
bound
je
je
fnop
repz
pop
cmc
mov
mov
sub
adc
jae
pop
sub
nop
insb
stos
ret
sbb
sub
loopne
lods
pusha
mov
push
ds
push
roll
jge
cmp
pop
not
popf
jge
cmp
fstps
bnd
sbb
rcl
dec
in
xor
inc
jge
push
pop
xor
hlt
shrb
mov
jns
testb
xor
push
push
popf
outsb
aam
adc
and
stc
mov
dec
and
jecxz
dec
sbb
mov
dec
fistl
xchg
adc
jmp
pop
xchg
in
adc
mov
lods
push
filds
in
cltd
outsl
mov
and
outsb
jmp
lret
add
repz
fs
xor
ja
dec
and
scas
or
mov
punpckhdq
sahf
scas
jecxz
stos
push
adc
out
in
add
push
dec
icebp
sub
or
out
push
jle
push
decb
imul
adc
jae
jge
mov
cltd
mov
or
sub
mov
ja
push
loope
ss
adc
sarl
lds
andl
sbb
fstpt
stos
leave
cmp
adc
lret
jns
test
push
in
daa
aad
mulb
icebp
pop
ret
inc
jl
push
stos
arpl
mov
sub
xchg
jmp
mov
push
lahf
out
xchg
mov
out
dec
aas
or
jnp
adc
xchg
insl
sub
xchg
cld
into
mov
arpl
test
jmp
movsl
adc
dec
data16
push
mov
outsb
and
push
and
int3
ss
jae
sub
mov
xchg
int3
mov
out
and
aas
out
js
in
inc
testb
or
idivl
out
test
lcall
xchg
and
pop
mov
aam
fidivrs
rolb
add
xlat
xor
push
popf
xor
movsl
sub
adc
rorl
push
add
jmp
mov
pop
mov
jne
aas
fcomip
cmpsb
adc
jmp
pop
into
pop
xor
lahf
fbstp
std
sti
jge
mov
or
xchg
pop
aas
pop
loopne
cmpsl
xchg
mov
insl
insb
cmp
aas
cltd
repnz
fcoml
xor
mov
outsb
jb
hlt
aaa
mov
sbb
sbb
inc
lods
push
rep
jne
jp
fsubl
shl
dec
dec
xchg
cmp
test
cmp
cs
xor
std
or
cmp
fcomps
shlb
jmp
stos
aad
das
mov
les
inc
insb
sti
xchg
test
fisubs
push
push
stos
jecxz
fxtract
insl
enter
test
mov
add
aad
ret
jno
jae
pop
cld
jmp
fisttpl
push
or
lods
lds
mov
jbe
add
push
movsb
dec
mov
ja
dec
jl
nop
jg
mov
dec
into
gs
fdivrl
cmpsl
sbb
pop
mov
scas
sub
iret
xor
int
icebp
jns
ret
dec
je,pn
cli
xchg
mov
mov
jbe
mov
dec
inc
xchg
inc
mov
imul
adc
stos
mov
mov
repnz
jl
sub
fsubrp
adc
or
mov
sbb
das
cmp
nop
call
mov
inc
mov
push
in
std
lea
shld
and
xchg
cmc
les
lea
ret
pop
jae
dec
cld
inc
lds
and
sub
sbb
inc
lcall
xlat
lret
lods
jo
sbb
dec
cmp
mov
jl
jae
in
inc
int
dec
adc
mov
aas
mov
scas
mov
sbb
imul
pop
pop
and
dec
dec
jo
cmp
fwait
or
mov
dec
xchg
movsb
mov
pushf
leave
ja
push
pop
jge
mov
jae
jmp
in
test
xor
dec
xor
aam
dec
les
cmp
shrl
push
inc
and
adc
jne
test
xchg
cmp
inc
rcrb
sbb
sub
push
pop
pop
push
pop
and
sub
mov
movsl
sub
je
mov
pop
inc
outsb
mov
inc
mov
push
push
loopne
or
cmp
cmp
movsl
cmp
sysenter
mov
push
or
xchg
jb
shl
cli
int
fldenv
fcmovu
imul
lcall
and
ret
dec
movsl
inc
jl
sub
imull
jae
xlat
ss
push
lock
dec
pop
inc
in
jmp
adc
and
fcoms
xchg
pop
imul
push
loop
sub
push
jmp
jb
adc
loope
sbb
shrb
mov
push
loopw
jbe
jge
push
jnp
adc
jb
xchg
cmp
inc
sbb
fdivrs
mov
ds
test
mov
push
das
dec
testl
add
sbb
notb
sub
xchg
cltd
sub
stos
shlb
xor
push
outsb
and
outsb
mov
xchg
das
sub
shrb
add
add
in
cli
pop
dec
adc
push
sti
aad
pop
pushf
into
in
sub
call
inc
xchg
pop
ficoml
push
inc
sub
mov
std
pushf
pop
mov
pop
outsb
dec
ljmp
xchg
les
loopne
xchg
stc
push
adc
and
adc
sbb
jae
lods
sub
xchg
fdivrs
jge
push
xor
pop
imul
xor
push
loop
sub
jmp
scas
pop
jge
or
add
cli
jg
jb
sahf
xor
call
adc
mov
jl
xor
dec
jns
push
push
loop
cli
jp
mov
dec
aaa
fiadds
xchg
stos
fsubs
out
lods
cmc
ja
or
les
pop
les
outsl
je
lcall
add
pop
pop
push
loope
cmc
rolb
ret
jo
mov
shrb
push
cmpsb
shlb
mov
add
jae
add
sbb
in
cs
and
mov
pop
sub
mov
mov
call
dec
add
stc
xor
adcl
fcomps
pop
notl
rcrl
loop
out
cmp
iret
loopne
xchg
loopne
mov
sbbl
or
nop
out
andl
or
sbb
push
mov
pop
mov
or
pop
jecxz
adc
int3
dec
mov
daa
and
mov
push
stos
shlb
push
add
call
mov
mov
lods
add
frstor
adc
push
loopne
and
push
lahf
push
xchg
xor
out
cmpsb
insb
pop
mov
adc
clc
cmp
inc
fistpll
mov
jmp
sub
pop
pop
inc
out
inc
andb
xor
mov
stos
test
es
insl
filds
mov
hlt
xchg
in
add
shl
ret
push
pop
cltd
std
test
stos
scas
or
out
xor
inc
push
std
sub
jne
test
insb
xlat
hlt
pop
sub
pop
lds
imul
aaa
or
into
jl
es
push
or
es
add
stos
mov
adc
movsl
sahf
and
push
out
dec
cmp
ljmp
iret
or
outsl
jg
adc
andl
dec
popf
mov
dec
or
xchg
cmp
push
dec
repz
shlb
lods
adc
cwtl
xorl
cmp
or
inc
xor
addr16
stc
pushf
and
sub
out
jno
loope
cmp
dec
sbb
mov
or
pop
sahf
stc
mov
push
es
inc
adc
mov
dec
testl
out
outsb
mov
jns
pop
jno
inc
sahf
mov
addb
cmpsl
or
mov
mov
ljmp
dec
hlt
mov
xor
mov
icebp
sub
mov
xor
shrl
imul
test
int3
and
push
cmp
in
mov
imul
mov
lahf
jge
orb
out
cli
mov
fldenv
enter
aas
jo
andl
outsl
adc
ret
adc
inc
psubsw
sbb
mov
fstl
sub
inc
sub
add
sbb
mov
jp
mov
or
push
cmp
shl
iret
lock
popf
stos
cmp
jbe
rclb
inc
into
cmp
in
cmp
cmpsl
xchg
subl
repz
or
pop
pushf
jge
dec
test
pop
shrb
pop
or
dec
or
mov
mov
xor
adc
xchg
xor
out
lret
sub
cmpsl
fprem
shlb
pop
roll
jl
pop
add
sbbl
cmovo
pop
lods
data16
dec
int
cmp
inc
ljmp
pop
xor
aam
or
and
mov
xor
fbld
pusha
ret
jg
xchg
call
aaa
sub
orb
in
std
xor
shlb
push
jg
mov
ss
andb
xchg
test
mov
pop
sub
aad
in
xlat
mov
jge
shll
jg
inc
inc
fdiv
pop
bound
mov
mov
adc
aas
call
jb
push
push
int3
mov
in
out
mov
dec
dec
sti
mov
aam
adc
scas
xor
rorb
add
pop
inc
inc
icebp
in
xchg
fiaddl
mov
push
enter
mov
xchg
dec
sub
dec
imul
xor
xor
and
out
mov
int
inc
les
xor
mov
push
push
fistpl
adc
inc
aaa
adc
xchg
mov
mov
pop
mov
rcl
hlt
mov
test
xor
ret
div
fistpll
ja
iret
jns
lahf
push
and
push
mov
and
cmp
adc
mov
pop
cmp
out
pop
jo
xlat
pop
mov
mov
jecxz
in
mov
or
dec
int3
adcb
sbb
das
dec
lds
insb
mov
andl
xor
push
das
in
sbb
sub
addb
cmp
ljmp
push
mov
testl
test
call
xlat
lock
pop
xchg
pop
sub
imul
les
mov
icebp
adc
shrd
push
xor
jbe
mov
jg
arpl
mov
mov
and
adc
sbb
xchg
sbb
pop
dec
cli
push
xchg
add
popf
xorw
cmpl
xchg
jae
jb
jp
loopne
dec
dec
shl
jle
cmp
cmp
xor
rcll
repz
nop
inc
outsb
sbb
std
sahf
pop
mov
dec
and
pop
in
lret
xchg
and
mov
and
xor
loopne,pn
in
jg
pop
cmp
sub
mov
int
pop
and
movsb
add
sub
adc
iret
fs
sahf
shr
shrb
clc
push
int3
jo
ljmp
dec
imull
aad
fucomi
arpl
rolb
push
mov
xchg
stc
icebp
jne
lods
push
nop
shrb
jbe
outsb
mov
inc
cmp
fcomps
test
xor
xorb
cs
stos
pop
add
jl
fsubrl
adc
scas
lret
popl
lods
push
inc
cmpsl
movsl
int
enter
repz
scas
mov
test
icebp
inc
lret
fcomp
insb
jo
or
mov
lahf
dec
pop
dec
xchg
sub
sarb
xchg
pop
outsl
imul
cmp
in
add
cltd
sub
and
mov
outsb
fdivs
jne
cmp
mov
mov
out
mov
repnz
iret
xlat
xchg
and
inc
xor
mov
and
mov
stos
cmp
int3
ds
add
scas
xor
ds
ret
ret
cwtl
jne
mov
jmp
repnz
lahf
rcll
add
out
adcl
into
clc
int3
rcrl
mov
push
mov
icebp
xlat
repz
jmp
insb
pop
jmp
cmp
out
rorb
mov
cwtl
jbe
mov
jmp
mov
leavew
mov
mov
fiaddl
lcall
out
jmp
dec
or
xlat
fildll
mov
dec
push
sbb
addb
repz
sbb
shrb
inc
add
mov
xor
repnz
pop
clc
push
jbe
inc
das
ret
test
mov
aam
add
outsl
push
mov
mov
aam
cmp
addr16
sti
xchg
into
das
pop
popa
sub
insl
jmp
mov
sbb
andl
mov
notb
iret
xor
pop
clc
mov
xor
lods
mov
mov
js
mov
mov
insl
ret
dec
xlat
popf
jns
shlb
jg
iret
mov
xchg
lods
arpl
js
mov
lahf
fiadds
xchg
arpl
pop
add
les
push
add
adc
cmp
pop
dec
mov
and
insb
movsl
pop
leave
push
dec
mov
ss
push
mov
das
enter
cmc
inc
push
sbb
or
pop
jp
cmp
out
mov
adcb
fstl
lahf
std
sbb
cld
or
jg
jnp
cmpsb
es
test
dec
sub
mov
scas
repz
lock
pop
stos
push
xchg
ss
dec
xor
rcrl
push
outsl
dec
inc
push
or
repnz
rcrl
mov
test
mov
push
data16
sub
pop
movsl
cmc
dec
movsb
pushf
xchg
int3
pusha
fmul
cltd
pop
pop
outsb
lahf
mov
lods
xor
scas
ret
outsb
clc
nop
mov
nop
loope
pop
cld
daa
push
es
mov
call
in
and
nop
stc
scas
imul
pop
or
add
cli
dec
push
xchg
lock
lock
mov
fstpl
rcll
clc
popa
cld
lcall
mov
xor
jo
dec
sarl
jg
bound
hlt
xor
repnz
cmp
jno
or
sub
mov
jns
pop
scas
adc
dec
sbb
in
js
sub
cmovno
or
insl
cmp
stos
mov
mov
xor
dec
push
test
mov
out
jno
jbe
jecxz
leave
pop
and
xor
mov
sub
das
xor
idivl
mov
jmp
and
ret
cmpsl
int
fcomi
ret
out
cwtl
sbb
iret
lret
adc
test
push
sbb
into
scas
jbe
imul
addl
ja
mov
sub
push
popf
xor
movsb
dec
xor
mov
xlat
jecxz
push
add
push
test
and
cwtl
and
cld
mov
sbb
inc
push
pop
mov
pop
into
cli
sbb
fsubs
adc
jns
dec
iret
movsl
sub
or
cld
loop
imul
fwait
dec
dec
cmp
dec
rcll
fcoml
sub
lret
clc
mov
test
decl
pop
mov
insb
jp
sbb
js
mov
rcrl
inc
dec
mov
mov
lods
arpl
cmpsl
shlb
das
cmpb
or
or
push
adc
arpl
outsb
and
and
pushf
jae
xor
rol
call
inc
sahf
sub
icebp
leave
add
loopne
subl
xchg
in
or
xchg
out
mov
add
pop
pop
fiaddl
push
fiadds
mov
mov
shlb
call
mov
cmp
inc
rclb
jl
sub
cmp
inc
lods
sub
decl
ret
pop
adc
ret
cmp
mov
or
fcomps
jl
pop
lret
xchg
pop
sbb
push
jo
push
push
fistps
mov
xchg
adc
dec
jl
xlat
push
int
sbb
and
sub
cld
fsubr
mov
negl
pop
sbb
lds
in
cmp
es
mov
add
sbb
xor
jl
push
ds
pop
jns
dec
test
or
jecxz
fisttpll
into
fs
xchg
jp
push
mov
rcll
movsb
ss
or
cltd
push
xchg
mov
inc
jmp
xor
cmp
ds
xor
aaa
addps
xor
hlt
jnp
cli
jne
data16
rorb
outsb
cwtl
jecxz
fwait
repnz
sbb
mov
or
outsl
dec
jecxz
and
jbe
pop
sahf
repnz
jg
ss
or
clc
push
stos
jnp
push
and
stos
mov
test
lret
mov
lahf
lea
jo
mov
jns
pop
mov
enter
sarb
clc
clc
sub
aas
fucomi
adc
loope
pop
leave
popa
cmc
cwtl
cmp
cmp
sbb
jb
outsl
sahf
mov
push
ret
js
mov
repz
xor
in
lods
sbb
inc
adc
inc
push
sbb
push
in
inc
add
sub
mov
mov
mov
clc
cwtl
xchg
pop
flds
addl
insl
sbb
adc
lcall
inc
arpl
adc
push
ficoml
dec
fbld
inc
shlb
arpl
mov
jge
or
test
mov
mov
mov
xchg
bsr
mov
mov
cld
jp
or
jno
cmpsb
idivl
add
mov
xchg
cmp
jnp
mov
sar
psadbw
sbb
pop
mov
in
push
gs
test
std
sbb
sahf
cmp
sbbb
aas
and
bound
pop
stos
xor
push
int3
jb
popf
outsb
jae
mov
pop
pop
mov
pusha
shlb
push
jmp
mov
lods
mov
xlat
rol
mov
inc
daa
cmovge
pop
hlt
push
or
add
pop
std
inc
mov
aad
dec
and
pop
popf
sarb
aad
adc
push
and
mov
and
fsts
mov
mov
add
inc
mov
mov
test
jle
lret
call
popa
xchg
imul
inc
mov
inc
mov
dec
or
sahf
or
push
rcl
xor
gs
cmp
xor
add
inc
and
mov
fidivl
aam
mov
mov
adc
or
gs
out
mov
loopne
test
cwtl
imul
das
sub
sub
push
jle
adc
cmp
xor
inc
inc
mov
mov
incb
jmp
xchg
es
dec
mov
ret
aam
imul
push
mov
scas
shlb
or
flds
xchg
mov
inc
or
cmp
inc
aam
cwtl
notb
in
adc
push
icebp
cwtl
push
push
xchg
xchg
cli
push
cmpsl
scas
movl
in
popa
call
out
sbb
cli
nop
cmp
sbb
cmp
jne
mov
pop
imul
test
fmul
inc
out
xchg
in
mov
in
jnp
pop
xor
sub
rcll
mov
pop
sub
std
xchg
fists
and
incl
int
push
sbb
mov
add
push
add
lret
test
test
mov
and
inc
pop
jns
int
popa
insb
lds
mov
push
push
push
fdivp
add
sub
push
mov
xchg
or
mov
ret
std
in
cmp
pushf
hlt
mov
jg
add
pop
xorl
sub
repz
xor
jne
aas
and
sahf
rcrl
adc
add
xlat
xchg
sbb
outsl
mov
leave
add
popf
pop
push
sar
in
aaa
sbb
out
and
bound
cli
xchg
mov
mov
or
lock
jp
mul
out
aas
push
adc
xlat
jl
xor
lcall
rorb
jmp
mov
mov
sbb
xor
push
js
adc
scas
jae
mov
sbb
dec
inc
sub
movsl
pop
mov
adc
daa
iret
adc
sbb
sbb
loopne
lock
insl
cmp
popa
xor
stos
fidivrl
fistps
test
pop
adc
dec
mov
sbb
inc
and
sahf
mov
jno
pop
dec
jecxz
dec
mov
cmpsl
iret
fs
lds
pop
iret
scas
jnp
mov
cmp
jge
les
mov
adc
adc
jge
mov
int
or
or
subb
sub
jl
mov
pop
insl
mov
stos
out
mov
adc
popa
cmc
andl
repnz
aad
mov
pusha
mov
leave
sbb
repnz
out
sub
in
cmpsb
add
cmp
push
adcb
lods
sbb
mov
adc
rclb
clc
mov
aam
clc
inc
dec
push
mov
fnsave
ror
fsts
loop
push
push
sub
pusha
xor
icebp
inc
dec
mov
or
rclb
or
mov
mov
jmp
adc
push
cli
loopne
les
or
es
pop
inc
ret
mov
ret
pop
or
imul
cmp
scas
cmp
jo
outsb
mov
jl
mov
shrl
push
push
fistpl
gs
in
jns
mov
pop
sbb
pop
pop
inc
dec
dec
sbb
mov
push
or
mov
and
ss
into
mov
mov
pop
cmp
sbb
test
ds
inc
inc
icebp
xchg
and
out
inc
cmp
adc
cmpsb
cmpsl
orl
or
lcall
cmpb
rcr
mov
jno
lret
imul
clc
jbe
cld
lock
gs
test
dec
out
fcom
cltd
call
sub
mov
sbb
mov
pop
aaa
imul
push
lock
dec
enter
xchg
pop
pop
cld
sbb
gs
lret
xor
test
insl
loop
adc
lds
loopne
pop
stos
test
inc
pop
enter
inc
dec
sub
lea
pop
gs
jne
mov
sbb
lock
pop
nop
mov
rcr
call
dec
cmp
lcall
fwait
popf
jp
sti
jae
mov
imul
insl
dec
mov
cli
mov
add
daa
lahf
ret
in
pop
into
mov
mov
mov
jg
xchg
addb
pop
sahf
imul
pushf
stc
mov
push
sub
ret
out
mov
jecxz
mov
mov
and
outsl
je
and
and
in
jo
ss
stos
in
lods
mov
mov
ficomps
fdivrs
jge
shrb
btc
leave
dec
mov
popa
out
das
fisubs
repz
jne
lods
imul
ja
movsb
cmp
push
lods
test
call
ret
into
popa
inc
cmc
test
mov
aam
pop
pusha
rclb
pusha
xchg
fistpll
inc
jmp
pop
ja
inc
sbb
rcrb
sub
sbb
push
negl
scas
inc
fisttpll
dec
lahf
adc
cmp
push
mov
stos
sbb
test
repnz
insb
and
orl
add
scas
mov
adc
dec
mov
les
mov
inc
lods
xchg
lcall
jne
sub
ljmp
or
mov
fs
push
pusha
roll
mov
jnp
sarl
push
jecxz
cmpsl
fcom
sbb
repz
lds
shlb
xor
dec
mov
rcrl
add
xor
pop
mov
cmp
sub
dec
fs
or
inc
jmp
jecxz
lcall
xchg
push
mov
rorl
sub
mov
int3
das
dec
stos
fcomps
inc
fs
stos
cmp
inc
and
xchg
jne
out
xchg
ror
fbstp
inc
xchg
out
in
mov
inc
jge
shl
xor
adcl
sbb
sub
mov
xchg
inc
sbb
xlat
int3
or
sbb
jp
lret
icebp
xchg
fcomi
pop
cmp
arpl
fildll
ljmp
stc
gs
or
popl
push
adc
sbb
leave
out
cwtl
add
pop
ljmp
sti
aas
push
xchg
test
adc
sub
jns
adc
sahf
cli
bound
imul
sub
addb
xchg
int
outsb
pusha
in
sbbl
jne
call
push
jnp
decl
cwtl
cmc
ds
mov
mov
xchg
pop
stc
cmp
jmp
dec
fwait
iret
aas
pushf
jmp
cmpsb
ja
ds
sbbb
jae
cmp
bound
movsl
push
sbb
aaa
push
repnz
lret
jge
lds
push
int3
xchg
mov
stos
sbb
push
leave
cltd
inc
call
mov
and
or
mov
stc
mov
bound
push
push
adc
add
enter
test
xor
das
add
sbb
int
ret
rcrl
imul
dec
pop
loop
stos
adcl
lret
imul
sti
andb
and
mov
xchg
loopne
test
push
test
mov
mov
pop
pop
pop
cmp
mov
out
frstor
mov
or
aad
js
xor
mov
fimuls
or
and
pop
ficoms
add
xor
out
aas
in
dec
imul
jmp
adc
mov
aaa
jae
pop
les
xchg
icebp
jecxz
cmp
pop
ficomps
movsl
jmp
mov
and
clc
mov
rcll
in
jp
stos
cmc
inc
imulb
adc
cmp
or
rcrb
lea
mov
or
dec
dec
jnp
xor
pop
mov
mov
mov
and
and
lock
or
dec
sti
inc
das
inc
push
jo
negl
sub
jnp
xor
loopne
je
add
inc
mov
pop
mov
adc
stos
cmp
xchg
ljmp
mov
int3
sub
cs
xchg
pushf
sbb
ss
sti
jle
test
inc
sub
jnp
scas
in
imul
xchg
jge
or
jnp
sub
js
loope
ud1
sti
jns
addr16
xchg
and
or
movsb
rcrb
test
pop
mov
imul
fistpll
mov
pop
adc
shrl
jne
push
jmp
or
repz
push
sti
add
fnstenv
lock
jbe
fsubr
clc
jb
fs
out
xchg
pusha
repnz
ljmp
and
shrb
icebp
pusha
je
rorl
nop
cmp
and
xor
fldt
sbb
nop
inc
mov
jg
hlt
ret
push
pop
imul
xchg
jae
jge
fistpl
arpl
movsb
jle
push
movsl
in
int3
repz
les
or
and
cmc
adc
or
pop
push
sti
ret
cmp
xchg
jnp
fbld
popa
sbb
mov
and
mov
and
xor
push
mull
cmp
mov
xchg
dec
cmp
xchg
mov
fstpt
iret
dec
and
enter
add
jne
les
pop
xor
aam
adc
mov
pusha
adc
stos
call
scas
outsl
arpl
addr16
pop
inc
mov
fisubl
inc
add
mov
dec
iret
push
rolb
mov
insb
push
sbb
imul
mov
mov
add
out
popf
fcmovnb
aaa
inc
test
push
fmull
ret
jle
faddp
mov
push
push
jb
push
mov
daa
jl
push
push
dec
cmovo
or
sbb
push
loopne
js
jge
arpl
jne
test
lock
stc
outsl
enter
or
ss
roll
sbb
or
mov
jne
or
push
sbb
pop
mov
in
ljmp
sub
or
add
dec
and
sbb
jecxz
inc
push
jo
ss
aam
xor
pop
jp
sub
mov
xchg
fidivl
jmp
mov
ffree
xor
lock
rorl
inc
stos
xlat
pop
fwait
lods
add
xchg
fucomi
jne
push
rcrb
mov
sbb
mov
clc
pop
mov
mov
dec
or
fs
fildll
mov
lds
je
test
rcll
add
inc
dec
and
ja
aaa
mov
outsl
daa
sbb
addr16
inc
mov
push
lods
ret
aas
jae
push
jno
roll
in
dec
cmp
aas
inc
cmpsl
add
push
mov
adc
xor
lock
xor
adcb
imul
sub
outsb
stos
rcrl
rcrb
subb
inc
mov
fisubs
cmp
and
sbb
or
push
xchg
insb
out
jnp
jno
xor
pop
and
nop
jecxz
jmp
sub
and
cmc
pop
push
pop
xchg
adc
xor
push
fdiv
mov
dec
lret
je
mov
in
and
shll
adc
lea
ljmp
or
aad
inc
ljmp
sub
and
int
loope
mov
mov
jne
jno
cmp
sbb
mov
daa
adc
loopne
ljmp
or
lock
pop
iret
adc
and
repnz
fs
leave
mulb
leave
roll
adc
addr16
cmp
hlt
mov
jbe
xor
push
or
sbb
int3
out
push
add
xor
xchg
mov
pop
adc
sbb
or
test
fidivs
lret
and
mov
sub
pop
arpl
or
ret
cmc
push
aam
push
push
shrb
xor
push
adc
js
sahf
cmpsl
addr16
push
and
inc
and
jns
data16
xchg
lock
sbb
adc
jnp
xor
mov
addr16
xor
mov
pop
mov
sbb
sarl
sub
adc
xchg
sub
mov
add
sub
mov
pop
mov
in
push
xchg
xlat
inc
or
jns
dec
ficompl
xchg
inc
enter
popf
mov
sub
pop
fiaddl
jns
sub
jecxz
sbb
lahf
lock
out
xchg
lods
mov
mov
sbb
and
mov
push
shrb
or
shrb
loop
cmpsb
jecxz
mov
iret
inc
jmp
jmp
lcall
lods
out
push
test
icebp
arpl
movsb
scas
js
aas
or
enter
jmp
xor
imul
cmp
repz
xor
mov
pop
dec
iret
leave
lods
sub
and
icebp
or
cmp
and
sub
mov
subb
xchg
inc
pop
aas
add
aad
cmpsb
cmp
and
jmp
or
xor
test
rcl
ljmp
push
sub
test
xchg
das
mov
jns
subl
fildl
imul
jl
fidivl
sahf
xor
out
and
xlat
ret
clc
shl
mov
loopne
sub
int
cli
ljmp
inc
and
mov
lahf
ret
andb
xchg
cli
cli
sbb
cmp
inc
out
lods
rcrb
mov
call
in
push
in
shlb
mov
adc
sub
and
pop
cld
sub
jb
jg
bound
pop
ror
jns
pop
fwait
push
inc
push
call
push
xchg
in
and
fistpl
push
movsb
mov
pop
mov
mov
mov
and
mov
int3
xchg
jmp
mov
inc
pop
shrl
mov
in
xor
jl
pop
clc
test
fildl
xchg
push
les
int
sahf
adc
inc
cmp
mov
into
xchg
gs
or
shl
pop
pop
fdivrs
xchg
cmpsb
cmp
fistps
sbb
sub
lods
mov
xor
jl
and
into
das
add
imul
sbb
jae
xchg
xor
vaddsd
stos
stc
xchg
jmp
jle
mov
or
insl
adc
aas
into
jp
jge
stc
stc
pushf
sub
cmp
adc
insb
push
jmp
mov
loope
inc
pop
jg
cmp
dec
hlt
cmp
in
hlt
xchg
loopne
dec
int
xchg
shrl
jge
inc
sbb
jne
movd
out
hlt
mov
inc
mov
shr
xor
push
addl
cmc
or
xchg
mov
dec
and
andb
fs
int3
jo
jecxz
insb
mov
fsts
push
pushf
aad
rcrb
movsl
jle
fcoms
insl
mov
jmp
and
sbb
mov
or
mov
mov
add
xorl
shll
enter
mov
pop
cmp
rolb
xchg
inc
sub
rorb
jne
mov
mov
dec
sub
xor
or
xchg
jecxz
jbe
fmuls
arpl
xor
cld
mov
mov
fisubrl
xor
and
arpl
cmpsl
add
ficoml
inc
pop
mov
xor
rclb
sub
xchg
mov
inc
and
rorb
add
cwtl
or
sub
int
into
pop
push
mov
cmpsl
sub
xor
add
mov
jb
sti
notl
data16
cwtl
mov
xor
cs
mov
fnsave
jg
xlat
movsb
pop
loop
ficompl
std
mov
nop
jecxz
xchg
out
add
mov
imul
push
sbb
subb
push
and
cmpsl
aaa
dec
test
adc
adc
stos
mov
mov
add
cli
push
mov
and
sbb
pop
push
xchg
jbe
ret
outsb
jecxz
cmp
pop
cmp
lds
push
adc
fstps
lahf
lret
mov
bswap
xchg
loope
sahf
shll
cmp
pop
mov
loop
fdivs
pop
jns
jnp
lret
mov
imul
push
lret
xor
xor
push
and
jg
gs
notl
in
mov
js
dec
push
fldenv
stc
cmp
mov
cmpsl
pop
and
lret
data16
inc
loop
adc
nop
xchg
adc
sarl
mov
aas
jle
ss
movsb
rorb
xchg
popf
push
jns
add
bound
dec
xchg
sub
jae
lods
shrb
jl
arpl
xor
cmp
adc
push
dec
lahf
sahf
and
xor
std
mov
cmp
pushf
push
test
push
movsb
loopne
xchg
aam
pop
inc
aam
sbb
xchg
inc
lods
adc
lods
aad
sahf
mov
lea
mov
fcompl
fwait
jmp
jge
ret
and
cmpsl
jp
mov
in
pop
ret
mov
mov
div
xchg
test
sbb
mov
nop
cmp
and
lds
push
inc
jo
cmc
pushf
out
push
inc
jle
pop
insb
xor
pop
rclb
dec
or
sbbb
iret
add
and
out
sti
rcl
loopne
out
mov
xchg
and
loope
jmp
daa
mov
lock
mov
sahf
mov
dec
xlat
cmp
shl
fadd
add
xor
addr16
adc
dec
lods
sub
sbb
add
mov
addl
pop
mov
sub
pop
fistpll
test
cld
mov
push
lcall
fidivrs
mov
add
popf
adc
mov
xchg
jno
test
cwtl
ret
xor
bound
popl
rorl
push
xor
sub
imul
jecxz
dec
cwtl
dec
mov
clc
dec
lcall
aam
push
push
push
sub
dec
in
lock
cli
fiadds
adc
js
cmp
jg
fbld
movsb
ret
cmpsl
and
pop
into
mov
imul
or
ja
mov
dec
dec
int3
and
hlt
pop
out
lret
mov
pusha
jg
push
xor
jno
loope
sahf
jl
pop
into
repz
rorw
test
es
sbb
jl
mov
push
push
sub
add
mov
cwtl
jp
jle
dec
imul
jmp
push
aas
jnp
int3
mov
jo
xchg
adc
adc
shlb
and
push
mov
inc
adc
jmp
xor
int
mov
cli
sub
push
xchg
ret
mov
loop
or
dec
inc
aam
dec
sbb
pusha
sahf
loop
jne
not
bound
or
pop
jmp
in
out
push
in
mov
add
xchg
fxtract
sarl
icebp
popf
int
mov
and
push
rorb
je,pn
push
mov
ljmp
int
push
lods
push
pop
mov
aas
adc
cmp
adc
xlat
jb
mov
aas
int
stos
mov
popf
pop
repz
int3
js
sbb
mov
ret
xchg
adc
lods
loop
fistps
test
dec
popa
sbb
jmp
and
scas
add
xor
xor
mov
pop
test
or
adc
sahf
pop
bound
pop
mov
scas
mov
sub
pushf
jmp
icebp
push
add
sub
inc
pop
pop
sub
lock
popl
call
and
lea
mov
cmp
sub
xorl
es
mov
push
leave
push
scas
or
sti
mov
mov
imul
or
push
mov
push
mov
jle
mov
mov
cwtl
xchg
or
outsb
sbb
icebp
and
mov
xchg
push
ljmp
or
jns
adc
gs
pop
fs
fwait
mov
mov
mov
lcall
xchg
cmp
jo
push
out
lahf
data16
ficomps
lock
pop
dec
rcll
into
sub
cli
pop
dec
mov
pop
mov
xor
fidivl
xchg
pop
sti
sti
pop
je
fsubrs
cmp
pop
sbb
std
push
outsl
inc
pop
jnp
insl
push
or
and
mov
or
cmp
sbb
xchg
sbb
add
adc
mov
mov
cmp
or
repz
xor
sbb
cltd
lcall
addr16
lret
sti
xchg
or
into
jmp
shlb
daa
andl
and
lahf
movsl
pop
inc
inc
pop
or
lahf
mov
mov
pop
ds
int
dec
out
adcl
sbb
negl
loope
lahf
inc
arpl
dec
pop
add
dec
popa
or
repz
sub
lds
jmp
in
and
lock
add
aam
sbb
enter
xor
jae
sbb
xchg
imul
sub
cld
mov
xchg
in
les
ljmp
sub
enter
fincstp
mov
jmp
mov
fistpll
nop
dec
ljmp
ss
inc
lods
dec
inc
and
aas
lods
jne
in
in
pop
push
cmp
xchg
ljmp
movsl
sbb
jmp
xchg
jae
pop
sub
subl
movsb
mov
mov
rol
push
clc
loop
fsts
or
imull
and
ret
lcall
hlt
cli
xor
mov
in
popa
sub
cltd
and
jmp
sbb
sub
mov
pop
cmp
pushf
lret
fmuls
mov
push
loope
repnz
xchg
dec
or
out
jmp
inc
jne
inc
mov
pop
enter
shll
mov
das
aas
push
stos
fistl
inc
xor
xor
icebp
xor
cld
out
idivb
arpl
cmpsb
xchg
scas
jp
pusha
inc
pop
daa
insb
mov
mov
imul
popa
mov
ss
jbe
insb
sub
sub
daa
xchg
jecxz
inc
rcll
mov
pop
into
ja
mov
cmpsb
sub
nop
and
fsubp
adc
aaa
mov
push
js
push
add
imulb
rcll
orl
in
test
shlb
repnz
xchg
scas
cltd
xchg
sarl
cmpsb
nop
dec
or
repz
push
adc
xorb
xchg
sbb
sbb
or
shlb
push
mov
in
test
jo
clc
cmp
add
dec
xor
es
push
xor
fs
sbb
jl
lea
xchg
insb
pusha
mov
mov
ds
mov
and
or
xor
sbb
xchg
jno
cmp
mov
pop
jne
daa
xchg
notl
loop
adc
in
int
add
adc
out
lret
insb
push
pushf
push
ret
pop
pop
adc
decl
cmpsb
fucomip
xor
shrb
cmp
loope
mov
push
mov
xchg
rcrb
pop
jbe
xor
shll
adc
aaa
cli
out
sarl
jae
enter
shlb
push
stc
pop
mov
sub
ja
dec
in
scas
pop
or
jle
sub
or
icebp
fwait
sti
and
imul
sbb
adcb
mov
and
sbbb
fs
mov
out
sbb
inc
iret
lahf
add
mov
sub
add
in
or
insl
mov
pop
shlb
gs
into
mov
pusha
ret
negl
push
xor
xchg
mov
inc
and
scas
sbb
inc
add
mov
xor
sub
xchg
cmp
rcrl
flds
inc
push
sub
xchg
int
leave
add
ljmp
adc
sub
lcall
outsb
int3
imul
xor
insb
sub
testl
jnp
adc
cmp
or
out
out
jmp
sub
lret
lods
xchg
sarl
nop
arpl
pop
fcomps
and
xor
bt
jg
cld
mov
and
pop
push
rolb
pushw
test
dec
int
xchg
shl
jecxz
fwait
mull
clc
adc
in
xor
int
xchg
icebp
lahf
jp
cmpsl
mov
cmp
jge
pushf
add
mov
xor
dec
out
add
cmc
int3
jp
mov
inc
adc
fcmovnu
fwait
or
mov
shl
adc
call
xchg
adc
mov
repnz
int3
jb
jb
jb
jb
bnd
shl
inc
sbb
adc
pop
dec
mov
cs
adc
mov
xor
sahf
jbe
mov
mov
mov
cs
iret
fidivrs
out
insl
cltd
enter
add
mov
sbb
sub
out
add
andl
sub
clc
repnz
cmp
mov
mov
mov
mov
adc
mov
cmp
jne
jg
cmp
iret
mov
pop
movsb
jg
arpl
outsb
push
ja
dec
jns
lock
sub
mov
push
cs
rcll
pop
lods
cld
pop
xchg
and
pop
and
imul
cmp
decl
add
pop
jne
mov
sbb
sub
out
shll
in
leave
adc
inc
dec
xchg
sub
add
mov
dec
xchg
or
jae
clc
pop
mov
inc
out
push
popa
adc
push
sbb
mov
sbb
repz
scas
fninit
data16
mov
mov
hlt
sarl
sbb
mov
xor
sub
jge
sub
icebp
push
mov
adc
or
cld
sbb
or
xchg
cmp
jmp
pop
cmc
sub
pop
gs
mov
mov
rcll
jge
lcall
add
outsl
lret
jecxz
jecxz
dec
insl
orl
dec
push
jb
cmp
pop
les
in
push
sbb
pop
fisubrl
loop
aaa
fstl
or
lds
scas
mov
pop
outsb
ret
dec
mov
shlb
sbb
insb
sbb
mov
mov
and
mov
pop
movsb
mov
xchg
aad
fstl
cli
rcrb
in
push
pop
out
mov
sub
insl
dec
fldcw
daa
jns
xchg
jae
mov
add
add
add
leave
mov
clc
sub
adc
pop
jae
mov
mov
popa
or
jmp
add
aaa
pop
jno
sbb
loop
dec
jae
add
sbb
xchg
xchg
imul
mov
les
and
dec
fnsave
mov
cwtl
je
out
in
icebp
pop
xchg
in
add
into
andl
sbb
decl
mov
sahf
jnp
sti
jbe
fsubl
sbb
pop
ss
popf
dec
dec
add
adc
or
pop
dec
xchg
ret
jno
lock
repnz
roll
sbb
or
inc
add
ljmp
add
add
ret
sbbl
cmpsl
fwait
nop
mov
in
ret
cmp
push
in
mov
aam
mov
add
xchg
daa
out
sub
in
fldt
dec
jecxz
popa
xor
mov
lcall
xor
adc
arpl
xchg
xchg
repz
addr16
ss
hlt
dec
push
insb
clc
push
test
scas
fs
ret
movsb
dec
fcoms
and
dec
insb
push
dec
adc
in
jp
ficoms
stos
xor
pop
adc
dec
jl
call
into
daa
neg
lret
dec
pop
xorl
pop
insl
insb
dec
push
rcrl
aad
dec
bound
sbb
sub
jg
iret
mov
adc
add
mov
mov
sub
mov
adc
adc
pop
les
scas
movb
or
and
dec
leave
test
add
addr16
ror
jb
inc
pop
and
xchg
leavew
lret
addr16
add
dec
cmp
xchg
or
lahf
adc
cmp
push
mov
fwait
jno
inc
fnstenv
cmovl
inc
cmpb
repz
cmpb
xchg
cmpsb
mov
stos
push
mov
out
dec
mov
es
into
and
nop
sbb
push
lods
dec
pop
negb
lcall
push
leave
repnz
mov
push
push
xchg
idivb
cmpsb
xchg
repz
call
cmpsl
mov
lea
jb
sub
cmp
repnz
mov
test
mov
mov
fisubl
jb
adc
push
xor
sahf
mov
mov
inc
subl
in
push
outsb
scas
cmp
dec
push
or
push
cmp
shll
les
xchg
insl
arpl
push
mov
fwait
mov
cmpl
loopne
stos
movsb
roll
fbstp
imul
jge
jle
ret
insl
push
sbb
inc
rcr
ds
adc
dec
imul
testl
clc
sarl
push
les
cmc
frstor
jb
ds
call
xor
jecxz
cmp
adc
pop
aam
add
movsb
loope
adc
adc
pop
stos
cwtl
clc
jge
in
in
adc
inc
adc
xchg
inc
inc
adc
or
push
insl
xchg
aad
push
mov
mov
testb
pushf
clc
push
pop
add
into
sahf
cmc
imul
mov
or
mov
stos
or
in
pop
cmc
ss
lods
lret
sbb
imul
adc
and
jae
sbb
out
dec
pushf
cld
push
mov
mov
push
push
sub
xchg
fldcw
adc
out
outsb
in
xor
jae
cmp
jge
pop
sub
xchg
mov
loop
and
jmp
sbb
leave
jno
lret
rol
jle
mov
add
and
daa
mov
lret
lahf
pop
outsl
xchg
mov
inc
pop
push
mov
push
shrl
and
sub
imul
xorl
cli
sbbl
in
sbb
out
fisttpll
int
xchg
inc
sahf
adcb
mov
pop
stc
sbb
jge
jne
dec
xchg
xor
xorl
add
int
mov
adc
and
cmp
out
push
insb
mov
mov
out
into
imul
mov
fdivs
enter
push
arpl
cmpsb
jno
cmp
cmp
jge
xor
arpl
movsb
stc
sub
mov
nop
mov
cmp
xchg
pop
sub
ja
pop
push
cld
mov
test
imul
xchg
insl
mov
inc
jle
inc
loope
arpl
and
stc
jg
add
or
jbe
adc
int3
xchg
lea
push
mov
in
js
mov
scas
aas
jb
push
sbb
pop
int3
int
add
adc
mov
out
xchg
add
pop
xchg
lock
cmp
cli
test
into
imul
sbb
xchg
test
sbb
bound
js
cwtl
mov
stc
cltd
cmp
pop
movsb
mov
inc
sbb
cmc
addr16
cmc
inc
sub
nop
add
sub
imul
sub
jo
pop
xor
sub
ss
ret
fdivrs
cli
addl
jbe
or
mov
scas
pushf
subb
mov
ss
dec
add
and
gs
loopne
out
mov
mov
loopne
cmpsb
pop
xor
sub
ja
loopne
popa
fidivrl
sub
out
cwtl
pop
aaa
add
xchg
ret
insb
lahf
sub
push
mov
pop
dec
xchg
add
test
dec
inc
jle
xor
xchg
sub
sub
xchg
clc
mov
aad
push
sbb
std
push
scas
dec
pop
insb
movsb
jne
or
mov
testb
leave
sbb
add
mov
std
jbe
loopne
ljmp
in
cmp
push
xchg
lods
and
mov
push
sbb
xor
lcall
fcompl
lods
ror
out
enter
out
mov
mov
pusha
add
jnp
push
jle
cmp
pop
inc
outsb
xchg
in
nop
out
cwtl
lea
dec
sahf
jle
ljmp
push
lcall
das
out
dec
lods
xchg
int3
lret
aam
adc
scas
jae
add
add
call
das
sti
jb
lea
adc
or
insl
adc
stos
mov
mov
data16
xor
inc
push
jb
inc
andb
clc
add
xor
stos
mov
cwtl
jge
dec
or
repz
sahf
cmp
pop
pop
push
cmpsl
out
or
pop
das
sub
inc
jne
push
orl
out
cmp
gs
jl
stos
stc
xchg
pop
inc
cld
js
mov
adc
vminss
push
ret
or
push
pop
mov
pop
add
pop
daa
fcomps
pop
js
adc
xor
mov
fcmovb
push
mov
or
inc
push
or
test
or
inc
mov
rolb
xchg
pop
mov
stc
cmpsl
ss
jge
mov
mov
insb
push
outsb
and
insb
jbe
pop
out
stc
mov
inc
xor
insl
rcrl
mov
mov
stos
cmp
scas
inc
cmp
and
pop
frstor
popf
lds
mov
sub
dec
xchg
inc
xor
inc
rcl
and
dec
or
inc
xchg
hlt
sub
movsb
in
shr
cmove
xor
outsb
dec
push
add
mov
out
xor
stc
or
mov
push
jo
push
mov
xor
sub
jb
fwait
sub
adc
pop
test
sbb
shrl
jb
adc
jb
repnz
mov
fdivr
lds
gs
cmp
xor
jle
insl
inc
or
ds
pop
gs
sbb
or
fwait
imull
jge
jecxz
push
lahf
in
sub
mov
int
push
dec
popw
dec
jp
push
mov
fwait
pop
js
ja
cmp
sbb
inc
mov
push
xchg
inc
mov
lret
pop
pop
xor
xor
lods
aad
jne
mov
add
xchg
jl
jno,pn
cld
xor
jno
ret
out
sar
push
jg
xor
flds
dec
bound
ret
mov
out
mov
jo
sarb
sub
scas
dec
cmp
bound
int3
andl
xor
sub
xchg
pusha
ucomiss
mov
popa
mov
and
mov
mov
and
sub
push
das
dec
mov
orl
ljmp
out
sub
xchg
inc
es
cld
dec
sbb
push
lods
aaa
pop
shl
rcrl
dec
xor
mov
aad
inc
repz
fdivl
pushf
inc
insl
adc
scas
xor
cmpsb
cmp
pusha
hlt
shrl
or
add
inc
in
insb
pop
cli
imul
repz
outsb
mov
push
int
sbb
in
daa
lcall
cmp
loopne
push
mov
lods
stos
mov
adc
stos
movsb
inc
mov
pusha
mov
cltd
ja
mov
cmc
sarl
imul
lret
push
push
jns
jne
and
mov
cvtps2pi
std
or
xchg
cli
js
nop
cmp
adc
sub
je
ret
mov
clc
in
sub
lods
jp
cmpb
ss
xchg
int
push
mov
xchg
sub
pop
aas
dec
jno
test
xlat
sahf
adc
dec
dec
insb
loope
loopne
test
inc
pop
cmp
mov
xor
outsb
les
push
aad
ficoml
into
dec
mov
adc
or
push
mov
arpl
push
out
adc
pop
in
push
mov
pop
inc
jo
hlt
mov
jle
stos
bound
nop
cmp
inc
xchg
mov
rclb
mov
mov
sub
sbb
lret
fdivs
cmp
stos
lods
test
sti
xor
sbb
sub
inc
jmp
xor
sub
jmp
jb
adc
in
cwtl
cmpsl
adc
push
xor
ret
sbb
mov
call
xchg
xchg
mov
aaa
repz
test
xchg
sub
jns,pn
es
jb
xchg
rol
ljmp
outsb
flds
mov
daa
push
cmp
xor
test
out
aad
lahf
jns
popa
push
xchg
dec
add
enter
adc
jecxz
add
iret
push
enter
mov
movsb
or
xor
fs
mov
cwtl
ficoms
inc
js
loop
mov
cs
adc
into
mov
bndstx
fcoms
inc
scas
test
pop
mov
imul
mov
jle
push
insl
test
mov
mov
mov
xchg
pop
xchg
and
cmp
insb
jecxz
aad
push
xchg
divl
scas
ja
js
jne
cmp
scas
stos
and
push
or
divb
pop
aaa
loopne
cmovbe
push
pop
pop
cmpsb
mov
pop
push
cs
lds
pop
mov
insl
stc
dec
sbb
xchg
lahf
xorl
lock
dec
pushl
pop
xlat
in
daa
and
push
fwait
sbb
mov
jns
out
push
gs
ljmp
call
mov
xor
lock
or
pop
imul
rcll
test
and
dec
pop
es
lock
aas
scas
popf
testl
sub
inc
fs
dec
push
xrelease
add
mov
and
mov
lock
cmp
in
sub
loop
adc
push
repnz
aaa
pop
mov
push
add
test
sbb
and
mov
outsl
or
out
dec
in
std
jne
mov
and
inc
or
xor
inc
shr
imul
push
xor
and
insl
or
stc
jnp
rorb
adc
fidivl
or
pop
mov
lods
push
dec
pop
sub
int3
out
insb
jnp
or
fldl
ljmp
mov
ret
repz
jae
andl
nop
data16
mov
lret
cmpsb
out
sbb
jmp
les
repz
lcall
sbb
dec
jns
pusha
mov
aad
repz
outsb
adc
push
test
sbb
shrb
fldt
jl
stos
or
decl
icebp
ret
ja
add
pusha
addr16
jg
faddp
sub
or
stos
push
sub
stos
or
jge
sbb
pop
fsubs
pop
jbe
rcl
dec
xor
ret
cmc
xor
sbb
jne
cmovnp
mov
jl
test
xchg
push
inc
jge
jae
stc
or
decl
aam
inc
loopne
pop
shlb
repz
lods
dec
mov
cmc
int
jmp
mov
scas
push
xchg
in
inc
xchg
and
mov
xorl
mov
arpl
loopne
aas
adc
pop
in
out
lcall
jo
in
sbbl
rcl
out
xchg
push
bound
mov
push
sub
enter
adc
cmp
dec
cld
ret
push
jb
bound
jmp
sarl
pop
iret
out
mov
push
pop
ss
or
rol
dec
insb
mov
add
pop
push
dec
cli
pop
xchg
adc
in
inc
pusha
aam
adc
movsl
pop
das
sbb
push
repz
fadd
pushf
les
cltd
enter
shr
push
sub
ret
pop
lds
test
std
sbb
sti
rol
pop
orl
popa
sbb
mov
pop
dec
mov
comiss
xchg
mov
sub
mov
cmp
mov
outsb
pop
adc
dec
pop
aas
xchg
xchg
fistl
iret
xchg
mov
sub
fdivl
pop
push
fsubrs
sti
xor
pop
fisttpl
frstor
inc
xchg
mov
adc
or
fs
scas
xlat
shlb
pop
inc
loope
cli
xchg
and
adc
gs
fucomi
in
jnp
cmp
sbb
repnz
icebp
push
xchg
mov
xchg
pop
xor
xchg
jecxz
push
sub
cwtl
or
xchg
and
lea
push
insl
inc
pushf
lds
cs
je
aam
in
scas
dec
lret
hlt
mov
popa
test
mov
pop
and
repz
fmulp
or
arpl
xchg
sti
xor
inc
pop
stos
lahf
loopne
dec
dec
jmp
dec
push
lret
mov
fdivp
pusha
xor
mov
xchg
xor
decl
out
and
and
inc
xor
scas
push
test
push
cmp
scas
es
lods
outsl
sti
insb
sbb
scas
mov
push
inc
cmpsb
xor
in
rorb
mov
lods
cmpsb
imul
jle
enter
lds
and
xchg
or
dec
and
outsb
cmp
in
cli
and
movsb
rol
mov
adc
lahf
push
cmpl
inc
fistpll
dec
into
test
idivl
pop
cwtl
popa
mov
mov
jmp
movsb
lcall
xchg
rcrb
xlat
sbb
cmpsl
sahf
inc
aas
or
in
pop
fs
lcall
pop
pushf
and
roll
das
jecxz
jp
jbe
or
and
sbb
sbbl
loope
mov
imul
fbstp
nop
in
mov
and
fwait
xor
jle
mov
inc
popf
jb
mov
outsb
cmp
dec
and
ds
popf
daa
aas
hlt
aaa
cmp
mov
rcr
mov
daa
push
inc
icebp
iret
or
xchg
cmp
sbb
loop
daa
cmp
or
lea
scas
inc
xchg
mov
pop
mov
aaa
hlt
ret
push
xchg
and
cmp
fisubl
mov
cltd
mulb
mov
les
sub
mov
jle
lcall
mov
adc
outsb
loopne
jb
pop
or
stos
inc
mov
test
mov
add
add
add
mov
pushf
ror
push
adc
inc
jmp
inc
jbe
dec
mov
mov
cmpsl
push
and
dec
fnstsw
mov
sbb
cld
sti
pushf
cld
xchg
addb
pop
movsb
nop
and
nop
cltd
or
repz
insl
in
outsb
popa
inc
push
or
mov
cmp
or
stc
pop
sbb
imul
mov
iret
xor
xlat
in
lock
jbe
mov
jge
push
pop
hlt
inc
data16
scas
push
das
ficoms
sub
sub
rcrb
xchg
scas
mov
xor
fnstsw
cmp
push
jge
pop
push
das
lret
aam
dec
inc
xor
jb
xchg
jo
mov
aaa
mov
imul
mov
popf
mov
out
push
mov
jno
or
sarb
je
sub
jns
cmpsb
add
xor
xlat
mov
jmp
out
andl
mov
cld
or
gs
jb
sbb
cmp
and
adc
test
cmp
xor
dec
clc
sub
and
mov
push
ljmp
pop
aad
add
test
mov
mov
nop
xchg
sub
sbb
fdivrs
xchg
xor
ljmp
ret
dec
mov
sbb
sbb
out
xchg
push
bound
mov
jnp
pop
sbb
and
and
mov
fldenv
shlb
push
fs
sub
and
lcall
movsl
push
roll
xor
shll
push
jns
pop
out
gs
push
push
movsl
add
out
jae
xchg
sbb
push
jge
or
mov
adc
jp
std
pop
stos
pop
aas
dec
pop
or
movsl
sbb
jle
or
lahf
and
subl
int
jg
xchg
loop
mov
stos
add
or
iret
fistpll
fistpl
cmpsb
xorl
pop
cmc
or
inc
sub
cmc
mov
testl
test
xchg
mov
outsb
pusha
or
test
out
jp
ljmp
lret
sub
cmp
aaa
dec
popa
rorl
cmc
jo
in
mov
hlt
jl
push
pop
fwait
stc
lahf
fstps
add
mov
lea
sbb
stos
mov
dec
xchg
cmp
enter
pop
mov
or
lds
or
roll
test
pop
cmp
mov
sbb
mov
fnstenv
mov
sbb
push
in
int3
cli
addr16
push
sbb
mov
aad
fsubrs
jl
ljmp
add
and
jbe
imul
ret
pop
cmp
mov
pop
enter
fs
sbb
cmp
mov
fucomi
je
push
pusha
pushf
mov
jge
push
cmp
cltd
clc
inc
xor
jmp
adc
or
cwtl
ret
dec
shll
pushf
jne
xchg
das
jg
sar
out
push
inc
mov
mov
mov
xchg
rdpmc
cmp
out
sub
ds
iret
jge
repz
cmp
in
sbb
loope
adc
aam
add
xacquire
dec
stos
lods
jnp
inc
test
pop
mov
insb
and
mov
insl
push
loop
mov
imul
mov
adc
mov
test
push
out
pop
cltd
jns
mov
mov
jns
mov
popf
push
sbb
imul
ljmp
adc
dec
fistpl
enter
pop
xchg
mov
test
inc
enter
jecxz
adc
imul
cltd
cs
not
sub
imul
sub
and
lods
dec
pop
mov
popa
fsub
iret
push
mov
in
adc
cmp
inc
icebp
cwtl
cwtl
icebp
mov
jns
sub
mov
push
int
gs
ficoms
hlt
sti
dec
xchg
xchg
outsl
andl
cmp
dec
cmp
arpl
inc
inc
add
mov
push
js
xor
ss
add
push
jb
push
cmc
xchg
pop
lret
inc
jnp
aam
dec
push
sbb
bound
mov
fdivp
pop
adc
mov
cmp
mov
and
lcall
popf
push
js
or
outsb
sub
sub
lock
sbb
imul
shrl
into
mov
pop
fwait
leave
mov
cld
cs
pop
es
test
jmp
popa
scas
fidivl
jmp
rcrb
ds
nop
fdiv
mov
sub
shlb
inc
sub
pop
shll
loope
pop
dec
sbb
test
je
orb
pop
lret
lds
inc
mov
sbb
cmp
and
pop
pop
jbe
sbb
jp
xchg
adc
or
sbb
add
add
aaa
aas
mov
cmp
jle
pop
jbe
jne
lcall
movsl
or
xchg
lea
outsb
xor
xchg
call
in
scas
test
aas
and
jnp
push
sub
adc
fldl
in
mov
imul
sub
repnz
shr
clc
push
es
outsb
in
imul
decl
lea
insb
or
rcll
pop
mov
mov
xchg
sbb
popf
and
inc
push
test
enter
and
in
inc
lods
inc
xchg
pop
sbb
pop
in
stos
pusha
outsl
icebp
lahf
dec
es
mov
xlat
mov
fsubl
sub
icebp
cmpsl
cmp
daa
mov
xor
xor
in
cwtl
xor
push
inc
mov
cmpsb
call
in
int
ret
add
jb
mov
mov
xor
std
mov
cmc
mov
xor
xor
cmp
mov
adc
push
loopne
test
mov
dec
xor
icebp
cltd
xchg
mov
inc
inc
addl
je
and
fisttpll
mov
and
mov
jmp
rcrb
dec
pop
fwait
pop
enter
dec
clc
add
dec
in
mov
sub
ret
push
imul
push
insl
cltd
push
inc
add
push
sub
add
sbb
mov
cmp
filds
pop
push
rcrb
mulb
mov
sahf
lock
dec
imull
je
cmp
lods
imul
dec
pop
xlat
jl
dec
js
pop
roll
or
test
jo,pn
cld
jbe
sub
scas
les
ljmp
outsl
inc
ja
sub
pop
fcoms
enter
shrb
js
iret
test
aad
test
mov
ret
iret
into
pop
and
or
xchg
scas
pop
push
xlat
push
les
xor
push
fs
cmpl
hlt
je
daa
lods
and
xchg
dec
inc
sub
sub
sbb
dec
cwtl
rcll
dec
scas
cmp
sti
mov
das
pop
les
and
aad
ds
push
popf
dec
in
loopne
sbb
pop
mov
daa
sbb
and
lcall
dec
adcb
pop
sbb
loopne
mov
fwait
pop
jl
lods
ret
in
jno
or
or
mov
inc
jb
inc
leave
subl
xchg
ss
out
jnp
inc
jno
lods
add
dec
sbb
push
xor
mov
pop
sub
push
jge
into
lea
sub
push
mov
add
sub
cld
inc
mov
sub
ret
mov
or
push
pop
cmp
and
fsubrl
mov
lret
fisubrl
or
mov
pop
cmp
out
sbb
dec
daa
cmpsl
lods
jecxz
mov
xor
xor
out
mov
ret
dec
jns
stc
cmp
dec
adc
hlt
jnp
scas
inc
imul
mov
xchg
sbb
in
dec
js
repz
and
ret
and
mov
ret
fstps
dec
iret
dec
mov
add
repz
scas
insb
in
mov
popl
jg
xchg
mov
xchg
imul
jge
rcrl
and
in
pop
scas
lods
and
pop
fists
test
aas
sbbl
lea
stos
mov
lss
xchg
pop
int
in
ret
dec
mov
push
dec
fildl
dec
stos
xor
and
cli
adc
movl
mov
pop
sahf
cwtl
add
adc
mov
and
dec
xchg
sbb
sbb
add
inc
lock
in
lods
insb
dec
outsl
mov
sub
cs
add
inc
xchg
xlat
jge
jge
push
and
insl
cmpsl
jecxz
les
cmpsb
ja
jo
adc
dec
and
fists
xchg
mov
out
push
push
or
pop
mov
pop
jnp,pn
pop
popa
sarb
and
mov
xchg
adc
dec
pop
mov
mov
enter
xor
subl
adc
aam
in
imul
cli
mov
lret
adc
js
push
cli
outsb
jae
mov
jb
jno
out
repnz
jp
sbb
shrb
push
popa
aam
js
ss
sub
sub
mov
lock
mov
xlat
lret
dec
jnp
cld
shlb
inc
sbb
sbb
cmpsl
dec
ficoms
xlat
mov
cld
mov
arpl
adc
roll
aam
cs
xchg
dec
scas
and
inc
jg
adc
dec
out
jae
xchg
mov
addr16
sbb
loopne
dec
sti
jmp
lret
ja
pop
xor
cwtl
mov
mov
rorl
mov
stc
repnz
addb
test
fdivrs
mov
sbb
ret
sub
repnz
popf
inc
push
inc
adc
imull
sub
rolb
rolb
lock
ljmp
fsub
add
mull
add
cmpsl
fcompl
ret
or
and
js
push
insb
xor
jbe
push
cld
jne
fnstenv
inc
jmp
xchg
je
mov
fmuls
lods
sub
sub
lods
js
jmp
cmp
mov
sub
xchg
mov
test
xchg
in
push
push
xchg
fcomi
mov
es
mov
repnz
lea
jp
add
movsb
add
mov
push
and
adc
daa
test
outsl
jno
push
jae
or
pop
cmc
lahf
imul
loopne
mov
cmp
sub
cmp
pop
inc
das
loopne
movsl
mov
mov
xlat
push
dec
and
jnp
adc
mov
and
push
mov
adc
lcall
pusha
adc
ret
inc
or
mov
push
cmp
add
lret
push
xchg
fsubs
test
push
or
sbb
pop
ds
mov
pop
stos
push
push
or
pop
shrl
xchg
test
pop
int3
xor
pusha
dec
sub
mov
imul
adc
icebp
aad
addl
int
pop
nop
or
outsb
ret
inc
jne
dec
enter
mull
cmp
repz
dec
xchg
repz
mov
xchg
push
add
sub
enter
push
xor
add
fucom
mov
jnp
sahf
jnp
cmp
pop
mov
pop
cmc
mov
loopne
mov
push
dec
lods
xchg
fsub
fs
in
dec
xor
push
insl
push
jle
test
or
decb
loopne
xor
jmp
xchg
in
pop
jmp
pop
daa
inc
push
jae
push
sbb
aas
pop
push
mov
mov
jl
aas
and
pop
out
lret
add
mov
shrb
fdivr
out
rcrb
sub
scas
pop
mov
sbb
clc
outsl
ret
std
inc
dec
jp
insl
push
stos
repz
adc
mov
push
push
fdivs
xor
add
loop
jmp
lods
out
jg
cwtl
aam
mov
sub
mov
pop
lret
jbe
inc
push
insl
inc
xchg
cld
test
test
cs
lea
fwait
jbe
subl
test
mov
repz
jmp
adc
mov
lcall
sub
adc
dec
mov
jbe
data16
nop
xor
mov
push
lea
or
mov
shll
ret
adc
push
int
jg
mov
add
js
push
or
icebp
fcompp
or
xlat
insb
xor
push
sub
ja
sbb
stc
cwtl
pop
lock
int
xchg
dec
inc
jnp
jno
imul
mov
or
and
rcll
inc
rorl
ja
cmp
inc
insb
mov
fidivl
mov
push
pop
addb
sahf
mov
mov
jmp
popf
inc
cmpsb
dec
mov
and
mov
fldt
dec
rolb
mov
adc
icebp
jns
call
jno
jnp
pop
psubb
outsb
mov
sub
fsubl
shrl
fisttpll
cmp
adc
pusha
mov
das
dec
add
insl
inc
dec
mov
aaa
jbe
and
jl
push
shll
addr16
enter
xchg
loop
cmp
cld
mov
loope
cld
arpl
xchg
leave
mov
or
sti
stos
lds
sar
mov
add
add
fld
movsb
jnp
mov
xchg
aad
out
shlb
imul
dec
psrad
repnz
aaa
mov
bound
mov
mov
cmp
divb
inc
inc
repz
and
loop
ss
mov
sub
or
cmpl
or
pop
adc
call
add
pop
mov
lds
enter
push
push
pop
xor
jae
mov
movsl
mov
fcoms
jp
mov
jmp
es
jne
out
xchg
mov
sbb
pusha
cld
insb
outsl
gs
and
mov
mov
mov
mov
xor
shrb
cmp
inc
or
pop
xchg
outsb
fwait
xlat
sbb
call
cltd
mov
ss
lret
scas
push
bound
dec
add
jbe
sub
jbe
jecxz
outsb
sub
loopne
jle
push
leave
jge
out
out
fbld
ljmp
cli
or
test
dec
xor
pusha
jnp
mov
pop
fs
xchg
xlat
xlat
pop
xchg
pop
and
outsl
inc
loopne
jae
push
sar
imul
test
jmp
sbb
fimuls
andb
pop
adc
fsubrs
cmp
out
push
int3
pop
adc
lahf
add
sbb
dec
arpl
push
xor
arpl
and
arpl
shl
repnz
jne
mov
mov
nop
insb
pop
jns
fisubrl
test
xchg
dec
aas
pop
js
xchg
push
incb
shl
xchg
inc
xor
inc
test
pop
dec
cmc
arpl
popf
imul
jge
cld
xchg
shl
and
std
xorb
jbe
out
dec
stc
cmpb
shrb
iret
sahf
adc
push
testb
mov
cmp
jns
aam
je
push
mov
lea
hlt
mov
sbb
push
jno
cmp
inc
sbbl
mov
push
xchg
imul
and
inc
test
gs
in
cmp
rorl
fildl
cmp
nop
fs
cmp
xlat
scas
push
pop
xor
sub
dec
push
xchg
and
xchg
pop
nop
and
nop
ja
pop
lods
cmp
out
rcl
es
sarb
std
mov
cltd
jbe
inc
nop
push
mov
pop
mov
adc
repz
out
cld
outsb
push
lds
gs
xchg
adc
mov
int3
pop
cmp
adc
or
fbld
xor
sbb
sbb
imul
adc
sub
mov
mov
mov
mov
int3
daa
mov
in
arpl
cmp
push
xor
pusha
xor
hlt
or
insl
ja
add
xchg
or
lahf
inc
jg
shlb
scas
sub
enter
repz
sub
data16
lcall
adc
inc
notb
roll
clc
xor
aad
sbb
in
sub
popf
or
and
fwait
in
and
call
stos
mov
sbbl
into
adc
jbe
push
arpl
and
xlat
adc
outsb
cmpsl
mov
and
xchg
pop
and
add
push
enter
in
cmpsb
add
adc
or
push
sahf
insl
sarl
dec
mov
dec
push
sub
daa
sub
ret
xchg
mov
das
jmp
xlat
cmc
imul
adc
test
in
and
pop
jge
mov
lods
into
iret
push
and
mov
or
cwtl
mov
dec
cmp
xor
cli
xchg
mov
mov
enter
aam
out
push
mov
lea
jb
out
sbb
xor
movsl
dec
push
and
addb
pop
xor
or
add
xor
sub
cmp
mov
cmpb
add
cmp
fs
push
xor
push
ret
dec
xchg
test
jo
or
push
add
dec
aam
mov
out
add
xor
arpl
mov
repz
sahf
cld
cmpsl
aam
cmp
call
hlt
jae
mov
ret
push
xor
rorl
inc
shl
je
inc
xchg
bound
or
adc
pop
mov
mov
arpl
popf
mov
pushl
int
lret
lcall
and
add
mov
icebp
dec
pop
insb
push
cmp
push
cmp
je
lds
or
sbb
sar
fwait
ss
cwtl
jl
mov
int
sub
mov
ljmp
stos
out
xor
inc
call
inc
jne
mov
sub
inc
mov
mov
inc
sub
push
add
test
in
loop
inc
mov
ja
jg
punpckhwd
pop
stos
js
or
dec
pop
mov
imul
mov
mov
mov
int
dec
sub
add
rolb
sti
mov
adc
mov
jns
sbb
cld
pop
xchg
sti
aaa
addr16
fisttpll
jb
scas
push
cmp
xchg
or
outsl
pop
int
popa
mov
inc
add
ret
or
sub
into
jbe
cmp
out
arpl
xchg
movsl
adc
dec
rorb
gs
xchg
cs
test
test
enter
xor
mov
test
clc
xchg
cmp
popf
lret
insb
push
jp
mov
dec
data16
mov
sub
add
jno
stos
sub
xchg
inc
sbb
xor
mov
out
xchg
mov
loope
les
xchg
testl
inc
and
push
insl
mov
js
xlat
out
roll
xchg
pop
xchg
adc
jne
addr16
in
add
add
sub
push
dec
adc
lret
and
pusha
and
add
jp
subb
sub
sub
xor
sub
sbb
pop
aam
rol
in
mov
or
sbb
stc
outsb
cmp
ficoms
cmp
bnd
decb
inc
inc
cmp
mov
or
pop
jne
mov
lods
adc
push
ret
sub
mov
or
pushf
jmp
test
imul
inc
imul
mov
xchg
lea
test
out
cmp
data16
sub
inc
fcom
xchg
inc
test
test
pop
pop
fstps
int3
popf
adc
mov
dec
fistpll
sahf
les
divl
add
daa
rorb
sbbl
movsb
add
jmp
shrl
imul
dec
cmp
lds
lods
push
xchg
xchg
jg
ja
cmp
push
sub
pop
ljmp
push
xchg
fmuls
mov
sarb
sbb
jg
mov
jnp
iret
push
enter
aad
daa
push
xchg
int
daa
sahf
aam
mov
fsubs
xor
out
pushf
sub
mov
mov
inc
inc
es
push
pop
call
leave
pop
cli
fadds
icebp
or
ret
mov
sub
mov
sbb
paddusb
adc
imul
jae
stos
test
push
lock
jmp
testb
rcrb
sub
les
sbb
push
ret
or
pop
and
or
jge
popl
adc
jno
pop
mov
in
and
jg
ja
mov
fdiv
mov
flds
push
mov
mov
mov
lds
or
xchg
adc
popf
cmc
cmp
add
xchg
das
daa
movsl
icebp
push
scas
cmp
mov
xorl
imul
xchg
dec
push
xchg
ffreep
dec
insb
leave
in
sub
add
push
jmp
xchg
xor
icebp
inc
inc
nop
xlat
mov
cmp
xor
scas
sub
sbb
sub
in
pop
sub
jge
pop
test
jmp
sbb
sub
mov
lcall
not
add
insb
sub
shr
push
xor
std
or
shl
out
mulb
test
xchg
xor
adc
jnp
xchg
jg
popa
sub
xor
movsb
xchg
dec
add
mov
paddb
jb
call
jae
addb
lods
jl
scas
mov
xchg
call
push
pusha
scas
push
dec
stos
aad
cli
outsl
out
mov
push
xchg
mov
stc
and
jge
mov
scas
xchg
ret
or
add
mov
inc
mov
repnz
xchg
dec
in
andb
mov
mov
loop
arpl
dec
mov
xor
or
or
enter
or
and
mov
push
cltd
cmpsl
lods
mov
dec
insb
into
loop
sbb
push
jnp
popf
sub
xorb
dec
sbbb
fwait
outsb
ds
push
pop
mov
lret
lret
xchg
dec
mov
cmp
xor
sbbl
mov
outsl
ss
in
mov
shlb
test
and
adc
cmp
jl
and
inc
cmp
insb
jg
inc
fdivl
or
xor
mov
mov
jns
jp
ret
xchg
mov
mov
push
sbb
out
test
inc
push
insb
dec
push
inc
jge
inc
mov
fcomps
cmpsl
in
fdivrp
and
imul
rorl
and
sbb
cmpsl
orl
popf
cmp
clc
cmp
xchg
mov
or
in
stos
cmp
xchg
ficoms
dec
sbb
mov
inc
mov
xchg
mov
loope
dec
and
lret
imul
lock
inc
mov
repz
sahf
adc
ret
sub
bound
sbb
test
idiv
sbbl
lock
lcall
scas
fstp
insb
mov
shrl
and
pop
mov
sbb
adc
imul
cmp
test
pop
jae
insb
mov
mov
xchg
cmp
outsb
jp
adc
and
in
jo
test
scas
aam
fnstsw
mov
shr
ret
gs
movnti
pop
cld
adc
pusha
inc
jns
ror
sbb
enter
arpl
andb
jp
sub
insb
scas
cmp
out
push
jnp
sub
call
mov
roll
insl
fwait
push
outsl
xor
dec
sbb
pop
mov
jae
dec
mov
adcl
dec
or
loope
dec
dec
xor
push
and
sti
jbe
or
dec
push
mov
mov
mov
xor
push
test
out
add
xor
dec
inc
testb
adc
xchg
push
sbb
push
adc
lcall
pusha
lds
dec
push
xor
mov
sti
push
push
push
pop
add
pop
pop
shlb
test
mov
rcrl
lods
xchg
dec
add
add
je
call
and
out
jne
push
ror
xchg
inc
cwtl
lcall
cmp
repnz
add
loopne
adc
in
pop
rorb
loop
iret
lret
mov
push
std
pop
mov
fnstsw
out
xchg
mov
loop
jbe
cmp
cmp
js
mov
mov
out
hlt
xchg
add
cmp
sarl
xor
lods
outsb
mov
cmp
push
inc
loope
jmp
xchg
sub
inc
or
sub
xchg
les
aad
sub
mov
sub
clc
push
add
pop
clc
pop
cltd
or
sub
push
pop
pop
xor
or
dec
jnp
cmpsl
mov
loope
pushf
mov
pop
cmp
jecxz
scas
sbbb
jae
enter
lea
sbb
xor
xlat
cmpsl
movb
mov
sti
sub
lock
imul
jb
sub
dec
push
and
sub
xor
jb
fisubrl
mov
fcmovbe
fisubrl
stc
pushf
add
cmp
orb
cmp
jns
adc
adc
fildl
enter
scas
xchg
mov
lds
cmp
leave
mov
pusha
stc
das
mov
jl
mov
nop
cmpsl
dec
movsb
dec
pop
xchg
fists
and
sub
out
or
jmp
push
xlat
decl
jmp
xchg
fldcw
xchg
add
idivb
cmp
xor
inc
sahf
adc
dec
cmpsl
call
push
sti
xchg
pop
insl
lods
jno
pop
add
aaa
fldt
mov
add
js
shrb
mov
mov
arpl
cltd
into
dec
shlb
xchg
fimull
mov
mov
in
and
mov
loope
and
jge
mov
loope
dec
cmp
inc
adc
outsl
adc
cmpsl
int3
aaa
jge
or
test
les
inc
ss
ja
nop
add
mov
lcall
or
imul
es
mov
adc
in
cmp
fdivrs
shlb
std
jecxz
cmpsb
mov
push
mov
rorb
xchg
arpl
adc
cmp
push
movsl
dec
or
jne
es
mov
push
out
ss
inc
cmp
or
sub
jmp
dec
scas
mov
test
mov
xchg
int
mov
fsubrl
faddl
mov
mov
adc
aad
iret
fiadds
into
mov
pop
popf
testl
test
pusha
aad
sarl
test
int3
push
xchg
bound
daa
mov
stos
dec
adc
push
push
dec
mov
xchg
nop
ffreep
mov
in
sbb
sub
adc
es
mov
dec
or
cmpsl
bound
push
jae
mov
fcmovbe
jbe
imul
jecxz
enter
cmp
pop
loop
shll
pop
jnp
cmc
and
bound
mov
dec
xor
jne
lds
cmp
jge
nop
ja
pop
aad
stc
imul
movsb
mov
push
scas
add
lret
push
arpl
push
imul
ds
adc
lea
add
adc
popl
incb
inc
gs
jp
jle
int3
sar
dec
loop
jp
out
fwait
push
sbb
adc
jmp
dec
in
ljmp
icebp
mov
push
les
or
andb
mov
or
jle
dec
call
std
xchg
sbb
fldt
add
cmp
testl
notb
mov
cmp
out
add
sbb
ljmp
inc
sub
sbb
js
movnti
andw
stos
leave
and
add
or
mov
mov
dec
sub
std
test
adc
mov
mov
dec
mov
fwait
xor
mov
jns
test
loop
cmp
outsl
sbb
or
adc
add
mov
loopne
out
xchg
les
ficomps
mov
and
dec
repz
and
jp
cmp
sub
and
popa
xor
fcoml
cltd
cmpsb
lods
pop
push
repz
dec
sub
mov
popf
scas
shrb
jns
rclb
inc
daa
adc
int
movsl
std
lock
cld
mov
xor
xchg
jg
and
loope
loope
into
pushf
add
xlat
jmp
pop
sbb
addr16
dec
xchg
sbb
std
loopne
in
push
negl
adc
mov
pop
sar
outsb
add
pop
mov
push
mov
mov
push
xor
xor
daa
jp
adcb
inc
cmp
out
das
out
out
sub
pop
iret
push
ret
arpl
xchg
mov
or
mov
push
movsb
outsl
cmc
inc
test
cld
add
push
mov
sub
mov
jl
enter
es
adc
daa
in
mov
fsqrt
mov
push
push
push
ljmp
bound
lcall
cld
mov
push
popa
fisubrs
jmp
js,pt
mov
lea
inc
into
in
call
and
lds
std
leave
mov
sub
and
mov
outsl
rolb
or
fisubs
test
xchg
out
fs
or
cmpsb
xor
iret
mov
jnp
or
cld
inc
lcall
or
es
divl
inc
imul
cmp
je
cli
loopne
inc
mov
stos
jge
mov
sahf
imul
cmp
pop
mov
jmp
les
aam
addr16
pop
xchg
mov
lods
call
sahf
cld
int3
icebp
addr16
push
mov
rcl
jecxz
xchg
sub
mov
pop
and
mov
push
loopne
test
test
das
sbb
fmull
jmp
xchg
sub
sbb
sub
leave
inc
pop
loop
jno
out
in
push
fucomip
jl
jae
mov
dec
test
arpl
cmc
mov
insl
adc
fsubrs
pop
pop
pop
push
sahf
push
sub
pop
xor
cmpsl
jg
inc
cmp
push
xorb
ljmp
xor
pusha
fst
sbb
push
gs
adc
push
or
loope
mov
ss
out
roll
pop
into
sar
sarb
xchg
faddl
movsb
outsb
sbb
xor
push
cld
push
cmc
xchg
xchg
loopne
iret
mov
test
outsl
adc
popf
pop
xchg
test
sub
sub
mov
mov
sub
fldl
xlat
xchg
jl,pn
shr
mov
push
insl
repz
insl
ret
sbb
ret
lahf
imul
pop
pop
in
dec
lea
add
outsl
fildl
inc
fsubs
mov
xchg
sub
mov
pop
xor
int
rol
notb
jl
cmp
push
loope
subb
jns,pn
outsb
sbb
repnz
xor
jl
mov
fdiv
aad
xor
aam
sbbl
dec
xor
adc
imul
outsb
punpckldq
and
repnz
cmp
jmp
ficoml
inc
clc
xor
jne
cmp
mov
push
or
iret
sub
mov
bound
jecxz
nop
scas
addb
cli
or
leave
jns
cld
iret
cmp
pusha
mov
nop
pop
cltd
adc
out
aam
addr16
adc
stos
push
movsb
jg
add
mov
or
and
sub
jbe
inc
into
xchg
pop
adc
push
pushf
dec
loopne
xor
insb
jae
sbb
cmp
call
sbb
data16
jmp
sti
xor
pop
or
cmp
lret
mov
dec
cmp
repz
push
mov
and
xchg
out
xchg
in
ud1
and
ja
and
or
cmc
xchg
stc
push
sbb
bound
jbe
cwtl
stos
xor
orl
ret
xchg
jns
in
inc
cmc
or
shrl
insl
pop
mov
mov
daa
push
bnd
mov
dec
insb
sbb
xchg
or
imul
test
push
loop
insl
in
xor
push
in
fs
fs
sbb
jne
pop
outsb
flds
sub
cs
mov
mov
dec
fdivl
pop
jecxz
mov
bt
insb
dec
dec
nop
push
bound
fcomi
cmc
and
jp
jbe
push
xchg
lcall
in
mov
or
sbb
stc
and
mov
ret
add
mov
jns
inc
in
or
and
in
cwtl
inc
jle
and
test
out
movsl
sahf
cmp
mov
pop
mov
and
sbb
add
cwtl
mov
fistpl
jecxz
push
stos
dec
fldl
add
and
pop
xchg
pop
out
push
lea
js
sbb
adc
mov
aaa
repz
add
popl
push
icebp
cmp
loopne
out
add
jge
xchg
ret
dec
sarl
icebp
xchg
mov
fisttps
cmova
std
and
mov
push
incl
jge
mov
adc
mov
fnstenv
mov
mov
cmp
push
inc
shll
sbb
mov
xor
dec
lahf
mov
xchg
cmpsl
pop
imul
scas
aas
call
leave
mov
and
in
gs
adc
add
mov
xor
adc
enter
pop
mov
adc
push
jns
jle
sbb
imulb
xor
dec
pop
mov
xor
jecxz
aaa
xor
and
inc
movsl
sub
scas
push
in
roll
test
fnstcw
es
mov
pop
out
cld
aam
xor
test
addl
xor
js
and
push
out
jp
int3
loopne
stos
subl
dec
aad
fwait
out
dec
add
adc
mov
jg
push
mov
stc
mov
or
je
lahf
enter
enter
pop
sti
sub
sub
mov
test
mov
lret
inc
jmp
ljmp
or
dec
add
sub
push
dec
or
xor
cld
push
jbe
mov
mov
ficoms
je
repz
mov
or
and
out
add
push
mov
push
xchg
test
imul
inc
xchg
es
and
adc
mov
xchg
in
int3
imul
loop
mov
sub
jb
loop
repz
mov
lret
dec
push
or
mov
pop
cmp
les
das
add
push
inc
xlat
fisubrl
ljmp
mov
into
xor
mov
hlt
cwtl
adc
dec
and
jnp
adc
mov
cmc
pop
or
sbb
pop
into
or
adc
adc
mov
loop
out
sahf
fwait
pop
ja
jecxz
pop
pop
inc
loope
cs
pushf
fimull
xchg
push
loope
mov
sti
das
movsb
int3
iret
iret
mov
pusha
push
pop
in
in
test
mov
sahf
mov
repnz
adc
push
or
and
push
or
xchg
popf
cmpsl
mov
fnsave
or
subl
test
mov
test
shrl
mov
fimuls
loopne
fdivl
push
mov
push
push
imul
cmp
out
pop
xchg
pop
je
xchg
sub
mov
jl
dec
icebp
mov
or
or
add
cmp
add
scas
dec
xchg
adc
js
sbb
add
enter
or
inc
out
or
and
inc
sbb
sub
bound
out
jns
cltd
mov
xchg
adc
scas
add
inc
sub
jae
cmpsb
sarl
into
xchg
popa
adc
sub
lock
data16
or
pop
outsb
mov
lods
jo
clc
ds
shll
xor
push
mov
pop
pop
push
jbe
fcomp
push
pop
mov
jg,pt
sbb
pusha
je
dec
push
sar
jg
mov
jle
jl
jg
push
mov
lcall
mov
push
mov
push
or
mov
scas
dec
testb
shrb
sbb
arpl
dec
jle
adc
mov
mov
dec
inc
repnz
out
scas
sbb
sub
int
es
dec
dec
das
outsl
adc
out
add
add
les
into
cmp
popa
push
lret
ljmp
push
xor
xchg
xchg
mov
out
mov
dec
push
out
sbb
fimuls
dec
or
sub
inc
xor
cli
js
fcoms
mov
dec
mov
aam
and
jp
rolb
lret
and
insl
xchg
insl
fcomps
pop
sub
insl
test
lret
sarl
std
pop
jbe
aaa
or
loope
dec
inc
xor
gs
mov
adc
addr16
mov
mov
mov
xchg
inc
mov
test
inc
in
rcr
xchg
xchg
adc
ret
and
jge
pop
pop
popf
adc
push
repz
pop
mov
shrb
inc
mov
call
mov
push
outsb
repnz
xchg
adc
and
mov
int3
pop
sbb
rcrl
xor
lcall
out
sbb
test
fwait
pop
mov
add
adcb
mov
sbb
lret
ret
ja
arpl
push
mov
popf
adc
std
popf
jp
xor
hlt
frstor
mov
push
or
ret
pop
loopne
xlat
add
jb
fs
xchg
iret
mov
js
rclb
in
enter
enter
dec
or
xor
jae
xlat
xor
roll
and
and
and
xlat
cmpsl
out
divl
mov
out
mov
rol
pop
mov
cmp
cmpsb
add
aaa
push
cs
cs
push
xor
cmp
mov
add
stos
cltd
das
adc
adc
insb
pop
aas
pop
hlt
sub
push
mov
xor
lahf
in
int
add
shl
xchg
movntps
cmp
or
or
push
mov
push
ds
test
push
in
pop
and
cld
jnp
les
pop
lahf
int
adc
loopne
xchg
pop
enter
push
jmp
fildl
cmp
loope
vpunpckhdq
sub
aam
sub
pop
pop
mov
fisttpl
movsb
jbe
jmp
add
ror
shll
inc
addr16
or
sbb
inc
xor
inc
in
mov
cmp
iret
add
sti
pop
bound
fcoml
mov
mov
adc
mov
orl
pop
pop
idivb
stc
mov
xor
aas
enter
out
lret
add
clc
xchg
negb
addr16
sbb
push
mov
hlt
icebp
adc
js
jb
cs
jb
inc
cltd
inc
jmp
hlt
cmp
adc
xchg
or
or
jno
cmpl
lret
add
jp
cltd
xchg
xchg
data16
pop
sub
jnp
push
popf
dec
sahf
out
bound
add
pop
sub
aad
incl
sbb
cmp
push
lahf
add
push
adc
mov
xchg
xchg
jg
dec
xchg
mov
daa
insl
pop
cmp
imul
lods
mov
lret
xlat
adc
cmp
je
test
insl
rclb
mov
cmp
cmc
ds
mov
sbb
dec
xchg
adc
dec
sub
neg
shr
jno
ret
addr16
sbb
pop
or
ret
inc
add
movsl
imul
fmuls
jb
adc
mov
andl
js
aas
jne
mov
decb
pusha
andb
and
fsts
mov
ret
xchg
xor
aad
add
out
add
jnp
jle
fcomps
cs
mov
outsb
leave
leave
jne
lahf
jbe
xor
and
fwait
hlt
mov
scas
daa
hlt
jmp
push
sahf
xor
rclb
jo
and
dec
or
or
notb
imul
dec
and
mov
orb
and
lret
xchg
cltd
cmc
adcb
mov
faddl
lret
cmp
leave
or
lock
inc
xchg
mov
mov
xlat
jecxz
xchg
icebp
pop
std
imul
ret
dec
repnz
cmpsl
mov
adc
cli
addl
dec
inc
jg
xor
ss
sub
push
pop
in
add
mov
sub
inc
jne
xchg
sub
jmp
dec
sub
ja
push
data16
mov
mov
je
ret
cwtl
push
rol
arpl
dec
in
add
inc
xor
dec
pop
inc
xchg
fsubs
jl
xchg
jle
dec
adc
mov
cmp
mov
cmp
jo
sbb
std
or
js
sbb
lret
ss
hlt
xor
jne
addr16
cmpsb
xchg
dec
mov
xor
imul
sbb
fs
daa
jb
fcomps
gs
stos
jl
fmull
fcmove
mov
stos
testl
jns
sub
fwait
sti
sbb
sbb
fsubs
mov
jle
xor
inc
mov
and
jle
ret
lods
xorb
mov
jg
imul
roll
adc
push
sub
bound
std
scas
sahf
mov
xchg
mov
pop
adcb
cmp
loop
out
mov
test
sub
stc
subl
sbb
inc
lret
xor
sbb
dec
pushf
push
lahf
sub
movsb
test
cld
pushl
lds
jp
jmp
adc
lea
or
fstl
push
ret
sub
and
mov
mov
cmp
test
int3
in
inc
sbb
rorl
inc
mov
lahf
out
xchg
dec
mov
outsb
cmp
inc
mov
fisttps
push
ss
add
dec
hlt
cmpsb
jge
pusha
shr
inc
fdivrl
mov
icebp
inc
xchg
loop
in
outsb
aas
add
mov
and
jge
out
cmp
xor
ja
dec
mov
or
in
ss
stos
xchg
mov
dec
out
rolb
fdivs
cmp
cmp
lret
iret
push
cld
or
mov
sahf
xor
push
pop
xchg
arpl
cmpl
faddl
in
imul
and
nop
arpl
mov
mov
xlat
ret
inc
inc
sbbb
sti
stos
or
mov
popa
inc
adc
pop
xor
jo
lods
in
add
adc
xor
movl
loope
xchg
lcall
and
inc
mov
xor
ret
dec
lods
xchg
dec
rolb
loopne
jl
ret
movsl
mov
inc
cld
je
shlb
dec
stos
jecxz
mov
xchg
adc
or
cmp
cltd
push
sub
mov
inc
std
ja
lds
xchg
leave
scas
xchg
sbb
mov
int
xor
xchg
add
mov
and
xchg
xor
and
xor
pop
movsl
js
mov
ret
sbb
push
lods
xchg
push
shrb
fadds
lods
xchg
test
add
and
xchg
dec
push
pop
mov
mov
push
xchg
into
add
enter
lret
xchg
pop
test
js
dec
movsb
sub
sub
cs
cwtl
inc
mov
test
call
adc
cmpl
jns
or
push
mov
jbe
int3
inc
jae
mov
popa
and
jo
in
xor
mov
mov
or
jno
push
mov
add
and
cmp
xchg
cmp
cmp
subb
dec
js
scas
jp
pusha
add
pop
cmp
cmp
xor
mov
sub
lds
lds
xor
loopne
mov
pushf
imul
cltd
call
hlt
xchg
test
jecxz
mov
out
mov
aas
add
shr
hlt
xor
cld
and
push
iret
es
test
mov
xchg
orb
cmp
repz
mov
pop
mov
or
xor
mov
aad
call
jnp
fwait
aas
jbe
lds
nop
mov
in
mov
loop
test
ret
jbe
rcrl
sub
icebp
pop
lods
xor
push
in
pop
into
or
rcrb
mov
dec
cmp
ss
test
add
add
imul
insb
sbb
imul
xor
jo
inc
lcall
ror
enter
xlat
jnp
cmp
frstor
out
cld
mov
xchg
sbb
in
bound
je
jns
call
mov
hlt
sbb
fcmovnu
loop
cmc
pop
push
push
std
lds
mov
jmp
imul
jb
pop
rorb
mov
add
mov
enter
out
mov
lret
fidivl
pop
xchg
les
aad
rcll
lahf
cmpsl
mov
mov
mov
sarb
xor
setbe
mov
lcall
cli
fucomp
mov
xor
dec
mov
mov
or
in
cs
leave
cld
dec
jp
push
test
lods
vrsqrtps
ret
outsb
sti
divl
in
mov
lods
les
arpl
enter
out
insl
subb
out
push
mov
popf
mov
cmp
loop
inc
sub
nop
aaa
dec
lds
jne
js
and
mov
cli
mov
pop
call
dec
dec
and
sub
and
fiaddl
add
adc
divl
mov
push
mov
ds
bound
mov
xor
lods
sub
loope
cmp
add
mulb
sbb
and
jo
sbb
movsl
rolb
cmpsb
jne
daa
inc
inc
and
cwtl
xor
add
imul
mov
loop
popf
in
sbb
jnp
sbb
pop
lods
out
mov
xor
dec
rcrb
int3
shll
inc
push
mov
xchg
dec
dec
mov
out
sbb
mov
push
or
or
push
push
pusha
push
xchg
pop
lods
adc
movsl
cli
cmp
jae
adc
xchg
xchg
cmp
cli
stc
sbb
daa
push
mov
sti
push
jns
fmuls
addr16
sbbb
stos
sbb
push
out
test
ljmp
jp
and
add
xor
insl
or
arpl
test
xchg
cli
adcl
cmp
mov
fisubrs
dec
rcll
dec
stos
in
and
leave
inc
or
aam
pusha
sub
ret
jne
pop
xor
movsb
movsb
jnp
pusha
xchg
inc
divb
jecxz
nop
outsb
sub
ret
adc
lcall
jecxz
mov
pusha
je
jmp
sti
jle
pop
pop
lods
pop
sub
decl
lock
ds
je
std
or
loop
outsb
sbb
or
rolb
pop
je
loop
pop
jbe
mov
or
mov
and
push
add
mov
xorl
sar
push
ljmp
cltd
xorl
div
inc
pop
inc
js
int
xlat
xor
push
gs
mov
sbb
jnp
jmp
dec
dec
inc
cmp
push
or
xchg
sbb
ret
mov
inc
popf
or
add
daa
jbe
cmpsl
andl
jle
jge
xor
mov
dec
popf
and
xor
mov
xor
xchg
clc
fistpl
fiadds
das
notl
clc
pop
adc
rcrb
xchg
rolb
and
repz
int
daa
jne
enter
ret
jge
dec
mov
test
leave
jmp
fdivrs
xor
repz
xor
loopne
push
cmp
xchg
add
add
inc
mov
clc
orb
int3
mov
jecxz
iret
sbb
xlat
test
jae
enterw
outsl
pop
push
push
sub
jae
insb
jecxz
sbb
addr16
test
dec
xor
aas
arpl
jae
pop
dec
mov
sbb
rcl
shl
sub
cmp
sub
js
imul
leave
pop
mov
fs
lock
mov
xlat
mov
aaa
mov
fidivrl
xchg
pop
lock
mov
out
add
mov
xor
mov
pop
out
xchg
cld
sub
arpl
dec
inc
pop
stc
mov
mov
jne
fadds
sbb
cmp
fdivrl
fcomp
fisttpll
ret
mov
adc
or
xor
aas
and
aaa
dec
fdivrs
lea
mov
test
dec
subb
adc
enter
int3
xor
fistpl
jo
call
lds
test
adc
dec
fmull
jg
stos
sbb
and
shrb
enter
into
ret
pop
js
pop
jbe
pop
lret
push
sub
jae
and
jne
mov
popf
mov
ss
pop
negl
testl
xchg
addb
push
or
dec
pop
push
xchg
fwait
int3
sahf
call
popf
pop
cmp
mov
sub
rol
cmp
jmp
sbb
mov
jecxz
xchg
fiadds
push
stos
ss
popf
lahf
fcom
imul
cmp
jecxz
mov
ja
fcomps
decl
sub
push
adc
mov
and
xchg
cmp
xchg
pop
jp
inc
cmp
lea
test
push
das
imul
movsb
pusha
sahf
jl
or
popa
inc
mov
mov
aad
clc
fcoml
movsl
jns
shlb
add
inc
mov
jns
lds
push
into
jecxz
pop
mov
jnp
mov
push
mov
pop
sbb
mov
xchg
or
insb
push
or
xchg
cmpsb
xchg
dec
cmp
scas
push
or
out
inc
jns
stc
mov
subb
dec
push
or
mov
inc
mov
push
popf
xchg
mov
cld
out
cmp
xchg
test
mov
in
pop
scas
xchg
inc
loop
inc
lea
rcrl
sti
call
mov
cmc
aaa
add
push
mov
fwait
mov
jae
jl
dec
mov
popf
outsb
mov
inc
clc
inc
lods
xchg
jl
divl
lahf
xchg
aaa
cmc
jo
jecxz
inc
cmpsl
ja
jp
shrl
int3
mov
dec
stos
xlat
mov
mov
inc
mov
sbb
out
inc
inc
repnz
hlt
test
cmp
jo
mov
mov
movsb
cmpsl
test
hlt
pop
xor
faddp
mov
xchg
pcmpgtb
je
test
out
imul
insl
push
add
fsubl
test
dec
fisubs
xchg
test
and
dec
cmc
in
into
mov
cmpsb
rorl
jmp
aaa
test
popf
adc
into
test
cwtl
divl
xchg
lahf
call
loopne
push
repnz
repnz
sub
sti
repnz
loope
jns
iret
dec
push
xchg
pop
sti
rcrb
in
je
pusha
popf
inc
xchg
jge
sub
rcrb
adc
jl
or
or
ret
pop
ret
pushf
mov
inc
inc
jno
sahf
adc
xchg
pop
cli
rcll
roll
arpl
icebp
data16
sar
loope
xchg
pop
cld
fisttpl
lea
cmp
jl
inc
add
cltd
fs
sub
roll
enter
adc
lret
dec
mov
sti
scas
mov
inc
jp
jg
adc
stc
inc
mov
mov
cld
out
dec
pop
push
fsubl
pop
add
out
lea
or
adc
cmp
sbbl
and
lret
mov
clc
jb
sbb
mov
mov
daa
stc
xor
jne
mov
aaa
jle
xor
mov
pop
ficoml
dec
scas
mov
lea
cmpsl
jbe
sbb
jo
jg
scas
push
jge
pushf
ds
movsl
mov
xor
xor
push
rcrb
into
lds
flds
cmp
and
sub
cmpl
pop
jbe
ret
movups
ret
ljmp
xorb
inc
icebp
push
cld
or
popf
cmp
and
clc
mov
cmp
out
fistl
divb
pop
xchg
dec
jl
push
jbe
jle
ja
clc
push
sub
fwait
ljmp
push
insb
push
sub
daa
addb
ds
int
jle
add
sub
inc
xchg
shrb
add
aaa
mov
mov
push
lcall
addb
xor
mov
imul
cmp
jp
test
in
xchg
and
mov
data16
pop
xor
xchg
lock
fmuls
fld1
sbb
cmp
cltd
dec
repz
in
mov
mov
sti
add
nop
inc
and
sti
fisubs
mov
or
pushf
or
cmp
stos
mov
movsb
mov
repnz
xor
or
jecxz
xor
rcrb
dec
sti
mov
or
mov
aam
pop
icebp
lock
mov
mov
pop
fmull
add
jnp
ja
inc
mov
xchg
test
add
lock
jmp
push
push
loopne
imul
adc
sub
dec
sahf
ja
daa
lods
mov
ret
in
data16
jb
add
mov
out
pusha
xchg
mov
xor
mov
lret
incl
out
add
or
idivl
ret
rcr
jne
xchg
xor
sbb
xor
cmp
clc
dec
pop
aaa
sahf
addr16
cmc
add
stos
icebp
jmp
push
sbb
mov
push
in
fld
jge
jmp
push
in
mov
movb
push
dec
dec
adc
lcall
push
aam
push
push
popf
mov
jae
add
dec
in
pop
dec
out
jne
out
ffreep
loopne
adc
in
in
insl
pop
ljmp
xor
inc
jge
sub
mov
ficompl
xor
test
push
pop
pop
popa
mov
addr16
outsl
push
sub
xchg
jne
lret
inc
loope
jecxz
mov
lds
cltd
xor
dec
and
arpl
pop
mov
jmp
das
sahf
mov
data16
int
adc
or
mull
xchg
jno
xchg
int
in
cmpsl
icebp
dec
ret
xor
js
aas
pushf
inc
and
jbe
push
sbb
adc
mov
add
rol
ljmp
adc
aad
js
inc
idivb
mov
mov
rclb
jmp
cwtl
jb
cmp
sub
cwtl
mov
shl
cli
popf
dec
mov
adcb
daa
aas
sub
push
insb
lret
arpl
cmp
lahf
insb
pop
pop
nop
andb
mov
ja
cmp
mov
push
pop
arpl
add
dec
aaa
mov
ret
sbb
loop
lods
sub
pushf
or
int3
xor
js
sarl
in
bound
ficoml
lret
icebp
movl
cld
in
sti
ret
insl
leave
mov
lahf
scas
cs
mov
mov
xchg
and
sbb
mov
repnz
jo
mov
mov
lahf
mov
mov
lods
xchg
push
or
mov
xor
stc
imul
aaa
aad
negl
lret
les
loop
jle
daa
out
std
xor
lods
or
sbb
push
jae
pop
ret
neg
pop
ja
xchg
lock
aaa
mov
push
sub
fcoml
dec
clc
test
mov
mov
sbb
and
divb
inc
not
notb
dec
ss
mov
push
test
lods
shll
shlb
popf
jmp
bound
stc
fistps
dec
pop
cwtl
rorl
cmp
jge
and
jno
add
xorb
test
outsl
sub
or
jp
fdivs
sbb
sbb
loope
push
sbb
add
or
jge
mov
push
stos
and
rol
pop
scas
jbe
fmul
outsl
sti
adc
cmc
xchg
jp
es
aaa
mov
mul
adc
testb
mov
ret
inc
jl
addr16
jne
and
xchg
add
iret
fs
or
arpl
push
xchg
pop
rcrb
adc
aas
sub
cmp
jns
xchg
add
add
and
out
test
jg
mov
xchg
lret
xor
dec
mov
mov
pop
fsubs
notb
jns
fldl
sbb
inc
addr16
cmc
in
xor
cmp
cmp
les
jne
pop
adc
insb
daa
popf
push
lahf
icebp
mov
popa
das
xor
insl
push
xor
push
adc
adc
sahf
jb
repz
int3
pusha
push
out
lcall
adc
ds
lods
add
imul
fcmove
sub
adc
cmp
loop
push
nop
sub
adc
ret
push
jne
inc
sub
das
in
inc
aam
pop
out
pop
xorl
mov
inc
lock
cli
or
xchg
loope
jbe
inc
mov
mov
cltd
xchg
in
pop
cmpsl
fs
xlat
sti
or
dec
sub
pop
push
shrb
mov
sahf
mov
call
ja
pop
mov
xorl
movsb
jmp
ja
loope
pop
xorl
lods
push
ds
pop
cmc
fisubrs
add
inc
xchg
inc
cmc
into
loope
fldt
xor
test
mov
cmpsl
dec
lcall
stos
jne
xchg
gs
pop
dec
push
test
stos
jl
xlat
flds
mov
mov
push
push
out
imulb
pusha
arpl
in
cmp
out
jl
mov
setb
lods
scas
jne
icebp
mov
fbld
sbb
pop
aad
xchg
loopne
sbb
sahf
es
adc
fstps
addr16
scas
cmc
rcll
adc
dec
fidivl
sub
sbb
into
sub
lcall
sub
jl
data16
mov
jae
and
push
pop
sbb
rcrl
jmp
and
push
push
rcll
insb
pop
aaa
hlt
out
sub
test
stos
dec
out
xor
in
aam
dec
push
dec
cmp
inc
sbb
xchg
fnstenv
pop
push
push
jl
adc
fdiv
mov
pop
gs
scas
in
sub
fs
ss
push
addr16
push
je
jl
idivl
add
or
dec
fisubs
jae
xchg
ljmp
orl
ret
loop
subl
rorl
insl
aam
das
pop
fucom
lock
jnp
leave
or
pop
sub
or
sbb
pop
pop
sub
insb
push
sub
pop
loope
push
cltd
mov
and
fwait
in
mov
aaa
jne
pand
scas
movsb
add
pusha
push
fwait
imulb
jge
adc
out
lds
lods
jle
pushf
out
jae
mov
out
or
lds
test
mov
cmp
sub
push
fimull
mov
popf
ss
or
dec
aas
in
out
mov
xchg
jne
lcall
out
sub
sbb
pop
rorl
mov
mov
test
out
pushf
out
scas
xchg
leave
pop
jo
nop
jns
pushf
add
and
int3
sub
movsl
or
xor
arpl
lahf
sub
int3
cmpsl
rclb
inc
shll
adc
xor
lret
and
push
pop
cld
mov
pop
dec
scas
std
push
push
adc
sub
mov
fwait
dec
ljmp
cmc
lahf
cmpsb
imul
loopne
popl
les
fwait
dec
ds
mov
sub
xor
sub
mov
or
or
xor
xchg
cwtl
cmpsl
filds
out
mov
repnz
lahf
cmpsl
addr16
mov
adc
inc
test
lret
imul
jbe
idiv
or
gs
pop
mov
pop
or
push
loopne
push
adc
lods
aaa
push
rcl
mov
rol
call
mov
rclb
icebp
notb
mov
jl
sbb
popa
cmp
mov
jnp
add
andl
movsl
loop
cwtl
imul
outsb
push
mov
out
adc
out
xor
cmp
jae
clc
dec
popa
leave
inc
mov
bound
push
mov
rcll
idivb
push
jge
test
cmp
in
test
imul
sub
jne
mov
rcll
push
add
xlat
call
cli
lret
rcrb
rol
mov
dec
lods
imul
jb
or
pop
sub
int
or
xor
adc
ljmp
stos
in
in
mov
xor
out
int3
pop
xor
xor
xchg
and
add
fdivl
sarl
xchg
xchg
daa
pop
jb
inc
push
push
adc
jae
pushf
test
inc
sahf
icebp
dec
jo
scas
dec
pop
cmp
dec
cltd
lock
ss
ljmp
sbb
repz
sub
js
jae
add
pop
aam
je
rol
aam
fwait
jl
cmp
sub
mov
xchg
mov
filds
mov
outsl
dec
mov
push
stos
adc
pop
loopne
in
ds
pop
pop
mov
adc
mov
mov
or
ret
das
add
rcr
stc
mov
int3
stos
pop
lea
push
fnstsw
loopne
scas
mov
notl
sub
call
push
sub
shrb
frstor
sbb
lahf
testl
push
test
jae
pusha
mov
popa
mov
fwait
sbb
rorl
cmpsb
fcompl
iret
cmp
cli
jb
push
adc
jae
sbb
arpl
jb
test
pop
and
adc
jmp
fsubs
jecxz
int
in
push
sub
mov
add
ljmp
adc
stc
adcl
jge
das
or
pop
jp
ljmp
inc
xor
daa
push
xor
faddl
mov
sbb
push
mov
push
sbb
and
stc
out
iret
das
add
adc
dec
leave
cltd
lds
scas
dec
fs
mov
outsb
jecxz
fs
pop
repz
push
add
push
cmp
sub
dec
daa
repnz
inc
inc
subb
movsb
lcall
lds
mov
mov
and
jecxz
sbb
ss
das
and
add
fstpt
pop
fsubl
pop
imul
mov
adc
dec
jae
jle
loopne
add
inc
adc
jno
pop
adc
in
sbb
pop
fnstenv
xchg
fdiv
jecxz
inc
cmpsb
scas
mov
mov
sbb
jg
xor
test
test
mov
iret
sub
cmpsl
dec
add
or
aad
int3
push
push
imul
cmc
dec
arpl
int3
lock
xchg
xlat
push
mov
leave
sbb
clc
cmp
xchg
dec
lahf
out
imul
push
push
jae
push
jge
mov
cltd
scas
push
cmp
fstps
mov
or
clc
add
subl
push
test
dec
loopne
out
subl
cwtl
popa
test
arpl
jnp
in
aaa
xchg
jmp
or
test
data16
sbb
sti
jns
in
stc
clc
gs
pop
icebp
xchg
inc
pop
loopne
bound
cwtl
mov
rorl
jle
and
dec
or
xchg
icebp
jmp
insb
sub
jb
fsts
bound
sahf
or
adcb
sub
sub
xor
out
xchg
and
jae
jg
push
xlat
or
fdivl
das
roll
push
push
test
js
mov
negl
jecxz
aas
xor
int3
inc
stos
mov
push
std
sahf
fldcw
pop
rcrl
je
in
loopne
repz
mov
in
pushf
push
jmp
jae
sub
dec
push
popl
dec
xchg
or
and
pop
dec
je
pop
cwtl
jno
das
sub
inc
add
push
inc
mov
push
adc
jo
push
jl
call
mov
fldenv
xor
stos
push
lds
dec
addr16
push
pop
mov
xlat
jecxz
push
ljmp
repz
push
lret
in
mov
lcall
jns
loopne
mov
into
ja
aas
fscale
cmc
push
cmp
and
cmp
jg
xchg
frstor
fistps
arpl
mov
in
cmp
rcrb
xchg
add
cli
mov
sti
inc
lcall
sahf
movl
push
add
push
sub
and
fs
sub
jp
and
out
ja
push
sbb
xchg
push
jno
int
test
or
dec
mov
or
adc
pop
fwait
add
cmc
out
out
add
sub
add
push
sbb
push
sub
not
mov
inc
inc
ds
mov
test
or
mov
dec
test
loope
add
pop
sbb
js
cmp
or
cwtl
inc
fs
push
scas
fnsave
mov
adc
adc
or
jns
lods
notl
aad
adcl
aaa
lods
cmp
cmp
test
outsl
cs
insb
xchg
jp
sti
sbb
pusha
fldcw
push
lock
dec
jg
pop
in
adc
outsb
push
mov
jge
jmp
push
dec
mov
xchg
mov
pop
dec
out
adc
int
adc
repz
rcrl
mov
mov
cmp
mov
adc
mov
leave
cmp
leave
cmpsl
mov
bnd
outsb
enter
cmp
out
jmp
addr16
adc
cli
pcmpgtb
inc
dec
or
mov
push
outsl
loop
lock
dec
inc
jmp
adc
lcall
pop
and
or
stos
jge
test
pusha
pop
es
cmp
jae
rcrl
push
cltd
inc
cltd
std
mov
sbb
paddusw
sbb
cmp
jnp
push
cmp
jae
cmp
mov
sahf
adc
pop
cmpb
cmp
mov
cmp
dec
dec
jae
lods
dec
icebp
ret
aaa
add
sub
cli
pop
and
lret
rorb
in
stos
and
or
lods
scas
lods
push
sti
push
mov
mov
and
sbb
cmp
insl
aaa
icebp
jg
mov
fiadds
mov
add
arpl
cli
mov
aas
mov
jle
jmp
cmp
cmc
bound
push
mov
mov
mov
mov
xchg
incl
fisttpll
add
lahf
sbb
jbe
testl
mov
mov
adc
mov
sarl
and
mov
aaa
mov
jno
mov
cmpsl
sbb
cmp
fnstcw
cld
pop
loope
cltd
in
mov
adc
and
int
pop
add
addb
movb
sub
pop
pop
mov
arpl
rcll
lds
ljmp
xchg
jg,pt
dec
ja
outsb
add
enter
fwait
stc
jle
neg
inc
in
popa
and
cmpsl
and
stos
cmc
ret
adc
or
stos
mov
xchg
mov
test
iret
inc
cmp
sbb
and
loopne
xor
add
int
shlb
jno
jl
sbb
sbb
pushf
sbb
lcall
out
hlt
pushf
mov
jecxz
out
xor
test
rcrl
int
inc
cmp
sti
sti
jmp
cli
aam
fs
ret
inc
pop
data16
mov
outsb
ja
xorl
jecxz
mov
stos
rcrb
dec
pop
shrb
mov
mov
mov
out
cmp
rorl
orb
add
lret
mov
push
jns
or
mov
pop
nop
mov
jge
lds
sbb
sub
and
rcrl
xchg
sti
pop
xchg
mov
fwait
jb
loop
adc
aaa
inc
mov
cmp
mov
stc
cltd
int
dec
mov
insb
lock
arpl
pop
cmpsb
sbb
push
decl
xlat
sbb
push
mov
jns
dec
fisttps
std
out
cmp
sub
mov
push
push
mov
push
adc
xor
and
nop
gs
dec
mov
shlb
cmp
jne
push
sub
les
cli
mov
aad
sub
push
and
por
jnp
mov
xor
test
jecxz
fdivl
cmpsl
mov
inc
xor
mov
adc
aas
add
jae
xchg
psubsb
hlt
inc
mov
adc
leave
les
add
add
add
xlat
dec
adc
lock
iret
jno
or
mov
or
out
dec
cmp
lock
mov
in
adc
xchg
push
ljmp
nop
daa
clc
jmp
cs
mov
mov
and
xchg
jmp
movl
lret
add
mov
dec
aam
arpl
mov
push
movsb
js
push
nop
push
fnstsw
les
imul
inc
stos
clc
scas
repz
andb
in
mov
pop
push
mov
rcr
int
pop
repnz
pop
cwtl
test
lods
cmc
jp
push
mov
pop
fwait
orl
cli
ljmp
cs
fcomps
sbb
gs
lods
mov
fstpl
sbb
cmp
movsl
insl
cmp
test
movsb
rcrl
int
or
push
in
icebp
and
dec
testb
enter
xor
jne
cld
daa
sahf
mov
ss
or
mov
jle
inc
and
mov
roll
xor
dec
test
repnz
mov
mov
decl
cwtl
cltd
test
xchg
dec
cwtl
or
fistpl
jl
rclb
fsubrs
add
pop
pusha
xor
and
mov
sahf
test
dec
fidivrs
std
rcl
mov
pop
inc
and
lret
dec
inc
aam
int
adc
lods
xchg
lahf
sub
push
aam
repnz
dec
mov
cmp
push
std
aad
xor
ret
shr
cmp
pop
repnz
xchg
jl
xor
xchg
loope
adc
subb
push
cmp
adc
test
cmpl
sarl
outsl
hlt
sbbb
mov
inc
jg
inc
xchg
fyl2xp1
dec
xchg
mov
jbe
or
jo
xor
lock
pop
ljmp
or
inc
or
xchg
int
movsb
fdivp
jae
xor
fildl
sbb
aam
xchg
sub
adc
loopne
mov
adc
pop
cmp
stos
or
fcompl
jle
addr16
xchg
xchg
out
fnstenv
mov
std
cmp
mov
popf
inc
leave
mov
cli
in
das
ret
pop
jecxz
sbb
jo
sbb
lret
sub
cmp
pusha
or
jo
adc
add
xchg
push
sub
xchg
or
ret
or
mov
or
pop
or
push
xchg
stos
fdivr
ss
inc
xchg
hlt
jp
jecxz
inc
out
inc
or
or
psrad
xchg
xchg
or
test
mov
nop
cmp
and
arpl
cli
jecxz
mov
stos
mov
popa
mov
shlb
and
jbe
fisubrl
clc
test
mov
insl
mov
mov
jne
std
jp
pop
push
mov
inc
cmp
jmp
clc
dec
loop
mov
fmulp
test
iret
js
sbb
push
mov
mov
xchg
ret
das
or
or
aas
push
repz
jle
inc
std
ret
lds
pop
pop
enter
mov
mov
std
in
sub
lods
cmp
mov
in
mov
mov
push
add
xchg
xchg
lret
xlat
push
cltd
jae
insb
mov
inc
ror
mov
es
aam
aam
pop
test
jle
pop
rorl
xchg
mov
cld
int3
lcall
mov
aad
inc
sub
mov
loopne
cld
jnp
cs
inc
xor
inc
add
jle
bound
mov
mov
stc
jle
test
pop
xchg
mov
pop
mov
aaa
dec
lret
ja
andl
sarl
mov
into
sbb
inc
xor
out
loop
into
push
jmp
push
lods
mov
xchg
pop
out
decb
pop
in
arpl
out
push
inc
ds
cmc
cltd
hlt
jae
cmpsb
mov
mov
sbb
call
rorb
dec
fists
and
shrl
fdivrs
push
pop
jle
sub
loopne
mov
dec
jae
or
jae
mov
mov
and
jp
shrl
pop
push
mov
xor
ds
lea
pusha
sub
pop
dec
mov
or
loopne
or
inc
or
daa
jns
mov
insb
xchg
ljmp
xor
jae
fidivrl
xchg
xchg
lea
movsb
lds
sbb
pusha
lret
adcl
lret
cmp
mov
jp
ds
mov
sbb
aas
loopne
ja
rep
mov
push
in
xchg
xor
mov
push
test
aad
outsl
adc
cmp
int
rcrl
push
sbb
subl
pop
fdivr
rcll
fwait
movsl
lahf
push
out
scas
lahf
aad
pop
cmp
jae
xchg
mov
sub
mov
or
and
jo
dec
lock
push
sub
dec
call
fs
in
insl
ret
mov
es
das
mov
mov
inc
push
sub
sarl
insl
xor
pop
repnz
sbb
aaa
add
add
outsl
aas
adc
adc
cld
rcr
insb
ror
iret
mov
adc
jnp
movsl
pop
stos
xor
leave
mov
sub
mov
pop
mov
insb
adc
pop
push
shl
sbb
pop
sub
adc
inc
movsl
xchg
pop
mov
mov
inc
ficoms
cmp
sub
jecxz
fiadds
pop
push
test
lea
insl
sbb
aam
test
fwait
roll
mov
stos
or
mov
mov
adcl
dec
add
mov
inc
jo
insb
outsb
pop
push
mov
push
fnstsw
cltd
movsb
jmp
xchg
push
add
dec
xchg
push
add
dec
cli
sbb
jne
adcb
push
add
push
ret
add
lods
or
pop
dec
repnz
stos
jmp
mov
lret
lea
push
xchg
mov
xlat
lcall
pop
sbb
mov
rolb
sub
dec
push
xlat
xor
test
ss
inc
leave
jp
push
rcrb
neg
mov
notb
dec
std
sub
scas
jo
sbb
or
dec
cmp
fsub
pop
xor
inc
cmp
fstpl
mov
cmp
fst
push
insb
xor
push
and
std
sub
xchg
xchg
push
jno
add
adc
out
adc
movsl
pusha
outsl
or
shll
mov
test
repz
cmpsl
das
mov
movsb
dec
mov
lods
ljmp
inc
test
xchg
cmp
sahf
rorl
xchg
xchg
sbb
fscale
dec
fidivrs
outsl
xor
cvtdq2ps
insb
daa
cmp
hlt
and
std
scas
jmp
xchg
mov
mov
inc
push
ror
bound
std
mov
lods
mov
dec
mov
and
lcall
clc
inc
je
pop
dec
and
pop
add
enter
or
mov
stc
in
mov
push
pop
mov
int
sarl
mov
jg
xlat
lret
and
jo
jae
ss
mov
mov
insl
fistps
in
ss
aam
setle
and
add
add
das
mov
cli
outsl
pop
test
negl
xchg
push
shrb
adcl
push
clc
mov
aaa
insl
and
hlt
dec
in
loope
mov
push
in
mov
loopne
popf
js
cmc
fwait
push
mov
insl
jg
push
fyl2x
push
and
sahf
xor
xorl
call
pop
lds
cs
outsb
xchg
ret
stc
icebp
lea
or
popf
loopne
and
cltd
pop
push
andb
mov
outsb
sbb
push
sti
push
ss
scas
mov
dec
and
loope
jno
jns
or
lret
in
and
push
jmp
test
pop
fxch
pop
jl
je
and
inc
icebp
jecxz
inc
daa
adc
out
sahf
pop
mov
insb
inc
jle
mov
push
or
cmp
push
push
xor
cmpsl
loopne
inc
movsl
lea
sub
sub
push
cmp
cmp
inc
sbb
jl
dec
xor
das
in
mov
sbb
ds
jl
out
cltd
insl
inc
mov
push
adc
nop
push
mov
out
and
xlat
mov
push
stc
mov
cld
mov
nop
adcb
lea
bound
ret
xorb
leave
mov
es
int
je
fcoms
repnz
mov
ljmp
inc
inc
jne
call
sbb
test
ret
loopne
lods
mov
out
mov
fistpll
and
lret
js
jo
pop
mov
shrb
fbld
arpl
jle
je
lock
idivb
add
stc
push
adc
inc
outsb
mov
outsb
insl
xor
pop
repz
mov
in
rcrb
pop
int
push
out
mov
fadds
xchg
cld
pop
or
ret
insb
nop
mov
in
jl
and
push
cwtl
sub
clc
repz
dec
loope
or
or
or
adc
sbb
or
jl
adc
in
adc
add
mov
mov
icebp
fwait
hlt
add
push
decl
sti
stos
sub
jns
adc
xlat
imul
insb
insb
addr16
shr
popa
imull
lcall
frstor
out
dec
sbb
mov
xchg
int3
adc
xchg
add
xchg
lods
outsb
jb
lret
adc
out
dec
mov
xchg
mov
je
sbb
rol
cmp
add
jno
lds
mov
mov
mov
mov
repnz
fisubrs
sbb
cmovg
shrl
add
es
cli
xor
fidivs
mov
add
sbb
aaa
cli
aaa
pop
pop
mov
fistpll
mov
xor
icebp
or
scas
rorl
filds
into
sbb
inc
xchg
push
ret
adc
mov
aam
call
pop
push
pop
sub
adc
xchg
into
sbb
dec
lock
dec
mov
dec
adc
xchg
mov
inc
arpl
hlt
cmp
testb
icebp
cmp
mov
and
xchg
dec
aam
push
out
lods
clc
push
stos
addl
insb
dec
dec
shlb
addr16
jle
jnp
and
pop
incl
movsb
orb
loop
loope
hlt
xchg
cmpsb
iret
mov
or
ret
cmp
fsubs
dec
fs
scas
xchg
jmp
dec
adc
jge
mov
sbb
cli
in
mov
xchg
add
push
ret
xor
shlb
mov
push
xor
scas
jl
dec
sbb
cmpsl
dec
adc
movsl
rcrb
insb
push
pop
rcrb
pop
les
dec
shr
cmpsl
xchg
adc
pop
popa
out
cmp
inc
and
cmp
pushl
mov
jno
subb
sub
jmp
xor
push
andb
int
or
lods
hlt
btr
or
or
jbe
push
xchg
xchg
clc
mov
mov
movsb
and
aam
jecxz
sub
pop
sbb
add
fidivrs
loopne
adc
loopne
shr
pop
ss
cmpsb
xor
add
adc
aam
iret
insl
rcll
adc
loope
mov
adc
sbb
arpl
cmp
rcrb
scas
xor
mov
stos
loopne
ss
and
mov
push
add
aad
gs
rcrl
cltd
pop
call
sub
or
sub
rcll
inc
dec
int3
and
clc
inc
shll
and
mov
mov
jb
push
mov
cmp
cwtl
and
cmp
mov
dec
cmp
xor
dec
mov
cmp
mov
sub
lock
cld
out
sbb
mov
xlat
inc
imul
cmc
repz
xchg
or
cmp
push
push
or
movsl
mov
mov
lahf
hlt
ja
inc
test
in
xchg
lods
jnp
mov
gs
sub
js
cmpsl
mov
pop
stos
adc
mov
cmp
lods
push
cmp
push
or
test
xchg
gs
sahf
pusha
aas
xor
pop
aas
outsb
push
shr
mov
push
lahf
mov
mov
roll
mov
xchg
lret
test
fadd
jo
xor
sub
mov
pop
fs
pop
inc
sbb
outsb
mov
call
push
mov
mov
loop
imul
divb
loope
jmp
mov
popa
inc
xor
mov
push
cmp
dec
cld
and
pop
loop
sub
cmpsb
scas
outsb
mov
sub
fdivp
sbb
xchg
loop
sub
aaa
jl
call
das
fldl
loope
sahf
test
cmpsl
pop
xlat
outsb
cmp
mov
xor
mov
jge
cmp
mov
fs
popa
cs
jp
jmp
in
push
sub
sbb
dec
filds
icebp
push
mov
mov
ja
inc
and
add
mov
test
out
gs
popa
push
mov
or
fstl
dec
ss
adc
test
add
ja
loope
or
leave
pushf
lds
xor
lock
mov
pop
push
sub
mov
push
fnstcw
jbe
add
xor
inc
ljmp
push
or
or
xor
sarl
sahf
je
bound
jne
pop
shll
gs
pushf
adc
pop
xchg
idivl
movsb
mov
mov
inc
push
mov
loopne
insb
push
add
mov
dec
pop
scas
fildl
push
jae
xchg
shlb
push
xor
jo
add
xor
pop
repz
aaa
inc
dec
pushf
inc
mov
fst
push
cltd
fucomp
dec
orb
xorb
fimuls
cmp
stos
inc
and
jl
sbb
mov
push
mov
repnz
daa
mov
xchg
ss
sub
sub
imul
ljmp
les
test
dec
mov
xor
xchg
and
fsubl
loope
cwtl
xor
shrb
cs
icebp
mov
adc
adc
mov
inc
pusha
cs
xor
iret
or
pop
sbb
scas
sbb
and
dec
sub
mov
sub
mov
lret
mov
jne
insb
int
push
clc
sbb
mov
je
jmp
and
daa
nop
stc
inc
jae
xchg
clc
sbb
and
mulb
push
call
call
rorl
xchg
addr16
or
xchg
rcll
dec
xchg
popa
xor
or
in
add
jno
mov
sub
fiadds
test
mov
jb
dec
pop
mov
loope
inc
xor
in
mov
hlt
dec
jae
iret
xor
roll
cmp
fisttps
ss
adc
fwait
pop
fs
movsb
sbb
mov
xchg
xchg
adc
jmp
sbb
mov
cli
pop
mov
jecxz
fldt
out
mov
add
pop
xchg
pop
fwait
orb
in
push
pop
push
adc
sub
mov
xor
jge
in
or
lock
out
pop
xlat
inc
push
ja
ja
ds
mov
aam
sbb
adc
lock
and
pop
adcl
or
pop
fwait
aam
fildll
cmpsb
hlt
call
std
jecxz
cmpsl
mov
lahf
shlb
insb
dec
fsubl
fimuls
mov
push
mov
xor
imul
mov
gs
arpl
cmp
cld
outsb
das
pop
cmc
out
push
outsb
ret
sub
jl
mov
dec
sti
mov
cld
lock
cli
jne
sahf
nop
icebp
jo
lds
lret
rclb
jle
mov
insl
and
mov
xor
add
adc
scas
and
pop
mov
lahf
out
outsl
into
xor
mov
rcrl
push
hlt
sbb
sub
lcall
mov
pop
call
add
sub
inc
jp
addr16
push
outsl
ja
js
lcall
xor
test
enter
aad
nop
sub
pop
add
lods
mov
leave
icebp
adc
xchg
fisubrs
jb
shl
out
dec
bound
pop
adc
push
incl
ficompl
lods
add
int3
sbb
and
mov
loopne
jle
jae
stos
add
lcall
fildl
imul
pushf
repz
xchg
or
mov
dec
mov
xchg
add
pop
out
fsub
imul
loope
inc
sahf
out
out
jp
mov
cmp
jp
lcall
adc
add
or
pop
sub
insb
jl
cmp
mov
cmpsl
ret
ror
mov
or
dec
push
mov
fldt
xchg
sbbw
and
or
psubb
adc
xchg
xor
or
cli
cmp
insl
inc
sbbl
mov
cmp
lahf
sub
maxps
xchg
pop
xchg
xor
popa
and
jbe
and
cmp
bound
and
lcall
mov
sbb
rcll
mov
jge
notb
in
out
stos
mov
push
mov
push
scas
sti
add
jo
out
daa
push
jmp
inc
fs
cmp
int3
mov
shl
add
aam
xor
popf
mov
cmp
out
ficomps
push
mov
fiadds
or
enter
push
push
cmpsl
pop
sub
jmp
xor
mov
add
aaa
xchg
mov
mov
inc
sbbl
lret
outsb
mov
inc
sti
loope
jo
push
push
or
and
or
inc
xchg
pusha
fcmovbe
aas
cmp
xor
popf
mov
loope
lretw
je
mov
adc
ss
shrb
addb
cmp
add
xorb
fbstp
ficoms
int
lahf
push
sub
xchg
xor
sub
mov
outsl
inc
testl
mov
lret
into
stos
dec
push
nop
adc
push
mov
pop
mov
inc
dec
xchg
mov
inc
inc
mov
sbb
aad
call
insl
loop
sets
repnz
lcall
mov
out
inc
fsts
js
lret
test
aad
lods
punpckhbw
pop
jnp
cmp
aas
int3
test
adc
sub
insb
lret
mov
jge
mov
jbe
dec
ret
subb
js
test
divl
mov
mov
arpl
jae
xchg
out
pop
mov
dec
idivl
fnstsw
mov
xorb
cmp
outsb
orl
jbe
out
gs
inc
sub
xor
or
dec
xchg
push
bound
inc
push
nop
or
pop
or
mov
decb
jns
ljmp
mov
in
xor
pop
add
arpl
out
addb
xchg
roll
mov
inc
adc
add
dec
scas
pop
jge
aaa
loop
mov
cmp
daa
jo
jns
mov
repz
outsb
mov
mov
push
xor
cli
mov
mov
test
mov
lods
or
lahf
insb
testb
xlat
cli
mov
test
std
aas
push
orl
gs
in
nop
and
pop
sub
in
addr16
loopne
stos
xor
or
inc
xchg
loopne
sahf
adc
ret
dec
shlb
aas
sahf
stos
out
fists
ret
insb
sti
repz
notb
cmp
sahf
xchg
push
testb
ret
cmc
jb
scas
mov
rcr
cs
stc
imul
aaa
or
sub
fstps
daa
gs
mov
pusha
out
or
dec
pop
pop
xchg
fs
cmpsb
enter
popa
jmp
pop
jbe
icebp
adcb
add
and
cli
in
xchg
mov
fnop
push
sbb
scas
out
sbb
into
and
stc
sub
mov
adc
and
push
sbb
cmp
pop
or
xchg
jbe
gs
push
add
and
xor
neg
call
mov
and
jne
std
cli
fdivr
ret
mov
loop
in
and
sbb
xor
jp
and
pandn
xor
jle
cmpps
leave
dec
push
sbb
or
xchg
aad
mov
or
inc
xor
cmp
push
sbb
lods
and
adc
push
xor
insb
adc
mov
cltd
mull
bound
adc
stos
dec
inc
test
scas
push
lret
aaa
push
or
int
pop
push
cmp
jl
or
add
shr
rorb
mov
adc
or
and
sbb
scas
xchg
adc
sbb
mov
mov
jae
pop
negl
popa
sbb
sbb
icebp
mov
outsb
adc
scas
movsb
xchg
mov
aaa
es
or
inc
dec
and
xor
insl
xor
inc
jmp
mov
fbstp
out
out
sbb
sbb
test
xchg
into
mov
push
jge
sub
mov
sub
sub
mov
jbe
loop
sbb
fisttpll
cmpsb
stc
js
pop
mov
out
movl
or
xlat
test
push
int
jmp
push
sarl
jmp
in
mov
xchg
stos
xor
test
xchg
pop
es
xchg
movb
and
idivl
loope
jns
adc
dec
cli
xchg
and
inc
ljmp
lods
gs
push
push
lahf
out
and
repz
pop
or
jle
dec
mov
jge
sub
adc
and
shlb
mov
xchg
pop
cld
fdivr
fwait
test
fdivs
daa
cmp
pusha
nop
jae
xchg
inc
mov
add
xchg
imul
xchg
push
add
push
in
push
cmp
cld
pop
test
insl
or
push
jl
out
mov
xor
sub
and
into
lock
sub
xchg
fists
push
or
jns
outsb
sub
fcomps
xlat
bound
pop
adc
scas
cltd
inc
push
out
sbb
mov
adc
out
xchg
inc
cmpsb
cld
xchg
es
push
and
bound
dec
inc
ffree
out
lds
cmp
cmpsl
jmp
repz
fs
ss
add
jmp
dec
inc
mov
cmp
ja
imul
repnz
iret
ret
xchg
hlt
and
aaa
mov
pop
inc
mov
mov
popa
add
fwait
ret
xchg
mov
out
adc
enter
jae
test
stc
mov
add
add
dec
popa
dec
push
jp
jnp
sub
or
fisubs
mov
imull
arpl
popf
stc
mov
add
enter
lock
icebp
cmp
and
ret
in
mov
hlt
lahf
add
push
push
call
lea
test
cld
or
mov
imul
jmp
inc
rcll
dec
jbe
push
mov
add
sbb
fadds
ret
rcrl
out
jb
out
adc
scas
stos
loopne
enter
sub
test
adcl
stos
pop
rep
addr16
sbb
xor
sub
call
ss
fidivrl
cwtl
repz
pop
mov
jne
aad
addr16
movsl
cwtl
mov
insl
fmuls
xor
cli
rcrb
loope
sub
mov
pop
cmpsb
popa
ret
xor
push
push
cmp
fdivrl
das
sarl
gs
jmp
fs
jle
out
or
in
movsb
popf
ret
add
repnz
adc
inc
mov
cltd
mov
loope
das
and
sbb
add
jmp
dec
jle
xchg
cmp
adc
imul
lods
xchg
nop
sti
jae
aaa
std
pop
loop
sbb
mov
xor
inc
sti
xor
jo
in
jmp
rcll
lcall
xor
arpl
stc
aaa
xor
pop
pop
call
xor
cmp
mov
sbb
pop
roll
adc
pop
dec
jle
add
test
add
push
push
and
mov
xchg
push
aaa
je
xor
pop
out
mull
loope
out
mov
test
sbb
ret
adc
insb
outsb
insb
jne
inc
imul
xchg
cmp
int
in
loope
add
mov
addr16
push
push
les
pop
sbb
xlat
xor
scas
dec
mov
cmp
lds
cmpsb
cmp
mov
push
ret
push
lret
inc
negb
add
adc
push
mov
enter
dec
jae
out
fsubs
lods
jo
add
test
adc
shrl
movsb
stos
sbb
repnz
lds
xor
pop
insl
mov
push
cld
dec
and
jae
mov
mov
push
or
inc
ret
and
rcr
adc
push
leave
loope
jmp
stc
in
sub
roll
mov
sub
mov
dec
pop
movl
jae
aas
filds
int
jp
xor
cs
js
arpl
sbb
sbbb
lret
inc
add
insb
adc
fsubs
test
lret
lods
add
rclb
add
data16
mov
aaa
pop
pop
bound
rcll
pop
sbbb
xchg
jle
les
xchg
cmp
ljmp
add
sti
lds
loopne
aam
lret
mov
hlt
lret
out
cmpsb
andl
push
dec
xchg
inc
addr16
stc
bound
or
adc
push
inc
fistpll
dec
add
dec
lret
fsincos
imul
js
mov
movsb
jmp
popf
adc
es
nop
ret
mov
test
stc
sbb
adc
mov
sbb
cli
add
mov
insb
inc
mov
mov
sbb
in
or
cli
push
pop
sti
mov
add
in
xor
imul
arpl
outsl
daa
ret
mov
pop
pop
mov
lock
xorl
adc
arpl
aaa
testb
fcomps
push
popf
cli
jns
and
push
xor
and
clc
ret
and
xchg
popf
mov
mov
pop
stos
jge
inc
lret
push
cld
ds
dec
sbb
push
icebp
mov
mov
shll
mov
rorl
dec
add
push
push
mov
movsl
ret
or
sbb
fmuls
push
mov
insb
xchg
mov
notb
cmp
add
cmp
dec
jbe
aaa
enter
mov
mov
cmpsl
fwait
iret
movsb
je
call
lret
push
and
popa
or
pop
adc
add
fists
jecxz
jmp
test
or
aad
imul
daa
sub
dec
jbe
negl
fstps
xorb
nop
in
popf
jle
sub
scas
mov
lret
loop
xlat
mov
sub
jbe
enter
mov
fnstenv
or
loop
push
dec
cli
sbb
and
lahf
test
mov
cmp
cmp
insl
or
or
loope
cmpsb
fcomp
nop
mov
fcomi
mov
rcrb
cs
std
pushf
lock
insb
cs
cmp
adc
cltd
sbb
loop
xchg
mov
xor
cli
ror
popf
popa
mov
hlt
cltd
hlt
imul
push
fsub
mov
scas
and
std
sar
cmpsb
outsl
mov
ja
enter
loopne
out
inc
repnz
sahf
inc
popa
orl
sbbl
loopne
jne
lea
lods
sbb
sub
sbb
xchg
xchg
add
lods
roll
daa
add
lods
xlat
sub
mov
insl
cmp
jnp
mov
fnsave
sbbl
stc
xchg
iret
inc
mov
test
inc
testb
xlat
out
push
add
into
dec
cltd
rcrb
aad
aam
or
mov
test
cmp
cld
lcall
repnz
or
cld
out
jecxz
and
push
pop
pop
mov
in
add
mov
andl
jle
mov
fildl
mov
sbb
inc
jnp
inc
or
cli
pop
out
negb
fnstsw
es
sbb
jae
sbb
xchg
into
push
mov
inc
pushf
bound
cmp
pop
xor
adc
mov
cs
mov
in
aaa
add
mov
pop
sbb
jns
mov
arpl
loopne
add
cmp
push
add
pusha
cmpsl
sbb
sbb
add
xor
in
sbb
pop
lret
xchg
cmpsb
or
cmp
fstpt
mov
cmp
push
xchg
loope
mov
jae
mov
scas
daa
xlat
insb
mov
lods
sub
addr16
fs
mov
mov
jb
jb
cmpps
jl
mov
fisttpll
xchg
jno
andl
imul
mov
ja
shrl
imul
aam
stc
loope
cmp
mov
mov
push
jmp
pop
les
cmpsb
mov
inc
in
jl
xchg
dec
sahf
mov
je
inc
ficoms
popa
cmp
xor
inc
int
clc
xor
into
insl
pop
jb
test
js
ss
inc
loop
ret
mov
sbb
pop
cli
lods
cmp
jle
and
ds
sbb
xchg
loopne
and
ficompl
cwtl
dec
dec
test
stc
sub
enter
push
imul
xor
in
jbe
pop
mov
add
sbb
aam
sub
xor
lret
mov
call
pop
sub
jno
sti
dec
or
xor
mov
cmp
and
mov
cmpsb
movsb
movsl
xchg
inc
sbb
ss
test
int
lock
and
sbb
lret
popf
loop
and
jae
xchg
jne
sbb
mov
push
sahf
test
xchg
test
sbb
jnp
push
inc
mov
mov
lcall
int3
inc
enter
xchg
pop
ficompl
callw
mov
inc
dec
ret
xchg
or
xlat
pop
loop
sti
js
dec
shll
into
in
xor
push
out
movsl
jg
ret
jo
dec
mov
je
je
inc
inc
xlat
andl
jecxz
lret
add
pop
jae
xchg
fisttpl
jle
fdivl
test
nop
repz
adc
mov
inc
cwtl
mov
lds
fprem
fwait
mov
jp
xchg
add
in
xchg
iret
adc
add
loop
cwtl
shr
mov
ljmp
xchg
inc
or
xor
shll
test
xchg
adc
cmp
out
out
gs
and
push
movsl
loopne
push
aam
popf
inc
les
cli
out
int
mov
mov
outsb
pop
pop
dec
inc
add
xchg
lds
xchg
adc
pop
imul
and
mov
loope
cwtl
fisttpl
mov
lods
pop
mov
cmp
fldt
pushf
adc
sbb
push
xchg
and
and
int3
test
lret
jne
xor
xchg
enter
test
sbb
cmp
inc
pop
or
push
cmovnp
xor
aad
cli
sti
fucomip
adc
cmp
out
mov
aas
out
loope
mov
mov
pushf
jnp
mov
mov
in
aaa
push
pop
push
sub
call
shrl
inc
icebp
imul
in
xchg
dec
dec
pop
add
mov
jmp
mov
testb
in
or
adc
jnp
jp
mov
cltd
sbb
fwait
dec
push
loop
aaa
inc
jecxz
sub
mov
cli
inc
and
mov
in
add
mov
fimull
jnp
pop
aaa
inc
fs
clc
call
mov
enter
nop
sti
movsb
push
andb
inc
sbb
pushf
dec
fstpl
adc
mov
inc
dec
jno
and
faddl
test
stc
fs
popa
sub
mov
lret
ret
sub
aas
cmpl
cs
xchg
jb
jp
cwtl
push
inc
outsb
sub
dec
and
out
pop
push
xorb
push
mov
scas
pop
int3
ja
sarb
sbb
sub
jbe
fdivrs
cltd
mov
add
es
pop
cmp
adc
lret
pop
fnstcw
cmp
inc
xor
sbb
xor
push
xor
jno
popa
pop
arpl
fiaddl
pop
fcoml
mov
jge
roll
xchg
add
sbb
int3
imul
andl
cld
into
mov
mov
cmc
cmp
mov
imul
movsl
jl
adc
test
icebp
sbb
loop
sub
cld
mov
pop
adc
and
inc
cmp
add
pop
inc
push
popf
inc
outsl
jg
shlb
hlt
or
daa
lods
gs
add
mov
pmulhrsw
mov
repnz
mov
fcmovnb
sbb
flds
mov
inc
mov
lea
ret
push
push
xor
loope
add
push
jnp
popa
xor
ss
jmp
xor
divl
pop
ret
add
js
nop
and
stos
fstl
inc
test
aaa
pop
imul
push
sub
mov
add
push
jns
mov
xor
dec
lods
cs
pop
sub
addr16
mov
jmp
sub
inc
out
xor
mov
js
stos
adc
shll
xchg
mov
add
into
int3
jae
lret
sbb
xor
mov
push
push
pop
lret
ja
mov
push
clc
cs
sub
mov
jmp
jge
sbb
test
and
aam
ficoms
rol
dec
jl
and
test
inc
sbb
mov
and
mov
cld
adc
adc
xchg
fwait
in
xor
inc
xor
or
adc
sbb
cld
insl
dec
arpl
enter
imul
cli
mov
push
or
sub
pusha
push
xchg
les
in
adc
repz
mov
dec
xchg
out
fwait
jnp
sbb
test
adc
outsb
in
jb
rcrl
pop
mov
adc
call
ja
mov
cmc
fbld
lods
iret
xor
fnstsw
cmp
int
add
loope
xor
mov
testl
cmp
push
shll
pop
cmpsl
cmpsb
xchg
xchg
sti
pop
adc
xchg
arpl
rdtsc
xor
std
mov
call
jno
sbb
bound
add
or
outsl
mov
mov
loop
xchg
test
icebp
pop
mov
mov
adc
hlt
fbstp
xchg
loopne
sbb
push
arpl
and
outsb
push
add
sbb
inc
mov
daa
sti
or
outsb
inc
mov
push
dec
pop
ja
scas
cmp
ja
test
add
popf
mov
sarb
jb
mov
jnp
xchg
cmp
dec
outsl
aam
pop
insl
dec
jmp
dec
xchg
xlat
dec
sub
scas
test
hlt
or
dec
mov
cmp
or
jecxz
sub
pop
outsl
mov
ljmp
in
fbld
aad
mov
test
push
test
cmpsb
subl
ret
adc
or
pop
lock
repnz
leave
xlat
aad
mov
shlb
int3
sti
aas
push
fisubrl
sbb
test
push
sub
cli
jbe
xchg
cmpsb
dec
bound
add
cmp
xor
cmpb
push
sbb
shl
lcall
add
dec
xor
push
fidivrs
daa
dec
sbb
push
mov
mov
xor
lods
mov
fs
push
das
ja
mov
aam
mov
dec
jge
jecxz
adc
inc
faddl
push
mov
pop
out
add
lods
out
adc
roll
cmp
inc
pop
popa
push
popa
enter
pop
or
ja
mov
pop
sar
sub
int3
fcompl
out
xchg
mov
add
jno
stos
push
sub
aaa
lahf
repz
mov
or
dec
insb
bound
inc
lock
data16
mov
sar
mov
xor
add
negb
cld
arpl
mov
jne
xlat
xor
jmp
cmp
cmp
push
call
mov
dec
xchg
hlt
not
and
inc
pushf
rol
dec
adc
adc
sbb
aaa
adc
insb
push
pop
repnz
clc
jns
popa
test
add
cmp
push
imul
inc
mov
clc
sahf
xchg
pushf
rclb
and
sub
mov
adcb
mov
negb
rorl
jp
inc
pop
inc
mov
push
enter
test
imul
ja
cwtl
or
pushf
jne
mov
in
sub
cli
sbb
and
out
test
lcall
fnstsw
push
cmp
xlat
cmp
loop
xchg
outsl
ret
push
push
pop
shlb
lods
mov
xor
stos
or
sarl
add
adc
sub
sub
jl
or
fdivr
jb
dec
jo
int
and
and
enter
insb
outsb
test
lcall
push
andl
adc
lret
mov
mov
divb
ja
arpl
insb
sbb
scas
test
rcl
cs
mov
or
inc
icebp
outsl
movsb
stos
rorb
in
in
lods
clc
inc
ja
sub
loope
xor
pop
mov
int3
jae
xor
dec
insl
mov
in
add
pop
out
xchg
outsb
lds
cmp
push
xor
jbe
ss
scas
or
and
mov
fistl
mov
aaa
adc
add
jnp
shl
xor
cld
xchg
stos
cmp
push
sbbb
jmp
xor
dec
xor
scas
mov
jle
in
mov
sbb
push
fldl
cmc
sub
cltd
pusha
daa
sar
mov
push
cs
cmp
mov
cld
aas
or
mov
pop
sbb
adc
pushf
jb
pop
push
sbb
fnstsw
subb
out
inc
inc
fucomip
jbe
sbb
xchg
stos
pop
ficoms
add
in
xchg
and
mov
mov
mov
les
out
fwait
adc
ds
dec
cltd
int3
out
into
in
fdivp
pop
stos
lret
mov
enter
les
cltd
adc
out
xchg
add
and
jge
dec
rolb
inc
mov
lret
mov
mov
xlat
ljmp
test
std
and
adc
mov
stc
mov
leave
push
push
or
repz
push
dec
out
mov
data16
cmp
xor
xchg
or
mov
popa
outsb
jg
and
outsb
mov
sbb
and
aas
fidivrl
mov
mov
cmp
push
mov
adc
or
fidivl
ret
shrb
dec
pop
cmp
sbb
xchg
dec
icebp
mov
cltd
sarb
mov
push
sub
xchg
nop
and
and
mov
pushf
jbe
push
pop
out
xchg
aas
aaa
andl
dec
lds
adc
cltd
xchg
mov
pop
ret
test
outsb
sbb
mov
imul
test
mov
add
dec
jg
adc
pop
cmp
push
test
pop
push
push
xor
cmpb
aad
sub
lods
jg
inc
lods
jnp
cmc
movsl
test
push
inc
punpckldq
jecxz
xor
or
arpl
jl
adc
adc
xchg
popf
arpl
sbb
iret
stos
shll
mov
or
outsb
inc
dec
sbb
cmc
push
out
jo
xchg
clc
out
lds
inc
aas
out
rcrb
jmp
lea
loop
cmp
mov
int
sub
pop
push
cmp
stos
bound
jo
adc
mov
jb
adc
pop
jns
xor
push
ds
xchg
ficoms
ret
xor
mov
mov
sub
ljmp
jo
imul
stc
daa
mov
xchg
pop
hlt
enter
mov
stc
dec
cmp
fwait
aaa
into
or
lahf
inc
pusha
inc
push
imul
mov
mov
inc
shrb
or
jl
jmp
adc
test
cmp
pusha
cmpsl
fsts
lret
mov
inc
test
sti
pushf
inc
or
inc
addl
rcrb
inc
cwtl
cmp
adc
lea
setnp
mov
testl
sbb
xchg
adc
mov
add
cld
test
clc
mov
mov
sbb
or
jae
rol
mov
jo
adc
push
mov
pusha
out
add
int3
mov
adc
out
sbb
stc
pop
add
mov
or
out
andb
shl
out
ljmp
dec
cmpsl
cmp
xchg
arpl
ds
cmp
popa
dec
incb
cmp
xchg
cmc
imul
and
rol
scas
loop
ret
sub
es
enter
sbb
imull
mov
sbb
and
stos
ds
inc
mov
sub
sbb
addr16
fldl
adc
cs
jecxz
fcmovne
jg
push
pop
in
cmp
mov
pop
andl
gs
xchg
shr
fwait
mov
inc
into
xlat
push
sub
xchg
stos
ret
mov
rcl
xor
pop
cli
add
jle
inc
lods
std
jnp
inc
loop
or
fstpt
sahf
xchg
jns
fadds
daa
or
outsl
inc
sbb
inc
stos
add
ret
arpl
dec
push
jg
je
into
andl
jns
pop
iret
testl
sbb
jge
popa
pop
and
jb
daa
add
mov
add
sub
push
jne
fs
cmpsb
xchg
es
repnz
test
negb
aam
xor
adc
fs
xor
jbe
sub
out
out
mov
push
push
ds
cmp
xor
nop
das
lds
dec
leave
jne
or
pop
mov
pop
lret
inc
lret
hlt
pop
idivb
aaa
ljmp
imul
inc
and
mov
in
daa
cs
ljmp
inc
lcall
sbb
into
fsubp
dec
xlat
test
pop
lret
xchg
repz
clc
popa
lahf
pop
fwait
push
mov
pop
clc
hlt
or
xchg
or
dec
je
dec
sahf
adc
lods
in
fnstenv
xchg
mov
jmp
cmp
cli
or
dec
iret
pop
ljmp
pusha
mov
lret
xor
jne
sahf
mov
enter
test
pop
cmp
ja
sahf
fmuls
test
out
jmp
cmp
mov
jo
lock
jle
mov
xor
pop
mov
jle
sbb
add
xor
stos
inc
aad
mov
incl
cmp
pop
bound
icebp
pop
loop
aas
mov
sbb
push
aas
xchg
and
ja
adc
xor
sub
xchg
jo
fistl
or
cmpsl
aas
xor
or
fwait
sbb
pop
popl
push
imul
jnp
pop
cmpsb
cmc
iret
inc
repz
into
push
adc
push
ss
sti
loopne
xlat
push
or
mov
and
pop
mov
aas
sub
aaa
sbb
inc
imul
repz
jmp
daa
mov
cmp
dec
xor
and
sarl
mov
imul
pop
pop
pop
sub
imul
les
sbb
nop
xchg
inc
fcmovbe
add
loop
jae
out
addr16
or
jp
outsb
add
cmp
and
repz
mov
shrb
sub
inc
fldcw
dec
xor
ja
push
sub
mov
in
imul
enter
push
outsl
mov
xchg
inc
lret
dec
add
aaa
dec
mov
sub
pop
movsb
inc
pop
call
lods
movsl
pop
lods
cmp
enter
and
int3
push
bound
fs
dec
fsubs
adcb
mov
les
push
add
or
mov
and
xor
popf
mov
sub
aaa
fildll
mov
add
fdivrs
and
scas
dec
pop
xchg
inc
aad
jne
lods
sahf
sti
mov
jge
xchg
cmp
loope
push
xchg
testb
xlat
and
or
in
lret
mov
lret
fnstsw
leave
jl
fisubl
scas
rcll
xor
outsl
pop
insb
out
inc
cmp
in
pop
fsubrs
out
dec
pushf
mov
mov
aaa
cs
pop
sbbb
xlat
push
adcb
sbb
test
xor
cld
lock
add
and
mov
test
jae
sub
adc
in
fisubs
and
mov
popf
lret
jp
in
mov
lcall
and
lcall
fisubrs
sub
add
mov
mov
dec
add
xor
adcb
pushf
pop
cmpsl
stos
fs
xchg
mov
xchg
fisubrl
pop
lret
ds
push
mov
dec
mov
clc
add
add
int
xchg
mov
sub
cmp
push
test
sbb
movsb
and
jns
out
xor
mov
mov
xchg
call
or
insl
fimull
mov
and
push
adc
or
lcall
and
and
and
adc
aas
testb
scas
mov
cmpl
insl
shlb
jg
arpl
xor
test
mov
dec
lods
sub
mov
sub
jmp
arpl
int3
loopne
xor
mov
pushf
mov
fwait
push
dec
scas
dec
addb
repnz
fxch
mov
cli
mov
jnp
push
pop
xchg
cmc
outsl
lret
loop
stos
jp
movb
aam
enter
push
push
fsubrs
sti
mov
jne
fs
mov
jg
mov
loopne
xor
lods
or
aas
insl
dec
push
roll
int
imul
dec
lds
pop
jbe
shll
rcll
jae
push
mov
mov
out
cs
dec
add
leave
stc
adc
adc
cltd
adc
movsl
cli
inc
mov
push
push
mov
mov
mov
pop
cmp
add
xor
out
test
xor
inc
out
adc
ja
mov
aad
mov
sbb
push
add
push
xchg
test
adc
mov
in
push
aaa
or
cmp
lods
or
push
and
xor
xchg
fstpt
sbbl
in
jg
add
rcrb
dec
daa
icebp
mov
mov
sbb
orb
sbb
xchg
jmp
push
add
pop
xor
out
sbb
jp
sbb
fs
push
addr16
mov
dec
cli
in
pop
stos
test
sbb
imul
dec
loop
and
ss
dec
imul
xchg
sub
adc
and
jl
pop
pop
std
sbb
aaa
cmp
push
push
mov
stc
mov
dec
xchg
sbb
or
and
sbb
test
in
or
clc
and
fstl
xor
cmpsl
lock
pop
les
adc
sub
fst
pop
sbb
fmuls
mov
adc
aam
adc
cmp
or
shrl
sub
in
dec
fnstsw
mov
inc
push
ss
mov
sbb
jp
sub
inc
pop
ss
scas
fwait
pushf
mov
mov
in
mov
enter
cmpsl
inc
or
fs
cmp
cmp
sub
add
mov
mov
and
push
addl
sub
std
dec
mov
les
test
and
sarb
ret
in
sbb
pop
or
cmp
cmp
xchg
int
push
xor
cltd
pop
sub
and
pop
int
push
xlat
adc
jnp
sub
cmp
mov
pop
or
loope
lods
and
add
in
mov
pop
ret
cld
xorb
les
imul
fildll
pushf
inc
int
sbb
xchg
or
aaa
pop
sbb
fistpll
push
cld
add
sbb
add
mov
pop
mov
add
dec
inc
push
enter
rorb
cmp
pop
in
inc
dec
insl
les
stos
popf
out
into
mov
mov
ja
jge
xchg
inc
leave
mov
jle
cmp
imul
push
addl
pop
inc
into
icebp
dec
xor
mov
mov
cmpsl
push
jne
sti
mov
scas
js
shll
loopne
in
imul
inc
mov
mov
push
into
insl
add
test
add
xor
pause
jae
mov
cmc
or
inc
mov
mov
sahf
add
xchg
sub
js
test
fwait
loop
dec
rcl
leave
in
ret
ret
push
popf
inc
jne
pop
xor
out
leave
les
jbe
jnp
jmp
cmp
data16
push
pop
add
push
xchg
dec
out
add
xchg
add
sbb
repz
addl
movsb
and
test
ret
test
jns
rclb
movsl
mov
inc
jbe
pop
std
fldl
int
inc
mov
pop
fisubrs
sub
loope
movsb
jle
pop
sbb
out
add
xor
push
popf
pop
mov
pop
pop
daa
shlb
ja
ss
jg
es
jns
adc
xor
in
and
xor
xor
adc
inc
sub
sbb
push
cmp
mov
fstpt
outsb
stc
inc
dec
jnp
and
clc
insb
dec
testl
sbb
pop
pop
mov
xor
punpckldq
clc
test
mov
out
sub
pop
push
xchg
add
aam
fcoml
mov
test
jne
roll
cltd
shll
fldenv
jle
push
outsb
pop
push
xor
xor
pop
sbb
sub
nop
js
sub
out
dec
dec
ror
cmp
repnz
mov
call
pop
stos
imul
jmp
and
orb
xchg
mov
pop
mov
inc
lahf
clc
cmp
push
and
addr16
sub
xlat
clc
call
xor
fdivrl
dec
and
sbb
mov
pop
jbe
ds
inc
mov
shrl
cmp
dec
lahf
xor
mov
lret
lea
nop
pop
push
daa
mov
sahf
out
dec
add
scas
stos
cmp
outsl
xchg
add
lds
sub
iret
out
imul
dec
or
std
dec
mov
movsb
add
xchg
pop
xchg
pop
divl
push
je
cmp
xlat
inc
push
stos
sti
or
aaa
in
aad
dec
cmc
xlat
in
jns
add
cld
xlat
jns
jae
mov
outsb
add
cmp
out
outsl
jae
andl
or
add
lds
bound
ss
adc
jp
adc
daa
lds
xor
mov
fwait
push
adc
pop
ret
rorl
rcr
xchg
mov
jecxz
js
out
fstpt
sbb
xchg
pop
lcall
lret
pop
mov
addr16
dec
xor
jbe
in
fwait
divb
add
adc
repz
pop
inc
xchg
push
icebp
ljmp
mov
push
adc
mov
jbe
shlb
jge
imul
mov
ljmp
sub
jne
jb
or
inc
push
xchg
out
shrb
xchg
out
pop
jl
or
ret
fnstcw
sub
mov
in
repnz
mov
inc
das
jl
arpl
addr16
cmp
sbb
inc
daa
sbb
call
rorl
sub
and
in
shlb
jnp
adc
cmp
repz
mov
add
aas
mov
sub
jnp
movsb
xlat
sub
jb
rcll
sub
cmpsb
and
pop
arpl
jns
mov
push
mov
mov
clc
in
jge
flds
outsl
pop
mov
lcall
adc
shll
movsb
out
les
movsl
pop
sti
popf
push
imull
mov
add
adc
sub
jge
xor
dec
sub
adc
cli
mov
les
xor
ja
push
das
lock
outsl
sub
sub
and
test
mov
mov
or
pusha
mov
push
jmp
subps
test
ret
and
add
fstps
jl
aad
push
icebp
pop
mov
stc
push
push
cltd
mov
xor
mov
pop
mov
push
std
out
in
in
jmp
mov
inc
mov
enter
repz
test
mov
adc
or
sub
fcmovb
pop
xor
inc
dec
sbb
dec
cmp
ljmp
adc
loop
test
in
push
add
push
cmpsl
js
cwtl
push
ret
out
xor
xchg
insl
mov
push
mov
aaa
and
cmp
dec
fwait
cmp
lcall
mov
fmul
xor
cld
jae
imul
daa
dec
inc
push
enter
cmc
xor
in
jns
repz
push
daa
lock
in
xor
and
testb
mov
icebp
ficoml
sub
cmc
mov
push
lds
mov
add
mov
stc
loop
mov
add
js
cmp
ljmp
mov
daa
or
ficomps
jl
xchg
pop
or
lods
xor
xorb
pop
mov
flds
movsl
incb
in
lret
jmp
mov
mov
mov
sbbb
push
and
les
inc
sub
ficoml
repnz
pop
add
sub
je
rorb
in
or
lods
adc
jecxz
enter
sub
jmp
jmp
shrb
cmpl
mov
xor
hlt
sahf
bound
mov
push
cli
xchg
fisubs
xchg
in
leave
or
dec
xor
dec
addb
xchg
mov
cld
sahf
ja
pop
imul
nop
push
dec
scas
and
aam
mov
mov
adc
fwait
jns
cmp
mov
add
in
push
mov
and
cli
enter
xchg
imul
insb
dec
push
cwtl
out
inc
adc
sub
cmp
dec
sbb
dec
je
leave
mov
push
stos
inc
nop
and
jp
mov
sub
mov
shrb
mov
lods
sbb
es
push
inc
std
mov
pop
bound
loop
pop
fisubs
rcll
mov
jge
jg
sub
mov
pushf
xchg
xor
and
sub
faddl
stc
push
jae
int
sbb
or
lret
test
jg
xchg
daa
and
rcr
xchg
ret
mov
ss
data16
adc
push
or
in
jnp
cs
jns
or
xor
sbb
xor
inc
mov
out
xchg
les
pop
sbb
aad
mov
iret
pop
rcl
pop
sbb
dec
inc
mov
jp
pushf
dec
fcmovu
jne
loopne
repz
inc
fcomps
mov
push
mov
test
mov
mov
iret
jae
pop
out
mov
repnz
cli
out
idivl
inc
test
cwtl
lods
sbb
pop
fbstp
out
lock
ljmp
xchg
cli
out
stos
loop
jbe
push
test
test
test
int3
ror
dec
and
sub
in
mov
ret
push
loope
ds
mov
icebp
jecxz
loope
ss
xor
aaa
ret
aas
mov
jmp
stos
push
leave
ljmp
test
pop
mov
or
pushf
fsubl
pop
inc
cli
or
add
inc
jle
fcoms
pop
push
mov
js
xorl
pop
mov
xor
addr16
int3
jb
loopne
imul
adc
fwait
bsr
test
cmp
and
dec
push
ss
shlb
and
sub
adc
inc
sbb
adc
inc
xor
inc
in
xchg
dec
push
or
cs
jg
or
cld
push
inc
or
push
pushf
inc
gs
out
fmul
lret
push
mov
icebp
cmp
xchg
es
push
and
inc
inc
push
stc
ljmp
xchg
cli
call
push
push
xchg
lret
xchg
dec
xchg
in
mov
and
xchg
cmpsb
in
sarl
jge
mov
in
ss
shl
jo
and
sbb
outsl
pop
aam
lods
jbe
int3
jae
or
fwait
inc
fs
out
jbe
arpl
pop
fimull
clc
cmc
add
sbb
icebp
push
fcoms
sbb
mov
push
inc
jo
cmp
gs
flds
incl
scas
and
mov
sarb
gs
sbb
lds
jg
xor
dec
test
mov
arpl
or
jbe
adc
mov
jl
sub
insb
aas
lahf
ret
mov
jnp
sub
dec
cmp
sbb
mov
xor
add
in
insb
stos
leave
jl
push
mov
call
xor
cltd
rclb
push
mov
mov
xor
pop
fdivrl
hlt
rclb
pop
je
les
sti
fnstcw
lcall
arpl
cltd
mov
repnz
cmp
dec
popa
stc
cld
adc
jo
mov
xorl
xchg
lret
lahf
mov
sahf
xchg
cmp
cmp
sti
int
es
pop
cmc
outsl
sbb
sub
mov
aam
inc
inc
movsl
mov
ljmp
mov
js
xchg
pop
enter
or
testb
in
mov
push
xor
inc
es
jbe
cmp
mov
dec
shlb
jne
and
out
sahf
adc
push
push
mov
push
or
adc
out
roll
adc
mov
xchg
xchg
dec
or
test
fcmovu
aam
bound
pop
lcall
mov
ss
out
movsl
mov
repnz
mov
dec
mov
pusha
lock
push
sub
iret
jb
lods
mov
jmp
sub
insb
ja
jo
sub
cmp
adc
mov
or
jg
arpl
xlat
xchg
mov
fs
add
jge
mov
and
iret
or
clc
sahf
dec
pop
push
iret
popa
jns
fsubrl
adc
mov
ret
xor
xor
adc
adc
insl
addr16
and
out
pop
add
ja
mov
adc
in
pop
pop
nop
call
cltd
inc
arpl
xchg
loope
repz
stc
sbb
outsb
or
scas
inc
mov
dec
cmp
int3
les
iret
lahf
push
in
add
xor
bound
aad
add
pop
pop
pop
adc
enter
dec
test
nop
lds
and
adc
lods
or
insb
loopne
je
test
fwait
sub
out
out
jecxz
stos
nop
cmp
sub
jb
pop
rcll
call
fwait
mov
in
xlat
repz
mov
idivl
inc
inc
xor
inc
jp
stos
ja
mov
repnz
je
cli
and
and
pop
ja
push
dec
sbb
push
and
add
into
mov
push
outsb
pop
sub
push
repnz
sbb
sbb
inc
pop
sub
push
pop
aas
dec
pop
cli
lahf
adc
inc
xchg
lods
push
shlb
cmp
cmp
dec
mov
sar
xchg
add
pop
dec
sahf
lea
out
lahf
and
lahf
mov
adc
push
cli
js
mov
and
movsb
jp
adc
repz
lret
jnp
dec
and
andl
mov
movsl
xorl
jl
inc
aam
loopne
sub
ds
mov
xchg
das
cmp
aaa
shrb
pop
lds
push
or
mov
repnz
cld
push
push
cld
sbb
xchg
sbb
xchg
popa
xor
pop
adc
es
movsb
jo
pushf
push
lds
rolb
add
lock
sahf
iret
adc
add
in
rolb
jp
mov
push
mov
sub
gs
subb
and
in
sarl
jno
jmp
dec
jns
mov
or
mov
movsb
mov
fisubl
mov
mov
sbb
sarb
aad
adc
pop
dec
xor
ret
cmp
jo
mov
jbe
mov
pop
mov
cmpsl
out
insb
jno
mov
dec
pop
das
inc
es
stos
pop
xor
dec
xor
dec
mov
cs
and
mov
jle
ljmp
push
mov
add
rsqrtps
jmp
cmp
and
push
jno
jbe
mov
imul
int
cmpsb
loop
cltd
push
mov
or
adc
test
or
jns
adc
and
or
insb
test
pop
addb
addl
lret
push
pop
sbb
or
pop
cmp
movsb
mov
adc
movsb
and
int3
cmp
flds
lds
jl
push
lahf
iret
jecxz
or
cli
mov
pusha
push
fmull
sbb
fildll
cmp
and
dec
sahf
lcall
push
les
fwait
add
js
idiv
insb
lret
lds
rcr
sbb
ja
jp
outsl
lahf
out
in
bound
and
adc
in
mov
ss
rcrb
test
jno
repz
inc
pop
cld
mov
push
lret
ret
repz
jne
inc
or
pop
cmp
or
leave
mov
inc
and
and
shlb
mov
mov
ss
inc
sub
xchg
xchg
insb
push
test
xor
jnp
xor
or
add
and
add
push
inc
aad
in
fsubl
call
pop
adc
and
push
popf
test
inc
and
pusha
mov
jge
fidivs
jecxz
adc
jb
sub
sub
gs
sbb
lea
popa
jnp
add
into
hlt
pop
xor
inc
push
lret
jnp
cmpsb
sub
out
mov
dec
in
inc
pop
ds
ja
cmp
push
sub
mov
pop
cmpsl
test
data16
xchg
in
mov
icebp
scas
and
cmp
out
arpl
inc
xor
fistpll
mov
inc
add
adc
rolb
push
mov
fbstp
mov
fnstcw
mov
repnz
popa
jge
cmp
push
sahf
loopne
push
sbb
cmpsb
pop
imul
loop
pop
push
mov
mov
push
jnp
adc
push
mov
mov
jno
popa
mov
ljmp
clc
pop
cmpsl
or
xchg
loop
adc
stos
in
nop
and
incl
jge
test
psubusw
loope
adc
js
mov
in
movsb
pop
xchg
nopl
add
imul
xlat
add
sbb
ficomps
jbe
adc
bound
out
stos
xchg
jmp
fcomps
push
inc
and
sbb
enter
sub
aad
jge
int3
loop
mov
fdivs
cmp
testl
movsb
push
out
mov
xlat
addr16
inc
dec
add
in
pop
push
cmp
sub
es
fnstsw
int3
enter
xor
mov
push
jmp
out
loope
add
xchg
std
cmp
dec
lea
jnp
cltd
sub
lea
std
sbb
jo
repz
cld
mov
cmp
xchg
aas
xchg
dec
mov
pop
idivb
lcall
int3
adc
ficompl
push
or
sti
lahf
sub
fildl
push
xor
mov
mov
mov
and
inc
in
dec
rcrl
inc
mov
out
push
ljmp
fcmovnb
sbb
pop
add
lock
add
jns
ljmp
mov
jb
inc
add
mov
adc
xor
ss
and
or
out
stos
cmp
fsubrl
and
in
in
mov
mov
cmpsl
jae
hlt
clc
dec
sub
jb
enter
arpl
sub
movsb
aaa
pusha
pop
cmc
jmp
sar
movsl
xchg
push
imul
lock
xor
scas
dec
sar
jl
mov
sti
out
outsb
out
push
or
pop
push
loopne
cmp
scas
loope
aas
mov
cmp
mov
lcall
mov
sbb
inc
sti
popa
cmp
dec
pop
enter
out
lock
cmp
sub
xchg
test
cli
ficomps
sbb
sub
and
dec
or
sbb
lds
and
lods
push
or
insb
clc
shll
xchg
pushf
icebp
cmp
jmp
int3
jg
xchg
mov
add
enter
repz
in
mov
popf
or
adc
mov
adc
add
enter
stos
insl
insl
fs
fwait
dec
sub
repz
push
je
jg
testl
int
testl
xor
pop
shrl
pop
inc
rcr
out
mov
push
rorl
push
lods
ret
cmpsl
cmp
jmp
pop
add
xchg
ja
lahf
cmpsl
iret
cmp
or
loop
cld
xchg
mov
clc
sbb
aad
in
mov
sbbb
lods
jns
sub
or
popa
cwtl
jnp
mov
aaa
lods
daa
jo
xor
stos
stc
mov
sub
xorl
lods
mov
repnz
add
fisttpll
fwait
adc
pop
int3
out
push
ret
add
fldcw
int
xlat
fwait
sbb
push
dec
out
pop
pop
xchg
int
int
sub
lcall
mov
push
pop
push
pop
nop
aaa
and
add
mov
cmp
sub
cmc
xlat
std
aaa
cmpl
les
in
xchg
out
aad
aam
ss
xor
movsb
mov
xor
scas
scas
mov
push
sub
inc
inc
lret
push
add
mov
xchg
sbb
aaa
lea
xchg
repz
jo
add
dec
inc
insb
mov
dec
imul
mov
inc
test
xor
lds
fs
stos
fsubl
add
add
cmp
data16
or
hlt
enter
cmp
jo
dec
aad
mov
out
test
mov
sbb
bound
aaa
mov
nop
mov
imul
loopne
imul
ja
loop
mov
mov
dec
lret
ss
imul
xchg
call
push
loop
cli
mov
repz
or
pop
pop
stos
gs
dec
fs
sti
push
rorb
adcb
xor
testb
les
andl
xchg
mov
lret
ljmp
out
ljmp
cmpsl
out
push
stc
scas
je
add
xor
or
cmp
jle
push
orl
xor
pop
push
jp
rorb
pop
cltd
push
xchg
ljmp
jne
xchg
push
jge
loopne
dec
daa
push
sub
je
push
sti
inc
daa
out
push
out
clc
push
push
ret
lods
ds
pop
cli
xor
out
clc
lret
mov
xor
xor
test
sbb
or
inc
leave
icebp
lret
mov
hlt
pop
jle
inc
aad
cli
in
cmp
in
mov
inc
pop
jecxz
jmp
cmpsl
mov
repnz
filds
icebp
pop
mov
add
mov
aad
jbe
cmp
cwtl
mov
fwait
inc
mov
xor
pop
fnstsw
test
xor
adc
xor
dec
add
push
jmp
adc
sbb
test
aam
sub
or
hlt
repnz
imul
dec
and
or
loope
ds
push
mov
sbb
cmpsb
mov
dec
loope
imul
sub
jp
push
sbbb
cmp
idivb
mov
bound
not
call
dec
sub
push
sti
xor
test
adc
mov
es
roll
icebp
daa
add
push
or
out
test
cmp
aas
popa
push
lock
pop
jb
mov
jecxz
push
inc
inc
sbb
inc
xchg
ret
aas
les
adc
xorb
les
jmp
push
jp
cmp
fidivrs
imull
cli
lods
popa
cmp
dec
call
orb
cmp
cltd
mov
hlt
xor
pop
lods
mov
je
popf
btsl
mov
ret
outsl
subl
into
push
push
in
fwait
ret
inc
ja
aam
sbb
or
inc
cmp
cmc
fildl
push
imul
pop
unpcklps
pop
stos
cmp
in
or
fsubs
in
cmc
add
mov
xchg
cmp
scas
sub
out
mov
jb
and
repz
jns,pt
push
stos
cmp
lahf
xchg
dec
sbb
pop
add
outsb
imul
call
sub
popf
popa
std
insl
sahf
pop
repz
mov
into
push
pushf
xchg
xchg
mov
inc
idivl
jmp
mov
iret
mov
xor
xlat
mov
cmpsl
dec
adc
add
je
lds
loop
popf
fwait
jo
ja
repz
push
xchg
and
jbe
dec
fsubrs
dec
testb
lahf
sub
add
sub
push
adc
test
enter
ss
jno
out
loopne
and
push
cmp
push
add
xchg
push
stc
andl
adc
leave
je
inc
imul
inc
das
jmp
icebp
xchg
add
push
sbbl
pop
fistps
lock
jp
mov
cmc
out
cld
or
loop
imul
inc
mov
cs
push
push
push
pop
sub
rcrl
xchg
pop
cmp
add
sarb
je
call
sbb
inc
inc
je
and
dec
dec
mov
dec
add
ret
repz
test
and
push
scas
arpl
inc
nop
out
negb
repz
dec
mov
stos
cmp
mov
imull
aas
pop
pushf
jge
inc
or
cmp
xchg
add
fs
mov
mov
and
inc
outsb
ret
xchg
sub
pusha
popa
sub
in
sbb
clc
test
rcll
sti
sub
scas
outsl
sarb
adc
sbb
mov
mov
add
sbb
jp
dec
and
and
sub
ret
jno
arpl
fucom
mul
mov
loopne
or
iret
lret
dec
arpl
rcll
movsl
add
push
push
hlt
jo
out
sbb
nop
mov
lahf
cmpsb
xchg
je
adcb
or
orb
sbb
andb
push
inc
test
and
mov
sbb
add
in
add
add
sbb
push
mov
inc
add
roll
mov
clc
cmp
push
xchg
shll
pusha
push
and
adc
scas
sbb
jns
cmp
mov
frndint
rclb
xchg
push
sahf
pop
inc
jns
adc
push
pop
mov
inc
cmpsl
jae
ficoms
and
fldt
cmp
push
add
fwait
sti
cmc
repnz
mov
push
aaa
xchg
pop
push
into
addr16
adc
out
test
fwait
fwait
int
outsl
scas
cmp
jb
dec
dec
lea
mov
fistpll
mov
int3
cmp
or
push
dec
sub
or
fidivrl
jg
sbb
popf
dec
shl
push
xchg
dec
sbb
push
je
in
pop
call
or
mov
lret
inc
inc
ljmp
mov
mov
stc
test
lods
imul
mov
cmpl
sti
repnz
mov
and
sbb
adc
or
and
jb
xor
sbb
aas
cmp
in
pop
test
and
and
jmp
cltd
xor
addb
mov
xor
and
pop
or
dec
sbb
adc
jmp
les
jbe
add
in
sbb
push
fisubs
and
imul
insb
cs
fstpl
pmaxub
mov
mov
mov
push
clc
push
add
sbb
popa
fwait
push
and
rorb
jmp
add
addr16
mov
sbb
les
add
cli
push
push
movsl
in
and
mov
xlat
dec
mov
sarl
jb
mov
sub
sbb
popf
rcrb
in
jb
cmc
sbb
xlat
je
dec
mov
mov
repz
out
or
adc
mov
xor
jne
lods
fidivs
fbld
xchg
cmp
add
cmpsb
mov
in
mov
add
sub
out
into
cmpsb
loope,pn
jg
popf
pop
inc
and
daa
roll
cli
nop
sub
sbb
xor
xor
mov
dec
inc
jg
mov
in
pop
fistps
aam
add
mov
ret
xchg
repz
push
mov
mov
add
mov
pop
addb
into
sub
mov
inc
loopne
xchg
push
and
mov
fildl
xchg
adc
push
dec
xor
sti
lock
aam
fwait
movsb
sbb
dec
pop
xchg
xor
filds
add
xchg
xor
out
pop
sbb
fisubs
movb
adc
sbbl
push
mov
paddq
cwtl
fsubrs
outsb
xor
inc
pop
cmp
mov
pop
cmp
movsl
cltd
or
sub
xchg
inc
mov
cmp
test
adc
int
push
icebp
cmp
into
jecxz
adc
xchg
pop
shrl
jp
int3
jne
ror
or
cmp
xchg
ss
roll
fistl
xor
cmp
das
out
aas
push
xor
movl
mov
nop
push
addr16
aaa
stos
jmp
pop
add
mov
aas
call
push
daa
cmp
out
and
push
jl
jle
dec
dec
xor
inc
dec
and
arpl
leave
pop
jno
add
sbb
xchg
dec
stos
push
and
addl
jbe
pusha
pop
inc
push
cwtl
and
cltd
mov
fcompl
es
push
or
jns
divb
aam
and
cmp
mov
sbb
sbb
push
xchg
xchg
aas
mov
mov
mov
mov
mov
fst
jl
fimuls
data16
cld
scas
jle
xchg
mov
pop
lock
adc
imul
inc
or
jnp
fwait
xchg
stc
ljmp
sub
lahf
mov
in
push
xor
data16
inc
dec
inc
dec
fidivs
xlat
mov
in
xchg
pop
jp
sarl
jmp
and
adc
out
jbe
cwtl
push
and
scas
adc
pop
fildl
mov
or
add
ds
add
sbb
push
out
rcl
mov
add
loopne
aam
xchg
std
repz
or
xchg
push
inc
test
xor
call
loope
push
cmc
pop
or
inc
int
inc
cmp
sbb
cmp
xchg
sbb
negl
scas
push
out
pop
scas
jno
stc
jmp
jmp
push
orb
fdivrl
and
lret
cmp
outsl
sub
and
cld
sub
mov
repnz
nop
aas
mov
pop
lods
and
fsubs
inc
jno
scas
sbb
das
repz
xchg
jnp
pusha
push
ja
aaa
sahf
mov
lods
jge
xchg
xchg
sbb
scas
cmp
inc
ret
pop
cs
popa
xchg
enter
xchg
jp
xor
leave
lods
lret
push
jmp
cmp
andl
js
rorb
cwtl
mov
inc
pop
push
call
dec
popf
and
andl
inc
jl
cmp
mov
mov
lret
pop
icebp
sub
or
movsb
lret
push
jmp
insl
imul
lock
or
test
adc
mov
xchg
and
outsb
jg
inc
mov
sbb
adc
test
xchg
mov
call
xchg
imulb
std
mov
clc
mov
ljmp
jle
fisubs
xchg
pop
mov
jecxz
std
pop
mov
jne
icebp
scas
mov
repz
repz
fmull
jp
es
test
outsb
jecxz
movsl
mov
sbb
dec
pop
mov
lahf
mov
jae
in
in
in
push
lret
mov
xlat
pop
stos
fwait
add
fbstp
mov
and
cmpsb
repnz
cli
sub
lods
pop
pop
jbe
mov
inc
ret
inc
push
xor
stos
in
ds
xor
push
ss
sti
cmp
mov
inc
cmp
push
fwait
and
adc
sub
mov
fistl
add
nop
mov
adc
mov
cwtl
cmp
jb
cmc
xchg
iret
js
add
dec
pop
das
movsl
sbb
cmp
in
push
call
jnp
jnp
add
faddl
lahf
inc
pop
adc
test
adc
nop
lahf
fsubs
jge
sub
hlt
icebp
sbb
pop
out
test
mov
gs
xor
movsl
xorb
jp
push
mov
pop
jmp
dec
aam
scas
xchg
adc
clc
cltd
cmc
scas
add
mov
movsb
mov
pop
lahf
pushl
cmpsb
xor
lret
outsb
push
ds
fists
sbb
lods
adc
and
pushf
and
fadd
data16
lea
mul
xchg
fstl
loopne
cltd
je
roll
int3
and
and
xor
pushf
or
cmp
aas
test
or
sbb
sbb
fs
adcb
sub
add
add
inc
and
push
xchg
pop
inc
adc
xor
dec
imul
or
xor
stos
daa
imul
in
and
mov
add
mov
xchg
sbb
or
push
pop
xor
repz
pop
fld1
mov
shl
push
icebp
enter
jo
jbe
push
stos
push
jp
xchg
test
xor
xlat
add
push
pop
mov
loopne
imul
and
insl
xchg
add
xchg
cmpsl
sub
xchg
out
and
add
cwtl
mov
aas
in
push
outsl
sbb
xor
icebp
xchg
mov
adc
push
rol
cmp
in
cmp
inc
fmulp
gs
sti
jp
xchg
cltd
icebp
dec
jmp
jbe
or
push
icebp
or
jns
mov
cmp
jecxz
insl
mov
and
jge
mov
mov
bnd
mov
icebp
mulb
mov
dec
loop
mov
pop
and
xlat
ret
mov
xchg
flds
sbb
test
rcrb
xchg
pusha
inc
inc
fstpt
inc
bound
aas
mov
xchg
or
cld
jge
aas
cmpsl
fsubl
sbb
jle
pop
xchg
aas
jl
movsl
nop
sbbl
mov
sub
add
fcmove
lods
lock
cmpsl
jbe
xchg
mov
mov
and
fidivs
out
fidivl
data16
push
test
out
cmp
jb
xlat
xor
pushf
add
cld
or
push
push
dec
sbb
push
or
lcall
pushf
jge
or
xchg
and
in
sbb
cmovno
in
mov
jbe
stos
jno
pushf
mov
popa
push
data16
push
pop
mov
pop
mov
sti
or
nop
sub
mov
jns
mov
leave
movsl
ret
jge
adc
push
pushl
pop
out
cmp
adc
popa
mov
inc
fdivrl
fidivrs
adc
mov
xchg
mov
xchg
push
into
orl
lock
pop
xor
shll
jmp
cmp
daa
mov
les
gs
in
jecxz
stos
inc
sbb
movsb
loop
rcr
stc
push
aas
mov
cmpb
ret
jb
push
or
fcmovnb
daa
arpl
ljmp
mov
fldenv
imulb
cmp
mov
sbbb
nop
sub
popa
xchg
test
les
gs
addr16
lea
jl
cwtl
in
xchg
stc
cli
fistpll
lock
and
inc
lea
shl
xchg
mov
dec
iret
test
sarl
cmp
ss
sti
and
xor
mov
sbb
jno
cmpsb
ja
shlb
dec
std
nop
scas
lea
push
int
popf
push
mov
cld
les
mov
popa
xlat
decl
mov
movsb
mov
lcall
sbb
js
repnz
mov
out
and
lods
pusha
mov
fcomip
or
loopne
rcrl
adc
aas
ja
mov
adc
cmp
or
hlt
or
xchg
or
mov
sub
ficompl
testl
push
cld
push
outsb
xor
mov
push
outsb
fistpll
ja
xor
dec
dec
pop
test
cmc
nop
mov
xchg
mov
push
and
ss
in
or
sbb
lods
bound
inc
push
mov
sbb
sub
cmp
pushf
dec
add
js
mov
ficoml
outsl
xor
sbb
cld
adcb
lea
ret
dec
movq
xchg
add
sub
sub
mov
xor
repz
jp
adc
mov
mov
xchg
mov
jmp
mov
rorb
clc
dec
jb
imul
sbb
test
sbb
adc
add
adc
sbb
cmpsb
xchg
add
sti
push
movsl
cmp
out
pusha
inc
lds
lods
out
or
and
mov
pop
jb
test
mov
loopne
test
jp
scas
xchg
jnp
adc
mov
mov
iret
dec
and
push
subb
adc
in
ja
cmp
decl
scas
icebp
mov
aad
inc
cmp
cmpsl
fwait
repz
pop
lret
mov
push
add
mov
dec
pop
out
xchg
xor
nop
ss
or
mov
mov
stc
fdivs
scas
mov
jge
jae
mov
cmp
fistpll
mov
xchg
das
fimuls
and
and
sbbl
je
mov
lods
mov
jbe
ds
cld
jne
dec
jle
orb
cmp
xor
sar
xlat
dec
push
shll
popa
mov
nop
push
mov
out
mov
test
push
fistps
cmp
in
movsl
dec
xchg
pop
mov
cmp
pop
inc
lret
jo
pushf
inc
pop
mov
mov
inc
int
push
mov
outsl
sbb
inc
popf
scas
cltd
es
pop
add
lock
out
inc
stos
cmp
xchg
pop
sub
out
xchg
ja
dec
sub
imul
cltd
push
and
lock
xor
add
jae
dec
ss
or
shlb
push
push
adc
in
jno
mov
cmp
pop
inc
lret
mov
lock
dec
pop
lret
mov
outsl
sub
push
adcl
and
mov
dec
js
sbb
lods
ljmp
mov
add
inc
xor
add
in
jl
imul
cmp
out
ficoml
rcll
ss
mov
jno
lods
popf
ja
adc
fldenv
sti
xchg
sarl
je
seto
les
or
and
js
adc
jl
adc
push
mov
cmp
jb
divb
ljmp
outsb
iret
mov
leave
lret
pop
push
pop
xor
cmp
or
test
pop
sti
lods
xor
sub
inc
pop
jbe
fsubr
arpl
ffreep
mov
shll
outsl
ret
add
stos
test
sbb
jecxz
shlb
add
xor
movsb
stc
pop
andb
jae
push
outsb
push
int3
xlat
push
push
inc
xchg
jns
dec
cmpsb
imul
das
and
push
xor
dec
loope
pop
lahf
and
xchg
mov
div
mov
or
jge
adc
push
sbb
mov
pop
mov
insl
pop
xchg
xlat
sbb
scas
dec
femms
sbb
dec
test
cs
inc
adc
sub
cwtl
gs
xlat
ss
sbbl
dec
sbb
inc
es
addb
add
nop
es
loope
adc
cmp
mov
jl
inc
ret
das
mov
push
aaa
and
add
ret
push
faddl
das
aad
cmp
pop
adcb
out
sahf
fs
insl
int
xor
jmp
sbb
jb
push
ds
inc
popf
jmp
mov
mov
out
jae
cmp
lea
repz
xor
cs
and
int3
mov
in
pop
adc
push
ret
cltd
xchg
js
cmp
and
out
and
or
outsl
outsl
cs
sahf
jb
push
and
es
scas
jbe
and
sub
pop
or
add
xchg
xchg
loope
outsb
sub
les
inc
sub
lds
push
push
insb
sub
js
sahf
daa
push
repz
adc
mov
das
scas
fsubl
icebp
inc
aaa
xor
adc
ss
addr16
iret
sbb
mov
repz
cmp
cmpsb
loopne
cmpsl
push
sub
mov
adc
int
mov
cli
ss
mov
ljmp
cmp
sub
ret
pop
mov
int3
cmp
das
out
lea
fbld
scas
std
sub
xlat
test
cli
mov
or
add
ret
mov
cmpsl
fsts
push
ret
pop
lret
xchg
ja
pop
aaa
push
scas
sbb
jae
push
adc
ds
adc
pop
jp
cmpsl
fcoms
xchg
lret
divl
pushf
and
fistpll
jp
dec
ret
jae
leave
push
inc
mov
icebp
xchg
movsb
lods
addr16
repz
sbb
scas
filds
cltd
xor
fsts
outsb
stos
sbb
fneni(8087
mov
fwait
add
insb
insl
xor
jb
sub
cmp
xchg
mov
aad
incb
sub
xchg
dec
or
daa
frstor
loopne
ljmp
repnz
scas
ss
xchg
push
call
cltd
sub
inc
xchg
insb
insl
or
inc
ret
aas
subl
and
sub
bound
in
or
ret
mov
pop
add
sahf
dec
xor
adc
pop
jl
cmp
fdivrs
lret
xor
xchg
or
mov
add
cmp
pop
icebp
es
and
scas
adc
mov
or
push
xchg
lds
mov
sbb
ljmp
rep
mov
pop
push
mov
jg
lds
mov
or
shl
lock
push
mov
jp
sarl
mov
and
jne
aaa
sub
gs
stos
mov
xor
lds
popf
ja
or
jle
push
pop
xor
pop
push
xor
push
jno
dec
pop
mov
mov
fisttpll
xchg
daa
jp
push
xlat
add
hlt
ljmp
adc
and
push
nop
aaa
jb
and
sahf
int
xchg
mov
hlt
andb
add
mov
and
repnz
aaa
or
mov
mov
fildl
stc
jb
dec
ret
or
lret
or
scas
inc
pop
fcoml
rorb
mov
add
mov
mov
nop
add
jno
mov
out
add
cwtl
ds
sbb
outsl
mov
movb
mov
test
scas
mov
jns
mov
out
push
mov
jno
fucomi
into
xchg
push
and
or
xchg
addr16
cmp
or
inc
add
pop
cmp
add
jnp
jne
lcall
cmp
mov
mov
popf
add
dec
orb
loope
inc
mov
sub
jmp
cmp
ja
movsb
andl
arpl
popa
push
xor
add
sub
and
mov
fwait
enter
sbb
push
mov
je
add
and
loop
js
lret
fs
add
dec
push
push
and
scas
pop
cmp
out
adc
filds
mov
add
lahf
rclb
inc
and
jl
scas
add
aad
dec
or
xor
out
aas
dec
decl
cmp
add
fistpl
idivb
ret
movsb
test
jg
sti
test
xchg
mov
dec
mov
in
sbb
pop
gs
jg
sarb
lret
int3
mov
jnp
rol
dec
sbb
pop
aad
mov
inc
jb
gs
mov
shrb
inc
loopne
xor
pop
loopne
lods
lret
push
shrl
push
and
sbb
xchg
in
cli
sub
lret
pusha
sub
mov
mov
add
push
fldenv
push
scas
or
or
add
stc
mov
pop
xchg
push
dec
xlat
cmpl
cmp
out
out
mov
mov
jle
and
std
ja
bound
inc
inc
adc
cmp
xchg
mov
repnz
cmp
stos
stc
or
xor
sbb
mov
dec
shrb
fmull
ja
sbb
add
lods
fisubs
xor
insb
sbb
xor
cmpsb
inc
mov
xchg
scas
push
sbb
jecxz
sub
mov
inc
sahf
xlat
cmp
push
sub
push
xchg
cmp
fs
pop
mov
outsb
xchg
jecxz
xor
mov
sub
jne
push
xor
dec
xchg
push
push
ret
cld
inc
shr
fsubr
inc
mull
pop
dec
pop
inc
cmpsl
xor
int3
dec
bound
ret
andl
cmp
dec
pop
leave
ss
arpl
and
xlat
jae
cmp
dec
push
popa
sub
jl
push
mov
shrl
repnz
lods
out
sub
push
cld
popf
stos
inc
push
jns
pop
cmp
int3
popa
inc
push
sub
cli
jne
lret
sbb
lret
push
sbb
dec
xor
out
and
sbb
xor
cmc
scas
scas
outsl
push
pop
sub
jo
and
inc
xchg
push
lods
inc
xor
jno
and
daa
dec
adc
in
int3
xchg
je
add
push
stos
sahf
xchg
int3
cmp
stos
std
daa
ret
jo
push
daa
mov
jne
lcall
mov
mov
add
data16
pop
xor
clc
add
sti
aam
dec
pusha
xchg
out
in
or
or
ds
xor
clc
or
xchg
sbb
sub
mov
inc
jecxz
mov
push
add
add
es
pushf
jbe
sbb
bound
addr16
out
push
lret
out
stos
mov
adc
adc
sub
inc
jl
stc
mov
sub
nop
js
mov
xchg
pop
loop
xchg
lret
out
or
sub
push
xchg
add
cld
in
fwait
dec
jl
test
imul
insl
jbe
js
ret
insl
or
popf
rcrl
push
cmpsb
pushf
push
repz
das
add
mov
out
ds
lea
add
sub
pusha
sbb
int
mov
mov
mov
jle
negb
mov
insb
scas
push
rolb
pushf
imul
mov
je
int3
ret
lret
cmp
xlat
push
lods
stc
push
arpl
and
mov
xchg
cli
aaa
push
inc
out
mov
out
imul
lahf
mov
dec
addr16
nop
js
push
fnstenv
fstps
rolb
cmc
cmpsb
adc
add
sub
icebp
push
or
push
push
xor
mov
inc
test
cmp
addb
mov
out
inc
jp
imul
das
cmp
ret
test
mov
push
mov
mov
mov
sarl
pop
orb
jl
adc
pop
jnp
mov
pusha
dec
shrl
das
dec
pop
rorb
mov
add
xor
pop
cmp
pop
xor
cmpsb
popa
in
jle
arpl
mov
dec
repnz
mov
dec
xchg
iret
lea
inc
fimull
pop
sbb
test
xorb
dec
jg
cmp
xchg
cmp
mov
add
rorl
cmp
enter
dec
scas
sbb
out
outsl
repnz
testl
shlb
jbe
outsb
add
xor
repnz
and
bound
xorb
jne
outsl
sub
mov
sub
cmp
pop
ljmpw
mov
mov
pop
jnp
xchg
mov
aaa
mov
cmc
ja
pusha
push
data16
jmp
ss
cmp
and
std
fcmove
out
pop
int
ja
rorb
sbb
pop
das
js
cmp
loop
mov
fs
stos
adc
hlt
sub
out
push
xchg
rclb
lods
orb
subb
lahf
pusha
push
add
adc
out
popa
cmpsl
push
cs
ljmp
sub
arpl
inc
push
xchg
dec
mov
int3
dec
or
stos
scas
loope
in
repnz
aas
xchg
fnstcw
sarb
adc
scas
pop
mov
leave
fisttps
stos
repnz
jge
xor
pop
negl
ffreep
push
pusha
xor
test
inc
int
xor
mov
push
movsb
dec
sbb
pop
mov
insb
movsl
popa
and
cld
fwait
mov
loop
sbb
nop
inc
movsl
xor
pop
jg
or
rorl
push
push
movsl
mov
enter
jecxz
mov
jge
popa
mov
xchg
test
ret
mov
lea
mov
fcmove
dec
add
std
pop
and
mov
sahf
cmp
dec
jne
insb
xchg
pop
jmp
mov
push
aaa
jo
decl
pop
outsb
pop
add
sbb
loop
inc
es
enter
call
mov
mov
loopne
scas
cmp
rorb
mov
xor
mov
call
mov
mov
fsubs
jnp
push
inc
add
arpl
es
pop
cmp
das
or
jl
ljmp
push
push
sbb
and
cs
xchg
xlat
cltd
adc
inc
stc
or
cmp
pop
dec
jmp
push
jb
inc
mov
adc
adc
adcb
test
mov
or
mov
negb
mov
int
and
fdivp
push
jne
jp
out
mov
xchg
into
nop
xor
pop
das
add
and
in
icebp
jle
les
lahf
add
cli
stos
jmp
jne
push
pop
mov
lock
cs
cld
aad
insl
or
rcll
pop
lea
jbe
lds
xchg
adc
sub
jge,pt
movsl
js
pop
push
das
adc
mov
bswap
jp
lret
cmp
cmp
jle
cmp
mov
rorl
push
out
cmp
ficomps
or
sub
cltd
shlb
les
dec
mov
jecxz
loope
xchg
xchg
repz
jne
xlat
ficompl
adc
push
push
lds
sub
jg
aas
imull
mov
cltd
ljmp
mov
sbb
sub
mov
lods
mov
push
jns
ds
ret
cli
pusha
xchg
scas
sbb
arpl
ljmp
sbb
mov
ja
repz
xlat
popa
push
call
cmp
pop
jge
push
popa
jnp
clc
mov
cmp
cmp
jno
sbb
das
outsl
scas
addr16
loope
add
mov
notl
rcrl
cmp
and
pop
and
fisubrl
mov
add
or
aad
xor
push
jg
insb
fnstcw
xor
ficoml
mov
mov
les
cmc
gs
int3
inc
js
cwtl
mov
lock
inc
jo
mov
sbb
xchg
into
jno
in
xlat
pop
xchg
or
mov
mov
push
add
sub
pop
pop
lds
push
inc
xchg
sbb
or
lea
fstpl
or
or
mov
stos
pop
jle
faddp
push
xchg
call
decb
mov
push
mov
stos
daa
sahf
pop
fbstp
push
divb
nop
rcrl
dec
push
xchg
add
xchg
xchg
ret
das
push
lcall
push
jmp
popf
cld
ret
mov
in
mov
mov
cli
xchg
mov
out
jge
jle
mov
and
dec
push
xchg
arpl
cmp
mov
and
jne
adc
adc
cld
imul
mov
sbb
add
xor
sub
inc
jg
xchg
jp
in
test
bound
add
mov
add
pop
mov
mov
sbb
mov
mov
movsb
pop
loop
scas
xchg
sti
outsl
mov
inc
inc
sub
sub
and
jae
sbb
arpl
adc
xor
cmp
pop
mov
sbb
jns
ja
mov
pop
adc
leave
cltd
iret
xchg
sbb
mov
xchg
lods
test
stc
cmc
fistl
push
in
lcall
enter
fwait
clc
rorb
mov
ds
xor
leave
aam
in
aaa
fsts
push
pop
daa
stos
pusha
ss
mov
rolb
dec
shr
xor
mov
gs
jbe
mov
mov
ret
jno
movsb
leave
fadds
or
ljmp
push
cmc
or
xor
pop
mov
mov
push
fwait
jo
pop
pushf
cltd
pop
mov
push
or
xchg
movsl
jl
push
rclb
mov
mov
sub
lock
add
rclb
das
popa
js
lea
decl
movsl
lahf
out
inc
ds
hlt
ret
jns,pt
xchg
jecxz
imulb
jns
loope
mov
lret
movsl
jmp
cmp
fldenv
iret
mov
ss
addl
push
fldcw
adc
jbe
das
sbb
hlt
mov
jae
repnz
mov
sbb
pop
cli
mov
adc
sbb
jbe
push
xlat
fnsave
cli
mov
sti
sbb
jp
push
pop
add
adc
cli
popf
mov
pop
out
jecxz
xor
outsb
leave
test
jb
test
call
arpl
sahf
xor
mov
rcrl
test
lods
cs
bound
lock
insl
pop
mov
int3
inc
cmp
aas
imul
lock
cmp
xchg
sub
sub
lea
fildl
shr
inc
call
mov
mov
out
je
movsb
xchg
shrl
sti
sub
out
out
cmp
les
into
mov
loop
xchg
adc
dec
push
cltd
mov
shll
mov
es
cmc
xchg
sbb
shlb
lock
fildll
push
aas
jl
loopne
xor
add
iret
push
cli
add
cltd
loopne
mov
mov
loopne
mov
inc
xor
lret
mov
cmp
mov
imul
out
xchg
movntq
out
ret
pop
roll
fdivl
mov
xchg
jle
sub
lcall
out
iret
int
pop
mov
mov
gs
test
gs
and
int
adc
lods
popa
sub
stos
dec
idivl
shrl
test
insb
div
mov
jb
jmp
jp
into
clc
cmp
insl
push
xor
mov
movsb
push
dec
lahf
or
or
and
ljmp
icebp
and
dec
fcmovu
or
sub
mov
lret
push
fiadds
dec
sbb
xor
popf
cmp
inc
mov
leave
cmpsl
xchg
pop
stos
lret
jecxz
xchg
pop
mov
pusha
mov
ficompl
jbe
xor
imul
push
pop
mov
push
fnsave
xor
loop
push
or
mov
sub
mov
xor
or
mov
xchg
xchg
jb
ja
or
icebp
out
xchg
xor
adc
in
cwtl
lret
add
ljmp
push
xlat
in
and
into
hlt
mov
ficoml
add
std
fstl
sbb
sub
sbb
call
dec
ret
lcall
and
int
xchg
pusha
sub
xchg
xor
push
mov
push
jecxz
mov
xchg
lock
dec
testl
in
aaa
xlat
sub
mov
sti
cmp
pushf
je
jp
sub
cmpsl
inc
std
lahf
rolb
sbb
pop
sub
push
cmpsb
clc
sub
mov
out
adc
pop
add
mulb
or
inc
imulb
scas
cwtl
adc
cmp
outsb
pop
sbb
fnstcw
iret
sub
push
loop
int
mov
sub
cmp
push
sbb
xlat
out
stc
fadds
inc
cmpl
mov
jno
pop
lock
imul
inc
leave
pop
mov
sahf
jns
fcoml
sub
jne
into
mov
or
jb
daa
test
jecxz
lcall
hlt
xchg
and
stos
adc
shl
add
mov
mov
hlt
push
rcr
push
les
inc
jl
push
cmp
outsb
jae
clc
pop
js
testl
mov
mov
aad
adc
gs
jge
loope
inc
fldt
mov
xor
cmpxchg
and
cmp
inc
sar
pop
jno
shrl
arpl
and
out
and
and
pop
sbb
sahf
jle
cmp
out
jae
mov
es
pop
and
sahf
and
sbb
stc
int3
mov
mov
xchg
lea
lea
jecxz
jge
cmp
dec
lcall
cli
aad
ja
jl
adc
ret
and
das
adc
and
int
adc
les
sub
roll
imul
nop
stos
dec
ljmp
fiaddl
xchg
ret
sbb
pop
cmp
xchg
pop
push
mov
xchg
add
inc
nop
add
imul
rcrl
popa
add
push
hlt
ficomps
add
insb
inc
sbbl
fiadds
lock
pop
dec
push
mov
popf
mov
sbb
gs
adc
mov
out
and
jnp
fmull
int
xchg
rorl
cmp
jno
addb
daa
popf
push
xchg
test
pop
iret
mov
mov
les
xchg
xor
sbb
mov
inc
ja
pop
daa
inc
xchg
cltd
dec
aam
push
mov
shlb
outsl
add
mov
mov
sub
mov
jae
sbb
daa
shlb
inc
sub
es
jnp
lahf
xor
in
nopl
pop
adc
inc
sahf
xchg
add
popl
repnz
mov
push
xchg
les
mov
cmp
sarl
mov
cwtl
inc
jae
mov
rcll
out
cli
adc
add
out
imul
pop
inc
dec
mov
inc
mov
add
push
pop
loop
mov
push
push
or
inc
leave
mov
mov
fdivl
ja
adc
out
dec
jnp
xorl
jb
jmp
pop
cmp
je
mov
push
sub
jns
lea
mov
cmp
divl
adc
ds
jg
hlt
je
push
daa
fistpl
jbe
ja
loop
cli
pop
mov
xlat
add
adc
jne
mov
lock
jns
fcoms
sub
rorb
shl
in
xor
icebp
add
mov
loopne
arpl
scas
into
loop
mov
cmp
cmc
push
rcrl
and
cmp
inc
fsubr
ljmp
push
lcall
scas
in
xchg
std
repz
inc
mov
outsl
fisubrs
lahf
fcmovb
push
imul
jns
pop
mov
mov
dec
imul
xlat
iret
sub
xor
leave
outsl
lds
pop
mov
cltd
dec
xchg
popa
cwtl
inc
clc
inc
or
testl
enter
rcl
xor
jge
iret
adcb
xchg
call
pusha
scas
or
mov
jp
xor
jle
daa
jne
push
rol
mov
loopne
and
scas
sbb
dec
int3
xchg
leave
loope
pusha
test
int3
adc
cwtl
mov
out
sti
or
sahf
aam
sahf
aas
jo
loopne
sbb
add
push
ret
mov
xor
or
mov
out
add
ret
bound
loope
mov
and
roll
or
ds
roll
mul
jno
mov
or
fcomps
mov
jecxz
push
sbb
fimuls
push
push
mov
pop
inc
xchg
sbb
push
int3
or
inc
add
lret
jne
adc
sti
jg
int3
jne
outsl
pop
xchg
jl
arpl
loop
sbb
push
mov
shlb
jecxz
xor
lods
push
mov
popa
insl
push
ljmp
or
inc
push
dec
jno
mov
rolb
add
mov
inc
cmp
add
jmp
leave
fdivrs
or
adc
rcll
jl
add
out
shrl
sbb
lret
dec
imul
testb
push
ret
lods
pusha
xor
andl
push
sub
test
push
pop
xchg
lcall
add
mov
test
jne
into
xor
ss
dec
adcb
jne
daa
mov
pop
repz
sub
cltd
jge
pop
and
dec
rep
sub
jnp
imul
sbb
pushf
mov
into
enter
sbb
sbb
inc
or
addb
js
mull
cmp
lahf
call
ds
das
mov
cmp
push
nop
cwtl
out
cmp
aaa
mov
xchg
inc
and
out
mov
es
ret
sbb
leave
and
lahf
add
sub
idivb
loop
popl
lcall
or
and
jmp
and
test
scas
inc
repz
rolb
adc
jle
cld
jle
mov
mov
stos
sub
jp
sub
xchg
push
jmp
adc
mov
jb
inc
and
push
dec
xorb
pushl
insb
rorb
addr16
xchg
fistpl
arpl
out
cs
adc
mov
loopne
dec
aad
jp
push
sbb
ja
cmp
iret
mov
lods
in
jge
pop
fbld
shl
add
pop
mov
dec
je
jne
insb
add
sub
sti
mov
mov
into
outsl
insb
cs
fists
scas
gs
icebp
and
xchg
jmp
stos
int
xor
mov
popa
push
test
xor
shll
shrb
test
inc
repnz
jecxz
jno
mov
out
pop
imul
mov
push
inc
mov
cmp
cmpsl
cmp
xchg
fmuls
test
iret
fisttpl
test
and
cltd
xor
lahf
inc
inc
outsb
xchg
mov
xlat
in
scas
inc
xor
fimuls
in
xchg
mov
iret
adc
lds
mov
incl
add
test
sahf
sbb
enter
xchg
adc
into
inc
xlat
mov
test
jge
sarb
inc
push
sbb
pop
in
add
cmp
add
mov
jns
push
and
adc
stos
jae
enter
dec
xlat
push
push
jb
sbb
es
jge
adc
ja
cmpl
fldt
xlat
mov
loope
inc
sbb
xchg
mov
cmp
cmpsb
lahf
cmc
sub
sbb
jle
divps
out
sub
pop
add
in
loope
jne
adc
adc
jns
fwait
lahf
repz
sbb
push
mov
repnz
subl
xor
pop
dec
xchg
xor
cmp
in
rcr
cmp
cmp
mov
jge
mov
in
mov
enter
push
lea
mov
mov
adc
fcomi
mov
mov
dec
cwtl
in
test
jge
xchg
out
xchg
mov
pop
jo
mov
fdivrs
add
pop
cmp
add
jne
jbe
ret
repnz
add
jae
test
iret
mov
call
add
testl
mov
les
std
add
xchg
pop
xor
or
sbbb
or
mov
xor
xchg
ret
outsb
in
das
sub
jne
cmp
out
xchg
jbe
or
stos
xchg
jp
aam
jg
and
xchg
popf
sbb
inc
inc
bound
xchg
cs
and
sub
inc
or
xor
dec
sub
sub
std
jge
pop
push
push
in
or
test
inc
in
imul
push
add
push
mov
mov
scas
jecxz
pushf
jne
push
ja
fst
cmpsl
sahf
xchg
push
ds
push
mov
mov
push
pushf
mov
lea
adc
mov
push
jg
stc
push
xchg
ds
pop
cmp
mov
jp
push
js
stos
pop
dec
addb
jecxz
sahf
ljmp
xchg
nop
sbb
pop
gs
xchg
repnz
jmp
xlat
mov
sub
sub
pop
repz
outsb
mov
sub
inc
cmp
mov
enter
add
or
jns
jmp
sub
shrl
push
ljmp
push
ss
int3
or
mov
add
hlt
stc
loopne
test
jmp
sub
xchg
add
adc
das
dec
push
loope
push
in
sti
sub
in
imul
xchg
lock
xchg
fldcw
push
and
outsb
cmp
add
aam
std
inc
sub
xchg
add
insb
xor
mov
imul
scas
test
xor
mov
xor
fs
mov
jecxz
add
jecxz
and
mov
movl
jb
sub
cwtl
xchg
cmp
pop
or
or
mov
jno
mov
jecxz
or
fdivrl
inc
cmp
faddl
sti
loope
xor
loopne
imul
cld
xchg
mov
adc
fsubs
adc
test
push
inc
xchg
addl
ret
and
in
jbe
imul
iret
addr16
cwtl
or
lret
mov
outsb
lcall
fld
mull
movb
lcall
sbb
push
mov
dec
mov
cwtl
lock
mov
dec
jg
pop
jo
int3
inc
adc
xchg
movsl
push
mov
pop
fs
icebp
sub
push
and
sbb
mov
adc
lock
push
jnp
or
mov
pop
cmp
fs
je
cmp
pop
mov
test
mov
mov
test
mov
xlat
mov
rcl
mov
add
dec
mov
jno
adc
stc
adc
xchg
push
fistl
and
or
outsb
in
into
inc
jnp
outsl
lods
xchg
adc
das
dec
sbb
push
fidivrl
push
std
fs
scas
cmp
dec
mov
inc
cmp
stc
test
add
xor
dec
mov
aad
adc
push
imul
fnstcw
or
jmp
sbb
test
mov
push
mov
dec
pop
and
jo
or
pop
jb
push
dec
insb
sub
mov
adc
push
dec
push
pusha
fwait
and
cmp
mov
fsubrs
sbb
test
aaa
jb
sarl
in
push
cmpl
stc
test
rcrl
xchg
out
mov
es
lock
mov
enter
cmp
mov
or
or
mov
xlat
jns
pop
jg
lods
pop
add
out
sub
sub
mov
xlat
lds
mov
jle
or
fistps
mov
push
int
gs
sub
xchg
out
stos
mov
adc
push
jae
adc
xchg
pop
cmp
and
push
adc
lea
cmp
xchg
ds
lret
inc
cltd
pop
cltd
xchg
cwtl
leave
ret
mov
mov
pop
std
in
std
int
and
jmp
mov
or
add
aam
es
sahf
push
add
add
push
push
push
cmp
gs
mov
icebp
mull
xchg
enter
popf
sub
push
sbbl
push
sub
jne
pop
mov
xchg
add
pusha
push
or
sbb
out
xchg
sahf
in
out
rorl
and
jbe
lret
cmc
test
sub
clc
mov
leave
inc
loop
addr16
jo
mov
mov
sahf
pop
inc
les
or
enter
jmp
dec
rcrl
aas
or
or
xchg
ficoml
sbb
and
mov
loop
jno
jg
jne
push
pop
les
pop
int
aaa
loop
sbb
insl
mov
lock
cwtl
arpl
sub
mov
shrl
add
mov
push
push
out
cmpsl
inc
lret
mov
fsts
sbb
enter
inc
or
add
adcb
hlt
ret
imul
cs
sar
sti
fst
fs
cmpsb
je
jb
jbe
xor
push
xor
mov
ljmp
sub
mov
sub
mov
adc
movsb
add
jnp
push
jg
mov
sbb
in
dec
sbb
js
imul
xchg
dec
ljmp
ljmp
cmp
dec
xor
push
stos
nop
dec
xor
mov
mov
mov
int3
inc
or
cmp
aas
or
out
sub
out
inc
scas
orb
lret
and
dec
ljmp
cmpsl
out
push
mov
cmp
test
int3
int
test
inc
popl
dec
sub
cli
loope
andl
jne
shrl
adc
bound
mov
orl
clc
or
and
jbe
sub
pop
dec
jecxz
push
ja
fcoml
mov
sbb
sarl
pop
push
adc
repz
repnz
xor
mov
dec
inc
jo
inc
adc
decb
mov
mov
aam
push
or
fcoml
in
cmc
jmp
and
hlt
lods
aad
sub
mov
test
insb
cmp
mulb
push
mov
gs
lods
mov
and
fwait
xchg
jno
xchg
and
cltd
movl
into
into
jns
ss
shll
aaa
pop
ljmp
add
lds
mov
add
sti
data16
pusha
mov
inc
push
movsb
xor
push
mov
out
cmpsl
fwait
mov
or
add
into
add
int
pop
jns
scas
jno
aam
jge
sti
shrb
mov
clc
test
pop
orl
xor
push
in
subb
out
adc
mov
pop
data16
aam
cld
test
mov
icebp
mov
push
leave
xor
mov
imul
je
jl
adcb
ss
cs
or
int3
je
cmp
pop
mov
pop
mov
sbbl
loope
cmp
xor
sbb
lea
mov
fs
adc
mov
in
dec
bound
lcall
jnp
popa
mov
inc
xor
jge
sub
push
mov
adc
movsb
adc
outsb
loope
rorl
stos
xor
out
scas
aas
lret
add
inc
mov
outsl
in
sti
popf
fucomip
add
nop
repnz
dec
push
xchg
lret
add
sbb
push
cs
push
push
movsb
push
popf
dec
mov
test
sbb
push
ret
xor
jle
andl
mov
ds
inc
movsl
inc
adc
daa
les
push
movsb
ffreep
mov
ljmp
movsl
pop
sbb
out
insb
dec
imulb
rcrl
packuswb
imul
xor
xchg
adc
cmp
lea
push
or
pop
shlb
cmp
pop
mov
sub
fcompl
out
rcrb
subb
call
push
mov
cmp
pop
pop
data16
adc
mov
cmp
xor
in
xorb
js
rcrl
sahf
test
lret
adc
add
cld
lock
cli
cmc
mov
lock
add
and
or
fstl
mov
stos
es
push
mov
or
imul
daa
repz
in
hlt
out
cwtl
adc
gs
sub
push
scas
inc
jo
jae
fmull
mov
test
loope
movsl
dec
insl
fs
jo
and
lock
add
shll
cmp
mov
clc
mov
outsl
pop
shl
xor
fnstsw
lea
xchg
xchg
iret
mov
dec
outsb
fbld
inc
pop
mov
xorb
sysenter
scas
add
insl
sub
loop
jns
mov
push
or
jecxz
sbb
sti
cmp
lcall
fnstcw
call
cmpsl
jmp
dec
inc
and
xchg
xchg
lret
repnz
dec
mov
add
inc
insl
and
lock
sub
insb
or
sbb
pushl
mov
lret
cmp
rorb
xor
inc
hlt
sub
rcl
loope
mov
stos
add
xor
jmp
xchg
rcll
pop
xor
xor
mov
into
push
lock
push
mov
aad
hlt
pop
sbb
jns
pusha
jp
pop
pop
leave
mov
fdivrs
fidivrs
jae
jbe
cmpsb
mov
out
add
adc
movsl
push
or
int3
add
adc
sbb
xorb
lret
pop
push
add
jle
adc
jg
int
pop
mov
jg
cli
mov
and
adc
or
mov
inc
or
push
jg
lret
inc
lcall
sbb
fisttpll
gs
jp
adc
ret
sub
ret
jns
gs
sub
arpl
movsl
dec
or
xor
ffreep
mov
adc
xchg
mov
hlt
lds
cmp
or
negl
ret
call
aad
inc
fcompl
inc
aam
ret
ljmp
pop
ja
shr
lahf
xchg
fstpl
jmp
sti
mov
dec
rorb
and
dec
push
cmc
or
rcll
popa
mul
in
cmp
adc
xor
sbbl
icebp
jecxz
arpl
jecxz
add
xchg
imul
fwait
in
jne
inc
iret
out
popa
lods
inc
iret
cltd
cld
outsb
clc
and
xchg
popa
fstps
pop
je
cmpsb
or
sub
mov
in
int
dec
and
insb
lcall
cmpsl
mov
movsl
jg
cmpsb
imul
inc
jns
std
stc
mov
ja
ss
insl
mov
in
jmp
test
in
movsb
inc
mov
and
xlat
jmp
sbb
cwtl
cld
fs
xchg
jbe
xchg
popa
clc
leave
jnp
and
mov
aam
push
jecxz
test
rclb
xlat
push
push
jb
popl
out
mov
fcoml
push
inc
bound
fdivrs
add
les
enter
jg
pusha
pop
sbb
sub
xor
imul
push
xor
lods
xchg
addr16
rclb
rcrb
xchg
dec
loope
push
jle
ja
loopnew
inc
xchg
rorl
xor
push
mov
or
sub
scas
clc
xchg
mov
subb
xor
jp
sahf
call
fsubs
push
or
lea
xchg
jo
pop
mov
jo
mov
xor
insl
xchg
add
cmp
cmp
clc
movsb
nop
jae
rolb
jg
in
mov
mov
jp
nop
fs
dec
lahf
sub
sbb
dec
sub
les
xorb
lds
and
es
mov
mov
lahf
jl
adc
and
nop
rorb
es
fists
mov
insb
xchg
out
dec
je
popf
mov
push
pop
insl
sahf
sbb
out
jno
cli
mov
int3
push
pop
xchg
xchg
shld
jg
lea
mov
popf
xor
out
jmp
scas
rcll
mov
movsb
dec
lcall
arpl
cmc
and
movsl
sub
in
mov
cmpsl
outsl
mov
mov
jno
mov
mov
cmpsl
lods
jb
rol
xchg
jmp
cwtl
sub
daa
mov
sbb
jmp
lods
add
test
jecxz
mov
cmp
aaa
stos
mov
jle
xor
ffreep
and
testb
inc
movl
enter
aad
sub
xor
mov
stos
test
in
mov
dec
mov
ds
xor
cmpsb
out
dec
cmc
xchg
jg
adc
or
inc
mov
arpl
xchg
hlt
push
lret
call
xlat
push
fcoms
adc
pop
jl
add
xchg
xchg
jb
pop
or
mov
or
xor
arpl
inc
fisubl
lret
inc
sahf
sbb
cmp
fwait
out
pusha
add
push
sbb
call
insl
leave
xor
jle
loopne
inc
hlt
cmpsb
pop
jle
xchg
insl
inc
mov
adc
lods
loope
icebp
sbb
ja
imul
mov
sti
lock
loop
bound
or
and
shrl
mov
outsb
inc
lcall
jl
cmp
out
repz
xchg
mov
push
nop
loop
push
std
ret
test
xchg
push
sbb
sbb
pop
iret
sti
add
das
add
mov
fidivrs
adc
pop
adc
inc
fldenv
in
and
and
inc
add
repnz
lahf
mov
inc
mov
mov
outsb
dec
cmp
or
fisttpll
mov
mov
sub
cltd
add
jae
mov
or
dec
mov
fldcw
enter
rorl
fcmovb
inc
pusha
lods
or
mov
xlat
lahf
push
mov
cld
inc
pop
and
sub
loopne
jl
js
repz
sahf
jmp
arpl
jmp
movsb
clc
jnp
mov
dec
push
lcall
inc
inc
jecxz
fnstsw
xchg
fmuls
scas
rclb
rcr
xor
inc
sub
dec
push
scas
jecxz
in
movsl
push
pop
pop
inc
mov
popa
movsb
out
and
bound
ja
add
divb
ret
mov
adc
fcompl
mov
test
rcrl
sub
scas
cli
and
or
dec
mov
insl
fwait
test
jnp
xor
andl
pop
or
jmp
ljmp
mov
add
or
mov
pop
scas
adc
xor
pop
lret
shll
ror
cmp
insb
jo
cmpsl
hlt
push
cmp
nop
cmp
mov
push
sub
jmp
push
cmpsb
dec
push
in
adc
js
test
inc
xchg
adc
imul
sbb
fdivp
gs
and
xor
and
sub
testb
roll
sub
dec
insl
mov
and
jbe
dec
sahf
xchg
push
cltd
push
sbb
ret
jmp
mov
insl
aam
xor
inc
aaa
mov
adcl
cmp
add
xchg
xor
test
push
int
test
xor
jo
mov
les
xlat
sbb
sbb
in
orb
sub
enter
adc
cwtl
add
fisubrs
enter
call
pop
mov
je
jl
cmc
mov
add
inc
xorb
add
and
add
in
push
mov
sub
sbb
lods
fs
aas
push
out
push
sbb
test
mov
mov
aam
xchg
rcrb
pop
loop
out
ds
dec
cmpsb
push
sbb
jle
pusha
pop
aas
leave
pop
cmp
inc
push
mov
push
jle
push
cmp
mov
clc
idivl
shlb
loop
test
sbbb
sbb
mov
je
lock
add
in
fwait
xchg
cmp
aaa
je
pop
fstp
ja
movsl
outsb
je
adc
test
ds
sub
call
xchg
nop
adc
insb
push
fwait
bound
fxch
daa
outsl
aad
push
jmp
testl
mov
test
mov
out
push
cmp
jmp
negl
repnz
xor
adc
idivb
fst
jle
jp
cmp
or
sbb
xchg
in
stos
sub
push
rclb
lret
dec
inc
mov
cli
mov
leave
jb
mov
ja
ficomps
dec
js
pop
mov
xor
dec
fs
jae
inc
mov
xchg
test
xor
cmpsl
repz
rorb
push
dec
pop
mov
pop
scas
mov
push
jge
adc
pop
adc
addr16
rcrl
outsb
cmc
icebp
dec
jo
mov
test
cltd
mov
mov
and
popa
sbb
lds
cmp
cmp
pop
and
mov
decb
push
ljmp
ljmp
movsb
fsubs
outsl
sub
or
inc
fwait
mov
and
lds
add
fsubrl
js
inc
das
inc
popf
lcall
xor
jns
stos
jl
rcrl
cmpsl
mov
icebp
pop
lock
push
sbb
pop
sbb
or
pop
subl
and
and
aam
xchg
mov
inc
mov
in
xor
dec
mov
dec
mov
mov
iret
in
cmp
jnp
push
dec
add
push
bswap
jmp
xchg
mov
or
add
jmp
lret
and
jge
jp
mov
mov
cmp
mov
mov
pop
faddl
and
pcmpgtb
pop
xchg
lods
scas
pop
inc
les
xchg
mov
push
ret
fs
jge
add
fcoml
pop
dec
push
in
dec
and
mov
subl
js
mov
push
mov
imul
adc
or
sbb
adc
inc
std
sahf
rcpps
gs
pop
in
adc
jecxz
icebp
mov
jns
cmp
inc
cs
cli
pop
lret
or
push
and
adc
in
jp
pop
jl
adc
or
cmp
subl
dec
mov
imulb
imul
popl
movsb
fisttps
insl
jae
scas
xor
insl
mov
dec
cmpsl
mov
xchg
in
test
pop
das
aas
into
mov
adc
cld
aas
lcall
mov
ja
jge
ret
jge
and
outsb
push
popa
mov
xlat
jne
leave
aaa
std
mov
int3
jle
in
scas
mov
inc
jge
xor
ja
popf
aad
jge
mov
popa
mov
dec
lahf
aam
jnp
mov
inc
andb
inc
test
sbb
sbb
out
dec
int3
mov
sahf
xchg
cs
jg
xor
mov
push
mov
xor
ret
inc
out
in
lock
xchg
test
mov
fistpll
and
add
xchg
repz
loope
mov
fdivrs
movsb
sbb
addl
add
pop
jg
sub
stos
stos
repz
enter
mov
es
stos
push
inc
adc
lock
adc
xor
in
lret
cmp
cmp
sbb
and
out
mov
and
outsb
sbb
sbbl
dec
outsb
jl
stos
cltd
iret
aas
xchg
outsl
and
push
popf
nop
jp
cmp
decb
dec
jnp
mov
sbb
in
and
pop
daa
pop
mov
lods
jo
stc
xchg
mov
push
sub
shlb
test
fcomps
stos
mov
pop
or
inc
inc
push
ficompl
cld
and
movsb
mov
and
xchg
insl
sbb
adc
cs
pcmpeqd
pcmpgtw
and
xor
hlt
cmpsb
lcall
rorb
leave
repnz
aad
cmp
add
jbe
adcb
mov
jb
outsb
in
shrb
jo
mov
sub
mov
sub
int
movsl
int
insb
add
sub
call
cmp
xchg
ljmp
popf
test
test
xchg
aas
dec
inc
pop
cli
loope
adc
arpl
cmpsl
sub
fdivrs
icebp
repz
orb
xchg
lret
mov
jecxz
adc
test
imul
stos
cmp
cmc
iret
or
int
mov
pop
pop
sarb
imul
ds
jg
loopne
imul
arpl
and
xorl
leave
sub
movsb
int
mov
cmp
mov
inc
lret
movsl
pushf
mov
add
outsl
or
mull
data16
rcrb
stc
push
sub
and
pop
lock
jnp
outsl
mov
jle
cmpsl
int3
or
mov
mov
cmp
xorl
ljmp
imull
jno
sub
adcl
nop
scas
arpl
cmp
roll
push
mov
icebp
cld
or
cmc
rolb
lods
in
cmp
add
stc
fstps
pop
jno
shrl
outsb
or
and
xchg
jnp
xchg
jge
adc
addr16
mov
jecxz
mov
jg
mov
or
pop
test
cvtdq2ps
test
cwtl
add
or
push
xor
std
xchg
sarl
push
cmp
pop
pop
push
inc
decl
adc
sbb
movsb
cwtl
ret
sub
sbb
or
and
push
and
gs
inc
or
cs
cmpsb
fstps
fidivrs
adc
mov
mov
xchg
or
xor
nop
xor
inc
sarl
jbe
hlt
frstor
push
ljmp
lds
pop
push
mov
mov
lock
ficomps
jp
fldt
or
adc
pop
pop
shlb
aam
jp
scas
repnz
and
inc
fcomps
cs
adc
and
or
addb
jns
pop
push
imul
das
sub
cmp
mov
pop
jl
sub
xchg
sbb
push
in
in
xchg
stos
mov
xor
dec
jns
dec
add
fcom
test
mov
xchg
dec
sub
icebp
pop
fnsave
cmp
mov
jae
xchg
cmp
push
sub
and
test
and
xor
out
xchg
jne
lods
int3
mov
inc
jp
movsb
lret
out
jle
mov
lods
outsl
push
outsb
mov
jae
divl
xor
insl
call
jno
lret
or
and
arpl
into
pushf
xor
mov
sub
pop
inc
hlt
mov
dec
dec
xchg
imul
sub
mov
add
push
sarb
clc
bound
jno
stc
and
push
inc
mov
ja
xchg
popf
icebp
mov
xchg
outsl
fldcw
sub
mov
stos
inc
rorl
add
cmpsl
push
or
jb
adc
inc
inc
push
mov
test
cmp
cmp
int
sbb
add
or
clc
adc
adc
mov
bndldx
push
movsl
pusha
popf
lds
in
lods
ficoms
push
sub
push
lods
and
jbe
mov
xor
in
mov
sub
jo
pop
pop
push
xor
jp
inc
mov
xor
subb
mov
cmp
fs
adc
movsb
aad
and
pop
fwait
daa
dec
cmc
and
bound
out
push
cmpsb
mov
mov
lcall
mov
adc
sbb
cmpb
shll
int3
aas
inc
inc
xor
push
cmc
dec
out
mov
or
fistl
adc
pop
icebp
popf
push
jp
test
stc
ds
cmp
fwait
mov
shlb
in
inc
jl
repnz
pop
mov
mov
sub
jnp
or
mov
mov
fimull
out
sub
adc
cld
enter
jno
sahf
popa
xchg
xor
shl
sarl
test
mov
push
mov
and
lea
popa
pop
sbb
lahf
repnz
mov
jo
in
xor
push
loope
dec
sbb
arpl
das
or
cwtl
shrl
orb
jb
test
push
inc
push
out
and
dec
xchg
inc
cmp
mov
add
push
aaa
fs
cmpsl
mov
stc
mov
push
hlt
cmp
adc
sbb
cmc
mov
mov
in
cmp
dec
push
cmpsb
push
xlat
add
int3
into
clc
mov
mov
fsub
sub
lea
cmp
pop
into
jne
pop
xor
adc
xlat
pop
ss
cmp
mov
jg
or
pop
cltd
inc
push
jae
mov
rclb
or
arpl
pop
sbb
call
adc
cmp
rorb
and
imul
sub
cmp
test
sbb
out
and
ljmp
ljmp
enter
add
dec
repnz
dec
pusha
xor
hlt
push
pusha
push
icebp
mov
aad
xor
out
loop
xchg
lcall
dec
bound
sahf
jae
lock
adc
popf
notb
nop
xchg
movsl
jp
sub
xor
jl
bound
xchg
lods
adc
cltd
xor
repz
push
fs
adc
outsb
movsb
add
dec
sbb
push
jmp
jmp
clc
das
cld
arpl
je
test
or
inc
scas
fsubs
movsb
and
stos
cmp
sarb
mul
cli
dec
enter
adc
outsb
add
xor
push
xchg
sbb
push
xchg
adc
test
data16
into
cmpsb
std
lret
sarb
sti
sub
sbb
inc
jns
les
mov
jo
jle
mov
stos
in
push
aad
and
mov
xchg
in
ficomps
mov
je
movsb
and
sub
xchg
and
mov
out
dec
scas
pop
or
adc
xchg
outsl
test
mov
cmp
xorb
stos
mov
push
push
dec
xchg
frstor
pop
bound
or
push
test
cli
jle
test
pushf
scas
inc
leave
add
pop
cs
sub
sarb
adc
mov
out
stos
push
cld
mov
scas
mov
dec
inc
add
add
arpl
cmp
lods
popf
nop
pop
xorb
pop
shlb
aas
out
xor
cmp
movsb
out
jl
cvtps2pi
loope
fwait
sub
mov
adc
xlat
shrl
add
add
jo
mov
loopne
fstl
hlt
aad
loop
xlat
mov
popf
lcall
jmp
arpl
jl
mov
daa
jg
pop
imull
icebp
clc
fldenv
cmp
and
das
divl
add
ret
mov
adc
rcll
push
mov
test
mov
test
push
sbb
pusha
push
pop
sti
shrb
addr16
jle
ret
dec
jl
sub
divl
dec
inc
ret
test
ds
xor
mov
adc
stos
dec
add
dec
inc
pop
mov
std
outsl
leave
push
jge,pt
mov
push
repz
fs
mov
pop
stos
std
jnp
sbb
xor
lcall
adcl
jle
mov
pop
xor
lret
inc
iret
xchg
sarl
mov
test
hlt
leave
inc
and
mov
push
call
lret
adc
in
cmp
test
aad
sbb
test
cmp
outsl
jb
testl
and
psubw
add
loope
into
jns
mov
in
pop
adc
je
mov
xchg
fadds
adc
inc
leave
adc
aaa
add
mov
adcb
not
sbb
jecxz
and
cmp
cmpsl
movsl
sbb
outsl
daa
jnp
push
lods
lock
push
ja
add
stc
dec
dec
ficomps
xchg
scas
adc
cld
call
jno
jge
outsl
jns
cmp
add
mov
std
push
and
and
push
cmpsb
cld
fmuls
inc
repz
push
scas
mov
lcall
xchg
mov
inc
xchg
mov
sbb
push
fstpl
test
rclb
or
sahf
out
jmp
rclb
enter
mov
cli
jbe
or
add
subl
call
xorl
adc
mov
xor
push
aad
hlt
push
ror
movsl
test
xor
sarb
rcl
movsl
out
add
inc
cmpsb
push
outsl
xchg
mov
sti
xchg
das
mov
mov
lock
xchg
pushf
xlat
add
inc
cmp
xlat
push
pop
out
mov
iret
pop
xchg
cmc
in
in
stc
push
xchg
in
jns
aad
aam
jae
dec
lret
imul
cwtl
leave
jne
cmp
add
fwait
rorb
repnz
cmp
jae
mov
ja
ret
adc
push
test
push
adc
popa
push
adc
push
jb,pn
sbb
js
daa
pusha
adc
out
outsb
mov
or
pop
xchg
decb
int
shl
lret
mov
mov
pop
cwtl
cltd
jge
mov
mov
mov
hlt
sub
loopne
inc
nop
les
lea
push
addr16
xor
out
jl
arpl
hlt
cmp
int3
cmp
jnp
xor
xor
jle
shrl
lret
xorl
dec
out
movsb
cld
out
ret
jns
aad
rclb
xchg
clc
sub
daa
dec
sti
gs
les
leave
adc
jmp
scas
sbb
push
pop
mov
repz
icebp
sbb
lods
lahf
sub
fiaddl
xchg
dec
cld
xchg
xchg
mov
test
push
in
clc
bound
xor
out
mov
sbb
ret
lret
mov
mov
mov
and
insb
out
mov
pop
data16
and
and
int3
test
fwait
lahf
hlt
sti
jb
test
test
mov
dec
jno
cmp
jo
xor
int
mov
adc
subb
pop
mov
xor
xchg
cmp
xchg
pop
aas
cs
adc
xchg
cltd
movsl
sarl
add
stc
push
lea
leave
mov
jge
movzbl
push
dec
enter
repnz
jp
aaa
mov
sbb
mov
hlt
mov
das
or
cli
inc
movsb
jb
pop
subb
loopne
jbe
sar
sub
mov
inc
jle
nop
dec
addl
jbe
shlb
sti
cltd
xchg
add
ljmp
test
dec
and
xchg
or
mov
mov
cmp
shrb
adc
stos
in
xchg
jmp
mov
data16
cmp
jb
mov
je
inc
adc
mov
mov
mov
scas
sbb
inc
cmpsb
lods
repz
push
push
dec
sub
and
cmp
sub
outsl
jae
les
fcoml
je
pop
lahf
push
jae
pop
loop
inc
pop
movsb
sbb
adc
adc
das
mov
adcl
mov
fwait
jne
cmpsl
std
pop
sar
xor
and
cmp
insl
xorb
loopne
in
dec
mov
shlb
xor
mov
xor
jp
or
mov
mov
mov
adc
jge
adc
cld
adc
fwait
outsl
ret
imul
out
cmp
stc
adc
cmp
xchg
es
ja
xorb
dec
mov
test
xlat
xchg
enter
mov
push
pop
cmc
add
adc
lea
out
outsl
xchg
jge
aaa
nop
leave
and
stos
inc
lahf
aaa
xor
pusha
js
mov
mov
sbb
fs
movsb
fwait
xchg
jp
pusha
jo
add
sbb
out
jo
mov
mov
inc
mov
cmp
aam
push
add
gs
lahf
pusha
jge
xchg
jmp
data16
xor
loopne
mov
mov
sbb
in
out
push
fs
in
ljmp
sub
jg
cltd
or
cmc
xlat
lret
or
cmp
in
daa
xchg
mov
outsb
scas
jnp
in
into
sahf
cmpsl
js
lock
jne
into
in
jle
pop
xchg
mov
xor
lcall
mov
sbb
adc
xchg
std
hlt
cmpsb
sub
mov
and
dec
cmpb
aam
add
sbbl
insl
jg
arpl
xchg
sbb
xchg
jg
and
push
mov
imul
aaa
jmp
push
xor
je
aad
mov
inc
dec
mov
decl
outsl
and
xchg
pushf
jno
ret
xor
xchg
fimull
std
cmpsl
jo
push
cmp
pop
in
stos
lahf
in
out
in
dec
or
frstor
bound
mov
pop
xchg
push
dec
cli
pushl
and
xlat
jle
hlt
mov
cmp
dec
daa
jmp
arpl
jg
push
scas
loope
shll
ret
aaa
in
gs
cmc
pop
xchg
adc
out
orl
and
pop
pop
push
jne
or
scas
mov
test
mov
xor
rcrl
lds
aas
jg
push
inc
mov
movsb
fdivl
loope
in
xor
cmp
or
sub
hlt
xor
mov
xorb
pop
push
inc
int
mov
lret
sarb
iret
shrl
mov
mov
adc
pop
in
or
add
inc
add
mov
pop
cwtl
push
mov
sbb
call
sarb
imul
jmp
fstpl
fdivrl
push
push
sbb
shl
push
push
insb
nop
adc
mov
stc
bound
inc
enter
push
adc
jnp
sarl
mov
inc
test
rcrb
mov
test
inc
or
cmp
adc
mov
push
mov
jp
add
jecxz
push
fcompl
stos
movsl
push
aas
inc
push
dec
sarl
mov
jnp
lret
pop
xchg
idivb
shrb
mov
loope
fidivrl
xchg
jl
aam
mov
add
mov
scas
into
jg
jbe
fs
dec
xchg
add
inc
out
stc
mov
or
fs
es
and
lea
fwait
sbb
mov
pop
push
jle
fwait
mov
xchg
testb
insb
pop
mov
pop
jb
rcrb
pop
pop
repz
mov
jle
enter
or
xor
adc
push
addr16
xor
lahf
inc
inc
fwait
nop
xchg
lock
xor
and
adc
xchg
shll
and
add
pop
sub
cmpsl
lods
es
mov
push
push
and
clc
mov
pop
mov
xchg
mov
mov
pop
inc
and
jmp
push
xchg
aam
repnz
mov
subl
jo
jne
dec
call
inc
fdivrs
add
aad
pop
sub
jl
pop
out
push
adc
mov
daa
mov
pop
stos
cs
push
cld
ror
je
inc
dec
clc
xchg
cmp
icebp
xor
xor
xor
rol
cmp
scas
inc
and
push
pop
sub
pusha
rcrb
arpl
std
sahf
movsl
mov
into
lods
push
scas
lods
pop
mov
adc
hlt
sub
sahf
rcrl
mov
push
lret
and
xchg
roll
cmp
scas
mov
xchg
adc
and
pop
mov
idivl
out
push
rcrb
cmp
mov
cmp
push
stos
es
adcb
lcall
iretw
push
in
push
into
mov
iret
out
push
std
jg
imul
ficompl
dec
lcall
sahf
loop
stos
mov
adc
cmp
loopne
js
clc
mov
es
cmp
lcall
addr16
bnd
mov
lock
bnd
fld
call
outsb
pop
cmpsl
daa
flds
xchg
or
iret
and
inc
sub
adc
dec
outsb
inc
cmp
call
jno
mov
cwtl
jl
jecxz
mov
stc
out
mov
lock
cmp
mov
pushf
jmp
sub
fldl
cmpsl
fstpt
outsb
jle
inc
fisttps
cs
and
jge
lahf
fsubr
shll
mov
add
sbb
jno
mov
jns
out
mov
mov
xor
mov
cmp
es
push
sub
jmp
or
sub
add
add
mov
or
lods
std
mov
jmp
clc
inc
stc
lret
clc
aaa
push
dec
out
jmp
ja
pop
push
sbb
inc
je
jae
pop
jecxz
std
imul
adc
dec
xchg
jg
mov
mov
or
push
stos
inc
iret
jno
mov
xchg
ss
mov
addr16
mov
mov
dec
add
feni(8087
test
jge
xchg
iret
sbb
mov
shll
and
pop
ja
lret
mov
lds
mov
clc
mov
aaa
or
push
aas
rcl
mov
bound
lcall
mov
xor
das
push
daa
jns
push
sbbb
adc
pop
hlt
adc
ret
lds
int3
inc
xchg
fildl
sub
add
jge
loop
jl
and
mov
jo
mov
jle
and
mov
push
sub
cmpsl
jno
add
loope
dec
inc
or
and
icebp
push
xchg
xchg
out
jmp
les
cmp
and
or
add
xchg
into
adc
sub
cmpsl
int
or
mov
sbb
pop
in
mov
cmp
mov
and
fwait
mov
outsl
rclb
repnz
add
jmp
mov
lods
cmpl
adc
push
xor
mov
xor
loopne
adc
sub
mov
sbb
call
adc
in
mov
lock
mov
push
xchg
sbb
mov
adc
jmp
mov
fisubrs
int3
stos
mov
jns
out
xchg
mov
test
inc
pop
ds
mov
mov
adc
aaa
mov
aad
aad
ret
push
or
cmp
ja
sbb
push
in
add
ret
add
fwait
cmpsb
jmp
mov
lds
lock
or
das
repz
scas
cmpsb
inc
xchg
nop
mov
xor
dec
and
dec
jl,pn
xor
les
pop
enter
cli
mov
out
cmp
mov
cltd
rclb
cmp
insw
jne
int3
or
sti
scas
adc
dec
push
jp
mov
aad
mov
push
stc
mov
pop
sbb
push
rorb
hlt
lret
call
dec
mov
jmp
jbe
or
gs
test
call
jmp
fs
mov
loope
xor
push
fmulp
pop
bound
loopne
test
or
cmp
scas
js
imul
call
xchg
lods
iret
shlb
int3
cld
lods
pop
es
xor
lods
imul
arpl
inc
adc
std
scas
or
pushf
sbb
mov
adcb
push
xorl
jmp
int3
cmp
mov
scas
test
sbb
xchg
mov
pop
ret
in
xchg
test
push
popf
xor
mov
adc
pop
test
xor
mov
or
adc
add
scas
add
push
outsl
into
mov
and
fucom
jmp
mov
mov
ficoms
pop
outsl
pop
lea
xchg
sarl
out
sbb
repnz
ret
xchg
iret
lret
push
xchg
stos
scas
push
mov
push
fidivrl
fstl
loopne
imul
stos
pop
pop
scas
jge
leave
int
hlt
repz
adcb
je
mov
cmovbe
mov
pop
or
sbb
inc
std
and
mulb
push
ds
test
push
and
popa
inc
inc
outsb
mov
mov
incb
ds
mov
gs
out
push
inc
mov
fs
pop
lcall
cmp
xor
jne
jecxz
fs
dec
sarb
sub
mov
sub
ja
inc
dec
icebp
inc
inc
pop
or
enter
inc
jb
xchg
bound
daa
xchg
repnz
in
lods
pop
int3
mov
dec
repnz
jb
xor
push
xchg
pop
lret
cltd
shlb
push
sbb
jnp
jnp
jmp
fcmovnbe
jno
lahf
orb
lcall
or
popa
or
sbb
xchg
jne
call
daa
xchg
imul
mov
push
icebp
pop
cmp
rclb
test
mov
outsb
and
into
pop
das
aad
ljmp
int
shlb
lcall
inc
pop
mov
cs
lds
jl
inc
repz
ss
mov
lcall
out
scas
xchg
jae
in
aam
movsb
inc
jne
jb
xchg
iret
push
int
jo
std
in
jecxz
mov
test
adc
imul
ja
lea
insb
dec
add
add
jne
dec
fs
fsubp
xchg
mov
push
mov
mov
xchg
enter
mov
movsl
lret
dec
sub
cmp
insb
clc
inc
hlt
shlb
inc
push
xchg
bound
and
cmp
push
fisttps
stos
cmc
int3
dec
loopne
sbb
aad
imul
cli
mov
nop
inc
cmpsb
sbb
pop
push
inc
cmpsl
cs
mov
imul
call
or
mov
and
out
enter
stos
fcoms
iret
add
nop
mov
push
cmpsb
stc
sub
pop
xorl
cmp
fsts
xchg
out
add
test
imul
daa
je
stos
pop
fwait
push
adc
xor
pop
cmp
ret
enter
pusha
mov
testb
mov
adc
jp
sbb
mov
xor
pop
cmp
dec
cli
push
popa
mov
mov
popf
gs
movsl
pop
stos
out
repnz
jle
scas
pop
pop
mov
inc
gs
rep
adc
fiadds
test
adc
and
inc
aam
mov
ret
pushf
pop
mov
addl
xchg
jbe
fstps
arpl
jle
ja
out
xor
ljmp
inc
lahf
adc
or
dec
jno
jp
mov
fbstp
ret
out
call
mov
and
add
movsb
loop
sbb
addr16
adc
stos
inc
cmp
adc
test
inc
je
data16
icebp
ficompl
jmp
mov
inc
cmp
cmpsb
dec
sahf
mov
cltd
fimuls
in
pop
pop
cmc
lds
push
jecxz
decb
mov
cs
lcall
jo
insl
int3
scas
jae
fs
and
outsl
decb
pop
loope
clc
scas
mov
cmp
popf
mov
fidivl
mov
shrb
data16
jbe
add
clc
jecxz
jecxz
in
sub
lds
xchg
dec
filds
sbb
xor
push
in
dec
cmp
inc
es
aaa
enter
rcl
lea
aaa
mov
aam
sub
mov
cwtl
add
xor
out
lds
push
stos
cmpb
jp
js
cs
vandps
cwtl
inc
xchg
int3
xchg
mov
mov
cmp
xchg
push
iret
inc
jmp
push
fs
movsb
fmull
test
mov
stc
out
incl
adc
mov
shlb
loopne
mov
xlat
outsb
inc
notb
enter
cwtl
int
dec
add
xor
xor
outsb
and
cmp
imul
pop
pop
push
inc
pop
sti
ficoml
pop
xor
cmpsb
jmp
mov
jne
cmp
jl
adc
repz
fstpl
scas
pop
push
push
lret
add
imul
xchg
or
imul
sub
jmp
imul
in
jecxz
cmp
fsubp
scas
add
add
fisubl
xchg
lods
out
xchg
jae
sub
push
mov
dec
cmp
mov
cmp
rcrb
push
sbb
xlat
jbe
push
cmp
sub
push
xchg
mov
aas
testl
ss
xchg
add
jnp
loopne
push
popa
dec
pop
aad
inc
arpl
mov
movsb
movsl
lods
into
cltd
int3
aam
popa
repnz
sbb
iret
jnp
shl
mov
cli
adc
scas
sbb
mov
xchg
mov
cltd
and
dec
icebp
test
mov
movb
and
push
jno
xchg
xchg
mov
pop
bnd
gs
int3
or
dec
dec
hlt
mov
add
sub
test
test
das
inc
add
jle
pusha
push
sub
popa
in
or
pop
mov
or
and
jle
fstp
divb
cmpsb
popf
test
push
fstl
adc
out
push
add
lret
out
je
divb
add
inc
mov
lcall
les
jne,pn
aam
xchg
push
fcmovnbe
enter
pop
push
sbb
mov
dec
les
push
push
fdivl
cmp
repnz
pushf
inc
jge
mov
inc
lods
pusha
adc
mov
pop
mov
jno
sub
push
sub
arpl
test
rorl
jno
sahf
mov
push
push
movsl
ds
xor
sbb
push
mov
scas
inc
cli
es
ja
pop
jo
jecxz,pt
dec
cmpsb
xchg
mov
push
cmp
sub
mov
andl
xor
mov
dec
adc
mov
sub
dec
pusha
aaa
push
push
pushf
or
popf
loop
push
mov
sub
lret
mov
movsl
sbb
lds
fwait
sbb
xchg
cmpb
lret
nop
ret
lock
outsl
out
sbb
into
shll
sbbl
pop
jnp
ss
sti
push
mov
scas
pop
jae
dec
mov
leave
stos
sbb
or
imul
mov
xor
stos
mov
lock
pop
stos
pusha
movsb
dec
pop
mov
pop
int3
out
faddl
jb
or
std
ja
ljmp
jp
push
xchg
push
mov
and
push
mov
jmp
sbb
imul
jp
push
jae
cmpsl
hlt
mov
pop
fwait
lahf
adc
out
es
cmp
scas
out
ficompl
fwait
mov
stc
adc
repnz
aas
sbb
inc
clc
popf
xlat
push
mov
inc
ja
mov
pop
lahf
fstpt
movsb
jge
sarb
mov
mov
xor
cmp
cltd
mov
jns
stos
cmp
xor
mov
int3
xchg
sbb
dec
aad
movsl
jl
xor
fs
pushf
inc
mov
add
cmp
push
lods
in
xor
sahf
push
sarb
fwait
xchg
lret
mov
dec
cmp
sbb
stos
add
and
mov
sbb
dec
ret
fdivrl
fsubl
sbb
jnp
popf
frstor
sub
in
add
jne
mov
mov
call
pusha
lret
adc
out
jne
pop
pop
mov
pop
mov
mov
jmp
mov
ljmp
and
jne,pn
xor
adc
push
push
or
fsubr
inc
loopne
push
adc
int3
adc
or
mov
rcr
dec
iret
cmpsb
inc
into
inc
xchg
push
f2xm1
add
push
dec
xchg
idivb
pop
std
jae
adcb
mov
cmp
cmp
jl
out
xchg
test
mov
lahf
mov
xchg
int
jp
arpl
leave
push
fmuls
jns
cmp
adc
mov
mov
inc
or
mov
pop
xchg
arpl
push
fwait
ja
cmp
aad
adc
mov
fcmove
jle
mov
xlat
adc
mov
push
enter
sti
jns
les
aaa
dec
loop
aas
iret
adc
xor
mov
insl
insb
sbbl
div
pop
inc
pop
pop
cwtl
sahf
jne
mull
or
inc
lods
add
xchg
jbe
mov
in
mov
cmp
fists
jle
xor
jae
pop
push
in
xorb
mov
mov
sbb
pop
cs
ja
mov
xorb
mov
cmp
test
lds
or
xor
int3
sbb
push
sti
jmp
mov
and
and
pop
jns
push
inc
mov
jmp
enter
mov
dec
sbb
fst
out
ja
xchg
loop
fldenv
inc
push
jl
xor
in
in
pushf
lret
xchg
fmuls
pop
mov
jb
pop
xchg
adc
daa
stos
cmpsb
ja
or
stc
pop
bound
out
dec
sub
inc
in
arpl
shll
orl
sbb
popa
cmp
mov
test
mov
dec
mov
add
lret
popf
insl
jne
roll
flds
mov
or
cmp
xchg
mov
jle
cmp
mov
mov
mov
pop
push
ss
dec
add
mov
ljmp
jp
lds
and
stos
pop
les
out
cmc
addr16
mov
and
into
xor
or
sbb
pop
rcrb
dec
addb
fnstsw
jae
or
loope
mov
sbb
add
push
push
and
add
aaa
push
xor
dec
mov
rorb
testb
mov
or
fdivrs
inc
jge
sbb
dec
sub
lock
mov
rcrb
aas
es
mov
jno
push
cs
movsb
dec
hlt
pushf
push
jo
jne
aaa
aad
sub
jl
sub
push
push
dec
cmp
std
jg
mov
pxor
aaa
mov
test
lahf
cmp
lds
aad
fisubl
add
mov
bound
fidivl
pop
sub
daa
dec
dec
cmp
sbbl
dec
pop
mov
popf
call
inc
add
pop
jbe
pop
push
fdivr
add
shll
mov
sub
push
popa
push
or
or
jns
ds
xchg
xchg
mov
or
sbb
sbb
leave
lea
incl
dec
fsts
sbb
loop
push
cmpsb
mov
mov
loope
add
movsl
js
push
push
inc
aad
into
test
xchg
lds
cmp
mov
enter
sarb
mov
sbb
xor
cmpb
mov
add
sub
jge
ja
lea
add
sbb
dec
cmp
movsb
ret
jecxz
sub
mov
push
or
lcall
lret
pop
jl
xor
fwait
xchg
pop
mov
xor
and
inc
in
fistpl
xchg
lods
push
cld
addr16
imull
pop
xor
cmp
xor
cld
sbb
inc
sbb
leave
daa
inc
inc
fnstsw
mov
ret
les
fmull
xchg
rcll
sbb
rorb
call
lds
rcll
inc
stc
add
cmp
test
sbb
or
aaa
lea
add
lds
xchg
push
imul
cmp
mov
into
je
xor
sbb
mov
mov
or
pop
int
mov
inc
pop
push
pushf
loope
pop
scas
cmp
push
cmp
xor
push
xor
call
gs
xlat
xchg
mov
jbe
test
popa
pop
sbb
add
and
adc
mov
cld
xor
mov
into
addr16
lea
int
icebp
lcall
mov
push
shr
icebp
pop
pop
fdivl
xlat
ljmp
pop
pop
adc
add
aam
jo
std
sub
and
dec
ficompl
push
xlat
shl
mov
scas
into
insb
shll
ret
inc
add
out
xor
mov
mov
xor
mov
inc
iret
je,pn
in
jl
mov
ljmp
sub
in
dec
mov
and
loop
sub
add
sub
pop
pop
xor
or
mov
cmp
mov
dec
push
scas
ret
shll
dec
mov
jo
sbb
inc
pop
or
sub
inc
sub
loop
sbb
iret
or
xchg
adc
out
jbe
call
mov
in
cmp
bound
ss
out
dec
test
cmp
or
or
pop
pop
insl
mov
sub
cmp
fildl
mov
stc
mov
in
aaa
scas
xor
stos
stos
mov
cli
enter
push
ret
cltd
ss
and
mov
jae
mov
iret
xchg
fcmovb
daa
sbb
mul
pop
mov
sbb
pushw
mov
daa
dec
inc
jecxz
notl
test
mov
fnsave
mov
adcl
jbe
aas
subb
mov
inc
push
decl
lds
lds
push
scas
shl
cmp
gs
xor
outsb
pop
xchg
inc
adc
sub
mov
sub
dec
mov
xchg
in
add
and
adc
push
cmp
or
cmp
popa
rorb
or
or
push
mov
sarl
rol
push
dec
sbb
xor
scas
and
and
mov
mov
sub
sub
mov
adc
fwait
mov
add
mov
mov
stos
xor
push
aas
adc
mov
ret
movsl
maskmovq
mull
mov
shrl
sbbl
iret
mov
sub
mov
jno
cmc
jecxz
inc
shl
mov
xor
or
jo
and
xlat
enter
cmp
and
lea
rcr
pop
jmp
lahf
aas
data16
or
mov
mov
sbb
aas
insb
out
add
scas
shlb
xor
xchg
ds
mov
test
sti
pushf
jns
fstpt
cmp
popf
ret
mov
xchg
mov
and
test
dec
cmp
fistl
mov
sub
cli
movmskps
mov
bound
cmp
inc
jno
nop
push
inc
lock
dec
in
pop
dec
js
jl
outsl
push
pop
ljmp
dec
mov
test
lahf
or
cmpsb
and
aam
mov
xchg
pop
pop
fcmove
cmc
jne
sub
popf
mov
mov
xor
imul
mov
mov
ret
repz
push
mov
out
lods
mov
loopne
cmc
jge
in
xor
dec
test
xlat
and
inc
lds
add
fisubrs
sahf
jo
sub
arpl
adc
push
jo
pop
pop
mov
ss
jb
sbb
push
arpl
mov
cmp
mov
mov
dec
into
outsb
mov
mov
daa
in
add
das
pop
call
dec
movsl
ds
or
pop
push
in
loope
lds
jecxz
push
aam
cmp
call
add
mov
bound
dec
push
mov
dec
ss
mov
lods
stos
xor
pop
jp
inc
testl
push
imul
stc
scas
imul
adc
mov
sbb
fisubrl
iret
imul
movb
dec
repnz
add
xor
mov
loopne
shrd
pop
aam
lret
dec
sbb
add
pop
xor
cli
leave
rol
shr
in
es
and
and
add
popa
push
pop
pop
fidivrl
jno
push
fnstsw
push
inc
ret
out
xchg
pop
dec
cmpsl
jne
call
mov
push
mov
pop
mov
push
sub
adc
jae
fs
cmp
adc
jmp
cmp
cmp
sar
mov
mov
mov
push
lahf
mov
xor
sub
and
cli
ss
rol
jge
fidivs
add
push
jle
or
pop
popf
mov
mov
in
adc
and
mov
arpl
insb
adc
cmc
jmp
inc
jg
push
xchg
aam
jnp
push
pop
push
push
mov
pop
nop
dec
mov
cmc
add
ds
out
gs
jle
add
add
repz
pmaddwd
fnop
je
cmp
aam
daa
pop
push
cmpl
xor
pop
test
jbe
mov
adc
insb
lds
or
lret
ja
xorb
jg
adc
addr16
sarb
int
sarb
push
push
mov
push
adc
addr16
js
scas
rcrl
sub
pop
jae
mov
jo
cmp
push
rorl
mov
stos
cmp
or
pop
repnz
aaa
shr
xchg
adc
pop
icebp
jle
leave
popf
dec
cmpsb
call
xor
push
repnz
lea
sbb
or
cmpsb
stos
sbb
and
push
sbb
imulb
cmp
fstl
jg
dec
inc
adc
ds
aad
sarl
loop
push
pop
xor
cs
loop
dec
je
add
pop
and
faddl
jle
mov
repz
jg,pn
or
stos
push
in
adc
mov
xor
hlt
subl
fiaddl
fmull
mov
sbb
aaa
inc
or
push
adc
mov
leave
jno
rcr
sub
rcrl
xor
ficoml
pop
pop
mov
pop
and
dec
push
sub
xor
adc
ljmp
xchg
xchg
jo
inc
push
ja
fisttpl
sbb
jp
aaa
sbbl
testl
jmp
fidivs
dec
adc
adc
fdivr
mov
lods
push
dec
mov
xchg
sahf
pop
es
daa
les
bnd
pop
or
fwait
push
pop
mov
hlt
inc
scas
adc
xchg
pop
cmp
movsb
scas
cmpsb
push
add
push
xchg
adc
cmpsl
adc
int
repz
sti
out
jns
cmp
xchg
lds
loop
int
cmp
rcll
or
inc
sti
and
push
stos
or
pop
lcall
cmc
pop
add
jmp
push
es
je
xchg
adc
push
out
mov
movb
fisubrl
jo
movsb
addr16
nop
and
sbb
sub
loop,pn
pcmpgtw
loope
inc
pop
inc
cs
out
xlat
and
push
inc
and
push
popa
out
test
push
inc
imull
sbb
test
negb
insb
mov
sbb
fldt
repnz
hlt
add
add
inc
jmp
imul
mov
mov
icebp
dec
ret
scas
jne
int
out
dec
mov
adc
dec
or
out
inc
scas
sbb
jb
mov
or
push
push
popf
add
or
mov
lds
insb
xchg
add
sti
loop
sbb
repnz
add
leave
cmp
dec
pop
andb
popa
push
in
push
cmpsb
data16
cmp
int3
jmp
pop
outsb
jp
mov
mov
aad
mov
test
insl
jae
xchg
adc
xor
jne
in
repnz
in
in
outsb
xchg
pop
lahf
daa
pop
lret
mov
test
ficoml
mov
xor
xor
sub
mov
pop
xor
rclb
push
xchg
and
mov
and
pop
mov
movsb
dec
push
sbb
adc
test
pop
mov
jle
roll
mov
mov
dec
movsb
cmp
sbb
inc
decl
mov
cmp
mov
push
inc
xorb
shll
jecxz
pop
push
sub
fwait
mov
ficomps
push
mov
clc
adc
or
sarb
dec
dec
dec
in
rol
mov
push
in
sub
outsb
in
fisubrl
jne
fisubrs
lods
jb
lea
pushf
mov
lret
loope
outsl
das
cmp
mov
fnsave
repz
push
jmp
sarl
popa
jle
shrl
outsl
pop
mov
sbb
rcl
xchg
xchg
movsl
mov
scas
xor
xchg
jno
pop
lock
clc
xchg
or
sub
imul
sarb
mov
mov
outsl
mov
sub
pusha
aad
int3
push
adc
aaa
movsb
outsl
test
xchg
mov
mov
popl
xor
imul
mov
shr
mov
jge
gs
shlb
daa
add
into
push
cmp
add
into
mov
or
pop
fcoms
imul
cmp
jmp
into
mov
enter
mov
ret
mov
inc
mov
xor
jp
das
adc
test
testb
stos
jg
scas
pop
fmuls
outsl
rorl
rdtsc
or
rorb
aad
jle
and
outsl
enter
notl
rcl
pop
mov
dec
stc
fwait
sbb
adcb
cmp
out
cmp
or
pop
dec
ret
or
movsb
cmp
fldenv
mov
js
sti
pop
jns
adc
aad
popa
jns
mov
xchg
jno
fcompl
cmp
push
inc
sbb
clc
mov
push
inc
fistpll
mov
pop
pop
hlt
xor
sbbb
or
sbb
cwtl
fwait
stc
mov
es
fdivs
int
stos
scas
cmp
push
andl
mov
ret
xor
les
xlat
sub
fs
lea
fs
add
inc
sahf
mov
xchg
push
jle
das
sbb
lods
icebp
and
arpl
lret
push
adc
iret
int
and
cmp
mov
sbb
fstpt
ds
jb
mov
or
push
inc
mov
dec
popf
adc
sbb
test
ja
xlat
jl
out
jbe
cmp
mov
lret
jns
push
cmp
dec
ds
cmp
cld
out
pop
and
movsb
mov
push
lds
enter
push
fdivs
add
adc
mov
xor
loope
addl
test
in
mov
loope
jg
mov
jb
push
jle
sbb
sarb
mov
lea
sbb
push
inc
or
xchg
bound
stc
and
icebp
jecxz
xchg
rcl
push
mov
xchg
les
out
aad
mov
loope
pop
dec
and
aaa
addb
xor
imul
in
outsl
rcrb
outsl
std
jbe
mov
push
je
xor
enter
inc
jno
js
sarl
scas
cmp
div
fyl2x
jmp
addl
inc
jp
arpl
jmp
ds
mov
jl
mov
ljmp
scas
jns
adc
add
test
mov
add
fdivs
test
rorb
repz
in
or
jge
clc
dec
adc
mov
push
pop
pop
push
or
jmp
movsl
decb
arpl
mov
sti
sbb
aaa
mov
push
mov
roll
cmc
int3
mov
adc
fldl
lahf
xlat
aas
cmpsb
xor
ja
xchg
sahf
pop
fcmovbe
fidivrs
loope
jnp
jp
pop
testl
inc
mov
or
scas
push
push
pushf
shll
xorb
xchg
add
and
cmc
xchg
test
push
stc
dec
xchg
or
pushf
or
imul
mov
shrb
or
mov
cli
in
cmp
xlat
cli
xlat
fstpl
movb
cmpsb
xchg
push
leave
pop
sub
loop
filds
lods
xchg
out
mov
push
jp
adc
fisttpl
jne
lods
shl
cld
cmc
sbb
sub
adc
cmp
out
leave
sarb
mov
imul
push
into
sbb
sbb
test
adc
sbb
dec
sub
pop
sub
sub
and
push
lods
add
loop
leave
insb
pop
into
movsb
ljmp
aam
std
negb
stc
inc
mov
cmp
lcall
jns
pop
stos
dec
mov
lahf
jns
mov
xor
sub
jns
cmp
cs
and
into
lods
pusha
mov
sub
loopne
jno
cmp
fisubrs
ret
jb
dec
ljmp
xchg
imul
subl
aas
add
enter
dec
adc
adc
stc
cmp
das
ret
lret
in
inc
mov
inc
cmpsb
xchg
sbb
aas
out
dec
or
dec
enter
imul
cmp
dec
cmp
mov
push
int
repnz
xchg
fistl
insb
jns
cmpsl
jae
xchg
imul
lods
pop
pop
sbb
mov
outsb
adcl
jae
jno
lods
pop
jl
nop
pop
xchg
scas
push
mov
jge
xchg
into
sbb
mov
out
push
mov
popf
adc
mov
movsb
les
cmovns
push
rcr
xchg
and
popa
out
ds
inc
clc
mov
cmp
pusha
mov
subb
or
sub
shrb
pusha
push
adc
xchg
xor
cmpb
fiadds
movsb
inc
bound
idiv
jne
fistps
mov
pop
jns
mov
add
inc
mov
dec
cld
dec
popa
aad
or
pop
xchg
iret
cmp
mov
cmc
jbe
mov
roll
lahf
out
fsts
push
push
movsl
inc
lods
loopne
loope
push
sub
push
jecxz
aas
add
mov
and
xchg
jg
sarl
enter
mov
pop
rorb
and
sbb
jae
shll
cmpl
adc
sarb
shll
loop
lods
pop
lds
mov
inc
pop
mov
cmc
pop
ret
gs
sub
nop
in
mov
xchg
cmp
or
inc
dec
fdivrl
sahf
insl
repz
cld
push
pop
fiadds
jmp
mov
stos
pop
jne
sub
repz
cmc
push
inc
pop
cmp
dec
push
sti
movsl
imull
inc
fsincos
sub
mov
and
mov
ret
inc
in
jne
and
mov
pop
int
jl
test
jg
fwait
popa
xor
lea
push
adc
filds
movsl
mov
and
loopne
push
insb
mov
mov
inc
push
inc
int
fldl
pop
scas
ss
cltd
pop
mov
dec
in
mov
fcompl
push
push
xor
cmpsl
adc
mov
inc
xor
xor
pop
sub
push
jecxz
or
loope,pn
andb
fwait
jns
mov
mov
pop
and
test
xlat
inc
push
cli
jge
mov
jle
jno
imul
pop
push
and
xchg
std
fdivl
pushf
jge
lock
sbb
pop
imul
mov
mov
adc
cld
and
js
push
xlat
adc
adc
push
mov
in
jbe
sbb
mov
pop
in
adc
jnp
out
add
jle
sbb
mov
pop
in
es
test
jge
sbb
jbe
pop
insl
mov
and
std
mov
xchg
push
pop
lret
filds
pop
jae
out
fdiv
inc
clc
dec
sbb
popl
ja
inc
out
cmp
repnz
jle
stos
push
push
mov
adc
outsl
enter
movb
dec
clc
clc
mov
test
movsb
movsb
pop
cmc
icebp
or
test
sub
dec
lahf
xchg
std
pop
and
insl
pop
aam
ret
movsl
scas
imul
sbb
dec
aad
mov
inc
sub
test
les
push
roll
aas
mov
xor
ja
mov
or
mov
test
pop
xor
push
xlat
mov
fwait
mov
mov
ja
lret
emms
repnz
xchg
insl
rorl
inc
fldenv
call
les
mov
cmp
aam
aas
cmpl
ret
xor
push
fnstenv
call
lods
adc
cwtl
cmp
mov
mov
scas
and
andb
inc
jmp
ud0
pop
sub
cli
in
popf
hlt
mov
adc
mov
and
inc
mov
xchg
jbe
push
fidivs
jle
xlat
and
jg
push
xchg
adc
daa
mov
lock
xor
dec
mov
pop
sar
cmp
or
jmp
mov
add
in
push
insl
cwtl
mov
mov
jb
mov
sub
jmp
push
repnz
fwait
ljmp
sub
push
pop
jae
cmp
fcmovne
inc
dec
adc
xchg
and
xchg
pop
pop
call
test
xchg
mov
or
lret
sbb
outsl
xchg
jmp
xchg
mov
xchg
out
inc
pushf
movsl
iret
mov
mov
pop
mov
jnp
hlt
jnp
or
pop
fisttpll
or
add
arpl
out
add
jne
int
jp
sahf
stc
jge
inc
hlt
mov
lds
mov
lods
scas
cmp
mov
jne
xchg
loopew
mov
and
pop
nop
jno
adc
fisubrl
push
addb
mov
cld
jo
pop
daa
adc
add
lcall
insl
mov
lret
xor
es
mov
jnp
mov
lcall
xor
mov
sbb
sbb
icebp
cmp
iret
sti
push
cmp
lods
insl
gs
arpl
sbb
inc
mov
add
xchg
add
out
or
pop
int
arpl
sbb
or
sbb
fbld
pop
pushf
push
push
cwtl
add
sbb
in
dec
cmp
ja
inc
push
mov
adc
cmp
adc
pop
cmp
cld
enter
movsl
xor
movsl
mov
xchg
sub
test
xor
add
in
insb
test
jp
popa
fwait
and
sbb
insb
fld
lea
les
arpl
pop
inc
jecxz
pop
or
sbb
push
mov
add
xchg
or
int3
xor
sub
or
mov
leave
sbb
ds
inc
cmc
xchg
jge
xor
and
push
pop
fwait
movsl
jnp
mov
test
rcrb
sub
adc
jecxz
mov
rcll
shll
lds
sub
mov
jne
in
pushf
mov
mov
aas
loope
dec
mov
imul
dec
fs
jns
inc
dec
and
xchg
jle
mov
out
fadds
fcmovbe
cmc
push
cli
cli
cltd
cmp
xchg
out
sbb
sub
xchg
inc
mov
add
outsb
ljmp
outsl
call
lret
ret
push
dec
pop
xor
mov
xor
sub
addl
cmp
loop
cmp
xchg
mov
cmp
orb
xlat
out
sub
xchg
sbb
pop
adc
push
outsb
cmp
xchg
add
xchg
dec
es
jns
xchg
mov
or
sbb
outsl
xchg
or
stc
sub
mov
push
pop
in
mov
xor
cld
movsb
mov
adc
test
mov
sbb
mov
out
dec
jae
cltd
adc
imul
mov
adc
fucom
xchg
aas
subb
jecxz
mov
dec
mov
xor
lret
jge
dec
lds
shll
dec
jno
dec
mov
sbb
push
in
add
lcall
lahf
pushf
cmp
bound
mov
cmp
mov
and
nop
pop
cmpsl
or
inc
gs
xor
sub
dec
mov
sbbb
shrb
sbb
rol
or
dec
mov
push
cmpb
test
jae
sbb
jbe
lret
movsl
stos
testl
flds
or
test
adc
xchg
ret
negb
fistl
lock
rcll
or
test
mov
pop
lss
repnz
ss
mov
push
out
mov
adc
mov
lahf
rclb
xchg
sub
adc
add
das
adc
sub
jg
mov
inc
mov
adc
pusha
mov
inc
andb
shlb
lea
jo
imul
push
out
xchg
pop
std
in
pop
xlat
mov
lea
rclb
into
lret
jbe
orb
xchg
jnp
icebp
jno
pop
outsb
lret
ja
in
or
loop
stos
lcall
in
push
ret
mov
and
push
mov
and
loopne
cmp
lods
popf
nop
mov
stc
or
add
test
pusha
mov
lret
lods
dec
push
push
mov
dec
pusha
into
mov
adc
aam
out
inc
sub
jno
pusha
dec
add
hlt
in
movl
and
sbbl
std
das
sbb
adc
jo
fldenv
xchg
xor
call
pop
xor
lods
pop
mov
imul
lock
xchg
imul
xchg
lods
shlb
test
jmp
testb
lret
mov
in
mov
out
movsb
cmp
xor
mov
ds
je
orb
fiaddl
push
in
pop
jp
bound
push
out
and
dec
xor
push
outsl
movsl
pop
in
mov
cmp
push
lods
lea
ja
dec
out
mov
or
pop
ss
insl
mov
mov
adc
popf
mov
adcb
lret
clc
leave
xlat
cmpsb
ret
in
addr16
int3
jle
xchg
cmpsb
inc
xchg
sub
ficoml
push
add
dec
test
mov
mov
add
push
aas
mov
dec
outsl
imul
aad
xchg
cmp
jne
push
testb
mov
adc
bound
iret
xlat
insb
sbbb
in
scas
jmp
cld
out
xor
adc
dec
mov
popf
popa
fsubs
std
push
sub
inc
cld
add
movsl
nop
lcall
subb
jge
mov
in
std
push
test
push
and
xor
popa
dec
ret
pop
add
clc
push
sbb
push
and
pop
and
lahf
xor
outsl
push
jl
in
cmp
lret
mov
fmuls
pop
int3
or
pushf
outsb
jmp
mov
mov
movsl
push
loope
idiv
push
xchg
push
dec
in
popa
mov
xorl
sti
add
inc
out
mov
jmp
sbb
loop
jb
push
push
sahf
jbe
frstor
adc
divb
inc
lea
aad
adc
push
xchg
and
testl
cmc
insb
out
cmp
ja,pt
jl
push
out
inc
divl
aam
cltd
movsb
shrl
add
loop
arpl
mov
xlat
xchg
xlat
mov
push
or
