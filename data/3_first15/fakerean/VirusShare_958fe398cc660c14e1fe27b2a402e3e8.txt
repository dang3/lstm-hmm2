sbb
sbb
incl
sub
incb
add
add
add
out
add
lods
data16
and
mov
fcompl
testl
sahf
lods
or
jns
leave
aad
int
inc
jae
scas
fdivs
inc
jecxz
dec
xchg
shl
and
mov
mov
cmp
in
cmp
pusha
fs
sldt
add
cld
mov
orb
push
adc
incl
add
mov
xchg
add
test
or
std
or
xchg
add
push
loop
orb
aas
adcb
fwait
adc
lods
dec
jg
daa
fstps
movsb
xchg
mov
addr16
call
hlt
jbe
dec
add
adcl
push
aam
incl
add
shrl
jns
pop
lcall
inc
pop
add
aad
mov
sbb
mov
inc
pop
add
mov
aas
xchg
pop
mov
add
xor
sbb
int
or
test
jecxz
inc
faddl
shll
sbb
inc
or
call
or
idivl
iret
mov
pop
fdivr
incl
sbb
ljmp
mov
inc
sar
andl
xlat
pop
rclb
push
cmp
imul
int3
mov
inc
add
xlat
mov
jbe
clc
mov
das
std
insl
jle
inc
sar
lret
mov
sar
xchg
incl
xor
push
and
mov
xchg
mov
jbe,pn
int3
add
inc
sar
jns
mov
mov
mov
xlat
add
cld
popf
and
mov
incb
ja
add
ss
mov
pop
addr16
sub
jge
pop
jg
push
sub
and
and
push
xchg
ja
cmp
dec
dec
pop
inc
mov
and
clc
xchg
js
das
dec
jne
inc
xchg
inc
bound
dec
jp
inc
test
and
mov
inc
adc
cmc
dec
rolb
and
mov
mov
sbb
loopne
push
jl
mov
fstps
loop
rcll
sbb
cld
ljmp
jmp
popf
mov
or
std
xlat
enter
adc
xlat
ret
push
jl
stos
in
cmp
add
dec
sbb
repnz
pop
cmpsl
add
sub
addr16
cld
fcoms
sbb
mov
dec
pop
push
push
dec
inc
pop
sbb
fwait
mov
addb
xor
test
pop
jae
xchg
mov
push
cmp
jl
imul
jnp
xor
jl
nop
sbb
xorb
test
sbb
and
mov
jae
jb
ljmp
andl
iret
mov
arpl
sub
iret
loop
jne
ljmp
sbb
arpl
mov
arpl
loope
or
jne
loopne
xchg
sbb
testb
iret
fbld
inc
or
je
loopne
mov
sbb
push
sub
fldl
and
rolb
adc
incl
sbb
insl
and
sub
or
pop
add
sub
je
addb
fsubl
and
shrb
sbb
cmp
or
cmc
lock
in
mov
and
sbb
mov
test
imul
aad
ret
dec
fsubl
mov
fstl
fildll
fidivs
incl
shlb
inc
insb
sub
mov
xlat
ret
push
jl
stos
in
cmp
lock
mov
lahf
or
jb
add
add
jge
and
add
sub
xchg
cmp
mov
and
add
pop
sub
pop
sbb
add
bound
jmp
mov
arpl
mov
sub
int
out
xor
addl
add
jno
pusha
add
pop
sub
leave
or
iret
icebp
stos
sub
sub
mov
sub
add
pop
sub
inc
pop
je
xor
push
cwtl
dec
lods
and
lcall
call
into
mov
test
pusha
add
sbb
push
cmp
popf
jmp
mov
popf
inc
icebp
and
fwait
or
add
sbb
pop
sbb
mov
push
shrb
and
inc
es
dec
push
ljmp
xchg
hlt
jnp
sub
mov
mov
sub
insl
bound
add
adc
sub
or
inc
mov
sbb
data16
mov
xlat
add
adc
sbb
dec
and
jb
sbb
in
test
outsb
popf
movb
sub
jb
cmpl
or
iret
mov
sub
mov
sub
add
push
jne
sbb
addl
push
push
lds
and
mov
out
iret
mov
sarb
cmp
add
sub
andl
pop
adc
cmpsb
aam
lcall
dec
js
pop
mov
insb
mov
mov
mov
aad
ror
cmp
mov
sub
dec
push
je
ds
cmpsb
arpl
sub
cltd
rol
add
sub
pop
cmc
mov
rolb
xchg
push
sbb
popf
frstor
stc
mul
std
mov
mov
call
push
and
mov
rolb
sbb
add
mov
sub
mov
sub
or
push
popf
lds
jbe
inc
pop
je
xor
push
xchg
ds
sbb
xchg
or
lret
cmp
sbb
xchg
ss
push
add
out
mov
and
and
pop
or
sbb
add
and
shll
add
add
pop
sbb
cmp
mov
or
mov
jae
mov
and
or
loope
and
sbb
or
xchg
nop
or
xchg
or
cltd
jmp
add
adc
sbb
es
cmpsb
push
pop
aam
ret
repz
cwtl
and
fwait
inc
push
adc
jns
in
jnp
cmp
fldenv
outsl
mov
push
ja
pop
pop
dec
roll
jns
cmp
sbb
and
mov
mov
and
test
sub
dec
pop
mov
int
mov
mov
dec
dec
dec
int
lahf
fiadds
loop
sar
jp
sti
stc
xor
in
xchg
cmp
pop
cmp
stc
xor
mov
gs
cmpb
jl
pushf
dec
push
adc
and
add
push
out
cmc
sbb
movsl
pop
xor
ret
dec
and
repz
push
sbb
xor
sub
movsb
adc
xchg
sbb
sub
sub
push
sbb
mov
sbb
sub
mov
inc
pop
fstps
nop
or
and
sub
push
or
paddw
and
outsb
imul
ja
shlb
and
add
pusha
mov
sbb
fdivr
cwtl
push
cmp
fadd
insl
mov
inc
adc
xor
gs
in
dec
cwtl
mov
fsubl
and
dec
push
mov
das
in
pop
dec
push
add
es
or
icebp
push
inc
and
dec
jmp
add
dec
iret
xor
dec
cld
jge
inc
sbb
jnp
adc
pop
adc
push
in
pop
es
and
icebp
sub
in
pop
xor
xchg
pushf
sub
popf
enter
pop
gs
push
and
and
stos
adc
sbb
and
xor
addr16
dec
inc
inc
jne
rcrb
and
int
in
out
aas
push
shlb
push
pop
test
rclb
and
adc
pusha
clc
movsb
jbe
inc
xchg
xor
into
cmpsl
jns
jbe
push
sbb
push
sti
or
in
fwait
sti
and
pop
std
inc
add
adc
push
movsl
and
cmp
mov
shl
push
push
cmp
mov
fcomps
mov
xchg
aas
in
sarb
adc
sarb
adc
mov
filds
inc
test
cmp
leave
js
out
push
fldenv
jg
cmp
push
add
pop
pop
clc
or
out
xor
sbb
cmp
jp
out
push
pop
cmp
mov
and
xchg
movsb
popf
int
out
and
lods
movsb
out
and
movsb
or
mov
jb
popf
stc
mov
jae
add
lret
jecxz
lret
sbb
mov
and
pop
loopne
pop
jg
cmc
sahf
stos
cld
hlt
movsl
mov
rcr
mov
pop
in
in
loopne
sbb
into
ljmp
and
or
or
xorb
call
sub
inc
push
add
and
pop
mov
mov
stos
xlat
iret
mov
cmpb
out
sahf
lods
daa
iret
cmp
mov
sbb
shlb
inc
push
inc
sbb
pop
push
pop
adc
mov
stos
or
pop
in
or
xchg
cmp
pusha
std
and
cmc
xor
push
mov
mov
cmp
sub
cmp
dec
lahf
jp
cmc
pop
xor
add
adc
adc
call
les
rol
mov
or
insl
sbb
xor
std
and
push
popf
outsb
stc
ja
xchg
xor
jmp
jne
sbb
in
mov
xor
enter
fwait
sub
mov
pop
movsb
cmp
leave
ficoms
lods
mov
dec
xlat
jp
mov
movb
lcall
jo
cmp
ret
push
fisttpl
out
repnz
xor
fmul
sub
fwait
push
imul
filds
xchg
fwait
aam
and
loopne
lds
sbb
mov
mov
cmp
dec
cmpsb
in
or
xchg
cmovle
movsb
das
rcrb
mov
sub
push
sub
mov
aaa
sarb
mov
cwtl
push
mov
cltd
sbb
pop
negb
and
inc
push
mov
sub
or
xor
inc
xor
in
pop
push
int
out
aas
sub
repz
imul
mov
push
xchg
test
aas
sub
pop
and
pusha
pop
and
cmp
addl
inc
aam
in
sub
sbb
les
and
loop
movsl
gs
pushf
xor
and
lahf
lcall
sbb
test
xchg
inc
mov
es
popf
decl
add
mov
dec
add
mov
sub
adc
or
mov
movsb
sub
adc
cltd
pop
add
add
jle
and
cltd
lods
enter
sbb
and
xor
xchg
or
cmp
mull
enter
movl
sbb
inc
ret
and
or
nop
int
clc
xchg
aam
mov
jae
pop
or
and
or
jbe
fnstsw
adc
adc
imul
in
mov
lcall
in
test
fidivrs
dec
and
sti
add
icebp
js
sub
dec
or
adc
mov
psrlw
test
adc
pop
outsb
cmpsl
inc
xor
push
in
inc
mov
es
test
or
or
testl
or
inc
dec
xlat
cmc
jle
das
push
les
cmp
sbb
fs
cmp
pop
scas
sub
adc
aaa
out
pop
inc
data16
test
jae
adc
enter
clc
xchg
dec
mov
movsl
nop
insb
add
in
sbb
or
pop
jo
ja
aaa
test
cld
sbb
jne
push
xchg
addr16
je
add
or
sub
data16
insb
jbe
ja
mov
ja
out
lcall
push
out
push
push
pusha
lret
es
popa
dec
add
xor
inc
sbb
cmp
call
je
int3
push
les
sbb
ret
sbb
sub
pusha
inc
and
out
sub
dec
call
adc
jae
dec
inc
loopne
xchg
inc
sub
push
sbb
sub
in
js,pt
jae
mov
adc
adc
or
leave
inc
sbb
cmpsb
inc
mov
arpl
mov
or
shll
mov
ljmp
ss
sbb
add
mov
jae
lock
imul
mov
les
adc
insl
pusha
in
and
ss
xchg
add
test
cmp
sbb
icebp
xor
push
stos
push
adc
cmp
pop
xorb
push
and
roll
mov
out
pop
adc
pusha
daa
movswl
cmp
or
sbb
std
pop
cld
and
inc
les
cmpsl
gs
adc
pop
pop
xchg
dec
push
jbe
lock
enter
and
jbe
lahf
pusha
stos
int3
in
jb
pop
cmc
mov
adc
mov
sbb
adc
mov
out
pusha
inc
adc
mov
inc
ficompl
jno
mov
or
dec
out
stc
sar
sbb
xor
cmpsl
int
pop
mov
or
in
cmp
daa
push
or
out
into
xor
cli
adc
mov
add
sahf
stc
push
jl
mov
jmp
dec
mov
test
ljmp
ds
inc
cld
sbb
mov
inc
inc
and
mov
xor
adc
jb
pop
sub
mov
inc
ss
or
adc
push
pop
cmc
jmp
cwtl
subb
andb
inc
sub
out
pop
add
xchg
mov
icebp
sub
cmp
icebp
fstpl
adc
adc
xor
sub
add
cmp
add
cmp
aaa
adc
filds
inc
dec
pop
push
mov
sbb
push
dec
fsts
sub
xor
sub
stc
icebp
ljmp
lea
and
xchg
sub
mov
xchg
or
adc
lock
push
sbb
ljmp
push
cmp
push
mov
js
or
pop
mov
adc
jae
adc
clc
enter
cmp
pushf
pop
cmp
xchg
cmp
xchg
push
mov
mov
aas
and
call
movl
xchg
dec
push
mov
out
stos
xchg
add
loope
jae
hlt
add
sbb
mov
repnz
jge
dec
imul
aad
repnz
jge
mov
push
stc
adc
dec
loop
jne
in
and
test
or
loope
xor
mov
xor
bound
mov
xor
icebp
repz
mov
push
je
lock
out
aad
test
push
inc
and
test
mov
movsl
xlat
jge
in
imull
aam
sub
xor
xchg
mov
pop
aas
and
ret
ret
inc
xor
sbb
roll
mov
pop
enter
pop
orb
mov
js
pop
xor
gs
xchg
jmp
xor
pushf
push
mov
jnp
inc
or
xchg
push
cmp
or
xchg
hlt
fcomi
test
rorb
adc
faddl
and
fnsave
sub
mov
popa
or
jae
int3
push
sub
pop
and
divb
push
xchg
or
xchg
fs
test
push
dec
loopne
dec
inc
push
in
add
and
inc
adc
pop
js
jle
icebp
jbe
xchg
es
and
add
ja
mov
pminsw
and
cwtl
pop
pop
sti
enter
xor
sti
les
inc
into
stos
pop
or
sub
and
rcrb
fcoms
js
mov
mov
push
mov
gs
movsb
bound
push
dec
xor
adc
push
cmpsb
in
adcb
in
or
adc
lfs
cli
dec
out
into
jmp
lahf
push
aaa
loop
dec
test
adc
mov
movsb
inc
xchg
mov
inc
mov
inc
sub
dec
mov
jo
cmc
addr16
mov
fsubs
sbb
push
es
inc
call
popa
test
ljmp
sub
movsb
adc
movsl
cmp
imul
mov
out
mov
sbb
xor
lea
inc
test
scas
imul
push
cwtl
mov
and
das
fisttps
and
inc
sahf
lahf
sar
jp
popa
jmp
and
push
mov
inc
std
pop
xor
adc
jne
mov
out
pop
fisubl
insb
lcall
mov
pop
cmp
pushf
push
ficoml
adc
jb
je
xchg
jp
clc
inc
mov
int
jbe
xchg
xchg
js
or
clc
enter
push
fdivr
mov
jae
mov
sub
dec
prefetch
or
cltd
adc
scas
andl
and
mov
or
sbb
mov
clc
and
adc
and
inc
bound
jg
test
pop
pop
and
ficompl
push
loopne
enter
mov
mov
or
repz
xchg
outsb
or
add
lcall
or
ja
push
adc
setg
pop
mov
cmc
arpl
dec
fcoml
mov
mov
adc
lcall
cmp
lock
inc
inc
push
sub
cmp
scas
or
mov
movzbl
adc
inc
fdiv
adc
adc
jl
dec
loope
icebp
cmpsl
lahf
pop
push
addr16
add
aas
cmc
js
xor
test
mov
mov
and
push
sarl
loopne
imull
adc
inc
mov
pop
hlt
shll
fstpl
jmp
fcomps
xchg
adc
xchg
cmp
and
jne
jecxz
jmp
xchg
cmc
jno
push
fisttps
dec
inc
sub
push
pop
inc
pop
jnp
xlat
mov
je
outsb
dec
or
sbb
or
cmp
outsl
dec
jle
sbb
pop
fcomip
jecxz
adc
sarl
pop
into
fwait
bnd
stos
sbb
jbe
test
push
or
jle
cmp
stc
inc
ja
pop
or
lds
sbb
fldenv
aad
in
fstpt
xchg
clc
jne
cmpsb
inc
cld
sbb
pop
pop
mov
jge
jnp
sbb
iret
in
dec
mov
and
movl
push
dec
push
fisubl
inc
cmp
xchg
lahf
fs
fs
adc
imulb
dec
or
mov
xchg
addr16
jbe
adc
das
outsl
stc
and
jae
dec
mov
mov
xor
pop
or
nop
pop
pop
pop
arpl
outsl
xlat
mov
enter
pusha
cltd
and
pop
fnstsw
inc
pop
mov
lahf
sub
jl
sbb
mov
or
and
jo
pop
sbb
cmp
insb
sub
dec
pop
mov
adc
call
das
sbb
adc
xlat
cld
mov
pop
sbb
call
push
push
std
in
xor
or
pop
sub
movsb
dec
pusha
sbb
dec
cmp
pusha
fiadds
inc
fwait
add
rorl
jbe
push
xor
pop
loop
ljmp
je
jns
fisubl
push
fwait
inc
fs
insb
cmc
push
dec
sub
mov
sti
fisubs
mov
test
jns
nop
imul
repz
jne
pop
pcmpgtw
psubw
scas
pop
sbb
daa
sub
fistpll
mov
test
jmp
ljmp
xor
insl
xchg
fdivs
and
scas
and
leave
mov
inc
mov
cmp
int
fstpl
lahf
in
cmp
push
out
xor
es
fldl
data16
sbb
test
mov
add
fwait
icebp
test
pusha
push
mov
inc
push
je
fs
lea
pop
jae
cmp
sub
or
vaddss
push
xchg
adc
push
pop
add
aad
stc
cmpsl
out
sbb
and
and
loopne
jge
cmp
loopne
int3
mov
sub
and
cmp
mov
xor
test
sbbb
loopne
or
add
xor
jge
cmp
mov
sbb
pop
insl
das
pop
push
cmpsl
idivl
or
dec
cmp
inc
popa
and
pop
push
cli
sbb
or
sbb
out
push
or
addr16
clc
push
popa
xor
pop
adc
cli
movb
aaa
leave
lcall
es
adc
adc
addr16
iret
dec
push
clc
sub
addl
decb
cmp
arpl
push
sub
push
sarb
ret
popa
push
aas
pop
push
pop
icebp
daa
pop
mov
sbb
cld
mov
sbb
daa
push
adc
mov
push
mov
rcll
adc
mov
lcall
add
call
pop
rcrl
mov
punpckhdq
std
out
mov
cli
out
fwait
cld
xchg
cmp
test
cmpsb
xor
push
add
sbb
popf
cmp
out
and
fiaddl
call
mov
mov
add
push
inc
int
dec
push
cmc
sub
cmp
enter
dec
lds
andb
jnp,pt
mov
push
aaa
popf
or
push
sbb
mov
fldenv
xchg
sbb
loope
das
int3
fs
adc
fucomi
sub
pop
mov
shlb
cmp
mov
dec
push
call
and
fisttpl
push
sbb
xchg
cld
dec
rcrb
sbb
ret
cld
push
iret
das
mov
jmp
leave
xchg
and
push
cwtl
dec
jb
xlat
add
add
lock
mov
pop
jle
insb
ja
jns
negl
fldt
pop
and
stos
clc
adc
sub
jge
cwtl
rolb
mov
les
pushf
sbb
jmp
jns
push
pop
adc
mov
pop
adc
sub
pop
and
dec
mov
cli
scas
daa
sbb
adc
lcall
out
mov
sub
stc
ret
fnstcw
sarl
aam
inc
xchg
fisubs
mov
jbe
test
lds
push
repnz
push
out
xchg
jbe
enter
cmp
dec
movsl
dec
cmpsl
or
nop
mov
mov
jae
mov
xchg
and
lds
fistl
cmpsl
movb
sbb
lret
inc
repnz
faddl
push
repnz
popa
shrb
flds
push
out
arpl
shl
push
mulb
hlt
cmpsl
pop
push
mov
adc
das
cwtl
lock
jmp
cmp
mov
imul
faddl
xor
cmpsl
mov
icebp
xchg
lds
daa
mov
lret
push
iret
dec
mov
and
dec
adc
xor
pop
or
cmp
push
ret
daa
hlt
rclb
jle
jae
pop
cmp
aaa
bound
mov
fiadds
add
and
pop
and
dec
sbb
and
sbb
jae
imul
repz
in
fistl
sub
push
cld
inc
adc
push
sbb
in
test
movsb
xlat
inc
loop
addr16
xor
das
lahf
sbb
sbb
jae
cwtl
mov
repz
xchg
jbe
mulb
mov
cmp
jnp
in
lock
int
nop
into
lahf
adc
icebp
mov
lock
sbb
stos
cli
jo
call
flds
cli
xchg
popf
test
es
dec
xchg
cmp
xor
mov
sarl
pop
mov
lock
pop
or
xor
mov
sbb
arpl
push
mov
mov
pop
adc
and
cli
inc
std
fldl2e
ror
dec
sub
cmp
sub
sbbb
out
rolb
push
push
sbb
and
rcrb
push
leave
jo
xor
and
mov
idivl
inc
xchg
ljmp
mov
mov
sub
loop
adc
movsb
lcall
in
mov
insb
lea
push
pushf
hlt
call
dec
ss
clc
inc
lahf
push
dec
jo
jb
sub
out
sub
stos
push
push
decb
movsl
shll
inc
sbb
push
leave
add
fisubl
ds
xor
les
adc
rcr
fs
scas
add
add
fwait
and
sbb
cs
mov
clc
jmp
ds
pop
jbe
jge
ss
sahf
data16
testb
insb
pop
pop
in
push
xor
xchg
insb
jle
mov
sbb
cmp
loopne
adc
xlat
icebp
cmpsl
push
xchg
pop
aas
xor
mov
ss
leave
pusha
mov
pushf
ss
and
add
shll
shl
cmpsl
push
xor
or
mov
and
and
xchg
pusha
push
stos
or
fstpl
push
mov
fidivrl
pusha
ja
ds
xchg
mov
or
jbe
div
xor
repnz
mov
stc
adc
pushf
jp
sbb
stc
and
xor
ds
adc
sub
pushf
pop
mov
xor
or
ja
add
lahf
push
inc
jnp
pop
jmp
aaa
fucom
pushf
jns
mov
insl
test
aam
inc
int3
aas
mov
push
aad
push
push
push
dec
xchg
jne
inc
cmpsl
push
fwait
rolb
leave
cli
mov
stos
mov
dec
icebp
out
jae
inc
into
shrl
pop
shlb
push
rcl
loope
push
pop
sbb
cmpsb
insb
test
or
mov
adc
and
dec
lods
lret
popf
jb
movsl
mov
std
add
adc
movsb
fsubs
test
adc
imul
and
mov
testb
jp
add
hlt
cmpsl
testl
popa
jp
test
lock
fbld
loop
adc
jmp
jne
push
xchg
or
push
loope
push
adc
sbb
cmpsl
jmp
xor
fiaddl
cs
inc
jae
pop
lea
aam
mov
push
cli
sub
inc
pop
mov
sub
mov
clc
xchg
sbb
out
pop
pop
pop
add
js
arpl
sbb
dec
cli
push
je
push
mov
jecxz
fs
movsb
sbb
push
daa
mov
bnd
bound
loop
jl
and
fstps
inc
mov
inc
loop
fs
ljmp
and
inc
sub
lods
pop
xchg
sub
jle
decl
enter
or
mov
cmpsb
mov
lock
jmp
loope
lock
orl
and
cmc
sbb
mov
push
data16
mov
mov
dec
fs
xlat
shrb
xchg
sbb
mov
mov
xchg
fcmovnbe
ljmp
decl
push
mov
clc
add
push
fcmovnb
or
mov
sub
or
fnstcw
pop
movsb
movsl
sahf
lea
daa
mov
push
sbb
mov
dec
popa
and
adc
addr16
ds
sbb
add
jecxz
outsb
push
xchg
or
loop
add
mov
sub
arpl
cmc
push
mov
fwait
adc
dec
imul
sub
gs
js
push
dec
ja
test
lods
movsl
mov
mov
fs
mov
push
arpl
sti
jg
jae
mov
xor
cld
mov
lods
jge
ljmp
or
stc
mov
pusha
or
inc
js
mov
and
sahf
aam
xchg
sbb
mov
subb
sub
xchg
jp
dec
lock
in
loope,pt
out
mov
pop
stos
aam
in
adc
sbb
pop
mov
lahf
ss
mov
movsl
cmp
add
aad
xchg
sbb
mul
adc
and
test
jnp
pop
popa
das
fdivl
adc
jle
pop
xchg
cmp
jnp
punpckhdq
arpl
ret
xchg
inc
into
push
cmpsb
dec
inc
dec
pop
fstl
or
and
push
or
or
xchg
jecxz
xor
std
test
adc
cmp
xor
dec
fstl
cli
adcl
aas
inc
pop
icebp
and
push
aaa
mov
popf
outsl
xor
fmuls
lds
cmp
or
add
inc
int
bound
inc
ret
outsb
adc
pop
mov
push
das
fbstp
out
std
sub
cmp
js
dec
mov
sahf
cmp
dec
ficomps
sbb
inc
cs
xor
iret
pop
bnd
mov
jge
mov
sbb
and
push
cmpsb
mov
inc
dec
pop
add
xchg
mov
cmp
outsl
frstor
aas
push
cmpsl
jg
cmp
mov
cld
int
movsb
mov
les
lcall
xor
push
and
cld
pop
xchg
pop
xchg
loopne
sub
jns
mov
pop
cmp
pop
cmc
mov
lahf
jg
sbb
mov
jae
sub
dec
inc
dec
jge
mov
and
cld
addr16
pushf
adc
jg
mov
xor
push
adc
ja
and
scas
lea
popa
loopne
or
or
pop
inc
pop
jp
imul
mov
jb
jecxz
or
fwait
sbb
jle
in
dec
jbe
cmp
pop
clc
lock
or
sti
jp
mov
neg
sbb
pop
fldl
cltd
shrb
xor
fs
mov
xor
add
outsl
movsl
imul
dec
ficoms
and
adc
sti
leave
pusha
cld
fisubs
jnp
stos
repz
and
adc
popa
mov
push
dec
sti
xchg
xor
xchg
sub
mov
sub
lret
push
ja
xchg
mov
lock
mov
add
sbb
mov
sub
cmpb
or
xchg
cmp
cmp
and
imul
and
pop
add
cld
lret
jmp
lcall
xor
loop
fsubr
insl
xor
test
push
fcmovbe
loop
outsb
clc
leave
sub
clc
xor
jns
mov
into
sbb
stc
ret
dec
dec
xchg
dec
loopne
mov
push
xchg
pop
dec
es
mov
mov
mov
mov
adc
jne
flds
movsl
jno
sahf
inc
outsl
call
push
ret
cmp
ss
xchg
mov
mov
jnp
cmp
bound
std
mov
inc
ja
inc
dec
mov
add
mov
mov
add
imul
or
inc
clc
or
and
cmp
mov
sub
mov
sti
mov
sbb
sub
ret
int
adc
in
cmp
mov
inc
mov
mov
fidivs
push
aad
xchg
sbb
mov
or
enter
out
xlat
addr16
nop
and
push
sub
cmpsl
outsb
js
push
dec
andb
sub
sub
lds
mov
or
vmulss
push
adc
imul
inc
pushf
jo
mov
mov
mov
jno
mov
std
mov
sbb
cmp
xor
add
lret
test
test
add
mov
clc
mov
ret
xchg
sbbb
add
xchg
les
dec
mov
xor
dec
pop
dec
sbb
data16
push
rorl
mov
clc
push
scas
nop
xchg
sub
shrl
mov
js
inc
ret
jns
jns
stos
pusha
fstp
jmp
adc
into
push
dec
dec
jge
inc
in
fidivs
lcall
popa
dec
push
adc
sub
mov
add
lret
jmp
pop
stos
lods
mov
fld
and
in
fdivr
add
je
adc
enter
inc
cmpsl
into
js
in
lds
mov
adc
and
test
xor
push
sbb
or
mov
das
jbe
hlt
rol
sbbl
pop
in
pop
rcrb
mov
dec
movsl
sub
or
xchg
or
or
adc
dec
sub
sbb
or
dec
add
add
aam
mov
cmp
je
repz
clc
aas
adc
xchg
adc
adc
adc
inc
rclb
lods
fwait
inc
imul
xchg
cmc
cmpsb
mov
xor
fnstsw
pop
sbb
or
xor
push
ret
fsub
sub
sbb
cmc
dec
pop
push
cmovp
push
es
cmp
jl
mov
or
jmp
push
and
cli
jl
mov
das
lahf
mov
xlat
cmp
insl
xor
aaa
cmp
xor
shlb
inc
pop
jp
ljmp
fnstsw
daa
xor
sub
inc
or
les
es
aam
sub
rorl
xchg
loopne
and
das
xor
scas
sbb
test
repnz
fstpl
xorb
push
xor
pop
mov
add
inc
ja
push
xor
rorb
imul
xor
ds
jne
cltd
sbb
clc
push
outsb
cmp
in
push
xchg
das
test
in
or
in
xor
pusha
outsl
and
aam
xor
lret
repnz
mov
or
adc
inc
inc
outsb
cmp
cmp
add
dec
sarb
inc
mov
das
loop
or
rclb
push
subb
or
and
adc
mov
mov
insb
xor
sub
jb
cwtl
jp
xchg
xchg
mov
mov
xchg
xchg
aad
out
cmp
cmp
sub
sub
add
and
dec
inc
xor
push
push
xchg
jno
mov
shlb
pop
in
pop
mov
and
cli
and
lds
sbb
dec
mov
pop
orl
out
dec
cmp
mov
sbb
add
frstor
lcall
je
mov
pop
cmc
hlt
sub
test
cli
insl
addr16
inc
mov
or
lds
dec
bound
xchg
pop
pop
xor
inc
inc
and
xor
insb
sub
ret
cmpsl
pushl
call
mov
pop
push
das
addl
and
sub
jmp
imul
jno
push
outsl
adc
mov
js
inc
iret
mov
imul
dec
mov
popf
sbb
cli
stc
jge
outsl
push
and
add
mov
jb
sbb
cs
lock
mov
sbb
dec
mov
cmpsl
push
es
int
and
clc
xchg
popa
mov
outsb
loope
fcoms
divl
jns
pop
add
inc
popa
inc
dec
dec
gs
pop
and
jb
mov
push
push
lds
loope
sub
loopne
jp
mov
fs
lahf
pop
cmp
inc
and
push
sbb
outsl
add
or
and
or
jmp
leave
xchg
fwait
add
aas
out
or
je
or
sbb
adc
or
xor
pop
scas
add
xor
sub
in
ret
fistps
loope
stos
in
cmp
or
ret
popf
mov
cmp
test
pop
or
pushf
mov
scas
jmp
int3
or
inc
push
arpl
insb
std
call
adc
jbe
dec
mov
xchg
icebp
cwtl
inc
add
sub
xlat
lcall
and
cmc
dec
jecxz
lea
dec
xchg
sbb
dec
cli
cli
add
subb
jmp
add
mov
mov
push
jns
cmpsl
ret
xchg
outsl
pop
sub
sub
loope
mov
xchg
mov
lea
sbb
out
dec
shlb
cmc
and
mov
popl
mov
shlb
pop
inc
pop
aas
add
shl
mov
pop
jae
inc
and
fst
jns
dec
dec
in
push
pushf
or
or
out
fnsave
lret
in
or
insl
das
pop
dec
mov
jo
cmpsl
pop
into
notb
in
movsl
jge
dec
jecxz
pop
ds
xchg
jl
cmpsl
jbe
sub
jne
and
and
lea
fsub
pop
ljmp
xchg
clc
push
rcrl
mov
pop
aam
xor
dec
xlat
movsb
jmp
cmp
stc
repnz
mov
and
push
adc
fwait
pop
in
xchg
jno
mov
sub
rolb
das
ficomps
sub
dec
imul
jo
in
mov
cli
fcmovne
jge
cld
ljmp
sub
jns
pop
scas
in
fisubl
sub
inc
and
in
cmp
and
sub
jnp
insb
fs
add
sub
mov
inc
movsb
ret
call
or
sub
int
movsb
popa
hlt
mov
cmp
sbb
fcomps
sub
cmp
pop
cli
dec
fmuls
mov
lods
or
js
shrl
aad
mov
in
push
sub
fcompl
inc
lea
les
mov
dec
fldl
cli
pushf
outsb
mov
lds
jp
mov
adc
xor
cld
cmc
pop
divb
mov
sbb
push
clc
jge
xchg
xor
sbbb
fucomp
je
cmc
ja
fldenv
or
out
and
scas
jne
dec
arpl
adc
shrb
cmp
sub
and
cmp
mov
cmp
hlt
jno
xchg
test
loope
jg
sub
movsl
stos
incb
das
xlat
dec
jae
mov
daa
pop
cld
or
dec
fildll
mov
dec
scas
mov
jno
cltd
cmp
sbb
fld
mov
aam
arpl
pusha
sub
fwait
sbb
pusha
jns
xor
push
gs
mov
pop
test
ja
ss
subb
pop
xchg
test
sarl
adc
and
lock
mov
idivl
fistpll
stos
aas
in
repz
rorb
inc
mov
push
and
cmpl
je
ja
aaa
popf
loop
mov
lock
push
xor
dec
mov
out
scas
xorl
cld
sbb
loopne
fs
iret
cmp
imul
cmp
mov
dec
pop
out
jge
adc
pop
sub
xlat
xchg
dec
nop
sbb
inc
dec
loop
push
push
int
mov
dec
adc
movsl
add
cs
sub
das
push
cmp
in
test
lds
sub
inc
adc
or
mov
stos
enter
test
or
test
push
enter
sbb
cmc
stc
lahf
jbe
sbb
das
and
jns
cmp
popl
dec
sub
pop
push
add
mov
pusha
js
cmp
cmpsb
inc
in
int
push
pop
aaa
addr16
mov
inc
cmp
pop
inc
notl
adc
inc
mov
add
dec
lods
xor
dec
sbb
add
sbb
fimull
rcll
ljmp
push
decl
ja
xor
push
shll
pop
jp
cmc
repnz
lret
xchg
pop
pop
push
pop
pop
lods
jecxz
sbb
and
pop
int3
adcb
dec
icebp
inc
push
shrb
xchg
call
in
push
push
call
xchg
xchg
test
mov
je
shll
mov
jo
jns,pn
inc
mov
lea
sbb
jnp
and
add
pop
xchg
mov
xor
cltd
cmp
pop
pop
sbbl
outsl
dec
pop
or
adc
lret
sbb
and
jl
fimull
nop
popa
int3
pop
adc
push
gs
mov
cmpsb
divl
pop
and
sub
cmp
cmpsl
clc
loope
hlt
subl
outsb
iret
xchg
aad
int
mov
cld
arpl
pop
xchg
imul
dec
jg
cmpsb
adc
js
ja
cmp
orl
lcall
stc
stos
cld
xchg
pop
movsl
or
mov
jecxz
add
jbe
and
out
mov
inc
dec
sub
into
ss
and
js
daa
or
fs
and
insb
push
push
add
lahf
jns
jl
xchg
in
xor
scas
les
cmc
jno
jge
jbe
sbb
inc
loop
sbb
je
cmp
xchg
xor
enter
xchg
push
jbe
mov
adcl
es
repnz
or
push
xor
mov
and
and
xchg
pop
sub
dec
cmp
sbb
insb
icebp
push
jb
sub
xchg
xchg
and
mov
test
testb
test
nop
jo
clc
into
in
jne
mov
push
out
hlt
arpl
enter
jne
loop
dec
mov
sub
inc
inc
adc
pop
adc
notb
xchg
cmp
and
stos
mov
mov
xor
push
lock
add
sbb
aad
xchg
sub
test
fnsave
cmp
jb
dec
mov
mov
test
and
xor
repz
maskmovq
mull
sub
fstl
cmp
or
mov
adc
jnp
idivl
es
pop
frstor
subl
push
xor
dec
ficompl
push
cmpsb
arpl
mov
scas
pop
jg
hlt
adc
roll
daa
push
fisubrs
int3
xor
popa
lds
xchg
add
sbb
jp
jns
pop
jnp
jbe
shrb
sti
mov
das
pop
lret
or
cmp
cli
pushf
xchg
push
push
imul
pop
sahf
test
inc
sub
push
inc
mov
mov
jnp
push
xor
ja
leave
jae
js
sbb
xchg
inc
and
repz
loop
add
cmc
cmp
lahf
pop
sar
cmp
sbb
mov
mov
stc
test
scas
adc
arpl
jmp
ret
mov
jno
mov
js
cmp
pop
pop
mov
repnz
decl
and
insl
mov
adc
push
rcrb
xor
sub
icebp
pop
mov
rclb
nop
cmp
flds
add
and
xor
inc
jbe
ja
add
jp
fmuls
pop
mov
push
pusha
hlt
loope
cmp
das
je
lods
sbb
stos
xor
stc
cld
jmp
jl
adc
mov
cwtl
mov
outsb
mov
inc
xor
inc
aad
fs
scas
jne
dec
push
pop
jnp
or
mov
into
popf
std
lahf
jnp
jns
scas
add
mov
roll
ret
repz
push
sarl
das
or
mov
in
test
and
inc
pop
jmp
pop
repnz
sub
lea
mov
mov
fnstcw
movsl
cmp
fsubrl
cs
and
out
xchg
test
scas
or
pop
xor
fcom
xor
lea
mov
and
pop
fstp
or
int
test
clc
fdivrl
js
dec
push
push
mov
out
and
shll
test
adc
inc
push
hlt
sub
push
mov
adc
cwtl
mov
dec
pop
adc
test
movsl
pop
fadds
sbb
jp
mov
add
nop
not
int
and
jo
aas
out
adc
sahf
movsl
mov
lahf
ror
icebp
jno
xor
cwtl
mov
hlt
xor
mov
test
lods
jne
jl
add
lahf
xor
ds
dec
pop
mov
mov
mov
xor
jb
sub
mov
dec
sbb
pop
mov
jl
adcb
rolb
rorb
into
mov
adc
test
pop
mov
adc
cs
mov
lock
inc
cld
mov
ds
or
push
pop
jle
dec
pop
or
and
mov
mov
push
adc
or
ss
mov
mov
movl
and
and
xor
pop
enter
popa
mov
add
xchg
mov
mov
sub
push
cmp
addr16
fnsave
aas
push
jno
cli
dec
inc
sbb
xlat
inc
xor
sub
test
dec
adc
dec
je
sub
pop
jl
or
and
xor
cmp
movsl
push
faddl
xchg
cmp
inc
dec
divb
inc
add
add
push
clc
ja
and
inc
bound
or
test
mov
mov
pop
sub
dec
cwtl
push
in
or
shl
scas
lret
xor
mov
lods
cli
push
mov
cmp
dec
repnz
mulb
aam
dec
fildll
sub
movsl
jb
rcrb
adc
dec
cmp
sub
push
lock
jnp
cli
ret
push
ss
xchg
or
adc
mov
inc
cmc
daa
pop
jp
std
mov
call
lahf
add
mov
cwtl
inc
lahf
mov
cltd
push
out
and
push
and
push
std
movaps
and
out
xor
aas
pop
pop
dec
loope
cmpsb
movsl
faddl
xchg
cmp
stos
and
in
jp
scas
mov
subb
out
sbb
add
movsb
fs
adc
cmpsb
adc
fbld
cwtl
dec
ficomps
push
or
mov
pop
sbb
stos
pop
int
xchg
xlat
cmp
js
int3
test
gs
and
repz
cmp
movsl
push
ss
rolb
cmp
test
jp
rcrb
add
or
mov
push
xor
dec
sub
pushf
out
icebp
pop
push
add
imul
arpl
mov
cmpb
repnz
mov
mov
ja
lea
in
push
sub
movsb
loope
sbb
aas
test
test
dec
loop
sbb
push
adc
mov
js
add
and
pop
cmp
sbb
push
sub
add
dec
push
sahf
ss
sbbl
push
and
mov
and
or
test
imul
xor
xor
inc
adcb
push
jae
cli
sbb
pop
lahf
aam
xchg
push
xchg
pop
jge
jmp
dec
popa
mov
and
push
pop
jl
in
mov
xor
bound
xor
ja
test
verw
sbb
lds
dec
in
inc
push
and
sub
sub
jmp
sub
lcall
shll
or
pop
pop
sbb
push
dec
dec
cmp
mov
je
cmovno
testb
mov
cmp
mov
and
in
xor
or
add
mov
push
adc
jl
pusha
and
mov
pop
loopne
xor
xchg
add
test
inc
jp
movsl
mov
adc
adc
js
push
push
inc
push
sub
cwtl
call
out
jnp
sbb
mov
in
inc
dec
ficoms
ret
jbe
push
insl
arpl
fnstsw
test
sub
shl
fidivrs
fmulp
sahf
call
out
and
inc
or
push
movaps
cmp
movsl
sub
jns
dec
pop
cmp
inc
inc
stc
lcall
fldt
mov
mov
sti
sbb
pusha
je
add
sbb
xor
and
int3
std
ja,pt
jl
leave
jl
in
cs
pop
in
cmp
bound
movsl
or
test
adc
pop
and
mov
cmpsb
enter
jo
push
int
fdivl
notl
andl
cltd
mov
int3
jo
mov
add
cmp
loope
dec
xor
stos
mov
into
push
inc
out
fs
sbb
es
jle
pop
xor
lods
dec
fsubs
jle
xchg
inc
jg
pop
push
clc
jnp
jo
dec
xor
pop
shlb
pushl
bswap
jo
test
inc
inc
rorb
pusha
in
leave
jb
pop
sub
mov
ljmp
enter
and
fadd
push
jle
pop
adc
jne
ds
inc
jge
inc
test
pop
les
push
mov
dec
cmp
jno,pt
mov
dec
cmp
icebp
not
fdivp
pop
movsb
enter
xor
lock
test
hlt
loopne
into
xor
add
mov
cmp
cs
sbbl
mov
sbb
imul
aaa
mov
dec
xor
enter
xchg
inc
adc
cmp
jbe
dec
out
ds
pop
std
push
inc
loop
push
push
lahf
loop
repz
lock
sub
sbb
mov
sub
mov
push
jno
mov
movsb
push
sbb
mov
pop
insl
sti
and
daa
xor
cmp
jno
add
stos
or
and
pop
in
scas
mov
aas
bnd
sub
push
stos
mov
stc
dec
test
pop
rorb
test
pushf
fs
inc
sbb
pop
add
ja
sub
andb
jb
inc
dec
cmp
adcl
jle
pusha
push
fbld
cmp
movsl
enter
cmp
sub
dec
xlat
js
test
dec
frstor
loopne
sbb
mov
inc
ret
ja
frstor
sahf
push
hlt
or
lret
daa
inc
and
insl
or
pop
mov
mov
lahf
iret
imul
insl
pusha
cmp
lds
cmc
mov
frstor
mov
dec
add
mov
aas
das
and
dec
cmp
repz
mov
arpl
pop
fldl
jge
mov
xchg
push
pop
push
imulb
sub
popf
or
xor
or
xor
xor
sbb
and
add
repz
sbb
xchg
adc
push
test
or
push
je
addl
iret
cmp
cmp
xchg
push
sbb
sub
push
sbb
sbb
pop
inc
fstps
roll
rcl
pushf
mov
stos
or
xchg
insb
testl
je
xor
int3
cltd
xchg
xchg
movsl
push
and
lret
in
test
daa
in
ja
mov
inc
push
jo
sahf
cld
mov
push
jb
mov
sbb
adc
sub
inc
sub
pop
and
aam
cmp
cld
sbb
outsl
mov
pop
fstp
mov
push
cmp
shl
push
add
inc
lret
dec
outsl
bound
xchg
cld
jo
and
fcomip
dec
sub
and
xor
xorb
clc
in
mov
mov
pop
mov
daa
call
or
pop
xor
mov
add
rcrb
sbb
ret
arpl
movsl
fcomp
inc
jbe
sbb
cltd
mov
mov
sub
mov
fwait
push
pcmpgtw
pop
movups
xchg
pushf
aaa
add
cmp
sub
xchg
mov
pop
and
sub
mov
push
cmp
aad
stc
movsb
int
in
push
movsl
repnz
mov
pop
mov
push
aaa
insl
sub
inc
pop
stos
ds
gs
movsb
addb
stos
movsb
sbb
and
movsl
insb
sti
pusha
dec
stc
jecxz
stc
pop
les
jbe
inc
push
dec
adc
mov
xchg
mov
sub
shll
imul
dec
fsubs
cli
fwait
push
mov
mov
mov
ljmp
jo
fistpll
or
xor
sbb
mov
xchg
xchg
push
loopne
je
add
cmp
mov
pop
add
leave
add
xchg
adc
out
imull
sub
push
inc
loopne
stc
incl
aas
je
inc
nop
fsubs
xchg
hlt
mov
rol
out
sub
mov
push
sub
test
andb
mov
pop
pop
add
arpl
dec
rcr
aas
mulb
pushf
das
adcb
pushf
arpl
mov
fs
cltd
xchg
lret
mov
sub
enter
sbb
ds
mov
cmp
or
mov
pop
push
push
push
ja
les
and
int3
add
mov
repz
gs
ret
xchg
and
cmc
mov
mov
xor
mov
repz
lods
adc
aam
or
xor
dec
aam
and
aaa
loopne
shrb
or
out
loopne
repnz
push
in
push
insl
xlat
call
push
mov
or
jnp
mov
mov
outsl
ds
sub
aad
and
insl
mov
mov
stos
xor
gs
adc
sub
sti
into
lea
clc
cmp
cltd
cltd
add
aam
sbb
xchg
mov
mov
and
xchg
or
push
adc
les
aam
cs
gs
xchg
popf
cld
xchg
xchg
mov
fcoml
xlat
popf
cmp
mov
sbb
xor
rcrb
jns
in
leave
add
fdivr
and
dec
mov
enter
sub
inc
dec
addr16
pop
fisubs
push
sti
gs
shll
dec
imul
sub
jmp
rcrl
jg
lsl
hlt
add
dec
mov
jl
lods
and
data16
movsl
and
js
and
or
inc
cmp
and
test
push
mov
xchg
pop
xor
es
add
pop
mov
push
outsb
jae
mov
add
mov
and
push
xchg
gs
xlat
xor
or
sub
inc
out
or
or
pushf
pop
mov
adc
or
nop
in
jecxz
adc
adc
adc
clc
les
mov
add
adc
rolb
pop
shrl
cmc
mov
xchg
test
mov
lock
push
lret
jmp
call
push
stc
pop
push
adc
movsl
imulb
cmp
scas
jmp
push
dec
mov
cmp
jo
popf
pop
pop
jbe
dec
out
call
pop
call
dec
fisubs
std
add
jns
push
inc
lock
mov
out
fdivr
outsl
popf
int3
and
push
xchg
sbb
cli
movsb
orb
jae
and
sbb
not
inc
dec
jle
lahf
sbbb
xabort
push
xor
cmpb
push
into
fimuls
push
ja
jl
mov
push
les
movsb
cltd
pop
lock
inc
pop
fsubrl
mov
mov
mov
dec
dec
fninit
adc
fbld
sbbl
clc
lods
sbb
sahf
lcall
imul
jp
inc
shlb
dec
scas
cltd
xchg
mov
popf
shlb
out
repnz
and
mov
testl
test
fs
addb
leave
bound
xchg
and
nop
sbb
int3
push
dec
popf
pop
inc
pop
xchg
push
sbb
push
leave
jecxz
fiaddl
and
pushf
scas
or
notl
std
loopne
inc
pop
dec
mov
mov
into
pop
cmp
adc
out
push
js
adc
dec
lret
notl
cmp
mov
js
outsb
sub
cmp
aaa
mov
inc
sarb
sbb
or
pop
adc
lahf
enter
sbb
dec
mov
xchg
enter
mov
adc
movsb
sub
mov
enter
sbb
ljmp
push
adc
jge
int3
push
dec
outsb
sbbb
mov
imul
push
adc
mov
js
shlb
pusha
sbb
jp
jmp
or
add
cmp
add
mov
adc
jnp
xor
cmp
cmp
mov
and
mov
sub
fmuls
mov
push
scas
out
xchg
mov
fs
pusha
jns
popa
aas
push
js
dec
pop
pop
or
fs
sbb
sbb
push
pushw
out
loopne
xchg
stc
enter
pop
xlat
add
je
pusha
fldl
cli
cmp
ret
pop
push
pop
jge
mov
and
and
xorb
pop
sbb
mov
inc
jns
pop
ret
jo
aas
mov
add
push
xchg
pop
push
insb
in
mov
inc
xor
jae
out
jae
and
adc
xchg
xchg
imul
test
adc
pop
add
pop
sar
cmpsb
xor
repnz
sahf
fbld
addr16
mov
sub
ret
adc
pop
ret
fildl
movsb
lcall
pop
aam
push
es
or
push
inc
mov
or
sbb
pop
stc
imull
lock
shrb
in
mov
push
testl
sub
push
jb
test
pop
mov
and
push
mov
xor
bound
mov
jb
mov
je
push
add
cs
pop
out
and
sub
sbb
xchg
push
or
test
cmp
aad
and
cmp
into
ljmp
js
mov
adc
pop
add
mov
mov
iret
push
and
dec
or
pop
cmp
ja
int
cli
jp
fldln2
pusha
inc
pop
fldt
jp
add
inc
out
sub
fs
dec
icebp
pop
stc
stos
jecxz
mov
xor
movsl
pushf
fiadds
xchg
cmp
inc
mov
pop
into
repz
and
je
jmp
fdivrs
mov
negl
pop
aaa
mov
int
xchg
dec
or
dec
inc
inc
in
or
adc
add
int3
push
jns
adc
mov
outsb
push
sub
loope
or
mov
popf
mov
dec
jmp
cmp
or
sub
mov
dec
js
movsb
xchg
xlat
dec
add
mov
cmp
adc
inc
ffree
jns
mov
mov
jmp
mov
xor
mov
pushf
rclb
pusha
enter
data16
push
sub
mov
rorb
mov
or
imul
and
insb
xlat
cld
out
dec
stos
fidivl
adc
call
or
sarb
mov
cmp
jp
sbb
push
jp
mov
in
and
mov
orb
stos
test
enter
fldcw
or
aam
jecxz
dec
jae
sub
adc
pusha
pop
mov
inc
imul
xor
cwtl
push
mov
add
xchg
push
pop
and
ret
lahf
xlat
push
xchg
test
push
sub
in
dec
sbb
or
out
nop
cmp
cli
mov
mov
and
adc
fwait
movsb
lods
mov
mov
int3
ds
gs
cs
xor
cmp
outsb
push
mov
sub
add
in
add
mov
xor
xlat
dec
pop
add
js
popf
cld
inc
pop
mov
or
add
fstp
call
mov
or
cmp
icebp
xor
dec
cmp
adc
pop
sbb
cmp
sub
sub
fisubl
mulps
psraw
lret
xor
mov
faddp
mov
iret
pushf
mov
dec
cmpsb
popa
loopne
int
sbb
mov
inc
mov
xor
xor
pop
cmp
aaa
sub
cltd
out
and
fwait
jne
sbb
mov
or
mov
int
jbe
mov
popf
and
rorl
or
out
stos
xlat
mov
les
cmp
jp
or
hlt
aas
jb
sub
dec
mov
mov
add
lods
sbb
and
pop
in
pop
inc
mov
je
adc
lods
mov
aas
and
imul
pop
fs
incb
pop
scas
orb
fmuls
scas
sub
cmpsb
dec
outsb
cli
jecxz
lret
inc
dec
bound
mov
clc
test
scas
outsl
xlat
and
subb
cmc
mov
adc
lods
loope
add
mov
push
cmpsl
scas
pop
mov
andb
push
cmp
sub
pop
xor
pop
push
xor
push
out
inc
sti
mov
mov
insl
fdivrs
xor
lds
adc
adc
mov
pop
sbb
cmp
lea
inc
stos
pop
jg
adc
dec
xor
dec
lret
xchg
push
dec
jno
gs
mov
add
mov
test
fdivrl
icebp
jmp
cmp
pop
cld
and
cmp
push
inc
push
dec
pop
sub
mov
cli
negb
jnp
or
test
sub
and
jge
jg
xor
fdivrl
clc
push
ret
inc
sub
push
cmp
or
mov
jb
mov
xlat
cld
ljmp
xor
ljmp
daa
sbb
in
hlt
aaa
and
and
or
sbb
aad
xor
dec
movsb
or
iret
mulb
test
jl
push
lret
jecxz
jnp
cld
dec
movsb
pop
add
sub
xchg
notb
mov
mov
push
loopne
xor
dec
mov
out
icebp
stos
push
mov
fmuls
and
ss
sbb
or
add
fdiv
sbb
in
xor
xchg
les
inc
mov
lock
inc
ss
or
or
pop
fstps
aam
addr16
sbb
jae
xor
arpl
int3
dec
inc
pop
movsb
dec
xchg
mov
pop
leave
loopne
or
mov
cmp
xchg
adc
enter
pop
pop
adc
addb
loopne
jno
xchg
pop
movsl
push
mov
shrl
mov
or
pop
dec
push
sbb
lock
xor
lock
mov
cmp
mov
push
js
mov
push
sub
adc
xchg
inc
rcr
std
adc
adc
cs
push
icebp
jmp
sub
inc
ss
lock
sahf
push
and
jne
mov
push
rolb
xor
sbb
rcl
xor
cld
sbb
pop
cwtl
pop
mov
aam
sbb
add
mov
iret
mov
pushf
aas
fwait
jns
xor
pushf
test
sbb
popf
inc
jns
add
adc
pop
and
div
lock
lahf
pop
lret
lods
shll
cmp
inc
mov
orl
imul
pop
cmp
pop
es
std
cmp
adc
out
cmp
xor
dec
dec
test
adc
mov
jle
sbb
aam
fisubs
aas
or
xor
test
cmpsb
and
adc
and
icebp
pop
stos
inc
fstl
mov
xchg
stc
pop
repz
dec
insb
push
movb
add
sbb
test
test
testb
xchg
sub
je
cs
jae
fstps
sbb
cli
sub
pop
lods
mov
cmp
jae
cmp
pop
xor
and
and
xor
dec
jp
inc
pop
ds
dec
xchg
stc
in
push
iret
sub
inc
xor
inc
adcb
xor
stos
xchg
aas
inc
cmc
movsl
xchg
adc
xor
inc
enter
cmp
pop
adc
das
pop
xor
or
dec
mov
rolb
outsl
lahf
loop
in
mov
sub
dec
mov
jnp
aad
mov
add
pop
cmp
mov
ljmpw
cmp
mov
jb
xor
cmp
xchg
stos
dec
mov
fisubrl
dec
sahf
in
insb
fs
adc
jmp
xchg
add
push
stos
stc
and
dec
cmp
sbb
pushf
dec
pop
jnp
xchg
js
imul
sbb
lahf
cmp
divl
cmpsb
popa
arpl
cmp
mov
push
sti
repz
pop
jae
test
xchg
std
jno
push
and
sub
test
jle
ret
push
dec
or
sbb
loop
and
lea
sbb
and
lds
or
imul
out
into
jbe
sbb
pop
cmp
sbb
sub
or
sbb
out
jp
sbb
sub
jge
jecxz
dec
ret
je
outsl
arpl
pop
leave
mov
pushf
fwait
add
xchg
adc
cmc
add
inc
jbe
ret
adc
or
mov
pop
cmp
pusha
mov
std
je
dec
add
push
dec
xorl
pop
mov
cmp
pop
mov
pop
push
int
int3
or
je
sub
fcoml
mov
jl
scas
pop
div
cwtl
push
cmc
xchg
xor
data16
ss
lret
cwtl
xchg
sub
jns
loopne
es
lahf
loopne
in
mov
movsb
inc
sbb
dec
mov
and
jo
lea
or
cltd
pushf
cmp
js
lret
sbb
sub
push
mov
cmc
mov
add
ljmp
or
stos
imul
push
ror
cmp
mov
mov
inc
jo
outsl
jle
xchg
pop
fnstcw
pop
or
xor
jmp
lea
sahf
and
aas
mov
stos
mov
in
pop
mov
mov
dec
mov
or
es
adc
pop
ds
gs
push
in
add
mov
jle
cmp
daa
cmp
fwait
adc
pusha
dec
mov
shrl
in
enter
subb
es
adc
repz
sub
xor
or
cmp
mov
or
ds
les
clc
pop
push
cwtl
sahf
call
xlat
out
lahf
xchg
sub
sbb
rcll
mulw
cmpsb
daa
and
arpl
mov
sbb
adc
int3
out
jmp
ds
add
pop
into
jns
add
mov
sbb
in
inc
mov
loope
jg
jg
cmpl
mov
addb
xchg
dec
pop
dec
sbb
and
mov
cwtl
int
into
xor
dec
mov
sub
xor
sbb
mov
in
xchg
aad
sub
pop
xchg
jns
inc
clc
sbb
add
addr16
cmp
dec
inc
inc
sbb
stos
pusha
cmp
xor
dec
and
and
xchg
in
cmp
jl
pop
mov
jl
mov
jl
lds
iret
push
clc
inc
test
adc
jnp
aas
test
aaa
movsb
or
fldcw
inc
movsl
punpckhwd
mov
xchg
mov
imul
sbb
repz
callw
fisubl
cmp
fidivrs
icebp
pop
sbb
jnp
jo
xor
adcl
push
adc
inc
inc
pop
xchg
test
mov
or
pop
sub
flds
imul
popf
jne
jnp
js
sbb
frstor
enter
outsl
sbb
data16
cli
dec
sub
fwait
subl
push
push
ficomps
jecxz
jle
cmc
jg
out
adc
stc
les
sbb
lret
popfw
sar
inc
dec
pushf
rolb
pop
dec
push
js
imul
incb
js
xor
add
cmp
sbb
jo
fsubl
js
pop
adc
mov
lret
cmc
xor
xor
inc
js
hlt
mov
xchg
out
and
fwait
pop
movsb
lcall
into
cmp
adc
dec
cltd
push
cmp
adcl
test
lock
imul
dec
pop
cli
and
test
imul
inc
and
pop
push
cvtps2pd
pop
xor
ret
or
ds
push
jbe
xor
imul
pop
scas
push
enter
pop
ret
insl
or
outsl
jne
data16
mov
or
cmc
pop
adc
mov
and
mov
mov
jg
pop
xor
inc
js
inc
insl
jmp
and
out
mov
jecxz
loop
pop
mov
shll
leave
aad
push
pop
adc
jbe
decb
add
jae
inc
data16
enter
aam
push
or
mov
sti
push
jg
jp
pop
push
popf
fwait
out
movsb
dec
pop
dec
inc
xor
adc
jmp
movsb
xchg
pop
push
cmpsl
cwtl
cmpsl
dec
outsl
stos
jmp
stc
aad
xchg
movsl
stos
pop
rep
dec
leave
push
push
rorb
push
inc
xchg
add
movsl
cmpsl
pop
js
adc
fscale
mov
adc
xor
mov
inc
or
sub
insb
sbb
cmp
cmp
fidivrl
xchg
sub
mov
xchg
fcoml
scas
cmc
in
mov
push
mov
clc
sbb
inc
dec
imul
cmp
dec
call
dec
das
imul
lods
xchg
les
dec
cld
test
pop
xchg
lods
jp
dec
xchg
xor
jle
push
inc
sub
push
int3
loopne
mov
pusha
xchg
stc
jne
mov
push
cmp
mov
adc
push
sbb
cmc
push
jne
pop
clc
loopne
pop
sub
or
pop
and
nop
in
mov
out
cmp
cli
jne
or
cld
gs
rcl
jno
arpl
clc
arpl
js
insl
int3
mov
sub
test
andl
inc
pop
hlt
push
rcrl
jo
repnz
cmpsb
lcall
je
or
jns
xchg
out
jge
add
loop
adcb
or
or
or
clc
cmp
sub
sub
adc
enter
psrld
inc
xchg
ds
test
push
pusha
mov
mov
mov
adc
sub
sti
mov
mov
insb
dec
push
fiadds
aaa
clc
std
push
int3
pop
dec
jne
xor
pushf
lods
bound
neg
mov
in
cli
pmaddwd
enter
jecxz
sub
inc
fmul
mov
sub
jb
cmpsl
dec
xchg
movsl
cmpb
dec
stc
mov
push
xchg
jle
mov
pop
and
movsl
outsl
and
imul
and
xor
movb
inc
fnstenv
cwtl
std
xchg
inc
mov
mov
bound
movsl
ror
aaa
xor
sub
aaa
push
inc
mov
pop
or
pop
sub
cwtl
xchg
pop
cmpsb
aam
adc
xchg
jle
fistpl
enter
sub
xchg
xchg
gs
push
lret
push
cs
lock
inc
xor
data16
arpl
pop
sbb
stos
nop
mov
push
lahf
popf
pop
push
xor
push
cmp
jns
imul
and
or
pop
inc
iret
push
lods
dec
shll
lret
push
movsl
cwtl
lods
mov
aaa
mov
je
bound
cmp
jno
add
inc
jg
and
mov
push
sbb
js
xchg
icebp
sar
mov
or
cmc
pop
enter
cwtl
sbb
or
jg
xchg
in
inc
dec
out
jge
stos
mov
lea
popa
and
in
lock
mov
jp
xor
scas
scas
pop
shlb
xchg
ds
or
lods
hlt
test
subb
pop
lock
stc
pop
dec
add
jnp
ss
cmp
mov
roll
or
lods
in
movsl
mov
pop
mov
pop
inc
xor
out
loopne
mov
xlat
xorb
or
xchg
xor
in
inc
das
mov
jns
pop
outsb
xlat
loopne
dec
js
xchg
push
add
bound
jo
jo
jle
stos
xchg
insb
dec
pop
and
mov
mov
and
jo
fs
and
stos
or
inc
mov
inc
push
xor
push
sbb
mov
inc
mov
daa
push
xchg
pop
add
xor
imul
push
popa
aam
std
out
push
xor
and
mov
adc
cmp
xchg
popa
push
stos
sbbb
add
subb
pusha
xchg
pop
cmp
aas
insb
or
xchg
or
fstpt
sar
xchg
jbe
sbb
push
fldl
sbb
sbb
cmp
aas
fisubs
subl
rcr
or
les
lret
mov
and
push
xchg
rcrl
iret
jnp
lcall
xchg
std
push
out
in
and
inc
cmc
pop
idiv
loop
dec
orb
cli
add
cmp
inc
cmp
xlat
popf
ds
pop
dec
and
addb
mov
dec
pop
jmp
sti
sub
iret
sbb
xchg
fstpl
sbb
clc
clc
out
mov
out
cmp
mov
sbb
or
and
mov
iret
hlt
push
add
out
in
cmp
pop
cmp
shl
inc
les
mov
jno
mov
or
xchg
cld
imul
sbb
mov
push
sub
xchg
cmc
jno
dec
sub
scas
cld
xor
dec
in
sub
test
jb
ret
push
push
lahf
inc
lret
cld
fldt
push
xor
xchg
loopne
movsb
dec
pop
jnp
out
movsl
insb
sub
xchg
jge
stc
add
cld
cmpl
push
stos
inc
add
mov
leave
jb
in
xor
movsl
in
xchg
mov
mov
mov
loop
leave
out
inc
cmc
sbb
aad
bound
cmp
repz
jno
pop
dec
cmp
xor
mov
inc
ja
ds
loopne
cmpsb
clc
shrb
push
bound
xchg
aaa
mov
dec
std
loopne
adc
dec
icebp
xchg
jge
add
in
ss
dec
push
sub
cs
insb
fwait
inc
xor
movsb
int
and
jns
push
adc
mov
xchg
xor
jmp
inc
loop
push
test
aad
subl
xchg
sub
add
dec
or
xorb
call
dec
inc
or
jne
ss
push
adc
cmpsl
scas
or
lahf
sbbl
ret
adcl
outsl
inc
jbe
or
or
push
adc
xchg
cmp
mov
mov
xor
out
test
stc
mov
mov
pop
mov
add
add
jmp
insb
mov
adc
adc
and
cmp
aaa
adc
mov
call
mov
bound
neg
jns
mov
pop
dec
inc
cmp
es
or
test
sbb
sub
xchg
sbb
call
fdivl
orl
xchg
test
mov
sub
cmp
pop
mov
fs
clc
stc
movsl
lods
or
in
jmp
int
mov
adc
mov
clc
ljmp
sub
insb
arpl
aas
lret
test
sbb
ret
dec
fists
nop
dec
movsl
in
sub
cmc
sbb
mov
ljmp
mov
dec
lcall
dec
sbb
add
xchg
cmp
sub
lret
adc
divps
sbb
and
push
icebp
lds
sahf
mov
xor
and
loop
or
jae
jmp
jno
lret
adc
ds
ljmp
push
adc
testl
in
sub
and
mov
push
cmp
sub
nop
push
adc
cmp
jmp
pop
cwtl
aaa
sbb
call
xchg
jno
push
cmp
data16
addr16
push
fnstsw
fcoml
int3
jno
or
popa
inc
mov
xor
pushf
pop
aad
enter
lods
sbb
icebp
out
or
adcb
and
pop
jbe
mov
push
sbb
sub
aaa
adc
dec
fsubr
fadd
jne
or
pop
adc
push
sub
rcr
mov
inc
sub
pop
xor
pop
pop
push
orb
jmp
scas
outsl
mov
xchg
xchg
sub
lret
in
xlat
les
lret
jnp
addr16
add
inc
jne
push
cmp
push
or
inc
arpl
xchg
sbb
iret
push
or
test
sub
movsb
mov
sbb
js
dec
cmp
push
repnz
js
sahf
imul
or
fcmovne
mov
and
push
lahf
xor
xor
pop
fdiv
clc
xorb
pop
jp
sub
sti
and
lret
lcall
cmp
and
pop
push
cmp
pop
gs
add
lret
xor
inc
sahf
scas
popf
add
mov
or
xor
add
into
fs
shrl
mov
push
cld
je
fs
pop
es
lock
rolb
fistpl
jecxz
dec
jp
cmpsb
fsubl
imul
push
std
lods
call
sub
in
add
adc
dec
cli
mov
repnz
popa
hlt
loop
shll
cmp
adc
xor
sub
clc
je
xor
jp
ja
lret
cwtl
int
enter
mov
insl
mul
mov
mul
dec
ds
stos
dec
pushf
jb
fsubl
mov
mov
cmp
adc
sub
sbb
data16
stos
push
jbe
push
int
int
js
sti
bnd
adcl
lcall
int
clc
nop
and
jg
scas
or
xchg
xor
in
mov
xchg
mov
repnz
lds
out
mov
in
imul
push
mov
xchg
jns
imul
and
lahf
mov
in
fdiv
and
xor
jbe
jo
mov
and
jb
enter
and
or
mov
fisubrl
in
fsubr
arpl
shl
addr16
test
pop
jne
je
cmpsb
outsl
ret
xchg
pop
or
and
and
repnz
hlt
lods
push
mov
jns
xchg
jne
cwtl
or
loop
insb
inc
leave
enter
lahf
mov
add
sub
iret
movsl
jecxz
mov
rorl
cld
mov
icebp
push
cwtl
bnd
cld
cmp
mov
mov
leave
adc
mov
jae
stos
and
pop
das
fisubl
sbb
stos
dec
xor
outsb
insb
mov
mov
ja
xchg
xchg
and
pop
jae
pusha
fists
outsb
insb
aam
pop
sub
add
jge
movsb
aas
inc
sahf
cmp
jae
cmp
dec
fcmovnb
incb
add
enter
push
insl
xchg
dec
xchg
xchg
or
sbb
jl
in
bound
and
mov
xor
lods
push
addb
mov
pop
sbb
mov
sahf
inc
aam
int3
jns
fs
stos
push
pop
sbb
inc
pop
push
mov
hlt
sbb
out
sbb
cmpsb
aaa
push
pop
dec
mov
lret
ds
cli
pop
pop
lods
clc
int3
inc
jmp
jb
cmc
pop
push
inc
dec
adc
push
sub
cli
mov
and
xchg
pop
movsl
inc
in
adc
cld
popa
fs
lahf
add
dec
dec
mov
popa
mov
cmp
test
lock
stc
and
call
in
mov
pushf
mov
jp
xchg
sahf
sbb
movsl
rdpmc
jo
pop
inc
or
movsb
mov
push
mulb
cmovns
adc
pop
push
xchg
ss
push
ds
fstpt
std
adc
push
jle
sbb
push
pop
in
add
jp
mov
xor
mov
pop
dec
mov
lahf
jg
sub
jp
mov
xor
scas
hlt
mov
cmc
jmp
cmp
or
pop
lea
pop
pushf
or
lret
fdivrl
nop
adc
addr16
cmp
xchg
popf
push
push
adc
enter
das
xlat
xchg
mov
cli
lds
mov
lods
out
push
xor
xchg
adc
mov
pop
mov
ds
insl
and
into
mov
lret
pusha
pop
mov
pusha
mov
faddl
jecxz
jns
in
push
stc
jnp
or
cwtl
sub
or
filds
and
mov
bound
xchg
adc
stc
in
add
xchg
jno
mov
jp
mov
adc
movsb
int3
or
imul
mul
popa
popf
xchg
sbb
xchg
out
test
pop
je
aaa
jl
sarb
pushf
stc
pop
pusha
pop
xor
mov
xchg
mov
stc
fisttpl
imulb
fisubrl
lea
xchg
xchg
sbb
sbb
test
enter
pop
pop
lahf
in
clc
int
xchg
pop
int3
dec
cmpb
xchg
outsb
push
adc
xchg
movsl
dec
sbb
dec
popf
add
les
ja
mov
mov
mov
xor
jle
cmc
hlt
adcl
or
scas
or
lret
pushf
inc
lea
popf
ja
sbb
shl
lret
addr16
sub
lret
or
or
pop
push
icebp
push
nop
movsb
vsqrtpd
out
adc
repnz
scas
push
cwtl
push
push
push
add
imul
mov
ds
add
pop
icebp
das
out
and
sarb
sub
je
jnp
je
jbe
into
dec
jmp
repnz
or
push
int
fldcw
xchg
xchg
jg
rorb
out
ja
xor
pop
lahf
fmul
cmp
nop
popf
mov
js
sti
bnd
jo
mov
lahf
stos
adc
repnz
fs
push
pusha
shll
mov
add
mov
jo
mov
push
mov
aaa
aam
iretw
dec
sbb
pushf
in
cli
inc
pop
je
xor
or
bound
dec
jb
mov
out
dec
add
pop
int3
std
jp
mov
je
xchg
cmp
push
int
and
sbb
dec
rorl
call
stc
inc
fs
mov
dec
mov
out
mov
jle
inc
jb
lods
into
pop
inc
sbb
mov
outsl
add
inc
mov
mov
push
cmc
add
sub
add
arpl
cmp
movsl
sbb
mov
xchg
push
dec
add
call
jns
pop
stc
bound
jge
cmp
popf
dec
pushf
jg
xor
insb
mov
jae
pop
test
icebp
and
frstor
jno
stc
call
mov
loop
mov
and
push
push
and
push
mov
or
and
fisubl
data16
sahf
scas
fisubrl
aam
ror
popf
jg
loopne
loop
inc
xor
sahf
cwtl
push
popf
mov
insb
xor
fwait
test
dec
or
rcl
fstpl
test
push
push
and
push
cmp
cmpb
test
cmp
icebp
cmp
inc
clc
and
inc
pop
and
ret
or
or
mov
clc
outsb
sbb
add
bound
cmpsl
fsubl
ret
or
test
jb
aad
fsubrl
mov
xor
mov
lods
cltd
dec
hlt
dec
movsb
and
rorl
mull
jle
sub
imul
xor
or
xchg
inc
mov
out
jns
loope
cltd
cs
insl
and
inc
push
adc
cmpsb
dec
pop
adc
sub
shlb
sub
fs
xor
mov
aaa
cwtl
mov
pusha
lock
or
fnsave
jbe
add
popa
add
and
popf
fdivrs
call
lret
clc
es
push
mov
dec
enter
aas
push
lea
sbb
andb
pop
fadd
or
cld
sbb
scas
mov
shr
out
inc
rolb
out
lods
jge
jmp
or
sbb
sub
sbb
push
mov
hlt
cmp
mov
outsl
pop
cli
lahf
xchg
cld
jo
mov
je
ficompl
outsb
mov
sub
push
push
mov
push
and
pop
je
add
stc
jne
dec
sti
mov
test
lahf
push
cmp
insb
insl
inc
mov
frstor
in
sahf
xor
mov
or
iret
cmp
mov
lret
push
std
pop
movsl
cmp
jge
adc
aam
inc
in
test
mov
xchg
es
sub
sub
and
dec
test
aas
sbb
je
outsb
jmp
ljmp
pop
lsl
fs
push
out
mov
dec
subl
aam
imul
jmp
mov
adc
daa
or
xor
push
push
jbe
int3
stc
test
pushf
idivb
subb
repnz
sbbb
inc
xchg
pop
push
jle
mov
adc
dec
dec
pusha
rcr
inc
pop
cltd
dec
xchg
sub
cmp
mov
jmp
mov
loopne
xor
jge
clc
negl
jmp
xor
gs
inc
mov
ficoms
push
xchg
cmp
sbb
jo
xchg
adc
negl
jbe
push
push
in
std
fsubrs
dec
mov
movlps
sti
adc
cmp
scas
inc
adc
jge
sbb
into
ficoms
mov
adc
or
pop
outsb
loop
es
jnp
jne
test
notb
outsb
inc
adc
test
loope
pusha
bound
add
add
xchg
dec
and
pop
clc
imul
and
icebp
fistl
sahf
das
push
in
scas
or
test
push
xor
and
cmc
popf
pop
dec
fldenv
lods
pop
lock
jp
adc
iret
aam
jno
gs
rcl
xor
fmul
in
or
sub
stc
cmc
adc
cmpsl
mov
lds
fdivrs
int
in
and
xchg
decl
push
test
pop
sub
lret
adc
pop
mov
test
shl
pusha
stc
add
mov
sub
ljmp
xchg
mov
sub
xor
or
sbb
imul
in
pop
cmpsb
outsl
data16
ficompl
int3
sbb
loop
and
shl
jg
popf
pop
gs
adc
push
sbb
and
jl
movsb
sub
dec
or
clc
xchg
push
push
mov
sar
bound
icebp
dec
xor
sti
pop
sbb
fs
add
or
addr16
je
sub
cmp
push
and
pushf
andb
pop
and
lds
fidivrl
pop
mov
orl
sub
scas
scas
push
mov
negl
sbb
ljmp
subb
add
in
jl
add
scas
sbb
and
out
out
sbb
and
xchg
test
mov
or
push
xchg
xor
mov
jl
jmp
sbb
into
mov
imul
psubsb
incb
jecxz
jp
mull
sbb
pop
out
mov
mov
cmp
aad
repz
xor
and
inc
mov
push
cmp
xor
jbe
cltd
in
sub
pusha
cmp
xor
mov
int
pop
lret
adcb
sub
subb
push
and
sub
mov
jp
jb
mov
xor
mov
js
jnp
aas
inc
mov
loope
or
mov
and
std
ret
mov
xor
test
mov
insb
out
push
pop
ja
in
fwait
inc
pop
movntq
jae
push
mov
xor
stos
xor
jmp
add
repnz
lock
or
pop
cltd
cwtl
or
scas
pusha
mov
es
jmp
mov
dec
adc
mov
mulb
and
inc
sbb
orb
pop
in
jno
daa
rorl
or
popa
mov
pop
fidivl
hlt
loopne
lock
rcll
enter
sbb
jnp
or
add
mov
mov
adc
jbe
push
and
fcomps
insl
je
jno
jg
adc
push
inc
rcrl
sub
shrl
mov
push
inc
mov
in
jge
cmpsb
xchg
mov
popf
add
jne
in
pusha
pusha
sub
mov
addr16
xor
incb
loopne
stc
pop
dec
cwtl
in
jl
js
mov
adc
dec
adc
xor
sub
enter
and
fdiv
xchg
cli
dec
lock
ret
cmpsl
mov
mov
mov
sahf
lds
insl
loopne
or
lcall
pop
inc
hlt
inc
cmp
clc
xchg
dec
cmp
icebp
jne
nop
xchg
fs
jmp
push
pop
jmp
and
jmp
movsb
sahf
mov
pop
rorl
frstor
push
shlb
rorb
push
je
popl
int
fsubrs
xor
cs
lea
dec
aas
es
push
and
cmc
inc
sti
in
dec
inc
cmp
icebp
mov
xor
jle
int3
adc
je
shlb
and
pop
aam
cmp
mov
push
dec
inc
loope
or
std
xor
or
xor
sub
adc
out
fwait
cmp
sub
xor
dec
inc
inc
or
hlt
je
insb
inc
mov
dec
cld
lods
insl
gs
arpl
add
and
push
cmp
pextrw
dec
sbb
mov
pop
mov
mov
vcomiss
sbb
inc
inc
jge
mov
in
fs
loopne
out
pop
mov
ja
pop
fs
repnz
das
std
inc
data16
daa
pusha
icebp
push
cmp
xchg
inc
add
sub
pushf
xor
cmc
add
push
and
inc
popa
sbb
mov
dec
aam
pop
ds
loopne
mov
shl
leave
clc
mov
mov
insb
push
jp
lea
fs
data16
in
rcl
in
aad
insl
sbb
shl
or
les
sbb
aam
mov
faddl
dec
hlt
movsl
push
iret
cld
ficoml
mov
sub
stc
cmpsb
push
orb
dec
lods
je
xchg
mov
das
andb
test
pop
shll
jb
cs
pop
sbb
sub
mov
or
movsb
daa
adc
clc
cmp
adc
ja
dec
in
and
and
cmp
in
repnz
pop
mov
sbb
mov
xor
xchg
push
jmp
add
mov
into
xchg
movsb
stos
aaa
shll
sbb
dec
jne
push
leave
stos
icebp
stc
aad
sub
das
adc
push
popf
ret
jle
repz
fistl
jle
fsts
xor
inc
mov
in
repz
or
lds
inc
cltd
shlb
fwait
mov
push
outsb
add
add
aad
xlat
mov
enter
xchg
sahf
outsb
aad
xorb
pop
mov
out
add
and
pop
jns
js
fistps
xchg
mov
lock
xor
cld
lcall
out
into
sub
test
xchg
or
in
dec
push
enter
dec
jne
xor
int
jnp
adc
jo
loopne
adcl
jae
mov
pop
test
test
adcb
lea
lret
stc
push
les
xor
mov
daa
dec
add
cmc
add
push
in
jl
mov
pop
dec
adc
sbb
popf
fstpt
cs
xchg
push
mov
cmp
or
inc
ficoms
test
popf
outsl
cmc
ljmp
movsb
js
mov
sbb
orb
call
aas
imul
adc
jp
sub
loopne
mov
lcall
or
push
rol
and
lcall
popf
int3
mov
mov
cmpsl
dec
sub
testb
and
pop
fs
data16
inc
jae
pop
add
negl
inc
negl
and
push
fwait
dec
sub
mov
adc
into
and
or
repz
pop
cmovg
inc
shl
fwait
and
adc
inc
sbb
clc
adc
inc
testl
and
sarl
inc
xchg
xchg
and
pop
pop
xchg
add
out
sbb
ds
sub
cmc
xchg
pushf
or
sub
lock
mov
jne
or
fucomi
stos
outsb
jno
mov
pop
push
push
push
roll
fsts
dec
pushf
cmp
les
jecxz
fisubrl
xor
sbb
subb
xchg
mov
stos
dec
loop
repnz
insl
inc
ljmp
stc
jp
test
lds
mov
push
jle
jns
and
cltd
sub
into
mov
fbld
gs
fisubl
movsl
mov
and
das
sub
insb
nop
inc
adc
and
gs
jle
dec
cmc
mov
scas
xor
ret
jo
negl
jnp
and
push
lret
inc
lret
mov
fnstenv
mov
cmp
jbe
sub
sub
sub
xor
add
add
divb
icebp
outsl
and
nop
mov
repnz
xchg
xchg
pop
jae
shlb
pop
clc
negl
jbe
push
outsb
mov
sub
ds
jl
loope
mov
data16
mov
jae
out
iret
sub
mov
movsb
lret
sub
in
jae
add
and
or
or
pop
lds
push
cmp
insl
outsl
pop
mov
rcr
sbb
push
mov
jne
sub
add
cltd
test
sbb
popa
out
xor
push
xor
sarb
shlb
in
arpl
jae
add
sbb
push
out
rolb
inc
cmp
inc
lock
jne
ljmp
xchg
push
sub
push
outsl
popa
shl
mov
dec
jp
mov
insb
int3
popa
imulb
cmp
or
loopne
push
icebp
cmp
imul
fs
or
inc
mov
in
fistps
clc
test
or
pop
xor
mov
pop
int3
or
es
and
stos
cmpl
mov
in
ds
xor
aaa
inc
adc
mov
cmpl
jmp
je
aas
out
test
cmp
clc
mov
and
xor
jne
stos
std
and
pop
pop
arpl
fistps
pop
ljmp
sbb
pop
xor
jb
imul
sub
clc
adc
out
inc
loopne
dec
jmp
es
xchg
sub
sub
xchg
mov
xlat
mov
inc
fcomps
movsb
jmp
and
mov
movb
movsb
add
cmc
std
xor
mov
in
pusha
push
and
cmp
orb
notl
dec
cmc
cmpsb
gs
aaa
ljmp
dec
push
mov
push
xchg
mov
out
push
and
mov
mov
mov
fmull
std
dec
aam
fcompl
pop
cmp
outsl
lds
shlb
ret
daa
shl
into
cld
and
loopne
inc
loope
mov
push
das
mov
arpl
cmp
jmp
pop
rclb
in
icebp
mov
lahf
movsb
jmp
lahf
movsb
jmp
cmp
add
fs
outsl
jns
cmpsl
mov
or
es
movsb
mov
dec
notl
push
out
and
pop
dec
mov
pop
xchg
test
cmp
push
mov
adc
mov
push
jb
xchg
ret
lahf
bound
mov
dec
into
fdivl
fs
in
in
std
add
call
dec
stos
jge
push
mov
adc
mov
roll
cmp
loop
cli
and
push
push
loopne
sbb
hlt
daa
add
xor
or
cmovle
mov
mov
aas
mov
sbb
push
sarb
inc
dec
aaa
icebp
xor
aam
or
movsb
mov
fcomps
cld
xor
and
je
and
xor
mov
cmp
iret
push
mov
cmp
call
inc
mov
pusha
cwtl
push
repnz
insb
xchg
ficoml
clc
xchg
movsb
xor
aam
push
call
movsl
test
arpl
call
sub
fwait
mov
adc
push
fadds
xorl
add
xchg
pop
lcall
pop
or
sub
insb
outsb
xchg
inc
je
mov
push
imulb
inc
loope
mov
dec
cmp
sub
or
xor
rcl
sbb
add
jge
sbb
dec
jp
ja
sbb
and
lock
mov
xchg
add
aas
mov
loopne
rorb
mov
cmpsl
sub
dec
mov
daa
inc
or
inc
add
mov
shr
cmc
or
adc
scas
movsb
adcb
cwtl
hlt
leave
sti
cmp
movsb
xor
inc
loop
stos
shll
jge
xor
and
jb
pushf
jmp
xchg
adc
xchg
test
call
cwtl
cmp
pushf
cmpsb
stos
inc
pushf
arpl
mov
xor
jnp
mov
cmp
js
pop
push
movsl
jmp
cmp
scas
sbb
mov
dec
movsb
push
popf
loop
out
cs
mov
cmp
jns
or
jmp
adc
adc
movsb
imul
push
leave
mov
test
popa
adc
movb
jns
mov
mov
in
sbbb
out
int
jle
mov
cmp
stos
add
scas
fists
clc
pop
ret
sbb
mov
push
subl
mov
outsb
and
mov
and
add
or
cltd
lcall
mov
ss
das
pop
int3
ret
mov
sbb
lret
clc
or
outsl
int
nop
pop
sahf
pop
cmp
into
adc
add
pop
arpl
push
jae
ret
inc
jo
fadds
push
cmp
test
stos
push
xor
cmp
mov
sub
xchg
pop
adc
scas
pop
push
pop
inc
repz
icebp
mov
jae
sarl
pushf
insb
in
inc
jmp
cmpsb
push
pop
or
insb
popf
mov
pop
push
cmp
inc
push
and
dec
sbb
in
xor
xchg
xchg
xor
out
sbb
or
and
test
push
xor
push
xchg
or
xor
jge
or
mov
aam
test
scas
cmp
pop
enter
in
nop
rol
dec
dec
and
mov
add
lock
pop
jl
insl
inc
cmova
lea
ljmp
pop
jl
push
push
mov
mov
mov
fs
xchg
or
dec
sub
add
cwtl
xor
mov
loope
nop
and
xorl
sahf
pop
gs
sub
out
pop
icebp
out
xor
sub
or
popf
out
xor
or
jbe
cmpsl
jae
add
push
mov
adc
data16
and
push
iret
push
sar
jmp
notl
push
sub
jnp
push
xchg
nop
lock
inc
jmp
bound
enter
mov
lahf
inc
fcom
xchg
rorl
sub
out
inc
or
adc
aam
cmp
test
loopne
sub
mov
cmc
pop
push
in
adc
mov
les
das
pop
mov
push
js
popa
cld
xor
mov
ret
je
and
or
cmp
clc
lods
push
sbb
hlt
push
scas
mov
sub
push
daa
leave
mov
js
ss
rcrl
jo
push
dec
aad
call
ja
aam
xor
dec
popf
xchg
mov
or
push
cs
jbe
dec
xor
mov
insb
es
dec
fisubrs
int3
repnz
hlt
cltd
and
gs
divl
sub
subb
sbb
adc
inc
mov
jge
pop
and
and
mov
faddl
popa
cmc
cltd
out
adcb
repz
outsb
jne
sbb
mov
dec
inc
adc
call
pop
mov
push
inc
test
mov
pop
adc
push
cli
push
pop
xchg
sbb
pop
cwtl
jp
loop
das
mov
inc
pop
in
add
or
sahf
outsb
ljmp
cmpb
icebp
imul
sti
cltd
icebp
sahf
mov
insb
xchg
dec
jmp
jmp
dec
pop
mov
xor
cmp
sub
xchg
pop
lea
pushf
pop
scas
push
test
clc
pusha
push
or
pop
fildl
sub
sbb
inc
mov
sbb
push
stos
cwtl
sbb
or
outsl
mov
nop
xchg
xchg
inc
jne
xorb
push
cmp
stos
and
jne
nop
xchg
and
xchg
incb
add
pop
add
popf
dec
and
loop
fcomip
xchg
mov
jmp
into
imul
sbb
out
mov
pop
enter
and
inc
rorl
lods
jp
subb
jmp
mov
rorl
or
stc
ds
shrl
ficompl
ljmp
dec
jae
mov
push
je
cld
xchg
mov
xchg
jne
call
adc
testl
cmp
sahf
sub
aad
mov
gs
test
dec
mov
mov
fisubl
lock
das
je
xchg
mov
adc
jg
mov
jl
aam
rcrl
jmp
cmc
mov
xlat
push
sub
sbb
adc
das
ss
cs
push
outsl
xor
xchg
dec
repz
sub
pushl
sub
jae
dec
sub
push
and
ja
iret
inc
out
xchg
sarl
movsl
cmp
jp
cmp
jmp
cli
adc
pop
out
inc
inc
aaa
and
movsl
test
jmp
fbstp
aaa
cmp
and
popf
sub
test
stos
shll
add
int3
dec
mov
sbb
rcrb
addl
push
in
add
mov
push
sahf
aam
cmpsb
aam
cmp
imul
shll
cmp
mov
jmp
xor
enter
dec
jp
and
sub
mov
sub
xlat
and
push
add
xlat
cwtl
add
leave
faddl
aam
addr16
cmp
adc
in
jle
out
movsb
adc
cmp
mov
or
imul
icebp
cmp
mov
push
jl
lock
test
scas
push
bound
mov
push
sub
lcall
xor
icebp
mov
dec
popf
mov
clc
xchg
dec
rorl
and
in
inc
insb
dec
or
cmp
or
and
in
push
and
and
scas
push
or
fistl
and
mov
pop
jge
pop
adc
push
xchg
adc
cld
adc
mov
icebp
pop
jne
stc
and
inc
cwtl
rol
popa
and
rolb
jo
sahf
aaa
sbb
shlb
xor
aas
jb
ds
push
add
cltd
xchg
lret
loopne
lods
pop
orb
mov
jno
pop
and
jbe
push
add
sbb
inc
movsb
in
pusha
es
imul
outsl
ljmp
shufps
ja
js
adc
cmpsb
xchg
xchg
hlt
push
add
out
lock
adc
push
push
jge
dec
into
xor
add
int3
dec
loope
cmp
mov
jp
push
ds
xchg
js
mov
jg
jp
inc
lahf
xor
cmp
mov
jle
hlt
repz
cmpsl
lret
mov
push
sahf
hlt
cwtl
mov
pushf
pop
pop
pushl
sbb
xor
inc
jl
addb
fdiv
in
or
sti
call
cmp
test
stos
jmp
scas
adc
jne
cltd
daa
mov
mov
fstpt
inc
shrb
sbb
ficomps
rclb
data16
adcl
int
stc
push
xchg
je
mov
push
cmp
and
xchg
mov
xor
mov
pop
or
int
mov
lds
cltd
dec
adc
loope
mov
out
cli
out
mov
imul
jbe
hlt
and
and
insb
mov
in
adc
pushf
mov
xor
jb
xchg
pusha
jae
movsl
and
ja
jns
push
sbb
icebp
push
andl
in
xchg
insl
les
imul
popf
loop
cmpsb
loopne
fisubl
stos
sub
imul
or
dec
notl
js
ss
and
mov
repnz
sahf
sbb
pop
push
inc
cmpl
dec
insl
outsb
das
adc
movsb
push
xchg
ret
sbbl
xor
sub
mov
or
fbld
adc
mov
or
jbe
cmc
ljmp
cmp
movsb
mov
adc
mov
inc
or
iret
jle
arpl
push
mov
clc
and
lret
mov
pop
insb
inc
shll
pop
mov
into
hlt
inc
or
addl
mov
les
push
daa
push
sbb
fimull
mov
hlt
add
cmc
cmc
push
sub
jg
xchg
pop
xor
pop
cld
pop
xchg
mov
sbb
push
nop
lods
ret
gs
in
aaa
jae
add
pop
outsl
fadds
mov
daa
lcall
lods
mov
sbb
imul
xor
mov
je
inc
test
repnz
cltd
xor
dec
scas
jecxz
jl
dec
add
mov
jae
cli
inc
sarb
lods
inc
or
popa
push
idivb
pop
mov
cwtl
xorl
cs
push
fs
data16
jo
sti
notl
mov
push
xchg
js
sti
add
adc
push
dec
cmp
out
add
testl
loop
mov
cmp
cs
inc
xor
xchg
sub
orl
jg
sub
sub
dec
sarl
xor
mov
or
adc
and
ss
fmuls
mov
in
js
in
xchg
xor
cltd
std
sbb
add
pop
jg
cld
adc
and
mov
scas
mov
lds
das
jg
sbb
sarl
add
mov
fsubrl
sub
and
dec
inc
push
ss
mov
loop
push
adc
jecxz
cmc
dec
or
in
push
inc
xor
loope
call
mov
mov
mov
ds
addr16
call
sub
cwtl
out
or
mov
jecxz
xor
push
add
aad
repnz
sub
xchg
mov
mov
jns
xor
cmp
rcrb
sbb
mov
pop
mov
adc
or
in
xchg
pushl
xchg
xchg
xchg
iret
mov
mov
ljmp
nop
clc
xchg
cmp
sub
mov
stos
mov
ret
ljmp
loope
jl
sbb
cmp
negb
stos
dec
bound
loopne
dec
dec
cmp
sbbb
in
mov
clc
mulb
je
loope
adc
sub
inc
push
inc
lods
sub
loope
lahf
shlb
and
in
idivb
ret
dec
leave
adc
cmp
mov
cmp
fs
dec
inc
fists
cld
test
lds
mov
cs
inc
mov
enter
hlt
test
je
lahf
iret
and
dec
sarl
dec
and
pop
xchg
clc
mov
pop
movsb
stos
jno
sbb
sbb
call
stos
into
lea
jo
ds
xchg
sbb
sbb
jmp
mull
push
cmp
cmp
dec
repz
cmp
mov
repz
stos
jae
lock
js
js
dec
fimull
jmp
lret
cwtl
aad
inc
nop
xchg
lock
xchg
sbb
xchg
xor
cmp
popa
cmp
adc
rcrl
mov
sub
pop
nop
sbb
xor
lock
arpl
mov
cmp
dec
lods
je
xor
inc
sub
pop
push
hlt
arpl
dec
out
sbb
and
fldt
cmp
movsb
pop
add
cmp
subb
mov
mov
ja
sti
shrb
shlb
inc
pop
ja
jnp
adc
pusha
fisubs
push
dec
shrb
ja
mov
call
std
mov
mov
inc
mov
cld
or
std
jl
out
inc
add
push
xchg
mov
addr16
pop
and
mov
add
pop
nop
lret
lods
ljmp
jge
aaa
adc
push
mov
add
add
subl
pop
imul
mov
cmpsb
xlat
mov
sub
adc
lods
cwtl
movsl
jnp
jns
scas
xor
stc
loope
cli
movb
jo
arpl
inc
mov
clc
cmp
fcoml
fucomip
add
fidivl
cmc
data16
mov
jns
jl
aad
inc
jnp
inc
lahf
leave
in
pushf
jb
dec
mov
ss
xchg
sti
lahf
int
flds
mov
xor
xchg
xor
mov
mov
decl
cmp
push
cltd
icebp
fdivr
pshufw
mov
scas
cmp
jmp
push
adc
add
je
lds
aaa
inc
add
cmc
stc
jmp
jp
enter
jo
xor
mov
test
and
dec
and
inc
cs
jnp
push
filds
inc
nop
lods
cld
mov
sarb
cmp
xchg
push
xchg
ds
sbb
or
out
mov
or
xchg
jno
int3
sbb
or
xchg
inc
add
mov
outsb
mov
push
push
and
xchg
mov
imul
xchg
sbb
dec
sti
xlat
adc
xor
hlt
xchg
xor
adc
lret
jge
call
daa
add
les
leave
jl
dec
mov
lds
addr16
pop
imul
fsub
push
xchg
xor
call
ret
fists
inc
fistl
fisttps
sbb
int
pop
sub
loopne
test
sub
sbb
out
sbb
add
lea
out
sbb
repz
and
dec
pop
ret
inc
sbb
and
pop
cs
mull
addr16
repz
call
cmp
mov
push
jno
hlt
aaa
xor
pop
fdivrp
dec
xchg
pop
mov
popa
out
in
incl
jns
dec
negw
dec
paddsb
jne
pop
outsl
pop
faddl
cmp
insb
sbb
pop
aaa
and
push
pop
mov
cmp
push
sub
les
inc
xor
mov
pop
dec
aad
jl
imul
bound
adc
sub
rorb
push
pop
in
mov
aad
push
push
sub
cld
adc
push
insb
or
or
inc
jae
pop
mov
pop
and
xchg
enter
add
or
jb
jp
scas
xorl
pop
or
test
sub
adc
xor
mov
adc
push
je
scas
cmc
mov
cld
fcoml
pop
jae
leave
adc
mov
cld
cmp
negl
iret
les
pop
cmp
sub
scas
pop
test
movl
inc
push
and
and
mov
xchg
mov
dec
pop
adc
data16
inc
mov
lods
imul
mov
je
imul
xor
sub
sbb
mov
cltd
or
aas
mov
std
cmp
iret
sbb
fists
and
daa
leave
inc
ljmp
jl
ret
mov
loope
bound
jnp
in
ljmp
ret
xchg
and
xor
icebp
insl
fsts
add
aam
push
mov
adc
shlb
push
loopne
decl
popa
sub
fwait
add
dec
xlat
lret
js
or
push
xchg
pop
push
mov
or
jecxz
pavgw
or
inc
hlt
movsl
mov
sbb
push
repz
test
push
stos
push
stos
loopne
sbb
aas
scas
stos
dec
sub
cli
dec
in
cli
and
clc
xchg
xor
jbe
sbbl
dec
mov
dec
mov
cld
push
int3
fdivs
icebp
dec
cld
push
push
pop
pop
mov
push
out
jbe
push
adc
in
pop
xor
push
mov
leave
movsb
mov
rcll
and
xor
loop
adc
adc
pop
pop
pop
sbb
mov
add
jnp
imul
mov
xchg
push
repz
dec
sahf
mov
push
cmp
insl
cmp
inc
clc
ljmp
and
pushf
bts
add
mov
push
add
mov
clc
mov
pop
pop
add
in
cmpsb
testl
fistps
xchg
aaa
xchg
aam
cltd
ds
aaa
mov
push
adcb
in
popa
insl
outsl
push
xchg
xor
lahf
pop
pop
adc
mov
cld
daa
add
jns
roll
clc
insb
adc
push
add
pop
mov
xor
or
adc
push
mov
xor
jmp
mov
fcomps
icebp
or
jnp
cltd
js
loope
xor
xchg
je
mov
adc
insl
adc
rorb
dec
lds
call
loope
add
rcrl
test
cmpsb
pop
mov
das
movsb
cmpsl
or
adcb
bound
sub
ret
add
adc
std
xchg
mov
jns
in
inc
sbb
adc
cltd
xchg
jo
pop
dec
mov
dec
sbb
pop
adc
das
adc
or
pop
mov
dec
sbb
mov
jo
xchg
or
dec
xor
pushf
aad
cmp
in
adc
push
enter
jae
fdivrl
pusha
test
lods
cmp
mov
cmp
imul
pop
je
mov
cmpsb
mov
imul
pop
mov
push
js
into
dec
or
dec
in
insl
stc
lahf
loope
sti
repz
ds
orb
or
mov
fnsave
stc
jns
fists
mov
jl
dec
pop
pop
aam
call
cli
es
adc
and
jo
fidivrl
imul
ljmp
das
add
dec
adc
pop
push
ds
or
add
inc
call
repz
adc
mov
pusha
sub
push
outsb
xor
xor
dec
cmc
sbb
xor
fdivrl
and
ret
mov
ja
iret
dec
jnp
fisttpl
dec
adc
push
jae
loope
les
stos
xchg
or
sti
dec
mov
push
movsb
mov
mov
mov
das
incb
pushf
and
pop
stos
js
inc
dec
xor
dec
pop
cmp
mov
jmp
xor
or
pop
mov
ljmp
pushf
stos
or
je
xor
nop
ret
mov
or
adc
xchg
mov
xchg
jl
dec
jns
cs
icebp
push
push
push
aam
and
jle
push
ret
aam
adc
out
xor
mov
or
mov
test
arpl
insb
sti
mov
scas
and
xchg
movsb
aas
ss
cmp
pop
hlt
and
cltd
jno
dec
push
test
cmp
sub
sbb
adc
xor
scas
lock
mov
add
addb
js
call
sub
fsub
mov
nop
lock
outsl
inc
or
into
lahf
fsubs
cmp
fnsave
xor
sbb
pop
and
in
scas
cmp
mov
and
mov
jb
das
call
push
xchg
jle
cmp
mov
hlt
sub
sbb
jno
fneni(8087
mov
inc
add
mov
and
shrl
fsubrs
dec
push
fadds
inc
xchg
mov
pop
sahf
mov
push
fisubl
lock
xor
stos
bound
rcll
or
inc
clc
inc
jbe
pop
pop
ds
mov
dec
jmp
dec
adc
xchg
in
popl
gs
xor
mov
movsl
mov
mov
mov
add
jp
mov
sbb
sub
lds
loope
icebp
add
popf
push
enter
ret
mov
adc
adc
mov
bound
jmp
fadd
pop
and
iret
cli
xor
inc
push
insl
popf
xor
mov
push
addr16
and
mov
jmp
ja
jecxz
int
mov
jae
cmp
jl
es
dec
xor
jge
and
jmp
sbb
push
pop
out
pop
jmp
xchg
sbb
out
push
orb
jp
test
outsb
xchg
in
or
xor
jns
and
mov
mov
js
fistps
out
or
xor
sbb
lahf
push
aam
jnp
rorl
fisttpl
mov
and
add
lock
rcrb
mov
add
add
cli
leave
push
popa
in
push
or
mov
and
pusha
mov
in
cmp
mov
std
pop
or
mov
popf
add
outsb
mov
jae
fbld
adc
cmp
inc
sub
subb
xchg
leave
loope
lahf
rolb
dec
test
into
enter
mov
ret
and
push
add
in
inc
adc
xchg
jnp
mov
ja
dec
pop
je
std
mov
inc
divl
dec
incl
stos
fadd
add
and
cltd
test
lahf
sbb
out
jne
mov
loope
mov
les
dec
sub
ficomps
data16
data16
mov
stos
xor
mov
mov
pop
sub
ret
cltd
mov
addr16
arpl
mov
dec
movsb
cmpsl
out
jno
fistps
mov
or
cld
cmp
leave
xchg
shl
lock
pusha
mov
xchg
pushf
xchg
les
ss
subb
cmpsb
arpl
bound
arpl
out
jp
pop
cmp
mov
jmp
in
sbb
pop
sub
pushf
mov
sbbb
xor
cmpsb
clc
dec
jbe
ja
dec
inc
in
sbbb
jae
cmp
paddsw
mov
out
push
popa
and
or
xor
push
lea
inc
insb
dec
add
nop
punpckhwd
and
cmp
and
cmp
jb
jmp
cwtl
sub
iret
inc
hlt
or
ljmp
enter
outsl
cmp
stc
rcrb
mov
push
sbb
hlt
and
inc
stos
cmp
mov
fisttps
lret
dec
sarb
adc
add
jl
add
dec
shlb
cmp
cmp
loope
daa
mov
pop
dec
and
add
mov
pop
cmp
mov
cmc
inc
mov
inc
sbb
mov
adc
out
mov
out
sbb
rcll
sarb
xor
outsb
sahf
mov
popa
sub
dec
inc
das
aad
inc
dec
pop
je
and
adc
cwtl
cmp
mov
push
daa
loope
jmp
lods
mov
lcall
push
inc
push
and
cmp
mov
hlt
xor
xor
jmp
cltd
movsl
les
or
lcall
imul
push
leave
data16
push
cld
in
and
mov
inc
aas
mov
add
push
repnz
push
hlt
push
frstor
pop
pop
ficoms
in
cmpsl
dec
fstl
pop
pop
cmpsb
pop
nop
dec
lods
sub
sub
and
int3
aaa
insl
inc
xchg
lods
and
fidivs
insb
sbb
dec
sbb
je
push
andb
sbb
inc
push
jl
pmulhuw
mov
xor
mov
addr16
mov
push
add
xor
cld
xor
stos
sbb
add
fsubrl
ficoml
loopne
sarb
and
neg
das
fwait
jbe
repz
xchg
xchg
dec
lock
or
loop
movsl
popf
test
movsl
mov
pusha
cmp
cmp
icebp
cmc
test
or
fs
stc
and
fsub
mov
shrb
roll
inc
inc
mov
in
and
fsubs
mov
jo
sbbb
lret
dec
pop
cmp
insl
pop
pop
js
cmp
int3
aaa
xchg
cmc
cmpsb
int3
les
pop
mov
add
pop
sub
cmp
fwait
js
fnstsw
repz
pop
or
cwtl
dec
xlat
jb
cmp
mov
dec
repz
mov
adc
jno
sahf
mov
dec
ss
leave
test
xor
movsl
or
fs
roll
shlb
gs
add
jp
repnz
jns
jg
sub
push
int3
dec
cmp
mov
ret
addb
mov
sbb
pop
out
xor
adc
sti
add
call
jb
push
sub
imul
jl
ret
dec
cmp
jne
add
vcvttss2usi
shl
pop
lods
mov
jl
iret
mov
jl
std
adc
sub
jnp
test
dec
lahf
lock
sub
loopne
jecxz
jle
sub
and
mov
pop
jmp
gs
ss
fcomps
and
out
lea
or
lahf
push
gs
inc
incb
gs
aas
and
add
clc
mov
inc
sahf
and
insl
shrl
dec
dec
pop
popf
sub
mov
mov
inc
sub
jle
mov
sbb
out
mov
insb
in
jno
pushf
clc
mov
les
push
into
add
and
incl
jge
xor
fiadds
cmpb
pop
inc
pop
daa
inc
dec
inc
adc
push
fs
rcrl
add
pop
dec
push
mov
fwait
aas
xor
mov
out
mov
mov
or
xchg
les
mov
bound
js
add
movsb
sbb
xor
xor
mov
shrb
cmp
sbb
jmp
pop
ss
pop
cmp
xchg
or
cli
emms
repnz
aam
in
mov
mov
pop
mov
in
or
pop
int
or
out
fnstsw
fldcw
aad
js
repz
pop
dec
push
pusha
jns
or
dec
in
lods
pushf
jnp
pop
xor
pop
jl
jo
in
fldt
cmp
fs
mov
mov
pop
pop
ds
mov
sbb
test
loop
pop
lea
ja
push
in
jne
es
fldt
sbb
pusha
and
add
xor
adc
aad
xor
or
xlat
ss
xor
and
mov
push
ffree
stos
sbb
jb
mov
xchg
mov
test
leave
outsb
dec
loop
sti
aad
sti
cmp
adcb
or
js
adc
sbb
lods
jg
sub
adc
sarb
idiv
push
flds
loopne
jae
lock
loopne
jmp
pop
inc
sti
jl
leave
shll
ds
adc
in
clc
fadds
mov
outsl
pop
in
adc
pop
and
and
subl
mov
add
ljmp
shlb
fs
stos
xor
enter
sub
cmp
pop
inc
lcall
scas
jmp
nop
stos
and
rcll
push
mov
dec
loop
inc
sub
xchg
inc
inc
bound
cmc
add
js
push
xchg
adc
jo
cmp
subb
pop
adc
and
sbb
lcall
adc
call
into
pop
sbb
das
lahf
fadds
lods
cmp
inc
or
insl
lods
jns
fnsave
test
mov
jl
sahf
adc
xchg
sti
xor
xor
push
js
inc
inc
mov
notl
xchg
hlt
and
imull
mov
loopne
or
xchg
call
aaa
and
js
jg
sub
std
mov
xor
mov
and
pop
sbb
inc
or
jp
pop
std
cmp
mov
jecxz
xchg
push
subb
scas
adc
clc
jbe
jmp
inc
testb
sahf
cmp
and
lods
sub
aas
mov
mov
test
xlat
xchg
jmp
out
imul
insb
and
incl
sub
sub
sti
sbb
sti
cmpsl
mov
pop
fcoms
adc
cs
outsb
push
xlat
fwait
or
insb
scas
jge
bound
jg
dec
push
sub
movsl
or
sti
aaa
mov
mov
mov
jp
push
cmp
loope
es
cmp
js
mov
xor
push
sarb
add
not
xchg
dec
adc
xchg
jge
jo
lcall
cltd
xor
aaa
unpckhps
jne
xlat
daa
in
sub
inc
ljmp
loopne
sti
or
rol
imul
popf
mov
mov
xchg
dec
push
cmp
cmp
lahf
jns
incl
call
cmp
or
mov
mov
lods
fwait
pop
add
xchg
scas
sbb
mov
mov
push
mov
dec
aaa
shrl
sbb
dec
mov
mov
cmp
cmp
cltd
sub
mov
pop
xchg
inc
and
fldt
xlat
xor
cld
insl
cmc
arpl
cmc
xchg
pusha
ret
stos
sbb
mov
mov
rcl
test
in
jo
jnp
or
and
or
cmp
mov
movsb
dec
lods
fistps
into
jl
sbb
and
loopne
sar
add
or
mov
add
arpl
dec
aaa
or
cmp
and
xchg
pop
or
adc
shl
and
mov
sub
xorl
in
xchg
adc
mov
lea
cmp
jp
mov
test
stos
dec
push
and
nop
push
ljmp
clc
inc
jae
xchg
aam
btc
sbb
daa
andb
mov
loope
imul
popf
cmp
jae
js
jmp
xchg
cmp
int
push
cwtl
fdivrs
jmp
mov
sbb
int
sbb
out
fnsave
lock
jp
hlt
adc
xlat
pusha
psubusb
scas
sub
cmpsl
mov
jmp
jno
mov
jbe
cmp
sbb
std
push
fs
das
pushf
insb
ja
cmp
push
xchg
push
outsb
pop
pop
dec
cmpsb
push
xor
enter
in
mov
shll
and
ljmp
clc
adc
xor
cmp
icebp
mov
fbld
and
pop
je
or
push
lods
pushf
pop
jae
clc
push
movsb
movsl
and
cmp
cmp
inc
xchg
adc
push
sbb
push
movsb
cwtl
ja
shlb
ret
mov
and
xchg
inc
hlt
xor
adc
and
mov
mov
lret
jae
xchg
and
rcll
imull
in
inc
jo
jle
ret
sub
sbb
shlb
inc
pop
pop
subb
pop
lret
push
mov
movzwl
lods
cmp
test
rolb
in
and
lcall
dec
sbb
push
cmp
hlt
lahf
xor
js
loope
inc
add
sub
shlb
cli
xlat
sub
adcl
das
and
xchg
jl
in
mov
repnz
cli
daa
lcall
test
pop
jmp
add
mov
mov
cmpsb
lahf
sub
mov
mov
and
mov
pop
nop
cmpsl
mov
pop
inc
xor
xchg
xor
sahf
out
adc
jmp
push
std
bound
inc
xchg
cmp
cmp
xchg
add
mov
mov
jbe
mov
sbb
jp
mov
rolb
lods
mov
fsubl
inc
mov
mov
dec
stos
pop
int3
pop
xchg
or
imul
push
aas
push
xor
adc
cmp
adc
insl
jle
ljmp
xchg
idivl
aaa
sbb
dec
aas
loopne
out
push
jg
mov
add
fiaddl
loope
cmc
testl
pop
jno
fistl
dec
sub
mov
mov
push
mov
cmp
mov
add
push
sub
or
sub
push
rcr
inc
ja
out
add
adc
ja
loopne
jg
outsb
add
mov
cmp
or
push
sub
and
js
adc
fs
addr16
sub
push
loopne
jmp
cwtl
lods
nop
push
ds
add
clc
pop
sub
aas
iret
in
mov
sahf
outsl
xor
xor
pop
xor
mov
adc
xchg
fdivl
and
xorb
push
frstor
dec
setbe
sub
adc
mov
and
sahf
fsts
sub
mov
or
lahf
adc
mov
mov
test
insl
ret
add
sub
out
and
fldenv
fsubrl
jo
push
outsl
leave
sub
push
push
add
dec
lahf
loopne
out
aas
and
cmpsl
daa
mov
inc
or
lds
mov
testb
cmp
push
mov
mov
fldl
pop
inc
adc
and
or
xor
jg
adc
mov
sub
adc
add
fcmovnu
lcall
inc
fdivs
xchg
sti
xchg
in
xchg
or
cs
out
and
xor
mov
add
sbb
loope
popf
outsl
cld
fimuls
dec
xor
enter
aam
adc
in
negl
cltd
lahf
dec
and
add
fwait
push
or
sub
adc
pop
inc
pop
adc
and
mov
mov
pushf
loopne
inc
push
fcompl
and
out
jle
xor
movsb
cs
dec
jo
push
pop
movsb
cmp
add
mov
inc
or
out
mov
xor
push
enter
std
push
outsl
sub
push
pop
cmpsl
ja
cmc
subl
or
xor
aam
rolb
or
cvtps2pi
dec
and
and
dec
int3
jmp
adc
fwait
inc
push
adc
mov
outsb
iret
xchg
cmpsb
mov
add
mov
sbb
adc
fsubrl
popa
adc
aad
jmp
dec
cmpsl
push
je
insl
aas
dec
cmp
dec
cmp
insl
pop
arpl
pop
xor
movsb
add
nop
addr16
test
sbb
popf
iret
mov
sbbb
dec
ror
pop
pushf
xchg
or
inc
out
lahf
in
sbb
enter
adc
jne
int3
mov
lahf
inc
fwait
dec
int
bound
xor
jnp
pop
cwtl
cmp
sbb
in
add
mov
out
divl
lret
mov
in
rorb
shrb
out
dec
push
sub
mov
push
cmp
push
cmp
xchg
inc
add
push
mov
add
add
push
jle
mov
pop
jns
ret
sub
jl
and
push
pushf
pop
scas
mov
inc
push
mov
scas
addr16
sub
aas
jne
aaa
push
pop
sub
cwtl
ret
and
xor
sarb
sbb
push
orb
cmp
insl
nop
clc
lea
inc
insl
mov
push
decl
pop
push
cld
add
test
lock
xchg
inc
loop
push
test
dec
fstp
movb
or
lcall
jns
push
jle
les
pop
cmp
jp
xchg
test
les
iret
cmp
rcrb
mov
or
xlat
jne
mov
or
lea
mov
and
mov
or
sbb
jge
mov
call
int3
adc
push
pop
jmp
sub
mov
subb
js
jno
mov
pop
mov
or
mov
push
outsl
push
fidivrl
enter
imul
pusha
loopne
fs
pop
gs
stos
movsb
outsl
adc
pusha
lret
jg
xchg
inc
dec
and
mov
aas
aas
jne
repnz
xor
fs
loopne
mov
cmp
adcb
and
aas
and
xchg
lret
imul
pop
and
dec
push
sbb
clc
adc
sub
dec
ja
pusha
iret
pop
fwait
scas
shl
das
inc
mov
popa
xor
inc
mov
ds
cmc
add
popa
iret
mov
mov
movsl
push
int3
movsb
sbb
xchg
movsl
out
mov
lock
je
pop
pop
icebp
inc
fisttpll
adc
add
mov
imul
xchg
lahf
in
mov
ret
mov
out
mov
test
mov
and
mov
jmp
pushf
xor
bound
ja
sub
orl
push
clc
mov
fwait
mov
sub
jns
mov
mov
icebp
push
or
xor
popf
jecxz
xor
test
aas
icebp
subl
les
inc
push
repnz
xchg
lods
pop
sub
aam
cwtl
jmp
pop
sub
xchg
pop
sti
mov
ja
out
sub
lods
test
je
clc
mov
adc
lock
popf
outsl
repnz
inc
dec
dec
or
fwait
adc
fnstcw
mov
mov
push
or
push
dec
lret
mov
mov
xchg
mov
mov
cmc
popf
push
fisubrl
pushf
fldenv
repnz
int3
in
mov
sub
cltd
inc
xor
mov
sbb
movsl
inc
in
xchg
outsb
or
pop
inc
mov
cli
mov
inc
stos
push
pop
ret
mov
orl
xchg
jl
adc
mov
jne
es
clc
into
or
cwtl
psrad
outsl
ss
clc
add
in
jo
int
or
pop
mov
movsb
fadds
push
scas
out
and
popf
push
mov
jne
push
adc
add
xchg
pop
aam
mov
pop
mov
fsubrs
out
xchg
imulb
frstor
ret
bound
mov
pop
mov
fs
outsb
pusha
enter
cmp
nop
pop
loopne
add
paddusw
pop
iret
dec
pop
je
cmp
mov
pop
push
jl
push
xor
mov
push
fisubl
aas
inc
test
mov
aas
shrb
lds
and
outsb
jbe
pop
imul
inc
movsb
sub
out
inc
lret
push
cmp
push
pop
mov
movsl
daa
fwait
push
jns
inc
mov
arpl
pop
mov
and
rolb
jno
jge
xor
aaa
je
testb
sbb
add
jl
inc
in
and
insb
jge
aam
xchg
add
pop
sbb
cltd
push
iret
jl
or
and
dec
dec
popa
je
clc
daa
xor
xor
pop
shr
xor
mov
push
jae
notb
dec
sbb
lock
nop
mov
mov
push
out
fldt
fsts
and
and
lahf
push
push
dec
cmp
and
js
pusha
inc
pop
sub
testl
imul
push
fisttpll
popa
mov
dec
sub
push
or
fists
repz
popf
xchg
fxch
out
or
mov
lcall
xor
or
les
add
inc
stc
cmc
out
test
fwait
in
cmp
into
call
jo
push
xchg
add
dec
scas
sbb
scas
sarl
ljmp
dec
sahf
clc
sub
or
jle
pop
jle
movsb
push
cmp
iret
loop
jno
jge
xchg
xchg
push
or
sbb
push
and
cmp
out
addb
jbe
sbb
movsb
mov
sub
stos
mov
ja
and
movsl
bound
and
sub
ljmp
add
adc
nop
iret
mov
cwtl
push
pop
mov
xor
jne
cld
outsl
inc
cmp
xorl
mov
lds
inc
sarb
stc
inc
aas
addr16
lods
pop
fisttpll
data16
rclb
cmp
mov
fsubrs
fcompp
mov
mov
xchg
cmp
pop
pop
popa
pop
and
into
insl
lret
cmp
ljmp
imull
cwtl
sarl
fnsave
ss
das
xchg
bound
or
shll
cmp
or
pop
inc
pop
sbbb
sub
pop
adcb
or
inc
pop
push
pop
xor
aas
inc
mov
mov
dec
inc
pminsw
clc
pop
cmp
pop
lods
aaa
je
sub
ss
and
sbb
daa
mov
add
sbb
ss
cmp
xchg
mov
sahf
pop
pop
cmp
repnz
sub
mov
ret
mov
cld
and
or
enter
lcall
and
fstps
lahf
testb
in
gs
fidivl
fucomip
negl
or
popf
sahf
lret
jl
jecxz
arpl
loope
sub
negl
scas
mov
fstps
and
cltd
cmpsb
insb
xchg
shlb
inc
cmpsl
jo
test
pusha
sub
xor
mov
dec
outsb
push
das
or
mov
push
sub
sbb
xchg
jle
sub
dec
and
xchg
stc
fstps
scas
push
stc
sbb
loopne
pushf
jle
push
nop
inc
cmp
pop
fwait
jmp
les
sub
mov
cmp
inc
push
cmp
arpl
adc
repnz
inc
adc
sahf
push
in
sarl
xchg
lahf
cmc
into
dec
mov
mov
dec
push
stos
lahf
cs
xor
lret
cmc
shlb
sti
pushf
push
mov
and
paddd
fisttps
daa
or
cmp
pusha
xor
or
in
pop
stos
or
ss
sub
add
hlt
and
mov
push
loopne
jae
comiss
in
push
aas
rep
xchg
rcll
jge
das
repnz
mov
test
fs
sbb
inc
pop
lea
pop
jbe
andb
dec
pusha
decl
outsl
sbb
sub
das
call
mov
xchg
adc
ficoms
fwait
pop
dec
mov
jmp
cmp
cld
iret
fnstenv
dec
jnp
xchg
mov
inc
inc
pop
shlb
push
sub
push
andb
jo
aaa
push
xchg
popa
sbb
out
add
sub
mov
bound
call
push
icebp
pop
cmp
or
mov
push
xor
mov
fldl
or
fsubl
sbb
cwtl
mov
pop
xor
mov
aaa
cmpb
and
or
cmp
dec
inc
cmp
flds
aas
pop
jecxz
cs
inc
sub
add
into
xor
and
and
dec
jbe
mov
and
and
repz
sbb
sti
push
push
pusha
add
xchg
ss
fs
in
pop
stc
jbe
lock
aad
cmp
adc
cmc
fsubrp
cwtl
cmc
leave
mov
insl
or
mov
lea
sub
or
nop
xchg
mov
aaa
and
lcall
and
and
add
cmp
mov
and
jb
xchg
push
and
or
pop
and
sub
insb
popa
or
loop
mov
adc
jmp
inc
sub
cli
mov
sub
xchg
gs
mov
xor
les
icebp
rorb
es
mov
sub
adc
pop
add
and
popa
bound
andps
andb
push
fistl
dec
mov
sar
movsl
mov
outsl
and
ljmp
mov
in
aas
rorl
cmpsl
scas
xchg
dec
rcrb
shll
out
repnz
pop
xchg
mov
lock
int3
xchg
in
sarl
fmuls
lea
xor
les
psadbw
push
mull
mov
ja
insb
and
push
or
adc
aad
mov
mov
fisubl
pushw
cmp
pop
pop
aaa
and
call
scas
das
sarl
mov
add
push
and
inc
push
cmp
inc
mov
inc
ss
scas
push
je
dec
lahf
lret
les
adc
xchg
push
jb
add
and
or
pop
and
sbb
clc
push
sarb
loope
jno
jecxz
es
sbb
dec
cwtl
jo
dec
mov
mov
leave
fdivrs
in
frstor
sti
mov
mov
pop
mov
shl
add
leave
fs
nop
xor
popa
in
mov
mov
adc
std
movsb
psubw
lea
xchg
xor
and
popa
xor
add
je
andl
push
stos
pop
jge
adc
mul
xchg
pop
and
adc
les
mov
adc
pop
pusha
xchg
fldcw
xor
add
fnsave
jne
movsl
mov
icebp
ret
xlat
mov
mov
xchg
push
pop
xorb
pop
mov
test
mov
or
inc
push
mov
mov
enter
mov
and
stos
inc
pop
cmp
mov
fstl
cmp
adcb
sbb
push
pop
jnp
fs
xchg
mov
xor
inc
sbb
jne
in
pop
popa
adc
dec
insl
loop
xor
dec
movsl
sti
push
loope
xchg
pop
push
in
sub
rcl
call
or
scas
push
pop
sbb
jns
push
inc
jp
add
jne
aam
out
inc
mov
int3
sbb
ja
add
std
mov
ljmp
insb
jo
scas
ret
xor
push
add
cmpsl
jmp
cmc
les
clc
scas
cwtl
pop
mov
sub
sub
cmc
cmp
jmp
adc
cmpsb
or
xchg
xor
sbb
cmp
inc
lock
jns
xor
leave
mov
mov
mov
or
or
adc
or
pop
jle
pop
adc
cli
fwait
pop
aaa
xor
and
jne
push
clc
inc
or
sub
push
sub
fisubs
and
js
call
add
dec
mov
add
insl
out
fs
sti
pop
movsl
fs
pop
or
xchg
shlb
jo
cmpsb
and
xor
fsubs
adc
nop
inc
into
imul
into
adc
sub
push
pop
mov
imul
and
inc
sbb
mov
xchg
mov
cmc
xor
shll
sbb
xchg
clc
sub
test
repz
sub
sbbl
and
rcrb
dec
lock
adc
aas
mov
push
pushf
xor
fs
popf
jne
sti
and
push
ds
fs
movsl
fs
adc
jle
add
ja
sbb
mov
test
dec
dec
js
repnz
stc
sub
add
xchg
and
les
out
mov
rcr
cltd
pop
dec
jg
orl
lock
dec
sbb
push
cs
shlb
sti
popf
mov
push
pop
fnsave
ljmp
cmp
pop
lcall
xor
leave
mov
inc
mov
mov
aas
mov
mov
lret
and
dec
rolb
jns
pop
xchg
ret
aas
dec
mov
or
mov
sti
pop
stos
inc
sbb
dec
movsb
mov
fstp
popf
movsl
and
sahf
test
std
dec
fs
mov
dec
mov
jge
xchg
mov
insb
jbe
add
inc
fwait
mov
push
test
adc
mov
mov
mov
sbb
das
pop
les
lods
push
adc
inc
fstps
or
pop
inc
or
ljmp
test
lds
mov
pusha
xor
ja
jne
pop
insl
js
mov
gs
cli
scas
orb
or
inc
jns
test
jae
es
dec
testb
leave
insb
jbe
push
fisubs
out
ret
or
jnp
nopl
jo
xchg
pop
sbb
dec
pop
outsb
sbb
mov
or
js
sub
mov
mov
mov
das
outsl
inc
jbe
add
inc
add
jne
push
lret
sti
scas
mov
push
add
fs
push
rorb
jb
fdivrl
add
sbb
push
fmuls
jns
loopne
cmp
repnz
xchg
mov
jb
pop
addr16
pop
out
inc
out
add
je
and
add
push
mov
and
mov
das
push
inc
out
cmpsl
sub
jl
in
mov
stc
xor
xlat
fisubrl
and
add
mov
js
je
mov
mov
xchg
xor
mov
xor
push
fwait
call
arpl
loop
xor
push
jp
xor
aad
out
lods
bound
fcmovnbe
cmp
in
add
lods
dec
pop
push
pop
gs
sti
cmp
jle
jne
or
sbb
adcl
lock
fwait
repnz
add
incl
sahf
xchg
les
aas
pop
ret
dec
and
lahf
adc
call
adcb
fs
fwait
std
lods
fucomp
cmp
jo
mov
iret
in
stc
xchg
inc
and
hlt
dec
and
repz
movsb
sbb
cmp
das
xor
gs
cmp
sub
sti
pop
pop
pop
sub
and
out
xchg
pop
clc
daa
fwait
and
xchg
jl,pt
inc
pop
lret
pop
clc
adc
sarb
fsubrs
dec
std
movsb
es
sub
sbb
and
adc
and
adc
arpl
gs
decl
and
add
dec
lcall
cmp
js
xchg
adc
dec
pop
icebp
roll
stc
pop
ljmp
xor
push
orl
adc
and
cld
mov
cld
push
jnp
mov
scas
jp
cmp
cmp
add
lods
pop
lods
xchg
std
dec
movsl
adc
cmp
mov
inc
inc
test
fcompl
shlb
add
mov
ss
mov
scas
pop
pop
inc
cld
xchg
shll
jmp
dec
xor
icebp
rcrl
int3
inc
mov
mov
cmc
lret
scas
add
popf
pop
cmp
sbb
mov
xor
xchg
jb
pop
sahf
bound
jns
in
les
les
sbb
xor
fs
push
adc
daa
scas
and
mov
pop
cmp
and
popf
sub
jge
cmp
das
stc
icebp
jmp
loope
sbb
or
add
notb
enter
pusha
gs
loopne
adc
sarb
sti
jecxz
push
arpl
dec
pop
mov
inc
inc
add
sbb
adc
jmp
lods
push
shll
mov
mov
shlb
push
js
dec
xchg
test
les
add
xor
push
or
xchg
pop
dec
pop
push
test
hlt
nop
jb
mov
pushf
cmc
push
mov
cmp
lahf
push
into
sub
sub
push
jb
lahf
mov
pop
orl
shrl
std
and
or
nop
cmc
pop
or
xlat
add
pop
add
sti
imul
jb
xchg
adc
jecxz
maskmovq
negl
or
cs
icebp
cmp
insl
or
pop
add
jbe
insl
sbb
je
push
jb,pt
shl
popf
adc
jae
aam
pop
pop
std
js
add
adc
fs
push
pusha
int3
cmc
nop
jns
or
xchg
jmp
push
es
stos
sbbb
mov
lds
fists
mov
in
jno
and
mov
add
pusha
jnp
mov
pusha
mov
scas
push
stc
jno
or
pop
into
inc
xchg
dec
ds
dec
mov
cmp
xchg
push
dec
mov
scas
pushf
aaa
cli
ret
push
mov
lret
movsb
dec
sbb
jns
ret
mov
imul
outsl
and
lahf
stos
sub
ljmp
addr16
cld
outsb
repz
inc
push
aam
inc
aaa
hlt
call
cmc
jae
inc
cmpb
add
out
adc
inc
and
add
pop
hlt
ds
xchg
aas
pop
cld
sbb
push
xor
addr16
jge
rclb
fimuls
dec
push
cmpsb
mov
inc
rorl
dec
gs
mov
out
or
pop
push
pop
dec
fwait
adc
xchg
rol
and
fdivrs
pop
rolb
aad
gs
outsl
pop
mov
rolb
sbb
sub
cmc
in
adc
mov
sbb
jecxz
jae
js
push
outsl
incb
mov
mov
xor
fwait
jl
clc
jecxz
sub
dec
pusha
push
pop
jbe
sub
test
lods
xchg
fcoms
fldcw
push
mov
pop
push
das
pushf
sub
and
push
je
inc
mov
mulb
mov
mov
dec
clc
in
mov
and
add
cmp
pop
ss
shlb
add
adc
in
push
mov
push
sbb
stos
lods
push
push
mov
int
pop
sbb
pushf
ja
in
sahf
and
pop
xchg
das
xor
adc
pusha
clc
dec
insb
out
mov
mov
aas
add
pop
sbb
push
aas
pop
nop
inc
push
adc
adc
inc
add
pusha
jb
mov
fwait
clc
ret
or
lock
mov
das
adc
gs
int3
out
mov
cwtl
xchg
sbb
pop
push
add
sub
cmp
xchg
xchg
cmp
xchg
and
mov
in
popa
cmp
push
xchg
xor
push
aam
and
jmp
sahf
adc
adc
sarl
sub
or
jns
cltd
push
jbe
and
dec
sub
hlt
pop
loopne
push
fwait
sbb
bound
imul
sbb
xlat
mov
or
cmp
sub
mov
add
push
dec
lret
cld
mov
cmp
xchg
sub
daa
pop
xabort
pop
mov
cmp
aam
adc
rolb
inc
in
xchg
hlt
es
lret
xchg
pop
pop
fnstcw
or
xchg
sub
and
mov
or
pop
fbld
outsl
pop
sub
mov
call
push
mov
or
mov
pusha
jno
inc
jp
mov
pop
pop
pusha
dec
xor
xor
shlb
inc
sub
mov
sub
pop
push
push
cli
outsl
sti
ds
add
mov
sub
xlat
mov
pushf
lret
je
pop
fidivrs
pushf
in
cld
iret
pop
push
icebp
test
cwtl
xchg
jecxz
sbb
jns
xchg
fidivs
les
jecxz
push
lret
cmc
loope
and
dec
cwtl
sbb
ss
push
mov
ficompl
mov
ja
xchg
out
mov
loop
inc
loopne
icebp
adc
jnp
dec
push
pop
lods
push
cs
movsb
popa
push
icebp
mov
and
xchg
cmp
dec
mov
inc
cmp
adcb
push
inc
sub
popa
stc
ss
add
adc
dec
or
mov
push
imul
and
aaa
cmp
dec
mov
xchg
fsts
xchg
cli
scas
imul
xchg
adc
arpl
pop
sbb
dec
dec
ss
aad
and
add
test
pop
jo
cs
fldl
pop
mov
pusha
and
insb
fidivs
stc
add
inc
sub
cmp
xor
loopne
sbb
xor
cltd
les
cmp
cmp
cwtl
adc
add
popa
js
xor
fsubp
xchg
js
mov
xor
movsl
mov
loope
movsb
sub
push
pop
jle
xchg
add
test
or
movsb
jmp
push
sub
dec
rolb
in
add
aaa
inc
push
mov
sub
push
push
fwait
dec
sbb
fdiv
and
xor
dec
dec
xchg
pop
out
imul
mov
lret
loop
dec
sub
mov
jns
add
andb
push
xor
shlb
or
aam
push
mov
sbb
push
push
test
cmc
mov
xor
sbb
cmpb
shl
ja
adc
pushf
fwait
mov
test
cmpsb
enter
int
imul
mov
and
hlt
adc
test
pop
scas
movsb
pop
and
fsubs
add
sub
cmp
stos
add
adc
xchg
xchg
xchg
testl
iret
adcl
nop
push
imul
inc
sub
ret
negl
cmp
out
or
adc
xor
sbb
cmpsb
sbb
xor
add
mov
das
pop
out
psraw
sbbl
push
jp
gs
cmp
ret
adc
stos
pop
ss
lock
imul
das
cld
fstl
jbe
pop
fsubrp
xchg
shll
popf
mov
loop
xor
sbb
inc
fnsave
cmc
repz
mov
into
loop
pop
clc
mov
cmp
pop
stc
imul
test
shl
mov
xchg
adc
cmp
je
push
in
xchg
fimull
loope
dec
dec
test
add
and
bnd
xchg
pop
test
and
pop
pop
push
pop
hlt
iret
mov
daa
test
lcall
scas
mov
int
in
mov
xchg
pop
jno
je
in
sbb
push
push
lahf
sub
clc
mov
dec
xchg
pop
test
adc
sahf
mov
rclb
cmp
sub
adc
fs
popf
les
xchg
dec
repz
pusha
pop
adc
inc
nop
in
mov
dec
or
sbb
fsubs
pop
xchg
dec
mov
jne
dec
and
jle
pop
addb
and
cwtl
mov
and
outsl
push
xor
mov
add
push
push
ret
stc
and
pop
cmp
scas
cwtl
sbb
pushf
xor
push
fwait
js
pop
jl
ror
pusha
xor
popa
cmp
andb
cld
jno
dec
sarb
lcall
sbb
push
fisubrl
shlb
adc
fidivs
addr16
ret
and
adc
cmpl
shl
or
xchg
pop
xorb
push
cmp
push
bound
test
adc
xorb
xlat
and
nop
cmp
into
sti
inc
ljmp
fs
jmp
lods
aad
mov
xor
jne
xlat
leave
xlat
sub
outsb
sbb
pop
and
int
push
fisttpll
imul
sub
leave
jl
leavew
iret
sub
js
and
push
pop
sub
in
xchg
negb
dec
addb
cwtl
sub
xor
call
mov
cmp
or
xor
push
add
stos
out
sub
inc
je
icebp
lods
cmp
jmp
inc
xchg
cs
aas
clc
out
dec
repnz
cld
adc
pop
or
xchg
push
rcll
dec
xchg
aad
nop
xor
repnz
xchg
mov
push
mov
add
add
in
adc
push
shlb
sub
xchg
out
mov
mov
mov
and
jg
push
pop
mov
cmp
cmc
icebp
in
cmp
xor
push
popf
jmp
popa
cmp
fistpll
daa
adc
aaa
insl
shlb
rclb
xor
add
inc
sub
jg
inc
sub
mov
xor
xchg
xchg
out
inc
shrl
mov
jno
sbb
in
mov
call
push
and
ror
lahf
add
jae
add
xchg
inc
mov
lods
fisttpll
jg
divl
pushf
out
jbe
and
cmp
sarb
imul
lock
pop
dec
shll
push
mov
push
cs
jecxz
jbe
dec
inc
movsl
jno
cmp
pop
inc
inc
cmp
mov
inc
xchg
rclb
dec
dec
les
loop
cld
mov
sbb
loop
fs
xchg
loopne
xchg
xor
dec
add
lock
sbb
mov
lods
cmp
mov
mov
fldcw
cld
cmpsb
mov
out
cmp
xchg
dec
scas
adc
js
mov
das
sarl
stos
daa
sub
jl
mov
daa
loopne
or
sbb
repz
pop
lcall
inc
sbb
push
mov
ss
mov
sub
je
and
dec
dec
or
mov
push
or
lcall
jb
cli
add
mov
stos
xor
push
insl
jb
dec
std
mov
sbb
push
push
cmp
cmp
xchg
sbb
inc
insb
arpl
fisttpll
iret
repz
and
pop
jnp
push
cmpsb
pusha
imul
and
cwtl
stos
fistpl
loope
or
push
jmp
jp
rclb
dec
mov
xor
or
cmpb
sti
xchg
push
xor
clc
inc
push
pushf
mov
das
fistps
outsl
or
pop
loopne
lahf
dec
dec
dec
sub
or
jle
sti
cs
movsb
es
mov
pop
cltd
pop
add
xchg
mov
sbbb
or
ss
push
aas
outsl
in
pop
push
inc
cmp
imul
add
mov
jae
mov
sbb
in
scas
insb
dec
addr16
cmp
sbb
inc
leave
adc
fldcw
mov
pop
pop
mov
or
and
mov
arpl
dec
adc
mov
in
cmc
inc
clc
movsb
jg
inc
in
inc
push
xadd
mov
push
dec
adc
test
call
cmp
mov
push
adc
loop
pop
fidivs
popf
sbb
subb
out
dec
xor
cmp
outsb
cwtl
push
add
mov
in
mov
xor
icebp
push
push
jmp
loope
sbb
xchg
sub
xchg
subl
andb
sbb
loop
fimull
and
arpl
fiaddl
pop
aam
push
lock
in
inc
xor
xor
stc
pop
aas
aas
imul
fbstp
pusha
nop
enter
inc
clc
int
jp
movsl
push
scas
cltd
jae
cwtl
sbb
std
repz
pop
dec
sbb
pop
jmp
push
pushfw
inc
jl
das
or
jp
in
or
insb
insb
pop
imulb
movsb
dec
mov
sbb
or
scas
xor
lea
imul
imul
rclb
jl
and
ss
dec
ljmp
mov
pushl
and
mov
pop
adc
push
mov
pop
clc
push
scas
mov
enter
inc
rolb
pop
inc
pop
imul
sub
test
mov
dec
push
imul
push
mov
push
lds
cmp
ret
cli
cmp
dec
sub
or
jmp
pop
cmc
mov
movsl
inc
mov
xchg
xchg
pop
insb
xchg
aas
cmp
mov
jb
dec
imul
add
sub
add
pop
imulb
icebp
cmp
icebp
shlb
xor
repnz
clc
cmp
xchg
inc
dec
clc
hlt
push
adc
clc
fs
xchg
in
lahf
push
inc
rclb
inc
mov
pop
dec
iret
imul
adc
mov
push
cmp
notb
movsb
lock
and
push
push
mov
mov
in
and
loope
xchg
push
out
stc
pop
cmp
dec
clc
adc
rorb
cmp
fsubrs
push
insb
mov
lahf
outsl
pop
stos
shl
jl
mov
bound
pop
mov
lcall
mov
pop
sbb
mov
push
and
jno
mov
test
xor
cmp
mov
jo
lds
cwtl
add
aas
enter
icebp
lahf
mov
lret
nop
js
pop
inc
xchg
mov
outsb
and
lock
dec
mov
pop
jb
cli
dec
xor
cmp
jg
mov
inc
cld
in
lahf
dec
mov
scas
pop
cmp
mov
push
and
pop
push
add
dec
jmp
fsubrl
cmp
in
jne
imul
add
mov
mov
orl
sub
sbb
add
jbe
jg
clc
cmp
stc
negl
scas
shl
nop
arpl
jno
add
xor
xchg
or
push
inc
roll
test
test
pop
xor
inc
jle
clc
sub
lret
push
scas
aas
gs
xlat
mov
es
adc
ret
push
rcrl
inc
bound
xor
inc
repz
push
cmc
pop
mov
xor
popa
and
les
je
es
into
das
and
add
and
pop
mov
les
lret
xor
iret
clc
bnd
out
and
jmp
sbb
and
sbb
cmp
pop
ret
lods
pop
mov
xor
and
pushf
mov
imul
addl
jmp
inc
jl
in
cmp
xor
and
fwait
mov
push
testl
or
test
adc
inc
xchg
and
mov
or
clc
pusha
aas
fwait
dec
xor
mov
cmpsl
pop
cmc
sti
push
add
sbb
mov
addb
outsl
mov
movsb
jns
sbb
adc
or
idivl
mov
or
push
push
add
xchg
shll
add
cltd
stos
cmp
aaa
jl
or
xlat
mov
outsb
xchg
mov
ljmp
sub
xor
push
xchg
into
cli
mov
fsts
stc
neg
xor
in
mov
jg
cmp
test
sub
push
cltd
jbe
adc
mov
inc
dec
test
cwtl
nop
aaa
in
lods
jl
sbb
js
pop
add
mov
imulb
fstl
loop
bound
mov
lret
dec
ja
add
test
fwait
pop
xor
std
pop
or
movsb
mov
mov
aas
cmp
or
push
dec
leave
sub
xchg
addr16
add
mov
mov
or
cmp
dec
mov
dec
ror
movsb
mov
cld
xor
stc
fwait
inc
pop
push
outsb
ja
xor
jbe
xor
push
insl
cli
stc
out
mov
shrb
push
push
xchg
js
dec
ret
push
inc
hlt
testl
jecxz
sbb
mov
icebp
outsb
add
xor
sbb
sti
and
out
sub
cltd
pop
inc
mov
rcrl
cmpsl
xor
cmp
add
and
ja
pop
addr16
and
test
sahf
lret
shlb
pop
jg
dec
out
xchg
into
xchg
ret
insb
cmpsb
in
dec
adc
mov
push
daa
adc
jae
pusha
aaa
sbb
enter
or
and
add
inc
mov
int
xchg
xchg
mov
push
fs
dec
pop
mov
adc
mov
in
addb
ret
xlat
adc
dec
add
or
dec
jl
sub
mov
jge
sbb
pop
pop
pusha
mov
mov
arpl
and
loopne
pop
lds
push
in
or
dec
cmp
sub
jae
mov
cmc
jg
sbb
and
mov
xor
rclb
cmc
push
pop
and
int3
or
shll
or
enter
inc
lea
and
cmp
test
mov
lock
add
pop
adc
hlt
jbe
mov
aas
arpl
push
mov
sub
sub
daa
popf
les
int3
push
les
xor
sbb
and
sbb
movsl
push
xlat
mov
add
popa
test
mov
inc
or
mov
cmp
je
lods
push
mov
idiv
arpl
pop
mov
push
adc
into
jl
mov
fstp
test
sub
push
and
inc
inc
iret
int
cmpsb
arpl
clc
mov
testl
jns
andl
mov
rorb
jae
or
push
cmc
cld
arpl
sbb
jp
js
shrb
push
mov
xchg
into
repnz
mov
out
push
xor
xchg
pop
and
mov
jb
test
or
hlt
lahf
sarl
inc
jmp
push
and
pusha
xor
inc
enter
push
imul
pushw
call
ret
mov
test
mov
stos
cmp
xor
js
push
mov
ret
das
add
xor
jmp
mov
sub
xlat
push
jb
sub
mov
xchg
rorl
sub
fiadds
jecxz
cmp
adc
sbb
xchg
stc
ljmp
ret
test
inc
cwtl
popl
jbe
mov
bnd
gs
push
or
xchg
test
sub
fwait
cmp
add
rorl
push
repnz
push
and
stc
add
xor
mov
cli
nop
insb
push
lcall
pop
mov
mov
aas
push
or
into
jge
push
ja
sub
mov
mov
int
loopne
jns
xor
mov
popf
and
iret
into
pop
cmpsb
and
fldl
adc
shlb
cld
lock
inc
andb
fucomip
pop
int
add
adc
pop
push
sbb
cmp
sbb
mov
jecxz
in
mov
xchg
andb
es
js
mov
pusha
pushf
in
aaa
xchg
pop
dec
push
pop
inc
std
push
aam
lods
aas
adc
je
xor
inc
pop
es
mov
mov
fmull
jb
and
dec
arpl
dec
pop
xor
push
mov
ret
outsl
mov
int3
dec
push
iret
dec
es
push
negb
cs
pop
jp
xor
and
pushf
je
int3
pop
andb
out
mov
push
imul
xchg
fwait
outsb
mov
xchg
and
add
nop
sbb
pop
adc
xchg
ss
mov
int3
out
dec
cmp
testb
adc
sbb
cmp
in
pop
sti
cmp
mov
jae
sbb
mov
dec
rolb
push
call
shll
ret
jl
sub
ret
ficoml
dec
sbb
ds
jp
out
outsb
cmpsl
test
dec
mull
cwtl
sbb
mov
sbb
and
ret
out
rorl
shrb
cmpsb
movsl
cmp
js
nop
and
popf
test
icebp
sbb
jecxz
jne
jmp
jo
addl
addr16
sbb
push
jnp
jg
jno
push
mov
push
mov
adc
icebp
call
xchg
jno
fsts
pop
pushf
mov
mov
mov
test
pushf
pop
cmc
inc
in
mov
int
pop
sti
sub
add
push
rclb
fwait
push
xchg
mov
inc
mov
push
jno
pop
ja
mov
pop
and
in
mov
sub
movsl
cs
add
xchg
fdivrs
lret
inc
icebp
inc
popa
dec
xor
repnz
mov
adc
cmp
mov
ds
fsubl
mov
mov
or
jae
xchg
lret
dec
or
addb
loop
jbe
lods
lods
aad
cli
dec
inc
mov
cmc
pop
ds
orl
push
pop
push
cmp
out
dec
cmp
or
sub
xchg
mov
mov
xor
outsl
mov
inc
or
stc
xchg
jns
fildll
fmuls
fsubr
add
cmp
or
add
notl
xor
xchg
cld
xchg
jle
or
and
xchg
or
mov
div
cmp
or
xor
addl
push
or
adc
loope
push
xor
setg
xchg
pop
dec
or
jge
lcall
mov
pop
push
dec
orb
sbbl
sbb
mov
cmp
pop
mov
mov
lds
add
xorb
adc
and
pop
push
jecxz
xor
push
xchg
loopew
movsb
arpl
push
inc
test
push
and
aas
dec
or
int
iret
ljmp
in
mov
inc
xor
fdivrp
sub
fcompl
mov
push
dec
sbb
jb
lahf
xchg
imul
sbb
jmp
lds
inc
lea
xor
xor
pop
cli
popf
stc
shrl
sbb
pushf
sub
mov
xchg
dec
test
icebp
xor
pusha
imulb
adc
ss
xchg
add
cs
dec
les
cltd
mov
mov
add
xor
int
pop
fs
push
mov
hlt
xor
or
popf
cmc
loop
in
push
cli
jecxz
jle
adc
mov
adc
mov
adcl
or
adc
in
test
repnz
mov
add
mov
insb
loop
out
aaa
pusha
or
pop
jp,pn
xorl
push
sbb
mov
push
lcall
pop
mov
js
sti
in
movsl
shlb
mov
insb
push
push
in
data16
aam
mov
push
and
fsubl
push
dec
insl
xorb
shl
testb
push
mov
mov
cmpb
push
dec
cmpsb
dec
rorl
mov
in
xlat
mov
inc
jecxz
pushf
andl
clc
out
xchg
mov
dec
and
les
sets
imul
rcrl
push
es
adc
pop
push
popf
std
dec
mov
pop
inc
addl
test
jno
pop
je
cmpsl
and
loopne
push
shlb
clc
sbb
mov
push
adc
push
into
flds
dec
cmp
pop
add
xchg
xchg
insl
mov
cmp
pop
and
test
jl
insb
dec
jle
pop
dec
jno
jb
sub
lea
mov
inc
popa
shll
push
mov
pusha
sbb
xchg
int3
sub
das
in
jecxz
sti
pusha
adc
fisttps
sbb
fidivs
push
jns
pop
int
shlb
sub
push
mov
pop
lods
xchg
push
mov
xchg
pop
in
push
and
subb
jb
push
jg
dec
xchg
pop
cmpsb
enter
adc
insl
push
lret
rclb
pop
enter
rcr
int3
pop
push
lds
mov
xor
shrl
push
hlt
lods
addr16
or
xlat
and
call
pop
add
add
pop
mov
cmp
sar
ss
and
jo
cmp
in
aas
mov
push
cmp
movsl
testl
mov
inc
sub
sub
movsb
mov
rorb
push
xor
fdivrl
dec
mov
push
cmp
idivb
cld
mov
sbb
xchg
shlb
enter
cmp
jae
aas
cwtl
cld
test
call
sub
sub
fiaddl
je
std
pushf
mov
scas
pusha
pop
push
jbe
gs
push
icebp
pop
and
mov
pop
pop
hlt
pop
jo
stc
aaa
mov
and
jmp
and
push
out
sub
lea
movsb
mov
xchg
bound
xor
leave
fldt
ds
sbb
mov
and
adc
test
adc
arpl
insb
rolb
adc
pop
push
arpl
out
movsl
adc
and
push
sub
loopne
add
rcll
sbb
pop
aaa
fidivrl
repz
jae
jecxz
jp
inc
xor
jecxz
int3
inc
cmpsb
pop
or
mov
sbb
fisttpll
imul
subl
mov
and
push
cmp
inc
sbb
fdivrs
daa
and
repz
sub
lret
pop
or
adc
push
std
pop
jp
jle
cmp
testb
fs
xor
inc
jns
jne
rolb
cmpsb
nop
mov
xor
dec
or
sbb
inc
data16
mov
xchg
popf
pop
out
dec
or
loope
test
test
lret
cmpsl
inc
scas
sub
xchg
or
outsb
repz
or
push
imul
stc
and
adc
js
jl
cmp
pop
adc
jnp
repz
and
nop
push
outsl
lea
ljmp
jmp
push
cmp
and
sub
sbb
inc
and
add
push
inc
sbb
fcoml
test
inc
jo
pop
and
push
std
int
add
inc
out
mov
sbb
dec
push
in
popf
mov
call
enter
loop
add
shl
stos
shrl
clc
subl
aad
arpl
mov
std
stc
sub
lock
out
sub
fistpl
jne
out
fs
ss
sub
fisubs
pop
mov
dec
pop
push
test
inc
in
ja
add
dec
add
les
jo
nop
inc
xor
jle
push
sbb
fimull
data16
decl
mov
stc
ja
cmp
or
mov
scas
add
pop
jae
mov
jns
movsb
testb
push
icebp
lret
pop
sub
inc
or
push
das
mov
imul
lods
inc
mov
int3
stos
in
mov
sbb
mov
daa
repz
lcall
mov
push
add
mov
cmp
pop
and
add
fcoml
addb
push
sbb
or
jmp
inc
xchg
lahf
cmp
inc
push
dec
ss
and
sub
or
inc
or
add
int
jp
int3
push
lret
lcall
dec
cmp
adc
rorl
lret
shrl
pop
jle
jnp
inc
sbb
pop
dec
aam
and
lods
push
shl
or
xor
push
and
dec
add
adcb
push
stc
pop
shrl
push
xchg
cltd
inc
xor
movsb
pop
aam
lret
enter
insl
adc
push
daa
js
cmp
inc
and
inc
arpl
xor
mov
mov
jecxz
or
in
dec
adc
push
push
xchg
mov
push
les
and
pop
fstpl
mov
cltd
xchg
add
dec
pop
outsl
dec
jb
lahf
jne
pop
adc
lret
push
cmp
pop
mov
xor
and
xchg
ja
movsl
and
adc
ss
xor
and
test
and
loopne
leave
daa
in
and
inc
adc
adc
dec
push
sub
and
adc
loope
cmpsl
fmuls
jge
fbstp
js
jecxz
arpl
scas
mov
mov
mov
mov
out
pop
xor
scas
pushf
and
mov
clc
rclb
cwtl
cmp
mov
or
loop
or
sub
mov
popa
adcl
in
add
jne
aad
pop
cmpsb
int3
lock
sbb
lahf
push
clc
pop
pop
push
outsl
adc
cwtl
or
sub
mov
add
cld
pop
adc
roll
adc
bound
mov
enter
mov
push
movsb
push
or
iret
xchg
or
jne
clc
mov
ja
add
out
pushw
stos
sbb
dec
mov
sub
fs
aam
inc
mov
dec
pop
inc
call
ss
iret
dec
subps
in
inc
bound
adcb
fsubr
mov
lcall
out
mov
mov
push
rclb
cs
and
push
push
dec
in
or
xor
cmp
sarb
shl
out
pop
mov
into
jge
jle
mov
dec
ret
scas
push
mov
and
stc
mov
cmp
push
mov
jns
jge
push
dec
jg
sbb
and
loop
vmovd
cmp
mov
jle
ret
in
cmp
sub
mov
inc
mov
pusha
movsb
jnp
loope
lret
add
or
mov
mov
sbb
and
or
ds
push
sbb
lock
loope
dec
outsb
hlt
stc
sbb
mov
add
push
or
decb
pop
mov
pop
and
mov
xchg
add
or
xor
in
pop
clc
mov
jno
push
test
add
push
enter
and
pop
mov
ljmp
push
xor
mov
orb
and
mov
repz
insl
cmc
xor
pop
mov
dec
mov
push
pop
in
push
outsl
add
cmpsl
cmp
or
push
dec
cld
sbb
pop
and
imul
and
in
sub
dec
xor
call
jmp
sub
adc
into
xchg
orl
push
rclb
mov
xchg
xor
mov
jb
xlat
adc
jns
pop
daa
mov
add
into
xchg
xor
push
leave
addb
hlt
sub
push
in
movsl
push
and
or
or
sub
mov
sbb
or
popf
or
xor
loop
sbb
sub
xchg
ja
lock
sbb
ror
mov
aas
inc
push
dec
xchg
bound
out
movl
push
pop
sti
mov
adc
adc
sahf
sub
or
insl
rclb
pop
pop
rolb
xor
sbb
jb
hlt
test
or
push
dec
shr
xchg
enter
cmp
or
test
dec
imull
inc
dec
dec
aaa
push
add
push
push
pop
xor
insl
cmp
in
sbb
inc
lcall
add
testb
pusha
xor
mov
pop
pop
ficompl
test
or
sub
std
xchg
dec
and
xor
lods
push
adc
shlb
adc
shll
mov
sbbl
add
jns
xor
jae
cmp
es
push
and
xor
cmp
or
mov
psraw
fsubp
sbb
pop
sub
pop
out
scas
or
lahf
addb
sbb
adc
sbb
not
test
cmp
dec
mov
cmc
lcall
cwtl
sbb
cmc
addr16
popa
test
sub
or
push
cmp
loop
adc
lret
sbb
xor
push
shl
movsl
adc
aam
sbb
xchg
and
mov
mov
sbb
mov
and
inc
movsb
cmpsb
add
adc
mov
loopne
cmc
jne
popa
mov
leave
add
movl
sub
sub
out
cmp
std
sbb
xchg
out
addr16
enter
xor
sbb
aas
out
pop
stos
or
int3
inc
sub
dec
or
add
add
cmc
leave
lock
dec
dec
out
xchg
clc
and
xor
insb
xchg
cmp
ret
fcoms
test
dec
lds
or
sub
sti
sub
xor
rorl
push
jge
iret
xlat
pop
outsl
inc
out
and
mov
das
cwtl
mov
cmp
cmpsl
and
adc
stos
jle
sbb
movsb
icebp
adc
loop
fwait
stc
into
js
popf
sbbl
inc
xchg
mov
shl
dec
cmc
jmp
idivl
loopne
scas
mov
dec
lcall
adc
ficompl
outsb
and
and
add
xchg
or
adc
outsb
loop
add
pop
cmc
mov
jle
sbb
mov
push
sbb
mov
outsl
incl
mov
pusha
lret
xor
sub
inc
lahf
imul
or
mov
xchg
xchg
add
add
push
lods
in
mov
adcl
pop
jns
in
mov
jecxz
rcrb
dec
test
xchg
sbb
adc
dec
es
jae
inc
fwait
aas
arpl
push
rcll
sbb
cmpb
dec
js
ds
and
popa
sbb
jne
xchg
das
cmp
jo
or
xor
aas
jle
dec
dec
cmp
ret
clc
movsl
stos
aam
pop
inc
lret
sub
rol
lahf
and
push
push
mov
inc
fldcw
xor
dec
aas
jne
out
cmp
insl
ja
call
xor
call
mov
data16
fcomps
cmpsl
sbb
enter
sbb
insb
fldenv
popa
in
jnp
in
outsb
aam
in
sbb
int
cmp
mov
scas
push
or
mov
mov
in
and
inc
mov
mov
aad
jns
orb
ret
push
out
shlb
cwtl
sbb
shl
mov
loope
and
lret
pop
flds
mov
and
scas
gs
inc
add
je
push
xor
pop
gs
dec
adcb
inc
xchg
outsl
sbb
cmp
icebp
roll
in
and
ds
negl
xor
or
cmp
or
je
and
cmp
mov
ja
imull
std
pop
dec
or
popf
adc
cmp
xlat
out
push
cmc
daa
xchg
sub
cwtl
fdivrl
xchg
inc
inc
xchg
out
jg
pop
js
sub
xchg
dec
fs
lahf
push
xor
dec
fadds
jnp
dec
sbb
fwait
jp
xchg
jne
push
jb
aas
push
sub
arpl
cmpsb
imul
pushf
jle
cld
adc
dec
es
xor
sbb
ficomps
xor
mov
aam
mov
mov
dec
cwtl
ret
mov
pop
sbb
or
adc
adc
push
inc
pop
lret
fmull
and
sbb
push
pop
cmp
sbb
sahf
data16
mov
mov
lret
fdivrl
pop
or
repz
xchg
jge
xor
movsb
push
or
mov
mov
cmp
out
cmp
jge
dec
dec
pushf
dec
in
dec
and
cli
and
and
sub
mov
inc
cmovp
aas
mov
lods
add
ficoms
cmp
and
aaa
insl
adc
and
sbb
ja
cld
lock
jle
cs
fs
add
sub
xor
fnstenv
and
jbe
pop
inc
enter
mov
push
dec
xor
fnstsw
pop
xchg
add
and
cmp
pop
push
stc
xor
add
push
push
xchg
adc
xor
and
push
arpl
push
les
inc
pusha
rcl
inc
adc
iret
pop
push
sub
push
or
outsb
pop
sbb
or
out
jne
decb
dec
adc
pop
cmp
cmp
dec
and
call
adc
inc
fwait
xlat
ja
adc
or
ret
adc
mov
call
fdivl
mov
in
lahf
flds
insl
jb
inc
jae
add
sti
loope
in
cli
rorb
insb
repnz
xchg
jl
lock
int3
add
xchg
xor
add
repz
stos
testl
sub
xor
fldt
data16
push
cmp
sbb
dec
pop
or
mov
std
xor
jne
mov
mov
jge
mov
out
push
and
int
test
int3
and
fiaddl
cmp
aaa
and
call
pop
dec
es
or
jl
adc
stc
jne
std
adc
dec
hlt
and
dec
hlt
notl
or
cwtl
jmp
scas
pop
sbb
insb
iret
arpl
adc
adc
pop
dec
psubw
out
sub
push
fsubs
test
dec
in
aad
sbb
push
outsl
pop
cwtl
mov
cmp
int
adc
inc
es
sbb
sub
inc
or
and
iret
movsb
or
or
adc
pop
xor
mov
jb
and
into
pop
cs
fidivs
lahf
lret
cld
negb
arpl
sub
xchg
mov
mov
iret
cltd
or
insb
cmpsl
mov
mov
test
mov
push
rorl
and
lods
or
es
sti
imul
test
push
fisttpl
xchg
mov
sbb
or
sub
sbb
into
or
in
jo
setns
pusha
mov
fimuls
jb
pop
mov
sub
hlt
push
pop
jmp
pop
dec
add
into
dec
pop
cwtl
push
pop
mov
sbb
lock
inc
cmp
lea
mov
out
aaa
pop
jne
add
cmp
jmp
cmpsb
pusha
push
sbb
icebp
dec
cmc
mov
sbb
inc
jno
pop
xor
repnz
jmp
ret
loop
fdivrs
adc
cmp
or
mov
rolb
es
jl
mov
clc
std
jno
cmpsl
push
xchg
xchg
data16
test
cmc
add
or
rcrb
cli
mov
lea
jle
jmp
out
pop
pop
adc
dec
and
outsl
es
dec
pusha
dec
cli
dec
mov
push
pusha
cmp
adc
or
pop
dec
push
fstps
sub
stc
cltd
popf
test
mov
clts
sub
popa
outsl
movsl
jmp
cmp
shl
mov
in
mov
dec
cmp
push
or
dec
jnp
mov
pop
xor
cmp
sti
push
cs
xor
std
pop
sbb
pusha
pop
inc
in
lcall
repz
mov
inc
in
cmp
lock
cmp
aas
repz
call
cmp
mov
dec
lock
dec
sub
cmpsl
or
or
ja
inc
out
outsl
rcll
cmpsl
in
sub
sub
mov
imul
sub
les
xor
mov
dec
jge
loope
xlat
mov
and
push
xor
mov
lret
cld
push
sti
sbb
icebp
xchg
mov
adc
dec
jnp
mov
xchg
jns
mov
subl
and
pop
bound
cld
pop
sub
or
cmp
mov
imul
outsb
adc
mov
cmpsb
cmp
mov
mov
sbb
sbb
mov
dec
cmp
movsl
push
call
cwtl
ss
mov
aas
adc
sbb
push
insl
std
in
fsubrs
xor
or
cmp
sti
sub
or
and
clc
daa
dec
inc
fmull
inc
aaa
loope
add
dec
mov
ss
push
inc
jg
repz
xchg
or
lret
xchg
xlat
sbb
dec
adc
aaa
imul
pop
mov
or
sarb
xor
das
push
xchg
into
push
paddusw
imul
divb
dec
adc
rorb
jae
ret
mov
sub
es
lods
ss
fwait
inc
das
mov
sti
pusha
and
ds
addr16
imul
or
adc
push
push
sbb
push
mov
add
clc
imull
or
mov
sbb
push
mov
inc
jmp
sti
test
mov
popa
addr16
nop
or
loope
pavgb
inc
outsl
loopne
ret
js
mov
insl
cmp
mov
jge
ljmp
push
jmp
fnstsw
adc
and
add
pop
sub
and
jmp
pop
sbb
test
popl
out
xchg
call
sbb
cwtl
ja
dec
sub
mov
subl
repnz
js
pop
hlt
fnstcw
insl
mov
pop
cltd
pop
sbb
int3
idiv
xchg
pusha
inc
pop
imul
push
je
inc
pop
les
dec
sarb
pop
test
mov
or
pop
sub
inc
or
sub
or
xor
push
stos
scas
pop
adcb
pop
xor
add
jmp
bound
push
jae
mov
cli
std
rclb
mov
and
rclb
cmp
cmc
sti
jmp
loope
sub
mov
pop
mov
inc
xchg
jp
jnp
jno
incl
pop
push
test
lcall
cmp
pop
leave
sbb
adc
addl
adc
lret
xor
and
cld
test
divl
add
rclb
mov
pop
and
lret
sbb
pop
or
inc
xlat
adc
addr16
pop
push
xor
mov
mov
lds
xchg
xor
out
cmp
cmp
jb
mov
push
loopne
fdivrs
jbe
push
xor
daa
mov
sbb
cltd
shlb
sub
lock
or
es
mov
or
xchg
test
adc
gs
in
adc
fdivr
xor
fisttps
ss
aad
cltd
mov
into
ret
xor
cs
lret
mov
and
pop
sbb
adc
lock
pop
xor
xchg
mov
sbb
lds
push
adc
incb
xchg
popf
cli
or
mov
loope
ret
and
add
call
andb
aas
testl
pop
inc
mov
clc
adc
cmp
push
dec
cmp
sub
jnp
adc
out
jl
add
notl
sbb
lock
inc
hlt
lahf
in
sbb
add
rol
mov
jnp
rorb
dec
imul
loope
mov
addb
rolb
xchg
cmp
add
fbstp
stc
xchg
aas
icebp
fisubrl
rorb
roll
mov
loope
push
int3
jecxz
push
mov
loop
sub
jp
mov
add
sub
or
or
mov
out
ror
mov
leave
or
repnz
cld
or
jns
imull
das
mov
inc
addr16
or
jl
aad
mov
xchg
les
mov
or
in
dec
ja
movsb
mov
or
mov
cld
lock
ss
sub
loopne
rcrb
jns
mov
or
jge
sub
les
adc
dec
mov
xor
mov
or
pusha
adc
test
cmpsb
mov
and
pusha
js
adc
lds
sub
ffree
jl,pn
int
testb
addr16
sbb
dec
cld
xor
inc
xlat
fimuls
in
xchg
push
jmp
mov
std
or
pop
push
repnz
in
lahf
xor
pop
sub
or
inc
push
stc
fwait
add
or
and
sub
shl
and
mov
cmpsl
jle
sbb
fcomp
dec
cmp
xchg
or
mov
mov
movsl
pusha
fwait
add
mov
shr
movsb
pop
clc
and
insb
add
fldcw
inc
pop
data16
or
gs
mov
jecxz
pop
push
stos
xchg
fcoml
pop
and
call
and
cmp
dec
addb
int3
sbb
test
sti
push
cmp
adc
adc
out
cld
aam
bound
filds
lds
testl
test
jnp
jbe
in
mov
jo
or
pop
inc
dec
adc
mov
ss
inc
dec
xor
cmp
sti
ret
sub
loope
mov
xchg
cli
xor
sub
test
loop
sub
nop
push
and
in
loopne
sbb
test
lds
push
cmp
sbb
jmp
mov
xor
sbbb
imul
dec
xlat
push
int
sbb
and
xchg
jp
jle
xor
pop
pushl
enter
lahf
das
add
dec
fs
cmp
xchg
xorb
push
and
and
mov
pop
popf
mov
jg
jae
or
lods
jnp
sub
div
movsl
inc
jne
push
cs
pop
dec
mov
aas
add
jg
dec
add
add
mov
xchg
cwtl
in
icebp
adc
xor
adc
test
push
jo
jge
cltd
xchg
fsubrl
repnz
test
out
movsb
push
and
cmp
adc
repz
je
sub
and
lods
movsb
mov
ret
adc
popa
cmp
in
and
cmpsb
pop
ret
sahf
test
xchg
mov
nop
jb
pop
imul
dec
dec
dec
icebp
or
cmpsl
cmpsb
cmp
lret
mov
mov
sub
dec
je
mov
out
and
xchg
nop
jp
rcl
int3
add
adc
leave
adc
jp
adc
dec
fnstsw
dec
pop
jae
push
dec
popa
fisttpl
xchg
push
lds
mov
sbbl
subb
push
jge
jl
and
lcall
sbb
loope
push
mov
fiaddl
jle
lret
lret
or
ja
lods
ss
pop
and
cmc
mov
xor
jns
mov
cltd
out
cmp
sbb
mov
adc
jbe
inc
clc
shll
mov
mov
cmp
int
xorl
fsubs
jbe
movsl
push
push
mov
fisubrs
jge
fucom
pop
sbb
mov
dec
mov
lods
lcall
fdivs
test
sti
enter
and
ret
pop
nop
call
mov
ret
popa
adc
outsb
xchg
inc
inc
mov
jno
adc
loopne
shrb
mov
idivb
loopne
cmp
xor
je
dec
scas
jb
repz
xor
rcrb
add
std
out
mov
mov
clc
lock
mov
jecxz
pop
jbe
rcrl
ficompl
push
xchg
leave
xor
jp
aaa
stos
xor
in
jae
pop
cmp
mov
push
cli
dec
or
psubb
pushf
in
or
je
adc
pop
cmc
inc
fstpt
and
mov
and
sbb
loop
mov
ja
jae,pt
push
mov
aad
xchg
inc
or
jae
pop
sub
xchg
adc
sbb
jle
push
movsl
inc
push
test
dec
adc
push
fisubs
or
cltd
lldt
or
jecxz
add
nop
call
imul
stos
stc
clc
adc
addr16
repz
fisubl
pcmpeqd
cmp
push
ret
clc
mov
lock
add
das
insb
mov
in
dec
enter
mov
mov
adc
push
repz
cmc
cmp
push
rcrb
arpl
adc
mov
int
dec
jmp
dec
dec
push
loope
sbb
sbb
dec
add
lahf
or
mov
fdivrs
adc
and
arpl
sub
aaa
push
adc
mov
pop
mov
cmp
pop
inc
or
cmp
xchg
xchg
rcrb
stc
mov
mov
inc
dec
sub
lcall
push
aad
imul
jb
pop
jno
sub
sbb
push
push
mov
into
testb
outsl
sbb
pop
jge
xchg
push
repnz
fldt
insb
dec
or
push
mov
ret
das
jg
push
xorb
xchg
andb
push
pop
in
sub
rol
jb
stc
or
mov
pop
fdiv
mov
xor
cmp
mulb
dec
je
or
adc
mov
loopne
and
jge
mov
or
mov
adc
mov
and
or
jmp
pop
icebp
loopne
jnp
adc
call
sbb
xor
pop
cmp
gs
flds
int
popa
sbb
shr
ret
mov
int
push
sti
outsb
test
xchg
jns
inc
lret
fnstcw
sahf
rclb
and
inc
scas
dec
movl
ud0
pop
js
ss
mov
scas
and
fwait
stc
push
stos
push
in
in
in
jnp
and
fisubrl
mov
sbb
and
inc
std
pop
sbb
in
and
fisubrs
dec
sbb
loop
jae
inc
and
jg
fadds
mov
clc
mov
pop
sbb
das
movsl
mov
xchg
adc
sbb
sbb
insl
or
aas
mov
adc
mov
push
pop
and
ret
xor
xchg
test
clc
dec
and
gs
add
lea
mov
dec
popf
and
pop
xchg
sub
cmp
xchg
or
std
push
mov
cmp
pop
sbb
or
dec
dec
pop
out
jg
mov
call
movsl
jp
fidivs
pop
mov
or
mov
fstps
jmp
in
int3
adc
cmp
or
mov
imul
add
cmp
fwait
popa
pop
cmp
clc
cltd
and
and
adc
sti
repz
or
and
cmp
test
mov
push
test
cli
xor
pop
xchg
adc
cwtl
push
pushf
int
test
icebp
popf
xor
pushf
les
sbb
cmp
pop
jae
dec
mov
inc
xorl
fs
sbb
call
lret
or
cmp
clc
cmp
pop
roll
les
push
out
push
sbb
ljmp
xchg
cmp
and
push
mov
les
and
mov
outsl
mov
mov
lds
sbb
dec
xorb
cmp
iret
lahf
aam
es
and
mov
ljmp
pop
inc
add
sbb
cmp
sub
out
cmp
out
out
xchg
inc
xorl
sti
jl
or
inc
or
popa
sbb
cld
sbb
add
testl
or
rclb
ret
cmpsl
jo
push
nop
mov
adc
jbe
clc
push
jle
hlt
and
lahf
mov
inc
repz
and
sub
stc
ja
aas
aad
inc
iret
xlat
add
lock
popl
pop
pop
xor
inc
lods
adc
call
in
iret
and
cmp
cld
cmp
push
push
rcrl
sti
andb
or
mov
pop
mov
ret
cltd
fildll
mov
and
xchg
pop
arpl
cmp
lea
xor
sbb
lea
and
xchg
pop
sub
enter
ret
xchg
pop
sbb
or
cltd
sub
shll
push
jl
mov
xchg
push
sbb
int
callw
mov
ror
frstor
das
test
loopne
adc
cmp
push
enter
sub
loopne
in
imul
cld
ljmp
stc
and
xchg
jnp
imul
inc
outsl
xor
nop
sbb
int3
push
pop
push
movsb
xor
pop
xor
adc
mov
sti
adc
xchg
ret
mov
cmp
roll
add
stos
add
js
fwait
add
and
pop
fldt
add
inc
ud0
push
jnp
aaa
jb
enter
xchg
cwtl
clc
test
push
orl
cld
fldenv
mov
aas
jmp
push
xchg
push
mov
out
sbb
jmp
xor
mov
daa
test
jae
frstor
insb
movsb
xchg
mov
and
call
cmpsl
lods
jns
stos
aas
test
movsl
push
fwait
test
push
push
std
cmp
and
xchg
fs
push
mov
movsb
lods
and
inc
inc
je
mov
leave
test
mov
dec
mov
test
pop
push
dec
in
xchg
mov
or
rep
lret
fldt
bound
cwtl
sub
lock
sti
sarb
inc
sub
repz
jno
or
int
ret
int3
sub
movsl
das
jge
sub
ret
mov
fs
fidivrl
sbb
imul
out
imul
cmp
mov
sub
mov
sbbb
out
mov
push
mov
fs
inc
lods
std
or
mov
pop
pop
scas
lahf
push
push
mov
mov
cwtl
scas
test
lahf
or
adc
lea
pop
js
popa
jp
call
in
cmpb
fstps
push
push
jb
xchg
ljmp
aaa
or
pop
movsl
push
pop
pusha
sbb
sub
push
inc
cwtl
fists
adc
outsb
hlt
js
cmp
pop
add
lcall
icebp
sub
sub
or
inc
aaa
idiv
cmp
sbb
cmp
fiadds
push
sarb
rorl
lret
adc
movsl
enter
jnp
cld
dec
push
and
scas
xchg
sub
push
popf
sahf
sbb
dec
popa
pop
dec
rcrl
mov
add
xor
mov
ficomps
add
inc
push
popf
clc
mov
mov
arpl
push
inc
dec
adc
mov
iret
ljmp
mov
jmp
pop
enter
xchg
adc
adc
dec
pop
repz
mov
and
cmp
shll
das
dec
mov
inc
mov
pop
push
or
sub
jns
jo
icebp
xchg
pushf
pop
mov
sbb
cli
or
push
push
inc
jmp
test
movsl
imul
pop
icebp
cmpl
pop
xor
cmc
jmp
repnz
jb
or
pop
pop
or
sarb
dec
out
std
adc
or
and
ret
pushf
sbb
mov
mov
pusha
push
mov
in
adc
repz
dec
xchg
add
rclb
push
ds
push
sbb
push
sub
mulb
sbbb
lahf
mov
fs
adc
push
and
cmp
mov
inc
adc
xor
inc
xor
fdivl
adc
pop
push
fcoms
aaa
fnstcw
stc
fcoml
sbb
jnp
add
rcr
cld
pop
cld
xor
enter
gs
xchg
clc
ljmp
loopne
jb
xor
jo
rorl
ja
inc
int
dec
inc
hlt
mulps
and
popf
fsubs
fcoml
add
xlat
sub
pushf
xor
add
scas
cld
mov
mov
jno
sbb
jae
scas
adc
jne
mov
ds
dec
popa
inc
xchg
sub
xor
mov
nop
mov
mov
jecxz,pn
dec
js
mov
mov
jge
sbb
sbb
outsb
hlt
inc
das
xchg
movsb
xchg
aam
gs
inc
jno
add
rorb
lahf
fs
dec
pop
fdivrs
int3
je
dec
rclb
out
adcb
inc
push
adc
in
mov
js
cld
popa
jbe
shlb
dec
int3
mov
rolb
aam
jnp
cmp
fldt
sbb
call
sub
insl
dec
mov
xor
shl
jmp
loope
js
adc
jle
jle
inc
les
sub
andb
mov
pop
enter
xlat
push
in
jb
pop
ds
adc
ret
mov
inc
push
out
imul
xor
insb
idivb
mov
push
sbb
inc
sub
std
outsb
inc
cwtl
mov
clc
mov
jne
leave
inc
and
pop
repz
pop
xchg
movsl
into
push
mov
dec
jge
xor
push
and
xchg
test
sbbb
loopne
mov
cmp
jo
or
jbe
iret
call
dec
pushf
and
dec
stc
dec
lock
test
les
mov
sbb
nop
add
out
sub
mov
loope
lret
fadd
cmp
jp
jne
pop
cmp
mov
in
js
add
out
xor
mov
dec
mov
daa
push
add
bound
xchg
mov
lret
or
mov
pop
mov
xor
mov
sub
iret
mov
mov
add
xchg
ja
shl
scas
jmp
mov
stc
or
out
push
or
das
dec
mov
mov
ret
adc
or
jmp
sub
idivb
aaa
divb
jl
fcompl
sub
xor
pop
js
leave
mov
jne
jle
lret
ret
stos
orl
fldlg2
andl
vmovapd
icebp
jno
pop
inc
cmp
inc
adc
ret
xchg
clc
jae
adcb
out
cmpsl
xlat
pop
pop
clc
mov
jmp
pop
pop
mov
xchg
orl
jp
stos
je
dec
ja
fidivs
mov
rclb
iret
jmp
ficompl
mov
sbb
fwait
push
adc
je
icebp
push
jae
ljmp
dec
adc
shlb
nop
sar
enter
cmpsb
push
shl
pop
into
cmp
cld
imul
out
pop
out
xchg
fisubrl
or
test
std
mov
insl
call
testl
mov
lods
dec
add
es
arpl
pop
scas
sub
cltd
dec
jbe
fs
dec
outsl
cmp
dec
adc
or
pop
adc
clc
dec
mov
jecxz
push
test
or
mov
add
mov
fwait
aam
add
jno
loopne
pop
or
mov
pop
or
mov
or
mov
or
test
pop
bnd
in
icebp
jecxz
icebp
inc
ljmp
stos
and
rclb
and
call
xor
or
testb
iret
ss
in
icebp
xor
cwtl
in
icebp
movsl
insl
aas
rcll
in
sbb
adc
aas
rcll
nop
adc
addb
lock
adc
adc
mov
mov
inc
fwait
rol
cmc
pop
jb
sub
and
lock
loope
dec
fisttps
call
adc
add
repnz
cwtl
jg
cli
push
sbb
testb
mov
mov
mov
adc
lret
ret
or
push
inc
cmp
cli
daa
testb
mov
lods
pop
sub
sbb
int3
inc
pop
cmp
insb
sub
xor
insb
sbbl
scas
xchg
or
mov
cmp
es
and
dec
mov
dec
movsb
cmp
fs
mov
adc
xchg
cmp
test
mov
xor
push
sub
add
ss
lods
pop
or
push
repnz
outsb
mov
add
and
adc
movb
les
lcall
je
pop
stos
sub
dec
jne
mov
insl
mov
into
and
lock
mov
sti
insb
mov
out
fs
xorb
fstpl
jmp
call
cld
xor
mov
rorb
stos
jmp
cmpsb
cli
sbb
icebp
imulb
sub
jp
add
sub
or
push
xor
or
push
xchg
xorb
out
sarb
push
andb
xlat
scas
add
jg
ffreep
adc
cmp
mov
imul
pop
std
mov
xor
pop
sbb
ljmp
loope
fs
and
fstp
loop
aaa
jmp
push
stos
mov
loopne
cli
stos
jne
cmc
clc
and
daa
mov
sahf
sbb
lea
dec
test
mov
sahf
and
pop
and
mov
mov
mov
pushf
decl
jae
xchg
sbb
sbb
incl
add
js
jae
sti
mov
or
enter
push
dec
dec
add
mov
rcl
xor
popf
jl
mov
push
jl
xor
add
jbe
inc
fsubrl
inc
mov
mov
dec
insb
pop
inc
fwait
mov
ja
dec
nop
add
aaa
enter
sub
pushf
mov
hlt
stc
and
cwtl
test
jmp
repz
mov
jne
pop
rol
add
dec
sbb
popa
shlb
and
xchg
lret
pop
inc
idivb
addr16
roll
xchg
and
js
mov
mov
and
bound
adc
push
fisttps
inc
aaa
in
ret
sub
mov
aaa
cwtl
cmp
push
lahf
xor
push
sbb
fsts
xchg
stos
jl
sub
inc
fmulp
sbb
out
test
mov
sahf
fcoms
push
movsb
cli
pop
mov
les
shlb
sub
xor
or
xor
shrb
stc
das
out
aas
xchg
out
cmpsl
sbb
mov
lcall
xchg
ret
dec
xchg
inc
loopne
or
add
xchg
pusha
ljmp
push
pusha
mov
movsb
movsb
and
dec
adc
mov
stos
sub
sub
negb
fmul
and
mov
sar
lahf
cmp
inc
fisubs
aaa
cs
add
test
xchg
in
sbb
std
lock
bound
cli
cmp
push
adc
add
push
mov
dec
push
mov
xorb
unpckhps
inc
push
es
lds
cmp
push
rol
mov
sub
mov
cwtl
in
add
sarb
scas
sti
inc
je
xchg
adc
or
or
inc
lds
addr16
mov
idivb
je
xchg
xor
pop
xchg
test
stos
fmull
xor
test
sbb
mov
jl
loopne
push
cwtl
outsb
pop
pop
or
ljmp
and
sub
ss
lods
movsb
mov
ret
cltd
push
and
mov
daa
fs
mov
sbb
jb
imul
jmp
inc
dec
int
pusha
mov
jns
daa
mov
in
inc
data16
int3
cli
arpl
add
push
push
dec
lret
cwtl
sbb
loope
pop
test
and
repz
push
push
push
mov
fs
xor
rorl
insb
and
lret
adc
hlt
jg
rclb
outsl
mov
and
pop
cld
adc
popf
cmp
dec
dec
lock
xchg
xor
mov
lret
pusha
inc
shrb
and
cli
cli
lods
jnp
sbb
add
and
and
std
sbb
mov
mov
pop
es
repz
int
jg
aaa
dec
into
and
lods
jmp
cmp
mov
or
mov
cmp
and
or
push
test
insb
pop
xor
pushw
push
dec
or
mov
pop
stos
mov
pop
adc
push
mov
jne
hlt
xchg
mov
ljmp
cmpsl
sub
out
mov
mov
lret
outsb
add
mov
sbb
hlt
mov
pminsw
mull
addl
mov
fldl
push
adc
arpl
pop
pushf
mov
sbb
sbb
jno
jecxz
je
add
pop
loopne
fcoms
dec
cmpsl
sar
mov
cmp
cmp
xor
nop
cmpsb
pop
stos
aaa
push
fnstcw
add
xchg
jb
fiadds
cli
bound
xor
aad
pusha
dec
out
bound
shr
push
xchg
imulb
sub
decl
mov
ja
and
es
jbe
cmp
sbb
in
dec
inc
nop
jle
lahf
pop
xor
fsub
add
add
popaw
pop
les
adc
ret
pop
ja
jl
and
pop
sti
jl
mov
pop
rcrb
cmp
jecxz
cmp
jg
cmc
imul
in
mov
adc
es
fwait
push
xor
pop
sti
ja
dec
fistl
sub
sarl
dec
pop
rcl
mov
mov
clc
repnz
jmp
mov
leave
xor
dec
pop
inc
pop
shll
fimull
add
aad
dec
fdiv
aas
inc
add
mov
xor
pop
scas
in
rol
and
mov
imul
idivl
mov
mov
push
and
ljmp
sti
dec
pusha
push
fs
dec
shrl
pop
dec
aaa
rcrb
add
xchg
fdiv
xor
add
pop
cmp
sub
sbbb
mov
pop
fbstp
arpl
mov
cwtl
pop
push
out
pushf
sti
das
inc
mov
push
divb
ljmp
shll
pop
add
aaa
push
mov
shlb
push
xchg
jb
xchg
mov
dec
aas
fldcw
outsb
ret
inc
daa
push
dec
ja
cmc
ljmp
sub
ljmp
ret
xor
int3
andb
xchg
insb
addr16
je
sbb
ds
and
pop
pop
icebp
cli
mov
cmp
push
dec
pop
mov
adc
icebp
jp
aaa
cwtl
xor
push
test
insl
les
pop
or
fisttps
or
aad
xchg
ljmp
cmp
sarl
aaa
sbb
subl
negb
jge
pop
push
or
mov
cs
pop
sub
mov
clc
movsb
nop
lcall
jbe
loopne
xor
jl
xchg
jmp
pop
push
imul
sub
and
lea
cmp
sahf
mov
jbe
and
push
cld
xchg
pop
jb
cmp
stos
mov
jp
push
lds
mov
rorb
cli
pusha
popf
pop
fmuls
cmp
adc
dec
leave
or
js
sub
mov
and
inc
stc
pop
and
cmc
and
icebp
dec
pushf
fildll
movsb
in
and
clc
lods
and
arpl
jp
push
sub
mulb
mov
xchg
xor
sub
insl
lods
push
mov
das
fldl
sbb
jmp
jle
std
insl
sti
sub
mov
jecxz
sub
shl
jmp
jl
add
pushf
xor
xor
shlb
add
jle
add
sub
pop
pusha
movsl
nop
testb
xchg
xor
insb
je
dec
imul
cmp
into
insb
mov
lds
jp
mov
test
shr
push
movsb
push
push
jne
pop
jmp
and
push
imul
in
out
jle
inc
test
cmp
das
frstor
rclb
in
cli
cld
lahf
pop
lds
adc
mov
inc
dec
das
mov
mov
clc
pop
std
push
fs
sti
cltd
xor
inc
add
xor
xor
push
jo
xchg
jge
mov
cmpsl
dec
in
fdivrs
fs
cmp
sub
cmp
fisttps
push
popa
push
out
sbb
add
pop
cmp
cmp
mov
ss
add
jmp
imul
mov
daa
cmp
fs
and
int
mov
jae
inc
aam
cmp
lock
lock
pop
das
add
test
jg
adc
ja
fs
pusha
ljmp
lock
dec
shrl
push
loop
xor
cmp
fidivrl
sub
or
outsb
jmp
adc
movsb
and
stc
mov
mov
push
sub
iret
sub
cld
mov
jnp
cmp
leave
mov
mov
rorl
cltd
sbb
sarb
lahf
sbb
clc
xor
lock
lods
nop
gs
int3
loop
mov
sub
out
fsubs
icebp
std
clc
daa
aaa
outsb
dec
scas
adcb
and
cmp
pop
cmp
test
je
imul
cli
xchg
hlt
adc
movsb
nop
out
and
inc
outsb
inc
bound
rorb
mov
mov
and
mov
cwtl
inc
enter
lret
or
jecxz
xchg
push
xchg
lods
pop
movsl
fmulp
sub
jae
jnp
bound
mov
daa
push
fiadds
jae
adc
rcr
push
into
mov
sti
adc
xchg
dec
daa
nop
hlt
pop
enter
push
mov
andb
push
das
call
cmp
xor
dec
outsl
clc
es
ljmp
jne
inc
fiaddl
popf
das
xor
pop
out
xor
cmp
ss
cmp
fwait
xor
jg
test
into
imul
dec
xor
mov
fsubrl
jp
xchg
cmc
xchg
push
and
cwtl
and
push
sub
adc
or
ss
loope
loop
addr16
adc
aas
fidivs
cld
sub
mov
movsl
jmp
mov
push
mov
push
test
aas
xor
fisttps
and
dec
push
in
xor
adc
fucom
mov
ficoml
dec
cmp
pushf
dec
add
push
push
mov
cmp
enter
inc
iret
fdivl
inc
scas
mov
jge
push
pop
sbb
xchg
or
mov
sbb
shrb
xorb
push
sub
or
cmp
inc
lock
inc
lret
iret
cmp
and
repz
sub
dec
xor
iret
xchg
or
data16
cmp
sub
es
sbb
and
jecxz
sbb
lock
or
mov
aas
xor
inc
lock
pop
jmp
imul
test
sahf
inc
mov
fidivl
leave
add
fsubrl
xchg
mov
icebp
cmpsl
popf
test
or
xchg
sub
mov
jne
pop
fistl
es
adc
mov
pop
cmc
jo
test
inc
stos
mov
push
fdivrs
stc
cli
enter
xchg
je
dec
add
test
add
add
adc
sub
cmp
hlt
adc
dec
inc
or
pop
lahf
jecxz
and
jne
jns
addl
push
adc
jle
mov
adc
and
add
or
mov
ret
cmp
mov
pop
enter
sbb
mul
out
push
dec
sbb
xchg
or
ficomps
mov
sub
mov
repnz
lret
jge
sub
out
out
ret
or
pop
loopne
xchg
push
mov
inc
pusha
aaa
jecxz
nop
mov
dec
push
add
adc
pop
pop
or
inc
adc
lahf
lea
add
xor
dec
in
pop
sti
shr
cmpsl
push
fnstsw
pop
inc
int
aam
test
je
lret
adc
jg
dec
or
pop
mov
xor
or
inc
shr
test
es
mov
into
call
push
cmpsb
lods
xchg
mov
fs
dec
aas
subl
and
pop
cmp
and
xchg
push
pop
sahf
adc
fiadds
cmp
fdivrs
mov
scas
cmp
xchg
mov
shll
clc
clc
ja
and
imul
lcall
inc
mov
scas
mov
jb
imul
xchg
fwait
call
stos
push
fwait
push
testl
scas
pop
cmp
or
mov
out
jg
sub
test
sub
adc
push
jg
xor
xchg
push
mov
lods
pop
mov
xchg
push
xor
loop
roll
xchg
cld
xchg
in
or
std
adc
fwait
mov
outsb
ret
jg
sub
inc
outsb
mov
mov
mov
xor
push
je
add
push
add
mov
adc
jnp
xchg
xchg
pop
lea
mov
test
pop
bnd
popf
dec
mov
mov
xchg
jmp
or
test
cltd
loopne
in
sub
mov
stos
arpl
daa
xchg
jecxz
inc
fsts
push
sub
and
push
scas
push
cltd
mov
pop
pop
cltd
xchg
lahf
repz
mov
iret
inc
jl
pop
sbb
enter
insb
add
or
cmpsb
shll
inc
dec
pusha
sbb
dec
xchg
outsb
scas
dec
push
fistpll
nop
push
leavew
dec
icebp
mov
loop
and
fwait
cmpsl
add
shrl
aam
add
xor
push
push
cmpsb
hlt
fmull
int3
test
pusha
jmp
filds
clc
pusha
cli
inc
rcl
stc
xchg
dec
cmp
jo
iret
adc
or
push
sub
mov
jno
std
add
call
cmp
pop
xor
mov
sti
js
divl
or
mov
decl
xchg
les
addr16
sti
dec
sub
push
je
insb
adc
push
cmp
adc
cmp
inc
jle
test
insl
push
ja
mov
or
mov
scas
adc
add
inc
fcomps
jns
and
xchg
cwtl
lds
push
pop
mov
arpl
loop
push
push
sbb
outsb
sub
cmp
cld
jp
aam
add
xlat
dec
sbb
adc
andb
scas
push
mov
jl
jg
scas
je
ret
sub
loope
push
inc
in
cmp
dec
jge
jb
aas
sbb
enter
jmp
insb
push
flds
sbb
inc
mov
xchg
rcll
mov
es
or
add
and
jnp
lea
add
or
pushf
outsl
pop
mov
xor
mov
jge
shlb
dec
fbstp
enter
pop
xchg
xor
outsb
jecxz
and
loopne
xor
jae
push
fs
xor
dec
jae
dec
pop
stos
push
push
or
sub
mov
orl
sbb
cmp
cmp
sbb
ja
and
and
push
cli
pop
inc
jge
arpl
popf
jecxz
xchg
cltd
pop
dec
xlat
add
fst
pop
stc
arpl
sbb
aam
and
jo
jo
movsl
mov
test
xchg
and
dec
in
sub
xlat
cmpsb
sysexit
loopne
pop
mov
testl
test
jp
xchg
mov
jp
cmp
cld
enter
inc
or
or
jne
jne
insb
fcoms
pusha
popf
addr16
push
push
aas
or
bound
cmp
pop
sub
mov
cmp
sub
jl
xor
sti
mov
mov
mov
aad
cmp
lret
nop
outsb
or
xchg
push
insb
and
fsub
sahf
sbb
icebp
hlt
mov
xchg
aas
fstpl
sahf
imul
and
cmp
add
fucom
fimuls
insl
imul
movb
pop
adc
mov
pop
ret
or
testl
shrl
xchg
dec
adc
sbbb
cmp
jp
or
bound
sbb
xchg
cltd
dec
xor
mov
scas
sahf
pop
mov
pushf
notb
cmp
push
loopne
ret
dec
cmp
ds
je
jp
xchg
sub
subl
pushf
push
adc
jp
mov
push
sub
sbb
pop
dec
imull
ss
pop
aas
mov
insb
pusha
sbb
loopne
or
les
sar
mov
pop
cmp
xor
xor
cli
arpl
cmp
call
ja
lahf
mov
and
aas
test
scas
adc
pop
lcall
cmp
dec
mov
inc
jno
lcall
fmuls
fisttpll
mov
aaa
data16
nop
in
ja
dec
jle
dec
std
mov
popf
pop
sub
idivl
shlb
xor
ss
int3
cmp
push
sub
cmp
lea
imul
fucomp
dec
aas
mov
pop
pop
ljmp
imul
adc
movsl
sbb
mov
mov
or
sub
push
mov
mov
gs
jb
lcall
mov
and
leave
int3
mov
sbb
mov
pushf
cmp
imul
pusha
and
cs
push
pop
cs
cld
and
lds
push
in
lret
shl
ja,pn
frstor
mov
jmp
jno
pop
push
add
loope
imul
add
icebp
mov
loope
cmp
sub
fcomps
dec
lcall
out
sbb
je
mov
aas
lds
lret
ficoml
lahf
adcl
jmp
xor
add
imul
sbb
dec
jp
inc
into
repnz
mov
scas
cmc
add
js
push
add
pop
ret
adc
pcmpeqb
inc
pop
bound
sub
add
dec
scas
jp
pop
fs
sbbl
movsl
pushf
mov
pushl
mov
stc
pop
sub
pop
scas
pop
test
cmc
mov
push
clc
dec
mov
out
dec
int3
mov
xor
mov
push
inc
cmpsb
mov
xchg
pop
mov
les
xorl
inc
leave
clc
mov
in
adc
and
lcall
xor
dec
je
in
mov
mov
aaa
dec
mov
nop
or
dec
in
pop
sbb
xor
sub
push
test
rorb
dec
lods
jo
pop
mov
insb
xor
mov
daa
sbb
pop
pop
xchg
pop
mov
inc
cmp
pop
mov
clc
bound
nop
movsl
in
push
ss
pop
fsts
dec
cmp
mov
push
repz
jmp
push
fwait
jmp
test
jmp
test
sub
insb
mov
aaa
mov
pop
or
dec
pop
popf
repnz
mov
jmp
punpckhwd
sbb
dec
lds
fidivrl
or
ss
sbb
loope
dec
or
jge
add
fadd
movsl
pop
dec
dec
dec
je
sub
mov
jp
fisubrl
repnz
fists
mov
add
aad
adc
xchg
lods
nop
popf
lea
push
push
idivb
pop
inc
cwtl
ds
popf
jne
add
adc
rol
movsl
sysexit
jne
jno
jmp
hlt
dec
mulps
lods
in
cmp
cmc
xor
ret
or
cmp
xor
jmp
loopne
ss
loopne
push
cltd
pop
aas
push
hlt
adc
pop
dec
xor
pop
shrb
test
pop
sahf
adc
aad
and
dec
sub
daa
dec
out
icebp
test
js
ficompl
repnz
das
jo
into
dec
out
cltd
mov
adcl
mov
mov
mov
mov
jecxz
mov
mov
fwait
daa
xchg
shlb
jne
mov
xchg
pop
add
in
xor
scas
inc
push
sarb
jns
fwait
addr16
sub
sub
lahf
push
mov
aaa
das
int3
mov
mov
int
adc
mov
hlt
mov
scas
xchg
mov
enter
push
addr16
jp
xchg
push
push
stc
out
gs
mov
dec
out
loop
clc
mov
inc
mov
and
fdiv
mov
mov
enter
pusha
push
aad
orl
xchg
sbb
cmp
sbb
push
jmp
test
inc
rcl
xchg
cmp
dec
mov
jo
fwait
mov
std
sahf
ret
jge
inc
dec
pop
gs
ljmp
unpckhps
xor
test
test
mov
fidivrs
jg
inc
or
inc
mov
inc
rcrb
dec
pop
lcall
lods
dec
xchg
jne
repnz
pop
lds
mov
mov
movsb
push
nop
dec
aad
rcrb
or
sub
add
loopnew
xchg
ss
mov
mov
xor
bound
clc
out
cwtl
lea
or
das
fsincos
push
dec
cld
push
js
std
mov
cwtl
pop
dec
pop
dec
push
jo
push
sub
pop
or
js
pushf
lcall
ja
sbb
mov
insb
push
int3
iret
mov
mov
dec
pop
daa
fsubrl
or
pop
daa
rclb
mov
push
add
dec
dec
aas
cmpsl
and
inc
add
and
add
bound
mov
mov
cmp
jle
es
das
push
stos
insl
or
stos
sti
loopne
loop
daa
jno
xchg
or
fistpl
mov
or
nop
gs
mov
or
aaa
and
es
test
add
cs
push
mov
sub
mov
int3
in
pop
inc
xchg
cmp
sub
push
loop
fs
sbb
adc
je
leave
add
sbb
test
ret
imul
addr16
andb
mov
popf
jle
cli
sarb
enter
sti
or
jo
push
addr16
push
out
add
shl
das
dec
pop
add
and
sti
lret
test
loop
das
sahf
aas
inc
stos
push
jno
ds
push
mov
mov
je
pushf
popf
jo
mov
loop
lahf
lcall
pushf
hlt
xchg
roll
jecxz
movsb
outsb
adc
jae
loop
popa
lods
lods
pop
loop
push
inc
pop
int3
mov
push
inc
cmp
pop
mov
std
clc
enter
mov
int
mov
sbb
pop
clc
pop
push
jp
xchg
gs
sahf
repz
and
leave
dec
mov
int3
shlb
icebp
shlb
gs
inc
jge
dec
addb
mov
nop
in
cwtl
sbb
mov
mov
sbb
cmpsl
inc
mov
dec
xor
iret
adc
inc
ror
in
mov
fwait
cmp
cmp
sub
jle
int3
jle
xchg
mov
mov
out
and
inc
subb
test
mov
stc
std
inc
fimuls
subb
mov
arpl
xor
mov
aaa
dec
roll
sbb
mov
mov
clc
cld
addr16
cmp
rcrb
ljmp
push
xchg
scas
fisttpll
push
mov
or
mov
fidivs
mov
loopne
or
sub
lahf
inc
scas
push
sbb
ficoms
or
inc
lods
xchg
xchg
enter
pushf
sti
lods
clc
sub
xor
imul
hlt
pop
cmp
ljmp
inc
pop
jp
div
mov
mov
imulb
push
push
lods
out
fs
pusha
femms
pop
cmpsb
cmc
sbb
addl
sub
jb
sti
loope
fildll
and
out
popa
mov
and
inc
int3
pop
sar
rolb
fs
mov
jl
xchg
push
cmp
or
rorb
data16
xlat
mov
jno
mov
jnp
enter
dec
push
cmp
and
jne
leave
or
ja
leave
mov
cmpb
mov
call
fisttps
lods
adc
jno
rcll
jnp
fidivs
mov
push
insb
insl
xor
push
mov
je
pop
and
or
cmpsb
push
xchg
pushf
xchg
and
leave
dec
mov
add
dec
pop
adc
xchg
mov
mov
lods
shrb
jb
scas
mov
mov
lds
and
cmp
pop
jbe
xchg
je
loop
sub
sub
push
pushf
stc
add
sbbb
push
inc
pop
and
sbb
dec
rcrl
sbb
cmc
cmpsl
js
push
fdivrs
pop
arpl
popf
inc
fnsave
sahf
cmpsb
daa
inc
fcoml
ja
movl
rorl
mov
shll
and
mov
mov
aas
cmpsb
lcall
lds
mov
inc
and
test
sbb
into
divl
pop
xchg
imul
bound
cmp
jno
dec
mov
pop
cmp
shll
je
push
adc
push
push
cmp
adc
add
je
fisttps
dec
mov
mov
pop
je
fmul
sub
jl
pop
iret
or
mov
dec
mov
cwtl
jp
imul
aad
pop
sbbl
push
push
sahf
xchg
dec
mov
pop
cmc
pop
cmp
shll
adcl
mov
or
xorl
push
in
mov
aam
mov
mov
push
sub
push
mov
sbb
xor
mov
push
outsb
inc
jns
pop
push
sbb
jns
and
inc
xchg
cld
outsl
iret
dec
sbb
punpcklwd
sti
stos
push
in
sbb
xor
push
orb
data16
xchg
cmp
mov
mov
adc
testb
and
arpl
neg
push
sbb
sub
mov
lret
sub
sbbl
inc
sbb
xchg
sbb
xchg
pop
push
aam
cmpsb
pop
pushf
or
es
adc
jmp
insb
cmc
pop
mov
lahf
scas
popa
dec
cmpsl
leave
pop
push
inc
or
jno
mov
aaa
jns
xor
or
shl
scas
jns
and
ja
inc
pop
sub
data16
inc
push
popf
sbb
ljmp
movl
xchg
cld
dec
xchg
xchg
in
pushl
es
or
xchg
aas
fcompl
push
push
mov
clc
mov
mov
int3
mov
sub
dec
into
sti
pop
fidivrl
jns
sahf
mov
clc
push
dec
cs
sbb
cmp
test
and
lcall
xchg
hlt
stc
loopne
stos
pop
fldenv
adc
jne
jg
shlb
add
pop
sbb
or
lock
dec
mov
push
scas
fwait
aam
jmp
sub
mov
test
es
std
mov
add
fdivr
mov
dec
mov
addb
jge
sub
push
icebp
je
jne
xchg
stos
jne
testb
mov
es
jb
ret
mov
dec
pusha
mov
das
push
dec
cmp
xor
mov
imul
add
stos
and
add
nop
push
out
fcmove
push
into
cltd
inc
jmp
push
sbb
adc
dec
push
mov
sub
sbb
pop
jmp
and
dec
jae
sbb
test
pop
ret
cmp
pop
mov
scas
iret
mov
jp
mov
mov
lods
jo
dec
and
nop
xchg
lahf
mov
ljmp
pop
xchg
add
cltd
mov
repnz
cmp
in
popa
dec
jecxz
adc
and
rcrb
pop
mov
clc
cmc
sbb
movsb
mov
sbb
mov
jnp
mov
loop
or
cmp
movsb
sbb
cmp
ficompl
jbe
xchg
aad
jmp
add
aad
mov
dec
jbe
inc
inc
dec
mov
sub
add
nop
mov
push
aas
insl
and
arpl
mov
pop
sbb
lcall
jg
jge
out
inc
test
imul
movsb
inc
jge
adc
adc
adc
cmp
or
clc
and
imul
fdivl
dec
cmpb
gs
xor
and
out
xchg
and
and
or
mov
pop
or
sub
pop
and
dec
ljmp
mov
adcb
out
icebp
mov
testl
dec
aad
dec
out
push
or
push
sub
and
dec
test
loop
mov
dec
fmuls
shrb
clc
push
sub
add
mov
pop
pop
sub
les
pop
sbb
out
sub
jge
iret
dec
jl
and
or
leave
dec
cmp
add
push
fmul
dec
jne
mov
aad
inc
dec
adc
or
jb
pop
lods
cmpsb
imul
in
shll
test
rcrb
stos
or
in
mov
inc
repnz
mov
aas
push
movsb
imul
push
lods
insl
pop
iret
push
jne
out
and
push
and
dec
dec
inc
pop
les
pop
adc
cmp
repnz
push
push
stos
mov
cmp
cmp
jo
push
jae
repnz
sub
outsl
int3
xchg
adc
push
rcrl
sub
push
loopne
lcall
mov
dec
cmp
lds
icebp
inc
push
and
sbb
and
dec
add
in
rcr
dec
mov
xchg
cli
data16
out
bound
jae
sub
std
cmp
pusha
dec
lret
lcall
scas
inc
pop
popa
les
popf
push
mov
cmc
jne
sbb
std
pop
dec
mov
icebp
xor
and
cs
adcb
push
adc
fmull
roll
cmp
scas
loop
sub
push
cli
mov
fwait
cmp
jg
xor
lea
clc
push
movsl
out
mov
leave
test
addl
xor
mov
push
inc
push
or
pop
testb
xor
aas
cwtl
sti
push
add
jle
dec
and
js
repz
adc
pushl
jo
aas
arpl
int
cmp
sub
pushf
inc
les
jle
pop
xor
mov
xor
orb
mov
rolb
outsl
out
mov
clc
mov
outsb
into
out
std
pushf
jmp
and
int3
push
jp
fsubl
inc
jge
fwait
ret
xor
mov
lods
stos
repz
lds
lahf
int3
les
dec
dec
or
sub
mov
ret
jge
call
hlt
scas
pop
adc
mov
jbe
or
adc
fs
sbb
pop
xor
add
mov
mov
adc
xchg
aad
jp
rorl
lret
and
pusha
leave
add
js
adc
outsb
mov
cmp
dec
lods
cmp
addb
lcall
jle
out
cmpsl
hlt
or
sub
dec
xchg
add
and
jae
out
cmp
inc
lcall
add
dec
mov
pop
je
clc
stc
cmc
pop
pusha
aas
jl
outsb
xchg
and
mov
mov
shrb
in
rorl
pop
pusha
mov
mov
ja
leave
cmp
insb
dec
pop
cmpl
mov
pslld
dec
orb
mov
dec
and
push
rcrb
mov
mov
push
xchg
pop
cmp
stos
jbe
rcll
jg
mov
sahf
popa
adc
shll
movsl
cltd
lret
in
inc
notl
cltd
cwtl
inc
pop
or
add
imul
dec
dec
cmp
sbb
push
test
jns
xor
cmp
xlat
aaa
clc
mov
and
lock
or
in
ret
data16
sar
push
stos
scas
fsub
xor
push
mov
cli
in
cld
sbb
or
cmp
call
adcb
dec
outsl
inc
ja
cmp
dec
movaps
add
xchg
and
inc
out
add
or
int3
fldl
pop
jb
adc
pop
mov
iret
jae
xor
adc
inc
das
sub
adc
fstpl
popa
adc
inc
jp
aaa
jmp
mov
xchg
sti
mov
dec
or
test
outsl
adc
push
es
nop
cld
out
jne
pop
outsb
sti
cmc
cmp
xor
fldl
stos
shlb
test
and
shrb
jne
add
aas
fbld
pop
sub
cmp
xchg
sub
push
fmul
imul
enter
lahf
mov
pop
pop
ds
add
xor
or
negl
leave
inc
cmpsl
cs
jne
xor
mov
push
ss
je
pop
loopne
and
dec
sahf
mov
push
push
loope
dec
nop
fildll
pop
loop
jge
repnz
inc
and
jnp
pop
cmc
push
jae
mov
sahf
jle
aas
out
adc
xchg
cmpsl
mov
out
pop
sbb
shlb
fisubs
push
mov
ret
push
sahf
xor
jns
test
out
inc
sub
les
hlt
rorl
push
jl
dec
cmp
leave
mov
shl
or
cltd
adc
cli
and
scas
stos
ljmp
cmp
inc
movsl
inc
mov
hlt
das
mov
or
dec
scas
ljmp
xchg
inc
and
jle
sti
lcall
mov
std
jns
mov
add
inc
sub
pop
add
cmp
mov
nop
pop
int3
xchg
xor
sub
fsub
mov
xchg
add
aaa
into
sbb
leave
fdivrl
rolb
adc
popf
shrl
sub
roll
push
mov
push
mov
push
movsl
cmp
pop
cli
mov
xchg
jnp
xor
test
xor
inc
out
movq
xor
out
iret
xchg
das
mov
into
adc
lods
lcallw
xchg
sbbl
or
xor
movsb
pop
std
cmc
dec
test
mov
inc
insl
std
xchg
push
adc
mov
and
imul
pop
fs
xchg
sbb
cmp
jno
dec
or
pop
mov
fwait
cmp
ds
sbb
sbb
pop
push
ss
adc
stc
xchg
xchg
stc
pop
stc
popa
lock
scas
xchg
xor
sub
push
adc
ja
mov
pushl
insl
mov
movsb
xor
shrl
jno
iret
shll
fs
mov
add
pop
add
jp
leave
ss
pop
je
mov
push
push
ret
sarl
je
mov
fs
cltd
movsl
cltd
and
fst
outsb
xchg
loop
in
ret
push
mov
hlt
and
add
and
lahf
sub
popa
adc
xor
dec
sbb
movsl
or
sbb
aas
cmp
test
mov
sti
xor
mov
shlb
ss
int
imul
xor
movl
dec
xchg
aaa
push
mov
jae
xor
xor
xor
pop
std
shll
mov
clc
inc
loope
outsl
shl
test
cmpsl
clc
shrb
fsubs
loop
shll
jne
out
mov
mov
inc
roll
push
push
ret
mov
clc
mov
and
and
outsl
mov
imulb
mov
pop
lcall
cmp
dec
loopne
jbe
test
aam
cmpsl
je
pop
pop
mov
ret
loop
mov
sbb
jo
adc
repnz
xor
ljmp
cwtl
jo
sbb
mov
push
adc
jns
dec
test
pop
push
jb
dec
jl
dec
lock
cltd
pop
sbb
in
mov
rcrb
int3
cltd
jo
pop
xchg
mov
cmpsl
push
into
pop
pop
mov
jne
jnp
jle
xor
sbb
jnp
rcl
cmp
pop
mov
vmwrite
mov
mov
in
cli
xorb
xchg
jo
push
out
jle
lahf
lds
rcr
ds
and
sub
sahf
jle
pop
mov
shll
jnp
lea
in
sub
inc
mov
adc
mov
adc
dec
fwait
pop
cmp
fidivrs
pop
or
push
shrl
fiaddl
xor
adc
mov
lcall
and
adc
notl
test
fists
and
fisttpl
in
pushf
jb
sub
jne
cmp
or
and
rorb
dec
mov
jp
xor
or
sub
cmp
divl
cmc
mov
clc
ds
sbb
mov
mov
pop
lahf
sbb
add
mov
mov
cs
mov
fcmovu
adc
push
fisubs
push
push
loopne
mov
mov
push
sub
xor
push
and
call
int3
in
icebp
out
and
push
enter
mov
sbb
pop
mov
adc
jb
js
pop
test
ja
imul
add
xor
mov
xchg
pop
lock
sbb
inc
mov
bound
mov
add
shlb
mov
dec
stc
stos
les
pusha
es
mov
sbb
cmp
inc
jmp
stos
jbe
bound
sub
mov
lods
inc
and
inc
pop
mov
mov
and
mov
pop
ret
test
sbb
inc
fucomi
negb
mov
pushf
pop
adc
sahf
dec
arpl
nop
outsl
loopne
jmp
mov
cmpsb
cmp
mov
sub
sub
dec
mov
add
jl
inc
rcl
adc
cwtl
iret
xchg
dec
icebp
test
pop
sar
jo
bnd
movsl
add
test
test
push
inc
and
hlt
fwait
mov
pop
shr
pushf
aam
cmpsl
push
lret
cmc
mov
outsb
mov
icebp
cli
les
andb
push
sub
jl
loopne
and
cmpsb
les
into
mov
jecxz
in
cmp
cmp
sahf
xchg
shll
test
pop
out
adc
dec
enter
sub
jno
pushf
outsb
idiv
ds
outsb
jge
ds
jmp
fmull
mov
xchg
xchg
lahf
das
cmc
or
sub
mov
mov
xor
dec
cmp
inc
fcompl
mov
push
pop
jnp
lds
cmp
jmp
outsl
dec
lds
shll
add
mov
aam
xor
mov
int
xor
mov
sub
inc
movsb
or
xor
outsl
xor
lcall
mov
mov
popa
xchg
in
jno
sbb
cmp
mov
add
shl
icebp
jae
cmp
pop
cmp
sbb
inc
enter
scas
mov
mov
inc
cltd
mov
xlat
cmc
or
jb
out
jb
fildll
int
or
sbb
sub
and
inc
or
ljmpw
push
cmp
cmp
inc
adc
cmp
push
lock
mov
adc
or
jo
mov
push
and
call
test
bound
les
imul
adc
xlat
dec
or
pop
movsb
repnz
inc
mov
nop
cmp
xor
dec
std
fcom
sbb
xlat
xchg
xor
iret
and
xor
xchg
mov
push
enter
lock
cmp
shll
inc
dec
sub
out
dec
push
cmp
mov
insl
or
xchg
jno
sub
test
dec
add
pop
repnz
iret
adc
int3
inc
rcrl
cmp
lds
hlt
iret
cmpsl
outsb
fisubrs
ds
jecxz
jmp
xor
pop
inc
sub
mov
sbb
pop
xor
dec
push
and
pop
int3
jae
pop
cltd
dec
leave
jg
push
scas
push
fs
and
xorb
das
ss
in
push
hlt
ss
push
aaa
sbb
push
and
xchg
dec
sub
in
xor
les
loop
movsl
inc
jns
cmc
or
imul
insb
push
fistpl
jb
lods
call
push
push
stc
sahf
repz
jb
adc
faddp
insl
xlat
jg
xchg
lods
popf
sti
mov
and
test
sbb
add
mov
dec
sbb
jbe
roll
cmp
icebp
lret
outsl
dec
mov
xchg
or
je
pop
push
sub
insb
loopne
xor
daa
scas
repnz
sub
cmp
adc
leave
pushf
and
adc
push
mov
imul
jecxz
xchg
dec
mov
and
aaa
je
xchg
xor
add
push
jecxz
hlt
mov
fildll
out
sub
out
cli
pop
lock
add
mov
fs
cwtl
inc
ret
mov
ret
int3
dec
jae
fisubs
cmp
mov
mov
xor
ja
mov
cmp
gs
xchg
js
cmpsb
jnp
dec
cmp
test
fdivl
jg
pop
or
into
pusha
sbb
or
pop
push
and
hlt
dec
mov
pop
adc
into
cmp
or
mov
and
leave
ds
ficoms
das
xor
data16
insl
adc
mov
add
arpl
mov
mov
push
dec
jp
aaa
sti
loope
ljmp
lcall
dec
imul
adc
insb
and
inc
sub
test
shll
mov
pusha
sbb
mov
dec
shlb
lock
xchg
xchg
xor
jge
xor
lock
test
push
mov
stos
cmp
ljmp
addps
aas
addr16
daa
in
inc
enter
ss
mov
pop
push
dec
jecxz
insb
insb
and
jne
xor
ret
das
xor
xchg
inc
fldenv
sub
ljmp
pop
pop
ds
pop
jbe
jle
cmp
cmp
xchg
mov
adc
sbb
add
pop
sub
mov
dec
bnd
and
iret
dec
cmp
adcl
or
or
lcall
pop
dec
lock
inc
mov
cmpsl
cmc
notl
shl
and
popa
aad
scas
rol
cs
movsl
cmp
push
mov
mov
inc
pop
or
je
and
mov
fbld
push
fisubrs
or
cmc
das
je
mov
pop
jo
cmc
pop
inc
jge
inc
hlt
xor
cmp
pop
and
dec
iret
rorb
pop
call
lods
jmp
pop
cmp
lahf
inc
push
fnstenv
mov
push
ficomps
pop
arpl
mov
xchg
lret
sub
push
mov
pusha
fldt
mov
pop
movsb
arpl
stc
cltd
add
in
int3
pop
adc
push
xlat
push
adc
nop
jl
fwait
xorb
sub
cmp
clc
fsubl
insb
inc
or
call
and
add
pop
push
xchg
mov
inc
out
xor
repnz
in
jp
adc
jno
shrb
jb
fbld
es
dec
or
push
cmp
je
popa
mov
fcompl
inc
and
dec
leave
inc
mov
mov
xlat
mov
jmp
ret
or
arpl
or
pop
mov
lds
mov
aad
jb
or
fisttps
inc
add
pop
push
out
xchg
sbb
sbb
xlat
cli
movsl
hlt
jbe
mov
xchg
push
xchg
sbb
pop
imul
pop
jecxz
negb
inc
lods
loopne
jecxz
loopne
sbb
mov
ret
or
aam
xor
loopne
mov
cmpsl
shlb
push
out
ja
clc
jmp
xor
aam
xor
aad
inc
sub
into
icebp
lret
lahf
test
pusha
push
cld
je
push
js
std
pop
jecxz
and
jecxz
vorps
stc
jecxz
insl
and
adc
ror
inc
int3
mov
je
pop
shll
add
add
cmp
loopne
out
stc
shrb
test
dec
std
stos
dec
lret
fdivl
jecxz
insb
cmpsl
jmp
jo
adc
repz
xchg
inc
adc
cwtl
ror
loope
add
jo
sahf
into
push
mov
sbb
ret
dec
jp
push
andl
roll
and
cltd
sbb
sbb
mov
fnstenv
mov
xchg
add
loop
pop
and
hlt
xor
xchg
push
ss
loop
test
adc
fmuls
cs
add
out
ja
ljmp
cmp
pop
inc
and
pop
pop
enter
pushf
movsl
loopne
dec
js
aas
push
stc
sub
mov
enter
lock
mov
xor
mov
cld
adc
mov
cmp
push
pop
jl
mov
mov
fiaddl
das
insl
pusha
int3
lea
dec
rorb
clc
dec
cmpsb
hlt
aaa
cld
int3
mov
xchg
sbb
fistl
cwtl
xchg
sub
inc
or
sub
hlt
or
or
or
ss
cmp
shlb
xchg
pop
mov
cmc
repnz
and
add
sub
repz
shl
mov
addb
mov
lock
ds
data16
dec
fnsave
pop
hlt
call
out
sbb
pushf
mov
inc
lods
movlps
rcrb
inc
cmpsl
mov
mov
shr
jg
popa
or
cs
jmp
popf
pusha
pushf
pop
inc
divl
cmp
dec
es
movsl
xchg
popf
sbb
jbe
mov
mov
mov
mov
js
mov
sub
xchg
or
imul
out
push
push
xchg
xor
xor
dec
lret
adc
inc
mov
in
rcrl
je
stos
mov
cwtl
xchg
je
dec
in
stc
jmp
out
dec
inc
lods
lahf
push
shrl
xchg
mov
stc
push
jns
sti
push
mov
dec
and
popa
xchg
jecxz
cmp
sub
outsb
push
xor
loopne
std
pop
std
push
and
imull
or
pop
mov
pop
loope
dec
cmp
jmp
dec
inc
and
jge
inc
nop
in
pop
insb
pop
jge
gs
fmul
movsl
push
aas
leave
push
fiaddl
in
cli
outsl
pop
push
std
hlt
movsb
add
dec
out
adc
lock
sbb
rorb
sbb
jo
fdivrs
mov
dec
mov
pushl
mov
sbb
pop
movsl
cwtl
cld
stc
lahf
mov
leave
sarl
xor
dec
adc
or
js
or
pop
mov
arpl
pop
popf
push
jmp
ja
sbb
scas
jne
and
fucomip
inc
and
add
xor
std
arpl
pop
dec
adc
push
dec
sub
movsb
xchg
popa
cli
mov
or
es
mov
add
push
int
cmpsl
sbb
mov
lahf
or
or
shlb
sbb
rorl
cmpl
decl
mov
cmpsl
sub
clc
mov
ss
push
mov
std
inc
jmp
shrb
push
or
iret
mov
lods
push
add
and
or
hlt
ss
and
mov
pop
push
loope
lods
sbb
enter
or
pop
and
and
mov
jle
cmp
inc
mov
and
dec
cmpsb
push
jg
jnp
lahf
cmpsl
orb
leave
pop
sahf
cmp
movsl
cmp
idivl
mov
aad
and
in
pop
push
adc
pop
pop
and
loope
sub
rclb
sbb
pop
pusha
jnp
sar
pop
push
push
cmp
jns
loopne
xchg
pushf
pop
xchg
rcll
sbb
push
xor
testb
push
push
jl
gs
jns
dec
and
mov
xchg
dec
rolb
xor
mov
arpl
mov
pop
push
lods
and
lods
jl
mov
aaa
xchg
addr16
inc
push
or
jp
xchg
in
add
in
cli
adc
cs
nop
inc
fisubl
jae
jmp
in
je
pop
jb
xacquire
xchg
call
lret
fwait
add
jns
xchg
cmp
mov
or
mov
adc
jae
jbe
rcrb
stc
dec
out
or
jg
mov
lock
jbe
adc
xchg
cmp
or
add
out
pushf
mov
outsb
push
fdivs
lock
mov
ss
and
in
or
xchg
idivl
call
fisttpll
jb
jp
js
in
push
sarl
push
cmp
xor
add
test
dec
cli
or
dec
cwtl
repnz
mov
inc
hlt
mov
push
pop
push
cmp
and
jp
ss
imul
pop
fs
cmpsl
pop
dec
sbb
stc
jp
adc
loop
dec
push
pop
in
mov
dec
add
add
cmpsb
pop
push
xor
in
mov
sti
sbb
mov
cmp
in
inc
cld
adc
push
fbld
outsl
shr
idiv
pop
sbb
adc
push
xchg
in
push
sbb
lds
xchg
decl
fildl
push
xor
jbe
mov
iret
mov
lret
xor
sub
jge
lods
cmp
shr
hlt
or
movsb
out
and
xchg
jge
xchg
daa
imul
ss
mov
push
mov
cmp
pop
xor
dec
xor
aad
ret
fs
sahf
xchg
testl
sub
push
aas
xchg
push
das
xor
ret
and
lods
jg
repz
pushf
add
arpl
add
and
call
and
fwait
dec
lods
mov
shlb
dec
jae
dec
ss
xchg
fs
add
popa
pop
mov
mov
popf
add
dec
push
cmp
inc
mov
sbb
add
lds
filds
cmc
add
stc
inc
push
fprem1
inc
and
mov
stos
cld
in
out
xchg
push
iret
aad
or
and
mov
sub
and
adc
and
je
test
sub
cmp
aad
mov
jmp
insl
dec
fisubs
xor
and
xchg
jno
sub
fimuls
les
pop
xor
sbb
clc
adc
xor
sub
adc
adc
add
mov
inc
or
popa
jle
cmp
fiadds
and
jns
pop
inc
adc
es
cld
data16
xor
lods
leave
stc
jns
dec
or
arpl
xor
dec
push
mov
leave
sub
pop
out
bound
out
jl
adc
cld
stc
inc
aaa
imul
bsf
mov
add
adc
movsl
pop
testb
sbb
adc
ret
sub
mov
imul
pop
sbb
sti
add
sti
or
jp
ljmp
jg
stos
sub
pusha
stos
pop
jns
adc
rorb
pop
scas
adc
cli
rcl
lods
and
into
test
repnz
mov
xchg
sahf
sub
jbe
and
jp
jnp
and
xchg
in
xchg
jae
xchg
jae
or
gs
negb
and
jl
add
std
mov
movsl
and
icebp
adc
adc
scas
jbe
out
pop
aas
inc
mov
dec
push
push
adc
repz
outsl
fs
test
mov
test
push
mov
adc
mov
pop
ds
daa
inc
jmp
xchg
ret
rcrl
mov
xor
or
mov
mov
or
xor
stos
inc
jo
dec
jno
and
fcmovne
ljmp
jo
orb
pop
clc
lds
xchg
or
push
pop
mov
stos
mov
and
adc
push
popf
cmp
loope
sbb
sub
cmp
sub
sbb
ss
push
dec
je
mov
jnp
in
pop
cmp
testl
cld
and
push
inc
cmp
mov
inc
icebp
add
xor
push
push
shrb
cmp
icebp
and
xchg
sub
dec
push
adc
nop
pop
or
push
add
clc
jl
sub
outsl
or
enter
inc
xchg
fisttps
push
sub
cld
jecxz
js
clc
or
cmpsl
enter
or
je
dec
xchg
add
cmpsb
imull
mov
orl
call
pop
stos
cmp
or
and
push
insl
mov
add
repnz
mov
lcall
popf
neg
shl
sbb
in
xor
xchg
add
push
push
movups
outsb
pop
sub
cwtl
mov
push
jns
mov
outsb
lock
imul
push
mov
add
add
into
test
stc
repnz
sbb
push
int
mov
inc
xchg
dec
cwtl
pop
das
xor
repnz
test
test
ljmp
vpunpckhqdq
lcall
jge
adc
arpl
adc
push
sbb
mov
leave
or
daa
and
jecxz
shll
sbb
cld
and
imul
mov
test
popf
int
sub
scas
andl
xchg
push
dec
dec
adc
xchg
cmpsl
adc
not
sub
cmpsl
push
cld
sub
mov
and
rorl
gs
inc
sbb
xor
cs
sub
and
imul
pop
adc
nop
xchg
les
nop
mov
xchg
cmc
ds
mov
les
std
dec
jmp
inc
lahf
in
adc
call
push
xchg
add
pop
mov
ret
test
or
jbe
add
clc
xchg
dec
xchg
rclb
and
mov
das
cmp
les
inc
enter
in
inc
shlb
imul
xor
add
pop
push
rcll
inc
adc
cmp
cmp
aam
lea
xchg
popa
add
ret
cmpsl
movsb
cmc
lods
repz
add
fisubs
outsb
daa
icebp
mov
ja
xchg
add
test
test
push
sub
pop
movsb
cld
or
lds
mov
jmp
jne
pop
sub
das
mov
pop
daa
pusha
enter
lea
mov
inc
and
enter
cmpsb
clc
pop
adc
dec
stc
dec
fdivrs
or
push
mov
rclb
sub
push
add
sbb
mov
dec
rolb
sbb
out
push
int3
addr16
fs
pop
rcl
lret
hlt
inc
inc
push
popf
mov
rcr
mov
lds
sarl
repz
cmp
rol
scas
sbb
and
gs
push
xchg
in
dec
pop
push
sbb
daa
mov
in
negb
xchg
cmc
lea
mov
nop
add
xor
jmp
cmc
pop
add
sbb
lret
inc
cmp
jnp
jae
pusha
aas
aas
out
cmp
test
or
pusha
pop
push
adc
rclb
and
cmp
lods
xor
sub
inc
jo
xchg
stc
test
insb
or
xchg
sub
cmp
dec
xorb
arpl
push
imul
cmp
cli
mov
adcb
mov
mov
fsubs
subw
je
jbe
push
inc
adc
mov
push
js
ret
ret
adc
mov
cmp
aad
ret
xchg
dec
lret
xchg
stos
inc
fildl
cmpsb
loop
mov
and
rclb
into
jmp
aam
push
pop
xor
push
aam
sbb
pop
movsb
out
inc
jmp
mov
enter
dec
sub
ds
sbb
insl
cmpb
jecxz
outsb
inc
int
aas
insb
push
jbe
sahf
cmp
and
repnz
sub
vmread
in
dec
imul
dec
lcall
mov
movsb
inc
jo
fwait
andb
xchg
mov
fdivrl
push
loope
ss
pop
pop
sub
cmpsl
mov
cmpsl
or
dec
in
inc
insb
fdivrs
das
sbb
push
dec
push
iret
and
dec
pop
jmp
mov
inc
sbb
or
sarb
adc
test
mov
add
sub
adc
xchg
pop
dec
cltd
std
adc
filds
cmpsl
pop
in
repz
in
ror
dec
adc
cmp
cmp
sbb
xchg
addr16
icebp
loop
testl
insb
je
pop
sub
or
and
sbb
dec
push
push
add
dec
xchg
sahf
test
daa
enter
decb
and
or
jne
pop
sti
lea
jmp
and
push
cmpsb
ret
jp
loope
fistl
xor
ret
xlat
cwtl
and
pop
cmp
fisubrs
dec
push
in
cmp
pop
mov
pop
das
push
jae
ret
insb
add
adc
cmp
xor
add
ljmp
sbb
scas
lea
ds
imul
mov
dec
xor
mov
into
popf
ja
mov
ss
xchg
mov
cltd
dec
dec
xor
mov
and
mov
xchg
pop
add
fdivr
mov
movsb
adc
and
clc
jl
fisttpll
in
xor
into
inc
xchg
add
bound
cmp
imul
mov
push
fldl
test
icebp
ret
xor
sbb
xchg
ljmp
or
dec
mov
push
pushw
jmp
bound
adc
dec
adc
push
and
lock
insb
or
not
jg
rorb
dec
cli
ret
call
cmp
aas
lea
mov
pop
xor
sbb
xor
clc
roll
inc
xchg
enter
add
sar
addb
repz
in
or
imul
cld
sbb
dec
scas
xchg
pop
insb
xchg
push
pop
push
in
xor
ljmp
sbb
push
xor
leave
pusha
cmp
cmp
mov
ss
dec
cmp
notb
popa
mov
sub
add
jle
mov
lret
add
icebp
fucom
dec
insb
idivl
fcoml
jo
je
mov
ds
sub
in
dec
sbb
inc
sub
insl
es
cmp
xor
adc
hlt
sub
aaa
xchg
xchg
sti
dec
jmp
cmp
or
push
lret
out
sbb
mov
jle
cld
inc
cmp
inc
ret
pop
movsb
insl
sar
pusha
jecxz
out
std
divl
es
lods
inc
jecxz
fidivrl
pop
cmp
scas
add
mov
lock
sub
mov
pop
fildll
sub
repz
sub
aaa
inc
div
xor
insb
dec
in
add
xchg
sub
cs
add
hlt
bnd
pop
js
divb
imul
test
add
xchg
int3
jns
ds
iret
dec
cwtl
xlat
mov
aaa
jg
add
cmpb
mov
aas
ds
test
ljmp
notb
push
add
mov
loop
mov
jl
and
sarl
sbb
ficompl
cs
ds
popa
pop
repnz
and
es
enter
test
pop
sbb
mov
inc
dec
push
fbstp
and
fsubrl
push
inc
push
mov
push
sbb
fdivr
pop
adc
repz
cmp
push
mov
rolb
aas
sbb
pop
push
aaa
in
adc
rolb
negl
inc
out
mov
and
push
out
lods
enter
lahf
jo
inc
test
clc
ss
jb
ret
add
int
add
xchg
imul
clc
lods
dec
jl
out
je
inc
mov
push
or
repz
pushf
mov
pop
or
lock
xchg
lock
jo
add
out
pop
pop
push
xor
sbb
icebp
lahf
inc
add
std
mov
push
mov
mov
stos
arpl
cmpsb
in
mov
mov
xchg
fwait
sub
pop
inc
jno
out
cmp
jnp
hlt
push
add
inc
sbb
push
push
ret
pusha
cmp
mov
or
xchg
subb
sub
stc
rclb
inc
ljmp
pop
shlb
push
mov
mov
fs
adc
es
xchg
jmp
cld
xchg
cmp
pop
dec
adc
mov
shrb
push
in
mov
pop
and
mov
xlat
inc
add
pop
xchg
mov
adc
inc
jae
push
lds
mov
test
xchg
mov
mov
repnz
push
shr
cmp
outsb
cmp
inc
aam
inc
dec
and
adc
aaa
jnp
push
sbb
inc
and
xor
imul
xchg
dec
and
loope
mov
adc
jne
pop
outsb
push
xchg
mov
and
popa
pop
aam
repnz
ja
lcall
inc
fs
pop
std
icebp
cli
sbb
mov
sub
sarl
mov
lock
cmpb
ja
outsl
adc
mov
mov
dec
or
sub
xchg
in
scas
jae
dec
clc
push
pop
jo
sbb
clc
test
data16
jnp
cld
lcall
adc
xchg
adc
std
idiv
jle
call
mov
rclb
push
xchg
mov
pop
inc
pop
cltd
fs
ret
popa
cmp
call
int3
insl
cmpsl
or
jb
mov
cmp
xchg
sbb
jge
cmpl
leave
cmp
subl
andl
rclb
movsb
or
icebp
imulb
adc
jne
or
or
jmp
add
test
sbb
cmpsl
mov
mov
fcom
mov
popf
xchg
pushf
js
add
pop
xlat
adc
jb
in
mov
jae
add
mov
fiaddl
xchg
mov
imulb
lods
loopne
mov
iret
inc
sbb
sti
inc
mov
xchg
pop
push
outsl
imul
arpl
dec
jp
popf
xor
test
les
mov
inc
xchg
shll
test
inc
in
jg
je
jne
les
sti
test
out
lds
fsubl
adc
jbe
dec
xchg
inc
mov
sbb
movsl
lret
icebp
and
mov
cmp
jg
jl
mov
rorb
jle
pusha
push
xor
inc
jl
mov
push
icebp
push
pop
push
inc
xchg
movsb
dec
imul
add
xchg
sahf
sbb
addr16
lret
jl
xchg
add
scas
test
jge
jno
push
cmp
jne
test
iret
sbb
lock
pop
insb
push
fstp
inc
xor
mov
mov
cltd
mov
cmp
and
push
aaa
ja
fdivrl
subl
and
mov
or
cmp
or
clc
out
add
ljmp
mov
call
dec
paddsw
movsl
and
sbb
cmp
addl
or
pop
sbb
lret
jns
jo
and
lock
scas
addb
adc
adc
imul
out
cwtl
sub
cli
cmp
and
sub
xchg
roll
xchg
mov
stc
ret
sub
mov
sahf
cmp
loopne
testl
xor
sub
xchg
in
jns
cli
cmp
lcall
mov
in
push
or
cs
nop
inc
xchg
jecxz
push
dec
cmpsl
cmp
clc
lret
sti
aam
call
loopne
je
aas
dec
xor
out
xchg
sbb
sub
push
xchg
inc
mov
and
in
and
mov
je
xchg
fisttps
mov
enter
aaa
adc
into
jl
popa
xor
pop
sub
jmp
xchg
add
ds
sub
jne
or
aad
adc
dec
jns
and
jg
push
sbb
push
adc
dec
or
cmpsb
enter
arpl
xchg
dec
loop
push
lds
adc
dec
leave
in
jmp
mov
cmp
pushf
and
lea
xchg
pop
dec
call
push
xchg
add
stos
mov
push
add
mov
lods
out
into
js
sub
push
dec
shrb
int
test
fnstsw
inc
inc
cmp
shlb
addr16
dec
jp
cmp
push
nop
fisttps
pop
add
std
gs
xchg
fcom
jge
sbb
xchg
aad
popa
adc
sub
cmpsb
lahf
adc
aaa
mov
movsb
xchg
pop
sub
icebp
call
adc
mulb
sahf
lds
jo
daa
inc
push
xlat
test
gs
pusha
push
test
outsb
push
jl
inc
fwait
or
xor
adc
or
mov
mov
je
xor
repz
ss
push
pop
pop
jns
mov
dec
mov
inc
push
push
push
movsl
jmp
adc
test
clc
test
movsl
pop
ljmp
jnp
mov
cmc
cld
addb
popa
sbb
fiadds
mov
and
push
stc
not
pushl
scas
add
idivl
and
loop,pt
pop
xchg
adc
xor
and
imul
mov
in
add
adc
xlat
or
inc
fldcw
lcall
fmuls
fbstp
testl
add
adc
and
jge
or
shll
data16
lods
and
mov
mov
sbb
pop
xor
outsl
and
cmp
adc
push
mov
mov
xor
xlat
mov
outsl
js
push
sbb
fimuls
jl
inc
adc
or
dec
std
out
pop
outsl
pop
cs
xchg
int
inc
or
xchg
xor
cmp
dec
in
inc
or
jbe
adc
das
dec
cmp
mulb
pushl
clc
es
shll
mov
sldt
mov
mov
adc
inc
add
outsl
dec
pop
outsb
fstp
shlb
inc
push
dec
in
test
cli
mov
sub
cwtl
inc
mov
pop
loop
fcomp
pop
ucomiss
inc
mov
lahf
cmp
add
and
mov
push
add
adc
push
pop
jnp
and
or
or
push
pop
xor
mov
gs
add
dec
jnp
pop
je
or
sbb
or
or
pop
das
ds
dec
or
add
mov
fwait
test
insl
or
mov
aas
push
stc
arpl
adc
movsl
mov
mov
rcrb
test
lock
lock
mov
enter
dec
add
push
push
out
adc
push
mov
lods
pop
mov
xor
clc
jl
cmp
pop
lret
cmpsl
rcrl
mov
pop
outsl
or
xor
pop
int3
cs
xchg
cmp
dec
es
call
aas
flds
das
mov
mov
stos
pop
jle
mov
cwtl
testb
xor
ss
xor
arpl
mov
aad
dec
int3
inc
ss
inc
lahf
xchg
or
scas
xchg
in
xchg
repz
jl
adc
add
jge
push
inc
out
adc
mov
sbb
mov
push
stos
clc
cli
aaa
sti
leave
popa
fidivrl
les
and
jb
xchg
sbb
sub
inc
xor
and
mov
lahf
jmp
aad
gs
add
mov
pop
xor
mov
jb
add
fs
or
les
loope
mov
jecxz
jmp
push
add
aaa
sub
out
dec
dec
js
outsl
inc
and
sub
push
bound
ljmp
lods
imul
bound
inc
data16
pushf
out
call
adc
test
lods
inc
incl
rolb
cltd
lahf
jo
out
jns
push
repz
scas
push
sub
dec
int3
test
lods
arpl
push
xorb
out
mov
les
or
mov
jo
jg
push
dec
fistpl
xor
push
lahf
jle
mov
pop
movsb
in
inc
andl
leave
mov
sbb
ret
jnp
mov
mov
es
cmp
inc
dec
jp
fnstsw
jne
xor
mov
pop
push
mov
add
dec
mov
enter
mov
mov
mov
pop
inc
xor
aam
adc
adc
dec
adc
aaa
inc
sub
dec
repz
mov
xor
ds
adc
inc
push
int3
sbbl
stc
xchg
cs
or
mov
jmp
and
xchg
inc
shlb
mov
dec
test
cmpsb
loop
and
lock
xor
adc
cltd
add
fimull
xor
scas
fcomps
sub
mov
xchg
or
rclb
xor
in
sub
cmp
pusha
clc
xchg
sti
push
push
jnp
das
adc
jns
aaa
xlat
mov
push
jbe
and
clc
test
test
fsubl
pop
jns
push
sbb
popf
arpl
xor
xchg
xchg
iret
inc
push
adc
pop
fst
popf
add
jno
scas
sub
dec
ret
in
js
push
fldt
out
cwtl
pop
jbe
dec
je
clc
fwait
loopne
push
xor
xchg
pop
mov
xchg
push
dec
sub
mov
push
ds
or
mov
aas
push
jns
mov
in
cmp
cmp
clc
pop
cs
stos
jmp
insl
fwait
addb
aaa
cmpsb
out
int3
dec
cmp
sub
add
jp
imul
cmp
mov
scas
dec
pop
pop
dec
inc
hlt
jmp
negb
pushf
fdivr
fwait
cmp
pop
fidivl
adc
push
inc
sbb
sti
lods
fwait
nop
out
pop
stc
pop
cmp
repnz
loop
pushf
in
sahf
fidivrl
mov
add
jl
sub
lock
stc
cld
roll
in
das
inc
adc
pop
repnz
mov
push
iret
fcoml
mov
dec
mov
adc
lret
jp
push
pop
or
je
into
mov
push
out
fwait
cmp
pop
cmp
clc
rcrl
pop
inc
fsts
inc
adc
inc
mov
arpl
adc
dec
xor
sbb
fs
stc
mov
insb
daa
fidivrs
xchg
xlat
les
sub
add
insb
fstps
mov
sub
lds
mov
xchg
pop
outsb
mov
mov
and
xchg
pushf
jnp
in
and
adc
je
add
add
subb
scas
movsb
or
sub
add
arpl
icebp
or
pop
dec
add
jmp
cmp
imul
jmp
mov
lock
outsl
insb
cs
xchg
fs
xor
sub
pop
mov
or
mov
dec
enter
pushf
jge
pushf
es
pop
and
enter
pop
push
pop
rcll
push
push
inc
pop
fcompp
inc
int
call
gs
lahf
int
xchg
repz
sub
mov
loope
or
ljmp
sbb
fimull
rorl
cwtl
fs
pop
ds
push
jle
test
movsb
in
pop
mov
add
cmp
and
mov
push
jge
sbb
fimuls
mov
sub
rolb
enter
mov
pop
jo
outsl
or
mov
addr16
add
jl
and
dec
dec
into
mov
add
popf
xchg
fsts
je
in
sbb
jae
inc
add
xor
push
sahf
adc
cld
das
lahf
mov
js
fwait
xorb
mov
bound
loop
movsl
xchg
push
mov
pusha
and
pop
in
inc
dec
aaa
movsl
xor
stos
xor
mov
lock
cmp
cmp
test
dec
fwait
aaa
xchg
dec
es
dec
popa
or
fmuls
jno
cmp
and
pop
insl
sub
cmp
cltd
jo
hlt
push
ljmp
pop
adc
cmp
xor
aas
or
fdivr
les
outsl
ret
mov
pop
mov
or
cmpxchg
adc
or
inc
and
inc
pop
sub
add
dec
fwait
push
xor
sbb
stc
stos
push
fists
xor
nop
or
or
or
inc
faddl
xor
rclb
xor
ret
inc
or
xor
fimuls
lcall
adc
cld
mov
adc
orb
mov
add
repz
nop
mov
jp
subb
push
lea
cmp
jmp
out
cli
movsb
or
stos
mov
aad
adc
cli
fistpll
mov
xchg
pop
add
xor
int3
adc
sbb
and
xor
cmp
bound
fists
shl
mov
stc
in
call
movsl
lds
inc
adc
dec
jmp
push
pop
inc
push
and
push
popf
adc
xchg
xchg
rcrl
inc
bnd
xor
sbb
ror
mov
inc
jnp
inc
cmpsb
mov
stos
push
or
or
cld
cmp
call
leave
and
mov
into
les
push
inc
and
cwtl
loopne
clc
sbb
mov
int3
rorb
rorl
into
adc
adc
push
cmp
testb
add
sbb
stos
push
ret
mov
jb
mov
ss
test
dec
jno
jge
add
dec
fs
inc
add
sarb
and
jnp
jecxz
sbb
and
cmp
push
jg
and
aaa
adc
aam
jnp
fdivl
clc
dec
inc
inc
mov
jmp
push
xchg
or
jp
scas
shl
push
cs
ror
inc
sbb
sub
push
and
jmp
decl
in
and
or
repz
inc
or
push
fs
pop
jmp
mov
clc
rorb
jmp
mov
jle
xor
pop
mov
test
in
repz
xlat
stc
pop
push
adc
outsl
lcall
cmpb
aam
sbb
stos
stc
push
jge
mov
sbb
cmpl
xlat
pop
and
lds
mov
sbb
cli
add
gs
daa
dec
add
and
pop
add
mov
adc
cmp
inc
cwtl
cmp
adc
lods
jno
cmp
insl
aas
mov
loopne
xor
js
daa
data16
sbb
pop
pop
cmc
dec
in
mov
dec
xchg
in
sarb
adc
jp
sbb
jle
cmp
cli
and
popa
mull
xchg
and
int3
xor
testb
mov
mov
out
dec
es
mov
imul
lea
jge
dec
sub
pop
pop
movsb
sbb
sahf
fs
xchg
cwtl
lahf
adc
dec
ljmp
pop
es
lea
or
into
jle
sbb
pop
xor
or
lret
into
or
xchg
jbe
xchg
test
inc
jmp
xchg
test
push
test
lock
lods
and
inc
sub
jae
popf
popf
in
in
rdmsr
scas
adc
or
cs
jae
mov
movsl
insl
or
imul
adc
and
cmp
fmuls
or
cmp
push
pop
or
adc
add
and
sub
mov
cbtw
int3
jecxz
popf
pop
sarl
sbb
inc
sbb
xlat
push
xchg
enter
out
inc
fnsave
push
mov
sbb
push
iret
test
push
cmc
rclb
jge
mov
push
ret
enter
pop
xor
mov
or
aaa
gs
dec
or
pusha
nop
dec
push
push
std
pop
pop
or
out
add
imul
fs
sahf
mov
in
jb
push
arpl
out
sub
cmp
leave
add
dec
inc
cmp
add
outsl
mov
loop
fcomps
xchg
lcall
fwait
pop
or
mov
adc
push
sbb
arpl
and
fsubrl
jb
pop
cs
ja
and
jns
pushf
sbb
data16
leave
and
cmp
into
loopne
popa
sub
push
adc
push
cmc
stc
in
push
gs
sbb
jne
mov
mov
add
iret
and
sbb
loopne
add
jne
or
mov
orb
inc
test
xchg
cwtl
or
dec
cmp
xchg
test
adc
push
adc
out
outsb
xor
adc
insb
nop
mov
pop
cmc
fisubrl
sbb
sbbb
sbb
cmp
notb
jp
and
sti
mov
cmc
repnz
ja
out
lds
into
insl
cmp
cwtl
push
xor
lahf
out
pop
stos
inc
in
ficoms
mov
mov
mov
add
icebp
out
lods
sub
les
sbb
lods
sarl
daa
adc
xchg
mov
jns
dec
out
jae
pop
jl
test
pushf
pop
dec
and
bound
or
cmove
mov
push
fisttpll
jmp
leave
aas
fs
pushf
loop
test
mov
mov
jne
imul
idivb
mov
lcall
hlt
fiaddl
mov
or
in
lret
inc
icebp
sbb
cwtl
dec
and
inc
test
into
testb
pop
and
push
mov
sub
popf
or
in
cmp
inc
mov
inc
mov
xchg
inc
inc
or
cmp
cmpsb
int3
lods
out
push
lea
add
sub
cmpsl
fisttps
mov
mov
dec
fwait
and
fnsave
pusha
push
mov
cmc
insl
cmp
inc
popf
dec
or
jae
jl
ficoml
rolb
pop
es
mov
js
and
ljmp
sbb
jae
pop
sbb
sbb
inc
xchg
gs
pop
and
outsl
push
ss
fisubrs
sbb
repz
in
and
sub
push
push
rolb
rolb
and
mov
rclb
sbb
jno
cmp
inc
rclb
or
ss
ss
adc
pusha
enter
dec
js
pop
push
mov
test
int3
js
sbb
or
sarl
push
loope
lds
in
pop
or
pop
ds
call
mov
dec
lock
fistps
int3
stc
cmovge
and
testb
or
test
jo
pop
icebp
mov
pop
mov
sbb
and
daa
sbb
nop
sub
xchg
jle
sbb
push
or
fisubrl
lea
mov
lcall
adc
dec
mov
movsb
imul
push
cli
mov
push
sub
add
es
adc
mov
into
mov
clc
sti
arpl
in
push
mov
mov
or
divl
scas
and
push
add
push
sti
test
mov
frstor
insb
pusha
in
lea
adc
mov
iret
scas
xor
push
or
dec
popf
pop
mov
cmp
adc
adc
inc
sbb
aaa
sbbb
sbb
cmp
data16
inc
hlt
je
mov
cltd
mov
mov
js
stos
icebp
and
fmul
sbb
sbb
popa
jp
or
or
loopne
imull
mov
or
movsb
shl
xor
push
cmp
sbb
and
mov
flds
mov
jl
xchg
adc
in
lods
stc
cmp
xchg
mov
pop
pop
sbb
fs
adc
lcall
cmp
int
in
xchg
movswl
and
sbb
rclb
push
dec
out
mov
mov
test
loop
push
sbb
mov
dec
ja
out
and
pop
or
mov
imul
sarb
jp
imul
xor
adc
add
dec
aad
adc
in
dec
fldenv
cmpsl
test
scas
push
jle
sbb
sub
je
mov
xchg
jbe
adc
stos
leave
xor
leave
in
sbb
shrb
fcoml
jbe
jbe
jmp
jge
or
xor
out
in
sbb
mov
dec
aad
movsb
outsb
mov
lods
rcrb
aas
lret
movsl
test
je
jbe
dec
mov
sub
les
sub
push
cld
orb
xchg
in
pop
sbb
lock
into
testl
ss
cli
jns
out
push
stos
jmp
adc
adc
dec
jns
adc
push
xor
test
fs
fiaddl
test
and
mov
or
mov
mov
lahf
add
pop
subb
mov
mov
orl
loopne
xchg
mov
adcb
ds
movsb
and
pusha
sbb
sbb
cmp
flds
cmp
clc
mov
pusha
and
jle
hlt
xlat
shll
cld
cmp
sbb
ss
dec
dec
pop
popf
inc
pop
jp
fbld
sub
mov
adc
iret
mov
insl
xor
iret
or
ffree
and
ja
stos
sbb
jl
dec
or
arpl
ds
xchg
mov
jns
jg
mov
test
push
mov
pop
ret
mov
add
jno
dec
or
push
push
stos
out
adc
jns
or
lock
xchg
cmp
xlat
push
xchg
cs
xchg
and
add
push
add
test
xor
xor
mov
arpl
push
adc
stos
push
fwait
inc
cld
inc
dec
fidivl
mov
mov
jl
push
and
dec
test
hlt
mov
adc
push
sub
ret
adc
adc
xor
jnp
test
mov
call
andb
cmp
mov
fildll
popa
xchg
inc
test
add
insb
and
sub
xor
outsb
in
into
inc
inc
iret
inc
stc
mov
lret
push
adc
sub
pop
or
lds
xlat
sti
das
fs
adc
push
fcomps
or
adc
aam
dec
or
dec
idivl
mov
jno
loop
and
dec
lock
mov
enter
or
cmp
inc
adc
or
insl
xor
das
ja
xor
mov
js
push
mov
jno
inc
dec
inc
dec
pop
pushw
push
sub
cmp
jnp
xchg
adc
mov
xchg
pop
enter
rorb
inc
adc
inc
insb
stos
cmpsl
sub
mov
cld
sub
cmp
xchg
outsb
mov
mov
cmp
pop
js
inc
gs
sbb
jge
mov
repnz
xor
push
jns
push
push
xor
sbb
imul
mov
out
mov
push
fildll
xor
scas
or
aaa
leave
jb
push
jno
lea
scas
pushl
or
incl
push
mov
cmp
test
jp
xor
or
xor
sbb
jecxz
xor
outsb
inc
dec
shrb
enter
mov
addl
mov
rcll
ss
rorb
add
pop
and
aam
push
or
icebp
ljmp
dec
push
push
and
in
jg
sub
xorl
inc
and
cmp
adc
add
pushf
addr16
push
addr16
sub
or
loopne
cld
mov
jmp
lock
cmpsb
sub
jno
mov
jecxz
pop
fcoms
push
out
mov
pop
add
push
adc
inc
adcb
mov
adc
clc
add
cmp
ljmp
cmc
packssdw
adc
lock
shrb
into
pop
jecxz
lock
mov
xchg
pop
faddl
jnp
cmpsl
xlat
pop
clc
int3
and
mov
cmp
jo
sbb
jp
add
mov
cmp
jns
pushf
fdivs
xchg
xorl
dec
inc
pop
ja
cli
pop
xchg
jge,pn
addr16
mov
xchg
sub
and
mov
dec
mov
inc
sbb
add
ror
pop
or
repz
paddw
and
pop
pop
and
loope
adc
inc
or
dec
mov
xor
sub
inc
dec
jb
xchg
mov
arpl
xchg
sub
enter
mov
add
sbb
inc
call
hlt
dec
xchg
fabs
aaa
inc
jle
cmc
add
xor
mov
sbb
test
mov
jb
ja
into
xchg
xchg
aas
cmpsb
adc
test
in
jns
outsl
ja
ja
insb
iret
js
fnstcw
inc
stos
outsl
fldt
clc
pushf
mov
inc
test
jle
bnd
addr16
and
push
fsubl
and
xchg
pop
push
sbb
mov
dec
and
mov
inc
fists
pop
incb
or
ja
popf
loopne
jnp
mov
rol
orb
jmp
je,pt
jbe
stos
sub
aas
sbb
pop
clc
cmp
and
jg
jns
xor
fsts
dec
or
adc
sub
ss
or
repnz
dec
mov
idivb
xlat
loopne
outsl
dec
inc
dec
lret
inc
jno
add
in
cwtl
adc
stc
jne
sahf
and
inc
jnp
inc
in
cmp
xchg
push
jne
mov
jp
xchg
push
adc
cmp
xchg
mov
add
out
aaa
mov
dec
mov
sub
test
jg
add
jnp
cmp
inc
add
or
mov
adc
jmp
test
fbstp
jbe
xor
pop
cmpsl
and
dec
jne
mov
mov
clc
test
xor
add
or
aam
mov
add
push
lcall
insl
jns
sysexit
inc
cmp
cld
push
mov
xchg
mov
or
pop
cmpb
cwtl
mov
shlb
lods
add
push
fcoms
xor
mov
jb
aas
push
cmp
mov
adc
ja
bound
pop
jne
lret
lds
cwtl
lea
cmp
cltd
stos
loopne
ljmp
mov
lods
mov
xchg
sub
and
and
adc
adc
popa
cmpsl
mov
sbb
and
movsl
in
jle
mov
idivl
sbb
nop
call
arpl
sub
lea
xor
and
insb
shlb
aas
adc
mov
xor
pop
mov
call
mov
or
pusha
sahf
dec
es
popf
addr16
fwait
or
or
cmp
mov
in
jg
xor
iret
stc
and
push
rol
cltd
cld
jecxz
jo
test
lock
test
cmp
clc
leave
push
jns
lcall
pop
and
daa
jbe
inc
push
sbb
ret
enter
andb
fidivs
and
push
push
dec
fwait
test
or
cwtl
mov
and
jo
test
push
cmp
sbb
mov
push
and
pop
xchg
aaa
fwait
sbb
stos
push
fdivr
or
lock
ret
jp
sub
dec
inc
aas
pop
fdiv
pop
jmp
lods
sbbb
cmpl
loope
fstl
xchg
dec
pop
xchg
pop
jg
cmp
dec
outsb
dec
pop
inc
loopne
dec
gs
adc
pop
pop
cmc
inc
xchg
mov
pop
mov
ror
jno
cs
jecxz
aas
add
push
ficoms
fsubrs
cwtl
es
cwtl
rorl
add
sbbl
call
cld
jmp
xor
lds
nop
dec
jnp
icebp
or
sbb
inc
and
pusha
dec
mov
and
pop
xchg
bound
jecxz
and
sbb
and
mov
in
jne
divl
or
iret
cmp
out
and
inc
ret
xor
jne
pusha
add
repnz
sbb
bound
arpl
ret
mov
icebp
mov
push
iret
into
push
inc
mov
jmp
scas
js
mov
outsl
sbb
lods
js
push
mov
mov
xor
mov
jo
mov
mov
clc
add
mov
int
out
dec
mov
cmp
adc
jb
push
cmp
mov
test
dec
lcall
fcoms
mov
mov
adc
push
xchg
clc
add
mov
mov
or
shlb
rcrl
lods
adc
inc
mov
mul
cmp
pusha
iret
out
fistps
icebp
fs
pop
sbb
addr16
jp
or
rcl
add
add
pop
nop
addr16
cmp
test
orb
dec
dec
stos
pop
insl
pop
cmp
out
imul
add
fs
push
mov
and
add
and
dec
insl
pusha
jo
adc
dec
dec
lock
rcll
dec
or
push
add
pop
lahf
ret
ret
sub
or
and
lcall
mov
and
sub
cld
xor
mov
pop
and
ljmp
in
inc
jbe
push
les
repnz
pusha
push
inc
test
shl
fs
push
jae
push
sbb
repnz
ds
popa
cli
rolb
jle
inc
cs
xor
mov
sub
in
insb
in
in
lahf
and
jbe
stos
es
xchg
lds
aam
xor
cmpb
add
std
cmp
jne
iret
in
sbb
mov
fnstenv
add
xchg
jle
push
loop
jmp
hlt
jecxz
jb
fstl
add
in
dec
inc
jne
aad
in
pop
sbb
nop
jae
je
sbb
push
cmp
adc
filds
insl
mov
lock
in
sub
mov
xor
clc
fsts
inc
pop
lods
mull
test
push
scas
test
repnz
lret
in
pushf
gs
mov
mov
hlt
lea
jo
push
cmp
mov
cs
mov
pushf
icebp
xor
or
sbb
cmc
test
xlat
int3
orl
ljmp
shrb
xor
xlat
outsb
fstpt
icebp
jns
iret
jecxz
out
cld
mov
xchg
movsb
dec
dec
pop
inc
js
icebp
mov
mov
divl
pop
jp
gs
cmpsl
fisttpl
xchg
outsb
ds
jl
cmp
test
ss
dec
int3
sub
cmp
scas
mov
ljmp
test
fidivrl
jg
xchg
pop
xchg
ja
pop
adc
pop
push
xchg
stos
popa
xchg
and
add
es
dec
ljmp
push
xchg
jnp
test
xchg
add
popf
movsb
jp
pcmpeqd
push
sub
stos
call
jmp
jne
jp
loop
mov
mov
decl
jo
pop
jmp
pop
loopne
dec
xchg
imulb
mov
lods
add
jge
repnz
pop
out
js
icebp
ss
or
pop
inc
lods
and
xlat
inc
sub
pop
arpl
pop
addb
data16
repnz
sub
nop
ljmp
dec
stos
cmp
xchg
pop
push
pop
aas
cmpl
daa
pop
orl
push
or
dec
stos
inc
sub
cmc
orl
test
jbe
js
adc
add
pop
jbe
sub
xor
and
lea
nop
js
inc
orl
loop
xchg
ret
jo
xchg
fcoms
push
fsubl
mov
mov
cmp
pop
es
fildll
or
cmpsb
mov
adc
inc
pop
push
mov
cmp
jg
les
imul
fwait
imul
popf
movsb
inc
ficomps
mov
lahf
xchg
dec
cli
mov
fucomp
sarb
mov
jb
aaa
adc
lret
mov
sti
mov
test
stc
mov
adc
inc
adc
rorb
push
fisubl
clc
arpl
mov
loop
xor
popa
or
pop
push
clc
dec
jg
add
lret
inc
push
sub
hlt
mov
ds
enter
call
test
adc
mov
into
adc
int
jo
push
out
adc
incl
cmpsl
or
cwtl
push
inc
mov
jae
shl
sbb
jno
or
cli
aas
mov
je
rolb
sbb
or
aaa
inc
fucomp
add
add
add
inc
add
jecxz
int
and
inc
xchg
shlb
enter
stos
js
js
sub
or
out
cmp
cwtl
pop
dec
adc
fnsave
lods
stos
xor
xchg
les
shrl
idiv
fwait
pop
cmc
int3
movsl
clc
xor
mov
xchg
mov
ds
out
or
ja
cmp
cmp
push
mov
add
dec
or
mov
lock
mov
scas
push
std
cltd
lret
inc
inc
jge
lahf
stc
shl
rcr
cmp
push
mov
mov
lahf
in
cmp
dec
push
pushf
fisttps
mov
cmp
nop
xchg
jae
push
stc
add
lods
and
je
sti
test
add
sbb
in
out
jbe
sbb
xchg
lock
sub
ljmp
adc
flds
dec
add
jecxz
and
push
xchg
cmp
xor
shl
cmp
add
ljmp
mov
mov
sub
clc
repz
in
sbb
cmpsl
int
adc
sbb
movups
fiadds
mov
cwtl
cmp
jno
mov
add
std
dec
jbe
pusha
stos
xchg
popa
xchg
push
jb
mov
jno
sub
loope
cmp
lock
xor
loop
mov
inc
add
mov
sbb
dec
repnz
popf
das
sbb
inc
ljmp
jns
jbe
arpl
fdecstp
inc
stos
movsb
sti
pop
xor
and
dec
popf
arpl
jg
aaa
mov
dec
into
les
cmpb
lock
sti
or
jecxz
test
pop
or
dec
aaa
push
repnz
jae
movsb
incl
xchg
repz
dec
push
daa
rcrb
shll
dec
push
into
fildl
sub
xchg
dec
insb
xlat
sub
cmp
adc
pop
sub
dec
dec
push
add
inc
mov
subb
mov
lcall
push
fwait
mov
std
int3
or
adc
jne
adc
leave
mov
add
dec
inc
inc
sbb
pop
adc
and
cmp
pusha
pop
das
sub
jo
push
push
ss
je
iret
or
inc
movsb
jae
mov
pusha
int3
and
mov
ja
loopne
sbb
cmp
testb
shl
pop
cwtl
cmp
jl
lret
inc
icebp
or
shrb
xchg
xchg
dec
stc
lahf
outsb
pop
daa
mov
insl
shlb
lea
dec
sti
call
scas
push
gs
adc
push
dec
jo
mov
push
mov
es
add
ss
faddl
push
cmp
mov
fcoms
cmpsl
pop
add
insl
xchg
or
cmp
or
lock
jmp
fwait
mov
cmp
mov
or
lahf
jbe
ret
sub
pop
fs
mov
inc
sbb
pop
xor
push
ss
leave
push
xor
xchg
ds
divl
inc
std
pop
dec
push
leave
wbinvd
outsl
je
mov
lods
inc
jmp
jne
pusha
or
aas
add
xchg
jae
pop
mov
stc
frstor
cmp
cmc
mov
mov
sbb
cmp
and
ret
or
add
outsb
pop
cmpsb
mov
mov
shrl
popf
dec
scas
xorl
add
test
sbb
hlt
je
or
pop
sub
inc
idiv
enter
push
jno
mov
adc
add
aaa
mov
mov
or
int3
add
xchg
ds
xor
mov
nop
adc
stos
dec
xor
or
mov
sahf
lcall
xchg
pushf
dec
mov
xchg
xor
out
or
inc
std
sbb
pusha
pop
dec
dec
jge
push
inc
icebp
adc
cltd
mov
iret
pop
xchg
and
jns
loopne
pusha
adc
cmpl
jmp
js
cmp
ds
lret
mov
mov
mov
loopne
cmp
dec
pop
push
cmp
adc
mov
insb
mov
and
rolb
sar
xchg
mov
lods
mov
repz
cmp
cmc
pusha
pop
mov
aas
adc
xchg
sub
adcb
fwait
insl
cs
xchg
out
sub
and
cs
dec
mov
mov
xchg
jmp
jne
mov
lret
sbb
ljmp
aam
cmp
call
or
insl
js
ret
mov
cltd
sti
or
invd
cmp
in
sti
ja
sbb
cmp
fnstcw
or
inc
divb
jg
sub
in
shr
dec
call
aaa
dec
or
inc
add
xor
shll
sub
and
shl
xchg
xchg
rorb
mov
lahf
or
outsl
pop
test
cmp
lahf
adc
ret
inc
or
and
movups
adc
adc
adc
cmpsb
pusha
test
push
push
jg
repz
fsubrl
dec
int
cmp
inc
pop
sbb
xchg
pop
add
push
shl
aas
nop
cmp
sbb
mov
ljmp
sub
cmc
ds
dec
sub
sarw
or
clc
lahf
lea
pop
aaa
ja
and
mov
adc
outsl
mov
pop
jae
adc
inc
cmp
sub
je
inc
adc
popa
pushl
cmp
mov
ret
and
nop
outsl
xchg
ja
in
inc
push
xor
ret
dec
shll
mov
add
pop
iret
scas
movsb
or
ss
repz
les
dec
xchg
imull
xor
jo
mov
lret
or
push
mov
push
stc
sbb
push
lock
stos
inc
fsubl
xchg
out
push
pushl
fcompl
popf
int
das
je
xchg
sbb
ret
xor
int3
bound
xchg
inc
sbb
mov
or
in
imul
jno
lea
scas
mov
dec
pop
sbb
or
xchg
pop
bt
out
sub
or
into
add
cmpsb
xlat
sbbb
lahf
es
add
push
mov
or
push
in
shrb
bound
fdivs
js
pop
shll
arpl
pop
mov
and
fldl
pop
xor
dec
and
adc
and
cld
push
jae
lods
mov
cld
jg
idivb
push
dec
decb
stos
loop
divb
ljmp
sbb
jno
mov
rcll
add
cltd
cmp
xchg
add
js
inc
jns
push
cwtl
add
jae
inc
sbbb
xor
jecxz
mov
divb
mov
das
fs
lret
dec
jne
sub
outsl
push
sbb
icebp
push
or
sbb
scas
sbb
push
aam
inc
cmpsl
or
loop
fnsave
je
pop
mov
fs
push
or
aas
pop
xchg
je
cmc
xchg
fs
loopne
push
mov
push
lcall
les
lret
ss
mov
call
jmp
jae
gs
dec
cld
push
jo
inc
lahf
das
lret
add
pop
outsb
lea
dec
cmp
js
imul
mov
cmpsb
sub
call
jno
ljmp
dec
add
sub
sub
cmpsl
mov
scas
pop
add
mov
mov
inc
mov
or
pop
and
fstl
push
push
or
cmp
adc
shl
jle
jp
div
out
imulb
loope
ja
sbb
ljmp
in
push
and
pop
inc
jnp
pop
std
addps
xchg
xchg
sub
push
loop
push
sbb
data16
xor
rol
xchg
add
inc
hlt
scas
scas
sbb
dec
and
decl
gs
fmulp
mov
aas
js
imull
shll
stc
or
cmc
pop
dec
addr16
movhps
inc
popa
adc
mov
cmp
leave
mov
ret
xor
ret
daa
shr
shl
daa
out
aas
lock
xlat
jno
mov
and
xor
sub
xlat
ffreep
cmp
loop
stos
inc
mov
cmp
or
inc
fdivr
in
xchg
sub
test
jo
lea
fmuls
xchg
les
push
das
js
test
fldt
jecxz
loopne
mov
and
jge
mov
lds
xor
fiaddl
loopne
sbb
dec
lods
daa
inc
loop
popf
sub
cmpb
sub
fs
jnp
fisttpl
mov
push
dec
js
inc
mov
cmp
lcall
dec
xor
push
add
sahf
jg
pop
xchg
push
fnstenv
cmp
jbe
cmp
rol
jbe
fs
push
je
xor
aad
leave
mov
jne
lods
lods
repnz
repz
cmp
pushw
loope
call
testb
cmc
je
adc
std
inc
inc
xchg
and
loopne
comiss
fs
push
ficoml
lret
and
jns
rorb
dec
jecxz
dec
jne
gs
sub
mov
imul
push
subl
sti
inc
pop
pop
sbb
push
push
in
lahf
int
inc
pop
jmp
cmp
dec
adc
popf
daa
repz
xchg
inc
xchg
jae
shrb
outsl
pop
cmp
clc
andb
cwtl
inc
dec
int3
inc
lods
sub
inc
ja
enter
iret
imul
add
icebp
jl
scas
mov
cmp
mov
mov
es
mov
pop
pusha
mov
enter
icebp
mov
hlt
or
dec
dec
fwait
frstor
and
jno
mov
and
clc
fildll
sbb
mov
xchg
and
punpckhwd
xor
jecxz
inc
adc
pop
push
js
mov
lcall
sub
push
xor
inc
adc
mov
add
arpl
xor
sbb
clc
in
pop
cmp
in
lcall
ds
mov
loop
push
cmp
pop
jp
dec
xchg
jnp
decl
js
cmp
mov
std
das
xor
jg
mov
in
pushf
mov
push
in
testl
pop
push
or
jbe
shl
xlat
cmp
ja
test
pusha
push
test
add
aaa
pop
adc
daa
cltd
call
out
pop
mov
mov
cld
rcrl
nop
ret
movsb
cmp
fldl2e
or
push
test
add
xchg
mov
push
fldl
movlps
arpl
cmp
clc
add
mov
or
add
and
inc
sbb
adc
std
xchg
lahf
stos
inc
pusha
pop
pop
sub
adc
jnp
pop
add
mov
and
rolb
cmp
pop
pop
cwtl
js
and
fsub
jle
adc
out
fsubrl
cmp
inc
das
jl
jo
xchg
pop
pop
mov
nop
xor
push
inc
push
js
les
jo
pushf
mov
sbb
dec
test
sbb
scas
mov
pop
in
mov
outsb
loop
add
xlat
addr16
and
mov
test
jns
out
and
dec
test
decl
sub
loope
out
jl
mov
push
inc
add
mov
dec
out
push
sbb
paddq
dec
push
inc
pop
jp
xor
insb
mov
insl
xor
ret
out
fldenv
pop
cmpsb
xor
shl
mov
aam
hlt
out
lret
sub
add
daa
inc
jb
mov
push
rol
and
sub
inc
inc
cmp
push
je
rorb
pusha
sub
push
les
xor
aam
sub
outsl
and
in
clc
mov
pop
lcall
dec
push
inc
movsl
dec
and
scas
aam
lret
inc
popa
ja
sbb
mov
jl
mov
jp
pop
sbb
inc
inc
jp
pop
imul
pop
je
les
sbb
add
mov
push
or
movsb
jp
repnz
xchg
adc
popa
shlb
push
cmp
ljmp
pop
jno
lahf
adc
fnsetpm(287
sub
in
jns
or
or
ja
xchg
popa
cmp
add
test
sti
sarb
jnp
pushf
outsl
or
push
xor
inc
leave
inc
add
push
xchg
cmp
cmp
sbb
repnz
mov
xor
bound
dec
xchg
cld
push
into
aad
jmp
or
mov
stos
pop
icebp
dec
dec
lds
and
mov
imul
cwtl
aas
and
push
jno
dec
outsb
cli
sarb
sub
mov
sbb
mov
sbb
fwait
mov
daa
mov
pop
pop
pop
xchg
rcrl
inc
jbe
push
out
adc
xor
popa
repz
dec
std
dec
mov
xchg
pop
es
dec
gs
shll
fdiv
inc
push
xchg
rolb
out
lds
mov
mov
rcl
cmp
cltd
cltd
ds
stc
add
jp
push
mov
fs
or
inc
dec
arpl
out
or
cmp
aad
pop
sbb
data16
xor
inc
int3
jbe
dec
insl
push
push
pop
mov
aaa
fisttpl
aaa
mov
cmpb
dec
les
test
push
pusha
xchg
or
test
cmp
or
sarb
push
cmp
ror
pop
repz
push
ficoml
loopne
in
shlb
sbb
icebp
shlb
adc
sti
jbe
add
incl
rcr
mov
and
imul
shlb
fnstsw
outsl
add
sarl
mov
and
shll
push
and
adc
test
cmp
dec
cltd
and
incb
in
es
jle
pop
aaa
filds
jns
cmpsl
clc
dec
push
aas
dec
mov
test
dec
test
bound
test
mov
repnz
popf
or
push
xchg
inc
out
dec
mov
insl
cmp
das
sub
and
mov
cld
cmp
jnp
call
pop
repnz
mov
cmp
arpl
ret
shlb
shrl
push
movsl
or
popa
ja
xchg
dec
jae
push
mov
adc
ret
xor
xchg
adc
shll
pop
scas
testl
daa
and
add
jl
adc
mov
pop
add
mov
fnstsw
adc
and
hlt
pop
mov
cmp
nop
inc
dec
dec
sub
rolb
std
imul
jb
es
dec
cmp
add
std
mov
or
jae
adc
pop
stc
push
nop
lea
mov
cli
dec
xchg
push
push
aas
push
mov
popf
js
je
insl
cmp
inc
mov
mov
pop
bound
inc
jecxz
jne
outsb
mov
addr16
xor
popa
jmp
add
jne
loop
xchg
repz
jns
in
lahf
adc
jb
cltd
jecxz
xor
adc
push
cmp
sbb
and
outsb
jecxz
mov
xchg
ret
imul
xor
out
jne
pop
jno
out
sbb
xor
movsb
dec
pop
pop
or
into
popf
mov
fdivp
pop
sqrtps
jmp
xor
pop
addr16
push
or
cmpsb
jecxz
lds
loop
test
daa
jae
add
add
cmp
bound
mov
test
inc
hlt
pop
push
xchg
aad
icebp
pop
mov
je
lcall
mov
addb
enter
loopne
sbb
shll
mov
add
sbb
and
addl
sub
in
jo
xchg
notl
dec
mov
andb
mov
sub
jno
dec
jns
insb
and
cltd
test
movl
rclb
rorl
insl
fucom
and
stos
fstl
psubq
pop
or
cmp
icebp
fldcw
pop
mov
and
movsb
xchg
inc
test
dec
sbb
movsb
cli
popa
mov
mov
add
mov
cmp
test
rcrb
loop
cmp
mov
repz
divl
jge
lea
mov
dec
push
sub
xor
in
xchg
sub
inc
fisubrl
lret
stc
sti
fwait
aaa
dec
cmp
leave
fmul
pop
push
xor
data16
dec
mov
mov
movl
dec
mov
mov
mov
fists
scas
cmp
xor
or
xor
loopne
push
mov
inc
mov
inc
push
sub
xor
and
cld
fs
sub
or
jbe
ljmp
sbb
orb
loope
sub
add
jbe
popf
int3
adc
sti
and
dec
sbb
pop
push
adc
ja
data16
outsl
or
daa
mov
sbb
inc
dec
dec
and
bound
pop
je
pop
add
std
xlat
add
loop
push
jne
sti
xor
mov
lock
adc
call
or
mov
xchg
pop
mov
jl
stc
push
xor
mov
or
insl
xor
and
mov
pop
pop
mov
or
push
iret
lds
or
les
daa
in
imul
cwtl
fdivrs
sub
inc
sti
cli
clc
push
add
stc
jecxz
mov
dec
cmp
ds
psadbw
inc
mov
pop
nop
out
sti
repz
fstl
sub
push
sbbl
xor
push
rcrl
leave
add
push
sub
push
mov
aad
stos
rcrb
or
push
icebp
mov
out
fistpll
or
cli
fsubs
sbb
xor
movsb
sub
sub
rclb
sbb
mov
xor
push
mov
jno
mov
cmp
insl
jle
test
movsl
or
mov
push
popf
fstpt
cmp
dec
sti
lcall
add
push
or
nop
mov
add
popf
mov
lret
and
sub
ret
pop
sub
or
push
or
bound
jb
cmp
inc
sbb
xchg
daa
fs
jg
movsb
jmp
lahf
movq
imul
add
daa
movsb
add
icebp
loopne
fsts
push
inc
jmp
adc
or
adc
ret
cmc
pushf
xor
push
pop
cmpsb
mov
push
gs
or
mov
or
jl
mov
test
adc
push
insb
mov
shl
xor
jmp
aaa
cltd
test
movsb
and
dec
movsb
sbb
divb
push
pop
test
lret
sti
pop
mov
negl
clc
xchg
mov
mov
fcomps
push
mov
xor
and
dec
sbb
fnstenv
dec
push
dec
sbb
jge
pop
xchg
cmp
inc
std
and
adc
sbb
push
pop
movsb
sti
stos
out
push
and
jle
mov
xor
mov
sahf
sub
and
test
pusha
inc
inc
cwtl
mov
daa
dec
test
cmp
vcvttss2si
mov
popf
pshufw
in
mov
jmp
loopne
pop
movsl
or
popl
sbb
cmp
aaa
iret
prefetcht0
lods
aas
mov
pop
lock
mov
or
jge
xor
hlt
xor
call
movsl
jne
aas
in
add
jl
arpl
and
dec
ja
add
shl
out
mov
sbb
inc
enter
pop
sarb
xchg
icebp
jmp
aas
lahf
test
cmp
and
mov
mov
push
and
idivl
dec
gs
lahf
ljmp
outsb
sbb
mov
mull
aad
xlat
test
xchg
dec
shl
and
cmc
mov
mov
neg
iret
mov
or
push
jae
orb
fnsave
cmp
and
cmpsb
dec
mov
push
inc
out
inc
mov
test
adc
jg
xchg
sarl
out
ss
xor
push
sbb
std
out
dec
fdivl
mov
fs
sbb
xchg
push
outsb
xchg
mov
stos
negb
mov
push
sub
and
xlat
out
jge
mov
and
push
push
ljmp
xchg
push
cmc
dec
ja
sub
jp
lahf
cmp
rorb
or
jb
xchg
pushf
xor
scas
push
ret
add
paddsw
clc
leave
rolb
lock
mov
xor
sub
mov
mov
ror
and
mov
adc
mov
jge
add
and
mov
inc
orl
adc
jnp
aad
xor
xor
mov
add
inc
mov
add
lahf
mov
mov
cmp
sub
pop
bound
mov
dec
je
sti
pop
ds
push
dec
jle
push
dec
sub
fildll
ret
es
xchg
mov
push
mov
stos
xor
addr16
pop
test
or
inc
xor
add
mov
test
outsb
mov
lret
adc
sub
sbb
cmc
clc
and
add
cmp
cwtl
les
dec
sub
in
mov
cmc
adc
dec
jp
mov
add
lret
mov
sub
sahf
test
ljmp
arpl
ds
out
out
inc
mov
sbb
pop
sahf
mov
push
cltd
dec
adc
pop
or
mov
xchg
xchg
cltd
adc
js
mov
nop
mov
mov
adc
cmp
mov
inc
mov
or
jmp
sbb
daa
imul
mov
lret
and
rcrl
aas
es
outsb
push
out
or
pop
adc
push
lret
stc
xor
out
out
mov
mov
loopne
std
or
pushl
push
mov
push
sbb
xchg
cmp
xchg
in
lahf
bnd
sbb
dec
daa
push
test
push
mov
cmp
fsubl
mov
outsl
in
scas
sub
ret
mov
sub
and
dec
push
ja
jne
xchg
insl
mov
xchg
mov
jp
inc
dec
jne
and
cmp
orps
xor
je
ja
cmc
pop
mov
cmp
mov
jge
stc
je
jecxz
xchg
mov
sti
shrb
pop
arpl
pusha
cmpsb
or
pop
adc
jne
enter
jb
mov
push
cmpl
inc
stc
pop
lods
sbb
mov
dec
pop
das
hlt
mov
sarb
lods
inc
jae
push
fsubl
filds
aam
ret
and
hlt
mulb
shl
sbb
cli
mov
rolb
sbb
dec
ja
mov
cmovns
jp
mov
sub
mov
add
xchg
rcr
das
arpl
and
push
stos
jle
push
push
je
aaa
inc
push
stos
mov
and
dec
fcomi
pop
sbb
cmc
pushf
cmp
sub
push
sti
scas
es
inc
and
clc
pushf
outsl
fisttps
pusha
ja
cmp
iret
adc
lods
or
pop
xor
push
xchg
push
notb
pop
aam
sbb
adc
push
add
sbb
adcl
xor
cmpsl
jae
sub
xor
cmc
stos
jae
or
sbb
sub
mov
mov
pop
jp
mov
mov
aam
push
sub
lods
inc
aas
icebp
arpl
cmpsb
arpl
into
xchg
sbb
push
clc
or
dec
divb
mov
add
js
sub
imul
repnz
mov
jns
xchg
cwtl
pushf
sbb
pushf
lods
leave
arpl
out
adc
mov
testb
sub
imul
testb
inc
sbb
and
in
mov
into
int3
xor
lds
and
idivb
popa
sbb
xor
test
fwait
push
negl
std
clc
insl
pop
add
mov
stc
ret
and
enter
rcrl
popf
and
lret
and
jg
out
cwtl
sub
pusha
mov
js
push
out
pop
inc
leave
arpl
loop
call
pusha
loopne
push
psubw
cmpsb
xchg
and
pop
xor
cwtl
imul
pop
jbe
loopne
inc
loopne
push
cmc
cmp
fs
cmp
adc
popl
je
mov
xchg
jne
xchg
jmp
sbb
out
nop
aam
jle
test
jmp
mov
mov
add
push
test
scas
jmp
push
cld
movsb
inc
pusha
mov
mov
lcall
push
pop
and
lret
aad
sbb
insb
loopne
je
mov
adc
sti
mov
pop
mov
dec
pmaxsw
sbb
adc
std
cmp
fs
cmp
popf
and
popa
push
pop
imul
pop
xor
mov
lock
mov
cmp
mov
adc
test
aaa
mov
mov
xchg
jg
push
nop
pop
pushf
fsubrl
or
jns
mov
xchg
inc
and
xor
rcr
mov
mov
lea
es
call
popa
test
jp
stc
mov
mov
arpl
pop
pusha
or
xchg
pop
xor
jmp
test
push
aam
cmp
in
jge
add
xor
sbb
int3
arpl
add
les
push
in
sub
mov
or
cmp
mov
je
xchg
cwtl
jae
repz
ret
out
aas
sbb
add
jp
es
sti
xor
and
idivb
xor
mov
enter
push
or
int
xorl
mov
xchg
mov
sub
sub
push
jb
push
xor
dec
out
into
dec
pop
mov
mov
xchg
mov
out
xchg
nop
and
xchg
cs
arpl
adc
shrl
test
clc
dec
rep
or
js
or
or
enter
xor
inc
rcl
out
and
sbb
pop
and
outsb
cmp
into
push
fnstsw
xor
or
sbb
jne
leave
test
data16
pop
ss
dec
mov
and
cmp
xchg
and
xchg
lahf
jp
jns
imul
mov
mov
into
mov
sbb
xchg
sub
dec
mov
jmp
stos
mov
or
adcb
aaa
jmp
jno
mov
testl
xorl
xlat
mov
mov
in
mov
lods
mov
lods
adc
daa
push
int3
inc
pusha
pop
arpl
pop
mov
cmp
mov
xchg
pop
pop
or
nop
test
cld
xor
add
inc
mov
xor
pop
dec
stc
into
pop
insb
arpl
xchg
loop
and
outsb
or
hlt
sbb
xor
data16
std
xchg
mov
int
xor
lock
std
imull
jge
cmp
jbe
xchg
dec
pop
jmp
add
xchg
outsb
cmp
out
add
jmp
mov
std
cmp
gs
xor
cmc
aas
sbb
pusha
popa
cmpsw
jmp
fists
lods
bound
adc
cmp
and
fiadds
sbb
shrb
in
mov
jae
sub
and
adc
inc
jbe
adc
test
stos
aam
jno
inc
rclb
mov
bound
inc
lods
and
repz
pop
xchg
xchg
xor
icebp
fbld
mov
jle
shl
fs
push
clc
rorb
and
movsb
xor
inc
inc
aam
out
movsl
add
mov
rorl
clc
jbe
loope
or
push
xchg
adc
in
xchg
adc
scas
cs
movsb
jmp
jne
not
arpl
mov
lret
mov
and
cld
and
push
sahf
pop
popf
or
sbb
sti
rdpmc
xchg
cmpl
lahf
mov
aad
adc
mov
or
xchg
pop
mov
sbb
add
out
jl
fstl
leave
neg
dec
cmp
fdivs
enter
mov
adc
jecxz
gs
sahf
cwtl
cltd
sbb
add
leave
mov
push
out
and
inc
in
cli
cmpsl
and
cmpsb
clc
sbbl
pushf
test
sbb
pushf
cmp
es
lea
repz
imul
xor
push
or
addr16
lock
pop
push
mov
sbb
fwait
lahf
out
ja
ljmp
nop
out
test
sub
std
or
push
lods
jp
fs
icebp
dec
notl
xchg
xchg
add
lret
push
xchg
push
mov
cmp
inc
pop
adc
mov
xor
pop
xor
movsl
stc
push
dec
shlb
insb
arpl
cltd
loope
clc
int3
in
sti
aas
adc
mov
aad
xchg
add
xchg
enter
test
mov
xor
loope
scas
xchg
arpl
jb
or
adc
push
fisttps
push
adc
dec
or
and
insl
fstpl
les
mov
sbb
adc
jecxz
rcr
pop
sbb
fisttps
orb
add
mov
mov
ljmp
pop
rorl
cs
pop
dec
mov
xor
jl
adc
loope
sub
dec
leave
add
pusha
inc
ljmp
sbb
cmp
cmc
shrb
stos
pop
cs
popf
inc
dec
shrb
sbb
or
gs
xor
movsb
mov
mov
xor
adc
loope
mov
jmp
add
jno
cmpsb
adc
test
int3
imul
lea
call
mull
test
adc
sbb
dec
jnp
push
sub
lret
mov
and
pop
adc
cmp
push
out
mov
pop
aam
repz
pusha
cmpsb
stos
call
pop
pusha
inc
rcl
jge
lods
pop
or
mov
xchg
adc
enter
cmp
mov
sub
cmp
sbb
sub
jmp
mov
or
or
in
fwait
dec
inc
stc
aas
scas
daa
add
sub
jae
or
repnz
inc
mov
add
data16
xor
cmp
or
pop
or
cmp
out
mov
mov
clc
imul
jnp
inc
in
mov
bound
sub
xchg
rcrb
push
cmp
adc
ljmp
inc
mov
and
dec
xchg
rorb
adc
fimull
pushf
adc
jmp
mov
push
mov
icebp
in
lods
pop
out
jae
insb
je
cmp
xor
inc
sarl
or
adc
push
cmp
xor
push
int3
out
sbb
popf
aas
xchg
push
fbld
pop
scas
sbbl
mov
aam
pop
add
ret
fs
fstpl
mov
mov
xor
enter
mov
lret
mov
pop
loopne
cmp
popa
mov
mov
xor
push
dec
das
or
and
leave
mov
lahf
xchg
xor
mov
in
push
sar
mov
lds
jl
pop
das
out
or
xchg
xchg
stc
ss
pop
enter
fs
cmc
xchg
icebp
jns
les
subb
jge
or
pop
inc
xlat
xchg
bound
cmp
gs
scas
push
sub
or
setbe
test
mov
lods
dec
push
adc
lret
push
fimull
les
mov
add
scas
push
mov
push
or
sub
aas
stc
or
fildll
cli
mov
and
mov
insb
fildll
sahf
bound
loope
sahf
ljmp
ljmp
xchg
call
mov
mov
push
cmc
push
add
cli
push
xchg
sub
test
clc
jl
imul
xchg
cmp
movsl
sbb
mov
xor
aaa
mov
cli
int
cmp
loope
out
inc
pop
shrb
sti
and
adc
dec
icebp
out
adc
xchg
mov
xchg
lock
movmskps
lahf
pushf
dec
push
cmp
mov
mov
push
or
das
lea
pop
ret
cltd
aaa
ficompl
mov
movups
je
pop
mov
jns
data16
push
jp
dec
lods
push
lahf
mov
mov
shlb
mov
sub
rclb
push
pop
xchg
pusha
jnp
adcb
fisttpl
out
scas
dec
decb
push
cli
fmull
adc
popf
cmpsb
imul
cs
jb
or
repnz
sub
xor
fwait
fwait
in
xchg
stos
shll
je
jb
ret
cmc
leave
clc
push
sub
pop
js
out
sub
fucom
dec
sar
xlat
and
xorb
and
push
test
sbb
dec
js
js
pop
xchg
adc
inc
cmp
out
jae
lods
xor
dec
out
pop
dec
inc
adc
imul
mov
push
cltd
rorl
fs
dec
sub
push
dec
sub
int3
dec
cmp
pop
pop
lds
add
dec
daa
dec
add
clc
xor
outsl
and
add
stos
push
pop
mov
stc
dec
inc
push
notl
inc
and
pop
ja
pop
in
mov
adc
cmp
xor
ret
xor
adc
stc
in
dec
cmp
jo
iret
xchg
aad
into
add
xchg
cmp
xor
nop
xchg
dec
lods
test
jnp
push
int3
out
sub
and
xlat
xchg
dec
jno
inc
stos
inc
js
xchg
inc
pop
ljmp
jp
adc
popa
js
dec
jp
or
xchg
push
bound
xor
nop
stc
aas
inc
test
imul
loop
inc
cmp
jmp
fnsave
test
adc
or
mov
psubusb
int
pop
xor
popf
add
mov
adc
jecxz
into
jge
pop
inc
aad
rorb
adc
mov
xchg
xor
xor
lcall
and
sub
in
cld
or
hlt
dec
inc
add
call
scas
inc
jnp
test
pop
dec
xchg
and
mov
push
cmp
xchg
andb
jno
mov
mov
andl
data16
fisttpll
cld
mov
icebp
jle
fs
addb
xor
inc
push
negl
sbb
lret
mov
and
cmp
icebp
clc
xchg
xchg
inc
mov
js
rclb
pop
bound
addr16
popa
out
or
cmp
pushl
push
cmp
int3
stos
jns
aam
jmp
test
jb
out
inc
rol
xchg
popf
jo
cmp
lock
pop
into
nop
pop
dec
or
push
inc
mov
pop
mov
fsubrs
in
inc
jle
push
mov
push
mov
divb
cmp
mov
xor
xchg
dec
ja
and
lahf
ljmp
lea
pop
cmp
fmul
notl
fs
lret
stos
xchg
or
test
adc
jo
cltd
into
pop
fs
and
lds
outsb
xor
es
pusha
inc
or
jp
mov
lahf
dec
es
add
mov
xor
hlt
loopne
cltd
aam
arpl
jecxz
aaa
sub
dec
pop
sbb
lock
xor
or
movsl
sbb
inc
ja
mov
je
nop
inc
jno
mov
fiadds
adc
test
mov
outsl
stc
lahf
xchg
repnz
cmp
hlt
inc
xlat
out
cmp
lret
pop
adc
insb
jo
adc
cmpb
xchg
push
push
adc
sub
cmp
les
bound
stos
dec
cwtl
adc
in
aas
mov
cmp
das
cmp
je
push
in
and
addr16
dec
pop
add
inc
inc
or
scas
pop
sbb
fs
cmp
pop
repnz
jns
add
pop
push
mov
pop
pop
add
jl
xchg
inc
pop
adc
and
or
pop
cmp
or
pop
fidivrs
adc
and
outsb
lahf
loope
nop
xchg
and
out
rorl
sbb
xchg
add
cmp
push
sarb
das
or
jne
aaa
je
push
mov
aas
ffree
bound
jmp
sbb
lcall
and
sbb
mov
fwait
push
sub
movsl
out
sahf
and
pop
xchg
cmp
out
xor
mov
test
jle
or
push
jne
pop
xchg
push
push
fbstp
xchg
xlat
jl
mov
stos
and
mov
sub
out
shrl
in
mov
cmp
cmp
fidivrl
mov
imul
fmul
pop
mov
adc
inc
cmc
dec
dec
in
inc
gs
or
mov
cwtl
std
push
and
and
shll
push
ret
push
sbb
arpl
fisubrl
dec
int3
repz
push
ja
jae
mov
test
push
sub
mov
add
inc
lods
arpl
pop
or
dec
xchg
in
mov
add
test
add
clc
cmp
adc
push
shlb
ljmp
stos
mov
fwait
dec
pop
dec
out
clc
test
mov
mov
fs
arpl
je
adc
insb
test
mov
push
in
and
pop
push
xor
sbb
push
daa
sub
dec
dec
xchg
jge
sarb
ljmp
jge
cli
jno
add
insl
inc
mov
xchg
addl
repnz
mov
repz
mov
adc
sub
sti
js
mov
sar
push
cmc
cltd
ljmp
loope
cltd
sub
mov
repnz
bound
es
js
sti
clc
add
les
in
bnd
jnp
mov
mov
rclb
jae
inc
clc
lods
inc
les
mov
jnp
add
cmp
inc
andl
xchg
pop
ja
aas
sub
fcompl
sbb
dec
andb
outsb
xor
fistl
scas
sub
push
pop
dec
mov
dec
jbe
jns
xor
push
loope
mov
inc
mov
addr16
scas
lahf
mov
in
pusha
push
sbb
je
movsl
push
jecxz
repz
gs
and
shlb
es
dec
inc
jge
imul
sti
jns
pop
mov
and
jns
loop
in
adcl
int3
test
ss
cmp
fdivr
insl
nop
mov
push
push
shll
push
cmp
outsb
jmp
or
adc
mov
inc
pop
out
pop
dec
movsl
ret
push
inc
mov
pop
xchg
jmp
sbb
sub
or
out
pop
in
jae
negl
inc
inc
enter
dec
add
cmpsb
sub
out
frstor
xor
and
stos
sar
pop
push
xor
mov
jmp
inc
xchg
push
mov
stos
xor
shll
sub
push
add
das
sub
dec
jb
or
repnz
sub
or
icebp
negl
jle
add
pop
fnstcw
cmp
push
mov
mov
inc
sbb
cli
popa
add
aaa
lcall
jle
jp
mov
imull
push
out
sahf
pop
in
shlb
add
jns
cmp
xlat
xor
and
bound
ja
inc
cmc
pushf
xor
xor
sub
enter
mull
dec
jge
adc
pushf
xor
mov
cmpsl
mov
cmp
cwtl
aad
loop
test
hlt
iret
fisubrs
mov
cmp
faddl
or
push
fnstenv
call
pop
and
test
jle
insb
cmp
ljmp
cs
sub
xor
xor
nop
inc
dec
in
mov
cmp
call
or
adc
roll
rcll
mov
ret
aas
je
std
gs
jo
jbe
and
mov
sub
aaa
mov
mov
sub
divb
lcall
lock
add
fisttpll
and
mov
dec
mov
fld
jge
sbb
pop
clc
filds
mov
jae
cmp
dec
frstor
push
mov
and
inc
stos
xor
jns
mov
int
jg
adc
mov
xchg
cld
or
dec
test
mov
rolb
in
add
inc
mov
push
pop
and
loopne
fisubs
add
out
std
mov
shrl
mov
mov
and
inc
pusha
cmp
fimull
nop
push
clc
push
imul
mov
dec
sbb
adc
bound
les
das
xchg
test
add
lds
push
add
and
out
out
or
cmpsl
ret
mov
int3
pop
sti
sub
sti
jns
mov
dec
sub
and
or
sbb
stos
sbb
xchg
cli
inc
mov
sub
shlb
mov
icebp
fmuls
jns
movsb
enter
daa
adc
stos
inc
rcrb
mov
out
mov
jb
and
scas
ds
pop
sbb
movsl
xchg
test
jne
cmp
repz
adc
jbe
and
or
pop
clc
push
jno
paddsb
pop
add
dec
insl
stc
loopne
dec
adc
aam
out
and
cmp
je
jecxz
sbb
jle
pop
xor
arpl
in
out
pusha
or
sub
cli
jge
sub
inc
test
cltd
cwtl
cmp
jo
dec
pop
shrb
xor
dec
test
xor
inc
fldcw
insl
jno
notl
inc
push
jno
in
sbb
push
mov
adc
inc
dec
sbb
inc
loopne
adc
inc
test
add
mov
fdivrl
pop
mov
push
adc
cmp
addl
or
dec
jo
fisubrs
pushf
and
mov
ss
push
add
addl
xchg
inc
fcmove
movsb
adc
and
gs
stc
sub
call
sub
lock
insb
insl
sub
push
sbb
or
inc
xchg
fwait
imul
fnstcw
push
sbb
pop
dec
jne
jge
pop
int3
inc
ja
pop
sbb
and
in
es
adc
pop
sub
call
cwtl
xor
add
stc
sarb
std
testb
jne
add
lcall
jno
ljmp
fsubs
imul
lahf
fs
cmp
lods
or
and
ss
js
lahf
jecxz
inc
cmp
sub
mov
es
push
ret
scas
insb
repz
push
icebp
lahf
pop
aas
sub
jmp
subl
loope
pop
sub
insb
push
inc
popf
inc
push
lods
cwtl
mov
sahf
stos
sub
outsl
mov
mov
scas
add
add
push
stc
push
mov
data16
scas
fidivl
xor
movsb
and
leave
pop
loopne
aad
sub
lods
push
sub
pop
enter
rolb
cmp
or
ja
adc
fdivr
push
pusha
sub
jbe
xor
sti
inc
xorb
sbb
cmc
mov
and
dec
cmp
push
add
jno
mov
nop
negl
dec
inc
lret
les
test
sbb
data16
inc
inc
and
push
jle
pop
hlt
movsl
or
push
add
out
pop
mov
popa
icebp
mov
ds
or
aam
fistl
mov
lock
in
and
rclb
mov
dec
int
mov
movsb
xchg
pop
xor
dec
fidivrl
cmp
push
cltd
test
and
dec
sbb
cmp
rcrb
mov
add
jl
push
mov
or
mov
sub
into
enter
jmp
pop
cmc
aaa
mov
adc
inc
ss
cmp
inc
jb
push
cmp
add
rorb
mov
xchg
pop
lds
jb
or
jle
sbb
ss
pop
jecxz
call
push
dec
shlb
shl
sbb
cmpsb
call
push
cmp
cmp
jns
out
lea
sub
fwait
adc
mov
xor
jmp
sbb
xchg
test
xor
sbb
dec
adc
sbb
faddl
test
inc
and
sbb
and
sbb
shl
sbb
rcll
sahf
cmpl
xlat
clc
dec
aad
imul
dec
dec
jns
nop
negb
popf
test
popa
fisttpll
repz
cmpb
pop
mov
jmp
xchg
and
inc
dec
push
sti
sbb
dec
and
sbb
add
std
mov
mov
or
mov
and
fmull
mov
adc
gs
push
test
and
jae
call
jnp
xor
or
pop
adcl
ret
mov
hlt
push
dec
mov
fsubrl
inc
pushf
xor
and
xchg
bound
xor
mov
fbstp
pop
cld
push
inc
push
lock
inc
lahf
arpl
cmp
test
dec
mov
xor
movsb
push
mov
and
mov
adc
jbe
clc
add
sub
in
mov
in
push
cli
loop
push
jno
ret
xchg
ja
in
jns,pn
or
add
mov
push
shll
pop
mov
and
pop
pusha
es
add
mov
dec
or
repnz
cmpsb
adc
das
fwait
xor
mov
push
nop
pop
dec
jle
dec
dec
inc
xor
pusha
xchg
lea
or
out
rep
pop
ss
bound
pop
push
push
xchg
mov
or
dec
scas
and
sbb
in
popa
cmp
jb
jae
push
inc
mov
into
pop
jle
xor
mov
jo
push
xchg
mov
and
mov
es
and
sub
pop
or
leave
inc
popl
gs
pop
data16
lcall
xor
and
add
push
movaps
push
push
pop
es
jns
hlt
sbb
mov
xor
jnp
insl
stos
cmp
mov
int3
dec
pop
pop
sbb
inc
mov
cmp
cld
cs
dec
sahf
adc
fs
inc
mov
add
sbb
notl
in
dec
test
sbb
xlat
mov
jle
pop
cmpsl
cwtl
rcll
push
pop
data16
cli
mov
ljmp
mov
aaa
mov
testl
adc
aad
test
inc
popf
and
jmp
adc
je
in
js
pop
lock
clc
imul
test
mov
insb
pop
aaa
cmp
or
jmp
adc
xchg
decb
fidivl
push
mov
test
dec
aaa
shll
or
pop
push
stos
mov
or
jns
sub
xor
xor
or
inc
out
test
fwait
sub
cmc
rcrb
sarl
pop
outsl
in
adcl
mov
arpl
insl
popa
aas
iret
js
les
lods
adc
xor
imulb
mov
loop
adc
adc
stc
enter
inc
and
push
and
fs
mul
rcrl
sbb
nop
xchg
pop
in
lcall
sub
int
inc
sbb
into
lahf
push
orl
xchg
cmpb
lock
mov
arpl
ret
jbe
dec
dec
mov
into
mov
les
nop
and
imul
aam
js
push
sub
addr16
lret
shlb
jno
je
test
fcomp
into
je
fs
sarl
jno
imul
pop
dec
mov
mov
scas
inc
pop
and
jle
lods
jecxz
pop
add
call
mull
mov
add
insb
sahf
pop
in
dec
stos
loopne
shll
fwait
adc
mov
or
pop
xor
pop
cld
pop
jmp
or
and
push
idivb
cwtl
cmp
sar
add
inc
test
mov
and
fldl
sbb
push
shll
xor
sub
mov
sbbb
pushl
repz
ffreep
adc
cmp
mov
adc
xor
sub
inc
jae
lret
mov
mov
dec
mov
imul
sub
jl
push
es
call
inc
inc
dec
dec
dec
pop
inc
sbb
dec
jnp
or
pop
bound
rcrl
mov
sbb
les
adc
stos
lea
lahf
cmp
xor
movsb
inc
inc
imul
je
add
pop
mov
addl
mov
inc
and
aam
pop
mov
je
dec
dec
js
dec
test
imul
pop
mov
push
sbb
pop
xor
ret
scas
jge
popa
push
and
dec
pop
ret
call
and
data16
leave
push
pop
std
movsb
insl
and
xorl
jne
pop
and
stc
or
jg
and
adcl
pop
stos
inc
fdivrl
push
mov
es
lock
sub
pop
movb
imul
jno
dec
xor
or
adc
ja
and
imul
ror
sti
test
jbe
das
fwait
pop
test
mov
jne
sub
test
mov
sbb
and
insb
xlat
pop
ljmp
jle,pt
fimuls
mov
ret
fdivl
repz
adc
jnp
sub
stos
mov
enter
adc
movl
sub
mov
sub
pushf
mov
sti
and
dec
in
jb
pop
or
hlt
rorb
daa
imul
js
test
dec
cwtl
push
sub
data16
loop
dec
pop
dec
xor
iret
fdivl
aaa
add
nop
enter
fldenv
loopne
cmp
btc
pop
test
lahf
mov
in
pop
shl
insb
and
lods
lods
xorl
cmc
mov
inc
mov
mov
fistpll
shlb
gs
push
mov
jg
xchg
test
lcall
sbb
cmp
in
mov
mov
adc
into
shrl
xchg
pushf
push
stos
and
hlt
xchg
jp
mov
lock
cli
mov
fistpl
sbb
cld
xchg
lahf
jb
or
adc
mov
cmp
dec
iret
call
in
mov
aaa
inc
sbb
push
xchg
sbb
mov
mov
cmpb
fsubl
cmc
adc
pop
cmc
push
mov
fsubl
cmc
mov
xchg
js
jo
adc
jnp
xor
dec
and
out
je
dec
ja
pop
icebp
dec
aas
out
inc
jns
xchg
jnp
mov
sub
dec
or
pop
pushf
mov
in
in
sub
push
pop
pop
jae
stos
testl
decl
call
jo
add
push
mov
cmp
out
and
andl
jo
jbe
out
mov
shrl
xor
clc
imul
int3
add
inc
stc
mov
mov
imul
out
cmp
jle
and
or
rolb
push
jge
mov
imul
and
push
pop
push
lret
inc
pop
icebp
insl
sub
pop
inc
push
and
push
cmp
cmp
test
push
or
sub
xchg
ja
shll
adc
xlat
fs
dec
pop
rolb
arpl
arpl
aaa
aaa
lods
lock
rclb
xor
adc
sub
xorb
xorb
or
aaa
push
pop
ljmp
lea
add
mov
dec
lahf
pop
or
push
add
fsubrl
lods
jns
cwtl
in
cmp
lret
pop
and
adc
lock
adc
xchg
sbbl
and
movsb
pop
lcall
loop
test
dec
in
movsb
rorl
hlt
stc
mov
mov
jl
mov
js
stos
cld
test
stos
push
test
dec
xchg
jle
jmp
mov
xlat
adc
inc
mov
fldl
stos
push
or
popf
adc
dec
clc
cmpsl
jns
cwtl
clc
ret
push
pop
push
je
je
inc
mov
mov
and
faddp
mov
cmc
jecxz
es
jge
in
sbb
mov
movsb
loopne
repz
mov
push
push
in
mov
xchg
rcrb
cmc
fistpl
lea
mov
shll
in
adc
imul
call
dec
aam
popf
dec
mov
imul
pop
ljmp
xor
jne
pop
sbb
cmp
jb
fsts
lret
xor
out
pop
mov
aaa
or
push
lods
aas
fmuls
or
mov
das
mov
lock
or
jmp
mov
jmp
test
inc
jmp
push
cli
dec
aas
jge
push
push
jns
add
xchg
sbb
push
xor
or
xchg
mov
jg
negb
jo
jns
cmpsl
jge
sbb
mov
xchg
push
mov
adc
lods
repnz
js
sbb
mov
xchg
rcl
xor
push
popf
pop
lea
mov
nop
adc
enter
and
jo
sub
xchg
jle
sti
sub
mov
sub
cmp
cmova
lods
popf
cli
xor
out
or
jae
and
pop
mov
mov
jl
mov
push
ret
jle
or
jmp
mov
lods
inc
fwait
add
jbe
lea
push
pop
std
pop
dec
xchg
movsb
test
repnz
dec
and
test
cmp
cmp
xor
popf
mov
adc
call
out
cmc
jns
stc
in
jecxz
dec
add
mov
aam
lret
or
mov
sbb
cmpsb
adcb
push
dec
cmp
dec
and
adc
pop
mov
ficoml
test
cmc
sub
push
dec
push
inc
inc
cwtl
sub
push
rol
sbb
std
adc
and
dec
dec
pop
mov
cmp
ljmp
xchg
mov
popa
hlt
mov
fcompl
popf
sbb
xor
and
sub
adc
loope
or
lcall
push
filds
adc
enter
movsl
inc
pop
dec
xor
dec
idivb
xor
rcl
push
and
imul
or
or
jp
out
insl
jmp
jl
xor
scas
sub
dec
in
cltd
add
ret
inc
xlat
sbb
jae
ja
jp
mov
popa
jae
popa
leave
xor
mov
hlt
mov
movsb
pop
clc
cmp
loop
popl
test
hlt
repnz
mov
sbb
loopne
ja
adc
push
jo
or
ja
and
mov
adc
enter
mov
and
fadd
andb
ss
test
push
pop
outsw
repnz
aaa
or
dec
jo
mov
aad
in
or
mov
mov
mov
nop
lods
cltd
int
lods
xor
in
add
jb
mov
cmp
sbb
push
std
mov
fmuls
inc
sbb
subl
jp
pop
lock
rcrl
ret
icebp
lret
pushf
cli
and
cmp
sub
jmp
in
or
out
arpl
test
ja
data16
pushf
inc
enter
mov
adc
outsb
loop
clc
jmp
scas
in
pop
daa
cmpl
es
jecxz
stc
and
int
pop
mov
clc
je,pn
stos
mov
pop
or
mov
stos
mov
mov
xchg
cmp
sbb
mov
call
std
pop
insl
fs
hlt
lea
enter
sub
push
adc
adc
movsl
push
sub
add
test
sub
das
out
push
sbb
jmp
fcmovnu
shrb
xchg
sbb
aaa
insl
out
pop
loop
fdivr
mov
das
sbb
push
lods
stc
cmp
popa
push
sbb
jo
repz
cltd
stc
int
ret
jecxz
and
add
popa
and
push
fwait
jg
lahf
lret
jle
sub
inc
adc
pop
mov
nop
adc
lods
test
imul
push
mov
dec
lahf
cwtl
add
xor
pusha
dec
lds
in
and
cmp
aad
popf
push
inc
sbb
fisttps
add
mov
add
jmp
test
repz
popf
mov
dec
js
cmp
shufps
inc
mov
outsb
inc
cmp
and
jns
inc
xchg
test
ljmp
outsl
je
enter
ja
int
popa
outsl
mov
xchg
shlb
cmp
fucomp
pop
fcomps
stc
sbb
pop
lret
cmc
jmp
fnstsw
and
lret
jmp
cmc
stc
movsl
fdivrs
push
into
shll
lahf
dec
in
pop
scas
lods
dec
inc
lock
fs
mov
fisttps
ss
push
sar
aaa
pcmpeqw
pop
negb
divl
testb
jmp
or
sbb
imul
sbb
aaa
or
loopne
cmpb
ret
pop
jno
sub
adc
loope
js
lods
pushf
mov
cltd
pop
je
and
sti
adc
add
imul
mov
cmp
movsl
loopne
pop
mov
lahf
xchg
sbb
cmp
fadd
inc
jae
lods
sub
dec
adc
pop
mov
mov
cmp
std
jne
dec
sub
psllq
push
sbb
xchg
mov
mov
lcall
xchg
inc
add
mov
arpl
jge
and
jnp
push
mov
push
cmp
mov
ljmp
addr16
ficoms
fstl
pop
push
or
jnp,pn
es
sub
clc
clc
and
mov
icebp
lea
push
mov
add
fcomi
or
push
mov
fsts
add
cs
leave
push
out
jnp
cld
jp
inc
les
fmuls
icebp
mov
in
push
mov
xchg
push
add
mov
test
vcmppd
mov
jns
pop
push
or
outsl
cmc
and
in
ljmp
pop
mov
lret
or
pusha
mov
cmp
mov
mov
movsb
jae
cmpsb
mov
push
loop
jb
fcmovbe
popa
loope
jle
testb
mov
js
cmpsl
or
and
mov
cmp
shlb
cmpsl
fdiv
sub
sbb
loope
mov
stc
rcrb
push
and
inc
fstl
xchg
pop
stc
repnz
cmc
or
push
jg
stc
in
int3
add
ret
sub
jecxz
mov
ljmp
jmp
fisttps
inc
jl
adc
xchg
arpl
inc
aad
sub
and
adc
xchg
movsl
pusha
xor
les
std
clc
xchg
cmc
imul
jb
mov
add
sahf
or
aaa
adc
add
stc
aas
xor
mov
and
fcoml
dec
inc
and
rcll
ficompl
pop
dec
ret
cmc
inc
sub
or
dec
adc
jmp
fidivs
ficoms
inc
mov
sub
inc
mov
popa
rcr
adc
and
iret
rcrl
test
mov
inc
jnp
sub
test
clc
pop
mov
es
je
push
xchg
mov
pushf
pop
sbb
dec
data16
js
lods
push
mov
xchg
add
out
ja
xchg
mov
push
inc
or
pop
pop
into
mov
mov
mov
aam
or
inc
rcrb
rol
sahf
clc
notb
insb
push
sbb
jge
pusha
dec
ret
stos
jecxz
mov
lea
out
dec
sarb
mov
cld
outsb
scas
dec
lock
xor
hlt
repnz
jmp
icebp
out
xlat
push
or
xor
into
xchg
xor
sbb
push
and
int
mov
and
fwait
cmp
pusha
pusha
fwait
add
fs
lods
mov
es
xor
add
and
js
pop
pop
mov
fildll
mov
mov
rolb
imul
xchg
outsl
scas
and
sbb
mov
inc
jns
shll
ret
sbb
pop
mov
xor
jmp
or
rorb
and
mov
xor
sbb
inc
push
add
mov
pop
pop
jae
sbb
sti
mov
mov
aad
mov
ficoms
sbb
inc
out
adc
iret
lahf
add
mov
fists
pop
cmp
sub
hlt
lss
rdmsr
pushf
movsb
cmp
xchg
loop
add
fildll
sub
mov
cli
xor
out
inc
sub
movsl
std
rolb
jl
adc
imul
inc
push
sbb
incl
cmc
jp
cmp
fmuls
fs
mov
xlat
sub
inc
leave
paddw
sub
aas
fcoml
cmp
dec
pop
push
xor
hlt
andl
fs
mov
xchg
js
xorb
ja
add
and
or
inc
dec
mov
cmp
mov
fcomi
sub
movsb
sub
and
inc
addb
jmp
pop
xchg
int
shll
cmp
pop
es
inc
jne
outsb
inc
dec
and
mov
ja
pop
and
push
mov
and
mov
pop
inc
shlb
popf
inc
fs
data16
push
and
jno
aam
jb
xor
jbe
mov
pop
inc
out
jp
enter
ja
xchg
js
inc
push
and
and
or
pop
sub
or
imulb
push
into
add
std
je
jne
xchg
pop
fwait
fs
out
add
xor
sarb
fbstp
aas
and
pop
sti
add
fcmovu
mov
jle
and
andl
decb
test
adc
movsl
sbb
jp
sub
fadds
arpl
pop
movsl
xlat
push
mov
enter
in
lahf
sub
ret
mov
into
sub
xor
loopne
fstl
cmp
jl
push
ja
inc
push
out
add
mov
cmpsl
jmp
stc
imul
cs
dec
cmp
sub
lock
pop
adc
icebp
int3
ss
and
xor
xchg
pop
dec
pop
and
popf
sbb
inc
dec
jbe
jbe
xorl
pop
call
imul
or
sbb
and
lock
lret
shrb
fwait
ljmp
xor
stos
inc
and
push
daa
sbb
inc
mov
iret
movsb
stos
sbb
aad
or
mov
mov
sti
xchg
pop
aaa
ret
sub
out
xchg
jb
test
pop
jo
cmc
cmp
adc
jbe
or
das
dec
int
gs
sub
cmp
clc
shrb
sub
and
push
mov
andl
mov
inc
sbb
xchg
out
orl
cs
lods
push
push
jnp
pop
sbb
testl
pop
and
mov
add
insl
sbb
stc
mov
add
out
xchg
enter
add
ljmp
les
test
outsl
cs
xchg
mov
adc
loop
shlb
sbb
lock
or
inc
inc
popf
pop
je
sub
fmull
popl
incl
mov
cmp
xchg
jle
or
cmp
cld
clc
pop
icebp
int3
rolb
xor
dec
sbb
xchg
rol
inc
daa
fwait
out
leave
hlt
idiv
mov
movsb
cmp
or
ss
mov
mov
ss
xlat
pop
dec
rcrb
setno
push
jbe
sbb
xchg
out
stc
xchg
dec
es
int
xchg
mov
fdiv
mov
cmp
jecxz
dec
bound
popf
outsl
test
xor
inc
xor
movsb
and
mov
aas
and
jo
adc
stc
xor
inc
dec
mov
adc
pusha
cmp
hlt
adc
pusha
adc
mov
xor
cld
jb
cmpl
dec
mov
nop
xchg
push
int3
imul
fs
pop
add
add
paddw
data16
es
inc
dec
cmp
pop
xor
adc
and
or
popa
pavgb
pop
lahf
xchg
sbb
adc
or
push
inc
and
je
idivl
test
mov
fsub
adc
dec
mov
stos
mov
jl
inc
imul
jmp
popf
popa
addr16
hlt
fadds
pop
cwtl
js
inc
lahf
cwtl
movsl
and
xlat
loop
adc
fdivrs
pop
sbb
dec
sbb
xor
and
sub
repz
push
and
jg
ror
in
add
inc
push
pop
sbb
out
inc
int3
call
je
bound
jmp
sub
or
xor
scas
cli
adc
mov
fsubr
sti
movsl
pop
std
xchg
clc
daa
and
fmull
mov
jle
push
popl
add
jnp
jp
ja
inc
pop
faddl
dec
inc
sbb
pop
ss
push
rorl
or
mov
lahf
jmp
add
or
js
adc
out
pop
cmp
pop
mov
cmp
sbb
adc
movsb
enter
addr16
sahf
dec
pop
mov
out
inc
pop
or
pop
nop
sahf
es
sub
not
and
mov
inc
mov
mov
xor
in
push
jmp
mov
xor
lock
adc
mov
xor
sti
push
outsb
lock
fs
pop
inc
jb
adc
jmp
rcll
xor
lret
daa
divb
mov
pop
dec
add
enter
xchg
push
sub
pop
mov
imul
loopne
clc
and
hlt
cmp
sbb
out
shlb
pop
xchg
hlt
mov
jb
lea
or
xor
js
icebp
rolb
pop
or
adc
arpl
lret
aam
sub
mov
test
fnstcw
out
cld
xchg
sub
inc
imul
sub
andl
test
or
inc
sub
aaa
push
stos
push
lea
add
mov
int
sub
cmpl
dec
inc
sbb
cli
js
xchg
or
pop
adc
xchg
aas
les
mov
and
and
and
and
push
mov
pusha
cld
out
lds
pop
xor
adc
xor
repz
out
jbe
aas
mov
mov
and
sbb
mov
incb
jae
mov
in
pop
jae
mov
cmp
jb
leave
push
ds
rcrl
push
mov
lcall
test
and
dec
push
dec
adc
pop
pop
stc
and
das
xchg
sti
rcrb
scas
or
out
cmp
fidivs
cmp
ljmp
pop
minps
fstpl
out
or
sarb
and
stos
ret
testb
dec
clc
or
fmuls
dec
stc
sub
push
mov
jmp
js
std
fsubl
outsl
mov
sbb
and
pushf
and
and
decb
je
arpl
add
je
push
and
add
rcrl
xor
cmp
lret
mov
movb
jmp
in
xor
orb
out
cmp
dec
loopne
das
cmpsb
fwait
js
jnp
and
cmp
outsb
push
es
imul
in
movsb
fwait
and
xor
push
jp
inc
lcall
xor
and
dec
jbe
lea
xlat
push
test
loope
fcmovnbe
pop
popa
sub
fdiv
lret
sbb
test
jge
inc
add
and
sbbl
lea
cmp
add
or
cmp
xor
sbb
sbb
jmp
pusha
and
inc
dec
add
rcrb
push
test
sub
jmp
and
xchg
in
pusha
mov
pop
xchg
jp
dec
jge
pop
jbe
and
out
inc
lea
sub
mov
xlat
mov
adc
and
fucom
inc
add
xchg
in
jp
mov
jno
mov
pop
lret
loop
push
pop
dec
fisubrs
cmp
ror
dec
jmp
xchg
js
sub
fstps
sub
xchg
push
or
push
rcrl
std
sbb
fmuls
xor
pop
mov
push
aas
loopne
xchg
push
push
sbbb
cmp
sahf
xorl
pop
push
cmpsb
or
jg
ret
lahf
pop
in
and
cmp
dec
popf
pop
std
in
and
push
icebp
dec
inc
test
clc
bound
mov
pop
lahf
data16
std
das
adc
nop
dec
out
loope
movsl
or
in
and
mov
insb
mov
push
loopne
add
cmp
adc
cmc
jae
lds
test
lods
imul
movl
push
mov
cs
push
std
pop
cmc
pop
pop
and
pop
push
pop
and
daa
aaa
pop
or
int
dec
add
lret
sub
cmp
push
pop
mov
icebp
testl
in
popa
sub
inc
sti
in
retw
popf
cmp
stc
insb
bound
ss
je
mov
pop
push
jno
iret
stos
pop
sbb
jns
or
adc
push
cs
leave
loop,pn
pop
clc
mov
xor
add
jo
sti
sti
cmp
dec
pop
push
outsb
or
pop
add
inc
cmp
lods
inc
mov
test
aaa
test
leave
test
addr16
pop
sub
les
popa
sub
or
das
leavew
fwait
and
pop
insb
push
imul
sbb
inc
sar
mov
lods
nop
sub
add
cmp
shlb
pop
push
sti
mov
out
in
and
xor
sbb
mov
push
or
gs
lret
loopne
lock
or
xor
in
xor
enter
xchg
or
xor
jecxz
cli
add
testb
inc
or
push
and
dec
sub
clc
fs
lods
xchg
cmp
ret
lods
outsb
sub
push
adc
push
popf
xchg
mov
mov
fisubl
bnd
or
shrl
adc
or
out
stos
cmp
mov
fninit
jb
test
cmpsl
pusha
xlat
push
mov
pop
aaa
int3
add
cmp
mov
xchg
mov
cs
in
mov
sahf
mov
aaa
push
out
inc
bound
cmp
sub
movups
loop
enter
add
mov
sub
jmp
lock
dec
jne
xor
lret
inc
push
sahf
inc
and
and
and
jge
daa
mov
in
jge
in
ds
pusha
cmp
popf
xor
or
sbb
mov
cmp
fimuls
xor
sbb
mov
ja
sbb
fstsw
std
dec
rcll
hlt
jo
xchg
clc
vcmpsd
ss
daa
es
arpl
pushf
bound
inc
cwtl
sbb
xchg
push
hlt
pop
dec
push
mov
jp
push
hlt
addr16
int
xor
ss
ds
push
bound
mov
and
inc
sbb
aas
inc
enter
adc
stos
in
call
enter
and
sub
hlt
rcrb
or
out
pop
xchg
and
pop
pushf
cmp
test
movups
cmp
cli
mov
fs
dec
testl
mov
xor
mov
mov
and
cmc
cli
ror
xor
cwtl
and
in
aaa
out
mov
push
test
inc
add
mov
or
les
jge
cli
push
xchg
inc
mov
cmp
or
cmc
movlps
sub
aaa
dec
xchg
push
arpl
jp
and
out
data16
pop
dec
mov
je
sub
jae
inc
xor
rolb
int3
insl
lret
sbb
jae
je
call
mov
jae
ret
add
fnsave
push
or
pop
push
mov
in
and
dec
inc
add
push
xchg
xchg
xchg
nop
std
dec
into
fistpl
lea
inc
or
out
jmp
jmp
jmp
push
nop
nop
nop
push
nop
nop
nop
nop
push
nop
nop
nop
nop
call
nop
nop
nop
nop
push
nop
nop
nop
nop
call
sub
nop
nop
nop
nop
lea
nop
nop
nop
nop
push
nop
nop
push
nop
nop
nop
push
nop
push
nop
nop
push
nop
nop
nop
nop
call
nop
nop
nop
add
nop
nop
nop
nop
mov
nop
nop
nop
mov
nop
nop
nop
shr
nop
nop
nop
jmp
nop
nop
nop
nop
lods
nop
nop
nop
nop
nop
add
nop
nop
nop
nop
xor
nop
nop
mov
nop
nop
nop
nop
nop
dec
je
nop
nop
jmp
pop
nop
pop
nop
nop
nop
nop
nop
pop
nop
nop
nop
jmp
