sbb
add
mov
xchg
fcoml
mov
mov
js
push
and
inc
xchg
jne
sbb
or
loope
add
xor
xor
sub
xchg
or
cld
loop
dec
aam
loopne
pop
dec
pop
xchg
cmpsl
sbb
dec
and
clc
mov
mov
mov
jmp
mov
test
js
std
pop
leave
cmpsl
fcmove
pop
sub
push
sub
mov
xor
add
insb
xchg
or
aas
sbb
mov
cmp
sub
cltd
or
adc
inc
into
and
sub
roll
mov
sbb
adcb
mov
rorl
sbb
int3
xchg
out
push
stos
xor
ja
leave
arpl
and
cmp
inc
add
add
outsb
and
aad
lods
movsb
xor
push
mov
mov
mov
ss
ret
call
adc
fdivrs
test
mov
arpl
loopne
lret
pop
jb
test
mov
ret
rorl
in
adc
jle
add
mov
sub
inc
or
jg
cwtl
mov
lods
adc
sub
cwtl
icebp
ret
leave
scas
imul
movsb
fbld
sbb
add
icebp
faddl
mov
rcrl
mov
in
dec
sub
mov
dec
outsl
jge
popf
scas
test
pusha
aas
loope
ljmp
jmp
add
mov
jns
add
push
sti
xor
xchg
push
sbb
xor
dec
xchg
filds
jbe
je
cmp
sub
mov
mov
xchg
add
fisubrl
iret
mov
dec
cmp
lods
popf
lock
divb
int
jmp
add
adc
inc
loopne
cmp
int
dec
lcall
in
cmp
mov
sbb
ret
cmp
in
mull
xchg
js
mov
and
xchg
jbe
lds
scas
adc
fs
jmp
rcr
rcr
jl
out
stos
imul
loope
inc
push
pop
jb
leave
pusha
aad
outsl
pop
icebp
jns
out
ss
and
cmpsl
shrl
cmp
mov
loopne
aas
movsl
push
push
xchg
mov
push
popf
jbe
mov
push
inc
inc
inc
enter
ss
mov
adc
cmp
mov
push
jb
call
add
shl
mov
mov
inc
roll
or
pop
sbb
int3
test
movsl
push
dec
stc
add
dec
sarb
mov
aaa
pop
out
out
adc
pusha
xor
jbe
pushf
push
movsb
or
mov
in
jecxz
inc
xchg
rcrb
xlat
je
cltd
mov
fs
push
mov
push
lsl
add
cmp
sub
add
xchg
cmp
mov
sbb
cmpsl
mov
clc
insl
aaa
or
iret
jge
jne
xchg
jo
or
out
cs
pop
mov
jp
clc
loop
test
adc
loop
scas
mull
push
ljmp
clc
push
fidivs
fcoml
sub
fwait
sbb
rcrl
xor
and
das
dec
les
mov
mov
lods
fisubl
mov
sbbb
or
jp
cli
jle
sub
lcall
div
subl
mov
movsl
sarb
xchg
sub
xchg
mov
or
push
dec
sahf
xor
testl
lcall
fucomi
ss
inc
into
fidivrs
shl
pop
out
out
lock
enter
rorb
pushf
push
pop
cmpl
leave
mov
push
pop
inc
out
sahf
popl
pop
loope
mov
or
ja
xchg
pop
out
lcall
and
fistpll
sbb
jg
add
addl
inc
test
sbb
pushf
add
xlat
xchg
push
push
repnz
and
lods
jno
push
pop
test
add
adc
fnstsw
pop
js
clc
icebp
and
mov
js
dec
fwait
leave
inc
cmp
sbb
daa
pop
inc
sub
lock
pop
int
test
pushf
sub
jne
lret
add
add
loope
ds
fsts
add
or
jmp
pop
ret
cmp
dec
dec
stc
outsb
or
fwait
cwtl
dec
adc
or
stc
mov
cmpsb
mov
ljmp
pop
bound
push
or
and
cmp
adc
jge
mov
cmpsl
lods
incl
lods
jb
pusha
leave
push
and
cmp
movsl
and
lock
aam
cs
sub
imul
inc
negl
inc
inc
xchg
jb
loop
mov
stc
mov
jnp
mov
xor
pusha
pop
stos
mov
das
lcall
aaa
je
fs
dec
sbb
imul
popf
in
dec
test
fmul
xchg
dec
mov
insl
sahf
data16
imul
jo
std
inc
xchg
int
insl
mov
and
int3
lcallw
rcll
or
or
mov
xchg
scas
ror
dec
mov
pop
pushf
jl
in
inc
insl
adc
dec
xlat
addr16
mov
es
lods
rclb
into
rolb
pop
pop
jae
mov
fdivrs
cld
ja
js
aas
ds
dec
mov
xor
cwtl
sbb
push
xchg
lods
ljmp
lds
mov
sbb
push
lock
popa
ffree
cld
cmc
jle
xor
loopne
inc
movsb
movsb
orl
in
inc
cmp
sahf
fisttpll
scas
cmp
das
ret
fiadds
imul
push
inc
and
fdivr
mov
jp
fxch
jno
pop
push
ljmp
dec
orb
neg
loope
pop
or
add
cmp
lret
jno
xor
call
icebp
and
xorb
loopne
test
and
push
stos
repz
mov
lahf
mov
inc
sbb
jmp
mov
pop
jbe
cmpb
sahf
mov
push
lcall
mov
inc
xchg
and
sbb
mov
lods
shrb
push
mov
jno
xchg
addr16
xor
pop
loop
mov
in
ror
lock
jnp
stc
add
mov
aas
jge
mov
into
add
push
icebp
jmp
jmp
loope
loopne
and
cwtl
mov
scas
mov
test
test
sub
es
jl
subl
adcb
ret
out
mov
pop
out
pop
xor
sbbl
into
mov
pop
lds
lcall
pushf
pusha
scas
fldt
xor
mov
jb
test
and
int
les
out
jno
mov
pop
pop
xlat
cmpsb
gs
and
in
imul
les
sub
in
jg
xchg
rcl
or
push
call
sub
adc
insb
sti
pop
push
aaa
in
test
dec
adc
fidivl
ficoms
sti
mov
pop
mov
lahf
sbb
push
inc
ds
push
gs
clc
cmpsb
mov
and
cmp
or
sub
imul
test
cmp
fldl
and
imul
mov
mov
lret
fstpt
jge
mov
subl
xor
adc
loop
ret
in
sbbb
jge
jbe
mov
add
jecxz
mov
movsb
enter
imul
sub
test
das
jb
mov
iret
out
aaa
ficomps
sub
pop
mov
dec
test
jno
fbstp
or
std
sti
mov
sub
adc
fistps
in
loop
arpl
cmpsb
cld
jge
xchg
inc
add
jno
lods
mov
sub
add
jnp
js
mov
andnps
dec
fisubrs
add
out
mov
int3
or
arpl
sub
cmp
jbe
outsb
ret
std
mov
jae
insb
xchg
and
cmp
popa
mov
pusha
out
jmp
xchg
cmp
mov
xchg
inc
sub
js
pop
popf
pop
mov
xchg
sub
les
out
xor
std
fdiv
sbb
test
mov
pop
dec
inc
into
loop
jmp
lahf
lods
or
mov
cmp
shrb
dec
adc
mov
dec
cld
es
xchg
push
scas
xchg
jae
jo
xchg
or
add
adc
arpl
fisttpl
iret
addr16
fisttpll
push
aas
xchg
mov
adc
dec
mov
mov
iret
mov
and
stc
icebp
sub
inc
lock
les
pop
cmpsl
mov
or
imul
arpl
lret
scas
rcrb
fdivl
add
in
fistpl
and
mov
cmc
test
test
jne
sub
mov
cltd
jne
stos
test
fwait
shr
arpl
les
rcll
lea
pop
in
and
pop
pop
adc
pop
mov
mov
es
in
fidivl
mov
xchg
pop
xchg
adc
xor
aas
ficoml
lock
es
idiv
int
xchg
pop
loop
jp
fs
mov
addr16
adc
jnp
push
inc
mov
out
dec
xor
dec
push
inc
pop
nopl
jno
ss
mov
and
into
pusha
je
js
sbb
test
mov
aam
jno
xchg
out
aas
stos
inc
xor
ret
mov
arpl
leave
adc
push
iret
mov
fldl
clc
or
xchg
ja
lret
ret
mov
jge
or
sub
push
lcall
mov
and
jns
jmp
or
fidivs
pop
inc
pop
mov
lret
pop
xchg
mov
fldl
lods
xchg
shll
xor
leave
mulb
dec
pop
mov
xor
in
add
call
cmp
std
loope
lods
push
xor
ja
dec
test
lret
and
xchg
negl
mov
mov
xchg
push
scas
adcl
out
clc
mov
insb
lods
loop
shlb
pushf
movsb
movsb
je
call
popf
or
xor
idivb
jle
in
lret
cmpsl
sti
fmuls
jbe
and
pop
ret
sub
das
jg
mov
xchg
dec
jbe
popa
pushf
pop
xchg
incb
jb
sub
leave
js
out
or
mov
or
mov
push
les
cwtl
mov
ss
pop
or
rolb
adc
sbb
mov
adc
pushf
xchg
cmp
mov
dec
imul
mov
ss
or
cmp
or
setne
jle
mov
push
mov
mov
dec
adc
data16
push
jmp
repz
mov
cmp
cmpsl
popa
xor
xor
out
int
mov
pop
adc
out
push
add
xchg
dec
enter
mov
lahf
inc
adc
lcall
xor
xchg
inc
aad
lods
outsl
cmpsl
nop
movsb
mov
xchg
and
fiaddl
mov
dec
stos
mov
push
xor
xor
jge
cltd
inc
insl
jns
mov
test
inc
and
pop
shrl
loopne
sahf
inc
sub
inc
addb
pop
outsb
mov
hlt
cmpsl
inc
jne
pushf
xchg
mov
in
lret
sbb
lods
std
in
outsl
adc
shll
jno
xor
mov
push
inc
aaa
or
sbb
cld
test
xchg
rolb
mov
adc
mov
jl
es
inc
out
dec
fwait
std
mov
into
repnz
jmp
xchg
xchg
and
and
lock
cmp
jbe
fwait
jp
cld
ret
inc
mov
sub
or
lods
push
rorb
repz
xchg
pop
push
outsl
aaa
lds
nop
mov
pop
mov
leave
dec
adc
les
outsl
stos
aad
or
push
jne
icebp
sbb
xor
mov
cli
dec
push
arpl
mov
outsb
inc
mov
loop
and
mov
adc
cmp
scas
test
out
cmp
clc
push
and
ss
jp
sahf
xor
in
imul
dec
jns
sub
fbstp
inc
xchg
lcall
mov
jmp
iret
loopne
mov
or
cli
mov
add
xor
mov
icebp
pop
aaa
push
jae
push
pop
xor
daa
inc
push
movsb
call
mov
xor
fcmovu
inc
outsb
xchg
pop
call
cmp
mov
mov
add
mov
sbb
dec
mov
mov
imull
jnp
sub
adc
adc
xor
into
into
lock
mov
dec
sub
int
or
push
ret
adc
sbb
jno
negl
xor
in
scas
push
enter
add
mov
cli
iret
push
outsb
popa
insb
cmp
lret
mov
fisubrl
or
dec
mov
std
fists
dec
mov
or
xchg
xchg
sbb
div
push
push
scas
cmp
mov
xor
andb
jmp
pop
mov
jne
or
rcrl
pop
out
push
cmp
mov
cmp
dec
xchg
add
loop
add
add
cmp
jo
cmpsb
mov
es
je
icebp
das
daa
adc
xlat
sahf
in
gs
jns
cmc
adc
jb
sub
out
mov
and
jne
xlat
in
fsubrl
pop
xchg
popf
int3
mov
mov
insb
and
lods
add
mov
sarl
inc
enter
jecxz
mov
or
jae
mov
sub
arpl
nop
jmp
cli
prefetch
or
mov
aaa
outsl
sub
push
fimuls
icebp
test
enter
cld
mov
sarb
jle
mov
mov
lcall
add
cwtl
scas
fsubrl
lea
and
mov
push
inc
jmp
push
xor
cmpsw
fiaddl
push
sub
pop
addr16
xchg
int3
pop
adc
ja
mov
mov
dec
or
sti
test
in
push
mov
daa
and
jmp
jae
xchg
leave
scas
or
cmp
pop
ljmp
test
inc
repnz
mov
and
mov
or
mov
insb
or
scas
mov
int3
call
pop
jmp
mov
ljmp
mov
movsl
push
jnp
clc
add
ret
fbld
xchg
fs
xchg
cmpsl
add
movsl
pop
xchg
pop
jg
xchg
repnz
and
mov
mov
mov
std
int3
arpl
xchg
mov
push
mov
xor
test
insl
rorb
into
sbb
pushf
stc
cli
mov
and
mov
sbb
adc
mov
shrb
jmp
fs
mov
pop
test
lods
testl
mov
shll
popf
in
repz
xor
fcomip
pop
or
sub
lods
cmp
lock
nop
mov
icebp
pop
jle
popa
rcpps
cmp
xchg
mov
mov
lret
xchg
lahf
test
repnz
scas
rcrb
xchg
mov
fisttpl
in
icebp
xor
mov
in
push
bound
cmp
push
mov
cmp
push
pop
push
in
aaa
pop
or
enter
lea
js
gs
nop
ftst
dec
mov
cs
jmp
addr16
int
lret
out
popf
push
cmp
aaa
stos
pop
xor
push
push
adc
cmp
mov
pop
icebp
mov
scas
push
movsb
jnp
sbb
xchg
ja
imul
xchg
out
or
jns
jb
pcmpeqd
or
leave
je
cmp
shl
and
movsl
mov
repnz
out
mov
inc
sbb
lret
add
jl
shlb
add
cmpsl
jg
sub
pop
jns
xchg
gs
add
hlt
lock
or
pop
add
pusha
jecxz
aaa
dec
inc
js
jae
int3
inc
jecxz
sti
sub
dec
fst
cmp
lret
daa
mov
ds
sbb
mov
aas
cmp
mov
stos
lds
lods
or
daa
aad
inc
xchg
sub
mov
jb
mov
push
mov
xchg
cmp
sbb
aaa
clc
mov
jle
adc
clc
add
adc
cmp
xchg
xor
mov
push
and
popa
cmp
mov
xchg
outsl
roll
popf
dec
pushf
in
or
sub
std
cltd
dec
repz
cmpb
inc
mov
movsl
aad
dec
push
inc
sub
enter
dec
test
js
adc
pop
imul
xor
mov
xlat
jp
mov
xor
jecxz
sub
test
pusha
lea
popa
sti
test
enter
jno
dec
dec
out
shll
fimull
mov
fstpt
lret
cmp
test
cmp
xor
shrb
and
scas
lods
push
jecxz
jmp
insl
ljmp
mov
clc
sti
pop
fimull
xchg
enter
cmp
hlt
hlt
in
jnp
bound
add
xchg
xor
or
sub
cmpsl
roll
movsb
xchg
push
mov
or
cli
inc
sub
outsl
inc
das
sarb
mov
sti
push
test
dec
mov
sti
push
fiadds
add
and
and
push
out
mov
or
testb
inc
clc
push
dec
push
bound
and
pop
les
jmp
mov
xor
pop
lret
add
mov
call
jns
and
dec
inc
ret
mov
das
loopne
enter
in
or
mov
sub
mov
xchg
and
jae
mov
addr16
lods
jbe
iret
ss
inc
inc
mov
lahf
mov
add
jb
lock
xchg
rclb
stos
mov
xor
sar
xor
inc
mov
mov
popf
sub
adc
xchg
lds
sub
sbb
fiadds
push
dec
data16
out
stos
sahf
add
add
in
inc
xchg
sbbb
fwait
enter
test
mov
push
and
xchg
and
and
jnp
aam
xor
ror
dec
scas
pop
sarl
rcrb
cmpsb
push
loopne
xor
nop
rclb
ret
rcl
add
popa
movsl
inc
push
lahf
push
adc
cld
xor
mov
aaa
xchg
mov
or
mov
jmp
in
sbb
sbb
dec
mov
mov
lds
xchg
loopne
test
adc
sub
fwait
aas
sbb
lcall
sbb
fcoms
in
subl
pop
jle
push
lret
mov
add
mov
pop
xor
movsl
xor
pushf
out
inc
pop
js
jnp
xor
jg
sbb
mov
fwait
or
std
mov
pop
mov
push
repnz
jnp
cmp
xorl
cltd
xor
and
dec
and
pop
jbe
or
jb
popf
inc
pop
lds
lods
or
stos
scas
inc
cmp
and
fsubs
push
lahf
push
push
and
push
and
mov
ss
jnp
je
arpl
mov
jp
bound
fsubl
dec
in
test
dec
mov
test
pop
out
repz
jle
iret
jne
data16
mov
xchg
xlat
and
pop
xor
jno
sahf
push
add
pop
pusha
testl
sbb
mov
add
mov
stos
in
ja
or
lret
add
sub
inc
in
movsl
into
pop
jle
jne
pop
dec
lods
cmp
pop
out
adc
push
pop
jne
fxch
ret
adc
xchg
ds
nop
scas
pop
lea
xor
and
addr16
xchg
push
outsl
jne
rcrb
dec
test
leave
ds
xchg
daa
fsubp
sub
and
lock
lahf
pop
jne
sarb
mov
and
xchg
int3
or
inc
add
xchg
addr16
je
jbe
out
cmpl
jne
js
sub
outsl
mov
and
enter
pop
imul
push
or
push
sbb
cmpsl
ds
mov
dec
push
cmovge
vpacksswb
pop
inc
lar
push
pop
jp
push
sub
sbb
pop
xor
jle
loope
mov
hlt
test
pushf
outsb
jle
clc
jb
inc
push
fsubr
in
dec
in
paddusb
inc
adc
and
data16
out
mov
add
push
add
jo
pop
dec
leave
xor
dec
or
aas
xor
lret
xor
in
cltd
int3
push
hlt
repnz
or
inc
jo
push
das
jecxz
test
adc
jge
add
adc
sarb
call
insl
mov
jb
out
xor
jl
sbb
in
outsb
in
in
mov
xchg
cld
in
shll
jb
mov
sbb
out
cmp
pop
dec
xor
sub
clc
dec
out
and
jno
push
mov
pop
sbb
popf
push
cmpsb
ljmp
rep
xchg
cmp
imul
jae
push
dec
xor
popf
insl
rcrl
pop
pop
out
adc
jmp
push
xchg
vcvtdq2ps
cmp
out
ret
mov
mov
rcrb
jb
ss
mov
out
lds
and
mov
and
adc
popa
loop
leave
mov
into
mov
jmp
test
repz
xchg
sbb
or
xchg
test
push
lock
or
xorb
aaa
push
dec
jb
and
out
push
sbb
mov
shrb
test
das
movsb
xor
mov
xor
hlt
arpl
jns
mov
add
fdivl
push
hlt
xor
fsubrl
xor
cmp
sbb
lret
push
inc
add
addr16
insb
lret
scas
dec
sti
pusha
push
push
add
andb
jo
stc
xor
jbe
gs
test
sub
cs
cmp
out
dec
out
pop
data16
push
add
adc
push
lahf
sbb
jae
bnd
jmp
lea
jne
fimuls
mov
cmp
mov
mov
addl
fistl
ljmp
aaa
popa
in
rcrl
clc
sbb
push
mov
adc
inc
dec
xor
cmp
mov
push
lea
mov
pop
adc
pushf
loopne
and
cld
add
pop
xor
icebp
jns
mov
ret
fwait
push
fwait
aam
jmp
or
inc
inc
add
je
xchg
mov
and
dec
inc
ja
jb
movb
mov
mov
jg
imul
dec
xchg
sbb
cltd
mov
mov
jg
jl
push
cmp
insl
jb
outsl
ljmp
cmpb
dec
stc
scas
in
das
lret
inc
popf
sarb
inc
enter
add
aas
js
push
add
leave
divb
test
pop
jle
cltd
dec
sbb
stos
cld
pop
cmp
pop
movsb
mov
stos
xchg
sub
mov
popa
sub
pushf
ja
lret
movb
addb
sub
test
xor
popf
inc
inc
inc
arpl
adc
pop
and
test
or
lds
mov
dec
lcall
ret
mov
inc
std
inc
pop
pop
rol
mov
add
lods
bound
inc
pusha
xor
movsb
push
fsts
mov
inc
test
push
call
mov
mov
inc
mov
sbb
dec
sub
cli
rolb
js
daa
divb
nop
jae
adc
sahf
cmp
dec
test
mov
leave
jno
movsb
fmull
sbbb
lods
pop
push
mov
xor
push
test
or
xchg
data16
std
dec
lret
test
iret
nop
xchg
xchg
push
mov
out
pop
imul
inc
and
sahf
scas
or
sbb
fsubp
mov
push
pop
hlt
insl
sub
jp
popa
adc
jecxz
jne
mov
push
xor
movsl
xorb
je
or
inc
sub
cltd
test
js
mov
push
ss
jle
pop
or
cmp
mov
xorb
inc
mov
insb
adc
sbb
xor
mull
pop
ret
add
mov
dec
add
xlat
jns
mov
lds
jge
pop
pop
popf
mov
cs
jl
fsubrl
mov
in
fbld
mov
inc
sbb
call
sbb
fcomps
lcall
and
movsb
xlat
daa
cmp
test
cmp
sahf
cmp
jns
in
or
stc
push
imul
arpl
in
pushfw
cmpsb
push
lods
cwtl
gs
rcrl
int
adc
popf
insb
cmpsl
adc
pop
or
ljmp
sub
mov
or
cli
test
or
dec
jp
arpl
jle
mov
push
mov
and
xchg
dec
push
fdivrl
mov
es
mov
push
dec
mov
xchg
js
xchg
mov
xor
inc
sbb
adc
mov
in
mov
int3
or
andb
mov
stc
mov
fldt
push
dec
in
or
and
push
xchg
mov
and
jno
add
and
fsubrl
and
xor
mov
sbb
jmp
fisubrs
les
ret
add
sbbb
leave
xchg
lcall
js
les
add
mov
dec
push
and
mov
fwait
jns
lds
pop
mov
fistpl
cmp
lea
mov
pushf
imul
jle
test
sbb
cmp
in
and
fsts
imul
inc
and
xor
shll
sbb
orl
outsb
xchg
inc
lock
ljmp
push
inc
jmp
mov
hlt
ret
mov
jge
push
xchg
push
adcl
daa
cwtl
mov
stc
jo
jp
mov
dec
and
mov
ret
mov
mov
cld
fnstenv
cmp
mov
dec
add
push
dec
mov
push
mov
lret
rorl
cwtl
pop
das
inc
cmp
push
mov
out
xchg
mov
inc
les
dec
lea
add
sub
leave
jl
shlb
jnp
rcr
pop
vxorps
jne
out
addr16
sub
repnz
dec
lret
es
sti
dec
cld
push
in
in
in
fisttpll
lock
jo
subb
imulb
pop
mov
inc
push
dec
mov
les
pop
adc
jno
sub
add
pop
test
sbb
add
mov
inc
adc
cmpsl
jge
dec
js
ljmp
add
add
cs
mov
mov
arpl
gs
int3
lock
pop
ret
out
pop
and
sub
pop
and
jbe
ret
mov
fwait
dec
icebp
in
imul
dec
mov
inc
inc
fcmove
xor
cmc
inc
dec
bound
adcl
push
in
xor
and
int
enter
dec
mov
mov
in
dec
cmpsb
mov
jnp
into
and
add
push
pop
aaa
pushf
call
lods
cwtl
clc
int3
in
daa
jno
clc
jo
rcll
cmc
xor
bound
jo
ja
inc
punpckhdq
xor
adc
xor
mov
loopne
pusha
push
test
jg
jns
jge
jp
xchg
fs
pop
jo
sbb
mov
dec
xchg
add
je
mov
mov
dec
mov
out
sarl
mov
int
lock
mov
sarb
xor
mov
and
imul
xchg
sbb
jecxz
or
adc
fstpl
and
ss
adc
js
or
enter
inc
add
push
insl
adc
bound
pop
push
rorb
cmc
mov
jg
stos
mov
out
icebp
lret
jge
test
outsl
int
xchg
xor
mov
mov
mov
pop
lret
mov
daa
xor
movsl
movsl
jno
push
jb
out
lds
test
fsubr
cmc
cmp
adc
in
inc
inc
cmc
add
dec
push
outsb
ss
clc
lret
out
jno
clc
lcall
or
sbb
aam
mov
aam
imull
adc
adc
movl
fwait
push
jmp
mov
jo
inc
sbb
push
int3
fldenv
push
jge
push
test
outsb
iret
test
pop
push
popf
xor
ret
push
cmp
mov
dec
ss
out
mov
lcall
es
mov
sahf
das
jae
sub
mov
loop
mov
int
mov
inc
aaa
out
aam
repnz
dec
xor
insl
xchg
mov
shrl
and
cmpsl
inc
mov
lds
nop
rolb
pop
add
push
adc
scas
jno
mov
xlat
mov
cs
mov
pop
cmp
mov
cltd
mov
test
jo
mov
lea
jns
test
repz
adc
jae
adc
pop
sub
aas
mov
sub
and
xchg
test
ljmp
fstpl
leave
loop
stc
jmp
int
negl
div
rorl
scas
mov
repz
fwait
cmp
dec
fstpl
mov
xor
dec
cmp
addr16
mov
lea
call
inc
or
sbb
fists
mov
in
outsl
out
sbb
pop
iret
scas
lea
jns
ss
push
add
daa
or
stc
pop
jl
xchg
imull
negl
sub
jnp
lea
clc
and
add
xorb
jb
xor
cmpsl
fistpll
int3
popf
pop
push
sahf
add
add
jo
xchg
pop
pop
cmp
push
sbb
xchg
jns
jmp
inc
xchg
sahf
dec
lret
fstpt
xchg
mov
and
pop
stc
add
leave
sbb
sub
sarb
mov
lcall
mov
psadbw
sbb
mov
orl
hlt
push
jle
sti
cld
fists
mov
pop
mov
cltd
xchg
jge
rorl
dec
sbb
sub
repnz
cmpsl
push
fwait
icebp
sbb
mov
push
mov
mov
aam
jno
decb
insb
xchg
mov
test
int3
sbb
sbb
mov
jb
andb
cmpsb
adc
sub
addr16
mov
xchg
fcmovnb
bound
cmp
push
jle
cld
pop
in
cmp
clc
push
mov
or
sub
insl
aaa
test
pop
mov
sbb
lahf
clc
dec
lds
push
out
rorl
pop
cmp
mov
scas
xor
insb
pop
cmpsb
inc
inc
addr16
jmp
xor
sbb
imul
js
inc
repz
sub
sbb
insb
dec
test
sub
sahf
sti
repnz
jp
fdivrl
ds
sub
push
mov
bound
sahf
sbb
mov
pop
mov
sub
jnp
ss
pop
fdivrs
add
push
adcl
imul
jno
push
outsb
inc
jns
add
cmp
cmp
cmp
xor
mov
iret
stos
jb
stos
inc
call
xchg
mov
popf
cmp
mov
or
sub
aam
jno
mov
dec
adc
jbe
subb
pop
xchg
mov
cmpsb
imul
repnz
mov
in
adc
add
in
mov
outsb
mov
ljmp
or
dec
mov
mov
jecxz
ret
stc
jecxz
shll
dec
les
sti
gs
cmp
inc
fildll
adc
gs
mov
outsl
test
ljmp
ljmp
cmpsl
mov
sub
mov
push
sub
xor
push
pop
and
int3
mov
sbb
cs
cmpsl
and
out
popf
mov
sub
jg
sbb
xor
cltd
push
movsl
test
jae
int3
sbb
stos
cltd
in
jo
test
mov
movsl
mov
loop
push
adc
pop
mov
mov
mov
bound
xor
cmpsl
std
cltd
jl
xchg
inc
popf
add
cmpsb
dec
sbb
call
arpl
pop
movsl
ret
dec
outsb
cli
bound
pop
packuswb
dec
in
xchg
repz
jl
jp
and
stos
orl
mov
mov
loope
and
pop
aas
push
add
xchg
mov
daa
arpl
jecxz
xchg
ret
jecxz
adc
fistl
sub
in
adc
xchg
push
daa
cmp
lds
xchg
popf
or
sbb
mov
push
xor
pop
mov
out
xor
cmp
in
out
xchg
and
add
ljmp
pop
jecxz
sar
dec
mov
fisttps
imul
ljmp
mov
outsl
xchg
imul
test
cmp
mov
pop
out
jae
jbe
ret
outsl
cmc
sbb
je
pop
push
sbb
pop
sahf
mov
adc
push
sahf
push
jg
aad
ss
rorl
psrld
inc
std
xor
fcomps
jmp
test
jbe
aaa
loop
pop
xor
dec
xchg
push
xor
daa
lret
shrl
xchg
fdivl
dec
pushf
cmp
xchg
test
aam
push
in
xor
lret
dec
rcrb
push
or
and
add
jnp
addr16
sub
mov
ret
es
inc
enter
mov
inc
jnp
les
fldenv
sbb
xchg
lahf
cmp
icebp
push
aas
lods
mov
or
add
loop
addr16
mov
fisubrs
shr
icebp
mov
movsl
add
jo
dec
clc
inc
mov
or
sbb
sbb
testb
lahf
aad
dec
xchg
fisubrl
pop
mov
rclb
notl
jmp
xchg
rol
sbb
sub
mov
jbe
stos
fimull
push
pop
ret
jnp
mov
inc
into
or
enter
jbe
fsubp
out
inc
and
adc
pop
jb
dec
xor
jbe,pn
js
adc
dec
inc
push
ret
test
cmp
mov
and
outsb
aad
loope
xor
roll
jle
lahf
bnd
cmpsl
mov
xchg
int3
ret
ret
pop
sbb
fwait
in
pop
dec
mov
and
scas
repnz
adc
inc
cmp
mov
mov
or
callw
aam
dec
lds
stos
jno
xchg
push
push
and
ss
shl
pop
pop
pop
bnd
mov
xorb
push
sbb
xchg
js
jmp
mov
dec
stos
jg
and
jae
jmp
sub
mov
add
push
sbb
cwtl
jne
jbe
orl
sub
mov
or
es
inc
fisttpl
add
in
int3
mov
push
pop
mov
or
movsl
ljmp
call
sti
push
or
or
mulb
inc
cmp
mov
mov
mov
adc
divl
mov
jno
movsl
adc
inc
jb
aad
cmp
and
sub
stos
addr16
gs
mov
bound
icebp
loop
std
xchg
pop
popf
dec
lods
pop
mov
mov
cmp
pop
mov
mov
sbb
pop
sub
stos
mov
cmpsl
rcr
and
pop
es
inc
jecxz
mov
shrb
test
adc
call
cmp
test
cmpsl
or
aas
jb
sbb
inc
mov
test
pop
dec
test
sahf
ret
mov
stc
add
je
push
in
fstpl
mov
cmp
lods
bound
jge
mov
enter
jl
cli
or
int
sub
or
mov
and
pop
arpl
or
xor
clc
lcall
out
stos
cmp
sti
xchg
sub
push
outsl
xlat
pop
faddl
jb
out
push
lret
xor
rcll
data16
mov
out
orb
mov
outsl
leave
out
adc
pusha
test
xor
inc
inc
sub
fs
loopne
aad
test
ljmp
test
outsb
dec
loopne
sbb
inc
cmpsb
fdivl
jns
push
out
fisubrl
adc
inc
incl
out
xchg
push
xor
movsb
hlt
ror
inc
pop
xor
fwait
push
dec
pop
xlat
sbb
loopne
out
xchg
test
or
fistps
incb
subl
pop
xchg
outsl
int
mov
and
mov
add
push
mov
mov
imul
cmp
std
scas
or
icebp
cmp
iret
int3
adc
xchg
xchg
inc
add
xor
adc
mov
sub
rcl
ffreep
or
sbb
xchg
int3
xchg
clc
icebp
popa
dec
outsl
sti
stos
ds
int
shrb
je
xchg
mov
mov
pop
inc
jbe
jb
sbb
cmp
sub
adc
ja
fisubrl
js
pop
lods
inc
dec
sahf
push
jae
and
rclb
fisubs
jno
in
dec
ss
push
push
mov
lock
movsb
pop
pop
pop
sbb
sub
dec
fiaddl
sbb
inc
sub
movsb
pushf
test
imul
ja
push
pop
inc
repnz
cwtl
orb
push
cmpsl
cmpl
mov
xchg
mov
mov
jb
mov
mov
mov
xor
adc
negb
mov
mov
fcmovbe
push
ficompl
sahf
not
test
jp
in
sub
or
inc
xor
daa
sbb
sub
mov
push
or
loop
gs
or
mov
adc
xchg
adc
por
lcall
imul
inc
adc
inc
mov
outsl
fwait
push
inc
inc
in
fwait
or
mov
js
or
out
or
lods
test
arpl
js
xor
mov
adc
rorb
insl
add
aas
daa
gs
mov
mov
sbb
scas
leave
jp
test
out
lea
pop
jnp
sub
addr16
pusha
sbb
jp
sbb
cmp
mov
cli
stc
sahf
das
jae
out
mov
xlat
inc
and
outsb
or
inc
add
lock
mov
add
dec
xor
pusha
lods
sbb
xor
mov
cmp
in
jae
je
lcall
dec
hlt
popa
inc
lods
inc
cmp
cmp
jmp
jo
lcall
jp
aam
test
mov
scas
loop
daa
push
popl
lret
cmpsl
cmc
xchg
idiv
adc
jecxz
shlb
and
jmp
dec
dec
mov
xorl
mov
inc
pxor
inc
xor
bound
inc
pusha
lret
and
sbb
pop
xchg
jecxz
xchg
fdivrl
or
jecxz
or
push
sub
pop
scas
fmull
mov
je
scas
cmc
nop
jne
clc
sbb
lock
cmpsl
lds
xchg
push
xor
outsb
fisubl
push
cmp
dec
lds
iret
inc
and
sub
fadd
popf
fldenv
pop
in
movsb
mov
sbbb
lret
cmp
cs
bound
rcrl
leave
push
test
js
mov
or
dec
jns
arpl
bound
push
push
divl
pop
sub
sbb
aaa
or
mov
mov
or
cmpsl
mov
mov
inc
and
in
daa
sbb
int3
cmp
xchg
xor
add
in
pop
dec
lahf
xor
inc
and
lret
xchg
sub
lock
inc
mov
inc
add
test
push
scas
into
aas
mov
idivl
mov
hlt
mov
ud0
push
dec
push
or
adc
arpl
cmc
insb
sub
rcrl
xchg
or
sbb
pushf
iret
push
dec
ret
int
cli
fwait
mov
loopne
inc
mov
push
dec
mov
es
jle
shrd
out
in
sarl
lds
pop
xor
adc
ds
lds
dec
dec
js
inc
push
dec
ret
movsl
fucom
cmp
mov
jecxz
daa
dec
add
jae
xor
mov
test
pop
cmovle
subb
pusha
je
pop
push
sub
inc
inc
stos
push
mov
test
push
push
mov
mov
sahf
dec
or
iret
cmp
sub
jb
xchg
sti
fwait
add
decl
mov
fistps
and
adcb
repnz
mov
popf
aam
test
jl
cwtl
dec
pslld
repnz
lret
addr16
lret
jg
xor
icebp
aam
xor
popl
test
inc
mov
test
cli
sub
add
inc
lods
cltd
ljmp
repnz
in
idivb
inc
mov
in
xor
ljmp
lret
cld
mov
cmc
ljmp
popf
inc
cmp
fldl
mov
ja
pop
in
lods
daa
sbb
or
cmp
aas
xchg
test
cmpsl
cld
pop
lea
xor
adc
jecxz
pop
aad
cmp
push
mov
add
clc
ja
jb
repz
jnp
div
fimull
hlt
mov
out
xlat
xor
dec
pop
jle
jnp
rorb
aas
stc
pop
out
je
jecxz
sti
int3
lret
movsb
push
cmp
je
cmp
mov
ljmp
ret
mull
out
das
gs
test
xchg
imul
arpl
mov
fsubl
mov
sub
mov
iret
mov
mov
jp
jmp
or
lods
xor
inc
mov
adc
xor
mov
mov
lods
and
mov
mov
or
adc
scas
rcl
or
push
loope
sub
ret
xchg
test
mov
sbb
mov
adc
adc
aam
ds
je
std
xor
int
push
test
shrb
imul
scas
imul
jns
sub
fsubrl
inc
or
out
dec
les
mov
arpl
pusha
cltd
mov
cli
jecxz
add
pop
jbe
and
sbb
loopne
gs
fcmove
sub
lret
push
insl
add
pop
shlb
xor
inc
pushf
xor
xchg
and
jp
nop
xor
add
xchg
lcall
push
fstpl
loop
frstor
pop
push
scas
test
or
sbb
int
hlt
ds
fadds
mov
sbb
aad
lret
dec
mov
cmp
adc
inc
inc
in
dec
pop
jl
test
push
jge
lods
xchg
pop
ljmp
mov
test
mov
push
mov
pop
dec
sbb
movsl
out
fs
fisttpll
or
pushf
mov
xor
fsubl
push
rorb
and
aad
testb
jae
fcoml
push
loop
loope
mov
dec
loop
push
shl
sbb
fmul
fisttpl
in
or
pushf
jbe
call
jns
lods
inc
xor
mov
pop
lds
jl
xchg
mov
in
sub
hlt
xlat
push
scas
imul
dec
push
fs
mov
push
cld
pop
jge
xchg
movsl
inc
fiadds
lods
sbb
push
stc
ja
jp
cli
incb
mov
sbb
or
dec
sbb
fwait
cmp
xchg
loopne
mov
adcb
add
mov
push
add
sbb
mov
repz
xchg
jns
mov
xor
pop
arpl
dec
add
mov
cmpl
imul
pusha
pop
out
ret
cmc
subl
mov
mov
shrl
fmuls
mov
inc
in
sub
pop
inc
nop
push
ret
fs
jg
xorb
fcoml
add
outsl
adc
ljmp
jle
or
inc
movsb
mov
xchg
loope
jmp
inc
lds
rcrb
movsb
daa
out
lcall
jae
xchg
pop
and
pop
adc
sbb
iret
and
sub
xor
pop
icebp
adc
test
adc
jae
scas
popf
xor
aam
in
lods
dec
repz
dec
or
lcall
std
int
sub
fisttpl
xor
and
lahf
daa
and
enter
adc
mov
cmpsb
jp
adc
aas
jmp
push
jb
dec
pop
mov
xor
js
jb
sar
mov
push
movsl
or
enter
sbbb
or
out
loop
xorl
add
iret
jae
mov
test
leave
call
jp
add
mov
lods
push
lahf
push
mov
lock
insl
in
pusha
sub
mov
mov
and
adcb
sub
mov
movsl
gs
lret
aad
cmp
ret
pop
test
lds
push
lahf
xchg
int
pop
je
inc
mov
sahf
ljmp
mov
mov
jecxz
in
mov
inc
push
and
test
ss
idivl
lret
adc
pop
sbb
inc
cmp
fdivs
inc
push
adc
push
sbb
rol
mov
scas
jae
mov
lods
aaa
sub
push
pop
test
sti
push
xor
lods
ss
add
repz
xor
xor
cwtl
mov
mov
add
cmpsl
push
mov
add
adc
nop
lock
repz
sbbb
cmp
and
jb
enter
stos
xchg
push
fs
pop
test
call
test
js
push
shlb
cmpsl
mov
adc
mov
push
dec
xchg
les
test
jnp
jle
push
sar
sub
push
insl
std
adc
and
xor
mov
lods
dec
and
jo
jno
lret
inc
or
loope
repz
dec
sub
aam
mov
xchg
divl
add
outsl
inc
xchg
fisubl
xor
pushf
mov
lret
cmc
add
shlb
out
cmp
in
int
test
int3
mov
test
xchg
xabort
lea
and
int
popa
adc
gs
pushf
cltd
sahf
aam
test
jne
adc
gs
sub
sub
aam
in
outsl
mov
xchg
cli
nop
cli
push
aad
xchg
into
mov
das
inc
jno
lret
int3
pop
push
cmp
test
mov
in
cmc
cmp
push
dec
xchg
popf
push
bound
lea
test
fistps
push
pop
shlb
es
das
add
mov
inc
mov
fidivl
cmpsl
xor
sub
sub
stos
pop
scas
outsb
inc
cmc
and
inc
and
sbb
mov
addr16
push
jecxz
ja
inc
push
lahf
in
push
repz
cmp
xor
popf
fimull
imul
mov
xor
push
mov
push
movl
pop
and
jo
sub
dec
out
insl
adc
aaa
pop
jl
gs
loope
lret
stos
or
mov
ljmp
xchg
mov
test
inc
push
test
fldenv
stos
sbb
push
jns
push
add
enter
push
pop
das
add
jbe
xor
test
mov
pop
cs
mov
das
int
lahf
fisttps
and
dec
lcall
jbe
inc
inc
add
ret
int3
mov
adc
rorl
mov
stos
jbe
paddsb
push
lret
imul
cmp
ret
movb
adc
xchg
push
or
mov
sub
mov
and
pushf
in
xor
inc
jle
inc
xor
adc
sbb
in
mov
sti
fwait
xchg
cmp
dec
jns
je
mov
xchg
ficoms
cld
ds
and
xchg
movsl
inc
gs
fstpt
xor
sub
and
dec
jp
push
cmp
mov
addr16
mov
scas
pusha
lret
dec
rcl
das
jl
push
or
jns
sub
and
jne
loope
sub
pop
imul
xchg
pop
mov
lret
rolb
lahf
sarb
clc
pop
xchg
adc
mov
idivl
push
mov
cmpsb
sub
or
push
inc
push
push
bnd
add
push
scas
xor
cmpsb
mov
cmc
jl
or
pop
sbb
jmp
into
lock
xlat
inc
leave
fwait
pusha
movsb
ljmp
jno
and
push
movsl
rol
xchg
insl
arpl
mov
xor
lret
pop
cmpsb
aam
push
sbb
rcr
jl
xchg
aaa
sbb
or
int3
cmp
aam
xor
push
insb
enter
ja
rclb
std
repz
outsl
aas
ret
std
out
or
and
cmp
and
inc
push
mov
cmp
in
in
call
push
jecxz
insl
fisttpll
and
or
mov
dec
add
pop
movsl
fists
es
ljmp
dec
aaa
outsl
sub
test
rorb
mov
cltd
xor
sbb
aam
inc
inc
out
mov
mov
out
mov
mov
add
shrb
in
cmpsb
push
cli
or
shll
xchg
mov
mov
int
cs
icebp
addr16
je
mov
orb
pop
nop
and
ret
or
xchg
ficompl
loope
iret
cmp
test
inc
js
lahf
mov
lds
add
pop
outsb
sbb
adc
lret
mov
cld
rorb
aad
inc
inc
sbb
dec
nop
imul
insb
jecxz
dec
repz
push
movsl
daa
andl
and
cmp
aaa
add
mov
xor
pop
or
push
sub
imul
lret
jp
imul
mov
pop
adc
and
pushf
xchg
out
jno
clc
push
ror
movsb
push
fwait
aas
adc
pop
jns
and
arpl
push
pop
dec
mov
jbe
into
and
andl
sti
and
cmp
adc
xchg
es
xor
push
hlt
mov
pop
push
andl
mov
jno
shlb
and
push
push
dec
inc
cmpsl
test
pop
lcall
lea
sub
mov
push
dec
loop
aam
lcall
gs
repnz
dec
in
or
mov
mov
pop
mov
pop
addr16
adcb
pusha
gs
lea
mov
js
add
std
shl
in
fadd
push
jb
pop
inc
mov
mov
popa
cmpsb
ds
repnz
xchg
insl
mov
insl
mov
faddl
leave
or
adc
enter
clc
and
push
pusha
test
xchg
jle
scas
fistpl
push
sbb
std
test
push
push
lcall
mov
jmp
cld
cmc
imul
mov
sti
mov
xor
ret
inc
mov
sub
and
jo
mov
add
sub
mov
aam
inc
lock
int3
mov
pop
push
dec
jmp
dec
lret
xchg
add
cmpsb
jbe
push
clc
out
xchg
jb
adc
xor
mov
in
mov
test
aam
sub
notb
sarb
mov
mov
icebp
daa
or
std
aam
imul
ljmp
mov
push
in
dec
mov
inc
scas
out
lods
dec
ficoml
and
js
xor
sti
mov
inc
and
cmp
mov
xchg
aas
lret
jne
push
pop
fdiv
je
iret
rolb
push
js
mov
enter
imul
bound
mov
dec
mov
add
push
dec
mov
dec
outsb
shll
xor
shll
imul
mov
sub
or
in
test
pop
enter
mov
lock
fisttps
inc
incl
icebp
adc
std
divb
les
daa
jmp
xor
aaa
inc
shlb
dec
jg
mov
enter
stos
pop
mov
fs
pushf
push
add
ds
in
js
ret
adc
jmp
adc
xchg
outsl
mov
jnp
and
cmpl
or
add
fistpl
imul
fidivl
mov
fiaddl
in
fimull
mov
loop
in
addb
fidivl
das
or
mov
insl
jnp
out
mov
clc
stos
and
fwait
subl
push
insl
jo
inc
je
and
jge
outsl
stc
sub
xchg
xchg
dec
lea
fwait
inc
jle
sti
push
cmp
mov
mov
out
pop
jnp
sub
arpl
lds
inc
movsb
xchg
and
mov
mov
icebp
pushf
rclb
or
and
xchg
popf
dec
cwtl
stos
addb
int3
sbbl
ds
mov
aaa
ljmp
sti
pop
adc
mov
lcall
jae
mov
rorl
jns
jg
scas
fistl
in
gs
mov
je
in
xlat
xor
icebp
sub
lock
imull
inc
cmpsb
mov
or
push
or
inc
lahf
mov
inc
and
xchg
jl
add
sub
mov
sbb
sbb
pop
mov
mov
inc
les
jle
jnp
sub
dec
jge
lock
in
in
pop
in
or
mov
xor
jp
in
and
mov
push
push
adc
cmp
pop
push
popf
xor
fdiv
adc
push
ds
lret
add
repz
and
call
cmc
mulb
push
dec
sbb
cmp
lahf
das
inc
add
stos
mov
cld
repnz
shl
cmc
cmp
push
push
mov
loopne
push
xor
arpl
mov
arpl
jbe
inc
dec
or
push
cmp
addb
cmp
imul
push
clc
movl
cli
insb
mov
inc
fidivs
scas
inc
or
stc
jecxz
pop
fsubrl
or
push
inc
popa
sub
in
fwait
jge
subb
movsl
lahf
sbb
or
xchg
pop
push
xchg
repnz
xchg
ss
les
pop
push
das
xchg
js
sti
int3
jo
jno
loop
inc
xchg
jmp
pop
ja
xorl
arpl
imul
inc
cmpl
js
in
push
sub
lea
mov
xchg
lock
rcrl
mov
lea
cmp
adc
lret
sbb
push
dec
cmp
sbb
cltd
push
loopne
add
add
call
enter
cmp
cmpsl
push
inc
idivb
pop
inc
mov
push
sub
cmovb
es
jl
push
xchg
aaa
pop
or
lea
aas
fdivrp
xchg
into
div
sub
xchg
iret
sbb
add
lcall
cli
sub
stos
hlt
insl
pushl
push
pushf
leave
outsl
test
adc
push
into
jl
mov
sub
loop
add
mov
jge
rcl
repz
mov
dec
mov
ja
xchg
push
lcall
out
outsl
adc
test
sub
popa
nop
jns
negl
int
int
pop
shlb
xchg
mov
mov
shll
mov
push
popf
mov
sbb
test
ss
test
mov
das
cmp
nop
xchg
and
leave
fdivl
cmp
sub
mov
fsubl
into
imul
cmc
cmp
outsb
aam
and
lea
imul
xor
popa
mov
test
cmpsl
xor
mov
mov
dec
subl
sarl
dec
mov
ret
jb
cld
negb
pusha
cmp
iret
add
xchg
pop
jb
sbb
enter
inc
aam
mov
pop
jle
fisttpll
sbb
outsb
ret
mov
jp
push
fnstenv
testl
rorb
insb
xor
jl
inc
repnz
cmp
and
dec
lds
cmp
pop
pop
in
mov
inc
sub
add
push
push
or
mov
bound
push
or
pop
lret
rcrl
into
call
js
insl
bound
jne
inc
outsl
arpl
mov
xchg
push
pop
jge
or
mov
push
pushf
xchg
mov
aam
sub
jmp
ss
fisubs
sub
cmpl
mov
testl
xchg
lret
pop
jge
cli
int3
adc
clc
loope
mov
out
test
mov
mov
or
jl
and
fldt
cmp
dec
add
adc
pop
nop
fsub
data16
add
fst
sbb
test
out
gs
add
in
pop
pop
or
repz
ja
mov
and
cmpsl
pop
das
std
jae
or
popf
add
sub
cli
fisttpll
hlt
arpl
daa
cmpsb
adc
push
enter
xchg
sbb
repz
cmc
jle
inc
fwait
movl
fidivs
stos
aaa
sbb
arpl
xchg
or
jns
adcb
xor
aaa
mov
mov
jmp
xchg
push
in
dec
roll
loope,pn
sbb
jmp
fisttps
divb
cmp
and
cli
and
sub
iret
cmp
sarb
mov
sbb
sbb
testl
lock
sbb
mov
xchg
sbb
xchg
or
outsb
rcr
outsl
adc
xlat
repz
outsb
cld
push
inc
cmp
sub
cltd
ret
mov
xchg
jp
dec
sbb
or
inc
and
adc
ret
sti
push
jo
mov
mov
fldl
fwait
pop
std
std
gs
mov
jae
cld
shll
jbe
jmp
sbb
sbb
mov
popa
jge
jle
or
sub
mov
cwtl
mov
jns
mov
fstl
les
mov
mov
sbb
fbld
xchg
push
adc
imul
jl
das
testl
mov
inc
xchg
sbb
mov
add
dec
mov
add
or
add
cltd
jecxz
jns
rcll
sti
test
hlt
imul
dec
imul
stos
ljmp
imul
shrw
in
adc
out
orps
mov
sarl
or
xor
test
jo
subb
add
push
mov
inc
sub
call
adc
cmp
jno
xor
xlat
cltd
cmp
iret
mov
mov
xchg
insl
push
jmp
pop
imul
into
xlat
jle
lock
or
out
or
jno
jecxz
pusha
sub
jg
push
loop
xchg
mov
mov
xor
jnp
xor
sub
popf
sbb
dec
sub
test
xor
jl
lea
push
fcmovnb
lcall
cli
pop
fwait
jge
ffreep
loope
outsb
jns
loop
fwait
sahf
dec
movsl
sbb
xorb
out
cwtl
pop
sbb
jl
sarl
insl
cmp
xor
lret
aaa
or
movsl
mov
andb
stc
push
xlat
test
outsl
jne
shll
and
div
sub
pop
add
or
cmp
loopne
ja
dec
or
inc
push
and
mov
push
mov
icebp
mov
int3
xor
fsubl
into
cmpsb
xlat
imul
fwait
xor
add
mov
push
xor
sub
repnz
cmpsb
lock
add
ror
lods
test
mov
pop
mov
xchg
and
add
add
xchg
fdivs
sbb
sbb
loope
jg
fmul
mov
push
adc
mov
inc
pop
inc
ljmp
sub
sbb
mov
inc
cmp
or
jae
negl
repnz
pop
cli
shlb
mov
sub
js
jmp
xchg
add
aaa
inc
push
cmpsb
ret
dec
js
mov
pop
push
mov
xchg
shll
cli
pop
incb
mov
jmp
mov
daa
imul
fbld
sti
pop
cmova
sti
in
xor
mov
add
jp
popa
add
mov
push
les
arpl
orb
sub
pushf
test
lahf
xchg
fists
out
subl
inc
test
mov
pop
xchg
sbb
jg
xlat
xor
add
fwait
lods
pop
fidivrs
shrl
stc
and
jnp
sub
jns
push
jle
lock
gs
in
xor
cli
jns
xchg
in
ficoml
or
xchg
orb
rcr
cmp
jo
or
sbb
push
shll
aad
ljmp
ficoml
movsb
add
imul
fisubrl
ffreep
mov
jecxz
or
lds
js
js
mov
es
cmpsl
xchg
fs
fcoml
mov
stos
jb
mov
add
mov
xor
leave
out
inc
jecxz
fbld
cli
or
lcall
push
pop
mull
fsubrp
dec
les
add
nop
jno
lret
rcr
into
sbb
test
idivl
std
or
js
jbe
lock
mov
enter
stos
or
and
sbb
fcom
push
fidivs
xor
push
repnz
jo
xor
jbe
adcl
cli
sahf
test
lret
cmp
in
push
testl
lret
mov
loopne
stos
xor
dec
nop
or
pop
jnp
lret
jmp
cli
mov
fcoms
out
fbstp
dec
push
and
aad
pop
push
jne
jle
mov
movsb
xchg
mov
stos
out
dec
lahf
lcall
dec
cltd
xchg
pop
xchg
and
sahf
call
pusha
adc
sub
les
fs
jbe
shlb
cwtl
inc
xor
jno
mov
jo
jb
inc
inc
lds
jno
test
in
js
sbbb
or
movsl
into
mov
addr16
rorb
rcrl
adc
pop
mov
rclb
fsub
pushf
pop
ljmp
add
cmp
jns
test
xlat
outsl
sbb
or
and
sbb
pop
jo
push
sub
push
mov
push
stc
jge
ret
jp
test
push
sub
sbb
adc
fiaddl
mov
cmp
cmp
test
adc
xor
mov
pop
mov
outsb
fisubs
popf
jae
lea
stc
sarb
out
lock
loopne
fidivrl
les
out
lds
dec
cmc
mov
and
sahf
pop
mov
mov
out
dec
sbb
jbe
cmp
lods
push
inc
fs
shll
mov
aas
and
mov
dec
jecxz
leave
lea
shlb
inc
nop
pop
mov
and
out
push
jmp
pop
ja
cmpsb
daa
scas
cmp
pusha
std
push
in
mov
cmp
push
xchg
pop
sub
scas
int3
outsb
daa
bound
es
sbbb
inc
sub
dec
adc
or
das
cld
subb
cmp
push
rcr
xor
jmp
fwait
jb
in
push
cs
push
scas
repz
iret
lods
xchg
xchg
lret
xor
pop
or
add
aas
dec
mov
insl
sub
xchg
in
push
shl
stos
sub
leave
adc
adc
dec
inc
mov
fwait
pushf
mov
stos
mov
cs
sahf
jmp
sti
cmp
inc
dec
iret
jno
in
mov
fstpl
aaa
popa
repz
sahf
push
sub
add
int3
das
ds
sbb
or
jp
cld
idivb
int3
sbb
pusha
add
cmp
mov
aas
out
or
imul
xor
mov
fsubs
mov
pop
jg
jmp
or
mov
fwait
leave
daa
pop
out
jae
xchg
mov
sbb
aam
sahf
test
mov
sti
lcall
xor
ljmp
push
scas
fsubs
outsl
into
fbld
out
jl
mov
popa
lahf
cwtl
into
xor
aas
jno
mov
add
inc
xor
lret
inc
cmpsl
test
ss
pop
int3
mov
bound
and
shrl
cmpsb
xor
jg
pop
xor
jge
into
adc
dec
xor
push
sbb
repnz
cmp
popa
call
pop
jnp
push
pushl
pushf
push
cltd
pop
pop
jge
dec
dec
inc
dec
js
icebp
add
fildll
mov
loope
lock
jbe
or
and
inc
mov
scas
adc
jb
test
mov
mov
popf
inc
mov
inc
jp
xlat
cmp
addr16
xchg
outsb
dec
lds
mov
mov
stos
fs
cmp
out
loopne
std
pop
push
xchg
js
jne
imul
xor
leave
int3
xchg
sbb
mov
push
mov
cli
mov
mov
clc
push
mov
out
or
fdiv
repz
xor
in
mov
loope
xchg
daa
ljmp
xor
jl
out
cmp
out
dec
aaa
mov
xorb
and
inc
es
fwait
pop
lahf
aad
dec
lods
fdivl
out
mov
mov
jle
in
push
jo
cmp
mov
test
jg
jbe
test
pop
add
dec
pop
mov
ret
pop
fcoms
xor
enter
outsl
mov
push
arpl
iret
stos
mov
and
ror
xchg
loop
lods
std
ret
push
push
dec
sub
or
sbb
lahf
mov
and
add
push
sub
cmp
dec
push
arpl
mov
mov
loop
addr16
dec
movl
dec
outsl
mov
cmp
pop
aam
outsl
mov
inc
arpl
sti
popa
push
sarb
xlat
lret
sub
lea
cmp
lret
push
push
xchg
add
ret
jecxz
daa
push
xor
dec
dec
outsb
stos
adc
imul
negb
inc
fsubrp
enter
pop
cmp
hlt
push
xor
xor
imul
arpl
pop
pop
fsubl
test
mov
xchg
out
push
lds
les
sbb
pop
pop
fwait
repz
mov
xchg
iret
out
or
jl
shlb
mov
push
and
imul
inc
sahf
mov
lock
sahf
sub
mov
leave
or
pop
fstl
push
ljmp
test
jmp
pop
lods
mov
pop
fsub
adc
xchg
mov
sub
xchg
push
je
movsb
jne
mov
decl
push
dec
cld
test
call
jne
into
das
inc
fnsave
jecxz
call
cmpsb
loope
clc
addb
pop
push
sbb
subl
sub
ljmp
and
rol
xchg
sub
popf
and
data16
push
mov
fnstcw
mov
xchg
dec
int3
or
loope
loop
loope
mov
dec
adc
notb
lahf
fldcw
mov
push
testl
pusha
sub
gs
cmc
adc
push
dec
sub
int3
push
arpl
sbb
mov
mov
dec
jmp
pop
xor
bound
pop
outsl
pop
sbb
scas
inc
fucom
sbb
repnz
gs
xor
insb
loope
in
and
icebp
stc
xchg
in
int3
lea
adc
sbb
push
xchg
bnd
and
xorb
or
imul
int3
adc
add
jae
das
pop
arpl
pop
push
cmpsl
jae
push
xor
cmp
pop
inc
xor
sbb
pop
lods
shl
mov
mov
dec
aam
daa
outsb
imul
cmpsb
setno
xchg
incl
adc
jae
mov
mov
je
or
pop
popf
test
imul
xchg
fwait
loope
loop
mov
cli
xor
mov
xchg
and
sub
mov
icebp
mov
inc
jle
add
push
push
pop
or
lods
inc
push
mov
leave
add
leave
out
filds
jle
cs
xchg
ja
loopne
add
inc
bound
bound
jmp
or
push
test
call
hlt
nop
or
sbb
setl
cmpsb
imul
or
or
pop
dec
inc
cmpsl
xchg
or
push
outsb
in
out
out
cmp
stos
in
or
in
rolb
sbb
sub
cs
aas
xor
inc
pop
psubusw
pop
imul
cmp
jle
add
enter
cld
pmulhw
xchg
push
add
dec
pop
sbbb
ljmp
fiadds
shl
sar
lahf
pop
shl
push
jg
sbb
push
or
pushl
inc
adc
out
in
fbstp
sub
or
xor
adc
mov
sub
test
stos
ljmp
es
xor
in
cld
leave
or
or
lret
or
mov
inc
mov
jge
stos
icebp
jbe
out
mov
fistpl
ja
mov
sbb
popa
add
loop
mov
lret
pushf
lahf
pop
mov
add
sbbl
test
cmp
xor
push
loop
cld
dec
jl
jb
or
cli
jo
xorb
jno
dec
xchg
jg
repz
loop
pop
es
out
inc
sbb
ret
sbb
outsl
or
cld
adc
mov
mov
les
push
cmpsb
mov
sub
add
dec
data16
mov
rcl
insb
iret
pop
and
sbb
repz
je
das
movlps
in
and
fld
aad
lods
sbb
dec
mov
or
arpl
sahf
sahf
pop
shrl
xrelease
clc
cwtl
mov
push
fldcw
dec
out
jbe
mov
add
inc
adc
push
inc
mov
int3
lcall
jb
mov
mov
push
push
mov
xor
icebp
shr
xor
imul
movsb
add
addr16
sub
adc
dec
xchg
xchg
cmp
lds
adc
icebp
rol
cmp
sbb
in
xchg
push
dec
dec
aad
inc
loope
jmp
repnz
andl
push
testl
sbb
add
mov
imul
arpl
jns
fwait
hlt
and
dec
repz
jle,pn
fucomp
mov
movsl
lcall
ds
ret
repz
nop
mov
adc
mov
insl
push
aam
iret
sahf
or
and
subb
push
stos
inc
lods
sbb
mov
sti
stc
jae
dec
xchg
add
jg
dec
or
xor
sar
divl
ljmp
imul
pop
add
aaa
jecxz
cli
in
adc
cmp
iret
sti
popf
push
aaa
push
xor
dec
outsb
dec
jge
lods
insb
loopne
cmp
add
int
es
xor
dec
or
jno
loopne
stos
adc
push
es
xchg
clc
cmpsb
cmpsl
aad
test
mov
add
pop
sub
enter
sbb
shll
add
cld
gs
data16
jge
data16
int3
fldenv
mov
mov
cmpsb
fadd
or
mov
std
sub
sbb
dec
push
dec
xchg
mov
mov
or
arpl
ficomps
push
stos
mov
nopl
out
push
xor
cmpsl
xorb
sub
ja
lock
push
shll
test
insl
je
ds
pusha
lahf
sub
mov
jae
adc
jae
into
xor
icebp
push
jp
inc
pop
inc
push
cmp
xchg
jle
ds
sti
mov
lods
mov
repnz
pop
test
aas
pop
mov
mov
ficompl
mov
mov
pop
lock
scas
aam
testl
mov
lods
lea
mov
dec
mov
jmp
or
mov
dec
jecxz
cmp
push
push
adc
and
je
jmp
pop
daa
push
add
mov
mov
pop
push
ljmp
notl
leave
mov
test
push
jg
push
ret
dec
ret
mov
xchg
mov
pop
sbb
adc
lock
lcall
scas
pop
mov
cli
push
xor
gs
cli
aas
mov
sbb
scas
mov
pusha
jo
mov
inc
out
imul
mov
fnstsw
mov
cwtl
popf
xor
add
cmp
sub
push
mov
adc
pop
lret
ja
sbb
iret
sub
xchg
inc
cmpsl
push
adc
ja
leave
jbe
fucomip
push
dec
clc
dec
inc
sub
jmp
pushf
xchg
push
aas
rorl
arpl
dec
addr16
ja
sahf
fisttps
jno
pop
xchg
xor
nop
rcrb
in
cmp
ficompl
outsb
xchg
loope
xlat
test
dec
inc
and
jmp
push
add
call
xchg
out
cmpsl
scas
dec
sbb
iret
xchg
cmp
lret
iret
mov
stos
scas
mov
mov
adc
inc
aad
outsb
jle
out
mov
cmp
push
bound
inc
fistps
cmp
push
movsl
dec
inc
insb
and
repz
jns
cli
rolb
mov
jbe
pop
rcll
jns
pop
mov
mov
aas
rcr
fs
or
xchg
lods
cwtl
lods
loope
outsb
nop
xor
or
shrb
dec
jo
out
jge
xchg
cmpsb
mov
loopne
mov
test
cmpsl
repnz
sub
mov
inc
ja
cmp
shll
fisttpll
jno
mov
les
icebp
xchg
rorb
dec
sub
pop
daa
jb
insb
mov
outsb
lahf
add
mov
mov
add
jnp
and
fistpll
cmp
dec
lcall
inc
push
imul
inc
loopne
fwait
inc
arpl
stc
cltd
push
add
jb
mov
bound
xor
adc
sbbb
popf
dec
jnp
mov
cmp
ficompl
pop
imul
pushf
xchg
lret
ljmp
sbb
mov
pop
fiaddl
or
daa
dec
adc
jb
pushf
in
and
jb
enter
xor
sbb
and
in
andb
addr16
push
adc
cmpsb
mov
pop
je
xchg
cmp
das
jge
mov
fisubrl
pop
fdivr
and
repnz
mov
bound
push
mull
mul
pop
pop
bound
cmpsl
jnp
es
inc
cltd
dec
or
pop
in
push
sub
jbe
and
jle
inc
hlt
inc
mov
je
xchg
cmp
mov
xchg
sub
push
sbb
into
pop
or
add
stos
push
xchg
mov
cmc
iret
cmp
push
pop
xor
cmp
pusha
mov
mull
and
in
shll
andb
lods
notb
push
sbb
inc
mov
outsl
scas
icebp
dec
aaa
int3
sbb
inc
dec
ja
fsubrl
movl
insb
ficomps
fwait
mov
lods
mov
mov
mov
fidivrs
pushf
pop
aad
stos
setb
and
popf
jp
lahf
mov
scas
mov
dec
jnp,pn
mov
sarb
je
mov
mov
inc
pop
pop
arpl
scas
jmp
bound
dec
outsl
es
ljmp
jge
sarl
idivb
and
daa
imul
mov
mov
outsb
repnz
adc
inc
pushf
loopne
pop
test
fstpt
dec
mov
dec
jo
pop
push
imul
cmpsl
xor
xchg
lods
gs
dec
stos
inc
jle
or
xor
in
mov
inc
das
pop
or
pusha
mov
jmp
pop
test
mov
xlat
fldz
mov
jmp
inc
out
movsb
pop
adc
fadd
xchg
lret
xchg
mov
cwtl
scas
mov
xlat
scas
lahf
adc
sbb
repnz
sar
push
mov
mov
mov
ljmp
ja
mov
mov
pop
lret
xlat
lods
jnp
adc
and
testb
cmpsl
add
cmp
cmpsb
mov
or
ljmp
idivb
fsubs
popa
xchg
mov
ret
mov
ret
scas
dec
int
mov
icebp
lret
inc
filds
push
inc
xor
pop
xchg
jge
cmp
int3
call
sti
loop
jae
xchg
shll
loop
addr16
or
add
ljmp
mov
xchg
or
inc
nop
adc
fsubl
mov
bound
and
in
xchg
fsts
mov
ret
add
pop
mov
push
in
or
stos
loopne
or
add
push
js
fwait
mov
xchg
push
test
xchg
sub
jmp
add
scas
xchg
jge
jne
scas
pop
mov
dec
repnz
mov
cmp
decl
dec
lods
int3
adc
leave
cwtl
lret
cmc
lods
dec
jno
push
mov
cmp
or
imulb
mov
jno
fcomps
cmp
out
adc
inc
push
das
outsl
mov
ret
mov
lahf
mov
cmp
adc
pop
aad
sub
sahf
adc
and
lods
lahf
or
jecxz
inc
xchg
pop
in
fwait
or
into
xor
push
mov
int3
in
and
cmp
push
xchg
bnd
push
xor
sbb
aam
mov
std
xor
xor
or
testb
cmp
insl
mov
and
ficomps
movsb
dec
cs
mov
pop
ja
stos
push
pop
insb
xor
xor
sbb
lret
jae
pop
pop
stc
pop
inc
jo
jle
pop
mov
int3
add
not
adc
pusha
not
test
jp
mov
dec
sqrtps
xchg
inc
stc
push
hlt
cmpsl
mov
sub
xchg
xchg
push
mov
out
or
jg
add
add
and
sub
and
xchg
jnp
leave
jnp
jo
mov
inc
pop
sbb
sub
add
je
mov
jno
call
pop
sbb
xchg
inc
and
aam
pop
dec
pop
repnz
dec
in
sahf
cmp
shll
pop
imul
loop
insb
jle
test
leave
jnp
loop
jnp
decl
fcomps
add
xor
js
mov
push
fildll
inc
shlb
test
ficoml
mov
mov
sub
jl
loop
pushf
pop
dec
xor
loop
fdivrs
sahf
ja
adc
not
mov
sub
fptan
xor
mov
arpl
imul
pop
xchg
lret
andb
stos
mov
or
xor
and
xchg
xchg
daa
pop
push
test
inc
pop
and
rcll
fwait
es
and
shlb
fistpl
pop
lret
jl
jl
jne
jnp
cvttps2pi
pushf
call
add
or
add
into
push
cli
adc
stc
scas
in
scas
push
cmpsl
stos
aam
ljmp
push
adc
ret
cld
movsb
pop
ss
dec
jmp
insl
mov
jg
or
sub
mov
fcompl
xchg
orl
xor
and
mov
xor
sbb
mov
pop
mov
lods
cmp
pop
xchg
ss
stc
pushf
repz
stc
ljmp
test
sub
cwtl
xchg
mov
and
ja
push
adc
pop
jo
push
clc
push
popa
fistpll
orl
dec
push
ds
icebp
bnd
adc
lret
sub
not
lea
cltd
ja
sub
inc
xchg
movsl
mov
add
adc
push
mov
pushf
jbe
mov
jno
jle
test
pop
js
cmc
inc
ss
pop
and
sbb
shrb
icebp
cmp
xor
repz
fistpll
popf
mov
mov
daa
aaa
psrlq
mov
jo
in
loope
push
mov
lods
cwtl
andl
jae
nop
adc
sub
push
mov
sbb
jae
jge
cld
sbb
stos
std
push
add
push
xor
add
jnp
jl
fimuls
jge
adc
mov
xor
rcrl
rorb
dec
xchg
sub
or
cmp
xor
push
inc
or
mov
lahf
push
popa
adc
pop
dec
adc
push
push
sbb
push
xchg
aaa
int3
into
pusha
dec
cwtl
push
cld
and
imul
inc
pop
pushw
popf
rorb
sahf
lods
jne
or
mov
cli
out
sbb
lea
ficoms
or
je
stc
sbb
rclb
xchg
dec
adc
js
push
sahf
dec
movsl
push
xorb
xchg
mov
enter
and
xchg
mov
popl
das
adc
cmp
in
cmc
mov
mov
add
dec
cmp
dec
sbb
add
aas
es
lock
and
mov
orb
mov
daa
divb
js
dec
mov
jmp
stc
mov
and
mov
xchg
sub
ss
mov
fst
push
push
scas
gs
in
sub
outsl
mov
adc
in
orl
daa
std
jg
mov
xchg
jns
jg
mov
int3
aas
mov
outsb
aam
jae
mov
ret
clc
cmp
jg
jo
stos
mov
cli
aad
jns
test
dec
mov
lahf
mov
xor
test
sbb
jns
adc
push
mov
stos
cltd
mov
adc
and
pop
xchg
fucomi
pop
or
sbb
dec
mov
push
pop
mull
out
adc
stc
and
leave
xchg
cmp
sarl
inc
lods
sarb
push
in
pop
lods
or
mov
leave
jmp
into
jecxz
fbstp
inc
inc
mov
mov
mov
fsubl
movsb
lods
mov
scas
outsl
fwait
mov
pop
enter
popa
xor
cmp
filds
jno
fsubp
mov
inc
sub
aaa
pop
dec
call
sbb
mov
xor
cs
lods
cmp
cmp
fidivrl
xor
imulb
imul
xchg
out
stos
cmp
shll
jo
pop
call
daa
sub
mov
push
mov
push
rorb
xchg
es
in
mov
sub
push
and
mov
sbb
push
je
cwtl
stos
dec
xor
cli
adc
push
mov
adc
push
push
jp
jle
adc
in
lret
outsl
push
stos
test
mov
loop
mov
idivb
fldenv
sub
aaa
jecxz
or
mov
shlb
mov
pop
ss
aad
lret
into
mov
call
sub
imul
bound
mov
je
decl
ror
inc
jae
dec
lret
jg
push
xchg
lods
push
pop
sub
das
mov
and
add
and
repz
aam
jns
inc
clc
sbb
dec
xor
xor
aaa
push
mov
push
push
ja
imul
inc
cwtl
or
and
jnp
in
mov
mov
xchg
scas
and
push
push
inc
jecxz
fistpll
mov
ret
xacquire
xor
sub
xor
or
add
into
iret
mov
std
add
and
sti
ret
xchg
dec
xchg
inc
xchg
xchg
sahf
mov
and
push
ret
lret
repz
jb
dec
fcmovbe
out
stos
je
mov
push
outsl
int3
pop
inc
mull
xchg
sbb
outsb
and
jae
dec
rcll
fcmovbe
not
shlb
push
movsl
xlat
and
daa
xchg
mov
mov
fcomps
lods
cmp
mov
stos
mov
repz
test
fldenv
cmpsb
leave
pop
inc
dec
cmp
rcrl
fisubl
and
mov
shlb
or
imul
cli
or
jl
sahf
xor
sub
push
cmp
cwtl
push
pop
frstor
int3
stc
into
mov
xchg
fstl
repz
add
sub
movsl
dec
fldl
repz
mov
rolb
fistpl
neg
jb,pt
push
clc
inc
pop
cmp
sub
rcr
sub
test
sbb
xlat
adc
iret
sahf
pushf
shll
nop
mov
or
xor
push
mov
call
push
mov
sub
cwtl
scas
xchg
into
test
sbb
mov
cmp
fbstp
mov
xor
jbe
ds
mov
imul
xchg
and
rcl
mull
in
dec
add
add
mov
or
jbe
add
shrb
stos
outsb
or
lahf
jg
jmp
fdivrs
and
mov
iret
add
cmp
push
sbb
xchg
jmp
aaa
jp
jle
out
arpl
in
lahf
mov
call
sahf
ds
sub
imul
jg
jnp
ja
int
xchg
cmp
aaa
adc
mov
lds
dec
dec
mov
pop
adc
sub
sti
xchg
dec
ds
imul
cld
sub
repnz
cmp
mov
dec
add
out
mov
adc
xor
mov
mov
jecxz
and
aam
add
jp
scas
inc
aam
push
sub
stos
repz
adc
sbb
jg
and
mov
insb
popf
pop
ljmp
xor
scas
push
mov
and
aas
push
mov
cli
roll
int
repz
cvtpi2ps
bound
jecxz
movb
scas
shl
iret
je
xlat
jo
cld
xor
popf
dec
xor
cld
and
lods
sbb
les
pop
in
xlat
adc
jo
test
xor
mov
nop
inc
sbb
pop
test
push
cld
mov
inc
mov
mov
test
daa
das
mov
push
lret
mov
xchg
pop
stos
nop
jecxz
fxch
xor
in
into
popf
adc
sbb
negb
in
add
jnp
jecxz
les
movsb
popa
push
xchg
fstp
xchg
xchg
lea
pop
mov
xchg
sbb
pop
inc
inc
and
sub
mov
pop
mov
test
imul
mov
imul
or
out
aaa
pop
adc
and
mov
add
mov
jbe
call
aaa
dec
imul
push
icebp
stos
push
inc
addr16
mov
sbb
test
jne
out
xor
inc
ror
cmp
orl
jae
mov
ret
xchg
pop
push
hlt
mov
jg
or
loope
sub
inc
mov
mov
nop
sbb
das
mov
addb
stc
out
pusha
imul
jge
mov
inc
stc
aaa
lock
fcmove
inc
pop
ja
push
mov
insb
pop
adc
inc
mov
ja
repnz
outsl
mov
movsb
fimuls
aad
push
dec
xchg
dec
loopne
out
or
push
pop
cld
and
cmp
int3
fwait
add
dec
sti
shll
cltd
cmc
pop
int3
xor
jb,pn
sbb
sbb
stc
movsb
pop
push
ds
scas
jle
mov
pop
imul
cmp
xlat
mov
jmp
and
adc
add
cmpl
mov
mov
sbb
fiadds
cwtl
rolb
push
sar
sbb
sub
and
lods
lret
sbb
cmp
mov
cltd
pushf
or
jle
daa
scas
and
dec
jno
cli
sbb
jmp
or
xchg
jle
pop
lds
out
sarl
ss
stos
and
and
xor
arpl
xor
shlb
mov
dec
out
inc
jge
xor
repz
push
push
mov
and
arpl
fistpll
push
addr16
das
outsl
mov
push
jno
xor
dec
cltd
popf
in
icebp
aam
lret
cmpsb
push
leave
pop
int3
shll
outsb
or
xchg
adc
ljmp
inc
cmc
scas
xchg
lcall
dec
or
mov
sub
xor
aas
push
addr16
lret
inc
dec
pop
mov
sbb
push
adc
iret
jl
jmp
ret
mov
cmpl
jg
sub
scas
jae
inc
xchg
jg
mov
or
js
or
iret
add
or
mov
pop
mov
fildl
cmp
adc
ja
and
std
push
and
xchg
out
cmp
inc
lahf
or
scas
mov
rorb
cmpsl
add
mov
and
clc
cmc
scas
test
xchg
mov
shlb
mov
xchg
das
inc
scas
pop
loopne
into
aas
jne
popf
andl
and
arpl
pop
stc
inc
push
mov
xchg
aad
sub
adc
ror
inc
sub
outsb
push
push
fmull
std
sub
and
js
das
adcb
imul
stos
scas
out
bound
sub
outsl
ljmp
cmp
pop
or
fistpl
mov
push
jle
hlt
and
jnp
les
fsubrl
cmpsl
cmp
imul
stos
mov
xchg
ldmxcsr
arpl
cmpsb
insb
addr16
jne
clc
add
pop
loope
pop
lret
adc
and
push
inc
mov
movsl
das
sbb
divl
push
and
inc
cmp
in
aas
mov
out
pop
mov
out
mov
push
jg
mov
adc
mov
mov
jle
imul
in
push
lea
lods
sbb
cmpl
ret
or
inc
adc
out
rcr
stos
inc
lret
scas
repz
out
or
das
out
fidivs
movsl
aam
out
pushf
in
daa
dec
jne
cmp
ror
pop
test
loop
push
hlt
and
fildl
or
pop
out
add
popf
dec
mov
push
cltd
pop
sbb
jns
scas
lea
test
stos
in
cmpsb
shlb
add
scas
outsl
mov
andb
xchg
movsl
popf
xchg
pop
pop
stos
sbb
into
and
aas
gs
pop
adc
inc
lret
pop
nop
sbb
ret
clc
inc
test
dec
enter
xchg
push
push
popl
sbb
dec
in
divb
scas
xchg
arpl
stos
ss
test
pushf
int3
add
and
nop
sbb
xchg
in
inc
imul
add
pop
int3
xor
and
outsb
mov
scas
jnp
add
dec
cmp
outsb
pop
push
add
dec
popf
arpl
jge
stos
out
addb
icebp
sbb
jae
mov
cmc
jge
and
sbbb
xchg
jnp
orb
cmp
test
call
into
mov
cmc
daa
pushf
ret
push
pop
test
push
or
dec
leave
ds
nop
adc
stos
add
and
dec
sbb
es
sbb
cmp
and
stc
lret
jbe
pmaddwd
mov
or
mov
js
push
lock
sbb
dec
loopne
or
lahf
xchg
jmp
sub
xchg
dec
aam
pop
stos
add
fwait
dec
mov
lock
or
dec
mov
or
cli
jp
movd
stos
ficompl
or
outsl
jo
stos
ret
inc
dec
cmpsl
in
fsub
pop
cs
cmp
mov
leave
xchg
mov
aad
cmpsl
icebp
adc
xlat
jns
psubusw
dec
aas
mov
loop
sbb
mov
out
stos
icebp
pushl
jnp
mov
mov
mov
add
mov
dec
fisttpl
xchg
push
inc
adc
and
bound
jle
rolb
shl
xor
mov
lods
aad
and
scas
xor
pop
inc
cltd
dec
shrl
push
shll
mov
pop
adc
xor
aas
mov
mov
lcall
mov
adc
mov
mov
mov
ss
jns
push
imul
jae
add
adc
nop
incb
sbbl
mov
and
or
aam
inc
sub
in
jo
jo
xbegin
adc
sub
xor
stos
movsb
mov
or
fldt
push
cmp
fistpll
lret
xchg
adc
or
shld
jmp
ds
mov
scas
inc
cld
mov
cmovnp
fxch
aad
aad
xchg
ljmp
lcall
add
jbe
stos
cmp
pusha
outsl
ljmp
lds
stos
insb
iret
xchg
lcall
sbb
loopne
pop
jo
or
pop
jns
pop
aaa
jmp
das
push
mov
mov
pop
test
dec
xor
lods
mov
cmpsl
dec
or
rcll
pop
rcrb
leave
sbb
pop
xlat
xchg
dec
repz
inc
dec
mov
lods
inc
das
push
aad
xor
mov
mov
sub
pop
scas
popa
lods
test
sub
fwait
sbb
subb
scas
pop
xor
jmp
lock
jge
mov
mov
test
int
dec
aas
fidivrl
inc
ds
loope
in
pop
testb
cmp
cmc
icebp
or
push
ss
mov
outsb
gs
into
imul
outsb
mov
scas
inc
bound
ret
scas
lahf
mov
inc
sub
test
arpl
cmp
popf
inc
je
in
out
mov
mov
xchg
enter
nop
inc
sub
andb
cmp
flds
cli
push
xlat
mov
aam
fstpt
leave
dec
or
mov
adc
pop
xor
iret
mov
in
loope
push
cs
push
ds
cmp
repnz
inc
fsubr
sub
nop
sti
dec
stos
lret
xchg
shrl
pop
inc
push
ja
outsl
jl
clc
jge
aad
inc
addr16
or
push
ja
jecxz
xchg
or
push
aam
sub
pop
arpl
dec
jle
inc
mov
mov
insb
mov
fisubrl
dec
dec
pop
data16
mov
xor
or
cmpsb
in
aas
mov
pop
pop
movb
call
add
push
lahf
mulb
jmp
xchg
movsb
jnp
push
das
inc
add
int
out
fwait
stos
dec
dec
cmp
mov
test
dec
lret
insl
movsb
pop
push
insb
sbbb
lods
xor
or
sub
cwtl
sub
mov
adc
sub
cli
mov
sti
fists
loopne
ret
fsubrs
mov
jb
jecxz
in
fistpll
mov
mov
dec
enter
out
stc
jae
pop
jns
pop
dec
dec
mov
adc
scas
adcl
shrl
test
ss
gs
das
shlb
ret
pusha
cmp
insl
mov
mov
or
inc
repz
xchg
aaa
mov
push
jmp
or
loop
insl
jae
mov
push
js
incb
mov
data16
cli
daa
pop
icebp
push
in
push
pop
sbb
inc
push
cmp
das
pusha
dec
add
cs
arpl
cmp
xor
pop
push
lock
inc
test
xor
nop
rcr
or
jecxz
dec
sti
dec
imull
jnp
sar
sub
clc
push
repnz
movsb
loope
push
cmp
mov
pop
repz
sbb
jne
jecxz
mov
outsb
jnp
dec
mov
cmp
ds
and
scas
mov
mov
inc
push
dec
pop
pop
test
mov
lahf
ds
push
cwtl
shrb
inc
mov
inc
shrb
cli
lret
mov
jno
adc
mov
sbb
fldenv
push
fldcw
mov
rolb
push
loope
rcrl
mov
sub
lcall
rcrb
mov
imul
fwait
inc
lock
jge
add
lcall
mov
add
dec
jbe
popf
mov
inc
lock
fcoml
pop
clc
cmp
ja
ss
cmc
dec
cmpsl
out
aam
sub
pop
push
xchg
ror
cmc
fsubs
xchg
clc
ret
loop
cli
cli
fs
rclb
scas
mov
lock
jno
das
mov
scas
hlt
inc
mov
push
lods
dec
test
sbb
cmc
hlt
mov
dec
in
ja
mov
jne
stos
out
inc
inc
jne
jmp
ljmp
gs
incb
pop
mov
push
div
lods
and
lods
insl
das
mov
ljmp
xchg
jl
dec
fdivrp
jmp
aas
dec
test
movsl
push
sub
mov
insl
xchg
pop
sahf
adc
sbb
mov
out
push
cmp
jae
daa
out
jle
test
out
or
jno
loop
cltd
hlt
pop
adc
xchg
imul
mov
mov
in
add
scas
xchg
lahf
js
out
xor
mov
push
push
mov
mov
push
jo
mov
loope
sub
adc
sbb
aaa
jg
pop
ficompl
sbb
scas
dec
sbb
xor
mov
inc
std
outsb
in
add
outsb
sti
inc
push
pusha
sub
rclb
aam
cmpsl
jae
leave
and
dec
inc
push
cltd
stos
jle
pop
jl
xchg
sub
or
jge
ds
push
loop
cmp
inc
ljmp
jmp
outsb
repnz
mov
ret
rolb
stc
cltd
fucomp
jge
stc
not
imul
and
lds
cmovle
ret
icebp
add
clc
jo
xor
push
movsb
jle
cmp
insl
cmp
cmpsb
add
mov
adc
add
jnp
shlb
into
mov
push
aas
mov
lret
adc
js
lret
scas
inc
xchg
push
jo
pop
jb
lahf
in
data16
icebp
inc
mov
xchg
cmp
pop
xchg
pop
popf
xchg
lahf
ss
xchg
pushf
dec
xchg
std
adc
mov
loop
mov
int
ja
movb
push
push
cmpsb
popa
jb
pop
bnd
gs
out
in
ret
sub
in
push
add
outsl
out
push
push
insl
jne
cmp
imul
pop
pop
xchg
adc
mov
xchg
das
xlat
adc
insl
cmpsb
mov
pop
fs
dec
inc
bound
inc
out
fdivrl
push
adc
fcmovnu
mov
or
or
imul
cmp
lcall
jmp
push
pop
sbb
cmp
bound
and
jns
out
add
sbb
in
inc
xor
popf
loop
mov
or
or
mov
call
sahf
xchg
mov
inc
mov
lock
in
imul
push
ret
imul
push
xor
mov
xchg
enter
icebp
loopne
pop
stc
scas
mov
loope
xor
sub
movb
sbb
lcall
out
mov
and
xor
jecxz
fsubrs
in
push
cmpsl
pushf
sbb
or
sub
mov
aaa
test
imul
pop
cmpsl
and
sbb
stos
mov
adc
dec
cmp
aas
mov
dec
xchg
push
dec
mov
mov
lods
xor
cwtl
loope
outsb
jns
fwait
in
es
in
loopne
mov
push
dec
sbb
push
sbb
stc
mov
clc
dec
xor
xor
ss
sbb
mov
das
gs
out
or
sub
mov
mov
aaa
pop
adc
arpl
pop
xchg
pop
movsb
jne
icebp
rcll
inc
xor
scas
ljmp
sbb
nop
lret
lea
and
push
xor
adc
adc
mov
inc
inc
mov
cltd
or
pop
fnsave
xchg
je
push
ja
mov
movsb
movsl
add
sub
addr16
addr16
cwtl
cli
std
dec
mov
mov
mov
popf
negl
push
mov
lds
mov
xchg
push
adc
mov
ss
movsb
jl
add
lret
pop
push
stc
push
out
or
sub
cmpsl
stc
rcrl
adc
pop
imul
jg
pop
lods
andb
es
sub
add
andb
lahf
imul
lret
hlt
loop
mov
aad
or
mov
xchg
aas
adc
adcb
dec
mov
int
adc
or
mov
sub
adc
test
and
dec
cmp
cmpsb
push
arpl
mov
jge
ja
or
pop
fistps
inc
mov
mov
adc
aad
lods
mov
lods
out
push
dec
lcall
aam
dec
hlt
rcrl
je
pop
add
aas
jp
std
popa
repnz
cmp
das
jo
insl
xor
mov
fbld
hlt
mov
out
mov
inc
addb
inc
lea
jnp
mov
mov
mov
jmp
in
push
nop
lods
arpl
test
stc
and
insl
leave
adc
pop
cld
push
mov
push
jns
fmul
dec
dec
adc
data16
sub
dec
mov
xor
mov
lea
insb
lret
mov
xchg
fiadds
adcl
sub
jle
bound
xor
cmp
mov
jae
jl
pusha
adc
cltd
jnp
out
adc
out
mov
iret
pop
cld
adc
rclb
add
mov
push
cmpl
out
std
jb
pop
jg
or
dec
enter
dec
nop
js
addr16
mov
fstps
cmp
pushf
lret
fiadds
xchg
arpl
sbb
cmp
jle
fcmovnb
mov
sbb
mov
inc
push
lods
mov
inc
mul
out
andl
xchg
sbb
cltd
in
stc
gs
divl
stc
outsl
push
fcmovu
mov
je
xchg
mov
cli
stos
lea
stos
sub
iret
arpl
sbb
pop
lahf
dec
cltd
jge
push
out
std
push
arpl
pop
lea
rorb
aam
mov
shrb
out
or
ret
iret
sbb
and
fcoms
mov
adc
mov
dec
jbe
sub
pop
iret
pop
inc
or
ljmp
mov
dec
push
adc
lock
shlb
pusha
mov
mov
into
mov
sub
imul
or
push
mov
push
xchg
pop
sub
cmp
xchg
cmpl
jmp
jne
out
mov
out
or
mov
or
mov
mov
xchg
adc
adc
cs
data16
aad
movsb
xchg
cmpsb
cmpsb
sbb
repnz
push
cs
push
movsb
pop
insl
sbb
or
mov
repz
and
js
pop
or
shlb
add
cwtl
or
ret
in
lock
fidivrs
push
xlat
ljmp
ret
dec
lods
je
stc
popa
das
mov
rorw
and
popf
stos
addb
fwait
cmpsb
adc
push
add
std
test
xor
pusha
orl
pop
fdivrs
jmp
sbb
xor
shlb
shll
int3
jnp
stos
out
ret
jo
sbb
mov
ds
inc
cwtl
push
out
dec
adc
sbb
stos
jle
subl
out
xchg
jg
adc
inc
xchg
dec
data16
iret
push
stc
mov
xor
cmpsb
xor
js
xor
adc
js
adc
cmpsl
fidivrs
or
mov
pop
cltd
out
mov
fmuls
jle
mov
cmp
mov
jl
out
and
push
jae
push
fs
shlb
fnstenv
push
cmp
jo
out
pop
xor
xchg
lea
sti
in
jae
sbb
ret
cmpsb
pop
mov
bound
mov
dec
mov
sbb
mov
out
jo
jnp
and
jns
pop
lcall
sbb
cmp
mov
cmpb
es
pop
mov
xchg
dec
dec
lcall
adc
sub
mov
jae
cmp
jnp
jbe
and
pop
mov
bswap
adc
mov
pop
fldt
xchg
enter
and
lds
rcl
inc
nop
jg
cs
dec
dec
push
nop
xchg
sbb
fdivl
jle
dec
push
gs
jp
sbb
cmp
dec
inc
outsl
mov
dec
pop
ja
adc
out
test
sub
leave
popa
das
pusha
xchg
push
repz
es
fdivl
in
xchg
xchg
inc
jnp
jmp
rorb
push
xor
or
cmp
jg
xor
repz
mov
loop
inc
fcoml
stos
mov
and
pushf
iret
cmpl
leave
mov
paddusw
or
adc
int3
adc
ret
dec
sbbl
add
mov
jbe
mov
xchg
mov
stc
jbe
out
outsb
mov
pop
adc
insl
sub
stos
adc
xchg
inc
mov
cmp
sysret
lock
test
jno
sub
push
fwait
jl
xchg
data16
sbb
lahf
sbb
jno
lods
push
push
sub
pop
fs
imul
lcall
xchg
std
pop
jmp
rclb
push
xor
call
out
sbb
sti
popa
test
or
lods
adc
into
jmp
cmp
dec
inc
sub
add
mov
xor
loop
divb
in
pop
loopne
sub
adcb
les
mov
out
or
jnp
cmc
addr16
cwtl
jl
jnp
lahf
fmul
adc
xor
mov
sbb
in
push
or
mov
pop
push
jp
jmp
mov
aaa
mov
je
mov
std
push
and
int
loopne
aad
pop
ret
add
mov
and
std
ret
int
outsb
data16
out
int3
jl
imul
not
mov
and
mov
cmp
push
ret
inc
addb
sub
rcr
sub
or
sbb
insb
lods
add
lock
xor
out
push
push
pop
ljmp
jmp
es
dec
adc
cwtl
mov
fstpl
adc
xor
gs
fcmovb
and
daa
push
xchg
in
sub
add
cmp
test
pop
cs
ficoml
and
mov
mov
test
sbb
pop
scas
movsb
adcb
fcompl
lods
mov
sub
in
and
cmp
loop
gs
arpl
inc
mov
out
ret
jge
ja
dec
pusha
xor
sbb
insl
xor
and
mov
push
push
jge
mov
ficomps
daa
sub
lret
leave
pushf
xchg
adc
jecxz,pt
loopne
pushf
test
int
movsl
shrb
cmp
fsts
aas
imull
dec
cs
dec
test
mov
std
cmp
sub
mov
push
or
inc
outsl
fwait
insl
pusha
dec
sub
push
orl
dec
lds
and
dec
and
int
pop
jl
dec
aas
and
xchg
mov
pop
sbb
addb
fnsave
cmc
loope
or
xchg
rcrl
popf
and
push
fsubl
mov
fildl
lahf
add
outsl
xor
icebp
loope
xor
mov
sub
dec
test
repnz
lds
push
addb
pop
or
jne
in
dec
dec
call
xor
nop
movsl
jae
xchg
pop
dec
lcall
jno
cmp
jecxz
addl
addr16
mov
in
sbb
inc
ja
rep
adc
mov
lds
subl
adc
inc
loope
add
daa
lret
das
notl
jae
and
bswap
jl
sbb
or
pop
aas
xchg
mov
repz
xchg
test
loopne
mov
mov
popa
repz
jo
test
adcl
pop
outsb
mov
push
push
mov
out
outsl
or
icebp
cmpsl
movsb
inc
inc
insb
inc
xchg
sub
mov
dec
aam
jge
xor
movsb
sbb
or
dec
mov
mov
add
jl
mov
dec
fists
xchg
ret
and
ret
sar
mov
popa
movsl
jb
mov
mov
cli
stos
xchg
mov
loopne
cmp
jb
add
mov
mov
sbb
sbb
jns
fcomps
insl
sti
sbb
test
pop
push
or
jo
cmc
sub
jl
daa
cmpsb
cmpsl
pop
popf
popa
push
and
pop
jns
lret
push
decb
dec
dec
sti
out
cmp
in
dec
mov
push
rcr
push
pop
dec
cmpsl
push
loope
mov
in
leave
adc
cltd
loope
mov
fiaddl
pushf
cmp
push
stos
xchg
mov
xchg
push
sar
insl
or
fistpl
inc
xor
call
mov
sub
and
in
pop
cwtl
sahf
test
test
fld1
std
pop
sub
dec
sar
sbbl
xor
repnz
stos
popa
mov
or
rcr
sbbl
int3
mov
shrb
sbb
pop
mov
addr16
mull
cmp
inc
lods
sar
jb
je
or
and
sub
aaa
leave
cmp
cmc
test
cmp
lods
pusha
mov
jns
push
cmp
push
inc
mov
xor
cmp
fadds
dec
or
orb
push
xchg
inc
xchg
adc
les
ds
push
jnp
mov
lret
outsb
repz
iret
pop
stc
push
sub
cli
cmp
popa
inc
movsl
mov
pop
dec
jmp
and
mov
jbe
iret
lahf
pop
shlb
add
mov
test
fucomi
outsb
cmpsl
sbbb
add
jp
sub
es
leave
push
xchg
out
test
shlb
ret
ret
fisttpl
jb
mov
je
in
inc
popa
fwait
scas
test
ds
test
ds
in
or
mov
das
cwtl
ret
lock
sub
lret
addr16
paddw
mov
push
call
test
mov
mov
out
and
in
push
push
jecxz
in
pop
rolb
push
dec
mov
jg
stos
xor
lret
jl
sub
pop
adcb
rcrb
lock
cmc
xchg
cmp
xchg
aaa
mov
push
mov
jg
ror
popa
bound
stos
stos
pusha
fcoml
sbb
pop
cmp
xchg
out
jne
adc
sbb
lods
imul
and
fldcw
pushf
cmpsl
rorl
or
mov
es
test
lret
adc
shlb
mov
mov
mov
or
rcrl
mov
or
add
data16
aaa
jg
setge
xchg
dec
cmpsl
xor
lret
andl
cmp
outsb
es
sahf
cmp
je
or
pop
cld
hlt
cli
enter
pop
push
test
xchg
dec
testb
push
add
test
cmp
jno
and
push
or
xchg
mov
ret
das
inc
lea
inc
jo
mov
inc
pop
in
cmp
push
ds
cli
icebp
in
dec
lods
cmp
das
sub
mov
lods
in
push
adc
jae
iret
lret
push
add
and
mov
sub
imul
lcall
sbb
cmp
ljmp
stos
add
or
fists
mov
mov
in
pop
lea
jmp
ficoml
xor
push
lahf
in
mov
sub
sub
cmp
jge
xchg
arpl
inc
push
in
dec
add
cmp
pop
addr16
pushf
addr16
pop
lret
jge
cmp
pop
lods
iret
in
sbb
adc
jge
adcb
xor
dec
test
and
sub
aam
insb
pop
jnp
repnz
jae
cwtl
push
lea
mov
cmp
sbb
push
icebp
push
dec
aam
mov
mov
push
mov
lret
push
dec
mov
and
pop
aas
call
pop
rorl
jbe
inc
mov
jne
lret
mov
mov
pop
mov
cmp
ss
adc
ja
test
insb
fstpl
push
and
pop
adc
insb
push
js
push
je
jle
mov
cmc
pop
jle
jae
shlb
push
push
xchg
ja
inc
scas
xor
imul
inc
cmp
adcb
out
lds
cmp
cmp
popa
push
mov
sbb
jp
lea
subl
sbb
movsl
mov
mov
dec
pop
ret
xor
dec
out
enter
push
inc
pusha
add
cmp
jbe
sub
pop
mov
pop
add
ja
pop
mov
ljmp
pushf
push
pop
out
inc
mov
dec
inc
jge
xchg
test
test
or
stc
pop
sub
popa
push
jns
mov
sbb
lods
loopne
add
sbb
outsl
ljmp
sub
call
les
lds
add
std
mov
mov
cwtl
jmp
mov
xchg
fcoms
repnz
jp
mov
repz
in
jmp
loopne
jo
push
cltd
std
sti
ror
fcmove
or
pop
dec
inc
sahf
jp
insb
fisttps
pushf
gs
push
xchg
adcl
push
or
sahf
mov
sbb
jg
mov
sub
sub
cli
jno
or
aam
cmpsb
pop
frstor
icebp
lahf
loop
out
adc
stos
es
adc
sbb
lock
cmp
and
hlt
cwtl
cld
cmp
dec
fmul
xor
mov
mov
movsb
sbb
idiv
aad
repnz
cmc
push
cmp
cwtl
mov
psadbw
rorb
cmp
adc
roll
push
movsb
push
dec
cmpsb
xor
lods
and
dec
lds
ret
mov
fcmove
xor
cmp
dec
scas
mov
jnp
xchg
push
insl
pushf
test
jae
mov
xchg
dec
mov
outsb
pop
mov
test
aas
push
or
cs
and
int3
in
jge
mov
jne
testb
push
cmpsb
adc
jp
push
dec
xor
fistpll
je
or
inc
icebp
fcmovu
mov
cwtl
pusha
inc
sub
pop
xor
or
cltd
dec
adc
fs
clc
jbe
inc
stc
push
mov
movsb
mov
fcmovu
popa
movsb
pop
lcall
ja
cltd
cmp
and
in
and
cmp
push
add
test
js
or
cwtl
rcl
sbb
cmpsb
xor
jnp
ror
pop
mov
and
push
int3
loopne
adc
sbb
push
sahf
jl
mov
loopne
or
dec
cmp
outsb
adc
aas
sub
add
pop
jmp
popf
xor
push
sbb
pop
xor
adc
pushf
popa
stos
shll
jge
neg
jno
dec
fdivrs
adc
and
lds
fsts
int3
shrl
pop
mov
leave
add
jge
out
shr
scas
scas
pusha
jg
sub
filds
push
push
cmpsl
jge
insl
jg
push
out
gs
mov
xchg
mov
scas
sahf
ss
mov
outsb
mov
sub
inc
inc
add
push
stc
aas
mov
push
cmpl
in
gs
inc
icebp
jp
dec
daa
sub
movsl
mov
ret
mov
lds
jno
outsl
push
and
sar
hlt
dec
fistl
dec
shlb
or
lahf
mov
add
pusha
pop
sbb
nop
xor
lock
in
adc
cmp
out
sub
jmp
adc
cwtl
cmp
xchg
push
mov
mov
out
add
cmp
in
mov
repnz
ror
xchg
mov
dec
jg
outsl
mov
cmp
adc
and
dec
dec
lcall
push
stos
cmp
outsl
iret
cmp
into
adc
pop
push
fucomip
push
sub
cs
enter
test
outsb
push
pop
dec
push
push
push
xor
sbb
add
ja
xchg
cmp
out
fidivl
and
jns
jb
cmp
jmp
repnz
or
fwait
mov
push
or
dec
test
cld
pushf
aad
lds
stos
mov
lret
cld
loop
fnstenv
xor
test
xor
ljmp
std
pusha
inc
loope
testb
mov
sbbb
and
les
repnz
and
loopne
outsl
leave
or
pushf
int
mov
cld
mov
xchg
aad
lret
xor
pop
fidivl
fsubs
call
sbb
sbb
faddl
push
sbb
pop
roll
push
repz
push
in
bound
es
std
rorb
ja
and
push
cmc
or
test
dec
xchg
pop
mov
out
jmp
dec
push
ret
push
inc
into
andl
xor
xchg
xchg
cmpl
js
into
and
popa
test
and
int
rol
das
les
and
lcall
in
and
adc
daa
pop
test
push
insl
outsl
daa
cmp
pop
shlb
mov
and
insb
test
aad
enter
pop
nop
lea
xchg
roll
divb
outsb
mov
mov
clc
or
fdivs
dec
clc
pushf
lcall
es
pop
sbb
adc
add
xchg
andb
add
mov
push
hlt
cmc
testl
test
cwtl
pusha
pop
lods
repnz
mov
imul
cmp
pop
sub
jecxz
aad
ss
sbb
mov
dec
xchg
bound
adc
adc
ljmp
mov
sarb
mov
adc
dec
mov
mov
test
push
fistps
in
stc
dec
push
imul
leave
mov
dec
addb
mov
fwait
lods
cltd
out
jge
jnp
dec
fisubrl
vphaddubw
aam
or
or
pop
and
rolb
in
iret
fistps
das
xor
loopne
push
pop
sub
loope
nop
addr16
xchg
lods
jne
mov
cmp
dec
and
mov
xchg
add
jle
andl
inc
mov
aam
pushf
push
popa
in
add
push
rcrl
adc
out
sub
stos
int3
jb
adc
in
paddq
mov
mov
mov
xchg
movsb
test
xor
sub
jecxz
xor
pushf
xchg
cs
aam
push
jmp
arpl
fpatan
xchg
inc
adc
aad
or
bound
les
add
or
ret
mov
mov
and
sub
sbb
das
xor
and
lock
mov
push
data16
lods
cwtl
cwtl
mov
insb
mov
mov
aaa
sbb
mov
stos
mov
lods
hlt
cmpl
jno
nop
mov
sub
dec
aaa
ljmp
ret
aad
cmp
mov
jge
out
mov
inc
inc
add
in
in
jle
jmp
addr16
insl
cmpsl
sbb
jmp
enter
xlat
push
xchg
mov
mov
mov
push
mov
stos
lock
lock
jne
mov
push
pop
addr16
lahf
mov
lods
loopne
sbb
jecxz
repnz
jg
das
lods
cmp
xchg
xchg
push
lea
std
mov
xor
push
call
push
lds
popa
jmp
push
jne
insl
mov
arpl
lea
xor
mov
xor
shrb
xor
adc
xchg
loope
jae
jnp
cmp
movsl
fidivs
in
sub
std
mov
je
mov
pusha
mov
cld
aad
ljmp
xchg
lods
push
jg
movsl
cmp
insl
sub
insl
lret
adc
adc
sbb
test
test
pop
push
or
xor
jb
mov
jle
dec
or
daa
push
xchg
or
loop
mov
mov
lcall
xor
dec
push
push
jo
dec
nop
lret
cmp
sti
mov
xorl
pushf
pop
inc
inc
out
sti
lret
cmp
fwait
mov
push
std
pop
in
sbb
sub
out
stos
mov
data16
push
add
out
loop
std
aad
jno
lods
stos
orb
mov
pop
clc
shlb
cmp
xor
mov
jno
cmp
sbb
movsb
fstl
stos
in
adc
push
xchg
lret
ret
cmc
xorl
or
pop
xchg
dec
push
pop
dec
sti
dec
mov
sti
ficoml
pop
stos
jp
push
pop
lods
pusha
cmp
sahf
popa
test
mov
pusha
sbb
data16
jmp
push
bts
cmp
jle
aaa
mov
rcrb
inc
test
data16
pop
cld
xor
lcall
test
insl
add
pop
jb
sbb
push
xlat
adc
gs
out
in
inc
mov
movsb
mov
sub
paddusb
andl
inc
out
pop
lock
mov
cmp
sub
and
mov
jno
js
xchg
push
jbe
cmp
fcmovnu
pop
pop
push
dec
ds
ds
push
sbb
mov
stc
mulb
ljmp
inc
push
cmp
sbb
popa
add
xchg
adc
and
mov
repz
xor
movl
testl
mov
push
ljmp
les
sub
dec
lret
stc
mov
lods
pop
stos
inc
jp
sub
outsl
sub
sub
add
sub
loopne
pop
repnz
xchg
mov
inc
pop
cmovg
fmul
xchg
or
shrl
cld
sbb
adc
mov
popa
inc
push
push
dec
pusha
dec
pop
fwait
stc
jmp
pop
pusha
call
or
pop
adc
xchg
imul
add
pusha
xor
jg
lret
mov
cwtl
sarb
push
pop
mov
or
repz
hlt
in
dec
jl
fbstp
sti
daa
inc
cmpsl
cs
or
pushf
sub
xor
pop
push
mov
gs
jg
ss
sub
mov
and
jge
mov
adc
sti
pushf
test
mov
jl
out
sti
je
cmp
enter
sub
jl
test
fs
sbb
ret
faddl
sahf
and
xor
jae
or
dec
or
addb
jmp
xor
rcll
lods
out
daa
sub
xor
cmp
nop
mov
jns
aas
pop
ja
dec
outsb
mov
mov
mov
dec
jmp
dec
lret
das
inc
xor
inc
popa
cmp
movsl
stc
ret
xor
lods
xor
inc
test
icebp
pushf
int3
sub
inc
mov
cs
adc
xchg
mov
dec
push
ja
mov
ror
ret
icebp
pop
or
push
out
pop
insl
dec
pop
ret
ljmp
in
cmove
cwtl
xchg
clc
dec
push
inc
push
push
pop
and
js
js
cmp
mov
mov
or
repnz
sub
or
imul
mov
scas
sub
add
jne
pop
xlat
xchg
paddsb
inc
sub
cmc
in
jg
scas
out
in
cmpsb
jmp
mov
decl
fidivl
jl
inc
stos
clc
leave
lret
sbb
shll
cltd
cmpb
lods
push
or
jl
testb
push
push
adc
mov
stc
cltd
xlat
mov
and
cmp
sbb
mov
clc
stc
xchg
mov
or
and
mov
test
insb
rolb
setne
dec
and
cli
mov
inc
xor
fwait
movsb
inc
and
in
xchg
pop
push
jle
sub
cmpsb
xchg
pop
psrad
mov
aas
scas
cwtl
push
iret
inc
mov
data16
mov
xorl
movsb
leave
popa
mov
leave
sahf
cli
and
fisttpl
push
sbb
mov
fdivl
push
cltd
testl
nop
or
in
and
cmp
and
fcmovu
jg
jb
add
mov
and
push
sahf
push
jbe
cmpsl
pop
fcmove
lds
pusha
ret
sub
pop
or
insl
into
mov
cmovae
sbb
jbe
rorl
scas
das
cld
sub
or
lret
cmpsl
sarb
cmpsl
call
iret
enter
push
sub
enter
roll
hlt
mov
adcb
jne
into
pop
insl
dec
jo
jecxz
inc
and
decl
dec
fildl
andb
mov
pushf
adc
xchg
sti
ljmp
outsb
int3
out
jecxz
push
mov
shlb
push
aad
dec
pop
cmp
mov
and
and
popa
xchg
cmp
mov
rolb
inc
repz
push
xor
cli
fnstcw
movsb
add
imul
push
cs
aaa
call
jp
icebp
fisttps
xchg
xchg
inc
or
mov
mov
lds
dec
sub
xchg
mov
jl
shl
xor
mov
call
add
mov
xor
fwait
ja
add
xchg
xor
or
jbe
rcrl
out
and
jp
shll
outsl
lret
mov
jb
sbb
cmp
sub
add
fstps
pop
cmpsl
jb
dec
push
call
mov
jle
test
push
pop
out
sub
pop
and
ja
mov
lcall
lock
sbb
pop
cmpb
out
adc
sbb
xchg
jle
cmove
rol
add
addl
fnstenv
addb
gs
outsb
and
or
jo
movsb
dec
or
cmc
mov
mov
insl
dec
adc
jl
cltd
push
mov
and
stos
popf
xchg
push
dec
sahf
pop
inc
cmp
in
mov
or
and
or
push
ss
sarl
mov
ret
loopne
push
hlt
jnp
jge
stc
in
pop
imul
pushf
stos
out
outsb
pop
dec
inc
out
or
mov
push
mov
inc
les
jmp
in
cmp
arpl
dec
jns
gs
flds
loopne
ret
mov
aas
ret
or
aam
rcr
adc
and
insb
insb
mov
out
iret
cmp
push
loopne
xlat
outsl
push
lcall
insl
negb
leave
mov
sbb
dec
mov
stos
xor
int
sbb
adc
mov
cmpsl
lock
je
lods
ss
pop
call
nop
sub
xchg
jns
std
jmp
pop
out
pop
dec
mov
lret
pop
rclb
inc
adc
mov
adc
data16
arpl
mov
adc
fidivs
stc
out
test
cld
loop
leave
enter
adc
std
repnz
js
loop
pop
push
popf
loope
push
cltd
xchg
aaa
lea
dec
test
push
lcall
sub
sbb
adc
inc
into
test
jmp
into
jns
and
push
stc
mov
lds
dec
cmpsl
movsl
pop
cmpsl
cmp
mov
mov
xor
push
ljmp
lds
test
cld
inc
repz
jp
ret
push
and
dec
or
ja
out
xlat
movsl
sbbb
mov
mov
mov
lahf
xor
repz
insl
push
mov
in
or
or
icebp
stos
rcl
push
inc
inc
stos
lcall
sbb
mov
rcr
mov
inc
out
andb
lret
mov
xor
mov
dec
adc
push
jl
aam
dec
adc
in
aad
repz
arpl
xlat
sbb
cmp
insl
xor
fcmovnbe
mov
inc
test
add
bound
pop
dec
pop
mov
pop
mov
arpl
sbb
ljmp
imul
mov
push
fisttps
push
xchg
or
mov
adc
dec
popf
dec
jne
in
jmp
out
popa
or
testb
aaa
jl
in
mov
or
mov
sarb
jne
sti
cmp
int3
push
add
popf
pop
xchg
jo
or
call
add
clc
inc
or
pop
dec
clc
xor
fadd
mov
daa
scas
scas
loope
shlb
mov
jno
inc
push
push
xor
repnz
mov
xor
jns
inc
mov
xchg
aaa
test
cwtl
add
dec
stos
mov
int3
push
xchg
cli
bound
shrb
or
lods
repnz
add
adc
and
or
lock
jmp
push
jmp
push
xchg
repnz
push
insl
pop
mov
cmpsb
dec
sbb
mov
dec
outsb
stc
sub
addr16
lahf
jbe
fdivrp
adc
loope
pop
int3
aaa
sbb
pop
scas
fnstcw
sub
adc
and
adcl
and
arpl
lcall
cmp
sub
jecxz
js
inc
adc
in
insl
leave
jg
mov
add
and
push
add
movsb
add
jl
adc
je
leave
sub
outsb
ffreep
mov
mov
lret
jmp
xchg
mov
jge
lds
adc
xor
lcall
lods
stos
lret
rcr
push
addr16
scas
nop
add
push
out
cli
pause
xchg
mov
lea
mov
int
std
out
cli
or
push
lret
js
das
adc
sub
das
add
sahf
pop
sbb
push
jno
adc
sub
mov
aad
and
xor
cmp
sbb
xlat
adc
loopne
call
in
stc
push
mov
fs
adc
lret
cmpsb
mov
dec
mov
divb
insb
adc
pop
loop
stos
mov
jbe
jne
pop
call
mov
loop
xlat
xchg
push
call
lahf
lret
xchg
jp
or
lods
insb
push
push
cmpsb
pushf
and
pop
scas
outsb
push
xchg
icebp
popf
nop
rorl
scas
fdivl
leave
out
jbe
adc
xor
dec
loop
pop
mov
xor
dec
inc
filds
dec
mov
ss
sbb
mov
pop
inc
xorl
cmp
in
cs
cmp
xchg
dec
mov
cmp
sbb
and
cltd
pop
and
repnz
and
out
xchg
cmpsb
test
in
cltd
cmpsl
xchg
xor
ljmp
xchg
into
or
imul
loope
movsl
push
mov
imull
std
jo
imul
pop
fildll
mov
int3
sub
in
es
xchg
inc
add
test
pop
jg
out
call
testl
test
dec
call
fldl
aas
push
mov
cmpsl
outsl
into
lods
stos
gs
sbb
mov
and
test
out
mov
iret
or
or
inc
call
mov
cltd
mov
and
sub
ljmp
les
push
cmpl
fistl
mov
add
sub
mov
mov
sbb
sbb
mov
fwait
int
out
inc
pop
outsb
ret
jbe
dec
fidivrs
mov
sbb
cmp
pop
jo
mov
movsl
fisttps
push
rcrb
lret
push
stos
test
jp
add
add
rolb
decb
push
mov
and
das
mov
mov
mov
mov
pushf
xor
add
inc
mov
es
push
loope
icebp
fsubl
movsb
test
dec
ret
push
xor
xchg
outsb
sub
ss
or
cmp
adc
test
pop
jp
fldl
mov
push
jmp
or
arpl
sub
sarb
push
lahf
push
cmp
mov
mov
jp
test
and
test
sbb
out
push
icebp
addr16
and
sub
addr16
sbb
xchg
jmp
dec
mov
adc
xor
jbe
jl
loopne
fwait
outsl
push
dec
int3
sub
jl
das
cmp
rorl
daa
push
out
xor
push
jg
sbb
loope
adc
sub
aaa
or
cmp
xlat
jle
or
xchg
out
sub
cmp
jne
pop
cmp
es
out
cld
jb
stos
imul
arpl
imul
dec
jl
cmc
adc
cs
and
out
and
shrl
sahf
enter
push
in
mov
insl
sbb
cmp
ljmp
inc
xor
jo
dec
dec
pop
jmp
push
int3
and
shll
mov
pop
movsb
daa
in
hlt
repz
out
cmp
imul
jl
fildll
add
lret
jnp
and
mov
sbbl
jb
vpcmpeqw
xchg
aas
mov
push
xchg
inc
push
daa
sbb
fistpl
push
sarb
fistpll
aas
ss
fs
inc
ffreep
aaa
fstpt
insl
jle
adc
movsl
add
xor
xor
mov
xchg
pop
repz
jb
dec
lret
lret
sub
cmpsl
shll
ss
call
sub
inc
mov
mov
jle
repnz
stos
test
gs
subb
jge
ss
test
ljmp
mov
sbb
dec
sub
loopne
inc
adc
sub
xchg
insb
pop
ja
jge
ret
mov
dec
or
push
gs
jp
pop
gs
jnp
repnz
xchg
rcrb
test
dec
jns
mov
mov
adc
das
cmp
sub
cmp
push
adc
pusha
test
dec
sub
int
sbb
mov
mov
inc
lds
loopne
cmp
sbb
pop
ss
add
push
sbb
adc
cmp
jecxz
dec
lcall
rorl
mov
imul
dec
sub
adc
lds
rcrl
inc
xchg
inc
cmp
aaa
dec
sbb
sub
idivb
lcall
mov
xchg
aas
stos
mov
or
stos
pop
iret
lret
nop
je
aaa
adc
scas
mov
mov
pop
repz
add
and
ret
adcl
loope
js
lret
insl
iret
adc
sub
xchg
mov
xor
test
adc
jne
lret
test
int
push
lock
inc
dec
lcall
aaa
mov
push
sarb
js
insb
jle
sub
adc
repnz
inc
data16
and
xrstors
mov
or
loope
addr16
mov
xor
setb
mov
mov
mov
hlt
sahf
ljmp
sub
int
jnp
cmpsl
jbe
inc
sbb
adc
push
aad
test
sub
mov
jne
mov
mov
gs
jge
int3
adc
push
loope
hlt
dec
dec
je
hlt
out
lock
insb
fsubr
dec
mov
mov
sbb
xor
lods
xor
pop
cmp
add
push
xor
and
clc
fcoms
mov
jmp
and
jbe
imul
inc
scas
push
cmp
xchg
inc
mov
shlb
add
rolb
dec
xchg
xor
insb
fildl
mov
or
mov
xchg
mov
fbld
add
dec
and
cs
xchg
pop
aam
shrb
imul
je
loop
lock
pop
pop
outsl
mov
sarb
stc
cmp
xchg
hlt
push
xor
push
in
jg
and
mov
int3
jns
jae
addr16
mov
lods
ret
lret
ja
sub
icebp
cmpsl
sahf
xchg
or
out
push
imul
enter
push
jnp
bound
out
mov
dec
pusha
jp
xlat
add
xchg
xchg
and
arpl
pop
pop
bound
lods
mov
cmp
hlt
out
adc
ljmp
xchg
mov
clc
mov
jg
int
clc
arpl
mov
sub
pop
mov
adc
add
cmp
cmpl
mov
pop
in
xchg
enter
mov
out
sbb
rol
mov
sarb
das
fnstenv
lods
mov
cmp
sub
daa
jp
stos
addl
sub
daa
and
ja
in
sub
ja
push
inc
pop
aad
push
mov
fldcw
cmc
push
repz
mov
adcl
push
addl
sub
and
adc
sarb
or
cs
adc
mov
jbe
add
mov
out
pop
lcall
imul
jl
cmc
add
ds
insb
jnp
repnz
das
add
sbbb
xor
pop
pushf
jb
gs
dec
icebp
das
and
outsl
mov
push
pop
in
mov
mov
sti
xor
fdivr
mov
push
stos
daa
mov
xchg
mov
xor
insl
imul
and
movsb
sbb
insl
shlb
pusha
jmp
xlat
test
fsubrs
imul
adc
fmuls
jne
fisttpll
cli
cmovl
mov
jg
sbb
pop
dec
clc
std
call
sarb
out
jae
rorl
adc
rcl
lcall
js
jle
lock
cmp
aam
push
inc
sub
out
repz
mov
and
jp
imul
cltd
test
mov
xchg
xchg
insl
aam
jae
pop
hlt
lea
fnstsw
sbb
cmp
mov
in
test
dec
decl
or
pop
fcoms
jg
cli
sub
push
jno
add
enter
test
dec
and
decb
fcmovbe
loop
add
push
aas
fwait
push
pop
jle
lock
dec
or
sbb
mov
test
stc
push
inc
fildl
repz
and
or
inc
lods
repz
lock
pop
clc
lods
stos
xlat
sti
imul
test
mov
incl
xchg
hlt
ja
add
gs
int3
sub
int3
cmpsl
adc
ret
and
push
sbb
xchg
jo
scas
loopne
sub
cs
incl
leave
jge
aad
or
pop
pop
and
mov
pop
sti
dec
dec
daa
sbb
pop
and
repz
dec
pop
lcall
aad
push
cmpsl
std
imul
jg
mov
pop
sub
add
shll
sbb
bnd
movsl
push
cld
imul
in
imul
push
and
insl
mov
mov
xchg
addl
cli
mov
xchg
test
cwtl
mov
out
xchg
sub
divl
dec
mov
lret
icebp
nop
negb
ret
cmp
pop
insl
cmc
stc
jns
addl
push
call
scas
push
sahf
push
test
jbe
pop
cmp
rcr
push
mov
mov
add
lea
push
call
mov
ret
adc
jge
mov
movb
cmc
sub
xchg
mov
divl
xchg
jmp
lea
and
mov
or
imul
lret
pop
push
dec
jae
call
adc
shlb
arpl
lods
or
or
pushf
mov
jp
mov
mov
scas
ja
cmp
and
gs
jecxz
or
mov
ja
popa
push
xchg
jno
sub
add
add
xchg
mov
and
mov
mov
rcrb
adc
add
mov
xchg
mov
outsb
int
repz
pop
inc
pop
add
xchg
movsl
mov
mov
add
or
mov
scas
in
pusha
andl
add
or
arpl
mov
inc
in
pop
jmp
pop
pop
mov
sbb
nop
or
mov
adc
ffree
repz
push
stos
imul
lds
jae
lret
hlt
iret
cld
sbb
mov
add
xor
test
mov
mov
outsb
or
push
sub
stos
jmp
les
outsb
jb
test
scas
mov
inc
sub
loopne
and
mov
shll
sbb
adc
jge
xchg
fisubl
repnz
cli
clc
push
movzwl
test
aas
dec
sbb
jl
jge
or
xor
hlt
movsl
aaa
pop
sub
sub
ljmp
cmpsl
notl
mov
jp
fstpl
das
out
arpl
adc
hlt
inc
mov
inc
fldenv
jno
sarl
andw
inc
push
cmc
sbb
fdivr
push
jae
jae
xchg
mov
push
mov
jae
xor
cmp
jne
push
inc
sub
pop
sub
mov
aaa
and
and
cmp
xchg
xlat
cmp
pop
jns
mov
out
mov
push
shl
mov
add
sbb
dec
out
pop
push
stc
js
aad
fcmovnb
mov
xchg
mov
mov
scas
xchg
jge
and
and
ficoms
jle
or
test
xor
jbe
cmp
xor
into
rorl
adc
xlat
pop
lahf
addr16
lods
int3
rorl
sbb
lcall
xor
sub
xchg
dec
outsb
ret
cmp
ret
xchg
dec
or
cmp
rcrb
jb
push
pop
shlb
inc
push
std
ret
sbb
xchg
je
jns
xchg
adc
xor
inc
ds
inc
sar
fs
and
inc
out
mov
and
sbbl
ret
push
movsb
gs
jno
pop
repz
adc
mov
push
ds
add
lret
orb
test
sahf
xchg
loope
mov
or
lods
pusha
ror
dec
mov
add
lock
loop
xor
mov
lods
or
mov
adc
cmp
lret
bound
out
push
and
leave
fsubl
jecxz
test
jno
jge
imul
push
add
sahf
into
popf
mov
mov
xor
add
inc
xor
xchg
inc
fs
add
inc
push
mov
cwtl
fcoms
lds
movsl
subl
jb
aam
jecxz
mov
stc
popf
mov
xlat
xchg
jns
nop
ret
into
fcoms
cmp
pop
icebp
jmp
push
push
dec
inc
mov
mov
daa
and
push
aas
rolb
cmp
jb
mov
lea
mov
and
sbb
dec
mov
arpl
inc
or
xchg
fstpl
pop
scas
testb
aas
push
test
jbe
pop
insb
jle
rcll
aas
xor
xchg
lret
xchg
sbb
sbb
lret
xlat
adc
xor
test
call
mov
popa
pusha
movsl
dec
imulb
pop
ret
adc
cs
mov
mov
sbb
adc
outsl
fcmove
add
pop
aam
cmp
cld
inc
push
inc
add
cmp
mov
jae
pop
sub
adc
xchg
dec
repz
push
and
mov
sbb
lods
imulb
xchg
je
xchg
mov
rcrb
je
jle
into
fmuls
fnstsw
inc
outsw
pop
nop
adc
test
decb
aam
mov
or
sbb
lock
test
inc
push
ficompl
mov
adc
cmpb
adc
sbb
test
out
out
ds
mov
shr
mov
mov
scas
notl
in
lret
aam
divl
cli
xchg
mov
in
xor
pop
or
jnp
jns
xchg
add
std
test
jmp
cld
xor
fucomi
or
arpl
ja
popf
push
add
repnz
popf
je
push
aas
add
mov
or
and
dec
lods
enter
push
pusha
pop
pop
inc
mov
cmp
dec
outsl
pop
bnd
addl
stos
add
daa
sbb
pusha
leave
jle
ljmp
pushf
xor
aam
pop
add
decl
out
addr16
push
jp
popf
push
cltd
push
leave
mov
cmp
mov
lods
mov
stc
dec
and
pop
jecxz
pop
sbb
push
shrb
call
xor
cmpsl
ljmp
jne
iret
popf
xchg
and
and
sbb
mov
popa
orb
pop
testb
xchg
shr
mov
sub
in
xorb
pop
out
mov
jle
mov
mov
ja
add
loope
mov
outsb
insl
cmpsl
mov
pop
adc
mov
mov
sbbl
aad
ret
mov
mov
test
stos
dec
stos
sub
jae
pop
or
dec
pushf
fstpt
stos
and
adc
in
xchg
mov
out
out
fisubs
mov
cld
fstps
stc
fs
dec
stos
add
mov
xor
in
lcall
sub
mov
pop
mov
xor
mov
adc
xor
ljmp
out
sub
mov
jnp
iret
add
push
in
je
orb
push
mov
lods
daa
fs
in
movsl
jp
popf
out
push
lock
jl
clc
and
dec
bnd
testb
rcr
sti
sbb
inc
out
push
mov
into
in
int3
add
out
push
lock
ss
sub
int
fimuls
scas
lcall
sbb
add
icebp
adc
or
int3
xchg
lret
inc
rcl
leave
in
push
xchg
adc
in
dec
outsl
inc
and
movsl
lds
fidivrl
subb
jne
xchg
pop
aad
xor
cmp
cmp
incb
movsl
in
test
or
rep
movl
jbe
leave
xchg
push
pop
hlt
inc
cmc
lds
andl
jno
push
fisubs
dec
fnstcw
fs
adc
test
mov
add
mov
cltd
jns
push
flds
or
pop
adc
lds
imul
add
xor
mov
mov
fnstcw
push
pop
pop
add
xchg
sub
add
cmp
and
sbb
out
or
push
adc
mov
mov
scas
outsb
test
cmc
mov
pop
pop
and
jge
mov
sub
cmpsb
int
ret
scas
sub
adc
pusha
orl
xor
out
xchg
int
sti
imul
inc
lcall
inc
add
loope
aas
inc
mov
sbb
out
fsub
popf
sub
pop
pusha
and
ret
mov
add
xor
xchg
or
mov
and
jecxz
loop
fistpll
rclb
in
fwait
jae
xchg
and
cmp
sbb
scas
xor
push
jp
or
jge
push
lret
pop
inc
and
dec
lcall
push
sub
jno
add
cmp
gs
mov
xchg
popa
inc
and
or
int
pop
jl
pushl
sub
and
cmc
cmpsl
shrl
fs
ret
pusha
loope
jae,pt
je
ljmp
mov
pop
std
decl
add
jecxz
arpl
push
xor
lahf
sub
shrb
xor
stos
lcall
mov
lret
lods
push
lds
lds
xchg
and
sbb
xor
jbe
and
xchg
mov
mov
test
push
sbb
test
mov
cmp
fwait
rcl
rorb
movsl
pop
fnstenv
push
in
or
inc
and
repnz
movsb
fimuls
xlat
push
in
jg
lret
sbb
sub
mov
push
das
ficomps
iret
jb
mov
cli
stos
jae
int3
insb
add
cld
ds
cwtl
push
jnp
mov
inc
rclb
inc
sub
cld
sbb
xor
lcall
push
cmp
dec
push
mov
jle
aam
inc
out
and
mov
clc
push
in
lds
test
jge
and
shrb
push
js
repz
sub
bound
lods
pop
lods
add
sti
lret
cmp
mov
iret
or
inc
int3
lcall
adc
pop
or
insb
movb
les
es
arpl
ljmp
pop
mov
add
lods
push
inc
pusha
clc
rcrb
sbb
icebp
in
sub
test
sbb
scas
add
icebp
mov
int
sbb
jae
scas
sbb
insl
jmp
hlt
loopne
fs
int
pop
data16
xor
or
mov
aam
sbb
sub
xchg
mov
clc
aaa
cld
add
push
shll
imul
xor
jecxz
xchg
enter
cmpsl
add
js
cmp
rorb
adc
push
loop
stos
sub
mov
lds
push
flds
lds
sbb
xchg
push
jle
mov
add
fcomps
mov
add
sub
add
mov
fstl
sub
add
pop
pop
out
dec
daa
jmp
mov
pop
imul
cld
aam
lcall
notl
popf
rolb
mov
ret
pop
sub
cwtl
push
xchg
cmp
inc
push
pop
ljmp
pop
in
enter
pushl
xor
loope
aaa
or
stc
out
and
jo
mov
fidivl
test
push
xchg
lcall
push
fbld
mov
mov
jb
and
outsl
ja
orl
xchg
sahf
xchg
lea
xchg
movsb
sub
test
aam
add
mov
xchg
pushf
out
scas
sar
out
xchg
xor
push
mov
xchg
mov
dec
filds
sahf
push
xchg
cmp
or
cmp
mov
pop
fidivl
pop
lods
testb
les
sub
sbb
pushf
push
scas
in
rcl
out
jge
inc
es
lock
sbb
idivb
nop
clc
adc
aaa
es
xchg
push
out
out
cwtl
and
or
rcrb
mov
xchg
sbb
stos
out
ja
mov
dec
cmp
fidivrl
movsl
sub
push
mov
or
arpl
mov
push
push
mov
mov
clc
mov
stos
subb
outsl
xor
or
fcmove
cs
inc
ja
popf
mov
adc
sbbl
clc
loope
inc
shll
jo
pop
movsl
cltd
in
aam
stc
jl
in
bnd
call
sbb
out
mov
stos
rcl
mov
dec
icebp
loope
add
cs
leave
or
mov
lds
jne
xlat
sbb
xchg
push
mov
daa
test
into
in
out
je
in
mov
mov
push
imul
mov
imul
cmpsl
dec
add
mov
xor
inc
push
call
fstps
push
add
les
lret
mov
lea
movsb
pop
sarb
jle
rcl
inc
cltd
loope
jae
nop
leave
xchg
andl
mov
pop
test
into
mov
xchg
popf
ret
adc
sti
xchg
mov
cmp
ja
repnz
xchg
adcl
repnz
inc
mov
push
js
cmpsb
mov
adc
mov
sbb
popf
push
inc
shll
xchg
roll
mov
in
aas
add
pop
lret
inc
jmp
dec
mov
push
mov
mov
and
push
in
sub
jno
movsb
xlat
or
enter
dec
in
sahf
jmp
movsl
mov
bound
adc
lds
aad
push
push
pop
movsb
jne
rcrl
dec
popa
add
cmp
jecxz
test
testb
mov
jb
inc
jae,pn
jb
sbb
xor
bound
notl
scas
add
subl
incl
aaa
push
jb
jmp
pop
dec
loop
cltd
mov
mov
inc
adc
xchg
jp
xchg
cmpsl
push
gs
add
jl
in
push
cmp
jnp
push
hlt
dec
clc
int3
xor
mov
xchg
or
pop
andb
push
fdivr
dec
jbe
and
push
mov
mov
stos
popa
imul
dec
enter
push
inc
es
sub
in
pop
fidivs
jbe
adc
or
inc
xor
dec
fs
sub
sbb
and
inc
popf
mov
dec
push
test
lahf
adc
fldlg2
dec
icebp
fcom
repnz
mov
dec
xchg
outsl
xor
cmp
xchg
and
inc
imul
sbb
or
into
pop
push
jp
adc
frstor
pop
fwait
sti
dec
sub
cmp
leave
jb
fwait
call
enter
pop
lock
xor
inc
and
mov
je
nop
jp
adc
insl
arpl
or
subl
xchg
icebp
push
loopne
jb
out
mov
cld
stc
sub
push
addl
cwtl
iret
push
shll
iret
xchg
xchg
or
es
ds
push
jg
lcall
nop
xchg
cld
ret
mov
pop
mov
jl
mov
jmp
pushf
das
icebp
mov
jo
jne
mov
sub
fdivs
stos
pop
mov
daa
pop
and
cmpsb
cltd
aad
xchg
lock
ret
dec
rorb
cli
sub
sahf
and
das
insl
outsb
jmp
add
dec
int
aam
nop
jb
jmp
inc
pop
out
mov
aaa
jge
lock
test
fstl
sbb
inc
pop
psrlq
les
mov
lahf
les
cwtl
or
out
lods
mov
stos
cmp
pop
cwtl
mov
sub
mov
and
and
aam
mov
outsl
pop
scas
push
fistpll
fstpl
lods
dec
sahf
xor
sub
xor
cmp
es
inc
pop
aam
outsl
pop
dec
mov
mov
lret
pop
int
popw
mov
push
imul
fsubs
nop
xchg
ret
imul
push
dec
mov
nop
lods
inc
push
jae
jmp
push
adc
lret
adcb
jnp
data16
or
jecxz
jae
mov
xchg
xchg
inc
imul
sub
ret
mov
cmp
sar
cmp
adc
fadds
aas
pop
fsubp
and
pop
enter
xchg
or
ret
adc
int3
sbb
cmp
lds
xor
ss
orl
lcall
lock
push
insl
ret
es
sbb
sbb
es
pop
fidivrs
scas
loop
xchg
push
sbb
cmp
cld
daa
push
mov
sbb
cwtl
mov
mov
das
insb
call
inc
ja
pushfw
cmc
mov
mov
xchg
fildll
cmp
aas
cltd
pop
jl
call
pop
daa
dec
jg
out
pushf
outsl
dec
xchg
incl
add
push
add
xchg
xor
loop
sub
in
xchg
in
mov
mov
stos
mov
mov
pop
inc
sbb
out
movsb
push
aad
adc
mov
cmpsb
push
call
popa
outsl
xor
int3
icebp
int3
jb
stos
bound
xchg
dec
ja
xor
ss
and
add
inc
cltd
fmull
xchg
xchg
xchg
xor
das
rcll
loop
icebp
lahf
insb
pop
insb
or
xor
mov
mov
jns
out
les
mov
dec
adc
sbb
mov
adc
cli
or
or
sub
pop
jp
jno
push
sarl
aam
lea
ret
insb
je
icebp
shlb
pop
push
sub
xor
sahf
adc
xchg
das
push
ret
mov
stos
les
mov
cmpsl
push
mov
xor
xchg
inc
les
pop
cmp
sahf
aaa
int
insb
mov
adc
in
pop
dec
xor
inc
mov
out
int3
jge
jmp
dec
repnz
stos
inc
sub
lcall
icebp
in
dec
out
fists
sbb
je
clc
fwait
cmp
cmp
mov
icebp
push
aam
mov
xchg
popa
cmc
sahf
push
test
into
mov
xor
pop
sbb
xor
adc
mov
add
data16
mov
xchg
push
jge
xchg
test
mov
adc
test
idivb
dec
fistpll
jecxz
pop
roll
in
lret
jno
and
add
add
add
push
mov
sbb
fldcw
mov
sbbb
loope
subl
fldenv
or
fsubrs
test
cld
jmp
mov
std
frstor
xchg
mov
sarb
lret
jbe
push
in
sub
lret
pop
jle
int
pop
lds
out
call
andl
inc
xchg
mov
pushf
jecxz
fbstp
dec
push
fmull
out
adc
lock
inc
add
ss
jne
in
test
inc
sbb
fsubrp
lcall
jecxz
jb
mov
mov
dec
mov
popf
addl
lods
dec
xor
pop
ja
icebp
lret
sub
mov
dec
inc
dec
dec
pusha
clc
shl
insb
xchg
mov
mov
call
insb
shlb
std
ja
stos
movsl
pop
cmp
and
add
into
mov
and
xor
loop
lods
gs
pusha
rorl
xor
fcompl
mov
cld
mov
rolb
movsl
sbb
cmp
out
mov
sub
jg
push
pop
push
dec
or
outsb
sub
jp
imul
ja
push
dec
scas
test
or
popf
nop
repz
cmpb
pushf
lds
push
push
dec
dec
pop
jle,pn
fcoms
lds
insb
adcb
sbbl
jg
inc
mov
sub
addr16
imul
xchg
mov
mov
loop
mov
or
test
push
outsb
cmp
mov
inc
mov
ret
int3
movsb
mov
in
push
pop
flds
scas
and
cmp
popl
sar
arpl
jge
dec
mov
gs
xchg
cmp
mov
inc
jno
xchg
test
xlat
jmp
jle
jnp
push
fwait
rclb
popa
fdivp
sub
test
bnd
inc
pop
cmp
push
push
fdivrl
fstpt
add
aad
dec
sbb
es
fs
inc
iret
push
fadds
sbb
roll
into
sub
adc
xor
adc
and
imul
dec
dec
ds
mov
mov
aad
xrelease
adcl
cwtl
stos
int
dec
mov
jbe
bound
add
lret
cli
xchg
cmp
in
loop
xchg
mov
loope
pop
adc
sbb
arpl
repnz
fadds
pop
ss
adc
push
movsb
xchg
sub
mov
lock
sti
mov
outsl
pop
mov
test
and
push
or
and
xor
ret
dec
fstps
fwait
mov
shlb
jbe
xor
xchg
test
inc
popf
je
mov
daa
cwtl
mov
stos
xchg
jge
scas
mov
push
ds
sbb
lods
cs
hlt
dec
add
and
push
inc
or
stos
loop
jmp
lahf
inc
ljmp
arpl
loop
imul
push
lock
les
shrb
mov
lock
mov
pop
or
int3
aad
and
test
in
aas
sub
adc
test
dec
push
sbbb
test
sbb
loope
cltd
subl
xor
jae
and
and
cltd
jg
pop
sub
pop
movsl
outsl
int3
sahf
inc
mov
arpl
insb
in
in
scas
jno
xor
sbb
fdivrs
push
jmp
mov
add
addr16
lret
jns
cmp
jne
push
mov
jnp
int3
xor
popl
mov
pop
pop
insl
add
pop
push
push
das
jb
jl
mov
mov
iret
pop
les
or
es
outsb
mov
aad
or
xchg
test
sbb
xor
roll
mov
and
mov
loop
dec
or
pop
enter
movsl
jl
xchg
add
loope
int3
xchg
out
add
push
mov
leave
ljmp
test
mov
xchg
jle
icebp
inc
stos
sub
push
js
pop
xchg
cli
in
aad
mov
aam
lahf
lea
call
jbe
clc
mov
pop
jp
in
push
out
pop
and
cs
fisubs
aad
push
mov
mov
mov
jl
pop
scas
outsl
sub
addb
jmp
cmpsl
adcb
out
sbb
aaa
pop
lds
sbb
roll
sub
std
mov
mov
jl
mov
mov
clc
xchg
xchg
lcall
sbb
cmovns
lea
ljmp
rclb
sub
mov
pop
cmp
inc
push
stc
mov
shrb
cmpsl
xchg
xchg
aas
push
loope
lods
daa
fisubl
push
pop
jb
popa
sub
adc
je
fisubrl
jle
dec
add
push
jecxz
fimuls
fbstp
fwait
dec
popa
fisttps
fimuls
fldenv
scas
addr16
shlb
mov
subl
fcomp
cmpsb
mov
inc
or
int3
add
mulb
cmp
imul
push
sub
jecxz
mov
cld
jmp
pop
bound
scas
adc
push
cmpsl
lds
leave
ss
rcrl
insb
movsl
outsl
jne
jns
push
adc
pop
pop
test
cmp
cld
mov
mov
nop
das
push
imul
cmc
testb
push
pop
das
movsl
adc
movsb
mov
popa
jmp
jg
es
pusha
push
icebp
sbb
xor
mov
dec
mov
mov
inc
or
ja
cmp
xchg
or
fcoms
std
test
outsl
sbb
mov
scas
mov
orl
jae
sbb
pop
xchg
sarb
inc
pop
popa
mov
push
int3
cmp
data16
ljmp
insl
fistpl
lods
or
and
jo
mov
mov
dec
jb
jecxz
mov
ret
mov
hlt
sbb
nop
xchg
jo
push
add
cmc
fistl
jb
push
add
cmp
iret
inc
push
stos
ja
sub
outsl
push
lcall
fsubl
fnstenv
mov
stc
cmp
fldcw
pop
xor
push
fistps
mov
aad
ror
pop
push
xor
pop
shlb
dec
sarb
inc
add
or
clc
add
cmp
test
std
fsts
cwtl
stos
pop
mov
jecxz
mov
jo
adc
xchg
mov
pop
bound
push
xchg
cmpsb
stos
nop
rcrl
mov
js
sbb
push
ret
fdivs
xor
mov
inc
addr16
add
and
mov
and
loop
dec
xchg
into
ret
rolb
push
je
aad
mov
xchg
mov
xor
fidivrl
jg
in
outsl
aaa
xor
sbb
sbb
mov
sub
imul
mov
out
push
and
push
test
cmpsb
notl
sbb
stos
call
addr16
xlat
cwtl
fisubl
push
pushf
lcall
hlt
pop
arpl
pop
fcoml
ficoms
cmp
mov
aas
shlb
xchg
cmp
lret
inc
add
jmp
imulb
cltd
aas
or
rolb
push
jecxz
les
add
and
insb
adc
push
add
jg
xchg
pop
aad
sub
sahf
inc
scas
aam
popa
jmp
hlt
sarb
fdivrp
xchg
mov
xor
sbb
sub
icebp
or
jnp
pop
xchg
push
cmp
pop
popf
and
cmp
test
xchg
mov
push
insb
sbb
pop
iret
cmp
data16
push
inc
lea
enter
rcrl
adc
jmp
and
dec
and
ds
cli
test
pop
cmpsb
aaa
stos
sbb
mov
aas
xchg
dec
jecxz
cmpsl
dec
out
ja
fsts
mov
jle
jae
mov
xorl
push
mov
mov
and
enter
push
mov
push
repz
push
mov
dec
subb
aas
rcl
int
mov
outsl
pusha
jbe
jmp
xor
ficomps
cmp
ss
jnp
mov
hlt
rcrb
shl
push
xchg
cmc
sahf
add
pop
ss
cmp
push
out
mov
mov
loope
xchg
aaa
lods
pop
mov
adcb
jb
enter
mov
mov
das
push
nop
movsb
test
adc
std
scas
and
mov
xor
mov
add
pop
out
mov
pop
mov
nop
sbb
sub
pop
inc
xchg
stc
pop
jbe
hlt
or
int3
rclb
fbstp
adc
push
gs
imul
dec
fnsave
scas
dec
rol
jb
out
je
sbb
xor
adc
mov
xor
in
out
push
in
cmp
gs
pusha
push
cmp
inc
loop
lds
sti
in
fidivrl
mov
aaa
fldcw
aam
pusha
jbe
test
xchg
popa
addb
add
or
cmp
add
add
mov
and
push
jmp
pop
add
dec
cmpsb
xchg
cmp
pcmpeqb
mov
cmp
das
test
jo
jl
repz
daa
pop
mov
lahf
mov
div
dec
sbb
dec
sbb
push
fs
lea
lret
pop
inc
fwait
pop
outsl
mov
aam
addb
gs
iret
imul
ja
mov
fcoml
cmc
dec
nop
xchg
sub
test
cmp
xchg
lods
jo
sub
or
clc
leave
sbb
or
in
dec
sbb
add
das
mov
in
imul
mov
mov
outsl
out
jns
and
ret
hlt
cld
test
and
mov
js
int3
sbb
or
and
mov
jno
ret
repnz
mov
orl
pop
inc
add
push
jo
mov
repnz
and
int3
add
popf
inc
xchg
repz
mov
lds
sahf
je
jbe
popf
sbb
lcall
mov
cmp
clc
adc
xor
cmpsb
cltd
ja
and
mov
ret
cmpsb
and
scas
inc
fadd
push
add
test
cltd
xor
pop
bound
dec
imul
addl
cs
sbb
sahf
scas
fldt
ret
stos
cmpsb
inc
cmpsl
mov
imulb
push
inc
or
shll
out
and
cmpb
lods
sub
xchg
ds
lret
popf
cmp
inc
adc
imul
stc
cmp
notl
add
cmpsb
jo
and
imul
or
push
stos
sbb
add
stc
out
pusha
aas
in
xchg
jp
icebp
push
cmpsb
icebp
icebp
bound
inc
push
push
lret
movsl
rcl
lea
insb
sbb
pop
jp
outsl
mov
xchg
mov
fcomps
in
cmp
andl
scas
dec
mov
and
iret
in
jno
and
cli
ret
jg
pushf
scas
rolb
popa
mov
roll
fwait
repnz
imul
sub
inc
das
or
sbb
jno
out
ja
and
and
repnz
test
mov
cli
aad
xor
testl
lods
pop
popa
repz
lahf
insl
inc
and
or
rcll
add
movups
mov
xor
outsl
mov
xorb
mov
je
js
xor
cmpsb
xor
push
cmp
arpl
nop
add
sub
xchg
pop
scas
sub
fcompl
cmp
inc
shl
ljmp
lods
int3
jge
ss
mov
add
jge
mov
dec
mov
neg
push
orb
mov
pop
jg
lea
call
data16
cs
iret
je
loopne
imul
jmp
call
or
aas
xchg
adc
aaa
cmp
ret
pushf
mov
clc
adc
es
or
sarl
sbb
jmp
and
aaa
jmp
adc
shlb
ret
sub
js
test
fidivs
xor
pop
icebp
ret
pop
xchg
cmp
push
add
cmpsb
nop
jp
mov
shl
cmc
inc
sbb
xor
clc
jmp
add
in
mov
sbb
add
das
fstps
leave
mov
push
cmp
add
pop
or
sub
pop
mov
stos
jg
rclb
jne
mov
cli
xchg
outsb
stos
inc
xchg
jo
adc
lods
xchg
adc
ficomps
push
pop
jmp
xchg
push
repnz
or
in
push
sahf
add
dec
mov
add
or
sub
jp
rorl
add
out
or
sbb
repnz
aaa
pop
repz
mov
stos
jp
mov
xor
lea
insb
pop
mov
jbe
nop
loope
jne
arpl
add
mov
cmp
jp
pop
mov
in
xchg
mov
out
arpl
test
cwtl
dec
push
fmulp
xor
mov
imul
ret
pop
mov
into
xchg
jno
scas
mov
lea
inc
scas
jae
mov
pop
jo
incl
xorl
lds
pop
insb
jb
push
aas
das
aam
rorb
je
mov
push
js
mov
xchg
cmp
mov
mov
addl
jb
test
adc
mov
jne
pop
mov
popa
xchg
stc
pop
mov
adc
xor
jp
popa
test
aaa
scas
popf
jo
cltd
cmpsb
aam
jns
int
aam
nop
jge
jb
or
insb
sub
mov
imul
stc
lods
jp
filds
cmpsb
movsb
xor
push
push
add
xchg
or
dec
mov
sbb
push
jg
dec
push
ret
sub
das
mov
inc
sbb
rep
sbb
popf
inc
in
jp
sbb
mov
xor
gs
imul
pop
mov
sbb
sbbb
aaa
incl
mov
popa
xor
jo
pop
jmp
xchg
lock
aas
aam
gs
mov
sub
das
mov
jl
or
nop
pop
push
inc
stc
mov
push
jo
stos
and
stos
or
call
aad
xchg
movb
jbe,pt
xchg
adc
xchg
test
cmp
mov
sub
sub
xchg
fcoms
repz
dec
repnz
or
add
fs
mov
imul
ds
es
test
mov
cmpsl
mov
cmp
fwait
sbb
inc
adc
add
xlat
repnz
mov
inc
aam
push
inc
cli
jmp
sub
cli
mov
jecxz
cld
mov
cmp
outsl
lock
shll
push
sti
and
push
or
push
xor
movl
sbb
ds
stos
or
cld
jl
faddp
mov
mov
jmp
fwait
iret
cwtl
inc
test
das
inc
and
xchg
in
cli
out
xor
xchg
les
xor
es
std
cmc
jns
jb
int
push
jmp
jmp
inc
test
cs
xor
mov
push
movsb
mov
mov
sub
pusha
shll
dec
cmpsw
lds
loopne
ds
pusha
jnp
xchg
fildl
frstor
push
mov
jmp
xor
xchg
loope
ds
adc
daa
rcpps
inc
sbb
test
jge
mov
ret
test
rcll
sub
xor
adc
pushf
sbb
or
in
add
cmpsb
xchg
dec
add
pop
jmp
jmp
aas
mov
or
sub
ja
fdivrp
mov
pusha
mov
inc
gs
mov
jg
out
and
imul
ljmp
mov
mov
incb
aad
stos
in
mov
push
pop
mov
adc
ss
addr16
and
popa
les
loop
mov
je
fs
jl
insb
addl
adc
lret
xchg
leave
test
mov
adc
pop
sub
test
sbb
push
inc
scas
frstor
push
jecxz
xor
stc
rolb
flds
push
or
jns
insl
aas
push
xchg
insb
in
lock
lcall
xor
push
mov
dec
pop
test
lods
dec
mov
popf
cmp
stc
repnz
mov
sbb
sub
js
adc
pop
ss
orb
stos
imul
cmp
fwait
add
ljmp
cmpsl
into
add
push
cmp
repz
popf
in
xchg
xchg
and
fcomps
mov
testl
push
push
push
mov
jg
jno
sub
ret
fwait
dec
mov
scas
pop
jmp
scas
push
add
add
out
mov
pushf
loope
mov
ret
neg
arpl
jle
bound
sub
mov
inc
mov
jmp
ss
push
insb
xchg
outsl
push
cwtl
subb
mov
or
jle
sub
enter
leave
or
lahf
dec
lods
jae
data16
fldt
negb
adc
and
xchg
and
lcall
xchg
xorl
or
inc
icebp
mov
jecxz
xchg
adc
mov
sbb
in
adc
jnp
ret
mov
pop
loopne
fiaddl
or
test
xchg
mull
int
sub
pop
sub
test
sahf
fmull
cmp
out
aas
mov
and
dec
xchg
out
fs
xchg
sub
in
lds
loope
stc
orl
jp
adc
mov
push
rcl
popf
test
lock
lcall
inc
insb
out
mov
push
out
dec
stos
dec
cmpsl
dec
fstps
bound
ret
mov
sahf
jmp
imul
das
add
add
jnp
ljmp
loopne
jnp
inc
mov
in
inc
lock
or
test
cmc
jb
jg
fstpl
inc
xchg
rclb
insl
pop
xorl
outsb
and
pop
jge
xlat
shl
daa
xchg
adc
pop
inc
js
test
pop
cltd
testl
xor
sub
lds
fcomi
sub
sbb
add
or
and
jmp
ficomps
jl
xchg
cmp
das
into
in
enter
test
mov
repnz
mov
fs
sub
or
xchg
mov
subb
xchg
push
popa
sub
and
and
cmc
rclb
or
mov
dec
sbb
loop
cli
sub
push
mov
fldl
sbb
jmp
scas
mov
jge
or
cmc
dec
xor
push
add
sbb
mov
dec
lods
insb
inc
mov
xor
sbbb
mov
or
mov
sub
sub
cmp
add
mov
fistps
cmc
pop
loop
and
sub
cltd
jl
outsb
mov
sbbb
adc
lahf
mov
loope
jmp
and
sbb
adc
in
sbb
jmp
imul
adc
fadds
sbb
cmp
dec
scas
push
js
xor
xadd
into
sub
inc
xchg
bound
das
adc
std
addb
mov
mov
push
mov
pop
xchg
out
xor
adc
leave
push
in
cmpsl
jp
inc
xor
and
sti
push
notb
xor
add
mov
adc
cmc
mov
cltd
xchg
int
inc
adc
outsl
fmuls
js
push
imul
out
rcrb
enter
icebp
jnp
pop
adc
in
jno
pop
and
or
mov
xchg
push
adc
mov
adc
mov
push
and
xchg
iret
add
imull
dec
dec
push
adc
sbb
push
hlt
popl
mov
push
aaa
inc
jg
enter
inc
mov
mov
pop
push
ljmp
data16
adc
icebp
repnz
movsb
xchg
cltd
dec
in
fsub
daa
pusha
adc
enter
loopne
arpl
xchg
rclb
pop
clc
pop
push
cmp
enter
test
mov
add
sub
mov
jb
out
pop
mov
fistpll
arpl
inc
and
jnp
dec
xchg
movsl
cli
dec
rcl
leave
and
jns
shl
lret
adc
mov
sbb
lret
mov
imul
lret
lret
lds
outsb
mov
add
jnp
push
sub
adcl
ja
inc
mov
clc
outsl
dec
ret
add
dec
rcll
dec
pop
and
bound
mov
dec
or
pop
fmuls
sbb
cwtl
sbb
push
jmp
cld
dec
or
sub
aas
pop
imul
shll
add
sub
pop
arpl
xchg
inc
mov
dec
subl
aas
jnp
and
adc
rolb
ret
lahf
xchg
push
mov
add
lds
mulps
adc
pusha
dec
xor
cmp
insb
das
pop
jno
xchg
flds
movsb
in
mov
sbb
add
shlb
mov
push
inc
sahf
out
fisubs
lea
and
jp
dec
scas
mov
jle
stos
loopne
dec
icebp
mov
inc
mov
shlb
and
cwtl
and
push
xlat
fisubrs
inc
aam
pop
inc
stos
jge
movsl
dec
mov
inc
cwtl
test
icebp
mov
push
test
fisubrl
or
rorb
pushf
inc
test
pop
adc
mov
jp
inc
subl
lret
cmp
lods
insl
mov
push
cmpsl
lahf
adc
mov
cwtl
movsl
or
cltd
in
cwtl
pop
mov
mov
jge
cmp
mov
into
ja
push
xor
aam
lock
popf
xor
mov
and
adc
imul
sub
iret
push
xchg
rorl
jecxz
andb
mov
data16
add
pushf
pop
imul
add
loope
pop
adc
in
sub
pop
xor
fcoms
mov
imul
mov
fsubrs
lods
lahf
jg
fldcw
es
inc
push
jg
enter
rorb
leave
push
ljmp
xchg
jns
mov
sbb
and
jno
cltd
fcoml
pop
int
dec
into
rcrl
inc
cmp
pop
cmpsb
imul
dec
pop
and
mov
mov
mov
dec
mov
les
push
jecxz
in
mov
and
jns
popf
mov
test
pop
outsb
sbb
pop
stc
mov
incb
mov
loop
sarl
dec
cmp
and
mov
cmc
cs
aaa
mov
push
xchg
dec
or
stos
xor
pop
in
push
adc
leave
mov
aaa
loope
sbb
adc
jo
std
mov
movsl
pop
and
ds
andb
mov
mov
mov
jb
lret
out
aas
imul
das
push
cmp
lahf
mov
dec
pushf
mov
vpmulhuw
mov
std
hlt
out
movsl
ja
sub
fisubrs
test
mov
ljmp
xchg
inc
jb
mov
out
xchg
xchg
data16
adc
fnstsw
add
int
imul
push
in
leave
push
mov
cs
jno
mov
js
rclb
ss
cs
daa
ret
pushf
cli
jae
cmc
mov
ljmp
mov
movsb
adc
iret
cmp
dec
sub
and
mov
pop
mov
mov
sti
push
xor
mov
pop
xor
or
cli
pop
mov
cmp
in
cmpsl
and
into
sub
dec
std
and
inc
sar
pop
in
decl
adc
subl
xor
imul
in
rorl
aam
or
pop
inc
inc
lds
add
in
js
cld
cmp
pop
scas
shll
cmpsl
insb
inc
insb
insb
and
daa
out
add
push
outsb
pop
movsl
push
adc
cmpsl
push
dec
jae
mov
or
jae
push
insb
call
les
and
cmp
lods
data16
les
push
mov
stos
cmpsl
sti
push
push
mov
cmpsb
js
xchg
je
aaa
and
leave
add
push
je
scas
fidivl
test
xlat
inc
enter
nop
mov
push
fbstp
pop
mov
xor
mov
mov
jecxz
mov
popf
mov
add
ds
cmp
fs
xor
int3
adc
test
adc
cmp
mov
sbb
repz
rclb
pusha
mov
jnp
bound
sbb
faddl
xchg
test
das
loop
in
cld
lods
iret
mov
xchg
notl
outsl
push
in
add
mov
inc
cmp
cmpsb
xlat
push
loopne
dec
and
cmp
ljmp
sbb
mov
pop
lods
jbe
mov
movzwl
sbb
mov
sarl
or
lcall
push
mov
sub
inc
call
jbe
cli
fwait
mov
cmp
imul
stos
ss
icebp
mov
stc
es
xor
mov
adc
push
call
pop
push
shlb
and
mov
jae
mov
inc
mov
sub
xor
ror
fidivrl
dec
and
popf
cld
and
les
mov
sarl
out
sub
cli
jo
and
push
sub
mov
scas
push
cmc
cmc
dec
sbb
clc
sbb
mov
jge
loop
adc
inc
inc
dec
cmp
test
mov
cli
adc
addb
jb
jecxz
push
jmp
and
les
adc
jp
xor
ds
mov
insb
test
ja
and
call
int3
jne
xchg
repnz
and
jbe
dec
jb
xor
loope
push
inc
aad
dec
pop
sub
add
push
sub
fistps
popf
mov
pop
mov
push
mov
fnop
push
cmpsb
pop
dec
in
xchg
rclb
push
push
dec
cs
das
jae
push
mov
popf
sub
js
cmp
xchg
mov
xor
jecxz
repnz
xchg
add
pop
and
ret
daa
pushf
push
addr16
mov
clc
out
enter
pop
mov
cmpsl
lret
nop
clc
leave
ljmp
xor
jmp
divb
ds
in
mov
dec
ljmp
shlb
out
cmp
lea
or
push
mov
idiv
in
mov
and
shrl
cmp
fisubl
sbbb
inc
add
add
lods
insb
sub
inc
das
movsl
cmp
outsl
sub
mov
mov
hlt
cmp
in
popa
and
mov
mov
jns
xchg
mov
cltd
mov
or
mov
fisubrs
cmc
or
imul
push
arpl
scas
in
adc
lods
xchg
bound
stos
adc
insb
jae
das
sub
push
pop
mov
fdivrl
and
lea
enter
push
or
outsb
sbb
mov
rcrl
stos
lods
dec
mov
and
imul
dec
mov
loope
pop
sbb
jbe
xlat
shll
jle
push
mov
pop
cmp
push
lds
lahf
sub
xchg
mov
into
jge
stos
aas
cmp
aam
bound
mov
out
push
adc
fwait
cwtl
ja
lds
out
ja
frstor
push
out
and
andb
sahf
or
loop
test
es
pushf
fsts
loopne
out
fists
push
cmc
enter
in
mov
push
mov
cwtl
cmp
rorl
mov
in
repnz
sbb
add
mov
roll
sbb
pop
xorb
push
push
pop
data16
fisubrs
mov
sub
loop
inc
outsb
adc
nop
sub
mov
xlat
cs
daa
jo
aad
sbb
lea
push
dec
push
mov
and
stos
ljmp
rclb
loope
popl
push
xor
insb
in
adc
xchg
xchg
test
push
or
lahf
fs
mov
gs
dec
fildl
mov
fwait
mov
imul
popa
and
mov
adc
in
sub
faddl
cmp
or
hlt
out
inc
pop
push
popf
push
adc
mov
lea
jle
imul
aam
sbb
into
sbb
cmp
adc
nop
mov
mov
jmp
test
ljmp
inc
fmul
test
std
scas
jecxz
mov
mov
nop
clc
or
sub
xor
and
repz
inc
call
test
insb
orb
add
pop
jbe
mov
sbb
inc
enter
lds
sub
and
inc
xor
xchg
mov
out
leave
movsb
cmpsl
add
out
mov
stos
inc
adc
cmp
adc
push
push
divb
adc
mulb
in
xchg
cmp
ljmp
mov
shrl
push
test
hlt
ljmp
test
pusha
jae
sbb
add
cwtl
into
inc
fmul
xorl
je
sahf
bound
shll
xchg
test
fidivrl
dec
clc
mov
xor
or
sub
sub
mul
push
mov
rcrb
repz
cwtl
ljmp
cmpsl
lods
int
fsubl
sub
stos
lods
cmp
mov
or
sbb
popf
jnp
and
add
bound
test
decl
sub
or
incl
sub
in
insl
call
sbbb
iret
dec
or
push
popa
add
dec
pop
cs
test
push
mov
adc
test
leave
add
add
push
mov
jb
mov
testb
cld
push
mov
cli
mov
aaa
cmpsb
adc
pop
xchg
add
xorl
adc
cmp
add
or
dec
sti
mov
mov
xor
pop
aas
jns
scas
inc
out
mov
loop
mov
pop
fwait
add
inc
mov
aaa
or
xchg
dec
or
mov
cmp
mov
repz
inc
push
pop
out
adc
mov
clc
bound
inc
add
and
dec
loope
out
jecxz
js
stos
arpl
mov
daa
xor
rep
adc
sahf
int3
pop
out
nop
idivl
daa
inc
int
leave
mov
mov
enter
mov
xchg
and
loopne
and
ja
subb
pop
lea
sbbb
push
fists
jb
xchg
bound
xor
in
imul
add
mov
rolb
mov
ds
cmc
cmpl
dec
inc
dec
jmp
or
int
dec
sub
mov
pop
mov
out
js
aad
or
roll
dec
push
xor
jmp
mov
enter
sub
bound
jne
cmp
sbb
inc
decb
sub
pop
inc
and
std
rorl
out
mov
jnp
lret
aas
hlt
int3
shll
pop
pusha
sbb
jbe
outsl
mov
cmp
mov
js
xchg
pop
fs
out
mov
xchg
sbb
ret
movsb
into
test
ret
cmpsl
sub
inc
icebp
lahf
push
iret
xorl
imul
cmc
or
and
incb
imul
loop
jle
mov
cmovnp
dec
cli
cmp
dec
push
and
dec
cmp
cld
mov
popa
frstor
wrmsr
sti
jae
cmpsb
movsb
mov
jle
popf
movsl
testb
xchg
add
xchg
mov
cwtl
fnstcw
adc
pushf
push
xor
add
fisttpl
pusha
mov
add
mov
dec
bound
bound
inc
outsb
mov
enter
lods
in
shll
xor
mov
jmp
out
dec
pop
mov
lret
jnp
stos
repnz
mov
or
inc
lcall
cld
cmp
and
xor
add
fcomp
shll
inc
rolb
fs
adc
mov
gs
or
push
out
push
bound
dec
xorb
mov
pop
scas
pop
add
scas
or
mov
xor
dec
push
es
xchg
add
push
xor
xor
leave
mov
fimuls
repz
lea
sti
mov
lret
sub
lahf
aas
sub
imul
pusha
std
push
jae
jns
decb
addr16
xor
inc
cs
insl
mov
or
add
adc
mov
daa
xchg
pop
jmp
adc
dec
adc
iret
repnz
push
add
ljmp
ret
popf
fidivs
ljmp
call
mov
xchg
inc
mov
sbb
jne
popf
insl
xor
mov
mov
cli
pushf
sti
jge
push
jno
std
xor
pop
sub
xor
cmp
sbb
adc
push
push
ss
daa
push
mov
mov
mov
imul
orl
sbb
ljmp
idivl
push
add
inc
repz
scas
pusha
cmp
ret
pushf
xor
jp
xor
ret
repnz
xchg
mov
lds
fwait
dec
cli
and
leave
mov
sbbb
push
aam
movsb
stos
cmpsl
pop
sub
sarl
push
repnz
mov
jge
jecxz
or
push
pop
lret
jae
mov
xor
push
lds
mov
xor
insb
call
sub
orb
es
daa
jnp
movsl
dec
xor
ljmp
xchg
jne
enter
or
mov
jp
push
fmuls
adc
cli
pushf
and
testb
push
push
popa
int
popa
cli
xchg
jl
pop
stos
test
xchg
push
popf
mov
addr16
pop
add
pop
je
adc
sub
scas
cmp
fs
cmp
movsl
mov
xchg
aam
std
les
fistps
inc
cmp
dec
jl
loope
cmp
shr
jne
cli
xchg
and
xchg
xor
mov
leave
out
adc
sbb
fists
mov
ljmp
test
ret
call
pop
mov
xrelease
xchg
jo
cltd
inc
fldcw
ret
js
arpl
push
inc
icebp
lds
daa
das
or
jno
fwait
mov
decb
idivb
xor
jae
ret
mov
sarl
rclb
jecxz
jge
xorb
bound
addr16
mov
ss
mov
xchg
rcrl
fwait
jns,pn
cltd
jb
inc
inc
mov
int
aad
and
mov
fimull
je
stos
pop
ret
cmp
mov
test
jl
sbb
pop
push
adc
mov
jp
cltd
push
dec
mov
push
shll
jle
insl
mov
scas
mov
insl
lret
jg
dec
cld
test
and
out
gs
filds
mov
stos
xor
pop
stos
xor
cmp
pop
sub
cmpsb
dec
cmp
icebp
test
inc
mov
xorl
xchg
jns
mov
repnz
mov
test
cmp
addb
dec
push
mov
pop
movsl
adc
and
adc
push
sbb
std
and
dec
jbe
mov
aad
pop
ljmp
inc
notb
xchg
rcll
jb
jnp
xchg
aam
xor
cmpsl
div
pop
cwtl
idivb
pop
out
loopne
jle
cmp
minps
push
sbb
sub
jo
ljmp
into
xor
in
mov
xor
hlt
stos
out
sub
fmulp
mov
dec
xor
sahf
xor
jecxz
mov
pop
aas
popa
xchg
popa
xchg
sbb
adc
sbb
arpl
and
inc
cmc
dec
jmp
or
adc
cmp
jmp
setle
pop
in
mov
bound
cmp
out
ds
dec
fimuls
fsubs
lahf
push
out
mov
cmpsl
aad
xchg
in
pop
and
negb
push
xor
mov
mov
cwtl
pusha
mov
scas
push
add
repnz
xor
or
mov
xchg
jle
fadd
imull
sbb
or
loopne
int
in
pop
adc
xchg
lock
test
push
into
cmpsl
aas
pop
mov
push
dec
int
jne
or
jl
or
mov
xor
inc
jl
outsl
jb
dec
cmpsl
rcll
adc
rcr
sbb
jo
ja
aas
jbe
popl
inc
stc
cmp
into
es
bound
stos
ljmp
out
mov
sub
push
cs
dec
ljmp
int
adc
xchg
repz
lods
inc
jnp
pop
xchg
dec
dec
or
stos
jge
cmpsl
cmpsb
das
push
fstps
dec
jbe,pn
adcl
fdivl
pop
imul
out
int
xchg
xchg
cmp
mov
and
dec
imul
cmpsl
stc
or
xchg
adc
mov
or
add
inc
testl
and
icebp
push
shlb
mov
hlt
mov
in
out
dec
rol
inc
cmp
std
sbb
sub
out
and
int
ljmp
mov
scas
jae
or
mov
pop
push
and
lahf
mul
or
jle
out
pop
popa
jbe
sub
mov
mov
sub
mov
scas
inc
pop
cs
fnstenv
out
xchg
lret
mov
and
sub
daa
xor
jbe
stc
mov
aaa
mov
mov
inc
fldl
adc
mov
or
sbb
push
out
xor
jecxz
push
test
jo
adc
flds
sub
in
shld
test
iret
hlt
cmpsl
test
out
cmp
mov
fimuls
jg
lea
jb
and
enter
hlt
call
cmpl
iret
inc
mov
add
insb
mov
ja
add
sahf
fcompl
out
sbb
pushf
mov
cmc
fpatan
pop
lcall
mov
out
jno
fists
pop
xchg
push
adc
popf
and
inc
push
and
loope
mov
dec
out
imul
xchg
test
push
lcall
ds
push
and
cli
pop
adc
or
pop
sub
pop
sbb
lret
and
mov
sbb
test
add
fdivl
or
push
push
push
faddl
jl
test
outsl
and
movsl
push
out
lods
mov
shl
outsb
jg
aas
mov
cmp
mov
push
jns
outsb
outsl
scas
sahf
sub
pusha
sub
lret
jae
mov
dec
lods
out
and
pusha
test
jge
in
cmp
sub
pop
pop
cmpsb
loopne
pop
jecxz
pop
xor
mov
js
jae
pop
dec
call
je
or
scas
mov
cmpsl
dec
cmp
cmp
adc
inc
stos
xchg
xor
sub
xor
shlb
enter
sub
sub
xchg
pavgw
testl
xor
mov
lods
mov
enter
pop
lret
or
les
mov
xchg
adc
xor
rorb
xchg
jns
into
icebp
ljmp
sub
mov
movsb
cwtl
xor
aam
scas
loopne
push
adc
aam
mov
pop
repz
xor
inc
and
lods
jnp
pusha
ljmp
or
adc
stos
cmp
lods
int3
sub
cmp
xchg
cltd
in
fmulp
or
fstl
notl
adc
in
mov
out
ficoms
stos
fsin
into
mov
bound
daa
sub
sarl
out
ja
or
jp
outsb
add
divb
add
cmpsb
pop
shlb
mov
dec
imul
xchg
cmc
popa
xor
inc
inc
aaa
adc
push
dec
inc
popa
int
xchg
mov
pop
mov
xor
inc
mov
xchg
repnz
cld
test
enter
mov
clc
inc
ds
mov
pop
imul
pop
aaa
push
push
outsl
fdivrs
push
add
aad
dec
mov
jp
pop
fs
mov
repnz
outsb
inc
repz
enter
mov
pop
push
aas
cltd
jge
les
push
push
lock
mov
pop
cmp
sahf
test
cmp
push
sbbb
mov
mov
rorl
xchg
add
dec
divps
mov
out
repnz
lahf
out
popa
and
and
icebp
add
mov
rol
fistps
loope
test
gs
ret
lcall
fbld
and
push
mov
jne
or
cmp
pusha
sbb
or
outsb
pop
bound
icebp
add
mov
fidivrs
mov
dec
cmc
xor
es
movl
xchg
nop
jmp
mov
sti
mov
out
jp
bound
dec
test
fdivr
insl
jae
and
pop
lods
insb
xchg
xor
and
aas
and
popa
enter
mov
and
call
sarb
movsl
lahf
pop
xor
mov
es
cli
scas
das
enter
jl
xchg
pop
mov
hlt
or
push
fs
add
lds
or
jmp
sbb
jge
sub
sub
jge
jl
mov
push
stos
clc
ret
pop
sahf
jae
out
lret
add
dec
les
xchg
fnstsw
mov
fs
dec
mov
es
adc
imul
sbb
or
lret
and
push
mov
or
loopne
sub
pop
add
adc
insl
inc
xchg
in
shlb
jbe
ret
xor
lock
lret
or
dec
incb
sub
xchg
push
stos
call
push
mov
or
stos
mov
sub
fistpll
in
mov
mov
mov
cmp
iret
push
lret
push
sarl
iret
xchg
jo
inc
push
sbb
add
imul
jg
inc
outsl
subb
pop
jmp
fxch
add
xor
roll
pusha
mov
out
dec
sbb
and
push
or
aaa
mov
xchg
enter
or
xchg
ds
jg
outsb
mov
xor
xor
or
mov
cwtl
outsb
sub
xchg
bound
jo
enter
xchg
inc
jp
jb
out
sbb
xchg
mov
jge
xchg
cmp
sub
mov
add
xor
push
test
ds
xchg
outsl
bound
or
imul
and
dec
mov
daa
pop
or
fwait
test
xor
jno
lcall
jmp
mov
lock
mov
in
sub
es
loop
mov
std
in
and
jle
push
cmpsl
loope
or
and
dec
in
jle
popf
jle
rorb
stos
test
nop
mov
ret
imul
int
ret
pop
xor
fs
cmp
cmp
pop
pop
lock
or
xchg
lds
pop
xchg
sahf
inc
jg
xor
or
addb
adc
imul
leave
mov
mov
fs
loop
loopne
clc
jg
xor
test
les
in
sbb
stc
icebp
xchg
xchg
in
cmp
add
mov
jg
imul
jbe
cwtl
inc
push
and
xchg
sub
jmp
subl
push
shlb
xor
in
jbe
jbe
jp
or
adc
sbb
sbb
pop
insb
stos
shl
mov
mov
cld
sub
iret
cli
sahf
insb
sti
aas
adc
fisubrs
sti
or
inc
add
push
mov
lret
or
jmp
jo
loope
dec
inc
imul
sbb
push
in
in
leave
cwtl
xor
fsub
test
hlt
hlt
sbb
pop
test
shll
rcr
and
sti
or
icebp
push
shrl
push
je
cmpsb
mov
jno
jne
lods
xchg
inc
in
mov
es
das
mov
cmpsl
push
mov
andb
shlb
pop
pop
add
iret
mov
movsl
sarl
jmp
clc
in
jecxz
push
adc
sahf
inc
fisttps
inc
adc
cmpsb
and
mov
push
mov
adc
shll
outsl
cld
insl
mov
inc
xchg
push
mov
stos
add
fdiv
xchg
xor
add
popa
or
mov
jmp
pop
lods
cmp
dec
test
sbb
xchg
xor
test
add
mov
adc
imul
adc
out
shrb
or
inc
imul
xchg
in
mov
jne
fmulp
mov
sbb
xor
mov
bound
cltd
inc
loopne
ja
inc
jg
push
loope
mov
aad
or
cmc
stos
ficomps
push
shr
mov
repnz
hlt
rorb
dec
dec
xchg
idivl
cmp
iret
xchg
cmp
fwait
mov
cli
or
and
xor
mov
pop
sub
xor
lods
dec
pop
sub
popa
add
insl
call
cmc
test
sahf
dec
or
sub
pop
out
cmp
das
cmpsb
popf
nop
xor
sbb
inc
enter
in
or
clc
inc
insb
outsb
repnz
and
aam
xor
xor
cld
add
dec
add
inc
pop
dec
cmp
cmp
stc
ds
or
jb
or
out
insb
pinsrw
nop
imul
jecxz
mov
mov
mov
inc
js
outsl
xchg
shr
jae
sbb
lock
data16
jecxz
adc
xchg
ss
repnz
cltd
lods
int
mov
or
dec
jno
mov
pop
push
mov
int3
sbb
bound
popf
leave
cs
cmp
mov
mov
mov
xchg
aam
sbb
pop
mov
sub
inc
sbb
int
sub
test
adc
adc
push
and
ds
xor
insb
pop
push
cmp
and
das
mov
rcrl
cltd
fdivr
mov
lret
out
mov
clc
div
and
inc
cmpsl
inc
addl
xchg
or
add
ficoms
std
movsb
sub
shlb
pop
mov
sbbl
test
and
aas
out
stos
push
addl
cmpsl
fwait
aaa
stc
or
lods
adc
mov
rolb
cltd
repnz
insb
cwtl
cltd
dec
hlt
sbb
jno
mov
insl
shll
xchg
mov
push
pop
xor
and
lret
jmp
je
and
lods
aas
in
or
fcmovbe
fldt
aad
in
mov
inc
jnp
int3
lcall
xchg
lret
inc
pop
mov
cltd
cmpsl
or
stc
fstpl
adc
push
sahf
mov
out
xor
add
mov
add
jge
cli
imul
pop
inc
rorl
cmc
cmp
pop
push
add
filds
mov
push
test
or
mov
xchg
lock
jl
ja
xor
or
cmp
xchg
out
xor
mov
jmp
shr
hlt
iret
fsubl
inc
ret
daa
out
int
inc
xor
jle
hlt
xchg
stc
orl
clc
rorb
cmpb
sbb
mov
inc
sbb
sbb
mov
cmc
fildl
popf
jecxz
adc
xchg
out
inc
data16
dec
test
mov
call
push
enter
imul
fstpl
sti
roll
or
dec
scas
jge
lods
shlb
pusha
sub
xchg
lock
lret
xor
ret
ffreep
push
cmp
loope
popa
mov
movsb
mov
inc
push
dec
shl
xor
mov
jne
pop
int
push
xor
out
test
bound
lahf
and
cwtl
aam
aam
stc
fmull
cmpsb
and
dec
in
loopne
dec
es
test
iret
data16
add
addr16
frstor
push
out
stos
test
out
rolb
dec
jp
pop
xor
loope
imul
or
push
orb
inc
and
icebp
xor
jne
iret
insl
lcall
js
sar
lcall
fidivrl
push
inc
inc
or
pop
filds
xor
mov
or
dec
dec
jo
cmp
hlt
inc
shr
out
or
mov
shrb
sbb
push
xchg
stc
xor
push
sti
inc
mov
repz
jg
lret
sbb
scas
sub
mov
push
and
inc
or
dec
mov
mov
xchg
lock
sbb
add
cmc
cmp
adc
pop
jge
adc
movsl
mov
jp
ud1
push
sbb
ret
fimull
inc
out
sbbl
scas
and
inc
dec
sub
addl
sbb
dec
cmp
adc
fbld
rcrb
ud0
add
data16
pop
lret
push
xchg
jge,pt
cltd
fimuls
and
cltd
scas
pop
sbb
lret
dec
aam
cmpsl
ret
sbb
cmc
mov
cmp
xchg
inc
mov
sarl
pushw
add
and
ficoms
stos
push
test
sti
and
mov
jno
mov
sbbl
xor
adc
fistl
and
inc
push
pop
nop
imul
stc
adc
in
cmc
mov
sub
test
stos
in
xor
hlt
pop
push
sbb
cs
dec
add
outsl
sar
xchg
stc
mov
rcrl
pop
into
and
or
jl
xchg
movl
negb
cmp
cs
out
dec
jge
jno
xchg
imul
flds
mov
arpl
ror
mov
cmpsb
popf
popf
shlb
add
pop
hlt
sbb
dec
cwtl
out
in
jg
mov
mov
lds
sub
jns
lret
pop
inc
adc
mov
ljmp
push
and
aaa
sbb
add
dec
pop
sbb
ja
shrl
mov
ds
dec
cli
cli
mov
mov
sub
pop
sahf
push
sub
stos
adc
aaa
cs
loopne
jmp
and
es
arpl
push
mov
xor
insl
ja
out
mov
xchg
fisttpll
or
repz
inc
adc
jbe
rcll
clc
mov
or
icebp
add
lret
decb
sub
fistps
movsl
mov
sbb
jbe
add
mov
lret
test
test
cs
jo
add
xchg
dec
outsl
pop
push
adc
loop,pn
leave
mov
or
or
in
inc
mov
sub
fsub
aas
push
movsb
dec
or
insl
je
adc
xchg
stos
xchg
inc
inc
aam
cli
stc
mov
pop
pop
xchg
lock
adc
imul
aas
loope
ret
dec
out
addr16
pop
lahf
shll
xlat
xchg
call
lds
mov
push
push
xlat
addl
lds
cmc
mov
cmc
loop
std
mov
and
xchg
adc
out
mov
sub
test
xor
outsb
loop
pushf
or
push
lea
into
inc
fwait
pop
xchg
or
sbb
add
xchg
sub
or
bound
inc
cwtl
clc
inc
push
aam
in
and
mov
pop
dec
iret
in
mov
xchg
and
pop
not
cmc
out
testb
enter
repz
mov
sub
xor
addr16
cltd
movsb
daa
mov
or
mov
lods
pop
add
push
adc
daa
stos
mov
scas
xor
ret
aad
or
test
das
inc
je
jo
adc
cwtl
enter
mov
daa
shll
in
sar
and
mov
adc
dec
enter
jp
pushf
push
movsl
imul
test
adc
mov
shll
cs
push
mov
clc
jge
cmp
push
loop
cmpsl
mov
scas
out
stc
xor
add
add
or
lock
jns
xor
inc
cmp
pop
das
cltd
jo
jl
pop
push
in
aam
mov
xchg
jle
and
jge
jne
add
js
add
push
arpl
push
cwtl
and
push
sub
cmp
pop
cmp
nop
push
outsb
mov
rcr
add
sbb
cmp
repz
enter
inc
mov
gs
mov
mov
sub
and
shrl
cmp
fdivr
scas
int
inc
insl
push
stc
adc
insl
jmp
sub
popa
dec
shl
out
pusha
xchg
mov
popa
sbb
test
adc
sub
pop
or
adc
mov
bound
push
add
adc
push
push
sti
ret
inc
scas
push
imulb
sub
dec
icebp
repz
dec
outsl
dec
or
fstp
push
jbe
push
aad
push
cmp
loop
mov
push
leave
popf
inc
test
shl
int3
and
adc
fisubs
pop
icebp
xor
fbstp
sbb
loopne
jb
cmp
fwait
out
fcompl
lds
subl
test
push
popl
xor
pop
sbb
jle
addr16
jnp
push
fs
adc
jbe
cmpl
cmp
pop
lret
sub
aam
pushl
nop
pusha
sub
setns
test
add
movsb
xor
mov
inc
push
outsl
dec
fadds
stc
pop
xor
sub
int
pusha
lret
sbb
fists
pop
inc
loop
pop
daa
bound
ja
xlat
rcl
insb
push
xlat
xchg
outsb
push
into
push
insb
push
mov
push
push
movsb
or
mov
fldl
jmp
mov
and
jo
jle
rcl
ret
inc
lcall
outsl
lods
scas
aad
iret
add
ror
iret
push
pop
sbb
adc
fs
imul
clc
icebp
xorl
rolb
xchg
xor
sahf
mov
jge
ja
stos
xchg
into
addl
addr16
jae
mov
mov
cld
xchg
jbe
cs
lods
jae
xchg
pop
jnp
outsl
aaa
sahf
mov
lods
push
jb
ret
mov
mov
andb
xor
dec
jae
aam
js
in
fcoms
out
popa
push
insb
lds
dec
aad
test
pop
pop
ljmp
clc
lock
rclb
popf
jnp
sub
das
repz
in
shl
fstp
inc
add
cmp
arpl
inc
dec
cmp
mov
or
fsubl
mov
out
pop
xchg
pop
stos
subb
cs
fdivrs
mov
push
movsl
daa
mov
leave
lret
repz
ds
lcall
jg
arpl
xchg
cmpsb
xchg
negb
adc
arpl
mov
pop
ret
movsb
jbe
ja
cwtl
push
mul
arpl
loope
dec
or
jb
out
es
sub
js
jno
ficoms
fs
stos
lret
xchg
ret
xor
imull
inc
movsb
inc
add
cmp
sarl
lock
push
iret
fwait
mov
aam
bswap
or
imul
mov
shr
dec
cmpsl
mov
sub
orl
push
divb
sub
pop
rorb
mov
arpl
mov
add
outsl
sbb
push
mov
loopne
mov
rcrl
push
mov
mov
pop
mov
push
mov
inc
sub
mov
mov
sub
mov
inc
xchg
test
push
jg
sbb
lret
xor
lods
rcll
call
jno
and
mov
dec
pop
psrad
scas
out
xor
cmp
push
adc
fcmovbe
js
sub
mov
scas
cmp
mov
and
fcmovu
lcall
sub
test
fs
jecxz
xlat
aas
cld
cmp
xor
ret
jb
mov
sar
sbb
bound
inc
mov
popa
cwtl
mov
std
jno
rolb
aaa
add
insl
scas
sbb
mov
int
out
add
call
orb
hlt
repnz
and
inc
repz
add
sbb
lds
mov
push
lods
add
cmp
out
sub
push
and
cmp
push
sub
or
cwtl
inc
or
push
icebp
or
rolb
jecxz
mov
dec
jmp
adc
push
mov
outsb
mov
test
xorl
add
mov
mov
xchg
in
sti
call
sbb
push
clc
cltd
ficoms
out
cmp
aad
pop
pop
movsb
fcomps
in
fdiv
cs
sbb
cli
or
out
into
in
inc
lock
xchg
adcl
aam
pop
inc
push
pusha
filds
int
xor
adc
push
dec
pop
pop
sub
cltd
test
push
dec
mov
loope
int
and
jb
bound
cmc
sub
mov
loop
add
movsl
xor
movsl
add
jns
and
inc
aam
xchg
lds
pushf
xchg
addr16
popa
movlps
mov
daa
cmc
jge
insl
sti
push
fstpt
and
add
mov
jo
mov
sbb
xchg
lret
pop
roll
sub
rorb
inc
ret
gs
add
xlat
loopne
push
popa
xchg
mov
push
pop
mov
jbe
push
xchg
iret
out
inc
out
mov
inc
mov
and
push
adc
sub
es
stos
jbe
rcr
fcomp
sub
jmp
mov
ficompl
dec
in
scas
ss
dec
adc
imul
shr
imul
out
jns
push
inc
inc
aas
rorl
xlat
out
orb
xchg
xor
or
inc
sti
mov
andl
fnstenv
fs
cmpsb
xor
addr16
int3
insb
mov
inc
cltd
mov
lods
mov
in
ljmp
xor
imul
inc
iret
xchg
movl
repnz
or
sub
loop
jl
pop
mov
push
jne
popa
fldenv
out
subl
push
insl
and
mov
adc
lret
je
cwtl
add
or
js
jp
enter
pop
cmpl
js
push
lret
dec
xchg
popf
pop
pop
push
xchg
daa
test
adc
stc
test
sbb
jecxz
mov
xor
jg
iret
ljmp
jns
pop
mov
inc
es
mov
sub
pop
mov
sbb
push
loope,pn
mov
add
hlt
adc
cwtl
mov
loopne
jns
jnp
rorl
dec
pop
xchg
pop
sbb
mov
mov
shll
mov
jl
or
cmpl
push
sahf
lods
fidivl
jmp
xor
adc
stos
pop
jl
sarl
test
iret
lods
pop
lret
outsl
xchg
ror
shll
and
insl
lret
pop
adc
mov
repz
fst
pop
jb
mov
xchg
or
movsl
js
sbb
and
idiv
cmpsl
sub
jo
sub
and
xor
mov
ss
jb
loopne
loope
mov
repnz
sub
cmp
mov
mov
out
fcomps
dec
inc
cmpsb
in
pushf
mov
es
testl
lret
fs
or
sarl
lret
cltd
ss
sub
ja
je
push
fistpll
inc
sub
mov
in
sub
adc
sbb
cmpsb
xor
mov
pop
notb
pop
jecxz
mov
hlt
jge
movsl
push
ficoml
dec
pop
fadds
setb
dec
cli
icebp
and
pop
pop
in
leave
pusha
mov
fwait
mov
les
sti
dec
cmpb
cmpsb
clc
jb
mov
enter
pushf
sub
inc
jle
sub
inc
adc
mov
outsb
cli
mov
mov
and
xchg
or
out
cmp
sub
mov
outsb
mov
mov
push
mov
add
push
jl
js
mov
fs
push
cld
rcrb
push
enter
xor
cmp
subl
icebp
jecxz
inc
adcb
mov
sub
inc
mov
cmp
lret
test
sahf
cmp
mov
aas
pop
jl
movsl
jne
fidivs
aaa
push
adc
popa
jnp
mul
ja
or
shll
mov
push
push
add
cmp
dec
into
xchg
mov
add
jbe
cli
xor
mov
shlb
xor
and
xchg
in
gs
pop
adc
sub
aad
xorl
rcrl
sub
sbb
int3
xchg
fldcw
jnp
dec
rclb
mov
mov
lahf
in
aas
in
popa
in
out
push
or
adc
insb
and
ds
idivb
mov
xchg
pop
outsl
xor
loop
pop
xor
cmp
jmp
sbb
sbb
cmpsl
push
rorb
and
mov
nop
adc
mov
sub
push
imul
ja
in
lret
pop
pop
xchg
add
add
mov
add
mov
jno
jg
pop
in
into
mov
push
fisttps
lcall
or
pop
rorl
je
ds
or
mov
int3
push
out
inc
mov
ds
jb
stc
push
sbbl
cwtl
jge
ret
cmc
pop
push
sub
ret
jnp
je
dec
and
jno
pushf
jle
dec
dec
scas
dec
cmp
inc
cmc
mov
pop
push
loopne
push
cmc
ss
ja
pop
cld
test
xchg
bswap
daa
stc
insb
das
jmp
int
mov
pop
push
mov
outsl
push
sbb
mov
xor
jge
call
fstl
push
xor
dec
test
xchg
loopne
sub
dec
sub
in
dec
cld
cmp
pop
jns
xor
jecxz
icebp
into
push
add
in
arpl
cmp
scas
lea
sbb
and
cld
push
jle
sbb
mov
dec
add
push
mov
mov
cmp
cmpsl
jbe
hlt
add
xor
lods
addb
jmp
in
jle
xchg
mov
mov
mov
loop
scas
sub
arpl
xchg
and
sbb
jne
subl
sbb
mov
stos
les
std
lods
pop
popa
cmp
in
ret
hlt
adc
ja
mov
shlb
and
stos
mov
popa
pop
fwait
nop
stos
pusha
pop
or
fists
cmc
xor
or
push
int3
pop
pop
jb
xchg
shrl
cmpsb
jle
adcb
sbb
cmp
fstpl
dec
ret
lahf
les
lods
mov
push
cs
push
es
xchg
fmull
movsl
xor
fidivrs
pop
fdivrp
das
roll
xchg
int3
cmp
dec
jp
stos
or
subb
ja
mov
cmp
cltd
pop
out
mov
pop
pop
dec
dec
xor
mov
xor
shll
call
push
lsl
xor
xchg
adc
enter
mov
ret
sbb
popf
xchg
inc
xor
aaa
sub
xchg
xbegin
es
in
fcoml
addl
sub
mov
xor
leave
repnz
sub
and
cmp
lret
mov
ljmp
icebp
ficomps
mov
imul
cmp
testl
fidivrl
addb
dec
cmc
scas
std
stos
mov
mov
fstpl
add
frstor
push
jae
mov
mov
or
jnp
shll
sahf
xchg
cli
jns
clc
in
mov
leave
lret
imul
loope
cmpsl
and
lret
sbb
adcl
cld
mov
push
ret
adc
aas
ret
sub
add
in
cmpb
test
jae
gs
mov
jp
shr
inc
pop
mov
mov
cmpsl
mov
jl
jnp
jns
divl
mov
mov
lods
mov
ljmp
icebp
js
lea
sarl
mov
add
xor
xchg
or
inc
add
add
xchg
out
repz
jnp
sbb
sub
incb
in
in
jge
ljmp
mov
iret
and
pop
pop
test
inc
je
imul
push
xor
lods
jmp
pop
pushl
sub
test
cmp
xchg
mov
dec
adc
hlt
mov
icebp
ljmp
jl
mov
pusha
lret
inc
lock
and
lods
adc
ficompl
or
mov
sbb
xor
dec
xor
into
xlat
out
and
fdivs
movsl
imul
mov
lcall
dec
mov
movsl
hlt
cmpsl
outsl
cmc
mov
sub
aaa
or
cs
jcxz
leave
out
imulb
test
pusha
lret
sub
or
pop
mov
fisttpll
mov
inc
pop
cmpsb
fwait
sbb
xlat
sub
pop
insl
popf
cmc
mov
aaa
scas
sbb
rolb
mov
gs
data16
xchg
pop
ljmp
xor
cs
xor
dec
sbb
jp
sahf
movsl
das
imul
call
or
mov
call
lret
push
mov
push
ss
in
xor
adc
lods
and
inc
and
sub
dec
into
push
pop
test
es
and
mov
repz
mov
aaa
imul
stos
jmp
cmpsb
sub
fisubrs
sub
nop
or
mov
imul
lods
ret
iret
cmp
adc
lcall
clc
xor
loopne
hlt
sub
inc
jle
jb
mov
cld
hlt
xor
cmp
cltd
push
mov
inc
inc
fbld
gs
mov
insb
repz
lock
and
and
js
andb
lret
je
push
push
pop
int3
xchg
sub
jp
adc
sub
in
leave
add
xchg
sub
cmc
sub
pop
scas
push
outsb
mov
into
cmpsb
jp
and
mov
and
cwtl
adc
sub
cmc
mov
push
mov
fsubrs
hlt
xor
xorb
lods
daa
dec
hlt
enter
shll
xchg
movsb
jge
push
faddl
xchg
jge
jnp
mov
sbb
sarb
gs
insb
inc
jge
dec
mov
and
loopne
pop
and
xor
inc
daa
repz
mov
mov
mov
xchg
cli
scas
inc
dec
insl
sub
cs
js
nop
lret
mov
ja
jmp
or
xchg
fs
js
pop
hlt
aam
sbb
lods
in
add
leave
inc
shlb
sub
or
sahf
daa
hlt
pop
push
mov
cmpsb
fs
scas
dec
xor
xor
js
sub
shll
pop
push
jnp
out
jp
insl
cmc
jmp
push
imul
adc
xor
inc
mov
fldenv
mov
xchg
adc
xchg
fsubrs
and
fwait
mov
lock
add
inc
scas
push
jo
xor
imul
rorb
lock
cwtl
inc
dec
push
dec
inc
ds
xchg
scas
das
stos
fpatan
mov
stos
cmpsl
xor
cmp
inc
std
mov
rcrb
lret
or
cwtl
sar
les
arpl
push
ljmp
shlb
outsb
xchg
repnz
call
mov
push
xchg
pop
mov
inc
adc
xchg
inc
push
repz
mov
shr
push
sahf
sbb
ds
adc
inc
ja
std
int3
xor
insl
outsb
jl
repz
sub
or
mov
insb
push
cwtl
nop
icebp
icebp
mov
lret
fcompl
into
insb
enter
in
pop
cmpb
xchg
lods
mov
pop
pop
stos
mov
and
fistpll
xor
data16
int
and
cmp
sbb
add
mov
inc
mov
idivl
adc
or
clc
xchg
aad
mov
and
fs
fs
imul
xchg
sbb
insb
lods
mov
mov
loop
xchg
imul
and
xor
in
loopne
mov
dec
ljmp
sub
xchg
jl
and
inc
or
jno
inc
and
push
xlat
sbbl
das
jp
push
pop
pop
jbe
pushf
inc
jno
imul
add
in
xchg
mov
dec
popf
xchg
loopne
add
inc
mov
lods
fidivs
jne
fucomip
mov
xchg
pop
pop
insl
and
jmp
jmp
cmp
push
cmpsb
push
outsl
punpckldq
fisubs
xor
jno
insl
pop
fcmovbe
cmp
dec
test
fcoml
jp
jo
inc
sbb
add
sbb
dec
fisttps
lods
cld
or
outsl
or
fidivs
xor
xor
or
scas
adc
mov
je
xor
das
jnp
cmpsl
mov
xchg
rcr
and
mov
sub
pop
mov
mov
out
aas
inc
lds
lods
fisubrl
xchg
flds
mov
inc
adc
pop
jmp
cmpsb
mov
mov
pop
push
es
rcll
lret
test
pop
shll
push
dec
nop
mov
lret
jnp
dec
pop
mov
dec
xchg
dec
jg
or
sti
out
adcl
xor
sub
rol
inc
push
or
and
or
push
sbb
in
jo
pop
leave
in
cmp
push
popf
sub
xor
in
mov
test
push
xchg
movsl
push
movsb
movb
dec
test
hlt
inc
fidivrs
shlb
pop
sub
movsl
shlb
xchg
sti
dec
cmp
clc
cli
dec
sti
mov
and
dec
out
scas
mov
sbb
enter
push
clc
lods
and
outsl
imul
jb
gs
arpl
pushf
icebp
or
shll
pop
loope
ss
xchg
divl
adc
xchg
fldt
inc
out
lret
movsb
mov
out
push
dec
pop
cli
jnp
mov
xor
sbb
sets
and
or
cmp
and
sti
jle
sbb
sub
mov
notl
inc
mov
mov
rorb
sahf
in
jne
mov
out
insl
popf
pushf
rcrl
clc
jbe
sbb
xchg
jmp
enter
ljmp
aam
inc
pop
ds
cmp
cltd
xchg
inc
push
call
add
push
mov
cld
jmp
int3
xor
jp
scas
cwtl
mov
sub
mov
arpl
push
mov
push
push
test
ljmp
xchg
adc
test
sbb
shlb
cmp
pop
in
mov
adc
jns
jmp
or
fs
mov
aaa
adc
jg
or
jg
out
mov
xorl
mov
clc
jns
pop
jecxz
aas
adc
mov
lea
mov
mov
out
cmc
pop
sahf
mov
ja
in
jne
xchg
xlat
pop
pusha
push
pop
adc
mov
in
xchg
rclb
jae
dec
and
cmp
fsin
inc
jmp
fldenv
pop
inc
inc
pmulhw
xchg
cs
aad
fsubs
int
inc
or
nop
xor
cmc
in
pop
fwait
xchg
xlat
xor
xchg
in
rolb
popa
decl
stos
addb
mov
cmp
and
and
loopne
int
mov
cltd
mov
imul
test
and
lahf
and
out
out
rcll
or
mov
cld
xchg
xchg
jne
ret
sbb
imul
adc
pop
shl
mov
lea
in
and
ret
push
adc
and
sub
jns
fistpll
insb
push
pop
subl
mov
orl
sti
jo
in
push
cmpsl
cmp
pop
das
or
test
adc
sarb
add
and
cmp
in
dec
pop
popa
gs
xchg
sbbl
mov
test
inc
mov
mov
xchg
sub
cmpsb
fwait
clc
sub
jne
es
fisubl
pop
fdiv
stc
fwait
cmp
xchg
cmp
data16
adc
je
les
pop
test
movsl
leave
inc
add
cmp
test
fistpll
and
aaa
xchg
std
xchg
add
cmp
mov
test
inc
rorb
jnp
sub
fldcw
call
inc
or
ds
lcall
push
or
mov
testb
inc
push
in
ljmp
jmp
mov
xchg
out
into
test
jmp
fidivs
out
jmp
popf
popa
and
lods
and
in
or
clc
sub
movsl
scas
rcr
test
pop
lock
xchg
and
ficomps
xchg
push
loop
adc
mov
aad
push
les
dec
xchg
data16
lahf
sti
lahf
adc
sub
mov
inc
or
andl
dec
mov
fsubs
sbb
pop
jne
lcall
sbb
sub
addr16
and
fmull
jge
sarl
xchg
mov
sbb
mov
fisubrl
rolb
lret
cmpsl
andl
and
mov
and
xchg
adc
cwtl
pushf
iret
push
inc
mov
xchg
xchg
popa
sahf
mov
jo
mov
mov
mov
lcall
popa
in
in
dec
daa
ret
ljmp
cvtps2pd
dec
xchg
aaa
pop
jge
sbb
les
test
out
nop
in
mov
cmp
lret
dec
mov
cmp
pop
xor
jmp
pop
fwait
les
add
cmovp
jecxz
push
pop
test
or
movsb
mov
mov
push
mov
pushf
outsl
lea
pop
loope
stos
pop
lods
mov
cmpsl
sub
and
xchg
adcl
sbb
fiaddl
mov
pushf
std
jge
ja
je
xor
jb
test
sbb
repz
push
insl
iret
ljmp
xchg
nop
arpl
movsb
je
pop
mov
dec
cmp
nop
popl
xchg
lds
xchg
out
sub
cmpsb
mov
push
lods
pop
pop
rcll
pop
push
push
loop
sbb
push
and
lock
in
dec
lods
lock
push
rcrb
ds
loopne
arpl
mov
lds
sub
clc
mov
notl
dec
outsb
push
data16
std
dec
cmpsl
into
movsb
sarl
and
insl
mov
xchg
and
push
loope
cmp
pop
sub
fmulp
into
shlb
cli
mov
stos
xor
cltd
sbb
sbb
ret
std
scas
mov
push
and
test
pop
cmp
insl
dec
pop
cmpsb
cs
xchg
test
aas
int3
mov
adc
mov
xor
or
jb
les
rcrl
mov
imul
daa
filds
ja
mov
dec
sbb
inc
rcr
lret
divb
mov
push
pusha
data16
pop
or
cmpsb
jbe
dec
cmp
push
out
or
adc
jle
dec
jmp
sub
test
pop
pop
or
scas
adc
subb
loope
xor
lds
sbb
mov
mov
jmp
adc
xor
cmp
pop
stc
mov
mov
sub
mov
in
jns,pn
pop
js
jp
xchg
dec
sbb
lret
popa
jne
mov
ret
jno
imul
xchg
push
adc
arpl
pusha
push
jnp
mov
sti
adc
mov
xchg
cs
into
out
push
es
dec
xor
or
out
push
enter
ss
mov
push
or
jge
outsl
ljmp
aaa
cwtl
pop
xchg
jmp
mov
dec
fwait
stos
jae
inc
aas
cld
push
ret
test
mov
pop
nop
mov
mov
loopne
addr16
fwait
pushf
sbb
push
test
and
jge
push
jge
adc
and
pop
push
xchg
cmp
and
test
je
push
push
ret
mov
cld
loop
arpl
psllq
insl
xor
popf
lods
mov
inc
xor
jnp
adc
xchg
jne
jno
cmp
mov
ljmp
dec
add
loope
aaa
das
adc
pusha
cltd
scas
mov
out
mov
xchg
loope
lds
mov
imul
mov
dec
aas
xlat
lahf
push
fxch
jno
cltd
loop
mov
push
test
imul
inc
push
add
xchg
xor
rorl
ficomps
andl
jnp
scas
dec
fisubl
xchg
popf
out
outsb
aaa
stos
push
cmp
cmpsb
lret
test
ljmp
inc
jmp
iret
addr16
xchg
xchg
in
push
mov
xor
fcmovnb
pop
jmp
jg
sbb
popf
cmp
adc
cmp
into
inc
xchg
push
jmp
push
cmp
mov
aas
sti
call
clc
adcb
pop
test
sbb
inc
imul
repz
mov
sbb
mov
mov
nop
mov
mov
sub
enter
iret
xchg
lock
sbb
xchg
pop
fbld
lret
xchg
xor
in
test
cmp
dec
ret
or
addr16
insl
mov
jnp
out
xchg
lds
mov
nop
das
mov
pop
mov
push
xchg
test
sbb
adc
shl
ret
push
xchg
dec
or
popf
sub
jnp
mov
lods
enter
fimuls
and
adc
les
fmul
out
clc
sub
cmp
les
int3
xchg
and
mov
ds
jle
repz
pop
pop
shll
in
adc
enter
or
jae
lret
negl
sub
inc
lods
mov
sbb
add
inc
fisubrl
lret
push
pop
std
insl
xchg
inc
mov
xor
mov
shr
insb
cmpsb
push
aaa
xchg
lock
fidivl
out
in
decl
push
adc
xchg
sarl
mov
leave
push
cmpsl
push
sbb
clc
mov
cmpsb
mov
and
xor
sbb
pop
jns
das
popa
xchg
cld
cmc
das
aad
lret
stos
aaa
jge
fs
mov
xlat
lea
push
push
dec
push
out
jmp
dec
xchg
arpl
into
pop
adcb
inc
jae
inc
jae
into
jnp
add
dec
pop
add
xchg
add
xchg
add
mov
xor
in
out
popf
push
mov
lods
push
test
shr
xchg
loopne
cmp
fldl
cmp
adc
popf
push
sub
pop
cld
xor
loopne
sub
push
insb
int3
mov
pop
pop
push
inc
jae
or
mov
shlb
xor
adc
cld
pop
dec
mov
dec
out
cmpb
jo
lock
jg
adc
aam
std
in
test
mull
arpl
jecxz
xorl
jae
imul
or
sbb
push
push
sbb
mov
out
push
add
push
fwait
imul
mov
mov
fs
or
stos
cmp
ljmp
xchg
dec
pop
pop
in
bnd
adc
insl
js
dec
insl
pop
or
mov
loop
ret
push
mov
mov
ret
adc
add
stos
movsb
lods
cmp
adc
fisubs
jle
pop
or
or
ret
testb
cmp
js
mov
das
gs
arpl
hlt
pop
sub
ret
lea
sti
push
pop
dec
or
out
out
fildl
sub
mov
xor
and
cmp
int3
fcoms
mov
leave
fistps
aam
outsl
mov
adc
ja
mov
cmp
xchg
xor
mov
adc
cmp
sub
ret
sbb
mov
dec
or
les
or
es
shlb
mov
cmp
iret
mov
mov
pop
cmp
jmp
dec
jl
pop
push
xor
dec
adc
stc
out
pop
dec
movsl
scas
jg
xchg
push
jmp
jns
dec
sbb
xchg
stos
mov
outsb
pop
or
or
cmp
and
inc
dec
cli
js
mov
in
lods
nop
push
or
js
into
bound
scas
sbbl
push
xor
jnp
ret
sub
xchg
stos
pop
pop
dec
pop
mov
mov
mov
mov
mov
add
dec
roll
fwait
mov
into
pop
lret
adc
test
inc
imul
dec
leave
mov
mov
sbb
and
clc
jns
sahf
fisttps
inc
xorl
or
sbbl
scas
mov
adc
mov
cld
iret
cwtl
sbb
arpl
popf
pop
push
push
clc
or
lds
sarb
dec
repz
lret
and
or
or
fistpl
lret
pop
imul
dec
ret
fsubrl
or
or
lahf
int
sub
outsb
xchg
cmp
mov
rolb
stos
in
sbb
inc
shrl
in
in
icebp
scas
test
xchg
imul
xchg
jns
mov
push
xchg
inc
xchg
repz
mov
sarl
pop
sub
in
mov
es
repz
test
xor
iret
push
mov
or
xchg
test
int3
fdivr
out
movsb
mov
scas
xor
jbe
xor
push
push
xor
movsb
sub
xchg
ds
add
jmp
sub
sbb
popf
test
push
add
xchg
and
mov
inc
and
sub
cmpsl
xchg
mov
inc
shlb
pop
aaa
int
lret
inc
xchg
xchg
mov
adc
push
int
pop
inc
cmc
xchg
mov
clc
add
add
xor
out
cmp
sahf
xchg
pusha
movsb
mov
out
push
pop
stos
dec
jne
mov
push
test
pop
jns
int
fnstenv
fldcw
lahf
sbb
pop
and
addl
cmp
insb
scas
jecxz
iret
pop
fimull
jl
lcall
sub
jno
fcoms
xor
adc
mov
rcrb
xchg
mov
xor
loop
fisubs
pop
and
out
jle
lret
js
mov
add
stos
and
mov
dec
arpl
and
xchg
lea
push
and
adc
mov
sub
push
xor
ret
es
jb
xor
jne
push
xor
dec
cmp
les
fistpll
lss
fmuls
dec
push
lcall
sub
mov
addl
ret
repz
scas
pop
xchg
jl
xor
movb
fimuls
out
data16
push
or
enter
ret
adc
mov
sub
lcall
inc
pop
cmp
sub
pop
mov
jo
data16
lods
ffree
cli
ss
xchg
inc
xor
cmp
jns
pusha
aas
sub
pop
fdivs
lds
insl
out
xor
cmpsb
cmpb
imul
cmpb
or
dec
jge
mov
adc
jge
rdpmc
jge
std
sub
cmpb
movsl
cmp
stos
and
das
imul
mov
xor
jmp
mov
jns
sub
inc
cmp
mov
movl
jg
scas
jns
sub
push
dec
or
xor
movsb
xor
jb
push
fisubl
mov
popf
cmpsb
pop
test
dec
cmp
push
mov
xorl
fnstenv
scas
sub
adc
adc
mov
mov
mov
push
fs
aaa
mov
push
dec
popa
mov
icebp
imul
add
mov
xor
sahf
arpl
push
sbb
in
insb
or
movsb
sbb
inc
cmp
or
sbb
pop
sub
repz
and
dec
testl
push
xchg
or
test
roll
das
or
std
jecxz
ret
mul
dec
gs
addl
cmpl
jge
shrb
into
sbb
loope
fmulp
arpl
dec
dec
xchg
push
inc
mov
cmp
pop
push
lock
movsl
xlat
js
mov
dec
lcall
out
pop
or
nop
jmp
into
scas
xchg
mov
sti
outsb
cmpsl
mov
mov
dec
movsb
aaa
rcl
mov
sub
xchg
sbb
add
sbb
lret
jbe
mov
gs
pop
mov
mov
movsl
mov
cmovb
cmp
loopne
sahf
mov
scas
das
sub
data16
fidivl
std
add
stc
mov
js
test
pop
cmp
cmp
lret
add
aas
lret
outsl
cmp
ret
in
mov
sub
ret
loope
sahf
scas
ljmp
cwtl
pop
pop
insl
push
push
dec
lret
cmp
testb
repnz
xor
pop
lret
dec
mov
popf
and
xor
ret
push
inc
cmp
adc
lcall
cli
clc
in
or
lret
arpl
test
lret
int
fcomps
loop
or
mov
es
adc
and
mov
test
mov
aas
inc
das
jmp
push
pop
mov
jmp
mov
xor
mov
outsb
int
mov
mov
ss
or
dec
call
mov
pop
push
xorb
stos
sub
faddl
lea
cmp
xchg
jle
cmp
jns
in
dec
add
mov
aas
fdivrl
and
ja
jl
dec
cltd
push
loope
mov
and
leave
mov
xchg
pop
dec
mov
dec
mov
mov
or
repz
push
loopne
mov
in
mov
inc
popa
mov
arpl
push
inc
dec
or
and
push
add
subb
lods
imul
pop
andb
dec
fucom
imul
mov
inc
adc
pop
jmp
push
mov
test
mov
or
sbb
push
jns
or
cmp
xchg
mov
push
xchg
dec
ret
ds
scas
or
or
sarb
jmp
inc
out
repz
cmp
in
mov
xchg
sbb
adc
lahf
iret
testb
mov
lods
lret
insb
enter
mov
ljmp
insl
xchg
cli
sar
and
cli
bound
mov
outsl
sbb
cmp
testl
jno
pop
inc
mov
sbb
fstl
daa
push
lock
add
outsb
push
inc
sbb
sbbb
xchg
jmp
fdivp
test
test
stc
jbe
aam
insl
stc
data16
or
mov
and
mov
mull
outsl
lret
in
sub
cmpsb
mov
paddw
out
jb
negl
fcompl
lods
fistl
lcall
adc
js
and
mov
je
sub
or
test
mov
adc
icebp
sahf
pop
stc
inc
pop
xchg
cmpsb
xchg
and
adc
or
adc
stc
mov
mov
fs
adc
cmp
sbb
push
adc
sub
sub
xchg
divl
out
call
push
pop
jecxz
gs
adc
in
jae
inc
fcmovnb
nop
push
jge
insl
push
xchg
sub
and
push
mov
xchg
mov
cmpsb
or
mov
fwait
cmp
out
mov
fwait
stc
ja
imul
cmp
push
dec
int3
fwait
xchg
jp
xchg
testl
inc
adc
je
mov
dec
loopne
xor
jno
or
aas
mov
daa
imul
push
cmp
fnsave
loope
jle
xchg
sub
dec
xor
jae
ss
bound
mov
loopne
jno
mov
outsl
add
jo
in
in
push
ds
sbb
xchg
dec
ljmp
leave
xor
rclb
push
xchg
add
out
jge
push
stos
sub
and
minps
shlb
imulb
sub
cmp
inc
mov
xchg
insb
loopne
adc
or
push
or
and
xchg
cmpsl
mov
push
jp
inc
inc
repz
mov
in
imul
dec
lcall
mov
nop
mov
mov
sub
cwtl
cmp
test
jb
mov
lds
movsl
daa
pop
ss
inc
mov
js
mov
sub
leave
das
xor
daa
lock
out
test
into
cmpsl
push
cmp
adc
int3
inc
pop
bound
xor
lods
jmp
sbb
scas
add
xor
ret
loope
nop
cmpsb
jb
mov
aam
xchg
or
nop
lods
ds
jp
fs
adc
sub
gs
push
mov
push
inc
in
push
mov
ss
dec
sarb
loopne
dec
repnz
lock
outsb
pop
cmc
cmc
pop
loopne
jle
push
mov
mov
loop
imul
out
push
sub
adc
mov
sbb
leave
shl
enter
lcall
sbb
mov
xchg
mov
into
leave
cltd
mov
push
sub
pushl
gs
cmpsb
cmpsb
stos
push
and
and
insb
push
in
pop
inc
adc
sarb
mov
iret
push
imul
jno
jnp
pop
pop
aam
aaa
das
nop
sbb
loop
imul
jl
mov
sbb
xor
aas
add
sbb
shrb
add
push
inc
sbb
xor
or
lcall
aas
xor
mov
xchg
inc
add
and
lret
fwait
mov
push
test
add
pop
jno
fwait
repnz
jo
jl
icebp
popf
jnp
and
hlt
std
mov
pop
inc
cld
andl
mov
hlt
adc
xchg
inc
addr16
lret
in
add
movsl
gs
push
movsl
sahf
and
xchg
lock
pusha
or
sub
push
daa
mov
notl
cmc
mov
loop
je
in
pop
imul
cmp
mov
cld
loop
shrb
test
pop
sbb
jns
fnstsw
mov
xor
mov
mov
out
faddp
sar
test
sahf
das
mov
mov
cmp
cwtl
into
in
adc
jo
aad
enter
stos
scas
js
mov
jo
sub
add
ja
mov
test
and
inc
jg
adc
adc
pop
and
sub
leave
dec
daa
fmulp
sbb
push
adc
bound
in
dec
in
inc
fdivs
add
mov
adc
sub
pop
lret
mov
scas
mov
jne
sbb
int3
inc
cli
pop
mulb
adc
sarb
bnd
mov
lcall
sub
add
imul
lods
popa
aam
add
xor
jne
mov
out
lds
mov
pop
inc
into
push
test
mov
push
sahf
dec
decl
aam
xor
cmp
mov
and
push
shl
je
and
cmpsb
addr16
fsubrl
dec
add
cltd
jns
popf
mov
and
sub
into
push
aaa
rcrb
mov
sub
cmpsl
int
shll
push
rcrl
lock
push
fmull
ja
adc
mov
push
inc
mov
int3
test
aad
loope
pop
jbe
adc
movsl
shl
loop
mov
subb
in
lret
stos
xor
leave
cli
int3
add
aad
rorl
xchg
xor
loope
imul
pop
sub
push
mov
push
stos
cmp
or
sbb
cmp
xor
shl
jl
and
xlat
inc
inc
mov
insb
xor
inc
shll
sarb
cmp
jge
jbe
cmpb
jne
dec
or
arpl
lds
pop
ret
roll
cmpb
xchg
adc
loopne
or
addr16
mov
aam
repz
popf
in
mov
lods
into
outsl
jno
setge
and
and
push
sub
mov
inc
lds
lret
xchg
shl
jp
jmp
insb
mov
incb
push
in
pushw
lret
inc
xchg
adc
xchg
inc
push
or
call
mov
sarl
lea
xor
xchg
sbb
mov
mov
out
int
pop
add
aaa
adc
push
fs
sbbb
cmp
pop
mov
hlt
pusha
shlb
mov
imul
jne
cmp
call
insb
pop
mov
inc
fdivrs
lods
stos
imull
adc
insb
mov
in
andl
imull
into
inc
out
lods
add
jbe
iret
add
lock
dec
test
pushf
mov
fistl
shll
jb
sbb
xor
imul
repz
and
cltd
or
call
cwtl
in
shlb
mov
ja
fwait
ret
cli
push
or
mov
push
in
incl
add
popl
ljmp
mov
je
mov
fcmovu
pop
mov
push
add
and
rorl
aam
sbb
psllw
mov
mov
cmc
idivl
jae
stos
inc
sbb
fistps
sti
fucom
sbb
pop
pushf
adcb
dec
xor
push
stc
lahf
loop
movsl
sbb
xchg
aad
test
cmpsl
insl
mov
jo
test
jl
xchg
aam
cld
mov
nop
inc
sub
inc
sub
loope
sub
clc
ret
movsl
inc
cmp
lock
xor
out
lods
xor
push
je
fisubrs
mov
dec
sub
test
mov
sub
push
sbb
lods
cmp
and
push
inc
push
js
addr16
sbb
adc
xor
test
repnz
repz
adc
stos
negl
leave
cmp
mov
adc
lret
and
inc
addr16
or
mov
ss
push
pop
data16
or
fcomps
fstl
stc
in
jmp
mov
mov
sub
mov
pop
scas
lock
loope
sbb
enter
stos
jle
out
sub
xor
mov
in
jle
incl
mov
imul
fs
ret
mov
jp
xchg
pop
out
mov
fdivr
xchg
cs
push
cmp
pusha
jle
enter
aad
add
jno
mov
clc
cmp
and
and
cmc
std
mov
fistpl
mov
lods
sub
dec
daa
aad
aam
or
xlat
mov
sbb
dec
out
pop
mov
xor
les
push
mov
inc
daa
xor
sbb
insl
inc
sbb
loope
pop
lfs
pop
into
mov
mov
adc
lea
push
in
add
insb
xchg
outsl
push
mov
jns
push
insl
xor
or
ficoml
mov
adc
movsl
and
cmpsb
xchg
out
pop
xlat
add
dec
fadds
dec
call
jl
test
movsl
ds
hlt
repz
inc
shlb
aam
test
bound
jp
sbb
fwait
adcb
std
arpl
leave
sbb
pop
movb
test
es
mov
mov
mov
aas
pop
adc
and
movsb
aaa
mov
xchg
adc
jne
ret
cwtl
xchg
xor
or
dec
lcall
jne
add
pop
and
mov
xchg
pop
or
jnp
jecxz
jl
push
xor
std
fsubrl
jns
jge
jl
les
loopne
fwait
outsl
pop
dec
fcomps
std
jmp
mov
lods
push
cmpsb
lret
cld
push
mov
push
inc
fldenv
sbb
add
in
jns
sub
xchg
xchg
js
leave
fdivr
mov
jl
push
sub
ret
mov
push
jl
mov
push
test
push
out
jg
shlb
xchg
or
and
dec
push
pop
popa
loop
jp
xor
sbb
xchg
sarl
orb
or
sti
int
ficomps
dec
out
repnz
mov
testl
xchg
lret
int
popa
outsl
lds
sahf
xchg
test
jmp
js
pop
sti
mov
dec
xor
cmp
cs
flds
cltd
adc
dec
insb
sub
xlat
mov
cli
mov
pop
sbb
xor
or
xchg
push
fwait
out
outsb
add
xchg
or
xor
into
push
push
clc
mov
insl
testl
xchg
mov
ja
fistl
sub
sub
mov
cld
push
xchg
adc
into
mov
scas
mov
push
mov
jecxz
imul
xchg
lcall
lahf
out
mov
sbb
jno
push
ret
pop
inc
push
or
movsb
cmp
in
and
xchg
dec
enter
pop
xor
in
jmp
xlat
jae
out
jnp
sub
sbb
lods
add
sbb
outsb
sub
push
aas
xor
inc
jle
orl
add
dec
lret
jecxz
mov
adc
mov
cmc
lahf
pusha
mov
dec
insb
xchg
mov
dec
pop
xor
divl
xchg
jecxz
inc
xchg
fldcw
popf
mov
ljmp
pop
icebp
cs
rcr
imul
leave
xchg
lcall
inc
insl
inc
jcxz,pn
sbb
cmp
rorl
jp
in
leave
sub
jmp
loop
dec
pop
int3
fdivs
stos
mov
push
inc
or
lea
or
jb
adc
into
nop
scas
push
inc
ret
leave
dec
sub
fmull
and
cmc
or
xchg
imul
call
ds
jb
fimuls
pop
orb
xor
mov
fdivrs
adc
push
loop
mov
pop
addr16
fstpt
add
test
mov
movsb
xor
cmp
dec
and
inc
cs
addr16
enter
adc
pop
xchg
mov
pop
lods
push
mov
sub
mov
inc
fisubl
push
jb
aad
das
fldt
dec
pop
test
fnstenv
cld
lret
orl
push
jae
enter
popa
pop
mov
cmp
mov
aad
jl
daa
xchg
mov
sub
arpl
sbb
mov
out
cltd
mov
lods
or
xlat
push
pop
mov
or
mov
dec
mov
mov
adc
cmp
lods
inc
loopne
dec
std
addr16
or
popf
sbbl
lret
es
sub
push
mov
xchg
imul
lret
inc
movsl
xchg
aad
bt
scas
lcall
dec
repz
jp
imul
inc
mov
jae
mov
ror
xchg
pusha
mov
lahf
add
inc
shrb
out
shll
test
inc
push
mov
push
jge
outsl
jnp
out
std
mov
out
push
jno
inc
cmpsb
xlat
pop
inc
pop
outsl
mov
ret
xchg
insl
lods
mov
sbb
imul
andl
mov
rcll
mov
rcll
xchg
cmp
xchg
jg
jnp
dec
sahf
and
popa
mov
xor
xchg
and
inc
jno
jp
mov
mov
stc
loope
jo
push
scas
pusha
ja
aas
mov
pusha
test
cmp
jecxz
push
lret
nop
rclb
sub
rorb
mov
add
xchg
mov
push
sub
xor
xlat
mov
inc
xor
in
or
jno
mov
and
nop
fldcw
sbb
inc
push
aas
mov
outsl
adc
push
mov
lcall
xor
cmp
sti
shlb
inc
mov
lret
adc
lock
pop
in
cli
push
sbb
inc
pop
inc
or
mov
jmp
push
sbb
dec
cmp
ds
inc
jbe
test
dec
pop
dec
iret
xchg
orl
adcl
repz
pop
jb
and
and
pop
jb
xlat
test
das
mov
mov
xor
inc
dec
sar
cltd
pop
cs
in
std
dec
add
gs
in
mov
popa
out
cld
ds
sbb
cmc
sbb
fwait
test
mov
scas
in
jl
xor
in
inc
shll
clc
push
std
cmc
mov
pop
lock
mov
add
sub
rcrl
loop
jb
stc
sbb
jb
fiadds
jb
push
ret
inc
xor
inc
call
div
jl
lret
mov
flds
add
or
ljmp
xor
mov
idivb
push
jno
popa
insl
and
mov
pop
inc
xchg
les
and
out
push
sbb
addr16
cmpl
ljmp
sbb
cmp
xchg
mov
pusha
jae
stc
mov
xor
cmc
outsb
jge
sbb
or
rolb
cmc
sti
jmp
mov
andb
imul
addb
pop
adcl
aas
out
mov
ficoml
xchg
imul
arpl
repz
sub
push
sbb
test
xor
mov
gs
pop
test
cmpb
cmp
das
and
mov
bound
add
adc
xor
push
movb
xchg
rcrb
mov
pushf
mov
testl
mov
jno
mov
push
in
inc
mov
jbe
push
cmp
dec
shll
xor
mov
fstpl
mov
scas
inc
scas
int
mov
jmp
sub
repz
rolb
jl
ret
and
mov
ds
shll
out
cmpsl
mov
imul
push
cwtl
rclb
outsb
dec
add
mull
stos
inc
dec
mov
jo
testl
mov
outsb
lret
bound
fldenv
cmp
mov
push
mov
mov
or
pop
out
sub
roll
xchg
jmp
rep
and
popa
add
in
ficoms
shll
cli
pusha
cmp
bound
fsubl
ficoml
frstor
iret
lds
lods
lahf
out
adc
mov
test
push
jb
sbb
sbb
jp
addb
or
push
xchg
repz
std
shl
loop
adc
inc
test
jno
inc
std
dec
leave
mov
cmpsl
ret
and
in
int3
mov
pushf
outsb
loope
mov
cltd
fadds
in
sub
and
or
sbb
jbe
daa
or
mov
jle
jns
gs
inc
lods
loope
loop
fcmovnbe
mov
lods
aas
in
add
shrl
ds
out
jbe
jp
mov
popf
decb
push
jb
enter
mov
jns
repz
and
push
loop
pop
arpl
cs
xchg
xchg
gs
out
or
ljmp
pop
inc
sar
icebp
rcll
xor
adc
sbb
hlt
xchg
daa
and
cmc
sti
adc
pop
xchg
mov
addl
fadd
outsb
xor
inc
mov
sub
dec
mov
ds
jmp
subb
icebp
jne
cmp
push
andl
scas
mov
xchg
and
push
sub
mov
dec
ret
stos
loopne
call
or
pushf
sub
mov
cltd
ret
pop
jnp
sub
pusha
enter
jmp
sbb
int3
cmp
outsb
out
cltd
jmp
ret
jle
mov
push
js
add
cmpsb
mov
repnz
outsl
xor
xchg
gs
fld
mov
loopne
faddl
addr16
jmp
cmp
xor
and
inc
xchg
or
loopne
sbb
jle
fwait
jne
sahf
test
sub
icebp
push
xchg
jne
lock
loopne
les
mov
loopne
adc
decb
shlb
cmc
decb
ja
popf
pop
aad
bound
mov
pushf
push
dec
jecxz
jecxz
shrb
movl
dec
out
pop
xchg
out
sub
pushf
dec
mov
mov
or
fwait
es
enter
addr16
movsb
cs
push
push
insb
pop
fldpi
adc
in
or
outsl
jg
out
adc
push
cmp
das
insl
push
sarl
pop
mov
xchg
inc
inc
fiadds
loope
call
cli
push
sti
mov
xchg
and
cmp
in
ret
pop
mov
decl
fdivp
fldl
cmc
pop
cmpsl
movsb
in
and
int
ds
pop
sarl
jae
out
jl
jmp
movb
sbb
rol
test
cmp
fwait
push
push
pop
inc
jp
arpl
out
mov
popf
cwtl
js
push
add
inc
and
pushf
xor
xchg
outsb
scas
lret
movsb
pop
push
sub
xlat
cmpsb
bound
xchg
mov
in
push
aad
pop
fbstp
sub
rorl
sahf
bound
mov
jg
aam
in
int
mov
push
mov
std
lea
mov
es
xchg
sbb
ds
ja
jns
inc
loopne
inc
in
loope
test
mov
sub
sub
in
add
fwait
sbb
xchg
jo
int
push
faddp
test
aas
out
and
in
aas
out
xor
les
cmp
loop
call
sbb
dec
add
or
xor
jge
das
mov
cmc
xchg
xor
cmp
repnz
in
cmc
sub
daa
mov
xchg
adc
add
in
lods
aas
dec
out
jp
xor
mov
cmpsl
pop
nop
sub
inc
cmp
xchg
iret
xchg
mov
cmp
testl
dec
movsb
idivb
jnp
cmc
fsubl
mov
xor
adc
divl
arpl
in
dec
and
popa
or
fnsave
xchg
pop
rcl
jb
xor
jp
inc
lea
jne
aaa
xchg
bound
out
pop
dec
xor
mov
and
repz
call
mov
int3
jnp
popl
fmuls
sub
sbbb
xor
pusha
aad
fcomps
push
mov
mov
xchg
sbb
sarb
push
icebp
int3
lds
mov
int3
cmp
out
and
sbb
cmp
mov
rep
test
mov
adc
and
hlt
in
push
adc
gs
cmp
rcll
jmp
movsb
xor
adc
cmp
out
leave
ljmp
push
and
inc
pop
dec
js
cld
insl
sub
cli
mov
xchg
sti
dec
test
dec
cltd
add
sub
push
movsb
repz
aaa
inc
aad
push
jb,pn
mov
or
inc
test
aam
ja
mov
lcall
pop
lret
jo
sub
cmp
les
outsb
or
nop
cmp
shlb
or
inc
dec
cmpsb
cld
in
pop
imul
loop
mov
mov
loopne
pushl
sbb
and
scas
subl
mov
inc
adc
lahf
nop
cmp
movsl
stc
mov
and
movsb
mov
or
rclb
push
in
ja
jb
loopne
out
ret
cld
mov
addr16
in
and
arpl
sbb
mov
mov
fs
jae
and
mov
inc
and
dec
ret
mov
xchg
xor
add
and
out
xor
cmpl
push
inc
cmc
add
cmpsb
and
rcll
adc
rolb
fnsave
mov
mov
push
ja
cmpl
mov
bound
gs
cmp
or
mov
mov
out
imull
jns
pop
inc
xor
mov
and
rol
outsl
lahf
je
mov
or
andb
fcoms
ss
scas
sahf
jmp
popf
popf
dec
mov
or
in
mov
insl
push
push
mov
xchg
mov
rcrb
cmp
test
xor
outsb
and
in
xchg
pop
add
or
repnz
mov
repz
imul
pop
jo
lods
fisttps
ffreep
sahf
add
popa
ficoml
mov
fldenv
push
insl
stc
in
sub
add
and
fidivs
bound
inc
jae
pop
repz
repz
adc
enter
mov
mov
pop
das
loopne
stos
push
cmpsl
pop
rcr
aas
mov
jne
loop
push
xchg
xchg
imulb
push
inc
fucomi
lret
and
pop
adc
mov
add
rcll
or
lret
je
mov
mov
sahf
xchg
mov
xrelease
adc
sub
fs
inc
loope
fisttps
sbb
inc
pop
lock
into
adc
mov
push
mov
aad
aaa
and
out
sub
pop
jge
adc
inc
pusha
adc
and
ret
loop
mov
arpl
dec
popf
cmpsl
test
xchg
adc
pushf
push
pshufw
out
sub
inc
in
adc
inc
or
movsb
icebp
jae
push
jge
es
cmp
pop
outsb
lcall
xchg
jnp
imulb
lods
cld
add
jno
sub
mov
lock
pop
ret
stos
sbb
cwtl
lods
dec
pop
jle
hlt
push
adc
enter
sub
sahf
out
cltd
scas
or
in
rcrl
fsts
and
pextrw
ret
inc
pop
sbb
mov
ds
xor
cwtl
adc
mov
xchg
das
scas
rolb
mov
js
add
jo
inc
lahf
fisubs
out
ret
dec
lock
in
add
test
fs
fnsave
push
dec
cmp
cmp
inc
and
adc
mov
dec
cmc
or
in
or
les
data16
xchg
sti
inc
mov
and
pop
adc
in
xchg
sarb
add
jnp
inc
sub
and
addr16
mov
clc
les
adc
daa
sub
or
xor
add
iret
test
jno
push
rol
movsb
adc
pop
mov
dec
jbe
cmp
hlt
adc
sar
jae
inc
inc
std
insl
mov
fistps
xchg
js
push
add
mov
inc
lock
jbe
push
cmc
sub
mov
push
stos
and
mov
dec
bound
mov
xchg
cmp
push
adc
testl
xchg
mov
inc
jecxz
xor
mov
lds
xchg
add
pop
js
sti
lea
and
lahf
cmp
aas
in
adc
mov
and
mov
ds
imull
lods
inc
sbb
inc
mov
ljmp
ljmp
jb
sub
pop
push
rolb
push
xor
cs
adc
movsb
jmp
inc
and
test
dec
jp
jge
dec
outsl
mov
push
add
and
call
mov
or
fcomip
call
repnz
in
fs
rcr
pusha
jge
cmp
sub
jns
cmp
cli
loopne
shr
jmp
sbb
jle
aad
pushf
cmpsl
pop
stos
fisttps
rolb
enter
in
fisttpll
idiv
and
and
arpl
push
or
mov
mov
jmp
pop
jns
add
push
mov
ret
adc
jae
icebp
mov
sbb
cmp
into
pop
mov
jbe
ljmp
sbb
rolb
clc
dec
and
pushf
mov
mov
js
into
mov
cs
cmp
pop
adc
addr16
adc
lea
movsb
aaa
dec
mov
mov
fprem1
lret
movsl
pushf
es
and
lea
mov
ficompl
sti
dec
pop
aad
pop
adc
add
shl
pop
repnz
mov
xchg
push
and
call
ljmp
aaa
lods
in
dec
out
add
pop
xchg
fs
mov
gs
fsubrl
or
sbb
xchg
inc
sbb
mov
loop
push
mov
mov
sti
mov
arpl
mov
sbb
inc
les
cltd
ja
sub
mov
je
arpl
rcll
mov
sbb
dec
ljmp
cmp
push
cltd
pop
rcr
ja
push
sbb
xor
xchg
push
or
pop
nop
into
and
mov
xchg
test
popf
jmp
add
push
stc
andb
lds
pushf
mov
into
jne
or
jo
push
xor
loopne
push
in
je
sbb
mov
add
mov
fidivs
es
out
add
mov
jle
rorl
or
or
sbb
shlb
push
daa
lret
mov
arpl
cmp
insb
rcrl
inc
xorl
shrl
outsb
pushf
scas
sub
push
lcall
adc
in
push
sti
popf
lahf
cli
or
stos
aad
cld
jmp
cmp
mov
stos
repnz
gs
pop
xor
fdivrl
loope
nop
mov
popf
scas
clc
xlat
push
mov
outsl
pop
rcrl
ds
shl
push
test
ret
pusha
in
ja
jno
mov
stc
mov
shll
and
push
pop
jae
mov
aas
adc
std
cmpsb
test
cmp
fcomps
in
xor
add
mov
lods
jp
and
push
out
dec
outsl
dec
cmp
xor
cmp
inc
jno
data16
and
aaa
shl
pop
repz
test
out
rclb
js
adc
adc
inc
lods
sbb
jp
into
scas
or
jl
loope
mov
shrb
add
jmp
and
lahf
and
test
fstl
dec
inc
sub
sbb
cmp
sub
mov
sahf
aaa
pop
imul
jb
or
outsl
add
push
xor
insl
inc
insb
stos
mov
ljmp
subl
xor
movsl
mov
mov
and
dec
test
mov
mov
fs
orl
xor
cmpsl
popa
inc
in
es
in
stos
repnz
lret
movsb
loope
jp
mov
sub
fstps
xlat
dec
dec
push
cmpsl
divl
lds
or
lret
cmpb
xchg
xor
hlt
stos
sbb
xlat
loopne
test
leave
pop
mov
lods
push
or
nop
mov
xor
loop
pop
xor
dec
push
jbe
adc
xchg
out
push
fcmovnb
decb
je
adc
stos
repnz
mov
dec
mov
outsl
sbb
dec
push
lret
fistpll
lahf
lea
cmp
hlt
pushl
pushf
xor
xor
sti
adc
mov
icebp
daa
sub
stos
pop
and
inc
nop
sbb
outsl
cmp
add
add
aas
push
mov
cmpsl
push
or
push
divb
iret
sub
sub
cltd
enter
dec
ret
sbb
or
rol
and
or
fsubl
sub
mov
adc
subb
xchg
scas
loope
sub
incl
mov
fcompl
mov
test
push
or
aas
mov
in
mov
cmc
cmp
sub
mov
int3
sub
shrb
xlat
fucomi
fidivs
add
dec
aas
shl
sahf
push
roll
add
fmuls
scas
loope
mov
push
ret
roll
cmpl
jmp
ja
movsl
movsl
popa
mov
xlat
push
or
test
ret
ljmp
pop
add
cmpsb
mov
inc
rolb
frndint
jne
popf
imul
movsb
lret
push
sbb
sub
lret
lds
cmp
fidivs
call
repz
mov
mov
adc
dec
pushf
jb
adc
adc
push
fidivrl
cwtl
add
sti
fs
fs
pop
je
pop
jno
outsb
neg
mov
outsl
mov
inc
pusha
push
push
jno
dec
nop
sbb
xchg
xor
call
mov
inc
mov
and
out
xchg
sub
adc
testb
xor
mov
jp
xchg
scas
jg
mov
ja
pop
aaa
inc
fsubrl
sti
repnz
rolb
lods
andl
addr16
rolb
std
jnp
pop
and
add
xor
mull
cwtl
and
mov
inc
ret
dec
sti
jl
psrad
insl
daa
jbe
inc
mov
cmp
sti
filds
pushf
cli
iret
dec
rclb
inc
mov
lret
aam
inc
or
lret
push
test
bound
in
aaa
xchg
cmp
addr16
jge
out
std
test
inc
test
inc
mov
add
mov
lcall
sbb
mov
mov
inc
stc
insb
iret
sub
jo
test
aas
dec
lock
xchg
imul
or
xlat
ret
jo
inc
jp
sbb
lret
jno
decl
out
mov
dec
jge
sub
mov
push
dec
dec
push
pop
sahf
int3
sbb
js
stos
int3
sub
stc
mov
cmp
mov
xor
clc
xchg
in
mov
jecxz
adc
jp
xchg
adc
mov
je
popf
jmp
add
lods
stos
or
adc
ja,pt
adc
xor
mov
shl
inc
sarl
mov
ljmp
int3
pop
sbb
xor
les
je
mul
push
push
sti
pop
mov
popf
dec
fs
dec
cmp
or
lods
xlat
out
and
lock
lods
aas
ja
shl
aam
xlat
mov
pop
sbb
cld
push
sbb
or
lret
pusha
dec
add
xlat
repz
js
add
adc
mov
and
xchg
je
jne
jmp
mov
fdivp
sub
push
or
dec
out
imul
inc
dec
pop
sub
js
data16
mov
clc
sbb
lock
mov
sbb
push
adc
sahf
jle
jns
jp
ret
adc
setne
jns
fxch
xchg
out
aaa
aad
pop
scas
or
lods
sbb
hlt
popf
cmp
bnd
aas
push
hlt
ss
mov
push
or
outsb
out
xchg
pop
adc
adc
xchg
xchg
mov
add
mov
pop
div
test
fildl
pop
das
mov
xor
clc
mov
mov
cld
fnsave
push
pop
ljmp
mov
xchg
cltd
call
sbb
pop
cmp
addr16
or
fcoml
xchg
mov
aas
mov
add
shl
push
icebp
shlb
rcll
mov
mov
cld
mov
pop
jp
shrl
call
mov
mull
inc
xor
xchg
mov
test
stc
ret
dec
aad
cs
inc
sbb
or
out
mov
pop
fimuls
arpl
or
inc
shrl
decl
adc
fistps
std
lret
xor
call
fisubl
mov
xor
push
js
dec
insb
icebp
int
jne
addr16
mov
popa
fwait
or
dec
add
and
mov
mov
xchg
mov
xor
lds
cmp
add
and
lock
jno
pop
outsl
fcoml
xor
cmp
mov
mov
mov
out
lds
stos
shrb
or
add
mov
push
int
pop
push
push
or
cwtl
cmp
aad
hlt
adc
adc
daa
ret
ss
mov
xchg
xchg
xchg
jmp
test
push
in
pop
lods
mov
mov
test
jge
fimuls
mov
inc
xchg
add
xorb
shl
mov
idivl
lret
in
movsl
es
aam
mov
iret
push
dec
ret
fstl
lock
mov
in
xor
and
sub
les
sub
add
mov
scas
mov
repz
ret
aas
dec
push
xchg
repnz
lods
lahf
fidivrl
mov
cmp
mov
ss
int
mov
leave
jb
jecxz
ds
adc
popa
jne
mov
in
add
adc
stos
cmp
fidivs
sbb
mov
int3
popf
pop
fwait
lret
mov
or
outsb
sbb
or
inc
mov
dec
pop
fisubrl
clc
out
push
out
jnp
call
push
sbb
mov
idivl
xorb
in
sbb
dec
loopne
push
dec
sbb
insb
out
jmp
mov
cs
fcomps
test
sbb
push
cmpsl
xor
mov
mov
iret
test
sub
fcmovnb
shrb
xor
nop
mov
mov
push
push
gs
add
adc
fistl
inc
fwait
xlat
lret
and
push
add
jge
xchg
add
ljmp
rorl
fs
ljmp
push
ds
add
push
in
dec
scas
mov
test
popa
cltd
sub
pop
mov
xor
in
and
add
mov
arpl
xorl
shrl
or
in
addb
fs
xchg
xchg
xor
test
adcb
adc
jb
loopne
es
sub
imul
sub
fisubl
jae
and
shrb
dec
out
xchg
clc
pop
stc
push
arpl
inc
inc
scas
lods
cmp
inc
mov
fdivs
movsl
ret
lods
subb
andb
sbb
subb
mov
fldcw
adc
vmread
out
fbld
lret
pop
je
adc
inc
push
push
cmpsb
aad
addr16
sbb
xchg
sbb
adc
fyl2x
sbb
dec
xchg
mov
cmp
or
inc
das
aaa
lods
or
jle
repnz
mov
sbb
push
xlat
mov
sbbb
and
push
sbb
xchg
jo
and
adc
cmpl
adc
or
adc
xor
sub
pop
xchg
data16
jp
sarl
orb
stc
inc
add
repz
inc
in
mov
push
idivl
cmp
mov
xor
stos
adc
sub
inc
push
bound
repnz
movsw
imul
and
push
dec
dec
and
dec
sbb
loope
out
inc
repz
int3
push
loop
or
ds
and
aas
xchg
sbb
jecxz
xor
dec
add
inc
nop
ret
enter
push
ret
add
ss
cli
jnp
push
ficoml
loopne
repnz
push
xchg
outsb
int3
xor
or
shl
ret
inc
mov
push
lods
add
sbb
insl
xchg
loope
jle
and
pop
ljmp
fiadds
mov
mov
jl
mov
jnp
and
or
mov
cmc
scas
dec
sbb
pop
sbb
rcrb
jae
mov
jb
and
fwait
push
adc
mov
mov
inc
test
cmpsl
mov
imull
nop
shll
sbb
pop
lods
and
shrb
mov
jmp
xlat
push
nop
mov
cmc
push
sbb
dec
push
ret
inc
stc
lcall
ret
iret
shrl
add
mov
jge
and
daa
dec
dec
sub
jo
mov
lods
push
pop
nop
shlb
cltd
loopne
jecxz
or
inc
xchg
std
xor
popf
repz
mov
jecxz
pop
cmp
inc
call
xor
movsb
movsb
push
add
subb
scas
cmpsb
jecxz
popf
test
push
sbb
sahf
jl,pn
cld
pushf
loopne
sti
add
cmp
adc
in
jle
xchg
andl
push
jb
fcmovu
mov
pushf
push
icebp
les
adc
rcll
sub
sbb
insb
mov
dec
dec
push
xchg
fdivrs
hlt
dec
movsl
mov
mov
jo
jo
add
inc
pop
dec
enter
pusha
test
sub
add
jo
enter
movsl
mov
cmpb
outsl
add
xor
cmp
cmp
dec
mov
not
jbe
inc
mov
jbe
addr16
ret
mov
pushl
xchg
xchg
lahf
cwtl
cmpsb
movsl
fsubrs
xchg
xchg
push
fists
or
mov
outsl
sub
leave
dec
pop
pop
sub
fisttps
pop
sbb
fnstenv
or
adc
cmp
daa
jb
sbb
jae
imulb
add
popa
push
repnz
jge
adc
xor
pop
pop
aam
loop
sub
daa
jmp
adc
dec
jbe
test
test
xor
jne
out
dec
pop
lock
gs
nop
pop
mov
lods
push
adc
cwtl
lret
push
in
inc
sub
lahf
inc
mov
or
lea
jo
xchg
inc
or
push
xchg
dec
adc
dec
jmp
inc
mov
xchg
xorl
push
push
push
int
sub
test
call
mov
dec
enter
cltd
xchg
jns
inc
mov
push
xchg
sti
not
mov
outsl
sub
pop
pusha
xchg
jbe
andb
lret
nop
jo
sbb
out
jno
test
repz
popa
pusha
inc
pusha
sti
sti
xchg
stos
sub
mov
jge
add
andb
xor
adc
in
sub
xchg
gs
hlt
cmp
mov
es
sbb
jae
adc
push
inc
mov
xor
and
fiaddl
mov
cli
stos
mov
mov
test
rorb
out
adc
xchg
outsl
pushf
out
mov
cmp
sub
jle
int
or
jo
mov
add
dec
push
push
pusha
sub
mov
jge
pop
leave
fdivr
lcall
sub
enter
jg
pop
outsb
mov
mov
nop
inc
lods
mov
mov
imul
out
cwtl
mov
and
mull
cwtl
xchg
or
mov
jp
push
inc
inc
sub
sub
addr16
lods
add
outsl
lds
outsl
lcall
sbbb
add
mov
test
fwait
js
mov
cmpl
je
out
loop
andb
mov
imul
and
push
outsb
cmp
imul
cmp
jb
sub
pop
repnz
xor
bound
loopne
adc
lods
pop
inc
hlt
pop
fisubs
std
fs
subb
xor
mov
fstl
mov
std
xor
xor
cmp
out
jno
jge
ret
pushf
std
mov
xchg
pop
fdivrl
xor
aam
das
shrl
stos
les
test
add
sbb
imul
std
out
inc
mov
xchg
or
insl
addl
das
or
mov
sbb
cmc
int
shrl
jg
out
cmp
in
sbb
push
out
mov
sub
dec
add
bound
cmpsl
cmpsb
adc
movsb
mov
xchg
jg
xchg
dec
mov
pop
in
xchg
adc
sbb
je
and
inc
fidivl
cmp
mov
pop
inc
pop
imul
sbb
cmc
push
mov
mov
lods
adc
ficoms
cli
sub
lret
imul
fimull
and
cmc
outsb
mov
mov
js
cmc
test
adc
std
lods
lahf
mov
test
stos
in
xlat
sub
push
pop
ret
fbstp
pusha
pop
cli
andl
sti
adc
push
xor
pop
ret
adc
fdivs
lods
pop
sbb
and
cs
or
xlat
jg
xchg
ljmp
fsubs
ret
jle
xchg
hlt
or
or
addr16
mov
xor
divb
jno
shlb
repnz
neg
adc
test
fsubrl
adc
inc
mov
cmp
sti
bound
loop
test
push
data16
xchg
into
xor
sti
add
ljmp
mov
lahf
int
shlb
push
fcompl
push
or
pop
arpl
cmp
dec
rorb
cli
adc
repnz
aam
sub
sub
mov
and
cli
mov
jmp
test
mov
ficoms
mov
inc
fstpl
clc
leave
test
sarl
mov
push
adc
cmp
aad
push
iret
shll
clc
lahf
cmp
adc
lock
jae
mov
sub
jl
cmpsb
inc
popa
in
push
or
inc
cltd
pop
push
cmp
dec
dec
fcmovne
push
pop
cmpsb
adc
sub
mov
mov
sbb
cmpsb
cmp
lods
add
icebp
fwait
test
pop
pop
sub
cli
aad
sbb
daa
cwtl
es
and
cmp
iret
popa
mov
popa
and
mov
cmp
xor
roll
adc
leave
lods
inc
dec
pop
hlt
stc
mov
pop
adc
xor
imul
lock
xor
test
int
vprotb
and
dec
sbb
popf
mov
pusha
xchg
es
pop
popf
or
mov
pop
aas
xchg
testl
int3
dec
arpl
dec
es
mov
shlb
lods
scas
int3
cli
jmp
into
cmp
push
sub
aaa
add
lret
outsl
arpl
in
inc
pop
imull
dec
loop
cmpb
aaa
and
sub
push
cwtl
int
mov
sbb
dec
cmp
fbstp
xor
inc
ret
hlt
mov
pop
out
and
jno
inc
shll
lahf
flds
lret
mov
sahf
inc
je
mov
arpl
lret
movsb
lods
imul
aas
lret
mov
inc
pop
sub
gs
dec
jo
sarl
pop
mov
dec
inc
cmpsl
jnp
jecxz
jg
dec
stc
xor
cmp
inc
out
das
and
adc
cmpsb
outsl
fcoms
pushf
fcmovbe
sbb
cltd
int
sbb
and
add
push
mov
pusha
sbb
adc
aad
enter
std
jae,pn
and
xchg
jl
out
sub
xor
incb
xchg
inc
mov
fadds
mov
outsl
add
ja
ljmp
inc
mov
push
popa
inc
movsl
xor
xchg
dec
dec
sahf
stos
cmpsl
mov
push
mov
les
mov
xor
mov
rorb
mov
hlt
sub
in
aam
loopne
mov
sbb
pop
jmp
pop
dec
mov
inc
gs
cmp
inc
dec
or
jb
lret
scas
test
in
xchg
or
xchg
mov
mov
sarb
cmp
push
sub
into
or
test
jmp
inc
mov
sub
fstpt
xorl
adc
sub
xchg
mov
xor
mov
shrl
ret
pushf
fistpl
xor
mov
mov
push
cmc
stos
mov
pop
adc
aaa
xchg
fwait
adc
in
mov
fsubrs
daa
hlt
mov
push
repnz
scas
cmp
outsl
dec
stos
sbb
jno
int
pushf
mov
das
sbb
stos
test
push
iret
std
sub
and
pop
cmp
stos
rcll
dec
xchg
in
mull
fs
bound
inc
mov
mov
fst
pop
lahf
leave
jge
repnz
hlt
ret
call
sbb
lea
xchg
ss
fadds
xchg
stos
push
cmp
addl
inc
out
push
pop
xor
aas
js
scas
mov
andl
jecxz
adc
mov
aam
insb
jbe
fldenv
sub
mov
imul
out
add
popf
sti
cmp
int
es
adc
jecxz
adc
pop
pop
test
filds
outsl
lcall
rorl
mov
shrb
lea
sbb
add
out
mov
call
fnstcw
movl
bound
cs
pop
popa
lret
mov
pop
jge
aad
movsl
sbb
mov
ret
fidivs
das
dec
insl
cltd
sub
xor
mov
xor
adc
rorb
loope
scas
mov
shrl
mov
sbb
ret
cwtl
adc
ss
pushf
scas
scas
and
push
pop
mov
add
das
and
xor
or
iret
imul
cmovo
dec
or
sbb
or
or
movsl
lcall
adc
cmp
mov
outsl
inc
lds
xchg
shrb
push
dec
push
push
int
dec
mull
or
add
fdivr
js
pop
and
test
insl
leave
out
sub
andb
repnz
sbb
sbb
dec
sbb
stos
push
mov
loope
jns
shll
sti
inc
jno
repz
mov
mov
dec
add
xchg
push
gs
and
pop
jl
xor
cmp
jb
in
adc
jno
mov
sbb
pop
scas
aas
xor
mov
lock
cltd
mov
dec
stc
mov
lock
arpl
inc
repz
imul
jbe
mov
add
shlb
mov
mov
insb
bound
enter
add
inc
in
ret
dec
jle
push
mov
sub
push
sub
add
daa
pushf
and
sbb
cmpsb
dec
pop
inc
lea
or
das
scas
test
pop
in
insl
mov
insl
cmpsl
or
adc
dec
sub
sub
jo
cltd
lods
jbe
add
add
popf
mov
inc
es
sti
jb
cmpsb
mov
les
testb
and
mov
lcall
jecxz
mov
mov
rorl
insb
shl
sub
hlt
je
and
mov
dec
lret
push
add
push
aaa
fidivrl
mov
dec
repz
into
cmpsb
aam
stos
fwait
jne
cli
ljmp
fdivp
mov
ficomps
test
push
cmp
enter
clc
jmp
and
in
xchg
mov
icebp
in
xor
stos
enter
daa
in
bound
or
loopne
lldt
stos
sbb
rcl
jmp
mov
into
in
and
sub
jns
lods
out
sti
sar
push
add
xor
fdivl
dec
dec
push
mov
cmpsb
cmp
dec
xor
sbb
cmp
adc
ret
mov
arpl
inc
inc
mov
add
rorb
mov
or
sti
sbbb
subb
scas
cld
scas
dec
pop
movzbl
xor
into
sbb
orb
ja
inc
add
mov
idivl
adc
push
rorl
push
test
ss
mov
cld
out
js
mov
mov
adc
pop
insb
mov
iret
sub
fstpl
mov
dec
jb
cmc
cmp
pop
fidivs
mov
and
icebp
out
decb
lods
pop
hlt
xchg
xor
ljmp
aam
jp
test
mov
mov
add
and
andb
daa
mov
xor
xchg
inc
fsubl
cmc
test
sbb
dec
lret
popa
xor
adc
fldlg2
scas
mov
push
out
sahf
lcall
test
lock
xchg
xchg
mov
out
sbb
pop
xor
dec
fistpl
popa
je
add
add
sbb
pop
ja
sbb
xor
dec
xor
mov
cmpsb
pmullw
inc
or
xchg
stos
popf
add
lock
pop
je
pop
test
nop
adc
mov
ja
leave
fs
cs
xorb
stc
pop
lret
mov
aad
popa
sbb
or
jb
ja
mov
cmp
in
pushf
pop
stc
out
lds
xor
mov
movsb
add
ja
js
aaa
jge
mov
mov
and
arpl
fadd
xor
xor
insl
bound
les
jns
into
add
lcall
gs
notl
mov
loope
ds
lods
pop
inc
les
int
mov
enter
mov
cmc
pop
xor
xor
pop
mov
fidivs
sub
mov
sbb
mov
and
pop
aad
and
pop
cmpsb
sub
pop
xor
imul
xor
sbb
imul
outsb
stos
xlat
sub
cltd
xchg
push
sbb
push
sub
xchg
sub
cmpsl
int3
xchg
mov
je
xchg
jp
shll
or
repz
leave
jb
inc
sbb
mov
dec
dec
pop
je
add
ja
inc
faddl
sahf
push
cmpb
int3
aam
fbld
stos
pop
stc
daa
pushf
int
test
xchg
dec
cmp
and
cld
xor
test
mov
xchg
bound
xor
xor
mov
mov
dec
inc
jae
push
xchg
shl
xchg
pop
or
daa
cmc
jb
dec
lock
hlt
out
andl
lret
enter
fdivs
popa
sub
mov
mov
aaa
pop
inc
movsl
mov
cmp
shl
jae
in
int3
mov
jle
adc
cmpl
sub
mov
sarl
xor
xorb
adc
mov
loop
mov
push
xor
outsl
sbb
and
or
jecxz
aam
and
inc
xchg
into
popf
or
push
in
sbb
xor
mov
dec
jno
sbb
stos
add
icebp
fidivs
rcrl
jmp
xchg
or
push
scas
pop
fsubs
pop
aam
addr16
lods
dec
pop
dec
jmp
cmp
mov
or
push
mov
call
sub
inc
arpl
addr16
mov
push
mov
into
inc
dec
xchg
xor
loop
mov
mov
sahf
sub
mov
clc
push
push
cmpsb
cwtl
ss
xlat
push
push
daa
sarb
stos
mov
sbb
aaa
xchg
adc
test
rcrl
popa
mov
andl
jmp
sub
fwait
xchg
sub
fadd
lcall
iret
rep
xchg
push
sbb
hlt
dec
sub
push
test
lret
adc
mov
xchg
mov
sbb
adc
sarb
jge
sub
shlb
sbbl
sbb
repz
xor
and
xchg
mov
int3
dec
rcll
pop
imul
mov
xchg
mov
and
and
loop
dec
pop
push
call
pushf
out
adc
loope
pop
mov
push
ds
xor
sbb
ss
xchg
pop
dec
mov
js
inc
subl
add
sbb
mov
ss
stos
pop
xorl
jb
inc
mov
dec
and
sti
and
mov
loope
mov
jbe
jae
and
mov
sbb
and
sbb
ja
test
imul
jae
int3
mov
dec
cmp
pop
jbe
iret
sub
xchg
xchg
mov
int3
movsb
inc
push
mov
fsubr
mov
outsl
test
pop
test
insl
aaa
adc
push
es
push
negb
out
mov
vmovddup
jo
mov
imul
shrb
imul
mov
jbe
lock
adc
out
xor
fstpt
inc
xchg
inc
fimull
push
sbb
filds
cld
dec
pushf
sbb
ja
push
and
icebp
adc
mov
repz
scas
fdivrs
subb
cmp
out
popf
push
mov
pop
sahf
mov
stc
or
dec
xchg
cltd
mov
popf
outsb
mov
neg
cli
sub
add
add
mov
add
mov
lcall
sarl
fildll
rorb
stc
mov
xchg
and
jge
mov
test
and
or
mov
push
xchg
jne
clc
push
stc
mov
ud1
pusha
mov
out
jecxz
sub
push
push
jne
dec
stos
fdivs
xor
mov
ss
cltd
dec
stos
ljmp
cltd
outsb
mov
cwtl
jp
ret
adcb
leave
xlat
sbb
mov
nop
in
mov
or
cwtl
orb
in
fadds
testb
fistl
jns
cmpsb
pop
cmc
pushf
es
mov
push
mov
push
std
mov
mov
pop
adc
jmp
lods
outsl
pop
ss
popa
cs
add
mov
adc
xor
cs
mov
ds
aas
mov
cmpsb
ror
xchg
pop
lea
sbb
int
sahf
jg
dec
dec
add
push
les
cmp
lds
add
lahf
scas
orl
sbb
loop
mov
shrl
cs
aaa
jmp
inc
push
cmp
fdivrs
dec
repnz
cmp
imul
jecxz
fsubrs
mov
and
pushf
mov
mov
mov
pop
popf
mov
fmull
mov
enter
or
mov
clc
cmp
push
add
pushl
dec
cmpsb
insl
and
lds
inc
jb
jle
pop
pop
mov
push
push
or
jae
sti
jge
inc
pop
arpl
xor
dec
cmpl
xchg
or
mov
fnop
lds
adc
ss
xchg
cmpsl
mov
add
cs
pop
scas
mov
mov
xor
arpl
repnz
fsubr
sar
loope
shlb
daa
test
imul
lea
adc
pop
addr16
xor
adc
inc
aam
je
xchg
idivl
sti
adc
cltd
adc
mov
xchg
jle
cmp
ljmp
pushf
push
insl
push
ret
test
sub
inc
pop
push
sti
or
mov
xor
sahf
iret
pop
sbb
mov
sbb
add
mov
cld
and
test
sbb
dec
xlat
roll
mov
test
xor
jmp
outsb
rorb
mov
adc
xchg
into
xor
aaa
cld
mov
inc
xchg
mov
mov
add
pop
dec
add
filds
hlt
addl
test
out
lock
daa
sbb
or
lahf
imul
mov
add
lock
mov
filds
fs
cmc
inc
test
pop
ret
dec
mov
mov
dec
in
gs
push
xchg
fwait
std
pop
addr16
mov
ljmp
jle
push
lcall
clc
sarb
lret
test
sti
call
imul
dec
xchg
fbstp
dec
mov
push
cmpsl
add
jne
dec
daa
inc
inc
or
xchg
std
es
imul
pop
or
int3
inc
in
mov
mov
xchg
nop
mov
idivl
sub
dec
sub
jl
and
sti
add
sub
ffreep
inc
sbb
aas
int
push
aad
add
sbb
int3
sbb
mov
cld
scas
loopne
das
jno
push
repz
mov
inc
mov
and
jne
aam
mov
arpl
jp
sarl
or
mov
cli
cld
inc
sub
test
rcpps
movsl
enter
xlat
pop
add
or
cwtl
movsb
push
loope
mov
je
adcb
cs
in
es
dec
mov
inc
call
mov
addr16
inc
xchg
push
fwait
dec
sbb
cmp
cmp
shlb
pop
testb
cmp
xchg
insb
push
movsb
cmpsl
fcmovne
adc
jmp
adc
mov
mov
div
popf
inc
ficoml
mov
dec
fsubs
xchg
jo
test
in
out
mov
xchg
out
test
cmpsb
popf
arpl
loopne
fsubs
gs
mov
push
mov
lock
imulb
les
jecxz
aad
cmpsb
insb
dec
movsb
jmp
inc
dec
cmp
roll
xchg
movsl
push
jbe
mov
push
mov
dec
cmp
push
in
in
mov
push
addl
sbb
inc
sub
rol
jmp
sub
insl
testb
xor
mov
or
lods
clc
mov
dec
mov
xlat
xchg
xchg
push
std
sbb
std
push
xor
mov
xor
hlt
fdivrs
ds
in
movsb
dec
iret
popa
push
mov
add
in
push
mov
pop
cs
xchg
mov
mov
shlb
mov
push
insl
mov
iret
cli
lods
nop
xor
push
mov
add
std
xchg
ja
mov
adc
mov
and
stc
imul
mov
fsubs
mov
dec
jmp
shl
mov
les
dec
stos
mov
js
adc
addl
aam
fnsave
loope
jno
mov
rcrb
mov
imul
clc
mov
or
push
cmc
xacquire
xchg
in
inc
adc
sbb
scas
lcall
jne
jg
mov
mov
icebp
enter
sbb
mov
dec
aad
mov
jp
xchg
test
mov
pop
stos
add
mov
scas
lock
mov
lock
dec
int3
pusha
das
stos
lea
and
and
lret
testl
fs
rorl
jae
adc
and
repnz
popf
enter
jb
pop
inc
pop
fs
cmpsb
pop
xchg
push
fcompl
lea
adc
mov
fistpll
pop
into
js
dec
enter
mov
leave
pop
or
inc
ljmp
cs
addr16
rcr
filds
mov
dec
ret
jge
or
orb
sub
adc
inc
lods
adc
inc
push
test
pop
cld
roll
bound
xchg
push
xchg
ss
sub
in
mov
popa
ljmp
adc
js
aam
add
sbb
add
ret
adc
shl
rolb
bound
adc
dec
inc
sub
js
stos
pop
mov
and
gs
mov
xchg
mov
sahf
push
jle
pop
push
std
movb
call
lret
cmc
cmp
xchg
bound
cwtl
sub
add
cli
sub
add
add
push
jecxz
push
in
dec
xor
fldl
pop
push
dec
enter
xchg
in
out
test
je
mov
in
fstps
mov
jb
jmp
cmp
popa
mov
lret
xor
js
insb
movsb
push
jmp
stos
mov
push
loop
push
ss
mov
shl
sahf
orl
push
mov
in
xchg
loope
add
inc
mov
rcrb
data16
fsub
pop
sahf
mov
or
repz
mov
pop
mov
or
dec
fwait
loopne
pusha
jns
sub
cltd
or
clc
push
jge
push
push
mov
sub
mov
xor
lcall
mov
lret
stc
rorb
js
xor
jns
imul
or
lret
inc
dec
repnz
bound
dec
mov
sbb
lods
ds
cmp
ss
orl
mov
inc
movsb
xor
out
inc
or
or
popf
cmp
mov
jo
out
mov
xchg
adc
sbb
mov
insb
push
inc
cld
andb
pushf
adc
repnz
stc
jno
pop
pop
leave
cmc
sub
or
cmp
in
fwait
jp,pn
inc
rcrl
add
and
test
cmc
lds
test
or
add
aaa
mov
sbb
ljmp
mov
testl
push
xchg
inc
outsl
nop
call
sbb
out
jge
dec
push
xor
daa
hlt
xchg
pop
cmp
pop
mov
arpl
pop
dec
out
repnz
ljmp
leave
sbb
jg
mov
mov
cmp
adc
fbstp
adc
mov
test
sub
test
call
jge
xchg
mov
jno
push
push
test
add
test
faddl
push
mov
iret
adc
into
adc
outsl
pop
xchg
push
adc
xor
sbb
dec
xchg
xchg
mov
push
dec
push
les
and
cmp
mov
xor
mov
adc
lcall
xchg
movsb
in
pop
mov
dec
xchg
mov
inc
and
pusha
push
mov
sbb
dec
cltd
jns
push
enter
sub
sub
rorb
cwtl
popa
test
xor
fst
or
inc
std
out
push
insb
inc
sbb
and
test
shlb
sub
adc
or
xchg
in
cmc
or
int
orb
mov
dec
negl
ret
jb
scas
adc
inc
add
cmp
dec
mov
lods
dec
dec
xchg
xchg
mov
add
frstor
loop
dec
push
jo
in
xor
pop
xchg
inc
ds
pop
lcall
xchg
push
mov
mov
fistps
dec
mov
les
lret
and
iret
pop
idiv
lcall
mov
hlt
cmp
scas
jno
aaa
pusha
inc
or
push
ret
mov
jae
add
jmp
xor
jns
mov
sub
fmul
mov
and
outsl
push
pop
xchg
popf
out
xchg
fiaddl
mov
and
jecxz
mov
inc
xchg
dec
scas
fldcw
xlat
xor
js
lods
ja
jae
ficompl
mov
mull
sub
mov
add
pop
adc
repnz
fcomps
mov
addl
in
jge
sub
lds
mov
ja
mov
mov
pusha
pushf
int
mov
cmp
mov
adc
mov
stos
popf
jb
aas
fildll
mov
daa
in
lds
or
fstps
pop
in
in
cmc
bound
in
push
dec
cmp
enter
adc
push
scas
dec
cmp
dec
mov
xchg
and
mov
xor
inc
out
fucomi
daa
cmp
stos
push
push
add
in
and
punpcklwd
imul
jl
aam
xor
bound
call
call
inc
cmpsb
sbb
push
xor
in
roll
push
ss
xchg
fstps
fbld
push
sbb
xchg
push
dec
or
test
push
mov
inc
jg,pn
sbb
pop
cltd
out
mov
adc
sbb
and
scas
pop
mov
mov
aad
push
cs
or
mov
mov
sbb
jnp
or
mov
xchg
pop
sub
mov
dec
push
fs
out
mov
popf
push
jns
es
mov
push
xchg
jbe
ljmp
shl
and
sub
jp
mov
ja,pn
lods
inc
xor
sbb
mov
mov
in
and
inc
xchg
cli
outsb
cmpsl
out
mov
paddusb
loope
ja
push
xchg
pusha
imul
loopne
xchg
das
jge
sub
dec
jmp
aas
icebp
in
xor
adc
push
daa
ljmp
mov
push
cwtl
imul
adc
insb
sub
int3
mov
cli
pop
jb
mov
xchg
adc
test
push
xchg
ficomps
mov
or
outsl
pop
xchg
scas
sub
sbb
cmc
mov
mov
pop
ss
pop
or
out
sub
push
dec
xchg
push
aad
movsl
je
adc
daa
jo
sbbl
bound
xor
sbb
or
sub
inc
xchg
sbb
ja
ja
daa
arpl
and
imul
adc
dec
pop
jecxz
mov
cmpsl
sub
dec
inc
fsubl
adc
scas
test
lea
test
xchg
cmp
fsubrs
arpl
mov
adc
fstl
sub
pushf
lea
push
out
mov
popf
pop
adc
hlt
fisubl
gs
out
add
or
ret
mov
call
mov
fucomi
push
mov
mov
test
lock
faddl
pushf
in
int3
mov
mov
test
dec
dec
and
mov
sub
adc
xchg
jecxz
pop
and
into
roll
int3
push
pop
les
add
in
xchg
gs
xchg
xor
pop
push
mov
fstpl
jns
mov
int3
jp
cwtl
hlt
inc
mov
or
mov
loopne
je
mov
mov
jp
add
mov
cs
cmp
stos
imulb
cmc
inc
or
in
test
push
or
fwait
hlt
stc
int3
push
jle
arpl
cmp
cltd
scas
mov
dec
sub
sbb
push
shrb
cmpl
mov
push
test
test
dec
sbb
lods
adc
jle
push
sub
lcall
sbb
sub
mov
inc
out
mov
ret
push
push
popa
pop
push
pop
dec
data16
sbbl
add
dec
jge
stos
aam
fisubrl
adc
cmc
in
movsl
fwait
loop
pop
xchg
cld
cmpsb
aad
mov
test
pop
jb
es
in
cmp
push
sti
xor
sub
mov
ljmp
and
loope
add
jl
sub
mov
loop
and
mov
ljmp
pop
pop
xor
clc
or
call
sahf
dec
stos
sar
inc
inc
test
mov
jbe
push
jae
movb
fwait
xchg
cmp
pop
out
xor
push
mov
enter
insl
nop
cmp
mov
sub
adc
nop
in
out
sbb
ret
pop
lea
shll
xor
scas
and
cli
daa
shrb
inc
or
cmpl
push
and
and
jnp
jae
sbbb
aad
adc
xchg
mov
or
rorl
fildll
lods
iret
push
add
dec
cmpsl
lret
xor
add
cmp
xchg
aam
xlat
mov
insl
rcll
mov
inc
inc
in
xchg
inc
aam
sti
iret
loopne
inc
fildl
jae
cmc
pop
pop
repz
mov
add
int
jg
loope
fmull
idivl
hlt
jmp
lock
xor
ljmp
xlat
pop
je
gs
jne
dec
cmp
pop
mov
movsl
xor
or
sub
push
jns
push
movsb
or
xor
test
xchg
pop
lahf
in
test
mov
jle
xor
xor
cmc
push
arpl
cmpsl
int
jno,pt
or
push
inc
fld
inc
mov
push
sub
jns
mov
les
lret
mov
and
imul
js
sbb
add
pushf
push
pop
push
dec
and
idiv
fmulp
mov
scas
sub
stos
cmpb
leave
vfrczps
out
stc
scas
sub
mov
pop
std
inc
mov
in
pop
test
adcl
data16
fcmovnb
aas
fsubl
jmp
xor
data16
or
addr16
or
adc
dec
sahf
into
mov
or
gs
jae
lret
jno
mull
xor
adc
adc
add
pop
mov
in
mov
loope
mov
inc
je
jg,pt
pusha
iret
mov
dec
inc
pop
sti
sbb
je
lods
mov
nop
sub
ljmp
push
lahf
pop
adc
mov
insb
pop
xchg
sbb
xor
fbld
outsb
push
aam
std
jb
xchg
in
sbb
test
xchg
lds
and
loop
repnz
dec
into
inc
mov
mov
and
fldt
fistl
ficompl
into
int
xlat
fcomps
enter
subl
jbe
insl
mov
sub
pop
mov
push
sub
imul
out
inc
lds
clc
lods
xchg
imul
fcomps
lret
pop
inc
xchg
insl
mov
sub
xchg
lret
jp
jo
pop
xchg
inc
aaa
fucom
andb
in
fs
movsl
test
mov
aaa
push
fs
jns
and
add
and
inc
mov
bound
sub
mov
cmpsb
jae
push
jp
sub
jg
insb
pop
mov
repz
cmp
mov
out
fisubl
clc
fldl
jbe
aas
inc
push
test
in
popa
dec
insl
xor
pop
or
xor
mov
add
dec
negb
imul
inc
arpl
jp
inc
xchg
daa
jg
out
cmpsl
gs
cmpsb
jno
iret
movsl
pop
lock
int
pushf
dec
add
js
outsb
insb
dec
or
xlat
shl
inc
repnz
sub
pop
pop
push
sbb
cmp
daa
jge
mov
push
inc
push
into
in
xorb
fbstp
jp
mov
xlat
lds
sbb
daa
jne
clc
xor
cmp
push
add
clc
arpl
lods
int
pop
cmpsb
push
mov
into
jns
xor
rorb
sbb
arpl
jecxz
pop
in
push
lahf
sti
dec
xor
mov
lcall
xor
imul
rcll
rclb
or
test
mov
aad
insb
cmp
mov
les
xchg
idivb
push
dec
inc
xchg
repnz
inc
xor
sbb
mov
cs
and
test
sub
clc
outsl
loop
loope
jae
aad
lcall
out
add
jecxz
cs
pusha
cmpsb
popf
out
mov
ret
inc
lcall
xchg
xchg
outsb
rcll
dec
xchg
xchg
sbb
fistpl
add
mov
in
inc
adc
adc
pop
and
jle
loope
pop
or
mov
out
movsl
sbb
mov
cmp
xlat
xchg
repnz
dec
push
xorl
arpl
int3
sahf
rcll
in
andl
adc
add
movsb
cmp
int
jns
adc
paddsw
test
inc
lahf
movb
and
aas
inc
mov
jns
stos
stc
pushf
and
ljmp
js
pop
mov
or
mov
push
sub
out
dec
sub
adc
push
pop
mov
push
jne
mov
in
add
mov
out
jmp
mov
adc
popf
jbe
cltd
pop
mov
mov
les
inc
hlt
sub
mov
jge
rcr
mov
push
pop
stc
jns
pop
push
push
and
jg
dec
or
mov
xchg
ss
popa
jp
scas
xor
aam
pop
mov
into
sahf
cld
inc
cli
xlat
jno
mov
mov
or
mov
pushf
jmp
lahf
repz
loop
xor
or
dec
add
push
lods
sbb
pusha
imul
jns
sbb
sub
xchg
call
or
iret
daa
xor
inc
mov
adc
out
sti
cmpsl
cmp
dec
lods
mov
sub
push
mov
jne
hlt
call
dec
fidivrl
scas
adc
lods
out
sub
mov
outsb
pop
push
js
push
pop
push
jbe
pop
arpl
push
loope
inc
lea
in
pushl
mov
cmp
push
arpl
sub
enter
mov
add
stc
fdivp
sti
or
dec
test
pop
mov
mov
lret
lret
sbb
movsb
push
sbb
adcl
push
mov
in
cmp
pop
pop
mov
pop
icebp
mov
adc
imul
push
and
rclb
cmp
mov
loope
and
inc
test
and
push
mov
lds
out
insl
insl
adc
inc
cmp
imul
rolb
jge
and
mov
jmp
loope
push
in
repnz
loopne
ss
xor
jmp
std
adc
int
int
cmp
fnsave
pop
mov
jl
sub
in
movsb
int
xor
lds
test
je
mov
stc
mov
push
lock
pop
jecxz
scas
fcompl
and
or
popf
dec
sbb
push
mov
lcall
push
fadds
in
mov
mov
fmul
lea
repz
cmc
dec
inc
outsl
into
shll
inc
lea
push
rorl
lods
pop
cmp
repnz
fists
dec
add
cmpsb
loopne
push
test
add
or
add
fnstcw
ret
scas
xchg
xchg
jno
daa
jo
sub
or
xchg
jb
mov
jle
push
cli
mov
inc
data16
loopne
pop
sbb
das
jmp
xchg
or
sbb
aaa
dec
stc
pop
pop
in
clc
mov
rol
in
or
mov
shll
lcall
mov
stos
xor
or
hlt
cmpsb
inc
mov
mov
dec
cmp
pop
fstpl
push
std
dec
xchg
xor
out
cmp
fwait
or
lods
xlat
les
dec
cmp
and
xchg
ror
pusha
ss
push
add
clc
sub
fsubp
sub
jmp
lea
and
aaa
jne
inc
js
iret
push
in
fdivrs
pop
pop
inc
mov
mov
mov
out
std
loope
jge
push
and
lods
pushf
mov
punpcklbw
pushf
dec
sub
add
cmp
psubusb
sbb
pop
in
dec
mov
sbbl
xchg
fwait
repnz
pop
add
aad
rcr
push
cmp
mov
adc
cmpsl
mov
and
cmp
je
cmc
popf
les
mov
imul
stos
and
mov
sbb
xor
ja
test
pop
incb
mov
lods
mov
or
enter
jb
js
push
cmpsb
shrb
push
pop
push
fidivs
test
lret
in
cli
jg
fcoml
fistps
pop
into
movsl
add
scas
jnp
outsl
pop
fdivrs
mov
push
mov
add
stos
es
repnz
repnz
sub
hlt
movsb
std
adc
loope
int3
ficoms
hlt
out
scas
jge
pop
jne
icebp
jo
xor
hlt
sub
in
fistps
in
stos
jecxz
pop
cli
xor
int
cmp
lods
xchg
mov
cmp
popf
inc
in
cltd
push
movsl
add
adc
js
sarb
add
jne
lcall
mov
insl
nop
pushf
leave
dec
mov
popf
xchg
lods
push
fidivrs
out
sbb
dec
std
std
lds
daa
push
test
in
pop
sti
lods
cmp
jge
divl
pop
fldenv
mov
nop
sahf
lahf
es
out
arpl
lock
lock
mov
pusha
sub
iret
jle
jle
testb
testb
mov
mov
pop
push
sar
dec
fwait
movsb
push
sub
or
mov
mov
ja
sar
adcl
push
ljmp
repz
cmp
or
adc
cmpsb
push
popf
lds
or
enter
test
mov
push
test
mov
add
mov
pushf
shrb
sub
cld
sbb
idiv
push
lcall
sbb
das
push
mov
pop
test
adc
jge
lods
push
lret
ds
ret
pusha
andb
rolb
dec
adc
and
adc
or
cmp
leave
jne
test
out
sbb
mulb
push
add
bound
add
ss
adc
js
or
std
jne
sub
or
scas
movsl
test
hlt
xchg
ja
int
repz
jg
push
cmp
mov
sbb
pop
mov
jnp
testl
dec
xor
out
pop
push
addr16
push
scas
mov
popa
sbb
xchg
mov
mov
clc
jmp
leave
push
stc
push
adc
sub
divb
int
pop
andl
inc
xor
xor
sbb
adc
daa
push
in
scas
lahf
aam
lret
sbb
mov
mov
jo
repz
leave
mov
sub
dec
or
and
not
or
leave
xor
mov
ds
test
leave
stos
addr16
or
fndisi(8087
mov
bound
push
aad
sub
cs
es
sbb
sar
mov
stc
ds
adc
inc
test
sbb
lahf
lea
loope
inc
lods
jge
int3
inc
mull
xorl
dec
out
lds
les
stos
repnz
popa
jae
xor
or
jmp
lret
mov
pushf
call
xchg
mov
popf
andl
fisttpl
or
adcl
push
mov
arpl
cmc
inc
fiaddl
cmpsb
call
sbb
pop
sub
sahf
fisttpll
inc
mov
push
cltd
mov
rcl
adc
sbbl
out
out
xchg
and
fldl
xchg
mov
int3
lret
inc
inc
int
inc
push
in
out
inc
int
jbe
dec
adc
dec
sub
sub
add
leave
loope
nop
dec
stos
adc
sbb
popa
stos
repz
add
cmp
cmpsl
xor
int
js
stos
push
push
in
sbb
adc
fucom
stos
inc
mov
mov
daa
pop
or
ret
sub
out
hlt
inc
mov
jecxz
jne
std
add
aaa
in
sbb
mov
fisubs
add
cmp
bound
je
push
push
or
cmpb
and
xor
insb
dec
int3
aad
aaa
movsl
insl
dec
jae
sbbb
cmp
es
and
sbb
dec
or
add
inc
and
hlt
dec
jecxz
ja
xor
adc
cmpsb
out
xorl
xor
icebp
inc
adc
inc
imul
popa
movsl
or
mov
sahf
mov
sbb
dec
xor
mov
sub
or
js
lea
jae
jo
xor
into
add
cmp
std
test
inc
xchg
scas
in
or
pop
mov
cmc
jb
imul
call
frstor
aaa
push
mov
sahf
fiaddl
xlat
lcall
jg
insb
xchg
push
or
adc
sbb
pop
iret
repz
add
mov
movsl
aaa
xor
andl
push
pop
int
lret
loop
sub
push
mov
sub
ljmp
sub
mov
mov
es
std
lock
inc
inc
jp
cli
sti
mov
push
shrb
xor
jae
cwtl
adc
inc
inc
popa
inc
arpl
jle
rcrb
adc
dec
mov
lock
xchg
cwtl
xchg
dec
pop
popf
subl
pop
pop
mov
fadds
lods
xchg
int3
mov
mov
testb
xchg
icebp
and
aaa
mov
mov
pop
and
push
xor
mov
fxch
lret
cltd
jns
cld
sbb
inc
xchg
lods
inc
push
inc
fisubrs
push
jno
mov
in
lcall
jae
jp
ret
jge
mov
outsb
insb
sbb
rol
inc
lods
shl
cmp
add
insb
jnp
jo
out
in
lea
scas
clc
mov
and
dec
pop
xlat
mov
dec
mov
xchg
xchg
add
and
xor
dec
lcall
in
bound
mov
xchg
aaa
cmp
add
xlat
andb
cwtl
fidivs
push
xchg
jmp
lahf
cli
and
dec
addr16
fiaddl
xor
test
push
test
pop
out
add
sbb
xor
daa
xchg
and
scas
js
call
call
jae
add
rolb
sbb
sbb
xlat
inc
push
into
test
jmp
fdivr
pop
cmpsl
aad
sar
sarw
mov
dec
testl
jg
shrb
rcl
xchg
mov
out
jl
push
clc
push
outsb
sbb
adc
xchg
sbb
mov
pop
adc
int3
jge
leave
in
fstpl
push
in
sahf
add
adcl
xchg
mov
mov
push
sub
insl
mov
outsb
inc
inc
ror
adc
push
popl
and
jmp
leave
jb
or
adc
or
inc
push
xor
iret
push
pop
mov
lods
mov
xor
mov
repz
sar
lock
ss
inc
and
or
mov
push
jo
xor
jecxz
popf
mov
leave
push
and
mov
mov
bound
push
cli
sbb
std
pop
jg
daa
mov
sahf
jg
jae
int
jg
dec
in
inc
mov
loopne
jecxz
arpl
lahf
add
jnp
shrl
and
insl
dec
sub
adc
jmp
or
or
sbb
inc
push
pop
pushf
subb
add
or
add
stos
and
arpl
pop
sbb
xchg
pop
and
adc
xor
xchg
out
out
adc
cmpsl
adc
push
mov
or
xor
push
std
inc
cmp
lret
sub
call
and
mov
sbb
ljmp
pop
xchg
mov
pop
adc
cmc
outsb
das
fdivl
pop
ds
push
iret
repnz
loopne
jb
lds
mov
mov
in
inc
lock
inc
imul
push
jb
popa
xchg
outsb
push
xchg
bound
and
push
xchg
pushf
das
fstl
fiaddl
or
das
ret
jl
sbb
jae
outsb
lods
test
xchg
nop
mov
add
lret
lods
rcrl
push
nop
cmpsb
sub
loop
xor
test
adc
xchg
das
add
fistps
sub
loop
dec
out
rol
adc
rclb
sub
adc
sbb
fwait
add
sub
jmp
cmp
call
mov
js
cmp
jno
push
repnz
mov
push
and
add
into
sahf
mov
or
mov
pop
jbe
pop
sbb
mov
out
imul
pop
sub
xchg
cmp
push
add
scas
std
sbb
aas
lcall
xor
scas
ljmp
cld
adc
mov
mov
sbb
dec
push
pop
data16
adc
lea
and
out
mov
add
inc
dec
mov
andl
cmp
imul
data16
push
add
xor
and
push
and
mov
dec
xchg
jae
loopne
xchg
cmp
add
or
cmp
jne
sub
or
adc
out
lret
lods
push
or
push
popf
push
jmp
ljmp
pop
inc
cli
mov
out
in
mov
loopne
stos
or
fs
call
push
call
cmp
ja
pusha
fwait
pop
hlt
pop
and
cmp
iret
and
push
neg
loop
pushf
sti
bound
pop
sbb
pushf
adc
pop
loopne
int
movl
fnsave
cmpsb
mov
pop
inc
test
jne
in
pop
mov
jp
xor
loope
aas
jmp
call
fidivrs
or
adc
pop
cmp
cs
dec
xchg
sub
scas
lcall
ret
out
mov
sub
pop
cmp
mov
insb
lock
add
sub
in
push
sub
push
nop
or
add
lea
add
push
fsub
mov
iret
nop
cmp
fs
jge
and
jbe
xor
clc
mov
xor
pop
mov
ret
mov
cmpsl
mov
mov
sarl
fnstenv
inc
ljmp
or
int
lods
into
pop
loope
gs
cmp
push
lds
loope
sub
mov
outsl
pop
xchg
and
or
xchg
jae
in
fildl
adc
into
pop
pop
xchg
or
shlb
fs
mov
mov
or
out
mov
in
push
inc
xor
pavgb
push
in
cs
test
xchg
into
test
enter
stos
jmp
orb
std
xchg
mov
xor
rcrl
inc
lretw
cld
push
ljmp
call
fimuls
enter
iret
mov
inc
movsl
jnp
lds
push
adc
mov
sbb
or
mul
sbb
mov
push
mov
loop
in
pop
arpl
in
in
xchg
push
mov
adc
mov
xorl
mov
pop
xchg
cmp
push
aaa
push
repnz
iret
jmp
popf
lods
mov
cmp
xchg
rorl
cs
fwait
add
push
nop
in
xor
or
adc
and
mov
fldz
pop
mov
cmp
popf
les
pop
or
adc
jne
and
mov
jb
lods
xchg
and
addr16
push
dec
lods
and
shlb
lahf
lods
xor
leave
les
add
movsb
fisttpl
xor
mov
pushf
notl
mov
sub
lock
ss
inc
stc
sbb
cs
mov
sbb
push
jno
fsubrl
in
int3
ds
in
in
inc
adc
ret
cwtl
cmp
pusha
jno
pop
jb
xchg
dec
int3
or
inc
mov
popa
push
add
stos
cmp
lods
mov
imul
jo
mov
in
stos
repnz
sub
jp
or
cmpsb
adc
imul
adc
sarl
mov
idivb
mov
xor
mov
in
xchg
mov
dec
xchg
popf
inc
add
je
sbb
sub
cmp
ficoml
cmp
test
dec
outsb
and
xchg
adc
inc
ud2
addr16
add
sahf
stc
aad
or
jmp
sub
int
jecxz
xchg
lret
movb
mov
scas
shrl
push
loop
cmpsl
dec
int
add
and
mov
lcall
dec
sti
std
mov
js
adc
adc
pop
push
insb
fisttpl
js
push
and
mov
in
popa
cmp
push
cli
aaa
push
insb
ret
in
clc
jnp
dec
dec
push
mov
push
cmp
pop
xchg
cltd
sbb
out
add
stc
xor
ja
sub
jge
pop
mov
dec
iret
gs
xor
pop
movb
nop
push
mov
cmpsl
bound
fstl
fnstsw
mov
fnsave
inc
cmc
or
out
roll
lds
filds
lods
mov
pushf
mov
or
bound
cmp
into
lret
jmp
into
clc
or
leave
bound
scas
outsl
movsb
cmp
push
cmp
inc
loopne
pop
fisubrs
cs
add
jp
js
fadd
xchg
ljmp
mov
loope
out
insb
dec
testb
xor
jg
push
cmpsl
sahf
jecxz
pop
adc
mov
adc
fcomp
jne
xor
inc
shll
inc
iret
in
mov
push
or
loop
jbe
jno
and
mov
pushf
repz
in
test
popf
pop
inc
inc
mov
pop
mov
xor
push
lods
mov
mull
and
out
jmp
add
pop
or
push
scas
or
popf
mov
into
negb
daa
cwtl
mov
stc
clc
sbb
pop
je
mov
and
push
jns
test
jb
mov
in
push
sub
scas
hlt
push
cwtl
add
mov
pop
out
sub
pop
scas
adc
roll
icebp
das
negb
repz
adc
sub
cmpsl
cmp
dec
lds
fdivrp
in
inc
adc
add
pushf
cwtl
mov
das
idiv
aaa
fsubrl
movsb
je
mov
imul
and
popf
adc
iret
adc
test
fmuls
out
cmp
sarb
jmp
stos
shl
mov
and
dec
imul
enter
pop
jp
or
mov
jge
pop
test
cmp
jp
int3
push
or
mov
jmp
jecxz
or
repnz
mov
mov
aaa
mov
stc
adc
mov
mov
jge
mov
push
fcompp
outsb
inc
cld
popa
cmp
xchg
movswl
data16
dec
in
pop
push
sub
mov
lcall
mov
clc
jle
imul
jno
loopne
xchg
mov
xlat
jl
pop
or
jle
cwtl
sbb
ljmp
jl
inc
fidivs
notl
pop
xor
in
cli
push
jecxz
add
sub
xchg
xor
inc
sub
mov
aas
cmp
and
or
mov
sbb
cmc
imul
insl
loop
sub
xor
daa
push
sub
ret
or
and
sbb
dec
xor
xor
lahf
scas
jp
mov
inc
sbb
test
lods
cltd
ds
push
push
push
ja
sub
pop
xchg
xchg
sub
cmpsl
mov
inc
pop
shll
xchg
mov
jne,pt
inc
pop
or
jge
faddl
add
into
xor
xor
js
out
std
dec
push
push
lcall
mov
mov
push
or
std
lret
in
sub
and
repnz
addr16
inc
insl
cmpsb
inc
pop
std
sbb
fisttpl
lea
jl
xchg
shr
not
jno
add
xchg
sahf
sbb
pop
shrb
aas
repz
cmovp
cld
add
arpl
test
es
cmp
dec
mov
in
jno
fisttpl
xchg
popa
sbb
cld
imul
mov
mov
adc
adc
jp
les
out
add
js
inc
cwtl
mov
or
mov
mov
outsb
out
or
clc
mov
inc
pusha
sub
repnz
in
sub
stc
or
nop
or
lcall
xchg
cmc
or
repz
out
sub
sbb
inc
rcr
in
and
mov
dec
xor
popl
cmp
enter
lods
filds
test
sti
out
mov
mov
or
push
lods
fdivs
nop
lret
outsb
pop
pop
sti
sti
hlt
pop
aad
or
cli
pop
in
jmp
inc
jne,pt
sti
xor
jl
addl
ret
push
jb
int
xor
jo
bound
adc
pop
aam
inc
mov
or
cmpl
stos
cmp
sbb
popf
mov
fistl
aam
jecxz
and
clc
dec
push
nopl
aad
jge
sub
fidivrl
push
out
xor
xchg
ss
int3
into
pop
push
jecxz
pop
mov
xor
xlat
sti
cmp
sahf
aad
inc
add
in
cs
rclb
push
dec
scas
xor
ss
pop
mov
leave
loop
xchg
je
cmp
push
sbb
add
fists
or
add
ret
lds
mov
stc
call
sbb
add
hlt
ds
aaa
push
jae
std
pop
out
lods
mov
xor
orb
sbb
lret
or
or
leave
push
hlt
dec
mov
add
int
and
aaa
mov
pop
and
xchg
push
pop
in
push
add
out
insl
shl
sbb
dec
loopne
stc
or
cli
xchg
subl
fnstsw
fisttps
out
pop
pop
push
push
repz
add
or
orl
jg
aam
out
jg
test
mov
cwtl
test
pop
xor
add
mov
sti
jne
inc
test
or
mov
add
xor
pop
cmpsl
movl
push
je
pop
inc
shll
repz
or
or
lock
or
or
adc
pop
orl
mov
test
ret
aam
mov
jns
arpl
xchg
jl
int3
cmp
aas
sbb
jne
cli
lcall
jb
push
dec
dec
ds
lock
lods
rcl
out
pushf
mov
jno
jno
mov
jmp
data16
shll
out
mov
xchg
scas
movsb
popf
cwtl
mov
dec
push
test
fistps
cmpsl
scas
xchg
sub
pushf
xchg
sub
pop
cli
adc
daa
stos
lahf
in
cmp
push
enter
fs
mov
mov
xor
imul
mov
mov
add
push
xchg
cmpsb
aaa
stc
into
aad
inc
sub
add
js
or
add
or
cmpsl
enter
arpl
ljmp
lock
rolb
jo
outsl
and
sub
push
inc
jl
mov
xor
mov
pop
jl
jp
fcmovnu
inc
mov
dec
or
or
mov
aad
push
dec
ret
mull
mull
sbb
dec
xchg
jl
cld
push
test
jg
int3
mov
mov
pushf
jbe
push
insb
adc
and
out
popl
loopne
adc
adc
out
pop
ret
test
or
ss
nop
or
dec
ss
pop
loopne
icebp
ret
aas
push
loop
pop
and
scas
enter
lods
mov
clc
lret
fidivrl
dec
sbb
cmp
push
outsb
loope
jp
mov
stos
and
pop
add
push
or
adcl
lcall
cmp
mov
xchg
test
imul
xor
jg
cmp
lds
add
loop
jns
xor
insb
pusha
sbb
jns
sub
mov
xor
std
insb
sti
xchg
xchg
mov
aaa
add
pop
inc
subb
add
into
xchg
iret
jl
adc
xchg
and
fcmove
sbb
lahf
pop
dec
insl
add
fwait
jno
ljmp
cli
lea
push
das
ss
dec
jl
xchg
enter
mov
iret
dec
push
sub
in
ljmp
pop
sub
les
or
ja
and
xor
mov
sub
xchg
push
xchg
inc
push
leave
jp
cmp
ljmp
add
rorl
aaa
xlat
sbb
orb
std
dec
dec
mov
push
repz
stc
stos
cmp
jl
imul
xchg
and
in
push
jge
cmp
cmp
dec
daa
mov
aam
shll
sbb
push
lods
cmpsw
rorb
pop
mov
cmp
in
xor
cmpb
xorps
inc
mov
xor
mov
xchg
xchg
sbb
mov
cmp
add
int
rcll
push
mov
mov
cltd
jno
in
idiv
fstps
push
out
jp
cmpsl
push
test
xor
loope
push
loop
dec
cld
or
icebp
xor
js
pop
icebp
inc
adc
ljmp
cs
shll
cmp
cmp
sbb
pop
gs
dec
mulb
xchg
add
gs
mov
cld
mov
adcb
test
inc
sub
inc
out
jg
add
icebp
mov
mov
insb
mov
movsb
data16
push
dec
push
push
adc
fisttps
dec
std
in
test
mov
cmpsl
sub
or
repz
sbbb
and
clc
cs
clts
push
lahf
test
sub
sbb
mov
insb
iret
loop
xlat
sub
sub
lock
lock
mov
leave
pop
js
push
pop
xor
rcrb
push
repz
outsb
sub
push
or
lcall
fsts
addb
repz
stos
andl
icebp
dec
sarb
mov
ja
xor
dec
aad
shlb
fsubrl
scas
xchg
dec
jmp
paddsw
xchg
inc
dec
mov
push
pusha
subb
fwait
pop
cmpsl
adc
pusha
inc
and
into
pop
cltd
pushf
aad
and
iret
test
cmpsb
push
dec
jns
lods
ret
aaa
lds
imul
fadds
sbb
mov
imul
loop
add
or
cmp
ja
cmp
insb
inc
xor
xchg
jo
data16
xchg
sbb
sbb
add
pop
cld
imul
push
pop
sbb
imul
lock
mov
inc
jp
cmc
sbb
inc
testb
mov
mov
sub
mov
out
mov
xchg
xor
pop
xchg
add
mov
push
ret
in
pop
fisttpl
lahf
lock
xlat
mov
xchg
mov
fdivrs
ret
int
into
aas
call
pop
out
xchg
add
cli
movb
cld
outsb
bound
sbb
add
adc
mov
callw
add
xor
cmp
dec
fcoms
mov
int3
adc
lret
mov
sbb
pop
das
jbe
ljmp
push
push
sbb
push
imulb
bound
sarl
adc
cld
movsb
dec
mov
push
ficompl
add
cmp
xchg
jle
push
cli
xor
jbe
incl
xor
scas
xchg
in
pushf
xor
ljmp
inc
push
xchg
push
insb
adcl
sbb
mov
sub
int3
adcl
sub
push
js
js
mov
xchg
aas
fwait
lock
jmp
push
rolb
push
xchg
sti
xor
enter
sbb
out
fdiv
jge
xlat
sti
jecxz
add
sub
mov
push
mov
pushf
lock
js
aad
jne
jp
sbbl
out
jecxz
adc
dec
mov
xor
and
xor
lds
pusha
es
jg
push
push
mov
xorl
mov
outsl
push
add
xor
mov
test
nop
xor
xchg
jne
pop
rcrl
inc
pop
testl
mov
clc
xor
xchg
insl
and
into
mov
and
sarb
popf
pop
inc
sbb
fadd
test
imulb
pop
out
add
fistpl
sbb
scas
mov
pop
inc
repnz
xchg
mov
adc
jp
fcoms
sub
push
mov
pop
std
sbb
or
xchg
or
xor
leave
sub
enter
jge
fwait
mov
jg
cwtl
adc
jns
pop
inc
or
xchg
mov
jle
addl
cmpsl
data16
push
inc
mov
cmp
fsts
xchg
sub
ficomps
add
and
stos
inc
mov
cmpl
or
movsb
lcall
std
sahf
data16
mov
cmp
xor
cli
mov
mov
pop
cmp
xchg
stos
aad
adc
notb
inc
pop
mov
or
aas
gs
mov
push
inc
pxor
cli
test
int
fcom
dec
aam
sub
cltd
mov
pop
ss
inc
daa
mov
clc
sbbb
xorb
lea
xchg
xchg
pop
rolb
les
bound
adc
call
das
jnp
mov
into
pop
imul
or
aad
inc
sbb
pusha
mov
mov
mov
and
jmp
ja
sbb
loopne
or
xor
pop
pop
sti
je
sub
mov
ror
loopne
sub
dec
test
cwtl
in
test
xor
repz
js
cmp
es
xchg
int3
pop
jmp
push
push
and
jecxz
add
xchg
adcl
jno
xchg
cmpsb
pop
push
mov
push
aad
and
push
and
and
inc
cmp
mov
je
out
fildl
mov
icebp
sbb
lods
stc
std
jns
icebp
inc
ret
bnd
jg
test
ficoms
lods
clc
jmp
pusha
int
shl
push
sbb
mov
das
or
mov
mov
es
xor
enter
pop
dec
cld
dec
stos
lods
loop
pop
xchg
sub
add
pop
addr16
sub
mov
movsb
pop
add
rcr
in
rclb
xor
mov
push
add
in
adc
lock
sub
lock
jbe
mov
mov
inc
mov
mov
sbb
or
adcl
inc
mov
add
data16
into
add
lods
pusha
cld
movsb
cld
je
out
add
or
bnd
sbb
xor
out
mov
dec
lahf
in
jl
popa
popa
dec
dec
fisttpll
xchg
out
jnp
sbb
mul
out
xchg
test
cwtl
sub
lahf
xrelease
pop
pop
jg
in
add
repz
cli
inc
pop
or
jo,pt
pop
push
popa
nop
stos
add
jecxz
ja
jnp
test
mov
jno
fs
shll
and
cmpsb
cmpsb
in
sub
inc
xlat
stos
lea
es
sahf
push
test
pop
and
hlt
lea
inc
mov
add
loop
iret
pushf
jl
arpl
mov
testb
jo
mov
mov
sbb
cmp
xchg
add
enter
pop
rolb
lods
jne
lods
shll
and
mov
jb
fabs
or
push
mov
jbe
adc
je
sbb
scas
movsb
jg
mov
cmp
push
or
das
pop
xchg
ret
push
jecxz
sar
or
leave
cs
adc
daa
and
stos
scas
push
inc
pop
ret
mov
push
dec
add
mov
cltd
sbb
in
dec
aam
xchg
xchg
mov
cmpb
xorb
xchg
out
and
pop
mov
mov
or
lret
repnz
lods
cmp
test
cli
mov
stc
mov
push
push
jns
fdiv
ss
xchg
roll
shrd
push
jo
mov
and
sarb
les
add
pop
outsb
xchg
les
lds
xchg
xor
movsb
dec
or
cmc
data16
aaa
xchg
addl
inc
mov
lret
rorb
ja
ficoml
and
fldenv
pop
ljmp
or
xchg
jmp
sub
pop
xchg
and
and
and
xchg
lds
push
outsb
shrl
mov
int3
stos
sub
out
ljmp
inc
mov
test
addr16
adc
loop
shrb
jge
std
jnp
loope
ds
stc
pop
mov
scas
fwait
pop
cmp
ljmp
jb
lock
jns
iret
push
test
jb
cmpsl
test
mov
aas
lods
shr
pop
stos
cmp
and
insb
std
inc
inc
in
xor
sub
jo
cmp
icebp
test
push
push
in
push
jns
push
ret
test
xor
loop
test
sbb
dec
cmp
adc
fildl
jbe
shlb
fdivl
xchg
and
jg
push
sbbl
push
lods
add
insb
inc
mov
pop
and
adcb
stc
pop
jbe
decl
mov
dec
cmp
add
in
imul
je
pop
cmpsl
mov
xor
dec
xor
xor
popf
sbb
mov
add
fcmovne
mov
aam
jno
and
add
dec
je
arpl
push
sub
movl
xor
cmc
lods
int3
inc
mov
cmpsl
out
jns
test
mov
call
jg
xchg
push
inc
adc
jno
aad
out
gs
in
inc
mov
cli
shl
clc
sub
out
jg
pusha
ljmp
repnz
push
and
dec
in
inc
xor
lcall
sbb
rol
or
add
push
jbe
clc
push
subl
xchg
movsb
jno
cld
jmp
mov
test
sub
inc
dec
jmp
pushf
mov
jge
jne
loope
push
rclb
icebp
fs
jg
adc
out
int
pushf
push
fdivrs
adc
mov
shr
cmpb
dec
mov
aad
lds
xchg
cmp
pop
mov
mov
gs
movsb
leave
xchg
pushf
adc
loope
sbb
enter
jl
dec
aad
xlat
int
mov
lahf
lods
call
inc
int3
dec
jp
jle
lcall
adc
andb
pop
bound
or
shl
pop
fimull
sarb
add
jno
rclb
enter
xor
outsb
or
push
and
mov
mov
popa
outsb
and
adc
scas
movsl
mov
xchg
decl
lds
pop
lds
add
aam
xor
mov
mov
push
jle
and
xor
sub
scas
enter
or
add
insb
arpl
sbb
loop
rorl
adc
movsb
cld
dec
data16
ds
mov
popl
pop
mov
xlat
roll
lret
jmp
jne
add
mov
movsb
mov
jns
int3
out
ret
out
jle
xchg
lods
dec
xlat
insl
cmc
aam
repz
cmovno
lea
in
jns
mulb
pusha
jecxz
andb
dec
aam
cmp
fcom
imul
fwait
lock
mov
stos
push
inc
adc
inc
jg
mov
cld
jnp
addb
cmpps
ret
psraw
or
loopne
push
lds
filds
pushf
mov
out
fisubrl
mov
call
inc
leave
imul
fldcw
leave
and
aad
mov
les
jb
leave
arpl
mov
rcl
xchg
and
leave
cmpsb
xchg
ja
xchg
and
js
pop
test
aaa
lcall
mov
pop
shl
sbb
xchg
xchg
jp
jbe
sbb
jle
ret
xchg
sbb
hlt
imul
movsb
mov
scas
add
cli
cmp
out
mulb
fadd
imul
xor
jo
pop
popf
xor
les
cmp
sub
and
loop
mov
fs
sbb
in
call
insl
cmc
pop
orl
stos
add
cmp
pop
stos
or
sub
pop
push
pop
lret
je
or
adcl
cmp
dec
xor
pusha
mov
push
xchg
pop
insl
or
adc
aaa
enter
and
int3
stc
mov
xor
fisubrl
fcomps
es
call
mov
iret
lret
dec
stc
add
inc
notl
inc
jns
sbb
xchg
adc
inc
mov
mov
jecxz
cmp
icebp
jl
xchg
in
ljmp
mov
push
push
outsl
das
mov
dec
push
fistps
stos
xor
push
imul
andb
dec
jecxz
in
cltd
add
mov
or
sub
popf
push
pop
shll
les
mov
insl
test
pop
mov
mov
icebp
ds
inc
cmpsb
test
lret
xchg
popfw
adc
xchg
aas
mov
fcompl
adc
out
rolb
cmpsb
into
xor
pushf
dec
lods
inc
mov
xchg
mov
fldt
mov
lcall
xor
mov
dec
or
cmpsb
mov
out
add
in
mov
sub
push
cwtl
dec
movsl
ret
mov
ret
jmp
les
popf
clc
ss
shlb
out
jo
mov
insb
movsl
shl
div
push
jb
call
push
call
xlat
cwtl
in
lahf
sbb
pushf
popa
xor
movsl
loope
pushf
pop
jmp
repnz
or
xor
std
outsb
cld
cmp
push
mov
jae
loope
push
aam
push
push
aaa
push
and
jp
mov
push
fistpll
out
nop
aas
ret
test
movb
pushl
out
popf
lods
adc
dec
lock
mov
push
mov
sbb
dec
or
enter
xchg
cs
sub
xchg
xchg
testb
mov
pop
cli
scas
ja
mov
shlb
mov
cmp
mov
sub
add
hlt
insl
xchg
out
repz
rorb
push
daa
imul
arpl
cld
aad
outsb
fs
jb
xchg
push
xchg
sbb
test
daa
mov
pop
out
inc
fisubs
dec
xchg
mov
sub
inc
lods
pop
lret
xchg
push
gs
xor
xchg
jb
aam
jecxz
test
in
das
outsl
lret
push
in
mov
adc
sub
mov
lock
lcall
jecxz
xor
xchg
sub
call
jb
fwait
add
or
push
rcrb
outsb
cmp
adc
xor
sbb
clc
mov
cmpsl
cmp
jnp
dec
in
imul
test
jb
or
or
mov
and
movsl
in
mov
enter
sub
addl
mov
loop
adc
lds
mov
pop
outsl
sti
aad
pop
dec
cmp
mov
add
movsb
fstl
push
icebp
sbb
in
push
mov
ja
inc
xor
test
out
mov
adc
mov
sbb
test
inc
outsl
pop
nop
outsl
addr16
test
push
scas
int3
xor
lahf
sbbl
inc
out
fwait
cmc
mov
xorl
push
jmp
dec
or
mov
int
pop
pop
inc
scas
mov
push
sbb
aad
sbb
hlt
aad
mov
lret
xor
ror
mov
and
xchg
xchg
pop
and
sarl
add
dec
push
popa
inc
pop
cmp
xor
jae
inc
push
pop
push
lds
sub
pop
push
pop
cli
in
adc
aad
add
add
and
dec
jge
cmc
enter
sbb
cmp
mov
jl
mov
inc
scas
xchg
jbe
ret
loope
mov
andl
mov
cmp
jp
clc
data16
or
stos
jp
lret
addr16
and
and
adc
lcall
ds
scas
sub
inc
xor
fwait
and
xchg
dec
xchg
shll
lahf
sbb
dec
lahf
pop
mov
rcrl
pop
xchg
and
mov
mov
sbb
jne
xchg
ds
jbe
repz
cld
mov
xor
fsubrs
sub
hlt
jns
pusha
dec
mov
iret
hlt
dec
dec
cmc
inc
xchg
lods
sahf
pop
daa
popl
lds
out
popa
not
fcmovbe
je
nop
movsl
add
jmp
in
push
or
aaa
lcall
scas
fisttps
fidivrl
arpl
jp
fildll
adcb
repz
mov
movsl
xor
shl
jae
cld
xchg
fcoms
arpl
push
dec
lods
lods
nop
fwait
in
and
cli
call
std
push
push
repnz
xor
push
xor
lods
nop
pop
xor
daa
rol
jecxz
loopne
mov
addr16
lods
adc
int3
fs
cld
inc
push
sub
fcmovnbe
lods
mov
pusha
pusha
or
imul
insl
cmp
cmpb
aam
pop
fcoml
add
ja
test
movsb
test
sub
and
sti
sbb
jns
pushf
es
cmpsl
popa
push
and
out
dec
mov
mov
push
xor
xchg
push
dec
cmp
sarb
sbb
jno
ret
pop
clc
inc
repz
or
fdivrl
mov
insl
data16
pushf
int3
pusha
xchg
clc
adcl
int
aaa
fnstenv
inc
pop
fsubl
cwtl
lea
cwtl
out
xchg
and
xchg
icebp
inc
xlat
pop
pop
push
rcrb
ds
push
movsl
push
call
mov
mov
dec
cmp
out
cmp
pop
addl
mov
aam
je
push
push
insl
or
inc
mov
or
adcl
push
pop
pop
jno
dec
mov
ljmp
xor
lret
xchg
xchg
popf
mov
lds
sti
leave
jl
mov
adc
jb
jle
inc
inc
cs
xchg
out
and
aas
test
pushf
cmp
pop
insb
lods
loop
lret
or
cmp
js
sbb
ss
sti
or
fwait
jecxz
pop
mov
test
add
jp
add
jmp
addl
popf
inc
shl
pop
repnz
dec
pop
jo
xchg
fs
mov
lcall
lret
cmpsb
mov
xchg
adcl
mov
adc
mov
fcmovbe
xchg
ljmp
ds
leave
sub
and
jle
xor
scas
jno
push
jo
js
xchg
sarl
xor
push
cld
rcrl
hlt
imul
cmp
pop
push
push
jmp
inc
ja
lret
jne
leave
bound
sbb
pop
test
fmul
popf
scas
mov
fsts
cmp
call
xor
fsts
adc
in
stos
cltd
sarl
lret
mov
dec
std
pop
jle
adc
ss
ret
ja
ret
jge
xchg
cmpsb
dec
cltd
dec
lock
dec
adc
jne
jp
in
dec
das
jae
sbb
lahf
adc
nop
inc
loope
xor
or
mov
xor
sbb
in
jo
popf
test
ror
es
push
test
scas
lcall
or
xor
test
leave
dec
pop
jns
jo
inc
dec
xchg
inc
or
out
pop
mov
mov
jnp
dec
jge
xchg
sbb
dec
pushf
xor
scas
fiaddl
adc
test
push
inc
lahf
mov
fcomip
outsl
ret
jge
leave
add
lods
mov
dec
cmpsb
xlat
rcr
test
pop
outsl
jecxz
icebp
stc
jp
mov
in
outsl
data16
pop
inc
jnp
in
je
jl
add
or
testl
xor
stos
pop
mov
push
sub
inc
std
add
push
jbe
add
mul
cmp
sub
jmp
daa
ret
xchg
push
stc
or
imul
push
xlat
add
lret
add
negb
sbb
pusha
pop
popf
ss
cli
sbb
or
orb
mov
cli
mov
push
pop
cli
sti
mov
push
dec
mul
lcall
sti
rcll
lods
mov
xchg
clc
xlat
jbe
push
lods
jnp
iret
push
add
and
mov
inc
andl
mov
rcrb
pop
aam
clc
and
mov
es
xor
mov
in
icebp
push
stos
mov
outsb
lods
pop
pop
icebp
shll
xor
dec
mov
mov
push
mul
mov
and
jmp
ds
lahf
pop
mov
and
das
sti
jg
pop
insl
popa
sbb
repnz
push
xchg
sub
pop
out
lret
dec
and
aad
das
mov
pusha
sub
dec
mov
mov
es
sub
daa
pusha
nop
sub
clc
movsb
ret
aaa
and
pop
dec
xchg
lods
lods
and
gs
dec
mov
insl
lcall
movsb
arpl
push
push
jge
mov
xchg
mov
add
data16
push
pop
pop
or
dec
dec
jle
mov
inc
sub
add
xor
cmp
mov
les
mov
clc
ja
xchg
xchg
mov
push
mov
in
scas
mov
ss
pop
loope
loope
dec
and
cmp
sub
push
sub
gs
jne
sub
sbb
mov
lods
insl
aas
adc
lock
fdivs
inc
pusha
sti
add
adcl
mov
and
sub
add
mov
add
cmp
jbe
add
sbb
fwait
in
xchg
dec
push
fmuls
nop
cli
insl
cs
leave
pop
stos
mov
inc
shll
icebp
jmp
insl
xlat
sahf
pop
stc
inc
dec
shl
xchg
jl
pop
or
jae
add
xchg
aas
or
in
shlb
lret
scas
aad
pop
push
fnstsw
xor
inc
push
adc
adc
jbe
ret
lahf
pop
mov
cmpsl
xor
arpl
add
mov
xchg
mov
pop
pop
push
shrb
mov
adc
outsb
sub
push
sub
aas
sub
je
sbb
or
push
pop
aad
data16
jae
mov
popf
xor
cmp
les
pop
or
push
stos
cs
je
ficoms
into
outsb
pop
shlb
pop
or
inc
movsb
es
sbb
inc
xchg
les
lock
jmp
lds
push
jmp
lahf
mov
ja
jbe
pusha
lock
dec
pop
adc
pop
xor
aaa
cmp
mov
pop
add
add
fistl
fisttps
rclb
in
gs
adc
das
scas
in
push
mov
and
xor
add
test
sbb
ja
adcl
mov
mov
adc
out
and
xor
push
iret
mov
jns
push
sti
out
sub
adc
ret
jb
sub
jbe
push
mov
popf
xchg
and
pop
adc
push
imul
aaa
jns
jb
jbe
add
lret
sar
bound
add
and
aas
sahf
in
pop
fcmovbe
incl
pop
push
stc
popf
pop
inc
scas
push
mov
arpl
fnstcw
ljmp
jns
fdivrs
in
pop
adc
test
mov
ret
and
sbb
aad
bnd
and
popf
xchg
add
aas
pushf
jecxz
out
xchg
fwait
loopne
int3
xor
aam
cmc
adc
push
test
push
imul
push
fwait
dec
loope
adc
arpl
or
stc
jns
adc
popa
xchg
mov
test
int3
dec
out
cli
stc
or
xor
jg
icebp
jmp
jmp
cmpsb
push
sub
cmp
sub
jbe
mov
sarb
rol
sub
out
adc
jmp
in
jecxz
inc
andb
mov
xchg
mov
mov
mov
jg
cmpl
sub
test
shrl
inc
xor
mov
out
push
lock
xchg
in
inc
stos
out
inc
jle,pt
ss
pop
jge
scas
stc
pop
xor
dec
xchg
icebp
repz
sbb
leave
std
or
lds
outsl
cmp
test
pop
adc
lret
and
lcall
and
scas
or
icebp
sti
or
or
stos
movsb
comiss
lock
xchg
jb
pop
lahf
mov
xor
xor
adc
test
inc
xor
stos
std
dec
mov
and
inc
dec
divb
aad
sahf
sbb
mov
leave
daa
mov
in
push
ret
enter
and
dec
dec
xchg
bound
arpl
bound
cmpb
xor
jg
cmpsb
test
and
fimull
aas
add
rcrb
lds
adc
sarl
stos
dec
add
mov
cmp
jo
xor
and
mov
mov
test
jmp
hlt
popa
sub
add
and
adc
out
mov
inc
jmp
call
xlat
clc
sbb
lret
insb
out
sbb
mov
mov
push
leave
sbb
fidivs
jp
loope
inc
push
mov
mov
mov
pop
xchg
dec
pop
mov
jb
push
in
arpl
pop
cs
repnz
cmp
int3
enter
aad
aaa
dec
scas
seto
xrelease
add
std
sbb
push
and
pop
insb
xor
je
lds
cmp
lret
mov
cld
and
mov
cwtl
dec
int3
pop
sbb
in
jb
nop
stc
dec
das
das
dec
xor
inc
insb
fsubs
in
mov
cmp
sti
push
add
xchg
xor
cmpsb
ja
stc
inc
lods
repz
or
lods
sub
in
frstor
test
xchg
leave
dec
or
ljmp
out
inc
rcrb
popf
mov
jns
mov
fcoms
mov
stos
jne
popf
push
sub
cli
jns
and
mov
punpcklbw
movsl
dec
jmp
dec
jmp
scas
out
inc
testl
scas
xor
sbb
ljmp
xor
test
mov
xor
movsl
inc
pop
gs
push
and
sahf
sub
xchg
test
pop
mov
or
xchg
xorb
jb
sub
mov
sbb
popa
xor
jae
int
cmpsb
mov
mov
or
sbb
sub
xchg
sub
xchg
xor
sbb
std
ja
xchg
and
push
leave
lret
push
xor
mov
sbb
pop
or
or
cmp
jle
insl
sbb
cmpsl
sub
fisttpll
ret
imul
dec
mov
das
pop
xchg
lock
jmp
rcll
jmp
jne
xor
add
sahf
ds
pop
loope
cmc
adc
cmp
inc
fs
popf
mov
pop
fwait
scas
psubsw
insl
daa
add
scas
inc
ss
or
push
jg
inc
pusha
xchg
inc
xchg
dec
mov
lahf
int
sub
cmovno
fiaddl
inc
and
lret
push
test
inc
mov
dec
mov
sbb
push
imul
sub
scas
jb
push
jb
jecxz
mov
push
cmc
dec
jo
addb
es
xor
jmp
insl
mov
and
xchg
pop
lock
dec
movsl
cmp
push
push
and
inc
sub
sbbb
js
cmpsb
cld
loopne
push
or
or
rcr
aam
push
jbe
pop
push
scas
mov
ljmp
dec
jo
push
pop
sti
pop
mov
jge
shll
mov
scas
ja
fnstcw
mov
xchg
or
mov
sbb
ljmp
dec
iret
scas
je
sahf
cmp
divl
sbb
jbe
icebp
sbb
xchg
addr16
jae
jp
push
fistpll
add
mov
nop
add
xchg
fsts
jl
addl
push
mov
xor
in
popf
sbb
cmpsl
call
push
or
mov
cmp
xor
sbb
pop
les
sarl
dec
push
or
repnz
push
arpl
out
and
xchg
cmp
andl
mov
lock
add
lcall
addr16
inc
idivl
shlb
add
sub
dec
push
test
fiadds
stos
or
into
push
fucomp
lods
xchg
or
jg
adc
loope
pop
out
xlat
sub
dec
inc
repnz
jnp
adcl
scas
lea
stos
fcompl
jne
mov
mov
movsb
out
bound
add
aam
out
pop
shll
rorb
mov
pop
bound
rcl
leave
push
inc
cld
orb
int
jns
or
mov
ds
inc
and
lret
andl
in
mov
popa
ljmp
imul
aad
mov
sub
call
and
push
mulb
pop
inc
pop
sub
andb
inc
jg
repz
jge
mov
mov
fimuls
test
push
or
push
imull
fdivrl
test
pop
lret
test
jp
aaa
and
mov
or
pop
pop
fwait
nop
mov
in
cmc
das
call
add
add
ds
gs
push
sbb
sti
jl
mov
testb
fists
mov
push
push
sub
call
leave
cmp
xchg
ret
inc
outsl
sahf
and
sahf
inc
loopne
cmp
stc
in
mov
sti
push
inc
dec
cmp
sbb
mov
stos
pop
test
mov
xchg
xor
sbb
sarb
cmp
mov
call
insl
sahf
test
rorb
popf
jb
stos
in
das
push
inc
out
mov
pop
mov
int3
pop
pop
gs
insl
jmp
jo
pop
test
or
cwtl
jl
fldenv
xchg
dec
pop
push
pop
imul
xor
mov
mov
shlb
pop
test
leave
jne
dec
push
popa
xchg
daa
or
nop
jbe
adc
mov
mov
sub
lret
mov
insl
pop
cmp
cmp
cmp
xchg
lea
out
into
mov
lret
neg
sub
or
lcall
aaa
sub
xchg
and
out
lret
adc
pop
or
arpl
mov
sbb
js
jmp
cmpsl
mov
lahf
aas
fucomi
lods
shr
mov
mov
filds
psrlq
jl
and
enter
adc
fwait
xchg
ja
pusha
push
adc
xchg
lret
inc
inc
stc
movsb
je
cmpsl
aaa
and
stos
imul
imul
ljmp
sub
shlb
adc
pop
jno
adc
cmp
leave
xorb
aam
sbb
mov
shll
ss
xchg
inc
out
lea
arpl
xor
add
inc
repz
stos
sub
jge
sbb
pop
shrb
in
inc
mov
jmp
add
xor
loopne
adc
cmp
cltd
mov
imul
dec
fsubp
mov
gs
push
lock
sub
addl
repnz
push
xchg
daa
sti
pop
repnz
inc
cs
sbb
test
push
cmpps
addr16
xor
in
add
dec
jge
xorb
sub
ds
xchg
or
cmpsl
inc
rol
push
and
jns
mov
add
or
int3
mov
movsl
sbb
call
notb
inc
add
dec
ss
sbb
or
mov
pop
movsb
xchg
mov
cs
push
add
cltd
push
mov
and
xor
push
mov
aas
dec
jo
mov
stos
shll
sub
sub
aaa
repnz
sub
sbb
add
out
repnz
sub
mov
cmp
or
cmpsl
push
in
js
xor
push
adc
mov
out
xchg
jns
cli
imul
jmp
lds
pop
mov
mov
or
or
or
or
das
cli
inc
dec
mov
jmp
scas
hlt
test
dec
sarb
inc
inc
pop
aaa
dec
xchg
cmpsb
inc
pusha
orb
push
shrb
cld
subl
insl
push
hlt
jge
ret
decl
adc
pop
xor
or
jnp
xor
insl
lret
scas
cld
add
cmp
or
leave
mov
stc
and
xchg
testb
jmp
add
xor
inc
ljmp
outsb
or
xchg
sub
push
inc
add
loope
dec
or
inc
cmp
sbb
mov
xchg
js
sub
add
adc
cmp
fisttps
pop
test
out
add
jns
test
arpl
mov
push
and
ja
cwtl
dec
push
fwait
and
inc
movsb
xchg
mov
jb
movsb
add
sub
in
pop
sarl
jge
test
sbb
pop
xchg
stos
dec
sub
xchg
shll
leave
icebp
or
imull
cmp
pushf
scas
das
sar
cmp
mov
cmc
jnp
pshufw
cltd
sub
xor
mov
mov
pop
cmc
push
dec
andl
in
and
mov
mov
outsb
insb
nop
cmpsb
sahf
jnp
cs
ret
dec
int3
adc
jae
pop
mov
adc
jbe
jne
mov
jno
jg
es
es
into
and
enter
and
gs
push
inc
insb
mov
out
stos
cli
mov
inc
and
les
ja
repz
add
andl
jb
les
push
adc
mov
mov
pushf
test
cltd
dec
add
cli
jp
outsb
enter
js
call
push
mov
push
dec
adc
add
aad
push
mov
adc
pop
test
jg
jle
icebp
xchg
xor
addr16
push
popa
and
neg
mov
insl
push
imulb
mov
dec
out
dec
mov
nop
nop
mov
dec
jne
out
outsb
dec
pop
or
cmpsl
roll
jg
inc
out
mov
and
js
int3
dec
dec
ds
cltd
testl
into
add
repnz
jge
pop
adc
push
imul
or
push
lret
add
les
dec
sub
outsl
rcll
std
and
and
movnti
xchg
mov
out
cmc
neg
imul
cmp
data16
mov
test
scas
movsl
mov
popf
pop
stc
pop
mov
sahf
sahf
cld
and
stc
cmp
pop
into
fldz
imul
mov
aaa
inc
sub
pop
or
push
mov
in
xchg
dec
cltd
cli
and
or
dec
lea
pop
adc
xchg
add
fildll
imul
sbb
dec
mov
push
jle
jns
fbld
iret
adc
xlat
and
pop
inc
and
test
shll
scas
bound
inc
dec
data16
mov
jge
popa
fucom
jmp
add
dec
xchg
scas
or
out
rcll
cmp
pop
cwtl
fcompl
add
iret
mov
out
int3
insl
jb
or
mov
mov
in
jae
aaa
fsubs
add
jmp
int3
sbb
fnstsw
fs
jl
dec
adcb
jmp
xor
fs
xor
int
inc
dec
cmp
xor
add
inc
inc
xchg
xor
mov
lods
inc
mov
mov
ljmp
inc
mov
je
jl
out
xor
imul
lds
cmp
mov
mov
repnz
jle
cmp
scas
pop
insb
cltd
adc
lret
stos
cmp
pushf
sub
arpl
lahf
xchg
and
push
sbb
test
mov
movsl
stos
xchg
cmp
xchg
loopne
ss
cs
cld
leave
test
jo
cli
fs
lds
loop
sub
mov
mov
xchg
mov
cmp
pop
aas
call
out
fsubs
fisttpll
enter
cmp
lea
cmp
mov
nop
mov
stc
xchg
sub
adc
jnp
inc
cwtl
bound
fsubrs
mov
ret
cmp
sbb
pusha
xor
dec
test
lahf
stos
test
mov
pop
adc
mov
xchg
push
pop
rcrb
sub
pop
int
sbbl
lahf
or
jne
pop
lcall
jg
sub
addb
lahf
shrb
mov
ljmp
add
sbb
inc
push
push
xchg
cmp
pop
or
pop
mov
jle
movsb
push
cmp
jp
xor
mov
xchg
je
mov
add
movsb
insl
mov
cmpsb
movsl
imul
dec
mov
push
jne
jg
xor
sub
jge
in
cmp
mov
xor
mov
lcall
or
or
cmpsb
add
jg
dec
xor
pop
jb
int3
sahf
insb
cmpsb
into
mov
in
inc
scas
mov
ret
dec
or
js
inc
pop
in
fsubp
inc
push
push
or
loopne
loopne
sub
cmp
sbb
dec
ss
neg
jecxz
mov
add
in
jae
gs
sbb
sbb
cmp
enter
test
outsb
push
jae
mov
nop
cwtl
fwait
and
into
int
pop
mov
movsb
divb
aas
insl
pop
les
inc
fistpll
aam
rcll
lock
dec
and
test
adc
adc
lcall
outsb
add
out
loopne
xchg
jl
aam
pusha
pop
jne
push
ja
cmp
and
fidivrs
mov
into
shll
cmp
aaa
jge
add
aam
mov
and
jmp
push
ja
dec
popa
ficompl
sub
fisubl
stos
sbb
pusha
sub
lret
push
or
mov
sub
test
xor
mov
mov
and
dec
mov
test
push
jne
xchg
dec
inc
pushf
mov
jmp
pusha
inc
fisubrl
in
adc
pushf
xchg
insl
mov
cmp
mov
xchg
xorl
orl
mov
jnp
add
xlat
xlat
insb
mov
scas
nop
scas
jp
adc
dec
lods
aam
inc
push
pushf
pop
and
into
nop
or
sub
loope
cwtl
add
or
push
iret
push
and
inc
xchg
pop
cmpsl
jge
push
subl
inc
pushf
pop
sahf
lret
shlb
cmpsl
or
jl
xor
jmp
loopne
sbb
test
and
sub
mov
insb
push
mov
xchg
xor
icebp
sti
pop
and
add
lock
sbb
pop
popa
iret
out
pop
xchg
cmp
das
mov
inc
jno
fcmove
or
out
mov
ftst
rcrl
mov
lea
xchg
dec
inc
jl
call
cmp
sub
fs
pop
sar
jae
xchg
addb
push
jb
hlt
mov
lds
rorb
into
shl
lock
sbb
mov
ds
mov
cs
cmp
pop
stc
into
pop
out
mov
clc
dec
sub
call
and
adc
sbb
pop
dec
inc
add
jae
test
test
cli
pop
inc
adc
jbe
jnp
and
pop
mov
mov
mov
fsubrl
push
cwtl
push
in
or
mov
inc
cli
push
xor
xchg
inc
addr16
push
mov
pop
out
cmc
sbb
mov
xor
push
inc
popa
cmp
xor
push
lret
repnz
and
and
popa
or
push
in
scas
lea
add
add
mov
jne
sbb
out
into
mov
cmp
jo
pushf
adc
jne
xchg
add
mov
xchg
cmp
sub
jns
xor
std
mov
push
insl
sbb
es
sbbl
std
mov
inc
xor
pushl
in
mov
fmulp
or
test
outsb
or
adc
dec
sbbb
or
lods
lcall
shlb
stc
lcall
add
adc
je
cmc
sub
pop
ret
mov
or
pop
mov
xlat
sarb
jp
adc
cli
inc
stos
icebp
pop
daa
in
and
stos
push
mul
cmp
mov
call
mov
adc
pop
jg
push
into
jo
mov
arpl
cmp
jbe
into
daa
xchg
adc
xchg
daa
adc
decl
pop
xchg
jge
jg
cmpsb
jae
aas
addb
mov
mov
fwait
push
push
stc
sub
insl
push
dec
push
mov
inc
inc
dec
inc
mov
aad
lods
xchg
mov
testl
dec
subb
mov
lock
decb
cmp
mov
cs
fxch
cmp
sbb
jcxz
pop
mov
push
adc
lret
jno
std
mov
jge
push
push
inc
or
lahf
cmpb
adc
repz
sahf
sub
repnz
cwtl
mov
mov
push
push
fiadds
out
test
in
push
xchg
xchg
repz
and
and
push
mov
shrl
cmp
aaa
adc
pop
rcr
pusha
fistl
mov
cmp
jne
popa
rclb
xlat
add
icebp
shll
js
ljmp
jl
lahf
inc
xlat
jle
fcoms
imul
lcall
xchg
orb
jns
fdivl
ficompl
int3
and
and
in
push
cmpb
dec
jb
fs
popa
popa
add
cltd
mov
push
lea
aaa
inc
divb
inc
test
insb
adc
adc
jmp
insl
aas
nop
xchg
or
arpl
mov
in
inc
inc
lcall
lret
cmpsb
pop
out
add
adc
dec
gs
mull
outsb
and
lret
sbb
mov
adc
addb
nop
jo
lds
xchg
mov
or
add
rorb
xchg
xchg
cmpsl
jnp
mov
xlat
stos
cmp
gs
dec
sbb
daa
adcl
pop
fsubrs
sti
hlt
in
fmul
push
mov
or
incb
pushf
adc
outsb
test
nop
test
ja
xor
pusha
mov
cmpsl
mov
add
inc
mov
mov
hlt
mov
scas
test
movsl
xchg
test
add
out
fdivrl
cmp
int3
cli
fcmovne
mov
pop
dec
lahf
fwait
out
movsl
sub
adc
scas
lods
jbe
mov
repz
xor
loopne
push
lods
push
adc
mov
data16
vpcmpeqd
pop
cs
gs
add
inc
jnp
sub
into
inc
rclb
sub
dec
push
mov
adc
xchg
pop
sbb
shll
jg
imul
out
decb
pop
mov
push
pushf
rclb
cmp
ja
xor
lock
ljmp
fistps
sti
sbb
and
add
xor
loopne
mov
sahf
pop
mov
sub
mov
cli
addr16
cli
negb
sbb
fldenv
std
mov
and
sub
test
rcl
pop
or
xchg
sbb
push
pop
sbb
bound
jg
jns
enter
mulb
push
adc
ds
lea
cmp
adc
cmp
aam
out
std
add
mov
push
and
es
pop
ljmp
int3
jg
sub
js
jp
lea
pop
aad
dec
je
stos
cltd
sarl
icebp
cwtl
imul
rcrb
jge
xor
into
inc
mov
xchg
loop
test
cs
mov
sub
dec
mov
adc
scas
mov
fmul
sbb
movsb
or
lahf
lret
add
data16
xchg
jae
hlt
pop
pop
loope
mov
sbb
mov
aas
xor
aas
pushl
mov
sub
add
cmp
aas
and
or
in
xor
sub
outsl
xor
pop
xchg
js
dec
jmp
or
repz
mov
mov
xchg
aaa
int3
lods
test
xchg
mov
into
lds
pop
mov
pushl
or
jb
mov
dec
push
movsl
fisubl
xchg
or
lds
pop
jbe
or
push
inc
pushf
lcall
in
test
jne
fimuls
push
jp
dec
xchg
test
pop
dec
xor
inc
ljmp
and
pop
or
mov
xor
inc
inc
jbe
cmpsb
xchg
out
fcoml
lahf
mov
mov
push
lret
pop
outsb
pusha
mov
dec
push
bound
insl
lods
ss
imul
lds
aas
faddl
test
inc
addl
pop
repnz
and
leave
popa
push
xor
shrl
fistpll
jnp
mov
xor
sbb
sub
push
mov
add
out
iret
sbb
inc
dec
push
xor
dec
mov
pop
int3
add
pop
out
lds
xchg
adc
push
ja
cmp
popa
mov
sbb
insl
mov
iret
mov
mov
inc
nop
xchg
and
in
cwtl
or
mov
push
int
add
imul
xchg
sahf
mov
aam
mov
inc
popa
loopne
int3
nop
cltd
sub
out
xchg
pop
lds
adc
bound
push
subl
pusha
xcrypt-ofb
cmpsl
insb
cli
pop
cmp
and
jmp
jge
fdivl
xchg
gs
shlb
cwtl
cmp
insl
jno
xorl
in
sub
inc
iret
test
lret
inc
aas
ficomps
add
daa
loope
inc
imul
lretw
xchg
adc
and
imul
push
icebp
mov
or
xchg
dec
fcoml
fdivr
adc
mov
in
mov
sbb
inc
aas
xlat
aaa
or
shl
imulb
mov
mov
xchg
sbbb
fs
pop
xor
out
out
mov
xor
add
es
lahf
adc
dec
shrl
std
cwtl
lods
dec
jbe
lea
stc
pop
dec
movsl
in
in
in
cmpsb
and
push
pop
popa
jge
nop
jno
and
je
cmp
stos
cmp
mov
fs
jmp
sub
adc
hlt
ja
sbb
jecxz
mov
outsl
shlb
push
jg
push
sbbb
push
push
push
push
push
lret
mov
mov
inc
loope
in
xchg
adc
stc
mov
lds
faddp
int3
mov
test
mov
popf
pushf
test
add
movsb
and
push
pop
jb
fdivr
enter
out
subb
lret
aam
jnp
inc
and
add
xor
mov
xchg
scas
jl
xchg
pop
add
nop
xchg
inc
pop
cmpsl
add
das
in
push
cmpsl
adc
adc
fcoml
out
cmpsb
imul
imul
inc
stos
int3
cmp
adc
addl
aas
or
xlat
scas
and
loopne
add
ja
and
jne
and
add
jns
daa
pop
mov
fxch
jb
cld
cmpb
mov
jmp
js
cmp
shlb
xor
and
fcoms
testb
loopne
cli
pop
lcall
cmp
es
in
mov
add
jbe
test
call
cmc
or
test
inc
inc
or
outsl
cmpsl
les
int3
lahf
je
int3
pop
lock
xlat
inc
decl
push
fucomp
xchg
cmp
mov
jb
sub
sub
and
pop
repz
ret
outsb
fildll
cmpsl
shr
xchg
xchg
push
test
aam
mov
pop
adcb
mov
push
ret
cmp
jno
adc
xor
popa
mov
or
int
insb
std
outsb
inc
or
fs
push
insl
arpl
adc
lds
jo
es
shrb
xchg
mov
inc
cmpsl
xor
sbb
repnz
adc
movsb
sub
mov
push
das
push
imul
fs
imul
pop
pop
test
inc
hlt
dec
cmpsb
pusha
cli
fstl
xchg
in
dec
and
mov
pop
jg
addb
ret
fsubs
xchg
or
pop
lods
sbb
lcall
pop
xchg
inc
ja
mov
mov
pop
aad
push
fstpt
mov
sub
je
jno
jns
lret
imul
popf
pop
dec
pop
jne
popf
xchg
xlat
mov
fcmovnb
loope
inc
cld
xor
jl
inc
and
xchg
imul
adc
mov
in
in
movsl
push
stos
lea
int
lret
mov
ret
and
adc
mov
movsb
scas
loop
jmp
in
into
popa
inc
mov
jl
icebp
das
fnstenv
cmp
xor
sbb
dec
xchg
scas
mov
inc
fdivrs
ret
test
pushl
leave
lock
and
loope
add
xchg
pop
scas
jno
lsl
cmp
fs
push
jno
std
ret
cmp
pushf
out
test
push
adc
rcrl
arpl
dec
jg
js
lret
xchg
mov
std
mov
clc
and
xchg
xchg
sti
cmp
pop
icebp
push
imul
push
popf
xlat
xor
out
orl
sub
push
test
dec
pusha
dec
out
and
or
inc
add
pop
push
dec
rolb
and
pop
sahf
iret
in
adc
dec
inc
or
sbb
pushf
cmp
dec
insb
leave
dec
test
cmp
fcom
imul
pusha
mov
and
pushf
pop
iret
push
outsb
sub
rorb
and
imul
xlat
icebp
jl
mov
testl
jbe
cld
leave
shll
add
inc
sbb
in
aam
cld
dec
cmpsb
add
in
cmp
lods
es
adc
sub
mov
mov
test
mov
fs
dec
push
repnz
inc
movsl
xor
addl
adc
aaa
dec
xchg
xchg
cs
jl
push
lds
js
insl
jno
mov
push
dec
push
cmp
xor
adc
xchg
call
addr16
pushf
jb
inc
cmc
lret
and
inc
inc
cs
pop
cmp
sub
cltd
mov
inc
and
and
subb
inc
dec
dec
or
idiv
add
jle
mov
mov
repz
repnz
out
adcb
nop
in
pop
sahf
mov
sbb
mov
adc
fisubs
jno
imul
inc
jmp
ss
push
nop
push
add
out
mov
int3
clc
and
lea
mov
sub
pop
lods
iret
mov
cli
dec
push
push
and
jns
jb
pop
xor
pop
xchg
lods
ret
adc
out
inc
repnz
jnp
mov
sub
mov
jecxz
orl
mov
hlt
dec
in
push
cmp
in
inc
scas
cmp
push
cwtl
and
pop
test
in
adcl
in
into
inc
sbb
add
dec
and
stos
jmp
es
movsl
add
into
jp
enter
inc
sub
sbb
xchg
in
sbb
add
pop
loop
add
out
adc
bnd
dec
fnstcw
stos
sbb
ja
movsl
or
lcall
cmp
outsl
cmp
pop
cmpsl
inc
push
aas
mov
sub
fistl
push
lods
xlat
mov
mov
incl
cld
inc
jo
mov
out
imul
bound
adc
bound
movsl
mov
xchg
test
xchg
jb
xchg
dec
je
lods
js
scas
fistl
out
push
andb
loop
test
sbb
in
fwait
repnz
adc
in
inc
mov
inc
push
mov
dec
lods
cltd
nop
xchg
fistpl
mov
lock
xor
push
lods
mov
mov
mov
mov
insl
push
shr
outsb
mov
dec
push
arpl
and
pop
jp
lahf
in
mov
ficompl
add
mov
lcall
jge
aam
push
subb
mov
jnp
pusha
push
push
out
mov
jmp
mov
sub
cmp
lods
pop
or
mov
add
xor
addr16
fistpll
adc
or
ds
adc
jmp
mov
aaa
inc
repz
icebp
pusha
aas
dec
iret
imul
mov
lock
repz
or
mov
lret
sub
pop
loop
rcr
xchg
fwait
popa
shlb
dec
xor
ret
es
mov
mov
fnstsw
xchg
inc
lock
inc
and
mov
xchg
out
int3
add
icebp
mov
ja
mov
xchg
xor
sub
shrl
or
popf
pop
sub
fisttps
pop
add
pop
ret
mov
xchg
sbbl
imul
cmpsb
out
mov
inc
nop
ror
popa
mov
push
push
pop
push
xorb
into
xchg
cmp
cmpsl
lahf
shr
push
fidivrl
jge
mov
cmp
push
in
fistpl
or
icebp
call
and
js
out
pop
ror
sub
in
cs
lods
out
call
and
inc
in
add
mov
jo
inc
sub
mov
fldcw
loop
bound
imulb
cmp
lea
pop
or
xlat
mov
cmp
int
or
nop
adc
int
stos
add
pop
ljmp
adc
or
aas
xchg
ret
icebp
xchg
imul
idivb
mov
data16
fisubl
out
mov
sub
xor
cld
addr16
mov
add
mov
mov
inc
sbb
adc
add
imul
gs
xchg
mov
cli
int3
jns
or
and
mov
lea
push
in
cld
fstl
movsl
adc
mov
xchg
lds
pop
xchg
jne
sbb
arpl
mov
sbb
xchg
and
test
cmc
lahf
adc
cmp
pop
dec
cltd
mov
ds
push
nop
push
and
adc
pop
pusha
movl
dec
or
mov
lds
pop
jl
test
inc
shll
ret
and
in
adc
ljmp
adc
dec
mov
int
insb
sbb
or
adc
fsub
mov
das
dec
popf
pop
dec
adcb
inc
or
cmpsb
mov
jmp
icebp
outsb
out
loope
es
sub
xor
jmp
jmp
dec
xorl
loope
jbe
xlat
inc
iret
jbe
sbb
push
ljmp
push
push
jmp
ss
stos
testl
ss
mov
sbb
scas
adc
push
bound
sub
popf
mov
xor
xchg
adc
sbb
outsb
pushf
lcall
js
js
iret
mov
movsb
movsl
js
or
sub
dec
lds
fldl2e
rep
pop
push
pushf
hlt
mov
xor
loope
sti
in
jae
jl
mov
aad
add
xchg
cld
sbb
inc
adc
inc
sbb
rcr
xor
xor
jnp
jo
push
push
pop
pop
lcall
pop
inc
jg
iret
cli
in
fcoms
js
pushf
in
outsb
mov
popa
shll
cld
aad
sbb
sub
ds
je
inc
mov
jmp
or
ret
rep
or
mov
jmp
popa
test
pop
popa
mov
lods
jno
pop
jbe
mov
enter
fwait
sbb
inc
nop
rcll
dec
aaa
jmp
into
fwait
push
loopne
push
push
cmp
lahf
lret
cmp
arpl
leave
adc
fmul
or
xchg
fmuls
dec
xor
aas
pop
ret
aaa
mov
xchg
sarb
andb
jecxz
xchg
mov
in
bound
leave
stc
fimuls
jecxz
cmpb
es
pop
jne
push
loop
in
dec
mov
cmpsl
jle
rclb
lret
in
cmpsl
pop
popa
imul
lahf
daa
pop
and
adc
jg
stos
pushf
pop
and
mov
frstor
jne
out
and
cmp
adc
outsb
lds
push
push
nop
jb
scas
pop
insb
cmp
arpl
sub
xlat
mov
jnp
xchg
sar
mov
push
sbb
popf
add
adc
fs
mov
or
lods
xor
movsl
je
jb
mov
jo
jmp
add
add
dec
inc
mov
mov
rcll
add
push
jle
bound
xor
ds
sahf
movsb
sub
inc
lcall
test
test
cmp
movsb
cmp
mov
shlb
lock
sub
ret
negb
xchg
js
std
loop
jmp
add
sbb
jns
outsl
mov
cld
lret
sbb
std
mov
rcrb
bound
push
rolb
negl
fsubrs
pop
pop
addr16
arpl
popa
ja
fcmovnbe
mov
call
mov
subb
pop
inc
out
cwtl
add
movsb
pop
das
out
icebp
jl
negl
movsb
and
cmpsb
sbb
jno
filds
stos
or
sbb
fcomps
and
daa
push
adc
mov
daa
mov
sbb
jge
fwait
lods
cmp
pop
inc
jp
shlb
dec
adc
sbb
sbb
cmp
cwtl
sub
fldenv
sahf
movsb
jno
es
sbb
pop
adc
xchg
push
iret
enter
sbb
sub
fstpl
pop
dec
jmp
mov
lods
test
nop
cwtl
push
scas
ds
mov
into
pop
inc
stos
leave
mov
or
mov
lock
rorl
fadd
fstps
cmp
sub
cmp
ds
mov
stos
ret
data16
cmc
xor
sub
lcall
jl
pop
xor
rcrb
insl
data16
xchg
dec
ret
pusha
das
adc
sbb
pop
fldenv
xor
adc
inc
ja
push
ds
movsb
pop
push
imul
cmp
jno
sbb
sarl
lahf
mov
push
subps
adc
and
in
fnstsw
jo
fisubrl
pop
push
sahf
mov
loop
inc
pop
xchg
mov
je
pop
ret
fwait
outsl
cli
sbb
dec
xchg
push
inc
add
aas
sti
mov
jne
sahf
in
sub
insb
out
repz
mov
mov
mov
test
xor
mov
mov
xor
idivb
sub
arpl
push
hlt
bswap
xor
movsb
out
enter
ds
insb
dec
test
and
add
xchg
movsb
mov
dec
pop
dec
repz
xor
sahf
jns
mov
adc
mov
and
lods
dec
xor
repz
mov
jecxz
add
or
sub
sub
pop
or
cmpsb
out
out
xlat
or
cltd
mov
scas
fsubrs
xchg
dec
ret
fwait
xchg
push
jb,pt
movsl
push
test
bound
aad
inc
jge
stos
fs
insb
aad
sbb
call
pop
aaa
sub
faddl
repnz
pop
xchg
mov
and
push
cltd
int
aad
stos
add
jg
jb
mov
sbb
lds
imul
jp
adcb
call
dec
mov
add
mov
mov
adc
push
cmp
or
inc
mov
cmp
mov
fs
or
sahf
and
out
in
lea
movsl
jns
in
pop
inc
dec
sub
xor
jg
cmpsl
push
lret
mov
push
shlb
dec
pop
in
lods
js
popf
adc
pop
mov
rorl
iret
aam
data16
push
cli
bound
jecxz
out
and
xchg
jecxz
push
out
je
xor
mov
rcll
sub
fs
test
mov
pop
sub
pop
stos
ljmp
xor
sar
repz
add
mov
xor
push
call
ja
dec
pop
dec
ss
repnz
sarb
cmc
and
jbe
xchg
dec
nop
jl
int
test
les
lret
jb
lods
fistps
ja
xchg
fs
shll
imul
inc
adc
mov
int3
jmp
xchg
out
lret
adc
push
insl
pop
dec
outsb
sbb
xor
or
sub
aaa
mov
ret
or
mov
repnz
pop
inc
fld
mov
xor
sub
sub
lret
or
sub
inc
adc
fwait
sbb
mov
fstp
mov
lahf
in
mov
call
rcrb
fcos
aad
push
jge
or
mov
das
and
mov
clc
dec
icebp
outsb
addr16
enter
icebp
scas
adc
xlat
lods
cmp
jns
ds
push
pop
mov
leave
test
jb
in
scas
and
cmp
sub
std
jge
repz
mov
imul
dec
mov
sub
gs
sti
fcoml
stos
bound
xchg
mov
xchg
push
mov
pop
adc
inc
icebp
scas
pop
jbe
sti
pop
cs
jp
push
sub
imul
and
loopne
mov
sbb
int3
jb
test
movsb
push
pop
pop
loopne
jmp
cmp
das
ficoml
fidivl
test
aam
xchg
fisttpl
je
add
add
lahf
inc
fcomps
xor
mov
or
mov
push
insl
imul
out
andb
cmc
fnstsw
jne
fstpl
fwait
pusha
ds
or
dec
push
cmpsb
outsl
pop
loop
enter
xchg
xor
dec
inc
roll
ljmp
or
jo
jns
cwtl
sbb
jbe
push
clc
mov
mov
loopne
and
pusha
inc
add
fsub
sbb
dec
add
xchg
adc
out
adc
icebp
xor
aam
jecxz
flds
push
pusha
adc
js
inc
adc
jae
icebp
test
mov
mov
mov
leave
jns
push
es
fucomi
mov
subl
stc
xchg
pop
push
int3
sbb
sti
aad
jnp
pop
mov
movsb
test
jb
jmp
cmc
sbb
or
mov
xchg
sahf
ja
into
popf
push
fsubrp
dec
sti
cmpsb
xor
orl
jae
imul
mov
sbb
mov
sub
adc
cmp
xor
insb
cs
int
fists
pop
fwait
subb
cmc
stos
sbb
dec
dec
jno
xchg
or
aas
das
movsb
sar
mov
adc
adc
xchg
lidtl
xor
in
mov
add
inc
inc
push
and
test
add
rorl
cmp
sbb
xchg
jle
xchg
mov
mov
ds
arpl
cmpsl
xchg
popf
and
movsb
inc
cli
rorb
in
adc
imul
popf
dec
in
icebp
sub
jne
xor
daa
mov
or
push
or
sub
add
xor
push
aad
movsl
inc
inc
push
xchg
add
jmp
fisttpll
cmpsb
test
xor
in
xor
imul
push
push
addr16
jle
insb
sub
fwait
jne
bound
scas
mov
int
xchg
movl
push
push
xor
aas
push
test
sbb
imul
and
popa
out
xor
shl
dec
and
ret
dec
inc
daa
dec
aam
cmpsb
adc
and
ljmp
js
sbb
das
dec
sbb
ret
inc
pop
cwtl
cmp
scas
movsb
sahf
orl
fbstp
adc
mov
test
pop
jns
data16
mov
or
or
out
dec
and
xchg
pop
adc
inc
inc
pop
mov
movsb
xchg
call
dec
scas
fdivl
inc
mov
mov
add
iret
adc
xchg
loopne
mov
jne
stos
or
lods
in
pop
lea
ret
hlt
ror
loop
testb
or
or
mov
into
outsl
movsb
icebp
xor
add
mov
mov
and
mov
xlat
lock
lcall
jge
test
in
loop
xchg
pop
sub
sub
ljmp
cmp
iret
ret
add
inc
jne
lea
and
xchg
push
mov
outsb
cwtl
pop
nop
imul
lret
inc
inc
inc
xchg
mov
add
mov
movsb
mov
jmp
outsb
sub
pop
xorb
imul
std
push
mov
test
int
or
in
movsl
pop
cmp
in
jle
aaa
test
cmp
cmp
sbb
pop
adc
pop
stos
repz
xor
pop
repz
lret
add
stos
mov
inc
and
inc
rclb
mov
cwtl
push
cld
aaa
xor
in
ss
and
mov
and
jl
pop
loope
jb
jmp
xor
or
pushf
jae
mov
dec
ja
mov
rolb
es
lret
mov
shll
mov
ret
jl
ret
inc
loop
ja
push
cs
mov
inc
pop
pushf
ret
out
ficomps
jno
sahf
mov
cs
sub
add
lods
jnp
out
jecxz
cmpsl
and
stos
adc
xchg
rolb
test
or
mov
push
stos
dec
lods
aad
scas
sbb
inc
push
cmpsl
inc
fwait
decb
inc
addb
mov
push
jns
add
aaa
adc
cld
cmc
and
adc
mov
xchg
add
push
dec
lcall
jle
fnstenv
inc
pushf
fcmovnu
loope
inc
pop
stos
int3
cld
and
adc
xchg
sub
insb
cmpsb
sub
std
mov
out
idivb
sub
or
inc
lds
and
out
sub
shlb
repz
out
ljmp
mov
sbb
xchg
xchg
movsl
xor
cmpsb
pop
mov
pop
pusha
mov
sbb
les
adc
and
enter
cld
std
mov
mov
pop
xchg
add
inc
sub
fcoms
push
and
je
clc
scas
mov
les
push
adc
mov
out
jnp
mov
sub
shlb
arpl
add
mov
inc
jns
push
mov
xor
pop
xchg
jae
push
or
pop
mov
addb
and
jno
or
movsl
je,pt
inc
inc
shl
and
xor
sarb
mov
jle
sub
adc
mov
dec
sahf
adc
fs
mov
lahf
imul
es
inc
add
test
fdivrs
js
notl
push
xor
push
out
sub
mov
aam
jge
fstp
in
sub
cmp
lcall
dec
sbb
into
clc
push
jmp
cmp
add
fxch
inc
popf
cmp
dec
std
mov
sar
jae
adcb
mov
rcrb
or
fmuls
fbstp
xchg
ficoms
lods
loope
daa
and
jbe
stc
cltd
sbb
je
cmp
fidivrl
cmpsb
xchg
jmp
adc
push
int3
pushf
imul
pop
repz
and
adc
or
ret
xor
out
je
adc
ljmp
negl
dec
pop
std
fwait
adc
xchg
cmp
jp
movsl
and
jne
xchg
cwtl
xlat
into
sub
rclb
aad
mov
jg
mov
sub
int
and
pusha
roll
adc
push
sub
inc
inc
push
dec
and
jbe
or
jg
jp
mov
push
mov
call
push
popf
jg
and
loope
cmpsb
imul
pop
jp
sbb
xchg
aam
mulb
xchg
dec
sbb
jo
xlat
push
stos
xchg
out
jno,pt
xchg
shrl
push
mov
aaa
hlt
addr16
ficoms
cld
inc
cmpb
add
in
push
je
cmc
sub
jp
stos
outsb
stos
sub
popf
mov
mov
lea
fsubs
jl
mov
sub
ficomps
sbb
nop
add
addr16
jecxz
das
pop
je
out
clc
pop
lods
inc
pop
xchg
sti
sbb
sub
cmpsb
sti
jl
sbb
xchg
adc
cmp
jg
sahf
je
imul
jnp
imul
pop
xchg
jle
mov
and
lock
xor
mov
sub
jge
dec
stos
pop
sub
fs
mov
sbb
or
sub
scas
or
mov
xor
jae
lcall
int
sub
mov
mov
out
pop
fimull
lods
or
inc
js
adc
xchg
mulb
rorb
xchg
xor
inc
pop
in
push
hlt
int
lcall
out
fsubl
adc
lret
aam
cmovg
and
pop
fdiv
jmp
inc
mov
sbb
arpl
arpl
xor
jle
scas
sti
jb
xor
mov
sbb
xchg
es
arpl
pop
leave
sub
idivl
jle
subb
mov
stos
outsl
xor
gs
xor
mov
shll
dec
mov
cmc
scas
mov
cld
inc
adc
sbb
lret
pop
push
outsb
hlt
je
fistl
test
out
adc
cld
and
addr16
shrb
int3
call
stc
cmpsb
jmp
movsl
mov
and
add
sub
xor
xor
and
out
inc
cmp
and
mov
mov
js
or
test
dec
mov
mov
push
mov
inc
dec
sub
cmp
shlb
sub
scas
popa
mov
jle
xor
repz
push
test
fwait
out
dec
cmp
sub
mov
cltd
mov
int3
mov
lret
cmpsl
adc
scas
mov
push
or
test
xorl
pop
dec
scas
out
inc
loopne
gs
jmp
mov
test
loope
cmp
cmpsl
movsb
pop
push
or
shr
mov
imul
gs
out
jecxz
push
jne
je
jb
xor
negl
repnz
pop
push
mov
and
pop
jl
xchg
sbb
cmp
es
loop
jecxz
fldcw
fildl
test
mov
in
cmp
gs
roll
pop
clc
dec
out
mov
out
movsl
shl
jno
push
adc
pop
enter
and
or
inc
push
and
lods
leave
int3
imul
pop
cmp
pop
cwtl
push
mov
enter
dec
es
or
lods
xchg
inc
mov
jb
mov
pop
mov
ds
or
mov
push
xor
aas
aas
jno
cltd
or
call
cmp
jno
or
andl
fs
notl
or
sub
lds
mov
lods
lods
push
xchg
push
jl
std
sahf
mov
inc
mov
push
fs
mov
sub
mov
pop
gs
mov
jl
pop
sub
and
hlt
das
mov
subl
push
add
jl
xchg
cld
sbb
outsb
add
xchg
test
lahf
mov
push
sbb
dec
loop
ds
in
add
aad
push
push
mov
xchg
clc
test
out
es
xchg
mov
aaa
jle
out
pusha
mull
stc
test
inc
cmpsb
dec
cmpb
dec
std
stos
out
mov
mov
sub
jno
or
std
adc
lods
ja
aaa
in
fmul
xor
push
sahf
push
lock
jb
mov
ljmp
mov
sub
rcll
cmp
insb
sbb
dec
test
jp
enter
add
clc
mov
mov
insb
sub
data16
sub
adc
icebp
sub
sbb
adc
inc
sbb
pop
cmpsl
insb
pop
outsb
mov
mov
cmp
cmpsl
sub
sub
pop
jge
mov
xor
in
dec
lahf
adc
les
out
enter
or
iret
loope
ficoml
xchg
in
shll
mov
sbb
dec
insb
rorb
aam
xchg
pushf
divb
push
popf
stc
aas
andb
cltd
call
cwtl
xor
jbe
loop
in
ret
jecxz
ds
loopne
adc
xchg
mov
fisttpl
imul
dec
iret
mov
xchg
and
add
add
fisttps
das
outsl
inc
sbb
cs
lahf
sub
cmc
cwtl
mov
ret
test
mov
xchg
inc
movb
jno
addr16
push
pop
popf
jg
loopne
repnz
ja
divl
shrl
mov
sub
aas
sbb
add
adc
jmp
int
out
insb
orb
lcall
pop
in
in
mov
ja
jmp
jae
push
jp
pop
pop
mov
in
dec
jne
add
xor
xchg
mov
mov
mov
flds
cmp
icebp
mov
bnd
das
and
push
pop
in
lret
xchg
ficoml
lods
cwtl
xchg
pushf
pop
add
arpl
shll
ds
and
and
xlat
aaa
jp,pt
lret
or
adc
dec
cs
push
cmp
ja
pop
jb
add
sub
xor
scas
insb
outsb
jg
cwtl
sbb
scas
imul
jne
push
and
add
inc
inc
insb
add
imul
fisttpll
xchg
adc
rol
popa
ljmp
cmp
int
pop
mov
loop
pushf
dec
add
mull
in
jge
fdivrl
cmp
lods
mov
nop
push
push
and
sbb
push
mov
mov
xor
and
jne
in
stc
cmp
and
mov
xorb
movsb
dec
dec
mov
pusha
or
dec
in
xchg
cmp
fadd
addl
mov
xor
sti
lret
ja
add
js
xchg
adc
int3
jmp
jl
cmpsb
adc
test
adcl
and
jg
mov
and
mov
in
mov
jp
sti
mov
jno
adc
jmp
enter
mov
and
inc
notl
dec
jp
sbb
lds
pusha
and
insl
js
jb
xchg
rcrb
dec
xchg
jns
frstor
xchg
push
fimull
inc
in
pop
bound
xor
jne
test
sub
iret
inc
and
lret
dec
lds
mov
mov
idivb
pusha
push
or
adc
insl
test
sbb
out
jecxz
inc
scas
mov
add
cmp
add
popa
insl
insb
shrb
ror
lcall
out
mov
push
mov
fsub
cmc
test
pop
int3
push
rcl
mov
adc
inc
lret
decl
out
popa
pop
test
lea
aad
sbb
je
fldt
inc
aaa
rorb
in
and
add
jl
das
pushf
ja
jle
out
or
incl
inc
jmp
or
lea
jl
inc
jp
sarl
cmp
aam
inc
dec
stos
iret
popf
sub
ja
dec
cltd
jg
fbld
imul
mov
add
xchg
mov
fildll
adcl
in
pop
ja
push
bound
xor
inc
test
test
xor
clc
mov
out
xchg
fsub
fidivl
jge
jo
loope
dec
sub
dec
out
push
xchg
fiaddl
mov
push
mov
cmp
daa
bound
rorl
mov
sub
shlb
test
pop
das
mov
push
dec
or
xor
inc
insb
clc
add
iret
add
repz
sub
mov
daa
xor
inc
xchg
xchg
sti
test
push
xor
jp
clc
sub
sub
xchg
das
adc
rcll
test
mov
inc
dec
pushf
sahf
pop
arpl
xchg
dec
sbb
pushw
fwait
and
sbb
adc
not
sbb
and
cltd
cmovl
js
mov
push
aad
ficompl
sti
pop
and
mov
adc
lds
test
ss
pop
in
idivl
jne
add
pop
in
cmp
je
insl
into
adc
push
in
test
fiaddl
push
ret
sub
aaa
repnz
dec
inc
xchg
mov
cmpsl
lahf
lock
mov
cmpsl
jo
mov
shll
fnsave
cmove
xor
mov
adc
xor
and
scas
call
ljmp
dec
pop
in
in
add
adc
mov
jge
sub
stos
pcmpgtw
dec
pop
mov
sub
mov
add
gs
jns
gs
mov
movsl
out
xchg
ds
cmpsl
sub
sbb
repz
jbe
jno
adc
cmp
mov
iret
jnp
out
fcoms
imul
xor
notl
fadds
bound
pushf
mov
xor
lock
and
add
adc
and
adc
adc
cltd
and
loopne
push
xchg
loop
jno
dec
lahf
clc
jb
jmp
sbb
imul
push
das
jne
fnstenv
push
dec
lods
dec
mov
pop
mov
lock
xor
stos
loopw
inc
pusha
add
xor
adc
rcrb
push
hlt
xor
cwtl
mov
lret
and
sbb
clc
xchg
pop
push
rclb
mov
adc
in
divb
sub
dec
jg
push
and
inc
lea
stos
and
in
xor
out
into
into
xchg
out
movsl
ss
iret
or
push
xchg
enter
pand
and
imul
xlat
call
movsb
call
jp
daa
pop
and
stos
daa
push
lret
cmp
mov
addb
add
or
pop
dec
push
ja
fsubrl
mov
pushf
or
pop
dec
outsl
loope
adc
inc
out
adc
push
mov
mov
mov
dec
pushf
std
jp
xchg
push
adc
xor
in
jo
jae
faddl
mov
mov
mov
aas
enter
imul
mov
mov
mov
and
call
pop
and
repz
xor
es
ljmp
int3
mov
adc
subb
and
sub
dec
iret
inc
mov
fucomp
jbe
and
mov
ret
add
lret
jp
int3
ss
mov
push
addr16
fbld
push
je
insb
push
les
and
scas
dec
addl
mov
cmp
movsb
push
push
pop
cmp
adc
shr
popf
lcall
inc
adc
or
inc
negl
dec
scas
loope
jno
cmp
shlb
xor
and
dec
dec
push
add
stos
scas
mov
call
arpl
or
sahf
repnz
mov
ret
sbb
rcrb
outsb
lcall
pop
daa
lock
jne
mov
or
ja
testb
cmpsb
cmp
sbb
lahf
out
cmp
or
sbb
mov
xor
push
cmp
mov
push
ljmp
out
xor
hlt
arpl
shrb
stos
daa
pop
and
cmpsl
arpl
xor
clc
jge
cmp
xchg
dec
dec
adc
loope
xchg
mov
dec
loope
ret
xor
add
add
mov
xchg
fstl
shlb
push
xchg
jae
mov
mov
adc
dec
inc
repnz
mov
imul
sti
xlat
mov
mov
nop
mov
and
inc
mov
js
loop
ret
popa
test
jge
sub
loope
sbb
lods
mov
lahf
pop
sub
cli
pusha
mov
xchg
jp
loope
lods
xchg
movb
xor
mov
int3
push
mov
loope
icebp
loopne
pop
loopne
into
mov
jb
sub
or
adcl
lret
jp
or
xchg
data16
pop
fs
pop
in
xor
mov
pop
maxps
jo
dec
jl
cmp
push
push
enter
popf
mov
and
sti
dec
cmpsb
add
loope
add
mov
jmp
push
jg
lds
mov
std
pop
push
test
dec
fcom
xchg
rcl
xchg
xchg
add
js
sub
xor
push
ret
addr16
mov
mov
pop
arpl
ficompl
mov
arpl
push
push
cmp
adc
sub
aaa
gs
jnp
and
sub
enter
shl
adc
fisttpl
and
xchg
mov
lahf
mov
push
push
cmp
insl
lret
mov
addl
pop
mov
inc
xor
lods
ja
jle
jl
mov
rcrl
push
fidivs
xchg
addr16
adc
pusha
frstor
mov
cmpsl
jns
lods
loop
lock
and
sbb
popa
test
mov
mov
add
inc
sbb
xor
aad
cwtl
and
clc
pop
inc
mull
adc
lea
enter
xchg
mov
xor
dec
popa
into
cmpsb
jl
or
aad
push
and
jge
icebp
push
push
cmpsb
cmp
mov
popa
push
mov
lahf
add
sbb
add
and
inc
pushf
jb
xchg
jmp
cltd
jl
jns
and
mov
dec
in
adc
loope
out
loop
mov
mov
xor
pop
mov
psubusb
jl
insb
repnz
repz
in
sub
pop
shl
insl
cwtl
iret
repnz
push
out
jl
aas
test
mov
stc
xor
sbb
cltd
cli
sbbl
movsb
jp
mov
das
mov
neg
out
shr
cmc
in
xor
pop
jo
aam
scas
dec
pop
std
adc
mov
mov
jle
pusha
aas
cwtl
lods
mov
daa
mov
mov
mov
fidivrs
push
or
sub
inc
je
jecxz
scas
pusha
jmp
repnz
push
or
push
cs
sub
sbb
xor
inc
ljmp
out
out
xchg
rorl
sbb
and
push
frndint
or
jmp
lahf
and
fsubs
inc
jl
jge
mov
pop
inc
dec
jle,pt
outsl
and
fiadds
popf
sbb
mov
les
iret
cmc
inc
int
in
pop
xor
jno
imull
sub
pop
popf
jne
icebp
dec
inc
pop
arpl
pop
mov
testl
mov
aam
jbe
out
or
mov
mov
mov
scas
sub
adc
in
xchg
pop
inc
repz
add
dec
mov
xor
or
or
sti
into
popa
push
aam
pusha
push
inc
mov
stos
imul
jo
and
mov
jecxz
and
fs
invlpg
jge
mov
inc
xor
sahf
or
cmpsb
lret
mov
fidivs
adc
rol
xchg
adc
jae
and
jle
negb
mov
xor
arpl
inc
std
pop
xor
jecxz
mov
sbb
fstps
sbb
pop
fistps
repnz
sub
jbe
mov
sbb
leave
rcrl
mov
fnstsw
mov
sbb
leave
movsl
frstor
mov
mov
subb
inc
lcall
fwait
sub
int
cli
jp
sub
les
mov
push
pop
call
es
add
inc
sbb
mov
jnp
out
mov
xor
push
test
fwait
cld
pop
pusha
dec
leave
adc
lods
fldl
sub
xorl
cmp
lods
lock
add
sub
xchg
sbb
insl
cmp
das
ficoml
mov
lods
enter
mov
fmul
sbb
inc
or
mov
ljmp
xchg
ljmp
insl
in
jp
das
mov
pop
dec
inc
enter
cmp
inc
sbb
popf
xlat
jmp
imul
or
and
mov
and
xchg
mov
xor
jl
jp
dec
pop
lods
cmp
inc
je
gs
add
loopne
rclb
out
jno
pop
test
sbb
lds
sar
insl
je
sub
fidivrs
imul
movsb
mov
xchg
xchg
fistpl
jne
dec
inc
jl
xchg
aam
mov
fmuls
sbbb
inc
jle
pushf
xor
es
push
test
xchg
insl
pop
jmp
jp
push
jbe
push
and
xlat
lods
xor
mov
mov
jb
loopne
bound
aam
cmp
mov
aam
mov
fcmovnu
and
in
jns
arpl
loopne
sbb
mov
in
add
and
xlat
mov
push
pop
aam
addr16
push
bound
rcr
xchg
mov
inc
add
ds
dec
push
xchg
mov
pop
stc
jnp
or
sub
enter
cmpb
fs
and
jbe
loope
jmp
sar
and
leave
sbb
jns
ret
sahf
adc
pop
aad
push
das
andl
imul
jecxz
inc
mov
lcall
xor
jp
mov
jno
jle
lods
sbb
fsqrt
xlat
xchg
fstpt
ds
loopne
fsubs
dec
xchg
fstl
vpshuflw
jecxz
lds
xchg
cld
or
and
inc
inc
popa
push
sbb
jp
popa
sub
adc
rcl
adc
ljmp
mov
fdivs
or
mov
pushl
shrl
pop
cwtl
push
repz
ror
sahf
addr16
stos
push
mov
jmp
or
stos
pushf
xchg
ffree
test
mov
adc
cmp
enter
in
imul
adc
xor
in
mov
stc
pop
pop
test
flds
push
jmp
jns
or
mov
rorb
or
xor
adc
jecxz
pop
push
mov
aam
jnp
movl
test
ret
loop
sub
ljmp
cltd
mov
notb
xor
xchg
pop
xor
add
int
sbb
dec
jmp
test
lods
mov
cs
mov
lds
adc
cmpsl
enter
jo
fisubl
xor
or
and
aad
inc
adc
xorl
bound
sub
pop
icebp
cmp
adc
or
fstps
lods
mov
mov
sbb
xlat
imul
jl
or
cmp
into
hlt
sub
inc
arpl
xchg
add
das
cmp
push
add
shrb
xchg
and
mov
add
aam
xchg
scas
sub
or
aaa
popf
leave
das
add
test
out
add
lods
pop
cmpsb
les
mov
into
push
mov
out
xchg
jmp
pop
stos
cltd
cmpsl
sub
jno
mov
sub
jns
push
shl
add
push
pushf
popa
xor
mov
dec
push
push
mov
mov
pop
cmp
add
into
add
sbb
sbb
aad
jecxz
and
push
push
xchg
rolb
adcl
sub
jne
xchg
and
and
fidivl
aam
push
testl
ss
out
xchg
insl
and
sarb
pop
cmpsl
ret
push
mov
push
in
pop
int
ficomps
lret
cmp
adc
or
data16
enter
dec
fstpl
xchg
push
lea
xchg
push
or
hlt
xor
xchg
out
adcl
pop
push
imull
js
and
mov
sub
add
xchg
dec
inc
xchg
in
shl
jecxz
lret
xchg
loopne
mov
loop
and
jmp
pop
inc
enter
xor
mov
ret
les
imul
xor
loop
cli
ss
pop
dec
xchg
int3
into
cltd
imul
cmp
stc
flds
cmp
fsubrs
imul
add
ds
jmp
mov
test
subb
push
imul
pop
xchg
jl
cmp
dec
xchg
mov
mov
shll
sub
sarl
xchg
dec
jge
std
jl
xorb
call
repz
fwait
ss
sbbl
daa
scas
xor
ljmp
js
mov
sbb
pop
inc
and
mov
xlat
sub
inc
cmp
lcall
inc
xchg
inc
addr16
sti
sbb
xchg
pushw
imull
add
pop
daa
in
inc
push
adc
xchg
push
je
mov
mov
clc
std
push
movsl
rclb
loope
test
push
loop
sub
and
and
dec
xchg
out
ret
sbb
enter
loopne
cmp
add
mov
mov
icebp
push
sahf
dec
jo
dec
or
xorb
addb
jnp
push
mov
cmp
jmp
nop
or
xchg
repz
shr
add
mov
sbb
pop
lret
cmp
and
test
sti
mov
jnp
dec
pop
xchg
mov
fadds
sub
mov
cmpsb
mov
xchg
cmp
enter
inc
jno
mov
push
mov
jb
out
andl
or
scas
ja
push
repz
cmp
push
xchg
add
clc
adc
jns
repnz
jmp
incl
pop
cmp
sub
cmp
repnz
cmpsb
push
pop
or
pop
xchg
js
repnz
pop
pop
lret
cmc
and
cmpb
bound
popf
and
addb
sbb
daa
xor
out
fisubs
xor
faddl
pushf
cmc
pop
sahf
pop
jno
dec
cmp
adc
jae
les
aad
fcmovbe
repz
dec
push
adc
cli
scas
rolb
add
cmpsb
daa
fwait
mov
fwait
shr
pop
nop
mov
gs
insb
sub
push
mov
jge
push
in
jb
stc
push
xchg
push
pop
imul
pop
fimuls
sub
jnp
int
imul
xor
inc
in
xchg
cltd
orl
mov
sbb
pop
jbe
adc
lret
mov
in
push
outsb
jecxz
loopne
test
in
xchg
jae
in
popf
test
inc
xchg
fidivrs
push
push
pop
lcall
pop
std
jmp
test
jecxz
inc
dec
imul
out
sub
mov
dec
inc
inc
mov
out
pop
js
add
fwait
testb
js
dec
jne
leave
stos
shl
add
cmp
sbb
frndint
popa
inc
sbb
cmpsl
xor
sahf
dec
jnp
out
outsl
in
jl
stos
add
sub
outsb
subb
inc
and
add
jg
mov
jo
aam
shll
data16
add
dec
insl
inc
jp
xchg
xchg
pop
cmpl
pop
xor
mov
flds
cld
add
lds
cmp
inc
push
jo
std
mov
mov
insl
cmp
repz
or
mov
aam
into
test
shl
sub
cmp
cltd
imul
loop
adc
enter
mov
addl
push
inc
xor
popf
fstpt
rcrb
es
lods
inc
xor
push
out
addr16
and
test
push
call
fcoms
jg
fsts
xchg
fwait
pop
xor
fmulp
cs
loope
add
jmp
mov
adc
jns
inc
jnp
jle
repnz
add
popf
add
fimull
mov
cld
adc
and
dec
push
aaa
addl
jecxz
jne
out
in
adc
xchg
cs
scas
pusha
sbb
lret
int
outsb
fs
fwait
test
push
fiaddl
lds
dec
push
and
jp
push
jecxz
mov
pop
pop
scas
xchg
push
std
adc
aam
adc
add
or
pop
pop
hlt
lods
in
rcr
pop
mov
rorb
pop
push
adc
scas
or
stc
in
roll
popa
cmp
fstps
int3
cs
mov
or
adc
mov
das
sbb
or
and
inc
shrl
test
and
scas
cmpb
pop
jb
ljmp
sarb
cmp
leave
pop
hlt
les
add
es
stos
or
push
out
data16
mov
inc
sahf
xlat
data16
sbb
fs
sbb
sub
lahf
cmpsl
mov
test
fcmovnbe
push
incb
out
iret
sbb
das
stc
lcall
negb
test
mov
pushf
xor
outsl
cld
xchg
jae
sti
nopl
cltd
cmp
rcrl
jae
sbb
adc
mov
mov
je
int3
stos
fdivrl
lds
stos
clc
incb
xor
dec
push
pop
jbe
arpl
mov
add
add
fwait
mov
movsb
adc
lea
dec
lcall
xchg
mov
jns
or
add
jo
cmp
sbb
ret
cmp
bound
mov
mov
sbb
sub
and
pop
pop
sbb
cmp
dec
inc
mov
out
jbe
pop
repz
sub
and
out
iret
xchg
and
sti
sbb
and
int
ficompl
mov
mov
mov
pop
cmp
arpl
cltd
inc
add
mov
dec
mov
and
sbb
pop
call
dec
mov
loope
sbb
push
fcoms
rcrb
out
popf
decb
sti
es
std
add
jne
ret
push
movsl
aaa
jmp
and
std
into
adc
jne
mov
gs
or
in
adc
lods
dec
lcall
mov
sbb
push
jno
jb
push
xor
test
sti
dec
cmpsl
push
cs
sub
in
or
scas
add
xchg
xchg
pop
dec
sbbb
and
ljmp
add
cmpl
pop
mov
test
cli
test
dec
lods
sub
push
push
mov
or
cld
xlat
fcoms
cmp
arpl
inc
les
add
xorl
jl
sbb
xchg
add
xchg
sub
leave
insl
adc
popa
and
ret
pop
push
insl
out
mov
ds
xor
sub
mov
rcll
ds
cmc
jne
xor
sub
loop
fdivrl
push
xlat
push
add
xor
mov
fsubl
push
fistl
jmp
dec
outsl
pop
mov
ret
mov
lods
mov
stos
mov
xchg
imul
mov
pop
mov
cld
jecxz
xor
outsl
xor
ss
hlt
cmp
out
repz
jno
test
aaa
jmp
sub
push
jp
jmp
xchg
dec
xor
sbb
mov
vaddps
pop
pop
sar
adc
adc
adcb
psubb
fs
adc
sbb
out
sub
je
das
mov
xchg
adcl
mov
mov
lods
and
fadds
cmp
mov
imul
js
aad
outsl
hlt
cmp
dec
adc
cltd
test
test
notl
call
pop
in
faddp
sbb
dec
mov
or
in
push
sub
loopne
add
jae
filds
push
dec
cmpl
lea
add
mov
dec
or
push
test
xlat
mov
imul
xor
and
stos
bound
mov
pop
aad
ret
or
jge
push
lret
xchg
xor
xor
push
out
rcll
push
add
mov
aam
pop
int
and
nop
adcl
fwait
out
push
mov
or
mov
or
push
pop
mov
cmc
lret
pop
fisubrs
adc
test
subl
les
shlb
loop
lret
dec
fadd
xchg
mov
test
dec
push
rclb
enter
and
into
mov
sub
mov
mov
scas
mov
add
sub
loope
cmp
out
in
dec
xchg
dec
push
add
xor
rclb
or
fisubrl
insl
jo
cmp
xorw
fcmovnu
dec
fimuls
push
mov
shl
mov
into
lods
sub
inc
adc
xlat
loope
pop
rolb
xchg
pop
mov
add
dec
add
and
mov
pop
aam
sub
sbb
and
aam
mov
push
adc
cmp
das
icebp
mov
mov
push
aam
add
lods
lret
mov
cltd
cmp
inc
or
pop
mov
push
stc
cld
shrb
enter
movsl
xchg
lcall
testl
xchg
icebp
push
rorb
inc
jae
les
mov
adc
lret
pop
lods
push
repnz
enter
xchg
add
xor
pusha
push
pop
adc
mov
and
rcrb
inc
dec
test
fldl
fldl2e
ljmp
pop
sub
pop
add
push
mov
movsb
divl
inc
nop
aaa
jo
testb
arpl
adc
add
shr
loope
repnz
int3
ficoml
or
mov
add
cmp
rol
jnp
pop
xlat
out
cltd
cmp
lods
xor
cltd
arpl
add
imul
ja
ret
push
sti
jle
imul
add
je
js
push
push
push
sarl
mov
mov
pop
xchg
rorl
mov
dec
xchg
and
stc
out
imul
f2xm1
pop
ljmp
aas
push
jae
or
sbb
jge
lods
xor
stos
fsubrs
out
enter
mov
out
sbb
jge
mov
jl
movsl
js
mov
test
push
sahf
scas
adc
into
adc
mov
lods
imull
cmpsl
and
or
hlt
sbb
ljmp
es
inc
or
xor
cmp
in
lods
xor
mov
and
das
jns
icebp
fstps
dec
sbb
jge
sbb
in
repnz
lock
call
mov
sbb
xchg
push
sub
inc
sub
mov
jne
loop
cmpsb
mov
xchg
mov
dec
and
cmpsl
cs
or
hlt
aas
mov
pop
lahf
pop
and
aad
mov
xchg
call
lods
cwtl
loope
out
repnz
leave
mov
cmc
sbb
stos
push
add
sbb
jo
jl
and
sub
repz
clc
sbb
filds
xchg
dec
push
bound
int3
lea
cmp
add
pop
pop
mov
aas
cmp
cld
cltd
xor
dec
out
stos
test
mov
repz
inc
cld
pushf
push
and
sbb
rolb
mov
inc
dec
jge
repz
lock
pushf
cmp
cvttps2pi
xchg
gs
mov
aam
pop
inc
dec
jl
sub
insl
mov
clc
push
xchg
fstl
dec
jg
ret
cmc
and
pop
pop
clc
int3
push
test
xor
lahf
leave
pusha
and
lcall
out
rclb
dec
dec
pop
fs
jb
xchg
inc
push
push
aad
insb
inc
scas
mov
lods
imul
mov
lret
bnd
mov
lods
jge
in
inc
into
push
pusha
cmp
test
addl
lods
dec
js
pop
mov
maskmovq
xchg
mov
add
mov
xchg
jb
push
inc
add
ds
imul
mov
dec
enter
fiaddl
outsl
push
dec
jnp
test
int
movsb
inc
dec
add
imul
sbb
data16
cmp
push
ror
insl
cmp
dec
rol
cmp
mov
andb
test
outsb
mov
cmp
lods
cmpsb
cmp
cmp
mov
aas
outsb
mov
inc
dec
imul
mov
jne
xchg
dec
cmc
cs
mov
ja
jnp
pop
jnp
outsl
ja
test
xchg
mov
dec
cld
xchg
bound
sbb
mov
cmc
scas
mov
xchg
ss
pop
inc
aam
and
and
or
dec
movsb
xor
sahf
pop
rcr
sub
push
jp
lcall
stos
add
cmp
test
out
repz
xor
xlat
int
jae
mov
lret
call
xor
mov
repz
pop
dec
fsubrl
and
orl
mov
xchg
jecxz
pop
das
push
loopne
mov
dec
fidivrs
xor
mov
xchg
add
pop
sub
insl
cmc
scas
imul
into
sub
movsl
subb
mov
stos
sub
pop
mov
sub
cmp
jbe
dec
roll
ret
icebp
mov
loop
xor
mov
cmp
pusha
and
lret
cwtl
dec
lods
inc
rorl
jbe
loop
imul
adc
lock
rcrb
repz
scas
int3
push
cmp
int3
pop
mov
iret
ficompl
in
adc
xor
pop
dec
sti
jle
inc
cmp
and
pop
inc
xchg
sti
sub
sbb
push
loop
cmp
inc
out
sub
fisttps
popf
mov
lea
movsb
mov
adcl
add
add
sti
test
ror
vcmpsd
lods
pop
divl
roll
sub
stos
and
or
sti
mov
pop
js
or
cmc
mov
sbb
rorb
pushl
inc
jb
push
popf
sbb
mov
aad
jp
mov
jmp
mov
mov
xchg
sbb
cmp
xchg
adc
jp
mov
jo
jle
jo
inc
xor
xchg
lea
add
inc
dec
int3
mov
mov
push
out
mov
and
call
jb
in
shlb
in
mov
xchg
fcoml
sub
movsl
lret
js
sub
cmpsb
jecxz
or
lret
push
rorb
mov
cs
xchg
jmp
mov
mov
jne
sahf
cmpsl
pop
pop
shll
test
pushf
inc
mov
jecxz
nop
mov
push
shrb
jnp
or
cmp
pop
cld
lcall
int3
pushf
xlat
push
movsl
sub
cld
inc
imul
inc
dec
negb
add
ss
jnp
cmp
mov
mov
sub
jecxz
xchg
cltd
pop
inc
push
push
add
enter
adc
inc
sub
ljmp
lods
or
jmp
repz
inc
cmp
fsts
lea
mov
cmp
fistpl
bound
data16
shrl
shl
inc
dec
and
call
add
xor
movsb
lods
dec
sbb
push
xchg
pushf
imul
inc
aaa
mov
ror
arpl
adc
mov
inc
in
adc
cmc
mov
jne
clc
inc
jle
cltd
loop
jge
mov
into
pop
jge
insb
xchg
ss
add
push
lds
cmp
dec
jnp
mov
lahf
push
sbb
pop
div
aas
mov
mov
lock
ret
test
xor
cmp
jne
stc
push
jne
ds
or
lods
jecxz
stos
rol
rcrl
push
es
rcrl
in
lea
icebp
jae
lods
jle
sbb
ffreep
sub
loopne
inc
loopne
push
insb
push
jl
pop
les
add
popf
xchg
sbb
dec
pop
insb
sbb
sbb
and
inc
cmp
sbb
xchg
bound
jbe
cmp
icebp
pusha
mov
cmp
insl
add
loop
adc
imul
rcl
jae
adc
sbb
popf
jecxz
jns
movsb
test
insl
in
or
iret
pop
sahf
enter
jl
add
scas
insb
push
inc
sub
mov
fs
jns
sti
fmuls
ds
scas
mov
fstpl
and
lret
mov
movb
cld
jns
fildll
test
sub
out
jge
xor
and
lret
pop
or
cli
test
mov
in
nop
inc
mov
into
dec
fwait
and
ja
add
mov
jmp
jae
xchg
icebp
cmpsl
jno
pop
jno
mov
pop
or
and
in
aaa
cmp
sub
jle
div
jae
outsl
in
test
sbb
jge
mov
dec
add
loopne
adc
dec
add
cmp
cmpsl
or
stos
scas
sbb
bound
aaa
add
xlat
fsubr
ror
dec
decl
adc
fnstenv
dec
cmpsl
push
sub
mov
push
lods
and
lcall
cs
cwtl
je
lcall
pop
mov
les
and
sbb
das
and
mov
cmp
pop
loopne
inc
push
icebp
cmp
and
stc
andb
sbb
in
sahf
inc
and
jle
add
fnsave
ds
xor
fsubl
adc
adc
sbb
mov
xchg
mov
xchg
sbb
in
xchg
aad
rorb
lods
fimull
lea
xchg
and
push
cmp
sub
mov
nop
and
mov
sub
jns
jmp
push
xchg
xor
xchg
pushf
xor
jmp
cmp
and
mov
sbb
jo
outsl
enter
xchg
loopne
lret
add
mov
mov
int3
aaa
fldt
inc
popf
in
ret
jp
mov
add
sti
lret
test
pop
call
out
iret
adc
xor
popa
ret
ss
testb
cmc
push
aam
inc
and
push
and
dec
negb
mov
pop
jle
dec
jmp
rolb
push
or
outsb
and
cli
mov
xor
aam
mov
jae
pop
ljmp
iret
mov
jae
sub
inc
movsb
inc
rcrl
push
dec
lret
or
sarb
and
adc
idivb
jl
nop
xchg
je
mov
aas
roll
mov
inc
fisubrl
scas
pop
ret
xchg
decb
jle
mov
test
pop
sub
out
adc
gs
ficomps
mov
repnz
mov
jnp
out
mov
xchg
ret
insb
or
jb
loop
add
pop
xor
dec
jg
pushf
mov
popa
leave
cmp
loopne
add
rorl
cwtl
lcall
iret
imul
into
pop
xlat
fmuls
pop
xor
mov
mov
or
es
push
insb
dec
xchg
sbb
push
lea
push
dec
lds
sbb
and
pop
js
pop
lock
les
mov
fwait
jp
xchg
icebp
or
movsb
mov
push
dec
rclb
mull
flds
repz
jp
push
xchg
das
xor
xor
and
outsb
push
mov
lahf
push
cmp
add
jmp
sbb
and
inc
mov
push
enter
hlt
incb
pusha
addr16
fdivrl
mov
wbinvd
ljmp
adc
jecxz
ret
lahf
inc
cmp
loop
bnd
iret
in
lea
pop
negl
in
xchg
sub
adc
hlt
lods
pop
ror
stos
psubsb
lea
fidivrl
adc
fadd
fisubs
jne
sub
add
lret
mov
and
fxch
and
dec
popf
ss
out
mov
icebp
and
cltd
push
or
popf
mov
pop
sahf
adc
jmp
pop
sub
int
pop
pushf
insb
sub
jae
dec
mov
xchg
push
cmp
mov
xorl
cmp
pusha
lcall
add
jbe
js
add
repnz
test
fstpl
ljmp
push
mov
call
es
adc
mov
repz
lcall
pop
jb
push
lea
pop
cmpsl
test
or
pmulhw
push
gs
mov
andl
xchg
dec
cltd
cmpl
mov
mov
testb
push
push
pushf
enter
mov
sbb
xchg
jle
mov
out
mov
mov
dec
jno
jnp
dec
outsb
std
nop
fidivs
mov
and
cmp
mov
fsubrl
sbb
xor
movsl
arpl
movl
dec
enter
xor
or
mov
inc
dec
sbb
xchg
ds
mov
repnz
mov
pop
mov
jbe
ss
jne
ss
sub
shlb
inc
mov
push
addr16
dec
hlt
or
cwtl
add
testl
sbb
inc
in
xchg
or
and
in
cmpsl
stos
dec
clc
ret
jnp
out
jl
jo
cld
sub
es
mov
xchg
mov
das
in
mov
pop
jmp
add
orb
sarb
ss
das
movsl
test
fidivl
adc
ja
inc
cwtl
lock
push
icebp
in
or
xchg
fs
and
mov
cmp
pop
mov
xchg
mov
mov
jp
fidivl
cmpsb
mov
dec
push
pop
das
in
imulb
jmp
incb
aad
push
sub
dec
out
test
aaa
mov
adc
jne
xor
cwtl
push
sbb
and
inc
cmpsl
sbb
xor
popa
movl
repz
cmp
push
popf
mov
push
add
and
lea
aaa
outsb
sahf
push
dec
sbb
xchg
scas
xchg
or
and
mov
mov
lahf
fbld
push
aad
xor
test
icebp
pop
push
inc
imulb
cltd
sbb
loopw
fwait
mov
fldl
xchg
lea
mov
xor
xchg
pop
repnz
aas
test
mov
out
sbb
xlat
decl
sbb
and
or
js
imul
xchg
test
cmc
stos
cmpsb
inc
and
jns
xor
pop
ret
lods
mov
aaa
mov
push
nop
scas
out
sbb
decb
pop
or
movsb
insl
inc
push
cld
cmp
popa
inc
sbb
mov
xor
cmpsw
sub
pop
fs
push
rol
pop
mov
mov
out
push
jne
add
mov
ljmp
push
in
push
jns
data16
push
lods
adc
mov
cld
sub
adc
jl
push
divl
push
movsl
cwtl
repz
lahf
push
stos
pop
andl
ret
inc
xchg
sbb
fidivrl
mov
aas
lret
mov
fwait
movsl
into
xor
test
adc
xchg
cwtl
pusha
mov
sti
inc
enter
rep
stos
sarl
mull
push
sub
mov
pop
pop
insb
push
sub
cmp
xor
jns
lahf
rol
lods
xchg
out
push
ret
xchg
stos
dec
popl
xchg
notl
scas
in
inc
out
mov
cs
pop
lock
iret
or
sbb
ds
mov
or
xchg
sub
leave
movsl
xor
je
mov
imul
cmc
bound
or
cmp
add
pop
pop
pop
lcall
fldt
sbb
lods
out
push
mov
sub
xchg
inc
sub
adc
lock
xchg
fistpll
xchg
fstl
fwait
hlt
scas
dec
dec
cmp
push
rcr
push
mov
cmp
divb
fnsave
dec
push
lret
mov
in
ds
test
pop
xchg
mov
fnstsw
jmp
cs
ds
jne
jecxz
or
xor
or
sbb
mov
inc
dec
shrl
movsb
inc
jmp
je
adc
daa
popa
emms
dec
popa
inc
push
mov
adc
mov
adc
ljmp
lahf
pop
dec
sbb
cld
add
push
ss
push
mov
into
addr16
or
adc
cmp
xchg
jge
push
nop
outsl
stc
cmp
mov
lahf
lahf
das
add
insb
addr16
popf
arpl
sar
mov
aam
stc
stc
fs
push
or
in
xor
or
push
fs
add
bnd
add
pop
lahf
mov
lahf
loope
mov
inc
xchg
iret
fwait
addl
xchg
jb
jae
push
loopne
inc
dec
xchg
mov
jmp
in
push
xchg
cmp
add
dec
adcl
xor
inc
sub
outsb
xor
mov
repz
mov
ds
and
pop
lret
subl
sub
inc
and
xor
scas
mov
inc
jmp
and
push
loop
nop
push
push
adc
das
jno
into
ss
dec
out
mov
add
sti
int3
outsl
xor
xchg
adc
jne
adc
push
lret
xlat
stc
add
lock
out
mov
xchg
mov
loope
rcrb
fstps
xchg
rorb
in
popa
jo
nop
mov
in
stc
adc
rorb
mov
xchg
push
or
mov
add
jmp
inc
inc
cmpsl
mov
les
and
xor
xchg
mov
jp
cmp
and
mov
xchg
add
dec
insb
aaa
fs
hlt
sti
out
adc
fs
scas
ficoml
push
fldt
aad
shr
inc
es
cltd
aas
aaa
es
push
add
adc
xor
ja
push
dec
sti
mov
call
aaa
jge,pt
push
clc
cs
ds
and
pop
push
cmp
jbe
clc
dec
addr16
jns
xchg
jns
enter
cld
adc
and
sbb
mov
nop
jle
pop
sbb
mov
lods
je
xchg
loop
scas
dec
jb
movsb
and
nop
out
es
sbb
hlt
add
jp
push
jns
jnp
sub
jmp
mov
sahf
std
mov
fdivs
inc
lcall
mov
pop
cmp
mov
cmpsb
sub
pushf
fsubrs
mov
movsl
sbb
jl
dec
sub
or
adc
in
outsb
push
jge
mov
std
xor
aam
insl
adc
fld
fists
imul
mov
xchg
mov
rcrb
cmp
cmpsb
rolb
shll
jecxz
pop
hlt
add
loop
add
or
sub
xchg
push
xchg
shll
inc
jp
mov
xor
inc
lcall
xor
push
mov
or
outsb
push
fnstcw
inc
lret
in
movsl
push
jnp
test
push
inc
mov
add
imul
ja
cmpb
flds
ss
addr16
filds
movsb
iret
pushf
mov
mov
dec
mov
push
call
clc
xchg
pop
sbb
mov
aad
aam
lret
iret
fwait
inc
mov
jge
rcr
mov
or
adc
inc
mov
mov
stc
dec
fcoms
por
sbb
inc
test
cmc
into
cli
jle
add
and
sbb
and
test
xchg
cld
mov
sbb
movsb
inc
mov
add
in
adc
jns
sub
sti
loop
pop
fcomps
dec
sub
pusha
out
stos
out
lods
in
jmp
insl
into
lret
sbb
xchg
sbb
or
jmp
std
int3
fs
loop
outsb
or
icebp
inc
pop
clc
push
mov
cltd
mov
in
sbb
cmp
orb
movsb
inc
sub
imul
dec
popf
ficompl
hlt
sub
imul
adc
pop
div
enter
rcr
stos
jae
sbb
lcall
ds
cmp
outsb
adc
ljmp
aad
leave
aaa
aam
push
int
das
xchg
jne
adc
ret
pushf
mov
cltd
es
sbb
inc
arpl
test
out
nop
inc
pop
cmp
js
je
pop
pop
insb
jbe
xchg
sbb
inc
mov
push
decb
lds
nop
pop
mov
sub
fs
out
push
movsl
sub
jae
cmp
cltd
xchg
sbb
test
dec
dec
dec
mov
insl
lds
out
out
scas
inc
out
push
je
shl
xor
xor
imul
rorl
push
xlat
inc
pop
mov
test
push
dec
pop
or
add
pop
orb
mov
jmp
cmpsl
xchg
or
mov
in
scas
jae
and
jno
ffree
sbb
mov
shlb
fcom
sub
pop
arpl
sbb
inc
or
imul
pusha
repnz
gs
cld
xchg
jb
xchg
mov
shrl
jmp
sahf
mov
loopne
xor
outsl
and
pop
outsb
adc
sti
inc
xor
imul
push
in
sub
into
outsl
cmp
sbb
gs
inc
and
fidivrs
inc
popa
pop
jl
dec
pusha
adc
outsb
stos
mov
push
mov
cld
jecxz
push
sbb
mov
jo
es
ss
frstor
jl
mov
mov
in
inc
jne
mov
push
inc
adc
cmp
xchg
notb
fcomps
lahf
pop
mov
lret
jl
pop
outsb
xchg
mov
cmp
lahf
fwait
mov
mov
xor
cs
push
hlt
xor
add
repz
iret
out
mov
mov
int
lcall
cltd
pop
data16
and
daa
int
stos
mov
dec
mov
xor
mov
mov
pop
inc
jbe
push
push
lea
dec
jp
les
dec
sub
mov
imul
mov
lret
sbb
outsb
test
push
mov
jle
push
iret
push
out
jmp
sbb
mov
imul
stc
cld
mov
inc
push
repz
aam
int3
pop
inc
fisubs
cmpl
push
jmp
xlat
and
outsl
jno
test
xchg
and
xor
cmp
loope
fucomip
popf
jle
jg
imull
lock
loop
neg
mov
pcmpgtw
outsl
jp
add
data16
push
mov
pop
push
movsb
push
sub
popa
in
stc
fbld
js
push
stos
ljmp
popa
addl
rclb
into
jmp
push
xchg
das
mov
test
dec
lahf
jp
push
pop
mov
mov
sbb
push
dec
shl
fs
add
in
loope
mov
bound
xor
addr16
push
es
dec
ror
or
fldln2
jae
cmpsb
or
cmp
fadd
fstps
test
test
cmp
jecxz
xor
push
adc
jnp
inc
xor
mov
pusha
es
sbb
pushf
aam
jle
faddl
push
jp
xor
jmp
call
mov
or
aam
aam
mov
shl
cmp
xchg
int
lock
je
pushf
gs
jno
sub
lret
mov
popa
shl
mov
xchg
xor
dec
fwait
cmp
ror
mov
jle
add
mov
cmp
out
push
jno
xchg
sub
lods
iret
inc
lcall
bound
mov
jo
movsb
arpl
shl
ja
lock
cmp
mov
xorl
or
jg
mov
addl
push
sub
inc
es
push
dec
xor
stos
or
mov
or
cmp
outsb
mov
iret
shlb
pop
xchg
mov
cmp
cmpl
sti
pop
loope
sbb
add
int
mov
movsl
aad
mov
sbb
pop
xor
sub
and
stos
push
std
add
outsb
mov
jb
dec
rol
frstor
xchg
push
cmp
sbb
int3
add
dec
call
dec
imul
pop
mov
xor
lea
or
jmp
jp
sbb
push
pop
jg
mov
jne
enter
js
inc
xchg
push
rclb
and
xchg
in
data16
fldcw
sub
mov
andb
fs
xchg
roll
sbb
out
xor
in
or
sub
jle
xor
movsl
jg
rorb
aaa
cmp
test
loop
mov
fsubp
dec
std
mov
popa
push
repnz
xor
pop
and
sub
xor
or
xor
mov
daa
hlt
mov
push
outsl
test
outsb
inc
shl
jp
inc
cmp
cmp
mov
scas
ficoml
xor
add
in
out
mov
orl
data16
xor
dec
imul
stos
mov
dec
sbb
subl
repz
jbe
dec
or
popf
scas
movsl
pop
into
cmp
imul
pop
pop
xorb
sbb
sbb
mov
jns
push
or
adc
into
lret
ss
sbb
aad
insb
es
sbb
enter
int
dec
xor
fwait
xchg
into
mov
cli
sub
lods
enter
loope
lret
hlt
mov
add
and
push
jp
ss
xchg
test
sbb
cli
inc
sub
adc
test
xchg
daa
subb
inc
das
cmp
test
push
and
fwait
jmp
mov
sbb
adc
pop
pop
lods
mov
loop
or
xchg
ss
jne
test
test
and
inc
clc
insb
add
popa
xor
push
xchg
adc
movhps
jno
fnstsw
jmp
shll
clc
jp
cmc
test
mov
pop
adcb
push
in
ljmp
mov
lods
jmp
mov
pusha
pop
or
std
cmp
leave
add
or
mov
js
pop
popl
or
das
cmp
std
pushf
iret
xchg
icebp
cmp
pop
dec
cmp
pusha
xchg
lds
lret
arpl
push
ja
adc
sub
jno
pop
addl
mov
mov
push
mov
xorl
lods
mov
mov
testb
out
stc
xchg
pushf
jge
aas
popa
mov
sub
out
loop
cld
dec
aam
sbb
sub
pop
das
add
and
cmpsb
mov
mov
mov
loop
ficoml
icebp
je
mov
mov
lcall
sbb
aad
or
fidivrs
xor
xchg
pushf
out
je
popf
dec
inc
sub
mov
icebp
dec
adcb
mov
and
mov
rorl
pop
pop
jb
outsl
imul
add
fisttps
xchg
mov
mov
mov
mov
jg
sbb
or
mov
mov
sbb
and
or
jl
xchg
pop
adc
dec
mov
xor
cs
cmpsl
insl
and
leave
sbbb
lods
mov
dec
and
imul
out
sub
mov
lock
ficompl
xor
ror
popa
rcr
jmp
cld
das
or
jmp
lds
xchg
xor
and
loop
ds
mov
cwtl
xor
push
push
jmp
cli
dec
aad
push
mov
cmpb
mov
lock
xchg
in
subl
je
sbb
mov
cmpsb
leave
out
mov
shl
mov
test
xor
push
xchg
mov
push
insb
inc
aaa
in
nop
mov
push
lds
xchg
dec
cmpsl
es
dec
icebp
loope
inc
popa
and
jg
push
add
inc
add
fidivs
jmp
push
adcb
xor
in
add
int
pop
movsb
mov
and
cli
and
imul
pop
icebp
jg
push
inc
mov
mov
sbb
mov
cmp
test
or
dec
iret
sub
sub
inc
jns
cli
mov
add
je
xchg
lock
xor
mov
adc
add
and
ds
mov
push
pop
xor
rcl
and
dec
mov
jae
imul
jecxz
cmc
aam
es
dec
mov
bound
aas
push
je
pop
cwtl
insb
notb
pop
sbb
ss
mov
cmp
repz
movsb
ss
xchg
arpl
mov
jno
mov
cld
pop
pop
xchg
cmc
inc
dec
out
pop
mov
lea
and
aam
and
xchg
clc
lods
cltd
push
fwait
jle
and
shll
sub
mov
push
xor
orl
into
xor
push
js
sub
and
dec
std
pop
insl
outsl
cmc
sbb
das
bound
dec
loopne
push
inc
add
xchg
jmp
test
pop
and
push
sbb
out
movsb
mov
sub
or
pop
in
ds
xor
and
cltd
std
pop
lds
or
xchg
xor
cmp
inc
loopne
add
test
scas
and
mov
jle
aas
adcl
clc
mov
or
dec
xor
adc
gs
mov
out
add
mov
sub
das
sbb
test
or
dec
gs
cmp
mov
popf
adc
sbb
mov
out
in
jb
push
stc
add
xchg
int3
loopne
stos
lea
icebp
add
xor
xchg
cmp
in
aas
pop
out
dec
jbe
call
lea
cmp
lods
jle
in
add
into
mov
cmpsb
jne
mov
in
mov
lcall
aaa
push
sub
push
inc
push
cli
push
mov
adcl
cmpsl
pop
jmp
pop
xor
pop
movsl
jo
or
mov
pop
rorl
loope
dec
jecxz
pop
daa
out
jmp
out
shlb
mov
adc
int3
push
int3
jno
call
mov
mov
sub
pop
test
inc
cmp
cltd
xchg
jmp
dec
cmc
andl
jae
mov
and
push
xchg
cmpl
test
and
push
in
add
push
jo
and
push
sub
fsubl
leave
add
andl
lret
mov
pop
and
and
aas
or
mov
rcrl
cmp
sub
mov
inc
and
ret
lods
cmpsb
mov
xchg
call
cwtl
add
movsl
int3
mov
ljmp
add
pusha
or
mov
shl
cltd
and
mov
cltd
into
inc
das
cmp
pop
mov
sub
sub
or
push
mov
pop
ret
dec
outsl
je
les
leave
push
inc
in
cmc
inc
fldl2t
mov
ja
out
inc
popf
cmpb
divl
sbb
or
adc
test
and
adc
xor
push
stos
stos
test
jns
jle
mov
xchg
xchg
sbb
xor
add
jno
cmp
sbb
sahf
shl
test
ficompl
jge
mov
stos
fildl
pop
jne
mov
jns
push
mov
pop
xchg
mov
jge
sub
cli
rolb
cmp
cmp
mov
ds
sub
jle
ret
mov
mov
cmpl
jecxz
pop
hlt
mov
cmc
mov
lea
insb
or
add
notb
mov
mov
ret
jo
xchg
test
mov
int3
xor
dec
fdivs
into
repnz
outsb
xor
outsl
mov
in
dec
xor
xchg
fldz
ljmp
out
mov
mov
mov
inc
orl
pop
sub
xor
popa
jb
jecxz
cmp
mov
insl
mov
pop
sahf
mov
mov
sarb
and
mov
mov
sub
fcomi
mov
sub
sub
stos
pop
xor
sti
sti
cmp
mov
and
push
xor
das
js
pop
mov
push
rcll
rorl
jecxz
mov
hlt
mov
mov
dec
lahf
push
repz
jmp
fsubl
addr16
icebp
loop
push
pop
xchg
or
pop
jne
and
jp
je
xor
cmp
push
movsb
pop
add
fnsave
add
jp,pn
jo
lea
dec
loop
iret
cs
dec
nop
popa
mov
popa
mov
pop
fs
xchg
cmpsb
inc
sub
rorb
mov
add
dec
adc
adc
adc
xchg
sbb
mov
dec
lods
or
inc
sbb
std
jle
cltd
cmp
imulb
cld
fdivr
shlb
nop
movsb
mov
fdivl
push
sbb
inc
pop
jg
inc
aad
or
mov
shlb
hlt
scas
imul
add
push
push
jle
jbe
faddp
or
insl
mov
movsb
cmp
shll
fidivrs
push
cmp
negb
dec
test
inc
test
pop
inc
xchg
frstor
jp
stos
adc
mov
lcall
dec
shrl
xor
outsb
enter
bound
imul
inc
cmp
pop
push
sub
lcall
jl
add
inc
cmpsb
cmp
push
pushf
sbb
push
sbb
bound
mov
mov
stos
sub
fldln2
mov
orl
mov
adc
jno
jge
repnz
roll
pop
repz
imul
icebp
aad
mov
mov
push
aam
pop
mov
scas
and
mov
cld
xor
dec
jo
pop
shrl
in
aam
into
mov
test
jmp
loop
jb
cmp
inc
mov
or
add
js
push
into
je
mov
dec
sarl
xchg
mov
out
mov
and
pusha
or
js
sub
xor
loop
lcall
aam
xchg
push
imul
mov
orb
push
insl
dec
cld
mov
pop
pop
sti
stc
shrb
lret
sub
aaa
popa
aaa
fstp
lret
push
fcmovnu
push
cld
cld
rcrb
push
dec
pop
cmpsb
sbb
sub
sub
aaa
jmp
scas
fstl
adc
lods
jo
push
mov
inc
mov
inc
adc
pop
in
xor
or
adc
mov
loope
sub
inc
or
loope
int3
pop
movsb
sahf
cmp
xchg
repz
cmp
stos
fidivl
mov
mov
in
inc
pop
mov
fcmovbe
xlat
incl
xor
aam
xchg
sbb
xor
jp
fistpll
xchg
popa
xor
dec
push
cmp
jo
mov
lret
lret
push
mov
mov
shll
cwtl
dec
pop
hlt
imul
inc
fdivs
out
imul
xlat
mov
es
push
inc
push
cmp
mov
jle
xchg
inc
imul
inc
psraw
sbb
sbb
cmp
mov
add
jne
inc
outsb
fwait
ljmp
fiadds
jno
mov
imul
push
push
adc
leave
cmpb
xlat
adc
es
iret
jne
push
ja
cs
test
mov
imul
ljmp
push
cli
jns
psraw
or
xchg
ss
cmp
shr
in
popa
mov
mov
cmp
in
pop
das
inc
xchg
orb
xor
add
imul
mov
icebp
add
cli
mov
lret
das
gs
dec
cli
dec
shrb
movsl
idivl
xor
sti
jns
aas
inc
mov
das
ds
mov
je
out
popf
cmp
mov
lahf
push
lods
inc
jo
fldcw
dec
lds
push
fwait
nop
jne
in
das
les
mov
sahf
ss
xchg
pop
xor
mov
pop
movsl
dec
enter
xchg
testl
int
sbb
pop
add
repnz
cmp
lock
lods
mov
pop
cmp
int3
push
xlat
fisubl
imul
mov
js
loope
cmp
cmpsl
xor
mov
and
and
mov
leave
out
mov
sbb
push
xor
mov
inc
orb
mov
mov
sub
mov
sbb
movsl
pop
std
enter
sub
enter
out
cwtl
das
sub
ficompl
xchg
int
xor
stos
jp
xlat
test
in
cs
cmp
xchg
add
mov
jo
add
outsl
push
mov
insb
in
cli
adc
cmp
sbb
mov
push
adc
negb
jle
cmp
jg
xchg
xchg
inc
and
test
push
fwait
iret
lock
fisttps
imul
stos
js
xchg
repnz
xor
push
sub
push
mov
testb
pop
stc
fmull
mov
push
dec
into
sub
mov
mov
mov
sti
imul
jle
fsubl
cmp
push
lods
inc
sarb
loope
jb
mov
lds
dec
jne
cmp
push
in
sarl
sti
cmpsl
or
aad
mov
fcomps
jmp
push
mov
pop
mov
and
xchg
xchg
xchg
and
cmpsb
mov
imul
addr16
test
cwtl
scas
rcl
je
push
sahf
nop
pop
push
repz
pop
divb
in
iret
xchg
lock
add
adcb
ret
movsl
imulb
push
inc
cmp
data16
xor
push
push
leave
pop
xorb
mov
inc
repz
into
mov
inc
mov
sub
jg
sbb
jmp
ljmp
push
xor
cmpsb
dec
jge
fidivrl
mov
jno
sub
movnti
jecxz
stos
shlb
jno
leave
aam
shr
or
inc
stc
rcr
insb
cwtl
cmp
and
nop
mov
sbb
clc
xor
test
adc
push
or
test
fwait
or
and
out
inc
movsl
cmp
push
inc
or
ljmp
mov
int
dec
jg
xor
mov
fwait
jg
loop
add
add
inc
mov
fmulp
or
stos
pushf
xor
pop
andps
push
in
inc
adc
pop
ds
xor
loopne
inc
push
fldt
mov
jnp
fdivrs
bound
shl
fs
cmp
xor
fmuls
mov
rcll
sbb
addr16
or
faddp
xor
push
xor
fisttps
push
in
pop
dec
arpl
jbe
bound
inc
mov
adc
cmc
cld
lods
or
lock
inc
lahf
cmp
xchg
and
jecxz
lcall
push
dec
and
push
call
fildll
pop
jl
xchg
repz
adc
arpl
and
sti
mov
mov
xor
adc
jo
mov
push
dec
fwait
dec
and
xchg
fidivs
ret
inc
movsl
mov
xor
mov
and
cli
mov
mov
addl
out
or
xchg
pop
out
xchg
iret
lea
bound
cld
out
mov
lods
push
stos
push
cltd
mov
push
popl
hlt
pop
jo
mov
xchg
push
jg
push
enter
data16
sti
mov
pop
sbb
imul
aas
pusha
stc
js
pop
fcmove
insl
pop
aaa
outsb
ret
and
xchg
inc
jo
mov
push
jmp
and
sub
shl
incl
clc
sarb
es
sbb
or
cmp
shl
loope
daa
pop
pop
jae
inc
addr16
sub
inc
and
sub
sbb
sbb
xchg
fisttpll
xchg
jns
fdivr
mov
push
fcmovne
imul
mov
aaa
dec
lods
dec
jmp
loop
ret
repnz
arpl
lret
mov
cmp
sbb
movsb
les
cli
mov
sbb
in
lds
aaa
mov
ja
cmpsb
loop
test
in
movsl
adc
add
inc
int
imul
loope
cmp
jae
repnz
adc
sub
test
push
xor
pop
pop
nop
cmp
cmc
movsl
adc
pop
pop
lods
xchg
mov
rclb
stc
mov
lods
outsb
inc
add
or
adc
fadds
int3
inc
fstpl
sbb
jp
push
lea
outsb
mov
xchg
jg
sahf
sbb
xchg
fwait
inc
dec
movsb
cli
xchg
jp
xor
leave
dec
add
movsl
or
outsb
fxch
push
lea
data16
and
cwtl
outsb
fildll
lds
pop
fisubl
xchg
ljmp
xlat
jmp
icebp
xor
cmpsl
ja
repz
aam
ss
fdivl
or
dec
icebp
and
add
sar
add
pusha
test
shll
lods
ret
inc
mov
mov
sub
push
test
xor
push
loope
jmp
out
aas
sub
push
push
lcall
inc
xor
repz
adc
mov
or
js
pop
and
mov
xchg
push
ficompl
push
js
outsb
jbe
repz
fs
xchg
addr16
test
dec
xchg
scas
iret
leave
jmp
loopne
addr16
sbb
dec
std
lcall
imul
in
cmpsl
adc
test
in
shrl
add
sti
jp
repz
shlb
data16
scas
cli
inc
sub
test
or
jo
add
out
sub
iret
js
mov
into
lret
xor
in
je
lods
dec
shlb
mov
in
mov
sub
jb
fadds
js
sub
test
jle
jo
push
ret
add
imul
and
mov
or
out
adc
dec
fwait
mov
out
stos
js
dec
xchg
mov
inc
mov
movsl
or
push
addb
fs
jns
ja
pop
cltd
cmpsb
leave
cmp
sub
cli
jnp
pop
mov
lods
sar
pop
imul
mov
push
movsb
jno
stos
lcall
dec
pop
jns
jnp
add
out
sbb
loope
dec
sub
idivb
in
or
mov
outsl
fbld
pop
arpl
enter
or
xor
out
leave
aad
orb
push
cli
cmp
ljmp
mov
mov
pop
jo
xchg
xor
int3
faddl
push
push
mov
lahf
pusha
mov
cmp
push
pop
fists
mov
sbb
push
test
mov
mov
movsl
aam
js
sub
ja
fdiv
repnz
cmpb
jle
inc
je
jns
mov
out
ja
shl
fadd
xchg
orl
cmp
jg
js
mov
or
andl
sbbb
adc
pop
mov
out
rcl
lock
adc
xchg
pop
jecxz
fs
jo
test
scas
mov
and
adc
int
mov
into
lds
loope
std
xchg
mov
xor
outsb
stos
ja
pop
and
dec
loop
add
hlt
imul
f2xm1
cmp
hlt
aad
mov
xor
and
xchg
flds
out
jno
dec
push
mov
pop
or
ljmp
mov
js
and
imul
js
push
cmp
sub
stos
add
xchg
xchg
sbb
cmc
es
push
int
dec
mov
adc
ja
rclb
mov
dec
cwtl
adc
add
xor
sti
push
ja
pop
cmpl
lret
ljmp
ret
daa
cld
insb
out
mov
push
shrl
ficomps
out
jns
dec
mov
stos
mov
mov
stos
or
xchg
out
adc
pop
mov
inc
and
jne
stos
orb
andb
cmp
rorb
lods
ret
sub
sbb
das
mov
addb
jmp
mov
push
inc
adc
aas
mov
xchg
sti
push
insl
mov
or
and
xchg
int3
sbb
cli
xchg
and
popf
sub
xchg
push
jecxz
dec
mov
repz
cmpsl
popa
mov
insl
lock
and
stos
pusha
push
clc
fnstenv
testb
sub
xor
arpl
stc
mov
pop
loope
cmp
sbb
test
dec
or
notb
push
ds
or
aaa
and
es
inc
imul
dec
pop
incb
cmp
inc
aad
push
fsubs
push
shl
pusha
sub
aad
aad
push
sbb
push
fildl
inc
push
aad
pop
mov
mov
sbb
iret
ds
jnp
push
movsb
lods
hlt
cmpsl
mov
in
ja
xchg
movsb
clc
mov
fsubp
and
sbb
test
pop
xchg
das
jb
divb
insb
fwait
cmc
jl
ljmp
jg
mov
push
inc
mov
out
rolb
mov
mov
fistpl
das
mov
scas
sub
mov
mov
fs
aam
cmp
xor
movsl
dec
inc
stos
xchg
push
hlt
out
movsl
inc
sub
test
movsb
lock
inc
jle
fisubl
stos
pop
sub
pop
sub
sbb
mov
sbb
divb
je
dec
lahf
cmpsl
cmp
mov
lods
adc
add
es
out
xor
pop
scas
add
outsb
fistps
and
repnz
cltd
std
repz
lret
and
add
scas
xor
cmp
and
js
mov
sub
je
lret
inc
in
inc
das
cld
jnp
pop
dec
ret
jp
mov
jb
adc
in
inc
repnz
jecxz
shrb
ficoml
es
cltd
jl
xchg
lods
and
cmpsb
push
rorl
enter
stos
sbb
jbe
incl
dec
int3
inc
xchg
fld
dec
cmp
mov
jb
or
or
mov
iret
push
jae
mov
jae
subl
fldt
mov
mov
fidivl
adc
and
xchg
fidivrl
sub
pushf
int
movsb
dec
or
mov
ss
cli
sahf
sbb
mov
adc
xor
fwait
sub
or
insb
int3
daa
xchg
inc
mov
xchg
cmp
shlb
aad
xor
pop
into
or
and
pop
sarb
nop
subl
push
sbb
inc
cmp
inc
scas
arpl
xchg
mov
push
or
mov
negl
xchg
popa
mov
psraw
add
ljmp
ficoms
aas
mov
loop
jbe
mov
xchg
sub
scas
add
inc
push
dec
dec
stc
inc
push
or
push
or
stc
and
shll
sub
clc
shll
clc
movsb
cmp
inc
cld
pop
pop
shl
lahf
or
decl
scas
fsubr
dec
xchg
outsb
in
add
pop
in
cwtl
or
test
adcl
jb
pop
sbb
repnz
lods
and
fwait
sbb
or
xor
sub
jnp
cmp
clc
sbb
mov
dec
cmpsb
rep
dec
add
hlt
cmp
stc
cmp
aaa
jbe
and
push
xor
sub
aaa
popa
ja
cmp
lea
aam
inc
flds
addr16
xor
je
dec
and
stc
push
rcl
cmp
mov
mov
cmpb
ja
fists
sarl
aas
or
jns
add
stos
add
movsb
push
out
jae
sub
mov
lods
out
cs
scas
rcl
mov
je
sbb
cmove
les
fnsetpm(287
fstpt
outsl
clc
lret
xchg
adc
mov
jecxz
dec
aaa
mov
imul
jnp
lahf
push
sbb
inc
sub
addr16
push
idivl
adc
popa
mov
lahf
bound
mov
push
lcall
lods
addl
add
inc
notl
sbb
test
pop
je
inc
push
xchg
stc
mov
sub
and
mov
mov
lock
negl
aaa
cli
pop
inc
jb
cmp
mov
sbb
adc
and
dec
and
mov
jae
aad
and
xchg
repnz
xchg
fdivl
sbb
into
stos
xchg
cmpsl
cmpsb
xlat
cmp
fdivrl
xor
inc
inc
lock
xchg
repnz
movsb
mov
mov
scas
and
bnd
adc
dec
or
push
inc
dec
sub
cli
jns
pop
dec
mov
ds
mov
dec
and
inc
pop
ja
pop
pop
sbb
insb
mov
pop
imul
test
in
push
fwait
fwait
movsl
test
sti
dec
arpl
pushf
imul
ss
mulb
mov
mov
mov
clc
mov
in
sbb
or
ds
adc
or
mov
in
imul
mov
mov
xchg
dec
sub
je
sbb
sub
add
clc
inc
ss
outsl
repz
push
sbb
sbb
push
inc
sbb
adc
mov
ja
add
xor
push
mov
adc
rol
cmp
out
dec
loop
jb
aam
cltd
lock
mov
movsl
std
cmc
sbbb
pop
xchg
insb
xor
subb
mov
fisttps
popa
xor
hlt
add
scas
cwtl
je
jae
stc
ja
cld
or
cmp
adc
fwait
sbb
pop
leave
in
jae
mov
mov
popl
xor
pop
fisttps
lock
lcall
je
popf
fnsave
out
and
outsl
mov
mov
lods
sbb
xchg
cs
les
ret
out
dec
lods
dec
rcr
xchg
sti
xlat
lahf
mov
fwait
cmp
or
mov
xor
and
dec
xchg
out
jmp
xor
cmpl
call
add
aaa
into
inc
sbb
cltd
jns
ljmp
mov
lea
insl
mov
xor
and
or
clc
fwait
mov
inc
pop
stos
pop
mov
idiv
xor
dec
push
lsl
pop
mov
jne
fs
push
pop
les
iret
jno
push
xor
lds
add
inc
and
scas
sar
lcall
push
inc
or
jno
scas
cli
hlt
push
mov
mov
enter
push
push
sahf
fldcw
pop
or
or
jns
dec
sbb
mov
cmp
inc
lods
dec
movsl
leave
inc
clc
or
ds
sbb
sbb
imul
inc
xor
cmp
scas
gs
push
ret
sar
mov
cs
fisttps
fidivrs
dec
jle
mov
xlat
int3
js
or
clc
sub
cmp
pop
push
mov
mov
inc
fs
outsl
or
xor
or
lcall
rorb
dec
shll
lcall
arpl
clc
gs
xchg
jne
jne
jge
mov
fldcw
sbb
sbb
out
push
cmp
das
insb
xlat
orl
cmp
mov
jle
mov
xchg
cmp
mov
mov
fs
ljmp
mov
mov
jb
out
sti
data16
sub
sahf
xchg
mov
aam
das
adc
fwait
popf
push
leave
insl
push
testb
pop
int
outsl
xchg
push
mov
lds
loop
movsl
adc
js
movsb
pop
dec
fisubrs
mov
test
ret
rcr
shl
lret
push
in
call
inc
mov
cmc
sub
cmp
xchg
pop
into
je
xlat
enter
dec
icebp
addb
divb
add
or
xor
mov
and
hlt
fsubrl
sbb
enter
enter
movsb
mov
pop
mov
subl
movsb
in
hlt
bound
xchg
jmp
xchg
lods
or
pop
ret
cmp
xor
imul
cwtl
xchg
test
jo
pop
aaa
adc
icebp
call
and
js
sub
mov
cltd
arpl
mov
and
dec
pusha
mov
add
fisubs
lahf
jb
sub
mov
outsb
pop
aas
push
xchg
or
add
adc
insl
fsubrp
cmp
jg
movsl
cmp
fisubrl
mov
fcoml
out
and
xlat
sarl
pop
push
cmp
mov
jbe
jne
push
dec
mov
cwtl
fs
inc
lcall
fcoms
mov
fisubrl
in
dec
test
pop
movsl
lea
std
out
fwait
mov
ret
adc
fsts
or
iret
pop
inc
icebp
orps
and
pop
fcompl
mov
call
xor
dec
aam
xchg
ljmp
mov
jb
outsl
stos
loop
add
dec
jbe
jb
arpl
out
push
pop
into
fs
cli
pop
lcall
fiadds
mov
lret
out
lods
fld
scas
push
push
into
mov
pusha
inc
xchg
mov
lea
jge
pop
mov
rorl
fcomi
adcl
push
inc
imul
arpl
fidivrs
jb
rsm
inc
pop
ds
fstps
inc
push
adc
scas
inc
mov
movsl
mov
or
jg
sbb
pushl
dec
add
js
push
aaa
into
test
dec
fbld
push
fisubrs
js
out
gs
mov
stos
pusha
mov
enter
inc
or
adc
lcall
push
xchg
or
inc
loop
enter
jle
idivl
or
xchg
insl
sti
ja
dec
inc
pop
lods
into
add
adc
stos
xor
pop
push
rcrl
rcrl
sahf
and
xlat
adc
cs
inc
in
cmpsb
mov
push
jmp
popf
repz
stc
cmp
sub
call
xor
sub
andl
mov
js
dec
xchg
dec
cmp
iret
sub
test
rcrl
insb
mov
pop
and
repz
or
push
dec
sub
cltd
popa
icebp
cmp
dec
push
sbb
ret
sbb
mov
or
cld
xchg
xor
xor
adc
sbb
icebp
fistpl
std
int3
and
mov
push
test
cltd
xchg
out
stos
ret
cmpsl
aas
jmp
cmp
ret
fadds
dec
sbb
and
xor
and
fstpl
sbb
push
sahf
fldl
nop
sbbb
aam
cs
jp
push
mov
mov
test
mov
hlt
stos
ret
mov
push
add
xor
mov
inc
rcr
std
mov
cli
movsb
fwait
test
dec
mov
sub
cmp
popa
rclb
jbe
outsb
jle
das
repz
fmull
dec
mov
nop
adc
dec
leave
fs
and
sti
adc
lds
xchg
int
popa
fistl
mov
icebp
mov
les
jg
add
dec
arpl
mov
fnsave
out
fs
rorl
push
sub
mov
nop
aad
mov
cmpsb
jb
xchg
add
sahf
sbb
insb
xlat
and
sbb
add
cmp
callw
mov
mov
pop
mov
or
mov
sbb
jne
out
sbb
iret
pop
jge
push
ret
and
or
pop
lods
and
ljmp
ret
cmp
int
sbb
cmc
mov
cmp
sbb
ret
roll
ss
loop
inc
pop
leave
adc
sub
fiadds
lods
mov
rcl
cs
sbb
push
pop
movsbl
pop
mov
mov
xchg
inc
inc
pop
pop
cld
clc
bsf
insb
inc
ret
outsb
ja
add
jmp
loope
cmp
mov
and
cld
sub
mov
jns
addb
push
pop
jae
and
insl
jne
push
mov
xchg
stos
in
fwait
repz
cmp
fildll
push
xor
mov
mov
and
enter
adc
cmp
pop
aad
add
xchg
xor
mov
scas
cmp
mov
lods
adc
adc
in
mov
mov
add
pop
and
lods
popf
jecxz
int3
sbb
cmp
and
gs
cmp
xchg
fadd
psubb
sti
dec
das
incl
push
in
out
cli
and
xchg
stos
inc
mov
shlb
push
outsb
jb
xlat
sbb
cmpb
idivb
js
adc
mov
mov
mov
push
dec
es
pop
divb
int3
pushf
mov
inc
daa
icebp
push
out
sub
lea
pop
pop
jno
roll
push
jmp
rcrb
js
nopl
cld
hlt
repnz
fwait
lahf
dec
mov
clc
add
movsl
inc
push
pop
jmp
loop
divb
xchg
popf
sub
out
cmpl
dec
loop
push
loopne
fcomi
xor
les
add
repz
nop
inc
hlt
adc
mov
outsb
fnstcw
adc
aad
mov
push
aas
movsl
daa
xchg
je
shrl
mov
ret
xor
and
leave
pusha
sahf
out
test
xchg
jge
stos
das
imul
jno
cmp
add
pop
mov
mov
sub
adc
xor
cmpsl
lret
stc
insl
loopne
dec
das
fdivs
pop
inc
lock
test
cmp
jle
sbb
and
xor
cmp
inc
imul
fistl
nop
xor
sub
test
loopne
jbe
mov
popa
xchg
xor
adc
ljmp
outsl
nop
and
outsb
shll
sarb
jne
js
inc
sbb
mov
xorb
mov
cwtl
inc
cmpl
ret
div
mov
push
mov
xchg
icebp
adc
push
in
repnz
sbb
sbb
insb
sub
ss
aaa
xor
sbb
xlat
imul
aad
and
cmpsl
cmp
lahf
xchg
jl
stc
mov
flds
lret
into
push
sub
dec
fst
sbb
push
xchg
movsl
stos
testl
xchg
seto
pop
mov
push
inc
outsb
inc
xor
mov
pop
out
pmulhw
test
sub
cltd
push
icebp
les
loopne
mov
jl
mov
cli
mov
test
dec
icebp
adc
incb
pop
movsl
lods
in
pop
fdivrl
xchg
pop
into
loope
daa
add
push
int
mov
sub
popf
cmpsl
fldcw
das
mov
xchg
cmp
jle
std
pusha
sub
mov
sub
add
pop
js
movsl
and
push
add
in
aaa
nop
mov
imul
mov
and
scas
ds
outsb
xor
mov
or
js
sbbl
loopne
jmp
or
jb
shll
lds
xchg
loopne
inc
adc
mov
add
mov
mov
fstl
xchg
stos
dec
mov
push
imul
fistpll
mov
xchg
les
decb
jmp
mov
in
mov
mov
sbb
mov
in
mov
dec
mov
aaa
mov
pop
mov
arpl
test
cmp
push
cmpsb
mov
push
lods
mov
mov
push
push
add
push
push
repz
fmuls
mov
adc
cmp
repnz
lret
popa
push
mov
aaa
fistps
cmp
sub
push
movsb
in
test
ret
pop
fwait
bsr
jg
sbb
xchg
sub
pop
stos
cmpb
xor
cmp
add
mov
push
test
xchg
push
mov
inc
jae
hlt
jns
pop
inc
push
in
xchg
js
xor
daa
and
jl
push
xorb
jnp
cwtl
stos
outsl
mov
lock
jne
cmp
cmp
push
sti
test
pop
hlt
push
or
add
sub
data16
push
cmp
mov
cmpb
call
ja
xchg
pop
es
test
cmp
aam
xlat
arpl
lock
adc
icebp
ljmp
or
push
jp
add
icebp
inc
in
repnz
and
arpl
cmp
decb
repnz
fwait
hlt
sub
xchg
jge
aaa
lods
popa
rcrw
insl
mov
or
sbb
dec
imul
lcall
adc
mov
dec
mov
and
jl
cwtl
cld
add
jp
cmp
pop
lods
xchg
loope
pop
pop
pop
push
aas
and
xor
mov
push
or
mov
pop
mov
dec
imulb
push
xchg
insb
out
out
or
bound
cli
sbb
push
cmpsb
jmp
mov
mov
jne
repz
dec
dec
in
int
cmp
loop
push
jmp
gs
fidivrl
movsl
sbb
cltd
push
pop
daa
xchg
imul
adc
jnp
inc
insb
fnsetpm(287
inc
push
imul
xor
xlat
ficoms
inc
push
push
push
lods
push
mov
mov
push
fiadds
sti
nop
xchg
sbb
decb
notl
out
pop
mov
push
je
nop
int3
jo
adc
pushf
mov
pusha
pop
inc
add
pop
xchg
int
mov
idiv
test
and
loop
notl
in
inc
clc
cmp
inc
pop
cmp
rorl
cmp
pop
sub
mov
cmc
mov
lods
mov
inc
int
cltd
mov
xor
movsb
push
push
cmpsb
lds
and
pusha
jg
sbb
and
sub
jbe
scas
jp
dec
push
aam
arpl
movsl
jle
ljmp
jmp
pop
pusha
inc
add
jns
adc
inc
aas
es
fistpl
mov
inc
adcb
stc
push
lock
add
inc
das
std
mov
imulb
imul
out
outsl
sub
mov
popa
inc
fs
add
out
xchg
in
sahf
in
insl
sbb
jb
adc
test
mov
fidivrl
inc
xor
ss
adc
cli
mov
xor
in
inc
fildl
inc
pop
mov
and
dec
lahf
mov
mov
or
fdivrl
sbb
jb
enter
push
mov
push
sub
mov
jno
popf
mov
insb
jge
stos
mov
aam
pop
mov
into
loopne
lahf
or
loopne
mov
fidivrl
jg
push
mov
fidivrs
pop
test
jecxz
push
pslld
inc
mov
cmpsl
add
mov
pop
loopne
add
ja
cmp
xchg
test
mov
and
mov
xchg
xchg
xor
adc
mov
cwtl
subl
push
mov
cmp
jmp
or
mov
push
es
outsl
movb
push
pop
mov
cmpsl
xor
sarl
pop
inc
dec
outsl
xor
dec
test
bound
push
xchg
mov
nop
out
mov
lahf
mov
bound
syscall
jp
mov
xchg
stos
and
test
mov
fstpl
test
dec
xchg
pop
cmpsl
mov
movsl
sub
mov
outsl
mov
adc
xchg
cli
add
je
xchg
shll
sti
out
data16
xchg
xor
aas
and
testb
rol
pop
aam
pop
fiaddl
mov
jecxz
and
or
xlat
gs
or
xor
sub
push
mov
aaa
test
test
decb
int3
mov
pusha
jg
xchg
das
xchg
xchg
xlat
pop
popl
cmp
dec
xchg
push
pop
ja
inc
std
dec
test
and
sub
int
adcl
xchg
cmp
mov
js
push
cmp
mov
hlt
xor
lcall
aad
jge
jae
in
mov
subb
adcl
push
xor
pop
test
mov
inc
imul
or
aas
mov
jmp
insb
bound
mov
inc
sub
fcoms
mov
popa
jno
xor
daa
or
xchg
pop
jo
cld
jbe
jae
inc
mov
inc
clc
sbb
jo
and
cmpsb
sti
pop
or
push
in
cmovb
ja
push
add
jl
jle
pushf
fsubr
bound
into
in
xchg
cmp
test
push
and
arpl
add
cld
mov
aaa
xorb
and
pop
call
push
jnp
jmp
repnz
jbe
lret
xchg
cmp
xchg
stc
sub
orb
ficomps
push
pop
adc
out
and
add
lods
js
jl
push
cmp
or
add
jbe
sub
jp
mulb
and
leave
dec
jae
jnp
sub
xchg
and
cmpl
dec
mov
xlat
pop
inc
data16
dec
data16
push
cmp
dec
and
xchg
xor
addr16
inc
fldenv
test
sub
mov
xchg
test
and
test
pop
xchg
sti
xlat
mov
add
popf
adc
xor
mov
cmc
js
dec
sbb
mov
leave
mov
das
out
sub
movlps
fdivs
pop
cmc
pop
jmp
fcompl
scas
mov
leave
stc
xchg
outsl
and
inc
jns
adc
mov
int
sbb
mov
sti
mov
mov
mov
imul
pop
fisttpll
and
inc
sub
sub
scas
adc
jg
jae
mov
adc
jmp
sub
pushf
cli
push
mov
aas
push
inc
fs
and
loope
mov
pop
cmovp
cmp
inc
sub
cs
lods
pusha
gs
ret
sbb
jmp
jns
jae
loop
std
pop
fbld
lret
sub
push
ret
add
and
sbb
int3
sub
mov
and
lcall
mov
aam
scas
out
cmpb
sahf
pop
aaa
rcrb
push
sub
jae
sbb
test
lret
bound
int
les
push
fmul
dec
xchg
mov
mov
arpl
ret
int3
add
push
out
mov
jmp
push
rolb
cltd
mov
imul
push
in
nop
sub
shlb
sahf
and
subl
jo
fsts
xchg
jp
fwait
inc
inc
loop
add
sahf
inc
andl
adc
jbe
leave
dec
lahf
add
lret
leave
lret
cltd
fistl
xchg
out
sahf
repnz
movsl
dec
push
mov
mov
xchg
mov
mov
xor
insl
ljmp
mov
in
and
enter
test
mov
movsl
rcrl
shll
sti
sbb
les
sbb
mov
xor
xchg
loopne
push
xchg
test
push
jns
mov
cmp
cs
jb
pop
dec
sahf
push
loop
add
push
notb
cwtl
mov
xchg
out
dec
xchg
clc
loop
push
inc
add
pop
shll
adc
sbb
rol
dec
xchg
or
mov
mov
filds
lods
int3
mov
mov
int3
inc
mov
inc
push
pusha
in
adc
data16
push
push
mov
mov
pop
les
mov
nop
adc
xor
pop
mov
mov
cmpsl
jmp
lods
stos
add
lret
cmp
mov
mov
stos
adc
mov
movsl
pop
xor
clc
mov
xorb
pop
cmp
or
sahf
mov
scas
orb
pop
stos
hlt
stos
sub
xor
outsl
mov
lea
xchg
es
push
lods
fbld
dec
test
pop
mov
sub
insl
aad
inc
push
les
into
push
negb
jge
fs
mov
adc
add
dec
inc
sub
lret
add
lret
mov
cli
shl
xor
pop
out
cmp
adc
sub
sahf
call
sbb
out
inc
outsl
popf
popa
adc
pop
sbb
cmpsl
and
xchg
data16
cwtl
inc
pop
or
adc
clc
pop
push
call
test
mov
push
rclb
xchg
fidivrl
push
shr
sbbl
mov
ds
hlt
adc
inc
pop
fsubrl
loop
sbb
or
mov
jnp
scas
push
push
mov
std
mov
or
stc
data16
push
repz
cmp
jecxz
adc
lds
xchg
lods
fs
pop
cwtl
lret
aam
cmpsl
mov
pop
sti
and
arpl
mov
mov
stc
ja
mov
jp
ret
sub
lret
dec
push
xor
inc
loop
add
mov
dec
rcrb
add
fwait
pop
sbb
push
mov
cmp
xchg
or
push
pop
sbb
cmp
inc
test
fldl
in
xor
pop
js
cmpsl
and
and
dec
adc
xchg
adc
xacquire
jg
mov
aaa
pop
inc
mov
jge
xchg
lods
push
scas
push
lods
mov
adc
ss
jge
pop
insl
stos
inc
xchg
stos
xchg
add
pop
jno
stc
mov
ss
push
mov
icebp
testb
mov
jg
adc
imul
jle
dec
adc
int
dec
push
jp
mov
outsl
lods
xor
adc
mov
cmp
stos
sub
aaa
mov
mov
pop
cmp
fistps
sahf
xlat
pop
dec
orb
lret
ja
popa
push
xor
in
sub
mov
sub
cli
pop
and
xchg
lods
and
inc
psubb
rcll
out
enter
sbb
dec
mov
mov
add
adc
mov
rolb
dec
sarb
sbb
out
add
mulb
inc
dec
mov
add
stos
loopne
push
ficoml
xor
jp
cmp
or
dec
jg
cmp
test
dec
xchg
sub
bound
mov
dec
pushf
mov
loope
int3
dec
inc
sbb
xchg
inc
iret
push
cmp
ljmp
mov
jmp
cmp
dec
jmp
test
loop
mov
push
and
leave
push
fcmovnu
jp
xchg
xor
adc
and
movsb
cmp
test
clc
jecxz
mov
jne
push
pop
inc
xchg
cmp
icebp
push
lret
fs
jne
test
scas
push
es
ljmp
js
aaa
movsl
push
dec
cmpl
imul
sbb
inc
dec
jae
sbb
fdivrl
or
iret
stos
adc
xchg
lret
stc
cmp
call
lods
loope
dec
xor
not
int
push
mov
pushf
arpl
das
lods
adc
sahf
hlt
in
xchg
and
xor
xor
add
dec
fildl
mov
sub
dec
adc
pop
std
aaa
sbb
push
adc
lahf
jno
mov
dec
cmp
inc
push
int
xor
fadds
fwait
scas
sbbb
cmp
popa
push
in
jmp
mov
loopne
mov
inc
lret
in
shufps
cld
sbb
push
adc
sbb
lock
cmp
add
movsl
xchg
jne
pop
rclb
jo
pop
cmp
jg
lock
push
pop
xchg
push
mov
lret
mov
ja
dec
sbb
outsl
and
push
ret
cltd
mov
xor
paddw
adc
inc
pop
dec
mov
cld
loopne
mov
ret
inc
add
loopne
lock
mov
dec
dec
dec
jmp
xor
mov
add
ds
push
cmp
jbe
jg
xchg
call
sti
mov
add
ljmp
and
add
repnz
or
sub
or
loopne
mov
pop
in
leave
pop
lods
inc
xchg
roll
outsl
ret
int
in
mov
cmp
dec
out
jnp
sub
fistpll
sbb
jno
inc
loopne
dec
out
mov
or
xor
stc
ss
nop
mov
jg
xlat
sub
fbld
or
jge
cwtl
stc
xor
aaa
pop
mov
out
cmpsl
jecxz
xorl
negl
rcrl
jp
push
push
xchg
cmp
imul
mov
sub
sbb
loop
cmp
sbb
add
lods
and
icebp
cmp
fnstsw
ljmp
cmpsl
mov
add
movsb
and
adc
aad
sar
inc
or
jns
aad
cmp
dec
mov
stc
or
iret
out
inc
negb
sub
lahf
jo
xor
cmp
shr
jae
or
lods
mov
mov
and
fisttpll
xchg
pop
xchg
push
xchg
adc
ret
pop
jg
push
or
push
fdivrp
in
fisubrl
rep
jo
fwait
adc
lcall
jns
adc
jecxz
loopne
mov
or
stc
mov
ds
xchg
pop
jno
jge
cmp
sbb
popf
int
adc
iret
pop
pop
loopne
cs
inc
sub
movsl
jno
iret
lret
int
pushf
mov
dec
es
rorl
icebp
hlt
gs
test
pop
push
mov
test
sti
mov
bound
not
fildll
adc
das
sbbb
popf
sub
pop
bound
in
push
xorl
loop
adc
das
dec
push
aam
scas
sbb
loopne
sub
in
mov
popa
xchg
lret
xchg
sub
push
push
inc
xchg
mov
mov
inc
inc
in
fs
std
mov
rolb
stos
mov
mov
push
jnp
mov
sub
popf
cmp
rcr
dec
in
fnstcw
filds
sub
lds
xor
cwtl
stos
cmp
mov
in
mov
nop
xchg
notb
xorb
add
xchg
nop
insb
xchg
and
sti
out
shlb
gs
outsl
leave
loop
leave
xchg
add
sbb
lret
mov
mov
pop
push
inc
ret
jne
mov
mov
sub
jae
cmp
xchg
xchg
adc
insb
and
mov
sbb
xor
fcoml
inc
xchg
pop
pop
jmp
je
push
sbb
jnp
iret
sbb
and
mov
jnp
fistps
cmp
xchg
push
fdivr
push
xor
cmpsl
scas
mov
hlt
out
lahf
push
cmpsl
lret
leave
jecxz
jbe
push
lock
jo
addr16
les
outsb
pushf
les
out
lahf
sahf
fimuls
dec
inc
mov
in
scas
shlb
sbb
or
insl
jns
imul
fsubr
adc
cmp
in
push
and
iret
cmp
aad
inc
jne
jnp
xor
rol
push
stos
icebp
call
mov
loopne
add
sub
mov
popa
cltd
rol
subb
call
mov
test
cmp
mov
cmp
push
outsb
scas
dec
mov
lea
loop
and
push
ret
xchg
inc
sub
inc
test
pushf
nop
shrl
arpl
sbb
sbb
sbb
jbe
outsl
in
out
cmp
xchg
adc
loope
jl
jb
dec
cmp
push
out
stos
xor
je
add
fstl
xchg
push
jae
int3
inc
pop
in
xchg
and
cmpsl
mov
sbb
je
or
push
mov
jbe
outsb
jecxz
add
cmpsb
rorb
cmp
cld
enter
fisubs
loopne
jne
mov
sahf
in
xchg
sbb
lret
lock
inc
push
outsb
fcmove
ja
mov
mov
lret
js
xor
adc
adc
inc
cld
xor
movsl
nop
adc
inc
movntq
out
test
or
ret
data16
mov
in
and
xchg
mov
imul
push
or
cli
pop
cmpsl
data16
repz
cwtl
sbb
mov
dec
mov
fnstenv
mov
sbb
ret
mov
jne
and
iret
jne
pop
lret
gs
add
in
adc
inc
push
push
in
inc
clc
ds
rclb
mov
je
sbb
insl
cmp
iret
scas
cmp
cmp
orl
faddp
mov
dec
push
adc
mov
jne
mov
mov
mov
add
sub
add
and
xor
pop
inc
mov
add
mov
sub
pop
loope
jo
inc
in
cltd
cmp
sbb
cmp
ftst
push
out
push
lods
push
push
popf
cmp
mov
add
bound
pop
cmpsl
push
mov
push
sub
mov
and
lock
icebp
xchg
ret
movzbl
loopne
ret
faddl
andl
inc
rol
mov
roll
xor
push
cmp
jmp
lret
imul
fucom
pop
inc
shl
gs
pop
inc
adcl
add
pop
mov
fwait
mov
in
mov
pop
jb
jo
insb
add
or
sbb
fnstenv
sbb
sub
sub
sbb
xor
sahf
sbb
into
push
shll
popl
jmp
fnsave
xchg
repnz
cs
jl
lea
adc
repnz
and
loop
pop
into
jmp
sbb
push
and
push
dec
dec
aas
cmpsl
mov
and
fst
fsubl
aad
imul
in
jl
dec
lret
xchg
mov
cwtl
aaa
push
pop
or
popa
jbe
movsl
scas
cmp
add
cmpsb
cmpsl
insb
stos
cmp
dec
sub
mov
scas
ljmp
push
sarl
aad
cmp
or
ret
adc
addr16
fwait
sbb
call
sahf
lea
mov
aam
jae
dec
inc
push
xchg
jnp
xlat
cmp
mov
xlat
pop
mulb
and
clc
ds
notl
dec
sub
pop
inc
dec
push
xor
xlat
fcomps
iret
mov
or
push
insl
idivl
out
lret
xor
dec
jns
rolb
data16
int3
cltd
pop
lods
int3
xor
sub
int
push
inc
pop
ja
jno
mov
mov
orb
jns
cmp
shrl
add
cmp
ret
repnz
fnsetpm(287
mov
test
dec
xchg
inc
mov
pushw
daa
adc
fnstenv
inc
pop
jnp
and
lahf
and
repz
and
cmp
pop
cmc
es
int
sahf
in
movsl
int3
dec
inc
mov
rsm
mov
lcall
and
imul
sbb
and
or
aas
nop
xor
fcmovne
xor
pushf
dec
and
jle
mulb
js
and
xchg
pop
sub
int3
sub
cmp
call
leave
es
shrl
loop
jb
and
jo
and
loope
xchg
hlt
cvtps2pi
jmp
mov
sbbl
inc
add
xor
xchg
sbb
ds
cmp
push
sti
rcr
jbe
mov
mov
movsl
ficomps
div
shlb
mov
in
jecxz
mov
arpl
xor
enter
mov
xchg
push
sub
in
pop
sbb
enter
shr
xorb
std
fimull
repnz
xchg
xchg
fmuls
sbb
mov
out
mov
loope
push
gs
adc
ret
dec
cwtl
test
sbb
sub
push
cmp
jae
xorl
loopne
pushf
shr
ja
xor
inc
push
cmp
mov
sub
js
imul
sbb
ret
mov
inc
pop
fidivs
das
adc
dec
mov
popa
imul
into
or
stos
sub
lret
mov
les
movsb
mov
or
lcall
jnp
ror
sub
xchg
outsl
mov
fmuls
and
mov
sbb
sti
cmc
xchg
add
lods
or
aaa
sub
ja
sub
shlb
xor
mov
cs
pop
dec
push
dec
lahf
mov
pop
cmp
xchg
adc
cmpsb
jno
negb
dec
mov
in
loop
adc
sar
aas
cld
stc
aad
xchg
push
pusha
imul
out
roll
sahf
mov
arpl
push
fadds
pop
mov
and
mov
mov
push
or
push
sarb
jne
dec
xor
push
sub
and
pop
into
or
cmpsb
ss
mov
sar
jmp
je
push
jg
ljmp
faddl
mov
mov
push
sub
cltd
pop
in
inc
and
push
mov
jge
decl
testb
gs
xor
xchg
movl
in
fidivrl
aam
sub
insb
testl
sub
xchg
pop
xchg
sbb
xor
push
jb
push
or
imul
push
orb
mov
lret
inc
inc
and
jo
cld
mov
lock
je
or
mov
jle
in
sti
shlb
sub
sarb
add
shrl
call
push
push
lods
repz
jg
scas
in
dec
mov
fdivr
mov
jne
add
cmp
loopne
xchg
adc
cmp
inc
sub
push
clc
sarb
icebp
and
cmp
daa
or
adc
dec
loope
sub
jbe
xor
ja
xchg
push
insb
ljmp
add
je
out
std
jle
pop
sub
push
lods
mov
dec
dec
adc
pop
sub
cwtl
flds
les
stc
subb
fmul
cmp
daa
test
pushf
mov
test
popa
xchg
push
pop
fisubl
stc
jne
sahf
pop
arpl
xlat
push
sbb
aad
std
cmp
test
add
call
mov
rolb
aaa
inc
shll
je
adc
inc
mov
inc
sbb
sbb
cmc
xchg
cld
sub
dec
adc
cmp
push
mov
cmp
jb
xor
cmp
adc
add
add
mov
xor
sbb
mov
xor
sbb
dec
cli
add
aad
pop
dec
xor
lret
xchg
sub
jno
adc
leave
cmp
mov
or
pop
pop
ds
ret
pop
das
xchg
imul
or
push
inc
sti
mulb
jge
test
add
ja
stos
imul
jge
arpl
decb
out
jg
rcr
cld
ror
xor
cmpsl
dec
xor
mov
and
mov
pop
push
gs
sbb
repz
bound
hlt
jmp
xchg
sbb
cmc
flds
pop
or
xor
imul
jae
adc
mov
jb
jo
stos
faddp
and
les
sbb
pop
loop
loope
subb
cli
jle
mov
fldt
loope
cmp
xchg
mov
ret
clc
stos
or
bound
in
in
sbb
fldl
cmpsb
not
sbb
xor
sub
cmp
adc
xchg
dec
sarl
dec
cmc
pop
int
shl
enter
xor
pop
pop
mov
xor
fs
mov
and
ret
add
inc
cmpl
jge
xor
push
arpl
mov
add
jecxz
sarl
adc
sbb
mov
sub
nop
scas
push
push
lcall
scas
cmp
xor
ja
shll
mov
mov
aam
push
jg
sub
cmp
aad
sub
outsl
jecxz
inc
adc
inc
call
sub
lcall
and
and
jnp
mov
mov
popa
jne
mov
inc
xor
aad
sahf
sahf
dec
mov
shl
mov
jo
idiv
cmp
push
and
jne
dec
inc
out
call
xor
dec
or
pop
mov
into
es
mov
enter
sbb
fnstsw
test
xor
cs
bound
push
fbstp
shrl
pushf
mov
clc
in
popf
inc
shlb
inc
jmp
pop
xchg
daa
cmp
jmp
mov
dec
cmp
cmpb
sub
call
sbb
jl
in
scas
jno
stos
fs
cli
loop
test
shlb
pop
mov
cmp
xor
sub
adcb
dec
std
push
icebp
add
addl
pop
xor
idiv
sbb
xor
insl
mov
movsl
or
leave
xchg
sub
jbe
dec
lods
int3
mov
push
mov
test
sub
xchg
mov
hlt
add
jbe
imul
test
jb
dec
insl
bnd
mov
jl
lret
int
cmp
int3
mov
sbb
lret
cmp
repz
pop
cmp
insl
and
lahf
je
push
pop
cmpsl
and
out
hlt
xor
mov
rcll
xchg
daa
mov
sbb
fidivrs
loope
shl
aad
jb
adc
pop
ret
adc
pushf
nop
sbb
pop
jl
mov
cmpsb
fisubrs
shll
cmp
int
lock
insl
push
mov
and
mov
push
les
push
and
std
mov
xor
sub
fcoml
xchg
pop
or
pop
cmpl
pop
dec
mov
loopne
mov
push
imul
imul
iret
mov
and
rorl
mov
mov
inc
mov
push
xor
test
adc
pop
movsl
sarb
xor
pop
setg
jle
inc
xchg
cld
mov
pusha
mov
outsl
aas
sub
pusha
clc
loope
out
mov
jmp
dec
pop
mov
add
mov
aad
jge
mov
inc
adc
in
ja
rorb
mov
gs
rorb
cmp
add
rcl
mov
push
xchg
adc
cmpsb
repnz
roll
insb
lods
out
push
jb
in
mov
inc
mov
fstpl
fwait
xchg
leave
nop
pop
decb
sarl
lock
pop
sbb
cwtl
ja
xorb
lcall
shll
cmpsl
pop
popf
mov
mov
call
test
and
and
dec
mov
add
sub
mov
cmp
add
test
dec
stos
cmpsl
lock
fsubs
fwait
adc
in
js
push
lods
cmp
repz
and
insb
adc
test
jge
xchg
xor
or
add
movb
xor
push
or
in
inc
and
cmp
in
jne
mov
lods
pushf
in
xor
fcmovb
xchg
jl
jle
popa
mov
push
leave
jae
jb
or
repnz
and
mov
repz
dec
div
andb
stc
sbb
jge
add
push
pop
orb
fwait
mov
pop
push
sbbb
sbb
pop
stos
sbb
lcall
xor
or
cmp
xor
mov
mov
test
xchg
inc
mov
int3
cmpsl
pop
jle
sub
push
xchg
fbld
cmpsb
mov
repz
or
rol
cmpsl
pop
scas
cmpsl
xchg
daa
adc
into
aam
jae
stos
sub
addr16
add
sub
xlat
push
div
scas
bound
pop
push
sub
pushf
jnp
outsl
dec
fwait
sub
call
mov
xchg
outsl
sub
or
insl
cs
ljmp
sarb
sbb
xchg
mov
cwtl
pop
xchg
cld
arpl
sbb
loop
jns
cmpb
jno
ja
add
pop
pop
cli
xor
clc
or
aam
jmp
lahf
inc
mov
adc
sbb
fadd
fmul
out
enter
fmuls
jb
and
xlat
cmc
ja
les
xchg
mov
je
cmp
cmp
aad
dec
stc
adc
fisttpl
popf
jo
outsb
out
insb
sbb
icebp
rcl
dec
dec
pop
inc
scas
jge
push
scas
arpl
mov
push
fsts
xor
fmuls
add
xor
push
xor
and
or
add
jecxz
push
push
stc
out
test
mov
arpl
mov
std
fmuls
shlb
jecxz
sub
push
pop
lods
inc
or
rcl
aaa
sbb
and
cmp
lds
cmp
in
dec
in
mov
pop
pop
pushf
shrb
or
add
call
or
jno
mov
push
popf
lcall
outsl
dec
mov
pop
push
call
aaa
push
pmaddwd
mov
ret
pop
movb
mulb
xor
imul
arpl
mov
push
into
cmp
sub
sbb
loope
mov
jnp
adc
mov
mov
pop
ljmp
adcb
jmp
aas
jmp
adc
fsubrl
jle
or
test
and
jno
data16
xlat
loope
stos
mov
ss
dec
icebp
call
aaa
outsl
adc
lea
push
adc
dec
push
mov
pop
jecxz
out
adcb
js
mov
int
loopne
push
xor
mov
mov
subb
repnz
xor
mov
cltd
sbb
jns
push
sarb
dec
pushf
icebp
sub
fsubs
in
in
push
dec
dec
mov
sub
in
xlat
push
inc
sbb
and
push
mov
icebp
enter
pop
jecxz
and
jne
not
out
clc
popa
cmpsl
add
adc
jl
push
jno
data16
in
xchg
dec
add
aas
insl
jnp
sbb
push
mov
popf
sbb
out
lods
outsb
cwtl
and
pop
dec
cmp
inc
mov
hlt
mov
rorl
jae
icebp
int
cmp
sti
mov
dec
ret
icebp
outsl
ja
js
adcb
dec
mov
adc
cltd
rolb
testb
lock
push
jge
adc
xlat
ljmp
leave
outsl
cmp
jnp
xchg
shrl
fistl
imul
lock
adc
daa
aaa
xlat
ficompl
aas
or
push
out
pop
mov
xor
rcrl
adc
push
fcoml
dec
xchg
mov
movb
js
lcall
pushf
mov
sbb
dec
shlb
divb
sub
adc
mov
popa
cltd
mov
aam
rolb
sbb
ret
ss
shr
icebp
popa
mov
add
jbe
xchg
or
imul
mov
test
inc
mov
pop
pushl
cmp
adc
sti
inc
lret
jle
push
jg
and
jp
loop
outsb
shll
das
ja
xchg
xorb
pop
adcl
mov
aam
mov
jns
xchg
mov
cld
mov
or
xorl
sbb
pop
pop
test
fimuls
xchg
push
in
jl
xor
loope
jne
dec
das
inc
push
fisubrl
jnp
adcl
jnp
loope
std
popa
mov
movsl
push
xor
sub
jne
filds
push
lret
xchg
xlat
xchg
mov
mov
rcrb
mov
lcall
xchg
pop
add
fsub
enter
loopne
sub
int
cmpsb
pop
in
lods
xor
aam
xchg
test
jge
xchg
and
pop
rcrb
adc
jns
repz
scas
outsb
cmp
xchg
je
arpl
arpl
es
inc
test
adc
daa
sub
pop
jo
mov
mov
ret
lods
mov
fs
ret
jne
push
xchg
push
xchg
das
fstpl
dec
repnz
jb
jl
loopne
adc
ret
xor
cmp
je
pop
sarb
xchg
pop
imul
cmp
popf
adcl
sbb
jle
fwait
mov
fcom
iret
jmp
or
add
shlb
lahf
fwait
insb
aaa
cmc
gs
xchg
movb
jbe
mov
decl
mov
or
into
mov
jo
icebp
rol
cmp
push
xchg
fwait
aad
mov
pop
js
testb
mov
inc
test
or
fistl
hlt
imul
js
loopne
test
mov
inc
pop
shll
out
nop
cmp
jmp
test
pop
xor
and
cwtl
addr16
int
and
pop
push
aad
push
movb
jge
and
jb
or
pop
es
push
sbbb
lds
int3
daa
dec
mov
pop
mov
xchg
repz
xchg
pop
roll
out
lcall
and
xchg
les
sbb
and
scas
sub
into
xor
mov
insl
cli
push
lods
cmp
lods
push
dec
mov
testl
push
dec
lahf
add
faddl
mov
fsubrl
clc
mov
jne
fistpl
xor
pop
pop
jge
xchg
jo
sub
mov
sub
jge
inc
fstp
pop
lods
push
jbe,pt
push
sahf
inc
sahf
in
cmp
pop
or
orl
enter
lock
add
push
jge
adc
pushfw
imul
mov
and
sbb
fisttps
mov
mov
mov
sub
mov
or
push
pop
ljmp
ss
xchg
jg
popa
gs
jecxz
scas
in
jno,pn
movsl
cld
les
adc
aaa
lret
or
and
dec
lds
pop
mov
leave
add
and
xchg
push
jno
sub
or
iret
and
stc
sarl
in
int3
mov
mov
lds
mov
mov
xchg
cmp
int3
and
ljmp
sub
mov
add
outsl
xor
hlt
pop
push
xchg
stc
sub
inc
test
jb
sbb
fistps
das
adc
push
cld
clc
imul
jne
pop
pop
stos
mov
shl
jge
fstpt
jne
rolb
sbb
xchg
inc
xor
dec
aaa
dec
sbb
loopne
or
flds
imul
leave
pusha
inc
or
cmc
ds
inc
ret
sub
jae
fsubrs
std
cmpsb
jno
inc
ljmp
xorl
jae
jbe
push
xchg
jge
sbb
xor
cmpsl
fbstp
or
push
lock
andl
jnp
out
add
and
push
pop
inc
xchg
adc
sub
call
sbb
or
fldl
jle
mov
hlt
cmp
jl
repz
dec
add
push
sbb
arpl
ds
outsb
dec
cmp
fdivl
int3
push
out
and
popa
sarl
add
sub
fadds
mov
or
pop
mov
lcall
sbb
fisubrl
push
stc
fsts
call
xchg
add
insl
adc
lods
stos
lods
int3
ja
xchg
ljmp
pusha
ss
dec
nop
jp
and
mov
pop
dec
insl
inc
add
adc
lods
jecxz
push
pusha
mov
push
stc
xor
inc
insb
jno
aas
icebp
divl
in
dec
cmpsb
testl
push
mov
xor
adc
out
shl
stos
cmp
repnz
fcomps
movsl
setp
aaa
jle
mov
pop
test
jg
cmp
pop
pop
mov
jo
xchg
add
test
aaa
incb
mov
mov
sub
sub
fwait
inc
xlat
xor
iret
push
dec
jl
cli
cmp
fisttps
xor
cwtl
rolb
push
mov
imul
xor
mov
mov
inc
std
and
inc
insb
sbb
cmp
enter
adc
cmp
jae
push
ret
sahf
jecxz
mov
jae
push
insb
cmpsb
mov
xchg
leave
push
sub
sub
roll
mov
xchg
jae
cli
jne
nop
lahf
lahf
push
lret
pop
pop
push
push
fsts
and
addr16
add
sbb
dec
sahf
lock
iret
subb
push
sbb
shrb
test
inc
stos
push
in
mov
sub
mov
loop
push
cmp
xchg
nop
bound
lcall
mov
aad
fcoml
push
sti
cmp
jae
outsl
push
test
call
test
xor
loopne
or
xchg
mov
push
and
cmp
mov
inc
or
push
jne
push
out
orl
inc
mov
mov
imul
ret
pop
sti
ficomps
nop
repnz
dec
adc
mov
cmp
xor
dec
xor
add
sub
popa
sbb
cmp
mov
repnz
into
aam
cltd
mov
jo
sub
inc
ja
lcall
and
sub
movsb
test
into
mov
xchg
push
push
fcoml
cwtl
sarl
xchg
xchg
fwait
popa
das
fcoml
inc
push
sbb
jne
fs
hlt
xor
xor
pop
dec
lret
cmc
aad
sub
mov
insb
push
rcll
inc
mov
cs
jmp
add
mov
xor
push
xlat
jo
bound
xor
lcall
les
xlat
mov
xchg
lcall
and
push
sbb
outsl
fs
test
scas
hlt
cwtl
and
mov
cmpsb
adc
icebp
or
inc
xor
rep
sbb
mov
sbb
repnz
mov
fistl
sti
test
outsb
lods
pop
or
dec
lret
jnp
in
add
pusha
mov
movsb
cltd
das
in
xchg
fsubrl
daa
loope
out
add
jmp
pop
shll
push
sub
inc
ficoml
jmp
jno
inc
adc
cltd
jnp
xchg
mov
dec
push
lret
dec
fistpll
and
push
xor
repz
dec
push
mov
and
fwait
enter
cwtl
repz
movsb
jne
xor
jo
data16
popa
stc
sahf
cvttps2pi
insb
addr16
arpl
out
ret
jae
addr16
clc
dec
add
movsb
xchg
push
lea
ror
inc
mov
scas
cmp
push
pop
or
lds
pushf
les
mov
les
pop
or
xor
fs
mov
sub
push
dec
lds
add
dec
adc
xchg
int3
js
cli
into
imul
sbb
stos
lret
fcmove
fidivrl
rol
mov
and
adc
adc
pop
adc
push
pop
pop
fdivrp
push
test
aaa
aad
repnz
inc
adc
loope
xor
sbb
hlt
fisttps
clc
or
pop
mov
jns
cmp
dec
rolb
inc
sbb
jecxz
pushf
icebp
mov
jge
add
lea
gs
loop
xchg
pop
sbb
push
clc
aaa
shrb
pop
scas
xchg
aad
sbb
push
mov
mov
and
popf
lahf
mov
cmp
inc
mov
pop
xchg
jbe
xor
cld
jnp
or
les
mov
pop
loop
outsb
lock
test
into
sub
mov
dec
cs
outsb
lret
mov
add
rclb
sbbb
cli
pusha
cmc
mov
je
dec
cli
and
cmp
shrb
std
int3
push
stos
adc
les
mov
out
pop
push
adc
and
sbb
push
rcrb
mov
out
cmpsl
outsl
mov
arpl
pop
push
mov
or
rcrl
inc
or
dec
mov
les
das
loope
and
fs
sub
out
mov
jp
mov
inc
jg
shl
inc
sti
in
add
es
add
inc
sbb
add
stc
cmp
cmp
jb
inc
pop
pop
sarb
jo
adc
push
mov
adc
testl
test
dec
dec
ljmp
xlat
ja
cmp
subb
loope
shll
sub
movsb
pusha
stc
mov
lock
pop
mov
rolb
repnz
mov
mov
test
jno
divb
mov
adc
loopne
jge
inc
cs
das
inc
nop
stc
cmp
push
inc
popl
push
cmp
mov
sbb
mov
out
rcrb
lods
xor
mov
ret
fwait
inc
sahf
ror
in
hlt
jae
repnz
pushf
fcoms
in
cmpsl
inc
mov
xor
cmp
jnp
fwait
lods
xor
cmp
das
addr16
movnti
enterw
push
jo
pop
arpl
jl
andl
add
mov
adc
push
push
xchg
add
ljmp
cmpsl
push
push
out
lret
outsl
sti
clc
mov
out
aam
cli
xchg
inc
add
mov
scas
jo
cmp
mov
push
xor
loop
adc
shll
fwait
xchg
lods
in
or
sbb
imull
clc
mov
mov
xor
lock
pop
xchg
fiadds
xchg
stos
push
dec
push
add
in
stc
lock
data16
add
stos
outsl
fisubrl
mov
add
ficoms
sub
testb
mov
xorb
push
inc
push
sbb
adc
ds
cmp
es
add
imul
loopne
es
std
ja
in
mov
shrl
xor
sti
fbld
jo
mov
push
jl
add
iret
mov
daa
adc
adc
bound
fisttps
inc
outsl
adc
ds
fwait
inc
and
repnz
mov
mov
sahf
lret
test
mov
testb
dec
jb
in
xchg
lret
scas
push
sbb
fsubl
mov
lods
scas
mov
daa
lds
jecxz
leave
lcall
ds
jno
clc
ficomps
mov
add
insl
xchg
das
aam
inc
pop
mov
jns
xchg
cmp
pop
cmpl
xor
mov
fldl
push
dec
jns
mov
push
mov
shlb
aaa
sub
aam
aaa
jle
ja
aaa
add
popf
cmp
popf
jo
mov
nop
push
sbb
mov
jecxz
mov
xor
clc
insl
and
adc
pop
mov
jge
xchg
dec
test
adc
push
push
sbbl
mov
xchg
cmp
mov
fidivs
or
cs
fsubs
fdivr
mov
inc
xor
cmp
adc
sub
xlat
lock
jg
and
fwait
mov
je
mov
sbb
pop
addb
mov
incl
mov
in
mov
mov
sbb
and
mov
mov
mov
dec
cmpsb
leave
xchg
imul
test
lahf
pushf
cmpsb
dec
ds
cmp
sbb
mov
popa
lret
ret
jle
and
sti
loop
mov
out
xchg
test
outsl
out
push
push
pushf
rcl
fnsave
fwait
sarb
aam
popf
iret
js
inc
or
fisubrl
pop
sub
test
jo
sahf
loop
out
inc
inc
mov
sbb
imul
push
insb
lds
leave
nop
loope
out
fisttpl
rclb
jae
add
cmp
adc
imul
inc
aam
mov
ljmp
dec
and
pop
in
shll
int3
enter
or
mov
cmpsb
mulb
push
jmp
jae
aas
add
addr16
pop
jmp
in
inc
out
sub
fcom
inc
jae
xchg
lret
jb
and
out
inc
test
repz
mov
je
mov
int
test
pop
and
lods
or
jge
or
pop
cwtl
ja
dec
jg
nop
or
jb
cs
rclb
lds
lods
xor
roll
test
cwtl
xchg
pop
flds
aad
mov
push
and
jp
mov
adc
pop
and
mov
icebp
mov
xchg
dec
lods
xlat
pop
fistps
adc
ret
and
andb
pop
popf
sub
lods
outsl
inc
push
xchg
mov
jae
orl
cmp
dec
clc
faddp
inc
dec
and
fmuls
ja
fcoms
fs
lods
addr16
and
jnp
xor
xor
loopne
mov
jecxz
aaa
cwtl
daa
mov
icebp
adc
test
arpl
pop
cmpl
jne
lea
sbb
js
ja
mov
add
hlt
pop
lds
push
dec
mov
xchg
lods
pop
adc
cmp
dec
sbb
jg,pt
ss
xor
sbb
jp
aad
test
mov
loope
in
sbb
push
cli
test
xorl
out
pop
mov
cmp
fildl
aaa
mov
arpl
dec
pop
cs
sti
ret
sub
adc
in
fistpll
clc
fwait
in
dec
dec
mov
mov
pop
add
lds
or
in
jnp
aam
loop
jnp
xor
inc
ret
lret
stc
xchg
xchg
scas
ss
mov
jp
lahf
lods
aam
icebp
stos
ret
into
bound
nop
lods
out
jo
icebp
sbb
jno
stos
xchg
int
jb
out
pop
call
push
add
jne
mov
cli
push
lea
ljmp
arpl
pop
or
cwtl
cwtl
fsubrl
or
in
xchg
add
mov
mov
popa
ficoms
jne
pop
sub
mov
movsl
and
mov
orb
jne
je
mov
cwtl
out
fsts
mov
gs
dec
les
and
int3
mov
nop
lock
fldpi
call
push
lret
lret
cs
out
mov
rorl
xor
das
addr16
adc
cmc
push
xchg
lret
lcall
jmp
sub
mov
push
jg
les
jle
add
nop
sub
sti
std
or
cmp
sbb
movsb
jle
pop
dec
jl
cmpsb
mov
jl
mov
faddl
mov
jae
ds
or
dec
fwait
divl
mov
fs
push
or
sarl
mov
ss
enter
mov
cwtl
aam
mov
adc
movsl
push
push
jmp
outsb
mov
push
ficoms
lcall
fbstp
push
inc
xchg
into
out
jnp
pop
and
leave
add
lret
jb
mov
stc
cwtl
pop
out
sahf
das
xchg
lahf
push
push
ja
scas
arpl
lods
int3
dec
out
sahf
sti
or
xor
mov
jbe
cmp
insb
cmpsb
fmuls
lahf
add
xor
xor
andl
and
cmp
out
mov
shll
mov
mov
aas
es
jno
jns
add
fisubl
and
fsub
sbb
cmpsl
repnz
loopne
ja
pop
xchg
xor
dec
out
mov
mov
stc
cli
stos
repz
jge
xchg
cmp
inc
out
push
cs
sahf
cmp
cwtl
jns
xor
inc
inc
lret
fbld
sbb
loope
xor
inc
mov
rcrl
fs
inc
fidivrs
lret
in
fs
stos
jb
aas
inc
sub
shl
hlt
lcall
push
cwtl
sub
xchg
stos
lea
stos
adc
std
gs
icebp
mov
dec
inc
lret
test
call
sbb
popf
shll
sub
incl
cmp
mov
cmp
cmp
icebp
push
mov
mov
jbe
and
mov
and
cmp
jb
sub
mov
and
out
sbb
mov
inc
aad
inc
mov
mov
cs
push
aad
int
into
movl
popf
jle
mov
fwait
scas
and
cmpsb
xor
scas
mov
xchg
sub
leave
sahf
lcall
mov
mov
cmpb
jae
inc
sub
pop
mov
and
inc
lods
or
pop
popa
lods
jb
or
movsb
repz
cmp
arpl
and
lods
test
xchg
lds
xor
mov
pop
nop
inc
cmp
fstps
ss
out
fs
add
xchg
pop
sbb
mov
inc
in
je
cmp
push
out
pop
lods
cmp
inc
mov
push
data16
aam
jae
lcall
adc
or
jle
in
cmp
cs
pop
push
test
push
cmp
xor
mov
mov
mov
mov
gs
jp
pop
sbb
loop
stos
gs
dec
mov
pop
add
rorl
and
mov
mov
sti
mov
pop
loop
or
xchg
lahf
sbb
fidivl
lods
in
clc
mov
arpl
cld
pop
out
cmp
popf
mov
cmpsl
shl
subb
jb
push
js
mov
out
pop
aaa
cli
in
adc
jne
and
dec
in
icebp
xor
fstpt
stos
repnz
xor
push
pop
inc
mov
adc
push
dec
pop
pop
das
or
adc
jecxz
mov
arpl
dec
bound
xchg
jno
push
push
inc
and
xchg
out
fwait
das
lret
xchg
push
aas
dec
push
xchg
testb
jmp
push
scas
mov
and
int
xor
jl
jbe
mov
inc
mov
mov
outsb
mov
rcrl
pop
cli
leave
dec
mov
sarl
lret
rclb
loop
jp
pushf
push
out
lods
cmpsb
xchg
bound
ret
inc
push
enter
push
cmp
cmp
cmp
mov
or
xchg
stos
loope
adc
fidivrs
movsb
incl
cmpsl
stos
jge
mov
fnstsw
sahf
dec
scas
sti
sbb
add
shlb
cmp
jg
jge
cmp
dec
ss
sbb
aaa
cmpsb
ficompl
mov
dec
leave
dec
xchg
mov
fmuls
xor
xor
sub
push
add
inc
ljmp
adc
jp
daa
pusha
mov
movsl
sub
cmpsl
loope
popa
stos
push
add
sbb
rorl
sub
xchg
out
fsubr
and
mov
xchg
lcall
jmp
xor
jmp
stos
pop
scas
inc
adc
fnstsw
jno
movsl
push
jg
or
jo
test
fsts
and
sub
push
adc
in
shr
arpl
and
ja
and
out
cmc
lea
int
dec
mov
fistl
rolb
popa
lock
xlat
sub
add
test
cs
sbb
leave
out
outsb
lret
cmp
mov
adc
out
mov
jle
cld
ja
xchg
insb
jo
repz
sti
cmp
fisttpll
notb
lods
push
mov
xchg
mov
out
imul
int3
scas
cmp
in
and
add
jno
pop
xlat
cmpsb
mov
lea
sahf
hlt
add
or
cmp
cli
mov
mov
nop
push
ds
mov
sub
jmp
mov
imul
push
fcmove
pop
xor
adc
repz
dec
jne
or
out
add
sti
ljmp
jle
sahf
shlb
mov
sub
dec
fwait
aaa
sub
aad
inc
push
loopne
mov
inc
mov
jle
inc
ss
push
movhps
sub
loop
pop
sarb
or
pushl
lds
sahf
cmp
or
cld
jae
fnstcw
or
ret
or
fadds
dec
xor
fs
dec
orl
adc
sbb
enter
sub
lea
mov
xchg
pop
cmp
stos
sbb
and
mov
mov
ret
xchg
fucom
lret
dec
sbb
mov
cmp
and
mov
mov
cmpsb
je
push
sbb
test
cwtl
xchg
jg
les
jns
sub
repnz
add
out
inc
xor
dec
and
les
push
sub
mov
xor
addr16
pop
xchg
cltd
cmp
jmp
shll
jmp
ljmp
add
cltd
sbb
out
sbb
xor
inc
aas
dec
shlb
ljmp
push
pop
or
arpl
push
cmp
push
cmpsb
mov
cmpsl
xlat
xor
out
ds
sbb
stc
jecxz
mov
jg
jmp
subl
push
ss
insl
pop
adc
test
sbb
dec
shrb
cmp
cltd
roll
mov
add
cmp
call
inc
mov
push
test
push
shl
sbb
pop
mov
mov
inc
bound
outsb
pop
mov
xchg
and
call
ds
mov
pop
outsl
fwait
add
lods
lea
push
imul
mov
pusha
popf
pusha
jo
cli
mov
xchg
shl
sub
xor
and
cmp
and
cmpsb
das
mov
bound
cmp
sahf
aas
mov
lret
or
xor
es
pop
stos
addr16
hlt
loope
xor
mov
adc
test
ret
out
pop
cmc
pop
pop
aam
jge
push
jnp
cltd
lods
mov
subb
test
jnp
mov
pusha
xchg
aaa
dec
pop
test
and
shrb
icebp
jo
or
andb
jecxz
insb
int
repz
fsubrs
ficoml
fstpt
fists
jae
test
mov
in
mov
int3
stc
xor
jo
mov
flds
js
fdivrs
jnp
sbb
fidivs
mov
jmp
mov
fs
loopne
mov
jb
push
aaa
out
jecxz
pop
mulb
xlat
divl
loop
jae
mov
cli
jno
cmp
addr16
nop
xchg
outsb
lret
dec
inc
ljmp
rclb
fwait
sar
iret
adc
rolb
push
sbbb
cmp
loope
fcomps
mov
jmp
xor
repnz
sbb
xchg
femms
popf
out
jnp
ret
addr16
out
repz
jg
mov
adc
jb
daa
sbb
test
or
push
fnstsw
testb
mov
jnp
insl
sti
popa
shll
imul
int3
rolb
mov
sbb
mov
mov
je
decb
es
out
push
mov
into
mov
mov
jmp
mov
ret
inc
dec
ja
adc
and
ffreep
les
cmpsb
sub
push
rolb
adc
fcoml
int3
sbb
xor
xor
cwtl
push
or
sbb
in
and
xchg
dec
repz
dec
mov
push
testb
repz
sub
inc
pushf
ja
repnz
xlat
out
sub
shlb
xchg
add
jbe
ret
jae
sbbl
cmp
icebp
jnp
pop
and
pop
adcl
xchg
sbb
flds
movsl
movsb
lret
or
in
mov
or
mov
imul
cmc
test
push
and
xchg
lret
mov
popa
mov
push
xchg
adc
int
nop
inc
fucomip
movsb
jne
pushf
mov
jmp
ss
inc
jo
sub
fisubrl
nop
xor
mov
cld
iret
dec
pop
jmp
xchg
test
add
rcr
std
or
cmp
lock
addr16
sub
filds
push
ds
mov
imul
ja
dec
iret
lods
xchg
push
sbb
rcrb
das
repz
gs
jo
shl
sub
lret
andb
in
out
lds
sbb
ret
fmuls
sub
xor
sbb
std
xor
aam
push
ret
repnz
shrl
out
inc
sbb
dec
repz
xlat
ret
jp
mov
jg
jp
jle
mov
repnz
lret
push
push
clc
hlt
jae
add
add
pop
divl
push
leavew
xchg
ret
fs
mov
js
and
ljmp
sbb
jg
rorl
addl
hlt
clc
sbb
lret
inc
sbbb
inc
test
jecxz
loopne
jmp
mov
fidivrl
lret
mov
xor
out
insl
sub
test
and
jg
jno
movsl
lods
xchg
xchg
in
repz
pop
pusha
xor
pop
mov
mov
xor
nop
loopne
test
mov
jle
test
cs
xor
in
je
loop
or
rcr
stc
cmp
rcl
mov
ds
xchg
icebp
mov
mov
movq
add
leave
dec
inc
mov
xor
popf
mov
dec
push
and
fs
sbb
outsb
push
inc
mov
icebp
jae
test
push
das
test
and
jl
das
mov
std
outsb
in
sbb
jmp
das
mov
leavew
jmp
mov
or
fistpll
inc
push
loope
push
adc
stos
xchg
sub
test
mov
insb
mov
jmp
cmpsl
sbb
xchg
in
pop
icebp
and
dec
frstor
pop
pop
add
mov
aad
xchg
ret
out
add
or
mov
inc
ljmp
pushw
mov
cli
aam
mov
add
pusha
sahf
sahf
xor
dec
push
cld
dec
lea
jns
jne
mov
inc
lods
add
dec
sbb
dec
mov
js
xchg
aaa
pop
out
aad
add
inc
pusha
mov
jl
push
lcall
inc
push
xlat
push
xor
sub
movb
pushf
sub
dec
mov
shlb
das
movsl
stos
pusha
test
test
mov
inc
test
pop
add
fbld
jge
push
xor
lock
jbe
pop
clc
mov
fs
lock
rol
mov
cmp
push
xchg
mov
jmp
repnz
stos
or
cltd
xor
rorl
ds
jl
inc
js
push
jb
andl
dec
cmpb
jl
aas
cmp
add
div
cmp
packsswb
pop
push
in
out
cmp
cli
pop
cmp
popl
dec
neg
and
cwtl
fisubs
xchg
roll
aaa
scas
adc
pushf
outsl
movsl
arpl
andl
scas
xchg
pop
mov
push
and
xor
xchg
imul
cwtl
shr
data16
cmp
push
fnstcw
xor
lock
and
mov
test
andb
pop
jg
mov
aad
xchg
movsb
xchg
out
sub
add
sarb
andl
imull
jp
mov
addr16
test
dec
xchg
ss
inc
sub
unpckhps
inc
mov
outsb
mov
and
loopne
cli
lcall
mov
loopne
dec
enter
test
in
daa
sbbl
dec
cmp
mov
cmpsl
out
and
cmp
jbe
popa
jae
inc
cmp
in
jns
fmuls
cmpsb
cs
xor
jge
cli
imul
and
lcall
jle
jbe
test
inc
jecxz
mov
add
xor
xlat
push
testb
sub
push
stos
jp
out
sbb
xor
les
sub
movb
insb
mov
inc
cld
pop
xchg
dec
and
clc
push
pop
rcrl
leave
sub
push
mov
mov
ret
sbb
push
mov
loop
hlt
dec
inc
push
aam
scas
outsb
xchg
xor
js
mov
fnop
enter
pop
or
lock
loop
shrl
stc
notl
pop
in
and
mov
dec
mov
sti
stos
mov
dec
test
sbb
dec
jb
ja
lods
sti
pop
out
mov
and
sbb
jbe
aad
rolb
fdiv
mov
fisubrl
and
xor
xor
jge
xor
sub
pop
pusha
stos
adc
adc
pop
fdiv
idivl
add
inc
movsb
call
popf
xchg
iret
dec
cld
mov
xchg
push
mov
adc
inc
lods
and
ds
in
sbb
cmp
les
sbb
and
fwait
push
icebp
dec
dec
sub
dec
adc
jnp
orb
jnp
or
dec
mov
int
mov
shrb
sbb
cmp
push
jge
mov
sub
xor
bound
sbb
lea
inc
dec
fwait
idivl
push
mov
shrl
push
ljmp
cmp
jo
movsl
insl
adc
jecxz
sub
jbe
sbb
jne
rol
in
and
pop
popf
xor
mov
repnz
adc
rclb
pop
out
or
inc
fs
std
push
popf
xlat
stos
xor
mov
push
stc
add
sbb
stos
push
mov
ds
and
push
hlt
out
out
cld
xchg
bnd
lods
pop
shrl
je
push
push
repz
in
je
daa
fwait
sarb
popa
in
add
mov
cld
add
insl
jecxz
mov
test
lret
jns
push
cwtl
jg
dec
dec
push
jecxz
pusha
jp
pushf
adc
fstl
cmp
pop
fbstp
les
gs
mov
pop
mov
je
lds
jmp
pusha
add
jecxz
in
lahf
rcrl
pop
inc
push
or
sbb
push
add
aam
jb
jns
popf
addb
iret
jp
data16
pop
xor
outsl
lahf
pop
lds
pop
imul
and
pushf
jg
or
dec
insb
lods
mov
xor
add
jle
and
lret
add
lea
sub
daa
push
inc
add
inc
je
cmp
shl
xchg
cmc
stos
and
mov
jge
mov
fsts
in
or
pop
sub
jbe
cmp
sub
dec
inc
insl
push
mov
push
add
push
adc
ja
lcall
push
out
rcr
mov
fnstcw
int3
out
aam
xchg
rcr
lahf
scas
outsb
test
push
inc
inc
lods
sbb
hlt
push
iret
adc
dec
xchg
xor
hlt
aaa
call
int
mov
rcrb
iret
or
fwait
data16
insl
mov
das
loope
cli
xchg
lcall
cmc
aaa
push
fyl2x
pusha
in
mov
pop
mov
adc
jbe
xchg
or
inc
push
sbbb
mov
push
add
imull
repnz
mov
ja
lret
jle
int
pop
pop
pop
mov
test
inc
mov
adc
mov
cmp
sub
imul
or
ljmp
inc
inc
dec
leave
fistpll
jnp
jecxz
stos
lods
push
xchg
loopne
insb
stos
jp
mov
cli
mov
add
sub
icebp
mov
aas
addr16
aam
imul
arpl
fsubrs
jle
jmp
imul
dec
or
xor
mov
iret
ja
in
or
in
rolb
push
pop
sbb
leave
jle
pop
or
xchg
fsub
xchg
sub
adc
jne
adc
outsl
scas
into
dec
daa
dec
js
loope
out
daa
jp
arpl
lret
jl
rcr
mov
mov
jo
mov
sub
popa
push
and
imul
push
push
fisubrs
xor
lret
or
mov
test
in
mov
ds
push
lds
mov
int
push
ljmp
cmp
call
cmpb
cli
and
hlt
sbb
pop
sbb
call
dec
pcmpgtb
in
jg
les
jbe
xlat
sub
js
sbb
sub
add
fwait
dec
lea
mov
repnz
mov
mov
stc
lea
jg
add
cmc
movsl
in
sub
and
jecxz
bndstx
or
arpl
mov
testb
xor
daa
sahf
sbb
sti
jg
test
cmpl
mov
and
ljmp
rorl
sti
mov
pop
or
mov
push
jo
rorb
fidivl
dec
mov
mulb
sub
daa
pop
pop
mov
int3
and
fidivs
call
imul
std
push
std
popa
jmp
fists
push
aam
jne
sbb
cs
dec
insb
pop
cmpsb
dec
lods
jbe
inc
cmc
cwtl
sbb
repz
scas
xchg
nop
orl
mov
sub
add
and
shr
mov
cli
cltd
gs
xor
cmp
dec
out
pop
arpl
mov
mov
mov
jmp
add
repnz
arpl
les
cs
pop
inc
pop
add
push
sbb
insb
imul
mov
in
and
call
int3
mov
mov
or
mov
mov
adc
nop
cs
jp
pushf
stos
jns
and
xor
cwtl
stc
movsb
jnp
jb
or
adc
iret
sub
cmp
mov
scas
jg
inc
mov
scas
test
adc
int3
mov
ret
jb
pop
movsl
adc
cmpsb
mov
lret
mov
jo
pop
sub
inc
fucom
inc
fstl
jecxz
mov
pusha
sub
movsb
inc
outsb
int
and
popa
sbb
mov
lods
bound
mov
adc
jg
in
cmp
lods
lds
cmpsb
mov
adc
dec
push
rcrl
cmpsb
push
mov
mov
sahf
adc
dec
fidivrl
mov
icebp
daa
std
push
sub
jp
or
mov
lret
outsb
pop
push
ss
xchg
dec
adc
ret
jle
or
in
lea
into
mov
outsl
negl
mov
xchg
es
xor
sub
cld
into
or
mov
imul
es
dec
sub
cmp
cmpps
inc
push
arpl
mov
mov
hlt
fyl2xp1
mov
xor
cltd
xor
je
jae
ds
dec
add
movsb
fiadds
cmpsl
push
push
push
int
xchg
in
into
ljmp
add
pop
xor
cld
mov
inc
push
popa
inc
jno
xor
lea
jmp
jle
mov
dec
and
fidivrs
dec
sub
pop
push
outsb
je
xor
cld
mov
xchg
jnp
dec
pop
aas
and
lret
push
push
mov
or
icebp
jo
daa
inc
std
fcoml
inc
aas
sahf
loopne
pop
mov
fsubs
hlt
dec
into
mov
mov
lcall
pop
and
imul
fisttpll
and
sub
out
lret
gs
sar
ret
mov
mov
stos
in
fbld
xor
clc
lcall
xlat
ljmp
cmp
test
sub
test
aas
jne
in
cmp
pop
adc
jae
jl
add
out
push
mov
jmp
dec
push
lods
in
jae
mov
faddl
popa
or
inc
int3
mov
jae
fnstenv
jge
fsubrs
inc
cmp
or
xchg
adc
dec
fwait
dec
jae
hlt
stos
jle
rcrl
inc
push
xor
xlat
lret
xor
sahf
sub
mov
fimull
mov
adc
pop
cltd
mov
int3
popf
xor
push
dec
inc
add
push
mov
cld
sub
pushf
mov
insl
test
cmp
jne
mov
xor
rorb
inc
ret
cmp
fcomps
adc
dec
shll
cmpsb
movsb
data16
sbb
or
rolb
pop
and
jbe
cmc
or
rclb
roll
daa
lods
pushf
jecxz
pop
popf
cmpsb
fdivrs
cmpsl
xchg
inc
mov
xor
in
popf
movsb
push
out
add
pushf
mov
mov
mov
outsb
notl
mov
ret
xlat
cwtl
or
fstl
pop
push
pop
into
jb
jae
sub
xor
inc
cmpsb
fwait
sbb
mov
mov
push
rorl
into
jl
std
sar
mov
lods
pop
das
decl
das
mov
in
pusha
popf
inc
xor
mov
pop
sub
fs
es
arpl
xchg
cmp
out
andb
dec
jecxz
test
sbb
jbe
test
pushf
aas
scas
js
test
out
dec
loopne
pop
dec
and
pushf
xchg
ljmp
sbb
pop
push
out
push
dec
pusha
sub
add
pop
cmp
dec
jae
xor
dec
mov
inc
xor
daa
scas
mov
in
pop
je
mov
inc
mov
push
cmp
imul
xchg
aad
sub
roll
fstl
xchg
lods
mov
push
xchg
mov
mov
inc
and
std
push
xchg
cmp
dec
cs
mov
cmpsb
xor
sbb
leave
jb
fisttps
rcrl
mov
leave
adc
pop
xchg
pop
in
pop
int3
mov
dec
test
divb
inc
cmp
cli
cmp
or
mov
idivl
xchg
test
shrb
cs
sub
cmpsb
jge
repz
cmpsl
lret
mov
sbb
scas
jle
xchg
push
and
xchg
xchg
push
mov
xor
aam
mov
adc
in
stc
mov
dec
imul
mov
xchg
fisubrl
mov
jne
sbb
fidivl
mov
fs
ret
mov
mov
cld
and
lret
shrb
addl
pop
call
adc
test
pusha
popf
pop
loop
push
inc
sbb
xor
mov
leave
or
aam
repnz
pop
add
stc
jo
push
sahf
jmp
mov
lock
xor
fildll
jae
pop
pop
mov
and
dec
lock
adc
pop
imul
mov
xchg
cmp
aam
leave
mov
hlt
fwait
add
cmp
push
mov
or
cmp
mov
cli
adc
repnz
icebp
inc
div
shll
repnz
jecxz
test
add
rcl
push
push
cmpsb
ret
loope
sbb
xor
fld
adc
leave
ret
xchg
mov
mov
aam
mov
xchg
or
jbe
jb
aad
cs
fsts
pop
sub
inc
or
push
jnp
jno
inc
xor
cmpsb
ljmp
bnd
sub
mov
pushf
test
jae
pusha
stc
mov
mov
std
and
mov
jecxz
mov
ret
sbb
insb
std
jbe
addr16
or
in
rcl
cli
dec
cld
add
nop
ret
jns
adc
xor
xor
and
fldt
mov
out
mov
dec
mov
inc
pop
xchg
sub
push
mov
ds
out
dec
cmp
sub
mov
or
int
cmp
pop
cmp
xchg
dec
push
or
ds
and
xlat
xchg
mov
icebp
in
add
mov
test
jne
daa
jae
adc
push
mov
and
push
pop
outsb
call
push
test
xor
pusha
sub
cli
mov
inc
cmp
fsubrs
loopne
adc
aam
jns
test
add
push
lret
mov
adc
cmp
cld
xchg
test
dec
mov
movzbl
enter
nop
in
mov
add
add
lret
out
repnz
ror
ror
ret
xor
cmp
xchg
push
cmova
pop
inc
mov
sub
xor
out
push
stos
push
popf
loopne
mov
mov
mov
lcall
sub
pop
hlt
jbe
cmpsb
jns
add
loopne
pop
xchg
mov
pop
aas
fucomi
sub
dec
das
dec
push
pop
int3
adc
add
mov
in
cmovs
rcr
pop
jb
in
shlb
test
sub
insb
push
inc
icebp
fsubrp
test
stc
fdiv
add
xchg
xchg
inc
xchg
xor
aaa
mov
mov
sub
in
push
mov
lret
adc
sbb
jmp
es
and
popf
aam
xchg
shrb
ja
jg
mov
mov
daa
scas
jns
jne
pop
sbb
push
fldenv
and
bound
aam
aad
push
loop
mov
imul
dec
inc
lret
add
dec
xchg
xchg
dec
fnstenv
mov
jne
pushf
push
notl
mov
call
sbb
mov
fwait
xchg
fucomp
cltd
xchg
xlat
call
test
pop
sbb
mov
mov
in
add
xchg
dec
repz
push
and
mov
jne
jne
push
xor
cmp
cmp
xchg
lret
cltd
loop
jb
ds
je
testl
xor
jmp
jb,pt
aam
inc
jl
popf
pop
pop
test
fstpt
cld
cmc
cmp
out
adc
ja
rclb
xor
adc
mov
mov
lds
pop
lods
fnstsw
cmc
xchg
ficoml
mov
adc
test
test
jbe
add
std
fisttpl
push
xchg
pop
inc
mov
rcll
fstpt
add
out
jge
outsl
push
daa
pop
les
push
cs
inc
inc
cmp
fs
add
jge
or
jg
jp
mov
xlat
push
or
and
fisubl
ljmp
dec
arpl
lahf
mov
mov
jmp
lods
mov
insb
sbbl
addr16
adc
arpl
adc
sahf
in
lret
out
fmulp
std
add
loope
push
xor
add
push
jmp
in
and
pop
xchg
xchg
pop
jge
jl
add
inc
jecxz
xchg
imul
aaa
cmpsb
test
mov
frstor
jno
fucomp
fsubr
bound
rorl
hlt
cmp
popa
cmp
in
sti
push
push
inc
hlt
fbstp
mov
es
or
scas
mov
into
mov
inc
mov
add
mov
js
dec
insb
je
cli
mov
cltd
dec
mov
ja
inc
mov
mov
pop
dec
pop
and
sti
inc
cmp
stc
mov
push
cmc
xor
jae
ret
push
gs
or
jo
rcrl
xchg
and
sbb
ljmp
and
clc
sahf
divl
in
pop
jge
jge
cld
jne
xor
std
scas
ret
adc
cmc
mov
cmp
mov
mov
hlt
in
ja
sbb
mov
add
into
sbb
pushf
dec
inc
xor
mov
nop
outsl
cmpsb
fwait
loope
and
mov
mov
pusha
mov
add
push
rolb
mov
sbb
cmc
mov
loope
fiaddl
push
in
cmp
jg
mov
shll
std
ds
sbb
and
out
xor
sub
cwtl
das
pop
outsb
push
or
and
mov
mov
adc
ds
cmpb
mov
inc
mov
sub
ret
enter
dec
out
pop
inc
mul
pop
outsl
mov
shlb
lea
and
dec
rcrb
in
sub
sub
dec
jl
fs
aam
sbb
xchg
fsubl
lds
je
sbb
repnz
mov
cli
sbb
jmp
mov
dec
xorl
clc
xchg
inc
mov
fnstcw
cmpsl
std
incl
bound
in
lret
push
rcll
lock
mov
push
sbb
inc
pop
setns
lea
ret
and
adc
fmul
lret
imul
cs
loopne
ret
push
ljmp
mov
mov
aaa
stos
mov
mov
xor
in
and
out
or
movb
jne
cltd
cltd
icebp
pop
xor
in
inc
mov
iret
push
or
dec
andl
push
xchg
add
repnz
in
mov
and
dec
lret
sarl
test
mov
jne
xchg
mov
imulb
xor
int
adc
pop
cmpsb
pop
mov
adc
sbb
sub
fcmovnbe
mov
add
lods
js
xchg
mov
xchg
sub
mov
pop
lcall
hlt
adc
arpl
loopew,pt
stos
and
fwait
xchg
pop
jns
andb
adc
daa
or
sbb
popa
mov
xchg
mov
pop
mov
adc
stc
mov
je
jo
mov
and
or
push
loope
push
dec
push
xchg
cmc
push
enter
add
xor
jmp
and
and
xchg
nop
push
scas
les
jb
dec
ja
aam
sahf
stos
add
dec
or
stos
iret
scas
push
insl
jbe
dec
rcrl
lods
aad
mov
inc
xchg
into
xchg
aas
cmp
movsl
cmpsl
pop
pop
push
mov
inc
ror
xor
inc
cmp
cli
mov
imul
aam
and
lock
outsl
xchg
cmc
andl
xor
cmp
cmp
sub
nop
popa
mov
dec
jg
mov
xorl
sbb
repnz
idivb
jmp
std
cmp
cmp
mov
decb
cmpsl
adc
inc
dec
inc
cld
in
mov
leave
lea
jmp
xchg
cmpsl
nop
or
enter
fs
push
rcr
or
mov
jl
xlat
fsubrs
push
pop
out
jmp
outsl
jle
inc
repz
mov
inc
jecxz
pop
dec
ret
add
jmp
shlb
xchg
out
lret
ja
cmpb
fwait
dec
data16
mov
add
xchg
pop
ficoms
cwtl
xor
jae
adc
ja
inc
pusha
pop
push
es
in
push
and
push
mov
xor
sbb
arpl
add
gs
mov
bound
daa
inc
mov
or
aad
mov
push
and
dec
pop
and
dec
cmp
mov
dec
sbb
lret
push
out
adc
addb
sub
imul
ret
cld
ret
jb
mov
cmp
xchg
push
push
pop
jnp
jns
dec
xor
pop
and
or
bound
ret
xchg
das
aam
in
mov
sbb
out
dec
in
ss
insl
test
lahf
pop
mov
add
adcl
adc
mov
xchg
add
push
pop
repnz
jns
mov
sbb
cmp
adc
int3
sub
cmp
ds
cmp
xchg
iret
dec
xchg
bound
mov
je
ds
test
dec
mov
xchg
jmp
cli
or
lods
sub
idivl
sub
jo
and
cmp
scas
cmp
hlt
sub
dec
pop
mov
adc
mov
or
jecxz
sub
ss
pushf
sbb
jae
sub
sti
and
mov
xlat
cmp
cli
pop
je
test
jg
adc
enter
xchg
jg
xlat
push
shlb
jno
out
and
test
add
aad
aam
inc
xchg
mov
lods
inc
adc
fimuls
cmpsb
fwait
jnp
or
cwtl
cmp
push
lcall
repz
pusha
jp
loopne
in
enter
sub
out
out
and
lods
jne
pop
xor
fdivrl
or
xor
std
add
jmp
jmp
aad
mov
inc
ret
jbe
nop
sub
dec
sub
mov
pop
insb
cmp
push
xchg
xor
jle
popf
dec
cmp
mov
mov
insl
pushf
jo
push
call
and
add
sbb
gs
dec
or
fisttps
fdivs
imul
test
or
push
insb
pop
ljmp
scas
mov
sarl
push
ret
xor
insl
pop
mov
lods
mov
push
or
mov
jmp
cmp
test
testl
pop
cmpsl
xchg
sub
push
ss
dec
ret
dec
push
sbb
adc
inc
mov
mov
repz
mov
jp
push
nop
repnz
mov
fwait
adc
fdivrs
xchg
rorb
rcll
int
cmp
jae
add
repnz
mov
fildll
mov
push
roll
dec
aas
cmpsl
sbb
mov
xor
in
cmp
xchg
aaa
in
cmp
arpl
lock
icebp
adc
arpl
and
outsb
add
xor
push
daa
out
icebp
cmp
fldl
adc
mov
popa
jle
test
lcall
imul
xor
std
jg
outsb
jle
push
lods
jle
rcl
addr16
scas
pop
lods
push
repnz
mov
jl
pushf
sahf
xchg
fsubp
in
jnp,pt
in
mov
inc
insl
dec
jmp
sbb
dec
aaa
jns
dec
sub
pop
cmp
xchg
bnd
jle
add
mov
jae
mov
out
sub
sahf
adc
fsubrs
jmp
loop
lret
push
js
aam
fiaddl
dec
mov
stc
add
into
xor
jge
stc
fldl2t
aam
lret
pop
ljmp
lret
shlb
adc
cmpsb
out
or
addl
loop
jle
add
loopne
roll
aaa
enter
cmc
daa
inc
mov
inc
mov
cmc
mov
sub
shll
cmpsl
mov
out
pushf
mov
pop
mov
inc
lahf
leave
lods
nop
int
dec
jg
inc
andb
cmp
xor
shll
jp
push
in
movsl
cmp
aam
das
pop
iret
mov
mov
shlb
enter
mov
xor
ds
mov
clc
inc
inc
push
jge
dec
jns
imul
xor
fdivrl
ja
out
adc
mov
xor
loop
or
das
sub
fdivrs
sbb
loopne
in
iret
movsl
inc
mov
cmp
int3
imul
jns
jns
mov
push
sub
mov
cmp
imul
push
sbb
mov
sub
and
stos
and
adc
xchg
dec
pop
add
sbb
xor
ds
sbb
cld
cwtl
jge
sub
mov
push
fdiv
addr16
adc
sti
sarb
sub
cmp
dec
xlat
push
mov
jne
xchg
les
mov
ja
popa
lret
test
test
dec
xchg
push
jge
sbb
int3
push
aam
out
movsl
pop
mov
xor
out
dec
notb
test
cmp
int3
cld
sti
mov
or
test
sub
in
clc
xor
movsb
jg
lds
add
pop
push
in
adc
pop
test
jl
cmpsl
add
movsb
xlat
xchg
fstps
mov
cmpsb
or
cs
cmpsb
xor
outsl
mov
outsb
aad
dec
pushf
push
out
fwait
mov
je
jbe
add
roll
xchg
mov
pop
fcmovne
mov
popf
push
cmp
rolb
pop
xor
pusha
dec
pop
xchg
mov
add
push
cltd
cmp
ficomps
xchg
or
je
insl
or
jae
punpcklbw
imul
imul
fdivp
btl
dec
pop
inc
adc
sub
push
or
scas
pop
inc
xor
pop
jns
stc
xor
inc
mov
adc
outsb
jle
cmpsb
lret
and
outsb
pop
mov
pop
pusha
fidivl
lea
xor
xor
addl
push
fldcw
push
inc
out
jb
and
and
push
mov
shll
adc
fistl
adcb
pop
mov
std
mov
loop
mov
hlt
push
fistpll
pop
ret
into
cmp
sub
fwait
mov
jae
das
arpl
adcl
ret
jb
cmc
cltd
int3
mov
add
mov
pop
jge
loopne
or
fidivrl
ljmp
lods
test
push
imul
lcall
xchg
loope
jnp
dec
push
push
add
and
in
gs
into
das
pushf
pusha
xor
jg
pop
pusha
nop
cmp
adcl
push
xchg
pushf
aad
ss
clc
mov
sbb
addr16
push
test
ficompl
and
call
sub
sbb
ja
push
inc
xor
jmp
mov
cmp
add
fs
cltd
push
add
mov
in
and
pushf
das
or
sub
add
lods
pop
push
lahf
lret
and
ja
mov
xchg
and
sub
add
sub
insl
fidivl
add
mov
les
fcoml
xchg
loopne
rcll
iret
out
fadds
bound
or
and
test
out
mov
test
lods
pushf
sahf
jne
sbb
xchg
out
or
xchg
pop
mov
mov
jp
fwait
int3
sub
stos
lods
inc
pop
in
sahf
pop
dec
pop
movsl
dec
popa
push
gs
sbb
dec
jge
fwait
mov
mov
outsl
mov
ret
fiadds
insb
daa
mov
dec
loopne
mov
mov
mov
mov
mov
jg
out
mov
enter
push
mov
pop
lret
mov
test
inc
push
sbb
nop
cld
dec
pop
xchg
jae
xchg
pop
rcrl
pop
pop
bnd
inc
jne
out
cmp
dec
imul
ds
add
cmp
jmp
ds
addb
mov
dec
cmpsl
mov
push
fs
fwait
cmp
fldt
outsb
adc
xchg
xor
cmc
mov
fimull
mov
movsl
mov
repz
cmp
les
shrl
lret
in
repnz
cmpsl
dec
mov
jbe
add
outsl
jbe
lahf
mov
ret
jnp
adc
xor
in
mov
cmp
fstps
test
add
fistpll
cmp
test
lea
push
dec
outsb
push
jecxz
sarl
leave
inc
notb
js
sub
insb
sahf
lea
aad
xlat
lret
push
lret
or
negl
fcmovu
test
icebp
mov
sub
push
or
jb
cmp
hlt
and
sub
xchg
push
xchg
and
dec
and
mov
insb
scas
and
addr16
mov
cmp
push
mov
outsl
ret
mov
sarl
sbb
xchg
lods
mov
dec
sub
rol
jns
adc
cmp
mov
iret
subl
dec
mov
daa
out
cmpsb
ret
fucomp
cs
fisubs
add
loopne
or
icebp
fdivp
sahf
ret
adc
mov
sbb
insl
inc
or
pop
pop
mov
nop
ss
cli
jle
or
sbb
movsl
in
mov
sub
in
repnz
and
inc
add
mov
lock
pop
adc
adc
repnz
icebp
int3
cmp
shrb
sub
jge
jle
lods
jb
push
jo
dec
arpl
pop
jns
mov
mov
insb
xorl
jno
or
stos
nop
push
jge
and
fisubrs
or
shlb
or
scas
dec
lcall
sbb
js
and
call
cmp
push
jnp
outsb
mov
das
lcall
dec
xlat
cmpsl
push
sarb
sbb
repnz
loop
loop
sbbl
enter
push
mov
pop
and
out
movsl
ret
mov
sub
jge
sub
iret
ret
xor
mov
jne
inc
insb
xor
sub
outsl
inc
jnp
sbb
in
orl
bound
push
out
ficompl
insb
and
mov
or
jnp
lret
xchg
sbb
mov
cmpsl
mov
into
das
fxch
sti
in
cmp
adc
jmp
mov
loop
push
xchg
cmpsb
push
adcb
clc
pop
push
in
or
inc
fimuls
xchg
cmpsl
inc
xchg
jns
pop
rorb
es
std
clc
pop
imul
cli
xchg
inc
pushf
mov
pusha
jb
mov
inc
scas
es
repnz
mov
add
icebp
push
fst
cmp
and
jae
cwtl
mov
mov
push
and
imul
das
dec
push
pushf
pushf
sti
ret
push
pop
mov
sub
jge
mov
shr
flds
test
loope
xlat
xchg
mov
add
add
in
sub
data16
addr16
or
cs
pop
dec
mov
pop
jnp
sub
mov
inc
lods
add
dec
mov
lea
ret
xchg
xor
rol
lods
test
jns
and
je
ds
inc
scas
lret
idivl
jmp
add
cltd
fcoml
xlat
push
xor
cmp
data16
and
xchg
jns
jns
adc
xor
mov
pop
cmpsl
cmpl
cmpsb
test
push
aas
dec
dec
cmp
jecxz
jle
sub
lods
andl
inc
pop
stos
dec
incb
push
lods
add
xchg
mov
adc
push
sub
in
shll
dec
aam
ljmp
fisttpl
jge
push
sahf
pop
mov
sbb
out
fcompl
pop
ret
sti
stc
or
decb
or
mul
inc
movsb
sbb
mov
cwtl
incl
sub
rcrl
add
mov
dec
stos
cmp
rcr
adc
push
push
out
and
xchg
mov
adc
pop
in
sbb
arpl
test
les
nop
leave
loope
xor
mov
ret
mov
popa
call
bound
mov
adc
xor
in
cmp
movsl
sub
xor
xor
aam
insb
sub
bound
imulb
sub
dec
test
jge
pop
out
jge
mov
xchg
aaa
mov
and
jmp
rcll
jl
cmc
lcall
push
aad
adc
movsl
sub
push
ljmp
pop
mov
push
mov
gs
test
sbb
pop
mov
xchg
scas
dec
jmp
insb
test
andl
testb
mov
clc
vpsubd
push
ret
jb
push
sahf
xor
mov
shrb
das
cltd
aam
add
and
pop
dec
add
push
and
mov
dec
shl
into
aam
fwait
addr16
or
cmc
ljmp
add
sbb
dec
jp,pn
adc
or
mov
stos
sbb
lahf
mov
aad
dec
data16
jle
pop
aas
pop
dec
jg
inc
and
mov
xchg
icebp
std
in
bound
dec
cltd
cld
jne
js,pt
and
lea
jb
jnp
jmp
loop
loopne
jns
jle
dec
inc
push
pop
inc
lea
pop
xchg
cmpb
mov
mov
jmp
jnp
jle
addr16
jo
mov
pop
inc
fcoml
and
cmpsb
push
outsb
and
in
out
fwait
jnp
mov
lahf
cmp
mov
lock
and
adc
push
gs
out
rclb
pop
lahf
sub
dec
jecxz
dec
xor
aaa
adc
sub
insb
cwtl
out
and
cmp
stos
mov
and
add
push
cmpsb
xorl
add
pop
out
xchg
fnstsw
imul
xor
adc
sarl
rolb
fcoms
pop
xor
fnstenv
and
xchg
push
dec
and
sti
and
xor
pop
arpl
ds
in
iret
jb
daa
arpl
adc
or
dec
cmp
mov
lret
mov
out
sahf
daa
shr
add
cli
cmpsb
fiadds
iret
repnz
popa
movsb
jb
mov
aad
xor
lret
xor
ljmp
out
xor
lods
shlb
ret
loope
movsl
and
shlb
das
mov
iret
jo
pop
cmp
iret
outsb
ret
dec
add
mov
xlat
out
cmpsb
inc
xchg
jmp
inc
mov
xor
jle
flds
pop
dec
pop
adc
and
xor
jle
les
std
call
hlt
adc
lea
shll
sub
mov
cli
pop
dec
sub
xchg
repnz
xchg
xor
xor
fsubrl
mov
in
push
push
lods
adc
push
pop
test
pop
fsin
aaa
cmp
mov
fisttpll
and
sub
mov
push
test
mov
ja
push
mov
out
cmpsb
sbb
or
adc
and
lods
adc
lret
dec
adc
and
pop
cvtdq2ps
movsl
popa
inc
lea
mov
in
mov
mov
push
xchg
daa
pusha
sbb
insl
jg
push
rcll
and
cmp
adc
ds
adc
int
daa
jmp
insb
ret
stos
jle
inc
ret
adc
cltd
lret
ret
mov
cmp
mov
out
sub
cld
add
xor
or
sbb
sub
cmc
cmpsb
mov
jp
pop
loope
xchg
add
mov
jle
or
add
pop
cmp
dec
xchg
xchg
mov
mov
jecxz
pop
fs
sub
popa
fdivrs
ret
sub
movsl
cmpsb
loopne
dec
orb
arpl
testb
sbb
push
cmp
pop
lahf
adc
pop
sahf
rcrl
sahf
lock
bound
pop
leave
decb
shlb
sbb
and
jg
in
xchg
or
aaa
pop
mov
scas
out
or
dec
enter
arpl
xchg
mov
je
pextrw
in
mov
shlb
mov
xor
fidivl
imul
dec
inc
xor
or
daa
adc
inc
sbb
sar
jo
pop
jecxz
cmp
in
divps
push
aam
xchg
jle
sbbb
pop
or
push
jns
not
dec
inc
push
es
in
sub
adcl
sbb
push
pop
mov
int
lods
arpl
add
dec
cmp
inc
test
push
mov
add
test
pshufw
jmp
xor
loop
and
pop
insl
lahf
push
repnz
and
mov
mov
lret
in
test
bound
imulb
mov
inc
data16
mov
sbb
or
in
xor
and
lds
icebp
inc
mov
xlat
popl
les
test
cld
and
sbb
xchg
cmpsl
or
lock
jo
pop
enter
mov
subb
mov
pop
test
icebp
cmp
lcall
sbb
jp
cltd
mov
sub
js
inc
idivb
add
addl
adc
les
icebp
insb
push
arpl
xchg
gs
add
inc
mov
pop
stos
mov
das
clc
add
xchg
or
insl
test
mov
leave
xchg
lods
sahf
pop
mov
adc
pop
js
test
insl
in
pop
pop
sti
push
int
inc
arpl
pop
sbb
out
lods
cmp
mov
pop
and
dec
inc
sarl
mov
gs
pop
or
in
les
cmpsl
pop
cmp
popf
ds
pop
sbb
xchg
sahf
in
mov
and
mov
fwait
mov
pop
dec
inc
sbb
add
adc
loope
inc
push
xchg
aaa
cmp
mov
mov
adc
test
pop
push
pop
addr16
sub
push
push
fwait
sbb
into
cmp
rep
mov
mov
sbb
inc
mov
xchg
std
icebp
int
jmp
jecxz
nop
xchg
clc
mov
jae
aas
lcall
push
clc
jle
sub
xorl
in
xor
push
test
or
dec
push
cmp
push
push
sub
sub
jge
inc
mov
mov
fcomip
jmp
cmpsl
jo
mov
popa
stc
jg
pusha
add
popa
int3
xchg
push
or
xchg
mov
pop
mov
cltd
fstps
fbstp
cld
das
cmp
icebp
xchg
imul
mov
fisubrs
push
bswap
std
jns
and
ds
sub
scas
fwait
inc
adc
fistpl
loopne
push
mov
adc
inc
idivb
rcrl
outsl
adc
rcll
pop
push
xor
push
mov
aaa
ss
negb
outsb
ss
sub
pop
xchg
notb
sbb
scas
shlb
mov
je
cmpsl
outsl
lcall
sbb
int3
xor
mov
xor
pop
sbb
push
fisubl
fcoml
gs
push
mov
mov
inc
popf
call
in
push
inc
in
lods
xchg
test
jae
sbb
orl
sub
cmpsb
add
inc
test
mov
test
mov
adc
cmc
pop
leave
pusha
fists
mov
dec
xchg
ret
pop
mov
lea
call
push
inc
fcompl
cld
into
jns
outsl
or
shlb
jmp
mulb
sub
push
subl
ret
mov
sti
pop
pop
jle
aaa
notb
into
jg
inc
movsb
lods
dec
or
xchg
jl
sbb
inc
fs
fiaddl
lret
xchg
jp
ret
sub
inc
add
mov
mov
enter
or
adc
push
dec
aaa
mov
fimull
aad
dec
xchg
xchg
clc
and
inc
cmp
mov
inc
pop
out
fwait
xchg
mov
and
sbb
pop
pop
leave
push
xchg
rclb
dec
xor
out
mov
gs
xchg
mov
sub
jle
out
ss
movsb
sbb
pop
clc
jg
test
test
mov
enter
mov
pop
lea
mul
out
stos
inc
xor
jne
jbe
push
jb
out
sti
pop
jmp
dec
sub
cmp
push
icebp
pop
pushf
cltd
cld
roll
mov
jnp
sbb
jp
pop
sbb
cmpsl
inc
daa
stos
push
jl
fstps
add
jne
inc
repz
cmc
add
or
push
mov
mov
inc
cmp
jae
test
insb
leave
bound
dec
jno
lahf
or
js
cld
ja
dec
je
mov
adc
cmc
pusha
xchg
dec
mov
pop
mov
stc
jbe
cld
cmpsl
jnp
xlat
mov
clc
repnz
push
and
mov
mov
cmp
push
lock
mov
inc
inc
sbb
leave
test
mov
mov
push
js
ss
jne
jge
pop
mov
ror
inc
sub
scas
xor
mov
push
out
arpl
mov
imul
dec
out
nop
dec
mov
neg
xchg
movsl
arpl
imul
inc
cmc
jg
mov
jmp
ja
ss
inc
bound
mov
hlt
push
jl
pop
sbb
pushf
loopne
jbe
inc
lods
das
jle
push
nop
xchg
leave
das
push
and
popa
fists
mov
lcall
push
shll
sahf
push
lock
adc
push
mov
dec
loope
cmp
push
mov
xchg
xor
mov
mov
lock
dec
outsb
sub
dec
out
aaa
das
or
jmp
loope
in
stc
or
xchg
movsb
and
xchg
sub
test
mov
fimuls
fistps
lret
xchg
mov
jae
sub
mov
imul
and
aaa
cs
mov
jns
mov
pop
lods
filds
mov
mov
in
cmp
fistl
mov
imul
shlb
mov
pop
push
sub
mov
pusha
fsubr
sbb
sbb
imul
push
jo
ss
mov
cmpsl
sub
push
daa
sub
xor
movl
std
lock
std
jg
sub
sahf
hlt
addr16
inc
adc
xchg
xor
inc
fadd
std
ret
stc
mov
jns
loop
lcall
cmp
sbbl
mov
or
jg
fldenv
insl
add
or
mov
test
ret
jnp
sub
or
xchg
pop
pop
mov
mov
daa
push
push
ja
fidivrl
insb
adc
push
and
sub
xchg
fstpl
cltd
jmp
or
out
inc
dec
sub
inc
mov
rcll
enter
dec
mov
and
repnz
add
mov
pop
inc
ljmp
sub
pmuludq
jge
shlb
xor
aaa
jmp
in
test
stos
lret
inc
test
xchg
pop
sub
adc
test
repnz
xchg
cli
push
cmp
mov
adc
rorb
dec
leave
cld
iret
xor
lahf
mov
push
jmp
xchg
sbb
loop
mov
inc
mov
push
sbb
das
leave
dec
xchg
cmpb
inc
mov
inc
pusha
aaa
push
jmp
dec
js
mov
sbb
pop
mov
ss
jns
daa
dec
xchg
jp
push
xchg
jmp
adc
ja
pop
addr16
ljmp
repnz
or
out
rorl
inc
push
adc
addr16
mov
cmp
jl
push
loopne
or
jl
subb
test
iret
lahf
scas
insl
xlat
inc
lahf
mov
cmc
and
pop
jle
fidivrl
in
pop
xchg
jmp
fnstcw
push
cld
out
mov
sbb
jae
xor
das
and
sbbb
pop
and
je
push
loop
and
test
out
in
ficomps
fcmovu
dec
mov
adc
test
mov
mov
dec
adc
or
fs
dec
hlt
push
jb
lret
stos
hlt
rcr
inc
jl
jnp
push
pop
push
addr16
mov
add
cwtl
add
xchg
andl
cmp
fisubrs
ds
mov
add
inc
sbb
pop
and
int
leave
sub
sbb
shlb
les
cmp
cwtl
mov
push
in
mov
data16
fwait
push
test
rcr
cmp
adc
stos
lods
xchg
cmp
out
stos
mov
test
aam
cs
pop
sbb
and
in
das
mov
fstl
icebp
in
push
xchg
jo
cmp
leave
mov
pop
jb
lds
add
add
fisubl
jne
stos
mov
xor
dec
mov
mov
and
ret
shrb
and
adc
dec
jge
add
aaa
xchg
inc
push
sub
mov
decb
and
stos
sbb
sar
les
addr16
ljmp
sub
and
xchg
xor
inc
fcmovne
xchg
adc
iret
rol
sub
jp
mov
in
lahf
aaa
xor
pop
out
push
sub
sub
cmc
lods
xchg
jg
sub
test
push
xchg
inc
lret
roll
imul
clc
dec
mov
xor
xchg
mov
sub
out
mov
pop
inc
leave
in
push
mov
mov
es
out
mov
push
xchg
lcall
sub
inc
pop
es
movsl
dec
add
jmp
adc
sub
push
pop
faddl
xchg
inc
stc
fnstcw
call
fwait
das
mov
xchg
cmpsl
in
mov
shrl
dec
fldcw
dec
stos
xor
in
ret
and
repz
ret
jb
mov
xor
fwait
inc
mov
and
shrl
or
inc
push
mov
or
insl
mov
popa
cmp
push
lock
aas
sbb
cli
or
cli
push
dec
aaa
mov
sub
lea
fdivs
in
in
mov
mov
sbb
inc
jl
mov
push
cmp
lock
loopne
mov
ror
push
sti
push
dec
mov
cmc
or
ret
out
shr
jecxz
test
data16
sbb
pop
call
ljmp
cs
imul
std
jp
inc
jg
sahf
mov
mov
xor
pusha
in
and
mov
movsb
cltd
nop
addb
or
sub
shrl
imul
adc
push
adc
out
test
iret
mov
lea
mov
pop
aam
mov
or
adc
cmp
mov
push
addr16
bnd
adc
mov
or
push
pop
lock
or
push
mov
inc
mov
stc
fsubs
sahf
xchg
fisubrl
fsubrp
mov
jns
outsb
inc
add
push
mov
in
ljmp
stc
mov
mov
or
test
out
push
daa
scas
dec
bnd
inc
sub
mov
add
test
fnstenv
test
jge
andb
adc
push
jo
sub
mov
inc
out
dec
push
mov
nop
bound
shll
ss
and
das
sbb
cmc
shrb
popa
loope
ljmp
sbb
cmpsb
pop
mov
repz
loope
insl
out
in
xchg
and
imul
push
bound
cmp
fisubs
mov
or
push
out
xlat
pushl
ja
std
pop
data16
fsts
adcl
xchg
push
data16
cmc
call
dec
cmpsl
divl
inc
scas
mov
mov
xchg
or
imul
imul
push
push
movb
jp
xor
fistl
aas
shrb
mov
or
daa
stos
adc
adc
xor
test
push
add
inc
int3
pop
es
cmc
out
xchg
or
push
adc
mov
mov
push
je
stc
lcall
scas
mov
push
jmp
push
iret
xchg
mov
jl
aam
shrb
cltd
push
sub
push
inc
mov
mov
push
inc
bound
movsb
sbb
testl
xor
push
in
sub
js
adc
ror
lods
push
es
mov
shlb
lds
inc
outsl
cltd
cmp
fnstcw
ss
xchg
sahf
bound
adc
insb
das
push
dec
mov
out
jno
icebp
stc
sbb
dec
inc
jns
aad
cmc
xchg
adc
iret
andl
push
mov
mov
call
xor
xor
out
fcomi
add
sarl
shlb
jg
clc
popf
leave
mov
mov
cwtl
fucom
repz
out
popl
push
push
and
aam
lds
jb
adc
mov
pop
jge
shl
jecxz
sub
ret
arpl
xlat
outsb
cmp
pop
andb
mov
cmp
dec
mov
inc
aaa
nop
and
stc
jmp
pop
sbb
mov
fisttpll
xchg
xchg
pop
data16
push
sti
dec
cmpsb
gs
fiaddl
add
dec
jno
es
pop
lods
xchg
pop
mov
mov
xor
cli
mov
mov
mov
lret
test
and
or
pop
mov
insl
push
mov
outsl
sti
inc
jg
xchg
cmp
out
adc
clc
aaa
adc
sti
repz
cltd
cmc
dec
adc
popf
mov
fnstsw
pop
pop
or
sub
mov
mov
aad
sub
fsubp
es
sbb
rcrb
dec
ret
incl
aaa
and
mov
push
rolb
mov
push
cwtl
daa
xchg
fcompl
cmp
cmp
insl
push
jne
push
xor
push
cmp
dec
loope
das
pop
cmp
daa
test
push
dec
aad
mov
pop
shll
dec
rol
or
lcall
mov
xor
hlt
cmp
test
movl
push
jno
jmp
pop
ds
ss
push
mov
mov
push
gs
cmp
jno
push
fcomi
inc
popf
stos
leave
mov
out
xchg
push
adc
stos
mov
test
or
jecxz
pusha
and
dec
out
filds
cmp
pop
lret
lock
pop
loope
push
scas
rcrb
jae
sub
imul
fucomp
das
int
aaa
movsb
and
mov
not
movsb
sub
cmp
test
mov
aam
loope
xor
push
aam
int
push
jns
fdivrs
mov
dec
cmp
call
dec
jae
or
add
dec
jne
notb
rcr
nop
int
jecxz
loop
in
inc
stc
scas
jne
push
xchg
add
xchg
mov
pop
mov
in
push
imul
sbb
add
jmp
icebp
vcvtss2sd
out
and
jno
inc
andb
mov
das
lcall
and
push
in
push
push
mov
xchg
pminub
sub
mov
adcb
iret
pop
bswap
or
xchg
mov
and
inc
js
frstor
jp
dec
add
cmp
jo
mov
sbb
int
lds
test
sbb
into
popf
pusha
ficoms
ret
rcll
adc
or
bound
mov
sbb
imul
int
repz
mov
dec
pop
push
pop
aas
imul
movsl
loope
sbb
mov
lcall
js
stos
mov
xchg
jmp
xchg
jne
pop
xchg
ljmp
cld
ss
jp
lcall
xlat
sbb
inc
jge
mov
sarl
cmpsl
push
dec
push
in
add
jle
shlb
shr
adc
or
sbb
jge
test
in
cs
in
dec
mov
stos
mov
loope
ds
hlt
loope
sarb
int3
int3
cmp
clc
insl
lods
mov
cwtl
jae
daa
xor
xor
jg
xchg
aaa
pop
xchg
xchg
movb
or
in
mov
add
pop
out
fisttpll
fiadds
clc
mov
mov
mov
stc
jl
pop
testb
outsb
xor
jg
enter
mov
in
sub
sbb
lods
aam
mov
std
mov
adc
dec
cmp
fcmovne
cwtl
faddl
orb
js
sub
fwait
mov
ja
int
cltd
into
sub
out
mov
jp
movsb
jle
stc
sub
jecxz
shll
nop
add
mov
dec
add
icebp
out
pop
xchg
adc
adc
lods
imul
sub
jbe
push
pop
push
xchg
aam
inc
sub
repnz
cli
aas
testl
aas
push
jmp
loopne
jecxz
mov
stos
loopne
or
sbb
fiadds
and
dec
outsb
cmp
xchg
mov
shrb
ficomps
jmp
mov
and
fldt
jnp
add
push
insl
sarl
nop
pop
push
cmpl
es
nop
and
ljmp
mov
ljmp
ret
mov
xchg
popa
cmp
mov
pusha
lock
out
aaa
cmp
dec
shl
xchg
xchg
aad
xor
pop
sbb
lahf
mov
test
sub
insb
lcall
dec
and
pop
test
loop
dec
mov
jbe
xchg
push
dec
aas
ds
movsb
jo
adc
cmp
popa
shr
aaa
cmpsb
dec
inc
add
mov
daa
lea
aad
mov
cmp
xor
mov
and
icebp
mov
ret
jmp
pop
call
ljmp
mov
xor
xchg
pop
sbb
aas
and
std
nop
ret
mov
jp
sbb
push
fcoms
lcall
out
jbe
jo
mov
leave
mov
lock
inc
pop
push
mov
inc
sub
adc
jns
xchg
pop
push
sbb
push
jg
loop
dec
jne
xchg
lcall
leave
mov
sti
jnp
js
or
and
test
shrl
test
adc
add
sti
jns
enter
ss
cmp
sbb
dec
movsb
das
xchg
push
repnz
shl
scas
rolb
sub
add
mov
push
pop
or
xor
js
fisubl
push
pop
int
bswap
mov
push
pop
cmc
and
push
mov
pop
fwait
xchg
shr
fildll
or
or
leave
into
test
jge
and
or
loop
add
inc
mov
lock
std
and
mov
mov
popa
mov
hlt
sub
jp
sbb
sbb
stos
inc
mov
lods
or
adc
mov
jmp
push
or
inc
insl
mov
and
test
jge
dec
adcb
xor
sub
int3
or
ljmp
in
sub
cs
into
jb
push
ret
imul
enter
inc
daa
test
jae
gs
pop
aad
mov
inc
lahf
shl
xor
ret
test
mov
jne
iret
mov
push
cmc
pushf
and
fmul
mov
adc
aaa
loop
fiadds
dec
lahf
jl
scas
mov
push
divb
cwtl
inc
adc
jl
xor
out
out
pop
inc
jge
cld
cmpsb
mov
mov
push
out
aas
aaa
iret
mov
sub
inc
mov
fisubrs
pop
jecxz
pop
out
dec
xor
lods
jnp
mov
movsl
jae
jmp
sbb
xor
in
outsb
push
xor
dec
stc
lods
sarl
mov
ljmp
jo
imulb
sahf
adc
add
and
mov
lods
dec
or
in
mov
mov
pushf
inc
rorb
or
push
daa
cmp
fmull
inc
cmp
shrb
adc
sti
sbb
push
jnp
ja
push
nop
sbb
mov
fmull
mov
enter
test
out
sub
cmovg
add
outsl
mov
sub
mov
xchg
mov
jo
or
inc
cmp
aam
cld
mov
xor
movsl
arpl
insb
test
movsl
jo
mov
scas
cli
scas
adc
sub
lahf
pop
jp
testl
inc
and
out
xor
in
mov
or
lahf
or
jns
shll
dec
ret
hlt
stc
mov
sub
push
outsl
cmc
pop
inc
mov
xchg
pop
sbb
mov
fisubrs
xchg
shl
loopne
mov
mov
mov
cmp
dec
cld
jecxz
mov
cmp
out
xor
push
test
xor
loope
jmp
arpl
cmp
ret
cltd
std
cmp
xchg
or
pushf
xchg
mov
adc
insl
fdivrs
or
icebp
testb
mov
rcll
lcall
inc
xchg
pusha
dec
shr
inc
inc
add
pop
repz
lahf
icebp
sbb
cmp
mov
js
sahf
inc
mov
loop
pop
mov
dec
cld
jb
int3
adc
lods
test
inc
das
jmp
pop
mov
fnsave
cmp
inc
cmpsb
dec
repnz
in
mov
aad
pop
jo
scas
mov
xchg
pop
dec
inc
or
leave
push
hlt
mov
push
sub
inc
repz
cmp
jle
icebp
test
pop
shrb
sub
jns
pop
pop
cmp
mov
out
inc
lret
add
mov
mov
cmp
insl
mov
add
adc
ret
imul
mov
rcr
push
jle
inc
dec
cmp
in
xor
mov
outsb
ljmp
pop
inc
cmp
enter
and
push
push
mov
test
fimull
mov
add
mov
mov
jb
std
add
mov
sbb
mov
ljmp
mov
or
add
xchg
test
addr16
test
enter
jo
jo
and
push
xchg
push
pop
mov
test
int3
es
pop
xor
shlb
fs
mov
cmp
jae
mov
fwait
mov
sub
repz
or
pop
pop
lret
clc
fldenv
insl
cmp
in
in
inc
mov
jecxz
pop
jge
xlat
outsb
xchg
jl
cmpl
test
addr16
cmpsb
loope
push
int
fsubp
scas
std
enter
aaa
fidivl
push
xor
movsl
daa
xchg
clc
jb
xchg
cltd
jp
sbb
insb
or
mov
push
fs
adc
lret
popf
imul
out
xchg
pusha
mov
out
lock
mov
pusha
ss
lahf
lock
imul
insb
or
sub
ja
lods
mov
pop
shll
inc
aas
push
nop
popa
mov
inc
cld
jl
mov
aaa
inc
mov
pop
insb
xor
lods
xor
hlt
add
iret
cmp
cmp
inc
les
adc
mov
cmp
xchg
mov
mov
mov
fisubl
lds
pop
jb
lods
mov
cmp
jo
lcall
scas
ljmp
xor
push
inc
dec
aaa
insb
mov
jo
aaa
out
inc
ret
jnp
dec
cmp
enter
scas
fidivs
lret
xor
and
mov
adc
sahf
dec
out
mov
pop
or
stos
inc
clc
jmp
xor
or
jge
mov
sbb
adc
je
shrb
loopne
inc
outsl
mov
xor
adc
sub
test
leave
jecxz
mov
xor
mov
lret
or
mov
add
or
jecxz
xchg
mov
push
jae
sub
sti
and
cmp
imul
or
adc
ja
pop
aas
in
xchg
cmp
jp
mov
jmp
das
and
or
adc
xor
and
fidivl
repz
push
insl
leave
xchg
notl
outsl
or
mov
dec
or
addr16
fsts
mov
cmp
dec
cmpsb
lcall
jge
fildl
mov
lods
out
fs
dec
mov
out
lds
mov
add
pushf
loopne
sbb
push
jl
pop
mov
or
inc
xchg
pop
inc
add
mov
dec
pop
repz
jno
filds
push
dec
mov
adc
pop
loopne
loop
mov
mov
ret
test
pop
adcb
imul
jb
test
push
dec
nop
stos
xchg
andb
mov
mov
xlat
imulb
scas
and
roll
inc
or
clc
pusha
xchg
fadds
add
mov
jp
cltd
xor
or
loop
cmp
pop
mov
sub
rorl
xchg
jmp
rcll
sub
cmc
inc
or
adcl
cmpsb
inc
adcb
fsubs
mov
pusha
cmp
int
ja
fldl
mov
inc
or
or
lret
sbb
cmpsl
scas
cmp
pushf
xchg
lea
xchg
cmp
aaa
loop
aad
arpl
lods
push
jge
push
popl
js
lahf
mov
cmp
aad
push
cmp
push
call
lret
ret
sub
sub
lcall
jnp
adc
mov
xor
xlat
imul
mov
adc
xchg
fcoml
imul
xchg
inc
mov
pushf
js
add
vandnps
mov
and
push
mov
gs
pushf
mov
enter
gs
inc
addb
bound
hlt
pop
mov
orb
mov
test
jge
dec
mov
dec
push
adc
push
adc
in
sbb
and
lret
xchg
mov
xchg
loop
inc
setg
fsubl
ret
or
repnz
iret
out
outsb
rcrb
fsts
icebp
pop
xor
movsb
cmp
jb
xchg
andb
flds
push
mov
lock
dec
js
and
sbb
jns
imul
sub
data16
out
cwtl
lahf
push
lret
fmull
nop
mov
adc
fidivs
int
sub
xchg
xor
inc
jp
out
jmp
jecxz
cmpsl
mov
jno
je
ret
jo
leave
mov
or
jp
dec
add
or
adc
sub
adc
loope
enter
cmp
lods
imul
fmulp
inc
mov
sbb
dec
outsb
jno
fsubrp
inc
inc
les
mov
dec
pop
jl
rep
lea
dec
popf
pop
fildll
cltd
aam
inc
sub
sub
xlat
jnp
sub
xor
push
mov
lods
dec
loop
sbb
lock
shr
cmpsb
lahf
jl
mov
cmpsb
mov
xor
jmp
sahf
xchg
fists
mov
fdivl
add
sub
inc
xor
test
xor
andb
out
jns
subl
cmp
xchg
mov
cmpsb
enter
xorl
loopne
cld
data16
lcall
cmp
rcl
pop
xor
xor
push
ficoml
add
or
xchg
fldl
fistps
popa
push
pop
das
out
enter
jbe
arpl
lods
outsb
pusha
stc
imul
mov
and
loopne
in
lods
pop
or
xchg
addr16
subl
sub
test
fs
lock
in
mov
sahf
sbb
and
outsb
loop
insl
and
mov
adc
mov
sbb
sbb
fimull
push
jo
xor
mov
fsubl
cmc
ss
pushf
sbb
insb
arpl
jae
cli
ds
ja
xchg
pop
mov
fidivl
inc
xchg
outsb
push
sub
push
outsb
lods
mov
sbb
pop
and
jl
cli
inc
dec
jle
push
sbb
gs
adc
dec
or
pop
xchg
add
pop
push
ss
push
cld
ret
sbb
fisubs
insb
insb
mov
mov
bound
push
or
das
loope
fistpl
lcall
int3
mov
jp
jg
mov
leave
testl
lods
inc
ss
push
mov
cwtl
pop
lahf
mov
jae
int3
mov
mov
mov
js
hlt
loop
lods
hlt
pop
push
or
xchg
cmp
push
xor
mov
repz
mov
sbb
add
push
lcall
adc
xchg
xchg
std
leave
fsts
push
sbbl
fiadds
cmp
clc
or
mov
xchg
xlat
xchg
dec
inc
xchg
inc
lea
ret
mov
das
shl
xor
xor
and
repnz
adc
aas
push
or
outsb
out
cmp
aad
cmpsb
mov
push
test
mov
adc
mov
bound
sbb
sbb
or
in
cmp
mov
jne
mov
rcrl
push
xchg
in
cmp
sub
aam
mov
sub
stos
gs
push
subl
jge
add
jns
mov
cmpsb
push
sub
enter
in
sbb
pop
out
and
loop
fdivr
inc
pop
stc
add
out
insb
ja
cmpsb
notb
sub
call
into
loope
jns
test
bound
ret
repz
icebp
add
pop
sub
ret
dec
test
push
mov
test
sbb
push
xchg
lcall
leave
sbb
fstps
and
fistpll
mov
mov
in
jl
stos
mov
jmp
orl
jb
aad
add
lods
mov
jecxz
cld
add
popa
push
outsl
or
mov
lods
or
aad
ljmp
or
int3
rcrl
ds
lods
vmovntps
daa
dec
jmp
cwtl
test
jmp
and
dec
leave
xchg
imul
repnz
imul
add
adc
jl
hlt
enter
fstl
fistps
lods
pop
sbb
js
test
imul
pushf
pushf
pop
arpl
fwait
es
xor
xchg
imul
jo
in
sbb
sbb
inc
data16
scas
inc
pop
dec
lret
jecxz
mov
stc
xor
mov
outsb
stc
imul
sub
mov
movsl
mov
std
mov
pop
repnz
mov
leave
call
mov
addr16
in
adc
pop
cmpsl
inc
xor
add
mov
imul
xchg
sbb
aam
lods
or
jbe
fs
inc
insl
leave
fcomps
aad
aaa
pop
call
xor
jnp
pop
bound
mov
adc
jecxz
dec
xor
inc
imul
sub
outsb
xchg
adc
scas
push
lcall
stc
sahf
xorl
jbe
int3
mov
pop
dec
ss
jne
das
fldenv
sub
pop
loopne
push
inc
ss
scas
fstps
in
xchg
repnz
incb
rcrb
rcrl
and
bound
pop
xor
xchg
scas
inc
pop
or
movsb
imul
or
mov
pop
call
inc
sub
data16
int
mov
mov
stos
sub
sub
movsl
push
inc
sbbl
mov
push
popf
ds
insl
mov
hlt
jecxz
mov
inc
push
push
pop
out
test
insb
bnd
add
js
adc
jp
lds
or
jp
pop
xor
aaa
cmpsb
fdivrs
mov
xchg
lods
je
dec
adc
adc
subl
pop
bound
mov
xor
fidivrl
push
sub
pop
xor
mov
data16
das
cmp
popl
xchg
sub
inc
pusha
mov
mull
mov
sub
and
pop
test
inc
mov
mov
xlat
fsubrs
or
ret
mov
lods
outsb
out
mov
inc
dec
mov
push
enter
enter
outsl
mov
movb
and
xlat
jbe
mov
mov
out
add
imul
inc
mov
ret
dec
xchg
sbb
out
mov
push
mov
dec
mov
jne
int3
cs
push
mov
xor
push
dec
jno
mov
jecxz
push
lods
pop
adc
js
lret
in
ljmp
and
mov
jnp
and
test
sub
fwait
xchg
pop
cmp
aam
test
jae
cmpl
adc
addl
jg
adc
mov
push
jmp
and
jne
inc
jno
into
lret
mov
pop
inc
arpl
cmpsb
test
out
aam
call
mov
inc
sub
mov
jb
sbb
inc
cld
cs
aaa
mov
mov
sti
sub
test
jg
gs
inc
add
fdivr
mulb
adc
or
or
adc
adc
iret
xchg
inc
xchg
sub
aam
cmpsb
push
das
pop
aaa
test
icebp
jb
xchg
push
sub
rorl
push
mov
xchg
es
out
das
sbb
into
loop
in
mov
mov
out
push
push
mov
add
loopne
jl
inc
mov
mov
cmc
clc
jno
push
sar
insl
test
call
cmp
inc
fidivs
and
testb
mov
in
mov
int
sarl
sbbb
or
test
or
mov
jne
dec
insb
xchg
fisubs
out
sub
out
or
test
adc
push
xorb
call
xor
cmpsl
jle
ss
jns
sbb
jmp
mov
inc
roll
clc
cwtl
imul
lods
push
sbb
mov
orl
lea
imul
inc
in
out
test
mov
push
push
bndstx
outsb
or
test
mov
daa
jl
test
out
cwtl
dec
imul
or
add
xchg
test
dec
sub
dec
ds
and
push
sti
mov
decb
push
push
mov
into
inc
jbe
mov
sub
or
cmp
int
iret
lret
xor
lods
mov
dec
dec
pusha
sub
push
jb
bound
pop
xor
mov
mov
roll
push
xlat
add
shrb
lock
mov
add
jl
clc
movsbl
sbb
xorl
scas
paddsw
and
out
mov
mov
clc
inc
pop
in
ficomps
xor
insb
cmpl
in
xchg
lcall
out
xchg
adcb
je
loopne
push
mov
jle
outsb
ret
push
data16
mov
push
into
ss
lea
jo
mov
jle
mov
mov
filds
jmp
xchg
mul
movsb
push
rcrl
jp
fdivrs
jo
lods
popl
xchg
fistl
dec
push
mov
mov
or
xchg
or
cmc
lods
enter
add
pop
inc
idivl
xchg
jns
stc
jmp
outsl
ret
ss
cs
ja
shlb
sbb
mov
push
rclb
das
sub
sahf
push
pop
int
lret
or
push
sti
leave
sbbl
cmp
jb
stc
pop
xor
leave
inc
jl
loopne
dec
mov
leave
dec
mov
push
mov
mov
es
add
fmulp
lret
rolb
sarb
into
cwtl
shrl
push
jae
pushf
cli
xorb
sahf
or
fcmovu
xchg
adc
outsl
mov
mov
shrl
stos
cmp
jle
push
adc
cmp
jnp
mov
jge
inc
mov
xor
mov
cltd
mov
xlat
lahf
test
and
push
mov
jno
pop
loope
lcall
mov
imul
adc
les
mov
push
sub
sub
test
test
bound
sbb
pop
jge
popf
add
stos
jp
ss
ljmp
aas
pop
repnz
xchg
les
das
aaa
outsl
or
pop
adc
jp
clc
repz
or
roll
sbb
aad
push
aaa
or
or
or
xchg
mov
rcrb
xchg
and
outsb
mov
jo
insl
inc
mov
insl
subl
mov
xchg
outsl
lret
inc
insb
cmp
les
push
jo
mov
nop
xchg
pusha
int3
or
mov
jns
in
icebp
sti
inc
ljmp
adc
test
mov
sub
addr16
inc
bound
test
push
or
mov
jb
in
push
cmpsl
ljmp
mov
fcomps
mov
mov
sarb
xchg
fiadds
lods
or
imul
mov
or
ss
idivb
fwait
cmp
xor
das
lock
xchg
mov
stos
mov
inc
mov
mov
cmpsb
cmp
dec
int
mov
push
xor
stos
inc
pmulhw
je
and
js
mov
mov
push
loop
mov
hlt
or
sbb
adc
nop
pop
movsb
fdivrl
cmpsb
imul
shrb
sbb
mov
iret
sti
bound
pop
sahf
es
xchg
in
push
cmp
inc
add
out
ja
and
mov
mov
insl
movsb
xchg
dec
xchg
dec
fidivrl
cmp
ret
aam
push
nop
out
inc
cmp
iret
insl
xor
push
pusha
mov
ljmp
sbb
imulb
push
mov
fdivr
pop
cld
mov
mov
cld
fsubrp
push
cwtl
xor
dec
lock
lods
inc
ljmp
lahf
out
in
mov
add
aas
jp
mov
scas
sbb
mov
or
inc
jge
inc
or
movsb
scas
sti
sbb
jmp
mov
and
and
jmp
repnz
cld
sub
stos
pop
int3
sub
xchg
inc
xchg
or
lret
and
xorl
int
scas
pop
adc
decb
xchg
xor
ret
scas
outsl
xchg
clc
push
sti
mov
dec
outsb
add
mov
push
arpl
and
ret
sub
dec
inc
imul
aas
inc
lods
daa
bnd
jmp
pop
subl
xchg
repnz
and
shr
mov
ret
and
je
mov
lcall
mov
test
jbe
sbbb
jnp
ja
mov
loop
inc
fidivrl
ljmp
or
jno
daa
xlat
xchg
jle
cmp
pop
or
jb
sarl
mov
and
into
in
adc
mov
jae
aad
mov
andl
sbb
int
sub
jge
cld
and
inc
stos
jecxz
cmp
rcrb
pop
out
adc
fwait
mov
xchg
data16
xorl
adc
mov
dec
xor
in
std
cmpsl
cmc
cmp
inc
or
mov
push
nop
cmp
cli
mov
mov
mov
add
inc
shl
xchg
inc
jl
sbb
mov
sub
jno
cld
fdivrl
push
rcll
mov
pop
cwtl
adc
mov
lcall
mov
scas
subl
dec
sbb
push
xor
sub
jno
addr16
dec
inc
dec
je
xorb
sti
dec
fidivs
lods
enter
xchg
cmp
xor
and
jmp
and
dec
in
pop
xchg
mov
loopne
inc
adc
mov
loope
cmpsb
sbb
ret
lret
arpl
push
inc
pop
call
pop
dec
dec
push
xor
dec
in
cwtl
cmp
adcb
gs
push
mov
fdiv
in
or
adc
push
mov
ja
scas
dec
dec
repnz
cli
lcall
cltd
pop
dec
bound
adc
iret
shll
nop
rcrl
inc
dec
cs
push
or
in
repz
js
dec
and
adc
sbb
ret
mov
mov
xchg
ds
enter
pop
data16
int3
fimuls
and
cltd
adc
adc
fidivl
jecxz
ss
dec
mov
push
push
outsl
push
jns
cmp
out
bnd
ds
sbb
mov
or
sti
dec
daa
int3
adc
mov
daa
mov
mov
pop
or
jae
and
ror
bnd
test
cmp
test
leave
scas
lcall
es
push
popf
je
roll
and
add
lret
xor
gs
push
insl
and
sub
xor
xchg
jl,pt
mov
mov
insb
sbb
mov
sub
pop
push
iret
pop
push
mov
jns
add
hlt
ffreep
pop
leave
arpl
pop
aas
xchg
sub
in
cmp
mov
jb
jno
pushf
jg
mov
mov
hlt
adc
loopne
movsl
xor
jmp
pop
test
mov
cltd
lret
and
cmp
lds
push
into
xor
test
mov
lods
push
dec
pusha
xchg
ret
sub
push
ficompl
cmp
cmp
rcr
loopne
push
sahf
lcall
pop
jns
lret
xlat
or
jo
outsb
loopne
les
rcll
insb
out
popf
xchg
popa
cmp
xor
and
sub
arpl
sbb
push
mov
sub
pop
mov
cmc
in
sub
dec
ret
add
adc
pop
lcall
cli
mov
lods
sarl
push
inc
mov
sbb
out
and
and
jns
es
in
add
xchg
jo
and
lea
cmc
jo
cmp
js
stos
ret
push
cld
pop
loope
xchg
adc
mov
push
stos
cli
sub
push
jle
pop
push
mov
push
fdivs
dec
mov
call
pop
mov
push
outsl
loop
pushf
dec
mov
iret
adc
ret
xchg
pop
lea
cmp
push
xchg
adc
jae
or
movsb
or
sbbl
in
push
insl
stc
sub
test
xor
in
hlt
icebp
movsl
jmp
dec
mov
js
inc
loope
repz
adc
arpl
fildl
dec
dec
test
lret
push
pushl
jecxz
hlt
testl
cmp
arpl
dec
test
xor
aaa
aaa
xor
call
mov
or
cmp
xor
testl
jle
cmpsb
test
inc
xor
push
inc
jmp
mov
cwtl
cmp
xchg
mov
and
pop
test
scas
aas
push
adc
daa
xchg
sti
dec
lods
in
add
mov
fistl
mov
std
inc
mov
add
dec
push
ss
fs
ss
loopne
and
jns
sub
and
and
cmp
sub
test
mov
jne
lret
sbb
insb
scas
loopne
lds
jo
repnz
mov
in
add
aad
mov
push
mov
sbb
xor
arpl
stc
icebp
sbb
mov
mov
stos
adc
push
inc
cmpsl
cmp
and
and
dec
push
flds
movsb
test
orb
push
rclb
mov
movsb
jecxz
sarl
cmp
cli
scas
lcall
cwtl
xor
mov
scas
outsl
add
out
lds
mov
iret
sbb
arpl
sarl
int3
std
stos
inc
sbb
iret
push
xchg
sub
inc
mov
fisttps
test
inc
sbb
push
rorl
jp
jne
xchg
xor
sbb
aas
and
lods
ds
sarl
xchg
inc
jbe
repz
pop
mov
outsb
fisubrs
inc
cmc
sbb
pop
lahf
mov
fnsave
cmpsl
sub
out
push
ljmp
adc
push
sub
jecxz
and
jp
lock
mov
lods
dec
sub
xchg
pop
mov
stos
sahf
mov
adc
cmp
mov
das
out
sub
push
jp
or
clc
mov
out
and
pop
mov
sub
mov
fisubl
dec
mov
adc
mov
pop
leave
adc
mov
es
add
and
mov
inc
add
ljmp
adc
stc
enter
insb
or
pop
jns
sub
lcall
js
or
orl
in
jbe
dec
or
in
pop
add
fiaddl
int3
push
sub
mov
jmp
mov
and
hlt
adcb
xchg
lahf
cmpsl
lock
push
cmp
ret
lds
and
cmpsb
dec
xchg
ss
or
mov
aad
xlat
arpl
xchg
sbb
mov
movsb
lods
aaa
mov
pop
call
arpl
cld
jnp
xor
into
sbb
jne
sti
sahf
pop
or
into
push
mov
cmc
das
out
jmp
js
fwait
mov
sbb
and
inc
cmp
cltd
in
cmpsb
jecxz
and
imul
jle
leave
arpl
sub
dec
rcrb
jecxz
or
jb
jb
pushf
add
sbb
xor
sub
jbe
lret
movsl
int3
std
push
xchg
sbb
out
add
ja
insb
push
cmp
test
fists
loopne
outsl
ljmp
mov
mov
and
imul
mov
sahf
pop
sti
scas
push
mov
jle
or
lock
add
adc
sub
mov
mov
push
fcoml
test
mov
lods
jae
pop
jb
clc
sahf
inc
cmp
out
mov
rcl
aas
dec
aad
sbb
mov
stc
pop
mov
insl
sbb
or
push
shll
push
outsb
call
adcl
or
arpl
stos
pop
repnz
mov
inc
mov
enter
popa
cli
dec
mov
cmp
and
xor
xchg
rclb
push
dec
nop
push
push
xor
cli
leave
imul
push
add
lcall
xor
pop
mov
fstpt
orb
pop
add
jg
dec
sub
enter
scas
mov
pusha
mov
push
loope
jo
adc
and
sti
jmp
pusha
cmp
test
jo
pusha
fs
cmp
das
xlat
add
mov
or
push
int
shlb
jnp
xchg
iret
fst
cltd
lods
inc
and
mov
repz
add
out
scas
jge
std
mov
imulb
push
xor
cmp
test
jmp
xchg
and
les
sub
sarb
in
inc
pop
stc
xor
outsb
into
add
push
cmp
aaa
rcrl
sub
inc
mov
jnp
push
in
movsb
imul
rorl
jecxz
xchg
pop
inc
sub
lock
rclb
mov
jle
jb
pop
xor
in
or
mov
into
pusha
aaa
loop
out
dec
xchg
lea
int3
dec
mov
mov
jp
lods
add
inc
sahf
call
dec
popf
xor
lock
int
add
mov
sbb
mov
inc
stc
rcl
mov
push
into
xor
aaa
and
and
mov
je
out
mov
repz
dec
sbb
adc
flds
jnp
andl
xchg
shrb
inc
or
cmp
test
jno
xchg
scas
mov
pop
pop
xor
adc
mov
jecxz
xor
dec
or
xor
sub
in
orb
push
and
jmp
test
ds
test
ret
xor
mov
iret
push
sub
in
stos
les
test
xchg
test
sub
mov
fildll
cmp
fiadds
cmp
pop
js
push
inc
test
adc
dec
mov
fdivrs
fsubrs
leave
jg
inc
pop
mov
and
std
gs
fucomip
out
cltd
mov
test
pop
cltd
nop
sahf
adc
xor
mov
jecxz
adc
leave
aad
push
or
xor
imull
sahf
xchg
xchg
inc
adc
xchg
test
in
and
sahf
jmp
xchg
jmp
push
pop
mov
andb
icebp
pusha
lods
stc
mov
sbb
cmp
cmp
out
dec
fistl
jo
sub
js
sbb
jmp
sar
mov
lcall
mov
pop
jmp
sarb
sahf
pusha
dec
loop
push
cmp
mov
inc
mov
mov
mov
movsl
repz
sub
mov
add
xchg
adc
cmp
push
dec
dec
out
cli
mov
sbb
push
mov
push
aad
push
iret
ret
cmp
jge
push
cs
lret
adc
mov
mov
xchg
test
jb
mov
push
push
xchg
lock
dec
xor
das
ret
or
loopne
lea
sbb
ficomps
ret
mov
repnz
push
xorl
je
pushf
xlat
loopne
and
ret
xchg
insl
ja
rolb
test
pop
jecxz
outsl
cmp
mov
scas
sbb
adc
sub
ret
cwtl
mov
lret
divl
fstpt
lods
lea
orb
sub
xchg
push
call
iret
adc
sub
imul
shrb
mov
pop
cld
test
cmpsb
xchg
mov
es
push
push
repz
vmptrst
fwait
leave
jl
hlt
cmp
dec
xorb
adc
or
ficomps
add
push
movsb
sub
pop
test
mov
cltd
xor
mov
sub
add
add
ret
rolb
lds
imul
insl
add
faddl
loop
iret
aam
mov
test
jmp
es
mov
test
sti
and
pop
fldcw
sub
lcall
andb
enter
cwtl
mov
arpl
aad
and
sarb
xorl
mov
jns
bnd
and
cmp
lods
loope
jno
pop
push
lods
mov
xor
sub
pop
test
push
mov
test
or
call
mov
sbb
das
aas
xor
addr16
adc
or
popf
mov
sbb
sbb
les
js
mov
in
jl
imul
xchg
shlb
popf
out
cmpsb
iret
into
das
outsb
les
jle
mov
jmp
int3
scas
aad
jb
fld
jnp
js
test
jg
xor
mov
mov
adc
aam
jbe
test
mov
mov
xchg
pop
icebp
and
lods
xchg
mov
and
mov
hlt
test
xchg
mov
dec
jne
fsubs
adc
dec
fnstsw
addr16
xor
cmpsb
cmp
sub
int3
xor
sbb
icebp
dec
ljmp
jb
xor
mov
mov
scas
cwtl
ss
stos
adc
test
xchg
jae
adc
sub
add
fcompl
shlb
icebp
leave
sub
shll
push
sub
dec
inc
push
mov
adc
cli
ret
test
into
dec
outsb
loope
out
sbb
jb
lcall
scas
push
lock
and
sub
inc
dec
imul
stc
cmp
push
mov
push
int3
add
sub
push
jecxz
dec
mov
ja
addr16
mov
out
arpl
out
dec
cmovp
gs
fsubr
daa
loopne
fnsave
out
sarl
out
sbb
push
cmp
add
sar
arpl
ret
shrb
std
pop
out
cmp
pop
xchg
xor
pop
jle
jg
repnz
inc
ficoml
rcrb
add
pop
lock
test
xchg
cltd
stos
arpl
pop
push
sahf
push
xchg
cli
insl
rol
movsl
sbbb
or
jl
fbstp
daa
xor
or
enter
pop
add
add
mov
arpl
jne
testl
fcmovu
lret
into
mov
jl
push
mov
es
push
arpl
add
sbb
fiaddl
xor
leave
dec
fcoms
mov
mov
dec
xor
std
xor
jge
cmp
or
mov
pop
orb
push
data16
cmp
movb
leave
or
or
and
mov
test
out
loope
inc
lcall
je
ja
not
push
rolb
jg
cmc
test
stos
clc
addr16
inc
jmp
loope
sar
xchg
gs
xchg
lcall
xchg
mov
pop
mov
sbb
fwait
inc
push
je
xchg
and
jb
fisttpl
jb
sbb
or
or
repnz
mov
cld
fcmovne
and
jl
std
lret
sub
inc
inc
mov
inc
js
ret
lret
js
in
lods
in
aaa
jp
test
std
pop
adc
aad
inc
loope
shll
imul
and
mov
cmp
insl
inc
movsl
nop
xorb
fisubl
mov
push
pop
leave
clc
add
and
mov
pushf
pop
dec
xor
idivl
add
popf
dec
add
jp
ret
rolb
mov
daa
push
mov
bound
inc
or
lret
dec
testl
fucomp
xchg
movsb
mov
jb
ret
mov
insl
mov
leave
push
xor
movsb
xchg
imul
add
mov
jbe
add
mov
out
add
jmp
or
pop
in
mov
test
push
mov
fdivr
mov
xor
mov
jle
add
cmp
or
outsl
mov
sub
js
sbb
cwtl
or
mov
out
sbb
xchg
loop
loop
sahf
enter
adc
shlb
in
mov
ret
in
mov
mov
shl
dec
pop
pop
adc
jmp
mov
test
ds
ja
xchg
sbb
popf
lods
pop
add
fldenv
mov
out
popl
pop
icebp
cmpsb
addl
sahf
jb
dec
aas
add
ja
or
scas
mov
ds
mov
jbe
aaa
jb
pop
fisttpl
adc
ret
add
cmp
push
sbb
imul
or
ficomps
xchg
jge
mov
ret
outsb
int3
js
addr16
lock
icebp
push
mov
lea
stc
lcall
jecxz
stc
push
not
cmp
dec
test
adc
lret
scas
sbb
push
scas
test
sbb
in
test
pop
insb
adc
fldenv
xchg
popa
xchg
ds
call
xlat
mov
jne
cld
dec
mov
adcl
mov
lods
test
mov
jmp
sub
add
push
push
sahf
imul
fistps
sub
xchg
pushf
dec
and
sbb
outsl
xchg
or
adcl
test
xchg
fs
mov
fstl
bswap
mov
aas
dec
sbb
add
jmp
shll
popf
scas
sti
fisubrl
jnp
in
or
fdivr
jecxz
js
add
mov
insb
cltd
mov
inc
es
inc
sbbl
loopne
adc
dec
mov
inc
into
cltd
arpl
inc
and
mov
rcr
sub
lret
dec
cmc
lea
jbe
mov
adc
flds
or
pop
fstps
jge
sbb
xchg
mov
outsl
das
add
jg
dec
push
bound
xchg
push
outsb
mov
out
cwtl
xor
sub
repnz
pop
movsb
xchg
adc
mov
mov
ljmp
arpl
in
fst
lods
cs
mov
imul
lds
scas
or
iret
cmp
shr
add
in
js
sub
xor
lahf
pop
add
out
mov
pop
repnz
cmp
cmp
xchg
jno
test
shr
jl
push
inc
ljmp
sub
jb
lds
test
cmp
mov
cmp
mov
adc
repz
imul
xchg
mov
test
cmp
dec
dec
cmp
jge
scas
ja
fs
rorb
or
loope
xchg
sbb
xchg
jp
inc
pop
nop
rorl
mov
push
hlt
adc
dec
insl
jne
out
ret
xor
mov
push
jge
sub
mov
jns
lods
sub
outsb
cwtl
in
xchg
movsl
enter
push
imull
div
sbb
jns
dec
pusha
inc
and
mov
inc
in
insl
lea
lret
sbb
add
inc
jl
inc
jne
loopne
xchg
inc
fcom
jge
and
andl
negl
inc
adc
inc
sbb
jecxz
adc
dec
repnz
loopne
in
pop
dec
cmpsb
jo
mov
push
jb
dec
lds
pop
push
mov
xor
mov
cli
inc
sbb
inc
sarl
jge
or
cli
in
sbb
jecxz
push
and
leave
fs
lods
jge
dec
xchg
add
dec
mov
into
cmc
rcrb
and
inc
sbb
mov
cmpl
mov
daa
dec
mov
ja
push
jle
cmpsb
and
inc
mov
mov
and
inc
jb
call
in
int
dec
inc
dec
mov
mov
int3
shrb
test
cmpsb
popa
test
repz
lcall
sub
mov
lret
sahf
outsb
aad
mov
cli
mov
das
or
in
push
sub
lcall
and
daa
add
mov
out
in
sub
imul
jb
dec
xchg
movsl
test
cwtl
sub
daa
mov
adcb
bound
inc
adc
adc
repz
sbb
mov
mov
sahf
sbb
jmp
xchg
hlt
dec
stc
xchg
js
bound
xchg
push
jns
das
cld
push
pop
ljmp
jno
pushf
mov
dec
mov
add
test
cmp
stc
fwait
jns
dec
repnz
push
mov
out
jp
in
add
es
loop
pop
push
inc
pop
out
xchg
arpl
ljmp
jo
stc
je
stc
divl
push
jp
or
mov
and
push
mov
out
dec
and
aaa
or
pop
cli
xchg
inc
aaa
xchg
mov
daa
lret
cmc
xor
mov
mov
xor
add
mov
sbb
mov
mov
lea
push
mov
aas
push
fiaddl
rclb
pop
jge
icebp
xor
dec
inc
pop
fistpl
addb
rorl
pop
ffree
xchg
and
daa
sub
mov
xor
or
xchg
pop
fcmovbe
mov
cmp
neg
and
sahf
daa
nop
fldcw
inc
loop
xor
pop
repz
insb
sahf
cmp
lahf
outsb
fisubs
or
aaa
mov
cmpsl
xor
inc
les
out
clc
xchg
lret
cs
mov
cmp
aas
mov
sub
fcoml
ret
xchg
lock
lcallw
ret
clc
ljmp
xchg
add
mov
cmp
xor
inc
add
push
xor
xlat
or
ficompl
cmp
mov
dec
call
pop
mov
or
imul
and
and
pop
or
rcrb
fdivrs
cs
xchg
jecxz
or
and
fistpll
hlt
mov
int
xorl
dec
test
sub
sahf
in
pop
aaa
in
mov
sbb
cmpsl
inc
adc
repz
insb
repnz
roll
push
ja
repnz
pop
in
int
ds
aas
pop
gs
push
neg
leave
je
and
fsubrs
mov
dec
test
sbb
xor
rol
int
divb
push
cmp
jecxz
mov
dec
jg
xor
ja
rep
lret
pop
iret
jg
mov
es
in
test
pop
push
pop
inc
mov
dec
aam
aas
nop
inc
stos
sub
outsb
clc
mov
mov
xor
call
xor
addr16
cwtl
pop
push
test
mov
push
add
ret
outsl
shll
add
insb
fwait
sbb
fmull
ret
push
sbb
xor
in
mov
xlat
unpcklps
rorl
imul
cmc
sbb
jle
lea
xor
movsb
lock
bnd
outsb
sub
dec
push
adc
sub
xor
out
pop
sub
loopne
aas
adc
sbb
jecxz
inc
jecxz
pop
ljmp
mov
cmpl
and
repz
jnp
jge
das
addr16
pushf
xor
lcall
js
add
fists
or
push
popa
mov
xor
jmp
xchg
jmp
cltd
adc
mov
popa
test
or
adc
addl
push
mov
and
imul
or
into
xchg
int
xor
out
and
jge
sbb
xchg
and
stc
or
inc
xchg
fsubl
imul
cwtl
adc
mov
mov
nop
lods
sbb
push
lahf
push
mov
mov
push
add
dec
test
xor
cmp
and
cmp
aas
int3
aas
mov
inc
pushf
sub
push
mov
in
cmpb
aam
stos
dec
lods
sub
adc
leave
jo
jp
sbb
jg
and
mov
gs
sub
mov
xchg
imul
repz
pop
ds
mov
mov
cwtl
xor
or
ret
add
cmp
sub
jmp
idiv
xchg
jno
adc
mov
out
arpl
into
imul
xchg
pop
and
hlt
adc
sub
jmp
xlat
loope
sub
call
mov
das
pushf
addr16
in
push
fisubrl
testl
ss
mov
mov
and
jae
jb
popa
movsb
fsubrl
inc
dec
inc
mov
fnstcw
inc
loopne
cmp
adc
xor
jne
arpl
retw
ljmp
int
jno
out
jo
xchg
push
lods
and
das
movsb
dec
mov
outsb
jns
dec
repnz
aad
add
ficomps
pop
push
shll
mov
pop
lea
fs
mov
push
pop
leave
adc
or
in
lods
lods
repnz
cmpsb
rorl
jmp
xchg
add
aad
fcoml
cltd
pop
adc
lds
sub
test
notb
in
and
clc
stos
lret
iret
add
push
lcall
out
push
repnz
mov
sub
mov
mov
lret
pop
jbe
cmp
int3
mov
jno
xor
popf
psadbw
jl
mov
cmp
adc
mov
jae
mov
jl
xor
push
xor
sub
nop
cwtl
in
popa
insb
scas
ret
pop
sbb
inc
rcll
adc
inc
cmpsl
test
ja
pop
xlat
loop
bound
shlb
fdivp
fwait
sarb
and
cmp
jge
insb
mov
xchg
or
and
out
ds
push
mov
push
iret
jmp
sub
pop
inc
adc
and
out
aad
mov
xor
dec
push
lods
lock
cmp
sub
xchg
outsb
or
fadds
test
or
stos
push
add
add
outsl
push
pop
sub
adc
dec
xor
lret
jns
mov
jo
jb
movl
jmp
idiv
pop
dec
cmp
jg
and
imul
jmp
shrb
mov
mov
rorb
mov
mov
stos
iret
and
sub
jae
push
movsb
inc
fsubl
mov
xchg
cld
mov
mov
idivb
ficoms
stos
xchg
lret
jmp
add
jo
fwait
add
xchg
arpl
add
out
aad
mov
and
or
cmp
and
lea
mov
loope
cmpsl
jo
cmp
sub
out
mov
jo
popa
rclb
sub
cld
xor
sbb
out
leave
gs
push
xor
mov
push
outsb
adc
push
cmp
xor
outsl
aaa
sbb
cs
adc
ret
jmp
fcoml
xchg
push
push
orl
mov
lret
iret
push
cwtl
andb
adc
sbb
mov
into
mov
aad
sub
sub
incb
push
in
dec
pop
mov
inc
sbb
push
jae
int
sub
add
dec
push
sub
push
je
push
das
pop
mov
adc
inc
cmpsl
inc
push
sub
mov
out
push
stos
jg
push
stos
cmp
js
pop
pushf
adc
cmp
ret
add
scas
inc
movsl
adc
in
ja
pop
arpl
jo
xor
leave
sbb
xor
jmp
jo
stos
mov
pop
add
inc
sbb
mov
add
testl
pop
add
cmp
test
rorb
cmp
imul
test
daa
lret
sub
sbb
cmp
add
fists
jl
jmp
adc
mov
mov
icebp
sub
sub
notb
mov
mov
stc
mov
fldt
jnp
imulb
hlt
and
xor
push
aad
cmp
lods
into
out
call
mov
int3
test
sub
fsubs
adc
inc
jo
mov
imul
std
mov
pop
in
test
sub
pusha
fs
int
cmpsb
mov
mov
mov
aad
movsl
shlb
or
jnp
and
fistpll
lret
push
adc
enter
lock
sti
inc
xchg
jge
push
sub
rclb
pop
mov
and
xchg
iret
orl
add
cmp
add
mov
sub
arpl
fwait
cs
push
mov
jns
mov
mov
or
and
movsl
mov
popf
aas
les
jbe
fldl
rorb
adc
push
ret
mov
call
add
mov
std
sub
mov
ficoml
cmc
lret
enter
cmp
add
pushf
cmpsb
mov
xchg
shll
in
sub
cmp
sub
jnp
movsb
cmc
cmc
lods
cmpsb
pop
jns
pop
add
movsb
push
stc
dec
xchg
inc
lret
sti
das
cmp
cmp
push
push
scas
pushf
push
sub
repz
jg
dec
adc
mov
fimull
jecxz
movsl
stos
add
cmp
xchg
fdivr
pop
xchg
adc
sub
rcrl
ds
xchg
inc
jl
arpl
jmp
out
test
jp
inc
inc
pop
pop
cs
push
inc
mov
mov
cmp
or
bound
aas
jle
dec
xor
lret
js
cmpl
xchg
movsb
and
sbb
lods
pop
mov
adc
or
add
aas
fcmovb
popa
cmc
fyl2xp1
push
gs
iret
dec
and
je
hlt
add
pop
in
in
fsubl
fwait
cmp
sbbb
das
adc
inc
jnp
popf
add
cld
daa
int3
aad
ds
fucom
test
aas
xchg
push
mov
push
stos
pusha
push
repz
insb
jl
es
aaa
scas
fchs
xchg
push
int
xorb
jae
std
lea
movsb
enter
xchg
xchg
adc
je
lods
add
out
rcrl
sbb
or
inc
ja
sub
pusha
add
inc
aas
xchg
ljmp
test
int3
rorl
lcall
stos
and
jns
and
int
dec
ds
test
ds
jle
cmc
pop
jmp
pop
push
xchg
xchg
sub
nop
nop
mov
bound
call
mov
test
cmc
ds
pusha
jne
inc
xchg
push
fcoms
data16
lock
fnstsw
sub
sub
sahf
inc
ret
lret
addr16
inc
xchg
pop
ljmp
jmp
lock
pushf
xchg
insb
mov
inc
cltd
adc
and
add
test
add
addr16
insl
pop
xor
jae
dec
inc
cli
mov
lret
add
pop
call
inc
xchg
mov
inc
cmp
pusha
mov
mov
mov
pop
xchg
push
test
inc
adc
imul
xchg
jo
jbe
dec
jbe
dec
stos
mov
sbb
out
and
cmp
push
loop
add
popa
pop
sbb
sbb
jg
lods
pushf
pop
cmpsl
sbb
shll
lea
or
cmp
cmp
pop
mov
mov
add
in
pop
in
cli
and
add
addl
pop
fcompl
in
loop
and
add
sub
lret
push
mov
mov
lret
sbb
pop
mov
vmwrite
call
dec
push
outsl
iret
stos
ds
dec
enter
jnp
cmp
sbb
imul
rcpps
jmp
pop
add
jbe
xchg
and
jb
adc
fsubs
popf
mov
iret
pmaxsw
movsb
or
call
xorb
pop
fnstcw
fcoml
lahf
xlat
sub
or
push
pop
aaa
pop
push
mov
pop
je
out
fbstp
add
orl
es
xor
xor
imul
dec
dec
fcoms
cmpsb
mov
adc
sub
out
or
daa
jp
mov
lea
or
add
les
mov
and
jno
pop
adc
push
loopne
popf
call
jecxz
stc
push
pop
arpl
xchg
mov
push
dec
jns
add
gs
dec
and
add
dec
aaa
mov
jl
movsb
mov
xor
jb
mov
and
or
sub
ret
cmp
adcb
push
and
stos
dec
add
dec
adc
add
mov
push
mov
jp
mov
daa
sahf
sbb
test
sbb
or
cmp
dec
int
add
xchg
inc
dec
rcl
loope
repz
inc
lahf
cwtl
mov
push
imul
loope
cmp
pop
lret
sub
nop
inc
push
pop
mov
lods
jnp
les
nop
mov
lret
les
loopne
nop
mov
sbb
jle
stc
les
and
ljmp
int
sub
pop
fld
pop
not
mov
sbb
lea
cmpsb
push
in
jb
mov
in
mov
into
lock
lret
jmp
cli
lret
jmp
add
daa
std
imul
pop
adc
insl
cwtl
rcrb
enter
lea
outsl
dec
stos
flds
arpl
jae
mov
subl
adc
inc
jge
xor
cmp
pop
popl
or
cmp
jno
aad
pop
imul
leave
mov
lds
push
sbb
sbb
test
inc
inc
cltd
cltd
dec
testl
jae
sub
movsw
repz
add
cmp
jmp
lods
lret
je
cmp
cmpsl
sbb
pop
notl
in
adc
dec
xchg
pop
mov
daa
xchg
addr16
test
imul
enter
jp
mov
scas
lahf
data16
push
pop
pusha
mov
lods
mov
pusha
addr16
insb
cwtl
mov
lret
pop
andb
push
and
pusha
and
je
add
sub
push
outsl
out
fidivrl
movsb
sub
je
xchg
mov
and
mov
adc
test
push
fidivl
xchg
or
cmp
aas
in
xchg
mov
cmp
jp
or
mov
mov
adc
enter
jne
stos
mov
es
push
jg
int3
push
jb
pop
cmp
and
push
mov
subb
lods
imul
sbb
imul
in
sub
into
mov
jns
xchg
sub
loope
inc
adc
cwtl
cwtl
mov
popf
jbe
mov
cmp
mov
adc
sub
daa
sarl
insb
aaa
fistl
mov
add
sbb
mov
xchg
mov
shlb
dec
pop
loope
dec
fiadds
lock
mov
mov
xchg
dec
scas
mov
loop
lret
je
loope
xchg
pop
adc
pop
sbb
add
out
add
icebp
jmp
bnd
pusha
xchg
pop
in
push
jmp
and
adc
push
out
inc
sub
xor
fstl
push
mov
adc
lds
or
fstpt
mov
sbb
enter
icebp
test
sti
mov
mov
xchg
cmp
xchg
xor
fwait
and
pop
decb
lcall
push
jecxz
xor
inc
mov
subl
fcmovne
adc
pop
jmp
sbb
addr16
push
in
sub
dec
xchg
lds
jl
aaa
jns
mov
sbb
ljmp
lret
je
lock
scas
jle
es
inc
movsb
push
fsubrs
cmp
jbe
pop
lds
push
xor
jl
or
cmpsb
adc
bt
push
push
sbb
adc
mov
das
jg
mov
or
mov
fcoml
xor
jg
xchg
stc
or
call
pop
xor
shlb
xchg
stos
lods
mov
mov
rorb
cmp
aad
fs
leave
fbstp
pusha
imul
sahf
inc
mov
pop
aad
insl
aas
fbstp
push
dec
arpl
sub
add
mov
xor
shl
add
xor
pop
imul
push
jne
dec
loopne
cltd
inc
divb
xchg
imul
call
jbe
sbb
sbb
sub
mov
in
rcrb
xor
inc
push
filds
jge
mov
outsl
lahf
dec
shrb
sbb
mov
push
dec
cmp
fnsave
adc
xor
inc
je
rcrb
lret
lods
sub
lret
into
loope
rolb
dec
push
xor
outsb
mov
fbld
push
mov
sbb
add
aam
inc
xchg
mov
and
or
fsubl
data16
std
test
adc
lds
into
popl
jo
je,pn
mov
mov
pop
or
xchg
sbb
fisttpll
jns
shrl
inc
push
sbb
mov
add
push
push
lods
cmp
rol
inc
dec
jb
das
xor
inc
adc
aad
add
std
ret
scas
mov
dec
jl
lcall
iret
mov
popf
inc
mov
lods
addl
sti
loope
mov
inc
cld
sbb
inc
mov
xor
call
jle
cvtdq2ps
pop
lahf
dec
push
loop
sbb
out
movsb
mov
scas
pop
jmp
call
inc
fnstenv
out
js
push
dec
sub
cmp
popa
jg
sti
xchg
jno
fs
xchg
mov
shrb
mov
sahf
cwtl
cmpsb
sub
test
jecxz
es
sub
pop
sub
lock
or
movsb
js
lods
xchg
push
xor
js
pushf
sahf
mov
jmp
xor
std
into
ror
jbe
mov
xchg
ret
push
int
lahf
idiv
mov
fimull
xorl
mov
mov
in
dec
repz
xor
std
in
pop
repz
jl
adcb
add
fcoms
cmpsl
jne
ret
mov
addb
jl
mov
push
push
or
cltd
xchg
cli
shl
jecxz
dec
pop
call
das
inc
icebp
dec
add
sbbl
cwtl
inc
mov
mov
pop
or
xchg
mov
jp
outsb
hlt
js
sub
pop
push
leave
js
aam
popa
movsb
mov
jo
scas
inc
mov
test
test
jbe
adc
xchg
mov
cltd
sub
cmp
das
inc
es
xorl
push
sbb
jg
xlat
lea
pushf
lock
cmp
and
pusha
not
jge
mov
adc
cmp
sbb
icebp
addr16
sbb
mov
mov
aaa
pop
cmpb
inc
xchg
or
sbbl
pop
lret
mov
ret
mov
jno
daa
in
mov
sbb
leave
in
cmp
dec
test
pop
add
out
fildl
fidivs
mov
movsl
js
push
aas
cmp
out
mov
es
xchg
inc
add
ds
js
decl
add
aaa
mov
jp
dec
xor
sub
xchg
mov
jnp
aas
fldcw
or
pop
xchg
imul
push
icebp
into
int3
fdiv
cmpsl
and
icebp
sub
stos
mov
lret
cmp
xlat
sbbl
inc
mov
negb
dec
lods
test
adc
dec
leave
popf
mov
pop
jne
sti
sbb
pop
lret
add
add
and
mov
mov
pop
inc
cltd
pop
add
dec
cwtl
mov
pop
add
mov
xor
xchg
aam
jno
mov
sub
enter
cmp
fiaddl
out
aaa
jbe
int3
mov
mov
lret
gs
gs
push
test
xchg
and
lds
lds
pop
and
fwait
sbb
push
lret
cltd
inc
dec
jbe
xchg
jb
add
push
lahf
adc
cmp
sub
nop
adc
jmp
stos
adc
sbb
and
mov
sub
adcb
pop
sub
je
xchg
fildll
jge
jnp
fs
xchg
lods
into
push
mov
iret
cmpsb
add
aaa
and
xor
es
xchg
jo
lods
and
push
addl
inc
fcompl
fildl
or
stos
jno
push
ds
sub
xor
and
test
inc
sub
mov
push
push
inc
push
and
inc
jmp
aad
inc
xchg
sahf
cs
filds
insb
pop
ret
imul
cmpsb
cmp
or
sbb
add
sub
lods
daa
push
lahf
inc
lea
fsub
xor
mov
ror
dec
cs
add
dec
mov
subb
enter
adc
sarb
das
arpl
aam
xlat
sub
dec
inc
push
lds
mov
pop
push
xor
sub
imul
aad
fiaddl
or
enter
test
xchg
dec
jo
std
and
push
inc
inc
stc
addb
fistpll
xlat
jb
xor
inc
js
in
pushf
stc
fdivrp
out
xchg
daa
js
sub
xor
push
cltd
xchg
fwait
insb
fstpt
aad
imul
pop
stc
xchg
or
jb
das
adc
sub
aam
jle
clc
in
or
cli
sub
sbb
jbe
lock
mov
mov
xchg
mov
lods
jecxz
iret
cltd
adc
mov
lock
cwtl
sub
out
popa
mov
jne
addr16
dec
sahf
add
mov
pop
mov
popl
jmp
xor
xlat
inc
std
loopne
sub
dec
adc
and
ss
repz
rclb
fsubrs
sub
in
nop
push
loopne
adc
jp
inc
rcrb
cmc
sbb
jmp
push
cmp
subb
idiv
dec
jp
pusha
mov
dec
jnp
cmp
fbld
or
stos
fcmovnbe
sub
aas
mov
ret
inc
add
cmp
imul
add
xchg
mov
shrl
int3
loopne
xchg
in
cmp
in
lock
jge
rcrl
fcomip
jo
divb
and
push
inc
push
test
aam
out
mov
cltd
adc
arpl
fcomi
mov
jp
enter
fwait
mov
ja
dec
aad
test
loopne
xchg
addr16
and
hlt
push
sub
rorl
mov
mov
mov
push
mov
push
pop
imul
fsubr
ffree
inc
lock
sti
mov
inc
pop
cmpl
sub
jns
mov
mov
lds
dec
xor
and
ljmp
pop
daa
add
faddl
mov
cmp
mov
pusha
or
out
test
pusha
insl
xchg
add
test
pop
mov
jno
xchg
cmpsb
mov
movsb
jp
dec
sahf
pop
jmp
cmp
jle
xor
mov
xor
sbb
mov
out
icebp
fsubrs
dec
push
or
rorb
and
iret
or
pop
popf
jnp
int
push
jle
gs
mov
xchg
or
adc
and
stos
push
lods
ror
xor
lret
test
std
aam
es
lods
push
loope
cmp
cmpsl
icebp
mov
dec
repz
lahf
sarb
lahf
xchg
adc
test
mov
pusha
or
pusha
les
leave
xchg
pop
idivl
leave
mov
jo
mov
sub
rcl
dec
and
or
sahf
daa
repz
cmp
incb
popl
call
fistpl
mov
jge
call
es
out
sub
dec
jbe
insb
jle
jnp
jnp
fnsave
cmp
cli
call
in
xor
cmpsb
lds
test
jne
fwait
rorl
movsb
ret
sub
push
adc
gs
dec
jb
sub
jbe
shl
rcll
dec
sub
gs
test
dec
push
jmp
jecxz,pt
sbb
int3
ret
pop
repnz
int
and
and
push
inc
and
je
add
fnstcw
lds
mov
push
cli
das
fisttpl
flds
dec
xor
fwait
mov
ret
lds
shlb
jg
in
mov
push
or
add
aas
pusha
arpl
and
repnz
push
sub
stc
jle
es
loopne
movsb
jnp
into
das
dec
dec
cld
mov
cmp
aad
mov
xchg
test
push
js
sti
adc
rolb
addl
sarl
out
or
or
xchg
mov
cmp
ret
jae
xchg
adc
push
mov
cmc
roll
cmc
push
ret
bndldx
add
ss
jmp
outsb
sub
push
fstpl
out
adc
cmp
cmc
js
cld
push
push
enter
ficomps
call
mov
jnp
xchg
les
dec
or
sahf
xchg
cmp
lret
loopne
sbb
cwtl
or
out
test
fwait
movsl
std
jg
jbe
jle
or
orb
ficoms
hlt
mov
outsl
pop
outsl
bound
pop
xor
repnz
jecxz
fucomp
outsb
sar
out
je
sbb
lret
fbld
fisubl
rclb
xor
sub
imul
popa
popa
sbb
inc
test
lcall
dec
out
jo
or
rcrb
xchg
scas
add
lret
cltd
jb
insb
xor
ret
adc
js
mov
and
and
in
cmpsl
jge
daa
imul
cs
das
dec
adc
lods
and
mov
divl
not
repz
ret
fwait
jne
lds
ss
mov
hlt
push
jns
push
xchg
pop
mov
cmp
idivb
cs
and
loop
das
movsb
pop
fcoms
add
jg
loope
mov
jne
pop
mov
push
adc
dec
pop
xor
mov
cs
arpl
adc
jo
mov
in
xor
and
pop
lahf
fwait
ss
out
pop
aaa
add
and
inc
xchg
fisttpl
mov
sbb
push
cmp
sub
scas
enter
xlat
sbb
es
jg
ss
adc
xor
lret
or
push
add
shll
jae
sub
dec
call
fs
dec
pop
fbld
pop
mov
shrl
and
sub
std
shlb
and
sbb
inc
cmp
jp
xchg
shrl
jns
shl
rcl
xor
iret
cmpsb
cltd
pop
ret
xor
push
bound
and
push
ds
stos
cmpl
jl
jmp
pop
repnz
mov
xor
jo
scas
fildl
aad
mul
in
mov
orl
mov
mov
sbb
bound
xchg
cmp
adc
dec
and
in
faddl
xlat
scas
adc
jnp
cmp
add
dec
loopne
jecxz
jmp
jl
mov
stos
or
sub
imul
sub
cs
ss
sub
cwtl
pop
push
push
rorl
adc
add
xchg
cmpsb
jns
inc
or
pop
cli
cmpsb
sub
cmpsb
pop
inc
scas
outsl
int3
adc
ss
div
sbb
fwait
in
and
call
fdivrl
sti
mov
mov
stc
rol
sbb
std
xchg
dec
aad
pusha
popa
arpl
xor
push
dec
out
inc
cmp
in
aaa
stc
loope
xchg
mov
xor
js
mov
push
or
insl
mov
lods
cmp
in
leave
push
add
inc
sbb
test
in
pushl
push
fmuls
insl
mov
mov
test
mov
sbb
mov
dec
push
stos
inc
daa
jo
mov
mov
loopne
out
push
cmc
push
popa
cmp
inc
sub
xchg
rorl
pop
sbbl
add
outsb
in
enter
jns
push
sub
add
or
loop
dec
pop
pop
xchg
xchg
clc
sbb
es
mov
jmp
cmpl
sarb
add
mov
xchg
int
mov
and
ss
add
dec
out
cwtl
adc
hlt
jae
add
inc
push
faddl
mov
mov
mov
aam
sub
xchg
cmc
in
ljmp
add
dec
cs
mov
or
jae
test
cmp
iret
lcall
add
jo
mov
test
jle
out
sahf
scas
icebp
cmp
leave
sub
je
mov
jo
into
fdivp
xchg
mov
test
arpl
pushf
cmpsl
pop
movsb
lods
into
mov
lahf
call
es
sti
shl
stos
sub
and
loope
imul
popa
dec
cmpsb
add
mov
mov
iret
mov
pusha
movsl
lcall
jb
xor
int
adc
ds
inc
mov
jecxz
mov
test
mov
jg
mov
daa
movsb
inc
sub
sub
xchg
or
lock
pop
ret
sbb
adc
mov
adc
js
add
mov
adc
scas
mov
scas
mov
nop
adc
xchg
xchg
sbb
push
xlat
add
outsl
jne
jecxz
xor
pop
lahf
sbb
icebp
test
out
and
or
in
sub
pop
mov
mov
pop
mov
dec
aad
mov
and
outsl
mov
mov
outsl
enter
push
xor
push
fsts
fildl
sub
test
dec
in
xchg
testb
mov
push
cmp
and
pop
nop
jbe
dec
xchg
repz
addr16
dec
call
imul
xor
inc
jo
jmp
mov
pop
mov
fmuls
pop
mov
push
imull
push
jno
stc
sbb
inc
push
stos
or
jl
aad
push
and
rcll
push
push
sbb
or
icebp
pop
lahf
jb
dec
adc
fwait
cli
sbb
ret
daa
jle
dec
imull
and
jae
inc
pusha
leave
lcall
mov
std
cmp
add
jl
fsubl
cmp
mov
inc
out
lods
sbb
add
adc
mov
lea
add
js
adc
mov
xor
jmp
cld
inc
cmp
cli
dec
xchg
rcll
push
stc
jl
cmp
or
aam
rcll
std
jecxz
push
nop
js
pusha
fwait
enter
popa
daa
and
cld
mov
insb
jp
sbb
mov
out
push
mov
loope
es
xor
add
add
ss
js
and
dec
pop
test
sub
in
xor
orl
in
xchg
cmc
aaa
add
lock
sub
aaa
addl
push
jo
jmp
jl
jne
lahf
mov
loop
xor
sar
sub
cmpsl
mov
and
cmp
dec
jns
pop
xchg
xchg
mov
ds
xchg
in
into
mov
adc
push
jo
mov
xchg
lret
add
movsb
cwtl
addr16
jns
adc
les
and
sbb
jle
aam
cmpsl
rcrl
jl
clc
jmp
pusha
daa
inc
fsubp
les
mov
shlb
imul
pop
inc
addl
inc
pushf
sbb
testb
inc
rorl
popf
mov
stos
std
push
pop
xchg
xor
jo
aaa
sbb
pop
fdiv
leave
add
shlb
mov
in
fcomp
movsb
add
and
es
dec
sbb
movb
adc
fcoms
push
sub
mov
push
lock
sbb
dec
inc
inc
data16
out
lret
adc
add
dec
push
add
dec
dec
dec
out
mov
negb
mov
pop
test
js
adc
idivl
jl
jle
mov
nop
sarb
xchg
mov
mov
and
sub
out
push
jecxz
sub
mov
dec
push
jns
xchg
inc
addr16
bound
sub
aas
cli
data16
stos
out
jl
or
pop
cld
xchg
jl
fistpll
cmp
mov
push
mov
lods
stc
pop
add
gs
push
shl
mov
je
lds
cs
cmpsl
xchg
lret
push
xchg
and
mov
inc
sbb
push
gs
ret
xchg
nop
lds
cltd
dec
xchg
clc
pop
and
stc
pop
cli
and
xchg
lahf
aad
xor
bound
fcoms
xlat
ds
inc
sbb
popa
xchg
out
int
pop
cmp
ljmp
in
je
in
cltd
jmp
mov
aam
add
es
push
pop
jecxz
mov
hlt
mov
pop
decb
rorl
inc
mov
pusha
aaa
or
pop
pop
push
jle
cmp
mov
xchg
cmp
xor
jge
pop
scas
xlat
push
iret
push
jne
pop
faddl
fstpl
stos
iret
lret
jne
jno
push
or
sarb
pop
or
lret
lds
jmp
jnp
xor
push
leave
mov
cwtl
fwait
dec
mov
jns
and
in
fdivrs
and
loope
movsl
divl
pop
adc
sar
inc
shrl
sub
insl
inc
stos
xor
cmp
push
dec
dec
lahf
push
inc
mov
insl
push
sub
pop
cmp
cmp
push
out
adc
jmp
push
jle
lret
adc
das
add
jns
sub
xlat
mov
add
mov
jl
push
cmpsb
loop
ret
jg
rorl
jge
pop
out
repnz
inc
fwait
ljmp
push
lahf
add
push
push
xchg
movsl
inc
mov
inc
push
or
cmp
popa
aas
jg
jmp
jl
or
iret
sahf
inc
outsb
ja
xor
mov
mov
and
ds
pop
xchg
js
or
push
push
adc
fnstenv
test
aam
pop
mov
mov
popa
jecxz
push
pusha
xchg
in
or
mov
fs
scas
pop
mov
cmp
jle
dec
ret
push
sub
mov
lea
daa
and
mov
lret
push
pushf
movsl
jb
sbb
lea
ret
or
movsb
pop
nop
mov
out
xor
pop
divb
adc
adc
fnstcw
mov
je
xorl
inc
sarl
xchg
ret
fiaddl
inc
xchg
aaa
xchg
mov
test
ja
add
xchg
leave
jl
popa
mov
jnp
icebp
and
jl
push
and
ja
xchg
sahf
dec
daa
inc
xchg
cmpsl
test
ljmp
adc
jl
out
cmpsl
nop
adc
cwtd
cmp
mov
adc
add
pusha
enter
lahf
cmp
pop
sahf
mov
mov
insl
fcomi
icebp
in
push
pop
push
mov
adc
out
sub
imul
push
xchg
or
pushf
aad
or
lock
sbb
loop
jecxz
sbb
or
andb
sbb
pause
lods
mov
aaa
pop
mov
xor
mov
les
sub
stos
outsl
pop
das
push
movsl
sbb
adc
sahf
sbb
rorb
xor
outsl
adc
cmp
stos
pop
fs
idivb
adc
xor
shlb
pop
push
lds
fwait
addl
pop
sbb
adc
mov
xchg
adc
push
cltd
xor
and
nop
fwait
inc
imul
inc
or
push
mov
jle
and
push
cmp
lods
adc
push
leave
mov
jne
dec
sar
cmp
clc
insl
adc
std
lds
push
or
jge
mov
add
add
or
lods
aad
es
movsb
cmpsl
popa
cmp
test
add
mov
push
outsb
and
jne
bound
imul
mov
loop
pushf
sub
in
ds
inc
push
adc
sub
inc
jp
sbb
xchg
fs
push
dec
ljmp
mov
mov
fstps
mov
push
push
vphsubdq
inc
das
aaa
es
push
sub
leave
jo
sub
add
mov
xchg
mov
sahf
in
jge
jp
xor
sub
clc
lahf
add
in
gs
mov
or
pop
roll
push
xchg
xor
daa
jg
addr16
push
sbb
add
in
ficomps
fidivs
ja
adc
xlat
sub
je
add
pusha
lahf
xchg
lret
xchg
mov
test
mov
mov
repz
aaa
cltd
jae
and
int
mov
clc
and
shl
cmc
jno
push
inc
sbb
loope
imull
jnp
push
mov
mov
dec
stos
pop
dec
cmp
push
mov
cmpsl
cmpsl
pop
jns
push
icebp
push
dec
sub
mov
arpl
in
sahf
push
sbb
fmuls
xor
cmp
fstpl
int
and
data16
xor
or
push
fstps
scas
mov
sub
and
cwtl
and
mov
mov
xorl
sbb
ljmp
push
sub
das
push
mulb
repnz
mov
loopw
fwait
clc
xor
or
idiv
jg
xor
popf
call
lock
in
pop
and
jo
and
cmp
in
hlt
and
les
aas
lea
dec
lods
ret
rcrl
mov
jns
popa
dec
pop
nop
das
mov
hlt
push
push
repnz
cltd
mov
jno
dec
xor
call
push
into
inc
leave
mov
jmp
int
in
cld
push
stc
push
sub
movsb
fstl
inc
add
push
xchg
mov
xchg
stos
jle
jmp
or
stc
cmpsl
lock
lods
adc
jbe
pop
aas
inc
and
das
pop
adc
cmp
jg
aas
pop
fsts
divl
mov
sbb
lret
fwait
std
mov
shlb
mov
push
mov
movsl
mov
orl
and
in
add
out
or
mulb
push
sti
push
jae
stos
cmp
or
std
outsb
push
jp
and
outsb
add
adc
movsl
dec
dec
popa
mov
inc
mov
add
iret
inc
mov
jle
jbe
sbb
movsl
popf
pusha
int3
mov
cmp
mov
and
imul
push
or
negb
mov
bound
inc
fsubl
cs
push
and
clc
pushf
jmp
dec
push
cmp
adcl
xchg
pusha
xchg
icebp
add
movsl
fdivrs
fsubr
call
push
out
jmp
sbb
outsb
inc
aas
mulb
jge
push
pop
test
fiaddl
scas
dec
pop
push
jne
arpl
js
in
xor
mov
pop
mov
ficompl
add
adc
dec
pop
adc
ss
xchg
cltd
in
ljmp
pusha
iret
insb
into
inc
inc
pop
mov
mov
push
data16
jmp
xchg
lea
popa
pop
jb
cwtl
add
sub
xchg
sbb
pop
ret
popa
nop
xlat
lods
es
dec
test
mov
or
lea
dec
scas
sbb
pop
cmp
inc
test
jb
rorl
pushf
insb
xchg
push
jbe
outsb
scas
test
cmp
ljmp
dec
xchg
xchg
lods
and
push
lret
out
rcr
jns
sbb
jb
mov
jg
aaa
or
jl
push
sbb
push
dec
sub
mov
sbb
inc
fsts
shlb
call
bound
dec
sti
push
out
movsl
test
outsb
cmc
pop
add
jb
inc
out
cmc
push
mov
dec
stos
ljmp
xor
mov
mov
jmp
mov
ljmp
add
fwait
daa
int3
jbe
cmc
gs
icebp
jae,pt
adc
mov
jns
lret
mov
roll
sbb
dec
xor
add
fcmovne
dec
sbb
or
and
or
inc
pop
push
xchg
mov
insb
scas
dec
les
fs
test
jecxz
cltd
js
mov
add
rol
fstps
adc
insl
inc
cmp
or
jne
mov
push
push
lods
mov
int
cmpsl
daa
xchg
rol
test
push
mov
ss
out
repz
aad
pop
jo
ret
sub
repz
mov
jge
and
pop
add
xlat
push
mov
daa
xchg
imul
ret
icebp
add
outsb
sarb
sbb
xchg
jnp
cmp
loope
mov
mov
rorb
sbb
aam
inc
sbb
loop
dec
adc
dec
lcall
incl
shlb
jno
arpl
and
pop
xor
sub
xchg
dec
cld
and
js
sbb
jmp
xchg
aad
aad
fwait
adcl
sbb
sub
push
adc
inc
and
pop
add
mov
in
das
ficoms
adc
pop
cmp
dec
push
mov
push
int
jae
add
xor
push
scas
cld
data16
cmp
popa
stos
test
xor
pop
movsb
xor
test
ds
scas
pushf
std
nop
dec
mov
popf
mov
popa
xorl
movsb
adc
and
mov
shl
or
add
cs
jg
dec
sbb
pop
pop
xchg
cmpsb
fs
popf
mov
pop
cmc
jp
add
cli
shrl
inc
push
popa
ljmp
mov
inc
inc
sub
sub
cmp
xlat
jae
mov
jae
inc
xor
int3
cwtl
or
bound
mov
xlat
sub
aas
dec
imul
mov
pushf
icebp
addb
push
loop
sub
dec
xchg
loopne
xchg
sub
nop
fidivl
dec
pop
xchg
in
push
xchg
jl
mov
aad
sbb
fxch
sbb
mov
inc
jmp
popf
jmp
adc
mov
add
sahf
sti
sbb
dec
stc
ja
int3
cmp
cmp
stos
inc
push
xor
test
or
jno
lret
push
fsub
pop
imulb
sub
xchg
mov
aam
mov
push
cmp
arpl
xor
cmp
mov
cmp
out
cmpsl
repnz
cltd
cmp
jge
xchg
sub
mov
jg
mov
jp
in
add
mov
mov
movsl
pop
fldcw
xor
mov
dec
xchg
loope
fidivrl
cmpsl
sbb
xorb
jecxz
sbbb
inc
lret
stos
mov
xchg
hlt
imul
iret
shrb
cmp
arpl
mov
push
dec
mov
xor
sub
call
shlb
lret
or
xchg
jp
rorb
jp
xor
ja
call
rcl
scas
dec
sbb
xchg
sbb
xchg
sub
jg
cltd
adc
andl
mov
loopne
hlt
daa
lahf
cmpsb
or
rcrb
push
rcrb
xchg
xchg
ss
imul
enter
test
lods
sbb
mov
std
fcoms
js
es
inc
fwait
inc
inc
sahf
xor
xor
sbb
iret
pushf
xchg
movsl
mov
lods
xlat
push
lret
pop
cmp
push
jnp
popf
aaa
mov
push
bswap
hlt
rcrl
inc
jae
addr16
jns
aam
sub
aas
add
inc
addr16
enter
or
add
insl
pop
or
adc
mov
push
aam
push
mov
pop
lret
in
fistl
popa
mov
stos
mov
in
or
or
fadds
aam
mov
xchg
sbb
or
aad
pop
cmpl
or
push
mov
insb
icebp
sbb
mov
or
popa
jg
mov
mov
dec
jbe
js
fisubl
xor
mov
pop
push
inc
pop
fcompl
icebp
inc
scas
and
and
push
mov
push
repz
lahf
lcall
sahf
xchg
rcr
cmp
out
add
stos
mov
pop
shll
mov
pop
out
mov
inc
shlb
loop
lds
lods
sub
popf
add
aaa
popf
out
mov
bound
daa
push
in
xchg
stos
pop
xor
testb
xor
dec
dec
xor
inc
xchg
pop
ss
cld
cmp
inc
fdivrs
enter
cmp
mov
aas
fists
aad
lcall
pop
jg
out
scas
movsl
dec
ljmp
pop
xorl
lock
paddusb
push
sti
cmp
push
shrb
addr16
cmp
adc
pop
or
xchg
ss
cmp
call
pop
add
ret
loop
jp
and
mov
or
mov
mov
out
lods
sbb
call
insb
loop
cmp
adc
pushf
inc
into
sbb
out
lret
cmp
sub
cmp
rcrb
sbb
aam
fndisi(8087
mov
inc
jmp
cmpsl
addb
adc
adc
or
mov
mov
pop
pop
movsb
mov
lret
out
inc
inc
je
add
fucomi
push
inc
stos
rcrb
mov
pcmpeqd
xchg
inc
and
mov
frstor
scas
mov
shrl
mov
sbb
fsubs
repnz
adc
int
sahf
fcomip
shll
test
addl
bound
inc
mov
cmc
jbe
pop
jb
jecxz
or
push
inc
sahf
jns
or
adc
push
arpl
xchg
jbe
jmp
insb
in
mov
adcb
sbb
mov
mov
js
dec
orl
fists
mov
dec
sahf
inc
das
pusha
mov
jmp
mov
insb
pop
std
adc
out
add
cli
mov
add
lods
clc
lcall
enter
mov
rclb
xchg
je
data16
sahf
cmp
push
fisubrl
pop
add
jae
inc
pusha
scas
or
icebp
addl
cmpsb
mov
mov
sti
dec
xor
add
lds
lahf
icebp
fsubs
int3
ret
into
push
xor
into
sub
jmp
sti
fiaddl
add
dec
test
enter
sbb
test
or
mov
in
in
sarl
repnz
mov
jge
mov
xor
push
push
stc
adc
mov
jge
add
xor
ja
fsub
xchg
dec
in
repz
dec
pop
std
xchg
test
add
jle
filds
outsb
cmp
mov
outsb
inc
mov
xchg
sarl
jmp
fnstsw
in
icebp
push
movsb
stos
out
xor
mov
mov
pop
decl
into
into
or
xchg
sbb
popf
mov
fstl
jb
fistps
jg
mov
ja
jmp
push
popl
mov
adc
add
cmpsl
cmpsb
mov
jae
popf
xchg
jno
mov
lods
push
imul
push
jnp
xchg
push
inc
push
sbb
mov
cmp
sub
mov
stos
sub
nop
xlat
mov
filds
sub
ljmp
xchg
mov
xchg
pushf
lret
push
jmp
fiadds
lret
sbb
inc
aas
arpl
xchg
or
mov
xlat
adc
jl
fdivl
push
aad
mov
inc
mov
push
dec
fidivl
lds
lahf
fcoms
dec
in
mov
jecxz
nop
mov
fcomps
insb
rol
imul
xor
xchg
sub
les
pop
insl
fildll
jl
data16
sub
fdivrs
and
in
sti
fsubrs
adc
sub
push
shll
jge
xchg
rcl
movsb
cld
mov
and
mov
out
fisttps
into
popf
loopne
xor
mov
cmp
push
pop
ljmp
aaa
xor
adc
loopnew
andb
outsl
lret
rcrb
andb
ja
inc
mov
mov
mov
sub
es
inc
pop
cmp
rcrl
mov
dec
cmp
dec
movsl
test
inc
pop
test
push
pop
arpl
mov
dec
add
xchg
aaa
in
testl
shll
out
loop
sub
fwait
nop
clc
popf
dec
imul
aad
mov
fcomps
out
outsb
or
dec
imul
loopne
mov
mov
cs
xor
or
sub
cmpsb
mov
mov
js
loop
pop
xchg
push
cwtl
notl
ljmp
sub
mov
jb
call
xchg
fimuls
dec
sbb
lock
add
xor
jnp
ds
pop
outsb
or
scas
jae
xchg
adc
add
cld
mov
and
pop
mov
xorb
fiaddl
or
cs
lret
out
sahf
in
add
push
int
nop
gs
or
sti
shr
in
push
jl
lcall
jb
cmp
push
push
das
iret
loopne
or
mov
pop
push
jo
lret
fwait
in
add
cmp
lods
daa
out
or
lahf
mov
or
jnp
lcall
repnz
pop
test
es
in
sbb
pop
xchg
out
mov
push
sahf
pop
cli
dec
mov
inc
jmp
adcl
testl
sahf
pop
cmpl
lds
in
aam
insb
in
add
pop
fldcw
add
mov
stos
inc
out
add
fldenvs
adc
mov
pop
mov
or
pop
lret
sub
lahf
cmp
test
cmpsb
and
sbb
xlat
add
mov
nop
add
aam
cmpsl
out
inc
adc
dec
stc
fcoml
dec
ja
aas
xor
or
add
xchg
out
std
pop
into
mov
jnp
pusha
sub
das
mov
inc
push
jmp
sbb
fnstcw
sub
scas
sub
mov
push
pop
loopne
icebp
lahf
xchg
pusha
fistps
aaa
push
add
std
or
sub
in
jo
push
pop
adc
push
or
daa
out
inc
ret
icebp
add
fs
fdivrs
ljmp
adc
out
push
sarb
jecxz
add
adc
fmuls
cmp
or
mov
stc
ret
sbb
fistpll
mov
mov
aas
sub
jo
cwtl
rolb
fldt
jbe
ja
cmp
xor
cmpsb
inc
dec
sub
jbe
mov
dec
mov
mov
les
dec
js
fcompl
mov
or
add
or
rcrl
mov
int
sahf
sahf
in
xor
pop
lock
call
xor
sub
sbb
xchg
fstpt
and
pop
enter
movsl
push
xchg
dec
addl
mov
add
je
cmp
outsl
clc
cmc
or
stos
arpl
jo
inc
sub
mov
mov
xchg
cmp
inc
into
cltd
cmpsl
inc
xchg
js
xor
in
rcll
loope
arpl
or
test
or
out
testl
or
jl
sub
sub
push
lods
pop
and
inc
das
pop
pop
xor
repnz
cltd
mov
mov
iret
adc
aaa
stos
mov
out
lcall
xchg
addr16
lds
push
aaa
stos
loop
in
or
xor
xchg
movsb
push
mov
add
pusha
mov
aas
cmc
xor
pop
jbe
imul
sahf
mov
mov
cli
cmpsl
jl
jns
sti
in
push
cmp
pop
repz
cmp
daa
xchg
cs
jb
rcr
mov
cmpsl
test
mov
cmpsb
stos
mov
jle
mov
ljmp
sub
rolb
mov
sbb
sub
pushf
lcall
push
or
cs
push
adc
push
xlat
xchg
xchg
lods
push
arpl
sbb
pop
int
mov
and
out
adc
sub
shrl
push
jbe
jno
sbb
popf
adc
ljmp
out
dec
enter
nop
lret
fistl
imul
ljmp
cmpsl
setnp
imul
das
sub
inc
sub
nop
shll
mov
stos
stos
mov
mov
das
mov
sbb
mov
idiv
push
sahf
cwtl
xor
insl
shrl
add
sub
add
data16
icebp
in
pop
add
fs
jo
mull
dec
add
cmp
hlt
imul
add
mov
pop
dec
mov
call
clc
cmp
lret
jnp
pop
ljmp
cld
gs
push
inc
iret
aad
pusha
or
and
mov
mov
cli
push
sahf
int3
rorb
cwtl
mov
add
or
push
in
cmp
mov
insb
sub
cmp
sahf
aas
push
and
dec
jb
orb
inc
fs
stos
mov
orb
nop
and
sub
dec
xor
fstp
pop
outsb
mov
xor
inc
cmp
fidivs
push
mov
and
aam
add
add
insl
xchg
or
add
pop
mov
in
dec
negl
dec
scas
xchg
jae
inc
ret
jns
fwait
dec
popa
xchg
lahf
push
pop
adc
in
xchg
jnp
adc
pop
es
cmp
das
movsw
adc
push
cmp
insb
mov
jns
jne
sub
jmp
daa
sahf
std
pop
cmp
fwait
sub
movsb
mov
rclb
jge
pop
lods
inc
sarb
imul
push
push
pop
jnp
scas
stos
cmp
push
sbb
sbb
xor
nop
add
xor
mov
push
inc
aas
mov
push
ret
or
shl
in
fisubrs
or
adc
sub
mov
int3
fisubl
jle
ljmp
fidivs
call
repz
jbe
stos
xor
gs
loope
lods
jmp
aaa
pop
or
add
fistps
fdivl
sub
les
push
dec
cltd
lahf
jmp
mov
dec
pop
call
lcall
stos
in
rclb
and
orb
mov
add
call
into
sub
pop
pop
jbe
dec
push
lahf
dec
mov
pop
or
repz
lahf
mov
add
test
mov
dec
push
loopne
ds
sub
leave
mov
pusha
lcall
pushf
imul
int3
inc
pop
sbb
xor
mov
orps
or
out
push
aad
in
or
insl
jmp
sti
mov
pop
inc
ret
notl
add
aad
negl
xor
fwait
jge
pop
push
hlt
aad
xchg
mov
add
mov
lahf
jns
mov
les
rorl
and
jg
or
xchg
jge
lea
jns
inc
aam
clc
rol
insb
fwait
les
xchg
push
mov
push
in
or
mov
jmp
movsl
inc
push
and
popa
ret
aaa
sbb
push
in
push
notb
movsl
xlat
pop
mov
out
clc
int3
mov
enter
jge
mov
mov
js
std
into
and
leave
sbb
sbb
cmp
pop
push
imul
add
fcoms
mov
scas
jmp
inc
into
xchg
add
fidivs
jecxz
jb
mov
fdivrs
xchg
pop
cmp
xchg
repz
cmp
and
xlat
shrb
lret
iret
int3
lcall
xchg
xchg
adc
ds
or
jae
repnz
push
inc
xor
out
mov
inc
clc
addr16
aam
addb
aad
xchg
rorb
fcoms
mov
xor
into
xchg
jb
fbstp
xchg
mov
pop
stc
stc
sahf
push
int3
jb
sub
push
cmpb
mov
add
cmp
and
sub
cld
fnstsw
fwait
adc
imulb
inc
lds
pop
sti
aaa
xor
out
add
jecxz
sbb
mov
lahf
xor
in
js
adc
mov
lods
mov
mov
call
mov
pop
cli
mov
sti
scas
roll
and
mov
ja
test
mov
xor
cld
or
sub
push
sub
add
sub
or
leave
aad
mov
cld
insl
sysenter
rcr
mov
mov
xor
rolb
test
test
fs
xchg
xchg
adc
xor
sbb
jge
xor
inc
adc
test
daa
test
call
mov
mov
enter
pop
push
xchg
fimull
xchg
in
sub
and
xor
adc
lea
std
or
cmpb
sub
fidivrl
fsts
push
inc
ljmp
inc
cwtl
push
jnp
fcomps
les
add
stos
icebp
xor
pop
xlat
or
adc
pop
xchg
in
add
pop
insb
push
loopne
loope
and
aam
std
mov
js
rolb
xor
and
cmp
loop
mov
int
xor
jnp
mov
into
and
ja
or
pop
adc
in
jb
pop
daa
sahf
rolb
in
add
nop
movsl
cld
stos
mov
popf
mov
sbb
push
or
lahf
jno
pop
cld
lods
mov
aam
add
jne
fldt
sub
imull
adc
and
ja
push
mov
fcmovne
sub
jmp
pop
aam
aad
or
sub
fimuls
bound
jmp
iret
and
and
cmp
ds
lahf
inc
subl
hlt
inc
jnp
mov
jg
sub
fsubr
addl
cmp
insl
lahf
adc
test
pop
sub
mulb
adc
lcall
adc
mov
imul
les
fdivp
xor
cmp
mov
sub
pop
mov
or
cmp
jg
iret
mov
pop
pop
jo
mov
mov
andl
negl
fs
xchg
pop
mov
js
or
mov
sti
sub
test
clc
sahf
sbb
sub
fldcw
lds
data16
aad
dec
loopne
jne
jecxz
scas
call
fstpl
xchg
lods
scas
shrb
repz
push
fldz
jecxz
inc
jge
imul
xchg
and
scas
xchg
mov
imul
sbb
adc
fs
inc
sub
pushf
sub
in
flds
outsl
rcrl
mov
shll
test
pop
outsb
repnz
pop
add
nop
sbb
pushf
cs
or
iret
shlb
inc
cmc
push
mov
call
push
mov
in
mov
xor
adc
jg
xchg
push
mov
lcall
xchg
and
cli
and
jle
pop
sub
or
pop
pop
mov
push
ret
mov
and
pop
cmp
mov
fistl
xlat
iret
sbb
jg
cwtl
mov
loopne
lahf
loope
int
mov
cmp
push
dec
or
adc
xchg
sbb
imul
lods
mov
add
ss
cltd
add
adc
or
je
add
dec
pop
out
add
jmp
addb
aam
in
repz
jbe
into
into
and
gs
aad
push
push
push
cli
lret
adc
lahf
mov
jl
cmp
xchg
jg
push
mov
jg
dec
mov
lods
mov
aad
mov
pop
data16
xlat
pushf
mov
fcomps
xchg
sbb
sbb
mov
lcall
call
jge
and
fbld
mov
stos
popf
lret
and
push
sub
push
mov
ficompl
xor
sbb
jnp
ret
pop
pcmpeqd
xor
xchg
cmp
rcrl
ss
cwtl
hlt
jns
jle
outsb
ds
mov
pop
jae
adc
push
insb
and
test
std
mov
and
sub
jo
add
sub
or
repz
nop
iret
and
jb
and
jb
cmc
mov
pop
cmp
xlat
lods
xchg
ret
cmp
mov
loopne
rcrb
aad
sahf
lea
and
in
mov
pusha
aaa
jecxz
shrb
cwtl
adc
xor
cwtl
mov
fbld
mov
aad
cmp
insb
pop
repnz
cmp
mov
sarb
mov
xor
fists
or
cs
push
je
dec
leave
shll
mov
fcmovne
xor
insb
pop
jnp
sub
cmc
add
xor
scas
cli
fadds
jo
xchg
and
jge
cltd
bound
or
das
dec
lods
bound
inc
in
shrb
int
inc
cmp
fnstsw
stos
adc
adc
stos
mov
iret
addr16
leave
lods
and
xchg
push
in
mov
cmp
cs
cltd
mov
in
cmp
and
outsb
inc
pop
dec
lods
in
xchg
into
add
mov
xchg
mov
mov
mov
xchg
dec
sti
fs
jmp
rdtsc
add
bound
test
xchg
inc
push
enter
int3
push
nop
loop
xchg
sbb
test
dec
ja
pop
mov
enter
push
arpl
jno
cltd
nop
and
insl
or
insl
push
sub
addr16
lea
mov
add
je
or
dec
cmp
xor
xchg
inc
mov
shll
or
sbb
pop
cmp
jmp
add
pop
cli
adc
xchg
mov
dec
in
ret
inc
scas
enter
mov
andl
clc
movsl
push
mov
mov
add
xchg
cwtl
xchg
mov
xor
scas
cli
fwait
mov
loope
ds
or
shlb
mov
push
jge
adc
dec
sbb
sbb
loop
pop
lea
sarl
cld
aam
xchg
call
xchg
sarl
push
mov
cmpsb
xor
push
adc
sbb
mov
out
incl
mov
mov
jo
mov
or
ret
xchg
test
movsb
adc
sbb
shll
inc
push
jl
scas
cli
mov
fisubs
xor
sub
or
add
gs
div
pop
mov
xchg
test
cmp
add
sahf
add
xor
jo
xchg
mov
les
push
dec
or
jns
push
ds
add
fisttpl
rolb
pop
lret
mov
cmpsl
jg
push
xchg
ror
pop
xor
jbe
out
roll
nop
out
fnstsw
add
jle
pop
mov
inc
fildl
adc
xor
jbe
sbb
out
or
push
scas
ret
dec
imul
dec
push
inc
pushf
std
xor
fmuls
xor
cld
xchg
inc
cli
fstp
pop
std
movsb
nop
pusha
negb
test
mov
jmp
push
repz
sbb
icebp
and
lock
xchg
add
dec
adc
mov
sub
add
sbb
mov
inc
js
shrl
int3
fisubrs
inc
push
inc
pop
pushf
adc
icebp
movsl
nop
rclb
lds
dec
pop
xchg
xor
add
push
dec
push
loope
push
jmp
insb
loope
pop
inc
adc
test
or
mov
movsb
in
loop
sbb
jns
inc
sbb
sbb
push
jae
mov
mov
add
inc
scas
jne
xor
push
mov
cmpsb
test
jecxz
pop
fsubrl
mov
xor
nop
retw
mov
sbb
out
push
jae
subb
aas
dec
pop
cmpsl
jge
mov
dec
test
in
jbe
rcll
push
add
pushf
fsts
pushl
movsb
lds
stos
xchg
add
aaa
sub
movsl
sbb
lods
or
in
int
inc
push
divl
fcmovne
popa
jecxz
lahf
mov
inc
jg
jle
rcrb
stc
shrb
push
xor
js
xlat
das
orl
cmp
mov
xchg
insb
xor
clc
xchg
mov
std
jl
jns
jns
loop
push
dec
in
fsubrs
mov
jo
inc
pop
int3
stc
push
adc
leave
or
sti
xchg
rorb
lea
jecxz
mov
aam
mov
aad
and
mov
push
std
cwtl
fbstp
and
aad
jno
cmpsl
mov
dec
sub
sbb
enter
dec
sbb
ljmp
inc
cld
add
data16
mov
lcall
fstpl
insl
jmp
mov
adc
sbb
mov
inc
imul
sahf
cmp
jmp
ret
mov
push
loop
das
xor
adc
cmpsb
daa
cmc
cli
sbb
fstp
dec
push
int
xchg
idivb
call
int3
lahf
faddl
xorb
or
add
push
cmp
clc
sbb
test
mov
repz
lahf
pop
adc
outsb
das
pop
mov
mov
jl
dec
sub
mov
adc
das
mov
pop
test
add
dec
in
push
push
pop
adc
movsb
pop
test
lahf
pop
dec
push
sbb
inc
pop
sub
mov
movsb
jns
mov
xor
ds
sti
fsub
and
dec
in
sub
sbb
pop
sbb
js
nop
out
xchg
andl
xor
fnstsw
pushf
loope
cmc
in
loopne
push
in
mov
das
mov
pop
mov
inc
jge
pop
push
ljmp
data16
pushf
xchg
add
fisubl
or
jmp
mov
sub
xlat
addr16
leave
scas
push
pushf
int
cli
pop
mov
jae
scas
pushf
popa
jae
push
mov
jle
push
insb
fwait
fisubs
leave
insl
xor
and
loope
pop
loope
rclb
stos
pop
mov
test
outsl
cmp
dec
pop
mov
test
pop
icebp
and
rcr
rorl
pusha
nop
out
push
enter
pushf
ret
push
or
in
pop
pop
frstor
cmp
mov
and
xchg
nop
mov
test
jbe
xorb
arpl
mov
call
xor
out
sbb
shl
pop
into
dec
cmp
pushf
fdivrl
lret
pop
xor
push
or
inc
mov
imul
data16
lds
testb
enter
loope
lcall
faddl
sub
inc
or
repz
or
lea
mov
xchg
stos
xchg
sub
push
sahf
and
xchg
in
pop
inc
lock
aam
jns
jns
xor
jae
dec
clc
call
mov
mov
sub
in
scas
fcoml
imul
sbb
or
test
rorb
loop
sbb
loopne
xchg
cmp
xchg
ljmp
sbb
pop
dec
test
movsl
sti
dec
push
imul
mov
data16
inc
movsb
outsb
fwait
jno
xor
jno
jp
xchg
lahf
fcmovne
outsl
jp
fdivl
pop
insb
or
shll
mulb
stos
sahf
mov
test
ret
and
fdivs
xor
pop
jg
aas
mov
pushf
jo
pop
xor
into
jp
out
shrl
mov
out
cmp
adc
ds
fsubs
cmpsb
push
hlt
cmp
or
sub
jl
outsl
aad
jb
xor
or
ds
inc
repz
inc
repz
out
sbb
lcall
sbb
adc
jbe
pop
insb
repnz
push
sbb
loop
mov
loopne
inc
inc
daa
push
lock
fadds
es
sub
sbb
out
lods
mov
sar
cmp
mov
test
push
fnsave
in
je
mov
push
cmpsl
loopne
sbb
mov
adc
mov
mov
adc
cmpsl
fisubl
fistps
rclb
push
mov
push
std
loope
adc
jns
add
lret
add
int
inc
enter
stos
jno
dec
mov
jp
int3
sub
je
mov
int
pop
repz
mov
dec
pop
es
and
sub
test
icebp
loop
sub
out
imul
mov
repz
mov
mov
xchg
jne
adc
cmc
and
fldt
aaa
add
push
stos
in
and
inc
aad
addr16
or
rcrb
sub
pusha
fsubrl
push
sbb
pop
or
leave
push
cwtl
and
inc
pop
xchg
in
out
pop
ret
fsub
push
and
pop
pop
faddl
nop
insl
dec
cmpsb
push
icebp
sub
sub
shlb
fidivrs
xchg
pushf
cmp
push
xor
aas
dec
dec
test
lea
xlat
and
xchg
dec
push
mov
int
inc
inc
movsb
lds
aad
lahf
iret
test
xchg
mov
cmp
cmp
mov
dec
push
xchg
data16
in
imul
orl
popf
test
mov
in
jb
rcrl
xor
inc
inc
xor
std
jne
pop
push
aad
repnz
jle
test
add
repz
mov
dec
jno
test
add
pop
cmc
cmp
push
call
movsb
xor
and
and
testb
movsb
in
mov
jbe
fsubrp
cmpsb
or
lds
mov
xor
dec
out
dec
or
mov
dec
sub
daa
ss
aas
adc
pop
inc
inc
push
out
cmpb
ret
hlt
mov
mov
mov
jge
or
test
add
pop
fs
ds
inc
mov
shll
jg
mov
xchg
inc
jnp
cmp
push
add
sbb
fwait
outsb
stos
lret
sub
mov
add
xchg
gs
outsl
adc
dec
xor
mov
pop
push
or
pop
mov
cld
adc
jno
mov
inc
sub
mov
push
mull
push
stos
lods
call
xchg
or
lcall
std
clc
push
xchg
das
cmpl
or
pop
out
adc
fisubl
rcr
xor
cmp
cmp
and
arpl
mov
mov
cld
mov
push
call
sub
out
push
mov
inc
movsl
shrl
sbb
test
sub
push
out
mov
lock
jb
roll
push
lea
add
stos
sbb
out
lods
test
xor
pop
pop
stc
mov
ror
jno,pn
fsubrs
mov
lods
push
cmp
sub
cmc
das
pop
lcall
inc
push
cwtl
pop
xchg
adcb
add
jge
jge
add
sahf
lods
rolb
sbb
shlb
cmp
adc
cli
pusha
inc
xchg
mov
out
mov
adc
dec
lahf
das
leave
mov
sub
inc
mov
jbe
cld
leave
js
cli
and
push
aad
stos
xor
ficompl
mov
loopne
adcb
jp
inc
xchg
call
mov
or
sahf
fwait
repnz
mov
test
xor
inc
dec
jmp
xrelease
xchg
mov
std
pop
mov
pop
movl
dec
mov
cmpsb
lds
mov
cld
ror
push
jnp
imul
test
mov
xchg
std
jns
fwait
or
leave
add
pusha
mov
fwait
mov
jp
jb
inc
test
mov
sub
push
fbld
pop
push
inc
or
ja
popf
fwait
cmp
cmp
cmp
jmp
daa
das
sub
aam
popf
js
gs
sub
lcall
pop
scas
sub
popa
sbb
sub
mov
and
fxch
sti
push
rcrl
mov
pop
scas
push
bound
jecxz
ret
data16
mov
or
or
imul
imul
repz
sbb
jnp
mov
inc
lods
xlat
inc
jns
mov
in
outsb
mov
xchg
xorb
xchg
pop
xchg
fiadds
push
fisubl
sub
jle
sub
sbb
popl
jg
dec
jbe
stos
hlt
out
cmp
bound
leave
xor
xor
adc
jo
fnstenv
mov
cmp
xlat
movb
aaa
sub
gs
sub
cmp
aaa
rolb
push
je
add
push
leave
dec
popf
dec
sbb
fstpt
mov
push
jbe
mov
inc
mov
or
jb
inc
insl
nop
sbbb
sbb
loopne
lahf
or
pop
pop
mov
fistpl
cmpsl
jbe
cmp
lock
loop
cwtl
adc
shlb
xchg
cmc
test
je
jmp
test
cmp
stos
and
cltd
cmp
aas
xor
jmp
icebp
js
mov
cltd
inc
andb
sub
cmp
jle
mov
call
clc
enter
arpl
ss
jecxz
fsqrt
aam
inc
stos
je
mov
fldt
aaa
xchg
lods
jb
xchg
push
mov
xor
mov
call
push
mov
shlb
inc
cmpsb
insl
cmc
loopne
jge
add
xchg
scas
lret
lds
xor
dec
cmpsl
sub
xor
push
mov
ficompl
and
call
insb
cmp
xor
mov
sub
push
mov
lcall
mov
ret
mov
pop
pop
adc
mov
lahf
pop
or
test
push
ss
pusha
or
fwait
mov
nop
xchg
in
cs
orb
arpl
movlps
pushl
and
iret
cltd
mov
jnp
cmp
test
pop
pop
out
icebp
ret
jns
or
jl
mov
sub
arpl
jle
dec
stc
jnp
aam
fwait
jmp
xchg
shr
and
outsb
mov
inc
add
insl
clc
shr
jbe
xor
add
push
inc
cmpsl
cli
inc
insb
inc
xorl
mov
xchg
push
push
jmp
add
jo
inc
and
movsb
jne
fsubr
fcompl
add
pop
scas
sub
jmp
sbb
sbb
gs
adc
dec
popa
dec
sti
xor
mov
mov
add
inc
jp
fmull
enter
ficoml
out
or
inc
and
es
es
in
cmp
sbb
out
inc
or
pop
push
into
mov
cli
jle
cli
mov
sbb
sti
vminss
pop
dec
scas
jno
jmp
pop
filds
add
in
pop
gs
xchg
out
push
out
sbb
xchg
jns
mov
outsl
insb
mov
xor
and
inc
int
test
outsb
das
cmpsl
cmp
ret
loope
inc
jb
xchg
xchg
fstpt
fwait
andl
loop
movsb
xlat
imul
rorb
or
dec
bound
xchg
mov
shrb
ss
sub
divl
sub
fcmovnbe
mov
popf
int
fwait
or
ja
into
ja
mov
xchg
adc
jg
jo
fiaddl
or
stos
sbb
dec
pop
nop
leave
test
ja
add
fists
nop
outsb
lcall
iret
mov
repz
xlat
daa
repz
mov
xchg
xchg
incl
inc
sbb
bound
es
insl
mov
mov
xor
enter
cmpl
loopne
test
daa
sbb
nop
sbb
cmp
pop
int3
and
xchg
push
jp
or
lret
data16
mov
call
fld
rorb
inc
lcall
xor
dec
out
out
mov
into
xor
dec
mov
mov
push
outsb
cld
jecxz
xchg
ljmp
adc
sub
pop
push
and
in
sbb
int3
sub
xor
enter
or
dec
dec
and
mov
pushl
inc
mul
sbb
dec
pusha
xchg
mov
inc
dec
and
push
pop
sbb
xchg
inc
aad
adcl
push
mov
sbb
lcall
or
mov
inc
mov
bound
int
sarb
add
mov
xlat
out
mov
mov
gs
pop
int
add
inc
pop
into
xchg
and
mov
sub
jecxz
push
jnp
pop
shl
or
or
hlt
cltd
inc
sub
ss
popf
fldenv
fists
stos
xchg
stos
mov
lods
xchg
dec
cltd
clc
xchg
mov
pop
push
mov
inc
dec
aaa
xchg
cmc
xor
or
pop
and
ss
sbb
mov
lods
jge
xor
push
in
xchg
pushf
rol
scas
iret
repz
cmp
hlt
mov
mov
gs
pushf
int3
jno
dec
fucomi
or
dec
cmc
mull
pop
sub
pop
xchg
sbb
fcmovnb
and
lods
mov
and
out
imul
pop
push
in
inc
mov
imul
cmp
faddl
in
jo
pop
add
std
popl
mov
cld
dec
mov
sbb
xchg
push
xlat
pop
lret
adc
repz
jnp
mov
inc
loop
repnz
repnz
int
out
cmp
sub
mov
pop
sbb
mov
ljmp
fnstcw
lcall
arpl
sbb
add
and
cli
ss
push
lods
inc
sarb
dec
dec
sbb
jnp
lds
lods
xchg
and
sub
daa
mov
aad
xchg
in
add
add
popf
decl
sbb
mov
data16
addr16
mov
in
ljmp
fidivl
mov
test
mov
jmp
fsts
jno
add
lcall
or
xchg
dec
xor
sbb
scas
jb
ljmp
push
lret
adcl
shlb
mov
dec
loop
lods
lcall
iret
push
rolb
movsb
mov
push
xchg
pusha
dec
mov
inc
movsb
insl
xchg
mov
add
and
add
es
scas
mov
popf
in
in
rolb
fisubs
and
loop
inc
in
and
pushf
repnz
test
push
into
sub
cld
rorl
mov
iret
adc
ret
in
ffree
mov
mov
scas
jns
cltd
sbb
jb
rclb
fstl
sbb
push
inc
dec
xchg
lret
lahf
mov
int
adc
mov
sub
repnz
lock
xor
popa
mov
pusha
mov
rorl
js
sbb
fsubs
jle
sub
cs
jne
add
or
ljmp
mov
dec
faddl
cli
mov
push
dec
lcall
cmp
fsubp
push
push
sub
push
or
xchg
dec
push
call
push
and
mov
jmp
mov
data16
sub
jne
fistps
bound
packsswb
orl
push
loope
mov
hlt
rol
insb
or
push
mov
push
js
xor
xchg
or
add
out
sub
jge
sbb
in
sbb
xchg
fmul
mov
push
data16
mov
addl
scas
lock
rcrl
cs
and
pop
imul
ficompl
jp
aaa
imul
xchg
mov
push
insl
popf
inc
jo
insl
sbb
and
or
push
xchg
es
mov
cwtl
and
nop
and
aad
iret
inc
sahf
insb
adc
icebp
sbbl
jae
cmpl
test
rclb
jge
test
or
ljmp
sbb
adc
pusha
ljmp
xchg
xchg
and
fucomip
outsb
pop
mov
push
add
lock
jecxz
movsl
mov
je
imul
outsl
adc
data16
adcl
mov
and
sbb
into
sub
loop
xlat
cmp
xchg
mov
mull
aaa
aam
lea
out
mov
movsl
cmpsl
call
pop
dec
repz
mov
xchg
in
jmp
or
and
adcb
aas
es
adc
fdivr
out
ljmp
insb
mov
pop
xor
fwait
ret
xchg
pop
mov
push
mov
push
int3
and
cmp
cmp
mov
add
push
xchg
xchg
popa
js
pop
jecxz
lods
push
jmp
sbb
popf
cmc
add
outsb
push
cmp
lahf
xor
arpl
jp
sub
adc
shl
ret
sub
and
push
dec
jne
scas
gs
jno
mov
sbb
push
inc
dec
popa
mov
movsl
push
add
dec
or
data16
jmp
add
mov
into
xlat
int
rorb
lods
shrb
js
cmp
xchg
test
mov
adc
mov
das
push
div
push
jge
jbe
insb
in
pop
or
lods
xchg
aam
cmp
clc
nop
sub
dec
shl
test
push
mov
in
sbb
icebp
fcompl
lcall
mov
push
sbb
inc
pusha
divb
sbb
add
xchg
and
imul
jp
nop
lods
dec
mov
scas
das
test
or
gs
push
push
in
lock
adc
arpl
pushf
mov
lret
push
dec
aad
mov
mov
lcall
ja
xor
imull
jge
mov
push
loope
mov
add
sbb
enter
xchg
daa
movsb
mov
push
mov
xor
ds
dec
pushl
daa
add
aam
pop
jo
iret
jmp
jmp
fwait
ljmp
or
sbb
fdivp
inc
test
jae
adc
xchg
data16
int3
mov
push
mov
sarb
popf
mov
pop
mov
inc
clc
push
in
pop
mov
out
pop
dec
push
jno
cli
ja
aaa
bnd
dec
js
cmpsb
ljmp
or
cmpsb
ss
iret
fimuls
mov
aam
xlat
cld
je
or
adc
sbb
mov
mov
ds
outsl
push
imul
fistps
test
push
jecxz
cwtl
inc
xor
mov
imul
sbb
loop
cmpsl
clc
and
inc
push
mov
xor
inc
and
pop
mov
push
inc
cmpsb
mov
dec
jae
fisttpll
pop
push
adc
xchg
push
loopne
pushf
xor
mov
or
inc
psubusw
inc
inc
gs
cltd
and
es
in
addr16
repz
xor
jmp
aad
mov
fnstcw
stos
push
fdivl
inc
push
movsl
jp
pushf
jns
or
xchg
jge
lret
add
push
push
xor
in
je
loopne
jb
jbe
add
and
outsl
jo
loop
adc
jl
ja
fsts
movsb
dec
fstps
lods
fs
mov
aas
sbb
pop
ss
sti
mov
inc
into
inc
aaa
in
add
out
mov
pushf
sahf
fisttpll
xchg
lret
mov
jge
cwtl
std
jns
mov
push
imul
out
jne
imul
std
les
movsl
mov
mov
inc
mulb
inc
push
insl
jge
ss
test
and
jns,pt
dec
arpl
out
mov
add
mov
cld
and
dec
fisttpl
mov
out
mov
adc
or
mov
inc
sub
popf
shrb
cld
cpuid
mov
sub
mov
sub
shrl
jl
dec
outsl
rcrl
mov
push
jb
push
jne
pop
xor
push
mov
std
cmp
pop
negb
fidivrs
in
aam
popa
adc
loope
xor
daa
in
loop
in
jno
xor
imul
xor
dec
movsl
jbe
add
sarb
dec
pop
repnz
dec
xchg
in
clc
mov
out
pop
pusha
mov
add
inc
jae
push
push
fiaddl
and
rcll
lds
push
lahf
sub
jle
inc
movsl
and
xchg
inc
cwtl
stos
sub
cwtl
jno
adc
pop
adc
scas
in
jb
test
add
lods
jmp
push
sahf
mov
fdivrl
mov
or
pop
sub
shrl
cltd
outsl
sub
mov
test
je
or
inc
xor
lods
aad
outsb
dec
icebp
out
push
mov
lret
and
xlat
icebp
pushf
adc
sbb
push
fadds
xchg
cld
cmc
sahf
fldcw
push
lret
mov
lahf
xor
rolb
mov
push
stc
loopne
mov
ja
adc
mov
and
jl
jbe
push
rclb
scas
data16
sub
push
in
cmpsl
movsl
ds
out
add
andb
into
mov
jecxz
pop
and
inc
cld
add
push
aaa
gs
add
mov
out
jnp
mov
and
test
je
jnp
fisttps
lahf
inc
xchg
inc
clc
lock
loopne
cmp
mov
lds
nop
cmp
testb
dec
or
int
push
and
call
stos
repnz
jnp
int3
icebp
cli
sbb
fdivrs
fcomi
jl
xchg
fldl2e
mov
inc
aam
mov
xlat
jmp
enter
push
and
andb
xchg
add
pop
clc
cmc
nop
aad
data16
fists
je
sbb
add
stc
fs
outsl
out
mov
cmp
ficoml
sbb
fisttpl
into
std
test
inc
push
stos
sub
cmp
aas
mov
sahf
insb
pop
mov
cmp
aaa
jnp
icebp
jmp
xor
fistps
adc
sbbl
xchg
int
fcomps
dec
outsb
mov
nop
stc
xor
and
flds
dec
jl
mov
sub
cmc
xchg
lock
sahf
icebp
mov
sahf
ss
xlat
sbb
nop
fcoml
add
dec
ss
xchg
dec
incb
and
std
cmp
lret
sub
je
mov
scas
cmp
mov
sub
jo
jmp
sub
mov
dec
je
iret
xchg
mov
fimull
mov
mulb
jno
cmp
cmp
mov
cmp
ds
loop
pop
jns
sahf
add
mov
lahf
xchg
push
mov
out
test
pusha
dec
xchg
and
xchg
repz
push
movsl
xchg
call
jns
mov
push
adc
bound
ljmp
pushf
add
outsb
arpl
mov
sub
sub
lcall
repz
xor
xor
nop
frstor
movsl
jl
adc
adc
add
add
testl
inc
mov
repnz
push
iret
pop
in
movsl
ja
or
xor
pop
pop
push
mov
pop
xchg
shrl
test
enter
ja
test
fdivs
rcl
push
push
frstor
fcmovnu
loopne
mov
rcll
inc
dec
jecxz
and
bound
xchg
dec
int3
adc
test
cmc
dec
push
ss
sbbb
mov
mov
jl
fmull
lds
repz
mov
imul
xchg
mov
mov
xchg
dec
cmp
xchg
addr16
fstpt
mov
sarl
cmc
sbb
dec
push
mov
test
aad
mov
and
stos
mov
aaa
aad
or
adc
lods
add
dec
jecxz
inc
xchg
push
xorl
xchg
cmp
push
adc
shll
sub
in
lret
sub
add
and
xor
sub
jl
mov
enter
sbb
imul
push
aas
shrb
or
jmp
cli
or
aad
push
adcl
cmc
idivb
divl
cld
mov
push
imul
sar
sub
sbb
push
sbb
push
mov
movsl
or
stc
cmp
or
bound
pop
adc
in
mov
mov
sbb
sarb
rorl
hlt
or
cmp
sub
imul
cmpsl
mov
inc
insl
pop
sub
popf
test
pusha
adc
popl
pop
repz
lods
bnd
xlat
lret
movsl
pop
mov
or
mov
stos
stc
ljmp
mov
fdivs
sub
mov
outsl
or
outsb
jne
or
push
cmp
xchg
arpl
cmp
or
in
mov
jnp
int
mov
fnstenv
cli
test
dec
push
dec
addr16
loop
jo
aam
mov
jae
in
mov
imul
mov
inc
push
fstpl
pop
shll
bound
je
mov
cmp
dec
mov
pop
pushaw
test
push
fnstenv
lods
in
jmp
inc
or
cmp
sbb
mov
lahf
jns
ja
mov
xchg
mov
loope
stos
jle
pusha
or
lods
dec
aas
jmp
add
idivb
add
and
jnp
sbb
mov
cmp
movsb
in
mov
add
sub
jmp
or
pop
pop
or
adc
ret
sbb
dec
addr16
add
insb
push
adc
in
aaa
inc
sub
enter
repnz
mov
movb
sbb
add
cs
arpl
push
pop
les
inc
push
mov
or
pop
lahf
mov
add
dec
scas
pop
aam
pop
push
push
aaa
hlt
xchg
fwait
push
pop
inc
xchg
sub
aas
mov
cmp
lods
sbb
sbb
into
mov
add
mov
outsb
ret
aad
sub
xor
loop
sbbl
int
and
loopne
mov
sbb
andl
stos
push
jb
call
mov
inc
or
dec
dec
mov
cmc
push
dec
mov
jbe
scas
stos
andl
outsb
jmp
mov
cltd
daa
loop
stos
or
repz
mov
mov
nop
add
movsl
jnp
in
mov
cmp
out
lock
mov
in
ret
add
scas
mov
iret
pop
cmpb
addb
lss
iret
rcl
cmpsl
push
shll
test
in
nopl
cmp
adc
pusha
divb
mov
sbb
gs
or
js
outsw
mov
dec
lods
lea
xchg
addr16
sti
mov
cmp
mov
pop
aam
sarl
cmpsb
sti
call
shl
das
adc
or
iret
lret
jp
push
enter
mov
mov
or
dec
hlt
mov
roll
lahf
fs
lea
jle
stos
ss
daa
inc
mov
repz
xor
mov
cmp
inc
fsubr
fcmovnu
or
cltd
pop
jb
cmp
lds
adc
and
incb
cmp
sti
sahf
mov
push
add
mov
push
insb
sbb
or
ret
sub
je
mov
or
jbe
or
test
or
lock
mov
stos
lods
testl
fsub
pminsw
mov
pushf
lea
je
adc
clc
hlt
pop
sbb
aaa
das
cmp
int
pop
or
mov
jnp
add
imul
mov
pop
pop
xchg
ret
lea
mov
fisttpl
lock
or
lahf
push
mov
lret
sbb
stc
mov
lea
fsubrs
in
mov
daa
sbb
dec
and
sbb
out
mov
adc
push
icebp
lret
nop
out
mov
fcomps
xchg
cmc
bound
xor
dec
call
imul
pcmpeqb
jge
lret
movsb
arpl
int3
aam
imul
xor
mov
fldl2e
mov
push
mov
mov
movsb
pop
dec
call
dec
shlb
rcrb
cmp
cmp
or
xchg
sti
notb
cli
shll
sub
cmc
dec
ret
lods
inc
pop
pop
stc
xor
stc
rcll
jnp
lea
jne
lds
sub
rorl
jecxz
jmp
in
cmpsb
cmp
icebp
jns
movsb
out
in
mov
xlat
adc
je
push
xchg
ljmp
push
int
add
movsb
insb
insb
std
xchg
stos
xor
mov
imul
mov
push
push
pop
std
mov
jb
into
fwait
cmp
and
repnz
and
andb
push
push
dec
mov
call
lahf
lock
std
test
dec
roll
mov
cltd
shlb
mov
sti
scas
push
int
ret
push
sahf
push
cmpb
dec
sahf
sbb
add
popa
das
lret
jmp
enter
jg
mov
sub
sub
test
jbe
movsl
and
lock
ds
mov
jae
insb
cmpsb
ds
adc
sysexit
or
adc
lret
lcall
pop
push
dec
mov
sub
adc
dec
leave
loope
or
jnp
aad
aaa
sbb
push
mov
rcl
mov
icebp
sbb
push
jmp
push
adc
arpl
movsl
cs
enter
sahf
addr16
adc
xor
mov
dec
jl
rolb
incl
adc
cmpsl
mov
dec
ficoms
adc
sbbb
or
andb
in
gs
out
pop
int
enter
cmp
repnz
fsubrp
ret
or
add
out
in
ret
pop
nop
testl
cltd
add
dec
xlat
int
adc
out
mov
add
push
in
fistps
stos
adc
or
addr16
pop
out
push
lret
mov
hlt
lods
or
sbb
aam
fs
cmp
int
push
int
lods
dec
call
jns
cli
and
mov
daa
clc
jb
xchg
pop
test
push
mov
inc
inc
imul
in
sbb
addr16
fcoml
ficoms
das
dec
mov
push
imul
fistpl
add
arpl
or
cmp
in
cltd
in
orl
pop
adc
call
mov
mov
sbb
xor
push
xor
push
pop
mov
dec
sbb
mov
neg
loop
les
imul
sub
adc
xchg
test
lea
ret
push
sub
fdivrs
imulb
xor
ljmp
aas
les
inc
inc
xchg
inc
incl
inc
or
cmpb
testl
cmp
xchg
add
cld
gs
push
jle
push
sub
aad
jmp
xchg
jnp
xor
pop
sub
movsl
hlt
or
and
js
add
mov
inc
dec
enter
cli
mov
nop
mov
cltd
pop
jle
jg
sub
cs
bound
cmp
push
daa
cmpsl
rcll
lret
jne
cwtl
fbld
sbb
mov
add
filds
mov
cmp
push
mov
dec
out
adc
xor
mov
mov
xor
iret
roll
inc
pop
or
and
out
xor
inc
add
jb
inc
sbb
lods
pushf
xor
in
pop
aad
xor
mov
mov
adc
out
push
cmp
pusha
and
cmpsl
repz
int
xchg
or
xchg
imul
dec
jbe
aam
arpl
hlt
mul
and
inc
fdivl
mov
push
cmp
inc
mov
or
mov
mov
cmp
xchg
add
push
push
xlat
insl
out
sahf
stc
inc
sbbl
data16
decl
sbb
lods
repz
aaa
stos
or
xchg
dec
sbb
jo
notl
and
insl
cmp
pop
cltd
push
pop
push
jmp
jnp
dec
or
fldenv
mov
mov
mov
and
sarl
lds
pop
dec
cmc
decl
ds
pusha
cmp
jg
divl
jae
in
pop
cmp
imul
or
mov
push
out
jno
ss
add
stc
ret
jecxz
cmp
stos
clc
lea
xchg
daa
clc
mov
xchg
test
cld
cli
or
mov
lahf
inc
sarb
add
xchg
cli
pop
sub
pop
mov
lods
movsl
add
shll
ja
sbb
fimull
cli
mov
jle
mov
fiaddl
and
mov
pop
sub
scas
and
iret
jo
lea
add
idivb
sub
bound
outsb
dec
repnz
and
in
cmp
xchg
clc
and
xchg
lcall
inc
stos
xchg
mov
add
mov
dec
repnz
or
fstpl
cmp
adc
movsl
xchg
dec
iret
test
cs
nop
sub
mov
daa
xchg
pusha
lret
daa
inc
xor
sub
test
push
mov
jns
dec
fcoms
add
clc
out
insb
add
outsb
fbstp
mov
shlb
xlat
xlat
jmp
sub
sti
jbe
std
jmp
jecxz
push
push
test
fistpll
lods
jecxz
add
mov
sbb
mov
xchg
jae
xlat
and
pop
test
call
ja
inc
rcrl
cltd
lods
cmp
lret
aas
movl
cmpsb
dec
pop
rol
mov
push
jno
push
push
xchg
add
fstl
nop
popf
mov
ss
cmp
push
xor
mov
aad
lea
test
mov
mov
mov
sub
shll
push
pushf
sub
push
loope
cmp
insb
add
add
movsb
xchg
jns
sbb
std
pop
adc
dec
cmp
dec
imul
lods
scas
push
aas
mov
mov
mov
xchg
in
inc
sbb
lock
fildll
loop
pop
addr16
and
cwtl
imul
popa
addr16
mov
jmp
iret
testl
js
aad
pop
pop
scas
incl
in
inc
jbe
incl
xor
inc
mov
push
push
or
cs
icebp
pushf
and
xor
or
nop
imul
loop
mov
pop
lcall
leave
in
stos
mov
dec
adc
fs
ljmp
pusha
jno
arpl
gs
jno
out
outsl
clc
lcall
mov
stos
mov
shl
movsl
fidivrs
mov
pop
cmp
out
lock
int
cli
jae
movsb
dec
orl
mov
mov
lods
pop
inc
fldcw
lret
scas
cmp
cmpsl
test
out
loopne
or
cmc
mov
dec
sbb
js
xor
add
cli
jecxz
cmp
xchg
aam
pushf
aas
xchg
call
test
pop
dec
sub
adc
pop
je
cmp
sub
sbbb
jle
lods
mov
jns
cmp
aad
loopne
js
cmp
mov
outsb
cs
mov
sbb
jb,pt
outsb
aad
inc
sbb
xor
jl
idiv
dec
add
mov
pop
xor
shll
imul
adcb
fnstcw
fs
cld
in
sub
in
arpl
cmp
push
dec
jle
shlb
jnp
jmp
xlat
xchg
ja
aas
popa
lds
xor
cmpsb
call
inc
and
in
ljmp
mov
pop
sub
push
mov
fildl
in
rolb
out
jecxz
subb
mov
fcom
or
leave
stos
test
and
push
movd
cwtl
sbb
dec
and
push
mov
xor
xor
mov
in
add
ljmp
and
inc
cmp
dec
pop
cwtl
lret
dec
rcll
sbb
icebp
in
fadds
loope
stos
test
pop
imul
aaa
push
std
loop
adc
rcrl
jns
push
sahf
mov
mov
mov
sub
cmp
testl
das
out
adc
js
jae
gs
mov
inc
mov
or
mov
les
jbe
mov
pushf
xor
and
push
pop
bswap
pop
scas
mov
pop
or
ss
push
mov
xchg
shlb
movsl
fmuls
dec
fs
pop
sbb
aaa
outsb
insb
ret
imul
rcll
lret
lea
iret
data16
bound
lret
nop
fwait
cld
test
lahf
xchg
xchg
out
push
jg
sbb
mov
imul
xchg
clc
sbb
jae
mov
sub
insl
jbe
adcb
sbb
and
pop
jmp
mov
or
sbb
sbb
inc
xchg
test
jmp
add
pusha
and
and
push
or
and
daa
jg
inc
add
jae
pusha
sub
out
es
lahf
adc
mov
movsb
sub
leave
lret
jno
cmp
or
cltd
jg
jnp
jns
adcl
xor
jmp
arpl
cs
jns
sahf
push
xchg
jge
push
or
stc
sahf
push
pop
mov
pop
test
and
std
mov
movsb
std
push
movb
enter
xchg
xor
stc
mov
data16
stos
lods
cmp
jne
sbb
sbb
pop
test
mov
cmc
test
imul
cmp
dec
rcl
stos
ljmp
inc
repz
das
or
add
fidivrl
out
jl
loopne
test
stos
mov
jns
mov
pop
mov
repnz
mov
es
sbb
sahf
inc
adc
mov
aaa
ja
pop
add
mov
push
insl
jmp
lds
loope
mov
mov
and
cmp
push
into
cmp
popa
sub
in
dec
cmp
ror
jns
iret
inc
dec
adc
adc
bound
test
mov
pop
stc
aaa
ret
icebp
xor
mov
xchg
add
sbb
pusha
pop
in
xor
mov
adc
arpl
or
outsl
dec
ret
add
jmp
cwtl
adc
ja
mov
cmpb
shr
dec
jmp
mov
fcomip
sbb
sub
jae
test
xchg
mov
popa
inc
mov
dec
cmpsl
fistpll
pop
jle
add
rorb
in
js
xchg
mov
movzwl
fisubrl
arpl
jne
jp
imul
pushf
xchg
inc
xchg
push
aas
lods
mov
inc
push
dec
mov
mov
aam
cld
jnp
insb
cwtl
and
loope
pop
cli
push
je
lods
add
or
sub
clc
cmp
push
mov
mov
jb
mov
dec
ds
adc
in
scas
add
mov
sub
lods
sub
mov
jp
cmp
or
dec
sbb
fwait
enter
and
cmp
ja
cmp
mov
rcrb
stos
loopne
xor
xor
aad
mov
or
adc
leave
stc
leave
scas
dec
pop
clc
ss
inc
adcl
call
pop
mov
pop
in
push
in
xchg
mov
mov
roll
mov
xchg
pop
jb
jmp
dec
or
idivl
pop
mov
test
pop
pop
cld
pop
cmp
xchg
insb
pop
xchg
ret
xchg
mov
xchg
xor
xchg
mov
inc
scas
sahf
sub
jmp
shrl
loop
insb
mov
pop
mov
fimull
in
push
icebp
lret
imul
int3
mov
jnp
adc
mov
pusha
sub
daa
test
mov
sub
jecxz
out
fisubrs
jge
movsl
lea
insl
dec
shlb
xchg
xchg
in
jg
jno
into
stos
dec
pop
and
sti
sti
mov
fcoml
xchg
int3
pop
into
mov
das
push
or
mov
mov
xchg
jmp
lcall
mov
sub
cmp
mov
bswap
adc
sbb
in
popf
pusha
enter
int
xlat
mov
mov
inc
enter
mov
push
test
and
pusha
mov
and
out
mov
nop
fwait
lods
loope
subb
pusha
scas
cs
out
mov
and
push
xor
call
add
bound
inc
popa
push
lea
leave
fmull
clc
mov
imul
xchg
daa
push
sti
mov
in
scas
dec
inc
aam
sub
pushf
clc
pop
xchg
shlb
cmp
mov
dec
dec
sub
jl
sub
outsb
mov
cmc
std
inc
cwtl
in
inc
or
fsubrl
rolb
popa
mov
sbb
aas
lock
cld
test
cltd
sbb
xor
aaa
dec
imul
dec
dec
cmp
rcrl
push
addr16
ljmp
scas
mov
jecxz
inc
mov
add
dec
movsb
in
mov
jo
pop
ja
adc
pop
xchg
dec
shll
xchg
dec
fwait
mov
xor
repnz
cs
sbb
je
popa
stos
pusha
ss
outsl
inc
pop
sub
mov
pop
xor
mov
adc
jne
aas
pop
cmpsb
idivl
int3
jns
iret
xor
mov
imul
movsb
xchg
imul
cmp
repz
push
insb
loope
out
pop
cmp
out
cmp
mov
inc
jns
fbld
int
popa
mov
sub
les
aaa
and
cmp
mov
js
or
ret
and
lds
sarl
loopne
xchg
inc
mov
xchg
sub
push
add
and
popa
and
mov
cmp
sub
push
lods
xchg
call
pop
call
pop
orb
das
adc
incb
mov
mov
adc
jmp
lcall
ret
xor
push
lahf
ljmp
imul
push
cmp
dec
cmp
in
pop
sub
sbb
jne
dec
xchg
push
fdivrl
jnp
cmp
fs
and
adc
inc
enter
mov
movsl
dec
repnz
notb
shl
aam
pop
pop
xor
adc
int3
fadds
in
pop
and
fimull
dec
repnz
jb
pop
adc
mov
divl
xchg
push
hlt
repz
data16
fimuls
xchg
test
stos
repnz
sbb
inc
lds
das
lret
jno
pop
sbbl
push
mov
inc
mov
sbb
jae
scas
addl
dec
jns
dec
fs
jo
xchg
test
cs
imul
mov
dec
xchg
mov
mov
and
imulb
pusha
sub
incl
mov
aaa
mov
mov
pop
int3
inc
inc
jne
and
loop
pop
cmpsb
orb
pop
rolb
addr16
jp
test
fisttpl
jge
je
pop
cmpsb
arpl
das
inc
pop
sub
pushf
push
out
mov
jle
sahf
xchg
inc
cmp
jmp
mov
test
dec
in
rclb
orb
in
cmpsl
cmpsb
add
jno
pop
hlt
cltd
hlt
addr16
sti
pop
loope
outsb
sbb
test
dec
and
rcrb
lea
fwait
icebp
xchg
mov
stos
sbb
cwtl
loopne
movlps
jns
leave
cwtl
mov
mov
sbb
cmp
lahf
push
sub
icebp
pop
mov
xor
cmc
mov
dec
pop
lahf
sahf
xchg
out
mov
sub
xchg
push
in
loope
ss
icebp
dec
pop
cmp
testl
cmc
imul
mov
adc
jmp
loope
leave
test
dec
and
pushf
dec
and
xor
pop
clc
enter
fcompl
add
xchg
mov
clc
mov
xchg
test
dec
imul
out
fdivrp
sbb
cmpsw
dec
das
add
shl
add
testl
xchg
mov
inc
aam
psrlq
xchg
movsl
dec
mov
lret
aad
jg
cmc
or
fmull
cmpsb
mov
mov
fists
lds
and
out
pushf
stc
mov
je
pop
mov
or
insl
bnd
dec
out
je
or
cs
adc
outsb
inc
mov
sub
scas
in
sti
imull
xor
and
mov
add
cmp
repnz
xor
sub
xchg
xchg
xchg
jno
cmp
cmp
xor
into
adc
cltd
ljmp
push
cmpsb
dec
in
mov
cwtl
into
xchg
cs
push
pop
les
dec
add
dec
adc
add
cmp
es
xor
in
ja
dec
les
lds
cs
mov
cmp
inc
fadd
push
add
xor
pop
lock
and
jb
sub
push
ja
xchg
sub
add
pop
pop
aas
adc
mov
xchg
inc
imul
cmpsb
cltd
or
inc
jae
or
adc
call
fiadds
rorb
test
jl
pop
inc
les
lahf
in
push
sbb
mov
jnp
mov
or
xchg
inc
mov
aaa
andb
xor
jne
ja
cld
lods
xor
pop
inc
push
pop
add
fdivl
dec
hlt
cmp
and
cltd
loop
pop
jp
cltd
ret
pop
mov
xor
bnd
jns
add
nop
sbb
pop
and
fistl
out
ss
ret
add
jo
arpl
xor
jo
dec
mov
mov
call
fdivrl
inc
les
cwtl
fdivrl
dec
sbb
bound
insb
mov
fwait
scas
fdivrs
mov
xor
mov
dec
clts
adc
xor
sub
push
sub
cmp
jge
mov
aas
and
jmp
sub
arpl
sahf
jmp
iret
shlb
daa
xor
clc
mov
lds
in
push
jo
xor
mov
cwtl
push
int
icebp
iret
adc
data16
xchg
cmp
out
xchg
pop
lahf
test
cmpsl
xchg
stos
mov
jg
jbe
mov
inc
lds
mov
jae
pop
scas
jmp
test
repz
out
xlat
int
mov
dec
mov
lret
xchg
lahf
push
stc
into
jb
push
mov
out
clc
shl
pop
out
jnp
pop
inc
movsl
jns
dec
std
lahf
cmpsl
loopne
pushf
ret
add
in
aad
je
in
pop
arpl
mov
cmpsb
ja
es
pusha
lock
fsts
push
idivb
xchg
mov
jg
int
pop
in
pusha
es
int3
pop
pop
insb
sbb
xchg
das
stos
and
jbe
dec
add
icebp
sub
ret
sub
or
push
arpl
rcrb
adc
lods
fisttpl
lcall
jb
fisttpll
mov
ds
js
sbb
in
test
mov
ftst
outsl
in
call
mov
pop
adc
nop
pusha
inc
out
in
call
dec
mov
pushf
push
mov
jb
shll
or
test
jge
mov
data16
notb
sub
jo
into
mov
pop
adc
insl
cmpsb
mov
dec
sahf
mov
push
and
int3
icebp
push
mov
std
jl
mov
xor
jb
jl
sbb
ret
outsb
aaa
je
ljmp
inc
and
dec
sub
dec
dec
push
xchg
sarb
pop
mov
cmp
aam
rolb
hlt
and
fdivrl
mov
lcall
push
enter
dec
dec
adcl
aaa
xor
hlt
jg
adc
push
mov
repz
pop
cmp
adc
or
into
cs
cmpsb
mov
jecxz
pop
sbb
test
popa
out
xchg
xchg
insl
add
popf
imul
test
cmp
outsl
adc
movsb
cli
movsl
pusha
mov
movsl
out
xor
dec
leave
mov
out
mov
push
fs
dec
dec
rolb
aas
mov
test
imul
lret
xorb
dec
adc
xchg
roll
xor
xor
arpl
xchg
and
loope
fmuls
cmpsl
or
xor
pop
cmp
jno
jns
mov
mov
dec
shlb
lods
iret
or
sbb
xchg
insb
cmp
jmp
nop
mov
push
xchg
mov
push
dec
mov
pusha
push
into
in
js
add
jg
cmpsb
ret
repnz
cmpsb
cmpl
loop
xor
and
fdivl
nop
nop
sub
mov
sbb
xor
adc
mov
lds
pop
js
cmp
scas
add
jbe
pop
cmp
push
mov
dec
add
sbb
ret
xchg
add
outsb
sbb
xchg
xlat
in
cmc
mov
test
push
xchg
in
mov
cwtl
xrelease
das
lods
push
enter
andb
test
ds
out
mov
add
sbb
fisubl
jae
pusha
pop
mov
stos
inc
popf
xor
mov
mov
test
jp
mov
xor
dec
movsb
mov
loope
andb
xchg
pop
pop
pop
mov
xchg
test
gs
cmp
jg
sub
sub
es
in
and
cmp
adc
cmc
int3
add
sub
jbe
xchg
adcb
mov
imul
dec
lds
mov
lret
inc
imulb
in
les
adcl
push
pop
sub
stos
pop
add
les
lods
ljmp
push
add
jmp
mov
test
hlt
js
lret
icebp
popf
dec
bound
add
call
ret
xchg
jns
std
xchg
mov
jmp
dec
dec
xchg
xchg
ljmp
push
jnp
das
cltd
adc
xor
pop
in
cmp
fisttpl
cmp
or
jae
pop
pop
dec
clc
lcall
mov
pop
pop
add
xor
inc
push
sbbl
and
and
lret
sarl
inc
icebp
jae
ss
xor
dec
stc
push
jae
cwtl
jg
icebp
add
insl
add
cmc
add
add
xor
call
pop
lret
dec
jb
mov
mov
mov
sub
stc
stos
daa
cmove
jae
jmp
insb
jg
fwait
inc
push
lea
cmc
jbe
jne
add
mov
fwait
jnp
inc
push
inc
lret
out
out
push
outsb
or
iret
cmpsl
daa
les
pop
fdivl
push
mov
leave
lods
mov
push
mov
adc
adc
loopne
sti
xor
mov
into
lds
push
das
imul
mov
cmpsb
jmp
xorl
push
jbe
or
mov
fmul
push
adc
jg
cmp
pushf
push
test
int
dec
pop
sub
adc
out
cld
add
ror
xor
out
call
out
outsb
mov
repz
and
push
cmpb
inc
ret
xchg
pusha
les
add
out
add
mov
fucomi
and
mov
lods
outsl
call
fsubs
cmc
dec
mov
ja
sub
test
sti
paddq
call
test
jge
xorb
loopne
jge
xchg
jg
xchg
inc
mov
stc
mov
fdiv
out
or
sbb
push
outsl
add
aas
shr
cmpsl
rcll
adc
shlb
xchg
dec
cli
mov
mov
out
jp
add
push
cmpsb
sub
cmp
mov
hlt
cmp
add
jl
cmp
mov
aaa
pushf
push
jg
mov
pop
inc
iret
mov
into
aad
cmp
mov
cs
pop
cmpsl
cmp
pop
aam
sub
jp
das
sub
scas
movsl
push
fimull
imul
ljmp
loop
sbb
imul
push
fdivs
mov
xor
outsl
adc
ljmp
test
sbb
jp
es
mov
test
jmp
stc
and
push
push
and
scas
mov
mov
sarb
mov
jnp
mov
imul
inc
insb
nop
sahf
adc
outsl
and
adc
xor
mov
xor
out
and
mov
mov
fisubrs
mov
mov
int3
inc
out
dec
mov
popa
clc
mov
repz
imul
arpl
adc
xchg
pop
packsswb
inc
or
test
in
in
jno
jo
cmp
or
adc
ret
mov
mov
mov
aas
mov
jne
jecxz
sub
in
xchg
fstpt
and
push
dec
sbb
hlt
insl
push
pusha
inc
mov
adc
call
xchg
push
dec
and
pop
add
test
push
xchg
mov
and
xchg
jns
pop
repnz
negb
sub
pop
jnp
lret
jl
stos
call
incb
ja
cld
enter
pop
sbb
jne
jmp
cmc
cmp
adc
jmp
cwtl
repz
xchg
fnstenv
jno
imul
js
cmc
sub
std
in
jle
pop
pushf
mov
je
pop
fistl
pop
int3
mov
sarb
dec
jae
jb
mov
rcll
adc
inc
outsb
lret
cmp
lret
movsb
ficompl
inc
hlt
sub
lea
out
sbb
adc
stos
jecxz
sti
mov
aam
pop
aam
test
pop
fadds
test
push
push
inc
cwtl
cmp
fistpl
repz
data16
shl
lcall
jge
inc
add
mov
aas
and
in
jae
jb
popf
lea
ss
pusha
sti
add
dec
xor
xor
scas
inc
aas
insb
sar
mov
xchg
shll
int
outsl
pushf
aas
scas
mov
pushl
nop
add
inc
xor
pop
cmp
inc
pushf
repnz
sub
imul
das
mov
test
xor
pop
sbb
xchg
dec
dec
mov
push
sbb
pusha
add
push
push
outsb
or
cmpsb
jae
aad
mov
in
jmp
mov
lods
or
and
xor
lea
push
lret
out
inc
mov
jns
ffreep
lret
psubq
lods
mov
mov
adc
dec
pusha
andb
jns
pop
xlat
loopne
dec
imul
test
sti
divb
jnp
inc
add
rol
in
dec
push
mov
push
jge
mov
ret
iret
fidivrl
hlt
dec
dec
andl
ret
sbb
pop
insb
xchg
dec
clc
test
adc
adc
dec
pushf
out
xor
mov
call
pusha
cwtl
pushf
and
jg
lea
in
and
test
sub
sti
push
pushf
fs
mov
ljmp
movaps
popa
mov
daa
ret
adc
or
ret
mov
sub
ds
lds
jp
scas
jns
and
jnp
cmp
dec
push
add
ds
and
inc
lahf
cmp
aas
lahf
fnstenv
imul
sbb
ss
pop
cmp
push
mov
push
bswap
aas
inc
fwait
jg
scas
mov
and
jo
inc
pushl
adc
mov
loopne
pop
jo
enter
daa
lock
loope
jle
sub
into
sub
and
shlb
test
iret
dec
cmp
dec
mov
sbb
arpl
and
and
jle
jno
and
and
ret
iret
fistps
inc
loope
loope
mov
xchg
shl
xchg
mov
xor
dec
push
pop
mov
adc
notb
loopne
pop
cmp
add
sub
ret
cmpsl
inc
xchg
mov
jo
or
mov
xchg
xor
addr16
and
aad
add
mov
lcall
xchg
out
cmpsl
jmp
pop
daa
int
aaa
popa
mov
or
inc
ffreep
and
arpl
push
loope
mov
cmp
sti
pop
xor
mov
outsl
aaa
mov
stos
or
xchg
std
jbe
idivb
pop
sbb
into
or
dec
adc
mov
icebp
and
mov
jne
mov
testl
xchg
push
pop
loope
xchg
jl
jae
lcall
adc
es
stos
mov
xchg
fldl
jmp
sbb
mov
cmp
jne
scas
repz
divl
popa
mov
add
test
adc
push
cmpsb
mov
hlt
lods
cmc
mov
leave
ljmp
nop
dec
mov
enter
mov
sbb
fisttps
fwait
and
xchg
sub
sbb
inc
adc
iret
pop
mov
dec
xchg
test
lock
call
xchg
sbb
das
cltd
and
cli
fldt
scas
sub
setle
dec
call
dec
mov
cmpsl
push
in
sub
inc
or
xlat
xor
movsl
ds
fwait
mov
divb
push
pop
mov
jl
mov
shlb
xchg
dec
ret
in
js
or
lret
jns
mov
jnp
jle
jne
in
test
sub
adc
inc
jb
xchg
test
ljmp
adc
jbe
mov
mov
inc
incb
test
jb
jae
inc
fcompl
bnd
cld
adc
rcrb
push
dec
push
mov
jmp
fstps
ja
cmpsb
add
jae
mov
inc
subl
jp
or
movsb
mov
jns
jl
out
add
mov
push
shr
xchg
call
sub
mov
adc
xlat
aas
lds
out
jp
jp
mov
sbb
and
mov
sbb
pop
mov
mov
mov
mov
imul
das
push
aam
in
sub
xor
in
xor
daa
imul
xchg
lret
jl
int
dec
pop
sbb
push
adc
mov
pop
xlat
dec
mulb
push
loop
pop
mov
xor
sti
into
and
mov
mov
xchg
pop
loopne
mov
mov
add
cmpb
outsl
lahf
fdivr
push
add
clc
and
adc
add
mov
xchg
mov
bound
rorl
test
loopne
adc
jae
adc
sub
mov
out
in
xchg
into
call
hlt
shl
movsl
jle
push
loopne
push
mov
xor
pop
sub
dec
insb
jl
pop
mov
sbb
fcoms
leave
dec
jns
lods
xchg
std
shr
mov
mov
ret
insl
or
cmovae
inc
jmp
insl
faddp
mov
imul
xor
aad
or
jle
insl
jge
dec
pushf
pusha
jg
jmp
xchg
mov
inc
ljmp
cmp
and
int3
mov
mov
popf
addr16
add
mov
das
or
cmpsb
in
gs
ret
or
ds
int
and
jmp
stos
popa
mov
push
arpl
stos
adc
insb
out
addr16
hlt
cld
stc
pusha
cmp
mov
mov
lret
xchg
shrb
mov
mov
rolb
iret
subb
fstpt
jno
aad
dec
xor
pop
mov
inc
jmp
je
enter
scas
imul
in
adc
cmp
sbb
cmc
cmpl
out
sub
test
pop
test
inc
adc
xchg
cltd
hlt
and
add
addl
dec
cmc
push
mov
scas
push
into
subl
cmp
push
shlb
movsb
xchg
outsb
adc
je
inc
ret
lock
vpackssdw
sub
fs
sub
xchg
imul
repz
sub
mov
mov
sbb
icebp
sahf
sbb
scas
mov
push
jno
cmpsb
jno
into
push
and
loopne
mov
jg
in
clc
das
inc
enter
mov
jns
out
daa
jecxz
jl
push
fildl
cltd
test
push
cwtl
jl
ds
dec
mov
bound
sbb
cs
xor
sbb
jge
cld
insl
sub
sub
xlat
adc
notb
mov
lret
dec
ret
in
jmp
push
subb
jecxz
mov
cmp
inc
fisubrs
lock
push
leave
clc
nop
std
mov
out
mov
es
roll
inc
sbb
jbe
cmpsl
cld
lods
insb
xor
mov
nop
add
out
in
xchg
ljmp
xchg
adc
push
mov
mov
andl
xchg
cmp
pop
hlt
mov
stos
addl
jnp
sub
fsubrl
sub
cmp
stc
les
or
add
adc
in
jmp
orb
mov
mov
pop
mov
push
testb
int3
imul
xor
das
cwtl
mov
ss
dec
pop
lock
shr
xchg
mov
inc
ljmp
mov
lret
scas
jb
fwait
enter
mov
movsl
out
adc
mov
repnz
inc
lods
push
jmp
jmp
dec
push
ja
jg
inc
dec
mov
lahf
repnz
sbb
jns
lret
mov
add
cld
jp
pusha
cmpsl
sbb
jp
out
addb
sbb
shrl
sub
pop
lahf
lods
fstpt
jge
repz
mov
mov
pop
clc
pop
pop
lods
xor
pop
jb
jne,pn
mov
lcall
ljmp
inc
ror
mov
or
mov
stos
pop
jp
in
repnz
sbbl
push
mov
repnz
stos
sbb
repz
test
xchg
or
adc
or
lret
lods
das
inc
lods
movsl
cmp
popf
and
bound
scas
inc
sub
hlt
add
out
test
ret
jbe
xchg
mov
inc
and
cmp
xor
xor
pop
leave
xchg
das
addl
dec
pusha
dec
loop
mov
mov
cmp
push
jb
repz
pop
xor
mov
pop
xchg
add
dec
fisubrl
dec
out
rorl
pushf
movsb
adc
cmc
mov
sbb
mov
adc
shl
and
cld
cmp
sarb
addr16
fisttps
add
cmc
lea
aam
push
mov
in
les
dec
mov
repnz
push
cmpxchg
lcall
in
lods
push
aas
cmp
or
lahf
jne
jb
mov
imul
std
push
mov
jg
inc
xor
adc
sub
jmp
dec
adcl
add
shll
cwtl
ss
push
cmp
loope
arpl
icebp
xor
ret
cmp
jo
jns
inc
fdivr
cmp
test
mov
lahf
sbb
nop
mov
call
es
dec
and
lret
mov
in
jno
lock
xchg
jbe
mov
sub
in
push
adc
testl
nop
sub
pop
cltd
adc
fwait
pop
iret
push
popa
ljmp
fs
pop
ret
adc
aam
push
enter
and
and
leave
add
filds
arpl
lods
add
xchg
mov
mov
int3
aam
aad
ret
mov
mov
scas
xor
adc
dec
mov
mov
adc
and
mov
or
loope
repnz
in
in
clc
clc
sbb
mov
insb
pushf
or
pushl
outsb
mov
mov
pop
xchg
xchg
insb
arpl
push
cltd
cmpsb
cs
inc
mov
push
rcr
loop
fisubl
cli
mov
outsb
out
rorb
sbb
imul
repz
or
add
call
inc
dec
dec
mov
stc
mov
ret
ret
or
cmp
ljmp
sbb
push
adc
mov
sbb
fnstsw
inc
or
divl
xor
shrb
mov
imul
stos
dec
sub
and
jns
movsb
repnz
sbbl
leave
jle
andl
mov
imul
pop
int
add
ret
loopne
lret
sbb
sbbl
insl
orb
adc
pusha
ja
xor
mov
mov
arpl
push
stos
mov
popf
fs
andb
sti
xchg
movsl
bound
int3
xor
fs
push
add
fcompl
sar
xor
pop
push
sub
stos
pop
or
fwait
arpl
mov
into
dec
in
lret
fldl
cli
stos
test
dec
in
cltd
push
or
sti
fisubrs
mov
dec
pop
dec
xchg
push
jmp
out
sbb
mov
sbb
stos
cmp
adc
in
popa
jg
push
xchg
repz
adc
fildll
out
mov
test
sub
sub
jns
gs
mov
or
loope
sahf
das
mov
imulb
add
fs
fst
push
mov
sbb
cmpb
xor
mov
jl
xchg
fsubs
xchg
movsl
mov
pop
out
mov
cmp
fmulp
xchg
xor
push
cmp
outsb
call
and
pushf
or
test
mov
insl
pushf
jno
sbb
in
lea
cmp
jle
or
xchg
cmc
mov
jnp
or
inc
lret
jnp
adc
orb
hlt
mov
lods
dec
int
jbe
out
pop
scas
test
addb
push
jno
mov
mov
xor
adc
cmc
sbb
lcall
xchg
insl
sub
mov
push
inc
pop
mov
pop
hlt
push
inc
rorb
pop
and
jbe
cmp
mov
cld
fnstenv
fwait
inc
mov
fwait
dec
jecxz
jp
inc
jns
jmp
test
aas
inc
out
cltd
pop
pop
dec
mov
xchg
loopne
cltd
insl
stc
xor
pop
xor
aaa
jbe
xor
shlb
jne
push
add
out
dec
or
sub
pop
dec
ja
xor
lret
es
ja
in
nop
sbb
addb
jge
dec
pop
jns
sbb
ret
cmp
dec
mov
iret
xor
lret
test
pop
push
pop
xchg
xchg
mov
adcb
rcll
jnp
lods
int
mov
push
jno
or
or
jo
cwtl
mov
xchg
or
cli
mov
cmp
jg
xchg
mov
jge
cmpsl
shl
test
call
mov
fidivrs
arpl
push
lock
rcrl
push
orb
pop
adc
lahf
lods
aad
push
mov
inc
xor
stc
pop
das
inc
movsb
lock
xlat
sub
cld
jno
testb
pushf
ljmp
rcrl
mov
stos
clc
repnz
or
adc
inc
stos
xchg
sub
outsl
xor
cmpsl
adc
fdivrs
push
leave
jmp
mov
faddl
jp
mov
scas
mov
jmp
sub
das
add
pop
mov
inc
adc
and
push
hlt
xlat
add
push
and
push
adc
ljmp
push
sub
pushf
sub
shrb
cmp
and
lods
les
and
outsl
test
scas
icebp
mov
mov
push
inc
enter
sub
int
adc
jb
sbb
xchg
add
push
sub
push
fistl
cli
mov
stos
loopne
dec
mov
cmp
cmpsl
dec
dec
fldl
jg
adc
nop
inc
push
test
imul
inc
movsb
xor
out
pop
ja
divl
jae
mov
sub
cli
repz
test
cmp
pop
jns
ficomps
jmp
dec
aam
and
loop
sahf
int
jnp
sbb
pusha
inc
dec
popa
or
jbe
jg
push
mov
jae
pop
add
addl
xchg
dec
jns
rol
or
dec
xchg
fstpt
hlt
pop
fisttpl
cmp
and
sahf
xor
pusha
scas
scas
jbe
dec
stos
cli
jbe
testl
cmc
xor
popa
pop
xchg
mov
cs
ljmp
xor
jns
aaa
pop
lahf
pop
dec
pop
mov
shrl
fiaddl
aaa
pusha
jne
cmp
dec
sub
lahf
xchg
lret
push
leave
xchg
out
in
sbb
add
adc
sub
mov
mov
mov
out
and
fwait
call
mov
cmpsl
push
cmp
clc
push
jne
jb
pop
inc
mov
aad
test
push
loope
xor
cmc
pop
fildll
in
mov
mov
sub
iret
ljmp
aam
push
push
sbb
addb
int3
inc
subb
in
cmp
mov
add
rclb
mov
cmp
pop
into
lods
mov
scas
shrb
out
arpl
mov
xchg
jle
mov
xor
insb
pop
repz
sub
adc
pop
jns
jnp
das
pop
iret
cmpsb
mov
or
jno
pop
push
pop
push
imul
xchg
pop
push
movsb
pop
jp
xchg
enter
xchg
mov
cmp
cmp
jnp
outsb
shlb
pop
in
lcall
ja
pop
jae
in
lock
scas
in
cld
sub
ret
es
in
je
lock
pop
out
dec
fisttpl
test
and
push
je
lcall
loope
push
out
notl
xchg
mov
cmpl
mov
sahf
mov
enter
inc
sbb
imul
cmp
vmovaps
shl
pop
adc
test
or
jp
cmpsb
repz
pop
dec
mov
pop
inc
imul
clc
push
pop
test
inc
sti
movsb
negb
mov
mov
sub
dec
xchg
lds
adc
popf
mov
fwait
mov
jmp
mov
iret
out
test
sbb
xor
ret
and
or
sub
sub
sub
jb
mov
jl,pn
pop
or
loope
nop
cmp
decb
jp
mov
loope
cmp
xchg
cmp
pop
icebp
jnp
push
out
xor
push
xor
jecxz
clc
xchg
sbb
clc
lods
pop
fs
ret
rol
cmp
or
dec
push
loopne
int3
dec
mov
cmc
push
xchg
repnz
mov
prefetchnta
and
lods
jecxz
or
out
pop
dec
add
es
ror
fxch
clc
sbb
adc
arpl
pop
leave
push
mov
pushf
adc
in
xchg
xor
outsb
push
xchg
addr16
mov
lret
icebp
data16
adc
xchg
push
scas
inc
lahf
dec
mov
xchg
adc
addl
push
int3
adcl
xor
mov
outsl
push
cmp
push
jl
inc
sbb
sub
and
push
xor
add
ret
scas
outsl
xchg
inc
or
sub
gs
dec
pop
fnstcw
sahf
mov
mov
or
loope
ss
call
jge
addr16
or
xchg
test
pop
pop
cltd
and
loop
cmp
scas
adc
cmp
aas
aaa
sub
pop
cmc
sub
aaa
mov
fisubrs
mov
inc
test
lods
jae
mov
mov
cmp
jg
nop
and
rorl
stos
mov
jl
lahf
dec
ret
adc
pop
mov
cmp
mov
or
mov
mov
add
daa
mov
jb
push
add
cmpsb
ficompl
sbb
lcall
fptan
xchg
pop
std
out
movsl
scas
add
cld
in
inc
data16
push
mov
add
ret
out
movsl
or
mov
adc
movsbl
add
loop
adc
flds
fsts
cmpsb
sub
or
dec
xchg
sar
rcr
add
dec
jmp
lcall
dec
mov
sahf
lods
and
aam
cli
out
inc
aas
scas
cmovo
push
andl
imul
inc
mov
or
ds
das
lds
jle
jns
fbstp
scas
repnz
inc
adc
clc
mov
dec
nop
push
push
call
ret
shll
iret
jle
xchg
or
inc
jl
dec
cltd
insl
push
cmp
pop
sub
mov
mov
inc
lcall
sub
int3
outsl
popf
xchg
push
lock
or
pop
mov
arpl
xor
out
enter
jge
pminsw
int3
fldl
jno,pt
stc
stos
stos
pop
aad
loope
ja
movswl
cltd
out
ret
sti
inc
insl
add
push
pop
notl
aad
test
jl
push
mov
push
and
int
fisttpl
dec
pushf
rorb
filds
sahf
cmpsb
adc
add
or
movsl
out
out
mov
scas
mov
nop
jg
xor
pop
push
je
imull
sub
jle
inc
sbb
daa
daa
sbb
jp
pop
and
pop
in
xchg
fistps
jle
cmp
divb
rclb
adc
jb
xchg
nop
or
fldt
mov
add
sbb
call
push
test
pop
mov
lods
jmp
outsb
aas
test
leave
andnps
andl
in
addr16
sub
lahf
inc
inc
mov
enter
dec
push
push
shlb
and
adc
test
nop
lods
cmp
in
adc
fsubrp
cmpsl
sub
cltd
add
dec
ret
in
push
iret
push
add
or
cltd
cmp
stos
jno
xchg
stos
out
dec
out
cltd
scas
fs
sbb
push
inc
cmp
push
dec
jnp
xchg
aam
xor
or
sub
test
or
cmp
or
dec
fwait
dec
inc
les
push
cmp
dec
mov
mov
sbb
add
mov
mov
popa
push
push
mov
mov
jbe
popa
jno
cs
inc
in
jmp
sbb
out
sahf
xor
pop
push
lahf
pop
nop
push
dec
leave
pushf
and
int
inc
das
cmpsb
jl
xor
cmpl
fs
and
or
add
cmp
cs
inc
or
cmp
add
pop
pop
lcall
cltd
sub
in
fcomip
push
xorb
jle
insl
ret
ret
cmpsl
mov
mov
iret
jmp
test
frstor
sbb
clc
in
leave
sbb
insl
pop
cmc
and
mov
lcall
divl
cmp
jnp
std
mov
sbb
mov
jnp
or
lret
jno
jg
sub
stos
ror
sub
ja
cwtl
jg
sbb
testl
cmp
push
lds
int
mov
sbb
push
das
xor
inc
mov
imul
adcb
fs
leave
inc
fdivr
mov
cmp
mov
repz
mov
and
rcll
repnz
fs
or
add
and
mov
jge
pop
dec
lcall
push
cmp
imul
fildl
jge
jg
ret
bound
jg
push
mov
sahf
cmpsl
mov
jae
xchg
add
nop
cld
sbb
lret
mov
add
pop
lret
outsb
imul
jne
std
hlt
adc
xchg
stos
adc
cmpsl
mov
jo
iret
jbe
jl
inc
nop
lea
test
testl
jno
std
scas
adc
pop
jbe
leave
stc
and
sub
mov
add
nop
jl
out
gs
popf
aas
fisubl
das
lea
dec
icebp
ss
ficoml
mov
sbb
das
scas
xor
js
lret
push
enter
or
iretw
ret
in
sub
int
and
fld
cmp
fadd
aad
int3
or
inc
scas
inc
xchg
pop
push
cmpsl
dec
outsb
mov
inc
push
das
mov
mov
mov
daa
xchg
mov
out
push
push
orl
mov
insb
or
iret
xchg
push
mov
pop
mov
sub
pop
imul
das
test
insl
daa
fnstcw
cltd
lcall
or
ret
and
std
add
and
push
add
mov
and
inc
movsl
adc
cwtl
pop
or
adc
pop
xor
out
cbtw
or
push
mov
and
dec
pusha
pop
jbe
xchg
push
enter
les
push
out
aam
les
mov
icebp
lcall
xchg
mov
cmpsl
out
push
mov
icebp
add
sub
vpmacssdql
push
out
and
adc
insl
mov
packuswb
jecxz
lods
jns
cmp
dec
jb
dec
ja
lret
adc
in
mov
sbb
push
sbb
jp
sub
aam
mov
mov
and
mov
and
hlt
ljmp
cmp
ja
ret
mov
sbb
xchg
mov
cs
fimuls
xor
mov
test
dec
popf
mov
dec
int
add
popa
dec
enter
imul
mov
in
cld
pop
pop
daa
test
add
scas
xchg
cmc
add
into
aad
divb
mov
mov
jge
into
pop
sbbl
or
cwtl
call
mull
icebp
fwait
and
jbe
js
inc
fldenv
bound
lods
js
xchg
sarb
lods
mov
mov
sti
pop
or
mov
add
movsl
call
and
fistps
dec
negl
xor
cs
fidivs
mov
pop
push
ljmp
cmpsb
enter
out
mov
in
mov
int3
lret
sahf
arpl
add
dec
ss
add
cmp
sahf
inc
das
je
aaa
pop
popa
mov
imul
or
inc
ret
popa
ja
movsl
data16
xchg
xacquire
aam
cmp
sub
scas
push
pushw
cltd
push
aad
imulb
cmp
mov
movsl
mov
push
sub
cmp
rcr
out
mov
data16
outsl
add
push
or
ret
loope
ret
adc
and
pop
clc
dec
push
xor
pop
jae
xchg
testb
adc
int
push
xchg
loop
std
add
in
push
mov
lea
mov
fmull
sub
sub
movsl
movsl
pop
bnd
pop
leave
imull
xor
enter
cmp
push
out
inc
lds
push
mov
xor
in
lock
sub
dec
jp
nop
ss
lods
shl
mov
lds
jg
sub
sbb
rcl
scas
cltd
jle
dec
fdivrl
scas
popa
stos
mov
sbb
iret
lods
mov
adc
add
inc
push
in
pop
stos
mov
mov
xchg
idivb
in
mov
and
popa
cmc
das
adc
pop
into
lods
mov
and
or
test
sub
negl
xchg
fsubr
sbb
xor
add
stos
adc
shr
pop
and
orl
jecxz
stos
imul
adc
adc
subb
mov
lcall
ljmp
xlat
fsubrs
mov
cmpsb
rol
mov
out
dec
pop
mov
cmp
fdivrl
call
mov
push
mov
neg
into
in
mov
scas
cmpsl
sarb
sbb
in
xor
sti
add
and
gs
sub
outsb
jo
jl
faddl
ret
sbb
adc
cs
dec
test
add
aam
lahf
or
xchg
bswap
adc
sub
jne
mov
jle
arpl
test
fnsave
inc
jle
mov
ret
mov
loopne
jp
sbb
pop
jmp
adc
lock
xlat
lahf
loop
sbb
subb
loopne
mov
ja
mov
xchg
idivl
mov
cmpsl
mov
imul
aam
inc
std
jbe
mov
divb
xchg
mov
cs
scas
pop
cmp
pop
adc
jge
and
iret
sbb
fs
xchg
das
xchg
sbb
jle
enter
mov
adc
pop
fcomps
inc
lret
fst
push
inc
mov
in
test
xor
sub
inc
dec
or
mov
pop
push
scas
js
xchg
in
pop
jg
test
inc
xchg
cld
mov
aam
jmp
popa
jle
inc
or
xlat
dec
mov
movsb
clc
sbb
xlat
stc
inc
jg
mov
mul
mov
mov
add
gs
ss
outsl
dec
js
sbb
pop
xchg
je
cmp
push
pop
sub
mov
push
jmp
xchg
ret
test
movsb
test
aad
fistps
push
or
add
movsb
test
insb
xor
mov
cs
xor
and
mov
stc
sbb
sub
cli
pop
add
inc
clc
mov
and
xor
mov
xorl
or
dec
arpl
mov
xchg
sbb
push
push
imul
mov
mov
and
xchg
adc
icebp
hlt
adc
push
jbe
mov
std
jge
push
call
mov
sub
lods
push
mov
jg
mov
mov
jg
std
lea
add
aaa
imull
xchg
add
ret
add
aad
das
mov
dec
mov
jg
xlat
pusha
mov
cld
pusha
dec
stos
add
jp
adc
sbb
in
scas
js
insl
ljmp
xchg
mov
adc
pop
xchg
mov
dec
mov
or
pop
insl
in
sbb
in
jmp
and
andb
cmp
sub
mov
or
mov
test
dec
push
pop
cmp
into
mov
out
rolb
add
mov
in
add
adc
lret
ljmp
icebp
dec
jecxz
orb
cltd
and
fsubrs
jo
ret
adc
inc
inc
insl
scas
pop
xchg
or
lahf
imul
dec
lret
out
pop
adc
add
popa
inc
dec
lods
sbb
cltd
mov
inc
mov
push
mov
xor
aaa
jbe
adcl
and
mov
xor
jmp
jnp
rcr
push
shll
call
ss
idivl
push
adc
push
mov
out
out
cmpsl
out
les
xchg
push
sub
dec
add
subl
push
xor
jecxz
push
jp,pn
adc
pop
int3
adc
call
test
ds
icebp
test
pushl
sub
loopne
inc
mov
xor
mov
mov
mov
imulb
pop
loop
push
rcrl
js
es
pop
pop
in
pop
hlt
dec
xorl
loope
ljmp
mov
je
fucomp
sbb
subb
stc
orl
es
aaa
xor
stos
or
mov
test
test
pop
pop
mull
iret
sub
pop
dec
aad
add
pusha
or
pop
movsb
inc
xor
stc
out
lahf
add
mov
pusha
cltd
sub
mov
dec
adc
sbb
addr16
inc
mov
imul
ficoms
sub
lret
xchg
dec
dec
sti
or
pop
xlat
mov
sub
push
aaa
dec
inc
push
addr16
jo
ja
push
push
mov
pop
notl
cmp
rclb
inc
push
loop
push
ret
mov
cmp
push
icebp
mov
daa
xor
jmp
cli
popf
jae
mov
sub
out
cli
arpl
jg
rorb
repz
jb
jle
cld
insl
and
hlt
popl
pushf
dec
inc
or
shl
or
imul
dec
outsl
clc
or
scas
jmp
ret
and
ror
adc
mov
loopne
test
cli
add
imul
mov
push
mov
cmc
xor
mov
push
mov
aaa
pop
jmp
scas
fucomp
push
int3
repz
aaa
data16
iret
dec
or
aad
movl
jp
test
test
jle
stos
cltd
jp
loope
andb
cmp
testl
shll
push
repz
xchg
push
scas
mov
sub
mov
pop
inc
xchg
push
aas
mov
push
inc
arpl
cmp
sub
inc
fisttpll
rcrb
lods
xor
mov
and
inc
mov
add
add
ficompl
push
xchg
hlt
jns
repz
dec
imul
pop
inc
divb
popa
in
nop
sub
jle
pop
xchg
mov
lds
js
and
dec
enter
jl
out
sub
mov
push
out
mov
stos
add
push
add
mov
mov
and
push
int3
mov
mov
push
cmp
sbb
xchg
adc
scas
outsl
xor
sub
orb
xchg
mov
test
pop
dec
adc
testl
out
addl
add
push
lea
pop
mov
xchg
and
mulb
neg
divb
mov
inc
or
roll
imul
outsb
cmp
mov
ja
ljmp
pop
push
dec
mov
into
jns
jp
cmpsb
ss
xor
test
or
xor
rcrl
outsl
pushf
dec
xor
jne
inc
add
mov
iret
add
mov
and
mov
pop
dec
cmp
aas
cmp
insl
add
out
out
lcall
add
das
or
push
stos
inc
shrl
mov
inc
xchg
iret
out
sahf
int3
addb
sbb
aas
iret
pushf
pop
lods
sbb
repz
out
sti
dec
mov
mulb
mov
aad
ret
gs
stos
or
pop
mov
cmp
in
in
popa
and
test
fs
aaa
scas
xchg
outsb
das
gs
lret
lock
mov
aad
pop
push
ret
and
inc
test
imul
pop
outsb
jecxz
test
stc
inc
adc
and
icebp
xor
or
sub
test
inc
add
mov
aad
dec
aaa
or
sub
rcll
add
xchg
fisubl
test
ja
pusha
cs
imul
popf
mov
fcoml
ret
bound
call
movsl
pushf
icebp
nop
xor
daa
sbb
sti
ja
add
and
out
mov
cmc
mov
in
push
test
mov
sub
lret
mov
aam
add
xor
cmp
mov
jle
icebp
es
sub
shlb
stos
push
add
cs
imul
leave
pop
add
popl
aas
mov
dec
inc
repnz
or
std
adc
jns
jnp
xchg
xor
and
jle
in
add
mov
mov
cs
fisubrl
push
cltd
insl
jle
adcl
inc
xor
pop
or
sub
lcall
sbb
push
into
cmp
imul
shll
loopne
push
int3
mov
fwait
cmpsb
outsb
mov
fldcw
nop
jge
mov
xor
mov
and
out
mov
stc
popl
mov
inc
daa
push
push
and
shrl
xchg
sub
test
negl
dec
xchg
jne
pop
and
aad
shrw
jg
shlb
xor
pusha
xor
mov
or
enter
imul
ret
add
adc
jne
icebp
inc
jecxz
and
xor
cwtl
aaa
sub
cmpsl
add
rcrl
cmp
nop
jno
cmp
inc
or
mov
inc
sub
pushf
inc
andb
aaa
imul
sbb
out
xchg
pop
cwtl
movsb
cli
clc
pop
hlt
bound
xchg
call
sahf
or
pop
ficoml
out
mov
mov
jge
mov
or
mov
sub
cmpsl
pop
xlat
adc
jbe
movl
test
xchg
or
cmpsb
mov
xor
in
add
sub
adc
mov
rcl
jbe
push
leave
mov
mov
loop
std
cli
cmc
dec
sub
adc
cmpsb
test
dec
lods
mov
pop
ds
mov
push
std
in
std
push
popf
in
mulb
dec
push
jbe
dec
je
das
push
rcr
jns
lahf
and
pop
mov
cmp
lret
mov
push
xchg
cli
push
mov
push
test
divps
test
mov
pop
andl
jecxz
xor
sub
add
and
jecxz
stos
iret
pop
xlat
fnsave
test
mov
dec
fs
pop
and
js
inc
sbb
dec
xor
repz
xlat
in
xor
lds
inc
fbld
sub
xchg
xor
jne
jmp
mov
cmp
adc
pop
sahf
insl
mov
xchg
loopne
iret
daa
push
pop
jae
into
test
push
leave
mov
movsl
imul
dec
emms
call
sbb
push
in
jle
push
add
std
rcl
push
aad
movsl
into
inc
das
out
pop
mov
dec
into
dec
aas
push
aas
jp
mov
xchg
fwait
lds
adc
cltd
xor
and
lcall
pop
outsl
movsb
xchg
push
xor
cmp
mov
sub
inc
stos
ss
mov
xchg
jle
push
testl
loopne
lds
int
rolb
and
sub
loopne
mov
les
stos
aad
test
push
xchg
adc
or
xchg
cmp
jbe
mov
gs
and
fsub
jmp
and
jbe
dec
stos
sahf
xor
aad
push
mov
stc
fwait
cmp
in
xchg
outsl
push
mov
pop
xchg
bound
rolb
dec
xchg
sahf
and
xlat
mov
mov
repz
and
sub
dec
in
loope
mov
push
mov
imul
lret
out
js
sti
cmp
push
js
cmpsb
stc
adc
imull
neg
lea
mov
push
testb
dec
in
mov
mov
xchg
fadds
xchg
jle
test
cmp
and
sub
pusha
pusha
sub
push
mov
xchg
enter
ret
out
pop
lret
sbbb
sbb
add
xorb
lret
cmpsl
sbb
jmp
or
xor
out
leave
stos
jnp
add
lea
mov
dec
shl
lret
outsb
test
out
fs
je
pop
mov
jns
dec
xchg
aam
cmp
dec
test
cwtl
insb
inc
mov
aam
dec
add
imul
out
aad
xor
mov
rcrl
inc
pop
insl
and
out
test
popa
add
arpl
mov
adc
pop
and
aaa
xchg
pop
and
punpcklwd
popf
sbb
jmp
jg
dec
mov
jle
mull
mov
dec
cwtl
js
leave
cmp
push
fidivrl
sbb
out
mov
pop
scas
cmpl
sbb
push
sbb
mov
pop
push
mov
push
popf
pop
and
data16
and
or
dec
cmp
add
inc
sbb
cmp
jl
movsb
jne
cwtl
repnz
lods
inc
mov
or
mov
add
sub
sub
out
stos
rclb
fsubrl
xor
fs
rorb
jmp
push
imul
pop
dec
mov
testl
inc
mov
std
fists
lahf
mov
cli
mov
inc
movsl
fistpl
xchg
cld
mov
lret
add
cmc
jg
pop
pop
ja
arpl
mov
adc
js
cmp
jp
inc
lock
mov
ret
push
out
inc
and
insb
mov
mov
cmp
pushl
add
insl
icebp
bound
xchg
jne
movsl
sbb
out
cmpsl
cmc
dec
add
cmp
xlat
adc
mov
mov
out
in
and
and
aaa
mov
mov
push
mov
scas
pusha
dec
sbb
mov
psubsb
in
push
fwait
cwtl
sbb
dec
mov
mov
add
lret
iret
sub
out
test
add
int3
lahf
lock
insb
xor
xchg
aad
cmpsb
dec
xchg
lods
inc
out
add
aad
dec
fistps
lods
ja
leave
cwtl
cli
sbb
pop
cmpb
mov
jmp
jns
xlat
lcall
sti
xor
mov
bnd
mov
or
pop
movsl
jge
int
outsb
call
lock
jbe
pop
push
mov
call
pusha
mov
xlat
movsl
mov
mov
jb
mov
insl
push
pushf
mov
or
mov
std
fisttps
adc
pand
std
sub
xchg
rorl
test
es
mov
pop
dec
jo
ret
loopne
outsl
and
hlt
jbe
cmp
dec
cld
fnsave
outsb
and
fildll
mov
cmc
test
xchg
jge
xor
cmc
std
aam
pushf
das
jg
xchg
testb
pop
xchg
hlt
repnz
pop
jl
cmpsb
cmp
rcll
sbb
ret
imul
mov
ds
sahf
test
int3
cmp
pop
insb
imul
aas
cld
rolb
cmpl
push
jl
jno
test
testl
test
int
cltd
mov
loop
jb
cmpsl
mov
stos
frstor
call
and
or
dec
insl
test
nop
or
sub
sub
xor
sub
or
jnp
jno
adc
fcomp
imulb
jne
mov
or
lods
sub
jbe
sub
push
mov
mov
in
xchg
adc
rcl
movsl
and
inc
aad
mov
insb
sarl
adc
cmc
scas
jo
jg
in
int
bound
into
addr16
out
adc
lahf
fsubrs
pop
rcrl
mov
mov
in
add
fisubs
test
test
jne
les
fcompl
and
or
mov
daa
js
scas
mov
ljmp
cs
add
add
fwait
cmc
mov
sahf
dec
je
ss
sbb
scas
outsb
push
sbbb
jae
sbb
stos
or
dec
sub
push
cmp
in
xchg
rorl
ljmp
mov
scas
pop
and
mov
lds
fwait
test
roll
push
leave
pop
popf
outsb
push
push
ret
dec
rcll
into
in
mov
fldl
cmp
aad
mov
rolb
inc
in
mov
or
push
out
stos
lods
movsl
or
cmp
popf
push
add
add
mov
bound
mov
or
xchg
add
push
mov
and
add
mov
cmp
pop
xchg
lock
movsl
scas
adc
jge
or
sbb
xchg
adc
fisttpll
pop
xlat
jge
inc
fistl
shrb
inc
dec
test
mov
mov
sbb
pop
inc
orl
xchg
aam
jecxz
into
xor
mov
sbb
clc
mov
in
bound
sub
fucom
std
dec
push
cmpsl
outsb
es
jnp
dec
jnp
pop
jne
push
lret
dec
gs
and
sbb
mov
aaa
inc
jle
imul
arpl
lret
sbb
dec
lods
push
or
mov
lret
dec
xor
in
sbb
jecxz
inc
cmp
lock
pushf
sbb
pop
adc
in
dec
repz
imul
add
or
add
cwtl
lods
dec
jmp
cmp
fldl
and
xor
fs
mov
mov
sub
push
das
mov
and
jp
lds
fwait
aad
xor
cmp
sbb
out
inc
aam
mov
pop
cmpsb
push
int3
jns
add
mov
adc
mov
push
ficompl
mov
xor
ficompl
jl
ja
xor
mov
add
pop
push
cmp
lahf
sbb
mov
mov
into
incb
fsts
jno
xchg
test
lret
test
and
add
stc
pop
ss
adc
notl
loopne
in
movsl
add
insl
out
sub
loopne
pushf
shll
mov
test
mov
in
cmp
sub
dec
dec
xor
incb
inc
pop
pop
push
sub
loope
rcrb
mov
sub
cmp
dec
jl
adc
dec
roll
enter
jns
or
lret
cwtl
push
inc
rclb
in
jb
pusha
mov
movl
je
out
mov
push
xor
push
cmpsb
or
jbe
mov
mov
inc
fmuls
jle
adc
fiaddl
clc
adc
imul
repnz
ficompl
sbb
test
mov
mov
sub
leave
jge
jl
push
xchg
dec
outsl
pop
jne
test
aam
movsb
or
icebp
inc
das
ljmp
aaa
mov
sbb
sti
cmpsl
lret
lds
mov
pop
cmp
dec
jl
hlt
cmpsl
cmp
das
xlat
loope
adc
xor
mov
pop
nop
sbb
cmc
std
mov
xchg
cltd
jne
ret
mov
xchg
add
ja
pop
sub
bound
ss
and
scas
cli
mov
bound
mov
mov
jl
insb
shlb
pminub
lods
push
mov
xor
xor
insb
mov
sbb
in
mov
fsub
mov
xchg
adc
cli
leave
andb
cmp
adc
sahf
add
or
xchg
out
inc
push
arpl
bound
push
dec
xor
cmp
xor
xchg
dec
and
sbb
or
les
in
outsl
sub
shlb
daa
lret
fidivrs
lcall
insb
pop
frstor
jo
rclb
push
dec
stc
mov
std
mov
jno
mov
call
xchg
nop
arpl
dec
sbb
jo
dec
hlt
pop
xor
out
rcll
mov
lahf
insb
call
mov
in
pop
sbb
in
and
mov
fs
pop
inc
jns
mov
std
fwait
sub
pop
cltd
jmp
jbe
bound
cmp
xor
and
push
pusha
push
pusha
pop
movsb
xchg
sarb
xchg
orb
pop
shr
cld
adc
in
testb
sbb
cmp
or
mov
loope
mov
stc
outsw
stos
or
xor
int3
fneni(8087
adc
cmp
adc
add
xchg
shlb
push
dec
inc
xchg
imul
cmp
int3
dec
pop
push
mov
adc
sub
cs
add
push
imul
sub
lea
in
test
rolb
or
and
xor
sbb
sti
adc
sbb
mov
shl
add
ljmp
lret
mov
insb
inc
jae
loope
out
mov
in
gs
xchg
out
jmp
mov
data16
fildl
cmc
test
repnz
stc
lret
jl
rcrb
mov
inc
addr16
jbe
inc
mov
imul
sub
clc
clc
daa
mov
sarb
inc
mov
scas
push
andb
mov
push
add
fs
jmp
in
sbb
je
cmpl
popa
into
add
xor
sarl
sahf
movsl
jno
repz
enter
outsl
lods
mov
stc
push
push
mov
add
insb
sbb
and
in
dec
and
sbb
jecxz
hlt
add
out
sbb
loopne
xor
arpl
and
add
dec
sahf
cmp
pop
testb
je
cmp
sub
dec
imul
inc
xchg
rclb
xor
mov
ret
sti
rorb
arpl
aad
ds
pop
mov
mov
arpl
insl
mull
testl
cmp
pop
jae
std
xor
lea
fmul
sahf
aaa
cmpsl
add
cmp
mov
mov
sbb
cmp
bound
mov
push
inc
fildll
mov
mov
call
mov
ficoml
mov
call
roll
sahf
jle
mov
mov
icebp
out
aaa
jno
dec
cmc
subl
mov
xor
xor
add
jo
in
shlb
outsb
xchg
testl
lret
scas
inc
pop
inc
sub
jne
and
in
pushf
lret
call
adc
or
sub
push
inc
pop
or
push
cmp
and
test
aam
mulb
pop
ret
lods
mov
daa
mov
nop
outsb
mov
add
push
sbb
mov
sub
imul
ds
push
shll
sbb
sbb
push
shrb
shrb
pop
xor
cmpsl
mov
mov
pop
insl
jp
pusha
add
shrl
adc
jecxz
incl
idivl
sbb
push
cmp
aam
xor
mov
mov
push
nop
fsubrp
push
inc
aad
lret
and
cmp
pop
jge
insb
and
mov
mov
jl
add
and
stos
push
ljmp
sar
mov
in
fiaddl
mov
andb
jp
xor
jno
dec
xor
jp
ret
ds
test
adc
xlat
lock
or
iret
sub
icebp
call
je
inc
sbb
in
mov
lret
sub
daa
dec
jp
jp
sub
aad
dec
cwtl
xor
xor
push
movsb
xchg
sub
push
mov
push
ret
repnz
aas
pop
xlat
scas
or
movsl
lret
jmp
imul
or
push
nop
adc
out
aad
inc
dec
lcall
hlt
dec
in
push
jp
mov
lods
add
jbe
aam
pushw
sbb
jo
into
jle
pop
shrb
loop
stos
lcall
xchg
ss
lds
in
scas
aas
add
mov
jns
add
aam
dec
adc
xor
inc
jge
popa
mov
mov
lods
bound
dec
xchg
daa
or
mov
fisubrl
pop
sbb
popa
aam
dec
sti
jns
mull
push
loop
test
dec
inc
xchg
push
mov
jns
sub
movsl
cmp
cmpsl
sti
cmp
aam
sti
mov
cld
push
test
shr
sbb
clc
push
xor
xchg
sub
aas
bound
pop
stc
lea
fxch
jp
push
ja
lea
jge
xchg
shrl
lea
or
icebp
pushf
mov
adc
cmp
pushf
ret
jle
pop
dec
in
fmul
ds
mov
inc
imul
mov
mov
outsl
int3
movsl
mov
or
lea
adc
and
repnz
popf
mov
fimuls
pop
fdivs
hlt
out
or
sub
test
pop
xor
add
mov
xchg
push
jle
push
daa
dec
jmp
stc
out
push
xlat
pop
test
adcl
addl
pop
mov
dec
sbb
cltd
sub
adc
test
sbb
insl
inc
std
and
mov
data16
js
pop
cltd
cld
outsl
lcall
fistpll
bound
cmp
dec
ret
sbb
in
pop
push
sub
xchg
mov
sbbl
enter
sub
hlt
push
mov
push
sbb
popf
pop
pushf
add
inc
inc
sbb
enter
xchg
add
out
push
repz
popf
out
sub
out
sub
inc
inc
stos
push
cmp
fadds
in
dec
jno
cvtpi2ps
insb
push
push
lds
cmp
repz
xor
je
cli
daa
das
and
movsb
fwait
jns
mov
lcall
cltd
sub
xchg
out
push
jb
fisubs
pop
sarb
cli
pop
sub
sub
pop
jg
sbb
lcall
sub
fildl
iret
daa
pusha
sbb
add
loope
cmp
aam
dec
ja
push
andb
stc
arpl
lcall
lahf
xor
stos
sti
jmp
pop
gs
lods
inc
stos
lock
cwtl
sbb
jg
xchg
shrb
movsb
movl
jbe
stos
cs
jge
lret
mov
dec
pop
lret
mov
jbe
gs
jg
push
daa
sahf
push
outsb
jb
loope
mov
jbe
push
int
fs
or
or
unpckhps
push
rdtsc
lret
sub
mov
jp
xor
lret
xchg
movsl
dec
sahf
hlt
fcomps
cltd
inc
inc
sbb
cmp
int
fs
movsl
jl
or
mov
rol
rorb
addr16
sub
aam
mov
addr16
xchg
pop
inc
pop
dec
adc
rcrb
mov
scas
push
mulb
sbb
test
push
ret
or
pusha
jo
clc
xorl
jae
xchg
mov
frstor
xor
push
mov
std
lret
imul
js
loopne
shlb
mov
lds
jl
xchg
adc
inc
int3
insl
stc
xchg
push
inc
and
pop
lahf
mov
mov
dec
mov
jae
insl
lar
insl
sub
aad
jae
test
mov
and
push
xchg
sub
push
int
mov
pmaxub
add
sub
xchg
outsb
ss
jb
dec
xor
ss
insb
stos
outsb
and
iret
sub
lret
mov
mov
scas
lods
mov
cltd
and
gs
push
mov
lds
add
imull
sub
cmp
gs
or
push
jo
sbb
push
and
push
pop
aaa
dec
or
adc
cs
xor
mov
mov
sub
roll
xchg
stos
sub
jns
dec
daa
pop
dec
lods
inc
pop
mov
pop
leave
add
push
sahf
dec
xorl
fcoml
push
xorl
pop
movsl
pop
add
hlt
jbe
lods
xchg
mov
xchg
jle
bound
add
test
mulb
fsubrp
cmp
lods
cmp
dec
mov
push
das
je
cmc
cltd
and
sti
sub
arpl
jne
pop
push
add
imul
adc
sub
mov
lret
cmp
jns
mov
fsubrs
ss
mov
push
sub
xor
xor
out
ljmp
pop
fnstenv
inc
fistpll
cmc
sahf
sub
pushf
loop
push
in
int
lcall
dec
rorl
xchg
aaa
add
push
stos
enter
ja
rcl
inc
cmp
push
les
or
fildl
rorb
cmpsl
jle
test
dec
inc
sub
repz
nop
pop
lret
dec
js
jb
js
les
les
jne
add
fldl
sahf
jo
xor
ret
stos
stos
sub
sbb
and
sub
jg
mov
lock
repnz
subb
stos
in
mov
dec
cmp
scas
add
out
or
cmp
lea
das
push
mov
pop
aas
pusha
inc
sbb
aas
stc
repz
mov
pop
jo
dec
movsl
fcmovu
mov
cmp
mov
push
adcl
mov
fadd
loope
fadd
mov
mov
lods
inc
sbb
aas
popa
or
inc
mov
scas
mov
insb
repz
and
mov
fildl
ret
xchg
cltd
lcall
inc
movsb
in
xchg
and
pusha
lea
scas
div
nop
dec
xorb
inc
or
lds
xor
push
js
scas
out
inc
adcl
negl
xchg
pop
outsb
mov
dec
pop
out
push
xchg
sbbl
je
arpl
xchg
daa
dec
in
xchg
pop
sahf
loopne
ljmp
mov
xchg
je
jle
pop
xchg
cmp
add
and
push
jg
rcl
aad
lret
pop
cmp
ficoms
sbb
idivb
ret
adc
jne
cmpsl
adc
jmp
mov
repz
mov
xchg
xor
scas
jmp
fisttpl
or
sti
aam
bound
adc
icebp
jbe,pt
sbbb
popa
and
divl
int3
sub
or
mov
into
mov
pop
jp
push
mov
int
aaa
shrl
sti
jne
insb
pop
cltd
adc
gs
test
lret
jl
adc
in
sub
js
and
icebp
pop
fdivs
push
ror
ss
mov
cli
popa
and
inc
insl
add
je
movsb
cmp
pop
add
mov
mov
popa
call
add
pop
jbe
out
test
inc
loopne
or
inc
fwait
pop
sub
jmp
imul
lds
push
dec
mov
std
out
fwait
sub
shlb
cmp
pusha
mov
js
xchg
push
fcmovbe
jg
mov
pop
icebp
pop
add
sub
lock
mov
inc
cld
movsb
sbb
aaa
test
jl
lsl
adc
mov
xor
add
sub
sub
adc
jge
popa
sub
jnp
gs
mov
pushf
loope
jns
cld
pop
popa
lods
jecxz
jno
or
mov
push
mov
xchg
popf
out
in
das
filds
add
xlat
pusha
sbb
in
sarl
movsl
mov
fdivl
fwait
push
and
leave
je
loope
push
jmp
cld
lcall
add
subl
aad
in
sbb
movsb
sub
dec
lea
dec
psubq
pushf
mov
inc
aaa
vmread
dec
pop
or
inc
sbb
or
mov
movsl
mov
xor
or
mov
imul
cmpsl
push
repnz
mov
addb
push
add
mov
cmp
stos
jae
xchg
mov
push
add
mov
adc
sahf
mov
jmp
cmpsl
or
test
cld
sbb
leave
lds
lcall
dec
mov
inc
mov
mov
pop
sub
mov
pop
xchg
js
xchg
test
sbb
mov
sub
inc
lcall
divb
popf
mov
adc
stos
mov
int3
loope
fstl
xlat
imul
push
dec
xchg
add
or
out
call
mov
inc
imul
mov
and
sbb
ret
sub
mov
scas
pop
mov
mov
pop
adc
cmp
jo
mov
fsubrs
cltd
mov
sub
mov
pop
pop
in
dec
int3
cmpsb
ds
add
dec
adc
leave
arpl
sbb
inc
cli
in
in
mov
rcll
lock
mov
mov
adc
in
push
movsb
pop
push
sbb
cmp
nop
mov
or
dec
jne
push
lret
inc
repz
jne
xchg
sbb
lods
adc
mov
fdivrl
out
out
sbb
dec
or
pop
cmc
repz
adc
mov
pop
pop
inc
cmp
jg
jp
sub
mov
aaa
inc
aas
sbb
fidivrs
mov
xchg
inc
adc
xchg
ret
jmp
inc
repnz
cs
rol
inc
out
add
iret
jns
scas
inc
leave
pop
xchg
test
xor
fmuls
inc
iret
pop
popf
testb
insb
and
xor
icebp
cwtl
fldt
push
insb
adc
lods
or
or
fnstsw
movsb
jo
xlat
sub
hlt
jnp
pop
jno
popf
add
lods
test
cmc
sub
xor
sbb
push
lahf
insb
lods
mov
rcrb
pop
rol
cmp
fcomps
mov
or
pop
lods
popa
cmpsb
addr16
inc
scas
ja
insl
mov
xorb
adc
mov
cmpsb
rolb
sbb
adcb
pop
stos
add
pop
lods
arpl
pop
enter
mov
sub
js
pop
dec
fbstp
mov
inc
mov
lock
push
xchg
test
pop
push
ss
gs
mov
pop
cmp
inc
subl
dec
add
jle
lds
jge
lret
pop
cmp
hlt
xchg
inc
adc
mov
xor
adc
cs
xchg
sub
aaa
xchg
js
sarb
mov
mov
scas
sahf
jns
stos
or
add
mov
mov
push
sbb
ror
es
mov
out
fcoms
lcall
into
stos
out
pop
pop
jnp
outsb
pop
xor
jae
and
mov
mov
add
divl
jo
out
lea
mov
je
fadds
cmp
push
out
pushf
add
lcall
rol
mov
xchg
xchg
dec
fstl
dec
inc
dec
mov
aad
add
fstp
aas
mov
mov
inc
fistpl
aas
cmpsl
repnz
ljmp
dec
or
movsb
mov
inc
jns
and
ret
js
push
test
cmp
push
pop
lds
cwtl
stos
sub
pop
fs
dec
jb
movsb
sbb
cmpsl
mov
push
inc
fsts
insl
or
pusha
mov
js
dec
cmp
mov
push
xchg
insb
mov
mov
inc
xchg
incl
and
push
xchg
cmp
shll
sbb
jne
lret
dec
sub
inc
cmp
push
jg
dec
notl
mov
add
pop
jp
mov
lock
jmp
gs
in
xchg
sub
stos
pop
jg
sahf
lea
pop
mov
daa
xor
sbb
scas
sbb
ja
cld
imul
sbb
lahf
sub
inc
jmp
push
icebp
test
xchg
movsb
loopne
add
pop
inc
lret
fldenv
js
inc
lahf
xor
dec
nop
rcl
lods
pop
xlat
jno
mov
lods
test
leave
into
ret
cld
and
movsl
aas
leave
mov
cmp
mov
sub
out
xchg
mov
pop
leave
shrl
fisttpll
mov
cmpsl
push
shll
testb
inc
mov
imul
pop
push
xchg
mov
mov
sahf
lret
add
sahf
xchg
test
sub
pop
addb
cmp
sbb
xor
jecxz
dec
cmpsb
sbb
cmp
lret
clc
out
lock
adc
insl
sbb
ret
sahf
sbb
xchg
rorb
or
scas
add
cmp
int3
mov
jge
xor
or
adc
into
call
add
daa
rorb
fwait
in
stos
and
xor
call
dec
popa
aad
xchg
push
out
pop
or
mov
jmp
and
sbb
ljmp
push
ljmp
scas
lret
icebp
into
xchg
dec
mov
dec
inc
jg
or
cwtl
inc
repnz
scas
cld
sub
sbb
jmp
mov
data16
icebp
jg
push
je
enter
pop
aaa
mov
pop
mov
xchg
andb
add
sub
js
inc
sahf
std
sub
rolb
jp
rcrb
adc
fwait
enter
adcb
push
rep
pop
pop
push
stc
daa
test
cmp
rcrb
les
inc
pop
or
xchg
push
data16
dec
jl
xor
push
pop
inc
das
shr
mov
or
mov
lods
into
cmc
sbbb
jbe
dec
rcr
cmc
subb
fadds
ficoms
fidivrl
mov
sub
test
mov
or
xor
xchg
push
enter
lock
adcb
inc
cmp
arpl
mov
or
push
in
mov
popa
adc
jns
cmp
or
bound
fs
inc
movsb
xchg
ja
je
arpl
jbe
cmpsl
pushf
aaa
xchg
lds
adc
inc
pop
cld
or
lea
mov
mov
jg
xchg
adc
sub
loope
mov
or
xor
scas
pop
pop
xor
daa
pop
into
ljmp
add
data16
jg
rclb
mov
push
sbb
pop
jg
pop
nopl
and
push
imul
lret
sub
ja
mov
pop
jo
adc
shrb
xchg
add
push
push
outsl
enter
mov
test
mov
sub
icebp
stos
mov
sti
sbb
cld
sbb
andl
dec
out
enter
mov
mov
cld
mov
push
cmp
mov
iret
xchg
xor
pop
test
out
mov
jecxz
inc
aad
cmp
mov
popa
std
movsl
jae
inc
fisttps
xchg
jo
pushf
ja
dec
pushf
sbb
sbb
push
pop
xchg
sub
imul
sti
mov
pop
push
movsb
popf
mov
jecxz
sub
shrl
in
pop
inc
enter
push
push
inc
mov
mov
das
outsb
ficomps
insb
lods
inc
lret
sbb
lock
cmpsl
fs
lock
push
cmp
xchg
gs
sbb
mov
fists
cmpsb
cmp
in
dec
mov
inc
cmc
inc
cld
cmpsl
dec
subl
xor
xchg
clc
add
cmp
lods
jo
popl
decl
inc
sarl
push
stos
cmp
movsl
out
xor
dec
mov
scas
sbb
mov
dec
repz
test
rolb
jno
pop
popa
test
ret
imul
xchg
rorb
das
ja
push
xchg
mov
test
push
imul
call
xorb
sbb
out
and
mov
cmp
jns
push
mov
mov
xchg
dec
std
lcall
adc
aas
daa
aaa
movsl
sbb
int3
mov
inc
mov
jle
inc
ja
loopne
scas
cmp
iret
dec
mov
fsubl
sub
ret
outsb
xor
pop
inc
sahf
sub
fwait
pop
aaa
lret
push
mov
pop
addr16
nop
xchg
stc
cmp
cmpxchg
add
pop
mov
cmp
push
je
in
pushf
xchg
add
daa
sbb
sbb
cwtl
sti
inc
ja
add
mov
out
iret
cmc
orb
xor
mov
cli
popf
and
rorl
out
jno
sbb
dec
fdivr
and
in
pop
dec
push
or
fldt
xchg
idivl
mov
enter
es
xlat
xchg
jle
loope
sti
xchg
push
mov
sbb
or
movsl
fdivrl
mov
mov
aaa
mov
notl
test
mov
rcl
jbe
xchg
mov
push
pop
mov
mov
pushf
movsb
cmp
pop
je
loope
cmpsb
mov
cld
mov
out
and
and
push
add
jecxz
sbb
sub
lahf
sub
sbb
aam
push
icebp
das
ljmp
pop
pop
es
enter
sub
mov
les
lods
ljmp
xchg
outsb
sbb
mov
out
cmp
mov
aad
out
and
cwtl
jp
xor
cmp
lea
movsl
test
movsb
cmpsl
push
movsl
testl
dec
cmpsl
jb
sbb
repnz
ret
sti
mov
mov
into
ds
sbb
dec
jbe
cmp
mov
stos
cmp
dec
into
push
fists
sub
pop
jmp
fstl
lods
sbb
sbbb
cmpsl
jge
push
dec
xor
pop
scas
testb
shr
mov
add
call
lea
sti
jnp
jnp
int
fldl
sbb
jl
inc
sub
test
mov
pop
pop
clc
xchg
sub
mov
jbe
sahf
jae
cwtl
das
mov
movsb
mov
push
pop
xorl
jo
push
fwait
mov
adc
jb
lods
cwtl
adc
cmp
out
inc
dec
or
pop
push
adc
jmp
mov
leave
sbb
push
ret
js
fldl
sbb
or
outsl
or
ja
fistl
push
mov
mov
jbe
popa
push
cmc
sbb
jp
jne
je
and
add
mov
jmp
adc
cmp
pop
sub
rclb
mov
fs
fs
movsb
movlps
mov
push
pop
xchg
pop
in
inc
xor
and
stc
shll
lcall
push
xchg
inc
adc
sbb
pop
xchg
fsub
bound
sbb
outsl
fldcw
outsl
lret
mov
inc
adcb
mov
jg
jp
mov
mov
lock
or
lret
xor
inc
cmpsb
mov
rcrb
rep
in
push
mov
jecxz
in
pshufw
insb
mov
xchg
scas
into
jmp
or
pushf
daa
enter
sti
ret
push
hlt
shlb
fwait
or
adc
sbb
dec
mov
mov
jns
mov
xor
outsb
cmp
xor
push
sbb
push
fnstenv
test
rolb
add
or
imul
xchg
jle
sti
jns
jbe
sbbl
xor
sbb
dec
mov
lock
dec
orl
mov
mov
sub
pmullw
adc
xor
dec
xchg
dec
xchg
movsl
aad
jne
lret
sbb
mov
in
xchg
push
add
addr16
fldl
xor
sbb
jbe
pop
scas
les
pop
setp
into
mov
stos
cmp
lcall
movsl
dec
pop
pop
xchg
cwtl
cmc
inc
jbe
data16
pop
jecxz
lcall
inc
outsb
add
xchg
mov
push
lods
inc
dec
loop
int3
dec
pop
adc
xor
insb
cltd
and
int3
dec
fsubrs
subb
into
push
cmp
jmp
rcrb
mov
popa
add
jmp
jnp
sbb
sub
maskmovq
push
inc
loopne
jle
call
dec
ret
sub
movsb
das
or
push
push
jbe
fmul
test
lcall
lock
outsl
outsl
cmp
inc
lods
ret
test
and
or
xor
mov
movsb
data16
sub
mov
add
cmp
pop
enter
cmpsb
or
pop
pop
cmp
and
add
flds
jge
sbb
add
sub
lock
push
mov
push
xchg
and
adc
dec
push
and
push
test
addl
fwait
addl
es
hlt
in
pop
jl
sahf
cli
repz
fldenv
mov
lret
fwait
push
sti
or
push
gs
jno
add
fcmovu
out
in
xchg
push
ficoml
test
shlb
fsubs
movsl
jb
rcll
fs
xchg
push
ret
add
mov
adc
out
xorl
and
sbb
test
cmc
mov
ss
mov
hlt
ja
mov
mov
mov
jnp
aas
push
ds
jno
jne
ljmp
ja
adc
mov
in
pop
inc
mov
jnp
imul
mov
xor
inc
mov
pop
cmp
pop
xchg
pop
mov
jl
inc
cmp
jle
sti
in
gs
sub
sbb
jle
bound
ret
pop
adc
in
shr
jp
mov
add
fstl
sub
fisubrs
ds
call
stos
mov
xchg
lret
mov
and
lcall
inc
xchg
and
xor
movsl
add
je
arpl
mov
adc
add
sbb
sbb
lds
fs
mov
mov
repz
mov
sub
dec
or
out
mov
and
shll
movsl
lea
jae
fsts
loope
mov
movsl
loopne
adc
ret
int3
test
leave
sarl
jmp
mov
cmpsb
out
in
xchg
popa
inc
fs
cmpsl
and
shrl
daa
adcb
mov
shlb
and
into
ljmp
sub
jmp
adcb
ja
xlat
fadds
xchg
jle
test
andl
popf
sahf
lahf
adc
pop
into
or
ss
or
popf
mov
pop
movsl
in
leavew
nop
test
ja
mov
addr16
push
enter
push
adc
imul
std
sub
push
sahf
rcll
aam
cmp
mov
inc
push
jnp
lret
mov
inc
cmp
jns
test
loop
int3
movsb
mov
cwtl
mov
xor
inc
mov
sti
imulb
add
cmpsl
push
jns
lods
xor
jns
inc
jle
leave
pop
or
es
adc
and
inc
pop
push
jae
in
pop
cli
sbb
jo
outsl
shll
imul
and
bound
mov
xchg
adc
popf
test
int3
or
fcoml
ds
ret
sub
add
mov
leave
out
mov
pop
sahf
lea
xor
jecxz
jge
sbbl
lods
lret
push
mov
jmp
push
adc
call
ret
cmpsl
xchg
jecxz
inc
popa
push
sbb
pop
mov
or
adc
pop
sti
cmpsl
dec
jbe
shll
repnz
mov
xor
mov
ja
icebp
inc
mov
push
xor
or
inc
enter
or
fs
jl
mov
cmp
test
inc
fld
popa
dec
jmp
pop
fucomi
cli
in
rcl
sbb
lahf
sub
ror
push
sbbl
inc
mov
bound
mulb
pop
jecxz
jb
lock
out
sub
jns
add
sbb
lcall
scas
sub
jle
sub
pop
into
hlt
stos
mov
loope
jns
ja
mov
pop
and
xchg
mov
cmpsb
subb
mov
addr16
stos
stos
push
mov
mov
repz
aaa
add
and
and
xchg
nop
mov
push
jg
adc
mov
jo
enter
inc
repnz
adc
mov
xlat
lret
and
gs
cld
xchg
popa
inc
mov
pop
cmp
pop
hlt
das
mov
js
pop
shl
jmp
cmp
or
insb
outsl
pop
sbb
insl
mov
cwtd
lods
adc
sahf
sbb
sbb
inc
mov
mov
jnp
adc
cltd
sbbb
mov
jl
fiaddl
xchg
xor
sbb
xor
jno
popa
andb
mov
push
pusha
pop
push
push
test
daa
sub
add
or
inc
lret
test
je
mov
or
push
inc
pop
inc
insb
das
leave
pop
inc
mov
out
inc
movl
add
int3
jg
push
mov
or
add
addb
add
sbb
dec
jno
rclb
and
mov
jnp
inc
out
enter
aaa
loopne
insb
jecxz
rclb
in
pop
and
nop
movsl
insb
clc
fisubl
jne
aaa
inc
jns
xor
mov
xor
push
push
lcall
dec
fsubrl
je
xor
push
cmp
std
cmpsl
aas
inc
jp
es
push
push
daa
popf
lods
mov
dec
popf
loop
pop
mov
lcall
dec
je
idivb
xchg
adc
in
jge
jb
aam
loopne
ret
xor
in
bound
movsl
divl
push
and
imul
jmp
pop
bnd
xor
mov
fstp
cmpsl
cmp
mov
js
or
cmp
outsl
jnp
aad
in
repz
xorl
cmp
stos
stos
ret
incl
divl
dec
mov
adc
pop
or
icebp
lcall
push
je
fwait
cmp
push
je
mov
repz
cmp
inc
in
adc
mov
push
cs
sarl
cmp
divb
leave
mov
popf
add
fs
imul
outsl
inc
xor
dec
sbb
scas
sti
jae
push
mov
stos
js
mov
daa
divb
sbb
gs
push
inc
scas
sub
hlt
jns
sahf
dec
enter
or
mov
push
jecxz
pop
dec
loope
aam
mov
dec
or
pop
sbb
mov
mov
fists
push
imul
jbe
mov
adc
mov
scas
push
bound
cmp
js
fwait
popa
pop
movsl
push
mov
push
pop
int
imul
imul
push
mov
addr16
shll
dec
inc
jecxz
dec
icebp
xor
mov
js
outsl
out
rol
je
es
dec
cmp
jno
outsb
repnz
adcb
mov
jle
rorl
xor
mov
stos
iret
sub
fsub
pop
outsb
insl
pop
lds
push
and
insb
cmp
ss
adc
dec
inc
sub
or
lahf
add
xchg
pop
cmp
push
adc
jle
mov
sarb
cmp
dec
mov
inc
mov
push
or
or
addr16
es
xor
dec
inc
lock
push
or
mov
and
dec
in
cld
jne
mov
out
jae
push
adc
clc
pop
popa
f2xm1
mov
lds
fs
sbb
add
outsb
sbb
inc
and
into
jae
daa
fistl
mov
scas
cmc
adc
gs
loope
xbegin
sub
ja
adc
mov
cmpsl
scas
xchg
mov
pop
fnstsw
mov
test
jg
dec
mov
repz
dec
pop
mov
fdivrl
cwtl
mov
cli
dec
in
or
jge
dec
xlat
pop
jne
rcll
xor
into
test
in
push
dec
test
inc
or
mov
jp
and
adc
push
xor
pop
or
test
filds
cmpsb
outsl
fmuls
mov
insl
or
push
push
popf
ljmp
mov
out
pop
xchg
dec
xchg
aas
and
test
or
xor
and
mov
inc
adc
lods
lret
mov
inc
mov
lods
push
scas
adc
out
cmp
int
imul
fnstenv
adc
ds
bound
in
rorl
ret
vmovq
out
jb
hlt
jb
js
out
jmp
nop
addr16
call
mov
aad
add
inc
mov
mov
inc
cmpsl
pop
mov
inc
jg
adc
rcl
dec
daa
imul
aaa
leave
lret
daa
jb
fadds
je
addr16
cmp
std
jp
xchg
xchg
and
outsl
inc
stc
stos
push
and
add
in
cltd
movsb
out
push
jg
out
sti
push
or
xchg
adc
fdivp
aaa
mov
push
and
jge
lods
push
incb
push
cmp
push
js
jl
xchg
cmp
dec
js
mov
mov
lret
xor
loopne
loope
mov
lock
insb
test
les
inc
cmp
mov
lds
fchs
divl
and
iret
mov
loope
sub
push
fidivrs
lds
ret
test
fistps
pop
inc
mov
shl
xchg
sbb
pusha
movsb
fistpll
inc
push
insb
addb
shr
dec
scas
ss
cmp
stos
pop
les
cmp
popf
shll
mov
dec
sbb
mov
jcxz
daa
jae
lods
es
insl
dec
test
gs
push
jg
xor
push
jp
mov
pop
push
insl
push
jnp
frstor
mov
or
or
push
das
mov
rorb
and
jbe
pop
jl
push
adc
mov
add
pop
cli
mov
mov
out
jecxz
sub
loop
inc
imull
adc
push
das
iret
andl
repz
aam
ret
cmp
lahf
dec
push
popa
push
jbe
arpl
xor
push
pop
arpl
fadds
outsb
sub
mov
orb
aaa
or
fwait
jbe
fists
shl
jno
arpl
xor
imul
fwait
fwait
inc
push
loop
divl
add
lcall
sub
sti
mov
std
insl
sbb
es
sub
jnp
xor
xchg
mov
mov
cwtl
in
pop
xchg
jae
mov
and
add
cmp
inc
push
pop
loopne
lahf
mov
add
shlb
ds
loopne
rcl
mov
xchg
out
adc
mov
out
push
sbb
jl
jno
fnstenv
xchg
or
mov
or
push
dec
in
push
push
pop
push
popf
cmpsl
mov
push
test
out
add
dec
mov
rcrb
iret
cltd
icebp
mov
sti
jg
jmp
out
push
cld
dec
xchg
aam
out
cmpb
fs
push
and
into
popa
mov
cmp
xchg
std
lds
hlt
xchg
push
push
arpl
insb
data16
out
jg
push
pushf
jp
imul
lea
scas
imul
add
jecxz
adc
cli
imul
das
adc
push
mov
ss
pop
ljmp
int
mov
lea
push
push
pusha
aas
push
imulb
jbe
sbb
fsubl
ljmp
call
and
rcl
mov
sub
test
es
int3
fildl
add
adc
cmpsl
mov
xor
das
ror
subb
and
push
rorl
imul
je
cltd
and
sbb
xchg
or
clc
sbb
dec
cmp
or
cmp
incb
adc
or
adcb
add
and
out
js
rcll
xrstor
sti
mov
push
lcall
lods
sbb
xor
jb
push
push
cld
stos
into
pop
xchg
iret
push
insb
xchg
mov
inc
jmp
or
inc
lods
leave
xchg
stc
pop
add
cs
sbbl
sbb
ret
test
pop
push
out
scas
mov
sub
fidivl
mov
shll
and
stos
push
fisubrl
insb
xchg
xchg
sub
cmp
inc
pop
or
std
sbb
ljmp
inc
sub
in
add
mov
into
pop
push
mov
mov
mov
shlb
mov
test
shlb
jp
in
xor
push
add
cmpsb
sti
add
sub
push
add
scas
loop
push
sbb
rcl
inc
and
imul
push
dec
mov
aaa
add
rcrb
lret
push
inc
cwtl
ret
jmp
push
popa
or
in
lock
jne
addl
insb
sub
into
leave
sub
xchg
and
dec
pop
xor
shll
add
push
arpl
cmc
and
pop
dec
aam
push
ret
push
lods
cmp
cmpsb
ret
fiadds
out
cli
lds
mov
sub
ljmp
sbb
pop
add
mov
jmp
lods
das
push
cltd
imul
sub
incl
dec
xor
lock
sub
mov
jbe
mov
and
jns
test
adc
xor
les
sahf
addr16
mov
push
mov
jle
outsb
outsl
outsl
imull
in
test
stos
mov
jmp
mov
repnz
sbb
lahf
call
mov
jp
scas
imul
lcall
rcr
imul
xchg
or
push
fwait
lret
dec
scas
sahf
jo
and
lods
cltd
push
iret
jmp
je
adc
pushf
xchg
inc
sahf
xchg
adc
test
push
jecxz
andb
cmc
cwtl
ret
mov
arpl
dec
movsl
es
adc
and
and
pop
repz
nop
icebp
inc
pop
icebp
jbe
testl
adc
lods
xchg
sub
sbb
xchg
xchg
jb
lea
in
push
divl
inc
aaa
sub
hlt
in
cmpsb
aam
pop
insl
xchg
popa
fcmovnbe
gs
jae
adc
jo
inc
rcll
xchg
push
jb
call
sub
das
in
push
jmp
es
push
fmull
pop
mov
lret
adc
push
dec
and
xor
shr
call
fidivrs
decl
leave
mov
xchg
mov
pop
stc
mov
mov
or
repz
mov
jbe
ret
das
imul
jmp
sbb
rcrl
jno
rorl
stos
sbb
dec
ds
push
nop
out
sbb
dec
bnd
pusha
mov
sub
std
in
jb
gs
les
jbe
icebp
aas
push
aaa
mov
hlt
movsl
cmp
nop
popa
push
js
ss
push
pop
mov
add
lods
hlt
cmp
out
push
std
pop
outsb
addr16
dec
out
xchg
cmpsl
std
rol
dec
adc
mov
and
add
and
push
movsb
cmp
sti
mov
js
pusha
cmp
or
rcll
fwait
xchg
inc
test
dec
dec
arpl
push
bound
bound
and
movsb
mov
fstl
pop
jmp
push
dec
pushf
xchg
icebp
jmp
inc
rorb
test
xchg
xor
lahf
mov
repz
mov
and
jge
leave
push
sub
inc
int3
jmp
aam
nop
fldenv
rcrl
sbb
and
fidivrs
dec
ds
loopne
pop
mov
or
shrb
jge
sub
int
lret
jnp
in
inc
mov
fimuls
mov
int3
daa
lods
test
out
mov
add
dec
clc
xor
insb
scas
nop
les
and
out
and
sbb
xor
mov
test
ficomps
pop
lea
push
or
mov
mov
add
add
adc
out
arpl
out
insw
das
sti
lea
dec
ja
xor
fsubr
lcall
clc
cmpb
fincstp
or
inc
push
adc
je
adc
ret
daa
mov
inc
mov
ret
ficompl
sbb
pop
push
fstl
push
xor
arpl
pop
data16
sbb
andl
inc
sar
mov
fdivr
xlat
push
or
loopne
pop
pop
mov
or
nop
in
sbb
mov
mov
mov
mov
rcrl
sahf
jae
jl
inc
pop
cmp
mov
or
lods
aas
stos
mov
mov
push
out
ret
je
outsl
lock
vsqrtps
adc
es
data16
fdivrl
adc
pusha
ljmp
or
sbb
bound
jg
popa
or
xchg
sub
js
repz
mov
stos
ds
loope
pop
xchg
or
jno
cmp
mov
out
stos
inc
xlat
push
ficoml
mov
loope
cmp
and
sub
out
adc
mov
int3
or
insl
pop
mov
push
lcall
hlt
cmc
mov
shl
sbb
das
sar
mov
mov
les
stos
inc
je
or
ret
lret
jg
cmp
mov
fidivrl
dec
sahf
jbe
or
dec
fisubrs
adc
xchg
mov
pop
push
mov
loope
out
scas
push
fists
aas
mov
aad
cmc
mov
cmpsb
fwait
push
aaa
push
lcall
ja
push
fmuls
outsb
inc
shlb
cmpsl
cwtl
jecxz
enter
inc
or
xchg
loopne
imul
pusha
push
arpl
dec
insl
mov
pusha
icebp
dec
push
enter
pop
inc
fs
je
push
add
inc
loopne
cli
or
jb
daa
dec
cmp
lret
fmull
fiadds
push
sbb
jg
stos
mov
adc
add
mov
jne
rcrb
inc
rol
and
adc
divb
cmpb
mov
add
push
pusha
sub
sbb
in
mov
clc
les
jo
pusha
jbe
xchg
das
adc
hlt
test
popa
xor
fildl
inc
sahf
or
es
ss
ret
xor
ss
dec
add
mov
pop
jp
xchg
imul
lds
xor
stos
push
fidivrs
jbe
add
ja
out
jmp
insl
mov
pop
jno
pusha
xor
stos
sbb
test
mov
lock
or
jo
cmc
loopne
test
xchg
imul
jb
sbb
or
dec
inc
add
adc
jl
xchg
shl
sbbb
xchg
add
lcall
lea
es
inc
push
mov
or
jecxz
mov
push
jbe
hlt
xchg
das
xor
lahf
push
cmp
jne
mov
cmpsl
inc
ds
insl
js
dec
jp
pop
lcall
negb
mov
enter
test
ret
or
sbb
lds
jmp
pusha
paddusb
adc
aaa
push
jl
stos
hlt
push
adc
sbb
push
pusha
sbb
xor
sar
xchg
in
fadds
xchg
mov
push
adc
cmpsl
adc
insl
inc
dec
or
jnp
or
adc
jno
fdivrs
out
pop
pop
ja
mov
cmp
leave
mov
int
mov
loopne
fs
clc
jbe
pop
fidivs
in
dec
mov
fsubrl
mov
mov
mov
movsb
idivl
mov
inc
jnp
jnp
lret
adc
outsb
enter
cmp
cmp
mov
cltd
add
sbbl
out
stc
fists
xchg
inc
push
movsl
mov
aas
pop
dec
jmp
inc
clc
into
stos
xor
mov
ljmp
mov
and
add
in
aas
pop
iret
pop
cmc
inc
shl
icebp
sub
ljmp
insl
daa
inc
roll
es
rcrb
mov
jp
xchg
enter
or
aas
jnp
mov
mov
xchg
rcll
xor
jecxz
iret
fistps
mov
in
clc
stos
mov
and
clc
xor
aas
sub
xor
sub
fsts
inc
or
pushf
stos
jg
or
cmp
test
sub
mov
enter
xchg
push
pop
xchg
and
or
push
pcmpeqd
lahf
pop
rorb
fninit
mov
or
dec
dec
and
cmp
jmp
xrelease
fucomip
dec
add
sbb
jne
push
mov
xor
cld
jnp
cmp
ret
mov
mov
pop
pusha
and
inc
sbb
cmp
dec
mov
inc
insb
ljmp
je
mov
mov
push
bnd
test
adc
popf
add
addr16
add
push
loopne
jns
inc
mov
push
inc
pop
adc
enter
rcrb
inc
inc
aas
dec
sub
shrl
rolb
movsl
ficompl
iret
dec
pop
out
pusha
add
xor
jl
adc
add
cmp
push
cs
cmpsb
movsl
into
dec
dec
icebp
cmpsl
arpl
outsb
loope
or
push
fwait
xchg
xchg
push
popa
sub
jo
xchg
mov
in
mov
jg
fcomip
mov
jo
push
cmp
fmull
ds
hlt
imul
sub
adc
mov
and
jecxz
std
sbb
in
inc
ja
mov
xchg
pop
jae
mov
mov
pop
sbb
das
movsl
jle
sar
and
mov
cmp
mov
mov
xchg
or
xor
adcl
inc
mov
push
cmp
popa
xor
inc
or
xchg
movlps
iret
inc
xchg
mov
add
mov
xor
sub
loop
rorb
out
adc
pushl
daa
sbb
lock
out
loope
mov
pop
push
add
shl
into
dec
leave
or
es
cmp
mov
dec
les
jns
lcall
xor
negb
ret
lret
into
adc
sahf
or
shlb
call
sarb
add
out
xor
cltd
jb
loopne
and
loope
mov
repnz
or
je
push
xchg
insl
fisubrs
mov
fcomip
jge
rorb
fucomip
scas
es
popf
lahf
and
subl
cmp
leave
or
icebp
jbe
mov
mov
or
mov
jecxz
ret
pop
aaa
mov
push
add
lret
ret
vmovntps
xlat
push
add
xorb
and
inc
fwait
mov
jg
inc
iret
xor
sub
mov
jg
push
lret
stos
out
cli
adc
insb
cmovge
xlat
cltd
and
cmpl
xchg
test
imul
lea
or
or
xor
adc
mov
in
push
xor
mov
push
or
xor
sbb
xor
and
scas
mov
push
dec
mov
cmp
push
jae
pop
dec
xchg
mov
jae
mov
mov
sarb
rorb
xor
insl
ja
mov
aaa
arpl
mov
dec
jbe
in
shl
pop
mov
mov
add
repz
add
fwait
ljmp
xorb
push
and
movsb
subl
clc
lret
pushf
out
dec
arpl
out
je
jp
push
mov
lods
push
dec
ret
sbb
mov
outsl
xor
cmpsl
in
sbb
aas
fbld
xchg
or
movsb
xchg
loop
inc
jmp
jae
aaa
roll
lret
push
es
mov
pop
out
lret
xor
call
mov
inc
and
hlt
ss
hlt
je
clc
in
dec
add
cmp
mov
outsb
das
sbb
mov
mov
pop
jo
cld
in
cmp
fldl
push
pop
push
xor
jnp
mov
add
pop
ds
push
sbbl
test
int
outsl
mov
mov
daa
jmp
mov
sub
loop
xlat
jne
jne
xchg
inc
and
cmp
and
adc
je
lahf
bound
push
cmp
mov
aam
xor
out
mov
outsl
xchg
sbb
cltd
cmp
pop
repz
pop
xchg
stos
dec
gs
shlb
sti
shll
or
push
inc
out
or
imul
arpl
leave
jns
aas
mov
xchg
push
fisubs
pop
sbb
dec
pop
imul
mov
pop
cmp
mov
cs
or
jmp
add
insb
movsb
loop
lods
cmp
add
fs
xor
sbb
cmpsb
in
sahf
stos
xor
jge
int
packsswb
pop
insl
jae
xor
mov
negb
sti
nop
cmpsl
cmc
push
cwtl
int
dec
inc
and
push
nop
jg
sub
lcall
rcrl
popl
jb
push
and
pop
enter
clc
imul
jmp
arpl
mov
adcb
cmp
imul
mov
sti
repz
jo
test
push
jo
pop
lcall
inc
jl
fdivl
mov
sbb
add
jg
mov
push
dec
jo
call
cmc
shl
fwait
mov
dec
cli
pushf
cmp
data16
add
std
fcmovnb
mov
push
lea
or
fwait
sahf
mov
and
stc
data16
iret
sub
mov
inc
in
push
push
jg
jns
orb
or
xor
hlt
mov
dec
xchg
shll
dec
xor
mov
pop
add
insb
iret
xchg
xlat
out
sub
jp
jbe
ret
pop
inc
mov
jnp
bound
push
cmp
pushf
fwait
sub
add
inc
dec
mov
add
mov
shrl
sbb
mov
or
cmpsb
or
iret
mov
add
xchg
dec
popf
rcrb
lds
push
test
adc
inc
mov
add
cwtl
incl
fnstcw
add
cmp
xorl
mov
mov
movsl
or
mov
jne
and
fs
mov
xchg
call
orl
nop
sbb
or
sub
inc
jb
lods
ret
mov
xchg
jne
pop
test
addr16
outsl
andl
pop
fldenv
jl
stos
testb
out
pop
sbb
pusha
jp
mov
jno
clc
cmp
adc
repnz
xor
out
jmp
mov
push
add
pop
jg
fwait
jne
sarl
fdivrl
xchg
dec
fs
mov
mov
jge
clc
pop
cli
in
out
xchg
dec
dec
addl
data16
mov
mov
push
sbb
std
or
xor
adc
mov
insl
jne
xor
add
push
movsb
lret
and
push
mov
mov
in
inc
es
add
or
push
jne
mov
mov
repz
sarl
dec
loopne
inc
ja
mov
adc
add
jge
mov
loope
jg
cmp
movsb
mov
inc
cmp
insl
xlat
push
xor
icebp
add
outsl
jae
lret
mov
pop
xor
stos
mov
in
popl
insb
sbb
xlat
sbb
sbb
jbe
in
es
cmp
pop
and
dec
jb
and
mov
loope
ret
out
xchg
or
test
dec
xchg
in
jg
out
out
jmp
inc
sub
xchg
cmp
sti
mov
outsl
push
cmp
mov
inc
push
mov
jne
addr16
inc
sbb
bound
jg
push
inc
add
mov
cld
pop
mov
in
dec
and
enter
in
cmc
mov
and
cmp
filds
push
push
push
and
push
jae
mov
imul
cwtl
adc
add
outsl
mov
data16
inc
std
and
js
or
lods
mov
xor
push
aaa
adc
lret
xchg
mov
sub
push
in
pop
insl
push
outsb
fnstenv
pop
sbb
mov
push
pushf
test
adc
push
mov
xchg
mov
loope
mov
addr16
mov
into
sbb
adc
add
movsl
das
dec
sub
jg
das
out
mov
imul
sahf
push
mov
in
int3
cmp
pop
xor
xor
jb
loope
xchg
jmp
icebp
push
jne
inc
in
stc
mov
loop
into
scas
mov
pop
movsl
aaa
jne
les
mov
sarb
mov
fxch
pop
ljmp
std
lods
jb
add
repnz
fisubrs
int
cmp
stos
or
es
adc
clc
pop
xchg
outsb
je
rcrl
insb
pusha
icebp
mov
mov
je
movsl
jp
add
and
lock
fcmovnb
jno
inc
leave
dec
mov
orl
jnp
ret
insb
inc
push
mov
mov
cmp
addb
mov
or
aam
cli
push
aaa
dec
sahf
xchg
stos
dec
int3
fistpl
enter
dec
addr16
cmp
jmp
ret
mov
mov
adc
testl
lcall
push
in
mov
mov
mov
inc
or
adc
out
std
jnp
lock
popa
push
dec
mov
insl
lods
xor
mov
mov
in
repnz
mov
clc
loopne
xor
inc
mov
dec
in
ficoml
jae
ss
jle
dec
aaa
sbb
cltd
out
js
inc
xchg
fwait
sub
arpl
je
data16
and
call
lahf
sbb
push
ljmp
mov
cltd
pusha
mov
mov
xor
mov
lods
pop
or
cwtl
jp
inc
enter
push
and
jo
cmpb
mov
repz
jne
xor
adc
lret
jns
mov
adc
stos
popa
dec
pop
add
lods
ja
daa
enter
sub
lods
or
mov
push
mov
jae
xor
pop
in
in
and
fcomps
scas
clc
outsl
dec
adc
aaa
aam
lods
jno
jp
ljmp
sub
fsts
xchg
push
push
push
outsb
inc
int
adc
or
std
lea
xor
xorl
call
rcrl
mov
into
dec
adc
cmp
add
sbb
and
pusha
xor
sbb
inc
or
ds
dec
pushf
push
sti
popa
sub
fimuls
lcall
push
aam
repz
fcom
mov
inc
bound
xchg
mov
loopne
mov
or
pop
test
fimuls
sbb
scas
loope
mov
push
aad
jmp
adc
imulb
push
notl
jae
movsl
stc
lds
lea
pop
sub
fnstsw
dec
inc
push
mov
ljmp
repz
or
fldcw
pushf
dec
jns
pop
and
popf
push
jmp
scas
xchg
dec
cli
popa
fsubrp
fsubl
outsb
leave
sub
test
insb
and
dec
mov
cltd
mov
out
adc
add
daa
jae
jmp
mov
mov
cmp
pop
ja
cmpsb
adc
xchg
push
sub
jb
imul
and
mov
push
lret
out
subb
lock
jl
cwtl
loope
adc
xchg
dec
mov
das
mov
and
sti
gs
add
ljmp
mov
add
enter
les
mov
xor
repnz
inc
xor
ret
add
xor
or
jecxz
mov
push
sbb
outsl
xchg
mov
stos
and
jne
cmp
outsl
cltd
int3
push
and
cld
mov
cmc
icebp
mov
bound
aaa
lcall
adc
jnp
push
std
sub
and
jl
sub
adc
loope
shll
loop
mov
addb
mov
cmp
push
cli
pop
call
popf
jecxz
mov
jo
sbb
pop
push
jg
aas
push
push
or
add
call
sbb
ret
adc
pop
rcll
jg
iret
lcall
adc
pop
cld
and
test
jl
hlt
test
filds
mov
nop
icebp
enter
rorb
adc
and
pop
in
sahf
fisubs
lea
negb
cmpsb
sub
mov
mov
pop
cmp
nop
and
xchg
push
movsb
testb
jge
scas
xchg
mov
lods
arpl
outsb
mov
ret
mov
or
cmp
pop
out
or
sub
loopne
daa
push
push
sbb
and
jl
ds
xor
push
push
jmp
imul
xchg
pop
cmp
mov
or
rcll
addb
or
nop
ss
insb
fildl
mov
fmuls
pusha
repz
add
jecxz
cmpl
and
bound
js
adcl
inc
xchg
out
jo
inc
xorb
fisubs
faddl
rcrl
add
mov
dec
mov
and
sub
xchg
in
mov
shlb
mov
sbb
fmuls
sarl
mov
push
jecxz
sbb
pop
gs
loopne
ja
xchg
inc
push
iret
loopne
iret
in
add
add
dec
insb
les
jle
push
pusha
lret
and
sarl
lret
mov
dec
out
dec
sbb
and
lret
cli
inc
mov
jmp
test
or
adc
dec
xchg
and
mov
cmp
push
mov
push
mov
in
lret
sbbl
or
sbb
dec
lret
push
jecxz
stos
sbb
xchg
adc
mov
push
dec
dec
pop
push
lret
jne
jb
pop
int3
rcll
jne
adc
mov
sub
cltd
and
iret
jmp
adc
ss
xor
lret
sti
cltd
xor
iret
adc
inc
xchg
das
xor
imul
xorb
jmp
push
fstps
imul
int
jno
xchg
cmpsl
dec
lret
mov
push
pushf
mov
test
mov
aas
adc
lock
sbb
jae
pop
cmc
xor
xchg
push
mov
dec
jno
push
addl
int
add
lcall
cs
test
add
mov
pop
dec
sub
push
xchg
dec
out
xor
aad
leave
clc
aad
push
ja
pusha
or
sbb
scas
in
add
mov
mov
lods
sub
loop
add
cmp
xor
int
ja
cld
and
push
scas
push
cmp
or
stos
bound
lods
stos
add
mov
pop
fsubrl
daa
out
cmp
cld
lret
push
xchg
sbb
ja
popf
or
sbb
xchg
mov
cmp
mov
add
divl
sbb
movb
adc
adc
les
shlb
stos
imul
and
inc
jmp
push
or
rcrb
mov
pop
jmp
in
dec
inc
push
repz
insb
lret
pop
out
lcall
push
jne
in
in
popf
sub
inc
pop
in
lret
lock
aad
mov
decl
add
in
popl
and
and
jmp
aam
fldenv
andl
cmpsl
lea
jae
loopne
loopne
mov
test
and
addl
pop
and
test
les
jmp
xor
mov
sbb
scas
sub
rcll
adc
loope
mov
lods
sub
call
imul
icebp
pop
adc
adc
jg
sub
leave
xchg
notb
xchg
idivb
jg
mov
mov
or
ljmp
xchg
movsl
jge
jmp
insb
inc
mov
loopne
loop
mov
shr
adc
lret
dec
cmpsb
out
or
cmp
es
test
mov
leave
cmp
inc
dec
ret
rol
xchg
xchg
xchg
bound
aad
sub
sbb
shl
lcall
pop
jne
add
mov
mov
lea
mov
mov
andl
jns
sbb
test
enter
aam
dec
iret
popa
not
das
xchg
loope
and
dec
pusha
mov
es
rcll
xor
sub
pop
sti
lea
sub
les
icebp
pop
lock
push
add
aam
mov
fsubs
sti
pop
push
jecxz
mov
loopne
mov
shl
mov
or
arpl
mov
cmc
and
ljmp
mov
push
imul
lret
inc
movsb
xor
stos
and
lods
inc
fimull
sub
fcmovne
out
fisttps
test
movsl
iret
imul
pushf
in
mov
mov
shlb
les
or
sbb
pop
pop
push
sahf
inc
sub
lods
ret
adcb
pop
dec
shlb
test
sbb
mov
add
add
gs
pop
or
arpl
xchg
repnz
add
cmp
shlb
fdivrp
in
dec
and
sarb
outsb
addr16
cmp
xor
nop
in
mov
mov
stc
mov
call
ret
cmpsb
ret
out
lcall
popf
sarb
cmpl
cmp
pop
or
and
xor
pop
out
popa
ret
lahf
pop
add
das
cmp
pop
inc
out
push
cmp
imul
push
push
inc
pop
inc
insb
leave
dec
pop
sahf
inc
mov
int
rolb
or
daa
fcoms
pusha
arpl
lods
adc
xor
mov
jecxz
xchg
rclb
cmc
mov
es
push
hlt
sub
pop
fbstp
and
into
pavgw
or
xchg
fucomi
fs
adc
jge
sbb
div
push
mov
scas
ret
inc
icebp
pop
or
jg
cld
jb
scas
cli
addr16
aad
rolb
ss
das
adc
aaa
jle
and
add
nop
loope
jmp
not
add
dec
imul
inc
popa
icebp
in
adc
mov
cli
and
leave
aam
ljmp
mov
inc
int
adc
inc
iret
sbb
inc
jb
imul
int
mov
loop
mov
sbb
sub
or
mov
cmp
lret
nop
dec
xor
mov
mov
sti
push
push
jbe
adc
cli
or
xchg
inc
mov
mov
push
imul
sub
adc
xor
mov
pushf
mov
and
cmp
clc
sub
xlat
mov
xor
pop
scas
mov
mov
gs
mov
icebp
mov
call
jnp
jmp
adc
jp
add
push
jge
in
idivb
movsl
push
add
pcmpgtb
dec
dec
test
cli
jne
mov
mov
loop
movsl
mov
cs
insl
into
dec
dec
in
outsl
push
push
daa
dec
mov
xchg
pop
xor
mov
pop
lock
sub
stos
mov
loopne
and
pop
xchg
cmp
cmp
fs
jnp
lret
push
xor
pop
push
shl
mov
int3
ret
lret
loop
sub
and
pop
js
cmp
test
sbb
mov
mov
stc
movsl
add
push
mov
daa
add
sbb
je
aad
or
add
fadds
filds
inc
arpl
push
sbb
packsswb
test
and
mov
inc
cmp
test
xchg
pop
mov
repnz
leave
sarb
fnstcw
lahf
adcl
aad
or
or
add
adc
jbe
xorl
scas
and
stc
icebp
fcmove
test
push
in
test
xor
cmp
jne
mov
xchg
mov
ljmp
xlat
xchg
xchg
mov
mov
jge
xor
push
push
stos
mov
pop
test
add
add
outsl
xchg
sarb
sub
repz
icebp
or
xor
dec
xchg
pop
fstps
or
movsl
xchg
cmp
mov
aad
cmp
fs
pop
or
xor
subb
inc
sbb
cmpsl
sub
pop
loope
jne
enter
jae
push
es
mov
in
sub
xchg
imul
jb
fcmovbe
sahf
lods
mov
pop
cmp
mov
xor
scas
push
pop
fsub
cmp
xor
cli
call
andl
std
bound
push
negl
out
pcmpgtb
mov
push
fimull
or
push
cmp
dec
push
imul
push
add
and
adc
or
xor
pusha
cmc
push
outsb
or
fstpt
sub
sbb
mov
lock
inc
rcr
sub
xchg
lahf
shr
sub
mov
into
xchg
add
add
lods
cmc
sbb
pop
test
cli
inc
push
inc
iret
jmp
push
jno
int
insb
repnz
int3
mov
je
sbb
pushf
jecxz
clc
idivl
xchg
sub
dec
lods
mov
addl
xchg
mov
push
idiv
sub
mov
test
loope
jbe
cmp
dec
test
aad
mov
mov
cmp
push
xor
or
push
inc
movsb
push
sub
loope
negl
imul
sbb
pushf
jns
sub
loopne
dec
inc
or
call
push
lods
or
mov
fwait
sub
jp
dec
and
lock
rorl
add
cmpb
ja
shl
xor
es
out
rolb
sub
das
fmull
xlat
mov
jle
mov
enter
xlat
lods
pop
or
insl
xchg
cs
push
test
jle
inc
icebp
lret
faddl
xchg
pop
xor
mov
test
push
xchg
in
ds
imul
adc
sub
jnp
imul
in
push
cmova
ljmp
fcmovnb
pusha
daa
in
fdivrl
inc
push
add
inc
push
pop
imul
add
add
adc
jge
shlb
jg
jge
aas
jns
outsb
cmpsl
cmc
xlat
arpl
lret
fmuls
outsl
test
xor
cltd
movsb
xchg
mov
xor
pop
jp
test
fdivl
or
mov
sbb
hlt
jp
in
pop
lcall
lea
sbb
mov
je
cmp
xchg
or
aad
sbb
lret
xchg
cwtl
cld
imul
test
sub
xor
jle
sbb
iret
js
std
rclb
and
loop
mulb
jl
fbstp
and
xor
and
out
pushf
pop
movb
push
push
lret
iret
jnp
jle
add
int
mov
mov
inc
dec
ficompl
aad
mov
enter
xchg
push
add
xor
rorl
jle
xchg
adc
js
lock
loop
push
mov
mov
hlt
xor
pop
out
aad
push
inc
rcr
je
flds
xchg
jg
outsl
push
cmc
dec
shll
test
jl
fistps
loopne
aam
divb
arpl
pop
call
jle
pop
cli
dec
and
iret
sbb
push
js
push
jnp
stc
out
fiaddl
xor
js
mov
das
inc
cwtl
push
pushf
imul
in
cmp
dec
sahf
arpl
mov
cmp
or
inc
popa
scas
movsl
imul
pop
mov
loopne
xchg
mov
daa
push
sbb
xchg
mov
jmp
es
lods
fs
std
arpl
ror
lock
push
into
stos
add
inc
mov
fisttpl
clc
dec
addb
sahf
fimull
popa
or
cmpsl
cmp
xchg
push
daa
ret
in
add
inc
ja
and
sub
xchg
in
fstpt
mov
out
loop
push
jle
rorb
inc
or
cwtl
cltd
loope
and
inc
iret
cmp
hlt
pop
imul
nop
mov
dec
cltd
int3
rclb
scas
pop
in
repz
gs
enter
in
aam
xor
outsl
mov
sub
mov
test
push
xor
xlat
loop
mov
adc
mov
out
dec
or
ret
sub
and
pop
cwtl
leave
jae
repz
add
cs
pusha
shll
divb
cmp
add
or
into
jmp
in
pop
and
test
jbe
ret
pop
fisttpll
shll
out
mov
sbb
loopne
pop
jmp
adc
cmp
xchg
mov
in
test
pop
add
jle
mov
cmpsb
stos
pop
arpl
lods
ret
adc
lahf
adc
mov
and
pop
ss
adc
clc
imul
hlt
call
pop
adc
popa
fs
fadds
ja
call
push
or
push
adc
xorb
pop
call
mov
push
adc
dec
addr16
in
jbe
mov
cmp
jmp
in
xchg
test
mov
xchg
cltd
stos
imul
pop
mov
push
mov
cmpsl
fcom
sahf
ds
out
xchg
xlat
popa
push
lock
push
pop
mov
jnp
stc
push
out
xchg
lods
lret
insl
out
int
xchg
xor
push
mov
sbb
push
sahf
outsl
mov
out
pop
cltd
bound
cmpsb
enter
loopne
mov
je
mov
mov
add
rolb
fsubs
arpl
jnp
fdivrl
repnz
inc
jbe
mov
std
mov
scas
dec
test
mov
xor
int3
adc
dec
stc
loope
addr16
lahf
in
xchg
xchg
stos
aas
leave
inc
mov
mov
and
mov
sahf
mov
pop
ljmp
push
push
pushf
xlat
rolb
dec
lods
fnsave
inc
dec
mov
jmp
mov
inc
cld
divb
loopne
jb
test
shrl
lret
cmpsb
jg
enter
out
aam
push
bound
fisttpl
fidivrs
or
add
loopne
data16
add
std
jo
ffreep
cltd
into
ret
and
in
and
int3
lock
outsb
loop
add
pop
jns
pop
or
xor
mov
cmp
icebp
pop
lahf
add
mov
leave
sti
pop
sub
or
sti
cmp
push
por
xor
or
inc
and
pop
rolb
std
mov
jno
add
push
mov
sub
xor
mov
cs
mov
push
or
cmpsb
cmp
mov
xor
pop
lahf
sti
mov
pop
clc
pop
das
jb
data16
mov
mov
jmp
stc
popa
enter
insl
and
in
movsb
inc
xlat
dec
sbb
jp
sub
movsb
sub
lcall
pop
lcall
cmp
dec
sub
gs
loope
mov
mov
push
stc
pop
sub
das
in
repnz
orb
push
push
cmpsl
fwait
neg
aam
int
xor
shrl
inc
mov
inc
mov
dec
aad
xchg
gs
fcompl
adc
frstor
pop
mov
xchg
lret
cld
or
rcrb
out
test
xlat
test
push
mov
sbb
dec
jge
add
add
and
jnp
cs
rcrl
in
adc
in
je
nop
divb
insb
in
in
cltd
insb
jo
push
movsl
push
xchg
in
scas
jne
loope
dec
dec
jne
push
loope
mov
mov
mov
in
dec
sbb
shlb
out
lret
mov
adc
push
aam
shll
or
into
push
inc
imul
inc
cmp
dec
fisubl
xor
mov
call
mov
push
cmp
inc
aad
sub
aaa
cmp
repz
cmp
jecxz
xchg
jl
adc
cmpsb
or
add
pop
and
stos
adc
ds
or
dec
mov
daa
scas
cmc
push
pop
fstl
mov
jle
jg
jmp
movsb
xor
or
loop
adc
test
xlat
std
xor
push
mov
in
test
mov
lret
popf
js
daa
jo
clc
fists
push
sub
jno
mov
shrl
mov
in
cmpsb
pop
aad
push
loop
cmc
sbb
inc
add
ds
aad
rol
ja
or
lret
out
cmpsb
and
cmpsb
mov
stos
jecxz
pop
out
fmul
inc
jp
cs
sbb
jge
in
subl
shll
xchg
clc
pop
leave
xor
cs
add
or
stc
xchg
xchg
rcl
std
or
lods
scas
movl
jae
mov
cmp
and
push
mov
stos
add
jmp
inc
in
mov
xchg
pop
adc
movl
daa
pop
pop
movsl
outsl
stos
push
in
inc
fcmove
inc
push
repz
or
sti
cmp
sub
inc
cmp
jbe
xlat
xchg
push
pushf
jp
push
mov
jne
test
mov
sub
cmp
pop
mov
int
or
sub
pop
or
add
es
xor
test
je
addb
stos
xor
add
out
fldl
test
rol
xor
sub
or
inc
pop
adc
xchg
mov
mov
mov
xor
xchg
inc
pop
xlat
cmp
or
fs
or
cld
stos
lea
mov
aad
lahf
stc
shr
cmp
push
mov
aas
cmpsl
adc
sub
andl
sub
leavew
mov
jns
pushl
jae
sub
call
out
dec
cli
jmp
int3
movq
in
sub
xor
test
mov
mov
subl
mov
cmp
inc
ds
fisttps
add
test
mov
sbb
inc
addr16
inc
mov
mov
imul
loopne
mov
cltd
loopne
fimuls
push
stc
mov
add
das
pextrw
arpl
repnz
test
push
mov
rorb
jnp
pop
pop
out
repnz
shll
mov
adc
loopne
outsl
jg
sbb
xchg
add
decl
test
xor
add
hlt
or
adc
jb
xchg
add
xchg
add
gs
daa
sbb
sbb
outsb
jmp
repz
xchg
or
xor
mov
xlat
push
negb
ret
in
inc
aam
cmp
lea
mov
adc
dec
ja
movsl
call
rorb
pop
ret
mov
jbe
test
sub
adc
popa
push
xor
les
enter
insb
scas
mov
push
pop
inc
mov
add
add
cmp
rorb
andl
push
mov
fs
inc
shl
shl
scas
ss
sarl
pusha
test
cmc
insb
cmp
pushf
mov
pop
in
ja
and
inc
scas
jecxz
mov
lock
cmp
nop
not
sub
lcall
adcl
jecxz
pop
jge
enter
add
push
and
fnstcw
push
cli
inc
movsb
jns
mov
stos
data16
popf
push
xor
ljmp
pop
mov
fdivrl
call
add
bound
incl
mov
push
pop
jmp
call
scas
cld
int3
add
ret
xor
mov
jns
mov
in
out
andb
ret
pop
xchg
mov
mov
test
push
xlat
scas
ret
sub
andl
push
shl
sbb
fldl
lret
cmp
push
push
lods
out
sbb
enter
add
data16
test
xor
push
mov
cltd
arpl
shl
jnp
mov
aaa
xchg
sar
pop
add
inc
aas
mov
or
cmpsb
sub
mov
add
inc
mov
xchg
mov
dec
or
jp
pop
mov
scas
jnp
test
adc
fbld
out
fs
push
shl
jl
ret
and
hlt
jo
xchg
jbe
repnz
test
jle
ja
decl
leave
and
mov
dec
mov
out
int3
imul
add
std
jnp
pusha
fstp
mov
out
int
cli
fsubp
xchg
adc
aas
into
pop
add
loop
in
cmc
pop
movsb
movsb
bound
push
jmp
and
fdivp
cmp
shlb
insl
push
push
mov
aam
mov
enter
add
push
cltd
ret
add
pop
call
fs
sub
xor
leave
push
inc
and
aam
lret
mov
arpl
lea
iret
nop
scas
leave
test
lods
adcb
cltd
add
addb
imul
push
ss
inc
jne
and
cmp
sub
pusha
pop
pop
xor
ficoms
sub
cmpb
adc
add
inc
inc
pop
aaa
or
push
cmc
aad
jle
shll
ljmp
push
ljmp
jge
mov
sub
jle
pusha
xchg
out
adc
xchg
xchg
icebp
mov
adc
mov
or
inc
lock
pusha
sub
out
add
push
callw
dec
push
sahf
iret
xor
push
adc
filds
sahf
sub
push
inc
adc
mov
addr16
int3
mov
mov
adc
mov
mov
divl
or
fmuls
sbb
xorl
shrl
int3
je
jmp
mov
js
sub
jg
lods
push
jge
jbe
sub
cmp
or
ret
jae
repnz
cltd
sub
imul
add
mov
pop
imul
ss
cld
stos
in
or
arpl
push
sbb
mov
cmp
jge
mov
push
fcomps
mov
ficompl
rclb
popf
lods
stos
fucomip
adc
and
scas
shlb
test
hlt
insl
fistpl
cmpsl
into
xlat
push
cmp
lea
in
lahf
or
sbb
in
mov
dec
cmpsl
fdivrp
or
test
lods
mov
lods
jno
mov
xor
enter
xor
push
sahf
sbbl
loop
lret
or
pop
mov
xor
jmp
cmp
push
pushf
mov
sahf
lock
cmpsb
pop
sbb
notb
icebp
jecxz
sub
dec
pushf
ret
cmp
ljmp
and
pop
out
inc
out
add
ret
jecxz
jae
add
mov
mov
cmp
hlt
mov
cltd
or
stc
mov
xchg
cmp
cmpsl
inc
cmp
adc
push
in
inc
dec
dec
aas
or
jns
gs
sbb
cmpsb
icebp
adc
loope
push
popf
sub
shlb
jbe
nop
mov
ret
add
lods
or
popf
push
fcoml
adc
mov
inc
fnstcw
xchg
and
int3
adc
add
mov
pop
push
and
and
jns
mov
or
mov
in
adc
mov
adc
jg
in
in
aad
jnp
hlt
pop
outsl
pop
gs
sbbb
insl
data16
outsb
pusha
test
lea
pusha
fldl
mov
xchg
dec
jg
mov
pop
cmpsl
pop
sbb
clc
scas
mov
ret
push
cmp
fyl2x
sbb
out
mov
int3
sbb
jae
mov
sahf
mov
fsubs
cmc
ss
out
div
scas
ret
andl
xor
xchg
pop
xchg
xlat
jl
xchg
fiaddl
scas
mov
inc
fsubrl
enter
imul
jo
pop
int
adc
or
jae
or
pop
sbb
xor
sbb
jecxz
jo
xchg
sbb
pop
rolb
adc
push
scas
xor
out
repnz
jnp
xchg
mov
cmc
xchg
bound
and
sti
mov
push
aas
sbb
out
std
xlat
clc
popf
adc
fcomip
inc
iret
cs
or
cmp
inc
std
cmp
pop
jo
adc
inc
dec
xor
test
mov
cli
push
adc
dec
push
xor
testb
xor
xchg
mov
iret
imul
mov
out
stos
mov
push
aaa
fidivrs
js
js
jne
adcb
bnd
test
sti
cmp
dec
pop
sub
sub
inc
fcoml
int
or
mov
jle
cmc
add
sbb
vmaxpd
add
and
lock
mov
or
adc
pusha
jg
add
test
xchg
sub
adc
jo
fldl
sbb
pusha
mov
dec
orl
dec
ja
mov
mov
add
inc
push
stos
jbe
lahf
ljmp
pop
adc
add
dec
push
outsl
sbb
pop
call
stos
imul
sbbl
es
out
xchg
mov
das
sub
out
sub
push
or
ret
cmp
dec
jae
pop
fidivrl
inc
iret
and
inc
jnp
sbb
inc
fucomp
lret
mov
cld
jno
sti
popa
lods
jg
inc
mov
and
cmp
je
cli
bound
pop
icebp
or
and
mov
fldcw
shll
in
xchg
stc
popl
imul
stos
mov
lret
sti
mov
xor
mov
or
cmp
out
fwait
pop
adc
mov
cmp
xor
pop
cmpsl
lods
xlat
stos
pop
bound
mov
xchg
dec
in
mov
in
cmpsb
divl
sti
cmpsb
sbb
push
nop
stc
or
call
pop
scas
jecxz
movsb
and
fiaddl
cmp
lods
lods
out
pop
hlt
xchg
lock
into
jo
dec
mov
sub
mov
xor
or
and
fistpl
test
pop
outsb
sub
cmpsb
cmp
push
or
lcall
xchg
cmpsb
fdivrs
jl
cmpsb
scas
or
inc
lcall
sub
or
inc
fdivs
mov
cmp
leave
mov
fisubrs
sbb
push
insl
xor
roll
dec
jl
out
stos
push
push
aad
jns
mov
lds
hlt
mov
push
xor
lcall
add
imul
or
xor
scas
adc
enter
fadds
mov
push
pop
fistl
and
mov
cmp
dec
jmp
mov
push
sub
mov
imul
fldz
xchg
stos
cmp
or
dec
jo
lods
mov
jae
inc
ficoms
mov
add
scas
mov
inc
movsb
dec
cmpsb
int
inc
js
adc
dec
sbbl
out
dec
pop
inc
js
jno
lea
inc
rol
and
inc
adc
jmp
mov
mov
mov
jg
or
pop
setnp
push
mov
enter
dec
sub
sub
xor
adc
insl
stos
sub
sub
push
insw
xchg
pop
sarl
cmpsl
jp
inc
int
push
jp
jl
push
mov
outsl
fdivrs
dec
lds
push
repnz
fwait
and
pop
fnstsw
push
arpl
inc
or
jne
cs
push
stc
lea
lahf
icebp
out
cmp
cmp
cwtl
sub
call
loope
stc
adc
add
fistpll
sub
fstps
pop
aad
aad
jmp
pop
add
add
jbe
cmp
mov
shrb
push
jg
mov
imul
xchg
and
mov
xchg
fwait
in
cmp
sbb
arpl
mov
inc
or
not
jne
push
or
mov
cld
cmp
dec
arpl
xchg
jg
inc
cmp
scas
repnz
xchg
or
sub
and
adc
lret
dec
mov
jae
mov
add
mov
add
ficomps
loope
call
push
add
inc
push
push
clc
cmp
imul
mov
insl
push
sti
jnp
pop
das
inc
mov
test
jne
std
aaa
cwtl
cmpsl
sahf
and
idiv
mov
xchg
stc
out
loope
cmp
insl
mov
dec
jecxz
xchg
mov
jmp
sub
dec
aas
or
sub
xor
cmp
popa
jns
ret
xchg
pop
fcmove
jle
xchg
push
movl
fdivl
sbb
pop
mov
ss
xchg
shrb
mov
rcrb
and
fucomip
pop
xchg
jecxz
lea
sub
dec
dec
push
int3
rolb
inc
sub
lret
aas
inc
and
js
jae
ds
sbb
dec
mov
cmpsb
push
dec
xor
pop
into
leave
leave
movsl
cmp
push
insl
lods
daa
mov
nop
les
mov
out
inc
or
cmpsl
cli
sahf
pop
shll
sbb
loope
cmpsl
das
push
arpl
bound
pop
stos
jge
mov
mov
mulb
cs
mov
dec
push
fsubrl
bound
int3
jmp
xor
xor
and
mov
faddl
ret
cmpsb
mov
cmpsl
outsl
arpl
jns
addr16
mov
mov
mov
xlat
lahf
pop
jl
fstl
mov
xchg
fwait
loop
adc
int3
adc
mov
mov
pop
icebp
imul
adc
aas
aam
ret
jge
repnz
in
insl
sbb
into
sub
or
mov
jb
rep
mov
fists
pop
imul
xor
das
jns
jbe
repnz
pop
mov
pop
icebp
jns
dec
jl
xor
fwait
inc
into
enter
ds
mov
addr16
xlat
sar
push
xchg
xor
sarl
cs
cmpsl
clc
mov
sbb
aad
pop
xchg
cmpsb
jl
stc
cmp
pop
sti
mov
out
sub
mov
pop
sub
fmuls
lahf
hlt
faddl
fstpt
mov
faddp
jmp
movl
xor
outsb
sti
mov
cmp
lds
mov
push
push
and
dec
cmp
inc
jle
mov
xor
lods
cwtl
and
push
jo
out
inc
mov
int3
pop
pusha
pushf
jecxz
repnz
ja
jge
sub
loop
push
push
or
jae
adc
mov
mov
mov
stos
cmpsl
jae
leave
dec
cli
and
stos
int3
xchg
jno
or
pushf
arpl
mov
add
xlat
add
or
shll
mov
fildll
lahf
or
dec
int3
insb
jge
cmpb
sub
pop
cmp
and
push
xchg
lods
pop
aad
sbb
ljmp
cmpsb
movsl
mov
xor
repz
dec
fldl
lcall
push
leave
repnz
sbb
dec
frstor
dec
inc
cmp
and
inc
mov
jge
outsl
scas
xchg
push
cld
mov
daa
jge
cmp
int
test
pop
adc
aad
xor
inc
sbb
adc
dec
clc
insb
subb
mov
out
push
cltd
mov
js
mov
int
outsl
sbb
idivl
lods
dec
sbb
inc
sub
out
jle
es
imul
je
cmc
orb
xchg
scas
push
jbe
xorb
out
jne
xor
gs
mov
add
subb
lret
or
stos
sbb
dec
cmp
test
bound
popf
sub
clc
jl
inc
push
xchg
mov
js
mov
jo
ret
out
mov
outsb
pop
cltd
push
sub
out
adc
dec
dec
jp
mov
add
xchg
jmp
ffreep
jne
into
sbb
xchg
dec
jno
rol
imul
cltd
jmp
add
push
movsb
out
dec
into
mov
das
jmp
inc
xchg
int
adc
dec
insb
pop
imul
xchg
enter
mull
adc
and
in
test
sub
adc
push
imul
inc
adc
mov
sbb
xor
pop
out
mov
lea
mov
imul
jle
movsb
div
int3
mov
inc
outsb
std
mov
mov
cli
in
insl
or
movsb
std
test
loopne
mov
sub
dec
xor
jb
es
aas
jo
jns
jno
data16
fsubrs
test
lds
pop
push
out
lods
pushw
mov
cmpsl
sbb
pop
jp
xor
ret
push
into
xchg
sbb
mov
pop
aam
ret
aam
cmp
sbb
in
pusha
or
push
subb
pop
popa
rorb
mov
push
dec
pop
mov
in
xchg
aas
rolb
test
xchg
int
sub
xor
nop
add
mov
mov
mov
int
fnstcw
rol
jo
xor
inc
fbstp
xchg
lock
outsb
insb
lock
test
test
mov
mov
loop
addb
shlb
mov
xchg
inc
loop
mov
clc
lahf
je
mov
inc
sbb
add
xor
sub
data16
loop
cwtl
cmp
in
fwait
dec
rorl
xor
into
inc
jg
cltd
push
push
mov
xchg
addr16
imul
sbb
adcb
sbb
push
daa
movsl
pop
push
out
rclb
je
cmp
rolb
mov
xchg
cmc
jbe
inc
mov
jnp
dec
pop
jmp
test
ss
int3
sub
pop
rorl
fldenv
push
sar
xchg
inc
xor
fdivs
inc
insb
cmp
sbb
xor
fstpl
aad
jbe
push
stc
inc
fldl
fucomp
repz
into
sarb
sbb
call
aas
xchg
imul
jge
add
mov
jae
adc
icebp
push
xchg
orb
jmp
aas
ret
push
fists
adc
or
insl
mov
xor
xor
xchg
pop
int
in
push
inc
pop
xchg
cmc
int
inc
mov
cmp
insl
cmp
pop
adc
jae
push
mov
cmp
xchg
pop
inc
loopne
shll
scas
mov
lds
jnp
jl
dec
mov
lods
loop
mov
push
std
movsb
lret
lock
mov
mov
cmc
sub
out
push
loopne
shl
adc
je
lret
mov
push
add
or
push
std
ss
jge
push
negb
loopne
les
pop
inc
add
nop
aaa
repnz
pop
shrl
cmp
inc
xchg
pop
imul
cmpsl
mov
and
add
outsl
data16
pop
int
aam
pop
std
jle
andb
jno
push
jns
in
add
imul
jecxz
mov
jge
enter
stos
inc
in
stos
xchg
in
xorb
clc
inc
insb
pushf
add
call
ficompl
lcall
mov
fldcw
cwtl
movsb
jmp
jne
push
or
xchg
add
xor
mov
cwtl
dec
add
xor
repz
pop
movsl
cmovae
icebp
sub
mov
and
iret
aaa
lds
push
jge
and
adc
sbb
mov
xor
fwait
add
test
sti
dec
repnz
jno
cmp
cmp
aam
mov
push
and
adc
xor
insl
add
xchg
dec
roll
iret
or
xchg
xor
add
or
nop
lds
in
data16
xor
jmp
inc
jge
dec
inc
push
repz
les
xchg
cld
aaa
push
mov
mov
xchg
adc
pop
outsb
mov
xor
pushf
fstp
outsl
push
lea
or
das
dec
xor
jmp
out
lahf
inc
add
mov
aaa
and
and
lcall
jle
inc
mov
orl
sbb
rcll
loop
push
lds
test
enter
aad
xchg
shll
bound
loopne
lahf
out
jmp
xchg
aad
jmp
xchg
jo
nop
xchg
push
mov
cli
aad
jb
push
jno
push
in
xor
clc
dec
aas
mov
into
outsb
mov
push
cs
popl
outsl
add
inc
sub
test
jb
scas
mov
xor
add
jp
and
call
dec
sub
in
ljmp
ds
lret
lods
ljmp
push
sbb
nop
cltd
xchg
push
shlb
jo
adc
push
les
cmp
and
mov
push
cmp
lahf
fcoms
aas
add
imul
aas
push
xor
mov
ret
inc
in
xchg
fs
adcl
jbe
mov
loope
stos
pop
cmpsl
repz
aam
xchg
dec
pop
loope
and
repnz
cmpsb
mov
movsb
aas
inc
mov
sbb
push
inc
add
mov
pop
lea
add
inc
pop
movsb
add
cmp
inc
lods
in
lret
stc
xchg
call
cwtl
arpl
scas
aas
inc
insb
scas
fsts
ret
inc
adc
loop
les
add
adc
scas
mov
xchg
cs
and
into
cltd
mov
adc
ret
cmpsb
jo
je
sub
mov
add
mov
cmp
fwait
pop
sbb
rep
ret
mov
cld
xor
ljmp
cs
lahf
adc
in
mov
add
xchg
mov
cvtps2pi
ds
push
stc
fcomip
inc
mov
subb
jns
lods
out
jne
lds
stos
xchg
gs
hlt
mov
cwtl
ljmp
mov
push
lds
popf
enter
or
push
movsb
inc
and
or
mov
sub
imulb
leave
hlt
mov
sbb
js
mov
negb
and
jl
push
neg
adcl
shlb
out
add
mov
cmp
loopne
push
rcrl
sbb
mov
sbb
mov
hlt
ret
cmp
pop
jge
fidivrl
lods
cmpsl
push
jns
cmc
xor
mov
sub
ds
lock
pusha
idivl
jge
loopne
jecxz
stos
movsb
push
cmp
inc
sub
push
loop
dec
mov
js
push
sbb
mov
pop
punpckhbw
sub
mov
leave
iret
push
add
xor
mov
cli
push
inc
mov
mov
inc
sbb
jbe,pt
sti
and
and
jle
xor
fnstsw
iret
ja
push
inc
xor
lret
aaa
sbb
xchg
sar
inc
push
adc
lock
cli
and
jmp
ds
push
push
dec
enter
incl
dec
outsb
adc
lahf
ret
mov
in
sub
sub
jo
or
adc
or
int3
and
es
scas
dec
fbld
pop
mov
mov
pop
outsb
sbb
cmpsl
jae
add
inc
ss
inc
arpl
les
push
cld
mov
xor
jne
sti
dec
pop
push
push
push
je
popf
and
add
cmp
mov
loop
iret
stos
jno
and
gs
fists
in
lret
xlat
pop
mov
idivl
and
lret
loope
das
mov
push
cmp
scas
fs
clc
inc
ret
pop
xor
mov
mov
cmp
pop
mov
or
outsb
jns
adc
lret
fidivs
push
std
cwtl
add
or
in
cltd
jo
push
arpl
push
ss
mov
mov
sbb
fmuls
jb
adc
sub
xor
mov
jo
sbb
cmpsl
clc
xchg
test
leave
dec
ret
jnp
jmp
or
sbb
jo
int
or
das
pop
adc
pop
sbb
bound
stos
sub
mov
cmp
rclb
out
adc
fnstsw
jbe
and
popf
into
sbb
fistl
repnz
jns
pop
mov
pop
sbb
xchg
sbb
sub
loop
mov
test
pop
into
mov
inc
ljmp
andb
xor
adc
adc
aaa
mov
ret
iret
int
mov
dec
cmpsb
pushf
lds
int
mov
adc
loope
jo
push
mov
sub
mov
xchg
xlat
cmp
jno
jg
imul
xchg
dec
add
sub
push
frstor
dec
call
sub
shll
cmp
push
arpl
hlt
jg
clc
dec
in
xchg
pop
mov
xchg
scas
adc
and
inc
lret
mov
cwtl
xchg
push
sbb
dec
push
mov
insl
test
pop
and
in
mov
and
xor
sti
imul
ds
pushf
jle
mov
stos
movsb
mov
cmp
pop
jb
sbb
mov
pop
mov
sbb
fcom
sti
sbb
insl
dec
scas
orl
dec
int
xchg
movsb
orb
push
ljmp
fsubrs
aad
pop
push
bound
pop
sub
gs
ja
push
loop
outsb
xchg
aad
inc
jne
xchg
sbbb
pop
jne
push
dec
jnp
mov
fwait
mov
ljmp
lods
dec
inc
add
xchg
push
ds
fsubl
pusha
outsb
sub
inc
xor
popf
xlat
leave
cmc
adc
scas
imul
mov
mov
int
adc
pop
iret
lods
movsb
ret
jg
pop
sbb
jmp
inc
dec
lcall
bound
loop
fs
xor
leave
int
and
ja
hlt
xor
dec
add
adc
cmpsb
push
imul
ret
into
pusha
sbb
mov
das
jb
xor
mov
push
mov
inc
mov
jb
in
loopne
xchg
sahf
icebp
mov
fcoms
pop
mov
cmc
movl
sarl
lea
pop
rol
push
push
aam
xor
pushf
js
inc
loop
pop
xor
push
iret
jns
inc
jg
cmpb
mov
int3
mov
sbb
push
xchg
add
and
out
add
lods
add
and
push
icebp
mov
rcl
inc
cmp
jmp
mov
push
cli
inc
negb
idivb
std
imul
das
mov
mov
push
test
and
lret
daa
enter
jb
out
hlt
xchg
aas
mov
adc
stc
inc
jbe
and
xchg
or
ljmp
adc
sub
addr16
dec
loop
adc
mov
fisttpll
ljmp
insb
mov
fidivrl
push
xor
xchg
pop
mov
push
pop
xchg
lahf
xchg
sbb
call
push
jns
xor
test
fwait
ret
adcl
add
je
lret
arpl
pusha
lret
dec
addb
data16
shr
stos
test
gs
fwait
sbb
sbbb
ret
stos
jo
dec
cmc
shlb
jno
sar
lahf
dec
mov
into
dec
loopne
popa
mov
xor
xor
mov
dec
jbe
aas
leave
fnstenv
popf
ljmp
adc
adc
mov
aas
cmp
ret
sub
pop
shr
in
add
iret
sub
aad
push
test
jle
push
push
and
sub
or
xchg
out
xchg
enter
xchg
sbb
rcl
jle
fdivrl
mov
sbb
or
sbb
jae
cmp
mov
sub
adc
dec
mov
imul
jns
mov
add
movsl
cmp
data16
mov
inc
imul
pop
jmp
loope
lods
in
stos
pushf
nop
daa
xchg
clc
sbb
aam
out
in
cmp
stos
xorb
fnstenv
adc
push
xchg
xchg
aam
push
cld
loopne
xlat
lods
pushf
or
out
aas
arpl
xchg
ret
je
push
sub
repnz
push
xchg
sahf
xchg
notb
push
xor
mov
mov
sahf
leave
add
lods
iret
inc
add
inc
push
mov
into
fstpl
test
push
sahf
jae
add
lods
icebp
ficoml
inc
xor
push
aad
movsb
inc
jg
or
fldenv
scas
add
push
jp
inc
and
sub
mov
ret
rolb
pop
sub
rcr
xchg
pop
xchg
jnp
push
adc
std
xorb
jge
cld
sbb
loop
push
jno
sub
fcmove
rcl
test
je
arpl
inc
mov
popa
xchg
dec
outsl
mov
or
icebp
fdivl
int3
sub
inc
add
sub
xchg
shlb
inc
cmc
loope
xchg
cmp
or
cmpsl
jbe
mov
in
in
push
out
mov
imul
lds
cmp
xchg
outsl
sbb
lods
sub
hlt
jmp
fcmovbe
mov
insl
mov
push
out
sub
mov
test
repnz
sahf
xor
pop
ficoms
pop
imul
or
and
cmc
dec
and
fcomps
or
pop
inc
in
xchg
call
scas
dec
xor
cmpsb
jl
xor
test
jmp
lret
div
aad
pop
lret
jbe
lods
cmpsl
adc
nop
sub
scas
insl
imul
or
pusha
mov
dec
sbb
jle
xor
xor
jecxz
and
ja
xor
mov
push
xchg
addr16
arpl
jmp
mov
cltd
pop
dec
cmp
cmp
call
dec
cmp
xchg
sub
popf
or
dec
and
cli
pop
jne
sub
divb
aam
push
jmp
jecxz
dec
inc
adcb
daa
ljmp
sbb
es
jae
push
and
outsl
scas
sbb
in
inc
cmp
fisubl
cmp
mov
and
xchg
or
xchg
push
pusha
jnp
insl
adc
mov
mov
inc
mov
mov
lods
enter
clc
xor
fsubs
push
sbb
mov
xchg
push
orl
lcall
dec
inc
lret
xor
loopne
fidivl
lods
js
mov
pop
push
fadd
shll
leave
dec
or
mov
add
sub
mov
mov
jle
aam
insl
xchg
popa
xlat
es
sub
add
std
repnz
xchg
stos
aaa
ficoml
cmc
dec
les
push
test
cwtl
mov
mov
jmp
mov
movsb
jno
arpl
movsl
or
mov
jecxz
int3
mov
jo
or
testb
jnp
pushf
jge
lret
rolb
out
addr16
mov
sub
sub
sbb
int3
test
andl
daa
cmp
pushf
cs
pop
imul
adc
jbe
xchg
pop
add
mov
ret
jae
shlb
sbbl
jg
sahf
mov
lods
adc
dec
and
shrl
sbb
lret
in
js
mov
and
jp
lods
cmp
xchg
mov
stos
jb
cli
pusha
fisubrl
push
xor
ret
jns
enter
daa
cli
push
cmp
lret
repz
sub
xchg
fcmovnbe
sbb
int
jg
pop
mov
sub
ret
inc
stos
mov
dec
sbb
fstps
xchg
pop
or
adc
sub
jo
fdivrs
or
xor
jmp
fmuls
jns
jno
add
push
or
enter
inc
daa
inc
pop
data16
dec
mov
pusha
push
pop
loope
in
jle
into
mov
ds
mov
adcl
clc
push
pop
dec
jns
popa
xlat
test
les
int
jo
addb
or
in
pusha
add
pop
jns
cmp
outsl
jne
outsb
push
or
and
pop
xchg
sub
inc
mov
aas
daa
or
mov
jecxz
push
sbbl
cmpsl
aas
add
jo
cmpsl
clc
mov
push
mov
pop
sahf
pusha
lret
mov
mov
xchg
mov
dec
fs
out
xor
inc
mov
pop
sbbl
mov
out
gs
xchg
test
in
jecxz
pop
add
subl
and
aaa
mov
mov
fisttpl
stc
orl
adc
pop
loopne
mov
fs
lea
in
fisttps
push
mov
roll
mov
cmpl
flds
and
icebp
push
test
push
jae
fmul
or
inc
loop
push
rcll
add
jg
push
iret
jmp
push
fsubs
push
shrl
sbb
cmc
movb
in
inc
mov
cmpsb
sub
aad
inc
push
dec
jb
rcll
pop
ljmp
daa
fstpl
icebp
xchg
test
lds
add
divb
and
ljmp
jge
test
jg
adc
test
inc
mov
or
repz
repnz
repz
js
push
rolb
jp
or
pop
mov
jae
and
cmp
push
add
xchg
addr16
outsb
daa
ja
sbb
into
xorb
xlat
inc
gs
sti
push
jle
mov
push
lret
es
movsb
pop
xchg
sarb
cmp
push
adcl
outsb
mov
adc
mov
mov
pop
push
xlat
je
cmpsl
repz
sar
push
push
mov
outsb
sub
sbb
movsl
inc
and
fsub
cmp
ds
mov
adc
xchg
inc
sub
lahf
cld
sbb
jae
inc
lahf
sbb
fistpl
add
push
pushf
or
xchg
pop
adc
jns
pop
mov
int3
jmp
adc
je
rcr
push
sar
mov
imul
cmp
lcall
imul
xchg
outsl
add
imul
hlt
sbb
cwtl
loop
fnsave
mov
mov
sahf
mov
hlt
push
xor
ja
outsl
inc
cwtl
sahf
add
or
std
jecxz
lock
fstpt
add
xchg
rorb
sbb
aas
rclb
jb
lcall
in
pop
lcall
arpl
lods
out
or
mov
stos
in
push
pushl
rcrb
and
jno
sbbl
sbb
mov
jmp
mov
aam
jl
xchg
lea
fsubp
mov
push
clc
mov
and
stos
cs
push
nop
push
lea
cmp
mov
icebp
push
mov
or
cltd
pop
jle
cmp
mov
pusha
mov
in
cmpsl
lret
test
aam
or
push
std
dec
mov
out
push
out
and
test
repnz
cmp
xchg
push
les
fimuls
or
loopne
cli
clc
mov
sbb
cmc
jl
pop
das
aad
push
pop
cmp
cmova
das
dec
ror
out
adc
pop
pop
pushf
xor
aam
lret
adc
scas
mov
mov
lcall
pop
data16
adc
imul
jecxz
xchg
rcrl
lret
mov
mov
loope
add
shlb
adc
rcr
sub
sub
outsb
push
xor
push
std
push
shrl
and
xor
in
sub
scas
adc
mov
cmp
call
shrb
mov
je
popf
jae
mulb
testb
int
mov
pop
cld
loope
pop
inc
mov
push
push
scas
out
push
adc
pushf
es
ficomps
jo
pop
ficoms
xchg
iret
daa
mov
cltd
cmc
jb
popf
adc
mov
xchg
mov
aam
shlb
arpl
push
loopne
stc
jge
dec
sbbl
push
icebp
jl
stc
xor
jae
lret
inc
mov
test
lods
imul
lock
mov
dec
add
mov
mov
or
clc
xchg
out
xlat
mov
outsl
or
xrelease
inc
xor
movsl
rorb
pop
addr16
mov
loop
sbb
les
sbb
or
fwait
stos
and
push
jl
test
cld
int
xor
jmp
aad
mov
mov
aam
icebp
orl
jp
stos
outsl
scas
sub
cmp
push
lock
lcall
xchg
adc
fiaddl
sbb
xchg
int3
imul
cmp
inc
fimuls
fnstcw
jnp
scas
loop
fwait
callw
push
push
xor
in
push
sub
daa
repz
pop
mov
push
pop
sti
xchg
push
shll
insb
out
jbe
cwtl
adc
loop
adc
popa
pusha
dec
fildl
stc
jnp
movsb
push
push
jl
hlt
jp
mov
scas
addb
in
sbb
xchg
mov
push
push
jne
in
jle
mov
inc
bound
and
sbb
or
call
or
nop
movb
sbb
mov
daa
aad
jle
push
ss
int3
inc
sbb
movsb
outsb
iret
mov
movsb
out
lahf
and
movb
addr16
stos
cmpsl
push
mov
pop
ss
add
sti
inc
inc
aam
shlb
test
jmp
sbb
pop
dec
in
add
lea
aam
out
xchg
mov
fwait
call
int
aam
mov
add
mov
fucomi
daa
test
mov
mov
lods
mov
fistpl
inc
push
sub
xchg
push
das
jae
jne
inc
int
lahf
fisubrs
outsb
subl
jb
pop
xchg
and
dec
xchg
fcmovnb
jnp
test
repnz
maskmovq
testl
in
push
nop
popa
into
sub
push
jg
push
nop
pop
mov
movsl
inc
loop
cmp
nop
fcoml
cli
xchg
fisubrs
data16
jae
ret
lahf
pop
ret
mov
pop
test
pusha
or
lds
test
shrl
dec
adc
aaa
pop
push
or
mov
push
test
in
imul
or
push
icebp
and
jae
into
jg
cld
jge
repz
fisubrs
hlt
sarl
iret
or
adc
push
cmp
sub
cwtl
daa
pop
daa
je
or
and
ljmp
mov
cmc
lods
sarb
lahf
mov
bnd
mov
in
test
sub
inc
ja
xor
xchg
xchg
push
mov
and
popf
pop
mov
imul
jl
mov
std
inc
in
fisttps
in
mov
pop
push
mov
mov
inc
dec
fldt
aad
std
cwtl
js
in
out
andl
loop
push
mov
jmp
xchg
xor
cmpsl
jo
dec
xor
in
adc
push
dec
xchg
jecxz
mov
js
vmread
inc
sbb
std
je
xor
adc
pop
in
cmpsb
pop
pop
test
shrb
xchg
xchg
test
dec
into
ret
push
loop
inc
test
push
lods
push
jns
jo
fnstcw
movlps
sbb
and
mov
xchg
add
cmp
lcall
fwait
jecxz
scas
jns
arpl
xchg
inc
sub
cmp
push
sub
fs
push
push
jmp
pop
stc
mov
popf
rcll
data16
out
mov
mov
adc
lock
pushf
sub
mov
mov
lds
push
fcomi
add
sub
add
jg
and
sub
ja
dec
push
movsb
frstor
cmp
xor
mov
lret
shrl
pop
test
insl
dec
sahf
sbb
sub
popf
and
add
lret
xchg
jp
mov
aam
inc
sub
je
inc
cs
enter
mov
stos
mov
and
jnp
rcrb
dec
in
cmp
jmp
or
sbb
lods
push
push
and
fnstenv
stos
sbb
dec
mov
mov
subb
fs
int
dec
mov
add
repnz
mov
inc
mov
xor
inc
notrack
jo
ds
sbb
lahf
dec
roll
mov
xchg
or
cmp
adc
dec
add
orl
cwtl
ds
and
jp
repnz
pusha
push
pop
insb
pop
insb
jle
out
cmc
pop
mov
xor
push
ret
in
testb
lock
xor
adc
aas
sbb
push
out
not
test
arpl
repnz
in
cmp
and
incl
xor
mov
aad
cli
orl
insl
std
daa
mov
insb
fcomps
push
std
ljmp
rol
add
jnp
mov
movsb
sti
jbe
addr16
pop
nop
push
std
dec
and
fildl
insl
pop
loop
sbb
leave
and
std
mov
add
fidivrl
mov
inc
lods
cmp
xor
mov
add
push
test
das
mov
andl
fidivrl
lods
push
ds
aaa
add
jns
insl
mov
pop
das
push
lret
dec
leave
sbb
nop
shrl
jbe
jecxz
loope
push
lahf
and
mov
dec
addr16
pushf
lahf
in
fcoml
mov
clc
test
cmpsl
test
pop
stos
push
jecxz
jecxz
pop
loope
push
aam
mov
into
test
or
and
pusha
je
lret
nop
inc
aad
rorb
add
in
pop
pop
pop
sbb
xor
loop
in
mov
aam
add
push
xchg
sub
mov
or
imul
jecxz
rol
shrb
push
mov
xlat
popf
xor
add
stos
pop
add
sub
push
push
push
cmpsl
and
in
pop
xlat
repnz
pop
jne
shl
adc
negl
insb
leave
ret
cwtl
mov
jne
pop
fists
sub
cmp
jge
add
fidivrl
gs
loope
cmpsl
adc
xorl
test
push
movsb
jns
daa
cmc
fisttps
js
cmp
out
mov
or
cmp
cwtl
dec
pusha
lods
jmp
adc
test
sbb
mov
jns
mov
js
xorb
test
cmp
loopne
jmp
add
cmpsb
out
mov
mov
lock
sahf
sub
push
xchg
sub
jmp
dec
mov
jnp
out
cs
xchg
inc
xor
fmull
stos
sbb
arpl
xchg
sub
sub
adc
ds
xchg
jl
stc
pop
jmp
mov
cmpsb
popf
lds
push
je
push
xchg
popf
dec
push
cwtl
in
fidivrl
pop
mov
leave
mov
out
int3
je
fldl
and
jo
push
push
subl
int3
dec
mov
rcll
jg
and
clc
mov
lcall
mov
clc
mov
gs
xchg
mov
bswap
cwtl
lahf
addl
clc
dec
xor
testb
adc
dec
dec
mov
js
sub
leave
sub
sahf
pusha
adc
inc
scas
aas
testb
scas
adc
fnstcw
xor
divb
xchg
push
lods
mov
xor
adc
mov
scas
add
mov
or
sbb
mov
scas
xchg
pushf
pop
loopnew
adc
insl
jns
jmp
lahf
mov
jp
mov
jge
xchg
inc
je
adc
cmp
ret
mov
push
stc
fs
xor
les
mov
dec
stos
fdivrl
mov
movl
je
shll
mov
push
test
add
pop
hlt
add
push
outsb
push
inc
scas
cmp
lods
xchg
mov
ljmp
ficoms
push
dec
sub
inc
and
pop
xor
leave
xchg
pop
or
mov
sbb
inc
inc
test
push
out
sarl
xchg
push
mov
insb
repz
test
negl
or
shll
push
int3
or
movsl
cmp
pop
xchg
nop
fs
faddl
or
pop
insl
sbb
js
or
push
jo
or
ss
fmull
aam
repnz
fs
inc
adc
dec
sub
inc
scas
cmp
stos
add
imul
lods
dec
adc
xchg
ret
ror
ljmp
xchg
outsb
stos
sub
xlat
pop
pop
mov
mov
adc
enter
icebp
lock
sub
mov
cltd
movsl
movsb
pop
jp
pop
jno
dec
xor
data16
cmp
addb
aad
addl
negb
and
fisttps
pop
lcall
repnz
inc
xchg
or
fcoms
push
xchg
mov
aas
jb
pop
sbb
dec
cmp
aam
movsb
test
rolb
repnz
mov
out
int3
aas
and
mov
cwtl
xlat
addr16
lcall
fmull
adc
in
rcl
push
mov
mov
sbb
dec
pusha
cmc
add
loope
es
mov
pop
or
inc
mov
inc
dec
lahf
lea
add
stos
stos
jbe
cmc
enter
jne
jecxz
lods
sti
cmp
mov
and
add
adc
xor
in
je
cmp
mov
ret
mov
in
js
jmp
scas
add
jecxz
loope
xchg
push
xor
neg
lea
adc
inc
lock
stc
mov
sub
lahf
or
arpl
inc
fbld
lock
movsb
adc
mov
fstpl
aad
cmp
in
push
mov
shrl
movb
cmp
and
fmull
cmp
cmp
and
xchg
fildl
sbb
outsl
adc
aaa
enter
clc
scas
add
aam
movsb
mov
imull
call
loop
pop
push
shr
inc
mov
lahf
jg
shll
push
imul
int3
ja
mov
fiadds
mov
insb
dec
xlat
in
in
leave
dec
xchg
push
inc
jnp
jns
out
lods
nop
pop
and
repz
jecxz
mov
or
add
data16
inc
adc
or
xor
enter
xchg
addr16
xlat
ficompl
hlt
mov
jno
dec
stc
lods
dec
js
js
mov
sub
push
mov
iret
sti
incl
lcall
xchg
insb
ret
in
movsb
mov
repnz
test
xchg
fadds
pop
add
imul
aas
nop
or
push
iret
push
pop
mov
and
inc
iret
jge
test
inc
les
xor
and
cwtl
mov
imul
lods
std
ljmp
mov
inc
jge
xor
mov
pop
mov
pop
cmp
fcmovu
mov
insl
imul
pop
sbb
xchg
dec
and
push
arpl
push
fs
jne
jnp
push
mov
std
push
lods
push
fwait
lea
dec
mov
outsl
xor
js
cmpsl
pop
xor
dec
shl
loopne
adc
mov
mov
sbb
mov
dec
test
cld
lahf
cwtl
sub
mov
leave
std
dec
mov
or
cltd
xor
mov
push
stos
lds
sbb
inc
or
andl
and
cmp
sbb
pushf
cwtl
call
xor
scas
js
ljmp
dec
cwtl
cmp
into
pop
pop
iret
jnp
fdivrl
sti
cltd
dec
sub
sbb
clc
sahf
outsb
test
stos
adc
push
xorl
nop
sub
jle
sub
fimull
mov
adcb
pop
cwtl
ja
and
push
cmp
mov
mov
aad
ret
addr16
mov
repnz
inc
cmp
xchg
outsl
or
xor
pop
xor
paddsb
lcall
cmpsb
inc
int3
popa
dec
mov
clc
rcll
pop
xchg
shll
adc
jo
mov
jo
in
ljmp
cwtl
inc
ja
scas
cmp
fistps
xor
dec
xor
xchg
rcrb
fdivrl
arpl
test
sbb
or
jae
push
dec
outsb
jecxz
sbbl
cld
mov
mov
mov
jnp
movsl
push
push
sbb
sti
xchg
sub
xor
pusha
mov
push
test
arpl
xorb
movsl
outsb
movsl
fistl
jmp
leave
out
orl
lcall
outsl
xor
xchg
jae
stos
hlt
sub
leave
test
bound
inc
into
aaa
pop
jnp
lods
out
jns
xchg
lods
xchg
sbb
push
out
inc
pop
xchg
jmp
dec
dec
jo
pop
jne
bnd
adc
loop
xchg
jl
dec
jns
andl
dec
xchg
cmp
pop
dec
inc
clc
cmc
mov
xor
jmp
fstpt
inc
cltd
xchg
xorl
pop
fmull
and
or
das
add
insb
mov
sti
pop
and
and
sub
bound
aam
cmpsb
mov
and
pop
arpl
adc
lret
addr16
mov
pop
jb
bound
pop
mov
push
cli
inc
pushf
leave
pop
cli
out
mov
mov
adcl
and
push
or
cmovs
lcall
gs
fnsave
imul
clc
les
fildll
in
mov
cmp
out
jg
testl
imul
sub
and
enter
andb
in
xchg
jge
fmuls
enter
int3
aaa
or
rcl
or
mov
pop
mov
jne
adcl
sti
rorb
jecxz
ret
jmp
in
outsb
and
mov
cwtl
lock
push
out
sub
nop
mov
cmp
aas
nop
movsl
daa
inc
movb
mov
jne
mov
icebp
fistpll
dec
call
push
fwait
add
pop
cld
sbb
adc
push
mov
popa
add
dec
jg
dec
mov
inc
jg
inc
pop
loope
divb
loope
lods
cmc
mov
aas
push
test
idivb
sub
mov
in
jb
in
fistl
lods
pop
nop
or
xchg
loop
ja
test
insb
mov
icebp
push
pop
cmp
inc
and
std
stos
or
mov
cmpsl
shll
les
inc
sbb
leave
add
imul
or
cld
jo
cmp
insl
mov
andnps
add
jne
out
mov
lock
jge
sbb
js
mov
out
aaa
fwait
cli
sub
rcrb
adc
jb
orb
fdivrl
xchg
adc
aam
pop
hlt
call
test
mov
sbb
icebp
mov
jnp
lods
mov
icebp
icebp
adc
mov
mov
in
pop
dec
cmp
nop
mov
push
or
jnp
dec
jl
jne
xchg
ljmp
leave
inc
jge
cmp
xchg
jecxz
fsubp
pop
mov
mov
ss
repz
dec
mov
adc
pushf
popf
and
in
pop
fisubrl
hlt
fstpl
sub
fs
fcomip
inc
mov
jl
fwait
or
mov
orb
aad
shll
jnp
aam
adc
aas
add
cs
pop
lret
cwtl
sbb
dec
imul
fs
lret
cli
push
insb
mov
imul
mov
mov
push
mov
daa
jns
loop
loop
dec
xor
ss
mov
xchg
lods
inc
mov
movsl
jbe
sarb
mov
es
je
pop
sbb
test
cmp
cmp
xchg
xor
out
mov
sub
and
push
sbb
out
in
xchg
popa
and
jo
hlt
xor
and
xor
or
sub
lods
jp
arpl
jmp
enter
cli
scas
inc
xor
dec
cmp
sbb
movsb
test
ficoml
rcr
sub
repz
dec
dec
and
pop
inc
leave
inc
int3
jmp
xchg
mov
test
ljmp
mov
inc
jg
or
aas
add
insl
or
and
scas
mov
loop
xchg
icebp
inc
insb
adc
scas
ss
mov
int3
mov
addb
sub
adc
push
lret
pop
aad
adc
stc
and
cmp
es
mov
cmp
sub
mov
xchg
push
pop
pushf
push
sbb
xchg
shl
popa
pop
push
mov
sahf
mov
cmc
test
outsb
jo
push
xor
jg
movsb
pop
insl
add
mov
xor
sub
mov
adcb
lret
pop
sarb
in
stc
repz
sub
insl
mov
cli
fiaddl
mov
xlat
roll
cwtl
mov
and
lcall
out
rcrl
insb
xchg
dec
in
sbb
add
mov
adc
hlt
int
ss
movsb
add
xchg
jne
mov
dec
adc
test
sbb
jae
mov
sbb
xchg
outsb
mov
dec
adc
mov
and
sti
call
mov
hlt
int
out
inc
lcall
pushf
int
rcr
push
arpl
mov
fcoms
sub
ret
mov
clc
cmc
push
xchg
push
cmpsl
rorb
hlt
in
idivb
jg
xchg
es
test
jnp
in
or
dec
sub
inc
inc
jecxz
addr16
arpl
pop
lock
pushf
pop
imul
sbb
push
hlt
mov
jbe
push
xlat
movsb
out
mov
dec
pusha
out
xchg
jo
push
in
jb
std
ret
mov
hlt
jg
sbb
sahf
adcb
push
lret
jo,pn
hlt
pushf
add
push
outsl
cmpsl
lret
push
or
test
jno
mov
int
hlt
dec
xchg
adc
sub
lock
dec
rorb
fsubr
call
adc
mov
xchg
aam
sarb
jno
or
or
jno
or
mov
testb
ja
or
in
jns
cmc
add
sahf
jp
mov
add
xchg
and
adc
add
push
pop
mov
xchg
xlat
cwtl
cmp
push
fadd
dec
xchg
inc
jg
icebp
adc
flds
xor
cmp
push
lret
clc
cmc
aam
adc
jge
dec
mov
lret
dec
mov
jbe
lock
popa
pusha
or
dec
pcmpgtw
popa
mov
test
fisttps
or
lcall
mov
sbb
xor
dec
sub
xchg
rorl
lods
loop
loopne
push
xchg
push
loope
dec
loope
mov
mov
lds
mov
out
popa
adc
jmp
dec
mov
outsl
or
cmpsb
andb
xchg
sahf
hlt
push
pushl
in
pop
repz
rcrl
adc
mov
aad
bound
and
orb
insl
or
outsl
xchg
ljmp
test
les
cmpsl
sbb
into
test
sub
adc
or
xchg
sbb
lods
mov
push
inc
xor
arpl
cmp
loopnew
outsb
nop
xchg
ss
add
dec
mov
pop
dec
and
cmpsb
xchg
push
cmpsl
loop
mov
or
jmp
addr16
mov
arpl
movd
jne
ds
cmp
jne
xchg
and
xchg
push
je
or
add
or
neg
xor
lret
lods
icebp
dec
mov
in
mov
sbb
testl
mov
imulb
pop
call
sub
insl
sarb
jb
push
std
lea
jge
cwtl
mov
negl
sub
xlat
mov
jmp
fs
lods
mov
movsl
mov
pushf
ret
adc
aad
xorl
addb
add
mov
movsl
mov
cmp
cmp
loopne
stc
add
nop
shll
xor
mov
lret
in
fisubrl
cltd
pop
cli
subb
inc
xorl
and
sub
test
mov
cmc
xor
jnp
push
adc
sub
jnp
cmpsl
mov
sbb
sub
stos
sbb
insl
mov
in
adc
aam
xor
mov
mov
mov
pop
loope
push
and
int3
pusha
mov
push
dec
les
lahf
leave
cmpsb
subb
push
pop
push
lods
push
jbe
lds
daa
fcomi
jg
popa
fwait
push
sbb
imul
les
aad
ja
xchg
xchg
dec
cli
int3
es
jbe
inc
pop
sbb
fcompl
testb
aam
call
inc
mov
lods
movsl
inc
mov
xor
shrb
jbe
dec
jecxz
es
and
push
mov
and
les
test
sbb
pusha
int
pop
mov
xor
int3
or
mov
sub
xsave
rorb
out
xchg
jecxz
jecxz
adc
push
mov
dec
add
pop
add
push
or
adc
mov
push
dec
cmp
gs
mov
movsl
stos
dec
mov
inc
push
fisubl
mov
je
mov
ljmp
push
pop
lcall
xor
cwtl
jl
inc
mov
out
andb
xor
jne
sbb
outsl
mov
xchg
mov
mov
pop
lcall
push
fimuls
in
sbb
add
sub
mov
movsl
ss
cmp
clc
sbb
mov
xchg
ret
mov
xchg
repz
jmp
sbb
int
inc
add
addb
push
int3
or
inc
sub
pop
or
std
jmp
xchg
ds
gs
cld
dec
mov
xor
sarb
push
push
cmpsl
test
fwait
rorb
mov
aaa
add
daa
add
sub
pop
push
push
jp
test
es
fistps
jns
shll
test
pop
or
out
jp
fnsave
push
ja
and
push
mov
or
mov
or
mov
push
xchg
insl
cld
int3
add
test
in
pop
xchg
adc
mov
dec
scas
push
fcomp
call
fisubl
push
iret
popl
sbb
mov
aad
es
movsl
dec
int
or
fcmovnbe
jne
cli
and
arpl
cmp
cmc
ja
or
jg
cmp
xchg
push
mov
jge
and
inc
mov
and
out
jne
push
push
inc
dec
call
jo
pop
jns
rorb
sub
dec
movsb
ljmp
add
test
jg
mov
adc
push
loopne
enter
ret
cld
fsubl
mov
imul
adcb
pop
sbb
or
mov
cld
add
dec
push
into
into
or
ret
sbb
int
pusha
cmpsb
fildll
repnz
inc
push
mov
adc
sbb
and
mov
stos
in
pop
sbb
jl
nop
rorb
call
pop
sbb
daa
xchg
les
jmp
aad
mov
imul
adc
mov
shlb
scas
ficomps
lea
icebp
cmp
jg
subl
jle
jae
fsubs
call
jp
imul
push
adc
lcall
cwtl
xchg
jno
sahf
mov
or
inc
sbb
es
inc
lret
cmp
xor
lcall
cmpsl
aam
xchg
cmp
imul
jns
mov
sbb
cltd
sub
sahf
mov
mov
nop
adc
lock
xchg
stos
clc
or
lahf
adc
hlt
mov
sub
call
mov
shll
adc
sub
push
jns
mov
into
call
push
mov
cs
push
cwtl
adcl
lods
jecxz
xor
call
adc
adcb
push
mov
in
cmc
sbb
xchg
cltd
not
sbb
lds
sub
pop
cli
and
jns
jo
and
repz
pop
mov
mov
sti
cmp
cmpsl
outsl
sbb
out
aaa
das
jmp
xor
mov
add
jp
cmp
cmp
out
inc
inc
push
sarb
gs
xchg
xchg
mov
int
pop
popa
rcrl
call
lods
mov
aas
fisttps
sbbb
pop
mov
inc
je
fisubrl
data16
popf
mov
jb
cwtl
add
push
adc
stc
push
cmc
js
outsl
outsl
jl
pop
add
add
adc
cmpsb
adc
jmp
xor
push
lods
or
pop
jle,pn
inc
lods
adc
push
aam
adc
sub
ds
jbe
cwtl
lock
and
push
xor
movsl
lahf
iret
out
push
stos
js
push
out
outsl
test
mov
ds
cmp
in
sti
aaa
pop
xchg
int
jnp
jb
cwtl
lret
mov
repz
out
aam
jns
adc
push
dec
mov
cmp
repz
sub
mov
jmp
js
inc
push
jno
outsl
imul
movzbl
icebp
mov
mov
bnd
or
divl
test
lret
mov
and
sbb
jg
sub
das
in
out
mov
icebp
cltd
and
pop
jecxz
sbb
roll
jg
jle
test
lea
sub
test
pop
jle
mov
inc
mov
adc
lcall
ljmp
cmp
subl
push
lret
neg
push
push
inc
sbb
pushf
and
cli
inc
sbb
pushf
jmp
pop
sar
pop
push
adc
sub
testl
mov
cs
cld
pushf
out
mov
and
out
and
adc
call
add
xor
or
and
jb
jmp
repnz
pop
in
adc
xor
mov
cmpsl
arpl
movsb
cmp
pop
dec
movsl
mov
jne
jecxz
mov
mov
insb
jecxz
sbb
repnz
and
jp
aas
mov
inc
pop
paddusw
mov
pop
sub
push
dec
std
mov
arpl
mov
ret
jge
test
and
mov
stos
jne
mov
adc
in
ljmp
mov
push
push
lds
ss
in
repnz
and
cwtl
dec
ljmp
mov
cltd
jb
jno
xchg
or
jns
push
push
push
or
pop
adc
jl
mov
movsl
mov
pop
mov
lods
jbe
std
les
sbb
cmp
inc
fmull
push
and
aad
cmp
add
xchg
aad
repz
sbb
xor
mov
mov
mov
xor
shlb
lcall
mov
pop
cmp
add
add
pusha
ror
and
mov
orl
adc
cmp
arpl
loopne
mov
iret
cmp
xlat
jecxz
loopne
push
sbb
movsb
mov
lret
fmull
popa
jae
or
out
shl
push
sbb
ljmp
inc
xor
into
cmpl
mov
mov
push
pop
repz
xchg
mov
lds
scas
or
movsl
inc
mov
inc
into
movsb
xchg
push
jp
cmp
dec
fstl
into
push
leave
and
nop
in
push
inc
cmc
repz
mov
lret
cmpsb
pop
sti
jp
cmp
adc
inc
add
push
mov
mov
mov
leave
add
mov
cli
mov
pop
sub
dec
inc
outsb
fwait
enter
les
mov
mov
fldl
outsl
adcl
pop
icebp
lock
sarl
popf
add
pcmpeqd
lods
pop
cmp
jns
bound
nop
xchg
gs
xor
jge
inc
xchg
data16
and
addr16
les
and
mov
jae
in
xor
fldcw
out
decb
sbb
fimull
jne
push
shrb
mov
clc
movl
xchg
in
sti
and
mov
sbb
and
xchg
aas
mov
subl
std
mov
loop
xchg
mov
sbb
stos
ret
jne
pop
js
pop
notb
leave
scas
rcrb
mov
lcall
jae
mov
mov
imul
xchg
int
sbb
xchg
stos
notl
scas
xchg
cmp
mov
movb
imul
jnp
or
es
lods
xor
aam
xchg
mov
xchg
fwait
ds
mov
and
or
sbb
cmp
scas
ret
add
cmpsb
aam
xlat
fdivrl
inc
nop
and
test
or
pop
pop
push
ret
xor
leave
in
dec
push
lods
pop
ss
and
xchg
pop
xchg
loop
lock
je
jae
push
jns
push
mov
insb
imul
jns
divb
pusha
inc
mov
or
pop
int3
push
push
xchg
call
inc
mov
sub
mov
andl
insl
pop
push
jbe
mov
xchg
lret
xchg
fcomi
clc
mov
lret
movsl
data16
adc
inc
jecxz
adc
and
fwait
and
inc
and
jnp,pn
cmp
push
sbb
in
jge
lock
or
fucomi
in
sbb
dec
loop
popa
sahf
xorl
js
sub
jle
cmp
pop
inc
cmc
sti
inc
dec
adc
xchg
jno
jle
add
faddl
inc
jl
movsl
les
mov
cmp
ja
sahf
mov
bound
cli
jo
insb
fsubr
data16
out
dec
sub
arpl
fchs
hlt
mov
test
xchg
cmp
add
sbb
adc
lcall
rorl
jbe
push
adc
std
push
inc
add
push
stos
out
pop
or
imul
jb
jo
shlb
pop
xorb
add
dec
cld
and
push
in
jle
sub
in
mov
in
pop
mov
push
test
push
movsb
cmp
sbb
or
repz
cmp
and
in
inc
inc
xchg
fwait
push
and
push
pop
or
sbb
xor
cld
mov
sbb
xchg
add
pop
fcoms
push
das
rol
sbb
inc
scas
dec
pop
popa
or
push
add
inc
cld
aaa
iret
stos
xchg
push
push
inc
shrb
scas
mov
popa
push
mov
xor
mov
or
inc
pop
ljmp
lods
pusha
or
scas
shrb
aas
jne
pop
addr16
jl
or
dec
cwtl
jns
cmp
out
imul
sub
int
adc
push
push
imul
pop
pop
adc
pop
pop
and
xchg
pop
cltd
gs
in
add
int3
mov
les
inc
out
xchg
mov
insl
jnp
pusha
out
adc
lret
cmc
and
inc
mov
cld
icebp
sbb
push
loope
lsl
add
jmp
and
aaa
jmp
sub
and
adcb
js
rcrb
and
ds
push
mov
in
stc
mov
mov
sub
stos
xchg
out
je
push
cwtl
jge
jno
jp
xor
xor
out
ret
jo
into
push
test
mov
stc
jo
jmp
push
into
shll
inc
repnz
cmc
adc
in
out
mov
xchg
aad
mov
sub
or
xchg
jno
dec
out
cmpsl
out
jp
push
jmp
dec
xchg
xor
jle
sbb
mov
das
jb
jmp
inc
push
or
pop
int3
pop
push
out
ficoml
xor
sbb
aaa
int
shrb
fwait
clc
mov
inc
dec
arpl
out
pop
int3
and
test
in
xchg
test
xchg
adc
pop
out
add
mov
lock
lcall
inc
sbb
movsl
fsubrp
inc
lret
out
out
mov
in
ljmp
cmp
rclb
leave
cs
adc
xchg
dec
lcall
imul
loop
xchg
fisttpll
ljmp
loopne
ss
loope
out
jp
pushf
jmp
inc
mov
fisubl
fidivl
or
lea
mov
xor
pop
push
shll
mov
jmp
cmp
inc
jb
and
rcrb
mov
lcall
or
xor
mov
clc
movsb
sbb
add
test
mov
fdecstp
ljmp
inc
insb
cmc
test
mov
xor
aam
adc
fptan
ja
repz
push
cmp
push
sub
je
loope
cmpsb
sub
or
clc
push
jns
shll
je
pop
or
testl
rcr
notl
xor
pop
mov
imul
sbb
out
mov
lcall
pop
sbbl
in
shrl
aad
sbb
jp
out
call
imul
xchg
dec
bound
pusha
fdivrl
xchg
loop
call
mov
ss
subl
stos
push
pop
xchg
popa
repnz
inc
loopne
xor
test
inc
dec
mov
mov
pop
mov
rcl
push
repz
movsb
lret
cmpsb
xorb
lcall
push
les
and
cmc
cltd
xor
insb
fdecstp
push
mov
adc
jmp
pusha
int3
adc
fldenv
and
jno
xor
pop
leave
dec
mov
rcrl
cmpsb
cmp
mov
pop
xchg
pop
fists
cmpl
or
jle
mov
jmp
mov
pop
stos
dec
push
xchg
inc
js
push
push
in
and
data16
xchg
cld
call
arpl
and
pusha
inc
roll
and
mov
js
inc
cli
sub
pop
cmpsl
adc
and
sar
jns
lock
and
out
rcrl
out
jns
jmp
rorb
inc
or
popa
mov
jecxz
push
push
loopne
xor
cli
enter
daa
and
jb
rorb
sub
add
cmp
sbb
pushf
jecxz
sub
dec
xchg
repz
ss
popa
pop
pop
push
sti
sub
lds
cmpsl
icebp
cmpb
cmp
adc
xchg
mov
ds
enter
daa
arpl
daa
iret
pop
filds
test
rol
cmp
or
cmp
das
ljmp
icebp
cs
mov
add
push
pop
mov
sahf
out
lcall
lret
push
aad
xchg
mov
in
testl
add
fldl
adc
mov
inc
fadd
or
leave
addr16
jecxz
push
fsubrl
pop
aaa
cld
idiv
jae
or
mov
xchg
or
adc
mov
cltd
adc
dec
in
lds
fdivp
mov
test
adc
into
xor
int
adc
and
pop
movsl
outsl
mov
push
stc
test
jge
mov
mov
dec
xchg
addr16
lahf
and
inc
in
mov
xor
cmp
jnp
add
dec
pop
mov
mov
adc
jle
dec
out
ja
into
pop
cltd
cmp
inc
fidivs
out
and
aas
roll
sub
ss
push
xor
and
dec
adc
jne
cmp
stc
sub
daa
push
mov
fs
icebp
lahf
xor
lret
cli
rcrb
jns
inc
shrl
lret
jne
repz
push
inc
mov
sub
sbb
push
pop
jbe
xchg
fwait
mov
push
sti
push
ja
and
testb
sub
jg
inc
repz
jae
mov
xchg
or
cmpsl
frstor
push
pop
pusha
popf
js
sbb
outsl
test
popa
push
and
or
mov
and
js
inc
ss
fsts
add
repnz
outsb
dec
cmp
les
sbb
inc
sub
sbb
dec
jmp
adc
pop
xor
push
cli
sbb
sub
cld
xchg
es
sub
sub
mov
push
and
sarb
fstp
movsl
mov
mov
xor
cwtl
cmc
or
cmp
cwtl
xchg
jecxz
popl
dec
test
jmp
sub
sub
int3
jnp
cmc
adc
dec
mov
add
ret
fnsave
jnp
inc
push
sub
clc
mov
inc
mov
add
cmp
mov
push
jno
and
mov
mov
pop
cmc
dec
push
fstp
dec
xchg
add
ss
ss
outsb
das
dec
xchg
lds
push
lahf
cltd
sbb
mov
setbe
cwtl
in
gs
pusha
leave
pop
jge
fbld
vminss
xchg
fimull
bound
mov
inc
jmp
in
xchg
rcrb
inc
outsb
xchg
inc
or
pop
test
mov
stos
mov
cmp
xor
cmc
pop
add
arpl
int
cli
push
imul
xchg
repnz
mov
sahf
dec
xchg
pop
jnp
in
push
lods
jns
rorl
xor
and
pop
mov
stc
into
cmp
and
call
adc
sbb
shlb
pop
loopne
sbb
or
ret
aam
mov
add
je
das
push
pop
inc
addr16
or
nop
cmp
push
lock
adc
lods
sbb
test
movsl
mov
test
cmpsb
push
inc
nop
into
cmc
pushf
es
iret
cmp
faddl
inc
loop
xor
cmp
call
addr16
cmpsb
lock
pushf
add
mov
xchg
call
fcomps
fwait
xchg
leave
jno
pusha
mov
adc
js
iret
dec
jecxz
inc
push
and
dec
mov
in
js
xor
pop
adc
mov
aaa
inc
movsb
loop
movsl
insb
inc
loope
cld
add
cmp
rcrl
sbb
xor
sbb
mov
mov
pushf
fs
lock
in
lret
and
jne
and
xor
xor
xor
lahf
nop
iret
sub
out
movlps
xchg
push
std
jne
pop
adc
adc
pop
mov
pop
das
sarl
pusha
or
add
xchg
stos
fadds
in
cmp
je
mov
sub
sub
mov
in
pop
mov
dec
js
repz
inc
mov
lea
pop
mov
ja
jmp
inc
xchg
lds
add
out
push
fwait
push
fsub
aam
fmull
repnz
testl
dec
add
filds
pop
jo
mov
jns
add
jae
aad
mov
cmp
fdiv
mov
jbe
sub
test
movsl
cmp
jb
ljmp
mov
push
ja
xlat
pop
lods
loopne
xchg
out
repz
inc
add
xor
insl
inc
adc
orb
in
les
in
pop
and
fcomps
and
xor
or
in
aad
enter
pop
jp
int3
loop
xchg
push
sti
aas
inc
mov
pop
fnstsw
push
jno
and
pushf
test
mov
add
xchg
xchg
insl
imul
push
fwait
gs
hlt
xor
dec
lahf
icebp
ficoml
cmp
es
mov
mov
or
aas
inc
cmpsb
in
lret
in
sub
push
pop
push
sbb
mov
jmp
sar
pop
adc
pop
aad
into
incb
lds
push
jo
push
sbb
jo
pop
pop
cli
jecxz
outsb
lods
cmp
scas
inc
adc
pop
push
or
jnp
fsubl
sub
int3
xor
pop
bound
or
sti
adc
dec
cld
mov
lock
xchg
and
cmpsl
cmpsb
mov
mov
pop
pop
lods
sahf
rorb
cmp
mov
inc
push
jle
push
testb
sarl
adc
xchg
push
jnp,pt
addr16
push
or
out
enter
cmpb
ss
inc
pop
add
push
mov
sub
sbb
mov
dec
push
pop
jp
jno
cmpsl
pop
jg
push
in
lods
divl
shl
jbe
push
add
aam
jne
push
fwait
pusha
lods
lret
or
pop
mov
ret
ss
xchg
aad
aad
sub
xor
push
cltd
adc
push
std
pushf
push
jecxz
nop
leave
imul
clc
iret
pop
ret
out
and
sahf
sbb
gs
jne
inc
call
dec
jnp
gs
sbb
jo
mov
test
xchg
daa
sub
mov
mov
loopne
xchg
dec
gs
scas
mov
lods
jg
sub
push
fwait
rcr
shrd
push
in
filds
mov
push
int3
cli
cmp
enter
mov
test
xor
mov
in
mov
movsb
sti
cmp
sub
enter
lret
xchg
jp
push
popa
insb
fldcw
xorb
sub
mov
insl
xor
pop
in
clc
mov
mov
mov
mov
dec
push
fwait
sbb
jne
mov
and
sub
or
mov
pop
gs
lcall
int3
adc
pop
push
out
fwait
mov
inc
enter
xlat
pop
addr16
out
daa
pop
jg
sbb
jg
xor
enter
mov
sbbl
stos
or
mov
aad
lods
or
sbb
mov
pop
pop
subl
xor
pop
or
mov
mov
sub
arpl
stc
cmp
xchg
mov
jno
test
mov
andb
sbb
lock
cmp
push
scas
and
insl
icebp
jae
mov
dec
and
push
lock
and
or
push
push
sub
push
leave
fsubr
and
popf
movsb
sbbb
or
dec
mov
adc
cli
pop
dec
inc
lea
mov
xor
inc
pop
sub
into
lahf
fstpt
pop
das
pop
mov
push
sbb
ljmp
bound
lea
mov
std
or
cmc
pop
dec
push
fwait
xor
cmp
mov
clc
subb
inc
gs
add
inc
flds
and
mov
fbld
lods
sbb
imul
jne
push
mov
pop
dec
mov
xor
ret
mov
lods
pushf
movsl
xor
inc
or
cltd
xor
icebp
xor
in
xchg
xor
xlat
xchg
and
jmp
jl
call
dec
test
into
xchg
cmp
push
mov
mov
arpl
roll
testb
scas
mov
inc
out
pusha
hlt
adc
add
ds
lods
sbb
popa
insb
push
sub
inc
sbb
lahf
xor
imul
ficoml
jle
pop
sbb
xor
mov
ds
push
xor
push
dec
inc
inc
aad
test
sbb
jle
lds
push
push
aad
lods
dec
adc
or
jnp
movl
pushf
inc
es
or
ror
in
adc
loope
push
cwtl
pop
add
mov
xchg
inc
cmp
or
jl
popf
adc
scas
cmp
push
rcl
lds
mov
int3
lock
das
and
movsl
js
loope
hlt
pop
rolb
push
daa
test
push
mov
hlt
movsl
push
mov
aas
push
mov
popf
popf
aas
xor
pushf
scas
sub
loope
xchg
out
push
das
jne
inc
push
ljmp
cmp
push
out
pop
fistl
dec
xchg
mov
and
xchg
sahf
repnz
push
pusha
and
nop
add
mov
lret
pushf
int
xchg
dec
push
push
stos
mov
xchg
sbb
mov
dec
mov
aam
fnstsw
test
add
ja
fld
sub
mov
pop
rclb
aaa
and
or
imul
popf
mov
push
lods
mov
shlb
mov
dec
loope
les
mov
push
jne
imul
imul
xor
or
arpl
enter
mov
dec
daa
orl
loope
ds
jns
inc
xchg
xchg
lcall
adc
and
mov
test
test
dec
inc
push
mov
movsb
sbb
push
ror
or
push
lods
xor
sub
fiadds
ret
mov
push
add
cmp
test
mov
lret
jbe
or
or
and
mov
out
aas
insl
iret
xor
cmc
adc
stos
mov
xor
and
shufps
js
mov
adc
out
std
inc
xchg
andb
int3
and
dec
jl
jecxz
hlt
push
or
sub
clc
xor
dec
push
insl
insl
sahf
mov
sbb
pop
cmp
movsl
mov
into
movsl
fwait
call
in
jmp
push
push
pop
notb
mov
xlat
xchg
es
fldenv
sub
loop
repnz
sub
add
xor
mov
in
mov
jae
lar
fldt
pop
cmp
mov
mov
lahf
jae
and
or
mov
mov
sbb
sub
dec
in
jmp
add
xchg
lock
and
sbb
mov
mov
sahf
sbb
or
leave
or
add
jle
and
jg
lret
test
andb
or
sbb
inc
inc
sbb
incl
sbb
addr16
outsl
sbb
lret
or
push
dec
cmpsb
mov
and
stos
mov
jb
adc
lods
iret
dec
or
pop
stos
add
xchg
pusha
fwait
add
add
mov
les
outsl
mov
enter
lahf
ds
lds
lcall
in
fnsave
insb
push
rcr
add
pop
imul
and
int3
push
cli
push
in
addl
xlat
test
xchg
pushf
ds
mov
insb
mov
out
insb
fcompl
cmp
mov
mov
aam
fcmovnu
mov
sbb
lds
mov
push
cmc
test
mov
jno
xlat
cmc
and
mov
or
add
push
movsl
xchg
stos
leave
sahf
ljmp
xchg
lcall
clc
icebp
subb
jne
cmpsb
mov
sbb
mov
lods
dec
adc
lock
pop
xchg
daa
and
xor
shlb
imul
nop
fstpl
mov
push
push
pop
cmpsb
add
xor
ret
mov
adc
mov
sti
insb
test
dec
mov
jp
cmp
adc
fisubrs
shl
pop
or
fucom
pop
mov
cmp
insl
cmpsb
mov
imul
sub
stos
leave
push
or
xor
stos
push
movsl
inc
mov
test
bnd
ja
cmp
fidivrl
adc
push
push
movsb
int
fstpl
pop
fsts
insl
adc
mov
mov
cmp
sub
cwtl
hlt
int3
outsl
push
xor
push
pop
push
mov
out
mov
pushf
dec
dec
jnp
push
xlat
dec
jns
mov
adc
frstor
mov
xchg
iret
cmp
call
adc
test
imul
jmp
or
pop
aas
adc
ss
les
lods
lret
jmp
lods
and
jp
das
sbb
pop
mov
jecxz
cmp
jmp
inc
mov
jmp
cld
incl
push
add
movsl
mov
push
shrb
jbe
dec
sbbb
pop
lods
sbb
fstl
in
test
imul
ret
fsubrl
test
add
xchg
pop
mov
movsl
lock
lds
ficoml
inc
popf
adc
adc
mov
push
push
mov
ret
rorb
or
shll
mov
cmp
ds
adc
int
out
xchg
xchg
dec
or
lret
stc
jle
cmp
dec
mov
rdpmc
mov
adc
add
push
sub
adc
imul
fsubs
cmpsl
cs
xor
and
mov
jg
mov
push
and
push
enter
dec
mov
rclb
xor
jl
cmpsl
lods
addl
cmp
dec
mov
jo
add
stos
rorb
dec
jne
mov
jecxz
aam
inc
adc
push
int
adc
enter
leave
and
stc
out
push
jnp
sbb
mov
and
jg
bound
hlt
mov
push
test
sbb
cmpsl
wrmsr
loopne
pop
repz
or
mov
inc
push
inc
pop
jge
cmpsb
cmp
or
jmp
sub
aas
jmp
lods
and
add
sti
jmp
subl
fists
jo
roll
adc
out
adc
add
xchg
cmpsl
in
xchg
std
das
sbb
sub
cmp
add
loope
jl
daa
and
faddp
xchg
enter
sahf
and
mov
mov
xchg
mov
outsl
jae
or
shll
mov
out
jne
add
lret
ret
add
cld
imul
je
mov
jbe
add
insl
pop
push
inc
push
cmp
adc
cltd
fiaddl
pushl
pop
dec
lea
fldt
sbb
mov
adc
inc
ret
mov
fisubl
je
push
push
or
cld
aad
mov
shrl
sub
scas
xlat
test
test
inc
out
push
popa
add
xor
mov
je
les
nop
xor
cli
xlat
mov
pop
pushf
dec
out
sbb
xor
jne
push
cmp
and
aaa
pop
stos
xchg
mov
sub
sub
scas
aam
lahf
clc
shrl
xor
test
dec
push
pop
adc
sub
fstps
aad
aas
push
push
in
aad
push
mov
pop
lret
popl
cld
push
les
rorl
out
adc
scas
mov
lods
cltd
lea
repz
fucomp
or
mov
mov
bound
inc
shll
adc
jl
out
inc
in
push
scas
das
notb
iret
jge
and
push
sub
ret
or
aas
shl
cmp
xchg
cwtl
sbb
mov
fsubrs
jle
dec
in
cmp
repnz
or
xor
add
leave
pop
stos
pop
xchg
pop
rolb
in
bound
jle
dec
dec
inc
mov
push
pop
jmp
popf
dec
or
arpl
xor
push
or
push
in
pop
test
mov
adc
in
in
test
jb
xor
cmpb
ret
cmp
push
mov
neg
xchg
flds
notb
jmp
popl
mov
into
jns
in
movsb
push
loop
xor
imul
sbb
jle
mov
pop
xor
and
lcall
or
sbb
test
imul
hlt
cmp
mov
sar
rorl
inc
mov
add
pop
cmp
call
sub
aam
fs
iret
out
cmp
push
into
mov
xchg
in
cld
loopne
xor
push
mov
lret
sbb
mov
or
or
mov
xor
and
aad
fcoml
jp
in
cmp
stos
mov
xchg
adc
dec
leave
stos
lods
mov
pop
adc
out
in
lock
ds
dec
pop
or
mov
cld
repnz
and
cs
loopne
jle
xchg
add
scas
cmp
xchg
cmp
out
ljmp
lahf
aam
loop
inc
les
xchg
fxch
daa
xor
jg
fmull
cltd
ja
out
imul
loopne
add
into
dec
dec
mov
rolb
xlat
std
hlt
std
push
loope
jl
mov
sbb
test
mov
test
mov
pop
dec
mov
mov
jo
mov
mov
dec
js
push
mov
insl
pop
sub
lock
scas
push
xor
pop
js
pop
jl
nop
fwait
jge
adc
stc
jmp
pop
mov
jg
fnstcw
mov
packuswb
push
hlt
into
add
mov
inc
and
movsl
xor
mov
pop
mov
add
jg
sbbl
aad
stos
outsl
mov
mov
mov
sbb
cld
inc
jg
xor
or
arpl
inc
leave
cs
idivl
push
movsb
inc
ret
push
mov
mov
and
stc
mov
jns
pop
and
stos
fisttpl
decl
pop
jb
pop
jge
xor
adc
add
ss
rcrb
shll
or
mov
sahf
mov
push
cld
clc
mov
clc
stos
push
shll
loopne
je
fsts
pop
mov
in
stos
pusha
jg
or
out
out
fcmovnu
lea
fs
jno
adc
lock
xlat
fs
aas
fimull
lret
dec
clc
dec
sbb
add
push
rcrb
cmp
sbb
jo
push
shrb
outsl
outsl
into
cmp
mov
xor
inc
movsb
imul
push
dec
sti
push
inc
xor
add
and
or
fwait
push
mov
mov
cmpsb
ljmp
xchg
je
ret
movsb
fwait
adc
add
or
dec
mov
popa
inc
jecxz
lret
xor
in
inc
cld
mov
adc
cmp
mov
push
add
inc
sbbl
or
or
movsb
mov
pop
mov
in
push
jae
mov
test
fwait
xchg
fwait
loop
bound
mov
out
fcompl
call
fs
insb
out
popf
cmc
mov
sub
ljmp
inc
clc
push
pop
cmpsb
pop
add
test
into
push
push
mov
xor
mov
xchg
cmp
sub
mov
pop
sbb
es
stc
nop
mov
mov
orb
andl
cltd
add
cmp
xor
xchg
jge
adc
popa
inc
xor
mov
push
fsubp
notb
stos
stos
out
sti
popa
dec
jnp
dec
dec
or
xlat
or
xor
fmull
jbe
ds
fstps
sarl
ja
mov
aaa
push
pop
dec
shl
clc
xlat
push
mov
out
xchg
out
loopew
fwait
arpl
ljmp
ds
mov
mov
data16
fiadds
mov
lret
mov
movsb
sti
mov
pop
sbb
mov
popf
xlat
lds
leave
jb
dec
jg
add
dec
mov
sti
push
push
adc
jnp
mov
push
insb
push
out
xorl
ret
les
ds
mov
mov
and
nop
mov
xchg
mov
adc
andb
xor
add
jae
inc
and
mov
push
or
jnp
icebp
inc
enter
mov
clc
dec
lods
sub
jae
jmp
jnp
cs
or
jge
cli
add
js,pn
jg
xor
jp
xchg
and
les
inc
in
mov
pop
out
das
mov
nop
scas
out
scas
cmp
jecxz
shrb
outsb
scas
frstor
xor
fs
orl
hlt
imul
fnstenv
sub
push
lods
fldenv
xor
outsl
and
insb
mov
jnp
or
cmp
cmc
fbstp
lds
scas
cmp
loop
fwait
sub
mov
inc
test
sbb
cmp
in
lock
cli
adc
loop
xchg
ret
cmc
test
mov
cmp
ljmp
loope
aad
push
dec
pop
and
xchg
mov
enter
cmp
push
mov
pop
scas
and
pushf
rclb
pop
xchg
and
std
lret
shll
jmp
xor
jne
xlat
fs
loope
int
sub
scas
test
and
movsb
and
push
fs
fstl
cs
xchg
lods
sbb
stos
sub
pop
testl
dec
push
jmp
jmp
mov
setl
je
jae
gs
stos
test
cmc
mov
out
mov
xor
jp
inc
daa
in
iret
js
cmpl
test
cmp
cli
jne
cmpsl
movsl
cmpb
mov
xor
inc
cmp
cli
fisttps
adc
push
popa
fisttpl
shll
mov
imul
pop
pop
movsl
inc
jns
push
and
dec
push
add
test
push
rorb
mov
xlat
dec
lods
mov
xor
cmp
adc
aam
ljmp
into
enter
pop
insl
xor
xor
push
sub
adc
or
and
je
sahf
add
cmp
and
in
jae
scas
push
mov
andb
mov
push
push
fsubs
packsswb
movsb
test
cmpsb
jl
mov
fnstsw
stos
fdivs
adc
mov
cmp
pop
sub
push
popf
mov
aad
dec
hlt
push
add
cmp
ret
cltd
xchg
fildl
xor
push
cmp
xchg
ds
sub
xor
mov
andl
dec
daa
mov
addr16
lods
call
aas
mov
adc
cld
or
int3
pop
dec
cmp
out
mov
and
push
xchg
test
fadds
int
lock
add
mov
fiaddl
push
mov
fs
test
mov
cmp
stc
pop
dec
push
pusha
xlat
out
mov
and
sub
dec
in
mov
jbe
daa
popf
jnp
cs
movsb
pop
addr16
xchg
inc
popf
mov
and
negl
outsl
mov
push
dec
lcall
jno
ljmp
enter
mov
jne
cmpsl
mov
xor
cmp
cmp
cli
mov
icebp
jp
daa
cmp
icebp
ret
lds
push
jb
das
lret
repz
jo
jmp
jmp
dec
das
ljmp
mov
jne
adc
in
cltd
and
inc
xchg
in
sbb
clc
mov
inc
test
push
test
pop
pop
inc
insb
imul
mov
or
popf
adc
subb
out
cmc
cmp
mov
push
into
mov
xor
jmp
dec
fcompl
mov
in
fst
and
pop
cwtl
jge
add
mov
mov
shlb
ret
daa
shl
xor
int3
sbb
or
lahf
outsl
adcl
inc
adc
mov
and
add
mov
mov
rcrb
mov
mov
or
into
or
orl
sbb
mov
push
push
cli
popa
sti
movsb
mov
sbb
aad
add
pop
imul
push
leave
pop
pop
dec
out
sbb
mov
push
adc
inc
in
cmpb
repz
pushf
mov
out
out
xlat
or
into
mov
mov
push
in
fsubr
inc
fcoms
loop
jbe
sub
add
fnsave
pop
lea
sbb
stos
inc
xchg
or
aas
adc
pop
outsl
and
idiv
push
es
pop
mov
jg
sti
stos
xchg
pop
aam
mov
mov
fimull
add
stos
mov
in
sti
incl
pusha
push
or
movsb
insl
sub
ret
cmpsb
lods
or
or
sti
add
cmp
and
push
insl
inc
repnz
pop
movl
sarl
lret
jno
loopne
inc
aaa
jnp
sub
outsb
cmp
push
sarl
sbb
jmp
xchg
outsb
nop
xor
das
sbb
xchg
xor
ret
fimull
in
xchg
xor
mov
jg
xchg
lcall
xor
dec
xchg
pop
rcrl
in
xor
imul
sahf
and
pop
push
pop
mov
enter
subb
in
cmp
cld
mov
adc
out
fs
mov
iret
testl
std
jb
pop
mov
test
inc
and
jbe
in
xchg
mov
adc
push
sub
xchg
push
xor
aam
xchg
dec
pop
inc
and
jno
xor
mov
push
es
imul
lds
add
mov
cmp
dec
xchg
add
dec
idivb
mov
xor
push
add
int3
add
push
loope
mov
mov
xor
xchg
mov
sbb
dec
mov
sbb
sar
adcb
xchg
sbbl
les
dec
out
xor
mov
jno
imul
jbe
mov
sbb
incb
xchg
xchg
mov
pop
add
sub
das
or
xchg
cmp
loop
addr16
xchg
leave
jns
jno
and
add
and
or
popf
int3
fistpll
mov
loope
mov
xchg
sub
or
lahf
mov
out
xorb
sbb
int3
decl
fldl
lods
das
mov
mov
mov
dec
sub
cmp
xchg
xor
lret
loope
aad
pusha
test
add
pushf
mov
in
cmp
and
insb
push
sub
imul
shrl
push
and
dec
xchg
or
aas
pop
pop
xor
lea
out
dec
ret
xorb
pushf
push
enter
mov
xorl
mov
mov
aad
add
aad
add
xchg
fdivrp
mov
ds
jo
shll
mov
cmp
pop
jg
mov
hlt
fwait
into
sub
mov
jecxz
xchg
and
lods
sub
pop
cmp
push
shlb
add
dec
adc
push
loope
incl
or
icebp
jnp
sub
es
xlat
push
sahf
adc
cmp
pop
mov
cmpsb
in
imul
enter
mov
arpl
js
nop
mov
adc
mov
sub
in
and
lods
xchg
ret
mov
mov
xchg
int
jecxz
add
in
rcr
loope
int
rcrl
cmp
xor
nop
cltd
jmp
add
push
decb
or
mov
aas
cmp
and
ret
push
mov
subl
add
enter
mov
mul
mov
push
add
mov
cwtl
inc
mov
inc
adc
add
add
test
dec
test
je
into
test
push
fsqrt
sbb
repz
push
dec
popa
push
js
pop
mov
xchg
inc
mov
push
das
mov
imul
je
ljmp
lds
aad
lods
inc
xor
sbbb
fdivrl
scas
popa
pop
out
shrb
gs
movsb
aas
shlb
jge
push
mov
jb
cmp
call
leave
cmp
xchg
clc
insl
or
mov
cmp
int3
adc
jl
aam
xorl
sarl
or
push
imul
ja
arpl
aaa
mov
pop
out
cmpl
pop
jmp
addr16
call
inc
stos
and
cld
movsl
int
in
imul
divl
les
mov
rolb
xchg
inc
aaa
mov
push
rclb
cmp
aam
mov
and
pop
inc
popa
sub
andb
sarl
push
aam
push
lods
push
push
mov
push
shll
sbb
pop
mov
psubusw
ljmp
push
clc
cmc
or
pop
ja
xchg
xor
pop
pop
jp
lcall
jns
push
or
cmp
shr
fsubl
scas
cmp
push
out
lcall
sub
lret
dec
loope
inc
sbb
stc
lods
out
loop
push
ss
cli
jae
rorb
push
push
jp
xchg
dec
xor
aad
arpl
movsb
lea
mov
gs
pop
popf
mov
ret
dec
dec
movsl
jmp
cmp
sub
cmpsb
neg
and
cwtl
pop
sbb
mov
ret
sub
adc
push
shr
cmpsb
popa
js
test
mov
jge
inc
pop
lea
icebp
sbb
data16
jb
and
nop
jle
inc
pusha
lret
xor
sub
repnz
xor
cmpsl
push
lret
mov
jle
jge
pop
dec
fidivl
cmc
pop
sub
cmpsb
pop
movsb
fwait
mov
nop
push
mov
pop
out
outsb
outsb
lea
dec
shll
imul
and
add
das
mov
xchg
push
mov
adc
inc
push
repz
mov
sbb
push
data16
je
adc
and
xor
aad
pop
popa
sub
popa
add
sahf
add
and
and
cmp
jnp
jge
xor
shrb
test
andb
xor
or
lock
mov
sti
mov
mov
daa
push
and
pop
and
aam
add
xchg
sbb
cld
iret
sub
cmc
sub
jae
ror
xlat
mov
and
out
jmp
in
add
xchg
push
outsl
mov
or
aas
rcr
daa
lods
ss
inc
iret
push
cld
inc
and
pop
or
push
inc
push
dec
je
mov
aas
daa
mov
movsb
sti
jae
mov
sahf
das
notb
movsb
mov
and
adc
hlt
lret
cmpsb
push
inc
imul
dec
sbb
lret
inc
cmp
sti
popf
sub
addb
jne
mov
and
loopne
inc
cli
pop
jg
icebp
cmp
int3
out
sar
xor
lock
shll
mov
arpl
jp
sub
mov
pop
mov
sbb
mov
inc
int3
mov
jecxz
aam
fimull
adc
pop
xor
insl
add
xor
and
cmp
cld
xchg
in
jp
cmp
and
cli
jp
mov
sub
push
sbb
jo
add
cs
adc
adc
xor
adc
fadds
and
aam
push
dec
dec
cmp
xchg
mov
sbb
mov
scas
pop
adc
xor
jp
push
dec
push
push
or
sete
jb
jecxz
scas
pop
sti
jg
xor
dec
iret
pop
int3
pop
push
mov
pop
test
fwait
inc
andl
notb
inc
adc
add
adc
pop
jg
jb
repz
mov
gs
pusha
loope
clc
push
insb
sub
int
xchg
mov
lds
xchg
jbe
pop
imul
sarb
shll
mov
testl
mov
cltd
and
xor
std
sbb
outsl
lods
cmp
pop
lods
pop
rolb
test
cmp
int
or
fs
loope
inc
mov
adc
ret
cmp
dec
scas
cld
xchg
or
mov
es
pop
and
mov
sub
jo
addr16
xchg
call
add
xor
gs
xor
mov
inc
add
daa
lret
inc
lock
jae
aam
clc
pushf
and
xchg
mov
orb
dec
cltd
hlt
mov
adc
push
aad
in
xor
lcall
cmp
lcall
sub
cltd
int3
leave
cmp
rorl
hlt
xchg
pop
mov
xchg
push
pop
and
test
xchg
pop
lahf
test
testb
and
loop
jb
xchg
add
inc
loopne
data16
aas
out
popa
sbb
xchg
pop
scas
imul
test
push
mov
pusha
jge
ljmp
and
cmp
les
and
aad
cld
aam
mov
sahf
lcall
mov
cmp
mov
pop
les
xor
push
movb
das
inc
mov
or
mov
out
mov
stos
imul
xlat
xor
sbb
mov
cmp
insb
dec
dec
pop
cmpsb
jno
sbb
lret
sub
jp
orb
cmp
inc
enter
ret
pop
or
out
cmpsl
in
fwait
jb
mov
data16
adc
xor
int3
ret
sbb
iret
pop
sub
andl
jae
lret
mov
dec
out
ds
int3
mov
fistps
mov
test
test
push
js
out
enter
fistps
sbb
cmpsb
ret
test
lret
sbb
stc
lea
xor
fucom
pop
es
aas
xchg
loope
out
psubb
or
hlt
pop
lahf
xchg
xchg
movsb
repz
lcall
push
jg,pn
pop
icebp
adc
fnsave
rclb
aaa
inc
jne
pop
pop
mov
xchg
int3
xlat
cmp
test
sub
dec
movsb
fcmovnbe
jg
and
mov
cmpsb
fldcw
xchg
fcomps
out
xor
mov
adc
jecxz
adc
rcrb
ret
inc
dec
lret
arpl
xor
out
cli
shll
cmp
xor
push
pusha
cmp
in
not
xchg
insl
pusha
fdivs
and
xlat
outsl
and
sub
mov
push
inc
js
int3
dec
rcr
in
negl
movsb
ljmp
adc
scas
or
pop
mov
xlat
mov
dec
lahf
jecxz
xchg
sbb
add
mov
frstor
jmp
inc
mov
lret
ja
je
repnz
or
mov
fidivrl
xchg
sub
in
movsb
cmp
xor
enter
xchg
movsb
push
das
stos
test
sub
shll
add
mov
mov
sbb
jecxz
scas
fsubp
xor
hlt
jbe
cmp
paddb
out
mov
out
add
fiaddl
cmp
insl
js
pop
test
and
pop
sbb
xchg
sar
xchg
shrb
mov
fwait
xchg
inc
hlt
jg
inc
mov
jo
mov
and
stos
mov
pusha
addl
fnstsw
xchg
in
lahf
push
int3
pop
mov
sub
leave
aas
cmp
ret
lock
jle
into
push
ljmp
leave
jl
pop
pop
rorb
stos
movsl
push
inc
out
sbb
xor
jmp
addr16
dec
leave
inc
jge
fadd
popa
jbe
popf
mov
jl
test
rclb
loop
lds
dec
scas
jae
mov
add
pusha
mov
add
sbb
js
repz
pushf
dec
add
pop
sub
std
les
fwait
xlat
xchg
adc
jnp
pop
push
xchg
mov
xchg
sbb
jbe
sub
das
mov
mov
outsb
cwtl
pop
daa
clc
mov
ficomps
xchg
sbb
ljmp
pop
dec
ficoms
jnp
jns
fimuls
mov
mov
or
inc
or
adc
lods
add
cmp
bnd
out
inc
out
mov
int3
fildll
leave
fdivs
fistpl
inc
mov
out
sbbb
insl
mov
into
push
mov
or
mov
in
adc
rcrb
inc
pop
xor
cli
xor
adc
add
add
imul
push
insl
adc
ds
fidivs
xchg
sahf
mov
inc
loopne
push
cmp
dec
orl
aam
ja
jg,pn
enter
pop
fucomp
ljmp
pop
fldl
pop
add
xchg
fldenv
mov
mov
jns
mov
jle
adc
fisttpll
popa
jp
xor
and
ja
and
jge
ja
icebp
lcall
xchg
in
adc
mov
mov
addb
inc
cmc
stos
das
jns
xchg
or
mov
push
mov
aas
stos
ret
jne
insl
popf
xchg
bnd
dec
pop
les
out
mov
ret
pop
or
xchg
gs
rorl
and
lahf
ret
scas
fiadds
jge
pop
inc
pop
ja
pop
jne
xchg
or
cmp
sbb
pop
lcall
in
dec
dec
addr16
test
repz
mov
mov
flds
xor
pop
mov
ret
sbb
cmp
xchg
jle
enter
out
or
inc
enter
sub
cmp
inc
jmp
shrl
or
xchg
mov
push
cmc
mov
jbe
lahf
fisttps
popa
std
fwait
cmc
cmp
imul
dec
jns
mov
adc
cwtl
or
leave
testb
bound
xchg
call
aam
pop
icebp
push
xchg
outsl
add
je
addr16
xchg
in
mov
sbb
jne
cmpsb
insb
pop
gs
lods
and
mov
cmp
shll
mov
push
add
lret
les
loope
flds
xchg
ja
std
jnp
ror
rolb
inc
xchg
and
mov
xor
push
push
rclb
imul
push
and
sbb
std
enter
insl
insb
rclb
jle
test
int
add
loopne
fimull
cmpsb
popa
mov
jge
sbbl
int
pop
mov
or
shlb
mov
pop
lret
add
call
pop
sbb
cmp
cmp
sbb
sbb
incl
push
mov
repnz
sbb
jno
arpl
or
push
mov
int
inc
push
pusha
mov
jg
add
fisttpl
test
aas
bound
rcll
inc
pusha
test
mov
cmpsl
pop
jbe
lock
add
fwait
push
fbstp
sub
add
add
shlb
sti
sahf
out
jl
xor
aam
lods
les
loop
cwtl
dec
pop
cld
leave
loopne
mov
pop
ret
aaa
ficompl
jne
lods
dec
add
fdivs
or
and
aad
inc
push
sbb
push
dec
xor
sahf
lret
sarl
adc
in
fdivl
ss
or
jge
inc
ret
add
sub
cmp
fsubr
jl
push
outsl
test
jae
scas
imul
xchg
xchg
mov
imul
data16
mov
pop
dec
std
lret
ss
sti
cltd
xchg
rorb
mov
sub
dec
jl
repz
mov
cmp
movsb
and
popf
loope
sub
insl
or
adc
ret
decl
stos
xchg
xor
ffreep
aas
sub
pop
in
out
cmp
xor
dec
sub
mov
sbb
test
adc
push
push
add
mov
push
insl
and
out
xchg
pushf
outsb
inc
mov
lods
xor
or
mov
add
popf
sbb
in
js
in
adc
jge
sbb
addr16
push
into
sbb
dec
or
dec
jg
sbb
test
aas
mov
mov
inc
mov
pop
or
outsb
or
out
cld
mov
pop
test
jnp
rcr
dec
adc
shl
mov
or
les
cmp
sbb
cmp
fiaddl
adc
divl
and
sub
out
aad
mov
lret
xchg
rorb
cmpsl
in
push
jns
jno
cmp
pop
out
out
inc
jge
add
xchg
fcoml
sarb
loop
adc
filds
test
inc
xor
ret
push
int
call
add
pop
inc
mov
dec
es
sbb
adc
jns
inc
xchg
add
ljmp
cmp
movsl
and
sub
leave
adc
sbb
cmpsb
jl
or
dec
insl
movsl
mov
xchg
daa
lret
mov
mov
sbb
mov
add
aas
aaa
addb
xchg
fs
inc
adc
cmpl
xchg
or
dec
jo
adc
jne
in
or
aam
cmp
out
xlat
mov
fucomp
pop
insl
orl
push
call
xchg
lods
mov
or
arpl
cmp
xor
lea
sub
add
popf
jecxz
mov
pop
push
imul
outsb
imul
cmp
rorl
sbb
movsl
mov
sbb
test
inc
enter
cmp
pop
xor
mov
cmp
rcl
fst
hlt
repnz
jg
mov
mov
mov
aam
stos
add
cltd
mov
les
or
stos
pop
sub
dec
mov
mov
pop
or
dec
test
jp
enter
adc
adc
push
stos
mov
dec
add
adc
mov
test
lods
jbe
push
or
outsl
add
pop
cmpsl
mov
pushf
mov
dec
addb
sahf
mov
add
hlt
in
insl
ret
ret
push
jbe
mov
stos
pop
insb
push
test
push
loope
sbb
fisubrs
inc
push
or
rcl
adc
add
leave
icebp
and
cmpb
int3
fcmovu
divl
ja
jno
sub
pop
mov
pop
adc
dec
fisubs
jle
pop
dec
sbb
sti
xchg
jae
in
or
add
fistpl
xchg
les
cmp
cmpsb
adc
xchg
xchg
pop
mov
xchg
ja
mov
inc
and
push
mov
popf
shl
xor
and
dec
movsb
fsubr
add
pop
dec
addr16
dec
sub
mov
jg
stos
sub
aad
cli
push
outsl
jae
lahf
call
push
addr16
repnz
mov
jae
in
adc
xchg
mov
jp
jp
jbe
jnp
imul
pusha
or
shlb
dec
rcrb
pop
xor
dec
decl
sub
movsb
ljmp
in
mov
or
flds
mov
pop
sahf
int3
add
mov
jle
lods
push
cwtl
sub
into
popa
and
cmp
mov
adcb
jmp
in
add
xchg
rcrb
bound
xchg
fwait
lahf
ficoml
sti
or
cmpsl
scas
jp
fnstsw
xor
test
lea
lea
xlat
jp
xor
push
sub
stos
shlb
push
shrb
adc
pop
add
jle
outsb
idivb
fbstp
mov
xchg
das
push
loop
lods
loop
sbb
push
pop
out
daa
sbb
and
or
mov
gs
fnsave
rcl
xor
sbb
rclb
popf
hlt
adcl
shrb
addr16
fdivl
iret
adc
xchg
xchg
add
inc
in
cmp
and
lahf
inc
push
arpl
xchg
sahf
gs
inc
daa
xchg
xor
ficoml
das
push
loopne
lea
outsb
mov
fadds
mov
push
inc
pop
pop
jns
jne
orl
mov
mov
inc
dec
outsl
lods
leave
or
mov
fmuls
outsb
cld
adc
sub
shr
lret
cmp
cmpsl
insb
mov
test
dec
sbbl
push
les
or
sbb
mov
outsl
inc
sub
mov
inc
ds
sbb
add
loope
inc
mov
jae
dec
push
imul
divl
mov
dec
pushf
cmp
inc
inc
inc
mov
rolb
adc
cwtl
dec
rcrb
jecxz
push
fdivrs
xchg
push
data16
sub
outsb
push
mov
lret
es
popf
popl
stos
push
mov
cmc
push
insb
xor
cmp
mov
dec
mov
aad
js
jb
loop
sbb
in
sti
xor
and
fidivrs
cltd
pop
lret
adc
add
popa
repz
clc
add
mov
popf
in
mov
bnd
int
pop
fsubrs
fs
xchg
outsb
shl
fdiv
lahf
xchg
xchg
adc
cmp
fisttpll
ss
or
add
sarl
and
jmp
loopne
adc
roll
lds
in
repz
add
push
adc
bound
into
arpl
mov
mov
pop
cli
lea
and
jo
cwtl
js
mov
xlat
dec
je
gs
lods
xchg
and
test
fnsave
mov
or
pop
pop
sub
inc
sahf
mov
lea
mov
adc
test
pop
mov
out
andb
pop
das
add
push
adc
lods
popa
sahf
ja
mov
xor
xor
sbb
mov
into
int3
rcr
out
outsl
xor
lret
outsb
test
xchg
mov
nop
rclb
das
add
ja
test
incb
add
jne
inc
cwtl
inc
sbb
mov
push
mov
inc
mov
enter
jo
or
inc
pmulhuw
mov
pop
test
xlat
cmc
jle
lret
xlat
mov
sbb
jbe
pop
scas
push
lahf
sahf
cmc
popa
jge
insl
xor
cmp
jo
jle
add
mov
pop
xchg
sub
mov
or
mov
push
jp
inc
rolb
daa
xchg
aas
daa
iret
sbb
push
cmpsb
mov
xlat
pop
std
push
sbb
xor
dec
inc
in
js
pop
cltd
xor
lods
addr16
xor
mov
adc
aad
mov
sub
adc
insl
jbe
sbb
fistl
out
sub
inc
inc
repnz
fcompl
addb
dec
mov
cmc
mov
lret
and
fs
xor
pop
ret
cmpsb
not
fistps
mov
push
sbb
jmp
xchg
testb
pop
ss
push
cmp
and
sbb
es
insb
mov
jae
dec
shrb
inc
pushf
add
pushaw
loopne
das
jbe
or
fcomps
mov
sub
adc
pop
adc
nop
nop
inc
jl,pn
loope
icebp
or
loop
lock
imul
rolb
push
inc
inc
sahf
push
cmp
xchg
popa
out
dec
loop
fistpll
cmp
xchg
jecxz
mov
mov
inc
sub
jbe
push
or
dec
mov
in
rorl
push
sahf
out
hlt
push
pushf
cmp
test
stos
inc
imul
xchg
jo
jnp
and
mov
xchg
ss
js
leave
hlt
adc
loopne
jo
pop
fidivl
rcl
pushf
ljmp
inc
pop
and
imul
scas
xor
outsb
insl
jecxz
clc
push
dec
sub
xchg
stos
jbe
inc
cmp
inc
cmp
int
fnstenv
popa
mov
hlt
hlt
das
add
notb
test
pop
lds
xlat
enter
cmc
cmp
loope
les
mov
ds
inc
cli
xchg
xor
aam
and
fldt
das
xchg
lret
push
push
js
std
movsb
xchg
or
nop
mov
push
fldl2e
popa
mov
call
mov
xor
add
icebp
dec
dec
inc
xchg
aaa
mov
pop
xorb
push
cmpsl
inc
stc
fadds
test
or
xor
out
test
dec
inc
mov
das
pop
xchg
rclb
fchs
std
lds
stc
andb
mov
cmp
fisubrl
ljmp
pop
push
into
push
pop
mov
ret
loopne
lds
pop
lock
jle
sub
pop
push
push
mov
shrl
jl
mov
push
add
xchg
nop
xor
insb
pop
xor
push
insl
pop
daa
shl
jae
xor
hlt
inc
xor
outsb
push
hlt
loope
push
ror
and
push
int3
leave
js
sarl
aaa
cli
inc
enter
hlt
adc
pop
aaa
jnp
aad
mov
adc
mov
jno
into
inc
lods
jg
and
or
push
cmpsl
xor
stc
and
pop
ljmp
mov
inc
addb
and
mov
arpl
movsl
mov
add
cmpsb
aaa
push
jle
int3
mov
bound
ja
lcall
push
in
dec
mov
add
lret
mov
pop
mov
scas
xchg
scas
faddl
xor
repz
daa
mov
test
shl
loope
or
mov
jecxz
pop
or
mov
in
jecxz
aad
pushf
jmp
xchg
inc
inc
dec
push
inc
imul
int3
sar
cmp
std
xor
add
sbb
mov
mov
pop
jle
iret
pop
call
push
leave
enter
mov
lds
aam
je
push
sbb
aad
orl
adc
out
xor
enter
or
jecxz
mov
lea
lret
inc
pop
fadds
adc
sbb
mov
call
dec
aad
dec
dec
stc
and
push
add
pop
inc
sub
xor
lods
fsubr
push
mov
xor
xor
fcoms
fadds
push
nop
adc
jmp
push
leave
jnp
js
int3
inc
pop
pop
test
cli
test
xchg
cwtl
repnz
sbb
rclb
pop
mov
test
jecxz
pusha
mov
ficompl
xor
pushf
popf
sti
mov
and
xchg
xchg
rcrl
push
dec
mov
add
mov
lods
and
mov
mov
jg
add
ljmp
xor
ja
and
fbld
xlat
notb
clc
lds
xor
sub
daa
lock
enter
filds
les
mov
add
subl
enter
es
rolb
dec
shlb
xor
out
mov
sub
cmp
inc
das
xlat
cmc
xor
mov
lcall
mov
loopne
aas
fwait
xchg
imul
repz
sbb
bound
pop
repz
cmp
nop
jno
xor
cli
jbe
cmp
lahf
mov
int3
sub
clc
gs
dec
sbb
dec
pop
xchg
inc
popa
sbb
xor
xor
lret
inc
pop
ret
aam
or
and
jo
fwait
jb
sbb
repnz
popa
mov
xchg
mov
sub
lcall
inc
hlt
push
ret
jmp
test
aad
sbb
mov
inc
mov
movsb
push
in
enter
sub
test
sbb
fidivrl
addl
dec
popf
cmp
sar
mov
rcl
xchg
cmp
push
jns
loopne
test
int
mov
pop
dec
cmp
and
aam
dec
mov
movsb
inc
dec
out
out
bound
nop
lret
mov
inc
pop
dec
sti
xor
dec
xchg
clc
and
xor
lahf
imul
cmpsl
test
das
sub
mov
jbe
sbb
adc
in
push
mov
stos
add
pop
xor
idivb
cli
pushf
ret
rol
adc
add
gs
shll
or
popf
outsl
icebp
fdivrp
jnp
dec
movsl
aam
xchg
push
bound
cld
xlat
adc
sub
sarl
aaa
mov
fcomps
int
push
mov
mov
xchg
mov
jae
rorl
sbb
push
out
fucomip
std
out
shl
xchg
pushf
fsubl
inc
popf
sbb
pop
mov
mov
push
fcmovu
mov
imul
xor
les
fiadds
or
aaa
stc
les
scas
jecxz
mov
call
leave
and
dec
jo
stos
cmpsl
rolb
out
ret
inc
xor
negb
inc
xchg
xor
push
in
out
dec
jo
stc
out
ljmp
cmp
sarb
jnp
xchg
sbb
and
outsb
in
ds
mov
cltd
mov
mov
push
mov
push
add
mov
mov
sbb
sti
mov
std
je
std
testl
mov
out
arpl
scas
fwait
mov
out
ds
mov
fs
mov
mov
cld
lcall
inc
cmp
xor
ffreep
sub
xor
and
inc
test
sbb
pop
movsb
dec
test
mov
inc
sarb
aam
int
sbb
xchg
addr16
leave
jno
mov
dec
cmpsl
fcmovnu
loope
sbb
push
ret
mov
mov
negb
or
bound
je
jne
fisubrs
in
les
xor
stc
out
outsl
add
loopne
xor
xchg
pop
add
ss
mov
pop
mov
xchg
xchg
aaa
scas
rcrb
sub
mov
mov
jmp
lcall
aas
ss
flds
dec
je
in
cmp
xchg
sbb
in
enter
sub
jge
mov
ret
adc
adc
test
adc
lret
push
lods
test
xchg
repnz
fists
pushf
out
out
and
xchg
popa
imul
dec
add
xor
mov
add
xor
cmp
mov
ret
rcl
mov
push
cmp
pop
in
jbe
enter
ja
sarb
fs
xor
mov
push
jl
cmp
cmp
xor
xchg
pop
ret
xchg
movsb
push
popl
nop
sbb
adc
dec
jne
or
mov
and
mov
push
and
sub
jb
mov
repz
add
ret
cmp
jno
jle
movsl
arpl
cmp
mov
and
repz
test
pop
mov
jb
sbb
rcrb
das
jmp
pop
ficoml
xchg
cmp
daa
test
push
lahf
sahf
inc
mov
pop
mov
or
jl
icebp
lods
lea
mov
into
xchg
adc
fst
ljmp
dec
dec
xchg
or
and
loop
cltd
jmp
pop
push
ret
lret
adc
or
mov
mov
rorb
hlt
cmpsl
inc
clc
loope
jl
sub
or
aaa
repz
scas
sub
jecxz
jno
movsl
leave
mov
mov
xor
jg
test
mulb
mov
je
scas
push
push
add
and
pop
js
daa
sbb
mov
call
adc
mov
inc
mov
sbb
jecxz
test
push
mov
add
clc
addr16
xchg
outsb
xor
ficoms
cmp
xor
imul
lret
aam
adc
pop
stos
jle
cltd
stos
ret
movsb
jno
shlb
pop
sbb
and
jl
sub
jge
mov
mov
call
mov
jae
sub
shr
mov
xlat
mov
jnp
inc
push
popa
in
pop
push
scas
jb
sbb
dec
js
cli
xor
stos
or
mov
int
loope
mov
adc
pop
cmp
notl
lcall
ljmp
sub
mov
inc
mov
std
cmp
in
out
out
sbb
lock
aam
ret
stos
and
push
pop
jp
loopne
sbb
pop
in
jbe
xlat
lcall
pop
xchg
mov
mov
pop
xor
stos
jns
and
inc
mov
jg
lret
stc
push
iret
data16
test
jo
xchg
cmp
xor
addr16
mov
adc
insl
mov
sbb
jo
shlb
mov
test
adc
clc
xchg
stos
add
xchg
and
jmp
loopne
mov
jo
ds
vstmxcsr
push
ret
cmc
xor
mov
cwtl
jno
arpl
jmp
rclb
sahf
dec
jmp
jge
cld
cmpl
icebp
shll
out
sub
sbb
lcall
mov
fwait
int
mov
test
test
test
pop
sti
xor
iret
xchg
cmpsb
mov
adc
fisubl
inc
mov
jae
aam
out
add
stc
out
push
popf
out
jnp
mov
mov
and
mov
es
dec
ja
mov
push
and
cwtl
es
into
loop
mov
adc
sub
adc
dec
xchg
test
sub
inc
jne
out
hlt
sub
jnp
aaa
push
jmp
lret
sbb
shll
mov
push
in
mov
fisubs
shl
and
loope
decb
adc
subb
ljmp
cmp
repz
in
sti
div
lds
push
mov
inc
dec
xchg
sahf
dec
push
dec
mov
inc
lret
sbbl
adc
outsw
push
jb
cmc
loope
jmp
sahf
movsb
movsb
lret
sub
adcb
es
addl
jp
inc
sub
or
ljmp
and
xor
xor
push
mov
xchg
and
loop
push
insl
sub
movsb
popf
in
lret
mov
or
aas
aas
int3
shr
push
add
int
lret
xchg
pop
mov
in
and
xchg
mov
inc
xchg
sub
das
mov
xchg
loopne
pop
bound
push
xor
fstps
push
pop
push
cmpsb
jb
stc
add
xor
inc
cld
pop
stos
or
fnstcw
mov
lahf
add
and
mov
icebp
xchg
mov
push
xchg
pop
test
add
xchg
xchg
or
lret
pop
push
mov
cmp
pusha
stos
sub
xchg
fistps
push
lds
lock
jl
imul
mov
sub
pop
fs
shll
dec
mov
in
mov
mov
loope
mov
jo
pushf
jo
fwait
adc
mov
leave
jp
jle
cmpb
jbe
cmp
mov
push
icebp
dec
into
xchg
or
or
imul
fisttps
mov
pop
lods
gs
and
sbb
dec
jmp
xor
test
xchg
xchg
jnp
mov
movsl
mov
and
pop
pop
ret
jne
mulb
and
mov
dec
arpl
xchg
cmc
pushf
inc
rcrl
into
inc
mov
out
inc
andl
sbb
scas
aad
cld
and
mov
out
fisubrs
sti
mov
dec
or
dec
push
daa
push
pusha
mov
daa
shlb
jp
mov
rol
sar
xchg
or
mov
inc
jmp
stos
into
adc
inc
mov
stos
orl
cmp
fmull
sbb
and
xlat
fcoml
push
imul
test
push
inc
aaa
mov
push
mov
and
dec
cmp
push
push
popa
push
xlat
scas
or
jbe
mov
xor
cmp
fists
daa
pop
dec
pop
adc
lret
inc
push
sub
shll
mov
out
repnz
test
mov
push
adc
das
xor
mov
out
lret
mov
and
mov
push
cs
mull
outsl
sbb
sbb
cmpsb
popf
xchg
fldt
push
and
mov
fcompl
xchg
into
data16
dec
std
mov
inc
mov
fnsave
jns
cwtl
xor
fwait
lds
xor
imul
dec
pop
mov
in
add
cli
push
adc
or
jle
inc
sbb
add
sti
jmp
cmp
adc
add
lods
decl
xchg
jmp
jae
jo
pop
fists
adc
jnp
ret
fucom
mov
push
push
push
mov
jmp
outsb
and
or
pop
cld
xchg
fstp
hlt
push
lret
in
loope
aam
jmp
fstps
mov
outsl
pop
rorl
sbb
push
lods
adc
sbb
push
or
adcl
add
cmp
outsl
sub
lahf
pop
cs
dec
test
arpl
add
dec
and
outsl
xlat
rolb
xor
mov
mov
pushw
push
push
or
xchg
xor
icebp
test
inc
lahf
pusha
lds
jle
mov
xchg
out
fcoml
flds
into
cli
add
mov
sbbb
movsb
xor
iret
stos
outsl
pop
sar
mov
leave
in
mov
imul
aam
mov
sbb
pop
and
lret
or
mov
mov
dec
in
lea
fimuls
mov
lcall
pop
sti
sbb
push
or
faddp
out
jmp
cli
movsl
jge
mov
dec
enter
ljmp
stos
push
jne
xchg
gs
adc
pop
cmp
mov
and
aad
xchg
mov
aas
fimull
aam
jp
fidivl
pop
sbb
push
in
sbb
pusha
das
faddp
insb
pop
mov
xor
imul
add
pusha
in
in
sub
test
and
bound
cld
fs
mov
xchg
inc
sbb
or
add
add
mov
je
adc
rcl
out
inc
jl
aad
mov
inc
inc
test
movsl
lret
arpl
or
mov
repz
outsb
cmp
or
scas
pop
fidivrs
cmp
loop
mov
jmp
shr
gs
add
or
or
data16
aad
test
mov
sahf
add
insl
pop
jge
inc
sub
rcll
cmp
xor
shrl
sbb
mov
iret
mov
xchg
mov
jg
and
icebp
mov
call
fidivl
xchg
push
insb
jge
jnp
lcall
add
mov
xchg
hlt
fstpt
aam
mov
jle
sbb
lods
sub
decl
lret
jle
testl
pop
in
push
enter
fistpll
xchg
pop
push
add
mov
add
ss
mov
cmp
rorb
mov
test
std
jno
xchg
push
jno
outsl
sbb
and
lret
dec
repnz
ret
pop
xor
xchg
sub
and
sub
sbb
shll
mov
xchg
hlt
movsb
negb
loop
faddl
movsl
jge
shr
inc
pop
test
jb
repz
jge
xor
insl
call
cmc
mov
inc
popf
les
int3
js
pop
nop
adc
out
loopne
xchg
call
test
aad
icebp
lea
mov
cmc
and
inc
push
movsb
inc
add
repnz
sbb
xor
repnz
mov
stos
push
mov
daa
push
mov
cmp
pusha
js
test
mov
popa
push
jp
fcom
rcrl
mov
xchg
adc
and
dec
clc
repnz
roll
inc
mov
pop
or
dec
xchg
sub
mov
adc
cli
arpl
mov
rcll
xor
in
fidivs
mov
jbe
lahf
clc
fs
mov
jno
jecxz
mov
or
pop
test
xor
sbb
xchg
push
fldt
cmp
icebp
adc
scas
mov
xchg
jg
data16
jnp
adc
xor
shr
adc
andb
or
outsb
aaa
push
jb
cmp
shlb
call
jg
jg
jno
stos
popf
lock
inc
repnz
cmp
addr16
push
pop
int3
stc
dec
lds
lods
inc
leave
pop
cmp
sbb
cmc
test
nop
dec
std
div
dec
xchg
mov
or
stc
push
bound
test
mov
cld
mov
dec
lea
icebp
xlat
or
or
mov
dec
mov
xchg
test
fistps
imul
mov
mov
iret
outsl
bound
aaa
xchg
and
or
xchg
arpl
adc
jmp
jp
mov
shlb
or
mov
les
outsb
fcmovu
js
sahf
or
pusha
je
jg
adc
out
test
inc
repz
mov
sub
pop
das
movsl
xchg
pop
shlb
cli
sub
aas
mov
loope
les
addr16
ljmp
out
cmpsl
cltd
mov
in
mov
mov
cmp
test
jbe
xor
mov
xorl
js
sub
ljmp
aaa
mov
and
and
adc
mov
xor
aaa
jae
enter
mov
int3
or
fcomi
movaps
leave
mov
add
test
push
stos
adc
mov
pop
fwait
dec
fimull
test
idivb
xchg
sub
mov
cmp
xor
sub
xchg
push
ror
xor
jmp
fsubl
das
dec
int3
scas
jbe
sbb
sub
inc
lret
mov
cmp
fisttpl
fcmovnu
out
bound
or
xchg
mov
dec
stc
xlat
add
pushf
in
mov
pop
jns
ja
lods
push
in
pop
jecxz
pop
loopne
rolb
and
js
adc
add
in
xchg
lcall
repnz
and
sub
stos
pop
mov
call
push
shll
jge
lods
ret
scas
jg
adc
push
addl
stos
dec
lea
sahf
push
dec
imul
es
setne
inc
test
sar
test
dec
in
pop
pop
mov
fistps
shr
test
lock
inc
je
push
rcrb
pop
cmp
data16
rclb
mov
js
insl
lods
jns
xor
aad
cmp
stos
loop
notl
xor
pop
jge
or
lret
mov
clc
fnstenv
out
mov
lods
int3
cmp
jbe
cwtl
std
in
lea
nop
out
call
mov
mov
jbe
fistps
or
out
fsub
mov
mov
addr16
dec
and
or
test
je
mov
mov
outsb
jo
push
adc
cmpsb
mov
mov
push
fldcw
adc
pop
fdivl
hlt
fsubs
mov
push
xchg
jae
and
decl
testl
inc
clc
ja
mov
jl
and
fs
dec
push
dec
cmp
pop
xchg
aam
test
sub
sub
mov
imul
scas
add
scas
mov
and
adc
mov
cmpsb
inc
mov
and
mov
outsl
roll
scas
aad
ficoml
lods
inc
dec
or
and
popf
add
add
inc
mov
movsb
jo
daa
das
out
adc
mov
enter
xor
add
mov
mov
sub
nop
xchg
mov
scas
sahf
aad
push
push
adc
call
jbe
and
xor
in
xlat
lea
mov
rorb
aaa
popf
out
insl
fidivrs
adcb
imul
sub
sbb
shlb
sbb
int3
or
inc
insl
jge
pop
fldl
repz
cmp
or
cmp
mov
les
dec
mull
inc
scas
fsubrp
and
subl
in
sar
out
and
fwait
pusha
add
fidivs
pushf
lock
and
mov
sbb
rcrl
imul
mov
repz
outsb
push
or
and
nop
in
mov
bnd
sub
in
sbb
push
hlt
test
loopne
icebp
jmp
xchg
mov
stc
jecxz
sbb
xorl
je
fidivs
xchg
rolb
adc
ret
daa
xor
popa
fidivrs
pop
xor
or
push
sbb
push
xor
jne
aas
add
sbb
pop
dec
cs
dec
cmpb
ds
and
mov
add
aaa
scas
test
js
scas
movsl
or
cmp
jg
insl
pop
pop
mov
push
fs
push
sbb
mov
stc
push
test
repnz
movsb
paddd
mov
fsubrs
out
in
lds
jo
xor
ror
popa
cs
int3
sbb
dec
push
lea
in
sbb
jp
pop
cwtl
mov
mov
enter
pop
fs
aad
pop
ljmp
ja
insl
pusha
jge
mov
pop
dec
inc
fwait
xchg
out
enter
outsl
lods
dec
pop
inc
sbb
inc
cmp
and
pop
cwtl
adc
push
cwtl
cmpsb
sbb
xchg
sbb
push
jge
std
je
das
cmp
fsin
inc
les
add
fidivrs
in
cmp
xchg
jae
mov
or
les
aad
cs
out
scas
and
cli
sub
mov
popf
add
pop
pop
mov
scas
test
xor
fcoms
jnp
xlat
cmp
punpckldq
leave
mov
and
cmpsb
push
push
mov
mov
inc
mov
repz
adc
lods
mov
push
xchg
jl
adc
in
adc
cmova
inc
push
mov
addb
xor
xor
cmp
jl
fsub
test
push
sub
pop
stc
mov
xor
mov
sub
xchg
add
fisttpll
and
push
dec
xor
pop
add
cltd
das
test
call
jns
adc
add
mov
andl
lods
incb
mov
xchg
pop
pop
xchg
or
in
dec
es
add
and
push
mov
mov
testb
repz
loope
ljmp
or
das
cli
sub
jns
pop
jne
jle
mov
clflush
rcrb
mov
sub
sub
es
aam
inc
sub
jnp
xchg
xchg
cmp
bound
or
cwtl
ficoml
into
leave
shl
cmp
loopne
inc
pop
push
ret
and
inc
cmc
mov
inc
add
in
cmpsl
sbb
inc
or
rorl
mov
push
sti
shlb
std
xchg
fwait
popa
adc
insl
cmp
push
mov
outsb
add
stos
imul
rcrb
loop
jmp
mov
leave
cmp
lods
push
gs
cmp
jmp
ret
jns
fisttpll
or
in
mov
stos
mov
ss
add
xchg
jae
sub
xor
lea
fs
cmp
push
jne
outsb
push
cmpsb
loopne
xchg
shl
jb
idiv
adc
add
sub
and
mov
mov
cmp
sub
mov
imul
jge
stos
loop
fistps
push
shll
jnp
adc
cwtl
mov
xor
nop
mov
push
enter
insl
jecxz
xor
out
inc
fidivs
addr16
imul
repz
dec
pusha
lea
or
insl
or
push
jae
xor
insb
in
jne
sub
pop
in
mov
jnp
adc
push
dec
sub
sbb
pop
mov
mov
xor
shl
mov
push
insl
hlt
push
ret
or
jecxz
jns
lret
or
push
pop
cmp
lret
adc
nop
cmp
cwtl
sub
lret
jmp
jb
adc
and
jle
imul
mov
lahf
lahf
mov
lcall
test
daa
jmp
mov
lret
adc
add
xchg
stos
negl
dec
nop
add
les
dec
dec
and
call
mov
leave
stos
fbld
icebp
popa
jbe
pop
dec
in
and
imul
inc
sbb
into
cmp
sbb
adc
lea
lock
or
mov
sahf
sahf
sbb
add
stos
or
or
push
and
test
stos
mov
mov
lea
inc
and
pop
loop
out
scas
fdiv
mov
int3
jecxz
xchg
add
jecxz
mov
out
enter
adc
push
call
dec
scas
cwtl
xlat
ret
not
icebp
add
sbb
inc
adc
sar
dec
lock
cmp
xlat
adc
push
lock
ret
xchg
stos
ss
aas
xor
push
or
or
outsl
stos
xchg
stos
fildl
out
jb
xor
dec
pop
jg
shlb
dec
popf
xchg
inc
or
lcall
test
bnd
int
xchg
in
push
jbe
pop
pushf
loope
xor
outsb
stc
imul
xchg
dec
repnz
mov
loope
mov
scas
imul
clc
adcl
divb
mov
sahf
repnz
push
cmp
and
dec
lahf
fistl
cmpsb
mov
inc
aas
sub
cmp
sbb
in
gs
push
mov
popf
ret
pop
fstl
insb
outsl
scas
popf
je
sub
sbbb
lcall
aas
or
popa
and
mov
mov
or
xchg
inc
lahf
xchg
push
test
sahf
insl
pusha
lcall
and
shll
imul
sbb
daa
js
lds
sub
push
sarl
or
ja
mov
loop
mov
adc
sbb
inc
pop
repz
xor
and
mov
sarb
add
cwtl
cmc
or
xor
cmpsb
sti
push
in
jb
and
popf
jo
jge
dec
xor
pop
je
dec
mov
scas
lea
xchg
mov
pusha
mov
test
mov
adc
sbb
and
into
cmpsb
test
sub
je
or
mov
fstps
and
mov
test
push
fwait
pushf
les
fbld
pop
xchg
pop
ja
add
push
repnz
and
int
pop
cli
xor
cmpsl
pop
mov
dec
inc
iret
pop
cmpsb
roll
bswap
aaa
test
inc
stos
push
imul
mov
push
loopne
pop
fdivr
fdiv
dec
ds
jl
sub
repz
adc
ret
clc
cmp
jp
shrb
fiaddl
sbb
inc
push
stos
rcrl
mov
inc
add
mov
cwtl
add
lcall
adc
es
mov
add
std
push
xor
dec
lds
push
sti
rolb
les
mov
insb
jp
icebp
shll
dec
sarl
add
rcrb
and
scas
cltd
aas
add
mov
and
jo
mov
dec
mov
adc
or
test
push
jnp
pop
std
lds
cld
js
sti
ss
les
xor
aad
jnp
daa
cmpsl
or
mov
mov
popaw
fisubrl
int3
adcl
push
scas
popf
scas
stos
andb
pop
mov
clc
dec
sbbl
push
addr16
add
out
mov
jg
or
insl
or
xor
mov
mov
cmp
imul
xor
pusha
push
aaa
out
cmp
mov
out
and
push
cmpsl
repnz
lea
sti
ret
lea
jmp
sbb
loop
movsl
popa
out
or
lret
mov
stos
mov
pop
or
nop
add
fld1
mov
imul
push
jae
in
dec
aaa
lea
pop
fdivl
mov
inc
adc
das
xor
out
test
movsl
mov
ret
pop
sbb
cmp
aaa
mov
call
cmp
inc
mov
xchg
daa
jl
jns
push
cmp
push
add
push
push
out
sub
cmp
add
push
push
pop
sbb
fisttps
dec
sarl
clc
aam
jmp
scas
push
subl
lods
test
addr16
xor
or
aad
xchg
cmp
outsb
cmpsb
and
cmp
dec
jbe
sbb
push
shrl
outsl
jmp
xchg
sub
fld
rorl
mov
ss
movl
stos
mov
xlat
std
ja
inc
jns
pop
mov
push
stc
mov
xlat
mov
xchg
andl
mov
aaa
repnz
pop
ss
adc
push
push
mov
and
hlt
dec
jne
cmp
repnz
and
or
add
clc
jl
pop
ficomps
sarb
pop
dec
int
cmc
jno
imul
mov
sbb
jbe
lock
out
inc
mov
cltd
and
and
mov
outsb
dec
mov
cmp
arpl
pop
jnp
xor
push
add
or
or
repnz
sahf
outsl
xchg
mov
bound
std
cmc
xor
mov
mov
and
insb
pop
call
pop
or
and
or
add
lret
mov
add
inc
mov
sbb
imul
adc
push
jge
icebp
xchg
xor
or
cmp
sbb
arpl
xchg
sbb
mov
test
mov
ja
or
outsb
popa
add
xlat
cmp
test
inc
lods
test
rcr
push
xchg
lret
mov
inc
dec
and
jb
dec
pop
idivb
loopne
stc
jne
add
leave
mov
mov
sub
fdivrl
sbb
add
push
adc
sub
or
shll
sahf
adc
cmove
xchg
inc
xor
ficompl
pop
dec
add
ret
mov
mov
inc
adc
call
lods
dec
je
lods
iret
cmp
rcl
int
dec
xchg
ret
jae
insl
repnz
mov
shl
push
and
sub
xchg
hlt
mov
imull
sub
or
adc
rcrb
xor
rcr
cmc
fists
sahf
std
dec
mov
popa
inc
jmp
mov
push
cmp
or
out
ljmp
lods
in
stos
mov
stc
fists
adc
push
jge
push
mov
jbe
cmp
jp
jno
and
cmp
shlb
jge
pusha
pop
fsubrp
mov
push
push
or
sbb
in
dec
jge
mov
imul
mov
pushf
xor
mov
pop
je
dec
push
sbb
sbb
arpl
mov
pop
lcall
adc
push
mov
xchg
dec
fs
cmp
insb
insb
lods
nop
bsr
icebp
add
mov
xor
xor
dec
and
arpl
adc
adc
in
sbb
cmpsb
xor
xor
sub
push
xorb
pop
cmc
mov
and
mov
out
repnz
xlat
ror
inc
push
pop
decl
push
outsb
xor
pusha
sbb
mov
rol
cld
shlb
and
jbe
xlat
xchg
jns
cmpsl
iret
fs
xor
test
loope
in
xor
pop
add
mov
add
pop
pop
sub
out
rcll
sub
xchg
xor
icebp
bound
adc
pop
xor
adc
mov
test
jp
jl
popa
xchg
xor
xor
out
scas
jae
test
mov
scas
clc
add
lcall
test
mov
gs
mov
jmp
bound
mov
imul
mov
aaa
leave
cmp
sar
cmp
hlt
mov
outsb
iret
adc
jo
fistl
ss
mov
adc
in
mov
cmp
in
push
sub
ret
mov
sub
jge
adc
mov
int
hlt
gs
sub
out
pop
mov
inc
fwait
sub
or
cwtl
push
jl
out
loope
and
sbb
loope
pop
repnz
push
xchg
js,pn
cltd
inc
push
std
outsb
push
leave
and
push
stos
mov
jae
mov
and
add
std
and
dec
and
clc
aas
enter
add
add
sbbb
call
jle
lret
sahf
in
std
int
iret
mov
inc
rcrl
sbb
shlb
mov
add
mov
pop
mov
pop
xchg
pop
repnz
or
in
cwtl
inc
cwtl
and
out
xchg
insl
inc
pop
push
or
jnp
iret
aas
adc
mov
xor
imull
insb
mov
ja
nop
xchg
in
mov
cld
push
jecxz
mov
jmp
inc
jo
adc
xor
pop
leave
cmp
cli
xchg
into
mov
fdivs
adc
mov
nop
les
cs
inc
push
je
inc
push
mov
leave
xchg
lea
ret
xlat
jp
dec
shl
mov
lret
lods
popf
outsl
inc
xchg
adc
adc
jle
je
lds
jp
pop
arpl
mov
sub
sub
mov
push
push
add
fadds
jae
add
mov
mov
fdivs
add
dec
adc
xchg
lahf
cltd
add
dec
repz
movsl
test
mov
ret
xor
iret
pop
xor
loope
mov
cs
jnp
pop
xor
mov
test
jnp
jo
out
rolb
jl
jnp
jae
jg
push
and
pushf
ljmp
and
fwait
inc
xorl
enter
sbb
cmp
adc
rorl
dec
clc
lret
stc
stos
rclb
add
cmp
shl
testl
roll
jbe
or
inc
mov
sti
jle
aad
push
mov
insl
xorl
or
jle
add
xchg
pushf
mov
sbb
pop
or
xlat
out
xchg
jnp
mov
sbb
test
jns
pop
add
push
or
andb
int
loop
shll
leave
movl
js
out
out
push
pandn
inc
data16
dec
push
pop
mov
lret
sub
xchg
jno
pop
ds
xor
sarb
jb
pop
lret
insb
movsl
fwait
sahf
push
pop
stos
out
cs
addl
fsubrl
js
jge
sbb
dec
cmpsl
sahf
ss
fwait
inc
mov
cli
push
andl
inc
icebp
hlt
inc
sbb
dec
pop
mov
push
jb
push
jmp
dec
into
xchg
dec
push
mov
sub
sbb
or
mov
adc
add
insl
fnstcw
sbb
in
dec
rorl
mov
es
sbb
push
mov
cmp
mov
pop
js
out
jo
pop
inc
push
jecxz
lods
lods
pop
pop
xchg
push
orb
dec
pusha
sbb
xor
test
push
int3
shll
aas
cmpsb
imul
stos
inc
cmp
lds
inc
testb
jge
xor
lea
dec
cwtl
stos
cmp
add
sbb
mov
jg
inc
mov
and
mov
sbb
stc
add
mov
and
call
clc
xchg
out
mov
pusha
jp
jo
subl
inc
push
mov
ss
pop
push
out
jne
push
adc
orl
mov
mov
push
bound
xor
add
sub
sbb
loop
sbb
rcr
dec
stos
jns
xchg
lods
push
ret
push
aad
subb
mov
les
cmpsl
add
enter
xor
or
cmp
sub
pop
fbld
ja
xor
mov
loop
sub
ja
mov
jbe,pt
rorb
aaa
xor
mov
mov
jb
negb
idiv
sahf
movsl
repnz
cmp
fisubl
cmc
mov
std
jp
inc
outsb
ljmp
inc
cmc
sub
fwait
sbb
xchg
sbb
imul
mov
test
pop
repz
mov
or
loope
jne
cmp
xor
sub
hlt
repnz
push
frstor
adc
loop
sub
pop
mov
adc
es
jmp
int3
sahf
fistps
pop
and
fsubr
imul
aas
stos
iret
ljmp
add
pop
mov
stos
out
mov
jge
inc
cltd
scas
popa
jne
in
sub
ror
aad
stos
push
scas
fxam
pop
xchg
outsl
sub
xor
pop
daa
pop
nop
push
movlhps
jae
stos
xor
cmpb
movsl
imul
cmc
or
jg
or
or
popf
mov
iret
push
je
daa
push
and
add
sbb
push
add
mov
clc
add
pop
cmp
pop
xbegin
jl
ds
dec
push
or
fbld
stos
inc
enter
sub
jno
push
mov
mov
sub
lds
sarl
inc
xlat
ret
fwait
ja
fiaddl
inc
xchg
cmpsb
xchg
mov
loop
enter
dec
jp
stc
les
push
sub
mov
sub
pop
mov
dec
push
ljmp
sbb
aam
inc
add
test
gs
mov
xchg
rolb
xchg
aam
xlat
jo
adc
mov
xchg
mov
jae
pusha
aam
sbb
scas
sbb
xor
adc
jb
out
pop
jge
out
insb
and
mov
push
or
inc
mov
ljmp
lcall
imul
andb
xor
jbe
jl
fdivp
adc
pop
bound
sub
imul
dec
xor
sub
push
ljmp
ds
pop
add
test
pop
cmp
loope
negb
stc
xor
loope
dec
lcall
sbbl
das
adc
sti
mov
lock
lock
jb
dec
mov
icebp
call
push
dec
pop
scas
flds
push
fists
jle
inc
and
clc
mov
sbb
xchg
insl
inc
out
ds
mov
mov
push
dec
mov
clc
aas
in
lods
pop
sbb
ficoml
xchg
ret
and
sbb
add
jno
ljmp
jb
loope
das
xchg
push
repz
outsb
mov
dec
imul
jge
rorl
inc
aad
mov
sub
pop
sub
aas
insb
into
and
fadds
addr16
sub
sahf
std
mov
into
sub
xor
lods
mov
jns
xor
movsb
add
cmp
enter
mov
cmc
push
or
ljmp
dec
and
jns
pop
pusha
pop
jnp
xor
mov
insb
insb
ja
aad
stos
mov
sub
jge
xchg
fsts
mov
push
jecxz
scas
rcl
sub
test
stc
repz
push
mov
dec
dec
pop
mov
inc
in
xor
pusha
sbb
xor
arpl
outsl
pop
mov
and
dec
xchg
sub
lods
das
dec
xchg
mov
jo,pt
int
and
mov
mov
xchg
dec
mov
sbb
popf
lods
mov
les
mov
mov
sub
das
mov
out
jg
out
add
sub
dec
sub
jae
and
xor
jne
cmpsl
fdivs
mov
and
sti
sub
enter
add
daa
lahf
sti
cltd
cwtl
mov
add
data16
int
and
out
aaa
add
rcr
jo
add
sub
pop
enter
cmpsb
loope
push
sub
out
jo
testl
mov
lret
pop
adc
dec
push
test
in
shll
iret
mov
in
lea
fwait
mov
push
adc
sbb
or
cli
out
pop
push
xchg
dec
fimuls
or
lock
fldcw
das
repz
loopne
mov
hlt
inc
dec
js
out
cli
inc
sub
pop
repz
xchg
sub
aaa
fsubs
xchg
mov
stc
lret
adc
sub
inc
adc
and
sub
lock
out
push
lock
mov
inc
jns
sbbl
cmp
cltd
faddl
lret
pop
push
adc
ret
cmpsl
pop
adc
and
cmpl
pushf
test
mov
in
sbb
dec
dec
mov
mov
loopne
addr16
and
mov
xor
cmp
vpshaq
mov
es
pop
leave
sbb
hlt
and
pop
sahf
mov
repnz
add
data16
and
rol
rcrl
bound
jge
sbb
ret
jo
pusha
dec
loop
xchg
cmc
and
cltd
jnp
int
js
cs
shlb
ljmp
sub
fidivs
add
jge
arpl
mov
inc
js
repz
adc
inc
mov
push
imul
mov
orl
leave
push
addr16
call
cltd
lcall
pop
stos
push
mov
pop
sbb
scas
loope
push
dec
or
xor
out
out
cmpb
inc
sbb
sub
shrb
cmp
cwtl
lret
into
cmp
outsb
scas
and
rcrl
movsl
std
mov
sub
fidivrs
sbb
adc
inc
mov
push
xor
push
rorb
mov
gs
xchg
push
cmp
cltd
enter
mov
lods
pop
mov
clc
dec
adc
push
movsb
test
dec
jo
jae
xchg
rclb
lods
push
mov
neg
ja
push
mov
stos
nop
xchg
movsb
jecxz
inc
rolb
inc
stc
mov
dec
scas
cmpsl
movb
jae
add
mov
jp
adc
fidivrl
dec
out
jge
lods
fwait
jmp
pushf
pushf
testl
icebp
mov
cmp
add
cmc
xorl
incb
mov
mov
sub
lods
fmull
cmp
rcrl
xchg
and
lahf
inc
cmpb
ja
mov
jp
pop
daa
jo
xchg
mov
jbe
mov
cld
cli
add
filds
mov
loop
and
mov
mov
ss
xchg
jp
fistps
bnd
inc
leave
js
jl
lds
gs
insb
gs
aaa
sub
test
cli
lods
xchg
adc
fisubs
cmp
or
imul
rolb
das
aas
adc
imul
imulb
shll
ficompl
psraw
aaa
insb
dec
xchg
daa
movsb
lret
fucomip
stos
fsubr
xchg
addl
fimull
shlb
xchg
pop
push
cltd
sub
mov
js
loope
pop
push
mov
and
cli
decb
and
inc
push
cmpsl
jb
icebp
push
dec
ljmp
imul
std
into
ret
jle
add
popa
ret
dec
hlt
stos
mov
movsb
jns
dec
mov
insl
imul
in
stos
insl
iret
cmp
cltd
adc
push
dec
js
jge
loopne
int
push
enter
inc
inc
daa
mov
adc
mov
pop
xchg
aad
inc
pusha
dec
out
xor
es
sub
clc
leave
lods
jo
dec
shlb
dec
in
cwtl
lods
in
adc
inc
outsl
jmp
aas
jecxz
mov
shrb
jmp
cltd
movsl
jp
in
pop
nop
jbe,pn
or
rclb
jmp
stos
sub
or
loope
filds
lret
mov
sbb
pushf
test
in
gs
and
aam
mov
cpuid
sub
sbb
xor
test
test
nop
jnp
or
idivb
sti
adc
and
mov
ss
mov
pop
jmp
mov
bound
push
dec
call
test
jbe
inc
adc
sarl
pop
imul
pop
push
jnp
aad
sarl
add
pop
lret
xor
adcb
imul
and
scas
inc
dec
mov
xchg
mov
add
scas
gs
in
in
mov
xchg
xchg
outsb
adc
jo
les
sub
mov
push
jno
pop
jnp
sbb
pop
sub
repz
cmc
insl
sbb
mov
pop
push
adc
imul
aaa
ja
sarl
roll
in
mov
popa
ljmp
jno
jo
nop
cmp
popa
into
repnz
cmp
outsl
into
clc
jle
call
cwtl
xor
pop
push
shl
bound
xchg
mov
xor
loopne
sub
popa
out
and
lahf
adcb
popf
push
mov
out
aam
push
inc
adc
loope
les
lea
add
sbb
push
stos
jae
aas
in
add
push
call
scas
stc
movsb
repz
xchg
and
cmp
pop
xor
shll
subl
lock
inc
xchg
mov
mov
xchg
pop
ret
ss
xchg
loop
mov
les
mov
dec
add
enter
pop
push
fdivrs
addr16
test
sbb
mov
mov
fstl
aaa
pop
push
je
push
dec
mov
cmp
adc
or
int3
call
leave
jmp
mov
jno
out
insl
jl
adc
lret
jg
jecxz
xchg
adc
inc
and
in
xor
popf
cld
push
adc
xor
jns
lcall
mov
mov
insl
test
fwait
adc
mov
je
inc
or
sti
out
fstps
pop
ret
add
fwait
in
jp
arpl
mov
mov
test
jne
loopne
mov
call
iret
sbb
movsl
mov
push
cmp
mov
addr16
and
imul
push
push
test
enter
pop
out
xor
bound
cmp
jb
sub
decl
inc
out
jl
pop
jae
xchg
stos
mov
inc
stos
xchg
push
mov
sub
ljmp
mov
movsb
xchg
loop
stos
xor
mov
inc
push
pop
mov
in
shl
pop
popf
loop
add
jb
inc
or
nop
out
inc
cmp
les
and
jb
jae
js
nop
repz
insb
push
popf
icebp
mov
imul
xchg
insb
sub
clc
ficoms
jle
outsl
add
mov
xchg
sti
je
and
mov
mov
out
cmp
cmpsb
pop
movsl
fcompl
xchg
in
aas
add
ss
scas
movsb
inc
pop
cmc
dec
in
sbb
mov
shr
inc
jns
jmp
push
stc
lea
dec
or
sti
pop
jmp
xchg
add
xchg
xchg
testl
add
pop
ss
leave
hlt
gs
push
xchg
xor
cmp
fs
pop
cmp
sbb
imul
lods
mov
adc
xchg
or
add
jecxz
mov
inc
xchg
loop
popl
pop
inc
pop
fbld
xchg
negb
scas
mov
pop
das
push
in
inc
mov
arpl
cli
lret
xchg
adc
inc
pop
push
cmc
loop
popf
mov
jecxz
outsb
push
push
hlt
cmp
in
mov
or
mov
xor
fcoml
jne
fcmovnb
ljmp
xorl
cmpsb
negl
shll
dec
sub
sub
or
lret
mov
dec
test
mov
jg
and
adc
jno
insb
jns
add
bswap
cmp
xchg
into
addr16
aaa
aaa
mov
xor
cmp
add
inc
loop
sub
add
cmpsl
es
and
sbb
push
cli
arpl
push
sub
mov
mov
jnp
stc
loopne
inc
stos
addr16
ljmp
fucomi
test
add
jmp
mov
out
mov
sbb
fsubrl
inc
or
pushf
hlt
sub
sbb
inc
or
pop
fistps
jecxz
mov
mov
jns
fnstcw
sub
mov
stos
and
pop
test
jg
push
sti
push
push
add
and
adcl
stos
jae
push
imul
push
imulb
or
pop
mov
dec
mov
mov
pop
jne
scas
sub
xchg
loop
fimuls
rol
xchg
xchg
addr16
stos
rcrb
fnsave
es
lret
addr16
mov
mov
and
insb
cld
hlt
cli
mov
mov
std
inc
lods
insb
mov
sub
add
insl
ret
rorl
mov
sub
mov
popl
je
push
mov
mov
and
test
pop
push
into
loopne
shrb
mov
mov
adc
xor
push
jle
aaa
test
repnz
call
jge
fwait
shrl
pop
sahf
test
xor
jns
mov
imul
adc
insb
mov
cmp
movsl
xlat
lods
lret
data16
inc
sar
mov
aaa
out
jbe
mov
cmpsl
outsb
cmp
loop
jne
inc
or
stc
jae
loope
bound
adc
or
cld
ret
dec
and
mov
cmp
lahf
lahf
cmp
and
and
jg
or
sub
mov
xchg
or
jp
lret
push
and
fcompl
or
dec
into
or
int
sub
stos
daa
mov
outsb
outsl
mov
pop
xor
mov
in
stos
cmp
sti
jb
fldt
loopne
int3
sti
push
add
dec
scas
dec
cmpl
cwtl
xchg
sbb
cmc
iret
std
push
out
out
and
sub
inc
gs
cs
adc
lcall
insb
inc
and
dec
or
cld
mov
sub
les
mov
lahf
out
cmpl
dec
faddp
aam
mov
out
les
lea
dec
cmp
add
add
adc
push
into
outsl
lret
out
push
xchg
loope
repz
adc
or
pop
notb
jne
push
aas
aas
test
mov
pop
pop
mov
test
dec
and
inc
mov
mov
mov
mov
xchg
loop
es
data16
pop
push
jecxz
or
mov
in
mov
push
ror
addb
mov
out
xchg
jp
sub
mov
xor
or
xchg
push
mov
mov
in
faddl
aas
repz
and
lahf
sarb
xor
xor
aam
in
gs
add
pop
and
dec
mov
int
mov
xchg
loop
cmp
jbe
pop
test
xlat
sbb
cmp
aaa
data16
jns
xchg
fcmovnu
rclb
in
mov
add
insb
stc
jo
inc
cld
andb
cli
lcall
xchg
push
testb
icebp
movsb
sbb
nop
cmp
in
jmp
leave
or
in
fcmovnu
inc
push
lret
test
add
push
pop
inc
inc
hlt
sahf
cmp
or
cmpsb
inc
pop
pop
popf
jno
scas
mov
mov
roll
jg
rorb
aaa
adc
pop
add
mov
xlat
or
test
loope
jle
pop
adc
leave
popf
outsl
mov
inc
push
nop
sbb
xchg
mov
or
das
jg
sbb
and
xchg
cmp
dec
nop
insb
lcall
pushf
int
rorl
nop
cmp
push
int3
jmp
adc
cli
sbb
push
or
adc
inc
xchg
mov
or
push
add
cmc
nop
cltd
lock
test
mov
adc
popa
inc
outsl
shl
push
loopne
andl
adc
dec
xchg
test
sbb
insb
adc
dec
pushf
jnp
dec
adc
push
dec
adc
in
mov
or
push
dec
cmc
cld
aam
xor
ja
imulb
and
stc
push
cld
imul
scas
jo
arpl
adc
cs
pop
sub
dec
jl
mov
bound
ret
pop
das
lock
pop
movsb
ss
les
jns
mov
out
push
or
loop
fsubrl
mov
jne
xchg
inc
std
lret
sub
les
adc
lret
outsl
pop
sbb
inc
int
cmpb
mov
jmp
jb
nop
stos
adc
cwtl
repz
or
fstl
xor
add
cwtl
in
mov
adc
out
stc
jmp
ljmp
mov
jecxz
mov
jb
pop
arpl
subl
and
push
sahf
xchg
mov
lahf
lock
arpl
sbb
scas
and
or
ret
pop
imul
mov
fimull
popf
sub
and
lret
sbb
outsl
mov
inc
into
sub
gs
call
adc
cs
cwtl
iret
fidivrl
ja
loopne
and
orb
adc
mov
lods
aam
cld
jnp
mov
and
inc
popa
das
push
mov
add
mov
mov
in
jg
dec
es
jg
cld
dec
xlat
add
push
fsubrs
xchg
xchg
pop
dec
push
roll
or
push
stos
fdivl
cmc
jns
xor
addr16
fucomip
cltd
aam
mov
pop
lock
in
andl
pusha
les
xor
pop
add
pop
pop
stos
and
pushf
xchg
inc
insl
add
stos
inc
and
or
lret
mov
mov
enter
sahf
aas
nop
inc
mov
jle
rcll
ss
mov
jae
dec
out
data16
nop
jecxz
mov
pop
insb
xchg
cmp
stc
std
sub
repnz
in
sahf
cwtl
cmpsl
scas
shrl
mov
pop
ret
repz
mov
out
test
in
enter
cmp
outsl
xchg
mov
add
push
mov
mov
inc
movsl
xchg
xchg
cmpl
inc
mov
into
xchg
imul
inc
cmp
js
shrl
ds
add
mov
pusha
push
cmp
dec
cmpsl
pop
cmp
dec
xor
filds
jecxz
lret
cmpsl
daa
loopne
into
and
add
dec
xchg
pop
mov
xchg
lret
bound
aad
shr
and
mov
mov
push
jmp
inc
cs
fs
push
loope
xchg
les
fcompl
add
mov
daa
cmp
add
enter
orl
ds
lcall
mov
or
inc
mov
shl
movsl
sub
cmp
das
dec
jbe
cmp
dec
data16
xchg
push
data16
test
mov
xchg
icebp
mov
xchg
cld
sub
or
fiadds
enter
scas
test
out
lcall
sbb
push
xchg
out
mov
jge
mov
orb
shll
and
mov
and
fdivrl
pop
out
shll
lods
lods
shlb
fsubrl
call
lahf
cmp
aad
sbb
outsw
in
jno
bound
xor
mov
sbb
addb
jecxz
push
outsl
lds
mov
packssdw
lret
push
cli
les
leave
xchg
addl
jl
aaa
mov
leave
fcmove
jecxz
lods
loope
mov
xchg
inc
repz
sbb
push
nop
fs
or
push
xor
jl
jl
inc
mov
pop
lods
out
fidivl
mov
dec
jne
addr16
push
insl
out
jbe
push
mov
and
mov
mov
cmp
daa
jg
dec
call
out
pop
cltd
cli
stos
movsl
ret
lret
lahf
and
xor
test
out
mov
xchg
push
and
add
or
leave
dec
or
mov
dec
dec
jg
mov
aaa
xchg
xchg
pusha
fcoml
hlt
int3
aas
cmpsl
lods
dec
adc
add
xchg
dec
ja
adc
adc
in
cmp
mov
xchg
gs
push
loop
or
jecxz
popf
push
jmp
and
popf
in
test
and
pushw
xchg
mov
sbb
addb
dec
mov
xor
shll
sub
jb
imul
andl
pushf
cmpsb
xor
sahf
es
fs
sbb
lods
push
xor
inc
pop
ja
pop
and
jb
ret
les
adc
test
jp
out
jne
test
icebp
fsubr
loop
adc
cmpsb
loop
rcl
dec
cmp
divps
pushw
adc
decl
mov
mov
cwtl
fiaddl
pop
ja
sbb
cltd
pop
inc
stos
sbb
mov
int3
mov
inc
cs
inc
xor
lahf
xchg
filds
fldenv
mov
inc
jge
dec
shlb
xchg
sbb
test
insb
addr16
sbb
test
xor
push
lret
movsl
xchg
adc
stos
cmp
stos
adc
mov
movsb
ljmp
ljmp
sub
leave
push
data16
mov
pop
je
jmp
mov
and
sub
movb
mov
es
cmpsb
cwtl
add
xor
push
cmp
lods
imul
sbb
lret
arpl
inc
adc
ret
push
push
xlat
call
add
out
pusha
sub
hlt
xor
jno
or
sub
mov
xlat
pop
mov
push
or
stos
test
xor
dec
mov
pushf
sub
jmp
cmpsb
mov
fs
sbb
and
xchg
jl
pop
inc
scas
jo
jbe
mov
iret
pop
jno
cmp
dec
cs
je
popf
sti
mov
sti
or
xchg
enter
add
daa
jecxz
jmp
push
and
push
sub
pusha
sbb
pop
mov
aad
xor
data16
aad
stos
sub
in
mov
aaa
fidivs
cmpb
ret
pop
or
pop
sbb
or
pop
inc
movsb
in
mov
cmp
test
cmp
mov
mov
sbb
jbe
out
inc
rolb
push
fistpl
les
xlat
mov
or
mov
test
dec
push
xor
lods
mov
jo
or
daa
mov
dec
mov
jns
xchg
adc
stos
inc
dec
pop
mov
dec
add
push
shll
xchg
mov
jecxz
ss
jns
arpl
sbb
mov
sbb
add
pusha
or
iret
adc
mov
sar
out
pop
push
dec
adc
jcxz
mov
xchg
or
pop
je
cltd
cmpsl
out
aad
clc
fisubs
and
xlat
mov
popf
or
iret
dec
dec
repz
mov
addl
xlat
adc
jl
loop
push
sub
jecxz
mov
outsl
aam
cmpsl
cmpsb
psllw
adc
cmp
nop
sub
mov
vmread
aaa
idivb
icebp
bound
mov
aam
arpl
cld
lods
leave
and
ja
push
repz
cli
push
sub
pop
ds
adc
jl
mov
ljmp
clc
jb
repnz
sub
pop
ds
pop
xchg
repnz
in
jo
dec
pop
add
ljmp
scas
sbb
adc
ja
sahf
ja
add
inc
ja
cs
jge
mov
roll
and
cmp
clc
adc
int3
add
cmp
aas
je
enter
jge
push
lcall
mov
push
test
mov
addl
mov
jnp
mov
addr16
push
push
jnp
movsl
xchg
pop
ja
pushf
incl
subl
out
cld
sub
push
filds
inc
dec
xchg
sbb
cmpsl
mov
jbe
mov
aaa
mov
dec
mov
sbb
jmp
js
test
pop
push
mov
stc
testl
dec
xchg
inc
nop
ja
pop
andb
outsb
jecxz
dec
mov
push
sbbl
pop
shl
rclb
shrb
cmp
jg
aaa
in
dec
das
bound
cmp
sbb
nop
cli
or
dec
sbb
push
mov
dec
push
xchg
push
cmp
push
cwtl
xchg
or
lcall
xor
in
aas
push
imul
sub
mov
aas
pop
add
test
out
and
int3
mov
mov
in
dec
or
adc
or
adc
loopew
sub
or
jg
dec
aad
cli
stc
push
insb
lock
movsb
hlt
inc
jo
sbb
pop
mov
push
push
inc
jmp
and
pop
jnp
daa
jmp
inc
daa
pop
xor
pop
pushf
push
sahf
dec
fmuls
insl
fwait
jae
sti
xchg
adcl
or
mov
sub
or
adc
and
pop
sbb
fnstcw
pop
push
ja
leave
cmp
rcrb
xchg
xchg
and
dec
mov
push
sti
fwait
sbb
rcll
jno
or
mov
push
adc
outsl
jae
push
scas
repnz
jo
dec
aas
mov
xchg
sarl
out
popa
std
into
std
add
xchg
mov
addr16
outsb
push
sarl
cmp
int3
bswap
outsb
or
add
into
dec
mov
gs
ror
adc
mov
mov
gs
and
mov
dec
mov
mov
fistpll
in
pop
pcmpeqd
cltd
dec
push
kmovb
cmc
pop
cmpsl
mov
ror
push
ficompl
add
inc
push
jne
ret
push
mov
aam
shrl
repz
jbe
stos
sbb
idiv
push
mov
arpl
mov
adc
dec
cmp
int
push
push
adc
sub
fwait
ljmp
xor
bound
insl
sub
xchg
add
dec
push
jae
mov
jmp
jmp
add
push
rol
inc
stc
xchg
jp
push
lds
fwait
dec
and
mov
mov
enter
adc
mov
add
push
pop
mov
dec
fwait
sbb
adc
pop
out
xor
testl
mov
sbb
mov
jecxz
adc
in
int
xor
sbb
and
mov
xlat
jns
mov
jge
sbb
sub
pop
ds
rcrb
movsl
and
xor
inc
insb
fcoml
cs
or
jne
andl
rcr
movsl
int3
inc
jecxz
pop
test
aam
jo
sbb
filds
xorl
rcrl
in
fadds
pushf
das
lahf
sub
lea
frstor
cmc
sub
into
inc
enter
and
lods
movsl
jo
ss
cld
test
lcall
fildll
push
lret
sub
in
sub
imul
sub
xlat
rclb
out
pop
arpl
dec
sbb
outsb
call
movswl
cmpb
fs
sbb
out
jnp
cli
cmp
push
aad
cmc
xchg
xor
insl
hlt
insl
jns
sub
inc
jl
and
les
and
push
push
popa
add
add
leave
fsubr
in
sub
inc
sub
xchg
and
adc
testb
jle
movsb
push
cmp
outsl
sub
lods
fisttpll
push
cmp
out
push
adc
cmp
cltd
loop
movsb
jecxz
std
insb
popf
inc
adc
andb
fidivrs
scas
ljmp
mov
and
sub
fldt
out
xor
aam
push
and
shrb
les
and
cmpsb
aad
fdivr
jbe
test
pop
incb
es
push
mov
pop
adc
pop
dec
mov
push
scas
mov
jae
imul
daa
mov
push
mov
xchg
ljmp
xchg
fisttpll
fcoms
dec
sahf
aas
push
sub
lret
test
jno
movsb
inc
xorl
fbld
push
les
cmp
dec
adc
sbb
dec
inc
mov
sbb
pop
aas
inc
mov
pop
lock
in
lret
or
adc
pop
gs
inc
pusha
outsb
push
sbbl
mov
adcb
add
das
enter
push
popa
sub
scas
cmpsl
mov
pop
mov
mov
or
sbb
in
jmp
and
or
xchg
or
jge
ffreep
sub
push
add
cli
sahf
cmp
aam
mov
movsb
adc
jecxz
dec
sub
int3
or
sub
mov
mov
rorl
stos
ret
fisubrl
test
cmova
xlat
inc
sbbl
adc
outsl
push
lods
ds
fcmovbe
arpl
inc
shrl
or
cwtl
idivb
test
pop
or
mov
push
jmp
adc
jne
lret
das
pop
xchg
pop
pop
jmp
lret
push
iret
sub
cmpsb
das
bound
push
aaa
mov
jb
pop
xchg
pop
outsl
outsb
in
mov
clc
fidivs
js
jb
lods
ljmp
mov
mov
dec
inc
int
cmp
lret
inc
mov
es
jnp
jbe
mov
sbb
loope
pop
imul
mov
rorl
les
lods
mov
mov
mov
jge
inc
imul
cmp
xchg
xor
test
in
mov
ror
jle
leave
adc
and
pop
std
mov
cmp
repz
push
in
push
dec
enter
jno
cmp
bnd
cmp
fwait
sub
or
call
pop
outsb
aaa
stc
push
rclb
cmp
cmp
xor
xchg
imul
xchg
mov
lods
fwait
iret
fisubrs
sbb
stos
dec
mov
loop
cmp
dec
cmpsb
pop
ljmp
in
inc
inc
mov
mov
mov
push
dec
nop
mov
adc
push
test
mov
cmpsl
ret
hlt
movsl
in
xlat
cmp
xchg
add
add
sub
ds
adc
inc
adc
lods
cmpsb
cmc
pop
rcll
adc
movb
les
push
in
push
inc
adc
pop
out
or
dec
dec
cmp
add
mov
leave
test
jmp
daa
jae
pop
cmpl
gs
ret
pop
xchg
ret
loope
gs
inc
or
or
scas
shlb
jp
push
pop
mov
daa
flds
test
mov
jb
test
push
int
push
pop
popf
hlt
mov
and
mov
stc
or
sub
int
mov
push
jg
push
sub
lods
lea
in
pop
stc
je
out
mov
lcall
add
cmp
xchg
loopne
xchg
mov
cmp
ja
cli
icebp
mov
lcall
sti
jno
ret
xchg
push
ficompl
pop
pop
fimuls
push
out
out
sbb
addr16
dec
arpl
movsl
jbe
scas
pop
fstpt
adc
sbb
and
jne
icebp
xor
pop
jbe
hlt
jmp
mov
scas
gs
out
cs
pusha
push
dec
or
pushf
mov
arpl
stos
call
xchg
scas
out
inc
and
cmp
divl
and
inc
in
adc
js
loop
jnp
mov
xchg
xchg
push
jns
mov
jnp
sbb
sti
mov
xor
dec
fdivrs
dec
insl
test
popf
andb
mov
mov
xlat
mov
sarb
mov
roll
sub
mov
jns
xchg
rclb
cwtl
pop
or
cmp
rep
inc
mov
imul
xchg
inc
mov
push
jne
xchg
inc
call
movsl
dec
and
je
test
dec
mov
push
sbb
jl
cld
stc
out
iret
add
repz
sub
icebp
pop
lods
sti
sbb
and
cmc
inc
xchg
not
inc
mov
jae
mov
aad
ja
xchg
popf
loop
xor
jmp
repz
push
enter
mov
xchg
jmp
cmc
adc
add
pushf
jp
in
jns
movsb
xchg
cmc
xchg
push
das
or
push
or
xor
test
push
inc
mov
or
in
or
call
test
sbbb
mov
repz
in
sub
je
in
popa
daa
sbb
jb
dec
jmp
sub
xchg
pusha
test
insb
inc
add
xor
stos
push
mov
leave
mov
lods
movsb
jge
and
adc
in
xor
lret
inc
mov
pusha
mov
and
xchg
notl
xchg
mov
jb
xchg
add
dec
xchg
xchg
fildll
mov
add
pushf
mov
mov
je
inc
lret
adc
pop
daa
xor
loop
and
sahf
xchg
push
filds
pop
push
or
mov
adc
mov
sub
jbe
test
loop
mov
test
and
push
movsl
jnp
mov
scas
shlb
sbb
xchg
addr16
cwtl
scas
mov
jb
ljmp
pop
cmp
jae
push
or
ds
outsb
mov
sbb
enter
lods
pop
mov
enter
jecxz
mov
mov
je
inc
in
shl
arpl
pop
lahf
mov
leave
jne
ror
and
scas
inc
out
mov
stos
mov
sbb
sbb
mov
xchg
fstl
filds
mov
inc
sub
cmp
pop
xor
dec
inc
or
subl
ja
icebp
test
movsl
cmp
push
loope
es
cmp
test
mov
mov
ss
push
dec
fwait
cmp
jne
aad
dec
int3
xor
sub
jns
loopne
movsb
sti
frstor
sbb
in
sbb
cmpsl
loopne
dec
testb
mov
lcall
cmp
fnstsw
leave
inc
je
data16
add
loope
jns
adc
push
mov
or
adc
scas
shll
imul
iret
ret
xchg
sub
mov
jecxz
push
xor
xchg
mov
pop
jbe
fbstp
cmc
adc
shl
aad
dec
nop
dec
push
pop
aaa
subl
sub
or
jns
mov
clc
push
ret
xchg
stc
scas
jno
mov
push
movsb
std
shll
loope
and
incb
cmp
sub
sbb
xchg
cmpsl
adc
pop
mov
loop
sub
popf
xor
sbb
sub
adc
sub
fistps
sbb
sbb
mov
jnp
and
mov
int
add
xchg
hlt
mov
ret
arpl
nop
jl
data16
out
daa
xchg
push
pop
mov
cmp
movsl
mov
in
icebp
and
adc
subb
pop
pop
xchg
mov
addl
adc
ja
repz
out
pop
shrl
inc
fdivl
stc
es
je
loopne
mov
push
das
xchg
or
mov
nop
hlt
in
andb
cmp
cs
adc
test
subb
aam
stos
xchg
mov
xchg
into
or
in
es
daa
imul
stos
adc
dec
mov
inc
xchg
mov
enter
pop
cmp
outsl
mov
inc
jl
add
push
adc
leave
in
sbb
xchg
and
test
inc
cmpsl
div
pop
push
xchg
cmp
movl
scas
and
jbe
and
mov
pop
sahf
mov
mov
sub
sti
mov
shlb
dec
cmp
xor
inc
ds
push
lock
movsl
ljmp
fidivrl
ret
xor
pop
sub
arpl
int
mov
cltd
in
pop
sbb
mov
cli
fbld
popa
adc
mov
mov
arpl
xchg
mov
dec
jmp
adc
sub
and
pop
dec
lahf
leave
shlb
or
adc
mov
sbb
mov
mov
mov
loopne
jp
scas
sub
xchg
adc
dec
xor
mov
rorl
and
loop
xchg
jge
sbb
cmpsb
enter
mov
subb
fidivrl
ret
adc
in
dec
scas
or
ja
out
lock
imulb
pop
and
xor
add
dec
cltd
push
xlat
or
mov
negl
mov
sbb
dec
sahf
out
mov
imul
daa
mov
aam
repnz
in
hlt
dec
aad
or
ret
ja
and
adc
sbb
fsubrs
in
xchg
cmp
xor
and
enter
mov
sbb
or
fwait
add
ret
iret
mov
cltd
in
push
out
inc
sub
insb
outsb
and
mov
jb
outsl
xchg
xor
cltd
or
imul
sub
outsb
testl
inc
stc
mov
out
inc
fistpll
or
test
int3
lcall
cmp
sarl
data16
std
or
xchg
aaa
aaa
xchg
mov
scas
fiaddl
mov
inc
xchg
lret
loopne
sub
mov
jnp
inc
xor
pop
or
stc
adc
add
sub
pop
cs
mov
ljmp
cmp
adc
jl
push
pop
jae
adc
pop
inc
es
sahf
movsb
cmc
xchg
ss
sbb
int
test
movsb
pushf
sahf
or
out
ror
push
mov
dec
insl
orb
orl
pop
fwait
mov
xchg
jge
xchg
loopne
inc
dec
aaa
push
inc
and
aad
jbe
dec
cmp
frstor
popa
adc
lea
stc
fwait
out
pop
ror
push
call
sub
in
imul
faddp
aas
cmp
in
imul
sbb
rorb
dec
loope
xchg
pop
sarl
sub
bound
stos
ja
repnz
xor
mov
dec
push
and
hlt
xchg
mov
sub
xor
and
mov
sti
in
sbb
pop
or
cltd
mov
pusha
push
call
mov
rcrb
scas
imul
adc
stos
sbb
in
xlat
cmp
pop
cmp
cmp
xor
mov
sub
cmc
sarb
imul
lods
into
lock
dec
lss
push
cmp
mov
leave
scas
ret
sub
jno
jb
mov
mov
stc
iret
xchg
jmp
mov
xchg
negb
dec
mov
push
je
out
push
subl
adcb
cmp
sbb
into
or
mov
dec
jg
hlt
xchg
scas
and
jl
out
dec
or
xchg
dec
mov
pop
aaa
cmc
mov
mov
movsb
aam
jle
lods
dec
movlps
pop
add
mov
fldl
push
adc
add
shll
test
out
cmp
loope
ficoml
pop
xchg
push
hlt
imul
ficoml
fnstenv
lods
mov
inc
mov
andl
aaa
pushf
rolb
sub
lods
sbb
jl
push
push
cmp
xchg
fistps
es
repz
xor
push
jb
movsl
sbb
sbb
fcomps
jns
enter
xchg
loope
ret
push
out
add
or
int3
mov
sbb
xor
mov
pop
xor
pop
cmpsb
imul
es
mov
cmp
cmpl
ret
lods
stos
push
bound
std
inc
lret
outsl
imul
add
add
fcoms
sarb
mov
fwait
jle
pop
aas
out
mov
das
test
mov
dec
push
inc
ficoms
mov
xchg
cmp
in
iret
movsl
ss
mov
cmp
lods
inc
pop
inc
das
add
mov
push
pop
mov
imul
mov
push
cmpsb
adc
lods
cmp
inc
adc
rolb
rclb
loope
dec
jns
nop
cli
add
testb
dec
mov
popa
push
adc
int3
insb
das
xlat
fnstenv
add
cltd
sbb
and
pop
push
sarl
xchg
cmp
test
pop
insb
jmp
inc
aad
cmp
push
fs
jns
jmp
mov
rclb
int
repz
cmpsb
or
out
xchg
or
xchg
insl
cmc
pop
inc
or
popa
pop
mov
inc
add
imul
or
mov
mov
daa
lahf
pop
mov
addl
push
out
add
sbbl
movsl
mov
outsl
popw
cmp
sub
fisubrs
dec
pop
and
or
add
dec
xchg
mov
aad
mov
ret
jo
push
mov
aaa
or
int3
cmp
aad
adc
pop
pop
ja
ucomiss
inc
cmp
out
pop
test
shlb
test
lcall
xchg
add
ja
mov
in
add
int3
xchg
aaa
pop
sub
cmp
mov
and
jns
jmp
xchg
or
outsl
incl
xor
push
jbe
jl
fists
push
scas
push
add
fwait
ror
dec
enter
jmp
push
or
les
fisubrl
pop
jo
lret
insl
xor
mov
in
scas
mov
push
insl
icebp
dec
in
push
fidivrl
imull
sbb
jle
out
orl
jne
mov
mov
sub
sbb
dec
call
fstp
inc
jbe
call
cmpsl
pop
icebp
lods
rcll
dec
cwtl
cmp
nop
mov
ror
and
cmp
cli
ljmp
pop
jno
pop
arpl
inc
test
jns
inc
push
iret
bound
ja
or
hlt
xchg
loop
mov
sub
mov
mov
cmp
xor
aad
push
enter
fdivr
scas
add
icebp
ret
or
mov
lret
fdivrp
lock
jge
xchg
out
mov
adc
sub
jo
adc
xchg
add
add
test
mov
sbb
pushf
ret
sbb
outsb
or
rorl
adc
pop
movsl
jno
inc
add
in
push
xchg
jne
cmc
out
xchg
sub
call
mov
or
push
in
bound
add
mov
sti
lret
je
movsb
xor
imul
mov
sub
push
jno
fs
mov
add
xchg
mov
xor
adc
test
ret
into
jne
sbb
andb
sbb
inc
mov
mov
mov
mov
lret
xchg
test
shll
xor
mov
aad
push
std
adcl
mov
jne
in
add
push
or
xor
pushf
rclb
mov
fsub
mov
dec
bound
and
pop
and
popa
adc
in
in
aam
inc
mov
cmpsb
push
mov
inc
jmp
movsb
cmp
nop
test
mov
sbb
jb
nop
dec
sbb
and
inc
sub
jb
xchg
sbb
daa
jnp
aam
rcll
pop
dec
xchg
xchg
iret
mov
inc
adc
nop
jge
push
cld
lret
popf
ss
push
imul
int
aas
mov
cld
fs
adc
dec
jge
add
push
pop
dec
out
ficoms
pop
popf
arpl
mov
add
mov
push
mov
mov
outsb
lret
mov
inc
add
jno
leave
xor
xchg
xchg
push
inc
orb
push
fnstsw
jecxz
cmc
jbe
sti
push
mov
mov
notl
dec
pop
push
lret
or
sbb
xchg
shll
inc
inc
add
xchg
ljmp
and
ja
push
call
dec
stos
xchg
pushf
adc
out
imul
push
bnd
mov
xchg
push
dec
mov
ret
dec
mov
orl
lret
xor
and
adc
daa
je
dec
les
rclb
add
push
push
sarl
cld
cwtl
xlat
in
sub
nop
call
addl
mov
arpl
inc
xchg
imul
sub
add
push
insl
cmc
xchg
adc
rolb
add
mov
das
push
clc
sahf
gs
les
xchg
faddl
xchg
push
pop
xor
inc
hlt
mov
stos
cmp
xor
or
push
lds
popa
ljmp
daa
or
or
dec
jp
in
les
jne
idivl
mov
idiv
cmp
push
cs
push
cltd
adc
sub
push
fistpl
pop
pop
iret
xor
jbe
ljmp
mov
cmp
insb
or
imulb
les
xor
jmp
or
addr16
xchg
rorb
and
cmp
aad
mov
xchg
cmp
test
test
and
daa
movsl
mov
mov
add
sbb
or
popl
and
xor
push
dec
add
mov
out
sbb
mov
jp
mov
sbb
inc
adc
or
xlat
xor
fidivrl
sahf
push
dec
bound
lret
mov
movsl
xor
jae
adc
and
test
testl
repnz
out
ficoms
mov
pop
stc
sbb
xchg
imul
scas
ja
pop
daa
je
lret
mov
inc
inc
iret
dec
in
sub
mov
add
pushf
xchg
fs
es
pop
xor
std
push
add
ds
jns
push
mov
nop
sub
std
outsl
add
sub
cli
mov
iret
adc
adc
jecxz
pop
lods
mov
sbb
lret
inc
outsb
icebp
pop
ja
setp
fstl
lods
arpl
fstp
repz
mov
rclb
mov
or
cmp
inc
pop
or
scas
in
sbb
insb
movsb
add
xchg
xchg
and
repnz
mov
lcall
data16
rcr
mov
fisubl
push
clc
jno
push
fldcw
dec
mov
sub
stc
mov
and
pop
lcall
adc
adc
cmp
xor
in
mov
adc
mov
sahf
jge
push
lods
jb
std
repz
pop
enter
repz
pop
in
mov
dec
cmc
jae
dec
xor
xchg
add
jbe
test
add
pop
jae,pt
mov
pushf
push
fimuls
data16
outsl
lcall
add
mov
repz
imul
fidivrl
sub
dec
cmp
cltd
xlat
dec
jecxz
jmp
fucomp
push
cli
cmp
out
gs
negl
out
mov
test
xchg
loop
stc
fucomp
xor
lock
dec
dec
dec
into
cmc
sub
push
adc
insl
shrl
push
call
jbe
orb
jmp
mov
xor
mov
lret
idivb
sahf
popa
mov
xchg
mov
sahf
ret
mov
jae
jae
iret
ss
js
ret
xchg
mov
pop
adc
and
sub
dec
sbb
fs
addr16
lret
call
in
stos
orl
xor
xchg
jg
pop
enter
nop
dec
int
or
push
sub
sub
in
pusha
xchg
pop
out
aas
push
push
or
test
into
fildll
insb
xchg
loope
movsb
cs
push
push
lea
cmp
in
or
dec
mov
lock
test
je
fadd
jp
mov
or
insl
inc
mov
enter
dec
jb
mov
add
adc
mov
inc
lahf
and
xlat
cmp
mov
jae
sub
jae
test
xor
movaps
jns
ficoms
mov
sub
jbe
movsl
outsl
lds
mov
aas
aam
mov
clc
jns
lds
inc
sbb
sub
repz
dec
adc
xor
xchg
inc
ljmp
push
das
mov
jl
mov
xchg
or
jle
inc
sbb
push
mov
sbb
subl
adc
or
mov
inc
adc
das
adc
rcr
mov
xchg
repnz
xchg
fs
pop
adc
test
int3
std
fcoml
add
stos
inc
test
xor
lock
push
scas
xchg
scas
sbb
scas
pop
popa
xchg
lcall
cs
into
popf
arpl
lods
xor
rorb
nop
push
mov
xor
ror
cmc
lret
inc
xchg
cmp
push
dec
push
leave
mov
xchg
pop
push
xchg
add
mov
and
adc
inc
sbb
fcompl
jae
and
bound
subb
mov
movsl
fidivrl
leave
xchg
lea
lea
xor
das
test
xor
ret
loope
call
dec
sub
test
cwtl
mov
cmp
mov
mov
mov
repz
dec
sbb
mov
mov
and
test
pop
loopne
mov
ret
out
cmp
pop
push
out
loop
ficoms
pop
pop
push
ret
dec
outsb
and
pop
xor
jmp
shr
xchg
inc
inc
lret
aad
in
cmc
stc
imul
adc
flds
pop
cmp
inc
out
out
jl
pop
inc
or
mov
out
jbe
jmp
ret
lcall
std
iret
pushf
stc
imul
arpl
enter
adc
es
stc
and
mov
hlt
cmp
les
iret
push
pop
sbb
dec
add
cmp
cmp
sbb
test
into
add
fsubr
imul
add
push
lret
insl
inc
call
xor
sub
test
mov
stc
fs
pop
push
and
cmp
pop
pop
push
adc
cmp
add
movsl
xchg
dec
sbb
int3
push
arpl
mov
and
stc
mov
push
ficomps
adc
leave
lea
xor
xor
in
daa
in
mov
xchg
sbb
xchg
xlat
pop
xor
sbb
and
out
cltd
roll
sub
mov
aad
mov
fs
rcrl
xchg
jnp
sub
pop
inc
jge
push
iret
jecxz
jne
jae
xor
pop
mov
mov
push
cli
cltd
sub
mov
test
testl
and
mov
insl
fadd
pushf
cmp
push
adc
xor
and
add
mov
and
cmpsl
fdivl
insb
mov
gs
mov
and
test
ds
mov
cmp
mov
rcrb
lret
cli
mov
stc
dec
sbb
xor
xchg
popf
mov
insb
push
jne
insb
pop
std
jmp
push
ficompl
sub
leave
loopne
cltd
out
sub
lret
testb
mov
aaa
dec
in
xchg
mov
mov
fcomps
inc
cmp
cli
cwtl
ret
jl
stc
movsl
jle
jecxz
repnz
mov
fcom
lcall
stc
sti
jg
push
clc
stos
loop
or
sti
js
test
lret
jns
data16
xor
leave
ja
cmp
add
mov
ss
add
cmpsl
hlt
inc
shlb
test
sub
sbb
mov
cltd
imul
pushf
loopne
pop
or
pop
mov
jo
adc
push
ja
or
dec
jecxz
add
sub
bound
push
inc
mov
pop
ret
ja
pop
pop
pusha
adc
xchg
das
lea
iret
nop
push
push
inc
xchg
mov
cld
xchg
das
fcmovnu
sahf
stos
jnp
sub
pop
stos
ljmp
enter
cmpsb
pop
jo
and
into
push
out
fsubrp
call
pop
loope
inc
xchg
mov
shufps
mov
pop
sbb
repz
push
fldcw
xchg
sbb
pop
add
aad
pop
jl
popa
sahf
adc
cltd
and
int
mov
or
shl
cmc
pop
xlat
ds
push
sbbb
push
js
in
out
sbb
sbb
pop
adc
mov
cmpsl
into
movsl
fisubrl
push
adc
aad
aam
sub
xchg
push
mov
mov
into
inc
cs
mov
cwtl
and
xchg
arpl
add
movsb
inc
fisubrs
mov
cmpb
mov
pop
repz
push
insl
cwtl
js
sub
mov
shrl
add
xchg
daa
fdivs
insl
mov
jmp
jbe
ret
cmp
mov
int3
lods
push
jb
andb
cmp
es
mov
push
cmp
mov
add
push
push
lcall
lret
lock
push
sahf
clc
icebp
pop
cwtl
sbb
data16
es
fistps
test
dec
pushf
jmp
sbb
adc
js
out
xchg
shll
jmp
sub
add
mov
mov
mov
test
jg
sbb
sbb
sbb
sbbl
push
cmp
incb
push
lock
or
popa
mov
pushw
xchg
push
xor
jno
pop
bound
outsb
push
fsubl
mov
jb
cmp
xor
addr16
or
call
mov
inc
lds
mov
jno
adc
in
imul
push
xchg
jl
popa
mov
push
add
mov
dec
mov
push
fsubl
dec
sub
or
test
fsubr
xor
mov
dec
popf
add
add
data16
sbb
mov
jl
inc
xchg
xchg
xchg
ds
out
pop
aaa
push
lret
mov
mov
jne
cmpsb
mov
or
test
mov
hlt
xor
loopne
js
fwait
mov
jne
int3
mov
pop
je
cmp
cs
push
ret
add
fcmovne
lods
into
daa
xchg
jne
inc
lahf
rcrb
push
cltd
pop
dec
gs
out
pop
sbb
dec
jl
aas
pop
clc
dec
scas
xchg
or
sbb
push
push
aam
cltd
call
xchg
push
mov
sbb
pop
adc
jge
push
mov
push
xor
popf
inc
xchg
cmp
adc
dec
push
fwait
mov
dec
and
push
sub
pop
pop
pop
and
pop
clc
or
enter
and
insl
inc
push
cmpsl
inc
std
jmp
in
in
dec
mov
push
aam
scas
sbb
in
mov
sub
popf
js
shlb
leave
push
pop
ret
cmp
stc
lret
stos
ja
mov
movsl
adc
pop
fmuls
xchg
and
cmp
cmp
enter
insb
cmp
and
sti
jle
adc
inc
loope
or
aad
pop
mov
pop
mov
mov
jecxz
mov
add
inc
inc
aam
push
lods
lret
mov
shrl
mov
inc
cmp
aas
scas
push
lods
pushl
mov
sarb
js
adc
or
mov
pushf
call
std
xor
jnp
cs
xor
lret
enter
add
sub
adc
sub
xor
popf
xor
int
sbb
mov
loop
jb
aam
ret
add
jo
cmp
lds
xor
cltd
pusha
adc
push
adc
add
adc
xchg
cs
aad
and
adc
mov
cltd
xor
mov
and
enter
dec
movsl
inc
iret
jge
xor
pop
ljmp
test
imul
adc
xor
jmp
insb
test
xor
dec
test
aaa
push
stc
std
jle
cwtl
add
fbld
cmp
dec
je
ja
je
push
mov
or
shrb
sbb
lret
inc
fs
pop
xchg
mov
push
mov
mov
add
jmp
fs
outsl
jl
pop
loopne
iret
cmpb
loope
cmp
cwtl
jno
bound
sbb
pop
test
jge
and
fdivr
dec
pop
shll
adc
add
mov
scas
add
push
push
or
scas
push
mov
clc
pushf
aaa
jnp
dec
adc
adc
clc
scas
mov
fcmovnb
push
xchg
imul
nop
add
sbb
xor
push
hlt
lahf
inc
or
fildl
cld
mov
lock
fisubs
xchg
xor
adc
mov
mov
add
dec
jae
mov
dec
push
inc
mov
orl
in
lea
inc
scas
push
mov
mov
jge
pop
in
add
ds
mov
mov
outsl
icebp
addr16
pop
jge
mov
inc
and
roll
imul
push
xchg
popf
popf
fstpl
ffreep
sub
jb
cltd
stos
rolb
xchg
nop
and
js
mov
inc
dec
arpl
mov
jle
mov
movsb
sbb
arpl
out
cld
mov
cmp
add
push
jecxz
aam
repz
inc
jge
insb
lds
cs
rcrl
sbb
aam
js
les
outsl
sarb
mov
cmpb
sub
clc
and
iret
cmc
std
dec
fiaddl
dec
and
repz
jmp
xchg
mov
dec
popf
repz
jg
leave
sahf
fiaddl
out
jb
mov
les
cld
sbb
mov
cld
jl
jmp
push
jnp
leave
mov
or
jae
mov
jne
inc
mov
out
ret
sbb
jecxz
negb
cld
xor
dec
adc
jo
jns
xor
add
fwait
fwait
sub
aas
mov
fwait
xchg
or
adc
loopne
jo
push
cmp
cs
mov
jno
movsl
push
call
adc
and
add
push
mov
inc
les
or
pop
cld
sbb
fnsave
xchg
and
out
stc
sbb
addr16
out
inc
jnp
in
dec
mov
pop
pop
push
mov
sbbb
rcrb
mov
push
call
popa
in
dec
sti
push
repnz
dec
dec
std
xchg
scas
int3
dec
inc
jne
mov
fucomp
sub
mov
adc
lods
xor
cmp
shll
sbb
jecxz
pop
xor
out
mov
gs
leave
xor
cmpsb
mov
out
pop
pop
lock
cmp
mov
lahf
adc
cmp
mov
les
add
mov
add
jnp
sar
pop
aad
xchg
cmp
sbb
clc
push
dec
add
dec
mov
popa
pop
cmp
xor
popl
dec
divps
inc
vcvtps2ph
subl
jp
leave
call
mov
xchg
dec
or
dec
or
mov
andb
and
dec
jns
fisttps
mov
clc
inc
shl
subb
movsl
cltd
inc
and
mov
test
stos
and
inc
push
int3
xor
repnz
mov
jae
inc
add
stc
xor
add
ja
and
xchg
and
push
mov
push
cmp
mov
stos
dec
sbb
push
cmp
pop
out
fisttps
or
sub
cmp
xchg
test
rorb
aaa
mov
mov
icebp
repz
mov
xchg
push
xchg
es
and
addl
ds
and
cltd
aaa
data16
in
cmp
pop
or
lea
or
jp
mov
ss
mov
inc
mov
rclb
xchg
mov
jl
push
pop
shlb
fisubrl
ds
imul
sar
mov
cld
in
nop
add
fisubl
sti
pop
stc
repz
ds
loop
adc
icebp
sub
aaa
mov
dec
scas
popf
cmp
rclb
leave
and
cld
xor
lock
mov
aas
sub
aaa
jns
xchg
pop
lods
fcomi
scas
or
std
into
xchg
mov
iret
enter
or
test
lea
jnp
into
mov
mov
scas
int
test
ror
add
adc
mov
fildll
pop
pop
cmc
pop
inc
sbb
in
movsb
test
or
fs
aad
inc
add
fnstcw
add
xor
pushf
xchg
loope
loope
daa
cmc
jo
mov
dec
mov
add
aad
push
pop
dec
inc
dec
dec
dec
sub
xor
xchg
sub
shll
fists
push
shl
neg
adc
adc
dec
pop
and
push
push
loopne
aas
adc
or
xor
adc
movsl
or
adc
jbe
jno
adc
aaa
hlt
fxtract
out
jmp
push
dec
lods
pop
or
xor
int
and
mov
cltd
out
mov
sub
in
lock
dec
push
jp
loopne
add
adc
loope
inc
push
lcall
test
dec
inc
cmp
mov
mov
out
leave
jmp
lahf
icebp
jae
jbe
hlt
and
mov
inc
xchg
repnz
and
cld
ds
push
xchg
subl
mov
sbb
popf
mulb
dec
sub
mov
lea
and
std
jmp
pop
fisubl
stc
test
pushf
fninit
bound
fsubl
cmp
adc
into
sbb
jb
sbb
or
std
aas
inc
mov
andb
xlat
cmpsb
ds
pavgb
xor
jl
xor
and
cld
push
movb
mull
js
cmpsl
cwtl
outsb
xor
sbb
in
jge
push
ja
cmpsl
popa
sbb
dec
pop
pop
aad
and
jg
and
adc
mov
adc
stc
or
push
sahf
mov
shlb
push
inc
test
inc
mov
call
sahf
push
xchg
pop
lods
or
shrb
mov
mov
mov
mov
jnp
cmp
pop
dec
out
cmp
sub
data16
inc
lods
dec
cmpsb
pop
mov
push
jbe
pop
gs
and
mov
pop
push
xor
data16
or
in
push
orb
sub
gs
test
or
sbb
into
out
push
or
call
pop
negb
in
jns
sarl
jl
push
add
mov
adc
xchg
xorb
mov
pop
scas
mov
inc
xor
pop
adc
push
in
mov
leave
fldcw
dec
loope
subl
and
jp
ret
int3
lods
mov
inc
xchg
and
or
lea
dec
cmp
out
pop
xchg
cmpsl
push
cmp
push
xchg
dec
mov
je
mov
sub
scas
lahf
arpl
fisubrs
stos
xor
outsb
mov
out
ja
fidivrs
adc
test
mov
mov
int
mov
aam
lock
xchg
stos
push
insl
sbb
jnp
iret
test
aad
and
loopne
pushf
mov
mov
sbb
ljmp
cmpl
pop
or
sbb
cmc
rcll
int
mov
nop
icebp
hlt
or
lret
in
push
push
inc
and
push
add
xor
mov
sbb
sbbb
gs
lds
movsb
lea
jo
incl
mov
mov
or
mov
std
sarb
mov
les
inc
cwtl
jle
push
and
inc
xchg
or
ss
add
or
mov
or
shrb
arpl
jns
ljmp
shll
inc
in
inc
addl
mov
in
cmpsb
dec
add
or
cmp
xor
rcrb
mov
xchg
and
movsl
fmull
out
pushf
push
dec
icebp
cmp
sub
test
adc
jp
xor
jle
mov
and
adc
jle
push
xlat
pop
test
popf
fadds
aam
mov
lahf
sub
js
jnp
jae
out
maskmovq
mull
xchg
adc
call
ret
jns
in
sub
test
sub
test
jl
dec
xchg
inc
loop
mov
stos
mov
cmp
into
fs
inc
inc
jno
loopne
aas
or
mov
push
sahf
lahf
ss
inc
stc
sub
inc
out
xchg
arpl
push
add
loopne
adc
call
inc
jge
divb
sub
jmp
and
mov
inc
push
adc
pop
or
push
mov
fmul
imul
cld
fists
int
mov
push
jne
or
test
call
jmp
inc
in
sahf
inc
int3
pop
cmpl
jae
pop
scas
scas
fidivs
gs
lsl
scas
jbe
repz
sbb
aam
fistl
je
jo
cmp
jb
xor
inc
lahf
push
dec
js
mov
repnz
push
add
sahf
dec
ljmp
inc
add
push
icebp
fdivrs
push
dec
xchg
je
daa
icebp
leave
or
bound
stos
fwait
aam
push
call
jnp
clc
cmpsl
fwait
mov
out
inc
dec
dec
aam
lds
sub
xorb
fiaddl
mov
daa
jmp
mov
add
test
add
cmpsb
popa
jmp
lock
out
outsb
or
subb
rcll
nop
loop
xchg
aam
mov
xlat
insb
cs
mov
test
xor
inc
pop
pop
test
mov
jae
mov
movsb
imul
loope
movb
movsl
ss
pop
lahf
mov
inc
popa
push
das
mov
sarl
inc
mov
mov
outsb
jecxz
dec
push
add
inc
and
mov
test
icebp
es
popf
int
scas
cmc
jns
shlb
pop
mov
sub
pop
lock
sbbb
insl
push
xorl
aaa
pushf
push
mov
xchg
pop
aad
jmp
fcom
pushf
sbb
testl
or
xchg
sub
and
adc
or
add
mov
enter
sub
inc
loop
mov
sbb
popa
and
stc
mov
sub
add
push
push
push
xchg
mov
leave
push
ds
sbb
add
std
pop
jp
daa
shll
rorb
shl
loop
jecxz
loope
xlat
dec
push
jbe
orb
pop
pusha
jno
stos
imul
int3
add
push
test
push
adc
adc
lds
in
enter
dec
and
mov
jnp
out
xor
xchg
in
push
jecxz
cmp
repnz
test
jg
cmp
jne
sub
pop
or
sar
test
imul
adc
xor
jb
inc
fdivrl
cmp
dec
fdivr
insb
cmpsb
sbb
mov
leave
aad
sub
jle
psubsw
mov
push
shrb
inc
xor
sbb
cltd
xor
outsb
ficoms
popa
imul
mov
and
cmp
pop
jnp
mov
mov
js
jmp
mov
cmpsl
scas
lds
jno
loopne
or
out
mov
into
int3
cltd
lret
hlt
jbe
pop
aaa
ret
mov
dec
inc
sti
mov
mov
and
in
movsl
dec
jno
push
cmp
and
mov
pop
cmp
inc
mov
add
or
xchg
pop
pop
icebp
loopne
and
add
mov
xor
dec
je
call
inc
std
aaa
pop
ja
mov
dec
inc
dec
out
sub
jne
push
mov
pop
insl
xchg
mov
pop
xchg
jecxz
movsb
daa
test
aad
add
mul
insl
loopne
sub
mov
loopne
fs
mov
movsb
flds
fmull
sbb
pop
das
out
dec
dec
test
mov
out
les
cmp
xchg
and
adc
test
cmp
dec
adc
divl
xor
pop
pushf
inc
and
or
push
cmp
jns
mov
call
xchg
dec
sub
pop
mov
loope
push
pop
fdivs
push
or
lods
xchg
adc
out
and
jmp
or
and
stc
sub
jge
sbb
pop
sahf
mov
insb
fs
pop
push
orb
ret
dec
jg
push
gs
dec
jl
sub
cs
mov
jns
cmpsl
adc
into
jecxz
dec
je
push
rolb
adc
cli
inc
std
pop
lret
test
ds
int
push
jb
outsb
cmp
cmpl
adc
adc
mov
rorb
or
imul
aas
inc
push
mov
pusha
push
ficoml
push
dec
lahf
out
jmp
cwtl
xchg
fiadds
push
mov
shlb
nop
scas
lds
test
mov
adc
add
test
dec
out
out
ljmp
mov
and
mov
negb
cmpsb
in
dec
pop
div
mov
jp
cli
aam
push
mov
mov
push
jo
lcall
rclb
popa
ja
xchg
dec
mov
jge
mov
dec
mov
enter
xchg
clc
movsb
pop
xor
jle
push
orb
mov
icebp
cmp
mov
pop
jecxz
popa
pushf
std
fmuls
and
mov
jg
jb
sub
iret
dec
gs
in
or
imul
inc
mov
xor
inc
out
lret
data16
mov
mov
push
sbb
lret
mov
rcrb
sbb
mov
popaw
or
jbe
pop
in
push
or
enter
mov
xor
jg,pt
add
jbe
adc
jbe
mov
repz
pop
adc
das
jnp
mov
bound
jno
push
add
scas
out
push
in
sub
stc
dec
mov
push
lea
sbb
adc
dec
sahf
push
xchg
adc
int
adc
out
dec
inc
imul
adc
popf
cs
lret
xchg
inc
xor
mov
push
int3
mov
jbe
cmp
in
call
jge
cmp
xor
jnp
insb
or
jne
outsb
push
cmp
jbe
popa
daa
fiadds
loop
and
dec
fimuls
out
fwait
jo
add
btr
or
xor
insl
pop
lcall
inc
push
xchg
dec
icebp
pop
pop
movsb
stos
lret
dec
cwtl
insb
movsb
mov
popf
cltd
rorl
and
repz
fucomip
mov
cli
sub
dec
fs
sbb
hlt
adc
adc
cmp
mov
add
out
popa
out
cmc
xchg
jne
sub
xlat
mov
add
shrl
outsb
les
adc
or
int3
bound
scas
ret
idivl
imul
xchg
xlat
cli
shrb
repz
pushf
cmp
lds
insb
das
lcall
and
cmc
adc
ret
add
push
pop
inc
xchg
push
mov
push
pop
iret
lds
outsl
gs
mov
xchg
mov
adc
cmp
adc
sti
mov
cmp
ficompl
iret
and
hlt
mov
je
in
icebp
push
push
enter
dec
cld
inc
jnp
popf
es
adc
xchg
repnz
out
repz
mov
in
test
frstor
inc
fs
imul
dec
repz
pop
cld
imul
in
stos
add
ljmp
pop
sbb
aam
cmp
dec
sbb
inc
leave
scas
push
pop
xchg
mov
inc
inc
mov
add
or
push
xchg
mov
in
lock
jecxz
icebp
frstor
popw
inc
movsl
adc
inc
jmp
sbb
inc
sbb
jmp
in
movsb
je,pt
sub
jl
loopne
lret
mov
push
xor
sbb
jae
aaa
pushf
xlat
jmp
cmp
mov
mov
rorb
testl
xor
add
inc
repnz
andl
lret
add
fnstcw
add
imul
int
imul
dec
lods
daa
xchg
inc
and
inc
int
adc
das
loope
push
shlb
cli
sub
sub
push
popa
fdivp
mov
mov
pushf
xchg
cmpsl
push
repz
fsts
loop
out
mov
mov
lods
stc
leave
pop
popa
dec
or
mov
jae
cli
fwait
mov
fdivrl
out
outsb
scas
push
or
mov
popf
dec
or
dec
mov
mov
and
into
mov
ffree
xchg
loop
sub
sbb
sti
popa
je
rcrl
fadds
sbb
rcr
je
sub
sar
cmp
jmp
jmp
xor
in
orl
sbb
jne
xchg
xchg
sub
into
stc
call
cmp
adc
push
outsl
call
cmpsl
sahf
inc
adc
in
xor
out
mov
ss
fiaddl
test
or
mov
or
call
push
mov
pop
add
xor
shll
scas
add
and
addr16
xchg
cmp
popa
sub
add
jp
xchg
ficompl
icebp
mov
inc
ss
cwtl
sbb
ret
and
jno
or
and
cmp
mov
pushf
btr
push
add
roll
insb
and
xor
xor
call
dec
int3
or
outsl
testb
or
ja
rolb
movb
cmp
int
in
incl
leave
cmp
insb
jmp
sub
in
mov
out
sbb
mov
and
into
adc
inc
stc
cmp
enter
sahf
ret
or
and
xor
movsb
push
aad
rcrb
push
out
mov
inc
pop
bound
xor
or
fsubrs
push
jns
fbstp
popa
mov
inc
sbb
xor
ss
es
pop
xchg
out
push
push
cmc
repz
sbb
push
push
cli
dec
div
pusha
ficoml
adc
pop
adc
in
fisubrs
mov
jne
push
int3
jmp
cltd
add
sahf
mov
in
test
push
inc
or
mov
ja
jns
jne
mov
pop
jns
insb
sbb
dec
mov
imul
cmpsb
inc
in
test
sbb
and
lret
fs
cmp
in
jb
ss
divl
dec
dec
or
stos
icebp
out
dec
xchg
in
mov
mov
push
mov
jae
mov
adc
rolb
pop
loopne
or
das
sub
aas
outsb
sub
ds
fcmovu
mov
ret
inc
ljmp
pop
mov
ss
mov
icebp
jmp
insb
pop
cmc
cli
cmc
fs
add
lods
idivl
in
fstpl
int
out
or
and
call
pop
dec
lea
outsb
mov
lcall
jmp
mov
xchg
or
cmpsl
ljmp
test
cld
mov
mov
test
fs
mov
mov
icebp
stc
enter
xor
jae
pusha
stos
aam
xor
mov
gs
mov
repnz
sbbb
outsb
mov
and
sbb
sub
test
ss
cmp
xchg
push
ljmp
sub
int
push
cld
mov
inc
sub
test
cmp
mov
mov
xor
mov
pop
gs
mov
test
or
adc
inc
testl
cli
nop
inc
pop
cmpsb
lea
inc
add
jno
lea
cmp
xorl
jae
or
popa
jne
pop
or
divl
aaa
ds
bound
adc
ror
int
ret
sbb
add
xchg
cmp
addl
xchg
add
movl
out
jmp
je
testb
push
add
push
fimull
jnp
ljmp
mov
bound
les
mov
fmuls
loope
out
push
jg
movsl
lods
mov
mov
xchg
xchg
adc
mov
js
and
jnp
clc
loope
or
int3
mov
jno
movsl
nop
cmpsb
pop
and
in
or
sbb
cld
jo
ljmp
sub
enter
pop
and
iret
out
jmp
cmp
mov
jmp
push
aaa
pop
adcl
push
cmp
js
stos
mov
dec
or
and
jmp
xchg
mov
movsl
test
int
pop
mov
sub
js
addl
aam
sub
jp
jne
pushf
rcll
and
movb
out
aas
xchg
jl
sub
inc
inc
sti
xlat
in
add
negl
mov
pop
out
ret
bound
mov
add
jle
dec
sarb
inc
loop
stos
pop
cmc
into
inc
out
cwtl
mov
lahf
stos
and
or
lea
push
mov
mov
and
cli
loop,pt
fistl
movsb
adc
aad
outsl
fdivl
push
mov
fistps
fisubl
dec
adc
cmp
out
addb
mov
push
test
data16
bound
dec
outsb
jg
lods
cmp
out
pop
pop
mov
jns
ss
mov
xchg
xchg
pop
inc
imul
ficompl
lds
push
filds
add
stc
xchg
jae
dec
repz
dec
lods
mov
inc
mov
fisttpll
mov
xchg
je
and
xchg
adc
test
js
es
pop
std
and
or
xlat
jns
jbe
dec
faddl
sub
cli
add
pop
xchg
cmp
jle
sahf
jnp
into
roll
inc
cmp
stos
repz
sbb
mov
mov
js
cmpsb
push
loope
mov
insl
fnsave
jbe
mov
xchg
dec
pop
mov
dec
js
lds
jecxz
outsl
sub
cld
jbe
inc
ss
or
inc
or
outsb
insl
jbe
or
mov
pop
dec
lea
mov
fsubs
jne
test
add
cmpsb
test
cmp
rclb
jo
imul
xchg
outsl
inc
jne
mov
stos
and
xor
ljmp
popf
cli
cmc
push
jns
mov
fisttps
nop
icebp
xchg
add
hlt
insb
loop
loop
mov
push
xor
scas
jge
dec
mov
in
pop
push
mov
cmp
add
jle
jne
jl
aas
arpl
push
fnsave
or
mov
adc
mov
xchg
mov
dec
push
xchg
cmp
pop
adc
cltd
mov
and
inc
mov
cmc
or
stos
sbb
rolb
xlat
push
movsl
les
lock
pop
fstps
scas
pop
jecxz
mov
subb
jae
lea
cmp
add
mov
adc
jmp
aaa
loop
inc
and
pop
iret
lret
add
push
inc
dec
pop
add
in
ret
es
lcall
cs
mov
cmp
fisttpll
clc
mov
xchg
cmp
inc
inc
subl
insb
divb
or
sahf
inc
mov
xor
dec
sub
jmp
cmp
sub
add
push
cwtl
mov
movhps
mov
mov
push
outsb
mov
repnz
jbe
xchg
mov
cmpsl
notl
outsl
hlt
sbb
fimuls
cltd
dec
loopne
aaa
add
inc
les
xchg
xchg
outsl
addb
std
sti
inc
mov
ret
test
adc
inc
mov
push
and
mov
jns
cmp
or
test
jle
jbe
cmpsb
popa
xchg
xchg
jns
jecxz
stc
add
fiaddl
sti
mov
sti
insb
sahf
jl
cmp
std
xchg
jle
sbb
lods
push
or
inc
xor
pop
scas
jmp
nop
dec
and
sbbl
inc
xchg
imul
jle
pop
and
mov
mov
ljmp
sbb
fimuls
add
gs
insl
push
jnp
mov
rcrl
cmpsl
jg
mov
rorb
push
jmp
aaa
in
xor
add
test
adc
jg
lods
sbb
jg
fstpt
out
push
leave
out
push
add
cmp
push
pop
scas
and
sub
jbe
shl
cltd
mov
jle
je
adc
std
test
adc
sub
add
sbb
push
sbb
dec
jg
ds
pop
mov
jnp
repnz
and
cmp
faddp
test
call
and
call
popa
pop
jo
filds
dec
or
repz
pop
mov
jp
jns
out
xchg
lods
jb
sbb
lret
jne
adc
jg
sarb
add
out
jmp
push
cmp
cmp
arpl
mov
sbb
gs
pop
push
imul
sbbb
lods
or
in
adc
loop
adc
fcomps
out
inc
jmp
jb
mov
sbb
cmpl
mov
adc
mov
lods
jno
ja
lret
or
jp
pop
pop
cltd
push
incl
jns
mov
es
mov
mov
mov
and
sbb
outsb
in
scas
push
mov
loop
and
mov
and
xor
out
jl
mov
mov
jl
mov
push
lcall
mov
aad
sbb
sub
fmull
mov
xor
mov
pushf
pushf
sub
add
aam
jp
rclb
sbb
xlat
pop
push
push
xchg
rorl
dec
add
jae
dec
mov
xor
jne
lock
dec
repnz
jae
inc
jmp
stc
dec
dec
mov
dec
dec
loopne
dec
xchg
cli
or
sbb
insb
push
fistps
popa
mov
or
adc
inc
es
loope
popf
clc
inc
push
subl
inc
popf
je
ja
pop
lret
imulb
sbb
dec
arpl
mov
fldt
xchg
mov
xor
xor
test
push
call
push
and
pop
pop
loopne
inc
shll
divl
cli
pop
inc
mov
stos
mov
xchg
int3
ficoml
gs
inc
lahf
mov
xchg
in
jno
or
pop
jno
cli
icebp
out
jns
push
mov
push
jno
xchg
mov
mov
mov
or
leave
in
repnz
mov
cmp
iret
mov
loop
fcompl
mov
xchg
in
shlb
in
iret
inc
inc
or
addb
mov
les
bound
daa
stos
lahf
lret
pop
jo
sbbl
xor
sbb
bound
hlt
xorb
lret
mov
push
mov
adc
mov
mov
ja
outsb
dec
rorb
pop
test
mov
mov
fldenv
and
adc
inc
testl
cs
mov
fnstsw
adc
push
pop
sti
in
or
pop
inc
xlat
daa
inc
jg
data16
dec
xor
scas
js
ret
divb
std
push
pop
sub
in
repnz
lods
fstpt
pushf
cmp
jne
stos
shlb
cmp
add
push
push
jno
mov
outsl
nop
fisubl
adc
xor
insb
ficomps
mull
iret
pop
cmp
adc
into
seto
lcall
mov
fwait
cmc
lret
cmp
rcrb
add
push
jae
mov
cmp
xchg
aaa
push
xchg
push
push
add
lea
es
pop
xor
and
push
sbb
mov
stc
fimuls
into
fcmove
cli
cmp
fmull
inc
mov
add
mov
jecxz
in
les
outsb
lahf
adc
and
repnz
in
and
adc
or
sub
nop
sub
and
lcall
adc
iret
inc
out
add
add
movl
dec
ss
or
or
mov
iret
cld
push
leave
insb
jp
mov
add
mov
outsb
dec
jl
sub
or
pop
std
adc
sub
mov
loop
jnp
daa
lds
dec
pop
or
pop
and
ds
shrb
scas
cmpsl
aad
push
xor
int
mov
fisubrl
ljmp
test
mov
out
jno
pop
and
pop
mov
sub
sub
stos
mov
in
sti
pushf
gs
fldl
pop
fisubrs
pushf
imul
cmp
les
push
mov
xor
ds
dec
mov
mov
or
lcall
popf
xlat
clc
pop
ljmp
dec
int3
and
cmp
cwtl
addb
inc
mov
addr16
xchg
xlat
fmull
cmp
decb
sub
div
loope
mov
lcall
cmpb
stc
dec
fwait
cmpsb
xor
inc
js
insb
into
rorb
inc
repnz
push
sbb
imul
jecxz
xchg
sbb
push
mov
lahf
gs
mov
lods
call
les
or
ret
popa
movsb
lahf
dec
mov
push
mulb
mov
cltd
xor
aam
outsb
add
test
push
loope
lahf
xchg
jae
push
gs
sbb
sub
sbb
ffreep
pop
fs
leave
addr16
rol
add
add
pushf
cmc
push
loopne
popa
adc
fildll
int3
mov
popf
pop
push
loopne
xor
gs
mov
pop
mov
and
adc
xor
jb
cmp
popa
dec
and
jmp
add
out
cmp
shrb
jecxz
inc
xchg
les
mov
adc
xor
cltd
xchg
dec
mov
jmp
dec
adc
daa
lcall
adc
fnstenv
shrl
mov
mov
sub
push
jno
dec
pop
and
adc
fdivl
leave
bound
sub
mov
dec
sbb
push
mov
mov
jo
lock
in
pop
in
mov
cmpsb
push
pop
push
mov
shrl
xor
lock
int3
imulb
push
cld
ret
adc
out
fimull
scas
sub
sub
pushf
mov
dec
mov
rorl
shll
enter
subl
mov
arpl
xchg
cmp
mov
xor
mov
cmc
das
pushf
dec
inc
stos
ret
push
inc
sub
mov
jmp
and
inc
sbb
stc
stos
loop
inc
fsubrs
sub
jmp
sub
mov
popa
fwait
ret
popa
jge
call
int3
adc
push
aas
pop
ds
imul
lahf
cmp
test
jecxz
in
dec
out
add
ss
stos
push
cmc
xchg
jbe
push
or
mov
push
mov
mov
mov
outsb
inc
loope
jecxz
add
pmaxsw
nop
jno
adc
or
aas
testb
dec
cmpsl
push
cmp
enter
sbb
popf
pop
jmp
pusha
or
jne
pop
xor
hlt
imul
into
das
jl
lock
and
outsb
jno
addb
push
inc
pop
out
xchg
mov
scas
cmpsl
jns
lea
pushf
or
inc
mov
out
lds
fs
ds
xlat
rcrb
imul
mov
push
rclb
xor
imul
jne
adcb
xor
das
mov
mov
push
pop
es
shl
inc
das
mov
popf
subb
dec
cmpsb
or
fdivr
dec
push
mov
test
sbb
fcmove
ret
mov
dec
notl
dec
hlt
mov
pop
dec
or
or
ret
iret
add
movsl
cmp
adc
nop
frstor
hlt
shll
or
enter
in
mov
and
in
in
adc
shlb
adc
and
xchg
sbb
divb
scas
jl
test
in
xchg
movsb
and
jg
or
gs
xor
test
inc
pop
lods
push
mov
push
lds
leave
stc
pusha
iret
mov
mov
or
loop
into
mov
mov
and
stos
rorb
push
pop
leave
pop
loope
hlt
ljmpw
sbb
lock
xchg
sbb
jns
and
and
out
adc
divl
push
scas
outsl
sub
pusha
sub
das
out
flds
gs
and
inc
xchg
mov
stos
mov
pop
jg
sbb
sbb
mov
jno
push
ret
imul
hlt
mov
add
and
shll
scas
jo
sbb
xor
pusha
lea
aam
stos
jne
iret
rcr
lods
stos
cmpsb
add
filds
mov
sbb
dec
push
aaa
sub
dec
push
sti
outsb
adc
leave
dec
fsubs
mov
ret
popf
popa
inc
into
test
mov
int
pop
cmp
xor
ds
aam
sub
and
cltd
sub
sub
daa
in
add
cld
mov
sbb
dec
in
sbb
cltd
add
pop
push
addl
vcvttps2dq
mov
mov
adc
mov
test
sub
push
or
in
sbbb
sarb
jp
lret
bound
enter
fwait
jge
sub
jl
inc
call
xchg
sbb
daa
call
adc
in
pop
movsb
jmp
jge
roll
repz
adc
sub
mov
leave
lods
push
fs
icebp
xchg
add
or
stos
aam
or
mov
imul
ja
lock
int3
fisttpl
das
outsb
xchg
sbb
sbb
sahf
out
in
cmc
jg
adc
rclb
ljmp
mov
cmc
jecxz
shrb
push
nop
in
push
and
mov
and
lods
iret
movsb
mov
sub
mov
or
bswap
xchg
imul
popf
pop
shll
xchg
xor
aas
popa
test
mov
inc
daa
push
dec
fcomps
cltd
sub
and
mov
xchg
gs
lock
test
loopne
imul
das
push
sbb
mov
movsl
ret
test
scas
xchg
popa
mov
sbb
cmp
fildll
mov
cs
mov
bound
std
sbb
pusha
mov
xchg
call
jo
out
sbb
insb
xor
push
mov
add
push
jle
roll
and
jle
push
ja
test
inc
rolb
adc
or
sahf
push
movsb
mov
cmp
js
aas
add
ds
xchg
mov
xchg
xor
ss
rcrl
mov
add
dec
fsubl
fists
pop
adc
xlat
dec
sar
dec
ds
cltd
cmp
and
and
mov
cmpsl
xchg
in
lods
aad
dec
push
call
popa
mov
imul
push
cmp
or
imul
adc
lds
std
cmp
and
cli
fdiv
or
out
push
jge
data16
ja
mov
jge
xchg
mov
cmp
adc
xchg
stos
mov
adc
mov
mov
and
dec
leave
fidivl
xchg
pop
or
ds
xchg
sbb
movb
mov
repnz
xchg
pop
test
xor
insl
jmp
bound
mov
xchg
xor
xchg
cmp
cmp
movsl
repz
enter
mov
outsl
fsubrs
popf
xlat
dec
add
lock
push
xorb
lahf
or
mov
test
addr16
jns
aam
test
push
or
xchg
addb
adc
mov
lahf
fcompl
orb
ret
xchg
mov
adc
inc
and
subl
sub
pushf
js
ficomps
cmp
nop
test
shll
lahf
xlat
jl
add
push
sub
jge
mov
mov
jmp
pop
shll
arpl
jg
sbb
fidivrl
aam
icebp
add
push
aad
aas
xchg
sbb
xchg
bound
or
pop
aas
jp
jbe
push
or
dec
jl
mov
cmp
dec
pop
mov
icebp
sub
ss
outsl
dec
inc
xchg
jns
stc
mov
pop
xlat
dec
mov
inc
cmpl
gs
sahf
outsl
sbb
cli
push
mov
bound
xchg
test
bound
addb
jmp
loope
mov
or
jo
popa
popa
jnp
or
ret
jle
pop
jne
jmp
or
mov
push
loope
js
jno
ljmp
inc
or
fnstcw
sub
cli
test
pushf
sub
pop
xlat
mov
jle
js
cli
push
fistpll
cwtl
out
ja
popa
mov
scas
or
dec
mov
mov
add
mov
cmp
pop
jo
pop
push
jne
sub
jecxz
push
and
xchg
push
fnstsw
add
addr16
insl
pop
and
jmp
repnz
push
xchg
rcr
or
mov
stos
jo
rorl
int
push
pop
test
push
jnp
mov
mov
jnp
mov
loopne
pusha
cltd
in
js
lcall
adc
mov
mov
inc
jb
mov
jbe
adc
xchg
stc
fwait
aaa
jl
xchg
addr16
sbb
jmp
mov
and
mov
jo
mov
or
adc
dec
mov
lretw
ss
xchg
out
popf
push
loop
int
or
adc
inc
je
clc
cmp
dec
fwait
jmp
es
or
popf
test
xchg
jle
mov
sbb
dec
mov
xchg
mov
fbstp
mov
jns
dec
in
stos
aad
push
xor
dec
imul
xchg
aad
popf
adc
dec
mov
adc
push
cli
dec
test
cmp
cmp
inc
inc
mov
mov
mov
mov
lea
movsb
cmp
popa
dec
jo
das
xor
popa
stos
and
aas
inc
test
pop
push
inc
inc
or
xor
lret
jne
lahf
mov
scas
test
fcoml
jbe
pop
ja
add
push
dec
xchg
out
or
mov
clc
cmp
jbe
popa
scas
lret
popa
es
loop
hlt
pop
pusha
cmp
xchg
dec
adc
int3
jecxz
mov
lods
inc
sbb
fcomip
cmc
xchg
adc
mov
add
shlb
push
jne
dec
jb
inc
sbb
jg
sbb
lods
inc
mov
jo
sub
pop
cmp
mov
call
add
fsubs
xor
mov
divl
push
addr16
into
xchg
pop
cmp
jnp
lea
push
sub
in
mov
xchg
push
adc
adc
mov
nop
lsl
or
inc
adc
inc
sarl
aas
gs
imul
cwtl
push
nop
ftst
cmp
fcomps
loop
pop
rorb
xchg
mov
dec
pop
clc
sub
jno
sub
xchg
inc
data16
loope
aas
add
insl
adc
mov
inc
fnsave
dec
stc
out
clc
adc
mov
or
lcall
jl
jno
mov
pop
pushf
or
jne
aad
call
sbb
cld
lds
mov
mov
leave
inc
lret
ja
xor
cwtl
and
sti
orb
cmp
jl
cmc
sbb
jo
adc
dec
xor
cmp
pusha
mov
scas
or
jmp
push
xchg
repz
pop
push
lret
push
xor
or
jne
pushf
lea
xchg
mov
aaa
sbb
pop
fldenv
cmp
fs
sbb
jae
cmpsl
test
xchg
pop
std
rcl
xchg
mov
gs
fs
out
popa
mov
ficomps
jp
dec
test
adc
jg
out
jo
xchg
pop
into
mov
pop
sub
or
mov
jb
sbb
push
scas
je
xor
fisttps
adc
dec
mov
xchg
aaa
testl
mov
addl
into
cltd
notb
pop
or
mov
into
or
mov
sbb
sti
xchg
dec
xchg
mov
jns
fcmove
xchg
push
test
pop
incl
push
loopne
mov
pop
leave
popa
xor
test
or
and
aas
pop
call
outsl
xor
xor
cmp
insb
xchg
cld
js
jmp
mov
xchg
jnp
into
jmp
sbb
ja
push
cmc
imull
fisttps
arpl
mov
fsubr
outsl
cs
xchg
jmp
lods
fnsave
jo
jnp
push
xor
adc
inc
dec
jae
mov
cmpsb
stos
and
rclb
sbb
into
out
push
into
sbb
jno
dec
pop
loope
mov
mov
aad
mov
jnp
je
jmp
jmp
arpl
dec
xor
adc
imul
lock
sbb
mov
and
mov
call
imul
mov
dec
xchg
das
dec
roll
mov
dec
cld
mov
add
mov
fldt
clc
popf
push
in
pushf
mov
popl
mov
lahf
fistps
xchg
call
push
popf
scas
xlat
push
pop
mov
add
push
pop
inc
ds
shlb
test
adc
bnd
cmp
push
or
push
aam
cmp
sbb
jge,pn
loopne
sub
or
shlb
stos
repz
aam
mov
add
xlat
inc
dec
out
sub
jmp
mov
iret
ret
or
inc
mov
sarl
les
xor
mov
sbb
jge
sbb
out
dec
dec
jne
scas
push
xchg
sub
mov
mov
in
das
jl
ja
out
add
dec
clc
daa
dec
and
stos
mov
loope
mov
sub
push
test
ret
jne
xchg
dec
inc
mov
jbe
faddl
pop
xchg
inc
xchg
mov
cmpsl
and
testb
adcl
ss
xor
or
and
je
sbb
adc
std
repnz
fisubrl
xor
jl
dec
cmpsb
sub
dec
dec
fidivrs
in
mov
add
mov
fdivrl
addr16
sbb
inc
mov
enter
mov
xchg
imul
push
int3
std
mov
push
xor
aaa
aad
lods
sbb
cwtl
sti
cmp
sub
sbb
ret
sub
insb
mov
ja
into
shr
mov
enter
cmp
pop
jno
jecxz
xor
xchg
rol
pop
adc
inc
std
jb
mov
daa
mov
jle
sub
addr16
repz
mov
inc
xor
jl
push
pusha
inc
xor
jmp
pop
push
sbb
nop
xchg
iret
movsb
cmp
lea
and
mov
clc
xor
mov
adc
and
mov
jnp
mov
and
out
out
mov
and
add
dec
sub
addl
aaa
int3
stos
fmul
jmp
mov
rorl
sub
adc
ds
xchg
mov
imulb
aam
push
xchg
mov
and
jmp
int
sub
cmc
fadds
sub
pusha
xor
aas
or
jg
jae
inc
adc
fs
cwtl
and
and
sbb
pushf
mov
or
cmc
lea
mov
mov
sub
pop
dec
rcrb
lock
pmullw
and
fldcw
jmp
mov
in
mov
arpl
cs
cmpb
inc
xchg
mov
sub
push
xchg
sbb
and
or
sbb
shll
xchg
add
and
loope
pop
icebp
ret
test
pop
loope
jo
fisttpll
mov
dec
jl
add
inc
in
inc
pop
add
leave
xchg
push
daa
jmp
dec
xchg
rolb
add
rcrb
out
arpl
ds
adc
mov
inc
jno
aad
sbb
lock
lret
shl
test
cmc
out
xor
xchg
jle
or
mov
push
push
dec
add
js
jae
add
dec
mov
adc
jne
dec
xchg
shll
cmp
mov
pop
cmc
loop
imul
loope
std
cmp
bound
notb
stc
and
sbb
jg
add
pop
mul
adc
cmpsb
push
in
cld
and
dec
sbb
imul
popf
rcrl
rorb
ret
mov
mov
mov
xor
aam
xor
sbb
in
mov
add
adc
adc
dec
add
pushf
test
cmp
add
xchg
and
pop
push
push
shlb
stc
cmp
xchg
sub
cmp
hlt
inc
lea
bound
in
aas
mov
mov
jns
jnp
adc
sub
adc
or
sub
or
pop
cmp
pop
negl
pop
cli
cmp
fucomi
movsb
or
in
lret
xchg
aas
mov
lds
stos
push
adc
out
inc
cmc
inc
jmp
mov
pop
popa
dec
mov
adc
jo
fdivrs
shrl
add
inc
mov
repz
mov
pop
fnstenv
fdivrs
into
or
lret
in
pushf
adc
sub
xor
xchg
bound
pop
ds
loope
scas
sub
notl
stos
dec
pop
adc
mov
xor
dec
fndisi(8087
dec
mov
fwait
add
push
lds
and
and
fidivrs
fdivrl
adc
das
xor
xchg
pop
cmp
into
fbstp
aaa
ret
ja
add
inc
and
aas
mov
mov
stc
lods
mov
repnz
loopne
sbb
mov
ss
fistpll
inc
sub
xchg
jns
cwtl
lret
push
and
fdivp
and
sahf
popa
dec
mov
sub
sti
xchg
xor
sarl
sbb
or
xchg
testl
aad
ss
cmc
dec
sbb
cmp
or
jae
jmp
in
jmp
push
sub
out
aam
jmp
rorb
and
mov
pop
sub
lahf
shl
adcb
dec
fisttpl
or
jmp
push
popa
xor
sbb
call
mov
or
xchg
out
add
or
mov
cmp
mov
push
pop
es
clc
fisttpl
and
call
shll
jp
call
cmp
imul
inc
sbb
popa
mov
cli
sbb
push
xchg
xchg
adc
fisttpll
mov
lahf
stos
xchg
rolb
addr16
lcall
push
or
lods
xchg
xchg
inc
push
sub
mov
daa
movsb
and
mov
int3
push
mov
add
cmp
mov
cmp
xlat
repz
fcomp
jno
dec
xchg
cwtl
pop
mov
dec
sarl
cmp
imul
loop
pop
pop
ret
gs
mov
mov
popl
or
sbb
fsubrs
loop
les
cmp
outsb
sbb
mov
push
fstpt
das
xor
pop
xor
cmp
jge
das
or
xchg
or
shrl
das
dec
and
pop
in
ds
lcall
fdivrs
js
test
in
sub
je
push
jp
jae
jg
adc
xchg
lds
stos
addr16
ljmp
insb
adc
sar
push
sbb
sbb
and
lock
icebp
pop
mul
mov
je
add
jge
fadds
ret
adc
pop
push
jl
lock
dec
pop
inc
call
loopne
cmp
inc
loope
xor
mov
lret
ret
or
data16
xchg
xor
or
test
sub
xchg
sub
testb
cmpsl
cld
test
sub
xlat
test
mov
imul
inc
xchg
or
ret
lret
pop
xchg
fists
outsl
jmp
inc
jle
xchg
and
add
push
cmp
and
push
fs
lret
fwait
add
mov
cmp
hlt
pop
je
mov
jle
dec
jo
dec
fldt
in
inc
push
add
jp
xchg
subl
test
inc
inc
and
mov
cld
and
addr16
jg
les
movsl
adc
cmp
std
lret
ljmp
sbb
or
in
xchg
fmuls
ss
or
mov
pop
inc
cmpsb
shlb
sbb
mov
push
sub
xor
js
lock
mov
pop
ret
pop
and
pop
cs
add
and
adc
pop
mov
push
int3
out
scas
cwtl
out
jmp
adc
pop
xchg
mov
xor
iret
lods
insb
pop
popf
jp
add
and
mov
mov
jbe
mov
lea
insb
call
mov
mov
mov
dec
sbb
testl
cmc
lret
movsb
push
rcrb
int
pop
mov
insl
xchg
pop
xchg
push
inc
stc
dec
notl
jae
add
stc
rcrl
push
push
sub
je
lods
hlt
lock
out
dec
lods
pop
cmp
jbe
jne
xchg
repnz
mov
mov
or
push
aas
fbstp
scas
push
jns,pt
out
push
mov
sbb
orl
and
clc
cmp
inc
imulb
push
sbb
imul
jae
and
add
adc
cmp
loope
push
icebp
sbb
inc
cmp
mov
outsl
inc
popf
or
add
fs
sub
add
xorb
pop
ljmp
cmpsb
push
je
das
insl
call
sbb
pop
mov
aas
rorl
push
mov
pop
pop
data16
fstpl
hlt
and
push
sub
dec
mov
out
pop
fcompl
or
dec
pop
pop
lods
lahf
outsl
inc
mov
mov
sbb
push
mov
ja
jb
pop
inc
xor
lds
pop
das
push
jno
ljmp
xorl
inc
ret
or
scas
or
or
push
out
test
add
in
cltd
push
inc
jl
clc
cltd
dec
xchg
shlb
sbb
dec
arpl
xor
and
push
cmp
mov
cmp
fwait
push
cwtl
in
mov
test
mov
jb
outsl
sub
dec
add
cmp
adc
mov
inc
or
in
scas
ret
loope
dec
pop
call
pop
in
fnstenv
fisttpl
fistpll
ror
xchg
dec
into
pop
sbb
push
mov
mov
pop
shrl
xor
call
frstor
sbb
mov
int
cld
and
pop
sub
cld
inc
mov
icebp
dec
cltd
mov
adc
jmp
lahf
adc
xchg
icebp
xchg
cltd
inc
inc
dec
inc
clc
dec
xor
xor
loop
mov
rorl
inc
lret
lock
mov
jge
std
pop
cwtl
fwait
rsqrtps
xchg
mov
mov
dec
repnz
xchg
out
xchg
fisubrs
xchg
push
adc
imul
cld
mov
stc
sti
clc
mov
or
aaa
push
sbb
xchg
add
xchg
mov
lcall
sub
mov
cmp
cmpb
cmp
into
out
sarb
popa
bt
shll
jmp
add
test
xchg
adc
mov
add
daa
ljmp
das
push
sbb
sub
pop
les
or
mov
out
jg
mov
dec
aad
push
adc
test
outsb
aas
push
and
out
sub
add
mov
sub
test
test
lcall
daa
pop
addr16
and
insb
out
push
rclb
xchg
shl
mov
movsl
jno
dec
mov
btrl
lock
jg
jmp
js
mov
inc
repnz
adc
add
fwait
add
xchg
adc
push
ret
inc
mov
xchg
push
add
mov
add
icebp
jle
popa
dec
pop
test
pop
mov
xor
aad
inc
loope
inc
mov
sub
push
jae
das
pop
repnz
dec
mov
loop
and
in
sbb
or
push
add
add
mov
mov
sbb
test
sub
jbe
int
in
js
add
xor
jg
push
aad
data16
lock
call
xchg
xor
scas
dec
cmp
push
pop
mov
mov
aas
xchg
rcrl
and
jl
pushf
inc
scas
repnz
sbb
aam
xor
xchg
and
mov
adc
lock
push
xchg
lds
adc
xchg
mov
cltd
or
cs
mov
mov
mov
jmp
loop
cmp
sub
pop
es
jns
mov
lret
jnp
cld
cmpsl
inc
cmp
xorps
in
xor
sahf
jnp
loop
insb
in
cli
aad
fsts
pop
lods
mov
mov
dec
pop
xor
mov
push
xchg
push
mov
into
inc
xlat
adc
cmpsb
sub
and
wbinvd
sbb
bound
lods
in
add
in
sti
stc
push
cmp
mov
cmp
mov
data16
xchg
ret
push
jne
lods
out
stos
ret
cmpsb
fs
mov
xlat
dec
pop
cli
mov
mov
jae
or
in
icebp
out
imul
sbb
pop
mov
mov
jns
jne
xchg
loopne
mov
xor
and
in
int3
or
frstor
sub
je
pop
xchg
les
mov
mov
add
lahf
cs
aad
mov
sbb
lods
into
add
dec
pop
jno
xlat
xchg
std
push
push
and
enter
leave
jp
or
stos
enter
inc
and
lret
jae
mov
in
nop
jmp
enter
xchg
mov
push
pop
out
sub
xor
mov
pop
dec
jp
notl
xchg
dec
fnstcw
test
call
andl
jl
pop
loopne
jbe
mov
aad
xchg
jae
cld
mov
lds
lods
addb
mov
ret
add
dec
jg
ret
inc
mov
mov
push
imul
jl
mov
sti
xchg
cmp
add
cmp
or
or
aas
mov
jge
pop
jge
aam
pusha
inc
xchg
inc
mov
jo
dec
xor
cmp
sub
lock
or
cmp
dec
sbb
mov
mov
sbb
dec
mov
xacquire
mov
ds
setb
mov
iret
xlat
sbb
mov
push
call
insl
sub
dec
cmpsl
mov
mov
outsl
jge
std
rolb
int3
jg
cmp
dec
notb
fbstp
add
ret
daa
lahf
sub
push
ret
cmc
je
mov
mov
inc
mul
mov
pop
jns
sbb
pop
jbe
inc
mov
mov
xor
sbb
xchg
in
pop
jge
adc
subb
pop
push
gs
adc
subl
mov
lea
xor
lea
xchg
cwtl
test
fdivrp
je
xor
repz
pop
ret
push
inc
jl
or
xor
jne
jnp
add
out
xor
and
in
mov
jno
jns
cmp
add
std
or
pop
adc
add
jge
push
test
pop
xchg
adc
pop
dec
mov
push
pusha
int
ret
in
fisubs
lods
mov
sarb
inc
jne
mov
dec
push
or
lcall
pushl
sti
jg
jns
mov
jns
imul
mov
mov
jl
jl
add
xor
fsubs
jp
out
in
sahf
sub
pop
pusha
mov
mov
clc
rcrb
andb
mov
and
mov
jno
push
outsb
dec
xor
xchg
insb
pop
mov
std
stos
jae
jmp
push
pop
popa
sbb
ret
mov
mov
and
ds
imull
testb
xchg
fwait
mov
push
adc
jae
xchg
xchg
pop
or
cmp
lods
xchg
gs
cs
xor
shll
push
fisttps
add
ficoms
inc
scas
xchg
and
out
mov
orl
insl
cmp
dec
das
icebp
sti
mov
outsl
adc
mov
jle
stos
xchg
ja
push
lcall
mov
aas
lods
loopne
roll
push
jmp
and
out
xchg
shlb
dec
divl
ror
push
gs
lock
subl
fucomip
pop
xchg
sbb
cmp
test
arpl
pop
aas
and
add
mov
stos
push
jno
ds
popa
add
pop
fstpl
dec
add
ret
adc
fwait
pop
cs
ficomps
xor
sahf
mov
shlb
jmp
sub
adc
sarl
jmp
xchg
cmp
stc
sbb
int
out
cmp
scas
cmp
and
add
in
fwait
call
or
test
out
and
in
fistpl
push
addl
adc
mulb
cwtl
sbb
popf
xor
cmpsl
outsl
add
jl
fiadds
imul
dec
lods
xor
sahf
roll
mov
and
fs
pop
popf
fisubs
adc
lds
in
jno
hlt
call
adc
outsl
repnz
mov
adc
pop
movsb
es
mov
shlb
shlb
jo
or
xlat
sub
icebp
mov
ja
ja
fcmovbe
pop
add
xor
xchg
adc
popf
mov
icebp
out
ja
mov
dec
outsl
mov
xor
negl
fsubs
and
add
push
add
sbb
scas
cmp
xor
test
test
xchg
adc
negl
or
sar
sub
cmp
push
ret
xchg
aaa
call
or
stos
push
or
lea
and
ret
ret
add
push
roll
stc
lods
sub
sbb
push
cmp
mov
jns
mov
mov
and
pushf
ja
pop
ret
xchg
sub
mov
js
lock
stc
jle
xchg
sbb
rclb
cmp
fmull
popa
mov
data16
lods
add
js
nop
bound
mov
xchg
jmp
xor
push
add
rclb
popf
adc
adc
in
cli
mov
mov
cmpsl
imul
xchg
adc
mov
sub
or
repz
xor
fstpt
sub
and
ja
xchg
mov
fidivrl
mov
out
mov
sbbb
mov
cmp
mov
xor
jp
into
icebp
roll
xchg
jp
mov
cmpsb
jno
call
cld
pop
pop
cltd
out
daa
lea
repz
sahf
inc
xchg
test
add
aad
out
or
xchg
pop
icebp
add
add
ret
xchg
mov
mov
adc
lods
add
adc
popl
sti
and
push
mov
pop
movb
adc
add
call
in
imul
push
ja
mov
lods
fwait
or
jnp
sub
inc
and
xchg
pop
jnp
push
mov
insb
movsb
push
dec
shlb
dec
jb
outsb
lret
mov
pop
jmp
pop
push
leave
sahf
out
aam
jg
or
daa
sbb
stos
test
dec
int
jnp
ljmp
out
scas
mov
or
pop
adc
les
addr16
jmp
or
dec
fs
ret
out
ljmp
sbb
cmp
mov
daa
mov
test
aaa
mov
in
dec
decl
js
inc
les
jbe
ficoms
arpl
mov
ljmp
not
xchg
dec
add
cld
loop
aad
adc
mov
decb
sbb
inc
cmp
xor
jns
andb
popa
das
inc
xchg
add
and
repnz
movsb
xor
xor
ss
int
aaa
aam
cwtl
cltd
dec
in
popa
notb
dec
inc
gs
sbb
ss
mov
inc
xchg
scas
xor
rcrl
sub
dec
cmp
in
in
mov
cli
jnp
and
and
aam
loop
loop
add
cli
push
bound
sub
test
loop
fwait
jecxz
test
xchg
cmp
loope
jb
pop
xchg
cmpsb
ds
mov
scas
or
push
mov
mov
clc
jo
call
int3
fbld
loop
popa
sbb
cmc
cs
jnp
jnp
jl
notb
cmp
daa
adc
or
imul
rcll
jne
aaa
cmp
pop
mov
xchg
or
or
pop
add
mov
leave
or
icebp
aaa
sub
dec
xor
out
xor
mov
dec
mov
ja
pop
sahf
and
imull
imul
mov
inc
sub
add
faddl
dec
mov
and
call
jnp
aas
fdivrs
lods
and
and
rcrb
jge
imul
out
mov
or
mov
test
outsb
sbb
mov
push
into
push
push
cmp
mov
sbb
inc
lahf
loope
cld
mov
cmpsl
data16
sub
stos
ret
jns
mov
scas
and
push
or
xor
std
xor
jmp
lea
shrb
jb
mov
xchg
and
in
jl
pop
jb
add
xor
mov
pop
outsl
cmp
rcrl
cmp
xchg
mov
loope
data16
lret
sub
mov
rolb
inc
aam
xchg
pop
inc
sub
pop
mov
pop
sti
xor
pop
sub
hlt
rcll
push
push
imul
fs
insb
fcmove
xor
fsubrl
int
dec
hlt
push
jl
cltd
stos
fcoms
daa
lods
cmpsb
insb
xchg
in
pop
divl
fnsave
mov
pushf
fwait
aad
mov
mov
cmp
lock
mov
popa
sti
scas
cld
pop
jns
mov
or
icebp
rcrb
mov
bound
adc
jecxz
cmp
mov
into
or
push
iret
sbb
or
nop
push
mov
dec
pop
and
lcall
or
push
jle
cmp
fcompl
pop
lret
jnp
pushf
in
mov
pop
out
jb
sti
xchg
add
mov
jns
lock
push
sti
movsb
xor
or
xchg
cmp
jmp
ret
stos
inc
xchg
rcrl
sbb
outsb
mov
jg
idiv
mov
out
sub
jno
jne
call
mov
fmuls
sub
mov
jp
loop
shl
mov
mov
push
call
push
cltd
jge
iret
add
cltd
loope
lahf
cmp
inc
cs
sar
ss
cwtl
lret
mov
mov
hlt
sub
dec
push
dec
pusha
fldt
sub
pop
or
push
pusha
sub
mov
add
arpl
call
loope
dec
out
or
xchg
fstpt
push
xor
push
cmpsl
add
lahf
cmp
adc
stos
mov
sub
sbb
clc
sbb
ret
jg
cmpsl
ja
test
je
xor
pop
inc
call
fiadds
pop
sbb
adc
mov
or
ja
cmpb
pop
dec
xchg
mov
popa
rorl
mov
movsl
xchg
sub
cmp
or
jno
dec
cmp
and
jae
jae
xchg
xor
adc
push
jae
dec
lahf
sub
push
cltd
repz
loope
mov
mov
imul
or
push
dec
sbbb
out
jl
sub
lahf
rcrb
pusha
xchg
pop
pop
pop
lock
jmp
stos
outsb
jo
int
jbe
repnz
jecxz
cmp
icebp
fdivl
pop
arpl
cs
fs
bound
or
js
movsl
mov
loop
loope
xor
xchg
neg
imul
cmp
and
and
out
adc
mov
outsb
aas
add
sbb
dec
jp
xor
xchg
mov
adc
int3
daa
and
mov
xchg
imul
jp
movsl
mov
ss
fdivrl
and
stc
jns
repz
add
scas
lcall
xor
mov
popa
jle
call
xor
leave
mov
lods
sbb
inc
dec
ret
into
js
push
and
mov
cmc
lods
jmp
rcrl
lods
xor
cmp
mov
mov
dec
and
adc
loope
call
or
and
add
dec
fiaddl
fnstsw
add
fisttps
sbbl
lds
imul
icebp
insb
outsb
dec
std
daa
mov
xchg
daa
into
dec
mov
xchg
sub
add
jl
daa
movsl
jno
fcmovb
mov
pusha
push
aas
dec
into
jg
stos
cmp
stos
aam
mov
xchg
daa
fcomi
add
out
test
test
mov
cmp
adc
mov
lret
add
bound
push
push
js
or
and
mov
cmp
jg
adc
mov
and
sbb
mov
outsl
cmp
mov
push
ss
std
inc
cmc
into
cmp
and
daa
xchg
pop
xlat
jno
cli
jecxz
inc
loopne
imul
jno
ljmp
jb
push
xor
daa
jp
insb
or
jp
add
inc
rcrb
inc
add
add
and
fdivl
scas
mov
push
fisttpll
lahf
int
fwait
jnp
mov
inc
inc
stc
lds
pushf
mov
sti
loop
xor
lret
test
pop
mov
fimuls
sti
repnz
rcrl
test
pop
aam
or
or
pop
pop
pushl
xchg
aam
lahf
fwait
cli
adc
xor
mov
or
sbb
test
shll
nop
push
das
mov
adc
pop
jp
mov
and
xor
sbbl
orl
imul
repz
xor
test
inc
adc
cmp
xor
mov
jo
add
cltd
dec
adc
cli
push
and
jo
or
mov
and
mov
xchg
or
cmp
cmp
adc
jle
pushf
incl
sbb
rorb
add
daa
orb
loopne
inc
adc
or
adc
mov
pop
add
add
orb
inc
xchg
push
sarb
negl
fisubs
jmp
rcrb
rcr
lods
jno
sub
cld
inc
sub
ja
ja
xlat
loope
mov
jns
mov
cmc
jg
adc
sub
pop
outsl
push
mov
adc
scas
inc
test
xchg
sbbb
cwtl
lret
ss
mov
lods
xlat
lahf
repz
pop
push
cmp
dec
add
dec
notb
cs
push
mov
dec
call
jae
enter
jmp
and
fdivs
cltd
stos
rcll
dec
mov
xor
js
arpl
and
fwait
or
outsb
out
cmp
pop
popf
sub
and
loope
adc
int
loop
or
inc
xor
pop
test
insw
xchg
sub
or
sbb
dec
jecxz
sbb
and
aaa
stos
add
add
sub
xor
and
push
push
push
mov
scas
add
sbbb
or
pop
jns
and
stc
ret
mov
mov
imul
and
sub
lock
fwait
push
jno
pop
movsb
in
push
mov
xor
push
jge
push
xor
jnp
movsb
adc
mov
out
xor
imul
movsl
mov
lcall
mov
mov
jp
rcl
sub
scas
fisubrl
jmp
aas
ds
loop
pushf
pushf
notb
or
aaa
jmp
xchg
sub
sub
stc
lods
ljmp
adc
mov
jb
bound
sub
mov
pop
push
xor
cmp
leave
mov
insl
mov
mov
fisubl
mov
shrb
aam
mov
movsb
xor
mov
andb
stos
out
push
mov
sbb
xor
popa
and
fs
xchg
inc
in
aaa
xchg
mov
mov
or
test
inc
and
adc
xchg
inc
adc
shl
push
adc
pop
lock
xchg
xchg
mov
mov
rcll
iret
int3
cli
fbld
mov
out
stos
mov
out
fdivl
mov
pop
es
pop
mov
popa
xchg
adc
push
jae
pop
iret
je
jmp
icebp
cwtl
out
mov
mov
xchg
ret
fists
inc
gs
stos
mov
sub
scas
mov
gs
jle
dec
sbb
insb
ficomps
aam
dec
push
push
fsubrp
sub
and
divl
mov
es
jbe
fcmovb
js
cmpsl
js
test
xchg
jmp
inc
push
pop
cmp
xchg
mov
inc
ret
iret
rcll
push
and
movsb
lret
and
inc
inc
in
dec
scas
lea
addr16
mov
jno
sub
ds
lea
mov
roll
shll
aaa
jb
dec
stos
push
jmp
je
ja
es
in
loop
call
sbb
pop
scas
xor
stos
mov
fiadds
test
insl
dec
andl
lcall
lcall
add
add
lods
rorl
fdivrl
inc
orl
push
in
and
fidivrs
and
pop
scas
sbb
inc
ljmp
lret
push
push
popf
jecxz
popf
bound
cmpsb
lcall
test
xor
adc
jns
xchg
cmpsb
mov
std
aam
dec
sbbb
jg
pop
in
mov
xor
and
std
add
mul
mov
mov
mov
jb
imul
loop
mov
int3
aad
sub
scas
int
xor
mov
sub
mov
push
push
daa
jbe
sahf
cmp
aad
cltd
add
sbb
sub
jno
xor
sbb
adc
add
sbb
pusha
hlt
icebp
sub
inc
mov
mov
cmp
notl
sub
test
vsubpd
sbb
xchg
aam
mov
or
dec
and
sbb
clc
mov
scas
sub
aaa
or
inc
sbb
shlb
inc
cli
int3
mov
ss
dec
or
cmc
cmp
insb
mov
inc
jle
dec
dec
jae,pn
cmp
lea
mov
imul
gs
xor
mov
sub
xchg
push
add
inc
sbb
dec
xchg
jp
inc
rorb
sub
loope
pop
inc
push
mov
sub
mov
les
pop
push
pop
out
xchg
out
or
out
fcmovnbe
inc
mov
cmp
subb
loop
int3
data16
dec
jecxz
pop
mov
gs
int
push
test
mov
sbb
xchg
out
mov
nop
loop
mov
in
xor
pop
dec
pushf
dec
or
into
test
or
repnz
mov
bound
fidivrs
aad
mov
arpl
mov
mov
adc
push
cmp
cmp
cmp
call
jbe
in
in
fldcw
jg
inc
out
pop
int3
cmp
and
scas
add
fcomps
push
mov
movsb
sub
clc
rcrl
mov
nop
mov
lcall
xor
gs
pop
jmp
jne
rcr
es
dec
dec
sub
aas
dec
xchg
pop
movsb
pop
test
mov
insl
iret
add
pushf
fdivs
adc
cmp
sbb
cmp
push
int3
xor
push
dec
dec
imul
pop
ljmp
scas
pop
jns
push
sbb
insl
addl
mov
mov
fs
push
lcall
jbe
cld
add
jge
cmp
sbb
xor
xor
pusha
mov
outsl
jns
out
nop
sarb
xchg
vfnmadd213ps
and
imul
and
sbb
push
sub
aas
popf
ret
fldcw
test
add
hlt
add
in
dec
add
negb
call
stos
popa
lods
jae
fcmovu
mov
mov
dec
das
dec
cmc
push
pop
ds
repnz
and
rcrl
out
mov
mov
xchg
add
xor
inc
sub
inc
iret
mov
fdivrl
out
negl
aas
pop
jae
cmp
sbb
mov
sbb
fs
das
mov
sub
movaps
dec
test
xchg
inc
inc
cmp
inc
pop
enter
sbb
or
inc
mov
call
jno
push
lahf
mov
out
aam
xor
inc
or
push
add
push
pop
dec
sbb
and
add
scas
and
cltd
cli
mov
ds
jns
pop
pusha
outsb
inc
mov
jle
fwait
dec
sahf
cmpsl
pop
int
adc
aam
mov
mov
xor
in
dec
outsl
dec
clc
lods
inc
pop
xor
icebp
sub
push
mov
icebp
and
jmp
mov
dec
inc
in
std
ljmp
or
out
jne
push
or
jo
inc
hlt
inc
das
add
in
ljmp
cmp
jp
lret
xlat
insl
nop
xorl
add
popa
jbe
adc
xorl
fnstsw
lret
xchg
unpcklps
sub
lods
mov
pop
push
cltd
jecxz
scas
lds
xor
roll
push
bound
arpl
or
scas
pop
outsl
sbb
mov
jbe
or
push
and
mov
lret
scas
roll
push
bound
inc
mov
shrb
call
push
jae
sub
int3
pushf
sub
and
fnsave
lock
lahf
pop
push
loope
inc
xor
cltd
jp
and
push
jno
dec
iret
leave
fsubl
imul
notl
insb
xchg
lret
fstl
pop
sub
out
je
adc
sbb
adcl
push
inc
stos
add
xchg
nop
add
out
pop
mov
daa
je
pop
ss
mov
fiaddl
test
shr
xchg
xchg
mov
mov
loop
xchg
xor
popf
insb
mov
and
dec
sbb
jge
movb
or
or
adc
cmpsl
rcrb
push
out
add
orb
jge
mov
xchg
addr16
jg
push
sub
push
rolb
or
andl
dec
flds
push
les
and
shll
xchg
filds
jmp
sub
mov
inc
inc
xchg
ja
aad
add
jnp
mov
lds
xchg
mov
jae
pop
or
inc
cltd
fdivs
or
je
jae
movsb
sub
add
push
pop
into
inc
add
lods
add
mov
lods
test
mov
jno
dec
jl
lret
jle
lock
fcmove
stos
push
push
dec
repnz
ds
cmp
insl
push
mov
scas
lds
inc
adc
mov
cmpsb
adc
mov
roll
xchg
pop
arpl
daa
sub
push
mov
adc
pop
sub
mov
push
sbb
mov
lret
and
into
lret
push
xor
dec
mov
bound
nop
movsl
stos
loopne
dec
test
mov
loopne
xlat
sbb
or
inc
pop
in
or
cwtl
int3
fisubrs
mov
push
jmp
cmp
stos
aaa
jg
bound
repz
xchg
add
popf
jae
in
sbb
and
filds
sarl
or
insl
pop
and
xchg
sub
jb
xchg
fadds
shll
nop
fmulp
adc
shrb
in
cmpb
mov
jno
fidivl
nop
pop
inc
fwait
rol
mov
in
mov
push
testl
out
cmp
movsb
push
aas
sbb
js
jne
movsl
and
shlb
imul
testb
xor
lods
dec
xor
arpl
jno
inc
dec
repz
es
xor
or
sub
sub
inc
leave
aas
nop
movsl
xchg
mov
idivb
in
adcl
adc
aad
and
call
mov
jg
sbb
insl
pop
sub
xor
add
ret
jb
cmp
jb
test
inc
aaa
pop
js
jo
xor
cmp
sbb
iret
xchg
push
sub
fdivrs
shll
jne
shll
push
ffreep
adc
in
or
scas
repz
add
or
rcl
lea
mov
xchg
pop
add
mov
out
xor
cmpsb
add
jecxz
fisttps
adc
add
stos
cmp
pop
shrl
gs
movsl
jmp
inc
ds
and
frstor
mov
or
inc
or
sti
sub
jne
xor
xchg
push
movsl
adc
mov
and
pop
sub
aam
add
test
out
push
stc
sbbb
arpl
mov
mov
stc
jbe
into
xor
insl
test
and
cltd
cld
mov
stc
cmp
inc
lret
insb
lret
dec
mov
aas
rolb
add
imul
push
jp
lock
icebp
enter
cmp
hlt
lcall
jle
pop
xor
adc
push
leave
add
fsubr
out
aad
mov
movsl
cmpsb
push
jp
lcall
xorb
shr
jp
call
jnp
pop
add
mov
aas
inc
and
pushf
mov
pop
push
fwait
call
inc
pushf
pop
popa
dec
push
das
lret
adc
push
aad
iret
fbstp
xor
into
dec
clc
repz
mov
aam
dec
xchg
pop
cmp
subps
aad
movsb
mov
xor
lret
ret
xlat
iret
loope
ss
push
outsb
add
mull
sub
xor
cmp
scas
sub
mov
add
sarl
sar
jae
adc
movsb
ljmp
fsubrl
out
pop
imulb
sub
pushf
xchg
sub
and
push
mov
clc
clc
test
mov
fnstsw
mov
aad
insb
fsts
adc
pop
or
lret
jns
pop
cmp
sbb
cld
cmp
push
adc
xchg
sub
fidivrl
enter
scas
in
mov
xchg
push
sub
ss
fildll
dec
cld
sbb
inc
mov
test
inc
xchg
xor
inc
sarl
shl
sar
push
aad
outsb
cmp
xchg
les
test
sub
icebp
sbb
push
stos
cmp
xchg
dec
push
aas
push
inc
inc
xor
inc
cmp
or
cmpsb
jmp
or
and
cltd
stos
sub
in
push
mov
out
cs
cltd
lods
outsl
inc
inc
dec
mov
sarl
movsb
ret
leave
stc
xor
mov
push
sub
faddl
sti
addr16
lcall
shl
into
pop
jmp
test
mov
aaa
scas
jns
xor
lret
mov
roll
pop
push
lahf
clc
pop
push
rorl
sub
shl
jecxz
inc
addl
jle
lea
sbb
lret
insl
sub
das
lods
fnstenv
das
mov
ret
popf
bound
aad
jno
xchg
adc
mov
loope
jmp
mov
inc
mov
lods
xchg
push
lret
mov
mov
pop
sti
or
sub
add
jo
lret
in
pop
adc
mov
cwtl
xor
jecxz
push
push
rorb
inc
dec
lods
fstl
cmpxchg
dec
mov
pop
sub
inc
mov
outsl
arpl
movsb
pushf
adc
fstl
test
and
cld
icebp
std
movsb
lahf
cmp
mov
mov
lods
out
and
xchg
mov
addr16
in
sbb
adc
cmpl
pushf
sahf
mov
cs
js
sub
cmp
test
std
xchg
xlat
out
fs
lret
mov
inc
ret
add
inc
xchg
ret
jne
ret
outsb
jns
pop
leave
jns
std
inc
cmpsl
shll
ret
add
mov
xchg
mov
out
inc
xchg
fldt
inc
das
or
push
mull
dec
cmp
pusha
repz
jne
lods
bound
sbb
sbb
out
xorb
mov
adc
cmp
mov
cli
jne
mov
psrad
or
jae
out
repz
lock
push
fucom
push
mov
pand
loop
incb
push
pusha
stos
adc
push
sbbl
inc
jmp
nop
outsb
icebp
fldl
popf
pop
pop
dec
loope
icebp
push
fmull
fimull
adcl
adc
and
mov
push
incb
sbb
aam
fstpt
sbb
inc
shlb
sub
pop
or
stc
ret
push
add
into
xor
lret
mov
sbbb
adc
xor
rolb
stc
jns
mov
mov
popa
fnstenv
adc
addr16
mov
inc
ds
aad
fstpl
rclb
xchg
pop
jbe
lret
cmp
cmp
jae
cmc
push
mov
out
and
mov
fistpll
xchg
push
fdivrs
lcall
cmp
adc
mov
xor
aam
aad
cmp
out
add
jle
mov
mov
cmp
dec
stos
xchg
jne
jo
lcall
ret
xor
jnp
cmp
cwtl
xlat
add
shll
pop
dec
jmp
add
or
movsl
or
dec
imull
es
xor
jbe
xchg
mov
ss
xchg
or
js
enter
les
loope
adc
push
pop
data16
test
imul
sbb
imulb
pop
jle
mov
loop
xor
mov
or
cld
ljmp
shl
mov
les
in
mov
dec
xchg
pusha
call
push
andb
cld
stc
or
jno
pop
add
nop
out
mov
dec
out
sbb
or
push
dec
cmp
and
adc
mov
cmp
loope
fisttps
bound
mov
mov
cmp
je
idivl
int3
inc
fcmove
or
lds
movsl
enter
inc
jmp
mov
dec
jne
or
push
into
pop
stos
dec
push
xor
arpl
xlat
jmp
loopne
push
xchg
adc
adc
outsb
sbb
sub
lods
push
mov
dec
jbe
sub
clc
adc
mov
jmp
sub
sub
test
sub
gs
dec
fcmovnbe
pop
xor
xchg
jae
mov
in
adc
notl
movsb
out
mov
mov
out
rolb
add
mov
int
mov
sahf
adc
cmp
outsb
fimuls
push
jns
stos
lds
bnd
push
pop
xchg
sti
stc
out
cmp
aas
adc
pop
sbb
movsl
fnstcw
insl
push
jg
pop
int3
inc
lods
cmpsl
mov
and
bound
and
aaa
push
add
int3
jp
sbb
fsubl
nop
xor
adc
cmpsb
push
xor
add
dec
into
hlt
test
rcr
bound
insb
cmp
out
call
out
inc
xchg
pusha
ret
cltd
aas
xor
jmp
pop
mov
jne
hlt
shrl
xchg
mov
shl
add
fdivrl
fsubrs
gs
xor
xchg
jmp
mov
push
fsts
or
rol
add
scas
dec
dec
cmp
jge
dec
movsl
and
inc
fisttpll
clc
xchg
sub
adc
lret
and
and
jl
sbb
inc
std
sub
mov
or
or
ja
dec
mov
test
jb
mov
std
pop
daa
dec
loopne
pop
arpl
rcrb
faddl
xchg
test
sti
outsb
mov
push
jecxz
or
inc
sbb
inc
mov
sbb
sub
push
sbb
and
mov
adc
cmpsb
imul
lods
sub
jns
inc
outsl
cmp
push
sub
in
test
imul
pushf
and
push
imul
inc
cmp
jle
jo
pop
repz
xchg
lea
adc
push
add
es
pop
adc
push
jmp
pop
lahf
out
add
add
lea
push
pop
xor
rclb
enter
in
in
in
pop
mov
sbb
adc
pop
fidivs
adcl
popf
cmc
add
jbe
push
sbb
aas
aas
inc
inc
stos
daa
mov
das
dec
int
mov
fcompl
add
adc
xor
mov
pop
xor
ret
mov
pop
bound
jge
ret
inc
shlb
fwait
decb
fs
stc
mov
clc
pop
mov
out
mov
xlat
cmp
sbb
cmpsl
divb
sbb
cmpsb
std
jae
aam
jecxz
icebp
clc
cmp
lret
daa
push
xor
movsl
imul
push
nop
pop
loopne
sub
mov
sub
movsl
stc
xchg
add
xor
js
cli
pop
inc
sbb
insl
xor
stos
ss
xlat
add
loope
or
adc
mov
testb
xor
cmp
xchg
stos
out
lock
sub
daa
nop
ss
lods
pop
hlt
or
push
pop
ja
movzwl
inc
movsb
mov
scas
inc
js
add
pop
adc
scas
es
inc
inc
xchg
mov
fstps
sub
mov
mov
xchg
imul
insb
push
sbb
pop
mov
xchg
addl
into
jle
imul
cmc
addr16
push
repz
icebp
cwtl
jge
pop
mov
push
insl
xor
push
lahf
repnz
rcl
inc
shr
mov
xor
loop
add
sahf
pop
or
pop
movsb
mov
int
xchg
jg
push
jmp
shll
nop
cmp
cmp
inc
jmp
pushf
ficoml
jae
xchg
out
call
cmp
and
in
loop
sbb
sub
outsb
ficompl
sti
mov
lcall
add
xchg
es
inc
inc
pop
stc
or
test
inc
lea
sbbb
xchg
cltd
xchg
lahf
mov
je
fwait
mov
mov
mov
dec
lret
movsb
inc
gs
lock
and
test
inc
popa
push
gs
add
inc
rclb
xchg
mov
add
or
jns
bnd
sarb
in
xchg
rorb
mov
clc
xorb
lret
gs
fidivs
insb
leave
in
and
loopne
scas
repnz
fisttps
stos
shll
xchg
inc
dec
je
and
subb
fisubs
jno
and
xlat
mov
leave
fbstp
mov
fnstsw
insb
or
mov
sub
pop
adc
push
std
je
jl
andl
int3
sub
push
mov
dec
mov
fmulp
scas
dec
in
movups
adc
pop
loope
lret
repz
in
sub
mov
aam
sub
jp
movsb
subb
mov
add
sahf
mov
cmp
dec
adc
push
leave
lcall
das
in
xchg
in
cmc
xchg
hlt
xchg
cmc
clc
fdivs
outsl
rcll
fwait
or
insb
push
sub
stos
loop
aad
dec
push
add
jle
rcrb
aam
dec
imul
icebp
pusha
or
jns
and
lock
sbb
or
push
inc
push
jb
pop
xor
dec
add
adc
mov
push
loop
sarb
stos
aas
hlt
test
and
dec
xor
pop
decl
lods
std
and
sbb
add
je
xchg
pop
movsb
mov
and
loopne
cmp
mov
out
lret
mov
add
sub
mov
rcl
inc
sub
sahf
pop
adc
repz
inc
cmp
ljmp
push
jecxz
shlb
scas
pop
ljmp
jmp
fistl
cmc
xlat
push
jp
sbb
inc
out
cmp
jecxz
lret
mov
repnz
aas
inc
pop
dec
stc
loop
inc
aas
daa
add
add
inc
mov
cmp
cmp
sbb
adc
cs
or
add
cmp
adc
sbb
fcoml
or
shrb
sub
cmp
xchg
loop
xlat
push
xor
and
xor
inc
lods
shrl
and
sbb
outsl
mov
scas
cmp
pop
jnp
stos
out
push
cld
sbb
mov
ljmp
mov
call
fmulp
loope
mov
cltd
popa
adc
xor
or
jbe
push
cld
out
ret
add
mov
mov
xchg
push
mov
sti
inc
insb
or
push
in
jecxz
pop
dec
xchg
adcl
push
add
pop
and
lret
xor
cwtl
xchg
loopne
sbb
jp
push
sti
mov
add
mov
push
jecxz
lret
mov
xchg
dec
out
push
inc
or
mov
dec
out
sub
in
imul
mov
push
mov
negb
lock
xor
stos
test
dec
jo
gs
fs
xor
inc
add
jnp
cltd
push
test
insb
push
popf
sub
rcl
inc
faddl
subl
rcrl
adc
cmp
cmp
adc
mov
sarb
loop
clc
dec
push
es
pop
push
sub
push
or
xor
jae
bound
mov
mov
mov
sub
add
ds
inc
ss
pop
imul
repnz
dec
aaa
xorl
mov
jno
dec
mov
cld
cmpsl
in
add
adc
pusha
jp
je
fbstp
lea
sarb
mov
fstpt
fcom
cmp
int3
mov
fistl
imul
mov
and
mov
out
addr16
or
cmc
les
movsl
xchg
in
mov
jg
mov
insb
cmp
push
icebp
xchg
notl
mov
mov
daa
scas
adc
insl
sub
out
mov
cmp
xchg
xchg
out
les
movsb
sbb
dec
hlt
daa
add
lods
aad
in
cmp
addr16
jge
addr16
sub
xor
je
in
addr16
sarb
fiadds
es
mov
pusha
dec
xchg
fnstsw
sub
lret
fldz
mov
vandps
loope
xchg
das
fnstenv
stos
xor
lret
and
sub
rclb
and
mov
bound
jo
or
and
mov
sub
iret
push
clc
mov
pop
jbe
ss
ret
pop
jecxz
jo
lods
jns
fdivrl
js
and
in
mov
xor
mov
sahf
fwait
mov
fnstcw
dec
pop
sub
rorb
ret
or
in
dec
inc
mov
jge
aaa
mov
divl
mov
jl
je
mov
push
jecxz
jbe
dec
xchg
scas
mov
sub
pop
test
or
xchg
xor
push
mov
enter
ljmp
cwtl
out
test
mov
mov
pop
shl
dec
jae
jbe
sbb
xchg
adc
imul
sub
cmp
adc
lods
lcall
movsl
pop
mov
lret
pusha
push
dec
pusha
cmp
stc
dec
daa
xorb
addb
insl
cmp
mov
cmpsl
cmp
hlt
int3
and
sbb
out
push
sub
outsb
lret
or
out
pusha
pop
dec
mov
lea
push
and
inc
pop
jbe
call
in
mov
pushf
stos
dec
add
fdivl
sbb
cs
fstpt
pop
stc
repz
mov
fadds
je
sbb
loopne
cwtl
into
imul
mov
pop
dec
xor
mov
insl
sub
adc
int
ret
mov
fcom
pop
into
jmp
push
xchg
and
cs
or
ss
popf
inc
cmc
das
cmp
mov
addr16
push
shl
lock
pop
addl
sarb
testl
xchg
mov
stos
inc
mov
jno
jl
sarb
xchg
push
imul
jns
xor
mov
out
xchg
xor
mov
inc
pushf
push
aad
sbb
rcrl
cmpsb
leave
test
les
ds
mov
fs
jle
dec
mov
sub
xchg
mov
repnz
into
sub
fidivs
shrl
fs
sbb
rcrb
out
inc
loope
outsl
jle
movsl
push
cmp
popf
daa
add
pop
inc
xor
mov
inc
repz
scas
fcmove
mov
xchg
jmp
nop
roll
fdivrl
stc
jno
pusha
ret
leave
push
mov
out
fisttpll
cmpsb
push
outsl
lret
cli
sbb
sbb
mov
xor
test
cmpl
push
fs
mov
add
test
in
data16
lea
mov
mov
stos
lcall
iret
inc
loopne
icebp
je
mov
xor
mov
pop
mov
pusha
outsl
adc
push
dec
enter
pusha
xchg
pop
cmp
out
fisubrs
jl
loopne
call
mov
cld
les
push
mov
pop
test
iret
xor
inc
xchg
clc
outsl
ljmp
inc
lods
adc
mov
or
jnp
idivb
dec
in
mov
mov
pop
movsl
ja
insb
lods
jmp
dec
shrl
xlat
shr
sub
lods
add
push
arpl
sub
and
pop
call
repnz
cmp
mov
add
popa
xor
rolb
test
repz
xlat
adcl
pop
jge
add
push
push
aaa
shl
mov
mov
xorb
push
push
nop
lahf
mov
sbb
mov
jne
jge
jl
sbb
cmpl
mov
scas
xor
jns
out
data16
stos
je
daa
je
jnp
xchg
imul
jp
fnsave
clc
cld
jno
pop
adc
sub
stos
in
inc
pop
and
fiaddl
inc
leave
inc
outsl
sub
pop
mov
xchg
int3
shll
push
dec
push
xchg
pop
movsl
ret
dec
xchg
mov
adc
fwait
xchg
addr16
push
inc
mov
sti
mov
jbe
mov
inc
xchg
imul
mov
xor
push
and
int3
add
xor
lods
pop
out
scas
cmp
push
xor
push
ljmp
shl
cmp
cmp
jbe
fsubr
mov
sbb
sbb
ljmp
jecxz
push
icebp
xor
lahf
adc
pushf
mov
ds
cmp
dec
mov
hlt
or
xor
test
scas
ficompl
lret
xchg
cwtl
sub
cli
fwait
popf
xchg
outsl
fdivrl
rcrl
adc
mov
mov
mov
sub
xchg
outsb
and
stc
inc
jg
xchg
pop
lcall
fnsetpm(287
push
cld
xchg
mov
xor
mov
fildl
int
in
jmp
cmpsl
push
sbb
in
fdivl
lea
push
or
cli
pushf
in
ja
or
mov
test
sarl
xor
daa
cmpsb
xor
icebp
dec
xchg
fiaddl
mov
and
mov
mov
in
push
pop
outsb
xchg
mov
or
stc
imul
push
xchg
pushf
push
pusha
cmp
popf
and
shll
sbb
jno
dec
xor
add
cmpsb
cmpsb
xchg
pop
and
sub
leave
push
pop
vsubss
xchg
in
repnz
mov
lods
cmp
jno
xor
jle
inc
movsb
jl
push
add
vmread
mov
bnd
cmp
roll
outsb
aaa
lds
or
sbb
mov
inc
sbb
inc
pushl
xor
inc
jne
testb
mov
xor
loop
div
jmp
xor
adc
mov
aam
mov
jl
dec
sahf
xchg
icebp
enter
stos
daa
mov
xor
xor
dec
popa
push
pop
mov
repz
fs
ljmp
mov
mov
in
mov
jb
push
or
xor
daa
gs
xor
xor
push
aam
fwait
movsb
or
repz
sub
jo
push
push
int
outsl
pop
imul
or
sti
clc
frstor
adc
loop
mov
fstl
push
and
stc
cmpsb
jo
loop
xor
xlat
mov
xchg
stos
jae
imul
test
ja
xchg
xchg
ds
sub
sti
fcmovne
mov
mov
inc
outsl
xor
clc
adc
adc
or
sbb
adc
dec
outsl
jae
js
in
jp
mov
sti
sahf
dec
std
and
in
cwtl
or
xchg
into
pop
rclb
xorl
dec
fildll
jl
jne
adc
mov
and
jo
pop
lods
xchg
test
mov
mov
fsubrl
xchg
test
leave
lret
ja
add
fcomi
fistpll
iret
mov
push
and
mov
lock
lea
ss
jno
fstps
xor
mov
dec
xor
dec
pop
jle
jns
popa
shrl
nop
xor
jnp
test
push
cmp
fiadds
cmp
xchg
mov
push
popf
xor
mov
fcoml
enter
ds
jne
shlb
mov
stc
xchg
outsl
popa
aam
push
in
mov
data16
fiaddl
scas
push
and
inc
pop
mov
push
popa
add
mov
into
jg
outsb
in
shl
test
fistl
in
cmpsl
push
xchg
mov
cmpsb
lds
jbe
sub
ljmp
mov
and
cmp
mov
cmpsb
lret
push
cld
adc
out
call
sti
lcall
jnp
mov
or
lds
lcall
into
push
cld
sbb
arpl
mov
inc
pop
xor
xchg
std
and
clc
lds
arpl
pop
sbb
mov
add
incb
lock
fisubrs
std
xorl
fsubl
inc
movsl
lds
lds
push
inc
push
dec
adc
gs
shrb
loop
cli
and
push
movsl
and
pop
xor
push
pop
mov
jb
jns
sub
das
add
movsl
dec
outsb
jecxz
sub
icebp
test
sub
jne
mov
aad
hlt
xor
sbb
dec
or
jge
lds
repz
iret
popa
mov
or
pop
cwtl
pushf
bound
mov
pop
ljmp
cli
cltd
std
les
adc
inc
sub
mov
xor
jmp
aam
es
gs
leave
jb
mov
jb
out
leave
addr16
mov
push
jo
lcall
mov
cmp
sub
and
test
sbb
ret
mov
dec
loope
popf
data16
adc
insl
in
pop
push
imul
out
cmp
je
mov
out
inc
dec
xchg
mov
dec
mov
mov
xor
cmpb
mov
ljmp
and
adc
shrl
inc
xor
popf
cmp
and
icebp
loop
mov
jl
scas
je
sbb
and
fcmovnb
hlt
lahf
mov
call
mov
xchg
xchg
aad
nop
dec
rclb
daa
repz
lods
xchg
adc
negl
pop
loop
rcll
jmp
loopne
ficoms
mov
jl
mov
push
std
and
pusha
pop
or
jle
push
add
je
lea
adc
sub
pop
frstor
sbb
not
fwait
out
add
icebp
push
cmp
add
lock
ljmp
xchg
mov
popf
mov
popa
jge
jns
mov
add
roll
push
xor
xchg
sbb
mov
test
and
jmp
repnz
sti
in
in
mov
jns
daa
insb
ret
pop
ja
or
cmp
loope
sti
in
cmp
aam
push
push
fists
stc
xchg
int
jge
test
mov
fistpl
push
xor
mov
loopne
cmp
stos
mov
cld
imul
aam
push
std
fisubl
ss
adc
or
mov
inc
arpl
mov
stos
cli
adc
ret
popf
mov
cmp
xor
add
xchg
jecxz
sbb
mov
inc
push
mov
dec
cs
jl
es
int3
ret
std
add
and
jle
dec
add
adc
push
stos
inc
out
daa
sti
jns
ds
data16
sbb
popa
or
jns
hlt
int
insb
ret
inc
test
or
xchg
in
xchg
dec
test
mov
cmpsl
push
rcr
pop
shll
push
sbb
jne
aaa
mov
adc
jle
mulb
dec
add
and
test
repnz
cmp
pop
shr
test
xchg
vpminsw
dec
cwtl
push
repnz
pop
jo
aaa
pop
shl
and
aas
test
mov
cmp
stos
inc
adc
mov
push
popf
std
push
cmp
jmp
pop
movsl
add
cmp
andb
dec
fisttpll
or
xor
pop
xchg
add
mov
es
mov
jo
in
shlb
bound
in
or
xchg
daa
jge
clc
neg
out
popa
fistps
xor
xor
push
adc
sub
popa
lds
dec
sbb
ret
xlat
cli
xor
int
push
sub
mov
add
pop
cld
or
popa
imul
repz
add
lock
cmp
pop
push
loope
shr
inc
or
lcall
scas
jge
iret
jae
mov
rcrl
scas
fs
cmc
pop
cwtl
pop
mov
or
daa
add
sub
addr16
in
xor
sbb
xchg
push
test
int3
jmp
xchg
sbb
je
sahf
cmpsl
xchg
sbb
pop
sbbl
leave
ror
stos
test
jge
test
push
adc
jl
popf
icebp
cmp
cli
mov
and
or
sbb
int3
inc
movsb
add
paddsw
pop
rclb
pop
pop
cmp
fisttpll
loop
clc
jle
aas
movsl
cltd
out
sub
jbe
mov
dec
push
or
and
adc
mov
int3
negb
adc
jp
jl
mov
test
pop
lods
repz
inc
stc
mov
jno
lods
jecxz
rolb
mov
in
jo
and
adc
hlt
or
lds
les
xchg
rorb
mov
aad
sub
icebp
jle
loope
stos
dec
iret
mov
ret
or
sub
and
xchg
inc
fucomp
ljmp
std
lods
or
mov
inc
or
jecxz
dec
or
jno
clc
mov
mov
jmp
mov
xor
lds
adc
and
or
push
mov
adc
adc
loopne
rorb
clc
mov
cmp
ret
push
add
ss
mov
push
shl
outsb
jo
leave
push
jb
stos
dec
add
add
cmp
add
clc
dec
insb
ror
movsb
mov
xchg
test
movsb
pop
outsl
ljmp
cmpsb
insl
test
push
xchg
pop
or
jg
pop
jl
pushf
xor
cmp
in
inc
mov
jno
test
daa
add
cmpsl
adc
movsl
and
inc
std
negb
ljmp
jbe
hlt
sahf
pop
add
jge
xorb
push
cwtl
dec
or
adc
mov
lret
xchg
out
mov
sbb
cmp
es
mov
inc
pop
inc
cmp
inc
xchg
xor
push
dec
xchg
jo
leave
mov
mov
iret
dec
popa
mov
mov
hlt
out
mov
pop
fidivl
lds
cwtl
addl
rcll
adc
lds
or
push
fldl
push
pusha
test
jl
bound
dec
xor
ret
push
mov
pusha
es
cmc
jnp
jb
push
inc
pop
cmc
push
test
lahf
scas
mov
pop
loope
pop
clc
repz
cld
xor
imul
or
xor
test
mov
stc
inc
pop
pop
fcomps
cmp
popf
stc
pop
lcall
clc
jecxz,pn
pop
or
sbb
out
les
pop
fwait
jle
pop
subb
push
icebp
adc
fstl
pop
aas
hlt
decb
inc
mov
xchg
pop
lret
sbb
lds
das
aad
adc
jmp
into
imul
daa
inc
adc
popf
imulb
pop
sub
lahf
imul
mov
dec
andl
sarl
test
dec
xchg
sub
dec
lret
mov
mov
lods
insl
pop
xchg
hlt
rorb
leave
fdivrp
dec
orb
std
mov
rorl
es
jae
mov
cmp
gs
fbstp
insb
sub
out
pop
cmp
insl
push
fwait
push
int
sub
lret
divb
movswl
pop
xchg
jmp
movsl
xchg
xor
sahf
scas
je
int3
in
or
test
in
jb
sub
in
cmp
ficompl
sbb
call
dec
xchg
mov
aam
sbb
and
mov
pop
mov
test
cmpsl
in
mov
dec
fcomps
rclb
mov
pop
cmpsb
in
sub
mov
int
mov
clc
stos
fsubl
std
add
je
scas
push
dec
push
loop
xchg
pusha
arpl
pop
pusha
add
or
dec
jo
lcall
jnp
xor
cmp
cs
push
mov
pop
aaa
mov
push
int
outsb
repz
lock
cmpsl
orl
pop
insl
push
pop
scas
sbb
and
add
sub
out
fmull
and
repnz
and
mov
mov
jg
cmp
and
popf
xchg
sbb
mov
nop
mov
aas
gs
cli
test
jns
shll
jle
sub
testb
imul
out
mov
stos
adc
hlt
das
or
adc
mov
inc
hlt
sub
pop
lock
pop
adc
mov
shlb
psrlw
enter
push
pusha
inc
dec
fmull
or
inc
sbbb
lods
dec
repz
mov
add
scas
in
lcall
loope
adc
cmpsl
and
xchg
push
mov
add
jns
sub
xchg
in
fcmovnb
jnp
pusha
mov
sahf
xlat
fmul
xor
lcall
divb
cmpsl
icebp
imul
aad
fs
inc
decl
aam
pushf
shl
and
xor
cs
dec
mov
icebp
inc
adc
fiaddl
mov
insl
out
fisubrs
fstps
scas
pop
data16
fs
mov
push
rcrb
rcrl
inc
ljmp
fs
push
out
in
shr
imul
leave
in
mov
ret
inc
mov
jo
push
sti
fwait
mov
arpl
add
imulb
leave
enter
push
mov
jg
or
outsl
rep
sbb
ret
push
jns
leave
cmc
outsl
xor
je
in
and
dec
push
jle
xchg
aam
repnz
popa
fs
dec
cld
jmp
pop
arpl
outsl
inc
jae
fcoml
mov
mov
push
std
int
imul
cmc
out
mov
adc
jno
gs
shrb
jae
es
loop
push
mov
push
pop
push
movl
cmp
xchg
xchg
scas
push
popf
inc
lods
sbb
and
push
fdiv
mov
mov
dec
fimuls
mov
cwtl
stos
mov
cld
repnz
and
jno
data16
cli
in
aas
add
adc
mov
sbb
jmp
add
repz
lahf
mov
popa
cmp
out
je
cs
or
lahf
jge
push
repz
test
into
adc
jno
xchg
out
das
jmp
adc
xchg
fistpl
sbb
sbb
jmp
jb
bound
loop
pop
xchg
xor
xor
lahf
adc
fmuls
fcoml
dec
pusha
add
xlat
sahf
adc
mov
pop
push
sbb
call
push
out
iret
cmp
js
lcall
imul
neg
std
and
std
mov
test
dec
mov
or
jae
cmc
dec
cmp
out
xchg
cld
dec
pop
dec
movsb
aad
xchg
js
arpl
add
jns
sub
or
inc
jne
outsb
mov
mov
imul
in
scas
leave
xlat
sub
jecxz
lret
stos
cs
jmp
dec
enter
push
int
mov
sysexit
xchg
jle
pop
hlt
mov
lret
add
xchg
pushf
orb
sbb
sub
call
lock
sarb
dec
push
lcall
loope
lock
loope
pushf
sbb
addr16
test
mov
iret
mov
mov
sub
sbbb
push
and
test
sub
das
cld
sub
adc
sub
fiadds
xor
sub
cmc
dec
mov
repz
mov
jp
jge
mov
push
mov
pop
test
inc
cmp
pop
jg
push
cmp
mov
test
ja
pop
je
and
mov
xchg
jmp
or
stos
push
push
dec
subb
negl
cwtl
pop
aad
int
or
scas
mov
cmc
push
sbb
mov
mov
and
push
dec
stos
cs
sbb
xchg
je
jbe
int3
dec
push
cld
and
mov
cmc
out
or
rcrl
add
or
pop
bound
jmp
xor
fcompl
pop
aad
popa
rorl
fstps
repz
mov
xor
add
adc
hlt
push
xchg
dec
shlb
push
loop
lahf
adc
insb
pop
dec
sbb
fistps
mov
cmp
pop
in
icebp
mov
fnstsw
jp
data16
test
je
jbe
mov
sub
push
sbb
mov
nop
mov
cmp
int3
rcll
dec
mov
xchg
mov
nop
sbbl
out
mov
push
popa
jnp
inc
int3
movsl
loope
xor
cld
ss
mov
cmp
out
test
mov
pop
and
jbe
xchg
push
inc
cmc
ja
sarl
addr16
jbe
push
outsb
cmpsb
push
out
cmp
add
out
inc
pop
push
es
sub
sbb
sub
lds
jo
push
mov
sbb
les
add
std
in
or
or
out
adc
or
call
pop
lret
mov
or
jnp
leave
ss
int
inc
push
inc
inc
push
pop
push
in
dec
push
out
into
push
or
jecxz
xchg
xchg
sti
in
test
xor
leave
dec
inc
out
lds
xlat
into
xor
lods
jbe
ds
pop
pop
insb
ja
nop
repnz
push
push
add
xor
fstps
pop
insl
out
xchg
push
sub
sub
mov
xchg
ljmp
call
mov
insb
enter
xor
push
roll
dec
bound
in
cld
mov
xor
sub
mulb
jo
mov
in
aas
mov
cmp
insb
fsts
xchg
mov
fists
testb
rorb
adc
sbb
cmpsl
push
imul
and
clc
pop
or
mov
out
les
adc
outsl
call
lahf
cwtd
jo
loope
mov
or
leave
xor
dec
or
push
push
sub
ficoms
inc
std
xchg
fsts
cmp
mov
inc
xor
sbb
sarb
leave
sub
sub
fs
mov
not
and
mov
insb
std
lea
iret
gs
out
cs
sbb
sub
out
mov
hlt
call
dec
stos
mov
dec
sbb
xor
lcall
mov
mulb
add
shl
orb
mov
pushf
mov
add
xchg
stos
inc
leave
add
out
iret
cmp
movb
cli
pop
pop
jb
outsl
test
insl
mov
xlat
adc
or
cmovle
jb
add
fldt
jns
jg
daa
dec
test
cwtl
movsl
sub
cli
pop
cli
jmp
pop
shll
lahf
mov
adc
fcomip
cmp
iret
push
jnp
stos
push
adc
add
mov
xchg
out
or
pop
aam
out
lds
in
lods
sub
push
sbbb
pop
inc
out
or
les
shl
lret
pop
out
pop
jp
sub
shll
push
lret
or
fdivs
mov
lret
stos
push
cmp
mov
sub
ljmp
jae
mov
fnstcw
loopne
xchg
fidivrs
dec
xchg
push
test
mov
or
imul
dec
sti
fadds
stos
sub
movsb
and
rcl
xor
fistps
out
push
adc
stos
out
leave
lods
sbb
pop
sub
int
in
mov
addr16
jl
and
fdivrs
testb
in
mov
fadds
adc
sbb
lock
push
pop
lock
stc
arpl
jno
pop
loop
inc
mov
imul
sub
aas
lds
repz
dec
inc
mov
sub
sub
mov
cmpsb
pop
iret
lcall
xchg
sub
fisubrl
sub
fdivr
dec
fstps
pop
cmpsl
mov
xchg
cmc
inc
outsb
lret
jmp
mov
mov
and
xchg
add
mov
les
cmc
pop
out
cs
jbe
popa
scas
int
loop
shrl
aam
popf
fiadds
add
pusha
testl
lret
jns
xor
aad
pop
mov
adcl
scas
push
pushf
clc
loop
mov
ret
push
mov
and
jne
cltd
inc
pop
filds
or
cltd
arpl
add
adc
dec
add
leave
jns
aam
les
outsl
mov
xor
fcoml
ret
adc
cmp
enter
dec
cli
scas
pop
add
fldcw
pop
inc
les
stos
add
and
jne
in
imul
jnp
mov
jns
sbb
jae
push
cmp
mov
ret
iret
jne
mov
xchg
inc
jp
jne
mov
adc
or
aaa
or
rcl
mov
sti
push
cmp
cs
push
mov
dec
push
movsb
push
mov
popa
jl
mov
jb
xlat
add
cmp
mov
cli
bound
add
xor
fdiv
dec
pusha
pop
add
repnz
sbbb
mov
aas
sub
loop
iret
inc
push
push
push
jnp
lahf
adc
push
popa
mov
in
int
cs
sbb
mov
inc
cwtl
add
cltd
repz
dec
lahf
mul
out
pop
xchg
pop
sbb
xor
aad
daa
das
or
subb
lods
xchg
mov
ds
aam
es
mov
pop
cld
hlt
mov
add
and
js
pop
inc
pusha
mov
lods
lret
stos
roll
xchg
mov
dec
and
sbb
roll
cmp
imul
inc
test
xchg
mov
lret
push
cmp
push
mov
lods
xchg
push
dec
lahf
jmp
mov
lcall
inc
repz
mov
push
aas
sub
and
push
cmp
mov
rorb
add
jae
scas
mov
lods
xchg
js
stos
push
add
call
add
jp
jno
add
add
adc
mov
push
aad
in
mov
test
pop
std
or
mov
dec
sub
test
hlt
xchg
cltd
ret
or
mov
xor
push
into
frstor
pop
test
xchg
mov
cmp
fdivrs
mov
lock
cwtl
jae
out
popa
repz
ja
into
mov
aaa
mov
cmp
dec
mov
inc
inc
or
lret
lret
cmp
push
stos
mov
loop
xorl
jecxz
add
hlt
push
ret
scas
insl
cltd
xorb
mov
mov
bound
add
xor
sbb
pop
icebp
ds
or
push
sub
mov
aaa
mov
xlat
jns
sbb
shll
xchg
shrb
and
cwtl
mov
dec
mov
addr16
outsl
lcall
lea
push
loope
sbb
bound
sbb
xchg
push
add
pop
bts
pop
and
or
fs
mov
xchg
sub
cmp
icebp
aaa
mov
lret
arpl
imul
ja
mov
roll
aaa
push
push
jae
xlat
shlb
xchg
and
push
xorb
lock
aaa
add
movsb
ds
les
stos
push
inc
or
pop
xchg
mov
andb
jnp
lods
xchg
or
sbb
push
inc
xchg
in
mov
int3
cmp
pop
aad
or
push
or
push
pop
ds
fcmovbe
or
xlat
sbb
sbb
testb
je
mov
pop
rcll
arpl
scas
or
jo
jl
or
add
cmpsb
aam
pop
cmc
inc
clc
out
mulb
dec
into
hlt
xchg
or
xlat
les
jno
mov
insb
mov
mov
out
sbb
jb
dec
call
iret
in
cmp
fildll
les
js
adc
lea
clc
and
sahf
pop
call
pop
fsubrp
fstl
adc
and
dec
sub
inc
nop
test
pop
loop
push
pusha
in
add
sbb
cltd
inc
sbb
jle
shrb
fadd
cmpsl
push
sarl
jl
mov
leave
add
shll
sub
es
popf
adc
mov
add
inc
adc
or
push
xorps
pusha
xchg
imul
imul
mov
jle
into
outsb
jg
in
jle
test
in
das
pushf
xchg
dec
stos
aaa
cmpsl
shrl
gs
shlb
lock
cmc
xor
leave
hlt
add
ficompl
inc
inc
push
int
sarl
lea
or
xchg
outsl
adc
xor
push
outsb
xchg
inc
or
cwtl
push
filds
dec
das
scas
cmp
xchg
sbb
pop
cld
out
inc
out
xchg
ss
fistpll
mov
into
roll
xor
out
lret
jl
fnsave
gs
push
imul
lahf
cmp
js
mov
adc
fcompl
xchg
enter
push
cmp
push
sbb
test
testl
int
shrl
cmp
dec
jecxz
je
icebp
pop
ss
sahf
adc
lret
test
sub
imul
adc
repnz
notb
mov
test
rorl
mov
stos
fsubrl
lods
pop
aaa
and
jno
scas
test
inc
inc
aad
into
fdivrp
lock
pop
lds
cmpsb
and
push
inc
pop
pop
daa
cmp
add
cmp
scas
mov
aas
mov
xor
out
pop
ljmp
int
icebp
push
into
outsb
cmp
jmp
rolb
inc
sub
lahf
or
incl
int3
sub
mov
and
mov
adc
enter
cli
pop
mov
or
out
test
jne
mov
xchg
mov
pop
bound
sbb
mov
sbb
inc
icebp
sub
and
cmp
out
jae
dec
insb
mov
dec
jne
dec
mov
push
adc
je
sbb
jae
xchg
rcrl
popf
jns
cltd
call
aas
outsb
in
cmp
gs
out
mov
or
push
mov
mov
lods
imul
imul
test
adc
cmp
jo
lods
mov
xor
jo
mov
in
adc
mov
rclb
push
xchg
inc
jg
in
ds
loop
jp
push
pop
bound
adc
andl
movsl
jle
dec
jle
pop
pop
push
adc
sbb
dec
test
dec
into
or
cmp
inc
lds
adc
xor
pop
fdivl
sub
pop
mov
js
push
mov
sbb
push
mov
aam
xchg
mov
jbe
push
out
jns
cmp
mov
cwtl
and
test
jle,pn
mov
sub
gs
cmp
loope
xor
mov
mov
imul
inc
call
push
mov
js
icebp
fsqrt
shl
shlb
repz
mov
and
xchg
insl
or
adc
aam
icebp
cmp
out
insl
aam
pop
dec
scas
aam
sahf
ja
sub
pop
sbb
xor
and
test
mov
mov
imul
lcall
cltd
mov
sbb
outsb
ret
jne
jg
ljmp
lret
std
push
lds
js
stos
mov
add
mov
pop
pop
xor
xor
fimull
fs
movsb
mov
fiadds
inc
es
adc
mov
jo
jo,pt
ds
rorb
out
mov
cmp
or
push
lret
imul
mov
fidivl
xchg
ficoml
mov
or
or
add
fwait
lea
sbb
cld
or
xchg
insb
mov
jle
sbb
push
xchg
mov
pusha
pushf
mov
xor
or
sbb
pop
xor
lock
mov
dec
fisttps
adc
fmul
sub
bound
pop
push
push
pusha
xor
xchg
andl
cmp
mov
add
int3
and
dec
repz
int
mov
daa
sbb
mov
push
jns
or
sbb
cmp
int
data16
les
std
push
push
negb
insl
and
mov
in
cmp
add
loope
or
les
ficoms
test
and
scas
cld
push
mov
sub
in
jns
pop
stos
subl
shlb
mov
fidivrs
sub
mov
aaa
movsl
inc
sahf
and
popf
daa
cmpsb
inc
sub
lods
push
out
xchg
mov
inc
fisubl
sti
dec
jns
xchg
mov
adc
or
repz
or
push
orb
xor
xor
jae
and
cmp
mov
into
ret
mov
sub
movsl
imul
add
pop
xchg
mov
lahf
sti
sub
mov
jmp
mov
xchg
daa
mov
mov
push
mov
push
cmc
mov
cmp
neg
ljmp
clc
fbld
subl
aad
lea
dec
in
fsts
nop
pusha
iret
pop
ds
jecxz
cmp
and
pushf
nop
mov
mov
data16
pop
sbb
insl
mov
int3
add
sub
repz
mov
adc
cwtl
cmp
cmpsb
or
add
in
jmp
ror
sahf
int3
jnp
rolb
idivb
cmp
insl
push
rol
mov
cmp
add
fldenv
roll
into
cmp
out
adc
xchg
movsl
push
movsl
add
cmp
sub
lret
ss
xlat
jmp
mov
sbb
les
mov
mov
in
aad
and
jp
xchg
adc
shrb
inc
es
jno
push
repnz
mov
aas
push
xchg
push
inc
pop
movsl
cmp
xchg
xchg
es
sbb
cmp
push
setp
mov
fwait
imul
aas
and
lods
dec
mov
dec
sub
lret
imul
test
test
lret
stos
cmc
call
lods
push
push
js
outsb
fwait
movsl
fnstenv
mov
push
mov
call
xor
adc
mov
mov
pop
subl
pop
push
mov
jp
icebp
ja
mov
and
fwait
notb
adc
fucomip
incb
push
scas
mov
xchg
repz
and
lret
cs
test
sub
pop
adc
mov
mov
xlat
lcall
leave
push
sub
or
or
inc
loopne
js
pop
add
fcomps
sbb
aam
inc
add
lcall
pop
std
sbb
sbbl
sbb
daa
test
cld
sub
repz
jl
aad
cmpl
in
roll
mov
add
imul
push
or
lds
js
pop
and
cmp
sbb
dec
jae
inc
lahf
decb
push
leave
dec
sbb
inc
dec
enter
and
dec
sub
jmp
pop
pop
mov
jne
mov
xor
xor
dec
pop
mov
sbb
daa
fstps
sbb
lret
dec
xchg
cmp
popl
cltd
add
aam
mulb
fbld
sub
xchg
jl
and
dec
jmp
or
mov
sub
es
insl
popa
shl
push
mov
pop
mov
and
stc
lret
sbb
xor
stos
ret
sti
xor
mov
sarl
mov
or
push
adc
xlat
pop
mov
iret
stos
and
and
call
mov
call
nop
jmp
in
mov
lcall
popa
pop
and
mov
dec
aad
jmp
lret
xchg
pop
rcr
or
js
jne
gs
push
addr16
test
mov
jge
cmp
mov
mov
inc
mov
push
push
fucomip
sub
dec
pop
inc
push
xlat
inc
movb
jo
push
fwait
mov
pushf
out
push
stos
and
repnz
movsb
push
sub
inc
arpl
fsubl
xchg
pop
sub
lock
mov
push
loopne
xchg
jne
fisttps
sub
out
stc
mov
sbb
test
insb
push
mov
push
xchg
lcall
cmp
cmp
or
in
mov
arpl
mov
nop
sbb
pop
jo
insb
xorb
cmpsl
cmp
push
mov
push
pop
cld
pop
adc
push
fstpt
and
iret
push
sub
mov
aaa
dec
lahf
inc
aas
fisubl
dec
inc
mov
or
popa
mov
sarb
mov
cmp
mov
mov
daa
dec
and
mov
jl
int
inc
add
loope
sbb
lret
sti
test
stc
outsb
xor
loop
adc
iret
lret
loopne
jle
mov
shrl
out
out
dec
mov
xchg
and
pop
jae
repnz
int
mov
scas
xchg
pop
push
repnz
adc
and
into
and
ss
shll
sbb
mov
or
das
loop
pop
inc
xchg
addl
jo
push
jbe
es
das
mov
repnz
sub
push
push
jo
xor
mov
or
sub
pusha
jmp
js
sub
cmp
mov
lock
adc
cwtl
inc
fs
cmp
xchg
fwait
mov
mov
push
inc
xor
mov
mov
das
popf
cmc
inc
pop
jae
bnd
mov
adc
xchg
xor
or
inc
mov
fstp
pop
mov
and
cli
loopne
push
add
int
pusha
cmp
push
jge
fstps
cli
mov
in
push
out
aam
arpl
lods
mov
js
push
xor
adc
gs
dec
mov
icebp
inc
nop
mov
xchg
in
pop
pop
fistl
adc
mov
cmp
lods
add
add
fdivr
into
pop
jb
pop
mov
dec
aam
mov
shlb
lahf
or
lock
inc
daa
cmp
xchg
cmpsl
sbbl
xorl
fisubrl
sarb
ss
scas
jo
push
dec
mov
xlat
hlt
or
out
fisttps
jmp
xor
push
setbe
jns
dec
shrb
lahf
js
aad
scas
icebp
sahf
dec
pop
insl
outsb
adc
add
jbe
loopne
inc
in
and
inc
cmp
xor
cmp
add
add
mov
sub
sub
sub
sub
lods
xchg
repz
pop
push
data16
and
jbe
movsl
shl
push
repz
pop
push
inc
or
cmpsb
xchg
mov
jle
std
and
mov
xor
sbb
imul
adc
dec
les
cmp
sti
xor
ret
inc
add
fistps
outsl
sub
cmp
jmp
scas
pop
push
xor
test
xchg
sub
ds
fadds
insb
jb
xchg
fstpt
repnz
fnstcw
adc
cltd
lds
negl
test
inc
mov
shrl
outsl
ret
sbb
cwtl
jnp
or
fidivl
and
mov
jbe
mov
stc
push
pop
std
jnp
xor
xchg
pop
jnp
fxam
popa
mov
jo
mov
jp
and
lret
fisttpl
sbb
cld
xchg
pushf
in
sub
int3
inc
sub
bound
adc
push
loope
gs
loopne
mov
or
and
into
js
cmpb
mov
xchg
fsubs
fimuls
aam
push
or
inc
gs
js
cld
or
repz
dec
movsb
mov
jp
jecxz
mov
les
mov
pop
jo
movsb
arpl
jb
test
movsl
call
jp
cmp
mov
xchg
sbb
mov
aam
cmp
stos
scas
jnp
ficoms
mov
mov
roll
shl
inc
and
sahf
xchg
cmc
push
clc
notb
xchg
push
inc
jb
cmp
cmp
xor
shr
xchg
fcom
jo
addl
stc
cmp
lret
jnp
movsl
mov
sub
fwait
ss
mov
push
popl
popl
cmp
psadbw
pop
shll
mov
dec
adc
mov
or
mov
jnp
hlt
mov
sbb
or
add
sub
mov
fmull
iret
or
adc
pop
cli
test
mov
cltd
push
ficoml
mov
pop
adc
icebp
push
inc
lahf
hlt
jge
xor
out
add
scas
add
xchg
dec
aad
nop
inc
dec
inc
add
mov
in
mov
adc
pop
push
mov
aas
inc
sub
aaa
add
imul
adc
in
scas
xor
jbe
imul
jne
sub
inc
jae
test
xchg
cmpb
mov
or
xor
xor
jg
call
jp
pop
dec
out
loopne
add
pusha
les
ret
inc
inc
scas
fistpll
ss
xor
pop
addr16
cmp
lods
repz
adc
outsl
xlat
add
pop
jne
es
add
inc
fsts
popf
repnz
pop
and
cs
cmpsb
push
sub
scas
setb
sbb
mov
dec
das
insl
int3
mov
push
mov
push
shrl
lcall
addb
out
mov
popf
pop
mov
mov
lcall
arpl
loop
adc
inc
ss
jns
mov
push
xchg
jnp
push
pusha
add
cmpsl
push
scas
int
sbb
fisttps
fstpt
lea
mov
and
pop
mov
sbb
loope
enter
decb
stc
mov
add
sbb
push
mov
imull
stos
pop
dec
xor
dec
test
shl
loopne
mov
pop
xor
sbb
popf
mov
mov
mov
inc
fisubs
push
pop
cli
push
jne
and
mov
vphaddwd
sub
gs
adc
xchg
xchg
mov
sbb
add
jne
pop
xchg
dec
push
mov
dec
mov
sub
sub
sub
pop
test
jl
outsl
fstps
aaa
leave
xchg
negl
scas
out
push
add
and
cmp
jle
add
xor
mov
sbb
xchg
mov
push
mov
xchg
cmp
scas
jecxz
pop
mov
pop
cmp
fwait
sub
ljmp
inc
add
and
adc
lods
std
das
inc
lret
push
pop
or
fldlg2
dec
pushl
loop
out
jl
pop
rcrl
lahf
stos
loope
dec
push
inc
push
jge
add
nop
loope
shlb
jg
lea
and
jle
lock
das
ffree
sub
popa
adc
push
rcl
dec
movsb
clc
sbb
ljmp
sub
movsb
out
xor
cmp
pusha
popa
ret
sub
scas
fwait
mov
iret
out
popa
pop
and
aaa
xor
loop
xchg
in
jo
call
mov
out
lahf
int
xor
pop
jp
cmp
movsb
dec
dec
xor
outsl
arpl
adc
popf
push
iret
int3
lea
out
mov
mov
add
fildl
rcrl
xchg
iret
push
gs
icebp
mov
jne
popf
in
fcos
out
jne
xor
pop
cmp
inc
push
jl
ret
sub
pop
mov
jp
sub
dec
adc
ror
mov
jnp
movsl
leave
pop
cmpsl
cmc
sub
mov
in
push
mov
lea
inc
cmpsl
sbb
mov
add
dec
cmpsb
jp
dec
pop
lcall
fbstp
sahf
sub
imul
jge
jmp
mov
pop
mov
and
fdivs
divl
insl
jg
jb
arpl
push
loop
mov
cmp
mov
sti
pop
adc
call
cwtl
stc
jmp
mov
sub
pop
push
test
push
ja
cmp
scas
inc
sbb
xor
inc
adc
sti
lock
jbe
sub
decb
lcall
or
pusha
imul
sti
inc
or
rcrl
enter
fisubrs
xchg
in
cltd
push
enter
or
aaa
es
adc
sub
add
aad
xor
nop
add
mov
mov
jne
es
roll
mov
jmp
lods
in
cmp
aad
cmpsl
push
jo
dec
movsb
mov
mov
cmp
aas
adc
xchg
sub
insb
cs
addl
mov
in
pop
outsb
pop
inc
inc
add
adc
insb
in
jnp
repz
sahf
pusha
aas
mov
mov
je
sbb
adc
jge
inc
mov
and
ss
jae
inc
sbb
imul
pop
mov
xchg
adc
fists
ret
lahf
fiadds
xor
dec
popa
fwait
sbb
inc
popl
pop
sbb
fbstp
inc
jecxz
lcall
or
ftst
mov
adc
pop
adc
pop
sbb
sub
test
sbb
cmpsb
mov
sbbl
push
xchg
lods
rcrb
push
xor
adc
add
sbb
jb
iret
jnp
and
pop
fwait
push
in
cmp
mov
xor
jb
imul
xchg
jle
test
loop
or
add
pop
in
jle
lcall
mov
test
dec
pop
aad
jl
pushf
xor
push
cmc
jbe
aam
cld
addr16
jo
or
inc
mov
push
push
jo
inc
stc
add
cmp
std
add
ja
and
or
rclb
out
notb
add
insb
push
add
sahf
aad
or
push
addr16
mov
sub
dec
jecxz
push
xor
aaa
mov
or
loop
jmp
es
popa
add
dec
push
aam
pop
fsubl
push
enter
inc
mov
pop
and
fidivrs
lret
lret
pop
roll
mov
push
xorb
std
stos
mov
test
and
add
push
outsb
jb
mov
popa
pusha
loop
dec
xchg
rorl
lods
sbb
shll
or
xor
cmp
jmp
imull
popa
in
daa
adc
mov
push
mov
shll
adc
cmpsl
fwait
cwtl
push
ret
push
outsl
cmpsl
xchg
cmp
scas
out
push
adc
jmp
xor
imul
sbb
mov
push
std
adc
pop
jge
and
push
jne
movsb
sbb
subb
adc
dec
or
roll
mov
or
adc
add
bound
cmp
push
popa
int3
fwait
stc
outsb
add
mov
jne
xchg
mov
cmpsl
test
aam
dec
or
push
cmovns
arpl
cmp
mov
cmpsl
test
mov
shll
dec
clc
push
aaa
imul
adc
or
lret
mov
add
and
adc
pop
roll
inc
je
inc
lds
call
xchg
imul
or
pop
scas
cmp
daa
dec
jle
xchg
cmpsl
and
dec
cli
gs
lahf
in
imul
push
int3
mov
int
inc
rcr
mov
mov
call
mov
adc
add
into
shrb
mov
mov
cmp
push
mov
leave
cltd
stc
mov
dec
sbb
inc
leave
stos
xchg
adc
adc
out
and
test
mov
mov
pop
mov
jl
out
jl
sbb
call
shrl
pop
mov
inc
pop
xor
iret
pop
inc
loope
cltd
jno
mov
ss
sbb
or
inc
pop
and
mov
inc
xchg
push
je
iret
inc
adc
lods
int
test
cld
jns
and
mov
inc
clc
pushf
pop
xor
aaa
or
lcall
jne
cmpl
pop
mov
cmc
sbb
push
int3
sbb
xor
pusha
adc
daa
and
in
addr16
icebp
xor
mov
fistpl
mov
shlb
fcoml
and
pop
and
pop
fwait
xor
pusha
pop
imul
incb
push
js
sub
push
push
lahf
sub
mov
fs
roll
scas
jl
roll
cmc
dec
mov
xchg
dec
mov
popf
cs
mov
dec
mov
sub
das
xchg
or
int3
inc
and
sbb
insb
mov
or
int3
xchg
inc
dec
incb
daa
jl
adc
xor
testb
int
js
je
pop
add
push
fldenv
mov
lods
loopne
popa
dec
push
mov
pop
repz
fs
mov
sahf
pop
in
fisttps
mov
push
int
adc
dec
push
xor
mov
dec
pop
repnz
push
icebp
cmc
loopne
mov
out
inc
hlt
cmp
push
mov
adcb
mov
mov
jge
mov
in
cs
leave
and
sbb
dec
icebp
aas
push
dec
mov
pop
mov
mov
push
fsubrs
rol
data16
pop
and
outsl
xchg
fidivrl
push
sbb
in
mulb
rol
loop
mov
addl
mov
push
div
push
ja
in
ficomps
mov
outsb
or
sub
pop
or
cmp
sub
lea
cmpb
sub
mov
inc
sbb
imul
outsb
mov
lcall
sbb
repnz
ja
test
fnstcw
sahf
lds
inc
pop
sbb
sarb
cmp
subl
dec
dec
outsl
fsubrs
cltd
pop
pop
ror
sbb
hlt
jge
xor
pop
fs
aam
out
lds
or
fisubs
test
out
add
push
fnstenv
icebp
cmpsb
and
into
jecxz
outsb
inc
lret
inc
mov
pop
mov
mov
jb
roll
shl
in
mov
in
jae
lret
mov
test
icebp
mov
or
pop
fldenv
rolb
cs
fsts
lea
loope
sbb
scas
data16
push
aaa
fsubl
ds
or
ret
dec
loope
fsubs
hlt
fsubrl
inc
fidivrl
fsubrs
mov
and
adc
sbb
clc
jle
jne
je
inc
sbb
cmp
inc
imull
loopne
push
and
lret
xchg
xchg
adcl
test
mov
sti
mov
push
stos
add
mov
cld
push
push
stos
lods
scas
data16
cmp
sti
out
and
sub
xchg
adc
loopne
insb
add
mov
sbb
push
and
in
push
cs
mov
sub
in
in
sub
sbb
insl
and
push
mov
inc
mov
mov
loopne
dec
nop
bound
or
mov
push
pop
pop
fcmovb
xchg
scas
loop
mov
fdivl
out
stc
cmc
mov
pop
xlat
or
into
movsb
mov
or
or
repz
subl
lock
pop
out
pushl
js
hlt
adc
insl
fisubrs
loopne
loop
jecxz
add
ds
fldcw
or
mov
mov
lret
fistl
inc
cli
add
sbb
in
jbe
sbb
push
mov
lret
pusha
inc
jmp
popf
add
imul
xor
add
adc
adcb
shll
sbb
jle
fwait
or
fld
mov
sub
ljmp
out
cmpsb
jns
push
rolb
loopne
stc
xchg
int3
xchg
dec
mov
or
lret
std
xchg
test
test
pop
sbb
push
ljmp
lock
std
mov
sub
push
sti
and
leave
xchg
mov
xor
loope
aad
data16
pop
dec
pop
adc
daa
lods
adc
lods
push
call
lods
inc
add
aam
out
pop
in
xorl
cmp
in
xchg
repnz
mov
std
loop
adc
xchg
bound
xchg
sbb
imul
gs
jge
icebp
xor
pmaddwd
data16
inc
jp
aad
push
xchg
inc
sub
stos
fisttps
inc
aaa
jl
imul
jecxz
or
pop
shlb
inc
loop
cmpsl
js
xchg
pusha
test
pop
aam
jp
cmp
leave
push
negb
cwtl
and
cmp
mov
sub
xor
jecxz
push
cmpsl
stos
jae
std
sub
jae
inc
inc
test
test
loopne
arpl
lret
lahf
mov
stc
lahf
add
xor
insb
loop
aad
xchg
push
ja
shl
sahf
mull
jge
sbb
test
movsb
mov
dec
mulb
mov
aad
rcl
sub
lcall
push
sbb
push
sub
cmp
movsl
movsl
mov
mov
cmp
add
cwtl
pop
hlt
call
jle
divl
xchg
pop
insl
mov
mov
aad
outsb
xchg
je
mov
sub
lcall
movzwl
sub
in
or
inc
fs
inc
lods
test
in
xor
aad
movl
lods
aad
cmp
cmp
hlt
mov
sahf
cmc
pushf
and
insl
xchg
mov
mov
js
loope
sti
push
addr16
dec
push
cld
pushf
ret
or
pop
sahf
psadbw
mov
js
mov
add
inc
and
inc
xor
imul
push
push
loope
ret
rol
mov
nop
jb
pop
push
jno
jmp
jg
ljmp
adc
xor
sbb
cmpsb
das
hlt
mov
push
movsb
or
ja
pop
int3
cmp
cmp
fiadds
mov
inc
test
mov
lahf
jno
shl
xor
repz
fidivrs
lret
jnp
dec
movl
lods
push
sbb
push
scas
mov
xchg
in
jo
notl
mov
mov
pop
xchg
push
pop
dec
adc
inc
xchg
outsb
shl
stos
jg
xchg
ret
test
bnd
jne
jns
pushl
adc
in
cmp
in
loope
and
xor
lods
cmp
dec
sarl
jmp
cltd
xchg
pop
or
xchg
jnp
mov
or
or
jne
mov
insb
add
dec
call
mov
xchg
sti
stos
dec
mov
pusha
mov
inc
pop
mov
or
dec
fidivs
mov
and
jecxz
enter
adc
and
mov
jg
jo
icebp
mov
mov
fbstp
mull
stos
stc
mov
aam
iret
movsb
faddp
fisttps
stos
popa
test
movsl
push
inc
in
in
xchg
imul
das
xchg
xor
in
lds
ret
cmp
sbb
fdivrs
push
xor
pop
enter
divl
in
gs
pop
xor
mov
pop
inc
imul
cmpsl
popa
loop
not
pop
cs
imulb
in
xlat
lods
mov
mov
clc
cmp
clc
frstor
push
jae
rcll
roll
inc
imul
adc
xchg
xor
xor
imul
cmp
imul
mov
pop
xor
cmp
std
mov
push
pop
adc
xchg
dec
push
insl
xor
pop
xor
movsl
cli
lcall
xor
xor
and
xor
sub
add
mov
test
outsb
push
inc
push
mov
add
xchg
sbb
aad
sarb
icebp
aad
sbb
daa
shrb
je
inc
dec
sub
js
fists
test
push
and
sub
sub
push
or
cmp
pop
lahf
lods
sub
adc
repnz
dec
movb
jmp
add
cltd
leave
sub
sub
daa
push
lods
jae
lcall
dec
mov
jbe
fdivl
rcrb
cmp
dec
sar
je
stc
xchg
push
insl
jg
or
inc
fnstsw
ss
push
and
repnz
jo
and
fiadds
mov
mov
inc
inc
test
pop
cli
test
mov
fsubrl
cmp
mov
incb
pushf
lods
repz
das
and
jg
cmp
sbb
inc
xchg
out
imul
fstl
jg
cld
push
xchg
push
test
lods
xor
cs
cmp
push
xor
sub
mov
jp
xchg
jmp
cmp
stos
dec
lds
sbb
scas
lods
mov
scas
fisubrs
xchg
stos
fwait
add
sbb
jns
or
xchg
shl
out
in
ficoms
mov
mov
enter
imul
out
cmpsb
pop
cmp
pop
fstl
nop
lahf
or
ja
xchg
cld
sub
xchg
mov
cmpl
fwait
je
arpl
add
jle
add
mov
call
in
es
or
add
pop
xchg
jo
sbb
leave
lahf
jns
mov
jae
hlt
push
sbb
arpl
mov
movd
test
sysexit
das
xor
nop
fistpl
pushw
enter
dec
pushf
mov
das
mov
stos
inc
xor
xor
push
and
mull
add
sbb
inc
push
cld
adc
sbbb
push
clc
jno
push
inc
mov
addr16
leave
push
mov
mov
fs
test
aas
bsf
sbb
in
inc
subb
decb
cld
jne
pop
sbb
outsb
shrb
jl
jno
das
adc
mov
sub
je
loopne
push
adc
xchg
out
cli
icebp
jmp
aaa
cld
cltd
push
inc
arpl
test
or
mov
jae
out
in
and
popf
or
loopne
inc
sti
cwtl
jb
rcrb
dec
addr16
sbbl
shlb
ret
lea
mov
or
adc
out
insl
cmp
sbb
test
int
fucomi
test
stos
ljmp
movsb
mov
imul
cmpsb
add
cltd
adc
pop
lahf
mov
dec
xor
xor
notl
cmp
xor
out
push
xor
pop
testb
sub
dec
mov
pushf
xchg
pop
in
fs
js
push
daa
dec
or
jns
xor
dec
dec
xor
add
mov
cmp
sbb
sbb
fs
push
xor
pop
jle
jge
and
add
fnstsw
lods
fsub
pusha
or
out
int3
rcrb
xchg
ret
jae
xchg
aam
iret
ret
test
and
movsb
mov
push
lds
lcall
push
or
jnp
insl
xor
add
sahf
ds
push
sti
pusha
insb
insl
inc
mov
mov
scas
push
mov
inc
out
mov
loopne
xchg
rol
cmp
xor
mov
dec
pop
repz
mov
rorb
mov
lds
xor
fiaddl
dec
inc
ljmp
pop
imull
sub
xrelease
mov
jo
pop
add
push
mov
out
pop
push
dec
xor
aaa
lret
loopne
mov
pusha
je
pop
into
xchg
xor
mov
sarb
or
test
inc
sti
pop
adc
mov
cmp
push
out
xor
inc
xor
rcl
data16
cmp
scas
sbb
push
inc
icebp
outsl
in
dec
outsb
xchg
dec
jmp
jp
or
mov
mov
adc
repz
lock
int
jns
ja
je
cmpsl
sarb
add
inc
lock
out
bound
shlb
mov
insb
ret
test
mov
stc
jno
rclb
xchg
std
imull
bound
aas
fldl
nop
negl
cmp
pop
repnz
clc
push
xor
daa
or
mov
mov
aam
mov
fadds
ss
sti
xchg
and
sbb
add
sbb
fstpl
es
fdivs
shl
xchg
xor
aam
sbb
lcall
fbstp
mov
dec
jge
divb
add
imul
fs
push
int
in
test
mov
ret
std
aas
xchg
repnz
push
sbb
mov
sar
bound
sub
imul
adc
inc
pop
mov
xlat
xor
gs
xor
xchg
test
fucomp
xlat
dec
movsl
inc
mulb
mov
loop
xchg
pusha
pop
cmp
sbb
mov
sbb
aas
or
scas
mov
out
or
ds
ret
cmp
lahf
xor
shrb
cmp
mov
int3
mov
in
push
cld
push
push
out
stos
loope
add
cmp
movsl
xor
pop
push
dec
adc
into
xchg
and
mov
imul
mov
insl
shl
xor
jne
in
pop
jo
push
dec
jl
sbb
mov
outsb
inc
call
int3
ja
dec
push
mov
cmpb
and
cmpsb
xor
retw
mulb
ret
pop
in
mov
pushf
push
mov
push
cltd
pop
inc
and
pop
pop
dec
lea
loope
or
hlt
mov
sbb
and
lea
std
shll
test
addr16
unpcklps
int3
cmpsb
mov
and
out
adc
or
xchg
je
loope
jl
cwtl
test
xor
inc
lcall
mov
or
lods
pusha
shlb
xchg
scas
mov
in
push
inc
fwait
aas
int
int3
or
ja
jo
add
add
ljmp
movsb
or
mov
insb
int
ss
pop
imul
jnp
sub
mov
rorl
bound
xchg
outsb
pop
jnp
enter
incl
jo
jp
insb
les
pop
imul
inc
or
add
jb
sbb
out
inc
mov
dec
gs
dec
fwait
jle
scas
cmp
lret
das
lret
aad
jbe
aad
lcall
sbb
jge
cmp
loope
sbb
xchg
jnp
out
testl
jg
sub
mov
out
push
fbstp
test
movsl
dec
fisttps
in
jo
add
aam
popa
imul
es
xchg
and
or
push
lret
cld
pop
mov
xchg
mov
jle
xorl
sub
jmp
into
xlat
add
xchg
xchg
add
sbb
flds
jo
pop
jp
and
aaa
enter
sbb
push
cmp
fbld
and
imul
cltd
sub
test
scas
xchg
or
sub
cmp
push
dec
loope
daa
sbb
dec
orb
mov
aam
cmc
ficoml
xor
inc
loope
imul
out
pop
inc
xchg
xchg
js
aas
lock
xchg
push
loopne
push
jno
shlb
stos
sub
add
test
std
jmp
fisubrl
jb
cmp
mov
mov
mov
sahf
aaa
lret
sbb
out
mov
imul
outsb
cmp
icebp
or
push
out
lret
inc
lods
or
dec
push
stos
sub
mov
test
mov
cmp
scas
pop
xchg
jbe
lds
xchg
je
in
mov
push
and
int
push
cmc
shll
xchg
shll
jmp
out
cltd
ja
adc
push
lret
mov
dec
jmp
cmp
rcrb
scas
mov
movb
mov
in
pop
insl
push
cmp
jnp
int3
adc
inc
jae
aad
lret
sub
dec
in
mov
leave
imul
cld
sahf
sbb
mov
dec
mov
cmp
or
sbb
inc
fcomps
aad
sbb
and
xchg
aas
daa
cmp
in
loopne
add
nop
fildll
popa
or
cmc
inc
fdivr
js
or
fidivrl
stos
add
in
out
popf
mov
adc
push
outsb
add
sbb
jl
pop
arpl
scas
sarb
push
decb
outsb
in
xchg
dec
cmp
cs
push
dec
and
inc
mov
ficoml
cmp
add
mov
xlat
testb
shl
inc
dec
push
push
or
lea
jbe
inc
push
fidivs
dec
mov
shrl
out
mov
int3
cmp
aaa
mov
inc
std
sbb
cmp
xor
jp
adc
shll
jb
mov
fildl
dec
add
clc
and
sbb
jp
push
repz
pop
inc
out
mov
add
xchg
add
test
or
adc
iret
cmp
cltd
push
mov
dec
arpl
jmp
pusha
inc
fsub
iret
insb
out
pop
pop
nop
pop
pop
out
cmovs
push
jge
fs
adc
leave
jg
adc
sbb
test
inc
inc
mov
inc
ja
sub
aad
call
repz
popa
sbb
add
mov
sub
fnsave
movaps
pop
xlat
arpl
xchg
sbb
inc
cmpsl
rcrb
jns
xor
pop
sub
xor
and
int3
sbb
ljmp
fstps
pop
cmp
ficomps
aas
cwtl
popa
inc
xchg
out
push
adc
jbe
jmp
outsb
or
subb
pop
or
test
in
adc
xchg
sub
das
aad
add
enter
push
js
add
dec
xchg
mov
push
es
js
cwtl
in
lds
or
cmp
push
shll
cmpsl
or
pop
lret
fiadds
mov
cmpsb
adc
mov
shrl
cmp
pusha
jp
and
out
sub
push
fstpt
jbe
addr16
xchg
std
add
jg
ds
mov
cmp
mov
outsl
data16
shr
aad
mulb
nop
push
loopne
inc
pop
xchg
sub
sbb
jge
sbb
lahf
sbb
jbe
lea
sbb
xchg
enter
call
cli
movsl
xchg
ja
dec
into
jmp
pop
jmp
bound
inc
or
pop
bound
adc
loopne
jbe
icebp
jp
lods
sbb
mov
sbb
push
add
in
pop
push
out
cmc
xor
ret
lds
or
xchg
inc
mov
jl
test
repnz
lods
out
mov
inc
sbb
and
mov
icebp
sbb
jp
push
fisubl
nop
fucom
addr16
dec
push
iret
xchg
add
cmpsl
and
sbb
data16
sbb
addl
cmc
imul
sbb
rol
inc
mov
push
jp
and
mov
insb
push
mov
out
cmp
in
lret
mov
aas
cmp
dec
int3
movsb
jg
jns
sub
pop
lcall
push
scas
push
int3
mov
sub
sbb
loopne
pop
aaa
xchg
outsb
dec
pusha
sarl
mov
cltd
and
jmp
clc
js
cltd
dec
cli
lret
xchg
sbb
sahf
and
push
cmp
cmp
pushf
mov
mov
jl
imul
insl
fdivrs
push
cmp
lret
popf
pusha
pusha
cmpsb
sbb
shlb
dec
loop
cmpl
inc
xor
lret
sbb
sarb
lock
xchg
stos
lret
in
mov
and
jge
test
orl
inc
bound
jb
pop
leave
dec
inc
pop
das
lahf
mov
rcrl
ja
fs
sub
movl
clc
lret
cltd
push
push
mov
dec
jge
pop
inc
addl
mov
das
sahf
pushf
cmp
loopne
pop
rcll
and
push
sahf
sub
jno
and
pushl
and
jb
shrb
mov
mov
loop
out
push
dec
dec
dec
loope
stos
sub
sub
xor
rcr
push
repz
pop
add
cmp
sub
or
sbb
popf
jb
pop
dec
nop
mov
shll
jge
mov
imul
sub
inc
call
int
scas
mov
fldenv
stos
fistps
mov
lock
pop
adc
mov
inc
xchg
ret
imul
mov
cs
add
jno
mov
mov
je
mov
xchg
push
rclb
mov
movsl
add
negb
xor
xchg
xor
loopne
out
cmp
enter
pop
or
push
outsl
in
out
mov
cmp
mov
or
fadd
enter
ja
add
inc
pushf
gs
nop
pushf
add
or
xlat
cs
imul
les
mov
cmp
cmp
jno
cmp
mov
xchg
cmp
cwtl
xor
hlt
adc
push
lret
nop
xorl
aad
das
sub
jne
push
repz
popa
inc
mov
dec
int3
sbb
cmp
xor
mov
fmul
and
cs
loopne
int
hlt
sbb
ror
movsl
mov
out
loop
in
push
mulb
jbe
clc
cmp
js
push
leave
daa
sub
cmpsb
insl
xchg
test
or
les
jg
imull
popa
push
hlt
mov
into
mov
pop
dec
mov
ja
leave
sbb
mov
aam
je
cmp
inc
sbb
cmpsl
cmp
push
ja
aas
push
mov
rclb
test
subl
rorb
rolb
dec
jmp
xor
andb
shrl
mov
stos
sub
pop
pusha
jns
mov
cmp
jb
loop
cmp
cmpsl
ror
fsubr
ror
add
lret
daa
in
ja
xchg
jmp
mov
ror
out
je
cmp
leave
pop
fbstp
or
js
outsl
mov
fdivs
out
out
sbb
repz
and
dec
mov
repz
bound
adcb
push
sbb
adc
je
mov
rcl
jmp
mov
xchg
and
mov
psubusw
push
shll
mov
push
scas
and
aam
or
out
add
bound
xor
cmc
mov
mov
shr
mov
or
repnz
cmp
stos
cmp
inc
sbb
clc
pop
fcomps
leave
aad
loopne
and
out
hlt
scas
sub
sbb
pop
and
cltd
pop
mov
fwait
push
daa
aas
rorl
xchg
fistps
divl
lock
mov
pop
mov
sub
jb
or
adc
les
lahf
sti
push
les
movsb
sub
fninit
jmp
mov
xchg
mov
mov
sbb
fwait
test
pop
shrl
jnp
jecxz
sti
int
ljmp
pop
fwait
cmp
fadds
or
fmull
xchg
push
mov
ss
and
xlat
xor
xchg
outsl
cmc
jb
mov
aas
sub
sub
inc
cmp
movups
cmp
fnstcw
sti
les
call
std
pop
pushf
jg
shl
lahf
inc
push
clc
and
imul
add
inc
mov
repnz
mov
jb
add
arpl
xchg
pusha
sbb
aad
negl
aaa
rorl
popl
sbb
pop
mov
xor
and
lock
push
or
inc
pop
test
in
add
pop
mov
fisttpll
stos
xchg
icebp
jp
lret
or
scas
stos
mov
in
xor
leave
or
cmp
mov
inc
cmpsb
ja
adc
mov
jmp
stos
push
inc
or
test
cmp
sub
outsl
and
fisubrl
sub
call
or
adc
out
fsubrs
and
jp
or
and
divl
int3
addr16
xor
lret
add
dec
jp
ret
jle
and
dec
aas
sahf
ds
jg
shr
stos
push
cmp
dec
stos
cli
dec
gs
icebp
pop
je
dec
mov
xchg
pop
and
xchg
xor
movsb
popa
lea
lcall
push
pop
mov
test
xchg
fwait
push
jnp
stos
rol
dec
cwtl
inc
cs
push
mov
jle
add
jle
repz
add
std
push
or
xor
shrl
and
cmc
rcrl
jns
mov
push
ror
rcl
lahf
pushl
push
cwtl
and
sub
mov
xchg
push
add
and
jns
lock
cmp
sub
loop
ficompl
imul
push
pop
pop
dec
jge
in
xor
cltd
ljmp
js
or
imul
mov
arpl
andb
pop
leave
sub
lret
sub
cmp
scas
push
xchg
test
push
add
jle
push
push
lods
in
fildll
shr
dec
daa
and
cmp
fdivrs
mov
add
add
popf
mov
fiaddl
inc
fcmovnu
push
cmpsb
sub
adc
or
arpl
sub
inc
std
jnp
mov
cmp
xchg
scas
icebp
loope
or
add
popa
mov
pop
cmpsl
cld
nop
sbb
std
clc
jp
sub
rolb
jb
hlt
mov
pop
cmc
pop
xor
xchg
inc
pop
jg
imul
pushf
cmpsl
jns
push
push
repnz
std
xor
scas
jge
pop
sub
lcall
in
xor
pop
inc
aam
push
fnsave
aaa
or
push
and
hlt
or
or
cmp
jp
ds
and
loop
or
and
mov
fstpt
mov
in
insl
addb
jl
cli
jae
mov
mov
mov
inc
lods
movsb
push
inc
jg
mov
repz
std
fs
filds
aaa
int
sbb
mov
dec
cmpsl
insl
repz
pop
jp
add
sbb
fldl
push
jecxz
sbbl
repz
movsl
or
jne
add
jp
cli
lods
je
lahf
pop
aaa
adc
pop
repz
mov
xchg
iret
dec
clc
or
inc
cmpsb
test
dec
and
xchg
das
and
movl
insb
repz
hlt
or
pop
andb
xor
or
imul
mov
repnz
out
jl
pushf
shr
dec
into
add
mov
mov
mov
inc
mov
xchg
sahf
mov
movnti
and
jge
mov
adc
jo
cmp
xchg
aaa
xchg
shl
fcoml
orl
jnp
adc
inc
push
dec
sbb
cmpsl
push
add
cmp
dec
dec
push
add
add
xor
push
pop
popa
adc
add
jnp
or
test
ds
addr16
mov
ficoms
scas
and
xchg
inc
ljmp
cs
dec
xor
pop
push
jo
cmp
fbstp
loope
fnstcw
iret
cmp
pop
icebp
push
mov
dec
mov
mov
lcall
sub
sub
pcmpeqw
fs
add
ja
sbbb
loop
add
leave
into
push
subl
lods
ljmp
outsb
jecxz
imul
decl
movsl
xchg
popf
xor
xchg
lahf
xchg
cmpsl
cmp
fs
fwait
rorb
mov
and
ljmp
add
inc
imul
mov
jge
jns
ja
arpl
mov
lock
fbstp
xchg
xchg
cs
sbb
sbb
dec
inc
ror
xchg
popf
sbb
pop
pop
pop
jg
inc
mov
lahf
sbb
fbld
jecxz
pop
and
outsl
adc
add
inc
mov
inc
fs
jno
xor
mov
jmp
stc
paddusb
mov
scas
and
xor
cli
push
or
call
jle
mov
xchg
or
neg
lahf
fucomi
adc
dec
fdivs
daa
jo
jp
xchg
xchg
cmpsl
lock
lahf
push
dec
jp
pop
incl
and
cmp
ds
xchg
jle
lock
movsl
inc
push
gs
mov
hlt
pusha
fnstenv
inc
and
jg
jne
push
inc
aas
lahf
mov
xchg
jmp
jns
test
ljmp
cmp
ljmp
jcxz
adc
jge
cli
mov
mov
pusha
sarb
xchg
notb
xchg
xchg
xor
inc
popf
adc
sbb
test
std
sbb
mov
push
cmp
out
jbe
sbb
lahf
pop
in
daa
mov
or
push
jae
popf
adc
data16
sbb
mov
jo
push
jmp
rorl
push
xchg
sti
lea
dec
cmp
mov
scas
call
rcll
lods
mov
jo
mov
adc
sbb
imul
add
xchg
fcoms
fsubrl
sti
ret
push
shlb
rol
cwtl
and
enter
push
into
push
and
xchg
push
je
lods
jne
and
cwtl
adc
fdivrl
mov
mov
push
adc
jge
into
mov
cmpsl
push
xor
mov
out
xchg
inc
outsb
push
mov
jne
xor
fs
dec
add
movsl
rcrl
loop
pop
mov
addr16
push
frstor
cmp
mov
dec
sahf
pop
pushf
ljmp
hlt
icebp
ds
inc
icebp
repz
cmp
push
ljmp
sbb
mov
int
adc
push
gs
jle
dec
or
sub
loop
push
mov
push
pop
and
dec
rorb
loope
fldenv
test
or
inc
jno
mov
aad
and
dec
push
imul
add
loop
cli
mov
jne
push
push
sub
ja
dec
dec
loopne
add
stc
fdivs
aaa
dec
insb
mov
and
mov
pushl
mov
repnz
mov
in
addr16
mov
dec
jmp
leave
dec
sbb
sbbb
subl
fcmovnbe
imul
ljmp
je
repnz
inc
add
cmp
or
fisubl
js
push
in
in
pop
aam
into
imul
adc
inc
aam
pop
jb
and
enter
pop
scas
xchg
cld
mov
sub
pop
aam
and
ss
je
dec
jp
fwait
jmpw
je
int3
fmuls
imul
into
lahf
das
xor
xor
mov
xor
sub
outsl
sti
push
loopne
jae
jne
lret
aaa
add
sub
movsb
inc
or
ljmp
sbb
xchg
std
es
xchg
sbbl
xchg
jb
out
pop
loop
arpl
popf
lcall
adc
and
xchg
pop
sahf
mov
add
push
jecxz
xor
sahf
cmp
ret
cltd
mov
inc
loopne
xor
cmc
push
lret
cmc
dec
xor
xchg
ret
push
test
mov
lahf
imul
sbb
lret
aas
mov
add
lret
sub
xchg
test
jecxz
popl
pop
insl
cwtl
cmpb
inc
lock
jae
popa
stc
ror
fists
dec
idivl
enter
mov
jg
mov
mov
jmp
fcmovb
in
das
inc
adc
inc
or
pop
pop
xor
xor
aam
bound
pop
out
and
insl
arpl
pop
jo
dec
sub
rcrb
sub
lods
pop
cwtl
cmp
pop
popf
xor
pop
popa
mul
pop
mov
jmp
pop
sub
sbb
out
mov
ds
int3
cmp
jmp
aas
ret
jne
dec
xchg
inc
lds
mov
cwtl
dec
dec
jg
mov
arpl
pop
loopne
ss
add
mov
shlb
mov
mov
dec
sbb
jge
push
stos
mov
add
popa
mov
loop
pushf
ja
icebp
adc
mov
lahf
mov
popf
test
hlt
jns
mov
or
test
xor
ret
bound
sbb
xchg
repnz
addr16
cwtl
xlat
ja
add
cwtl
sub
dec
add
fwait
xchg
cmc
dec
data16
cmp
xchg
and
shll
xchg
orl
les
jp
fimull
insb
push
or
push
add
adc
and
mov
jp
test
and
jnp
xchg
dec
cwtl
mov
sbb
leave
cmp
jl
or
testb
jecxz
sub
xlat
in
adc
jb
xor
and
stc
aad
push
cmp
or
lret
popa
stos
cmpsl
jecxz
mov
cmp
push
add
cmp
jb
jns
push
lds
cwtl
lret
rolb
into
in
in
repz
jge
aad
ret
cmpsl
jp
nop
push
test
xchg
jno
inc
jo
lods
xchg
fucomp
sbb
sub
mov
mov
pusha
inc
sahf
pop
mov
xchg
mov
movsl
mov
mov
sub
ret
in
paddq
pop
sub
push
mov
pop
mov
aad
mov
and
ja
fwait
sbb
push
mov
insb
xchg
enter
xchg
push
inc
add
xlat
jg
addr16
mull
sbb
push
dec
rolb
gs
in
ljmp
aaa
das
xor
ds
mov
mov
movsb
gs
std
jg
add
into
mov
sbb
insb
dec
xor
outsl
push
test
xchg
pop
adcb
sub
inc
movsl
gs
and
mov
pop
and
xchg
jle
cmp
int3
add
dec
sub
sbb
pop
and
test
xchg
adc
lret
add
popf
stos
cmp
aaa
roll
je
mov
xchg
out
xchg
jp
sbb
shll
imull
lock
mov
push
sbb
and
add
sub
fcmovb
inc
mov
call
mov
jno
and
and
out
cmc
xchg
ja
mov
cld
fstpl
test
ds
push
pushf
push
fisubl
fimuls
push
lods
jbe
pop
into
sub
les
movsl
mov
jne
int
jp
or
inc
dec
or
call
ret
jne
xchg
pop
sbb
and
scas
and
in
xchg
jl
addr16
cmpsb
sbb
mov
and
mov
pop
xor
xchg
dec
mov
sub
xchg
fdiv
loop
mov
mov
cmpsb
xor
pop
push
scas
ds
jmp
insb
and
and
daa
xchg
scas
adc
int3
mov
pop
jno
sarb
xchg
or
out
addl
mov
mov
cmp
scas
inc
fwait
mov
mov
or
sti
call
adc
mov
repnz
shrb
cmpsl
xor
sub
mov
adc
pop
add
icebp
shr
mov
bound
loope
test
mov
aas
xchg
loopne
icebp
pop
ljmp
imul
aas
jb
cwtl
addr16
ficoml
pop
jae
mov
sbb
movsl
aad
movsb
test
lret
into
inc
xor
mov
bound
std
push
mov
cmp
in
mov
pop
add
test
mov
cmp
and
mov
xlat
push
in
pop
lret
test
sub
push
ds
insb
ds
flds
decb
out
and
mov
and
clc
gs
in
lods
adc
movsb
xchg
add
test
jno
mov
push
pop
inc
ljmp
iret
dec
loopne
push
aad
jns
dec
fsubs
leave
fcmovbe
pusha
stos
outsb
sti
in
push
loope
pop
push
pop
sbb
ret
cmc
test
mov
push
lds
sbb
push
scas
jmp
idivl
adc
repnz
pop
lea
jns
push
notl
push
jno
sub
lock
movsb
mov
or
push
xor
inc
shrb
cmp
push
mov
fprem1
repz
es
hlt
sti
sub
mov
xchg
cmp
popa
repz
pusha
mov
insb
shrb
push
sbb
add
sub
sbb
mov
add
push
cli
push
out
bound
fldl
repz
mov
push
stos
lods
jae
cld
jge
cltd
cmp
lds
outsl
inc
sbb
leave
scas
inc
sub
inc
jl
xchg
inc
adc
pop
sub
int
popa
shlb
inc
inc
fisttps
mov
xchg
mov
dec
in
in
inc
mov
pop
jbe
subl
es
scas
ja
push
ret
mov
nop
mov
ret
add
out
adc
insl
mov
and
cs
xchg
into
push
jbe
into
push
hlt
cld
sbb
insb
in
popa
cmp
mov
xchg
add
jp
sahf
loope
stos
cmp
mov
push
push
xchg
dec
push
ret
aas
repz
sar
sub
jo
fs
ss
jge
scas
push
or
jnp
sbb
xchg
test
xbegin
std
mov
sbb
out
bound
sbb
sbb
mov
fwait
daa
xor
inc
out
hlt
sub
es
and
mov
popa
push
pushf
stc
mov
mov
mov
clc
mov
jns
sahf
inc
cmpsl
xchg
ficompl
popa
pushf
xchg
stos
leave
pop
out
sbb
nop
sahf
insb
sub
mov
int
addb
push
repnz
iret
or
and
mov
outsb
and
push
popf
jl
icebp
imul
pushf
sbb
mov
movsb
push
dec
in
fwait
ret
es
or
jl
lea
in
add
pop
ret
dec
mov
outsb
push
add
mov
jp
ja
test
xor
test
mov
push
sub
adc
sbb
lock
movsb
rcll
pop
rcl
and
jl
push
stos
inc
push
insb
fsub
sahf
add
lret
add
adc
mov
adc
inc
inc
mov
xchg
leave
repz
faddl
sub
fmul
sub
nop
sbb
loopne
vpshlb
hlt
sub
pusha
push
sbbl
sbb
jns
mov
adc
sub
lahf
jbe
out
stc
ret
jl
divl
aam
jae
sbbl
inc
adc
outsb
xor
test
dec
inc
xor
ljmp
test
rcll
ret
stos
mov
icebp
push
xchg
and
subl
das
xlat
mov
iret
sbb
stos
xor
and
xchg
jb
xlat
sub
jecxz
push
lods
mov
dec
pop
test
mov
lock
pop
ja
push
pop
test
jg
adc
sub
xchg
outsl
mov
scas
dec
mov
out
int
and
int
and
mov
addb
and
jne
lds
pop
pop
arpl
inc
lret
notl
movsb
orl
xor
rcrb
xchg
dec
fbstp
jno
rclb
stos
jmp
mov
repnz
jmp
inc
cmp
int
scas
cmp
dec
out
cli
and
insl
sub
mov
and
cwtl
dec
ret
insb
repz
sub
das
data16
jo
leave
inc
jno
lods
pop
insb
mov
hlt
xor
jbe
adc
mul
in
enter
inc
out
loope
mov
cltd
ss
xor
out
jmp
push
jnp
ja
push
outsl
call
and
adc
inc
fwait
jb
ljmp
xor
pop
mov
notl
push
jbe
insb
sti
hlt
out
pop
jo
out
cmp
mov
mov
add
dec
xchg
out
lret
enter
fnstcw
loope
call
insb
pop
pop
fimull
mov
pop
add
loope
adc
into
and
out
jmp
adc
into
sahf
push
or
std
ss
jns
fcomps
sahf
adc
push
adc
dec
push
pop
xor
cli
dec
push
lds
sbb
test
vcmpss
or
cmp
pushf
dec
mov
cmp
mov
addb
xchg
je
popa
cmpsb
inc
push
les
fs
jecxz
scas
dec
out
jge
pop
xchg
mov
leave
aas
mov
xlat
loopne
insb
out
and
jbe
popf
pusha
push
mov
and
mov
or
mov
lret
iret
ja
ja
dec
push
imul
or
jle
cmp
rcrb
sbbl
arpl
inc
cwtl
ficoml
inc
jb
movsb
mov
push
adc
or
mov
insb
pop
test
add
jns
pop
mov
dec
inc
sbb
push
stos
call
pop
popf
sub
les
fwait
jne
push
push
test
hlt
mov
iret
nop
ds
aaa
dec
add
push
or
lahf
pop
or
mov
rcll
idiv
or
jle
inc
push
dec
push
jne
pop
push
pop
pop
lods
arpl
shl
enter
mov
cld
ret
clc
imul
cmpsl
sarb
cmp
mov
bound
mov
sub
fldt
aaa
jge
and
outsl
and
or
mov
fmuls
fsubrp
adc
adc
or
mov
inc
add
in
pusha
sar
or
adc
pushf
jo
cmp
into
mov
mov
xchg
mov
or
jns
adc
movsl
aad
jae
cwtl
sbb
adc
mov
test
scas
push
push
xor
mov
jbe
js
jo
andl
adc
aaa
mov
inc
sahf
jb
fisubrl
dec
orb
aam
push
jnp
and
pop
push
movsb
jecxz
cs
hlt
jns
aaa
mov
push
lock
pop
stos
in
lcall
pop
add
mov
xor
pop
jne
dec
jp
jl
inc
or
loopne
rorl
dec
cmpsl
jmp
cltd
sbbl
je
push
jl
nop
cmpsl
pop
gs
xchg
insb
cmp
pop
mov
push
fs
out
clc
sub
xor
rorb
or
mov
sbb
add
cwtl
or
and
push
jp
mov
iret
xchg
jp
mov
cli
daa
sub
add
mov
add
clc
cmp
and
mov
addr16
adc
clc
xchg
push
sti
dec
out
ret
jl
mov
sub
inc
movsb
push
out
adc
lods
iret
insb
inc
sub
pop
push
lcall
xor
adcl
push
jg
inc
lods
imul
dec
xchg
cmpsl
ror
test
sbb
daa
fistpll
push
int
pop
push
mov
shrl
shrl
add
mov
into
mov
mov
mov
cmc
sbb
shll
cltd
xor
lods
cmp
or
dec
aad
aad
ret
inc
insb
dec
fisubrl
inc
pop
loopne
xor
xchg
adc
nop
pop
dec
mov
pop
xor
lcall
adc
das
data16
repz
adc
ficomps
cmp
mov
popf
fisubrs
jb
or
pop
in
push
outsl
loope
or
adc
and
and
jae
movaps
pop
push
daa
dec
sub
into
xchg
arpl
push
cmp
xlat
lods
adc
jge
jns
ljmp
int
push
repz
and
push
stos
inc
loope
test
fimuls
nop
jne
sarb
sahf
addr16
mov
out
sti
fdivs
mov
scas
push
das
inc
cs
fcom
leave
fucom
xor
fs
aam
cltd
lock
sahf
mov
mov
out
mov
pushf
push
pop
push
and
mov
cmp
or
cli
push
and
stos
mov
stos
imul
pop
leave
fmull
stc
dec
repz
dec
in
ror
in
push
xor
decl
gs
and
xor
mov
push
es
xchg
sub
dec
inc
fbld
sbbl
mov
fadd
out
outsl
ds
xorl
insl
xchg
fdiv
bound
in
cmpl
xchg
xchg
add
pop
sub
or
in
push
xchg
outsb
cld
jo
xchg
bound
mov
or
lds
sub
repnz
fcom
mov
xchg
adc
loop
jmp
dec
sub
xorl
pop
adc
add
cltd
mov
push
jmp
insl
js
icebp
adc
xor
jle
xor
cmp
add
aad
xor
gs
xchg
out
xchg
ljmp
lret
bound
push
cmpsb
ja
and
mov
stc
lock
sahf
call
sbb
mov
add
cs
es
mov
sub
jae
pop
jo
xor
lret
pop
mov
jle
lds
lods
or
pushf
fbstp
out
mov
int3
fsubl
stc
cmc
data16
sbbb
ljmp
cli
out
xor
mov
xchg
jo
push
sbb
es
mov
imul
sbbb
cmp
loope
lods
inc
testl
lods
mov
mov
out
sti
pop
sbb
inc
or
int
add
les
les
inc
dec
sub
jbe
addl
jns
lret
push
mov
cltd
xorb
cmp
sbb
inc
stos
popf
mov
pop
jp
cmp
loop
fdivs
sbb
pop
loopne
mov
push
xchg
lock
dec
and
test
test
sbb
jnp
stc
cwtl
aad
fnsave
sbb
nop
mov
loop
mov
mov
jecxz
jo
aaa
sbb
mov
jp
subb
lea
repz
daa
cmp
push
int
sub
sbb
push
jp
ret
xor
dec
iret
loop
bound
mov
inc
sahf
inc
or
js
call
jl
and
xor
scas
pop
in
xor
aad
mov
mov
fcoml
dec
xchg
cmpsl
lds
dec
int
fadd
push
out
jmp
fdivrs
les
xor
pop
dec
mov
jbe
pushf
mov
loope
ljmp
dec
loopne
fldt
sar
stc
push
push
sub
imul
push
cmpsb
rcrl
and
xchg
add
fcoml
xchg
je
ljmp
int3
aaa
es
adc
pusha
cmc
sahf
ljmp
jl
jle
push
in
mov
dec
cli
rcll
testl
pop
inc
cmp
aas
push
mov
sbb
or
aam
stos
cmp
aaa
dec
cmp
and
jmp
jmp
mov
mov
pop
in
or
sub
sub
jp
pop
cmp
in
rorl
xor
fstp
xor
pop
jge
adc
cmp
cmp
fcomip
mov
sub
jmp
push
out
xchg
inc
adc
xchg
mov
jp
jg
rorl
and
mov
outsl
xchg
insb
cld
ficoml
or
and
push
sahf
aaa
adc
adc
nop
mov
sub
aam
sti
xor
das
lods
ds
fdivs
fstpt
dec
lea
cmp
int3
jge
rorl
add
in
jecxz
lds
and
and
nop
stc
adc
cmp
imul
inc
pop
addb
pop
lods
movsb
push
add
test
push
mov
shr
popa
pop
lahf
out
jae
xorb
les
dec
lret
inc
or
mov
mov
xchg
push
sub
mov
nop
inc
mov
std
lods
dec
imull
arpl
std
negl
sub
mov
or
hlt
pop
xlat
xor
mov
jp
scas
negl
orb
cmc
out
mov
mov
inc
testb
and
ret
insb
pop
add
loopew
xchg
enter
dec
sub
fstl
jecxz
das
mov
mov
mov
or
jbe
push
jbe
loop
mov
test
cmpsl
sbb
jecxz
or
aad
add
cmp
jle
fisttpll
push
pop
sbb
xchg
bound
mov
pop
ljmp
cmp
lock
cmp
repz
pop
cmp
inc
das
pop
mov
jmp
in
xor
into
addb
jno
shlb
dec
jecxz
sbb
push
orl
das
mov
or
es
fidivs
dec
ss
push
mov
scas
imul
imul
lds
outsl
mov
xor
pop
dec
or
ds
push
inc
lock
jns
outsl
mulb
insb
push
mov
iret
lahf
push
je
nop
stos
sbb
jg
cmp
icebp
cmp
xor
and
mov
outsl
ds
push
xchg
mov
outsl
pop
ja
cmp
and
sbb
out
sbb
es
push
add
lods
movsl
mov
jbe
idivl
sub
add
cmp
lret
outsb
cwtl
xchg
js
jbe
cmp
les
pop
enter
ret
stos
ret
hlt
lret
sbb
and
test
mov
dec
cmp
push
into
pop
loope
cld
and
je
push
jle
movsb
mov
ljmp
jae
xchg
mov
push
movl
and
sbb
pop
into
stos
jmp
jns
pop
in
or
jecxz
icebp
ret
shrl
mov
and
jnp
pop
mov
pop
dec
scas
int3
push
cmp
inc
mov
fcomps
cmp
jno
out
mov
aaa
adc
aas
pop
fs
pop
loop
cmpsl
popf
cwtl
and
movsb
mov
imul
mov
es
mov
cmp
add
jmp
test
in
outsb
xchg
or
cmc
ficompl
idivl
cli
fsubr
enter
mov
imul
mov
xorl
lds
cmp
pop
js
xchg
cmc
imul
pop
sbb
outsl
pop
mov
sbb
add
cmp
fidivs
adc
push
cmp
je
adc
inc
jp
jg
pusha
repnz
mov
cwtl
das
lret
sbb
out
lds
outsb
add
clc
xchg
pop
cmp
mov
cli
xlat
sbb
mov
repnz
iret
xchg
sbb
pop
pop
jns
jnp
pusha
shlb
jmp
inc
insl
lea
pusha
push
mov
cmovbe
xor
sub
and
mov
cmp
jnp
inc
jns
in
adc
int
xor
cltd
jle
mov
and
or
xchg
and
hlt
adcb
and
jg
sarl
sbb
out
jp
xor
imul
mov
jp
jae
icebp
cld
ss
dec
das
test
insl
les
xor
cli
add
pop
sbb
sahf
data16
icebp
sbb
int
and
cltd
dec
xchg
mov
xorl
hlt
bound
pop
sti
hlt
movsl
mov
les
cmp
lock
pop
lds
mov
decb
mov
test
sbb
lret
and
daa
or
aaa
inc
sbb
mov
mov
mov
fwait
int
xor
popf
or
movsb
or
lock
inc
outsb
push
adc
push
adc
mov
add
xchg
lock
or
or
outsb
adc
std
lret
push
sahf
repnz
lahf
and
loope
add
cmp
inc
xor
fxch
jge
or
mov
loop
push
out
push
pop
outsl
mov
jp
mov
xor
out
les
mov
push
jae
ss
mov
xchg
sbb
insl
push
inc
aam
inc
in
leave
inc
out
jl
imul
jne
sarb
mov
sti
mov
fimuls
aas
inc
push
lcall
or
pop
sub
nop
sub
clc
cmp
loop
pop
push
xchg
sub
inc
push
cwtl
mov
test
xorb
bnd
movsb
add
xor
fldl
cmp
hlt
xor
xchg
sbb
adc
rcll
sbb
lods
pop
add
sbb
mov
imul
add
in
hlt
aaa
stc
je
pop
mov
into
gs
add
dec
popa
hlt
mov
movsl
sub
inc
add
sub
icebp
pop
cmpsb
inc
arpl
sbb
pop
jb
pusha
in
xchg
lock
movsb
jmp
mov
jns
cmpsl
in
cltd
lret
sub
ret
enter
add
xor
jns
int3
xor
popa
aas
test
pusha
cmpb
sbb
or
mov
lret
loope
cmp
nop
push
in
and
out
and
gs
arpl
cmp
sbb
repnz
inc
push
scas
xchg
mov
ds
jg
add
jb
push
dec
mov
rorl
pop
fsubl
loop
in
loope
fadds
outsb
int3
icebp
adc
pop
mov
xchg
rcrb
fisubs
out
insb
daa
incl
dec
dec
or
sbb
mov
aam
and
inc
xchg
enter
in
stos
mov
sbb
mov
inc
mov
loope
jne
in
out
subb
mov
mov
imul
add
mov
push
pop
nop
pop
jb
test
out
inc
in
inc
fnsave
push
adc
fs
scas
fcompl
mov
je
leave
movsl
repnz
adc
jno
sub
hlt
and
jg
cmp
add
cld
pop
shll
mov
xchg
mov
add
arpl
mov
fisubrl
lods
mov
mov
roll
pop
mov
jae
push
mov
lret
lds
mov
mov
jbe
fcmovnbe
push
and
and
inc
loopne
out
mov
jnp
mov
int3
mov
xchg
andl
repnz
xchg
sbb
inc
ss
dec
out
inc
add
and
mov
mov
dec
sub
pop
mov
mov
out
outsb
js
mov
xrelease
mov
pop
out
fcoml
std
lods
imul
sbb
push
xlat
sbb
push
mov
push
loopne
scas
out
shl
adc
inc
add
in
mov
lcall
jae
lret
adc
mov
or
cli
out
ror
or
pop
mov
imul
bound
push
ds
cltd
scas
cld
push
jle
shll
cli
cs
and
sbb
mov
and
pop
inc
aas
jge
in
cmp
and
xchg
daa
adc
divb
or
stc
sbb
fprem
fisttpll
push
cmp
cld
xchg
jb
push
mov
jmp
or
ds
scas
jp
loop
cmp
mov
jle
dec
pop
daa
jge
or
and
and
sbb
sarb
or
pop
into
push
mov
mov
daa
dec
icebp
xor
insl
ja
jg
daa
jns
addb
fadd
add
cltd
mov
inc
mov
es
movsl
daa
cmp
js
dec
inc
jbe
dec
aas
dec
cld
xor
lcall
xor
scas
mov
jle
aad
sub
stos
xor
cli
fcmovnbe
add
push
push
rolb
fs
sub
insb
arpl
xchg
push
icebp
ret
jb
xchg
leave
mov
fsub
in
stc
pop
fwait
mov
dec
fbld
inc
iret
sbb
mov
mov
mov
scas
jno
cltd
in
cmp
inc
jmp
das
in
pushf
hlt
lods
sub
mov
inc
or
gs
jmp
push
xlat
dec
add
inc
in
dec
ja
pusha
or
jb
pop
icebp
dec
and
cmp
mov
push
lcall
scas
jns
daa
cld
jg
cmp
mov
sahf
xor
xchg
cmp
xor
sbb
fadds
test
insb
pop
sbb
xor
mov
rorl
loop
push
push
xchg
mov
andb
shll
fnstsw
mov
jb
and
test
arpl
fnstsw
xchg
shl
lods
inc
sub
mov
imul
fsubrp
std
imul
xchg
xchg
push
cli
jp
or
adc
jb
imul
fldenv
and
in
in
scas
lods
pusha
or
shrl
pop
inc
mov
sub
pop
inc
xor
pop
cmpsl
or
mov
jmp
stc
dec
sub
movsb
test
rolb
lret
sub
mov
cs
mov
test
dec
mov
and
ss
cwtl
iret
mov
jmp
jecxz
stc
inc
mov
out
int3
dec
in
mov
test
mov
outsb
mov
popf
test
cld
jns
sub
inc
cmp
stos
mov
out
cmp
fistps
xchg
aad
xor
pop
push
push
lret
xor
insb
jne
mov
call
nop
lds
dec
rorb
cmp
lahf
pop
aas
mov
or
mov
lcall
cmp
call
push
bswap
bound
repz
loopne
add
inc
fwait
fwait
xchg
jns
jae
sti
movsl
inc
fisubs
pop
xchg
repz
dec
mov
cmp
sarl
xor
mov
cmp
test
adc
jns
mov
adc
lret
lret
fsub
xchg
push
mov
push
icebp
mov
rclb
lds
push
sbb
jnp
fwait
mov
ret
dec
inc
paddq
pusha
and
outsb
lock
xor
pop
pop
xchg
daa
inc
call
pinsrw
pop
loopne
jp
dec
and
adc
ljmp
out
rclb
fidivs
mov
cli
mov
pop
cli
in
and
xor
jne
fsts
mov
sub
mov
sbb
mov
xor
xchg
loope
insl
pop
cmp
pop
jb
dec
xlat
icebp
ror
xor
sbb
test
daa
inc
ja
stos
cmpsb
scas
xor
add
mov
xor
fimull
mov
sub
sub
mov
ljmp
xchg
clc
cmp
and
push
xchg
repz
ficoms
incb
aaa
fidivl
mov
push
pusha
hlt
jecxz
xor
and
int
jno
dec
cs
mov
test
test
out
jle
pop
or
rolb
incl
movsb
in
dec
or
movsl
cld
repz
fisttpll
lret
out
cmp
jnp
push
fisttpl
push
add
push
cwtl
imul
cmp
adc
cmp
dec
xbegin
dec
aad
movsb
sbbl
push
inc
lods
decb
jl
sbb
enter
cmp
mov
ret
jbe
xchg
lea
push
mov
ja
cmc
jg
lret
or
inc
imul
icebp
sbb
enter
data16
pop
lahf
in
shlb
cmp
pop
incb
push
stos
xor
add
out
lahf
xor
addr16
push
or
test
test
pushf
insb
pop
sub
jnp
shr
sbb
stos
outsl
add
lea
aas
sub
rorl
cmp
sbb
mov
cmp
lock
cmpsl
out
pop
mov
pop
mov
pop
xchg
lret
inc
and
adc
add
aam
lods
ret
clc
dec
cld
pcmpgtw
repz
cmp
fnsave
hlt
dec
iret
lds
aad
lock
push
sub
mov
sti
iret
pop
nop
out
loop
add
push
aaa
mov
pop
adc
ja
sbb
sub
mov
aas
xchg
jae
aaa
mov
fsubrl
in
sub
cmpsb
dec
loop
sahf
jb
push
xor
push
jo
popf
shlb
sub
es
and
dec
lods
or
int
sub
aad
sahf
sub
and
or
jno
push
cmpsb
or
cmp
pop
sub
ss
xor
out
loop
and
pushf
jmp
mov
xlat
dec
jno
jmp
sbb
xor
inc
shr
mov
pop
dec
push
jne
iret
test
mov
popf
add
insl
insb
dec
add
test
out
nop
sub
jo
je
and
pop
add
iret
cltd
fs
test
jbe
jae
xchg
cli
iret
cli
stos
stc
push
std
inc
jmp
and
mov
stc
les
aas
sub
pop
icebp
gs
fsubrl
add
mov
and
jecxz
cli
lret
lds
add
sub
mov
jae
insl
sub
or
loopne
sbb
rorl
pushl
sbb
ror
xchg
inc
pop
xor
imul
pop
orb
std
or
lock
stc
in
dec
scas
sub
add
sbb
pop
sbb
leave
mov
push
inc
add
pop
nop
shr
and
and
pop
repnz
icebp
loop
mov
mov
in
out
pop
clc
mov
rclb
cmpsb
dec
inc
xor
xchg
and
je
out
clc
test
jnp
xchg
imul
xchg
xor
loope
pushf
fisubs
xor
rcl
mov
mov
mov
dec
outsb
test
xchg
out
frstor
aam
sub
notb
dec
lcall
xchg
dec
xlat
and
ret
mov
sub
jle
icebp
andb
mov
cs
pop
dec
int3
push
cwtl
inc
push
cmpsl
aaa
adc
insb
into
jns
decl
out
pop
ss
inc
mov
jbe
mov
mov
jmp
mov
icebp
adc
incb
adc
ret
lods
jecxz
mov
pop
popf
mov
fwait
sbb
inc
mov
dec
enter
dec
enter
js
mov
add
jmp
lock
cmp
or
push
into
inc
mov
push
cwtl
fcoms
lods
jo
lock
scas
loope
mov
adc
enter
pushf
sub
sub
pop
mov
adc
loop
xchg
fmull
pop
push
xchg
or
je
pop
cmp
bound
shr
push
add
adc
mov
mov
mov
cli
xlat
xor
jno
xchg
popa
add
ja
movsl
jg
fs
jmp
loop
outsl
xor
xchg
repnz
orl
add
pop
pop
dec
insl
mov
stc
stos
test
cmp
lea
ljmp
xchg
js
or
rorl
xchg
cmpsb
push
aaa
in
cs
or
fidivs
cld
xchg
xor
pop
repnz
xor
dec
pop
sbb
and
nop
sbb
or
mov
shlb
movsb
jne
nop
mov
sub
push
sbb
in
cs
xor
add
and
loop
cmp
push
cmp
outsl
sub
mov
mov
rorl
loopne
xor
mov
cmpsl
jl
std
iret
xchg
repnz
in
or
jno
dec
mov
negb
mov
cmp
test
adc
mov
adc
loope
sbb
and
mov
ret
shld
xor
pop
push
mov
push
mov
mov
mov
push
cli
mov
and
xorb
jecxz
decl
jno
outsl
cmp
popa
mov
in
cs
repnz
cltd
adc
push
jno
or
adc
outsl
loope
sbb
or
jmp
add
lret
jae
xor
jne
mov
imulb
mov
push
popa
sub
insl
and
mov
aad
sub
js
jg
lds
or
mov
push
pop
mov
push
xchg
pop
shl
jecxz
aas
lock
push
cli
lret
or
cli
iret
mov
push
fldl
jns
push
cmp
insb
mov
pop
cli
pop
fadds
outsl
jle
or
insl
mov
adc
cmp
sbb
dec
push
std
ja
hlt
lahf
jle
fisttpl
jns,pt
ljmp
push
scas
dec
jne
xchg
pop
jb
pop
das
test
lar
sub
enter
inc
or
sbb
sbb
incl
scas
mov
cs
mov
xchg
and
pop
fsts
jg
cwtl
pop
push
icebp
inc
xchg
mov
jge
or
loop
and
mov
and
in
or
insl
gs
pop
inc
repz
mov
hlt
push
lock
dec
test
shll
std
push
insl
mov
cmpl
and
test
push
mov
aam
ror
mov
inc
xor
or
cwtl
jp
lahf
dec
cmpsl
out
cmpsl
cs
imulb
push
ja
mov
int
push
xchg
nop
inc
stos
pop
and
inc
add
xor
outsl
sub
sub
xchg
mov
fcoml
mov
hlt
lret
outsb
mov
je
add
pusha
rcrb
push
les
into
pand
std
sub
insb
xchg
mov
inc
cld
fneni(8087
xchg
sbb
mov
jle
std
xor
mov
push
xchg
sub
nop
jno
mov
daa
adc
xchg
and
push
fistpl
pop
mov
pop
das
lcall
sarl
cld
imul
cmpsl
mov
das
fcompl
je
sarl
mov
rcll
mov
lret
push
pop
jmp
fnstsw
lock
lcall
divl
mov
nop
mov
or
lds
mov
or
gs
mov
lock
nop
jp
xor
mov
mov
sbb
and
out
dec
pop
cmc
xor
push
pop
lods
jmp
aam
jb
pop
sbb
add
cli
leave
lahf
insb
xchg
jecxz
loopne
sub
lret
and
mov
jmp
mulb
or
mov
jae
inc
movsl
jle
aam
mov
outsl
pop
fsubr
pop
or
or
xor
rolb
ffreep
sbb
cli
add
push
jmp
jne
es
xor
dec
cmp
sbb
push
mov
dec
sub
jle
adc
push
mov
or
add
or
sarb
mov
jl
add
pop
xchg
mov
mov
xchg
xchg
jae
jns
sub
in
mov
jl
dec
sti
sub
or
push
je
or
jb
test
mov
cmp
loope
mov
inc
jnp
fwait
sub
outsl
stos
loop
add
outsl
ds
cmpsl
or
sub
and
sarb
cmp
cs
xlat
push
mov
lahf
es
and
add
mov
and
push
and
dec
xor
fisubrl
mov
test
aad
or
in
add
fists
jne
mov
jns
pop
sub
inc
mov
lret
cmpsl
into
ds
xchg
sub
cli
aad
mov
js
and
in
hlt
sub
xchg
stos
jmp
xor
cli
add
sub
bound
loop
orl
add
inc
and
repz
mov
cltd
sub
stos
cs
sarl
std
bound
outsb
xchg
into
xor
into
add
or
jmp
lock
pop
bound
and
imull
pcmpeqd
outsb
aas
ret
sarl
gs
xchg
cmp
inc
lods
jg
jne
lcall
mov
pop
pop
ror
dec
mov
mov
inc
dec
jmp
ss
inc
daa
ja
cli
mov
sub
or
orb
lcall
mov
cmp
xchg
je
lahf
cli
push
xor
push
fmul
popa
mov
cmp
pop
clc
adc
in
jp
aas
lret
popf
loopne
jnp
fs
sub
mov
xchg
jmp
mov
and
cmp
inc
cmpsl
bound
jecxz
sbb
pop
jg
test
lods
jg
pop
popf
add
cmp
dec
mov
dec
and
ret
aam
pop
xor
icebp
test
cmp
and
sahf
push
xor
cltd
or
pop
andb
mov
std
cmp
clc
cmpl
ljmp
push
hlt
lcall
sbb
sar
mov
adc
sbb
ljmp
outsl
test
das
je
adc
lret
push
xor
or
dec
sub
lods
pop
mov
je
add
fidivrs
push
adc
add
add
lret
dec
mov
sarl
scas
sbb
mov
sbb
xchg
sbb
std
popa
popf
iret
sahf
setae
xlat
testb
mov
mov
das
or
sub
insl
mov
shrb
pop
xchg
inc
fwait
call
add
pop
mov
aam
jge
outsl
jle
popa
ljmp
out
insl
xchg
shl
and
hlt
repnz
adc
leave
jecxz
and
jle
xorl
xor
pop
sub
pop
jl
sub
add
jl
cmp
add
fdivrp
jbe
sahf
add
out
ret
ret
adc
mov
push
push
mov
imul
add
cmp
xchg
mul
roll
inc
ljmp
rcrl
out
jmp
test
je
jmp
fstpl
mov
sbb
rcrb
outsl
xchg
iret
jbe
mov
xchg
cltd
fdivrs
cs
cmp
push
inc
inc
xor
jbe
pop
cmp
pop
ljmp
mov
sub
add
xchg
jo
cwtl
adc
or
add
scas
dec
arpl
mov
sub
adc
dec
pop
mov
sbb
xchg
mov
and
add
arpl
movsl
pop
in
xchg
sahf
sbb
testb
rcrl
lcall
repnz
movsb
pushf
pop
vphsubwd
mov
dec
sub
sub
push
inc
hlt
jge
test
test
out
and
int3
cmp
jmp
xchg
imul
mov
std
push
mov
cltd
in
aas
sbb
adc
mov
das
inc
mov
nop
push
cli
sarl
sub
mov
imul
adc
sbb
mov
adc
sti
lret
fisttpll
jae
test
cmp
jae
lcall
xor
jo,pn
sub
lods
jno
pop
stc
sub
jo
bnd
push
push
lods
xchg
mov
xchg
lret
icebp
push
jno
mov
pop
jg
mov
bnd
clc
loop
hlt
iret
inc
adc
xchg
pusha
inc
mov
push
or
lock
int
mov
in
adc
dec
add
push
lcall
push
push
into
dec
lcall
jle
dec
js
inc
or
jnp
sbb
cmp
movsb
mov
mov
pop
les
lock
push
push
add
cli
mov
jb
rcrl
out
adc
or
lret
pop
push
pop
pop
loop
pop
rcrb
stos
xor
push
arpl
sbb
repz
movsl
ja
scas
dec
xchg
repz
mov
mov
movsb
jae
sti
iret
push
dec
mov
lret
clc
dec
in
inc
enter
fdivrs
mov
pop
fsubrl
mov
and
jns
and
push
cmp
mov
xchg
sub
mov
andl
repz
mov
or
nop
mov
dec
mov
pop
mov
sbb
sbb
andl
jae
adc
outsl
daa
int
lret
push
pop
ds
rol
rorb
cmpsb
lea
adc
andb
jmp
add
or
mov
mov
pusha
sub
nop
jnp
loopne
fldl
jb
mov
pop
out
adc
cmpsl
push
in
decb
push
mov
in
adc
xor
cmpsl
gs
add
out
scas
rolb
inc
adc
jnp
orb
push
int3
jb
inc
icebp
jp
in
push
push
xchg
inc
shll
sbb
push
and
int
movsb
mov
push
cmc
pop
xor
addr16
cmp
insl
xchg
outsl
mov
dec
ret
lods
scas
in
xor
mov
scas
mov
add
xchg
stc
cwtl
call
fsubl
mov
or
mov
sbb
xlat
lcall
xchg
loope
pop
addb
std
xor
dec
push
fmuls
mov
fistpl
pop
add
inc
sbb
jecxz
les
push
adc
cmp
jp
jne
xor
jb
mov
iret
ljmp
into
dec
insl
loopne
xor
pop
cmp
fwait
xor
adc
rcll
enter
mov
mov
adc
imul
push
les
mov
shll
testl
fdivs
jecxz
fdivs
ret
test
cmp
mov
xchg
ficomps
insb
sti
sbb
mov
sarl
pop
mov
lock
filds
les
xchg
xor
lret
push
lret
insl
push
mov
cmc
std
mov
mov
dec
inc
add
pop
rcl
jl
inc
mov
js
idiv
mov
inc
mov
cli
push
jmp
addr16
loope
popf
movsb
jecxz
xor
jae
dec
or
loope
and
sub
dec
in
sbb
outsb
in
jp
out
push
test
inc
xchg
jno
jae
xchg
mov
jmp
test
test
and
and
lret
mov
loop
jl
rdpmc
or
adc
js
xchg
mov
lahf
sub
xor
sbb
addl
enter
lds
fnsave
dec
je
mov
pop
insl
mov
fwait
mov
and
out
pop
cmp
jnp
cld
dec
mov
std
sbbb
orb
clc
or
mov
xchg
outsb
or
mov
pusha
mov
in
std
and
xchg
subl
and
xchg
mov
inc
push
mov
lea
add
mov
dec
mov
insb
cltd
adc
sub
jo
push
sbb
xor
sbb
jnp
jne
jo
mov
dec
lret
lcall
insl
bound
mov
xchg
jecxz
loopne
pop
addl
push
mov
jp
nop
cmp
jp
cmp
loope
imul
movsl
loope
daa
enter
pop
dec
es
jge
jae
mov
and
pop
shl
inc
arpl
cld
leave
aad
add
adc
sbb
jl
cmp
cmp
shl
inc
add
cmp
shlb
outsb
in
pop
and
sub
test
inc
sbb
nop
pop
std
fisttpll
adc
arpl
hlt
rorl
sti
icebp
pop
xorl
aaa
lea
jae
mov
add
mov
xor
repz
lahf
pushf
shrb
les
or
push
jbe
jp
cmp
ds
mov
dec
and
add
mov
mov
cmp
push
xor
pop
mov
std
sahf
jg
ja
adc
in
pop
or
inc
pop
pop
mov
or
fnsave
inc
scas
lret
xor
cmpsb
sbb
les
or
stos
divb
sub
lret
mov
pusha
pop
inc
fadd
gs
mov
xchg
pop
cld
pusha
fcmove
cmp
xchg
mov
test
push
or
repnz
sub
pop
sub
and
add
lea
xchg
mov
mov
fcom
mov
xchg
add
stos
lret
leave
in
push
popf
dec
dec
adc
mov
ds
nop
sarl
lock
or
dec
add
or
mov
pop
std
xchg
sbb
daa
es
cmp
pop
es
push
addb
cld
fistl
adc
lret
and
xor
sbb
es
jmp
mov
push
movsb
adcl
push
bound
mov
jno
mov
mov
repnz
rolb
lock
gs
clc
or
mov
mov
sub
mov
sti
push
mov
mov
add
push
xlat
aas
mov
inc
adc
xchg
add
cmpl
mov
mov
dec
mov
push
fldt
mov
pop
mov
lock
pushf
ret
cmp
loope
ja
inc
int
xchg
adc
dec
mov
pop
in
lods
mov
test
or
push
mov
or
cmp
jmp
pop
dec
aaa
inc
fstps
lret
pusha
jbe
rolb
fisttpll
add
and
xchg
pop
aas
sub
adc
xor
pop
push
je
nopl
test
enter
dec
and
add
sbb
inc
adc
in
adc
sbb
mov
mov
pushf
push
xchg
or
inc
sub
cmp
push
ret
jbe
rorl
daa
jb
add
xor
fwait
popa
cmpsl
jmp
ja
fnstsw
pop
imul
dec
jp
add
int
cmpb
out
dec
push
mov
jmp
dec
xchg
mov
inc
xor
cli
sub
sti
or
xchg
inc
mov
pushf
jae
mov
mov
push
lret
and
nop
mov
repz
mov
gs
dec
outsb
test
jmp
pop
in
sar
xchg
pop
pop
mov
cmp
leave
push
ss
insl
cmp
lock
pop
adc
jg
orl
test
jl
or
les
outsb
ret
lahf
jnp
enter
or
aam
dec
cld
jo
or
leave
sbb
xchg
popa
es
inc
xor
mov
jmp
mov
jmp
popf
in
es
inc
rcl
adc
cwtl
cmpsl
sbb
inc
xchg
inc
testb
add
popa
mov
inc
popf
dec
loopne
sbb
jbe
inc
add
lret
pop
sahf
test
mov
mov
js
mov
pusha
ret
push
scas
mov
stos
stos
cli
sbb
pushf
pop
dec
imul
popa
test
inc
imul
sahf
int
and
lods
adcb
out
stos
jl
lea
aaa
sarl
cli
pop
lods
out
cmpsb
fsubl
jb
repz
jnp
jnp
shr
andl
mov
fs
jge
sti
sahf
cmp
ss
add
test
inc
adc
cmp
mov
call
in
cmpsb
inc
push
mov
pusha
jnp
outsl
das
ret
aas
icebp
adc
pop
int3
jl
shrl
xchg
pop
push
pop
insb
arpl
rdmsr
xchg
jmp
inc
in
mov
aas
fildl
mov
ds
data16
clc
mov
xchg
scas
arpl
rcrb
push
call
cs
imul
movsl
fsubrp
cmp
adc
adc
jle
pop
cli
fmul
shl
sbb
add
push
add
sbb
out
sub
lret
sub
sahf
cmp
loope
cli
xor
push
ja
pop
aam
lret
lret
mov
dec
ds
xchg
out
jbe
sbb
mov
int3
inc
imul
ficoms
cwtl
mov
addr16
jbe
cmpsl
xor
movsl
sbb
push
push
sub
add
imul
inc
pop
call
adc
in
or
loopne
mov
mov
outsl
xchg
dec
and
mulb
stos
pop
das
stmxcsr
stos
sbb
cmp
outsb
sbbl
cli
cmpsb
ss
push
shll
lock
aam
adc
xor
sub
adc
xor
or
cmp
push
push
jb
int
xchg
sti
push
push
decb
and
push
ror
into
xor
mov
pusha
xor
dec
mov
fwait
xor
seta
shrd
pop
out
cmp
xor
xor
and
lea
cmp
ret
pop
dec
jg
sbb
scas
and
imull
sbb
jo
and
rorb
es
pop
lcall
mov
ficompl
sub
loopne
cwtl
adc
or
add
sti
fisttps
jl
jno
and
fcmovne
nop
jmp
ror
in
jl
push
xchg
inc
loope
iret
ds
ljmp
in
pop
test
test
ja
cltd
mov
shrb
push
adc
jnp
push
mov
inc
add
jno
in
dec
cmp
test
xchg
jns
pop
fisubrs
aad
lret
out
mov
scas
mov
pushf
xchg
mov
setb
push
add
dec
iret
ficompl
mov
loope
clc
sub
fninit
mov
test
movsl
cmp
xchg
and
add
jns
and
pop
sub
xor
inc
pop
ret
mov
mov
std
leave
sarb
fisttpl
dec
jno
jbe
call
test
mov
out
dec
int
and
xor
inc
in
outsl
inc
or
testb
add
shrb
sbb
out
pushf
inc
sub
or
aas
rolb
pusha
out
js
cli
push
pop
es
xorl
sbb
shrl
or
sti
jmp
outsl
jae
scas
js
push
in
insb
push
jg
imul
int3
xor
sbb
clc
mov
jle
jnp
idivl
mov
js
jecxz
mov
cmp
mov
es
cld
repnz
jp
sub
sbb
notb
or
push
pop
test
push
pop
add
mov
and
cltd
fmuls
neg
xchg
push
iret
ret
cmp
insl
mov
push
jno
mov
inc
mov
jnp
ficoms
jg
loopne
into
dec
jne
mov
mov
fstps
int3
popa
cmc
xchg
lret
cmc
cld
mov
dec
imul
jno
es
jns
jo
imul
mov
lret
cwtl
adc
lock
js
js
adc
js
insl
outsb
loopne
pusha
push
pop
and
dec
ljmp
pushf
mov
out
mov
adc
mov
dec
fsubl
fldcw
mov
out
movsb
icebp
sbbl
leave
jbe,pn
pop
inc
scas
cmp
clc
add
lcall
and
mov
sub
or
std
mov
pop
mov
ss
and
cmc
jl
cmpsl
cmp
push
push
dec
and
mov
call
add
cs
sbb
sahf
and
dec
add
rorb
leave
dec
dec
je
outsl
push
or
addb
jmp
jno
and
in
mov
test
or
xor
xchg
cmpsb
pushl
xor
cmpsb
jnp
inc
ss
jb
xchg
or
or
mov
cltd
js
mov
xor
cs
inc
test
add
pop
out
push
out
inc
enter
sbb
test
cmc
dec
out
jb
aaa
dec
xor
faddl
sub
jg
popa
cld
add
cmp
lcall
and
js
ljmp
daa
rcl
into
sub
addr16
jmp
mov
cmp
sub
lods
jmp
repnz
popf
ret
cmp
or
std
ficoml
cld
aaa
jecxz
adc
paddusw
out
xchg
dec
jno
xchg
cltd
fimull
lahf
cmp
add
out
inc
insl
ret
jl
into
fildl
xchg
fistpll
mov
lret
cmp
in
mov
mov
mov
lret
mov
aam
into
shrb
adc
daa
divl
push
adc
mov
imul
and
scas
dec
sahf
loopne
push
xorb
pop
in
mov
cltd
inc
je
aad
and
xor
mov
adc
mov
xor
pop
sub
test
hlt
and
das
rolb
lret
rcr
cwtl
pop
addl
push
cli
data16
push
jle
lret
mov
cmp
jbe
inc
nop
pop
cmpsb
mov
aaa
pop
push
jg
xchg
jno
rcll
dec
sbb
mov
cmp
mov
dec
es
cmp
add
dec
call
mulb
and
inc
fistpll
mov
xchg
cltd
jp
js
es
xchg
lea
cli
xor
mov
lea
mov
adc
lret
push
mov
lods
inc
cmp
cmp
mov
lods
dec
icebp
movsb
mov
imull
popf
out
fbld
arpl
mov
sarb
arpl
lock
mov
sbbl
inc
cmp
dec
repnz
and
outsl
popa
adc
xchg
popf
nop
movsb
add
dec
push
sahf
adc
xor
push
popa
lret
mov
xor
insl
pop
xchg
dec
loopne
xchg
sbb
mov
xor
test
mov
pop
add
xor
aas
jnp
inc
pop
pusha
jns
aam
or
or
lods
cmp
inc
sbb
mov
or
xchg
jge
loop
pop
push
cld
pushf
inc
mov
mov
and
mov
mov
pusha
js
push
pop
imul
insl
movsl
insl
test
mov
jno
repnz
or
or
loopne
pop
fwait
xchg
outsb
daa
lods
rorl
loope
mov
jae
fimuls
sub
cmc
bound
mov
xor
lret
sbb
insb
movsl
sub
or
iret
adc
or
ja
xchg
dec
cmp
insl
les
add
mov
out
xor
imul
lcall
and
repnz
push
rcll
repnz
xor
mov
and
lret
jg
daa
lcall
push
cld
in
fistpll
push
xchg
jns
inc
push
jmp
in
pop
dec
in
call
adc
cmp
pop
dec
dec
repnz
jne
imul
and
cltd
cmpsl
xor
add
cld
sub
sub
jg
sub
cmp
jns
addb
jae
push
sbb
mov
cmp
cmp
cli
sub
cmc
or
dec
xchg
cmp
push
bound
xchg
out
pop
xlat
loopne
and
in
repnz
lds
dec
mov
push
adc
xor
cld
inc
jmp
and
pop
pop
test
bound
sbb
or
daa
add
jno
fsubrp
stc
adc
xchg
lahf
int3
jb
push
or
rcr
mov
inc
lds
cmp
adc
sub
add
push
icebp
xlat
into
ret
dec
jnp
mov
addl
fdivl
fs
rclb
out
lret
jecxz
pop
lods
sbb
inc
inc
loopne
je
in
je
cld
test
outsb
cwtl
xchg
mov
mov
arpl
mov
xor
dec
std
sub
out
mov
sbbb
mov
adc
jl
sbb
insl
sub
jo
in
push
xchg
cmp
cmpsb
int
sbb
mov
fldt
cmc
jle
popa
movb
loopne
inc
inc
iret
xchg
sbb
stos
push
and
push
add
mov
or
hlt
mov
push
mov
push
das
popf
mov
inc
sbbb
sti
mov
xchg
fldcw
dec
pop
and
cmpsb
inc
push
shrb
and
sbb
inc
pop
loopne
mov
xor
adc
in
mov
sbb
mov
lcall
fnstsw
clc
sbb
push
repz
inc
inc
mov
ficoml
push
repz
push
and
mov
xchg
sbbb
or
inc
sub
jbe
cwtl
test
add
sub
insb
adc
div
bound
cwtl
mov
inc
mov
mov
es
dec
fiadds
jl
sub
lret
inc
loop
leave
adcb
sub
cmpl
rolb
sub
xor
int3
mov
inc
sub
jnp
push
dec
mov
mov
xor
sub
jmp
mov
mov
jo
inc
js
pop
sahf
mov
orl
mov
lret
push
test
aam
insl
daa
rorb
add
arpl
jge
pushf
push
daa
mov
or
div
cmpsb
and
test
mov
jg
pusha
xor
aad
push
mov
inc
pop
jnp
sti
jae
pop
xchg
fcompl
mov
jae
jp
xchg
aam
mov
mov
inc
pshufw
in
iret
xchg
xchg
jno
mov
jae
out
lret
jno
mov
mov
pusha
ret
or
aam
xchg
inc
je
mov
cli
insl
dec
xor
push
out
sub
das
imul
in
cmp
pop
and
sbb
sahf
fisubl
aas
push
mov
xor
or
mov
cmp
push
push
ss
push
das
ds
mov
mov
cmpsb
push
mov
rclb
push
mov
je
pop
adc
cmp
sub
or
scas
test
iret
pop
ljmp
in
push
xchg
shl
pop
push
xchg
pop
jl
stc
jl
xchg
pop
pop
fdivs
sbb
in
pop
nop
dec
inc
das
es
ja
sub
mov
xchg
jno
rol
aas
pop
in
lret
cmp
inc
mov
jp
js
test
int3
pop
pop
add
roll
mov
xchg
jo
movsb
jae
gs
mov
add
mov
stos
and
sub
xchg
sbb
ds
cs
insb
push
push
iret
adc
or
jg
add
loope
adc
cmp
xchg
xor
scas
imul
or
xchg
in
and
mov
jge
jmp
ror
push
jb
mov
pushf
or
loopne
stc
arpl
imul
nop
cmpsb
jg
rorl
xchg
sahf
adcl
in
lret
cli
xor
ljmp
dec
adc
adc
fsubrs
inc
je
shlb
xchg
adcl
fcmovb
jno
pushf
test
xchg
add
push
aaa
adcb
sub
in
stos
notb
jmp
adc
lds
xor
mov
pop
ficoml
mov
add
sbb
xchg
jnp
ret
rcrb
shl
sahf
cwtl
mov
push
push
cmp
test
jge
lods
cmp
loop
jo
mov
loop
push
js
mov
mov
movl
mov
inc
push
repnz
scas
ss
jl
jo
mov
imul
outsb
xchg
mov
pushf
sub
dec
mov
shr
fldl
hlt
or
xlat
xchg
mov
push
lcall
shl
lds
and
sub
mov
sbb
adc
fwait
mov
pushf
imul
popf
adc
xor
jl
jmp
jb
pop
jno
xchg
icebp
les
movsb
mov
stos
icebp
xchg
cmp
sub
pop
cli
push
enter
dec
jl
adc
daa
dec
fldcw
test
pop
andb
das
into
repz
daa
lods
inc
fstps
daa
inc
daa
stos
dec
mov
xchg
cmp
scas
mov
adc
and
lahf
lods
dec
cs
cmc
mov
adc
adc
gs
cwtl
inc
jl
cs
jmp
fs
adc
cmc
rcl
or
icebp
int
adc
sub
testb
pusha
adc
sbb
insl
mov
mov
mov
pop
inc
mov
int3
into
and
insb
aas
test
push
inc
ja
lcall
imul
sbb
shufps
inc
dec
call
fucomp
lahf
xor
mov
and
negl
adc
push
inc
add
call
insw
sbb
jno
outsb
cmp
sub
push
adc
daa
sbb
sahf
and
mov
mov
cli
sbb
ret
ret
iret
cld
sbb
shlb
lds
mov
leave
daa
xchg
dec
inc
push
mov
in
cmpsb
push
pop
repz
mov
pop
outsb
ret
into
mov
fcoml
test
dec
and
push
in
pusha
pop
xchg
xchg
imul
in
add
cmp
ret
sbbl
mov
mov
mov
jge
and
xor
shrb
es
movsl
mov
addr16
add
cmpxchg
jae
aad
gs
repz
inc
sub
jp
movsl
jno
cmp
pop
cmp
fstps
lret
out
dec
fbstp
into
dec
adc
jns
cmp
cltd
mov
sbb
insl
jmp
push
or
je
mov
imulb
pop
hlt
adc
or
or
push
aad
shlb
sbb
pop
test
lds
shll
mov
sub
sbb
dec
xchg
int3
in
pop
scas
aaa
imul
clc
mov
int
ja
pop
loope
fwait
js
loopne
in
cli
or
push
int
into
jmp
es
or
scas
shr
je
jbe
and
testl
sti
push
scas
jecxz
arpl
xor
sub
push
sub
mov
jne
mov
sbb
xchg
adc
insb
mov
fistpl
push
xor
pop
cmp
aas
insb
dec
add
int
mov
dec
cli
dec
movsl
ret
aaa
pop
lret
adc
cmp
loopne
sbb
stos
in
orb
and
lcall
imul
xor
jb
jl
mov
in
xor
fsts
sbb
cli
add
push
sbb
rsm
lods
lahf
lea
cwtl
adc
xlat
lock
xor
jp
jge
mov
sub
les
xchg
push
das
xor
push
lret
js
xchg
dec
mov
ljmp
inc
xchg
scas
aaa
test
jae
pop
sub
aad
xchg
ret
xorl
xor
stos
mov
add
les
fisttps
fldenv
das
out
add
inc
loop
aam
icebp
add
sbb
fcompl
adc
fs
icebp
stos
pop
ja
in
outsb
fdivl
sbb
inc
aam
test
leave
jb
imul
jns
jnp
jno
mov
sahf
add
subl
mov
inc
adc
cld
in
pop
pop
test
xchg
ret
adc
into
jg
mov
mov
cwtl
les
dec
fnstenv
xchg
stos
add
js
dec
dec
dec
lahf
and
or
xor
pop
mov
roll
test
dec
pusha
push
adc
lret
pushf
mov
and
hlt
add
sub
in
gs
push
ds
mov
insb
stc
dec
shrb
outsl
fsub
imul
pop
fwait
rcr
cmpsl
out
push
into
call
gs
ret
aaa
adc
aad
cmp
outsb
loop
sarb
sti
xchg
nop
repz
in
jbe,pn
mov
out
insl
insb
hlt
sbb
or
sub
hlt
mov
cmp
fists
fwait
and
sbbb
xor
dec
aas
bound
in
adc
mov
call
mov
xchg
mov
in
mov
shll
sub
xchg
les
or
call
out
mov
int3
mov
add
popa
and
sub
and
movsb
shll
mov
pop
jne
mov
mov
testl
pop
cmpsb
mov
aas
pop
cmp
push
add
fdivl
sbb
add
adc
mov
bnd
int3
repnz
stos
fdivrs
pop
xor
push
sbb
testl
aad
jge
cmp
xor
leave
pusha
stc
mov
cmp
or
mov
and
js
shrl
jbe
mov
fs
jl
dec
lea
repz
dec
mov
int3
loope
sub
push
fsubs
inc
xor
cmp
dec
aas
sbb
inc
mov
sub
inc
jo
xor
push
sub
mov
push
sbb
js
xchg
xchg
xor
cwtl
add
push
out
idiv
mov
jbe
push
cli
out
dec
cltd
fs
ror
sbbb
loopne
push
outsb
sub
mov
pop
cmp
dec
mov
cmp
and
out
cmp
xor
insl
jg
in
push
pop
xchg
mov
into
sbb
notl
fidivs
out
pop
shrb
mov
mov
adc
mov
sub
sbb
cmp
add
and
leave
sti
arpl
arpl
cmp
out
rcrb
inc
je
mull
xor
scas
pushf
cmpsl
divl
add
push
flds
xlat
jbe
icebp
or
push
inc
and
xorl
shlb
popf
das
fiaddl
and
subb
mov
cmp
dec
stos
or
jbe
xor
in
pushf
dec
push
and
cmp
mov
dec
cmpsb
jno
dec
pop
dec
nop
or
lods
and
lock
pop
mov
outsl
lds
add
dec
and
cmp
call
pop
outsl
repnz
enter
lcall
lret
xchg
xchg
add
pop
dec
repz
mov
in
dec
dec
and
int3
test
lods
daa
or
stos
outsl
mov
outsb
aam
push
or
or
adc
rorl
insl
pop
add
inc
inc
jmp
and
dec
orb
enter
jbe
or
inc
dec
daa
mov
lret
mov
in
cli
sahf
insb
lock
jae
scas
xchg
mov
pop
lahf
sbb
stos
mov
or
sbb
movsl
add
call
daa
insb
cmp
cli
mov
sub
int3
outsl
clc
and
inc
inc
int3
mov
clc
repz
xor
test
loopne
push
sbb
punpckhwd
mov
scas
outsb
lock
push
insb
adc
push
pop
scas
and
adc
and
xorb
and
fsub
xor
in
ret
rolb
std
pop
dec
sbbl
adc
shlb
jle
mov
filds
push
ror
divl
fwait
sub
dec
or
pop
dec
or
xor
xor
addb
negl
xor
and
and
add
xchg
je
jecxz
fsubrl
jp
outsl
ret
dec
pop
mov
pop
xchg
or
pop
mov
push
add
mov
sbb
xchg
fsubs
into
push
inc
cs
fisttpll
dec
sub
mov
xor
or
adc
push
js
add
mov
or
sbb
adc
arpl
cmpsb
fildl
xorl
xor
das
mov
hlt
push
aaa
out
loop
gs
leave
pop
jmp
into
xor
push
mov
push
jbe
push
mov
cmpsl
mov
pop
jge
aam
test
sbb
cmp
addr16
sbbb
jg,pn
jmp
xchg
sbb
frstor
movl
lods
in
jb
adc
mov
adc
fcomps
jle
xchg
fs
out
dec
sti
mov
in
mov
int3
into
bextr
cmpsl
xor
stos
in
imul
in
mov
cmp
sub
adc
xchg
popl
or
jo
xor
fldt
adc
cli
mov
pop
insl
jg
insl
mull
mov
xchg
ficoms
sub
imul
mov
dec
shlb
mov
pushf
cmp
test
mov
out
cmp
arpl
daa
lret
sti
arpl
iret
mov
into
stos
into
jl
inc
out
mov
in
inc
adc
rorb
sbb
mov
fisubrs
jmp
sbb
data16
inc
jno
ret
sub
or
ss
filds
pop
lods
pop
clc
xor
adc
ljmp
in
in
in
sub
pusha
push
pusha
stc
jp
cmp
clc
outsb
shll
in
lret
or
xchg
fs
loop
test
xor
inc
ss
and
lret
dec
inc
mov
cmp
push
pop
ljmp
mov
cmp
xor
xor
sbb
jns
lret
cmp
int
adc
mov
fstl
loopne
mov
dec
into
imul
iret
shll
mov
fnstsw
sbb
jns
adc
jb
push
jb
or
fsubp
sub
loopne
xchg
jnp
sub
inc
test
mov
test
hlt
pop
imul
das
fs
fidivl
out
push
js
mov
lret
sbb
sbb
pop
shrb
bnd
jmp
loope
xchg
cs
int3
ss
push
cmc
cwtl
jns
xor
xor
mov
dec
leave
pop
pop
xor
dec
add
xchg
mov
int
mov
imul
je
add
cmp
cmp
cmpsb
daa
xchg
std
jno
outsl
mov
fs
icebp
inc
pop
mov
popa
sub
dec
sbb
data16
push
aam
sti
cwtl
fbstp
jbe
mov
adc
aam
sub
lock
scas
fildl
shlb
push
ljmp
call
mov
adc
mov
jecxz
test
out
pop
pop
adcb
mov
pushw
jecxz
shlb
mov
inc
nop
push
outsb
mov
je
cmp
lahf
mov
xor
mov
and
cld
sbb
xor
cmp
je
aam
sbb
inc
add
and
dec
push
fiaddl
xor
fs
jbe
mov
in
stc
mov
stos
pop
mov
fwait
aad
inc
sub
test
sbb
jg
xor
cwtl
xor
mov
call
test
inc
push
into
jns
cmpl
jne
aas
or
pop
inc
cltd
addr16
filds
arpl
loope
push
add
mov
mov
lea
mov
pop
bound
inc
mov
sub
les
repnz
sahf
rcl
adc
ror
adcb
mov
xchg
mov
add
sub
mov
aad
xor
sub
cli
push
lds
imul
xchg
pop
mov
loope
mov
mov
dec
jne
sub
jae
outsb
ds
sti
out
adc
jns
xchg
pop
sub
test
movsb
addb
movsl
nop
or
or
cmp
push
mov
in
test
lea
pop
inc
jb
fimuls
lahf
outsl
popf
jl
push
daa
or
dec
push
ds
in
ljmp
jecxz
es
or
adc
pop
sbb
ds
pop
fcomi
sbb
sbb
xchg
push
sbb
xchg
or
push
fs
ja
vsqrtsd
out
cmp
push
mov
xor
test
shr
pop
xor
add
inc
and
mov
jne
jno
dec
mov
sahf
xchg
fcoml
inc
cmpsb
jg
scas
js
in
mov
cmp
lea
icebp
pop
push
xchg
xchg
mov
mov
clc
sbb
push
les
pop
cmp
cmova
das
stc
lahf
sbb
or
xor
cmpsl
insl
insl
mov
in
fisubrs
clc
dec
out
addr16
in
and
mov
jne
inc
push
xor
inc
leave
cmp
push
ja
adcb
or
fidivrs
out
pushw
out
inc
daa
ds
outsl
adc
sub
sbb
cld
add
icebp
dec
jo
outsb
jo
sub
mov
fildll
mov
xor
add
stc
aad
inc
scas
or
lea
clc
pop
gs
push
adc
out
loope
in
or
or
jg
ret
out
push
adc
xchg
mov
in
or
dec
aas
inc
orl
mov
xor
negl
push
mov
pop
cmp
lods
lret
shll
sti
mov
popf
std
loope
out
aaa
and
xchg
xor
rol
pushf
mov
sub
aam
sub
lods
cmpsl
ss
xor
and
cmp
repz
lds
jg
mov
jnp
jle
outsb
pop
sub
adc
mov
test
jo
and
cwtl
xor
aam
mov
out
xchg
fnstsw
dec
push
cmc
mov
push
in
dec
js
aaa
xchg
ds
aad
fnstsw
mov
dec
dec
repz
dec
xchg
mov
jns
pusha
push
aad
in
lods
lea
inc
push
xor
mov
push
push
jge
in
stos
xor
in
sbb
inc
push
xchg
xchg
int3
daa
sub
add
dec
jne
mov
addl
mov
mov
inc
pusha
cli
mov
xchg
push
add
inc
sub
pop
cltd
cld
push
ja
mov
in
cmp
dec
out
mov
sub
cltd
repnz
sub
cwtl
add
pusha
mov
xlat
xchg
imul
jmp
add
push
inc
adc
cmc
mov
int
cli
jle
dec
sti
iret
xor
stc
jbe
sbb
jmp
insl
adc
ret
nop
xchg
jmp
push
scas
cmc
adc
insl
cs
mov
or
incb
xchg
jmp
adc
jge
mov
movsb
xor
outsb
daa
push
inc
dec
xchg
ret
dec
sbb
stc
aad
xchg
mov
jecxz
pop
jb
sbb
cltd
out
adc
xchg
and
fsubr
ds
aaa
inc
cli
shll
jb
in
sub
xchg
push
je
jmp
enter
and
dec
lock
dec
or
fwait
das
out
addr16
jae
fwait
dec
adcl
loop
dec
adc
jecxz
sub
mov
sub
push
arpl
cmpb
lock
enter
cld
fisubs
cmp
mov
mov
cmpsl
mov
mov
out
mov
jl
sub
mov
test
xchg
mov
lret
adc
ret
loopne
jbe
lcall
mov
popf
arpl
push
rcrl
fwait
adc
jne
cmp
and
cmp
test
add
pop
jno
lcall
cld
mov
int
or
mov
mov
mov
inc
fstpl
icebp
add
add
inc
loope
pop
js
xor
out
inc
daa
and
jp
adc
xchg
xchg
mov
adc
sbb
bound
or
and
repnz
pop
pop
pop
sti
out
jnp
or
insl
inc
dec
sbb
inc
test
mov
inc
inc
sti
inc
in
xchg
aas
imul
iret
push
ret
pusha
shlb
cmpsl
mov
add
mov
xchg
add
jnp
pop
jnp
andb
gs
adc
outsb
cmp
scas
cmp
ret
ret
jb
cmp
mov
mov
jne
movsb
dec
xchg
jecxz
test
pop
cmc
daa
push
scas
popa
pop
xchg
cld
cmc
lods
jnp
outsb
sbb
push
adc
je
jecxz
jne
sub
jp
or
cmp
test
add
push
jmp
cmp
insl
enter
or
sahf
leave
into
scas
imul
shlb
in
inc
sbb
lahf
adc
ljmp
jl
cmc
xchg
lret
aaa
lds
add
outsb
or
hlt
enter
movsl
ret
mov
scas
fs
in
das
mov
xor
rclb
ljmp
les
mov
mov
inc
into
setbe
fimuls
mov
inc
or
lock
jmp
mov
addl
xchg
mov
xor
pop
cmpsb
mov
jmp
jl
mov
xchg
fucomip
scas
divl
outsl
ror
lock
push
pop
cmp
adc
lahf
fwait
iret
repnz
loopne
loopne
pushf
xchg
add
out
enter
xorl
xchg
add
out
icebp
loopne
pop
adc
lret
sahf
add
jnp,pn
xchg
scas
js
jne
adc
jb
lods
jae
pop
or
dec
into
cmpb
push
insl
push
jge
and
jne
push
push
idivb
movsl
sbb
jp
in
and
scas
aaa
insl
imul
push
int
xor
pop
cmp
shll
xchg
lea
pop
and
sub
cs
std
mov
pop
out
inc
int
pushl
ret
fs
and
add
jl
push
lcall
arpl
sbb
mov
cld
xorb
stos
insb
xlat
xor
roll
mov
pop
repnz
sahf
scas
dec
pop
stos
lahf
mov
js
pop
loope
jo
sti
mov
adc
in
pop
sahf
mov
lahf
adc
clc
rcrb
shl
push
testb
int3
sbb
dec
dec
xor
sbb
xchg
mov
dec
pusha
xorb
jae
aam
or
mull
cmp
push
incb
push
and
mov
add
pop
fnstsw
in
cmp
and
cli
dec
xor
dec
xor
outsb
push
hlt
mov
mov
xor
dec
pop
outsl
aas
sub
xor
dec
pop
jnp
aas
arpl
sbb
mov
stos
push
in
movsb
push
xor
or
xor
xor
adc
dec
shlb
sahf
decb
dec
mov
xchg
mov
lods
mov
mov
data16
jb
cwtl
sti
adcl
mov
in
cmp
push
inc
cmp
lret
lea
add
loop
insl
aad
mov
out
mov
daa
leave
xlat
xor
scas
subl
mov
and
or
mov
aam
clc
push
xchg
mov
mov
dec
cmp
mov
outsb
dec
lea
add
lret
or
sub
stos
lds
cmp
mov
clc
scas
and
pop
dec
adc
repz
fmull
mov
rcrl
adc
shrb
add
mov
push
fwait
mov
pop
movsl
dec
movsb
mov
jbe
add
int
lods
hlt
cmp
push
push
inc
jp
outsl
sahf
in
loope
in
xor
jge
bound
cmp
adc
push
push
hlt
loopne
ret
addr16
js
xor
push
icebp
jl
sti
das
int
test
dec
in
in
shlb
mov
mov
xor
js
outsb
xlat
or
inc
cltd
inc
jne
inc
lock
out
lcall
inc
jge
scas
in
adc
sbb
aad
pop
insb
pop
dec
dec
mov
stc
xor
std
lret
stos
into
mov
sub
jl
xchg
ljmp
shlb
pop
ds
mov
sbb
xchg
and
ljmp
es
stos
dec
or
push
les
xchg
mov
xchg
sub
imul
xor
int
data16
and
fmulp
mov
dec
mov
nop
mov
sub
dec
push
jecxz
in
mov
ljmp
push
arpl
mov
lds
sbb
xor
fs
xchg
sbb
aad
adc
xlat
xor
add
jb
cmpl
sub
repz
adc
out
enter
inc
lods
add
gs
cmp
mov
adc
int3
mov
and
out
push
xchg
or
lret
pop
dec
jge
icebp
mov
es
lods
adc
adc
dec
add
stos
aaa
mov
sbb
gs
xor
test
out
cmpsb
shr
and
cs
jb
mov
add
cmp
lret
dec
popf
mov
nop
add
push
pushf
pop
iret
nop
mov
pusha
xlat
notb
ljmp
push
loop
in
mov
pusha
mov
adc
push
insl
cli
loopne
icebp
int
outsb
pusha
or
popf
add
add
pop
pop
rcl
test
mov
jmp
pop
leave
fistpl
lret
sarb
loopne
mov
les
lds
mov
movsb
test
dec
insl
ss
mov
enter
cwtl
test
sbbb
les
dec
mov
jne
inc
pop
fisubrs
into
js
gs
imul
or
add
ja
outsl
pop
add
inc
sub
test
inc
addb
jecxz
pop
repz
mov
pushf
push
ss
lret
or
mov
dec
add
add
or
jp
xchg
inc
cmp
ja
mov
mov
or
ljmp
push
xor
inc
cmpb
and
inc
outsl
inc
xor
inc
daa
lods
das
pop
and
or
or
and
ja
mov
test
adc
sbb
pusha
std
jp
pop
imul
daa
xor
adc
mov
fdivl
adc
add
ret
mov
cmp
int
pop
rcl
dec
mov
xchg
repz
ror
mov
pop
shll
mov
push
inc
jne
pop
cld
push
push
push
fmull
sub
dec
loope
mov
push
jge
in
mov
xchg
subb
repz
mov
add
int
popl
push
push
mov
rcll
push
pop
leave
cld
jecxz
jne
push
aam
test
or
jg
icebp
mov
popa
std
daa
cmp
dec
shl
and
repz
rep
std
cmpsl
lods
or
and
jae
mov
mov
aad
add
cmpsl
adc
mov
and
xchg
popa
sub
xchg
or
movsb
inc
sub
test
xor
mov
je
icebp
mov
shll
add
pop
pop
pop
out
push
sti
jns
dec
hlt
fcomi
addr16
sub
leave
inc
test
lret
outsl
fistl
in
inc
sbb
imul
pop
push
lcall
lret
xchg
popf
lods
cmp
dec
pushf
test
ret
push
ror
jge
mov
pop
jno
inc
sub
test
lock
sbb
mov
movsl
jmp
cwtl
shrl
jne
andb
cmp
aaa
jns
fabs
lcall
shll
sti
dec
in
dec
in
movsl
jno
out
les
lahf
inc
fs
aam
in
jno
iret
fadds
mov
out
push
pop
sbb
and
mov
xor
lods
sbbl
arpl
sub
push
js
and
movsb
push
push
push
arpl
stos
movsb
add
enter
xchg
repnz
xorb
fnsave
rorb
push
mov
sub
cmpsl
enter
pop
push
pop
xchg
jae
xchg
push
mov
mov
mov
adcb
insl
sub
dec
cmp
int
adc
hlt
and
mov
add
imul
pop
push
bound
add
pop
push
fsubl
arpl
addw
cmp
jg
fdivl
stos
je
rorl
mov
push
pop
outsl
int3
push
aaa
sahf
xor
push
sub
out
loopne
aaa
inc
js
jmp
cmp
adc
inc
mov
mov
cmp
mov
ret
cmovb
jnp
cs
jae
mov
mov
movd
ret
std
call
insb
pop
xchg
movsl
xchg
add
nop
jae
sbb
loopne
push
ret
add
adc
es
mov
in
pop
xchg
testb
cmp
ds
sub
jae
fisubl
or
xchg
ds
cs
xor
mov
movsl
pop
loope
jmp
sbb
cld
jns
jle
int3
cld
lock
dec
movsb
mov
xchg
pop
cmp
jno
lods
jno
xorl
repz
test
in
jne
mov
bswap
fimuls
bound
or
mov
arpl
jns
fiadds
fstl
add
ds
pop
leave
bound
mov
jl
stos
xchg
adc
mov
sub
divb
out
xor
fdivrl
fcoml
nop
stc
inc
inc
add
fnstsw
mov
daa
dec
jge
aaa
mov
inc
int
aaa
imulb
xchg
fildll
std
je
and
scas
cmp
iret
iret
aam
add
incb
push
jb
out
push
sbb
push
bound
f2xm1
addr16
sub
xlat
cmp
add
inc
movsl
and
repz
xchg
cmp
cmp
xchg
xor
push
outsl
mov
mov
pop
mov
ret
pop
mov
jnp
xor
daa
and
mov
xorl
cmp
cmpsb
inc
inc
mov
int3
and
popa
fwait
sub
mov
fucom
mov
rcll
aad
add
cwtl
loop
stos
ret
std
mov
xchg
jl
jle
rcrb
xlat
je
and
pop
sub
sub
cmp
bound
adc
sub
pusha
mov
push
fimull
data16
sti
inc
sbb
gs
lea
mov
jl
xchg
or
and
push
sbb
aaa
jae
mov
cmp
pop
mov
and
loop
dec
mov
subl
stos
jne
icebp
add
mov
cmp
enter
test
xchg
leave
cmp
dec
mov
cli
and
sbb
dec
ds
xchg
stos
add
inc
mov
lret
or
jle
cmpsl
xchg
mov
adc
rcrl
jmp
and
mov
in
shrl
inc
lea
cmp
lock
sbb
nop
sahf
cmp
mov
ja
repnz
pop
out
ret
mov
xchg
mov
movsl
mov
hlt
adc
jge
gs
fnsave
xchg
gs
sub
xchg
dec
xor
jle
shr
mov
push
outsb
cmp
test
xchg
push
mov
ret
inc
out
enter
cmp
xchg
mov
inc
sub
fcmovnb
add
sub
jecxz
adc
int3
jmp
xor
popa
and
xor
mov
mov
daa
jl
sarb
cld
rcrl
lcall
insb
pop
push
pusha
test
mov
mov
repnz
pop
ficoml
movsl
cmp
mov
repnz
xchg
add
pop
lret
fs
add
ret
ret
aaa
and
push
or
xor
fisubrl
push
xor
jle
cli
fcomp
or
popa
test
shll
jp
mov
xor
cmp
mov
mov
rcrb
mov
sub
popf
inc
rol
xlat
inc
and
fsubrs
sbbb
pushf
lret
push
ss
fadd
pop
cli
les
xlat
iret
jmp
bound
lret
icebp
jle
pop
xor
jae
ljmp
jae
sub
test
scas
out
xchg
push
mov
jne
insl
adc
jl
aas
pop
shll
aaa
ret
or
lahf
mov
mov
inc
pop
nop
int
lret
imul
ja
pop
lret
mov
fnstcw
mov
cs
cmp
pop
iret
bound
iret
out
std
mov
cmpsl
cmpsl
lea
les
add
fst
pop
sbb
cmp
dec
mov
add
test
fwait
and
ret
mov
scas
imul
rcpps
dec
jl
lret
ds
inc
mov
sbb
mov
add
adc
inc
mov
sub
gs
mov
ljmp
loope
ds
cmp
mov
inc
mov
mov
jg
ljmp
out
jg
add
jecxz
inc
inc
sub
std
movsb
add
dec
pop
aaa
add
pop
in
ret
add
add
mov
lcall
sar
xchg
push
mov
push
shlb
rorb
xor
out
cmpsl
mov
fildll
cmp
add
aam
cld
arpl
pop
or
push
imul
test
loop
ss
mov
xor
inc
add
sti
add
outsl
mov
hlt
sub
scas
and
pushf
aaa
fsubl
ficomps
gs
push
scas
pop
mov
call
loopne
inc
add
dec
or
cld
dec
lods
in
ljmp
stc
rcrl
xor
shrb
arpl
arpl
cmp
pop
cmpb
push
sahf
mov
mov
add
in
nop
adc
int3
and
xor
scas
jne
pop
add
xchg
xchg
push
roll
jbe
je
arpl
pushf
lret
adc
jo
and
roll
or
or
mov
and
xor
scas
pop
xchg
cmp
sbb
in
scas
lods
ret
inc
add
insl
inc
aad
mov
mov
xor
or
mov
sti
sbb
push
mov
pop
pop
push
add
push
xor
test
jo
sbbb
icebp
mov
jl
fisubrs
into
mov
dec
lods
xchg
cmpsb
jp
lods
mov
or
scas
in
lods
mov
icebp
xlat
or
push
add
andl
out
jge
call
pop
jo
mov
dec
mov
adc
bound
enter
popa
cmpl
mov
pushf
sti
rorl
xor
es
mov
inc
int3
xchg
cld
test
push
imul
push
scas
and
inc
aaa
cmp
add
pop
push
pop
mov
stos
movsbl
cli
stos
insb
sub
stos
ror
in
inc
fisttpl
mov
out
sub
push
mov
jge
pop
mov
sub
dec
popa
mov
les
adcl
fcos
mov
mov
xchg
jge
out
jl
inc
out
push
or
fbld
aam
out
sub
or
or
por
bound
fcoml
les
fstl
sbb
or
xor
enter
dec
and
or
mov
jae
movd
push
mov
arpl
mov
adc
insl
jnp
inc
test
inc
jne
enter
cmp
cltd
inc
fists
dec
adc
rol
and
mov
ss
sahf
test
andb
add
mov
inc
mov
and
jmp
dec
xchg
xchg
inc
mov
lods
test
loope
ds
mov
push
and
inc
inc
sub
add
xchg
adc
out
arpl
call
jl
adc
lea
xor
addr16
cmp
cld
dec
mov
jg
xchg
shrb
jecxz
jge
add
in
cmp
loop
icebp
jl
aad
sub
inc
sahf
loopne
adc
xor
shlb
test
test
fcoml
jnp
and
mov
es
and
mov
pop
xchg
mov
xchg
fwait
and
cmpb
andl
add
aas
push
jg
sbb
loopne
inc
enter
sbb
fldl
adc
ret
mov
cmc
xor
out
mov
mov
jp
and
and
lret
pop
inc
mov
bound
ret
pop
lahf
mov
mov
push
mov
inc
mov
mov
mov
xor
push
add
mov
xor
insb
pushf
iret
stos
and
sbbl
dec
jecxz
xchg
shrb
popa
fs
icebp
mov
fs
or
jl
push
adc
cli
pop
js
cmc
shlb
lods
push
jne
cmp
call
xchg
inc
add
popf
xorb
adcb
mov
inc
add
pusha
call
dec
lahf
push
mov
nop
repnz
push
lret
sub
ret
inc
fbld
jmp
mov
add
xchg
stc
les
ret
jno
jecxz
shrb
loopne
add
cmp
pop
mov
pop
ret
shll
sbb
xor
mov
push
test
cmpsl
push
sub
sbb
mov
xchg
subl
push
js
mov
rolb
xor
mov
adc
ds
clc
insl
xchg
scas
xlat
shll
ret
enter
rcr
pushf
adc
ret
mov
scas
testb
das
je
icebp
jne
push
cli
pop
lods
into
leave
scas
loop
popa
sub
mov
and
bound
ret
push
jle
cs
jae
jmp
xor
xor
dec
mov
add
daa
cmp
int
mov
mov
repz
lods
push
cmp
sbb
sbb
mov
mov
fwait
cmpsb
adc
sbb
mov
xor
jno
nop
and
jge
mov
push
inc
setle
mov
push
cmp
push
push
lret
lahf
mov
push
mov
jl
xor
aas
add
hlt
xor
push
sbb
cld
nop
pusha
mov
push
add
popf
push
lds
mov
into
mov
out
xchg
frstor
push
mov
in
ds
shlb
sub
mov
fstpt
xchg
mov
sub
or
data16
cmpb
sbb
enter
jno
dec
cmpsb
cmp
popa
ficompl
mov
adc
test
push
icebp
iret
clc
mov
xlat
mov
add
fs
jb
dec
out
dec
pop
je
cwtl
push
xor
inc
push
mov
jne
cmp
mov
pop
sub
sbb
in
out
pop
mov
ret
cmp
clc
out
inc
jecxz
adc
fisubl
pop
addl
mov
in
inc
push
aam
fidivrl
mov
sub
or
sub
xchg
mov
or
ret
sbb
aas
cltd
jns
pushf
push
mov
mov
mull
adc
push
stc
sub
xchg
idiv
cmp
sub
outsl
jge
test
dec
lret
ja
push
xchg
dec
sbb
cmp
push
int
lcall
push
cmpsb
fisttpll
test
mov
push
cltd
dec
rcr
cmp
adc
dec
icebp
xor
pop
cmp
sub
jge
lret
dec
enter
or
iret
ja
fldt
loope
int
mov
shlb
pusha
andb
fstl
push
sbb
addb
lahf
mov
mov
aam
ret
lahf
movsb
sub
mov
imul
mov
out
inc
rclb
mov
xchg
pop
jecxz
stos
adc
sub
lret
scas
inc
mov
stc
leave
loopne
fwait
xlat
add
add
hlt
pop
fucomp
hlt
sahf
xchg
out
mov
push
repz
dec
pop
iret
or
test
or
jbe
jg
imul
div
test
add
jne
cmpb
cld
test
fs
cmp
mov
bound
imul
xlat
sbb
push
jno
cmp
fiadds
xchg
pop
out
shlb
and
lods
lret
jecxz
jmp
mov
mull
cmp
addr16
je
sub
cmp
and
aad
xorl
xlat
adc
ds
into
mov
sub
xlat
mov
aam
push
lods
scas
jecxz
inc
xchg
xor
mov
mov
lea
xchg
iret
and
add
mov
pop
sbb
shr
cwtl
int
jmp
cmpsw
cmp
lret
std
mov
je
add
xor
cld
test
jae
xchg
xor
arpl
repz
add
lahf
mov
add
mov
ret
pop
fisttps
pop
dec
cmp
or
lahf
adc
pop
adc
lods
add
adc
xchg
sbb
or
movsl
adc
roll
mov
pusha
mov
inc
mov
outsl
add
fucomip
jp
mov
out
outsl
imul
or
push
and
inc
sbb
mov
test
adc
cmp
xchg
ret
xchg
push
dec
add
lahf
dec
movsl
mov
cmp
xor
test
add
in
inc
xchg
xchg
iret
outsb
int3
sbb
mov
xchg
mov
lret
jle
outsl
jbe
sub
push
out
add
pop
fdivl
mov
push
xlat
scas
int3
icebp
test
in
gs
xor
fmull
dec
imul
jne
mov
bound
je
shlb
lods
jbe
dec
mov
inc
mov
sbb
inc
mov
mov
ret
or
pop
repz
sbb
push
fdivl
mov
pop
sbb
or
sarl
test
js
mov
int3
push
in
cltd
fstp
push
lods
or
les
into
std
sbb
outsl
sub
xchg
mov
push
jb
sti
dec
xchg
push
stc
in
pop
test
mov
sbb
aam
test
out
leave
mov
loope
jne
jle
daa
mov
mov
mov
in
add
push
or
lods
es
mov
xchg
repnz
arpl
shr
mov
jno
or
shll
dec
pop
pop
aaa
adc
jmp
jno
xor
adc
ja
and
cmpl
jb
stos
sub
ret
gs
push
xchg
jmp
mov
mov
sbb
cmpsb
loopne
bound
and
jns
mov
mov
in
test
push
xor
ret
test
or
xor
fdivp
lock
cmp
add
dec
inc
xlat
adc
push
cmp
iret
adc
insl
mov
push
aam
sub
xchg
jp
gs
rcr
dec
sahf
mov
or
push
and
jg
push
mov
rorl
lods
ja
inc
inc
cmpsb
pop
insb
outsb
sbb
stos
and
addr16
repnz
test
jmp
dec
inc
lods
das
mov
jecxz
push
lods
or
jecxz
gs
cmp
inc
add
xchg
jne
gs
sub
push
xchg
add
jmp
in
mov
dec
xchg
push
repnz
jp
cmpb
stos
mov
jne
out
clc
aad
mov
pop
and
imul
stos
cmpsl
lods
mov
sarb
adc
mov
pop
adc
push
push
xchg
inc
scas
aam
xor
adc
lea
mov
loop
es
popa
sbb
imul
lock
and
rorb
push
ret
dec
das
clc
movsb
mov
sbb
xor
mov
or
dec
jge
ret
es
xchg
test
jge
mov
push
sbb
cwtl
pop
mov
jae
aaa
cmp
lret
js
outsl
sti
xor
in
shll
mov
push
cs
sub
xor
loope
mov
rclb
cmp
aaa
fimull
inc
les
cmc
and
enter
mov
push
fdivrl
push
ja
dec
pop
subl
subb
outsb
sbb
frstor
jmp
mov
sub
xor
pop
in
aas
insl
push
jns
push
icebp
sbb
mov
and
mov
xor
xchg
pop
into
sub
cmpsb
add
inc
or
rcll
orb
xchg
dec
push
inc
or
push
es
cs
dec
dec
xchg
xchg
ja
jg
inc
gs
mov
insb
push
gs
mov
xchg
pushf
fdivl
fsubrl
sub
sbb
adc
xchg
je
sbb
inc
call
cmpsb
and
sbb
sbb
fwait
xor
ret
aas
lcall
out
movsl
in
mov
loop
mov
neg
ja
mov
andb
outsb
cwtl
nop
push
dec
and
mov
test
or
xchg
test
decl
or
mov
clc
xchg
mov
or
iret
test
sahf
std
and
sbb
sub
ret
inc
xor
pusha
ret
testb
jg
push
mov
cmp
cwtl
jle
lret
xchg
test
mov
xor
mov
ss
test
push
mov
lods
inc
cmp
jmp
xor
scas
pop
test
lret
adc
addr16
loopne
or
ss
scas
jae
mov
mov
cmpsb
jle
addr16
fdivs
negl
push
stc
sbb
push
aas
test
jge
subl
insb
mov
repz
or
jle
icebp
inc
adc
notb
inc
sbb
inc
adc
insb
notb
add
sarb
dec
xchg
lods
shrl
mov
aam
xchg
insb
scas
mov
daa
cmc
inc
popf
mov
mov
ds
adc
mov
push
add
out
add
pop
addb
rcl
fisttps
sub
or
js
jb
mov
sub
hlt
or
stos
and
and
jecxz
mov
lock
test
stos
inc
lret
mov
int3
inc
cs
test
mov
nop
jnp
out
sbb
and
iret
mov
cmp
stos
cmp
mov
adc
imul
cmp
jle
jmp
iret
cmp
mulb
pop
out
cmp
jbe
fidivs
mov
dec
in
nop/reserved
xchg
adc
repz
jns
pop
cmp
in
mov
stc
or
jle
push
inc
add
mov
repnz
les
decl
rclb
cmp
aam
int3
xor
roll
fiaddl
mov
jecxz
inc
sub
cltd
and
fidivrl
jmp
scas
stc
ficoms
mov
adcl
or
sub
imul
xchg
pop
int
cmovle
jbe
hlt
fdivs
into
ljmp
notb
lcall
cmpsl
ljmp
xor
pop
lods
cmp
lret
ss
dec
fbld
lret
cmc
aam
and
xor
int
add
dec
mov
xchg
xchg
out
sbb
aam
or
or
pushf
leave
stc
pop
js
sbb
pop
mov
push
dec
push
and
jmp
mov
inc
dec
xor
jp
adc
lea
inc
je
aaa
test
add
in
xor
test
mov
push
pop
out
ror
pusha
or
cmp
mov
mov
out
fucomp
data16
dec
mov
jle
loopne
sub
outsl
inc
mov
dec
xor
ljmp
lcall
imul
sub
pusha
cmp
ljmp
push
pop
pop
push
shlb
sbb
mov
inc
push
fidivs
lret
or
sbb
jge
movsl
fdivl
and
sub
std
push
decl
stc
fwait
and
shr
sarl
ss
in
xlat
cmp
stos
mov
repz
push
sub
inc
xchg
xchg
movsb
add
inc
lcall
jno
outsb
mov
ret
mov
rcrl
adc
in
test
xchg
cmpsb
imul
add
mov
ror
mov
stos
pop
xor
xchg
and
add
adc
pop
jecxz
push
mov
dec
popf
mov
push
sub
mov
push
into
rclb
popf
cs
int
les
mov
sub
negl
mov
inc
mov
cmp
add
scas
notb
add
xchg
sahf
scas
mov
outsb
sbb
cs
popl
add
arpl
ljmp
mov
or
repz
mov
mov
sahf
stos
or
jg
xchg
dec
inc
dec
loopne
je
sub
jle
jecxz
loope
sub
pop
dec
jb
inc
aam
enter
into
mov
jecxz
mov
cwtl
test
clc
adc
ljmp
imul
in
addr16
push
push
arpl
sbb
aas
inc
mov
dec
lret
js
scas
out
sbb
sbb
out
dec
jmp
repnz
adc
sub
adc
jmp
aad
dec
mov
je
pusha
jmp
sarl
cmp
daa
test
inc
xchg
or
xchg
sti
fcoml
push
pop
repz
dec
push
jge
les
mov
add
xchg
sar
mov
cs
inc
stos
or
inc
xor
ja
mov
jno
add
fs
je
pop
xchg
sub
pop
test
stc
push
adc
sbb
in
shlb
adc
fdivrl
or
mov
stos
popa
insl
mov
push
in
aam
xchg
push
loop
mov
mov
xchg
jecxz
leave
pusha
mov
lock
cmp
mulb
or
repnz
movsl
push
push
add
lcall
rcrl
mov
push
xor
jbe
sub
pop
inc
iret
or
jge
xor
mov
pushf
cld
pop
les
mov
xlat
loope
adc
xor
es
xchg
pop
xchg
pop
cmp
sub
loopne
lds
hlt
repnz
in
mov
mov
mov
daa
int3
push
xchg
sbb
mov
mov
cmpsl
or
jecxz
leave
scas
loope
popa
mov
ret
jns
xchg
sub
outsl
and
fxch
out
call
insb
sbb
test
imul
dec
add
push
inc
xchg
sub
push
push
add
into
test
xlat
scas
xor
outsb
int3
jmp
push
ucomiss
mov
loope
fdivrs
dec
in
mov
xchg
add
dec
test
jle
push
int
arpl
xchg
bound
out
jg
add
mov
xchg
xor
ljmp
xchg
add
addr16
orb
idivb
fwait
mov
or
pop
mov
test
stos
into
push
and
xchg
adc
and
popa
jp
pop
cmove
sbb
or
popa
mov
mov
or
push
pusha
xor
mov
jb
imul
pop
fcmovnb
dec
int
pusha
push
iret
fwait
ds
jl
jp
xor
loope
push
aaa
adcb
adc
insb
sbb
popl
inc
cli
push
cmp
mov
and
sarl
cmp
adc
xor
mov
stos
mov
das
lret
add
pop
cmp
xchg
jb
push
jmp
idiv
lcall
push
and
and
or
mov
mov
mov
pusha
loop
shl
pop
pop
mov
fnstsw
dec
gs
repnz
jb
jp
pop
scas
xchg
jecxz
lcall
fucomi
or
in
out
xor
aam
add
dec
cld
je
add
jl
xchg
int
mov
rclb
rol
or
adc
pop
mov
push
out
loop
sub
lret
fidivl
in
int
in
inc
jbe
ss
jbe
adc
fwait
sbb
xchg
or
insl
rcrb
push
lea
lea
inc
push
out
lcall
inc
imul
xor
xor
test
js
test
insl
js
ds
lcall
pop
adc
aad
sub
cmp
pusha
jecxz
adc
repnz
xor
mov
cwtl
movsl
adc
mov
pop
xchg
jmp
leave
aaa
lcall
inc
inc
imulb
sbb
cmp
inc
outsb
or
and
rcrl
mov
adc
fistpll
out
xchg
ficoms
mov
push
sbb
in
push
rclb
xchg
pusha
arpl
push
daa
popf
fistl
ss
ja
push
insb
insl
sub
jo
sarb
adcl
inc
xor
and
xchg
clc
cmp
lods
push
adc
test
cmpsb
push
testb
inc
jecxz
out
rcr
pop
jg
or
scas
cmpsl
in
js
mov
mov
cmp
shlb
bound
push
loop
lret
outsl
mov
popf
xor
clc
dec
sub
or
xor
pop
sbb
js
cmpb
std
xchg
in
xchg
sbb
loop
lret
rcrb
mov
sbb
je
mov
push
mov
ret
adc
std
cmp
movsl
mov
enter
mov
add
lret
jne
pop
in
jmp
dec
dec
pop
arpl
pushf
loop
scas
mov
mov
in
mov
pop
sub
mov
jmp
movsl
fsubs
mov
jae
fwait
in
dec
adc
push
dec
add
mov
cmpsb
inc
or
outsl
mov
rorb
dec
loop
cmp
dec
movsb
fldcw
test
inc
sub
xor
in
jp
insl
pop
add
inc
dec
push
ja
aad
gs
push
push
and
inc
les
ljmp
add
cltd
or
add
jnp
in
in
inc
cmp
aad
repnz
ja
pushf
xor
in
push
popl
mov
mov
iret
xor
es
mov
daa
insb
and
movsb
popf
mov
add
loope
xor
pop
pusha
push
xor
sub
js
mov
push
or
fwait
jle
call
repz
fmull
ja
test
jno
loope
mov
aas
mov
aad
jmp
add
into
fdivrs
fwait
sbb
jnp
ljmp
insb
sbb
jl
push
inc
nop
mov
in
imul
dec
out
out
mov
jge
int
mov
les
test
lcall
xchg
fidivrs
les
jbe
mov
jp
push
mov
arpl
add
jo
scas
aam
imull
sbb
adc
sbb
or
aam
ljmp
rorb
hlt
push
add
sub
aam
clc
leave
daa
mov
lcall
int
cmp
sbb
stos
popf
shll
inc
aam
add
rol
icebp
or
xor
rorl
push
pop
sbb
add
lds
cmc
imul
cmp
lods
xor
sub
pop
sbb
and
cmp
add
or
fwait
mov
push
xchg
mov
leave
mov
or
arpl
pop
and
into
cmp
xor
leave
inc
lahf
inc
shll
mov
dec
dec
add
xor
or
dec
xchg
xor
orb
lcall
mov
jl
inc
cld
push
jg
lock
cs
xor
sbbb
orl
push
push
dec
fcomps
aas
arpl
inc
pop
mov
jle
movsb
push
dec
outsb
into
sbb
jnp
dec
aas
push
push
jno
cmc
mov
sbb
dec
pop
sub
inc
mov
jnp
jmp
mov
or
cmp
and
ret
loop
sbb
jae
sub
sbb
add
mov
push
cmp
sub
rorb
outsb
jae
jg
ret
dec
dec
daa
push
inc
fldcw
idiv
inc
hlt
lds
add
sbb
dec
movsl
imul
and
daa
gs
jns
add
aaa
pusha
or
mov
test
aam
push
inc
ror
mov
cmp
jmp
push
jle
mov
pop
out
dec
in
int
mov
dec
inc
sub
adc
jb
dec
pop
and
adc
adc
mov
shll
pop
pop
mov
out
loope
fadds
adc
jns
sub
pop
sti
mov
xchg
daa
xor
shll
jne
push
dec
inc
inc
lcall
leave
mov
pop
mov
cmp
aad
cmc
xor
and
jne
sbb
push
cmp
cwtl
out
cmpsl
xor
fcompl
loopne
lea
lcall
pop
pusha
enter
fcoml
sub
ljmp
mov
bound
push
js
insb
aam
sub
and
ja
mov
push
sbb
insl
ljmp
mov
test
pop
sarb
mov
aas
imul
and
xor
and
dec
xchg
jo
aam
lods
sbb
int3
aam
adcb
dec
or
out
mov
push
mov
in
test
dec
mov
sbb
lds
push
and
imul
jp
int
mov
mov
pop
movsl
insl
sahf
imul
loop
lahf
imul
or
cmpsl
xchg
mov
dec
mov
jo
xchg
or
dec
cmp
or
cwtl
in
icebp
mov
xlat
ss
dec
psubq
jno
push
mov
push
stos
pop
xchg
ss
out
cli
dec
xchg
mov
int
insb
xchg
ja
shlb
dec
mov
lcall
imul
inc
jns
sarb
pop
adc
sbb
lahf
mov
loope
push
push
imul
pop
push
ret
inc
dec
andl
adc
in
inc
cmp
add
pop
pop
mov
jg
mov
or
sbb
test
mov
jo
jmp
mov
sub
and
imull
cmp
mov
and
dec
scas
cmc
imul
out
cmpl
mov
sbb
mov
pop
xchg
jne
out
mov
cmp
push
adc
ret
jl
enter
es
int3
cmc
sbb
sbb
stos
dec
pop
ja
jno
out
dec
ss
sub
cli
dec
arpl
xchg
fisttpll
fnsave
pop
jl
mov
aam
out
loop
inc
push
fdivs
in
testl
pop
addr16
xor
jg
mov
push
es
stos
sub
out
add
xlat
dec
jne
rclb
scas
ds
mov
pop
test
aas
cli
pop
mov
fnsave
ret
mov
xchg
lret
jo,pt
dec
and
nop
sub
xchg
das
leave
push
xor
add
sub
mov
xchg
xor
mov
shll
sbb
test
mov
jl
mov
setne
mov
jno
and
testl
or
push
dec
in
mov
arpl
push
arpl
mov
ret
stc
mov
jae
xchg
ljmp
inc
pusha
stc
pushf
sub
mov
jbe
sbb
and
sub
in
std
sbb
xchg
lods
or
addr16
mov
mov
mov
out
out
js
xchg
clc
imul
ret
bound
arpl
lcall
add
repnz
loopne
repnz
flds
je
mov
scas
mov
fisttps
outsb
pop
ljmp
push
outsl
mov
mov
cmp
or
adc
out
mov
sub
stos
jle
divl
xor
lock
xlat
pop
out
dec
mov
push
push
xor
xchg
repz
inc
mov
jmp
cmpsb
test
cwtl
mov
inc
mov
ja
sbbl
jg
and
push
cwtl
xchg
scas
imul
test
in
loop
sub
jae
fdivrs
adc
shr
repnz
inc
cltd
jae
cmc
cmpb
mov
repz
out
hlt
xchg
clc
lock
cmp
dec
mov
ljmp
xchg
je
mov
outsl
aam
jmp
mov
sbb
insl
stc
mov
push
mov
sub
mov
sti
mov
xchg
mov
stc
in
sbb
loope
mov
in
lods
xchg
xchg
cmp
xchg
sub
mov
fsubp
sbb
fidivl
pop
out
cmp
rorl
mov
xlat
js
stos
jne
ja
cmp
fisubrl
out
addl
cli
sub
cmp
scas
ret
dec
sub
mov
push
jbe
out
enter
inc
and
stos
jl
mov
push
outsb
subb
push
pop
repz
mov
adcb
mov
sar
dec
jae
pop
mov
jb
inc
aas
push
fisttpl
mov
cmpsb
lea
and
pop
push
fs
clc
jns
les
sub
rorl
rolb
jns
outsl
or
xchg
inc
popf
imul
jo
imull
stc
mov
push
cmp
in
ds
push
xor
xchg
ds
pop
imul
in
inc
and
mov
loope
mov
mov
dec
jo
lds
xchg
shrl
pop
dec
inc
test
clc
cmp
imull
xor
mov
cmp
incl
aas
cli
enter
push
lock
rolb
add
push
dec
push
pop
cmpl
and
adc
fbstp
cmp
or
mov
mov
pop
icebp
mov
iret
lcall
push
jbe
dec
push
addr16
fmulp
or
fistps
xchg
mov
xchg
xchg
sub
xchg
fwait
lock
mov
out
adc
push
or
or
mov
aas
xor
push
pop
push
loopne
pmaxub
mov
std
mov
pop
inc
xchg
mov
xlat
aad
pop
dec
pslld
enter
fs
adc
in
push
mov
lock
cmp
add
pop
mov
les
xchg
mov
cld
enter
jae
pop
pop
adc
xlat
cmp
and
mov
cmp
and
mov
in
sti
inc
iret
adcl
fidivrs
jmp
repnz
jge
in
dec
call
jbe
pop
inc
adcl
popf
mov
cmpsl
sahf
fdivs
xchg
add
or
jle
mov
mulb
orb
xchg
lock
mov
jnp
jnp
mov
loopne
push
das
cltd
mov
dec
jle
pushf
mov
imul
je
mov
sbb
repz
cmp
push
jne
repz
mov
test
xor
adc
dec
and
mov
mov
dec
adc
leave
ret
jle
xchg
mov
pushf
sbb
push
mov
mov
test
push
sub
jbe
or
and
ljmp
dec
loop
inc
push
push
cltd
loop
cmpsl
cld
cmp
pop
shll
cmp
out
test
adc
jb
push
mov
inc
cmp
adc
sbb
lret
add
mov
out
mov
dec
inc
mov
sbb
lds
push
fdivl
and
stc
scas
ljmp
icebp
dec
xlat
mov
lods
scas
stc
fstps
lods
fwait
scas
mov
enter
je
insl
cli
addr16
dec
movsb
stc
and
sbb
adc
jb
iret
dec
adc
xlat
jl
les
call
orl
fidivrl
mov
jecxz
out
outsb
cld
add
add
jns
imul
mov
jne
je
pop
decl
cmc
sub
test
cmpsl
pushl
mov
xchg
lret
mov
xchg
mov
jae
jle
cmp
push
mov
xchg
jns
test
mov
and
push
fwait
mov
mov
mov
out
dec
pop
shrb
mov
dec
adc
xor
dec
push
and
cmp
lret
cmpl
sahf
push
fwait
arpl
inc
cmc
inc
addr16
jns
decb
sub
dec
cmp
mov
addl
popf
rol
adc
les
mov
xchg
xchg
jo
xchg
inc
je
push
pop
sub
add
xchg
gs
add
push
pop
xor
mov
adc
jne
scas
adc
aam
mov
or
jmp
packssdw
mov
pop
mov
inc
inc
push
inc
xchg
lcall
mov
sub
push
fs
cmp
dec
fwait
mov
jp
jge
sbb
mov
js
jge
cmpsb
push
andb
pusha
negl
jg
pushf
movsl
outsb
sub
pop
sub
shrl
sar
mov
in
shll
je
out
xchg
in
jecxz
xor
or
std
pop
add
or
pop
xchg
dec
cmpsl
pop
push
popa
mov
inc
ffree
lret
sbb
es
out
sub
fwait
xor
mov
andl
sbb
cmc
jl
jecxz
cs
push
push
mov
or
push
pop
xor
orb
sub
addr16
in
pop
or
or
fisubrl
mov
ljmp
mov
xor
repnz
leave
dec
pop
mov
scas
scas
outsb
cmp
pop
mov
std
xchg
mov
idivl
int
pop
daa
inc
cwtl
mov
inc
andl
pushf
call
xchg
xor
ja
mov
adc
fcomps
cmc
inc
rclb
popf
push
xor
or
lds
pop
adc
movsl
repnz
mov
sub
pop
push
add
dec
imul
push
mov
mov
xchg
cmp
fistpll
fsts
sub
imull
or
pop
push
and
movl
fwait
jb
mov
mov
std
adc
int
mov
dec
out
fnclex
xchg
insl
push
rclb
jg
push
xchg
or
and
fstl
mov
xchg
aaa
test
dec
fsubs
dec
in
stos
xchg
mov
adc
lds
jae
cmp
inc
ret
sub
dec
mov
pop
push
add
mov
lods
and
sbb
sub
enter
pushf
test
and
and
aas
cmp
loopne
mov
roll
push
inc
lret
mov
pop
jge
aaa
lock
call
subb
mov
aas
or
outsb
pop
icebp
incb
cltd
mov
stos
ficomps
mov
cmp
shll
loopne
mov
shrb
movsb
mov
add
lds
inc
testl
pusha
enter
arpl
in
sbb
pop
mov
mov
popf
or
popa
lret
shr
test
cs
addr16
ljmp
jg
out
adc
insl
mov
mul
insb
ja
jge
fcom
inc
or
add
and
dec
aas
cmp
cmp
popf
xchg
push
mov
inc
les
je
mov
test
in
mov
mov
sbb
xor
imul
mov
push
addl
pop
jo
sub
sbb
jo
popa
sbb
cmp
out
sbb
je
adc
pop
aaa
push
xchg
stos
xchg
out
cmp
add
jg
and
or
mov
lods
cltd
ds
sub
in
pushf
or
rclb
or
sbb
mov
lock
push
add
xchg
push
and
sub
popf
nop
push
or
sahf
rcr
aas
cmp
and
jge
pop
push
imul
imul
inc
int
xor
jae
lea
inc
pop
dec
out
imul
lret
in
xchg
jge
test
push
mov
pop
and
sub
into
ds
mov
movb
popa
jecxz
xor
xchg
mov
arpl
jle
insb
mov
shrb
inc
data16
fwait
xor
insl
adc
imul
mov
insb
push
adc
inc
fldt
sub
xlat
gs
pushf
rcr
ss
pusha
in
pop
lahf
nop
mov
cli
mov
jae
or
and
xchg
fs
rol
movsb
clc
fisubs
inc
imul
je
test
ret
mov
imul
push
mov
jbe
xor
push
nop
and
outsl
mov
js
andl
mov
cli
push
iret
adc
jo
cmpsl
cmpsl
jecxz
add
pop
jns
out
mov
pop
and
mov
fcmovb
and
sbb
dec
imull
out
lret
sbb
cli
dec
cmp
mov
data16
sub
movsl
lret
jb
mov
pop
fadds
pop
push
inc
cmp
fldenv
push
test
addr16
jl
xchg
lods
js
adc
popa
push
sarb
push
stos
pop
add
int3
xor
pusha
adc
sahf
popf
out
clc
mov
or
sub
scas
mov
scas
xchg
or
pop
cltd
pop
cmp
stos
jnp
arpl
ja
pushf
mov
adc
xor
sbbb
adc
push
mov
push
pushf
fdivr
or
xchg
pop
mov
sbb
call
push
xchg
mov
jno
inc
repnz
sub
loope
mov
add
push
push
sub
std
idivb
out
and
out
test
jb
outsb
insb
mov
mov
cwtl
push
pop
dec
add
cmp
mov
int
lock
pop
aam
scas
fcmovbe
mov
ljmp
mov
dec
xor
subb
adc
adc
out
fidivrs
add
ja
jmp
ds
jmp
inc
adc
orl
cli
adc
data16
outsl
shlb
push
imul
outsl
enter
hlt
rorl
inc
jle
cmpsl
adc
leave
pop
clc
mov
mov
movsl
repz
jno
std
loopne
out
popf
loopne
mov
iret
imul
xor
imul
ljmp
mov
dec
push
jp
neg
ja
cmp
sub
cltd
imul
loope
pop
fstpt
cmp
test
push
lahf
mov
xchg
call
mov
jp
push
inc
push
icebp
jb
xor
push
push
scas
fdivs
jo
iret
cmpsl
js
popa
sub
pop
ret
shr
mov
and
out
loopne,pt
cmpl
outsl
cltd
xchg
iret
dec
xchg
xchg
rorb
mov
push
js
or
stc
cmpl
dec
ret
pop
pop
inc
sbb
jb
xchg
xor
or
xchg
sub
pop
jae
cmp
sub
ds
in
mov
cmpb
sub
es
pop
cmpsl
fcompl
sbb
mov
push
cmc
add
mov
xor
xchg
adc
cmp
and
into
fsubrl
ret
rorb
cwtl
push
loope
add
jmp
lret
or
pop
xchg
inc
movsb
jp
add
out
loopne
mov
mov
sub
or
into
enter
sub
sbb
xchg
pop
xchg
cmp
mov
add
rcll
mov
push
push
jns
push
mov
add
sub
pop
lods
and
mov
and
dec
add
repnz
pop
popf
inc
dec
lcall
jge
mov
and
adc
shll
shrl
add
xor
cmc
cmp
and
xor
cmp
xor
outsl
ja
push
ljmp
aaa
mov
xchg
dec
aam
cltd
in
stos
or
jnp
sub
rol
xor
add
sub
repz
inc
mov
sti
inc
push
inc
push
fwait
leave
jmp
int
lret
adc
mov
mov
push
mov
push
fidivl
ss
ljmp
mov
cmc
xor
push
not
mov
mov
jns
xchg
jl
xchg
popa
les
punpckldq
sbb
sbb
cmp
push
hlt
int
sub
gs
or
mov
cld
inc
jecxz
and
mov
iret
fistpl
and
and
pusha
jno
push
int
leave
cmp
addl
cmp
xchg
mov
cmp
ss
pop
stos
pop
lds
pop
fstpt
adc
bnd
addl
fstl
loope
loope
insl
push
cmp
stos
push
pop
fildll
dec
notb
movsl
xchg
aad
inc
lret
or
sbb
loopne
adc
and
sub
lea
int
sub
push
arpl
or
shrl
add
cmc
in
jne
sub
stos
clc
cwtl
mov
xchg
jge
cmc
movsb
rorb
fs
icebp
pop
in
in
insb
push
sahf
adc
mov
bound
insb
lock
movsb
adc
in
mov
mov
and
xor
popf
decl
in
mov
mov
insl
xchg
sbb
inc
nop
jl
cs
ljmp
lcall
mov
push
cs
icebp
push
or
in
ret
cmpl
dec
xchg
or
mov
mov
jmp
cmpb
xor
mov
dec
dec
in
lock
test
or
insb
push
data16
ja
lcall
mov
pop
cltd
dec
mov
adc
xchg
cwtl
jmp
je
cmp
outsl
inc
or
in
adc
sti
sbb
sbb
sbb
mov
inc
scas
mov
int3
bound
pushf
xchg
or
in
sbb
or
mov
cmpb
mull
enter
mov
arpl
aam
sbb
mov
add
xor
stc
call
add
push
inc
adc
fs
int3
pop
shlb
mov
notb
rcrl
xor
cld
pop
ss
ljmp
mov
xchg
xor
imul
sbb
add
jo
adc
arpl
cmp
and
push
or
into
sbb
mov
addl
push
decb
push
sarb
jns
std
sub
ja
mov
push
push
shll
add
movsb
mov
xchg
mov
shll
andb
out
sub
js
testb
adc
int
dec
cmpsl
and
mov
or
test
or
dec
ret
mov
cmp
mov
cmp
in
decl
xor
push
mov
pop
int
adc
rcll
dec
or
dec
lret
inc
js
shrl
lods
cmp
push
out
xor
out
xchg
mov
or
mov
push
fcmovnbe
cs
test
dec
push
fists
insb
xor
push
decb
jno
iret
arpl
inc
pop
mov
mov
pop
sbb
je
inc
push
rcrb
arpl
push
mov
mov
xor
pushf
lahf
sub
jbe
dec
mov
push
xchg
inc
fs
xor
pop
out
insl
sub
dec
lahf
daa
insb
xlat
push
sbb
mov
shrb
mov
mov
jbe
mov
mov
sahf
bound
dec
push
andb
sbb
mov
add
push
lea
jle
testb
je
out
in
inc
outsb
fdivr
decl
das
ror
push
repz
es
cmp
shl
cltd
sbb
insl
pop
movsl
hlt
insl
pushf
or
pusha
mov
sub
stos
movsl
mov
out
sti
cld
push
mull
andl
jns
subl
dec
or
jnp
jns
jbe
ja
pushf
fmuls
loopne
xchg
sahf
push
jmp
ret
sub
aaa
add
out
mov
cmp
out
lcall
jl
add
shr
cmpsl
xchg
dec
daa
sti
mov
out
mov
xchg
or
lods
mov
jge
jno
mov
mov
ja
ss
and
cmp
jmp
and
sbb
mov
out
pusha
jmp
push
scas
mov
sbb
mov
inc
insb
aam
mov
pop
cmp
lret
mov
je
lock
outsl
sarl
divb
push
jmp
xor
xchg
enter
mov
rcrb
in
pop
mov
in
dec
leave
and
mov
bound
dec
push
js
xlat
or
sti
scas
rcll
mov
lret
iret
lock
rcrb
xchg
data16
shlb
outsb
jnp
push
bound
xor
ljmp
push
push
cltd
out
sub
pop
xchg
jnp
insb
mov
lret
mov
cmp
dec
fisttpll
dec
jp
sbb
inc
dec
or
jb
aaa
xchg
sub
int
adc
andb
ja
insl
insb
jnp
dec
icebp
ljmp
and
and
lods
mov
mov
mov
pop
lock
mov
lds
mov
int
jb
sbb
push
sbb
xchg
mov
push
push
xor
lds
lds
test
fwait
addl
pop
sbb
fisttps
push
stos
aaa
out
mov
pop
shlb
bound
in
add
and
sbb
aam
lock
inc
cmpsl
cmpsl
jmp
les
int3
mov
out
add
add
pop
mov
mov
xchg
jae
iret
adc
int3
fs
inc
test
or
jge
mov
add
jp
shll
call
cmp
add
cmp
adc
out
icebp
xor
mov
int
fldcw
mov
cmpsl
loopne
icebp
or
lcall
pop
shlb
cmp
pop
clc
mov
outsb
push
adc
adc
xchg
sbb
popa
inc
out
jg
xchg
test
clc
cmp
outsb
mov
sub
mov
sub
in
mov
dec
movl
idivl
shlb
jl
xchg
dec
adc
into
std
sti
adc
sbb
leave
xacquire
fsubl
mov
mov
negb
inc
jne
push
dec
cmp
mov
and
inc
pop
ja
mov
push
imul
sbb
cmp
std
cmp
mov
mov
jnp
test
or
cld
jbe
das
mov
fwait
divl
leave
xor
inc
mov
lea
xlat
lods
or
cmp
sti
push
sbb
sahf
or
adc
rcr
mov
jecxz
sbb
scas
ret
mov
pop
std
jle
push
and
sub
imul
mov
add
out
mov
gs
pop
inc
mov
push
and
out
in
mov
and
in
lret
fdivrs
pop
and
dec
push
pop
std
aad
jp
loope
movsl
and
pop
mov
sub
inc
jnp
cmp
repz
mov
dec
loope
push
out
mov
imul
dec
and
push
mov
jle
dec
or
push
int
popa
js
mov
inc
in
int
test
pop
stc
je
lret
mov
sub
iret
addr16
sub
rol
addb
cmp
sbb
orl
sahf
xlat
push
jbe
cmp
push
xchg
mov
cmp
push
sbb
sbb
mov
inc
pop
pop
fisttpl
dec
arpl
jmp
cmp
fsubp
insl
adc
or
add
xchg
inc
xor
xor
js
cmp
jns
pushf
adc
add
push
out
xlat
inc
lret
sbbl
aam
and
pop
pop
cs
mov
aas
jae
pop
jmp
repz
test
jecxz
in
mov
inc
sub
aad
mov
cmp
xchg
adc
push
pop
xchg
or
fisubl
fisubs
sbb
lahf
stos
jecxz
adc
fwait
call
fimuls
sti
pop
jle
and
lahf
jg
dec
pop
inc
push
sbb
cmpsb
xchg
mov
ds
mov
xchg
or
xchg
decl
sbb
xor
jno
test
pushf
xchg
mov
into
addr16
jle
test
inc
lods
or
inc
int3
push
xchg
sbb
popf
sbb
jecxz
dec
ss
ret
cwtl
aad
shl
xchg
stc
xor
jne
cmp
test
jbe
adc
incb
rcl
dec
in
push
add
push
push
inc
clc
loope
mov
adc
jne
sbb
pushf
cmp
cltd
xor
xor
bound
movsb
aam
mov
jns
inc
sarl
addb
or
sub
cli
xchg
fcomp
fcomps
daa
cltd
and
push
sub
cli
test
stos
pop
mov
and
aas
xchg
adc
inc
sbb
leave
jns
out
push
or
sub
inc
or
dec
int3
into
jl
inc
mov
fsubrs
dec
outsb
in
mov
and
add
and
aas
andb
sbb
test
mov
loopne
or
jae
pusha
jno
clc
inc
mov
lods
out
push
inc
pusha
cmpl
push
dec
sub
test
inc
xchg
movsb
ds
jle
iret
sub
add
pop
push
mov
stos
fiaddl
out
and
add
sbbb
outsb
data16
lea
push
mov
test
imul
sbb
mov
xor
xchg
xchg
jnp
nop
fsubl
insl
sub
into
bound
imul
stos
jae
jne
divb
push
stos
test
add
push
cmp
in
pusha
arpl
xchg
ljmp
mov
sbb
roll
adc
sbb
in
sbb
bound
nop
dec
or
mov
sub
or
test
sbb
pop
sbb
sub
jb
test
cld
imul
decl
repz
loope
sbb
bound
sub
jbe
adc
cmp
out
or
sti
push
neg
ret
add
xchg
mov
or
jecxz
aas
add
xchg
es
jns
xor
icebp
call
xchg
pop
and
stc
es
testl
mul
shll
push
pusha
hlt
jne
out
ss
in
push
cld
pop
xor
mov
fistpll
lret
test
inc
pop
fs
jge
pusha
xchg
jns
mov
and
jo
sbb
mov
sub
std
or
jae
ret
sub
cmpsb
enter
leave
cmpsb
push
std
movsb
xor
sub
icebp
notl
stos
jbe
jle
inc
fs
add
clc
mov
pusha
jns
sub
ret
cltd
jl
sbb
jmp
mov
jge
add
cmp
inc
mov
or
dec
sub
push
mov
pop
enter
sub
insb
test
testb
pop
adc
jb
add
ss
dec
mov
gs
xchg
ret
sub
pop
cmp
roll
sub
in
xchg
lods
inc
pop
dec
adc
ret
pop
push
ss
xor
divb
adc
add
pop
lods
icebp
shl
enter
stos
dec
jle
push
test
hlt
push
roll
aam
shlb
cmp
and
jl
out
mov
or
xchg
pop
in
cmp
jnp
inc
lret
idivb
ret
jae
int
xor
idivl
movsl
inc
sarb
xchg
mov
jbe
into
arpl
jmp
jno
adc
and
rorb
popf
mov
xchg
aam
inc
jp
lods
test
push
dec
js
sbb
ljmp
push
andl
mov
or
in
test
push
and
jns
xchg
repnz
sub
enter
movsl
pushf
loop
cmp
lods
repnz
leave
push
adc
aam
inc
dec
adc
cmp
jg
or
xchg
cmpsb
push
dec
push
mov
or
xor
ret
push
inc
cmp
dec
js
xchg
popa
aad
jb
jns
mov
imull
icebp
cmpsl
xchg
or
aas
push
xchg
add
and
movsl
mov
dec
cs
or
insl
sbb
outsl
fcomps
repnz
in
xchg
xor
xor
pop
mov
stos
or
fwait
dec
pushf
pop
cli
cld
mov
cmpsb
pop
mov
cmp
in
orb
mov
mov
sub
mov
stos
sbb
in
sbb
scas
mov
cld
jmp
ss
mov
xor
cltd
sbb
push
inc
inc
jle
ret
mov
inc
pop
shl
fucomip
in
out
fnstsw
jno
cmc
je
xchg
sub
inc
dec
push
cmp
push
dec
sbb
sbb
fmull
fnstcw
lret
cmp
in
mov
ljmp
jge
mov
or
adc
loopne
out
pop
or
push
pushf
aaa
and
bound
icebp
adc
mov
push
inc
mov
iret
icebp
jg
xchg
iret
shll
add
xor
pusha
cmp
int
push
push
mov
pop
add
pop
roll
imul
pop
sbb
scas
mov
or
adc
addr16
mov
mov
mov
ffreep
push
movsb
cmpsb
add
xchg
rep
xor
aam
push
jg
int3
pop
orb
cli
add
xor
inc
dec
cmpsl
or
inc
ret
sub
pop
in
jp
lret
mov
mov
pop
pop
out
movl
sub
inc
and
roll
xchg
jle
sub
test
lcall
dec
das
or
mov
push
sahf
mov
cli
and
out
pop
icebp
dec
call
mov
and
arpl
and
lcall
mov
lods
mov
insl
stos
cmp
jae
cmp
mov
adc
popf
sub
dec
lret
das
out
jg
sbb
mov
sub
lea
arpl
or
cmpsl
mov
aas
sbb
ret
adc
cmp
sti
xchg
orl
incb
xor
lock
inc
inc
popa
pop
mov
jge
mov
rolb
aad
je
xchg
outsb
cmp
jno
mov
pop
popf
xchg
xchg
inc
clc
dec
mov
xor
sbb
into
mov
jmp
scas
imul
xor
mov
lret
imul
fisubs
sbb
add
das
dec
mov
hlt
fbstp
movsb
dec
and
aaa
enter
cmpl
xor
add
inc
push
sbb
scas
sub
out
fbstp
and
data16
popa
mov
and
and
lds
call
inc
popa
xchg
and
jmp
xchg
cmpsl
inc
ret
jnp
shlb
xchg
cmp
popa
mov
jnp
push
lods
cmp
int
shlb
adc
jge
hlt
inc
inc
fimuls
cli
aas
inc
div
daa
insb
mov
cs
notb
lods
mov
ljmp
dec
je
sub
lcall
flds
call
inc
sub
dec
test
in
das
sbb
sub
je
movsb
cmp
xchg
jp
popf
decb
jl
jo
js
mov
icebp
gs
data16
mov
or
dec
mov
enter
loop
cmp
pop
aad
int3
push
or
xchg
enter
and
dec
shll
roll
shl
and
ljmp
fisubrl
sahf
test
std
mov
rcr
pop
filds
mov
mov
push
insl
cmp
imul
scas
xchg
rcll
jbe
dec
nop
jecxz
out
dec
into
sub
xor
sub
mov
fdivs
mov
sub
leave
je
into
push
push
xchg
mov
aad
loop
sub
push
inc
hlt
push
mov
add
push
addr16
in
sub
pop
mov
and
cli
sbb
sbb
add
push
mov
imul
rcrb
cmpsb
sbb
mov
xchg
dec
jmp
jmp
cwtl
adc
lcall
inc
add
mov
mov
call
and
pop
push
and
lea
insl
push
in
leave
mov
sahf
stos
push
jb
jnp
movsb
outsl
xchg
rcll
lret
mov
push
push
jg
pop
pop
push
sbb
stos
loop
push
in
cmpsl
xchg
xchg
inc
xchg
stos
cld
jle
scas
push
push
xor
push
sbb
out
add
xchg
push
lea
mov
mov
push
jmp
push
jno
call
and
jb
mov
movsb
mov
mov
xchg
push
inc
jbe
push
imul
in
xchg
cmpb
xchg
out
frstor
call
aam
inc
fwait
je
cmpsl
jne
xchg
jo
subb
ret
in
mov
fcomps
js
or
sbb
cmp
mov
insb
in
pop
cmp
stc
jge
cmp
mov
sbb
loopne
lret
mov
mov
adc
fs
movsl
or
dec
mov
imul
das
shl
ret
clc
xorb
pushf
or
iret
lds
sub
hlt
fdivrs
jae
sub
add
sbb
mov
or
mov
imul
add
out
fwait
push
mov
int
jb
dec
cs
mov
dec
ds
push
sub
out
repnz
fabs
jg
mulb
add
fstps
fstpl
pop
push
inc
test
mov
imul
xchg
idiv
mov
test
test
cmp
cmc
jg
je
or
inc
mov
and
lcall
inc
repnz
cmpb
es
hlt
into
cltd
addl
sbb
push
and
insl
ret
mov
xchg
and
and
push
inc
push
jnp
and
fisttps
push
scas
fidivl
mov
mov
stos
push
cmp
jne
daa
mov
js
mov
push
lock
dec
jo
cli
scas
inc
inc
je
sbb
or
aad
mov
mov
fs
push
ds
add
ds
aad
shlb
xchg
ret
fldenv
nop
mov
or
dec
jge
mov
inc
or
or
add
sub
int
cmpsl
lock
dec
and
mov
jp
cmp
mov
ss
lret
ret
int
or
jmp
call
adc
test
js
rcll
push
test
call
sbb
mov
test
ror
insl
fstpt
xchg
dec
rdpmc
push
lds
mov
cmp
add
adc
add
sub
push
shrb
xchg
rcr
or
gs
sub
fsubl
cmp
popa
ficompl
shrl
roll
subb
rorb
add
xlat
cmpsl
sub
inc
dec
cmp
in
dec
lods
in
mov
inc
pop
sub
lods
jmp
popf
mov
jmp
pop
subl
xchg
aas
test
pop
xor
xchg
mov
mov
xchg
repnz
stos
adc
xorl
add
sub
or
and
lcall
dec
mov
dec
cmc
mov
fwait
pop
sub
cmpsb
pushf
cmpsl
pop
popf
loopne
add
lret
mov
xchg
int
add
shll
mov
push
fisttps
addl
push
outsb
and
sub
push
test
stos
call
cli
stc
test
cmp
out
sbb
pop
xor
xor
test
repnz
test
sub
xor
inc
in
xchg
roll
mov
lods
and
insl
pushl
call
jle
test
pop
or
mov
cld
int
mulb
and
and
sub
movsb
fisttps
fldt
js
dec
push
xor
add
pop
cmp
jle
neg
insb
mov
mov
lahf
adc
lods
pop
pop
or
mov
shlb
scas
sub
push
in
inc
jecxz
push
and
push
sbb
ret
xchg
xchg
sub
add
pop
mov
popa
jnp
push
jecxz
or
xor
and
gs
xchg
and
stos
dec
test
dec
pop
sub
mov
xor
cltd
inc
out
movsb
cmp
mov
mov
mov
mov
cmc
mov
mov
mov
fisubrl
sbb
inc
ljmp
sbb
or
test
gs
ja
test
sahf
fcomi
mov
ficoml
lods
or
jp
flds
xchg
push
xchg
jl
fiadds
je
pop
or
sub
clc
sahf
dec
jae
lds
or
ret
fisubrl
inc
int3
sbb
test
ss
pop
sub
push
pop
pop
jmp
adc
push
or
fs
jmp
pusha
pop
jecxz
leave
sahf
dec
sub
pop
sbb
mov
and
imulb
inc
hlt
jp
out
or
mov
loope
pop
inc
jns
dec
sub
addr16
negb
loope
pop
sub
shlb
mov
movaps
idivl
push
out
out
sti
inc
mov
into
jg
mov
jl
arpl
into
fnstenv
push
mov
xchg
xchg
sub
stos
jns
jb
pusha
sbb
pop
fwait
rolb
test
sbb
jae
shlb
adc
gs
push
icebp
cmpsl
lods
ret
pop
push
mov
jnp
aam
jecxz
xor
enter
fldt
mov
mov
clc
cmp
jl
adc
iret
outsb
xchg
mov
inc
mov
popa
adc
lcall
xor
pop
mov
jbe
into
adc
ja
jl
sbb
movsl
mov
mov
outsb
scas
mov
mov
pusha
loopne
orl
cmp
xor
rcll
je
add
mov
bound
or
dec
nop
les
cmpsb
in
out
outsl
sbb
lahf
sbbb
push
mov
shlb
rorl
sbb
inc
imul
fstps
push
push
mov
ror
jbe
aad
sbb
cmc
stos
rcl
int
push
outsl
push
loop
adc
xor
cld
cld
js
mov
int3
pop
leave
clc
mov
fnstenv
mov
dec
xchg
daa
push
shl
mov
xor
add
jp
xor
repz
out
outsb
jge
and
xchg
adc
repnz
cli
mov
pushf
movsb
clc
andl
add
and
jg
jno
rcll
adc
sbb
dec
or
jns
call
push
sub
or
lret
fwait
mov
cmp
icebp
pop
popf
ja
in
imul
pushf
iret
jbe
dec
dec
iret
push
dec
cmp
mov
in
test
dec
imul
mov
jno
das
cltd
xchg
test
pop
stos
xor
jge
lret
jae
pop
jnp
jno
lock
cwtl
xchg
mov
adc
mov
pop
inc
pop
cld
jae
inc
or
pop
popa
mov
lahf
divb
dec
es
mov
idivl
cmc
jnp
fs
cs
inc
mov
loopne
or
cmpb
dec
inc
lock
adc
test
ret
sub
xchg
sbb
scas
ljmp
es
sub
inc
or
mov
rcrb
jae
aam
or
push
ret
sub
leave
sarb
jno
test
push
mov
pushf
mov
fdivl
into
stos
cld
or
mov
subb
mov
add
inc
fldcw
and
mov
add
mov
jnp
aam
ss
jb
push
lods
sub
mov
xchg
gs
add
repnz
fldl
jmp
in
cmp
popf
xchg
xchg
ss
sbb
pop
mov
push
or
les
into
cwtl
pop
xor
cmp
test
jno
mov
or
imul
cmc
xchg
mov
xlat
dec
out
jnp
dec
xabort
outsb
xchg
and
push
or
loopne
fnstsw
inc
popa
sub
push
mov
sti
ffreep
in
ljmp
dec
add
sbb
insl
add
hlt
punpckhdq
dec
pop
push
fwait
sub
data16
stc
shrl
sahf
mov
insb
jl
leave
loopne
adc
and
je
test
pop
in
inc
xchg
je
dec
aaa
push
test
mov
stos
inc
pop
andb
jnp
push
test
out
lea
loop
mov
xchg
repz
sbb
mov
jb
sbb
popa
jg
aaa
ficomps
ficoml
sub
jo
sbb
push
iret
xchg
jle
sbb
mov
repz
in
out
sub
popa
dec
ss
flds
mov
ficompl
aam
mov
cs
inc
or
adc
mov
pop
sbb
mov
xor
sbb
pop
cmp
fidivs
out
sub
sub
cmp
test
dec
sub
in
les
jno
pop
lahf
cmp
mov
dec
daa
dec
or
fldenv
adc
mov
cwtl
or
and
mov
inc
test
popa
sbb
mov
out
fadds
cli
movsb
adc
mov
dec
dec
stos
lods
stos
int
mov
popf
lahf
fisubs
mov
aad
pop
jnp
xor
ret
mov
jg
pop
pop
jl
insb
jo
or
icebp
jg
lock
cmp
dec
loopne
jge
int3
pop
jbe
sub
push
mov
jp
dec
and
in
lock
adc
push
stos
fdivs
addr16
test
sahf
or
shll
in
test
inc
mov
mov
push
xchg
jge
lods
popf
cmpsb
cmp
adc
jle
adc
xchg
shrb
stos
mov
mov
inc
gs
jnp
push
jnp
inc
push
notb
jge
dec
lea
das
addl
std
int
push
les
test
mov
pop
loope
iret
aad
test
rcrl
stc
lahf
cmp
bound
int
dec
mov
rolb
fcmovnu
loope
dec
mov
dec
mov
mov
loopne
jae
jecxz
dec
sub
mov
pop
or
movsl
shrb
addb
xor
adcb
aad
fsts
xchg
push
sub
xchg
mov
jbe
or
mov
nop
das
xor
aad
arpl
test
cmc
imulb
aad
sahf
xchg
in
xchg
lock
mov
lock
xchg
fwait
ja
arpl
pop
add
mov
mov
inc
in
flds
lcall
sbb
pop
cmpsb
loope
jecxz
je
aaa
ret
pop
enter
outsl
test
mov
loop
mov
dec
js
mov
push
sub
mov
out
or
and
fildll
dec
push
mov
jb
aaa
int
dec
push
xor
pop
mov
cmpl
lds
pop
movsl
mov
sbb
das
rclb
pop
mov
push
mov
cmc
fcoms
xchg
push
adc
push
popa
cmpsb
pushf
je
aas
cwtl
mov
cs
insb
imul
fs
cmp
mov
push
mov
dec
push
int
popf
adc
push
int3
fidivrs
and
dec
mov
hlt
inc
aam
out
dec
cmp
push
lcall
xchg
std
xor
dec
imul
test
adc
jb
sarw
stos
adc
fs
mov
adc
out
mov
out
pop
jo
in
pop
xchg
jle,pn
std
icebp
das
jbe
ljmp
sub
cmp
jbe
mov
stos
out
cmpxchg
pop
mov
daa
ror
sti
sub
add
cltd
push
xchg
add
sti
mov
fsubrl
insb
push
jg
push
sbb
inc
push
push
mov
pop
into
jl
int3
roll
jg
in
std
add
inc
pushf
pop
add
and
movsl
mov
imul
pop
std
daa
push
into
into
xchg
mov
repnz
stos
mov
imul
pop
sbb
loope
sbb
outsb
sub
in
jl
pminsw
mov
std
mov
movsl
hlt
mov
fadds
ret
hlt
jmp
outsl
push
fs
call
jmp
in
scas
sbb
dec
pop
push
and
adc
jns
xchg
cmp
stos
xlat
cld
add
mov
adc
lock
int3
repz
js
repnz
sub
push
inc
sbb
test
or
mov
lcall
jae
inc
pop
xchg
test
aam
dec
ja
push
or
pop
mov
popa
sbb
add
aam
jae
or
jmp
mov
movb
mov
pop
pop
push
bound
inc
adc
sbb
into
mov
or
push
insl
push
gs
rol
or
lock
pop
out
int
fistpll
xor
inc
inc
mov
mov
iret
mov
lret
outsl
ss
mov
stos
push
mov
or
fnstcw
jmp
loop
mov
lret
ss
jns
ficoms
push
mov
mov
sub
cmp
lret
push
ficomps
fisubrl
sub
xchg
out
push
mov
rep
add
aam
cld
insl
cltd
jle
repnz
mov
loopne
data16
or
dec
addr16
inc
sub
push
popl
stc
jne
pop
je
jne
mov
mov
cld
sub
aaa
xchg
lret
sbb
ljmp
in
int3
push
test
push
mov
push
aad
ljmp
mov
dec
insl
and
imul
sub
in
or
sub
xlat
ficoms
mov
enter
cli
outsl
jle
lret
add
inc
fsubs
inc
rorb
add
fwait
cld
out
mov
inc
lahf
or
xchg
lea
cmp
daa
pop
fwait
and
sbb
popa
dec
fsubrl
int3
shl
movsl
xorb
shrl
adc
out
stos
jno
jne
push
enter
mov
ja
lcall
push
arpl
cmpsb
shrb
insb
mov
pop
rcrb
insb
addb
push
xor
or
sbb
mov
in
dec
ds
or
adcb
rcrb
add
xchg
sbb
faddl
stos
data16
sbb
push
out
mov
or
and
test
xchg
nop
icebp
inc
nop
movsl
xchg
xor
loop
jb
fs
sbb
sub
inc
stc
leave
mov
xor
and
inc
fsubrl
mov
test
rcl
cmp
fcompl
add
sarl
iret
and
shlb
ret
outsb
daa
outsb
das
sahf
inc
ror
dec
jns
sub
sarl
daa
shrl
adc
in
in
aaa
xchg
xchg
fs
push
ljmp
sub
sub
pushf
or
or
adc
ljmp
fwait
repnz
dec
xor
dec
sub
xchg
lcall
push
or
sub
adc
mov
icebp
mov
cs
pop
push
mov
stc
mov
push
loope
inc
rorl
loope
push
xchg
jns
jmp
jo
xor
aas
xor
loop
mov
inc
xchg
fsubrs
out
int
cltd
repnz
std
dec
popl
inc
hlt
jp
lret
dec
push
repz
lds
icebp
jp
movsl
sbb
lock
pop
call
cwtl
loop
rcr
shlb
in
sbb
push
and
daa
daa
push
std
mov
xlat
nop
ds
test
dec
adc
dec
sahf
xlat
ja
jae
daa
gs
jo,pt
repz
loope
dec
pusha
rorl
jb
sti
fidivs
lods
aaa
shll
push
pushf
test
mov
jo
jg
fdivr
mov
jb
icebp
mov
and
inc
enter
and
lock
or
ret
nop
lods
jnp
imul
sub
sub
mov
out
pop
lods
xor
call
push
xchg
notl
enter
mov
xchg
add
dec
loope
rcl
sti
add
jne
icebp
jae
pop
loopne
adc
or
mov
test
sub
adc
cmp
add
inc
pop
leave
addr16
lds
push
sub
enter
ss
fld1
inc
push
add
ds
or
incl
sbb
mov
mov
xchg
mov
fwait
cmc
fsubr
cld
fadds
mov
push
pop
and
mov
adc
sub
jle
pop
mov
push
or
lcall
aad
mov
lcall
fsts
sub
inc
mov
add
jae
cmp
xor
ret
dec
fs
lcall
pop
pop
cs
pop
pop
int
xchg
ret
add
inc
fidivrs
push
out
sub
je
fdivr
and
xlat
sub
jg
jne
push
inc
std
les
test
pop
shl
int
mov
pushf
push
lods
ljmp
mov
lahf
ja
scas
shrl
into
add
cmp
sub
inc
les
mov
out
inc
cmp
sub
sbb
mov
stos
nopl
sub
js
mov
add
insb
push
repz
cmp
test
and
add
icebp
mov
xchg
imulb
pop
xchg
mov
mov
ja
adcb
jbe
cmp
test
repnz
lcall
inc
loopne
call
mov
jecxz
lock
pop
iret
xorl
pop
sub
rcrl
fldenv
inc
xor
lods
ja
xchg
test
add
out
mov
ret
imul
and
and
lret
stc
lods
mov
aas
loope
in
out
shlb
jecxz
les
lods
loopne
pop
shl
data16
and
rol
xor
mov
push
mov
push
sbb
das
sahf
mov
and
rolb
add
push
pop
bound
jmp
mov
pusha
push
cmp
and
jo
and
pop
xchg
push
stos
mov
pop
addr16
clc
int3
lods
jecxz
imul
test
sbbl
mov
lret
cmpsl
dec
sub
lock
mov
xor
shrl
push
mul
lahf
popf
pop
or
fsts
in
frstor
mov
mov
fiadds
ss
xor
xor
jbe
jne
dec
and
sub
xor
mov
sub
aad
mov
lods
cmp
xor
adc
sbb
insb
movsl
sbb
clc
aad
inc
orl
fiaddl
push
stos
lcall
data16
mov
push
lds
inc
push
outsl
movsb
das
lods
data16
dec
int3
pop
popf
out
scas
adc
mov
mov
mov
add
dec
leave
dec
das
xchg
jo
add
lret
inc
pushf
jnp
add
or
add
repnz
or
mov
jb
pop
leave
scas
push
xchg
roll
inc
jbe
sbb
int
xchg
shl
push
add
mov
gs
jno
mov
mov
jnp
mov
outsl
sarl
dec
ss
movsl
and
dec
aad
inc
adc
popa
movsl
jns
popa
filds
dec
pop
fisubs
xchg
mov
aas
jnp
xor
jno
jne
xchg
fscale
push
jge
push
mov
cltd
fsts
mov
fisubl
pusha
adc
fstpl
rcr
mov
mov
aas
daa
sub
sub
lea
add
aad
cmc
sbb
in
pop
cmc
adc
hlt
inc
xchg
ds
push
mov
out
mov
mov
aaa
mov
test
test
and
add
dec
inc
hlt
jns
xchg
cmpsb
lahf
push
fbstp
in
xlat
fldenv
sti
sub
xor
mov
jno
xor
sbb
into
xrelease
or
in
sbbb
dec
and
mov
cli
rol
gs
cmp
cltd
mov
out
outsb
adc
mov
call
into
xchg
xor
mov
xchg
repz
aas
inc
int
jbe
clc
pop
lds
jecxz
ljmp
test
push
sbb
lahf
enter
in
pop
pushl
adc
ljmp
test
ret
xor
sahf
adc
xor
xor
mulb
into
loopne
pop
aas
adc
adc
pop
fiadds
movsl
call
xchg
xchg
push
cmp
sub
adc
xchg
mov
clc
cld
xchg
ds
in
and
xchg
jns
cmp
into
inc
pop
inc
ds
pop
inc
jno
repz
dec
add
pop
cmp
scas
cltd
jp
dec
mov
inc
push
es
push
cmp
icebp
adc
pop
push
inc
in
xor
lahf
movsb
out
push
dec
push
sub
dec
adc
jecxz
lods
dec
push
addr16
test
adcl
test
adc
lods
pop
int
jl
adc
or
xchg
out
aaa
in
xor
push
fnsave
cmp
xchg
push
notb
push
jb
sub
xchg
xchg
xchg
xchg
mov
add
mov
dec
add
sar
cmc
inc
test
jnp
cld
iret
sti
pop
pop
scas
fiadds
jle
fwait
pushf
jecxz
jg
xchg
aaa
inc
outsl
nop
aad
xchg
stos
xchg
push
mov
iret
outsl
out
pop
jnp
lret
sbb
ja
xor
pop
loopne
les
jmp
lret
out
test
xor
popf
out
ljmp
les
inc
int
cltd
gs
cmp
xchg
fucompp
int
xor
mov
mov
xchg
xchg
ret
jb
mov
loope,pn
aam
cmpsl
rclb
arpl
dec
insb
aam
lret
mov
cmp
mov
push
cltd
mov
jo
xor
icebp
pushf
add
adc
mov
pop
adc
sub
cli
fimull
fmulp
inc
lods
or
test
jge
mov
fstps
push
and
xor
ss
sub
push
cmpsb
pop
outsb
lods
movsb
les
or
push
xchg
push
add
loopne
mov
mov
xchg
mov
sub
xchg
lods
push
pushf
insl
ret
in
sahf
and
pop
popf
sti
cli
popa
scas
cmc
stc
leave
fsubl
lahf
mov
or
out
insl
cmp
sub
jno
test
sub
pop
jmp
sti
int
ret
push
dec
adc
stos
repz
cmp
push
add
mov
cmp
out
jne
mov
movsb
mov
pop
ljmp
adc
dec
dec
mov
jno
jmp
loopne
jl
sbb
stc
out
pop
jecxz
mov
adc
lret
pop
add
xor
push
add
adc
inc
arpl
xlat
testb
mov
pop
fadds
emms
lock
xchg
mov
push
push
inc
adc
cmp
idivl
ret
cmc
sbb
fnsave
push
xchg
inc
or
sbb
xlat
clc
add
data16
mov
add
or
enter
loop
or
mov
arpl
cs
lahf
xchg
adc
push
or
add
jge
push
in
cmp
mov
insl
adc
popf
out
jno
movsb
fists
add
cmc
ficoml
jmp
mov
inc
add
jo
rol
dec
jne
fdivs
mov
mov
ja
in
mov
loopne
mov
and
fwait
push
outsb
dec
or
lods
bswap
dec
mov
adc
pop
popf
inc
pop
rorb
out
outsw
mov
hlt
sub
pop
and
mov
jge
scas
clc
fsubl
or
lret
ret
or
lods
add
pusha
or
sub
notb
mov
ds
popa
repnz
sub
aas
ficompl
movsl
xor
das
cmp
push
ss
jl
push
sub
adc
and
jne
xor
movsl
iret
loopne
sbb
cmp
mov
movsl
mov
mov
jo
js
xlat
cmpsb
pop
divl
in
sbb
xor
rclb
gs
enter
std
inc
fisubrs
cmp
sbb
icebp
mov
push
mov
lods
xchg
inc
pop
ret
push
xor
mov
lahf
call
nop
inc
ret
mov
clc
mov
lret
bound
adc
and
jb
jbe
dec
xlat
lret
daa
mov
hlt
lods
ss
sahf
scas
cmp
sub
dec
sbb
push
xor
adc
aam
inc
push
and
jp
adc
push
mov
mov
decl
test
gs
sbb
adc
xchg
fisubl
sarl
outsl
xor
xchg
movsl
out
pop
outsb
xor
lcall
jb
xorb
and
cld
adc
dec
push
jecxz
ljmp
repz
adc
insb
cmpsb
cmp
sahf
clc
lahf
imul
mov
inc
into
add
push
cmp
mov
jg
movups
inc
in
and
xchg
fs
mov
xor
mov
lods
stos
dec
xchg
jbe
dec
jns
sub
stos
mov
xchg
in
frstor
push
inc
mov
data16
dec
push
jg
int3
mov
jae
in
cmp
enter
xchg
lret
add
jae
jl
adc
inc
cmp
test
jp
iret
fcmovnu
fnsave
lods
push
pop
in
dec
push
les
add
dec
jnp
fdivrs
leave
ret
jmp
mov
ret
imul
and
inc
pusha
jae
nop
out
rorb
lock
jae
and
insb
mov
cmpsb
and
xchg
into
stos
mov
decl
jo
sbb
sbb
sub
sbb
mov
xor
push
fistl
push
enter
ss
repnz
jb
pop
jecxz
pop
sub
xchg
sbb
cmp
cmpsb
push
push
xchg
pop
cmpsb
push
lret
sub
jmp
push
sub
jb
es
scas
jecxz
adc
fisubs
pop
les
push
test
ljmp
pop
stos
and
out
cli
xchg
cmp
aas
mov
loope
ljmp
nop
stos
repnz
push
fldt
inc
mov
adc
and
sbb
leave
clc
idivl
popf
stc
enter
fiaddl
lcall
inc
addr16
popa
les
mull
aaa
add
mov
inc
ljmp
add
or
jnp
jle
cmp
adc
fwait
pushf
scas
lods
pop
in
push
daa
adc
ja
in
fxtract
movsb
cmpsb
or
mov
shl
mov
cwtl
cmc
push
push
adc
push
or
imul
cli
jmp
mov
sbb
jno
or
and
pusha
pop
jecxz
cld
fucom
fs
faddl
xor
mov
arpl
xor
sahf
push
or
jns
mov
push
jge
adc
and
cltd
inc
in
hlt
sub
fimuls
mov
adc
jl,pn
stos
jbe
lret
sub
jne
mov
in
cmp
std
xor
ja
clc
jecxz
inc
adc
cmp
and
sub
cmp
push
xor
outsb
iret
fbstp
push
loope
shrl
cmpsl
lcall
outsl
and
and
stos
or
or
push
call
and
fsubl
pop
mov
xchg
xchg
daa
adc
xlat
xor
rcll
xor
push
cltd
jle
or
loope
xor
int
in
arpl
fnstcw
mov
or
adc
cmp
mov
ror
add
sub
pop
push
sbb
xor
sti
pop
inc
outsb
lods
adc
push
mov
in
mov
addl
pop
in
fwait
mov
shl
frstor
mov
std
mov
stos
fists
or
or
jl
xor
scas
cmp
mov
xchg
xor
mov
cmp
and
sbb
rcll
ss
xor
push
pop
mov
in
loope
mov
cmp
and
or
push
cli
hlt
xlat
not
sbb
jo
mov
ss
add
push
sub
call
push
mov
dec
mov
idivl
push
mov
inc
and
in
hlt
sbb
rorl
mov
mov
inc
out
js
outsb
mov
push
dec
jmp
mov
in
addl
push
out
lcall
inc
pop
rorl
dec
add
xor
nop
cmp
mov
out
push
ja
out
mov
mov
movsl
xchg
rorb
imul
push
test
rcrl
insb
addl
mov
sbb
mov
std
icebp
sub
addb
cld
out
dec
jbe
out
neg
xchg
jns
rorl
or
push
or
aad
mov
mov
stc
cmp
inc
jge
mov
shrb
xchg
loope
jae
add
mov
imul
cmp
in
adc
aaa
pop
in
call
loope
testb
mov
or
mov
cld
pop
stos
jo
inc
push
sub
pop
ljmp
inc
fbstp
imul
sbb
rcrl
or
pusha
mov
xor
clc
inc
xor
shrb
bound
xor
mov
adc
test
cmc
dec
push
cmp
pop
scas
jle
jecxz
rcl
dec
addb
and
lock
push
lock
lahf
aaa
jg
lea
or
xchg
in
fld
jp
aam
add
sbb
fadds
jl
imul
enter
xchg
test
add
cmp
sub
sbb
xor
int3
sti
mov
dec
xchg
fcomi
movsl
add
xchg
repz
popf
idivl
aaa
call
sbb
xchg
sbb
addr16
fldln2
dec
sub
shrb
call
dec
cli
repz
dec
hlt
pop
cmp
jmp
fxtract
add
cwtl
mov
pop
mov
movd
fdivl
and
inc
call
out
mov
fxtract
sub
sbb
call
add
roll
inc
lods
ss
jle,pt
data16
mov
int3
cld
cmp
xchg
dec
in
in
test
mov
aam
push
dec
adc
mov
adc
cmc
daa
clc
jg
or
into
push
jnp
in
aaa
pop
inc
inc
mov
addr16
push
jg
aam
mov
sbb
imul
bound
xchg
push
loopne
outsb
nop
pop
mov
push
scas
out
in
xchg
stos
jge
addr16
mov
jl
scas
pop
rorb
cmpsb
outsb
popa
jl
rorb
jne
aaa
push
sub
xlat
push
push
dec
stos
cmp
sbb
xchg
xor
cmp
iret
jo
testl
out
test
pop
mov
fcomps
fiaddl
lcall
sbb
aam
xorl
adc
les
sbb
jo
mov
sbb
and
dec
inc
dec
nop
test
popa
mov
mov
and
xchg
xchg
mov
test
cmp
or
jg
or
or
sub
sbb
inc
xchg
add
lock
idivl
movl
sbb
gs
add
adc
es
es
push
fldenv
test
push
loope
xchg
sarl
dec
push
test
xor
out
xchg
pop
push
sub
push
shlb
pusha
inc
xor
mov
mov
and
in
leave
pop
mov
or
jae
dec
pushf
out
popf
int3
out
mov
icebp
call
sbb
scas
stc
test
inc
stc
push
pop
popa
enter
in
js
pop
popa
jp
mov
add
pop
loope
and
fcmovnbe
lret
ss
dec
adc
mov
cwtl
dec
xchg
test
pop
cltd
call
add
lahf
stos
addr16
or
andb
stos
jle
push
jl
or
mov
add
movsb
lret
ficomps
add
and
push
mov
pop
and
in
sahf
inc
push
lcall
sub
inc
push
repz
pmaxub
data16
sub
push
mov
pop
shll
or
adc
fists
fs
xorl
jg
std
mov
and
dec
xchg
push
insl
cmp
push
movsb
inc
loope
jmp
int3
mov
dec
mulb
rcr
orl
add
iret
jns
push
rcrl
mov
cmp
stos
sbb
pop
out
daa
cmp
insb
dec
dec
xchg
popa
cli
pop
or
movd
jecxz
inc
addr16
jb
fs
xor
inc
aam
pop
xchg
inc
adc
pop
sbb
sub
add
or
repz
or
imul
insb
jmp
ds
inc
push
adc
lahf
and
and
inc
int
push
jno
mov
or
inc
xchg
cmp
icebp
loopne
jbe
and
inc
fs
jle
push
sbb
xchg
lahf
mov
adc
adc
popa
mov
inc
andl
lods
lret
mov
jp
jge
xchg
cli
sbb
jbe
mov
addb
stos
mov
and
push
xor
clc
inc
pop
jle
in
pop
jg
cs
adc
es
imul
data16
cwtl
xor
dec
mov
dec
jge
fs
push
mov
mov
scas
pop
inc
or
test
jmp
cltd
cltd
mov
arpl
mov
rep
aam
je
pop
mov
cmc
lcall
push
leave
add
xor
hlt
mov
stc
dec
pop
push
arpl
cli
pop
sbbl
data16
pop
mov
lret
xor
or
sub
lea
ja
pop
mov
enter
mov
xor
xchg
adc
push
rolb
xor
out
fs
and
cmp
rclb
icebp
call
aaa
pop
add
and
push
cmpsl
lds
imul
xchg
mov
mov
pop
cmp
add
xor
mov
rcll
clc
decl
xchg
xchg
out
out
sub
icebp
jmp
jno
rorb
inc
inc
push
push
xchg
mov
xchg
test
nop
aad
popfw
adc
imul
push
sti
repnz
xor
into
cli
andl
and
inc
arpl
push
sbb
insb
jns
test
cmc
daa
in
lock
xchg
sbb
pop
rcr
jmp
sbb
aas
daa
daa
or
enter
xor
mov
mov
incl
sub
sbb
or
into
daa
imul
dec
sbb
push
mov
negb
fwait
mov
mov
push
insl
outsl
test
push
add
and
push
rcll
out
fiaddl
outsl
mov
and
sub
lock
scas
aad
rcll
sub
cmp
das
sbb
lock
lahf
adc
sahf
mulb
sbb
in
icebp
xor
iret
jp
addr16
outsl
xlat
mov
cmc
aas
clc
mov
and
scas
sub
mov
jecxz
jecxz
pop
sbb
sbb
mov
aaa
push
test
subb
in
mov
iret
call
pop
test
scas
add
cmp
mov
and
daa
and
stc
imulb
sub
rorl
push
ss
popa
add
js,pn
test
add
mov
cli
mov
dec
pop
and
adc
jp
mov
repz
push
in
inc
jno
je
leave
push
add
sbb
das
adcb
push
adc
push
mov
pop
popa
xchg
mov
in
test
cmc
sbb
fidivs
in
jne
jge
leave
loop
jbe
xor
or
push
outsb
add
xchg
andl
and
xor
cwtl
or
pop
push
stos
je
sbb
or
sub
scas
in
in
push
xor
sub
and
fsubl
cmc
xor
lock
cld
sub
xchg
addl
into
les
mov
jae
rcrb
inc
aaa
jnp
ds
sbb
jecxz
sbb
or
jmp
adc
dec
adc
sbb
inc
test
cmp
jnp
jg
lcall
or
mov
ss
aam
or
jecxz
test
xlat
sub
xor
mov
push
inc
lods
in
adc
ud0
pop
outsb
aaa
aad
lcall
mov
lret
mov
xchg
xor
push
hlt
rclb
arpl
insl
jp
jae
lock
mov
in
mov
gs
fcoml
mov
gs
inc
negb
es
fstpl
pop
jo
or
push
pop
push
lods
aad
cmp
call
inc
pop
inc
movsl
adc
test
jle
dec
in
mov
xchg
xchg
jp
dec
jge
out
test
inc
out
icebp
push
movsb
cmpsl
movsl
push
popf
xor
cmp
movsl
mov
xchg
mov
push
pop
popf
addr16
inc
dec
arpl
lcall
jg
imul
arpl
in
sub
imul
cmp
aas
mov
xlat
dec
ljmp
or
rcll
loopne
push
outsb
add
or
cmp
neg
scas
push
push
cmp
mov
scas
cmp
cltd
out
adc
les
lds
dec
out
jecxz
mov
pushf
adc
aad
pop
cmp
add
xor
pop
pop
lods
imul
pop
psubusw
jmp
dec
mov
iret
jb
or
pop
repnz
jns
cmp
loop
sub
and
xchg
xchg
insl
inc
adc
cmp
dec
in
inc
mov
or
xchg
clc
xchg
mov
push
dec
flds
scas
pop
mov
add
ljmp
or
aad
lds
xchg
nop
mov
cmp
push
cmp
xchg
shll
cmp
int3
sbb
dec
mul
adc
sahf
lods
ds
adc
jns
push
fld1
cmp
loopne
inc
inc
xor
leave
inc
cmp
jmp
dec
add
test
push
cwtl
aad
cmpsl
cmp
ss
sbb
xchg
mov
mov
mov
fdivs
push
mov
rorb
adc
ret
mov
iret
loop
test
cmpsb
push
jno
dec
ret
js
repz
es
stc
cmp
sub
sub
adcb
cmp
int3
and
push
test
stos
inc
cmpb
arpl
test
adc
jo
cmp
clc
push
ja
pop
mov
dec
mov
and
sbb
and
gs
scas
jl
mov
xchg
xor
shlb
mov
mov
push
cli
andb
mov
adc
pmaxsw
adc
sti
mov
fidivs
lretw
cld
mov
push
imul
sbb
dec
sub
push
adc
shr
call
aad
jecxz
mov
push
inc
jg
add
in
jb
rorl
sbb
and
mov
dec
mov
outsb
addl
movsl
mov
dec
mov
inc
aas
int
mov
fdiv
cmp
mov
jnp
add
lret
adc
push
mov
fisubrs
cmp
sbb
jb
cmp
mov
lds
ficomps
mov
sub
xor
push
sbb
loop
lds
mov
inc
jg
aas
test
imul
and
add
cmc
add
ret
lods
mov
jno
cmp
repz
rclb
add
insl
xchg
pushf
div
test
mov
or
ficoml
stc
push
inc
or
imul
push
or
jo
jmp
sub
pushf
roll
push
adc
call
add
mov
or
movsb
cmp
jno
mov
jne
xchg
push
pop
and
push
inc
fsubrs
fwait
mov
inc
xorb
push
xchg
shlb
inc
pop
adc
into
cs
sub
pop
jp
adc
and
lds
repnz
cli
cmp
test
xchg
notb
jl
sub
sub
jecxz
daa
lods
jb
int
mov
or
dec
xor
push
mov
imul
xchg
sahf
movsl
xchg
and
clc
aad
popa
lcall
add
sbb
mov
rcr
scas
rorb
xchg
cmp
or
push
ret
jmp
int
rcll
jge
mov
dec
pop
lea
mov
and
add
mov
mul
mov
pushl
pushf
sub
xorb
inc
cmp
movsl
push
fcomip
push
pushl
stc
enter
jp
inc
call
repz
mov
mov
mov
aaa
sbb
sub
cmpb
aam
gs
das
jle
aas
iret
mov
xor
sbb
xchg
push
adc
xchg
add
cmp
jb
movsb
and
dec
sub
arpl
aam
pop
ljmp
xchg
inc
in
xchg
mov
nop
movsb
loop
push
out
add
fists
add
cmp
xchg
xor
inc
loopew
inc
outsl
stc
jb
movsl
out
inc
dec
and
imul
xor
nop
xor
xor
mov
enter
ja
dec
gs
adc
push
ret
sbb
inc
sub
adc
fwait
jb
int3
test
fistps
arpl
or
jg
stos
out
loope
int
add
mov
inc
sub
pop
or
inc
std
inc
jae
jo
lahf
sub
inc
mov
addr16
mov
dec
repnz
les
adc
cmp
clc
fsubs
not
into
inc
mov
sbb
push
or
in
mov
fisubs
dec
mov
iret
xor
aaa
dec
lahf
cmp
out
add
fmul
push
out
test
xlat
push
sbb
inc
repnz
pop
mov
idiv
mov
mov
push
fwait
add
enter
pop
mov
xchg
xlat
das
mov
pushf
and
loop
int
hlt
jecxz
mov
add
pushf
ja
push
push
shrl
lret
out
inc
imul
out
pusha
in
stc
push
out
pop
dec
icebp
sub
or
ret
pop
hlt
arpl
out
into
jp
sub
test
test
pop
mov
lock
idivl
mov
add
pop
pop
mov
cmp
sub
xchg
scas
int
jmp
cs
addr16
das
lcall
rep
leave
xchg
pop
pop
push
cmp
rcrl
mov
pop
and
popa
mov
in
les
fs
xchg
loop
cltd
movsb
in
mov
push
adc
push
adc
rclb
sbb
mov
mov
daa
jp
dec
aad
mov
addr16
and
dec
stc
rol
rorb
not
daa
fcoms
push
sbb
push
ja
inc
adc
sub
jg
mov
add
adc
mov
cmp
push
fadd
xchg
sahf
gs
fildll
jo
mov
out
cmp
mov
push
mov
push
cmp
mov
jp
and
add
xor
das
pushl
movsl
mov
xor
fucom
mov
aad
push
in
shll
sbb
jns
aaa
sbb
mov
mov
sbb
lahf
xchg
rcll
test
faddl
adc
jbe
xor
xor
mov
in
fimull
inc
iret
add
test
sub
jecxz,pn
rcl
rcll
mov
inc
lods
movsl
push
fcmovbe
dec
adc
mov
add
pop
sub
out
outsb
adc
mov
lret
es
or
bound
test
or
mov
xchg
cmp
inc
sbb
sub
sub
pop
cwtl
aam
push
mov
pushf
and
or
stos
aam
sub
shrd
mov
ja
jo
testl
sub
pop
sub
mov
orl
mov
jle
jmp
in
cs
lcall
aas
jmp
imulb
lret
pusha
out
xchg
jle
pop
xor
sahf
test
add
jno
outsl
mov
cmp
push
mov
sbb
mov
and
add
insb
sbb
push
sub
icebp
push
mov
cmp
sbb
add
in
cmp
inc
jns
adc
adc
sbb
pushf
stc
and
insl
andb
inc
mov
pop
pop
out
mov
mov
stc
inc
mov
popa
xchg
hlt
fucom
movsl
mov
sub
out
add
cmpsl
xorl
loope
loop
or
jl
inc
pop
stos
and
test
and
pop
push
or
or
imul
and
out
cltd
push
sub
cmpsl
cmpsl
ret
es
shrb
rclb
dec
or
in
inc
or
cmp
or
xchg
fs
out
adc
and
push
mov
int
and
lret
aaa
nop
arpl
nop
pop
or
icebp
push
mov
popf
adc
push
outsb
movsl
shrb
mov
mov
xchg
jnp
cld
push
cmp
inc
je
mov
aad
in
cmpsl
adc
jnp
push
iret
lods
jae
mov
jns
cwtl
inc
dec
cmpsl
add
fidivs
xor
mov
insb
add
addl
stos
aam
or
sbb
adc
ret
in
stc
dec
xor
sti
cmp
ret
int
jp
aaa
aam
mov
lret
mov
mov
fisubl
jnp
fdivl
popa
inc
jge
pop
hlt
daa
or
xchg
clc
popa
popf
out
xor
inc
ds
inc
shll
stc
jno
test
dec
cmp
or
jecxz
aaa
js
rcrb
sti
push
jl
jp
testl
neg
insl
decb
jmp
pop
mov
lods
rol
add
jl
inc
and
add
je,pn
cltd
rcll
or
aas
mov
pushf
imul
and
jne
jp
shll
xchg
inc
lods
cs
jle
imul
pop
dec
pusha
test
in
shlb
iret
test
stos
lods
push
push
ljmp
rcr
rcll
jo
cld
xor
mov
cmp
test
cmpsb
xchg
push
fldt
jns
cmp
pop
sahf
sub
pop
mov
push
cmp
jb
ja
jbe
mov
cmc
test
stc
jae
lcall
jl
xor
ljmp
lock
into
lahf
mov
pushf
pop
cmp
adc
pushf
mov
ja
xchg
dec
and
mov
and
xchg
ljmp
jnp
jns
popa
rcr
ja
lret
je
lret
aam
fisubs
mov
jp
mov
imul
mov
aad
add
push
add
sub
mov
cmp
adc
scas
sbb
test
das
xor
js
cmp
pusha
sti
xchg
sbbl
inc
aad
lods
sbb
pop
dec
aad
out
add
cli
sub
imul
scas
mov
out
popa
dec
cmp
cwtl
fsubrl
dec
outsl
in
aas
jbe
mov
jge
sub
cltd
or
jbe
push
cmp
inc
mulb
cmp
xlat
push
aad
xor
movsb
sub
lods
mov
dec
inc
xor
insb
xor
jmp
cmp
sbb
pusha
sbb
cmp
pop
ja
fcmovnbe
pop
adc
pop
js
cmp
add
sub
insb
lods
sbb
pop
pop
test
cmp
lcall
call
or
cmpsb
inc
int3
push
inc
js
loop
movsb
movsl
jl
jge
cld
rcll
aas
loopne
rorl
test
mov
fwait
xchg
and
inc
mov
pop
pop
and
and
scas
das
data16
sbb
and
mov
mov
adc
lret
nop
dec
add
addr16
inc
mov
enter
out
scas
in
sbb
pop
pop
xor
dec
sti
addr16
out
and
adc
rcll
lcall
push
loope
movaps
mov
in
les
sbb
adc
lret
insl
out
out
lea
fsubrs
push
dec
mov
sbb
cmp
mov
jg
aas
sub
dec
cmpb
imul
not
push
push
sub
add
jge
xor
cmp
in
xor
xor
fnstsw
push
inc
sub
arpl
push
mov
dec
cmp
cltd
ss
xchg
inc
int
cmp
dec
idivb
ret
xchg
inc
cmpsb
outsb
orb
insl
adcb
fldt
out
mov
std
rcll
popf
mov
insl
stc
pop
addb
out
js
rolb
pop
jle
cmp
arpl
gs
mov
cmp
dec
sub
lret
mov
sbb
add
add
movsl
in
aaa
jne
lahf
inc
adc
add
adc
add
pop
adc
xor
cld
inc
dec
and
rcl
mov
in
ficompl
mov
push
mov
addb
cld
popa
adc
xchg
sbb
subb
and
es
lock
out
enter
fnstenv
jl
xchg
mov
sahf
pop
lcall
popa
jmp
push
out
jns
negl
das
popf
sbb
loopne
cli
ret
inc
pop
add
aam
and
mov
pusha
mov
movsl
dec
cmp
cmp
push
icebp
imul
andb
std
fnstcw
hlt
sbb
aam
ljmp
stos
imul
mov
mov
jp
push
lea
add
sti
lcall
jecxz
or
add
lret
lcall
insb
lea
xor
ficoml
mov
cs
cltd
sub
cmp
jne
std
sub
cmove
ret
enter
xchg
sbb
insb
sub
in
icebp
xchg
movsl
in
aad
mov
insb
loopne
pop
push
jae
subl
jns
jp
fsubrl
popf
xchg
loope
stos
aaa
stc
pop
js
sarl
push
jl
jmp
js
movsb
fists
xchg
jg
jnp
mov
cmp
iret
test
or
jno
add
insb
pop
adc
popa
jb
inc
cld
lea
faddl
cmc
mov
clc
mov
inc
jo
loope
mov
jnp
loop
shrb
sbb
outsb
mov
adc
inc
and
daa
xchg
sbb
int3
mov
in
xchg
mov
push
jl
sarb
rcll
dec
movl
pusha
adc
jo
mov
cwtl
mov
pop
adc
call
push
jne
and
andb
mov
adc
outsl
mov
addb
mov
test
xor
or
stos
sbb
add
sbb
mov
push
mov
adc
enter
pushf
cltd
cmp
cwtl
jae
push
into
dec
push
mov
imul
jns
sub
xchg
clc
outsb
inc
in
aam
dec
xchg
lods
dec
lahf
pop
sbb
pop
mov
mov
jmp
sahf
ficompl
push
or
test
sub
add
jns
jmp
outsb
inc
testb
add
cmc
dec
jbe
fistps
in
loopne
or
sti
xchg
mov
cmp
pusha
push
jecxz
cmp
stos
loopne
add
stos
out
movb
movsl
inc
and
inc
stos
cmpsl
mov
aad
mov
ds
jmp
pushl
aam
lret
cltd
adc
adc
sub
xchg
lods
or
insl
cli
jne
cwtl
sbbb
jmp
out
mov
dec
hlt
outsb
iret
fistpll
nop
call
xor
mov
xor
leave
cmp
je
cmp
xchg
mov
xchg
imul
imul
cmpsl
loop
push
jge
inc
gs
fdiv
cltd
push
mov
jbe
divps
insl
testb
into
sbb
int3
pop
ja
aam
insb
xlat
xchg
push
mov
sbb
mov
mov
lahf
xchg
cmp
and
sbb
xchg
and
dec
jge
push
push
jg,pt
xor
sub
std
insl
xchg
and
add
sbb
fs
jl
fs
clc
jne
fisttpll
cmpsb
or
dec
ficoml
or
hlt
sub
mov
mov
and
push
aas
hlt
sbb
dec
add
fwait
cmp
sub
push
dec
pop
cmp
out
sub
cmp
scas
stos
fsubs
push
push
and
mov
nop
faddl
sti
push
dec
stos
das
push
loope
popa
cmc
mov
in
jle
lea
cmp
sahf
filds
arpl
mov
xlat
cmp
sbb
ja
push
jne
sar
into
iret
xor
xchg
cmpsl
mov
insl
dec
sub
dec
aas
fwait
scas
dec
test
push
mov
jmp
push
loopne
les
loope
jnp
stos
aam
fdivs
push
gs
sub
popf
inc
in
cmp
hlt
mov
call
mov
imul
aaa
xchg
js
adc
push
adc
fwait
sub
cwtl
or
or
insb
data16
xchg
jmp
out
xor
push
mov
out
lods
sub
adc
cmpsb
jmp
jnp
movsl
fucom
iret
jmp
or
sbb
and
loope
pushf
jle
pop
mov
add
in
test
aas
xchg
mov
push
dec
loope
inc
jl
jle
cmp
stos
mov
xchg
fldl
aam
mov
popa
sub
sti
out
mov
and
cmc
push
fsubl
sti
cld
pop
shlb
andl
test
stos
xchg
xchg
sarl
add
adc
repnz
les
sub
xchg
mov
frstor
rcll
xchg
jmp
ss
imul
ret
fcmovnb
subl
jns
pusha
jg
inc
cmpsl
and
insb
and
insl
fimull
mov
lock
shrb
xor
jg
outsb
pop
jno
lea
lret
popf
lret
repnz
repz
mov
xchg
les
in
ds
pop
arpl
jb
pop
mov
insb
jle
into
mov
arpl
or
test
movsl
and
loop
jnp
sbb
hlt
or
add
das
aam
lods
mov
daa
mov
lcall
pushl
insb
and
or
pusha
ret
xlat
shrb
pop
sub
test
jp
std
lret
ja
cmp
xchg
sbb
outsb
adc
sahf
jg
pop
inc
test
sub
inc
jno
xorb
cmpb
repz
xlat
mov
in
push
mov
adc
push
sti
and
pop
mov
hlt
lret
mov
xchg
inc
fdivr
xchg
dec
sbb
and
aam
sbb
adc
icebp
loope
in
test
sarb
jp
xchg
pop
out
pop
scas
or
lea
mov
or
ljmp
cmp
jne
std
call
mov
xchg
push
es
in
out
cmc
dec
adc
sub
les
outsb
add
dec
push
aam
mov
sarb
push
lock
cld
enter
iret
mov
arpl
lret
ds
and
pop
fwait
or
ret
pop
in
leave
mov
nop
aas
shlb
lods
cwtl
pop
out
sbb
fists
push
dec
jecxz
in
ds
stos
subb
xor
imul
cltd
pop
cmp
lds
sub
push
mov
test
mov
sub
add
mov
mov
cmc
pop
pop
xchg
jge
jmp
and
pop
mov
out
cld
mov
push
enter
dec
xchg
icebp
aas
pop
dec
ficompl
mov
into
negl
divl
jns
mov
loop
cli
adc
xor
xchg
add
xchg
jno
das
mov
aas
bound
imul
push
insl
data16
inc
mov
test
xchg
fnstenv
sub
adc
add
jnp
pop
push
out
in
sahf
into
inc
test
mov
fiadds
xor
fdivrl
push
cmp
add
adc
in
fucompp
neg
loope
mov
pop
mov
or
and
aas
outsl
out
fsubs
out
mov
ret
pop
inc
or
dec
pop
jg
xor
sti
in
xor
jecxz
pop
sbb
mov
sbb
jne
inc
shrl
cmp
jge
adc
add
aaa
mov
jo
hlt
mov
xor
shrl
fdivr
sub
fsubl
out
push
push
mov
cmp
jb
cld
lret
sbb
mov
mov
nop
add
fnstcw
lds
mov
aam
imul
jae
and
cli
lahf
jbe
test
sbb
mov
jecxz
loope
cwtl
push
sahf
sub
dec
je
inc
in
nop
loop
sbb
lcall
xor
movsl
mov
testb
lret
mov
cltd
nop
cmp
cmp
sbb
shl
outsb
in
add
sarb
aas
fbstp
call
xor
jns
rcl
frstor
jmp
inc
push
loope
test
ss
dec
or
insb
cltd
je
pop
push
push
scas
sub
jo
mov
je
scas
pushf
sub
jecxz
mov
jne
out
adc
xchg
mov
sbb
rcrb
aam
repnz
hlt
inc
leave
shll
add
into
leave
shlb
enter
mov
cmp
mov
pop
xchg
mov
sbb
sbb
sub
dec
or
inc
cwtl
stos
insb
lds
popa
pusha
es
push
popa
aaa
cmpsb
add
mov
imul
cmp
fwait
mov
mov
arpl
popa
test
jle
mov
icebp
je
sub
pop
fmull
jne
ficomps
push
jge
scas
dec
pop
or
cmpsl
xlat
pop
andb
sub
dec
mov
shll
jmp
xor
stc
shll
and
jno
mov
inc
jno
adc
rclb
dec
sbb
outsb
jmp
test
popf
sbb
xchg
inc
adc
stc
fstps
jmp
imul
xor
aaa
sbb
adc
xor
rorl
sbb
mov
daa
jp
loop
pusha
sbb
jb
loopne
cld
movsl
dec
push
outsb
nop
adc
mov
cmpl
stos
rorl
sbb
mov
stos
inc
and
inc
pop
test
or
call
add
push
mulb
push
pop
push
mov
pop
mov
push
and
call
add
push
jl
push
cmp
dec
push
mov
imul
idivl
cmp
jle
ss
jno
pushf
xchg
loop
es
sbb
cwtl
insl
adc
sbb
xor
push
js
movsl
data16
or
add
out
ds
in
jno
sbb
data16
push
mov
shlb
inc
dec
mov
jle
das
mov
xchg
pop
es
data16
sub
xor
fdivr
add
dec
xor
mov
adc
push
mov
popf
popf
xchg
dec
aaa
push
enter
xor
aam
inc
insl
push
fs
jecxz
xchg
push
fldl
add
jae
jl
mov
fidivrs
pop
mov
mov
stos
jl
mov
sbb
sahf
and
lcall
cmp
add
adc
repz
xchg
add
pop
sub
inc
cmp
sahf
mov
mov
jno
lock
cmp
jb
stos
je
or
arpl
sbb
xor
not
pop
mov
shlb
jge
lods
pop
enter
cmpsl
pushl
adc
sub
clc
jg
cmp
cmp
sub
ljmp
aaa
outsl
lcall
dec
je
jo
ret
popf
loop
ljmp
xor
daa
sbb
popf
sahf
mov
aam
push
push
out
dec
daa
aaa
hlt
lods
mov
lods
push
fisttps
int
icebp
pop
aam
jge
mov
jno
loope
das
stos
adc
inc
iret
dec
xchg
pop
mov
std
je
decb
test
adc
sbb
cmp
dec
xchg
xor
sti
push
lds
pop
hlt
and
imul
pop
push
xchg
in
dec
cltd
lods
xor
int3
repz
xchg
lods
sub
sub
or
icebp
mov
xor
cli
repnz
aaa
insb
push
rol
sahf
pop
ljmp
xchg
sbb
mov
ja
sbbl
push
mov
sbb
jmp
adc
icebp
mov
inc
loop
out
dec
bound
fistps
rcrb
add
aam
jns
in
repnz
mov
call
scas
icebp
movsb
and
mov
test
fdivrl
cs
sub
cmp
sete
fidivs
lods
jecxz
fwait
push
mov
int
xor
aam
stos
lahf
xchg
mov
sub
push
fsubl
jns
sbb
dec
mov
insb
jecxz
cmp
mov
mov
dec
jle
pusha
inc
aad
cmpb
popf
push
and
pusha
cmc
push
xchg
jae
into
add
int
mov
cmp
xor
inc
nop
push
adc
mov
dec
out
dec
stos
scas
xchg
ss
lret
out
lret
in
dec
xlat
inc
mov
push
movsl
sub
push
xchg
xlat
outsl
mov
jae
in
sbb
push
sub
push
jle
mov
xor
inc
xchg
popf
clc
and
mov
cmpsl
push
cmpsb
cmp
out
orb
testb
fidivrs
push
dec
cld
lock
xchg
pusha
fwait
mov
adc
mov
dec
pushf
or
xor
clc
fdivrs
sub
jnp
fwait
icebp
mov
mov
push
ds
pusha
aam
stc
popf
push
lcall
jecxz
add
stc
xchg
mov
dec
lods
dec
orb
fwait
inc
or
pop
inc
xor
test
xor
outsl
add
xchg
rcr
jmp
dec
sub
or
mov
jl
jge
testl
jl
pop
jge
fs
mov
fildll
and
lods
mov
mov
mov
xchg
aaa
inc
out
out
mov
sarb
testl
imul
das
jge
xor
outsb
fsubs
add
mov
cld
cmp
xor
push
pop
test
mov
shl
test
fs
push
or
mov
mov
or
and
add
mov
in
jmp
dec
pop
or
hlt
push
sbbb
xchg
mov
hlt
insb
jo
bound
jecxz
das
mov
clc
lea
movsl
test
adc
xchg
adc
lcall
test
sahf
in
push
cmpsb
xchg
push
cli
sub
push
sub
fcoml
fs
jns
cmp
lcall
lds
cmpsb
add
pop
fistpll
fsub
xor
adcl
or
push
or
pop
cwtl
sahf
adc
ret
mov
popa
dec
xor
es
add
pop
adc
int
ret
mov
andl
or
xchg
pop
fidivl
add
mov
rorl
lods
bound
aam
cwtl
xchg
dec
ds
mov
popf
add
gs
add
daa
mov
jb
aas
dec
lods
fisubs
add
push
cltd
sub
xchg
loope
inc
jp
loope
sbb
loope
pop
sub
arpl
cmp
jns
mov
sahf
imul
cmp
jae
xor
imul
int
dec
mov
jge
adc
sub
jno
jb
xor
cmp
ret
in
inc
and
lcall
push
push
je
lret
mov
movsb
adc
filds
mov
dec
test
push
imul
or
or
cwtl
add
adc
dec
in
jg
cmc
test
sbb
sbb
in
dec
addr16
mov
mov
jle
fcomps
pop
adc
lea
in
xchg
fsubrl
push
mov
xchg
ja
lods
adc
sbb
and
mov
mov
push
and
or
scas
hlt
inc
pushf
inc
icebp
out
loope
mov
pop
fcomps
cltd
dec
sub
and
outsb
test
ja
shl
movsl
bound
xchg
cli
test
lods
xchg
out
xor
add
daa
decb
xor
bound
inc
xor
jns
dec
push
or
setbe
mov
inc
mov
lahf
shrl
jp
xlat
es
scas
jecxz
lret
push
loope
mov
data16
mov
push
sbb
jns
mov
xchg
push
and
or
fs
ljmp
cmp
cmp
push
pushf
pop
jg
in
jnp
pop
and
int3
adc
mov
dec
push
sarb
stc
adc
andb
subb
cmpb
cs
cli
out
out
and
lods
and
mov
and
js
dec
push
push
es
outsb
xchg
mov
lcall
iret
mov
cs
pop
shlb
sti
mov
mov
add
setp
pop
stc
inc
mov
push
mov
nop
mov
inc
lret
xchg
mov
rorl
lahf
pop
dec
sarb
pop
in
out
push
pop
inc
dec
cmp
leave
jnp
xor
xchg
imul
call
scas
nop
jb
test
push
lods
lret
ja
or
jmp
add
fstpl
cmc
fcoms
das
push
les
dec
mov
gs
stc
movsb
or
mov
out
sbb
imul
push
js
mov
ss
xor
fidivrl
cmpsb
addr16
dec
xor
xor
dec
shrl
icebp
push
enter
xchg
ljmp
xchg
nop
or
xchg
imul
push
fldl
mov
rorl
mov
es
sbb
cli
push
xchg
or
mov
fisttpll
sbb
movsl
xchg
add
jmp
stos
inc
or
pop
dec
jl
pop
shll
nop
jno
lds
xor
imulb
sub
xchg
jo
movsb
pop
inc
mov
mov
xchg
in
stc
push
fistl
aam
xor
mov
test
mov
xchg
pop
pushf
pop
jnp
repnz
xchg
nop
fmull
rclb
aad
es
xor
rclb
fimuls
push
test
in
push
les
iret
and
cmp
cltd
bound
inc
mov
sbb
out
repnz
scas
xor
push
cmp
clc
xor
sub
inc
sbb
jns
cmc
mov
cs
fsubp
mov
jnp
lea
dec
cmpsl
mov
jp
mov
and
or
dec
xor
sub
add
pop
mov
out
stos
cwtl
gs
out
dec
mov
into
ficomps
lahf
imul
push
jbe
js
cmp
sub
xor
rcll
cwtl
aaa
outsl
mov
and
lahf
xchg
scas
inc
outsl
push
movsl
stos
into
loope
push
lret
mov
pop
mov
cltd
repz
test
inc
clc
dec
out
in
test
aaa
out
adc
int3
or
sub
or
pop
xchg
lahf
xor
cmp
xlat
mov
push
push
xchg
mov
mov
dec
mov
inc
popa
dec
fidivrs
or
repnz
adc
dec
gs
imul
push
sub
clc
mov
dec
mov
out
stos
mov
push
xor
fidivrl
lods
xchg
in
shrl
test
dec
fwait
push
xor
es
les
aad
push
rcl
xor
decb
add
or
jl
enter
lcall
sbb
xchg
jge
add
in
pushf
or
mov
aam
add
cld
out
pop
ficompl
test
aam
dec
xor
movl
adc
es
mov
cmp
mov
xlat
and
into
add
push
cltd
fisttps
fidivrl
push
hlt
dec
mov
ret
addr16
scas
push
cmp
mov
mov
adc
inc
dec
es
push
pushl
xor
aad
rcrl
sbb
cmpsl
frstor
pop
rolb
clc
mov
fcoml
cmp
add
adc
test
pop
pop
rcrl
mov
and
mov
add
dec
test
add
sti
addr16
es
push
push
jne
xlat
dec
and
sub
clc
xchg
in
jge
and
cmp
pop
jo
das
call
stos
loopne
push
mov
fs
popl
je
test
repz
inc
shll
in
push
cld
shl
cmp
stos
xchg
das
mov
jmp
add
or
imul
and
sub
jge
push
push
add
push
cmpsl
lret
sub
pop
push
and
sub
hlt
jge
call
int
imul
push
in
mov
sar
jnp
out
lock
fstps
int
dec
insl
pop
mov
mov
cltd
outsb
shl
xchg
inc
and
scas
repz
xchg
out
pop
sti
popa
shl
dec
sub
mov
lods
dec
stos
dec
xchg
fistpll
push
cli
mov
ret
dec
and
popf
cmp
sub
loop
dec
popf
jnp
lahf
cmp
xchg
je
scas
adc
mov
fmulp
adc
sahf
cmp
and
sub
dec
sub
push
jecxz
repnz
cmp
push
sbb
insl
call
js
and
in
loop,pt
lock
rclb
scas
shrb
out
ja
fldcw
stos
inc
dec
fldz
aad
mov
sub
mov
sar
adc
in
mov
jno
xor
aaa
xchg
push
sub
dec
cmp
fiadds
mov
stos
mov
je
sbbb
push
jno
mov
pushf
test
in
xor
leavew
mov
xor
jecxz
mov
jns
dec
xchg
hlt
jecxz
mov
lods
xchg
dec
push
repz
ret
stos
daa
dec
dec
push
mov
dec
sbb
cmpsl
xchg
jno
aas
pop
and
std
inc
out
sub
ja
mov
popf
adc
sbb
mov
sub
inc
test
sti
jne
repnz
in
incl
mov
icebp
scas
in
es
adc
mov
mov
cs
aam
and
xor
stos
cli
gs
adc
sub
loope
lea
or
sbb
xchg
jbe
mov
sub
xchg
mov
xor
and
xchg
in
lods
into
scas
int3
lods
insl
mov
sub
fcmovb
wbinvd
mov
ret
xchg
cltd
cmp
andl
enter
incb
in
enter
loope,pn
int3
or
andl
repnz
push
sbb
enter
das
xor
inc
pushf
pop
imul
out
pushf
imul
and
pop
std
mov
push
mov
mov
push
xchg
je
add
out
xor
mov
pop
gs
sbb
cmovge
xlat
and
or
xor
inc
pusha
inc
dec
mov
icebp
jge
or
jmp
decl
mov
fwait
xchg
cmpsb
inc
mov
jmp
xor
pop
sbb
iret
inc
cli
mov
or
push
fstpl
push
inc
negb
xor
test
push
sbb
inc
icebp
stc
mov
mov
cwtl
or
jnp
and
push
sbb
mov
icebp
mov
adc
pushf
push
jl
fwait
or
mov
dec
cmovno
jmp
xchg
xor
push
mov
enter
mov
mov
rorl
adc
lcall
dec
test
cmc
push
mov
mov
adc
cmc
int3
mov
inc
lret
inc
pop
test
push
movsb
mov
mov
cmp
sub
mov
mov
xchg
add
mov
mov
xchg
jno
xchg
test
mov
es
jb
sti
xchg
and
aaa
xor
mov
push
adc
pusha
xchg
hlt
lahf
cmp
jo
mov
mov
sarb
dec
jbe
hlt
push
sub
into
mov
mov
cmpb
dec
gs
adc
loopne
pop
loope
pop
sbb
xchg
add
je
push
pop
popf
int3
mov
cli
aaa
jae
ds
lock
hlt
xor
cmpl
ss
ljmp
sub
mov
sub
push
pop
pop
out
pop
add
mulb
mov
addr16
xlat
mov
add
add
and
pop
and
lock
jg
push
jns
enter
adc
push
aad
xor
andb
ds
popf
add
lds
cmpsl
imul
cli
les
icebp
lock
fwait
mov
imul
ret
inc
push
sbbb
jnp
enter
repz
nop
inc
jge
loopne
sahf
icebp
mov
push
getsec
aad
jle
mov
sbb
fwait
nop
pop
lds
mov
jae
adc
cmp
mov
divb
flds
dec
adc
fcmovnb
test
cmp
xchg
filds
int
cwtl
outsb
bound
popf
lds
lods
mov
cmp
ja
jle
mov
sbb
cmp
xor
fwait
stos
lcall
fs
jo
sub
sahf
pop
xchg
mov
in
xor
jle
fsubr
mov
cwtl
clc
mov
lods
addr16
leave
cmp
mov
outsl
jle
inc
sbb
lock
loope
pop
mov
dec
cld
lret
pop
stc
shll
mov
imulb
cmp
push
mov
loopne
lds
xor
add
lock
dec
inc
imul
mov
das
push
pusha
stc
je
icebp
les
sti
adc
jg
std
scas
addr16
fisttps
das
jmp
shr
xor
pop
push
call
movsb
clc
xor
and
mov
adc
andl
pop
push
sbb
pushf
push
xor
aaa
imul
shrl
push
loop
and
mov
adc
jno
jecxz
dec
or
jnp
imul
idivb
pop
pop
pusha
cld
scas
inc
fildll
pop
jmp
shl
aam
movsb
push
dec
mov
imul
subl
scas
push
cmp
fsubl
lods
cmp
push
cmpsb
test
lcall
lret
shl
adc
push
push
cmp
or
fstps
sbb
aas
lods
out
test
leave
mov
xor
dec
dec
jbe
lds
lret
lds
aas
clc
cwtl
mov
stos
in
mov
mov
mov
popf
popa
loope
fs
arpl
sbb
lahf
mov
jbe
xchg
push
lcall
daa
int3
jle
stos
xchg
cmpsb
and
cs
lds
cs
and
jno
mov
cld
inc
inc
test
int
push
mov
fmuls
ficompl
push
fcoms
or
mov
pop
push
pop
in
mov
adc
cli
test
aam
insb
into
ss
in
or
repnz
cmp
ja
jle
test
repz
cmp
jge
test
test
fstpl
loope
mov
stos
or
shrb
and
cltd
test
cli
dec
xor
jmp
in
sbb
shll
je
jmp
in
xlat
xchg
test
pop
jle
test
enter
lods
mov
jg
clc
cmpsl
lods
xchg
fwait
cmpl
push
jp
mov
mov
stos
les
jno
jns
mov
or
pop
mov
add
hlt
mov
pop
cmp
and
dec
js
push
das
xchg
popa
fbstp
jl
mov
xor
lods
sub
rcrl
fisttps
pop
sub
or
mov
pop
jmp
sub
xorb
mov
cmp
fisttps
mov
je
popf
jle
cmc
cmp
loop
adc
mov
jns
mov
insb
addr16
push
cltd
test
mov
mov
sbb
dec
push
jns
inc
test
sti
mov
shrb
mov
mov
mov
lahf
dec
mov
dec
sbb
ss
push
aad
out
les
dec
ljmp
orl
pushf
loop
push
popf
pop
push
push
lds
xchg
push
sub
mov
and
out
mov
adc
mov
mov
insl
mov
jp
inc
decb
and
xchg
xchg
cld
fidivrl
testb
scas
cmp
scas
sahf
jo,pn
movsb
clc
dec
jns
or
and
xchg
sub
mov
push
dec
fildl
sbb
ja
mov
call
loopne
inc
fldl
flds
push
test
loope
outsl
mov
jne
adc
mov
rorb
push
lret
pop
xchg
push
mov
lahf
sbb
out
inc
movsb
cli
sbb
dec
outsb
adc
pop
lods
xor
jnp
sti
sub
ds
mov
or
ljmp
mov
fidivrs
mov
jge
or
stos
into
lcall
movsbl
pop
mov
lret
aam
and
cmpsl
fmulp
cmp
pop
and
out
pop
or
and
pop
and
test
pop
sub
mov
sbb
mov
das
dec
lock
cltd
cmpb
xchg
mov
or
sar
aas
fwait
test
push
lods
in
mov
movsl
sti
or
mov
mov
pop
ja
pop
or
push
mov
sbb
or
dec
mov
inc
sub
jecxz
clc
mov
add
mov
xor
pop
push
add
out
loope
test
das
jae
fwait
xchg
cmp
das
popf
std
jmp
pop
mov
std
shl
cmpsl
dec
call
rclb
insl
into
xchg
into
dec
adc
cld
mov
and
cltd
pop
or
and
loopne
ret
and
loop
test
js
mov
push
mov
jmp
stos
fnstenv
shlb
dec
into
sbb
sbb
aad
sub
push
enter
xchg
mull
cs
into
outsl
mov
clc
mov
ret
aam
bound
mov
or
sub
ret
cmp
xor
pop
mov
adc
mov
mov
movsb
frstor
sub
adc
loopne
jl
cmpsl
sbb
loopne
in
xchg
push
xchg
lods
outsb
mov
cmp
xchg
cli
loop
xor
xchg
pop
mov
and
dec
mov
xchg
cli
mov
ljmp
mov
adc
popf
pop
xchg
aam
and
ljmp
mov
or
inc
repnz
shl
ljmp
mov
lock
push
sub
mov
popf
daa
mov
mov
leave
mov
cld
fistl
add
into
mov
pop
les
in
loope
fiaddl
xchg
int
sub
test
hlt
jmp
in
test
scas
mov
mov
nop
push
movsl
popa
lock
ljmp
push
dec
jp
in
scas
jo
xchg
shl
fdivs
cmp
push
xor
lock
push
inc
dec
cwtl
and
lea
lds
pusha
adc
or
cli
or
push
jne
repnz
cld
push
fcoms
push
mov
push
xchg
mov
cmp
icebp
adc
fadd
mov
adc
lret
sbb
dec
out
xchg
xchg
fisubrs
jge
xchg
mov
test
imul
inc
inc
xchg
adc
imul
cmp
dec
out
push
mov
xchg
and
hlt
enterw
lds
push
lret
add
push
repnz
ja
pusha
xlat
xchg
push
pop
mov
pop
xlat
out
and
ret
push
sbb
pop
push
mov
and
push
mov
stos
out
mov
in
arpl
and
sbb
cmp
ror
out
shrl
push
fsubr
bound
jg
and
xchg
jne
pusha
push
push
jge
mov
push
dec
jns
into
push
outsb
cmp
or
mov
jle
div
sub
push
lcall
lods
jp
out
xor
lock
repz
stos
push
adc
repnz
sahf
push
xor
scas
and
call
cli
sbb
addl
aaa
fld
in
xlat
push
push
add
enter
lret
jnp
jecxz
xor
gs
pop
cmp
inc
jg
jle
leave
cltd
mov
das
aaa
xchg
dec
ret
pop
push
jns
sti
cld
xor
int
or
es
test
adc
inc
cmp
in
out
rcl
xor
push
xor
comiss
xchg
ret
mov
pop
jp
fiadds
stos
jle
and
add
adc
sub
mov
hlt
add
in
pop
mov
push
mov
xor
jmp
xchg
push
aaa
sub
push
dec
lcall
rolb
rcrl
test
sub
lock
push
xchg
repnz
pop
cs
nop
test
outsb
ja
repz
cld
push
xor
iret
xchg
pop
and
push
js
mov
adc
jae
test
insl
insb
add
aam
repz
cmp
jne
jmp
aad
inc
les
xchg
aad
mov
add
jge
add
inc
mov
inc
nop
sbb
mov
mov
and
or
fsubl
jb
push
scas
push
sbb
push
dec
enter
push
xchg
and
je
enter
add
adc
xchg
cmp
mov
out
cmp
pop
mov
xchg
xchg
ficompl
ret
iret
lcall
jne
add
jge
jg
xchg
test
lock
pusha
jmp
jo
pop
mov
sahf
fidivl
repnz
enter
out
push
and
test
mov
adc
insl
loope
fs
sub
cmp
sub
outsb
outsb
pop
push
inc
jle
xorl
mov
insl
imul
and
shl
out
and
dec
test
or
mov
xor
popf
jb
adc
jecxz
dec
add
dec
test
cmp
and
ret
int
or
pop
lea
jno
test
insb
sbb
addr16
sbb
dec
aas
cmp
clc
fwait
jle
scas
inc
pop
sar
cmp
sahf
mov
or
std
insb
sbb
pushf
mov
daa
add
popf
xor
movsb
and
mov
aad
and
pop
roll
mov
inc
xor
pushf
shlb
dec
jbe
xchg
into
push
fisttps
jno
in
inc
loope
clc
inc
xchg
or
dec
setg
mov
data16
iret
stos
sbb
out
push
scas
xor
iret
push
cmc
jae
mov
call
cwtl
mov
cmpl
inc
movsl
clc
xchg
and
decb
ret
mov
jge
sarl
xchg
sarl
xor
ftst
pusha
or
xor
test
js
movsl
pusha
sub
or
in
pushl
sbb
lods
push
mov
push
lret
mov
lods
jp
sbbl
das
or
push
stos
stos
pop
xor
lods
loopne
push
mov
ss
pop
movsb
sbb
xorl
pop
xchg
fnstenv
shl
push
sarl
dec
stos
insl
xor
sar
out
and
xchg
int
outsl
test
in
int3
cmp
stos
and
lods
incb
push
mov
imul
push
pop
fisttps
dec
inc
movsb
pop
xor
jo
xchg
cmp
int3
and
sub
daa
fcmovnb
shll
add
jl
es
mov
mov
js
pop
push
sbb
out
ret
mov
sub
adc
dec
pop
les
dec
and
sub
in
or
xor
mov
push
out
pop
in
hlt
iret
loopne
movsl
inc
arpl
out
aad
mov
rcll
cmpsb
insl
lock
es
mov
mov
outsl
adc
add
daa
fdiv
cmp
lods
icebp
or
jge
mov
fmull
rclb
mov
shl
jp
push
fcoms
pop
jmp
out
and
inc
cmp
fildl
jg
sbb
push
nop
add
push
add
jl
jne
sbb
cmp
movsb
cwtl
dec
ja
dec
xchg
ds
dec
sub
aas
das
cmpsl
repnz
cmp
adc
out
mov
push
sbb
push
nop
push
cs
dec
ljmp
dec
bound
sub
mov
shrl
cmc
ss
movsl
insl
dec
xchg
cwtl
movsl
scas
add
or
lods
dec
std
imul
sahf
cmp
or
bound
scas
pop
xor
adcl
repnz
adc
divb
repnz
movsl
sbbb
inc
dec
enter
imul
dec
jbe
loopne
mov
pusha
mov
in
outsl
xchg
push
mov
jno
pop
leave
cmp
andb
sahf
xchg
stos
cmpsb
xlat
gs
pop
xchg
inc
xchg
adc
cmp
inc
cli
or
sbb
or
out
jae
test
mov
sbb
sub
outsb
insb
pusha
adc
movsl
nop
out
lods
cld
rcr
addr16
andb
clc
inc
mov
or
outsl
fwait
arpl
xchg
and
movaps
pop
sbb
je
adc
push
fsts
jns
push
jge
les
out
out
aam
cwtl
enter
pop
rorb
xchg
jns
ss
jns
jl
es
push
sbb
and
ret
mov
cmc
mov
mov
sub
loop
leave
rcrl
or
add
mov
push
mov
enter
in
pop
int
xor
cltd
dec
js
and
sbb
cmpsl
stos
push
icebp
lahf
add
push
xchg
sbb
fs
xor
pop
mov
shrl
int3
sbb
or
mov
inc
in
loop
cli
xchg
sbb
push
xlat
fidivs
add
cli
fs
movsl
xchg
inc
xchg
push
pop
xchg
nop
dec
jnp
in
push
sub
jl
pop
pop
loope
cmp
inc
adc
loopne
add
xchg
dec
fnstsw
adc
das
mov
mov
xchg
mov
ret
jns
inc
popa
dec
and
icebp
icebp
sbb
cli
sub
push
dec
js
mov
sub
aam
push
ds
fstpl
adc
dec
test
inc
dec
pop
subl
pop
fnstenv
dec
push
adc
push
shlb
fadd
scas
testb
fcmovnu
lds
out
jae
sbb
adc
ficoms
test
inc
sub
jl
lcall
sbb
imul
mov
pusha
enter
or
mov
inc
aad
fistps
and
cmp
dec
xabort
nop
inc
inc
lcall
aaa
cmp
icebp
mov
outsl
adc
cmc
dec
mov
inc
mov
xor
push
roll
jmp
sbb
cltd
add
stc
mov
fsubrl
cmp
outsl
sbb
pop
rclb
adc
push
adc
js
repz
sub
jl
inc
ds
pop
mov
add
rorb
das
jmp
out
sub
xchg
insl
mov
xor
pop
out
outsl
jmp
xor
xchg
pop
push
sbb
outsl
jle,pn
add
int
fucomip
jl
xchg
xchg
pop
push
out
and
stos
jns
add
push
shl
add
sub
inc
add
and
jo
popf
pop
mov
sub
js
ret
pop
sbb
daa
decl
fwait
push
popa
fisubrs
and
cli
xor
jge
es
lods
mov
cwtl
inc
fnstsw
mov
mov
cmp
mov
ja
sbb
push
loop
imul
pop
jge
jmp
mov
mov
loopne
fsubs
shlb
data16
pushf
sbb
push
dec
xlat
and
aas
sbb
addr16
push
cmp
fidivrl
sub
jmp
imul
and
ret
dec
dec
popf
cmpsb
outsl
xchg
insb
in
xchg
inc
int
inc
cwtl
and
mov
xchg
dec
out
popf
pop
mov
cwtl
outsl
mov
dec
push
add
js
cwtl
lods
dec
arpl
fmuls
test
stos
push
call
scas
jo
adc
mov
fsubrp
xchg
pop
mov
xchg
push
ss
cmp
hlt
mull
int3
jmp
insl
bound
aas
push
inc
lds
cwtl
pop
push
mov
sbb
inc
test
push
xchg
xchg
in
inc
sub
lret
adc
and
sub
mov
cmp
dec
adc
pop
data16
pop
push
int
pop
add
loop
pop
mov
bound
lahf
dec
dec
call
je
push
xchg
add
pop
push
inc
sbb
mov
fs
pop
pop
mov
sub
push
repz
xchg
scas
les
mov
ror
mov
cs
into
or
fisubs
dec
rclb
adc
sub
push
iret
loope
mov
or
cmpl
orb
jno
ds
push
imul
shll
xor
adc
test
jns
sbb
dec
scas
scas
mov
jnp
and
xor
xor
xor
pusha
leave
pushf
into
outsb
outsb
cmp
in
inc
mov
sar
push
and
pop
cmp
mov
push
jge
xchg
bound
pushf
fs
and
cli
inc
xorl
lcall
fadd
push
subl
in
push
mov
stc
outsb
cmc
mov
cmp
fs
pop
test
std
mov
insb
inc
pop
or
mov
pop
mov
rcl
push
loop
repnz
mov
shr
lcall
imul
mov
lcall
pop
outsl
add
mov
loope
out
mov
add
mov
cmp
push
add
xchg
and
arpl
mov
lret
fs
je
lret
xchg
sub
push
repz
and
inc
adc
sub
push
sub
rorl
inc
adc
xor
std
fildll
add
gs
out
push
stc
pop
lret
add
add
or
cwtl
rol
ret
jno
inc
insl
std
jmp
jmp
or
xor
inc
enter
cli
mov
scas
mov
pop
call
lds
sbb
sub
and
push
popf
mov
jecxz
aad
sbbl
stos
stc
sahf
adc
mov
dec
xor
ret
imul
iret
xchg
ret
fs
arpl
mov
nop
loop
push
jp
sub
jno
mov
mov
jl
icebp
pop
fidivrl
rcll
dec
mov
scas
and
mov
lret
push
out
xchg
and
or
sahf
aaa
mov
push
sub
xor
fsubp
inc
mov
add
adc
mov
lods
lds
daa
adc
sbb
mov
push
bound
pushf
imul
ror
pop
test
dec
xchg
les
and
pop
imul
insl
cmp
das
mov
xchg
jge
adc
jae
adc
call
pop
or
fs
pop
xlat
loop
repz
jmp
lahf
push
mov
sti
sbb
push
cmp
leave
jecxz
popf
inc
and
mov
dec
pop
das
inc
mov
aam
imul
je
sbb
sub
cs
fimuls
js
dec
dec
add
adc
loop
cltd
mov
inc
xchg
mov
popa
sar
push
and
aas
mov
es
mov
fstp
rorl
dec
add
cmp
mov
fidivs
cltd
sahf
push
cmp
movl
xor
push
xchg
xlat
mov
push
scas
xchg
daa
cltd
pushf
push
cmpsb
mov
ds
jae
stos
xchg
xor
and
mov
pop
or
pop
xchg
mov
int3
sub
xchg
jae
add
fstpl
add
and
push
or
dec
sti
out
data16
sub
mov
loopne
and
test
push
dec
jns
mov
push
clc
aaa
mov
and
mov
mov
xchg
xchg
ds
rorl
cmpl
mov
inc
iret
cld
dec
xchg
stos
int
stos
sti
iret
and
lcall
push
push
push
movsb
push
shll
aam
inc
mov
pop
adc
cmpsl
lods
lds
hlt
fwait
popa
fbstp
jp
jmp
push
sbb
cmp
cmp
dec
pop
pop
jge
sub
mov
inc
mov
stos
or
or
gs
shll
out
cmc
push
leave
jae
scas
mov
xchg
push
mov
sub
fists
cmc
mov
loopne
xor
mov
jmp
call
dec
push
xlat
xchg
or
sbb
js
and
bound
push
mov
adcb
das
inc
jne
arpl
cli
mov
ljmp
in
sbbl
jmp
outsl
clc
adc
sbb
popf
and
aas
pop
sub
sahf
push
push
out
or
stc
and
cmc
fisubs
add
inc
sbbl
push
cmp
cmp
out
sub
lea
int
or
push
pop
sub
inc
xor
or
sbb
mov
in
js
mov
or
insl
mov
sahf
dec
imul
loopne
mov
shrb
xor
bound
cmpl
leave
dec
push
sub
jae
mov
mov
mulb
xor
movsb
in
jb
mov
stos
cmc
mov
pop
pop
or
xchg
pop
mov
cmp
push
mov
and
ja
jb
sarl
pop
push
iret
jno
inc
cld
jl
cmp
in
xlat
idiv
and
cmp
and
lret
xchg
inc
push
aam
push
mov
jecxz
adc
push
cmp
lods
test
and
aam
cwtl
push
sbb
aas
sti
ret
out
fiaddl
js
int
jge
add
inc
cli
out
addb
xor
ss
adc
insl
sahf
xchg
mov
cwtl
xchg
pusha
cmp
adc
xor
and
out
fsubrs
mov
sti
or
xor
pop
cmpsl
push
mov
pop
test
testb
cmp
pushf
nop
lret
out
lret
ficomps
sti
jne
pop
in
insl
push
mov
mov
fisttpll
sub
mov
mov
mov
and
mov
lahf
out
bound
and
in
rclb
mov
or
fcmovnb
jge
mov
popf
ret
push
sahf
lahf
dec
sub
incb
sahf
mov
mov
and
aad
repnz
and
in
sbb
int
sbb
mov
sub
push
scas
jmp
push
xor
or
jns
decl
outsl
mov
cmovs
mov
mov
nop
testb
or
fs
and
into
test
jne
mov
sub
cs
mov
adc
adcl
ja
pop
inc
lcall
jmp
xor
clc
inc
jb
mov
push
jb
je
sub
xchg
cltd
pop
jns
hlt
bound
sbb
cmpb
lahf
add
jo
and
xor
push
jp
mov
pushf
ja
dec
adc
sbb
fwait
stc
push
pop
je
mov
push
test
push
andl
pushf
inc
mov
jns
notb
insb
fnstcw
push
adc
jecxz
mov
jbe
push
mov
sub
jmp
pop
outsl
mov
push
inc
sbb
test
jbe
xchg
mov
scas
aaa
cmp
shlb
mov
arpl
cmc
jl
sub
out
call
push
nop
sbb
ds
mov
inc
pop
test
js
enter
cwtl
insb
iret
pop
rcrb
lcall
sbb
out
lahf
mov
test
jecxz
insl
dec
jnp
xchg
xchg
xchg
mov
repnz
sub
fsts
outsl
jno
daa
add
scas
lea
mov
push
push
pop
or
in
and
arpl
jnp
adc
fidivrs
int3
sti
lds
imulb
loope
subl
rcr
call
mov
lret
orb
inc
xchg
cmp
jmp
push
push
test
inc
xorl
rorb
sti
sub
aad
sbb
popf
lcall
jg
mov
inc
fbstp
ljmp
adc
push
inc
sbb
lea
xchg
outsb
les
pop
imul
jp
push
pop
dec
mov
add
adc
ljmp
mov
add
adcb
mov
pushf
dec
cmpsb
xchg
test
aas
cmp
jae
mov
or
xor
enter
pop
jge
ret
iret
cmp
loopne
loopne
pop
xchg
das
add
push
dec
and
lea
movsb
sub
test
mov
inc
rcrb
rcr
dec
mov
mov
in
test
inc
pop
ljmp
or
adcb
aam
jl
or
pop
xor
mov
xchg
dec
adc
stc
cmp
fdivrs
xchg
xor
idivb
mov
mov
aam
lret
ror
in
out
sub
ja
lret
rcll
mov
push
push
mov
adcl
dec
jp
push
arpl
hlt
aas
or
jnp
xor
mov
xor
aad
jae
dec
xchg
test
inc
xchg
scas
cmp
mov
pushf
cmpsl
inc
mov
adc
outsb
gs
add
adc
or
loopne
inc
arpl
lret
and
sub
lods
cwtl
xchg
pop
dec
insb
sbb
sbb
out
add
insb
and
pushf
rcl
mov
test
cmp
jo
cmpsl
push
xchg
cwtl
inc
fisttpll
inc
sub
iret
and
pop
sbb
pop
aas
mov
stos
sarb
gs
sub
or
out
cli
out
mov
cmp
arpl
orb
insl
out
sub
aas
stos
xor
lret
mov
ljmp
in
sbb
lock
xchg
mov
imull
test
adc
jns
scas
sbb
in
sbb
scas
jno,pn
lods
push
mov
outsl
mov
xchg
leave
ret
nop
movsb
call
fwait
or
pop
jno
ficoml
add
cmpl
mov
xchg
or
cmp
jns
adc
mov
inc
jbe
xlat
jle
out
xor
xor
loop
pusha
pop
mov
in
jno
jo
cld
push
daa
jge
dec
cmp
inc
fnsave
adc
shll
mov
stc
or
inc
in
mov
push
mov
and
hlt
scas
dec
gs
lods
jns
nop
push
add
push
mov
popf
gs
lods
scas
outsl
ficomps
incl
int
iret
dec
adc
into
push
cmpsl
mov
inc
mov
sahf
xchg
inc
mov
dec
jl
out
das
prefetch
pusha
inc
loope
rol
test
int3
inc
xor
cmp
sub
xchg
or
xor
aas
pop
rorl
outsl
jo
repz
xor
and
and
sub
push
lds
sbb
add
xchg
hlt
inc
sti
sub
xor
adc
cmp
adc
add
or
add
loop
jmp
frstor
cmpsb
clc
xor
mov
pop
sbb
pop
inc
dec
jb
push
adc
inc
ret
loop
sub
mov
imul
and
pop
ja
pop
daa
jmp
xchg
or
nop
outsl
push
int3
dec
mov
xchg
sbb
cmp
cmpsb
mov
mov
loop
adc
jbe
mov
std
mov
orb
jno
push
mov
ret
xor
sbb
pop
mov
add
insb
mov
pop
fmul
lock
test
jnp
lret
into
pop
add
mov
ljmp
lods
jge
mov
insb
adc
pop
aad
out
jb
fsub
push
lds
lds
mov
leave
add
arpl
pop
cmp
mov
aaa
out
jns
sbb
jo
lods
cltd
push
xchg
int
push
add
packssdw
xor
jbe
ljmp
cmp
adc
lds
inc
push
insb
sub
mov
imul
add
repz
les
out
ret
out
daa
mov
lock
mov
jmp
gs
das
out
and
add
jmp
int
xor
or
jecxz
mov
inc
outsb
pop
test
sbb
add
int
aad
scas
pop
nop
inc
add
test
adc
inc
leave
and
int
pop
mov
ja
loope
mov
mov
fistps
xor
cmpsb
insb
dec
adc
cld
mov
fisubrl
mov
in
xchg
imul
or
add
cmpsl
out
dec
movsb
int
lds
insl
repnz
inc
fildl
cmc
sarl
dec
btc
insb
inc
into
mov
divl
fadd
sub
sbb
mov
jg
movsb
arpl
sbb
es
es
adc
repz
add
int3
sbbl
jne
mov
int
sub
xchg
into
xor
mov
and
dec
out
and
xchg
pop
jp
aad
fidivl
not
and
xchg
xor
lahf
xchg
lret
mov
push
jecxz
push
cmp
and
bound
sbb
mov
jg
add
cmp
push
je
in
lret
dec
push
scas
xlat
call
xlat
fbstp
or
scas
in
aam
cmp
mov
cs
add
sbb
xor
fwait
mov
aad
mov
push
ss
pusha
int
insb
jbe
ljmp
cmc
jns
xchg
push
and
js
repz
dec
sbbl
divb
mov
dec
cmp
mov
mov
mov
mov
ljmp
and
xor
aaa
dec
fidivl
subl
mov
or
jge
pop
in
adcl
adc
mov
frstor
jns
shlb
orb
or
nop
test
cmpsb
jo
dec
xchg
les
pop
test
lcall
pop
test
sub
cmp
mov
dec
icebp
or
not
cmp
jne
mov
scas
roll
insb
mov
sarb
dec
mov
jmp
mov
and
es
jg
loop
jnp
fstl
or
inc
xlat
into
outsb
frstor
mov
outsl
nop
inc
xchg
dec
push
dec
pop
cwtl
outsl
or
cmp
push
loopne
pop
lods
cmp
cmpsl
loopne
cmovge
mov
int
inc
jno
and
mov
sbb
add
or
pop
xor
repnz
addr16
sub
or
iret
sti
cmp
test
lret
adc
and
mov
sub
or
xor
lock
mov
mov
xorb
popa
cli
sbb
sbb
inc
test
mov
sub
inc
dec
push
dec
dec
dec
jmp
dec
inc
inc
and
cs
out
imul
or
mov
pop
cmc
mov
sbb
imul
jbe
xor
or
and
push
or
cmp
fadd
adc
mov
adc
jb
rcll
sbb
cmpl
cmp
jns
popa
sarl
idivl
mov
dec
pop
xor
pop
inc
int3
mov
cmp
push
cs
sbb
xor
fisttpl
dec
jle
out
in
sub
mov
mov
popa
xchg
add
aas
in
inc
fisubl
pop
inc
or
rcrb
xor
in
mov
adc
adc
add
mov
adc
jno
test
out
loopne
repz
cmp
cmp
testb
pop
mov
mov
test
stc
ds
je
or
ret
rep
mov
jge
inc
test
or
xlat
aam
or
or
call
xor
or
lcall
adc
notb
iret
push
test
in
cmp
push
cs
ljmp
push
jl
in
lds
mov
and
into
pushf
xchg
add
mov
add
xor
sub
test
cmpsl
in
inc
dec
xlat
add
arpl
inc
push
push
xor
jno
jno
in
out
pusha
call
add
mulb
rolb
repnz
mov
pop
std
sub
dec
mov
fidivrl
xchg
loope
repz
dec
scas
xor
sub
dec
ret
pop
push
push
imul
mov
push
xchg
and
cmp
scas
adc
add
bound
notl
lahf
xchg
push
dec
arpl
pop
shll
sti
repz
sarb
xor
into
jp
mov
movsl
mov
sub
outsb
ret
cmpsl
outsb
push
jp
sbbl
je
cmp
or
fidivrl
mov
mov
mov
xchg
jl
push
jg
jb
popl
cmp
iret
xlat
loope
sbbb
push
cmp
out
xchg
dec
jp
mov
mov
mov
call
fcoms
adc
xchg
mov
shl
insl
bnd
and
xchg
adc
stos
shll
cltd
and
add
shrb
mov
mov
mov
xchg
mov
push
fimuls
push
das
stos
push
not
xor
out
out
cli
xor
lods
cmp
sbb
in
pop
mov
mov
jl
cmp
cmpsl
out
xchg
and
ret
dec
ss
cmp
addr16
push
out
shl
xchg
adc
cmc
hlt
pop
insl
mov
pushf
mov
mov
out
inc
lods
fwait
mov
add
xor
ljmp
inc
mov
xchg
mov
push
sbbl
idivb
cmp
sub
or
clc
notb
mov
jle
dec
cmp
xchg
int3
mov
stos
sub
or
test
ficoml
mov
dec
data16
xor
fidivs
sub
push
lods
adc
dec
xchg
cmpsl
inc
aaa
push
mov
lods
or
leave
iret
sti
and
mov
out
mov
adc
out
jbe
cltd
jns
cmp
dec
cwtl
xchg
and
out
mov
mov
fnstsw
push
popa
mov
xchg
pop
inc
cli
push
test
adc
les
movsb
scas
sub
roll
cmc
gs
inc
pop
push
add
or
dec
xchg
sub
push
inc
data16
int
push
stc
inc
out
mov
jno
fsts
add
push
das
cmpsl
sub
add
adc
icebp
xchg
shrb
xorb
inc
sahf
aad
out
rcr
push
into
mov
or
out
and
adc
addl
std
lahf
mov
xchg
push
dec
jge
scas
pop
stos
stos
enter
rcll
repz
sub
jge
sbb
ret
push
cwtl
push
fstps
mov
mov
fcompl
xchg
gs
cmp
xchg
mov
adc
jl
sti
sbb
xor
or
push
or
dec
cmp
pop
xchg
mov
divb
in
jae
and
int
enter
in
xor
mov
inc
xchg
or
call
sub
push
insl
jb
fidivl
nop
or
mov
sub
sbb
outsl
lds
mov
insb
mov
jae
clc
adc
movsl
lahf
xchg
mov
push
jo
jns
and
in
mov
and
imul
push
jge
inc
push
adc
push
and
pop
int
or
push
mov
jp
movl
cmpsl
mov
cli
stos
test
test
adc
pop
push
push
in
pop
pop
mov
xlat
pop
inc
dec
add
inc
xchg
test
fwait
dec
lret
inc
movsb
inc
pop
sbbb
and
dec
in
lock
pop
shrb
xchg
loope
dec
aaa
adc
xor
into
sub
mov
cmc
inc
cld
mov
jo
mov
dec
cmpsb
mov
dec
test
stc
loop
or
push
xchg
mov
pushl
stos
mov
fsubr
adc
inc
es
mov
fsubrs
loope
pop
mov
sub
faddp
shl
xorl
lods
hlt
fs
mov
mov
cmp
out
pop
sub
sbb
sbbb
pushl
mov
aam
and
xor
sub
push
inc
shrb
fisubrl
cli
mov
rorl
fldcw
xchg
pop
sbbl
lcall
jb
dec
inc
fadd
das
jmp
loopne
mov
xchg
fldenv
sbb
add
jle
xor
jmp
push
mov
xchg
gs
push
arpl
repz
jl
add
mov
adc
adc
jbe
shll
mov
cmp
pop
sub
fbstp
cltd
inc
fstps
mov
shrb
rolb
push
jns
clc
pop
jne
add
test
push
inc
and
mov
shlb
lods
add
nop
push
cmpsl
mov
aaa
out
jg
jmp
mov
fidivrs
pop
jecxz
lahf
add
ret
xchg
mov
mov
jmp
xlat
mov
sbb
das
pop
xchg
ds
shlb
fisttpl
sub
and
enter
mov
cmpsl
mov
mov
pop
sbb
mov
mov
and
xchg
push
and
mov
clc
push
or
fdivrl
xchg
and
cli
push
in
xor
and
mov
mov
or
pop
lea
pop
test
or
je
push
push
in
adc
movsb
and
call
pop
nop
xchg
mov
push
lods
aas
iret
or
pop
call
xor
mov
enter
mov
adc
mov
test
scas
ficompl
xor
and
xchg
sub
cs
gs
or
jmp
clc
test
add
sbb
push
cmpsb
gs
cmp
outsl
in
add
pop
loopne
pop
sub
xor
jp
enter
jmp
cmp
jbe
mov
jne
in
aaa
cli
push
push
xchg
add
leave
scas
pop
mov
xor
mov
pop
fdivrs
test
pcmpgtb
addr16
lods
shrl
pop
int3
push
add
nop
into
outsl
cmp
aas
divb
adc
or
cmp
mov
cmpb
stos
adc
test
rclb
out
push
inc
mov
adc
mov
ficoms
pusha
subb
sbb
xchg
sti
lret
mov
push
dec
mov
jae
xor
daa
out
stos
add
out
pusha
mov
jbe
out
ss
inc
into
mov
inc
daa
add
mov
push
jo
mov
iret
cmp
xor
stc
mov
fwait
int3
add
testl
adc
movsl
jne
adc
fwait
div
fidivs
xchg
pop
adc
clc
mov
or
hlt
repnz
das
dec
daa
lea
lahf
movsl
sub
or
sub
mov
sub
adc
pop
and
icebp
pop
notl
lods
inc
cmp
xor
sub
xchg
mov
scas
int3
xchg
add
pop
ljmp
fisubl
ja
mov
mov
out
sahf
lds
jne
rclb
adcl
inc
cmp
jg
push
insl
cs
adcb
fmul
pusha
sbb
test
test
inc
insb
es
push
loopne
sbb
mov
fsubr
xor
je
jmp
cmp
lea
push
in
sbb
sbb
or
ljmp
in
adc
sub
inc
pop
push
mov
sbb
addr16
loope
pop
sbb
icebp
cmp
and
pop
enter
fcmovne
std
movsb
and
mov
xchg
lret
std
fwait
add
push
add
cld
scas
lcall
nop
pushf
xor
push
mov
push
mov
xor
dec
mov
fdivrs
xor
into
or
mov
std
stc
xchg
adc
icebp
test
dec
pushf
xor
notb
xchg
fisubrl
cmpsl
arpl
pop
ds
icebp
xor
xchg
xchg
dec
pop
icebp
xchg
pushl
dec
popa
xchg
jbe
fcomp
cld
mov
push
dec
mov
sarb
jno
or
and
std
les
lahf
mov
inc
or
movsl
int3
int
sub
rcrb
mov
stc
dec
lahf
mov
fidivrl
xchg
pop
sarb
and
add
dec
in
ret
lcall
sbb
mov
imul
jae
fldenv
pop
and
xchg
data16
mov
and
xlat
push
lds
cmp
sbb
mov
mov
mov
int3
adc
xchg
dec
outsb
pop
stc
std
cmp
out
cmp
int3
or
in
dec
je
jbe
daa
imul
cmp
mov
ss
outsb
inc
stc
out
xchg
in
and
xor
jbe
lret
xchg
aaa
pusha
pop
xchg
mov
out
push
repz
jmp
add
push
leave
mov
mov
cli
or
dec
popf
rcl
pop
add
push
add
ficomps
push
mov
or
fs
fs
leave
mov
add
pop
push
and
add
iret
sbb
mov
fucompp
xchg
nop
push
filds
fnstenv
jb
jae
inc
movsb
je
cmp
ficoml
cmc
pop
mov
xor
pop
dec
push
ds
sarb
and
push
dec
addb
fidivs
cmp
xlat
jb
sub
jge
fcompl
and
jl
jge
mov
inc
testb
ds
ret
jle
lock
dec
inc
and
pop
push
bound
dec
sbb
pusha
cli
or
es
sub
push
sarb
fdivrp
and
je
push
mov
and
cmp
jp
push
sbb
das
fistl
sbb
push
cmpl
ds
enter
fcompl
inc
fprem1
inc
js
ss
mov
test
adc
mov
inc
cmc
out
icebp
mov
xor
ret
jl
mov
imul
imul
rorl
and
xor
mov
je
lock
nop
xchg
cli
out
sti
dec
fadds
sub
pop
pop
fisttpl
mov
leave
push
notl
fwait
scas
inc
cmp
mov
mov
inc
jecxz
jo
pop
test
test
adcb
mov
adc
loopne
outsb
mov
nop
loop
scas
or
out
adc
push
inc
push
pusha
andl
fwait
insb
or
push
push
inc
popa
stc
pop
xor
fstpl
xchg
pop
inc
jns
sahf
add
mov
inc
lea
pop
xlat
scas
fwait
mov
lods
shrb
push
imul
adc
int
xchg
push
or
aas
dec
xchg
popf
fcos
and
adc
sti
push
fisttps
in
mov
lea
xchg
xchg
out
mov
loopne
outsb
or
les
sub
pop
test
call
int
ret
call
xor
jp
add
lods
and
adc
call
imul
push
or
sub
jb
hlt
cmpl
outsl
pushf
sub
dec
rorb
cmp
and
dec
jno
cs
pop
dec
cmp
aas
add
sub
mov
adc
cmpsb
call
data16
adc
sub
cmp
add
mull
cmc
cmp
jno
mov
add
enter
and
cli
movsb
xchg
ljmp
dec
in
jg
sbb
adcb
gs
xor
stos
lret
std
negb
or
mov
push
pop
push
pop
and
push
add
jle
xlat
push
lods
pop
pop
aam
cmp
mov
mov
jg
lret
xor
mov
mov
mov
xchg
ror
push
enter
les
inc
inc
les
js
fs
and
cwtl
hlt
cs
rcr
mov
repnz
out
call
mov
inc
test
fs
sub
imul
sbb
push
and
jne
xchg
mov
adc
mov
lea
cmpsl
xchg
mov
inc
pop
idivl
mov
xor
and
fwait
sbb
xor
mov
bound
pop
xchg
add
ret
repz
lds
sbbb
mov
sub
shrl
scas
lock
aas
add
add
push
pop
or
aad
enter
and
jbe
pop
cmp
cmp
repz
inc
push
in
xor
inc
insl
jne
orb
cmp
push
aad
cmp
inc
aas
stc
loopne
mov
add
lret
mov
inc
aam
addr16
in
push
fbstp
in
outsb
inc
jp
xor
cmc
and
rcrl
mov
data16
out
lahf
mov
icebp
insl
inc
cmpsb
in
cmc
pop
mov
and
rcl
mov
push
dec
shll
mov
notb
push
repz
adc
nop
sub
cmpsl
mov
aaa
addb
xor
ficomps
cmp
jne
push
cli
test
imul
leave
lahf
movsb
fdivrs
push
scas
push
jo
bound
or
or
pop
popa
ljmp
add
adc
aas
pop
fwait
clc
loope
mov
int
sbb
xchg
pop
adc
push
inc
pop
loopne
andb
js
xor
int3
fs
outsl
mov
dec
push
fidivrs
xlat
jge
add
cmpsl
icebp
add
ljmp
sub
mov
in
pop
inc
cmpsl
addr16
and
aaa
add
fdivs
stos
call
dec
mov
sahf
cmpl
or
mov
sbb
loope
lret
xchg
lds
add
push
gs
fs
or
hlt
int
popf
jmp
dec
lock
arpl
test
mov
jp
sbb
lahf
push
xor
nop
jg
push
jecxz
inc
dec
add
mov
and
mov
cli
iret
sub
mov
mov
test
cmp
adc
inc
mov
ja
mov
inc
mov
addr16
pop
nop
push
push
xor
addr16
fnsave
pop
stos
movsl
sbb
mov
sub
pop
pushf
push
cmp
in
mov
filds
rcll
shrl
add
clc
sub
push
lods
and
subb
lret
fadds
cmp
and
dec
out
pusha
aas
addl
bound
lahf
mov
sbb
cmp
lods
push
xchg
push
popa
mov
data16
hlt
popf
mov
aam
arpl
sbb
fistl
das
xchg
and
push
add
out
sbb
lds
fnstcw
lods
ja
scas
mov
mov
xchg
push
aad
lods
test
lret
enter
cld
js
shlb
push
imul
and
cmpsl
das
fsubr
xchg
fyl2xp1
stc
mov
push
testb
jp
jo
xor
add
outsb
mov
mov
dec
add
aaa
mov
push
aam
enter
push
pop
test
push
rol
pop
adc
aas
mov
push
ljmp
cmp
inc
daa
add
std
push
js
scas
call
cwtl
mov
xchg
fwait
and
sbb
fnsave
popf
fsubs
pop
jmp
lret
into
lods
push
dec
ja
movsb
jnp
sub
outsb
ficoml
pop
sbb
cmpsl
ret
mov
mov
fistps
ficompl
fsts
fadd
jno
inc
cmp
sbb
pop
mov
and
pusha
dec
mov
mov
inc
out
mov
cmp
or
addr16
int3
outsl
pop
fadds
inc
push
popa
loope
icebp
clc
sub
xchg
in
sub
xor
orb
pop
mov
cmp
cmp
lds
push
les
enter
sti
push
sub
adcb
sarl
xchg
pop
push
push
jmp
xorl
or
ss
in
jp
ror
clc
sub
fisttpl
sub
out
mov
pop
pushf
shlb
lods
fiadds
mov
pop
mov
add
jbe
mov
xchg
jmp
or
in
loope
fstps
add
pushf
dec
sub
lret
pushf
fldl
push
repnz
sarl
mov
negb
or
cld
pushf
ss
stos
enter
adc
imul
mov
loope
xor
in
stc
test
loopne
popa
inc
sti
mov
xchg
xor
mov
arpl
test
xor
lods
xchg
movsb
mov
fwait
mov
cltd
inc
test
ret
mov
cmp
add
movsl
fsubr
sbb
add
out
pusha
sbb
rcrb
cmp
jne
sub
dec
inc
push
test
scas
and
mov
shr
xor
pop
adc
lock
or
test
mov
outsb
in
jmp
xor
test
fldcw
loopew
mov
jmp
in
enter
pop
adc
ret
stc
test
movsl
jns,pt
js
test
dec
fisubs
into
xchg
xchg
xchg
stos
mov
add
jbe
aaa
jge
jae
pop
sbb
les
loopne
pop
aaa
lods
adc
enter
pop
or
aas
in
popa
add
shl
cmp
dec
cmpl
js
std
loopne
aam
xor
inc
and
jbe
xlat
xchg
adc
mov
repnz
mov
mov
mov
xchg
xor
jecxz
data16
mov
push
ret
ljmp
lock
lock
dec
into
or
or
sbb
lods
fadds
xor
pop
push
lret
mov
dec
sub
ds
sbbl
or
sub
adc
sub
pop
in
and
sti
mov
jo
iret
jbe
add
stos
jge
mov
arpl
cltd
push
movsb
test
mov
cmpsb
stc
insb
popf
mov
testb
nop
add
jae
imul
in
mov
or
aaa
jl
pop
mov
lea
xchg
aas
lret
stc
repz
push
ficoml
daa
mov
fnstenv
fistpl
dec
lret
fisubrs
push
lahf
and
push
dec
cmp
test
scas
push
movsl
repnz
or
cltd
jne
das
sti
jmp
fcompl
idiv
test
outsl
sahf
inc
mov
mov
xchg
leave
mov
rcrl
into
jns
push
cmp
fwait
xor
das
push
jae
sbb
pushf
ja
inc
mov
ja
loop
sub
rclb
es
jb
fdivrl
xchg
sub
rorb
sti
pusha
cmpsb
push
sti
sbb
sub
lods
ds
mov
std
int3
movsl
cld
or
out
sbb
sub
pop
or
mov
out
and
cmp
stos
cmp
ljmp
cmp
fsubr
jmp
sbb
pop
push
fdivl
lock
push
sbb
stc
shl
decb
ret
js,pt
pop
mov
stos
ljmp
ljmp
loope
es
cmp
sbb
pop
add
push
and
leave
jge
xchg
div
mov
sbb
cmp
sbb
fists
jns
ljmp
mov
mov
mov
or
adc
mov
call
sti
andl
inc
push
lds
xor
jecxz
adc
repz
pop
shlb
test
dec
sbb
mov
sbb
jne
mov
int3
cli
sub
push
stos
out
and
xacquire
movsl
push
rolb
jmp
xor
inc
lock
sbb
xlat
cs
or
pop
push
and
rorb
cmpsl
ret
in
mov
add
in
jg
and
sub
and
mov
into
push
into
adc
mov
xchg
fdivrp
xchg
call
ror
push
push
fs
movsl
lock
cld
inc
scas
icebp
jnp
das
mov
ret
push
das
lret
inc
jne
inc
xor
cmp
or
jp
daa
shlb
pop
imul
xor
xchg
ret
pop
std
sbb
xchg
push
sub
insb
std
pop
testl
push
jne
iret
outsl
sub
xor
cmp
cld
sub
ss
jp
cmp
sub
gs
mov
sbb
out
dec
out
inc
lods
std
ret
cmp
mov
or
xor
cmp
push
pop
jle
add
mov
mov
movsb
in
lods
jb
mov
jb
cmp
and
aaa
and
scas
fcom
pop
inc
mov
out
adc
pop
jg
mov
iret
repnz
push
inc
fimuls
cmp
nop
and
icebp
mov
lret
icebp
sbb
jmp
in
add
ror
inc
cmpsb
inc
ds
rcr
mov
xchg
hlt
lods
aam
jns
in
aaa
or
mov
loopne
das
repnz
shr
mov
or
mov
push
ljmp
mov
rorb
xchg
das
shrl
roll
repnz
dec
ja
add
insl
dec
fiaddl
add
inc
out
das
sti
gs
jns
test
mov
lea
mov
fadd
sbb
or
fldcw
cmpsb
jae
push
adc
push
adc
jmp
jmp
dec
mov
xor
sub
inc
xchg
and
in
lret
mov
setp
lret
call
stos
sbb
into
out
xor
mov
push
xor
sub
in
mov
or
out
pushw
lds
insb
rcrb
push
test
lods
mov
mov
cmp
xchg
repnz
inc
int
and
mov
mov
imul
and
aas
mov
sbb
push
and
int3
imul
mov
mov
adc
cmp
jecxz
and
jno
jae
lods
xchg
mov
stos
hlt
imul
inc
shr
fcomp
adc
cmp
into
rorl
add
pop
sbb
jb
mov
push
sbb
and
inc
xchg
cmp
or
and
lret
ret
and
pop
jmp
sub
test
inc
jmp
scas
imul
cld
cmpsb
and
andl
lods
lcall
lock
sti
mov
sbb
add
add
loop
out
scas
jnp
rolb
pop
xor
std
xor
xchg
mov
pop
mov
push
jbe
pop
xchg
syscall
or
mov
xor
ret
sbb
push
mull
inc
mov
push
dec
out
ljmp
mov
sarb
dec
mov
mov
dec
jg
loope
test
inc
ficoms
sti
iret
mov
adc
or
js
cmpsl
cld
xorl
leave
xchg
pop
out
loop
sahf
cmp
shlb
mov
cwtl
cmp
lock
and
in
lods
push
idiv
movsl
out
inc
stos
lods
mov
int
push
lods
inc
pop
sbb
call
imul
mov
fcmovnb
aas
clc
mov
jbe
push
mov
into
addb
sbb
scas
sub
leave
mov
xchg
sahf
pop
mov
inc
add
dec
ret
fs
pop
adc
scas
mov
mov
fwait
out
rolb
sub
aad
or
ficomps
add
xor
cmc
rorb
dec
aam
ret
jnp
push
sub
sbb
jle
or
inc
stos
pop
adc
cli
pop
xor
sbb
dec
lret
dec
mov
lods
and
jg
ret
and
push
or
out
leave
popa
clc
arpl
adc
add
mov
clc
das
inc
xor
or
jo
cmp
std
mov
add
lret
cli
aas
fisttpll
ja
push
mov
xchg
fidivrs
mov
xchg
in
and
xor
mov
cmpsl
mov
loope
std
push
orb
inc
scas
inc
cmpsb
lock
les
mov
fwait
cmpsb
cmp
sbb
mov
dec
or
filds
insb
loope
jb
cld
or
cli
test
inc
adc
pop
add
push
jmp
dec
js
jb
inc
jne
gs
adc
pop
mov
pop
mov
sbb
or
and
insb
push
mov
cmp
pop
inc
pop
xor
inc
dec
iret
stc
or
lret
rorb
fisttpl
mov
xchg
in
adc
pop
cmp
int3
dec
aad
sbb
mov
int
ret
cmpsl
ja
rol
cmpsl
cltd
jb
ret
mov
ja
xor
mov
dec
dec
int3
pop
mov
inc
mov
fdivrp
iret
push
js
xlat
lcall
xor
xor
sbb
jbe
out
fstps
xchg
inc
push
pushl
pop
loope
jmp
add
or
dec
cmc
test
cmp
inc
sahf
loopne
adc
mov
pushf
iret
fcmovu
scas
sbb
mov
mov
iret
dec
jb
pop
cmp
nop
xchg
bound
and
cmpb
push
test
inc
adc
out
mov
dec
mov
dec
pop
shlb
jg
fcmovbe
mov
cmp
jo
scas
mov
xchg
test
adc
add
jmp
hlt
xor
sub
notl
push
pop
pop
inc
mov
xchg
cltd
mov
pop
cli
outsl
cmc
notl
jbe
gs
aad
xchg
mov
push
in
sahf
or
xor
add
mov
fucomp
and
aaa
mov
lret
je
dec
stos
mov
stos
pop
hlt
mov
pop
pop
adc
mov
clc
in
fisttpl
scas
adc
or
sahf
insl
notl
xor
ja
fisubrl
shll
mov
cs
stos
test
shl
dec
sbb
in
sbb
cmp
cltd
imul
push
insb
fs
or
xor
outsl
pop
jecxz
inc
imul
mov
es
ror
jb
sbb
sub
inc
iret
adc
dec
clc
data16
mov
mov
pop
cwtl
ret
popa
call
loopne
lcall
jmp
insb
imul
das
ret
add
fs
mov
and
mov
mov
xchg
sub
mov
pop
int
jg
and
cltd
jo
and
push
insl
stos
test
call
pop
xchg
inc
std
fadds
pop
mov
lahf
test
mov
cmp
ret
cmp
push
aad
mov
xor
imul
enter
adc
stos
inc
mov
hlt
cmc
push
push
adc
outsl
fdivl
fwait
out
sbb
cltd
sbb
inc
inc
mov
cmp
xchg
xor
outsl
xor
cmpsb
fwait
and
lock
pop
add
ljmp
insb
mov
out
cmpsb
call
das
mov
out
mov
scas
xor
xchg
pop
stos
cmc
fwait
lds
push
out
popf
push
sbb
and
test
jo
in
jge
test
les
popa
repnz
mov
jmp
leave
pop
pminsw
or
inc
jnp
sub
push
or
arpl
int3
cmp
out
sub
lods
ljmp
mov
mov
pop
and
pop
stos
sub
sbb
sub
push
dec
cmp
pop
or
daa
fmulp
cmp
inc
jge
sarb
aas
or
xchg
sub
sub
push
dec
pop
dec
sbbb
icebp
cld
int
cmp
ja
daa
sub
sti
dec
movsb
xchg
repz
lea
adc
push
out
arpl
fsubrl
mov
pop
bound
dec
out
inc
xorb
mov
jbe
pop
pop
mov
sahf
or
dec
push
and
addr16
dec
fidivl
popa
and
lods
adc
jmp
orl
in
or
or
mov
and
xchg
ret
jmp
add
mov
adc
lcall
cld
hlt
mov
cmp
inc
aam
jae
xchg
insl
test
mov
imul
mov
scas
aad
sub
jb
inc
cli
fnsave
mov
pop
mov
adc
es
es
dec
or
pop
jo
jbe
mov
add
outsl
stos
jo
in
ret
jge
add
mov
xlat
notl
imul
loopne
inc
pop
data16
add
arpl
xor
stos
xor
sub
xor
data16
cmpsl
mov
sub
jae
inc
clc
push
das
and
sub
adcl
daa
std
add
andb
sahf
jae
lret
in
adc
inc
jne
popf
or
sub
jne
andl
daa
mov
bound
pop
out
mov
loopne
insl
ljmp
fwait
cmp
lahf
rclb
sub
and
xor
in
into
mov
cs
ds
add
mov
or
into
pushf
fimuls
in
sar
cwtl
data16
jb
je
into
stos
jecxz
mov
jle
mov
cmp
test
cmp
mov
xchg
cpuid
sar
mov
fucomp
ret
lock
sbb
sub
fisubrs
dec
jl
jo
mov
dec
fwait
xchg
ja
pop
stc
jno
sbb
lret
push
mov
ret
add
inc
test
cmc
xlat
jo
insb
popf
inc
scas
out
pusha
shlb
inc
cmc
int
daa
mov
frstor
push
mov
repz
sbb
cmp
mov
push
movsl
cmp
sub
jnp
loopne
cmpsl
arpl
fdivl
in
call
std
ss
pop
hlt
rcrb
dec
xor
push
stc
popf
jecxz
xor
rorb
xorb
bound
int
aas
cmc
fimull
push
loopne
loopne
pop
add
add
add
dec
nop
dec
jno
dec
cmp
jp
repz
xchg
adc
inc
mov
or
movsb
sub
jp
les
int
xchg
push
scas
mov
lds
mov
nop
sbb
xchg
xchg
dec
inc
lea
or
into
jmp
jecxz
popa
cld
and
testb
and
rclb
addr16
scas
or
jge
cmc
repnz
jnp
xor
and
cld
outsl
xchg
stos
and
pop
ret
pop
push
mov
xlat
add
movsl
add
inc
neg
out
add
jle
cmp
popa
ret
cmp
add
push
mov
mov
xor
jp
mov
lea
aam
pop
jae
push
les
sub
inc
sbb
sbb
pop
mov
into
test
out
sbb
lods
cmpl
xor
daa
mov
mov
cmp
mov
xor
xchg
arpl
jp
sarl
jmp
out
lret
ds
pop
inc
orb
dec
jno
fidivrs
push
aaa
int3
mov
in
movsl
adc
idiv
nop
je
add
sbb
movups
or
fidivrs
xchg
pop
sub
not
xlat
jae
mov
jmp
dec
sbb
cmpl
pushf
into
cmp
decl
std
aam
mov
pop
imul
push
xchg
lcall
out
fimuls
mov
adc
dec
rcrl
lret
mov
adc
in
mov
dec
fwait
push
roll
push
sahf
mov
cmc
cmp
cli
mov
mov
sbb
add
aad
jbe
into
push
repnz
mov
fiadds
sti
mov
and
in
sub
popa
mov
lcall
add
cmp
hlt
xorb
test
xchg
jno
aad
aas
adc
sbb
pop
or
xor
fbstp
push
xchg
jno
and
repz
cmpsb
inc
lret
test
sub
push
push
adc
cli
lods
pushf
enter
mov
sarl
stc
cmp
nop
push
xor
hlt
push
cwtl
fdivrp
faddl
out
dec
outsb
add
hlt
test
popf
inc
lods
movsl
cmp
popf
mov
jl
mov
adc
pop
ja
sti
or
mov
mov
into
jmp
rcrl
dec
pushf
fildll
cmp
fisubrl
inc
cmp
scas
movsl
hlt
or
jl
insl
jnp
pushf
sbb
jmp
daa
add
stc
mov
in
stos
and
pushl
leave
sub
mov
or
imul
push
test
sbb
sub
loope
fs
pop
inc
push
stos
lret
out
push
roll
xor
cmp
callw
cmp
xchg
dec
inc
pop
or
mov
xchg
cli
jns
inc
faddl
mov
call
ror
shll
sti
subl
xor
pop
inc
idivb
xchg
or
jbe
push
pop
in
mov
lahf
es
or
push
mov
add
xor
rolb
and
pop
jl
inc
movsl
arpl
in
fsubp
js
iret
pop
cld
jecxz
into
into
aas
and
inc
add
xlat
mov
lock
cmp
outsb
sti
pop
push
pusha
push
add
hlt
xor
fistps
ljmp
test
fcmovnbe
add
movsl
xchg
jns
outsl
mov
mov
or
stos
jne
xlat
pop
aad
test
test
idivl
xchg
sub
clc
pop
je
xor
emms
aas
scas
inc
cmp
sub
sbb
sahf
push
lcall
cltd
add
arpl
inc
in
clc
in
sub
dec
pop
std
movsl
lahf
xor
sub
cwtl
outsl
add
repnz
jns
mov
out
pusha
aaa
sbbl
pop
sarb
mov
dec
xchg
xchg
ret
push
decl
lcall
sti
and
jne
lods
movsl
sbb
sub
daa
std
popa
clc
sbb
mov
xor
or
cmp
push
add
jno
das
adc
pop
xorb
mov
sarl
leave
lret
scas
in
mov
dec
dec
push
adc
test
sbb
lahf
lret
xchg
test
call
xchg
xor
lret
cmp
movsb
cmp
lret
fimuls
pop
sbb
loope
inc
stc
sub
call
sbb
lea
ficomps
in
icebp
mov
pop
xchg
mov
sub
sub
arpl
mov
enter
mov
adc
fstps
insb
stos
insb
addl
xlat
lea
cwtl
jnp
or
mov
mov
mov
js
inc
mov
outsl
push
rcrb
lahf
pop
ret
stos
test
push
pop
cltd
cmp
adc
data16
aad
sub
lret
xchg
push
cmp
mov
xorb
xchg
fistps
mov
push
test
repnz
add
push
aam
mov
cmc
das
add
mov
fsts
int3
mov
xchg
dec
add
mov
xchg
xchg
out
mov
shlb
movsb
lret
xchg
pop
jle
xchg
or
pop
int
bound
lods
cmpsb
push
dec
sbb
jle
in
lret
adc
dec
jo
fs
add
aam
jle
push
cs
add
jb
test
stc
test
cmc
aad
mov
mull
test
scas
cmpsb
dec
les
and
add
lds
pop
sub
in
sti
es
xor
mov
int3
je
das
cwtl
inc
bound
mov
sbb
and
mov
push
cmp
xchg
pop
fisttpl
jnp
sarb
and
std
dec
outsl
mov
fucompp
adc
push
daa
pusha
aam
and
mov
rcll
pushf
adc
jg
pop
aam
shrb
int3
out
ret
out
sub
or
mov
jns
adc
and
out
mov
mov
hlt
and
mov
pop
sub
lds
repnz
jb
push
es
addr16
mov
pushf
and
mov
mov
shrb
shlb
and
xchg
cli
nop
xchg
xchg
push
test
sar
lret
sbb
jg
and
ss
or
dec
aas
cmp
ss
aas
movsl
xchg
cld
sbb
push
adc
pop
test
in
adc
add
outsb
mov
lods
xor
leave
add
push
das
xchg
dec
hlt
lds
inc
lock
adc
push
or
dec
outsl
lret
and
inc
and
adc
push
add
in
mov
notl
fstpt
pop
and
adc
fldcw
mov
mov
push
adc
adc
jmp
add
stc
adc
or
pusha
sbb
cmp
cmp
add
cs
mov
and
mov
xchg
mov
xor
out
xchg
push
sbb
decl
ss
jo
mov
fstp
inc
push
lea
push
jbe
jbe
out
push
mov
push
test
sub
mov
lcall
mov
jle
add
movsl
adc
or
push
out
nop
loopne
xchg
mov
aaa
in
shrb
sbb
fmul
iret
cmp
push
add
sarl
mov
insl
or
and
pop
adc
adc
add
imul
jl
push
lock
inc
add
push
jne
inc
push
fs
add
mov
jecxz
mov
xchg
pop
pop
or
orb
scas
or
ret
or
mov
into
mov
ret
or
dec
push
xlat
aaa
cld
test
push
adc
mov
rclb
add
mov
loop
mov
xchg
cli
mov
xor
push
loope
push
inc
or
orb
mov
sbb
adc
test
js
sbb
push
roll
adc
mov
cmpsl
int3
inc
imul
mov
fmuls
xchg
dec
adc
fwait
out
insl
pop
mov
mov
outsl
push
es
or
mov
ret
add
aas
mov
or
xor
add
mov
fsubl
ja
or
lods
sbbl
cmp
arpl
repnz
lahf
and
scas
lahf
cmpsl
sahf
xor
test
fistpll
mov
in
inc
call
loope
xchg
hlt
inc
outsl
test
jbe
mov
in
outsb
xlat
and
pop
pop
ss
adc
pop
cmpsl
xchg
jo
xchg
sbb
sti
jbe
jecxz
popa
and
sbb
inc
aaa
xchg
loopne
outsl
adc
sbb
scas
sbb
push
les
sbb
scas
sub
and
xchg
jg
rorb
loopne
ljmp
mull
jl
or
ljmp
iret
cmp
fistps
cmc
mov
push
mov
jno
out
add
sbb
push
push
and
inc
inc
cld
mov
inc
and
sbb
xlat
pop
jl
pop
push
add
pusha
sbb
sub
cld
imul
sub
fsubl
ret
add
push
push
push
lahf
jle
mov
jno
mov
push
mov
movsl
mov
mov
outsl
add
enter
jae
fldenv
cmpsb
push
mov
pop
push
sahf
and
jnp
insl
into
imul
push
mov
xor
mov
pop
out
xor
push
repnz
dec
push
inc
es
jne
dec
fnstcw
mov
xlat
andb
cmpsl
add
rcr
sbb
inc
jo
loopne
jbe
add
xchg
iret
push
xlat
push
les
mov
in
xor
pusha
xchg
jge
lret
test
xor
loopne
pop
mov
inc
and
leave
cmp
pop
jg
pop
hlt
in
cltd
and
in
test
cli
push
xor
push
adc
insl
and
loop
je
pop
rcrb
fs
pushf
mov
sbb
push
cmpb
jb
test
xor
push
dec
out
mov
jp
fistps
fistpl
mov
fidivrs
cmp
bnd
adc
xorb
cmpsb
inc
fxch
lret
enter
mov
push
mov
pop
scas
imul
ss
dec
dec
stos
jl
aas
xchg
inc
push
adc
dec
push
mov
push
pop
es
and
or
es
mov
jo
mov
les
push
imul
cld
scas
inc
xchg
xor
and
jbe
icebp
or
ret
mov
mov
add
cmp
xchg
xor
lods
add
loopne
mov
sub
jmp
pop
xchg
xor
stos
push
mov
lock
daa
fisubs
pop
fs
mov
jae
pop
cmp
bound
cltd
ret
out
sbb
mov
dec
xlat
addr16
cli
add
ja
mov
mov
sbb
sub
and
inc
and
aad
and
jb
push
dec
imul
mov
in
mov
cmp
nop
aas
out
inc
sti
ds
sbb
test
and
jns
lock
mov
testl
sub
dec
pop
jmp
repz
ret
dec
out
scas
stos
mov
stc
addr16
sub
movsb
loopne
mov
xchg
mov
sbb
daa
stos
push
fs
or
in
jp
add
nop
sub
xor
dec
dec
into
test
mov
mov
fsubrl
add
inc
xchg
mov
jnp
fiaddl
inc
jle
das
repnz
repnz
xchg
adcl
inc
fnstsw
pop
pop
adc
arpl
pop
cmp
sbb
sbbb
mov
sub
loope
inc
pop
add
fldt
fwait
jnp
into
push
dec
clc
mov
shl
idivl
jne
clc
add
fisubrs
int
aad
test
out
out
cmp
xor
lods
imul
nop
stos
negl
xchg
push
push
sbb
dec
test
into
sbb
les
iret
mov
push
imul
cmc
loop
push
xor
push
cmc
stos
inc
pminub
and
dec
cmp
pop
dec
addr16
inc
ret
inc
fdivr
add
mov
pop
loopne
ret
int
jg
adc
mov
fisubrl
sahf
ljmp
cli
cltd
dec
sub
mov
faddp
sub
enter
rclb
adc
adc
sti
pop
cld
pushf
cld
mov
adc
mov
loopne
jl
fidivl
jo
push
ss
mov
xorb
xchg
mov
iret
repnz
lods
pop
out
or
inc
inc
add
lods
jg
int3
push
es
mov
xchg
repnz
and
aad
scas
jbe
mov
adc
jg
popf
and
fwait
out
sub
mov
pop
into
test
jae
and
mov
repnz
daa
xchg
scas
mov
adc
in
xchg
aam
sbb
pop
mov
cmpsb
sub
in
sbb
loope
les
loope
pop
xlat
jae
xorl
mov
or
ret
std
mov
pusha
gs
clc
nop
push
inc
repz
rcrl
mov
jle
aaa
jmp
arpl
pop
cmp
fldl
xor
xor
push
fucomp
les
aas
cmp
lods
int
jbe
xlat
mov
sahf
add
mov
jecxz
cmp
jecxz
pushf
aam
mov
aas
out
sbb
adc
pusha
mov
in
iret
and
inc
cmpsb
ret
sub
push
or
std
xorl
or
and
xchg
sbb
add
aad
rol
pop
mov
push
xor
push
cmpsb
icebp
and
cmp
mov
stc
push
xchg
jbe
movsl
xchg
icebp
dec
sub
repnz
aas
mov
lods
daa
ret
fsubs
add
popf
pop
or
xchg
fstpl
push
pop
dec
rorb
cmc
orl
push
or
sub
pop
mov
mov
mov
fnstenv
fstpt
rcll
pop
add
test
les
or
fs
sub
push
mov
pusha
jbe
push
mov
out
imul
lcall
dec
or
call
and
jno
sub
ja
repnz
cli
addb
jp
addr16
lret
xchg
fdivrl
cwtl
stc
sub
rorl
mov
in
lods
dec
ja
pop
icebp
lds
pushf
and
idiv
les
repnz
mov
jns
push
ljmp
shlb
lock
mov
rcrb
jl
dec
jmp
in
in
mov
nop
aad
sbb
and
shll
push
jl
pop
out
pusha
sub
mov
aam
adc
cltd
jge
and
stc
jbe
nop
pop
clts
ret
fimull
mov
push
mov
aad
xchg
arpl
xor
dec
xor
sbb
lret
pop
movzwl
or
xchg
push
fildl
pushf
jo
arpl
jb
dec
insl
or
nop
xchg
xchg
and
jns
xorb
dec
xchg
mov
bound
push
ss
lret
sub
pop
and
mov
adc
fistl
test
mov
adc
rcll
fnstcw
lods
sbb
stc
imul
mov
sahf
jnp
shll
xor
mov
iret
jmp
add
out
pop
daa
push
jbe
add
in
lods
stc
xchg
jno
leave
push
push
addr16
dec
adc
push
xchg
mov
clc
jg
pusha
cmc
std
mov
cs
mov
xchg
inc
sbb
je
fmuls
shl
add
adc
jb
jle
lcall
mov
inc
pop
int
arpl
lret
cs
push
scas
pop
int
call
les
in
jbe
xchg
xor
mov
or
fcoml
fsubp
xchg
sti
pop
jg
sbb
pop
sysret
inc
cmp
and
fs
enter
lret
pushf
test
imul
loopne
ja
xor
rcrb
inc
negb
cmp
sbb
jbe
cmc
repnz
fcom
scas
loopne
fwait
or
cmp
mov
incb
subb
mov
adc
and
and
push
jne
aaa
mov
pop
jle
sub
add
les
lret
repnz
add
xor
mov
aaa
stos
outsb
repnz
dec
and
es
sub
ja
movsb
mov
mov
mov
lods
jb
mov
sub
outsl
data16
fldt
bound
cld
sub
push
sbb
stos
nop
mov
addb
inc
fwait
test
add
dec
mov
sub
cwtl
push
enter
test
jmp
push
aam
xchg
ret
pushf
cld
rclb
adc
add
ds
lods
jecxz
inc
mov
stos
push
pop
daa
data16
mov
xor
xor
cmpsb
jecxz
std
stc
add
mov
mov
pusha
add
shll
add
bound
popa
sti
mov
xor
inc
push
add
jbe
lahf
js
pop
lea
sub
dec
push
push
xor
addr16
cmc
test
cmovle
cwtl
ja
sbb
outsb
dec
fcomi
cmp
mov
adc
inc
fcompl
sub
dec
nop
scas
fiadds
adc
and
addr16
test
jnp
out
ja
jmp
and
movsb
or
push
shlb
es
mov
sub
xchg
sti
and
xchg
pop
int
mov
cmpps
leave
in
sub
xchg
adc
addr16
push
or
mov
js
rorl
mov
pop
or
movsb
mov
insb
fiaddl
fisubl
cmp
mov
xchg
in
mov
daa
in
push
cld
arpl
push
jb
sub
lcall
jae
and
or
jns
mov
popf
loopne
test
pop
fadds
ficompl
pop
push
ret
adc
mov
fnstcw
lcall
call
cmp
cmp
push
dec
cmp
loope
jecxz
arpl
lock
jbe
outsl
mov
mov
out
or
mov
pop
push
stos
bound
push
or
jle
lds
pushw
add
mov
push
inc
jl
je
cmp
inc
clc
cwtl
xchg
out
daa
fmul
lahf
lock
jmp
or
cmc
inc
movsb
filds
cmp
out
pushf
jg
pop
mov
inc
mov
jmp
inc
add
xor
mov
icebp
fidivs
les
ds
int
in
decl
sub
push
test
insl
adc
cld
fistl
sbb
adc
pop
cmp
sbb
pusha
push
xchg
dec
loopne
dec
aaa
nop
dec
cmc
mov
pop
jae
sub
imul
or
insb
sub
cld
out
xor
mov
lods
lea
push
push
cmp
pop
mov
mov
cmpsb
aam
and
jmp
movsb
and
dec
leave
adc
jb
mov
or
jp
push
movsb
push
push
xor
push
sbb
hlt
sub
push
lcall
lret
push
stc
pop
xchg
push
sbb
imul
jno
lock
jl
mov
cwtl
add
in
inc
pop
inc
xchg
push
push
mov
xor
loope
shll
sbb
ljmp
icebp
fcomps
je
and
sub
lea
or
sbb
inc
xchg
shrb
sbb
mov
outsl
aam
push
sub
inc
jmp
fidivs
ficomps
adc
dec
inc
sub
inc
es
fidivrs
add
push
push
icebp
aaa
xorl
das
and
out
sbb
fdivp
pop
xor
add
icebp
ss
pop
push
cwtl
dec
jp
loope
inc
das
cmp
inc
push
popa
ds
xor
dec
bound
fsub
pop
fsubrl
fiadds
dec
movsl
psrlw
jg
cmp
fnstcw
fldcw
lods
fnsave
jg
push
mov
xchg
inc
nop
lds
xor
cwtl
aaa
cwtl
mov
add
loopne
divl
xor
or
in
dec
add
es
js,pt
jbe
inc
fisttpl
inc
fisubrs
sub
insb
int3
mov
mov
or
and
in
sbb
xchg
pop
in
push
mov
inc
pop
push
mov
and
sbb
fisubl
jecxz
xchg
inc
xor
out
jg
mov
insb
fcmovbe
adc
dec
dec
bound
lret
xchg
fimull
test
sbb
pop
mov
xchg
sub
js
dec
loope
aas
fadds
movsb
mov
shrb
mov
mov
in
lock
fs
aas
adc
popa
in
jmp
mov
out
test
inc
pop
imul
orb
leave
or
cld
cmpsl
jae
lds
sub
cmc
cmpsb
movsl
sub
js
mov
mov
fucomi
xchg
dec
sub
pop
cltd
jns
test
cmp
sub
aad
adc
sbb
pusha
aam
fsubrl
adc
mov
or
pop
test
inc
outsl
mov
adc
cmp
mov
mov
mov
bound
sbb
sbb
xor
sti
lods
ja
cmp
outsl
addl
pop
adc
push
pop
shrl
outsb
push
jns
nop
insb
sbb
rcrb
xchg
push
lock
add
int3
inc
lcall
lahf
pop
pusha
sbb
testb
pop
and
fwait
inc
xchg
push
call
imul
pop
or
stos
lret
outsb
inc
dec
in
add
push
scas
xor
aad
add
push
sub
imul
jnp
loopne
scas
push
insl
inc
mov
rolb
pop
pop
mov
mov
data16
inc
pop
test
sbb
cmpsl
mov
mov
mov
and
test
xor
popa
clc
jecxz
idiv
repz
xor
pop
nop
je
sbb
popa
push
shrl
and
sbb
repnz
mov
cmp
inc
sbb
outsl
and
xchg
pminub
mov
jno
ret
in
cli
xchg
lods
popf
fimull
lcall
sbb
mov
fwait
and
mov
or
xor
cmp
je
push
inc
aaa
adc
faddl
das
insb
lcall
in
lods
mov
pushf
ds
inc
and
jae
mov
push
inc
test
and
jg
out
xchg
cwtl
or
stos
lods
push
pusha
cmp
sub
mov
jb
js
push
fldl
mov
push
xor
cmp
jo
ljmp
ljmp
cmc
xor
xor
inc
inc
repz
dec
repz
inc
out
jge
or
xor
mov
xor
out
outsl
inc
inc
fsubl
lock
xor
aaa
fstpt
jbe
cmp
nop
mov
pop
sbb
pop
mov
insb
push
ficoml
or
lahf
cmc
jb
push
popa
sahf
fwait
mov
out
movsl
inc
inc
test
inc
jae
xlat
mov
jo
push
adc
jmp
cmp
loopne
push
push
loope
jmp
jbe
mov
data16
push
mov
push
rcrb
lcall
lcall
cmp
es
out
sub
cltd
or
adc
pop
pop
push
ret
xchg
add
xchg
cmp
pop
setbe
loope
imul
outsb
scas
jno
cmc
mov
mov
pop
push
jno
mov
or
outsl
jp
pop
incb
sbb
xlat
and
or
or
sbb
and
ljmp
cmpsl
ret
loopne
test
loopne
mov
cld
xchg
es
mov
or
mov
icebp
adcl
xchg
pop
adcl
gs
aaa
lea
pop
rorb
push
xchg
repnz
push
cmc
stos
out
andl
push
loop
out
test
hlt
lahf
sbb
inc
jns
decl
lret
and
call
xor
lahf
add
into
push
or
inc
sahf
insb
cmp
dec
jge
pushf
test
jge
sbb
xor
cmp
scas
mov
js
pop
cmp
jmp
inc
nop
es
jecxz
outsb
xchg
bound
je
mov
dec
push
pop
add
pop
lods
sbb
inc
jne
dec
stc
add
xchg
xchg
das
shrl
shlb
test
imul
xor
push
and
mov
inc
cld
mov
add
xor
stos
int
inc
cmpsl
cltd
mov
aaa
movsl
movsb
popf
or
adc
dec
xchg
in
mov
or
xchg
mov
jne
dec
fs
cli
mov
cmc
adc
aam
test
ljmp
filds
loope
call
mov
push
mov
dec
popa
std
repnz
fsts
sub
push
push
xchg
and
inc
pop
mov
cltd
mov
pop
add
add
pop
cmpsb
mov
inc
push
and
ds
lcall
mov
mov
repnz
xchg
sbb
mov
inc
cmp
cld
repz
dec
lods
sub
test
fdivp
xor
fimull
mov
cmp
jb
pop
adc
mov
sub
movsb
mov
xchg
push
in
in
adc
out
sub
out
lock
mov
out
or
insb
jl
push
stos
das
pusha
cmc
inc
mov
lock
mov
in
mov
jbe
int
popf
push
xor
out
bound
push
cmp
cmp
enter
dec
loop
repnz
cmpsb
scas
xor
mov
xchg
jb
outsb
lret
movsl
cltd
dec
push
xchg
mov
xor
out
push
push
push
jb
cmp
cwtl
inc
or
or
fs
out
inc
je
aam
jo
xor
xchg
insb
sbb
in
aas
inc
mov
mov
shlb
test
sbb
xor
mov
int3
mov
add
lahf
pusha
mov
or
sbb
cmp
push
sub
pop
out
pop
ftst
jecxz
push
call
or
mul
pop
xchg
push
rol
inc
mov
fwait
and
jne
dec
sub
jns
add
shlb
pop
rol
or
inc
insb
outsb
push
mov
fdivrp
sbbl
sub
sub
insb
shll
jp
sub
cld
dec
or
or
push
dec
les
inc
stc
fists
add
insl
insb
cld
lds
inc
jge
cli
or
push
cmc
sub
inc
pop
test
pop
das
or
and
mov
popa
rclb
dec
mov
mov
scas
xchg
jge
movsb
lea
mov
popf
dec
mov
bound
cwtl
cmp
movsb
stos
imul
mov
push
sub
std
inc
fdivrl
xlat
sub
idiv
rdseed
pop
mov
or
adc
outsl
push
je
or
inc
popa
imul
or
xchg
imul
outsb
or
cli
pop
subl
inc
jge
hlt
gs
mov
out
mov
mov
or
out
js
xorl
jle
je
imul
xor
sub
mov
inc
mov
inc
out
cmp
adc
jae
test
loop
js
fcmovnbe
clc
pop
sbb
push
inc
popa
in
ja
cmc
mov
inc
or
pop
loop
sbb
mov
out
sti
daa
movsl
jmp
daa
repnz
fimull
inc
fdivrl
xor
and
mov
push
adc
fdivs
adc
fs
cmp
ljmp
pop
mov
cld
sahf
in
xor
xchg
out
fnstsw
sbb
cmp
addr16
mov
mov
jg
jne
mov
icebp
and
ljmp
mov
ror
outsl
popf
test
aad
test
loopne
sub
psraw
mov
dec
mov
test
stc
push
mov
mov
outsb
sbb
add
jb
adc
pop
mov
out
pop
loop
fwait
cwtl
cmpsb
pop
lret
cmp
ljmp
adc
icebp
and
mov
jle
jmp
lods
jmp
push
adc
xchg
lahf
icebp
cmp
adc
mov
outsb
pushf
cmp
test
sbb
out
addr16
xchg
cli
testb
inc
fcoms
dec
cmp
mov
shl
cmp
jno
aas
mov
pop
adc
movl
sub
pop
fs
sar
jno
and
out
and
fsub
dec
adc
pop
sbb
jae
bound
testb
xchg
inc
inc
jmp
mov
inc
mov
inc
push
aas
and
xchg
or
xor
push
shl
addr16
stos
sub
mov
xchg
jo
pusha
pop
mov
nop
cmp
lcall
jnp
mov
add
outsl
loop
setno
adc
mov
pop
xor
xor
sub
push
call
pusha
daa
int
and
sahf
dec
jno
out
or
idivl
add
lds
test
aad
cwtl
mov
cmp
shrl
and
push
in
mov
nop
cmp
xor
ffreep
mov
cwtl
mov
das
inc
cmp
inc
dec
ret
imul
repnz
ja
out
daa
sub
mov
lock
mov
das
jns
fsub
inc
mov
push
imul
lock
test
cmp
in
into
lock
jl
mov
jmp
push
fstp
lock
std
pop
sbb
xor
call
mov
int
jle
movb
in
xor
adc
test
mov
cs
daa
dec
fstpl
mov
les
fwait
movsb
or
cs
roll
pop
dec
popf
and
cld
pop
and
mov
stc
jo
pop
nop
push
lods
and
outsl
or
add
mov
fucomi
add
fstps
push
push
ror
int3
adc
pop
push
mov
push
cmp
sub
xchg
mov
xchg
jl
push
mov
inc
cmc
mov
movsb
les
pop
sbb
inc
bound
outsb
adc
dec
jne
icebp
lods
fnstcw
xor
dec
movsb
imul
mov
aas
andb
and
push
stos
lahf
idiv
lahf
push
scas
out
cmp
ljmp
push
pop
sti
xlat
inc
lds
nop
out
lods
mov
cmp
add
fdivrs
test
shl
in
das
sbb
popa
jp
xlat
sti
mov
sbb
xchg
xchg
lea
pop
bound
mov
je
cmc
cmc
subb
int3
rolb
stos
fdivs
add
mov
in
shrl
pop
imul
popa
je
int3
fdivrl
xchg
adc
loop,pn
jbe
loop
sbb
mov
jns
bound
xor
or
es
sbb
test
add
orb
out
mov
pop
aam
mov
add
xor
inc
imul
jle
cld
int3
add
test
jge
push
and
jae
cmp
cli
sub
pop
je
gs
add
loop
sub
loope
in
popa
fdivrp
in
add
mov
cs
fsubrs
lret
push
in
sarl
dec
pop
cmpsl
cmp
add
xchg
mov
jge
mov
filds
jno
jle
negl
leave
jae
scas
repnz
inc
pop
stos
into
jb
cmpsb
movsl
loope
jl
bnd
push
es
fisubl
dec
mov
mov
add
mov
adc
and
mov
ror
adc
dec
push
sub
subl
sti
jg
push
fildl
add
mov
sub
mov
fimull
leave
pusha
das
scas
xor
icebp
sbb
pushf
sub
inc
add
lret
push
mov
loope
inc
push
mov
mov
sbb
or
js
rorb
int3
in
cwtl
xor
and
sub
push
aaa
lds
ds
mov
sub
cmp
arpl
hlt
testl
xchg
cwtl
lea
and
cli
out
dec
loope
dec
call
aad
inc
and
or
fldcw
ror
sbb
cmp
xchg
test
pushf
cmp
push
nop
jge
movsb
das
jne
das
test
mov
popa
js
sbb
test
sahf
xchg
lret
enter
xor
dec
ss
inc
js
lods
rclb
dec
inc
mov
in
stc
inc
and
jno
orl
lahf
push
dec
adc
jae
or
dec
or
jmp
mov
outsl
sahf
xchg
shrl
and
stos
adc
les
sbb
jae
jns
loopne
sub
mov
rcll
sti
lea
movsl
in
lcall
insl
and
test
shr
pushf
pop
xchg
push
mov
scas
push
push
lahf
pop
sub
xor
xchg
pop
jg
push
xor
and
dec
inc
inc
jge
dec
push
inc
imul
inc
stos
xor
sbb
push
mov
push
sub
adc
push
and
scas
mov
cld
popf
dec
sbb
mov
lods
out
out
in
pop
mov
jmp
out
mov
adc
jmp
cmp
movsb
push
lahf
movsb
ja
mov
cmpsl
push
test
sbb
ds
add
mov
outsl
mov
inc
sub
fucom
mov
aaa
mov
xchg
jo
rclb
jmp
adc
xchg
pop
leave
jmp
rorl
loop
push
les
addr16
add
insb
inc
mov
aaa
fdivs
inc
mov
dec
add
and
or
jae
ret
pop
mov
in
das
xchg
sahf
test
jmp
push
xchg
mov
adc
ret
cmp
outsl
push
rorb
ret
in
in
sub
mov
cwtl
sahf
push
aas
aaa
gs
sub
nop
fxch
ret
daa
pop
adc
in
movsb
jp
rorb
adc
out
push
jmp
mov
insl
popl
mov
repnz
pop
iret
sbb
shrd
mov
push
pop
ret
ficompl
fdiv
sub
xor
cmpsl
mov
sub
or
adc
pop
inc
adc
in
pop
ds
mulb
rcl
xchg
sbb
sbb
mov
xor
aad
pusha
sti
xor
pop
add
test
and
xchg
xor
sub
test
dec
cmp
rcll
xchg
mov
movsb
mov
stos
scas
imul
cltd
adc
arpl
cmp
or
sbb
add
clc
add
pop
mov
dec
shll
aam
and
fs
mov
cli
inc
inc
lock
or
inc
push
loopne
repz
data16
fidivrl
hlt
loope
hlt
or
popa
dec
dec
add
std
test
jle
lods
imul
fnstsw
xor
inc
inc
push
cs
es
ljmp
adc
test
daa
mov
mov
addr16
out
test
aaa
gs
fs
dec
and
cmp
scas
sbb
or
adc
mov
aad
sbb
mov
inc
mov
lret
or
xchg
pop
jns
adc
mov
mov
xchg
adc
ds
inc
pop
inc
cmpsl
inc
ret
inc
cmp
notl
decl
test
std
mov
and
jecxz
pop
aad
xor
jle
adcl
clc
push
test
mov
das
jg
and
cwtl
cmp
test
fiaddl
pusha
mov
mov
orl
mov
mov
jne
jns
sbb
js
jmp
jp
repz
lret
cmp
cmp
xchg
dec
jge
ss
ja
loop
les
pop
stos
rorb
or
clc
dec
mov
sub
and
fwait
or
mov
dec
call
mov
mov
pop
cli
addb
movsl
pop
popa
mov
dec
add
push
repnz
subb
push
les
inc
ds
mov
mov
push
dec
push
hlt
es
sbb
mov
mov
lods
mov
dec
xchg
mov
shll
or
mov
fcomi
divl
jl
das
xor
out
push
mov
cwtl
in
mov
cld
xchg
jge
sbb
dec
addb
or
pusha
cmp
and
mov
and
push
add
shr
sub
orb
roll
scas
movsl
jl
cli
daa
sbbb
mov
sub
dec
cmpsl
mov
int
mov
xchg
cmc
inc
add
call
out
xchg
lret
xchg
adc
or
lret
jecxz
mov
gs
adc
sti
mov
mulb
or
cs
adc
stc
sbb
or
cmpsl
add
inc
aam
shll
and
rol
bound
mov
xchg
mov
xor
ss
cmp
lret
imul
loop
js
or
lds
movsl
add
cmpb
int
mov
inc
sarb
pop
cmpsb
sbb
repz
mov
rclb
icebp
cmpsl
ror
mov
push
fsubrs
inc
xchg
xor
xchg
xlat
inc
js
pop
xor
sbb
add
dec
pop
popf
and
je
inc
data16
xor
in
movsl
ja
sahf
pop
insl
add
jno
inc
adc
inc
cmp
inc
cli
leave
ret
in
xor
inc
xchg
fldenv
outsb
cmc
pop
dec
inc
push
ss
inc
push
ljmp
pop
sub
and
aam
push
or
test
mov
imul
fnstsw
in
mov
ret
lret
jle
lods
nop
sub
in
pop
dec
mov
or
sbb
inc
dec
or
test
lock
dec
and
enter
cmc
mov
and
adc
push
hlt
and
xchg
jae
pop
loope
and
sub
add
lret
jge
adc
sti
dec
in
sbb
mov
mov
pop
iret
mov
or
mov
adc
cmp
jle
cmp
test
nop
mov
fldcw
sub
cltd
jecxz
mov
mov
icebp
mov
flds
pusha
dec
inc
or
add
lahf
fisubs
sub
gs
ss
jno
push
lea
rolb
sbb
xchg
fidivrs
loope
xchg
insb
cmpsl
icebp
shlb
aas
push
cmp
jg
or
add
fisttps
and
mov
mov
xchg
cmp
mov
out
inc
sub
mov
jg
mov
mov
cwtl
lea
and
aaa
into
fadds
sbb
mov
jae
rorl
jne
add
mov
push
outsb
repnz
xchg
fdivrl
xlat
and
rorl
inc
jns
imul
pop
jo
aas
stos
or
xor
mov
jge
dec
shll
push
fildl
inc
leave
je
xor
mov
loopne
xchg
fidivrs
cmpsl
dec
push
mov
test
xsha1
add
subl
out
xchg
cmp
or
ljmp
or
sub
and
repz
fcomp
popa
mov
mov
das
pop
ljmp
push
push
pop
rorb
ret
ret
aas
push
clc
idiv
xor
gs
jmp
mov
adcb
pusha
cmc
std
fwait
in
push
sub
and
push
mull
imul
add
out
test
clc
and
add
dec
cmp
pushf
xchg
into
sbb
shlb
sub
mov
mov
aam
stos
mov
mov
daa
jo
push
or
jnp
shlb
cmp
adc
out
roll
inc
orb
int3
mov
sbb
sbb
push
inc
cmp
movsb
dec
test
add
vmulsd
xchg
cmp
bound
daa
adc
subb
ja
loope
jl
lock
out
stos
aaa
cmp
out
mov
mov
ds
mov
iret
mull
and
cmc
pop
lock
pop
orl
aas
cwtl
xor
shlb
and
push
mov
repnz
sub
andb
insb
repz
scas
scas
sbb
imul
inc
test
mov
adc
das
jne
pop
or
lock
sahf
ret
imul
stos
int
or
mulw
sahf
xchg
push
int3
pop
mov
pop
mov
mul
or
pop
dec
frstor
ss
xor
out
jg
test
je
sub
leave
and
fsubr
sahf
pushf
les
out
mull
push
movsl
outsl
repnz
daa
and
inc
mov
mov
addr16
mov
imul
movsl
sub
pop
div
cmp
in
pop
push
jb
lret
stos
lock
or
and
mov
std
and
sahf
pop
outsl
sbb
push
mov
dec
mov
jmp
cld
and
mov
shrl
or
movsb
and
jle
imul
in
cmp
push
pusha
jg
mov
icebp
xchg
inc
call
mov
cmp
mov
mov
hlt
mov
cmpsb
setl
xorb
mov
movsl
out
mov
inc
popf
repnz
add
fldl2t
rorl
stc
xchg
push
fwait
iret
jae
hlt
xor
addl
sbb
je
sub
dec
std
jg
test
mov
wrmsr
daa
pop
fs
insb
push
ret
jmp
add
push
cmpsb
pusha
adc
int3
outsl
inc
call
push
mov
xor
mov
rol
xor
ss
movsb
pop
pop
lahf
sub
stc
mov
mov
fs
lahf
sahf
mov
pusha
leave
fcmovnu
sbb
lds
adc
stos
ret
andps
inc
mov
and
pop
xchg
jmp
push
xchg
call
add
and
xchg
dec
rcll
into
and
adc
js
std
adc
xchg
in
dec
inc
stos
subb
gs
jne
fsubl
pop
xchg
adc
into
and
fcmovbe
jns
repnz
faddl
xor
lahf
das
inc
sub
out
je
cmp
fwait
dec
gs
sbb
fnstcw
addr16
out
mov
popa
cmp
repnz
jl
aam
sbb
xchg
int
mov
je
inc
mov
rcl
pop
loop
ds
pushl
xchg
int3
movsb
popa
pop
popa
and
test
shll
pop
xchg
adc
mov
cmp
jl
push
mov
cmpb
sub
je
pop
mov
test
add
xor
pop
mov
shl
idivl
lods
gs
push
inc
rcrl
sub
jae
fcoml
int
pop
pushf
jp
mov
cmp
pop
sub
mov
mov
cmp
mov
inc
mov
cmpsb
les
xor
cs
fidivrl
jbe
sub
mov
push
outsl
xor
in
add
jnp
pop
xor
stc
jle
pop
push
adc
div
stos
int
std
push
in
in
jno
pop
lret
cmp
lret
jbe
scas
sub
popf
test
data16
into
mov
jg
dec
insl
iret
enter
in
jns
and
sub
sahf
cwtl
and
cld
mov
pop
lahf
sub
inc
sti
mov
out
mov
insl
pop
cs
sbbb
fucomip
loopne
cmpb
pop
dec
iret
movsl
stos
jns
xor
jg
xorb
ja
cmp
call
xor
sbb
ficompl
mov
lahf
dec
push
dec
dec
aad
mov
loop
int
or
mov
mov
pop
repz
out
sahf
xchg
mov
jns
xor
jmp
hlt
cmp
inc
insb
les
xchg
imul
popa
cmp
adc
sub
jmp
ja
mov
inc
mov
mov
mov
sub
in
ss
shr
mov
mov
stos
aas
cmp
mov
mov
cmp
ljmp
sbb
into
mov
ret
pop
xor
fwait
fwait
mov
shl
mov
addr16
mov
mov
jae
or
leave
test
int3
inc
sbbb
xchg
out
fsubrs
shlb
inc
ds
sub
std
sti
add
ret
and
mov
out
lcall
sub
push
cmp
and
add
adc
or
jl
in
cmpsl
xor
iret
push
ds
jae
cmpsl
or
ret
jne
adc
xor
mov
or
cmpsl
fcomi
lods
sbb
ret
xchg
xchg
loope
ret
push
sub
pop
dec
dec
and
jl
cmp
repz
mov
pop
repnz
mov
mov
mov
xor
rcrl
cmp
aas
add
test
sub
rcrb
xor
leave
pusha
dec
fisubrl
loopne
cld
sbb
mov
imul
adcl
cmp
lods
sbb
imul
sbb
adcb
ret
dec
mov
mov
iret
aad
pextrw
and
fldl
fisttps
xor
mov
sub
movsl
inc
dec
loop
repnz
and
inc
repnz
pop
popa
sbb
lcall
dec
dec
int
mov
mov
sub
jge
cli
or
mov
xchg
jae
pushf
not
and
jnp
push
and
or
pop
in
push
es
push
orb
dec
xchg
mov
xchg
and
mov
or
jne
sub
jge
xor
cli
mov
sbb
xor
xchg
fiaddl
out
imul
sbb
mull
xor
loope
js
or
and
add
xchg
das
out
incb
rorl
pop
cld
dec
xor
and
jb
or
stos
cmp
xchg
and
addl
jns
jb
jno
adc
lahf
xlat
jne
mov
pop
popa
sbb
ficomps
pop
fcompl
xchg
inc
ja
mov
jge
mov
xor
cmp
hlt
dec
dec
dec
jmp
jns
out
test
js
gs
jle
pop
mov
or
cmp
adc
dec
or
xor
xor
pop
xchg
add
out
shlb
sub
xchg
pop
fidivrl
adc
xchg
jle
lret
and
inc
sahf
push
mov
je
jge
out
data16
clc
loope
add
mov
hlt
les
ret
dec
push
jne
repnz
adc
push
and
ds
or
pushf
mov
mov
dec
popa
sbb
fisubs
inc
in
push
xor
rcl
shrb
inc
sahf
ret
enter
insl
std
and
loopne
movsl
int
popw
adc
sub
rcll
es
xchg
nop
shll
arpl
adc
xor
imul
je
cmp
sub
enter
shrb
mov
sahf
es
cmc
aam
adcb
adc
jo
mov
shlb
insb
fisttps
mov
in
andb
decb
popa
rcll
xor
sbb
or
outsl
sub
mov
jns
test
lret
daa
push
divl
sti
sbb
lret
lea
inc
repnz
outsb
push
outsl
sub
divb
pop
daa
pop
jle
or
push
push
out
add
xchg
push
cltd
scas
lea
fldenv
push
scas
jmp
pop
nop
test
mov
sbb
rcl
addr16
cld
jmp
mov
out
int
inc
lock
mov
push
push
std
add
pop
push
pusha
fnstsw
xchg
rclb
sbb
test
test
lahf
mov
jge
pop
push
cmp
xor
std
lret
mov
fwait
push
ds
xchg
dec
fs
arpl
imul
mov
push
push
mov
push
cmp
inc
test
inc
data16
pop
sahf
fcomip
imul
cmp
inc
jns
mov
inc
inc
cmpsb
xor
lea
popa
push
sbb
sahf
testb
jp
inc
cmp
and
fisttpll
jmp
lcall
sub
iret
mov
arpl
mov
and
aas
jnp
nop
jge
jp
and
std
clc
out
adcl
mov
addr16
and
sub
iret
sbb
mov
shrl
ror
xchg
mov
cld
dec
inc
mov
ljmp
sbb
adc
scas
cwtl
cwtl
std
sbb
loop
inc
stc
xor
sahf
insl
bound
adc
ret
dec
fisttps
jb
xor
stos
sbb
insb
mov
mov
jno
popa
jge
and
fidivl
movl
pop
sbb
mov
xor
push
repz
popl
flds
pop
imul
inc
push
inc
daa
xchg
sbb
aam
push
repz
adc
mov
aam
aam
lcall
adc
xchg
ljmp
aad
scas
mov
add
xchg
xchg
jle
lcall
mov
cmp
jae
dec
adc
sub
adc
popf
inc
xchg
adc
out
out
jo
mov
out
xor
outsb
and
or
pop
push
or
out
scas
pusha
cwtl
xor
test
sub
sti
out
push
cltd
cmp
orb
sti
ss
push
sbb
pop
push
movsb
adc
lock
dec
es
bnd
outsb
xor
and
sar
lods
icebp
push
push
mov
jecxz
decl
dec
test
xor
nop
lret
ret
cmc
lcall
dec
scas
out
sbb
push
xor
cmpb
stos
in
xor
stos
shrb
sbbb
pop
add
mov
push
xchg
sbb
xchg
enter
les
mov
ja
xor
xchg
dec
xor
cmpsb
bound
xor
rcr
sub
mov
leave
hlt
insl
mov
fsubs
add
fildl
rcl
sub
add
cmc
mov
mov
into
and
pop
mov
dec
adc
mov
orl
mov
jg
hlt
adc
fisttps
sbb
or
andb
and
adc
imul
lcall
fbstp
insl
in
push
ret
and
ljmp
xor
push
lods
jmp
mov
scas
cmp
mov
inc
les
pop
mov
adcb
and
aas
jbe,pt
lahf
into
adc
adc
sbb
dec
fwait
and
xchg
aad
lods
fwait
dec
and
call
cltd
and
and
mov
in
jb
test
dec
sub
push
jecxz
lcall
mov
iret
int
daa
imul
clc
sub
insl
jno
xchg
cmp
push
add
jecxz
push
lret
mov
imul
loopne
insb
and
pop
fsub
imul
cmp
add
mov
pop
cmc
popl
ja
mov
idivb
mov
clc
int3
push
cld
sbb
das
es
and
jne
jae
inc
or
sbb
jp
imul
or
int
inc
sarl
fildl
vmovlps
mov
pop
xchg
mov
call
pop
test
cmp
or
or
push
fs
scas
inc
cltd
mov
pop
mov
cwtl
cli
jmp
sbb
out
ret
and
xchg
roll
or
aas
cli
jle
dec
xor
mov
mov
mov
es
mov
in
sarl
mov
ljmp
sub
mov
iret
mov
loop
xor
jno
in
mov
inc
mov
out
enter
insl
add
lods
cmp
xchg
std
popf
pusha
popa
shlb
inc
test
mov
mov
ret
scas
ret
and
jbe
sar
gs
mov
cmp
jp
xchg
mov
fisubrl
push
xchg
mov
dec
in
and
ret
clc
xor
ds
insb
inc
jno
xchg
mov
push
sbb
cmp
add
sub
pop
and
enter
lret
out
pop
rcl
scas
mov
sub
sub
xchg
mov
or
popf
lret
sbb
and
rcrb
push
sub
jo
cmpsl
pop
nop
cwtl
fwait
inc
orb
xchg
mov
dec
pop
push
enter
push
mov
shlb
xor
sbb
jnp
adc
or
test
mov
mov
push
xchg
cwtl
pop
dec
mov
pop
sub
hlt
mov
repnz
les
push
pop
xor
fs
add
jmp
pop
and
jg
sahf
imul
mov
xchg
mov
mov
loopne
pushf
sbb
rcrl
rcrb
mov
add
mov
xchg
pusha
jbe
lahf
repnz
adc
dec
inc
cli
ljmp
xchg
add
arpl
sbb
cmp
push
or
out
add
dec
movsl
adc
jecxz
cmp
pushl
mov
out
ljmp
bnd
iret
pop
out
adcb
insl
popf
cwtl
inc
mov
fisubrl
pop
mov
into
mov
fadd
insb
dec
push
insl
pop
dec
adc
mov
jp
cmp
lds
fs
sbb
pop
add
test
xor
iret
mov
push
pop
add
insb
xor
lds
push
mov
rclb
sbb
xlat
mov
pop
add
test
fiadds
xchg
idivl
dec
xor
pop
dec
sbb
xchg
pusha
nop
mov
and
fsubrs
xchg
cltd
nop
and
outsl
movsl
ljmp
ljmp
xor
cmp
push
jno
cmpsl
aam
xchg
jne
call
sbb
data16
imul
cmc
pop
jne
jg
sub
in
pop
inc
fucomip
mov
push
clc
js
xchg
fwait
push
xchg
jmp
fmull
leave
mov
rcrl
inc
mov
sub
lret
jge
repz
aas
stos
xorl
fimuls
mov
dec
xor
mov
xchg
mov
push
lahf
sbb
add
mov
int
xchg
mov
outsl
xor
dec
repnz
ja
test
scas
stos
jmp
dec
int
popf
pop
cmp
or
adc
fs
mov
xchg
das
cwtl
notb
or
int3
mov
mov
jmp
ss
sub
lret
popf
xchg
push
jecxz
ret
int
pop
cmp
bound
call
adc
repz
cltd
ret
and
mov
pop
ret
dec
pop
test
dec
mov
cmpb
ss
mov
fistps
orl
dec
cmp
out
aaa
in
pop
xor
push
inc
pop
or
stc
repz
pminub
insb
inc
imul
sub
add
lods
adc
inc
lds
sbb
bnd
and
jecxz
sti
jle
in
sub
push
jbe
xchg
clc
lret
or
and
ds
fisubrs
adc
or
addl
enter
in
jns
ja
stos
sbb
pop
dec
inc
jno
xlat
ss
xchg
or
leave
pop
ror
cltd
lcall
mov
jmp
and
leave
test
cmp
lea
out
repnz
sbb
dec
xchg
or
lods
adc
adc
cmpl
lods
xor
jno
test
mov
mov
lcall
push
notb
fdivr
sub
mov
sbb
inc
in
sti
test
int3
out
mov
mov
int3
nop
je
mov
enter
xchg
dec
xchg
push
adc
cli
in
aas
fwait
bound
cmp
sub
mov
mov
lahf
dec
cli
or
out
ljmp
lcall
mov
mov
pop
rclb
xor
push
mov
mov
and
mov
decl
push
cmc
nop
out
ret
stos
mov
faddp
rorb
push
loop
out
push
test
outsl
push
fstpt
xchg
dec
cmp
sbb
jge
adcl
mov
shl
call
push
add
sbb
or
jne
loope
mov
out
jmp
iret
push
xchg
nop
test
inc
cmp
in
loope
pop
sbb
iret
adc
xor
xchg
add
and
test
mov
into
xlat
dec
add
pop
xor
aad
dec
add
sub
stos
icebp
outsb
fmull
pop
mov
mov
testb
shl
fiadds
adc
out
rcrl
imul
pop
pop
adc
sbb
cld
mov
mov
add
movsb
ret
ljmp
sti
xchg
pop
sbb
pop
stos
dec
lret
out
insl
imul
les
sub
int3
sbbb
ljmp
test
jle
jns
mov
push
mov
xchg
and
jecxz
repnz
push
mov
rcl
ficoms
mov
lods
lds
pop
mov
mov
pushw
mov
sarb
in
bsr
jge
in
mov
fwait
inc
mov
loope
aad
insb
xor
ficoml
add
adcl
jo
out
adc
push
sbb
add
hlt
inc
mov
inc
jle
outsl
into
leave
inc
sti
mov
inc
loopne
lcall
xchg
inc
add
or
pop
mov
cld
ror
in
mov
or
pop
mov
xorl
pusha
mov
rcl
inc
orl
jge
push
arpl
inc
enter
xlat
mov
fxch
dec
out
jae
scas
cmpsb
fsubrl
sub
imul
icebp
push
out
inc
mov
mov
clc
mov
push
out
imul
into
ficomps
das
sub
enter
fldt
push
nop
and
xchg
adc
gs
sub
repz
add
leave
test
xchg
lds
stos
aam
sub
pop
xor
je
iret
and
or
clc
daa
lahf
jle
es
and
fistps
sbb
cld
in
jmp
mov
jnp
add
call
les
cmp
in
outsl
fwait
jg
test
ret
icebp
pop
clc
push
adc
faddl
sti
push
out
mov
xor
fwait
jo
sti
mov
aad
jbe
inc
jnp
pop
jne
lcall
push
xchg
mov
je
pushf
iret
daa
or
dec
data16
adc
std
push
adc
ljmp
inc
or
cmpb
inc
lret
and
lret
mov
gs
add
sub
mov
insl
jb
xchg
dec
roll
sbb
xor
or
xchg
pop
imul
inc
ret
jbe
mov
sub
movsl
push
adc
cli
dec
test
or
sarb
push
pop
into
and
dec
ret
cmp
mov
dec
inc
insl
cmp
jo
imul
nop
in
jge
shr
sub
xchg
movsl
sub
sti
int
pop
fprem
push
aam
cmp
cwtl
inc
mov
das
mov
push
pop
std
fst
test
fsubrs
das
push
sub
lcall
push
xchg
pop
loope
sbb
loopne
arpl
mov
xchg
test
sbb
lahf
xchg
xor
sub
dec
ja
or
icebp
repnz
mov
and
xor
hlt
and
inc
repnz
cmp
xchg
push
gs
or
fdivl
and
cmp
inc
push
pop
imul
mov
andl
jp
jecxz
fldenv
lods
testb
test
xor
inc
jb
loopne
adc
int
or
iret
xchg
or
sbb
cli
in
cmp
mov
cmpsb
jge
adc
or
sbb
sahf
int3
call
mov
mov
mov
mov
mov
jp
cmp
mov
lock
in
sahf
imul
les
push
dec
jmp
cmc
outsb
jecxz
fs
outsl
add
xchg
movsl
mov
test
nop
sub
lds
mov
mov
into
add
mov
loopne
sbb
add
enter
decl
scas
movsl
jle
arpl
jae
aam
cwtl
xchg
pop
repz
jno
mov
jle
out
outsl
fimuls
cmp
leave
xchg
movsl
test
push
or
int
dec
cwtl
inc
mul
scas
out
jl
lods
movsb
cmp
cltd
lahf
pop
enter
dec
cmpsl
adc
in
xor
mov
push
fcmovu
mov
xchg
out
das
pop
inc
arpl
jecxz
jb
sahf
jecxz
out
scas
fcoml
movb
pop
pop
cmpsl
mov
push
out
mov
inc
stos
aaa
push
in
icebp
push
sbb
pop
mov
jmp
inc
xchg
adc
mov
inc
je
xor
cld
push
adc
dec
inc
mov
scas
les
inc
les
xor
push
fcmovu
sarb
stos
xchg
or
out
mov
lea
bound
mov
in
fldcw
ficoms
jp
dec
in
cmc
pusha
push
lods
jl
in
inc
cmp
stc
repnz
adc
andl
aas
dec
sub
scas
pop
push
popa
fimuls
jmp
xchg
adc
loope
mov
leave
lcall
mov
mov
xchg
repz
ljmp
lcall
and
push
mov
jecxz
ror
stos
or
gs
adc
or
int
stc
mov
outsl
cmp
mov
aad
ljmp
lahf
pop
repz
gs
adc
fldt
push
out
inc
lods
push
xlat
outsb
fldcw
aas
mov
imul
jbe
or
insb
pop
enter
dec
jnp
js
stc
push
daa
push
divl
popf
test
lahf
jp
andl
std
lret
gs
jge
in
outsl
mov
sub
sti
call
cmp
mov
adc
cmpsb
aam
sbb
pop
sub
fs
adc
cmp
mov
inc
testl
outsl
sbb
mov
hlt
pusha
jb
cmp
test
sub
jecxz
es
mov
and
or
test
pop
popa
lea
push
gs
cmp
lret
sub
mov
fnsave
sbb
xchg
pushf
lea
adc
cli
jns
dec
fmulp
cmpsb
xchg
xchg
jecxz
popf
dec
xchg
fsubrs
pop
cmpsb
ds
cmp
jle
fsubs
xchg
inc
xchg
or
xchg
fsubrl
inc
adc
mov
gs
aam
mov
xchg
mov
pop
pop
pop
add
jb
ret
pop
repnz
jge
xor
sub
and
popa
je
sbb
mov
or
push
add
sbb
subb
je
into
adc
lahf
aam
stos
pop
pushf
and
clc
bound
xchg
pop
xchg
adc
fwait
pusha
cmp
cwtl
clc
jnp
and
pusha
rcl
jp
sub
mov
jnp
xor
je
or
pop
sti
cld
shll
into
repnz
and
fstl
loop
adc
lahf
negl
insb
cmp
pop
in
int3
push
inc
sbb
push
loopne
cmc
call
lea
jle
mov
inc
jmp
lock
shlb
and
cmc
dec
in
lock
dec
int3
test
jne
jecxz
out
pop
mov
xor
jmp
jae
xchg
movsl
fwait
xor
les
inc
lea
cmp
mov
lcall
xchg
pop
out
push
daa
dec
jl
outsl
cmp
es
cmc
lods
xor
add
adc
and
gs
in
dec
rclb
fcoml
xchg
scas
in
push
sbb
mov
mov
xchg
repz
mov
cmpsb
iret
subb
cmp
and
rcrb
std
pcmpeqd
cli
lret
cmp
add
rcl
add
and
inc
loopne
scas
rcrl
mov
xchg
test
lret
push
lret
jecxz
sub
ret
mov
rclb
mov
jne
and
xor
inc
sbb
or
sub
ja
mov
movsl
cmp
fneni(8087
dec
sub
mov
xchg
mov
jecxz
pop
test
dec
jb
push
ljmp
dec
mov
cmp
in
xchg
inc
and
dec
pop
xor
shll
test
dec
cmc
cmp
andb
test
filds
push
cltd
je
fiaddl
adc
shlb
pop
pop
jo
xchg
aam
jge
jmp
daa
adc
mov
mov
aas
das
lds
push
adc
fwait
mov
and
cwtl
fstps
dec
inc
in
movsl
mov
clc
xor
and
dec
mov
mov
pop
cltd
stos
sbb
dec
and
pop
sub
lods
or
mov
clc
testl
in
sbb
in
pop
lods
in
adc
cmpsb
xchg
push
pop
scas
cmp
pop
repz
mov
out
jns
out
inc
or
xchg
push
cmpsl
push
mov
sub
xor
enter
jno
sbb
dec
in
add
repnz
in
movb
mov
mov
cmpsb
call
or
add
stc
fwait
outsb
add
push
cs
rorb
call
push
cwtl
add
bound
mov
cmovl
hlt
in
test
stc
jg
data16
mov
enter
test
out
movsl
bound
or
aas
push
xchg
pop
clc
scas
nop
out
ja
push
fidivrl
add
sbb
cld
xchg
push
lds
out
loope
and
ret
or
add
nop
lcall
andb
push
daa
jno
fst
test
sbb
sub
int
sub
xchg
ret
daa
outsl
lods
mov
std
rcrl
jmp
xchg
mov
int3
adc
fimull
inc
jge
push
aas
out
add
orb
ja
lahf
into
mov
stc
inc
je
popf
add
or
clc
dec
pop
mov
xchg
or
cmp
roll
in
repnz
arpl
fimull
jg
mov
into
gs
mov
mov
xor
or
mov
add
cmpsb
test
movsl
sub
jmp
fistl
das
inc
mov
repnz
sbb
xchg
iret
fs
jp
bnd
fistl
stc
xchg
adc
push
add
or
sub
test
cmpl
int
les
std
pop
adc
and
mov
adc
push
cltd
sarb
aad
pop
cmpb
pusha
imul
cld
pop
ret
jp
add
insb
das
mov
insl
and
insb
add
pop
add
std
push
lahf
ss
add
xor
cmp
or
push
jmp
sbb
mov
lods
xor
sbb
addr16
jb
js
insb
xchg
rcll
push
fstpl
loope
push
repz
jbe
ret
subb
push
aas
xchg
xchg
out
cmp
xor
divps
pop
and
inc
mov
sub
lods
mov
pop
aaa
lret
pop
pop
movsl
leave
cmp
loop
xchg
cmp
sbb
dec
popa
insb
xchg
adc
dec
pusha
das
jb
int
fwait
add
leave
imul
add
pop
push
cmp
sub
mov
sub
push
int
ret
dec
ja
fs
xchg
adc
push
mov
add
lahf
lock
jnp
inc
ljmp
notb
pop
jge
idiv
inc
test
adc
faddl
mov
aam
insl
pop
inc
or
mov
loopne
and
rclb
test
stos
and
jne
adcb
lret
enter
insl
jle
addb
pop
sbb
add
ss
jmp
rorb
jo
insl
fistl
inc
inc
scas
gs
insb
lock
mov
or
and
mov
jbe
stos
arpl
and
mov
push
bound
inc
push
loopne
sub
xchg
mov
lret
sbb
inc
pop
jg
add
std
testb
dec
ret
mov
fisubrl
pop
dec
sub
mov
repnz
outsl
inc
dec
xchg
sbb
iret
repnz
jno
cltd
scas
enter
mov
repz
xchg
pop
in
cmpl
or
ror
mov
or
jns
adc
inc
ret
lock
test
xchg
mov
nop
inc
leave
jg
jns
cmp
sub
push
push
xor
dec
mov
mov
rcrl
outsb
push
addr16
xor
rorb
loop
pop
repnz
sub
shlb
imul
or
xor
xchg
out
lret
push
scas
mov
jle
imul
jecxz
sbb
pusha
std
adc
sub
ja,pt
out
shrw
test
inc
test
adc
mov
xchg
aad
xor
out
adc
shr
cmp
mov
outsb
rolb
cmpsl
mov
notb
lods
mov
dec
fcmovne
ja
lods
jge
cmc
add
mov
shr
inc
push
out
in
pop
fs
int
mov
aad
fwait
imul
es
jbe
loop
jg
std
pusha
rorl
rorl
pop
fstpt
out
insb
xchg
xor
jmp
je
mov
leave
flds
add
adc
sub
jns
push
inc
cmp
add
shr
mov
cmp
jg
fcmove
test
lcall
xchg
repnz
aaa
pop
dec
push
dec
ror
into
aam
pop
cmc
fimull
cmp
pop
cli
aad
dec
aas
aas
das
inc
or
imul
into
leave
xor
pop
pop
jno
push
dec
xchg
mov
subb
cmp
mov
cli
and
jecxz
adc
in
mov
sbb
push
add
mov
je
sub
mov
adc
mov
inc
jp
imul
movsb
mov
out
add
pusha
jmp
iret
fiadds
mov
stos
cmpsb
xchg
push
inc
push
lea
das
fidivrl
inc
sbb
xor
add
aad
cmp
push
or
out
lods
or
cmp
je
scas
cmp
mov
xchg
clc
loop
jcxz
sbb
int
pop
pop
dec
push
dec
scas
pushf
filds
cli
xlat
fldcw
jp
xchg
mov
fdivrl
rorb
in
fisubrs
adc
mov
gs
adc
mov
dec
lcall
push
lock
inc
mov
int3
shll
iret
in
lea
fdivr
mov
mov
mov
mul
leave
xchg
ficoms
std
call
movsl
push
notb
stc
xchg
sbb
cmpsl
push
sti
push
pop
aam
insl
subps
adc
xchg
and
shlb
or
in
mov
sbb
std
xor
adc
dec
or
lcall
xchg
sahf
rcl
mov
add
jle
mov
lods
ljmp
pop
in
outsl
daa
xchg
fdiv
or
mov
cmp
mov
xchg
adcl
inc
xor
mov
popf
fstpl
jg
stos
je
push
push
mov
add
pop
lock
lock
repnz
lock
push
push
je
ja
ds
inc
jb
out
popf
out
stos
mov
notb
inc
out
bound
dec
jge
sti
cmp
adc
ret
xchg
int
mov
lods
cmp
xchg
fdivrs
adc
jge
mov
dec
imul
mov
xor
xor
inc
lods
lcall
dec
push
add
outsb
pushf
jmp
mov
dec
xor
sub
xor
cmp
sub
sbb
cmpsl
xor
adc
stos
xchg
push
outsl
push
inc
push
and
fistps
push
js
lret
or
out
outsb
test
jmp
xor
cld
gs
repnz
sar
in
rcll
fwait
and
add
jp
out
jbe
add
fs
pop
test
push
cltd
cli
sub
cwtl
movsb
mov
inc
adc
roll
pushf
sbb
lahf
xor
fstpt
jecxz
cmpsl
inc
movntps
add
pop
pop
sub
push
rorl
movsl
nop
cmc
and
pushl
xchg
pop
inc
stos
and
dec
out
sbb
add
mov
and
xchg
cmp
jae
or
adc
pop
lock
fidivs
fs
sbb
dec
enter
sub
and
repz
xor
mov
and
pop
push
inc
es
out
mov
cltd
outsl
jne
xlat
xchg
sbb
and
aaa
iret
add
xchg
movsl
fildll
push
fs
xchg
orb
sbb
pop
scas
add
andb
add
add
std
jmp
push
sbb
inc
cmp
mov
or
add
mov
adc
fst
mov
or
fwait
inc
js
lret
out
lahf
jns
pop
add
popf
adc
xor
stos
pusha
out
mov
xor
mov
frstpm(287
sbb
cmc
addl
ss
pop
pop
lret
dec
lret
xor
dec
enter
mov
mov
push
dec
ret
push
xchg
jp
imul
push
sub
add
or
pushf
repz
push
adc
adc
icebp
pop
nop
leave
notb
js
or
and
mov
out
out
aaa
lock
lret
dec
das
test
add
mov
icebp
jecxz
mov
loope
cmp
shll
filds
sub
daa
sub
mov
cmp
jg
testl
ja
xchg
add
push
cs
test
jp
xor
stc
fcoml
in
jp
xchg
xlat
cmp
incl
xchg
xchg
mov
mov
dec
xorl
cltd
xchg
dec
jnp
push
jae
mov
mov
ud1
mov
xchg
inc
adc
test
dec
mov
cmp
mov
inc
jno
inc
mov
inc
jno
rolb
and
xor
jmp
arpl
mov
xchg
inc
mov
and
hlt
xor
xchg
enter
adc
mov
sbb
subl
xor
xchg
mov
push
add
and
or
pop
mov
sub
lods
pop
lods
and
into
lret
movsl
cld
xchg
xchg
pop
inc
popf
xor
lcall
setg
inc
or
sub
ret
mov
out
xchg
or
lds
test
push
mov
fcmovb
push
and
adc
loopne
add
lcall
rcr
fsubl
shlb
xchg
jae
mov
and
sahf
in
aas
push
fisubrs
enter
aas
in
aad
repz
push
sub
icebp
jne
mov
arpl
in
pop
pop
outsb
lret
ljmpw
push
xchg
in
arpl
dec
fimull
sub
in
pop
pop
inc
out
pop
cmp
mov
adc
inc
mov
fcmovnu
push
inc
stc
cmc
xorl
cmpsl
xchg
jne
dec
icebp
sub
mov
out
fadd
push
addl
xchg
in
adc
cs
mov
sub
bound
cmp
mov
pop
inc
sahf
push
into
sub
and
and
cmc
push
pop
int
filds
push
cmpb
and
sbbb
loopne
call
out
fistps
lods
push
bound
xchg
sbb
aas
lock
pop
pop
pop
movntq
dec
cmpsb
cltd
lret
test
lods
xchg
testb
popf
int
cmp
ret
into
cmp
inc
enter
rcrb
int3
lods
mov
jo
or
jno
incl
movsl
lret
sbb
cmp
xchg
xlat
add
inc
cmp
push
lahf
xchg
gs
dec
adc
adc
xlat
xchg
sub
pusha
mov
adc
jne
jno
sbb
popl
sub
mov
enter
and
roll
lret
xlat
xor
loopne
sbb
std
dec
in
sub
dec
jmp
mov
xchg
sbb
test
cmp
jmp
jg
mov
ja
sti
ret
add
push
outsl
idivl
icebp
pop
cmpsb
in
scas
call
xchg
test
imull
push
js
push
stc
in
cltd
data16
addr16
ljmp
popf
add
jns
sub
mov
jecxz
cmp
jo
arpl
cmp
fdivrs
sbb
mov
ljmp
adc
pusha
movups
out
idiv
insl
nop
mov
arpl
les
or
or
pop
int
fnstsw
xchg
arpl
cwtl
lcall
sub
ds
inc
sti
xchg
cmc
loope
pop
jl
inc
xor
jnp
cmp
add
lret
mov
mov
aas
jg
aam
rcrb
das
pop
cmp
push
jmp
sbb
aas
leave
mov
imul
addr16
xchg
repz
push
mov
cmp
mov
fdecstp
call
xor
add
inc
mov
add
jmp
xchg
pop
out
add
ret
fcoms
pop
mov
or
mov
and
mov
daa
xchg
pop
fs
or
jp
cmp
adc
stc
cmpsl
fistps
call
mov
testb
nop/reserved
dec
test
pop
movsb
and
call
sub
ja
rcrb
or
inc
mov
sub
fistl
loope
mov
loop
xchg
mov
xchg
mov
dec
movsb
scas
push
xor
fidivrl
int3
mov
mov
jle
out
dec
mov
inc
scas
stc
and
addr16
inc
pop
push
in
adc
dec
mov
mov
pop
movsl
addr16
sbb
fcomps
jb
cmp
and
orl
mov
pop
cli
or
jbe
cmp
cmp
int
inc
dec
pop
mov
jg
fnsave
test
jns
bound
std
jecxz
subb
inc
xor
addr16
nop
stc
mov
pusha
add
ja
push
divl
mov
test
fmull
mov
mov
testb
in
jl
dec
add
push
jp
imul
fistps
jns
fsubl
mov
popa
insl
sub
clc
add
mov
inc
dec
or
lds
inc
mov
lahf
push
dec
jecxz
hlt
mov
add
testb
lret
es
test
adc
dec
xchg
xchg
xor
fs
sbbl
xlat
or
in
cmp
sbb
mov
pop
clc
sbb
in
imul
fs
mov
jmp
mov
inc
or
and
mov
sbb
jno
adc
iret
aaa
inc
push
pusha
mov
adc
dec
xchg
lock
mov
push
cli
rcr
mov
sub
js
add
sbb
mov
rcl
mov
ljmp
sub
imul
test
or
and
lea
fcomps
loope
movsb
adc
out
inc
movsb
and
movsb
inc
jne
dec
sub
xor
ljmp
pop
lret
xor
lcall
imul
add
jae
sbb
leave
mov
inc
rorb
adc
mov
adc
mov
loope
mov
in
lods
outsl
aas
mov
sub
mov
cmp
dec
push
loopne
test
mov
movsb
lea
test
xchg
sub
fidivrl
jo
loope
jle
xlat
pop
ss
adc
les
sti
into
cmp
mov
mov
test
sarb
cmp
cltd
scas
inc
mov
scas
mov
xor
and
rorl
adc
lods
mov
inc
fsubr
pushf
rorl
stos
jnp
pop
loope
push
ss
shlb
lods
cltd
jmp
negb
ret
addr16
es
push
ret
shll
js
test
adc
mov
dec
inc
jns
outsl
sbb
mov
popa
ljmp
popf
test
dec
cmc
aaa
sarl
icebp
mov
cmp
das
push
cmpsl
mov
leave
push
je
adc
pop
rcl
jg
cmp
outsb
clc
xchg
repz
test
jno
push
cmp
sbb
or
lret
push
sub
xchg
rorl
idivl
cmp
int3
int
lret
jg
jne
inc
adc
scas
hlt
jbe
inc
rclb
mov
mov
das
dec
xor
push
cs
iret
push
addb
adc
std
pshufw
fwait
lcall
dec
dec
stos
in
cmove
dec
sub
lret
dec
fdivrl
mov
bound
inc
xor
dec
fs
rclb
gs
adcl
sub
mov
xchg
mov
push
pop
adc
jmp
lret
daa
mov
stc
adc
adc
lahf
jge
fcmovnu
data16
gs
push
mov
mov
loope
xchg
gs
mov
out
pop
jge
test
fsubrl
xchg
out
dec
fldcw
adc
xor
lret
es
jmp
test
push
add
sub
push
in
dec
rorl
pop
in
jae
pop
cwtl
or
dec
add
gs
cmp
inc
arpl
pop
mov
andb
in
div
lea
dec
jp
or
cmp
inc
pop
xchg
adc
sbb
aad
fstps
xor
inc
int
aaa
js
lret
inc
jl,pn
adc
mov
pop
divps
xor
cltd
and
shlb
sbb
loopne
scas
mov
dec
jb
mov
mov
xchg
lods
outsb
lods
mov
mov
imul
pop
adc
fmul
imul
or
xor
cs
cs
pop
xchg
icebp
cmp
mov
popa
inc
jbe
out
jmp
dec
xchg
mov
std
cmp
lahf
cli
lret
or
pop
int3
mov
aam
fdivs
movsb
sub
test
add
test
or
aas
mov
and
inc
xchg
jge
jae
adcl
movsl
pushf
xchg
outsb
lds
jno
fsub
aam
inc
mov
cmp
push
xor
inc
adc
jg
xor
inc
lret
pushf
in
sub
sbb
push
add
dec
loope
bound
aas
outsl
add
mov
jb
aam
cmp
jo
pushf
sub
mov
or
sahf
scas
fildl
lcall
push
in
xor
jecxz
add
cltd
add
push
add
or
cmp
cltd
lahf
testb
mov
adc
lds
lret
fcomp
mov
sbb
xchg
jnp
rorl
imul
into
cli
out
jns
mov
mov
mov
gs
sub
sub
loopne
dec
fidivrl
les
lret
xor
xor
xchg
pop
and
xchg
pop
ret
rorb
pop
xor
xor
test
stos
jo
dec
xchg
xor
test
sbb
call
or
repnz
mov
inc
mov
loope
int
fwait
repz
push
icebp
mov
dec
push
inc
or
jecxz
mov
in
adc
not
jmp
outsl
popa
mov
sbb
inc
sahf
ss
pushf
insb
xchg
cmpsl
mov
sub
inc
loopne
push
and
or
push
clc
insl
loope
loope
push
rcrl
pop
cmp
push
dec
dec
cmp
scas
dec
lret
cmpsb
push
test
mov
ja
rcr
sbb
add
lods
movsl
jl
mov
xchg
imul
pop
pop
xchg
int3
test
inc
mov
fmul
sti
and
xchg
xlat
push
xor
xchg
lea
insl
ja
outsl
jno
push
xchg
addr16
das
addb
pop
rorb
sub
xchg
lods
mov
jmp
jno
das
sti
iret
bound
jns
jge
push
icebp
dec
xchg
fdivrl
fs
jp
or
lcall
pusha
mov
pop
faddl
mov
in
je
xchg
xchg
bound
out
pop
pop
cwtl
dec
adc
adc
in
ja
jle
push
iret
pushl
dec
fnsave
push
int
sub
mov
cmp
mov
ret
jp
pop
cmp
and
enter
sahf
lods
pop
push
push
mov
mov
cs
rcr
dec
xchg
mov
rcr
xor
inc
add
das
popa
addl
jno
cmc
ret
gs
cmc
xor
add
inc
adc
push
xor
push
sahf
and
arpl
arpl
jns
enter
iret
pop
sar
pop
push
out
lahf
into
dec
mov
nop
dec
fwait
cmp
imul
bound
push
sbb
inc
loope
out
test
cwtl
notb
shrb
cmp
or
ds
fcmovu
mov
rdmsr
xor
pushl
adc
bound
push
mov
xor
jl
xor
notb
push
inc
out
rclb
xchg
add
outsl
dec
sti
popl
in
in
mov
adc
call
pop
push
orb
push
sub
lds
jge
mov
pop
jg
aam
data16
jbe
cmp
xchg
int3
loope
cwtl
adc
cltd
lret
pop
call
mov
cltd
or
xor
out
xchg
ja
adcb
das
mov
aas
mov
and
call
mov
push
adc
push
inc
rorb
inc
loop
nop
and
push
fimull
jb
inc
xchg
inc
sahf
cwtl
dec
xchg
sbb
mov
and
psllw
push
stos
je
jae
sub
test
add
bound
pushf
das
jmp
mov
dec
subl
mov
dec
xchg
xor
sub
out
xor
fdivrs
out
cmp
lret
fstl
bound
xchg
sbb
add
pop
out
loop
mov
sub
push
aam
insl
or
je
xor
fimuls
idivl
xchg
arpl
scas
jge
pop
add
xor
es
into
xchg
and
add
dec
out
fld
neg
and
and
mov
adc
sti
jnp
mov
add
mov
cmpsb
jno
int3
cmpsl
sub
loope
inc
dec
inc
arpl
push
outsb
push
gs
in
mov
pop
in
or
pop
or
je
mov
dec
nop
cmpsl
sarl
mov
sub
mov
push
rolb
iret
es
loop
lods
lahf
fwait
je
jns
ljmp
fcomip
xchg
add
xor
sahf
in
ds
push
jg
mov
inc
test
jbe
cli
aam
iret
iret
mov
inc
xor
pushf
sub
xor
adc
lods
test
and
popf
xor
xchg
inc
ja
push
dec
shl
fwait
stc
push
or
ficomps
mov
gs
adc
xor
and
pop
push
mov
and
fxch
inc
mov
sbb
inc
sub
or
ja
dec
stos
popf
les
sahf
xchg
enter
mov
xchg
cmpsb
add
adc
out
push
sub
nopl
jl
pop
jae
dec
cld
xchg
jo
lods
call
addl
lds
pop
mov
hlt
pop
mov
push
push
pop
aaa
pop
ret
gs
aam
and
das
adc
xor
inc
cmpsb
push
xchg
xchg
adc
pop
sbb
fwait
nop
and
ret
popf
leave
es
arpl
dec
or
into
ljmp
gs
push
fs
sahf
sahf
xor
adc
out
adc
mov
clc
xchg
dec
mov
jb
nop
daa
mov
loopne
popa
ds
adc
inc
adc
movlps
aas
cmp
les
lret
pop
lods
sbb
cmp
mov
stos
testb
out
repz
fldenv
lret
sbbl
bound
cmp
aaa
cwtl
cmpsl
pop
rol
and
mov
imul
add
push
mov
pop
pop
pop
xor
adc
jl
ret
in
fldenv
cmpsl
jg
jne
jbe
and
cmp
popf
cltd
popf
mov
popf
mov
push
adc
dec
movsb
pop
pop
jae
jl
shll
ret
cmp
dec
sti
sub
lcall
in
repz
mov
lret
pusha
aad
jmp
push
loop
outsl
gs
mov
mov
mov
jp
out
fistl
in
sarl
stos
jne
xor
xor
sbb
jmp
push
fisttpll
leave
lock
arpl
dec
sub
shll
fldenv
add
push
mov
pop
jl
inc
push
pop
adc
inc
outsb
iret
jge
lods
fldt
insl
jb
insb
xchg
xchg
mov
movq
imul
fsts
push
mov
lea
outsb
call
adc
inc
ja
sbb
xor
and
adc
test
stos
insb
cmp
gs
int3
mov
ljmp
sbb
movsl
xchg
xchg
jns
inc
xchg
jns
and
scas
fidivrl
enter
clc
cmp
movsl
jae
push
test
bound
dec
mov
fimuls
xlat
push
sbb
call
lcall
scas
and
add
cmp
fsubs
mov
out
out
xor
dec
mov
mov
cmc
and
mov
and
jmp
and
add
aam
ds
loope
shll
jo
jecxz
in
xor
push
add
xchg
xchg
push
sbb
and
into
and
cwtl
sub
lods
mov
xchg
xor
xchg
mov
xorb
jns
jb
mov
jbe
inc
jbe
rclb
mov
push
xchg
adc
les
es
sub
push
push
jge
loope
loope
fnstenv
adc
ljmp
sti
into
imul
lcall
loop
jp
xor
fiaddl
out
sbb
inc
pop
xchg
je
stos
pop
mov
sahf
mov
int3
ret
mov
adc
push
xor
sbb
repz
or
rol
shll
cld
in
sbb
inc
and
lea
mov
pop
sahf
out
jns
not
mov
out
adc
iret
outsl
mov
jno
lret
mov
fiaddl
js
add
outsl
stc
pop
lods
pop
push
hlt
pop
js
in
jp
and
and
cmp
pop
push
sub
int
push
and
sbb
sbb
push
sbb
sub
in
add
scas
pop
enter
out
cmpsl
xor
aam
dec
mov
js
ss
and
pop
lock
fbstp
scas
push
and
cmpsl
insl
push
ret
daa
pop
outsb
popa
mov
pusha
movsb
pop
cmp
pop
inc
movsl
pop
pop
mov
cmpl
sub
sbb
sar
out
mov
mov
pop
jae
movsl
mov
adcl
enter
test
test
cltd
jle
shr
sub
ljmp
cmpl
or
addr16
in
cmp
lds
stos
mov
adc
lahf
push
repnz
out
lods
pop
insb
rcrb
adc
test
pop
xlat
lock
mov
cmp
mov
dec
stc
stos
pop
sbb
out
divl
vshufps
ficoml
mov
mov
add
xor
adc
jecxz,pn
jmp
dec
fadd
sbb
js
and
out
lcall
mov
out
pop
outsb
rclb
outsb
pop
out
jge
fsubl
jne
jno
mov
pop
jecxz
jmp
fsubl
lahf
shr
test
pop
sahf
push
or
xor
mov
pop
repz
cmp
xor
dec
push
mov
mov
push
jnp
imul
test
jbe
das
and
lock
add
shll
inc
clc
cwtl
in
and
fdivrs
subb
out
pusha
ret
jmp
mov
or
dec
fldl
shrl
mov
rolb
fidivl
fstps
jmp
or
cmp
iret
and
lock
fwait
sahf
test
mov
mov
push
cmpps
jg
sahf
outsb
jnp
or
push
jno
pop
xchg
pop
std
pop
sbb
imul
stos
sbb
lret
jbe
outsb
jno
roll
mov
xor
jbe
ss
jbe
jns
loopne
sbb
push
call
mov
jo
fiadds
sub
mov
dec
add
lcall
mov
call
data16
fimull
mov
sbb
fisubrl
pop
pop
fcoml
int3
and
push
or
cmp
int
iret
icebp
std
out
mov
call
or
nop
mov
in
sbb
and
mov
les
push
lock
addl
or
mov
out
and
ret
and
push
lret
xor
std
shr
mov
adc
mov
sub
jl
pop
dec
pop
cmp
popf
pop
fcoms
dec
or
adc
push
imul
out
mov
mov
leave
loope
in
je
pop
mov
pop
das
in
imul
es
stos
hlt
subl
pop
sub
outsb
mov
cli
int
cmpsl
sub
outsl
ljmp
ret
jp
inc
scas
cmp
aad
mov
mov
mov
dec
xor
into
dec
lcall
popa
mov
test
dec
xlat
divl
outsl
jp
pop
and
popa
popa
pop
leave
ffree
mov
pop
aaa
lahf
pop
jecxz,pt
xchg
mov
add
mov
fdivs
insb
or
mov
xchg
inc
stos
xchg
and
das
push
sub
in
sub
dec
out
jmp
cmp
jp
in
or
in
sub
repnz
fmulp
dec
out
pop
pop
in
popl
js
adc
loop
add
mov
test
outsl
rorl
pop
jne
ret
rol
pop
push
sbb
and
mov
pop
pop
xor
stc
mov
ja
inc
imul
shlb
insl
adc
dec
push
or
mov
cli
outsl
cmp
je
enter
fcmovnu
cmpsl
push
sbb
mov
aaa
aam
dec
std
mov
jnp
cmp
je
mov
adc
fs
add
jmp
cmp
arpl
dec
mov
and
imul
lahf
pshufw
adc
xchg
in
inc
gs
pop
ss
jbe
aaa
xor
or
xchg
fcomps
das
sahf
test
jp
enter
xor
int
sub
push
or
dec
jnp
push
les
data16
push
mov
xchg
jle
addb
call
es
nop
pop
pop
negb
jno
cmpsb
adc
leave
iret
dec
or
mov
stos
ret
out
lods
mov
ljmp
jmp
or
sub
fwait
jb
imul
mov
sarl
pop
dec
cmp
adc
pop
pop
mov
pop
stos
push
sub
pushf
fsts
sub
dec
dec
cmp
mov
data16
loopne
pop
gs
add
clc
lcall
loopne
outsb
pop
in
movzbl
mov
pop
sub
xchg
jno
xchg
or
inc
and
push
daa
mov
out
repz
pop
mov
hlt
mulb
fildll
in
xchg
or
test
inc
pop
test
jg
into
or
mov
scas
lcall
lret
stc
out
fxam
movb
dec
dec
sub
stc
dec
cmp
push
jmp
loope
or
cmp
insb
leave
bound
dec
mov
adc
xor
dec
push
push
dec
dec
sahf
loopne
jnp
xchg
out
movsb
sub
fstpt
lea
or
jmp
fisttpl
in
imull
movsl
jns
xchg
cmpl
cmp
xchg
lods
mov
sub
and
inc
xchg
test
or
cmovae
cmpsl
sahf
dec
lahf
xchg
jmp
loopne
popf
test
pop
out
cmpsw
pop
jmp
test
sbb
leave
fidivrl
add
inc
repz
scas
stos
pop
ljmp
insb
and
dec
pop
idivl
pop
sub
sbb
fsubrp
inc
push
sub
fsts
scas
jg
add
cmp
jo
mov
lcall
or
mov
add
pop
out
out
jnp
cmpsb
ljmp
into
push
in
push
lret
sahf
mov
cli
add
sub
bound
fsubl
xchg
in
mov
jnp
stc
mov
js
jns
aad
push
stos
rclb
lds
bound
mov
inc
mov
fdivr
xchg
lcall
call
mov
pop
cmp
mov
pop
inc
lea
test
xchg
daa
sbb
sti
dec
das
in
mov
sub
cmpsl
insb
scas
inc
inc
lret
lret
sbb
xor
les
jb
sub
ret
test
out
iret
cmp
xor
sti
aam
fdivl
or
sub
loopne
jno
push
fsubs
in
push
in
jae
sbb
outsb
nop
outsb
jb
bound
ret
jnp
dec
xor
lods
pop
hlt
cli
shlb
or
sbb
xchg
cld
push
xchg
enter
jbe
in
loope
adc
into
jecxz
and
iret
inc
in
rcrb
xor
push
movsl
pop
bound
pop
lahf
xchg
jl
dec
xchg
jno
stos
adcl
pop
pushl
and
rorl
sub
in
call
or
pop
pushf
sarl
out
cwtl
push
sbb
orb
or
jbe
divb
rcr
inc
jne
sbb
or
insb
add
inc
out
pop
andl
mov
push
mov
add
andl
cltd
cltd
mov
leave
mov
in
jb
push
cmp
cmp
shlb
mov
subb
pop
dec
pop
repnz
and
repnz
mov
ret
cmp
push
fisttpll
mov
pop
sbb
movsb
mov
nop
jl
sarb
or
fistpll
and
cli
dec
adc
cld
movb
jge
jns
lea
push
loopne
rol
out
and
cmp
movsb
test
lods
xchg
cltd
arpl
mov
aas
adc
stc
into
inc
out
jae
and
lods
xchg
out
pop
rol
push
addr16
dec
pop
movsb
mov
stos
ds
mov
sahf
ret
push
fldt
jne
lods
or
stc
sbb
mov
mov
mov
jl
fwait
mov
aam
dec
xchg
ljmp
pop
clc
in
jmp
enter
pop
mov
push
inc
loopne,pt
in
test
pop
int3
cmp
sar
sub
push
fdivrs
jle
lods
push
iret
add
fmuls
adc
dec
aad
testl
sub
daa
mov
les
inc
cmp
cmp
fists
loope
pop
mov
bound
jne
int
push
std
jno
push
xor
push
push
add
push
adc
mov
loope
and
xor
insb
xchg
sbb
mov
sahf
andb
xor
mov
xchg
pop
mov
xor
and
pop
jg
mov
xchg
scas
ret
dec
push
push
cmp
lods
xor
int
loope
mov
in
xchg
dec
popa
dec
dec
jne
mov
pop
dec
aaa
fcmovu
xor
faddl
push
movsl
adc
add
push
bswap
dec
out
push
fld
or
arpl
andl
jb
in
jp
jmp
outsl
loopne
inc
ret
inc
fisttps
out
cmpsl
aaa
pop
push
ret
and
cmpsl
es
push
and
push
ret
jae
std
jge
cmpsl
jns
push
nop
cmpsb
aaa
lcall
mov
pop
xor
mov
jge
mov
push
hlt
mov
in
sbb
clc
inc
or
mov
dec
lods
testb
pop
mov
add
repnz
cmp
insl
fwait
mov
cmpsb
int3
stos
test
jg
mov
cli
add
mov
jo
add
testl
mov
cld
or
pushf
lods
push
jl
jge
fiadds
mov
insb
or
aad
pusha
repnz
pop
mov
jns
xlat
and
cmpsl
call
jmp
add
int3
xor
ret
fimuls
mov
jmp
cmp
sbb
rorb
xchg
scas
test
fldt
test
cmc
mov
shlb
fldl
call
in
rclb
push
mov
fstl
jle
je
push
push
pop
call
sbb
xor
lret
sub
jae
nop
scas
add
mov
paddw
shrl
daa
xchg
inc
pop
add
shlb
sub
jae
ljmp
mov
ss
cmp
pop
jge
adc
and
sbbl
mov
push
push
dec
sub
jo
add
push
lea
jb
std
and
sbb
jle
jecxz
fdivs
mov
xor
adc
mov
hlt
daa
pop
repnz
mov
jmp
je
pop
in
adc
jb
adc
pop
outsb
or
ret
stc
movsl
scas
js
add
out
imul
out
pusha
cmp
das
ret
cwtl
inc
pop
in
scas
cmpb
sbb
test
lods
sub
adc
nop
fcmovnbe
icebp
jo
test
dec
mov
adc
outsl
jns
add
iret
cli
jbe,pn
test
mov
iret
sbb
jecxz
dec
stc
mov
add
je
push
add
add
test
ja
int3
mov
mov
jl
adc
aad
ds
test
sub
cmp
or
cli
inc
add
cmpb
mov
out
mov
adc
mov
mov
mov
andb
cmp
frstor
mov
pop
rolb
mov
xchg
loope
push
addr16
xlat
js
out
out
mov
dec
stc
rorb
gs
clc
fadds
and
cmp
mov
xchg
jmp
sbb
enter
sahf
pop
dec
aas
aaa
mov
add
or
jle
int3
push
jecxz
fwait
xlat
sub
add
jmp
test
cwtl
xlat
lret
pop
mov
scas
negl
xor
inc
mov
and
stos
pushf
shrb
dec
popf
jb
int3
std
sub
test
inc
inc
jo
adc
pop
sbb
adc
sar
xchg
ljmp
jo
sub
lahf
test
push
repnz
jg
outsl
mov
xor
out
fiadds
loope
mov
sub
mov
jne
decb
sbb
xchg
mov
mov
cpuid
dec
ret
in
data16
xor
adc
mov
fwait
in
mov
push
lahf
fistps
xor
xchg
sbb
push
lret
lcall
stos
cmpsl
dec
jnp
xchg
in
adcl
push
js
addr16
jns
xlat
fisttpl
cmp
jecxz
push
insl
rcrl
jo
inc
push
mov
adc
jne
xchg
dec
push
aas
pushf
testb
push
or
xor
inc
xchg
push
scas
pop
sub
xlat
jno
mov
xor
out
mov
xor
mov
enter
cmc
and
movsl
jb
test
pop
dec
mov
mov
cmp
and
test
and
int
xchg
and
mov
addl
in
jae
mov
insl
xchg
in
cmovns
inc
dec
or
das
incl
sub
mov
fs
sbb
jno
mov
xchg
sbb
shll
and
or
jecxz
fisttps
inc
xchg
fsubp
imul
arpl
mov
fnstcw
clc
sub
inc
jge
fcomip
fidivl
sub
jbe
daa
jmp
cmp
cmc
push
mov
dec
in
mov
aam
shrl
inc
psadbw
filds
mov
sarl
leave
push
sahf
jmp
jp
sbb
lahf
mov
jge
pop
dec
push
push
adc
stos
movsl
push
push
mov
stc
and
adc
fsubrp
mov
add
sbb
mov
sbb
jge
stos
aaa
jl
out
jmp
leave
mov
mov
cltd
push
into
adc
inc
cmp
fistps
pop
cltd
pusha
pop
jo
dec
add
shlb
out
adc
es
bound
ret
lock
sbb
cs
jmp
xchg
jo
or
sbb
add
sbb
or
leave
dec
hlt
pop
sbb
loope
pop
mov
sub
arpl
push
pop
ret
mov
mov
iret
cmpsb
insb
push
sub
orb
stc
lds
cli
push
call
jns
loope
dec
add
jl
adcb
mov
mov
je
fwait
inc
xchg
std
les
push
in
fisubl
int3
cmp
orb
nop
jge
and
fcomi
dec
lcall
mov
xchg
mov
xchg
bound
or
xchg
mov
mov
mov
mul
je
jge
test
subl
dec
or
pop
push
hlt
mov
sub
scas
xchg
out
rcrb
fstps
jo
sbb
mov
stc
xor
cmp
notrack
lock
push
jno
test
aad
addr16
fxch
cmp
lcall
push
rcrl
sbb
or
sarb
popf
minps
sbb
push
imul
and
testb
xchg
pop
xor
test
jo
ljmp
hlt
sbb
or
xor
jmp
jle
mov
xor
das
jl
and
notl
jp
insb
pop
sahf
or
loope
push
xor
testl
inc
mov
dec
xchg
pop
mov
jae
in
jmp
push
or
mov
dec
sbb
mov
pop
mov
sub
mov
xchg
and
sub
mov
ja
subb
rorb
mov
mov
xchg
xlat
lea
cmpb
sti
pop
subb
bound
push
xor
adc
repnz
cmpsb
mov
sub
jno
pop
mov
adc
mov
shlb
jo
hlt
jne
and
mov
xchg
adc
test
add
movsl
sbb
adc
jge
inc
mov
pop
aas
push
stc
jg
roll
and
imul
jno
out
cmp
jge
xchg
hlt
jnp
testb
rorb
outsl
adc
inc
jbe
imul
test
movsb
dec
adcl
sub
repz
ljmp
arpl
xor
jge
dec
mov
xorb
and
fisttpl
and
cmp
ffree
add
pop
cmpsb
fs
addb
enter
cmp
faddp
lods
sbb
rol
mov
lods
mov
fnstsw
push
icebp
aaa
imul
add
lds
out
jecxz
push
pop
push
xchg
sbb
bound
xchg
test
scas
cltd
fidivl
clc
or
rorb
or
push
dec
or
lods
test
movsl
addr16
repnz
decl
addr16
lahf
in
jl
xor
push
ret
mov
int
inc
sbb
fldt
fisttps
movsl
xchg
fsts
xchg
adc
fdivrl
and
adc
imul
in
push
and
hlt
mov
movsl
push
mov
inc
in
loope
in
dec
dec
dec
mov
xchg
jno
movsl
or
lret
fcoms
sub
cmpsl
xlat
imul
andb
pop
pop
fs
sub
cltd
data16
add
mov
inc
in
rcrl
test
gs
mov
and
or
mov
push
xchg
movsl
mov
xchg
sbb
sbb
inc
sub
gs
lahf
dec
sbbb
push
imulb
das
rcl
in
jne
sub
test
insb
fiadds
xor
in
pop
aad
push
or
push
das
gs
mov
pop
mov
push
mov
lret
addr16
mov
repz
loope
pop
adc
pop
xchg
cld
bound
aam
push
mov
lock
adc
pusha
lret
lds
and
dec
movsl
and
test
xor
shl
push
jmp
call
adc
rclb
mov
jnp
xchg
mov
adc
icebp
jl
mov
ljmp
movsb
insb
mov
push
inc
clc
cmp
cmpsb
rep
fisubrl
mov
sbbb
fs
adc
cmp
loopne
add
xor
sub
add
ret
icebp
adc
sub
loop
mov
push
mov
pop
and
add
enter
sbb
test
mov
sub
fidivl
mov
dec
push
xchg
sarl
repnz
loopne
xor
pop
push
mov
and
mov
imul
pushf
clc
fwait
xchg
xchg
dec
clc
lock
adc
mov
mov
sub
dec
adc
sahf
lds
sti
movsb
clc
rcrl
xchg
cmp
jo
jne
ds
jge
add
mov
jmp
je
jb
jae
mov
test
daa
lock
mov
std
test
push
enter
push
iret
sbb
push
push
xchg
sahf
mov
movsb
sub
jnp
out
gs
rolb
cmc
dec
cmpsl
fbld
cmp
into
clc
push
das
push
pop
and
iret
ja
std
loope
xorl
push
popa
push
sti
lods
sub
push
cmp
sbb
push
mov
cld
fisubrl
push
dec
cltd
in
inc
dec
pushf
jp
addr16
inc
xlat
jbe
call
inc
hlt
pop
enter
mov
dec
lret
xchg
pop
stos
mov
xchg
or
mov
cmc
sub
jns
cmpsb
dec
mov
das
jbe
jmp
cmp
push
sbb
jecxz
xor
repnz
add
popf
inc
loopne
in
xchg
xchg
pop
rclb
cmp
and
daa
add
dec
sarb
pop
xchg
js
adc
jecxz
mov
imul
xor
fwait
test
pop
jno
in
das
mov
add
cmpsb
hlt
add
fnstcw
or
xchg
lods
loopne
dec
jb
add
xchg
push
push
sbbl
cmp
jb
lds
daa
bound
lods
pop
lods
lcall
inc
mov
add
jo
addr16
mov
rcrl
or
ret
repz
cmp
xchg
mov
jns
repz
xchg
push
in
scas
mov
push
and
jecxz
or
out
sbb
mov
std
ljmp
add
lock
sbb
int3
stos
les
lock
cmp
aad
hlt
adc
les
xchg
push
jle
mov
not
and
fimull
jae
imul
int
xor
mov
jmp
mov
sbb
inc
gs
cltd
or
push
nop
sbb
push
into
sbb
sub
loop
pop
mov
pop
sbb
ret
jle
movsl
xchg
adcl
push
mov
and
adc
push
sub
push
mov
xor
add
lcall
subb
loope
cmp
mov
dec
hlt
insb
push
cs
gs
sub
mov
loope
ljmp
dec
in
push
sbb
xor
stos
test
clc
fisubs
cmc
into
fstl
add
leave
adc
or
ss
sub
gs
les
cltd
pop
dec
dec
cmp
jae
push
mov
or
inc
imul
sub
sahf
out
rep
or
mov
inc
movsl
test
dec
push
dec
clc
aam
cmp
mov
in
jbe
inc
pop
sbb
jge
arpl
cmp
inc
inc
sub
pop
or
out
ja
adc
mov
ret
push
pushw
aam
sarb
out
nop
test
ljmp
out
decb
int3
sub
or
jge
or
inc
movsl
cmp
xor
jae
mov
testl
lea
cmp
popf
or
xchg
or
fisttpl
sub
cmp
or
mov
test
dec
pop
lret
shll
cmpsl
dec
and
hlt
aad
add
cmp
jl
push
out
jg
cmp
gs
push
mov
addl
and
cld
cmp
cmpsl
xor
daa
adc
xlat
mov
scas
jp
pop
mov
cld
popf
or
nop
lods
or
dec
sub
sbb
rcrb
sbb
adc
cli
movsb
test
rolb
repz
cwtl
sub
mov
mov
into
mov
dec
out
inc
fists
dec
mov
or
das
or
xchg
pop
test
movsl
cmp
ret
or
aaa
call
rcr
adc
cmp
xor
add
ret
lret
pop
mov
push
jnp
mulb
inc
sahf
mov
fldenv
or
je
sub
or
and
mov
dec
call
out
das
fisttpll
pop
es
stos
push
xchg
lock
lret
jbe
cltd
push
cmpsl
rcrb
push
adc
push
scas
dec
mov
icebp
mov
lods
stos
xchg
movsb
fsubrs
insb
loop
lea
push
scas
or
stos
lahf
jl
xchg
sbb
push
stos
xor
cli
lea
sbb
push
mov
xlat
xchg
jb
insb
aam
cld
or
test
hlt
jmp
mov
lock
mov
mov
ss
sbb
mov
mov
xlat
inc
sub
fwait
addr16
arpl
dec
fs
mov
cmc
int
pop
add
mov
pushf
jnp
sahf
dec
mov
or
cld
cmpl
add
pop
rolb
outsl
into
jo
and
fmuls
jno
je
jg
and
mov
sbb
stc
ret
jecxz
sbb
shlb
mov
hlt
mov
pop
inc
xchg
dec
mov
mov
enter
push
cmc
loope
adc
pop
inc
pop
jbe
inc
add
push
cmp
movsl
test
ficompl
adc
mov
ss
push
sbb
xchg
jle
push
test
test
clc
xchg
les
es
insb
loop
rolb
mov
or
xchg
xor
sub
mov
test
or
xchg
cwtl
dec
cmp
loop
inc
into
ret
or
cli
testb
xor
push
test
or
jo
or
icebp
insb
out
xor
jne
out
jecxz
movb
pop
add
test
dec
mov
mov
stc
addl
lahf
xor
imul
pop
loopne
mov
pop
xor
xor
sbb
pop
push
stos
dec
mov
arpl
dec
rcl
mov
lea
imul
loopne
or
dec
sar
les
and
int
mov
loopne
jno
movsb
and
xor
fidivrl
adc
inc
fstpt
adc
ficomps
mov
hlt
iret
mov
push
pusha
sbb
jb
sub
dec
lret
mov
dec
xchg
clc
cmpsl
push
scas
jmp
xchg
jne
xor
push
ret
sbb
pop
cmpsb
subb
fistps
xor
mov
sbb
das
mov
jmp
mov
int
mov
push
sbb
scas
cs
test
pop
adc
pop
adc
lods
pop
stos
or
popa
pop
xor
fs
mov
ss
fwait
xchg
fs
scas
movsb
jle
ds
aaa
addr16
add
xor
aam
jns
stc
cmp
mov
js
cmp
adc
mov
int
fstps
and
lret
data16
cld
add
and
fwait
or
adc
xchg
icebp
outsb
loop
xchg
sbb
dec
jmp
imul
cmp
and
push
mov
cli
or
loop
ret
xlat
into
lcall
loope
xor
in
mov
stc
sub
jl
mov
cmp
sbb
insl
mov
stc
dec
adc
pop
and
movsl
push
mov
mov
insl
dec
and
bound
and
addr16
inc
add
lret
xor
pop
sbb
sbb
js
ljmp
pop
inc
adc
jne
int3
cmpl
loop
imul
xchg
idiv
mov
arpl
xor
sbb
dec
mov
inc
lret
in
out
sbb
lret
adc
mov
jmp
xchg
adc
sub
shrb
cmpsl
push
jnp
lods
jge
sbb
xchg
jo
pop
movsb
xlat
fiadds
add
mov
jbe
xor
push
sti
repnz
and
fs
lock
int
ja
mov
pop
xchg
notb
cmp
mov
dec
test
fs
lea
fucomip
ficomps
mov
sti
adc
lods
push
mov
int
push
icebp
cmp
pop
push
leave
adc
inc
hlt
ror
outsb
push
cmc
push
popa
lret
test
subb
pop
add
mov
mov
in
shrb
mov
movsb
sbb
mov
sub
lods
adc
test
cmp
xchg
call
insl
imul
data16
mov
cmp
pop
sub
int3
adc
mov
lea
sub
or
aam
dec
mov
out
push
test
ret
orl
mov
fadd
add
rcl
xor
rcr
fldpi
arpl
lret
cmp
sbb
mov
and
movsb
sbb
dec
mov
gs
pop
es
inc
and
push
mov
int3
repnz
jnp
insl
pusha
aaa
adc
push
xor
ficomps
in
or
icebp
dec
jno
jns
adc
pop
jne
in
push
out
rolb
das
cmp
js
call
popf
mov
fidivrl
dec
jno
int3
lret
xchg
mov
test
jae
cld
in
dec
pop
cmp
dec
ja
scas
xchg
push
call
mov
xor
mov
loopne
mov
push
adc
inc
dec
lcall
mov
xor
or
xchg
fwait
inc
ficoml
xchg
jp
movsl
jb
cmp
jne
test
mov
lock
ret
enter
out
outsl
inc
pop
cmpsl
nop
test
push
loop
cmp
push
test
xor
mov
clc
into
cmp
movsb
hlt
pop
outsb
jge
icebp
call
clc
mov
or
pop
sub
test
or
xchg
mov
xchg
jg
aaa
in
cmp
pop
hlt
mov
jno
mov
ss
aaa
mov
lahf
xor
addb
lods
sub
out
cmp
lods
arpl
in
inc
and
xchg
je
mov
sbb
das
inc
push
xchg
ja
leave
mov
out
mov
mov
inc
mov
adc
pop
das
movsl
test
push
mov
push
mov
gs
into
jge
hlt
adc
data16
mov
aam
cs
arpl
inc
add
cwtl
push
mov
mov
fldenv
cs
addr16
or
xchg
jb
int
jo
cmp
add
mov
mov
pop
adc
hlt
cmp
push
stos
or
std
pop
sbb
test
test
inc
fdivl
lods
mov
je
mov
push
out
les
stos
mov
faddl
add
mov
in
js
jecxz
pop
xor
lea
mov
xor
ljmp
pop
push
push
lods
sbb
xchg
rcrb
imul
xchg
outsb
addb
and
cmpsl
stos
je
aad
shrb
push
push
iret
gs
stos
cld
xchg
fstps
lods
mov
pop
mov
add
out
inc
fcmovbe
test
xor
mov
notl
movsl
daa
hlt
jns
cmpb
pop
aad
fbld
adc
das
sbb
pop
cmp
xor
sbb
pop
std
fcoms
in
popa
stos
movsl
xorl
fistpll
lea
xor
xchg
mov
add
and
jo
sub
ss
fs
clc
mov
enter
std
mov
aaa
in
insl
lock
or
cmp
lcall
mov
jg
iret
mov
mov
bound
call
icebp
push
insb
iret
sub
mov
data16
in
pop
and
ret
mov
mov
shlb
into
inc
cwtl
testb
movsl
sub
addr16
dec
call
or
mov
int
fcoms
mov
cmc
and
insl
ret
arpl
mov
out
test
enter
sti
push
pop
cmp
into
std
and
ss
adc
cwtl
mov
sbb
into
and
and
ret
stos
jmp
cmp
push
mov
xlat
stc
push
sbb
int3
adc
xchg
cmpb
push
adc
add
adc
cmp
sbb
push
clc
adc
mov
imul
cmp
inc
add
lods
xor
cmp
daa
fdivrs
test
cmp
mov
adc
inc
cmp
fs
mov
das
pushf
sbb
addr16
mov
and
mov
pop
sbb
sub
iret
cmp
mov
sti
fwait
and
daa
jo
sbb
jne
jnp
cmp
push
ja
pop
sbb
sbb
call
jae,pn
mov
outsb
inc
enter
out
outsl
ret
mov
clc
jno
jmp
cli
out
mov
xchg
cmp
lret
pop
add
or
sbb
test
jg
imul
cmp
ret
enter
sbb
sbb
daa
add
in
loope
inc
push
inc
cmp
push
xchg
xor
test
and
data16
cmp
sub
mov
inc
jne
lcall
jb
inc
clc
mov
inc
test
shll
jo
dec
dec
cmp
lcall
fimull
sahf
inc
sbb
xlat
cld
clc
daa
test
push
add
enter
jb
popa
aad
xor
sub
ds
shlb
push
scas
jne
mov
sub
xchg
js
pop
cmp
pushf
mov
jno
js
add
sub
ljmpw
subb
jo
or
add
jb
ret
xchg
mov
stos
sub
mov
push
add
xchg
mov
fbstp
fdivrl
pop
aad
fistpl
ret
insl
ds
incb
fimuls
mov
movsb
xor
outsb
xor
cmp
stc
ret
add
push
push
dec
add
sbb
sbb
pop
test
xchg
cmp
mov
js
icebp
dec
inc
pop
imul
xor
fidivrl
push
add
adc
or
cmpsb
out
mov
aad
inc
lds
aam
jae
mov
sti
xor
xor
dec
add
xchg
mov
pop
sbb
xor
shll
cmp
push
mov
adc
jne
dec
xchg
xor
adc
cld
pop
cmp
movsb
das
fs
and
sbb
aad
fld1
add
adc
pop
add
leave
mov
and
or
addr16
cmpsl
arpl
adc
mov
lods
das
in
aaa
pop
ret
setg
dec
xchg
adc
cmp
enter
les
push
sub
jno
loope
leave
mov
cmp
test
fnstsw
dec
insl
jmp
sub
mov
sar
loopne
lcall
scas
xor
cli
jmp
sbb
lcall
int3
imul
add
mov
xchg
call
jne
mov
repz
mov
fstps
fistps
data16
add
rol
ljmp
mov
inc
mov
lods
push
fldenv
pop
xor
pushf
mov
push
sbb
dec
mov
jp
and
ja
stos
mov
or
push
jmp
aam
or
cmp
fldl
std
test
out
fs
xchg
and
jne
cmp
add
xor
xorb
xchg
pop
jle
iret
xchg
insl
hlt
push
xor
dec
adc
adc
mov
add
mov
dec
sti
stc
mov
dec
fisttps
outsb
in
mov
fcoml
testb
xor
icebp
or
call
push
mov
aaa
cmp
imul
fiadds
dec
sub
mov
es
ljmp
hlt
in
pop
pop
dec
jne
sbb
stc
stos
bound
lret
sub
ja
and
loopne
mov
sarb
or
lods
loopne
inc
movsb
out
sub
xchg
nop
fildl
mov
dec
out
xlat
xor
pop
jno
adcb
jo
pop
out
push
fs
and
fisubl
dec
mov
mov
xor
xor
addl
arpl
jle
jne
xor
imul
sbb
test
lock
cmc
mov
dec
inc
mov
das
push
dec
and
insb
stos
push
fldcw
shr
mov
leave
imul
dec
orl
mov
fistps
xchg
mov
addr16
lahf
add
and
fs
ds
and
sahf
test
test
ret
jp
or
loopne
cwtl
shl
fistl
shr
cmc
and
or
jnp
hlt
mov
mov
jno
lahf
fistpl
xor
add
into
ljmp
ret
inc
add
leave
rcl
rcrl
or
pop
pop
jge
sbb
testb
or
pop
cmp
dec
imul
out
pop
inc
inc
xchg
popa
and
stos
movb
scas
testb
js
and
call
cmp
mov
loopne
shll
xchg
aam
mov
adc
in
mov
hlt
outsl
push
jbe
xor
das
add
loopne
ja
adc
ds
or
push
push
mov
cmp
adc
cmpsl
fwait
dec
or
scas
mov
cld
lcall
repnz
stos
add
mov
add
cmp
insl
jg
shlb
mov
jb
mov
andb
mov
or
inc
out
test
mov
push
dec
cmp
or
push
mov
ja
int
xor
jg
inc
inc
jno
cld
push
or
andb
outsb
cwtl
jl
adc
js
sub
and
mov
lods
mov
cs
int3
js
mov
stos
aam
push
pusha
ljmp
mov
xor
mov
cmp
pop
push
arpl
mov
inc
adc
jg
les
data16
loopne
mov
push
loope
vpunpckhdq
jne
int
fbstp
mov
mov
pop
outsb
lea
sahf
mov
ds
mov
push
xchg
mov
push
or
lahf
sbb
js
iret
dec
sbb
outsb
dec
ret
or
imul
cmp
icebp
mov
loope
jp
jecxz
and
jbe
daa
sbb
jmp
fcoml
mov
push
adc
inc
cmp
rcrb
cmp
lcall
setnp
icebp
xchg
aad
mov
inc
dec
dec
jmp
std
and
orps
mov
and
cmp
out
xchg
mov
pop
and
xchg
imul
pop
cmc
outsl
ds
pop
mov
xchg
pop
in
scas
xchg
call
or
xchg
daa
ja
insl
adc
add
out
repz
call
out
bound
jmp
cmpsl
mov
mov
or
inc
call
fs
dec
mov
sub
inc
or
je
push
mov
call
mov
and
mov
cli
and
ljmp
stos
fisubrl
repnz
scas
sbb
sub
inc
test
lock
jnp
mov
jmp
fldt
clc
cmp
faddl
add
or
je
sahf
mov
scas
and
or
movsb
push
rcr
cmp
scas
int3
cmc
bound
imul
cmp
mov
add
lods
mov
aad
je
push
pop
pop
or
push
ret
push
mov
and
push
dec
mov
ss
addl
inc
mov
outsb
jbe
int3
js
subb
jo
out
shlb
or
lahf
jp
fistpl
mov
leave
mov
scas
pop
inc
in
xorb
xchg
xchg
addr16
imul
sbb
jne
mov
or
pushl
xor
out
push
sbb
mov
inc
and
pop
pusha
cmp
aam
test
sub
sbb
loope
jle
push
adc
adc
jns
mov
cmp
adcl
ja
mov
ret
xchg
sub
xchg
adc
into
aaa
dec
or
dec
add
dec
push
ja
mov
xorl
pop
outsl
mov
adc
cmp
enter
hlt
inc
xor
aas
xor
xchg
pop
addl
pop
mov
pop
icebp
sbb
pop
adc
sub
incl
stos
add
mov
xchg
push
push
pop
xor
incb
imulb
inc
cs
pop
scas
cmp
test
xlat
ror
push
add
ljmp
sbb
in
insl
inc
in
push
push
mov
xor
sbb
push
scas
gs
setno
mov
mov
jnp
push
std
lds
dec
mov
out
jns
iret
xchg
mov
int
push
pop
or
cmp
push
mov
dec
mov
push
iret
in
mov
adc
and
cmpsl
andb
xchg
push
inc
lods
sbb
dec
fiaddl
cmpb
adc
xchg
sub
lock
shrl
cmpsl
repz
mov
sbb
push
sbb
xchg
repnz
frstor
add
jle
sbb
jns
mov
cld
xchg
xchg
scas
in
loop
adc
mov
sti
pop
outsb
fstps
sub
ret
cs
mov
inc
sahf
fiaddl
push
dec
out
ljmp
push
jmp
add
sub
xor
xor
movsl
scas
and
inc
cmp
cwtl
insl
push
mov
cmp
mov
lods
xor
pop
outsl
or
lock
fisttps
mov
rcr
jae
out
cmp
xchg
scas
repnz
gs
scas
out
add
dec
xlat
mov
push
add
negb
test
add
rorb
imul
cmpsb
add
stos
add
xchg
fiadds
bound
adc
stc
test
mov
mov
sbb
mov
insb
das
and
xchg
xlat
mov
sbb
out
cmp
ja
sbb
test
lret
xlat
shlb
out
or
jbe
mov
test
add
inc
frstor
ret
scas
xchg
fnstsw
mov
xchg
mov
repnz
mov
out
rcl
sbb
insb
mov
lret
into
ljmp
jb
insl
pop
xchg
and
cltd
and
subb
cs
daa
xor
pop
insb
cmc
mov
ret
pextrw
mov
sub
xor
adc
pop
jp
mov
jge
pushf
and
push
jne
sub
fbld
vdpps
out
jp
mov
loop
repnz
test
push
pushf
inc
jnp
pop
imulb
and
loope
fmuls
inc
inc
mov
xchg
sbb
ficomps
inc
and
sub
sub
ret
scas
xor
and
sub
dec
ret
xchg
scas
dec
sbb
test
fstpt
sarl
mov
lds
xchg
scas
jo
lds
add
push
jo
lret
fcos
mov
js
jp
add
iret
dec
decb
js
push
outsb
and
cmp
imul
xchg
int
test
insl
lods
leave
inc
insb
fsub
repnz
lock
push
inc
push
adc
xchg
push
inc
test
lods
aaa
pop
insb
addr16
pop
cld
or
cwtl
cmp
adcb
arpl
jmp
pop
sahf
and
push
call
pop
dec
rorl
mov
popa
push
shlb
hlt
aas
cmp
dec
fs
xlat
inc
and
das
and
mov
in
dec
mov
mov
pushaw
les
push
adc
adc
push
pop
dec
lods
movsb
pushf
pop
jb
aad
mov
and
xor
sarb
or
incb
std
jbe
jp
fcomp
jmp
lock
dec
aaa
fidivs
sub
cmp
push
into
mov
push
outsl
or
or
nop
in
negl
push
fwait
je
xchg
cmp
pushf
fwait
push
out
out
add
cmpsb
xchg
pop
es
scas
test
lret
imul
and
fwait
push
dec
insb
mov
adc
xchg
cmp
pop
addb
mov
sbb
outsb
lock
jno
fbstp
xor
jle
inc
push
mov
popf
sarl
cmp
cmp
cs
mov
mov
popf
test
leave
push
mulb
test
stos
pop
je
cmovl
imulb
pop
sbb
repz
in
xchg
ja
fucomip
mov
xchg
adcb
xchg
sub
inc
int3
mov
pop
imul
xchg
dec
jge
push
nop
popf
inc
inc
and
jb
dec
or
inc
sbbl
mov
popf
push
sarl
popf
popf
pop
shll
mov
dec
mov
mov
jle
cltd
mov
and
jp
negl
xchg
or
add
mov
xchg
es
inc
cwtl
ficoml
in
mov
dec
inc
hlt
jge
mov
or
ja
and
popf
sahf
loope
test
xchg
push
jo
sbb
push
fldt
sbb
jnp
lret
xchg
jmp
out
sub
and
daa
cld
adc
xor
cltd
movsl
loop
mov
mov
rcl
dec
add
jno
imul
pop
xchg
and
rolb
push
lods
nop
les
pop
mov
imul
pop
shrb
mov
xchg
inc
cld
jb
out
dec
icebp
mov
or
in
inc
int3
jae
push
add
mov
enter
push
inc
aas
cli
scas
jns
and
xchg
xor
sbb
dec
test
test
inc
inc
xchg
and
mov
repnz
cmpb
mov
arpl
fisttpl
push
icebp
mov
mov
loopne
insb
daa
mov
jne
js
push
push
jbe
imul
adc
xchg
lea
and
test
dec
xlat
das
lods
imul
repz
dec
cli
jge
test
aas
add
inc
sub
and
mov
push
sti
out
inc
pop
mov
sub
or
mull
xor
adc
sub
push
dec
adc
pop
jge
ja
xchg
push
inc
lret
add
in
xchg
jb
xlat
popf
mov
jbe
insl
mov
pop
sub
insb
dec
outsl
jnp
inc
sub
mov
push
inc
imul
aam
mov
test
addr16
mov
mov
idivb
xor
aam
and
inc
mov
enter
jns
test
xchg
push
out
int3
ret
jne
sbb
call
lods
shrl
mov
mov
xchg
int3
in
and
pop
jne
in
and
cmpsl
mov
push
mov
cltd
mov
jg
mov
rcr
ss
pop
aam
into
loop
mov
repz
lds
xor
add
and
sub
jno
sub
push
xorb
mov
mov
sub
push
mov
xor
dec
iret
push
mov
cmp
movsb
adc
lock
jns
lcall
jne
into
adc
ss
lods
mov
xor
cmp
out
lock
mov
lock
push
fistpl
imul
push
sub
ljmp
pop
inc
pop
fsubrp
out
push
clc
js
cmp
cld
adc
aad
mov
mov
cmp
das
xchg
cli
pop
jo
shrb
out
fcoml
xchg
ret
test
gs
sbb
loop
pop
dec
mov
inc
flds
loop
mov
aad
mov
mov
lea
add
cli
subb
pop
insl
cmp
dec
inc
dec
es
xchg
cmpsb
jmp
push
fsts
push
divb
test
jo
add
mov
bound
data16
dec
lds
in
inc
fcomps
pop
xchg
cmp
iret
push
out
ljmp
stos
and
push
scas
negl
arpl
push
movsl
jecxz
icebp
xor
rorl
sub
mov
rorb
adc
cmp
imul
sbb
aad
jns
or
push
sub
inc
xor
ds
mov
and
test
cmp
iret
lahf
adc
icebp
inc
fcompl
shrl
sub
mov
cmp
cwtl
and
sahf
flds
dec
push
loopne
jmp
sbb
out
inc
jbe
jecxz
sbb
sbb
jecxz
cmp
sbb
mov
jmp
insl
in
xchg
test
imul
jg
inc
inc
int
cmp
push
cs
jle
adc
in
jb
fs
int
and
test
xchg
add
movsb
sbb
cmp
cli
xchg
std
inc
sahf
mov
pop
cmovnp
pop
inc
pop
inc
mov
aad
fwait
pop
in
xchg
fisubs
sub
nop
sbb
mov
rcrb
in
adc
mov
clc
or
sub
inc
jne
fcomip
out
loop
dec
popf
mov
sbb
sahf
push
xchg
orb
sub
jg
push
test
enter
cmc
shl
jl
inc
jmp
or
jo
lret
idivb
pushf
add
cli
cmp
cltd
stos
stos
aam
in
and
sbb
jecxz
dec
mov
xlat
add
pop
bnd
pop
dec
dec
test
push
fisubs
shl
out
je
jecxz
repz
out
cmp
push
or
vpcmpgtb
pop
jl
cltd
stc
adc
pop
insl
shrl
cwtl
sbb
sbbl
fisubrs
std
inc
jo
mov
mov
inc
mov
aam
dec
push
adc
scas
sbbb
dec
mov
mov
add
test
in
cmc
jecxz
xor
out
into
mov
jg
xor
mov
adc
adc
mov
push
in
pop
sub
scas
fildll
or
cmpsl
psraw
lods
lret
imul
movsb
aad
pop
inc
jg
arpl
xchg
inc
movsl
mov
pop
xor
push
inc
jecxz
pop
out
and
insl
out
mov
bound
xlat
movsl
add
jmp
or
pusha
dec
pop
mov
xor
inc
sahf
icebp
dec
dec
add
lds
pop
cmp
fldenv
icebp
jg
pop
cmc
jp
push
and
fs
ss
das
call
sub
cmpsl
sbb
inc
mov
pop
pushf
mov
rolb
cs
xchg
outsb
cwtl
iret
fistpll
js
and
rorl
scas
and
xchg
mov
pop
xchg
pop
cmp
shr
jecxz
lods
sahf
jmp
mov
cmpsb
cwtl
fstps
mov
adc
push
xchg
into
xchg
sti
push
adc
imul
mov
jbe
out
adc
filds
sbb
push
jp
in
andb
mov
hlt
addb
in
popa
sbb
cmp
addl
jae
lret
push
data16
das
lock
inc
dec
mov
aad
sbb
add
inc
sub
push
fcompl
mov
popf
mov
jge
test
lahf
loope
dec
push
lret
mov
pushf
and
repz
leave
inc
aas
daa
xor
sti
mov
hlt
adc
sbb
lahf
mov
xor
inc
bnd
jnp
and
dec
pop
iret
out
push
cmc
adc
cli
cmpsl
sub
pop
and
ret
scas
pop
lcall
in
sbb
push
sti
inc
jb
xchg
or
aad
ret
mov
xchg
scas
add
sub
movl
fsqrt
or
roll
pop
test
outsb
mov
add
cmp
lds
xchg
sub
lret
fabs
data16
popa
mov
shl
dec
adc
pop
cli
jecxz
add
inc
mov
and
xor
push
insb
fisttpl
jno
mov
jb
ret
inc
outsb
jbe
cmp
adcb
and
insl
sbb
xor
pop
or
jle
daa
lods
pop
or
jns
and
dec
and
into
das
inc
adc
jmp
call
jnp
pop
fists
push
addr16
xchg
mov
and
add
rdmsr
mov
arpl
in
std
adc
adc
movsb
or
cld
movsb
in
test
dec
jp
scas
cmp
jne
push
fstpt
push
leave
adc
sub
ljmp
jae
in
outsl
push
cmc
lcall
push
fwait
lret
je
ret
scas
mov
cmpsl
hlt
pop
movsl
inc
cli
inc
movsl
or
sbb
test
nop
lods
push
popf
fsub
ret
jmp
lahf
pop
lods
adc
mov
cmp
mov
mov
loopne
int
ljmp
xchg
outsb
sarb
mov
mov
pop
dec
pop
lret
insb
mov
jb
push
xor
pop
fstpt
push
jnp
jno
inc
repnz
sbb
sub
mov
nop
pop
cmp
push
cltd
sub
ud0
or
std
mov
mov
mov
rolb
mov
push
insl
pop
cmc
or
add
sarl
imulb
or
cmp
jp
imul
add
and
aad
movsl
adc
movsb
data16
sub
enter
mov
inc
int
push
fsub
xchg
sub
lods
push
cmpsl
xchg
sub
pop
and
cmpsl
sub
scas
stc
lea
sarb
mov
xor
add
call
lds
xchg
sub
mov
add
cmpsl
mov
neg
es
sahf
iret
mov
mov
or
dec
popf
push
ss
sub
cmpsl
test
lret
and
repz
lds
inc
gs
sub
xchg
lea
dec
dec
popf
push
nop
pop
rcrb
push
or
std
jp
xor
fcomi
and
pop
mov
or
and
jl
paddb
pop
xor
sub
sub
xor
cmp
push
or
lcall
pushf
jnp
jno
fcoms
gs
cmpsb
pop
fstp
lcall
hlt
mov
lods
push
mov
sbb
je
inc
test
cmp
ret
push
aad
mov
mov
jp
ljmp
xchg
inc
and
out
mov
cmp
decb
and
mov
int
xor
repnz
mov
push
xor
movsl
fldt
jl
sub
xchg
pop
push
fdivr
je
adc
lock
test
adc
or
inc
std
sbb
dec
fdivr
pop
pop
out
xchg
mov
nop
mov
daa
pop
pop
mov
call
add
addl
sub
scas
repz
mov
sbbb
xchg
jae
roll
enter
orb
loopne
fidivrl
push
xchg
cmpb
ret
dec
xchg
inc
push
mov
in
xor
hlt
mov
inc
std
pusha
cmp
sub
repz
push
xchg
cmpsb
std
enter
adc
xor
mov
xor
lock
aam
mov
mov
out
les
cltd
pop
push
dec
dec
push
cmp
sbb
ss
mov
fs
pop
jge
fwait
dec
adc
jb
dec
ja
pop
and
mov
sub
fistl
jle
cli
sub
jmp
xchg
adc
iret
insl
adc
jb
xor
and
outsl
sbb
lods
mov
and
test
push
or
mov
fdivr
pop
sub
inc
aas
push
add
push
xchg
inc
mov
mov
clc
lods
repz
xchg
xchg
fsubrs
out
jecxz
xchg
sbb
or
sbb
nop
add
scas
add
repz
in
nop
scas
jp
hlt
dec
hlt
or
shld
and
mov
push
aam
adc
pop
bound
fbld
fprem
jecxz
dec
push
hlt
lea
dec
mov
adc
jecxz
mov
in
jmp
push
cld
es
lret
add
jle
pop
jnp
xor
test
dec
mov
subl
pop
les
jns
dec
imul
add
sbb
cmc
shll
mov
sub
insb
xor
addl
push
mov
cli
scas
es
js
xor
repz
daa
dec
stos
mov
pop
hlt
mov
psrlw
mov
mov
call
leave
and
mov
inc
jnp
or
xchg
sbb
pop
jge
shr
jp
gs
adc
cltd
shlb
fisubl
mov
les
cmp
nop
dec
clc
adc
fcoms
jge
push
cmp
stos
test
cltd
mov
or
pop
adc
or
add
adc
mov
mov
mov
cmp
rcrb
leave
or
inc
loopne
arpl
jg
test
aam
push
adc
adc
enter
xchg
push
cmp
call
fsubrs
icebp
mov
cltd
cmp
jp
pushf
mov
test
adc
aad
out
jo
repz
insb
sahf
test
movsl
and
dec
icebp
cli
pusha
and
inc
mov
cwtl
mov
bound
lods
mov
or
ud1
jns
je
push
mov
lock
lea
jb
shrb
and
cmp
leave
test
and
push
lcall
xor
mov
sarb
into
cmp
add
mov
pop
xor
jbe,pn
enter
or
loopne
test
test
pop
or
lods
mov
sub
xor
or
and
lea
lock
jg
jp
stc
dec
mov
cmp
andb
out
stos
dec
pop
mov
subl
daa
pop
jp
push
stc
cmp
add
imul
loopne
sub
out
pusha
xchg
mov
push
dec
mov
insb
mov
sahf
and
add
jbe
ror
inc
fwait
jno
sahf
cs
bound
testl
pop
movsb
fisubl
push
fwait
mov
in
sbb
ficompl
lods
movsl
sub
movl
inc
mov
lret
aaa
mov
dec
in
push
std
dec
mov
in
sub
in
or
and
inc
xor
adc
sub
lret
push
or
or
test
dec
insl
repz
fdiv
sub
mov
add
cwtl
das
outsb
mov
add
lret
inc
imul
pop
out
test
mov
aas
lock
dec
add
test
push
jg
push
out
rcll
test
sub
pop
mov
xor
jmpw
addr16
adc
push
mov
outsl
push
sub
pop
and
arpl
mov
inc
mov
sbb
in
inc
dec
mov
sub
movlhps
lds
repnz
sti
test
inc
adcl
dec
lret
mov
mov
add
mov
dec
ficoml
jmp
fistl
mov
cmc
xor
jmp
push
imul
in
int
stos
jnp
xchg
mov
fildll
rorb
mov
pushf
mov
jmp
stos
push
test
popf
popf
mov
fdivs
or
hlt
mov
lea
pop
rcrl
aaa
inc
out
push
clc
lds
xchg
mov
out
inc
insl
inc
stos
stos
ret
insb
in
push
imul
and
hlt
mov
xchg
xor
loop
call
xor
sbb
shlb
jbe
notb
and
pop
jp
test
xchg
cmp
lahf
les
cmp
arpl
dec
push
adc
repnz
inc
pop
popa
lcall
out
pop
mov
or
cmp
add
inc
sub
test
stos
mov
stc
ds
mov
inc
subl
inc
xlat
mov
test
fs
in
sbb
ds
pop
mov
jg
out
mov
test
cmp
inc
lods
popa
pop
mov
scas
fstpl
pop
rorl
mov
sarb
notb
sub
and
call
loop
mov
outsb
jno
jge
pop
dec
or
cs
and
idivl
repnz
dec
add
imul
repnz
xchg
cli
jg
pop
repnz
dec
loope
mov
stos
xor
xchg
cmp
cli
aam
xor
or
ja
icebp
xor
sub
dec
pop
sub
adc
fstpl
loopne
repnz
xchg
mov
popf
cmpsl
or
js
add
je
mov
and
lcall
xchg
cltd
enter
insb
cmc
test
adc
or
popa
pushf
mov
add
cmp
mov
cmp
or
jae
mov
inc
cmp
mov
dec
xchg
inc
pop
pop
pop
fs
inc
lret
mov
sbb
mov
cmp
mov
lods
clc
test
inc
ret
dec
inc
stc
mov
nop
imul
and
rolb
xor
shll
imul
inc
jns
ja
or
outsl
pop
xor
mov
mov
fbstp
jo
repz
or
call
loope
xchg
add
int
in
popf
rcl
into
mov
inc
and
mov
jecxz
fdivp
dec
outsl
jg
push
xchg
dec
jmp
and
jbe
adcb
xchg
lea
cmpsl
pop
cwtl
adc
popa
pushl
mov
cmc
sbb
incb
jnp
lcall
pop
push
pop
jno
add
sahf
sub
sbb
add
add
pop
rorb
mov
divb
rorl
push
adc
std
cmp
mov
inc
xlat
bnd
pop
mov
lret
lods
pop
aas
pop
add
dec
xchg
mov
mov
int3
sub
cld
shll
sti
cmp
out
int3
movsb
or
xchg
mov
leave
scas
fnstsw
mov
xor
lahf
stos
mov
jmp
or
out
sub
jnp
addr16
cmpsb
shll
and
les
jnp
mov
ret
aad
scas
xchg
mov
pop
inc
mov
loope
test
adc
push
sbb
adc
or
xchg
lods
or
cmp
stos
jnp
xor
cmpsb
cmpsl
sbb
nop
test
clc
mov
sbb
je
inc
inc
fwait
pop
mov
adc
mov
ret
add
push
out
aad
adc
popa
push
inc
int3
scas
addr16
psubusb
adc
cmp
stc
cmpsl
jb
stc
cmpsl
push
mov
push
or
arpl
sbb
pop
sbb
lock
fs
and
inc
ja
mov
fildl
sub
add
nop
mov
inc
ret
dec
cmp
xchg
addl
xor
mov
add
adc
aam
mov
sahf
and
loopne
les
mov
add
push
or
imul
std
adc
push
pop
inc
fmul
jg
jae
frstor
leave
sub
mov
xchg
push
mov
stc
cwtl
std
dec
scas
test
push
ret
xchg
jo
inc
or
jg
rclb
push
push
insb
sarb
sbb
xor
dec
inc
clc
cmpl
or
sub
pop
aam
in
movsb
xchg
dec
js
push
dec
cwtl
cmp
out
mov
xlat
jmp
popf
sub
xchg
aas
inc
push
pop
jle
nop
ja
push
cli
push
and
push
fnstsw
cltd
or
out
pop
movsl
jmp
push
xorb
lods
fiadds
popf
ret
cmp
inc
jecxz
inc
xlat
cmp
bound
pop
jl
inc
mov
xchg
xor
or
jnp
push
mov
cmp
ret
lods
popf
xor
loop
adc
mov
lock
add
inc
sbb
xchg
in
add
and
into
test
lret
imul
test
xchg
jo
lret
pop
fists
lcall
ja
cltd
call
jnp
jl
pop
mov
das
mov
and
arpl
mov
rcl
fistpll
dec
sub
cwtl
jl
popf
mov
movsl
test
mov
mov
lahf
mov
rolb
mov
dec
or
test
sti
gs
adc
adc
fmull
ret
pop
aas
movsl
push
out
dec
mov
pop
cmp
hlt
ja
mov
push
pop
int3
addr16
cmc
cmp
adc
pop
adc
bound
lret
mov
into
jp,pt
adc
je
dec
jecxz
int3
and
sbb
es
adc
dec
mov
sub
inc
pop
arpl
jae
dec
mov
jmp
shlb
push
pop
int3
andb
aas
xlat
in
iret
cmp
out
xor
in
push
lods
testb
in
lock
and
dec
or
sbb
in
in
mov
mov
mov
leave
sub
add
pop
push
dec
dec
mov
inc
in
imul
dec
sbb
mov
mov
mov
in
and
ret
sub
test
sbb
xor
push
cmp
push
pop
scas
lret
jl
sbbl
inc
cmp
mov
cwtl
mov
adc
cmp
mov
in
mov
add
inc
jg
std
popf
mov
adc
cli
sub
mov
mov
mov
pop
pop
cld
or
nop
mov
movsl
inc
cmp
cltd
sbb
xchg
fs
adc
mov
mov
mov
mov
sub
fwait
lahf
mov
leave
mov
pop
inc
call
notb
and
mov
frstor
add
xor
and
cmc
ds
aam
enter
xchg
stos
lcall
jnp
push
mov
inc
inc
fistps
shrb
xchg
sbb
push
mov
adc
push
xchg
dec
lods
cmp
fbld
hlt
outsb
cmp
adc
fucom
cmc
test
int3
in
xor
stos
mov
push
pop
jo
out
xchg
sti
mov
mov
mov
ret
inc
jb
dec
inc
test
fstps
into
fsubp
push
enter
adc
daa
sbb
loope
in
stc
and
clc
xor
jecxz
add
pushf
pusha
je
push
adc
stos
sbbb
lret
xor
xor
das
push
call
cmp
mov
in
add
and
enter
add
cmpsl
std
xor
les
inc
xchg
inc
aaa
icebp
inc
mov
add
mov
pop
sub
mov
inc
dec
mov
clc
movsb
cli
rcll
sahf
mov
mov
rcl
stc
sbb
or
cmpsb
in
aad
cmp
mov
fcmove
mov
push
into
mov
fcoms
mov
loopne
push
stos
dec
enter
sub
ljmp
pop
lcall
inc
aaa
and
pop
add
ja
imul
aam
mov
mov
lahf
add
imul
nop
or
jmp
push
cmp
and
inc
daa
mov
jnp
out
cld
and
inc
mov
cmp
xchg
xchg
jne
clc
or
leave
js
stc
pop
add
cmp
push
loop
adc
aad
rcr
mov
jecxz
aas
out
push
je
stc
sti
pop
cld
in
jecxz
shll
jge
aad
mov
push
repz
pop
mov
in
in
cmp
push
mov
xor
idivb
fsubrs
mov
sti
pop
pop
dec
enter
and
cmc
mov
pop
leave
sar
xor
xchg
and
or
sub
xchg
sbb
push
lret
lock
add
ja
cmpb
cmp
xor
pop
leave
xchg
insl
dec
fwait
sbb
subb
in
adc
lret
lret
lds
and
pop
repnz
mov
dec
adc
and
outsl
pop
jl
enter
stc
aaa
sbb
test
inc
loope
cmp
jne
lods
lret
addl
imul
int
sahf
stc
and
push
ss
dec
movsl
xchg
popf
loope
les
fidivl
mov
jl
daa
gs
add
lcall
shl
xchg
aad
test
adc
or
jbe
mov
fistpll
loopne
dec
cwtl
and
push
mov
fmull
pushf
dec
cmp
mov
mov
dec
dec
add
and
in
inc
cmp
xchg
pop
jle
cmp
fcomps
inc
fwait
adc
mov
add
inc
stos
dec
popf
cwtl
shll
xlat
divl
div
stos
or
push
and
mov
push
mov
rclb
add
and
jne
sbb
scas
cmp
and
mov
dec
jl
pop
inc
out
cmp
fld
movsl
push
push
inc
jb
lock
push
scas
inc
xor
popf
jne
mov
add
jmp
movsb
sbb
sbb
mov
inc
out
or
cli
xor
adc
cli
int
adc
orl
cmpl
mov
jecxz
aad
rolb
or
sub
rorl
fwait
mov
sti
mov
xchg
call
lret
orl
inc
popf
mov
sti
in
xor
xchg
and
dec
mov
cmpl
dec
fstpl
or
loope
popa
adc
shr
xchg
scas
les
stc
stos
cmp
sbb
test
test
jmp
insl
insl
jno
aad
out
cmpsb
hlt
dec
movb
outsb
mov
inc
popa
pop
cmp
sub
js
pop
or
inc
mov
xlat
xor
and
mov
jae
sub
pop
lds
jo
mov
or
cs
out
aam
pusha
inc
dec
push
cmp
inc
sbb
xor
stos
movsb
fwait
out
mov
adc
jmp
sub
and
mov
in
push
xchg
lods
fisubl
adcb
push
imull
pop
inc
sbb
sub
pop
sbb
in
pop
and
sahf
pusha
shrl
inc
cmp
inc
lea
cmp
fidivl
dec
cmpsl
ja
xchg
fstps
pop
fsubrl
fwait
xor
popf
cmc
loopne
jmp
ds
dec
mov
push
push
fsts
jae
sub
pop
dec
divb
mov
push
js
das
adc
and
xor
clc
cmp
sub
outsl
sti
push
mov
orb
lea
or
frstor
sub
lret
mov
loopnew
and
cs
idiv
std
and
je
or
cld
and
cwtl
xor
scas
and
out
add
dec
xor
jmp
fwait
sbbl
sbb
lahf
loopne
or
sub
add
loopne
lahf
sbb
rclb
add
xor
daa
or
lahf
loop
pop
fcmovnu
fcmovnb
and
addr16
js
fdivr
fnsave
push
mov
stos
push
pop
cmp
mov
out
lret
fisubl
sub
idivb
or
sarb
fisubrl
mov
fmuls
je
or
add
subl
adc
sbb
lds
cmp
and
je
jae
push
fstl
mov
inc
sub
or
fcmovne
jae
addr16
jno
inc
xchg
ss
loope
sar
mov
mov
adc
mov
xchg
xchg
outsl
lods
test
dec
add
insb
sub
mov
fiadds
pop
cli
mov
enter
addr16
mov
nop
mov
sbb
jle
mov
movb
pusha
mov
in
dec
iret
mov
push
mov
adc
xor
xor
dec
xor
mov
cmpsl
ja
mov
in
test
inc
xchg
adc
int3
int
pop
dec
fucom
jg
mov
sbb
push
sbb
cmpb
add
mov
mov
int3
pop
fcompl
popa
ljmp
test
std
roll
xchg
mov
push
adcb
mov
decb
push
dec
mov
add
enter
je
fcmovnb
incb
enter
repz
mov
clc
sti
fldl
incl
mov
add
xlat
dec
cltd
mov
jle
pop
adc
gs
mov
inc
push
add
fmul
insl
jb
mov
lcall
clc
orb
sbbl
sub
or
in
cmpsb
dec
mov
scas
bnd
push
dec
mov
jg
sub
repz
mov
shll
inc
dec
cld
in
shrl
push
iret
jns
addr16
push
aam
sub
stos
sahf
add
push
out
cmp
cmp
lret
xlat
dec
addr16
dec
jle
inc
movsb
addl
jns
pop
add
inc
dec
aam
xchg
rcll
adc
fisttpll
lods
ret
out
push
or
out
mov
cwtl
push
mov
iret
fs
out
jecxz
stc
sarl
stos
sbb
mov
icebp
sub
shl
pop
je
stos
pop
fnstenv
pop
adc
iret
mov
ficoms
fldt
inc
jmp
or
in
test
dec
xor
xchg
inc
test
insb
mov
inc
ret
push
les
inc
push
pop
into
lret
inc
bound
ds
or
enter
push
lret
ss
ucomiss
jp
jbe
and
inc
js
std
popf
sbb
or
mov
dec
fcmovbe
mov
adc
sub
sbb
lret
and
or
adc
ja
mov
test
cmp
int
test
dec
clc
call
ret
jge
or
cmpsl
roll
fs
lock
out
movsb
adc
iret
lcall
ja
jecxz
leave
pop
or
or
push
or
add
add
scas
lds
xor
add
xor
mov
lods
mov
dec
out
jp
mov
leave
push
mov
jnp
push
sub
and
scas
orb
pop
repz
sbb
push
sub
inc
lock
out
push
push
jnp
fildll
sbb
jecxz
inc
dec
lods
mov
sub
pop
mov
and
jge
adc
dec
xchg
add
dec
mov
outsb
pop
das
mov
mov
lahf
iret
add
adc
mov
lahf
adc
rclb
push
rcrl
ja
daa
dec
ret
es
mov
mov
addl
jns
xchg
dec
addl
xchg
gs
imul
inc
jae
mov
push
mov
add
fxtract
out
sub
adc
and
jle
cld
data16
rclb
mov
arpl
in
cmp
dec
stos
xor
lret
daa
mov
xchg
sbb
add
nop
stos
dec
mov
push
test
jno
push
dec
mov
jb
int
dec
lret
rcll
mov
ficoms
les
mov
fnsave
pop
and
sub
fimuls
aas
inc
jne
rcrl
sbb
cmpsl
outsb
icebp
jo
jno
outsl
jnp
imul
jne
imul
lahf
loope
dec
inc
in
ret
out
cmpl
and
lds
scas
imul
adc
or
arpl
aam
add
and
les
mov
sub
and
push
sti
shrb
ret
mov
lods
dec
push
scas
adc
test
dec
xchg
mov
ja
fwait
inc
push
and
fisttpll
mov
stos
arpl
pop
jmp
in
rcrl
mov
in
mov
dec
or
stc
jl
rcll
lea
mov
ret
xchg
dec
mov
mov
xchg
out
in
ss
xchg
mov
dec
push
inc
add
loope
adc
test
gs
jmp
imul
mov
repz
sbbl
mov
cmp
lods
cmp
dec
hlt
mov
add
jecxz
leave
push
in
scas
lret
mov
adc
pop
adc
in
out
inc
sbb
push
push
and
pop
test
ret
fwait
call
jo
sbb
popf
dec
mov
flds
insl
repz
shlb
sub
mov
inc
jo
jge
sbb
into
in
adc
ret
pop
pop
xor
jmp
cmp
in
or
jo
insl
adc
sbb
in
ja
lahf
addr16
les
push
sub
nop
sub
sbb
pusha
ds
and
ficoms
iret
add
mov
and
movsl
mov
lds
cli
push
jnp
pusha
jne
and
loop
and
std
mov
jae
mov
pushf
icebp
fildl
arpl
dec
dec
sub
or
enter
xor
sub
lret
push
or
mov
jg
or
clc
pop
frstpm(287
jl
mov
sbb
les
fwait
jno
adc
test
mov
ljmp
cmpsl
mov
icebp
sub
cltd
roll
add
sub
es
cmp
sarl
les
cmp
cld
outsl
mov
stos
movsb
rclb
mov
lcall
imul
icebp
xor
inc
ret
dec
in
xchg
jp
daa
insb
push
popa
out
cmp
xchg
ja
pop
test
sub
cmc
mov
mov
dec
mov
inc
shlb
scas
jmp
pop
sub
push
dec
mov
push
xchg
or
scas
xchg
pop
dec
sbb
rcll
xor
mov
and
mov
cmp
shll
out
push
add
xor
insb
sti
in
pop
cld
mov
daa
jno
mov
sahf
outsb
inc
pop
mov
cli
sub
xchg
test
mov
pusha
mov
or
cmc
mov
push
or
cltd
fists
xchg
lahf
lods
mov
add
popa
mov
test
mov
fwait
rcrl
mov
test
popa
aaa
jmp
je
fstpt
push
mov
fsubr
lahf
xchg
jecxz
fldl
into
push
push
dec
cmp
pop
sub
dec
addr16
js
inc
mov
sar
es
iret
mov
jns
mov
insb
push
rcr
pop
insb
call
adc
lds
mov
sbb
or
fisttpl
adc
and
imul
lcall
and
popf
add
xchg
sbb
mov
push
test
lahf
lock
lcall
jbe
shlb
sub
push
push
mov
push
into
pop
pop
push
push
dec
in
jb
filds
jge
cmp
arpl
lret
dec
movsb
divb
lea
inc
jns
pushl
popf
lahf
sarl
in
movsb
mov
inc
mov
xchg
das
cmpl
sbb
cvtpi2ps
mov
xchg
fidivrs
jbe
cmc
xlat
or
sbb
and
out
add
jp
sub
fimuls
sbb
cmpsl
rcr
int3
push
and
sub
addl
jo
push
cmp
mov
and
data16
or
cmpsb
icebp
dec
mov
cmpsb
pop
pop
fwait
jmp
mov
insb
dec
call
mov
out
clc
enter
mov
and
push
loope
or
lret
jle
xor
dec
xor
xchg
mov
jo
movsb
nop
fwait
cld
jmp
je
jo
sbb
dec
or
lods
fdiv
pop
rorl
sti
and
jns
hlt
outsl
testb
sbb
fsubs
or
mov
inc
and
inc
fdivrs
jle
test
movsb
sahf
jns
push
inc
dec
xchg
inc
cwtl
adc
xchg
arpl
cmp
dec
movsb
and
jnp
mov
pushf
ljmp
sub
aam
adc
mov
mov
jae
and
lock
jne
xchg
sub
popf
sbb
pop
jl
ss
stc
dec
mov
jne
mov
pop
rcl
repnz
imulb
sarb
inc
fistl
fcompl
cmpsl
mov
mov
lret
dec
iret
or
mov
out
fistps
pop
test
clc
imulb
sbb
and
mov
pop
fbstp
sub
jno
add
adc
scas
inc
test
cmc
js
ret
out
loope
add
outsb
xchg
mov
call
test
leave
xchg
cmp
fistpl
scas
ret
cmpl
and
and
xor
popa
and
outsb
mov
xchg
mov
je
lret
nop
scas
dec
xor
lcall
int3
inc
mov
stos
xchg
mov
fiaddl
xor
test
mov
jns
in
xchg
pop
test
icebp
mov
stc
jmp
inc
jne
in
lds
insb
stc
orb
adc
fisttps
mov
push
repz
in
add
push
jl
push
add
ss
cmovbe
mov
adc
nop
mov
call
cmp
outsl
inc
add
imul
sub
ret
outsb
movsl
shlb
xchg
push
jl
gs
cmp
scas
rorl
jae
scas
push
dec
pusha
add
into
sub
mov
in
or
dec
cli
mov
das
jnp
dec
aaa
inc
pop
and
fstpl
repz
shrl
and
movsl
cmp
pop
out
iret
or
scas
xor
lcall
outsl
sub
or
addb
fwait
xor
mov
je
push
ljmp
mov
add
add
repz
mov
mov
sbb
xchg
sahf
mov
sti
cmp
nop
or
test
sub
xor
rol
xchg
insb
mov
and
xlat
jae
into
push
sub
cwtl
dec
ret
inc
imul
xchg
inc
insb
mov
cmc
dec
mov
add
gs
leave
jo
push
cmp
test
mov
sbb
xchg
mov
fiaddl
roll
movsl
sub
imul
daa
cwtl
add
stc
push
movsl
mov
or
jge
push
jmp
mov
xor
dec
sub
mov
jmp
jecxz
xchg
mov
out
mov
cmp
cmp
ja
popa
jnp
or
or
or
dec
push
cmpsb
test
inc
test
ds
pop
popa
cmp
lret
jno
cmp
testb
pop
pop
pop
rorb
push
mov
jle
mov
jo
loop
xor
xchg
add
and
cmpsb
jno
popa
push
daa
sahf
stc
jno
scas
cmc
ss
xchg
or
out
lcall
push
rclb
dec
adc
subl
add
addr16
adc
mov
imul
push
cwtl
in
push
mov
inc
daa
rcll
mov
push
in
sbb
push
add
loopne
jp
mov
mov
push
lds
scas
dec
sub
sbb
pop
or
ret
pop
leave
mov
in
imul
std
out
nop
mov
pop
pop
popf
and
ret
mov
scas
sbb
es
add
add
loope
mov
push
ss
sub
insb
cmp
pop
push
sub
sub
jecxz
call
test
lret
fs
pop
shlb
mov
int
div
inc
sbbl
mov
stc
out
fisubl
and
daa
test
mov
or
cmp
inc
inc
mov
mov
out
ret
jnp
inc
aas
mov
sbb
inc
mov
cmp
nop
mov
and
mov
js
mov
lods
xor
cli
out
dec
adc
xchg
clc
mov
mov
into
lea
les
cli
bound
fwait
jb
mov
xor
dec
push
arpl
out
jmp
in
mulb
add
repz
and
adc
int3
es
pop
outsb
out
sbb
xchg
dec
add
les
mov
sub
xor
sahf
jne
pand
pop
inc
jns
pop
or
hlt
inc
xlat
test
mov
shl
jae
jp
pop
cmc
lcall
or
xchg
jle
xchg
xor
push
push
test
daa
lea
mov
and
mov
sbb
out
pushl
xor
jle
cmp
xor
in
mov
pusha
adc
pop
mov
jnp
mov
xchg
and
aas
sti
or
aad
or
mov
shl
push
cmp
mov
or
ret
imul
push
inc
popf
faddp
pusha
cli
jg
mov
cmp
dec
push
loopne
push
loop
je
mov
test
fwait
cli
adc
xor
and
fs
sbb
pop
out
dec
incl
pop
ss
mov
xchg
adc
faddl
pop
mov
sbb
rcll
sbbb
fs
in
xchg
ds
sbb
rol
pop
int3
cmp
mov
mov
and
lods
nop
jg
xlat
nop
mov
mov
sub
sub
adc
fdivrl
mov
sub
aam
sti
repz
mov
pop
dec
cwtl
push
sub
push
lea
and
and
cmp
lock
lret
adc
icebp
sbb
pushl
ret
aaa
ficoml
adc
jbe
cmp
jne
popa
loope
fistl
pop
or
idivb
lahf
and
xor
lahf
push
sub
jbe
bound
pop
sahf
adc
mov
scas
sub
adc
cmp
dec
shl
push
frstor
js
mov
shl
push
mov
test
cwtl
inc
xor
in
jae
add
sbb
test
int3
in
mov
or
cmp
mov
or
cmp
mov
pop
pop
fs
test
sub
lcall
ret
sub
out
xchg
int3
in
movsb
jno
ljmp
dec
cmpb
icebp
out
mov
stc
test
test
and
dec
adc
push
imul
rclb
popf
jmp
mov
cli
add
sahf
and
jle
sub
in
call
out
push
sahf
dec
jns
push
jnp
inc
push
stos
imul
aad
adc
xor
mov
sub
xchg
outsl
sbb
cs
popf
jge
std
push
sub
mov
jp
movb
fimull
or
cmpsl
inc
pushf
mov
adc
mov
jno
fistpl
dec
xchg
jno
test
gs
ss
push
enter
popf
adc
das
dec
sbb
add
jl
xchg
lock
inc
aad
pop
mov
sti
inc
jl
or
jl
pop
movsb
cmp
stc
xchg
lock
push
shrb
in
inc
pop
movsb
pop
aam
mov
mov
pop
pop
sub
mov
and
call
jb,pt
inc
cmp
and
and
jge
adc
push
int3
rolb
cmp
loop
ret
jnp
pop
push
je
movsb
in
call
ljmp
xchg
sub
or
sub
xchg
jo
dec
dec
pop
lds
adc
and
add
pop
fwait
sbb
fs
jbe
mov
jo
pop
loopne
push
cmp
add
xchg
bound
dec
movl
adc
lods
pop
dec
out
xor
sub
rclb
xchg
cs
test
sbb
jmp
das
jb
and
push
in
call
cld
fcompl
dec
sub
and
insl
dec
nop
cmpsl
das
lock
cwtl
push
lock
test
pop
mov
pop
or
orl
sbb
stos
jbe
mov
mov
adc
jle
or
mov
cmp
cli
mov
mov
add
push
int
cmp
cs
stc
pop
jmp
out
xlat
mov
cli
and
pop
insb
popf
int
int
ja
pushf
xor
out
loope
mov
push
or
scas
test
cld
adc
dec
sub
inc
push
cmpsl
pop
rorb
or
lret
cmp
mov
jl
sti
mov
xchg
lock
push
scas
pop
lahf
fadd
add
jl
dec
mov
xchg
fs
lcall
cmpsl
aaa
xchg
push
rcl
imul
sbb
cmp
mov
call
mov
sbb
jl
mov
sbb
or
ret
jle
push
leave
scas
lret
jbe
pop
shlb
push
cmpsl
ret
testb
cmpl
mov
lock
leave
data16
push
sarb
sbb
int
imul
xchg
jecxz
mov
pop
or
loop
or
fisubs
in
xor
aaa
pop
fwait
lahf
mov
loope
mov
cmpsb
inc
sbb
out
ljmp
mov
inc
fs
cltd
bound
es
test
cmpsb
jbe
in
sub
aam
mov
cld
filds
shll
in
jge
lock
and
dec
stc
adc
sub
ljmp
fdivr
rorb
cmpsl
mov
movsl
aas
pusha
jnp
ret
in
xchg
mov
lcall
fnstenv
add
jns
int3
cmp
sub
xchg
mov
adc
iret
lods
addr16
shl
lods
lods
dec
cwtl
dec
mov
mov
xchg
in
push
inc
dec
ficoms
scas
xor
xor
es
xor
mov
cmc
mov
lock
gs
xor
in
push
pop
adc
fmulp
mov
xchg
jle
fcomip
jle
push
cmp
xchg
mov
mov
iret
push
and
aas
dec
mov
test
shrb
shlb
inc
pop
and
scas
sarl
fisttpll
jnp
xor
mov
mov
sub
jnp
neg
dec
add
ret
fsubrp
mov
jns
out
lcall
xchg
inc
sub
mov
nop
int
mov
mul
push
insb
ljmp
data16
int3
lock
stc
insl
push
pop
pop
pop
and
icebp
in
fcomp
push
aaa
iret
fmull
sbb
mov
dec
mov
adc
in
mov
leave
outsl
add
dec
dec
lds
shrb
jne
mov
pop
fisubl
outsl
mov
ja
in
int3
scas
movq
dec
in
mov
int3
adc
fadd
dec
add
adc
nop
jecxz
xchg
push
addb
lock
or
nop
addr16
pop
out
bound
dec
jp
test
std
test
push
in
stc
and
mov
pusha
sbb
cwtl
mov
les
cmpsl
rcrb
or
outsb
fildll
and
sti
in
mov
dec
nop
in
push
in
pusha
rolb
mov
mov
je
daa
inc
test
mov
cmp
jbe
xor
insb
andb
adc
fbstp
inc
jp
daa
test
rclb
cmp
inc
sbb
jno
ss
xlat
xor
jnp
or
hlt
sub
push
cli
and
lret
push
or
inc
lods
repz
sti
pop
adc
popa
jns
outsl
xlat
cwtl
pop
jbe
out
add
dec
jnp
push
xor
and
nop
jmp
in
xlat
js
adc
call
fistpll
ret
sbb
fcmovne
pop
xchg
or
mov
bound
and
aad
mov
les
xor
xlat
xchg
fisttps
push
lcall
fdivl
data16
adc
sbb
ja
or
dec
clc
rcrb
and
cmp
cmc
dec
jmp
std
add
jle
insb
gs
inc
mov
pusha
push
and
push
ret
and
jle
add
inc
push
add
fsubrs
stos
xchg
xor
enter
cmpsl
repnz
dec
mov
subl
pop
mov
mov
pop
xchg
or
mov
mov
xchg
sahf
mov
adc
lahf
cmpsl
js
sub
bound
and
sub
pop
fists
xorl
sbb
and
lret
push
mov
sbb
cmpsl
sbb
pop
call
repnz
push
flds
xchg
repnz
lcall
inc
inc
xlat
mov
sub
push
sti
pop
sub
loope
ja
jns
inc
sbb
cmpb
add
test
dec
add
repz
mov
xchg
or
fcmove
adc
in
std
loopne
sub
and
add
repnz
test
pop
pop
mov
mov
in
or
cltd
adc
inc
cld
xor
inc
cmpb
or
inc
xchg
fldcw
leave
and
jne
jle
mov
add
pop
mov
mov
pop
or
and
in
mull
fs
repnz
cmc
push
pop
and
sub
mov
push
sub
dec
cwtl
cmpsl
mov
sub
ss
fstpl
inc
or
clc
jg
and
je
pusha
incl
enter
or
mov
dec
ds
bound
pusha
sbb
cwtl
out
or
mov
pop
pop
ds
cmp
negl
xlat
adc
ljmp
daa
jg
mov
outsb
sub
test
fcoml
xor
mov
enter
enter
or
jp
jae
sub
push
adc
fdiv
xor
std
jbe
inc
xor
push
jge
aad
cltd
mov
out
push
clc
in
mov
in
popa
out
dec
mov
dec
sbb
jns
jns
xor
lods
jb
adc
popa
pop
jo,pt
jne
mov
bound
stos
rcrl
repz
aad
xchg
mov
push
push
test
es
sub
cmp
add
mov
aaa
scas
rol
cmp
mov
jnp
fwait
adc
mov
push
dec
sub
push
out
sub
aam
int3
adc
xchg
pop
out
xchg
add
pop
mov
xchg
je
pusha
fsubs
or
jbe
popf
ret
loop
rclb
pop
and
push
push
jne
inc
stos
mov
xlat
xchg
pushf
xor
int3
fisttpll
outsb
mov
das
sbb
dec
sbb
into
pop
cmp
dec
jno
ss
jmp
mov
and
hlt
inc
push
lods
outsb
mov
add
add
int
cmpl
add
xchg
ficoms
lods
insb
mov
hlt
inc
faddl
mov
and
sbb
pushf
fnstenv
out
and
mov
dec
lahf
sarb
test
int
mov
pop
pop
dec
ret
adc
pop
lret
dec
aam
xlat
dec
xchg
dec
pop
jae
shll
loop
add
sbb
sub
fdivr
lods
sbb
and
outsl
test
sub
stc
mov
and
dec
mov
inc
push
movsb
cs
shrl
pop
mov
aad
dec
idiv
add
fiaddl
mov
cltd
daa
push
or
ret
icebp
jge
call
cmp
adc
rcll
jge
jp
fimull
adcb
mov
or
fdivrs
lcall
xchg
adc
ja
cmp
lods
test
cmp
mov
mov
xchg
enter
sti
inc
push
mov
rorb
sub
jnp
gs
addr16
or
jo
jbe
pop
pop
inc
testb
xor
mov
pop
inc
fstl
aaa
xor
stc
insl
cmp
push
sbb
mov
mov
inc
aas
and
iret
or
sbb
in
jle
jne
sbb
lahf
and
es
dec
lcall
mov
orb
test
sub
add
adcl
addb
fiaddl
sub
inc
aad
dec
xchg
inc
out
int3
adc
dec
dec
in
popl
dec
sbb
jmp
icebp
inc
popa
dec
and
setnp
rol
push
pop
andb
pop
bound
push
aas
repz
xchg
fldz
or
pushf
fwait
push
jnp
push
icebp
push
outsb
adc
dec
push
nop
mov
ds
mov
pusha
inc
xchg
lods
jge
add
test
sbb
lods
xchg
in
mov
jl
and
adc
fxam
mov
mov
das
fcompl
jge
imul
and
sub
mov
mov
push
jo
jne
cmpsl
das
push
imul
je
cmc
push
hlt
mov
mov
mov
and
or
imul
scas
add
call
xor
movsl
add
loope
les
pop
incl
xchg
push
stc
cld
scas
test
dec
pop
loope
insb
out
fwait
inc
mov
shufps
cmp
subb
jno
sbb
add
pop
mov
mov
das
jbe
dec
int3
mov
test
lret
pop
mov
jle
fstpt
repz
arpl
xorl
sub
push
aad
inc
mov
cmp
xor
fisubrl
or
mov
xchg
lahf
ss
out
dec
in
ljmp
in
daa
sbb
lahf
xchg
mov
in
movsl
arpl
pop
pop
loop
and
push
lret
mov
mov
add
fwait
sbb
add
add
xchg
adc
pusha
aas
push
xchg
sbb
call
bound
pop
enter
sub
mov
lds
cmp
mov
cmpsl
mov
inc
jmp
mov
add
aam
jae
and
ds
or
shll
jecxz
decl
xorl
bound
fcomps
dec
add
inc
add
enter
xor
icebp
lds
loop
lods
or
xchg
jbe
cld
imul
mov
pop
or
dec
movsl
dec
int
xor
lods
addb
call
sub
and
mov
lcall
pop
jnp
shlb
mov
mov
sub
mov
cltd
add
stc
jg
js
dec
xchg
jmp
jbe
movb
inc
or
ds
mov
mov
movsl
or
stc
les
das
xor
xlat
push
lcall
and
mov
stos
dec
mov
in
mov
out
push
sub
or
push
fcmovnb
xor
sub
mov
dec
or
pop
mov
xchg
test
mov
ljmp
shll
dec
lret
ljmp
fs
pop
in
xor
and
sub
xor
pusha
out
jge
mov
push
pop
add
clc
mov
sbb
fstps
lds
ss
fisubrs
bound
adc
mov
add
lret
sbb
fldl
jnp
lock
pop
cmp
inc
ja
notl
pop
daa
or
pop
mov
cltd
jns
popa
sahf
test
fnsave
mov
movsb
ret
arpl
in
add
arpl
ljmp
leave
out
les
shll
pop
pop
pop
in
mov
pop
rolb
push
lret
mov
push
xor
iret
jae
sub
mov
pop
mov
sub
pop
scas
in
roll
adc
idivl
out
loop
data16
int3
cli
pop
enter
jno
add
cmp
push
adc
add
loope
out
xor
ficomps
jg
adc
out
adc
jg
flds
stc
xor
jne
xor
push
scas
pusha
sub
sbb
mov
ds
push
xor
test
out
xlat
adc
sbb
jns
es
mov
rcrl
cs
mov
scas
adc
push
pop
sbb
leave
xor
sti
cltd
popa
pop
push
dec
add
cmp
fstpl
inc
arpl
push
cmp
dec
addr16
pop
and
icebp
jnp
adc
dec
jmp
aad
repz
sti
or
mov
cmp
jge
or
pop
mov
adc
gs
roll
xor
and
psubsw
in
xor
addr16
xor
jne
or
test
aam
loope
xcrypt-cbc
cmpsl
xchg
jl
lock
sbb
cmp
icebp
test
xor
aad
scas
cmp
mov
gs
jo
loope
lock
xor
sbb
jecxz
or
cmp
addr16
adcl
fistl
repnz
in
add
repnz
jp
ljmp
stos
ret
fwait
push
call
mov
pop
inc
mov
xchg
push
sbb
stc
add
cmp
or
out
mov
dec
fstpt
cmp
data16
push
icebp
dec
in
bound
addr16
jbe
hlt
and
cmp
cmp
rorb
iret
movsb
xchg
push
pmaxub
stos
call
add
int
mov
mov
subl
sbb
sarl
pop
pop
es
jmp
dec
cmp
mov
mov
cmp
loop
test
insl
add
jae
xchg
jle
or
aas
mov
pop
add
cmp
jne
push
stos
fists
cmp
xchg
inc
lods
int
fsubs
mov
aad
fiaddl
inc
iret
test
out
jne
push
adc
cwtl
loopne
jecxz,pt
jae
int3
jg
std
push
cmp
shrb
adc
xchg
in
sarl
add
pop
gs
dec
movsb
pop
push
ss
jae
cmp
adc
popa
mov
outsb
rolb
shlb
add
cwtl
inc
mov
lret
addb
movsb
xor
rol
not
sbb
mov
mov
sub
push
or
gs
or
scas
sbb
xchg
dec
pop
inc
mov
stc
sub
lods
mov
aas
add
sub
push
mov
int3
add
scas
jp
fdiv
stos
xchg
arpl
ds
popa
fldl
sbb
leave
movsb
mov
fisubrs
mov
mov
mov
mov
pop
adc
adc
es
imul
arpl
in
movsl
mov
les
jge
cmpsl
mov
daa
adc
and
adc
sbb
fsubs
cmpl
stos
pop
ret
jge
dec
shrl
les
lods
push
jne
mov
xor
xlat
inc
xchg
lea
cmovns
test
mov
std
iret
mov
inc
cmp
sub
jl
push
nop
push
sub
push
aam
sub
jnp
push
lods
stos
dec
adc
js
push
push
or
ss
add
mov
inc
pop
or
movsb
push
test
xchg
push
test
xlat
pusha
out
push
inc
mov
ret
pop
sbb
arpl
or
jae
out
int
jne
das
mov
sbb
lds
bound
and
movsb
and
dec
inc
adc
cmpsb
insb
lods
inc
sub
and
in
out
sub
jne
lahf
cmp
fdiv
pusha
fdivrs
jae
in
ljmp
cmpsb
push
push
xchg
xor
jb
lea
sbb
sbb
and
jl
dec
std
in
push
and
fs
add
cltd
xor
ljmp
bound
add
adc
or
lret
jg
sub
jo
out
pop
cmp
xorb
mov
xchg
inc
ret
aaa
fmull
adc
repnz
lods
add
xchg
mov
push
jno
xchg
imul
loope
push
or
mov
dec
push
sub
inc
in
lods
pushf
push
insl
cmp
orl
cmp
les
add
stos
in
cmp
xchg
cltd
nop
cltd
push
inc
inc
xchg
jns
add
lcall
jae
xchg
fadds
mov
cwtl
xor
ret
fistl
ljmp
and
cmp
xor
sub
sbb
test
jmp
sbb
inc
fs
jle
mov
subl
cmp
sub
nop
xchg
push
repnz
out
test
mov
fsubp
in
push
es
pusha
push
in
inc
into
mov
leave
popf
lret
ss
popa
cmpb
hlt
sub
and
push
cmp
push
add
add
lods
dec
sub
clc
push
or
fistps
cmp
xor
push
xchg
add
loope
xor
sub
out
mov
testb
push
cmpl
rcll
jmp
xor
loope
push
cmp
adc
mov
out
adc
fisubrl
into
cmp
add
xchg
stc
stos
ffreep
push
jl
lds
xor
daa
lcall
xchg
testl
test
movmskps
call
xchg
xor
pop
aam
addr16
mov
inc
test
push
push
and
push
test
aad
xchg
inc
rcrl
pop
jg
in
in
cmpsl
fdivp
cmc
and
dec
in
jb
mov
iret
psubusb
mov
xchg
in
repz
add
repnz
dec
loop
scas
mov
lcall
jb
ljmp
mov
sahf
std
jle
adc
mov
xchg
mov
cmp
cld
or
int
jns
mov
std
lahf
test
jmp
test
pop
xor
sbb
hlt
mov
out
inc
jno
or
stos
imul
arpl
imull
int3
lock
insb
sbb
xor
xor
xchg
incb
or
shll
mov
jmp
stc
lahf
sub
iret
leave
push
cmpb
test
bound
mov
ret
push
cmp
and
and
in
dec
cmpl
inc
bound
gs
push
sarl
xchg
dec
adc
fs
std
addr16
fldcw
inc
inc
adc
mov
cltd
push
ss
fstpt
fcomps
mov
aad
cwtl
xor
cmp
loop,pt
mov
test
jp
roll
test
dec
cmpsl
mov
mov
xor
xchg
shl
fcomi
icebp
jno
inc
add
ret
pop
pop
sbb
loopne
adc
rcr
es
insb
or
test
jo
imul
push
outsb
sahf
pusha
fwait
xchg
inc
test
xor
test
dec
test
movsb
mov
stos
insb
in
fdivrl
clc
lret
mov
jae
data16
push
mov
and
outsl
push
notb
mov
cld
sub
cmpsl
pop
inc
jp
mov
or
sbb
jne
push
push
mov
imul
std
loope
and
cld
sub
pop
xchg
dec
jb
les
and
xor
pop
push
and
xor
test
or
ja
inc
pop
iret
sbb
fmull
adc
add
add
jg
dec
loop
rorb
push
cmc
orb
ds
fidivs
lcall
dec
xchg
or
push
push
dec
imul
pop
or
scas
inc
jge
call
mov
jne
ljmp
xor
scas
decl
imul
mov
inc
xlat
mov
insl
sbb
test
into
jae
sub
dec
pop
gs
sub
std
mov
ds
cmpsl
sub
aam
or
jmp
pop
jo
jo
inc
or
iret
aas
xlat
outsl
int3
inc
and
test
adc
pop
ss
mov
movsb
dec
jg
in
out
imul
mov
orl
xor
push
les
push
push
adc
cmp
add
stos
sub
push
sub
push
mov
sahf
loop
pop
orb
mov
and
xor
adc
aaa
addr16
mov
cwtl
sub
push
iret
ss
test
dec
or
fcmove
or
fistl
pop
lods
adc
pop
lahf
lret
lcall
popa
push
jne
sti
push
sub
jp
int
les
mov
mov
mov
repz
stos
add
pop
out
stos
pop
xchg
pop
cmp
arpl
sub
adc
inc
pop
jns
outsb
clc
dec
fsubl
and
adc
add
rolb
pop
xchg
test
mov
insl
lret
ljmp
push
xor
addl
mov
xor
shll
mov
jle
xor
gs
es
adc
jb
stos
div
iret
in
adc
test
stos
add
pop
stos
in
and
pop
cmp
or
in
roll
mov
mov
stc
arpl
or
push
jo
iret
cli
loop
lods
push
pop
negl
enter
mov
outsl
setb
pop
repz
xor
jns
bound
or
push
jmp
jbe
nop
sbb
jbe
xor
idiv
xchg
pushf
loope
imul
xor
stos
mov
jno
and
cmpsl
sub
outsb
jnp
sahf
ret
cmp
loope
jns
iret
outsb
ret
repz
fidivs
mov
mov
das
jae
cmp
xor
add
andb
fcmovnbe
ljmp
imul
shrl
insb
cmp
mov
inc
jbe
ret
pop
ds
into
dec
xchg
dec
aam
cmpsl
test
sbb
pop
inc
xchg
cltd
adc
lahf
in
int
adc
jmp
in
mov
mov
push
in
loope
xchg
mov
or
push
fildl
or
and
test
push
or
push
pop
jp
ss
loope
cmp
leave
pop
test
and
shll
xchg
add
iret
std
push
xor
idivb
mov
xchg
rolb
icebp
push
inc
push
cld
xor
jae
fsts
add
push
lods
inc
ss
aas
jle
jge
test
adc
stos
scas
cmc
pushf
xchg
cmpsl
ljmp
cmpl
fwait
jae
and
xchg
jl
dec
mov
mov
dec
aaa
mov
lods
ljmp
mov
imul
lret
jns
push
jae
jno
xchg
xchg
xor
in
dec
push
lods
sahf
ficomps
inc
sbb
icebp
mov
mov
ljmp
dec
shl
pop
pop
les
adc
shrl
test
xchg
test
movsb
test
test
lds
fsubrs
imulb
lcall
popf
arpl
inc
jp
xlat
mov
or
push
dec
sbb
out
repnz
cmp
in
in
jbe
in
lret
jmp
imul
inc
pushf
inc
pop
xchg
lods
add
jae
cmp
scas
cmpsl
push
xorl
mov
loopne
aad
cmp
jb
ds
or
gs
dec
jp
cmp
sar
imul
inc
gs
enter
stc
lods
xor
aam
xchg
mov
dec
pop
cmp
jno
xor
lods
ret
cwtl
push
test
shlb
jne
je
inc
lret
pop
nop
and
scas
xchg
push
loopne
dec
aas
xor
mov
dec
pop
fld
push
sbb
sbb
lret
lea
arpl
stos
xchg
shll
pop
cmp
lds
daa
xor
dec
jle
stos
enter
in
or
dec
add
pop
push
movb
pop
rcrl
cwtl
push
lods
mov
cmc
je
xorl
iret
push
imul
pop
jge
pop
outsl
mov
fs
xchg
push
adc
sbb
jo
andb
mov
xor
lods
jae
icebp
out
inc
xchg
pop
fistps
inc
lret
iret
xor
int
pop
insb
and
call
xchg
shlb
loop
push
jb
mov
popf
pop
push
rol
pop
jge
popa
inc
push
daa
data16
push
out
xor
inc
in
mov
and
loop
fs
fidivl
or
add
xor
aam
jne
xchg
mov
jo
loop
inc
in
gs
int3
inc
dec
cmc
jnp
cld
and
dec
push
jge
and
pusha
movsl
cmp
daa
popl
shlb
sub
in
gs
or
push
ds
sbb
sbb
shll
mov
jecxz
loope
pop
outsl
jle
out
dec
mov
dec
mov
adc
add
mov
in
aaa
sbb
movsl
jbe
std
adc
adc
inc
xor
jno
fildll
xchg
hlt
lods
cli
int3
out
jns
ficompl
bound
fldenv
aam
pop
mov
sub
push
aam
clc
sarb
movl
aaa
enter
fmul
jns
rcr
pop
xchg
inc
sub
ljmp
in
js
mov
mov
cmp
gs
xchg
mov
sbb
cmpl
push
jg
mov
sbb
sbb
jg
cmp
je
shr
xlat
xor
xchg
pusha
add
inc
pmaxub
pop
xor
xor
or
or
into
shrb
in
insl
out
incl
iret
xchg
mov
dec
movd
mov
xchg
push
pop
xor
push
xor
push
lcall
fldenv
pushf
mov
pop
loop
jns
xchg
cmpsb
mov
hlt
lds
jne
jecxz
notb
mov
cmp
mov
cmpl
or
sub
adc
xor
movsl
push
testl
jne
pusha
xorb
and
aad
cmc
mov
out
mov
gs
cltd
push
int3
pop
sub
mov
fnstenv
add
xor
mov
cmc
mov
cli
fsubrl
movsl
and
inc
cmpsl
dec
sub
cltd
pop
and
mov
js
cmp
fucomi
inc
push
lahf
outsl
mov
ficomps
movb
pushf
push
or
stos
jl
adc
cmp
std
lods
mov
mov
mov
in
loop
in
xchg
in
aas
xchg
cltd
rorl
mov
dec
push
fcoms
fdivl
inc
and
xchg
add
jmp
dec
mov
ret
jo
dec
std
pop
dec
push
mov
sub
xchg
int
cmp
test
lret
xchg
jbe
ja
push
enter
decl
ja
in
pushf
cmpb
movsb
pop
add
jbe
or
add
add
pop
pop
mov
call
sbb
fwait
cmc
jne
xchg
dec
sahf
xor
mov
jb
test
ror
jne
ljmp
pushf
xor
fisubrl
xor
jecxz
xchg
aaa
push
lcall
rolb
test
sbb
movsl
in
iret
inc
mov
push
sti
gs
push
aam
sub
xchg
mov
dec
fldcw
adc
push
into
insl
xor
and
jae
int
xchg
xchg
cmp
das
and
fs
mov
test
nop
jle
push
push
jp
clc
mov
fs
testl
in
incl
in
push
mov
mov
bound
imul
sbbb
sbb
test
jl
fs
lcall
call
mov
adc
or
push
cmp
sbb
sbb
bound
jl
inc
jne
sub
addr16
imul
jmp
dec
jnp
or
aam
lahf
jmp
test
loope
cmpsl
loope
and
aad
repnz
push
xchg
aas
lcall
je
adc
cs
dec
das
push
ret
dec
enter
sbb
sub
inc
jns
test
mov
lret
int3
xchg
jmp
jg
mov
stos
jge
adc
dec
aad
push
cltd
outsb
pop
mov
cmpsb
xlat
filds
popa
mov
test
pop
pop
jle
cli
add
mov
add
scas
add
jg
mov
push
fs
test
les
pop
insb
add
push
or
push
or
fmuls
clc
int
cmc
loop
xor
mov
jne
mov
push
out
pop
dec
aaa
stos
sub
mov
imulb
adc
lds
mov
in
das
xchg
pop
es
mov
jl
lock
xchg
sub
in
insb
cmpsl
sub
lds
xor
orb
in
idiv
jle
xchg
xor
xchg
mov
shl
xchg
sub
je
arpl
inc
aas
pushf
les
or
and
and
adc
aas
or
and
call
add
push
mov
pushf
sbb
adc
jmp
rcl
shrd
outsl
sahf
out
dec
lock
fiaddl
popf
jp
mov
pop
jmp
xchg
and
lret
mov
in
jg
cli
mov
push
rorl
loop
sbb
arpl
sub
add
mov
hlt
test
insb
adc
pop
insb
sub
addr16
mov
aam
insb
lods
stos
adc
mov
xchg
popf
movsb
lods
jnp
mov
sbb
xchg
cmp
dec
inc
lock
in
out
out
mov
push
clc
sub
push
fiaddl
pop
leave
xor
test
or
add
fbld
push
insl
pushf
mov
lods
xchg
mov
add
jmp
lcall
fnsave
jb
outsb
loopne
mov
in
push
nop
add
jnp
shll
outsb
stc
lahf
mov
stos
pop
jns
mov
addr16
divb
ja
push
mov
mov
inc
cltd
in
inc
fwait
sahf
mov
popf
lds
cmp
shlb
adc
imul
sub
lret
adc
fnsave
and
loopne
mov
xchg
jbe
popa
cmp
clc
and
pop
pop
push
lock
outsb
ficoml
es
out
pop
pop
xchg
inc
jae
jg
xchg
mov
popa
dec
push
add
mov
test
cmp
sub
mov
xor
scas
cltd
inc
imul
or
cmp
scas
mov
xor
mov
faddp
sbbl
gs
pop
sbb
or
mov
sub
ret
gs
lea
sub
adc
adc
mov
push
jle
or
movaps
xorb
jge
loopne
xchg
dec
shrl
pop
mov
xchg
push
push
mov
pop
add
bound
mov
lods
sbb
into
xchg
rep
subl
scas
ret
mov
mov
mov
adc
divb
cmp
cmp
and
xor
mov
xchg
dec
and
loope
fisubrl
push
mov
mov
xchg
mov
insl
arpl
cmp
dec
stc
ss
icebp
test
popa
and
addb
testb
sub
pop
push
hlt
mov
dec
loope
mov
sbb
cmpsl
scas
test
aas
xchg
adc
jle
nop
mov
popa
int
stos
rcrb
testb
mov
dec
jno
into
push
push
mov
jge
shr
popf
mov
int3
dec
sarl
mov
iret
jge
clc
jmp
movsl
push
pop
gs
dec
mov
iret
nop
leave
outsb
pop
stos
out
popl
jge
inc
push
faddp
hlt
sbb
into
mov
ficoms
sub
enter
iret
mov
jecxz
add
or
jae
mov
sub
je
pop
scas
mov
mov
imul
add
jge
cltd
mov
cmp
sub
mov
movl
mov
in
leave
pop
shrb
jmp
js
inc
out
aaa
push
mov
mov
inc
jl
mov
in
add
nop
out
lock
and
or
add
xchg
adc
mov
aaa
loopne
push
out
push
inc
fistps
mov
loopne
jnp
xor
mov
pop
jbe
xchg
int
sbb
movsl
mov
add
xor
mov
cmp
push
fwait
mov
xchg
xor
out
mov
imul
push
push
and
ds
add
aad
imul
outsb
arpl
inc
xor
movsl
or
and
mov
pop
jle
int3
push
and
std
mov
xchg
dec
sbb
idivb
and
jge
sbb
xchg
pusha
cmp
repz
push
stc
repz
repz
mov
mov
divb
push
lods
imul
sbb
nop
or
and
xlat
lock
mov
add
sbb
fs
das
shll
and
mov
sbb
xor
inc
adc
imul
and
fstpl
insb
mov
mov
mov
movsb
push
push
aad
mov
xor
rcrl
hlt
cmpb
sub
mov
lea
add
std
push
out
stc
dec
mov
mov
shl
loope
mov
call
enter
movsl
inc
xor
mov
clc
flds
cmp
jo
pop
addr16
dec
mov
jge
lahf
out
sbb
icebp
clc
aam
lock
outsb
fnstenv
sbb
repnz
push
std
xor
dec
mov
xchg
in
push
ss
jg
sahf
out
lret
out
std
aad
adc
roll
mov
shr
daa
push
inc
or
inc
cmp
sbb
ja
pop
jecxz
xor
sub
pop
pop
jp
lret
jg
int3
lret
or
jge
inc
add
jbe
fnstenv
fwait
push
xchg
cmp
daa
push
fdivl
aad
sub
inc
ds
dec
imulb
ja
fidivs
and
ret
sub
add
dec
and
fcoml
jge
xor
jmp
rorl
mov
aaa
nop
sub
dec
dec
xchg
ret
pop
inc
bound
and
dec
je
fdivr
adc
jae
jl
push
out
ljmp
call
push
iret
mov
dec
int3
or
hlt
lea
push
fisubs
shl
push
cmc
cltd
inc
ljmp
pop
mov
fdivs
cltd
movsl
add
or
inc
jo
lds
lock
test
pop
jbe
mov
xchg
in
mov
inc
pop
jae
dec
js
rorb
mov
leave
xchg
xchg
out
xchg
fmull
test
in
push
ficoml
iret
arpl
jl
or
mov
xchg
push
xchg
push
jo
sub
pop
jp
pop
in
idiv
fcoms
push
and
sbb
jle
lret
test
bound
sub
sbb
or
in
add
mov
cmp
xchg
xor
inc
jecxz
gs
mov
repz
scas
pushf
sarl
hlt
mov
jo
daa
sbb
and
hlt
add
cmp
adc
pop
mov
xchg
xchg
add
test
or
dec
pop
scas
lock
popf
push
inc
cli
and
fisubl
fs
or
pop
cmc
mov
jg
sbb
sub
lret
mov
xchg
js
pop
inc
inc
lock
xchg
sbb
cld
xchg
push
mov
mov
xor
rcr
inc
mov
mov
out
xor
pop
in
inc
add
lahf
push
dec
je
mov
fcomp
sub
daa
and
pop
cltd
mov
pop
inc
xor
mov
or
mov
jmp
inc
sbb
add
les
lea
and
mov
into
das
subl
pop
jmp
or
aam
push
sbb
cmp
xchg
sbb
movsb
lret
int3
pop
mov
cmp
cmpsb
aas
jne
int
das
cmp
mov
fwait
shl
hlt
mov
fcomip
ljmp
adc
xchg
mulb
dec
rcl
mov
insb
or
push
insl
xchg
sub
mov
movsl
cmc
pusha
gs
push
mov
loope
adc
push
push
add
ljmp
xchg
ljmp
inc
pop
pop
in
xorb
mov
cli
hlt
lea
and
fiaddl
nop
repz
inc
ret
mov
xor
cmp
mov
bound
sbb
push
imul
xlat
ret
jo
add
andl
unpcklps
daa
stos
fwait
mov
sub
enter
pop
push
movsb
push
test
xlat
js
or
inc
pop
test
inc
out
jne
add
mov
push
pop
and
je
dec
xor
mov
push
push
jl
andb
push
mov
or
fstps
enter
dec
and
je
dec
sbb
jp
jl
or
sub
sbb
inc
jp
mov
aaa
dec
xorl
repnz
sbb
xor
cmp
in
jnp
icebp
push
inc
movsl
ljmp
roll
int
xchg
into
xchg
xchg
jp
push
gs
add
popf
outsb
mov
nop
jp
movsl
testb
fnstcw
fwait
loopne
inc
sub
mov
xor
repnz
pop
sbb
add
jge
in
das
dec
test
jmp
push
xchg
pop
push
mov
rcrb
xlat
inc
clc
xor
mov
mov
repz
dec
loopne
pop
push
mov
imulb
pop
je
or
cs
fidivl
push
aaa
addr16
xchg
loope
lret
fldt
outsl
mov
inc
das
jp
sahf
outsl
repz
pop
jmp
cmpsl
pop
inc
pop
ja
insl
test
shl
dec
dec
cmp
jl
imul
or
notb
jno
sub
fisttpl
gs
xchg
aas
loope
cmp
clts
movsb
push
loopne
fdiv
xor
add
sbb
and
loop
pop
rcll
xchg
out
push
lcall
roll
jmp
or
pop
pop
jae
and
fisubrl
insl
aaa
rcll
mov
jo
nopl
test
mov
dec
es
inc
cs
jg
mov
xchg
rclb
or
rcl
mov
mov
repz
xchg
or
xchg
lods
pop
mov
cmp
lahf
hlt
pop
mov
adc
mov
inc
cwtl
stos
sti
dec
mov
and
pop
iret
and
inc
pushf
jmp
aam
push
add
xchg
xchg
add
arpl
add
pop
add
and
mov
jle
sbb
dec
mov
pop
jns
cmpsb
xor
add
setge
adc
sarl
and
arpl
clc
icebp
xor
mov
dec
push
sbb
bound
into
cmp
pop
rep
xchg
bound
dec
sti
or
test
mov
push
decb
leave
pop
movsb
and
cmp
or
fcoml
ja
jns
insb
dec
xchg
inc
push
stos
push
lahf
cmp
lea
lret
jecxz
faddl
mov
push
addl
dec
lcall
movsb
push
inc
addr16
shrb
gs
das
out
out
push
stc
addr16
xor
jg
loopne
mov
push
jae
imul
mov
in
xor
inc
loop
jno
lods
out
int3
or
mov
xchg
mov
loop
repz
movsl
call
icebp
mov
test
mov
mov
push
mov
mov
xchg
fistpl
push
sarl
xchg
adc
iret
stos
aaa
dec
iret
jo
fnstenv
adc
sbb
xchg
out
out
push
xlat
enter
bound
cmp
xor
sahf
push
in
inc
sbbb
sti
ljmp
jecxz
nop
dec
push
out
sbb
movsl
stos
stos
enter
xor
leave
mov
rcrl
lea
sub
fcoml
mov
les
out
enter
adc
dec
mov
dec
insb
dec
loopne
lret
mov
pop
jg
test
fdivl
add
loope
icebp
and
sub
xchg
inc
inc
push
cmpsb
insl
popw
push
bound
xchg
ret
arpl
fldt
frstor
dec
cmp
ja
je
movsl
xlat
cmp
mov
sub
push
cmp
in
aad
dec
sub
xor
stos
cs
cltd
mov
aas
shrl
cmp
push
mov
jle
or
lods
sub
push
stc
push
gs
aas
test
xor
dec
sbb
push
lahf
stos
repnz
push
xchg
subb
test
bound
mov
inc
adc
sub
adc
sbb
pop
mov
inc
or
stos
mov
fildl
xchg
jbe
lcall
jecxz
and
fs
mov
lcall
mov
push
aas
aad
int3
dec
in
test
sub
jp
sub
fucomip
test
mov
andb
cltd
popa
xchg
or
xchg
iret
push
lds
adc
inc
iret
mov
rcrb
clc
mov
xor
pusha
or
out
adc
mov
pusha
pop
lret
add
and
int3
add
ret
lods
mov
xor
fwait
push
push
dec
mov
arpl
xor
or
lret
incb
cmp
rcr
icebp
and
xorb
ljmp
mov
sahf
jp
adc
icebp
jo
sbb
sub
lahf
test
repnz
mov
jne
movb
xchg
adc
adcl
dec
in
icebp
cmp
outsb
ja
mov
mov
loop
xor
mov
mov
xlat
sbb
mov
addr16
inc
inc
xchg
jmp
je
les
fwait
mov
jl
jle
mov
mov
test
mov
out
call
das
dec
pop
push
mov
icebp
gs
cmp
fwait
mov
in
popa
xor
jp
ret
cmpsl
sbb
js
loopne
popf
mov
lea
insb
mov
or
pop
dec
xorb
xor
adc
push
insb
out
mov
adc
cmpsb
ljmp
xor
lds
or
xor
les
sub
movsl
subb
mov
add
cmp
and
or
addr16
bound
out
scas
pop
add
mov
cli
jbe
orl
in
jp
mov
out
lds
lea
sbb
scas
or
lcall
mov
js
push
lret
pop
push
stos
adc
xchg
repnz
ds
push
shll
push
js
pop
std
mov
in
add
gs
mov
out
push
push
xchg
cmp
push
adc
cld
xor
int3
fs
js
in
xchg
bound
pushf
cmp
testl
push
fldenv
bound
call
mov
sbb
and
mov
mov
mov
push
push
lods
lods
add
mov
lds
clc
mov
das
out
sbb
mov
scas
sbb
mov
and
fs
stos
ret
insb
cmp
pusha
sbb
dec
lock
ss
xor
scas
sbb
sbb
adc
call
jmp
clc
aam
mov
cmp
pop
cli
lret
inc
dec
fbstp
mov
notb
or
dec
lds
push
movsl
sbb
mov
add
inc
mov
sbb
and
or
xor
stc
shlb
stc
pop
pcmpeqb
mull
push
addr16
jne
call
pop
into
fdivs
hlt
lods
out
out
mov
inc
and
push
stos
addr16
jl
int3
stos
subb
mov
movsb
outsl
es
ret
inc
xor
xchg
mov
dec
lock
sbb
inc
push
lret
sub
add
loope
inc
cmp
repnz
pushf
das
out
push
setg
jae
fistl
sub
dec
or
movsl
mov
dec
inc
and
or
fistpl
sarb
sbb
ret
pop
fisubrs
in
frstor
xchg
call
or
js
test
xor
adc
arpl
ret
cltd
popf
jno
add
inc
les
pop
xor
insb
adc
xor
xor
dec
mov
rcr
jns
or
pop
lea
lock
ljmp
push
scas
roll
add
sbb
jle
fnsave
inc
movsl
inc
mov
cmp
mov
dec
cwtl
or
jb
push
mov
mov
jl
sub
jge
xchg
jmp
jge
xchg
jle
popa
out
idiv
jno
xor
sbb
dec
stc
sub
or
or
insb
mov
js
and
sub
pusha
sub
pop
push
inc
popa
dec
xlat
sbb
cwtl
cmp
mov
stos
push
sub
shll
enter
orl
push
addr16
lret
and
dec
jno
cmp
test
lods
repz
pop
loop
sub
movsl
cs
and
std
or
dec
test
dec
push
jb
inc
push
lret
push
jp
cmp
xor
and
dec
xchg
leave
dec
out
nop
test
xchg
orl
loope
mov
push
add
cltd
mov
pop
xor
or
sub
cmpsl
mov
jo
lahf
ds
xchg
fildll
scas
lea
test
ljmp
xchg
lahf
adc
add
cltd
sbb
in
andl
add
call
adc
and
fistl
and
mov
hlt
cld
imul
shl
jnp
sub
les
and
dec
cmpsl
stc
pop
push
inc
push
shlb
and
pop
out
lahf
mov
jg
mov
fcompl
push
mov
push
cmpb
mov
sbb
jecxz
jecxz
mov
xchg
shrl
in
inc
xor
mov
jns
cltd
jmp
mov
adc
aam
push
ret
enter
mov
test
mov
cmpsb
ficoml
push
and
push
cwtl
das
lret
sbb
loope
or
and
xchg
adc
and
push
mov
adc
pop
mov
pop
int
push
out
dec
test
mov
jmp
in
sub
and
pusha
inc
xchg
std
int
dec
adc
push
and
xchg
test
jnp
cmpsl
enter
sub
ret
movsb
push
push
mov
addr16
push
dec
pushf
pusha
adc
cmp
fwait
cli
pop
jl
cmp
adc
addr16
inc
sub
sbb
push
dec
or
cmp
cmpsl
outsl
fsubrs
jg
xor
adc
mov
loope
ss
rcll
sbb
push
dec
cmp
and
inc
jg
mov
int
pop
stc
or
xlat
je
jnp
daa
lret
mov
movsl
mov
mov
push
mov
ficoml
ja
mov
push
jbe
cmp
inc
push
movsl
cli
stc
lds
cmp
mov
mov
lods
cmpsb
xchg
lock
insl
and
cmc
inc
stos
dec
cltd
out
ljmp
mov
fdivl
imull
lret
ffreep
lret
sub
test
sub
jae
mov
and
stos
xor
pusha
lods
and
mov
in
aam
pop
loopne
imul
fs
fnstcw
mov
ds
sbb
or
pop
shl
fstl
mov
pop
inc
leave
sti
mov
nop
test
imul
jbe
lods
shl
lods
xor
adc
sub
sahf
mov
dec
cs
or
push
call
add
mov
mov
mov
lods
or
dec
cmp
push
pop
test
jmp
xor
jbe
stos
xchg
pushf
ret
push
int3
test
jae
xchg
addr16
or
ja
lahf
sbb
push
inc
adc
test
xor
adc
mov
cmpsb
adc
bound
addr16
les
pushf
rol
outsb
cld
movsl
cltd
stos
push
mov
adc
andb
das
jp
enter
pop
rol
xor
mov
mov
mov
inc
xchg
mov
mov
xlat
and
and
jbe,pt
inc
stos
xchg
lret
jge
xchg
push
shrl
jo
ja
xlat
daa
dec
inc
hlt
into
leave
test
sbb
into
add
jne
sbbl
push
adc
scas
fucomi
and
mov
iret
or
repnz
add
jbe
fwait
lret
lret
sti
cmpsl
movsb
psubb
mov
aad
roll
inc
lods
fstl
mov
lret
dec
call
push
and
aaa
fidivs
dec
jl
mov
mov
int
xchg
shlb
add
out
xchg
adc
fisubrs
push
out
pop
xchg
repz
lahf
sub
mov
idiv
adc
jae
scas
jp
lcall
dec
pop
lods
mov
out
in
int
sub
mov
shlb
into
daa
popf
call
xchg
inc
mov
fs
jae
leave
push
andl
mov
cmpb
mov
pop
movsb
sub
sbb
adc
es
cltd
and
adc
dec
jbe
and
jp
sarb
outsl
mov
inc
popf
mov
pop
cltd
xchg
cs
cmc
jno
pop
push
inc
mov
jle
lock
add
and
mov
outsl
mov
mov
push
lods
and
ss
out
mov
mov
push
mov
hlt
mov
addb
aaa
jae
arpl
inc
jmp
fcompl
movsb
dec
mov
ss
mov
repz
mov
shrl
lret
rclb
int3
stc
ljmp
popf
icebp
cmc
jns
sub
rorl
or
cmp
and
dec
loop
or
cmp
jmp
lret
jl
rcl
test
repnz
insb
cli
pop
push
cmpsb
xchg
sub
mov
sahf
inc
shrb
inc
or
outsl
jne
and
aaa
lds
imul
pushf
mov
std
xchg
sahf
imul
xchg
adc
daa
push
pop
test
xchg
mov
in
outsl
mov
imulb
lds
jae
xchg
iret
into
ja
inc
xchg
ss
pushl
pop
or
lret
mov
adc
insb
inc
clc
js
dec
test
jae
popa
adc
and
or
out
push
cmpl
mov
imul
test
clc
cwtl
fs
cmp
aam
packuswb
repnz
cltd
cmp
jmp
sbb
push
sbb
lea
sub
xor
loop
mov
xor
and
cmpsl
shl
in
mov
mov
sbb
unpckhps
push
testl
andl
push
xchg
ret
gs
pop
cmc
mov
shrl
sub
fwait
xor
and
jo
js
add
lock
insb
repz
imul
inc
sbb
xchg
hlt
mov
push
jg
mov
repnz
mov
aas
or
cwtl
data16
push
inc
fisubrl
xchg
fidivrs
call
mov
int
jbe
rorb
inc
jo
or
ret
movsl
push
fucomip
add
sbb
add
jg
cmp
outsb
mov
inc
xor
add
lods
jne
xchg
sarl
fwait
pop
xor
mov
xchg
cld
jecxz
loopne
hlt
call
je
xchg
xor
imul
xchg
lock
mov
divb
not
jo
hlt
push
data16
and
xchg
ja
stos
inc
xchg
mov
and
pushf
dec
sahf
and
mov
sub
sbb
clc
push
aas
mov
jbe
pop
fs
outsb
or
mov
loopne
pop
sbbl
xchg
gs
shlb
in
cmp
cld
mov
xchg
mov
adc
push
js,pt
mov
test
fstp
lds
sbb
movups
cltd
repnz
in
je
mov
repnz
clc
pop
inc
leave
test
push
mov
mov
clc
int
push
sub
in
and
mov
int3
mov
mov
loopne
mov
loop
mov
jle
aas
repz
cmpsb
push
sub
mov
les
or
es
in
cmp
sub
pop
push
or
insb
fcompl
scas
jge
sahf
out
sbb
int
mov
jecxz
fwait
out
fnsave
rcr
sbb
testl
loop
cmp
int3
dec
mov
mov
push
xchg
mov
jl
jb
pop
dec
mov
mov
loopne
popf
stos
stc
inc
pop
stos
xchg
inc
xchg
add
add
and
popf
and
mov
pop
pop
dec
fcomps
scas
fwait
mov
push
shrl
dec
mov
mov
pop
cmp
sub
mov
dec
jge
adc
dec
fimull
push
mov
orb
or
cmc
in
adc
jbe
mov
cmp
adc
fld
xchg
mov
push
jns
jne
push
in
inc
cmp
adc
popf
jecxz
lret
jle
add
iret
cmp
hlt
sti
and
out
repz
jmp
xchg
cmpsl
fistps
and
inc
jbe
out
inc
jae
inc
pusha
sub
ja
out
arpl
daa
rolb
insb
out
xor
test
sub
jne
xor
mov
xor
mov
pop
loopne
push
outsb
adc
mov
in
and
inc
mov
cli
cmpsl
fiadds
add
mov
mov
jp
jb
cmp
negl
mov
adc
pop
test
inc
sub
adc
repnz
pop
and
cld
movnti
sbb
fsub
int3
testl
mov
cmc
mov
push
in
loop
jns
pushf
adcl
jle
sbb
insb
jecxz
addb
clc
dec
xchg
mov
int3
icebp
insb
in
jge
enter
insl
mov
jo
daa
aad
cmp
or
inc
mov
rorl
daa
push
mov
int3
xchg
fsts
bound
rcr
pusha
lods
ret
popf
xchg
movsb
xor
ljmp
cmp
hlt
pop
lret
mov
insl
sti
cld
sub
adc
mov
xchg
push
mov
jnp
push
idivl
jge
mov
outsb
push
testl
push
sub
mov
movsl
pusha
enter
xchg
lcall
rcrl
inc
and
pop
sbb
fstps
mov
sub
mov
or
insb
jecxz
push
xor
fdivr
jle
out
mov
out
xchg
sahf
out
push
out
inc
cltd
pop
adc
xchg
mov
and
push
clc
jno
fs
sarb
fdiv
adc
mov
lods
inc
dec
adc
mov
dec
and
call
pop
jnp
sub
test
and
out
pop
sub
test
xor
push
dec
outsl
cli
and
jnp
loope
decl
sbb
push
scas
and
and
movsb
dec
rcr
mov
ds
shlb
bound
and
inc
pop
ljmp
lcall
nop
push
mov
mov
nop
orl
cmc
stos
pop
test
add
lea
negl
or
cmpsb
xchg
test
mov
fwait
scas
addr16
mov
mov
jae
xchg
out
and
pusha
sbb
stc
pop
cmp
pop
les
and
test
cltd
fdivrs
test
xchg
cltd
test
cmp
stos
movsb
ret
mov
or
repz
fldt
cmp
mov
pushf
scas
ljmp
xor
bound
mov
add
stos
jl
callw
push
popa
jecxz
mov
sbb
cmp
add
sub
rol
jb
out
inc
inc
pop
punpckhwd
aam
xlat
cltd
arpl
cs
pop
cmp
lock
mov
shll
or
xor
and
stc
popf
ror
adc
jp
mov
lret
or
dec
bound
std
jnp
bound
popl
test
jge
clc
lods
jb
movsl
mov
sub
or
in
xor
jmp
cmp
movsl
mov
dec
mov
push
mov
jle
cmp
and
xor
dec
stos
popf
das
aad
or
ds
push
movsb
xchg
dec
cmc
dec
dec
out
and
jecxz
ds
push
xor
jae
push
add
add
xor
std
xor
imul
mov
or
popa
jg
ljmp
cwtl
dec
and
aas
int3
cmp
and
xchg
mov
out
xor
push
in
jecxz
xchg
cmp
mov
xchg
push
xor
incl
hlt
in
loop
cld
shrw
mov
pop
nop
adc
das
push
cmp
ret
imul
mov
push
sbb
xorb
aas
dec
out
imul
mov
mov
in
pushf
repnz
ret
pop
pop
push
cli
xchg
push
fdiv
xor
loopne
hlt
sbb
aad
or
popa
in
loopne
pop
push
test
pop
sbb
jb
pop
pusha
inc
sbb
in
dec
or
sahf
push
pop
xchg
xor
sbb
fdivp
xchg
xor
adc
xor
subb
xchg
ja
lret
popf
pushf
cli
inc
sti
or
xchg
dec
jmp
lds
mov
jle
dec
adc
mov
sub
push
popf
jo
sbb
out
in
xor
popa
sub
xchg
repnz
jge
andb
insl
icebp
loop
jl
shll
sub
jecxz
mov
inc
lods
xor
add
cmpsl
xchg
xchg
pop
jmp
xchg
mov
push
jns
lock
movsb
xchg
and
fsubrl
ss
jg
out
lods
sub
and
aam
dec
lret
xor
push
arpl
rclb
imul
sahf
aam
jo
rcll
leave
sub
mov
inc
and
bound
pusha
inc
mov
mov
sub
cmp
jns
push
sbb
xchg
dec
popa
xchg
call
scas
std
push
push
jnp
sub
inc
into
fnstenv
push
mov
pop
loopne
xor
call
fisubrs
in
pop
mov
mov
in
cwtl
xchg
mov
ficoms
inc
imul
enter
sub
stos
and
push
xchg
inc
push
push
fcoms
push
and
adcb
in
lcall
xor
sub
arpl
enter
jp
out
adc
outsl
insl
test
mov
jecxz
lea
mov
dec
pop
mov
addr16
cmp
fs
sahf
mov
xor
mov
inc
xchg
icebp
jle
out
ss
mov
mov
cmp
lahf
add
std
ret
pop
jecxz
addr16
adc
lcall
sub
mov
stc
lret
iret
push
rolb
cwtl
ljmp
mov
out
lods
lods
or
int3
jp
int3
mov
pop
ret
jecxz
lods
xor
sub
adc
mov
dec
and
test
push
mov
xchg
sbb
xor
sub
loop
repz
and
enter
cmpsl
inc
std
mov
pushf
jge
mov
mov
or
add
push
rcrl
add
fwait
inc
adc
loop
pop
jne
xchg
dec
ss
xchg
pop
or
leave
sub
push
loopne
adc
into
leave
aad
jae
std
fcompl
sub
sbb
lods
iret
out
shl
adc
lea
and
mov
adc
lcall
mov
adc
jmp
lea
insb
test
and
jo
jp
repnz
pop
jmp
xchg
in
lock
adc
std
scas
std
pusha
cmc
pop
and
out
jl
out
test
out
mov
mov
cmp
in
and
repnz
rolb
jecxz
sti
mov
jle
sbb
xchg
sbb
jbe
or
mov
das
xor
shr
loopne
lret
fdivrp
mov
rcll
fisttpll
and
sbb
test
mov
dec
nop
repnz
orl
sub
xchg
shl
push
inc
out
stos
cmp
pop
into
popf
cltd
cltd
insl
mov
lds
jo
jp
pop
out
add
dec
jns
inc
xor
mov
into
js,pn
jl
sbb
xchg
int
mov
outsl
mov
ret
jp
rcrl
hlt
aam
dec
cmp
popa
sub
or
jo
mov
mov
mov
xchg
ss
mov
dec
in
repnz
pop
sbb
jle
cld
jb
mov
xorb
sbb
add
cmpsl
imul
arpl
das
int
insb
push
sub
inc
inc
mov
in
sbb
add
in
pop
sbb
clc
test
ffree
rorl
ret
insl
pop
cmp
adc
mov
imul
or
rcrb
push
xchg
cmp
icebp
push
mov
popf
in
hlt
stos
jmp
insb
gs
or
adc
cltd
dec
je
mulb
xor
loope
out
push
dec
adcb
js
xchg
shll
ljmp
cmpl
push
in
mov
pop
das
lahf
mov
std
xchg
insl
or
mov
cmp
adc
lret
fsubl
pusha
imul
imul
lret
test
and
jb
xor
xor
xchg
stos
fwait
jo
sti
mov
mov
lea
std
and
sbb
xor
or
inc
mov
es
out
mov
dec
pop
arpl
mov
dec
pop
insb
stos
dec
jecxz
lret
repnz
and
cld
mov
ja
adc
dec
fcomp
leave
idivl
add
incb
or
xchg
mov
mov
jne
or
and
mov
out
jecxz
pop
adc
pop
and
cmp
movsb
jmp
adc
cld
outsb
inc
pop
rorl
aad
test
sub
fcomp
jp
es
aas
add
ret
shll
mov
and
or
add
ret
incl
jo
aaa
xor
dec
jb,pn
in
out
adc
lret
nop
iret
sub
movsb
lret
push
jge
mov
pop
mov
les
pop
dec
push
mov
and
js
in
mov
push
mov
enter
imul
in
push
leave
pop
sti
xchg
lcall
int3
add
icebp
dec
popf
adc
add
jmp
and
xor
sbb
mov
adc
pop
in
outsb
gs
loop
dec
ja
add
add
push
sub
inc
cltd
stos
dec
cmp
xchg
fnstsw
fists
dec
xor
shl
sarb
out
out
out
imul
xchg
and
pop
cltd
or
cmp
sti
mov
bound
xor
xchg
sarl
xor
mov
and
mov
and
xor
lret
xchg
out
incl
pop
shlb
adc
hlt
cwtl
sbb
add
cmpsb
jp
mov
lods
cmc
sahf
outsl
xchg
jo
and
push
pusha
adc
js
fwait
xor
xor
add
sub
push
or
push
push
out
mov
pop
dec
xlat
dec
sbb
push
xor
jge
mov
mov
or
cwtl
mov
cmp
xchg
or
dec
push
ret
mov
adc
out
aaa
sbb
loopne
test
inc
movsb
or
lcall
das
inc
xchg
out
xor
mov
mov
cwtl
in
cltd
test
lret
cmp
out
pop
jno
fstl
adc
push
cmp
pop
ss
adc
arpl
frstor
dec
notl
mov
stc
sub
out
add
mov
sbb
shrb
or
ss
test
xchg
incb
xor
bound
lahf
and
stc
inc
xchg
xchg
mov
inc
ss
adc
push
push
add
mov
filds
leave
mov
scas
mov
loop
sub
mov
and
xor
add
cltd
sbb
inc
xor
xor
jnp
sbb
add
jp
dec
mov
aad
xor
lea
bound
xor
scas
inc
ret
sub
mov
cmpsb
sub
notl
jle
imulb
adc
test
dec
push
push
sbb
mov
or
mov
loopne
push
mov
dec
test
mov
bound
aam
pop
dec
push
mov
adc
mov
cmp
pop
das
in
jb
in
mov
aas
and
pop
insl
push
out
stos
outsl
jp
cwtl
jb
push
lret
jns
daa
cmp
inc
in
int
pop
adc
in
push
in
xor
cmp
push
and
inc
popf
sbb
ds
fnsave
jge
sub
lret
lods
repnz
flds
adc
aad
mov
jmp
inc
lods
out
cmp
aam
pop
lock
adcb
inc
data16
cmp
sbb
ja
loop
fnstenv
adc
rolb
in
add
movsb
jo
xchg
in
pop
repnz
push
lret
fidivl
xchg
das
sub
xor
out
push
adc
nop
inc
stos
inc
pop
sarl
sub
inc
mov
mov
push
push
inc
seto
jmp
push
sbb
outsl
int3
cmp
cmp
sub
and
std
idivl
mov
sub
icebp
sub
sbb
sbb
fildll
fisubrs
test
ret
fsub
xor
fsubs
imul
pop
fsubrs
mov
mov
imul
push
or
in
into
cmp
repnz
jmp
shl
adc
ret
inc
push
xor
popa
lods
into
cmp
jns
mov
shl
cmp
fwait
add
push
arpl
push
push
xchg
shrl
test
in
adc
inc
jle
dec
iret
xchg
pop
in
stos
popa
outsl
stc
lret
mov
dec
neg
mov
std
xor
cmpsl
pop
and
cmpsl
lcall
pop
sub
mov
test
xor
es
mov
xor
lret
adc
lcall
and
shl
pusha
dec
popf
call
lahf
mov
shl
rol
mov
ror
add
mov
inc
mov
lahf
add
cmp
icebp
jecxz
std
addr16
ror
daa
in
das
sub
push
sbb
xchg
movl
outsl
cmp
and
lds
sbb
pushl
ret
pop
mov
xor
call
inc
push
lret
icebp
dec
mov
int3
out
lcall
or
xor
mov
popf
les
mov
push
and
test
fistpl
sub
lcall
or
cmp
dec
mov
rcrl
inc
sbb
jnp
cmp
pop
fiaddl
repnz
and
mov
mov
lcall
pop
ret
jbe
insb
mov
jp
mov
add
mov
rol
cmp
add
test
in
call
pop
icebp
sub
push
movsb
pusha
ficoml
aas
push
inc
add
pop
push
rcl
xchg
aaa
mov
or
add
cmpsb
fcomp
mov
push
sub
aaa
fwait
testb
mov
mov
xchg
ljmp
out
jae
outsl
dec
push
aaa
fnstenv
fbstp
fdivrs
mov
enter
push
loopne
xchg
mov
fdivrp
mov
or
loopne
and
lret
jge
and
dec
cmp
ffree
loop
inc
gs
emms
das
fisttpl
xor
sahf
mov
leave
fadd
pop
in
pop
mov
push
movsl
mov
lcall
imul
aas
jb
pop
pop
test
mov
xor
arpl
adc
ja
and
lds
cmp
daa
clc
lret
jg
push
cli
dec
cmpsb
sub
mov
out
outsl
or
cmp
je
addr16
push
hlt
enter
ljmp
out
mov
popa
ds
stc
popf
mov
mov
or
inc
mov
out
xor
cmp
mov
xchg
clc
test
popa
cmp
js
stos
mov
cmp
jl
xchg
sahf
xlat
int
fwait
or
cmp
jg
push
cltd
sub
xor
sbb
aad
mov
add
pop
movl
or
testl
fists
jle
lds
xor
mov
or
popf
popa
sti
inc
cld
xor
ss
jecxz
stc
dec
mov
pop
jecxz
push
pushf
fcomps
or
enter
add
cmpsb
mov
cmp
mov
mov
dec
mov
jbe
push
add
inc
or
sbb
aam
data16
pop
inc
in
out
leave
push
dec
xchg
aad
add
movsb
mov
pop
push
pop
sbbb
loope
push
xchg
hlt
mov
pop
mov
and
int
cmp
pop
mov
popl
jae
dec
xchg
fisubrs
insb
pop
lahf
lcall
cmp
xchg
aaa
xor
add
icebp
mov
or
fwait
enter
sarb
cld
jo
int
out
jg
and
xor
inc
pop
loope
mov
and
mov
xchg
sbb
mov
roll
mov
jp
addr16
pop
enter
arpl
faddl
test
and
sahf
rclb
dec
pushf
mov
loop
or
pusha
xor
in
stc
out
pop
test
fldt
mov
or
out
push
fistl
addr16
xor
scas
movsb
aaa
lahf
loopne
fs
or
mov
das
push
adc
mov
js
jno
sub
xor
pop
rcr
ja
pop
xchg
push
outsb
aas
fisubrl
push
cmp
mov
out
lret
aad
or
outsl
std
cmp
cmp
pop
mov
dec
insl
out
mov
fsub
popl
mov
pushf
dec
sub
fldl
add
popf
and
nop
out
lock
push
test
fs
rol
inc
test
faddl
dec
dec
cs
inc
xor
and
push
mov
mov
mov
mov
mov
mov
pop
mov
jmp
arpl
jle
add
sahf
cltd
cli
out
lock
sbb
scas
jmp
sub
pop
xor
aaa
fmuls
mov
xorw
jp
loope
adc
lret
arpl
addr16
pop
xchg
lea
sub
insl
adc
push
shll
add
xchg
in
das
int
push
xor
mov
nop
cmp
sahf
outsb
cmp
xchg
int3
mov
and
mov
adc
mov
mov
in
dec
into
jl
add
jle
stos
inc
hlt
test
and
cli
outsl
jge
mov
lds
call
adc
pop
je
popa
xor
fwait
popf
adc
xor
cmc
fisttps
roll
sbb
fstpl
xchg
cmp
mov
mov
icebp
iret
sbb
mov
fwait
mov
add
les
xlat
sti
add
shr
jecxz
fs
sub
pop
and
lods
jne
jmp
scas
fdivrl
scas
ficoml
pop
and
lds
int
adc
inc
lcall
inc
cmp
add
loop
fbld
nop
xchg
dec
cs
lock
push
subl
pushf
inc
push
icebp
inc
lret
add
dec
cmp
dec
test
aad
pop
test
sarb
adc
xor
mov
imul
notb
ljmp
add
pop
orl
iret
xchg
and
inc
lods
mov
aaa
add
mov
mov
push
nop
inc
adc
adc
out
adc
jp
negb
jns
pop
pop
jecxz
out
ret
das
or
daa
stos
add
ds
fs
aaa
jb
nop
sti
push
jne
in
loope
repnz
lret
and
cmp
xor
test
arpl
add
test
notb
daa
or
pop
push
lods
mov
pop
dec
push
jge
mov
loope
lcall
mov
mov
inc
adc
leave
adc
int
mov
inc
sbb
fsubr
cld
test
xor
fisttpl
lods
mov
dec
repnz
sbb
aas
xor
or
jnp
mov
fisubrl
leave
lea
shrl
stos
push
rcl
inc
xchg
pop
mov
cmp
clc
icebp
mov
xchg
inc
fdivl
mov
fcmovnu
xor
push
jb
movsl
and
push
sub
mov
inc
iret
lods
or
outsb
es
sbb
nop
xor
pop
xchg
es
mov
psrlq
xchg
in
add
dec
fwait
movsl
gs
jp
dec
lock
or
ds
imul
xor
ljmp
movsb
mov
leave
mov
lods
cmp
sub
ds
xor
stos
inc
gs
pop
push
hlt
mov
cmp
ljmp
push
jae
jle
movhlps
sarl
lds
div
rcl
push
adc
mov
es
jecxz
popf
xchg
movsl
pusha
fnstcw
jmp
fisubrs
inc
push
test
shll
gs
and
jmp
js
pop
popa
out
lahf
out
mov
stos
fidivs
loope
cmp
mov
scas
sbb
jl
aaa
mov
sub
pop
scas
loop
push
shlb
cmp
or
nop
and
pop
mov
jmp
adc
sahf
movsb
and
divl
mov
cmpsl
add
bound
lea
mov
cmp
pop
bound
sub
sbb
out
fisubrs
mov
imul
add
cmp
push
or
imul
xchg
pop
out
daa
shrb
add
mov
dec
jl
and
leave
adc
outsb
xorb
clc
int
insb
sbb
jmp
in
lods
jb
cltd
mov
mov
lret
xchg
sbb
enter
insl
adc
les
pop
mov
rol
out
mov
dec
jbe
ja
rcr
sub
rcrl
sbb
sbb
repz
aam
pop
fimuls
xchg
pop
cmp
add
sub
xchg
dec
mov
xchg
or
fbstp
dec
cli
in
shr
stos
xor
mov
inc
leave
xor
dec
dec
das
in
outsl
sbb
loope
sub
jge
lret
mov
push
dec
mov
pop
lods
mov
cmp
inc
sub
pop
dec
shlb
ret
stc
and
mov
repz
nop
push
adc
mov
lret
sarb
push
cmp
scas
into
cmp
loop
mov
js
push
lahf
add
push
mov
dec
dec
jle
shll
int3
std
inc
jecxz
sbb
pop
leave
aas
and
inc
daa
jns
test
sbb
popa
lock
ljmp
test
lds
sub
ja
lret
xchg
test
ss
ds
cmp
in
mov
push
or
sbb
dec
and
and
cmp
xchg
pushl
push
add
pop
cmp
adc
jl
out
mov
ljmp
pop
mov
or
lds
lret
mov
nop
cmp
popf
inc
cmp
in
jge
imul
lds
lret
dec
js
in
negl
xor
scas
std
repz
sub
cmp
cs
es
movsl
mov
cltd
fsubrl
ja
dec
out
add
fwait
pushf
sti
aad
fnstsw
push
insb
sbb
imul
xchg
or
pop
push
ds
pop
sub
pop
or
cmp
test
iret
sahf
mul
arpl
push
inc
and
int
sub
dec
sub
rcl
out
add
insb
push
int3
xchg
jno
rorl
cmc
stc
push
negl
test
icebp
iret
xor
jmp
jb
addb
aam
addr16
adc
loopne
ss
jo
loope,pt
aas
jg
arpl
add
mov
out
inc
jnp
fcom
cmp
sahf
cmp
mov
js
adc
dec
sbb
or
sbb
sbb
aaa
imulb
std
es
xchg
popf
lahf
jle
dec
shll
outsb
das
testb
mov
dec
pop
xchg
fwait
rcr
adcb
sub
test
mov
push
mov
stos
fwait
push
or
into
mov
xchg
or
push
mulb
jb
or
mov
enter
push
loope
jo
cmp
cmpsb
mov
jecxz
dec
add
xchg
jle
sub
repnz
dec
cmp
lds
popa
in
in
mov
icebp
ljmp
or
adc
aam
shll
jo
sub
or
fwait
lahf
add
jnp
xchg
ja
loope
shrb
xchg
cld
pop
adc
sub
fistpl
nop
ja
jbe
cmpsl
mov
cmpsl
sarb
or
mov
or
mov
ja
negl
jne
bound
cmc
bound
jae
mov
addr16
cmp
pop
jecxz
add
outsb
test
mov
je
xchg
int3
push
adc
dec
xchg
stos
aad
mov
mov
mov
call
int
jbe
cmpsl
cmp
cmp
jp
je
or
bound
mov
xor
xor
repz
xchg
into
lcall
addb
and
push
or
fadds
hlt
aad
jle
arpl
mov
mov
xchg
lods
sbb
mov
in
add
jbe
sub
jge
notl
inc
mov
dec
and
mov
movsl
loopne
dec
push
js
mov
in
and
loope
xlat
mov
icebp
inc
aam
add
adc
adc
pop
adc
cmpsl
or
lcall
push
icebp
mov
cmp
cmpsl
fsubr
mov
jle
icebp
jg
lods
lods
fdivrl
out
push
or
lock
popa
dec
jge
filds
dec
cwtl
mov
ret
addb
xchg
cmp
sbb
sbb
cmpsb
cmc
mov
pop
or
cwtl
push
cs
je
dec
pusha
cmp
cmp
dec
pop
adc
in
cmp
sbb
xor
dec
mov
int3
lcall
sbb
in
pop
test
in
pcmpgtd
out
sub
cmp
xchg
pop
repnz
ret
cmc
ds
mov
clc
gs
pop
mov
sub
and
in
mov
jmp
push
mov
es
std
inc
add
pop
fwait
xchg
mov
fwait
movsb
fdivrl
into
aaa
insl
add
aas
dec
popf
imul
rclb
pop
add
andb
mov
jle
push
or
imul
push
fs
or
lret
xchg
xor
cmp
pop
jb
xchg
mov
push
sbb
enter
data16
jne
sub
adc
and
je
push
cltd
gs
sbb
xor
mov
or
xor
int
sarb
add
lock
jno
mov
data16
mov
adc
inc
mov
xchg
shll
xchg
shr
fimuls
jne
test
add
inc
stc
jp
cli
jp
push
cld
push
sarb
fcoms
pop
mov
scas
cltd
rorb
mov
cmpsl
add
ret
ficomps
cltd
inc
dec
pushf
mov
aad
add
shrl
repz
loop
jns
out
xor
add
ficompl
push
dec
cmp
xchg
testb
iret
push
add
mov
sbb
mov
jno
scas
mov
loop
js
les
jg
loope
lcall
repz
cmp
into
pop
iret
popf
mov
pop
test
gs
stc
testl
and
inc
scas
cmp
scas
icebp
cltd
push
xchg
lret
int
hlt
es
sub
push
cmpsl
mov
fdivs
mov
jnp
and
ret
or
stc
es
xor
into
sbb
pop
fstps
xchg
adc
sahf
sbb
sar
imul
rorb
cmc
or
je
cwtl
and
ja
add
hlt
inc
call
push
xorl
mov
iret
jge
les
add
lods
fdivs
mov
test
fldenv
jecxz
push
imul
inc
cld
mov
mov
dec
sub
jbe
popa
push
loope
faddp
test
in
insl
mov
ret
cld
cmpsb
lret
lcall
cmp
std
inc
data16
mov
imul
lods
adc
mov
push
push
mov
inc
adc
int
xchg
ljmp
fldt
add
and
aad
xchg
sti
cmp
nop
orps
outsb
vpbroadcastw
cmp
sbb
cmpsl
push
jge
pop
scas
push
gs
lock
cmp
push
cmp
fdivr
push
add
icebp
das
int3
xchg
xchg
mov
push
cmp
and
cmp
cmp
in
dec
fs
cmc
add
iret
or
jnp
jnp
dec
fcmovnu
loopne
sub
cwtl
icebp
mov
into
sbb
scas
stc
or
fcomp
pop
push
nop
jle
jnp
dec
shll
xchg
sti
cwtl
in
rolb
jecxz
and
arpl
xor
negl
jns
jns
outsl
mov
xor
cmp
cmp
push
push
or
dec
lret
aad
push
andl
mov
cmp
jns
cltd
cmp
gs
mov
mov
scas
aaa
scas
insl
sbb
mov
into
pushf
repz
inc
inc
imul
fwait
call
test
sub
aam
aad
fistl
test
cltd
pushl
test
lcall
adc
out
sarl
xor
sbb
mov
lea
mov
sbb
imul
lds
jbe
dec
lods
add
pop
fadd
push
and
xchg
jg
aad
movsl
and
push
test
cs
enter
pop
xor
inc
push
add
xchg
jmp
cmc
outsl
lea
out
and
inc
fcompl
adc
cmp
loop
sbb
push
aaa
xor
mov
pop
rorb
pop
jnp
sbbw
pop
test
ret
int
inc
incb
add
nop
test
lret
jl
mov
mov
mov
adc
leave
or
lcall
les
pop
sahf
jns
jne
das
inc
add
mov
add
dec
out
testb
rcr
shrl
sbb
test
jb
fs
and
popa
add
stc
or
and
inc
sahf
cli
std
add
cli
sub
push
aaa
jge
add
je
jg,pn
nop
mov
or
popf
xchg
lods
fnstcw
jae
xor
sbb
mov
dec
jo
loop
jle
xchg
imul
movsl
dec
mov
dec
rcll
or
or
repz
rol
movsb
fwait
adcb
mov
lret
inc
imul
mov
mulb
pop
mov
push
cmp
mov
or
sub
daa
pop
push
icebp
cmpsl
cmp
lcall
loopne
test
xor
sub
add
pushf
or
cli
testb
bound
xchg
xor
lcall
loop
sbb
cmp
add
cmp
jne
mov
cmpsb
test
push
js
nop
adc
mov
les
dec
gs
xor
push
jle
jo
lgs
lods
pop
cmpsb
lret
jno
gs
mov
inc
ja
call
push
ljmp
jae
pop
cmp
mov
adc
arpl
jo
int
icebp
fistpll
pop
inc
and
fistps
movsl
cmp
push
sti
fisubrl
mov
sub
fmuls
test
adc
mov
xchg
popl
aas
mov
lods
cs
or
data16
sub
cmp
and
ja,pn
mov
cs
insl
xchg
jb
jmp
popa
and
pop
pusha
in
cmc
push
loop,pt
ret
push
pop
pop
dec
xchg
xor
sbb
or
and
xor
inc
dec
loop
mov
cmc
bound
aam
les
mov
or
push
mov
xor
pop
jl
inc
inc
mov
outsl
sub
xor
dec
mov
pop
sarl
dec
cwtl
hlt
mov
mov
mov
jmp
shll
fmul
out
mov
arpl
divl
mov
icebp
mov
jo
mov
rcrl
inc
add
mov
adc
push
cwtl
clc
stos
fcomip
aad
push
leave
fstpt
or
add
pop
push
or
lahf
and
fistpl
les
mov
dec
addl
clc
or
xor
pop
cmp
pop
and
cwtl
loopne
sbb
out
jne
iret
xchg
adc
aaa
in
or
js
pop
popa
arpl
scas
sti
add
fisubs
or
mov
xchg
in
mov
mov
mov
out
lret
arpl
cmp
dec
push
mov
in
aaa
ds
call
or
mov
call
cli
sbb
mov
fwait
sti
mov
je
fs
into
mov
adc
mov
mov
dec
sub
push
pop
jg
loopne
fstp
mov
mov
fmul
and
adc
pop
xor
repz
jg
fucom
jnp
daa
insl
inc
scas
call
adc
movsl
xlat
pop
scas
clc
push
push
data16
repnz
adc
stos
dec
incb
push
xchg
pop
and
leave
cmpsl
lea
jg
cmc
jae
adc
popf
mov
jl
mov
popa
or
mov
stos
sbb
fs
push
xchg
divb
ror
push
sar
mov
push
pop
roll
outsb
test
shll
ret
fmuls
jmp
add
movsb
test
je
imul
dec
rcrb
mov
clc
and
in
fsubrs
push
dec
pop
out
sbb
in
nop
in
imul
mov
pop
and
bound
sbb
push
fs
jle
adc
sarl
xchg
push
mov
push
icebp
mov
mov
xchg
ss
jle
sahf
dec
ss
mov
pop
arpl
dec
push
insb
and
push
data16
jl
dec
mov
cmp
sbb
fwait
or
cmp
jne
mov
fwait
mov
mov
in
rcrb
sub
ret
movsl
movsl
movsb
out
mov
subl
cltd
mov
adc
fsqrt
mov
mov
sub
dec
dec
lods
jne
cli
inc
leave
test
and
mov
ljmp
inc
jmp
daa
ret
rol
lock
int3
lcall
addr16
fcoms
ret
cmpsb
leave
mov
dec
mov
mov
test
test
bound
xchg
sbb
sub
cmp
cmp
adc
sub
xchg
and
sahf
xor
push
sub
adc
out
cmpsl
xorl
cmpl
mov
push
leave
sahf
push
lret
stos
addr16
data16
popf
jbe
inc
int3
insl
imul
sbb
push
push
inc
gs
inc
loopne
inc
das
fsubr
loope
lret
hlt
cli
repnz
cli
cmpsl
xor
fists
mov
call
inc
cmp
nop
pop
inc
mov
leave
mov
arpl
stc
cli
pop
add
xchg
or
inc
xor
cmp
jnp
mov
nop
cmpsb
roll
jo
roll
adc
mov
call
test
or
dec
lods
lcall
fs
addb
cwtl
xor
jl
dec
lock
inc
sti
fmuls
daa
lea
push
add
jecxz
les
cmc
jb
pop
mov
enter
sti
add
pop
add
add
shrl
pushf
jle
pop
or
gs
pop
mov
cmpsb
add
es
or
mov
cmp
cmpl
mulb
aas
pusha
insb
aad
call
jae
cmp
ljmp
les
push
cli
mulps
dec
cmp
hlt
das
jl
mov
movsb
test
out
shl
jo,pn
dec
lock
loopne
sbb
repz
push
repz
xchg
pop
dec
fidivl
jns
jl
in
jmp
xorl
sub
rolb
add
xchg
pop
push
mov
lahf
mov
arpl
popa
pop
cmp
add
xchg
jbe
pop
xor
dec
into
push
sbb
fstpl
mov
setp
je
mov
mov
push
lock
push
fidivrs
fdivl
ret
scas
les
scas
pop
daa
andb
jb
pushf
lret
jecxz
push
ret
push
popa
stos
dec
jno
fisubs
cmp
xchg
dec
lods
popf
loop
shll
iret
cli
cmp
and
pop
test
cmpsb
in
mov
fs
push
jae
rcll
sub
loope
test
leave
mov
aaa
dec
pusha
push
dec
orb
scas
sub
xor
test
mov
std
incl
imul
pushf
jbe
jp
cmp
int
cmp
icebp
sbb
sbb
mov
pop
out
mov
jp
cli
mov
jne
mov
std
and
cmc
push
and
push
xchg
pop
sbbb
stos
adc
dec
out
pop
and
cs
pushf
xor
pushf
adc
lock
inc
sub
sarl
int3
push
mov
aad
cmp
sbb
cmc
jecxz
xor
push
ficompl
cwtl
repz
mov
mov
sub
mov
adc
adc
jnp
cmc
mov
loop
cs
rorl
pop
jmp
mov
jne
ror
imul
int3
or
call
in
push
adc
or
rclb
mov
jae
inc
shll
jno
cld
mov
es
rcrl
push
mov
jae
mov
push
jns
icebp
testb
popf
cmp
sbbb
add
jb
mov
sbb
roll
iret
cmp
dec
adc
mov
enter
adc
adc
sub
fcoml
pop
pop
pop
jne
sbb
cmp
xchg
fs
jle
adc
mov
fcmovnb
fcompl
ss
xor
lea
fisubrs
sarb
cltd
pusha
enter
mov
lock
popf
mov
pop
mov
into
cmp
popf
fdivrp
xor
jne
hlt
ds
adc
sbb
cmp
nop
xor
cmp
cld
mov
push
jp
push
mov
sbb
mov
cmp
js
mov
mov
add
pop
sbb
in
or
or
jno
push
sahf
stos
data16
jmp
push
outsb
cmp
lea
and
dec
sbb
xor
xchg
xchg
xchg
inc
jbe
dec
sbb
jne
sub
incb
xor
fsqrt
push
shlb
pop
sbbb
jecxz
in
dec
roll
or
adc
inc
mov
mul
pop
not
ret
pop
xlat
mov
mov
sbb
dec
adcb
fiadds
pop
dec
insl
shrb
add
dec
mov
mov
jbe
pop
rcll
pushf
xchg
sti
test
aaa
outsb
fdivp
push
je
mov
push
stos
jmp
push
adc
xchg
pop
outsl
xchg
je
lcall
mov
cmp
pop
mov
push
sbb
in
or
cmpsb
fcompl
cmp
pop
and
mov
and
dec
sbb
mov
mov
and
test
and
js
push
jl
insl
jle
jmp
mov
mov
rcrb
repnz
pusha
sbb
mov
or
popf
inc
mov
jo
mov
dec
test
cs
push
jns
sub
repnz
repnz
pop
shlb
sbb
sub
mov
jns
cmp
mov
fisttpl
mov
jp
or
sub
shlb
hlt
adc
lock
enter
adc
mov
out
lods
jp
aaa
enter
scas
cmp
sub
test
in
rcrb
and
sub
inc
outsl
push
lahf
jp
dec
sub
xchg
sbb
out
mov
flds
push
inc
inc
xchg
setns
out
arpl
mov
in
jbe
cltd
jge
mov
push
and
sbb
jl
popa
and
mov
daa
cwtl
in
lret
cmp
mov
add
scas
jmp
and
jg
in
andb
cld
mov
cmp
in
fwait
push
adc
aas
int3
or
shl
inc
scas
xor
mov
dec
and
aas
mov
shll
mov
xor
jnp
sahf
jl
jb
idivb
popa
in
jo
outsl
jp
lcall
mov
dec
mov
lds
mov
add
inc
mov
pushf
icebp
lods
pop
and
pushf
imul
pop
pop
sbb
addl
inc
cmp
mull
push
inc
mov
cmp
cmp
rcll
and
or
push
sbb
adc
and
mov
mov
pop
pop
into
ljmp
inc
call
mov
call
jnp
pop
inc
sub
gs
add
cmp
mov
sbb
hlt
push
fwait
xchg
add
or
sbb
jl
jp
fldcw
lcall
lods
pop
bound
pop
ret
daa
xchg
mov
sbb
dec
sbb
icebp
pop
inc
fidivrl
lcall
jecxz
mov
jo
rcrl
das
sub
xchg
cmp
mov
xrelease
cmpb
into
jae
push
dec
fcomps
out
mov
iret
jg
or
sub
mov
add
jge
jo
sbb
insb
jmp
sub
enter
mov
pusha
addr16
ja
adc
lret
xor
das
inc
ljmp
mov
cmp
inc
out
add
fcomps
or
ficomps
pop
cwtl
mov
cmpsb
xchg
fwait
int
mov
pop
xchg
in
xchg
sbb
ss
inc
xchg
dec
xchg
cmp
sub
nop
add
data16
aam
pop
jno
xchg
ss
lea
mov
loopne
mov
scas
shrl
cmp
enter
jl
sbbl
out
jns
movsl
int
test
mov
lahf
cmp
loope
sbb
ret
mov
lret
pop
in
dec
leave
dec
sbb
cmp
fcompl
add
mov
ljmp
dec
inc
xchg
outsl
ds
inc
pop
xchg
leave
cs
fdivrl
test
jmp
cmc
push
inc
mov
xchg
std
xor
call
addl
pop
daa
xor
inc
mov
enter
ret
das
add
mov
xchg
mov
cmpsl
mov
dec
or
ficoms
xor
outsl
popa
cs
dec
or
dec
jmp
or
mov
mov
gs
lock
lds
xlat
cmp
clc
jbe
add
or
icebp
pop
inc
lods
mov
aad
cmp
fiadds
cli
aad
jno
cmc
cld
xor
push
es
into
cmpsl
xorb
ds
pop
mov
cmp
push
pop
xlat
repnz
ja
pop
aas
pop
loop
js,pt
or
arpl
or
xchg
sub
popf
xor
jnp
inc
sarl
lds
aas
sub
aad
shll
not
mov
and
nop
sub
cmp
test
loop
push
ficomps
cwtl
lods
imul
cmpsb
or
jle
mov
or
iret
sti
rorl
dec
shlb
in
mov
sbb
sbb
mov
dec
cmp
popf
shlb
fdivs
inc
ffreep
and
in
dec
ja
inc
jo
aad
adc
inc
cwtl
ss
lock
push
addr16
xchg
sbb
inc
popa
xchg
rclb
adc
sub
or
mov
add
pop
icebp
and
test
cmp
inc
jmp
add
sbb
mov
push
sbb
inc
and
push
fldpi
paddusw
jns
mov
add
outsb
mov
pusha
adc
push
out
inc
inc
sahf
cmp
divb
adc
orb
in
sti
or
addr16
cmc
add
mov
pop
ljmp
imul
ja
mov
sarl
or
and
mov
jns
adc
icebp
or
fdiv
push
adc
adc
xchg
mov
fistps
jl
xchg
lahf
xlat
jl
add
jge
jns
jmp
fimuls
add
sub
popf
pop
add
push
xchg
icebp
pop
pop
divl
loopne
int
aam
mull
adcb
test
int3
ja
push
in
repnz
or
or
dec
test
loop
add
sub
sbb
jb
leave
mov
xchg
int3
lock
mull
gs
stc
dec
mov
pop
divps
sub
and
pop
adc
cmp
add
lds
jmp
and
mov
fwait
adc
pushf
sub
ss
bound
xchg
cmp
popa
int
movsbl
mov
lret
xor
adc
cli
inc
sub
push
lods
mov
loop
mov
lock
mov
push
or
sub
loopne
int
and
mov
popa
xchg
in
bound
test
pop
testl
loope
cmp
in
pop
xor
xchg
lods
inc
test
out
push
cli
pop
xchg
add
sbb
shl
pop
adc
xchg
jo
ja
inc
xchg
sub
aam
or
mov
ret
mov
add
decl
and
push
fisttps
rcrl
and
pusha
and
inc
insl
xlat
shl
lret
sbb
andb
mov
inc
or
mov
dec
xchg
imul
mov
push
dec
in
adc
dec
add
dec
xchg
add
std
sbb
inc
mov
sub
iret
iret
and
xchg
lods
andb
mov
cmpsb
sarb
xor
negl
pushf
rcrl
insb
pushf
xchg
into
pmulhuw
xor
mov
pop
add
jmp
xchg
insb
push
dec
or
jle
adcl
jmp
in
pop
fsubrs
daa
test
xchg
mov
push
add
lock
arpl
mov
das
cwtl
sub
inc
fdivs
sub
inc
out
dec
or
out
mov
out
add
cmp
mov
mov
cmp
out
mov
or
out
xor
cltd
bswap
sbb
jp
push
sti
pop
decl
daa
lea
xchg
movsl
scas
inc
into
inc
inc
int
xchg
hlt
or
push
outsb
pop
cmp
leave
and
push
sbb
jbe
enter
pop
add
data16
ss
cmpl
jge
jg
jo
cltd
stos
leave
sub
lret
xchg
mov
fidivl
fists
aas
push
sarl
push
jl
jae
cmp
cmp
adc
mov
cmp
inc
loop
gs
scas
mov
or
sbbl
jecxz
shlb
int3
fsub
push
dec
fsubrs
inc
pop
sbb
xor
cmp
stc
xor
loop
daa
jge
dec
idivl
push
mov
lret
popf
jae,pn
scas
mov
add
js
scas
jmp
insl
repz
push
add
out
sar
addr16
xor
mov
mov
fldcw
xchg
cli
adc
enter
xor
cmpb
xchg
add
mov
inc
loop
fstl
out
ret
mov
push
shlb
xchg
sub
push
xor
or
cwtl
push
jp
mov
mov
dec
push
xlat
rolb
mov
scas
cmpb
xor
fstpl
inc
dec
lea
shrl
rcrl
add
std
cld
loop
add
add
lds
push
rcll
leave
and
push
xchg
shll
mov
push
push
loopne
lods
es
js
xlat
push
cmpsb
enter
aam
jbe
add
cmpsb
inc
les
mov
xlat
iret
pop
xchg
mov
shll
fidivrs
and
out
pop
mov
and
xor
push
daa
fwait
add
dec
inc
and
cmp
xor
fsubr
sahf
in
dec
jl
sub
incl
cmc
pop
xor
sub
mov
jb
js
or
and
call
inc
lret
or
cld
and
icebp
addl
xchg
adc
jne
ror
inc
or
mov
dec
notb
mov
pop
jnp
and
xor
in
popa
test
add
daa
aaa
xor
or
adc
lods
push
enter
xchg
mov
mov
mov
ret
loop
push
push
cmc
shl
or
filds
loop
dec
mov
and
clc
lret
pop
mov
ljmp
and
sbb
push
xchg
jl
mov
mov
pop
es
cmp
sti
cmovl
outsb
mov
push
mov
enter
dec
jp
jb
sbb
xlat
xchg
ljmp
roll
add
cmc
add
call
fmull
pop
push
adc
adc
out
or
int3
push
mov
fisubs
sbb
add
jle
dec
xor
mov
scas
or
cld
inc
aaa
add
sbb
jo
mov
xor
mov
lock
mov
test
dec
mov
mov
call
sbb
jmp
mov
inc
xchg
sub
mov
inc
adc
loopne
das
jno
popa
mov
les
inc
push
cmp
xor
in
mov
scas
outsl
in
adc
lcall
jp
std
and
xorl
mov
pop
mov
outsb
fimull
sbb
mov
scas
mov
jo
jp
nop
cltd
out
jne
cmp
pop
insl
jle
incl
dec
xlat
insb
fcoml
xor
jg
mov
mov
xchg
in
mov
je
inc
jns
push
jnp
in
out
add
cltd
push
sub
xor
mov
rolb
aas
lret
gs
sti
pusha
or
xor
addr16
inc
add
mov
xor
cmp
stos
icebp
cmp
pop
xor
mov
push
inc
das
loope
dec
repz
gs
sub
jno,pn
pop
aaa
aas
fisubl
test
add
cmc
mov
in
sbb
stc
cmp
scas
mulb
ret
xorb
or
daa
divb
mulb
leave
or
inc
mov
repnz
pop
decb
xchg
pop
into
adc
nop
ror
testl
ljmp
add
fsubrs
out
pop
aad
sti
add
inc
jbe
push
mov
shll
jl
mov
aas
push
xchg
rclb
mov
dec
push
dec
sub
adc
ss
pop
mov
mov
mov
sbb
das
inc
pusha
xchg
dec
dec
adc
push
dec
dec
sbb
aas
xor
sub
or
aaa
aad
lock
inc
addr16
push
cmp
lret
and
adc
repz
mov
inc
jecxz
ret
dec
jo
mov
lcall
mov
and
stos
push
push
leave
or
push
fdivp
std
and
push
xor
out
sbbl
xchg
mov
int
mov
and
repz
or
cmc
jbe
sahf
inc
imul
push
dec
mov
repz
jle
fisttpll
in
sub
push
test
in
xchg
fs
iret
daa
mov
sbb
or
cli
or
lcall
dec
fiaddl
shr
cltd
push
mulb
adcb
enter
mov
rorl
mov
cs
inc
push
repnz
mov
test
inc
cmp
sbb
stc
repnz
jb
sahf
push
cmc
cmc
bound
lock
add
add
xlat
mov
cld
sub
push
stos
int3
xchg
jl
add
das
movb
leave
rorb
push
pop
testl
fwait
cltd
pop
jp
mov
fisubl
xchg
repz
cmpsb
mov
push
out
fprem1
jns
pop
jl
push
incb
push
and
dec
arpl
mov
cld
testb
enter
fisttpll
mov
push
jns
mov
add
insb
aas
lret
sbb
aam
js
jne
xor
inc
xor
xor
aaa
stos
xor
mov
scas
out
sub
fisttps
cmp
mov
pop
xchg
mov
sbb
add
jae
mov
and
sbb
popf
aam
bound
xchg
mov
fwait
mov
sbb
enter
mov
mov
add
or
jmp
icebp
inc
les
and
mov
in
inc
jp
dec
mov
in
xchg
jno
inc
cmp
ja
ds
mov
jge
push
insb
subl
jo
jle
xchg
fisttpll
stos
or
mov
sbb
subl
xlat
dec
push
ja
xor
mov
cmp
and
sbb
dec
les
popf
jnp
xchg
sti
jb
mov
xchg
push
dec
pop
rcrb
ret
dec
cmp
sbb
ds
add
ret
fwait
jno
ljmp
cmp
fs
dec
popa
test
sti
dec
bound
xchg
int3
insb
xchg
test
xlat
std
pushf
mov
jbe
jbe
sbb
sub
dec
xchg
cmp
xchg
jle
jns
add
cmpsl
imul
pop
and
cmp
pop
lods
loop
xchg
imul
jmp
adc
inc
pop
jb
lods
or
shl
shll
or
cltd
mov
mov
popa
int
pushf
int3
ret
xchg
lcall
push
fucomip
pop
and
pop
mov
icebp
mov
dec
repz
data16
jae
mov
pop
mov
sbbb
test
mov
lods
jnp
outsl
ds
subl
inc
cmp
fildll
outsl
sbb
inc
and
pop
das
cmp
scas
mov
in
mov
shll
das
mov
xlat
mov
fistps
cli
aas
fcomps
sbb
and
lock
into
xchg
les
mulb
sti
popf
je
mov
jb
out
mov
add
dec
leave
lock
cs
and
cmp
or
pop
push
in
sarb
add
inc
mov
or
arpl
fwait
push
negl
mov
mov
or
cmp
jl
push
and
inc
movsl
in
int
call
sub
xchg
xchg
sub
xchg
dec
inc
test
push
jge
sbb
das
dec
cmpsl
cs
fs
inc
leave
add
inc
lods
and
divl
vprotb
js
outsb
cltd
sbb
stc
xchg
scas
xchg
mov
mov
or
sahf
loopne
es
mov
out
mov
xor
cli
and
loop
mov
enter
stos
adc
cmp
add
mov
push
fmull
adc
xor
lods
cli
pop
stos
les
ret
jns
mov
lods
ljmp
pop
xlat
scas
enter
inc
dec
push
pop
dec
lret
jbe
ljmp
add
jns
sbb
cltd
add
jno
daa
mov
fstpl
inc
adc
lcall
popf
and
mov
imul
push
sahf
push
cmpsb
jmp
aaa
mov
jno
jp
push
push
push
mov
test
lcall
mov
push
and
sub
push
shrb
cmpsb
mov
stc
ret
xchg
aam
xchg
add
jle
jp
push
mov
out
sub
leave
cltd
xchg
xchg
pop
nop
inc
jecxz
cmp
and
xchg
cmp
inc
packuswb
addr16
fsubrl
shl
rorb
cmp
cli
dec
sub
shrl
jno
and
icebp
orb
or
cmp
mov
push
lret
nop
pop
out
pushf
mov
pop
mov
pop
and
jge
sbb
ja
movsl
imul
test
and
push
sub
jge
cmp
push
fnstenv
xchg
cli
call
lret
fs
sti
dec
pop
push
or
inc
xor
lock
jmp
ss
jns
mov
test
in
notb
dec
ficomps
push
mov
fdivrs
pusha
dec
pop
pop
mov
cmpb
jge
out
ror
fs
loopne
fisubl
dec
icebp
mov
jecxz
dec
test
pop
xchg
sub
cmpsb
push
fstl
pop
std
dec
jb
pushf
jnp
pop
arpl
testb
pusha
pop
lods
mov
push
imul
xchg
test
jbe
cmp
std
cmp
lods
rolb
outsl
data16
outsl
out
push
lock
or
mov
pushf
lea
and
mov
jle
mov
andl
test
mov
mov
rcrl
lcall
bound
movsb
xor
xchg
outsl
push
sbb
and
add
jb
inc
dec
imul
out
sbb
mov
pusha
mov
lods
or
fcmove
mulb
aam
push
andl
sahf
movsb
sub
xor
dec
out
xchg
add
movsl
pop
sub
aaa
cli
xchg
pop
mov
cs
sarb
rep
adc
out
add
fs
pop
xchg
int
add
movsl
movsl
xchg
add
push
xchg
rep
imul
pop
enter
pop
xchg
orl
add
mov
adc
cmp
clc
ret
mov
test
jecxz
outsb
lahf
out
mov
fsts
jecxz
pop
clc
in
sbb
jg
xchg
ds
rcll
into
mov
add
leave
dec
dec
stos
pop
rolb
outsl
mov
push
inc
mov
leave
mov
mov
sbb
pop
std
scas
outsb
rorl
ret
pop
xlat
bnd
aam
iret
add
sbb
loop
stos
dec
test
jmp
idiv
not
jbe,pn
decb
loope
movsl
dec
mov
scas
pop
cmp
adc
fs
pop
and
mov
jb
pop
mov
jle
out
pop
pusha
inc
sub
inc
pop
mov
orb
lds
mov
xchg
das
or
data16
mov
inc
cmp
inc
jl
and
call
fidivs
test
shll
hlt
sahf
xchg
adcl
push
loope
add
mov
scas
mov
js
gs
cmp
mov
lret
or
fidivs
int3
les
xchg
sbb
fdivrl
and
pop
jmp
lods
adc
loope
fwait
sbb
in
inc
jnp
incl
jp
lea
xlat
mov
mov
or
jno
jne
cld
xchg
sbb
sbb
out
aaa
mov
mov
loop
dec
jbe
daa
inc
fld
popa
xchg
and
aam
arpl
xor
pop
lret
in
loop
jb
cmc
cmpsb
jecxz
inc
inc
rcr
inc
orb
int3
scas
into
test
sbb
les
pop
pop
sub
xor
sbb
push
add
ds
or
inc
add
cmp
cmc
cmp
jg
dec
rcrb
inc
sahf
rorb
or
xor
rol
lock
sahf
aaa
dec
mov
lcall
test
mov
jle
inc
adc
dec
xchg
xchg
fcomip
push
cs
jbe
test
and
cmp
pop
jg
arpl
or
popa
movsl
mov
or
cli
jmp
push
mov
out
sub
aad
fcomps
in
sarl
cmc
xchg
fcoms
addb
repz
cli
xchg
ficompl
pop
pop
sahf
and
movsb
icebp
pop
shlb
rorb
lcall
and
outsl
aaa
dec
out
jp
jmp
inc
cmp
or
movsl
loope
insl
test
in
shll
pop
mov
dec
fidivrl
in
lock
fidivs
mov
pop
inc
pusha
cltd
in
lds
xchg
push
pop
sub
mov
inc
jbe
dec
cmp
pop
outsb
ljmp
mul
out
shlb
add
sub
or
jp
pop
iret
push
and
xchg
sub
pop
decl
cmp
int3
cmpsl
fmull
in
mov
push
lea
fwait
outsl
push
and
mov
sarl
jg
scas
ret
xor
in
mov
push
cltd
cmp
and
popa
jae
xchg
mov
xor
sub
add
inc
jo
push
sub
iret
in
iret
test
cmp
shr
push
loopne
adc
push
pusha
ret
rorb
pop
xor
popf
xor
sbb
je
xor
dec
cmp
push
lahf
push
xor
int3
mov
mov
sbb
add
enter
daa
loop
xchg
push
xor
stos
fcompl
sbbl
add
gs
scas
cmpsb
std
sub
mov
jb
inc
xchg
cmp
and
roll
gs
in
out
add
mov
push
xchg
jnp
int
sub
aam
sub
adc
dec
cmp
inc
iret
es
push
arpl
sub
ss
and
stos
daa
imul
push
mov
cwtl
pop
sub
push
out
sub
pusha
sub
or
repnz
stos
stc
das
jge
jle
enter
xchg
inc
shlb
mov
movsb
ja
mov
push
and
jb
adc
sbb
imul
jo
adc
mov
xchg
push
mov
scas
mov
ret
lahf
cmpsl
subb
orl
cld
and
aad
sbb
xchg
jb
jb
jle
jno
sub
js
and
jo
lea
fldl
lea
mov
pop
fstpl
mov
mov
mov
ror
aad
adc
push
std
fadds
push
add
inc
add
dec
xor
and
jae
jge
rcrb
push
jnp
sbb
push
mov
neg
cmp
sub
and
and
cli
lock
andb
pop
mov
inc
loope
cmpsb
sub
pop
cmc
pop
shlb
js
push
or
sahf
mov
icebp
or
inc
mov
jge
inc
daa
ret
sbb
subb
push
int
sbb
or
xchg
push
cmp
or
inc
into
sub
ljmp
imul
das
cmpsl
lds
push
jns
jecxz
xchg
out
pusha
lahf
jge
jo
out
in
cmp
jge
fidivs
mov
mov
rolb
sbb
jge
dec
mov
xchg
xchg
mov
mov
into
popf
and
push
mov
dec
sbb
lcall
add
mov
test
jns
jg
aam
pop
test
and
pusha
jb
push
and
push
or
std
call
add
mov
jle
xchg
in
aaa
pop
add
mov
xchg
ja
js
mov
jp
xchg
sbb
insl
sbb
ds
cs
cmp
clc
leave
pop
sub
repnz
inc
adc
ret
pushf
xchg
bound
cwtl
imul
or
pop
adc
lcall
in
xor
stos
push
rcrl
stc
cltd
and
addr16
mov
adc
not
adcl
fsubp
push
dec
lock
ljmp
jbe
bound
dec
ljmp
push
or
iret
stc
or
push
stc
ss
das
cld
nop
les
sub
pop
sarl
nop
dec
test
lods
int
repnz
and
faddl
pop
stos
pop
mov
push
clc
jns
inc
xor
pop
jle
repnz
ss
mov
ficoml
pop
pop
cmp
ret
ja
fisubl
cmpsb
dec
inc
adc
lods
outsb
pusha
inc
pop
add
xchg
mov
jnp
mov
rcrb
pop
lcall
mov
jmp
jbe
es
subl
and
repnz
inc
or
jo
pop
push
mov
or
add
adc
adc
inc
dec
lret
es
movsb
pushf
fsubrp
xlat
adc
hlt
iret
data16
sbbl
loope
fildl
out
sahf
or
aam
fistps
inc
pop
mov
cmpsl
and
adc
fstpl
imul
mov
pop
cli
cmpsl
and
add
test
pop
sub
int
sub
inc
fwait
pop
cwtl
mov
or
mov
aad
cwtl
mov
bnd
cs
and
xor
pop
fldcw
bnd
sbb
hlt
ja
pop
cmpsb
inc
dec
bound
xor
lods
add
add
push
dec
je
movsl
insl
mov
out
mov
or
inc
mov
iret
les
inc
jno
imul
ficompl
sarb
out
test
mov
sub
cld
pop
inc
test
mov
push
jo
dec
xchg
into
scas
jae
repnz
pop
sahf
mov
pop
mov
xchg
test
add
sbb
mov
in
add
jo
lahf
mov
xor
xchg
test
jbe
les
into
xchg
mov
push
and
test
popf
push
inc
je
sahf
inc
mov
or
inc
mov
xchg
popa
data16
cli
into
scas
pop
aam
dec
sarl
fldt
ret
pop
sbb
add
and
dec
sub
shlb
cmp
adc
aam
inc
loopne
test
aad
cld
jg
jp
movsl
daa
mov
movsb
mov
pop
and
mov
add
push
sti
in
fmul
and
xor
xchg
ret
in
dec
cmp
xchg
outsb
mov
mov
vpackuswb
ja
loop
inc
inc
push
cli
lahf
out
xor
inc
fsubp
lret
icebp
mov
rolb
cmp
xor
mov
cmc
dec
gs
inc
loop
testb
jl
rolb
lret
push
addr16
push
pop
shlb
mov
add
mov
xchg
out
int3
mov
push
pop
js
xchg
cmp
xchg
lahf
js
push
fiadds
in
and
push
mov
rol
dec
cmp
stos
aas
mov
cmp
inc
jo
in
je
xor
pop
stos
addb
xor
jne
stos
enter
ja
loopne
shlb
jb
add
decl
and
jecxz
faddl
mov
cmpsl
repnz
push
jl
jmp
es
lcall
jns
das
repnz
mov
insb
jb
adc
popf
mov
test
sbbl
mov
inc
insl
adc
movsb
out
cmp
pushf
xchg
sub
jo
inc
pusha
addr16
repnz
jl
mov
inc
inc
sub
lret
push
mov
mov
mov
dec
or
mov
cwtl
adc
in
lock
jmp
lods
sarb
aam
sub
movsl
jmp
imul
loopne
out
stos
push
and
xor
pop
insb
lods
xchg
mov
ja
cltd
mov
inc
pop
negl
lcall
cltd
mov
es
xchg
push
inc
outsb
push
xchg
outsb
sbb
cmp
mov
cwtl
mov
adcb
push
lret
call
dec
xor
xchg
jmp
int
out
fprem
orb
dec
xor
les
xor
jns
bound
push
jge
cltd
insb
push
aad
fimuls
add
into
sbb
jmp
dec
popf
divb
imul
lea
inc
jns
sahf
mov
ficoms
lret
xor
and
int
push
stos
imul
sbb
sbb
xor
pop
lea
jnp
imul
and
stc
fwait
mov
cmp
sub
mov
shlb
push
dec
pop
jo
mov
ljmp
movsl
inc
and
xchg
adc
cmp
xchg
mov
sbb
cs
loopne
into
addr16
cmp
sub
inc
jp
jecxz
test
inc
les
adc
sub
out
std
jno
pusha
push
nop
in
fwait
cli
xor
popa
pusha
fsubr
sbb
push
ss
lret
xchg
cmp
lahf
arpl
outsb
mov
xchg
dec
into
sbb
lds
mov
ret
pushf
sahf
jne
adc
cmc
cld
into
or
xchg
inc
and
hlt
mov
das
inc
orps
movsl
pop
or
mov
sbb
or
pop
inc
movsl
cmp
jle
or
mov
pushf
inc
jecxz
cld
int
inc
icebp
or
into
cmpsl
push
clc
std
ret
jnp
fcmovb
aad
shll
xor
hlt
xchg
data16
push
out
pop
cmp
dec
and
mov
pmaxub
nop
or
int
rcrb
lods
xor
adc
lods
int
cwtl
mov
mov
lcall
inc
jne
fcoms
mov
pop
shlb
jb
jge
sub
addb
cld
mov
rorl
mov
dec
pushf
and
pop
mov
cmp
addr16
pop
cltd
hlt
lods
pop
fisttpl
lcall
outsl
int
ljmp
sbb
mov
xchg
adc
pusha
mov
scas
and
lock
mov
pop
jge
sub
insb
xor
frstor
rorl
mov
sbb
movmskps
nop
or
sbbl
cmp
adc
lods
pop
adc
int3
popa
mov
cmp
aaa
leave
out
mov
or
imul
or
in
daa
fldenv
mov
xor
xchg
xchg
mov
pop
sub
jmp
test
inc
xor
push
rolb
mov
in
jmp
jo
inc
cmp
push
and
cmc
into
jecxz
xchg
fcompl
jae
out
push
loopne
lods
inc
shrl
mov
push
mov
sti
loope
arpl
cltd
das
test
adc
and
cmc
mul
jmp
pop
cmpsl
fistpll
movsl
aas
adc
and
xchg
cmpsl
jo
inc
arpl
xchg
inc
push
jecxz
push
outsl
dec
je
enter
mov
call
pop
std
stos
pop
fs
fldcw
cmp
xor
in
cli
out
push
mov
addr16
xchg
sahf
std
xchg
inc
xorb
jmp
adc
addb
cmp
into
pop
adc
fldcw
out
lea
mov
in
sbb
fcomps
mov
dec
aad
inc
not
sbb
xchg
divb
xor
mov
loope
jmp
pop
dec
gs
pushf
out
dec
dec
pop
mov
push
aam
jns
dec
jge
pop
imulb
mov
ljmp
rep
mov
jp
jb
jmp
jnp
dec
push
or
lea
push
jecxz
xchg
mov
sbb
lret
pushf
int
cmpb
pop
sub
daa
push
test
cmp
imul
call
mov
add
xchg
sbb
out
jp
mov
clc
push
cmp
push
into
icebp
loope
dec
and
cmc
inc
jg
adc
mov
sub
mov
mov
add
clc
mov
xor
dec
negl
ficoms
add
sbb
out
jecxz
movsl
mov
pop
fiaddl
mov
cwtl
fcom
push
dec
sahf
stc
sub
xor
or
mov
xor
inc
lock
mov
mov
mov
xchg
push
mov
pop
pushf
repnz
push
inc
daa
mov
orl
inc
notb
cmp
shrb
adc
cwtl
push
cmp
arpl
les
xchg
dec
sbb
jmp
xchg
push
and
lahf
stos
mov
mov
fidivrl
mov
int3
add
push
hlt
cmc
pop
bound
dec
push
dec
dec
mov
cmp
dec
xchg
stc
scas
clc
dec
enter
hlt
les
icebp
jb
mov
test
arpl
sbb
mov
sti
sbb
sub
out
jge
lds
fdiv
adc
mov
ljmp
add
rcrl
ret
cmp
in
push
push
and
popf
lds
jno
adc
inc
stos
add
or
xchg
int
mov
bts
and
or
add
sbb
mov
mov
outsb
roll
pop
inc
aaa
inc
mov
repnz
in
xchg
sub
testb
ja
cmp
rcrb
inc
int
sub
push
ret
aaa
icebp
mov
add
xchg
shll
inc
incb
mov
jge
push
testl
and
add
adc
dec
pop
dec
in
cmp
xchg
push
sbb
into
sub
mov
xor
or
ja
adc
es
xchg
outsl
aaa
mov
inc
rclb
mov
pop
jge
stc
cmp
sahf
xor
jb
add
std
test
out
inc
jo
mov
pop
mov
dec
andb
push
mov
add
xor
xor
jb
call
sbb
mov
sahf
dec
sar
mov
loopne
popf
test
daa
in
xchg
mov
ds
xor
jp,pt
inc
lods
ret
fimull
pusha
add
mov
cltd
push
iret
pusha
mov
inc
mov
jecxz
or
cltd
xchg
rcr
movsl
dec
dec
test
cld
ljmp
cld
cmp
push
loop
adcl
inc
lock
and
inc
shlb
loop
ret
pop
jbe
adc
aad
fiadds
das
jno
cmp
xchg
adc
add
mov
rorl
clc
and
rclb
and
je
jl
movsl
dec
jno
pop
dec
jge
out
or
jge
push
imul
scas
jmp
fwait
sbb
imul
lds
dec
sbb
push
push
push
push
pop
or
pusha
imul
or
pop
popl
fistpll
popa
xor
xchg
int
push
adc
hlt
push
mov
fistpl
pop
mov
repz
sahf
mov
sbbb
inc
test
ret
orl
iret
cmp
mov
mov
pop
gs
aaa
into
aam
mov
xor
cmp
inc
inc
sub
insb
push
push
xchg
sar
loopne
mov
aas
dec
lret
gs
jle
push
repnz
jmp
cwtl
arpl
or
or
bnd
nop
sti
jnp
loope
outsl
jne
dec
mov
jb
shlb
dec
dec
mov
cmp
std
sbbl
aaa
cmp
sbb
or
in
push
push
inc
mov
mov
leave
push
roll
js
adc
and
mov
cltd
adc
pop
fdivrl
sbb
xor
clc
nop
scas
cmpsl
test
stos
pop
cmp
push
imul
ret
sub
lcall
das
fisubrs
out
jnp
dec
out
mov
rolb
je
call
jl
sub
add
lods
mov
mov
push
out
lcall
stos
add
lahf
scas
flds
test
mov
or
jg
ss
adc
clc
dec
sbb
test
jne
push
stos
mov
test
fldln2
shl
insl
test
xchg
outsl
mov
popa
insl
test
mov
andl
int
lds
in
data16
dec
movsl
jne
lods
fmulp
and
aas
push
movsl
ret
jge
stos
faddl
mov
push
push
scas
pop
int
stos
xchg
fs
xchg
or
cmp
imul
cmpsl
push
sbb
inc
addr16
ljmp
xor
sbb
rorl
ja
cmp
daa
cmp
adc
dec
mov
arpl
outsl
testl
bound
sbb
aam
add
mov
or
mov
fists
pop
leave
add
test
fisubrs
jae
mov
pushf
push
pop
xchg
pop
hlt
xchg
jp
loopne
pop
cltd
sub
scas
rcll
adc
dec
push
push
cmp
stc
gs
push
shlb
inc
cmp
pop
sub
je
xchg
mov
dec
cltd
jmp
cmp
cmp
pusha
je
inc
loop
dec
push
in
les
fbstp
clc
jns
push
stc
rcrl
push
es
mov
mov
push
adc
pop
cmpsl
rol
in
adc
mov
mov
pop
cmp
mov
or
cmc
daa
int
push
cmc
test
aaa
jg
push
pop
bound
adc
inc
adc
stos
mov
sub
xchg
inc
cmpsb
or
and
cmc
test
sbb
daa
push
push
dec
bnd
xor
mov
out
shll
mov
mov
jnp
cmp
add
jecxz
jle
daa
dec
add
jbe
jo
int
lods
cld
mov
xchg
jmp
pop
sub
xchg
push
repz
fiaddl
mov
lock
loopne
out
push
enter
cmovnp
fimull
push
xchg
push
fcmovnbe
cmp
mov
cs
inc
leave
mov
idivb
pusha
xchg
test
test
dec
and
leave
mov
adcl
sub
dec
inc
test
cmpsl
in
fs
fcmovbe
pop
mov
ja
jecxz
cmp
add
pop
inc
push
clc
pop
aas
jmp
mov
push
and
xchg
pop
xor
mov
shrl
movsb
push
inc
dec
and
int
push
xchg
sbb
addr16
dec
inc
cmp
repz
xor
push
push
stos
cmp
adc
mov
stos
pusha
icebp
inc
push
cmc
adc
inc
mov
cld
xorl
dec
xchg
outsl
push
out
pop
gs
lods
ss
push
imul
cmp
lods
shrl
mov
dec
jp
lret
cmpsb
fs
xchg
inc
pop
inc
in
fsts
imul
aas
insb
enter
cltd
pushf
outsb
inc
rol
sahf
adc
out
sbb
or
xchg
mov
ret
test
adcl
dec
stc
hlt
iret
mov
push
adc
adc
mov
lcall
cmp
inc
pop
lds
movsb
stc
loopne
into
jle
in
inc
push
loopne
movsb
push
xchg
fcmovb
xor
push
jmp
nop
fwait
stos
loop
clc
adc
fidivs
ss
iret
push
lahf
test
mov
mov
jnp
xchg
push
xchg
jb
dec
stc
bound
in
clc
das
push
dec
hlt
mov
js
xchg
adc
paddusw
push
xchg
out
xor
xor
xchg
dec
pop
in
pop
and
push
out
mov
push
imul
cmp
and
jns
cmpsl
jne
addr16
mov
xchg
mov
cmp
movsl
adc
and
xor
div
repz
or
lock
dec
pop
mov
cmp
mov
add
mov
adc
cmpsb
and
sub
sbb
inc
test
mov
repz
cmp
in
push
in
ret
fwait
mov
stc
addr16
scas
je
sbb
pop
mov
lods
adc
inc
mov
xchg
mov
mov
adcl
aaa
dec
inc
mov
or
xchg
mov
push
adc
stc
add
lds
dec
aad
loop
push
jg
dec
test
shlb
mov
iret
sub
cmp
inc
push
sub
pusha
inc
fnstcw
mov
repz
sub
pop
cmp
fiadds
inc
xor
lods
sub
out
or
test
cmp
cli
jmp
test
and
test
adc
inc
push
insl
jl
hlt
ret
xor
push
daa
jp
inc
dec
cmp
sbb
jno
mov
rcrb
jnp
push
mov
push
xor
rorl
dec
jge
repz
lea
or
dec
ret
in
out
dec
push
adc
add
subb
les
nop
fldenv
dec
mov
mov
daa
das
add
cmp
push
iret
mov
jecxz
jb
test
js
push
movsl
cmp
ds
aam
mov
push
mov
sahf
pop
aaa
push
adc
mov
cmp
add
repz
or
and
jg
jne
and
add
es
sbb
popf
in
movsl
aaa
sbb
mov
xor
aad
jmp
adcl
xor
into
mov
dec
add
and
cli
or
dec
mov
lea
mov
dec
xchg
jmp
aaa
js
jmp
mov
cmp
out
iret
fnsave
jmp
jno
test
lock
sbb
dec
inc
fimuls
lods
cld
out
push
leave
fmull
push
or
and
sub
mov
lock
and
mov
xchg
pop
std
fcomps
inc
xor
cmp
mov
push
sbbl
fbld
hlt
and
jle
xchg
mov
adc
int
jae
sbb
pop
add
pop
mov
shll
cmp
sub
std
js
popa
pop
outsb
lock
inc
pop
shrb
jae
xchg
sahf
dec
mov
mov
jae
cmp
inc
pop
push
cmc
dec
pop
mov
lea
sbb
ljmp
popa
loop
mov
dec
push
mull
jge
ds
mov
lock
int3
push
pop
or
mov
scas
dec
into
divps
sbb
dec
fildl
scas
pop
imul
xorl
cmpsb
xor
lods
iret
jno
pop
sbb
stos
lock
pop
test
push
shrb
mov
int3
mov
push
cmp
pop
pop
jge
jmp
cwtl
sub
xchg
mov
mull
out
aam
pop
js
imul
mov
or
pop
mov
jmp
testb
xor
pop
cmp
jae
cltd
filds
jmp
pop
divl
rcrb
xor
push
push
lds
sub
repnz
mov
in
aas
aad
dec
loop
cwtl
or
mov
loope
jp
in
shr
nop
pop
jecxz
push
icebp
out
sub
inc
lcall
pop
cmp
in
xchg
cmp
in
add
and
scas
add
ja
dec
out
mov
mov
int3
popf
shl
mov
sbb
fs
dec
lret
jle
sub
mov
jmp
jns
loop
subb
jge
clc
stc
or
or
movsb
adc
mov
pusha
pop
shll
int3
add
insb
pop
ret
mov
imul
inc
adc
xor
movsb
ljmp
repnz
xor
mov
mov
imul
mov
scas
leave
lret
dec
cmc
jp
sti
push
mov
pop
jno
jle
repnz
insb
jg
mov
clc
mov
mov
xchg
sub
jo
sub
mov
pop
scas
mov
pop
adc
inc
out
fst
jl
repz
inc
insl
inc
pop
xor
sahf
xchg
divb
sub
push
lcall
and
shlb
movsb
cmp
push
and
aad
mov
adc
xor
sub
in
jmp
xchg
push
repz
lods
notb
rcr
rclb
jmp
repnz
and
jmp
gs
or
mov
push
test
push
or
imul
pop
js
rcr
gs
je
subl
pusha
dec
inc
movlps
xchg
xchg
dec
mov
cli
data16
xlat
xchg
mov
ds
lea
push
les
pop
push
flds
bound
test
les
movaps
sti
stc
shlb
jge
sbb
repz
into
sub
and
mov
push
xor
aam
add
nop
out
xor
xor
mov
xor
movsb
aad
insb
sub
fsubs
dec
cmp
sahf
das
lret
mov
adc
push
rclb
mov
push
gs
test
inc
inc
jle
mov
cmp
adc
xchg
mov
loope
sub
std
pushf
pop
out
test
icebp
pop
mov
mov
sbb
sbb
stos
cli
out
push
jns
sahf
popf
pop
mov
sbb
adc
inc
cmpb
xor
imul
pop
and
rcll
mov
sbb
ja
out
xchg
jg
pop
jnp
inc
stos
push
inc
rorl
test
rcrb
mov
imul
push
pop
xor
out
sbb
lret
adc
sub
movsl
mov
fists
addb
rep
sbbl
outsb
nop
cmpsb
out
cld
dec
ss
mov
das
xchg
ret
sbbl
outsb
jp
or
mov
test
popf
and
js
imul
or
shr
adc
xor
xchg
or
sbb
lahf
jge
mov
notb
adc
and
loope
mov
sbb
cmp
and
jmp
mov
pushf
andps
in
das
leave
cmpsb
pop
push
xchg
popa
cmp
mov
das
in
aaa
sbb
cmp
pop
movsl
int
rorl
out
dec
je
lods
mull
pop
lahf
popf
pusha
adc
les
jbe
repz
pop
jmp
xchg
add
call
cld
subl
stc
sbb
lret
aas
lahf
dec
aas
fsubrs
push
leave
sbb
scas
repnz
lahf
insl
cld
inc
and
add
enter
cmpsb
in
lea
sbb
or
add
sahf
jne
xchg
daa
dec
test
push
arpl
xor
xchg
mov
xchg
mov
stos
mov
adc
jmp
faddl
pop
xchg
pop
dec
xchg
jb
pop
push
cli
or
sub
or
sub
sti
and
rolb
inc
or
inc
je
adc
mov
mov
mov
or
sub
and
ret
fs
int
je
inc
imul
notb
fsubl
lea
repz
mov
int
jg
sbb
leave
mov
leave
jg
rol
push
mov
or
shrl
imul
int
test
inc
orl
mov
add
popf
adc
mov
push
inc
or
sbb
hlt
popf
sbb
sub
iret
xlat
push
mov
cli
int3
out
xor
jge
sbb
add
mov
inc
mov
xor
stos
lret
jmp
jns
stos
psrlw
or
or
push
or
xchg
push
leave
test
pop
cmp
hlt
jmp
inc
addl
adc
into
pop
jb
mov
sbb
add
push
sub
sub
inc
out
inc
mov
mov
xor
daa
rcll
les
jle
xchg
lea
or
orb
adc
and
shrb
push
pusha
stc
mov
or
scas
repz
add
popa
add
and
ljmp
mov
mov
xor
xor
xor
push
xorb
push
imul
out
push
adc
and
cltd
xchg
push
imulb
xchg
jno
cmp
push
fisttps
hlt
jp
nop
outsl
adc
or
fsubrp
popf
leave
mov
mov
xlat
ljmp
dec
pop
adcl
fdivs
pop
cmp
push
and
and
xchg
shl
add
xchg
bound
in
push
add
ja
dec
adc
in
gs
dec
enter
out
push
aad
je
mov
fcoml
scas
push
lock
imul
dec
mov
mov
pushf
dec
movsl
xor
push
push
cmp
jg
jl
or
jecxz
dec
pop
inc
adc
je
ds
adc
fisubs
adc
call
fucomp
mov
sbb
lock
cmp
xchg
mov
fsts
xor
mov
and
pop
xor
out
push
outsw
cmp
xor
and
pushf
mov
inc
inc
les
dec
add
cmc
jae
out
push
je
ljmp
jns
leave
lret
inc
or
popf
lahf
andb
cli
push
adc
and
jle
ret
cmp
fisubrl
idivl
lahf
clc
dec
rcrb
jnp
clc
cli
mov
cld
je
inc
stos
jecxz
pop
xchg
test
sbb
fisttpll
call
shrb
sub
test
jl
jo
and
mulb
mov
outsb
xor
pop
lods
loope
pushf
andl
int3
inc
in
push
or
test
into
inc
rorb
pop
add
mov
mov
test
cmp
add
leave
pop
jmpw
sub
or
xlat
daa
aam
in
or
sub
sar
ja
or
xor
arpl
lea
push
icebp
in
mov
inc
in
sbb
out
lods
sub
lock
jp
out
adc
mov
mov
mov
or
mov
sbb
addr16
mov
push
mov
out
out
sub
lcall
or
ds
mov
adc
or
imul
enter
adc
sbb
std
pop
pusha
cltd
fldt
lea
push
xlat
je
push
imul
nop
add
push
pop
mov
lds
sub
jle,pt
pop
jae
hlt
push
daa
arpl
stc
mov
lods
imul
sahf
add
sbb
pop
mov
sbb
or
jecxz
daa
mov
outsl
pop
jne
sub
adc
or
in
int
cmp
fstpl
mov
lods
fs
cltd
dec
call
cmpsb
mov
mov
stc
or
pop
adc
adc
sbb
dec
inc
or
je
stc
jl
not
and
ds
lret
mov
mov
xor
dec
stos
and
clc
inc
test
stc
movsl
jno
inc
in
pop
xchg
xor
jo
jns
mov
gs
cli
and
popf
mov
or
mov
cmc
pop
jnp
hlt
mov
lods
inc
pop
or
loopne
sub
push
movsb
or
and
sbb
jp
sub
push
fcomi
xor
les
daa
lock
ret
inc
enter
lock
jb
sub
xor
lock
test
subb
xor
fwait
int3
jno
lock
notl
arpl
mov
dec
pop
jecxz
adc
cmpsb
lcall
out
xor
xchg
dec
lock
push
xchg
mov
dec
scas
daa
sbb
jmp
mov
hlt
sbb
pop
out
mov
mov
in
xchg
cmpsb
add
mov
jo
std
add
or
xchg
int
lret
fiaddl
addr16
sti
pop
push
lea
aas
fisubl
inc
outsl
in
pushl
test
jge
repz
mov
ds
pop
in
adc
xor
cmp
jecxz
inc
and
sub
or
imul
js
lcall
sahf
sbb
rol
mov
movsl
lret
mov
shll
push
repz
je
xchg
stos
mov
mov
scas
call
imul
xchg
shrb
mov
fsubrs
ret
lret
sbb
sbb
xor
clc
ret
jge
sub
psubusw
lret
inc
jle
dec
inc
jbe
cmp
cmp
push
pop
add
in
popf
xor
mov
aad
sbb
pushf
je
inc
sarb
mov
std
mov
in
mov
gs
xor
cwtl
dec
xchg
pop
call
scas
push
ljmp
insl
gs
pop
jp
add
ds
pop
lods
jecxz
adc
je
xchg
hlt
rcr
jno
mov
in
cmpsl
iret
jo
jecxz
je
mov
add
gs
rclb
bound
fmulp
dec
jl
cwtl
jle
addl
sbb
sbb
and
cwtl
sbb
and
dec
xchg
dec
push
cmp
add
test
mov
cmp
xor
mov
test
mov
push
movsl
int3
jge
cld
sub
or
shll
stos
stc
daa
enter
or
icebp
xchg
dec
mov
out
cli
push
xlat
outsl
push
xor
push
pop
imul
test
sub
jnp
clc
sub
pop
cmc
push
addr16
jb
cld
je
mov
aas
int3
fwait
loop
mov
sub
jae
ja
lds
xor
mov
je
nop
and
sbb
jl
jl
scas
test
in
mov
mov
xchg
cld
or
sbb
icebp
inc
es
push
cmpl
test
lret
cs
cmp
xchg
xor
outsl
pushaw
mov
push
inc
cld
dec
in
mov
xchg
mov
into
mov
add
xor
bnd
xchg
adc
mov
push
inc
pop
mov
out
or
into
dec
xchg
popa
adc
add
adc
inc
arpl
lock
movsl
hlt
adc
loop
insl
mov
mov
call
dec
rcrl
bound
adc
int3
mov
clc
jae
cmp
or
mov
fs
es
movsl
and
outsl
xor
sbb
lahf
ja
mov
mov
imul
push
pop
imul
fisubl
subl
mov
adc
jne
jnp
mov
test
mov
pop
sahf
mov
jecxz,pt
xor
daa
ljmp
mov
stc
lret
sbb
imul
sbbb
ret
insl
lahf
outsb
mov
mov
out
pop
gs
mov
mov
add
ss
mov
mov
adc
jmp
mov
test
push
cwtl
js
andb
lret
mov
xchg
mov
and
fldt
sub
loope
in
pop
add
dec
stc
test
hlt
roll
stos
mov
ucomiss
mov
cltd
adc
push
xchg
arpl
mov
push
mov
push
in
push
in
dec
cmpsl
lahf
iret
filds
jge
xchg
aas
and
in
mov
test
xlat
jne
xchg
and
mov
fs
mov
je
subb
mov
add
dec
loop
loop
push
clc
bound
loop
popa
push
cltd
mov
fcmovu
sub
and
cmpsl
xchg
push
xor
icebp
repz
push
cmp
dec
xlat
mov
jecxz
xor
bound
push
pop
out
add
das
xchg
lea
sub
ljmp
and
push
adcb
lods
mov
jmp
lahf
aas
pop
sbb
pop
xlat
scas
pop
mov
xor
lods
lret
les
inc
push
sub
adc
inc
add
adc
push
cmpsb
rorl
in
dec
sbb
mov
lcall
hlt
lret
cmp
cmp
outsl
lret
dec
addr16
inc
cmp
mov
xchg
jo
cmc
fwait
xchg
mov
in
cmp
pusha
jle
icebp
dec
lods
test
and
imul
mov
jo
push
xchg
xlat
das
pop
xchg
cwtl
inc
or
js
fcomi
aaa
and
sub
dec
mov
mov
outsl
xor
scas
cmpsb
push
adc
cmc
mov
inc
fdivrl
roll
ds
pop
out
int
add
rcrb
sbb
pop
loope
push
out
mov
push
rolb
std
add
sahf
inc
idivl
pushf
adc
lret
cmp
mov
aaa
es
sbb
add
stos
shll
sti
mov
jl
or
repz
pop
sub
out
push
xchg
shlb
in
xchg
unpckhps
cs
cwtl
mov
adc
and
push
outsb
sahf
rorl
mov
sub
imul
mov
push
test
mov
sub
jo
adc
xor
movsl
out
sbb
movsl
loop
out
mov
push
adc
out
xchg
xchg
xchg
lret
pop
outsl
inc
mov
ret
sub
pushf
adc
imul
in
and
das
or
cmp
lods
and
in
cmp
pop
cwtl
xor
mov
popa
sahf
in
jno
jne
xchg
push
cld
das
push
and
mov
inc
mov
pop
add
xor
adc
repnz
enter
pop
jne
mov
mov
ss
xchg
sub
pop
xor
jbe
ficoms
jno
scas
filds
loopne
mov
mov
popa
test
sbb
jl
inc
push
sub
cmp
xchg
dec
orl
mov
shlb
and
lods
rcrb
sahf
in
fimuls
mov
dec
cmpsb
pop
lods
xor
xor
adc
repnz
push
loope
jb
cwtl
mov
ds
sbb
int
xor
jecxz
xlat
out
js
pop
notl
sbb
push
xlat
test
sub
aam
imul
popf
outsl
xor
push
lds
cmp
fdivs
loop
and
pop
iret
aaa
mov
xchg
xchg
sarl
lea
cld
dec
movsb
xor
cmpl
nop
mov
fcmovbe
mov
outsl
pop
sbb
inc
enter
rcrb
mov
mov
pusha
les
dec
hlt
out
divb
push
scas
dec
imul
stos
int
dec
cmc
and
popa
test
cmpsl
in
imul
pop
lcall
jmp
popa
out
mov
push
fildl
sub
adcb
push
pop
aas
dec
aaa
or
popf
mov
xor
xchg
and
out
sub
sbb
sub
inc
mov
adc
inc
adc
adc
xchg
cmpsl
imul
fs
pop
or
inc
pop
mov
rorb
push
int
movsb
pop
sbb
lds
adc
or
enter
outsb
out
push
popa
add
loop
lcall
lcall
and
leave
pop
dec
jns
les
je
scas
xor
pop
cli
mov
adcb
adc
or
mov
daa
sarl
dec
xor
std
stos
lea
fisttps
jmp
out
mov
add
aad
jecxz
ljmp
and
push
in
mov
stos
or
mov
addb
jl
cmp
loope
lods
movsb
outsl
cs
xor
dec
mov
movsl
insl
or
adc
mov
cmp
adc
jmp
jns
and
mov
cs
int
lret
test
or
push
mov
fmull
nop
cmp
push
mov
leave
mul
or
or
dec
leave
jle
add
pop
insb
add
int3
mov
sahf
lods
mov
adc
mov
mov
push
mov
push
push
cmpl
push
xor
sbb
push
fsubr
pop
clc
ss
inc
xchg
jno
add
xorb
outsb
push
sub
mov
inc
inc
or
sarl
lods
out
gs
cs
mov
addr16
in
xchg
sbb
mov
inc
imul
mov
cmpl
in
rcrb
dec
sahf
cmp
push
movb
mov
sbb
dec
xlat
out
jbe
pop
movsl
xchg
stc
outsb
pop
pop
mov
mov
cmp
jp
sbb
jg
sub
push
jns
insb
mov
mov
and
pop
rcll
mov
sbb
inc
and
popf
cld
ja
jne
mov
scas
jnp
mov
pop
push
and
push
stc
mov
lods
or
into
imul
jno
push
aas
dec
jnp
clc
pop
or
lret
out
enter
iret
and
cmp
out
loope
xor
loop
rclb
insb
dec
dec
mov
std
clc
rorl
mov
outsb
ret
mov
std
mov
cmpsl
cli
dec
cmpb
pop
ljmp
out
out
cwtl
cmp
aad
jl
insb
mov
decl
enter
cmpl
and
xor
rcrb
scas
inc
dec
xchg
cmp
cmp
test
out
mov
testb
loope
movsl
xchg
sub
pushl
pop
jns
cmp
mov
cmp
mov
mov
ss
lods
sub
test
icebp
sti
dec
mov
push
or
dec
ss
push
xchg
mov
je
bound
mov
insl
and
sub
into
pop
or
jmp
inc
test
out
scas
pop
pop
jecxz
jo
adc
call
adc
inc
mov
push
mov
add
mov
push
mov
xchg
cmp
mov
cltd
ss
fistpll
lds
xchg
adc
out
or
ret
hlt
sti
lret
cli
jnp
stos
push
in
je
push
ret
ret
jl
push
cli
or
inc
jmp
lea
xchg
mov
pop
lret
or
xchg
int3
out
nop
push
js
lret
cmp
push
ljmp
mov
outsl
mov
push
jp
xchg
add
les
sub
cmp
lods
notb
push
fwait
xor
mov
push
stos
into
mull
mov
jge
ret
sbb
popa
cmp
cmp
xor
in
js
cmp
mov
xchg
repz
ljmp
jle
scas
loopne
or
dec
cmp
data16
test
xchg
mov
movsb
icebp
int3
adc
add
dec
inc
aaa
lea
mov
imul
dec
in
dec
pop
or
sub
xorb
or
out
cmp
xlat
lock
mov
das
sarl
pop
fimull
aam
out
adc
sub
mov
cmp
push
rclb
adc
lret
or
dec
pop
fs
ja
inc
xor
movsl
mov
xor
mov
push
sub
dec
data16
dec
push
les
or
xor
xor
es
add
rcl
aad
push
rorl
pop
xchg
daa
sub
inc
cmp
out
popf
push
fwait
or
sbb
sbb
mov
sbb
imul
int3
cwtl
mov
scas
xor
es
shlb
adcb
pop
out
sbb
repnz
lcall
cs
and
stos
insl
xchg
lods
mov
jmp
rcr
cmp
imul
fs
xor
jp
leave
imul
and
xor
aaa
or
repnz
add
pop
lods
fnstsw
iret
and
ljmp
xor
adc
pop
hlt
enter
adc
inc
lods
adc
pusha
dec
xchg
out
sub
popf
mov
popf
ss
shr
cmp
or
int
push
inc
lods
fnstsw
mov
int3
sbb
cmp
jp
jmp
inc
cmp
mov
cmp
sub
icebp
push
mov
sti
ljmp
je
test
jo
cmp
rcrb
lret
dec
pop
and
sbb
out
jne
xlat
xor
out
xchg
xchg
shll
inc
pop
mov
pop
and
add
push
lods
mov
int
arpl
xchg
mov
leave
sub
bound
push
inc
insb
btcl
cmp
or
push
xchg
pop
nop
in
dec
je
mov
sub
popf
insb
or
jl
push
mov
in
mov
mov
or
mov
xorb
mov
ss
push
add
inc
inc
push
sbb
xlat
and
loope
scas
mov
xchg
pop
dec
mov
mov
cs
cmpsb
push
mov
out
mov
je
fadd
push
sub
int3
aam
mov
adc
mov
mov
mov
pop
mov
mov
popa
fwait
push
test
cltd
lret
scas
pop
ja
pop
fisubl
xchg
stos
into
and
bound
test
pop
or
shll
add
cmp
and
add
jmp
in
movsl
adc
loope
inc
int3
sub
xchg
aad
or
mov
push
enter
jae
leave
mov
inc
sub
repnz
and
adc
stos
adc
xchg
pushl
ljmp
dec
gs
xor
out
or
mov
test
in
dec
outsb
sbbb
mov
into
fstpt
test
jbe
xchg
addr16
out
mov
sub
mov
adc
js
in
pop
shrb
cli
sbb
jp
ficompl
jl
or
shrl
lret
outsb
inc
ljmp
out
dec
dec
mov
ss
addr16
inc
xlat
movsb
mov
push
hlt
mov
dec
mov
mov
in
xor
cmp
das
sahf
inc
jmp
mov
outsl
and
scas
push
cmpsb
sbb
mov
in
in
aam
pop
cmp
dec
lds
clc
cmpsl
sub
test
add
loope
stc
mov
fidivrl
cmp
jmp
mulb
fnstcw
lds
psubusb
jmp
sub
sub
out
sub
pop
lock
sub
int3
sbb
adc
jl
dec
in
mov
inc
mov
int3
or
test
xchg
ds
inc
cmpsl
pop
loopne
lds
sub
pop
test
inc
in
push
jg
lods
xchg
adcb
sti
in
dec
es
dec
lret
cs
lea
sbb
aad
mov
or
or
jg
fwait
scas
inc
and
ljmp
pop
jecxz
fistps
xor
jl
xlat
sbb
jecxz
push
push
xchg
push
cmp
sub
arpl
adc
cltd
inc
popf
cmp
in
test
sub
xor
cs
push
inc
imul
lods
push
imul
cltd
and
inc
addb
or
pusha
test
lahf
lods
cmp
nop
or
pop
scas
sti
rorb
ja
adc
dec
pushf
lcall
dec
adc
pop
je
jo
inc
mov
aam
mov
jno
jne
cmp
stos
pop
push
fcoms
add
or
dec
sub
test
lods
ja
jae
std
mov
ficoml
in
xchg
jae
dec
insl
arpl
add
push
xor
out
das
adc
adc
xchg
stos
insb
lods
std
fistps
and
loope
ja,pn
lret
mov
inc
xlat
scas
mov
movsb
out
mov
push
es
and
ja
push
std
mov
pop
lret
ficoms
sbb
sub
xchg
add
cmpb
cmp
jne
popa
test
add
popf
int
out
in
dec
scas
les
popf
mov
dec
jb
mov
arpl
pop
ss
pushf
lds
gs
cmove
mov
xor
in
adc
lahf
pop
xor
js
data16
cmp
mov
and
insb
adc
mov
movsb
fwait
int3
stos
in
push
stc
es
cmp
mov
mov
test
lret
cwtl
push
cs
es
imul
icebp
fmul
jp
shll
inc
xor
insb
fwait
dec
fucomip
adcb
xlat
iret
in
pop
xchg
int
jb
ljmp
scas
out
xor
loopne
cmc
add
clc
pop
pusha
mov
cmpsb
push
dec
add
ja
cmp
dec
mov
pop
fdivl
sti
pop
cmp
and
std
jae
mov
inc
aam
test
out
aam
lds
aaa
dec
xor
pop
sub
push
adc
pop
mov
and
fdivs
jg
xchg
aad
addb
hlt
insb
jl
mov
sbb
arpl
loope
mov
mov
aaa
das
aad
mov
iret
xchg
dec
or
adc
js
jne
cmp
jl
adc
xchg
xchg
fnstsw
and
out
pusha
pop
dec
lret
push
pop
cmp
in
or
push
sar
imull
subl
pop
enter
jb
shlb
jle
add
rol
xchg
jno
cld
ljmp
fsubrs
or
cli
enter
xlat
sub
jecxz
int3
jbe,pn
mov
mov
popf
sub
push
mov
sbb
sarl
mov
dec
cwtl
pop
sahf
cmp
and
js
nop
pop
stos
xchg
cmpsl
cmp
fwait
jo
pop
dec
inc
jno
nopl
push
inc
mov
shl
mov
mov
push
jne
pop
pusha
jno
cmpsl
xchg
jl
jmp
lahf
sbb
les
aas
mov
push
ds
cwtl
push
and
les
pop
inc
inc
imul
sub
mov
sbb
ljmp
jle
or
xchg
or
mov
sbb
pop
sub
mov
inc
pop
fcoml
xor
sub
add
icebp
add
lret
movsb
or
movsl
loopne
das
enter
mov
or
test
ds
loop
adc
dec
test
pop
mov
enter
aad
shrb
xlat
and
sbb
sub
mov
test
inc
mov
int3
pop
cmp
adc
or
in
jne
cmpl
dec
push
xlat
sbb
test
stos
into
insl
repnz
and
push
shlb
subl
ja
xchg
or
mov
pop
idivl
xchg
pop
idivl
and
cmpsb
cld
out
loope
sub
adc
xchg
outsl
sbb
aaa
add
cmpl
je
bound
cmp
sub
mov
dec
xchg
sub
arpl
lret
out
add
jns
fstpl
inc
test
fsubr
xlat
test
mov
lea
clc
dec
sbb
or
push
aad
ljmp
sbb
push
bound
pop
cmp
xchg
rolb
shl
sub
nop
add
stos
cmpsl
mov
push
sti
xor
xchg
adc
dec
mul
roll
xchg
inc
xchg
add
into
inc
mov
stos
xor
js
loope
int
rcrb
jp
add
cs
movsb
je
dec
es
icebp
inc
testl
push
pushf
cs
out
sahf
fld
rcll
add
outsl
push
lock
addr16
and
es
xor
std
out
fldt
cwtl
inc
push
xchg
movsl
xchg
hlt
nop
mov
or
and
movsb
in
adc
push
outsl
push
push
cmpsl
mov
js
jno
subb
std
outsb
and
xor
icebp
test
adc
lods
dec
lds
out
mov
jmp
rep
out
out
fwait
ret
aam
lods
sahf
xchg
adc
xor
adcl
adc
iret
gs
sub
into
push
xchg
lcall
sar
mov
stc
mov
or
inc
aaa
pop
sti
jne
inc
dec
je
lods
xchg
insb
push
into
shlb
mov
sbb
adc
fwait
std
fsub
ret
popa
dec
mov
sbb
daa
lea
cmp
push
add
push
in
pop
jo
cmp
lock
push
shlb
inc
ret
pop
decl
mov
enter
jnp
and
adc
testb
das
push
cltd
iret
cmc
jae
mov
xor
push
arpl
dec
fwait
xor
and
outsl
jno
or
cs
leave
test
xor
outsb
or
xor
mov
dec
icebp
and
mov
adcb
js
push
int3
popf
fsubrs
jecxz
fistps
inc
std
inc
xchg
loop
fucomi
inc
shrl
add
sahf
jne
mov
pop
or
dec
arpl
adcb
cwtl
ror
and
xor
insb
ljmp
dec
cld
and
jno
repnz
mov
xchg
lds
shll
mov
add
lods
enter
stc
jge
ja
lahf
inc
xor
cmp
push
nop
sbb
jmp
lret
fadd
mov
push
mov
sti
inc
pushf
mov
je
xchg
aam
add
sub
push
popa
xlat
inc
negl
cltd
stos
mov
fisubrl
xchg
sub
scas
dec
js
sbb
in
mov
adc
js
cltd
jecxz
jae
adc
imull
andl
ret
scas
stc
push
ret
lret
xchg
fwait
in
sbb
js
fdivs
shlb
insb
mov
jns
stc
cld
cs
and
cmp
and
xchg
or
jb
testb
fdivrs
mov
fwait
movsl
outsl
push
xor
dec
pusha
ret
jbe
mov
leave
mov
inc
pushf
cmp
pusha
clc
scas
out
daa
cwtl
pop
shrb
xor
stc
stos
mov
add
and
int3
stos
std
ds
pop
push
cltd
dec
in
fisubrl
fbstp
aas
adc
out
lods
adc
sbb
lods
inc
sub
sub
ljmp
pop
mov
ficompl
mov
xor
loop
sti
mov
xlat
inc
jmp
mov
es
inc
lds
or
pushf
call
pop
and
push
jmp
std
stos
clc
xor
outsb
mov
push
mov
mov
dec
sbb
jmp
cs
fildl
in
xchg
icebp
bound
fs
or
inc
stos
inc
mov
add
dec
or
and
dec
cmp
xor
mov
mov
jg
jecxz
scas
stos
pop
into
aas
sub
je
xor
div
cmp
lods
sub
pusha
dec
out
push
mov
mov
dec
adc
push
clc
jg
mov
add
pop
shlb
sbb
cmp
jo
sbb
xchg
je
push
iret
mov
hlt
pop
aaa
sarl
dec
cli
sbb
sahf
ficomps
ljmp
leave
mov
pushf
add
pop
movsl
outsl
js
cltd
jnp
mov
jno
insb
mov
test
stc
mov
js
cmpl
cld
mov
jbe
adc
jg
aad
dec
scas
sub
test
sbb
sub
push
cld
sub
testb
pop
xor
test
dec
mov
mov
repz
cld
push
in
adc
repz
lods
ret
pop
inc
add
aas
jo
inc
jp,pt
push
mov
enter
sbb
lock
sbb
inc
loop
fstpl
sahf
pushf
add
push
mov
mov
mov
xchg
stc
out
data16
dec
pop
icebp
ret
inc
and
pop
cmpb
push
aas
pop
and
lods
cld
push
mov
jp
jo
js
jnp
fiaddl
push
leave
xor
sarl
push
adc
repnz
sub
mov
movsl
xchg
ret
dec
pop
shlb
stc
mov
or
fwait
push
mov
cmc
scas
adc
pop
iret
imul
lods
outsl
inc
jg
pop
mov
dec
or
adc
cmp
cmp
cmc
sbb
fisubs
movsb
xchg
mov
in
mov
jle
es
add
mov
inc
push
cld
push
aad
dec
ss
lods
push
xchg
inc
sub
cmp
xchg
pop
dec
add
orb
es
sub
mov
lret
ds
sub
mov
arpl
scas
insl
aaa
or
negl
sbb
xchg
in
imul
mov
and
xchg
insl
cmc
cld
daa
inc
cmc
inc
xchg
iret
xchg
test
jp
cmp
sub
xchg
fwait
rorb
aas
pop
es
and
cmp
mov
xlat
adc
stos
or
aas
pushf
and
sbb
jge
js
or
imul
push
lret
and
mov
jno
mov
inc
push
fsts
enter
mov
in
dec
je
push
mov
inc
arpl
lods
pusha
data16
rcll
and
outsl
lock
mov
mov
sbb
jge
js
mov
das
xor
adc
sahf
dec
xor
imul
cmp
mov
add
mov
adc
add
cwtl
add
out
aas
adc
jmp
dec
ljmp
and
mov
rcrb
push
and
add
xor
cmp
or
paddsb
jne
insl
cmp
cs
sub
xor
mov
movsl
or
inc
outsl
xor
popf
nop
add
in
push
aad
out
inc
addr16
pop
mov
cmc
jae
and
inc
pushf
imul
lea
cmp
push
mov
insb
add
js
es
fs
push
xchg
insb
hlt
xor
test
es
inc
cmp
inc
xor
push
shl
pop
push
insb
fs
sbb
outsb
shr
hlt
xor
shl
add
mov
or
jp
rcll
fdivrp
fisttps
cmp
inc
stos
sbb
jecxz
movsb
push
das
testb
jp
sub
arpl
fisttps
push
pop
mov
pusha
stos
adc
jno
arpl
les
sbb
fistpl
or
fscale
mov
cmpsl
hlt
insb
inc
inc
lea
fdivrs
cmp
dec
data16
mov
imul
push
lds
hlt
add
mov
inc
sbb
and
sub
mov
xor
insl
loop
cltd
mov
addb
push
cwtl
aad
inc
test
enter
adc
jmp
dec
mov
pop
sub
or
shll
dec
loope
sub
pop
xor
cmpsb
hlt
cmp
cmp
lahf
pop
adcl
push
jmp
imul
insl
jg
inc
pop
clc
nopl
sub
jns
xchg
mov
mov
mov
adc
fwait
cmpsl
shll
aas
cmp
xor
testb
xor
movsb
dec
jmp
adc
fnsave
fucomip
cmp
ljmp
jnp
mov
jnp
push
es
enter
sub
imul
mov
mov
je
lds
jl
hlt
inc
outsl
out
test
roll
cltd
sub
sahf
test
sarb
fcmovne
inc
addr16
dec
fistpll
jnp
jne
mov
dec
or
hlt
movsl
nop
mov
mov
mov
in
dec
repz
adc
lods
jbe
mov
fst
mov
mov
sub
loop
jno
adc
and
loop
imul
inc
lds
aas
repz
add
or
xlat
mov
outsb
shlb
push
mov
sbb
shr
jnp
sub
dec
ljmp
fwait
popf
lds
js
xor
inc
cmpsl
clc
les
cmp
xchg
fstps
cs
or
into
xlat
add
add
icebp
mov
cli
mov
xor
cmpsb
push
mov
divl
sub
ljmp
test
mov
mov
pop
push
mov
loope
or
pop
add
sub
mov
cli
add
push
or
jmp
xor
popf
ds
and
dec
ljmp
mov
les
in
lock
pop
and
adc
imul
shrl
mov
lea
or
add
jle
loope
stc
or
cmp
jo
aas
enter
cs
lods
adc
lods
stos
icebp
mov
pushf
sysenter
movsb
orl
cld
gs
nop
mov
loope
gs
shrb
dec
pop
std
pop
lock
mov
inc
xchg
jg
jnp
lock
fs
clc
adc
lods
and
inc
hlt
fildll
repz
xor
push
dec
mov
mov
pushf
sahf
push
repnz
cwtl
adc
cltd
and
cmpps
in
cld
add
sti
sbb
std
or
xor
mov
sub
ret
mov
inc
rcll
xor
mov
or
add
popa
mov
aaa
mov
xor
sahf
xchg
lds
cli
add
pop
call
and
and
movsl
and
mov
sti
lea
out
pusha
rolb
sub
xchg
or
loop
mov
pop
fld
int3
cmp
stos
push
stc
adc
shlb
pop
mov
dec
insb
movsl
xor
dec
cmp
test
loopne
mov
jmp
jge
rcrb
mov
sbb
dec
jp
jg
xor
loope
or
test
mov
jmp
pop
push
and
out
lret
sub
mov
jp
push
xchg
pop
add
mov
movsb
mov
adc
imul
std
push
pop
jae
sbb
cmpsl
jg
mov
imul
fstps
aas
push
xlat
pop
pop
movsl
pop
xor
pushf
addr16
in
cmp
bound
inc
xchg
sub
loopne
push
and
jo
jl
cmp
stos
jb
xor
inc
gs
lret
cmpsl
dec
lret
adcb
push
adc
inc
test
xchg
test
jmp
das
stos
fs
shl
push
rcrl
stc
aaa
dec
lcall
pop
or
int3
lret
push
iret
in
xchg
xlat
out
leave
mov
cli
cmpb
xor
ret
mov
cmc
dec
sbb
popa
mov
or
inc
push
or
mov
and
push
xchg
adc
adc
fwait
test
cmp
xor
cmp
xor
lahf
lods
or
jnp
pop
push
andl
jl
addr16
out
aam
pop
sub
dec
mov
dec
sub
ds
push
and
cmp
sti
fdivr
adcb
cmpsl
xchg
mov
mov
sub
inc
dec
push
add
mov
mov
popa
push
inc
mov
sarl
ljmp
pop
stos
cmc
ja
imulb
mov
mov
cs
js
jns
push
xchg
cmpsb
jne
std
leave
push
inc
jbe
adc
aad
lcall
mov
cltd
rorl
inc
xchg
mov
call
stc
fistl
and
xor
jg
out
add
xor
test
divb
jge
cs
jb
insl
lds
in
fs
mov
stos
pop
je
loope
repnz
ret
int3
xchg
inc
dec
xchg
lds
outsb
int
testl
or
popa
pop
loopne
lret
aaa
fdivr
sbb
notb
sbb
dec
jne
hlt
push
pushf
movsl
sub
insb
into
test
lahf
cli
lahf
fstp
iret
cmpsl
mov
lods
call
orl
cmp
pop
int
or
cmp
or
push
xchg
cmp
and
jbe
add
cmp
and
clc
xor
lea
push
lcall
xor
lods
pop
loop
sub
cmp
mov
inc
xchg
pop
lods
xchg
adc
adc
push
mov
fwait
ror
lods
mov
mov
rcrl
or
or
stos
dec
jl
leave
lods
jnp
pop
jno
inc
std
outsl
leave
inc
lahf
sbb
cltd
cmp
lcall
loopne
add
and
jecxz
and
fucomi
push
nop
dec
dec
push
jecxz
or
add
xor
or
xchg
jl
dec
or
notb
push
dec
out
popa
push
jb
and
sbb
stc
jecxz
sahf
fwait
popl
and
or
sti
xchg
mov
and
xchg
rcl
sub
enter
shll
lds
or
insl
jle
xor
mov
xor
add
sti
jno
pop
cmpsb
mov
mov
jo
aad
adc
popa
sub
jge
or
add
arpl
clc
cmc
aaa
scas
stos
sbbl
mov
rclb
ret
cs
in
fstpt
pop
xchg
std
xor
rorl
push
dec
call
gs
sarb
inc
clc
fistpll
mov
mov
and
jle
out
mov
sbb
data16
hlt
xchg
jae
jnp
fsubrs
lods
sti
jnp
div
pushf
imul
push
and
enter
lcall
std
push
jp
mov
cmp
stos
shll
cmp
fstpl
mov
scas
rolb
adc
cwtl
mov
and
jb
sub
int3
xchg
sarb
or
mov
loop
jmpw
jge
out
loop
mov
xorb
adc
xor
lea
enter
jae
lret
cmp
cld
iret
fwait
or
cmpsb
enter
lcall
lret
mov
lret
dec
xchg
repnz
xchg
cwtl
lahf
push
sbb
sub
cmp
xchg
and
xchg
outsb
in
jo
mov
shrb
mov
cmc
repnz
xor
cmpsb
insb
rcrl
stos
sbb
nop
inc
addr16
push
pop
pushf
stc
enter
vphsubdq
push
push
jb
cmpsb
add
and
xor
ficoms
out
leave
mov
imul
dec
and
jecxz
cmp
inc
aaa
andl
pusha
pop
gs
mov
imul
mov
adc
and
dec
repz
sub
push
mov
cmpsl
mov
loope
pop
pop
pop
clc
sub
add
test
sbb
mov
das
hlt
arpl
ret
mov
cmp
jnp
into
xor
mov
add
mov
lret
and
outsl
repnz
cli
movsl
adc
testb
jecxz
inc
pop
or
sbb
subb
out
sub
ja
rcrl
inc
cmp
dec
test
jmp
test
add
sub
cmp
ds
add
popa
popa
dec
xchg
loop
and
les
bound
fwait
inc
add
test
hlt
push
pcmpeqb
add
jno
arpl
inc
loopne
fcoml
or
pop
stos
dec
push
imul
icebp
test
cmp
nop
pop
cmp
out
mov
inc
cmpsl
mov
push
cmp
xchg
dec
push
outsl
incl
jg
dec
xor
mov
lock
sub
shlb
sahf
test
std
adc
lods
sbb
scas
xor
out
ficoml
in
shr
mov
dec
repnz
and
jbe
outsl
clc
sub
sub
adc
jae
xchg
inc
xchg
xchg
test
adc
scas
call
sub
dec
addr16
push
mov
rorl
cmpb
add
cmpsl
gs
in
xchg
sbb
fcomi
jl
loope
mov
jnp
outsb
mov
in
xor
mov
loopne
leave
push
xor
js,pt
cmp
push
jo
lret
sub
mov
ja
jge
add
push
xor
lret
aas
adc
adc
shrl
das
and
popf
popa
adc
icebp
lea
mov
outsb
ljmp
sbb
adc
cmp
imul
subl
shrb
lock
push
add
mov
pop
mov
pop
scas
ljmp
int
fwait
push
imul
ret
inc
pop
cli
in
pop
fwait
popaw
jl
insl
cld
cmp
std
xor
mov
scas
nop
je
ret
out
pop
lea
push
inc
jno
call
inc
int
les
bound
xchg
dec
jb
loopne
addr16
lods
jae
or
repnz
sbb
ficompl
add
imul
and
cli
jnp
sarb
out
dec
add
cmpsl
ja
aam
cmp
je
cwtl
add
pop
cmpsl
and
xchg
sbb
fcmovnb
pushf
mov
ss
cli
push
pusha
es
ds
pop
clc
out
mov
int
mov
fwait
leave
mov
adc
clc
arpl
jl
and
mov
jp
pop
fs
sub
cmp
inc
and
jo
mov
inc
lret
dec
cmp
pop
rolb
bound
adc
mov
subl
mov
sub
mov
ljmp
sbb
in
sbb
hlt
push
imul
lret
or
repz
int3
dec
sub
xor
pop
in
xor
adc
test
int
cmp
js
add
push
push
fldl
repz
stc
aam
rcrb
std
arpl
adc
cli
jne
clc
dec
pushf
and
dec
ret
add
inc
lret
enter
mov
sbb
rcll
jmp
leave
xchg
push
jnp
or
test
jmp
loope
cli
mov
fs
cmp
aas
scas
es
filds
pop
into
popf
mov
xchg
pushl
mov
inc
mov
jb
lret
movsb
add
dec
and
setbe
mov
add
adc
inc
dec
mov
cmp
add
lret
pusha
mov
ljmp
dec
push
inc
dec
or
sub
std
iret
adc
lahf
mov
add
das
test
push
hlt
scas
and
loope
xchg
inc
and
sub
and
arpl
out
in
sub
jno
add
popf
dec
pushf
xchg
mov
lret
rcrb
jne
mov
push
sub
ljmp
cmp
xor
fs
adc
pop
call
dec
loope
cmp
pusha
movsb
pop
sbb
dec
cli
cmpb
push
stos
addr16
xchg
mov
mov
rolb
dec
int
adc
inc
mov
mov
sub
mov
out
lret
lret
cmpsl
je
and
test
or
test
inc
and
jae
in
cmpsb
cwtl
mov
and
out
gs
mov
mov
push
stos
ljmp
pop
in
shlb
stos
cmp
inc
lahf
lods
dec
icebp
xchg
pop
shrb
int3
or
imul
gs
ds
push
fistpl
loop
push
je
stc
out
push
int3
inc
daa
sbbl
xchg
inc
xchg
pop
mov
push
nop
and
lods
insl
nop
call
mov
fcmovnb
add
cli
cmp
push
mov
cmp
faddp
out
inc
andl
or
out
jae
sbb
insl
js
xor
daa
cmp
mov
repz
popl
testl
cmp
inc
xchg
dec
mov
mov
inc
add
in
xor
mov
lea
lcall
jg
lea
mov
notl
pop
pop
in
cmpsb
jb
cmp
xor
fidivl
xchg
mov
jecxz
jnp
movsl
push
lods
add
fadds
add
jns
jecxz
lret
pop
pushf
shr
add
lea
pusha
fidivrl
and
sbb
cld
mov
adc
push
add
dec
ds
xchg
fmuls
mov
cmp
enter
inc
popf
cmp
push
mov
mov
xchg
add
dec
push
xor
pusha
inc
sbb
into
lea
pop
notb
xchg
in
ljmp
dec
in
mov
je
inc
cmp
push
sti
mov
js
dec
xor
outsl
ds
inc
in
jle
das
mov
imul
lea
sub
fwait
mov
xchg
insb
in
xchg
cmc
lods
js
dec
lea
test
push
push
mov
push
xor
dec
ss
nop
sub
sbb
pop
xchg
adc
loope
and
pop
add
sbb
push
iret
mov
sbb
cltd
call
shl
cld
push
cwtl
adcl
test
and
or
js
pusha
lods
aas
fisubs
push
xchg
add
xchg
cmpsb
and
push
add
push
cmpsb
scas
add
aam
insb
mov
fmul
insl
lcall
popf
adc
mov
push
imul
add
jmp
push
icebp
mov
arpl
stos
jnp
inc
dec
rol
outsb
std
mov
outsb
mov
in
sbb
daa
cmp
cmp
xchg
test
shl
shl
outsb
or
das
mov
add
jnp
aaa
imul
inc
dec
icebp
rclb
inc
xor
les
ds
mov
push
divl
mov
adc
dec
jne
sub
outsb
std
mov
dec
xor
jo
nop
mov
xchg
aam
sub
ss
push
mov
nop
and
movsb
mov
rorb
test
stc
or
dec
ljmp
adc
hlt
or
outsl
dec
lcall
bound
mov
in
and
std
rorl
ds
adc
sbb
ret
push
dec
flds
scas
sbb
dec
iret
in
push
dec
and
in
and
es
mov
popf
mov
or
dec
pop
xlat
inc
jae
aam
jne
jnp
mov
ficomps
pop
lods
sub
subl
mov
fisubrl
inc
jle
fidivs
out
jbe
mov
inc
lret
cmp
std
add
mov
pop
xchg
or
mov
das
xchg
out
adc
insb
hlt
add
cmp
das
rolb
jno
jle
xlat
jo
popa
in
and
or
sbb
das
pushf
xchg
xor
data16
jnp
sti
xor
mov
mov
or
in
out
jae
adc
or
fwait
push
pop
xor
cmp
pop
or
in
daa
ror
mov
xor
sub
pop
fisttps
xchg
sti
imull
dec
aaa
xchg
ja
in
mov
dec
pop
mov
mov
cmpsl
and
mov
ret
sarl
and
add
add
mov
arpl
xchg
cmp
cli
push
adcl
xchg
inc
jae
out
test
and
mov
jns
xchg
stc
mov
aaa
mov
dec
aam
add
pop
jae
fisttpll
test
sub
push
mov
rcrl
in
xor
inc
or
outsb
decb
jmp
fdiv
movsb
int3
sarb
hlt
cmc
outsb
aaa
jl
xchg
sub
lret
gs
lods
sub
inc
mov
pop
in
into
mov
or
xlat
loop
pop
ret
das
pusha
xlat
add
fwait
mov
mov
sbb
lret
sub
pushf
or
loopne,pn
pop
sbb
call
je
push
stos
in
jae
sub
insb
mov
and
dec
imul
add
push
fistpl
loop
call
imul
xchg
stos
fs
or
xor
xchg
les
dec
pop
mov
lods
movsl
inc
xchg
mov
cmp
or
mov
pop
inc
shrb
jno
inc
adcl
aad
loope
jns
fildll
mov
push
or
xchg
lahf
js
mov
pop
adc
stc
and
mov
add
gs
dec
xor
adc
cmpsl
sbb
pop
std
sbb
push
add
lret
jno
cwtl
push
pushf
leave
sbb
sbb
jne
in
mov
repnz
mov
push
adc
aaa
jmp
adc
cmp
fstps
xorl
rcll
or
fnsave
loop
push
jae
jmp
xchg
out
inc
lock
xchg
sbb
or
inc
outsl
mov
outsb
mov
add
out
mov
push
or
cmpsb
mov
push
fs
je
addr16
out
pop
insl
inc
push
decb
mov
gs
push
cmp
aad
xor
aam
cmp
pop
xchg
push
or
sarl
mov
lea
lahf
aaa
adc
daa
and
adc
push
test
fsts
pop
mov
jge
in
rol
test
mov
jecxz
jmp
add
stos
std
mov
mov
sbb
xchg
pop
mov
mov
sbb
pop
ficomps
lcall
cs
repz
jl
aas
lods
mov
stos
mov
push
cmp
adc
cmp
cmp
notb
adc
mov
fists
dec
and
rorl
decl
mov
int
mov
push
das
movsl
mov
imul
dec
fwait
and
data16
jmp
fs
pop
and
or
cs
lock
pop
loop
sub
sub
outsl
repnz
jmp
fucomi
shll
cli
lahf
push
enter
ljmp
cmpb
push
cmp
xchg
push
arpl
xor
out
push
push
sbb
ret
int
xor
jl
inc
xor
aam
xchg
mov
clc
ljmp
rcrl
sbb
add
int3
mov
je
shr
mov
out
push
leave
test
fisubs
fs
jecxz
xor
inc
add
xchg
xchg
cmp
fistpll
lret
loope
repnz
sbb
call
fsubs
adc
sbb
loopne
inc
inc
push
lock
daa
fucom
rcl
cmp
into
xchg
xchg
sub
dec
jge
fisubrl
mov
jno
out
cmp
daa
jmp
mov
fwait
inc
pop
pop
jb
pop
sar
sub
mov
test
mov
or
mov
jno
sub
sbb
addr16
jo
or
mov
mov
in
mov
push
inc
insl
or
xor
pop
adc
sahf
mov
fildl
fs
scas
pop
xchg
and
jo
xor
pusha
popa
jae
aam
movsb
repnz
push
call
cltd
jo
js
xlat
sbb
addr16
bound
jb
fcomi
and
in
cltd
mov
sub
mov
jl
enter
xchg
jnp
jno
sub
jae
mov
mov
scas
mov
dec
push
mov
add
jp
adc
mov
ds
jne
pop
cmpsl
mov
fstpt
pop
mov
ds
xchg
shlb
push
add
bound
and
mov
mov
jecxz
pop
pop
sub
adc
push
adc
add
movsb
aas
and
or
inc
ss
cmp
sbb
lret
push
insb
fsts
mov
lahf
mov
push
xor
mov
pusha
mov
push
mul
dec
lods
jp
inc
scas
mov
or
xor
cmpsl
xor
fbstp
cmp
sub
push
cmpsl
jp
dec
inc
mov
iret
add
mov
xchg
sbb
rclb
out
mov
pop
ret
xor
xchg
jnp
dec
sahf
cmp
sub
push
xchg
loop
cwtl
mov
sbb
cmc
rcrb
mov
les
out
mov
nop
mov
out
mov
mov
aaa
sub
sbb
in
xor
cli
in
int3
or
fsub
mov
out
mov
add
mov
scas
cmp
ja
cwtl
push
ja
lock
testb
jb
ror
jmp
xchg
xor
sub
adc
cltd
cmp
stc
push
or
pop
xchg
and
mov
mov
mov
sbb
hlt
lret
or
popa
icebp
adc
ljmp
jle
lret
pop
xor
and
hlt
jl
inc
int3
imul
mov
sub
push
jl
sets
fwait
test
int3
paddusw
jmp
push
fnstsw
mov
pusha
outsl
bound
sub
inc
outsb
cbtw
das
xor
pusha
rcr
out
in
lods
mov
out
dec
int
mov
pop
mov
cld
mov
icebp
jp
fadds
sahf
sub
or
int3
jbe
leave
nop
sbb
xchg
lret
fldt
test
jmp
pop
test
inc
cwtl
xchg
or
test
add
pop
xchg
ret
test
in
in
lahf
lods
rcll
push
sqrtps
dec
and
outsb
sbb
and
bnd
dec
jmp
pop
pop
and
mov
and
xor
mov
xchg
lcall
out
arpl
pop
shlb
cmp
sub
nop
sub
add
xlat
je
mov
aam
jno
pop
stos
jo
fisubs
clc
jno
arpl
cmp
push
shlb
jmp
and
les
ss
mov
mov
aam
fcomp
adc
cwtl
loope
insb
xchg
jns
sti
insb
add
sub
dec
xchg
fbstp
idivl
es
test
xlat
cmp
rcll
xor
filds
mov
inc
cmpsb
movsl
or
pop
cmp
flds
and
dec
ror
sarb
xor
stc
addr16
inc
pop
jae
lds
scas
mov
push
ds
data16
push
add
dec
insb
out
dec
sbb
push
shlb
test
fwait
sub
imulb
xlat
adcl
ss
pop
movsl
inc
mov
jns,pn
ss
iret
addl
out
lock
lahf
sbb
mov
roll
popf
loope
pushf
and
xor
or
dec
stc
cli
lret
inc
cs
test
lea
push
pop
imul
je
dec
test
adc
inc
js
dec
push
mov
xchg
cmpsb
sbb
lods
daa
nop
jmp
fsubrs
sbb
stc
pop
push
adc
pop
mov
sub
sub
push
data16
xchg
and
and
dec
loope
mov
xchg
test
leave
lods
pop
mov
xchg
xchg
jge
inc
pop
fdivrl
jg
xlat
xor
sub
or
fnstenv
cmp
popa
imul
into
fwait
std
lds
jl
and
mov
fucom
lret
adc
or
nop
int3
xor
inc
divl
jnp
loop
pop
adc
pushf
fstl
cmp
jo
cmp
cmp
mov
enter
sbb
dec
sub
mov
scas
jl
lcall
add
fildl
nop
nop
sbb
hlt
movsb
pop
mov
pop
mov
add
mov
adc
add
stos
mov
pop
dec
call
xchg
inc
jge
add
lock
ja
sbb
test
inc
lea
and
sbb
or
loop
pop
mov
push
dec
inc
cmp
sbb
mov
xchg
aas
and
and
rclb
daa
jb
xor
out
or
cltd
pop
push
sbb
sti
fadd
mov
sub
jge
dec
pop
inc
jne
xchg
push
mov
insl
add
dec
push
jp
and
sub
outsb
aas
add
hlt
nop
ret
arpl
jae
pop
xor
ja
addr16
pop
dec
int
sbb
jnp
push
or
push
dec
mov
insl
dec
jle
pop
jmp
int
mov
dec
add
testl
addb
out
gs
insb
mov
repz
fstps
out
push
adc
and
or
and
dec
jecxz
pop
xor
test
popf
sub
mov
fisttpll
mov
out
pop
mov
dec
sbb
mov
aaa
ds
fdivrs
and
mov
push
test
fwait
cmp
in
scas
clc
negb
rcl
add
push
test
adc
sub
outsl
pop
popa
mov
inc
loop
sbb
imul
xor
popf
cmpb
push
and
pop
sbb
cld
pop
in
std
push
lods
fdivs
pop
lahf
dec
shll
movsl
popa
dec
lahf
xor
cmc
int3
lock
lcall
subb
jp
mov
sbb
adc
xchg
or
adc
xchg
ret
ret
pop
lret
jle
aad
arpl
xor
insl
jne
stos
hlt
stc
testl
push
jo
arpl
out
in
ror
or
sub
repnz
and
lock
cmpsb
fnstcw
sbb
mov
lldt
xor
xchg
into
test
xchg
mov
pop
xchg
adc
dec
rcl
xchg
fimull
jmp
stos
in
dec
das
mov
clc
xor
popl
adcl
or
dec
test
test
sbb
jns
xor
sub
xor
aam
ret
loopne
cltd
mov
mov
xor
jge
dec
outsl
mov
mov
sbb
sbb
xor
sub
icebp
pop
push
pop
sahf
inc
pushf
fxch
jns
push
xchg
rorb
add
dec
shlb
pusha
dec
int3
inc
fstps
cmpsb
jmp
shrl
out
push
sbb
cmpsb
cmpsl
pop
push
jp
in
movsl
inc
aad
xchg
pushf
push
mov
jbe
in
sub
mov
push
idivl
sub
fistl
daa
mov
test
mov
adc
cmc
dec
sbbb
sbb
push
mov
lret
pop
sahf
cmc
and
inc
mov
inc
int3
adc
jg
test
jb
jl
ret
in
shll
fwait
mov
int3
pop
push
xchg
push
aas
and
pop
sbb
lret
dec
inc
xchg
arpl
mov
scas
push
in
mov
call
sbb
mov
mov
push
xchg
movsl
xchg
push
xchg
scas
mov
inc
jmp
scas
dec
nop
mov
push
sub
rcrb
decl
mov
frstor
inc
loop
xchg
int
mov
mov
jecxz
das
stos
xchg
fwait
and
adc
insb
sbb
jge
pop
cmpsb
dec
sti
fsubl
fidivl
sahf
mov
or
inc
sub
sbb
xor
and
or
mov
je
test
add
sbb
pop
and
arpl
mov
inc
sbb
outsl
insl
xor
push
cmpl
or
inc
lret
push
nop
les
jg
cli
push
jne
daa
data16
into
dec
out
inc
cmp
out
jle
mov
scas
dec
test
xchg
arpl
xor
loopne
lret
shlb
xchg
sbbl
je
mov
xorb
cld
dec
jge
rorb
adc
scas
cmp
int3
mov
mov
rcrl
in
push
xchg
fs
pop
inc
mov
cli
sbb
xchg
loope
mov
push
mov
nop
icebp
jmp
cltd
mov
jae
jbe
arpl
inc
sub
pop
insl
inc
fsubrl
pop
cmp
adc
mov
adc
adc
inc
addb
sub
fistpll
mov
leave
cmp
fcomi
out
push
je
or
and
cmp
inc
clc
jecxz
dec
xchg
rclb
jp
jl
dec
into
outsl
mov
adc
mov
xlat
pop
imul
push
test
lea
ret
adc
mov
xor
and
pop
mov
addr16
add
sub
or
inc
xchg
daa
xchg
inc
ljmp
sub
pushf
out
in
ret
cmpsl
mov
fwait
xor
shlb
or
fistpll
mov
aam
fstpl
les
mov
lock
sbb
ljmp
stos
xchg
sub
ss
nop
aam
dec
push
push
sub
mov
xor
hlt
sbb
mov
cmpsl
jecxz
stos
xor
out
shll
cmp
int
arpl
cmpl
mov
mov
movsl
out
aam
outsl
out
xchg
fwait
mov
rep
sub
das
push
push
addr16
xchg
lcall
push
ds
pop
push
xor
and
mov
mov
cmp
add
cltd
jecxz
mov
jne
pushf
js
ss
inc
jmp
std
repnz
ja
jp
sub
cmpsb
and
sub
mov
cmpsl
std
adc
or
lcall
lret
cmp
sbb
mov
xchg
mov
les
mov
pop
inc
adc
sarl
xchg
subl
cmp
hlt
jl
sub
ret
and
lods
es
push
add
sub
jns
ret
orb
imul
adcl
fcompl
sbb
sub
xor
sbb
jne
test
das
nop
and
jecxz
std
push
cwtl
enter
pop
mov
and
or
inc
loop
xor
test
pusha
mov
sub
lds
imul
adc
adc
and
or
mov
out
nop
lret
popa
int
loopne
dec
cmc
std
add
sub
mov
fbld
jnp
mov
sub
clc
ror
push
pop
sbb
or
cmp
bound
jo
repz
cmp
push
outsb
xchg
lahf
mov
xor
stc
push
notb
sub
push
arpl
insl
iret
fsubrl
dec
out
jnp
dec
adc
push
mov
xchg
in
insb
lret
jle
mov
lods
and
pop
mov
incl
jmp
jo
cmpsb
jno
pusha
xchg
pop
mov
mov
std
cltd
dec
jno
idivl
out
aaa
and
mov
cmp
cmpsb
and
arpl
mov
add
and
mov
xchg
or
mov
lret
jg
xor
dec
push
addr16
repz
push
xchg
ja
fs
and
in
xor
and
jae
dec
loopne
add
orb
in
repnz
lret
fs
outsl
ret
rolb
sbb
inc
dec
mov
flds
ds
mov
scas
push
repnz
xor
and
shl
add
mov
jne
leave
pop
aad
aam
lret
loopne
mov
xchg
or
mov
mov
aam
mov
stos
bound
or
std
dec
cmp
xchg
out
or
repz
push
enter
lock
scas
lret
push
inc
and
nop
in
jl
sbb
mov
enter
sbb
jg
cmp
sub
ds
out
stos
pop
movb
cmp
mov
sti
mov
mov
in
push
mov
mov
inc
cs
add
into
out
dec
push
out
out
test
jo
jbe
mov
daa
mov
jle
adc
jle
ljmp
inc
pusha
fidivrs
pop
ljmp
mov
mov
std
jmp
xor
out
out
bound
movsl
jg
ret
arpl
fisubrl
lods
xor
sbb
dec
aaa
inc
pop
jne
aas
pop
or
sbb
pop
inc
pop
add
sbb
pop
scas
andb
inc
test
mov
in
mov
sub
inc
movb
sbb
mov
shl
std
cltd
xor
cld
cmp
mov
adc
xchg
or
push
mov
shr
notl
cmc
pop
popf
mov
js
push
imull
mov
or
pushf
adc
pop
mov
fwait
call
insb
out
out
sub
adc
mov
pop
mov
mov
aas
lahf
pop
movsl
outsb
lds
add
shr
pop
sahf
mov
xchg
mov
stos
out
dec
in
cmp
cmp
dec
mov
mov
push
in
loope
and
adc
sbb
push
testb
cmc
push
insb
jbe
scas
add
outsl
stos
idiv
in
cli
jg
adc
push
xchg
test
into
add
pushl
push
pop
xor
nop
enter
movsb
adc
and
loope
rorl
das
dec
into
sub
jbe
ss
dec
clc
jecxz
lock
push
sar
cvttps2pi
xchg
pushf
gs
sbb
inc
sbb
popa
mov
inc
loopne
sub
jg
or
adc
adc
es
push
data16
pop
or
int
xchg
adc
fbstp
push
cmp
jp
stos
mov
test
in
fldl
pop
popa
mov
mov
jp
lea
push
xor
xchg
cvtpi2ps
sti
pop
add
xorl
cmpb
dec
jmp
sub
inc
dec
dec
bound
cmpsb
mov
add
xchg
lock
popf
ret
sub
out
jo
pop
ret
pop
mov
outsl
int
push
dec
orl
pop
xor
inc
or
sub
sub
xchg
xchg
out
pop
or
in
and
mov
mov
add
pop
mov
and
outsl
and
mov
sbbl
adc
rcrb
push
movsb
daa
inc
add
mov
cmpsl
mov
test
or
in
cli
pusha
sar
sbb
sub
pop
cmp
in
subb
mov
mov
mov
add
add
in
cmp
mov
es
lods
cmpsl
and
js
and
mov
adc
subl
icebp
and
inc
aas
lock
out
mov
shll
pop
out
jge
jg
add
cld
fdivrl
vandnps
nop
mov
loopne
into
pop
and
loop
xor
leave
in
cwtl
outsl
xchg
adc
jge
jle
fdiv
ret
jb
sub
xchg
out
ret
push
or
inc
push
xor
movl
inc
shlb
sbb
fidivrs
popa
fcomip
jb
sti
in
arpl
pop
mov
cmp
dec
add
arpl
lock
add
jo
loopne
mov
xor
mov
int
mov
repnz
insb
xchg
jl
ror
mov
sbb
push
mov
push
add
fidivrs
pop
xor
push
out
xchg
insb
cmp
pop
xor
movsl
push
notl
inc
adc
repnz
lods
ret
fcmovne
cmp
ds
lds
inc
adc
ljmp
add
cmc
xor
subb
xor
mov
mov
outsb
les
or
or
cli
cltd
aaa
or
popa
in
addr16
movsb
fucomi
stos
test
out
jae
pop
rcrb
and
inc
jae
ror
dec
cs
xor
pop
jle
xchg
pop
jne
lret
in
ret
mov
loop
sub
push
imul
push
enter
in
movb
fwait
dec
xor
cmp
xor
add
ss
rorl
mov
xor
call
or
sub
cwtd
xor
dec
inc
inc
shll
lcall
mov
sarl
out
mov
push
sahf
call
dec
jecxz
mov
cmp
xor
rcrl
lods
sub
pop
jnp
adc
sub
mov
adc
xchg
ljmp
ja
pop
xchg
jbe
icebp
mov
lods
in
or
je
pop
imul
arpl
scas
push
imul
sbb
mov
push
rclb
repnz
ds
push
lea
shr
orb
sbb
mov
out
xorb
adc
out
out
jae
push
mov
lret
dec
cmc
enter
xor
cs
shl
xor
ds
cmc
jb
jle
adc
jo
mov
shl
leave
in
xor
push
test
jmp
pop
push
inc
and
add
or
dec
test
sub
fimull
cmp
decb
fldcw
cmp
sbbb
loop
test
pushl
ss
xchg
aaa
es
inc
scas
mov
xor
sbb
aaa
sbb
xchg
sbb
jnp
pop
mov
push
lds
mov
scas
dec
cltd
mov
addr16
xor
xchg
ljmp
push
xlat
js
lods
jnp
aad
je
outsl
pop
call
lock
adc
sub
push
test
rcl
jns
int
daa
es
int3
insl
or
mov
or
sahf
push
mov
sbb
rolb
testb
aam
xchg
pop
sub
push
jno
fdivr
mov
mov
fadd
outsb
jbe
push
mov
jbe
lds
addr16
sbb
pop
and
mov
cwtl
jmp
sti
das
push
insl
sbb
and
fucomi
rol
inc
inc
xchg
xchg
push
andl
imul
xor
jg
std
aad
add
inc
iret
jecxz
jae
imul
cli
movsb
mov
roll
sbb
pop
leave
pop
mov
imul
clc
pop
push
push
xor
jae
adc
movsl
mov
stc
pop
and
rorb
cmp
lods
sub
cmovp
sti
out
arpl
mov
jl
arpl
lret
mov
push
mov
sbb
daa
ror
dec
add
mov
lahf
and
inc
pusha
bound
mov
gs
mov
mov
mov
leave
sbb
or
out
addr16
imul
mov
jg
sbb
inc
js
mov
repnz
int3
cmp
pop
in
test
scas
sbb
lcall
lret
roll
adc
fcomps
arpl
dec
mov
inc
adc
inc
jl
aam
xor
mov
jecxz
sub
mov
fxch
lods
jnp
adc
in
inc
decl
sbb
aas
push
ljmp
fadds
iret
push
outsb
out
push
jmp
add
pop
cmp
aas
jns
jne
pop
mov
dec
dec
xchg
xchg
sub
incb
cltd
mov
out
and
jnp
xchg
mov
pop
fcoms
int
call
ljmp
mov
jno
dec
and
sarb
cmc
push
xor
jnp
int
cs
js
inc
sti
cmp
stc
lods
jno
sbb
adc
xchg
xor
mov
lock
mov
inc
sbb
cmp
lea
outsl
loopne
sbb
pop
fidivrl
rorl
xor
or
xor
or
cmp
aaa
lcall
outsl
int
mov
data16
mov
jne
pop
xchg
inc
rolb
and
fcoms
subl
aas
push
stc
in
test
icebp
jmp
adc
cmpsb
cmp
out
cld
mov
sub
out
cmc
cmpsl
test
pop
les
addr16
jmp
mov
hlt
lret
fisubrl
int3
stos
inc
jb
decl
andb
adc
mov
mov
sbb
cmp
add
jnp
inc
in
out
outsb
scas
shll
rorb
mov
jecxz
sbb
sub
dec
xchg
movl
push
and
es
fimull
es
mov
aam
mov
mov
adc
adc
shlb
push
jbe
cltd
daa
cli
jmp
inc
inc
lret
inc
push
lcall
daa
popa
inc
js
mov
jge
inc
xchg
jp
arpl
push
in
jecxz
push
sbb
je
imul
aad
loope
xchg
movsb
lret
xor
cmpsb
inc
or
lock
mov
push
lods
push
xchg
mov
gs
sbb
mov
loope
leave
ret
mov
out
dec
roll
pop
mov
push
jbe
inc
cmp
adc
fisubrs
mov
bound
push
adc
bound
clc
lcall
jns
and
xor
mov
aam
dec
and
adc
adc
ret
jl
das
push
adc
fnsave
popf
mov
test
pop
fimull
sub
pop
mov
push
icebp
mov
sub
sti
call
jns
pop
push
data16
push
pop
jmp
fildll
sti
repz
daa
and
push
add
cmp
pop
add
xchg
mul
stos
add
repz
push
inc
inc
inc
adc
inc
xor
mov
sbb
loope
sbb
arpl
push
xorb
aas
sbb
xor
lds
enter
mov
lods
mov
out
stos
bound
pop
cmpsl
aas
bound
add
bound
fnstsw
cmpsl
sub
loop
insb
je
in
mov
shlb
roll
sti
call
cltd
mov
mov
fiadds
out
xor
and
iret
jb
xor
jl
xchg
adc
imul
xor
in
mov
sahf
adc
dec
out
movsl
movsl
xor
cwtl
leave
push
dec
pop
adc
les
push
test
rclb
lret
lds
pop
rol
xchg
mov
dec
inc
insl
adc
inc
sub
shrb
popf
out
push
or
xor
shrb
mov
shrb
pop
sub
dec
cmp
fidivrs
adc
inc
xchg
fstpt
and
dec
and
push
and
popf
test
mov
lcall
and
inc
popf
push
cmpb
cmpl
int
scas
pop
fdivrl
adc
push
fcompl
outsb
push
aam
mov
cld
mov
daa
mov
push
into
cmp
mov
dec
repnz
or
jae
or
mov
das
js
jae
push
xor
jne
shrl
mov
lahf
push
push
cmpsb
xor
call
scas
sbb
xchg
out
dec
push
jl
scas
cmp
and
loopne
pop
pop
fcmovnb
sub
jb
loope
gs
fs
dec
push
cmpsl
leave
stos
loop
push
dec
je
pop
insl
sub
lahf
fwait
sub
dec
jnp
sub
jne
dec
cs
add
xor
mov
push
inc
adc
pop
out
andb
lods
mov
leave
mov
pop
scas
jnp
lret
lods
fdivl
mov
jne
adc
sbb
push
lds
cmp
data16
pop
inc
sbb
lret
mov
pushf
dec
cmp
fwait
mov
mov
ficoms
mov
popa
pushl
int
js
subb
mov
jo
jno
cmp
test
scas
push
lahf
gs
cltd
fbstp
testb
dec
lret
dec
jle
or
xorl
pop
aas
xchg
xor
fs
lods
leave
adc
adc
pusha
mov
cmp
xchg
lds
push
loop
xchg
bound
imul
enter
sub
mov
js
gs
fidivrl
test
fdiv
std
jb
dec
rcrb
mov
sbb
dec
loop
xchg
std
xor
add
or
fwait
outsb
xor
xor
mov
in
cmc
out
loope
or
dec
cmpb
jle
shrb
stc
les
sub
movsl
jl
rcrl
mov
in
sbb
sub
mov
dec
inc
dec
into
and
mov
data16
inc
xlat
sbb
jge
inc
sub
lahf
pop
imul
sbb
je
mov
leave
scas
decl
lea
lea
jle
ror
mov
repnz
sbb
stos
xor
imul
mov
in
or
call
rcll
xor
xchg
jnp
outsl
mov
cli
test
xchg
pop
adc
les
mov
xchg
cld
xor
fwait
cltd
or
sbb
mov
dec
push
dec
add
fldl
sub
out
dec
fbstp
lods
jbe
enter
in
divb
loopne
gs
pop
pushf
pop
into
decl
loop
adc
adcl
popf
stc
aam
mov
fisttps
pop
lds
int
mov
jo,pn
pop
popa
scas
orl
mov
sbb
mov
in
sbb
ss
fwait
shrb
or
jmp
subb
pop
dec
lret
das
imul
cmc
sub
addr16
cmp
hlt
mov
imul
dec
jl
arpl
cmc
push
mov
add
bound
xchg
cmpsl
bound
mov
movsb
and
dec
es
mov
mov
std
js
fisttpll
xlat
cmpsb
inc
jns
bndldx
gs
xlat
mov
mov
lds
dec
sbb
jle
ds
jb
in
icebp
aam
in
fimuls
pop
cwtl
mov
jno
fcomi
jno
dec
xor
or
mov
inc
mov
pop
lcall
fmuls
in
inc
xchg
lcall
shll
inc
add
ja
lock
shll
and
cmp
xchg
loope
stos
aad
lods
fdiv
dec
cmp
in
add
mov
lods
push
ret
and
movsb
sahf
loope
sub
bsf
mov
push
int
and
and
sbb
into
mov
stos
push
xchg
cmp
out
xchg
fbld
add
dec
sbb
fs
jo
insb
sub
leave
push
pushf
insb
cmp
js
inc
pushf
mov
icebp
mov
dec
stos
push
pop
imul
sub
in
push
xchg
xlat
lea
mov
popf
mov
in
push
ja
sti
mov
out
jne,pt
mov
adc
aas
rorl
inc
fcoms
or
mov
stos
sub
adc
push
pop
mov
leave
sub
sti
pop
inc
movsb
imul
test
ljmp
xchg
fwait
cmp
dec
mov
call
cmp
cltd
add
xchg
scas
push
or
repnz
dec
in
push
jb
outsb
xchg
out
add
movb
testb
inc
fisubl
jae
addb
push
andl
cltd
in
decl
xchg
out
xchg
push
jp
push
push
adc
xor
aam
cmp
pusha
stos
cmpsl
repz
mov
das
or
push
inc
outsb
imul
mov
adc
push
add
xchg
out
mov
mov
jno
negb
je
ret
push
sbb
add
sbb
add
add
pop
jg
cmp
push
lea
test
mov
aas
call
addb
xchg
faddl
rclb
addr16
rcr
lret
sti
lea
movsb
lahf
roll
je
push
out
rcr
mov
jo
insb
pop
mov
adc
mov
das
dec
ret
shrl
pushw
inc
in
push
ret
insl
out
adcb
fwait
xor
or
cmp
push
ss
mov
adc
out
pop
loop
pop
xor
xor
shl
lods
sbb
mov
insl
pop
sub
pop
cmp
in
int3
fnsave
out
inc
pop
and
sar
mov
jb
xor
sti
shlb
push
pop
mov
mov
mov
imul
jge
dec
insw
push
jge
mov
out
into
mov
aas
mov
fldenv
cmp
pop
andl
pop
fisubl
test
lock
pop
out
inc
adc
sub
xchg
std
inc
imul
jno
add
ljmp
rol
cmc
mov
jmp
and
arpl
xchg
cmpsl
mov
xchg
inc
jb
lcall
ret
jnp
jl
dec
and
out
bound
push
aaa
nop
cmp
shlb
cmc
ret
lret
pop
test
sub
das
mov
cmp
sub
addb
mov
jne
mov
in
add
adc
dec
pop
mov
jg
inc
jnp
add
icebp
jb
push
into
mov
out
int
jp
pushf
add
mov
push
add
inc
stos
fadd
arpl
jmp
lods
scas
imul
pop
pusha
mov
push
cltd
xor
sbb
lcall
imul
iret
sub
pop
add
cmpsb
rclb
mov
sub
dec
scas
sahf
xlat
popf
enter
mov
or
jl
push
test
stos
dec
adc
mov
add
popl
cmpsl
add
mov
sti
add
out
js
mov
cs
xchg
xchg
cmp
aam
xor
jl
sbb
xchg
xchg
dec
incl
xor
bound
xchg
loope
outsb
mov
mov
movsl
nop
and
subb
pop
sbb
mov
cld
push
lds
in
xchg
jmp
xor
cmpsb
cmp
inc
add
inc
les
jno
push
mov
sub
dec
fdivrs
or
inc
das
mov
dec
pop
xchg
cmp
ds
in
lds
scas
mov
ret
iret
mov
jle
in
jno
push
mov
mov
and
movsb
mov
sahf
enter
inc
shr
inc
jmp
cmpsl
mov
ds
push
add
in
test
loope
adc
test
ds
pop
gs
lret
mov
add
shr
in
hlt
or
mov
bound
jae
inc
pop
ret
push
daa
dec
pop
dec
ja
mov
es
ljmp
sbb
or
bound
dec
out
ret
jmp
sub
mov
xlat
rol
ss
adc
sbb
add
push
in
push
xor
out
adc
mov
mov
idiv
fs
imul
test
mov
push
enter
enter
and
scas
xchg
pushf
icebp
jo
ljmp
xor
mov
sub
and
add
fcomp
cmp
mov
repz
and
cli
xor
loopne
jae
subl
es
xchg
les
jl
daa
mov
mov
icebp
mov
in
bound
pusha
push
movsb
ret
fiadds
sbb
mov
repnz
sbb
jbe
call
xor
addr16
lret
fcoms
inc
or
loope
repnz
cmpsl
adc
xor
sar
or
xor
cmp
inc
in
popf
xchg
jl
push
push
stc
pop
jo
scas
aad
dec
mov
popa
stc
xor
and
mov
or
xchg
ret
fbld
stc
sub
cmp
aas
bound
jb
in
xchg
fisttpl
xor
popf
sbb
int3
fstl
test
data16
loop
push
and
les
xchg
enter
sbb
xor
shll
xor
xor
xor
shll
xor
andb
cmpsb
jo
inc
push
and
in
push
unpcklps
or
fildll
pop
sbb
and
imul
imul
pusha
lods
ds
inc
cmc
mov
ljmp
ret
mov
lods
xor
inc
adc
mov
mov
dec
mov
dec
push
mov
sbb
fistl
add
ss
cld
inc
mov
push
addl
shlb
or
sbb
out
xor
in
rolb
mov
stc
xor
lret
sub
test
mov
pop
push
aam
push
sahf
pop
fmul
mov
shrb
push
mov
daa
jmp
add
stos
xor
and
inc
inc
mov
les
jo
push
insl
mov
ss
mov
inc
icebp
fistpll
mov
fs
xor
or
sbb
and
and
stos
dec
idivl
ds
das
mov
adc
es
dec
iret
dec
pop
inc
in
popa
outsl
out
mov
js
lret
sub
lret
call
aas
mov
sub
es
arpl
es
mov
sbb
jb
lods
scas
jnp
mov
push
in
stos
xchg
lret
insl
add
jno
add
adc
xchg
pop
lret
test
iret
push
test
xlat
dec
push
lcall
leave
outsb
cld
inc
xchg
inc
lretw
jmp
ror
mov
cmc
test
jg
in
cmp
cmpsl
or
mov
clc
and
pop
filds
insl
push
test
mov
cmp
or
or
sbb
sbb
jp
loopne
push
jg
mov
fisubrl
mov
xchg
mov
push
pop
leave
bswap
movsb
cmp
movsl
loopne
ficoml
jns
aad
call
dec
pop
mov
scas
or
mov
ds
push
sbb
int
mov
loop
aas
dec
movsb
js
sbb
stos
pop
adc
lret
mov
push
fstp
fsubs
call
xor
mov
dec
xchg
mov
es
std
in
cwtl
adc
sbb
repnz
xchg
aaa
aas
es
idivb
es
rcrl
cwtl
pop
idivl
out
add
mov
mov
test
jb
mov
mov
aad
mov
cli
sub
pop
in
mov
sbb
lods
cmp
pop
int3
adc
scas
test
insb
sti
push
sarl
adc
ret
loope
inc
jge
mov
push
mov
das
aam
xchg
sbb
xchg
arpl
addr16
aad
fdivp
mov
xlat
mov
mov
pop
fstps
cwtl
xchg
mov
pop
cmp
xchg
sarl
jo
push
sbb
scas
and
add
mov
add
xor
ds
leave
stc
aas
lret
or
xchg
cld
sub
pop
int3
mov
inc
pop
ret
or
cmp
xor
add
nop
cmpsl
xchg
lahf
fimull
flds
mov
dec
ret
clc
aam
add
adc
mov
stos
mov
sub
fcmovnu
lds
movsb
dec
in
xchg
inc
pop
xchg
jno
ljmp
sbb
adc
sub
jp
shlb
shlb
fstps
xor
mov
mov
push
lds
add
rolb
cmp
sbb
nop
dec
sbb
add
sub
aas
mov
popa
xchg
les
inc
mov
inc
fwait
sub
cmp
neg
pop
ret
jmp
lock
roll
cmc
test
or
aam
jp
outsb
fdivrs
mov
pop
push
hlt
sbb
push
sbb
xor
stos
mov
add
sub
mov
push
jne
or
leave
xchg
and
push
jb
fsubrl
jns
ret
mov
icebp
sti
hlt
int3
outsl
jbe
pop
xchg
inc
xor
xchg
or
dec
pushl
data16
push
imul
push
mov
idiv
jmp
repnz
daa
stos
push
xlat
clc
adc
mov
adcb
add
mov
dec
jns
insl
mov
cs
sbb
les
sahf
sub
mov
add
mov
xor
movsb
and
fstl
xor
mov
orb
scas
inc
mov
sub
cltd
je
sbb
popa
sub
sub
loopne
or
add
aad
rcrl
push
push
test
mov
inc
xor
adcl
stos
into
fbstp
in
sarl
xchg
das
xchg
movsb
adc
inc
aam
sahf
or
adc
addr16
inc
push
mov
sbb
ja
cli
jns
bound
jg
pop
jl
jecxz
jns
clc
fwait
xchg
mov
jno
mov
jmp
inc
jae
mov
adc
test
pop
repz
lcall
into
pop
mov
rclb
dec
xchg
dec
in
jmp
xchg
adc
pop
imul
bswap
jg
lds
inc
scas
jne
nop
cs
push
popf
je
in
jo
movsl
dec
fs
in
icebp
mov
mov
xchg
int
outsb
in
lods
ljmp
call
inc
cmp
knotb
xlat
add
jnp
or
jecxz
or
mov
lea
cltd
pop
mov
push
push
pop
rcrb
fwait
adc
or
cmp
loopne
aad
in
jmp
into
ds
dec
jbe
mov
iret
ljmp
or
cmp
das
add
lahf
lcall
data16
mov
lds
push
or
mov
dec
pop
aad
scas
mov
jmp
sub
xchg
pushf
dec
scas
pop
mov
je
sbb
in
and
sub
outsl
stos
push
dec
nop
add
pop
imull
call
jp
mov
hlt
fwait
daa
fiadds
lods
adc
pop
ret
mov
xchg
lret
xor
push
rcrb
add
call
and
inc
add
sbb
ds
pop
notl
pop
je
add
pop
loop
adc
xchg
mov
out
or
adc
jo
leave
jecxz
inc
xchg
out
jg
and
xor
pop
mov
int
lahf
out
enter
mov
mov
mov
iret
insb
in
sub
ds
pushf
into
sbb
pop
mov
mov
movsl
xor
dec
fstpt
inc
jns
xchg
fisttpl
push
repz
dec
push
mov
add
and
pop
fadd
mov
lret
jne
xor
jle
mov
outsl
add
les
test
mov
and
push
fwait
pop
testl
sub
je
les
cwtl
push
jnp
pop
inc
dec
or
loop
cwtl
pop
mov
scas
js
aaa
js
mov
sbb
pop
das
leave
pushf
scas
lods
aam
sti
in
insl
iret
cs
movsl
push
lods
enter
lahf
cmp
nop
rorl
push
ss
mov
sub
mov
inc
repnz
pop
dec
add
xchg
insl
lock
xor
aas
jg
mov
rcrb
jne
div
pop
and
and
insb
iret
scas
in
mov
bound
pop
mov
ljmp
xchg
push
inc
lock
mov
cwtl
sti
xchg
jp
ret
sarb
dec
or
mov
xchg
or
in
cmpsl
aam
cmpsl
icebp
push
scas
rolb
data16
sbb
mov
jge
sbb
and
in
shl
push
inc
xchg
flds
push
out
jge
je
sbb
lock
dec
dec
and
fisubl
out
insl
lret
lock
push
cmp
dec
fdivl
imul
call
xchg
xchg
pop
fisubl
in
push
xor
dec
and
mov
or
rcrb
mov
mov
mov
mov
out
lock
test
sbb
jne
dec
push
shl
inc
mov
inc
push
aas
nop
pop
sbb
popa
incl
aaa
jae
stc
into
in
repz
outsb
xchg
mul
stos
lret
mov
shll
sbb
mov
and
push
push
mov
mov
jns
cmp
insb
repnz
and
stc
or
pop
mov
sbb
ret
pop
addb
pop
ret
or
fisttps
mov
nop
out
pop
es
cmc
or
sbb
xor
mov
mov
inc
addr16
mov
adc
or
xor
jmp
xchg
mov
ficompl
fs
rcl
jne
inc
call
scas
test
outsl
das
ja
movsl
fsts
addr16
dec
jnp
xchg
movsb
sub
cmpsl
adc
mov
adc
lcall
decl
push
adc
xlat
adc
daa
sti
push
jecxz
inc
lock
inc
loop
dec
scas
jle
outsl
es
add
rolb
push
dec
xchg
cs
cmp
cmpsl
mov
xor
lds
cmp
and
cmpsl
aad
ljmp
adc
inc
push
icebp
pop
mov
bound
add
pop
fs
scas
jno
dec
add
jns
jle
sub
lcall
xchg
xchg
mov
sub
dec
pop
cmp
sub
push
repz
pop
ret
mov
inc
inc
push
stos
fs
mov
inc
in
lahf
mov
sbb
dec
adc
in
xchg
adc
pop
jecxz
push
arpl
fwait
inc
bound
xchg
xchg
jl
aad
out
sbb
and
jno
ljmp
mov
fnstcw
xor
xchg
loopne
addr16
test
scas
push
or
cwtl
cmp
push
sub
shrb
or
repz
sahf
fsubs
rorb
fdivp
fists
addr16
loopne
xchg
ja
cmp
loope
mov
xchg
adc
jo
sbb
dec
cmp
test
jnp
add
in
call
jne
dec
out
int
and
sahf
dec
push
pop
push
jne
sar
shll
sub
mov
rorb
movsl
and
cltd
call
pop
sti
mov
mov
hlt
jb
les
push
cmovle
lret
ja
or
addr16
push
test
push
jmp
xchg
inc
popf
lock
xor
cli
cmp
rcll
jb
jmp
inc
lods
mov
rcrb
mov
icebp
scas
lret
imul
mov
orl
loope
out
pop
dec
mov
aad
mov
sahf
ror
add
inc
push
roll
ljmp
mov
stc
cmp
cmp
cmp
sti
cmp
pop
mov
cmpsl
pop
outsb
fiaddl
enter
clc
loopne
loope
in
adc
mov
mov
push
in
push
or
jns
out
es
mov
push
in
in
fwait
pop
icebp
inc
sub
repz
sbb
shll
xor
shll
mov
scas
leave
pop
mov
fs
xlat
mov
pop
leave
fimuls
andb
xchg
lret
sar
jb
sub
push
and
pop
push
pop
adc
and
in
pcmpgtb
push
jnp
sub
adc
lahf
subl
push
jb
sti
jno
add
repnz
out
repz
or
pop
test
testl
xor
inc
jg
dec
nop
cmp
mov
sub
sbb
sbb
ljmp
mov
loope
push
mov
dec
cmpsb
dec
imul
sub
sbb
adc
sbb
jns
xchg
pop
loop
jmp
push
sbb
cmp
pop
sub
cs
out
add
aaa
mov
or
and
mov
out
orl
bound
push
and
gs
pop
loopne
outsl
sub
pop
xchg
push
mov
in
mov
outsl
mov
xlat
mov
cmp
or
mov
js
test
aas
jbe
push
cmpl
or
push
sbbb
push
xchg
pop
lds
or
lods
dec
lret
addr16
add
shrb
sub
jle
mov
adc
dec
dec
mov
insb
sub
ljmp
cmpsb
shl
mov
mov
nop
sbb
add
mov
lods
adc
dec
inc
push
leave
push
sbb
decl
mov
xor
shrl
shll
std
notl
stos
orb
repnz
call
push
aam
jae
stos
cmp
out
out
aaa
xor
leave
adc
in
out
mov
mov
stc
push
cwtl
stc
sub
loope
jp
dec
pop
jp
add
ret
xchg
mov
mov
fs
test
fldt
mov
mov
divb
cwtl
jns
out
xchg
pop
mov
mov
sbb
xchg
pop
outsb
or
jl
mov
push
jle
push
call
mov
jl
xor
xorl
cmp
mov
dec
test
movsl
movsb
mov
je
cmc
imul
jmp
decl
imul
mov
gs
fstps
js
shll
xchg
inc
movsl
pushf
mov
add
cli
xlat
rcll
push
jmp
mov
mov
and
jg
jge
jmp
test
mov
shll
jae
add
rolb
jmp
jnp
loop
push
dec
cmovp
inc
xchg
mov
jb
addr16
mov
xchg
xorb
adc
jns
push
pop
push
lods
into
cmpsl
jmp
scas
gs
push
mov
out
pop
sub
fdivs
xchg
push
push
fidivl
shlb
aas
push
mov
xchg
fs
xor
push
imul
sub
int
mov
adc
out
dec
adc
jle
jge
or
popl
les
pusha
fdivs
push
lret
adc
pop
dec
cmp
sub
loope
jns
cmpsl
add
aaa
call
add
les
push
add
pushf
sub
hlt
enter
pushf
shl
into
xor
and
push
in
icebp
sti
ret
dec
sub
ja
movsl
or
xchg
rolb
or
fabs
pop
pop
xor
shll
aam
popf
gs
jae
sub
mov
sbb
add
xchg
xor
out
mov
mov
ljmp
xorl
xor
aas
mov
add
int
mov
int3
pop
pop
inc
push
sbb
cmp
cmp
push
and
sub
shrl
mov
stos
xchg
sbb
out
std
jnp
xor
faddp
dec
stos
enter
lds
pusha
mov
add
adc
xor
cmpsl
fwait
inc
in
mov
loop
and
sbb
popa
jb
pop
gs
sub
adc
mov
xchg
loope
int
test
lahf
mov
ret
stos
daa
adc
sbb
jns
stos
arpl
pop
in
dec
test
cwtl
mov
add
insl
or
sbb
push
lds
mov
xor
loop
sti
pop
or
popa
jns
dec
push
xor
push
insl
lcall
rol
mulb
mov
xor
dec
shl
cli
sbb
pop
aaa
aaa
sub
cmp
inc
jns
in
jb
xchg
push
iret
add
xchg
pop
test
sbb
xchg
and
jno
das
xlat
icebp
insl
std
hlt
addb
push
in
xchg
test
roll
in
dec
out
mov
pop
mov
push
and
adc
les
pushf
push
xchg
add
inc
adc
adc
in
mov
and
jl
iret
lahf
jns
stc
or
inc
mov
cld
mov
shrl
imull
jns
inc
shlb
js
pop
or
scas
inc
rorb
mov
xchg
jns
push
xor
das
pop
or
mov
bound
std
xor
cmp
mov
push
adc
pop
daa
jno
cmp
cmpsb
xor
add
cmp
xchg
xchg
jb
lcall
cs
mov
push
subl
imulb
sbb
mov
insb
jo
imul
push
and
pop
jmp
cmp
pop
inc
push
incl
and
pop
cmp
bound
arpl
jg
lods
insl
mov
dec
imul
xchg
dec
or
out
js
mov
jp
xlat
inc
mov
icebp
xchg
shl
xchg
jge
mov
ljmp
movsl
mov
mov
xor
jle
stos
cs
rcll
fidivrs
fdivs
and
outsl
add
pop
les
push
jne
and
xchg
push
and
test
sbb
xor
dec
int
fiadds
push
mov
je
jge
std
xor
cwtl
ja
mov
lret
sbb
cld
mov
fcmovu
push
or
jecxz
test
mov
cmpl
dec
xor
je
aas
push
push
movsb
mov
push
in
das
and
jbe
testb
add
loopne
pop
mov
inc
insl
jno
lods
ret
mov
fwait
mov
sbb
pinsrw
outsb
out
std
sti
lahf
or
cld
mov
jno
xor
lods
inc
leave
jp
jmp
out
inc
sub
push
std
ds
shll
mov
push
cmpsb
adcb
jecxz
inc
cld
sbb
movsl
and
mov
out
push
mov
adc
sbb
cmp
xchg
xlat
xor
mov
pop
mov
popa
xchg
enter
fwait
lods
mov
inc
add
dec
leave
adc
aad
fs
arpl
push
ds
mov
sub
fimull
popf
loopne
pop
push
cmpsl
push
xor
stc
inc
lret
mov
add
lcall
ja
sub
mov
icebp
push
xchg
xchg
fnsave
add
ss
inc
jae
sbb
mov
or
lds
pop
adc
dec
sbbb
inc
mov
push
sub
dec
pop
lods
idivl
jo
lods
push
xor
mov
fwait
aam
dec
stos
je
test
lret
orb
inc
add
repnz
orb
sbb
sbb
test
xchg
inc
cli
ffree
jbe
movsb
fadds
in
fdivrl
stos
jg
lea
sarl
add
fscale
mov
call
jno
insb
xor
loopne
dec
add
push
pop
test
mov
pusha
ja
mov
out
mov
jmp
push
cld
movsl
pop
cmp
sbb
cmc
imul
mov
shlb
addr16
mov
jno
mov
xchg
ljmp
mov
dec
in
jbe
sub
xchg
cmc
cmp
mov
sub
fnstsw
out
push
mov
pop
js
test
pop
xchg
iret
aaa
divb
add
mov
lds
xlat
jbe
clc
js
adc
cli
mov
cmp
sub
xor
sbb
jae
scas
imul
sbb
pop
xor
cltd
xor
ret
fmul
setg
xchg
mov
xchg
aaa
xor
mov
dec
mov
addr16
mov
xchg
cmc
es
and
mov
fstpt
dec
mov
pop
mov
pop
xlat
xlat
mov
sub
add
sub
or
stos
inc
bound
jp
out
adc
imul
pop
sub
in
mov
aas
mov
pop
fsubl
dec
pop
mov
pop
xchg
dec
and
js
jae
mov
mov
mov
pop
sbb
pusha
adc
outsb
inc
fcoml
bound
adc
lret
repnz
ja
dec
inc
cld
sub
les
lock
daa
and
scas
ror
jns
cwtl
pop
test
and
pusha
sbb
jne
cs
aas
ljmp
cwtl
dec
icebp
push
xor
cld
inc
mov
mov
sbb
cmpsb
push
mov
mov
in
je
mov
int3
into
in
mov
je
mov
int3
testb
jns
sub
in
mov
or
imul
xor
es
dec
mov
push
mov
xor
ljmp
mov
shl
or
hlt
dec
jnp
mov
mov
dec
insl
in
xor
sti
test
jb
add
dec
in
mov
fs
lock
test
mov
shlb
sarb
insb
insb
xchg
fidivrs
out
push
pop
sbb
mov
test
lea
imul
je
pop
dec
and
fcoml
lcall
testl
add
mov
xor
push
pop
rclb
add
cmp
test
imul
out
pop
mov
popf
rcrb
jmp
in
inc
or
das
jle
dec
mov
out
insb
lea
dec
xchg
sti
hlt
imul
lea
push
push
add
fildll
or
imull
pusha
repz
into
arpl
loop
xor
jb
mov
in
sub
imul
int3
cmp
jne
sti
mov
cmp
pop
xchg
sub
ret
xchg
or
or
mov
jp
sbb
cs
pop
add
or
movsl
je
and
stos
in
inc
aam
roll
int3
in
js
mov
xchg
jl
xchg
xchg
stos
mov
adc
out
and
lret
mov
popf
mov
jmp
fldcw
push
int3
movsb
insb
add
adc
sub
movsb
test
popf
addr16
cmp
inc
adcb
push
sub
les
cwtl
adc
adc
rcl
mov
fcomps
test
out
push
xchg
and
into
clc
inc
in
mov
data16
cld
mov
xchg
mov
cmp
neg
cs
loop
sbb
add
add
sbb
mov
pop
push
imul
inc
call
or
jno
cmpsl
pop
in
insl
adc
mov
mov
inc
daa
pop
in
stos
push
sub
fucom
adc
ret
cmpsb
shl
xchg
inc
out
xchg
ret
sbb
push
call
adc
jnp
out
es
push
stos
mov
fadds
jbe
pop
or
neg
cmp
lahf
xchg
popf
scas
adc
cmpsb
outsl
fisubrl
fs
mov
sub
mov
cmp
sbb
pusha
nop
dec
jge
loop
unpckhps
fistps
in
pusha
dec
add
inc
xchg
lret
add
stos
pusha
lret
mov
idivl
outsb
insb
add
ret
mov
push
aam
jnp
lcall
out
out
or
or
xlat
shlb
scas
xchg
das
mov
cli
mov
cmp
stos
jbe
xor
cli
call
xor
cmp
jbe
sub
sbb
mov
gs
sub
mov
and
push
mov
pushl
jnp
aam
inc
push
hlt
pop
sbb
daa
lods
test
inc
popf
cwtl
sahf
data16
ret
cmpsb
mov
rcll
pop
adc
ss
lcall
sbb
push
addr16
iret
repnz
inc
xlat
out
pop
imul
popa
mov
fisubrs
cli
xchg
hlt
leave
lds
stos
jle
jmp
sbbl
sub
push
std
sub
jl
sti
stos
fs
mov
adc
lcall
xor
mov
in
test
fnsave
cs
pop
dec
xchg
xor
lods
sub
adc
xchg
repnz
xchg
sbb
xchg
dec
mov
jnp
cmp
repnz
sub
imul
stos
iret
push
push
and
mov
push
inc
xchg
das
lcall
insb
pop
rcll
xor
inc
test
inc
out
dec
mov
popa
cmp
arpl
stos
pushf
sub
mov
ror
push
and
and
lods
or
or
test
or
jnp
cs
jg
adc
imul
adc
test
gs
pop
jl
jo
and
pop
imul
bsr
ss
pop
repnz
das
repnz
push
out
cmp
sbb
push
ficoms
leave
push
jecxz
std
jno
push
sub
inc
jo
adc
fisttpl
bound
scas
popf
repz
adc
in
mov
cli
loope
loopne
test
ljmp
test
out
pushf
pop
ficoms
mov
xchg
popf
cmc
mov
push
and
shlb
seto
mov
fisubrl
xor
xchg
dec
or
ja
clc
scas
cmp
inc
adc
cmpsb
sbb
dec
mov
inc
sub
sub
sbb
loopne
pop
push
and
push
es
jmp
mov
push
sbb
and
insl
loopne
jb
daa
fldl
xor
outsb
pushf
jge
push
xor
and
jo
iret
fs
mov
aaa
xchg
mov
ja
pop
test
cwtl
ret
popf
nop
xchg
mov
mov
jno
or
mov
dec
aaa
fimull
enter
adc
shl
int
movsl
gs
psrld
sbb
dec
mov
xchg
pop
and
mov
clc
int
mov
mov
jae
inc
pop
ja
mull
pop
jmp
mov
imul
repz
rcrl
lds
lock
idivb
fwait
in
xchg
gs
push
imul
lea
jp
add
popa
imull
jae
cld
mov
inc
or
cli
enter
jle
mov
push
js
mov
leave
adc
push
push
cltd
loope
arpl
sbb
dec
inc
push
sbb
aaa
ja
int3
sub
push
add
imull
xchg
push
rclb
mov
aam
cmp
nop
mov
sbb
pop
and
mov
or
mov
rcl
sub
or
xor
dec
mov
sbb
shrb
nop
xchg
sahf
sti
sub
comiss
mov
cs
adc
ret
sbb
inc
jae
xchg
out
mov
xchg
fimull
mov
fucomip
dec
inc
pop
shl
pop
in
xchg
jmp
cmp
push
push
call
pop
dec
add
outsl
mov
repnz
scas
pop
push
jne
sub
lods
rcr
push
pop
movsl
pop
jnp
mov
mov
mov
das
jne
jne
pop
xchg
jnp
sbb
jl
mov
push
fwait
sub
inc
or
cmp
adcl
jecxz
pop
sti
or
pushf
xchg
pusha
fistpll
push
mov
ss
xlat
pop
add
mov
outsl
ja
scas
lret
mov
push
xchg
faddl
nop
lods
into
add
jle
push
sub
pop
fidivrs
adc
jbe
inc
outsb
and
jmp
add
loopne
scas
out
dec
jnp
subb
lods
pop
dec
mov
push
fwait
stos
jg
pusha
outsl
imulb
xlat
cmp
xchg
in
inc
inc
sbb
push
sahf
jo
out
mov
loope
xor
adcb
jae
adc
adc
sub
mov
or
mov
pop
fimull
push
mov
popa
pop
cld
cmp
repz
cld
xlat
loop
jecxz
out
pop
lods
es
ficoms
call
push
fimuls
lock
call
mov
dec
lret
lods
out
xor
cmpsl
imul
sub
push
in
lahf
mov
xchg
dec
fmulp
push
fwait
bound
mov
lret
adc
sti
add
pusha
cltd
call
mov
pop
or
sahf
ret
cwtl
and
dec
or
pop
lret
adc
pop
dec
leave
loope
dec
ret
sub
dec
pop
loope
dec
int
arpl
jbe
sbb
mov
add
dec
add
pop
or
andl
inc
jne
dec
std
fisubrs
inc
es
pop
jb
stc
jg
mov
repnz
add
lds
pop
add
inc
loop
sarb
test
test
in
dec
mov
dec
sarb
imul
hlt
mov
xchg
cmp
pusha
inc
cmp
arpl
inc
sbb
fs
ss
cli
stos
addr16
dec
shl
dec
and
stc
cmp
fcoml
pop
call
int
dec
cmp
fmulp
jge
add
pop
and
loope
lods
pop
adc
push
nop
push
pop
pop
cmp
push
add
insl
mov
js
xor
xor
arpl
mov
sbb
cmp
shl
cmp
imul
or
pop
or
or
xchg
outsl
jmp
and
adc
addr16
jne
lcall
fstps
push
sbb
pop
jge
ja
shll
dec
xchg
andb
mov
add
cmp
dec
aas
in
pop
lret
push
dec
xchg
mov
pop
cs
pop
sbb
test
jl
pop
dec
sub
adc
mov
sbb
pop
cmc
sbb
pop
pusha
pop
addr16
insb
push
mov
pop
xchg
lcall
add
adc
jge
scas
mov
daa
out
jg
out
sbb
imul
mov
movsl
int
ss
push
mov
jp
fisubl
scas
cmpsl
inc
mov
clc
jbe
sub
pop
mov
loope
pop
in
mov
leave
in
dec
add
jne
and
js
rorl
pop
and
inc
mov
sub
aad
fdivl
out
test
xchg
mov
or
insb
icebp
jmp
mov
push
mov
xor
faddl
xchg
sub
add
mov
xor
mov
inc
sub
ret
adc
mov
xchg
and
xor
xor
mov
push
mov
dec
pop
iret
jno
aad
xor
das
bound
pop
lret
fidivs
mov
mov
sub
adc
or
inc
mov
jnp
fucompp
cmpsb
sub
cltd
dec
mov
dec
sbb
clc
dec
fsubs
decb
or
add
andb
fisttps
icebp
mov
out
jle
cwtl
into
movsl
dec
pop
mov
jl
jns
mov
xor
or
inc
sbb
std
mov
fidivrl
sub
je
daa
jg
sub
pop
pushf
mov
add
in
inc
pop
enter
cmp
mov
mov
nop
xchg
xor
aas
int
in
arpl
bound
jno
fisubl
sub
imul
and
test
xor
and
negb
shl
push
sub
clts
les
and
loopne
shl
cli
push
mov
aas
push
jle
lahf
or
out
xchg
movsb
outsb
pop
inc
mov
mov
and
fldenv
addps
sbb
inc
xchg
pop
bound
aad
adc
out
xor
movsb
mov
std
push
cmp
xor
mov
jp
xlat
sbb
ss
cs
mov
jne
xchg
lret
jno
les
orl
add
sbb
dec
push
shr
jns
pop
popa
std
push
push
test
cmp
jo
jno
jb
and
ret
pop
std
repz
dec
call
dec
cld
jmp
aaa
clc
mov
imul
xor
les
loope
pop
xchg
xchg
aas
test
cmp
dec
sahf
cmp
dec
inc
sub
movsb
mov
cmp
rolb
in
push
jno
js
lret
pop
sbb
out
pop
add
in
repz
dec
out
cmp
enter
in
shrl
inc
ret
sbb
jb
mov
xchg
imul
fisubrs
scas
inc
jecxz
int3
push
xor
out
push
jnp
pop
push
cmp
data16
fistpl
dec
lea
rorl
into
cmp
insl
popa
inc
test
stc
pop
les
shl
cmp
int3
popf
xchg
aas
xchg
mov
ret
aas
repz
adc
cmpb
mov
out
inc
xchg
inc
sub
lods
loop
inc
xchg
pop
jns
addr16
push
lods
push
xchg
movsl
sbb
mov
sbb
out
cmp
jmp
dec
sub
add
scas
sbb
std
sub
add
xor
sbb
or
mov
cli
sbb
setge
test
pushf
in
inc
push
mov
adc
insl
xchg
pushf
insl
jno
mov
stos
sub
and
lcall
xchg
pop
mov
cwtl
in
push
cmp
mov
sbb
outsb
fs
mov
pop
scas
fs
fsubrl
insl
cmpsb
jmp
mov
push
jns
rclb
inc
sbb
adc
mov
out
cmpsl
cs
aaa
scas
push
xchg
stos
add
fsubrs
outsl
stc
fwait
mov
dec
sub
sub
enter
fidivs
push
push
adc
add
filds
std
popf
xchg
adc
sub
lock
addr16
jne
in
push
mov
shll
dec
pop
dec
icebp
test
pop
adc
xchg
add
dec
loope
adc
insb
iret
pop
pop
aaa
ds
repz
pushf
mov
dec
push
push
test
fcmovb
xlat
lret
bound
xorl
mov
dec
jo
pop
mov
scas
or
xchg
sub
leave
sbb
xchg
jge
movsb
xchg
pop
rcr
negl
mov
jecxz
adc
in
subb
shlb
cmpsl
add
xor
test
lea
movsl
ffree
jns
push
lods
jne
adc
mov
adc
and
mov
sub
cmp
aaa
push
shr
jo
idivb
xor
jl
sub
popa
sbb
cmp
inc
mov
mov
and
flds
mov
push
mov
xchg
adc
adc
cld
call
or
xchg
repz
dec
pfadd
addl
in
mov
lock
fisttps
sbb
fstps
nop
mov
xchg
inc
add
lock
pop
testb
dec
and
push
bnd
fs
dec
inc
cmp
pop
fcomp
sahf
mov
jne
add
insl
test
xor
stc
out
xor
test
in
inc
mov
push
jae
mov
rcrb
adc
xor
xor
lahf
js
outsl
adcl
movsb
push
push
cmp
mov
stc
sbb
shrl
std
or
outsl
jno
ret
or
pop
bound
ret
stos
xchg
sub
push
xchg
popf
xchg
int3
clc
outsb
xor
sub
jg
add
ret
jmp
test
mov
addr16
push
pop
inc
jae
and
sbb
cwtl
lods
in
xchg
push
sbb
hlt
jecxz
fbld
fcomip
pop
lret
in
cmp
jle
addb
sbb
out
xchg
fnstenv
ret
mov
scas
imul
sub
jge
mov
or
xchg
scas
insb
pop
and
lods
mov
or
roll
rcrb
sub
outsl
cmp
or
in
adc
mov
cli
ljmp
notb
cmp
in
call
aas
addr16
int
stos
repnz
cmpsl
negl
sbb
jecxz
hlt
jle
inc
pop
iret
inc
pop
sub
cmpsl
xchg
in
js
mov
stos
xchg
test
dec
adc
xchg
cmp
adc
ds
ds
sub
adc
cld
fstpt
mov
fdivs
out
mov
fldenv
mov
sbb
mov
pop
jo
jnp
xchg
jg
inc
leave
inc
loope
outsl
sbb
xor
std
dec
pop
fbld
sbb
xchg
aad
inc
add
pop
sbb
rorb
xor
fiadds
sub
mov
pop
fsubrp
enter
sti
enter
mov
add
mov
sahf
stos
aas
shlb
ret
sbb
push
fisubrs
repz
xchg
jo
jp
fistpll
xchg
out
add
pop
sbb
dec
jp
add
mov
add
es
mov
aad
mov
sbb
popf
xor
in
mov
cs
sbb
in
sbb
adc
adc
or
xor
mov
add
fimuls
roll
not
cmp
xchg
dec
sub
xchg
jno
lods
insl
push
adc
seta
repnz
sub
mov
add
or
and
insb
adc
cld
add
gs
cmp
sbb
mov
out
xchg
pop
test
or
adcb
roll
fidivrs
xlat
lea
pusha
mov
xchg
and
icebp
adc
sub
test
sub
je
xor
cld
repz
loopne
pop
ja
jno
mov
inc
je
sbb
lds
pop
fsts
add
sbb
imul
cmp
insb
int
mov
jae
test
insb
scas
cs
push
cld
cltd
in
fcmovne
xchg
aas
nop
and
aad
iret
xor
xchg
pop
sbb
mov
sub
pop
in
sar
nop
je
mov
cmp
mov
sub
jecxz
or
add
sub
sbb
mov
cld
pop
fnstsw
cmpl
pop
daa
aam
mov
sbb
cmpsl
aas
aas
flds
cmp
mov
pop
not
dec
inc
std
in
pop
fidivl
jecxz
outsl
popf
insb
or
and
in
fisttpl
mov
sbb
fists
or
dec
dec
push
ja
sbb
mov
je
adc
ds
out
orb
xor
pushf
inc
add
cmp
jle
aaa
dec
insb
or
jp
mov
mov
adcl
adc
sbb
pop
enter
mov
push
mov
xor
arpl
shll
sbb
cmp
cmc
sub
push
inc
into
mov
xorl
sbb
data16
cmp
mov
rorl
sub
mov
test
mov
js
rcll
dec
andb
jb
or
shr
jp
stc
mov
repz
push
xor
in
jns
bound
movb
fnsave
jnp
test
dec
loop
mov
mov
push
or
les
xchg
outsb
out
into
pushl
sbb
add
mov
xor
dec
cmp
cltd
mov
and
jmp
mov
daa
test
into
andb
jp
je
mov
mov
cwtl
xchg
leave
add
xchg
sub
fidivs
negw
xor
dec
lods
dec
pop
ret
mov
xor
push
data16
lret
ficompl
sbb
out
add
out
adc
jbe
pop
mov
in
clc
xchg
and
js
inc
sbb
mov
in
ret
xchg
stos
pop
push
dec
fmull
fsubrs
gs
test
xchg
les
or
scas
arpl
callw
mov
sub
jb
int3
cmpsb
int
mov
pop
daa
add
popa
dec
ror
mov
loope
stos
mov
jmp
ljmp
jb
mov
out
lock
mov
icebp
stc
and
bound
mov
xchg
xchg
insl
dec
inc
aaa
inc
adc
push
cli
or
pop
cmp
ffree
xor
dec
and
arpl
ds
jb
mov
push
aad
ljmp
sub
add
jae
dec
dec
hlt
nop
sub
cmp
sub
sbb
cwtl
mov
and
push
lcall
stos
sbb
fistpll
mov
mov
sub
call
out
imul
cmp
mov
hlt
add
imul
mov
cli
mov
dec
push
adc
stos
pop
or
dec
test
mov
adc
idivl
mov
xor
xchg
pop
mov
sbb
pop
icebp
jns
lret
jae
mov
mov
push
shl
daa
rcrb
sbb
or
iret
cli
cmp
test
mov
mov
fdivl
fstpt
in
xchg
cli
mov
mov
fdivr
add
and
push
pop
nop
dec
loopne
orb
add
cmp
fildl
movb
push
xor
add
mov
mov
inc
inc
into
test
stc
mov
pop
add
shlb
or
add
xchg
xor
lock
loop
in
pop
mov
rclb
sbb
xchg
out
sbb
cltd
dec
flds
call
push
mov
xor
iret
or
inc
and
fmuls
ret
pop
sahf
jae
pop
sbb
or
std
jo
adc
imul
movsb
andl
dec
in
out
adc
jg
cmpsb
cwtl
cs
dec
inc
clc
xor
imull
ret
xor
xchg
enter
scas
mov
push
pop
push
add
int
or
dec
test
add
cmp
aam
stc
adc
dec
or
push
cmp
subl
push
or
pop
movsb
pop
jo
fiadds
sub
mov
lods
sbb
add
pop
enter
test
testl
stos
out
lock
mov
lods
lods
in
dec
pop
adc
mov
std
adc
dec
sub
xor
adc
sbb
int
pusha
pop
xchg
mov
xchg
lods
inc
mov
push
mull
mov
adc
fmul
fwait
sbb
sti
pop
je
dec
repnz
ficoms
in
push
mov
shrb
push
inc
sub
dec
lahf
xchg
or
mov
jbe
sub
in
mov
repz
clc
sub
or
or
fwait
sub
loope
aad
notl
mov
daa
mov
xchg
xchg
loop
and
pop
xchg
lods
mov
lds
scas
jmp
fists
lahf
mov
sbbl
push
rcll
mov
or
adc
cwtl
std
call
cmp
pop
mov
inc
or
sbb
and
bound
fwait
test
adc
imul
pusha
fcomps
sbb
xchg
out
cs
stos
mov
stos
xchg
mov
aaa
repz
adc
xor
xor
push
push
and
jg
push
adc
and
out
pop
mov
insl
nop
pop
jo
stc
loop
xorl
sbb
xchg
imul
cmp
or
and
lock
push
xchg
or
lea
bound
mov
ja
xchg
sti
pop
stos
push
add
in
jo
scas
mov
dec
sbb
stos
xchg
movb
into
pop
sub
out
dec
mov
push
mov
popa
or
jecxz
dec
cmp
push
xchg
jmp
adc
sbb
jg
inc
imul
or
and
sub
dec
call
fwait
dec
das
xchg
xchg
out
jo
inc
and
push
pop
add
cmc
xor
outsb
dec
mov
mov
sbb
ja
dec
cltd
sarb
popf
mov
pop
ja
add
fcomps
loopne
dec
das
mov
mov
fucomp
cmp
insb
out
push
cmp
and
adc
mov
in
lds
mov
mov
inc
stos
pop
mov
adc
call
imul
rolb
out
std
test
jnp
sahf
dec
xor
mov
xchg
lods
das
mov
xor
mov
fidivrl
lods
xchg
movsb
pop
xchg
pusha
mov
outsb
cwtl
outsb
fnsave
imulb
sbb
jmp
mov
ja
inc
push
or
outsb
xlat
lock
aam
add
or
in
push
or
and
lods
test
add
xlat
dec
iret
out
mov
fdivs
enter
jnp
jmp
cmp
rorb
insb
movsl
jno
stos
push
pusha
icebp
lods
psubsw
push
pushf
pop
movb
jge
enter
lods
fistl
in
int3
test
or
or
das
xor
cmpsb
xchg
iret
insl
fcmovne
mov
sbb
cltd
sahf
lcall
sbb
movsb
push
jb
mov
dec
pop
pop
test
lea
arpl
push
icebp
and
add
inc
loope
adc
pushf
pop
jmp
cmp
scas
rorb
push
jns
inc
int3
xchg
lcallw
mov
jecxz
imul
aam
xchg
sub
movsb
fcompl
enter
gs
ret
pop
push
xor
fcoms
dec
popf
push
sub
cmpsb
adc
xchg
enter
gs
jl
inc
pop
lahf
sub
lds
xchg
repnz
push
cmp
xchg
test
inc
and
push
dec
std
int3
cmpsl
jbe
aas
cmp
mov
stc
inc
gs
sbb
mov
add
fistps
ljmp
xchg
mov
ret
psllq
insb
adc
mov
rorl
in
mov
pusha
pushf
cmp
stc
ss
mov
mov
dec
fs
mov
dec
lea
cmp
negl
jge
lock
cs
cltd
push
cmp
stos
in
leave
sub
or
push
inc
pop
sub
xor
dec
pop
sub
and
ljmp
adc
push
fimuls
aam
nop
pop
jbe
and
je
popf
rorl
sbb
inc
xchg
jl
xorb
sbb
sbb
rorb
lcall
out
adc
jnp
les
cmp
loopne
arpl
ljmp
push
dec
or
lea
pop
mov
mov
inc
insb
movsb
xchg
dec
adc
mov
imul
iret
or
enter
jge
cmp
mov
sbb
jmp
push
pop
les
cmpsb
push
bound
dec
imul
scas
insl
sub
jl
jae
mov
test
arpl
inc
icebp
shll
out
in
adc
cmp
xlat
mov
pop
dec
lds
pop
ret
pop
or
shrl
jnp
fistl
mov
cmp
orb
jo
lods
and
push
pushf
adc
sub
push
and
pop
outsl
mov
into
orl
sti
into
fwait
rcll
jge
push
and
ret
lea
add
lods
test
jb
cmp
mov
mov
scas
lret
les
jo
sbb
movsb
sub
jmp
xchg
jecxz
jmp
jb
jecxz
clc
in
sahf
ret
leave
dec
cltd
xchg
or
inc
shll
inc
push
dec
sub
cmc
aas
mov
mov
inc
push
outsl
mov
mov
test
or
lcall
push
cs
mov
pop
dec
cli
fisubrl
sub
or
mov
xchg
lcall
mov
xor
lret
inc
mov
scas
popa
mov
mov
inc
mov
adc
add
mov
pop
cmp
push
sbb
loopne
leave
cs
push
sub
shlb
popa
mov
mov
sbb
imul
pop
jp
mov
mov
add
push
sti
or
cmp
pushf
push
mov
mov
out
mov
aaa
mov
adc
leave
sub
cmp
jge
jo
and
lret
scas
sub
stc
dec
mov
pop
jl
mov
xchg
dec
lret
and
stos
ret
mov
loopne
add
xchg
scas
cs
into
and
inc
mov
adc
xor
clc
loope
sub
out
xor
adc
std
outsl
jo
cmp
test
sbb
mov
fwait
clc
popf
adc
lea
jo
mov
inc
out
call
sahf
push
lret
lcall
xor
call
cmpsl
and
mov
mov
sub
and
lock
adc
aam
xchg
pop
mov
or
sbb
lock
push
mov
sub
add
les
or
push
mov
mov
mov
mov
mov
or
icebp
mov
insl
sahf
dec
pop
inc
xor
pop
sbb
sub
in
inc
in
stos
pushf
push
xchg
fs
lahf
pop
push
jb
mov
xchg
mov
jns
push
sbb
pop
push
sbb
out
inc
dec
mov
jno
and
and
call
mov
movsb
jecxz
xchg
xlat
xchg
aas
popfw
into
icebp
in
and
jg
cwtl
iret
pop
nop
movsb
std
repnz
aam
fs
push
fidivl
std
push
movsl
jb
sub
repz
cmp
add
xchg
pop
jne
gs
shl
xor
sub
roll
sbb
mov
bound
or
cmpsb
mov
mov
idiv
xor
notb
call
addb
dec
cmp
jne
cmp
cli
sbb
inc
in
mov
dec
mov
pusha
outsb
loope
inc
scas
fabs
cmp
and
outsl
push
ficomps
jg
in
jg
std
ja
push
push
mov
mov
out
push
mov
cmp
and
sub
lcall
inc
xor
inc
mov
mov
mov
idivb
pop
xor
insl
jno
and
mov
insl
shll
adc
push
or
mov
movsl
mov
xchg
adc
es
mov
pop
xchg
cmp
out
fcoml
add
outsl
stos
dec
xorb
mov
lds
dec
cwtl
dec
or
rorb
ds
and
pop
or
push
mov
push
lea
push
mov
cmc
outsl
add
pop
xor
mov
out
jo
jae
in
shr
rcll
leave
sub
sbb
imul
mov
xchg
out
fcmove
mov
jecxz
xlat
sub
jno
cmp
leave
or
outsb
cmp
pushf
mov
pop
fistl
stos
jns
push
sbb
out
mov
sahf
dec
sbb
cmc
adc
scas
push
fs
ficomps
divl
ret
fwait
insb
dec
mov
loop
sub
cmpsl
dec
fwait
cmp
adc
push
loope
pop
mov
jo
sahf
ja
add
cmp
fidivrl
sub
rorl
daa
fiadds
rcr
mov
sub
scas
repz
jae
or
lret
mov
add
daa
out
pop
add
dec
insl
popa
or
loop
inc
sbb
or
or
push
iret
lret
or
cmpb
shrl
sub
mov
cmpsb
pop
stc
and
test
xchg
std
sub
inc
jno
cli
lret
sahf
icebp
jecxz
add
cmp
daa
adc
cld
lcall
int3
inc
adc
and
test
xor
lret
popa
das
dec
ja
cmpl
sub
loop
loope
sub
lret
dec
scas
add
mov
cmpsl
xor
fimuls
sub
mov
sbb
pop
pop
rcrl
xor
push
scas
add
mov
sbb
push
scas
sbb
pushf
jp
push
stos
jnp
lret
ljmp
pop
sbb
fcmovnb
mov
mov
fcompl
xchg
or
sahf
fiadds
into
sbb
pop
push
fisubrs
lcall
mov
cmp
xchg
in
mov
sbb
push
and
pop
add
xchg
inc
std
push
icebp
and
push
jmp
jns
lods
es
mov
cs
into
ret
cmc
adc
lds
scas
jp
xor
ret
push
clc
bound
outsl
jbe
cmp
inc
fstpt
test
and
push
out
and
adc
mov
dec
sub
add
mov
xor
jp
push
cmp
stos
cmpsl
cmc
xchg
daa
dec
adc
push
shlb
out
and
pop
dec
mov
xor
add
addl
mov
cld
rcr
ror
aad
outsl
daa
imul
adc
in
lods
and
stos
mov
cmp
sbb
mov
mov
dec
fsubrl
adc
push
adc
pushf
xor
cmp
mov
sbb
sar
adc
mov
aad
ficompl
pop
mov
daa
sbb
popa
dec
repz
fwait
push
mov
sarb
fsubrp
push
sbb
addr16
jae
inc
daa
or
ds
adc
sti
pop
xor
lds
push
ljmp
rorb
mov
in
mov
xlat
mov
incl
cmp
xor
pop
jns
add
int
in
filds
mov
adc
out
rcrl
jbe
ffree
push
xor
lock
push
cmp
out
push
jns
pop
sti
jne
and
push
lret
jge
in
scas
push
sbb
or
xchg
xchg
or
shlb
jo
test
mov
lods
lcall
jo
test
jecxz
fs
xor
mov
test
aaa
xchg
rcr
loope
xchg
outsl
out
in
add
mov
xchg
sbb
inc
pop
movsb
sti
inc
cmp
xchg
test
jns
ret
jmp
mov
and
sub
mov
stc
jns
imulb
pop
repnz
jp
push
jae
out
les
out
adc
mov
nop
xchg
cli
or
sbb
dec
cmpl
insb
stos
xor
push
js
push
in
xor
popa
inc
xor
pop
popa
std
notb
roll
cld
jnp
sub
push
add
cmpsl
or
pop
test
ss
xor
clc
mov
mov
push
pop
rcll
pop
dec
fistps
into
dec
fistpl
daa
mov
sarb
xchg
ret
push
sbb
pop
adc
lret
mov
in
cmp
push
das
mov
pop
inc
sub
test
xchg
jns
or
fxch
lcall
into
test
mov
das
and
rolb
into
push
mov
push
mov
jne
cmp
mov
in
push
add
dec
leave
les
iret
shll
cltd
ds
xor
ljmp
jg
lods
or
adc
sub
push
mov
add
xchg
insb
or
lcall
dec
jle
xor
fildll
outsb
cmp
fcomi
ss
mov
sub
jne
sbb
xor
das
lods
pop
pop
icebp
ljmp
and
insb
push
pop
and
shlb
fwait
mov
push
int
or
sbb
lret
movsb
adc
ret
and
jp
das
hlt
repz
adc
jnp
pop
sbb
jno
dec
dec
rolb
jo
daa
adc
adc
mov
lds
xchg
fwait
or
scas
outsl
or
xor
stos
and
lock
xor
xor
pop
lods
lea
outsb
pop
inc
xor
cltd
aam
cmc
cwtl
mul
xchg
add
pop
nop
jl
cmc
sbb
xor
inc
and
adc
sub
sub
cmc
notl
aam
adcl
push
cmp
mov
jg
xlat
or
mov
mov
pop
sbb
jne
imul
dec
and
add
mov
daa
cmc
jne
data16
pop
cmp
nop
mov
xchg
lock
out
adc
notb
sbb
bnd
jmp
xchg
call
cmc
add
and
int3
fwait
mov
xchg
std
sub
nop
inc
lret
mov
jecxz
filds
cmpsb
inc
js
cmpl
jno
fs
bound
ds
pop
clc
mov
int
sub
mov
or
jno
fs
xchg
aaa
test
out
jmp
aas
sub
mov
fnstcw
fs
and
pusha
sbb
mov
nop
xchg
lret
scas
filds
add
xor
push
scas
out
mov
in
loop
cmc
jge
jl
in
adc
scas
cmpsl
cltd
flds
pop
cmp
mov
xchg
aam
mov
push
pop
repz
pushf
mov
xor
outsl
mov
stc
movsb
sub
jl
jg
mov
in
and
mov
xor
lods
jbe
fnstsw
insb
loope
push
inc
sub
jp
out
push
sub
ja
enter
int3
mov
sbbb
pusha
ror
fstpl
loopne
cmpsb
lea
shll
mov
lea
fdiv
in
das
bswap
dec
lods
stc
insl
and
aam
std
test
sub
adc
sub
mul
xchg
jns
ja
adcb
nop
mov
in
pop
fcomps
shll
pop
or
mov
cmp
ds
loope
loope
adc
dec
outsb
scas
push
and
out
xchg
lret
notb
call
addr16
data16
icebp
inc
xor
pop
push
icebp
mov
negl
pop
mov
popa
shrb
mov
iret
mov
cltd
inc
jo
adc
adc
pop
pop
popf
inc
out
notb
jg
lods
mov
das
pop
adc
call
outsl
dec
test
jae
pop
inc
fs
mov
mov
mov
mov
mov
scas
or
sahf
xor
jb
aas
cmp
in
fdivrs
adc
outsb
xchg
adc
mov
mov
js
sar
fnstcw
mov
cmp
dec
jmp
cltd
cwtl
push
test
mov
stc
push
add
dec
mov
xchg
dec
lcall
in
mov
mov
hlt
xchg
pop
jb
cmc
push
cmp
xchg
jbe
lods
xchg
sbb
add
in
in
int3
fs
push
pusha
xor
in
mov
into
pop
in
dec
mov
js
push
pop
sub
push
rorb
push
xchg
xor
sub
sahf
push
hlt
test
repz
cmp
jno
ret
out
mulb
pop
mov
adc
jno
int
les
adcl
popf
les
inc
cmc
jno
fldt
mov
fdivl
add
or
pusha
mov
push
push
mov
push
adc
in
mov
adc
out
test
leave
nop
loop
mov
hlt
lahf
aas
test
push
push
aaa
int
shl
jne
addr16
mov
dec
inc
scas
cmp
fdivp
jmp
add
pop
or
dec
inc
out
xchg
add
add
aaa
and
xchg
popa
jbe
and
cli
fwait
aas
sub
lcall
icebp
sbb
enter
ret
rclb
sub
adc
je
jge
lods
push
test
cmp
or
xchg
or
les
aaa
mov
cmp
sub
mov
jae
pop
ds
xchg
shrl
rcrb
push
inc
imul
xchg
imulb
xor
xor
push
push
jbe
iret
push
mov
sub
mov
push
outsl
cmp
addr16
xchg
enter
mov
inc
ret
add
addl
or
sahf
pop
cld
mov
dec
xor
decb
insb
cs
dec
je
test
andl
sub
fs
xchg
push
daa
pop
xchg
cmp
lahf
ret
mov
outsl
xchg
daa
pop
push
mov
mov
in
inc
ret
das
insl
mov
push
xor
les
dec
xchg
jecxz
ret
enter
scas
idivl
jge
cmp
mov
pop
mov
and
popa
shll
pop
popf
sbb
aad
test
ss
in
mov
add
xchg
insb
stos
sub
push
pop
jbe
pop
mov
cmpb
fnstsw
add
div
repz
push
fstpt
dec
lods
xor
sti
mov
lock
ss
movsl
fsub
orl
js
hlt
lds
loopne
stc
imul
daa
pop
jecxz
inc
lds
stos
pop
pop
imul
pop
js
adc
fwait
pop
pop
fildl
fst
and
outsl
dec
data16
arpl
test
pop
dec
xchg
pop
or
fwait
xorb
clc
scas
and
sub
outsb
pop
inc
jne
into
cmp
nop
cmp
dec
or
xchg
xchg
mov
lahf
sub
cmp
dec
xchg
ret
dec
push
sub
outsl
mov
mov
jmp
jmp
sub
jp
pop
stos
jle
cmp
add
adc
rcrl
andl
fmull
mov
nop
mov
out
les
xchg
adc
sub
adc
lock
pop
test
outsb
inc
movsb
inc
out
mov
xchg
xchg
lret
cmp
ds
dec
rolb
scas
frstor
arpl
mov
fmuls
dec
cmpl
cltd
and
mov
mov
mov
mov
mov
mov
pop
hlt
cld
pop
shrb
in
jne
fsubl
cmp
std
ljmp
ret
mov
data16
pop
pop
mov
add
mov
cmpsb
scas
daa
out
sub
cwtl
push
gs
jne
in
bound
ret
je
inc
sti
mov
lds
js
mov
jl
jnp
mov
out
push
sub
inc
imul
mov
insl
xor
movsb
fwait
jnp
leave
rcrl
enter
and
loopne
dec
cld
cwtl
push
push
pusha
popf
call
pusha
xchg
addr16
fdivl
xlat
push
adc
notl
lods
inc
repnz
xchg
insb
pop
lods
and
int
scas
outsb
test
lahf
rclb
mov
sbb
sbb
mov
int
mov
fwait
hlt
enter
mov
lds
lods
or
jo
adc
push
iret
jae
repnz
sub
dec
and
ror
lea
fnop
int3
int
rorb
sbbb
ljmp
stos
inc
cltd
in
jg
lcall
inc
mov
add
in
inc
mov
arpl
lret
sbb
daa
xlat
jne
scas
dec
fidivs
arpl
int
xlat
pushf
lock
aas
shlw
fisubrl
mov
loopne
push
lahf
push
out
cmp
mov
cmp
cmp
xor
add
test
adc
sbb
cmp
add
jp
in
mov
xchg
push
outsb
pusha
cmp
xchg
scas
pop
and
fisttpll
int3
mov
or
ss
add
mov
arpl
jnp
push
dec
dec
jb
imul
mov
test
cmp
lock
lcall
cmp
jg
repz
mov
jmp
lods
mov
add
cmp
in
pop
xchg
sub
iret
cmc
int
inc
lcall
fstps
cmp
leave
push
mov
ret
ja
push
int3
jae
and
test
mov
fsubrl
push
dec
out
aas
out
call
adc
stc
adc
aaa
or
mov
mov
jl
push
cmpb
jle
in
iret
gs
push
jge
jle
mov
movsb
jbe
shr
sbb
mov
leave
jmp
and
cmpsl
xchg
inc
rolb
sbb
sub
int
mov
mov
out
xchg
pop
icebp
dec
roll
xor
sub
adc
sub
and
inc
dec
cmp
mov
call
rorl
push
or
cltd
cmp
sub
mov
pop
loop
fucomip
into
mov
cmp
pop
js
das
sti
in
inc
notl
aad
negl
loope
test
add
jne
sti
dec
lret
sub
push
jo
inc
cltd
popl
adc
and
sub
cli
loop
out
mov
pop
sub
adc
stos
je
dec
xor
xchg
fsubr
inc
and
ljmp
test
inc
cmp
mov
jge
mov
and
mov
lret
mov
repnz
lock
repz
lcall
xchg
push
lods
loope
scas
scas
fpatan
enter
xchg
popa
cmpsb
mov
iret
out
push
sbb
push
add
dec
xchg
mov
lds
arpl
icebp
in
dec
icebp
push
popf
lods
cld
imul
xchg
and
adcb
shll
negb
imul
jno
jns
inc
mov
pop
or
wbinvd
adc
cwtl
mov
fsub
jecxz
movsb
ds
add
sbb
xchg
mov
cmp
sbb
cwtl
dec
jnp
fstl
inc
fstp
out
arpl
hlt
mov
mov
mov
mov
jle
adcb
mov
out
dec
in
rorb
sbb
mov
push
aad
mov
movsl
in
test
ffree
pusha
shl
add
push
jae
imul
out
xor
shll
add
mov
xchg
test
push
popf
mov
add
and
nop
xor
dec
mov
sub
loope
add
mov
inc
xchg
add
push
scas
push
mov
scas
in
insl
aas
xor
xor
test
push
scas
mov
or
int3
sbb
rorl
or
icebp
cmp
stos
jmp
push
and
or
movsl
popl
mov
repnz
insb
into
roll
and
cmp
js
dec
mov
mov
cs
push
insb
push
ret
scas
cmp
adc
sub
or
mov
aam
push
mov
mov
mov
dec
mov
xchg
fs
pop
or
pop
shlb
jns
pop
mov
das
or
js
xchg
shll
popa
je
push
push
inc
or
lods
dec
leave
adc
movsl
cmp
jno
adcb
in
cltd
mov
mov
dec
xor
inc
mov
push
jnp
mov
pop
orl
pop
iret
sbbl
loop
inc
aad
movsb
repnz
cs
test
stc
divb
stos
jmp
scas
dec
jge
js
lea
xorb
aaa
xchg
sbb
pushl
pop
add
pushf
sar
in
pop
add
mov
cli
iret
mov
aad
jno
cltd
call
lock
lret
imul
out
mov
test
cmp
adc
repz
sti
add
cmpsl
stc
sti
mov
outsl
into
sub
sahf
lds
shll
insb
jo
sub
xchg
aas
iret
aaa
adc
sar
pop
les
push
pop
shll
addr16
dec
ja
jmp
mov
push
add
aaa
xchg
int3
popl
fcmovnbe
push
lock
les
cmp
into
sub
or
jp
jnp
in
cltd
sbb
sbb
jge
into
enter
movsb
sti
popa
pop
fisttps
outsl
mov
mov
aas
neg
sub
push
cmp
cmpsb
or
test
inc
test
cmp
dec
dec
cmp
mov
repz
or
sub
lahf
adc
out
mov
mov
dec
xor
ficomps
and
jo
in
mov
add
int3
aaa
lea
lret
cli
out
mov
in
imul
add
adc
add
or
lret
mov
and
adc
sahf
jl
test
test
loopne
scas
xor
adc
mov
enter
xchg
jmp
pushf
fcompl
mov
push
lods
movsb
lahf
arpl
addb
loop
push
imul
lahf
add
mov
shlb
ret
je
mov
mov
lea
xchg
pop
jg
sahf
push
push
aad
adc
mov
imull
faddl
lock
shll
push
fsubrs
sub
lret
test
leave
popl
test
mov
and
xchg
xchg
pop
xchg
jg
cld
push
jne
inc
sti
loope
mov
outsl
in
orb
jecxz
adc
es
sub
dec
aad
inc
lret
cmp
mov
mov
xchg
mov
scas
inc
call
ret
adcb
rcrb
call
fcmovnbe
pop
xchg
loopne
cmp
jnp
pop
xchg
pop
aaa
jl
je
xchg
lcall
insl
into
inc
fnsave
pop
or
add
mov
aad
mov
dec
or
inc
daa
mov
cld
jmp
setge
ds
jbe
int3
leave
dec
lods
xor
call
lahf
xor
xchg
dec
jns
hlt
sub
inc
xchg
cli
scas
inc
xor
mov
ja
outsl
scas
ljmp
jecxz
lods
jp
mov
or
or
popf
xchg
in
sbb
xchg
add
push
xorb
sbb
repnz
adc
sbb
test
pop
jb
scas
je
pop
das
inc
xlat
push
inc
adc
push
xchg
shr
inc
xchg
xor
gs
push
cmp
mov
push
hlt
fcomps
pop
mov
pop
jae
or
ret
ljmp
outsb
rcr
inc
adc
sbb
pop
ret
vmwrite
pop
dec
ja
mov
push
sbb
in
test
iret
rcrb
mov
es
out
cmp
mov
xor
push
add
cmp
jge
inc
in
pop
pop
imul
jmp
mov
je
adcb
dec
scas
movsb
imul
imul
outsb
cmpsb
push
inc
iret
or
ficomps
ds
out
sub
cmp
mov
pop
cmp
or
push
movsl
jecxz
push
or
mov
fisubl
fmull
jmp
mov
push
pop
lock
sahf
push
movsb
mov
mov
mov
xor
out
shr
lock
ss
push
and
inc
pushf
mov
cmp
and
fstps
jae
les
ja
test
adc
jecxz
cmp
xor
inc
cmp
jl
mov
mov
popa
xchg
punpckhbw
fs
jmp
repnz
mov
cli
jmp
in
cmp
xor
xchg
addb
ret
cmc
xchg
sbb
xchg
sub
insl
mov
movsb
cld
mov
sar
xchg
mov
mov
xchg
outsb
mov
push
rolb
out
or
mov
xor
into
inc
jno
jle
daa
mov
mov
bound
aas
or
es
xor
sarb
adc
cmpsb
aaa
fwait
and
in
or
rdseed
out
enter
xchg
hlt
aaa
sarl
xchg
add
add
cmpsl
dec
mov
dec
mov
sbb
push
test
add
mov
sahf
sub
cmp
jb
gs
iret
int
mov
in
sbb
loop
adc
xlat
lods
addr16
jno
jo
pusha
adc
sbb
outsl
jg
rol
mov
scas
sub
dec
cmpsb
hlt
cmpsl
outsb
cmc
sbb
inc
lahf
add
mov
cmp
xchg
inc
inc
jp
jno
mov
sub
mov
setno
jne
dec
adcb
xor
and
mov
inc
mov
or
dec
mov
insl
push
testl
cmpsl
outsl
xchg
repnz
jl
cmp
mov
or
sub
mov
ja
xchg
lret
aam
sbb
cs
ret
insl
mov
push
clc
jb
xchg
fidivs
mov
jp
into
mov
xchg
mov
add
je
dec
divps
mov
ret
push
mov
or
inc
fildll
dec
imul
mov
ret
fdivrs
mov
cld
cld
out
cltd
inc
std
ret
faddp
test
mov
ret
dec
push
or
inc
sbb
lret
scas
or
bswap
sbb
aas
jmp
ljmp
mov
lock
insb
pop
popa
inc
pop
xchg
imul
pusha
lcall
icebp
or
and
pusha
aaa
jge
call
lock
test
jb
ljmp
aaa
popa
sbb
push
je
adc
dec
or
insl
adc
ja
xchg
mov
test
lret
sub
sub
xchg
jmp
imul
fwait
sub
cmp
ret
imul
push
add
adc
imul
ss
mov
out
mov
push
dec
push
enter
cmpsb
cmp
aaa
and
lret
ss
sub
mov
inc
jg
mov
or
mov
adcb
fwait
out
xor
nop
mov
out
pop
jnp
into
and
fwait
je
fst
pop
mov
cmp
punpcklbw
fidivl
es
mov
sbb
movsl
fucomip
sbb
jl
xchg
aad
lock
in
loop
adc
out
dec
je
dec
ret
out
test
fs
cmp
cwtl
in
cmp
in
add
cmp
jmp
insl
xorl
mov
outsb
or
push
sub
rcll
imul
mov
bound
rcll
mov
ret
pop
scas
mov
pop
arpl
xchg
xor
imul
add
int
frstor
pop
sbbb
xchg
xor
push
add
inc
xor
adc
popa
push
xchg
pop
aaa
fisttps
fisubrs
movsb
cli
mull
fildll
pop
les
inc
das
fwait
rcl
mov
ret
cs
sbb
inc
mov
icebp
in
rclb
sub
cmpsb
push
rcrb
mov
and
iret
or
mov
ljmp
cs
out
push
inc
dec
fimull
mov
sbb
and
sahf
and
dec
lahf
push
push
das
clc
lock
and
inc
mov
ljmp
outsl
inc
clc
aas
test
cltd
movsb
adc
rolb
cmp
popf
mov
pop
dec
mov
popa
inc
sub
popf
add
pop
lds
stc
cld
fdivrs
imul
xor
mov
cli
adc
mov
test
xchg
mov
fisubl
aaa
in
sub
mov
push
imulb
inc
xchg
or
test
pop
add
or
lds
jae
pop
and
adc
pop
adc
mov
inc
adcl
xor
ds
jo
into
or
sahf
dec
es
jne
sbb
adc
jb
je
dec
push
adc
sahf
stos
sub
pushf
pushf
loope
or
push
sub
fwait
aad
mov
or
dec
mov
or
sub
loop
test
push
and
lret
mov
andb
cld
test
insl
jle
ds
and
xchg
out
xchg
jae
in
lods
push
lahf
xor
repnz
sbb
iret
cs
xchg
sbb
sarl
out
sar
dec
mov
push
fwait
xchg
lahf
pop
mov
cwtl
mov
push
rcl
mov
test
stos
sub
inc
insl
scas
or
sub
sarb
xor
movnti
sbb
lcall
xchg
push
pop
ret
test
pusha
out
insb
dec
push
xor
add
lods
jle
jecxz
pop
stc
sub
data16
xchg
arpl
sbb
in
pop
jp
mov
dec
mov
mov
in
int3
loopne
mov
faddl
insb
xorl
sets
ja
cltd
pop
orb
int
daa
mov
lea
out
add
add
mov
fldl
mov
adc
fisubs
dec
jae
sbb
pop
nop
repnz
mov
in
mov
mov
sub
mov
mulb
mov
aam
dec
leave
cmc
mov
test
ja
cli
fsubrs
in
dec
jge
sti
adc
insl
inc
mov
mov
and
ret
jnp
mov
jp
lahf
pop
cwtl
push
add
imul
sbb
dec
push
lods
pop
notl
insl
inc
ljmp
xchg
pop
es
sbb
push
jb
sub
and
sbb
mov
iret
icebp
rcl
mov
rcll
popa
shlb
adc
cwtl
and
mov
shlb
test
in
pop
mov
lret
sbb
add
cmpsb
sti
cmp
mov
sub
inc
leave
aas
inc
ret
ret
pusha
mov
and
cmp
adc
jno
outsb
jns
xlat
mov
jne
aaa
dec
push
and
dec
add
in
push
or
insl
ret
mov
xchg
lret
jecxz
xlat
les
stos
jae
in
ss
jge
jne
mov
fdiv
imul
mov
sub
push
mov
loope
bound
pop
sbb
in
fimull
out
out
nop
and
xlat
dec
imul
adc
jmp
inc
xchg
loop
pop
dec
mov
dec
lret
or
mov
inc
cmpsl
xchg
xchg
clc
add
mov
roll
jp
fisttpl
mov
dec
outsl
and
xor
loopne
movsl
stos
xchg
in
add
out
repz
jno
pop
mov
test
add
rcrl
rcrl
incl
or
pop
out
lods
push
dec
fisubs
xchg
mov
push
pop
out
add
sbb
leave
lret
dec
out
push
sbb
xor
xchg
push
insl
aaa
aaa
xor
dec
cmc
pop
fisubrs
add
adc
dec
jl
jne
or
subl
push
pop
pop
mov
push
mov
pop
negb
scas
push
aam
stc
inc
movsl
pop
jl
lar
arpl
mov
sbbl
lea
aas
div
mov
lret
inc
push
sbb
movsb
cwtl
fimull
mov
sahf
or
adc
push
xor
test
xlat
movb
cmp
out
jge
adc
adc
inc
jecxz
cmp
lret
xor
loope
mov
and
stc
jmp
into
stc
sbb
sbb
cli
clc
sub
test
loop
or
into
pop
inc
fimuls
test
xchg
push
jecxz
je
push
out
test
outsl
mov
sbb
clc
or
jmp
push
mov
movsb
pop
divl
loop
insl
jg
es
in
push
sarl
xchg
lds
pop
jae
inc
cltd
lock
testb
jl
mov
fwait
sub
cmpsb
das
and
mov
ret
test
pushf
mov
xchg
sbb
out
mov
mov
ss
rep
cltd
inc
adc
xorl
mov
loop
in
and
jmp
push
mov
push
mov
jmp
scas
nop
mov
push
enter
jnp
inc
shlb
sub
jp
push
lds
outsb
push
in
in
push
ds
dec
dec
jb
frstor
clts
adc
pop
jmp
xor
imul
dec
ss
rclb
int3
aam
cmc
and
pop
mov
inc
xchg
pop
inc
testl
sbb
jbe,pt
xchg
lods
mov
pop
imul
sbbb
nop
mov
into
lock
push
in
lcall
leave
js
div
mov
add
mov
mov
push
inc
out
cmp
mov
sub
mov
adc
sbb
loopne
pop
clc
mov
mov
faddp
inc
stos
ror
add
sbb
inc
aad
mov
xchg
mov
bound
xchg
mov
pop
push
sub
push
ljmp
enter
xchg
cmp
fmul
cld
xchg
cmp
loope
cmpsl
sbb
jecxz
rolb
sbb
nop
cltd
inc
push
sbb
test
pop
daa
mov
es
icebp
bound
mov
ret
leave
xchg
mov
push
or
insl
fisubl
les
cwtl
mov
adcl
js
pushf
daa
sbbb
in
adc
jg
test
xchg
adc
jl
xchg
mov
std
scas
pushl
stos
pop
jne
jmp
mov
and
xchg
xor
mov
daa
dec
adc
jnp
xchg
sbb
push
push
adc
les
ljmp
mov
jns
repnz
or
lcall
mov
xor
ljmp
jmp
xchg
insb
daa
mov
out
xchg
and
mov
fisubrs
mov
rclb
jg
mov
or
sahf
push
stc
stos
shlb
sbb
push
sub
out
cltd
loopne
mov
cmp
dec
add
xor
lret
mov
inc
cmp
inc
movsb
imul
out
fldl
aad
cmp
insl
arpl
push
jns
popa
push
jp
ret
dec
add
push
fcompl
mov
adc
push
jl
xor
sub
roll
mov
leave
pop
jno
jmp
jne
adc
sti
insl
mov
fwait
and
enter
es
xchg
rorl
pop
jl
movsl
imulb
inc
insl
mov
sbb
or
sub
adc
sbb
mov
jae
adc
push
lods
jne
mov
jmp
mov
icebp
sbb
rcrb
inc
jmp
aas
stos
xchg
push
in
xchg
fnstsw
sub
inc
fs
das
and
dec
dec
push
gs
popa
fcomi
mov
mov
or
rcr
mov
or
arpl
cs
std
pusha
pusha
fwait
pop
popf
jg
out
fmull
lock
jne
mov
xchg
ret
or
pop
mov
daa
mov
or
fsubs
cmc
jle
bound
cmp
pop
add
mov
add
scas
sub
mov
js
sub
cmc
or
popa
decl
pop
imul
or
test
pop
adc
scas
mov
inc
mov
jnp
imul
in
inc
test
push
adc
sbb
sub
dec
insl
mov
es
push
imul
ret
xchg
test
mov
dec
fidivrs
push
in
xchg
cli
out
cld
add
fsubp
ret
movsb
mov
lret
xchg
jmp
mov
jecxz
push
mov
nop
mov
and
in
adc
popa
jo
fwait
cltd
push
xor
xor
adc
nop
scas
jp
lret
or
sbb
jg
adcb
push
dec
notb
lods
inc
mov
mov
cli
enter
popf
dec
and
inc
cltd
pop
or
jle
js
lds
sub
out
hlt
push
jmp
or
test
lcall
push
push
sub
and
aaa
scas
mov
shrb
cmp
lcall
cmpsb
call
fimuls
jp
lds
sahf
inc
fdivrp
add
into
movq
jmp
cltd
movsb
mov
and
jge
arpl
ja
leave
cmp
and
mov
push
outsb
push
lea
decl
and
xchg
and
fiaddl
jmp
or
mov
popa
cmpsl
fdivl
popf
push
shl
fnstsw
mov
aas
adc
and
jbe
or
test
push
movzwl
ljmp
aad
popa
cmp
pop
and
jns
loopne
cltd
std
repz
or
mov
jae
rcr
sub
fwait
mov
xchg
cmpsl
or
or
add
jmp
mov
inc
jmp
pop
ljmp
inc
xchg
xchg
dec
sub
add
inc
or
xchg
push
or
int
or
inc
ret
push
fwait
popa
add
cmp
out
lret
hlt
shlb
cmpsb
mov
dec
jmp
push
xchg
out
out
in
mov
mov
jb
sub
sbb
mov
push
mov
das
xchg
fiaddl
inc
jmp
je
es
aam
jge
and
or
loop
jns
add
jbe
sub
fdivp
and
sbb
sahf
cmp
hlt
mov
jmp
repnz
lds
mov
push
je
push
mov
push
jmp
repz
call
mov
mov
pop
das
fstl
shll
mov
mov
aas
adc
into
mov
imul
iret
xchg
jns
repnz
mov
mov
out
lea
loope
aad
loopne
repnz
push
je
dec
xchg
xor
scas
sbb
aam
add
mov
jno
xchg
lods
jg
adc
shrl
bound
std
pop
sbb
dec
add
fpatan
loopne
cmpsl
mull
lret
cmp
xchg
sbb
iret
jp
cwtl
and
clc
into
push
sbb
inc
lret
jecxz
jno
stc
or
inc
pushf
iret
in
inc
aam
rolb
leave
inc
xchg
cmpl
icebp
pop
push
or
in
xor
sarl
cld
addl
fisubl
inc
lahf
mov
cmp
bound
daa
fwait
pop
inc
dec
inc
stos
push
stos
xor
pop
mov
subl
je
mov
repnz
popa
aad
xor
jl
stos
rorb
ljmp
add
repnz
sarb
sub
sahf
fcomi
popf
mov
stos
cwtl
cmp
pop
out
in
jl
aaa
cs
mov
inc
adc
daa
push
xor
jg,pn
sbb
scas
pop
mov
adc
ret
std
int3
in
sbb
mov
inc
mov
aaa
ret
mov
add
mov
cld
pop
pop
or
mov
inc
pop
pop
xchg
in
inc
lcall
fisttps
push
sti
mov
xchg
into
loope
cmp
mov
adc
pop
test
and
push
repz
dec
sarl
jp
jnp
pop
push
in
dec
fcom
xor
loop
and
pop
push
lahf
xchg
jmp
jge
popl
int3
mov
cmpsl
pop
mov
gs
xor
mov
daa
mov
sahf
ss
cmpsl
jne
push
fiadds
jnp
aaa
sbb
xlat
pop
mov
lret
push
scas
out
icebp
inc
mov
pop
add
jb
insl
mov
xor
icebp
or
stos
mov
insb
repnz
enter
call
adc
fdivrp
dec
add
pop
cmp
mov
jb
in
hlt
movsl
pop
mov
push
sbb
ret
xchg
mov
lds
sbb
pop
jp
xlat
inc
repz
xor
lcall
dec
xchg
xorl
sub
add
stos
std
xchg
dec
or
push
mov
sbb
arpl
xchg
in
inc
jmp
jae
or
jg
and
sub
icebp
pop
xchg
lock
dec
cmc
je
lcall
je
lods
divl
lret
dec
push
out
push
scas
xchg
dec
mov
dec
xchg
into
push
and
les
scas
pop
shrl
mov
lret
mov
scas
inc
sub
dec
pswapd
imul
xchg
cs
ds
cmpsl
icebp
mov
or
add
cmp
push
repnz
fildl
pop
mov
sub
mov
mov
jp
inc
lods
push
adc
add
repz
mov
and
sub
mov
jmp
mov
sbb
mov
mov
push
mov
stos
jb
ret
mov
xchg
jae
lret
mov
and
add
movsb
cmpsb
adc
pop
flds
ret
clc
xchg
cmp
jp
ss
aas
xor
jg
scas
adc
fldcw
xchg
int
cmp
mov
push
push
adc
sbb
jmp
bound
mov
jbe
push
mov
xlat
cwtl
lds
push
push
test
pop
in
or
adc
mov
fisubs
mov
push
mov
push
mov
jne
stos
pop
inc
insb
je
sti
clc
negl
cmpsb
mov
mov
xchg
pop
or
cmp
stos
xor
or
xchg
fisttps
sub
cmpsb
arpl
xchg
fs
sbb
cmpsb
bound
mov
xchg
inc
decl
pushf
push
outsb
lods
mov
adc
ljmp
cmc
sub
dec
add
adc
jmp
push
inc
and
enter
sbb
push
stos
mov
rol
ljmp
pop
aaa
mov
mov
xor
hlt
pushl
adc
or
mov
dec
out
pop
outsl
xor
push
pop
outsb
loop
fisttpl
push
dec
inc
aad
push
shlb
andl
pusha
mov
outsb
jns
xlat
mov
sub
imul
outsb
jbe
and
stos
inc
jne
loopne
dec
mov
sbb
test
int3
xor
push
outsl
mov
jge
stc
jno
outsb
mov
add
mov
sbbl
push
jne
sub
inc
mov
pop
scas
sbb
cmp
and
dec
xor
sub
mov
or
in
adc
dec
mov
sbb
ficoml
mov
and
shlb
dec
frstors
outsl
fs
imul
or
cmpsl
mov
fs
sbb
movsl
xchg
out
cmpsl
movaps
insb
loop
inc
in
push
rolb
lcall
pop
imul
jae
or
mov
push
arpl
pop
cmpsb
add
enter
incb
js
jno
movsb
add
sub
jno
aas
and
and
inc
subl
sbb
jp
push
sub
jmp
pushf
add
mov
jnp
ds
outsl
fiadds
push
xor
mov
pushf
sbb
mov
pop
xchg
gs
inc
cmp
stos
icebp
outsb
repnz
mov
scas
mov
jno
mov
in
adc
popf
repz
ret
fwait
adc
orl
mov
push
shlb
push
dec
scas
xor
mov
xchg
sbb
test
leave
shl
sub
lea
mov
in
std
test
mov
push
mov
xor
xor
cld
dec
cmp
sbb
and
lcall
outsb
aam
dec
loope
sbb
pop
loop
jns
rcrb
out
jp
push
out
add
pop
neg
pop
jmp
stos
jp
repnz
jmp
sbb
push
cli
notl
mov
xor
jecxz
jne
scas
lret
ss
xchg
rorl
push
mov
hlt
ljmp
testl
sub
cmp
fadds
test
stc
in
fwait
or
jecxz
add
jae
or
mov
mov
enter
mov
dec
mov
fidivl
xchg
adc
je
sbb
out
dec
inc
mov
shlb
xor
mov
adc
fwait
xchg
mov
push
ret
mov
xor
fstps
sbb
int3
jne
mov
js
pop
and
sbb
and
aam
sub
repz
leave
sahf
add
mov
mov
cmpsl
cwtl
ljmp
sub
push
arpl
pushf
mov
in
dec
add
outsl
sti
arpl
mov
xchg
and
fwait
push
jl
mov
jl
cld
push
in
xchg
clc
outsb
mov
sahf
xchg
jne
pop
jle
imul
xchg
daa
mov
roll
inc
jae
cmp
pop
cmpsl
or
xor
cmp
ljmp
clc
add
mov
repnz
les
stos
add
jne
pop
jns
rclb
or
add
cmc
std
cmp
out
mov
iret
mov
insb
pop
jmp
jmp
int
pop
pop
xchg
or
dec
fwait
les
push
mov
pop
add
sbb
dec
dec
inc
ret
push
cwtl
jg
inc
push
sbb
test
mov
mov
xchg
inc
inc
lret
ljmp
push
sub
js
mov
aas
js
hlt
leave
dec
das
sahf
xrelease
mov
hlt
jecxz
xchg
xchg
pop
jnp
rclb
mov
mov
lret
scas
fsubl
mov
adc
cs
clc
sbb
inc
cmc
out
scas
dec
ss
mov
fstpt
pushf
cmp
movsl
and
inc
lods
lahf
mov
std
xchg
mov
addr16
lock
insl
inc
popf
push
push
mov
cld
das
int
jnp
cld
xor
out
in
jb
add
lret
es
rol
popa
int
cmp
sub
pusha
rcrb
and
addr16
mov
xor
ret
sub
pop
imul
repnz
sbb
xchg
inc
add
mov
outsb
or
sub
fldcw
dec
sub
dec
inc
dec
shrb
ss
repnz
int
mov
rcll
ljmp
pushf
sbb
in
jg
xchg
test
or
je
out
roll
push
xchg
pop
jns
subb
fcoml
xchg
push
adc
popa
or
pop
jge
push
push
lret
jno
sub
dec
dec
xchg
mov
sub
push
mov
add
mov
andl
mov
out
mov
inc
add
push
jno
adc
out
add
cwtl
jno
lahf
jnp
lods
or
loop
pop
icebp
data16
imul
mov
adc
loopne
pop
nop
xchg
ljmp
pusha
pop
lcall
or
sbb
bound
int
imul
pop
push
mov
enter
mov
mov
daa
ljmp
xchg
inc
fcoml
jns
push
add
adc
adc
js
or
jmp
cmp
out
xchg
or
stc
inc
xor
xchg
push
or
sub
mov
int3
shl
aad
mov
mov
mov
in
dec
out
xor
dec
test
or
xchg
lods
loopne
in
ret
or
loopne
and
dec
cmc
insb
or
xlat
push
dec
movsl
push
rcrl
dec
in
in
sbb
pop
jns
fmulp
in
inc
aaa
xor
mov
xchg
fwait
xchg
sbb
hlt
lahf
arpl
std
mov
dec
add
and
pop
xor
and
lcall
add
scas
push
push
mov
xchg
dec
fcmovne
cli
int
lret
jbe
icebp
cmp
xchg
and
dec
les
sbb
push
nop
lahf
dec
test
push
aad
sti
sub
mov
mov
cmpsl
jo
test
add
adc
pop
mov
mov
call
pop
lret
jle
add
pop
push
or
sbb
ljmp
das
insb
jl
cmp
mov
pop
in
sbb
and
pusha
mov
xchg
adc
and
das
sbb
sub
ss
jns
fwait
cmp
xchg
push
stc
daa
mov
mov
pusha
js
test
push
les
sub
pop
testl
int
xchg
pop
lods
jns
sub
iret
cmpsl
mov
cli
jge
mov
xor
mov
push
test
cmp
push
aaa
rcl
lcall
outsl
lcall
sbb
mov
dec
scas
adc
xor
rcrb
dec
jbe
arpl
mov
mov
cmpsl
iret
mov
xchg
mov
pop
or
enter
sti
push
xlat
xor
adc
cmpsl
ds
xor
outsl
fisttpll
xchg
int
stos
or
inc
lods
fldl
loopne
adc
fdivs
fs
mov
cltd
sub
mov
arpl
xchg
mov
mov
xor
stos
xor
jle
inc
push
data16
les
pop
xor
nop
mov
or
push
adc
xor
mov
inc
mov
sahf
jp
int3
outsb
and
push
pop
cmpsb
add
jb
pop
mov
jb
dec
je
mov
adc
push
es
out
loop
lods
into
into
lods
movsl
inc
mov
mov
arpl
dec
mov
fcoms
popa
xlat
mov
xchg
lock
sub
bound
pushf
cmp
cmp
aaa
sub
mov
pop
add
xchg
pop
aam
jae
add
mov
repnz
cli
adc
push
xor
stos
cmpsl
pop
aas
popa
out
test
push
sub
add
lret
fsubrl
mov
inc
clc
mov
jne
outsl
stc
inc
mov
idivl
adc
popf
ljmp
mov
push
add
stc
cmp
test
pop
adc
xor
out
or
das
movsl
add
lahf
or
add
sti
arpl
push
ret
or
icebp
stos
in
jnp
ds
cmp
fwait
jmp
outsl
loopne
jmp
push
mov
cli
xor
fwait
pop
lret
add
pop
arpl
and
jge
mov
push
gs
outsb
fidivrs
mov
ja
cmp
cli
sbb
sub
or
xchg
mov
adc
test
jnp
shll
gs
rcrb
sbbb
cld
jo
aaa
out
sbb
push
and
cltd
pop
dec
lea
sub
int3
arpl
int3
xor
lret
jno
jle
lock
repz
cmp
push
nop
push
mov
gs
enter
pminub
sbb
sbb
in
shrl
cmpsl
mov
push
dec
mulb
js
out
imul
out
aas
loope
test
in
dec
fucomip
rolb
ret
push
ficomps
push
push
les
inc
jle
repz
add
add
rcl
mov
outsb
mov
sahf
add
cmp
jbe
loop
push
loop
out
shlb
mov
std
xor
push
jp
xor
in
push
ret
sub
out
add
stos
pop
rol
rcll
mov
or
xor
aad
call
hlt
xchg
popf
mov
lds
jnp
loope
adc
push
sub
sub
lcall
jle
mov
mov
cmp
cmp
dec
dec
cld
mov
jb
out
jbe
mov
mov
stos
imul
mov
pop
sbb
pop
mov
xor
outsb
movsb
xchg
test
adc
mov
aas
incb
cmp
addb
mov
leave
sar
dec
sarb
jno
stos
jp
jecxz
lahf
adcb
mov
rorl
dec
jae
sub
sahf
inc
jnp
js
int
loop
jle
shll
or
shlb
loopne
add
push
xchg
push
int
rsm
subl
cmp
and
outsl
sub
and
pop
insb
outsl
xchg
mov
mov
push
out
jb
fwait
push
pop
or
test
xor
or
movsb
data16
dec
pop
int
inc
mov
shr
loope
pand
clc
pop
mov
sbb
xor
in
lret
add
out
lds
call
or
mov
adc
cmp
adc
pop
out
sub
cmp
movsl
jne
cld
xchg
add
es
and
mov
aad
mov
call
data16
outsl
insb
pop
add
xor
aad
int
mov
out
aam
ja
xchg
mov
shrl
movsb
add
pop
das
inc
andb
xor
sub
mov
dec
jb
sbb
imul
fsubl
xchg
pop
xchg
mov
pop
xor
nop
pop
dec
jb
repz
aam
fcomp
xchg
test
add
cmp
ss
jno
jmp
mov
cmp
xchg
jae
js
mov
push
in
mov
aaa
jns
push
les
je
add
pop
bswap
ss
outsl
cld
or
fisubrs
adc
dec
pushf
jmp
lret
xor
cmp
js
mov
sbb
xor
adc
call
movsl
rcl
or
and
pushf
add
inc
decl
mov
js
xor
dec
lret
das
and
inc
mov
mov
outsl
sti
fists
int3
orl
je
aam
adc
sbb
out
lods
mov
aam
xor
int3
repz
mov
lods
mov
push
ljmp
adc
mov
jmp
mov
test
push
push
pop
mov
mov
cmpsb
mov
scas
dec
mov
push
call
in
insl
cs
ss
jp
movsb
ss
sub
add
clc
xor
adc
fimuls
jne
scas
xor
cwtl
sub
sub
xchg
or
inc
mov
dec
cmpsl
adc
adc
xchg
push
loope
fmuls
pushf
xchg
cmp
mov
in
in
decb
jl
adc
insl
mov
lret
mov
in
divb
dec
loop
cmpsb
ret
sub
push
mov
add
cmp
mov
into
jno
aam
outsb
rcrl
mov
int
mov
movsl
mov
mov
lahf
ficompl
sbb
aas
sti
push
test
cmp
daa
sarb
cmpb
sbbl
add
or
push
insl
pop
into
jl
test
adc
xchg
enter
and
stos
and
dec
xchg
jnp
clc
test
std
mov
ss
inc
pusha
xchg
es
out
dec
cwtl
add
loopne
xorb
or
lret
rsqrtps
jbe
xchg
sahf
mov
pop
test
mov
lods
scas
mov
fstpl
fistpl
shlb
mov
in
ljmp
and
repz
mov
mov
std
mov
scas
into
in
pop
inc
lahf
fiadds
lret
or
add
dec
inc
pop
clc
shlb
psllq
outsb
push
movsb
fcompl
jb
lds
sbb
insb
push
je
and
xchg
loope
iret
rcrb
movsl
xchg
shlb
dec
int3
pop
in
ljmp
lods
or
lret
mov
pusha
xchg
outsl
jmp
stos
add
adc
inc
mov
dec
sti
cmp
aaa
sbb
push
gs
scas
mov
popf
inc
sbb
sbb
cwtl
test
popf
jmp
dec
dec
jo
bound
jmp
mov
xor
pop
inc
bound
push
call
xchg
scas
ja
dec
mov
pop
mov
sbb
sub
fmull
je
inc
jg
pop
pop
cmpsb
imulb
dec
repnz
nop
mov
pop
mov
lret
clc
scas
icebp
lcall
inc
loopne
pop
inc
mov
stc
or
std
inc
xchg
shll
aaa
cmp
mov
push
dec
dec
inc
cmp
fiadds
mov
imull
adc
out
out
movsl
cmp
pop
jae
mov
loope
inc
inc
jg
movsl
aam
xchg
push
mov
xchg
add
mov
inc
aad
stos
pop
subb
sub
out
es
cmp
sub
cmp
mov
mov
addr16
popf
popf
paddq
cld
std
enter
mov
push
mov
add
cmp
cmp
mov
jb
push
inc
call
cltd
jg
aad
inc
insl
pop
add
jge
mov
push
rcr
mov
xor
and
idivl
and
pop
loop
inc
sbb
jmp
cmp
fwait
pop
sbb
fs
inc
push
dec
lret
outsb
cmp
stc
sti
ds
add
push
mov
aam
subl
pop
and
jmp
std
mov
loope
or
sarl
xchg
pcmpeqd
mov
pop
pop
mov
ja
pop
in
cmp
xchg
cmpsl
cmp
stos
test
in
jns
mov
push
jecxz
out
and
inc
add
lcall
inc
sbb
xor
sahf
das
adc
nop
adc
shlb
and
loopne
neg
sarl
rorb
mov
jo
cmc
rcll
out
adc
sbb
mov
add
mov
rorb
push
pop
std
or
std
pusha
cwtl
es
mov
lea
aaa
adc
push
add
sbbl
pop
or
je
clc
add
data16
lcall
xchg
popa
iret
movsl
in
out
leave
sti
sbb
daa
sub
shrl
out
adc
xchg
jl
daa
lret
mov
add
icebp
mov
fsubrp
add
pushf
sub
cmp
bndldx
adc
mov
mov
fcoml
fdivrl
xchg
jle
inc
fldenv
cmp
mov
mov
mov
add
je
std
decb
pop
repz
test
xor
push
lods
mov
test
inc
jb
adc
pushf
jg
daa
mov
mov
ficompl
in
iret
mov
sbb
out
mov
mov
inc
jp
inc
adc
roll
mov
inc
mov
mov
pop
jb
mov
fldl
jne
mov
es
cld
xor
mov
sub
push
cmp
jns
xchg
push
and
dec
cs
xchg
dec
jmp
fsubrp
and
adc
loope
mov
push
xor
jne
jnp
adc
xchg
inc
push
inc
mov
orb
jae
pushf
fimuls
mov
fisttpll
std
add
and
sub
cmp
je
xlat
adc
stc
jo
iret
in
in
ret
jg
xchg
ret
ss
cmp
and
sub
out
cmc
stos
and
lea
aad
pusha
pop
inc
mov
xchg
repz
and
scas
xchg
ljmp
pop
pop
aam
lret
push
test
mov
lods
push
sub
sub
cmpsb
gs
das
jp
xor
aas
mov
pushf
pop
stc
mov
and
movsl
popf
pop
ret
stc
add
xchg
rorl
inc
mov
add
xor
pop
mov
mov
and
inc
cli
adc
jmp
push
mov
mov
rcr
cltd
stos
cmp
mov
clc
fimuls
arpl
xchg
mov
aas
sar
ror
fwait
xor
mov
sub
lock
push
ja
pusha
lea
cmp
enter
push
add
mov
hlt
outsb
jp
popa
imul
out
mov
into
lahf
push
dec
push
int3
jl
cmp
lret
out
jbe
out
mov
scas
scas
mov
xchg
push
subl
cmpsl
loop
adc
fcmovnu
push
dec
sub
fcomip
xchg
subl
movsb
fbld
pop
jbe
mov
int
inc
cmp
pop
mov
ja
sbb
fisttps
add
out
cmpsb
dec
ljmp
dec
clc
imul
push
cs
and
mov
and
addr16
and
pop
dec
sbb
inc
sub
push
or
insb
jne
sahf
xchg
pop
iret
aam
cmp
push
sbb
push
jp
lds
and
mov
add
push
flds
cmp
test
dec
imul
dec
jge
push
lcall
push
mov
inc
pop
pop
daa
test
stos
rorl
enter
xchg
adc
movsb
mov
loop
mov
hlt
lret
ret
xorl
lock
pop
ss
push
jne
jecxz
cmp
shrl
into
mov
loop
imulb
mov
pop
or
lahf
test
jne
fsubs
push
jns
setge
cwtl
inc
sub
jmp
es
cld
lds
xor
xchg
mov
mov
sbb
cmpl
pop
and
popa
inc
inc
repnz
popl
mov
pop
push
mov
inc
addl
sbb
mov
dec
xchg
dec
lods
outsl
fs
cmp
or
and
mov
sbb
aaa
add
adc
xlat
lcall
push
test
mov
sbbl
movsb
inc
pop
in
sub
xor
lds
jb
movsb
jge
sub
xor
test
pop
fidivs
in
xor
push
out
fwait
sub
sub
dec
jp
pop
call
movsl
adc
add
mov
test
ja
or
lods
add
and
dec
push
xchg
adcb
dec
jl
sbb
xor
stos
sub
xchg
push
cmp
fs
xchg
mov
pop
andb
stc
dec
lret
and
sbb
cmpsb
inc
lret
hlt
sahf
movsb
popf
into
mov
pop
jp
cwtl
call
jg
adc
mov
sbb
adc
xchg
pop
ljmp
push
and
fcompl
mov
or
andl
sub
insl
fisubrl
xchg
cld
push
mov
cld
mov
xlat
sub
push
pop
adcl
cld
mov
insl
fldenv
in
mov
push
fiaddl
outsb
insl
mov
push
jmp
ja
mov
shl
jae
cmpsl
fbld
cmp
out
push
and
or
stc
mov
ja
and
notb
test
adc
mov
cmpsl
mov
movsb
sub
mov
xchg
imull
jp
mov
ss
scas
popf
lds
movsb
data16
ficomps
xchg
cmp
xor
fistpll
addl
rclb
ud1
insb
sub
and
cmc
je
sar
in
arpl
imul
cmp
sub
dec
in
or
cmp
mov
or
mov
je
pushf
inc
mov
cli
dec
pop
cmp
test
test
stc
mov
xor
adc
mov
lea
mov
add
mov
mov
fistpll
cmpsb
std
std
fnstsw
adc
adc
cmp
outsl
sbb
sbb
rorb
iret
jne
mov
adc
loop
push
sub
add
nop
cld
rcrl
pop
stc
stos
shl
mov
dec
dec
incl
int3
lret
mov
lcall
xor
sub
out
flds
sub
fistps
or
jg
and
xor
xchg
xchg
dec
jmp
and
or
jae
fisttpll
sbb
jmp
push
dec
iret
iret
adc
jl
push
dec
and
push
sbb
pop
stos
sbb
push
loope
fsubl
shrb
loop
mov
fmull
rclb
pop
dec
loop
xchg
in
sahf
cmp
cmp
popf
xchg
mov
cmp
or
pop
pop
int
jmp
push
sub
sahf
mov
popf
icebp
ja
out
inc
mov
daa
push
mov
dec
call
roll
scas
sub
push
and
jle
jle
test
jbe
add
jno
cmpl
and
idiv
pop
cwtl
fdivrs
add
sahf
scas
lahf
daa
mov
leave
inc
orl
subl
mov
mov
dec
jno
lahf
lahf
sub
enter
testl
lds
out
mov
lods
inc
int3
int3
sbb
das
jns
in
jecxz
sub
std
and
pop
sub
cmpsl
push
pop
mov
adc
jo
mov
arpl
in
cmp
verr
add
adcb
sbb
push
out
push
push
or
adc
push
sub
sti
divl
adc
adc
js
in
in
je
push
mov
pop
mov
test
add
push
ja
dec
mov
std
sbb
and
loopne
stos
pop
fistps
in
add
cmp
or
gs
adc
mov
add
mov
fcom
mov
sti
es
mov
test
notl
jnp
sahf
sar
repz
repz
pop
mov
fnstcw
ret
sbb
pop
cli
insl
test
pushf
jmp
insb
lcall
mov
and
sub
or
pushf
in
in
andl
addb
pop
dec
daa
insb
scas
rcl
inc
rolb
cmpb
adcl
bound
pop
pop
std
lods
arpl
cmp
pop
mov
aas
push
add
sbb
xchg
pop
push
jge
mov
enter
cmp
bound
push
shlb
cmp
mov
movsb
out
or
aad
inc
loope
sub
out
push
xchg
xchg
add
cltd
sub
or
cli
andl
cmp
es
sahf
outsl
mov
sub
jno
ret
lcall
xor
and
adc
jb
jle
mov
idiv
jmp
sbb
mov
mov
ss
int3
and
popa
inc
pop
mov
add
fists
adc
lods
push
dec
or
outsb
in
faddl
mov
cmc
cmc
sub
mov
stc
shrl
adc
imul
insb
inc
inc
or
sbb
xchg
pop
sbb
or
adc
cli
cld
aaa
push
mov
mov
mov
cmp
inc
stc
push
andb
in
sbb
add
dec
inc
jo
push
leave
call
inc
and
jnp
xchg
sub
dec
jge
jge
orl
movsl
loopne
mov
out
jl
es
test
stos
mov
fidivrl
mov
insb
add
cld
mov
inc
or
repnz
xchg
sti
push
add
xchg
popa
xchg
jge
add
sub
repz
and
mov
and
mov
adc
arpl
sbb
call
out
xor
xchg
pop
cmp
lods
cli
out
int3
add
mov
cmp
xchg
add
sahf
jmp
or
incb
in
pop
call
add
jg
sbb
pop
inc
mov
clc
cmc
pop
aad
adc
mov
adc
adc
jbe
mov
enter
imulb
pop
loope
add
mov
imul
jge
test
mov
ljmp
out
fwait
sbb
lret
fcomp
mov
mov
aaa
andb
jbe
mov
out
dec
sahf
mov
movsb
push
stos
jg
pop
dec
sbb
repnz
repnz
jns
ficomps
fnstenv
ret
orb
iret
or
movsl
inc
push
popf
jae,pt
das
rolb
jge
and
or
arpl
icebp
outsl
adc
inc
push
jb,pt
push
jo
adc
jl
dec
dec
sahf
jo
xor
inc
jg
pop
les
orb
jecxz
sbb
iret
es
xchg
sbb
xchg
adc
inc
or
mov
ss
sahf
js
push
sub
addb
xor
or
adc
test
jns
repz
std
outsl
les
movsl
mov
sub
push
pop
dec
pop
mov
mov
sbb
in
jno
sbb
pop
imul
push
fadd
pop
xchg
xor
sahf
ror
fcoml
pop
in
inc
xchg
test
fwait
je
test
or
cli
sub
in
aad
cmp
subb
push
sub
lcall
xchg
jbe
mov
add
fcmovne
add
out
hlt
or
cwtl
xchg
cmp
push
pop
cli
cmp
insb
in
inc
xchg
pop
sub
mov
out
jns
imul
sub
mov
aaa
sti
hlt
stos
jge
loope
shll
fstpt
xorb
pop
push
cmp
lea
stos
int
in
mov
mov
sub
xchg
mov
cwtl
push
xlat
mov
or
pop
push
sarl
ret
pop
inc
ror
jnp
decb
pop
lods
fistpl
fsubrs
test
addr16
sti
xchg
xchg
cs
mov
in
push
movsb
hlt
out
jge
mov
dec
push
cli
les
sti
lret
adc
in
je
cli
sub
xchg
add
jne
mov
scas
sti
push
hlt
xchg
add
jnp
cli
fnstenv
sbb
out
lcall
mov
outsl
push
cs
mov
mov
xor
imul
mov
lods
pushf
cmp
add
pushf
sarl
cmp
mov
decb
inc
je
sub
sub
psubd
iret
jle
inc
out
cmp
aad
mov
xor
loope
out
xor
or
imul
movsl
iret
ret
mov
sbb
int
sti
dec
jg
jne
test
jmp
mov
push
sbb
mov
int
sarb
es
cmpsb
test
mov
mov
movsb
ja
mov
imul
inc
js
ja
movsl
mov
loopne
sbb
xchg
add
stos
jle
add
jb
clc
repz
test
out
das
dec
xchg
dec
lods
iret
push
sub
scas
ds
icebp
adc
mov
aad
loop
test
cltd
xor
pop
out
test
movsl
jmp
pushf
in
cs
dec
inc
mov
std
mov
push
in
or
xor
add
inc
and
sbb
icebp
lcall
enter
fwait
jle
stos
cmpsl
jb
jo
add
inc
mov
repz
pop
clc
mov
in
lcall
pop
adc
add
inc
adc
jo
test
adc
aaa
mov
xchg
iret
inc
dec
jno
in
lock
push
add
adc
sahf
mov
dec
xchg
lret
mov
mov
dec
push
hlt
jecxz
or
and
sub
xchg
imul
imul
mov
dec
jge
adc
out
aam
mov
stc
jnp
inc
and
outsb
sbb
push
addr16
into
ds
sti
lods
or
pop
adc
push
pop
mov
loop
shrb
lods
mov
cs
aas
movsb
cmp
test
nop
clc
rcrb
in
mov
dec
aam
movsl
pop
mov
xlat
add
orl
sbb
test
cmp
std
add
jbe
or
aas
mov
push
movsl
lcall
int3
push
out
xchg
andb
cmpsb
jecxz
std
inc
and
mov
outsb
shll
out
xchg
dec
add
nop
insb
rcrb
ja
jl
ret
pop
xlat
cmp
and
outsl
out
test
adc
movsb
push
push
out
sub
sub
xchg
and
xor
imul
adc
das
mov
dec
adc
pop
in
call
imull
repnz
adc
add
mov
aad
out
pop
jmp
shll
loopne
sub
pop
stos
push
add
arpl
das
dec
jp
out
pusha
xchg
pop
lahf
movzbl
lds
sti
inc
orb
fs
cmp
push
dec
and
cltd
int3
cltd
mov
sahf
jne
adc
add
jmp
imul
sahf
jp
cwtl
jge
sub
xchg
lret
and
mov
out
or
inc
jb
lods
das
lock
xchg
dec
jns
mov
filds
jo
movsl
and
loopne
and
dec
xor
mov
ficoml
loopne
dec
jl
aad
stc
out
adc
pop
push
in
ds
aam
push
in
fwait
pop
dec
rclb
sbb
adc
movsb
fnsave
lods
stos
xchg
cmc
inc
dec
add
jns
fwait
pop
rorl
sub
sub
push
add
mov
push
test
imul
xchg
dec
mov
fldt
inc
pop
hlt
popf
jne
xlat
scas
push
repz
inc
adc
xchg
mov
pop
and
lods
out
scas
loope
sbb
inc
mov
pop
mov
cmc
in
or
movsb
insb
int
adc
xor
sub
fsubs
pop
sbb
repz
cmp
cwtl
inc
test
les
add
notb
push
add
xorb
out
pop
push
xlat
mov
mov
out
jnp
add
jbe
aad
jmp
test
addr16
lret
xchg
enter
or
inc
xchg
daa
fmul
jno
cmp
rorl
add
push
push
jo
sbbl
mov
inc
out
enter
adc
mov
fidivrl
jl
or
ljmp
jmp
mov
shrd
leave
cmp
cmp
in
insb
sub
out
cmp
xlat
mov
mov
pop
dec
imul
mov
repnz
hlt
divl
sbb
push
aaa
and
lahf
loopne
jle
enter
mov
mov
popa
lahf
sti
les
les
mov
sub
mov
push
ffree
mov
sbbb
add
in
mov
in
stos
mov
dec
push
stos
inc
lock
popl
xor
and
inc
xor
mov
hlt
inc
test
or
or
stc
inc
xor
fdivs
mov
mov
das
int
pop
pusha
into
test
test
xchg
cmp
jbe
fisubl
or
mov
sub
xchg
lret
push
outsl
mov
fcomp
sbb
js
or
les
cs
out
adcl
jnp
mov
faddl
mov
sub
cmp
mov
loop
pop
dec
out
push
fldt
ljmp
push
adc
mov
test
sbb
int
test
cld
aaa
inc
dec
inc
mov
les
dec
mov
or
int3
pop
mov
cld
adc
add
jp
out
ljmp
jae
int
dec
adc
call
push
scas
iret
mov
aas
push
bound
orl
addr16
rcrb
stos
cli
dec
dec
ds
arpl
lret
jae
scas
shll
stc
fistpl
leave
ja
push
subb
mov
dec
mov
test
out
jl
pop
and
test
jmp
inc
jl
aas
clc
mov
cmpsb
jnp
leave
xor
mov
fiaddl
ret
add
push
jmp
jo
pop
stc
in
add
push
sub
mov
fsubrs
mov
repnz
aas
ss
std
arpl
jp
add
cmp
outsb
divl
cmpsl
mov
pusha
icebp
pop
push
loope
shlb
dec
into
loopne
scas
insl
jg
sub
cmpsl
sub
in
lock
cmp
ret
dec
push
dec
cli
fdiv
fisttpll
fstpl
inc
mull
dec
or
cld
and
mov
push
stc
and
xor
mov
mov
and
gs
inc
ret
aam
adc
rcrb
or
xor
jecxz
lret
mov
sbb
sbb
rcl
test
sub
in
dec
lret
cld
out
leave
sbb
call
insb
cmp
repz
or
ss
cmp
mov
out
mov
push
xor
push
pop
sbb
jmp
mov
mov
mov
mov
pop
call
sub
es
lods
and
or
lahf
daa
es
mov
je
out
stos
and
sub
in
cmp
sub
jns
in
fs
push
jecxz
jg
and
jge
mov
fstl
into
lock
inc
mulps
adc
adc
in
not
pop
xor
mov
ds
pusha
xchg
sbb
push
xor
adc
ljmp
dec
jnp
test
inc
mov
pop
inc
xor
pop
out
addr16
xchg
xcrypt-cfb
cmpsl
and
pop
sti
rorb
mov
repnz
add
mov
jge
mov
push
je
pop
xchg
inc
je
adc
cmpsl
into
cmp
jns
fsubrs
cs
sbb
cld
xchg
les
add
inc
lock
add
daa
pop
pop
jb
and
call
cmp
aad
xor
dec
cmp
sbb
int
jo
cmp
ljmp
xor
les
mov
and
mov
sub
and
push
popf
loop
popa
dec
pop
sub
push
shlb
add
pop
jno
sub
scas
inc
xchg
jge
mov
mov
cltd
popl
xlat
in
jle
int3
movswl
jg
adc
sbb
pop
mov
cmp
xor
mov
dec
test
fisubrl
push
out
push
mov
pop
mov
sbb
cmp
push
or
inc
jb
dec
jg
adc
mov
sbb
lret
nop
sbb
mov
hlt
enter
pop
incl
push
jecxz
jb
loop
sub
in
push
mov
stc
daa
mov
push
mov
clc
xor
in
psrld
jb
insl
fidivrs
cmp
cmp
inc
pop
ja
sbb
in
jo
sub
pusha
popa
arpl
repnz
jns
pop
mov
rclb
push
fcomps
rcrb
cs
loope
iret
call
pop
lret
andb
jge
orb
adc
mov
outsl
cmpsl
mov
fistl
out
mov
pop
push
xor
addr16
lret
mov
in
jbe
cmpsl
mov
sbb
pop
push
and
notl
shll
sub
mov
cli
fidivs
inc
test
out
inc
mov
mov
dec
xor
enter
mov
add
sbb
es
insb
cwtl
pop
movl
inc
sbb
jae
les
imul
fidivrs
jg
aaa
inc
cli
outsb
xor
enter
rorl
mov
or
sub
mov
inc
stos
fistpl
cmpsl
shll
xlat
mov
clc
loopne
xor
dec
mov
test
cmc
or
out
push
movsb
push
cs
push
test
sbb
or
jmp
jo
lret
in
cwtl
adc
xchg
push
cmc
pop
pop
stc
inc
mov
stc
inc
lahf
push
sub
popf
mov
cmp
or
mov
in
xchg
adc
cs
movsl
pop
jg
pop
mov
out
iret
sub
mov
sub
cmp
mov
pop
jl
int3
iret
add
or
pop
or
pop
movups
loop
pop
jg
stc
repz
jge
mov
iret
mov
cwtl
mov
dec
ftst
repnz
mov
rorb
repz
iret
sub
dec
sub
cmpb
iret
add
mov
cmp
loope
inc
mov
jae
outsb
in
jl
add
popf
pop
or
mov
out
sub
mov
movsl
push
sub
add
jmp
sbb
push
mov
jmp
sbb
and
test
int3
mov
aas
loopne
imul
ret
dec
xchg
clc
in
in
in
cmp
push
lea
into
mov
cltd
in
imul
add
leave
and
jo
lds
aad
out
mov
jb
movsl
int3
ds
xchg
pop
int3
jo
in
pop
scas
jl
enter
mov
sbb
pop
loop
out
add
test
sbb
mov
je
stos
cmpsl
subl
ret
pop
lcall
cmpsb
into
inc
stos
mov
pop
pop
cmp
adc
jnp
popa
repnz
xchg
fmuls
sbb
mov
jle
add
out
mov
push
ret
mov
xor
cld
cltd
cmp
mov
fdivr
mov
dec
mov
push
sbb
jno
dec
fprem1
push
sbb
das
int
xor
pop
cmp
call
aam
mov
nop
xchg
and
inc
aad
jl
adc
fxch
lods
out
mov
int3
mov
repz
pop
nop
jo
mov
shr
dec
aas
inc
fcmovnb
mov
mov
mov
movsb
xchg
inc
push
int
mov
xchg
movsl
dec
lock
add
sub
pop
into
fisttpl
insb
stc
pcmpgtd
cli
loop
out
dec
jecxz
sbb
push
xlat
cmp
mov
dec
lea
lcall
sti
dec
xor
add
movsb
popf
sbb
xchg
adc
int3
jo
mov
pop
push
test
outsl
mov
sub
sub
rcrb
hlt
int3
call
fisubrs
mulb
insb
call
sbb
pop
and
adc
pusha
inc
in
fwait
push
pop
and
lds
dec
push
pop
cs
xor
pminub
sti
sarb
sbb
test
lods
push
stos
mov
xor
pushf
cmp
repnz
mov
mov
mov
imul
inc
out
rcrb
insl
mov
adc
push
arpl
daa
movsb
aad
orl
les
jo
push
xor
jnp
cmpsb
dec
or
subl
stos
ret
jl
jae
cld
fld
or
xor
or
xchg
cmpsl
stos
js
jns
cltd
movsb
shrl
dec
push
ja
imul
dec
xor
xor
out
lahf
pop
xchg
sub
fimuls
xchg
test
sub
sub
mov
dec
xor
stc
sbb
leave
test
and
or
movsl
sub
in
sbb
orl
subl
add
dec
int
mull
mov
xchg
ljmp
int
out
std
push
icebp
or
icebp
in
jle
popf
push
mov
aas
cmc
mov
inc
cmp
jno
cli
je
fsubrs
ljmp
jb
loope
push
popf
pusha
sti
xchg
test
pop
xor
inc
cmc
add
mov
cs
and
pop
push
pusha
mov
xchg
pop
iret
out
cmp
pop
xchg
mov
cs
pop
sbb
in
adc
inc
sub
movsb
push
mov
push
jge
mov
outsb
int3
mov
sbbl
out
push
xchg
test
pop
movsl
or
outsb
pop
and
ss
mov
xlat
out
add
jne
jo
push
sub
or
or
inc
out
xor
fdivs
into
jg
mov
sub
shlb
ret
jbe
dec
mov
jnp
test
sti
mov
in
jns
iret
adc
popa
ds
cmp
int
mov
jmp
loopne
imul
jne
aam
and
aam
push
xchg
mov
sbb
inc
pop
fwait
adc
cld
add
popa
push
jg,pn
adc
mov
xor
clc
rorb
lret
push
jbe
or
scas
add
clc
cmc
or
adc
in
mov
in
adc
jl
jmp
ficompl
xor
xchg
sar
inc
out
movsb
xchg
and
das
push
js
mov
xor
mov
test
cmpsl
mov
pop
xchg
testl
cmp
gs
inc
lds
insb
imul
cli
adc
push
sub
ja
pop
clc
adc
test
gs
test
jne
mov
sub
sub
shrl
adc
xchg
int3
cmp
xchg
ret
sbb
fidivrs
lock
out
or
xchg
aaa
xchg
sub
mov
mov
inc
fs
pushf
out
in
adc
rorl
dec
fs
pushf
sbb
out
jns
repz
and
mov
ret
xor
andl
lods
mov
pop
arpl
ljmp
ficompl
mov
fcmovnb
xchg
or
xchg
add
test
xchg
popf
push
push
cwtl
pop
push
mov
clc
stos
std
mov
cld
cmp
mov
popa
rorb
push
or
add
outsl
inc
movsb
and
cld
shll
mov
test
inc
jnp
popl
and
add
nop
scas
outsl
je
xchg
scas
jl
leave
push
daa
das
mov
movsl
aas
jnp
in
xchg
stos
mov
jns
jle
in
jns
leave
dec
js
stos
dec
scas
pop
sub
cmp
push
movsb
mov
dec
jp
popf
repnz
pushl
pushf
sub
mov
test
push
sbb
pop
outsb
cmc
fidivs
jp
push
mov
xchg
or
je
aaa
jle
testl
ret
test
fisttps
in
stc
cld
dec
mov
cs
or
push
rcrb
jns
cmp
pusha
aam
adc
mov
lods
xor
lahf
bound
and
or
pop
cwtl
lahf
jns
or
xchg
xchg
or
add
dec
or
mov
mov
push
mov
or
leave
xor
xor
mov
inc
jg
clc
ja
int3
pop
aaa
inc
xchg
xor
dec
ss
sub
xchg
mov
loop
jae
ds
cltd
sbb
out
xchg
daa
mov
adc
sti
bound
pop
cld
cld
in
lcall
stos
cmp
rcr
sbb
xor
dec
mov
arpl
ljmp
jns
pop
mov
push
push
jb
addb
inc
dec
xchg
rcll
adc
adc
cwtl
nop
adc
movsb
cmp
jp
icebp
inc
dec
lea
jb
mov
pop
addr16
mov
cmp
arpl
dec
fidivrl
test
into
xor
inc
sub
push
jno
in
arpl
fsubrl
outsl
enter
adc
imul
xchg
sbb
lret
fisubrl
cmp
pop
int3
mov
lcall
es
ret
xchg
les
sbb
pop
cs
cld
sbb
adc
jno
xor
hlt
mov
iret
dec
in
cmpsb
xchg
nop
mov
cmp
clc
lods
dec
mov
mov
dec
cmp
adc
and
subb
movsl
xchg
mov
and
popf
repz
jae
int3
jno
arpl
mov
sahf
roll
fidivl
cltd
push
roll
inc
fisubs
outsb
lcall
insb
push
jp
lods
lcall
jle
mov
lea
in
cmpsb
ss
rcr
xlat
mov
stos
or
ljmp
cltd
lods
mov
es
jecxz
cmpsl
cmp
addr16
fldl
out
push
in
mov
mov
push
rcll
lahf
lret
lret
sub
sbb
cmpb
jl
stc
ljmp
fsubs
aad
mov
cmc
loope
repnz
jp
mov
mov
mov
insb
inc
jg
xlat
ret
xchg
leave
xor
pop
imul
out
int3
rcl
cs
xor
pushf
sub
rcrb
mov
cwtl
xchg
fcmovnbe
xchg
fmuls
iret
fcomps
push
cmp
nop
pop
fmull
out
mov
or
fidivrl
cmp
shlb
xor
mov
sub
adc
fisubs
cwtl
xor
add
push
daa
sbb
movsb
cmp
cwtl
fwait
sub
dec
fiaddl
inc
push
popf
aad
mov
xchg
pop
movsb
icebp
pop
mov
ja
add
mov
xchg
leave
xchg
push
rcrl
aam
hlt
lret
ret
adc
mov
icebp
mov
out
pop
subb
pop
pop
pop
pop
fs
pop
and
in
mov
or
js
xchg
dec
aad
dec
mov
xchg
cmp
or
cmp
cmp
sbb
cmp
ljmp
xchg
mov
repz
jp
push
test
pusha
test
or
das
xchg
pop
popf
dec
mov
loope
movb
inc
dec
pushf
or
cld
lea
fnstcw
pop
add
lock
xorb
dec
inc
dec
sbb
cwtl
cltd
mov
js
sub
jp
inc
stos
mov
jl
stos
cmp
mov
pop
mov
lret
push
dec
std
sub
fidivs
mov
sarb
pop
jae
xor
sbb
adc
xor
adc
and
aam
es
fsubp
adc
test
mov
jbe
flds
mov
ret
push
ds
sarb
in
or
lods
xchg
sub
xor
jmp
lods
push
pop
adc
or
cs
push
mov
div
hlt
xlat
pop
jg
inc
cli
data16
adc
or
insb
cmp
into
jmp
push
pop
push
out
fstl
inc
xor
pushf
ficompl
or
and
sbb
jecxz
xchg
pushf
mov
popf
lods
popf
sub
sbb
jns
test
push
sahf
mov
jo
dec
stc
pop
dec
repnz
sub
scas
pop
lds
push
xor
adc
sbb
pop
sbb
mov
stos
stos
dec
cmc
insl
adc
cmp
sbb
cmp
pop
rcl
push
cmpl
jp
hlt
stc
repnz
xchg
sti
add
out
adc
stos
jne
pop
push
rcrb
loopne
sub
aaa
adc
popa
pop
jb
xchg
ljmp
or
loopne
iret
pop
mov
cmpsb
dec
sub
and
or
cs
inc
pop
inc
pop
cmc
mov
dec
xchg
mov
insl
jo
dec
sbb
mov
sbb
and
sbb
xchg
pop
mov
ficomps
mov
jge
jb
xor
pop
movsb
sarb
andl
cmp
xlat
lret
imul
cmpsl
lret
jns
jo
enter
cmp
hlt
ret
aas
popf
mov
pop
call
gs
dec
arpl
ljmp
enter
lods
xorl
or
jne
mov
into
xchg
push
xchg
leave
xchg
jle
inc
inc
mov
sahf
push
push
dec
outsl
addr16
into
xchg
ret
mov
inc
lods
std
pop
jge
add
aas
jae
push
loope
arpl
in
rclb
pop
into
clc
cmpsb
popa
roll
lods
mov
scas
movsb
mov
ror
pop
mov
subl
dec
test
out
data16
fiaddl
mov
orl
mov
aam
push
adc
fmuls
cmpsl
shlb
call
xor
imul
andl
pop
leave
or
jb
pusha
rcrb
inc
orb
adc
out
push
xchg
mov
dec
adc
out
push
outsb
nop
or
xchg
push
pop
nop
mov
xor
mov
rorl
fstl
sbb
mov
lahf
mov
xchg
pusha
xchg
arpl
pop
jno
push
shl
fs
jae
out
andb
cmpsb
mull
sub
mov
in
movsl
or
jl
cmpsl
mov
iret
mov
mov
andb
mov
ja
rcrb
xor
shl
push
or
and
lret
imul
or
xchg
mov
xor
xchg
ret
movsl
pop
push
jmp
les
imul
push
lret
dec
test
notb
adc
and
push
lahf
add
add
pop
mov
push
sub
daa
jmp
in
dec
mov
xchg
xchg
jg
xchg
or
and
mov
stos
push
ljmp
push
dec
sahf
call
shrl
jns
jecxz
sbb
popf
cs
mov
loope
inc
test
push
pop
adc
xor
cmp
lock
mov
cs
aam
insb
cmp
xor
sbb
test
shll
push
in
int
ljmp
lock
add
push
sub
outsb
stc
inc
jmp
lods
js
mov
jns
cs
imul
jl
adc
imul
repz
aaa
sbb
xchg
es
dec
lret
jg
pusha
iret
andb
loopne
sahf
adc
in
add
or
ficomps
inc
mov
lds
push
inc
jle
imul
pop
xor
or
jp
das
jp
jge
push
sbb
decb
sub
adc
sub
dec
rcll
lcall
mov
jmp
pushf
test
iret
lea
mov
ficompl
daa
push
mov
jne
enter
outsl
push
addr16
fisubrs
jg,pt
dec
add
xchg
xchg
dec
call
pop
sbb
mov
dec
dec
jmp
rcll
out
das
mov
sbb
cmp
popaw
jnp
xor
xlat
cs
dec
rcrl
mov
jbe
push
jmp
dec
xor
add
fsubrl
icebp
dec
pop
in
sahf
fdivrs
jnp
aad
and
jecxz
stos
test
mov
sbb
lods
sti
mov
mov
roll
repnz
jne
sbb
sti
or
sub
jnp
bound
dec
jg
repz
out
sti
popf
cmp
insb
xor
inc
xchg
loope
sub
push
sar
test
test
or
loopne
push
outsl
sbb
push
mov
insl
jg
lods
or
sbb
addr16
sbb
test
cmpsl
notb
xor
and
scas
or
inc
xlat
mov
xchg
dec
xchg
dec
out
dec
adc
and
ret
stos
inc
repz
add
cmp
jg
sub
jle
pop
and
ljmp
nop
in
xchg
pop
fsubrl
adc
xor
sub
xchg
cmp
daa
mov
add
inc
dec
push
insb
iret
sahf
fidivrs
lods
mov
or
shrl
sub
inc
add
leave
insl
pusha
jnp
dec
sti
sub
test
out
loope
adc
add
xor
negl
js
shlb
sbb
sub
test
iret
into
xchg
xor
out
sbb
stos
cmc
loop
adc
ss
popf
aas
mov
popa
test
pop
xchg
push
xchg
mov
xchg
mov
arpl
pop
roll
rcr
pop
fldl
jnp
fcomp
inc
mov
popa
cwtl
mov
in
ja
int
add
pop
jmp
mov
inc
lret
call
ja
lock
clc
cli
dec
ret
shl
das
sbb
sar
inc
or
mov
pop
xchg
out
insb
sbbl
loope
mov
int
orb
test
cmp
sbb
push
out
mov
test
mov
aad
jp
in
dec
mov
mov
pop
and
out
inc
daa
sbb
push
sub
mov
js
jge
xchg
mov
mov
push
fcoml
jb
mov
cmpl
sub
cmp
insl
cmpsb
mov
hlt
or
mov
mov
mov
adc
sbb
add
dec
jl
xchg
sbb
leave
ds
call
cli
lahf
das
mov
cmpsb
sub
ja
cmp
fbstp
cmpsl
push
sub
aad
push
inc
ja
cmpsl
dec
movsb
lods
sbb
adc
pop
repnz
jo
test
sub
lea
inc
xor
and
cmpsb
mov
shrl
icebp
pop
jne
lds
pop
icebp
adc
cmp
movsl
jmp
clc
lahf
cltd
cmp
fidivs
sub
dec
cmpsl
call
dec
or
jge
scas
xchg
clc
pop
mov
data16
out
lods
mov
jecxz
mov
mov
adc
stos
dec
int
ret
mov
test
int3
push
loop
out
nop
dec
mov
int
test
jg
pop
sbb
pop
lcall
xchg
aad
add
mov
in
pop
aas
ljmp
push
out
cwtl
mov
cmp
fcmovnu
pop
push
sub
addr16
mov
test
sub
xchg
pusha
pop
rolb
push
nop
stos
xchg
fmuls
pushf
jae
dec
inc
adc
jl
cmp
aad
dec
pop
xor
mov
add
and
fimull
hlt
mov
inc
cmp
sub
pop
leave
in
adc
push
xor
adc
push
mov
sbb
add
sbb
imul
cs
decb
outsl
jnp
lcall
andl
push
mov
mov
repnz
mov
rorb
xchg
inc
cmp
nop
test
data16
in
dec
adc
cmp
enter
insl
adc
push
push
and
out
call
fsubp
adc
sbb
inc
and
rorl
pop
jns
std
aam
std
je
aam
jl
in
pop
ljmp
cs
xor
lret
jo
dec
pop
scas
dec
mov
xchg
out
icebp
in
cltd
gs
mov
ja
mov
push
xchg
lods
into
cwtl
js
or
adc
enter
bound
lahf
sub
mov
jle
das
jno,pn
or
fists
sbb
andl
loopne
jp
imul
fidivl
or
mov
push
mov
int
and
adc
cmpsb
add
mov
adc
and
call
xor
cltd
fsubs
xorb
add
in
mov
nop
lds
lods
fwait
push
mov
or
loopne
push
xchg
push
int3
out
mov
stos
ret
push
push
and
lcall
movsl
int
sbb
xchg
inc
mov
stos
push
sub
mov
fbstp
loopne
push
out
add
imul
mov
jp
test
dec
mov
mov
stos
fmuls
pop
ret
inc
xchg
gs
mov
cmc
sub
push
fwait
test
ljmp
dec
jne
in
sub
cwtl
sbb
stc
test
push
lods
sbb
jae
mov
es
fwait
sti
inc
xchg
sbb
bound
ja
add
jne
loop
clc
sbb
mov
mov
sbb
mov
xchg
iret
sarl
mov
mov
add
adc
or
or
scas
das
fistl
inc
out
fwait
fwait
test
push
and
fnstcw
adc
push
xchg
not
jle
jmp
inc
out
bound
fwait
pop
dec
pop
movsl
add
and
lock
inc
or
adc
stos
push
cwtl
mul
out
sbb
push
push
cmp
loope
pop
rcrl
fildl
ds
stc
int
jnp
add
mov
and
inc
mov
fwait
xchg
jg
ds
jo
cs
xchg
push
dec
nop
dec
mov
scas
push
gs
loopne
push
loop
fcoms
rcr
fsubrl
fisttpll
lock
jns
add
cmp
lcall
or
fnstsw
lahf
jno
cvtps2pd
dec
repnz
sbbb
inc
pop
stos
mov
cmp
add
xchg
stos
cmp
lock
inc
push
int3
jne
mov
xchg
jg
stos
sub
insb
aad
xchg
pushf
dec
sub
pusha
xchg
fildll
fcmovu
inc
sbb
dec
dec
dec
mov
das
lea
push
decl
sub
dec
aam
in
lock
cmpsb
pop
roll
movl
daa
cwtl
mov
repz
push
cwtl
call
shlb
adc
mov
aam
jp
mov
mov
inc
sbb
push
lret
jp
cmp
repz
fdivrs
movsb
lods
pop
inc
push
pop
adc
sbb
pusha
or
push
cmpsl
cwtl
mov
pusha
lods
xchg
inc
sub
lds
pusha
stc
test
adc
jge
test
or
dec
cmp
xlat
cwtl
xorl
or
pop
pop
ljmp
push
jnp
push
bound
lcall
inc
popl
push
mov
rcl
jp
add
lock
insl
cmpsl
mov
push
aam
pop
scas
jne
shlb
hlt
clc
xlat
xor
inc
dec
loopne
pop
and
push
lock
sub
dec
repnz
loopne
sbb
imul
in
mov
push
mov
enter
mov
pop
negl
pop
and
in
add
mov
cmpl
mov
ret
jg
mov
or
in
inc
into
stc
or
ljmp
sarl
xlat
popaw
cltd
cwtl
sbb
jl
inc
cmpsb
rcll
adc
pop
or
xor
repnz
enter
mov
xchg
jns
pop
sub
pop
imul
imul
mov
cmp
lahf
add
ds
or
and
frstor
loopne
cmp
popf
adc
cld
ss
gs
inc
or
mov
idivl
mov
inc
into
les
jae
insl
and
das
mov
sbb
js
ds
push
dec
and
enter
sbb
in
pop
shlb
stos
and
and
ds
push
scas
mov
dec
and
mov
hlt
push
xchg
sbb
mov
xchg
scas
cli
js
lcall
outsl
inc
dec
movsb
adc
in
fildl
mov
push
jmp
fidivl
cmc
sub
jns
enter
add
loopne
push
adc
pop
mov
push
adc
fs
mov
insl
push
pop
and
push
out
jns
xor
mov
jl
aad
dec
hlt
sbb
adc
test
xchg
clc
mov
push
push
mov
mov
cmc
outsb
jecxz
jmp
aad
or
stc
jns
dec
mov
mov
mov
fs
shl
fadd
sar
xor
mov
push
ljmp
dec
mov
iret
shll
shll
dec
pop
inc
push
mov
mov
dec
sbb
sub
lods
mov
imul
cmp
adc
adc
cmc
cld
imul
and
add
cmp
cmp
dec
xor
xor
ret
and
outsl
cmp
int
adc
rcrl
adc
ljmp
ss
enter
dec
lahf
popa
sbb
adc
xchg
in
xor
cmp
lods
and
add
dec
addr16
push
cld
addr16
mov
das
sarl
les
inc
mov
ds
xlat
lret
or
js
push
mov
cmp
in
loop
cwtl
xor
inc
mov
idivb
arpl
aam
add
insl
lock
inc
inc
ret
xchg
mov
xorb
insb
enter
xor
jg
mov
inc
aas
fmulp
stc
jo
dec
jns
icebp
cmp
mov
stos
and
cmp
cltd
and
cmp
fidivrl
or
bound
mov
lds
inc
cmp
lea
or
ret
inc
cs
mov
fnstsw
aaa
hlt
push
sbb
mov
cwtl
iret
push
push
xchg
pop
shr
or
and
mov
jp
add
or
jne
fwait
pop
sub
jg
mov
sub
mov
loopne
lods
xor
pop
shrb
repnz
rorl
cmp
fiaddl
js
dec
rcl
loope
outsl
dec
mov
mov
xchg
push
std
das
cmpsb
pushf
mov
rclb
in
mov
jno
mov
lock
sub
mov
push
jbe
fadds
and
loopne
xor
mov
jp
cmp
xchg
dec
adc
pop
pushf
xor
out
jb
std
dec
sarl
into
add
xchg
mov
pop
sub
scas
mov
push
mov
cmp
leave
jg
fidivs
inc
jecxz
movsl
mov
imul
lods
sbb
lcall
sub
dec
addr16
add
bound
mov
xor
inc
or
jbe
xlat
inc
add
xchg
jne
out
or
sbb
and
nop
or
jb
sbb
jb
imul
push
mov
sbb
sti
or
inc
std
rolb
std
adc
mov
xor
xchg
pusha
das
jno
fistl
enter
adc
pusha
stos
xor
mov
add
iret
sub
or
in
aam
lret
xlat
call
xor
cmp
jae
sub
push
dec
jae
pushl
insb
ret
sbb
or
aas
add
lcall
aad
mov
inc
or
rclb
scas
push
mov
mov
ds
in
ret
mov
sbb
jl
sbb
leave
mov
push
mov
cwtl
idivl
cltd
rcr
sti
adcb
push
mov
cwtl
mov
aad
sub
jo
sub
andl
cmp
jge
mov
ljmp
loope
push
ret
ficomps
mov
imul
dec
add
movsl
xchg
pop
fbld
in
pop
inc
lahf
aas
mov
in
fcmovb
stos
shl
sub
sbb
xor
pop
daa
jo
cmc
jbe
inc
xor
stc
adc
inc
leave
pop
mov
push
push
cwtl
inc
js
jo
push
fildll
rcl
ret
push
push
xor
ret
pop
sub
fnstsw
sub
add
sbb
xchg
pop
sub
jle
mov
mov
stc
mov
fcoms
dec
faddl
dec
xchg
push
push
and
outsl
movsl
inc
pop
pop
xor
push
js
cltd
lods
sarl
scas
mov
cmpsl
dec
pop
sbb
in
cmp
das
cmc
data16
push
imul
push
pop
xorb
je
cld
pop
cwtl
sub
in
fimuls
push
test
sub
sub
sub
clc
add
into
dec
mov
out
pusha
subb
iret
inc
sub
xchg
add
out
outsb
hlt
test
and
stc
jb
leave
lret
cli
mov
aaa
xchg
aaa
aad
clc
icebp
pop
push
push
inc
push
rcrl
xor
inc
pop
jge
sarb
addl
cld
rcl
scas
mov
leave
cmp
pop
popf
adc
sub
movsb
or
cli
lret
jbe
es
mov
in
les
lret
mov
shl
xor
aaa
xchg
sbb
mov
jne
fs
cwtl
std
pop
movsb
push
loope
aad
mov
and
mov
out
xor
push
mov
jle
xchg
dec
push
scas
inc
rcrb
pop
pop
es
xchg
add
pop
fidivrl
jmp
mov
sbb
cmp
add
xor
jmp
stos
pop
xchg
and
scas
jle
mov
data16
push
mov
aas
jg
jmp
leave
scas
or
neg
jno
dec
jmp
inc
xor
hlt
imul
call
loope
or
ret
xor
jae
loope
pop
adc
push
jle
sti
sbb
and
iret
lods
inc
lret
jo
sarb
dec
idiv
pop
loope
push
pop
jle
mov
and
dec
icebp
pop
mov
or
push
int
repnz
aam
fstpl
dec
push
scas
push
xchg
int3
adc
pushf
add
insl
fndisi(8087
fisubl
xchg
cmc
jcxz,pn
inc
mov
movsl
test
js
test
fucomp
push
jo
rolb
call
sub
or
cmp
nop
outsb
mov
aaa
test
push
jmp
lods
push
rcrb
pop
pusha
shlb
xor
jbe
and
lcall
stos
mov
push
sbb
sbb
xchg
jle
ret
and
jne
xlat
push
dec
add
nop
test
loopne
repnz
push
mov
pushf
push
push
and
daa
sbb
sbb
pop
inc
cmc
mov
adc
inc
push
dec
add
add
xchg
inc
je
jl
sbb
xchg
inc
inc
sbb
xchg
outsb
jl
int3
je
sub
mov
dec
mov
cmp
mov
push
inc
fdivrs
hlt
pop
outsb
xchg
inc
dec
inc
mov
pop
push
push
fwait
and
lret
pop
insl
scas
mov
mov
loopne
ja
leave
mov
sti
or
imul
inc
jl
jg
loop
or
repz
js
notb
mov
cwtl
shlb
shr
mov
mov
jmp
popf
popa
and
jae
pop
cmp
lret
sbb
pop
adc
adc
cmpsb
ficomps
mov
clc
push
mov
out
mov
dec
mov
mov
push
lea
push
pop
movsb
pop
cmpsb
jno
stos
mov
aam
stc
lea
jg
mov
push
mov
jb
popa
out
jg
nop
jno
mov
clc
adc
mov
pushf
scas
or
jle
fs
cmp
nop
pop
jecxz
xor
adc
imul
mov
mov
pop
inc
push
jno
out
xor
popa
pop
enter
dec
ret
adc
stos
or
outsl
inc
mov
mov
inc
pusha
mov
push
inc
pop
andb
sbb
scas
mov
repz
mov
data16
mov
mov
ljmp
and
pop
dec
pop
rorb
jl
pusha
hlt
int3
mov
fisubrs
jmp
shll
in
lea
mov
pusha
sub
sahf
enter
mov
jle
push
xlat
cli
arpl
pop
inc
lods
fdivr
push
dec
xchg
insl
dec
dec
mov
jno
mov
rolb
sub
xchg
shlb
orb
add
add
or
mov
pusha
lcall
lock
push
mov
xchg
xor
lcall
icebp
or
jge
mov
loope
adcb
jmp
imul
push
mov
cmp
mov
jb
arpl
jae
adc
shlb
fstp
jo
cmp
stos
jnp
outsl
mov
adc
stos
xchg
ljmp
adcb
mov
pop
pop
xchg
icebp
sbb
stos
cwtl
insl
xchg
mov
lret
pop
mov
mov
inc
iret
idivb
in
cmp
pop
cwtl
push
sub
jns
ljmp
jmp
in
lret
dec
mov
scas
xor
ret
addb
mov
and
popa
enter
in
shrb
cmp
test
and
sub
fwait
mov
int
mov
xchg
lea
inc
pusha
ljmp
add
decl
ret
pop
pop
mov
xor
pop
in
mov
pop
mov
adc
and
xchg
ficoml
mov
mov
dec
xorb
and
jge
and
add
fldt
mov
fwait
sbb
pop
les
adc
ret
jo
jmp
pop
and
andl
and
adc
pop
mov
shll
and
pop
xchg
aad
ss
cmp
mov
push
pop
orb
stos
and
cli
jae
daa
mov
inc
fistl
adc
push
xchg
mov
or
xorl
insl
scas
test
pop
icebp
and
test
xor
je
mov
pushf
in
mov
mov
jo
arpl
pop
call
std
jno
dec
insb
jne
lds
pop
mov
ljmp
sti
mov
std
mov
fimull
mov
or
stos
lds
ret
js
sbb
mov
sub
shll
dec
xchg
stc
ror
outsb
test
gs
push
lahf
aad
ss
add
inc
loope
xchg
dec
mov
inc
pop
sbbb
mov
pop
fdivrs
adc
out
popf
xchg
mov
outsb
rcrl
ds
les
dec
test
test
aaa
pop
sub
push
push
cmp
out
jg
lods
int
push
int
xchg
push
and
xchg
test
lods
dec
shlb
test
adc
fisubl
mov
pop
xor
cli
jge
cmc
mov
sbb
push
jg
xchg
jbe
daa
adc
imul
popf
daa
add
movsb
push
jae
cltd
daa
jnp
jb
mov
jnp
ja
mov
jno
sub
dec
lea
inc
inc
xor
or
fimuls
sbb
jo
add
jg
in
sub
mov
call
in
xor
sti
scas
pop
push
xchg
pop
icebp
lahf
mov
aad
adc
mov
inc
pop
lods
push
fimull
push
ja
stos
data16
in
in
andb
xchg
sbb
sub
cltd
out
sub
dec
icebp
loope
movsw
pop
ss
xchg
sarb
sub
aam
or
insl
add
out
test
leave
sub
jae
addr16
js
adc
outsl
add
inc
aad
cltd
dec
dec
in
and
mov
lret
out
lret
or
jge
or
jae
arpl
in
data16
andb
jmp
in
enter
xlat
pop
add
xchg
or
push
or
ss
popa
adc
push
pop
cmp
les
int3
inc
adc
jmp
mov
out
aas
push
xor
mov
cmpb
sbb
mov
loopne
mov
dec
push
aas
sbb
push
jle
aam
repnz
test
and
adc
add
das
sbb
jge
mov
movsb
ss
xchg
cmp
lahf
test
dec
mov
loop
push
pop
xor
popf
shll
cmp
jnp
xchg
xorl
repnz
xlat
imul
mov
jb
jle
fbld
pop
call
mov
scas
vshufps
jmp
mov
ja
push
cmc
out
mov
leave
mov
jle
inc
leave
inc
shlb
dec
mov
cmp
in
dec
decb
dec
mov
test
addr16
cli
bnd
movsl
fldt
ret
aaa
inc
mov
inc
lds
push
arpl
cmpsb
inc
lahf
xchg
xchg
les
rcrl
shlb
mov
lea
push
pop
mov
sub
sub
mov
shlb
push
sub
pop
adc
test
jle
incl
push
mov
or
in
leave
jbe
adc
dec
loope
push
imul
xchg
rorb
aad
lret
adc
sub
mov
push
mov
hlt
sbb
pop
std
sub
mov
inc
lret
ret
sbb
movsl
sbb
cmp
mov
ja
xchg
testl
je
or
push
dec
or
jge
ss
scas
pop
xchg
dec
xchg
repz
pop
loop
lcall
aad
and
cmp
hlt
dec
xor
call
pop
fadds
clc
mov
iret
cwtl
inc
mov
mov
mov
ja
cmpsb
jle
xor
xor
movsl
and
fadd
ret
ret
pop
add
jns
fwait
rcl
lcall
xorb
jge
ljmp
add
mov
pop
and
push
loope
mov
aad
add
loop
daa
out
sbb
xor
xchg
mov
inc
nop
inc
out
and
mov
push
mov
ret
inc
xchg
in
jle
jnp
mov
add
sub
loopne
pop
lret
imul
lods
mov
fld
jg
inc
mov
mov
jmp
out
mov
bound
test
mov
jmp
inc
push
mov
popa
inc
sbbb
pop
pop
pusha
push
add
pop
test
xor
and
inc
adc
ljmp
test
rolb
testb
adc
pusha
pop
push
mov
adc
lock
dec
hlt
xor
jbe
jle
sub
outsl
push
insb
outsb
aad
aam
shl
mov
add
mov
fwait
sub
inc
fcom
aad
xchg
xchg
mov
fistpl
jns
push
popa
mov
out
add
push
jge
jbe
gs
push
jns
dec
cli
pand
int3
insb
mov
sti
mov
cmpsb
dec
jbe
push
lret
cmp
add
or
in
aaa
pop
cmp
fsubl
sub
dec
ret
lock
xchg
or
push
dec
sarl
ret
pop
xor
jle
dec
in
ljmp
movsl
ja
adc
xchg
push
add
add
jo
lds
jb
mov
mov
stos
and
je
rorb
jne,pt
stc
push
jle
or
in
mov
mov
into
loopne
pop
test
mov
shrl
push
mov
cld
or
in
out
sub
sbb
clc
enter
jae
mov
mov
adc
movsl
aam
psubw
push
adc
add
xor
cmpsl
push
sub
nop
or
push
nop
adc
jns
add
fcoms
test
stc
xor
push
inc
cmp
adc
pop
jmp
cmpsl
daa
testl
xlat
sub
cmp
sub
stc
cwtl
mov
sub
sub
lahf
adc
stos
loop
imul
outsb
dec
sbb
insb
xor
sbb
cmp
pop
dec
and
out
rol
dec
lock
mov
stc
lods
jl
rclb
int3
or
and
sbb
call
mov
sbb
xchg
je
testb
push
xchg
sub
mov
xchg
js
sarl
and
fstl
add
mov
aam
jne
dec
mov
test
mov
inc
sbb
xor
aad
aaa
jae
inc
loope
xor
cltd
sbb
jo
add
sbb
aas
int
scas
add
fstpt
jecxz
jne
in
inc
or
loop
arpl
sub
adc
aam
outsl
test
mov
xchg
test
xor
push
lahf
xchg
loope
es
int3
mov
lods
inc
sbb
inc
or
cmp
mov
and
sarl
das
mov
iret
ljmp
imul
mov
mov
cmpsb
mov
dec
dec
push
sub
cltd
cwtl
add
icebp
div
fnstcw
sbb
add
mov
aad
imul
xchg
fmull
imul
pushf
stos
adc
cs
xor
xor
faddp
pusha
ljmp
loop
in
mov
add
mov
pop
pop
movsb
dec
mov
mov
sahf
outsb
ljmp
push
xchg
add
daa
xchg
sub
shr
push
jle
arpl
stos
mov
or
add
or
cmp
jl
jg
and
mov
adc
jl
icebp
call
aas
inc
xor
cmp
jnp
fwait
xor
sub
push
sub
push
pop
ja
mov
ds
scas
dec
mov
out
sbb
mov
lods
test
cltd
mov
sub
movsl
shll
aas
ljmp
add
shlb
lret
fcomi
sub
scas
pop
and
mov
shrb
or
adc
cwtl
pop
push
xchg
into
pushf
ds
pop
cmc
or
sub
rcr
jle
jne
fimull
lea
enter
lret
pusha
inc
inc
add
js
mov
imul
push
popf
sbb
pop
ja
xchg
lcall
mov
loope
std
imul
test
pop
pop
out
dec
shll
push
fnsave
aam
mov
inc
xchg
adc
ss
add
cmpsl
jp
popf
push
cmp
ds
xchg
pop
jne
daa
push
aam
mov
mov
mov
sbb
sbb
js
sub
jl
and
and
adc
mov
scas
jno
test
jmp
sbb
sub
js
xor
loope
sub
arpl
sahf
cmp
and
mov
mov
xchg
out
mov
popl
dec
add
xchg
xchg
sub
inc
mul
loope
testl
clc
push
xchg
xor
sub
out
xchg
mov
mov
push
jle
and
jg
lret
sbb
fs
xor
dec
pop
xor
pop
stc
mov
adc
mov
test
cmpsl
dec
mov
xor
jae
cltd
xor
xor
mov
ret
pushf
inc
sub
insb
push
cwtl
jno
in
adc
jnp
push
enter
mov
add
adc
lea
lock
mov
xchg
pop
xchg
adc
dec
icebp
xchg
inc
and
sti
cltd
je
ror
inc
sub
repz
fiaddl
and
pop
out
sbb
bound
mov
and
jbe
fadd
and
push
imul
xor
pusha
out
xor
push
outsl
mov
les
test
jno
and
pop
pop
dec
mov
dec
int3
mov
jo
fsubrl
mov
pop
daa
jns
lcall
call
dec
stc
out
fstpl
add
lret
xor
rclb
xor
test
fs
pop
cmp
lahf
push
mov
test
pop
lock
sub
jne
inc
jmp
cmpsl
mov
sub
mov
ljmp
adc
aaa
icebp
sahf
sbb
push
lock
imul
pop
jne
outsl
push
sub
inc
or
push
sar
movsb
mov
ljmpw
bound
mov
das
or
adc
cmp
mov
and
aad
sbb
sub
pushf
push
mov
jge
push
add
inc
mov
cmp
dec
adc
iret
cmpsb
adc
aas
adc
lds
shll
cmp
cld
push
fldcw
aaa
push
cli
test
repnz
add
out
call
insb
fsub
out
jecxz
and
mov
or
push
das
xor
xchg
pop
and
jmp
pop
dec
xchg
mov
cmp
jne
or
fistpll
add
pop
inc
movsb
push
xchg
clc
jbe
mov
rcrl
and
xchg
ficomps
clc
arpl
cmp
cmp
outsb
testb
icebp
mov
xchg
and
cs
push
lahf
push
sub
fldl
sub
push
scas
mov
push
sub
lea
push
dec
add
inc
in
adc
in
sbb
mov
pop
xchg
addr16
pushf
aas
fs
sub
scas
in
enter
inc
cmp
cmp
cmc
aas
cli
ja
fsts
pop
and
js
xchg
iret
gs
sbb
pop
or
sbb
in
inc
jp
adc
sbb
dec
pop
mov
shr
pushf
or
push
repz
shlb
hlt
int
iret
mov
pop
data16
cmp
mov
adc
ja
imul
or
ja
faddl
fadd
dec
push
ja
iret
cltd
nop
ja
mov
mov
xlat
pop
add
insb
outsl
xchg
inc
aaa
push
or
pop
ret
push
popa
stos
push
fsubr
fildl
mulb
push
fimuls
jo
push
movsl
fsubrl
ret
jno
pop
cli
pusha
stc
test
aas
imul
jmp
jne
mov
cmc
pop
push
lahf
sub
adc
mov
inc
mov
xlat
outsb
ljmp
mov
add
lds
adc
inc
fisttps
es
mov
sbb
pop
js
sbb
cmpsb
xchg
adc
and
or
push
fsubrp
xchg
mov
mov
push
pop
out
xor
mov
inc
ja
xor
jmp
mov
clc
shl
out
mov
mov
cli
inc
sbb
mov
adc
xor
dec
sub
cmp
pusha
xor
push
cmpsl
pushf
sti
out
movsb
push
int3
stc
jno
mov
push
and
daa
dec
mov
lahf
out
enter
jg
mov
fsubr
test
cmp
xchg
out
push
inc
insl
adc
ljmp
dec
jne
mov
xor
jne
dec
fdivl
pushl
mov
dec
and
leave
and
clc
mov
sub
xchg
mov
or
or
jg
push
pop
cmp
or
fiaddl
push
pop
pop
into
jbe
xlat
or
push
imul
adc
not
mov
push
cld
das
mov
cltd
dec
jmp
sub
addb
pop
push
dec
jl
rorl
mov
lcall
sar
mov
pop
lret
iret
movsb
cltd
push
xchg
pusha
arpl
mov
mov
inc
lea
inc
cmp
lods
push
pop
popa
inc
lahf
jge
lock
push
insl
aas
inc
insb
add
stos
les
lret
ljmp
fisttps
xor
mov
fcmove
dec
orb
leave
mov
dec
pop
jne
jne
sbb
mov
pop
test
insl
push
and
xchg
aaa
xchg
lret
scas
dec
xchg
jae
test
and
inc
mov
xor
sbb
cli
loop
loopne
fs
loop
sti
mov
popf
test
mov
in
ret
jne
mov
or
out
xchg
cwtl
dec
pop
sub
mov
fidivrs
repnz
xchg
sub
adc
push
or
mov
jbe
std
adc
jbe
pusha
mov
push
enter
xlat
js
into
les
cmpsl
es
fisubrs
jmp
push
mov
push
inc
loopne
dec
aas
push
push
in
repnz
push
cld
mov
adc
fs
test
jnp
arpl
mov
repnz
adc
push
scas
sbb
cmp
je
lods
xchg
outsl
dec
mov
adc
ja
or
es
loope
jl
loope
outsb
or
pop
jl
pop
push
pop
pusha
sbb
cltd
and
in
sbb
push
mov
fistpl
test
aas
mov
jbe
loop
or
jo
cmp
sbb
cmp
fisubrs
test
inc
push
cltd
push
lds
ret
pop
stos
sbb
mov
push
inc
cmpl
sbbl
pop
mov
or
aam
in
mov
xchg
cmp
fldt
xor
sahf
xchg
fwait
inc
inc
pop
es
scas
arpl
mov
push
xor
mov
or
loop
lods
jle
addr16
push
pop
xor
jne,pn
in
sbb
jg
mov
or
fiaddl
push
sbb
xor
stos
pop
cmp
xchg
leave
mov
jle
lret
gs
repz
int
subl
dec
cmp
popa
loope
and
hlt
fisubrs
out
fcomps
xchg
xchg
je
aaa
mov
mov
fwait
add
aad
mov
into
inc
or
icebp
orb
mov
dec
fs
xchg
and
and
push
test
ja
out
jg
pop
inc
fists
sti
adc
ret
inc
popf
cwtl
sub
or
or
in
ss
push
iret
push
xor
jno
rorb
aad
dec
test
sbb
insb
push
movsl
xor
xchg
lods
enter
loopne
and
out
push
pop
jno
popf
enter
popf
push
jns
gs
mov
fbstp
xor
js
nop
push
cmp
fsub
mov
loope
fs
push
cmp
jbe
add
fs
mov
mov
ret
insb
bound
lret
push
push
mov
pop
cltd
inc
pusha
dec
es
int
jle
aam
jl
fidivrl
jmp
into
push
sarl
jp
jne
dec
loop
add
sahf
addr16
cmpsl
testb
frstor
fcomi
ja
cltd
stos
repz
sbb
push
jecxz
js
lret
das
adc
call
sub
int
pusha
jp
mov
cmp
andl
pusha
mov
xor
jbe
addr16
xor
cmpsl
jae
jmp
pop
arpl
movsb
cmpsb
repnz
xchg
xor
fcmovnb
cld
stos
sbb
stc
xchg
stos
loop
adc
pop
stc
inc
mov
push
dec
cmpsl
lahf
push
jle
sub
stos
test
loop
cmpl
fs
in
xor
mov
xor
xor
mov
and
faddl
cmp
dec
loope
mov
fisubrl
dec
je
in
dec
stos
imul
pop
jno
mov
pop
insl
xor
inc
xchg
test
subb
xor
dec
sub
jle
repnz
sbb
out
in
jl
jmp
push
cwtl
inc
lods
or
mov
mov
lcall
loop
push
dec
xor
imul
mov
adc
loop
movsb
push
xchg
fidivrl
cmp
loope
adc
outsl
push
mov
jmp
imul
pushf
mov
pop
fsubr
inc
fstpt
ficoms
or
rcll
jle
xchg
fstpl
adc
bound
jp
insl
push
mov
ret
shlb
rolb
xor
leave
xor
jae
pop
mov
pusha
cmpsl
fcoms
sbb
adc
push
rcl
repz
inc
icebp
adc
pop
sub
popa
pop
lret
data16
mov
inc
flds
add
mov
pushf
in
cmp
fs
pop
popa
and
sbb
std
xor
jp
push
out
fst
sub
add
add
pop
in
xacquire
xor
out
adc
push
pop
add
in
rcrb
mov
mov
ljmp
lods
jo
xchg
pop
cmp
or
inc
movsb
scas
sbb
jge
mov
xchg
imul
and
ds
cmp
dec
cmp
fisubs
sub
ds
or
dec
nop
cld
pop
fmull
outsl
jae
lock
sub
push
js
or
popf
add
and
push
push
fsubrs
std
clc
addr16
stos
jbe
pop
dec
ljmp
xlat
repz
xchg
pop
xor
cmp
and
inc
mov
inc
push
push
sbb
aas
add
int
imul
jmp
lret
dec
mov
jbe
push
into
shlb
in
mov
mov
pop
fstps
mov
test
stos
dec
cmpsb
add
xchg
and
int
xchg
ficoms
mov
mov
cli
fsub
sub
push
or
adc
mull
push
mov
cmpsb
imulb
decb
inc
or
imul
int
jl
push
xor
inc
subb
inc
popa
jne
xchg
jnp
dec
cmc
sbb
insl
add
out
leave
gs
pop
lahf
movsl
movsl
mov
sub
mov
jle
sbb
dec
test
mov
cmp
cmpsl
and
cmp
repnz
pop
xchg
xchg
fisubrl
cs
out
add
hlt
jmp
or
out
shlb
sub
ja
adc
ffree
xchg
push
ja
pop
xchg
mov
jno
stc
dec
bswap
dec
jno
or
add
push
or
cld
push
xor
bswap
mov
jb
repz
push
fisubrl
fs
orl
dec
shl
push
mov
push
lods
mov
push
or
push
inc
mov
aaa
and
arpl
ret
std
lods
xor
stc
lods
xor
sbb
inc
jmp
icebp
xor
mov
pop
mov
xor
add
imul
test
mov
mov
test
xchg
call
push
es
mov
incl
mov
cmc
daa
sarb
dec
cwtl
push
aam
shlb
std
push
adc
or
dec
imul
faddl
sbb
in
pop
adc
jecxz
jecxz
xchg
cmc
and
repnz
cwtl
cwtl
scas
xor
aaa
xchg
mov
xchg
cmp
and
mov
mov
mov
inc
push
bound
jae
mov
ja
mov
sbb
stc
sbb
mov
outsb
cmpsl
mov
adc
pushf
dec
sbb
negl
add
ss
jg
imul
mov
out
xchg
lods
sub
mov
jns
iret
mull
fcom
je
cmc
loopne
jmp
mov
or
pop
sti
jb
mov
lret
dec
pop
mov
xor
pop
jb
rolb
sub
hlt
xor
movsl
pop
push
dec
mov
les
jbe
int
test
cmp
insb
xchg
cmpsl
cmp
test
jbe
fsubrs
xor
jne
jae
movsl
inc
lds
test
lds
and
int3
addr16
fimull
mov
hlt
adc
rcr
jmp
outsl
sub
pop
pop
enter
das
out
cmpsb
out
scas
mov
jb
enter
daa
add
shll
in
divb
mov
mov
jno
xchg
push
pop
push
adc
outsl
shll
cmp
push
jb
dec
shrb
sbb
or
mov
cmpsl
inc
inc
js
jnp
cmpb
loope
fbstp
cltd
jne
iret
jl
xor
push
movsb
xor
push
inc
or
dec
movsb
out
rcrl
or
mov
in
ljmp
adc
adc
hlt
add
loope
push
and
popa
sub
loopne
ret
mov
push
mov
test
cwtl
loope
mov
add
add
lods
subl
inc
in
fcomps
shrl
xor
mov
unpcklps
andl
in
mov
or
out
ja
mov
mov
aaa
lret
adc
lea
adc
fnstenv
dec
loopne
stc
xor
sbb
popf
jbe
mov
mov
aad
gs
xor
nop
mov
popf
push
mov
in
imul
or
push
lds
fidivrl
lea
xchg
jns
xchg
or
dec
ret
sbb
ds
jmp
adc
mov
push
adc
jmp
mov
das
cmpsb
aas
xchg
mov
outsl
lock
xchg
and
jo
cwtl
xorl
fdivs
jg
imul
loopne
or
ljmp
test
cmp
andl
cld
pop
dec
mov
jmp
test
dec
loope
idivl
stc
int
aaa
dec
aam
in
xlat
xchg
sbb
inc
mov
mov
adc
add
popa
xor
jb
pop
cmp
shrl
xchg
sti
cmpsb
daa
mov
fimuls
dec
inc
fwait
popa
cli
jg
mov
jae
mov
sbb
fs
jnp
mov
fsubl
xchg
mov
dec
fcmove
dec
fbld
xchg
mov
cmp
jmp
and
push
push
into
add
mov
aad
stos
push
xor
loopne,pn
out
popf
dec
imul
or
mov
add
push
adc
sub
sbb
fbld
ljmp
popf
gs
lods
dec
or
xor
dec
dec
enter
cmc
ja
ret
das
jno
cmp
inc
mov
in
mov
test
jmp
jl
jo
pop
cmpsb
roll
call
test
push
cmp
mov
mov
aas
inc
push
mov
sbb
lret
subb
sub
mov
shrl
dec
add
xchg
les
push
cs
data16
stos
jno
out
repnz
xchg
outsl
xchg
sbb
mov
cld
sub
repz
sbb
insb
ljmp
enter
das
xor
je
psrlq
mov
inc
movsl
jecxz
inc
in
mov
or
mov
mov
adc
jp
outsb
test
jp
push
insl
cltd
pop
orl
test
popf
mov
jbe
sub
mov
cmp
pop
hlt
inc
pushf
xor
adc
mov
jecxz
stos
xor
dec
mov
fidivrl
adc
sub
push
sarb
xchg
fimull
push
iret
add
je
sbb
mov
push
dec
xlat
in
lods
lcall
push
popf
es
dec
jae
ficoml
ret
dec
xor
outsb
dec
or
std
movb
sbb
xor
or
psubw
sbb
add
add
xchg
cmpsb
mov
mov
cmpsl
cmp
sbb
and
movsb
cmp
mov
stos
jno
xor
out
inc
jp
es
insb
lods
das
fwait
mov
ficoml
arpl
dec
sub
mov
adc
xor
int
imul
stos
loop
pop
stos
push
mov
xor
les
aad
rcr
mov
ret
nop
xchg
sti
sahf
inc
jnp
pop
cmp
sbb
inc
mov
cltd
xor
mov
clc
inc
fsubs
or
push
cmp
or
inc
sbb
lods
test
repz
mov
out
mov
jp
stos
xor
frstor
pop
push
push
push
inc
ret
fwait
mov
sbb
xchg
jp
push
cmp
iret
pop
clc
mov
cmp
out
inc
jl
jmp
scas
sub
mov
int
and
and
push
mov
adc
or
mov
and
jl
or
mov
fstpl
fdivs
lods
push
stos
out
and
dec
lods
and
adc
das
movl
pop
scas
inc
add
out
mov
int3
push
fstps
insl
std
dec
rcrl
ss
mov
std
mov
testb
mov
and
loope
push
je
popa
mov
mov
jno
push
mov
mov
clc
ljmp
fbld
sti
inc
lods
push
push
lea
xchg
cwtl
mov
pop
fmull
inc
les
outsb
ja
lods
addr16
data16
cmc
cmp
aaa
iret
test
mov
dec
push
in
inc
push
out
adc
and
mov
jp
movsb
fbstp
xchg
nop
jg
mov
andb
jmp
or
aaa
aam
xor
lods
push
clc
xchg
int3
int3
lret
cwtl
cs
pop
cmp
mov
lds
xor
psubd
jns
mov
jnp
xchg
addr16
mov
fwait
test
repz
mov
xchg
jnp
rolb
aas
cltd
mov
mov
cltd
jl
scas
pop
xor
adc
mov
lods
cld
mov
mov
mov
push
and
inc
mov
cmc
mov
cli
xor
lret
push
cmp
mov
add
cld
cltd
out
enter
and
inc
add
mul
jg
sub
sbb
data16
or
popa
inc
xor
ss
xchg
in
in
aaa
mov
push
xchg
push
in
daa
mov
add
sbb
and
mov
mov
xchg
jno
test
push
fnstcw
mov
pop
mov
faddl
sbb
imul
divb
jns
fstl
mov
pop
ret
mov
arpl
cld
mov
mov
lock
js
xor
insb
cmp
dec
adc
insl
mov
std
jge
sub
pop
repnz
stos
pusha
push
push
inc
pop
test
ret
dec
dec
loopne
lods
int
ljmp
mov
mov
sub
xchg
aas
inc
and
out
arpl
mov
add
jo
mov
aad
pop
mov
stc
jg
jb
das
mov
adc
cwtl
in
fmull
ss
sbb
lahf
clc
jp
or
adc
leave
mov
sub
and
pop
mov
dec
imul
test
lea
imul
fs
and
mov
loopne
cs
jo
loope
mov
xchg
hlt
sbb
out
ljmp
jb
hlt
gs
sahf
push
ljmp
test
cmp
sbb
es
jmp
in
pop
stos
inc
mov
stc
mov
lret
xchg
roll
cs
fmull
adc
push
and
push
or
jge
xchg
popf
into
rcr
inc
push
orb
stos
movl
add
mov
sahf
int
flds
imull
dec
shrl
icebp
repz
and
test
fidivrl
cmpsb
mov
xchg
divl
hlt
rcrb
movsl
cmc
jg
lds
arpl
bound
outsb
inc
iret
out
sub
xchg
jnp
lret
pop
insl
fiaddl
ret
dec
pop
xor
inc
xor
lea
fstpt
lods
or
lret
leave
clc
in
repz
xchg
in
xchg
adc
push
dec
pop
test
jns
xor
mov
mov
fwait
cmp
cs
jnp
cmp
mov
movsb
mov
xor
xchg
ret
ljmp
pop
sub
xchg
out
lret
outsb
sub
js
cs
adc
popa
add
jns
stos
mov
mov
sahf
fcmovnu
sbb
inc
cmpsl
out
adc
rorl
mov
jg
adc
and
mov
sbb
add
sarl
bsr
mov
xor
mov
lock
or
filds
js
inc
mov
mov
arpl
mov
adc
je
fs
in
mov
pop
sbbb
cmpsl
or
mov
test
jmp
mov
dec
std
push
push
es
scas
call
xor
mov
jp
fs
int
xor
xchg
mov
xchg
push
ret
jns
inc
js
dec
clc
jbe
adc
mov
or
stc
cmpl
xor
test
and
jmp
push
ret
mov
enter
cmpsb
int
and
mov
cmp
addl
push
stos
test
sarl
inc
popf
xchg
gs
pop
lahf
outsb
dec
sbb
and
into
mov
dec
testl
dec
pop
mov
dec
fs
imul
jae
fdivrl
jb
in
shlb
pop
mov
xchg
sub
sub
stos
popa
scas
aaa
test
jo
int3
cli
xor
xor
mov
repz
in
jp
xor
xchg
xchg
dec
lahf
lods
and
jno
pop
inc
pop
dec
outsl
mov
adc
ficoms
cli
pop
in
scas
in
xlat
cli
adc
pop
mulb
stos
jle
mov
shrl
inc
icebp
sbb
add
and
or
inc
lods
es
fadds
test
sbb
pop
cmp
ret
aad
std
push
adc
xchg
test
aam
daa
lret
pop
jmp
outsl
dec
or
jg
nop
das
pusha
ret
mov
fstps
add
movsb
xor
add
cwtl
mov
sub
mov
jne
test
mov
xorl
sbb
out
xchg
sub
xor
and
adc
push
mov
dec
ljmp
ficompl
loop
data16
inc
stos
pop
sub
add
orb
out
add
jge
ficompl
cmp
xor
mov
jecxz
hlt
mov
pop
sar
pushf
fsubs
fwait
call
lcall
inc
es
jg
aas
inc
loopne
mov
cwtl
lcall
flds
xor
pop
insl
or
xchg
sub
mov
lea
stos
and
rcrl
jns
push
dec
inc
mov
jae
int
pushf
cld
out
clc
jl
sbb
lret
push
movsb
xchg
mov
mov
xor
mov
ljmp
aaa
sbb
and
imul
js
imul
in
subb
mov
inc
cmpsl
insb
movsl
sbb
mov
or
loopne
push
adc
data16
jbe
fstps
pop
pop
adc
test
cmpsl
out
aam
sbbb
adc
or
xor
frstor
out
sbb
icebp
clc
int
dec
pop
adc
sbb
das
orl
outsb
shrl
cmpsb
adc
test
cmp
push
enter
mov
insb
lods
mov
ror
sub
out
push
jp
add
cmc
hlt
pop
push
adcl
xlat
adcl
nop
inc
sub
dec
sbb
mov
add
pop
push
lcall
push
pop
push
aas
pop
test
inc
mov
push
into
pop
mov
sarw
fs
xchg
sub
pop
popf
cmp
adc
repnz
adc
into
or
ret
dec
xchg
insl
jno
sub
inc
mov
add
sub
xchg
aaa
pop
jmp
aam
dec
out
shlb
mov
mov
stc
xlat
les
lcall
aas
pop
inc
cmp
or
test
repnz
rcl
enter
inc
mov
popa
les
lahf
jnp
aas
pop
add
mov
loopne
and
add
lods
and
inc
hlt
xchg
push
xchg
jbe
cmc
lea
ds
mov
sahf
adc
and
into
pop
loopne
arpl
dec
xor
mov
push
mov
iret
test
out
cs
xor
fisttpl
pop
aaa
sahf
jmp
loopne
or
push
mov
rcr
xchg
fucomp
or
in
jno
mov
xor
push
imul
je
fstpl
jnp
jns
sub
push
into
push
adc
jb
xchg
call
mov
mov
movsl
push
push
test
jno
xchg
aaa
ja
scas
xchg
pop
repz
popa
dec
cli
push
push
dec
xchg
xor
push
and
mov
sub
lahf
adc
rcrb
jl
movsl
jmp
inc
or
lods
imul
sub
insl
sbb
ljmp
cmp
std
or
mov
pusha
rolb
jmp
fldenv
in
filds
loopne
xchg
pop
js
pop
sbb
pushl
test
jne
mov
ficompl
stc
xchg
cwtl
cli
loop
fimuls
pop
in
mov
in
call
ja
ja
outsb
cmp
cmp
pop
lret
xchg
out
jg
sbb
sub
dec
push
xor
jg
mov
mov
fs
ja
test
jae
jmp
pushf
iret
jnp
rorb
cmc
mov
out
int
mov
je
dec
jl
popf
xchg
adc
imul
rol
inc
push
in
cmp
mov
aas
popa
inc
in
pop
inc
jae
repz
stc
pusha
sar
sub
movsb
dec
push
sahf
push
or
and
sub
mov
mov
ljmp
add
xchg
inc
jl
flds
inc
push
or
cmpsl
outsl
hlt
fbld
push
rcrl
movsl
mov
xchg
jae
push
sub
je
inc
cwtl
clc
cmp
test
jno
xchg
out
cmpsb
pop
xor
arpl
icebp
push
scas
and
mov
mov
out
in
iret
cld
shll
clc
stos
push
cwtl
fcomps
repz
pop
push
shrl
add
jge
aad
sbbb
imul
out
jg
mov
shll
add
es
dec
dec
fs
xchg
add
mov
enter
icebp
in
das
cmpb
jbe
adc
push
lds
into
out
cmp
xchg
push
js
pop
dec
scas
cmpsb
test
sub
sub
das
mov
popa
sbb
inc
push
clc
aam
sti
outsb
or
xchg
mov
jge
xchg
adc
or
pop
and
int3
stos
call
xchg
das
push
and
cmp
mov
je
fwait
dec
cmp
xchg
bound
shll
ja
insl
xor
out
and
movsb
xchg
or
in
into
sbb
jns
adc
pushf
and
mov
adc
mov
mov
cmc
addb
or
lret
je
enter
stc
inc
test
adc
fisttpll
mulb
fisubrs
mov
cmp
cmc
mov
repz
lret
jle
fisubrl
lods
jne
mov
cltd
pop
addr16
lods
mov
jo
or
jae
add
iret
adc
or
dec
dec
clc
ret
js
int3
xchg
addr16
loop
inc
lret
nop
push
mov
mov
cmpxchg
int
fcmovu
in
pop
add
pop
js
imul
cmp
orb
stos
and
adc
leave
xor
inc
jge
icebp
and
adc
xor
shlb
pop
mov
adc
cld
in
fidivrs
sbb
lcall
ret
pop
imul
fs
dec
pop
ja
enter
mov
rol
imul
mov
push
xchg
fisttpll
movsl
ret
xchg
ret
mov
inc
data16
clc
loop
sbb
js
sbb
add
mov
pop
adc
cmp
das
push
ja
pop
pushf
sbb
jmp
jo
xchg
cmp
cld
xchg
push
shrl
imul
lea
xchg
mov
sbb
xchg
cmp
pop
das
pop
out
mov
dec
insl
mov
sbb
lret
cwtl
stc
xchg
dec
adc
sub
jae,pt
repnz
adc
jno
mov
testb
mov
out
cmp
dec
fsubs
mov
fsts
stos
clc
in
call
mov
xchg
mov
ljmp
and
pusha
andl
cs
cmpsl
ss
add
sbb
mov
or
out
icebp
dec
imul
test
ret
mov
mov
sbb
xchg
add
aad
popa
test
leave
es
sub
cmp
mov
movsb
test
inc
fiaddl
dec
mov
aaa
and
sub
test
cmpsb
mov
lahf
add
insb
xchg
mov
sbb
mov
scas
popf
jmp
cltd
jns
into
inc
mov
inc
insb
in
xchg
jnp
adc
mov
std
ja
or
pop
mov
into
fwait
sbb
clc
pop
push
lds
js
aam
fstp
dec
sbb
mov
xchg
gs
xlat
inc
sbb
frstor
add
scas
jnp
cmp
sbb
dec
test
jge
jmp
push
mov
pop
push
lea
in
repnz
mov
push
pop
mov
fsubrs
int3
xor
sbb
push
daa
cmp
lret
fst
pop
inc
or
sbb
mov
xchg
loopne
inc
or
and
sub
outsb
push
and
scas
push
popa
xchg
push
nop
lahf
cmpb
icebp
push
and
imul
push
cmp
les
xchg
sub
xchg
fwait
adc
cli
jl
ljmp
cmp
cmpsb
pop
jne
mov
adc
repz
ja
pop
and
cmp
lods
lcall
mov
inc
mov
xchg
sub
pusha
dec
in
adc
cli
int
xor
pop
mov
add
push
fwait
imul
sbb
inc
mov
inc
arpl
mov
mov
adc
movsl
in
inc
sbb
ljmp
or
negb
nop
imul
add
rep
fwait
sbb
mov
in
jle
rcll
loope
sbb
aaa
addb
rcrb
das
es
pop
cmp
mov
sbb
xchg
cld
mov
xchg
inc
push
adcb
cli
pop
stc
addr16
inc
jle
sbb
dec
addb
pop
lods
stc
jge
in
in
xchg
push
addr16
dec
cltd
xchg
mov
adc
daa
fistps
sub
xchg
cmp
stos
mov
jecxz
jae
dec
movsb
add
call
fcompl
mov
leave
cmpsb
and
push
pop
push
jmp
fcomps
sbb
enter
ss
pop
repnz
out
repz
jecxz
jmp
loop
test
es
jb
ljmp
dec
mov
in
scas
mov
lea
xchg
mov
pop
daa
jae
sahf
xor
ds
push
movsl
insb
sarb
mov
pushf
jbe
fs
flds
ret
pop
in
lods
add
incb
push
stos
cwtl
sbb
out
arpl
adc
aad
rcrl
pop
sbb
cs
mov
filds
mov
imull
sub
push
xchg
fs
mov
int3
cmp
scas
pop
rolb
arpl
lods
xorl
push
dec
fildll
ss
mov
add
push
sbb
movsb
lret
cmc
sub
fwait
stc
add
popa
and
push
mov
push
enter
cmp
stc
inc
rolb
mov
dec
repnz
sbbb
popa
nop
cltd
push
outsl
adc
pop
push
jg
ljmp
pop
aam
sbb
es
mov
adc
xchg
push
test
call
mov
fwait
jmp
movsl
dec
std
pop
pop
call
call
push
inc
dec
sub
and
dec
or
insb
push
cmp
mov
mov
aad
dec
add
pop
roll
ljmp
test
and
mov
sbb
or
mov
push
ret
fisubl
jmp
lret
pop
xchg
dec
mov
push
cmpsl
mov
and
jp
gs
push
rol
mov
ds
negb
push
or
test
xchg
sub
mov
add
push
in
jmp
lret
pusha
test
dec
push
shrb
sub
jmp
cmp
daa
dec
aam
int
clc
mov
lcall
les
xchg
mov
sub
sub
insl
dec
inc
gs
mov
jecxz
icebp
sbb
in
lret
fldt
jne
fld
lods
scas
insl
add
sbb
loopne
cmp
enter
in
adcl
pop
cmpsb
cld
fiadds
pop
sub
stmxcsr
ss
mov
js
push
xchg
jb
push
in
jae
repz
push
ret
add
cltd
ficoml
imul
fdivs
xor
mov
xor
loopne
and
fadds
xchg
jne
mov
push
sbb
pop
sbb
pop
pop
jno
xchg
scas
push
fidivs
cs
popa
mov
gs
or
or
out
fidivs
or
cmc
dec
dec
or
flds
xor
jo
xchg
rcll
or
inc
call
rcl
cmpsl
mov
or
mov
pusha
fidivrl
pushf
xor
mov
stc
sub
std
add
mov
shlb
sbb
out
es
add
cli
fmul
lret
dec
push
pop
cmp
push
push
lods
popf
scas
mov
mov
jae
pop
aam
hlt
cwtl
lock
scas
std
fisubrl
or
div
and
adc
es
dec
mov
mov
mov
mov
es
aas
push
inc
sbb
push
and
add
mov
or
fsts
addb
mov
push
inc
cmp
inc
mov
mov
adc
xor
loope
cmp
mov
mov
sbb
mov
loop
jb
mov
pop
dec
std
xor
std
idivl
arpl
shlb
sarl
aaa
jp
mov
sarb
adc
mov
mov
loop
outsl
sub
pop
out
push
pop
xchg
mov
rorb
mov
mov
push
xor
mov
gs
xchg
mov
push
fnsave
push
in
mov
stc
mov
xor
sub
inc
xchg
lods
pop
rorb
fsts
dec
add
sarl
mov
aam
fidivl
test
sbb
sbb
sahf
and
je
fnstenv
push
subb
pop
clc
jecxz
xlat
adc
mov
push
inc
mov
and
inc
fwait
ljmp
jo
xor
fcmovne
fcoml
or
jne
fcomp
pop
js
xor
pushf
xchg
lret
shlb
mov
testl
mov
je
cmpsl
dec
mov
testl
outsb
arpl
push
out
cmpsb
mov
mov
xchg
loope
out
nop
sub
ret
and
cmp
aaa
or
push
mov
mov
das
cwtl
jge
aam
xchg
stos
int
sti
sahf
loop
xor
or
cmp
inc
dec
mov
movsl
lret
jl
xchg
out
add
or
mov
test
mov
jo
inc
mov
xchg
int
jae
xchg
xchg
xchg
repnz
pop
or
cmp
dec
xchg
cmp
sub
pusha
dec
enter
fwait
inc
jne
add
jno
push
cmpsb
and
incb
call
lods
lock
push
clc
scas
push
adc
pop
imul
mov
sbb
repz
xchg
ret
mov
push
jp
sub
mov
pop
out
aaa
xor
ds
popf
jp
xlat
ljmp
sub
push
jmp
mov
cmp
stc
movsl
enter
es
push
inc
cmp
clc
inc
sbb
adc
jae
pop
fs
test
cmp
stos
out
and
aam
lock
jmp
iret
mov
inc
adc
push
mov
mov
fcomps
cmpb
push
and
pop
mov
repnz
xchg
adc
fldcw
movl
fnstsw
cs
subb
sub
mov
cltd
orb
test
cwtl
sub
gs
test
mov
xchg
mov
arpl
cmp
ret
lock
pop
mov
dec
mov
inc
andl
sarb
je
and
out
aad
or
jno
ljmp
loope
pop
xchg
or
pop
jno
pop
cltd
ss
mov
sub
loopne
xor
xchg
sub
cld
sarb
movsb
repnz
cmpsb
lret
scas
mov
lret
add
xlat
dec
decl
mov
mov
xchg
inc
sbb
jnp
dec
repz
cmpsl
jecxz
lods
incb
cli
stc
sub
popf
in
dec
out
imul
pop
shrl
jbe
mov
add
lods
out
xor
mov
hlt
popa
xor
pop
jne
pop
adc
push
fnsave
aam
xchg
cmpl
enter
mov
rclb
ds
inc
dec
pop
mov
cwtl
or
je
jo
xor
xchg
testb
loope
insb
mov
adc
lock
mov
jno
sahf
fidivs
sahf
sub
rcll
push
or
gs
dec
mov
inc
sar
daa
jns
dec
sub
int3
out
sbb
addb
fstpt
mov
mov
into
mov
cmp
push
dec
cmpsb
popa
sbbb
cltd
nop
mov
ljmp
sub
icebp
add
test
adc
sub
and
xchg
je
lret
push
mov
sahf
mul
pcmpgtb
das
push
inc
xchg
jg
ljmp
mov
or
mov
out
pop
dec
jecxz
fs
loopne
test
dec
aam
push
adc
call
lods
sahf
fidivrl
push
scas
jmp
push
dec
sub
mov
and
test
jbe
mov
ret
mov
dec
jg
cwtl
pusha
lret
call
jb
addl
dec
sbb
int
scas
mov
mov
mov
cmp
jnp
cmpsb
xor
enter
mov
cmpsb
negb
or
movsb
mov
or
jge
jno
mov
movsl
pop
xlat
and
andb
lcall
and
sub
or
fprem
dec
inc
cmp
xchg
inc
es
fdivrs
mov
data16
into
ret
pop
cmpsl
jge
pusha
and
popa
imul
aam
pop
in
cmp
aad
and
pop
iret
aad
mov
mov
outsb
add
push
xlat
fcompl
push
mov
add
nop
jnp
mov
fcom
xchg
push
lds
sub
out
jo
pop
cmpsb
dec
lods
lret
lret
test
fwait
pop
mov
subl
lock
cmp
movsb
pop
sbb
jno
in
repz
imulb
bound
out
jecxz
push
jns
sbb
dec
mov
jnp
aam
ret
lods
je
iret
outsl
xorb
data16
add
sbb
cmp
enter
fwait
lret
adc
adc
jge
cld
imul
cmp
inc
jne
cmc
add
jae
ret
sub
lret
mov
cmp
sbb
in
adc
sbb
sub
cmp
lock
push
inc
pushaw
inc
mov
cmpsl
ja
cmp
pop
in
pop
mov
outsl
push
and
pop
movsb
mov
daa
fcmove
push
jge
dec
mov
adc
or
arpl
xor
ret
scas
out
test
pop
inc
cli
adc
pop
pop
outsl
cld
je
rorb
dec
sbb
or
xor
roll
cmp
push
pop
mov
dec
sub
pop
jle
or
in
cmpsb
inc
jns
sbb
xor
dec
xor
sub
out
xchg
gs
sub
or
int3
cld
adc
push
sub
in
imull
test
or
stos
pop
and
jmp
lcall
jno
and
js
js
add
adc
dec
rcrb
xchg
mov
movsb
orb
xor
sahf
and
dec
popf
outsl
mov
jp
inc
adc
in
jle
cli
cmp
sub
pop
sub
dec
jno
lea
jle
jo
xor
aas
lret
pushf
dec
fdivl
lock
lahf
shrb
sbb
dec
inc
add
sbb
push
es
adc
je
or
sub
push
xchg
popf
addb
scas
ficoms
sub
xchg
int3
sbb
jp
and
loop
or
push
mov
cli
aad
hlt
fisubl
dec
outsl
jb
push
lock
mov
insl
insl
sub
xchg
xchg
out
add
or
hlt
jb
lea
in
dec
fcompl
mov
cli
mov
ss
int
xchg
xor
lods
mov
imul
pop
popa
sub
sub
mov
push
rclb
lock
jmp
movsb
mov
cs
loope
xor
hlt
cli
dec
mov
and
mov
stc
jae
dec
inc
sub
scas
cmpsb
nop
sbb
test
xchg
lret
add
je
das
push
xor
insb
xchg
test
sbb
jg
imul
aad
add
mov
xor
clc
pusha
ja
cwtl
fistpll
fs
in
divl
fsts
lock
sub
cmpsl
hlt
sbb
or
pop
xchg
insl
and
hlt
stos
mov
outsl
xor
fists
cltd
lcall
push
lret
cwtl
mov
cmp
lock
aas
nop
imul
dec
imul
adc
push
insl
sbb
ljmp
aam
out
popf
repnz
jns
and
pop
and
xchg
inc
mov
jbe
jg
cli
aam
mov
add
jb
jg
testb
shrl
pop
xlat
sub
icebp
mov
in
jle
cli
shll
arpl
hlt
in
daa
adc
sub
cmp
rorl
das
out
dec
ja
aad
sbb
jbe
loope
or
test
lea
test
xor
es
push
add
and
in
pop
sti
add
mov
lahf
outsb
adc
push
or
adc
mov
and
dec
iret
sub
push
jns
ja
mov
push
ror
lret
xchg
jmp
jmp
outsl
imul
mov
inc
cmp
stos
call
shrb
push
and
mov
shrl
xchg
repnz
inc
push
ficoml
movsl
call
mov
insb
dec
mov
bound
xchg
inc
jp
push
pop
pop
das
lds
add
in
jbe
fistpl
rol
push
mov
pop
lods
popl
aad
push
push
enter
adc
push
outsl
mov
xlat
cmpsl
repnz
cmp
or
pop
popf
adc
add
movsl
add
push
jl
lea
sbb
or
push
test
fprem1
push
shrb
lahf
sbb
scas
xchg
lds
pushf
daa
cs
aas
pop
aas
ret
and
pop
nop
push
je
push
xchg
loop
sbb
fildll
push
ficompl
std
push
mov
into
pop
arpl
xchg
scas
addr16
sbb
sub
jecxz
bound
lock
test
les
mov
mov
xchg
sti
sub
jb
loopne
test
jmp
fucomi
pop
mov
cmp
xor
push
jp
fnsave
mov
mov
or
sub
cli
imul
imul
add
xor
cmp
xor
push
inc
mov
lret
mov
xor
test
inc
mov
jecxz
subb
mov
pop
call
leave
dec
push
insb
dec
lock
in
jecxz
add
pop
into
aam
repz
lcall
lods
in
dec
std
xchg
mov
ret
subl
ljmp
mov
fnsave
addl
inc
mov
cli
xchg
pop
lods
fadds
aam
add
out
jl
nop
mov
decl
js
mov
nop
fwait
mov
cmp
lods
iret
daa
mov
mov
js
nop
mov
xor
push
cmpsl
push
rcl
jb
lret
mov
mov
orl
push
and
push
and
sbb
mov
mov
xor
jp
pop
push
aaa
push
jg
sub
xchg
mov
jmp
or
outsl
pop
push
fld
or
loopne
dec
lea
and
push
lods
lods
adc
add
mov
push
jne
pop
int3
cmc
sahf
cwtl
dec
or
xor
sub
and
xchg
push
mov
or
aad
shlb
jg
pop
dec
xchg
stos
movsl
pop
scas
push
mov
xor
mov
test
cld
test
jbe
dec
xor
cmpsb
bound
aam
sub
in
lods
in
sbb
fadd
sub
xchg
dec
xchg
popa
lret
aaa
inc
cmpsb
cmp
insb
jns
mov
pop
mov
lret
mov
ror
lods
sbb
push
sbb
iret
xor
movsl
loopne
xor
loope
sbb
lcall
push
outsb
ljmp
push
cmp
in
xor
sbb
inc
mov
clc
imul
cmp
sbb
push
mov
xor
cli
jl
ds
sar
jmp
lds
mov
mov
push
int
push
pop
sbb
or
cmpsb
scas
inc
cltd
sub
lcall
in
fcomps
lock
push
mov
cmpsl
push
cli
lds
daa
pop
mov
popa
cmp
adc
xchg
lcall
jp
ret
lcall
mov
outsl
mov
jnp
inc
mov
cmp
insl
int3
adc
fisubrs
or
mov
inc
adc
and
repnz
je
ja
mov
or
mov
push
mov
or
repnz
push
mov
pop
sbb
mov
add
daa
int
fstpl
in
shl
push
add
sti
mov
mov
bound
movsb
mov
and
pop
xor
stos
push
stos
movsl
inc
and
sbb
xlat
cwtl
stos
xchg
pop
dec
jmp
and
faddl
hlt
inc
aad
mov
xorb
mov
pop
das
mov
lret
and
mov
sub
lods
cs
adc
sbb
popf
arpl
push
pop
repz
dec
fs
loopne
cs
sub
mov
mov
test
fnstcw
in
imulb
int
gs
sub
add
std
insb
push
jnp
out
xchg
and
sti
scas
pusha
jl
repnz
sbbb
xlat
jecxz
mov
or
lods
inc
dec
mov
sbb
leave
mov
mov
popf
out
pop
xor
cmp
clc
mov
sbb
sti
lea
mov
hlt
cmp
or
mov
enter
ljmp
mov
jno
sub
std
js
fimuls
cld
pop
or
ss
lahf
mov
cmp
jmp
pushf
lock
mov
in
mov
cs
in
fistpll
pushf
fimuls
mov
aam
popl
pop
loop
mov
insb
cltd
outsl
or
push
pop
in
stos
in
mov
daa
aas
loopne
inc
leave
sbb
adc
cmp
hlt
push
das
pushf
in
adc
stc
pop
int
mov
sub
dec
xchg
pusha
push
ficomps
fdivs
mov
out
xchg
sub
fsts
push
pop
xlat
jb
adc
stc
mov
lahf
jle
pop
in
inc
mov
or
and
adc
mov
pop
cli
jno
lods
scas
nop
fistpll
cld
xor
mov
hlt
xchg
adc
inc
jle
jae
inc
ja
mov
mov
add
daa
loope
adc
enter
sbb
repz
sar
adc
mov
adc
jmp
jp
xor
sbb
sbb
dec
mov
test
cli
xchg
ja
imul
ljmp
pop
ss
xchg
adc
dec
cmp
inc
nop
loop
adc
mov
xchg
or
add
sbb
xchg
rorl
into
mov
sbb
insb
test
jae
dec
xor
test
fistps
mov
mov
outsl
push
in
ss
inc
addl
stos
inc
add
imul
fst
mov
int
stos
xchg
add
loop,pt
std
jecxz
loope
sbb
repz
aad
aad
xlat
ficompl
insb
xor
ret
jge
movsl
inc
mov
sbb
add
mov
sbb
or
xchg
pop
mov
cmpsb
inc
call
std
test
sub
sub
sets
push
test
test
mov
dec
or
add
repz
or
push
and
pop
das
push
jp,pt
pop
ret
cwtl
loope
xchg
and
roll
add
sti
in
mov
xchg
inc
test
imul
loope
arpl
hlt
add
addb
jp
les
nop
pop
repnz
or
cmpsb
jecxz
xor
pop
lock
dec
and
dec
test
add
cmpsb
push
std
andl
mov
hlt
repnz
and
jns
stos
push
out
mov
mov
xor
inc
ficomps
int
pop
lcall
sbbl
pop
add
call
inc
and
mov
pushf
vrcpps
cmp
enter
xor
cli
movb
mov
in
aam
jo
mov
xchg
xlat
jecxz
clc
jge
push
jle
rorb
or
ret
or
mov
and
lcall
xchg
xor
lods
xchg
and
lock
daa
xchg
test
pop
ja
psllw
out
inc
jl
dec
jnp,pn
data16
sar
loopne
cmp
and
in
cmc
jecxz
push
out
call
xor
cwtl
and
lret
dec
cmp
popa
mov
in
adc
in
and
fnstsw
jg
pushf
test
popf
jmp
inc
fdivl
faddl
inc
hlt
xor
pop
outsb
push
outsl
jge
lahf
dec
les
push
das
jl
negb
mov
loopne
aaa
rorb
ljmp
ret
inc
jne
or
push
lock
inc
adc
fwait
xchg
push
mov
std
jg
dec
push
or
mov
call
mov
rclb
mov
cltd
fucomi
and
shufps
jmp
ficomps
inc
inc
fldenv
jge
add
aas
and
add
test
aas
rorb
xchg
jb
sbb
test
pop
js
js
ss
mov
iret
popf
sbb
mov
lock
jae
imul
dec
or
and
xchg
xor
mov
mov
test
xor
cmp
push
inc
repz
test
push
testl
push
sti
in
sbb
jle
push
pop
ret
push
inc
ds
adc
or
fnstenv
dec
push
cmpsl
and
push
mov
dec
lds
xor
mov
mov
roll
jo
pop
pushf
push
dec
lea
jo
shll
mov
in
and
nop
mov
fcompp
push
lahf
ret
mov
adc
sub
push
mov
ret
mov
testb
push
cmp
xchg
pop
subl
xor
mov
and
pop
xchg
inc
inc
push
mov
mov
push
mov
push
ss
pop
xor
jp
hlt
sub
jp
mov
fmull
push
sti
iret
popa
push
daa
sbb
push
ljmp
add
mov
mov
int
jge
jle
push
add
dec
inc
push
insb
cmpsl
xchg
ja
push
es
fisttps
push
sub
mov
and
lods
mov
xchg
cmc
outsb
sub
pop
cmp
mov
out
and
jg
pop
cmp
cli
or
sbb
sbb
int
or
inc
lods
stos
imul
adc
call
popf
push
sbb
loop
cwtl
outsl
into
dec
jb
sti
or
or
pop
mov
dec
frstor
jge
xlat
movsl
ss
jl
dec
shl
aas
jno
mov
in
mov
imul
sbb
pop
ret
test
xchg
xchg
push
pop
in
and
add
incl
mov
and
lret
jne
sahf
das
cmp
rcrb
jno
mov
dec
mov
push
xlat
ja
jle
inc
ret
add
push
jmp
lods
js
insb
movsb
jg
gs
jne
out
sub
push
nop
mov
cmp
ljmp
sub
pop
cmpsb
push
sbb
aad
jl
leave
insl
into
jg
lods
adc
aad
hlt
mov
test
mov
adc
mov
out
dec
dec
push
popa
mov
push
mov
aas
sbb
mov
testb
insb
js
out
pop
bound
pushl
mov
cmp
cmpsl
arpl
cmp
xchg
fnsave
mov
push
lcall
push
fnstenv
jg
push
dec
decb
movl
les
jecxz
inc
leave
adc
push
dec
xlat
scas
lea
ret
call
out
pop
push
pop
pop
mov
icebp
adc
fsub
test
outsb
mov
enter
arpl
mov
stos
cmpsl
xchg
pop
push
fdivrs
inc
pop
imul
and
push
pop
lods
ret
inc
jae
and
fwait
or
sbbl
popa
jno
mov
mov
ja
push
cwtl
sbb
js
mov
add
inc
jmp
arpl
in
aaa
scas
xor
mov
ret
scas
jns
data16
pop
mov
nop
pop
inc
pop
in
icebp
in
sbb
or
inc
mov
jecxz
jg
inc
outsl
add
or
push
lea
and
xchg
test
cmp
enter
xchg
sahf
in
jae
mov
xorl
mov
outsl
lret
mov
or
cltd
clc
xor
mov
insl
repnz
xor
roll
xchg
fldenv
xchg
leave
and
sbb
repz
fldcw
and
jp
lods
push
add
std
push
fcomp
sti
jge
mov
dec
or
xor
adc
fsubl
push
mov
fsubrl
enter
mov
cmpsl
lea
pop
jmp
xchg
adcl
mov
sbb
pop
enter
mov
pop
clc
mov
jnp
add
test
xchg
in
sub
sub
movl
sbb
sbb
adcl
push
stos
sbb
pop
cs
jp
stos
push
mov
sbb
fs
inc
mov
inc
ljmp
pop
cmp
fcoms
loop
call
xchg
shll
gs
mov
cmp
mov
sub
loope
jg
or
add
cli
adc
cmp
push
leave
sti
jae
xchg
lods
int
std
aas
fisttpll
imul
test
and
fldenv
xchg
or
lds
cmpsl
fsts
cmp
or
leave
fstps
cmpb
cmp
cmp
xor
sub
sub
pop
cmp
lcall
cltd
nop
push
inc
sub
mov
mov
push
jb
arpl
mov
es
add
sarb
pop
out
test
into
cmc
fwait
cmc
ds
jmp
sub
mov
jne
xor
and
sbb
sbb
fsubrl
fisubs
outsl
dec
push
cmp
sbb
xchg
pop
sbb
aaa
mov
push
int
outsl
cmc
mov
push
jbe
mov
dec
es
hlt
iret
hlt
xchg
fcoms
cmp
scas
or
pusha
inc
cmc
fistps
and
aaa
addr16
mov
sub
imul
cli
mov
lcall
fdivp
std
pop
arpl
aas
push
test
cmp
leave
mov
mov
scas
cltd
cmp
sbb
jo
scas
xchg
in
mov
aam
fbld
sahf
mov
push
mov
fimuls
add
cmp
mov
arpl
ja
mov
imul
movsb
ret
dec
sbb
pop
pop
or
sub
and
dec
push
inc
dec
xchg
jb
nop
add
adc
dec
cmp
xchg
jae
mov
adc
push
lahf
add
lcall
push
and
fbstp
fs
inc
ja
mov
aaa
inc
lcall
gs
cmp
mov
stc
in
icebp
frstor
rcrl
gs
lods
ljmp
imulb
pop
jl
out
js
or
adc
nop
jecxz
jb
xor
mov
pop
xchg
adc
mov
sbb
daa
sbbl
push
notl
int3
jl
sub
xchg
and
sbb
add
dec
dec
int3
shlb
dec
stos
aaa
rcpps
test
aaa
lock
pop
inc
aad
adc
inc
inc
fsubp
adc
push
xor
adc
in
int
jp
pop
and
cld
mov
sahf
test
cmp
subl
out
fs
test
rorb
mov
inc
dec
mov
mov
mov
imul
pop
in
aas
dec
stos
arpl
pop
arpl
adc
mov
cltd
call
std
and
test
mov
stc
jle
scas
jmp
jle
pop
lods
aam
or
inc
imul
cmp
fdivr
popf
adc
icebp
ret
sahf
jge
pop
jns
dec
xor
lock
cwtl
sub
mov
jne
std
xlat
arpl
in
dec
cs
pop
je
sub
cmp
mov
push
sub
push
xlat
jecxz
movsl
aad
push
clc
mov
stos
mov
pop
aad
sbbl
adc
bound
incb
adc
xor
rolw
test
push
aad
mov
and
jge
mov
push
or
sbb
aaa
icebp
popa
and
xor
fidivrl
cmp
mov
jnp
popf
pop
int3
sbb
xor
sbb
fcomi
xchg
add
cmp
cmc
jge
cmp
pop
push
fists
lods
into
sub
sbb
bound
or
fwait
jge
stc
in
popa
incb
add
dec
mov
pop
add
mov
or
push
sub
in
dec
sbb
outsb
pop
sbb
xor
shll
insb
scas
psubusw
xor
mov
mov
cmpsb
mov
xchg
ret
pop
xchg
hlt
repz
sbb
push
inc
mov
cmp
or
push
xlat
jl
lret
mov
adc
sbb
rcrb
inc
push
add
loop
inc
scas
xchg
leave
int
dec
scas
fistpll
pop
inc
loope
into
pop
mov
cltd
cltd
adcl
loop
ss
addr16
cmc
popf
std
outsl
cwtl
sbb
cltd
dec
jb
jne
inc
movsl
push
pop
popa
dec
and
cs
pop
xchg
fmull
les
and
ss
adcb
adc
lock
pop
cmp
pop
sbb
dec
inc
js
cmp
mov
pop
out
stc
xchg
xor
ss
cs
fdivrs
test
xor
stos
icebp
cmp
aas
ffreep
jbe
das
addr16
cmp
adc
sbb
gs
xchg
mov
repnz
cli
cmp
xchg
mov
lods
xchg
decl
xor
scas
arpl
and
imul
out
or
loop
cmpl
mov
jno
iret
icebp
sub
adc
and
cld
ret
adc
mov
push
push
sahf
push
mov
xchg
ret
sbb
or
sub
pop
in
push
mov
push
sbb
dec
add
out
sbb
adc
mov
or
out
xchg
jge
hlt
fwait
in
das
and
jnp
push
jp
sub
test
or
mov
lock
sbb
cmpsl
jns
dec
test
adc
clc
repnz
push
push
arpl
mov
mov
pop
sub
xchg
mov
mov
ret
xor
jg
xchg
inc
inc
dec
inc
xchg
cmp
jbe
arpl
test
jae
scas
je
loopne
in
fs
sub
shr
lret
into
add
xor
leave
or
out
cld
les
push
cmpl
jb
imul
jge
mov
mov
dec
mov
aaa
pop
mov
daa
xchg
out
pop
repnz
jo
jb
bound
fs
ljmp
mov
xor
pop
cmp
mov
mov
pusha
fisttps
imul
dec
outsb
inc
inc
out
in
push
cmpsb
in
fistps
in
cmp
or
pop
icebp
ficomps
test
das
std
icebp
or
fsubrp
loope
sbb
cmc
ret
stos
leave
pop
push
repnz
clc
add
out
fs
pop
ret
inc
ljmp
sahf
push
sahf
icebp
int3
pop
mov
nop
das
inc
inc
je
xchg
dec
mov
in
adc
loope
repz
mov
xchg
push
int
sbb
mov
in
adc
mov
dec
pop
inc
outsl
pusha
cmpb
stc
and
daa
and
jle
imul
adc
int
inc
push
xor
jl
cltd
aad
outsb
mov
mov
scas
or
xor
mov
ljmp
jl
pop
andl
inc
adc
lret
pushf
jmp
push
je
clc
push
mov
stc
pop
aam
mov
je
push
inc
js
push
xlat
aam
mov
mov
test
adc
scas
jge
cld
fidivrl
and
inc
mov
lret
aas
cmp
or
mov
repz
and
ret
jbe
adc
lahf
inc
cltd
and
mov
shrb
add
mov
pop
test
push
and
iret
sub
nop
jge
xor
pop
ror
cmp
pusha
in
adc
mull
mov
dec
in
out
and
das
push
leave
inc
int
xchg
cmp
bound
pop
mov
jns
jae
fdivrp
xor
stc
and
and
movsb
jg
shll
ret
inc
dec
inc
lcall
mov
xchg
out
mov
rcll
dec
dec
mov
mov
or
pop
test
pop
or
ret
push
ss
mov
cmp
mov
xchg
pop
mov
add
push
rclb
jno
mov
push
mov
mov
out
sbb
push
adc
mov
mov
jecxz
leave
ficomps
add
mov
insb
xchg
cli
lock
jbe
add
mov
jnp
imulb
mov
sub
pop
push
mov
movl
jne
icebp
pop
into
inc
mov
imul
ja
loop
pop
dec
test
dec
outsl
js
jg
jmp
enter
out
xor
rcrb
push
push
inc
out
movsb
mov
jo
or
iret
aad
cmp
pop
es
int3
mov
sub
stos
dec
add
mov
pusha
pop
cmc
pop
mov
dec
xor
push
mov
push
sub
hlt
push
bound
pop
out
shlb
pushl
dec
xchg
pop
pop
call
dec
jne
push
inc
outsl
mov
lahf
mulb
fstl
lock
push
pop
iret
mov
shlb
sbb
push
sub
xchg
stos
loop
mov
push
insl
out
cmp
cmp
pop
or
sub
inc
pop
rorb
adcb
aaa
mov
lds
rclb
stos
scas
jnp
mov
in
xchg
outsl
mov
lods
insl
js
repnz
mov
sub
pop
push
xor
lds
xor
cs
jne
data16
pop
cmpb
jecxz
jp
push
sub
add
mov
inc
rcrb
pusha
into
adc
xchg
adc
mov
mul
jbe
cmp
inc
cmp
dec
hlt
jle
cmovo
add
cmp
pushf
sti
push
adc
loope
mov
pop
mov
std
shll
rcll
push
push
outsl
dec
outsb
inc
sbb
mov
push
xor
lahf
insl
mov
cmpsl
test
pop
into
sbb
jecxz
mov
add
shll
cld
mov
cwtl
jnp
sbb
dec
sub
pusha
adcl
int3
bts
adc
sub
mov
jo
push
xor
movsl
add
pop
mov
cmp
fcmovu
fidivs
sub
jmp
adc
jae
lret
lcall
xor
sahf
mov
push
lcall
data16
js
jns
fcomip
mov
add
pop
jb
mov
lds
fldt
xlat
pop
les
adc
sti
sbb
pop
addr16
shlb
jge
mov
or
mov
fucom
std
dec
test
or
ficoms
fs
mov
mov
sub
xchg
jg
mov
mov
std
in
sbb
repz
jmp
mov
leave
mov
push
mov
adc
insl
sub
incb
fxch
incb
shlb
aaa
and
lods
jl
jg
je
cmp
jmp
jp
js
cmc
les
lahf
loopne
sbb
mov
add
mov
lds
add
xor
ret
mov
ljmp
xchg
add
repz
imul
es
cs
std
cs
mov
xchg
pusha
jecxz
xchg
xlat
sti
test
int
ds
xlat
shll
js
stc
xor
movsb
pop
dec
jp
inc
mov
loope
cmp
mov
jnp
add
or
dec
hlt
and
or
or
jnp
adc
dec
xchg
insb
aam
jae
mov
mov
cmovns
dec
and
mov
push
loopne
outsb
sbb
jns
cmpsb
fwait
inc
out
push
jge
aaa
and
test
movsb
xchg
and
pushf
mov
mov
insl
sbb
push
dec
fistl
out
sbb
pushf
cltd
push
cwtl
sbb
or
pop
in
into
mov
movsb
inc
nop
mov
mov
nop
jp
jmp
inc
jbe
scas
lods
ljmp
shlb
jp
mov
decl
loop
addr16
pop
jecxz
mov
push
je
sub
loope
mov
js
adc
std
out
jns
lcall
jae
or
je
repz
fistl
dec
mov
or
gs
jb
jg
ss
push
repnz
imul
inc
hlt
clc
mov
es
ds
xor
out
mov
out
push
pop
push
adcb
sbb
int
es
xchg
movsb
test
push
mov
and
scas
rcrb
pusha
sti
outsb
sbb
xchg
mov
adc
push
pshufw
test
xor
add
mov
es
outsl
fcmovb
loope
sahf
or
enter
leave
aaa
mov
xchg
jmp
faddp
push
imul
test
sub
cmp
dec
push
xor
shll
cmp
xchg
ja
fmuls
lds
movsl
cmp
inc
psrld
mov
jns
mov
subb
pop
outsl
xchg
push
dec
das
mov
and
mov
sbb
mov
adcl
cs
and
scas
pop
shrl
mov
insl
bound
aam
mov
cmp
iret
sbb
sbb
test
nop
add
or
add
jp
pop
jecxz
mov
and
iret
dec
mov
sahf
dec
inc
dec
xchg
dec
shll
dec
jnp
inc
pop
xchg
mov
push
cmpsl
add
add
cmp
dec
jl
hlt
into
lods
iret
mov
mov
shll
jecxz
out
icebp
icebp
adc
in
icebp
jb
dec
inc
cltd
mov
xor
dec
sti
xchg
in
sarl
shl
jae
push
repz
div
dec
mov
ljmp
mov
ljmp
int3
fadd
push
jns
repnz
ds
pop
js
scas
sbb
push
pusha
rorb
adc
and
jo
jge
sub
sub
lcall
dec
pop
ret
push
jl
pop
in
enter
outsb
xchg
push
call
mov
dec
fwait
xor
inc
or
add
xchg
std
adc
mov
hlt
je
mov
outsl
fisubs
push
loopne
in
sti
add
popa
sub
jl
pusha
loope
adcl
lea
pusha
xchg
addr16
les
pop
out
dec
sti
subb
gs
fcompl
inc
cwtl
mov
repz
pop
mov
adc
repnz
loope
or
cmpb
pop
mov
call
jmp
pop
cmp
aas
mov
outsl
sbb
test
dec
daa
lods
inc
sbb
or
int3
bound
xchg
insl
and
fldcw
clc
xchg
stos
loope
inc
mov
fs
ret
ds
mov
cmc
pop
mov
mov
jg
mov
fimuls
xchg
js
jmp
ja
repz
jg
jnp
pushf
sub
lds
int3
std
jge
adc
push
in
sbb
xor
add
cmc
subb
xor
outsb
in
cltd
lods
ds
xchg
test
mov
loopne
rol
scas
mov
movsl
push
sbb
lahf
scas
repz
fsub
rcl
inc
sbb
leave
cwtl
rcrl
sub
dec
sbb
cmp
sbb
push
sbb
cmpxchg
cmp
sub
mov
xor
in
sarl
dec
sub
jl
sub
loope
lea
jbe
es
jno
push
and
push
sbb
mov
jb
sahf
ret
loopne
push
add
push
cli
xor
movsb
jnp
pop
inc
out
sub
pushf
xor
testl
mov
sti
and
xchg
rcll
inc
cmc
xchg
sub
fstps
pop
inc
ds
or
mov
xor
fidivl
sbb
int3
sbbl
push
sbb
xchg
ud0
pop
jl
mov
scas
leave
mov
add
mov
sub
pop
adc
call
mov
imul
mov
movsb
out
add
dec
push
into
js
push
aam
insl
push
idivl
xchg
or
cmp
and
cs
jbe
in
cmc
add
mov
and
and
sbb
lahf
or
push
push
inc
cmp
idiv
mov
fs
adc
repz
bound
dec
pusha
mov
jge
jnp
repnz
adc
inc
cmp
sub
xor
fdivs
sti
dec
mov
and
fisubrl
ficoml
and
pusha
aad
and
jp
jp
pushf
lea
jne
das
or
int3
sar
and
outsl
sbb
sbb
jo
dec
push
lea
ret
fcoml
mov
mov
mov
mov
divb
negl
notb
scas
jno
jecxz
jmp
mov
xchg
int3
push
and
sbb
add
sarl
arpl
and
into
jae
add
pop
inc
jo
notl
rcl
ror
ss
outsl
test
mov
or
cmpl
xchg
sahf
cmp
lahf
sbb
std
out
flds
test
imul
addr16
xchg
push
push
icebp
pop
or
test
je
xor
cmp
clc
xlat
imull
cs
cmp
or
mov
sub
sub
mov
sbb
push
stos
loope
rorb
dec
or
mov
cmp
sub
iret
rclb
jb
stos
scas
cmp
call
xchg
push
pop
test
push
insb
inc
pop
das
pushf
dec
push
xor
mov
adc
sbb
sarb
sub
inc
mov
stos
mov
mov
pop
pop
xlat
outsl
push
bound
dec
adc
shlb
ret
mov
call
adc
mov
daa
movsl
mov
and
mov
cmp
adc
nop
xchg
dec
addr16
mov
stos
sarl
or
int
add
xchg
xchg
mov
out
mov
xchg
mov
mov
mov
ja
sub
in
addr16
sbb
and
mov
popa
adc
or
sub
xchg
cmp
insb
jne
xchg
lahf
adc
lret
mov
dec
les
push
push
idiv
js
stc
repz
clc
icebp
in
push
sub
sub
scas
stc
push
pop
out
movsl
mov
cmpsl
lret
sub
fs
lret
in
in
pop
and
and
or
jo
je
jmp
ss
fwait
divl
inc
adc
add
lcall
cmp
adc
ljmp
andb
adc
add
out
outsl
and
xor
pop
and
test
das
push
or
arpl
jno
jae
subl
jae
imull
test
mov
imul
sub
push
pop
or
test
dec
pop
ret
cmp
cmp
push
outsl
lret
mov
ja
mov
fnstsw
pop
lods
js
push
jb
xor
mov
sbb
je
loope
xchg
and
lret
out
mov
outsb
icebp
testl
and
jge
aad
jae,pn
cmp
scas
or
test
adc
lret
adc
lds
lret
jns
lock
test
and
fistps
scas
add
fmul
mov
push
imul
cmp
sti
loope
inc
in
dec
orl
movsb
stos
imulb
and
xor
mov
cmp
cmp
xchg
cmpsb
xor
and
or
in
out
sbb
add
mov
jo
sub
and
cld
stos
adc
mov
ljmp
push
fidivs
or
jno
dec
cmpsb
inc
or
sub
mov
in
pop
xchg
cmc
add
fdivs
addb
lcall
cld
adcl
fucom
sti
mov
push
js
pop
xlat
push
aas
or
push
mov
out
mov
push
xchg
pop
push
cmp
aam
xor
in
shll
inc
popf
push
xchg
out
jns
insl
aaa
insl
dec
pop
xchg
icebp
testb
test
pop
orl
jo
or
ss
ret
ja
dec
lea
cmpsl
dec
lahf
shl
or
andb
scas
cmp
cs
mov
jns
int3
cmp
divl
push
sbb
sub
pop
ljmp
inc
sub
loopne
loope
xor
fsubl
adc
xchg
sbb
jbe
cmpsl
sub
es
fcmovnb
push
arpl
ljmp
fisubrl
cli
cmpsb
stos
pop
ljmp
pop
in
xor
pop
fstpt
inc
xlat
dec
add
xlat
pop
xchg
pop
xor
xchg
int3
cmp
dec
cmp
fidivl
je
daa
or
mov
fsts
mov
mov
or
mov
xor
cmp
and
push
repz
dec
add
pop
into
jno
pop
push
ljmp
inc
je
out
leave
das
iret
mov
cmpsl
adc
push
lea
inc
dec
fldcw
stos
fistpl
ss
jne
popf
xor
test
scas
push
adcl
sti
mov
outsb
lcall
test
outsl
pusha
xchg
in
add
sahf
lods
outsb
mov
add
fcmovne
dec
cmc
jno
in
cs
fistps
test
sahf
mov
push
test
push
jbe
xor
dec
outsl
pop
nop
test
mov
mov
sti
lret
mov
mov
mov
fcompl
daa
add
add
jo
push
std
add
shlb
or
fdivr
bound
rep
ss
stc
fistpll
dec
clc
dec
das
xchg
mov
lods
pushf
sub
cmp
fmull
call
mov
outsl
push
ljmp
mov
adc
pushf
pop
cmp
and
lret
popf
mov
fwait
cmp
mov
int3
mov
adc
inc
out
test
and
sub
jecxz
stos
cmpsb
add
xor
mov
cmp
scas
cmpsl
test
adc
mov
add
roll
lock
xor
lcall
imul
sub
sbbb
test
lods
push
lcall
into
push
sbb
fwait
push
adc
movsl
lret
mov
scas
dec
push
sbb
fucomp
inc
imul
orb
cmpsb
ret
lods
cmpsl
push
push
xor
mov
and
rcll
pop
mov
repz
pop
mov
sbb
outsb
dec
stos
out
arpl
aas
addb
ficoms
pop
arpl
subl
out
cs
roll
xor
jle
mov
jp
mov
push
or
adc
adc
jge
add
mov
cmp
dec
fiadds
dec
cmp
or
xorb
aad
jge
into
test
inc
stc
pop
sub
dec
pushf
push
inc
mov
ljmp
xor
out
dec
rolb
jmp
sbb
out
inc
mov
inc
xor
fwait
test
mov
out
adc
or
dec
xor
mov
jb
lret
test
sbb
mov
mov
mov
pusha
push
leave
dec
sub
cld
test
arpl
jecxz
fisubs
mov
lret
dec
jb
in
stc
je
mov
std
dec
pop
and
or
sub
push
mov
lret
fildl
jno
push
sub
mov
xor
xchg
push
aad
cli
xchg
add
ljmp
iret
mov
mov
into
jg
push
lds
mov
and
or
sbb
cmp
jns
enter
fmuls
imul
pmuludq
pop
and
iret
leave
in
mov
in
in
lea
cmp
jecxz
adc
das
ret
pop
ficomps
cltd
sub
inc
sti
fwait
and
xchg
sub
mov
int3
or
mov
fcomip
xchg
inc
push
sarb
xchg
repz
jmp
xchg
roll
fcoml
sub
data16
pop
mov
push
mov
ret
outsl
in
push
test
leave
ret
outsb
push
mov
and
xor
movl
dec
rcrb
xchg
clc
lods
ret
and
call
mov
std
add
call
fs
xor
xlat
mov
aas
mov
pusha
dec
out
push
dec
ljmp
adc
fcoml
mov
lods
push
lods
lock
dec
dec
jae
adc
or
pop
adc
sbb
arpl
jle
movsl
inc
ljmp
aas
mov
insb
inc
push
fistps
mov
js
push
cwtl
jle
cmc
cli
fildl
test
mov
mov
add
ss
stos
cli
in
mov
mov
pushf
and
pop
je
xor
push
mov
dec
mov
or
movsb
xlat
movsb
xor
pop
cltd
xor
roll
out
shlb
push
ds
mov
fbstp
sbb
std
xor
stos
add
push
or
adc
jns
sbb
xor
add
out
cmpsb
test
cli
mov
xor
add
repnz
scas
sbb
test
jbe
call
xor
pushf
rol
dec
mov
lods
mov
loopne
adc
lods
pop
push
cmpsl
iret
jge
adc
xchg
add
pop
stos
mov
dec
cmc
into
mov
cld
mov
repz
xchg
cwtl
shrl
movsl
loope
pop
mov
popf
xchg
xchg
pop
or
cmp
pushf
cmp
mov
mov
int
xor
subb
mov
pop
sub
xchg
lahf
and
repz
sub
test
lock
scas
cmp
mov
inc
mov
ret
pop
ret
iret
out
das
add
repz
push
int3
sbb
shlb
mov
mov
xchg
pusha
cmp
push
leave
cltd
sbb
pushf
in
push
lahf
jno,pn
loopne
cli
out
mov
orl
fsub
js
popf
out
fiaddl
rcll
push
icebp
jno
add
push
xchg
in
adc
cmp
sbb
adc
mov
xor
fisubrl
mov
je
inc
das
add
jp
push
ret
xchg
mov
scas
cmpsb
xlat
sbb
fsubl
mov
mov
cmp
insl
xorl
add
mov
pop
jne
mov
push
jo
ja
dec
mov
dec
jmp
cmp
nop
xor
dec
out
cli
sub
jns
sub
out
push
aam
push
ja
divb
mov
in
repnz
ss
insb
push
add
fdivrs
and
addb
sub
cli
rcrl
pop
inc
xchg
pop
cwtl
loopne
cmpl
sbb
dec
xchg
cmp
or
lock
push
inc
pop
mov
fxch
mov
dec
lods
dec
jns
mov
sbb
pop
imul
add
aam
rcl
repnz
mov
arpl
cltd
rcll
jnp
mov
not
pusha
stc
rcrb
mov
cltd
xchg
shl
adc
insb
pusha
orb
cwtl
imul
push
clc
movsb
push
stos
lods
add
mov
push
mov
scas
mov
lods
fsts
out
lock
lcall
cmp
addb
jns
mov
adc
out
dec
cmp
inc
xchg
in
xor
int
imul
pop
loopne
lock
sbb
test
mov
cmp
loop
int
ja
clc
into
paddsw
jae
movsl
xor
adc
fiaddl
outsb
popf
push
ficompl
popf
fdivr
les
mov
ljmp
cmp
pop
mov
or
dec
dec
push
sub
fwait
add
cld
aad
adc
xor
sbb
sub
xchg
inc
js
mov
inc
jl
cmp
jns
and
cld
mov
in
or
adc
sbb
jmp
dec
movsl
add
int3
nop
mov
dec
and
stos
cmp
jmp
sub
mov
pop
dec
mov
fwait
jne
out
xor
loope
popa
or
addr16
lret
neg
jbe
lock
xorb
in
pop
dec
xor
pop
popf
scas
dec
dec
push
fistpl
fmul
sbb
pop
jno
pop
loope
in
test
or
popa
js
xchg
jae
rolb
cmpsb
cmp
mov
lea
bound
jecxz
ss
loope
cmp
ret
jb
movsb
repz
imul
out
divb
testl
pop
sub
push
lock
aaa
shlb
gs
dec
jno
aaa
sbb
scas
xor
es
fwait
lcall
cltd
cmpsb
push
mov
cmp
cmp
sbb
js
xlat
jns
movsb
das
jo
in
in
and
sbb
sbb
int3
sbbb
mov
clc
test
pop
out
mov
push
fldz
fists
test
scas
push
push
xchg
xor
loope
imul
xchg
mov
aaa
or
jbe
les
jne
lret
addr16
imulb
stos
lods
cld
adc
movsl
icebp
and
into
mov
ja
aam
pushw
andl
jmp
fidivl
rcr
fucom
jns
insb
mov
out
fs
or
std
xchg
xor
mov
cmc
mov
dec
mov
add
mov
xchg
fldenv
dec
xorl
sub
mov
jp
cmp
in
adcl
dec
sbb
imul
jge
lcall
push
inc
adc
movsl
mov
mov
test
nop
xchg
inc
lret
inc
insl
push
test
fisubl
dec
fistl
outsb
xchg
jbe
sbb
sbb
not
int3
mov
repz
inc
fsubr
jmp
pop
clc
mov
pop
out
pop
mov
shrb
push
enter
rcrb
leave
mov
aaa
sbb
sbbl
sti
lea
xor
test
dec
sarb
pusha
pop
mov
xlat
lods
dec
call
jmp
in
jmp
nop
sbb
pop
sbb
cmp
cwtl
jne
aad
mov
in
mov
sub
cld
mov
or
or
push
ja
scas
in
shll
ljmp
in
ret
ret
cmpsl
ljmp
inc
lret
fs
subb
shrl
lods
jns
loop
movsl
fdivr
push
das
adc
mov
fwait
mov
or
jns
xlat
getsec
jae
push
mov
fldt
mov
xlat
mov
ss
mov
loop
inc
nop
pop
and
jle
dec
pop
sub
and
or
fucomi
fcmovnbe
sub
dec
sub
cli
mov
and
xor
mov
enter
jge
add
jns
and
js
testl
pop
test
cmc
mov
addr16
pop
mov
loopne
es
push
test
call
fcom
cmp
jecxz
dec
mov
inc
or
xlat
outsl
xchg
mov
aaa
mov
lret
mov
fdivrs
lcall
std
shll
les
xchg
faddl
sbb
mov
insb
addr16
jbe
sbb
inc
popf
mov
fisubrl
xchg
out
cmp
lock
and
stos
sbb
sbb
mov
mov
cmp
fs
push
shrb
push
mov
xchg
pushf
aam
in
cld
inc
mov
rclb
icebp
inc
pop
adc
inc
daa
xchg
xchg
or
in
cmp
int3
lret
sub
jl
jns
fisubl
js
xlat
pusha
out
push
push
out
push
cmpsb
es
or
add
shr
ljmp
out
loopne
cli
sbb
in
mov
xor
xchg
scas
lahf
pop
push
call
mov
cmpsl
mov
sub
loope
mov
lds
popa
scas
aaa
lret
jnp
adcl
jmp
ljmp
or
ret
lods
sub
orb
jns
out
xor
insb
in
push
push
mov
imul
pop
mov
pop
inc
lods
popf
or
loop
jnp
divb
or
sub
add
lods
push
mov
mov
ret
add
or
cmp
pushf
in
add
popa
mov
in
scas
lret
sub
push
jbe
aad
std
push
outsl
in
lcall
addr16
xchg
pop
shlb
mov
je
pop
sub
xor
add
insl
out
cltd
inc
xor
and
jmp
cmp
iret
icebp
mov
nop
mov
int
sahf
loop
std
pop
ret
scas
pop
and
adc
mov
sbbl
mov
xor
lods
or
xor
sbb
dec
xchg
popa
mov
leave
int3
mov
clc
xor
lret
or
add
test
cld
sub
inc
sbb
add
mov
pop
fucomp
adc
bound
mov
ss
mov
and
mov
imul
shll
dec
aas
ret
in
fdivr
out
jo
sar
mov
testb
mov
test
dec
mov
cwtl
out
fs
mov
pop
call
in
negl
ds
xchg
pop
push
ljmp
inc
pusha
fstl
and
sbb
mov
mul
outsb
lahf
fsub
cwtl
test
inc
lret
scas
aad
in
leave
mov
adc
lds
rcrb
leave
dec
out
or
fidivs
pop
cwtl
aad
mov
and
inc
xchg
jnp
sti
out
and
jmp
mov
call
into
adc
pop
pop
xchg
pop
pop
std
call
bound
mov
jb
or
leave
dec
fs
fcmovnbe
dec
jp
cmp
ficoml
or
pop
icebp
test
mov
int
mov
mov
int
outsl
loopne
or
jns
push
cld
dec
fcomip
lods
ljmp
test
insb
or
add
push
cli
and
jb
neg
sbb
jl
fimull
movsl
repz
fnsave
mov
mov
inc
xor
cmp
fidivrl
aam
sbb
out
xor
loope
pop
sub
cmp
mov
dec
add
cmp
push
and
cmpb
xor
mov
jnp
jno
push
ficoml
or
sub
repz
pop
jl
fst
pop
adc
test
push
out
push
scas
jl
aam
in
sbb
mov
call
ds
shlb
push
mov
jg
sbb
mov
ljmp
leave
or
fildll
mov
popfw
sub
sbb
xor
mov
add
inc
outsb
leave
flds
cmp
mov
or
out
push
divb
fidivrl
ja
jnp
inc
push
pop
sub
jo
mov
pop
nop
push
mov
out
lcall
outsb
stos
sar
jne
sub
add
pusha
pushf
jmp
sub
out
jne
outsb
sbb
mov
add
cli
inc
imul
ret
movsl
cmpsb
fadds
nop
add
lea
xchg
xchg
sub
adc
or
in
daa
insb
xchg
inc
xor
decl
out
rcr
jp
add
lock
ja
pop
loopne
push
sub
jp
cmp
ret
test
push
push
xchg
push
test
lds
aam
out
js
in
jb
jmp
xchg
inc
cmp
in
push
mov
cmc
lods
popw
xlat
mov
and
rorl
sub
mov
pop
jp
out
lret
mov
lcall
xor
sub
std
sub
push
loopne
or
jg
hlt
stos
loopne
aaa
xor
pusha
pop
ret
out
lcall
cmp
out
add
and
or
sti
mov
int3
test
inc
mov
cwtl
lods
inc
gs
adc
xchg
in
mov
mov
xchg
add
incl
orb
fsin
push
jae
jns
mov
sbb
push
lea
fs
jmp
inc
cld
mov
stos
pop
mov
je
aam
rcl
mov
jno
in
mov
jns
ja
jbe
push
jbe
xor
stos
lods
gs
pop
pop
arpl
shlb
es
pop
dec
into
push
jg
adc
cmpsb
int3
dec
xor
inc
cs
nop
adc
in
xor
pop
xchg
fists
mov
test
or
push
or
jne
jo
pop
adc
jns
push
rcrl
into
mov
testl
mov
nop
cmp
aas
dec
cmc
cld
nop
add
push
clc
out
mov
mov
mov
outsl
sbb
mov
fadds
cmova
insb
inc
jl
add
insb
sub
outsb
call
pop
jnp
out
add
lds
call
xor
mov
inc
and
aas
push
and
mov
mov
das
nop
push
pushf
ljmp
dec
cltd
pushf
xchg
test
sub
xchg
pushf
mov
jl
das
pop
loopne
lret
jb
xor
leave
pop
fisttps
jp
test
fldlg2
ret
and
mov
push
xor
lock
add
mov
jo
push
sahf
pop
mov
mov
cmp
test
inc
aas
inc
fidivrs
xor
aas
inc
xchg
test
mov
inc
xlat
and
xor
pop
mov
hlt
inc
and
push
mov
pushl
repz
mov
cmp
int3
movsb
cmovbe
pop
scas
imul
adc
jg
je
cmpb
adc
fiaddl
xchg
repz
jno
inc
sub
dec
jo
dec
xlat
fsubl
dec
dec
loope
les
cld
jb
rorb
movsl
pop
add
jg
mov
jno
sbb
cmp
shll
ss
fwait
lret
dec
lcall
sbb
popf
fstpl
xor
imul
ret
aaa
sbb
fnsave
stc
inc
xor
xorl
mov
add
push
clc
xchg
sahf
mov
adc
scas
mov
notb
mov
and
and
add
cmp
mov
popf
ja
dec
fdivs
dec
mov
loope
rcr
adcb
pop
and
pop
add
pop
in
bound
add
rolb
add
imull
sbb
and
stos
push
scas
arpl
xchg
aam
into
popf
insl
mov
push
mov
push
adc
sub
cmp
xchg
daa
cmpsl
adc
cmp
sub
rcl
ret
and
shr
sahf
nop
test
xor
push
inc
out
sahf
inc
inc
or
mov
daa
xor
and
adc
dec
add
dec
mov
rcrb
insl
adc
mov
mov
pushf
dec
imul
or
stos
sbb
fwait
rol
inc
aas
and
mov
mov
lock
mov
inc
pxor
push
js
adc
or
xchg
lret
lds
cmc
dec
jae
push
push
filds
fs
adc
pop
aad
stc
sti
loop
push
pop
pop
xchg
sbb
xor
hlt
jge
dec
and
add
popl
sub
cmp
pop
jne,pn
jns
jle
lret
cmpsl
sbb
add
ss
pandn
insl
icebp
shl
add
rorb
ljmp
daa
imul
repnz
negl
in
pop
fs
sub
push
jbe
xchg
jae
push
mov
int3
cmp
fisubrl
fs
cmp
sub
push
cltd
cld
aaa
js
dec
lods
sub
adc
ja
inc
test
inc
clc
in
jns
mov
adc
push
ja
fs
dec
jns
std
dec
js
mov
lock
sub
testb
hlt
jae
cld
popf
sub
cmp
sti
dec
je
push
add
jecxz
xchg
xchg
int
test
jbe
stc
stos
in
cmpb
add
dec
mov
scas
daa
add
jae
not
mov
push
jne
stc
sbb
jbe
pop
aaa
das
xor
jbe
in
aas
mov
jne
xor
jno
or
push
lods
and
addr16
lret
xchg
pusha
lahf
pop
gs
pop
scas
or
test
cmp
in
or
negl
popa
out
jbe
test
xor
imul
jmp
lds
mov
pop
inc
imul
ljmp
jbe
xchg
lret
in
mov
xchg
jl
inc
das
orl
cmp
pop
push
cmc
pop
xchg
mov
mov
xor
jno
mov
mov
sub
insb
out
adc
push
adc
and
lahf
rorl
hlt
movsb
or
data16
mov
cmp
sti
jmp
jecxz
in
fsubr
lahf
mov
out
jo
push
add
fsubs
ljmp
mov
stc
mov
icebp
das
stos
mov
add
movsb
cmpsb
in
clc
mov
sahf
stc
dec
inc
sarb
fmul
stc
fwait
or
xlat
cli
push
hlt
testl
nop
cmp
push
push
xchg
test
nop
push
stos
push
mov
ss
iret
inc
out
insb
fiaddl
repz
sub
jae
and
pop
imul
ret
xor
fcmovne
push
and
and
mov
insl
push
pop
adc
xchg
shll
ja
or
loop
mov
cmp
ds
lock
les
lea
dec
sub
mov
insl
aaa
outsb
adc
mov
sbb
pop
xor
mov
mov
pop
sahf
movb
ret
inc
and
insl
or
scas
fwait
inc
push
sub
sbb
dec
dec
mov
sbb
std
dec
pop
insb
mov
test
and
mov
cmp
ss
mov
push
dec
push
icebp
shrl
jo
outsb
shll
out
insb
je
and
jg
movsl
in
fisttpl
or
dec
sbb
sub
cwtl
or
sbb
push
pop
dec
in
sahf
mov
jl
adc
or
leave
and
das
xchg
or
inc
test
xor
jmp
lea
pop
mov
nop
sbb
sbb
arpl
inc
sub
pop
xchg
in
add
out
cli
cmp
mov
lea
out
pop
mov
mov
jmp
fldcw
orb
clc
cmp
cmp
jnp
jns
mov
into
lret
sub
sbb
sub
and
pop
out
imul
shrl
jns
mov
cmp
lahf
pop
mov
or
in
cltd
test
int3
stc
ret
mov
mov
faddl
cmp
push
lret
mov
lea
pop
mov
push
ficomps
popa
mov
dec
stc
push
pop
jbe
fdivrs
aam
adc
cmp
enter
out
push
pop
push
push
or
or
push
mov
adcl
subb
cmpsl
ret
dec
sahf
sub
adc
jmp
in
sbb
rcrl
stc
sti
repz
mov
fsubp
and
testb
adc
dec
dec
dec
or
dec
sub
jb
stc
cmp
test
push
jp
cmp
xor
loopne
add
sbb
mov
shl
enter
ja
sub
push
mov
jns
or
out
mov
sbb
sub
mov
hlt
call
push
fwait
dec
mov
xor
bound
or
push
movsl
jno
outsl
fwait
insl
in
mov
aam
lret
pop
push
insl
lds
icebp
cs
es
outsb
imul
push
jb
cltd
insl
in
bound
sbb
sub
jg
xchg
jmp
insb
repnz
xchg
sub
mov
jecxz
nop
icebp
add
cmp
in
into
mov
hlt
inc
mov
or
xorl
mov
mov
packsswb
push
cmp
xchg
jge
sbb
in
loop
bound
add
cltd
xchg
jecxz
add
jnp
popa
jbe
pop
adc
pop
lcall
lcall
cmp
movsb
out
daa
in
push
inc
fiaddl
mov
jae
or
cmpsb
push
scas
push
xchg
inc
mov
loop
aaa
pop
fiadds
xor
xchg
ja
sub
dec
lcall
sub
rcl
push
inc
mov
xchg
out
test
call
insb
jp
and
and
cwtl
adc
pop
sub
jg
sbb
les
ss
fisubs
ret
cmp
test
ja
push
xacquire
dec
gs
xchg
clc
dec
xchg
cli
jns
sbb
and
ret
or
mov
inc
shrl
or
imul
in
sub
push
mulb
aam
xchg
jmp
call
sbb
xchg
adc
fdivrs
ds
pop
scas
jecxz
xor
addr16
push
inc
xchg
mov
scas
sbb
fs
xchg
mov
test
inc
mov
add
push
sbb
popa
push
mov
loope
jl
aad
dec
in
ret
xor
xchg
push
or
pusha
mov
sbb
jle
enter
mov
insl
sub
pop
lret
or
xchg
sti
mov
lods
push
xlat
inc
sbb
lea
inc
cmc
out
aam
inc
lcall
sub
jb
shll
stos
fcomi
je
les
adc
push
imul
xor
jg
inc
ljmp
imul
leave
xor
push
fmull
lds
and
xchg
mulb
xlat
sbb
sahf
or
loope
push
fidivs
and
pop
fcoms
inc
dec
cs
inc
pushf
push
jbe
pop
test
mov
popf
bound
mul
lds
xchg
rcll
inc
cltd
mov
inc
add
xor
sub
sti
and
cwtl
rcll
mov
sub
leave
into
push
les
rorl
fs
loope
bound
jns
gs
sub
data16
mov
xchg
mov
cmp
mov
add
xor
insb
pop
movsb
outsl
push
lret
fwait
aas
cmpsb
and
push
mov
mov
jle
cltd
jns
mull
or
addl
mov
jg
or
mov
mov
dec
xor
xchg
sub
xor
jo
in
and
loop,pt
and
data16
lods
in
inc
jns
jns
adc
aad
add
aaa
cmp
fsin
sbb
and
aam
pop
call
stc
enter
pop
push
sbb
cmpl
out
cmp
mov
outsb
inc
inc
push
pop
test
arpl
scas
mov
ror
outsl
mov
minps
xlat
pop
push
fisttpll
xchg
jne,pt
sahf
pop
mov
push
orl
jg
mov
pop
xorb
mov
mov
cwtl
mov
enter
jnp
inc
daa
xorl
fisttpl
shrb
jno
xchg
fiaddl
push
pop
movsl
inc
mov
xchg
push
adc
and
jae
cwtl
fists
les
or
pop
in
mov
sbb
sbb
repz
xchg
lcall
ret
add
dec
das
scas
and
sbb
lods
add
in
push
or
faddl
push
les
pop
ret
in
dec
into
ficoms
and
test
lods
push
gs
cltd
ror
mov
push
outsl
sti
lcall
push
push
jecxz
dec
or
js
and
iret
xlat
fs
in
mov
lret
cmp
push
repnz
mov
mov
in
push
call
jnp
push
test
nop
insb
xchg
stos
addr16
inc
ljmp
sub
inc
mov
pop
dec
scas
jg
inc
in
mov
scas
sbb
sbb
and
and
and
ljmp
lds
and
xchg
sbb
out
dec
push
in
js
sahf
cmp
scas
xchg
sub
xor
mov
adc
push
fisubl
push
xor
movsl
gs
xor
cld
rcl
movb
inc
mov
xor
data16
and
or
cmp
mov
dec
xchg
sub
mov
push
int
jbe
test
xor
daa
movsl
or
cmp
pop
or
xor
and
lret
xor
adc
dec
adc
test
cmp
jno
sub
dec
pop
push
repnz
push
std
adc
into
sub
mov
cmp
mov
ljmp
divl
insl
xlat
sbb
sbb
imul
pop
mov
xchg
lds
cli
push
lcall
ret
or
mulb
and
sub
mov
or
sub
sub
in
mov
pop
aas
jnp
and
lea
lock
jle
xchg
lea
int3
sbb
xor
subl
push
gs
arpl
pop
fs
jecxz
arpl
mov
push
into
push
sub
cs
sub
dec
lret
std
loopne
mov
clc
pop
push
js
sub
pop
xchg
inc
pop
rcl
rcrl
xor
inc
aas
cld
adc
and
push
or
les
mov
mov
xchg
imul
sysret
adc
lods
in
inc
cmpsb
jne
mov
dec
mov
pop
push
jb
and
lock
aaa
hlt
dec
mov
mov
in
outsl
fs
mov
repz
push
fiadds
sbb
inc
adc
pop
test
fsubrs
jmp
or
mov
addr16
movsl
xor
jbe
cmp
pushl
jge
xor
das
xor
xor
dec
jno
repz
btc
rclb
emms
rorb
scas
outsl
and
cmpb
dec
inc
sbb
add
mov
push
dec
lcall
lahf
sbb
rorl
mov
jns
jge
fstpt
movsl
xchg
adc
xchg
scas
notb
inc
xor
mov
dec
jnp
sbb
sbb
test
daa
pop
adc
cmc
add
or
loopne
je
imul
repnz
push
daa
sub
inc
scas
cmp
sbb
das
call
push
dec
mov
inc
mov
ret
or
imul
mov
jmp
test
sub
pusha
xchg
rolb
fdivrs
lods
mov
xchg
ljmp
lret
mov
scas
out
test
loop
mov
or
xchg
sahf
ljmp
mov
or
rcrl
bound
pop
inc
or
loop
fwait
out
pushf
xchg
inc
or
shrl
out
aaa
stos
sub
ljmp
lea
xchg
adc
ret
call
sub
cmp
fmul
cmp
jno
jbe
movl
xchg
or
daa
push
mov
inc
add
sub
and
dec
aaa
mov
xchg
push
push
pop
in
icebp
clc
test
movsl
dec
rolb
les
inc
mov
xor
movsb
jno
sbb
in
push
inc
test
jle
cmp
fld
jns
movsb
adc
cmp
push
add
jno
or
or
mov
stos
loop
ret
fldenv
push
bound
jl
subl
imul
cmp
pop
mov
clc
mov
in
insl
dec
fcmovnb
rclb
leave
pop
sub
rcll
xchg
sbb
inc
jo
shr
sbb
fstps
mov
sub
adc
cmp
cmpsl
inc
and
cmpsb
dec
sbbl
imul
mov
mov
cmp
and
mov
imul
add
test
jae
mov
xor
in
jb
mov
xchg
scas
divb
or
pop
xchg
and
add
sbb
mov
sti
mov
add
inc
xchg
xchg
jae
cmp
arpl
sbb
xchg
cmp
push
sbb
push
aaa
aaa
cwtl
xchg
and
dec
out
lahf
mov
ljmp
xor
xlat
popa
push
sahf
pushf
xchg
mov
or
aas
sbb
fmulp
xchg
mov
in
jg,pt
in
or
push
and
inc
pop
jne
xchg
shlb
aam
je
pop
lahf
xor
insl
dec
jg
shll
jb
iret
cwtl
sbb
cmp
and
nop
lods
cmp
movsb
pop
and
mov
push
or
xlat
cmp
mov
rclb
and
dec
rcr
jle
jno
pop
in
or
mov
push
sub
leave
sbb
xchg
or
jno
push
jo
xchg
push
pop
inc
push
mov
sahf
cmp
mov
mov
jbe
imul
mov
or
aad
fimull
ja
add
pop
cltd
jp
daa
ljmp
test
fbld
cmpsb
and
negb
hlt
jl
add
mov
pop
jmp
sahf
cli
aam
insl
xor
shrl
jbe
push
jns
push
daa
and
add
daa
dec
iret
int3
mov
sbb
fwait
push
mov
call
scas
es
icebp
mov
pop
adc
into
jge
mov
jb
cmp
mov
enter
adc
idiv
xor
sbb
lret
ret
xor
sbb
sbb
lcall
jge
dec
xchg
out
fistpll
cmp
or
push
popf
add
int3
bound
pop
es
dec
mov
cmp
jl
add
cltd
aas
jno
fwait
dec
mov
push
push
jle
pop
jmp
push
in
cmp
int3
adc
jne
sub
push
iret
push
pop
add
int3
xor
inc
add
lret
or
lcall
insb
mov
mov
clc
mov
pop
data16
xchg
andps
imul
inc
jp
lahf
mov
pop
ss
and
mov
stos
inc
imul
imul
or
push
mov
pop
ret
nop
in
shl
sub
mov
jns
mov
lock
adc
es
mov
in
inc
push
xor
and
cmp
pop
in
adc
inc
aas
xchg
test
gs
in
sbbl
sub
push
inc
cmp
xlat
popf
push
mov
mov
sbb
mov
sbb
jns
out
or
cmpsb
sbb
xor
xor
sti
dec
stc
jecxz
out
into
movsb
in
pop
ficoml
xchg
mov
adc
hlt
movsl
pop
mov
jmp
adc
nop
shll
push
cmc
mov
imul
sub
pusha
aad
jbe
pushf
rcl
jge
leave
cli
mov
cmp
jl
mov
jecxz
xchg
push
xor
das
lret
mov
in
push
inc
push
jmp
mov
in
movsb
ja
gs
mov
fstpl
mov
out
and
int
sbb
cmp
sub
movsb
jnp
loope
rcl
jno
repnz
push
ljmp
mov
enter
inc
fildl
dec
fidivrs
out
call
jnp
int
lods
mov
in
gs
push
jecxz
sbb
sti
add
pusha
sbb
insb
dec
or
fwait
mov
adc
mov
dec
outsb
addr16
pop
fdiv
xor
ds
push
or
cmpsl
insb
pop
shl
arpl
out
and
jb
stos
add
cltd
psraw
sbb
jb
mov
aad
add
jns
dec
push
hlt
in
inc
movsb
jb
pop
mov
leave
lret
movsb
fs
inc
fstps
pop
fldt
hlt
sbb
nop
pop
imul
test
ja
cmpsb
je
fwait
xor
es
outsl
push
dec
mov
sbb
sbb
call
es
test
outsb
cmpsb
ljmp
push
sbb
sub
dec
imul
cwtl
sub
sbb
sti
data16
pop
notl
mov
cs
jl
sahf
inc
jecxz
xor
xor
pop
jo
mov
bnd
outsl
movsl
testb
insb
xor
ds
xchg
jne
sub
mov
cmp
or
jmp
sub
jge
xor
dec
mov
cmp
xor
adc
dec
or
and
fstpt
icebp
incl
push
aas
xor
dec
arpl
les
jmpw
xchg
jne
push
adc
pushf
jle
or
dec
xor
jl
stos
jo
sub
xchg
enter
mov
test
mov
and
cld
cltd
jg
inc
xor
call
pushl
ja
cli
das
outsl
lahf
mov
push
insl
mov
xchg
js
rclb
mov
pop
sbb
xchg
mov
sarl
dec
xor
call
pop
cs
or
call
add
jle
sub
xor
rclb
push
mov
js
sqrtps
xor
dec
and
or
ja
lods
cli
lret
jae
fidivrs
nop
stos
mov
out
xor
out
dec
xor
mov
inc
push
sub
mov
mov
test
jno
stos
call
repnz
xchg
xor
pop
lret
mov
mov
xchg
sar
scas
in
lret
push
mov
cmp
push
notl
mov
mov
stos
lcall
adc
xor
out
inc
mov
pusha
dec
xlat
ljmp
insb
jl
pop
cld
incb
jae
add
outsb
adc
stos
mov
sub
iret
outsl
xchg
adc
pop
mov
sbb
imul
pop
mov
push
dec
cli
and
jmp
jge
adc
leave
and
dec
lods
int3
test
or
fs
mov
jo
fldenv
stc
stc
js
es
repz
shrb
int3
lods
pop
lds
test
push
ja
dec
mov
div
push
fcomp
es
orb
loope
mov
repnz
andnps
and
inc
push
imul
and
or
mov
arpl
lret
and
push
fs
sub
data16
xchg
xchg
iret
in
cld
outsb
mov
les
idivl
lods
jecxz
pusha
and
adc
or
movsl
int
and
inc
xchg
xor
xchg
cmp
mov
pusha
adc
mov
cltd
push
aas
bound
mov
test
dec
push
sbb
mov
xchg
cli
jae
iret
jbe
mov
adc
mov
mov
inc
loopne,pt
and
imul
imul
xor
scas
push
pop
rcr
fcmove
or
popa
dec
adc
sub
sbb
mov
std
js
sbbl
mov
adc
cmpsl
adc
popf
arpl
loope
addr16
arpl
int3
mov
int
sub
out
cmp
inc
lahf
xor
std
test
in
pushf
push
fwait
xor
negb
hlt
aad
and
arpl
xchg
dec
loopne
add
out
fadd
cld
stos
loope
jmp
jae
cld
into
shr
mov
leave
cwtl
ret
jmp
push
fcmovne
stos
pushf
xor
sti
mov
imul
popf
xchg
mov
cmp
fsubs
imull
leave
pop
fnstsw
in
not
fldenv
aaa
mov
and
cmc
inc
cmp
mov
pop
aaa
xchg
jl
adc
repz
sub
mov
pushf
push
les
push
sub
lret
in
cwtl
lods
fs
out
ret
lods
cmp
cmp
jle
xlat
sbb
in
subl
sub
push
cmpsl
das
test
testb
hlt
pop
jb
mov
mov
ljmp
cmp
out
jo,pt
shl
mov
scas
into
mov
fs
cs
pushf
lcall
int
push
cli
adc
push
outsb
jne
push
mov
out
mov
inc
push
sbb
int3
add
xchg
cmpsl
jae
and
jb
mov
mov
inc
ret
stos
lods
incb
dec
dec
push
test
imul
loop
jae
fcomps
int
dec
xchg
push
lret
cmp
push
loop
repz
sahf
add
xchg
and
fxch
mov
and
js
jae
out
push
mov
into
pop
outsl
mov
mov
popa
in
inc
sbb
push
in
sbb
stc
xchg
xchg
in
mov
test
lcall
and
mov
dec
sbb
es
fdivl
jg
sbbb
push
xchg
nop
sbb
lods
push
push
xchg
mov
xchg
inc
les
pop
insl
lret
orb
adc
ja
mov
int3
fcoml
mov
push
inc
ds
xor
mov
outsb
add
flds
insb
push
adc
mov
and
dec
out
arpl
sahf
mov
cmpsb
add
mov
sub
push
pop
jecxz
jle
lods
inc
fcompl
fsubrs
arpl
inc
js
fs
rorl
aas
xor
stos
or
xchg
aam
scas
inc
cmp
inc
scas
mov
fsubrl
cld
jge
rol
mov
xlat
xor
lds
jmp
lea
xor
sub
mov
notl
pop
jae
mov
pop
gs
or
leave
aad
mov
test
mov
ss
fadd
daa
cmpsl
lock
shrb
dec
dec
add
gs
jae
xor
es
mov
push
ljmp
imul
cwtl
clc
in
dec
fwait
pushf
jo
insl
test
jg
notb
fucomp
out
cs
rorb
xchg
sbb
sub
fisttps
or
push
add
xlat
in
lods
cmp
sub
sbb
outsb
cmc
idivb
andb
xchg
stos
insb
inc
sbb
inc
adc
pop
movsl
push
adc
mov
test
or
dec
push
popf
lahf
dec
std
dec
cmp
sbb
lods
insl
loopne
mov
adc
data16
cmpsb
push
and
add
mov
xchg
push
xchg
or
shrb
mov
inc
roll
or
les
lea
pop
add
aaa
int
ljmp
sahf
xchg
xor
cmp
mov
fdivs
mov
pop
sbb
notb
out
cmp
imul
and
mov
imull
aas
in
jnp
icebp
pop
sub
pop
xlat
aaa
outsl
repz
push
aas
and
push
popa
push
andl
cmp
sub
aas
sbb
stc
in
imul
adc
in
pop
jmp
aaa
lods
inc
or
dec
push
int3
dec
pop
push
pop
jecxz
or
xchg
mov
push
aad
push
inc
add
sbb
loop
jnp
in
scas
adc
cmp
xchg
jmp
shll
jp
ret
sub
mov
mov
inc
cli
jp
outsb
daa
outsl
aam
enter
sti
xchg
aas
icebp
imul
push
jecxz
mov
fisttpll
cmp
sbb
pop
into
out
jae
jno
lock
es
jo
push
ud0
mov
adc
lods
push
adc
movsb
mov
xchg
lods
inc
stos
inc
pushf
xor
xchg
daa
push
sbb
push
aas
daa
scas
sbb
push
pop
mov
sub
inc
mov
adc
stc
xchg
ja
pop
lcall
xor
mov
loope
dec
out
hlt
aam
push
daa
dec
cmp
cmpsl
mov
ss
icebp
lret
pop
lret
pop
imul
push
xor
jle
fnsave
jo
icebp
in
nop
push
stc
mov
repz
aas
lahf
cmpsb
movsb
idivl
sub
add
dec
scas
xor
lret
push
xchg
dec
inc
fmul
sbb
and
sbb
cmp
stc
insl
inc
fs
mov
ficoms
test
test
sbb
push
sbb
mov
and
mov
push
dec
scas
jp
xor
cmpsl
das
add
mov
lock
or
out
jo
insb
das
pushf
ror
jno
jmp
mov
ljmp
push
xor
dec
js
cmp
not
xlat
mov
sbb
into
in
pop
mov
ficompl
lock
push
cmp
rdpmc
xchg
cmp
out
inc
xchg
xor
aas
sub
arpl
adc
mov
hlt
jbe
popf
or
int
popf
loopne
aas
and
shrb
adc
jae
sbb
jne
adc
in
add
stc
ja
sbb
cmc
stos
clc
sbb
and
mov
jb
incl
cmpsb
mov
add
pop
xchg
movsl
in
mov
out
push
push
scas
mov
fimuls
or
popf
add
mov
add
xor
adc
lcall
lcall
movsl
fldenv
push
xlat
and
in
inc
xor
sbb
rcll
mov
stos
inc
icebp
and
mov
fmul
insb
mov
sub
mov
mov
aam
sub
mov
imul
pop
leave
jo
cmp
push
push
or
sahf
cli
push
push
sbb
lahf
and
loopne
in
hlt
add
enter
mov
enter
jae
sbb
rcrb
jb
mov
cmp
aam
push
inc
loop
lahf
jmp
pop
jecxz
pop
scas
adc
nop
repz
mov
jbe
cwtl
pop
add
inc
push
pop
mov
cld
or
stos
rorb
loope
xchg
jg
ja
pop
iret
fs
ljmp
nop
outsb
and
das
xlat
loopne
inc
sub
outsl
add
mov
xchg
std
ficompl
hlt
gs
or
xchg
inc
xchg
push
ror
fsub
les
sbb
push
mov
xchg
jl
in
scas
sbb
mov
xor
jp
mov
xchg
or
mov
scas
sahf
xor
cmpsl
cmp
or
pop
dec
mov
inc
fstpl
pop
jbe
rol
pmuludq
adc
jne,pt
adc
ss
stos
movsl
cmp
lret
fwait
rolb
jge
dec
repz
lds
mov
inc
jle
movsb
negb
mov
popa
mov
adc
fs
addr16
push
out
out
inc
mov
arpl
call
pop
notb
aam
jae
clc
add
pop
call
ds
lret
push
cwtl
inc
mov
into
adc
hlt
clc
sub
jecxz
mov
fstps
test
jmp
pop
adc
lock
in
and
xor
hlt
or
push
shrb
push
jge
mov
and
push
out
fs
dec
sub
jg
imulb
scas
or
pushf
pop
loopne
movsl
lcall
add
lock
push
fstpt
iret
dec
push
icebp
xchg
jle
xchg
repz
addr16
push
xchg
mov
popl
dec
fwait
inc
out
xchg
jg
or
or
lea
ret
cmp
ficoml
push
xor
stos
gs
fldt
es
mov
aas
jo
stc
jge
jbe
into
les
adc
loopne
pop
shll
lret
fdivl
inc
xchg
cli
clc
mov
mov
cmp
inc
pushf
rorb
jbe
or
add
aad
inc
lcall
mov
add
mov
mov
or
fdivrl
jae
xchg
or
dec
pop
push
jge
inc
jg
cmp
xchg
notl
or
xchg
stos
popa
loop
xchg
out
pop
sbb
adc
inc
notl
mov
push
dec
xchg
jnp
and
push
mov
leave
out
cmpsl
cmp
aas
inc
dec
pop
mov
scas
sahf
pushf
push
ret
cltd
mov
scas
into
mov
popf
sbb
faddl
fwait
ja
scas
add
loop
inc
jmp
xchg
mov
adc
rcll
pop
adc
ror
mov
cmp
sbb
dec
mov
xchg
test
ret
test
icebp
dec
mov
cli
cmp
hlt
pop
and
push
mov
shlb
popf
push
out
outsl
jl
ja
add
outsl
xor
inc
mov
push
xchg
xor
fs
add
mov
dec
push
jne
pop
inc
mov
mov
push
push
sub
jno
mov
and
dec
ficompl
std
pop
fists
inc
xor
pushf
fsubr
or
dec
sub
pop
lock
jnp
pop
push
push
mov
or
and
outsb
arpl
pop
mov
movsl
jmp
push
jo
sub
notl
fcompl
mov
pop
xchg
sbbl
call
jnp
dec
ret
enter
std
pop
out
cmp
mov
xor
stos
inc
test
or
fstpt
ja
loop
dec
pop
jle
xchg
xchg
pop
incb
das
sbb
bound
je
stos
inc
pop
int3
pop
shr
mov
dec
daa
inc
and
and
test
jmp
xor
pop
shl
xchg
lods
cmp
insb
jecxz
outsb
jno
hlt
je
mov
or
out
imul
in
mov
add
mov
rolb
std
sahf
hlt
and
add
pop
push
push
movsl
push
jge
jns
fmull
arpl
loopne
rolb
xor
xlat
aam
dec
fwait
inc
dec
xchg
lret
push
movsb
inc
push
dec
ret
push
sub
insb
adc
and
rolb
addr16
cmp
repnz
push
xchg
mov
mov
add
roll
or
ljmp
push
xor
or
scas
hlt
pop
out
shll
js
inc
cmp
inc
lods
or
mov
jle
nop
or
jb
inc
push
and
xchg
movsb
hlt
and
push
inc
jmp
insl
xchg
and
movsl
pop
adc
jge
ds
push
jo
les
inc
lret
mov
jle
push
scas
stc
xor
lret
xchg
cld
xor
fld
mov
xor
mov
dec
adc
mov
addr16
mov
call
sarb
mov
pop
dec
fs
adc
add
push
aaa
movsl
pop
push
je
xlat
push
ret
rcr
inc
pop
xchg
ds
pop
test
push
jns
lea
jbe
out
fcomps
xor
push
add
sub
roll
addr16
and
xor
in
cmp
pop
cmp
adc
dec
mov
lods
sub
inc
imul
test
roll
sbb
mov
test
shll
jnp
shrb
jae
jno
leave
inc
add
mov
mov
bound
and
ss
cmp
cwtl
sbb
mov
loopne
cmp
sbbl
movsb
cmpsb
push
mov
adc
add
jp
test
sbbb
shll
mov
daa
sub
pop
sti
dec
popf
jnp
adc
or
jne
pop
cmp
stc
lahf
and
repz
mov
push
sar
popf
aas
mov
fdiv
testb
xor
repnz
adc
cmpsb
int3
and
in
lahf
cmpsl
leave
clc
lock
sbb
inc
popf
adc
jg
push
test
xchg
dec
roll
pop
icebp
add
xchg
mov
notb
jmp
out
stos
add
insb
add
lods
loopne
inc
nop
xchg
call
popa
mov
jmp
jns
xchg
hlt
ret
mov
cmpsb
pop
pop
jg
daa
rclb
push
bnd
xlat
mov
jns
ljmp
mov
push
lahf
jnp
divb
pop
fsubl
lods
inc
pop
inc
jae
pushf
inc
xor
lret
scas
pop
cmc
dec
mov
cmpsb
xchg
aam
push
and
pop
push
data16
ret
add
sub
je
inc
ja
and
sbb
pop
ret
add
cwtl
cmpsl
outsl
push
push
mov
inc
xchg
inc
test
or
fwait
inc
jbe
adc
stc
fs
cmp
jns
pop
mov
mov
pop
jae
cmp
icebp
repnz
icebp
jp
fadds
in
test
dec
pop
shlb
mov
pop
in
test
adc
xor
movzbl
sbb
test
dec
pushf
insl
pop
dec
mov
popa
xchg
jmp
mov
xor
and
push
pushf
adc
loopne
jecxz
sub
add
jle
mov
out
xchg
ljmp
push
loopne
push
loope
test
mov
sub
js
cmp
ja
fisttpl
imul
inc
inc
cmpsb
out
repz
adc
in
cld
inc
imul
xor
sub
nop
ja
xchg
imul
lods
rorb
cwtl
fnstsw
dec
popa
int
xor
pusha
cmovb
add
repz
shll
ret
inc
cs
cli
inc
xor
and
scas
outsl
scas
outsl
sub
subl
pushf
outsl
adc
push
and
pop
jg
adc
into
adc
imul
mov
in
cld
inc
cmc
in
jbe
xchg
inc
mov
xor
int3
jge
stos
pushf
dec
lret
jecxz
and
dec
pop
xchg
mov
xor
dec
jge
outsb
sub
adc
fidivrl
es
cmc
shr
or
aam
loope
test
ss
inc
repz
pop
gs
or
ret
or
in
xor
adc
or
pop
stos
test
iret
out
xor
adc
mov
inc
cmp
and
add
and
or
push
push
fsts
push
add
dec
ljmp
je
pop
stos
es
fnsave
add
bound
jp
in
jo
mov
ret
call
repz
mull
mov
xor
inc
pushf
jns
xor
adcl
daa
js
int
jne
sub
adc
add
popf
sub
jne
fidivs
cmp
inc
mov
or
pop
and
cmp
jp
mov
adc
or
aad
xchg
incb
sahf
fcomip
ja
andl
pop
arpl
loopne
out
and
in
add
push
lcall
dec
adc
pop
push
ss
push
ljmp
xchg
xor
outsw
in
xlat
test
insb
clc
jmp
mov
push
xchg
or
test
inc
ficomps
or
in
loope
mov
and
pop
filds
xor
inc
mov
sub
mov
in
pop
lock
xchg
xchg
adc
in
cs
insl
xor
mov
repz
push
sti
mov
call
and
jno
lcall
stos
jmp
push
shll
mov
dec
lcall
xchg
call
idivl
adc
popf
icebp
mov
ljmp
add
out
sti
subb
push
ljmp
cmpsb
add
in
cmp
adc
jl
lret
shll
sub
lea
js
add
aaa
xchg
cwtl
imul
test
addr16
pop
dec
mov
int3
dec
pop
mov
adc
pop
push
xlat
pop
les
push
pop
mov
cmp
mov
pop
xor
push
mov
sub
mov
cwtl
scas
jl
xchg
aaa
inc
mov
fnstcw
addr16
mov
sbb
mov
jmp
jo
stos
icebp
rorb
cltd
mov
sti
mov
faddl
icebp
lahf
pop
insl
js
nop
xchg
push
and
mov
inc
dec
mov
add
out
inc
xchg
leave
xor
and
add
fisttpl
fadds
repnz
xlat
std
dec
xor
mov
xchg
xchg
test
mov
pop
add
xor
stos
mov
push
in
mov
bound
mov
mov
jae
add
rcr
aaa
adc
pop
or
cmpsl
jns
cmp
sub
rclb
pop
xchg
sbb
mov
sbbl
inc
mov
sub
or
push
mov
data16
dec
adc
leave
jle
iret
dec
ret
arpl
aas
lods
cli
jo
jle
loope
adc
popa
loopne
mov
lods
push
fiadds
dec
push
cli
icebp
lcall
pop
and
push
movb
dec
das
push
cli
push
xchg
popf
adc
stc
cmp
int
lods
popf
xchg
mov
fidivl
fstpt
fstpl
inc
or
pop
pusha
out
cmp
cmp
jecxz
cmc
cltd
push
iret
jp
pminub
jo
sarb
sbb
xor
out
jmp
xchg
mov
loopne
in
push
adc
cmp
ds
pop
inc
push
push
inc
mov
in
incl
jnp
xor
aam
push
jge
xchg
or
movsb
imul
movsb
xchg
push
adc
sbbb
mov
outsb
daa
and
xor
and
mov
shlb
mov
das
aaa
xchg
aam
xchg
push
mov
lods
std
mov
in
fldenv
and
out
push
fistpll
push
or
and
mov
adc
adc
xchg
outsb
inc
cmp
mov
dec
fsubrs
ljmp
jg
mov
fisttpll
xchg
adc
sbb
cmp
jecxz
fistps
nop
mov
and
test
bound
mov
fcom
mov
je
dec
sub
xor
inc
dec
push
add
faddl
lret
xor
lock
fsubrl
lret
shrb
orl
js
pop
mov
ljmp
cs
test
daa
jmp
gs
hlt
imul
push
fcom
das
push
fbld
jns
adc
dec
mov
in
lds
dec
aaa
jmp
out
dec
jno
fld1
daa
push
in
jnp
mov
adc
xor
inc
lods
inc
mov
pop
or
jbe
pop
mov
mov
insl
add
mov
in
fdivrs
xlat
cmp
jns
jnp
mov
adc
inc
inc
je
xor
and
and
mov
mov
add
test
in
fcom
out
jp
mov
xor
push
repnz
sbb
fbstp
mov
sub
rcl
mov
mov
imul
pop
mov
xor
adc
addr16
icebp
arpl
mov
dec
aaa
inc
mov
add
rcrl
jg
das
insl
add
inc
jo
cmovb
push
jne
push
dec
rorl
dec
fwait
out
shlb
push
mov
pop
or
fdivrp
fcompp
popa
in
inc
pop
pusha
cmpsl
push
dec
sub
sub
pop
and
repz
xchg
movsw
cmpsb
push
mov
fbstp
add
test
mov
pusha
gs
cmp
pop
sbb
pop
push
repnz
cmp
and
fisttpl
inc
fstps
scas
shlb
popf
cmpsb
aad
cmc
fisubl
test
cmp
xchg
pop
adc
mov
out
mov
nop
sbb
movsb
pop
or
push
inc
stos
push
dec
xchg
adc
pop
dec
pop
lock
add
push
push
loopne
inc
push
subl
mov
jae
or
in
addr16
shlb
pop
ficoml
mov
jb
inc
mov
loope
sbb
push
lods
das
lea
pop
lods
add
fninit
pop
and
mov
mov
xchg
lods
test
rclb
inc
aam
data16
push
xor
and
xchg
or
data16
inc
andl
pop
mov
testl
std
xchg
loope
rcrb
scas
and
mov
imul
add
shll
test
lods
mov
dec
jns
mov
mov
std
fstp
or
out
mov
lods
in
shrl
movsl
loop
out
in
mov
cmc
dec
jp
nop
mov
cmpsb
add
add
mov
scas
ds
push
ljmp
sahf
int3
push
adc
arpl
stos
lret
fcomi
sahf
in
pop
scas
js
loop
sahf
cmpsl
adc
movsl
or
movsb
out
data16
xor
jo
dec
sbb
jp
rcll
adc
lock
pop
loopne
cmc
jbe
sbb
push
sbb
mov
mov
mov
push
fidivs
push
in
fisubs
insb
jnp
cmpsb
xor
rol
lea
add
xchg
jge
test
mov
testl
adc
repnz
jne
shll
js
stos
sbb
aad
pusha
in
push
mov
call
push
mov
mov
xchg
in
dec
cmp
xchg
pop
sbb
mov
inc
shlb
mov
aam
mov
dec
fwait
test
cmp
sahf
dec
sbb
hlt
insl
loopne
gs
mov
jne
sub
data16
nop
mov
loope
loope
pop
mov
stos
lahf
mov
and
movsb
test
mov
jo
push
pusha
fcoml
cmp
sbb
jnp
and
mov
xor
mov
dec
inc
roll
sub
or
adc
iret
fbld
cs
je
mov
call
inc
xchg
adc
in
js
stc
jmp
jecxz
xor
jge
lods
out
ret
aad
insb
mov
add
mov
pop
scas
lea
cmpsb
jbe
movsl
push
or
or
mov
cmpl
push
mov
xchg
lock
and
push
stos
cmpsb
icebp
inc
xchg
mov
addr16
adc
aad
int3
push
jle
std
push
movl
rolb
mov
subl
and
insl
inc
es
daa
jp
inc
mov
mov
mov
sbb
notl
ret
ret
aam
adc
lock
push
sub
aaa
out
loop
and
sbb
stos
mov
mov
push
inc
lcall
out
fldt
stos
push
cmp
repnz
pop
repz
notb
inc
sbb
insl
adc
roll
inc
clc
xor
cs
test
lods
pop
or
pop
xchg
adc
jmp
sub
lcall
fisubrs
loope
jge
jecxz
test
ja
loop
addr16
jge
or
xor
out
and
mov
sub
cwtl
movsb
inc
jo
daa
addr16
lret
in
idivb
pop
lret
push
ljmp
xchg
jmp
int
push
mov
hlt
popf
sbb
mov
xchg
pop
sub
cmpsl
jmp
xchg
mov
push
ret
mov
jmp
daa
add
adc
scas
mov
xor
adc
sub
jo
clc
je
lea
lret
dec
sbb
std
shrb
leave
in
dec
fwait
dec
arpl
add
cmp
xor
push
sub
sbb
mov
and
ja
lret
sub
cmp
mov
cmpsb
mov
fwait
test
cmpb
ficomps
cmpsl
mov
cmp
push
cmpsb
jp
xchg
mov
cmp
push
aad
xchg
pop
push
mov
inc
mov
pusha
ret
out
jne
adc
jle
pop
adc
push
mov
jecxz
dec
jns
mov
inc
dec
fbstp
dec
aam
inc
std
movsl
gs
pusha
or
mov
xor
push
shrb
mov
xor
adc
or
fidivrl
or
mov
lret
addb
cmpsb
arpl
jbe
mov
pop
test
sub
test
ret
adc
xor
outsl
out
jnp
shl
pop
aas
repz
sub
cmpsl
shll
shll
push
les
movl
cmpsb
ficomps
shrl
pop
mov
hlt
xchg
out
sahf
jno
sub
dec
sub
cmp
push
dec
add
lds
push
cwtl
jae
shrb
mov
insb
pusha
xor
lahf
stc
notl
imul
or
out
xor
ljmp
imul
sbb
loope
adcl
mov
push
mov
push
mov
inc
int
imul
mov
xchg
xor
mov
imul
jmp
movsb
jmp
sti
loope
jne
lcall
sub
push
stc
jne
pusha
sub
aad
jno
repnz
and
inc
jo
repz
sbb
cltd
addr16
sbb
arpl
mov
inc
sar
pushf
imul
popf
lds
mov
stc
js
ret
add
cmpsb
lahf
mov
outsl
mov
dec
jns
dec
dec
subl
dec
mov
fdivl
push
pop
fidivrl
std
adc
cmp
pushf
cltd
add
outsl
adc
pop
stc
stos
cwtd
mov
xchg
jge
es
pop
mov
lahf
test
pop
cmp
mov
mov
dec
pop
jle
fsts
or
in
inc
add
pop
sub
cmp
mov
leave
subl
dec
stos
addl
adc
rolb
fwait
sbb
popa
lods
fsts
cs
int
ds
jb
pop
push
pop
lods
not
jmp
inc
push
nop
int
sub
or
es
adc
xlat
out
loope
push
and
add
xor
mov
jg
daa
sub
frstor
lods
xchg
and
nop
xor
div
or
cmp
cmp
fldenv
loope
push
mov
mulb
mov
lods
mov
shr
andb
mov
xchg
inc
jge
and
dec
pushf
cmc
stos
hlt
mov
pop
shll
mov
xchg
imul
stc
rcrb
cmp
cmp
sub
xchg
outsb
mov
in
and
sub
xchg
add
sbb
or
jmp
icebp
rcll
mov
mov
or
ss
pop
pop
in
fistpll
mov
push
inc
xchg
fnsave
push
xorb
rolb
das
dec
rcll
mov
ljmp
mov
movsl
mov
fildll
cmc
and
stos
jmp
lahf
jle
movsl
cmp
daa
xchg
sub
mov
stos
mov
or
mov
call
inc
mov
dec
dec
add
mov
loope
lret
push
sub
stos
in
inc
pop
cmp
in
test
xor
xchg
pop
jnp
xchg
cmp
test
outsb
sti
and
adc
push
xor
mov
inc
daa
andps
call
push
jns
out
mov
push
add
inc
call
dec
inc
test
push
fs
bound
jne
sbb
push
bound
xor
lods
aad
ficompl
sbbl
lret
fcomps
inc
data16
test
leave
push
jns
int
int
lds
icebp
jle
push
int3
mov
adc
enter
int
call
dec
js
mov
xor
stc
enter
cltd
aam
xchg
iret
in
out
stos
inc
push
xor
push
adc
mov
cld
into
lods
cmp
add
ja
out
jne
mov
fidivs
mov
push
dec
repz
inc
mov
adc
sahf
jb
mov
jge
cmp
cltd
jns
call
daa
sbb
ss
mov
out
in
into
shll
xchg
mov
sub
pop
push
xor
icebp
movsb
pop
xchg
aad
or
jecxz
xchg
stos
out
imul
jg
adc
xor
mov
loop
lock
xor
lret
roll
push
testb
repz
test
xchg
rcrb
pop
dec
lock
stc
cs
mov
mov
xchg
or
xor
insl
orb
mov
mov
cs
adc
cmp
mov
das
daa
push
and
sub
mov
in
mov
inc
test
les
adc
mov
popf
add
mov
or
insl
push
xchg
adc
scas
mull
rclb
lock
add
sbb
sti
push
scas
pop
cwtl
icebp
dec
cmp
mov
addr16
xor
fdivs
or
fistps
sub
xor
mov
sbb
mov
imul
sub
test
sti
xchg
xchg
movsb
jbe
sub
xchg
aam
mov
imul
stos
mov
shrl
jo
popa
fidivs
stos
je
mov
es
jg,pt
and
icebp
mov
hlt
scas
or
mov
fidivl
out
push
int3
pop
or
push
push
inc
xor
jmp
sub
out
inc
lods
jg
mov
jbe
sbb
lahf
mov
adc
inc
mov
mov
jge
cmp
lods
pop
push
jmp
mov
cld
jnp
add
cmp
mov
cmp
lcall
pushf
js
arpl
and
stos
push
jbe
add
xlat
mov
mov
push
out
mov
or
push
jge
nop
cmp
xchg
icebp
adc
add
pushf
fistl
shrl
cmc
dec
stc
mov
or
scas
jae
xor
adc
aam
push
fldt
nop
xor
stos
pusha
leave
dec
lock
jae
outsl
and
adc
push
mov
aaa
pusha
fisttps
sbb
dec
xchg
mov
repz
std
mov
push
ret
cmp
sahf
dec
leave
lcall
mov
inc
lret
mov
sti
call
mov
add
push
mov
popa
das
push
stos
frstor
rcll
out
int
outsb
push
subl
xor
add
fisubs
push
inc
add
or
xchg
adc
rolb
add
fcmovnbe
jnp
cmp
movsl
cltd
mov
test
aam
popa
scas
adc
push
sbb
push
rcrl
enter
lea
sahf
sub
jnp
and
sbb
lret
in
or
xor
shll
pop
push
fs
out
shll
mov
inc
scas
cs
jge
clc
mov
out
dec
jle
es
jae
sub
out
mov
nop
cmp
orb
ja
cmpsl
insl
inc
lret
mov
imul
inc
dec
xor
xor
xor
jp
mov
jle
cltd
fiadds
dec
push
push
and
sub
cmp
mov
addr16
and
push
sub
lcall
xchg
and
ficoml
lahf
insl
cmp
xor
cmc
push
ds
lock
out
test
pop
adc
adc
cltd
mov
xchg
xorl
inc
cmp
test
sahf
test
push
cs
jns
or
sbb
mov
or
mov
test
fildll
insb
repz
add
and
fisubs
cmp
mov
pop
lahf
mov
loop
fwait
xor
imul
dec
fstps
add
pushf
dec
jns
scas
mov
sarl
loope
aad
les
mov
mov
mov
push
xor
sbb
push
adc
sbb
mov
cmp
loop
lahf
xor
push
cmp
ljmp
sti
cmpl
lcall
getsec
and
fnstsw
and
pop
jmp
sub
jp
xchg
cmp
test
bound
pop
es
xlat
jmp
push
inc
lock
dec
jne
movsb
hlt
icebp
out
mov
lds
mov
cltd
mov
fildl
and
sbb
je
aam
xchg
roll
rep
dec
inc
je
andl
sbb
cld
or
and
repnz
ret
jb
mov
addl
lods
push
xor
repz
pop
adc
sub
fsubs
divb
xchg
sti
sarb
cmp
xchg
es
mov
inc
sti
pop
lcall
mov
xchg
mov
icebp
pop
imull
sbb
and
inc
sub
dec
gs
lods
fsts
dec
popa
cmc
or
pop
int
jge
and
fistpl
popf
mov
cmpsl
push
inc
dec
mov
pop
push
cld
push
pushf
test
adc
sbb
or
cmp
bound
dec
xor
push
cmp
mov
xchg
inc
rcr
mov
pop
push
imul
mov
stc
popa
ret
das
and
je
mov
movb
clc
movsb
into
inc
cmp
inc
das
mov
and
jp
ljmp
sbb
outsl
mov
cmp
stos
or
and
icebp
clc
pop
int3
stos
lea
mov
jb
sub
xor
jns
push
into
lcall
hlt
adc
and
add
push
int3
xchg
jl
pop
sbb
inc
pusha
xor
jb
lcall
pop
shr
mov
and
push
sbb
xorb
aas
push
jns
add
mov
jbe
stos
int3
inc
jnp
cmp
shll
out
push
lahf
jo
aad
xchg
int3
dec
scas
iret
int
les
ret
push
add
je
loopne
mov
bnd
and
pop
add
push
stos
mov
jmp
nop
or
test
xor
int3
jecxz
inc
xchg
scas
dec
ret
stos
rcrl
adc
and
adc
mov
icebp
and
movsl
sbb
jae
dec
insl
xor
cld
push
xchg
aad
popl
int3
mov
dec
es
int3
cmova
pop
cmp
mov
mov
repnz
test
mov
movsl
outsb
push
movsb
rorl
jns
cmp
push
fstps
add
movsl
sbb
leave
cld
push
or
or
and
mov
push
xor
enter
ret
jbe
jnp
xchg
and
sub
add
inc
cmp
int3
lret
xchg
in
testb
or
mov
lret
pop
and
rcll
lahf
and
call
inc
ret
pop
mov
xchg
imul
shrl
ja
jo
sub
loope
cmp
les
jl
das
pop
fwait
push
mov
inc
test
add
add
add
push
or
pop
xchg
bound
sub
imull
dec
push
lock
ja
repnz
push
aam
in
int3
push
pushf
fwait
or
or
int
fistpll
pushf
sbb
cmp
push
adc
and
push
std
pusha
dec
test
pop
sbb
imul
lret
shl
pop
seto
nop
shrl
lea
test
cmpsb
mov
fs
add
dec
jmp
push
sbb
push
shrl
jbe
inc
and
out
jb
xor
adcl
xlat
cmp
pop
xor
lods
sbb
dec
stos
ret
inc
test
push
aam
dec
mov
lea
pop
cmp
adc
push
fsubs
pop
cmc
outsl
mov
lock
jae
rcll
jb
adc
cltd
mov
cmp
push
fnstsw
push
shlb
pop
les
push
fs
adc
mov
jecxz
sub
jmp
jecxz
pusha
ss
je
icebp
in
sub
dec
dec
mov
adc
xchg
pushf
or
fs
fbld
aad
push
dec
stc
fmuls
mov
jle
fwait
outsb
test
cwtl
push
adc
testl
movsl
and
dec
mov
jl
adc
cs
sub
movsb
inc
jns
iret
adc
outsb
mov
lods
sub
scas
sti
adc
jmp
push
andb
jmp
xchg
stos
jmp
mov
jp
mov
cmpsl
dec
clc
outsl
lret
or
jae
pop
ss
movsl
insb
jb
dec
add
mov
cmpsb
test
pop
push
pop
pop
xor
rcll
mov
mov
clc
pop
adc
out
push
sub
adc
and
jp
addr16
inc
nop
pop
out
xlat
cli
or
inc
or
movsl
mov
jl
jo
ja
rcr
add
inc
bound
push
xor
xchg
mov
in
sbb
xor
xor
fwait
rolb
push
call
jno
xchg
pusha
arpl
or
cltd
mov
push
popf
or
jmp
pop
cmp
sbb
adc
push
xlat
into
lock
fcomps
jno
cs
aad
mov
cmc
xchg
pop
xor
or
cmp
les
icebp
dec
or
xchg
pop
or
aam
mov
aaa
repz
mov
ret
in
cmp
mov
dec
inc
cmp
dec
xchg
mov
mov
jne
jmp
in
sub
adcb
fstl
mov
lods
daa
dec
rcrb
jne
les
xchg
popa
in
mov
rorl
inc
xor
xchg
jge
push
add
shrl
popf
sahf
out
xchg
int3
jp
in
insl
mov
cwtl
hlt
xchg
inc
shrl
xor
mov
jb
sbb
jmp
lds
lahf
fists
xlat
shrb
aad
xchg
xor
adc
repnz
mov
je
in
stos
pop
sbb
xlat
aaa
out
dec
fsts
pop
cltd
mov
adc
pop
mov
push
out
push
faddl
dec
xchg
int3
jmp
add
mov
pop
pushf
data16
xchg
lcall
ds
shl
popl
mov
lds
jnp
jae
ds
lret
sub
sarb
lcall
dec
arpl
xor
leave
repnz
pop
push
xor
daa
imul
or
inc
mov
mov
insb
jo
inc
frstor
xor
xchg
add
or
jae
das
xor
popa
mov
lods
push
loop
xchg
xchg
xor
xchg
jmp
cmp
dec
in
jno
inc
movsl
jp
xchg
cmp
xor
cmp
pop
mov
jle
jne
ds
mov
and
pop
lcall
cld
test
test
imul
out
mov
stc
mov
add
call
cli
jmp
popl
mov
or
mov
call
push
dec
or
push
stos
xchg
icebp
sub
insl
push
ljmp
clc
cmp
pop
imul
xor
push
add
dec
daa
test
int3
add
push
xor
out
lea
jbe
or
dec
call
loope
aas
cmp
stos
lret
shlb
fldenv
clc
lret
test
stos
dec
in
movsb
mov
sbb
xor
fsts
xchg
test
mov
add
lods
cmpsb
adc
inc
jmp
jns
das
aaa
dec
jg
les
sbb
or
orl
pop
repz
mov
lret
xchg
xchg
out
or
add
push
test
xchg
into
nop
in
lds
and
daa
mov
sbb
mov
out
jecxz
sub
xchg
pop
pop
mov
jg
jnp
adc
repz
mov
daa
lret
ja
les
pusha
fistpll
mov
out
jns
loopne
std
add
fs
mov
push
mov
out
es
lock
pop
add
pop
lods
ss
jne
cmp
push
shlb
sub
pop
sahf
or
movsb
pop
out
js
jle
jecxz
sub
out
sub
mov
inc
stos
movsb
jb
pop
dec
mov
adc
jno
dec
pop
stc
mov
lret
in
out
pop
adcl
pop
in
cmp
aad
push
pop
sub
mulb
xor
ds
in
xor
pop
jnp
xchg
andl
outsb
and
inc
jno
ss
pop
test
out
das
pop
stos
stos
sub
cs
fistpll
inc
push
xchg
lahf
aas
inc
cmp
cld
leave
mov
add
inc
popa
repnz
xchg
loope
filds
or
mov
mov
stos
push
lea
lcall
xor
mov
aas
inc
rcr
or
inc
aaa
sbb
lcall
jne
adc
add
dec
std
je
sub
jns
aaa
pusha
jp
add
shrl
xor
fucomp
xchg
cltd
pusha
inc
jmp
hlt
das
aas
repnz
lea
je
mov
mov
sub
insb
xchg
fldl
add
pop
aas
aam
xor
aaa
mov
xchg
dec
cmp
mov
dec
lock
shlb
negb
xchg
repnz
daa
loopne
in
les
inc
push
or
mov
mov
mov
mov
inc
adc
loope
hlt
aas
inc
sub
popf
call
pop
lock
test
push
test
int
or
into
mov
movsb
out
aaa
sbb
jb
jmp
bound
and
jle
mov
pop
mov
addr16
out
fidivrl
int3
or
jns
xlat
sbb
add
mov
add
inc
xchg
xchg
sbb
dec
mov
std
ss
insb
sbb
sbb
ror
mov
aaa
pop
add
outsb
lods
ret
aam
push
inc
cmp
pusha
lret
cmp
loop
ja
mov
testb
xchg
andl
insb
pushf
sbb
xchg
pop
in
mull
add
jecxz
xchg
jae
and
push
inc
loop
mov
cmpsl
or
aam
test
fbstp
in
inc
shll
cmp
imul
ja
lret
test
imul
jg
sbb
and
cmp
xchg
push
out
imulb
sbb
jno
lahf
jno
ljmp
jae
inc
pushf
dec
repnz
sub
sbb
enter
pop
add
mov
inc
movsb
sbb
test
test
ror
cltd
mov
insb
in
xor
xchg
xchg
in
lret
addr16
xchg
cmp
pushf
and
enter
mov
sbb
gs
and
add
dec
les
lret
mov
mov
icebp
pop
cmp
movsb
sub
adc
jl
add
push
icebp
mov
pop
jle
sub
shlb
jl
movsl
mov
ret
rorl
mov
and
lea
sbb
icebp
xchg
dec
and
int
and
add
mov
scas
add
cmp
ja
dec
mov
adc
mov
mov
enter
xor
push
push
dec
sbb
xchg
xchg
lcall
sahf
xchg
cmp
xor
sbb
cld
sub
add
pop
push
popf
sbb
and
jbe
fmul
cltd
cmpsl
mov
adc
pop
mul
sbb
imul
fimuls
jp
addr16
mov
sub
add
in
xchg
sbb
xchg
aaa
mov
fldcw
xchg
fstpl
or
fs
aam
mov
daa
inc
pop
ja
push
adc
pop
into
inc
nop
mov
or
lcall
icebp
sti
sub
mov
sub
push
sti
imul
cmpsl
jb
cli
in
push
int3
scas
ret
outsb
mov
pop
xlat
aas
xor
and
arpl
std
jo
enter
in
pop
iret
mov
out
lds
cmpsb
aad
fcmove
je
mov
into
ret
inc
fnstcw
inc
mov
sub
push
push
mov
out
inc
inc
in
add
pop
xor
jg
fs
mov
lret
addr16
pusha
stc
lret
xor
in
or
repnz
subl
mov
inc
sbb
and
adc
insb
test
call
cmpsl
xlat
fst
jl
xchg
imul
ret
mov
ret
mov
pushf
push
jl
push
sbb
aas
in
cli
mov
pop
mov
mov
mov
xor
mov
pop
push
push
mov
icebp
dec
xchg
mov
xor
subl
es
outsb
jmp
decl
addr16
xchg
lret
mov
push
jbe
mov
je
outsb
mov
inc
gs
je
pop
test
imul
int3
sbb
mov
xor
push
aas
mov
popf
cmpsl
jnp
jmp
sbb
test
in
addb
shlb
aas
add
add
lahf
insl
sbb
nop
mov
iret
xchg
mov
bound
or
and
lret
mov
or
jle
mov
xor
mov
push
lahf
popa
jecxz
cs
xlat
fisubrs
rcrl
shlb
bswap
pop
jl
stos
jne
and
jne
jae
xor
xchg
xor
dec
xor
cmp
fdivrl
icebp
cwtl
sub
push
stc
data16
dec
stc
mov
or
push
fcomps
add
sbb
js
jnp
xchg
jbe
mov
test
test
xchg
mov
mov
push
imul
or
jmp
addr16
addl
daa
and
addb
inc
cmpsb
push
xor
push
ljmp
add
adc
mov
rolb
inc
nop
fdivl
inc
repz
pop
mov
cli
xor
out
jecxz
xchg
adcl
das
ffree
loope
pop
lea
jno
lods
jae
int3
push
fisttpl
push
idivb
shl
jmp
dec
test
add
xchg
mov
adc
push
das
out
push
fidivrl
aad
mov
xor
sbb
fwait
pop
fnstcw
stos
push
xlat
in
lcall
add
add
cli
mov
sub
fnstsw
pop
repnz
idivb
sbb
jnp
mov
lcall
lret
stc
or
ja
pop
call
sub
inc
xchg
mov
jne
rcrl
pop
and
jbe
stos
push
dec
ss
mov
mov
and
mov
adc
pop
popf
xor
or
and
lds
sti
mov
and
dec
insl
daa
cltd
add
xchg
das
in
jmp
xor
jmp
bound
sbb
sub
cmp
xor
filds
dec
jle
pop
test
stc
pop
cmp
jo
mov
inc
dec
sbb
xor
ds
shlb
xchg
mov
cli
fdivl
cmp
fadds
das
cmc
faddp
jmp
mov
jo
cmp
lods
scas
out
cmc
push
test
push
les
push
into
push
pop
cmp
add
xor
mov
push
lret
into
lea
jns
xchg
push
lahf
into
pop
sbb
scas
fcomip
mulb
shlb
jge
fsub
add
movsb
cli
imul
xchg
fstpl
sbb
and
out
jge
popa
sbb
ja
mov
or
dec
mov
insl
rcll
lcall
std
inc
dec
sti
sbb
imul
xorb
sbb
scas
lods
in
push
adc
sahf
sbb
dec
icebp
jo
daa
int3
rcrb
pusha
leave
fiadds
mov
dec
out
std
rcrl
pop
mov
jns
fildll
push
decb
sub
pop
call
int
lods
xor
push
gs
inc
dec
mov
add
test
enter
das
pushf
pop
loop
adc
cmpsl
mov
mov
add
jecxz
and
inc
insl
cmp
mov
test
mov
jne
mov
setle
xchg
insl
pushf
or
sub
push
out
push
cwtl
mov
xchg
mov
sbb
daa
inc
gs
mov
cs
in
es
cmp
sub
pop
and
popf
sub
jbe
xchg
jb
in
adc
inc
push
xchg
push
dec
rorl
xor
lret
mov
popf
test
clc
cmp
mov
call
jl
mov
sub
fnstcw
das
dec
cmp
ljmp
mov
stc
jno
pushf
in
and
popa
mov
xor
mov
mov
mov
dec
jp
or
hlt
std
dec
mov
std
les
mov
inc
jg
ds
lret
ja
std
jecxz
cltd
dec
gs
jb
mov
sti
dec
scas
mov
mov
or
cld
adc
pop
dec
fistps
jbe
pop
xor
jge
jg
mov
imul
push
sti
fs
les
mov
insl
mov
mov
jmp
sbb
inc
test
or
insl
rcrb
dec
pop
stos
test
mov
dec
cli
sub
or
jno
mov
aaa
shrl
lret
in
fwait
adc
sub
js
nop
gs
mov
jl
test
push
je
sub
jmp
lea
mov
int
sbb
popf
ret
es
scas
adc
push
dec
dec
mov
sahf
clc
popa
jns
pop
hlt
loop
daa
dec
jno
ljmp
jmp
and
pushl
pop
or
push
popa
aad
dec
rcll
loope
mov
je
out
xor
push
pop
addb
mov
cld
gs
push
jecxz
jnp
dec
sub
jmp
cpuid
fimuls
mov
mov
jp
mov
scas
dec
jo
push
dec
movsb
not
cmp
jae
cmp
movsl
aam
or
int
std
ja
subb
repz
pop
dec
ret
jmp
out
push
das
mov
jns
cwtl
stos
dec
mov
push
or
movsl
sbb
mov
pushf
cltd
push
scas
subb
mov
xor
mov
jne
sub
imull
jge
loope
push
xor
xchg
and
aad
das
mov
dec
iret
jmp
data16
dec
xchg
or
cmp
mov
lahf
add
ja
arpl
adc
les
mov
repz
in
sbb
lods
or
mov
js
scas
test
outsb
icebp
jle
sti
test
xor
cs
add
mov
pop
aas
dec
mov
jae
mov
lar
sbb
add
push
orb
inc
xchg
inc
adc
mov
lods
mov
cmp
shl
popf
je
andb
addr16
jle
mov
sahf
lcall
int
data16
clc
repnz
sbb
add
or
inc
inc
mov
xor
icebp
sub
pop
adc
xorb
lods
movsl
dec
enter
mov
mov
cmpb
inc
adc
movsl
jno
outsl
lock
clc
pop
push
sbb
in
test
push
mov
pusha
jae
mov
mov
mov
cmpsb
pop
cwtl
lcall
bound
mov
cmp
flds
jbe
in
mov
or
mov
and
movsb
pop
icebp
cmc
loopne
push
sub
shll
jns
dec
scas
push
add
les
leave
pop
sbb
sbb
mov
push
test
sbb
xchg
adc
xor
dec
out
push
cmpsl
jecxz
pop
aam
fdivrs
popf
stos
inc
cmp
inc
lcall
jge
xchg
test
pop
insb
jo
inc
and
push
and
ret
fs
xchg
cmovno
mov
mov
shrl
nop
or
cmpsl
xor
fdivl
jl
lods
add
mov
sbb
lret
cmp
dec
push
in
sbb
outsl
dec
pop
outsb
mov
loopne
mov
xor
xor
stos
aaa
fsubrp
out
cmpsl
push
daa
cmp
roll
pop
and
pop
popa
mov
movsl
mov
add
and
pushf
xchg
jp
fiaddl
ror
pop
cmp
add
dec
cwtl
mov
sar
dec
rol
mov
sbb
std
push
sbb
add
push
nop
into
call
sbb
jge
pop
lds
or
out
cmp
push
in
dec
mov
daa
arpl
mov
lahf
aad
xor
sub
es
pop
in
mov
pop
sub
xchg
cltd
ret
ljmp
in
cmc
add
push
sub
cmp
addl
enter
mov
lods
or
push
lret
clc
push
pushf
add
xor
lret
outsb
jns
nop
js
and
add
sub
jmp
push
mov
jo
xchg
cmp
pushf
add
fsubrp
push
and
jp
nop
jno
ja
test
cli
add
dec
pop
mov
clc
jb
xor
pop
rcl
add
ret
dec
sbb
std
lock
imul
scas
mov
inc
lods
or
sbb
or
push
out
lods
jecxz
cmc
sbb
xor
dec
sahf
push
pop
mov
gs
sbb
mov
inc
lods
call
test
in
lock
loope
jo
xchg
jg,pt
sahf
sbb
push
mov
cmpb
adc
jb
sub
stos
jnp
dec
les
cmp
ja
test
dec
push
stos
push
gs
bound
mov
mov
xlat
jg
rcrl
ljmp
xchg
fucomp
pusha
ret
mov
mov
xchg
xor
jbe
loop
jmp
mov
popa
movsl
sbb
xor
fisubrs
cld
mov
hlt
popw
stos
adcb
movsb
les
aas
mov
aam
scas
in
xor
sub
cld
mov
mov
je
cmpb
mov
sbb
inc
push
mov
xor
jl
repz
arpl
std
cmp
jnp
inc
and
aas
pop
repnz
aas
adc
int3
shrb
sarb
pop
repnz
xchg
push
inc
mov
add
pop
dec
out
mov
in
mov
inc
daa
je
es
pop
dec
and
cmp
sbb
sbb
xchg
mov
es
jbe
lods
xor
out
iret
xchg
push
push
out
push
loop
pop
pop
in
imul
test
ss
dec
sbb
icebp
testb
nop
xor
aam
mov
daa
hlt
xchg
shlb
inc
imul
fists
sbb
xchg
jle
and
mov
sub
xchg
xor
and
or
inc
pop
gs
push
clc
lock
ljmp
add
int
inc
xchg
and
xchg
ja
movsb
and
lods
xchg
mov
add
dec
ljmp
pop
loope
push
testb
dec
cmp
std
sbb
push
daa
icebp
call
dec
push
leave
add
xor
add
dec
ljmp
mov
inc
push
sbb
lods
shl
mov
cmp
pop
inc
add
or
std
or
xchg
out
mov
ljmp
xlat
fdivs
into
inc
pop
mov
inc
pcmpeqd
mov
push
jecxz
xor
cwtl
int
sahf
lcall
push
enter
fdivl
adc
pop
lock
fisttpl
mov
add
adc
inc
push
mov
popf
mov
fs
pop
adc
mov
mov
pop
cs
xor
sub
gs
scas
mov
jbe
jl
jp
xchg
popf
repnz
xchg
push
mov
in
dec
push
inc
adc
mov
sbb
push
in
hlt
aam
in
mov
incb
aad
out
test
fbld
xchg
hlt
sahf
mov
lret
mov
lcall
or
insb
stc
pop
mov
insb
fbld
fidivl
imul
mov
xchg
jecxz
dec
inc
fbld
movsb
fs
and
mov
ret
dec
mov
push
aas
in
or
dec
je
adcb
pop
pop
ja
insl
push
mov
gs
lock
in
push
and
aaa
mov
test
out
cmp
xchg
in
pop
push
lret
arpl
cld
mov
lods
int3
xchg
cmp
xor
jnp
push
rorl
or
sbb
int
lret
insl
fldl
inc
push
cld
push
imulb
pop
sbb
xchg
dec
mov
subl
push
mov
adc
or
mov
pop
aaa
lds
pushf
pop
movsl
insb
jp
xor
enter
inc
mov
xchg
xor
fisttps
jle
or
orl
lea
mov
push
bsf
in
xchg
aaa
inc
out
xlat
adc
mov
xchg
mov
pop
pop
sbbb
dec
mov
es
aad
mov
sub
icebp
cmc
std
in
negl
jo
cmp
std
mov
int
cmc
loope
nop
pushf
adc
jnp
jp
or
divb
gs
push
mov
sbb
addr16
iret
fsub
xor
push
lods
sbb
mov
ds
lock
xlat
cmpsb
test
in
mov
in
mov
insl
adc
fildll
sub
pop
js
push
cmp
xchg
lods
pop
fcompl
stos
rcrl
fs
pusha
mov
insl
xchg
ja
mov
shlb
add
xchg
out
sbb
popa
cmp
scas
mov
mov
mov
sub
test
fwait
loope
sbb
fcompl
cmp
orb
cmp
in
or
adc
in
lret
cmp
ja
sbb
cmp
mov
out
in
sbb
or
in
lds
jae
jmp
xchg
and
mov
and
mov
adc
dec
mov
out
xor
jnp
pop
imul
mov
push
xor
test
int
cmp
jno
and
sub
rolb
mov
shrl
mov
mov
and
loope,pn
mov
js
mov
cs
or
xorl
addr16
push
adc
sahf
jnp
inc
in
mov
xchg
outsb
test
push
sahf
out
add
jbe
cmp
out
std
ss
xchg
lret
sub
dec
mov
lods
sti
pop
cmp
mov
sbb
dec
movsl
adc
cmp
mov
xchg
cmp
sub
shl
xchg
into
add
pop
movsl
sub
adc
mov
shlb
fnstenv
inc
jp
push
dec
insb
pop
push
mov
fistpl
outsl
icebp
mov
js
xor
cmp
cli
xchg
or
and
inc
pop
ret
sbb
cmp
mov
cmc
adc
imull
in
aad
mov
or
jg
dec
inc
jmp
and
push
sarb
and
decl
xor
mov
sbb
xchg
lcall
add
ret
xor
mov
push
sbbb
fisttps
stc
scas
jns
pop
push
lock
and
ja
pop
pusha
lcall
mov
cli
adc
dec
mov
adc
pop
test
adc
xorb
mov
mov
mov
call
daa
lret
stos
jg
out
mov
loop
adc
and
mov
mov
mov
mov
cmpsb
fcmovnb
or
ljmp
push
stos
xchg
rolb
fwait
aam
jae
sbb
or
stos
pop
insl
cld
push
inc
shl
inc
rcr
cwtl
ds
testl
lret
aas
pop
fwait
leave
pusha
es
adc
out
mov
out
lahf
dec
pop
push
pop
push
cmp
test
mov
popf
in
movsl
pop
leave
and
stc
push
ljmp
ss
loope
fidivrs
xorb
inc
insb
mov
pop
inc
mov
ret
or
inc
mov
addr16
loop
movsl
loopne
stos
mull
andb
inc
sub
pop
xchg
insb
sahf
into
and
loop
clc
aad
imul
lods
js
xchg
ret
add
jo
inc
lcall
out
adc
nop
mov
call
stos
loopne
push
or
sbb
dec
add
or
push
cmpsl
in
push
mov
leave
ja
rclb
fisubs
pop
outsb
pop
aas
rolb
xadd
dec
out
and
xchg
mov
adc
mov
jno
das
add
jno
xchg
in
mov
adc
mov
data16
xchg
daa
mov
add
xor
sub
loop
pop
jb
or
repnz
jmp
loopne
dec
inc
mov
xor
xor
pop
sub
ljmp
pop
shl
les
cmp
dec
jbe
lods
in
dec
dec
lock
dec
ja
xor
popf
mov
pusha
rol
mov
repz
out
fnstenv
test
mov
cmc
shlb
pop
mov
in
add
mov
dec
inc
aam
pop
sbb
cmp
xchg
icebp
fwait
sti
and
ret
sar
or
sub
in
fwait
xchg
adc
mov
push
rcl
faddl
lock
stc
push
ret
in
out
xchg
js
gs
test
subl
pop
push
test
cmpsl
jnp
mov
or
push
jp
clc
call
ret
inc
cmc
xchg
test
dec
jbe
subb
push
out
testl
dec
mov
orl
pop
stc
add
loopne
mov
push
add
mov
cmp
fxtract
pop
mov
add
fs
jle
lea
mov
fidivs
imul
inc
cmp
mov
movl
and
das
dec
push
mov
fmul
icebp
xchg
cmp
in
jnp
or
jne
cmp
insb
sub
jno
aas
outsb
inc
in
dec
mov
ret
mov
mov
sti
xorl
hlt
movsb
add
les
movsb
mov
adc
out
sub
add
push
dec
insb
adc
pop
jo
mov
loop
or
iret
fdivrs
push
mov
lcall
ja
iret
ljmp
cld
repz
or
jmp
sbb
stos
rolb
mov
rorl
cmp
mov
mov
mov
cwtl
loopne
sbb
xchg
inc
dec
fucomi
xchg
pop
and
lret
pop
push
test
fcmovne
fs
add
push
out
cmp
repnz
test
or
push
test
mov
mov
movsl
or
outsb
sub
jmp
xchg
dec
in
outsb
push
int
push
xchg
iret
scas
lds
xchg
push
mov
outsb
bound
mov
and
jle
lahf
xor
cmp
push
cmp
test
test
mov
jo
dec
push
mov
out
xchg
daa
xor
jne
jns
mov
scas
bound
out
jnp
stos
sbb
call
dec
orl
xchg
inc
or
sub
push
ja
mov
test
pop
xchg
jmp
push
stc
ds
stos
sub
int
gs
adc
stc
rclb
cmp
ja
cmp
in
add
mov
shll
and
cmc
scas
dec
stos
int3
xor
popa
shufps
in
mov
cmp
fiaddl
adc
pusha
loopne
xor
jmp
es
adc
div
mov
lds
out
adc
out
rolb
aam
mov
inc
jg
jle
je
xchg
jae
dec
xor
cmp
cld
pop
cmc
add
mov
int
in
jbe
in
shl
cmp
data16
mov
rcll
das
fdivl
cmp
or
lret
pop
es
push
das
push
xchg
test
sbb
inc
push
add
jmp
lods
fs
fstps
sarb
pop
loopne
orb
add
xorl
cmpsl
stc
fisubs
into
pop
lret
push
int3
cwtl
insb
fimuls
ja
adc
pop
cmpsb
push
jno
scas
cltd
mov
inc
adc
loopne
popf
lret
out
or
subl
mov
and
cltd
mov
fldl
insb
mov
xchg
out
lock
add
sbb
cld
inc
cwtl
cmp
lahf
inc
dec
mov
xchg
mov
bnd
mov
inc
push
xlat
stos
rorl
cmc
and
sbb
and
fisttpl
mov
cmpsl
fisubrs
pop
outsl
add
shll
orb
jae
lods
mov
xor
xchg
or
inc
fisubrl
fwait
mov
cmp
adc
arpl
dec
addr16
push
push
sarl
xchg
insb
pop
call
data16
mov
lret
shlb
andb
dec
loopne
aaa
dec
inc
pop
dec
iret
or
fwait
and
mov
movsl
lea
inc
out
xchg
dec
repz
sub
mov
adc
sbb
or
jg
popf
lret
jl
xor
pop
jecxz
pop
sub
fucomp
xchg
in
jge
clc
sbb
jge
cltd
inc
push
mov
nop
cltd
pushw
and
imul
and
dec
cmpsb
mov
xchg
stos
outsb
insl
cli
ret
sbb
aaa
call
into
pop
hlt
lahf
lret
cmp
movsl
int3
stos
mov
adc
idivl
mov
push
push
sbb
ljmp
xchg
clc
jl
sub
mov
daa
push
dec
fisubl
jmp
mov
daa
mov
fxch
push
insl
shrl
and
loope
out
adc
negb
mov
testl
inc
sub
mov
sbb
inc
push
addl
push
inc
aam
cmp
adc
aam
fstenv
xor
xchg
dec
jns
or
int
fldl
push
xchg
call
nop
ds
outsl
out
push
test
xlat
add
into
xchg
and
xchg
ljmp
mov
xrelease
push
push
or
mov
pop
testb
push
mov
jb
mov
in
xchg
hlt
es
cli
add
lcall
cmp
xor
mov
mov
mov
incb
push
mov
nop
jo
sbbb
std
aaa
mov
lahf
xchg
dec
add
sti
sub
jmp
xchg
mov
je
es
pop
adc
cwtl
movsl
leave
mov
add
pop
outsl
mov
sbb
data16
lods
out
add
and
push
mov
stos
inc
aaa
lahf
stc
sub
cmp
sahf
repz
lds
loopne
mov
gs
dec
push
lock
pop
sub
aas
daa
dec
outsl
inc
mov
pop
lahf
les
or
int3
ss
push
daa
and
mov
and
call
jl
push
push
mov
jbe
lret
test
adcb
push
out
ljmp
jmp
loopne
or
lods
sub
lahf
dec
sbb
pop
inc
scas
ret
ret
dec
test
cld
addr16
cld
adc
mov
jmp
inc
lock
ja
sahf
lahf
hlt
lret
lcall
push
hlt
cs
shlb
es
xor
lea
dec
cmpsb
sub
stos
and
jecxz
enter
add
sub
std
push
nop
adc
orl
cltd
ss
sub
pop
and
sbb
clc
sti
call
jb
add
aas
movsl
xlat
adc
pop
adc
movsb
pusha
mov
addr16
jns
xlat
sub
bound
xlat
and
cmpsb
lret
pop
js
insl
sub
sub
jae
shr
cmp
xchg
xor
jge
inc
daa
xchg
and
jnp
push
outsb
nop
js
mov
mov
stos
mov
or
test
shlb
or
push
mov
add
mov
mov
dec
inc
mov
insl
adc
imul
notl
repz
je
imul
xchg
sahf
jae
lcall
xchg
mov
xchg
insb
pop
cmp
and
jno
inc
jnp
pusha
pop
cld
stos
jle
xor
jecxz
or
jmp
pushl
inc
cwtl
mov
dec
xchg
mov
rcrl
xor
mov
adc
pop
pavgw
faddl
cmc
sbb
sbbb
shrb
psubusb
jecxz
stos
and
jge
jmp
cmc
inc
cwtl
test
enter
adc
sub
push
subl
lods
fld
in
loop
mov
icebp
in
xlat
stc
pushf
ja
or
aaa
mov
adc
sub
std
pop
in
pop
mov
loope
rcl
mov
mov
rol
push
in
sub
push
xchg
mov
and
xchg
clc
test
fwait
mov
adc
jge
cmp
andb
rorl
adc
jb
outsb
in
test
mov
cli
pop
inc
and
ret
negb
fmuls
insb
mov
lcall
pop
aam
lahf
sub
rorb
adc
sub
sbb
mov
mul
into
push
mov
jl
push
loope
mov
jmp
push
cmp
jnp
add
cmc
cli
xchg
cmc
aaa
outsl
jnp
dec
push
adc
pop
and
sarb
mov
inc
outsl
or
mov
jno
cld
sub
fstps
jno
mov
dec
jecxz
inc
insb
fnstcw
xchg
mov
sub
mov
mov
push
xlat
fwait
test
je
and
jne
in
lock
cmp
push
enter
pop
add
cmc
lret
mov
add
mov
pop
jne
fwait
mov
cld
mov
adc
outsl
mov
push
xchg
mov
inc
mov
pusha
pop
cmp
xorb
adc
push
sbbb
inc
fwait
cmp
stos
push
jae
ss
mov
add
loop
in
mov
mov
jnp
pop
sub
cmpsl
and
mov
dec
fwait
and
push
mov
mov
fs
mov
lock
movsl
jbe
push
sbb
lcall
sbb
xor
pop
stc
adc
mov
mov
imul
mov
jl
push
dec
rcrl
and
mov
pop
out
adc
dec
lret
jo
loopne
push
loope
leave
pop
shr
push
mov
pop
enter
dec
inc
push
xor
inc
adc
adc
jbe
add
js
pop
test
mov
mov
mov
jne
sbb
setp
out
dec
test
andl
jmp
or
nop
rolb
adc
add
sub
dec
hlt
loopne
icebp
and
aad
adc
dec
mov
inc
pop
inc
sarl
repnz
je
sub
cmp
inc
xchg
leave
int
test
and
xchg
scas
aad
pop
push
ret
mov
sub
push
mov
aam
adc
jae
cmpsl
fcompl
mov
pop
out
fsubrl
mov
in
sub
nop
push
xchg
pop
addr16
or
pushl
pop
arpl
subl
pop
xor
adc
mov
adc
push
cwtl
cmp
mov
outsl
imul
cmc
pop
cli
inc
pop
pop
xchg
jl
mov
bound
adc
scas
mov
lcall
dec
test
pushf
inc
iret
fldl
push
sahf
movsb
mov
pop
sahf
xor
sbb
or
nop
mov
fimuls
ja
mov
xor
out
adc
std
push
inc
fcomps
mov
loopne
push
push
sbb
xchg
in
jecxz
xchg
cltd
imulb
std
adc
mov
imul
inc
xor
sub
je
mov
stos
lods
std
mov
ds
and
in
dec
cs
adc
xchg
pop
sbb
xchg
orl
sahf
mov
gs
or
fcoml
in
orb
xlat
in
and
mov
je
sub
lcall
das
ljmp
mov
ja
movsl
test
add
pop
rcll
cwtl
sbb
gs
xor
mov
push
jae
xrelease
fwait
cld
pop
lods
push
lretw
dec
push
repnz
lods
es
jae
hlt
sarb
out
mov
and
and
mov
notl
cltd
fdivl
push
adc
adc
mov
shll
cli
jg
shll
adc
pop
cmp
test
call
call
push
inc
aad
mov
push
or
stc
fdivr
dec
testb
fdivrl
incl
fimull
jge
fcoml
xchg
add
cli
pop
mov
fmull
sbb
pop
xchg
push
jle
loopne
dec
mov
xor
and
xor
imul
jno
in
ja
dec
mov
shlb
mov
dec
lods
and
jb
mov
out
xchg
es
xchg
xor
mov
loopne
dec
add
cli
push
ds
pop
dec
lret
mov
test
lods
mov
add
movsb
cli
cld
cmpsb
xchg
enter
mov
xchg
push
sub
ss
sub
fwait
lods
mov
or
ret
rcll
lods
cltd
fadd
inc
and
scas
inc
push
pop
mov
xor
mov
add
rcl
inc
loope
lds
scas
sahf
testl
jmp
xchg
sbb
sub
out
or
call
cmp
rorl
shll
faddl
xor
cmpsl
sbb
loop
lods
std
push
imul
test
enter
lea
or
fldl
push
call
rcrb
sarb
popa
mov
leave
jno
adc
xor
jecxz
push
cs
adc
jno
fistps
push
sub
mov
std
mov
lds
jne
out
push
mov
cmp
inc
inc
stc
cwtl
mov
fisubrl
mov
mov
test
cld
ret
pop
imull
jbe
push
ss
sbb
sub
stos
imul
push
movsl
cmpb
lds
add
dec
mov
xor
aam
inc
fstpt
sbb
push
scas
jmp
dec
jns
mov
int3
out
xor
fdivl
mov
dec
sub
fsts
push
movsl
ret
ss
loope
pop
mov
sub
or
out
jae
mov
jge
jbe
add
jl
popf
mov
fldt
test
mov
add
adc
mov
mov
pop
pop
out
mov
jl
fstpl
jbe
popf
nop
mov
arpl
pop
jns
movsb
jno
ss
shrb
xor
jp
stos
pusha
cmp
repnz
push
ret
xor
out
push
idivl
pusha
leave
or
xchg
addr16
cld
push
scas
shrb
ds
xor
ret
adc
mov
mov
push
push
insl
in
or
ret
adc
adc
dec
or
or
scas
das
imul
sub
fstpt
and
and
push
je
bound
push
test
jg
dec
insb
addl
fstl
mov
nop
hlt
sub
outsb
sub
cmp
stos
pop
shll
mov
leave
dec
hlt
jno
inc
mov
pop
dec
xchg
inc
inc
or
jl
add
cmpl
inc
lods
xor
addr16
cmp
cmp
incb
inc
aam
aam
cmc
xlat
pop
mov
push
adc
dec
cs
enter
mov
imul
repz
out
mov
pop
iret
popa
in
adc
pop
or
lods
out
inc
lahf
arpl
xor
shll
cmp
lock
add
dec
pop
pop
mov
and
cmp
fdivs
mov
test
ret
pop
loopne
inc
cmp
mov
scas
pop
xor
dec
mov
loopne
bound
adc
idivb
inc
jecxz
mov
adc
aad
push
inc
inc
sbb
mov
movsb
push
xchg
and
pop
cmp
gs
inc
cwtl
dec
inc
pushl
xor
or
pushf
fwait
push
fcom
cmc
xor
negb
xchg
mov
pop
xchg
or
mov
dec
leave
ja
push
test
addb
push
fmul
ds
mov
arpl
imul
int
gs
das
mov
push
jge
adc
adc
fcompl
into
push
rolb
enter
fs
jp
inc
add
imul
out
out
test
cmpsb
cmpsl
and
or
popf
adc
lret
mov
mov
dec
call
das
pop
je
jg
iret
jne
dec
xor
cmp
repz
inc
add
addr16
sub
dec
pop
fsts
filds
sbb
and
dec
or
xchg
jg
cs
adc
ficompl
rclb
aas
lods
jle
pop
stc
jb
subb
add
andl
sub
push
sbb
jg
repnz
inc
out
fcmovb
jmp
lcall
and
jg
cmpsb
xchg
jbe
lods
sarl
bound
out
xor
inc
dec
and
mov
inc
or
sbbl
sub
in
popf
inc
jle
fbld
jecxz
sbb
cmpsb
cwtl
sbb
andl
inc
jge
cld
rcrl
out
jge
sub
ja
push
lcall
xlat
ret
enter
pop
lahf
gs
mov
mov
pcmpeqb
cmp
lods
lods
inc
aas
shlb
pop
es
xchg
gs
sbb
stos
or
lret
xchg
xor
mov
jns
mov
lahf
dec
imul
aas
mov
sbb
push
aaa
cltd
lahf
call
cmp
mov
ss
movsl
jmp
fnstcw
sub
jb
shl
jb
fwait
scas
mov
cltd
iret
dec
pop
lods
push
push
imul
mov
xor
cmpsb
push
push
inc
fstl
int3
sbb
in
xchg
or
sbb
mov
push
mov
sbb
add
outsl
dec
cmp
mov
xor
mov
inc
popl
mov
dec
int
or
sti
push
fldcw
jns
mov
xchg
inc
or
push
pushf
or
mov
sbb
jl
in
mov
pop
aad
mov
outsl
insl
rorl
mov
xchg
push
add
push
adc
mov
fbld
xchg
push
test
cmpsl
clc
adc
push
jl
xchg
mov
cli
ss
inc
leave
jbe
ja
into
xor
loop
lds
arpl
aam
and
or
push
sbb
mov
int
xor
jp
add
xchg
mov
arpl
into
cli
pop
or
cmp
sarl
push
lret
or
mov
mov
inc
aad
fwait
jae
and
repnz
cli
clc
jo
and
mov
dec
je
ss
sub
imul
push
imul
inc
or
xlat
jo
shrb
pop
mov
and
push
insl
ja
in
icebp
sahf
ja
mov
mov
fcomi
stos
jecxz
notl
mov
lods
and
jmp
dec
cmc
in
andl
pop
enter
lret
stc
or
js
pop
inc
adc
mov
xchg
dec
mov
mov
jae
adc
icebp
insl
inc
subl
jb
out
xchg
mov
shlb
clc
add
or
insl
mov
ds
jo
push
cmp
push
dec
scas
fwait
xor
inc
add
in
fisubs
rol
dec
inc
cwtl
dec
loop
dec
lea
inc
sbb
add
pop
scas
int3
jmp
fstpt
jg
test
mov
outsb
jb
or
pop
icebp
xor
jg
lahf
mov
out
push
cmp
gs
dec
out
xchg
in
xchg
mov
sbb
dec
pop
imul
mov
fildl
stos
cwtl
xchg
pop
dec
test
inc
sub
mov
cmp
ret
mov
fimuls
out
out
repz
lret
fs
or
dec
push
lahf
inc
es
and
fdivr
in
out
inc
inc
stc
mov
dec
or
mov
jbe
jp
push
inc
xor
lret
mov
push
cli
mov
adc
fnstsw
push
cmpsl
xchg
lahf
sub
push
movsl
loope
push
clc
jle
cmpsl
inc
pop
pop
in
mov
dec
jns
push
mov
mov
xlat
les
lods
fs
lret
cli
in
cmp
leave
mov
push
les
sub
imul
ficoms
aaa
idivb
adc
cmp
js
loope
ja
and
shl
sbb
pop
mov
pusha
xchg
add
pop
mov
add
or
adc
scas
sbb
and
sub
push
xor
dec
loope
cmp
cltd
ss
out
xchg
mov
xor
lds
scas
movsb
add
dec
shrb
push
pop
pop
dec
adc
pop
mov
push
fcompl
clc
fimull
mov
ficompl
popa
daa
lret
dec
push
or
repnz
or
lds
fwait
insl
lock
or
iret
in
enter
inc
ljmp
sub
push
leave
push
push
inc
lds
or
pop
xor
sbb
mov
sbb
jecxz
adc
xchg
insl
aas
and
test
stos
fisubrl
mov
xor
ja
mov
rcll
dec
push
sarl
cs
ss
lds
inc
fdiv
xor
jmp
scas
mov
ja
fnstenv
lret
out
lahf
mov
cmp
rorl
xchg
xchg
ljmp
loope
ja
inc
adc
call
sbb
xchg
add
mov
xor
mov
pop
push
imul
outsb
ret
mov
shll
lods
mov
jno
cmp
inc
loope
mov
hlt
mov
push
pop
fistpl
sub
mov
imul
add
push
mov
addr16
sbb
inc
in
jg
inc
xor
xor
inc
jb
movsl
rorl
cmp
mov
or
or
jge
test
loopne
sbb
jmp
and
jge
jb
rolb
imul
cld
enter
mov
pop
add
sbb
mov
jns
out
in
xchg
adc
ss
lret
xchg
cmpb
addb
mov
dec
cmc
adc
dec
and
lea
mov
mov
mov
aas
loopne
push
and
scas
lcall
push
shr
jl
mov
dec
fistpl
insb
negl
mov
dec
mov
push
fwait
adc
fsubs
mov
shr
pusha
xchg
insb
je
cmc
mov
scas
push
sbb
std
mov
cmc
sbb
outsw
jmp
push
fdivl
arpl
inc
cmp
cmp
mov
aam
lahf
jns
or
repnz
data16
rorb
sub
lcall
test
sub
mov
mov
add
pop
cmp
mov
iret
enter
lea
mov
mov
ss
xchg
sar
jl
fsubrp
loop
sub
stc
ficoms
sbb
mov
cmp
inc
sbb
or
xchg
popa
pop
push
pushf
xchg
pop
pop
rcrl
loope
pop
jle
shl
push
fcomps
add
mov
adcl
test
popf
dec
sbb
inc
clc
xchg
mov
ds
cmp
mov
dec
lret
cltd
push
jle,pn
loop
stos
and
push
sbb
sbb
inc
cmpsl
pop
inc
push
fucom
popl
loope
jae
xchg
out
lods
sub
cmp
jmp
mov
fwait
dec
xor
jle
push
xchg
inc
push
jae
adc
cmpsb
out
out
inc
call
jns
loopne
popa
fstpt
scas
xchg
push
jp
xchg
and
inc
dec
sbb
and
stc
lret
xlat
pop
xor
std
and
loope
popf
jle
mov
bound
int3
rclb
into
jne
or
popf
push
mov
xchg
dec
xchg
jae
mov
cmpsb
mov
jae
in
lods
lret
pushf
outsb
scas
xchg
int3
outsb
pop
rclb
sahf
sbbb
or
not
jge
in
add
fwait
gs
push
sbb
sub
aaa
xchg
loopne
sub
test
js
and
loopne
std
ds
rcll
test
aas
lods
in
scas
sbb
into
cli
in
jno
cmpsl
adc
mov
jge
mov
pop
stc
jecxz
jno
aam
daa
stos
loopne
addr16
push
jb
sbb
or
jp
nop
in
mov
scas
jge
jb
and
shll
jnp
ret
mov
push
cmpl
pushf
inc
xor
into
inc
mov
push
lret
jg
es
ret
ja
push
sti
jnp
aaa
lret
or
movsl
imul
xchg
mov
dec
jg
mov
inc
jne
xor
arpl
cmp
std
fadds
cmp
aam
movsb
imul
mov
mov
sub
dec
pop
pop
and
xor
mov
xchg
dec
jle
icebp
lret
scas
sub
xchg
hlt
adc
mov
stos
or
sbb
inc
push
shl
cld
cmp
iret
movsl
pop
sahf
rcll
pop
or
stc
add
scas
pop
cmp
cmpsb
dec
mov
popa
pop
fisubs
outsb
orl
push
push
mov
or
ss
mov
inc
nop
mov
mov
mov
stos
fdivr
mov
inc
jle
mov
mov
inc
xchg
cmp
ret
fildl
mov
stc
mov
push
andb
mov
xchg
jecxz
inc
movsb
iret
sub
je
dec
mov
xchg
test
pop
adcb
mov
fcmovnbe
imul
jnp
jmp
cmpsl
insl
std
mov
jg
sti
insl
test
and
outsl
xor
ret
jmp
sbb
das
mov
es
dec
xorl
aam
sbb
push
cltd
push
cmp
aad
idivb
out
pop
cmp
cmpsl
inc
clc
xchg
out
outsb
leave
or
jae
in
mov
je
loopne
sarl
ffree
pop
mov
mov
jl
inc
lahf
cmp
ret
test
lods
scas
adc
loope
movsl
jg
push
inc
aaa
xchg
lret
mov
das
imul
add
pop
out
jecxz
push
cmp
mov
ret
push
inc
in
pop
xor
mov
mov
fdivr
test
rol
pushf
loop
sub
pop
cmp
into
cmpsb
dec
aam
shl
mov
push
insl
lods
jb
out
clc
pop
or
pop
pushf
xor
enter
cmp
ret
mov
dec
mov
lcall
xchg
and
popf
fsubs
out
in
cwtl
push
bound
repnz
in
dec
sub
lret
mov
lahf
sbb
iret
das
add
push
into
push
add
xlat
subb
addr16
jb
test
shr
insb
adc
jns
andb
pop
xchg
aam
add
hlt
lret
nop
dec
add
inc
js
shrb
xchg
cmpsl
aaa
xchg
lahf
shl
or
push
inc
mov
cmpxchg
lds
jl
icebp
dec
sarl
sub
push
dec
imul
pop
inc
xor
xor
dec
add
mov
xchg
cwtl
sahf
outsb
in
test
cmp
sar
lcall
pop
sbb
out
jne
ret
test
daa
pushf
sbb
loope
mov
ret
fisubrl
inc
das
pop
mov
mov
mov
mov
call
mov
out
sub
push
cmp
fisubrl
daa
imul
orl
insl
xchg
arpl
idivb
xchg
jnp
add
push
xor
fxch
and
mov
lods
and
pop
mov
pop
mov
cli
and
cmp
pop
sub
aas
mov
lods
repz
shll
add
leave
push
push
inc
jo
mov
jns
pop
add
iret
xchg
fadds
dec
cltd
mov
stc
test
xor
pop
push
or
mov
aaa
fucompp
pusha
mulb
ret
or
or
sahf
mov
sbb
in
cmp
mov
pop
mov
enter
push
outsb
push
adc
iret
clc
adc
cltd
mov
push
or
loope
add
ror
ret
outsb
mov
cwtl
inc
adc
insl
dec
or
repnz
outsb
xor
mov
mov
div
push
xorb
sub
pop
addb
mov
test
push
sarl
dec
push
cmpsb
and
add
insl
out
xor
lds
lret
add
daa
and
ja
push
mov
lods
dec
push
mov
in
in
push
or
stos
aas
test
pop
inc
into
fdivl
in
loope
loop
xor
das
movb
test
rolb
cli
testb
push
and
cltd
negl
test
frstor
int
mov
xchg
cmovns
in
jne
mov
add
push
arpl
cltd
shrl
inc
jne
movsb
cmp
sbb
daa
cmp
inc
xchg
inc
fwait
push
pop
push
sbb
cmpsb
fstpt
js
mov
xchg
inc
mov
mov
and
mov
test
push
fdivrl
cltd
xchg
or
sbb
lds
dec
faddp
mov
popa
leave
dec
sbb
cli
fstpl
cs
mov
mov
fdivs
sub
pop
pushf
cmp
sarb
call
rcrl
pop
ljmp
leave
sbb
jno
lret
stos
jecxz
and
daa
scas
in
popa
xor
fsts
pop
jbe
popf
jp
jp
and
dec
adc
inc
leave
gs
xchg
add
mov
dec
lock
dec
outsb
add
pop
inc
sub
mov
pop
cmp
loop
pop
xchg
xchg
fsqrt
clc
mov
pop
xor
div
repz
xchg
mov
adc
bound
aam
movsb
pop
out
addr16
jecxz
jb
inc
test
ds
add
test
incl
dec
push
xor
pop
adc
sub
fdivl
hlt
xchg
push
bound
mov
fwait
ljmp
dec
in
push
cld
cli
mov
inc
dec
gs
popa
mov
test
mov
xor
cli
jns
mov
sar
inc
jns
out
outsb
scas
bound
and
jg
mov
dec
nop
mul
sub
pop
sbb
popa
mov
push
in
jecxz
and
out
sub
add
fwait
cmc
pop
xchg
dec
ja
pop
outsl
enter
in
dec
jno
cli
test
sbb
rolb
fdivrp
sub
cld
lods
ss
clc
rorb
je
adc
jecxz
add
test
clc
movsb
in
push
imul
rcrb
sbb
jbe
or
or
xchg
shrl
sbb
into
adc
lods
mov
cltd
mov
inc
in
xor
outsl
iret
mov
movsl
sub
xchg
inc
out
aad
fmuls
push
cwtl
pop
jg
jmp
adc
fsts
sbb
add
int3
jbe
fmulp
aas
ret
jae
popa
and
ds
outsb
push
out
scas
nop
arpl
pushf
stc
pushf
pop
je
adc
aas
cmp
sub
aas
xchg
lcall
pop
xor
scas
or
popa
adc
inc
insb
cmp
jmp
sarl
push
fistpl
clc
cmp
cltd
push
imul
mov
push
jnp
movsl
dec
rclb
adc
pop
or
adc
pop
mov
into
repz
dec
push
outsl
stos
add
xor
mov
xchg
negb
push
sub
cltd
nop
pushf
pop
lea
test
mov
jmp
cli
cmp
das
jle
ljmp
fs
divb
int
dec
std
leave
scas
pop
lret
lahf
ss
xchg
out
pop
inc
loope
repz
cmp
fxch
fsubrl
xor
dec
lret
nop
movsb
sbb
xlat
pop
outsl
sbb
inc
dec
popa
cwtl
jg
mov
xchg
jne
les
shll
outsl
in
mov
dec
dec
sub
in
lds
enter
pop
push
icebp
inc
shl
test
fnsave
ret
adc
mov
fstps
jl
enter
mov
mov
inc
mov
pop
dec
cs
call
das
por
mov
mov
and
mov
xor
fildl
cld
xchg
imul
test
add
test
mov
jne
std
and
outsl
pop
stos
cmp
nop
enter
sbb
mov
out
rol
cmpsl
mov
mov
outsb
adc
add
push
rcll
xor
aad
or
mov
jmp
setge
push
int
mov
sbb
imulb
jnp
mov
in
xchg
cwtl
xchg
shrb
sbbb
and
push
sub
cmpsl
inc
jnp
lahf
adc
es
or
push
hlt
mov
and
mov
sub
inc
enter
loopne
aad
mov
in
add
scas
jp
dec
aaa
lods
inc
jp
cmp
icebp
cltd
add
out
js
pushf
jae
push
cmp
lea
dec
sbb
pop
mov
push
jle
mov
adc
mov
push
mov
push
push
inc
mov
test
popa
stc
or
adcl
cs
dec
push
addl
add
adcb
or
adc
pop
gs
dec
test
fdivrs
bound
push
sub
and
cmp
dec
mov
sti
jmp
loopne
xchg
arpl
pop
sarl
aad
jg
dec
scas
lret
push
cmp
lret
ret
mov
incl
fs
std
in
push
js
push
pop
adc
ja
fstl
mov
lods
fsub
int3
test
jns
dec
lds
out
hlt
leave
push
sub
jmp
jecxz
insl
push
add
cmpsl
sbb
sub
lret
out
mov
les
adc
sbb
pop
out
inc
scas
rcr
jno
jne
aas
aad
rclb
sbb
out
sub
clc
data16
leave
pop
movd
or
push
lods
inc
inc
push
adc
cmp
mov
jbe
adc
jbe
push
mov
fdivrs
inc
sbb
test
mov
stos
lret
test
cmpsb
out
mov
pop
es
pop
cmc
jb
push
insl
mov
gs
xor
xor
fstpl
insb
icebp
xchg
add
push
inc
and
sub
in
jae
jle
pop
or
ja
subb
mov
shrl
cmp
push
idivb
cmc
xchg
testb
inc
jae
push
jbe
test
and
dec
js
push
fld
inc
cmp
lret
pop
mov
add
popa
xor
push
cmc
push
movsl
out
movsb
pop
and
inc
daa
frstor
sbb
mov
adc
push
xchg
rorl
push
adc
int3
xchg
cs
imul
mov
sbb
int
add
repnz
push
cwtl
shr
pop
fldl
dec
ja
push
xchg
jns
push
into
push
stos
ret
jecxz
imulb
and
xor
sub
jno
ja
xchg
lret
repnz
jns
jmp
roll
mov
xor
add
out
jo
movsb
out
icebp
and
or
decl
jp
cli
jle
scas
test
fwait
fs
insb
outsb
pop
xor
lea
enter
cli
lcall
mov
jg
inc
inc
sbb
outsl
adc
jae
sub
ret
stos
and
jno
xor
ds
pop
sub
sbb
sarl
movsb
lods
add
jbe
pop
cli
adc
pop
xchg
and
divb
sbb
mov
les
cli
sub
daa
xchg
or
lret
scas
incb
or
les
aaa
push
adcl
repz
notl
stos
stc
adc
jmp
loopne
mov
jne
mov
push
rol
inc
repz
xchg
lock
enter
popa
mov
add
jnp
das
jecxz
aam
dec
and
push
jmp
in
cli
fimull
sub
push
mov
cmp
jnp
mov
cld
stos
les
imul
lds
and
inc
in
jne
pop
and
jne
inc
xchg
jl
lds
cld
pop
sbb
fisubs
jae
mov
orb
in
test
in
shr
push
fs
xor
fiaddl
sub
lods
push
dec
pop
and
cmp
mov
lahf
lds
push
test
cmpsl
dec
pop
in
testb
pop
dec
je
pop
mov
and
mov
cltd
xchg
addr16
xchg
shrl
insl
aas
pop
mov
mov
sub
push
mov
sub
in
push
mov
stc
jb
fwait
sahf
repz
or
std
inc
mov
lret
xchg
scas
xchg
aad
push
lcall
lock
pop
test
sub
jae
inc
sub
sti
in
std
lahf
orb
ret
jo
mov
in
rorb
lods
imul
xor
call
pop
sbb
dec
push
jae
mov
mov
into
sahf
sbb
and
insb
mov
add
add
mov
xor
pop
add
add
ljmp
mov
cmp
adc
adc
movsl
movsb
stos
out
lret
push
sbb
push
test
daa
xchg
sub
push
or
and
cltd
jne
sub
loop
adc
pfnacc
pop
xor
testb
aaa
mov
clc
cmc
sbb
add
lahf
arpl
cli
push
clc
push
jl
xchg
lock
repz
pop
or
dec
fldl
cmp
xor
shrl
mov
xor
fisttps
xchg
call
mov
pushf
xchg
insl
fidivrs
or
fwait
adc
add
push
pushf
mov
pop
pop
jg
dec
push
into
outsl
cld
fimull
jbe
adc
push
arpl
dec
add
movsb
or
sub
push
nop
arpl
ds
fiadds
xchg
outsb
lds
in
addr16
mov
insl
mov
and
lret
adc
inc
lods
cltd
dec
dec
sti
cmc
push
rcrl
hlt
jne
or
mov
or
in
scas
cmp
fsubrs
andb
rolb
sti
cmp
enter
cmpsb
fwait
add
push
ja
lods
mov
xchg
xchg
leave
movsl
xchg
mov
arpl
cli
inc
incl
in
or
movsb
iret
xchg
lds
pop
xor
push
adc
mov
sbb
in
cld
or
lds
imul
mov
lcall
xchg
push
out
add
xor
mov
adc
pop
add
icebp
es
xor
outsb
aam
shrb
mov
mov
xchg
fisubrl
xchg
addb
inc
xchg
add
mov
jp
inc
aam
es
ret
scas
in
xor
mov
movsb
inc
lods
movsb
div
adc
sti
loop
xor
lcall
aaa
loopne
insl
into
mov
dec
cmpsl
into
sbb
aad
fucomp
lret
inc
sub
aas
and
je
bound
shll
fs
mov
adc
dec
mov
out
xchg
dec
and
cmpsl
push
sbb
jge
inc
sbb
xchg
cmc
sahf
insb
aad
xor
out
mov
shr
repnz
sub
ljmp
mov
mov
mov
jne
dec
xchg
and
mov
mov
out
xor
sub
sbb
sub
movsb
sbb
das
imull
sub
in
int
mov
scas
icebp
add
or
cmpsl
push
jae
xor
daa
sarb
mov
cmp
aas
push
lods
mov
fs
aam
mov
aam
mov
bound
leave
mov
adc
loopne
clc
pop
int3
inc
gs
cmp
out
jae
sbb
mov
or
pop
in
mov
cld
cmp
pop
pop
mov
ja
ret
pop
daa
fsubrl
mov
fdivl
adc
mov
mov
or
loopne
pop
dec
pop
not
sbb
cmpsl
hlt
out
hlt
and
gs
push
cltd
fadd
fwait
add
lahf
fidivl
out
adc
mov
test
jne
ds
inc
out
repnz
push
pop
jmp
inc
jl
mov
test
xor
sbb
in
pop
mov
pop
loope
sub
stos
lds
std
cmpsl
push
out
js
imul
lahf
xchg
xchg
inc
and
out
adc
or
sbb
mov
mov
push
subl
jns
cld
add
in
ret
clc
fmuls
popf
sti
into
repnz
js
mov
fsubrs
xlat
fistl
mov
dec
nop
insl
dec
push
mov
sbb
mov
nop
mov
pop
cmp
or
cmc
addr16
mov
pushf
subl
dec
jno
mov
mov
push
jbe
push
xchg
jmp
loopne
pop
imul
or
ds
out
push
stos
push
add
xor
test
cld
push
xchg
pop
push
xchg
jno
cli
imul
das
subl
pop
repnz
aad
ljmp
jbe
ret
xchg
xor
fsubs
sbb
dec
dec
int3
push
ja
stos
add
pusha
gs
dec
imul
or
movsl
insb
mov
add
add
dec
push
pop
xchg
pusha
repnz
imul
mov
aad
sub
adc
call
mov
jo
sarb
das
aam
fdivs
ret
imul
stos
lret
cmpsl
ljmp
pop
jae
inc
add
out
adc
lcall
add
xchg
test
dec
rcll
fmull
outsl
out
cld
and
addl
add
pop
in
daa
sbb
mov
cmp
out
repz
inc
insl
pop
or
shrl
dec
sbb
and
xchg
loop
xchg
jb
xor
pop
adc
cmpsl
pushf
nop
sbbb
add
adc
mov
jbe
mov
data16
push
lds
cmp
imul
or
and
add
insb
dec
jbe
pop
cmp
pushf
js
and
dec
enter
push
aas
inc
ja
pop
nop
mov
in
fildll
leave
std
rorb
ret
vmptrst
pop
mov
mov
jmp
movsb
repz
js
mov
repz
inc
iret
aas
cld
outsb
mov
jg
jg
pushf
das
mov
xchg
push
mov
iret
or
xchg
in
mov
ret
xor
jle
push
sub
nop
div
cmpb
sbb
andb
imul
scas
jge
mov
dec
cmc
outsb
rcrl
add
pop
push
jo
mov
add
pop
inc
xor
lea
inc
mulb
add
enter
mov
cmpsb
rcll
fsubrp
sahf
popa
cmpl
sub
in
nop
xchg
popf
cs
add
add
add
fidivl
test
enter
xor
or
outsl
outsl
mov
cmpsb
divb
arpl
mov
adc
sbb
jle
loop
das
and
loope
mov
idivl
fcomip
add
loopne
xchg
or
inc
imul
and
lss
push
add
jmp
xor
or
jns
jl
or
sarb
adc
int3
sbb
nop
sbb
sbb
shlb
lds
popl
pop
lcall
add
jmp
mov
lds
add
and
lret
inc
fiadds
sahf
xchg
pop
lret
adcl
or
adc
or
out
sbb
scas
std
and
mov
pop
scas
and
inc
icebp
mov
call
add
arpl
or
clc
jne
enter
pusha
inc
mov
test
std
jge
out
mov
xor
ret
dec
jg
stos
and
scas
jl
cltd
imul
stc
test
jns
aad
add
or
cmp
xchg
scas
jmp
add
mov
push
pushf
push
pop
adc
das
in
pop
or
mov
stos
stos
je
addr16
adc
xchg
mov
imulb
icebp
mov
ret
inc
lock
in
cmpsl
adc
repnz
xchg
add
cmp
js
mov
push
js
movsl
jb
mov
jnp
mov
sbb
loop
push
sub
sub
mov
xchg
ljmp
pop
bound
loope
arpl
push
aas
xchg
jmp
push
or
xor
xchg
mov
pop
xlat
fxam
sub
nop
cmpsb
mov
adc
add
push
leave
mov
cmp
mov
ficomps
cs
sbb
and
lret
dec
sbb
arpl
mov
test
scas
hlt
mov
int
push
mov
scas
test
iret
mov
mov
xlat
lods
cmpsb
pop
aas
daa
rol
leave
pop
loopne
jns
les
xlat
pusha
cwtl
push
or
ss
cmc
loopne
inc
inc
mov
lret
push
push
push
leave
jmp
xchg
pop
jnp
dec
lret
cli
mov
cmpsb
xchg
lods
xchg
xlat
mov
stos
jmp
insb
jecxz
xor
cli
es
loopne
mov
and
push
les
jmp
push
dec
mov
and
stos
mov
xchg
xor
adc
mov
jo
ja
mov
push
lcall
xchg
data16
lods
add
js
mov
test
cmp
adc
mov
push
movsl
pop
push
push
add
adc
mov
or
pop
or
pop
lods
cmp
iret
testb
in
ss
jmp
mov
mov
sti
push
push
loopne
call
xor
in
dec
dec
popf
sbb
and
push
ret
sbb
pop
sbb
cli
lock
xlat
adc
in
shrb
cmp
fmuls
cmp
sub
ljmp
int3
gs
imul
test
mov
mov
fidivrl
and
fistl
pop
mov
cmp
fldl
aaa
cmp
inc
pushf
xor
repnz
dec
xchg
icebp
in
jp
ret
xchg
imul
jl
push
subl
aam
cmp
es
cs
fnstenv
cmp
mov
pop
fwait
lea
gs
cld
pop
jne
push
cwtl
and
js
pushf
popa
and
stc
cwtl
cmp
xchg
sbb
out
pop
in
cmpsb
push
pop
jnp
xchg
lods
xchg
rorl
aam
lahf
into
aad
call
lret
mov
push
sbb
cmpsb
call
push
dec
mov
lea
push
inc
xor
fwait
jge
jge
mov
xchg
and
sbb
cmp
in
mov
inc
push
add
sbb
inc
mov
int
notl
ds
pop
pop
fcmovu
add
mov
leave
mov
sub
es
dec
xor
mov
aas
xchg
sub
test
hlt
adc
cmp
add
imul
flds
jo
jae
stc
jecxz
inc
mov
aaa
ret
add
push
ss
outsl
enter
sahf
cli
or
jg
ret
adc
stos
out
outsb
shrb
cwtl
mov
mov
dec
mov
in
test
push
cmpsl
loopne
hlt
or
divl
sbb
push
and
add
cld
xchg
or
mov
ss
cltd
sub
notl
xor
movsl
idivl
leave
push
mov
pop
pop
fistpll
aad
mov
leave
and
and
sub
into
xor
cltd
inc
xchg
popf
push
mov
jmp
andb
jmp
insb
clc
aas
fcompl
fs
push
lods
xchg
neg
and
data16
mov
jmp
and
mov
jmp
push
dec
lret
adc
cmpsb
jbe
data16
pop
push
enter
lock
adcl
xchg
in
jbe
rclb
mov
mov
jae
sub
push
test
or
or
fldl
in
sbb
jbe
mov
insl
fimuls
mov
out
or
sbb
push
iret
dec
mov
out
inc
pop
pop
push
stos
cltd
mov
mulb
jbe
jp
fildll
jp
jo
pushf
add
inc
stos
inc
cmp
xlat
mov
xchg
jno
push
add
shll
adc
sbb
daa
sub
into
out
inc
sbb
inc
cli
add
push
ss
pop
mov
push
jb
out
or
call
test
and
ficompl
sti
mov
push
jecxz
fisttpll
add
xchg
lret
and
jns
ret
pusha
iret
push
jo
shrl
xchg
das
stos
xchg
or
pop
jmp
and
push
cmp
rcrl
stos
or
adc
pusha
lret
sbb
ds
push
dec
adc
jmp
nop
sbb
movsb
notb
inc
jge
stos
mov
loopne
xor
mov
mov
and
pop
push
add
inc
lods
loopne
cwtl
orl
out
jns
repz
push
into
xchg
jnp
pop
jle
xor
aaa
orb
aam
and
movsl
sub
out
mov
or
fmul
cmp
testl
jge
and
xchg
rol
mov
aas
or
push
aaa
je
push
xor
lock
xor
cld
mov
mov
pop
pusha
movsb
adc
imul
movsl
adc
lock
adc
mov
clc
outsb
sub
mov
mov
mov
call
dec
xchg
or
fwait
lock
xchg
add
cmpsl
or
das
add
mov
cmp
in
sbb
lods
push
xor
pop
and
mov
cmp
loop
pop
movb
scas
ror
sbb
dec
mov
dec
pop
inc
cmp
inc
enter
faddl
icebp
adc
dec
shrb
adc
mov
scas
xor
dec
in
fdiv
mov
outsb
andl
mov
lret
mov
dec
das
adc
sti
and
cmc
popa
and
or
das
test
xor
imul
xchg
ds
in
jmp
jl
dec
ds
cltd
das
xor
cmp
in
mov
pop
aad
gs
or
push
into
hlt
leave
jae
rolb
cmpsl
and
ja
mov
loop
ret
cs
mov
adc
loope
rolb
popa
mov
or
cmp
jae
test
sub
cmp
arpl
ret
cli
loope
addr16
rcll
shrb
push
rol
xchg
pop
cmp
mov
and
test
mov
outsb
push
xor
or
int
push
out
jge
mov
test
pop
mov
dec
inc
xor
js
and
das
je
jmp
aam
push
sbb
xchg
inc
mov
orl
arpl
aam
in
imul
inc
pop
stos
stos
test
notl
je
jbe
arpl
mov
cmc
cwtl
cli
xor
les
cwtl
fwait
jne
ds
outsb
jmp
daa
push
adc
add
jp
fs
insl
jb
lret
int
data16
sub
hlt
jmp
jb
adc
and
loop
fildl
mov
inc
into
xor
xor
mov
xor
lret
adc
jp
sub
loop
sti
stos
lock
and
jae
jmp
in
loop
or
imul
enter
mov
dec
dec
or
inc
fisttpll
jne
inc
enter
push
and
jecxz
push
sbb
and
jno
xor
lahf
xchg
and
xchg
inc
add
and
in
sbb
adc
lahf
mov
sub
jo
jg
inc
roll
gs
sub
cmp
out
pop
jle
xor
fwait
ljmp
fidivrl
jbe
push
bound
adc
mov
aas
enter
insb
sbb
xchg
js
xlat
repnz
xchg
dec
xchg
push
test
test
sbb
movsb
jbe
mov
fs
pop
mov
mov
adc
iret
jbe
pop
xchg
icebp
das
out
pop
pop
mov
or
cmp
xor
jae
push
mov
int3
aaa
not
mov
jae
mov
inc
addr16
and
mov
dec
lcall
xchg
mov
lret
lret
clc
push
pop
pop
and
push
lock
aas
adc
fs
loopne
mov
mov
xchg
xor
jecxz
mov
mov
adc
mov
enter
or
pushf
inc
pushf
sarb
sti
inc
mov
cmpsb
jno
cld
cltd
jmp
mov
stos
shlb
jge
int3
or
inc
dec
stos
pop
test
pop
inc
and
mov
push
or
ror
loopne
mulb
mov
data16
and
inc
cmp
cmp
call
jno
fnstsw
push
dec
push
js
js
stc
enter
xor
sub
int3
dec
mov
mov
cmp
out
adc
dec
jne
test
in
std
test
jecxz
repnz
xchg
lcall
push
sbb
mov
inc
cmp
xchg
sbb
out
shll
pop
xor
arpl
cmp
jb
loopne
loopne
in
ret
jge
sub
and
rorl
xchg
mov
add
negl
je
cmpsl
rorb
mov
hlt
push
test
adc
xor
pop
mov
adc
jbe
cltd
cmpsb
dec
ret
subb
mov
mov
sbb
lea
repz
lcall
stos
popf
in
mov
adc
loope
std
loope
pop
mov
mov
sti
xor
inc
push
lods
xor
jmp
das
jb
or
mov
data16
cwtl
fsub
shlb
inc
and
xchg
comiss
test
fsubr
cmp
sbb
sbb
mov
adc
enter
aad
and
rorb
mov
cmp
mov
push
lret
pop
add
loope
xor
cmpsw
cli
xchg
ljmp
mov
fwait
arpl
push
test
mov
cmp
xor
push
mov
or
out
in
mov
or
sbb
mov
mov
fdivl
dec
gs
xor
repnz
scas
pop
pop
or
ror
loop
mov
movsb
xchg
dec
xorb
aaa
and
sbb
stos
jg
and
int3
pop
movsl
out
pusha
and
dec
nop
xchg
push
sub
xchg
pop
fwait
sub
hlt
adcb
cmp
or
dec
adc
pushf
adc
mov
lret
mov
pop
lods
or
je
out
jle
mov
adc
push
movsb
pop
scas
lret
call
int
sbb
faddp
ljmp
das
or
or
push
pop
push
mov
clc
xchg
out
mov
lock
sarl
testb
or
mov
test
and
stc
mov
sub
xchg
test
mov
adc
scas
adc
xchg
cmp
pop
pop
ret
out
sub
xchg
sub
outsb
in
xchg
idivb
jmp
fldenv
xor
xor
xor
xor
jg
bswap
mov
inc
lock
loope
xor
cs
push
in
dec
loopne
insb
dec
into
sarb
xlat
or
sub
xchg
add
or
inc
std
xor
inc
push
jbe
bnd
sbb
cmp
and
xor
incb
or
pop
mov
xor
jmp
gs
or
dec
sub
aas
mov
gs
adc
jecxz
xchg
inc
sub
add
fwait
cmp
out
cvttps2pi
fcmovnbe
mov
and
cmp
adc
data16
and
push
imul
rcl
inc
stos
sbb
cltd
fwait
jg
cmp
dec
mov
pop
imul
jg
movsl
jns
push
add
sbb
js
xchg
inc
sub
push
add
inc
nop
push
inc
stc
jbe
jmp
xchg
sbb
push
rolb
cmp
sbb
clc
mov
mov
repz
call
in
adc
js
mov
into
cmpsb
lock
mov
push
inc
or
mov
icebp
cmp
sub
add
cmp
rcrb
xor
mov
icebp
mov
or
push
mov
cwtl
inc
bound
or
push
scas
popa
mov
sub
int3
push
adc
sub
dec
bound
jmp
inc
loopne
inc
xchg
pop
xchg
outsb
repz
push
test
lret
mov
xchg
jo
clc
out
dec
sub
mov
fcomps
in
and
adc
jae
sbb
hlt
xlat
sub
dec
mov
push
pop
mov
or
loop
xor
pushf
jecxz
out
lea
clc
negb
cld
jbe
push
dec
aam
aaa
inc
sub
stos
roll
adc
lahf
fwait
insl
in
outsb
fcomip
stc
inc
dec
mov
or
mov
push
std
add
cs
mov
cltd
push
xchg
fs
test
sub
jg
xchg
int
inc
fldl
insb
in
pop
or
mov
and
and
std
scas
ds
into
jns
call
jbe
fidivl
sub
jmp
pusha
cmp
inc
mov
mov
test
cmpsb
mov
jae
cltd
out
sub
inc
insb
push
cwtl
inc
idivl
insb
cmp
sbb
cmc
xchg
insl
ret
lods
add
inc
cld
ret
pushf
subb
arpl
lret
and
test
aaa
iret
andb
jecxz
or
xor
push
mov
jo
push
fstl
jb
hlt
sarl
rcrl
inc
fidivs
pop
scas
cmpps
xchg
sub
fidivrl
nop
pusha
dec
rcrb
jle
mov
pop
pop
sub
jbe
nop
jae
fdivl
dec
add
idiv
mov
sbb
cmp
lock
lea
xchg
mov
addr16
nop
adc
jo
aad
pushf
sub
sub
fdivr
cmc
std
fisubs
push
pop
lock
jae
sub
mov
jp
dec
ret
pop
mov
jcxz
cli
mov
jno
xor
jle
jnp
sub
sub
in
test
ss
cmp
mov
pop
dec
dec
xchg
sub
pusha
popf
out
and
nop
jno
jmp
mov
loopne
pop
in
fucomp
cmc
and
sti
stc
and
mov
fsts
out
std
push
dec
sti
mov
stos
hlt
jae
dec
xor
and
sub
das
and
adc
inc
test
shll
ja
repnz
dec
arpl
and
mov
mov
fcmovne
cmc
push
in
mov
or
scas
jb
out
dec
pop
in
mov
out
mov
sbb
inc
imul
mov
pop
push
hlt
jno
into
icebp
sarl
dec
push
pop
lcall
dec
aas
lret
icebp
rcrb
unpcklps
pop
icebp
adc
cmpsl
aad
daa
add
adc
push
das
sbb
aaa
and
add
adc
shrb
cld
cmp
imul
adc
out
out
pushf
js
enter
add
mov
mov
js
daa
inc
les
hlt
fstps
enter
push
cmpsl
out
loopne
mov
int3
xor
xor
xor
xchg
jne
out
ds
test
sub
cmp
loope
pop
xchg
xor
lods
push
cmp
adc
movsb
sbb
icebp
mov
dec
out
cmp
xor
mov
leave
loop
lods
inc
adc
push
push
andb
fnsave
and
cltd
clc
xchg
cmpsl
fs
in
popa
xchg
insb
mov
sub
adc
mov
add
or
pushf
mov
or
cmp
sbb
sub
into
lods
out
in
adc
mov
les
cs
imul
int
mov
cltd
pop
jmp
loope
adc
xor
movsl
aam
cmp
scas
scas
xchg
stos
imul
adc
mov
pushf
mov
add
sub
hlt
add
loope
add
in
push
in
pop
mov
rorl
lock
mov
mov
fists
jge
filds
inc
lods
ret
ffree
cmp
pop
lret
jae
sub
add
push
mov
popa
enter
call
orb
xor
xor
xlat
popa
bswap
pop
rorb
cmp
stos
cli
mov
stc
out
push
jne
ljmp
test
std
pop
mov
std
int3
pop
sbb
loopne
jp
xor
movsb
cs
xor
sub
dec
mov
push
ja
std
jns
mov
dec
xchg
adc
fsubp
push
outsl
inc
inc
gs
xor
lcall
cmpsl
xchg
mov
sbb
cmp
idiv
or
nop
jns
and
mov
pop
push
in
subb
inc
and
fs
ja
data16
gs
inc
rcr
adc
xor
mov
ss
sbb
cmp
mov
loopne
ret
ss
xchg
xchg
and
xor
cmpsb
out
and
xor
adcb
dec
dec
cmc
ror
dec
xchg
repnz
add
outsb
cmp
inc
lock
loopne
push
mov
daa
pop
int3
stc
jnp
ja
jge
add
or
lret
ret
inc
lods
inc
inc
push
cs
push
push
inc
stos
lods
adc
cmp
sbb
push
cmp
mov
frstor
ret
mov
int3
sub
push
arpl
or
jmp
fst
or
jnp
leave
push
add
mov
sti
stc
cltd
fstl
mov
popa
or
mov
out
cmpsl
jb
add
cmp
pop
jge
cmp
mov
dec
sti
jp
push
in
test
scas
rorl
movsb
xchg
std
dec
stos
clc
mov
cmp
cmp
jmp
cmc
jp
jl
cltd
lahf
mov
movsl
push
adc
in
cmp
outsb
xchg
sub
in
pop
pop
xchg
lods
mov
aas
mov
mov
sbb
loopne
xchg
movsb
adc
inc
adcl
out
cs
iret
jge
das
dec
stc
data16
mov
mov
std
cmp
pushf
cmc
pusha
adc
js
loope
ss
xchg
repz
mov
shr
jbe
and
add
loope
notb
arpl
dec
jp
fcomps
test
push
loop
imul
ja
push
outsl
dec
jns
and
insb
xchg
dec
sub
cmp
inc
je
aas
jns
rcll
push
mov
fs
mov
std
jge
lea
or
fisubrl
pop
call
adc
push
mov
mov
adc
pusha
es
cmp
mov
rorl
xchg
xchg
in
cmp
mov
push
mov
sub
je
ja
insl
mov
add
out
insl
lods
hlt
cltd
xor
stos
and
xchg
xlat
or
sub
lock
mov
or
adc
shlb
jno
pop
or
inc
or
add
repnz
insl
adc
iret
pop
mov
xor
inc
je
xchg
push
push
mov
lea
inc
pop
or
pop
mov
push
pop
jg
inc
cmpsb
fmulp
inc
dec
dec
lret
loopne
mov
jne
lcall
mov
cmp
jns
fimuls
fiaddl
dec
jne
cltd
int
inc
gs
test
push
lret
fistps
xchg
ds
lahf
pop
xchg
imul
sti
mov
pop
jl
ss
lret
lahf
xor
repnz
outsb
xchg
inc
push
dec
faddp
aas
jle
xor
leave
imul
arpl
mov
mov
cmp
cmp
inc
in
pusha
inc
pop
push
popf
dec
cmpsl
fmuls
out
xlat
std
add
in
mov
sub
arpl
jmp
jg
stos
test
mov
sti
push
psllw
out
xlat
sti
jno
in
dec
inc
add
xchg
jae
pop
ss
mov
out
loop
icebp
int3
dec
xchg
pop
imul
fwait
pusha
lfs
push
cli
pop
jno
mov
out
scas
jp
rcr
mov
mov
in
stos
fidivrs
inc
aaa
adc
mov
and
sub
or
adc
mov
and
inc
repz
adc
aam
loopne
pusha
jo
orl
lds
sahf
jb
stc
in
mov
dec
add
adc
mov
sub
pop
out
enter
inc
in
sub
ret
loope
dec
mov
pushf
cmp
dec
stos
inc
pop
xor
test
call
jmp
rorb
push
or
clc
ret
pop
jne
daa
sbb
jl
pop
sbb
imul
mov
inc
cmp
idiv
cltd
inc
adc
lret
sbb
cmp
enter
arpl
es
jnp
mov
xor
cmpsl
sub
cli
iret
push
lcall
outsb
jle
popf
jg
adc
add
add
rolb
cmp
testb
int
sahf
mov
out
push
fdivl
sar
ljmp
push
cmp
cmp
mov
dec
fs
add
std
lods
loop
lret
inc
pusha
pop
pop
movb
mov
and
or
ret
sub
in
fucom
push
fldenv
jp
loope
loop
pop
dec
aaa
je
sbb
cmp
mov
jns
js
loop
jmp
push
cltd
in
cmp
xor
mov
popa
dec
pop
xor
xchg
add
add
mov
outsl
and
and
pop
push
dec
xchg
lea
add
add
push
dec
pop
push
push
jmp
cmc
add
push
popa
je
inc
icebp
dec
pop
or
mov
mov
movsl
insl
push
add
fldcw
or
pop
dec
add
lcall
mov
push
xchg
dec
cli
pushf
dec
call
sub
cs
filds
aas
jg
cmpsl
cmpsb
sub
test
sub
lret
dec
in
inc
pop
sbb
push
subb
dec
fsubr
dec
aam
fwait
in
push
mov
push
push
or
mov
shlb
ret
je
sub
jmp
js
cmp
test
mov
push
ss
dec
push
sub
lret
clc
pushf
out
fcompl
out
and
outsb
pop
dec
adc
loop
and
sbb
and
repnz
ret
jae
push
cmpsb
mov
mov
bnd
cmp
adc
jns
dec
pop
xor
int
cmp
aam
push
pop
fsubl
std
pop
test
fbstp
cmc
inc
lcall
and
mov
mov
sub
cmc
lock
repnz
pop
insl
adc
push
insb
mov
lods
lahf
mov
mov
dec
inc
mov
ja
mov
imul
je
sub
fs
xor
mov
aam
and
sub
fstpt
popa
data16
sahf
mov
push
stc
lods
or
sbb
data16
sti
ds
das
std
ret
cmp
js
test
pop
ret
dec
loop
sbb
scas
xor
sub
sbb
shrl
and
add
add
jp
dec
jb
fsubr
cmp
outsl
mov
dec
enter
ds
jp
xorb
hlt
repz
mov
inc
sbb
icebp
lods
shrl
cmp
pop
lret
ljmp
imul
pop
enter
push
fsubp
loopne
jb
sub
dec
lret
std
imul
mov
cs
mov
cmp
icebp
out
imul
mov
out
outsb
mov
mov
movsb
mov
jg
fwait
mov
or
fdivrs
fsub
mov
add
out
outsb
inc
xor
sbb
clc
ds
adc
mov
or
movsl
dec
scas
out
sub
sub
cmc
add
or
ljmp
repz
mov
cmp
loop
gs
dec
adc
or
out
or
int3
or
jge
mov
dec
cld
mov
std
cmpsl
out
popf
mov
inc
shll
popf
inc
jmp
lods
xlat
addr16
cmc
mov
push
into
filds
lahf
ficoml
cmp
sub
jle
adc
jno
push
cmp
jnp
enter
sti
orb
sub
add
add
sub
inc
add
lcall
stos
sub
addr16
xchg
push
inc
mov
or
sub
dec
add
mov
sub
and
fs
jbe
sub
arpl
stos
mov
rorl
inc
sub
add
insb
lock
icebp
adc
jl
lea
popf
out
jmp
mov
jo
mov
rorl
push
out
mov
cltd
lret
cli
inc
sahf
fwait
cs
pusha
mov
insb
fs
sti
or
push
stc
jmp
ror
mov
fistpll
shll
pop
ljmp
pop
sbb
pop
subl
push
mulb
stos
mov
iret
cmpl
dec
jp
daa
xchg
lret
push
je
sbb
pop
adc
int3
shr
sbb
shrb
mov
cmp
sti
dec
ror
cmpsl
ret
stos
and
dec
jno
rcr
add
xchg
testb
xlat
jb
xchg
jnp
outsb
jbe
sbb
pop
pop
mov
insl
fists
cld
sub
lods
jae
or
aad
add
inc
dec
xchg
lret
shll
and
push
sub
insb
dec
mov
adc
rorb
into
repz
pop
push
jno
sub
or
pushf
fisttpll
and
test
jge
sub
fiaddl
cld
add
gs
iret
add
push
loopne
ss
fcom
adc
mov
int3
sub
jbe
adc
jl
stos
jge
adc
jo
push
jns
sbb
cwtl
int
pop
push
mov
jle
sti
pop
push
sub
xor
loope
sti
jnp
xchg
lods
sarl
adc
inc
lret
push
cwtl
dec
test
in
lahf
mov
lods
xor
fcom
xor
ficomps
jbe
adc
push
mov
arpl
mov
leave
stos
dec
xchg
test
sub
stos
lcall
aam
adc
sub
sbbl
sbb
sub
ror
loop
jmp
rcrb
fdivs
sub
gs
fists
mov
pop
push
pop
jbe
lea
and
inc
cwtl
mov
outsb
loopne
mov
pop
lods
fs
fs
xchg
xchg
ss
hlt
out
js
mov
icebp
mov
mov
into
sub
push
je
inc
jp
cltd
and
adc
pop
mov
test
push
stc
inc
addr16
and
in
das
sti
rcrl
pop
pushf
xor
ret
cwtl
fwait
insl
arpl
test
scas
mov
cmp
shlb
mov
add
mov
outsl
xchg
mov
fxch
or
je
insl
inc
in
jo
lods
dec
xchg
loope
pop
cmp
insl
inc
in
cmc
lcall
addb
cmp
xchg
aas
adc
ljmp
jb
scas
adc
cmp
sarb
xlat
cmp
xchg
mov
adc
std
movsl
cmp
jp
in
leave
in
inc
push
mov
test
fst
loopne
cmp
movsb
jo
movsl
inc
xchg
pop
jo
sahf
ficoms
xchg
out
and
jle
inc
scas
les
jmp
sbb
mov
push
daa
loop
inc
in
sub
pop
popa
pop
mov
lods
fldcw
shll
fimull
movsb
jnp
out
aad
inc
repnz
jo
popf
shll
mov
push
xchg
movl
arpl
out
mov
add
sti
push
movsl
pop
cmp
push
jne
ret
cmpsw
lcall
icebp
ret
sti
enter
das
mov
fsin
sub
or
xor
leave
popf
add
push
je
and
insl
and
sbb
jnp
cmpsb
cli
push
in
xchg
mov
lahf
add
xchg
repz
cli
orl
in
cmc
xor
mov
mov
insl
pop
loope
mov
fstpl
and
dec
sub
sub
cmp
hlt
inc
std
movsb
and
pusha
mov
or
and
inc
dec
pop
out
jl
pop
mov
adc
xchg
inc
mov
ret
addb
push
and
mov
mov
pop
xchg
jbe
in
pop
sbb
pop
add
leave
xor
cwtl
lock
jl
test
rorl
jns
ud2
xchg
iret
pop
insb
cli
jb
pop
repnz
sahf
pop
mov
cwtl
stos
add
jno
mov
xor
into
movsb
mov
dec
mov
sbb
xor
or
mov
push
jb
push
testl
sub
push
or
or
add
pop
daa
or
mov
adc
and
sbb
push
jns
adc
push
lret
inc
push
fisttpl
ss
add
dec
leave
xchg
inc
ljmp
leave
loope
add
jecxz
pusha
jnp
mov
mov
mov
push
arpl
xor
dec
pop
push
pop
and
or
and
addr16
adc
pop
enter
test
lret
ja
adc
inc
out
inc
sbb
pop
clc
jb
jns
sub
cmp
fmull
dec
inc
imul
mov
fs
mov
gs
sub
les
mov
mov
jo
imul
rclb
clc
loop
sahf
pop
push
xchg
imul
and
adc
ficoml
add
subl
mov
ret
test
jl
jl
cmpsl
mov
mov
int3
stc
mov
mov
fldl
cs
or
stc
jae
in
mov
test
js
add
ror
push
hlt
push
adc
stc
and
inc
rorl
cmp
and
scas
stc
and
pop
icebp
sbb
pop
pop
xchg
fldcw
lahf
mov
push
xlat
sbb
inc
repz
mov
fidivs
adc
mov
arpl
imul
mov
insb
lahf
fwait
lea
xchg
dec
and
pop
push
sub
mov
cmp
push
fcmovne
push
add
out
adc
inc
stos
mull
mov
icebp
out
or
push
or
adc
rorl
inc
fiadds
lahf
out
fsubrs
pop
adc
rolb
mov
sbb
jb
push
imul
jg
in
pop
call
ret
popa
mov
push
dec
or
pop
in
pop
es
sar
mov
lahf
dec
shr
js
push
clc
cmpsb
lahf
xlat
dec
rcll
or
dec
leave
gs
sub
pop
jle
dec
insb
add
dec
pop
sbb
aas
test
nop
mov
mov
iret
push
lret
adc
dec
pop
stos
jp
test
inc
cmpsb
inc
ret
jne
xlat
in
sub
loop
push
lock
mov
jnp,pn
xchg
scas
mov
orb
ret
cwtl
call
cmp
cmp
sbb
dec
fistpll
iret
and
stos
cs
push
gs
mov
addr16
mov
pop
push
sbb
sub
adc
inc
push
xor
adc
frstpm(287
push
jmp
dec
lock
std
dec
and
stc
lret
test
jmp
js
lea
pushf
cld
cmp
mov
cli
or
or
cs
lea
das
std
int
inc
in
push
pop
mov
adc
jno
xor
sbb
add
imul
pop
xor
and
push
orl
in
pop
subl
ljmp
sarb
test
lods
hlt
inc
popf
xorl
jmp
imulb
sahf
xor
popf
shrl
cmp
sbb
insl
adcb
dec
stos
jmp
sbb
out
mov
lea
fsin
je
insb
cmpsl
add
or
or
xchg
pop
aam
lret
cmp
xchg
sbb
xchg
sub
sbb
dec
repz
or
jb
mov
and
cwtl
ja
lret
out
ljmp
mov
inc
rolb
and
pop
xchg
mov
jg
test
dec
jae
fldt
movsl
lods
pop
leave
lock
push
jg
fsubrs
popf
sbb
sub
nop
or
adc
mov
stos
loope
ljmp
adcl
pop
mov
into
dec
or
mov
daa
pop
daa
enter
sarl
jecxz
pop
mov
xchg
cmpsb
cmp
xor
mov
rorb
mov
leave
jp
jecxz
es
cmp
sbb
sub
and
cmp
mov
fcos
add
mov
ljmp
cmp
pop
sub
std
add
aas
jo
outsb
or
mov
scas
out
es
and
mov
mov
and
xor
and
dec
adc
and
pusha
mov
cmp
fsubl
jbe
cli
or
inc
mov
test
mov
stos
fisubs
aad
or
fwait
test
outsb
js
push
push
pop
ss
or
sbb
imul
outsb
scas
popa
dec
int3
in
mov
pop
xchg
stc
sti
dec
rorl
push
push
and
mov
mov
cmp
jge
leave
pushf
fadds
inc
ja
fimuls
fwait
cmc
jmp
stos
inc
pop
sub
jp
xchg
mov
dec
ss
scas
iret
cs
mov
cwtl
inc
pop
cs
scas
mov
aaa
cmc
add
sub
jmp
into
fmul
imul
imul
popa
out
mov
xor
jne
out
xchg
mov
inc
push
adc
fildll
pushl
xor
cmp
xor
xchg
mov
std
repnz
sbb
in
in
push
mov
lds
mov
push
sub
das
gs
addl
movsb
lahf
adc
or
sub
push
push
out
sub
sahf
push
jnp
xchg
mov
in
out
or
lods
and
dec
loop
xchg
jns
iret
pop
sbb
loopne
scas
sets
push
or
in
pop
add
icebp
jnp
sahf
rcl
pusha
mov
add
mov
popa
incl
inc
fwait
sbb
push
fstl
and
inc
sbb
aas
out
rorl
adc
push
cmp
sbb
cwtl
rorb
cltd
pop
rclb
mov
xchg
or
pop
add
cwtl
roll
addr16
or
test
sbb
loopne
push
jmp
push
push
cltd
push
inc
jbe
shl
outsl
push
lret
and
sbb
xchg
jecxz
leave
or
repz
je
movsb
jmp
in
repnz
mov
mov
mov
sbb
outsl
pusha
inc
imul
popa
ds
and
dec
jg
add
sbb
xchg
jecxz
movsb
rcr
sti
cmp
push
mov
inc
out
ret
or
aam
jo
mov
mov
insb
mov
add
dec
in
or
xchg
sbb
push
jo
jo
inc
orb
lds
jne
pop
xorl
jo
popf
pop
lret
stc
enter
jae
fyl2xp1
lret
jno
push
xchg
loopne
pusha
andl
or
cmpsl
enter
fldl
sub
cmp
lcall
pushf
jp
push
adc
mov
test
mov
add
js
out
lret
jge
stos
rcr
sbb
adc
mov
pop
mov
out
gs
xchg
dec
xlat
xor
movsl
insb
or
jbe
aas
cmc
add
mov
push
movsl
int3
repnz
pop
sub
jp
nop
add
std
cwtl
cmp
lahf
push
cwtl
sahf
inc
fnsave
das
mov
stc
jns
mov
mov
jb
jp
jle
add
mov
pop
daa
invd
or
leave
loopne
scas
xor
dec
loope
dec
pop
sti
sub
cwtl
sub
push
mov
jo
mov
aam
xor
mov
jl
xchg
pop
push
scas
in
sub
mov
cmp
add
xchg
popa
pop
pop
sub
aas
cld
or
cmp
cmc
mov
jbe
sub
es
movl
pushl
stc
movsl
xchg
dec
gs
mov
xor
dec
add
or
dec
inc
push
clc
cld
pop
mov
xlat
mov
aad
jge
loopne
fstpt
mov
inc
xor
repnz
add
fsubr
aam
dec
cmp
bound
mov
mov
ret
add
repnz
jno
add
push
aaa
rcrb
mov
das
push
adc
pop
add
das
ret
fcomp
cli
and
pop
pop
xchg
push
dec
fcmove
cmp
sub
mov
cld
xchg
push
subb
mov
in
out
mov
std
dec
adc
xchg
mov
lock
cmp
mov
sub
cmp
mov
dec
ret
aaa
fbld
fsubrs
scas
repnz
jecxz
orb
jp
jae
mov
bound
dec
jle
dec
jge
cli
rcrl
pop
lods
int3
rclb
pop
fdivs
call
jmp
add
pushf
mov
pop
fwait
out
dec
outsb
repnz
iret
push
jg
xchg
sub
je
mov
movsl
push
mov
xchg
adc
imul
and
movsl
mov
mov
pop
dec
pusha
ficoms
rcrl
negb
imul
add
sbb
inc
notb
cmp
repnz
in
inc
xor
mov
mov
clc
jns
and
sub
cmp
frstor
or
and
mov
loop
inc
int3
ficoml
into
ljmp
loope
leave
stos
repnz
adc
sbb
mov
mov
xchg
gs
inc
xor
jp
add
sbb
das
ja
gs
test
in
mov
cli
into
mov
idivl
and
ljmp
je
int
fldl
pop
mov
and
jecxz
lods
push
mov
pop
js
scas
repnz
and
mov
add
loopne
je
js
xor
xor
repnz
pushf
cmp
fnstsw
andb
mov
iret
jb
std
mov
jne
jno
adc
test
adc
dec
push
add
arpl
add
test
aaa
cmp
rcrb
mov
push
and
jp
inc
rorb
or
enter
int3
out
adc
sbb
rorl
and
test
mov
pop
mov
add
sahf
dec
add
xchg
mov
and
cmp
pop
ja
cwtl
rdmsr
inc
shll
arpl
xor
jl
cmpsl
filds
in
pop
movsb
rolb
call
xchg
scas
mov
shr
std
xor
scas
sahf
adc
seta
jle
repz
xor
lret
cmc
xchg
push
rcpps
dec
jb
shll
mov
cwtl
mov
mov
aas
sahf
dec
outsl
test
xor
cmc
dec
xchg
mov
out
jp
ljmp
mov
test
lcall
mov
aas
in
cltd
add
in
cmpsl
sbb
and
faddl
mov
or
xlat
mov
pop
xchg
pop
fdivrl
icebp
aam
jg
stc
pop
repz
push
movsb
cmpsb
repz
cmp
pop
mov
jecxz
mov
lds
push
push
pop
mov
outsb
sbb
mull
and
cmp
std
dec
xor
jne
mov
daa
push
sbbl
lock
mov
mov
pop
fadds
movsl
mov
cmp
or
cli
mov
in
add
rclb
jge
movsb
lret
adc
cli
xchg
fdivs
inc
sahf
pop
add
xor
cltd
daa
fisubs
out
push
xlat
jp
mov
jmp
sub
fimuls
aam
fdivrs
lods
lret
cs
das
mov
movsl
cmp
inc
push
pusha
or
andb
imul
orb
cmp
and
loope,pt
or
push
xchg
xchg
or
je
cltd
jge
and
call
xchg
jb
mov
dec
inc
lahf
dec
or
sbb
jbe
aaa
and
cmp
pop
aas
mov
imul
dec
inc
aad
fstps
xchg
add
pusha
and
pop
xor
cmpsb
xchg
xchg
mov
int3
or
push
out
movsb
faddl
sub
jl
dec
lahf
push
mov
je
lea
mov
dec
pop
push
movsl
mov
nop
mov
mov
adc
inc
inc
push
insb
test
and
dec
push
mov
mov
ja
aad
test
roll
adc
mov
and
inc
dec
jns
and
and
insl
shlb
add
es
loope
push
mov
addr16
mov
shlb
adc
sbb
shl
jle
bound
adc
mov
stos
xchg
stc
dec
or
inc
int3
pop
push
mov
sbb
lods
inc
xchg
xor
scas
rol
call
or
out
jnp
cmpsl
push
inc
add
test
push
call
sti
addr16
or
jmp
push
ja
xchg
jns
imul
ret
and
insl
xchg
and
test
push
mov
bnd
push
xchg
cmp
mov
outsl
fdivrs
cmpsb
ds
in
js
pop
ret
inc
push
cmp
pushf
xchg
hlt
mov
add
adc
ss
imul
xchg
push
xor
bndstx
sub
xor
addb
divb
push
outsl
cmp
xor
jae
jb
pop
add
xor
add
push
adc
sarl
xlat
sbb
lretw
movsl
adc
in
add
out
inc
loope
push
aas
xlat
dec
xchg
sub
hlt
out
outsl
xchg
jno
xor
and
in
mov
jle
mov
clc
cltd
sub
sbb
cwtl
sahf
shlb
xor
mov
pop
xor
cwtl
ds
leave
shrl
repnz
aam
enter
and
sbb
aad
lret
sbb
push
pop
push
repnz
xchg
jecxz
sub
xlat
xchg
xchg
mov
inc
mov
adc
sub
mov
nop
xchg
in
rorb
loop
push
mov
sub
jbe
pop
mov
lret
sbb
mov
sbb
cmpsl
xchg
addr16
mov
mov
repz
pop
inc
inc
loop
stc
sub
dec
add
jns
or
lret
sbb
fs
jmp
in
repz
add
sub
out
dec
add
xchg
push
data16
xchg
adc
in
jbe
mov
add
mov
cmp
inc
int3
roll
cld
std
mov
mov
sub
add
adcl
gs
pop
stos
stos
xchg
adc
in
out
ja
cmc
jecxz
mov
les
into
cwtl
pop
rcrl
push
ret
ficomps
pop
jb
jl
jb
sbb
xchg
or
sbb
sbbb
inc
cs
push
adc
sbb
adc
mov
pop
pop
lea
jbe
decl
imul
movsl
or
push
pop
addr16
xchg
enter
je
cs
fucompp
mov
aad
mov
dec
mov
and
pop
insb
call
jne
fsubs
ss
adc
jns
pop
add
adc
push
cs
int3
mov
aaa
cmpsl
jb
or
xor
je
xchg
jmp
in
adc
movsb
dec
push
nop
jge
and
push
dec
insl
movsb
push
test
inc
push
fimuls
cltd
push
sbb
cmp
push
inc
lahf
cmp
das
sbb
dec
push
outsl
mov
adc
mov
mov
iret
fcomip
jmp
dec
ret
mov
or
in
out
push
mov
enter
pop
push
pop
negl
cmpsl
data16
repz
push
cmp
mov
cltd
ja
ljmp
xchg
push
or
rclb
stos
adc
fnstcw
mov
push
cmp
and
adc
fnstsw
pusha
mov
loopne
sub
sub
movsb
xor
sbb
rolb
js
mov
mov
insb
mov
fcomps
outsb
lock
pop
sbb
insb
dec
ja
das
adc
jg
xchg
xor
sbb
loope
cmpl
stos
fucom
mov
test
pop
xchg
sbb
scas
fs
cli
cmp
mov
pop
fs
jle
mov
mov
xchg
xchg
hlt
dec
out
add
push
jp
int3
mov
iret
mov
jge
cmp
xchg
dec
dec
and
sti
jae
sbb
cmp
and
jmp
add
jp
sbb
daa
add
xor
push
mov
fcompl
push
bound
ret
lahf
xchg
inc
mov
push
sbb
or
and
cmovae
push
lahf
jp
addr16
andl
icebp
sbb
pushf
lahf
sub
xorl
jne
call
and
pop
stc
sbb
lock
xlat
pop
jg
mov
mov
lds
stos
or
pop
das
dec
xor
inc
mov
dec
call
inc
shrb
sbbb
pop
mov
es
mov
inc
rcrb
out
adc
pushf
movsb
clc
xchg
gs
imul
je
mov
xchg
dec
popa
pop
lahf
data16
test
int
sub
xor
cmpsb
aam
je
add
sahf
ret
dec
ja
lret
jg
cmp
dec
and
mov
andl
inc
and
pop
sub
sbb
mov
jb
repz
std
out
lret
int3
cmpsl
inc
out
shlb
mov
test
pop
add
mov
pop
xor
shlb
jae
cli
and
and
ljmp
lds
in
add
or
jge
pop
rcr
fyl2x
mov
sbb
sub
fwait
inc
jnp
inc
cmpsb
mov
adc
in
aad
mov
dec
pop
cmp
inc
pop
pop
sbb
cmpsb
push
xchg
mov
int3
mov
bndldx
icebp
cmp
outsb
jmp
movsb
ds
aad
xor
mov
lret
sbb
push
cmp
push
movsb
push
shl
jb
inc
push
pop
or
popf
jns
adc
sbb
sub
jge
jno
cmc
jl
push
inc
mov
pop
pop
cli
add
call
fcompl
aad
xor
stos
sbb
sete
test
sub
ds
mov
fmuls
je
mov
xchg
test
sub
pop
mov
inc
lahf
xchg
adc
aad
outsl
jo
xchg
pop
dec
ret
inc
inc
dec
frstor
sahf
loope
bound
jo
mov
add
lea
mov
jnp
sub
ja
stos
jae
mov
lds
lcall
aas
mov
sub
in
push
push
test
push
scas
cmp
jb
mov
add
sbb
pop
mov
pop
jbe
ljmp
sbb
int3
mov
add
stos
dec
out
inc
stos
idivb
in
sbb
pop
pop
shl
or
inc
subl
xor
jnp
inc
in
and
int
mov
loopne
push
lret
inc
jge
addr16
dec
sub
add
or
nop
sub
sub
clc
sub
shrl
lods
fcmove
fsubrl
shlb
fsub
insl
xchg
pusha
pop
cmpl
pop
push
cmpsl
mov
movsl
fsts
outsb
jae
ficoml
jnp
mov
outsl
ret
sbbb
mov
loope
test
gs
jle
out
leave
mov
mov
mov
cmpsl
mov
and
mov
les
pushf
repnz
xor
xchg
in
xchg
push
pop
dec
dec
inc
pop
xchg
lds
mov
rcrb
inc
icebp
or
shlb
imul
fsubl
jo
mov
or
adc
cmpsl
xor
loope
inc
in
pop
outsl
lock
hlt
mov
out
mov
decl
inc
scas
stos
cmp
pop
enter
adc
movsb
lret
aas
or
pop
pop
xor
xchg
mov
inc
mov
xchg
jmp
cmp
je
pop
mov
push
in
repnz
xchg
jg
out
test
or
int3
mov
test
mov
fisubl
cmp
lret
lock
pop
add
mov
iret
cmpsl
inc
xor
addr16
xor
in
mov
orb
sarl
adc
or
cmc
bound
mov
lods
dec
lahf
gs
lds
and
and
ja
sub
lds
sbb
pop
movsl
ret
xchg
dec
mov
and
scas
inc
jno
mov
pop
push
sti
lcall
out
loop
inc
adc
dec
jno
jns
adc
push
cmp
es
pop
andb
xlat
nop
stos
jmp
mov
gs
jae
xchg
sbb
mov
jmp
rcr
outsb
fnstcw
inc
lahf
ja
mov
das
scas
mov
sbb
push
shrl
fstl
or
dec
test
std
jmp
xchg
and
dec
bound
push
call
ss
jmp
and
in
mov
pop
negl
test
pop
fistpll
in
jg
pusha
pop
dec
or
sbbl
orb
jl
inc
std
jo
and
cli
jmp
mov
xchg
inc
push
icebp
test
insb
test
int3
xchg
jnp
fs
mov
ljmp
negb
mov
jns
mov
xor
xchg
scas
or
imul
sub
cltd
push
push
or
mov
push
add
hlt
sub
and
jmp
imul
xlat
mov
cmp
test
dec
inc
sbb
push
xchg
pop
pop
repz
lds
and
mov
mov
xor
xchg
sub
cmp
orps
mov
repz
gs
or
sub
fstps
push
push
cmpsl
cli
aas
mov
or
mov
aas
int3
jbe
out
add
mov
xorb
loopne
cwtl
xorps
mov
sahf
aas
nop
sub
arpl
mov
dec
imul
jns
outsb
in
mov
sbb
inc
sbb
out
jbe
inc
call
adc
inc
fisubs
pop
mov
sbb
cs
cmpsb
out
and
xor
xorb
mov
jb
out
jb
dec
xchg
lods
jle
loopne
xor
pop
ds
cltd
mov
jbe
mov
and
and
jl
addl
or
and
jmp
or
cltd
addr16
pushf
xchg
add
inc
popa
lock
pop
or
and
mov
rolb
mov
and
fsubrs
jnp
flds
ja
es
mov
jne
push
pop
mov
arpl
and
pop
test
xchg
adc
pop
jge
inc
mov
cmp
sub
lods
mov
xor
cmp
or
test
cmp
cmpsb
pop
cltd
repnz
imul
ljmp
mov
test
cmp
or
jp
mov
xor
xchg
xlat
dec
mov
leave
mov
push
in
xchg
nop
push
inc
adc
fists
pop
dec
xorl
inc
add
pop
dec
mov
cld
pop
out
js
imul
clc
lods
lock
gs
mov
mov
cmpb
mov
lret
sahf
push
cmpsb
enter
cmp
jns
jns
pusha
jae
mov
mov
inc
mov
or
in
bound
mov
dec
push
mov
cmpsb
push
popa
cmp
jmp
dec
inc
in
je
sub
mov
pop
sub
ficomps
xor
out
add
sbb
shll
sbb
shll
push
cmpsb
xchg
push
xchg
mov
push
call
mov
test
loop
in
jns
pop
pop
shr
adc
rcrb
inc
sbb
mov
arpl
mov
mov
insb
dec
nop
xor
sub
inc
xlat
pop
fldt
mov
gs
push
jno
jecxz
xchg
stos
add
lret
jg
mov
mov
or
dec
testb
inc
dec
jge
repz
lods
mov
pusha
inc
mov
popf
mov
fs
cltd
mov
hlt
and
mov
subl
movsl
cmpsl
pop
jnp
int3
insl
push
or
or
loop
arpl
cs
xchg
or
pop
loope
xchg
xchg
mov
ja
cmp
pop
mov
leave
aad
aaa
adc
in
mov
xlat
adc
or
jecxz
ret
mov
in
insl
xchg
cmpsl
xor
cmp
shl
adcb
fdivs
sti
lcall
sbb
aam
xor
xor
test
and
cmp
fistps
push
xchg
bound
fildll
push
outsb
inc
sbb
and
dec
test
sub
xor
scas
shll
adc
xor
pop
inc
mov
scas
push
rolb
arpl
pop
jg
add
into
mov
sbb
lods
cmp
mov
or
fucomip
jmp
mov
nop
mov
xor
bnd
push
test
fwait
repz
xor
call
fistl
fcomps
das
lret
ds
mov
std
push
cmp
mov
xor
lods
je
sti
dec
xchg
lock
inc
xchg
mov
gs
push
cli
mov
lret
pop
repz
xor
rorb
pop
nop
mov
ret
into
cmp
jg,pt
addr16
dec
jp
lahf
cld
sub
insb
or
out
outsl
rcll
fldl
mov
clc
icebp
mov
fs
push
leavew
mov
dec
outsl
fidivl
bound
or
addb
das
subb
loop
call
mov
cs
adc
push
mov
sbb
add
sahf
lds
sub
sbbb
cwtl
pop
push
mov
and
lret
xchg
pop
addl
cwtl
and
xchg
nop
jle
icebp
mov
sub
out
outsb
clc
xchg
sbb
and
inc
push
loopne
inc
inc
lods
add
lds
movsl
inc
inc
adc
and
cmp
lret
popf
es
lock
jecxz
mov
les
or
lcall
jp
shrb
outsl
cli
lds
mov
pop
xchg
xchg
idivl
test
jp
mov
cwtl
into
lods
and
inc
mov
xchg
or
clc
in
popf
cli
mov
push
jl
stc
pop
insl
js
rorl
loopne
out
fdivr
popa
mov
add
pop
lea
lea
mov
mov
mov
orl
loop
cmc
pop
loop
or
fmull
mulb
dec
push
jbe
or
and
pop
or
cwtl
cltd
cmpsl
or
add
sub
sub
mov
sbb
sbb
imul
dec
push
fcoml
pop
mov
cs
test
andl
stos
popa
inc
stc
and
jl
inc
int3
nop
js
dec
stos
mov
jne
mov
lods
in
mov
xor
add
es
rolb
fadd
rorl
stos
xor
push
xchg
cmp
pop
in
jp
or
testl
test
mov
addl
sarb
das
ljmp
in
push
jmp
movsl
jbe
dec
xor
add
mov
andb
jne
sahf
scas
cmp
jle
adc
add
shlb
lds
jle
xor
adc
out
xorl
aaa
mov
mov
scas
or
and
dec
stc
negl
out
shrb
ljmp
cli
das
push
mov
dec
xchg
push
test
xor
xchg
push
push
dec
arpl
dec
inc
imul
cmp
hlt
cmp
outsb
in
sti
mov
fcompl
std
cmp
stos
xchg
rcrl
mov
mov
xor
push
pop
sahf
int3
lret
fiaddl
xchg
dec
call
inc
dec
add
fidivrs
jo
sub
xchg
fdiv
into
stos
mov
and
push
inc
outsb
pop
pop
nop
stos
and
clc
ja
insb
mov
xlat
push
and
adc
mov
add
sbbl
sbb
rorl
ja
add
jmp
lods
daa
sbb
jae
mov
mov
addr16
dec
add
cmpl
rcrl
es
or
fimuls
pushf
lods
aad
pop
cmp
mov
arpl
sbb
push
adc
sbb
push
mov
and
pop
lds
addr16
xor
inc
pop
pop
lods
out
in
xchg
pop
lret
insl
jl
cmc
das
push
xor
cli
test
jg
ret
out
inc
cmp
xor
stos
xchg
mov
xchg
dec
dec
and
dec
sbb
ja
and
aam
push
jle
test
in
shll
push
xor
push
repz
and
and
xchg
jbe
gs
addb
adc
mov
xlat
icebp
cli
cmpsb
lea
cwtl
push
add
push
mov
movb
mov
jmp
out
fdivrs
sbb
pop
xchg
or
call
in
jnp
insl
push
ljmp
lods
icebp
mov
std
xchg
jecxz
push
out
fstp
ljmp
ret
xchg
ss
dec
mov
icebp
aam
data16
cmp
ljmp
adc
in
call
inc
scas
push
fiadds
iret
icebp
loop
sub
adc
and
stos
aam
dec
mov
sub
in
xor
lea
or
inc
scas
jle
stos
push
out
shll
add
mov
mov
subl
inc
sub
imul
and
clc
push
sbb
sub
mov
mov
and
dec
mov
cmp
mov
imul
push
xchg
jnp
xchg
fs
int3
push
dec
lods
fldl
je
sti
push
pushf
mov
sub
dec
jl
mov
add
add
cmp
sub
sahf
bound
clc
fwait
sahf
test
bound
mov
je
sbb
inc
out
lcall
push
lds
inc
or
jbe
ds
cmc
cs
and
es
arpl
pop
jecxz
inc
aas
rorl
mov
mov
cmp
pop
ljmp
cmp
push
mov
sbb
mov
xor
sbb
lods
push
and
jmp
fwait
lods
xchg
dec
jmp
dec
popa
fisubl
lock
gs
pop
adc
enter
insb
inc
xorb
or
adc
pop
adc
loopne
pop
jnp
cs
ret
push
leave
fwait
inc
xor
loopne
cmp
cmc
sbb
movsb
mov
pop
fs
stos
mov
push
mov
test
or
mov
mul
in
fwait
movsb
pop
lret
sub
icebp
out
sub
or
pop
lahf
lds
ret
loop
cmp
cs
adc
push
lods
xchg
push
mov
stc
in
movsb
lcall
popf
cli
call
or
lock
jo
xor
and
hlt
sbb
insb
mov
mov
dec
fistl
cld
lods
mov
or
fnstenv
adc
mov
jnp
int
cli
ret
xchg
inc
dec
push
add
inc
xchg
scas
inc
xor
shr
adc
in
rorl
std
pop
mov
push
fcmovne
es
repz
das
jp
aas
fadds
sbb
jl
aam
push
shl
and
pop
test
movsl
ret
js
pushf
mov
int3
jo
pop
xchg
add
jecxz
addr16
mov
mov
ss
hlt
sbb
or
lcall
movsb
sub
mov
ror
xor
or
fstpl
dec
dec
inc
push
jne
mov
jae
jl
xor
jb
xor
popa
cwtl
dec
add
aas
je
pop
and
jbe
mov
push
xchg
pusha
mov
ficompl
and
xor
or
movsl
sbbb
cmp
adc
fidivrl
and
or
packuswb
and
into
xchg
and
cltd
pop
push
lods
mov
les
rcrl
decl
push
adc
cmp
and
mov
pop
icebp
adc
or
xchg
aam
or
or
aam
sarl
xor
hlt
cmpsb
out
out
cmpb
mov
xchg
pop
xor
dec
or
sahf
mov
fiadds
xor
test
or
das
iret
mov
mov
mov
rorb
leave
xlat
xchg
xchg
scas
cltd
and
enter
stos
testl
mov
rcll
cwtl
mov
jl
push
jne
orb
cltd
and
ja
mov
in
jbe
call
pop
inc
xchg
xchg
inc
adc
int3
loopne
push
fxch
cmp
xor
int
out
movsl
divb
outsb
and
scas
xchg
mov
mov
and
mov
mov
push
ret
xchg
mov
push
dec
add
das
hlt
je
in
int3
sub
ljmp
sub
in
adc
std
lret
or
jns
or
xchg
sbb
dec
sbb
dec
pop
push
fildl
sub
mov
addl
cmp
pop
sbb
insb
mov
popf
orl
jg
in
push
mov
pop
faddl
xor
mov
movsl
sub
sub
cmpsb
lock
cmp
push
sub
and
push
xchg
fs
ljmp
rolb
sub
loop
adc
pop
adc
ret
and
jo
out
sbb
adc
std
xchg
mov
xor
or
cmp
jmp
pushl
and
push
shrb
ss
mov
jl
cmpsl
sub
rcl
cltd
stos
sub
incb
push
and
push
xor
or
popf
cmp
in
and
mov
stos
stos
lock
rorl
das
xor
inc
xchg
sub
lock
push
in
or
outsl
mov
jnp
mov
enter
dec
fdivr
cmpsb
jb,pn
xlat
das
pop
orb
sbb
enterw
sbb
push
outsl
jge
cmc
xor
sbb
push
adc
insl
pop
loop
pop
std
jg
mov
mov
dec
stc
mov
aas
ja
push
sub
xor
insl
inc
fucomi
imul
pop
hlt
and
jl
push
imul
pop
mov
iret
leavew
fcmovne
mov
and
jg
cmpsl
lcall
xchg
lea
insb
cmc
popf
adc
or
outsl
subl
repz
sbb
inc
pop
popf
mov
mov
rcrb
pusha
outsl
lods
les
sbb
pop
push
jbe
or
mov
lock
cmp
cmc
xchg
lods
add
gs
jecxz
test
cld
cmc
xchg
ret
dec
inc
fneni(8087
pop
inc
xchg
cmp
daa
sub
std
addb
stos
push
outsl
rorl
fsts
inc
jp
in
cmp
mov
je
cmp
inc
in
pop
dec
jnp
xchg
mov
jno
incb
scas
lods
jmp
adc
lods
les
fcompl
mov
xor
mov
mov
mov
lods
inc
call
jne
or
and
cmpsl
xchg
xchg
and
xor
out
cmc
xchg
cmp
pusha
iret
xor
neg
pusha
xor
repz
mov
dec
enter
call
mov
or
aam
adc
xor
test
mov
enter
xor
mov
cmp
mov
jecxz
and
mov
dec
mov
adc
add
push
dec
mov
lock
mov
fidivrs
test
lea
fwait
inc
cmp
adc
mov
pop
divb
and
jmp
stos
pusha
or
mov
test
test
mov
add
rcr
mov
cmp
xchg
dec
pusha
mov
enter
inc
mov
cmp
or
mov
jp
mov
hlt
lods
dec
into
jle,pt
dec
push
roll
mov
movsl
mov
fwait
stos
lea
shlb
pop
sbb
js
push
push
push
out
call
cmpsl
push
and
mov
in
mov
jb
cmp
shll
or
xor
movsb
idiv
pop
clc
mov
cltd
add
xor
repnz
xchg
xor
popa
sbb
stc
cmp
scas
out
push
xor
clc
dec
aaa
sub
pop
in
cmp
adc
push
mov
mov
ja
ret
ljmp
add
sbb
jo
in
cmp
notl
jmp
mov
gs
sbb
bound
or
mov
adc
inc
subl
in
ficoml
lahf
aaa
aam
or
rcl
test
test
cmpsl
mov
jns
insl
and
rclb
add
lret
mov
sub
inc
push
mov
not
fadds
and
inc
insl
pushf
shr
pop
cltd
push
mov
inc
sbb
cmp
idivl
xchg
and
stc
imull
ret
stc
dec
mov
xchg
fbld
cmp
shlb
xchg
leave
mov
dec
fmull
xchg
je
mov
lock
lds
mov
and
adc
daa
loop
sub
paddsw
fdivl
cmp
aad
mov
pop
sbb
mov
aam
cli
push
sahf
popa
jmp
xchg
cld
dec
std
jns
in
loop
adcl
lret
xchg
imul
dec
arpl
je
loopne
add
imull
dec
ret
jl
adc
loop
arpl
push
fnstcw
cmp
pusha
cmp
out
push
fsts
cmp
jnp
mov
sarl
xbegin
lea
pop
sbb
movsb
xchg
pop
popa
pop
aad
jbe
lods
sahf
push
or
gs
cmp
fstps
inc
mov
pop
cmpsl
ja
hlt
and
sub
mov
jb
aas
out
xor
xchg
xor
xchg
stos
pusha
mov
jl
mov
test
dec
mov
cmp
jmp
jl
mov
stos
loope
xchg
push
iret
in
cmp
dec
and
jl
or
leave
mov
mov
jne
stos
lods
push
xor
and
decl
and
push
mov
pushf
ret
jbe
cmp
cmpsl
pop
out
pop
sbb
xchg
ljmp
in
or
mov
jmp
subb
xchg
setl
sbb
stos
adc
jae
stc
and
sbb
cmp
insb
xor
sbb
je
dec
scas
sbbl
les
hlt
in
jge
test
adc
cld
push
leave
pop
mov
outsb
out
ficomps
sub
inc
out
imul
fdivrp
int3
or
sbb
int3
or
cmp
mov
ret
mov
hlt
ret
xlat
jb
aaa
fstpl
or
mov
jae
mov
jl
daa
inc
and
ret
imul
mov
xchg
iret
iret
push
jno
dec
cmc
fcmovu
enter
loopne
pop
insb
popf
cmc
jns
stc
int3
mov
dec
mov
cmc
insl
push
pop
mov
push
cmp
fldcw
out
jge
in
in
sbbb
adc
mov
insb
sarl
mov
mov
push
pop
pushf
imul
sahf
cs
mov
pop
in
mov
bound
dec
lret
cmp
lods
pop
enter
mov
out
loope
lods
out
jl
hlt
test
xor
mov
movsb
pushf
jno
and
fidivrs
push
outsb
lods
inc
ds
or
mov
cmpsl
lods
sahf
push
out
arpl
lret
popf
lds
mov
cld
xor
jge
addr16
stos
movsl
inc
push
xchg
test
pop
pop
scas
xorb
nop
int
adc
or
mov
adc
push
sti
out
orb
gs
xchg
sub
xchg
jg
aaa
pop
sbb
dec
test
jl
pop
imull
or
pop
xchg
cmp
nop
fisttpl
inc
sub
mov
push
sub
mov
std
mov
lret
negl
leave
sub
add
mov
loop
int
sbb
mov
lret
push
jbe
adc
es
sub
adc
inc
daa
loopne
mov
push
repz
jno
sub
test
xorb
mov
pop
fnstsw
ds
jo
mov
xchg
add
push
imul
mov
hlt
or
cmp
jmp
push
movsb
sbbb
arpl
addr16
fimuls
sub
pop
pop
or
ja
mov
pop
dec
out
sbb
and
xor
bound
mov
popa
aad
ljmp
addr16
add
adcl
adc
mov
jbe
fnsave
or
or
stc
js
xor
je
add
test
sbb
stc
cli
popf
mov
push
idivb
andb
mov
addl
jne
cwtl
into
popf
inc
movl
das
pop
sub
lock
push
andb
add
inc
sub
xor
test
repnz
add
add
sub
insl
sti
jbe
xor
or
add
mov
outsb
inc
scas
lds
sub
jmp
mov
out
stos
mov
dec
gs
stc
pop
pushf
inc
rcrb
mov
mov
adc
stos
ret
mov
incl
jmp
lret
xor
addr16
inc
cwtl
and
mov
mov
xor
pop
mov
adc
mov
push
xor
dec
push
mov
shrl
fistpl
adc
jno
pop
sub
push
insb
leave
push
pop
push
pop
xor
mov
fwait
scas
imul
rcll
out
push
sub
jmp
cmpb
jge
fucom
pop
mov
or
aas
cmpsb
sbb
mov
dec
repz
jae
dec
mov
add
cmp
sub
dec
mov
pop
test
sbbb
lock
push
ja
push
cmp
ja
mov
mov
sbb
adc
shlb
sub
bswap
mov
xchg
call
loop
or
test
lahf
push
mov
cmp
test
mov
jne
cs
or
cltd
adc
pop
iret
bound
push
popf
mov
insb
ljmp
mov
out
enter
mov
lods
int
pop
xchg
push
and
and
cmp
xorl
ss
cmp
cmp
inc
stos
loopne
loopne
sbb
decl
jbe
and
inc
inc
mov
in
push
lds
outsb
shlb
push
aam
out
lahf
sub
xchg
imul
mov
ds
movsl
add
lods
jno
jae
out
xchg
mov
jle
shlb
mov
testl
test
sbb
fimull
jmp
pop
popf
sti
add
out
and
pop
rorl
dec
dec
inc
scas
sub
mov
xchg
xchg
xchg
mov
iret
sti
add
cmp
jno
dec
insl
mov
mov
iret
mov
ret
call
sbb
dec
push
mov
adc
xor
jge
in
push
mov
scas
shrl
sub
or
jns
mov
pop
das
mov
enter
xor
xchg
shrb
add
cs
xor
cmp
pop
ds
inc
sbb
cmpsl
push
xchg
xchg
sti
fwait
mov
sbb
les
imul
es
outsb
dec
out
data16
xorl
repz
mov
cmp
aaa
ret
or
out
rep
sbb
dec
pusha
mov
test
jb
aaa
andl
jge
inc
or
outsl
movsb
popf
imul
mov
xchg
loopne
in
scas
iret
in
inc
add
dec
bound
and
cltd
sbb
sub
vpshld
aas
pop
xchg
cmpsb
xorl
sbb
nop/reserved
cmp
add
ss
mov
fstl
int3
xchg
fadd
iret
mov
sti
adc
iret
frstor
mov
lret
cmp
jle
push
aaa
pusha
lcall
jge
mov
outsl
test
jl
inc
sahf
add
fidivs
shll
xor
push
pop
pop
sbb
roll
add
lea
fcomps
inc
lahf
lods
and
jo
int
repz
jmp
pop
enter
testb
dec
scas
imul
popa
jb
ret
ja
adc
iret
arpl
sbb
jbe
cli
sahf
inc
int3
mov
enter
ror
addr16
jp
adc
inc
mov
repnz
pusha
mov
inc
cli
mov
pop
lods
call
icebp
push
lcall
xchg
das
xlat
rorb
fidivl
pop
fdivs
ret
sub
xchg
adc
mov
cmp
xor
mov
lret
mov
mov
xchg
fnstsw
lret
adcb
mov
jl
shrb
adc
jmp
cmpsb
mov
cld
popf
add
dec
pop
and
jbe
push
fidivrl
mov
imul
mov
subl
inc
sar
gs
fs
ljmp
and
cld
shl
and
mov
mov
jge
inc
add
pop
xchg
cli
bnd
hlt
lock
lret
push
int
mov
inc
pop
inc
push
pop
inc
lret
bound
popa
stos
sub
push
arpl
or
ficoml
mov
out
jno
test
sub
jg
in
enter
adc
clc
pop
fiadds
popl
test
cmc
adc
add
out
pop
jno
mov
mov
xchg
xchg
pusha
cmpsb
inc
push
fisubrl
daa
sbb
addr16
jo
sahf
xor
or
test
inc
cmp
push
or
fdivrs
fldt
cli
jge
movsb
jl
scas
and
outsl
xchg
fs
push
fcmovnb
es
stos
test
std
fists
aad
fsubr
cmp
pop
mov
xchg
popa
fcomp
imul
or
in
popa
push
dec
mov
test
out
aad
inc
aam
out
mov
adc
xchg
mov
mov
mov
ljmp
insb
or
xor
xor
out
xor
pop
mov
and
mov
jecxz
and
xlat
xlat
lret
inc
fstps
inc
cmc
dec
int
mov
jecxz
out
rorl
dec
xchg
cmp
mov
xor
mov
icebp
icebp
pusha
stos
sbb
int3
jae
fdivrs
mov
pop
arpl
dec
and
out
mov
sahf
orl
cwtl
and
sarl
xchg
sbb
call
dec
push
inc
daa
mov
pop
out
adc
jg
pop
jae
test
xor
sbb
std
dec
push
lcall
cmpsb
pusha
jnp
dec
or
xchg
xor
cmp
mov
mov
loope
and
inc
mov
ficoms
inc
mov
enter
std
push
xor
mov
sub
faddl
repz
inc
mov
jns
hlt
mov
dec
loop
sti
outsb
jl
mov
jp
add
dec
mov
cltd
and
lods
lods
mov
mov
pop
pushf
cmp
mov
ljmp
mov
mov
mov
mov
add
stc
push
gs
das
cmp
jecxz
jg
mov
sbb
jmp
aam
pop
mov
and
call
xchg
pop
pop
jno
gs
sub
sub
movsb
push
insb
inc
jle
loope
mov
and
dec
shrb
fnstenv
cltd
mov
adcb
daa
clc
push
or
clc
pop
outsl
sbb
into
sub
bound
call
fists
rorl
cmc
jo
pop
hlt
pop
mov
mov
fidivrs
xchg
sbb
pop
inc
cmpsb
hlt
cmpsb
sti
inc
ljmp
cs
xchg
enter
mov
and
pop
addr16
scas
lret
addr16
hlt
mov
movsl
add
xor
jae
push
xchg
xchg
scas
pop
addr16
shr
dec
jnp
jb
sar
jge
mov
inc
xlat
jmp
pop
xchg
andb
movsb
push
add
das
mov
push
jl
add
xchg
xlat
lcall
nop
lahf
or
insb
mov
sub
sbb
out
inc
in
jo
rcr
jnp
das
es
sbb
aaa
outsl
adc
xchg
mov
hlt
add
lods
dec
les
mov
outsb
outsl
ficomps
jb
inc
arpl
fldenv
iret
inc
jno
push
cmp
push
lock
mov
ss
mov
add
outsl
inc
xchg
pop
cmpsl
inc
mov
cltd
mov
sbb
sub
lods
jno
jl
add
sahf
test
popa
cmpsl
mov
and
adc
jmp
pusha
xchg
dec
nop
je
cli
push
mov
ret
push
inc
adc
ror
mov
jge
add
dec
and
bound
mov
xor
dec
pop
pop
cld
pop
xchg
ss
push
pushf
test
cs
out
lahf
mov
imul
cmp
sub
shrb
push
pushf
add
out
adc
xchg
sbb
add
fimuls
and
mov
xchg
aaa
mov
dec
sbb
outsl
inc
dec
mov
push
xor
xor
lahf
pop
lret
je
int
std
xchg
fs
pop
ficomps
rolb
scas
cmp
shl
aad
pop
fwait
jge
test
pusha
call
in
push
or
jbe
jg
xchg
sti
lock
insb
push
push
jo
and
rorl
push
xchg
out
or
je
mov
cmp
je
or
out
shrb
dec
inc
or
pop
dec
pop
les
iret
mov
push
xchg
or
fisubs
or
dec
imul
jo
jbe
aam
dec
dec
int
sub
sub
jne
sub
insb
xchg
lock
into
push
push
jecxz
lcall
xchg
cwtl
xchg
mov
pop
movq
rcrl
pop
std
xchg
pop
inc
js
movsb
stos
xchg
es
jo
out
push
fnstcw
cwtl
enter
sahf
out
mov
call
sub
icebp
iret
js
jecxz
arpl
arpl
xor
add
xchg
push
and
sbb
lahf
or
sub
jbe,pt
jo
adc
add
fldl
imul
lahf
test
mov
inc
inc
mov
imul
mov
dec
xor
add
ret
adc
sbb
imul
subl
fimull
fildl
loopne
in
ret
push
stos
jno
iret
sbb
mov
cli
bound
setb
inc
ss
and
clc
or
ss
sbbl
lods
shlb
sub
xchg
sub
jb
subl
repz
push
sub
pusha
popa
shll
mov
sbb
inc
sti
int3
inc
jae
loopne
mov
dec
push
test
and
fistpll
jmp
adc
enter
cltd
ret
mov
sub
sub
xchg
aam
xchg
jle
sub
nop
add
fwait
test
sub
mov
imul
jp
sbb
sub
dec
inc
pusha
lds
push
jp
pop
cltd
mov
and
sbb
fbstp
xchg
mov
inc
insb
pop
pop
fcomi
enter
or
mov
test
out
sbb
arpl
shlb
jnp
inc
jb
mov
sbb
test
sbb
std
ret
mov
pop
mov
xlat
shl
sti
mov
cltd
lods
shlb
test
or
sbb
sub
jae
jl
aam
inc
inc
mov
jmp
pop
gs
pop
mov
pop
pop
xor
and
ljmp
and
popa
fsubp
pop
test
outsb
xor
mov
ffreep
mov
pop
decl
or
jnp
pop
or
divb
in
cmp
pop
test
xchg
cmp
pop
stos
aaa
sub
lcall
push
push
decb
jnp
test
fisttpll
pop
and
shll
aam
pushf
mov
in
dec
push
shll
inc
push
in
cli
daa
stc
sahf
mov
fdivs
call
cmp
jae
mulb
cmp
cmc
mov
gs
in
jne
mov
xchg
ret
ja
fbstp
cmp
xchg
inc
and
out
jno
into
xlat
das
cmp
lahf
pop
add
pop
adc
aas
test
cs
out
add
cmp
jmp
xor
into
js
pushf
call
mov
inc
shll
pop
mov
mov
test
sbb
outsb
push
iret
or
rcll
scas
pop
push
frstor
fmuls
xchg
add
sub
nop
xorb
int3
jp
or
std
popl
mov
mov
lods
cmpsl
iret
sarb
dec
sbb
adc
xor
jecxz
lods
xor
mov
testl
outsl
sub
std
pop
mov
scas
test
dec
punpcklwd
std
xchg
and
pop
pop
adc
jns
mov
and
addl
push
add
repz
mulb
xchg
mul
lahf
cmp
aaa
inc
xchg
or
or
mov
dec
jns
leave
add
pop
mov
sub
pop
lods
xor
sub
into
setp
mov
mov
mov
jg
mov
rolb
push
mov
es
cmp
add
aas
jne
push
in
mov
scas
stos
jmp
pop
mov
xchg
inc
xor
out
jle
add
mov
in
dec
inc
test
inc
les
jo
jnp
or
fbstp
aaa
in
push
rcll
cmpsl
jge
add
je
fimuls
pushf
fs
into
push
lret
jnp
add
push
scas
sbb
test
jge
xor
push
addr16
push
push
popa
sub
jo
jno
mov
stos
and
pop
push
sbb
cmp
or
pop
sub
incl
mov
out
ja
mov
xchg
int3
sbb
iret
jnp
sti
sub
stc
inc
jecxz
out
cli
inc
std
lret
loopne
jb
sub
addr16
and
dec
mov
addr16
sub
sub
mov
gs
sub
in
xor
xor
movsb
sub
pop
sbb
adc
roll
pushf
xlat
shlb
loop
int3
push
pusha
and
or
adc
es
lret
add
stc
loope
mov
in
icebp
mov
imul
scas
cmpsl
or
push
jnp
jg
movsb
xor
test
je
xor
sub
jecxz
and
out
or
cmpsl
pop
std
xchg
push
leave
ja
jp
mov
gs
clc
cmp
push
mov
push
stos
xchg
scas
xor
loope
outsl
je
pushf
pop
pop
sbbl
subb
iret
pop
push
inc
mov
test
adc
int3
lock
dec
lcall
fdivrl
inc
mov
mov
mov
dec
xor
in
push
popa
mov
adc
ss
push
icebp
sbb
ss
add
loopne
test
fiadds
mov
cmp
push
loopne
lret
adc
pop
jnp
mov
mov
scas
arpl
jecxz
adc
mov
xlat
aad
inc
ret
dec
popf
adc
ds
add
inc
test
cli
jmp
xchg
mov
gs
add
icebp
push
and
push
fadd
add
jle
arpl
sti
dec
pop
mov
adc
cltd
add
xor
jb
adc
addr16
jne
cmpsb
mov
jns
mov
push
loope
insl
xchg
push
jl
pop
jb
aam
jbe
or
dec
sahf
push
push
mov
push
test
cmc
and
lea
cli
adc
xor
cmpsb
test
add
xor
jge
cmpsl
fldl
push
push
push
repz
mov
jge
jecxz
dec
out
insl
test
imul
cmp
xchg
sbbl
lods
sub
mov
jno
icebp
jb
gs
rolb
pop
mov
push
push
xor
jbe
xor
fs
pop
scas
lds
or
sub
orl
sub
mov
jl
out
sub
rcr
mov
or
xor
inc
repnz
adc
mov
repnz
xor
out
outsb
rorl
bound
mov
adc
nop
pusha
dec
add
orb
frstor
push
sbbl
test
adc
jne
insl
jp
or
lods
cmpsb
cmp
sbb
mov
xchg
add
cmp
push
mov
or
adc
sbb
jbe
enter
push
out
aam
mov
mov
fidivrl
sub
aad
rorl
mov
add
push
mov
std
imul
inc
dec
cmpsb
popl
ja
add
stc
push
mov
adc
and
lcall
pop
pop
mov
dec
add
fdiv
cmc
or
mov
mov
xchg
mov
cmp
mov
mov
add
adc
xchg
pushf
cmp
iret
jbe
ja
imul
sub
pop
sub
mov
mov
and
pop
shll
in
jno
or
mov
jns
sbb
mov
push
mov
add
mov
sbb
inc
sub
mov
cmp
cmpsb
mov
xchg
lea
mov
jo
scas
push
les
adc
or
lret
in
jmp
sub
lea
pushf
ljmp
cmp
push
movsb
mov
test
and
cmp
movsb
sub
pop
xor
outsb
cmc
pusha
scas
icebp
adc
inc
or
jmp
ljmp
dec
xchg
loop
adc
and
lret
or
shll
and
mov
jno
jo
lods
jmp
out
ret
inc
cwtl
mov
arpl
xlat
cld
mov
sbb
rcr
mov
in
mov
pop
lock
or
loope
xchg
fisubrs
cmp
iret
lret
mov
popa
pop
mov
cld
mov
lea
inc
insl
lcall
call
mov
cmpsb
jb
ja
in
inc
lods
xchg
adc
movsl
fdivrl
dec
sub
loop
mov
test
pusha
pop
and
stos
sbb
out
hlt
negl
out
clc
mov
movzwl
dec
mov
push
xchg
bound
sub
push
jb
addr16
int3
inc
ljmp
and
sub
xor
mov
aas
mov
push
hlt
xchg
insl
clc
mov
xor
inc
xorl
cmp
mov
push
stc
cmp
fwait
push
inc
fistps
jno
leave
dec
sahf
cli
pop
jns
xor
daa
not
mov
jae
mov
jl
outsb
psubusw
cld
push
test
push
movsb
dec
mov
out
adcl
scas
popa
cli
jo
cmp
push
inc
movsb
mov
or
js
sar
repnz
pop
aaa
fimuls
mov
pusha
jp
imul
cs
rcl
aam
sbb
popa
mov
cwtl
xor
jecxz
inc
lcall
jp
pop
negb
adc
rorb
ret
adc
loopne
stos
mov
mov
jle
sbb
jle
mov
ret
pop
jmp
mov
add
pop
mov
test
cs
popf
out
xor
loope
xchg
cmc
and
in
cmp
jb
popf
aad
in
daa
mov
xlat
jle
lods
daa
push
mov
cld
leave
or
inc
mov
lods
push
mov
movsb
out
mov
pop
and
dec
sbb
pop
or
lds
lret
inc
pop
xchg
adcb
cli
cmp
cmp
jp
fdivrs
mov
jo
inc
xchg
jb
fidivrs
jp
scas
mov
jns
mov
and
adc
mov
jp
daa
sbb
lock
inc
jmp
mov
inc
rcrl
jge
cmc
adc
addr16
in
outsl
stos
int3
inc
arpl
negb
test
daa
pop
movb
in
in
lahf
mov
test
push
pop
addl
push
dec
loope
mov
ficoml
adcb
xlat
adc
std
pop
mov
loopne
lret
sub
push
mov
mov
hlt
sbb
out
in
jmp
jmp
cltd
xchg
pop
adc
movsl
out
loop
mov
aaa
xlat
inc
aas
mov
sbb
pop
je
push
stos
jo
div
sub
cmpb
jbe
xor
add
loopne
testl
lcall
cmp
cmp
aaa
and
sbb
jae
inc
inc
push
test
sbb
popf
outsb
pusha
mov
fcos
out
pop
test
popf
cmpsl
pusha
and
sbb
push
dec
inc
push
aad
fimuls
ja
add
lods
lcall
jnp
filds
sbbl
sub
aas
mov
sub
sbb
mov
mov
pop
or
xchg
sbb
outsb
jecxz
inc
test
test
in
movsl
mov
xlat
gs
pusha
scas
lock
repnz
xor
jno
icebp
or
out
and
lret
sbb
mov
jge
sahf
popa
mov
repz
cmpsl
mulb
mov
pop
mov
ret
shlb
loopne
sub
fwait
lock
cmc
mov
arpl
dec
aas
adc
pusha
mov
aam
sub
fadds
js
dec
or
push
inc
loopw
xchg
mov
loope
mov
subb
leave
call
cmc
lods
cmp
mov
fdivl
dec
nop
push
and
jle
inc
or
mov
out
sbb
push
mov
mov
add
jmp
inc
sub
jbe
inc
scas
fsubrs
or
push
pop
pop
shrl
jge
lods
xchg
xchg
call
fucomip
jae
loope
das
jns
sbb
ss
les
jg
es
mov
dec
xchg
add
rcrl
push
xchg
sub
ja
in
fstps
sti
enter
nop
stos
sub
pop
mov
iret
lea
add
sub
insb
sbb
push
pop
sahf
gs
gs
mov
addr16
add
or
addb
decb
pop
fnstenv
imul
mov
pop
test
sbb
push
add
inc
adc
mov
push
loope
inc
pop
ja
loop
arpl
fdivrs
mov
jmp
nop
repnz
ret
jmp
loop
scas
or
popl
scas
and
sets
fsubl
cmc
fcompl
xor
or
je
inc
mov
int3
scas
add
jnp
jmp
js,pn
xchg
fucomip
jmp
jmp
in
push
sub
movsl
out
shl
arpl
add
add
sub
pop
dec
int3
jmp
rorl
out
cmp
push
mov
cmpsl
sub
lock
call
ja
or
sarb
jno
jg
dec
insl
inc
loopne
mov
inc
sbb
sub
inc
fldcw
ss
sbb
push
jp
and
ljmp
sahf
push
call
sub
clc
adc
push
inc
lcall
xchg
inc
xchg
fmuls
inc
or
bnd
rorb
loop
inc
repnz
or
push
dec
rcl
inc
inc
push
add
mov
xchg
dec
in
push
push
in
adc
imull
add
repz
pusha
shll
inc
and
fs
ret
pop
pusha
pushf
add
cs
jl
pop
mov
outsb
push
xorb
dec
in
add
daa
dec
mov
test
xchg
icebp
inc
push
pushf
dec
push
cmp
and
xor
xor
push
push
mov
jo
lret
dec
add
xorb
out
cmp
bound
and
xchg
leave
nop
out
popf
test
ds
adc
mov
iret
mov
inc
xlat
mov
inc
cwtl
and
mov
mov
sahf
push
adc
inc
aas
push
gs
xchg
test
jmp
sub
or
movsb
jb
decb
or
repz
addr16
pushf
mov
fldl
iret
mov
movsb
mov
leave
inc
gs
inc
mov
fdiv
pop
inc
sub
arpl
xchg
push
arpl
insb
mov
adcl
out
cltd
rcll
and
xchg
mov
dec
xchg
bound
jg
enter
mov
dec
sub
aad
out
add
cmp
push
lock
dec
or
cs
or
lret
rorl
xchg
dec
xor
jno
xlat
xcrypt-ctr
cmpsl
ficomps
xchg
push
add
ret
jae
inc
add
sub
inc
aad
dec
sub
sbb
and
jl
mov
mov
push
imul
mov
testb
pop
mov
ss
outsb
in
repnz
sarl
mov
add
lret
or
push
int3
push
daa
inc
outsb
repz
push
mov
shlb
das
pop
cmpsb
jns
js
jmp
je
xchg
insb
mov
fwait
insb
add
test
lahf
and
fbstp
loopne
xchg
addr16
xchg
and
lahf
jbe
negb
pop
test
dec
add
lcall
xchg
or
ljmp
mov
pop
and
lret
imul
xor
xchg
jno
push
in
imul
aas
dec
outsl
in
jo
pop
pushf
ds
pop
repnz
lock
into
fnsave
xchg
sbb
inc
repnz
adc
sub
in
mov
jae
jae
andl
adc
cmpsb
and
push
rcrl
in
fisttps
xor
subl
aam
jno
mov
cltd
movsl
xchg
arpl
and
push
out
lods
push
loopne
push
push
xor
inc
inc
sbb
lret
repnz
imul
jmp
shll
dec
scas
lcall
movsb
movsl
push
int3
fisttpll
dec
sti
inc
pop
mov
jge
push
jbe
scas
cmp
sbbl
pop
lret
and
call
mov
push
and
loop
push
test
sub
sahf
rcrb
cwtl
sbb
xchg
dec
orb
xchg
or
arpl
fildl
mov
pushf
test
pop
xor
lret
jge
jae
dec
inc
and
xor
mov
aam
cs
pop
jge
stc
lahf
dec
push
pop
dec
addb
ficoml
cld
dec
mov
pusha
and
js
xchg
dec
cmpb
test
adc
cmp
and
bound
imul
jae
cmpsl
push
shll
pop
stos
ljmp
cmp
out
jb
cmp
add
cli
dec
pop
pop
mov
es
push
scas
sahf
adcb
ret
xor
cmp
cltd
arpl
jl
mov
sahf
cmp
pop
xor
movsl
inc
daa
insb
jb
sub
push
mov
divl
enter
int
pop
cmp
sar
and
inc
xlat
out
repz
jns
pop
pop
or
inc
or
xor
sub
pop
leave
inc
addl
add
sysenter
stos
aad
out
mov
scas
aas
mov
roll
lods
mov
aaa
sub
and
mov
rol
in
cmp
frstor
sub
pop
fcmovne
fucomp
cld
dec
call
adc
mov
ja
divb
sub
loop
jns
fisubl
out
mov
call
ret
sarb
and
sahf
pop
mov
push
cmp
pop
dec
lcall
call
js
pop
jno
push
enter
and
addr16
adc
xor
and
inc
lea
xchg
dec
mov
das
pop
loop
addb
dec
push
lods
call
mov
scas
test
mov
mov
sbb
popf
push
cmp
in
aam
jp
in
pop
and
ret
nop
mov
and
jecxz
inc
orb
xchg
mov
gs
and
and
pop
jns
jbe
mov
xor
adc
inc
loope
aam
mov
rclb
xchg
xchg
xchg
mov
xor
adc
add
loop
call
clc
mov
xchg
xorl
cmp
or
hlt
lods
inc
xlat
push
out
xchg
sbb
push
pop
adc
pop
inc
repnz
out
pop
sbb
shr
xor
push
mov
inc
iret
add
jne
xchg
pop
sbb
dec
mov
test
sti
pop
jp
dec
xlat
int
fstpl
inc
mov
divb
mov
xchg
push
inc
loopne
fisttps
cs
lret
mov
jae
sti
test
xchg
cmp
fldl
mov
xorl
dec
lods
sub
in
cmovne
testb
rorl
mov
es
ljmp
fcomps
fdivrs
adc
addr16
subl
mov
mov
cmc
mov
pop
sti
jp
or
cld
cmc
lcall
cmp
test
hlt
sbb
mov
fcomps
jne
and
cmp
sbb
and
cld
xor
pop
push
nop
ja
addr16
loop
movsl
lret
jbe
jl
ret
push
daa
sub
nop
cmp
data16
mov
mov
mov
pop
sbb
bound
out
test
or
jg
out
push
inc
fwait
jns
test
fsubrs
add
xlat
test
test
jl
xchg
in
dec
pop
int3
sti
and
jns
cmp
xchg
push
fcmovnb
stc
in
pop
dec
clc
mov
lcall
jle
popf
add
stos
xchg
pop
std
cmp
inc
repnz
sub
push
aas
xor
cmp
dec
inc
outsb
js
mov
add
fisttpl
push
pop
test
stc
aaa
pop
call
movsb
fimuls
fdivp
mov
lcall
stos
inc
cmp
sahf
arpl
push
adc
das
jnp
lret
mov
dec
stos
mov
dec
jecxz
inc
mov
jae
in
lret
aad
rcrl
xchg
cld
inc
cmpsb
hlt
aam
aad
mov
cmp
push
jge
inc
add
add
jmp
mov
fwait
sti
inc
cmp
mov
loopne
push
in
icebp
mov
mov
arpl
pop
dec
sarb
out
adc
dec
rcr
xor
jne
add
xchg
fs
test
inc
xchg
outsb
and
aad
les
in
sub
stos
ja
or
pop
ja
mov
call
outsl
jns
jecxz
jns
loope
jle
mov
or
push
leave
mov
scas
fbstp
cmp
ret
pop
dec
test
cmpl
jg
mov
ja
hlt
lock
push
insl
lock
cld
and
mov
cld
dec
cmc
inc
imul
mov
sub
inc
jo
mov
es
pop
adc
scas
push
jge
aad
push
ljmp
call
cli
jp
and
pop
fisubrs
mov
sahf
pop
fsubrp
mov
outsb
adc
test
pusha
fsubp
inc
push
test
push
lods
mov
cmp
sub
popf
jne
sbbb
flds
add
imul
mov
and
push
call
mov
cmpsb
out
scas
fldl
inc
add
test
int3
cltd
cmc
enter
cwtl
leave
inc
mov
or
inc
test
aad
mov
int
xor
cmp
jl
xchg
mov
pop
mov
pop
push
add
xchg
sub
dec
pop
out
mov
cli
test
adc
gs
mov
adc
pusha
adc
dec
add
not
xchg
add
push
cltd
aad
out
add
lahf
pop
andb
add
add
into
pop
xor
push
mull
push
xor
mov
mov
cmp
jae
sub
or
neg
cmc
pop
push
sbb
and
xchg
push
scas
test
mov
movsb
loope
jle
rcrb
mov
orb
or
pop
xor
dec
sbb
add
jle
jae
nop
test
scas
xchg
push
xchg
sbb
mov
xchg
cmpsb
sub
repnz
inc
shl
fstpt
jge
dec
inc
lods
pop
dec
jg
push
push
inc
fldt
cmp
xchg
pushf
cmpsl
cmp
pop
jle
sub
dec
sub
es
adc
aad
loopne
adc
orb
icebp
test
xor
cli
inc
fisubs
out
fwait
add
aam
mov
mov
negl
or
sbb
clc
cmp
xchg
mov
or
clc
cmp
cmp
in
mov
push
mov
icebp
xorl
adc
or
cmp
pop
cmove
cmp
mov
mov
lea
js
mov
and
sbb
fnsave
push
xchg
adc
pop
clc
jo
mov
push
pop
clc
daa
xor
jl
popf
test
fbld
dec
pop
jg
nop
xor
mov
sbb
mov
les
sub
and
iret
xchg
jge
dec
inc
shl
iret
cli
xor
add
call
pop
sahf
cmc
xchg
std
inc
xor
inc
arpl
ror
sub
dec
out
cld
push
dec
mov
xor
or
or
and
test
xchg
call
pop
push
pop
notl
xchg
insl
jp
in
xchg
nop
in
jns
imul
mov
clc
es
lock
mov
sar
enter
or
cmp
stos
addr16
les
jecxz
xchg
xchg
in
es
xor
lods
mov
nop
push
into
cltd
jno
jo
pop
sbb
sbb
rcrl
fxch
sbbl
adc
negb
adc
adc
das
popa
into
gs
lock
subb
push
jne
inc
loop
clc
in
iret
dec
fiadds
pushf
dec
dec
xchg
aam
adc
lods
xor
shlb
in
jge
aaa
aaa
mov
inc
int3
inc
into
cmp
mov
or
leave
lret
movsb
inc
rcl
and
insb
pop
dec
and
mov
adcl
pop
lea
pop
leave
or
dec
lods
mov
cltd
cmc
insb
mov
ja
daa
mov
in
or
cmp
lods
jl
fidivs
and
test
xchg
cmp
addr16
jae
dec
aam
inc
cld
add
push
push
aam
jl
or
xor
jo
decb
sbbb
push
sbbb
add
add
inc
add
arpl
mov
push
cmp
shll
push
push
scas
subb
loopne
movsl
out
je
out
sub
fildll
es
jno
fisubrl
xor
pop
add
xchg
test
bnd
mov
stos
scas
mov
divl
cltd
push
filds
rcl
jnp
xor
mov
and
je
rcrl
xchg
clc
pop
xor
xor
lds
add
roll
popa
inc
cmp
and
mov
sub
push
in
scas
lahf
shl
faddl
jae
xor
imul
sbb
or
mov
and
lock
mov
lret
sbb
fdiv
xchg
xor
sub
pop
sub
xchg
lret
stos
sub
ss
lock
mov
stos
push
icebp
out
push
cld
mov
loop
pop
insb
out
mov
enter
icebp
out
fdivl
mov
les
sarb
mov
pop
or
pop
xor
inc
popf
lret
in
pop
or
cmpsb
scas
into
pop
lods
cmpsl
sub
xor
jnp
iret
add
lods
pop
fnclex
dec
inc
pop
shll
mov
lock
mov
dec
movsb
lods
mov
in
jl
cwtl
mov
add
inc
mov
pop
test
addr16
mov
insb
lret
mov
out
sub
xor
mov
jge
dec
jno
ja
xor
push
and
sbb
dec
dec
pop
in
pop
or
lds
push
inc
movsb
cli
mov
add
js
and
pop
push
sti
incl
in
mov
pop
out
mov
repz
cwtl
sub
andb
cmp
xor
les
xor
pop
push
stos
lods
mov
inc
pusha
xor
cmp
mov
nop
mov
lahf
cwtl
dec
add
mov
mov
jbe
enter
xor
jns
and
orl
inc
xchg
cmp
in
push
iret
dec
int
push
sbb
cld
into
repnz
jns
xchg
cmpsb
jb
and
xchg
jno
or
sti
jne
je
aas
mov
push
pop
or
sub
icebp
loope
or
nop
gs
lret
mov
mov
mov
pop
mov
outsb
rolb
pop
test
mov
cli
xchg
test
adc
sub
jae
adc
adc
mov
xchg
pusha
sti
lret
sbb
xchg
mov
adc
incl
lret
cli
mov
dec
ljmp
inc
push
dec
jle
aad
xor
fdivs
ret
ljmp
sbb
out
repz
and
stos
mov
mov
stos
popa
in
inc
std
inc
sub
out
inc
loope
jp
and
test
push
aas
into
js
add
jnp
dec
inc
cmp
push
fsubrs
xor
adc
dec
adc
and
or
ljmp
push
shll
add
inc
sub
popa
sbb
or
xchg
imul
cmpsb
xor
push
mov
test
movsl
in
loop
pushf
pop
mov
mov
inc
cmp
divl
cmp
loope
pop
shlb
enter
repnz
jge
or
insb
ljmp
push
out
addl
xchg
fisubs
lahf
je
stc
cmp
sbb
jge
cli
nop
sub
xchg
popa
loopne
fldt
cmc
push
mov
pop
es
inc
jns
cmp
inc
jmp
mov
add
test
xor
xchg
movsb
sbb
xchg
lahf
or
jge
cli
mov
lcall
fdivl
movsb
cld
out
and
xchg
cmp
lock
dec
fisttpl
xor
shll
sbb
dec
nop
or
jns
and
rcll
lret
sub
xlat
mov
mov
addr16
dec
cmc
hlt
cwtl
test
xor
das
cmp
testl
stos
pop
cwtl
add
bound
lcall
int
in
or
inc
add
pusha
lcall
xchg
pop
cmp
jo
xor
xor
cld
xor
dec
or
lahf
fsubrp
loop
fisubs
xchg
pop
sahf
ret
dec
or
fs
cld
pop
jecxz
je
xchg
sbb
or
mov
pop
mov
and
add
xlat
inc
adc
rclb
xchg
fstpl
movsb
pop
inc
jns
addr16
mov
mov
pop
enter
cmp
pop
das
mov
out
sub
inc
mov
sub
and
cmp
jae
lods
and
and
mov
test
lds
jp
adc
fwait
scas
stos
add
dec
jb
outsl
mov
inc
jns
mov
and
cmpsl
js
dec
xor
mov
mov
ljmp
pushl
arpl
out
es
cs
inc
or
shlb
pmullw
push
add
test
sbb
enter
mov
xchg
cld
add
xor
cltd
enter
cmp
mov
push
scas
and
lahf
scas
mov
xor
loopne
enter
mov
jbe
test
lds
jae
shll
mov
std
adc
inc
push
xchg
shrl
mov
cmp
repnz
cmp
pushf
cmpsl
push
push
push
push
pusha
or
pushf
add
out
dec
pop
jae
movsb
les
or
mov
push
and
mov
pop
mov
cmc
xchg
daa
fs
iret
test
or
pop
lret
mov
push
pop
mov
mov
sub
icebp
push
fisttpl
jg
pop
leave
xor
sbb
or
aas
sub
mov
jp
mov
data16
subb
cltd
mov
lahf
mov
adc
cmp
rcll
repnz
or
mov
mov
test
mov
cmp
inc
imul
paddsb
pushf
xor
push
ja
pusha
repz
push
cwtl
push
inc
inc
mov
dec
out
cltd
mov
xchg
ss
out
mov
pop
int3
cmp
faddp
popa
imul
and
xchg
dec
in
test
enter
mov
gs
pop
add
push
repnz
dec
mov
enter
into
xor
xchg
repz
dec
pop
jae
mov
pop
mov
xchg
lahf
inc
mov
ficompl
push
subb
adc
and
xor
movsb
mov
and
lret
rep
mov
es
jbe
cli
int
sbb
mov
cmp
jmp
inc
out
pop
and
jle
inc
out
insb
add
mov
outsl
repz
and
and
dec
add
push
lcall
push
pop
mov
xor
sarl
pusha
and
mov
mov
imul
enter
cwtl
arpl
data16
insl
inc
ss
into
fucom
push
test
pop
sahf
jle
or
push
lcall
das
mov
mov
xor
xor
in
das
insb
mov
add
pushf
pop
push
repz
aaa
xor
sbb
arpl
and
sti
mov
mov
pop
mov
xor
push
dec
in
xor
lock
or
loopne
or
inc
cmp
es
mov
sub
cld
xchg
mov
mov
sbb
sbb
loopne
fcom
or
sbb
cld
add
test
mov
stos
jbe
mov
push
mov
and
dec
cltd
xor
cmp
xor
std
cmp
enter
out
dec
pusha
sub
push
lahf
push
dec
jecxz
fsubrl
pop
inc
jo
or
movsl
out
jge
scas
and
add
jo
jmp
pop
aaa
jge,pt
into
popf
xor
out
push
enter
test
mov
ja
inc
add
aaa
add
lods
iret
rorb
xchg
ficomps
ret
pop
or
sub
cmp
pop
inc
repnz
movsl
rdpmc
mov
xchg
xchg
ss
sar
dec
fs
or
jg
mov
test
cmp
xlat
pop
mov
and
cmpsb
and
cmp
cmp
adc
push
jae
or
mov
pop
add
mov
scas
inc
xchg
inc
rorb
mov
mov
loopne
mov
pop
sub
stos
lret
in
jnp
bound
out
inc
ret
dec
and
stc
shl
ja
fstpt
fidivs
sub
push
add
aaa
adc
pop
ffreep
std
out
dec
rcll
movsl
xchg
push
cmp
push
xchg
pop
add
jp
xchg
out
jo
cmc
pop
movl
aas
ja
insl
cmp
jno
repz
ret
xlat
xlat
data16
fs
adc
jp
jne
dec
test
fs
das
mov
out
dec
mov
pop
xchg
repnz
hlt
dec
or
cld
jne
jno
xchg
inc
insb
xor
outsl
fsubl
sbb
test
mov
test
add
inc
pushf
sub
push
in
xor
mov
xchg
add
mov
or
dec
mov
out
jnp
stos
push
mov
pop
test
xchg
push
cmpsb
ror
loop
out
sub
pusha
xchg
push
pop
dec
scas
pop
sbb
inc
jg
mov
mov
mov
clc
lods
sub
add
imul
xlat
add
xchg
xchg
in
xchg
mov
xlat
jb
hlt
add
sub
cli
push
fldenv
repnz
sub
scas
jns
ret
push
sub
aad
mov
xor
ret
dec
cmp
stos
rcll
aad
adc
mov
ljmp
lcall
adc
andl
sub
rclb
lcall
mov
in
sahf
xchg
mov
push
add
rcll
xor
mov
inc
jb
xor
scas
cmp
sbb
js
jns
jnp
test
cmp
mov
jmp
and
movsl
dec
dec
out
outsb
sub
mov
lods
add
dec
mov
mov
cltd
mov
adc
jge
or
adc
push
stos
int
xchg
dec
dec
jle
push
xchg
cltd
fsts
adc
mov
jae
pop
mov
add
add
int3
dec
lock
adc
push
pop
clc
aaa
ds
lret
mov
clc
in
les
pusha
inc
rclb
cmp
movsl
add
sub
pslld
xor
push
push
or
stc
xchg
and
ss
scas
push
aaa
add
mov
pop
inc
movsb
lock
repz
in
push
jecxz
pop
xor
xor
xchg
inc
or
and
divb
sarl
fucomp
jge
loopne
sbb
subl
sbb
or
sar
add
ret
dec
xorb
rol
insb
push
pusha
scas
xor
xor
mov
jno
push
xchg
adcl
imul
xchg
jmp
popf
adc
cmp
in
add
pop
in
fldcw
xchg
jmp
push
test
lret
pop
jge
lret
cmpsb
xchg
adc
pop
hlt
outsb
jne
movl
mov
pop
xorl
jp
vmovaps
mov
outsb
mov
mov
nop
scas
mov
sti
movaps
or
push
dec
dec
test
dec
rorb
xchg
ss
je
ljmp
inc
push
xor
psadbw
and
insl
test
rorl
sbb
loop
dec
adc
mov
xor
xor
scas
fisttpl
inc
scas
ljmp
mov
les
pushf
mov
mov
mov
push
push
jae
inc
out
sub
mov
pop
in
adc
push
lea
loopne
out
cli
les
mov
mov
jb
pop
jnp
outsb
fst
jbe
push
and
sti
cmp
rclb
iret
mov
inc
int3
clc
xchg
xchg
mov
inc
aas
add
outsb
cld
push
popl
sbb
or
xchg
or
or
mov
insl
xchg
outsl
mov
or
mov
fidivl
mov
jmp
repnz
xchg
add
push
fldl
ret
fdiv
mov
xor
fdivr
sub
clc
xor
jae
fimuls
popf
push
add
mov
pushf
ss
dec
adc
js
scas
dec
testb
pop
and
dec
sbb
mov
ss
test
push
int3
pop
imul
clc
jecxz
stos
in
insb
in
rolb
call
mov
mov
test
adc
andl
adc
and
mov
mov
mov
cmp
movsl
sub
shlb
cli
gs
clc
test
sbb
add
xor
push
mov
imul
inc
loop
mov
mov
cmp
inc
sbb
test
ret
in
aam
dec
pop
mov
jge
dec
test
jns
out
int3
divb
inc
xor
mov
inc
lahf
cmp
push
fists
std
test
mov
add
insl
pop
mov
jae
add
rcl
pop
imul
add
rol
adc
pop
dec
mov
push
ja
xchg
dec
xchg
inc
dec
pop
hlt
inc
jo
imul
stos
sbb
gs
adc
xor
dec
inc
sbb
in
push
lea
test
cmpsl
ror
mov
adc
xchg
sbb
inc
loope
outsb
subl
insb
xor
notb
sbb
pop
dec
hlt
inc
xchg
andl
repnz
imul
jnp
xor
mov
add
pop
pusha
das
mov
or
popa
lods
jb
sahf
mov
and
cmpsl
dec
imul
mov
out
mov
subb
pop
sbb
xchg
mov
aam
lret
adc
jmp
popa
sub
mov
sub
adc
popa
cld
sbb
mov
cmpsl
pop
movsl
mov
in
jae
jne
leave
cli
cmp
xlat
cs
leave
lcall
loop
or
lods
lret
aas
push
xchg
cmp
inc
mov
jp
adc
dec
int
or
out
daa
orl
in
xchg
xor
cmc
mov
adc
dec
call
jo,pt
sub
pop
push
cmp
stos
mov
fldenv
and
mov
cmp
xor
sahf
mov
lcall
repnz
ljmp
xor
cwtl
xchg
ficoml
mov
mov
pop
mov
xchg
xor
xlat
mov
pop
out
ret
pop
pusha
cmp
xor
xchg
xor
and
and
sub
mov
ret
sub
mov
mov
pop
xchg
decl
add
cmpsl
mov
sub
insb
cmpsl
daa
bound
xchg
movsb
ljmp
mov
outsb
aad
mov
call
sub
lods
push
cmp
outsb
movb
leave
mov
adc
sub
cs
enter
pop
dec
push
adc
dec
stc
mov
fcmovu
mov
or
cli
and
dec
xchg
adc
mov
pop
cmpb
ret
mov
jmp
xchg
je
je
ja
lahf
pop
mov
add
mov
push
dec
inc
mov
mov
andb
push
jl
insl
jo
push
add
adc
imul
cs
adc
mov
cmp
pop
cli
popa
pop
push
loope
pop
fs
ljmp
sub
cmp
mov
imul
test
fistpl
mov
and
imul
sbb
fxtract
ljmp
pop
push
shrb
adc
mov
lahf
ljmpw
lahf
out
orb
es
mov
jl
shrl
dec
jae
pop
jno
cmpsb
fnstenv
cmpsl
mov
lods
movsb
loop
cwtl
imul
or
ret
jns
sbb
inc
cmc
or
dec
push
pushf
sbb
adc
sbb
or
cli
sub
arpl
pop
sub
adc
fcmovnbe
xchg
rcrb
rorb
dec
mov
inc
inc
dec
mov
nop
xor
fisubrs
xor
aam
inc
adc
mov
gs
pop
inc
add
sub
gs
pop
iret
and
xchg
out
push
fs
mov
jge
js
cld
jge
mov
insl
push
push
mov
nop
sub
mov
mov
je
xor
mov
cld
in
mov
xlat
or
mov
mov
pop
xchg
rolb
or
stos
pop
dec
ret
popf
push
cmp
loop
cmc
jae
fs
dec
stc
leave
mov
and
jmp
push
pop
pop
aad
aas
lock
es
test
add
add
sbb
pxor
popa
cli
shl
mov
xchg
mov
outsl
mov
sub
or
std
mov
mov
dec
je
pop
mov
mov
xor
cmpsl
sbb
xchg
popa
mov
subl
arpl
pop
mov
aaa
outsb
push
cmovle
pop
xor
out
mov
hlt
adc
icebp
mov
sbb
xchg
ss
pushf
leave
jnp
out
xchg
cmpsb
inc
and
mov
sbbl
cmpb
jle
cwtl
dec
scas
mov
push
inc
cli
jbe
ss
add
jg
adc
loope
push
add
cltd
or
sub
cli
add
sub
adc
inc
xchg
push
enter
cli
or
or
addb
aad
xor
orl
add
lds
bound
repz
push
fwait
lahf
mov
xor
sbb
xchg
cmpsb
inc
pop
fcomps
shl
adc
lea
inc
and
mov
inc
pop
mov
push
mov
dec
cmp
or
add
ljmp
jecxz
js
cmp
outsb
shrb
mov
outsb
xor
cld
xchg
push
out
bound
aas
in
incl
mov
call
inc
mov
out
imulb
pushf
pushf
dec
xchg
or
add
and
add
insb
js
leave
mov
inc
ljmp
data16
push
jb
popf
pusha
mov
arpl
lods
sub
xchg
mov
fsts
jle
sbb
mov
fsub
lcall
inc
sub
pop
stos
mov
testb
std
bound
addr16
sub
sbb
sbb
sbb
adc
pop
pushf
mov
pop
das
mov
and
xchg
and
dec
or
neg
addr16
shll
cmp
mov
popa
mov
mov
xor
ljmp
mov
jg
mov
sub
clc
sub
sbb
movsl
xchg
xor
pop
fdivrs
adc
and
xor
cwtl
adc
push
clc
and
adc
call
cmp
xchg
test
call
cmp
icebp
in
adc
sub
or
cli
xor
out
leave
or
fsubl
jns
dec
cmp
jmp
fldt
nop
loopne
lea
hlt
push
add
insb
mov
xchg
test
and
in
pop
mov
adc
nop
hlt
sub
rorb
sbb
mov
jns
scas
call
xor
push
mov
pop
jbe
xchg
iret
rol
xor
xor
data16
inc
mov
sub
pop
sarb
gs
pop
call
cltd
dec
sub
loopne
jp
add
xchg
das
daa
dec
lret
iret
aam
nop
stos
out
mov
mov
mov
pop
das
mov
pop
test
arpl
jo
mov
mov
stos
xor
movsb
push
mov
lret
je
outsb
adc
push
inc
xchg
or
jne
ret
pop
nop
xchg
or
add
xor
sti
dec
jbe
add
inc
test
xor
lcall
jmp
sbb
aad
sbb
cwtl
mov
inc
int3
mov
and
cmpsb
cmp
dec
jmp
mov
lea
mov
jae
mov
or
dec
push
lds
addr16
sub
in
mov
cmp
xor
xor
jmp
cwtl
lds
jmp
test
jl
rorb
jle
sbb
xor
into
mov
xchg
mov
nop
jecxz
push
ffree
das
adc
mov
fs
out
int3
out
push
sub
loop
addl
jge
dec
stos
sub
sbb
and
cmp
mov
push
push
dec
hlt
add
stos
xchg
iret
fwait
inc
mov
jle
mov
js
add
and
pop
or
gs
fsubl
xor
fdivrs
jecxz
sub
push
ljmp
pop
scas
xor
stc
adc
daa
lret
cmpsl
std
push
sub
loopne
popf
adc
mov
adc
or
jne
nop
pop
push
push
loopne
out
out
add
sub
dec
ret
sbb
mov
rcr
pop
lret
movsb
push
vmread
stc
out
push
dec
sub
cltd
stos
mull
push
sti
popf
and
mov
mov
jecxz
mov
das
ja
or
sti
sub
bound
jnp
mov
pop
mov
ret
rcr
rcll
cmp
stc
or
adc
loopne
sbb
xor
enter
fadds
cmpsl
pop
sbb
mov
shr
push
fistpll
outsl
or
xor
sbbb
dec
ljmp
mov
clts
fidivrs
andl
adc
popf
and
lods
xchg
or
jnp
mov
push
lds
insb
sar
jbe
xchg
mov
and
daa
test
or
es
and
add
inc
jo
sub
fdivp
add
mov
sub
lods
insl
lret
xchg
dec
sub
ljmp
es
notb
movmskps
sahf
ret
cmc
mov
repnz
jecxz
fcom
and
mov
test
testb
enter
xchg
rcrb
xor
sbb
cltd
mov
sahf
into
cmp
mov
pop
mov
imull
inc
hlt
mov
mov
add
scas
xchg
dec
jno
rcll
insb
out
int3
scas
lods
push
pop
and
add
mov
repz
mov
jecxz
outsb
mov
xor
mov
aaa
out
xor
outsb
out
jae
and
mov
rorl
cmp
or
push
or
ret
xchg
sbb
cmp
lods
cmp
scas
add
sub
cmpsb
adc
ljmp
outsb
jmp
lcall
push
insb
xor
es
fdiv
aas
ss
mov
xor
fbld
je
pop
inc
out
ss
jo
in
gs
test
in
rolb
jb
jmp
pop
add
in
mov
and
xchg
push
data16
icebp
fisubrl
add
push
jmp
dec
mov
stc
sbb
mov
xchg
fdivrs
pop
xor
fsub
pop
adc
das
mov
xorl
push
hlt
stc
xchg
xor
rcrb
rcrb
mov
ror
dec
adc
jle
inc
add
in
adc
jecxz
fildll
or
inc
scas
cmp
mov
mov
sbb
lods
fadds
jae
sub
fstpt
jno
imul
jo
int
and
mov
daa
cmp
nop
inc
aam
dec
gs
imul
xchg
dec
in
jmp
out
lret
sbb
fs
xchg
cmp
or
dec
dec
jle
dec
sub
sbbb
dec
pop
loope
test
inc
sub
push
add
mov
pushf
dec
mov
xor
pop
outsb
lret
popf
int3
cmp
js
into
sbb
test
jecxz
jnp
mov
shrb
dec
add
push
sub
addb
lcall
sub
clc
mulb
jns
ficompl
push
dec
or
ljmp
dec
adc
into
imul
lock
mov
imul
mov
mov
add
or
push
sub
fistps
xchg
add
cld
test
loopne
lahf
jno
lea
push
cli
std
test
fwait
popa
test
pop
dec
popf
cli
jnp
cmp
jae
roll
popa
pop
scas
out
aaa
cmp
add
push
test
mov
mov
pop
fstpl
std
test
adc
adc
imul
sub
xchg
or
in
mov
jg
pop
push
int3
outsb
shl
push
mov
loop
lret
mov
in
je
int3
and
pop
inc
dec
hlt
test
xlat
push
out
lods
xor
adc
int
push
mov
push
out
ss
sub
jb
xor
push
lea
mov
pop
jecxz
xor
aas
jb
pop
popa
leave
xor
fs
cmp
jb
ss
in
push
aas
push
les
out
pop
push
pop
jecxz
jno
lret
les
mov
jl
sub
jge
faddl
pop
fwait
int3
jp
push
sub
test
push
daa
out
outsl
loope
cmp
int3
ret
and
jnp
inc
and
sub
jne
jne
mov
loopne
les
imul
mov
sbb
stos
fcoms
fnstsw
dec
xchg
jl
int
mov
in
loop
fcmovu
mov
inc
jecxz
aad
pop
inc
mov
xchg
jno
inc
cli
loop
rcll
aaa
bound
fidivs
push
cmpsl
gs
jl
or
sbb
in
sbb
test
daa
scas
out
bound
dec
push
icebp
pop
push
sbb
subl
inc
cmp
sub
sbb
int
rclb
outsl
loopne
jg
jae
inc
add
pop
mov
xchg
add
xor
repnz
xor
sbb
or
pushf
xchg
loopne
dec
sbb
mov
inc
pop
test
fs
inc
cmpsb
je
subl
jb
cs
movsb
inc
inc
mov
adc
popf
test
and
in
sub
or
mov
pushf
cmc
lds
push
add
push
mov
adc
gs
jbe
hlt
testb
xor
adc
mov
fmul
popa
cmpsl
pop
sub
dec
adc
mov
xchg
jmp
clc
mov
xor
dec
lods
cmp
lock
ds
xor
xor
out
lods
xchg
out
jo
mov
into
push
mov
shll
pop
stc
ret
sbb
cli
and
out
or
les
fimuls
ljmp
mov
dec
mov
fists
cmp
inc
movsb
pop
les
and
cmpsl
cmpsl
inc
out
dec
cmp
jns
inc
pop
dec
sub
mov
arpl
adc
lret
data16
fldl
xorb
jle
test
negb
pop
sbb
daa
mov
ss
fsubs
mov
xor
jno
out
imul
fbld
lcall
cmp
outsl
and
mov
in
hlt
repnz
pop
jne
inc
testb
inc
lock
cltd
inc
rcll
ds
cmpsb
xorb
mov
stos
inc
insl
inc
mov
out
sbb
fidivs
add
mov
jmp
jp
divl
stos
cmp
push
fdivs
pop
es
movsb
decl
xor
jnp
xchg
push
jb
dec
sti
sbb
mov
xchg
loopne
sub
push
pushl
xchg
pop
mov
xor
shll
jns
push
lahf
cs
aam
add
jne
xchg
cmpb
popa
mov
add
add
and
xor
and
adcb
mov
push
xchg
xchg
sub
jo
push
aam
or
sar
ja
test
shlb
sbb
leave
lods
mov
inc
data16
jg
inc
pop
pushf
iret
insl
jb
test
pop
dec
addb
dec
and
mov
popf
xor
movaps
mov
pop
xor
inc
inc
jno
dec
sarb
cs
lock
mov
adc
ds
outsb
push
jge
mov
xlat
pop
pop
imul
les
in
cmpsl
push
jecxz
dec
pusha
jge
ds
test
mov
jbe
mov
jg
and
push
sbb
pop
test
inc
jae
sti
addl
jl
popf
std
add
sbb
lods
aaa
pushf
ljmp
out
inc
popf
std
pop
cmc
mov
or
gs
and
jns
xor
xchg
mov
fcmovne
xchg
sbb
sbb
cwtl
enter
xor
gs
and
loop
rol
mov
xchg
outsl
bound
sbb
xchg
fdivs
xchg
xor
add
jae
pushf
xchg
ss
mov
sbb
mov
adc
push
mov
repnz
loopne
mov
out
mov
sbb
xchg
sbb
call
adc
mov
fwait
or
ret
mov
sbb
inc
adc
xchg
lret
fistpll
pop
imul
daa
pop
icebp
dec
and
mov
push
pop
pmaddwd
lcall
mov
fdivrs
imulb
or
in
pop
and
push
inc
dec
push
es
test
mov
xchg
sbb
add
sub
or
dec
aaa
mov
outsl
mov
ret
dec
xchg
inc
in
int3
lods
lods
cmp
sub
pop
or
popf
aam
xchg
pop
cmp
and
xor
push
movsl
sub
mov
xchg
test
shlb
les
ja
and
lds
fbld
lret
and
push
mov
add
add
jmp
pop
mov
loop
fdivrs
arpl
int3
or
inc
outsb
dec
fwait
pushf
lcall
clc
cmp
movsl
addb
and
push
or
cmpb
mov
test
emms
cmpsb
add
xchg
out
push
mov
ret
ja
test
enter
cmp
xor
lea
repnz
jbe
call
xor
adc
and
push
stos
mov
mov
sbb
sbbl
cmp
sbbl
scas
push
jno
adc
roll
jno
insb
jno
pop
les
adc
xor
ret
lret
add
push
xchg
int3
dec
fistps
cltd
cmp
cmp
icebp
daa
ficomps
push
cltd
push
je
mov
and
out
xchg
add
xor
pusha
dec
mov
cmc
scas
adc
mov
repnz
push
add
rclb
out
cs
fidivl
inc
pop
add
dec
or
xor
xchg
mov
add
into
push
adc
pop
inc
push
cmp
inc
xor
imul
or
fildl
lods
dec
sahf
aad
sbb
push
xor
test
mov
inc
pushf
in
int
orl
fbld
dec
lcall
arpl
push
jg
pop
adc
dec
lahf
sbb
push
mov
outsl
or
cmp
jle
sahf
cmp
loopne
les
jnp
aam
xchg
imul
fstpt
sub
jne
scas
pop
stc
push
jg
das
ror
stos
movsb
orb
pop
jno
stc
jecxz
jbe
pop
test
fcmovu
dec
insb
fdivrs
sar
je
out
push
adc
add
and
sbb
mov
cmp
sbb
je
mov
pop
int3
inc
lods
outsl
into
pop
mov
rorb
mov
cltd
sbbl
aam
iret
sub
cmp
out
mov
scas
add
cmp
pop
sti
imul
jno
addl
mov
pop
push
mov
call
xchg
imul
fs
test
sarb
cmpl
xchg
and
mov
insl
or
xor
fidivrs
push
xchg
sub
test
add
xlat
idivb
pop
sbb
mov
loop
ja
jbe
or
test
cltd
or
rol
pop
test
cmp
ss
push
adc
cmpsl
test
pop
test
repz
jle
pop
xchg
push
mov
jbe
loope
mov
mov
mov
cmp
xorl
pushf
jmp
mov
in
outsl
frstor
fwait
jp
fidivs
lods
sbb
fimuls
ja
sbb
enter
or
dec
repnz
adc
xchg
out
push
fiaddl
pop
and
test
sahf
iret
test
add
stos
xor
pop
icebp
inc
outsl
aas
ja
jo
xchg
rorb
xchg
out
aad
push
add
xor
cs
les
nop
mov
pop
push
mov
subb
scas
and
shrl
inc
jnp
dec
adc
sbb
dec
not
push
cltd
dec
das
cs
lods
mov
dec
test
loopne
cmpsl
incb
xchg
jecxz
shrb
sbb
ljmp
nop
sti
daa
loop
arpl
add
cmp
xchg
xchg
lret
cmp
or
das
add
pop
jno
enter
cmpsb
push
mov
pop
addr16
pop
push
loope
mov
mov
mov
out
mov
andl
outsb
orl
dec
bound
push
into
in
test
mov
mov
cmp
push
loope
into
pop
push
mov
lret
lods
push
test
jne
sub
xlat
stos
xchg
dec
sbb
fists
mov
insl
push
sub
mov
arpl
jbe
adcl
cli
dec
fimull
jle
sbb
movsbl
jmp
sub
mov
hlt
out
cmc
rclb
cs
mov
das
inc
cli
or
mov
push
pusha
fnsaves
adc
xorb
mov
fldcw
ss
add
mov
add
rclb
cmp
xchg
or
add
jb
pushf
mov
nop
push
sub
cmp
mull
jns
sub
aaa
in
int3
out
repz
sub
xchg
inc
loopne
popw
jg
in
xor
dec
das
incb
cmp
push
int3
add
sub
stos
push
lret
push
adc
fcoms
out
popf
pushf
test
repz
aam
out
shll
aam
lcall
lock
xor
pop
pushf
push
add
pop
loop
jbe
std
iret
aam
lods
stos
pushf
push
dec
jns
pop
in
lds
ficompl
cmp
lea
jmp
adc
jmp
ret
dec
pop
pop
gs
and
adc
cmp
pop
cmp
mov
addb
push
insl
scas
cmp
iret
sbb
mov
push
mov
test
rcll
leave
xor
xchg
pop
scas
jo
js
sti
leave
subb
add
aad
fisubrs
lret
adc
test
pop
cmp
loope
xchg
add
xor
add
push
mov
mov
pop
into
sbb
sbb
loopne
cmpb
int
mul
aam
inc
mov
mov
pop
mov
es
sub
js
cld
jb
inc
insl
int3
cwtl
adc
out
xor
sahf
lods
xchg
stos
jns
outsb
push
xlat
aam
cmovnp
add
cwtl
cli
mov
sarl
ret
push
or
mov
roll
fcompl
sub
ljmp
ss
stos
in
sbb
add
test
jecxz
xchg
push
andb
dec
jecxz
cld
arpl
cli
stc
mulb
sbb
inc
cwtl
add
jb
int3
fisttps
jno
cwtl
lahf
jl
sbbl
ljmp
mov
outsl
mov
sbb
mov
dec
mov
test
xchg
sbb
cltd
pop
xchg
mov
jb
dec
out
mov
je
loop
adc
leave
mov
sbb
push
cmp
jle
pop
push
mov
lods
in
inc
cmp
adc
popa
loop
xorb
popa
call
repnz
enter
lahf
inc
and
sub
rcr
addb
cld
aam
mov
fcoml
std
inc
int3
jge
test
sbb
and
mov
or
daa
sbb
mov
mov
bound
and
pop
out
movsb
outsl
xchg
test
imul
jge
aad
fiaddl
icebp
pop
mov
lods
insb
ficomps
sahf
pop
repnz
lret
pop
je
imul
in
sub
imul
or
int
dec
cmpl
punpckhwd
adc
data16
sahf
js
or
inc
addl
cmp
mov
in
xchg
xchg
mov
mov
sar
xchg
jns
data16
les
stos
pop
test
repnz
mov
mov
and
out
gs
jnp
mov
or
pusha
inc
ftst
mov
cwtl
sti
pop
stc
lods
push
shrb
jb
mov
mov
incl
sti
xor
es
xchg
mov
or
iret
mov
adc
les
shlb
and
mov
pop
pop
not
pop
dec
lods
loop
inc
cltd
mov
data16
add
cld
jecxz
xor
xor
dec
pop
insb
sti
mov
add
sahf
pop
sbb
mov
movsb
mov
push
xor
add
dec
inc
mov
mov
xchg
lock
dec
and
push
mov
mov
jmp
aas
add
sbb
mov
imul
mov
lahf
jmp
push
sub
in
push
mov
and
xchg
test
cltd
dec
mov
xor
out
insb
rcrl
sbb
pop
mov
ret
aam
mov
int3
cmp
push
mov
in
out
push
xor
popa
push
pop
inc
lret
out
sti
or
mov
pop
add
sub
xchg
test
mov
shl
adc
out
js
into
sub
xor
out
push
mov
psubb
push
faddl
inc
popf
sbb
shll
dec
xchg
dec
out
or
flds
inc
adc
push
pop
push
ja
ret
ja
imul
test
lock
sub
cmp
lahf
pop
push
fsubrs
mov
mov
sbb
xchg
pop
jae
adc
ret
loop
sbb
push
int
pminsw
inc
inc
shrl
je
cmpsl
push
stos
push
jno
and
push
adc
inc
insl
dec
push
mov
push
imul
mov
ret
pop
fdivs
cmc
les
push
cld
in
mov
test
pop
addb
cs
mov
dec
scas
andl
test
dec
pop
dec
cmpsb
dec
cmpb
es
aad
sub
mov
push
cmp
cmp
fimull
xor
mov
mov
imul
and
dec
lods
fbstp
leave
inc
fucomi
jge
adc
and
mov
jle
out
lods
pop
cmp
mov
adc
test
xchg
in
repnz
aad
dec
adc
popa
mov
scas
call
jp
pop
xchg
inc
outsb
pusha
cmpsl
and
jmp
push
ljmp
dec
shll
adc
aas
popf
cmp
adc
shlb
mov
cmpb
cmp
popf
add
mov
and
in
test
loop
jmp
sub
inc
dec
pop
cwtl
insl
loopne
sbb
imul
adc
mov
lcall
jbe
inc
sbb
add
push
sub
mov
xchg
into
hlt
iret
push
add
mov
dec
pusha
push
xchg
mov
and
jb
pusha
adc
insl
add
add
lcall
xor
out
sti
out
dec
popf
shrl
jg
test
adc
jg
ret
push
shrl
cmc
cmpsb
sbb
sub
inc
icebp
arpl
in
pop
aaa
test
xchg
inc
jns
xor
and
inc
add
insb
stos
cmpsl
insl
and
add
cltd
cld
cmp
xor
repnz
inc
mov
mov
sbb
jecxz
add
ret
adc
mov
cwtl
adc
mov
dec
in
mov
add
push
jbe
scas
xchg
and
outsl
ret
sub
pop
out
or
xor
xor
jmp
jbe
adc
push
dec
and
pop
or
mov
cmp
mov
rorl
fnstcw
xor
sub
jmp
inc
test
lret
js
cwtl
pusha
rorl
xchg
pop
pop
cld
rorl
sahf
int3
add
cld
sbb
add
mov
cmp
inc
outsl
rorl
fdivl
jg
shrl
rolb
dec
push
cli
into
jmp
out
mov
test
pop
movsb
aas
mov
decl
in
and
daa
inc
mov
inc
aad
inc
pop
pop
imul
sbb
fnsetpm(287
test
mov
inc
mov
mov
dec
in
dec
or
pop
ljmp
cmp
out
sub
jge
pusha
dec
repnz
jge
xchg
sti
dec
adc
sub
arpl
add
sarl
divl
stos
shlb
shll
jl
outsl
add
inc
jb
mov
int3
sub
xchg
imul
cld
test
mov
xor
dec
mov
jbe
mov
and
push
inc
jge
inc
dec
push
jg
mov
sbb
jb
leave
dec
enter
in
das
inc
clc
xor
push
mov
ljmp
xchg
loopne
popf
xchg
call
sbb
gs
stc
test
inc
add
enter
push
mov
jns
aad
sbb
jle
inc
pop
aam
aam
xchg
in
int3
pop
hlt
xorl
sub
scas
cmpl
or
and
sbb
jg
xchg
pop
mov
and
add
mov
push
dec
movl
hlt
cmpsl
pop
dec
das
push
and
in
sbb
js
scas
arpl
out
mov
inc
mov
jno
xchg
adc
movsb
push
int
icebp
mov
dec
incb
xor
ds
mov
and
cmpsl
inc
jo
jle
hlt
or
repnz
xchg
sti
push
push
xchg
ljmp
lods
stos
mov
mov
leave
aad
dec
popf
sub
test
cmp
out
icebp
xchg
cwtl
inc
sbb
shr
fs
pop
xchg
inc
out
rolb
pop
test
aaa
sbb
std
jp
or
sub
xorb
repnz
mov
dec
adc
les
bound
mov
mov
hlt
call
shlb
int3
or
ja
cmp
inc
xchg
stc
and
jnp
push
fst
ja
std
push
fmull
push
sub
cmc
xor
inc
int3
aam
jp
adc
sub
loopne,pt
xor
or
rorb
ret
sti
dec
push
mov
outsb
add
std
mov
mov
inc
mov
xchg
add
mov
mov
pop
popf
mov
push
xchg
and
inc
jp
sbb
popf
data16
lds
xor
mov
inc
xchg
neg
fmull
aad
xchg
test
dec
mov
out
push
sar
in
dec
test
js
jne
fistpll
pusha
pop
xchg
das
pop
stc
shll
mov
xchg
iret
cltd
push
pop
ret
mov
and
out
sub
pop
pop
pop
adc
sub
loope
addl
sub
add
push
or
xchg
mov
sbb
xchg
dec
push
pop
hlt
imulb
push
mov
out
jmp
push
dec
mov
test
in
pop
fwait
jmp
ja
add
inc
mov
daa
or
insb
add
addr16
adc
inc
mov
fcoms
sub
xchg
out
rorb
bound
xchg
jbe
xchg
fidivs
xor
enter
pop
das
sub
or
jmp
mov
jb
push
inc
or
pop
in
mov
aas
mov
dec
adc
adc
mov
dec
jae
jnp
outsl
cmp
adc
mov
pop
pop
inc
cmp
imul
aaa
dec
adc
lcall
repz
pop
pushf
mov
push
adc
jge
pusha
sahf
enter
sbb
xor
lret
pop
mov
sub
mov
mov
add
xor
mov
mov
cli
cwtl
daa
add
mov
and
sub
lock
adc
cmpsb
hlt
adc
shll
adc
std
ret
add
inc
mov
push
cmp
mov
ss
lret
and
mov
in
inc
add
add
adc
repz
shrb
pop
mul
imul
in
bswap
xchg
mov
neg
pop
or
xor
add
inc
xchg
mov
rcrl
mov
sti
sbb
push
sbb
mov
sbb
xor
imul
pop
pop
scas
or
sbb
add
push
sti
mov
in
ds
mov
rolb
mov
jae
push
sbb
das
push
cwtl
or
xlat
sub
fists
repnz
cltd
rcr
hlt
movsb
push
shl
repnz
cmp
call
xchg
sub
scas
fildl
ret
out
adc
arpl
fnstcw
adc
jl
xchg
or
sub
scas
push
icebp
sub
sub
xor
mov
and
insb
insl
cmpsb
push
repz
add
and
les
xchg
imul
shlb
lahf
mov
arpl
fstl
push
push
dec
fstpt
sbbl
mov
test
outsl
mov
mov
cld
daa
jnp
sub
pop
jne
push
cmp
call
jle
jg
mov
add
mov
aam
hlt
inc
jl
mov
adc
or
leave
stos
pop
popf
daa
mov
sub
popf
lock
iret
dec
loop
out
mov
sbb
dec
lock
or
hlt
test
fcmove
xchg
cli
loopne
test
movsl
cs
xor
leave
jo
sbbb
mov
jb
mov
add
inc
pop
cmp
mov
or
loop
inc
inc
ljmp
dec
sbb
ja
xor
int
jnp
enter
jmp
outsl
jl
adc
and
xor
dec
lcall
insl
clc
adc
jbe
test
out
mov
add
lcall
enter
mov
mov
aam
repnz
outsl
xor
scas
dec
cmpsb
jmp
into
cmp
aad
adc
fimull
adc
push
cmpsl
xchg
sbb
andb
pop
jo
rolb
addr16
insb
add
xchg
push
cmpsb
imul
test
int
addr16
inc
es
add
aaa
push
out
adc
sbb
jae
aam
push
push
subb
orl
jp
pop
daa
mov
loopne
fistl
lock
sub
push
cli
out
pop
outsl
mov
stos
out
stos
push
cwtl
pop
jo
sub
cli
stos
pop
jnp
add
enter
add
pshufw
inc
cmp
cld
frstor
mov
cwtl
sub
sub
test
rorl
pop
or
aaa
lea
call
mov
sbb
fcomi
outsb
les
jle
in
fdivrs
adc
movsl
pop
test
push
sub
jmp
test
add
cmp
lods
and
mov
xchg
pop
xchg
clc
dec
adc
sub
dec
pop
mov
xlat
sahf
push
adc
stos
ret
mov
test
aaa
je
or
hlt
fdivs
fsubs
push
stos
enter
ja
repnz
push
mov
pop
push
mov
mov
int3
pop
mov
in
in
cmp
cmp
js
mov
push
pop
or
dec
mov
push
into
outsl
or
push
push
push
inc
int
jbe
aaa
sbb
mov
andl
adc
pusha
push
inc
sarl
sub
cmpsb
xor
jbe
or
mov
sub
call
aaa
dec
pop
sarl
xor
add
push
mov
lods
cmp
sbb
fwait
pop
mov
movsb
dec
pop
lds
mov
xchg
ds
xchg
inc
dec
sbb
inc
das
xchg
xor
mov
js
ret
push
insb
sbb
ja
or
bound
push
add
mov
sbb
jecxz
push
pop
pop
notl
out
jo
adc
lret
fildl
push
xlat
pushf
sub
or
bound
push
push
xchg
test
and
jl
jmp
sub
jge
leave
push
adc
xchg
xchg
insl
xor
jnp
scas
and
and
stos
loope
xor
push
iret
sbb
mov
lods
mov
and
xchg
adc
pop
cmp
cmp
mov
adc
gs
jge
adc
or
jae
ss
out
cmp
iret
mov
popf
dec
xor
aam
mov
cmp
mov
sbb
insb
inc
cltd
out
fdivrs
repnz
mov
dec
movsl
jne
test
mov
ret
xchg
mov
test
mov
mov
dec
mov
sub
xlat
xchg
xchg
mov
dec
sub
outsl
mov
xchg
js
aam
aas
xchg
inc
shrb
clc
dec
int
xchg
mov
xchg
lret
sub
pop
jle
push
ficoml
dec
call
es
dec
rolb
loop
sub
cmpl
pop
pop
int
pusha
gs
or
push
cmp
cmp
push
push
xchg
mov
sti
adc
jbe
inc
xor
jmp
hlt
insb
outsb
add
sbb
mov
cmc
sbb
outsb
pusha
mov
add
pop
push
jge
out
rcrl
je
push
fnstenv
dec
or
ja
and
fldt
int3
push
mov
dec
mov
lahf
adc
mov
xchg
jle
add
push
push
inc
cmp
and
mov
std
xor
mov
cmp
inc
leave
movsl
insl
std
cmpsl
sbb
sbb
imul
loopne
sub
sbb
sub
push
xor
mov
sub
stos
icebp
imul
ljmp
cmp
sbb
mov
bound
sbb
ficoms
fldl
loop
nop
and
ret
inc
push
es
je
cmc
cmp
dec
les
call
and
int
out
sub
bnd
dec
sbb
fs
lods
icebp
pop
pop
bswap
sahf
mov
scas
mov
jno
mov
sbb
andb
jecxz
lea
mov
cmc
pop
leave
adc
jnp
or
pop
movsl
lret
add
test
push
or
sbb
xchg
xchg
idivb
inc
add
or
cmp
arpl
inc
mov
push
sbbb
stos
adc
jb
push
data16
pop
dec
test
js
incl
lahf
cmp
push
lods
pinsrw
lods
ss
fincstp
push
mov
mov
add
negb
push
push
pop
mov
iret
std
sub
data16
push
into
cmp
aam
jb
in
jecxz
pushf
insb
pop
cmp
andl
jns
xchg
nop
insl
in
or
int
dec
sub
cmp
push
data16
nop
test
ljmp
sub
or
push
jnp
test
cmpl
test
mov
les
or
cmpsb
ds
mov
imul
adc
mov
lahf
jle
add
xor
lods
add
add
cmpsb
sbb
mov
es
rol
aaa
mov
rcrl
int3
lods
aad
sub
mov
adc
lret
pop
and
inc
and
xchg
jp
inc
aad
mov
sub
or
jo
mov
add
ljmp
jnp
test
pop
jg
icebp
adc
int3
outsb
cmp
int
mov
fsub
out
mov
lret
xchg
mov
inc
fisubrs
aad
pop
dec
mov
mov
call
movsl
imul
push
xor
pop
lcall
rcr
test
jle
lahf
jb
out
cmp
gs
testl
dec
mov
leave
gs
push
outsw
stc
adc
dec
cmpsb
test
cwtl
adc
shll
cs
inc
mov
in
ret
in
sarl
push
in
inc
mov
push
stos
stos
scas
pop
mov
mov
arpl
jns
xchg
aaa
inc
jle
adc
rcpps
xorb
in
push
je
and
jle
sbb
std
cmp
in
adc
or
mov
adc
pop
lcall
les
dec
pop
out
stc
inc
or
xchg
cmp
sti
insb
push
ret
out
jns
lock
daa
mov
in
cs
adc
xchg
dec
inc
sub
mov
xorl
das
dec
and
and
inc
rol
mov
inc
push
out
ss
adc
sub
cmp
pop
es
fnstcw
inc
call
stc
movsl
add
stos
stc
cmc
cmc
xchg
dec
dec
iret
mov
fnsave
or
rorb
clc
and
inc
ljmp
push
xor
scas
pusha
aaa
jnp
or
pop
fstpt
testl
negb
sub
xchg
mov
mov
mov
lahf
nop
xlat
adc
or
inc
fildll
jl
lds
and
negb
insl
cmpsb
xor
and
push
data16
and
add
cli
movsb
add
cmp
cmp
lahf
add
inc
std
add
lcall
sbb
pop
repz
dec
jo
popa
into
pop
bound
loope
sahf
bound
outsl
adc
and
icebp
add
int
xor
jge
jp,pt
movsb
jp
lods
jp
jne
xor
sahf
push
out
arpl
add
dec
movhps
ret
push
inc
dec
add
enter
cmp
in
pop
pop
pushf
outsb
lock
into
test
loopne
xor
lds
cs
lret
fbstp
sub
ret
sahf
in
loope
xchg
loop
and
scas
sbb
das
xor
std
sahf
ss
incb
aad
test
bound
scas
stos
adc
pop
mov
add
mov
adc
add
mov
arpl
mov
ljmp
inc
sub
mov
daa
add
loopne
xor
pushf
or
andb
and
pop
jp
pop
cmp
mov
aas
push
hlt
stos
pop
ftst
jl
xlat
xchg
mov
lock
sub
sarb
inc
push
stos
mov
popa
nop
in
jg
cmp
popl
leave
cwtl
aas
int
std
dec
stos
fbld
push
sub
push
push
and
mov
push
jo
cmpl
sbb
mov
push
lret
xor
je
mov
mov
rolb
adc
xlat
hlt
jmp
or
dec
popf
cmp
imul
gs
jg
fnop
sub
lret
sub
orl
pop
fwait
xchg
push
pop
test
mov
es
out
jne
sub
jo
aad
repz
shrl
pop
jmp
jmp
push
std
scas
outsb
cmpsb
leave
or
sbb
sahf
mov
aaa
clc
div
mov
cwtl
and
jecxz
dec
repnz
adc
and
out
test
xor
repnz
stos
lahf
push
cmc
add
insb
mov
lret
mov
mov
or
in
cmp
mov
ljmp
xlat
popa
outsb
dec
cmpsl
scas
lods
xor
cld
test
rcrb
add
and
sbb
mov
leave
mov
xchg
in
ret
pop
xor
gs
fildll
xchg
insl
dec
movsb
jbe
pop
jno
rolb
mov
aaa
inc
dec
repz
mov
and
lret
mov
nop
shr
sub
xchg
inc
sbb
inc
cmp
cltd
pop
dec
add
scas
mov
cmp
cmpsl
xor
sub
and
clc
pop
jmp
push
sub
leave
sub
mov
mov
push
lahf
lods
push
bound
xor
mov
ss
lahf
popa
xor
stos
outsb
repnz
push
cmp
stos
out
jnp
les
sbb
mov
icebp
cmp
cmpsb
jno
xchg
lods
leave
sub
fmuls
movsb
pop
stos
enter
xchg
pop
jo
jns
popf
jl
jae
sbb
sub
inc
into
pop
ret
rcr
sbb
mov
fwait
cmp
mov
in
xchg
jmp
negl
in
leave
jbe
push
inc
inc
cmp
stos
pop
mov
cmp
call
fnstsw
cmp
int3
out
xor
or
add
sahf
mov
sbb
lods
add
push
and
mov
dec
inc
dec
movl
mov
pop
xchg
xor
jle
inc
sbb
outsb
inc
aaa
rol
sarl
imul
or
mov
sub
mov
push
lods
cmp
int3
popa
inc
or
imull
mov
fstl
and
scas
push
xor
mov
fwait
adc
adc
das
push
sbb
pop
cs
push
cmpl
loope
hlt
push
cmp
pop
jle
fcoms
xchg
pop
arpl
jne
dec
fsubl
push
cmp
nop
cltd
add
xor
or
cmp
in
fistpl
fimull
dec
mov
js
jle
pop
int3
hlt
push
sub
aas
popf
in
cmp
mov
mov
ljmp
adc
repz
mov
adc
icebp
or
pop
test
pop
adc
jp
mov
pop
mov
cli
push
and
movsl
fnstsw
xor
lcall
push
xor
sub
fldcw
stc
nop
jb
pop
add
xchg
add
and
push
aad
inc
xor
push
inc
lods
repz
test
outsl
or
cmp
push
popf
and
xor
leave
jge
sub
nop
cmp
and
call
mov
lea
es
arpl
dec
sub
leave
jcxz
inc
lret
and
inc
notb
inc
push
fdivrp
inc
insb
popf
icebp
out
nop
mov
and
jo
push
or
lcall
and
mov
cmpsb
pop
and
rclb
pop
imul
aas
mov
jnp
xor
nop
xchg
int3
inc
in
push
push
test
dec
and
mov
pusha
mov
mov
js
lds
addr16
and
jo
jmp
inc
cmpsl
inc
xchg
and
adc
inc
inc
cmp
push
aaa
xor
aam
xor
jmp
xchg
adcl
and
rorb
lcall
pop
sub
repz
and
idivb
sub
push
call
cwtl
dec
sarb
sarb
pop
xchg
fs
pop
dec
shlb
jne
jl
lret
inc
mov
cmp
mov
pop
mov
inc
xor
add
aas
sbb
or
stc
js
out
test
xor
inc
pop
stos
mov
repnz
jo
inc
mov
aaa
jecxz
push
bound
repz
push
cs
test
xchg
sub
imul
scas
dec
in
iret
ficoml
scas
add
push
lods
push
sub
sti
jo
cwtl
and
gs
in
push
or
add
fisubs
mov
ss
std
ret
jmp
popf
xchg
data16
xor
in
xor
movsl
pop
repz
das
popf
xchg
fmuls
cmpsb
fbstp
rcrl
imul
and
scas
sbb
aam
je
icebp
push
jg
xchg
xorl
nop
mov
movsl
dec
xchg
jl
imul
push
pushf
dec
push
add
hlt
inc
inc
aam
into
hlt
stc
mov
cmc
repz
call
call
imul
adc
push
lcall
in
inc
test
loop
mov
push
jns
sub
cmp
mov
adc
jecxz
jbe
xchg
sub
mov
mov
bound
mov
in
jnp
jl
out
push
sahf
cmc
lret
loope
xor
out
adc
sub
add
jo
xchg
in
adc
rolb
popf
pushf
in
mov
popf
int3
add
or
pusha
mov
or
ret
cmc
or
lret
scas
and
int
popa
fsubl
stc
sbb
jp
repz
mov
stos
cmp
dec
repnz
xchg
cmc
loopne
jns
pushf
int3
dec
xor
fists
test
adc
in
sti
lods
xor
test
mov
sbb
bound
js
xchg
xor
sti
cmp
sbb
pop
inc
push
je
mov
icebp
jae
into
or
out
adc
dec
inc
lods
clc
push
dec
lret
in
mov
pop
ljmp
into
dec
ret
stos
pop
in
out
inc
arpl
ret
dec
cmp
scas
lods
push
lahf
fs
leave
rorb
inc
pop
movsl
cs
adc
loopne
jl
push
jle
loopne
icebp
jae
sub
jmp
in
flds
lock
es
or
rolb
add
lahf
scas
scas
adc
push
aaa
dec
cmp
fiadds
and
call
xorl
pop
mov
movl
cltd
jp
push
stos
adc
and
cmp
dec
mov
push
cs
jge
aas
adc
inc
enter
dec
mov
adc
pop
sub
out
add
cli
xchg
in
in
push
xor
adc
arpl
cmp
pop
lret
pop
fcmovb
lods
jp
mov
mov
xor
ja
xchg
sbb
mov
imull
push
adc
and
lods
push
push
mov
cmp
cmpsb
pop
jo
ss
sub
add
inc
cmp
les
das
out
dec
orl
xchg
jge
adc
rcll
mov
adcb
cwtl
inc
jg
sbbl
add
xor
jae
sbb
bound
dec
negl
les
inc
jb
mov
push
aad
lcall
and
fimuls
mov
test
and
adc
jne
hlt
cmp
enter
movsb
repnz
outsb
mov
arpl
gs
aas
push
sub
jge
mov
or
jns
call
xchg
std
std
mov
xchg
mov
data16
xchg
push
xchg
pushf
mov
fwait
fs
jne
lret
clc
or
ret
fdivrl
mov
adcl
shrl
aam
imul
mov
xchg
xor
xchg
dec
inc
push
and
jp
lea
pop
cwtl
fldl2t
cwtl
pop
xor
out
sub
roll
shlb
pop
cmc
push
or
clc
add
mov
cmp
sub
add
push
mov
out
sti
inc
sub
push
inc
add
xchg
push
push
mov
fcmovnu
mov
cld
adc
mov
xchg
or
loopne
stos
sub
pop
mov
std
sbb
cmpsb
xor
sub
shr
in
mov
add
dec
xchg
add
jge
fistl
test
loope
inc
lahf
jg
loopne
pop
cmp
or
or
hlt
jp
mull
out
pop
mov
and
fsub
bnd
jg
ret
cmpsl
cs
inc
ret
adc
loope
pop
or
cwtl
adc
pop
cli
adc
dec
jb
dec
mov
sbb
outsb
push
and
dec
insb
cmp
cli
mov
ljmp
sbb
pop
cltd
aas
out
pop
clc
mov
push
xor
jno
addr16
std
cli
or
mov
mull
cltd
or
imul
ret
add
loop
out
cmp
xchg
outsl
cmp
add
or
stos
cld
dec
mov
push
pop
xchg
push
push
ret
jmp
in
push
dec
outsl
fdivrp
xlat
and
fisubrs
mov
dec
subb
inc
dec
push
dec
mov
scas
xchg
dec
pop
clc
add
test
jmp
out
pop
notb
mov
outsb
popf
mov
or
cli
mov
fs
mov
testl
sbb
fcoms
inc
or
int3
push
fwait
push
and
mull
sbb
mov
imul
xor
negb
mov
cli
ljmp
adc
icebp
pop
mov
fwait
lock
das
das
mov
hlt
int
lcall
sar
call
es
sbb
nop
sub
cli
push
xor
lock
mov
jne
ret
push
and
xor
mov
mov
mov
mov
fdivl
fbld
cmp
push
or
push
dec
out
sub
or
fnsave
or
jnp
mov
popa
pushf
bswap
cmp
sub
dec
sub
or
adc
call
mov
ret
add
and
dec
jno
fld
or
mov
cmp
lods
negl
sub
mov
cmp
cmp
cmpsb
mov
repz
stos
js
fimuls
sub
icebp
ss
jnp
xor
test
jo
insb
movsl
or
ds
test
ret
loop
aam
jnp
mov
inc
ficompl
aaa
sarl
leave
push
shlb
lea
push
rcrl
out
inc
dec
inc
cmpsl
push
ret
lret
incb
cmp
add
jge
out
imul
sub
data16
mov
les
or
pop
xor
lret
imul
idivl
btr
pop
out
mov
int
mov
cmp
mov
inc
or
jl
dec
or
jl
sbb
daa
bound
fsubl
repnz
bound
jo
shrl
push
mov
xor
xor
movb
in
xchg
mov
test
add
add
out
outsb
add
pop
shlb
fildll
and
lods
subl
mov
in
inc
es
mov
pushf
jmp
hlt
pop
dec
lods
cmp
xchg
mov
ja
lea
rolb
lds
pusha
ss
sbb
ljmp
push
shrb
test
jl
sti
push
mov
and
movsl
sahf
ds
into
or
xor
pushf
jne
into
das
out
repz
sbbl
bound
out
mov
pushf
or
jne
and
int3
pushf
nop
push
pop
add
add
shl
xchg
push
jne
cmp
outsb
cmp
jns
lods
dec
loopne
je
fisttpl
mov
cs
xchg
std
scas
mov
inc
pop
mov
dec
pop
sbb
mov
sbb
out
fimull
es
push
call
and
cmpsl
inc
or
out
out
lods
dec
cmc
pushf
mov
gs
sbb
mov
ss
ljmp
sahf
or
mov
xchg
mov
pop
mov
sbb
shll
dec
xor
add
pop
dec
or
std
popa
ds
mov
rcr
jb
xchg
jp
inc
mov
movsb
ds
push
mov
repnz
mov
mov
ljmp
cmpsl
sbb
jge
adc
cmp
or
in
je
mov
push
adc
pushf
sbb
inc
cmp
clc
rcrl
fs
mov
out
pushf
and
add
sahf
xor
addl
add
cmp
cld
push
adc
pop
push
es
dec
sub
outsb
test
jl
xor
stc
mov
into
fcmovnu
add
out
orb
cs
inc
sbbl
test
pop
or
iret
ds
fs
xchg
sbb
add
xchg
sub
sub
xchg
bound
mov
inc
lret
cltd
adc
mov
jbe
sub
clc
ret
dec
xchg
lods
xor
arpl
daa
pop
jge
sbb
pop
mov
ds
repz
dec
or
popa
mov
cmp
add
adc
inc
mov
adc
pop
mov
testl
nop
cmp
lods
sbb
pop
int
or
into
ss
into
js
or
in
xchg
lret
xchg
js
mov
jle
xor
pusha
into
xchg
xor
jmp
mov
or
rcrl
jg
adc
rcrl
rorb
pop
out
sub
xchg
aas
repnz
in
pop
enter
icebp
xchg
mov
fcmove
xchg
xchg
sbb
adc
loope
xor
mov
cmp
filds
pop
inc
cld
inc
outsl
and
jne
je
push
mov
add
call
in
lds
cld
xor
inc
or
lcall
push
arpl
clc
dec
loop
inc
pop
push
push
mov
jecxz
test
dec
test
mov
and
xor
or
testb
daa
pop
leave
mov
xchg
lret
xor
jl
inc
dec
fcomps
push
je
leave
inc
mov
xchg
out
inc
hlt
out
lods
cmp
lds
cmp
xor
shll
cli
cli
repz
roll
add
inc
add
pop
adcl
jb
xchg
ret
jnp
add
or
loop
xchg
mov
mov
push
mov
icebp
scas
add
int3
dec
mov
shll
mov
pop
mov
lret
shr
push
push
cmp
xor
ds
daa
lds
pop
popa
lods
push
adc
mov
fildl
mov
inc
in
hlt
lret
cmp
scas
fmulp
mov
and
daa
sbb
push
in
inc
roll
test
push
cltd
add
and
sbb
lret
cmp
cmp
lods
div
dec
lret
icebp
xor
sub
lods
mov
push
adc
cmp
sbb
hlt
jmp
jnp
out
add
sub
xor
adc
mov
and
jbe
jns
lods
xchg
mov
insl
ss
fwait
jecxz
fcomps
adc
lret
mov
int3
pop
lret
out
mov
mov
push
fidivrl
subl
adc
xchg
fs
xchg
data16
add
mov
into
or
fmull
push
addr16
shll
mov
pushf
sub
xor
movsl
filds
xchg
jne
push
lea
dec
andl
bound
pop
cmp
and
orb
movsb
mov
fucomi
ss
push
outsl
mov
sbb
push
adc
jmp
xchg
gs
jge
mov
orb
pop
es
into
fdivp
jp
and
cmp
aad
dec
sub
jnp
imul
jmp
and
sbb
fwait
dec
jge
or
jne
in
stc
and
or
fwait
push
fwait
mov
sti
mov
mov
cli
or
cwtl
jle
test
jg
sbb
inc
pop
sbb
popf
and
dec
dec
ljmp
cmp
test
adc
push
shll
or
mov
mov
ret
fsubs
pushf
outsl
pushf
scas
push
mov
push
mov
inc
sub
dec
xor
sbb
jl
imul
sub
fisubrl
ja
hlt
add
pop
in
and
and
icebp
out
dec
pop
ret
outsb
loope
adcl
mov
imul
bound
stc
jg
jne
sti
xchg
or
inc
or
out
mov
idivl
cmp
add
jb
cmp
push
ret
cwtl
or
push
sub
outsl
pushf
or
dec
dec
fwait
xor
jae
test
xchg
fisttpl
xchg
aas
jb
imul
pop
fwait
pop
jmp
hlt
mov
push
in
jbe
sub
mov
sub
jo
insl
scas
mov
sbb
sub
ret
aam
xchg
imull
pop
jl
rorb
loope
cli
mov
xchg
scas
stc
add
cld
pop
ror
outsb
pop
imul
cli
ret
mov
leave
jge
cs
subb
lods
js
ficoms
int
lret
in
nop
or
loope
mov
sbb
push
lahf
cmp
in
cmp
mov
mov
inc
push
jne
jbe
mov
jmp
imul
pop
stc
mov
test
jl
sub
aam
mull
jns
outsb
test
xchg
mov
sarb
mov
mov
cmc
xor
dec
stos
adc
add
rcl
idivl
inc
daa
clc
jae
clc
or
fnsave
fbld
adc
jl
roll
add
ja
dec
into
gs
push
cltd
dec
xchg
xchg
arpl
std
jne
mov
movsl
aam
xchg
sarb
shrb
xchg
jmp
bound
int
xchg
out
call
stos
mov
pop
xor
xor
lret
dec
shll
arpl
lods
or
aas
movsb
adc
les
mov
xchg
fwait
subb
pop
and
and
hlt
repz
cmp
pop
xchg
adc
movsl
lea
mov
add
adc
xchg
rorl
pop
xchg
and
xor
sbb
icebp
repz
ret
fwait
sub
jnp
movl
jmp
inc
arpl
mov
dec
and
push
lock
repz
sub
popa
fisubs
push
inc
mov
negl
sub
pop
icebp
mov
out
adc
cmp
jmp
or
adc
mov
cmpsl
dec
inc
sti
hlt
mov
insl
sarl
push
xor
push
cmc
out
iret
fwait
mov
mov
inc
mov
add
and
xlat
mov
jmp
sub
and
cwtl
cmpsb
xor
sbb
inc
in
divb
lock
mov
into
add
test
in
mov
pusha
ficompl
rclb
mov
or
xchg
inc
movsl
adc
jp
scas
popa
lea
loop
inc
xchg
pop
adc
pop
mov
lock
fldenv
and
jno
jns
fistl
sub
push
aaa
cmp
xchg
sbb
inc
mov
mov
cmpsl
jae
add
ret
or
dec
xor
add
aas
cs
jmp
test
mov
cmpsl
orl
mov
push
adcb
push
push
jp
dec
jno
fwait
insb
xchg
ss
sub
xchg
mov
repnz
mov
lds
mov
sbb
ret
pusha
adc
setbe
dec
cmp
mov
and
fwait
iret
mov
jno
leave
adc
inc
insb
push
or
xor
imul
inc
add
dec
leave
jle
test
xor
push
call
cmp
mov
xchg
into
jmp
push
cmp
dec
dec
movsl
fs
enter
mov
mov
lods
xchg
fnstsw
pop
sbb
jno
adc
cmpsb
sahf
sub
jg
cmp
dec
jle
imul
lods
pushf
mov
xchg
cmp
mov
sub
dec
stos
push
push
dec
xchg
add
add
cli
mov
andl
jnp
jecxz
test
loop
jnp
outsl
cld
lahf
pop
stos
sarl
orb
into
stos
mov
adc
adc
and
push
inc
or
sbb
repnz
repnz
xchg
lock
mov
divl
and
test
add
push
mov
mov
xor
scas
cmp
dec
push
fwait
icebp
out
cmp
push
fsubl
daa
xchg
cs
sub
dec
sbb
lods
inc
lcall
inc
cltd
out
scas
leave
jg
xchg
insl
repz
and
mov
push
mov
mov
popa
loop
push
mov
or
decl
out
loope
stos
xor
lods
lcall
mov
push
repz
inc
repnz
testl
ss
jb
jecxz
mov
roll
jge
stos
out
rolb
flds
xor
pop
pushf
subb
cmc
pop
adc
add
stos
mov
movsl
mov
sub
das
dec
push
cmp
nop
jne
in
std
dec
test
not
cmpb
icebp
xor
fsubrp
xor
loopne
adc
lea
jp
and
pop
in
mov
push
lods
lods
xchg
roll
scas
pop
dec
xor
xorb
mov
jge
popa
jge
xchg
data16
call
mov
lds
repz
dec
pop
lds
push
loopne
push
das
push
fsub
mov
jg
je,pn
pop
sahf
mov
lods
insl
adcb
push
sbbb
jne
or
es
xchg
shll
lods
adc
in
add
or
cli
xchg
aaa
mov
pop
fdivrl
mov
adc
out
sbb
inc
and
in
mov
inc
push
ffree
mov
popf
lods
xor
pop
shlb
nop
xor
lea
mov
mov
dec
int
mov
aad
faddl
jle
fiadds
pop
je
pushl
mov
fs
stc
sbb
cmpsb
mov
int
or
insb
gs
pusha
or
jnp
ja,pt
ljmp
adc
push
test
adc
sub
in
call
lock
jbe
adc
mov
xchg
cmp
in
jbe
pop
or
jno
xchg
cmp
into
mov
fs
and
or
pop
inc
push
cltd
pop
xchg
scas
xchg
push
mov
pop
inc
add
stos
jns
lods
xchg
in
cmp
cmp
pop
sbb
push
mov
in
outsb
mov
pop
adc
mov
sub
test
fsubs
sub
mov
lea
out
sbb
cmpsb
in
jmp
xor
xchg
les
mov
out
out
dec
das
hlt
addl
mov
and
pop
cmp
iret
pop
sub
insb
xchg
jno
shll
xchg
test
jnp
or
dec
and
xchg
inc
sub
mov
movsb
mov
ret
orb
jo
mov
pop
push
insb
sbb
jg
inc
loope
insl
mov
es
sbb
lods
xchg
mov
jmp
clc
outsb
xchg
int3
jp
or
fcmove
push
jecxz
out
sub
cmp
dec
inc
cli
mov
add
test
inc
jecxz
loopne
sbb
ret
andb
fs
shlb
sbb
test
dec
push
jae
or
testl
sub
ret
fcompl
sbb
add
mov
fs
push
lea
mov
fildl
or
enter
shl
mov
in
jmp
add
stos
push
xchg
leave
lods
lds
sub
arpl
mov
adc
test
jp
divl
cs
push
dec
out
and
ss
hlt
mov
or
or
jbe
dec
adc
jbe
lgs
loope
and
dec
loopne
adc
imul
fistps
lods
std
inc
in
push
mov
popa
adc
es
pop
and
add
popf
or
xor
les
jl
push
push
mov
mov
sahf
cmp
pop
shlb
push
fbld
xchg
in
movsl
outsl
inc
hlt
sahf
pop
dec
add
inc
adc
fxch
mov
into
repz
sub
sbb
or
cmp
outsl
mov
fldl
in
sbb
adc
imull
jae
scas
mov
mov
mov
pop
enter
adc
repz
scas
and
push
cmpsl
imul
cmc
int
lret
xchg
testl
and
mov
mov
inc
pop
dec
imul
shrl
popa
xor
xchg
repnz
sbb
mov
lods
leave
rcr
mov
fsubs
push
xchg
sub
or
fisubs
fistpll
push
mov
enter
push
hlt
jne
aaa
loope
sub
mov
pop
xchg
push
mov
loop
pop
jne
add
sub
lods
sub
addr16
mulb
dec
or
inc
rcr
adc
out
bound
fwait
xor
mov
fnstenv
pop
and
daa
ljmp
std
xor
in
mov
pop
jecxz
hlt
xchg
and
pusha
cmc
mov
sub
cmp
fs
pop
jnp
dec
push
insl
pop
push
lahf
shlb
popa
push
jae
mov
and
test
mov
dec
jl
xchg
repz
mov
xor
xchg
sahf
popa
adc
push
dec
int3
ds
mov
movsl
push
or
mov
or
in
clc
pushw
and
stos
pop
xor
addr16
ljmp
std
sti
mov
mov
in
dec
std
dec
gs
jmp
jns
cmp
sub
into
ss
nop
divl
jnp
arpl
hlt
imul
xor
ficomps
adc
jmp
enter
mov
dec
subb
out
dec
mov
test
pop
and
or
in
into
push
fdivp
sbb
iret
lcall
nop
dec
sub
xchg
imul
cmp
test
out
cld
sub
adc
popa
push
movb
jbe
sti
inc
sub
icebp
sub
lret
push
lods
inc
scas
fs
out
push
jb,pt
ss
stc
ss
xchg
pushl
outsl
xchg
jnp
cmpsl
lds
lods
fiaddl
imul
pop
lcall
je
popf
add
and
dec
and
aam
pop
dec
test
rorb
jmp
and
fmuls
test
mov
mov
or
adc
sub
repz
adc
pop
mov
movsb
xchg
cmp
sub
cmp
loope
das
data16
pop
jbe
stos
fs
addr16
orb
mov
push
cwtl
dec
lahf
mov
test
and
jo
andb
inc
dec
repnz
cwtl
xor
mov
pop
cmpsb
fwait
add
leave
sbb
inc
xor
pop
inc
cmpb
in
sbb
in
testl
jp
lret
in
sub
call
or
testl
sbb
cvtpi2ps
loope
push
test
pop
jb
dec
cmp
popf
sahf
pop
orb
clc
jle
rcrl
dec
fs
push
cmp
or
xchg
mov
addb
push
mov
inc
add
push
iret
mov
test
sub
cmp
cmpsl
jne
in
and
xchg
int3
shlb
rcrw
push
das
popf
test
dec
xchg
lcall
mov
inc
push
mov
ret
lock
bound
jl
fisubs
out
add
cmp
pop
xchg
roll
jp
sbb
jle
cmp
sbb
push
xchg
jmp
jns
sahf
adc
cmp
inc
mov
fidivl
rep
jne
sarb
divl
pop
fistpll
xor
cmp
cmp
jmp
push
adc
in
adc
push
pop
cmpsb
pop
mov
lds
data16
fnstenv
int3
fcmovnb
pop
mov
push
in
repnz
std
rolb
or
adc
movsb
pusha
lds
mov
push
cmp
mov
in
add
rorl
mov
pop
imul
xchg
cmp
insb
hlt
mov
jl
mov
inc
sbb
lret
lock
cld
in
cmp
mov
sahf
inc
push
popf
int3
dec
es
adc
xchg
nop
xchg
faddl
xchg
fucomi
ds
push
mov
sbb
push
in
adc
movsl
inc
psllq
jns
mov
cwtl
push
jo
pop
mov
sbb
mov
push
lock
insl
mov
aas
pop
mov
or
fwait
inc
lret
jo
mov
mov
imul
pop
dec
out
lcall
jb
lahf
dec
fldenv
fwait
xchg
decb
jmp
add
pop
pop
push
push
xchg
jg
cmpsb
mov
lret
stos
pop
jle
mov
sbb
test
das
and
pop
imull
sbb
insb
mov
aad
adc
push
add
inc
dec
lret
push
cmpsl
ret
outsb
dec
sbb
adc
add
cmp
jb
pusha
loop
mov
sarb
add
or
dec
mov
xor
fs
rorb
or
mov
xchg
or
mov
push
imul
aad
lea
sub
lea
ficoml
cli
popa
mov
aas
cmpsb
fiadds
fcomps
or
mov
adc
subl
push
nop
ds
loopne
test
lret
out
and
sub
add
stc
sbb
pop
pop
inc
jecxz
dec
sub
push
jmp
negl
int3
shrb
sarb
xchg
outsl
mov
sahf
out
in
das
out
loop
mov
rcrl
xor
push
dec
ret
push
jo
scas
push
inc
insl
xlat
add
ja
daa
fpatan
add
mov
lret
mov
rcll
cltd
daa
dec
and
xor
call
cli
lods
jno
cwtl
sahf
pushf
rorl
push
int3
sub
pop
test
mov
icebp
aam
cmc
sti
lds
jnp
sub
inc
cmp
or
arpl
pusha
mov
push
outsb
dec
jecxz
cmp
pop
or
adc
movsb
ror
cltd
scas
idivb
popa
nop
sbb
jno
dec
adc
adc
add
xchg
insl
push
mov
inc
sbbl
push
dec
adc
movsb
jg
mov
xor
or
mov
into
xchg
enter
push
mov
pop
in
shll
fbld
mov
pop
sbb
inc
andl
cmp
sub
popl
dec
jns,pn
xchg
sub
pmullw
sub
rorl
pop
push
popa
test
fisttpl
pop
scas
mov
test
jno
dec
popl
mov
test
inc
sahf
cs
add
push
pop
or
mov
sbb
cmp
int
jle
outsl
mov
adc
sbb
loop
mov
enter
inc
je
imul
cmp
lret
das
frstor
ret
popa
jmp
test
mov
mov
jo
fdivs
aad
push
stos
call
add
fimuls
shll
cmpsl
lea
nop
insl
pop
cld
loope
dec
mov
sub
cmpsb
rcrl
movsl
pop
outsl
mov
insb
cli
mov
cs
xor
ror
adc
jp
fistps
frstor
inc
loope
and
sub
adc
dec
xchg
fs
xchg
out
adc
iret
or
leave
add
shlb
stos
adc
dec
in
jae
and
mov
in
cmp
cmp
scas
push
clc
shlb
enter
lahf
jmp
rclb
cwtl
mov
sbb
or
jmp
push
arpl
xor
call
mov
neg
xchg
in
jmp
addr16
and
insl
inc
dec
xor
int3
add
mov
or
sbb
dec
lods
test
sub
inc
cmp
push
es
xchg
push
push
mov
inc
pop
jns
xchg
in
movsl
lcall
and
outsl
stc
push
adc
cmp
negl
xor
iret
inc
leave
add
icebp
lret
and
sbb
insl
in
ss
cmp
pop
cmp
fwait
das
cmp
xor
mov
lock
into
dec
sbb
cmp
xor
ljmp
movsb
jcxz
std
mov
jg
xchg
scas
xchg
ret
lods
and
loopne
mov
shr
jbe,pt
dec
xor
icebp
fldenv
dec
cmpsl
mov
icebp
sub
or
dec
pop
dec
pop
inc
or
mov
or
xchg
test
mov
inc
lret
sub
dec
push
imul
mov
lods
xor
es
add
enter
enter
idivb
or
jne
jb
mov
aas
mov
in
aaa
cmc
out
xor
sar
xchg
dec
aaa
sub
sub
pushf
mov
stos
cmp
inc
cmpl
lock
cmp
inc
pushf
cld
cwtl
fistpl
sarb
sbb
sbb
into
inc
ss
mov
pop
fimull
jl
cs
out
stc
or
rorl
cmp
pop
jne
cmpsl
push
mov
cwtl
fsubl
xlat
mov
lods
sub
inc
xchg
mov
adc
sbb
push
fmulp
fistpll
sub
jge
testb
fisubrs
mull
pop
xchg
dec
jns
xor
js
pop
out
and
fldl
fisubrl
std
jbe
dec
cmp
sbb
repz
dec
hlt
inc
xor
cmc
aam
jg
pusha
push
xor
jmp
out
sbb
jecxz
mov
pushw
sbb
test
scas
jns
mov
cmp
into
add
bound
fwait
es
cmp
cmp
rorl
mov
xchg
aad
adc
adc
outsb
xor
ss
mov
add
and
or
pusha
loope
xor
test
mov
mov
pop
repz
outsl
pop
daa
push
or
fsub
sbb
xchg
ds
pushf
popf
xchg
pushf
addr16
sbb
aaa
loopne
adc
xchg
push
mov
subb
lret
inc
mov
cmp
dec
pop
cmc
enter
in
je
adc
mov
aas
mov
stos
in
pop
mov
and
ret
xor
leave
aaa
outsb
popa
xchg
cmpsb
xor
enter
test
push
mov
jb
lods
out
test
add
sbb
add
aaa
insl
sahf
rcrb
sarb
sti
test
add
mov
fimull
test
fs
adcl
int
cwtl
imul
and
daa
push
sub
pop
call
sub
das
mov
push
subl
push
fcmovnbe
jmp
cs
pop
mov
add
in
mov
inc
sahf
ret
push
stos
cmpsl
or
das
xor
insl
pop
test
lods
xor
out
jp
xor
in
imul
jmp
jae
adc
inc
fs
subb
insb
stos
fwait
insl
in
xchg
push
daa
mov
in
lret
sub
sub
jne
mov
cltd
xchg
push
jmp
mov
fstps
mov
sbb
je
inc
add
int
daa
jl
lret
enter
adc
stos
or
push
adc
pop
cmc
cltd
into
mov
adc
ret
xor
cld
cmp
sbb
xorl
mov
dec
jo
mov
pop
inc
inc
and
sub
xchg
jns
sbb
or
xchg
aas
adc
fsubs
push
sub
nop
push
push
repnz
xchg
ret
cmc
inc
jge
out
es
sti
aas
push
push
iret
cli
xlat
daa
call
insl
repz
stos
shrl
mov
insl
pop
cld
and
cmp
push
loop
das
ret
scas
out
mov
or
pop
loop
mov
lea
negl
xlat
sbb
gs
bound
fldl
and
subl
pop
cs
xchg
clc
xchg
sahf
mov
nop
in
cmp
aaa
pusha
pop
fldt
mov
push
sub
or
sub
in
hlt
jnp
loope
sti
scas
jg
inc
out
push
push
maxps
movsl
iret
fs
inc
add
cmc
xor
incl
jg
mov
test
jns
mov
cli
mov
aas
add
roll
imul
jo
add
dec
lret
enter
in
jg
pushf
cli
ds
pop
aas
push
xchg
in
cmp
scas
push
ret
insb
in
in
lea
idiv
add
push
pop
xchg
mov
dec
pop
popf
xchg
cmc
scas
xor
xchg
cmpsl
stc
inc
add
loope
pop
inc
sub
stos
lret
adc
lahf
adc
sbb
lahf
jae
jae
xchg
xchg
jae
ljmp
pushf
xor
sbb
mov
xchg
gs
pushf
cmpsb
loop
cmp
sub
inc
dec
jae
iret
daa
loope
pop
cmp
popf
std
push
inc
jnp
outsl
push
pop
xlat
or
pop
test
nop
push
jle
leave
jle
sub
cmp
test
xchg
cmp
cmp
sub
fildll
push
cmp
pushf
jl
loopne
cmp
jle
test
sbb
mov
in
xchg
xor
ficoms
sub
xor
jp
cmp
jge
or
into
lret
sahf
xchg
cmp
or
sbb
lds
fsubs
sbb
movsl
dec
push
xor
sbbb
pop
cmp
popa
stos
nop
nop
xchg
aas
xchg
pop
mov
sub
and
mov
aas
and
cld
xchg
pushf
jbe
push
jbe
pop
pop
and
nop
in
push
lds
call
cmc
repz
sbb
cmpsb
push
cwtl
or
mov
cwtl
jge
popf
pop
aad
lcall
push
int3
in
push
and
cmpsb
roll
sbb
filds
fdivr
int3
jb
movl
fs
stos
outsl
sub
push
loope
lea
std
les
adc
shll
loope
or
add
aaa
ljmp
inc
dec
cltd
xor
push
add
inc
inc
hlt
stos
xchg
xor
fbstp
mov
push
jns
fstps
pop
sbb
jb
or
mov
rolb
jp
dec
loope
pop
xor
gs
imul
outsl
cmp
les
adc
into
in
cmpsb
add
cmp
mov
xchg
push
push
mov
lret
mov
xchg
in
sbb
es
xchg
cmpb
xchg
aaa
sbb
int3
jmp
xor
inc
shrb
rcrb
cmp
mov
dec
mov
test
push
dec
icebp
xor
xor
insb
inc
fcomps
and
sbb
pop
adc
loop
add
test
sub
les
cwtl
dec
jns
inc
inc
fwait
daa
jo
inc
pop
popa
scas
daa
bound
lock
in
imul
les
xor
mov
leave
or
mov
loope
and
pop
dec
push
repnz
jg
xchg
fsubrs
sub
lret
add
mov
adc
jl
mov
test
jge
push
mov
cmp
scas
shlb
and
insb
scas
leave
jns
clc
xor
sbb
mov
xchg
dec
loopne
mov
push
xchg
sub
mov
bound
push
notb
jo
xchg
insl
mov
sti
aam
ja
leave
mov
sub
insl
pop
iret
scas
mov
mov
rcl
cs
mov
rcrb
mov
mov
fidivl
lods
hlt
cmpsl
call
pop
pop
push
call
int
fidivrs
andl
or
inc
jmp
rcrl
push
pop
xor
ret
cmp
stc
movsl
cs
mov
cmpsl
out
scas
mov
mov
jl
loopne
sbb
mov
adc
and
cmp
inc
rcrb
mov
add
cs
fsubrs
mov
aaa
fst
fwait
outsl
fwait
sbb
add
cs
enter
inc
paddsb
sbb
or
ljmp
inc
in
arpl
inc
fbld
jne
cmp
pusha
jg
sbb
insl
mov
out
pop
mov
fwait
jno
stos
mov
mov
add
repnz
and
push
mov
insw
lock
or
daa
in
push
outsl
mov
adc
cmc
mov
aad
push
dec
inc
jnp
imull
xchg
lea
pusha
stc
mov
dec
loope
cmpsb
fwait
ljmp
pop
push
dec
hlt
aas
dec
lock
scas
lea
jnp
into
sub
sbb
pop
jbe
rcrb
ja
mov
mov
sbb
xchg
xchg
fnstcw
xchg
inc
push
sbb
dec
mov
sbb
mov
ret
and
iret
arpl
push
outsl
add
push
xor
push
notl
arpl
and
fwait
xor
call
or
sbb
jg
out
in
inc
xor
sub
gs
fwait
adc
insb
jnp
push
mov
aaa
push
nop
push
int3
sti
dec
sahf
pop
xchg
xlat
data16
int3
pop
push
jl
pop
or
imul
and
popa
push
sti
pop
outsb
inc
pop
and
and
inc
push
sti
push
xor
aad
mov
add
daa
je
mov
lret
dec
pop
adc
mov
cmpsb
leave
fisubl
sbb
test
lret
mov
jns
out
movsl
imul
xor
pop
jle
loop
popf
jl
sub
movsb
nop
push
in
pop
fmull
pop
repnz
jecxz
shrb
fnstenv
push
outsb
ret
xor
enter
xchg
adc
dec
lret
mov
movsl
mov
add
dec
mull
rorl
push
sub
jge
sbb
icebp
sub
and
lcall
xchg
and
pop
push
pop
stos
aad
gs
ret
jne
shrb
adc
cmc
mov
imul
addr16
add
sbb
mov
shl
testb
out
mov
loop
clc
sbb
mov
pop
or
out
jge
iret
ret
push
dec
idiv
popa
lods
jmp
and
ret
ret
loopne
and
sbb
es
push
inc
int3
sahf
ret
lods
enter
ja
inc
test
inc
fs
fbld
fistpl
aam
sbb
ds
imul
mov
adc
pop
xchg
pop
imul
pusha
lret
loop
enter
movsl
shlb
dec
iret
pop
stc
out
dec
dec
xchg
adc
sub
mov
add
xor
sub
inc
hlt
cmp
inc
scas
in
push
mov
sarl
jge
xchg
push
sub
jg
jns
shlb
jnp
ljmp
rolb
rorl
inc
add
addl
sbb
pop
inc
xchg
inc
fisubs
dec
sbb
xor
lahf
addr16
std
jle
daa
adc
divl
popl
out
xorl
adc
lods
push
call
pop
add
dec
popf
sbb
mov
xor
add
fists
test
push
enter
pop
xchg
iret
mov
pop
xor
pop
outsl
lock
aas
add
test
adc
pop
add
mov
ret
mov
push
sti
mov
into
in
mov
pop
cmp
sub
sti
jmp
add
jno
push
add
pop
and
lcall
jl
adc
pop
cmp
xor
jbe
js
sti
or
fucomip
jnp
or
inc
insb
push
mov
mov
inc
cmp
xor
and
or
mov
cmp
push
std
inc
xor
mov
mov
imul
jge
mov
push
jmp
mov
adc
sarl
loopne
lahf
aaa
outsb
stos
in
repz
xor
cld
cmpsl
mov
pop
out
idivl
inc
jbe
xor
push
mov
repz
shll
fisubs
lea
mov
mov
mov
es
and
fmuls
push
test
insl
xor
jmp
movsl
insl
pop
cmpl
sbb
push
hlt
iret
lahf
jg
mov
jg
into
out
push
jl
lock
push
in
cmp
repz
cmpsl
hlt
roll
pop
push
cli
xor
xchg
xor
loop
mov
test
insl
push
addr16
push
out
push
jo
sbb
mov
add
xor
sub
jbe
xor
xchg
inc
pop
out
or
jno
or
fdivrs
lret
aas
xor
sub
pop
orl
idivb
or
inc
xchg
mov
xor
in
mov
pop
int3
inc
rsqrtps
bound
pusha
xor
xchg
js
arpl
scas
leave
cmp
out
cmpsl
push
sbb
mov
push
ds
into
hlt
pop
out
xlat
in
in
jmp
lods
add
jno
jbe
dec
xor
int
je
nop
sbb
stos
inc
push
adc
and
xchg
ficomps
idivb
sub
sbb
mov
stc
mov
lock
scas
mov
sub
out
or
or
das
add
arpl
xchg
mov
jno
add
or
leave
inc
sahf
std
rolb
xlat
dec
hlt
xor
sbb
jl
in
dec
sahf
jo
xchg
push
ss
test
mov
and
sub
fcomps
mov
sbb
inc
outsb
scas
sar
sbb
js
cmpsb
icebp
or
mov
or
jb
out
mov
xchg
fnstsw
inc
add
arpl
mov
les
fcom
ret
sbb
mov
stos
fdivl
adc
jge
jecxz
xchg
mov
mov
mov
sub
sub
or
pop
jno
aad
mov
cmp
mov
mov
mov
sub
inc
out
mov
lcall
dec
and
repz
mov
fmull
shlb
into
mov
sub
push
les
sbb
popf
pop
ja
adc
dec
xchg
push
lock
stos
scas
mov
cmpsl
xchg
xchg
pop
cmpl
mov
bound
jo
dec
stos
test
push
aad
popf
push
cmpb
in
mov
out
xor
lods
mov
sub
push
filds
jo
rcrb
xor
fidivl
outsb
pop
or
sbb
subl
stos
fimull
xor
addl
les
cltd
scas
mul
movsl
test
sub
in
push
imul
or
add
nop
or
lods
in
inc
call
mov
jle
mov
shl
xchg
pop
push
sub
xor
shll
mov
inc
mov
out
and
jecxz
outsl
pop
pusha
movsb
xchg
push
cmp
sbb
insl
cmp
sti
xchg
in
mov
fdivl
xchg
push
in
push
lahf
dec
inc
jle
or
inc
leave
xor
or
outsb
sti
cmp
jno
adc
repnz
pusha
jb
cltd
call
cltd
adc
test
ss
push
imul
pop
scas
rol
inc
je
mov
fdivrl
sbb
stc
add
mov
lret
cmp
jge
xchg
sbb
fnsave
fsts
sbb
hlt
pusha
das
repz
mov
testl
adc
push
jl
sbb
xor
or
xlat
add
mov
out
mov
jp
mov
outsl
xor
mov
inc
add
pushf
mulb
clc
dec
lds
and
fldl
or
in
cmpsl
fidivl
mov
inc
call
rclb
cmp
aad
inc
and
gs
aad
scas
shlb
mov
lea
pushf
and
mov
mov
mov
lea
test
xchg
or
push
and
and
xchg
jo
lods
inc
out
cmpsl
xchg
outsl
and
adc
icebp
sub
fwait
mov
cmpsb
rolb
inc
and
jno
inc
jb
cld
call
inc
sbb
nop
aam
cltd
jmp
imul
out
fildll
mov
and
xchg
movl
pop
fildl
call
sub
pusha
outsb
fcomp
mov
das
xor
push
xor
into
push
cmp
push
scas
push
ja
dec
insb
xchg
push
add
pop
and
lods
and
mov
inc
jecxz
xchg
test
pushf
push
jbe
pop
dec
scas
mov
pop
jl
sbb
lea
imul
xchg
aad
push
out
push
aaa
lods
or
movsl
and
push
outsl
movsb
fisttpll
jo
fstpt
int
inc
ret
ljmp
pop
in
pop
js
cmp
add
mov
inc
inc
xchg
mov
insb
loope
psubb
add
inc
rclb
mov
pop
sbb
incb
hlt
test
push
std
gs
mov
lds
insb
test
add
imul
jmp
enter
fucomi
pop
sti
cmp
xchg
lahf
ljmp
jnp
jmp
inc
mov
add
pushf
push
mov
pusha
and
outsb
aas
and
cmp
pop
xchg
inc
mov
out
std
cmp
cltd
pusha
and
stos
add
out
jns
loopne
mov
addr16
fcmovne
movsb
jns
xor
lods
and
dec
cmp
loop
sarl
clc
and
mov
dec
sub
les
fdivrl
mov
and
push
out
loop
inc
das
dec
pop
push
mov
outsl
mov
test
pop
cli
fucomp
jl
sarl
adc
aaa
lcall
mov
or
mov
cld
aad
dec
repnz
mov
mov
add
test
pop
outsl
ljmp
outsb
inc
repnz
outsl
cltd
jnp
in
jnp
stos
push
inc
dec
cmp
outsl
xchg
jno
add
andb
push
dec
cmpsl
cltd
cmp
imul
sub
in
adc
jle
push
mov
sub
or
sbb
mov
dec
leave
pop
test
lret
call
das
xchg
pop
mov
sbb
hlt
mov
movsl
imul
jns
xor
inc
out
sub
add
fildl
orl
push
out
xlat
mov
push
sbb
lods
cmp
cmp
loopne
pop
dec
or
jne
sub
out
or
enter
jmp
sub
inc
popf
rcll
test
jecxz
dec
mov
mov
fildll
fbstp
jl
dec
inc
or
roll
jnp
leave
jne
enter
jb
pop
nop
enter
or
mov
mov
bnd
cmpsl
es
pop
dec
push
aas
inc
lret
xchg
mov
pop
out
push
in
movb
mov
ss
aaa
mov
scas
inc
mov
test
fildll
repnz
cli
mov
cmp
inc
xchg
data16
dec
or
aas
fmul
icebp
jp
and
cwtl
test
in
lret
std
sub
mov
orb
mov
sar
pop
jge
jmp
push
adc
jae
fcom
daa
cli
mov
das
adc
pop
xchg
fsub
adc
mov
and
lods
jle
push
xchg
xor
fs
fbstp
sbb
sbb
xor
rorl
test
inc
test
arpl
inc
xor
xchg
cli
pop
not
pop
cwtl
jne
scas
pop
xchg
ret
xor
sub
pop
jp
aam
into
ljmp
jne,pt
imul
mov
outsb
jecxz
adc
xchg
xchg
sbb
aad
loopne
mov
mov
fadd
jmp
arpl
rcll
cmp
push
add
jecxz
fdivrs
lret
jl
xlat
out
cmp
or
clc
insb
cmp
neg
mov
ror
inc
push
bound
mov
sahf
subl
loopne
push
cli
fucomp
mov
mov
inc
imul
fbld
rcr
mov
test
xor
sbb
es
adc
cmpsb
test
imul
xor
mov
dec
cmpsl
mov
push
adc
dec
test
inc
stos
jae
xor
in
pop
loop
bound
and
mov
js
leave
test
inc
add
das
cmp
icebp
aad
imul
cmc
out
mov
xor
mov
push
test
call
sti
inc
popl
fistps
jg
jo
or
mov
xchg
sbb
mov
sahf
movsb
mov
xor
jne
lds
mov
test
sti
mov
out
and
fcomps
jmp
pushf
movsl
sarl
mov
insl
ds
push
pop
jno
pop
loope
cwtl
lret
add
push
add
popa
xchg
data16
test
sti
inc
adc
push
das
push
adc
push
xchg
test
mov
push
mov
cmpsl
mov
xchg
add
pop
dec
inc
les
sti
shl
push
mov
and
jo
inc
lock
lahf
cmp
sbb
mov
cltd
xchg
xchg
jno
popf
lea
xor
sub
pop
adcl
dec
pop
dec
push
pop
cltd
or
stc
iret
jnp
nop
test
or
int3
ret
push
negb
call
std
in
xor
push
stos
mov
dec
pop
mov
test
pop
dec
jae
pop
add
in
imul
ljmp
aaa
rcll
stc
adcl
fisttpll
icebp
pop
loope
mov
mov
jmp
cmpsl
insb
fisttps
jno
and
fsubrl
cmpsl
cmpsb
xchg
adc
cmp
adc
xor
adc
sbb
xchg
nop
or
mov
cmp
mov
xchg
ljmp
add
subl
cwtl
data16
inc
pavgw
mov
paddd
fs
cmp
dec
movsl
test
push
add
out
mov
sbb
cltd
nop
mov
pop
cmpsl
shrl
icebp
sbb
mov
sbb
mov
imul
add
add
std
add
iret
mov
lret
adc
nop
xchg
dec
mov
xor
ds
mov
fnstsw
ljmp
mov
arpl
ss
in
inc
xchg
cmp
je
icebp
pop
mov
pop
loopne
pop
xor
adc
mov
fiaddl
inc
lahf
push
mov
xor
push
imul
and
adc
sbb
mov
cld
add
dec
outsb
pop
sbb
fisubl
fildl
sarb
ljmp
xor
pop
sbb
pop
aam
dec
repnz
in
insb
jge
mov
pop
and
jnp
or
mov
cmp
and
adc
sbb
clc
mov
sbb
xlat
and
mov
divl
int3
popa
adc
cmpl
xchg
lea
repz
jge
pop
inc
push
pushf
or
outsl
orb
mov
cmp
test
sti
mov
ret
add
mov
outsb
out
movsb
loope
or
xchg
pop
fbstp
jl
repnz
popf
mov
mov
addr16
pop
pop
addr16
or
lahf
pusha
xchg
adc
or
lret
and
dec
imul
lret
cmp
fidivs
jno
xchg
in
scas
cli
jmp
pop
jg
lret
inc
push
test
rorb
or
dec
adc
add
xchg
jmp
xchg
aam
fwait
push
sbbl
inc
in
outsb
scas
xchg
sub
dec
daa
cmp
es
rcrl
xlat
inc
bound
repnz
xor
add
inc
xor
push
mov
xor
outsb
mov
jl
xchg
adc
repnz
jno
mov
out
jbe
movsb
test
arpl
adc
sbbl
in
xchg
fcomp
clc
xor
push
cs
lcall
dec
pop
lds
add
adc
cmpsl
shlb
fdivrp
jno
push
rcrl
add
out
jnp
aad
push
mov
and
xor
mov
mov
mov
movsl
das
loope
fldl
cld
pop
xchg
clc
push
ret
idivb
xor
dec
adc
and
enter
mov
dec
dec
fnsave
jno
pop
bound
pushf
jmp
push
mov
dec
fstps
mov
subb
dec
push
cmp
push
push
fnsave
sbb
inc
mov
dec
sbb
imul
or
popf
cmp
push
mov
pop
andb
flds
xor
insb
dec
clc
divl
sbb
fidivs
jp
lock
mov
fisttps
sub
xchg
mov
xor
inc
stc
mov
xor
fmul
std
xchg
repnz
mov
sbb
inc
lds
sub
mov
sub
repnz
jge
adc
jne
cmp
pop
add
mov
pop
inc
lods
mov
fdivs
fldenv
add
xor
sub
xchg
mov
xchg
dec
jle
xchg
loop
push
pop
sbbb
pop
xor
push
dec
jb
ds
repz
repnz
movsb
cmpsb
sbb
and
adc
xlat
mov
es
lret
push
repz
les
aaa
lret
mov
movb
xchg
pop
sub
inc
ret
scas
push
push
xchg
lret
pushf
jge
push
and
enter
push
sub
ss
pushf
xchg
jne
subl
lahf
xchg
dec
pop
sub
cmpsl
sbb
sti
std
imul
aas
mov
aas
xchg
in
out
push
scas
mov
sar
lea
imul
pop
and
lcall
push
loopne
pop
in
sub
mov
leave
mov
adc
scas
xlat
xor
sti
push
js
push
jp
enter
movsb
lods
push
jge
lock
sbb
xor
ret
rolb
xor
sub
movsb
push
sbb
nopl
and
ja
xor
mov
push
xlat
cmp
push
or
mov
push
xchg
sub
mov
and
adc
ds
mov
je
ret
lahf
pop
or
xor
dec
sub
xlat
stos
sub
ret
rcr
repnz
cmpsb
mov
mov
movsb
in
add
mov
mov
push
jge
int
call
push
lods
mov
cmp
dec
push
leave
arpl
sbb
push
nop
xchg
subl
and
cmp
gs
push
push
outsl
insl
cltd
push
sahf
nop
xor
jne
sahf
xchg
add
hlt
incl
shrl
cmp
pop
out
sub
lock
mov
loopne
les
sub
daa
cltd
jo,pt
mov
sbb
into
xor
cs
or
mov
mov
mov
hlt
fcmovu
adc
push
sub
notb
hlt
movsb
push
jg
fs
je
out
shrl
or
add
and
mov
xchg
xor
inc
lahf
sbb
xor
mov
sbb
fbld
mov
out
imul
fwait
xchg
inc
repnz
xor
in
jl
fldcw
adc
sub
fisttps
jge
adc
mov
das
lcall
pop
pop
movsb
lret
and
in
pop
imul
xchg
pop
outsl
call
loopne
mov
pusha
sarb
pop
add
push
imul
sti
xchg
push
dec
aam
dec
icebp
mov
xchg
pop
or
pop
adc
in
dec
adc
push
adc
adc
adc
xchg
xchg
pop
xchg
paddd
sbb
push
push
int
adc
add
pushf
xchg
aad
int
test
test
jge
arpl
and
push
mov
push
mov
cmpsl
je
hlt
mov
cmp
sub
daa
add
mov
sub
popf
jl
jmp
lods
clc
adcl
fildll
jp
inc
iret
lods
jmp
jb
cmp
stos
add
push
add
test
mov
mov
push
movsb
xor
sbb
mov
sar
pop
das
rcrl
mov
in
fs
mov
arpl
popa
jmp
dec
adc
pop
cld
sahf
cmp
mov
pop
xchg
xor
push
loope
mov
cmpsb
adc
xchg
fdivs
mov
popa
push
jne
outsl
jns
call
adc
sub
cmp
cmp
fldenv
jns
mov
outsb
jg
aad
and
dec
mov
pop
add
or
std
xor
sub
dec
lds
loop
mov
or
std
pushf
pop
bound
les
mov
les
hlt
mul
js
pop
xor
ja
xor
sub
repnz
xchg
loopne
pop
add
out
subl
push
push
addl
std
pop
jbe
jp
insb
lcall
mov
lods
mov
ja
adc
xlat
fwait
inc
fildll
lret
xor
or
xor
fsubs
add
sub
sbb
dec
aad
fcoms
stc
xchg
or
aad
jmp
je
mov
cmp
push
in
ja
inc
scas
cmc
jb
add
mov
call
aas
scas
add
imul
loope
jo
fdiv
inc
in
mov
scas
shll
gs
out
add
fdivl
xor
and
cltd
xlat
cmp
loopne
rolb
and
jne
push
mov
add
sahf
int
push
push
rolb
std
or
dec
mov
mov
jmp
inc
mov
test
outsl
loopne,pn
jl
pushf
inc
mov
es
cltd
popa
sub
fcoml
call
out
or
mov
adc
or
push
sub
sub
push
shl
loop
cld
push
sub
mov
arpl
lock
int3
cmp
jb
mov
sarl
ss
imul
adc
in
cmp
xchg
scas
popf
xchg
notb
xor
push
ja
into
mov
pop
sbb
jne
jae
pop
cmc
out
sbb
ret
or
icebp
xor
cmp
inc
pop
add
xchg
ret
pop
fimuls
pop
jmp
dec
mov
out
mov
jl
fs
outsl
ret
stos
adc
mov
aam
lret
dec
mov
xor
icebp
leave
xchg
adc
push
gs
out
sbb
push
aam
mov
cmp
sbb
imul
mov
sbb
push
cltd
dec
fistps
ret
repnz
jge
dec
jae
call
dec
pop
or
fistpl
hlt
jecxz
ds
ss
jno
mov
inc
outsb
in
and
dec
push
into
test
std
bnd
ljmp
test
jp
cmpsb
lcall
flds
cmpsl
enter
xor
xor
fisubs
adc
movsb
adc
pop
repnz
pop
inc
dec
mov
pop
or
les
or
and
xor
and
out
sub
movsb
mov
jge
or
mov
nop
fcoms
mov
cmp
xchg
lret
xchg
add
lods
es
sub
add
insb
mov
cltd
pop
sbb
psubw
xor
xchg
xchg
push
leave
or
pop
adc
lcall
rclb
movsb
adc
out
in
scas
aaa
icebp
ja
insl
jne
and
mov
or
inc
adc
add
xor
out
movsl
arpl
mov
jg
outsb
inc
hlt
into
repz
mov
dec
inc
pop
pop
enter
push
in
mov
and
push
test
ljmp
das
sub
mov
adcb
mov
jg
test
dec
add
push
cmp
xor
imul
insl
lock
add
ss
in
pop
lods
adc
mov
into
sub
xchg
lahf
sub
cld
sbb
lret
xor
jbe
lods
rcrl
adc
aad
add
fsts
lcall
cwtl
sbb
pop
sub
dec
mov
cmp
xchg
push
or
mov
xor
fidivl
sbb
push
cmp
mov
mov
dec
ja
ret
mov
pop
test
out
cs
les
mov
das
jge
mov
xchg
mov
fistpl
jne
ss
adcl
call
call
fcomps
mov
das
or
pop
mov
movb
jno
inc
pop
sahf
pop
or
mov
lcall
fwait
or
fildll
rorl
pop
or
push
mov
add
and
insl
insb
xchg
lcall
xchg
push
cmp
cwtl
cmp
shll
xor
arpl
sub
cmp
jge
cmp
loop
push
fldl
je
sub
lds
cs
jg
cwtl
and
shll
cmpsb
ss
scas
mov
mov
mov
inc
imul
and
fistpll
js
cmp
jnp
fld
xchg
movsb
stos
push
jb
repnz
in
out
shrb
push
jle
test
sub
push
outsl
cmpsb
nop
out
inc
sbb
jb
insl
jl
sub
sub
scas
aad
shlb
inc
lahf
pop
mov
enter
pushf
fcoml
mov
add
sub
wbinvd
and
cld
mov
pop
fwait
lcall
push
les
xchg
aas
rcrb
sbb
ficoms
out
mul
xchg
pop
addr16
inc
inc
mov
sbb
push
jecxz
pop
pop
mov
cmpl
icebp
push
mov
movb
dec
inc
sub
cmpsl
mov
sbb
subb
fs
and
addb
cld
add
cmp
data16
and
movsl
mov
or
cmc
es
push
fwait
add
movsl
pop
in
lea
mov
pushf
inc
push
sub
outsl
in
fs
sbb
add
or
arpl
or
or
inc
jnp
push
mov
adc
mov
testl
popf
loope
je
fildll
lods
nop
popf
cmpsl
sub
lahf
push
add
xchg
add
push
mov
and
lods
leave
push
stos
in
cmpsb
inc
aad
add
lahf
out
pop
xor
cmp
js
scas
shl
pop
inc
dec
pop
mov
xchg
cmp
xchg
enter
es
mov
cli
fists
jb
outsb
outsb
pop
jl
iret
xchg
sahf
cmp
inc
dec
test
sub
xchg
mov
cmp
out
ret
orl
mov
or
jno
add
dec
aam
sub
push
shr
leave
adc
xchg
push
xchg
lcall
adc
pushf
jmp
fsubs
jns
int3
mov
adc
scas
in
xor
popa
mov
push
xor
repz
shrl
lret
popa
xor
stos
in
jb
out
fdivp
dec
test
mull
xchg
push
mov
inc
pop
ljmp
addl
rcll
dec
roll
or
shl
mov
jmp
add
xchg
mov
aas
inc
mov
mov
subl
dec
cld
pop
xchg
jg
xor
adc
push
outsb
pop
or
sbb
mov
jbe
cmc
push
sbb
add
aaa
lcall
lock
inc
mov
jecxz
or
jecxz
aad
nop
xor
outsb
jbe
sub
jns
cmp
pop
dec
ret
loopne
inc
jge
cmp
mov
sbb
in
or
push
mov
hlt
movsl
fstpl
cwtl
inc
dec
test
and
or
xor
sbb
jae
mov
push
icebp
xlat
push
xor
subl
aaa
or
enter
out
mov
add
out
int3
mov
mov
jnp
mov
adc
xchg
xor
sar
sbb
and
ret
xor
fsubrl
or
dec
fwait
lahf
iret
xchg
mov
inc
ljmp
cmp
test
repz
cmpsb
jnp
mov
mov
movsb
push
sub
fidivs
js
push
mov
scas
xchg
mov
mov
push
push
cmpsl
dec
mov
pop
push
mov
jb
lds
pop
mov
sbb
mov
cmp
pop
xchg
sub
jae
sub
inc
mov
cmp
mov
jnp
mov
orl
mov
jge
jne
inc
mov
ret
pop
mov
loopne
mov
aas
icebp
xlat
pop
rolb
adc
call
scas
cmc
and
jns
or
jp
mov
fwait
xor
lcall
fwait
mov
icebp
shlb
cmp
xchg
rcll
scas
lcall
adc
xor
stc
cmp
bound
mov
loope
cli
psllw
cltd
es
insb
cli
cmp
loop
dec
cmpsl
xor
movsb
hlt
ret
movsb
xchg
mov
add
pushf
push
jl
pusha
and
sbb
movsb
cld
sarb
clc
fnsave
pop
push
sti
arpl
mov
stos
fldenv
stos
adc
fwait
sbb
ss
das
iret
arpl
pop
insl
out
cs
int3
hlt
mov
shrb
dec
pop
jb
in
pop
insb
pop
push
mov
fcmovnbe
mov
inc
aas
adc
xchg
dec
adc
mov
sbb
stc
pop
sub
mov
pop
lock
loope
fs
fcmovnu
lret
test
mov
fnstcw
stc
loopne
repz
inc
ja
sbb
dec
jmp
adc
sbb
lods
arpl
jnp
mov
add
inc
inc
mov
movsb
add
mov
lahf
lock
jbe
jle
xchg
add
jbe
jge
imul
loop
adcb
bt
idiv
jg
loope
mov
jg
jne
aas
fst
idiv
sub
sbb
mov
cmp
sub
flds
xlat
cmp
out
inc
icebp
pushf
add
dec
adc
add
dec
jle
ficompl
mov
outsl
and
fnstcw
push
aad
sbb
cli
sbb
es
hlt
xchg
lods
adcb
leave
adc
cmp
daa
cmp
and
sahf
xor
sub
loopne
mov
lahf
mov
jp
xor
pop
test
in
pop
outsl
call
mov
jne
pop
and
push
stos
mov
push
aas
cmp
outsb
jp
mov
add
jge
call
es
aas
dec
fmul
xor
repz
push
lcall
fisubs
mov
shlb
testb
cmc
adc
inc
sbb
lock
cmp
mov
pop
push
int3
jnp
push
fldl
fs
fwait
mov
ljmp
fmuls
popa
mov
push
and
jns
and
dec
rorl
in
int
stc
out
in
outsl
add
bswap
imull
xchg
pusha
mov
jae
sbb
mov
out
bound
out
jae
dec
cli
add
loopne
ja
stc
ljmp
xchg
hlt
lret
in
popf
dec
jno
mov
push
cmpsb
mov
push
fistpll
mov
xchg
add
pusha
mov
loopne
push
add
cmc
fwait
daa
mov
bound
lret
bound
xor
mov
cmpsl
xor
popf
rolb
and
adc
cmp
pop
push
into
in
xor
out
inc
addb
xor
ljmp
jnp
lods
dec
add
jg
dec
jecxz
das
mov
mov
icebp
mov
add
iret
xor
jb
rcll
int
cmp
cwtl
and
jbe
inc
adc
mov
pop
outsb
sbb
mov
mov
in
add
div
mov
mov
mov
nop
ret
or
mov
dec
xchg
arpl
divb
xchg
adc
ja
push
mov
jo
cltd
xchg
mov
std
popf
insl
xor
mov
sub
popf
mov
negl
ret
mov
push
out
cmp
arpl
and
xor
jp
or
jb
or
push
sbb
adc
mov
push
pop
jl
fs
cmp
push
dec
repnz
pop
pop
xchg
pop
ret
je
outsl
and
shr
sbb
cmp
fs
stos
jb
in
jl
aad
ljmp
stc
mov
sub
adc
ret
and
pop
dec
dec
mov
sub
int3
mov
js
lods
add
sub
jns
push
mov
jae
xor
dec
rcrl
daa
mov
dec
ret
mov
pusha
xchg
outsb
cmp
xor
and
out
and
sub
aad
xchg
stos
imul
push
push
in
dec
xchg
stc
fistl
xor
and
int
dec
adc
cmp
das
xlat
ja
sub
jae
sub
fldcw
stos
xchg
test
scas
cmpsl
out
mov
sbbb
call
and
add
arpl
cmpsl
into
sub
xchg
xchg
fmull
jne
sbb
cmp
aas
xchg
lret
or
ds
adc
sbb
push
cmpsl
in
push
fstps
das
add
xor
sbbl
adc
arpl
xchg
iret
xchg
push
sar
push
test
or
ja
cld
push
xor
shl
mov
les
mov
pop
push
addl
stc
lret
outsb
iret
push
es
jge
dec
imul
popf
rcr
inc
inc
cs
xchg
fbstp
cmp
xchg
pop
fildll
jb
lock
shr
add
test
cmc
xor
mov
rcrb
xchg
push
xchg
jno
dec
mov
mov
cld
adc
dec
cmp
rcrb
mov
xchg
mov
xchg
push
jg
adc
fsubs
out
cmp
xchg
call
mov
push
jno
lods
xor
in
sbb
jb
mov
jnp
leave
int3
rorb
stos
push
sbb
push
mov
dec
push
jns
out
pusha
adc
ljmp
mov
addr16
loopne
add
inc
mov
xchg
ret
fdivs
je
lock
pop
shlb
js
jmp
push
mov
xor
sbb
loopne
enter
dec
push
xchg
and
cmp
iret
scas
push
mov
in
ret
in
jg
pop
in
cltd
xchg
dec
cld
add
dec
push
mov
subl
shrb
adc
orb
xchg
push
xchg
sbb
or
dec
xchg
stos
xchg
sti
jae
pop
jo
mov
ret
lcall
dec
jl
pop
loopne
test
sbbb
lret
xchg
cmp
mov
stos
inc
sahf
mov
popf
std
cmc
pusha
sbbb
jle
dec
mov
mov
hlt
imul
sbb
inc
pusha
fisubl
or
movsl
pusha
pop
insb
mov
stos
jg
mov
mov
cmp
xchg
cmp
aaa
adc
push
int
xor
push
idiv
mov
push
pop
daa
sub
inc
iret
cwtl
lock
adc
leave
jae
xchg
fistps
popa
jno
adc
mov
sbb
push
enter
sbb
pop
inc
shrb
xchg
add
sub
icebp
cld
jo
fnsave
lret
mov
jl
std
in
cs
cmp
fsubp
add
push
das
push
xor
xor
call
in
pushl
adc
dec
cmp
adc
push
mov
sar
mov
pop
ljmp
popa
lods
cmp
bound
xchg
add
inc
pop
imul
aas
in
push
cmp
outsb
repnz
cmpsl
fisubs
sbb
mov
stos
je
test
add
stc
or
cmc
push
stos
cwtl
pop
jnp
out
jg
jge
incl
mov
sub
lret
into
arpl
add
inc
mov
lahf
rclb
adc
push
mov
xor
shll
cmp
jbe
test
push
add
add
lret
or
test
out
pop
cld
dec
ret
lds
sub
cmp
les
xchg
sub
inc
stos
stos
outsl
inc
xor
int3
xchg
into
dec
imul
dec
sub
test
into
test
mov
adc
clc
inc
stc
inc
out
cmp
scas
push
jae
rclb
mov
xchg
inc
into
rcrb
xor
jp
mov
fstl
push
mov
inc
scas
mov
pusha
mov
mov
dec
pop
das
test
add
inc
add
stc
mov
loop
fidivl
push
mov
in
jl
push
sti
adc
xchg
jmp
icebp
ja
lock
scas
jae
xor
cmpsl
mov
insl
and
mov
and
mov
xor
insl
inc
imul
push
inc
mov
pop
shl
xchg
pop
xor
adc
dec
and
dec
sub
int3
mov
fldcw
sub
dec
mov
shl
jge
sahf
sbb
xor
cmp
sbb
cmp
mov
pop
push
outsb
test
mov
jge
push
std
fnstsw
test
addb
subl
daa
popf
jl
movsl
sub
je
mov
jecxz
add
pop
mov
add
dec
aad
xchg
nop
or
jl
xlat
fcompl
push
or
je
lds
stos
xchg
jecxz
ret
push
and
push
or
mov
push
arpl
mov
cmp
leave
jle
mov
data16
pop
fcoms
cmp
ret
xor
pop
jns
push
jns
flds
jnp
out
add
add
mov
shr
and
sbb
push
rcll
xchg
mov
adc
stos
fs
push
outsl
rorl
xchg
test
in
xchg
out
lea
stc
scas
je
repz
fdivrl
dec
pop
cmp
inc
clc
fs
das
mov
add
lea
jns
xchg
ss
aam
mov
lds
mov
das
jns
outsb
mov
fcoml
xor
push
xor
sub
scas
sbb
pop
cmpsl
cltd
adc
inc
adc
xchg
mov
aas
inc
lea
pop
repnz
sti
stos
out
push
hlt
ds
or
sbb
fwait
pop
outsl
or
sbb
mov
xor
mov
dec
lahf
pop
inc
xor
and
xchg
cmovne
out
into
lds
comiss
push
insb
ds
push
lods
roll
jnp
pop
add
lret
and
cmp
sbb
inc
mov
cmpb
dec
or
stos
xlat
sub
lods
pop
je
bound
filds
mov
popa
fisttps
dec
jbe
cmpsb
push
inc
mov
decl
mov
iret
sbb
push
cs
imul
pop
imul
cmp
addr16
divb
lahf
cmpsb
fs
xchg
or
add
push
inc
mov
and
mov
es
clc
pop
orb
xchg
or
lods
cmp
dec
push
mov
xchg
sbb
sbb
pop
sub
movsb
fwait
shl
sub
gs
test
jbe
push
inc
lret
ds
mov
nop
cmp
daa
arpl
cmpsb
mov
out
push
sub
popa
cmp
hlt
or
pop
sbb
jecxz
xchg
lods
std
dec
mov
int
int
icebp
es
adc
stc
or
popf
out
inc
and
inc
xchg
outsb
or
pop
xor
test
call
mov
push
leave
outsl
push
popa
imul
mov
scas
arpl
push
or
imul
jb
out
sbb
push
aas
out
out
sub
mov
lret
lods
push
xchg
movsb
cmp
push
push
push
jnp
iret
add
pop
jne
and
andb
sub
or
fsubrl
jnp
jbe
jge
call
jo
out
or
push
mov
in
testb
test
mov
mov
jg
jns
jo
shrd
fistpl
inc
repz
mov
test
stc
add
pop
call
xor
je
lods
lcall
aad
popa
mov
gs
mov
fldl
jae
dec
mov
test
gs
or
ja
add
movsb
push
cmp
cmc
out
jae
repz
lret
js
cmpl
and
test
mov
adc
dec
rcll
outsb
or
mov
out
sbb
cwtl
shl
cli
pop
push
out
push
pop
test
dec
xchg
sub
jbe
fildl
mov
leave
jnp
rcll
pop
test
dec
mov
and
inc
sbb
add
out
scas
mov
iret
pop
xchg
pop
mov
sbb
aam
jo
test
icebp
sahf
jnp
cmp
idivb
push
loopne
xor
mov
push
pop
cli
push
lcall
movsl
push
hlt
outsl
cmp
mov
dec
dec
scas
sub
jne
mov
out
sbb
aaa
adc
stos
dec
add
xlat
out
and
mov
pop
hlt
lock
pop
loopne
mov
insl
or
out
and
add
mov
sbb
popa
roll
test
xlat
push
scas
ss
rorl
rcr
mov
and
imul
cmpsb
add
sbb
adcl
je
jno
inc
fldt
pop
aaa
subb
pop
add
leave
push
mov
pushf
ljmp
filds
xchg
stc
inc
lods
int3
inc
and
jle
f2xm1
jnp
into
push
sub
cmpl
ja,pt
lods
or
mov
mov
subl
lds
xchg
mov
loope
test
xor
inc
sub
scas
lret
test
jmp
dec
stc
xchg
repz
jmp
mov
mov
jl
into
dec
int3
shlb
aas
nop
icebp
sbb
aas
aaa
lds
jnp
stos
pop
inc
outsl
test
addr16
push
adc
mov
xchg
pop
iret
jp
pop
int3
pop
jns
test
into
cmp
mov
test
xor
xlat
mov
outsb
add
jbe
or
rorl
mov
or
cwtl
out
mov
imul
dec
push
lock
mov
sub
lock
inc
push
addb
shrl
cmp
push
jg
push
pop
push
push
fadd
jg
pop
push
sahf
jmp
inc
jae
imul
push
inc
sub
sti
mov
mov
mov
sbb
lcall
cmp
jle
jp
pextrw
pop
fcmovnbe
in
addl
mov
and
pop
jge
cwtl
push
insb
test
xor
jno
insb
imul
push
int
xor
mov
sbbl
dec
push
mov
mov
or
inc
in
roll
pop
stos
mov
jecxz
pextrw
pop
les
lret
adc
dec
fstpl
xor
mov
mov
jae
xchg
cmp
loope
fwait
adc
mov
out
sub
dec
cmp
pop
out
cmp
cwtl
test
int
ret
mov
repnz
testl
sar
jnp
dec
or
imul
sbb
mov
push
inc
mov
inc
xchg
jle
pop
and
jmp
jnp
nop
and
inc
cltd
mov
mov
adc
sbb
ljmp
sbb
ds
mov
cmp
mov
dec
ljmp
es
xchg
fdivl
std
lret
ror
mov
add
push
pop
xlat
loopne,pt
repnz
or
pop
sbb
jo
inc
mov
shlb
test
cmp
negb
mov
and
push
jecxz
into
xlat
pop
xchg
cwtl
xlat
mov
pop
push
ljmp
incb
mov
mov
push
add
add
mov
jne
clc
xchg
adc
mov
push
aas
int3
mov
lods
push
nop
lret
fisubrs
sub
inc
adc
lret
or
sbb
ljmp
cmp
test
jo
xor
jne
repz
outsl
dec
push
loope
loope
outsb
arpl
aam
stos
push
xchg
jmp
and
js
dec
stos
into
mov
jl
inc
jmp
add
rcll
mov
xlat
cs
mov
add
xlat
mov
cltd
adc
insb
lods
dec
leave
cmp
imul
leave
adc
xor
xchg
enter
and
or
sbb
jecxz
sub
cmc
inc
mov
sbb
mov
pop
roll
insl
adc
push
les
mov
popl
inc
aas
enter
imul
jo
pop
inc
and
shrb
or
imul
push
popf
jnp
and
and
daa
adc
mov
movl
inc
jmp
daa
es
inc
js
cwtl
gs
sbb
popl
pushl
fwait
mov
out
mov
les
and
pop
inc
mov
push
insb
adc
xor
cltd
lcall
mov
mov
lods
pop
rcl
xchg
jnp
mov
bound
inc
pop
js
push
add
adc
loopne
sbb
mov
jge
dec
mov
fcmovnu
ficompl
lcall
jne
dec
into
popf
adc
or
mov
mov
out
push
mov
fdivr
aad
cli
mov
cs
adc
add
and
jae
iret
das
sbb
xlat
or
std
data16
cli
das
mov
test
cwtl
inc
loope
clc
xorb
inc
fwait
or
nop
inc
sub
mov
lea
stc
enter
add
xor
int
adcb
mov
call
iret
mov
mov
push
jmp
nop
fwait
dec
fnstcw
imul
mov
bswap
fiaddl
mov
xchg
mov
stc
push
pop
enter
mov
xor
xchg
sbb
imul
scas
cmpsl
ds
outsb
jo
out
xor
stos
andl
inc
mov
jmp
cwtl
pusha
sahf
and
mov
xor
hlt
inc
jae
in
cmp
pop
lock
cmp
iret
popa
sub
outsl
stos
dec
popf
and
fisttps
out
inc
enter
outsl
push
fdivrl
add
cmc
imulb
pop
stos
xchg
cmp
xchg
jnp
push
icebp
push
inc
mov
inc
or
pop
fbstp
push
or
xlat
dec
ret
xor
mov
lds
in
xor
daa
mov
add
rcr
ret
sahf
call
cmp
ret
jae
fbstp
rorl
mov
stos
aas
dec
pop
shl
repnz
push
sub
cli
outsb
pop
shll
pop
xchg
sbb
jle
inc
xlat
xchg
pushf
stos
mov
sbb
out
lods
push
pop
jmp
xchg
insb
aas
clc
mov
add
mov
rcll
popf
add
fnstenv
mov
push
cmc
cmpsl
jge
stos
and
sbb
call
sahf
in
repz
insl
cmp
fstpl
mov
lods
icebp
mov
fidivs
sbb
outsb
cmp
mov
sbb
bnd
in
fwait
pushl
cmpsl
push
pop
inc
out
fwait
rcrl
adc
jo
jle
orb
inc
mov
aam
stos
push
dec
push
lahf
cmp
cltd
aas
inc
push
sti
or
mov
mov
daa
popa
repnz
mov
aaa
popf
mov
and
ret
xor
in
adc
xor
jns
sbb
test
mov
xor
roll
sti
jb
stos
xchg
cmp
cmp
push
cld
aaa
imul
adc
and
ds
mov
lods
mov
movsl
xor
repnz
lods
movsb
mov
pop
xor
iret
ret
dec
in
push
xchg
aaa
inc
inc
sarl
sub
sub
fisubs
sahf
mov
inc
or
sbb
movsb
test
push
jmp
push
and
cmpsb
inc
arpl
push
mov
call
cmovb
inc
imul
mov
loope
lcall
jbe
push
mov
xchg
xchg
rcrl
or
mov
pop
pusha
mov
and
lret
xor
cmp
push
icebp
loop
adc
ret
xchg
cmp
mov
sar
arpl
cmpsb
in
shlb
and
dec
jbe
cld
xchg
inc
xor
jmp
jmp
mov
lds
and
cmp
test
cmp
inc
or
pop
or
ds
sbb
call
xor
aas
dec
fisubl
fnstenv
enter
push
loope
add
les
adc
rorb
pop
cmpsl
out
inc
fwait
outsl
idivl
dec
mov
mov
xchg
daa
sbb
mov
ljmp
cwtl
mov
xor
pop
add
xor
hlt
mov
adc
cli
test
adc
mov
jmp
adc
add
in
into
xor
pop
mov
lret
pop
pop
inc
test
push
adcl
jbe
cmp
xchg
push
mov
pop
rcrl
pop
xchg
jecxz
mov
data16
add
pop
cld
outsl
cmpsb
mov
lods
arpl
aaa
nop
xchg
into
in
cwtl
hlt
add
dec
loop
adc
dec
sbb
jnp
adc
shrl
sub
data16
cmp
sub
and
lods
cmpsl
in
mov
sbb
icebp
mov
lahf
sbb
jb
cltd
out
mov
loope
out
and
mov
xor
addb
lret
dec
loop
sub
loopne
jb
movsl
mov
mov
add
aaa
xor
addr16
or
lcall
cmp
push
xchg
aad
mov
push
add
cmp
mov
dec
inc
fpatan
outsb
leave
push
out
test
aaa
mov
negb
push
mov
aaa
or
mov
lcall
xor
xchg
xor
movsl
lret
mov
fsub
movsb
mov
adc
cmp
clc
xlat
sbb
sub
cli
shlb
int
lahf
sbb
xor
sahf
stos
push
jnp
xchg
fxch
mov
ds
test
dec
test
lcall
mov
lock
fisubrs
les
imul
int
in
cltd
ret
lahf
loopne
js
popa
add
jb
mov
mov
push
push
sahf
pusha
clc
and
jno
fcoml
xchg
loopne
and
call
mov
sub
jnp
pcmpgtw
push
mov
inc
push
xchg
lret
mov
and
and
pop
xor
out
mov
push
sahf
js
pop
fs
cmpb
xor
inc
or
jp
fdivrp
cmp
pop
ds
and
cmp
dec
cmpsl
lret
lret
xchg
jmp
icebp
cmp
in
add
scas
mov
pop
pusha
pop
add
icebp
xchg
add
loope
sub
xchg
int
pop
or
imul
jo
mov
mov
or
inc
js
mov
stos
or
rol
hlt
pop
pop
je
sbb
mov
push
push
jnp
mov
cmpsb
inc
or
mov
add
scas
xor
dec
xchg
and
repnz
sahf
out
insb
xchg
outsl
in
xchg
jne
cmp
out
rcr
xchg
aas
dec
test
movsl
adc
ljmp
jbe
rorl
in
popf
mov
add
pop
lds
int
out
movsl
jp
rorb
cmc
imull
and
popa
pop
add
int
add
push
rcrl
iret
jge
and
xchg
cli
jl
arpl
das
insl
shll
mov
mov
sub
scas
jbe
leave
xor
sbb
sub
mov
jo
insl
lahf
stos
xchg
sub
inc
cmp
incb
lahf
insb
mov
pushf
adc
in
ss
xlat
in
mov
xchg
mov
push
dec
sub
fcompp
fnsave
scas
mov
mov
push
scas
sub
jge
fldl
and
or
adc
nop
cld
adc
aam
sbb
ljmp
push
jg
cld
push
dec
popf
xor
pushf
push
mov
xchg
out
loope
cli
or
mov
cmp
repz
cmpsb
out
cmp
add
bound
sub
xor
cltd
data16
dec
and
sbb
sub
ret
aam
pusha
sub
jns,pt
int
dec
ret
fildll
cmp
arpl
mov
sub
mov
and
sub
outsb
sub
fistpll
insl
pop
cld
jno
jbe
mov
lds
pop
mov
xor
fisttpl
add
aaa
sbb
rclb
clc
cmp
test
or
or
cmp
dec
je
gs
mov
push
ret
mov
fisubrs
fwait
leave
adc
mov
pop
pop
insl
sarb
cmp
sub
mov
lods
call
es
rol
and
iret
or
shrl
call
push
xchg
inc
cli
in
cmp
xor
pop
test
cmpsb
shll
or
icebp
xchg
lahf
fs
lret
out
jno
pop
and
out
enter
fstps
push
mov
cmpsb
loop
cmp
andb
mov
inc
push
xor
mov
cli
and
sahf
jl
pop
cld
push
nop
fiadds
insl
in
out
sarl
mov
mov
leave
adc
insb
pop
lret
adc
sub
imul
cmp
sub
inc
inc
cmpsb
ret
jg
js
mov
push
addr16
jb
mov
dec
sbb
aam
hlt
gs
repz
lds
loop
clc
adc
sub
adc
sub
loop
lods
or
jae
pop
stc
adcb
xchg
sub
ljmp
jg
mov
pushf
mov
inc
dec
popa
and
cmp
in
ffree
ficoms
clc
pop
lods
pop
jnp,pt
bound
jp
jo
cmpb
mov
movl
inc
insb
mov
lock
imul
out
sub
mov
xchg
add
adc
push
mov
testl
mov
movsl
add
jns
jae
push
cld
and
dec
pop
lock
pop
xchg
out
loop
lahf
mov
mov
sbb
aam
xchg
lahf
scas
adc
orl
das
and
xor
dec
frstor
pop
mov
insl
int
and
dec
imul
ja
dec
imul
outsl
cld
movsb
fwait
jp
or
lahf
mov
rolb
movsb
mov
cmp
leave
lret
ja
add
xor
mov
jl
ss
dec
idiv
std
jmp
icebp
xor
cmpsl
pop
jae
int3
dec
pushf
add
rcl
mov
fwait
rep
jmp
subb
adc
mov
scas
mov
or
xor
jg
iret
mov
sti
loope
out
mulb
ljmp
push
fidivl
iret
jge
popa
sbbb
hlt
fcmovnu
loopne
ret
in
fwait
int
ss
mov
rcr
popf
xchg
icebp
bound
push
cmp
cmp
add
ret
enter
jecxz
sbb
mov
xchg
pop
popa
push
and
mov
mov
dec
xchg
and
jge
inc
dec
lock
xlat
cltd
cmp
into
dec
mov
jl
aas
mov
lret
imul
dec
sarb
sti
cmc
jno
or
adc
xor
push
push
rolb
gs
mov
mov
fisubrs
loopne
mov
mov
and
xchg
push
pop
ss
mov
push
inc
lahf
mov
jmp
addr16
jp
enter
push
jo
fwait
add
sahf
pop
xchg
movl
inc
push
fsubrl
stos
stc
lahf
int
hlt
fstpt
cmp
shr
out
inc
decl
and
xor
xchg
setl
dec
std
sahf
dec
cmpsl
fwait
aaa
xor
sbb
jne
pop
lea
cmp
mov
and
loop
inc
mov
xchg
push
push
mov
nop
xchg
addr16
sbb
xchg
cmp
pop
int
push
inc
sub
call
jbe
mov
int3
loop
in
nop
sub
imul
mov
mov
ficoml
xchg
and
call
push
jo
scas
adc
pop
dec
popf
sbb
fucom
popa
jl
push
pop
pop
ret
aaa
sti
push
arpl
sar
xor
fucomp
push
jnp
sub
sbb
lods
dec
ja
jle
sub
shl
ret
inc
in
mov
add
hlt
xor
orb
mov
shl
outsl
jl
xor
pusha
imul
pusha
xchg
mov
push
aam
adcb
pop
or
cmpsl
add
insl
pop
andl
pop
xchg
adcl
and
pop
inc
add
or
jne
lods
jmp
jne
popf
dec
pop
bound
jecxz
rep
shl
push
jmp
push
rcrl
jg
das
arpl
add
mov
adc
adc
and
and
fldt
sarl
jno
sub
aaa
repz
sbb
dec
bnd
icebp
mov
in
std
pop
cmpsb
addr16
pop
sbb
sub
push
cmpsb
xchg
fistps
add
adc
mov
test
dec
and
inc
movsl
iret
int3
stos
add
mov
jae
dec
xchg
nop
xor
xlat
fcompl
sbb
in
bound
xor
jb
insb
and
scas
sub
cli
clc
push
pop
add
flds
dec
dec
aaa
lret
push
sub
or
jge
enter
mov
aaa
arpl
xchg
sbb
xchg
xor
lret
sti
mov
lds
xchg
jae
xchg
xchg
shlb
fsubrs
jg
ret
insl
xchg
pop
add
loopne
sbb
jg
sbb
aam
js
pop
cld
sbbl
inc
mov
out
lods
pop
xchg
cmp
enter
iret
xor
jmp
inc
xchg
mov
lahf
xor
arpl
or
pop
sub
ja
push
rcll
aas
ljmp
or
xchg
pop
push
nop
bound
mov
xor
fcmovnu
or
cltd
andb
push
add
shlb
les
daa
popf
and
pop
orl
push
andl
mov
test
mov
dec
pop
mov
jmp
xchg
or
push
aad
dec
nop
jns
jae
stc
xlat
cmp
mov
mov
js
dec
mov
enter
cs
in
add
ret
jns
int
add
mov
xchg
bound
scas
jmp
or
repnz
les
add
es
jl
cmp
pop
adc
sbb
xchg
mov
sbb
enter
mov
js
ret
xchg
lret
sub
xchg
jbe
adc
ret
dec
mov
cmc
repz
push
push
pop
pop
dec
hlt
pop
mov
mov
orb
push
inc
jle
dec
xchg
push
icebp
or
dec
and
pop
movsb
test
sbb
andb
shlb
dec
loopew
or
xor
jno
push
inc
jmp
sub
pop
jl
or
xchg
pop
add
and
fildl
dec
les
lret
dec
jno
dec
imul
and
in
ljmp
outsb
imul
mov
pop
cs
mov
push
xchg
aas
les
mov
jg
mov
xchg
cmp
mov
jle
out
fildl
out
pop
fimuls
sbb
pop
adc
cmc
mov
mov
aam
push
jb
iret
fs
lods
pop
inc
popa
add
jl
sbb
dec
popf
add
or
repnz
add
pop
or
bound
dec
rcll
dec
xchg
neg
jb
sub
lcall
in
loop,pt
out
or
bound
jmp
addl
xor
jno
xchg
das
xchg
mov
mov
call
xchg
adc
pop
sub
dec
les
or
je
std
jo
imul
fninit
push
data16
in
cli
sbb
jnp
sub
fistpll
mov
imul
ss
int3
xchg
mov
lds
std
mov
mov
orb
mov
rolb
xchg
cmpsb
xor
push
push
sti
inc
add
mov
and
das
cmpsb
iret
imul
dec
nopl
pop
cmp
ja
xchg
jmp
out
mov
stos
shl
pop
mov
lods
leave
and
sub
and
pushf
movsl
xlat
sub
mov
rolb
or
sti
xchg
dec
push
and
aaa
mov
cmpb
pop
loop
or
enter
sbb
sub
mov
rolb
and
mov
mov
loope
mov
mov
add
cmpsl
out
add
push
daa
and
aaa
outsb
sbb
icebp
or
push
mov
and
mov
out
xor
fs
cmp
pop
xor
sbb
or
lock
dec
popf
inc
sub
jb
adc
sub
les
ja
std
jecxz
adc
movl
roll
test
shlb
rorl
stos
cwtl
sbb
sahf
fsubrs
rcrb
lcall
mov
xor
jb
out
cmp
int
out
mov
add
xchg
je
or
scas
add
dec
lahf
dec
ja
mov
push
roll
pop
push
int
pop
arpl
int3
jle
lods
lods
cmp
cld
jmp
mov
hlt
and
lods
icebp
sahf
bnd
cmpsb
jne
push
call
dec
xchg
jg
popa
mov
je
mov
mov
dec
mov
pop
cmp
sbb
dec
test
jmp
aam
jne
lock
iret
into
lock
addb
addl
das
std
adc
lea
xchg
xorb
call
dec
inc
xor
mov
les
cs
outsb
push
notb
dec
jb
adc
lcall
les
notl
nop
jmp
xchg
cmp
out
notb
add
nop
add
pushf
ret
stc
inc
xor
xchg
bound
mov
mov
fcmovnu
and
mov
pop
lea
jecxz
fsubl
out
ljmp
mov
cmp
cmp
mov
push
test
xchg
leave
pop
xchg
add
jbe
or
hlt
out
adc
pop
cli
and
pop
in
add
test
sub
cs
mov
sbb
pop
sbb
cld
mov
pop
nop
cmc
in
in
cmpsl
mov
pmaxsw
mov
or
mov
sbb
mov
repnz
xor
loopne
je
pop
adc
ljmp
inc
sbb
cltd
mov
std
imul
mov
jg
pop
sbb
jg,pn
mov
dec
dec
lret
pop
mov
stos
icebp
cli
fcmovnb
repz
add
aam
cmp
xchg
xchg
inc
xor
push
sbb
xchg
les
dec
sbb
and
push
loop
in
frstor
leave
and
test
in
mov
jecxz
fadds
mov
insb
lcall
push
frstor
jo
dec
adc
insl
test
repz
sbb
mov
xlat
bound
jns
add
lods
arpl
cli
jl
popa
fiaddl
sub
sub
xor
or
mov
push
dec
cmp
call
sub
mov
push
cli
orb
dec
xor
mov
adc
mov
in
sub
ret
cld
stos
xchg
and
inc
orl
xchg
dec
mov
xchg
adc
mov
jp
gs
aas
int3
push
mov
mov
fnsave
ret
xor
add
push
or
jmp
sbb
jae
mov
inc
ds
rorl
push
pop
inc
inc
dec
popf
ss
dec
dec
test
or
xchg
fstpt
xorb
sub
and
mov
call
adc
fcomps
pusha
push
aaa
mov
out
or
in
repnz
fcompl
je
sub
les
loopne
adcl
pop
in
jo
xchg
fwait
movsl
mov
cmp
jne
aad
mov
fwait
shlb
pop
or
mov
stos
lods
mov
and
std
fwait
call
in
lods
lcall
add
add
lods
adc
subb
testl
lea
mov
mov
aam
das
xor
test
mov
or
cld
push
sub
mov
fisubs
pop
push
push
fs
push
cmc
fidivl
scas
pop
lods
lret
popf
data16
inc
jecxz
inc
mov
popl
outsb
add
jo
out
lcall
mov
jne
inc
stc
inc
push
sub
daa
shlb
fimuls
movsb
jnp
inc
aad
cmp
dec
sbb
hlt
xor
call
aam
push
xchg
mov
arpl
cmpsb
jno
repz
mov
fsubl
inc
xchg
lahf
push
out
mov
insb
add
jmp
jae
dec
test
loop
lcall
cmpsl
pop
mov
pusha
pop
pop
scas
aaa
xor
fnstsw
insl
xlat
xchg
adc
add
or
cmp
sbb
dec
enter
mov
pop
imul
inc
add
out
xchg
data16
sahf
dec
mov
mov
jecxz
shll
std
inc
pop
dec
insl
iret
inc
pop
pop
aaa
add
test
ret
in
gs
pop
mov
or
fs
daa
mov
dec
adc
lahf
enter
xor
dec
fildll
add
push
mov
lcall
cmp
cmp
adcb
int
int3
bnd
les
addl
int3
xor
xor
das
lods
sub
out
add
loope
xor
stc
or
sbb
dec
fwait
pop
push
sbb
stc
and
and
movsb
fnstenv
or
test
stc
inc
push
lcall
dec
sbb
or
add
mov
flds
pop
sahf
dec
and
aam
sahf
and
mov
sbb
ljmp
aad
clc
mov
aam
sbb
pop
and
jae
add
add
arpl
push
sub
mov
pop
xor
or
dec
or
or
adc
mov
jp
xchg
adc
jo
and
or
mov
mov
daa
jg
sarb
lea
decl
add
imul
scas
inc
js
ja
std
lds
sbb
jnp
xlat
dec
rclb
push
add
into
lods
les
adc
sub
fstpt
call
insl
and
inc
dec
push
enter
xlat
mov
fsubr
mov
xchg
xchg
xchg
sbbl
inc
enter
jb
dec
es
rolb
lcall
xor
fstl
pushl
bound
push
pop
pop
aas
mov
rolb
int
add
mov
cmc
or
cmp
mov
movsl
inc
mov
arpl
or
adc
dec
stc
ljmp
push
ret
add
push
xor
cld
je
add
and
gs
sti
out
faddl
dec
pop
and
sbb
cmpsb
mov
imulb
ret
push
shlb
mov
mov
and
int
div
fldpi
cmp
xchg
mov
test
sub
pop
jnp
fstpl
xlat
fs
bound
test
mov
lods
imul
out
scas
cmp
jne
inc
mov
jecxz
sub
inc
icebp
stos
pushf
je
jns
push
sahf
xor
pop
in
pop
jecxz
shl
into
inc
jne
pop
adc
fwait
mov
and
lret
out
and
int3
aad
gs
jae
or
stc
popf
adc
cld
mull
lds
dec
outsl
inc
pop
mov
out
loopne
xchg
mov
or
out
loop
pop
shll
cmp
pusha
add
in
and
mov
enter
mov
popa
inc
shl
sti
lahf
fisubl
fcomps
mov
lret
xlat
fldl
mov
mov
push
stos
lea
scas
mov
and
sbb
inc
das
bound
xchg
or
cmpsb
xchg
xchg
mov
test
push
sub
xorb
inc
shlb
xor
out
cmp
in
cmpsl
dec
dec
rorl
and
push
sbb
aad
rcrb
ljmp
or
lods
push
mov
xchg
int
mov
xchg
cmpsl
pushf
dec
mov
data16
xchg
mov
sub
lock
adc
mov
pop
icebp
cmpsl
pop
imul
sbb
xor
fdivr
xor
push
cmpsb
sub
jle
mov
fisubrl
movsb
xor
icebp
cli
pop
mov
xchg
insb
daa
popa
popa
lods
js
mulb
cmp
mov
icebp
xchg
fs
pushf
cs
mov
ret
cmp
into
jge
adc
mov
out
bound
mov
or
xor
sbb
test
add
push
mov
mov
les
jge
popa
xchg
loope
mov
shll
mov
pusha
inc
nop
push
outsb
adc
jp
cmc
call
dec
mov
insb
sub
repnz
stos
mov
pop
out
outsl
in
inc
cs
and
cmovo
cmp
cwtl
inc
mov
adc
and
nop
xor
test
xor
fninit
fmul
fbstp
cmpsb
xor
jle
scas
jl
jle
ja
jo
add
dec
stos
and
adc
cmp
push
insb
mov
push
and
outsl
enter
cmp
arpl
sbb
in
mov
push
aam
lret
fistpll
mov
cs
cmp
lret
clc
lds
mov
cmpsb
aaa
xor
loope
sar
nop
dec
pushf
ljmp
loop
jecxz
nop
mov
inc
xchg
cmpsb
dec
out
fdivrs
aad
lret
pop
call
xor
hlt
jg
leave
ja
test
or
aaa
sti
mov
or
outsb
fiadds
in
js
testb
sbb
mov
ljmp
ret
lods
or
dec
out
or
jo
enter
ret
pop
das
out
es
cmp
test
lahf
in
xor
adc
idiv
aam
movsl
rclb
jmp
jns
jmp
add
mov
testl
gs
rcr
sti
adc
cld
shlb
mov
mov
pop
aas
mov
mov
mov
sub
inc
and
dec
sbb
rolb
stos
mov
gs
notb
mov
and
pop
sub
push
inc
clc
insl
dec
int3
push
pop
mov
xorb
xor
adc
jle
inc
lods
sarl
jnp
adc
jae
dec
jns
lea
stos
cltd
jb
int
lock
and
cli
in
push
dec
das
adc
and
adc
xor
adc
mov
lods
addl
pop
data16
popa
fcoms
xchg
rorb
out
xor
jne
movsb
push
xchg
add
fiaddl
jge
lds
cmp
push
xchg
sub
mov
and
cmp
mov
jp
jecxz
scas
out
inc
clc
cmpsb
push
test
adc
or
movsl
sub
xor
mov
cmpsb
fsubl
xchg
cmp
sub
mov
mov
test
outsl
mov
add
das
sub
xchg
or
xchg
jo
fsubrp
sub
dec
lock
nop
int
stos
int
or
pop
dec
mov
iret
dec
lret
scas
incb
repz
or
pop
mov
in
pushf
lret
mov
jg
lods
call
mov
xbegin
add
cmpsl
cmp
pop
and
pop
jb
testl
cltd
popf
pusha
pop
pushf
sti
test
out
inc
xor
insl
out
or
jb
fstps
cmp
cmp
test
iret
ds
push
inc
fwait
js
pusha
sbb
cmp
andl
fldl
les
ret
jae
add
lahf
add
call
lds
test
inc
inc
cmpsl
xor
push
pop
sbb
push
and
inc
inc
sbb
leave
mov
xchg
daa
mov
pop
mov
or
mov
xor
push
sbb
fidivl
mov
pop
add
insb
pop
sub
loope
dec
push
mov
ja
push
or
addr16
arpl
int
mov
push
jecxz
jge
mov
xor
nop
mov
push
rcrb
dec
shld
outsl
cmp
mov
sub
cwtl
dec
pop
shrd
popa
cmp
dec
adc
lcall
and
arpl
popa
or
pop
into
int3
aas
loopne
push
es
sbb
adc
lahf
xchg
adc
fcmovnu
cmp
push
and
mov
push
movsl
nop
jae
fwait
adc
loopne
ret
mov
popf
xor
add
jnp
outsb
movsb
cmp
cli
cld
ud1
inc
pop
loopne
stc
dec
fs
rcll
sub
xchg
sub
inc
mov
xor
daa
int
and
xor
add
mulb
hlt
xchg
push
push
cmp
xchg
inc
scas
mov
repnz
addb
push
push
ss
add
cli
sbb
xor
push
lock
inc
aaa
loopne
aad
push
jl
dec
jl
lcall
loope
xchg
ret
in
enter
leave
nop
cli
mov
push
out
leave
repz
adc
jb
mov
pop
mov
sbb
add
xchg
mov
xchg
sub
rcrl
inc
fisubrs
int
call
and
cmp
pop
ret
jecxz
mov
outsl
push
loope
inc
mov
jne
aaa
sub
mov
inc
mov
sbb
sbb
ficoml
and
jl
adc
aaa
shll
jl
movsb
xchg
jns
out
push
push
jecxz
hlt
adc
lods
dec
addl
in
sbb
pavgb
and
adc
rcll
cmpsl
imul
out
std
dec
mov
enter
pushf
or
jo
and
and
inc
inc
jle
and
insb
jg
sbb
lret
insl
xor
jbe
mov
ja
xchg
jecxz
or
cmp
add
add
push
jno
test
insb
loopne
aaa
cmp
mov
or
pushf
enter
fsubr
scas
or
fists
lods
push
aad
and
push
and
sub
cmp
jmp
mov
sbbl
icebp
xchg
pushf
outsb
mov
cmp
fcomi
hlt
sti
aaa
inc
jecxz
mov
pusha
call
lahf
cmp
xchg
and
add
popf
out
popf
aam
mov
aad
out
xchg
stos
icebp
jbe
dec
aas
push
mov
sbb
dec
jp
out
xchg
mov
cld
adcb
mov
pop
sbb
sub
mov
loope
sbb
fsubrs
daa
ss
std
cmc
mov
orl
int3
or
fbld
fnstsw
stc
les
mov
imul
jl
pop
ss
inc
nop
sub
push
push
xor
jb
mov
arpl
cmp
pop
xor
jecxz
or
inc
add
lods
or
loope
test
fsts
mov
or
inc
inc
xchg
mov
shlb
test
cmpsb
or
push
aam
mov
push
push
iret
adc
cltd
jp
jl
aad
or
iret
mov
xor
fistpl
add
push
dec
shrb
mov
insl
pop
xor
jnp
and
ret
mov
fcmovnu
mov
jnp
call
adc
inc
mov
negb
ljmp
cmpsl
jle
xchg
testl
jae
mov
loope
loopne
lock
in
inc
jno
fsubrl
cmpsl
mov
mov
jecxz
loopne
loope
imul
addr16
push
insb
cld
xchg
dec
add
ret
repnz
js
jg
add
adc
xor
push
adc
push
dec
jo
jle
xchg
in
mov
or
popa
in
hlt
pop
xor
mov
mov
jae
aad
sbb
sahf
ficomps
sahf
ret
mov
movsb
or
sub
movsb
push
test
icebp
fisttpll
sbb
sub
out
dec
jl
cltd
pop
dec
out
shlb
xchg
push
cmp
sbb
jne
pop
leave
jge
in
mov
mov
jnp
xchg
addb
fnstcw
xchg
xor
lds
rclb
pop
mov
cmp
sbb
adc
mov
or
test
pop
sbb
popf
jl
xchg
or
pop
stos
movsb
test
int
je
jbe
sar
js
popa
or
pop
mov
in
xor
movsl
jg
push
mov
dec
or
sub
or
inc
adc
in
loope
mov
fcomps
pop
inc
js
lods
mov
pop
inc
dec
xor
fnstsw
in
shll
xchg
sub
sub
insb
fwait
shlb
jp
or
and
jbe
in
push
ss
adc
enter
sbb
cmpsb
arpl
aam
lret
or
add
mov
data16
scas
mov
outsb
ja
cmc
imul
mov
pop
pusha
outsb
push
push
imul
mov
dec
adc
gs
pushf
dec
xchg
les
inc
xor
mov
inc
or
mov
ss
enter
ret
mov
in
xchg
clc
mov
and
das
ljmp
dec
mov
mov
shrb
insl
mov
outsl
and
aaa
mov
or
adc
repz
or
pusha
cmp
xlat
xchg
xor
loopne
sti
rolb
outsl
into
std
mov
or
add
push
lahf
xchg
push
in
cmp
test
test
xlat
icebp
leave
bound
rclb
mov
add
mov
shlb
push
adc
mov
pop
bound
cmpl
xchg
lods
das
in
pop
mov
jg
nop
cmpsb
xchg
fiadds
xchg
xchg
xor
je
xor
dec
jb
mov
mov
cmc
insb
mov
int
mov
test
les
adc
cmc
idivl
lods
test
mov
sub
fmull
sbb
push
sub
test
inc
mov
xchg
out
push
out
ljmp
pop
push
xorb
pop
dec
mov
loope
lods
test
loop
push
das
popf
bound
xor
bound
jl
push
gs
sbb
mov
xchg
mov
test
and
xlat
mov
cmp
in
lds
insl
sahf
mov
mov
pushf
mov
stos
nop
push
lock
jae
repnz
push
cli
hlt
xlat
test
adc
in
and
xor
dec
jge
movsl
in
sbb
add
lea
addb
arpl
outsl
ja
add
sahf
hlt
pusha
inc
cmpsb
push
fiadds
leave
mov
popf
pop
mov
jo
stos
aam
mov
leave
hlt
dec
add
daa
pop
xor
insb
jmp
aam
mov
out
daa
rcr
out
xchg
cmp
mov
and
lret
jp
mov
fnstcw
push
dec
in
loopne
pop
lods
ss
pop
cmp
dec
dec
rclb
add
and
mov
sbb
in
pop
cmpsl
aam
lcall
push
movsl
xchg
mov
adc
cmpsl
mov
icebp
int3
aaa
imul
mov
test
repnz
xchg
jp
sub
cmpsl
enter
icebp
adc
insb
sbb
cmpsl
sar
mov
cmpsl
cmp
in
fsubrs
xchg
adc
fbld
dec
xchg
fidivs
les
jge
mov
adc
mov
fimull
jecxz
repnz
lret
cmp
adc
pop
inc
inc
insl
call
js
pop
sbb
add
aas
lock
adc
and
mov
into
loopne
mov
in
ret
iret
mov
fdivrl
mov
pop
mov
lods
int3
sub
sti
cs
adc
fildl
dec
int
push
int
js
sahf
lcall
cltd
adc
xchg
adc
call
cmc
add
jno
pop
sub
xchg
int3
adc
pop
adc
ret
movsb
loope
push
or
mov
les
in
lahf
xor
mov
push
cmpsb
cmpsl
pop
add
std
shlb
daa
scas
pop
push
test
jne
fcmove
xchg
lret
push
dec
pop
xchg
push
shrb
dec
int
scas
pop
mov
jns
pop
stos
mov
dec
or
push
pop
lcall
mov
sbb
xlat
outsl
popf
data16
dec
and
add
mov
sub
bound
fcom
xor
es
sbbl
xchg
or
cmc
xlat
pop
inc
out
mov
xchg
push
push
jge
sub
pop
sub
and
mov
das
cmp
clc
fmuls
aam
test
lods
test
pop
pusha
fmuls
stos
movsl
or
lods
fisubrl
mov
out
cmc
leave
ljmp
xor
pop
push
adc
cmpsl
pop
xchg
int3
mov
nop
sar
jmp
push
enter
imull
fiadds
cmc
cltd
outsl
movsb
ss
fadd
pop
inc
xchg
dec
inc
decl
pusha
stc
mov
inc
in
xor
jb
popf
popa
xchg
ret
outsl
cltd
cmp
xchg
mov
inc
inc
stos
aas
cmp
add
mov
push
sbb
inc
sub
inc
pop
lahf
sub
in
push
fs
out
sbb
hlt
int
xor
sarl
pop
sbb
add
xchg
jmp
cwtl
sti
decb
inc
adc
inc
lods
loope
mov
cwtl
lcall
fiadds
addr16
lods
adc
pop
sub
jno
scas
mov
daa
lds
push
jb
mov
and
movsb
or
pop
inc
push
pusha
rol
pop
pop
sub
scas
cltd
decb
dec
je
mov
dec
stos
cltd
insb
mov
xchg
loope
outsl
mov
adc
pop
sbb
pop
mov
enter
sbb
add
mov
ljmp
xor
aad
lahf
sub
pop
mov
push
call
mov
aad
addr16
cltd
and
in
pop
jge
adc
push
cmp
leave
sub
jae
sub
cli
jp
push
mov
gs
mov
loope
mov
push
or
daa
sub
pop
repz
sub
dec
push
xchg
in
mov
pop
pusha
push
into
xchg
loope
mov
pop
jg
arpl
xchg
loop
jnp
movsb
call
movsl
push
pop
pop
lods
jns
dec
jns
fsubrl
dec
pusha
test
pop
pusha
subb
sbb
and
push
sub
inc
addr16
lods
push
push
push
pop
jno
roll
pop
adc
pop
pop
lock
pop
ljmp
pusha
adc
daa
into
pop
pop
push
pop
notb
inc
in
out
ret
mov
push
dec
or
xchg
movsl
js
push
jecxz
gs
std
jle
popf
cmp
scas
push
xor
sbb
pop
lahf
xchg
lahf
jo
repz
ficomps
mov
pop
and
decb
inc
imull
ss
mov
jmp
ja
test
arpl
movsb
lods
mov
fwait
popf
xchg
adc
aas
scas
add
daa
mov
ds
jle
or
pop
add
push
testb
or
rorb
repz
sub
ja
inc
pop
xor
rorb
decl
fistpl
stos
iret
xor
leave
shll
fcmovne
call
mov
mov
xchg
add
adc
outsl
inc
arpl
pop
mov
mov
pop
xchg
lock
repnz
cmp
xlat
mov
adc
lret
sbb
adc
pop
mov
jae
or
jns
ja
lret
xchg
dec
in
pop
and
mov
push
mov
cli
jnp
imul
inc
int3
pop
jne
dec
dec
and
cmpsl
mov
push
xchg
movsl
pushf
loop
adc
add
dec
sbb
fsts
hlt
fs
xor
in
lret
imull
cmp
sub
mov
gs
andb
faddl
cmpsb
mov
add
sub
sub
mov
outsl
ss
mov
popf
mov
dec
sub
cmp
inc
mov
push
xchg
jne
pushf
ror
sbb
rcll
sbb
scas
xor
mov
movsl
xor
pop
sbb
cld
cmp
adc
cli
add
inc
sub
shlb
lcall
or
fcoms
sbb
push
inc
jnp
mov
lret
lret
sbb
fmull
aaa
fcoms
push
lods
das
jge
jg
fwait
mov
test
xor
pop
xchg
ret
ljmp
xchg
dec
mov
mov
jmp
push
mov
lahf
out
jg
or
mov
pusha
adc
or
inc
and
sub
xor
pop
adc
jbe
adc
cmc
in
mov
xchg
or
jo
mov
sub
mov
xlat
add
fadd
dec
imul
sbb
daa
std
fmull
adc
mov
or
dec
in
mov
mov
ret
mov
jl
add
aad
sbb
icebp
push
addr16
outsb
cmpsb
push
ljmp
repnz
icebp
xchg
xlat
jns
scas
push
xchg
push
fsubrs
push
scas
adc
popf
les
lock
test
push
and
cli
jmp
imul
mov
lods
cltd
mov
orb
sub
mov
mov
out
adc
jle
movsl
subl
sbbl
imul
or
sub
add
dec
sub
into
pop
js
divb
popf
loope
rcr
jbe
push
jnp
add
frstpm(287
jne
add
xchg
push
or
fldl
sub
js
xchg
movsl
jl
jle
add
dec
xor
loope
out
mov
test
nop
push
fmulp
data16
jmp
dec
clc
cmpl
cmp
inc
dec
scas
pop
cltd
dec
outsb
xor
cmpsb
shlb
cmp
shl
pop
mov
adc
insb
imul
out
insl
ljmp
mov
mov
cs
jne
cs
stc
subb
mov
xor
and
push
mov
mov
stos
xchg
inc
pop
stos
push
dec
push
std
sub
repz
ss
pop
or
pop
mov
aam
jge
mov
repz
jns
sbb
rcrb
fsts
ljmp
insb
mov
mov
into
inc
int3
mov
sbb
in
sub
imul
shlb
push
jb
push
leave
stc
iret
cs
das
inc
cmpsb
xor
add
and
lahf
or
jle
incl
and
and
stos
lret
or
xchg
mov
filds
das
mov
and
shrl
push
daa
arpl
mov
repnz
outsb
xchg
scas
inc
mov
pop
aas
add
inc
cmp
imul
mov
rcr
divl
push
test
andl
jle
aas
call
repz
icebp
xchg
insl
mov
repnz
out
sbb
sbb
arpl
dec
ret
mov
jne
cmpsb
or
arpl
ficoms
test
inc
das
dec
bound
dec
and
sub
jle
mov
fwait
stc
and
fcmovu
add
and
push
data16
jg
adc
push
stc
mov
std
testl
push
sbb
rcll
aad
movsl
test
or
add
test
push
xchg
das
dec
mov
or
jp
cld
dec
into
ljmp
dec
fidivl
fcoms
insl
in
test
scas
daa
inc
lahf
cmp
pop
mov
test
sbb
mov
movl
pop
fnstcw
mov
in
aam
pop
and
xor
clc
dec
push
popf
lcall
add
pop
push
inc
jmp
shl
pop
jp
ja
leave
inc
or
xchg
fdivl
fwait
aad
inc
cmp
sbb
dec
or
shrl
mov
es
push
lds
int3
push
aaa
sbb
stos
dec
cmp
ss
loopne
loope
xchg
jp
adcl
dec
xor
push
jb
inc
inc
jge
call
add
cmp
xorl
cli
cmp
push
pop
or
roll
hlt
cmp
int
push
adc
adc
repz
outsb
lds
jne
mov
nop
leave
sub
popa
pop
xor
sbb
movsl
or
sub
int
and
cli
imul
and
pop
dec
movsb
or
cwtl
jbe
xchg
lods
push
push
sbb
cli
inc
scas
les
push
ret
jmp
fdivrp
jmp
icebp
mov
aad
lock
test
xchg
ss
and
jns
insl
xor
xchg
pop
pop
jo
mov
mov
decb
sub
jbe
pop
dec
sub
andb
sbb
push
xchg
pop
sbb
dec
daa
pop
std
cmp
call
in
adc
icebp
inc
mov
inc
cmp
sub
xchg
jge
mov
add
sub
pop
incb
aad
sbb
out
stos
repnz
stos
aaa
push
xchg
test
aam
bound
push
inc
cmp
ds
scas
xor
cmp
xor
lahf
and
fs
rcl
sbb
jmp
xor
add
xor
movsl
mov
into
in
leave
inc
popf
fnstsw
pop
fs
mov
mov
pop
aas
scas
fxch
in
adc
andl
jb
sub
les
fmulp
or
inc
sbb
sub
inc
mov
mov
sub
in
lret
into
or
pop
je
sbb
gs
popf
dec
jbe
or
in
sbb
fwait
cmpsl
push
dec
push
int3
jmp
adc
or
add
xor
cld
adc
test
fcmovnu
lret
movsl
imul
cli
jl
outsl
lea
outsb
xchg
jb
or
mov
jmp
clc
ds
pop
add
fisttpl
sub
movsl
pushf
sbb
xchg
pop
pop
fprem1
sub
mov
cmp
jecxz
pop
jo
add
aam
fidivl
movsb
mov
xchg
xor
mov
test
add
push
push
mov
ja
int
loop
and
jae
jne
insl
lods
imul
sbb
mov
mov
popa
push
mov
xor
mov
mov
ds
subb
shlb
adc
mov
fucomip
mov
mov
and
push
cld
test
push
sbb
adc
std
pop
aas
push
sbbl
cltd
lods
or
enter
mov
sub
in
or
cltd
cli
fdiv
or
sub
enter
add
adc
and
jg
divl
rclb
in
aaa
mov
in
inc
repnz
mov
nop
mov
sub
cmp
cmpsl
dec
repz
nop
cs
xlat
add
lcall
cmc
inc
add
mov
or
aaa
fs
aam
mov
ret
jmp
insl
setnp
lods
fiadds
jno
fsubs
xor
cmpsb
sbb
jmp
pop
test
aad
push
sbb
in
mov
lods
mov
and
mov
add
cwtl
fstl
in
mov
xchg
lods
mov
adc
stos
out
faddl
lret
loope
push
fsubr
ds
std
jl
and
push
push
mov
in
movsl
fldt
je
ja
jp
in
loop
push
out
mov
je
add
jge
jecxz
rclb
shrb
push
adc
inc
in
jnp
insb
jecxz
jl
push
sbb
loopne
cmp
pop
sub
insb
add
and
mov
ror
rcll
or
mov
lods
add
insl
inc
or
clc
mov
or
dec
rol
inc
add
dec
rorl
bound
mov
add
dec
cmp
or
test
aam
aad
sub
pop
stc
and
mov
jne
rcrb
and
dec
je
int3
aas
fistpll
popf
movsl
cmp
sub
and
shll
shlb
dec
xchg
inc
cmp
fwait
sub
daa
test
fidivl
inc
lds
stos
add
sbb
mov
enter
movsl
aas
fnstsw
or
in
mov
push
orl
cmp
and
jge
pop
int3
test
adc
inc
call
mov
call
lcall
imul
nop
jb
mov
in
mov
rorb
push
lcall
or
jmp
popf
hlt
cmp
sub
xor
jne
xlat
jns
mov
mov
pop
xor
push
mov
mov
push
adc
movsl
jp
lea
idiv
dec
sti
push
mov
sub
sbb
jno
loopne
std
add
mov
and
les
and
subl
rcl
aad
adc
dec
pop
mov
sbb
cli
push
or
mov
sbb
cltd
mov
lret
mov
xlat
iret
cmpsb
mov
pop
movsl
pop
mov
movsb
push
push
cmp
call
lret
mov
test
loop
sarb
pop
pop
int3
inc
mov
lret
or
cmp
lods
pop
cmpsl
imul
aam
lret
push
and
cmp
test
pop
aas
or
jns
bound
inc
mov
fdivs
cmc
fnstsw
ret
addr16
push
cmp
dec
pop
cmp
rclb
mov
aas
insb
mov
icebp
pop
mov
int3
sub
add
loop
std
imul
outsl
sbb
in
cs
faddp
filds
jge
fisubrl
dec
adc
push
int3
scas
lahf
out
incl
mov
insl
pusha
cwtl
fildl
aad
jns
out
jle
les
aam
mov
in
mov
mov
mov
sub
shlb
mov
xlat
xchg
fwait
test
out
push
xchg
es
mov
dec
sub
mov
lahf
mov
out
or
les
xchg
jl
sar
cmc
les
sbb
push
cmp
sbb
xchg
jle,pn
insb
insl
jne
or
lahf
dec
aas
sub
mov
dec
pop
inc
into
test
ret
fists
lock
enter
xor
xchg
push
into
outsb
fs
cwtl
repz
jmp
jp
lock
mov
into
ret
push
addl
jmp
les
pop
mov
lret
fbld
sub
inc
xchg
iret
rclb
loope
insb
mov
popa
stos
sbb
fwait
dec
repnz
xchg
sub
mov
push
pop
sti
add
loopne
mov
inc
and
lahf
and
daa
cmp
xor
das
jmp
aad
pop
insb
xchg
pop
lods
and
xchg
mov
dec
push
push
popf
cmp
inc
in
or
or
loop
xor
in
lods
dec
into
xchg
adc
icebp
dec
xor
cmpsb
addr16
sahf
jg
loope
mov
mov
lods
in
repz
outsb
cmp
sub
cmp
mov
insl
xchg
sub
sub
and
cld
mov
mov
lods
mov
xlat
nop
push
jl
in
jno
movsb
repz
sbb
dec
jae
push
inc
out
xlat
nop
cmpsb
xchg
repz
andl
inc
dec
sub
pop
fdecstp
popa
mov
imul
repz
js
xchg
cs
dec
insb
push
dec
adc
leave
es
shrl
nop
mov
ja
jg
mov
ret
insb
mov
push
mov
sbb
mov
stos
push
out
cwtl
fdivr
hlt
fldl2e
jl
add
ss
mov
inc
push
cmp
add
mov
fadds
loopne
pop
and
shll
lret
das
xchg
pop
mov
bnd
cli
movsb
push
or
icebp
pop
sub
enter
nop
add
cmpsl
xchg
das
mov
add
or
mov
xchg
and
dec
in
pop
loope
mov
mov
jmp
lea
dec
hlt
js
mov
xor
orb
jecxz
setns
and
xchg
in
sbbl
loop
inc
ret
out
dec
push
fwait
inc
shl
mov
nop
mov
mov
mov
lods
ret
push
clc
gs
add
xlat
xchg
mov
mov
outsl
fwait
mov
pop
pop
mov
inc
xchg
xor
movsl
imul
fcomp
sub
mov
and
pop
xchg
jno
or
cli
ret
cmpsl
dec
and
xor
jmp
dec
imul
cld
or
pop
imul
mov
test
dec
mov
and
add
xchg
xchg
pop
pcmpeqb
sbb
fdivs
insl
insl
out
and
ret
subl
in
and
mov
fsts
sbb
mov
leave
in
xchg
xchg
push
test
arpl
and
inc
mov
pop
jecxz
test
mov
fbstp
pop
dec
xor
cmpsb
fs
xlat
inc
testb
mov
fwait
imul
fwait
dec
movsb
ljmp
jno
sub
subl
mov
jmp
dec
inc
xchg
adcb
repz
into
xor
mov
pop
pushf
std
mov
ss
mov
fsubr
mov
push
xchg
mov
sub
adc
daa
push
cmc
inc
lods
sub
es
xchg
in
mov
pop
xchg
jle
call
cmpsb
push
dec
daa
mov
jb
out
loope
mov
lcall
sub
cmp
mov
cld
dec
cmp
std
je
jbe
outsl
xchg
adc
mov
scas
xrelease
pop
mov
iret
shlb
add
cmpsb
int3
mov
xorl
xchg
test
xor
and
pop
inc
out
cmp
hlt
dec
std
hlt
add
xchg
sub
adc
push
insb
scas
stos
mov
test
sbbb
popa
push
loope
cmp
pop
js
xchg
shrb
loopne
mov
xchg
add
es
clc
lods
inc
mov
xchg
int3
mov
cs
pushf
xchg
call
dec
int
fbstp
push
xor
push
and
ret
add
jmp
adc
scas
cld
mov
shll
pop
inc
hlt
lcall
nop
push
push
mov
mov
sub
jle
adc
xchg
pop
jmp
ret
dec
inc
aam
cmp
dec
test
sub
in
sbb
dec
adc
daa
or
adc
and
mov
jmp
divb
out
adc
add
lahf
rcl
jl
ljmp
rcrb
lret
or
movsl
scas
xor
pop
mov
in
xchg
dec
repnz
imul
sbb
movsb
or
adc
xor
dec
mov
int3
or
mov
mov
movsl
into
add
inc
repz
js
in
ljmp
pop
cmp
movsl
shrb
lods
das
sbb
inc
mov
xor
xor
sub
dec
orb
cmpsb
je
xchg
or
test
pop
push
pusha
jne
adc
addb
jbe
or
aad
sbb
repnz
inc
push
mov
jmp
mov
ja
lcall
and
mov
push
or
fs
and
xchg
in
mov
or
iret
jle
in
dec
sarl
lcall
movsl
jl
push
bound
push
in
dec
xlat
mov
jo
inc
in
lret
ljmp
dec
push
push
sub
mov
stc
fcoml
out
jo
test
xlat
add
pushf
adc
mov
mov
in
jb
mov
into
push
add
test
jge
ja
test
mov
jno
loope
mov
repnz
fdivrs
inc
dec
xor
push
test
jle
ss
jnp
sbb
cmp
fldcw
cmp
dec
mov
pop
add
add
test
fldt
xorb
aam
push
mov
push
jle
jge
addr16
scas
outsb
aaa
sbb
cli
in
loopne
and
xorl
ss
xchg
inc
stos
xor
or
pop
jb
mov
insl
std
sub
dec
sahf
repz
mov
lahf
jnp
and
xor
bound
dec
in
lahf
lret
lea
arpl
int
mov
mov
mov
hlt
cmp
and
dec
mov
loopne
sub
mov
xchg
cld
sti
jecxz
out
inc
aaa
push
orl
pop
or
sub
insl
sub
lret
icebp
rol
mov
mov
push
sub
sub
push
in
push
stos
mov
mov
cmp
xchg
xorl
loop
mov
ds
addb
jp
bound
cwtl
mov
push
jl
xor
mov
or
inc
xchg
mov
lcall
and
test
push
dec
mov
lods
cmpsb
adc
sbb
out
push
lret
push
rol
fmuls
icebp
mov
add
sub
mov
test
lret
sbb
notb
pop
xchg
cmp
loope
sub
outsl
and
movsl
mov
das
sbb
aas
imul
cs
pop
ror
adc
in
push
sarb
push
jmp
testl
mov
test
pop
jmp
out
mov
repz
mov
sub
and
icebp
mov
pop
jge
mov
enter
add
cmp
inc
or
cmpsb
xor
xchg
mov
jae
cmp
imul
xchg
in
adc
xor
sub
and
adc
jecxz
mov
mov
jecxz
lods
lock
repnz
inc
cmp
mov
add
aas
lods
arpl
and
roll
fimuls
out
rcrl
imul
jl
aam
push
rcl
ret
stc
lods
inc
mov
repz
jno
xor
dec
mov
dec
adc
js
xchg
dec
pop
jbe
xchg
cli
sbb
cmp
sub
mov
adc
push
aad
fcomp
bnd
mov
mov
std
rolb
adc
sbbl
jo
sti
in
dec
mov
mov
sub
dec
loopne
sbb
push
int3
mov
inc
mov
ljmp
push
popa
sar
out
sub
add
push
in
aad
dec
inc
jl
arpl
mov
lea
mov
leave
mov
in
add
push
fists
test
into
mov
cmp
mov
pop
pop
jp
pop
pop
stos
cltd
andl
cwtl
loop
mov
lds
and
insb
aad
fmul
mov
int
cld
daa
or
lea
adc
ficomps
daa
sbb
push
jmp
roll
dec
les
cmp
cmc
jne
xchg
cmp
pop
addr16
addr16
std
dec
jg
out
cmp
call
xorl
push
mov
or
test
stc
int3
jge
push
pop
cs
fstpl
ss
sub
rolb
push
lahf
mov
mov
xor
sbb
lahf
inc
mov
mov
push
mov
lea
fnstcw
fwait
mov
jo
inc
mov
add
jl
jle
std
clc
or
ret
ja
int3
mov
test
adc
push
cli
je
je
inc
nop
cmc
imull
loopew
mov
pop
xchg
dec
mov
inc
out
dec
add
push
adc
in
test
xor
sub
push
sub
repz
outsl
aaa
test
mov
lock
dec
sbb
dec
sbb
or
pop
aas
mov
mov
mov
out
inc
cmp
dec
fs
mov
pop
sbb
mov
imul
mov
arpl
add
sub
inc
push
outsl
pop
fcomp
outsl
mov
fdiv
aam
or
repnz
lcall
jb
call
cmp
or
jle
sub
push
xor
sbb
add
sub
sbb
nop
push
mov
adc
test
pusha
pusha
insl
lods
mov
fstp
aaa
mov
aaa
lret
cmp
frstor
xor
jg
out
scas
fsubs
sub
push
addb
xor
in
nop
lret
data16
cmc
loope
add
jl
inc
outsb
jg
sub
xor
inc
rcrb
or
imul
mov
cmp
test
ljmp
jmp
push
shl
mov
jecxz
mov
push
push
daa
loope
xor
cmp
pop
aas
cmpsb
cmp
outsl
jns
adc
int
push
into
mov
add
stc
fcmovu
ljmp
fcoms
xor
jae
das
fs
mov
jle
add
das
testb
cmp
ficomps
jb
mov
or
cmpsl
rorl
test
and
out
inc
or
shrl
mov
aam
xor
add
loopne
sbb
iret
xor
dec
xor
push
or
mov
pushf
or
push
pop
xor
mov
xor
mov
or
repz
in
pop
rol
repz
fsubl
cmp
mov
faddp
cmp
sub
stc
stos
and
out
jb
mov
xor
jnp
test
push
fsubrl
xchg
adc
pushf
loopne
mov
or
shlb
into
pop
push
pop
test
inc
pop
cmpsb
or
adc
xor
sub
jns
gs
imulb
mov
mov
int
sbb
push
mov
xchg
test
xchg
xor
iret
clc
and
adc
jl
push
xor
ss
popa
test
repnz
adc
mov
jp
xchg
mov
dec
sub
mov
inc
stos
ds
icebp
mov
hlt
int3
mov
adc
insb
icebp
jmp
out
jns
mov
xchg
daa
das
pop
dec
iret
jmp
dec
cltd
icebp
add
jle
test
pop
fisubs
nop
ss
jbe
addr16
shl
xchg
outsl
out
push
sbb
mov
cld
loope
fbstp
pop
push
xchg
aas
ljmp
lahf
pop
leave
jmp
loop
inc
xchg
cmp
dec
repz
sub
out
aad
xchg
xor
repnz
fcmovnbe
sub
lret
jns
in
js
xchg
jge
xchg
jns
ffreep
in
mov
inc
cld
mov
lcall
cmp
xor
into
pop
and
cmp
movsl
sub
mov
sbb
clc
adc
pop
push
hlt
push
add
xchg
jp
les
push
dec
js
or
mov
fmul
cwtl
cmp
scas
xchg
insb
push
mov
push
push
xchg
or
xor
sbb
or
cmpsl
inc
imull
ljmp
iret
xchg
xlat
nop
cmp
and
mov
fnstcw
rcrl
and
jnp
push
dec
leave
test
mov
jno
lods
mov
aam
xchg
call
flds
gs
mov
pop
jae
les
rclb
int3
andb
sbbb
lea
mov
shll
mov
push
push
pop
push
lahf
push
push
ss
mov
adc
ret
js
and
mov
cmpsl
dec
ds
push
cmp
sbb
loop
xchg
out
sub
push
sti
pop
jne
ret
xchg
loopne
xchg
dec
sarl
mov
inc
jne
xor
push
xor
xor
scas
xchg
cwtl
dec
shr
into
sbb
and
testb
lcall
or
push
fcomps
sub
imul
xchg
daa
pop
pop
cs
lds
xor
cmp
push
addb
mov
mov
inc
jo
scas
jge
jbe
clc
jae
test
push
shrb
jne
outsl
lret
mov
mov
add
addl
inc
bound
pop
aas
adc
addb
jnp
gs
add
pop
inc
or
lret
mov
mov
jl
push
idivl
sub
cmp
rcll
mov
sub
dec
clc
stos
icebp
fnsave
icebp
lock
enter
mov
sbbl
sbbl
inc
mov
mov
outsl
insl
scas
or
into
cmp
pop
add
pusha
push
mov
jge
jl
adc
into
out
adc
add
dec
js
mov
push
out
dec
jae
mov
filds
pop
lods
inc
push
stc
movsl
outsb
mov
in
mov
enter
enter
xor
repz
loop
clc
ja
adc
xchg
inc
in
inc
jns
outsl
leave
mov
xor
sub
shlb
push
sarb
lods
clc
repz
mov
inc
arpl
outsb
inc
push
in
ret
daa
sub
xchg
cmp
movsb
lods
fisubrl
movsb
stos
adc
fists
testb
popf
jne
inc
cmp
mov
or
movsb
mov
hlt
ret
xor
mov
cmc
std
les
loop
scas
inc
or
xor
js
cmp
sub
dec
subl
in
mov
jbe
clc
pusha
adc
pusha
xorl
rcr
dec
in
out
push
call
negb
test
dec
mov
adc
jae
sti
inc
inc
cmp
xchg
jb
sbb
adc
xor
push
leave
mov
mov
in
int
imul
fistl
cmp
fstp
aaa
testb
clc
js
mov
bound
push
test
inc
lahf
clc
lahf
sarl
ljmp
jno
dec
push
jp
cs
xor
inc
xlat
and
movsb
aad
mov
xchg
cmpsb
sub
lret
add
fdiv
icebp
je
mov
in
pop
je
jbe
nop
xchg
add
ljmp
jnp
mov
mov
sbb
cmp
mov
or
rorl
stc
and
push
pop
int3
add
test
push
iret
imul
mov
ds
bound
cmp
insb
lds
sbb
pop
cmc
fiadds
mov
push
cmp
subl
arpl
xchg
pop
iret
xor
pop
in
aam
aas
xchg
cltd
movsb
jge
push
cmp
inc
push
sbb
inc
aas
aam
dec
bnd
pop
push
hlt
xor
xchg
addl
scas
iret
fsts
out
in
jb
cmp
push
mov
xchg
xor
int3
add
push
xchg
scas
mov
jmp
in
jg
shl
dec
int
sbb
cmp
and
in
cs
andl
ret
xor
mov
xchg
scas
ret
inc
lods
add
cld
dec
xlat
out
adc
mov
sarb
loopne
popf
jge
movntq
divb
sbbl
push
mov
leave
sbb
xor
repnz
shrl
test
jp
cmp
jno
mov
jns
pop
fimull
imul
rcr
fdiv
adc
mov
pop
cld
mov
push
scas
loopne
lret
decb
and
in
ja
jb
sar
and
mov
into
loope
add
jg
imul
enter
lds
addr16
pusha
push
pop
orl
insb
sbb
jnp
test
or
jmp
movsl
sub
inc
push
jne
dec
adc
cmp
lock
add
insb
je
dec
push
fdivp
pop
or
push
add
int
movb
push
lcall
cmc
push
hlt
fisubrs
std
sbb
sub
add
xchg
sub
in
aad
sbb
jae
jl
push
xchg
add
dec
das
aad
sub
pop
pop
add
cmp
notl
mov
mov
pop
movsb
cmp
jno
xor
cmp
iret
out
cmp
gs
sub
sub
mov
push
sbb
lock
test
stos
rorb
mov
cmp
popf
jb
out
lock
lret
add
ss
or
xchg
lds
or
movsb
jbe
in
jg
test
dec
pop
xchg
mov
pop
lcall
dec
sbb
mov
fs
mov
sbb
mov
or
dec
pop
rol
mov
cmp
test
or
outsl
daa
xorl
not
xlat
inc
lods
xchg
dec
enter
shl
insb
fcmove
and
sub
push
ljmp
mov
jno
mov
jg
mov
pop
pop
xchg
nop
outsl
inc
rol
sbb
pusha
mov
push
adc
xchg
xchg
sti
movsl
lcall
pop
orl
xor
lret
xlat
jnp
xchg
gs
mov
and
scas
dec
lret
into
add
jmp
arpl
jns
stos
sub
jbe
shll
sti
sbb
cmp
xchg
jae
ss
movsb
loopne
cld
mov
lret
stc
xchg
shrb
je
je
stc
imul
orb
imul
outsl
xchg
sbb
pop
lods
push
mov
push
movsb
push
fdivl
jns
jle
inc
leave
mov
ljmp
loope
enter
test
mov
dec
mov
mov
sarl
in
imul
sbb
mov
int3
movsb
and
mov
ret
stos
cmc
add
data16
movsb
mov
ja
lods
sub
idivb
push
out
dec
aad
movsb
push
mov
mov
xchg
mov
xor
cmpsl
inc
addb
jmp
pop
sub
jg
pop
adc
movsb
roll
or
dec
outsl
insb
jne
lock
mov
sarb
mov
mov
cmp
add
stc
fwait
dec
popf
and
sub
mov
sahf
xchg
jbe
shr
arpl
push
xor
stos
lahf
and
and
inc
js
add
jns
out
pop
pop
cmpsl
cmp
cmp
int3
icebp
push
xchg
loope
fwait
inc
mov
jae
xchg
jo
mov
add
xchg
imul
mov
adcl
call
gs
movsb
aaa
lods
sbb
pop
cld
cmp
mov
sbb
mov
or
xor
cmp
shl
movsl
mov
pop
cmp
pop
mov
cs
into
stc
pop
push
loop
jp
bound
push
and
outsb
jbe
loopne
in
inc
aad
xor
adc
ljmp
fs
mov
adc
rcll
ret
xor
scas
add
outsb
popf
push
ret
inc
xchg
call
scas
inc
mov
sub
cwtl
push
pop
leave
into
mov
mov
or
add
mov
lods
mov
cmp
mov
xor
cmp
shll
aaa
insb
cmp
xor
aad
adc
mov
popl
mov
repz
xchg
arpl
shlb
loopne
mov
repnz
xchg
es
push
mov
adc
pop
leave
imul
xchg
fdivrs
insb
ret
push
xor
jne
cmp
add
aaa
mov
lea
pop
pusha
es
xor
jns
xor
shrl
and
mov
icebp
mov
mov
mov
mov
add
lahf
mov
mov
adc
or
push
xchg
push
inc
inc
pusha
iret
stos
inc
lcall
and
or
repz
imul
xchg
dec
fdiv
mov
cmp
push
fnstcw
fsub
pop
mov
addps
ljmp
or
cs
dec
mov
mov
in
fldl
nop
int
pop
cmpsb
xchg
scas
mov
repnz
testb
adc
in
and
xchg
sarl
pop
insl
sbb
mov
adc
jmp
ja
int3
jno
mov
shlb
xchg
cmp
add
jg
fistpll
loope
pop
mov
xchg
pop
js
nop
mov
loopne
movsb
xor
loop
dec
push
fwait
xor
inc
inc
fistpll
je
in
xor
mov
test
loopne
js
dec
push
pop
mov
cmp
imul
xchg
mov
xor
clc
sub
movsb
out
repnz
negb
lahf
cmp
add
xchg
ds
dec
sub
mov
mov
mov
fldcw
jne
stos
loope
call
mov
cs
add
push
xor
or
stos
cld
rcrb
stos
or
add
clc
std
adc
mov
push
mul
addb
mov
loope
push
scas
aad
ret
mov
js
dec
pop
push
cmpsb
or
ljmp
int3
xchg
xchg
pop
adcb
loopne
out
mov
xchg
in
stos
stos
xchg
pop
cmp
lahf
icebp
sti
jns
loop
inc
fisubrl
mov
icebp
inc
push
or
jle
xor
sbb
inc
lods
mov
dec
cmpsb
std
lret
out
mov
add
jnp
cmpsl
ja
mov
push
mov
insl
xchg
pop
dec
fsubl
addr16
in
stos
or
cs
or
pop
ss
mov
jo
flds
push
out
stos
cmc
xchg
xchg
mov
rcll
sbb
and
mov
outsb
loope
cmp
inc
stos
call
jmp
ss
sti
jno
ja
testl
mov
rolb
cmp
cmp
add
lods
loope
xchg
ret
mov
mov
xchg
push
pusha
fldl
xor
ja
pop
and
mov
stos
jge
pop
sbb
test
mov
push
sbb
cld
add
adc
sti
dec
mov
mov
cmp
add
out
dec
push
fidivs
loopne
xchg
int
pusha
aad
stc
jnp
ret
mov
sbb
cld
test
aad
das
push
ret
adc
jle
adc
jo
sarl
aad
shrl
xor
dec
and
cwtl
lret
cmp
xor
mov
add
ret
popf
out
inc
push
sub
int3
pop
xlat
hlt
sarb
push
test
xchg
add
dec
loopne
or
dec
push
add
outsl
pop
mov
lret
dec
push
and
jle
sub
loope
fstpt
add
and
daa
xchg
test
mov
push
aas
pop
cltd
xor
out
icebp
fistpll
push
stos
in
ljmp
jp
les
pop
pushf
add
in
sub
mov
dec
test
mov
pop
inc
pusha
push
mov
push
sbb
xchg
xchg
push
and
jb
mov
in
and
xor
mov
negl
mov
push
int
notb
into
add
int3
xor
xor
pop
adc
mov
xchg
in
or
mov
mov
pop
popf
out
bound
pop
imulb
cmp
pusha
cmp
mov
dec
sbb
jge
popf
inc
dec
in
mov
test
dec
mov
outsb
adc
dec
mov
data16
out
push
xor
imul
gs
push
inc
and
sub
mov
pop
nop
imul
mov
jae
pop
pop
mov
cltd
cmpsb
cmpsb
push
aad
imul
stc
test
aaa
pop
xlat
mov
mov
xchg
and
lcall
adc
pop
adc
inc
cmp
push
daa
iret
out
mov
cld
fnstcw
xchg
adc
pop
sub
xchg
call
pop
inc
sbbb
ret
fdivr
xchg
add
in
add
or
dec
cli
sbb
or
xor
xor
adcl
xor
add
jno
sbb
mov
mov
mov
es
add
and
push
stos
out
mov
xchg
cmp
push
sar
mov
iret
int3
pop
jbe
and
insb
dec
add
cmp
int3
push
pop
sbb
dec
call
add
and
sub
add
adc
test
adc
xor
mov
mov
mov
mov
inc
or
fwait
ret
xchg
ret
out
inc
lcall
sar
xlat
fnstsw
fs
daa
loope
xor
dec
cmp
inc
fsubrs
mov
ret
and
and
xor
test
mov
inc
xchg
int
sub
xchg
inc
jns
dec
adc
or
dec
pop
mov
and
jns
xorb
test
adc
mov
sarl
push
lret
push
clc
push
scas
jmp
xor
add
jnp
cmp
inc
ja
xor
lds
fisttps
add
ret
fmull
mov
xor
mov
imull
hlt
or
push
es
inc
pop
es
xor
or
es
and
cwtl
push
subl
or
insl
mov
sub
mov
dec
mov
push
inc
jb
sub
jnp
cltd
addr16
or
in
xor
mov
jmp
or
mov
mov
jnp
cwtl
inc
mov
daa
mov
jns
mov
btc
cwtl
nop
add
jnp
ret
jns
mov
jle
push
xchg
shll
loope
rol
das
xchg
sbb
rorb
test
mov
lahf
rcrb
push
cmp
movsl
je
call
lock
lock
sbb
mov
lret
ret
in
hlt
push
mov
dec
ljmp
int
mov
testb
cs
cmpsb
add
in
daa
jecxz
dec
sbb
repnz
lods
sti
in
dec
idivl
lods
sahf
inc
mov
movsb
gs
mov
int
mov
inc
adc
sub
ss
lret
call
fcoms
and
aas
and
jle
xor
icebp
in
cmp
inc
jle
lcall
out
or
cltd
out
and
fwait
data16
cmp
lods
sbb
je
mov
add
mov
or
jle
pop
pop
rol
inc
pop
adc
mov
fwait
es
dec
adc
add
dec
dec
daa
repz
mov
stos
push
mov
icebp
lea
loope
repz
inc
imul
or
hlt
fbld
movsb
xor
push
sub
sub
dec
jecxz
jb
cmc
leave
push
jbe
and
push
addr16
out
mov
icebp
push
shl
cmc
mov
test
pop
scas
fiadds
mov
inc
or
dec
or
arpl
sub
data16
stc
cmp
mov
and
loope
pusha
ss
icebp
enter
call
jno
mov
mov
jnp
rclb
loop
in
cmp
mov
cmpsl
pop
lahf
jno
mov
les
aad
dec
xchg
lahf
cld
add
jmp
and
pop
adc
scas
cmpsb
jmp
out
imul
cmp
adc
es
lahf
xor
cmp
mov
or
xchg
push
cmp
ja
push
int
out
sbb
dec
je
jg
out
das
push
repz
test
pop
add
jbe
cmp
jle
roll
cwtl
pop
mov
xchg
call
add
lahf
out
subb
sbb
mov
fadd
mov
jb
fisttpll
popf
jo
adc
cmpsb
sti
mov
pusha
push
loop,pn
stos
leave
ret
pop
sti
mov
outsl
adc
xor
jge
lock
cmp
push
andl
jmp
fwait
jbe
pusha
or
test
mov
xorb
jnp
clc
ret
mov
jb
jmp
sub
rclb
pop
loopne
lahf
lock
sbb
sub
add
and
add
push
sub
mov
jg
pushl
sbb
subb
mov
xor
add
sti
jmp
lahf
sarl
dec
sti
shlb
ret
sbb
add
jns
aam
inc
fcmovnbe
idiv
xchg
mov
jecxz
sub
cmpsb
mov
adc
jns
sar
mov
out
lret
mov
adc
das
shrl
insl
jg
enter
mov
nop
xchg
hlt
push
shrb
mov
enter
jnp
inc
test
xor
add
movsb
lds
out
js
add
movsb
pop
pop
lods
cltd
sub
sbb
and
push
lods
into
and
stc
jbe
aad
jle
dec
or
out
test
jno
mov
cmpb
popa
xor
mulb
jns
lret
push
addr16
scas
subl
cmpl
fnstcw
lods
jb
sbb
push
sbb
les
movb
jmp
rcrl
push
dec
popa
xor
adc
fst
mov
loopne
push
mov
push
out
xchg
inc
addb
ret
inc
data16
pop
sub
cmpsl
mov
dec
mov
lods
lea
fisubrl
jmp
inc
ja
aaa
add
jbe
out
mov
push
mov
cmp
loopne
pop
fistpll
shll
fists
ret
stos
sbb
shr
out
rcll
je
in
sbb
inc
pop
push
idivb
pop
lds
cld
jmp
aam
jb
lret
sbbl
sub
scas
out
dec
lods
cmpsb
int3
es
imul
repz
cmpsb
xchg
aam
inc
mov
push
lret
cs
test
xchg
repz
mov
sbb
add
mov
sub
and
fists
scas
mov
xor
inc
jl
push
push
mov
push
sub
jb
pop
sub
and
push
cmp
inc
pop
test
mov
xor
push
ljmp
add
cmp
ja
jp
int
adc
in
int
pushf
and
sbb
js
mov
mov
or
pop
lods
mov
push
mov
jno
and
inc
lock
mov
out
xchg
lock
jno
dec
mov
test
ljmp
js
xor
mov
cli
shll
aaa
cs
mov
adc
mov
mov
shrb
cmp
popa
frstor
enter
into
cltd
adc
xor
in
inc
dec
mov
nop
xchg
jge
fcomps
jle
mov
xor
jno
out
mov
add
sbb
sbb
adc
out
mov
into
mov
scas
add
lret
xor
test
xor
dec
cmp
xor
shl
and
sahf
jp
inc
adc
sbb
pushl
sub
jmp
push
push
popa
shrl
mov
lret
cmp
stos
arpl
sbb
bswap
jo
sahf
sub
mov
xchg
sub
sbb
js
movsb
jne
xor
enter
aaa
xabort
inc
divb
jae
and
adc
push
int3
pop
xchg
adc
jns
xchg
and
fnstenv
mov
pop
add
adc
pop
add
mov
fucom
das
pcmpgtw
mov
sub
push
mov
aad
aas
jecxz
cwtl
imul
sbb
mov
mov
pop
adc
mov
add
push
outsl
sub
stc
add
sub
xchg
loope
xchg
mov
pop
fisubl
cmpsb
ljmp
lret
int3
stc
dec
repz
mov
jae
fisttps
aas
pop
xchg
mov
subb
dec
inc
lcall
dec
cs
cli
push
adc
fbstp
fidivl
stc
jle
in
or
mov
insb
pop
outsl
mov
cmp
adc
mov
std
inc
enter
addr16
dec
xchg
jo
pop
jecxz
xchg
or
scas
sub
icebp
les
or
js
testl
jo
scas
pop
aad
scas
push
xchg
or
mov
inc
mov
out
and
pop
xor
insb
mov
popa
call
sbb
and
lret
xor
add
xor
stos
test
fisubl
mov
xchg
arpl
int
lea
inc
lds
cmc
sub
mov
es
sub
addl
and
ljmp
mov
jmp
lret
pusha
rcr
bound
cwtl
jle
pop
inc
jnp
mov
mov
mov
into
or
push
inc
loope
popf
sub
xchg
daa
xor
mov
int3
imul
mov
pop
mov
ret
gs
mov
int3
mov
mov
jns
jns
sbb
push
jno
adc
push
dec
pop
xchg
mov
ds
jg
and
addr16
xchg
dec
dec
lret
notl
pop
xlat
sub
mov
movsb
jbe
mov
pop
adc
nop
add
fucomi
and
or
pusha
lds
sahf
inc
hlt
pop
int
sub
pop
mov
push
xor
xchg
jle
pop
neg
pop
pop
ds
push
fwait
mov
push
sbb
cmc
mov
aaa
mov
adc
mov
mov
push
xchg
test
mov
outsl
loopne
adc
icebp
lods
cmp
and
aad
dec
sub
es
andl
xor
mov
sbb
and
imul
sub
xlat
mov
jns
mov
popa
adc
inc
in
dec
pushf
ds
or
iret
mov
fcompl
in
sub
movsl
xor
lock
and
push
je
cltd
fldenv
test
lret
stos
jns
and
mov
dec
movsb
data16
sbb
pop
jae
push
sub
lds
lahf
xchg
push
stos
fisttps
mov
xchg
lds
cmp
sbbl
cs
lea
leave
ret
xchg
mov
pop
mov
and
je
scas
inc
repz
dec
sbb
xor
add
call
xor
or
fisttps
int
dec
lret
fdivr
lea
or
andl
adc
ja
or
adc
data16
lock
push
xchg
stc
clc
adc
mov
pop
pop
fiadds
int
imul
addr16
mov
daa
and
in
sbb
jbe
inc
enter
in
mov
jg
inc
ljmp
insl
fldcw
mov
cmp
cs
repz
sahf
or
cmp
call
sbb
mov
cmpsl
lretw
mov
mov
dec
xchg
cs
incb
pop
xchg
add
pop
icebp
xchg
mov
int3
out
lret
mov
xor
sub
in
aad
cmp
sbb
xor
xor
pop
out
mov
cmpsl
push
mov
mov
jp
arpl
inc
ret
xchg
and
pop
inc
cmp
and
jo
xor
sbb
inc
push
mov
push
mov
scas
xchg
cmp
subl
aam
pop
ja
jbe,pt
and
dec
inc
inc
jno
movsb
dec
add
sti
nop
les
insl
xchg
in
mov
out
test
or
repz
jne
icebp
imul
adc
or
xchg
fwait
pusha
popf
push
rcll
arpl
rorl
aad
xor
arpl
into
movsb
add
movsb
jle
cmp
mov
or
into
test
push
pushf
mov
sbb
ret
clc
mov
loope
aas
ljmp
stos
pop
adc
push
out
and
mov
gs
sub
das
push
icebp
ss
mov
mov
mov
sub
int3
xor
or
mov
cmp
add
or
mov
push
sarb
es
add
and
shrb
cmp
icebp
inc
dec
sub
test
scas
and
mov
jns
cwtl
out
and
xchg
imul
xchg
mov
sbbb
inc
addl
push
popa
sahf
jo
ja
jge
lret
lds
inc
xchg
add
xor
movb
jmp
push
lea
test
mov
and
push
xor
sbb
ret
cld
ss
cmpsb
sub
xor
cmc
in
inc
mov
xchg
hlt
jge
cwtl
jae
inc
adc
shlb
stos
adc
loope
call
cmc
dec
les
loopne
xor
ja
inc
test
jae
jb
ret
in
push
fsubrl
xchg
xor
and
mov
and
push
pop
sbb
sahf
add
adc
mov
movsb
jo
shll
pop
das
lahf
es
adc
inc
lds
fimuls
outsb
fdivrl
enter
mov
mov
stos
and
pop
inc
repz
push
add
jge
mov
loopne
insl
mov
xchg
mov
xchg
mov
aad
insb
xchg
cwtl
inc
add
or
hlt
jne
adcb
cmpsb
ljmp
inc
cmpsb
testl
call
xchg
mov
data16
and
int
push
jno
dec
or
pop
insl
or
push
outsl
add
xchg
sub
mov
idivl
test
push
stos
dec
cmp
or
in
push
mov
cwtl
or
repz
mov
pop
stc
js
mov
cmp
lock
xor
insb
stc
cmp
and
and
mov
into
pop
or
mov
shll
cmp
add
cld
dec
decl
xor
in
lret
test
mov
or
mov
loop
pop
jb
fldenv
or
mov
xor
mov
outsl
in
push
lock
in
mov
xchg
jns
rcll
or
gs
ja
cmpl
stc
dec
xor
fildll
lahf
xlat
jge
cmp
iret
push
push
sub
dec
mov
mov
pop
js
faddl
mov
fisttpll
dec
pop
test
addb
sti
fsubl
lods
sub
or
mov
iret
adc
push
add
fcomip
push
or
mov
mov
js
inc
test
test
mov
das
leave
push
shl
and
push
xchg
add
stos
int
lret
pop
push
xchg
test
pop
movsl
stos
enter
inc
cld
out
add
fsubrl
jl
push
jo
or
mov
fmull
sub
sub
pusha
clc
aam
cli
cli
leave
divl
xor
pop
imul
mov
leave
push
jae
xchg
xchg
inc
repnz
jnp
jo
cmp
dec
cld
fwait
in
js
cwtl
mov
ds
sbb
fucomp
std
cmp
fcoml
mov
cwtd
sub
out
daa
or
cmp
sub
dec
out
jne
pop
outsb
push
fsubs
enter
xchg
enter
into
or
dec
jns
mov
adcb
ds
scas
js
sub
jnp
xchg
cmp
xchg
push
movsl
daa
adc
icebp
mov
dec
adc
pop
in
out
sbb
cs
dec
cld
mul
cmp
jl
mov
sub
push
pop
add
jb
sub
dec
xchg
dec
lahf
pop
into
es
mov
out
pop
dec
add
insl
jl
outsl
jl
adc
lods
repnz
fsubrl
sbb
call
adc
pushf
mov
sarb
bt
xchg
jns
sbb
sub
xor
insb
outsl
shlb
jg
push
lock
adc
add
scas
dec
xor
scas
cmc
dec
xchg
xor
test
pop
xchg
ret
push
cmp
sub
xorl
inc
cmc
inc
cmp
cmpsb
mov
dec
inc
xchg
sub
add
aam
xchg
rorb
inc
jg
cmp
push
adc
xlat
mov
aaa
sub
sarl
push
into
or
jns
fistpl
or
sub
aam
shll
loop
adc
arpl
cmp
mov
pushl
inc
ds
push
icebp
dec
out
sti
leave
jle
jecxz
es
test
or
mov
jecxz
mov
pop
roll
inc
stos
pusha
or
sti
sbb
sbb
sub
stos
js
xchg
or
scas
push
xor
jnp
add
cmp
jnp
icebp
ret
mov
icebp
in
hlt
mov
and
sbb
hlt
pop
dec
test
inc
lock
add
aas
enter
lea
out
inc
cwtl
and
nop
aaa
mov
out
mov
inc
pop
or
insl
or
imul
mov
xor
movsb
dec
and
out
mov
in
push
jmp
lods
gs
add
mov
pushf
lcall
loope
js
lea
mov
jge
test
sarb
dec
dec
mov
xor
or
imul
pop
aam
adc
mov
or
sub
or
mov
mov
mov
mov
cli
inc
jnp
jns
mov
ror
push
mov
addr16
push
jb
test
popa
mov
dec
push
inc
adcl
cmp
jge
ja
dec
pop
xchg
xor
or
lret
mov
incb
outsb
rcrl
push
test
sbb
jle
hlt
cld
fbld
mov
mov
ret
add
fcompl
jmp
stos
fs
pop
cmp
or
ja
sbb
sbb
mov
test
mov
hlt
xor
xchg
sub
iret
push
jmp
rcrb
pop
inc
je,pn
ret
push
xchg
cmpsb
jb
dec
in
shlb
aam
push
mov
shll
xor
int
xor
fs
xor
faddl
mov
cmc
addl
pop
test
mov
xor
outsl
in
aas
pop
fdivr
xorl
lret
cmp
jmp
test
mov
xchg
jmp
test
test
inc
js
jl
ss
lret
push
pop
daa
mov
cmp
sbb
call
or
xor
and
aas
in
inc
or
inc
mov
dec
daa
jbe
add
xchg
pop
std
imul
dec
mov
in
mov
add
and
js
test
sbb
add
dec
es
ror
out
in
adc
bound
cmpsl
in
popf
nop
cltd
insb
fs
or
cltd
mov
add
and
sbb
and
insl
ret
cwtl
lods
xor
cmc
arpl
js
scas
cltd
testl
mov
lcall
xchg
and
xchg
repz
in
xchg
and
enter
call
push
and
cmpsl
cmp
adcl
dec
ficoms
adc
leave
lahf
adc
jecxz
scas
dec
cmp
jmp
adc
in
adc
lods
repz
push
test
push
sbbb
je
scas
add
enter
add
sub
and
jns
pop
imul
stos
mov
adc
dec
push
int
cli
pusha
ret
adc
leave
inc
xor
enter
lahf
fdivrl
xlat
aam
inc
and
sub
cmpsl
mov
ret
lea
cld
addr16
cli
cmp
push
testl
mov
pop
and
push
xchg
cmp
in
inc
xor
daa
in
mov
dec
sub
xor
les
out
sbb
lock
and
dec
sbb
cmp
out
test
in
rclb
cli
push
out
xchg
push
jle
jmp
pop
ret
insb
push
push
pop
pop
fistl
add
xor
je
idivb
clc
insb
icebp
outsb
jbe
adc
in
or
aad
add
pop
adc
fcompl
or
movl
ret
sub
repnz
xchg
lds
xchg
and
jnp
data16
add
hlt
push
or
xor
and
pop
ja
jge
arpl
sahf
idiv
xor
xchg
loope
push
xor
adc
fwait
inc
test
jae
shlb
ja
sahf
outsb
es
sbb
cmp
sub
pop
pop
sahf
invd
sub
push
pop
cli
sbb
jb
inc
adc
mov
jb
int
mov
xor
push
mov
or
add
arpl
pop
imul
push
mov
pop
inc
sbb
mov
mov
pop
mov
pop
and
sti
lret
jg
pop
sbb
je
cmc
xchg
sub
ret
enter
jb
mov
cmp
add
push
stos
das
dec
pop
outsl
jecxz
push
sbb
icebp
repz
inc
mov
daa
testb
xor
clc
adc
lods
xchg
cmovs
ss
mov
cmp
gs
in
jnp
jle
mov
or
imul
add
jbe
imul
xlat
cs
jecxz
mov
cmp
xor
mov
adc
add
sar
pop
xchg
cmpsb
xchg
push
inc
push
jo
dec
cmpb
out
xor
test
add
mov
gs
lahf
int3
jo
inc
les
and
push
repz
push
neg
xchg
sub
adc
imul
mov
sti
fadds
cmp
jl
sbb
mov
inc
in
jg
stos
gs
cmp
rcll
ret
mov
push
addl
add
sub
xor
dec
sub
out
adc
mov
mov
jp
push
jne
sub
xor
cmp
mov
bnd
or
jl
mov
mov
gs
xchg
lods
cmp
xor
mov
insl
ret
cmp
push
pop
lods
jo
cmpsb
push
xchg
out
jne
cli
mov
rclb
clc
add
adc
call
push
cmp
add
and
sbb
xchg
and
stc
sahf
mov
rorl
xchg
jecxz
mov
inc
mov
push
mov
data16
les
and
or
jl
and
pop
pop
mov
jmp
inc
pop
cmp
movsb
jmp
xchg
cmp
inc
pop
nop
adc
jae
and
lret
inc
js
xor
fcomps
push
push
jg
sbbl
mov
repnz
insl
inc
lods
leavew
mov
fwait
in
cld
pop
push
jns
or
mov
mov
xchg
imul
rclb
ss
hlt
jmp
mov
enter
mov
and
mov
addr16
pusha
mov
inc
aam
sbb
movaps
inc
adc
orl
lret
adc
sahf
fldt
aas
fs
jno
fists
push
in
push
cmp
cmpl
xor
and
pop
dec
lock
mov
xchg
in
iret
test
bound
or
lods
je
xchg
into
insl
jmp
stos
fiaddl
inc
xchg
sbb
mov
mov
lock
loopne
lds
clc
lods
adc
shlb
add
or
je
movsb
insb
jmp
inc
push
scas
jo
mov
outsl
ret
ss
adc
mov
ss
mov
add
xor
into
inc
dec
jl
inc
loopne
cmp
insb
mov
dec
bswap
push
cwtl
jle
fsubl
in
jl
in
inc
pusha
and
flds
in
adc
jno
movsb
je
cmp
into
ds
mov
mov
inc
int
call
daa
mov
pop
jno
pop
outsb
ret
jns
push
movl
dec
push
sarb
push
xchg
pop
cmp
inc
in
out
dec
cmpsl
sbb
pusha
adc
xchg
dec
cltd
mov
sub
mov
xchg
add
xchg
push
push
loop
lods
push
jbe
inc
dec
fsubl
jne
aad
in
les
dec
nop
clc
and
int
jg
mov
xchg
pop
xor
js
enter
bound
sub
testb
mov
inc
push
or
push
xor
jg
lock
push
xchg
sub
scas
test
decb
scas
push
in
push
cs
inc
lds
mov
xchg
push
ds
mov
jo
jmp
pop
xor
cmp
xchg
rcll
xchg
mov
mov
stos
xor
mov
or
or
cs
fisubrl
fadd
cmp
btc
dec
stos
inc
xor
push
xchg
mov
aas
jo
loop
sahf
stos
mov
cmp
fiaddl
std
dec
mov
int3
sbb
sub
mov
dec
iret
fs
pop
add
xchg
and
je
mov
mov
pop
mov
adc
pop
mov
mov
sbb
and
ljmp
mov
pop
ret
mov
xor
inc
mul
inc
mov
add
leave
jnp
xor
test
out
cmp
dec
inc
sub
mov
js
inc
inc
leave
flds
xchg
inc
imul
jns
shrb
stc
xchg
adc
out
outsl
pop
popa
sub
imul
addr16
adc
mov
pusha
dec
mov
mov
or
sub
jl
adc
sbb
or
and
leave
adc
push
fiadds
mov
cmp
test
test
mov
loope
rcrl
cmp
xchg
popf
punpckldq
push
sub
pop
stos
xchg
ds
int3
jmp
mov
jne
lea
scas
fwait
in
sbb
xchg
jl
jbe
ss
leave
dec
xchg
mov
mov
movsb
out
in
push
and
stc
jg
dec
pop
fsubp
dec
fmull
lods
divb
and
mov
sbb
iret
pusha
cld
das
cmpsb
cli
adc
and
stc
pop
lret
mov
sub
in
mov
xchg
adc
mov
jno
jno
cmpsl
push
movsb
pop
xchg
orb
inc
dec
lahf
mov
pop
nop
je
push
adc
mov
or
movsl
movsl
fcoms
mov
data16
int
ficoml
aad
loopne
arpl
mov
cmp
in
fisubrl
xchg
mov
mov
push
in
outsb
fcoms
xchg
mov
dec
outsb
push
ret
wrmsr
jg
add
inc
or
lods
push
push
loop
cmp
dec
mov
dec
les
hlt
push
repz
cld
out
in
lea
push
lahf
dec
jg
cmpsb
outsb
int
gs
mov
xorb
xor
and
notb
ljmp
xor
loope
mov
daa
scas
out
bound
popa
xchg
icebp
pop
orb
inc
scas
mov
inc
test
jb
test
sub
mov
into
jg
out
and
loope
cmpsb
arpl
stc
sbb
test
daa
dec
cmp
test
das
sbb
sarl
dec
dec
jnp
push
les
sbb
sub
popa
inc
in
cmpsl
push
xchg
push
or
inc
pop
mov
lahf
rolb
mov
repz
xor
fidivrs
xorb
ss
push
xlat
iret
cmp
aam
out
add
ret
xchg
add
test
rcll
les
sbb
xchg
jnp
sbb
xchg
push
sbb
mov
dec
push
mov
cmp
mov
pop
xchg
les
adc
jo
imull
push
xchg
xchg
das
dec
mov
aam
or
je
or
ds
pop
lods
outsl
insb
cltd
jl
inc
sti
lods
dec
fldl
push
sahf
push
push
inc
ror
mov
add
in
jbe
fwait
test
mov
inc
inc
fldl
inc
sbb
js
cmp
lods
inc
push
mov
xor
jb
inc
pop
mov
xchg
push
pop
cmp
in
dec
sbb
gs
xchg
sarl
inc
mov
cmp
xchg
xor
sub
dec
push
xlat
pop
movsb
xor
push
rorb
pop
jp
mov
gs
sbb
pusha
outsl
push
test
leave
movsl
std
dec
icebp
mov
inc
mov
imul
xchg
mov
sub
outsl
cs
aaa
mov
in
les
cli
daa
push
ds
das
push
jmp
int
data16
sbb
mov
pushf
mov
jae
xor
add
xor
jbe
pop
imul
fwait
aaa
mov
out
ds
cmpsl
add
addl
je
addr16
fildl
les
inc
mov
lds
lret
dec
cwtl
pusha
mov
and
or
add
sub
sbb
out
or
push
cmpsl
clc
pop
mov
mov
jno
xchg
pusha
jb
sub
xchg
cmc
pop
pop
movzwl
cmpsb
iret
lea
out
fistps
dec
and
ret
outsl
movsl
es
rol
rcrb
cltd
sbb
jo
scas
das
test
sub
or
inc
daa
addr16
sub
repz
inc
xchg
into
movsl
dec
sbb
pusha
sbb
aad
lds
mov
iret
mov
shll
rcl
lret
mov
out
cltd
sub
shlb
push
mov
neg
adc
cmpsl
xchg
inc
ds
adc
mov
cltd
add
shlb
cmp
in
mov
into
mov
jle
clc
jge
lods
rcl
pop
and
jmp
je
rcll
mov
repnz
jno
add
pushl
cmp
sbb
popf
add
mov
mov
push
jecxz
pop
scas
repz
jle
and
ljmp
movsb
pusha
inc
jg
jb
cmp
cmc
jno
sbb
mov
mov
dec
movsb
xor
adc
dec
push
cmp
inc
popa
rcll
cli
mov
inc
or
ficoms
xchg
push
lea
fisubrs
sub
mov
test
ficomps
lret
push
dec
cmp
sub
xchg
jmp
fcmovnu
adc
cld
bound
push
cmp
gs
sub
mov
call
adc
pusha
int
sbb
jle
lods
pushf
pop
imul
xor
int
jle
scas
dec
xchg
lahf
sbb
loope
cld
sbb
je
inc
xchg
adc
insl
movsb
fimuls
add
nop
sbb
inc
movsl
and
mov
jmp
add
sbb
pusha
mov
and
imul
lds
enter
dec
xchg
int
add
adc
ss
lret
stc
xor
in
dec
out
loopne
mov
lods
cmp
js
aam
jno
or
xchg
push
mov
test
and
jle
cs
jo
es
adc
sub
xchg
int3
jae
orb
cwtl
jae
fdivl
sub
cmpl
xlat
mov
cs
stos
adc
testb
sub
sbb
jnp
jne
mov
sub
insl
mov
icebp
mov
inc
dec
fdivrl
jle
cmp
aaa
fsubl
mov
pop
mov
out
mov
in
xorl
shll
adc
fistps
clc
les
inc
movsb
mov
ficompl
pop
stc
dec
test
shlb
pop
xor
sub
decb
incl
adc
push
dec
es
rcll
enter
lcall
leave
fmull
and
adc
and
add
cmp
pop
shl
jecxz
aad
cmp
daa
mov
inc
inc
xchg
out
and
call
outsl
outsl
xchg
xchg
sahf
jmp
jl
xor
cwtl
add
lock
fisttps
jb
imul
xor
mov
aad
or
and
inc
push
adc
mov
lcall
cmp
iret
xchg
aam
push
sub
sub
push
ds
mov
mov
fadd
lods
xor
cwtl
jecxz
or
pusha
inc
pmuludq
mov
test
aaa
sbb
xchg
sub
xchg
inc
push
push
cli
or
mov
cmp
out
fbld
and
or
add
xor
jo
mov
ljmp
cwtl
and
mov
mov
cmp
fstp
ret
add
cli
cmpl
icebp
cmp
shlb
dec
pop
mov
insl
sti
mov
pop
cmc
push
icebp
bound
roll
dec
xor
mov
dec
adc
dec
push
xor
je
ds
inc
fsts
in
fucom
cmp
popw
cmp
sub
sbb
sti
dec
mov
cli
out
stos
xor
out
inc
nop
mov
adc
inc
jp
idiv
xor
jl
mov
mov
test
ret
or
and
jb
pop
roll
mov
lods
jmp
imul
test
pop
dec
pop
or
das
push
sti
lock
cs
xchg
pop
je
lea
jbe
mov
pop
icebp
int
mov
mov
ret
pop
repz
call
mov
xor
lret
jmp
fiadds
test
inc
push
popa
mov
push
jnp
inc
sub
mov
call
mov
adc
in
sub
inc
dec
testb
dec
movsl
sub
and
push
pushl
mov
mov
mov
push
mov
xchg
cmpsb
mov
pop
xchg
adc
adc
cmpsb
mov
test
cmp
inc
call
and
mov
sbb
ljmp
fcom
int
pushf
gs
sub
hlt
sub
not
sahf
cmpsl
push
cmpsl
xor
loop
add
out
cld
nop
pop
in
dec
repz
je
insl
pop
rcrb
sub
fiaddl
cld
cmp
loope
xor
xchg
jae
sbb
mov
fidivl
mov
in
push
push
mov
add
cmp
cmp
cmp
jle
pcmpeqw
inc
push
add
and
or
mov
rcl
dec
jg
pushf
push
cmpsl
mov
test
test
hlt
sbb
pop
push
pop
push
insl
popa
or
test
pop
push
jl
sahf
or
sub
pop
movsb
inc
pop
mov
mov
jl
enter
fisubs
push
inc
inc
mov
push
xor
jl
fs
xchg
daa
stc
inc
stos
fsub
loope
mov
pop
and
es
mov
pop
pop
add
fsubs
scas
lea
xorb
pusha
mov
add
inc
insb
cmp
or
inc
jae
cld
iret
dec
sbb
das
int
test
mov
sub
adc
les
repz
js
and
mov
push
out
mov
push
addr16
cmp
into
into
fbld
pushf
mov
push
sub
es
fwait
aam
movsb
arpl
lods
or
idivb
shl
add
push
cmp
arpl
insb
int3
call
int
sbb
mov
stc
and
mov
das
loope
xchg
xor
cmp
loopne
imul
pop
jp
or
mov
mov
ffree
sbb
imul
stc
mov
cmp
insb
dec
mov
inc
cmp
addl
xchg
shlb
ds
out
mov
aas
adc
sbb
push
cli
xor
xchg
aam
jp
lret
mov
inc
dec
loopne,pn
sbb
sub
lahf
shrb
xor
sbb
pushf
inc
hlt
pop
pop
loop
or
testb
sub
dec
rorl
jmp
dec
ljmp
je
imul
cmpb
push
mov
and
mov
in
xor
and
mov
add
push
pop
xchg
inc
and
out
jl
adc
add
aaa
test
int
dec
dec
fcmovne
cli
in
sbb
mov
xorb
insl
aaa
addr16
sar
ja
sbb
int3
out
lcall
mov
mov
pop
cmc
inc
test
cmp
mov
subl
sti
xor
out
out
adc
pushf
xor
sub
xchg
push
sbb
test
sub
mov
pushf
cwtl
xor
pop
pop
sub
mov
sbb
in
fisubrs
leave
enter
adc
popa
bound
data16
and
adc
loop
out
fidivs
ret
shl
adc
mov
jno
jae
cmp
popa
push
cmp
lods
add
cwtl
and
adc
scas
popf
je,pn
loopne
jg
adc
push
pop
push
xor
bound
inc
pop
icebp
push
mov
stos
cmpsl
dec
test
inc
pop
insb
push
aam
mov
rcll
bound
pop
xor
jo
push
jmp
fisttpl
aas
add
leave
cmp
mov
and
aas
lods
js
mov
jmp
cmp
add
stos
loope
repz
mov
cmp
cli
addb
std
in
es
inc
das
and
mov
lret
iret
or
mov
or
in
lods
add
loop
pop
and
imul
stos
sbb
aas
sub
or
mov
sub
jb
and
push
cs
mov
mov
ret
insb
xor
andl
into
sahf
jns
dec
fisubrl
fwait
rorl
jecxz
outsl
add
dec
and
dec
pop
cmp
mov
and
insb
ret
cmpsb
push
jbe
movl
loope
cwtl
push
cs
nop
xlat
pop
xchg
mov
xorb
in
inc
aam
inc
call
xchg
jge
jbe
dec
xor
pop
loopne
leave
lods
mov
scas
push
mov
inc
adc
jae
dec
xor
pushl
fcmovb
jnp
inc
push
jbe
dec
and
std
cmpsb
outsb
dec
jle
int
mov
shlb
xchg
mov
push
das
sbb
inc
insl
lods
lea
and
lcall
jne
jl
jbe
test
lods
inc
push
fcoml
and
loop
test
inc
dec
mov
and
push
push
stos
dec
shrb
int3
into
ret
sbbb
pop
shll
loopne
xor
into
sbb
pushf
sahf
cmpsl
or
out
pop
clc
cwtl
sbb
pop
jmp
xrelease
jmp
aas
lock
fsubr
sti
xchg
shll
fs
enter
jnp
adc
dec
inc
xchg
fcmovnbe
mov
aam
push
fdivrs
mov
shlb
shl
ficomps
dec
inc
pop
fists
inc
or
cmp
outsl
inc
pop
fsubrp
mov
sbb
adc
push
aaa
sub
icebp
xor
adc
sbb
cmp
insl
aad
dec
cmp
xor
adc
xor
aad
jl
ja
push
pushf
jo
sbb
pushf
daa
sahf
outsb
stos
cmp
mov
jnp
add
sahf
daa
insl
cmpsl
dec
rcrl
dec
add
aaa
or
sbb
sti
orl
fsubrs
popf
mov
and
or
push
sbb
iret
xchg
push
outsb
push
or
in
sbb
test
push
enter
enter
xchg
insb
mov
xor
push
lock
mov
mov
sub
cmpsl
cmpsb
add
pop
sbb
fadds
popa
pop
mov
and
sub
jmp
cmp
scas
jle
or
mov
pop
or
mov
add
jnp
iret
daa
faddp
and
movsl
sub
jnp
add
mov
xor
or
cltd
data16
stos
cmp
adc
jecxz
xor
and
test
inc
icebp
arpl
xchg
test
jns
jo
adc
frstpm(287
pop
and
ja
ja
jo
or
out
push
sbb
lahf
in
xchg
call
push
sbb
fwait
test
rorl
adc
movsb
in
mov
into
dec
xchg
test
mov
xlat
cmp
test
and
push
stc
cmp
dec
into
in
jne
out
xor
cmpb
sbb
mov
cmpsl
in
jbe
pop
std
sbb
cld
gs
dec
pop
js
andb
stos
xor
add
or
and
loope
mov
fdivl
mov
icebp
gs
and
test
add
lock
or
cltd
cli
mov
xchg
pop
xor
test
rcll
mov
jg
push
insl
mov
push
mulb
jno
les
fldl
rorl
aas
mov
pop
test
ds
jl
xchg
aas
cld
lock
jg
cmpsl
mov
lods
ljmp
test
xor
and
mov
jne
xor
daa
movsl
cs
lds
add
pop
out
sbb
and
rorl
xor
mov
add
mov
lock
loope
and
lret
lock
scas
cmpsb
push
rol
lret
movsb
je
push
and
sarb
gs
lret
fs
rolb
cmp
cmp
loop
addl
sub
imul
js
sarb
xchg
dec
fcmovu
add
cs
xchg
and
add
loope
jl
aam
pop
inc
push
pop
lods
sar
das
inc
pushf
lods
insb
jae
add
fimull
adc
jle
mov
std
imul
mov
or
cmp
push
xor
aam
jge
push
popf
stc
push
lret
jns
lcall
insb
dec
pusha
lods
pop
pop
std
cmp
dec
xlat
or
icebp
in
and
pop
popf
pop
push
and
sbb
test
push
cmp
mov
popa
mov
cmpl
push
xchg
fstps
pop
pusha
sbb
stos
lods
cmpsb
mov
sbb
jp
negb
js
lods
push
movsb
dec
jbe
and
mov
cli
xchg
testb
push
jno
dec
imul
adc
mov
pushf
das
cltd
mov
inc
mov
stos
adc
add
fisttpl
mov
fdivrl
addr16
shll
test
push
inc
add
xchg
imul
out
and
sbb
push
stos
mov
out
pop
mov
mov
and
cmpsl
call
and
push
pop
xchg
mov
pusha
mov
shlb
inc
icebp
xchg
in
in
mov
jno
cmp
out
and
xchg
bound
ja
dec
leave
lret
xchg
cmp
xor
add
lods
int
inc
aam
leave
repz
inc
outsb
push
inc
gs
clc
cs
or
repz
mov
mov
loope
cmp
test
flds
cmc
mov
push
lock
inc
or
dec
ljmp
pop
stc
jb
pop
pop
or
push
in
call
mov
or
xchg
xor
jns
pop
pop
insl
dec
icebp
jp
movsb
mov
es
cmpsb
ljmp
dec
loop
in
jle
xchg
clc
mov
adc
sbb
and
roll
imul
mov
jmp
shll
mov
add
inc
ret
mov
or
orb
add
xor
mov
test
lahf
stc
pop
jp
popa
xor
jnp
vpcmpeqb
movsb
sub
lret
sbbb
inc
fcompl
dec
mov
pop
jne
push
mov
pop
por
lcall
scas
push
js
popf
leave
pushf
test
mov
stos
or
shrb
nop
xor
ljmp
sbb
imul
inc
add
jne
stc
mov
cmpsl
repz
mov
push
fdivrs
stos
mov
xor
xchg
cltd
dec
inc
lret
stos
fs
inc
rclb
addl
andl
and
adc
fcoms
mov
adc
repnz
sbb
mov
jno
dec
mov
sahf
ss
adc
test
jae
fimull
mov
bound
pop
mov
decl
sti
in
loope
jno
pop
fmuls
xchg
popa
lds
pushf
pop
cli
bound
cmp
inc
lods
or
rcl
cltd
cmp
ds
adcl
shr
in
sbb
cmpsl
push
mov
int3
pop
and
adc
rclb
je
call
push
into
popf
mov
xchg
test
pushf
push
cmp
popa
and
cmp
or
repz
push
push
pop
mov
jne
pop
enter
jge
out
outsb
call
xchg
mov
leave
imul
outsb
adc
jle
mov
ds
loope
push
or
jb
loope
sub
jmp
add
mov
je
pop
dec
stc
sti
or
jae
lds
lret
adc
mov
aas
ror
xchg
shlb
jmp
fcoms
mov
out
fsubrl
mov
sbb
leave
push
jne
add
and
cwtl
test
stc
and
arpl
xor
lret
gs
xchg
mov
sbb
stos
je
mov
ficoml
cmp
aas
adcb
lea
ret
xchg
inc
push
jno
or
sbb
cmp
cmpsb
lea
xor
mov
xchg
mov
xor
daa
dec
repz
dec
or
push
loope
pop
repz
mov
adc
es
push
pinsrw
adc
lret
push
ficompl
aas
add
add
push
dec
gs
fsubrs
cmp
jg
mov
aam
fistpll
cmp
push
aam
sbb
mov
add
dec
sbb
lods
pop
std
xchg
pop
mov
addl
mov
jmp
rcrl
cli
pop
jmp
faddl
mov
inc
pop
repz
mov
and
mov
jg
dec
xchg
inc
int
loopne
xchg
leave
mov
sub
push
mov
loopne
in
pusha
jb
sbb
daa
fisttpll
jbe
aaa
sarb
pop
jae
or
and
mov
fisttpll
pop
loope
jne
test
mov
repz
stos
cltd
and
push
push
insl
gs
stos
call
ds
lock
xchg
fucomp
gs
mov
loop
popf
mov
repz
ret
jae
inc
jno
cmp
push
xchg
sbb
dec
pushf
movsl
push
imul
mov
lock
push
hlt
push
sar
sub
jmp
push
xchg
jmp
mov
dec
cmp
pop
mov
xor
xchg
sub
dec
xor
gs
jo
aad
clc
push
adc
daa
pop
jnp
ret
movsl
pop
xchg
movsl
cltd
add
ret
stc
pusha
stc
mov
lods
sub
imul
leave
js
push
pushl
setp
push
or
pop
jb
movb
mov
std
xchg
mov
leave
jp
insl
pop
pop
jns
xchg
inc
mov
icebp
sahf
push
inc
sub
dec
cmp
cmp
xchg
fwait
cs
fcmovnb
xchg
mov
lds
mov
xchg
shll
cli
mov
shll
dec
out
fmul
sbb
gs
data16
fnstenv
jp
outsl
pop
insl
into
ret
test
sbb
fsubr
repz
adc
sbb
jle
es
fnstenv
test
mov
xor
xor
and
es
lock
mov
push
rol
das
and
jecxz
dec
movsl
aas
push
in
cmp
and
push
and
mov
stc
mov
lods
xor
sub
mov
rorl
push
cmc
ficoml
dec
mov
psllq
loopne
and
repnz
popa
dec
push
xor
pop
add
call
jge
pusha
cmp
hlt
inc
and
out
and
dec
mov
mov
mov
aad
pop
movsl
sar
push
add
mov
push
mov
jnp
or
repnz
into
mov
int3
mov
sub
jne
sbb
jbe
add
and
lcall
push
ret
js
mov
push
adc
sahf
mov
stc
sub
pop
into
in
inc
sbbb
xor
cmp
jg
dec
std
jl
scas
fs
mov
rorb
pop
adc
jl
aas
out
shll
pushf
xchg
in
adc
arpl
mov
aas
test
pop
std
mov
mov
dec
and
cld
lcall
rolb
dec
xchg
pusha
js
iret
push
jb
pop
sub
xchg
aas
aaa
xchg
mov
and
icebp
mov
cmp
sbb
adc
jg
fidivrs
rcrl
mov
and
lock
fcompl
push
inc
jns
das
int
test
mov
fistl
and
pop
pop
xchg
inc
sti
pop
fwait
movsb
cmpb
mov
jmp
and
in
push
sbb
fnstcw
mov
daa
sbb
mov
pop
add
mov
mov
dec
push
pop
xlat
sub
sbb
cmp
movsb
xchg
mov
lock
xchg
sub
xchg
mov
imul
adc
shrb
xchg
scas
shrl
jmp
popf
ds
xlat
outsl
cmp
ss
pop
repnz
daa
push
ss
jl
cmp
dec
cld
xchg
lcall
stc
mov
dec
xchg
push
movsb
call
mov
or
xor
mov
xor
js
mov
rcll
outsb
xchg
hlt
in
and
imulb
xchg
mov
hlt
aas
insb
icebp
clc
outsl
xchg
jp
mov
je
mov
mov
sbb
cmp
push
mov
mov
call
cmp
cmp
mov
pslld
push
sub
cld
push
mov
out
mov
pop
cmpsl
shlb
es
test
fistpll
push
push
stc
mov
and
out
movsl
fwait
leave
sbb
mov
pushf
insl
pop
inc
mov
mov
ficomps
add
cmp
idivb
dec
aas
jnp
xlat
fcmovnu
adc
ss
xchg
in
push
sub
repnz
jb
or
jge
ds
mov
push
std
sub
es
jb
int3
popa
jnp
inc
xchg
rcll
call
idiv
or
jge
es
gs
mov
push
bnd
stos
adc
sub
push
jnp
xor
dec
in
sub
and
xchg
sbb
push
popa
cmp
jbe
aaa
lret
and
iret
bound
pop
test
cld
jae
fsubl
enter
push
mov
cld
and
jno
mov
mov
test
cmp
mov
fstpl
stos
in
je
fs
mov
lret
jae
adc
cmp
jne
push
adc
xor
frstor
push
xor
mov
rolb
mov
addr16
out
not
cli
xchg
pop
push
mov
imul
push
lahf
and
call
inc
add
cmp
imul
mov
add
sbb
sti
jbe
ret
push
ret
add
lahf
jg
fcmovb
sub
cmpl
repz
cmp
mov
lods
mov
dec
lea
cwtl
jae
mov
nop
mov
mov
mov
popa
mov
adc
push
cmpl
fisttps
punpckhdq
push
mov
test
xor
test
ljmp
or
mov
add
cli
repz
push
cmp
in
xchg
std
cwtl
mov
dec
adc
mov
icebp
or
adc
mov
ljmp
movsb
and
dec
js
add
andl
shrl
insb
jae
fwait
movsl
aaa
ljmp
loopne
rol
arpl
rolb
dec
pop
addr16
call
lods
jnp
push
movsb
inc
mov
stos
adc
sbb
mov
inc
data16
dec
stos
mov
jb
mov
mov
int
data16
loop
jno
pop
cmc
push
lret
inc
push
and
sahf
xchg
test
rcrb
enter
mov
out
out
mov
in
loopne
add
cwtl
aad
pop
push
fwait
or
dec
cmp
int3
adc
pop
int3
pop
mov
xor
sub
repnz
leave
and
shll
iret
fdivr
ds
inc
ret
xorb
fs
movsb
psubw
push
mov
jl
sub
fsubs
jbe
dec
loope
xchg
dec
popa
inc
std
movsl
pushf
notb
adc
ret
stc
mov
pop
mov
push
jno
and
jle
insl
add
push
push
call
outsl
cmp
fwait
enter
cmp
ficomps
jmp
mov
aas
imul
cmp
dec
or
jecxz
pop
dec
int3
hlt
lcall
or
stos
push
stos
cli
hlt
add
in
push
fdivl
stos
call
insb
cwtl
push
push
in
rol
jnp
cmp
movsb
mov
xchg
outsl
popf
into
xor
dec
fmulp
lret
and
cmpsl
aaa
movsb
mov
das
xchg
shl
fadds
out
sbb
lock
iret
shr
mov
lret
and
or
loope
leave
sub
add
adc
repnz
insb
push
sub
aam
fmuls
js
xchg
push
rcll
test
bound
xchg
xchg
or
cmp
mov
pop
imul
xlat
jnp
repnz
hlt
rcrl
add
call
push
add
sbb
push
pop
test
ds
inc
sub
mov
mov
data16
add
pop
fnsave
ja
jp
jge
cli
mov
add
cmpsl
clc
adc
popf
sti
push
add
in
mov
jae
mov
pop
or
xchg
push
mov
xchg
jne
mov
push
std
rclb
mov
mov
outsl
mov
lahf
fstpt
stos
fildll
movsb
into
lret
cmp
push
subl
repnz
xor
mov
sbb
mov
stc
stc
loop
stc
out
fwait
push
jg
hlt
or
inc
xor
push
dec
ds
repnz
pop
jno,pn
std
outsb
imul
push
stc
mov
sub
outsl
mov
js
push
lds
les
cmp
mov
pushf
push
aad
fstps
dec
stc
in
shrl
shl
pop
xlat
enter
outsb
mov
stc
inc
adc
adc
nop
scas
jns
dec
and
mov
mov
dec
gs
hlt
call
add
xor
mov
mov
stos
jge
lahf
mov
jmp
mov
sbb
cmc
xchg
testb
in
aas
loop
jne
hlt
sahf
pop
rclb
pop
lea
mov
scas
int
enter
add
mov
pop
jg
popa
or
out
inc
sbb
in
sub
add
insl
push
pushf
jg
sbb
in
mov
sub
imul
shlb
lds
fimuls
sahf
scas
subb
xor
dec
stc
inc
cwtl
mov
inc
xchg
or
dec
mov
sub
out
pop
jge
jmp
mov
jp
ss
mov
outsb
inc
mov
push
jmp
and
fdivs
in
aad
pop
nop
jg
push
lods
inc
in
jmp
insb
push
xor
or
pop
and
and
test
leave
jl
setbe
loop
pop
mov
xorb
mov
xchg
orb
jo
xor
gs
movsl
mov
hlt
sbb
lock
lahf
leave
cmp
lds
fnsave
and
fwait
dec
xchg
outsb
pop
mov
shrb
rol
sbb
rcll
movsl
incl
ret
les
or
rcll
mov
lods
loopne
pop
pusha
dec
dec
int
jb
lea
imul
xor
sub
push
sbb
xor
cmpl
mov
gs
cmpsb
dec
push
bnd
scas
jne
mov
add
out
shlb
movups
rcrl
xor
mov
and
dec
test
mov
xchg
js
cmp
xchg
stos
xchg
aad
aam
or
pop
hlt
movb
push
mov
lea
aas
pushf
inc
cmp
sbb
cwtl
fs
dec
inc
or
test
aas
mov
aas
shl
mov
lea
push
mov
mov
push
jns
daa
xchg
push
mov
adc
dec
adc
mov
test
popa
sub
jecxz
shlb
push
push
popf
lret
push
pop
jo
xor
aam
lcall
mov
cmp
sbb
sahf
mov
pushf
sbb
and
or
arpl
jnp
sbb
add
sub
fwait
movsb
jp
mov
fdivs
pop
mov
iret
push
jge
loopne
cmp
dec
pushf
cmpsl
sub
pop
or
inc
test
add
orl
data16
mov
movsl
scas
add
enter
or
rol
and
shr
lods
mov
inc
clc
js
inc
aas
out
dec
sub
push
adc
nop
push
xor
frstor
and
cmpsl
dec
mov
push
aaa
hlt
or
xor
or
dec
loope
ret
xchg
xor
and
jnp
test
stc
xchg
gs
movl
xchg
mov
pop
clc
xchg
adc
mov
test
jns
pop
jae
popa
cmpsb
bound
jbe
push
pop
lcall
xchg
or
js
aam
fwait
int
rorb
cmp
popa
clc
sbb
ljmp
repz
adc
pushf
icebp
xchg
jb
mov
cmp
pop
fiaddl
mov
sub
cmp
mov
sbb
and
cs
sub
iret
sbb
push
jecxz
adc
sarl
gs
stos
fdivrs
divl
fnstsw
adc
jo
inc
in
loopne
mov
xchg
xlat
stos
mov
adc
cmpsl
out
cmpsb
movb
fldcw
pop
adc
adc
pop
sbb
gs
aas
pusha
inc
stos
addr16
pop
sti
jae
hlt
or
outsl
inc
dec
pop
xchg
stos
lahf
fs
or
lcall
fwait
mov
ljmp
pop
hlt
sbb
fldcw
push
jae
lods
mov
iret
xchg
xchg
notb
dec
gs
dec
pop
repz
xchg
movsl
orl
adc
int3
push
imul
fisubrl
jp
xor
outsb
movsb
daa
fs
jne
sub
nop
and
xor
pop
mov
lods
jbe
aas
jg
or
and
scas
mov
gs
lock
paddusw
out
push
int3
dec
xor
scas
mov
mov
enter
push
test
cmp
arpl
inc
sarb
inc
push
add
rcrl
sbb
jmp
testb
pop
int3
movsb
or
inc
stos
sbb
mov
mov
aaa
cwtl
inc
sbb
dec
inc
sub
lods
xchg
pop
xchg
mov
aas
push
fdivr
add
xchg
dec
mov
cmp
ss
and
mov
movsl
adc
or
cmp
push
mov
inc
adc
add
mov
nop
dec
pop
push
scas
jnp
or
into
push
or
push
iret
pop
jle
inc
loopne
pop
pop
mov
gs
or
xchg
and
stc
jae
push
in
sbb
dec
and
cltd
movsl
in
adc
add
std
xchg
add
inc
adc
out
xchg
pop
push
mov
shlb
pop
loope
frstor
sbb
jle
dec
movsb
test
xor
jns
sub
push
sub
and
jno
push
cld
sub
adc
sub
mov
sub
andl
sar
mov
inc
loop
and
inc
stos
and
adcl
push
mov
pop
cmp
xor
push
pop
jo
adc
mov
lods
loopne
pop
sarb
xlat
aaa
jne
push
sbb
adc
rorb
scas
cmpsb
imul
add
jb
mov
aaa
push
sbb
scas
in
cmp
jg
pop
loope
and
int
outsb
fbld
mov
stc
clc
repz
cld
addr16
xlat
mov
or
testb
ret
xorb
scas
jno
dec
test
xor
sbb
pop
aaa
mov
loopne
inc
jnp
gs
mov
pop
mov
mov
dec
xchg
pop
mov
nop
aaa
adc
lret
test
outsl
insb
inc
jo
mov
inc
rorb
jo
push
aam
in
cs
sub
ja
xchg
mov
fistpll
addb
fwait
or
xchg
mov
js
test
jnp
xchg
into
mov
xorb
sbb
int
cmpsl
fmull
mov
clc
adc
daa
popa
or
push
or
pop
adc
lret
repnz
mov
jns
or
add
mov
in
push
imul
jnp
insb
andb
addr16
into
ja
inc
loope
aad
add
repz
or
leave
add
outsb
inc
icebp
cmp
lods
adc
outsl
in
dec
bound
xchg
sub
inc
lods
cwtl
gs
pop
jne
xchg
xor
scas
call
insl
aam
mov
or
cmpsb
pop
mov
dec
aaa
mov
adc
lret
xlat
jle
flds
push
fiadds
sub
dec
adc
stos
test
adc
mov
or
sarb
add
pop
mov
fsubs
cld
mov
lcall
jno
adcb
test
movsb
test
add
dec
mov
push
mov
les
shlb
testb
inc
jmp
cmp
adc
xchg
pop
lret
mov
adc
fstl
push
sar
in
aaa
lods
cli
ljmp
hlt
sti
into
sbb
xchg
adc
jne
or
repz
adc
mov
inc
jns
jns
add
rorl
xlat
sub
aas
mov
push
mov
and
pop
mov
jo
xor
and
inc
imul
mov
mov
cwtl
cmc
pop
shlb
loope
mov
cld
push
xchg
js
cmpb
push
fmull
xchg
mov
aam
sub
xor
dec
and
or
or
sub
aad
mov
xor
cmp
jge
xor
cmp
cmp
shlb
les
inc
ja
xchg
push
push
add
jp
ljmp
rorb
std
test
pusha
cmp
mov
les
stos
adc
movsb
inc
lcall
sub
mov
cmp
add
mov
sbb
in
mov
pop
stos
or
ja
cmc
ret
xchg
mov
mov
push
dec
loope
ds
aad
outsb
mov
gs
shll
xor
les
mov
shlb
cwtl
mov
popf
mov
hlt
cltd
ret
imul
or
scas
xor
mov
mov
mov
loopne
shlb
xchg
jmp
xor
fldt
insb
ss
test
sub
outsl
inc
insl
push
mov
mov
mov
rorl
aad
lds
jns
inc
pop
jne
aam
cltd
pusha
movsl
mov
ss
push
xchg
call
aad
mov
mulb
xchg
dec
pusha
pushf
shrb
popf
cmp
sub
pop
scas
jae
gs
cmpsl
sbb
mov
dec
add
cmp
mov
push
xchg
notb
pop
xchg
lods
add
dec
and
cltd
or
data16
scas
push
ja
inc
ja
sub
mov
xchg
in
pop
push
je
sti
pop
pushf
sar
or
stc
sbb
push
loop
xor
pop
cmp
test
outsb
ss
jecxz
movsb
mov
push
pushf
add
gs
dec
scas
sar
bound
jge
mov
es
xor
ret
mov
and
arpl
fwait
xchg
les
cs
ljmp
adc
inc
sbb
sti
cli
test
or
jno
mov
and
sbb
mov
movsb
jl
cmpsl
jmp
aam
sti
mov
lods
test
ret
ret
call
inc
mov
inc
in
inc
cmp
push
xor
stc
fs
xchg
pop
mov
xchg
mov
fcmove
sbb
lcall
push
push
aad
push
jno
fwait
rclb
sahf
test
sbb
shll
mov
icebp
mov
jo
dec
hlt
das
mov
orl
cmp
pop
jge
icebp
outsl
cmp
cmc
mov
mov
sahf
jbe
pop
repz
add
mov
hlt
adc
test
sub
rol
mov
inc
sub
test
rcr
dec
cmp
arpl
or
fldcw
test
sbb
inc
push
pop
xchg
iret
movsl
sahf
mov
jae
sub
leave
mov
mov
mov
cwtl
pop
test
sbbl
mull
test
inc
xor
add
sbb
add
out
insb
out
pop
std
mov
xchg
add
enter
stos
xchg
jae
mov
int
in
in
call
mov
jnp
hlt
les
jno
inc
add
into
jne
decb
adc
rcl
and
out
mov
push
mov
mov
xor
insl
or
dec
mov
jecxz
out
mov
mov
xchg
pusha
inc
cltd
lods
in
adc
sahf
or
out
sbb
setge
imul
mov
gs
pusha
std
ret
stc
aam
and
mov
push
xchg
jo
hlt
cli
xchg
hlt
lods
mov
jbe
aam
repnz
loope
xlat
jge
iret
stos
sbb
nop
loop
and
or
aad
and
pcmpgtd
out
xlat
rcrl
mov
jecxz
push
jne
inc
adc
les
pop
mov
imul
rcl
cmp
adc
test
push
mov
imul
xchg
addl
imul
jle
jne
jo
cmpsb
dec
addr16
dec
popf
mov
pop
movsb
and
mov
inc
mov
mov
mov
gs
cmpl
pusha
cmp
jae
fistl
mov
jecxz
fxch
popw
dec
xchg
jle
or
xchg
lods
sahf
mul
mov
adc
sub
das
mov
out
fsubr
mov
mov
sub
xor
xor
sti
sahf
bnd
cmc
call
mov
subl
xor
rcrb
aas
das
out
fs
lods
push
pushf
pop
xchg
jo
gs
mov
scas
gs
add
sub
int
cmp
mov
and
cmp
push
jo
mov
adc
xor
jo
jge
cwtl
mov
xlat
cmp
test
inc
sub
icebp
adc
push
sub
lods
fs
sbbl
xchg
xchg
dec
repz
xchg
leave
test
out
mov
cmp
stos
fmul
int3
mov
jecxz
nop
lret
adc
push
add
pandn
fisttps
ret
pop
stc
mov
daa
lods
orl
mov
dec
mov
ljmp
and
test
jo
jne
sbb
test
dec
mov
int3
or
mov
pop
sub
cmp
clc
sbb
jge
mov
sub
pop
jp
dec
mov
or
add
push
fisubl
test
stc
fcom
shrl
addb
adc
jmp
adc
fnstsw
decb
clc
imul
fmuls
movsl
inc
adc
popf
xchg
ret
out
stc
es
add
cmp
movsl
shr
xchg
push
notl
pop
jno
xchg
push
mov
cltd
jle
aad
cmpxchg
bound
lock
push
push
sub
mov
push
xchg
clc
mov
lds
cmp
addr16
adc
in
or
lods
inc
aam
inc
xor
repz
cmp
cmp
fldenv
ret
repnz
mov
dec
in
dec
fwait
les
cmpsb
jge
add
mov
cmc
xchg
mov
xor
es
rcll
push
adc
inc
orb
out
push
dec
shrl
or
inc
mov
sbb
cs
imul
push
xchg
mov
jae
imul
leave
jg
adc
cltd
inc
popa
mov
push
and
mov
gs
mov
subl
ljmp
clc
loop
sbb
jmp
mov
pop
mov
add
sbb
add
fisttpll
je
jle
cld
mov
or
push
mov
xchg
mov
imul
lods
sbb
adc
cmpb
jp
dec
and
std
sub
outsb
push
jbe
fistl
in
std
negb
cmc
mov
lods
xchg
stc
dec
and
frstor
aad
xor
xchg
xor
mov
xchg
mov
shlb
test
das
outsb
push
je
arpl
ljmp
fcoms
cmp
pop
fnstsw
inc
addb
aam
jb
fldl
push
add
jg
clc
subl
jg
pop
pop
in
add
mov
movsl
in
sub
enter
mov
popa
out
push
inc
cmovnp
pop
aaa
push
ja
xor
dec
loope
or
adc
mov
jg
mov
mov
imul
jle
dec
push
cmp
xchg
mov
sar
and
aad
cmp
pop
and
push
pop
std
mov
lods
inc
mov
aad
add
pop
mov
scas
mov
movsl
std
rclb
xor
in
mov
test
cmpsl
inc
out
iret
das
xchg
jl
xchg
sub
pop
shlb
sbbl
dec
lahf
dec
mov
jns
adc
loope
int
orb
jo
lret
cmp
add
and
mov
call
xor
jg
push
or
adc
shl
je
in
mov
inc
cli
icebp
lds
or
hlt
xor
nop
or
mov
ja
add
leave
sahf
sysexit
pop
mov
jns
dec
outsb
scas
gs
push
cmpsl
jno
mov
test
and
stc
pop
jl
mov
dec
jle
xor
cmpsl
addl
xchg
xchg
mov
rorl
adc
cwtl
or
lcall
dec
pusha
jmp
dec
adc
daa
adc
pusha
aaa
jae
or
or
popa
inc
pusha
ret
movsl
or
imul
test
fs
or
jp
dec
or
fdivl
fucomi
mov
les
loope
and
inc
dec
mov
adc
std
lcall
inc
loop
mov
mov
hlt
xor
les
aaa
pop
inc
sub
xchg
data16
pop
insb
jb
mov
fistl
sbbb
dec
fidivl
jge
call
xorl
cld
lds
jl
in
icebp
jl
cmp
adc
cmp
repz
sub
in
and
mov
pop
repnz
or
jbe
neg
push
inc
stc
push
fdivp
dec
sub
imul
jge
cmp
xchg
sub
xor
das
fisttps
jbe
std
lods
gs
add
ficoms
xchg
into
ja
fdivrs
push
xchg
mov
xchg
jge
mov
aad
in
ror
inc
push
or
mov
jmp
sti
mov
jns
jg,pn
xchg
es
bound
movb
push
mov
add
xchg
insb
mov
aad
mov
mov
add
xchg
out
mov
fists
xor
mov
xchg
ljmp
xchg
push
xor
addr16
std
xor
popf
dec
lahf
push
out
adcl
lahf
or
sub
pop
dec
fidivl
decb
sbb
adc
xor
jb
cltd
jmp
arpl
dec
int
adc
fs
xor
dec
ret
bound
insl
stos
insb
sub
out
jecxz
adc
pop
cmpsl
aas
mov
pop
loopne
loop
or
dec
inc
jle
sbb
les
lods
jmp
jle
icebp
adc
imul
adc
and
sub
ds
pop
jg
xor
movsl
stc
popf
sub
pushf
nop
cltd
jnp
sbb
dec
test
aaa
vmwrite
sbb
sub
xchg
push
sub
xchg
mov
and
imul
data16
std
jl
xchg
mov
adc
adc
sbb
stos
push
insl
push
ffree
dec
push
mov
das
pop
mov
aad
cli
out
jecxz
jbe
loop
sbb
or
sti
and
fimull
frstor
mov
scas
pop
dec
adc
fimull
inc
mov
or
lahf
push
dec
out
sbb
lods
and
cmp
adc
jne
sbb
mov
imul
xchg
sti
push
das
nop
sar
xchg
add
loop
xor
sbb
pop
jg
out
ret
je
xchg
leave
sahf
out
push
mov
outsb
adc
sbb
js
jmp
add
cs
adc
and
daa
stos
popa
sarl
and
sbb
fwait
andb
cli
cmc
or
sub
pop
cwtl
cmc
lea
mov
dec
jns
xchg
aam
mov
dec
push
outsl
fwait
pop
js
sbb
adc
add
sbb
jg
dec
jae
mov
or
sti
mov
lret
pop
jae
sub
int3
xchg
stos
add
inc
mov
aaa
pusha
push
fcmovbe
mov
xor
clc
adc
xchg
and
arpl
js
lods
jb
cmp
aam
and
xor
add
mov
roll
or
cltd
and
rcr
push
out
loop
mov
int
cltd
push
scas
lock
aas
xchg
mov
push
mov
mov
jle
test
dec
loope
divb
int
mov
fisttps
bound
or
test
cmp
popf
cmp
inc
mov
lea
xor
xchg
lahf
xor
lret
cmc
test
cmp
push
jl
jecxz
popa
lea
add
imul
sbb
jecxz
xor
sbb
les
icebp
ss
xchg
aam
pop
ja
pop
inc
test
dec
arpl
and
in
or
lahf
or
sub
mov
xor
xchg
movsl
cmp
mov
in
cmp
loope
dec
rclb
addr16
test
movsl
imul
adc
mov
dec
push
pop
mov
int
mov
icebp
js
add
cmpsb
jo
xchg
fwait
and
sbb
mov
pop
cmp
mov
call
out
loopne
subb
xchg
or
leave
aad
xchg
test
mov
xor
cmc
xchg
xlat
or
cmp
cltd
je
lods
sbb
inc
jge
mov
xchg
imul
fwait
out
mov
test
sbb
mov
sbb
inc
lahf
xor
mov
jb
cmp
in
es
ljmp
mov
mov
push
inc
mov
std
repz
imul
fidivrs
jg
lret
jp
sbb
mov
or
test
shl
and
sub
pop
ficompl
adc
jno
jp
add
cmp
outsb
or
je
adc
mov
loopne
bound
or
lcall
rolb
xlat
loopne
jo
stos
mov
cmp
mov
out
sbb
into
push
rcrl
les
in
cld
aas
fsubrs
fisttps
push
mov
jo
mov
and
je
push
lret
xchg
adcb
xchg
sub
inc
int3
ljmp
sub
int
cwtl
pop
push
rcr
pop
sbb
fbstp
test
pop
push
pop
xor
or
sbb
lea
iret
mov
lods
mov
movb
pop
int
xor
lcall
push
push
pop
xchg
pop
test
insl
pop
pop
arpl
sbb
mov
loope
dec
pop
popf
jle
clc
rclb
mulb
test
rcll
cmpsb
sbb
mov
pop
mov
mov
mov
iret
and
fsts
push
data16
jns
xchg
test
jnp
stos
jp
jmp
pop
fisttps
push
lcall
leave
faddl
pop
push
sub
sub
dec
shld
add
jns
aas
popl
mov
inc
movsl
jns
lds
pop
mov
lret
xor
clc
dec
out
cmp
stc
in
ja
push
pop
int3
and
jg
ss
mov
repz
pop
or
icebp
fisttpl
xchg
jle
fstp
fwait
inc
cltd
push
xchg
push
inc
push
lods
mov
mov
bndldx
loope
push
cwtl
mov
cmp
sahf
rcll
inc
mov
js
push
inc
loope
arpl
mov
lods
les
or
sub
lret
xor
inc
jmp
ja
push
pop
jbe
das
and
adcb
mov
mov
inc
scas
jl
insb
insl
sub
pop
lds
push
adc
dec
mov
xlat
stc
adcb
mov
outsl
ficompl
push
in
sbb
imul
jmp
lds
adc
add
test
push
adc
adc
lods
das
lahf
jbe
js
aaa
mov
pop
push
mov
imul
xchg
xchg
push
xor
and
adc
pop
leave
sbb
xlat
testb
dec
mov
jp
pusha
dec
out
lods
es
lret
in
dec
fisttpl
fwait
sub
iret
pop
nop
adc
jl
sahf
sbb
mov
push
lock
mov
in
andb
pop
icebp
jecxz
cmp
movsl
imul
or
inc
or
add
aas
jg
lods
xchg
jae
sahf
les
iret
inc
xor
ja
xchg
mov
mov
in
cmp
sahf
jb
popa
stc
mov
leave
push
inc
pop
push
jmp
mov
insb
mov
inc
imul
xor
insb
out
js
nop
xchg
mov
stos
sti
mov
jo
gs
jmp
or
int
in
sbb
dec
in
lea
lock
push
xchg
pop
jnp
sti
sbb
loopne
pop
mov
nop
jno
adc
xorb
repz
pop
cmp
add
pop
add
je
cmp
adc
mov
mov
lds
mov
push
cld
and
scas
cli
je,pn
add
ja
mov
test
leave
mov
inc
call
and
and
fsubl
in
xlat
test
add
adc
or
addr16
stos
push
dec
or
nop
out
jl
fldl
and
sbb
cmpsb
int3
cltd
jp
incb
pop
mov
stc
test
xlat
push
pushf
test
cmp
rcr
mov
sbb
jmp
stos
inc
dec
dec
aas
cmp
xor
filds
lock
cs
jmp
sbb
sti
ljmp
idivb
decb
adc
push
jae
adc
repnz
cld
pop
mov
repnz
ds
dec
pop
stos
movsb
out
fcompl
xchg
inc
dec
and
icebp
add
fcmovnb
in
out
push
jmp
push
scas
jl
add
xor
lds
pop
xchg
out
push
inc
outsl
or
sub
mov
or
xor
xchg
nop
mov
mov
jle
xor
jg
mov
jge
and
jmp
cmp
xor
mov
mov
pop
jge
rcrb
aas
repz
in
out
pop
push
pop
add
add
sub
pop
pop
push
movsb
xor
push
adc
out
mov
aad
pop
imul
sbb
jg
and
pop
and
lret
lock
int
add
add
xlat
ljmp
mov
es
repnz
or
lret
or
idivl
pop
xor
adc
ret
inc
mov
pop
fs
movsb
jp
rcll
ret
outsb
lea
push
and
dec
shll
test
push
or
and
adc
call
xorb
imul
jmp
sbb
mov
out
cmp
fidivrs
jb
int
sahf
dec
roll
jne
mov
add
test
aas
sbb
sar
push
push
sub
out
je
dec
pop
into
and
iret
stos
sub
cwtl
mov
dec
nop
or
push
imull
insb
sub
sbb
dec
or
scas
wrmsr
and
cmc
adc
and
push
sub
aad
neg
shr
sub
push
adc
shrd
addl
mov
inc
pushf
les
mov
cmp
xor
stc
jg
pop
adc
and
stos
repz
mov
scas
fidivrs
cmp
jne
and
sbb
adc
clc
mov
add
sub
pushf
loop
mov
fistpl
ja
sbbb
cwtl
mov
mov
cmp
and
insb
sahf
and
push
outsb
xlat
push
stc
rcll
jp
fucomp
or
imul
jnp
pop
pop
outsb
jns
loop
setne
pop
sbb
les
adc
jne
xor
push
nop
lods
mov
test
mov
adc
iret
aas
inc
mov
xchg
lret
stos
mov
fcom
loope
bound
mov
xchg
push
sub
aam
sbb
out
pop
shll
lods
int
mov
mov
nop
sbb
adc
lret
cmp
test
jbe
pop
xchg
inc
sub
rorb
das
dec
ffreep
fwait
pop
jg
dec
adc
sub
push
and
addr16
mov
inc
outsl
loopne
adcb
pop
push
cmp
xlat
ret
cmp
lods
jecxz
popa
notb
test
mov
mov
idiv
outsb
sar
push
or
mov
xchg
adc
adc
xchg
xor
clc
sub
jb
imul
test
shll
sbb
outsl
xchg
call
in
pop
cltd
int3
xor
jl
adc
mov
enter
pop
mov
shl
rorl
jp
aam
ljmp
call
and
cmp
ret
sti
jb
mov
mov
dec
dec
addr16
push
push
fildll
pop
cs
sbb
mov
push
or
pop
stc
mov
test
ficomps
or
cmp
scas
shl
lea
mov
in
movsl
xchg
xchg
sbb
push
add
cmp
or
inc
stc
shll
popa
mov
mov
fldcw
mov
fdivrs
cmc
inc
std
test
imul
xchg
dec
daa
adc
inc
adc
hlt
mov
pop
lret
sarb
imul
into
pop
mov
push
cltd
in
fwait
mov
stos
xchg
mov
mov
fcmovnu
and
pusha
stos
test
xchg
daa
mov
xor
xor
movsl
test
jmp
mov
flds
dec
add
cmp
jae
or
nop
add
sub
aam
sbb
push
stos
and
jae
mov
cmovnp
mov
test
mov
adc
and
fcomp
push
dec
insb
popf
call
xor
cwtl
das
fsubrl
pop
shrl
sub
push
sbb
adc
out
inc
pop
cmp
shrl
mov
cmp
in
dec
jge
mov
xchg
popf
xor
test
mov
xchg
loope
test
xor
dec
test
outsl
sbb
das
push
popf
sbb
das
popa
mov
aam
dec
mov
cmc
iret
push
mov
mov
add
lock
xchg
sbb
push
test
inc
in
test
movsl
incl
xchg
mov
mov
pop
lock
notl
mov
pop
jno
xchg
xchg
in
in
jmp
mov
cmp
jbe
in
mov
add
sbb
add
adc
add
push
inc
aas
std
stos
mov
inc
fists
dec
pop
and
pop
mov
mov
dec
xor
mov
push
push
testb
daa
out
clc
mov
loope
fwait
xor
mov
inc
sub
imul
lods
mov
inc
rcrl
aas
sbb
cmpsl
insb
jp
jmp
mov
sahf
lcall
xchg
jge
mov
aaa
jmp
jb
add
sbb
paddq
sbb
cmovl
lcall
jno
push
jo
inc
ret
cmp
fiaddl
mov
add
sti
ljmp
pop
das
add
int
aaa
mov
push
push
fidivrs
mov
mov
and
cmpsl
cs
movsl
fnstenv
jmp
ljmp
inc
mov
stos
fiadds
dec
ret
dec
pop
and
mov
xor
fiaddl
push
xchg
xchg
je
mov
mov
push
cwtl
add
inc
outsl
mov
adc
cli
shr
into
popa
jae
ret
dec
xor
rcrl
in
dec
das
or
sbb
xlat
adc
cmp
jns
jp
inc
sarl
xchg
pusha
mov
inc
add
mov
adc
sbb
sub
sti
fdivrl
pop
mov
je
push
mov
stc
sub
sbb
adc
add
jne
cmp
and
popf
and
clc
push
fidivs
stos
sbb
aam
lods
push
cmp
fistpll
out
dec
pop
cmp
xchg
xor
dec
mov
sbb
xor
das
mov
push
mov
mov
lret
int
fcoml
xor
cltd
inc
je
pop
mov
xor
stos
gs
shll
ljmp
sub
cwtl
stc
pop
xor
lods
xor
stos
ljmp
cmp
stos
hlt
ret
xchg
or
lods
xor
mov
mov
pop
in
lret
push
xchg
bound
leave
rorb
out
jo
xchg
jae
pmovmskb
jge
test
jl
xchg
xor
pushfw
iret
cli
cltd
push
xor
ret
add
jp
lcall
mov
mov
xor
fwait
addb
outsl
and
call
lret
or
std
mov
and
pop
in
out
out
mov
ret
mov
mov
inc
mov
fistpl
rorl
popl
das
aas
test
enter
sbb
xchg
push
pop
int
pusha
sub
cltd
insb
pop
mov
and
sub
mov
and
mov
pop
fildl
pusha
mov
or
fisttps
sti
jo
int3
je
sbb
popa
sbbl
fwait
arpl
xchg
fnstsw
js
jmp
mov
push
cwtl
sbb
gs
and
int3
inc
leave
mov
cwtl
add
icebp
xchg
std
in
int3
mov
pusha
push
ds
aaa
inc
mov
sub
imul
inc
cmp
push
out
ljmp
dec
rolb
pop
in
sub
gs
mov
inc
insl
shrb
mov
call
add
pop
mov
push
sahf
lds
jne
andb
mov
arpl
dec
lea
mov
add
xchg
and
xchg
mov
mov
aas
les
add
inc
adc
shrb
sbb
mov
sti
mov
jl
xchg
jbe
dec
jo
addr16
or
jecxz
dec
inc
cmp
push
cld
popfw
repz
pop
or
push
pushf
add
aaa
mov
adc
or
dec
mov
movsb
mov
jmp
jmp
mov
cli
ljmp
xchg
mov
dec
ljmp
test
mov
ret
pop
push
xor
jp
mov
inc
mov
je
cmp
adc
push
add
enter
aas
mov
mov
bnd
xor
jmp
mov
inc
mov
je
mov
pop
aam
mov
xor
add
xchg
stos
jo
mov
cmp
jae
fcmovu
pop
addl
or
mov
loop
pop
xchg
mov
mov
pop
aam
aaa
push
sub
pusha
dec
les
popf
push
jp
ret
jle
mov
lea
xor
pop
pop
and
mov
out
icebp
sub
mov
sbb
out
movb
std
rcrl
pop
es
dec
mov
cmpsb
and
xchg
mov
outsb
cli
sub
adc
test
push
lret
pop
outsl
mov
lods
xchg
sti
repnz
push
mov
stos
jle
push
cmp
arpl
shl
mov
icebp
shll
jns
test
adc
adc
pop
pop
adc
push
dec
sti
ss
inc
jl
rcr
and
repnz
adc
dec
inc
rol
xchg
in
jae
and
mov
mov
inc
rclb
cs
sub
sbb
orb
dec
jne
les
pusha
test
mov
in
xor
mov
push
fstpt
out
adc
add
popf
add
movlps
mov
inc
cmp
incl
lahf
pop
in
std
pop
inc
outsl
jo
xchg
push
cwtl
or
mov
push
mov
push
loopne
adc
aam
pop
cmpsb
aas
adc
lahf
insl
jo
xor
or
inc
pop
loop
ljmp
adc
into
and
ljmp
and
call
mov
jecxz
sub
inc
inc
mov
xor
and
jno
add
mov
ss
dec
mov
inc
mov
cmp
and
push
mov
cltd
mov
mov
hlt
inc
out
push
jecxz
add
dec
mulb
adc
test
cli
jecxz
test
xchg
mov
xchg
xor
sub
lret
or
lea
cltd
les
enter
es
lods
loopne
mov
ret
adc
cmp
jg
pop
pop
mov
xor
mov
cmpb
lcall
shll
out
lods
out
sub
add
jb
push
cmp
adc
repnz
cmp
sub
jge
jne
popf
push
pop
or
in
pop
mov
mov
cmp
and
and
scas
and
aaa
test
mov
inc
lahf
pop
mov
cmp
sti
iret
out
pop
paddsb
pushf
sub
repz
mov
rcrl
xchg
stc
cmpsb
out
pop
pop
pop
bsr
cmpsb
iret
pop
pop
cmp
out
xor
outsb
xor
nop
popa
divb
out
xchg
cmp
pushf
loope
jbe
xchg
loope
sub
pushf
and
xor
push
jb
sarl
inc
jl,pn
push
out
dec
pop
mov
add
ss
jp
pop
dec
and
cmp
pop
aam
add
stos
cmpsb
jo
mov
ja
push
ds
push
jno
or
pop
iret
out
loop
sbb
mov
jne
popa
leave
pusha
clc
sub
inc
xchg
jbe
jnp
push
lret
lcall
pop
out
fmull
pop
sbb
add
add
or
pop
call
test
aad
sub
cmp
jp
mov
hlt
iret
jns
or
cmpl
ljmp
hlt
inc
repnz
cmc
sub
dec
test
jl
shll
retw
test
ja
rorl
test
imulb
iret
push
lods
fcomps
sub
fisttps
jnp
add
pop
mov
xor
ret
xchg
xor
mov
dec
mov
lea
je
and
and
aas
push
cmp
fstl
popa
mov
mov
jle
mov
stos
jo
xor
jmp
mov
into
push
sti
addr16
push
daa
icebp
scas
sbb
pop
rorl
insl
pop
sbb
outsl
addr16
adc
jne
jecxz
push
add
push
xor
push
inc
and
xchg
test
sbb
dec
loopne
xchg
jmp
or
sub
mov
das
andb
in
xchg
cmp
leave
sub
jnp
mov
clc
lret
xlat
gs
aas
push
xor
push
mov
xchg
xchg
outsl
fwait
push
cmc
fwait
pop
xchg
out
sbb
jbe
sbb
gs
push
jl
iret
xlat
fmull
iret
push
test
mov
js
mov
xchg
jmp
aam
movl
cli
push
inc
rcll
dec
dec
jbe
std
jmp
sub
loopne
cs
and
ret
subps
xlat
cmovg
lret
jnp
adc
pop
nop
jo,pt
or
sub
pop
ds
stos
xor
lcall
inc
movsb
cwtl
sub
mov
call
and
ret
fs
mov
bound
mov
into
mov
lods
adc
roll
and
fmulp
mov
out
mov
hlt
stos
jnp
sub
adc
hlt
scas
popa
stos
fldl
inc
push
movsb
iret
nop
and
call
aas
push
jg
jnp
insl
loopne
addr16
and
xlat
mov
push
mov
xchg
xlat
mov
inc
jecxz
jg
js
call
xchg
pop
xlat
shlb
jp
loopne
jnp
xor
mov
push
mov
scas
shll
call
pop
xor
jnp
pushf
dec
lods
out
movsb
leave
and
es
outsl
lret
fisubl
js
sbb
and
les
rol
xchg
push
stos
jae
aad
insl
mov
xor
pusha
push
lcall
jge
js
add
mov
scas
movsb
dec
cmp
out
adc
aas
dec
pop
or
or
sahf
call
das
xchg
or
sbb
adc
dec
test
mov
cmpxchg
rclb
fiadds
insb
mov
push
clc
mov
insb
lock
cmp
xchg
jl
push
mov
int3
xchg
cmp
bnd
jg
into
sbb
sbb
inc
fcoms
adc
movsb
add
jne
daa
pop
es
dec
fiaddl
insl
jo
dec
mov
add
pop
dec
cli
add
setbe
adc
dec
movsl
add
cmp
jne
rcll
or
jg
shlb
inc
leave
jo
xor
jl
or
jae
fldcw
sub
repz
lods
jl
sub
test
clc
xchg
push
add
pop
push
sti
in
sub
jl
mov
push
inc
rorl
push
stc
stc
lret
sbb
add
imul
adc
inc
sub
mov
add
and
mov
xor
enter
jecxz
outsb
in
rcr
loop
inc
pop
in
jmp
cmpsl
and
out
hlt
jg
icebp
pop
jge
xor
shll
hlt
call
sbb
cltd
cmp
imul
cmp
pop
fsubr
cwtl
ret
aaa
push
mov
cmp
mov
and
lea
pop
push
movsl
dec
dec
or
scas
jae
sub
scas
push
inc
es
xlat
add
stos
cmp
cmpsl
sti
and
mov
dec
dec
cld
mov
dec
ret
lods
xor
cmc
cmp
mov
rcrl
cmpsl
arpl
jne
sub
mov
outsb
jb
cmp
rclb
scas
push
add
mov
icebp
mov
lea
aas
not
push
xchg
addb
mov
int
inc
je
mov
jl
aas
rcrb
dec
adc
rcll
in
mov
roll
addr16
es
ja
cltd
outsb
mov
popf
push
push
push
jno
sub
xchg
push
jbe
push
stos
add
jle
and
pop
lret
cmpsb
rcrb
popl
aam
adc
shll
pop
in
ss
mov
add
xchg
mov
pop
repz
mov
test
inc
lods
push
mov
xor
das
cld
mov
lds
add
push
dec
clc
fdivs
sub
xor
mov
pop
into
gs
mov
jge
repnz
ret
or
inc
push
mov
rcll
jecxz
stos
std
xor
xor
and
adc
cs
dec
add
xor
xor
adcl
sbb
jmp
in
mov
leave
push
pusha
leave
repnz
sbb
or
adcl
pop
pop
mov
repz
aad
xchg
adc
dec
and
insl
arpl
fwait
xchg
popf
adc
stc
mov
push
lret
sbb
xor
xchg
mov
dec
daa
ja
enter
and
sub
cmp
in
mov
and
in
in
cwtl
push
pop
add
nop
xchg
jo
add
std
rclb
pop
aad
into
jge
cwtl
dec
sub
pusha
sbb
jbe
aam
jno
sub
and
push
js
and
sbb
cmpsb
aam
ret
stc
fs
ljmp
pop
jg
xchg
mov
inc
xchg
das
and
iret
test
mov
jnp
movsl
out
adc
and
mov
mov
xorl
jo
mov
jmp
loop
pop
std
testl
pop
ret
inc
out
repnz
sbb
or
lods
mov
jo
shll
div
push
loop
sub
xor
mov
xor
movsl
adc
mov
rcr
mov
idiv
adc
lahf
mov
jae
mov
xchg
stos
push
int
mov
lea
sub
cmpsl
iret
dec
pop
fs
pop
es
cmp
rorb
fiaddl
shlb
jne
mov
and
inc
sub
and
sti
sbb
sbb
lret
int
xor
out
pusha
mov
rol
push
sbb
adc
cmpsb
popa
mov
jl
sbb
gs
xchg
daa
mov
push
cmp
aam
xchg
push
jl
lea
cmp
cmpsb
clc
icebp
shlb
dec
clc
lods
in
cld
fcoml
mov
inc
cltd
mov
pop
push
pushf
mov
inc
jmp
iret
lea
aam
mov
test
add
ja
sub
mov
imul
outsb
cmp
lds
or
out
aas
shr
enter
mov
inc
sub
xor
lcall
pop
fnstsw
scas
lea
pop
into
mov
inc
movsl
cmc
cmp
push
in
stos
out
shll
repz
add
xorl
das
fisttps
xor
adcb
fsubp
jmp
adc
sbb
jge
loope
repz
mov
into
scas
jp
mov
xchg
push
sbb
push
push
stc
push
aam
fdivrs
shr
lods
cmp
dec
pusha
push
ja
aad
fcmovnu
fdivrl
xor
lock
adc
xor
adc
cli
repnz
cmp
mov
mov
pop
pop
xor
mov
xchg
fisubrl
and
xchg
cmp
xchg
das
sahf
inc
out
mov
jo
pusha
in
jnp
aam
jb
fstl
sbb
in
ljmp
jb
subb
aam
ret
sbb
jge
daa
sbb
dec
sbb
pop
adc
inc
rcrl
hlt
mov
out
xor
and
adc
mov
xchg
cmp
and
push
cmpsb
fisubs
add
pop
outsl
mov
push
jbe
test
sahf
pop
mov
shll
sti
add
adc
dec
cmpsb
push
push
mov
movl
stc
sbb
jecxz
sub
call
and
jae
aas
jae
inc
xor
push
push
notb
das
stos
outsb
loop
or
stc
cmpsb
pop
stc
and
mov
inc
mov
mov
mov
lcall
jbe
dec
lds
aas
addr16
dec
popa
gs
sbb
mov
mov
in
adc
scas
adc
sbb
jmp
cmp
jns
gs
popa
mov
or
xchg
fwait
inc
xor
cmpl
and
mov
jmp
insb
pop
testb
gs
and
in
ret
sub
mov
adc
outsb
mov
enter
cmc
add
out
mov
cli
inc
inc
ret
sbb
int
pusha
test
jno
aaa
sarl
inc
lock
jno
jecxz
sub
outsb
addl
jo
test
mov
xor
cvtdq2ps
fs
mov
xchg
mov
xor
mov
js
sbbb
into
repz
imul
dec
mov
add
stos
bound
cmp
and
jns
mov
out
adc
dec
std
add
ret
sbb
mov
inc
outsb
les
mov
mov
test
inc
pop
jecxz
test
jbe
xor
fmuls
aam
fs
cmp
subl
inc
push
mov
sbb
fmuls
leave
mov
cmpl
jo
loop
addr16
push
pop
cmp
fsubs
xchg
inc
test
in
cli
sarl
mov
shrd
icebp
repnz
and
inc
inc
sti
std
pop
push
or
push
jo
jb
mov
push
mov
mov
frstor
fmulp
mov
jmp
addr16
cmp
lods
xchg
icebp
in
daa
ja
pop
pop
in
jmp
bound
mov
sti
push
jle
ret
mov
sbb
adc
jns
push
icebp
outsl
and
adc
add
cmp
push
lret
pop
adc
xor
jmp
rcr
test
rclb
adc
daa
arpl
mov
adc
inc
mov
dec
or
mov
lret
hlt
pushf
dec
inc
cmp
mov
dec
cld
aas
or
push
lcall
lahf
inc
out
and
leave
add
insl
mov
imulb
push
ret
les
movsb
aad
cli
popa
jo
mov
inc
cmp
int
mov
in
inc
xchg
jns
in
nop
pusha
outsb
mov
push
fstpt
inc
lods
mov
or
and
cli
insb
adc
ljmpw
xchg
sbb
push
jle
xor
mov
adc
dec
push
into
add
mov
adc
push
xchg
or
pushf
mov
outsl
rcrb
popl
add
inc
jle
jb
stos
out
clc
inc
je
mov
shlb
pop
in
and
popf
ljmp
cltd
inc
xchg
idivl
sub
pop
mov
jg
push
mov
cmp
mov
jg
xor
xchg
mov
in
mov
add
test
in
or
ja
test
xchg
cmp
push
inc
mov
test
mov
outsl
xchg
sbbl
nop
add
daa
mov
scas
addr16
inc
sbb
hlt
nop
push
imul
std
mov
lcall
push
xlat
or
hlt
inc
aaa
pop
subl
fiadds
fs
popa
lods
test
and
rcll
xor
test
or
dec
outsb
adc
inc
shr
pusha
int
xchg
push
sub
sti
xlat
enter
jno
call
jg
add
hlt
xorb
lcall
add
jg
and
into
or
imul
mov
cmp
jg
push
frstor
push
fldpi
fstl
push
mov
lock
iret
aaa
pop
divl
mov
mov
jne
fstps
popf
test
or
add
stos
cld
adc
mov
fs
adc
insb
push
pop
lret
mov
les
jb
cmpsl
adc
lods
inc
cmp
add
jmp
mov
popa
shlb
stos
insl
lods
jecxz
inc
hlt
sbb
push
push
inc
xor
fwait
out
mov
iret
jle
push
adc
mov
add
mov
out
hlt
lock
push
and
loope
ljmp
in
pop
fisttps
mov
test
sti
mov
mov
push
imul
cmpsl
push
push
leave
in
andb
push
mov
adc
adc
insb
sar
shl
daa
cli
mov
add
sub
in
mov
pop
xchg
add
pushf
int3
jle
notb
clc
adc
pop
sbb
push
lds
push
ss
mov
aaa
mov
or
mov
or
fbstp
shr
movsl
xchg
loope
pop
sub
aaa
movsb
adc
test
push
in
jl
cwtl
cwtl
mov
xor
jl
and
test
ds
jmp
xchg
fs
jge
push
xchg
leave
mov
ror
and
mov
je
and
mov
stc
inc
jmp
push
sub
andl
lods
ja
mov
mov
rcrb
shlb
jno
outsl
sbb
int
jae
and
sbb
inc
adc
testl
pop
mov
pop
cs
dec
std
add
hlt
mov
loop
jp
push
jae
jnp
xchg
fstps
hlt
inc
mov
fsubp
rcll
clc
clc
xchg
push
movsl
icebp
mov
std
or
cld
movsb
pop
imul
mov
rcr
dec
cmpsl
jne
sbb
mov
stc
pushf
mov
hlt
dec
dec
pop
movsl
daa
mov
and
sub
out
mov
or
mov
int3
stc
test
js
cmp
sahf
out
int
xor
inc
in
cld
dec
popa
push
hlt
cs
add
lret
jae
jo
in
enter
lds
mov
repz
mov
inc
add
jnp
mov
xchg
ds
inc
and
and
jmp
push
xor
fdivrl
enter
dec
ljmp
push
and
int
pusha
push
sahf
neg
jne
not
ds
and
fwait
nop
add
xlat
adc
sub
out
mov
adc
addb
xlat
fstpt
stc
cmp
mov
push
pop
sub
add
mov
push
aad
das
mov
jmp
lahf
mov
xchg
stos
mulb
or
inc
add
stc
xchg
jno
insl
mov
stos
sahf
cmp
sbb
add
fcmovbe
stc
inc
fmull
sub
mov
aaa
mov
adc
insb
testl
jae
loop
xchg
faddp
fsubl
stc
loope
jns
imul
ja
cmp
rcrb
adc
push
dec
fcomps
xor
arpl
sbbl
xor
add
jno
aaa
fidivrl
out
clc
out
mov
mov
std
and
xorl
dec
fldenv
pop
pop
pop
je
sbb
mov
leave
xchg
mov
xor
cmpsb
xchg
mov
push
movsb
and
dec
jns
test
cmp
mov
xchg
push
cmpsb
pop
into
inc
adc
pop
inc
push
cmpsb
add
push
lds
dec
rolb
sub
push
jge
stc
stc
cmp
xchg
jecxz
subl
jmp
jl
movsb
pop
jns
loopne
pop
mov
divps
or
sub
add
mov
mov
test
pop
mov
or
xchg
int
sub
insb
or
push
out
rolb
scas
sub
hlt
pop
out
jae
scas
inc
js
xchg
roll
addr16
xchg
cmp
xor
mov
ss
sti
ss
out
mov
sbb
and
or
cmpsl
xor
test
fidivrl
sbb
jecxz
insb
mov
xor
jg
sub
cmp
mov
in
iret
imul
jno
cmp
pop
mov
test
ret
sub
out
mov
ljmp
cs
dec
data16
pop
cli
xchg
and
or
outsl
xchg
mov
int3
push
lret
jecxz
mov
adcb
jo
inc
pop
ss
ja
xor
mov
push
or
or
mov
sub
lcall
andb
xchg
push
sub
sub
lds
pop
jl
pop
enter
or
dec
jno
jle
loop
je
inc
dec
out
mov
mov
inc
fmuls
sbb
add
mov
adc
mov
negl
sbb
out
repnz
push
or
xor
je
pop
adc
scas
push
dec
addr16
data16
xlat
jecxz
clc
outsl
movsb
loope
hlt
cmp
enter
data16
and
aam
leave
mov
outsl
cmp
and
fsubl
imulb
pop
sbb
jle
ja
inc
daa
fwait
in
pop
nop
jle
mov
mov
sub
sub
imul
nop
sub
sbb
jge
loopne
sarl
out
in
popa
xlat
std
mov
fsts
imul
xchg
dec
loopne
hlt
mov
mov
ds
adc
dec
dec
xor
shll
lret
loopne
pop
fcomps
xor
lahf
mov
cmp
inc
sbb
xor
test
sub
sbb
fsubr
push
out
arpl
hlt
add
loopne
sbb
aam
sub
jmp
mov
inc
sub
fdivrs
lock
test
mov
mov
push
inc
jge
daa
enter
adc
jnp,pt
sahf
lds
stos
sub
test
push
push
mov
jecxz
mov
push
pushf
mov
pop
and
cli
mov
push
leave
mov
dec
jecxz
mov
or
aas
loop
jne
jno
fs
dec
pushf
fldenv
push
pop
mov
insb
jmp
pop
ss
ss
add
lret
mov
cwtl
pop
jp
popf
iret
addb
jl
test
vmwrite
ja
fcoml
enter
outsl
lret
adc
hlt
push
push
inc
sub
add
lock
pop
sbb
fsubl
dec
jne
sbb
stos
push
in
data16
lahf
jmp
out
bound
jmp
scas
icebp
jecxz
mov
loop
subl
xchg
cli
fbstp
inc
loope
sahf
loop
jg
into
lods
jp
mov
rcrb
jo
sbb
mov
push
insl
shlb
lcall
sbb
pop
lret
lock
pusha
rorl
xlat
mov
js
inc
cmpsb
daa
das
mov
xor
adc
cmp
sbb
out
push
outsl
stc
jbe
out
test
nop
dec
insb
scas
xchg
pusha
pushl
lret
mov
test
sub
inc
cmp
jo
ffree
add
loop
shl
push
inc
push
pop
popf
dec
pop
daa
mov
adc
xor
clc
xchg
iret
xor
cld
xlat
sub
fwait
in
jno
or
xchg
or
lea
sbb
cli
pop
movsb
add
cmp
mov
out
add
jle,pn
jl
cltd
jle
ja
mov
mov
clc
or
inc
aas
push
push
push
dec
fisubl
sbb
inc
mov
sub
test
hlt
aam
data16
adc
inc
cmp
aas
int
cmc
mov
lods
test
pop
or
jmp
sbb
mov
jle
xchg
sub
mov
xchg
sbb
lahf
or
orb
or
inc
inc
adc
imul
and
fnstcw
xchg
add
repz
inc
inc
or
adc
xchg
push
icebp
int
call
xor
je
mov
or
stos
faddl
jl
mov
bound
cmp
mov
mov
inc
call
mov
test
icebp
int3
xchg
daa
inc
sti
daa
ss
adc
dec
stos
aas
loope
rclb
popw
mov
popf
lods
filds
test
stc
scas
xchg
dec
or
or
cmp
jl
xchg
jbe
push
imul
and
pop
xchg
hlt
shlb
out
subb
fisttps
mov
push
leave
out
bound
scas
cltd
outsb
mov
ds
sarb
and
leave
mov
adc
repnz
or
dec
stos
mov
xchg
loope
aaa
test
movsl
sub
cmp
sub
sub
cmp
push
test
or
lret
repz
or
outsb
aas
hlt
cld
es
push
sbb
adc
pop
add
xlat
mov
scas
into
cmp
test
shrl
add
xor
cwtl
popa
int
jg
jl
cltd
sti
push
sub
pop
inc
jbe
cmp
dec
mov
jae
or
jns
shll
hlt
adc
arpl
daa
out
icebp
push
subl
insl
mov
ss
pushf
nop
dec
xchg
adc
pop
cs
mov
fistpll
xor
lret
jl
test
pushf
mov
sbb
or
loope
adc
push
out
pop
arpl
insb
lret
add
xor
push
mov
or
pop
repz
mov
push
mov
dec
testb
shl
out
aam
shll
adc
sbb
and
fsubs
scas
mulw
rolb
out
pslld
cmp
cmp
imul
int
mov
inc
xchg
cmp
push
out
lds
lods
mov
and
out
pop
add
mov
fidivrs
and
push
cmp
stc
cmp
add
movsb
inc
xor
inc
imulb
in
jge
std
popa
dec
pop
xor
dec
dec
inc
pop
aas
and
shlb
pop
add
mov
mov
jns
xchg
sbb
cmpsl
scas
lods
lret
bound
les
cltd
movsb
mov
xchg
dec
int3
xlat
mov
lret
ficomps
enter
jo
sbb
jmp
ret
or
pop
sbb
adc
inc
mov
ss
sbb
imull
cmpsl
add
jl
adc
aad
xor
mov
std
lret
adc
xor
mov
jl
roll
stos
sbb
mov
lds
or
adc
aad
stos
add
or
mov
pop
and
xor
mov
das
rorb
and
mov
in
mov
mov
xchg
out
sbb
pop
adc
lods
or
outsb
push
pop
mov
imul
imul
clc
ss
dec
and
add
mov
mov
push
or
pop
aas
inc
inc
std
pop
js
pop
clc
int
mov
xor
jne
gs
cmp
clc
cmpsl
pop
frstor
mov
push
push
out
mov
popf
adc
push
mov
inc
in
cmc
repz
sbb
sub
test
mov
int
inc
cmc
xchg
jmp
shr
xchg
push
dec
nop
insb
rorb
sbb
sub
outsl
push
mov
push
stos
cwtd
jle
xchg
mov
fidivl
fldenv
or
push
cmp
sbb
xor
loop
dec
jl
jno
leave
push
dec
pop
jg
cmp
clc
mov
pusha
ljmp
cmpsb
ljmp
jns
ja
cs
in
lcall
imul
mov
xlat
mov
inc
pop
fbld
push
sub
jecxz
mov
out
int3
xchg
iret
inc
xor
flds
jne
and
dec
enter
inc
call
push
dec
add
add
jns
adc
jne
rcl
xor
out
xor
dec
inc
lock
mov
repz
movsb
add
aad
push
push
or
ds
jo
pop
je
sub
shll
jecxz
jne
call
aam
fsubl
add
push
mov
lea
mov
fsub
and
add
xor
push
mov
pop
addr16
aas
adc
arpl
push
mov
inc
jb
cmp
test
mov
icebp
arpl
sbb
sub
cmc
xchg
jp
mov
pop
js
lock
lea
repz
fisubrs
jne
mov
movsl
xor
pop
mov
push
stos
cs
inc
mov
adc
push
jg
sub
popa
cli
xchg
imul
and
iret
int
jecxz
pop
adc
in
push
mov
sub
ret
outsl
cmc
sbb
inc
or
mov
jno
rolb
cmp
fisttpll
cwtl
jo
sub
or
pop
lret
push
int
xchg
dec
xchg
cmp
or
lret
mov
jecxz
out
mov
sbb
add
xchg
xor
ja
iret
outsl
jmp
push
pop
push
in
jmp
shlb
pop
rcrl
inc
adc
in
mov
notl
dec
mov
lock
fisttpll
push
dec
xchg
mov
sub
rolb
clc
imul
jb
jecxz
xor
xor
jae
cmp
mov
stos
pop
push
insl
mov
sbb
inc
fiaddl
jns
sub
fs
xor
add
push
or
inc
mov
repz
push
shlb
add
sub
push
mov
dec
ja
dec
out
xor
lods
mov
xchg
jbe
mov
push
push
pop
sub
or
dec
fbstp
hlt
and
or
sti
adc
sahf
mov
mov
cmp
pop
adcl
rolb
mov
js
jnp
aam
xchg
jne
sub
cmp
cmp
push
pop
into
leave
aam
mov
test
pop
int
jb
test
cmp
push
loope
aam
outsb
mov
fstpt
int3
jns
aaa
enter
fistl
cwtl
pop
gs
outsb
out
mov
cli
lods
sbb
dec
fsubs
push
stos
xchg
sbb
out
pop
outsl
cmpl
or
mov
jo
and
push
nop
push
xor
mov
dec
je,pt
sub
les
push
dec
adc
xor
xlat
dec
jecxz
fildll
roll
xchg
pop
mov
rorl
push
push
mov
repz
pop
je
push
sahf
add
adc
add
jnp
lahf
xchg
jno
jg
mov
stc
pusha
roll
scas
ret
addl
test
mov
jbe
and
pusha
sbb
sti
mov
ljmp
shll
inc
jle
and
data16
in
jp
popf
sbb
or
mov
clc
sbb
rorb
xchg
out
xchg
mov
jp
jmp
xchg
sub
pop
call
sbb
xchg
mov
lods
sahf
sbb
movsl
rcrl
ficomps
jle
cmp
fs
push
repz
pop
rorb
push
mov
mov
das
jl
loopne
mov
xor
imul
sbb
cmp
fcomp
repz
mov
vmaxss
push
inc
mov
lcall
push
add
jne
dec
movsl
push
aad
out
cmp
aaa
dec
mov
outsb
push
popf
das
in
test
push
lret
lret
cmp
xchg
inc
dec
and
dec
imul
imul
movsb
mov
jecxz
cli
imul
jae
out
out
push
sbb
push
pop
cld
movsb
xchg
and
pop
dec
pusha
push
inc
sbb
roll
out
jns
ficoml
subb
cmpsl
inc
xchg
xchg
and
int3
inc
out
sbb
insb
pop
rcrl
sub
ljmp
ror
push
mov
mov
push
inc
rcll
mulb
sbb
jns
ljmp
out
pushl
icebp
cmp
inc
sub
push
aaa
fdivp
imul
cld
dec
js
jno
fs
aad
aad
aad
and
or
mov
pop
cmp
js
mov
and
jp
mov
jo
aaa
aas
pop
aas
jo
popf
popf
dec
xor
sub
mov
aaa
sbb
lods
adc
adc
stc
scas
out
enter
push
mov
lret
out
xchg
int
popa
jmp
jmp
bound
in
outsb
mov
pmaxub
addr16
leave
pop
outsb
dec
adc
lret
pop
call
sub
rorl
cmc
jns
fisubrl
cli
ljmp
sub
outsb
out
xor
inc
fwait
shl
cwtl
loop
outsl
ja
mov
push
call
add
and
test
ss
mov
repnz
idiv
test
rcll
jp
lahf
in
xchg
nop
push
cmp
imul
push
jae
in
inc
and
insl
dec
and
pop
jp
fistl
inc
repnz
sbb
ret
ret
xchg
adc
rorl
mov
dec
repz
push
dec
cld
enter
int3
mov
lds
shll
inc
xor
fnsave
sub
adc
sti
mov
ret
clc
fstpl
adc
lcall
scas
hlt
ljmp
xor
jl
adc
inc
in
aas
leave
mov
add
mov
mov
jae
xchg
int3
jb
adc
pop
fcmovne
and
pop
push
das
inc
jp
rorb
subb
loop
movsl
mov
xor
ficoml
jl
add
lds
inc
in
xchg
xchg
push
aam
fsts
pop
mov
enter
movsb
mov
cmpsb
push
and
mov
aaa
mov
outsb
mov
jb
and
xor
movsb
lods
inc
cmpsl
pop
les
test
dec
lea
or
shl
lds
pop
pop
addb
outsb
repz
sahf
or
ja
lods
push
test
cld
or
and
jae
jmp
js
lcall
adc
ljmp
popa
add
push
pop
xchg
scas
xor
rclb
jnp
dec
inc
pop
movsl
adc
push
sub
ds
in
cli
cmp
push
xchg
iret
adc
inc
scas
and
dec
ror
push
lock
inc
inc
sub
fwait
pop
sub
pop
pop
sti
mov
sbb
sarl
sub
out
dec
clc
and
in
xor
adc
or
or
insl
xchg
jae
push
aad
cld
out
jmp
dec
fadds
cmpsl
std
xor
imul
adc
mov
add
int
inc
add
pop
dec
mov
push
mov
int3
sub
scas
js
jno
push
aam
jmp
mov
adc
sahf
fbstp
es
clc
mov
imul
dec
gs
sbb
xlat
fnstsw
test
pop
or
xchg
sahf
test
test
nop
fwait
add
aad
test
xchg
inc
cli
push
loop
lods
imul
pop
pushf
inc
fs
imul
rorb
xor
mov
imulb
mov
jmp
fsubrs
das
xchg
movsl
ljmp
mov
pop
or
ret
cwtl
mov
ficoml
jne
lret
adc
andl
js
push
xor
aas
enter
push
mov
ja
mov
jne
jl
lcall
shrb
pop
pop
mov
mov
rclb
add
hlt
dec
push
mov
mov
repz
or
shrl
into
aas
lcall
and
jp
mov
jl
data16
push
dec
in
cmp
ficomps
mov
jno
andb
inc
push
jge
inc
fwait
jmp
icebp
pop
pop
in
inc
lret
int3
xor
or
das
sbb
lea
push
rorl
mov
mov
mov
dec
addr16
test
fadd
fs
es
jne
je
ffree
fcomp
xchg
inc
cs
lods
sub
adc
das
shl
inc
sbb
jl
pop
mov
jo
push
mov
andl
enter
mov
and
imul
mov
lock
std
mov
popf
dec
sbbb
push
xor
out
dec
mov
xor
push
iret
mov
sub
or
addr16
xlat
loopne
sub
aad
mov
pop
sbb
fistps
in
sbb
and
cmp
icebp
jecxz
bnd
out
mov
mov
inc
cmpsl
dec
clc
pop
in
push
or
imul
sbbb
mov
test
inc
and
sub
out
mov
push
dec
pop
pop
divl
pop
pop
or
popa
pop
stc
je
lods
insb
icebp
out
mov
out
fwait
bound
xchg
test
push
mov
push
dec
adc
pop
insb
popa
int3
in
inc
mov
pop
sbb
sahf
inc
test
dec
mov
fnsave
lock
lods
mov
jbe
mov
mov
mov
push
xchg
fstl
flds
shll
test
push
push
mov
ret
dec
sub
or
insl
rorb
fsts
aaa
add
stos
aad
and
in
dec
mov
pop
and
roll
adc
adcb
and
cmp
gs
pop
scas
insl
inc
mov
or
mov
adc
aam
mov
stc
repnz
mov
push
lods
push
adc
fistl
fistps
mov
inc
sub
xchg
fwait
jbe
ljmp
ret
iret
icebp
jae
hlt
mov
int
add
clc
pop
sub
or
or
push
xor
jb
dec
push
push
mov
int3
cs
inc
push
mov
or
in
add
inc
inc
and
jge
incl
sub
int3
out
movsl
and
cmp
arpl
xor
std
js
dec
or
movsb
lock
fwait
mov
lock
mov
sbb
mov
dec
shlw
push
sub
and
pop
jg
lret
push
clc
rol
imul
arpl
ja
lret
jmp
mov
push
xor
into
bound
sbb
dec
ss
sbb
rorb
pop
mov
inc
add
pop
sarl
push
lret
fstpl
mov
hlt
or
pop
push
aad
ja
dec
dec
test
addb
add
xor
and
sub
inc
inc
mov
fisttpll
pop
sbb
addr16
jno
fsubrl
fidivs
or
xchg
adc
shlb
loope
mov
push
or
pop
pop
cmp
nop
cli
xchg
rcll
test
mov
nop
inc
xchg
jno
jbe
lret
fdivrs
std
in
jo
stos
int
shll
sub
stos
sub
mov
mulb
or
push
xor
xchg
daa
jp
imulb
jne
outsb
in
aas
inc
cwtl
or
mov
das
jno
mov
js
popa
das
and
sbb
pushf
adc
pop
repz
jbe
and
fdivrs
int3
notb
push
adc
inc
jmp
jmp
dec
sbb
dec
das
sbb
aad
int
mov
jnp
dec
out
jmp
pop
inc
popa
add
icebp
mov
mov
je
cmp
popf
pop
test
inc
lods
mov
aad
adc
cmp
jecxz
mov
ss
mov
addb
shll
adcl
cs
in
xchg
out
xchg
and
sub
daa
pop
dec
xor
sub
xor
shl
aaa
dec
test
pushf
xchg
lret
or
push
cwtl
repz
leave
fstp
push
push
push
es
sbb
cmp
cmp
push
jb
mov
std
scas
outsl
mov
movsl
cli
xor
sbb
sarb
mov
mov
popf
test
das
dec
scas
push
sub
popa
loope
push
dec
xchg
cli
movsl
push
scas
popf
cmpl
inc
and
ror
cs
insb
sub
stc
mov
jbe
jno
and
and
aam
pop
push
ret
iret
jo
pop
imul
xchg
and
enter
fsub
cmp
pop
jns
dec
push
iret
push
push
add
loope
push
icebp
and
xchg
sbb
fildll
adc
sbb
push
pop
fdivrl
mov
and
aaa
pop
adc
xor
mov
inc
add
std
xor
mov
movb
movsl
inc
xchg
push
shl
sbb
pop
pop
dec
jl
adc
jp
movl
dec
dec
aad
xor
mov
loop
adc
inc
sub
out
ja
imul
cmpsb
aaa
xchg
outsb
in
rorb
loopne
or
in
jae
cs
inc
mov
scas
insb
or
mov
jno
scas
xorb
mov
mov
rcr
xor
je
dec
jnp
dec
out
emms
lods
pop
sub
loope
sbb
inc
push
fsubrs
dec
sub
test
pop
pop
adc
sub
je
lods
cmpsl
imul
cmp
jno
fwait
rcr
daa
mov
sub
gs
add
jo
ja
pop
adc
jo
or
ja
push
mov
fldt
pop
hlt
arpl
or
dec
mov
rcr
mov
push
cmp
sbb
xchg
adc
push
shrl
cs
cltd
aaa
lcall
in
and
cmp
in
enter
mov
mov
loope
enter
mov
inc
sbb
fnstsw
fbstp
dec
xchg
jb
rcll
sbb
push
cmp
mov
ja
les
jle
xlat
lret
and
push
stos
xchg
inc
add
lcall
inc
mov
cmp
lcall
jbe
xchg
outsb
sub
xor
rcll
push
stos
cmpsb
jno
icebp
mov
in
add
pop
into
sbbl
adc
inc
in
movsb
and
pop
mov
inc
repnz
mov
daa
cmc
sbb
mov
aaa
fcomi
repz
pop
int
jmp
inc
or
mov
pop
jecxz
stos
cmpl
dec
mov
add
popa
add
inc
orb
cld
subl
jmp
loopne
ret
xchg
or
lcall
add
sbb
outsl
add
lods
or
pop
or
lods
in
ss
cs
mov
jl
out
repz
arpl
in
cmc
sub
hlt
cld
jo
insb
arpl
xchg
subl
inc
loop
pushf
adc
loope
out
jg
push
pushf
les
inc
cmp
movsl
push
or
les
rcll
leave
dec
add
sahf
das
mov
test
jmp
xor
iret
pushf
push
leave
xor
mov
nop
inc
loope
mov
pop
fstps
aad
pop
push
ficomps
inc
movsb
inc
lock
cmp
pop
sahf
es
ljmp
call
cmp
mov
rorl
aad
nop
mov
cli
push
aaa
pop
outsb
mov
test
dec
aam
cmpsb
mov
imul
add
jecxz
lret
xchg
stos
jecxz
adc
out
cmc
lock
pusha
rol
aaa
sub
loop
mov
mov
scas
mov
push
sbb
inc
add
xorl
rcll
fldcw
sub
in
xor
pop
fadds
adc
jp
and
fldcw
xor
xor
enter
and
test
daa
push
pop
pop
pop
xchg
fnstcw
int
loopne
ds
fwait
and
or
lret
stc
dec
ret
fxch
push
mov
cli
outsl
adc
jl
jo
pop
aas
jmp
aaa
lahf
xchg
and
push
and
ss
jle
cld
test
arpl
mov
jmp
shl
xor
daa
fldl2t
mov
and
xchg
sbb
aad
cmp
mov
frstor
das
push
out
repnz
je
cmp
mov
mov
cltd
xchg
lea
fs
xchg
stos
stos
mov
ficoms
ss
cli
xchg
stos
pop
cld
dec
jge
test
loopne
in
pop
ret
lods
jle
sti
and
hlt
push
and
xchg
add
movswl
xchg
sbb
cmp
mov
sub
mov
mov
pushf
fnstsw
in
rcll
mov
dec
adc
es
int
stos
cmp
orb
pop
dec
sarl
jb
fstpt
enter
fdivrl
xchg
jno
xor
ret
movsb
pop
call
pushf
stos
or
lock
add
push
or
ficomps
dec
arpl
jb
adc
cmpsb
in
cwtl
cmpsl
mov
lds
iret
lahf
xchg
inc
adc
xlat
xchg
jo
movsb
dec
add
mov
sbb
inc
out
gs
cmpsb
mov
jae
add
xchg
pop
lea
pop
jns
xor
pop
push
mov
cmp
inc
enter
repz
lods
nop
mov
mov
xchg
cmp
mov
inc
wbinvd
iret
and
fadd
mov
cmpsl
push
ja
inc
ja
insl
mov
mov
pop
lock
pop
roll
arpl
ss
inc
mov
iret
pop
out
push
int3
fldenv
les
fdivr
rolb
lret
jle
rcll
imul
divl
dec
xchg
mov
jo
mov
pop
aam
data16
xchg
fstpt
lods
push
pop
stos
icebp
and
imul
incb
ljmp
sub
and
mov
rclb
insl
cld
inc
sbb
jl
push
jnp
loope
mov
mov
mov
xor
fs
or
xchg
icebp
fcoms
dec
mov
sub
xor
clc
push
sarb
push
mov
add
cltd
sbb
cmp
inc
sbbl
pop
lcall
fisubrs
jecxz
jmp
xor
out
out
adc
mov
test
aaa
xchg
sbb
push
je
movsb
js,pn
stos
mov
lcall
adc
loopne
std
imul
or
inc
in
aaa
test
sbb
sub
xor
inc
ss
mov
xorb
add
or
popa
dec
pop
sbb
adc
xor
adc
cmp
movsl
lcall
std
xchg
push
ja
iret
adc
fsts
cwtl
push
insb
clc
dec
jge
pop
mov
dec
es
dec
dec
xchg
jp
loopne
push
xor
aaa
outsb
inc
popf
push
test
pop
or
stc
push
pop
test
cs
xchg
sbb
mov
cmp
xchg
subb
mov
cmp
jb
jns
jb
xchg
int3
push
pop
insl
idiv
pop
into
fucomip
out
sbb
insl
ss
fdivrs
lahf
cmp
ljmp
out
scas
cltd
loopne
xchg
fwait
pushl
push
jg
sbb
insb
adc
das
stos
or
lock
cmp
inc
pop
xchg
pusha
cmp
push
sti
sbb
mov
lds
xchg
push
test
cltd
test
xchg
adc
aam
jle
mov
cmp
jmp
mov
add
sub
aaa
or
sbb
push
push
es
ljmp
mov
pop
xchg
mov
mov
fneni(8087
mov
sub
andl
test
jge
dec
out
int3
pushf
pusha
pop
pop
mov
js
xchg
sbb
arpl
aaa
lcall
mov
ja
mov
sbb
xor
ljmp
loop
xorb
jno
jns
out
mov
cltd
or
icebp
lds
lcall
pop
clc
out
push
cmc
test
mov
xchg
and
insb
dec
xchg
mov
sub
neg
mov
mov
aas
loope
jmp
adc
fiaddl
jmp
mov
push
test
push
jge
pop
xor
sub
xchg
out
faddl
mov
ret
sbb
pop
pop
dec
or
std
mov
xchg
mov
sbb
xchg
push
adc
add
xor
mov
jecxz
test
insb
inc
pop
add
inc
aas
cmp
mov
pop
sub
push
mov
fsts
jecxz
sub
es
mov
cmp
push
test
daa
lcall
lock
neg
pop
jmp
scas
dec
pop
into
lahf
sub
mull
xlat
push
mov
ret
jae
hlt
icebp
push
mov
mov
mov
jnp
xchg
jl,pn
push
push
cwtl
jg
lea
jnp
cwtl
and
imul
fwait
cmc
inc
mov
sub
aaa
cmpsl
dec
mov
outsl
or
xor
add
sub
xchg
xchg
adc
sub
fnsave
loope
sarb
call
pop
test
sub
jecxz
testb
pop
inc
dec
push
testl
in
mov
ss
aaa
cmp
outsl
mov
popa
add
lret
movsl
jae
cmpsl
scas
ret
fsubrs
mov
sbb
pop
sbb
cld
popf
push
mov
stos
ffreep
fstps
ja
arpl
movsl
sub
mov
sbb
or
fdivs
mov
pop
scas
and
shr
addr16
add
xor
xchg
rorb
or
inc
subb
push
xchg
cld
mov
mov
sbb
gs
aam
inc
insb
jne
mov
dec
cmp
dec
push
mov
adc
jo
xchg
lods
mov
jge
jb
inc
mov
cli
mov
or
stc
xor
cltd
repnz
jmp
mov
xchg
pushf
pop
xchg
nop
scas
dec
mov
mov
mov
jnp
pop
pop
sub
movsl
fistl
lock
add
xor
adc
sbb
fnstsw
test
lds
inc
in
jp
dec
or
imull
jbe
shrl
or
cs
pushf
das
loopne
adc
cmova
dec
fldt
mov
stc
adc
adc
sbb
or
push
dec
pop
pop
push
jb
lods
incb
idiv
mov
cmp
stc
popa
cmpsb
sub
mov
das
lods
jno
fsub
movsb
mov
xor
pop
and
test
ret
daa
cmc
fisttps
jg
cmp
sbb
mov
lahf
ret
aaa
push
and
mov
xor
mov
cmc
repz
js
inc
dec
mov
sub
and
shl
cmp
fadds
adc
jg
xchg
out
xor
mov
xor
in
aas
fwait
sbb
dec
test
je
mov
sub
adc
push
lds
aas
int
jns
jle
iret
adcl
cmp
jnp
mov
and
mov
lods
jae
in
add
xlat
mov
and
sub
mov
clc
push
lret
bound
repz
jo
mov
jno
call
xchg
out
leave
lret
js
sub
push
push
xchg
or
roll
out
test
in
into
shlb
xlat
or
xor
sub
sbb
insl
mov
and
sub
cmp
mov
outsb
mov
mov
sub
xchg
js
arpl
xor
sbb
fwait
aad
fildl
adc
cmc
add
test
jmp
and
cmp
and
jbe
fistl
jo
out
imull
jle
sub
adc
sub
dec
jecxz
fcmove
stos
testw
fisttpll
jmp
lods
gs
subb
pop
pusha
jg
or
out
adc
add
int3
stos
push
or
add
adc
andb
ja
or
jbe
outsl
in
sub
andb
scas
mov
xchg
push
clc
cld
ss
test
and
and
cmp
jne
mov
shll
adc
and
xor
test
dec
mov
jno
jnp
jecxz
ret
dec
ret
xchg
mov
loop
fldcw
xchg
mov
fstpt
sbb
mov
xor
mov
cmpsb
sar
imul
pop
fnstsw
inc
xchg
mov
xor
scas
xchg
push
pop
or
stc
or
pop
and
cs
test
nop
mov
mov
mov
pop
popf
push
inc
ljmp
mov
and
mov
xchg
xor
imul
mov
push
jmp
cmp
jecxz
push
sti
pop
mov
jle
dec
in
mul
pushf
push
addr16
mov
add
pop
call
pop
test
xchg
xor
pushf
pop
imul
sbb
stos
push
mov
or
imul
add
push
add
out
stc
outsb
stos
jle
pop
out
iret
xchg
out
mov
cmp
aas
add
and
xor
cmpsl
sbb
mov
test
adc
sbbb
cli
mov
dec
adc
in
clc
mov
in
lods
mov
mov
pop
adc
stos
scas
loopne
add
not
cmp
cmpsl
or
nop
mov
adc
imul
sbb
cmpl
fimuls
in
mov
dec
or
sbb
jl
push
rcl
pop
test
or
or
rcl
push
adc
aad
or
push
cmp
jmp
xor
mov
pop
dec
popa
cmp
sub
and
fisubrs
push
adc
enter
mov
pop
jae
mov
leave
in
leave
push
das
iret
xorl
pop
bound
pop
mov
pop
adc
bound
outsb
sub
outsb
nop
pop
cmpsb
mov
call
dec
ret
shrb
icebp
sbb
fsubr
dec
push
mov
hlt
aas
out
xor
dec
fwait
loop
and
jg
int
cmp
in
cmp
cmpsl
enter
cld
imul
stc
js
xchg
pop
inc
xor
dec
fiadds
mov
cld
repz
mov
push
xor
push
xor
loopne
and
scas
test
in
aaa
mov
clc
notl
lret
sub
hlt
popl
loop
in
and
popa
test
int3
add
outsl
out
mov
jns
xchg
cmp
int
jmp
xchg
int
imulb
push
sub
scas
rolb
sbb
stc
call
in
inc
fs
cwtl
jle
xor
mov
insb
out
pop
cmc
daa
sub
scas
push
icebp
jae
pop
sbb
enter
xlat
push
call
jo
popf
inc
pushf
bound
jbe
xlat
sub
jmp
scas
imul
inc
jbe,pt
and
aaa
imul
lea
fstl
mov
adc
mov
ja
stos
xlat
rcr
out
mov
lods
mov
mov
in
fdivr
hlt
rep
push
aad
hlt
cmp
mov
lret
lds
inc
pop
loop
add
xor
ss
lock
fidivrl
dec
xchg
mov
jge
pop
dec
or
mov
les
int
minps
dec
leave
ja
ret
mov
mov
fcmovu
inc
or
mov
sub
sub
stc
add
cmp
mov
or
dec
outsl
jp
fadds
or
shr
cmc
xorl
lret
mov
std
pushf
cmp
cmp
aaa
fldcw
and
mov
xlat
test
add
out
or
rolb
push
into
data16
mov
jl
lcall
xchg
sti
in
sbbb
ffreep
or
stc
sbb
add
lods
nop
adc
xchg
and
ja
bound
jbe
sbb
pop
xlat
loope
or
cmpl
cs
jo
jmp
pop
imul
adc
pop
iret
outsl
and
inc
cmpsb
sbb
into
and
stc
xchg
push
xchg
dec
mov
movsb
dec
jg
in
out
push
jo
push
adc
jmp
stc
xor
lock
test
mov
push
call
push
loope
scas
inc
aam
adc
fld
xchg
dec
repz
cli
repz
frstor
lahf
jae
cmpsl
out
cmp
xchg
adc
adc
loope
je
sub
jle
jno
mov
leave
adc
test
jmp
xor
push
stos
pop
lds
int3
adc
aaa
mov
jns
mov
inc
adc
mov
mov
mov
mov
adc
pop
xor
cld
push
mov
rolb
imul
jae
dec
cwtl
push
fcoml
leave
mov
mov
mov
jne
fcomps
pusha
xchg
js
push
push
jl
shl
cmp
shlb
and
mov
pop
and
and
mov
xor
fdivrl
xor
mov
push
sbb
adc
insb
mov
xchg
data16
dec
sub
lea
pop
insb
ret
mov
aaa
mov
sbb
lahf
cld
cmp
xchg
xchg
cmpsl
cmp
loopne
jno
cli
out
xor
aas
sbb
jl
and
into
in
cwtl
pop
mov
movsl
in
sub
orl
inc
popf
pushl
cld
shrw
xor
into
mov
std
cmp
mov
jae
mov
das
dec
xor
rolb
leave
orb
dec
adc
dec
mov
inc
mov
push
cmpsl
adc
repz
in
mov
jne
mov
adcl
mov
stc
repnz
inc
pop
jne
push
pop
or
push
adc
mov
cmp
insl
inc
imul
fnstsw
pop
xchg
fistl
aad
xor
sbb
jle
xchg
add
push
jle
outsb
cmp
stos
movsl
shlb
adc
sub
lea
aas
pop
cltd
sub
add
inc
add
incl
pop
add
xchg
dec
pop
mov
int
sbb
in
mov
adc
mov
sbb
jns
dec
loopne
aam
jno
aas
aad
stos
lea
jbe
push
testb
popa
aam
les
roll
cmpsb
mov
mov
lds
and
sbb
xor
inc
adc
mov
aas
jle
jns
outsb
or
push
dec
mov
xor
add
or
jae
mov
and
lods
rcrl
subb
fwait
or
push
inc
pop
sbb
fnsave
clc
or
adc
std
enter
or
sub
mov
or
outsb
outsb
jbe
mov
dec
int
sbbl
mov
add
or
dec
int
xchg
pop
jle
lret
out
test
xchg
pop
cmp
jg
out
ficoms
xor
je
mov
jbe
xchg
mov
dec
and
or
xor
push
and
xchg
push
loopne,pn
in
inc
int
jo
mov
in
insl
mov
std
cwtl
adc
adc
and
jo
push
stos
in
divb
mov
movsl
jb
jmp
or
dec
pop
jnp
mov
popa
pop
loopne
add
int3
out
xchg
aas
xchg
sti
dec
dec
mov
mov
ljmp
popa
int3
xchg
mov
leave
and
testb
stos
test
dec
mov
call
push
daa
sub
xchg
lret
subl
push
inc
mov
rorb
je
insb
xor
jecxz
adc
popf
loopne
push
into
xor
cmp
sub
test
and
adcl
cwtl
xor
loope
sahf
add
fxch
test
ljmp
in
pop
sbb
mov
xchg
adc
jns
rclb
push
xchg
push
add
js
mov
xchg
jmp
jmp
test
xchg
repnz
pop
insl
pushl
fwait
jns
xchg
jbe
std
test
sbb
jbe
imul
stc
mov
and
jo
stos
sarb
lock
dec
je
add
loopne
jecxz
iret
adc
mov
and
aad
fdivs
jl
and
pop
and
std
pop
jecxz
add
jg
or
xchg
jg
mov
add
jae
incl
cmp
cwtl
out
pop
sbb
nop
jg
push
enter
jecxz
inc
shrb
sbb
call
mov
testb
lock
mov
mov
flds
cmp
cmp
imul
sahf
push
adc
cmpsl
or
pop
aam
cltd
pop
lcall
jg
lret
cmp
push
stos
jle
xchg
fmuls
mul
or
mov
xchg
sub
jle
test
fs
pop
jmp
xchg
adc
xchg
ret
jbe
mov
stos
mov
push
mov
pop
mov
dec
cmp
xchg
in
xor
xorl
outsb
enter
cmp
pop
das
and
cmpb
stos
mov
fldcw
cltd
call
test
loope
out
inc
dec
nop
mov
rcl
jne
dec
les
js
not
cmp
jge
mov
aad
daa
or
es
cmp
sbb
mov
das
rcr
jp
and
jge
xchg
xchg
js
mov
jne
jae
repnz
imul
dec
inc
bound
pop
fmuls
mov
and
jb
pop
inc
pop
dec
mov
mov
mov
mov
dec
faddl
xlat
push
ss
cltd
loop
clc
fcompl
stos
and
cltd
call
faddp
adc
jge
push
into
das
out
dec
les
rorl
dec
xorl
inc
sub
mov
mov
xlat
jmp
addl
insl
push
cs
loope
loope
aas
psubsw
les
and
xchg
cmp
mov
push
adc
dec
nop
rep
add
push
sbb
dec
push
cwtl
push
pop
sti
test
push
pop
dec
push
aaa
inc
repnz
out
adc
xor
jmp
stos
loope
cltd
adc
mov
mov
test
ss
push
int
mov
mov
frstor
dec
mov
repz
jle
push
mov
movsl
xor
pushf
insl
push
push
jns
dec
dec
shrb
fwait
out
fmuls
mov
push
and
push
xor
cld
pop
aaa
add
dec
inc
insb
and
inc
xlat
cwtl
test
xchg
add
es
loope
into
xor
test
dec
dec
lea
popa
inc
movsl
addr16
shll
ret
mov
hlt
push
into
cmpsl
jg
pusha
or
in
lcall
mov
or
ja
sbb
mov
pop
add
xor
insb
test
inc
daa
je
outsl
insl
pop
sbb
movsl
div
or
imul
andb
xorl
mov
add
push
mov
xchg
fnstsw
or
daa
je
mov
dec
push
lret
mov
and
push
int3
cmpsl
nop
jmp
pop
sahf
in
mov
jmp
push
shl
in
push
imul
adc
cmp
mov
gs
test
inc
cmp
aas
xchg
in
and
ror
xchg
insb
nop
scas
inc
xor
mov
scas
mov
cmpsb
sub
jbe
jmp
pop
lods
fsubrl
sub
push
idiv
inc
sub
in
cmp
pop
inc
dec
andl
xchg
mov
mov
jo
lret
je
xchg
push
cwtl
movsl
scas
loope
fcmovnbe
push
xchg
mov
pop
pushf
push
inc
push
call
std
test
dec
jge
push
jns
mov
and
push
and
jle
insl
mov
dec
push
sbb
loope
je
sub
push
das
xchg
cltd
lds
dec
rcll
xchg
mov
pop
xor
daa
and
mov
xchg
sbb
xor
in
fadds
faddp
mov
push
inc
stos
sub
xor
loope
pop
xchg
push
inc
adc
add
lods
aam
out
nop
in
stos
add
mov
scas
call
xchg
retw
inc
out
mov
daa
ss
cmpsl
sub
inc
adc
cmp
sub
adc
in
int
ss
xchg
test
pop
mov
xchg
ret
xchg
fst
in
cwtl
fisubs
loopne
jp
xchg
movsb
mov
sbb
fsubs
and
mov
push
add
shlb
enter
outsb
sarb
int3
fimull
inc
ja
cmp
out
sub
jmp
mov
and
in
pop
xlat
les
dec
fs
pop
stc
iret
sbb
or
inc
push
jge
cli
bound
rcrb
push
stos
aaa
out
jne
cmp
sarb
test
test
mov
jbe
test
mov
into
cmp
addl
dec
inc
enter
cs
mov
pop
outsl
xor
sti
sbb
jb
inc
mov
inc
js
lea
movsb
cwtl
insl
cld
les
nop
add
fwait
jle
jo
das
push
insb
mov
rolb
jge
mov
and
movl
gs
out
lret
jg
pop
loopne
repnz
inc
jno
cmp
mov
cmp
test
add
lock
jmp
adc
std
xchg
or
jmp
jo
inc
cpuid
inc
jmp
iret
push
arpl
dec
sub
ljmp
push
pop
mov
inc
mov
add
fs
into
std
pop
mov
inc
notl
pop
mov
mov
xor
insb
lock
sbb
cltd
out
movsl
mov
xchg
popf
jmp
out
xchg
cmc
xchg
xchg
popf
jbe
mov
sub
and
sbb
pop
pop
lcall
jge
sahf
mov
movsl
inc
jecxz
in
in
jecxz
push
stos
lret
test
mov
dec
push
dec
and
jb
lock
aas
push
jne
pop
cmp
mov
stc
sbb
jmp
addr16
lahf
add
push
aam
fucom
dec
out
ret
popf
xchg
pop
fwait
inc
cmp
rcrb
mov
arpl
cmpsb
das
or
cwtl
rolb
das
jecxz
sbb
fwait
push
js
adc
cmp
cmp
scas
sbb
pop
cs
sbb
or
cwtl
negl
pop
inc
adc
mov
ljmp
xchg
lea
or
jl
ds
js
mov
repnz
lock
xsaveopt
mov
popa
loope
cmp
out
in
das
jle
sub
jmp
dec
lock
sbb
dec
gs
fnstsw
push
push
push
inc
fnstenv
jne
pop
outsb
fcmove
cmp
sbb
pop
lods
call
and
dec
or
and
sbb
mov
add
in
push
cli
pop
inc
gs
mov
mov
adc
dec
sub
loop
mov
add
inc
fdivrs
fildll
mov
out
cmp
sahf
jecxz
cmp
push
cmp
notb
pop
push
pop
ss
imul
push
cli
aaa
and
clc
popa
mov
dec
bound
and
aas
fwait
push
movsl
in
mov
adc
mov
std
jge
test
ud2
popa
mov
test
hlt
aam
or
push
pop
dec
out
dec
sub
adc
inc
addb
sbb
jg
and
xchg
push
cmp
inc
shl
lods
xchg
cld
mov
lret
stc
xor
test
lcall
pusha
push
aas
xchg
sub
cmc
push
sahf
jge
in
pop
pop
jle
rol
push
out
stos
pop
lar
xchg
cmpb
dec
mov
adc
or
mov
fmuls
scas
push
loop
ret
movsl
lods
pop
mov
je
clc
add
in
inc
jmp
ljmp
sbb
lret
push
sar
inc
cmc
xor
xchg
jnp
inc
sbb
aam
lcall
ljmp
test
push
xchg
mov
sub
mov
inc
mov
aas
sti
dec
cmp
in
ljmp
insl
jmp
gs
gs
jae
jg
aas
dec
inc
jl
lods
pop
inc
ret
pop
xor
test
fisubrs
loopne
out
inc
lods
jns
cmc
xchg
xchg
cli
jg
cld
cmp
test
dec
lcall
jns
push
inc
mov
scas
sub
lods
popf
dec
dec
dec
mov
inc
dec
aaa
mov
lds
mov
mov
adc
jge
sarb
nop
cmpsl
aad
push
sbb
into
dec
dec
aad
into
insl
sbb
sbb
sarb
xor
mov
or
enter
lret
pop
inc
pop
push
jg
push
loopne
imul
test
bound
pop
xor
aas
sub
push
adc
pop
jno
imul
cmpl
in
pop
push
stos
stc
lret
pop
loope
insb
cmpsl
leave
xchg
nop
inc
lods
out
sbb
jnp
pop
ss
clc
pop
add
lods
inc
xchg
add
adc
xor
pop
mov
cmpsb
stos
and
mov
shrl
test
adcb
jcxz
adc
inc
jb
mov
ja
dec
inc
add
pop
std
inc
mov
imul
in
fisttps
pop
hlt
rcl
fidivrl
outsb
jp
cs
lea
inc
push
in
rolb
hlt
inc
pop
cs
lds
jp
jp
pop
sub
cmpsl
xchg
daa
or
push
leave
jno
jbe
dec
push
jno
inc
das
sti
push
sub
xor
xlat
insl
mov
pushf
lock
repz
mov
aas
outsb
arpl
pop
test
fucomip
cmp
inc
xor
cld
push
add
add
fucom
mov
push
hlt
ljmp
sbb
das
int3
adc
rorb
add
mov
movsl
mov
cmp
dec
mov
test
sbb
cltd
test
mov
andl
stc
sbb
jns
loop
xor
mov
lahf
rcrl
ret
sbb
mov
mov
scas
mov
fwait
ljmp
movsbl
inc
or
mov
ret
daa
or
jns
dec
mov
add
mov
stc
sbb
daa
jbe
js
or
out
pusha
cmpsl
fmuls
dec
push
std
iret
pop
fstpt
and
push
insl
inc
add
mov
into
rcrl
dec
fdivl
loop
jb
mov
ja
fisubrl
js
fmuls
fdivrl
popa
push
jecxz
lods
inc
jns
xchg
ds
and
rclb
mov
add
mov
mov
mov
mov
push
jo
aad
jnp
dec
ror
mov
adc
mov
mov
add
adcl
xchg
pop
inc
and
bts
fldenv
sbbl
dec
mov
rcrb
cwtl
fisttps
stc
xor
out
fdivrs
mov
cwtl
lret
xchg
das
movsl
shrl
pop
fildll
sub
xorb
mov
lods
or
in
int
mov
jecxz
and
int
jne
fistpll
lock
jns
cmp
mov
sub
pop
mov
clc
mov
add
push
pop
and
xchg
pop
add
rcll
dec
es
sbb
pop
scas
xchg
leave
loopne
mov
jae
sbb
ljmp
loop
enter
sbb
inc
pop
into
dec
inc
mov
repz
enter
jb
and
xlat
mov
inc
push
mov
es
jne
cmc
movsb
hlt
mov
sub
movsb
xor
add
cmp
xlat
sbb
adc
mov
jb
jne
mov
push
cmc
divb
push
pop
loopne
dec
fsubl
out
dec
push
addl
cli
xchg
sbb
daa
xor
xchg
and
out
lods
out
jnp
jne
sbb
cmp
leave
cmc
dec
mov
repz
inc
mov
aas
xchg
xchg
mov
mov
xchg
rcr
adc
pop
mov
mov
mov
mov
mov
cld
loopne
jle
and
jecxz
js
es
les
das
and
les
lret
mov
or
mov
sbb
add
mov
repnz
jno
adc
lret
push
inc
in
adc
or
pushf
inc
and
aad
xor
sbb
lods
sti
int
gs
mov
sub
xor
popa
test
mov
shrl
test
jge
jecxz
xorb
in
push
int
mov
ffreep
popa
repnz
push
lcall
div
iret
mov
sahf
inc
push
out
cmp
pop
gs
sahf
mov
xchg
outsb
rolb
mov
or
mov
jg
cmc
fbld
push
sub
jecxz
in
pop
aam
pop
fisubrs
push
imul
rcr
adc
nop
lea
movsb
in
push
mov
iret
pusha
xchg
xor
adc
push
mov
add
in
dec
lret
mov
loopne
xchg
cmpsb
xchg
xchg
je
lds
sbb
jnp
pop
mov
test
inc
cltd
clc
add
push
les
subl
popf
pop
mov
data16
cmp
push
lcall
and
push
cmp
int3
xchg
sbb
xchg
mov
and
mov
xorb
cli
sub
and
jmp
pusha
outsb
or
daa
mov
scas
fistps
cwtl
dec
pop
xor
es
in
ljmp
enter
les
int3
xchg
xchg
into
pop
loopne
std
inc
in
mov
shlb
or
add
fisttps
lea
mov
lcall
ret
mov
inc
adc
mov
push
les
xchg
fisubrs
in
jbe
pop
mov
adc
xchg
imul
and
mov
lock
mov
lods
out
xchg
add
adc
adc
cwtl
add
mov
push
cmp
popf
adc
repz
jno
test
add
nop
adc
subl
pushf
xchg
test
lock
fcompl
jns
xchg
xchg
or
add
mov
ljmp
das
jl
and
fbld
out
or
mov
ljmp
popf
mov
pushl
loope
pop
scas
xchg
loope
arpl
jbe
sbb
push
out
je
push
jbe
mov
xor
or
dec
inc
sub
stos
adc
sbb
cmp
mov
es
out
fst
cmp
mov
in
sub
dec
inc
fwait
data16
dec
dec
into
jne
int
es
mov
cmc
pop
fwait
rcrl
and
pop
xor
and
mov
dec
movsb
and
or
ljmp
imul
push
push
popf
sarb
cmp
int3
clc
andl
popf
inc
sbb
daa
in
xchg
dec
mov
dec
aam
lds
cs
and
mov
add
ret
jmp
mul
jg
call
out
pop
rcrl
js
push
test
movsb
mov
push
jno
sbb
arpl
add
cltd
and
shrl
mov
out
ret
enter
adc
flds
inc
das
pop
xchg
fs
lods
mov
mov
adc
add
cmp
and
insl
dec
movsb
orl
dec
xchg
sub
mov
es
aas
inc
inc
in
jbe
repnz
cmp
lahf
outsb
fwait
push
out
and
cmpsl
aad
scas
insl
xor
cmc
stos
jo
neg
es
in
gs
xchg
outsl
in
sub
push
mov
fcompl
mov
into
fwait
inc
in
insb
push
ds
push
mov
loope
pop
xchg
jns
ret
mov
xor
add
add
xchg
mov
jb
popf
and
test
stos
dec
loopne
dec
dec
xor
into
stos
adc
push
popa
xchg
push
int3
mov
sbb
cmpsb
mov
mov
adc
jmp
pop
nop
ljmp
cmp
int3
stos
mov
adc
jno
xchg
jge
and
ljmp
fisttpll
xlat
push
mov
repnz
jns
or
mov
jne
mov
add
fmull
sahf
cmp
addr16
adcl
cmp
mov
xor
test
jmp
mov
xchg
inc
aas
dec
in
dec
or
pop
mov
aas
xchg
cmp
fwait
popa
push
int
mulb
les
lea
imul
adc
daa
stos
movb
ja
jno
lahf
push
lahf
inc
rcl
mov
add
jmp
jnp
lret
sub
stos
sbb
rcr
loope
fisubrs
cmp
mov
sarb
mov
sub
cmc
fldl
or
mov
fcoms
stos
in
lahf
adc
sar
in
mov
mov
push
mov
dec
pusha
pushf
jbe
shll
fnstcw
mov
ds
ljmp
std
fimuls
dec
mov
dec
les
es
mov
add
sti
icebp
out
bound
jmp
imul
in
xor
mov
leave
cltd
or
popf
mov
lds
cs
dec
push
std
out
sbb
or
cmp
stos
int3
sbb
jb
xchg
scas
mov
repnz
xor
mov
pop
xchg
mov
add
cmp
mov
data16
aad
fsts
mov
cmp
call
es
jmp
cmp
mov
push
mov
xor
je
cmp
leave
pop
and
xlat
add
sti
out
mov
jne
cmc
data16
outsl
icebp
insl
fsub
fists
push
cmp
iret
sub
xchg
dec
inc
jb
scas
scas
int3
popa
push
imul
leave
insl
xor
lahf
jno
mov
call
jo
fdivrl
jb
pop
dec
mov
jnp
fwait
inc
push
push
scas
je
jg
jecxz
bnd
mov
test
dec
in
stos
andl
clc
inc
std
jnp
sbb
repnz
fstpt
xchg
inc
pop
xor
push
inc
movsb
jnp
std
adc
inc
push
jl
shrb
ljmp
jne
popf
mov
std
cli
mov
lahf
pop
fsubs
dec
loope
out
bound
ret
cmc
sbb
or
addr16
push
addb
dec
gs
push
jno
pop
xchg
jge
dec
into
lret
xorl
adc
mov
xor
and
push
dec
push
aas
mov
hlt
fnstenv
add
bound
repz
sub
loope
push
xor
mov
imul
xorb
mov
imul
xor
or
lret
dec
aas
dec
cltd
xchg
and
mov
sbb
and
push
inc
negl
and
lcall
jmp
movsl
sahf
xchg
add
fsubrs
inc
pop
push
mov
leave
dec
fsubrl
jo
scas
dec
das
hlt
xchg
cmp
mov
adc
fdivrl
ljmp
fwait
enter
xor
push
shrl
mov
mov
add
mov
fidivl
pop
xorb
shrl
pushf
inc
inc
or
fcoml
fadd
bound
xchg
and
add
add
std
mov
mov
out
and
loop
sub
sti
sub
cmp
mov
pop
repnz
shl
test
loopne
cmc
mov
jp
iret
fcos
mov
and
pusha
xchg
mov
mov
pop
aas
sbb
rcrb
ljmp
pusha
xchg
repnz
sub
popf
test
lds
notl
inc
sbb
stos
ss
mov
paddsw
jge
mov
mov
pop
pop
mov
es
jnp
sahf
fnstcw
push
sbb
pop
pop
nopl
jp
ljmp
out
jp
lods
sbb
jmp
push
adc
test
loope
sbb
dec
cmp
jae
movsl
cmp
and
mov
stos
jnp
jmp
sub
push
sbb
add
cmc
push
jle,pt
jmp
pushf
or
fimull
mov
inc
mov
xorl
add
xchg
mov
cmp
repnz
xchg
mov
loopne
adc
or
in
cmp
jo
mov
fidivrl
jle
test
push
stos
jo
sti
lods
inc
mov
xchg
shrl
dec
sti
dec
iret
out
and
std
mov
decl
and
adc
hlt
imul
jb
ljmp
sbb
outsl
mov
and
jl
mov
das
adc
xlat
mov
pop
cmp
icebp
cmp
push
adcl
pop
aas
cmovs
and
pop
lock
sub
in
sub
mov
xchg
fs
pop
cs
sbb
shl
pop
les
inc
mov
inc
lock
add
stos
jae
call
push
inc
pop
leave
lock
mov
xchg
and
jmp
rcl
and
lock
cmpsb
dec
out
mov
push
inc
pop
add
pop
fcoml
jle
sbbb
imul
cmpsl
inc
div
jle
je
sub
ss
into
test
jge
push
adc
add
cld
fs
cmp
xchg
mov
mov
lods
repz
fidivs
mov
fisttps
lods
inc
sbb
fsubr
sub
iret
fnstsw
pop
pop
cmpb
popf
out
divps
aad
cmc
push
xchg
lret
dec
hlt
outsb
and
subl
and
sbb
sub
les
subl
mov
lea
scas
pusha
or
cs
fwait
cs
int
movsb
push
mov
loop
filds
xchg
xor
sbb
popa
inc
or
xor
mov
pop
mov
in
pushf
fistps
sbbl
xchg
idiv
sbb
or
inc
cmp
pop
in
xchg
ret
in
aas
daa
repz
and
lret
jno
notl
ljmp
testb
rcrl
sub
pop
insl
xor
mov
jge
or
movsb
jae
in
jmp
ljmp
or
test
fwait
mov
add
popa
jae
mov
xchg
add
cli
rcrl
push
loop
test
xor
daa
imul
push
aam
stc
jmp
mov
les
mov
sbb
adc
xlat
mov
mov
cmpsb
ret
daa
jne
dec
push
lret
pop
enter
repnz
ds
xchg
cmpsb
cli
sbb
out
test
xor
add
or
test
mov
sbb
insb
mov
test
cmc
pop
lea
xchg
jle
outsl
out
mov
mov
popf
add
stos
mov
xchg
mov
fwait
rolb
sbb
push
popa
inc
fldcw
xor
stc
fcmovnu
cmp
sbb
jae
sbb
mov
mov
pop
or
aad
adc
pop
mov
pop
faddl
aad
push
orb
int3
xchg
clc
stc
sbb
sar
mov
lds
addr16
hlt
add
pop
xor
jmp
lods
testl
mov
inc
popf
jnp
out
mov
inc
js
xchg
adc
in
adc
push
sub
jl
sbb
ret
sub
push
inc
jl
push
add
mul
icebp
loop
lret
xor
pop
mov
sbb
xchg
mov
je
adc
xchg
add
das
lds
pop
icebp
inc
fiadds
xor
imul
idivb
pop
outsb
push
jne
sub
test
dec
sarb
fstpl
mov
pop
pop
mov
lods
bound
sub
or
inc
aad
movsl
sub
data16
in
inc
xor
aad
frstor
outsl
icebp
pushf
sbb
cld
test
jno
das
push
testb
push
mov
insl
call
jl
fistpl
or
xchg
ror
jp
ss
sub
scas
jmp
in
ss
fdiv
jle
je
imul
push
test
xor
ret
sbb
call
xor
pushf
push
xchg
xchg
or
dec
add
pushf
ds
das
push
mov
inc
cmp
loop
mov
push
push
lods
test
sbb
dec
and
ja
insb
push
pop
pop
fisubl
mov
xchg
cmpsl
out
jmp
mov
jge
or
jne
and
or
out
push
movsb
outsb
add
outsb
push
jecxz
adc
flds
loopne
fptan
push
or
lretw
or
mov
sub
and
movl
leave
and
pop
pop
test
dec
int
hlt
js
addr16
ds
push
es
test
add
cpuid
dec
mov
fstpt
cmp
push
sub
fidivrs
push
outsb
jae
jae
cmp
xor
call
movsl
sub
js
adc
mov
push
jae
mov
ror
push
and
xor
adc
xchg
jmp
loope
mov
sub
mov
rcrl
add
dec
lds
push
mov
js
fwait
xor
xchg
incb
daa
dec
pop
dec
push
mov
repnz
jns
adc
adc
ja
popf
jno
mov
sub
adcb
sbb
test
stos
mov
dec
outsb
sbb
ja
fildl
mov
imul
mov
sbb
lods
push
loope
add
fincstp
out
mov
sbb
mov
lods
ret
mov
loopne
xor
add
mov
cmpsl
mov
mov
sub
pusha
cmp
cmc
popa
mov
hlt
and
add
inc
sbb
adc
pop
or
xchg
out
andl
arpl
xlat
sub
sti
addr16
out
outsb
push
xor
mov
lahf
mov
mov
inc
aad
xlat
sub
pop
ret
push
fmull
cmp
in
fcomi
sub
test
lods
dec
xor
xchg
or
xor
ss
and
push
mov
orb
stc
lret
sbb
aam
insl
js
clc
fstps
lock
testl
xchg
push
hlt
inc
xchg
daa
sahf
imul
xor
add
push
xchg
cmpl
push
stos
cmp
xchg
jmp
or
iret
add
les
adc
call
in
das
push
cmp
mov
arpl
jne
sub
scas
mov
pop
incl
scas
test
mov
outsb
pushf
lahf
sub
ljmp
shrb
sbb
loop
or
push
add
mov
andl
inc
push
stos
adc
outsb
testl
mov
arpl
inc
mov
jmp
push
roll
xchg
dec
shrl
cmp
sub
insb
sbb
das
inc
testb
xchg
jae
outsl
add
enter
lods
fwait
add
xchg
jb
leave
imul
push
scas
aam
xchg
sub
mov
and
sub
ret
into
pop
sbb
mov
mov
mov
dec
outsl
xchg
in
pop
push
jp
or
mov
mov
pop
mov
call
inc
jae
lahf
cmc
add
jg
imul
mov
pop
or
jne
inc
cmp
push
sahf
cld
loop
lret
inc
add
rorb
mov
dec
int
ret
adc
je
dec
ds
jg
mov
push
mov
xor
or
out
out
cs
insl
mov
outsl
dec
xor
js
or
jnp
aaa
mov
and
adc
adc
enter
mov
mov
icebp
push
mov
out
sbb
inc
cmp
sub
sbb
pop
add
pushl
aam
imul
in
shl
jns
mull
insb
jp
xchg
out
inc
and
mov
xchg
dec
xor
add
aas
call
pop
orl
adc
or
jg
sbb
pop
fsts
dec
jb
cmp
stos
fiaddl
movsb
fldcw
pop
cmc
pop
fnstcw
or
jno
std
mov
outsb
or
loope
setl
scas
xbegin
add
ja
addl
in
mov
jge
pop
pop
das
loope
add
ret
sahf
loopne
or
cltd
push
out
daa
iret
lea
mov
mov
lret
pusha
es
mov
sti
pusha
xchg
in
xchg
sub
xorl
and
dec
scas
xchg
stos
and
shll
push
pop
mov
inc
dec
test
shrb
std
and
enter
sbb
lods
mov
jns
or
ficoms
dec
aaa
test
add
loopne
jle
stos
dec
push
xor
or
push
imul
pop
sti
rcrb
call
stc
cld
sbb
mov
mov
adc
add
mov
fldcw
mov
aam
call
or
shr
fisttpll
inc
mov
push
xchg
adc
test
sub
out
aad
popa
adc
es
scas
or
nop
jp
dec
imul
fisubs
push
sub
in
pushl
insb
arpl
test
cmp
cmpsl
jg
xlat
xor
mov
test
jb
imul
sbb
aaa
test
jmp
test
push
lcall
ljmp
mov
xor
js
or
sub
das
sub
mov
mov
jp
sarl
ret
repnz
lock
out
sahf
movsl
push
jbe
inc
inc
jno
sti
adc
push
loope
mov
xchg
mov
push
cmpsb
mov
repz
sbb
and
adc
dec
pop
sti
dec
fwait
out
fld
int
in
xchg
mov
or
je
jecxz
in
out
popa
dec
dec
dec
mov
imul
pop
mov
jo
mov
mov
jb
cs
adc
bound
adc
outsl
xchg
outsb
xchg
jmp
push
imul
rclb
in
jg
mov
mov
xchg
pop
mov
sbb
inc
dec
sbb
clc
stc
sbb
jge
outsb
push
sub
imul
dec
cmp
inc
int
adc
mov
mov
push
push
fadds
mov
pop
sub
lea
mov
mov
cltd
insb
pop
fisubrl
addl
rcll
push
pop
aas
jl
xchg
cmp
ret
enter
orl
stos
add
jge
mov
stc
and
shrb
ret
xchg
pop
mov
jp
faddl
fnstenv
cmp
push
mov
arpl
popf
mov
sbbl
push
lret
mov
add
xor
imul
mov
push
push
rcr
mov
rcrb
cltd
xor
lret
mov
repz
movsl
push
int3
sarb
lock
bound
das
add
lcall
lahf
sbb
mov
in
xchg
iret
jbe
lea
sub
cmpsl
stos
pop
mov
bound
mov
push
fs
sbb
dec
dec
jae
mov
push
sub
xor
or
cmc
mov
and
in
mov
cmpsl
fildll
orl
mov
insb
cmpsb
loope
cmp
sbb
and
dec
aad
aad
or
dec
aas
incl
mov
je
cli
xor
pushf
inc
push
mov
in
into
out
mov
cwtl
pop
adc
adc
jmp
lret
xor
stos
mov
adc
inc
movsb
adc
sub
cmp
stos
xchg
inc
pop
jecxz
sbb
push
enter
or
jnp
adc
cmp
adc
mov
repnz
fnstcw
rorb
pop
and
or
cmp
popa
lret
add
pop
movl
scas
ljmp
jle
dec
pushf
mov
pop
cmp
imul
outsb
adc
mov
jecxz
mov
aad
adc
ret
in
jge
repnz
push
jae
cltd
cltd
lods
lret
jne
loop
in
fsubr
aas
je
into
push
sahf
xchg
push
cld
sbb
push
inc
out
into
xor
dec
das
push
and
xchg
push
test
mov
jp
into
push
pop
mov
push
push
ret
push
jae
hlt
sub
outsl
into
cmp
xchg
loopne
std
inc
mov
pushf
out
fwait
fwait
into
int
push
mov
cmp
dec
insl
bound
mov
loope
xor
mov
jmp
repnz
out
out
lods
outsb
and
gs
xchg
cmp
hlt
shrb
cld
add
movsl
and
push
fcomip
lds
in
js
std
outsb
jl
ret
and
pop
add
sub
jno
pusha
dec
pop
xor
stos
loop
inc
shlb
cmp
xor
xchg
inc
aam
aam
xlat
add
mov
mov
mov
xlat
fisttpl
xchg
cmp
add
and
test
aad
mov
xchg
push
xor
jae
jecxz
sub
repz
test
movsb
shl
cli
test
inc
mov
jp
mov
out
lods
push
cli
mov
cmp
fwait
inc
stos
cmc
fwait
lcall
mov
push
and
clc
and
je
or
add
or
in
stc
mov
ja
adc
mov
adc
loopne
mov
lock
bound
inc
aas
outsl
mov
js
fisttps
mov
popa
or
cmp
pavgb
mov
rcll
mul
fimull
dec
test
loop
push
add
add
sbb
cmc
cmp
imul
inc
mov
mov
mov
mov
pop
mov
add
aaa
test
cwtl
push
outsl
sbb
daa
dec
shlb
mov
mov
lahf
pop
movsb
xchg
jne
pop
pushf
dec
sbb
add
mov
mov
or
sub
pop
test
mov
inc
ds
and
fistl
pushf
loope
jnp
lret
aam
jl
inc
cmp
push
arpl
test
lcall
jne
sbb
xchg
pop
int
push
bound
lcall
pop
dec
xchg
push
popa
lahf
dec
add
inc
adc
dec
xchg
add
out
pop
mov
outsl
out
mov
ds
out
aam
std
mov
or
xchg
loop
dec
xorb
jg
jbe
push
dec
dec
jecxz
rolb
and
sub
dec
or
inc
fcoms
outsl
pop
and
loopne
xor
cmp
ds
div
jae
rorl
addr16
fisttpll
lock
loope
decl
test
xchg
pop
xchg
cld
std
repz
inc
sahf
subb
insl
ljmp
cmpsb
cmp
mov
cmpsb
aas
gs
test
cld
mov
mov
xchg
stc
inc
cmp
push
pop
xchg
aad
push
imul
test
jge
push
inc
dec
in
cmp
jb
out
jmp
dec
ret
int3
mov
mov
lock
xor
mov
stos
inc
push
sahf
cmpsb
cmp
out
xor
data16
int
stos
sbb
jge
fcomps
cmp
movsb
pop
jns
movsl
scas
jl
and
je
je
push
lds
inc
jb
push
or
sub
pop
pop
ljmp
jns
insl
lcall
mov
push
in
mov
clc
jle
add
push
add
add
bound
repz
jno
or
dec
loope
mov
out
out
outsl
js
lret
aaa
sarl
mov
sbb
sbbl
out
out
leave
ret
cmpsb
jbe
das
scas
icebp
insb
enter
addr16
and
stos
mov
ljmp
insl
test
clc
dec
test
clc
dec
push
mov
cltd
or
in
inc
outsl
mov
jbe
or
cmc
fcoml
dec
loop
ds
in
loop
xor
jbe
leave
push
loop
jo
cli
push
sbb
cmpsl
push
adc
insl
aaa
adc
and
outsl
xor
xor
ja,pn
push
andl
jp
sti
push
in
mov
push
ljmp
push
out
inc
mov
or
aaa
pusha
movsb
test
movb
push
pop
fsubrp
jno
sub
cmp
xor
test
in
or
repz
cmc
fidivrl
into
dec
sub
loop
add
adc
shlb
push
jp
and
adc
mov
loopne
shrb
gs
dec
cmp
mov
jne
mov
movsl
shlb
dec
cs
xor
aas
cmpsl
xor
lcall
adc
push
fsts
repnz
adc
push
mov
mov
loop
add
jmp
arpl
dec
pop
sahf
imul
mov
adc
in
roll
push
mov
pop
mov
xchg
ret
jmp
ret
xchg
mov
fs
int3
mov
xchg
add
ret
arpl
and
sub
push
cmp
xchg
rorb
out
jae
sti
fidivrs
xor
jmp
jl
clc
test
outsl
fmull
mov
test
mov
lret
lcall
and
xchg
lods
mov
and
rolb
or
dec
xor
or
ljmp
mov
outsl
inc
dec
sbb
fisubrs
jnp
jecxz
adc
jge
je
mov
negl
mov
sti
imulb
enter
jae
mov
arpl
sub
bound
repz
movsl
out
push
jecxz
pop
or
cltd
adc
out
mov
and
rcr
mov
ds
pushfw
mov
daa
adc
mov
in
jns
push
mov
pop
mov
movsl
dec
ljmp
jmp
fwait
xchg
adc
lods
jns
push
sbb
or
test
sbb
sub
push
xor
sub
out
and
or
push
cltd
icebp
push
mov
cmc
or
movsb
or
movsb
or
mov
xorl
jne
dec
insl
fnstsw
adc
and
mov
mov
scas
jge
pop
test
les
das
push
loop
mov
and
cmpsb
test
jge
inc
or
leave
xor
push
fdivs
add
pop
lods
mov
out
dec
lods
out
lea
push
cltd
cld
mov
and
sbb
mov
pop
ret
outsb
arpl
pop
cmpsb
jmp
inc
or
adc
or
add
call
jo
das
jge
popa
and
fsubs
push
stc
fldt
mov
fisttpl
jl
cltd
out
into
xorb
fistpl
push
imul
popa
jns
fsubrs
inc
and
or
dec
in
test
add
mov
addl
mov
aad
je
icebp
push
movsl
aam
pop
fidivs
xor
dec
add
repz
push
inc
mov
sub
push
int3
sbb
xchg
push
xor
xchg
addr16
jbe
sbb
jmp
adc
dec
push
movsb
sub
adc
inc
rolb
xchg
out
mov
lretw
dec
sbb
inc
lret
cmp
xchg
stos
aaa
cs
pop
cltd
fwait
xchg
sub
push
rclb
pcmpeqd
push
push
mov
mov
out
dec
xchg
jge
inc
sarb
cltd
daa
ficompl
mov
mov
cmovbe
pop
adc
aas
add
or
call
cmpb
sbb
add
pop
mov
in
fnstcw
mov
pusha
push
adc
sub
inc
sub
and
push
mov
arpl
stc
xlat
push
std
inc
jecxz
out
imul
sub
sub
mov
pushf
dec
cmp
jge
mov
leave
add
push
mov
stos
sbbb
add
mov
mov
push
fs
mov
stos
aaa
std
les
inc
sbb
cmpsl
xor
aaa
sub
rorl
ret
mov
mov
rorb
jl
fidivrs
adc
lahf
ror
adc
stos
mov
pop
shrb
pop
mov
sbb
xchg
inc
push
jbe
push
mov
outsb
inc
inc
into
sbb
and
or
mov
or
outsl
lods
jo
and
sub
jecxz
imul
push
test
adc
jae
lahf
push
jp
mov
test
test
imul
jns
imul
cmp
stos
out
test
bound
pushf
jmp
mov
mov
fstl
mov
test
data16
pushf
insb
cltd
dec
sub
test
es
int3
xchg
mov
cmp
rcrb
push
or
stos
and
pop
inc
popf
or
mov
mov
dec
mov
ljmp
xchg
jo
iret
cmc
xorl
or
imul
adc
and
xchg
jne
lret
pushf
cmp
mov
xlat
rcrl
sbb
sub
xor
subl
pop
and
push
cmp
ss
lcall
std
sub
outsl
in
jmp
dec
push
or
sbb
mov
test
imul
xchg
mov
sbb
loop
int
dec
in
mov
es
sbb
cmpsl
inc
sahf
popf
jo
lret
cmpsb
mov
inc
adc
idivl
xor
test
jae
fistpl
mov
inc
mov
sub
fistpll
scas
ret
dec
mov
int3
adc
add
stc
outsb
cmp
js
insl
push
and
mov
decb
aas
sub
ja
iret
mov
int3
loope
test
inc
fisubrl
into
inc
dec
mov
dec
daa
sub
mov
xor
test
imul
cmp
jl
fsubrs
cld
ret
int3
xchg
imul
cltd
dec
cmp
cld
mov
dec
test
sub
sbb
repnz
mov
cmp
push
ljmp
mov
push
xchg
dec
dec
nop
sub
aas
jnp
std
addr16
mov
test
mov
mov
inc
pop
in
lret
jge
out
xchg
mov
jl
imul
loopne
ficomps
ds
adc
lret
fsubl
test
xchg
inc
aad
pop
cmp
enter
in
daa
das
sub
or
scas
idivl
pop
push
sub
in
sbb
sbb
lock
xorb
lahf
add
cmpb
jge
cmc
jmp
stos
pushf
movsb
ds
ret
cmp
cmpsl
jge
add
data16
cli
int
inc
sbb
mov
inc
xchg
fcompl
inc
adcl
loope
ret
xor
mov
negl
mov
pop
rcr
mov
test
psrad
cmc
jno
jl
mov
cmp
mov
and
or
jo
test
xor
stos
mov
xor
mul
pop
sarb
ficoms
mov
test
jge
cmp
inc
jge
scas
xchg
les
gs
fmuls
push
pop
push
sbb
bound
push
fisubs
sub
das
mov
inc
xor
lods
jnp
sarb
mov
mov
push
or
mov
imul
call
movsl
xchg
cmc
arpl
mov
fisttpll
mov
lea
sbb
jl
enter
fsubs
test
fildl
jle
mov
push
push
push
lock
inc
sbb
cmpsb
icebp
in
xchg
mov
pop
ficompl
fisttpll
cmp
jle
lcall
xor
mov
mulb
sub
movsl
jbe
mov
mov
push
ret
movsb
pop
test
mov
cwtl
test
add
ficompl
and
sub
cmova
sarb
test
stos
mov
nop
sub
or
and
xor
cmp
mov
sub
mov
dec
movsl
mov
orb
pop
mov
add
add
or
cmc
sbb
int3
jb
mov
jp
test
scas
xrelease
mov
iret
adc
in
pop
xchg
fs
rcrb
shrb
jbe
or
addr16
sbb
jg
sub
jo
movsb
pop
dec
frstor
cwtl
data16
jge
nop
test
dec
mov
mov
cmp
popf
orl
popa
mov
mov
cmpsb
and
xchg
push
cmpsb
cmp
inc
in
mov
xor
push
xor
lods
lods
mov
pop
jmp
pushf
sti
scas
jae
loop
inc
pop
xchg
cmp
movsb
rcll
jmp
pop
dec
and
addr16
inc
iret
cli
push
aas
inc
lock
or
mov
jmp
xor
inc
mov
lods
repz
jecxz
andl
int
aad
mov
cmp
cmpsb
or
cwtl
cmp
adc
xchg
mov
scas
inc
imul
jp
lret
mov
push
jmp
dec
add
xchg
pop
int
aam
addr16
sbb
fildl
gs
test
sti
int3
adc
lds
jp
cli
fisttpll
test
divb
adc
pop
jge
sub
inc
into
xlat
push
lods
test
jo
pop
lret
xlat
shll
in
sbb
in
sbb
imul
sarb
inc
ja
aam
xor
sbb
lods
test
scas
bound
jmp
cmp
add
pop
imulb
fadds
adc
adc
pop
push
mov
jno
adc
imul
cs
adc
scas
andl
subb
inc
mov
loopne
sbb
jecxz
rclb
inc
shll
cmp
scas
push
xorb
into
jmp
cli
push
out
lret
popf
inc
mov
jecxz
push
mov
mov
iret
pop
push
popa
out
jp
iret
mov
adc
sbb
xor
adc
lods
add
movsl
push
adc
push
fsub
pushf
mov
or
push
cmp
pop
sbb
push
mov
add
icebp
xchg
push
cmp
sub
iret
js
adc
mov
inc
lds
add
pusha
out
lret
test
push
cmpsb
test
pop
addb
or
xor
jne
scas
adc
adcl
iret
out
pop
out
shll
imulb
test
stc
mov
mov
iret
ds
mov
dec
lcall
cltd
xor
lret
inc
inc
out
or
mov
bound
push
dec
mov
ret
out
jp
xlat
addr16
cli
pusha
mov
push
sub
addr16
shrl
sbbb
xor
mov
push
nop
imul
push
pop
addr16
inc
xchg
adc
out
sub
dec
xchg
test
adc
adc
test
cmp
mov
inc
insb
sbb
mov
nop
xor
movsb
pop
jno
fwait
xlat
scas
pop
in
fldcw
out
jne
cmpsl
inc
or
dec
loope
rorl
inc
or
scas
pop
arpl
push
gs
mov
insl
inc
pop
dec
in
inc
iret
add
aam
sub
stos
test
xchg
aas
lods
cmc
imul
movsb
mov
push
xchg
rorl
and
mov
push
adc
sti
dec
out
out
fldt
cmp
in
and
ja
sarb
das
add
jnp
jge
or
sti
inc
ror
mov
mov
adc
inc
or
lret
cmp
loop
sub
lret
out
push
fwait
mov
dec
jmp
xchg
lret
mulb
fsubp
mov
scas
adc
fs
call
push
mov
lea
cld
rolb
pop
xchg
push
xchg
pop
sub
mov
out
and
mov
xor
adc
sub
add
and
addr16
negb
bound
dec
fisttpl
pop
addb
adc
xor
pop
push
xor
add
adc
mov
test
rcrl
shr
pop
mov
in
sub
ret
jno
out
or
loope
repnz
jle
xor
jns
sub
popa
push
fcmovbe
lahf
incl
push
pop
stos
add
mov
push
int
and
ja
adc
iret
arpl
push
mov
push
lock
lcall
repz
dec
test
lea
flds
push
push
pusha
sub
jno
sub
addb
xor
add
or
divl
es
pop
cmpl
dec
mov
fiaddl
sbb
dec
les
sub
scas
hlt
bndstx
ljmp
out
popa
or
outsb
add
dec
pop
adc
outsl
jg
mov
mov
jbe
mov
test
jecxz
call
fistl
jmp
int
jns
rol
cmpsb
xor
lock
push
cmp
xchg
out
aad
aad
out
jns
scas
in
dec
sub
js
dec
push
imulb
aad
sbb
iret
mov
pop
rolb
mov
push
sub
add
adc
loopne
cld
inc
test
cmp
xchg
sub
adc
pop
outsl
insb
lock
push
test
clc
sbb
popa
dec
xchg
nop
sar
mov
sti
mov
scas
in
int3
std
imul
xor
in
sbb
dec
mov
push
cmpsl
stos
lea
mov
mov
inc
jbe
dec
repnz
out
mov
aad
loop
inc
fwait
pop
mov
mov
int3
mov
lock
aas
loopne
xlat
mov
icebp
mov
sbb
in
leave
jecxz
cmc
out
dec
jo
and
add
mov
fldl
xlat
pop
stos
or
loopne
dec
daa
dec
outsb
xchg
cltd
and
lods
es
cli
lods
jb
dec
or
mov
out
ror
pop
enter
loope
pushf
mov
stos
dec
push
cmpsb
popa
insb
stos
bnd
lds
xor
mov
mov
outsb
hlt
sbb
je
inc
aam
jae
cmp
andl
data16
adc
inc
sahf
sub
fimull
jmp
dec
and
cmp
push
push
and
xchg
adc
and
push
or
and
inc
movb
pushf
push
xchg
push
mov
mov
mov
push
ja
mov
out
inc
lock
add
mov
xchg
mov
rcrl
xor
and
adc
test
scas
push
test
mov
cmp
sub
scas
into
xor
cmp
lret
mov
adc
sub
push
adc
clc
inc
push
popf
in
mov
or
sbb
je
es
ja
push
movsl
cmc
sub
js
inc
leave
lcall
sbb
xchg
xchg
or
lods
lock
add
insl
push
mov
and
rcrb
shll
hlt
icebp
wbinvd
inc
jl
and
mov
inc
mov
or
lods
jne
mov
rclb
lcall
insl
jns
fcmovb
add
iret
test
add
sub
aaa
leave
pop
mov
mov
sar
dec
insl
ljmp
loope
and
cmc
call
sub
jecxz
test
mov
sbb
add
test
lahf
add
fiaddl
sbb
in
pop
xchg
in
jmp
jmp
stc
rolb
or
and
mov
testl
and
pop
mov
aas
xchg
sub
mov
cmp
lahf
sbb
or
pop
sbb
xor
xchg
or
test
pop
shll
jmp
cmp
adc
rcl
add
mov
mov
test
pop
fiadds
sub
mov
add
test
and
sbb
lods
jmp
jp
mov
popf
jmp
clc
pop
dec
cld
add
mov
push
cs
fldl
push
fwait
push
test
pop
mov
mov
mov
jl
sbb
jg
sub
sbb
sub
xchg
cld
int3
and
stos
jnp
add
fsubs
xchg
aam
mov
jno
sub
xchg
mov
insb
jae
bound
daa
and
into
sub
cmp
xchg
leave
gs
jmp
adc
mov
imul
test
rolb
btr
xchg
fstps
sbb
or
pop
jmp
mov
ud2
mov
adc
pop
imul
ss
jg
frstor
or
insb
fdivl
scas
cmpsl
or
fcompl
cli
fisubrl
xlat
xchg
bound
sbb
mov
pop
add
sub
pop
adc
push
mov
je
jecxz
nop
add
lcall
inc
mov
inc
xchg
jns
cmpsl
jl
nop
adcb
testb
pop
cmpsb
xchg
jp
sub
inc
dec
mov
sbb
pop
fdivrl
ja
mov
mov
lods
add
insb
cld
ret
flds
mov
dec
mov
fildl
pop
jmp
jp
pop
iret
mov
mov
inc
and
xchg
inc
mov
or
lea
add
xor
or
push
xchg
or
divl
out
sub
lods
sbb
popf
mov
lret
push
sbbb
testb
sbb
popa
popa
pop
shrb
mov
mov
add
je
adc
lods
popf
cmpsl
adc
dec
iret
fidivl
leave
test
add
dec
pusha
imul
xchg
cli
mov
adc
int
lods
ret
js
cmpsl
cmp
or
das
xor
shll
jnp
femms
pop
xchg
das
cmp
call
sbb
jae
roll
lret
in
mov
add
aaa
push
movsl
int3
dec
shr
js
daa
mov
incl
hlt
xor
fwait
es
cmp
or
xchg
sub
clc
scas
js
shll
sub
xchg
jb
bound
aad
inc
daa
enter
push
mov
enter
mov
mov
push
ret
jo
rcll
fdiv
jg
movsl
add
xor
lods
cld
ljmp
rclb
test
mov
xchg
or
cld
hlt
push
sbb
mov
movsb
inc
dec
cmpsb
lcall
loop
nop
sahf
sarb
insl
push
lret
pop
pop
enter
xchg
fnstsw
in
mov
fmulp
or
fldenv
jecxz
imul
xchg
and
mov
mov
mov
mov
pop
test
cli
dec
push
xor
mov
dec
ret
popa
or
pop
lahf
loopne
sbb
sub
pop
lahf
repz
add
cmovs
xor
lret
fdivrs
adc
push
ds
adc
mov
mov
es
in
inc
mov
std
mov
pop
mov
mov
popf
cmp
adc
add
and
jne
lcall
push
jnp
daa
lea
pop
in
cmp
jns
inc
scas
lret
pop
mov
mov
inc
xchg
lods
call
push
loop
xchg
data16
mov
mov
adc
mov
mov
out
mov
nop
mov
sub
cmp
push
in
lcall
xchg
or
loopne
mov
cmp
insb
push
movsl
add
dec
push
pop
outsl
ficoms
xchg
mov
mov
inc
jecxz
es
pop
pop
pop
cmp
cmp
push
fisttpll
jl
loopne
jae
mov
ss
cli
sbb
pop
lods
mov
imul
jbe
jl
shrl
jae
add
std
cwtl
pop
xor
enter
divb
leave
and
dec
dec
inc
adc
jne
in
int
outsl
xchg
pop
iret
push
push
add
loopne
mov
sbb
dec
push
sub
outsl
push
dec
cmp
mov
cmp
les
pop
bound
clc
mov
imul
out
push
cld
jnp
cmp
loopne
xor
inc
xchg
lcall
out
dec
mov
xorl
push
sbb
cmpl
push
dec
in
or
mov
xor
fldz
mov
ret
mov
lahf
sub
imul
mov
mov
push
inc
inc
push
jno
mov
nop
or
dec
sub
and
int
jbe
cmp
outsb
ss
stc
sarl
push
loop
jno
cmp
dec
sbb
xlat
adc
out
loope
jmp
loope
mov
movsl
gs
sbb
dec
xchg
add
inc
mov
jb
into
push
pop
inc
call
je
cmpsb
fdivl
or
sbb
sbb
ret
enter
ljmp
cmp
popa
pop
lock
mov
es
mov
mov
sbb
xchg
icebp
dec
ss
cld
xor
ret
xchg
jno
lret
pop
imul
adc
sub
sti
inc
nop
push
scas
cmp
jns
push
xlat
aas
fnsave
cwtl
or
or
aaa
mov
mov
or
push
xchg
jp
push
cmc
or
inc
imul
pop
mov
xor
and
sbb
rcll
push
das
push
push
fdivl
cmp
dec
xchg
mov
lret
fcmovb
mov
sar
stos
mov
push
mov
jno
lret
dec
ret
ja
mov
imul
adc
ds
cmpsl
lds
rclb
addr16
cmp
xlat
fcmovnu
inc
jle
ljmp
call
xchg
int3
xorl
lea
repnz
mov
push
add
out
cld
sub
ss
mov
adc
fstl
adc
xchg
repnz
cmp
lahf
stc
jo
leave
leave
or
enter
mov
fldenv
out
nop
sbb
xchg
rorl
mov
and
add
and
movb
sbb
cld
inc
sti
popf
ljmp
mov
jge
jle
xor
lret
das
hlt
imul
aaa
dec
mov
pop
js
imul
mov
lretw
nop
pop
inc
lods
cmp
movsl
aam
dec
push
mov
leave
push
jb
in
repz
push
les
mov
in
push
leave
fstpl
pop
adc
in
xchg
xchg
pushf
rclb
int3
sbb
loopne
addr16
movsl
in
pop
jae
push
mov
es
mov
and
cmp
push
push
dec
stos
jno
cmpsl
sub
pop
enter
push
shll
aaa
inc
mov
push
mov
sub
hlt
cwtl
outsb
out
mov
push
pop
les
jne
cltd
adc
jge
popa
outsl
outsl
in
pop
cmp
and
sbb
movsb
fildll
cmp
in
mov
sarb
inc
repnz
mov
or
and
fists
test
shlb
fadd
in
leave
push
rcr
fidivrl
imul
roll
or
pop
or
int
jge
sbb
dec
mov
jae
repz
dec
lret
inc
adc
xorb
leave
shll
cmp
shl
xor
xor
cs
cmpsb
test
adc
sbb
xchg
pop
inc
not
std
popf
lret
mov
or
pop
les
popf
int3
cmp
dec
adc
iret
subl
cwtl
cs
loop
push
xor
mov
popf
xor
mov
xor
adc
or
inc
inc
rcr
cmp
imul
dec
subb
loop
mov
cmp
sbbb
ja
mov
sbbb
adc
mov
cmp
pop
pop
les
mov
enter
outsb
in
mov
addr16
mov
jecxz
inc
jmp
jecxz,pn
cmp
jns
test
adc
xor
xor
mov
xor
outsl
cmp
cli
rorw
fnstcw
fsubrs
lds
popa
out
cmc
sti
or
repz
cmp
mov
in
mov
fwait
jne
dec
xchg
push
imul
xchg
sub
xor
dec
jmp
xchg
pushf
dec
xchg
ret
dec
outsb
add
mov
mov
movsb
test
mov
pop
aas
orb
int
sar
ja
jno
imul
mov
jnp
dec
call
add
hlt
cmp
xchg
and
cmc
push
nop
lcall
cmpsb
jo
jb
je
push
pop
and
jecxz
in
rol
addr16
call
dec
sub
andb
mov
push
sub
stos
jmp
xchg
int
mov
stos
and
xchg
aaa
mov
mov
sbb
pop
stc
or
loope
or
sub
push
pop
leave
jge
or
sbb
int
stos
cmpsb
sbb
fdiv
pop
sbb
sbb
mov
inc
inc
dec
in
push
iret
xchg
or
mov
sbb
cmp
je
cmp
out
std
mov
cld
int
jne
jp
mov
and
push
std
shlb
xlat
or
dec
sbbb
imul
push
sti
push
mov
and
add
sti
cmp
call
fstps
add
mov
arpl
loope
mov
stc
cli
mov
mov
incb
in
add
push
cmpsl
sub
nop
mov
mull
sub
inc
pop
ds
arpl
mov
lea
and
outsl
dec
jecxz
mov
pop
cltd
neg
mov
pop
adc
sbb
inc
xchg
push
mov
pushf
or
and
dec
cmp
sahf
mov
xlat
fistpll
mov
cwtl
mov
and
imull
mov
push
mov
push
aam
push
mov
or
mov
or
add
push
inc
fsubp
ja
sub
leave
sahf
lods
sbb
lret
mov
sub
jp
imul
jae
mov
mov
fistpll
rcrl
inc
test
and
icebp
fwait
xor
sbb
leave
ficoms
lods
xchg
inc
mov
sub
pop
xor
lods
sub
and
in
sub
daa
into
mov
jmp
xchg
sbb
add
pop
dec
aam
sub
add
das
dec
pmulhuw
sti
dec
das
ret
lock
out
adc
inc
je
xchg
pop
rclb
mov
fmul
mov
rorl
into
repz
or
jbe
xchg
pop
loop
adc
out
and
movsb
call
push
sub
fwait
jmp
pop
pop
pop
xchg
xchg
xor
pop
dec
push
pop
cmp
sti
in
cld
xlat
mov
jl
pop
lock
inc
mull
xor
xor
mov
std
and
loop
push
or
mov
cli
and
mov
nop
inc
lea
add
jg
sbbl
sti
iret
pop
into
dec
add
inc
cld
sub
push
jmp
cmp
mov
fcoml
fwait
or
mov
pushl
dec
enter
add
inc
xchg
aaa
pop
and
rclw
mov
mov
and
scas
call
fldt
loop
nop
pop
shll
ss
dec
cmpsb
mov
loope
out
out
fwait
or
addr16
mov
cmp
and
adc
adc
jo
mov
mull
dec
out
dec
ss
roll
push
fidivl
in
sahf
sar
test
ficompl
pop
stos
ficomps
fidivrl
cwtl
mov
popa
sbb
add
dec
sti
imulb
pop
lds
mov
add
fidivl
xorl
stc
sbb
jmp
and
pop
sub
xchg
cmp
pop
movsl
sub
sub
jmp
inc
add
jno
mov
jns
int3
mov
imul
pop
out
fisubs
add
loop
sahf
fisttps
pop
es
pop
arpl
mov
rolb
jecxz
scas
jae
leave
and
lret
cmpsb
mov
sub
push
mov
xchg
mov
xor
jg
or
pop
pop
and
mov
clc
cmpsl
mov
mov
lods
cmpsb
mov
fcoml
sbb
xchg
adc
loopne
inc
cltd
cli
adc
sub
inc
or
iret
jecxz
in
sub
xchg
aad
aas
iret
mov
lock
mov
dec
sbb
lock
insb
sbb
jo
dec
test
loope
mov
fcoms
cmp
in
mov
jns
or
outsl
push
pop
inc
sub
lock
xor
pop
mov
dec
mov
mov
inc
test
mov
xchg
jno
shr
adc
pop
movsl
mov
ret
and
outsb
fnstsw
fld1
fistpll
mov
pop
xlat
or
inc
movsl
js
enter
or
sub
lea
mov
movsl
std
cld
lock
decb
std
pop
popf
je
arpl
adc
loopne
roll
fstl
push
fnsave
add
jmp
in
push
loop
arpl
cmpsb
aam
jge
sahf
nop
dec
push
cmp
mov
pop
sbb
dec
in
rclb
faddl
mov
test
cltd
divb
in
push
or
sar
mov
loope
xor
mov
mov
mov
and
bound
xchg
jo
lods
daa
cwtl
xor
lret
shll
outsb
mov
add
mov
pop
push
es
push
movsl
outsb
ret
iret
adc
je
and
out
jbe
inc
push
out
cld
pusha
imul
gs
fisubl
lret
dec
rorb
clc
test
shll
lcall
jecxz
xor
xchg
mov
lret
imul
sbb
push
pop
xor
insl
xchg
mov
xchg
inc
xchg
mov
test
sub
ffree
xchg
jno
fldt
nop
aas
notb
pushf
xchg
js
lret
sbb
cld
inc
dec
xchg
fdivrp
lods
add
ret
cmpsl
push
fldenv
mov
fdivrp
ficoms
push
xchg
adc
jb
dec
roll
dec
fimuls
ds
loopne
push
add
cld
mov
fstps
mov
or
mov
jb
cmp
mov
movsl
mov
adc
test
xchg
aaa
push
nop
mov
out
sbbb
inc
in
cli
clc
xchg
mov
mov
popf
sbb
push
jmp
frstor
ljmp
insb
es
ja
mov
rclb
xor
movsl
xor
inc
dec
pushf
xchg
cmc
mov
in
xchg
mov
mov
mov
mov
in
mov
cmc
fsubl
in
out
fistl
xchg
sahf
ss
pop
xor
into
cmp
cmpsl
pusha
xor
fstps
push
push
mov
call
mov
jno
mov
loop
repnz
popa
bound
dec
jnp
dec
jl
leave
lea
and
movsb
ljmp
xor
outsl
icebp
jae
lds
lods
mov
movb
mov
and
or
lret
dec
mov
cmc
aam
mov
jmp
out
mov
jp
cli
enter
nop
sub
dec
mov
xchg
or
leave
sbb
loop
inc
repnz
cli
stos
and
xor
loop
test
aas
sbb
test
outsl
sub
pop
or
loop
sbb
pop
cmpsb
dec
mov
xchg
mov
std
addl
jnp
inc
insl
and
inc
lods
sbb
mov
orps
add
nop
or
xorb
mov
cmp
fwait
jns
mov
cmpsb
and
pop
ljmp
mov
dec
jg
push
inc
pop
scas
int
dec
pop
and
addl
imul
cld
loopne
jmp
jns
sbb
mov
mov
cmp
movsl
scas
mov
cli
call
push
rcrb
push
and
sub
jl
test
test
dec
mov
sbb
aaa
addr16
or
add
pusha
scas
inc
ja
fstps
xchg
jns
stos
inc
and
adc
hlt
mov
out
negl
or
pusha
lock
sahf
mov
test
cmp
dec
lea
sub
cmp
jmp
xor
out
adcl
pop
cmp
fmull
and
in
xorb
int
lret
mov
aad
gs
scas
aam
cmpsl
lahf
jecxz
sub
popa
ss
mov
std
mov
jp
iret
fidivl
cld
sbb
pop
mov
sub
testb
push
pusha
cmp
jmp
pushf
sbb
pop
in
and
jns
clc
jbe
mov
mov
adc
mov
mov
xchg
or
jb
inc
int
mov
nop
sub
push
adc
mov
ss
mov
jns
add
nop
mov
mov
out
and
arpl
jne
ss
or
or
xor
push
aaa
xor
repnz
cmpsb
push
add
clc
push
or
icebp
or
xchg
inc
sbb
fcomps
jp
add
in
rorl
mov
push
jne
jecxz
popa
out
divb
sub
adc
test
test
sub
cli
cli
scas
jno
les
pop
or
adc
or
fimuls
movq
cmp
lcall
imul
xchg
xchg
test
mov
pushf
cld
fsub
or
jne
push
popa
fsubl
pop
push
sub
fwait
cs
roll
rcrb
insb
add
sbb
loopne
inc
or
mov
out
cmp
and
lods
div
repnz
adc
mov
pop
or
mul
mov
and
pop
add
std
lods
into
cmp
xor
fistl
dec
inc
or
imul
dec
sub
inc
out
arpl
inc
repnz
pop
push
js
clc
jmp
imul
into
fidivrs
sub
sbb
cmp
jb
mov
pop
mov
mov
xchg
pop
aaa
scas
lret
cmp
inc
push
xor
leave
xor
fiadds
cwtl
negl
test
inc
sub
add
insb
push
in
add
scas
push
mov
jecxz
dec
cmp
add
pop
mov
push
sbb
pop
shlb
ret
mov
pop
dec
lods
xor
mov
jae
lcall
mov
push
mov
std
imul
mov
mov
cli
clc
iret
mov
jae
or
dec
sbb
add
call
cwtl
inc
addr16
int
mov
fistpl
gs
addl
push
push
imul
in
cmp
ds
test
dec
cmp
daa
lret
push
test
inc
xchg
mov
xor
or
sbb
push
aam
cmp
out
xorl
stos
das
mov
in
jle
fs
mov
adcl
sti
and
push
sbb
dec
lods
xor
jns
jbe
or
hlt
in
sub
sub
cmp
rcr
push
and
mov
jmp
dec
adc
fstps
inc
pop
mov
addr16
je
stos
cmc
fisubl
sbb
add
cwtl
fcomps
fldenv
jb
sbb
mov
fcompl
and
dec
bound
mov
movsl
inc
insl
insl
inc
stc
fs
aaa
cmp
sub
jmp
inc
stos
dec
pushw
test
bound
inc
inc
cltd
enter
push
mov
mov
mov
mov
jecxz
jle
inc
add
jmp
pusha
test
sbb
cmp
mov
inc
out
repz
ret
xchg
mov
fiaddl
inc
mov
daa
fs
popf
jbe
xlat
and
pop
push
lds
mov
int3
incb
xor
or
sti
jae
ljmp
add
lahf
icebp
mov
lret
sub
and
sub
imul
sarl
mov
add
pushf
cmp
push
sbb
dec
mov
loop
outsb
lds
mov
push
push
test
push
daa
push
ja
loop
mov
mov
xchg
repnz
pop
add
and
mov
jp
cmp
inc
in
jecxz
jmp
sub
adcb
pop
dec
out
hlt
pslld
jns
das
xchg
roll
adc
push
sbb
or
add
xchg
mov
or
cld
jo
jl
loope
add
and
or
xchg
mov
and
xor
sbb
xchg
sarl
movsl
in
daa
fisubs
out
inc
shr
adc
and
adc
frstor
dec
xchg
push
lret
inc
adc
xlat
push
loope
mov
mov
rolb
inc
jp
in
adc
addr16
je
xorl
cmp
subl
jmp
inc
inc
inc
sub
push
loopne
xor
inc
out
mov
sub
lea
or
in
or
sub
and
xchg
aad
fbstp
pop
in
cmc
dec
aam
jl
cltd
jl
int
sub
and
xor
push
push
and
aam
fwait
add
fsts
leave
mov
aaa
push
mov
jle
in
and
repz
xchg
mov
cmp
div
ja
cli
xor
sahf
mov
std
and
inc
lods
test
fidivrl
push
add
repz
xor
movsb
enter
cmpb
sub
push
sbb
jae
pop
xchg
cmp
movsl
dec
std
sbb
inc
jmp
and
dec
std
fs
out
idivl
cmp
dec
popf
inc
gs
icebp
add
push
xor
pusha
inc
inc
xchg
push
sbb
jne
rorb
inc
mov
fmuls
mov
xor
in
popf
mov
adc
divb
rcr
sub
je
out
inc
pop
fisubl
push
fdivr
dec
testb
push
fisubrl
inc
inc
inc
pop
dec
das
stos
cmp
jg
aam
insb
out
subb
and
ret
and
out
fstpt
int
adc
leave
xchg
sbb
addr16
cs
arpl
mov
lret
xchg
pop
loopne
popa
sarb
adc
push
imul
xor
in
fs
sub
add
in
int3
divb
ds
dec
das
les
aad
push
pop
loop
stos
lcall
in
imul
dec
pop
xor
mov
sbb
imul
mov
push
ficoml
jge
push
push
js
xchg
in
pusha
js
push
xchg
popa
inc
popf
cli
jmp
sahf
xchg
lods
fwait
jne
cmp
popf
je
sub
mov
mov
cmp
fiaddl
sar
pop
sti
dec
mov
rcll
arpl
mov
ret
pushf
insl
add
in
fsts
sub
cld
or
mov
loope
pop
mov
aas
mov
out
insb
loop
cs
adc
pop
ljmp
repz
mov
or
xchg
jnp
inc
mov
xchg
and
int
add
mov
xchg
cmp
cmp
or
push
shll
rorb
and
or
ds
mov
xchg
xor
andl
adc
rcr
mov
inc
flds
jno
out
ret
mov
mov
ret
aad
dec
pop
loopne
testb
dec
add
loopne
adc
call
jle
imull
mov
fdivrs
arpl
nop
imul
lea
push
cmp
neg
in
mov
clc
es
fidivrs
sarb
loop
xchg
enter
test
mov
adc
paddw
mov
adc
fwait
push
ror
insb
sbb
pusha
test
cli
pushf
push
daa
cmp
xchg
jecxz
pop
lret
pushf
or
aaa
pop
pop
xchg
cs
rcl
dec
xchg
xor
pop
pop
mov
sub
rclb
stc
xor
lret
sub
jp
sub
mov
fsubs
cmp
arpl
aaa
rcrl
ss
arpl
rcrb
mov
mov
lret
fucomip
mov
loope
outsl
hlt
cltd
ret
jb
cmp
mov
int3
push
xor
mov
push
jp
push
inc
sbb
add
js
cmc
dec
sub
jl
test
xchg
sbb
mov
sub
mov
loopne
dec
push
aaa
sub
jno
fidivrl
and
pop
fstpl
jnp
xor
in
aaa
rorl
push
mov
ror
push
dec
push
or
in
inc
cltd
stc
xchg
pop
in
shll
incb
mov
rcrb
stos
push
jns
inc
pop
cld
movsl
adc
or
sti
sbb
xchg
lret
pop
rorb
mov
cmpsl
in
stos
push
pushf
inc
jecxz
xchg
mov
lahf
xchg
subl
sbb
sub
mov
icebp
dec
sub
popf
pop
cli
jge
test
and
lea
in
push
mov
ja
push
jnp
int
les
lods
pop
mov
push
stc
xor
adc
mov
jno
fdivrs
jg
fiaddl
xor
jns
ja
jmp
sbb
popf
mov
mov
imul
dec
adcl
dec
pop
dec
mov
rcr
add
cmpsb
pop
dec
imul
imul
jp
jle
lret
pop
sbb
mov
jle
mov
scas
push
pusha
mov
bound
dec
fsubrl
fisubrs
jbe
dec
xchg
fdivs
xchg
pop
mov
push
mov
push
push
xor
cmp
push
sti
mov
sbb
cld
xchg
sub
push
sub
add
pop
lods
cmp
push
dec
cmp
mov
inc
jae
roll
and
xor
mov
adc
and
mov
xchg
jbe
enter
out
jg
push
gs
cmc
add
pop
shl
mov
sub
inc
sarl
dec
push
lods
or
adc
xchg
shll
fildl
or
test
aad
sbb
push
xchg
ds
cmp
fcoml
push
cmp
xor
pop
adc
push
cwtl
cmpb
add
mov
xchg
mov
push
sbb
and
xor
sbb
ja
add
mov
outsb
and
stos
imul
pop
mov
xchg
inc
mov
call
aaa
std
stos
adc
aaa
iret
xchg
test
push
and
lds
jo
mov
js
hlt
or
and
adc
push
mov
sub
jle
gs
sbb
call
and
jl
test
pop
push
je
dec
les
cmc
lods
imul
in
inc
addl
sar
adc
jns
testb
fcomi
vandnps
je
test
aad
adc
into
movsl
sub
sbb
push
push
sub
fsubl
es
sub
test
jno
cmp
je
sbb
push
cmc
push
or
gs
dec
jecxz
in
xchg
jle
xchg
ljmp
loope
xchg
loopne
fldcw
jge
adc
iret
inc
sub
dec
outsl
cmp
push
adc
data16
jmp
sbb
dec
jge
arpl
mov
cmp
dec
cmp
xchg
sub
stos
icebp
mov
adc
enter
pop
mov
xchg
mov
jg
dec
dec
cs
xlat
call
mov
iret
mov
jne
adcb
push
push
dec
and
dec
hlt
aas
lock
pop
adc
ja
test
ljmp
sbb
or
pop
test
rcl
push
repnz
popa
add
mov
movsl
pop
push
jmp
cs
mov
mov
fdivr
scas
sbb
arpl
leave
push
add
mov
or
push
cld
lock
imul
and
dec
add
mov
mov
cld
hlt
mov
stc
adc
addr16
rorb
test
loope
aas
scas
inc
adc
lods
push
enter
inc
pop
adc
jp
cld
xchg
cmpsb
lret
cltd
test
popf
mov
into
xor
mov
je
movsl
testl
jg
push
call
daa
out
mov
dec
std
push
fimuls
and
int3
loope
xor
xchg
movsl
fwait
cmp
inc
jno
mov
xor
lock
cli
mov
adc
adc
mov
gs
mov
and
jmp
mov
dec
arpl
mov
push
push
cmpsb
sbb
or
daa
or
inc
lock
jmp
nop
add
dec
imul
push
mov
xor
or
shll
testl
fucomp
aad
jo
xor
sahf
dec
hlt
push
fildll
pop
cmp
sbb
cmp
shrb
add
out
inc
add
les
aad
test
leave
dec
mov
idivb
xchg
repz
jecxz
into
or
insl
pop
out
mov
mov
mov
pop
int
inc
xor
aaa
cmp
aad
dec
fmuls
jl
test
fcomi
int
sarl
push
push
fsubp
out
inc
and
and
aaa
xor
addl
jge
adc
and
push
loopne
sarl
cltd
inc
or
psrld
loope
js
push
mov
and
pop
pop
ret
andb
scas
jbe
hlt
sub
sahf
xor
pop
xor
rorb
mov
sub
test
push
xchg
and
push
ror
sub
inc
cmpsb
stc
lret
rcr
jl
xchg
and
fidivs
mull
fs
lcall
sub
imul
xor
sbb
les
cmp
cmp
lods
lods
pop
jns
dec
ret
test
adc
sbb
call
sbb
ret
xchg
pcmpgtd
psubusb
sbb
adc
adc
push
xor
mov
mov
movsl
imul
icebp
loope
jnp
mov
js
rorl
mov
push
ficoms
imul
dec
push
cmpsb
push
cwtl
push
dec
dec
dec
cwtl
sbb
push
pop
push
roll
fsubl
adc
pop
es
insl
scas
ja
push
fdivr
insl
iret
outsl
sbb
push
add
aam
insl
cltd
cmp
das
pushf
mov
mov
or
lret
loopne
push
mov
fistps
insl
fs
sbb
dec
or
aas
push
aaa
les
rorl
insl
jle
in
mov
aaa
mov
mulb
scas
out
ficoml
push
stc
xlat
sarb
imul
push
bound
ljmp
jmp
jp
sbb
repnz
ds
mov
push
out
fcmovu
int
mov
mov
push
in
aaa
jecxz
xchg
pop
pop
shlb
sahf
jbe
push
xchg
cmp
in
stos
cmp
sti
iret
cmp
pop
rorl
adc
int3
cmp
cs
xchg
setg
movsl
xor
xchg
push
jns
cmp
jecxz
xchg
xchg
push
mov
lret
pop
sub
xchg
imul
and
push
ds
jecxz
repz
pop
dec
jecxz
mov
inc
les
xor
sub
push
pop
test
cwtl
test
fadds
daa
lods
data16
xor
lods
push
sub
test
mov
pushl
insb
push
dec
sub
loopne
roll
fildll
mov
jg
adc
data16
inc
add
push
jmp
in
outsb
sarb
aam
pop
sbb
pop
test
push
mov
or
les
push
pusha
adc
lcall
lock
mov
push
xor
push
fidivl
repz
and
adc
fwait
mov
xchg
jo
in
and
js
sbb
int
aaa
add
cltd
out
xchg
out
push
or
lods
filds
pop
cmpsb
mov
test
mov
push
or
andb
icebp
mov
call
sbb
out
int3
sub
xor
fsts
sub
call
pop
inc
aaa
filds
mov
mov
icebp
stos
inc
jns
pop
sbb
and
lods
pop
xor
test
call
xchg
nop
pop
mov
push
testl
cld
enter
inc
ret
dec
push
jmp
inc
xchg
cmp
adc
ljmp
sbb
cld
adc
mov
roll
loop
push
shlb
mov
adc
repnz
jg
mov
jne
xor
mov
stos
mov
adc
out
mov
adc
mov
imull
inc
sti
rolb
imul
mov
mov
adc
shl
repz
jne
jmp
push
dec
adc
inc
sub
mov
repz
mov
xor
faddl
lds
pop
ljmp
inc
ret
sbb
pop
cmp
xorb
push
fnsave
jbe
pop
inc
sub
lods
enter
in
sbb
mov
xchg
or
push
icebp
sbb
pop
push
loop
imul
inc
or
jl
rcr
and
scas
sub
test
push
add
push
ret
out
insl
push
dec
test
ret
jno
push
cli
jmp
mov
into
inc
adc
js
int
pop
sub
fwait
hlt
mov
jg
dec
jo
cwtl
or
dec
lahf
pop
verw
push
sub
xchg
cwtl
cmc
repz
outsb
cmp
jae
sbb
arpl
sbb
pop
pop
movsl
int3
lods
nop
pop
filds
adc
mov
into
insl
jnp
add
fcomps
jecxz
jle
orb
inc
arpl
xchg
dec
pop
addr16
xchg
or
jmp
xchg
in
cmp
lret
sbb
lock
xchg
dec
mov
lahf
pop
je
sub
testl
stos
mov
sahf
xor
mov
add
mov
lock
adc
mov
jge
les
fs
loope
xchg
inc
and
inc
sub
imul
jecxz
adc
jmp
or
popa
shll
push
rorl
insb
test
jne
mov
insb
ja
fldl
inc
xor
jbe
sbb
pushf
xor
pop
sbb
mov
mov
std
push
xor
sbb
enter
mov
sbb
pop
dec
jne
dec
cmp
mov
cmp
std
pushf
iret
cmp
test
mov
pop
shl
jle
xchg
mov
or
or
mov
pop
out
mov
iret
orl
sub
dec
mov
sbbb
mov
imul
popa
insl
scas
pop
pop
jb
ss
xor
pop
mov
xor
push
stc
push
int3
test
call
arpl
xchg
jmp
aad
xrelease
lret
int3
xchg
adc
fisubl
cld
dec
lret
push
loopne
pop
add
data16
xchg
cwtl
jno
sub
loope
fistl
and
andl
add
mov
push
cmpl
inc
jo
push
xchg
shll
push
lret
cmc
scas
xlat
cmp
fisubrs
fmulp
test
pop
outsl
push
pop
sar
push
push
jno
and
cmp
jle
rcr
adc
lret
mov
xor
fwait
lret
outsb
xchg
adc
test
mov
les
aaa
push
inc
cmp
cld
jne
cmpl
or
jbe
pop
mov
xor
pop
push
fstps
scas
mov
sbb
test
jb
fcomip
mov
cmp
lahf
cmp
in
sub
fdivrs
push
mov
fwait
mov
aam
nop
mov
outsb
pop
ds
repz
sub
es
imul
pop
mov
enter
cmp
add
les
push
inc
pusha
mov
xchg
js
es
fxch
dec
pop
mov
add
fs
mov
pop
push
cmp
inc
adc
or
fsub
or
xor
add
mov
dec
test
cmp
push
bound
add
mov
loope
out
cli
or
lahf
lcall
out
adc
subl
jns
test
stos
dec
in
mov
ror
outsl
push
push
dec
fidivs
mov
mov
sahf
mov
push
daa
mov
mov
cld
push
loop
stc
push
push
repz
sti
pop
adc
imull
pop
fstl
xchg
jl
mov
xor
xor
push
push
push
cmpsl
cmp
outsl
jnp
rorl
mov
in
push
lret
lods
xchg
test
lcall
and
sbb
cwtl
cmpsb
fstps
sbbb
inc
push
lcall
fmuls
adc
jge
mov
adc
lock
setle
mov
mov
cmp
push
mov
push
sbb
cmp
jne
imul
ljmp
jmp
sub
cld
add
call
mov
push
in
inc
fisttpll
cmpsb
xlat
fs
mov
cs
jmp
dec
pop
rcll
push
pushf
js
pop
adc
cmc
xor
sbb
mov
mov
shll
iret
ds
mov
mov
and
xorb
out
inc
int3
lret
or
sahf
sbb
stc
lods
push
push
lods
jge
push
dec
adc
xor
sar
sahf
shll
xor
and
or
mov
inc
cltd
and
in
js
mov
int3
xor
pushl
insb
mov
popa
int
pop
inc
sub
push
clc
cltd
add
les
fcmovb
mov
jo
adc
cmp
ja,pn
jmp
ja
xchg
inc
sbb
sub
jno
sarb
fcmovu
leave
insl
or
jnp
push
dec
addr16
push
dec
mov
sub
popa
and
in
cmpl
sub
mov
fdivl
and
cwtl
stos
xchg
and
mov
sub
add
shl
out
mov
xor
int3
jae
mov
fnstcw
arpl
add
les
test
lea
add
jge
orb
mov
das
push
fmul
out
lcall
fcmove
stc
loop
pop
cld
lret
push
addl
pop
mov
adc
sbb
out
cmp
mov
mov
mov
push
les
outsb
inc
pop
sti
sub
jmp
pop
mov
orl
lock
leave
pop
je
dec
jge
push
xchg
pop
insl
jns
and
in
fneni(8087
mov
out
sbb
outsb
lods
dec
cmpsl
inc
cmp
xor
movsl
in
mov
add
daa
push
xchg
add
push
pusha
cli
cmpsb
mov
pop
inc
add
pusha
mull
dec
and
cmp
in
pushf
cmp
dec
movsl
sti
imul
flds
nop
fisttpl
hlt
jb
shll
je
outsb
test
ret
mov
stc
cwtl
sub
les
pop
mov
cld
adcb
sbbl
daa
pop
inc
icebp
leave
lods
jbe
mov
repz
addr16
les
xchg
mov
icebp
xor
push
dec
in
push
dec
xor
inc
jp
jbe
sbb
push
pop
fdivrp
push
sub
jno
or
leave
popf
mov
sbb
mov
pushf
inc
mov
inc
sbb
sbbl
testb
into
fs
pushf
je
dec
sbb
mov
add
fcomps
imul
mov
mov
lds
iret
mov
jo
jecxz
imul
scas
mov
sarb
mov
mov
jg,pt
scas
std
ficompl
fiaddl
add
pop
and
push
lock
enter
push
sub
aas
push
jb
les
xchg
add
lret
mov
push
nop
fprem
sbb
jnp
ds
dec
push
mov
and
lds
push
adcl
xchg
mov
cmp
in
adc
push
insl
lods
adc
je
push
sbb
ss
xchg
push
or
mov
inc
or
repz
cmp
fs
mov
push
sbb
push
cmpb
xchg
call
dec
sti
cmpb
data16
and
xchg
shlb
pushf
scas
add
cmc
add
in
pop
cmp
cmp
shrl
add
bound
in
xor
jno
or
lret
inc
dec
mov
pusha
fstpl
and
aam
fwait
push
jecxz
push
dec
sub
loop
push
sbbl
dec
add
ss
or
rclb
and
jle
cmp
pusha
push
or
mov
jne
push
dec
xchg
fnop
movsb
push
sbb
sub
ljmp
aas
enter
mov
ficompl
dec
out
xor
add
int3
cmp
fldcw
add
popa
into
push
pop
lock
test
movsb
sub
aaa
push
lea
mov
insb
adc
sbb
cmc
mov
loop
shrl
test
pop
movsl
sub
in
lods
ret
pusha
dec
pop
dec
adc
mov
sbb
cli
sbb
mov
mov
aaa
pushf
and
inc
fnsave
inc
or
sub
outsl
mov
test
push
out
es
push
loop
sub
xor
test
ljmp
cmpsl
mov
adc
sti
sub
sarb
jmp
lahf
jecxz
pop
sti
push
sub
push
xchg
jbe
jmp
sti
out
sub
cmp
pusha
loop
dec
mov
jno
mov
mov
mov
shll
cmp
data16
bound
jae
dec
mov
mov
inc
push
and
pop
xchg
xor
imulb
lods
xchg
cmp
push
mov
out
inc
faddl
jmp
cmp
imul
jl
dec
pop
lcall
adc
fwait
inc
stos
adc
movsl
inc
mov
or
repnz
mov
xor
pop
pop
lea
or
outsl
out
lret
pop
pop
lds
jge
mov
daa
cmp
pop
push
mov
insl
idivb
xchg
sahf
push
xchg
shlb
aaa
inc
icebp
cmp
cmp
jne
inc
mov
and
or
mov
adc
repz
je
ficomps
cmpsb
mov
repnz
ret
add
in
pop
std
mov
jle
js
insb
in
mov
push
ret
repnz
jo
adc
es
rolb
rcr
pop
sbb
and
pop
push
lret
out
das
pop
pusha
sbb
inc
stos
mov
lcall
fldt
hlt
pop
mov
mov
push
call
dec
clc
dec
push
ss
mov
fs
das
sub
stos
sub
gs
inc
xor
push
mov
loop
add
xlat
in
pushf
dec
data16
and
mov
mov
or
mov
mov
xchg
push
jbe
cmc
and
xchg
data16
and
inc
pop
decb
loope
add
mov
scas
or
inc
sti
pop
iret
or
mov
arpl
incl
andl
xor
shl
imul
sbb
add
repz
xchg
jo
out
movsb
or
inc
or
xor
loope
ret
sbbl
ret
cmp
or
sbb
test
sbb
xchg
lods
std
test
mov
pusha
sbb
and
dec
fistps
pop
std
dec
xor
popa
xchg
pop
add
push
cs
and
or
cwtl
mov
xor
sbb
add
jno
mov
enter
pop
xchg
cmp
aam
arpl
in
dec
repz
repz
stc
stc
test
sbb
cmc
ret
mov
jae
mov
inc
lahf
ja
repz
js
mov
xor
adc
or
and
mov
dec
and
and
rclb
or
jmp
loope
mov
sub
push
cmp
popa
adc
iret
enter
aas
and
mov
jecxz
xor
xor
out
push
das
mov
std
rep
and
imul
mov
inc
ret
cld
loop
sbbl
dec
aaa
adc
jp,pt
push
jns
sti
aas
or
clc
inc
inc
imul
pushf
dec
popl
dec
stos
jne
cld
mov
iret
std
lret
mov
in
fucomp
cld
das
test
push
pusha
push
aad
lahf
and
movl
push
xor
in
aas
insl
xchg
jae
lahf
jns
mov
std
fmul
adc
daa
inc
imul
xor
test
mov
jl
xor
cmp
add
inc
icebp
aad
sub
mov
jecxz
adc
xchg
lret
lock
aad
lahf
ss
sarb
mov
gs
push
dec
dec
xor
stos
in
inc
sub
les
cld
ret
mov
shrb
ds
mov
daa
cli
lea
inc
test
aam
mov
repnz
jnp
inc
xor
mov
mov
lock
ljmp
pop
pop
sub
clc
hlt
in
mov
subb
lods
movsl
int
pop
aas
xor
call
sub
xchg
ja
sub
ficompl
ret
shrl
push
repnz
shll
lret
into
xchg
mov
out
or
aaa
movsl
je
xchg
mov
andb
out
inc
mov
imul
insl
gs
jle
adc
negb
and
pop
sub
sbb
dec
lret
adc
pop
scas
inc
mov
jnp
xchg
lret
add
pop
test
popa
mov
inc
in
cmp
dec
sarb
cmpsb
mull
in
jb
insb
sbb
popf
push
mov
inc
mov
sub
or
stc
cmpsb
xchg
pop
ja
jp
dec
jecxz
into
mov
fisubs
clc
fwait
mov
or
pop
out
int3
adc
sbb
testb
or
jmp
mov
jl
pop
dec
cmpsb
jmp
jmp
mov
inc
fnsave
in
mov
push
xlat
int
mov
pushf
dec
insl
cmp
call
adc
rcr
test
insb
dec
into
xchg
jmp
pop
shl
mov
outsb
jmp
lds
stc
lretw
pop
xor
pop
pusha
out
in
cmp
ljmp
in
es
pop
or
mov
ss
int3
cmpsb
fld
sbb
fsubrp
call
or
aaa
mov
add
scas
adc
jp
mov
into
cmp
orb
mov
adc
mov
cmp
sub
fistpll
mov
and
aas
xor
jle
push
loope
sub
pop
in
scas
and
and
sbb
iret
lcall
mov
xchg
cmp
shr
fisubrs
inc
jbe
in
mov
les
dec
dec
rcrl
and
dec
lcall
hlt
push
movsl
in
mov
xchg
scas
fidivrs
mov
in
jmp
mov
adc
lret
pop
push
push
cmp
mov
stos
sbb
lods
incl
ret
jo
inc
cli
repz
in
je
shll
in
leave
pusha
stos
mov
push
xchg
jnp
repz
pop
push
jns
test
xchg
sbb
std
pop
or
das
pop
add
inc
lret
adc
in
add
push
das
cmp
jno
push
icebp
repz
cli
adcl
repnz
cmp
adc
sub
push
mov
sub
dec
faddl
pushf
nop
in
mov
jne
divb
ljmp
push
jno
sbb
stc
stos
xor
insb
jb
lods
mov
pop
lds
cld
mov
xor
fcoms
pop
dec
mov
or
pusha
cwtl
in
xchg
pushf
lret
sub
or
loop
dec
sub
in
and
mov
mov
xchg
ljmp
or
xchg
fists
add
fstpl
dec
xchg
xor
adcl
fnstenv
mov
mov
pop
adc
fwait
xor
pop
mull
fiadds
fsubrs
jbe
out
and
std
in
addb
dec
mov
cmc
aam
scas
cli
mov
arpl
mov
repz
arpl
in
mov
or
jno
mov
mov
cmp
outsb
or
push
cmp
lretw
insl
data16
mov
out
decb
mov
rcr
cmp
push
mov
mov
es
xor
mov
cmp
xlat
out
stc
call
sbb
mov
jge
stos
mov
push
popa
add
lods
loop
push
inc
in
and
loope
add
push
cwtl
subb
out
cmp
imul
xchg
aas
std
mov
push
sbb
add
adc
mov
out
inc
jo
popa
adc
sbb
jge
stos
call
push
ja
dec
inc
adc
shlb
shl
aad
out
mov
dec
xor
iret
cwtl
jae
out
lahf
shll
push
popa
pop
cmc
outsb
jae
xchg
adc
push
je
xor
pushf
nop
fnstcw
jnp
mov
mov
xchg
jg
lds
dec
clc
scas
lods
data16
in
xor
xchg
push
cli
insb
fadds
aam
mov
jne
mov
stc
shlb
add
dec
jl
movzwl
rolb
mov
cmp
cmp
lret
lods
rol
push
test
lret
mov
xchg
sti
ss
xor
xchg
mov
mov
sbb
pop
mov
and
lea
in
lret
nop
les
fisttps
sub
ror
ljmp
ja
mov
roll
call
mov
aam
jns
das
sub
or
int3
aam
aam
lods
test
dec
or
sub
ret
sub
addr16
outsl
push
xor
and
pop
xchg
test
mov
negl
mov
push
sti
or
pop
mov
loopne
mul
int3
fucomp
and
sbb
xor
mov
add
adcb
adc
xchg
fs
mov
inc
dec
mov
mov
jg
xchg
jmp
movsb
mov
int3
push
push
clc
outsl
jns
mov
fisubrs
std
outsl
cmp
adc
xchg
xlat
or
int3
cld
jg
imul
xchg
xchg
xchg
lods
cld
adc
les
aas
test
pop
push
push
push
lods
outsl
std
clc
pinsrw
push
imull
sahf
jecxz
test
jnp
lds
push
xchg
fst
or
sub
dec
add
jns
outsb
mov
hlt
rcrl
nop
pop
cltd
mov
fists
js
mov
push
dec
aam
sbb
jle
cmp
push
popf
dec
psubw
je
aas
das
mov
sbb
ret
inc
inc
dec
int
pop
xor
cmpsl
pushf
mov
dec
push
lret
pop
or
jl
dec
xchg
imul
mov
std
outsb
push
mov
popa
mov
loope
pop
mov
adc
aaa
adc
lods
inc
pop
aas
fwait
sbb
jp
lds
out
cmp
cmc
xchg
ret
pushf
inc
fdivl
jle
push
cmc
sub
sub
subl
es
pop
xor
inc
mov
icebp
negb
mov
pushf
add
ja
cmp
jge
add
and
sub
call
xlat
add
ja
xchg
add
adc
mov
fwait
pop
add
hlt
jnp
xor
add
addl
mov
aad
sbb
cli
lea
hlt
cmpsb
dec
sub
push
pop
rcrl
xchg
inc
fwait
mov
inc
inc
inc
mov
add
sar
xchg
call
cmp
and
or
add
sbb
lea
xchg
xchg
inc
icebp
mov
jg
add
xchg
xchg
and
ss
dec
adc
popa
pop
dec
sbb
addr16
push
mov
sbb
jl
aaa
aad
inc
cld
mov
sub
rcrb
mov
jl
jns
mov
mov
loopne
popa
icebp
xor
cwtl
shrb
adc
push
fisubrs
paddd
cltd
cmp
sar
mov
mov
dec
mov
int
sub
outsl
or
jbe
mov
jecxz
mov
insb
jmp
mov
sbb
sbb
sbb
pop
je
mov
sar
xor
pop
push
into
xor
xchg
pop
sbb
jns
cltd
pop
cmp
cltd
ret
daa
pop
or
jmp
test
test
jmp
in
arpl
sbb
dec
dec
subl
or
and
push
xchg
rolb
movsb
push
xchg
xchg
int
adc
inc
loop
not
xchg
xchg
mov
push
pushf
stc
ret
loop
cmpsl
xchg
mov
imul
cmp
movsl
and
mov
loop
push
mov
inc
rclb
hlt
das
push
mov
dec
aad
dec
outsl
cmp
icebp
mov
orl
in
cmc
aam
bound
daa
test
and
mov
push
ds
into
jp,pt
lret
bound
rclb
mov
push
mov
jge
hlt
xor
pop
push
mov
push
add
packsswb
or
fisubs
bound
or
out
mov
xor
loopne
test
fldenv
add
sbb
fcomps
data16
push
dec
std
sbbl
mov
add
or
cmp
inc
xchg
or
mov
mov
je
mov
cwtl
jecxz
add
lds
push
mov
dec
xor
ss
iret
and
bound
adc
scas
cmp
dec
and
repz
mov
fisubrs
add
out
xlat
mov
cltd
repz
mov
add
dec
sbb
mov
sub
cmp
fwait
dec
pop
mov
clc
pop
int
and
mov
in
adc
adc
divl
xor
jg
js
ror
push
pop
imul
in
fwait
pop
stos
push
jmp
mov
movsl
pop
pop
aas
out
movhps
leave
and
loopne
aam
sub
outsl
add
ja
pop
dec
sub
push
jbe
into
cmp
cmp
inc
movsl
push
lahf
or
out
movsl
call
and
jmp
adc
mov
mov
mov
scas
repz
mov
daa
push
pop
sub
outsl
jg
into
mov
movl
out
or
mov
mov
ljmp
outsl
cmc
xor
sbb
inc
mov
and
std
imul
mov
enter
jp
iret
cmpsl
imul
push
sub
mov
ror
add
sub
mov
out
push
push
lret
and
shll
xchg
push
dec
mov
and
dec
mov
or
stc
sub
ja
icebp
xchg
int
xor
aaa
inc
ss
mov
and
sbb
and
cmp
and
inc
add
push
rolb
in
addr16
jmp
sbb
hlt
xor
and
in
ds
cld
inc
adc
add
mov
lret
xchg
and
mov
jl
inc
rcrb
xor
in
lods
lret
mov
cmp
sbb
sahf
dec
lcall
push
in
lock
je
cld
mov
in
mov
into
cltd
add
shl
orl
lods
stc
mov
and
sbb
xor
push
add
pop
and
repnz
sbb
lcall
movsb
mov
cmp
cmp
add
mulb
andb
ret
pop
loopne
std
jno
lret
popa
jb
scas
lahf
or
into
jno
xor
lret
push
nop
daa
pop
adc
call
push
mov
ret
mov
lock
int
xchg
mov
adc
xchg
in
test
mov
addl
xchg
push
lret
in
lods
loop
rorl
cld
jmp
cmp
jns
sub
arpl
xchg
repz
jg,pn
cld
and
shr
ja
out
or
mov
and
out
xlat
cmpsl
mov
lea
push
push
rolb
inc
jle
push
sbb
add
push
fiaddl
mov
xor
or
xor
aam
sbb
leave
ret
sub
cmp
add
lret
mov
out
or
pop
addr16
adcl
dec
ss
iret
lods
sbb
stos
js
sub
iret
stc
imul
test
ljmp
outsb
inc
jae
jle
in
mov
or
adcl
push
pop
ret
adcb
sti
push
push
les
dec
mov
pop
shlb
sbb
cmp
js
and
mov
inc
xchg
adc
push
jge
popa
mov
push
xchg
jl
jp
pop
mov
lock
outsb
xchg
fbstp
mov
xor
scas
cmp
add
pop
fstl
es
in
jo
out
adc
sub
sarb
inc
xchg
movsb
add
lret
shll
or
mov
push
adc
outsb
imul
fwait
xchg
jnp
out
out
insb
push
repz
mov
popa
mov
stc
cmpsl
sti
adc
icebp
jno
popf
int3
jns
xor
int3
pushf
sbb
aam
pop
hlt
mov
and
cmp
dec
rorl
cld
sahf
aad
xor
mov
jecxz
adc
emms
sub
mov
cmpsl
or
fildll
jno
pop
xchg
adc
sbb
loop
out
hlt
push
cmc
testb
push
add
cmpsb
push
ss
shlb
jge
loopne
arpl
and
inc
mov
push
pop
popa
movsl
mov
imul
push
mov
enter
push
loope
adc
leave
cmp
jle
mov
in
add
loop
xchg
lds
dec
mov
mov
mov
cltd
sbb
je
into
jecxz
sbb
adc
sub
lock
mov
xchg
jb,pt
mov
mov
mov
adc
les
mov
xlat
cmp
aam
jno
andl
pop
orb
enter
cld
dec
pop
push
mov
sub
aas
shll
insl
pop
hlt
mov
xor
add
test
movsl
adc
icebp
add
pusha
loop
gs
incl
gs
lahf
mov
mov
cmpl
cli
mov
pop
js
jns
pop
inc
xchg
dec
andb
mov
shrl
cmp
mov
push
adc
xchg
fs
jno
aaa
leave
addr16
jne
sbb
loopw
fmulp
aam
or
add
xchg
mov
xorb
add
push
ds
inc
mov
pop
stc
dec
outsb
jb
fists
jbe
adc
pop
lret
sub
rcr
push
sbb
cld
mov
leave
dec
out
sbb
cmc
cmp
xchg
mov
xlat
or
gs
add
push
cmpb
add
mov
xor
clc
out
xchg
cmp
and
xor
push
cmpsl
dec
incb
test
push
inc
push
sub
adc
sarb
jl
bound
lods
push
sarb
cmc
mov
dec
sbb
adc
and
cmp
ljmp
adc
filds
dec
jp
fiaddl
fisubrl
jmp
push
test
push
add
hlt
inc
bound
shll
lahf
ret
call
int3
fimuls
sub
sub
adc
fidivl
imul
jmp
jo
ffree
fs
push
pop
cmp
stos
cmp
or
pop
inc
jnp
lds
fxch
inc
mov
mov
xchg
push
xchg
aad
lods
pop
jnp
jge
xchg
jmp
sti
pop
push
or
pop
push
push
pop
repnz
in
adcb
aad
cli
bnd
imul
add
bound
jp
mov
in
test
movd
push
lods
xor
outsl
or
or
sub
cmp
push
push
or
adc
jmp
mov
stos
pop
lds
pushw
daa
clc
lea
pushf
push
popa
add
jge
push
out
into
push
fidivrl
xchg
cmpsb
mov
pop
sbb
pop
shrb
lock
bound
xchg
movsb
sub
mov
mov
or
push
leave
mov
xchg
push
pusha
lock
mov
ret
lahf
xchg
ss
sub
cmp
cli
daa
pop
adc
fwait
and
push
repnz
pusha
lods
sub
lcall
movsb
mov
mov
sub
cmp
add
adc
inc
ja
push
mov
mov
cmp
fstps
movsl
movsl
mov
cwtl
fidivs
adcb
or
mov
out
push
iret
mov
inc
loopne
movsb
sbb
mov
mov
mov
inc
or
push
inc
adc
jbe
jb
jnp
mov
pop
push
mov
rcll
fs
adc
adc
inc
pop
int
xor
popf
dec
or
or
gs
mov
and
adc
sub
insl
icebp
fadds
leave
call
pop
jmp
push
jge
imul
cltd
out
mull
dec
movsb
pop
sub
int
scas
dec
ror
mov
cmp
xchg
xor
cmp
xchg
add
pop
cmp
outsb
daa
dec
jne
push
add
adc
mov
sbb
mov
jecxz
mov
cltd
jecxz
out
sbb
jno
ja
jl
movsl
jmp
fadds
shr
add
and
mov
or
cmp
mov
sbb
mov
ljmp
xor
loopne
shrb
stos
sbb
daa
mov
jne
test
test
and
cmp
mov
sub
add
mov
add
mov
mov
insl
xor
clc
movsb
sub
push
int
xchg
lds
pop
fisubrs
or
call
and
icebp
mov
push
lea
jnp
lret
dec
push
sbb
loop
outsb
pop
pop
outsl
mov
shll
jb
sub
sahf
shl
adcb
pop
sub
xchg
xor
or
movsl
mov
cwtl
xchg
mov
fisubrl
dec
xor
bswap
inc
jp
popa
pop
mov
subb
mov
jle
mov
daa
xchg
loope
pop
pop
add
inc
gs
nop
inc
pop
inc
pop
repnz
movsb
ret
shrb
adc
pop
ja
cmp
pushf
dec
out
imul
mov
jmp
bound
push
test
sub
mov
mov
andb
inc
jno
xchg
repz
fnstsw
mov
stc
fisubs
and
out
cltd
out
ljmp
data16
sbb
nop
mov
xchg
mull
lret
mov
and
nop
mov
mov
popa
mov
out
jp
and
movl
add
insb
iret
xchg
sub
mov
dec
outsl
adc
test
lahf
in
jne
pop
ret
imul
jae
into
clc
xor
int
fcmovu
cs
lret
adc
add
lods
adc
dec
test
sub
dec
jbe
repnz
in
addb
mov
dec
popa
inc
adc
jle
dec
xlat
mov
adc
inc
cmp
arpl
ljmp
iret
push
shrl
int3
xchg
int
pop
adc
xor
xor
sbb
aad
jbe
mov
mov
scas
repnz
dec
mov
rcrb
pop
imul
mov
or
sbb
push
fsubs
sub
lahf
xlat
and
bound
fisubrl
jo
cmp
sub
out
outsb
rolb
cld
pop
lea
cmp
sub
xchg
push
shr
andl
xorb
mov
mov
mov
int
cmp
das
cmp
mov
or
cmc
xchg
jne
stos
mov
shrl
mov
jae
movsl
frstor
bound
jge
cmpsb
or
repnz
push
mov
sbb
pop
dec
add
jb
or
and
inc
push
lahf
popa
mov
mov
mov
int
or
jg
aaa
pop
cltd
inc
mov
cmp
mov
add
adc
xor
sbbl
sarl
push
sbb
mov
icebp
jbe
outsl
stos
inc
or
jl
push
mov
xchg
popf
aaa
lea
int3
lret
and
aad
popa
sub
test
inc
xchg
pop
jmp
enter
cmpsb
jl
arpl
pop
lret
adc
cmpsb
out
add
scas
jle
xlat
dec
xchg
xchg
fildl
jmp
mov
popa
dec
dec
push
pop
pop
lds
pusha
jo
push
into
movsb
cwtl
fcoml
cltd
int3
xlat
in
sbb
mov
mov
rcr
jae
int3
mov
pop
push
std
pop
hlt
jg
push
testl
lret
fidivrs
pop
jle
jns
arpl
adc
lret
jecxz
imul
pop
test
bound
out
sbb
cs
int
dec
cmc
xorl
mov
push
dec
addr16
adc
mov
fcmovnb
mov
cmp
pop
or
test
mov
pop
into
popf
xchg
pop
mov
out
insb
inc
loope
nop
push
jnp
jle
dec
cs
je
popa
clc
and
sub
insb
jmp
or
insl
dec
test
push
into
nop
scas
cmp
ret
sub
adc
mov
loopne
ror
sbb
aaa
int
adc
sarb
add
insb
in
jmp
outsl
jnp
mov
scas
repnz
scas
push
cli
push
pop
inc
cmp
fisubl
mov
mov
sbb
orb
cli
jp
das
and
insb
pop
xor
fdivrs
adc
jns
sub
sbb
xchg
out
das
inc
pop
sbb
into
test
xchg
imul
push
scas
daa
popa
cs
les
mov
repz
xor
xor
mov
push
xchg
aaa
call
cmp
in
xchg
or
mov
xorl
imul
fsubr
enter
popf
add
mov
les
xchg
aaa
and
mov
mov
ret
movsl
cmp
insl
lret
lcall
out
popf
sub
mov
aas
jae
push
fisubs
lods
push
push
mov
cmp
mov
xchg
xchg
lock
sbb
jmp
mov
jmp
push
jo
push
add
sbb
adc
shlb
mov
stos
aaa
sti
mov
lock
mov
or
adc
dec
arpl
cmp
and
data16
aad
sub
pushf
test
push
xchg
jnp
push
jl
xor
sbb
mov
push
jp
jg
dec
popa
adc
cmp
dec
mov
or
outsl
out
dec
pop
sub
fbstp
hlt
lods
sti
cld
jns
cwtl
xchg
aas
xchg
xor
mov
pop
and
dec
mov
mov
cmc
pop
mov
add
insb
stos
iret
repz
js
daa
iret
adc
or
js
mov
sub
push
pop
adc
push
js
roll
out
loop
dec
pop
xchg
pop
cli
sbb
movsb
push
jge
adc
or
enter
sbb
or
mov
jg
pusha
mov
popa
in
fildll
jns
xchg
mov
popf
lods
cmp
jae
cmp
aaa
int3
mov
sarb
sub
int
testl
xor
fs
xor
sub
popf
add
dec
jle
adc
xchg
mov
mov
and
jbe
xor
inc
fistl
cmpsl
jg
cmp
loopne
pop
ret
daa
and
jle
pop
push
test
test
jle
inc
sub
sub
in
dec
xchg
cmp
or
lods
jmp
out
out
adc
shrl
jmp
lcall
bound
pop
or
dec
loope
pop
and
hlt
and
mov
xor
sub
add
adc
push
push
fildl
pop
sub
insb
cmpl
adc
repz
dec
dec
add
jns
jo
inc
dec
std
mov
mulb
jnp
cmc
jae
mov
lret
scas
mov
mov
lcall
js
in
sub
fidivrs
loop
xchg
push
ja
push
pop
jb
add
sar
pusha
add
js
test
mov
out
out
xchg
call
mov
sub
test
xchg
cmpsl
mov
data16
aam
dec
sbb
pop
clc
popf
shlb
inc
movsb
inc
xlat
adc
adc
pop
daa
ss
test
or
cs
mov
mov
pop
loopne
shll
adc
adc
or
lret
lret
dec
mov
jo
pop
add
pop
rorb
fimull
add
push
lret
rclb
test
in
dec
sub
cmpsb
and
incl
stc
mov
in
adc
repz
movsb
or
jle
int
push
jle
xor
inc
pop
scas
bound
and
cmpsb
addr16
mov
divb
push
push
xor
in
jbe
add
cs
adc
mov
pop
adc
sahf
adcl
out
dec
mov
hlt
movsl
push
mov
inc
add
xorb
shll
clc
add
mov
xor
stc
into
xchg
mov
in
mov
stos
mov
cmp
out
xchg
repnz
pop
rsqrtps
jle
pushf
xor
aam
sub
push
cld
cmp
js
icebp
test
or
add
inc
adc
mov
in
js
mov
cmpsb
lods
add
mov
push
sti
jg
mov
jmp
ljmp
repnz
ja
mov
out
sbb
lret
xor
movsl
jb
xchg
ja
fisubrs
mov
push
add
aad
js
dec
inc
inc
ljmp
cmp
pop
push
scas
jecxz
imul
insl
xlat
inc
push
rclb
cmpsl
addr16
fsub
pop
jp
subl
jmp
xchg
xor
daa
pop
pop
ljmp
xchg
in
stc
cli
es
mov
subb
mov
and
mov
fsts
inc
aad
mov
inc
add
stc
jecxz
repnz
adc
outsl
push
xor
and
mov
and
in
sub
aam
pusha
push
ja
pop
pop
sbb
ret
cwtl
aaa
pop
popf
outsb
or
inc
int3
xchg
jmp
fstpl
xlat
call
movb
xor
orl
adc
mov
jbe
in
mov
xor
jp
and
xchg
pusha
mov
xchg
jmp
rorl
insb
cwtl
insb
cwtl
dec
mov
jp
sahf
stos
fisttps
jb
scas
mov
adc
in
sub
es
jno
sub
out
cmp
or
xchg
mov
arpl
xchg
out
sub
dec
imul
xchg
test
xor
jg
pop
mov
or
imul
pushf
out
loope
xor
add
and
xchg
mov
out
sbb
std
cmc
aad
pop
push
popf
cmp
jo
pop
std
inc
imul
loop
xchg
sbb
iret
xor
clc
aaa
into
sbb
pusha
pop
shrb
inc
mov
ret
aaa
out
hlt
add
jnp
lock
out
and
in
das
stc
sub
mov
cmp
iret
pop
or
xchg
mov
sub
mov
xchg
stos
xchg
adc
enter
pop
cld
mov
rolb
stos
pop
stc
cmpb
sub
mov
and
add
lcall
stc
inc
mov
cmp
dec
call
pop
and
mov
add
lds
shll
cmc
fwait
data16
cmc
and
mov
arpl
pop
out
loope
mov
xchg
not
clc
int
arpl
cmpsl
and
xlat
es
xchg
xor
dec
lea
call
adc
test
out
negl
or
jmp
loopne
sub
and
pop
jp
nop
mov
cmp
cmp
xchg
mov
mov
in
mov
js
pop
and
or
push
fstp
imul
mov
sbb
out
or
fwait
mov
and
fwait
xchg
loope
add
stos
pop
adc
test
ret
push
dec
mov
adc
jmp
xchg
push
xchg
dec
mov
into
mov
rcr
stc
cld
mov
cmpsl
jae
out
inc
insl
push
fwait
adc
rcll
imul
idivb
mov
xchg
fidivl
inc
ljmp
push
ss
sbb
and
out
je
addl
int
xchg
xchg
out
iret
xchg
push
sti
and
cmp
sbb
ret
ljmp
mov
mov
add
mov
repz
sub
mov
push
sub
xor
xor
imul
xlat
sub
int
xor
out
les
inc
lcall
lods
sbb
add
hlt
rcrl
add
outsb
sbb
push
inc
adc
loopne
outsl
pop
inc
sbbl
dec
mov
inc
cmp
sbb
adc
arpl
mov
inc
daa
mov
sbb
xchg
lcall
jl
mov
repz
add
mov
adc
sub
lret
pop
orb
xor
outsl
and
sbb
mov
scas
jmp
dec
add
xor
pop
stos
rorl
fsub
movl
jg
test
testl
fisubs
lahf
std
rol
push
xchg
jecxz
xchg
xchg
xlat
xor
jmp
xchg
and
hlt
dec
cmp
jae
call
mov
push
stc
out
mov
pop
mov
push
dec
add
jg
jl
push
or
movsb
cmp
insb
pop
mov
adc
inc
push
test
inc
fsubrp
jecxz
scas
in
loop
jmp
sub
dec
les
push
pop
loop
mov
fildl
pop
lcall
mov
mov
pusha
or
mov
lea
je
push
mov
sub
fs
out
jno
loope
mov
cwtl
lea
pusha
push
icebp
mov
dec
mov
adc
js
out
and
pop
insl
push
xchg
dec
lahf
adcl
sbb
fldl
sub
mov
xlat
dec
sahf
lret
adc
pop
enter
inc
add
popa
xor
mov
or
in
mov
insl
loopne
ja
ljmp
push
mov
sbb
lahf
repnz
jge
lea
jns
sti
sbb
mov
das
sti
sbb
divl
je
xchg
int3
into
insl
orb
pop
mov
stc
jmp
adc
adc
and
mov
dec
sub
movl
ror
adc
push
pop
cwtl
fcomps
sub
lds
and
push
pop
out
inc
es
and
push
fdivrl
mov
test
push
nop
or
ret
inc
mov
or
mov
push
mov
cli
mov
in
sbb
in
push
popa
sub
sub
jecxz
inc
cs
fwait
jns
and
cwtl
add
pop
mov
aas
ljmp
hlt
jp
cmp
or
mov
addr16
sbb
inc
out
lret
nop
sbb
imul
out
sbb
leave
into
shr
dec
rcrl
lret
out
outsl
push
in
aaa
nop
xor
mov
mov
jg
sbb
in
roll
dec
inc
stos
mul
icebp
jo
xor
popa
jle
loopne
shlb
cli
loop
loopne
dec
shll
aaa
pop
adc
dec
test
push
xchg
xchg
mov
dec
out
ss
jo
sub
es
or
ljmp
popa
ror
cmp
dec
mov
cli
ficoml
and
inc
out
jne
lea
xor
push
push
movsl
sub
add
add
sub
mov
mov
leave
fadds
lds
ljmp
jg
cmpsl
lahf
cmp
js,pt
jle
aam
xor
lret
in
adc
loopne
rcrb
lock
int
lock
add
les
shrl
pop
pop
mov
gs
fcompl
xchg
lds
xchg
sahf
es
push
cmpsb
rorb
lock
mov
stos
sar
in
out
add
xchg
jg
pusha
push
add
ds
inc
cmpb
movl
jg
in
mov
data16
mov
inc
negb
mov
ljmp
enter
lock
fadd
push
sbbl
cli
mov
out
lods
js
repz
jo
push
idivl
mov
iret
and
aad
dec
jnp
fsubs
mov
xorb
jb
dec
ljmp
push
fsubl
rcr
stos
adc
orl
cmpsl
mov
mov
mov
pusha
mov
pop
outsb
bound
pop
cld
and
pop
mov
ja
and
inc
movsb
cmp
shlb
or
cmp
adc
imul
popf
dec
fs
xchg
in
or
fbld
subb
outsb
pop
icebp
mov
jne
and
lds
mov
add
pop
out
call
js
dec
mov
inc
aas
pop
mov
dec
stos
nop
push
mov
cmp
movb
into
mov
imul
cwtl
iret
mov
or
cmc
cltd
jge
loop
jecxz
sub
inc
xchg
int3
dec
outsb
push
push
mov
hlt
out
dec
jmp
xchg
rcrl
push
loope
mov
sub
jno
jne
dec
lods
movsl
out
in
pop
sbb
mov
cmpsl
inc
out
mov
ss
pop
jmp
add
fs
push
fldl
inc
inc
jmp
out
cs
pop
rclb
fwait
sbb
pop
and
mov
into
addr16
jae
dec
dec
repz
cmp
in
and
cmp
arpl
fnstenv
jo
add
sbb
sbb
xor
cmp
push
sbb
mov
out
mov
cli
adc
inc
mov
push
popa
cli
mov
negl
popa
sahf
clc
jb
dec
inc
xor
mov
jl
dec
les
jmp
adc
adc
sbb
mov
jle
rcr
in
lds
mov
or
pop
js
std
mov
jle
jo
pop
shrl
jg
incb
mov
pop
push
pop
ds
add
mov
pop
mov
mov
mov
add
add
xor
sub
mov
fbstp
pop
sub
lcall
or
mov
test
lods
inc
adc
dec
fdivl
xchg
xlat
adc
hlt
sub
push
jmp
movsl
xor
add
pop
pop
mov
shlb
mov
inc
shl
in
add
leave
in
dec
ret
outsb
sbb
or
push
icebp
mov
mov
xchg
sbbl
fildl
loope
add
jmp
test
and
loope
cltd
hlt
xchg
arpl
add
call
jp
pop
sarl
fstpl
rdmsr
push
stos
repnz
pop
out
lahf
pop
ja
cmpsb
hlt
cmc
scas
std
sbb
and
rcrl
add
mov
out
cmp
dec
stos
inc
mov
sbb
or
xor
pop
mov
outsl
fwait
and
es
xchg
dec
imul
mov
xchg
ss
movsl
leave
dec
xor
aam
xchg
inc
push
add
xchg
les
mov
daa
lods
or
push
leave
fcoms
mov
bound
aam
mov
popf
test
sub
xor
cmp
dec
mov
leave
xor
ljmp
or
cmp
scas
mov
push
mov
fidivrs
fwait
aad
inc
jge
fisttpll
push
pop
ret
and
testb
inc
xor
out
inc
popf
mov
dec
hlt
mov
dec
xor
out
clc
add
mov
dec
andb
mov
fisubl
xor
jg
and
ffreep
les
pop
xor
aas
pop
push
cwtl
dec
cmp
fs
scas
inc
bound
sbb
cmp
and
push
sub
mov
shr
xor
repnz
sbb
xorb
xchg
mov
stc
sub
mov
cmp
mov
test
or
repz
inc
scas
cmp
or
mov
or
push
sbb
sbb
sbb
repnz
ficoml
shll
fsubr
or
xlat
dec
test
mov
mov
jl
les
lds
xor
add
mov
and
jl
outsl
sub
pop
repnz
push
jne
vmread
in
leave
cmp
shr
and
and
add
mov
inc
lods
mov
push
in
xchg
sbb
or
push
stos
dec
adc
lds
rorb
or
push
lock
es
jle
mov
outsl
lea
jp
fwait
xor
aad
adc
std
fldcw
mov
pop
jne
cli
dec
add
pop
out
ja
outsb
inc
out
in
test
cli
test
xchg
sbb
gs
or
mov
and
pop
mov
pop
xor
add
push
das
cmp
ja
fisttpll
cmp
or
xchg
daa
or
xlat
and
fstp
xchg
sub
aam
ljmp
inc
sbb
inc
int3
lods
sub
adc
add
aas
bound
mov
dec
or
push
ds
ds
pop
xlat
and
inc
lea
or
jmp
dec
mov
cld
mov
xor
jae
bound
and
adc
lock
jp
lahf
icebp
mov
std
cs
mov
pop
mov
cmp
sbb
mov
dec
jo
out
dec
push
cmp
dec
xchg
das
push
adc
dec
xor
setg
sbb
loopne
push
xchg
cmp
pop
test
jle
ss
jne
iret
fdiv
hlt
inc
hlt
inc
jnp
pop
push
jg
sbb
leave
aam
or
push
sub
insb
cmp
sbb
movsl
pop
pop
jb
nop
mov
mov
mov
lret
mov
adc
fildl
xor
inc
inc
push
sbb
bnd
push
stc
test
sub
subl
out
or
outsl
push
lods
leave
fcoml
jo
lea
cmp
nop
or
mov
adcl
adc
enter
mov
jl
imul
fists
cmp
scas
push
mov
icebp
mov
pop
movsl
imul
dec
jo
sbbl
das
pop
mov
int
lcall
push
adc
mov
fdivs
fisubrl
lea
or
inc
mov
call
add
jb
imul
jle
cmc
cmpsb
stos
pop
lret
add
popa
mov
xchg
and
xchg
mov
js
hlt
mov
out
mov
adc
pop
aam
add
sarb
aas
jnp
xchg
iret
imul
rclb
or
adc
or
adc
mov
sahf
in
outsl
sbb
cmc
cltd
sub
jecxz
mov
inc
cmp
sub
push
cmp
fucom
dec
mov
aaa
es
add
jp
outsl
testl
pop
aad
pusha
mov
fidivrl
pop
jo
dec
insb
mov
lods
andnps
add
clc
data16
sbb
mov
pop
out
xchg
sbb
cmp
pop
int
pop
pop
push
inc
jne
inc
dec
dec
ds
imul
mov
jle
and
pop
clc
push
xchg
test
mov
mov
dec
push
push
mov
inc
ficoms
test
movsb
lret
jge
push
and
movsl
sub
movsl
rcrl
sbb
lret
jge
maxps
add
push
mov
pop
add
rcrl
lock
dec
mov
add
jb
in
in
xchg
xchg
fistps
jp
sub
stc
jmp
xchg
jne
and
test
add
lods
sahf
lea
pop
xchg
dec
sbb
scas
xchg
enter
inc
gs
jae
test
mov
dec
and
mov
insb
push
lret
into
cmp
jbe
mov
lret
sub
adc
aam
jns
hlt
daa
shr
cmp
cmp
cmp
pusha
cltd
pop
loop
call
xor
or
pushf
test
js
jg
xor
cwtl
outsl
pop
inc
sbb
fcoms
scas
dec
or
mov
aas
jnp
es
pop
jbe
jns
lock
push
fstpl
iret
insl
pop
inc
adc
inc
movsl
jbe
decb
ror
mov
mov
xchg
inc
insb
cmc
popf
mov
andl
ret
js
cltd
xchg
rol
sub
repnz
or
or
push
cmp
push
inc
ds
negl
lods
rorb
pop
xor
inc
inc
xchg
or
inc
test
aad
push
enter
pop
xchg
leave
mov
and
gs
test
js
out
and
inc
push
test
idivb
sbb
and
mov
jne
dec
sbb
xchg
push
mov
fnstenv
mov
addps
push
decl
xor
push
loop
xor
addl
dec
in
imul
pop
xchg
mov
rep
outsb
pop
aam
add
mov
aas
addl
inc
add
mov
loopne
mov
jge
adc
repnz
or
jmp
pop
sti
pop
xor
xor
push
adc
and
inc
and
fsubrl
xchg
cmc
or
push
xor
out
jge
push
sub
push
sbbb
pop
mov
ljmp
imul
push
pop
or
nop
fiadds
jmp
dec
jge
and
in
and
dec
cltd
pop
shlb
scas
gs
inc
pop
cmp
inc
ljmp
and
rorb
repz
arpl
xor
dec
out
sub
pop
xchg
cmp
ljmp
mov
negl
jecxz
jmp
or
cmc
ljmp
lds
add
loop
repnz
pop
repz
push
jnp
sub
mov
pushf
imul
add
in
popa
stos
xorb
ds
jo
mov
cmp
xchg
xor
xlat
adc
les
aad
dec
jmp
inc
lret
lds
mov
adc
mov
call
rcrl
or
xor
jae
int
xor
sub
imul
xor
in
test
jecxz
push
push
mov
jne
jbe
sti
xor
sbb
orb
fisttpl
aam
push
sub
stos
push
sub
pop
push
pop
into
cmc
in
add
insl
push
outsb
aam
push
add
sbb
pop
mull
out
rorb
push
andb
cwtl
jae
idiv
daa
int
enter
cmp
test
xor
sbb
int3
xchg
dec
pop
xor
icebp
scas
or
fisttps
mov
dec
jp
icebp
scas
or
xchg
cmp
pop
in
mov
scas
fst
add
gs
cmp
mov
sahf
bound
sub
movsl
stos
sbb
add
std
dec
xor
dec
sti
cmp
jecxz
mov
imul
mov
adc
iret
dec
jge
dec
aas
push
mov
sarb
mov
fists
pop
cmp
push
inc
push
test
movsl
jae
sbbl
insb
xchg
xor
sub
adc
mov
je
insb
iret
in
jnp
pop
jecxz
das
lock
cld
pop
dec
mov
lcall
add
inc
loopne,pt
mulb
xchg
in
xchg
jmp
out
pushf
mov
enter
lods
xlat
sub
aad
cmc
sub
stos
popa
into
xchg
adc
or
mov
xchg
arpl
dec
pop
adc
or
addr16
xchg
cmp
jp
mov
int
in
xor
andl
mov
xchg
push
sub
adc
insb
sub
sarl
cmc
mov
inc
dec
sbb
sbb
mov
loopne
jle
inc
cmc
repz
sub
js
xorl
jg
sarb
jnp
int
xchg
dec
iret
ds
pop
pop
imul
sub
jg
mov
out
sbb
call
jb
xor
leave
mov
std
add
test
fistpll
jg
hlt
int
in
aas
lock
and
jg
shll
cmp
ret
js
sub
repnz
mov
add
shrl
ret
mov
dec
fs
mov
mov
cld
jle
jmp
cmp
lock
or
cmp
js
cmp
je
icebp
push
pmulhuw
aad
std
sbb
add
imul
xor
sahf
sti
into
push
pushf
mov
push
test
sbb
mov
lea
jne
lea
div
cmc
add
and
push
out
dec
and
outsl
aaa
mov
push
insb
mov
jnp
push
or
jp
sar
lock
inc
shll
push
lods
mov
pop
adcl
push
cmp
sahf
push
cmpsl
stos
jge
pop
out
adc
cmp
movsb
fcmovne
outsl
cmpsl
inc
mov
mov
mov
scas
pop
push
pop
pop
int3
aas
fcmovu
sbb
imul
add
mov
add
stc
push
jecxz
mov
cmp
into
movsl
fs
cmp
imul
or
jo
xor
mov
mov
and
in
test
into
lea
xchg
and
fildl
xchg
fs
out
add
mov
test
sahf
dec
pop
xor
setns
rcr
cmp
mul
adc
cmp
test
xor
pop
cmpl
mov
pop
mov
subl
jle
mov
repz
cmp
mov
xor
icebp
mov
mov
out
pusha
sub
sbb
in
insb
jne
lods
and
lcall
dec
or
fistl
mov
push
insb
mov
lods
mov
pop
cmp
stos
jns
cmp
cltd
lds
aam
scas
add
inc
and
out
mov
fisttps
into
dec
dec
xor
or
nop
jne
dec
push
add
mov
xchg
iret
inc
call
jmp
clc
loopne
sub
popa
jb
dec
xor
or
mov
shl
movb
les
enter
xor
or
lcall
xor
pop
jae
das
dec
ret
push
shrb
add
mov
add
xchg
pop
cmp
rep
test
bound
add
arpl
jg
lahf
ret
push
test
and
xchg
mov
inc
int3
insb
les
insb
sub
xor
sbb
out
inc
cmpsb
aas
cmpsb
push
cwtl
faddl
cld
pop
mov
xchg
add
mov
mov
and
jp
fmul
cmp
jno
or
and
mov
ds
mov
fdivl
mov
push
test
jae
in
inc
xor
jnp
test
bound
xchg
pop
xorl
das
test
or
jl
outsb
in
pop
lret
or
mov
into
ja
sbb
xor
daa
in
sub
dec
dec
sbb
movsl
cmpsl
imul
inc
in
les
pop
cld
je
mov
mov
sub
add
std
inc
cs
sub
xbegin
shll
pop
je
push
xor
loopne
ljmp
aas
out
dec
js
daa
pop
dec
loope
ret
lcall
xor
clc
bound
test
test
cwtl
xchg
dec
fnstcw
adc
jg
sbb
xor
mov
hlt
jp
mov
cmpsl
pop
inc
pop
pop
test
out
inc
flds
and
arpl
xor
mov
jnp
add
sarb
into
and
pop
out
dec
add
dec
mov
push
mov
leave
add
sahf
lahf
adc
pop
lea
fiadds
xor
fisubs
imul
pop
nop
rcll
xor
sbb
int
pop
gs
sbb
repnz
and
mov
cmp
inc
or
ret
out
xor
mov
mov
in
sbb
mov
sbb
sbb
hlt
xor
sub
or
inc
xorb
sub
cli
add
in
sbb
sbb
lret
cmpb
sub
xor
mov
andb
xchg
mov
xor
cmpsl
xlat
lcall
rcll
mov
mov
pop
mov
cmc
loope
sbb
outsb
lock
mov
push
jb
mov
rolb
sub
mov
dec
add
test
movsb
lahf
pop
lcall
cmp
lock
inc
inc
push
dec
xor
iret
icebp
mov
xchg
pop
daa
dec
adc
sti
mov
fadd
and
jg
ss
lods
int
adc
ljmp
and
lds
xchg
mov
sub
xlat
xor
pop
inc
lret
insl
mov
mov
inc
jo
push
mov
xchg
sarb
sbb
add
inc
in
das
mov
lcall
dec
rolb
lods
pop
test
arpl
mull
inc
push
adcl
push
mov
stos
cli
adc
pop
adc
fldt
stc
sti
bound
mov
lds
outsb
shl
add
inc
jmp
push
ja
jl
sahf
xchg
pop
les
push
or
ror
pop
lds
repz
lea
fsts
pop
cmp
not
pop
adc
cmp
or
lahf
mov
paddsw
aad
nop
xlat
in
sub
inc
mov
mov
pop
test
int
cmp
sahf
jb
xor
aad
xor
das
push
stos
out
fwait
xor
adc
push
sub
ja
lcall
mov
jb
mov
sub
roll
mov
mov
lcall
lods
jle
sbb
or
adc
fisttpll
cmpb
sub
pop
in
dec
xor
xchg
arpl
and
aaa
pushaw
push
jmp
out
add
pop
push
mov
arpl
xchg
mov
aaa
fwait
mov
cmpsl
xchg
sbb
xchg
inc
test
mov
push
push
in
out
sbb
cli
leave
es
mov
mov
xchg
enter
repz
and
push
and
mov
pop
fwait
sbb
lahf
jge
outsl
mov
roll
outsl
leave
push
xchg
enter
in
add
cli
inc
stc
out
aad
xchg
jp
je
or
iret
inc
lock
popa
mov
inc
lds
lcall
pop
xchg
inc
pop
scas
xor
push
enter
and
add
rcrl
inc
arpl
push
jno
xorl
fisubs
aam
pop
cmpsl
cmp
pop
mov
pop
cmpsl
xchg
lock
lds
sar
mov
jbe
dec
enter
out
jae
iret
push
inc
in
jb
jns
inc
in
test
mov
rol
mov
pop
or
les
cli
inc
sub
cwtl
call
cmp
shlb
mov
mov
cmpsb
scas
jl
daa
loop
daa
jge
pop
and
mov
ret
inc
mov
dec
ds
xor
inc
loopne
dec
xor
addr16
jae
nop
mov
cmp
adc
mov
je
xchg
jp
jp
cld
mov
ds
cmpsl
aam
mov
and
and
dec
push
dec
sub
mov
adc
out
pop
rorb
cmp
add
mov
arpl
addr16
sbb
mov
jae
dec
loop
popa
or
repz
out
lret
jmp
push
sub
std
xchg
cmp
sti
jnp
or
movsl
out
test
adcl
mov
fists
push
adc
pop
test
cwtl
add
jp
mov
dec
inc
xor
popf
add
mov
inc
mov
or
add
pop
mov
add
popf
mov
push
sub
movsl
aam
cmp
rep
and
rcrl
fdivl
and
jno
imul
mov
dec
xchg
enter
jne
les
push
pushl
pop
mov
xchg
cmp
mov
mov
enter
jp
and
jo
test
dec
push
sbb
push
int3
mov
mulb
test
xchg
hlt
sbb
mov
in
iret
dec
movsb
fistl
xchg
faddl
adc
rorl
inc
cli
sub
or
out
mov
ds
call
and
mov
dec
call
push
dec
clc
dec
cmp
mov
add
into
mov
daa
sbb
sub
cmpsl
call
jge
inc
stos
cwtl
roll
sbb
sbb
in
into
adc
in
sbb
leave
mov
push
lea
fld
jae
addr16
addr16
pop
jmp
fnstenv
add
fnstcw
cli
jnp
pusha
je
sub
jle
pushf
ret
add
out
lcall
pop
out
xor
mov
int3
xchg
stc
push
js
inc
into
xor
xchg
push
gs
mov
push
stos
jge
xchg
stos
lods
jo
xor
push
xchg
popa
mov
xor
ss
lret
pop
cmp
lahf
icebp
scas
inc
std
adc
call
fldt
pop
dec
push
std
mov
mov
cmpsb
pop
cltd
pop
je
and
incb
push
jg
or
jg
sub
lods
lahf
mov
sub
les
sbb
add
movsl
mov
sarb
xor
jle
loope
jno
push
cwtl
repnz
addr16
xor
mov
mov
push
jg
notb
cmp
jbe
icebp
sarl
gs
adc
jmp
mov
jg
fidivrs
inc
ja
jb
xchg
popa
pop
xor
sbb
adc
aad
popf
fcoms
rcrl
shlb
pop
xor
pop
jnp
pop
inc
push
mov
js
lret
popf
insb
adc
jecxz
scas
fiadds
dec
in
mov
or
ds
mov
and
test
addr16
or
mov
mov
stos
sub
xor
and
sub
lods
mov
add
dec
mov
adc
std
push
loope
jge
ret
or
lret
mov
mov
fimull
pop
nop
sarb
cmc
xchg
xor
lret
mov
dec
add
dec
pop
mov
add
ret
jb
or
scas
or
lahf
lcall
cmp
push
ds
fldcw
push
mov
xlat
mov
sub
pop
pop
shlb
mov
mov
xchg
push
test
sub
pop
mov
stos
int
inc
cwtl
rorl
pop
dec
es
push
add
push
xchg
sub
out
push
push
lock
lods
inc
mov
push
push
mov
jne
cmp
mov
mov
cld
dec
xchg
mov
xor
gs
es
loop
xor
sub
arpl
cmpsb
fsubr
push
push
fsub
loop
cmp
jge
push
inc
out
loop
fistpll
push
ss
insl
jmp
mov
lcall
test
and
outsl
add
xlat
bound
call
pusha
cmpsb
or
or
lods
and
xchg
shlb
pop
jae
mov
stos
scas
xor
sub
int
xchg
aad
out
jnp
jp
vpaddb
mov
rclb
mov
aam
popa
insb
sbb
addr16
mov
xor
xchg
pop
jbe
je
lea
sub
in
repz
cmc
dec
pop
arpl
shll
pop
out
mov
lret
add
rolb
mov
jno
loopne
movsb
xor
cmpsb
dec
pusha
popf
cmp
outsl
push
and
inc
stos
out
push
lds
sbb
repz
adc
hlt
lahf
int
movsl
dec
popl
mov
push
aad
xor
icebp
or
and
lds
dec
pusha
test
nop
cmp
or
add
stos
cmc
into
and
xor
inc
fildl
imul
sahf
or
mov
xlat
jbe
arpl
or
hlt
sbb
inc
and
loopne
mov
js
mov
xor
cwtl
fnstenv
cli
jle
mov
pop
mov
and
mov
cltd
out
nop
rcll
decb
loope
cmp
xlat
inc
leave
xorb
push
sub
sub
ljmp
dec
fwait
sbb
add
jnp
jl
inc
mov
fldl
mov
iret
push
out
test
add
lret
movsl
sbbl
sub
adc
sub
cwtl
push
shl
inc
inc
xor
add
mov
in
das
sub
mov
js
dec
jo
lret
scas
dec
je
std
sbb
stos
xlat
xchg
mov
sti
ret
loopne
jmp
inc
pop
stc
inc
xor
xchg
xchg
stos
xorb
cltd
fdiv
cmp
rolb
add
jb
pop
add
jp
mov
sti
xchg
cld
rcr
outsl
mov
cmpsl
int
fucomi
xor
and
add
add
jno
adc
xchg
outsb
ss
pop
lahf
js
aas
cmpsb
int3
jne
and
insl
jb
outsl
mov
mov
sahf
inc
out
sub
call
jne
lds
jge
dec
nop
mov
push
stos
mov
nop
xor
movsl
xchg
jo
jne
fidivrl
mov
lock
lcall
testb
cld
push
cwtl
mov
mov
out
mov
mov
jp
out
ja,pt
adc
pusha
cltd
rcll
lret
mov
pusha
fucomi
jge
jne
iret
rcl
inc
aas
pop
es
iret
inc
popl
test
out
sti
stc
inc
sbb
dec
xor
hlt
fchs
mov
pop
or
mov
sbb
dec
cmc
loop
push
adc
cld
pusha
and
adc
jnp
cltd
mov
and
and
test
add
xor
adc
jmp
inc
cmp
mov
xchg
jae
aad
cmp
jg
mov
or
outsl
scas
aas
loop
int3
mov
popa
sub
add
lds
mov
adcl
inc
hlt
mov
test
test
test
add
add
mov
fisttpl
jge
loope
dec
mov
js
test
call
testb
jae
pop
xor
test
sub
pop
mov
shrb
push
icebp
rol
cmp
stc
pop
add
pop
xchg
xor
mov
test
aas
sbb
pop
pop
lods
push
sbb
dec
repnz
hlt
dec
adc
inc
ficoml
js
mov
lods
mov
into
ja
dec
arpl
mov
inc
fnstcw
or
push
sbb
push
lock
mov
mov
stos
jp
mov
aad
jo
fsubp
setae
out
test
stos
cmp
rcr
loop
gs
stos
and
cmp
lahf
test
sub
jae
mov
xchg
xorb
sub
stos
xor
mov
pop
fdivrl
pusha
fildl
sbb
mov
adc
out
push
sub
xor
loopne
cli
mov
push
jp
pop
mov
push
jno
jo
push
popa
jle
fs
mov
adc
jg
mov
or
sbb
xchg
lret
sbb
lods
popf
inc
mov
jl
data16
fdivrp
insb
inc
mov
ljmp
mov
mov
inc
jno
mov
pop
ficompl
sbb
mov
or
pop
pop
pop
mov
stos
cmp
repnz
mov
pusha
fisubrs
jnp
jae
or
or
cs
adc
mov
cmp
and
outsb
arpl
pop
mov
dec
shlb
adc
push
into
sub
rolb
test
and
cmp
adc
add
add
cmp
bound
cltd
jns
push
or
sbb
decl
int
or
pushf
inc
mov
and
xor
imul
pop
enter
sbb
test
add
push
xor
icebp
or
jae
mov
lcall
cmp
out
adc
inc
fisubs
mov
adc
adc
sbb
out
xchg
pop
xor
out
xchg
cmpsl
jae
arpl
sbb
cmpsl
inc
cmp
in
cmp
xor
cwtl
loope
jno
sub
popa
cmpb
or
mov
test
fwait
mov
mov
dec
and
js
stos
leave
cmpl
gs
jl
lcall
cmp
mov
mov
push
in
xchg
fiadds
jge
mov
stos
mov
fnsave
push
mov
xor
imul
cmpsl
movsl
jo
test
testl
in
mov
mov
jno
sub
jge
adc
adc
mov
cmp
out
cmc
xchg
xchg
shrb
inc
jmp
nop
adc
push
inc
in
xlat
add
and
movsl
int3
xor
aaa
and
push
les
imul
and
fnsave
movsl
sbb
jle
or
out
popa
lea
xchg
out
sbb
mov
fisubrs
out
xchg
adc
fidivl
shlb
aam
jns
pop
push
xchg
xor
pop
aaa
sub
adc
or
in
inc
insl
jno
xchg
test
shlb
and
or
pop
test
push
imul
in
and
in
and
test
nop
stos
ss
jecxz
nop
adc
jle
or
aam
lahf
add
pop
fs
cmpsb
xchg
dec
and
fstl
cmp
dec
int3
mov
xchg
or
jmp
cli
cmp
addl
imul
out
inc
in
dec
cmpsl
cmp
dec
pop
mov
leave
mov
push
xor
popf
sbb
les
cmp
out
sbbb
ficomps
pop
mov
ljmp
pop
ret
sbb
rcr
cwtl
lahf
jmp
push
pop
int3
pop
dec
or
aam
and
enter
or
into
lods
lds
test
test
add
out
xchg
cli
pop
test
lock
ja
stos
xchg
or
dec
mov
cmpsb
mulb
cmp
dec
movsl
dec
addr16
fsubl
test
lock
xor
push
insb
insl
add
lcall
rclb
add
addr16
xchg
in
test
mov
adc
lock
lock
pop
inc
into
scas
adc
cmpsb
jns
inc
add
int
in
cmp
mov
mov
or
inc
aam
ud2
xchg
imul
sbb
xor
mov
lcall
lret
ret
cmpsb
push
lods
or
gs
in
aad
std
mov
and
sub
xor
pushf
mov
cmpsl
cmp
fidivl
jno
out
or
loopne
inc
aad
popf
or
int3
lds
sarl
jae
cwtl
push
ret
cwtl
fsubrl
sub
loop
jo
pop
cmp
jp
push
cli
rolb
add
les
lods
sbb
stos
cmp
add
fwait
cwtl
dec
les
and
mov
lea
xchg
inc
les
in
xchg
adc
sbb
test
int
test
test
inc
mov
or
mov
pop
stos
add
nop
xor
sbb
rclb
ja
mov
and
sahf
mov
mov
inc
push
mov
sbb
add
add
arpl
jbe
iret
mov
daa
inc
les
xor
icebp
andb
or
mov
stos
pop
sbb
cmp
xchg
loop
fwait
sbb
xlat
mov
or
lahf
mov
icebp
mov
insb
add
pop
cmp
loope
dec
sahf
jae
into
fwait
xor
lock
test
jb
mov
mov
lds
aad
cld
inc
lock
mov
dec
into
out
or
loopne
mov
push
xchg
add
xchg
decb
das
repz
push
stos
mov
sub
pop
or
xchg
inc
mov
out
sub
push
insl
sub
insl
pop
sbb
ss
inc
fildl
xchg
mov
push
jnp
jge
dec
xchg
or
sbb
gs
dec
and
mov
nop
xchg
dec
cmc
shll
xchg
add
adc
cmp
jno
movsb
pop
hlt
and
xor
int3
push
push
mov
call
xchg
test
sub
xchg
and
mov
or
push
decl
mov
daa
adc
adc
push
test
pop
ficoms
mov
dec
xchg
push
push
push
repz
cmp
jmp
mov
js
les
movsb
xchg
push
je
fimuls
sbb
adc
mov
jecxz
mov
mov
mov
lret
or
pop
pop
int3
mov
icebp
aas
pop
push
cmp
xchg
add
mov
lods
cmc
inc
or
sbb
scas
stos
into
in
xchg
test
jl
mov
loopne
cli
adc
push
in
repnz
rcl
xchg
outsl
jge
push
dec
push
in
bound
test
xlat
or
push
push
repnz
cmp
sahf
dec
sahf
out
mov
push
xor
cmp
cmp
cli
inc
sbb
aam
lds
pop
lret
add
outsl
cmc
jle
mov
add
add
call
int
mov
lret
inc
fnstsw
mov
je
test
das
mov
jbe
mov
jbe
popf
mov
cmp
mov
dec
pop
cmp
adc
jns
inc
xlat
push
adc
dec
out
in
flds
mov
cmp
rcr
cmpsl
mov
push
rcrb
mov
in
in
mov
sub
add
arpl
adc
xor
xchg
or
mov
xchg
loop
adc
pop
push
sub
mov
dec
mov
aas
sub
iret
push
pop
push
xor
or
clc
jae
xor
sbb
movsb
push
mov
xor
or
dec
cwtl
mov
lea
insb
mov
mov
push
sub
xor
push
popa
push
dec
xchg
and
adc
cmc
push
push
insb
js
jle
cmp
push
push
inc
in
add
add
pop
and
mov
cli
cmp
push
popf
push
stos
cmc
into
mov
jmp
int
jl
imul
rolb
and
cmp
cmpsl
bound
push
mov
out
mov
cld
jne
mov
into
gs
nop
pop
push
pop
xor
mov
addr16
leave
push
dec
nop
cmpsb
pop
aaa
dec
xchg
push
repnz
stos
adc
stos
sbb
fistps
das
inc
or
mov
in
repnz
in
inc
add
xor
cld
mov
push
lods
lcall
or
xor
mov
int3
jmp
push
inc
fwait
mov
sarb
sbb
jle
cmp
xchg
xchg
outsb
cld
repz
stos
xchg
addr16
outsl
cmc
pop
scas
int3
jmp
fnsave
mul
js
aam
mov
push
push
jae
loop
dec
scas
pop
sbb
ljmp
data16
ljmp
push
stos
js
in
pop
nop
loope
pop
xchg
mov
cmp
frstor
leave
popa
inc
or
cmp
dec
test
jns
lds
xchg
fs
cmp
jns
stos
lods
arpl
dec
inc
sub
xchg
add
mov
push
or
jge
in
mov
mov
fbstp
or
add
mov
mov
ss
filds
mov
arpl
xorb
rcl
pop
xor
sub
call
jb,pt
push
push
cmp
push
or
push
mov
sub
jbe
push
jl
push
dec
stos
or
jns
adc
out
lea
out
jne
in
sub
loopne
into
movb
movsb
adc
push
jnp
mov
pop
dec
pop
ret
dec
push
call
and
aam
xchg
js
pop
enter
jmp
xchg
mov
shlb
fidivs
pop
insb
push
fcmovnbe
lock
or
movsl
sahf
pop
xchg
adcl
cmp
fwait
loopne
mov
jecxz
push
mov
sub
xchg
mov
fildll
sub
jle
adc
adc
add
xor
inc
outsl
pop
cmp
fs
ja
sbb
hlt
ja
mulb
push
mov
cld
out
imul
out
sub
clc
ret
in
ret
or
orl
in
dec
shlb
ret
sahf
scas
cld
jmp
inc
xchg
sar
rclb
xor
out
punpckhwd
add
mov
lret
mov
or
aaa
add
aam
xchg
mov
outsb
and
mov
mov
scas
lods
scas
cwtl
mov
push
repz
or
push
adc
filds
mov
xchg
jo
lret
mov
insl
mov
icebp
mov
cmp
cwtl
dec
fsubl
push
inc
jge
pop
push
mov
add
jb
mov
cmpsl
enter
aad
mov
lcall
aas
xor
jbe
or
fcmove
lea
out
fdivs
pop
adc
sbb
sbb
fildl
inc
insl
inc
test
dec
addr16
outsl
pop
mov
adc
xorb
cli
pusha
jle
adc
leave
in
sbb
sub
dec
pusha
sbb
lcall
pop
xchg
popa
testl
scas
xchg
or
mov
cli
inc
imul
jg
or
mov
ret
das
dec
popa
dec
cltd
mov
jl
mov
sub
aaa
mov
dec
jns
test
add
push
icebp
xor
push
dec
inc
xchg
xchg
ss
pop
shll
shrl
jno
mov
int3
sbb
xchg
sub
pop
adc
ret
dec
sub
pop
ds
loope
out
andb
enter
inc
xor
and
scas
mov
aam
cltd
xor
inc
push
fldcw
jmp
xchg
xchg
int3
fisubrl
adc
fbstp
loop
int3
jmp
std
or
xlat
add
bound
jnp
ss
movsl
repz
outsl
in
mov
lds
imul
pop
lret
mov
push
mov
testb
sbb
adc
jb
pop
movsl
jg
fisubs
mov
lcall
sbb
jle
fimull
and
test
aas
sbb
js
jae
in
roll
sbb
repnz
push
cmpsl
pop
add
fisubrl
test
jmp
icebp
inc
mov
aam
mov
xchg
push
push
ret
mov
jle
loopne,pn
imul
dec
add
mov
je
pushf
adc
repnz
in
sbb
int
cmc
adc
add
or
dec
shrl
push
test
mov
jmp
ja
test
sub
pop
test
into
jecxz
mov
push
cwtl
mov
sbb
jl
aad
repz
in
or
add
aaa
dec
mov
pop
xchg
mov
cmc
and
stc
jg
jae
xor
mov
std
je
cwtl
test
repnz
mov
imul
insb
movsl
cmp
xchg
out
sbb
add
int3
jno
test
testl
ret
fadd
mov
xchg
add
mov
push
iret
fs
mov
add
in
xor
xor
iret
test
stos
jae
loope
shr
pop
mov
xor
sub
mov
push
repnz
mov
or
push
and
cs
xor
shlb
scas
in
mov
cmp
cwtl
loopne
and
scas
dec
add
pusha
xor
jns
call
lret
dec
ret
pop
clc
cmp
loopne
inc
xchg
fwait
xchg
cmp
nop
stc
in
xchg
dec
xor
xor
fldenv
dec
xchg
push
cmp
push
into
pop
loop
nop
adc
fwait
and
cmpsl
push
or
aas
inc
push
movmskps
js
mov
cmp
push
pop
fstl
mov
lret
pop
mov
fwait
inc
insb
xlat
mov
cli
pop
aad
mov
jecxz
inc
int
fnstenv
jg
dec
loopne
xchg
and
arpl
mov
aad
sub
mov
cmp
test
jge
dec
pop
or
fsub
jmp
or
subl
or
es
rcr
nop
jnp
cmp
mov
sbb
add
cmpsl
push
cmp
ds
es
imul
push
pushf
jnp
sub
push
lods
pop
dec
stc
scas
xor
xor
ljmp
sbb
mov
xchg
pop
lahf
adc
mov
cmp
mov
ja
push
lock
sub
mov
es
dec
sub
andl
or
mov
pop
lods
les
push
xor
fcmove
push
sahf
ud2
enter
dec
test
fldenv
dec
mov
add
jge
push
pop
test
rolb
lcall
sub
xchg
add
dec
dec
adc
je
mov
or
mov
repz
push
daa
sub
rorl
push
cmp
push
insb
sub
negl
inc
popf
out
or
cmp
es
loop
mov
loopne
cltd
mov
sub
fs
test
mov
jecxz,pn
mov
mov
faddl
sub
jnp
aas
xchg
cltd
sub
std
inc
lahf
push
clc
mov
ljmp
mov
call
lret
mov
xchg
dec
pop
adc
std
xchg
outsb
sub
and
sbb
in
popf
test
add
test
arpl
sahf
cli
jg
dec
xchg
out
popa
outsb
shrw
xchg
orl
dec
xor
pusha
push
and
mov
sahf
sbb
adc
cmpsb
lcall
xchg
pop
int
jle
dec
push
and
out
lods
fnstsw
jno
subl
or
loopne
cmp
fidivs
xchg
jle
cmp
push
loopne
hlt
sub
xchg
mov
push
jbe
fistpl
dec
movsl
call
inc
lret
push
rorb
push
notb
inc
mov
jp
sti
out
mov
idivl
cmc
das
rcr
inc
xorb
push
mov
scas
mov
dec
mov
cmp
push
out
imul
lret
pop
cs
aad
test
sbb
pop
jle
repnz
jmp
jge
mov
test
mov
push
mov
push
scas
jb
mov
insb
inc
cmpsl
jns
xor
das
pop
cmp
in
fdivl
and
push
jns
mov
gs
jecxz
sub
mov
out
ds
pushl
jl
push
fistpl
cwtl
add
das
sbb
fisubs
xchg
shll
jecxz
jne
rol
stos
lock
xchg
xchg
pop
add
jae
sbbb
lods
sub
xor
mov
pop
add
push
cmp
xchg
inc
xchg
dec
mov
stos
xchg
out
push
iret
xor
dec
sub
ret
insl
in
int3
add
das
mov
sbb
arpl
cmpsl
add
and
inc
in
les
cmp
in
test
push
mov
xor
fsubrl
sti
xor
xchg
jbe
lock
icebp
mov
out
mov
and
mov
add
mov
or
pop
add
add
push
pop
lods
xor
push
stos
rcrl
stos
dec
mov
cmp
lret
es
lea
loop
stos
xor
lock
cmp
fistl
xor
cli
sbb
lods
sbbl
fsubrl
jle
cltd
add
mov
push
pop
popf
jnp
out
mov
loopne
pop
iret
imul
push
cmp
iret
sar
push
and
es
jns
test
scas
xor
push
cmp
xlat
enter
addb
cwtl
mov
test
paddusb
xor
lods
sub
outsl
lcall
inc
int
add
sbb
popa
nop
pop
dec
ror
repz
adc
ds
xor
or
inc
mov
dec
add
jmp
and
popl
dec
or
jo
adc
and
push
pop
push
ret
mov
lret
sbb
lahf
test
insb
aas
cwtl
lret
scas
or
mov
push
shlb
jl
push
bound
lock
mov
cld
xchg
sarb
jnp
js
decb
nop
imul
inc
sti
cltd
and
leave
mov
mov
push
inc
pushf
mov
adc
xchg
in
lods
jmp
cmp
cwtl
ljmp
mov
inc
ds
mov
into
lret
lods
cmpsb
pop
call
js
push
es
sbb
mov
pop
sub
out
sub
jo
lret
jo
mov
fdivl
xorb
sbb
in
xchg
inc
out
xchg
negl
push
out
stos
outsb
out
test
movsb
sub
popf
and
cmp
sub
lods
sbb
or
adc
jmp
in
test
into
dec
fimuls
jp
xchg
and
pop
jmp
lds
insl
sbbb
sub
shrl
pop
flds
mov
fisttpl
cmp
dec
aam
cmp
out
jns
dec
adc
scas
jne
jmp
pop
cltd
inc
lds
gs
adc
imul
cmpl
push
insb
mov
es
aaa
xchg
and
push
and
imul
mov
dec
jne
xchg
int
xor
imul
add
xchg
das
rorb
xchg
pop
cmpsb
fadds
xchg
lds
jmp
sahf
lea
mov
xchg
xchg
lods
adc
jo
or
std
add
stos
jmp
shll
jne
or
in
and
pop
std
lds
mov
dec
adc
sbb
push
lcall
inc
jb
adc
mov
addr16
rorb
push
cmp
jmp
mov
mov
and
adc
push
adc
dec
xor
ret
aad
aas
and
hlt
vaddsd
adc
mov
movb
shll
in
push
mov
test
lret
push
xor
and
in
out
movsb
inc
or
mov
inc
push
mov
jg
pop
mov
lcall
mov
sub
scas
push
andl
leave
arpl
push
rorb
mov
iret
jl
inc
adc
rclb
push
xchg
and
push
mov
test
push
mov
xchg
rclb
enter
out
fcomps
mov
xchg
lahf
jnp
cltd
sbb
push
movsb
clc
scas
hlt
xor
fidivrs
cmp
ja
pop
and
stos
loopne
mov
pop
es
mov
cwtl
pop
inc
jmp
pop
jno
push
repnz
cmp
out
push
pop
xchg
shr
fwait
lock
pop
fldl
out
inc
mov
jo
xchg
mov
cli
lret
imul
outsb
mov
jp
push
inc
mov
inc
mov
daa
test
cmp
sub
or
add
mov
imul
jbe
repz
and
decl
pop
lods
cmpsb
int3
lods
jmp
cld
xchg
mov
pop
call
jno
rorl
sbb
and
sbb
xor
test
lock
mov
adc
adc
sub
sub
and
jne
inc
or
push
dec
cmp
mov
dec
les
add
add
mov
test
or
mov
pushf
loope
push
and
push
lock
add
lret
popa
rclb
mov
inc
push
mov
js
in
mov
out
or
mov
mov
imul
cmp
xor
push
leave
sub
push
das
mov
sahf
call
xor
leave
mov
inc
loop
test
popa
mov
std
shlb
push
push
sahf
or
leave
mov
cmpsb
push
jl
popf
in
ret
fdivs
lret
icebp
dec
xlat
jp
xchg
leave
or
mov
ror
outsl
ret
imul
inc
push
hlt
sbb
sahf
stos
sub
shrl
aas
sbb
lcall
outsb
jbe
insl
cmp
outsl
ljmp
push
jo
mov
clc
cli
pop
or
push
int
pop
jle
cmp
jae
sbb
shrb
xchg
aam
dec
dec
test
lods
sbb
out
adc
dec
test
js
xor
mov
mov
neg
movsl
cmc
rcll
int3
fildl
sbb
fbstp
data16
or
daa
insb
cmpsb
xor
hlt
hlt
lods
popa
lret
movsb
leave
rcr
mov
outsl
stos
test
or
es
cmp
es
pop
dec
fs
lcall
in
cmpl
fldl
push
ja
shll
cmp
pop
xor
push
jmp
std
arpl
movsb
test
add
mov
jbe
cmp
insl
push
enter
fsts
andb
mov
mov
push
loope
nop
ja
les
fwait
dec
jle
xor
jp
outsl
push
out
and
cmp
inc
mov
mov
xchg
or
dec
mov
sub
ja
jne
inc
xchg
jns
pop
cltd
mov
das
jae
mov
fwait
daa
mov
pop
mov
pop
sub
mov
fsub
cmp
sarb
dec
popf
adc
iret
xor
sbb
loop
bound
dec
inc
fimuls
loopne
incl
or
movsl
popa
sub
int3
aas
outsl
iret
ljmp
lret
bound
imulb
scas
cs
pop
fdivr
mov
mov
add
dec
adc
lahf
lahf
jmp
out
ret
mov
cmpsl
shll
lea
fwait
add
call
inc
mov
sbb
adc
push
icebp
and
jno
adc
add
mov
add
add
fistps
mov
ljmp
jns
lret
xchg
repz
std
sbb
push
jecxz
imul
inc
sbb
je
jo
test
call
cwtl
push
add
dec
mov
stos
push
cmp
cmp
sub
mov
jnp
cs
mov
jg
fcoml
dec
inc
popf
inc
sbb
dec
mov
xor
jmp
and
jmp
add
movsb
inc
ss
pushf
lcall
inc
mov
mov
out
inc
pushf
fbld
iret
cld
sub
popf
xchg
add
lret
adc
sbb
pusha
fimuls
lods
test
cmpsl
jnp
mov
cmp
jp
jae
xchg
inc
loop
push
lahf
xchg
loope
mov
lods
push
cmp
cli
or
shlb
int
cmp
inc
pop
sahf
push
add
sbb
inc
data16
mov
push
xchg
pop
andb
scas
rcl
fisubl
cmc
out
ja
pusha
jno
in
repz
mov
loop
div
aas
mov
and
gs
les
mov
lcall
xchg
mov
and
fsubs
fiaddl
mov
cmpsb
xlat
lods
into
clc
mov
xchg
lret
int3
push
push
lods
xchg
xor
js
jmp
int3
aaa
sbb
or
mov
push
push
test
push
push
in
push
mov
mov
xchg
leave
imul
sub
clc
int
mov
xchg
int
and
dec
sarb
mov
lods
jns
mov
inc
loope
rcrb
push
pop
test
lds
sub
mov
repz
pushf
push
mov
stc
and
mov
mov
sbb
lods
sbb
or
fisubs
sub
sbb
pop
dec
xlat
lds
mov
sbb
xor
addr16
add
mov
icebp
dec
addl
popf
xchg
sbb
shrb
sbb
cltd
jge
mov
ret
outsb
mov
mov
je
mov
jmp
jb
inc
addr16
xchg
icebp
adc
jnp
pushf
outsl
xchg
scas
icebp
cmp
aad
cmc
ja
daa
pop
lods
lret
mov
loopne
add
std
gs
inc
sarb
rorl
ss
pop
pop
insl
outsb
xor
xchg
dec
push
shlb
sub
push
addr16
xor
xor
mov
cltd
pop
js
pushl
add
int
in
sahf
inc
mov
ljmp
roll
pop
xlat
cmp
add
mov
mov
clc
mov
jne
push
mov
loope
xchg
mov
aaa
mov
adc
xchg
incb
sbb
jb
pop
js
push
jp
xchg
pusha
add
cmc
add
mov
lods
dec
imul
mov
lcall
icebp
or
mov
insb
js
jno
leave
mov
and
mov
mov
mov
sbb
mov
mov
dec
movsb
je
popa
gs
je
or
xchg
xor
repnz
ja
mov
push
add
testl
repz
fdivl
mov
xor
icebp
mov
dec
and
fisubl
adc
test
in
iret
lds
cmp
push
jecxz
cmp
xor
or
inc
je
fcoms
rorb
or
sahf
test
xor
pop
mov
ss
push
movsl
cmpsl
iret
push
or
sbbb
mull
adc
xor
inc
and
repnz
push
mov
sub
std
dec
push
fiadds
lea
pushf
mov
mov
mov
mov
cmp
adc
mov
mov
fistl
popf
ret
imul
or
mov
mov
push
loopne
push
sub
adc
jg
fsts
mov
xchg
add
mov
inc
pushl
cmp
push
mov
int
pop
inc
jne
out
and
data16
mov
mov
in
lock
push
mov
or
scas
clc
lret
movsb
cmp
sub
mov
daa
lock
cmp
push
mov
cli
addr16
add
lods
out
out
xchg
push
lahf
daa
jo
xchg
pop
pop
in
push
sahf
inc
push
imul
mov
mov
sbb
cmp
inc
push
or
or
adc
mov
push
sub
call
jbe
out
sti
sbb
lock
negb
add
xchg
ss
jo
sbb
sti
ret
scas
pop
jnp
insl
dec
adc
test
xor
jg
mov
sbb
out
flds
push
ret
in
out
je
andl
or
jns
xchg
mov
popl
xchg
or
xchg
cmp
clc
movsl
std
mov
popf
sub
cmp
push
jmp
test
ficompl
aaa
push
sahf
adc
xchg
das
mov
shlb
les
sbb
adc
add
or
test
fnsave
cmc
xchg
xchg
jp
push
sub
test
out
cmp
jecxz
sti
or
jnp
adc
andb
xchg
mov
lcall
vmovaps
mov
iret
aad
imul
lcall
scas
dec
dec
sub
movsb
push
or
shlb
rol
addl
sub
mov
lock
pop
movsb
loopne
pop
loope
or
or
js
nop
stos
repnz
push
inc
cmc
fisubl
jecxz
movnti
xorl
aad
cmp
push
jg
int
loope
aas
inc
lcall
cmpsl
inc
xor
cli
push
mov
int3
out
inc
andl
shlb
add
jg
dec
js
stos
lock
gs
xor
les
fidivl
inc
aas
push
pop
pop
dec
mov
cwtl
inc
push
out
lahf
ja
in
and
cli
pushf
add
lods
inc
sbb
fwait
out
mov
inc
in
add
js
je
fstpl
pusha
orl
mov
mov
mov
pushf
sbb
sub
and
mov
fldenv
fucom
adc
and
rol
roll
and
andl
fidivl
push
std
inc
adc
or
push
sbb
push
jbe
mov
into
das
mov
xorb
push
sub
push
jne
dec
or
adc
dec
push
jmp
or
mov
mov
jo
popf
adc
jp
xchg
add
dec
jo
lea
fidivs
fucom
lods
cmpb
or
in
push
movsb
mov
cwtl
ret
repz
lock
lock
out
imul
addb
das
add
mov
sbb
inc
dec
je
dec
jb
push
addr16
nop
shrl
sarb
mov
adc
xchg
adc
sub
or
rclb
pop
xchg
mov
mov
mov
mov
sub
daa
add
sti
outsb
loop
sbb
fmull
cmpsl
mov
and
insb
dec
dec
or
sbb
into
mov
outsl
leave
lea
pop
xchg
jg
les
jae
loope
fildl
es
aad
add
push
and
mov
mov
in
lahf
imul
divb
add
jnp
mov
add
mov
insl
mov
inc
mov
insl
jg
or
clc
ss
jo
enter
idivl
mov
mov
mov
arpl
stos
inc
add
mov
hlt
add
add
xor
gs
in
mov
scas
leave
jg
outsb
cmc
stos
mov
push
fwait
aas
mov
sbb
iret
pushf
dec
mov
dec
int3
mov
sbb
add
push
xchg
inc
lea
dec
ja
sarl
jne
cmp
xchg
jl
and
sub
imul
and
int
cmp
cwtl
daa
les
cmp
mov
or
sub
cmpsl
hlt
adcl
fldl2e
sub
sbb
push
in
or
inc
dec
not
push
push
in
dec
push
sub
fnstsw
lea
mov
fists
clc
pop
sub
jne
scas
and
fsts
mov
orl
and
xchg
mov
add
lret
push
push
loope
dec
adc
aas
sarb
and
in
fwait
or
add
ret
repnz
xchg
outsl
jle
and
ret
pop
jo
mov
in
jne
jecxz
icebp
or
mov
stos
and
imul
fbstp
fmuls
sarl
push
jge
int
xchg
mov
dec
mov
mov
fidivs
aad
testb
jecxz
push
pushf
add
adc
xorb
loopne
xchg
dec
loop
jnp
into
mov
and
mov
test
or
fists
in
jmp
sbb
mov
and
aad
xchg
cs
shlb
adc
xor
push
arpl
out
aas
jne
cwtl
andl
stc
push
inc
add
mov
push
rol
dec
jle
sub
cs
xor
push
roll
fxch
cltd
rcrl
mov
stos
jle
sub
cmp
lea
cltd
ljmp
and
mov
pop
sbb
clc
mov
fmull
xor
call
faddp
fildl
js
mov
ja
cwtl
inc
adc
push
mov
push
inc
out
outsb
ja
mov
inc
pop
cmpsl
fnstenv
pushf
es
lods
enter
mov
popf
add
pop
scas
dec
and
add
sub
rcll
mov
dec
and
adc
push
xor
call
inc
rolb
out
mov
cwtl
das
or
or
popf
sbbl
imul
xchg
mov
xor
mov
sbb
pusha
mov
lret
loope
xchg
or
jp
ljmp
fs
xlat
cmc
lods
daa
loope
imul
mov
fistl
incb
xchg
cmpsl
adc
xchg
sbb
movsl
add
lock
adc
cmpsl
mov
jb
mov
inc
inc
call
movsb
pop
sub
pop
movsl
push
test
fistl
fsubrp
in
mov
popf
out
xor
cltd
cmpsb
sti
xchg
sbb
rcrl
in
or
mov
inc
into
add
push
cltd
mov
mov
push
jg
push
pop
or
lcall
dec
mov
fs
imul
pop
pop
mov
push
jp
fcmovu
or
mov
lods
mov
push
out
cmc
shlb
rcr
push
or
push
cld
dec
mov
mov
sub
sbb
fimull
sarl
stc
inc
test
fstps
aas
lahf
fcom
into
mov
les
repnz
sahf
push
stos
fbld
or
dec
jl
cmp
mov
pop
cmp
or
movsb
push
cmp
lea
lods
pop
pop
xor
sub
jbe
pop
test
mov
adc
adc
mov
scas
ss
das
and
fsubrs
and
sti
jo
daa
movsb
outsl
in
out
cmpsb
mov
cmpsw
adc
lahf
adc
bound
jb
and
mov
shlb
stos
cmp
lds
out
mov
push
scas
sbb
daa
mov
dec
aad
cld
dec
loopne
pop
stc
fildll
sbb
or
pop
fdivrl
popa
push
dec
data16
mov
in
dec
sbb
daa
inc
mov
pusha
sbb
push
inc
mov
repnz
sbbb
add
pop
and
dec
pop
loopne
xchg
xlat
stc
lods
pop
push
push
test
and
test
clc
mov
aaa
push
ret
mov
or
ret
pop
stc
sbb
sbb
std
mov
pop
repnz
push
jge
dec
rorb
push
jmp
jge
lock
je
jae
ret
das
fadd
sub
leave
mov
lds
das
mov
xor
sub
in
mov
icebp
insb
jge
inc
or
add
ficomps
loop
dec
jb
int3
mov
cwtl
loope
or
fsub
daa
mov
fwait
dec
fcomps
inc
iret
push
push
jbe
add
push
data16
xchg
pusha
mov
jle
in
pop
ret
and
pop
lret
out
movl
cmp
popa
mov
in
addr16
xor
out
notb
xor
mov
cltd
pusha
sbb
es
std
mov
nop
and
pop
cmp
mov
ja
inc
iret
jbe
and
mov
fdivs
push
xchg
or
sbbb
pop
shl
push
out
add
push
jp
jbe
mov
cltd
pop
inc
inc
insb
cs
out
insb
mul
mov
stos
push
add
pusha
jo
test
in
iret
cmp
negb
pop
das
adc
repz
inc
sbbb
mov
outsb
mov
pop
add
shll
and
cmpsl
call
mov
orb
scas
ss
push
push
xorl
cmp
rclb
in
in
sbb
aad
icebp
sbb
jg
lods
int3
push
sbbb
in
leave
ds
push
push
mov
lock
loopne
cld
push
jmp
into
lock
inc
rcll
jecxz
inc
push
jb
aam
stc
sahf
xor
fmull
jbe
inc
fcomps
mov
les
mov
lea
in
lret
ljmp
ss
mov
stos
dec
gs
cs
jge
jle
mov
pop
out
inc
cmp
out
mov
xchg
nop
cmp
outsb
mov
repnz
idivb
out
push
and
pop
iret
shrl
add
cmc
xchg
popa
cmc
ja
push
test
push
mov
push
imul
push
and
dec
pop
icebp
pop
mov
pusha
loop
stos
loop
mov
mov
adc
sbbb
mov
shll
fdivs
out
lret
aaa
sub
sahf
in
or
adc
dec
and
movsl
shl
test
mov
sahf
pop
sbb
push
out
je
or
and
or
inc
sbb
sbb
push
xchg
xor
sbb
aad
loopne
test
mov
sbbl
sbb
clc
imul
inc
xchg
jae
and
sub
push
cmpsb
xchg
pop
pusha
mov
add
orb
push
fnstsw
insb
stc
sub
sub
jno
js
ret
loope
mov
cld
sahf
jae
in
xchg
mov
or
insb
jno
fdivl
add
fistps
dec
pusha
fisttpl
add
jnp
pop
jp
sbbl
adc
ret
cltd
push
push
pop
imul
enter
xlat
push
cmp
push
cmp
pop
outsb
ljmp
sub
push
setno
rcrl
dec
lock
test
mov
xor
stos
mov
adc
movsl
or
idivl
adc
insl
pop
push
les
decl
in
ds
in
jmp
movsb
dec
in
mov
sbb
cmpsl
jecxz
xor
xlat
les
fdivrs
dec
pop
out
addr16
pusha
cmp
hlt
fs
sub
and
add
sbb
scas
shl
xchg
pop
push
sar
add
sub
mov
xchg
mov
aad
jae
pop
pop
daa
lret
inc
sub
ret
xchg
cmpsl
push
lahf
mov
cmpsb
popf
cmpsb
adc
push
lret
inc
inc
push
fiaddl
sbb
rcr
push
pop
xchg
xchg
sbb
aad
cmpsb
or
push
push
into
sub
int3
mov
fmul
jne
mov
cltd
mov
ljmp
iret
pop
stc
test
ret
clc
sahf
xchg
imul
ds
out
daa
cmp
outsb
pushw
add
orb
fcmovnbe
jg
and
cmpsl
js
orl
add
test
mov
repz
sub
into
fimuls
das
dec
iret
xor
mov
repnz
mov
adc
mov
cwtl
lods
add
jnp
enter
pop
mov
je
adc
or
or
stc
push
out
stos
xchg
mov
adc
data16
adc
jae
mov
xchg
xchg
popf
es
loop
cwtl
push
xchg
cmp
jge
adc
push
jmp
pop
hlt
lds
sub
mov
xchg
and
lret
cmpl
dec
mov
mov
divl
xor
fcmovu
adc
pop
je
lret
outsb
test
jne
dec
sarl
pusha
roll
aam
xchg
sarb
pop
push
lock
int
and
mov
xor
rolb
icebp
mov
pop
jp
push
sbb
jp
xlat
xchg
jge
int3
xchg
mov
sub
adc
jmp
mov
mov
cli
dec
adc
stos
inc
add
sti
cmpl
cmp
mov
fsubrl
fdivrs
adc
sub
insl
inc
out
mov
lods
nop
or
test
ss
xlat
jmp
lret
neg
pop
add
adc
pop
lret
aaa
outsb
jmp
sbb
dec
mov
sbb
into
sbb
pop
pop
and
cs
popf
fsubs
or
jmp
or
dec
mov
mov
jne
in
lds
call
xchg
jnp
pop
fldenv
sub
lods
fldt
roll
sbb
call
inc
sbb
sub
mov
push
jge
push
push
xchg
xlat
pop
aad
insl
lock
adc
add
adc
sbb
sbb
hlt
jge
jne
or
out
mov
lods
xor
xor
mov
out
lcall
pop
jge
sbb
pushf
shr
xchg
shl
leave
sbb
sub
cmp
sbb
push
sahf
adc
add
push
mov
push
or
mov
mov
dec
out
dec
andl
pop
and
xor
inc
loopne
mov
fimuls
aam
jmp
sbb
mov
mov
xchg
cmc
lock
xor
xchg
inc
test
shrb
movsb
aaa
jle
movsb
lock
ljmp
cmp
cli
xchg
add
lods
data16
pop
and
mov
iret
mov
stos
clc
push
testl
jns
in
pop
pushf
mov
insl
es
lods
or
cmp
and
cmpsl
xchg
out
shr
leave
call
xor
das
sbb
aaa
jae
icebp
mov
das
dec
push
push
pop
mov
pop
mov
adc
adc
movsb
mov
jb
ja
add
dec
repz
pop
stc
call
fbstp
test
data16
in
leave
lret
mov
dec
push
ffree
rep
push
xor
inc
or
lea
xchg
psubd
push
pop
inc
lcall
dec
adc
pop
popf
orb
pop
pop
fiaddl
fs
cltd
sbb
jmp
sub
js
rcrb
mov
dec
adc
xchg
jbe
sbb
jg
pop
mov
jne
pop
pop
in
out
in
xchg
pop
sbb
icebp
movsl
ret
icebp
or
pop
mov
movsl
add
arpl
dec
sub
dec
loop
push
sbb
cmpsl
jbe
sub
out
outsb
cmp
ret
int3
xchg
xchg
sub
sti
test
addr16
inc
adcl
jo
add
sbb
movsb
push
mov
sahf
xor
push
or
push
or
inc
aad
sub
xchg
out
pop
insb
mov
xchg
in
mov
cmp
or
xchg
in
sbb
sbb
jns
icebp
or
dec
sub
cmp
testl
inc
add
iret
out
ret
push
cmc
out
test
mov
mov
scas
push
das
mov
in
and
cs
enter
xor
fwait
and
and
push
cld
insl
mov
out
jo
loope
outsb
xchg
add
push
xor
and
jl
lcall
jmp
push
lods
adc
xchg
in
fs
mov
adc
inc
mov
in
xor
or
jnp
jle
mov
sub
emms
rcrl
cli
sti
data16
stc
lea
or
outsl
jae
mov
pop
mov
pop
jno
in
test
test
mov
jbe
popl
sbb
cmp
pop
or
dec
test
pop
xchg
jge
aaa
test
hlt
lret
push
aam
imul
inc
mov
xchg
inc
fbld
sbb
dec
jecxz
or
push
out
ja
mov
jmp
mov
test
shlb
lret
dec
push
sub
inc
es
add
pusha
push
cmp
mov
lea
lock
xlat
mov
lret
shrl
pop
xchg
icebp
inc
add
insl
dec
add
and
insb
loope
cli
sbb
push
and
mov
aaa
mov
inc
jae
icebp
out
cmc
rorb
cmpsb
inc
and
lahf
arpl
or
push
ficompl
adc
fs
add
pusha
lods
in
cmp
jmp
inc
stc
movb
xor
aaa
jne
cmp
fcomps
mov
es
ds
out
adc
jecxz
jnp
stos
push
cmpsl
mov
es
data16
pop
and
sbb
shlb
xor
or
adc
cmpsl
iret
inc
lcall
mov
mov
xor
popf
mov
mov
pop
pop
xorl
pop
cli
xchg
adc
insl
cmp
iret
inc
add
aam
push
push
stos
add
lods
inc
mov
aas
mov
outsb
mov
adc
jmp
xor
shlb
les
call
es
loope
and
das
sahf
mov
lods
ljmp
add
mov
popa
cltd
jmp
orl
int3
shrw
and
jmp
adc
jno
test
rcll
mov
pop
mov
or
in
test
inc
cvtpi2ps
push
jp
popl
ffreep
inc
std
clc
xchg
addr16
xchg
xchg
mov
adc
lea
test
stc
int3
rorb
mulb
les
outsb
int
rcrb
or
xchg
dec
dec
mov
cmp
pop
ds
subl
jp
jo
jns
pop
lods
jl
mov
inc
adc
xor
sub
mov
adc
xchg
cwtl
arpl
sbb
jp
fdivrl
iret
xor
xor
repnz
fucomip
mov
sub
pop
add
sub
jne
push
xchg
into
inc
fisttpll
xchg
hlt
lods
mov
sbb
pop
jg
cmc
out
push
lret
pop
add
dec
pop
add
mov
arpl
fisubs
dec
mov
aas
jnp
mov
adc
sarb
insl
jecxz,pt
imul
xor
push
adc
push
cli
outsb
in
loop
inc
test
cmc
sbb
dec
add
arpl
mov
leave
iret
fists
sub
aad
lock
and
lods
lret
push
cmp
add
lods
jp
sbb
and
mov
sbb
sub
xchg
xchg
outsl
popf
push
sbb
add
sti
push
out
sti
cmp
leave
fisubrl
jge
sub
jge
mov
mov
and
or
sbb
mov
outsb
int3
add
inc
adc
inc
pop
out
cli
inc
outsb
aam
aad
es
xchg
pusha
sub
dec
sub
or
adc
and
add
pop
dec
jne
xchg
fcomps
clc
js
mov
shl
lret
pop
ficomps
shl
xchg
cmp
dec
enter
mov
adc
stos
int3
cld
inc
ss
fnstenv
pop
scas
inc
and
icebp
dec
push
adc
push
adc
dec
out
lahf
dec
push
popa
xchg
fwait
or
push
push
and
cmp
xchg
add
enter
pop
push
jbe
mov
rol
mov
adc
out
push
scas
add
add
pusha
cld
cmp
pop
test
mov
into
std
sbb
push
test
sub
dec
mov
insl
int
dec
inc
mov
cwtl
repz
dec
and
in
mov
fwait
sbb
loop
or
arpl
imul
push
fcomi
stc
addr16
std
js
xor
hlt
scas
into
movsb
dec
sub
xor
idivb
cs
add
pop
std
stos
xor
jae
push
shr
xor
pop
jno
mov
or
fcoms
es
aam
iret
xchg
fs
scas
pop
fs
sub
and
data16
pushf
sbb
mov
fsub
push
dec
subb
aad
dec
mov
lret
inc
mov
fdivrp
test
push
mov
mov
es
mov
je
jp
sbb
subl
fiadds
psubq
push
mov
pop
mov
scas
jae
pop
mov
push
int3
scas
dec
ficompl
in
adc
pop
pop
pusha
out
add
jge
xchg
int3
or
das
push
or
imul
xchg
aam
or
push
jno
fnstenv
int3
mov
in
popf
test
xor
jge
xchg
or
mov
out
stc
xor
xchg
out
push
sbb
inc
shl
ret
dec
jmp
sar
or
sbb
sub
in
jbe
mov
mov
mov
cmp
jb
and
add
inc
popf
dec
insb
inc
scas
jmp
jbe
cli
push
out
mov
pusha
fdivl
sar
pop
outsl
mov
adc
fs
lock
dec
add
shll
add
mov
jp
mov
dec
shlb
inc
inc
pop
adc
dec
jne
xchg
testl
push
sbb
inc
lret
fistps
test
xchg
xor
pop
push
xchg
mov
pop
push
xlat
jge
adc
fwait
cs
out
and
xchg
push
xor
add
add
call
in
cmp
mov
cmc
pushf
aaa
jecxz
movsl
push
or
popf
dec
shll
cs
push
mov
xchg
sbb
push
mov
pusha
adc
fstl
in
and
sbb
pop
sbb
andb
test
xlat
push
jge
ljmp
jecxz
mov
add
push
sub
inc
cmc
mov
push
xlat
jb
sub
dec
pop
push
lock
lods
enter
insb
inc
mov
lods
fnstcw
sbb
gs
mov
adc
push
add
out
sbb
test
xor
fmul
inc
sub
xlat
mov
dec
jbe
cmp
dec
test
outsl
dec
adc
cltd
stos
fidivrl
movsb
lret
sbb
cli
push
jmp
pop
mov
sbb
sbb
dec
xor
jle
dec
sub
or
sahf
jmp
sbb
aad
stc
cmp
push
add
aas
dec
shll
add
lock
test
xchg
xchg
or
xor
and
sub
decl
lret
xchg
fcmovb
pop
jl
sbbl
test
loopne
mov
lahf
arpl
lods
dec
out
or
repz
cmpsb
xlat
add
xchg
scas
adc
cli
repz
add
push
pop
dec
cmp
lcall
arpl
xor
cld
adc
out
bound
xchg
sub
std
pop
fwait
add
mov
xor
cmp
iret
push
cmp
mov
das
std
pop
push
sbb
mov
jg
pop
inc
fabs
inc
mov
xor
aam
jnp
xchg
mov
loope
dec
lahf
and
cmc
jno
sub
mov
mov
loopne
sub
lret
inc
outsb
or
call
dec
pop
outsl
pop
std
into
sbb
mov
ret
out
or
loopne
test
jmp
outsb
xchg
lods
cmpsb
push
pop
sub
in
scas
popf
roll
std
inc
push
addl
push
std
ficomps
mov
mov
jmp
out
fisubs
out
push
add
pop
shrb
sub
push
pop
add
push
inc
shll
adc
and
test
aaa
stc
push
movsl
mov
ljmp
pop
les
adc
and
and
xchg
les
fstps
xor
or
into
jne
jg
inc
cmp
jp
int
and
pop
xchg
lods
fwait
mov
cmpl
aaa
mov
sbb
call
jge
mov
inc
test
dec
insb
lods
mov
xlat
jl
out
jecxz
lahf
aas
sub
pop
out
xchg
ljmp
mov
stc
cmp
inc
push
cs
out
bound
rol
xchg
xchg
movsb
ss
xor
dec
sbb
pop
fisubs
icebp
sub
mov
test
js
push
mov
inc
test
xorb
sub
hlt
xchg
mov
or
and
jbe
xor
mov
ja
inc
pop
cltd
testb
push
mov
xor
test
xor
scas
adc
sbb
pop
popa
fs
clc
adc
pop
shrb
pushf
pusha
popa
sarb
movsl
loop
sbb
or
sub
jl
lods
fldl
fsubl
mov
and
inc
sub
cmpb
mov
mov
aad
inc
mov
das
push
cmpsl
jb
pop
or
arpl
int
add
fdivr
or
icebp
outsl
adc
popf
mov
out
pop
xchg
jbe
xchg
pop
sahf
hlt
pop
stos
jl
gs
lock
add
leave
and
cmpsb
jge
fldt
and
push
nop
mov
jb
xchg
mov
sbb
je
mov
hlt
mov
jno
xchg
addb
jbe
mov
pop
subb
movsb
mov
repnz
xchg
or
in
dec
stos
jecxz
pop
push
pusha
rorb
push
lods
cmp
negl
ds
or
leave
fcmovnb
jecxz,pt
inc
lods
xchg
push
ss
cmp
fidivrl
cmp
sub
into
stos
cmpsl
cmc
dec
push
jae
test
sub
stc
pop
or
xorb
daa
mov
sub
gs
mov
ds
stc
inc
push
out
and
outsl
int3
sub
jl
bnd
sbb
dec
out
call
and
outsb
das
xchg
ja
xor
push
lahf
push
add
sub
flds
mov
mov
ret
or
lods
jne
aam
add
outsl
mov
cmp
jae
sbb
mov
xchg
xchg
dec
imul
int3
mov
in
xchg
ret
mov
scas
adc
or
jbe
out
lret
or
lods
pop
pusha
lcall
sbb
mov
xchg
movups
mov
dec
mov
aam
gs
cmp
clc
adc
push
cmp
and
mov
and
shll
xor
inc
cmc
andb
lcall
je
xor
add
movsb
into
adc
cmp
movsl
jle
mov
dec
nop
adc
mov
xchg
dec
dec
fistpll
iret
sub
and
icebp
add
mov
push
ds
imul
test
repnz
imul
mov
rol
fs
pop
sub
xor
push
cmp
mov
gs
push
scas
test
xchg
mov
lret
outsl
cmpsb
bound
sub
and
ja
sti
mov
ret
adc
mov
std
cld
insb
lret
mov
inc
sub
rcr
arpl
sti
pop
pop
adc
outsl
popa
lahf
lock
loop
xchg
lock
cmp
sub
jnp
aad
fcoml
in
out
addb
popf
ret
ja
dec
and
pushl
or
mov
testb
addr16
int3
out
shrl
fstl
rorl
mov
int
mov
mov
push
enter
pop
cmpl
cwtl
inc
icebp
xor
and
adc
movsb
adcb
in
push
ds
mov
enter
xchg
push
sbb
lcall
aas
xchg
cmpsl
std
push
iret
pop
scas
jge
pop
es
ret
sub
and
mov
clc
scas
push
dec
lcall
enter
jge
sbb
and
test
inc
sbb
adc
popa
mov
fildl
cmc
out
xchg
push
mov
aam
mov
xchg
or
test
push
push
jae
xor
mov
mull
in
add
sub
in
out
jnp
loop
xor
out
xchg
std
push
xchg
xchg
pop
ret
mov
lods
push
xor
pop
sti
in
push
xor
stc
adc
data16
into
js
mov
in
or
xor
iret
scas
cltd
add
leave
test
push
sub
lret
dec
xchg
lret
out
xor
loope
mov
ljmp
ja
adc
cmp
fists
lret
out
inc
jmp
mov
daa
mov
sbb
xor
push
fiaddl
jle
inc
jmp
sub
jmp
mov
dec
fstps
test
mov
ds
inc
push
test
sub
adc
push
sub
ret
mov
dec
jae
iret
jb
in
clc
and
push
sbb
mov
jmp
push
sbb
mov
cmc
or
push
sub
sbb
fldt
dec
jle
inc
dec
cmp
and
xor
or
out
inc
sbb
adc
add
mov
jge
adc
or
lret
or
mov
cpuid
xchg
cmpsl
loopne
adc
out
inc
dec
enter
inc
inc
popa
pop
cmc
cmp
loope
out
or
int3
mov
and
xchg
inc
adc
int3
mov
sbb
mov
cld
mov
sbb
push
push
xor
sbb
jmp
pop
dec
mov
lods
lahf
les
scas
cmp
sbb
push
cmc
cmp
fstl
fcoms
sbb
lds
fbld
push
fs
adc
filds
xor
sbb
aas
mov
rcll
dec
sti
push
pop
popf
dec
push
daa
cmpsl
ret
sbb
push
adc
sar
xchg
test
sub
add
insb
mov
enter
add
fwait
stos
cmp
cmpsb
xor
cmp
cmc
test
movsb
push
cmpsb
sub
pop
jbe
cmpsl
push
xchg
sti
sub
pop
cli
mov
fdivrl
mov
or
lods
xor
sub
fs
int3
sub
lret
dec
bound
hlt
mov
lret
icebp
sbb
pop
cld
movsb
imul
mov
imul
or
jmp
rcrb
dec
pop
fmull
pop
push
inc
in
jns
test
xchg
add
mov
hlt
lock
sub
mov
aad
lea
stos
scas
stos
mov
loopne
lds
int
jp
sbb
dec
inc
scas
clc
fprem
daa
das
adc
js
xor
jecxz
popa
sbb
cmc
ja
shrb
sub
sbb
xor
xchg
dec
xor
in
jecxz
mov
xchg
out
sbb
adc
push
jmp
push
inc
mov
sub
mov
loop
repnz
jl
aad
mov
daa
jno
mov
or
mov
mov
adc
ljmp
jnp
hlt
xchg
jge
jnp
into
cmpsl
inc
mov
stos
lods
mov
or
jbe
js
dec
xchg
push
xchg
jb,pn
shll
dec
push
punpckhdq
xor
subb
loop
addr16
mov
adc
aas
push
pop
dec
mov
xor
inc
sbb
in
jl
loop
sbb
testl
push
xchg
fisttpll
cld
cmovo
rol
push
sbb
ja
fisubrs
and
inc
push
pop
jp
adc
dec
and
push
pop
mov
push
inc
jge
nop
and
sub
inc
xchg
subb
out
mov
or
cli
popf
add
add
ret
arpl
mov
sbb
in
jo
xchg
jnp
fldt
stos
adc
scas
mov
jmp
mov
xchg
roll
ret
out
xorl
or
in
adc
cmpsl
fstpt
test
inc
jae
bound
sbb
mov
jnp
push
lds
mov
fsts
fisttpl
ret
into
or
out
and
aad
sarl
jg
fsubr
js
sbb
jg
push
pop
pop
rclb
push
push
sub
sbb
dec
and
inc
lods
and
fisttps
push
stos
roll
adc
nop
lods
repz
inc
add
pop
ja
sbb
insl
in
adc
mov
fmull
sbb
lret
lret
jae
jnp
outsl
push
lret
cvttps2pi
int
arpl
cmc
pusha
test
add
jge
xor
out
test
dec
test
push
cmc
xchg
ja
or
jae
add
loopne
test
sub
and
cmp
shll
pop
sti
fmuls
rolb
pop
xchg
push
mov
sbb
push
adc
mov
inc
mov
dec
xor
mov
inc
stos
sub
pop
rcrl
pop
pop
xlat
mov
mov
push
push
add
xor
cltd
fadds
rcl
mov
sbb
pop
rorb
sbb
xchg
push
xor
or
sub
mov
jbe
faddp
icebp
pop
je
dec
cwtl
inc
outsb
push
push
push
mov
pop
pop
aaa
repz
xor
sbbl
adc
push
or
xor
fcomps
loop
lret
cld
cmp
int3
pop
dec
mov
test
sbb
pop
fbld
xchg
mov
pop
xor
push
xlat
mov
dec
bound
dec
push
nop
push
adc
lock
test
fildl
cmpsb
loop
enter
test
xchg
add
xor
jge
mov
rorb
mov
mov
push
clc
push
dec
sub
ss
push
bound
loope
and
mov
iret
dec
orl
insb
push
sahf
or
fs
mov
ds
jae
lcall
ret
test
fnstenv
adcb
mov
mov
cmc
cld
in
nop
icebp
cmp
scas
mov
add
jmp
into
je
out
xor
fs
pop
outsl
jns
flds
lock
negl
mov
pop
sbb
sub
or
test
push
add
add
out
xorb
jae
mov
jp
xlat
mov
xchg
es
cmp
cmpsb
mov
xchg
rclb
xlat
lret
mov
fists
stc
movsl
push
sub
sub
repnz
xchg
js
clc
nop
fcompl
dec
push
add
xchg
jno
or
sbb
xchg
sbb
cmc
inc
xchg
rcl
clc
add
in
sbb
adc
ds
sbb
mov
in
dec
xchg
mov
ja
inc
jecxz
xchg
lret
push
inc
adc
xor
pop
lds
pop
jns
loope
push
fcoml
gs
xor
inc
movsb
mov
inc
adc
mov
nop
xchg
or
push
fstpl
adc
idivb
pop
adc
adc
icebp
daa
notb
sti
xchg
shl
aad
mov
inc
pop
mov
add
xor
ljmp
pop
and
fistps
in
movsb
pop
cld
sahf
cmp
insl
lds
paddsb
cli
add
inc
and
ljmp
arpl
jle
test
jecxz
cmp
cmp
add
stos
scas
add
int
out
push
inc
jg
mov
adc
neg
dec
mov
shl
mov
add
repz
adc
add
jg
ret
je
pop
push
push
jne
pusha
rcl
imul
ret
and
cmp
dec
add
sbb
push
pop
sbb
pop
pushf
fsub
inc
hlt
xor
add
xchg
addr16
in
in
inc
push
push
popfw
pop
lahf
repz
jg
jno
clc
jmp
lock
xchg
sbb
inc
mov
sbb
sbb
or
jae
inc
inc
lods
and
and
sub
dec
clc
movsl
add
mov
adc
mov
icebp
out
dec
aam
aad
push
loop
mov
adc
pop
addr16
inc
jns
xchg
outsb
adc
cltd
mov
adc
xchg
andl
cmc
mov
pop
lock
cmpsl
push
in
jo
loope
inc
mov
scas
push
stc
pop
cmc
icebp
int
jg
sti
enter
pop
insb
and
pop
mov
pushf
dec
mov
js
dec
arpl
fwait
sahf
imul
adc
xchg
loope
and
inc
rorl
xchg
cmp
mov
push
and
mov
mov
aas
xor
testl
rolb
jl
xor
iret
lods
jnp
into
push
cmp
jle
push
sbb
push
xor
lret
jns
pushf
stos
pop
ror
xchg
push
jg
dec
push
sub
aaa
bound
cmp
and
mov
and
push
mov
jp
testl
rcrb
std
test
inc
and
cmpsb
jnp
pop
in
push
popa
push
ljmp
dec
xor
and
aaa
add
inc
mov
and
mov
push
mov
pop
push
jmp
push
ret
sub
add
xor
and
neg
sbb
iret
mov
mov
adc
ds
inc
push
nop
mov
cwtl
or
fcmovbe
or
cmpsb
xchg
ljmp
sbb
xchg
adc
test
mov
int
cmp
mov
pop
jmp
test
push
sar
daa
sbb
sub
lahf
mov
iret
or
or
xchg
sarl
sub
mov
and
mov
fs
xchg
or
addb
dec
insb
adc
sub
mov
push
xor
loopne
or
or
xchg
cmp
in
sub
shll
adc
lret
mov
pop
sub
call
push
sbb
mov
inc
pop
pop
frstor
mov
mov
scas
and
addr16
test
xchg
mov
fsubrs
or
jbe
xor
into
dec
push
push
or
js
push
cwtl
mov
pop
mov
mov
les
push
lock
jnp
sbb
jle
pop
or
xchg
jl
icebp
clc
mov
add
jo
cli
negb
hlt
div
lahf
mov
in
lret
fcoms
jl
es
or
sbb
popa
push
xchg
xchg
push
stos
mov
mov
jmp
in
push
mov
jmp
int3
dec
and
mov
xchg
mov
sbb
mov
pop
data16
sbb
xchg
dec
mov
lahf
imul
cld
movsl
cwtl
cmp
mov
cmp
loope
out
sbb
pushf
cli
ret
repnz
into
fwait
adc
add
std
iret
pop
in
cmpsb
cmp
movsl
lods
sti
popa
hlt
mov
sbb
mov
mov
sub
sar
dec
xchg
in
mov
mov
and
popa
xchg
out
adc
xchg
mov
xor
pusha
mov
call
ja
sub
mov
adc
ret
sub
js
hlt
out
ret
js
int3
test
xchg
jp
sbb
out
loop
and
shl
loop
ret
call
das
adc
bound
movsb
adc
outsl
push
add
fadd
fnstsw
dec
daa
pushl
mov
or
sti
pop
inc
dec
lcall
inc
sti
or
pop
jbe
imul
mov
scas
daa
adc
cmp
jmp
mov
ja
xchg
enter
push
enter
test
xor
add
js
mov
jle
test
mov
testb
in
out
lret
jl
ret
arpl
hlt
inc
pop
fidivrl
mov
fs
jecxz
or
in
rcrl
jno
mov
jle
pop
shrb
or
add
roll
inc
icebp
insb
mov
cld
sti
push
lods
jnp
mov
push
leave
mov
pushf
das
adc
push
mov
scas
sub
lret
ss
push
add
je
xor
repz
add
out
dec
popa
fisubrs
loope
shlb
stos
jmp
dec
dec
xchg
ficomps
cmp
in
jns
sbb
sub
stos
fwait
shrb
fisubs
cmp
push
push
repz
outsb
js
lods
jno
clc
sahf
cmp
mov
jle
lahf
icebp
mov
mov
push
aam
push
lds
testb
je
out
int
mov
adc
inc
out
pop
incb
jns
xchg
add
mov
push
mov
das
inc
rcrb
add
ror
mov
push
push
dec
daa
jbe
jp
or
jmp
jge
cli
int
and
mov
movl
adc
je
in
jnp
jmp
test
adc
ljmp
sti
sub
mov
insl
adc
xor
outsb
fsubrl
test
test
or
mov
insb
ret
subl
xor
ja
aas
jg
xor
xor
sbb
stos
mov
js
pop
cmp
xlat
out
mov
test
xchg
sbb
inc
clc
mov
popa
dec
shrl
mov
cmp
je
xor
cmp
icebp
inc
xchg
movsl
xchg
push
inc
lret
in
cwtl
mov
push
icebp
mov
outsb
cltd
pop
lea
mov
mov
xor
lcall
and
out
hlt
imul
jne
and
sti
insl
scas
mov
push
addr16
in
std
mov
adc
lods
lahf
std
inc
xchg
clc
mov
xor
lahf
and
test
out
cmp
lcall
lds
out
jg
pop
adc
scas
fstl
fisttps
push
repz
fwait
arpl
pop
scas
cmp
adc
jle
mov
aam
or
cmpb
or
aad
jmp
sub
adcb
imul
sbb
movsl
popf
and
xor
sub
jecxz
sbb
test
inc
sub
cwtl
ds
cwtl
dec
je,pt
ds
jl
ret
shlb
pusha
pop
fidivl
sti
pusha
lods
push
sti
cli
pop
hlt
in
dec
xor
stc
rcrl
push
fmul
into
pop
cmpsb
sub
lock
ds
aad
movsl
movsl
pushf
fisubrl
add
cmp
mov
pop
push
jne
mov
dec
and
nop
jp
jo
movsl
push
gs
push
lcall
add
or
jb
add
and
sub
push
sub
or
xor
flds
stos
pop
scas
repz
icebp
mov
inc
push
enter
lods
ljmp
cmp
fisubl
das
add
mov
mov
mov
fstpl
jno
lea
ret
insl
cmc
push
insb
jle
cmpsb
pop
fcomps
sub
jbe
add
mov
and
clc
ret
ret
adc
xor
cmp
push
inc
mov
ja
xchg
lahf
daa
pop
xorl
outsl
mov
leave
adc
sub
aam
mov
sub
sbb
mov
mov
cmp
lock
push
jo
scas
add
xlat
shlb
rcll
js
jne
jp
mov
cli
mov
pop
aad
jg
js
mov
xor
pop
aaa
daa
inc
sti
dec
sub
mov
mov
mov
mov
mov
notb
insl
jl
fmuls
xor
jo
and
mov
imul
mov
xor
and
loop
jo
repnz
and
insl
jae
mov
xchg
mov
aas
sub
xor
xchg
mov
jns
and
jb
xor
lods
mov
data16
mov
mov
and
jg
gs
std
out
add
inc
mov
cmp
sbb
or
xchg
fists
shlb
dec
mov
test
or
cmpb
outsl
or
or
inc
aad
xor
int
xchg
xchg
mov
adc
push
mov
imul
std
sti
cmpsb
pop
lods
pop
data16
and
xor
mov
jo
push
das
repz
pop
popa
hlt
mov
aam
in
shll
fisttpl
ljmp
decb
sahf
jns
push
mov
push
cmp
shrl
ret
mov
push
push
jo
sbb
mov
es
push
sbb
jbe
or
or
inc
xor
loope
jne
into
data16
mov
cmp
std
sbb
jnp
push
mov
fmuls
push
mov
in
xorl
jae
jg
call
std
jl
rorl
xchg
mov
mov
mov
add
add
cmp
in
mov
in
in
sbb
sahf
aaa
jl
insb
fcompl
lea
shll
testl
sbb
mov
cli
jecxz
out
pop
call
ret
lods
pop
and
mov
sbb
cli
pushf
rorl
or
clc
mov
test
jp
and
lea
push
test
push
cs
xchg
mov
out
adc
push
loopne
dec
mov
ror
push
jae
sbb
fwait
adcl
push
insl
icebp
jns
cmp
loopne
mov
or
icebp
out
or
aas
mov
mov
das
fsubr
xor
push
pop
xchg
cmp
and
dec
dec
jo
cmpsl
cmp
lcall
mov
push
popf
cmpl
std
test
sub
push
movsl
mov
lret
xor
adc
shrl
andb
push
pushf
adc
rcrl
mov
xchg
sub
mov
push
pop
sub
sub
or
popf
dec
jno
xor
dec
leave
jns
out
mov
adc
cs
in
call
cmp
lds
mov
sub
into
movsl
mov
lds
popa
lods
cld
out
into
fimuls
mov
inc
xchg
fs
xor
xor
or
lahf
mov
xchg
decb
xor
imulb
out
cltd
cmp
fistpll
cld
imul
sbb
xchg
cmpsb
mov
mov
xor
daa
js
xchg
jmp
in
xchg
stc
push
rclb
or
pop
mov
mov
add
aas
jb
arpl
xor
loope
push
inc
ror
enter
imul
ss
enter
sbb
pop
mov
nop
rolb
cwtl
adc
repz
mov
sub
test
icebp
mov
xchg
push
arpl
pop
fsts
sbbb
dec
ja
pop
jmp
xor
or
movl
and
sub
xlat
mov
mov
inc
ret
fcmovu
jne
imul
adc
pop
decb
xchg
add
sub
lret
pop
aad
dec
divb
push
xchg
rcrl
je
push
push
sbb
enter
jne
push
xchg
cltd
cmpsb
cmpsb
subb
lahf
sbb
xlat
mov
cld
je
mov
das
or
aam
pop
jge
out
or
mov
fadds
jbe
dec
inc
iret
scas
or
ficoml
xchg
jnp
xchg
adc
es
xchg
add
jmp
pushw
cmpb
cli
in
jg
push
inc
or
bswap
mov
fs
push
sub
rclb
mov
adc
in
xor
out
xchg
or
inc
xchg
jo
xchg
mov
and
pop
jnp
gs
ficoml
fimuls
mov
cli
push
pop
dec
jge
iret
mov
movl
mov
or
xchg
lret
jae
sub
lods
sti
jmp
jno
shll
mov
mov
cmp
sbb
mov
rorl
mov
out
sbb
insb
pushf
inc
mov
pop
sub
xchg
fiadds
out
add
int3
sub
cmpsb
or
movsl
loopne
les
push
sub
sub
pusha
sbb
xor
imul
out
mov
xor
push
jo
cltd
dec
pop
stos
stos
das
and
das
scas
and
inc
fsts
sub
jecxz
hlt
adc
mov
clc
mov
mov
push
jne
mov
adc
daa
test
add
mov
sbb
jmp
pop
xor
addr16
into
push
jp
mov
mov
mov
lret
push
mov
sbb
ds
cmp
les
bnd
inc
sub
in
pop
sbbl
push
test
mov
mov
inc
or
jp
jmp
test
jp
stos
gs
push
lahf
and
movsb
test
or
adc
outsb
sub
movsl
jnp
pusha
mov
and
pop
out
jge
adc
cld
insb
pop
mov
pxor
lods
inc
fcmovnb
xchg
xchg
adc
pop
icebp
repz
xchg
adc
lock
gs
outsl
pop
jmp
and
xchg
sub
lahf
lds
test
cmpsb
xchg
into
adc
jl
and
lods
into
push
add
ret
orl
sub
mov
sub
add
adc
push
fcom
lods
mov
pop
pminsw
cld
enter
mov
rorl
pop
sub
or
out
pop
bound
sarl
leave
movl
pop
fwait
or
jae
push
adc
or
ds
js
jns
add
dec
jb
inc
stos
push
popa
rcrl
mov
shll
imul
vpunpckhdq
dec
clc
or
stos
ljmp
adc
insl
xor
fldt
mov
and
scas
add
lahf
sbb
dec
mov
push
mov
mov
sbb
jg
or
pusha
mov
outsb
divl
cs
incl
push
inc
fsubrl
cld
mov
add
out
push
testl
sahf
popa
call
arpl
rorb
mov
movsb
sub
jno
imul
xchg
mov
ds
test
dec
int3
scas
lret
push
adc
push
jecxz
jb
int3
idivl
adcb
jae
aas
inc
dec
out
mov
test
adc
push
jne
aad
pop
add
shrl
xor
and
and
lahf
std
mov
or
stc
inc
lret
or
sti
xchg
ljmp
call
cmp
xchg
mov
mov
nop
mov
insb
dec
sti
lret
ret
adcl
pop
adc
call
jbe
push
push
or
lods
mov
xchg
popf
inc
push
pop
sub
sbb
and
inc
scas
inc
insl
cmpsl
pop
adc
rolb
sub
sub
fwait
aam
test
mov
cmc
pushf
add
ljmp
aas
add
push
or
add
sahf
mov
jne
mov
mov
push
xorb
arpl
jbe
out
nop
jmp
imul
xor
mov
mov
daa
and
inc
adcb
aam
sub
movsb
in
rcl
gs
lock
outsl
push
shll
sarl
rolb
sbb
xchg
stos
xchg
dec
jle
stos
std
inc
mov
mov
test
xchg
out
cmp
and
mov
cmp
ret
mov
and
les
mov
push
cmpsb
cmc
jnp
jns
sub
in
mov
test
or
rclb
jge
fsub
sbb
xor
jl
shll
adcb
repnz
adc
scas
xrelease
adc
mov
std
push
punpckldq
inc
hlt
aad
repnz
cmp
cltd
adcb
stos
imul
mov
in
add
mov
xor
mov
cmp
mov
dec
pop
xlat
and
dec
pushf
iret
imul
and
adc
dec
push
and
test
movsl
arpl
test
aas
jp
pop
loope
rclb
lret
sbb
xor
xchg
mov
in
mov
and
cmp
pop
cwtl
stos
cbtw
mov
xor
jo
rcll
cmp
in
fidivl
int3
sbb
and
jle
push
jne
test
cmc
xchg
sbb
rclb
mov
adc
xchg
pop
sub
movsl
hlt
mov
in
and
dec
jecxz
mov
push
or
cmp
int3
lods
fiadds
mov
outsl
push
shll
adc
call
les
scas
inc
aas
test
lods
pushw
mov
xor
adc
gs
daa
or
mov
sti
mov
inc
mov
jl
call
dec
ljmp
pop
loop
sbb
mov
or
cmp
xchg
mov
inc
cmp
push
mov
or
mov
xorl
sbb
xchg
cmp
lea
pop
cmp
js
test
repz
jle
inc
mov
cmp
xorb
and
xchg
lods
jo
int
dec
in
sbb
or
push
inc
pop
sub
mov
lods
out
imul
push
dec
in
loopne
inc
xor
and
dec
in
xor
inc
xchg
rorb
jne
mov
xor
outsl
inc
dec
test
movsb
and
out
call
pop
test
ds
sbb
adc
cltd
scas
lods
mov
cli
sbb
sub
xchg
jae
fbstp
data16
loope
dec
loopne
jg
out
popa
jge
jno
js
sbb
testb
dec
xchg
sbb
jmp
mov
ret
loop
dec
lods
fdivrs
ljmp
clc
jp
xor
out
test
adc
nop
jle
ja
out
pop
lock
add
pop
add
push
adc
jb
test
in
inc
sub
cmpsb
enter
mov
pop
sbb
push
test
push
or
cltd
pop
xchg
add
mov
mov
dec
iret
xlat
and
push
pop
lcall
arpl
shrl
or
movsb
movsb
mov
lea
inc
lcall
fs
dec
cltd
cmp
adc
hlt
fcomp
jbe
inc
js
cmp
add
sbb
or
out
xor
fistps
outsl
xchg
jbe
loopne
lock
out
sbb
inc
inc
int
xor
inc
aam
sub
in
arpl
outsb
out
jns
mov
adc
sub
inc
popf
xchg
or
ret
dec
xchg
mov
lret
push
aam
mov
mov
pusha
push
jle
sbbb
call
data16
das
sbb
jl
mov
addr16
mov
jge
mov
mov
inc
aam
mov
adc
adcb
cmp
and
idiv
iret
cmp
popl
cld
not
pop
repnz
pushf
mov
aam
mov
in
das
fnstsw
sti
loop
adc
push
in
jbe
jbe
jnp
sub
xchg
imul
xor
push
sub
cmpsb
push
je
dec
data16
ljmp
pop
aas
mov
add
inc
rorb
mov
sub
mov
adc
adc
ds
cmpsl
dec
mov
outsl
inc
inc
mov
jb
mov
cmpsl
mov
and
in
mov
and
outsb
mov
addr16
test
add
push
aas
stos
adc
dec
scas
mov
addb
add
cmp
scas
pop
inc
adc
fwait
pop
inc
jecxz
dec
inc
push
pop
jne
xor
ss
test
inc
hlt
mov
repz
cmpsb
fimull
push
and
pop
popa
sbb
lods
pusha
jnp
ljmp
test
add
cmp
jge
stos
mov
mov
cld
outsl
and
out
dec
add
mov
xor
in
xchg
mov
cltd
xchg
mov
inc
in
mov
sbb
cmpsl
ljmp
or
cmp
leave
out
daa
subb
pop
inc
mov
stc
ja
leave
mov
insb
movsl
sahf
es
push
cs
dec
mov
sub
ds
or
test
add
shlb
pop
inc
mov
lea
pop
pop
add
sbb
inc
lock
out
mov
xchg
sbb
push
mov
xor
mov
repz
jbe
inc
push
sub
pop
imul
dec
cli
test
sahf
adc
sbb
or
jbe
lahf
dec
mov
xchg
mov
imul
call
lods
inc
shl
loop
sub
xor
and
ljmp
lods
xor
inc
roll
shlb
int
bound
push
cmp
rclb
inc
mov
jmp
push
pop
push
push
pop
xlat
in
inc
stos
inc
mov
pop
adc
popa
stos
xor
pop
lea
in
cwtl
push
pop
sbb
push
cmpsl
lods
and
insb
xchg
sub
fstps
dec
mov
loopne
dec
mov
aam
mov
inc
iret
notb
mov
mov
adc
out
std
ret
addl
xchg
jb
outsl
cmpsb
mov
lcall
jne
mov
cltd
push
adc
les
fwait
adc
add
in
mov
or
mov
sub
jno
ljmp
xor
jbe
stos
sub
lea
inc
inc
into
adc
dec
mov
dec
fstpt
ficompl
and
icebp
inc
testl
in
test
jmp
lretw
sbb
sub
jnp
mov
aad
or
ds
sub
cmc
pop
sbb
scas
jecxz
pop
shrb
ss
pop
repz
jecxz
sub
sub
inc
fsubr
cmpsl
mov
je
pop
outsb
fwait
jnp
ja
cld
subb
push
jle
push
mov
daa
pop
jo
xchg
movsb
mov
jmp
cltd
daa
lcall
hlt
andb
mov
scas
fmuls
sub
sub
lcall
jo
adc
add
aad
jge
push
push
lds
xor
aas
mov
leave
je
cmpsb
jnp
insb
xchg
dec
xchg
pop
shrb
mov
movsb
xbegin
push
outsb
inc
xchg
in
sub
pop
arpl
or
rcr
dec
mov
xchg
sbb
mov
push
adc
pop
add
jle
hlt
and
inc
push
dec
dec
clc
cli
push
mov
xchg
in
ss
sbb
loop
nop
roll
pop
stos
sub
jg
cmp
sbb
pop
inc
add
mov
sub
add
and
mov
mov
fwait
pop
push
testb
sbb
or
sbb
fldenv
int3
test
lea
mov
pop
xorl
inc
xor
xor
add
mov
out
sbb
int3
sub
outsl
xchg
in
data16
lcall
sbb
push
ja
adc
jo
int3
lahf
lahf
leave
mov
and
jmp
jge
inc
adc
push
popf
xchg
dec
jo
sbb
addr16
jecxz
aas
pop
sbb
aad
xor
into
sub
or
push
sbb
mov
pop
movsl
idivb
jnp
cs
aad
test
es
mov
jecxz
out
sub
xchg
test
sub
sarl
xor
out
fildl
jp
test
iret
dec
add
test
mov
popf
lret
out
xchg
incl
popa
mov
sub
ret
mov
or
add
and
ss
xchg
daa
dec
jl
imul
cld
or
cmp
cmp
lock
jp
lds
leave
out
cmpsl
das
and
fcomps
mov
stos
mov
ret
aaa
into
ficompl
lds
jp
daa
shlb
test
loopne
and
imul
mov
icebp
mov
loop
mov
aam
lods
pop
out
or
rorl
shll
cmp
inc
test
add
cmp
mov
pop
pop
sub
sbb
mov
fidivrs
jns
dec
adc
repz
cwtl
adcb
iret
sti
popa
std
mov
aas
sti
mov
push
pop
push
addr16
sub
dec
push
pushf
and
pop
stc
push
cld
sbb
mov
faddl
add
loop
cli
loopne
test
icebp
sub
gs
and
mov
adc
mov
aad
ret
push
adc
data16
xor
mov
pop
mov
jb
pop
mov
popf
lret
sub
out
xor
push
loop
push
out
enter
stos
xor
xchg
push
add
lea
sbb
or
dec
jnp
sub
sbb
adc
sbb
orb
add
push
ja
push
mov
iret
sub
or
mov
mov
test
es
rorb
imul
cmp
adc
push
or
push
jb
imul
add
xorps
dec
out
pop
ret
dec
cwtl
filds
xor
mov
jo
xorb
jne
cltd
test
mov
test
fildl
mov
dec
popf
dec
lret
outsl
xchg
push
repz
jmp
pop
dec
pop
into
add
dec
aaa
repz
or
pop
jo
test
push
mov
cwtl
adc
clc
repz
imul
dec
pop
loopne
xchg
vmread
fwait
into
imul
testb
push
rolb
mov
je
push
push
dec
jg
push
cmpsb
xlat
xlat
push
bound
mov
push
call
jb
mov
push
mov
out
sar
mov
bts
mov
push
stos
mov
pushf
jmp
mov
in
or
out
test
push
jg
mov
mov
adc
pushf
dec
sbb
xchg
adc
or
jno
and
popf
pop
add
mov
xor
data16
fcomps
lea
sbb
out
fwait
shlb
repnz
inc
dec
mov
in
jo
pop
lret
dec
popa
js
popaw
jge
int
add
and
ret
loope
xor
call
pop
xor
jb
dec
pop
loop
xor
xorb
mov
xchg
out
xchg
push
lahf
test
lock
fildl
cmp
push
jl
dec
pushf
sub
shl
or
cmpsl
sub
lock
cmpb
dec
inc
addl
mov
out
jne
inc
outsl
movsl
sub
inc
nop
mov
in
pushf
fstl
dec
xchg
adc
xchg
cmpsb
jl
lret
adc
sbb
lcall
jmp
sbb
xchg
xchg
daa
pop
pop
dec
roll
and
imulb
stos
lods
inc
enter
xchg
cmp
inc
cmp
data16
icebp
jp
lret
mov
jno
xchg
push
popf
lds
pop
mov
imul
xchg
mov
push
outsb
ljmp
iret
sti
xchg
jge
jbe
or
dec
call
out
pop
test
add
adc
ret
pushf
scas
shll
fistpll
ret
in
ret
orb
mov
or
out
mov
xor
cmp
mov
test
fstps
push
and
and
sbb
fdivl
or
icebp
je
cmp
jmp
pop
fwait
ds
ljmp
jecxz,pn
lds
test
stos
xchg
mov
sbb
xor
lods
in
mov
sbb
dec
aam
je
fisttps
adc
pop
adc
jmp
mov
pop
inc
nop
fisttpl
cmp
mov
arpl
push
mov
fnstsw
scas
push
adc
cmp
mov
jae
popf
into
xchg
pop
test
imull
lods
lret
ss
aam
in
mov
jbe
gs
xchg
mov
jns
cmp
lret
loop
arpl
dec
shlb
mov
jl
int
loopne
lea
aad
les
jge
loope
sti
sub
outsb
testl
mov
inc
in
nop
mov
cwtl
sbb
imull
outsb
ja
ja
lock
loopne
cs
pop
or
sub
in
addr16
mov
add
rol
inc
sbb
push
arpl
cltd
mov
jmp
inc
jp
jle
int
add
adc
loope
adc
mov
push
icebp
cmp
outsb
jecxz
jns
push
jno
outsl
xor
stos
mov
movl
xor
dec
aam
xor
sbb
xor
jecxz
push
jmp
pushf
sub
insl
push
fidivs
dec
scas
mov
lods
and
mov
sub
test
lods
pusha
mov
or
mov
pop
xchg
jns
sub
sti
jae
push
adc
filds
pop
pop
push
sub
pop
aaa
loop
stos
pop
negl
pop
xchg
fwait
mov
inc
outsb
jno
ficompl
cld
cwtl
adc
inc
lcall
fstl
ficomps
stos
cwtl
lds
xchg
movsl
jle
mov
jnp
clc
sti
js
mov
mov
enter
inc
mov
jbe
sub
mov
jecxz
cli
aaa
dec
loope
pop
inc
inc
cmpsl
lret
jmp
push
test
push
cli
mov
stc
outsl
mov
push
movb
aaa
mov
mov
lods
lret
lret
adc
or
outsl
pop
inc
data16
jge
xor
add
jle
xchg
adc
xchg
orl
pop
push
lock
arpl
fucomip
inc
add
cmc
rep
test
imul
xchg
or
and
imul
loopne
sbb
mulb
inc
dec
xor
cltd
sub
cmp
call
lock
push
out
push
push
mov
mull
xchg
scas
fcomp
loope
pop
mov
dec
cmpsl
stos
cmp
test
dec
xchg
sarb
xor
sbb
xor
xor
iret
add
cld
mov
jle
arpl
ret
dec
decl
add
mov
inc
jno
pusha
outsb
ds
sbb
xor
cmpl
das
test
mov
xchg
stos
in
xor
inc
mov
js
icebp
movl
rorl
pushf
fsubrs
pop
xchg
jl
int3
jo
jno
jmp
push
pusha
push
jns
cmpsl
add
xchg
lcall
aam
dec
pop
adc
push
cmc
adc
mov
xchg
scas
fnstsw
dec
je
lret
push
sbb
pusha
mov
fs
aas
sub
imul
mov
stos
inc
dec
inc
frstor
mov
stos
les
push
inc
ja
je
cmovl
imul
fcmovne
push
imul
fisttpll
insl
push
xchg
adcl
addr16
cmpsb
fimuls
xchg
mov
mov
popa
adc
xor
js
ret
jbe
push
adc
lods
jbe
xchg
xchg
and
push
mov
jg
add
add
jnp
adc
lea
std
js
add
or
and
jmp
stc
loope
imul
test
pop
mov
hlt
aam
loope
jmp
in
test
sub
out
jge
push
popf
lahf
pop
jbe
adc
mov
cwtl
imulb
fnstsw
mov
mov
dec
stc
out
lret
or
testb
int
inc
scas
lods
cli
repnz
jg
clc
daa
icebp
adcl
aas
inc
aad
aas
pop
pop
sti
out
xchg
lahf
adc
pop
xor
or
rcl
sti
xor
mov
incl
fs
into
dec
pop
inc
dec
repz
push
testb
cmp
adc
jmp
in
xchg
aas
aam
mov
dec
out
xchg
shll
pop
arpl
and
outsb
mov
ret
add
inc
outsl
sub
je,pt
pushl
ret
add
push
jae
cmp
sti
movsl
cmpsl
fldt
lock
pop
pop
stc
dec
add
pushf
push
push
mov
inc
ror
int3
mov
xchg
fsubrl
testb
aas
cmp
cwtl
sbbl
cmpsl
call
ret
cs
pop
nop
icebp
fs
mov
pop
ss
adc
test
dec
scas
addb
sbb
cmpsb
leave
mov
xor
movsl
dec
int
jo
popf
scas
pop
push
or
lea
mov
sti
mov
xor
dec
xor
sub
jmp
xchg
scas
or
in
mov
mov
xor
or
push
es
fstps
and
xor
inc
xor
sbb
and
arpl
das
xor
negb
push
movsb
or
mov
adc
mov
sbb
and
and
mov
inc
hlt
decb
mov
mov
int3
iret
jl
push
mov
add
je
frstor
daa
insl
dec
mov
xorb
xchg
int3
aaa
leave
nop
and
arpl
imul
adc
mov
imul
das
int
pop
into
inc
test
sarl
das
xor
pushf
loop
mov
loop
mov
clc
mov
fs
call
jecxz
and
into
enter
icebp
rorl
xor
test
inc
cmp
imul
notl
add
or
aaa
xchg
negb
mov
pop
cli
lds
mov
pushf
sbb
aam
rclb
push
imul
mov
ljmp
inc
and
test
dec
jnp
jmp
repz
bound
in
es
negl
jg
mov
inc
arpl
mov
xlat
xor
mov
lea
push
bound
std
jo
ret
push
push
shlb
ret
push
enter
icebp
and
cmc
cld
adc
cld
jmp
add
jg
les
cmp
and
out
pushf
arpl
lret
arpl
dec
hlt
aad
xchg
int3
xchg
minps
repnz
push
jp
jge
loop
cs
loope
pop
add
sub
lret
ja
icebp
add
pushf
mov
mov
lods
aaa
mov
xor
into
mov
out
aam
stc
xor
xor
fildll
mov
push
lcall
jmp
mov
aas
jmp
xor
js
jle
pop
sub
adc
idivl
in
jb
js
jbe
movsb
xchg
xchg
mov
rolb
into
sub
or
lock
xchg
lret
enter
sbb
push
dec
inc
xor
movsl
adc
mov
dec
xchg
pop
inc
pop
inc
pop
dec
roll
mov
test
push
repnz
pop
xor
mov
pop
adc
notl
xor
mov
mov
int3
popa
iret
mov
jne
loop
imul
adc
xor
inc
mov
clc
vfrczps
std
and
sub
scas
negl
add
pusha
cmp
test
testl
shll
dec
loope
jo
mov
inc
ret
xchg
pop
inc
pushf
mov
xlat
lahf
adc
lret
ja
ret
mov
or
xchg
or
shl
inc
mov
sub
sub
sti
mov
rcrb
sbb
scas
sub
jns
les
fsubl
lods
aas
mov
sub
imul
loope
fwait
mov
and
std
xlat
cmp
push
pop
push
xor
inc
lea
adc
pop
aas
ror
jbe
je
negl
jle
and
shrb
mov
movsl
jmp
cld
jo
bound
sbbb
stos
or
mov
fstps
mov
adc
jecxz
jg
add
fcomp
sub
test
mov
movd
push
xor
adc
lahf
jbe
mov
xchg
movl
popf
out
sbb
or
pop
and
mov
mov
mov
adc
inc
leave
xchg
popa
push
mov
push
cmc
lock
and
pop
pop
out
adc
addr16
or
xchg
vaesenc
adc
fmuls
jecxz
jp
inc
adc
push
mov
push
mov
dec
push
mov
jge
or
rcrb
inc
push
je
xchg
sbb
sub
in
mov
fst
xchg
shl
in
mov
orb
add
dec
inc
jae
xchg
clc
and
test
rcll
sub
pushf
jmp
aas
sahf
rol
jo
adc
and
movsb
fisubs
hlt
mov
pusha
mov
je
pop
push
pop
aaa
pop
or
imul
out
cmp
mov
cld
bnd
lret
lcall
sub
insb
out
mov
sbb
cmpsb
bound
stos
inc
es
test
scas
fldl
xchg
aad
adc
inc
icebp
mov
shlb
xchg
pop
adc
imul
outsb
inc
jp
hlt
add
pop
popa
push
cmpl
call
sub
cld
aas
decb
into
pop
push
fsubrp
movsl
jmp
cwtl
loope
inc
pop
and
inc
sahf
sahf
fldcw
sahf
out
ds
inc
xor
xor
daa
cmp
gs
into
and
out
les
and
enter
jge
je
xchg
jg
lahf
ficoms
mov
mov
sbbl
imul
loopne
dec
pop
jl
xchg
push
lret
jne
rol
mov
and
loope
dec
inc
xor
repz
mov
or
dec
add
les
out
adc
js
enter
sub
pop
push
mov
inc
rorb
cmp
mov
std
pop
inc
rcl
notl
loope
lods
inc
bound
loopne
xchg
jo
pop
imul
and
adc
inc
sub
xchg
stos
inc
mov
mov
inc
sub
pop
mov
push
jg
mov
lahf
xchg
jle
mov
add
ds
adc
scas
data16
xchg
movsb
scas
xchg
neg
mov
sahf
lock
fsub
dec
jl
dec
iret
mov
outsl
jg
cmc
sbb
push
or
addr16
jmp
xor
imul
mov
popf
cli
xor
test
lock
and
psubw
or
daa
or
jg
jmp
pop
aas
push
jecxz
clc
mov
push
pop
ret
int
xor
and
icebp
add
int3
and
jne
imul
lds
or
pop
addr16
lcall
out
lods
popa
cmp
outsl
xchg
dec
lret
sahf
sbb
dec
inc
cld
adc
mov
mov
daa
cwtl
xor
add
lods
das
es
negb
push
jmp
xor
repnz
dec
hlt
cwtl
lock
mov
mov
mov
xchg
or
sub
xor
int3
xor
frstor
add
nop
movsb
cmc
popa
adc
dec
sets
push
mov
mov
cmc
inc
ds
mov
and
ret
mov
push
cmp
push
clc
dec
sbb
push
push
imul
xor
cs
lods
lods
outsl
sbb
jns
test
xor
pop
lret
xchg
or
ret
rcrb
cmp
pop
adc
fbstp
or
push
push
push
cmpsb
bound
push
xchg
add
mov
adc
mov
inc
dec
setl
in
mov
fldl
mov
in
aaa
cltd
inc
loop
fdivl
and
test
insl
andl
ljmp
add
orb
bswap
mov
repz
inc
bound
lods
inc
pop
es
fildll
inc
jg
jae
hlt
enter
clc
je
or
int3
jbe
adc
test
les
inc
xchg
addr16
js
fsubs
stc
cld
push
into
jp
pop
out
jo
xor
and
and
fstpt
add
out
pop
push
xchg
seta
js
mov
call
and
std
mov
sub
mov
dec
push
and
xchg
test
mov
sahf
in
dec
in
or
psubd
dec
push
jp
adc
fists
adc
add
mov
iret
in
inc
cmpsl
fstpl
add
outsl
dec
xchg
in
adc
mov
maskmovq
testl
xchg
fbstp
adc
pop
rcll
push
stc
ficoml
std
adc
int
xor
out
xchg
push
int3
fwait
jbe
mov
add
shll
or
xchg
mov
and
xchg
cmp
and
and
xor
cmc
add
mul
sbb
xchg
xchg
cwtl
pop
mov
mov
clc
cmpsb
sbb
es
jno
repz
mov
arpl
jmp
cli
push
cs
lods
mov
mov
orl
and
out
rcl
push
call
xchg
ret
fdivrs
sub
fisubs
incl
xor
imull
das
loope
sub
fisttpl
mov
push
sahf
orb
mov
sti
cld
jae
lock
xchg
gs
clc
push
cmp
jo
mov
mov
xchg
mov
cmp
mov
xchg
rorb
outsl
jb
jl
mov
lahf
mov
or
or
add
ss
rcrb
adcl
rclb
mov
inc
pusha
mov
stc
adc
add
ds
fwait
imul
insb
inc
jg
mov
rolb
sbb
insb
sbb
mov
in
cmp
sbb
fcomps
cs
stos
pop
repz
je
mov
xchg
test
fdivrs
pop
pop
add
sub
test
inc
lret
scas
push
cmc
cmp
xorl
dec
mov
loope
int3
loope
rolb
loop
sarb
mov
jle
movsl
les
mov
imul
sbb
pop
sbb
xchg
push
xor
ss
and
bound
adc
and
mov
fwait
rorl
insb
or
in
pop
inc
dec
cmpb
mov
aaa
add
cmpsb
sub
mov
inc
jo
repnz
mov
cmp
cmpsl
insl
xor
imul
inc
bound
hlt
mov
adc
jns
mov
mov
subb
cmpsb
fwait
inc
jg
in
loope
adc
das
push
hlt
fiaddl
inc
add
adc
xor
aaa
mov
aaa
xchg
sub
adc
insl
inc
sbb
pop
in
cwtl
cmp
mov
mov
sbbb
hlt
cmpsl
inc
rcrb
mov
fwait
cld
pop
inc
dec
pushf
jno
mov
inc
dec
and
push
mov
pop
out
xor
lock
dec
and
stos
sbb
and
rolb
arpl
adc
aas
je
mov
mov
nop
jns
icebp
pop
imul
xlat
push
jge
jle
xchg
add
sub
mov
mov
sbb
xchg
in
sub
popa
mov
dec
jo
mov
mov
mov
jns
repz
cmp
mov
xor
scas
xor
add
les
ja
popf
add
hlt
sub
adc
sbbb
lahf
or
shll
cmpsl
pop
mov
ret
lods
stos
mov
push
inc
std
ljmp
mov
push
jmp
push
or
mov
jne
xorl
shll
popf
mov
jae
inc
insb
and
decb
adcb
mov
lods
xor
lea
int3
cmc
mov
pop
adc
std
sti
movsb
adc
or
mov
pop
repz
jae
mov
imul
out
scas
jmp
pop
in
mov
clc
inc
add
sbb
imul
test
xor
cs
inc
xor
xchg
pop
aam
adc
in
fstl
inc
mov
outsl
outsb
fidivs
lea
pushf
js,pt
xor
scas
inc
pop
push
aas
mov
fcoml
inc
fcom
dec
mov
push
xor
outsb
cld
ss
push
cmp
mov
dec
pushl
xor
push
mov
outsl
roll
mov
push
dec
test
add
xchg
sub
push
push
cmp
inc
insl
jae
pop
shll
icebp
cld
in
negb
jp
data16
in
and
test
lret
sub
cld
test
sub
dec
cmp
or
mov
pushf
xchg
sbb
xor
shrb
popf
into
mov
or
mov
mov
ds
dec
dec
inc
and
mov
aad
test
cmp
jmp
ret
int3
ja
and
push
ja
and
pop
out
test
lahf
sbb
mov
push
bndstx
xchg
cmpsb
cmc
mov
rcrb
push
leave
sbb
or
xchg
sub
sbbb
push
inc
dec
fwait
sbb
xchg
in
das
loopne
mov
inc
in
mov
sbb
dec
out
add
dec
std
or
mov
js
xlat
out
or
xchg
test
sub
daa
dec
outsb
xor
push
pop
mov
out
fisttpl
lea
lock
sub
cli
mov
push
sti
das
in
jge
dec
aas
aas
lock
ljmp
cmp
int3
pop
xor
mov
jmp
out
xchg
movsl
xchg
mov
into
inc
in
out
notb
sub
les
cmp
sti
ss
popf
xchg
dec
sarl
sub
daa
dec
mov
shrl
jmp
movsl
bound
movsb
pop
adc
xor
insl
pusha
lahf
into
int
sbb
jo
pop
stc
fsubrl
dec
mov
mov
cmpl
pop
pushl
lea
lahf
lret
into
mov
in
icebp
mov
pushf
shll
rolb
movsl
push
and
dec
pop
push
lret
inc
scas
mov
stc
test
loopne
pop
push
divl
adc
leave
xchg
sub
loop
mov
xor
fdivl
test
or
stc
adc
lods
mov
out
pop
imul
pop
pop
adc
lock
mov
add
and
add
popf
jae
andb
sbb
fsubs
sahf
divb
in
int
stos
ja
icebp
pop
push
sarl
push
clc
cmp
dec
and
shll
inc
cmpsb
xchg
sub
mov
andl
icebp
fwait
pusha
cmp
pop
dec
in
ficoml
out
and
and
adc
mov
add
cltd
aas
rorl
cmp
stos
adc
pop
cmp
mov
out
sbb
push
ds
adc
push
lods
xorl
test
imul
pusha
stc
sub
popa
jmp
mov
mov
pusha
cmp
xlat
loop
mov
inc
pop
adc
xor
cltd
and
stos
rorb
in
push
sti
dec
test
test
jecxz
or
mov
jnp
xchg
popa
inc
stos
add
or
sub
jmp
jle
mov
daa
inc
inc
aas
dec
enter
movsl
xchg
or
shrb
ljmp
je
mov
aas
pop
cmp
aad
sub
imul
enter
mov
and
mov
fiaddl
fdivl
fstl
ret
push
push
stos
out
dec
or
mov
sub
and
fucom
mov
das
jp
sub
iret
xor
push
xor
jb
mov
iret
in
out
pop
pushf
mov
xchg
addr16
fcmovu
mov
stc
test
jb
pop
scas
mov
stos
xor
push
xchg
push
js
daa
xor
adc
imul
jns
imul
lahf
xchg
addr16
icebp
in
mov
push
push
ljmp
mov
pop
dec
sbb
insb
rcll
mov
fdivr
jg
or
lcall
adc
sub
jb
nop
dec
xchg
je
dec
lcall
dec
mov
dec
jecxz
bound
jae
enter
nop
cmp
decl
mov
jmp
pop
paddusb
dec
xlat
dec
jb
xchg
and
jne
jp
mov
test
gs
jno
icebp
push
dec
popa
xor
sahf
cmp
push
jbe
sbb
cmpsb
jmp
ret
sub
imul
ret
mov
and
or
sub
adc
fwait
pop
xchg
ja
jns
out
aam
xor
int3
and
push
stc
loop
test
out
xchg
ds
inc
jl
and
faddp
inc
dec
jle
iret
inc
cs
lea
or
imul
push
cmc
or
push
adc
dec
sarl
in
cs
fs
mov
test
mov
loopne
enter
dec
je
fucomi
inc
pop
or
or
movsl
out
xchg
and
in
mov
das
xchg
mov
cmp
inc
fpatan
sbb
lods
add
xchg
jnp
filds
dec
in
pop
xlat
imul
add
mov
loopne
xchg
vprotd
add
dec
popa
sub
cmpsl
cmp
clc
pop
out
jle
mov
in
jl
jns
lods
lock
or
pop
xchg
pop
dec
pop
cwtl
out
pop
adc
jb
push
adc
sub
ds
cmpsl
xchg
cld
mov
adc
xor
movb
outsb
sub
loope
inc
fwait
imul
mov
mull
xor
fldl2t
xchg
add
xor
int
pop
lods
out
mov
mov
add
mov
stos
mov
dec
sub
into
nop
ret
arpl
fidivrl
fsubrs
sbb
outsl
mov
ja
lock
lds
fisubrs
sbb
sbb
sti
scas
push
cmovl
es
inc
pushf
jle
pushl
fcoms
pop
fisubrs
pop
cmp
in
lahf
jg
aas
scas
mov
testl
pop
inc
jl
mov
xor
sub
mov
mov
vpaddusw
adc
lret
push
in
mov
ljmp
ret
jbe
sbb
mov
mov
js
ss
shl
add
pusha
addl
repz
into
test
adc
aam
jo
es
jbe
adc
stos
mov
xchg
nop
pop
push
pop
cmp
mov
xor
cmpsb
test
or
subl
or
scas
jo,pt
iret
sub
sbb
test
lcall
xchg
mov
sbb
and
shl
ja
sahf
test
adc
push
or
or
call
enter
jl
aas
dec
movsb
lea
pusha
pop
xor
ss
xor
add
icebp
sbb
or
aaa
enter
leave
js
shld
mov
mov
xor
sbb
rclb
shll
jmp
add
sbb
mov
xor
mov
pop
cmpsl
cmp
pop
cmpsb
mov
push
xchg
mov
cltd
mov
jmp
inc
pop
jns
aas
das
xchg
pushf
jl
clc
les
cld
or
mov
push
ljmp
in
push
fistpl
mov
or
mov
fildl
rorl
popf
pop
cmp
jno
push
jnp
mov
pop
test
jg
lahf
xor
inc
aaa
sbb
out
cmc
add
or
mov
bound
fsubr
dec
scas
fs
outsb
popa
sub
pop
sbbb
cmpl
aad
lcall
jns
cmpsb
dec
test
push
iret
sbbb
stos
pop
insl
add
pop
adc
sar
dec
and
add
arpl
or
jo
and
jns
pop
enter
outsb
testl
sbb
clc
xor
push
test
aas
sbb
and
and
mov
jnp
popa
les
lods
inc
cmp
lock
fsub
js
xor
sub
test
inc
sbbb
movsb
mov
popa
xchg
insb
pop
daa
pop
mov
adc
xchg
jb
jbe
mov
add
cmp
incb
hlt
sbb
jle
fs
sbb
cmp
negb
add
adc
or
sub
xor
test
sbb
ret
fldt
daa
inc
dec
push
fs
inc
push
jns
subb
add
adc
push
ret
push
dec
mov
adc
imull
rol
dec
cmp
ret
lock
adc
push
or
in
aad
xchg
add
outsl
jmp
jg
mov
dec
je
mov
ret
stos
shll
add
pushl
arpl
jmpw
jb
arpl
fcmovnb
mov
sbb
lods
mov
mov
fsubl
mov
scas
push
and
shl
lds
in
ss
mov
sub
and
pusha
cs
adc
repz
test
cltd
cmp
iret
xor
and
enter
stos
adc
push
cltd
loopne
ja
mov
mov
pop
fcompl
cmpsb
cld
or
in
shl
xor
or
sbb
shrd
lods
adc
and
xorl
arpl
lods
xlat
aaa
jg
inc
lods
ds
iret
or
rorb
movsb
sub
addr16
mov
pop
popa
pop
outsl
inc
add
inc
fsubrp
mov
testl
aas
out
jnp
xchg
fs
cmp
mov
or
mov
inc
pushl
jp
add
xorl
xor
js
mov
push
cs
leave
jnp
mov
dec
and
movsl
mov
rclb
sbb
mov
adc
enter
ljmp
lret
xor
fstpt
pop
ret
clc
shrl
inc
adc
ret
xchg
jnp
add
enter
push
sub
icebp
mull
jp
ret
adc
cmc
lret
insb
or
mov
leave
lret
in
cmp
lods
adc
testl
outsb
mov
adc
gs
scas
xchg
xchg
jns
mov
cltd
and
mov
aam
inc
cmpsb
iret
shl
pusha
jb
imul
addl
dec
push
inc
adc
mov
dec
xor
ss
lea
dec
aaa
cmp
lods
int
leave
mov
xor
rcrl
adc
pop
shrl
xchg
je
push
mov
out
out
sub
enter
popa
mov
push
jno
cmp
sub
rclb
fidivl
cwtl
mov
pop
dec
pop
adc
adc
dec
mov
jmp
jle
cwtl
and
dec
shlb
in
enter
inc
mov
lahf
xor
repnz
les
xchg
jmp
repz
xchg
sbb
inc
out
hlt
popf
test
push
sub
cmp
dec
rcrb
pop
mov
insl
mov
iret
mov
xchg
and
pop
jp
les
sub
xchg
aas
sbb
add
repz
arpl
sbb
rorl
add
inc
testb
aam
mov
mov
mov
into
adc
inc
add
loop
je
xchg
sbb
sbbb
fsubr
ret
xor
aad
lods
dec
stos
ljmp
and
pop
mov
mov
fldenv
inc
adc
cmc
pop
add
lret
cmp
cmp
xor
fdivrs
or
add
lods
test
jae
hlt
test
xchg
add
clc
rcr
in
push
cwtl
and
lock
pop
mov
jnp
jmp
sbb
push
mov
pop
jge
push
inc
mov
loop
jnp
mov
xchg
popf
das
sub
dec
xlat
pop
sbb
fcompl
fsubrs
dec
ret
adc
sti
imul
jp
cmp
cmp
call
ret
icebp
insb
mov
ljmp
cmp
add
mov
jle
mov
push
scas
addb
inc
jns
sbb
pop
test
xor
out
jne
out
cmp
mov
lahf
popa
outsb
jle
xchg
fcmovne
fdivs
loop
jno
scas
cmp
mov
mov
sub
arpl
push
ret
daa
lods
iret
or
dec
mov
shr
dec
test
mov
cmpsl
mov
sub
lods
ja
add
xlat
xor
mov
ljmp
cmc
repnz
ss
insl
ljmp
popf
movsb
pusha
mov
sub
aam
scas
test
daa
cmp
repz
adc
xorl
mov
sub
mov
ja
mov
push
loope
inc
mov
nop
daa
xchg
decb
jnp
push
xchg
out
pop
jecxz
leave
out
leave
lret
sarb
mov
in
add
mov
inc
cmc
leave
adc
inc
lsl
lret
dec
test
aas
inc
ja
pop
jno
decb
fs
or
adc
pop
cmp
jb
or
pop
gs
es
cmp
in
addr16
cld
rcl
jge
jbe
bound
xchg
divb
mov
lret
xchg
add
or
call
pop
test
in
or
dec
mov
sub
push
adc
mov
stos
add
fdivl
push
pop
cmp
cmp
mov
pop
push
addl
out
push
lds
mov
popa
dec
rolb
insb
mov
bound
mov
lea
add
into
stc
add
mov
sahf
iret
mov
ds
das
leave
mov
stos
mov
pop
jno
add
mov
es
mov
dec
lcall
cmpsl
pop
mov
into
add
xchg
and
mov
mov
pop
xchg
push
push
dec
fimull
decl
test
push
test
stos
ljmp
lods
imul
jae
lods
aaa
add
cli
jle
mov
dec
cmc
add
pop
mov
out
push
das
push
movsb
and
and
les
scas
inc
das
arpl
push
jae
cmpsb
sarb
cmp
sbb
testb
and
and
sar
stos
cld
aam
das
sbb
mov
into
add
push
bound
dec
adc
add
mov
and
imull
adcb
int3
es
push
fdivrl
mov
cmp
add
mov
mov
daa
or
push
ret
mov
mov
rcll
inc
stos
in
out
push
aaa
pop
ss
cli
fcompl
and
dec
bound
lahf
jbe
insb
cmp
mov
sub
pusha
aad
ja
jecxz
mov
jns
mov
cmp
out
cs
dec
dec
mov
arpl
cli
lcall
sbb
out
pop
dec
jne
fadd
sahf
dec
shll
fs
in
arpl
xchg
std
insl
repz
mov
xchg
xor
cmp
cmpsb
mov
and
stos
test
xor
jae
sarb
sbb
mov
or
xchg
jp
inc
jecxz
xchg
sbb
jmp
fnstcw
fxch
jmp
inc
imul
popa
xor
or
hlt
sub
pop
das
aad
or
inc
call
js
cld
jbe
xor
dec
aam
or
or
hlt
lcall
jno
push
pop
mov
data16
inc
mov
outsl
xor
test
xlat
sti
sub
xor
clc
cmpsl
test
pushf
cli
push
pop
insb
push
sbb
cwtl
fistpl
out
js
fnstenv
pop
jecxz
ret
je
mov
test
out
inc
imul
or
jb
jecxz
rclb
cmpsl
cmp
sbb
cmp
pop
dec
pushf
or
or
add
add
lods
or
cmpb
inc
push
loopne
arpl
pushf
scas
mov
push
cmp
ret
adc
and
cmp
inc
pop
les
pop
roll
loopne
inc
xchg
push
test
roll
insl
pop
push
and
sub
sarl
movsl
adc
mov
das
cmpsl
cli
fstl
out
cmp
mov
push
jmp
sahf
xchg
clc
xchg
cmp
movsl
cwtl
movhps
scas
pop
fmuls
push
jecxz
loopne
mov
cmp
xor
mov
mov
mov
inc
mov
mov
iret
aas
mov
mov
divb
shlb
fcoms
imul
jno
arpl
lods
sub
js
int3
ja
push
sbb
leave
push
jl
pop
fwait
cli
add
mov
jb
rcrl
add
pusha
insb
pusha
or
inc
data16
div
flds
jae
jnp
outsl
mov
cltd
in
int3
mov
jb
sub
add
inc
push
inc
shrb
aad
and
outsl
sti
or
lds
push
ficompl
add
arpl
cmpl
nop
mov
mov
clc
pop
aam
je
jbe
das
xchg
add
in
fadd
inc
mov
mov
xchg
jne
mov
sub
push
sub
cltd
pop
push
add
pusha
popa
sbb
or
mov
lcall
gs
movsb
ja
mov
add
daa
mov
test
ret
out
fisubl
and
push
inc
shr
in
aam
xchg
add
in
ret
pop
xlat
push
xchg
outsb
aad
cs
mov
xor
or
adc
test
push
cmc
xchg
xchg
rorb
dec
out
pop
pop
mov
xorl
data16
stos
out
jnp
and
fiadds
or
into
mov
punpckhdq
in
test
int3
mov
lret
sub
dec
cs
fstpl
les
dec
dec
in
jmp
imul
mov
adc
dec
jnp
pop
adc
dec
rcll
test
dec
xor
add
ja
repz
mov
xchg
inc
data16
pop
and
addr16
shll
fcmovnbe
scas
fidivrs
xlat
jge
pop
pop
adc
mov
loope
movb
dec
push
sub
push
push
pop
mov
dec
outsl
push
pop
jne
ja
mov
test
dec
adc
jnp
inc
leave
add
gs
sbbl
mov
fmul
ljmp
dec
enter
jbe
cmp
aas
das
lcall
repnz
cmp
mov
aaa
sub
cmp
mov
ret
or
pop
cmp
stos
popf
sarl
fxam
xor
or
fildl
fcom
inc
faddl
in
and
dec
push
ret
push
lahf
mov
aaa
adc
xchg
sub
xor
cmp
in
lret
mov
cmc
call
cmp
adc
add
lods
xchg
aaa
repz
sbb
cmp
and
loopne
mov
fisttps
xchg
repnz
pop
or
jb
hlt
xchg
sti
mov
rcrb
xor
jae
lahf
test
outsb
and
aam
arpl
mov
fwait
nop
fisttps
adc
je
dec
pushf
mov
stos
into
dec
jne
pop
cmpsb
mov
inc
int3
xor
mov
add
mov
sbb
and
insb
mov
and
pop
jecxz,pt
inc
daa
lcall
test
push
shlb
sbb
in
push
fldt
rcl
scas
bound
test
pop
data16
data16
push
mov
movsb
in
test
jo
movsl
pop
fisttpl
jg
dec
pop
stos
aaa
aas
fldenv
bound
mov
cmp
cmp
and
mov
scas
cmpsb
jg
into
and
fstl
mov
scas
mov
into
add
xor
mov
inc
push
test
in
cmp
ret
sub
pop
pop
xchg
out
push
in
and
xchg
jns
das
sbbl
das
xor
xor
je
rolb
call
jmp
pushf
xor
repz
pop
and
lahf
xor
sub
jbe
test
das
movsl
cli
push
test
inc
mov
and
in
mov
jg
push
cmpsl
dec
std
adc
les
rol
or
mov
fldl
jecxz
pop
cmp
add
pusha
lea
je
stc
negb
lock
and
jg
lds
mov
lds
out
movsb
movb
mov
pop
mov
mov
popa
outsb
mov
mov
inc
lea
inc
cli
decb
ja
adc
adc
sbb
loope
or
pushf
pop
mov
outsl
pop
adc
pusha
test
shlb
jecxz
js
int3
pcmpgtd
pop
push
mov
in
jno
add
cmp
jne
rcll
rol
daa
mov
mov
lods
or
or
mov
cmpsl
pop
cmp
cwtl
jle
mov
pop
xor
push
mov
aad
stos
xchg
jmp
jmp
scas
xchg
lret
mov
call
inc
sbb
jnp
ss
leave
fsubr
mov
andb
into
cld
rorl
cmpsb
jmp
ljmp
mov
out
or
fnsave
xchg
out
add
mov
mov
call
inc
cmp
pop
out
popa
dec
xchg
or
int3
mov
pop
int
and
shl
das
std
push
jb
movsb
push
arpl
mov
xchg
aaa
iret
pop
xlat
add
sti
xchg
add
sub
push
sarl
mov
sbb
jecxz
loopne
int
pop
mov
into
test
and
in
jae
push
fs
mov
ret
push
ljmp
scas
xchg
inc
mov
jb
movl
dec
adc
mov
outsl
mov
mov
loopne
lock
xchg
fists
jae
mov
inc
pop
stos
xchg
jne
dec
pusha
add
call
pop
mov
mov
imul
xor
mov
jg
push
call
sub
mov
adc
je
repnz
xchg
jmp
sbb
fistpl
insw
adc
mov
sub
mov
outsb
rcrb
push
stos
mov
cs
scas
sbb
idivl
test
adc
cli
nop
mov
fimull
jno
cwtl
xor
push
sub
adc
cwtl
pop
shlb
mov
pop
pop
test
pop
and
adc
xorl
int
fildll
imul
mov
cmp
pop
rcrb
ja
sbb
mov
or
dec
mov
aaa
bound
push
cmpsb
cmp
pop
and
inc
dec
aam
pop
out
cli
jns
xchg
js
inc
adc
je
loope
push
icebp
pushf
adc
fildll
mov
pop
popf
inc
jno
pusha
or
orps
cld
dec
or
jp
sub
bound
mov
repz
inc
cmp
xchg
mov
push
jle
ljmp
mov
mov
inc
lahf
stos
or
int3
sbb
mulb
or
add
add
in
cmovae
test
sti
clc
das
flds
sbb
fistps
shll
lret
or
stos
es
sti
test
pop
jle
fildll
mov
gs
aaa
fst
push
mov
push
jmp
aas
outsl
enter
mov
cli
jmp
add
fs
sub
bound
add
test
or
call
cld
xor
cmp
mov
scas
cmp
push
xchg
push
jb
xchg
add
dec
ret
in
inc
cli
outsb
cmp
mov
inc
repz
cmp
xor
xlat
gs
js
fwait
cld
add
jno
lods
scas
ret
sti
inc
mov
fs
dec
mov
add
shl
pop
mov
cmp
ret
xor
mov
sbb
mov
test
fs
outsb
inc
stos
kmovw
jno,pt
ret
in
sub
fdivrl
pop
xor
out
cmp
bound
add
cld
int3
les
les
pusha
sarl
shll
loop
xchg
stos
divl
mov
mov
out
data16
lcall
fcomp
mov
sbb
fnstenv
sub
dec
aad
pop
mov
les
push
jg
mov
or
adc
dec
mov
mov
in
sti
movsl
mov
jmp
add
js
sub
sub
outsl
jge
xor
das
pop
cmp
xchg
imul
mov
test
loop
or
add
xchg
test
jo
mov
push
int3
pop
cmc
sub
icebp
fld1
mov
fldt
inc
mov
movsl
mov
push
shrb
mov
lcall
dec
ret
mov
mov
ret
fs
or
pop
mov
jo
add
sti
out
ret
roll
scas
xor
in
sbb
fmul
test
or
lods
inc
xlat
insb
or
cs
ja
negl
fmuls
pusha
fsts
dec
adc
fisttpll
xor
mov
fildl
movsb
out
xchg
push
and
and
cmp
or
add
xchg
mov
iret
int
fs
lods
jb
sbb
call
mov
sbbb
cwtl
jecxz
jle
xchg
xor
push
dec
mov
fldenv
push
fcomi
dec
jle
xchg
cli
mov
lret
add
out
xchg
pop
xchg
orb
mull
sarb
out
mov
pop
mov
outsb
or
cmp
sub
test
ljmp
incl
xchg
in
les
xchg
sub
addb
mov
fdivl
xor
and
push
jbe
test
push
clc
pushf
jmp
sbb
dec
jg
and
ds
jmp
mov
movsb
out
outsl
outsl
in
dec
fisubs
fucomp
mov
lahf
xchg
popf
aad
ja
jns
mov
in
mov
or
and
or
sub
xor
mov
jno
or
cltd
jb
popf
mov
cmc
push
les
stos
hlt
cmpsl
addr16
push
loope
cmp
popf
inc
cs
sarl
fbld
cltd
pop
rcrl
out
dec
mov
ret
repnz
push
xor
pop
or
adc
rcll
adc
stc
sbb
lret
dec
iret
loop
adc
push
mov
lret
out
sbb
push
aam
out
push
jo
push
add
xchg
xor
ret
and
test
js
or
fnsave
push
and
or
or
pop
add
adc
adc
andb
add
dec
add
test
rolb
outsb
hlt
mov
jno
cli
and
xchg
loope
adc
std
repnz
lods
sub
add
mov
inc
xchg
cmpsl
das
push
leave
gs
leave
mov
loop
pop
loope
pop
daa
dec
xchg
fimull
mov
mov
icebp
push
jns
fs
sbb
std
jp
repnz
push
loopne
fldcw
lods
cs
mov
out
out
add
sub
loope
push
dec
test
sub
xorl
xor
jp
inc
into
fisubrs
mov
jne
inc
shrl
jge
sti
sub
adc
fldl
lods
mov
rolb
inc
adc
cmp
or
or
scas
imul
xlat
in
fnstsw
iret
mov
sub
nop
xor
daa
scas
jo
cmpb
inc
sub
dec
cmp
or
popl
push
dec
xchg
gs
push
ds
adc
push
inc
nop
jbe
lret
xor
mov
fsubrl
xchg
rcrb
or
dec
lea
jp
jecxz
call
pop
loope
enter
sbb
jg
jne
pop
adc
lods
nop
mov
xchg
outsb
sub
and
xor
clc
dec
notb
xchg
jle
popa
inc
pop
push
call
push
cmp
pop
stos
add
push
inc
add
lret
xchg
call
xor
inc
fwait
lea
xor
in
mov
outsb
push
xchg
and
das
out
or
call
xor
lds
and
int
les
test
mov
xchg
jae
adc
movsb
aaa
mov
out
mov
popl
sub
cmc
jg
push
dec
popf
lock
cmpsb
loopne
pop
test
mov
cmp
dec
cmp
mov
hlt
jl
inc
or
bound
fildll
dec
push
xchg
or
out
mov
inc
push
mov
jg
sub
mov
outsl
popf
fbld
push
dec
out
cmp
pop
mov
into
aas
in
out
push
dec
cmpsb
jl
cmp
inc
test
dec
dec
add
and
xchg
out
cmp
movsl
icebp
test
mov
add
fcompl
mov
or
or
jmp
and
inc
xchg
push
xchg
dec
pop
lahf
add
or
shrl
or
outsb
pushf
nop
iret
loope
lahf
push
std
mov
rorl
pop
lret
loop
jmp
divb
jae
sbb
push
xchg
xchg
push
jbe
les
sbb
loop
sbb
push
pop
sub
adc
mov
fs
leave
xchg
jae
sbb
mov
nop
mov
mov
and
mov
popa
mov
inc
clc
mov
daa
shlb
inc
pop
pusha
mov
xchg
dec
lea
std
and
or
sub
dec
push
test
pop
fwait
jl
mov
int3
rclb
outsl
enter
mov
sbb
repz
orb
rol
pop
out
outsl
mov
addr16
pop
cltd
je
cmp
scas
or
mov
add
not
dec
lds
pop
cli
mov
rcrl
ret
aaa
pushf
and
or
incb
outsb
push
inc
jg
xor
or
jle
hlt
test
aam
stos
push
dec
and
sub
xchg
int
cs
mov
mov
sbb
sbb
fsubp
sub
cs
fwait
popf
fcompl
fwait
mov
cmp
add
hlt
sub
mov
imulw
cmp
out
inc
insb
mov
push
arpl
pop
and
dec
clc
sbb
stc
out
lea
popa
aad
xchg
ljmp
mov
xchg
mov
dec
mov
cmp
xor
mov
add
jecxz
stc
lock
aad
xchg
mov
xor
pushf
mov
shll
mov
xchg
lcall
mov
sti
or
push
loopne
push
test
push
or
jl
stc
fidivrs
dec
orb
fistl
testl
dec
and
and
xchg
add
out
iret
icebp
ret
jns
jbe
and
jge
mov
inc
cmpb
jmp
cwtl
das
adcl
add
xchg
push
jno
imul
cmp
or
mov
cltd
cmp
inc
in
std
lods
rolb
xchg
jne
repnz
sbb
inc
out
imulb
or
cli
jns
ret
fcomip
or
cmp
daa
lret
aad
adc
mov
repz
sub
mov
loopne
hlt
lea
dec
out
scas
mov
lds
cld
jae
pop
mov
leave
stos
add
push
jae
sub
add
roll
frstor
pop
jnp
adc
pop
or
fisttps
nop
dec
xor
jmp
scas
xchg
push
xchg
push
shlb
loope
mov
mov
mov
je
adc
sbb
pop
mov
lret
pop
inc
enter
ds
fcmovnbe
divb
std
mov
fidivl
or
adc
push
mov
push
xchg
mov
cli
push
xchg
adc
cmpsb
jmp
mov
dec
xchg
xchg
adc
test
shll
inc
xchg
out
and
into
mov
cli
jmp
stos
push
dec
incb
in
ss
repz
cmp
jns
pop
jl
push
call
arpl
xchg
test
mov
insl
das
fcmovnb
loope
mov
mov
aas
insb
jp
in
xor
movsl
xchg
fwait
xchg
lods
pop
out
mov
dec
into
in
jo
sbb
or
sbb
pop
cmp
aad
cld
pop
and
ljmp
das
inc
bound
loopne
idivb
jb
in
gs
cmp
xchg
sbb
mov
mov
xor
pop
adc
mov
cmp
pusha
jne
lret
or
insl
lods
ret
data16
shl
pusha
test
mov
mov
xorb
lock
push
daa
sub
add
push
cmp
orl
jnp
pushf
mov
inc
or
mov
mov
scas
out
pushf
mov
xchg
shll
jb
sbb
lods
mov
xchg
addr16
pushf
xor
popf
dec
andb
loope
icebp
xor
dec
movups
pop
adc
jge
inc
fmuls
scas
pop
popf
and
and
repz
fs
and
pop
stos
addl
arpl
pop
xchg
call
addb
adc
cmc
fstpl
mov
mov
pop
xor
inc
push
imul
mov
fistl
insl
pop
repz
mov
push
in
sti
push
sahf
mov
pushf
mov
add
push
cmc
out
push
lods
pop
loopne
and
pushf
push
rcrb
mov
xor
sub
lahf
es
jo
in
sub
pop
add
or
cwtl
mov
mov
sub
aaa
rorb
je
add
sub
clc
add
or
push
addb
sbb
sbb
mov
adc
jge
repnz
fisubl
pop
xor
xor
lahf
sub
fmull
xchg
insb
push
inc
cltd
mov
mov
out
mov
repnz
sahf
or
pop
int
enter
add
push
gs
loope
xlat
out
or
and
xor
test
or
xchg
add
push
mov
js
lds
cltd
les
push
cmp
fsubr
sahf
jb
adc
les
mov
adc
fwait
test
ss
sbb
fisubrs
inc
mov
lcall
jae
mov
push
test
jns
in
dec
mov
xchg
and
pop
mov
cmp
adc
in
or
xor
adc
arpl
xchg
adc
es
lahf
mov
mov
lret
pop
cwtl
cmc
aam
add
insl
repnz
shll
enter
pop
xchg
outsb
mov
int
cmpsb
pop
pop
push
adc
xchg
push
stos
pop
push
pop
jno
icebp
mov
cwtl
loop
xlat
mov
push
jno
ds
mov
imul
ret
ret
out
xor
cmpsl
dec
hlt
data16
jns
add
push
loopne
shr
push
idiv
in
lahf
lahf
jp
push
pop
js
aam
jl
push
aam
movsl
push
xchg
mov
add
mov
lods
addr16
mov
shl
notb
cmp
add
enter
in
lods
mov
mov
mov
ja
push
and
sbb
fstl
arpl
jmp
aad
fsubr
lcall
lcall
incl
leave
sbb
out
mov
rcr
fistpl
fcoml
cmc
mov
jae
fidivs
xchg
cmp
lea
imul
mov
pop
ret
jge
or
mov
inc
or
push
cmpsb
nop
mov
xor
mov
insb
or
clc
sar
xor
lods
jmp
mov
shl
imulb
xchg
movsb
out
popf
std
shll
mov
insl
hlt
mov
mov
scas
cmp
xor
divb
lret
int
loope
outsb
stc
mov
jbe
leave
add
ja
mov
into
xchg
push
enter
xorb
in
jmp
jle
mov
bound
xchg
xor
jne
mov
call
xor
dec
movsw
movsb
push
push
aad
shrl
je
xchg
arpl
mov
das
push
clc
call
je
xchg
hlt
outsl
fimull
je
ss
cmc
mov
ds
adc
test
cli
and
mov
ljmp
test
adc
push
hlt
pop
inc
sbb
call
es
mov
fisttps
mov
or
jmp
pop
adc
das
aam
push
test
push
pop
jg
test
mov
cmp
add
je
movsb
lods
loope
fs
pusha
xor
fsubl
outsl
cmp
mov
mov
and
jo
inc
out
cwtl
jmp
adc
inc
jne
jo
scas
call
stos
cltd
ficomps
push
mov
xor
mov
push
leave
cmp
cwtl
jge
scas
test
mov
jge
mov
and
aad
clc
bound
adc
pop
fidivrl
clc
mov
add
faddl
loopne
xchg
lahf
adc
xchg
xchg
test
pusha
push
mov
or
scas
cmp
aas
into
mov
dec
xor
xchg
jb
add
movsb
or
shlb
cmc
cmp
jne
sub
sbb
int
xchg
adc
lock
stc
jno
addr16
jp
add
or
dec
xchg
pusha
fxch
cmc
test
mov
inc
fsubr
rcll
push
add
pusha
inc
sub
dec
and
fistpl
sti
imul
movsl
rep
pop
xlat
gs
jecxz
inc
mov
in
dec
div
mov
lret
mov
mov
dec
fisubl
jns
or
lret
add
adc
in
lock
lock
push
cltd
cmpb
jnp
cmpsl
or
stos
popf
mov
sub
xchg
stos
adc
outsl
das
cmp
ficompl
je
push
out
mov
aam
cli
imul
mov
clc
mov
mov
xchg
add
xor
sbb
outsb
cmpsl
ret
add
push
sarb
lcall
push
loopne
or
lahf
or
out
sbb
popf
cmp
push
pop
aaa
mov
aaa
xchg
std
cmp
lds
or
shll
sub
ret
js
xchg
mov
mov
popf
add
in
pop
xchg
mov
jecxz
mov
mov
push
dec
adc
cmp
mov
mov
or
cmp
shlb
adc
call
out
icebp
add
push
jge
mov
push
imul
cmp
jnp
adc
notl
jecxz
addb
es
cmp
mov
xchg
pop
dec
popa
lods
shl
test
pop
mov
xlat
jno
stos
pop
das
loop
xchg
faddl
fsub
inc
xchg
icebp
lcall
jmp
scas
xor
fwait
xchg
jo
iret
fiaddl
sbb
or
movsb
lock
sahf
push
cmp
cli
or
cmp
lcall
xor
aas
stos
sti
mov
mov
sti
ljmp
adc
cmp
gs
mov
pop
dec
inc
sbb
xor
push
imul
pop
fbld
sub
shrb
xchg
aam
mov
jg
cmpsb
and
xchg
inc
cwtl
mov
pushf
or
pop
aaa
cmp
xor
cmp
or
shrb
leave
lahf
pop
mov
mov
pop
dec
test
sbb
or
cltd
adc
out
fsubrp
inc
jp
or
enter
fstpl
cvttps2pi
icebp
out
push
xor
loopne
sub
push
sub
leave
lods
pop
sub
mov
pop
mov
jg
ror
adc
out
mov
inc
jge
fldln2
jae
pusha
ret
xor
popa
leave
cmp
sbb
negl
cmp
inc
lret
addb
add
fdivr
movsl
pop
out
adc
and
aam
mov
pop
adc
xchg
sub
test
out
dec
imul
shrl
mov
sahf
cmc
jae
andb
lods
imul
xor
xchg
jmp
mov
dec
add
jns
mov
in
rep
add
xchg
lret
outsb
fisubrl
or
sahf
addr16
inc
in
jmp
inc
pop
ljmp
test
out
lret
add
lds
push
and
fdiv
lret
stos
xchg
popa
push
fdivl
iret
ja
sub
insl
add
enter
mov
lret
or
ret
jp
lods
rorl
ja
or
adc
fsubr
adc
jnp
inc
enter
loope
insb
scas
scas
adc
xchg
cli
mov
jnp
mov
pusha
mov
fistl
dec
data16
ret
pop
xchg
insb
pop
jp
mov
jecxz
and
mov
pop
pop
cmp
sub
jne
mov
dec
hlt
jns
stc
mov
loope
mov
fsubs
scas
pop
movsb
bound
cmp
int
dec
adc
mov
iret
xchg
insl
and
jae
push
pop
pop
outsb
pop
into
add
dec
xor
iret
cmp
sbb
jecxz
shl
push
test
add
jns
and
add
loope
inc
dec
cmp
in
dec
inc
pusha
mov
repz
or
cwtl
cmp
sti
dec
inc
lret
xchg
shl
sbb
clc
jnp
push
jnp
cmovle
inc
or
push
fwait
ljmp
pop
mov
js
xchg
fmull
sbb
mov
sbb
scas
pop
adc
cmp
pop
xor
inc
rorl
mov
sbb
or
sub
stc
mov
pusha
jmp
sti
fs
pop
std
insb
ret
xor
mov
pop
movsl
loop
mov
mov
mov
sub
pusha
fisubl
pop
call
movsl
inc
mov
mov
sub
dec
lret
push
test
fsubl
cwtl
sahf
sbb
lret
jge
inc
mov
jns
or
pop
sbb
mov
mov
xchg
add
or
xchg
cmp
push
sbb
inc
jl
push
out
sti
sti
xchg
mov
pop
mov
dec
mov
lds
pop
sbb
enter
insl
jp
cld
inc
icebp
push
mov
lock
add
sub
cmp
fisttpll
jno
lods
cmpsl
push
jne
fldt
jmp
pop
out
mov
mov
mov
in
test
inc
mov
test
dec
in
testl
dec
mov
popf
outsl
inc
clc
xor
mov
mov
lock
rcrl
push
aaa
sub
mov
push
inc
std
push
loop
xchg
jb
adc
roll
imul
push
insl
pushf
add
nop
mov
sub
js
test
pop
add
aam
fildll
dec
jnp
xlat
mull
roll
sahf
and
jecxz
sbb
add
das
push
mov
cli
pop
or
inc
push
add
push
or
cmp
add
mov
or
pop
push
out
fsubp
or
fcmovbe
mov
xorb
iret
dec
mov
je
stc
jo
push
cld
pop
cmp
mov
and
shrl
stos
nop
mov
xchg
xor
loop
das
xchg
mov
or
hlt
mov
mov
dec
lcall
insb
push
dec
mov
inc
sahf
adc
ficompl
loop
xor
xchg
ss
je
add
mov
mov
insl
rcll
fwait
orl
xor
pop
mov
mov
sbb
in
jo
dec
aad
shll
pop
adc
test
mov
adc
icebp
dec
test
dec
or
arpl
sub
test
jo
mov
lret
and
mov
pushf
push
test
cmpsb
rcrb
out
mov
sbb
outsb
jbe
out
pusha
push
in
and
shr
push
popf
mov
push
fsubrs
adc
cmc
xor
jecxz
int
popf
add
add
add
pop
iret
ljmp
fbld
sahf
adc
sub
fwait
test
sti
sbb
mov
jb
sbb
std
shrl
movsb
jno
int
loope
push
aam
inc
in
test
mov
into
jmp
cmp
sbb
fstl
scas
and
adc
push
stc
clc
sbb
js
lret
icebp
xor
or
std
mov
es
inc
mov
lcall
xchg
js
adcb
inc
jl
jg
fldl
je
addl
into
gs
lret
pop
sbb
nop
loopne
pop
idivl
adc
inc
aas
cpuid
sub
ljmp
push
add
add
push
push
mov
shrb
inc
int3
aam
mov
enter
xchg
cmp
repnz
and
xchg
sbb
adc
leave
push
fidivl
sbb
mov
xchg
inc
add
mov
testb
insb
xchg
loope
loope
push
pop
out
ss
xchg
ret
jge
outsl
outsl
int3
dec
mov
adc
cmc
ljmp
mov
fisttpl
test
push
sub
outsb
mov
iret
dec
movsl
insb
je
sbb
mov
imul
sbb
sbb
icebp
mov
hlt
dec
push
pop
call
sub
add
dec
xchg
xor
mov
xchg
movsb
push
mov
adc
mov
jo
push
xchg
aam
in
mov
mov
and
mov
pop
push
fstl
in
push
in
popa
test
jo
adc
aam
or
jbe
mov
xorl
mov
lods
push
scas
add
pop
lods
mov
jl
or
mov
fimull
out
add
push
pop
pop
push
mov
ss
movsl
test
mov
outsb
in
lods
or
pushf
in
repnz
or
bound
inc
int
pop
xor
out
mov
ret
mov
xchg
test
gs
testb
fisubl
and
outsl
lock
mov
jbe
mov
clc
dec
enter
sub
mov
dec
in
outsl
pop
add
loopne
adc
popa
repnz
insb
dec
das
dec
inc
mov
dec
sbb
sbbb
stc
xor
and
push
mov
fcomps
lret
fdivrl
inc
mov
xor
cmp
fst
enter
jl
cli
add
and
xor
xor
cli
xchg
fs
sbb
dec
mov
rclb
je
xchg
fimull
daa
dec
sbb
pop
xor
cmp
mov
xchg
ljmp
jae
mov
xor
lea
lea
pop
nop
sub
cmpl
int3
jge
and
xchg
pop
xchg
pusha
pop
mov
push
lock
push
cld
call
pop
je
subl
jb
in
push
sbb
lods
xchg
int
jnp
je
pushf
pop
pop
xchg
push
pop
out
inc
mov
jno
out
fnsave
out
sbb
xor
das
ret
mov
inc
xchg
xchg
popa
xchg
push
cli
push
sbb
pop
ds
cltd
ljmp
pusha
cmp
mov
sbb
push
push
xor
xchg
jp
lret
mov
out
sub
mov
push
int3
adc
fisttps
sti
cmp
dec
mov
xor
push
fsts
xlat
loope
mov
pop
and
push
cli
pusha
push
pop
in
mov
ss
fcoml
and
fidivrl
push
int
mov
mov
pusha
fidivs
out
or
xchg
mov
xchg
in
stos
mov
je
out
mov
push
push
push
rcrl
xor
pusha
cmpsl
mov
mov
pusha
cmp
jns
shrb
add
in
lahf
sub
ret
and
sahf
jae
mov
push
loope
icebp
sub
addr16
lock
dec
push
inc
sbb
loop
insb
cmp
xchg
inc
mov
mov
pop
jne
out
add
hlt
dec
idiv
jo
sub
std
addr16
xchg
test
addr16
or
xlat
add
in
adc
pushf
and
xor
popf
orb
sbb
es
mov
fwait
into
out
xchg
jns
out
test
sub
push
lea
sbb
in
push
xor
mov
xchg
mov
sahf
cmp
mov
scas
sub
xor
addr16
mov
mov
dec
js
mov
mov
rclb
adc
xchg
jne
jae
enter
push
pop
nop
jle
pop
test
add
rcll
mov
scas
mov
mov
hlt
mov
cwtl
rcr
xchg
adc
mov
mov
stc
cld
inc
jg
repnz
add
push
sub
rcl
xchg
jno
jo
fstl
push
push
call
cmp
in
mov
mov
dec
mov
mov
scas
pop
mov
cs
and
xor
clc
iret
mov
jecxz
add
sub
mov
mov
loop
sbb
cmc
inc
out
cmp
ret
fcoml
sahf
cmp
jne
mov
movsl
mov
out
loop
sbb
filds
mov
in
and
test
jmp
xchg
mov
mov
movsb
lock
insl
popa
repz
popf
aad
les
lods
fisttpll
add
fldcw
addb
pop
sbb
pop
cmp
adc
sub
dec
cmc
mov
or
pop
pop
lea
in
inc
movsb
xchg
cli
out
stos
add
push
outsb
push
into
shl
rorl
arpl
sbb
jl
jg
inc
ret
addl
dec
dec
adc
fwait
mov
cmpsl
fbstp
into
shll
xchg
ljmp
xchg
mov
addl
sub
mov
sahf
out
sahf
loop
and
outsb
jb
and
fidivrl
add
js
sbb
test
test
mov
jnp
mov
rclb
xor
mov
jge
cmp
mov
mov
iret
popf
daa
mov
inc
fmul
je
and
out
push
movsb
insb
addl
push
lods
js
in
imul
les
movsl
in
sti
adc
push
jl
daa
shlb
roll
mov
pop
je
jno
mov
fiaddl
mov
sub
mov
mov
out
addr16
popa
adc
jnp
je
push
cmp
sub
or
add
dec
loop
shrl
cmp
testb
hlt
stos
nop
jnp
aam
dec
rorb
pop
adc
imul
adc
mov
sub
push
hlt
and
fimull
testb
mov
push
and
insb
mov
or
mov
les
jl
bound
lret
iret
das
cs
jg
adc
push
mov
and
mov
cmp
cwtl
cmc
jecxz
sahf
test
scas
ljmp
rcll
or
ret
mov
dec
dec
sub
inc
dec
std
sbb
dec
dec
mov
shrb
decb
cmp
or
inc
lcall
and
adcb
mov
addr16
pop
sahf
pop
inc
in
subl
xchg
fstpl
out
or
test
and
rcll
icebp
or
mov
call
repnz
mov
or
inc
sbb
mov
ret
stc
cmp
mov
xor
push
sbb
mov
cli
lret
lods
aas
daa
inc
hlt
xchg
mov
cmpsb
sub
mov
dec
gs
sbb
mov
sbb
and
jne
fwait
push
aaa
mulb
dec
mov
xchg
aaa
js
sarl
jbe
adc
fsubrs
sub
je
inc
jle
inc
pusha
mov
fbstp
pusha
xchg
lret
xor
sbb
inc
or
repz
and
cmpsb
es
adc
xchg
fmul
imul
push
add
push
or
dec
ljmp
cmp
push
cld
ljmp
and
pusha
aad
leave
jge
mov
lods
adc
adc
sti
out
rclb
es
dec
mov
or
outsb
iret
popf
stc
insl
fdivrl
xchg
mov
push
xor
push
rcl
movb
ss
bound
inc
xor
push
pusha
imul
mov
leave
jmp
clc
repz
movsb
std
or
out
mov
mov
pop
int
fdiv
adc
lret
pop
jb
pop
inc
cmpl
cmp
jp
dec
pop
and
ljmp
pop
dec
add
test
xchg
loope
lcall
mov
hlt
sbb
test
lods
mov
sbb
shlb
push
push
and
push
imul
cwtl
test
icebp
or
imulb
xor
pop
aaa
cmpsb
pushf
call
mov
lret
add
and
cmpl
mov
push
pop
xor
arpl
stos
adc
addr16
mov
or
mov
xor
fucomi
xchg
pop
nop
xchg
adc
mov
xchg
push
adc
cmp
jno
in
inc
repnz
adcb
mov
pop
add
xor
sbb
dec
cwtl
insl
xchg
stc
adc
xchg
rcr
inc
xchg
push
inc
sub
push
push
mov
pop
mov
inc
jo
xor
dec
sub
arpl
cmp
or
xchg
adc
sti
xor
inc
cmp
mov
and
add
repnz
test
push
insb
in
movsl
sbb
pusha
xor
jmp
iret
push
loop
and
inc
mov
jle
ret
subb
pop
dec
and
xchg
push
rorl
pop
xor
andb
inc
pop
pop
loope
dec
inc
push
icebp
aaa
negl
sbb
movsl
or
mov
mov
sub
push
cltd
imul
xchg
popf
dec
data16
xor
mov
aad
mov
or
add
into
sbb
fwait
xchg
push
inc
mov
sti
addr16
pop
pop
insl
jmp
mov
mov
out
push
scas
lods
mov
xchg
xchg
inc
cmpsb
lret
xlat
pop
push
pusha
movsl
inc
sti
rclb
sub
out
pushf
shrb
mov
and
out
call
xchg
pop
lret
fildl
mov
dec
into
pop
inc
out
shrl
pop
shrl
push
js
les
jmp
imul
cmpsb
int3
test
loopne
mov
xchg
push
jecxz
into
push
movl
lret
xlat
stos
add
dec
cltd
pop
and
cltd
repz
jl
adc
leave
pop
pop
push
ret
add
aam
and
in
mov
imul
aam
jae
call
inc
pop
fwait
push
repz
xor
mov
inc
fs
pop
sarl
mov
xorl
icebp
fcmove
add
insl
xor
shll
push
sbb
sbb
mov
adc
lea
mov
dec
add
nop
xchg
push
mov
addl
pop
xchg
add
add
mov
dec
lds
adc
lahf
imul
xor
push
adc
push
cmp
pop
pop
xor
mov
movsl
mov
sbb
out
call
and
cmp
dec
sub
cmpb
rclb
fnstenv
xchg
lock
inc
jbe
lea
jmp
xor
mov
enter
push
leave
push
cmpsl
xorl
xchg
xor
jge
cmpsl
mov
adc
jo
scas
pop
popf
je
mov
loopne
neg
push
xor
ret
add
jge
sub
cmp
out
pop
or
stos
movsb
les
pushf
add
inc
lock
adc
mov
mov
xchg
aam
lret
movsb
sti
jnp
push
inc
lret
push
adc
pop
scas
and
sbb
or
in
mov
add
rclb
ljmp
pop
mov
cmp
les
sarb
pop
push
and
mov
sarb
aas
xor
fs
xchg
mov
shl
in
dec
jae
mov
mov
cmpsb
movsb
popa
sub
cmc
jmp
xchg
enter
loope
cmpsb
call
jae
sub
rcr
mov
sub
add
insl
andl
loop
jmp
out
adc
add
mov
inc
xor
sub
lahf
and
pop
fbld
jae,pn
imul
jle
jl
dec
pop
je
addr16
or
cmp
adc
jmp
inc
mov
adc
push
lods
pop
ljmp
insl
mov
nop
adcl
inc
movsl
xlat
popa
sub
xlat
fisubrl
adc
pop
adc
xchg
aam
movsl
fisubs
ljmp
jl
mov
ret
mul
in
notb
xor
push
ss
inc
lret
mov
cmpsb
rolb
mov
jecxz
jmp
or
clc
stos
test
popl
insb
adc
orl
xor
hlt
imul
cmp
loope
loopne
xor
rcll
ja
cmpsl
pop
push
add
enter
add
and
dec
outsl
jno
es
add
sub
fsubr
and
pop
xchg
mov
loope
jecxz
scas
scas
add
jmp
jae
mov
lea
out
cmp
std
cmp
push
and
and
inc
jmp
and
jge
popf
lock
inc
push
xchg
cmpsb
bound
mov
dec
dec
lock
xchg
inc
mov
add
fs
iret
test
jge
fwait
and
push
push
xor
aad
scas
push
int3
push
sar
into
insl
cmp
mov
aaa
lods
out
sub
dec
jecxz
push
push
mov
int
sub
jmp
lcall
cmp
mov
jae
repnz
and
ds
sbbl
cli
sbb
mov
inc
xor
cli
cli
lcall
jns
lret
xor
sub
mov
lret
popa
ret
jmp
lods
cmc
and
sub
orl
shll
movsl
repz
xchg
push
into
fimuls
or
sbb
jg
loope
sbb
add
mov
sbb
ret
xchg
insb
mov
jns
dec
xchg
mov
pop
mov
push
test
fisttpl
repz
fdiv
or
xchg
in
cmp
les
push
scas
js
adc
pop
cmc
mov
shr
mov
les
or
shlb
aaa
je
fdivrs
fsts
push
out
fidivrs
dec
dec
les
adc
inc
cmp
jns
inc
aam
cmp
icebp
jne
add
out
testb
xor
loope
mov
bsf
stos
xchg
bound
arpl
pop
push
mov
stos
std
movsl
loope
ds
loop
xchg
shlb
out
ljmp
les
xor
popa
sub
icebp
sub
push
je
les
pop
rcr
sahf
xchg
addr16
sbb
cltd
sti
sub
mov
nop
or
je
adc
push
sub
cmp
leave
cmc
out
jae
push
push
loopne
xchg
sahf
aaa
hlt
cmp
test
and
dec
test
das
and
movsl
sbb
test
xchg
aaa
push
mov
les
loope
pusha
repnz
aam
xchg
push
mov
sarb
outsl
in
lock
xor
dec
test
pop
and
push
popf
int3
pop
push
adc
mov
rcl
lcall
xchg
pop
push
sub
inc
sub
adc
enter
out
pop
jbe
xchg
mov
call
adc
mov
xor
push
push
push
test
rorb
outsl
out
cmp
mov
push
pop
andl
ja
aad
xchg
dec
imul
rorl
xor
je
lcall
jae
pop
aam
dec
mov
mov
xlat
mov
aas
std
xorb
add
xchg
daa
push
add
add
int
pop
push
pushf
addl
mov
fs
pop
mov
mov
pushw
pop
jl
dec
inc
fwait
push
clc
testl
adc
jne
adc
outsb
adc
xlat
sub
sub
jg
leave
nop
mov
lods
std
inc
dec
xor
fwait
and
mov
in
mov
mov
jle
test
popl
hlt
in
sub
fmull
std
mov
adc
add
pop
push
jnp
lahf
cs
jne
sub
int
rol
push
jl
dec
jecxz
ficoms
push
jge
xchg
dec
popa
or
insl
xchg
inc
mov
jbe
lods
dec
cwtl
xchg
pop
jecxz
push
adc
mov
fisubs
jl
xor
dec
sbb
repz
mov
add
jnp
lea
scas
shlb
mov
adc
repnz
pop
arpl
adc
xor
sub
int
sbb
ds
nop
lds
test
pop
cli
fsubl
pop
add
inc
jmp
add
xchg
sub
xor
aas
cmp
xlat
mov
ficoml
lret
adc
iret
cmp
mov
jmp
addr16
hlt
call
movsl
lds
inc
mov
aam
pop
orl
ljmp
je
add
jbe
sahf
fsubr
push
mov
ret
outsb
aam
fstl
add
in
pop
adc
imul
push
ret
dec
fcoml
push
jno
sub
mov
sub
and
dec
roll
in
or
push
call
out
es
and
or
dec
cmp
dec
lret
cld
push
scas
add
loopne
xchg
rep
sahf
outsl
xor
fisubs
movsl
loope
pop
xchg
mov
sub
sub
pop
out
jo
mov
sbb
mov
call
sti
mov
cwtl
pusha
sub
add
pop
std
or
imul
out
and
fisubs
sbb
out
sti
push
int
mov
add
adc
add
xor
dec
or
pop
cltd
mov
out
cmp
popl
insb
bswap
ret
jle
sahf
stos
xor
mov
mov
pop
push
in
ret
or
or
and
pop
adc
dec
cwtl
test
test
dec
jo
jle
jl
cmp
or
adc
push
jae
fidivrl
nop
add
fbld
aad
ret
sarb
lea
jmp
mov
and
and
pusha
xchg
sub
adc
mov
pop
push
push
stos
sub
push
les
sub
es
jp
cmp
repnz
sub
xorb
repz
xchg
insb
nop
xchg
lods
sarb
jbe
push
jecxz
mov
fildl
mov
mov
cmp
ja
test
and
mov
jbe
into
jbe
jno
sbb
jmp
aad
jge
test
lcall
mov
test
xor
mov
inc
inc
lret
sbb
pop
in
aad
mov
fiaddl
pmuludq
sub
xor
xchg
pop
pop
sbb
cmp
test
aam
js
sub
dec
push
lock
adc
popa
push
mov
inc
inc
mov
dec
pop
push
xchg
inc
pop
movsl
or
sub
mov
mov
cwtl
fnsave
das
pop
mov
sub
push
jmp
jecxz
dec
mov
cld
test
push
mov
iret
lcall
iret
test
pop
cmpl
cmpb
mov
icebp
mov
jne
push
mov
sti
loop
or
pusha
pop
jmp
push
inc
ss
mov
xchg
call
push
leave
rcr
jbe
pop
xor
dec
repnz
xor
mov
adc
xchg
test
adc
jnp
sub
loopne
jne
adc
js
loopne
jg
gs
test
mov
rol
fstpl
lock
jne
ficomps
inc
cmp
mov
aaa
mov
cld
mov
out
push
scas
xchg
xchg
mov
cltd
es
or
ret
ficoms
push
sub
fisttpl
out
cs
ret
cmp
mov
adc
std
add
loope
test
pushf
lods
xor
push
scas
popa
push
pop
xor
ficomps
xor
xlat
setp
push
daa
push
lea
gs
movsl
adc
cmpsb
sub
es
ss
stc
mov
aas
fildll
cs
popaw
mov
sbbb
pop
stos
xchg
xor
jbe
int3
or
xor
cld
mov
fimull
sbb
cmp
outsl
mov
sbb
fsubrl
xlat
leave
xchg
dec
mov
mov
scas
loop
jns
mov
or
add
pop
test
out
pop
insb
xchg
dec
rcll
jp
sub
stos
add
adc
stos
movsl
mov
jb
jb
cmp
push
jne
cmp
push
push
lods
mov
add
in
xchg
inc
std
add
inc
call
sbb
sarl
mov
mov
test
stos
jge
add
loop
cmp
fdivrs
mov
xor
lret
daa
pop
out
cld
mov
pop
mov
movsb
jle
loop
lret
dec
imul
int
mov
push
imul
popf
call
jmp
pop
adc
jno
or
aam
adc
call
mov
repz
test
mov
push
ja
push
js
dec
scas
lcall
lods
nop
cld
jae
sbb
std
add
insl
xor
mul
push
inc
sbb
xchg
lock
outsl
push
jo
cwtl
cmc
lahf
rcll
jge
cld
add
dec
mov
adc
movsl
ljmp
mov
int
cmp
pushf
int
jnp
cmp
push
pop
mov
dec
scas
mov
inc
jge
or
fs
mov
addr16
nop
push
cmpsl
push
iret
out
jle
adc
push
adc
nop
pop
add
das
jecxz
rcrl
pop
cmp
mull
cmc
mov
adc
mov
shlb
movl
mov
out
shrl
es
cmp
add
leave
pop
mov
out
shlb
sub
repz
mov
inc
dec
testb
jmp
in
sbb
adc
aaa
sbbl
or
ljmp
enter
push
cmp
and
pop
pop
testl
mov
repnz
pop
and
mov
jns
sbb
and
andl
fldl
adc
icebp
mov
mov
push
mov
adc
mov
leave
jmp
cmp
jbe
sarb
push
jno
adc
dec
jmp
addr16
sbb
mov
and
std
mov
mov
loopne
fmuls
jmp
adc
incb
push
into
mov
pop
push
lods
mov
mov
adc
sub
inc
ja
mov
and
cmp
mov
push
fistpll
or
es
int3
xchg
cli
fldt
push
in
inc
fisubrs
mov
mov
insl
cmp
adc
jmp
out
or
mov
out
scas
dec
mov
clc
call
cmpsb
nop
data16
dec
inc
add
int3
mov
gs
in
sub
cld
cmp
mov
fidivrs
ret
outsb
mov
negb
mov
scas
add
add
sub
lods
negb
mov
sahf
push
loop
cmp
out
xchg
adc
mov
add
inc
pop
mov
cli
addl
mov
lock
jne
sub
out
and
mov
ja
divb
xor
xlat
ljmp
or
jge
jecxz
jg
dec
aas
mov
or
test
dec
mov
cmp
inc
fnstenv
clc
js
pop
xchg
xor
cmpsl
pushf
push
xor
movsl
or
repz
dec
das
sar
jne
scas
xchg
xchg
sbb
lea
cmp
nop
ss
push
and
cli
pusha
mov
leave
xor
mov
jnp
dec
out
push
inc
bnd
icebp
xchg
sbb
ret
pop
xchg
or
les
adc
popl
mov
jae
xchg
pop
lret
fcoml
outsl
jbe
call
adc
out
push
popf
test
pop
dec
fsubs
int3
and
xchg
jecxz
stc
ret
jne
sbbl
pop
jmp
push
je
dec
sti
sbb
sbb
test
jno
repz
mov
and
xor
in
mov
fimuls
xor
pop
and
adc
test
insl
adc
mov
cs
gs
dec
mov
int3
xor
lret
rolb
bound
arpl
mov
outsl
or
orl
sahf
and
push
or
je
dec
in
in
sarb
js
sti
mov
push
rdpmc
inc
fdivl
adc
aaa
jno
mov
lahf
pusha
test
xor
mov
adc
insb
out
outsl
inc
fwait
and
flds
pop
cmp
pop
push
xchg
dec
mov
xor
push
xor
stos
inc
push
roll
sbb
cmp
clc
sub
push
in
lcall
andl
lret
out
cwtl
add
test
xchg
enter
scas
mov
pop
cmp
adc
add
jmp
mov
testl
xchg
clc
das
pop
xchg
test
dec
mov
xor
add
ret
mov
pop
sbb
shll
sub
sub
cs
fstps
movsb
mov
rcrb
into
jmp
hlt
mov
pop
sar
pop
out
movsb
jb
lret
aad
das
sbb
jb
sbb
dec
nop
mov
in
cmpsl
sbb
xor
dec
mov
lds
loop
enter
adc
sbb
xor
adc
lock
cmpsb
ja
loop
aad
add
int3
mov
sbb
aam
jge
nop
xor
scas
cmpb
xchg
sbb
addr16
xchg
cmp
jo
push
mov
dec
jnp
mov
test
and
adc
dec
jne,pn
cli
inc
stc
or
xorl
adc
inc
sbb
lret
int
adc
lahf
pop
std
sub
test
xor
incb
stos
sti
xor
add
clc
xor
inc
or
mov
jb
aas
mov
or
jg
test
aam
pop
addr16
mov
out
js
sbb
les
adc
xlat
std
or
xor
cmp
dec
nop
adc
pusha
push
dec
test
inc
enter
fcmove
mov
mov
es
clc
xchg
xchg
hlt
shll
fstps
add
xor
cmp
jle
loopne
mov
mov
xchg
and
filds
bound
addr16
pop
testb
dec
add
daa
add
sub
das
lahf
mov
push
insb
xchg
int3
push
adc
push
stos
xor
dec
cmp
cmpsb
mov
push
jbe
loope
jo
in
xchg
push
cmpsb
or
mov
int3
test
dec
scas
ds
jno
and
les
in
sub
aad
aas
jmp
stos
out
test
mov
sbb
mov
fdivrl
aas
mov
dec
cli
std
shrl
push
push
pop
ljmp
mov
jp
push
xorl
add
insl
xchg
adc
mov
test
jp
mov
cmpsl
mov
test
je
xchg
xchg
pop
xor
mov
call
sbb
fmuls
insl
and
pop
popa
test
push
sbb
sub
cs
jle
aaa
lods
pop
test
inc
xchg
inc
fs
push
sahf
and
cli
call
inc
adc
or
xor
fprem1
pop
rcll
stos
jnp
jne
bound
adc
outsl
pop
push
movl
sbb
push
sti
rcrb
cmp
add
imul
stos
repz
mov
adc
dec
mov
sbb
lret
test
pop
pop
adc
enter
push
mov
xchg
pushf
fbstp
sbb
rorb
fisubs
jl
test
cmp
adc
jl
loopne
push
in
xor
mov
in
mov
inc
ljmp
imul
pop
mov
push
push
stc
das
sbbl
mov
out
sub
repnz
mov
pop
pop
jae
ljmp
aaa
mov
loope
popf
sarl
fnstsw
mov
cmp
ret
ret
in
cmp
out
push
pop
pop
inc
push
faddl
mov
dec
sub
sarb
cmp
mov
push
push
std
cmp
pop
sbb
lods
sar
nop
ljmp
gs
shrb
xor
les
mov
rorl
sbb
mov
dec
loop
xchg
scas
mov
mov
sbb
add
jo
fs
fxch
cmp
lods
scas
xchg
mov
ja
mov
mov
adc
mov
mov
outsl
push
inc
push
cmp
xchg
add
loope
or
repz
pop
mov
push
aad
push
xor
sub
gs
mov
movsl
mov
lahf
fistps
stc
sub
sub
cmp
addr16
xchg
in
push
int
mov
jnp
jnp
loop
pop
fidivl
mov
xchg
and
fdivs
mov
shlb
test
dec
jge
mov
cltd
out
mov
push
mov
fadd
sbb
pop
imul
xor
jmp
popf
mov
mov
mov
sub
into
dec
dec
push
jle
repz
lret
or
mov
pop
adc
mov
faddp
sbb
xor
pop
cmp
in
or
jge
sub
push
daa
int3
loopne
test
fstpt
and
jno
pop
mov
mov
xlat
int3
das
lcall
mov
sar
dec
nop
fisubs
sub
testl
cmp
sarb
mov
int
pop
sbb
pop
test
shll
pop
dec
inc
add
xchg
or
inc
test
lahf
dec
popf
popf
in
test
int
jae
movsb
or
fmull
dec
sbb
and
in
sti
push
lret
shlb
lods
push
arpl
and
adc
inc
pop
inc
mov
test
test
dec
clc
mov
adc
or
daa
and
mov
fs
jne
lea
push
push
leave
adcb
fisubl
imulb
aas
jae
sub
sub
mov
shlb
xchg
test
sbb
icebp
popa
inc
jl
hlt
scas
cmpsl
sub
cmp
into
mov
mov
das
pop
imul
lcall
insl
cmp
mov
ja
popf
lds
cmpsb
andb
mov
es
inc
enter
dec
popa
mov
int3
ds
out
xchg
dec
and
add
push
sbb
rcrb
mov
jg
xchg
mov
lret
sbb
jns
dec
inc
das
push
mov
pop
fwait
cwtl
mov
fldt
jl
int
enter
insb
icebp
adc
or
in
daa
mov
pop
and
testb
notb
stos
dec
xchg
sub
xchg
popf
inc
xchg
subl
pop
cmpsb
call
or
shll
cmp
cmp
test
dec
cld
jg
dec
jp
or
loop
mov
mov
es
or
dec
lods
lcall
adc
ret
pop
mov
jae
clc
pop
cmpsl
out
sbb
add
mov
stc
push
sub
xchg
test
popf
xchg
pop
push
push
popa
cmp
push
mov
lahf
and
jne
mov
push
fcmovnu
lods
test
pop
push
out
imul
xor
inc
outsb
push
xor
lret
pop
outsb
sbb
sub
outsl
aam
ljmp
in
pusha
cltd
aam
cmc
rcll
aas
outsb
sahf
sbb
cmpsl
jmp
mov
xor
roll
sub
scas
lods
pusha
pop
mov
pop
dec
xor
fs
out
push
mov
les
inc
xor
setne
jno
stc
push
ss
mov
mov
push
xor
inc
in
filds
movsb
mov
xor
adc
lds
adc
mov
cmpsl
loope
fildl
and
scas
and
cld
adc
dec
aam
sub
inc
cmp
mov
mov
test
divb
in
fbld
imul
xchg
mov
in
pop
push
cli
jae
jno
lock
ret
data16
add
mov
adc
jl
scas
adc
in
sbb
add
push
divl
mov
mov
mov
popa
pop
dec
pop
jle
fldl
test
xorl
in
les
jge
faddl
leave
mov
inc
ja
popf
cmpsb
aas
pop
mov
mov
xorl
xchg
cltd
add
push
jbe
mov
add
jns
repnz
sub
pusha
out
xor
jp
mov
inc
mov
sub
mov
pop
mov
sbb
xchg
pop
outsb
repnz
sbb
cltd
inc
inc
mov
rolb
sbb
xchg
cld
aam
jno
jnp
cmpsb
mov
pop
into
sub
rcl
ret
scas
mov
mov
xor
jbe
leave
sbb
dec
les
ror
xlat
fcmovnb
arpl
rcrl
xorl
hlt
lcall
mov
push
adc
mov
sub
sarb
fwait
cmp
mov
int
inc
push
adc
insb
cli
int
pop
pop
aad
add
sbb
mov
cwtl
orl
cmp
pop
rclb
jle
lods
adc
cwtl
fimuls
push
lea
mov
xor
inc
pusha
inc
inc
push
mov
testb
and
repnz
imul
xor
dec
daa
pop
test
xchg
push
pop
lds
pop
cwtl
aaa
jbe
arpl
mov
fwait
cmp
dec
mov
jnp
mov
outsl
adc
sbb
das
mov
inc
push
lcall
pop
aam
xchg
repnz
push
and
xor
mov
cmc
ficomps
into
loopne
xchg
dec
push
hlt
aam
xchg
lods
sti
fildl
jns
push
pop
dec
gs
stos
mov
sbb
nop
ret
data16
push
in
sbb
inc
and
mov
or
stos
mov
push
pxor
enter
icebp
stos
sbb
dec
je
insl
nop
out
scas
ret
add
loopne
xor
adc
mov
jbe
es
cli
std
nop
lds
push
jno
fisubl
pushf
jns
dec
stos
inc
xor
rcl
stc
sub
mov
cmp
rclb
jl
mov
jb
mov
mov
jmp
mov
push
inc
movsb
jae
lods
ljmp
dec
cmpsb
icebp
xchg
daa
push
mov
ljmp
notl
fidivrl
mov
cltd
or
sbb
add
inc
cmpl
jg
cmp
adc
and
xchg
cli
enter
ja
bndldx
xchg
inc
popa
insl
fst
pop
in
ss
dec
inc
dec
and
incl
xlat
call
test
iret
and
push
cli
lahf
aam
sub
int3
decb
iret
into
sarb
inc
jbe
or
mov
adc
xchg
xor
aas
iret
out
cmc
jmp
xchg
imul
pop
fadd
add
sbb
mov
mov
xchg
pop
shrb
jb
inc
sbb
mov
or
pop
mov
fbstp
jecxz
inc
fidivl
nop
sub
das
mov
out
aad
pop
jnp
mov
outsb
and
daa
mov
jne
pop
jnp
mov
or
addr16
sub
dec
leave
popa
shl
aaa
rclb
dec
inc
jge
stos
lcall
mov
xor
cli
add
pop
mov
xor
arpl
cli
push
push
push
mov
jl
insl
xchg
pop
mov
stc
imulb
push
cmp
test
clc
mov
xchg
add
push
insb
rclb
rcll
ret
or
inc
cmp
mov
out
jno
jmp
adc
xor
aas
test
movsl
cwtl
icebp
sub
mov
aas
mov
lds
imul
sbb
rcl
scas
test
xchg
xchg
mov
and
es
xor
xor
es
jle
cmp
sub
dec
add
out
add
pop
ficoms
cmp
push
inc
sbb
mov
fwait
insb
ret
adc
mov
xchg
mov
mov
movb
outsl
mov
mov
aad
mov
ja
subb
data16
jmp
inc
shll
sbb
mov
call
add
add
jne
and
movsl
out
movnti
in
mov
aas
sbb
dec
loope
cmpsl
lahf
in
cwtl
daa
pop
mov
xor
mov
iret
fdivrs
add
xchg
rorb
jno
pop
shl
daa
mov
and
aam
adc
out
sub
push
imul
xor
ret
icebp
inc
test
pop
inc
xchg
sbb
call
sub
test
push
aaa
mov
mov
dec
or
fdivs
add
jmp
xor
cmp
movsl
sub
xchg
int3
and
outsl
jge
aaa
cmpb
and
sbb
das
testb
test
pusha
mov
xchg
inc
scas
es
jnp
shl
mov
mov
cmp
and
jns
daa
pop
pop
fnsave
push
push
imul
jnp
xchg
incb
xor
js
or
adc
mov
data16
jns
insb
in
cld
add
and
xor
jo
int3
mov
js
xor
jne
push
pop
fcoml
insb
pusha
daa
sbb
aam
shlb
out
mov
mov
xor
sbb
add
pop
sti
roll
arpl
ds
mov
or
push
mov
adc
into
add
xchg
jg
fadd
push
movsb
pop
adc
into
fidivrs
or
mov
pusha
es
mov
mov
xchg
mov
cld
inc
out
sbb
pop
push
pcmpeqb
push
out
lds
test
xchg
and
pop
add
mov
scas
jbe
jbe
xchg
push
add
cmp
xchg
adc
push
and
xchg
push
testl
dec
lock
arpl
ret
xchg
adc
xor
pusha
cmpsb
add
shl
in
lods
sbb
mov
push
movsl
add
mov
bound
inc
push
mov
jge
out
sub
mov
jne
imul
cmp
test
inc
shlb
cmp
out
insb
xor
adc
xchg
mov
adc
dec
or
and
xor
mul
lock
jmp
rol
outsl
and
test
push
or
add
cmp
dec
jbe
fisubs
cmp
xchg
gs
cwtl
cmc
sub
sub
fnstsw
aam
sbb
jno
or
xor
leave
dec
sti
jno
push
lea
ficoms
loop
in
arpl
and
addb
rclb
and
cmp
lret
in
push
lock
movsb
lock
ror
xchg
hlt
sub
dec
adc
and
and
data16
inc
incb
jp
xor
cmp
cmpsb
adc
call
test
jne
xchg
add
add
cmp
into
dec
hlt
jbe
movzwl
adc
and
into
out
jmp
add
call
sahf
dec
adc
es
dec
into
or
sbb
jae
popa
rorl
mov
dec
xor
jnp
cmp
test
in
pop
cld
ds
mov
jg
int
adc
rcll
sahf
xchg
mov
inc
ret
gs
push
mov
xrelease
cmp
stos
jg
jnp
sbb
outsl
stos
and
out
ja
cmp
js
into
out
ficoml
cmp
mov
ret
dec
pop
pushf
in
jns
ficompl
imul
les
arpl
movsw
or
stos
push
push
xchg
add
push
xchg
stos
pusha
sbb
or
ficompl
ljmp
data16
mul
popf
inc
test
pop
fbld
lods
fidivrl
jbe
xchg
js
enter
bound
and
popa
sbb
ret
sbb
mov
pop
scas
lods
bound
out
lock
push
cmp
lahf
inc
pushf
das
lods
movb
insl
or
jae
mov
mov
mov
out
loop
pop
iret
mov
sti
sub
insb
shll
popa
fidivs
bswap
push
je
jae
cmpsl
xor
test
jb
jbe
cmp
loop
mov
xor
lcall
cmp
test
xchg
cmpl
add
jno
sbb
mov
push
lods
jbe
je
adc
repnz
pop
mov
filds
pop
daa
jnp
lcall
out
jg
cs
xor
mov
mov
out
dec
push
sbb
pusha
sub
cmpsl
xor
inc
cmp
gs
or
xchg
shlb
mov
fnstcw
adc
and
xor
jnp
jo
mov
sbb
rclb
outsl
das
xchg
addb
int3
les
daa
call
sub
shrl
call
out
shlb
js
jae
jns
xlat
test
push
sahf
repnz
das
lds
repz
rcl
mov
outsb
xchg
xadd
pop
add
sarl
aad
xlat
xlat
enter
xor
fmull
stos
add
repnz
jl
push
std
scas
mov
in
pop
shlb
lret
xchg
test
xor
test
pusha
popf
cwtl
daa
sbb
cmp
add
xchg
sub
and
cmp
cs
bound
test
cmpsb
popa
repz
sub
sbbb
xchg
das
mov
vgetmantps
out
sbb
les
ret
sbb
dec
inc
mov
cmp
inc
mov
and
xchg
adcb
dec
imul
dec
mov
jg
adcb
inc
je
mov
pop
mov
sahf
ljmp
test
pop
mov
insl
mov
div
lods
and
imul
fnstsw
mov
ljmp
or
mov
sbb
insb
xchg
push
rcrb
scas
jle
cmpsl
das
cwtl
and
repnz
push
int
xor
dec
outsl
sahf
jmp
push
mov
xor
push
lahf
cmpsl
jp
inc
ljmp
jmp
push
lock
mov
sbb
pop
aas
jo
imul
mov
push
popa
mov
sbb
fstps
and
scas
or
shrl
fwait
push
int3
cmc
sub
insb
std
xchg
neg
daa
cmp
sbb
out
dec
or
xchg
dec
jb
or
pop
sbb
xor
push
cwtl
test
shrb
mov
push
gs
fdivrl
or
out
add
jns
mov
repnz
std
pop
push
xor
gs
sub
xor
sbb
repnz
push
rol
add
xchg
jmp
pop
mov
xor
jns
push
mov
sub
js
push
sbb
and
leave
popfw
ss
dec
jg
push
push
jge
loopne
fsts
shrl
xor
sbbl
outsb
mov
arpl
jo
in
jo
jbe
neg
adc
movb
out
or
loopne
add
stos
loope
pop
mov
and
insb
and
push
sarb
aam
pusha
sahf
movsl
int
cmc
xchg
push
add
xlat
lods
cmp
stc
testb
sahf
jns
mov
in
mov
and
jno
arpl
inc
cmpsb
jb
add
sub
jge
xchg
dec
jp
mov
sbb
cli
ss
xlat
push
xchg
ret
mov
dec
push
adc
cmc
clc
lahf
add
add
lea
call
xchg
cmp
and
xor
nop
inc
adc
add
sub
sbb
lcall
jge
movsl
fistpl
loop
mov
sub
adc
mov
inc
stc
xor
and
xorb
inc
cmp
data16
sti
stos
mov
xor
jno
test
jne
subw
test
fsubr
ret
mov
xor
stc
push
test
and
outsl
aas
in
mov
aad
adcl
rcl
jp
mov
fwait
mov
add
pop
test
xchg
ja
pop
mov
daa
jecxz
jmp
imul
ret
mov
loopne
movsl
xchg
insl
xchg
pop
inc
shrb
sbb
and
sahf
mov
ljmp
sbb
andl
sub
dec
pop
pushf
insb
out
mov
or
std
lds
cmp
mov
outsl
lahf
add
fstpt
and
sbb
fdivrs
nop
out
adc
inc
xchg
jecxz
xchg
ror
cwtl
int
mov
je
push
clc
out
xchg
adc
arpl
xchg
push
mov
jbe
xor
xor
inc
nop
dec
push
mov
or
shrb
pop
push
push
insb
pop
arpl
dec
aas
in
and
aad
inc
je
push
jb
int3
movsb
pop
xchg
fistpl
cmp
es
mov
dec
mov
addr16
mov
popa
jne
aam
divl
in
dec
mov
pop
xor
lock
push
xor
pop
push
ja
das
jb
in
dec
mul
sbb
mov
mov
shll
enter
idivl
negl
cwtl
inc
and
int3
mov
int3
sbbl
sbb
or
add
fs
push
fistpll
shll
gs
fistpll
popa
lret
dec
dec
sbb
push
insl
xchg
ja
push
cmp
push
cs
popa
cmc
mov
sahf
ljmp
ja
and
jp
loop
mov
mov
and
xorb
ljmp
fisubs
push
push
cmp
in
in
jns
sbb
lahf
pusha
repnz
cmp
call
mov
dec
pop
push
call
cmp
cmp
loopne
fcomps
xor
test
push
pop
pop
fstp
not
or
clc
pop
shr
push
jb
inc
pop
outsb
fsubrs
insl
hlt
and
pop
cmp
xchg
add
xor
push
cmp
mov
push
or
ss
push
out
pop
xchg
mov
outsl
fisubl
mov
push
dec
daa
scas
aam
add
popa
xor
dec
adc
cmp
lret
add
stos
sub
call
lock
frstor
and
add
jp
cmp
int3
gs
xchg
sub
xor
test
cltd
mov
rcl
xor
mov
mov
mov
mov
adc
clc
mov
and
fwait
cld
cmp
movsb
lret
push
inc
push
ds
stos
das
push
cltd
mov
dec
mov
js
mov
add
sahf
sub
push
jns
add
je
inc
cmp
sbb
lahf
and
xchg
inc
add
xchg
lret
mov
fcmovnbe
bound
rolb
or
pushf
jmp
jecxz
mov
test
ret
pop
xchg
jo
mov
mov
aaa
dec
mov
xchg
mov
pop
popa
fidivs
hlt
outsl
lods
add
stos
jno
clc
cmpsb
push
aad
push
pusha
inc
mov
fists
aaa
loope
movsl
lret
gs
inc
mov
xor
stos
push
int
repz
mov
xchg
mov
insl
sub
push
shr
nop
cmp
inc
sbb
pusha
enter
mov
sti
inc
sbb
clc
pop
stos
je
and
xor
pop
dec
inc
adc
sub
fisubl
cmp
scas
sbb
cmp
xchg
loope
jno
push
push
stc
sahf
shrb
ret
mov
lods
movsb
cwtl
xor
loop
sub
mov
je
inc
push
mov
jp
daa
jne
xchg
sub
push
mov
jmp
enter
aam
or
push
sub
lret
outsb
cld
add
stos
or
add
ficoms
es
je
loop
lods
je
pop
mov
xchg
xchg
insb
sub
movsl
xor
xor
sbbb
cmp
sub
adc
xchg
fs
aam
roll
sbb
sbb
xor
test
js
in
lock
sub
mov
cmpsb
mov
nop
adc
jmp
or
mov
dec
cld
dec
shrl
push
iret
mov
push
cltd
push
dec
cmpsl
jp
xor
push
clc
cmc
xor
icebp
mov
aas
jno
xchg
fcompl
fldl
push
mov
mov
xor
pop
dec
neg
xlat
lods
pop
fisubs
pop
push
and
inc
cmp
dec
add
inc
mov
mov
adc
arpl
sbb
or
pop
imul
inc
adc
xor
adc
lea
inc
sti
adc
jmp
and
daa
and
outsb
xor
mov
add
inc
mov
mov
cld
jl
xor
les
dec
out
adc
mov
fsts
add
mov
outsb
lahf
cs
jnp
mov
imul
and
jbe
cmp
jno
sub
push
dec
icebp
xchg
rolb
xchg
imul
mov
xchg
pushf
dec
movsb
loopne
pop
ja
cmp
mov
in
adc
faddl
popf
xor
xor
fdecstp
cltd
orb
pusha
pop
mov
mov
add
int
movsb
daa
mov
clc
pop
dec
jmp
enter
sub
mov
and
pop
jns
jb
sbb
cmp
xor
mov
sub
inc
dec
int3
cmp
shrw
mov
mov
ds
or
fldenv
jg
lods
fcmovbe
ja
dec
aas
add
mov
jb
repnz
call
dec
lods
xchg
adc
add
ret
jmp
bound
dec
lcall
popa
pop
loopne
mov
lahf
sbb
pop
ljmp
cmp
scas
jb
lds
jmp
into
std
cmp
stos
jo
in
loopne
xchg
sbb
loopne
add
or
addr16
push
aas
ficompl
int3
mov
mov
and
dec
lods
sbb
fcoms
stos
jle
loopne
jmp
push
pop
scas
jbe
and
pusha
testb
mov
jmp
ds
lea
into
sbb
xchg
inc
inc
outsl
jp
in
sbb
sbb
inc
fdivs
out
inc
arpl
enter
aaa
and
pushf
scas
pop
mov
jo
sub
dec
es
popf
fs
jg
lcall
out
rorl
and
xchg
out
call
sbb
incl
gs
xor
adc
roll
sbb
mov
cli
push
push
mov
scas
movsl
xor
jae
rolb
jmp
mov
mov
sar
loop
dec
dec
mov
and
sub
push
or
add
xchg
jmp
xor
pushl
adc
push
mov
or
push
adc
add
hlt
sub
mov
push
ds
popa
sbb
sbb
int
loope
jge
lods
add
enter
movsb
cwtl
or
sbb
mov
mov
fbld
sub
xorl
sub
shl
mov
aam
ljmp
dec
or
pushf
pusha
dec
or
in
enter
stos
ficoms
xor
jge,pt
jp
push
xchg
jecxz
clc
pop
sbb
lods
jmp
rorb
sub
stos
sarl
popf
paddusb
mov
imul
add
insl
sti
js
call
jb
mov
xor
pop
rolb
mul
rcll
pusha
pop
lret
adc
mov
jne
inc
mov
test
sub
xchg
out
scas
jne
adc
or
jae
stos
adc
mov
inc
mov
jecxz
push
test
in
push
fs
jae
pop
in
mov
sub
push
aam
xlat
pushf
addr16
xor
dec
test
adc
inc
movsl
dec
fs
pop
popf
imul
lcall
add
sub
insl
pop
fldt
add
cmp
adc
sub
sbb
push
shrl
lds
mov
sbb
jae
mov
pop
and
in
rorl
imul
pop
movsb
fcoms
ret
nop
sub
sbb
mov
in
sbb
nop
sarl
fs
push
cmpsb
jl
popl
inc
idivl
adc
inc
lock
loopne
das
loop
fwait
xchg
push
xor
jge
arpl
pusha
mov
sub
ret
mov
repz
sbb
loop
jns
call
es
ds
filds
sub
inc
ret
add
mov
nop
jl
lea
das
test
push
dec
dec
jp
and
popa
clc
and
movsb
mov
movsl
lcall
jo
push
ds
loope
inc
inc
fnstenv
ds
cmp
cld
mov
popf
mov
addr16
fcoml
ja
nop
testl
les
ficoml
ret
jne
mov
cmpsb
xor
jge
inc
and
jmp
and
and
mov
sbb
pop
push
sub
gs
jbe
clc
scas
pop
gs
data16
ja
out
pushf
xor
xchg
cmp
nop
repz
in
aas
stc
js
fwait
in
cltd
and
jb
jae
cmc
dec
jns
inc
push
sbb
cli
sti
int
jne
jmp
fwait
lcall
ret
sub
adc
in
stos
xor
mov
lock
fildl
pop
shl
clc
mov
in
or
xchg
arpl
dec
lea
mov
push
cmp
sahf
sub
sub
imull
ljmp
xchg
cmp
imul
xchg
es
je
xchg
sbb
push
mov
into
pop
adc
subb
mull
mov
jbe
mov
mov
roll
das
mov
pop
jge
fbld
mov
mov
sahf
sbb
xchg
rclb
mov
mov
jl
loop
jae
xchg
pop
push
int
movsb
dec
cmp
xchg
mov
dec
ljmp
pusha
push
add
ret
pop
and
pop
fstpt
mov
xlat
inc
and
js
or
inc
mov
push
mov
dec
arpl
pop
xor
add
mov
add
data16
xchg
mov
pop
sub
ja
lret
sahf
push
push
jg
xor
inc
sbb
sbb
daa
mov
ret
ror
mov
clc
mov
add
mov
iret
inc
dec
cmp
in
cmp
mov
push
dec
mov
dec
ds
xor
mov
sahf
cmp
outsb
cmp
mov
or
sahf
das
mov
addr16
sbb
mov
push
imul
rcl
es
pop
or
xor
pop
movsb
mov
push
adc
mov
or
clc
mov
xor
mov
push
adc
je
dec
push
inc
xor
les
addl
fisubl
stos
jle
cmp
xchg
call
imul
add
push
pop
inc
pop
or
push
push
mov
andl
xchg
add
add
inc
int
cli
dec
in
sbb
fildll
cs
lock
pop
lret
mov
push
hlt
xchg
std
lds
sahf
adc
add
or
int3
cmp
nop
jmp
pushl
aaa
push
mov
mov
mov
or
and
sub
subl
cmpsb
pop
adc
push
or
scas
rclb
dec
add
jmp
xchg
cwtl
xchg
push
sbb
shrl
in
stos
cwtl
lods
roll
dec
int3
jae
and
fidivrs
inc
dec
ljmp
mov
into
xchg
xchg
shll
ret
sbb
push
xchg
into
mov
mov
ljmp
jg
mov
add
loope
fcmovb
repz
jg
dec
das
push
push
lods
in
movsl
dec
cmp
cwtl
mov
push
movsb
sub
mov
imul
jge
mov
jl
out
fldl
cmp
aaa
cmpl
std
shrb
mov
nop
cmpsl
mov
icebp
xchg
cltd
add
aad
sub
mov
mov
mov
outsb
sarl
sub
xchg
addr16
push
ja
xchg
push
scas
inc
pusha
adc
inc
lret
es
ljmp
repnz
cmc
pop
cmc
addl
or
lret
push
movsl
inc
in
enter
fdivrl
mov
pop
mov
push
sbb
daa
sbb
sbb
xor
adc
add
or
sbb
leave
adc
cmpl
int3
data16
mov
mov
dec
adc
sub
mov
jmp
dec
push
dec
popa
pusha
clc
cmpsl
jp
jnp
add
xchg
or
xor
cmp
pop
pop
mov
push
in
popf
jo
out
sub
cmc
test
adc
push
test
and
scas
ret
mull
adc
mov
inc
lcall
jo
inc
mov
adc
popa
mov
push
pop
mov
aas
cmpsb
jns
or
jp
cwtl
and
aas
je
adc
dec
xlat
scas
sbb
mov
mov
jb
adc
stos
sbb
dec
add
cmp
call
movsb
rcrl
or
cmpsl
fwait
jmp
aad
sbb
shll
insl
sbbb
daa
int3
outsb
sub
in
mov
sbb
push
pop
cmpb
add
imul
js
jne
dec
pop
mov
gs
cmpsl
andl
push
xchg
in
pop
mov
mov
jl
jl
push
rcll
int
sbb
fbstp
clc
into
sub
and
adc
jae
shlb
cld
aam
push
lods
lret
push
push
sub
rcrb
int3
mov
cwtl
sub
stos
mov
inc
imul
dec
ja
es
incl
out
dec
mov
mov
repnz
adc
subb
in
mov
test
in
mov
adc
les
dec
push
cmp
mov
mov
aam
push
mov
pop
pop
lahf
jbe
push
int
ja
loope
adc
ret
xchg
int
xor
mov
jmp
push
fistpll
ljmp
xchg
add
insb
xchg
loopne
mov
les
iret
das
psubsb
sbb
jbe
sub
movsl
sti
imul
sbb
sub
mov
mov
outsl
mov
adc
push
and
ss
scas
jmp
or
push
xorl
stc
fildll
jp
mov
dec
inc
jnp
hlt
xor
out
xchg
mov
jae
cmp
or
aas
xor
lcall
and
addb
jecxz
in
hlt
out
jp
push
jmp
push
aaa
out
sti
mov
xor
mov
fisttps
lret
and
insb
int
lds
sbb
jno
lods
pop
insb
xchg
inc
test
pop
mov
jp
inc
repz
insl
adc
shl
hlt
les
ss
push
mov
xchg
push
or
loopne
addr16
sub
mov
xor
xchg
in
jno
xor
int
mov
mov
cmpl
dec
pop
cld
sbb
mov
push
enter
je
in
imul
dec
ffreep
sub
lock
mov
mov
push
inc
dec
hlt
xor
xchg
ds
pusha
inc
scas
idiv
fidivs
enter
test
lock
push
fists
jns
jge
xor
mov
lods
dec
and
add
fcoms
lret
add
jecxz
ss
sbb
scas
push
sub
inc
popf
jle
xlat
and
xor
adc
sarl
mov
mov
adc
dec
inc
scas
dec
push
cmp
ficomps
aam
sub
mov
in
jg
adc
imulb
fiadds
push
sub
dec
idiv
xor
je
or
push
repz
dec
adc
push
outsl
movsl
pop
test
jne
dec
push
push
repz
and
mov
sti
pop
inc
movq
xor
mov
out
je
imul
adc
jmp
mov
mov
ret
out
scas
and
cli
jle
mov
jmp
dec
jb
lds
or
add
sbb
je
xor
inc
xor
push
dec
pop
jecxz
mov
mov
lock
push
sbb
pop
inc
fstpt
dec
pusha
out
xorl
sub
imul
mov
or
mov
mov
ljmp
out
push
sbb
inc
push
sarl
dec
and
fwait
pop
fsin
mov
cmpsb
or
inc
loop
jbe
add
ljmp
jae
out
mov
in
mov
lahf
ds
pop
lods
xor
and
mov
sub
xchg
imul
mov
ret
and
mov
push
cld
push
cmp
ret
inc
mov
adc
mov
andl
push
and
jecxz
orb
out
call
push
es
pop
scas
sbb
out
cwtl
push
xchg
cmp
pop
mov
mov
loope
test
mov
and
int
popf
add
loopne
xlat
adc
sub
ja
push
xchg
xor
add
inc
dec
jae
and
ljmp
out
aad
sub
jno
cli
cmpsb
sbb
inc
rorl
cmpsb
pop
push
dec
je
jmp
movsl
mov
mov
fsubs
add
dec
pop
pop
imul
popa
ja
bound
out
pop
push
enter
mov
popf
pop
mov
out
lcall
loopne
clc
int3
lods
popf
es
xchg
xor
sahf
pop
push
aas
push
mov
int
fbld
add
cmc
lret
xor
dec
int
repnz
push
cmc
imul
or
lods
xchg
fld
pop
adc
movsb
jno
jne
xor
jne
mov
add
pop
test
xchg
repnz
cmpsb
test
cmp
mov
sbb
sub
pop
lds
sbb
dec
loopne
je
or
pusha
inc
std
movsb
sbb
push
ror
lahf
add
fnstcw
xchg
fnstsw
push
fidivrl
mov
xlat
out
test
push
stc
pop
mov
in
xchg
xchg
out
inc
mov
xchg
cmpsl
xchg
sti
das
addb
and
pop
push
rcrb
ja
pop
jmp
jbe
ret
dec
cmp
sub
mov
fiadds
sub
jo
inc
aas
adc
or
sahf
push
jl
cwtl
aad
bound
jl
insl
cmp
mov
nop
push
fnstsw
rorl
insb
in
les
dec
sbb
setno
pop
inc
pop
mov
mov
cmp
xor
jne
jae
xchg
test
ret
jl
xchg
dec
popa
repnz
insb
les
push
out
lret
sub
outsl
insl
and
lods
xchg
pop
fcmovbe
mov
cltd
enter
orb
repz
popa
dec
sub
mov
orb
loop
cmp
xchg
push
rcr
gs
mov
aaa
sub
andps
fmuls
inc
js
jnp
mov
pop
push
pop
xor
fidivs
push
jg
inc
dec
data16
dec
fwait
lods
push
cmpsb
popa
pop
enter
and
mov
pop
nop
sti
xchg
test
xor
cmp
push
push
inc
lea
sbb
pop
cmpsb
jb
jae
mov
mov
imul
mov
pop
adc
ds
ljmp
xor
ret
out
popa
sub
sahf
inc
das
mov
mov
sar
sub
dec
ljmp
sub
jne
orb
jno
aaa
mov
mov
lods
cmc
mov
mov
sbb
jb
les
fdivl
fdivrl
or
add
fcoms
pop
cmp
jnp
icebp
sub
adc
cli
adc
push
mov
xor
jb
push
inc
mov
add
std
mov
addr16
pusha
add
repnz
mov
dec
repnz
int3
lret
inc
aad
dec
arpl
test
push
out
push
xchg
daa
out
dec
ds
ret
and
pop
xchg
fisubrl
adc
cmp
adc
icebp
push
aam
and
inc
jne
jbe
movsb
scas
adc
inc
mov
outsb
cmp
stc
cltd
aam
and
repz
aas
in
mov
rcll
mov
mov
ss
cmp
mov
cmc
fists
cmpsb
cmpsl
cltd
jl
mov
ss
cmpsl
divb
test
rorb
sbb
mov
mov
shll
jg
arpl
dec
mov
repnz
and
aad
call
outsl
mov
push
imul
xor
lock
jae
push
arpl
ficompl
or
js
sub
lods
cwtl
gs
mov
or
or
aas
inc
clc
pop
adcl
shrl
push
jne
lds
jbe
cltd
or
push
and
sub
inc
lods
adc
or
mov
iret
addr16
xchg
jne
aas
or
mov
fstpl
or
mov
sbbl
pop
jecxz
push
lock
mov
jne
pushw
in
xor
pop
repz
mov
out
xchg
and
out
decl
in
int
mov
int3
subps
fabs
or
or
bound
aad
push
cs
jl
lea
out
mov
and
dec
xchg
popf
jnp
mov
lcall
push
int
enter
ljmp
int3
mov
pop
dec
xchg
lahf
mov
out
jp
fs
sbb
inc
aaa
inc
sbb
jg
sbb
test
add
cs
test
rclb
and
adc
sub
fildll
test
inc
int3
popf
out
and
mov
inc
inc
sub
js
mov
imul
adc
push
je
mov
lahf
dec
and
lds
lds
jg
sahf
rclb
xchg
or
bound
out
adc
adc
xchg
fsubrl
lea
mov
mov
mov
sarl
sub
fsts
out
mov
cltd
jecxz
popa
pop
test
rcll
stos
dec
rolb
pusha
icebp
test
inc
jg
push
rcrb
adc
pop
add
push
xchg
pop
mov
cmp
adc
pop
mov
sbb
mov
or
repnz
xor
mov
shlb
fs
push
or
mov
pop
pop
popa
mov
pop
das
fs
jecxz
fbstp
push
push
in
add
push
cli
jnp
jmp
xchg
aam
inc
sbb
daa
scas
cmpsb
inc
rolb
ja
pop
lods
and
fidivs
nop
xor
xchg
sahf
lods
stos
lret
xchg
cmp
lcall
add
stc
jae
mov
std
scas
and
add
sbb
or
mov
sub
xchg
pop
push
popa
or
lods
or
mov
aad
jae
in
sub
inc
and
ret
out
mov
pushf
jecxz
xor
add
xchg
orb
dec
jns
sub
cmp
insb
aas
cmpb
adc
in
jno
jp
lds
inc
sti
ja
push
sbb
xchg
stos
push
xchg
jle
mov
addr16
push
mov
aad
mov
mov
jg
mov
ljmp
lret
push
cltd
add
in
cmp
pop
or
ret
and
xchg
lret
cwtl
mov
jno
xlat
daa
mov
inc
lock
aad
sbb
or
daa
xchg
and
aad
into
sbb
lea
aaa
jle
jnp
loop
test
adc
push
ficoms
stos
sub
ret
dec
out
push
inc
pop
mov
jnp
mov
cmpsb
into
fwait
xchg
and
push
pop
ljmp
or
mov
cmpsb
dec
xor
pop
popf
pushf
lds
pop
divb
in
das
fildl
xor
mov
pop
inc
jae
jb
sub
sbb
loop
mov
mov
dec
shrb
fnstcw
movsb
test
or
mov
or
xchg
jo
loope
js
push
xor
movsw
jb
fildll
adc
ret
std
pusha
scas
cmpsl
dec
xlat
outsb
jne
push
jno
fincstp
mov
rorl
test
cmp
je
inc
out
cmpsl
and
adc
cli
mov
insl
push
pop
sbb
jo
pusha
sbb
mov
push
adc
xchg
sub
sbb
or
pop
fsubs
dec
and
pop
popa
cmp
push
sub
das
mov
outsb
cmpsl
in
jae
outsl
push
mov
adc
jp
lret
xchg
repnz
loopne
pop
push
loope
stos
mov
aam
adc
outsl
fwait
mov
xor
fs
mov
pop
inc
jnp
mov
ret
cmp
and
sbb
cmc
push
sub
mov
adc
pop
imul
jle
pop
jmp
cmp
xchg
rclb
bound
or
lds
scas
ficompl
adc
stos
pop
and
jle
cmp
jl
int
cmp
mov
pop
add
pop
enter
lahf
add
mov
sub
push
lret
pop
sti
pop
sarb
dec
pop
or
scas
jno
jecxz
fidivl
mov
push
outsl
jbe
mov
or
scas
sub
movsl
sbb
scas
stos
pop
mov
xor
rcl
in
fldenv
and
dec
leave
icebp
mov
and
pop
push
or
mov
out
dec
push
push
inc
sub
ljmp
add
mov
je
mov
pop
push
fiaddl
outsl
add
or
xor
nop
push
mov
mov
movsb
mov
je
add
push
and
daa
pop
daa
mov
sbb
mov
dec
push
add
dec
out
jle
adc
ss
movl
xor
push
cs
aas
jle
fcomi
lret
pop
sub
test
jnp
inc
lock
jl
push
sbb
das
in
cmp
mov
aad
xchg
xchg
mov
fsts
push
inc
scas
enter
inc
dec
or
mov
nop
cli
cs
out
add
nop
mov
mov
repnz
pop
push
pop
jno
and
insb
add
xor
lret
clc
lret
push
sub
inc
daa
add
add
jmp
dec
fdivrs
add
dec
inc
mov
adc
stos
roll
stc
add
dec
insb
pop
outsl
adc
rep
loope
movsb
adc
and
xlat
aaa
leave
test
xor
dec
test
jge
or
cwtl
repnz
sahf
mov
ss
loopne
iret
ja
push
mov
stos
and
cltd
mov
cmp
mov
subl
sub
jo
test
stos
insb
mov
imul
push
fcoml
cmp
inc
jle
sub
les
jbe
push
pop
mov
or
cmovne
dec
sub
pop
test
cmp
popa
mov
or
mov
xchg
repnz
add
mov
loop
test
xor
jmp
jle
dec
cltd
dec
fsub
fcoml
jns
cmp
adc
out
cmpsl
sahf
pop
cltd
sti
repnz
dec
mov
ds
add
sub
dec
pop
ja
ss
jge
xchg
pop
push
mov
push
xchg
cmp
mov
leave
nop
xor
cmp
xor
popa
sbb
loope
out
ja
clc
pop
push
rolb
int3
cmc
cmpb
ficoms
cmp
xchg
inc
test
pop
sub
in
mov
and
cmc
sti
mov
loope
push
popa
mov
adc
xor
pop
stos
mov
je
sub
sub
jecxz
ds
and
mov
adc
lds
mov
jecxz
xor
mov
lea
outsl
negl
push
aaa
rol
icebp
ljmp
aas
inc
jne
jne
lods
cmp
xor
xchg
lods
push
push
xor
add
or
pop
or
dec
adc
mov
mov
add
lods
sbb
adc
lods
cmp
leave
xlat
nop
sbb
stc
addr16
jo
cmp
pop
stc
inc
jle
in
cmpb
add
in
aam
or
movl
aas
sti
cmp
insb
fwait
add
cmpsl
int
imul
call
repz
rcr
jne
fistpl
rclb
cld
lds
iret
or
ret
rcrl
ret
jecxz
popa
xlat
movsl
add
testl
imul
mov
jge
sub
xchg
dec
sbbb
cmp
jns
lods
add
push
fcmovnbe
fdivrs
push
add
faddl
in
ja
cmpsb
inc
sbb
popa
mov
lcall
shll
jg
andb
divl
in
cmp
mov
push
nop
out
sbb
aas
loop
mov
jb
mov
stc
pop
mov
cmp
test
dec
push
lods
out
sub
or
mov
inc
and
cmp
jne
push
sub
pop
lret
loop
test
ljmp
push
xor
push
mov
ficoml
push
xchg
repnz
sub
lahf
mov
xchg
hlt
xlat
sub
dec
sub
test
pop
fcomps
fwait
xor
xor
fsts
add
inc
imul
and
mov
iret
mov
stc
mov
jge
xor
scas
stc
imul
stos
mov
iret
lret
sti
movsl
int3
mov
mov
add
add
movsb
cmp
and
loop
pop
fs
lods
sti
out
dec
iret
popf
mov
add
sub
sbb
cmpb
fs
pop
loop
push
xlat
icebp
and
pop
mov
add
adc
aad
pop
std
jmp
sbb
jle
call
faddp
movsb
dec
ror
jle
cmp
testb
pop
mov
aad
add
lock
xchg
add
xor
and
popf
mov
sub
xchg
mov
mov
jmp
into
push
shll
xor
lods
dec
xchg
rcr
in
mov
add
mull
cmpsl
inc
mov
dec
sub
cld
stos
decb
jge
sub
pop
mov
cmp
adc
lds
filds
test
mov
ret
xor
iret
pop
fildl
into
sub
mov
or
jp
vmread
and
mov
pop
adc
loopne
outsl
jno
push
push
dec
stos
add
mov
loope
scas
into
lea
pushf
dec
mov
fdivrs
push
insb
ljmp
pop
or
add
pop
lret
lods
test
cmp
test
lahf
insl
mov
subl
or
rcrb
shl
mov
sub
push
mov
imul
inc
mov
xor
xor
jo
mov
movsl
jmp
dec
xlat
lcall
dec
pop
and
cmp
testb
lcall
aaa
xor
in
pop
inc
sub
dec
jmp
mov
popf
test
testb
mov
xchg
mov
xor
andb
lock
shll
adc
sbbb
sti
sbb
outsl
movsb
or
adc
fs
inc
jl
fwait
imul
arpl
sahf
stc
push
cmpsb
rcl
cld
fnstenv
xchg
js
adc
pop
cmp
xor
xlat
out
mov
in
insl
mov
pop
dec
sbb
ja
lret
repnz
xor
mov
fstl
mulb
xor
ss
push
loopne
ret
mov
mov
mov
cmp
sbb
mov
xlat
outsb
std
mov
push
int
je
push
pop
xor
std
push
in
add
lock
sbb
jle
int3
mov
mov
dec
adc
pop
and
out
xor
std
ret
sbb
popf
mov
mov
or
pusha
arpl
mov
arpl
imul
gs
fadds
ds
or
jl
hlt
cmp
repz
jnp
push
cmpsb
mov
ret
pop
push
popa
loopne
inc
test
sbb
faddl
jle
dec
arpl
decl
sbb
sahf
mov
inc
flds
jne
fsts
dec
je
xor
outsl
test
cmp
mov
sub
ds
or
sbb
testl
jg
inc
pop
mov
mov
push
aad
inc
gs
jle
mov
push
nop
into
sbb
cld
cmp
outsb
in
int
imul
iret
shlb
ja
or
jb
popa
xchg
test
gs
pop
mov
ljmp
add
xor
adc
mov
jo
cmp
fmuls
push
shlb
movsb
xor
jmp
mov
scas
mov
lahf
push
loopne
sbb
cltd
sbb
js
inc
das
xchg
inc
jmp
add
and
ret
adc
jns
jg
sbb
loop
add
jbe
ss
pop
pushf
rorl
stos
std
sub
jmp
sbbl
pop
adc
cltd
jnp
mov
inc
dec
inc
push
xlat
loopne
mov
add
lods
push
add
pop
and
sbb
outsb
subb
xor
out
sarl
enter
cmp
add
out
imul
xchg
inc
div
xor
cs
call
fcomi
test
cli
out
rol
mov
bswap
mov
loope
pop
adc
and
out
jecxz
popf
pop
in
jg
rcll
in
dec
out
mov
ds
jns
mov
pop
mov
push
pop
enter
outsl
lea
cmc
fcoms
xor
xchg
stc
dec
cmp
cmp
outsb
insb
sub
push
add
inc
frstor
in
adc
mov
add
mov
xchg
pop
mov
test
je
ret
out
push
leave
dec
add
xor
adc
xchg
cmp
add
mov
push
leave
cld
push
shl
cltd
rorl
hlt
push
mov
orb
jb
xchg
js
or
lds
push
pop
jo
mov
cmp
dec
mov
das
ss
add
add
ja
fcomp
dec
repnz
mov
xor
or
imul
xchg
das
clc
jl
xlat
pop
ljmp
in
aam
jge
mov
ds
push
stos
mov
mov
in
jb
dec
xchg
and
pop
jp
jns
pop
mov
std
int3
dec
push
cmp
es
inc
fdivl
cwtl
push
es
xor
inc
jae
inc
push
rorb
cmc
fadds
mov
pop
rcrb
push
daa
xchg
rol
pop
popf
mov
sub
xor
mov
inc
xor
clc
test
dec
cmp
push
out
inc
xchg
les
roll
loope
push
ja
add
scas
stos
rol
das
xchg
lock
icebp
sub
fwait
cmp
lcall
sbb
enter
das
sahf
fwait
sub
shll
mov
mov
test
xchg
mov
orb
repnz
sbb
int3
pop
lock
pop
jns
fldenv
sti
xchg
cmpsb
mov
cmpsl
mov
sub
inc
hlt
cwtl
mov
mov
add
ljmp
add
out
out
mov
loopw
mov
bound
pop
mov
mov
add
cmpsl
pop
out
jp
sbbl
sub
push
gs
mov
adc
test
xchg
sbb
add
sar
enter
loope
add
mov
mov
adc
push
js
mov
vcvtsi2sdl
inc
xor
in
xorl
add
pop
stos
les
scas
popf
out
adc
dec
sub
das
and
cmp
aas
test
xchg
outsl
sahf
nop
in
mov
int3
movsb
cmpsb
ret
push
repnz
rcll
daa
mov
adc
adc
jnp
mul
fistl
push
loop
or
sub
adc
add
mov
sbb
int
popf
stc
add
fisttpl
cmpsl
sbb
faddp
lret
in
cmp
or
outsb
imul
jl
out
adc
mov
xchg
xor
outsl
or
mov
push
jbe
loope
add
push
cltd
mov
cmp
add
sub
insl
shrl
repnz
mov
mov
gs
sti
jbe
lock
jge
iret
dec
dec
mov
pop
push
jl
adc
xchg
subb
xchg
aad
sub
pop
jmpw
push
jmp
xchg
cvtps2pi
jl
sahf
xor
xchg
daa
xor
inc
sti
add
rcr
and
xchg
push
jle
jno
mov
jecxz
push
cmp
mov
mov
enter
inc
fidivl
les
bound
into
sbb
jo
mov
inc
daa
mov
pop
fbstp
pop
testb
imulb
movsb
jb
blcfill
mov
pop
xor
pop
hlt
movsb
jbe
in
nop
mov
jmp
je
repnz
xchg
pop
dec
cmpsl
popa
push
add
in
adc
rol
xor
in
or
lret
shlb
jo
shll
inc
dec
arpl
jns
inc
out
cmpsl
push
push
in
xlat
in
inc
xchg
mov
xchg
pop
ja
in
mov
pop
repz
pop
and
dec
mov
jecxz
sbb
neg
sub
or
push
mov
decl
dec
lds
xchg
fldenv
ret
ja
adc
mov
cmp
arpl
dec
jle
ret
addl
push
ss
fidivl
dec
das
mov
xchg
or
in
fcoms
aas
sbb
add
sti
aas
mov
test
pop
xchg
je
addr16
lea
xchg
sahf
dec
jge
mov
fsubrs
hlt
mov
mov
outsl
jno
mov
aaa
ret
inc
xor
mov
in
add
andl
cmp
aaa
repz
lret
jno
xor
inc
sub
adc
pop
xor
xor
xchg
enter
mov
sbb
cmpsb
test
dec
cld
jno
push
out
adc
icebp
mov
xchg
sbb
into
movsl
sub
cmc
push
push
aad
nop
cmp
sub
shrb
dec
ret
inc
or
mov
negb
pop
add
mov
xchg
lea
fisttpll
dec
pop
jae
adc
xor
imul
pop
sub
xlat
dec
jno
testb
leave
cmp
add
inc
push
fwait
in
mov
lds
and
andb
popa
add
hlt
repz
iret
jbe
ds
ret
xlat
call
pushf
imul
sbb
push
pop
mov
lret
test
fcompl
dec
in
xchg
push
adc
nop
je
ret
push
lret
mov
push
dec
cmp
sahf
mov
sub
inc
mov
orl
adc
jp
rol
lret
add
cwtl
adc
sahf
dec
jmp
pop
cmp
mov
cmp
lds
sub
xchg
jg
les
mov
cmp
bound
mov
pushf
pop
mov
push
popa
push
pop
or
add
dec
mov
sub
mov
das
xor
adc
push
fs
push
add
lock
cs
push
pop
adc
or
lret
add
in
test
popf
scas
jno
sbb
dec
pop
sbb
xor
leave
scas
adc
cltd
sbb
add
call
xchg
dec
cmp
or
in
xor
and
mov
cmp
aam
sub
push
ja
imul
jmp
fstps
xchg
mov
inc
jmp
in
sbb
lcall
and
pop
inc
ja
sub
cmp
stos
nop
push
rolb
shlb
aam
mov
push
addr16
sub
mov
ljmp
lods
les
push
push
into
sbb
jle
mov
push
imul
fs
sti
pop
into
add
stc
leave
push
xchg
dec
das
adc
jne
cmp
jbe
jle
mov
shlb
mov
cmp
push
add
out
mov
int
pusha
hlt
mov
fildl
imul
cmpsb
fidivs
push
data16
loope
lods
inc
dec
jns
addb
pop
mov
lcall
dec
lret
add
mov
inc
jnp
dec
sub
shrl
adc
mov
sub
dec
push
jle
jg
jl
mov
icebp
setnp
rcrl
mov
enter
mov
pop
jb
imulb
jl
sar
movsb
sbb
xchg
mov
sub
jl
lock
sub
shlb
and
in
or
js
xchg
pop
sub
sbbl
jnp
pop
and
dec
mov
cmp
or
jne
test
repnz
jnp
movsb
adc
call
mov
fwait
and
pushf
enter
imul
adc
mov
int3
aam
inc
push
sarl
xchg
add
cmp
inc
mov
lea
xchg
mov
jmp
std
add
and
fs
out
jbe
out
test
dec
xor
imul
ds
fistps
out
in
movsl
fcmovnbe
xchg
lds
iret
hlt
lock
mov
fdivl
sbb
out
sub
jl
shrl
jno
pop
clc
jmp
sub
outsl
pop
imul
out
inc
adcb
js
ljmp
jbe
mov
enter
test
adc
lret
push
jp
jmp
xchg
add
fdivrs
movsb
jnp
popa
call
xchg
iret
pop
cmpsb
repnz
jb
mov
or
in
test
mov
mov
inc
loop
xor
cmp
in
xor
daa
xorb
jae
jl
mov
cmp
xor
add
xor
jp
sub
ljmp
mov
jp
hlt
cmp
shl
adc
in
ja
mov
and
mov
orb
pop
mov
out
push
gs
inc
dec
mov
sti
add
push
enterw
fmuls
out
add
int
sahf
daa
xlat
lcall
shll
inc
sti
aas
cltd
sbb
int
xor
addb
mov
subb
jb
mov
call
adc
and
test
data16
lahf
xchg
xor
lcall
sahf
in
lahf
stos
xor
adc
rorl
ret
sub
jo
jp
inc
jno
hlt
out
sbb
xchg
dec
cmp
lea
dec
imul
pop
xor
mov
imul
dec
in
repnz
pop
mov
sub
nop
iret
pop
pusha
mov
test
ljmp
iret
xor
scas
mov
ficoms
ss
cld
mov
test
repz
dec
mov
push
fdivl
jns
adc
aad
mov
add
fs
sarb
cmp
out
or
jg
inc
jns
sbb
mov
push
addb
sbb
pushf
cs
mov
insl
test
xchg
xchg
push
out
xchg
es
xlat
sbb
xchg
addr16
loop
push
aas
mov
pop
das
mov
push
xor
fwait
jae
or
fs
pop
movaps
mov
out
pushf
xchg
mov
insl
mov
adc
decl
testb
push
xor
out
and
xor
scas
and
das
daa
cli
xchg
or
dec
aaa
inc
and
pop
arpl
cli
das
mov
xchg
pusha
jae
push
mov
adc
adcb
dec
sub
xor
rcr
insb
in
ret
sbb
shl
cmpsl
xchg
push
xor
into
cltd
mov
int3
add
fsubr
add
jns
jmp
fs
sti
push
lods
divl
adc
mov
adc
dec
ss
fs
jp
xchg
nop
int
test
test
fstpt
or
cmp
sti
shrb
rorl
clc
mov
iret
push
ret
scas
ret
leave
popa
and
in
stc
push
lea
clc
lods
loope
mov
add
mov
bound
loopne
inc
aam
adc
cmp
sbb
mov
xlat
add
push
sbb
sub
cmp
mov
loope
sub
cwtl
pop
xor
jle
inc
push
sbb
aad
hlt
test
fwait
das
xor
int
sbb
xchg
push
sub
sbb
fdivl
adc
fnstcw
sahf
or
xor
mov
jo
popf
add
cmpsl
dec
jp
pushf
xor
int
xor
inc
not
rcr
sarb
cmp
pushf
jmp
sub
jp
jnp
mov
imul
pop
aas
and
adc
aam
mov
insl
jns
testl
sbb
fmull
cmpsl
mov
adc
cmpsb
bound
stc
pop
ja
jnp
out
faddl
arpl
icebp
xlat
mov
stos
cld
cld
dec
jno
imul
shlb
xchg
cmp
add
cmp
mov
mov
inc
sti
shl
lret
int
js
shrb
mov
sbb
or
int3
or
aaa
cmp
rcll
cmpl
cmp
stc
cmp
enter
xchg
dec
push
dec
cwtl
cltd
and
out
sbb
rcl
ds
test
fsubp
icebp
int3
sub
das
or
outsl
inc
or
pusha
mov
pop
addr16
inc
ds
add
xor
push
cmpsl
jp
xor
jmp
push
jle
cmp
testl
cmc
sub
out
cmc
push
inc
mov
cs
sbb
aam
in
xor
mov
pushf
adc
pop
or
adc
outsb
mov
cmp
fdivs
daa
int3
mov
pop
stc
test
cmp
xchg
jb
popf
or
lock
insl
ret
insb
cmc
in
loop
mov
imulb
sub
jns
pusha
loope
mov
popf
adc
in
adc
jecxz
cmc
jnp
loopne
mov
cmp
enter
mov
mov
inc
nop
pushf
sub
pop
std
cmp
mov
lods
loope
push
mov
jo
add
imul
lret
sbb
cmc
mov
pushf
ja
mov
loop
cmp
aaa
into
das
adc
test
sub
dec
cmp
testl
in
test
jo
jl
adc
and
sbb
mov
test
fwait
cmpsl
dec
xchg
push
data16
mov
sub
and
test
pushf
xor
bnd
mov
jno
in
jns
xorb
insb
loopne
push
mov
stc
repnz
inc
insb
dec
lds
ret
test
aad
jg
push
pop
fcmovne
popf
cmp
dec
jbe
aam
ficoms
popa
jnp
push
and
jb
jp
push
fwait
dec
pop
cmp
xor
in
call
out
ja
or
and
lret
sar
jg
repnz
mov
pop
jecxz
dec
cs
adc
cmp
mov
cmp
scas
xlat
cltd
adc
fwait
int3
mov
cmp
mov
lea
out
lods
aas
adc
out
mov
dec
pop
fcmovnbe
mov
mov
out
and
sahf
adc
pop
loop
xor
and
pop
out
add
and
cmpsb
fwait
iret
neg
clc
fwait
cltd
pop
loopne
ret
jg
rcrl
dec
fs
pop
xchg
rclb
popf
xchg
repz
mov
xor
xchg
cwtd
dec
mov
or
xlat
bound
out
inc
mov
inc
sbb
mov
jg
and
adc
vmovntps
adc
lret
inc
xchg
mov
sarb
lret
xor
outsb
add
mov
fmuls
data16
ficoml
cmp
dec
push
and
jo
fst
cs
nop
dec
jne
mov
mov
notl
lcall
mov
cmp
jp
stc
pop
adc
inc
add
and
lret
dec
int3
daa
aas
test
push
idivb
in
sbb
xlat
pop
push
fisubs
sub
cmc
lods
out
xchg
adc
in
jg
insb
mov
push
cltd
pop
mov
in
mov
or
jne
mov
jns
ja
and
sbb
add
cwtl
pop
cmp
push
hlt
loop
lcall
das
sub
push
stos
jnp
push
ret
xor
jo
test
and
xchg
mov
xor
icebp
xchg
mov
lods
mov
mov
idivb
jmp
repz
pop
test
lock
stos
pusha
enter
push
ret
push
or
ds
and
rcl
insl
neg
mov
push
aas
ret
xor
pop
cmp
addr16
imul
fistpl
and
hlt
xchg
and
and
fbstp
pop
call
gs
inc
lret
mov
stc
movsl
jb
mov
push
jl
push
and
andl
xor
mov
imul
or
insb
sub
jo
add
mov
pusha
loope
insb
mov
xor
clc
cmc
dec
xor
cmp
fistpl
push
leave
or
je
push
mov
or
jl
cltd
int
dec
test
scas
or
ret
enter
mov
push
and
repz
pop
cmpsb
jge
lea
insl
negb
arpl
lds
push
sub
push
xor
test
sbb
loope
jns
sbb
jnp
ds
jb
add
or
scas
notb
in
mov
in
inc
inc
push
mov
xchg
and
bound
mov
jg
int3
add
mull
cmp
stos
push
out
subl
stc
rdmsr
pop
mov
sbb
popf
sbb
fidivrl
xor
push
in
xchg
enter
add
lcall
stc
test
and
je
data16
cmc
adc
ret
aas
daa
xchg
mov
scas
mov
das
movsl
dec
inc
jmp
sub
and
pushl
stos
adc
and
and
out
xchg
scas
mov
mov
sahf
mov
mov
fstps
jo
cmpsb
lret
adc
and
int3
or
inc
jecxz
scas
push
test
mov
and
rcrb
and
push
sub
sbb
out
push
test
pop
xchg
js
sbb
pop
insb
test
jecxz
pop
sbb
xor
xchg
repnz
in
lret
aad
mov
xchg
sbb
and
push
mov
into
xchg
loope
fistl
fcomps
popf
mov
lret
dec
or
mov
jp
andnps
out
movsb
mov
scas
lea
pop
scas
mov
cltd
inc
test
jns
jb
push
inc
rorb
sbb
sub
or
jae
mov
adc
repz
jmp
sub
add
sbb
xchg
push
pop
lods
push
lret
adc
stos
bound
daa
push
fisttpll
cltd
iret
lods
push
mov
xlat
es
fucom
popf
mov
xchg
cld
mov
out
cwtl
xchg
loope
cmp
sub
stos
addl
push
cltd
mov
and
dec
cmc
xor
cwtl
mov
or
pusha
xchg
jmp
dec
cmp
loope
ljmp
inc
popa
pop
aad
inc
nop
cltd
call
xchg
jl,pn
mov
mov
aam
lahf
loop
jl
addr16
mov
loope
mov
cs
or
cmp
push
imul
lods
ja
into
push
fsub
out
popa
mov
cmp
mov
sahf
repz
enter
and
mov
scas
ljmp
pushf
es
add
inc
fcompl
mov
sbb
jg
push
add
sbb
pop
leave
outsl
and
sti
outsl
outsb
arpl
jnp
in
lods
xorl
inc
int
mov
imul
add
and
xor
sbb
xor
sbb
xchg
inc
add
xor
fcoms
jecxz
or
mov
dec
dec
jl
mov
xor
xor
cli
xor
repnz
xchg
mov
mov
or
daa
ljmp
xchg
and
xlat
push
sub
clc
xor
sub
xor
pop
sbb
push
add
mov
add
cmp
repnz
jb
out
cs
leave
jge
sti
pushf
add
dec
jne
scas
fdivrs
fwait
movsl
inc
pop
add
jae
dec
pop
mov
and
gs
jae
xor
inc
push
adc
sub
into
sbb
int
dec
push
pop
inc
into
adc
scas
stos
inc
pop
insb
add
mov
adc
cwtl
sub
push
popa
dec
call
ret
or
and
mov
xor
or
push
daa
ljmp
ja
lock
lds
std
sbb
or
aad
cs
orl
lods
push
jb
fidivrs
fwait
inc
push
cmp
leave
repz
xor
jne
jo
ljmp
adc
shl
loopne
or
pop
rcll
mov
xchg
sbb
dec
ja
jmp
xchg
add
xlat
add
push
xor
cmpsl
imul
shrb
mov
imul
popa
mov
xchg
mov
jl
cmp
mov
mov
shlb
mov
ds
in
xor
les
inc
mov
cmp
lds
fidivrs
inc
dec
into
hlt
hlt
pop
arpl
dec
cli
dec
rcrb
fidivs
cmp
inc
fwait
mov
dec
pop
mov
out
pop
and
sub
inc
or
sbbl
fldcw
cld
and
ret
xor
lock
dec
leave
outsl
ficoms
add
aam
sbb
in
aas
daa
and
mov
xor
mov
fwait
mov
cmp
aad
out
mov
sbbb
mov
and
lods
mov
lahf
inc
popa
fsubrl
ret
xchg
mov
add
sbb
gs
jle
jmp
ljmp
jge
loop
je
xchg
xchg
inc
sub
cmp
rcrb
add
dec
dec
inc
push
scas
push
outsb
or
lods
pop
loopne
shlb
ds
mov
in
jb
or
je
popf
push
popf
idivl
push
fmuls
or
movsl
mov
sbb
addr16
test
push
popa
lods
mov
cwtl
xor
jns
aad
mov
das
push
xchg
sub
sbb
jae
cmc
or
mov
sbb
ljmp
fcoml
outsb
inc
add
ss
vaddpd
mov
arpl
icebp
stc
out
jle
jle
pop
and
cs
nop
fmuls
adc
dec
xchg
mov
jge
mov
pop
rclb
xchg
or
addr16
ja
arpl
fnstsw
psraw
mov
adc
ret
cli
in
mov
rcll
rcr
mov
int3
push
movsb
pop
movsb
dec
movsb
sub
adc
out
inc
shll
jnp
cmp
push
pop
fs
sti
ret
in
test
cli
mov
adc
fildll
pop
push
sbb
push
icebp
arpl
jnp
daa
int
loopne
fstpl
mov
insl
dec
outsl
xor
aas
push
outsl
insl
gs
push
or
sbb
test
inc
cmp
adc
repnz
rorb
fimull
sub
push
mov
iret
sti
inc
js
lahf
jb
test
jl
ret
pop
pop
xor
icebp
xchg
bound
xor
adc
divl
int3
popa
mov
aas
adc
xorb
lret
mov
nop
ret
push
lods
sbbb
hlt
je
jg
addr16
lods
addl
cmp
inc
test
cmc
out
in
inc
pop
dec
xchg
rcll
push
push
lcall
push
fsubs
push
jmp
ficompl
ficoml
jmp
xor
fmull
or
pushf
pushf
mov
xchg
push
fiaddl
jl
in
mov
fwait
and
and
inc
cmpb
in
sbb
test
insb
pop
or
jae,pt
ds
nop
lret
mov
xor
xor
out
mov
sbb
mov
lock
push
dec
jb
icebp
xor
popa
cld
or
cmp
in
sbb
mov
jg
sbb
aas
stc
loopne
cmp
insb
mov
insl
inc
push
add
inc
xchg
xchg
sbb
cwtl
xor
jle
xchg
push
jle
and
sbb
and
pop
stos
jnp
mov
and
dec
or
mov
lret
jns
jg
push
sbb
mov
or
lcall
pop
adc
pop
lret
test
std
mov
sub
pusha
in
mov
shlb
das
sbb
jno
sub
or
lods
jb
inc
rcr
push
fnstsw
scas
adc
ror
test
mov
out
popa
xchg
adc
push
lret
sbb
sbb
xchg
cmpsb
sahf
shll
ss
push
cltd
mov
dec
mov
in
mov
dec
ss
iret
cld
jle
adc
inc
sar
test
outsb
xor
stos
test
stos
push
outsl
stos
xchg
mov
ret
adc
mov
push
sbbl
push
cmp
xorb
dec
dec
scas
pop
sbb
lds
int3
jg
stos
push
inc
mov
int
pop
cmp
rclb
jae
mov
jge
out
les
cmp
pop
jnp
pushf
mov
loope
jne
in
dec
lret
push
mov
ficoms
scas
xchg
or
inc
xchg
nop
pusha
add
mov
mov
jmp
and
in
xor
repz
xchg
pop
inc
sub
jne
shl
mov
cwtl
movsl
outsb
shrb
cmc
inc
sub
mov
mov
inc
out
xor
dec
and
jns
cld
lret
arpl
cmpl
outsb
lcall
scas
rorb
sub
push
repz
mov
or
enter
adc
loop
sbb
lcall
fstps
xchg
or
fidivs
je
inc
pusha
je
or
lret
jl
shll
subb
inc
iret
movsl
dec
out
pop
mov
rcl
sahf
popa
lock
push
push
adc
cld
fadd
jg
push
cltd
lret
pop
lahf
jns
daa
jle
cmpsl
sbb
mov
jg
sbb
and
mov
mov
mov
or
push
push
xor
or
xlat
push
mov
ret
or
push
je
jnp
jns
stos
or
mov
and
pop
jge
add
fucomip
das
jae
insb
mov
push
fs
jle
lods
or
cmpsl
jg
sub
or
data16
push
mov
leave
mov
add
push
jb
mov
rcrl
addl
test
cmpsb
movsb
adc
xchg
insb
pop
lods
dec
jmp
imul
das
lea
inc
cwtl
pop
in
xchg
sbb
scas
in
pop
ss
xchg
sub
xchg
jp
in
lds
mov
call
or
out
icebp
pop
ja
stc
adc
xchg
rcrb
cmp
nop
lds
jo
cs
sbb
popf
push
cmpsl
sbb
popa
stc
xor
enter
add
xlat
inc
das
mov
popa
in
push
xor
jle
sbb
mov
cmp
jge
in
lret
and
shl
test
push
and
mov
iret
leave
pop
call
mov
sbb
aas
insb
inc
mov
or
loope
sub
xchg
xor
pop
hlt
pop
or
xchg
test
ja
mov
xchg
lods
push
enter
dec
lret
adc
addb
in
dec
mov
daa
cmp
mov
fmul
jg
push
loopw
dec
lret
fisubrs
xchg
mov
scas
pop
dec
gs
pop
sub
mov
aas
pop
xor
dec
add
and
ret
mov
push
or
mov
mov
cmp
inc
stos
jo
inc
ret
into
andb
xchg
lret
in
icebp
rorl
jo
jnp
ljmp
jl
fistps
mov
fcomi
es
mov
lret
xchg
jns
not
insl
and
stc
mov
cltd
mov
mov
lret
fsubrp
ficoms
stc
xor
js
pop
ss
ja
ja
loope
mov
ds
sti
into
pop
repz
lds
je
and
cmpsb
outsl
mull
and
sti
movsl
sbb
movsl
das
adc
pusha
jge
stc
xor
fnstsw
cmp
adc
xchg
dec
xchg
mov
jmp
imul
daa
inc
jmp
push
cmpsb
adc
cld
mov
add
push
popa
push
hlt
loope
shlb
mov
hlt
andb
mov
loop
pop
ficoms
xchg
out
cmpb
test
movsl
pop
xchg
xchg
push
pop
icebp
shlb
or
divl
lock
popa
cmp
daa
aaa
cmpb
mov
jmp
lret
enter
out
and
inc
pop
push
and
mov
fistl
adc
mov
cld
adc
push
cmp
xorb
test
lcall
js
js
je
push
movsl
pop
fcmovbe
jg
push
sbb
test
sbb
subl
es
xchg
jb
aas
sbb
and
addr16
pop
dec
out
test
cmpsb
in
and
ds
sti
das
cs
jnp
pop
cmp
mov
cmp
push
movsb
pushf
dec
out
mov
loop
sbbb
fmuls
insb
icebp
std
into
and
sar
pop
xor
sahf
and
aaa
mov
dec
fs
jnp
dec
daa
push
mov
lahf
pop
cmp
outsl
dec
sbb
mov
pop
fimuls
xchg
shrb
and
popf
pop
fmul
cld
popf
mov
inc
popl
gs
or
mov
fcmovbe
roll
rorb
scas
cmp
xchg
xor
rol
mov
xchg
int
cmp
mov
dec
sbb
out
mov
push
fsubs
cs
dec
insl
sub
or
sbb
andl
dec
jecxz
xchg
pushf
pop
lods
sub
xor
fnstenv
fimuls
or
int3
std
mov
and
sbbl
retw
gs
adc
xor
pop
fadd
lret
mov
ret
dec
std
cld
imul
mov
mov
push
add
or
inc
sub
outsb
ret
cmp
imul
out
mov
lods
movsl
fildll
cmc
adc
pop
lds
int3
pushf
push
sti
xchg
xor
mov
and
push
adc
jnp
mov
imull
xor
cmp
hlt
adc
popf
pop
pushf
xchg
adc
in
dec
xchg
xchg
mov
lret
outsl
pop
fidivl
push
mov
dec
andl
sbb
jbe
out
inc
out
stos
stc
lret
outsb
sub
xor
loope
push
jnp
out
sbb
aaa
mov
cmp
repnz
movsb
pop
jae
xor
rcll
xchg
and
popf
inc
add
xchg
pop
inc
mov
loopne
fistl
xchg
xlat
mov
lcall
lods
scas
fs
jle
sbb
stos
push
adc
jp
adc
inc
scas
test
pushl
cmp
out
pop
push
fs
xchg
pusha
xor
cld
in
mov
shr
cmpsl
addb
mov
push
dec
nop
sbb
stos
in
sub
lret
pop
pop
push
mov
mov
fwait
push
add
sbb
and
inc
push
incb
push
sarb
push
mov
xorl
mov
jge
push
sbb
mov
repnz
push
jmp
test
jl
stos
pop
aad
mov
cltd
mov
xor
loopne
dec
adc
lods
fsubl
push
push
shl
imul
add
mov
es
insl
add
or
cmp
pusha
outsb
test
insb
jge
sbb
mov
in
and
fisubl
push
mov
vcvtsd2si
dec
jae
mov
xor
mov
pop
inc
push
lods
test
push
popf
inc
or
inc
popa
dec
mov
cltd
push
stos
std
jmp
xor
jno
xor
lret
andb
insb
sub
ds
fsub
sbb
scas
inc
shlb
roll
adc
bound
mov
pop
sar
loop
add
push
and
or
mull
fcos
mov
dec
mov
dec
push
jp
roll
pop
leave
sbb
rolb
sbb
jle
sbb
scas
cmp
dec
xchg
enter
out
addl
mov
scas
sbb
mov
xor
sarl
dec
ljmp
loope
imul
dec
daa
sub
jle
push
mov
je
push
push
jnp
add
stc
mov
and
outsl
daa
jns
into
test
ret
movsl
ja
inc
rol
iret
mov
div
mov
and
and
jns
push
and
pop
xchg
sarb
xchg
add
sbb
ret
daa
or
or
push
cld
inc
pushf
cmpb
cmpsl
inc
jae
sub
or
fistpl
rcll
bound
leave
inc
mov
pop
cmp
scas
or
push
out
out
stc
mov
pop
dec
mov
out
insb
or
rclb
jns
mov
mov
xchg
push
inc
movsb
fstl
cmp
jne
in
les
inc
pop
jmp
adc
hlt
inc
out
xchg
out
ss
push
out
sub
inc
test
inc
sub
imul
add
movsl
pop
sub
out
into
call
cmp
or
pop
adc
enter
incb
push
movsl
scas
fistl
xchg
xchg
test
cs
push
xor
cmpsl
mov
jl
jae
mov
mov
rcl
rcll
add
int
ss
mov
xchg
repnz
jbe
inc
loope
xor
mov
fldpi
leave
cmp
in
repz
mov
aas
xor
pop
repnz
sbb
and
fnsave
xor
test
decl
sub
mov
dec
test
or
decl
cmp
pop
mov
dec
fldl
add
hlt
mov
add
ss
adc
in
push
sub
push
pop
push
mov
lahf
ja
addr16
push
dec
scas
hlt
scas
sbb
sbb
xchg
pop
xor
add
outsl
add
std
add
xor
loop
in
flds
jno
outsb
es
dec
xchg
cmpsl
inc
add
or
mov
inc
mov
inc
sbb
xor
mov
ds
outsl
xchg
xchg
sbb
stos
jne
mov
pop
inc
and
xorl
push
call
shll
sbb
and
add
xchg
bound
stos
repnz
rep
mov
jp
jle
sbb
in
mov
mov
lahf
les
mov
outsl
inc
pusha
lds
pop
inc
rcr
lods
out
cs
loopne
loopne
sub
roll
sahf
mov
stos
adc
or
xchg
out
cmpsl
aad
adc
pop
lea
call
jp
dec
push
out
push
push
xor
add
nop
push
cmpsl
jbe
inc
das
std
js
dec
pop
xchg
lret
sti
pop
or
inc
fldl
addr16
sti
jle
mov
fldenv
dec
jmp
or
dec
add
inc
jmp
inc
out
mov
daa
shrw
mov
lcall
mov
data16
mov
dec
cmp
test
or
inc
pop
jecxz
cmc
adc
jg
roll
push
push
das
cwtl
mov
roll
lahf
addr16
sbbb
lea
xor
mov
or
aam
je
or
mov
clc
dec
lcall
pusha
adc
xchg
push
mov
pop
mov
fidivrs
roll
jecxz
into
ret
push
loop
pop
popa
mov
test
dec
pop
sbb
xor
pop
jne
push
lahf
jle
xor
out
loope
push
and
fistps
lock
cwtl
fdivrl
cs
ss
adc
jge
add
lea
dec
lret
push
jecxz
jge
dec
ljmp
pop
test
push
push
fistpl
in
mov
faddl
dec
repz
cmp
movsb
fisubrs
pop
dec
sbb
movsl
cmp
cmp
jecxz
lods
push
xchg
add
addb
aad
fmull
stos
ljmp
jmp
push
push
and
enter
pushf
push
xor
sub
pop
dec
dec
jnp
push
in
cmp
sti
push
push
leave
dec
icebp
fs
xchg
and
pop
enter
fcomp
mov
inc
movsb
enter
cwtl
sbb
add
cmp
push
imull
decl
int
fdivrs
test
addr16
sahf
push
jo
jne
int3
out
mov
push
or
fnstcw
jnp
pop
sub
mov
out
mov
mov
sbb
cwtl
adc
xor
testl
cmpsl
sub
sbb
sbb
xchg
idivb
les
and
cmc
push
jmp
pop
cmp
push
dec
loope
or
inc
stos
sub
jp
pop
xchg
scas
neg
pcmpeqb
pop
out
in
mov
cmpsl
pop
xor
xor
in
sahf
test
rcll
xor
push
jno
enter
dec
push
hlt
sahf
mov
jp
push
ss
inc
sbb
loopne
lea
test
mov
or
mov
es
lods
fcoms
push
sarb
jle
jb
ret
fwait
jae
pop
scas
sub
mov
test
pop
mov
xor
hlt
jmp
pop
repz
xchg
pop
jg
xchg
and
loopne
adc
cmp
xor
sahf
and
adc
outsb
imul
fldt
mov
mov
bound
fbld
mov
sub
addr16
ret
cmp
inc
in
cs
jp
xchg
cwtl
mov
aaa
sbb
pop
mov
mov
imull
lock
mov
nop
push
push
cmpl
xchg
ja
repz
mov
loopne
push
push
lahf
sahf
fstpt
int
pop
ljmp
divb
fdivrs
hlt
mov
adc
mov
js
xchg
fincstp
outsl
cli
clc
in
rorb
outsl
add
test
xorl
xor
adcb
xchg
jp
xlat
xchg
or
dec
push
mov
xchg
jb
pop
inc
aaa
jge
aaa
mov
xchg
call
dec
push
xor
js
ljmp
dec
pop
icebp
in
mov
es
sbb
scas
jb
repnz
mov
insb
inc
xor
dec
jnp
jp
jno
cmp
addb
or
inc
adc
loopne
dec
push
pop
je
sub
mov
jno
lea
loope
cmp
fsubs
sub
hlt
xchg
in
mov
dec
pop
adc
test
add
aad
inc
nop
mov
mov
gs
push
pop
std
mov
enter
outsl
lahf
xchg
mov
pop
cmp
mov
xchg
mov
dec
cmp
mov
jns
pop
sti
addb
pop
stc
arpl
sbbb
andb
popa
nop
dec
mov
test
idivb
xchg
pop
push
inc
sahf
mov
ret
fsubp
or
inc
xchg
jecxz
adc
or
cmp
jne
hlt
call
jecxz
mov
lods
dec
mov
insb
lds
mov
mov
push
adc
add
cmpsl
lea
xchg
push
adc
int
inc
popf
in
popf
hlt
into
les
imul
lods
add
push
sub
lret
dec
push
or
inc
mov
loop
out
pop
aad
inc
int
push
addr16
fucom
cmpsb
mov
pop
push
movsl
into
mov
or
andl
adc
test
aas
push
mov
xor
fldcw
fsubl
mov
sahf
jl
adc
dec
std
fcmovnu
sub
sub
cmp
add
repz
test
cmp
clc
loop
dec
lahf
push
push
pop
and
in
test
sub
sbb
push
lahf
adc
sbbb
dec
in
cli
sub
or
ficoms
adc
inc
lea
pop
adc
mov
or
stos
add
xor
xor
and
sbb
dec
int
mov
pop
inc
mov
orb
jno
lds
gs
lcall
in
aas
jmp
call
or
sub
xor
adc
ret
cmpsb
sarl
jecxz,pt
xor
fnstenv
mov
sbb
cwtl
mov
rcr
dec
roll
push
cli
mov
xchg
adc
inc
xor
rclb
push
aam
repnz
test
sbb
and
fadds
mov
ljmp
push
sbb
push
movb
inc
mov
scas
hlt
push
xchg
cs
xchg
imul
sbb
xor
mov
outsl
sub
mov
test
sub
or
popf
stos
or
adc
sbb
js
sbb
mov
sahf
or
pushl
push
push
aas
jg
cmpsl
lock
loopne
rcrl
sbb
fisttps
add
jbe
mov
icebp
adc
cmp
mov
pop
es
loop
mov
jne
scas
inc
jnp
loop
and
sbb
fistps
clc
push
mov
ret
xchg
in
sub
cmpb
push
jbe
adc
cld
inc
cmp
imul
aam
jnp
push
and
or
jl
push
or
stos
cmp
les
add
xor
stc
add
add
jno
mov
out
inc
jmp
add
ljmp
add
or
inc
jno
mov
jno
push
bound
wbinvd
lahf
scas
sarl
xlat
pop
jnp
ud2
pop
leave
push
andb
mov
rep
into
adcl
mov
mov
add
lret
insb
xlat
jb
into
int
std
jle
mov
pop
xchg
mov
jno
push
inc
and
cmp
js
fs
fsubs
fisubs
fnstcw
jl
je
gs
push
pushf
dec
mov
mov
mov
push
inc
inc
cld
xchg
out
sub
pop
imul
mov
mov
scas
jmp
inc
ss
add
inc
inc
mov
or
push
daa
out
add
mov
jno
jb
or
or
xchg
jo
call
shlb
xchg
aad
cmp
into
les
push
in
mov
mov
es
xor
fcoml
push
push
loopne
int3
pop
pop
jbe
inc
ja
mov
jnp
cmp
int
lret
cmp
mov
xor
fisttpll
mov
sub
add
outsb
js
inc
in
loope
mov
iret
shrb
insl
lret
loopne
movsb
fwait
and
mov
add
repz
add
xor
xchg
clc
fimull
inc
push
jmp
int
push
jmp
dec
std
enter
mov
xchg
scas
dec
add
mov
or
adc
sbb
stos
jne
sub
in
out
in
in
lcall
cwtl
aas
xchg
dec
fisubl
jo
mov
sbb
inc
rcl
dec
movsb
nop
mov
mov
xchg
cmp
sti
jo
mov
loope
add
es
dec
push
cmp
sub
sbb
and
stc
adc
mov
pop
mov
jle
outsl
jbe
pop
shlb
push
jb
in
inc
push
stc
je
outsl
or
fcompl
xchg
lea
pop
pop
push
add
dec
sub
inc
xor
rcr
sbb
xchg
mov
inc
leave
dec
imul
ds
add
outsl
in
add
cmpl
sbb
fdivrp
mov
mov
mov
jge
sub
test
scas
dec
loope
scas
pusha
adc
in
push
and
cmpl
dec
sti
xchg
das
jbe
out
sbb
sub
pop
push
mov
sar
sti
inc
out
test
jl
clc
cmp
jne
push
lcall
daa
int3
cs
inc
out
pushl
arpl
adc
dec
out
dec
ljmp
cmpl
in
xchg
out
mov
push
clc
ljmp
icebp
cmp
push
inc
rorl
adc
adc
and
pusha
ficoml
clc
hlt
mov
sub
mov
scas
push
lahf
sub
in
inc
push
sarl
stos
inc
mov
mov
jne
fwait
call
jno
mov
mov
stos
sbb
fidivrl
fisttpll
mov
cmp
insb
dec
sub
test
dec
jl
push
sti
dec
hlt
push
push
in
lret
lcall
xor
test
inc
add
aam
scas
loope
cmc
push
loop
not
inc
fldcw
ret
stos
sub
sarb
jbe
mov
pop
dec
nop
mov
pusha
sub
jle
inc
les
or
into
sbb
and
mov
movsb
sub
xchg
cmp
int
lock
and
idiv
jg
and
cli
test
pop
sub
add
or
sahf
mov
fdivl
roll
pop
in
imul
jmp
xchg
rorb
scas
arpl
out
inc
ss
jmp
outsb
push
das
arpl
arpl
xlat
adc
push
pop
clc
mov
push
push
outsl
adc
cli
js
xchg
call
adc
out
shl
fcomip
jbe
and
int3
out
testl
lea
call
mov
in
loopne
or
lret
jmp
add
cmc
jl
pushf
rcrl
out
jl
in
movsb
sub
push
notb
insl
or
inc
xchg
sbb
cld
adc
fnstenv
xlat
movsb
js
divb
mov
cli
cmp
mov
mov
sub
or
or
jbe
mov
dec
mov
cli
aad
movsb
out
mov
sub
xchg
cltd
lds
mov
inc
scas
sbb
lea
dec
jnp
or
fisttpll
rorl
cmp
repz
loopne
mov
add
aas
mov
movsb
sub
pop
xor
divb
in
out
and
push
jb
xchg
mov
push
cmp
cli
jl
addb
inc
add
inc
mov
insb
pop
dec
dec
pop
push
lock
mov
lret
aam
in
gs
adcb
jo
push
test
jle
shrb
push
setle
hlt
addb
cmp
pop
and
and
lock
sti
out
mov
dec
sub
mov
aad
jle
mov
pop
mov
push
std
shll
orl
or
mov
cmp
mov
ss
or
das
pop
jmp
inc
mov
lea
cli
mulb
jmp
loope
xchg
push
loopne
push
loopne
ret
mov
adc
cwtl
xchg
or
jecxz
popa
out
jg
imul
sbbb
test
daa
je
pop
xor
call
rorb
dec
les
sub
dec
in
mov
pop
insl
mov
xchg
mov
push
divb
lahf
inc
sub
sahf
mov
les
push
xchg
ficompl
cmpsb
imul
loopne
sbb
mov
cmp
ss
test
cmp
imul
scas
insl
das
or
data16
xchg
repz
push
pop
insb
mov
adcb
pop
add
cmp
add
shlb
nop
data16
xchg
aaa
lcall
or
ficomps
inc
sbb
jp
daa
sbb
fistl
and
jo
mov
jne
sarb
orb
push
pop
ud0
xchg
pop
mov
sbb
repz
push
or
sub
pop
lds
cmpsl
out
decb
add
cmpsl
ljmp
mov
xchg
idivl
or
gs
fwait
cs
jae
jo
xor
dec
push
out
in
fdivrs
adc
push
adc
cmpl
jge
stc
lds
negl
jno
and
divl
loopne
jbe
lods
repnz
lock
jbe
out
xchg
fstl
out
cltd
push
jecxz
testl
dec
hlt
ret
ljmp
loop
bound
sbb
cmpsb
mov
pop
cs
add
mov
mov
ficoml
add
push
cmp
and
mov
or
adc
popa
jge
and
imul
fisubrl
fstpt
inc
arpl
adc
jecxz
xchg
jb
loope
in
aas
jl
cltd
hlt
enter
push
fistpl
lea
and
in
mov
sbb
mov
sub
add
sub
test
test
jle
stos
or
insb
cli
insb
psrld
sub
in
xchg
mov
fstps
lret
dec
dec
bound
rorl
mov
int3
icebp
idivb
scas
pop
sbb
pusha
mov
movsl
mov
nop
aas
andb
insl
jl
push
jne
nop
inc
cmp
lds
or
push
jp
dec
add
and
inc
cmpsl
mov
fldt
int
push
imul
rolb
sub
das
mov
sbb
rcll
ja
mov
movsb
jecxz
sbb
sub
hlt
jo
lods
call
mov
repnz
pushf
push
rcll
mov
shr
cld
mov
sbb
lret
outsb
stos
bound
imul
adc
lods
mov
xchg
in
repnz
jle
scas
sbb
in
jle
mov
add
lea
mov
out
int3
sti
cwtl
jp
and
fimuls
mov
rolb
xchg
clc
sbb
mov
into
pusha
bound
mov
mov
sbb
and
add
repnz
jg
lret
dec
out
cmp
shlb
ret
lahf
or
pop
and
xor
jl
cmp
push
rcrb
subl
and
outsb
xor
mov
bound
cld
mov
push
pusha
mov
add
jo
xchg
ret
dec
pusha
pushf
out
int
dec
testl
xchg
inc
pop
out
mov
pusha
sahf
xchg
std
test
or
add
adc
ficomps
jb
sahf
dec
sahf
loop
das
icebp
fdivr
mov
jmp
mov
xor
and
outsl
cltd
inc
jp
lods
dec
adc
je
std
fsub
fisubrl
push
mov
rolb
inc
push
je
or
mov
les
cmp
lret
push
push
loope,pn
and
adc
mov
cmp
sub
cmp
push
jmp
int
sub
xchg
add
loope
inc
xor
aam
cli
adc
clc
xchg
mov
bound
outsb
mov
jne
or
repnz
mov
and
icebp
aam
cmp
add
insb
pop
jo
push
add
mov
or
lret
dec
cmc
rorl
mov
mov
cwtl
push
inc
lods
sbb
inc
xor
adc
mov
imul
out
xor
push
and
bound
jne
rcll
shrl
test
pop
std
xor
pop
mov
rcrb
lea
cmp
xor
and
sub
pop
mov
jmp
leave
aas
fimuls
pusha
cmpsl
insl
pop
lahf
jmp
xchg
sub
fiadds
inc
lret
out
je
mov
mov
xchg
in
cs
pop
maxps
cmpsl
aam
sbb
nop
add
mov
mov
lcall
mov
std
in
xchg
adc
in
test
std
fdivs
lock
jbe
ret
cmc
or
push
xchg
xor
ja
mov
mov
addr16
outsl
mov
ja
leave
or
add
jle
cli
stos
pushf
pop
sbb
push
idivl
or
push
insb
sahf
mov
mov
lahf
icebp
or
inc
push
or
rcrl
scas
popf
nop
out
mov
dec
jl
cmp
jo
jne
call
cmp
cmp
cmpsl
sbb
fstl
cwtl
repz
add
xor
shl
xchg
cmp
sbb
ret
ficoms
dec
in
xchg
fs
ds
push
push
cmpl
fstp
cmpsl
and
mov
ss
sub
mov
pop
xchg
inc
lock
shlb
imul
dec
xchg
push
adc
int
xchg
xlat
out
popf
into
sub
inc
loope
mov
and
and
rcrb
jmp
pop
bound
adc
stos
mov
push
push
push
mov
adc
insl
mov
in
xor
mov
mov
sbb
outsl
push
mov
mov
sbb
inc
fildll
dec
imull
loope
jp
ss
cmpl
sbb
sbb
dec
int
lds
sbb
mov
cmp
repz
dec
sub
subl
inc
in
jb
mov
add
lea
xchg
dec
inc
call
fs
xchg
push
push
push
mov
sub
enter
dec
xlat
insb
mov
xchg
mov
sar
lods
dec
mov
nop
pop
in
add
lods
pop
fnstenv
cltd
add
pop
scas
cmp
dec
cwtl
xchg
outsb
or
cld
adc
scas
push
imul
and
sub
dec
ds
mov
cli
shl
mov
mov
jbe
push
in
mov
push
jno
outsl
int3
mov
repnz
add
ret
inc
icebp
mov
add
mov
cld
pop
cwtl
xor
subl
adc
movb
loope
dec
jnp
bound
xor
pop
int
pop
popa
adcl
cmp
push
mov
sbb
sub
push
inc
xchg
daa
sub
xor
mov
je
fbld
dec
or
push
hlt
dec
or
pop
ret
int3
jnp
les
sbb
fimuls
push
cli
out
aad
xchg
enter
xor
outsl
rorb
out
out
dec
xchg
dec
mov
ds
repz
sarl
pusha
inc
sti
imul
hlt
sbb
add
pop
loope
sub
sub
lea
or
mov
imul
adcb
push
lds
lea
popa
and
repnz
test
xor
pushf
and
enter
mov
rcr
xchg
insl
xor
mov
mov
xor
or
sbb
test
movsl
mov
sar
cmc
sub
in
mov
mov
jp
xorb
and
int
push
mov
push
sbb
adc
mov
cli
xor
scas
fists
xor
call
icebp
push
lret
imul
pop
sub
push
cmpsb
ljmp
cmp
fmull
jge
ljmp
pop
fpatan
lods
jnp
mov
out
push
cmp
aad
mov
test
shl
in
es
enter
xor
dec
and
andb
clc
fcomi
mov
stc
mov
ret
daa
or
rcrb
mov
mov
mov
in
enter
lret
sbb
adc
mov
inc
xchg
push
xchg
in
repz
sub
fs
inc
or
call
out
in
in
lods
jns
ss
cmp
or
ljmp
jecxz
sbb
jo
inc
hlt
jns
jno
inc
sub
dec
or
es
in
out
xor
xchg
lods
shl
js
imul
add
rcr
mov
pop
pushf
xchg
stos
fdivs
aaa
mov
lahf
fistl
test
inc
dec
mov
and
ds
mov
roll
dec
lahf
ljmp
sbb
mov
rcl
dec
push
adc
stos
pop
mov
xchg
mov
in
mov
add
mov
jne
adc
call
out
push
add
outsl
sbb
mov
inc
sbb
callw
mov
pop
mov
insl
push
nop
and
or
shlb
xchg
fwait
pop
and
cmp
lea
mov
jo
pop
lock
sub
mov
insb
std
dec
into
mov
pop
push
int
roll
fwait
push
mov
sbb
call
xchg
push
out
xlat
jge
fldenv
ret
and
xchg
js
pop
cmp
cli
outsb
icebp
dec
cmp
sub
and
sbb
adc
pop
xchg
imul
addb
cmp
mov
inc
divb
clc
jg
xchg
add
cmp
jae
add
rcrb
dec
ja,pt
das
xchg
in
pusha
sahf
add
bound
fcompl
lahf
js
fisttpl
push
aas
out
adc
fidivs
xchg
add
jp
and
movsb
fistps
popa
or
punpckhbw
js
daa
cmc
cli
xor
mov
adc
rorb
jle
incl
cli
rclb
in
cmp
stos
dec
mov
sub
movsb
repnz
sbb
lea
int3
popa
int
outsb
pop
arpl
in
mov
call
pop
sbb
mov
and
scas
ja
pop
or
and
dec
shlb
pop
cld
mov
or
jmp
inc
fwait
sub
lcall
idivl
pop
je
push
ret
aad
loopne
test
pop
adc
mov
jmp
dec
jmp
dec
push
jmp
idivb
loopne
and
mov
iret
pop
pop
jb
dec
mov
test
dec
sub
mov
fisttps
iret
stc
dec
out
adc
popf
outsb
pop
xchg
ret
mov
ljmp
dec
pop
xor
popl
lret
scas
mov
cmpsl
outsb
popf
jp
add
lock
add
gs
sbb
movsb
in
jge
out
push
lret
repz
mov
push
adc
dec
testb
xor
es
call
jne
inc
sub
mov
or
int
call
mov
addr16
push
mov
dec
cmpsl
idiv
sbb
jb
fs
xchg
add
push
xchg
jnp
push
fcmovnb
lahf
push
push
daa
inc
jbe
popa
xor
mov
les
mov
inc
pop
dec
bound
ljmp
dec
pop
dec
dec
jmp
cwtl
inc
fadd
mov
sarl
iret
scas
cltd
loop
inc
push
clc
mov
divb
ficompl
sahf
xor
mov
cltd
in
sbb
and
inc
lcall
icebp
dec
push
or
push
xchg
pop
ret
xchg
cld
test
dec
lea
sub
bound
mov
rorb
lea
loopne
dec
and
repz
movsb
js
xor
mov
cmp
dec
fldt
shll
iret
pop
int3
mov
jle
movsb
sarb
stc
scas
ss
ror
xlat
mov
jmp
loopne
sub
pop
cld
shlb
hlt
movsl
push
fwait
in
icebp
push
cmp
adc
mov
loopne
fs
push
nop
mov
sbb
xor
fisttps
xchg
inc
cmp
out
and
cmp
shrb
xchg
pop
jecxz
push
xchg
leave
push
scas
sub
mov
xchg
sbb
adc
ret
mov
jae
pop
aad
cmpsb
data16
out
in
stos
push
mov
aad
xor
jae
repnz
movl
mov
call
sbb
xchg
xchg
fs
adc
sti
mov
into
dec
movsb
jae
rorl
scas
nop
push
fnstenv
movb
mov
fidivrs
cmp
mov
sti
and
jns
popa
scas
test
mov
idivl
cmp
jae
pop
mov
aam
push
push
add
cmpsb
imul
sub
inc
jae
outsb
xchg
or
les
xchg
scas
repz
int3
shll
jl
cmp
adc
sbb
mov
scas
je
movsb
pushf
jl
inc
lds
lock
bound
aam
adc
jge
inc
out
fadd
ljmp
je
insb
dec
jmp
mov
out
rcll
inc
inc
in
xor
sbb
cmp
or
or
cltd
stos
repz
fdivrl
stos
or
jne
outsb
dec
shlb
jmp
xor
mov
cmova
scas
push
jmp
cmpsb
ret
out
add
out
imul
fnstsw
mov
scas
lods
dec
add
xor
adc
xor
add
lcall
test
mov
sub
adc
call
push
jo
xchg
mov
mov
cmc
test
and
out
stos
dec
outsl
pop
jge
xchg
inc
adc
in
bnd
ja
sbb
mov
ret
xor
loope
cs
in
jbe
daa
scas
jg
push
inc
sbb
daa
push
lret
or
push
jl
push
jb
inc
xor
inc
popa
jle
popa
out
xchg
mov
sub
loopne
dec
cmpsl
sbb
or
cmpsl
mov
sbb
xor
insl
dec
arpl
sub
sbb
mul
xchg
sbb
jmp
xor
jo
popf
dec
addl
scas
scas
add
sbb
sub
xchg
dec
sbb
xchg
outsl
push
dec
sub
or
in
lods
shr
xor
lret
outsl
jnp
push
in
fisttpl
xor
mov
std
jmp
inc
loopne
ss
or
loop
or
xchg
push
add
dec
scas
aas
fwait
sbb
rclb
mov
sub
add
call
pop
scas
into
or
stos
int3
sbb
xor
insb
mov
cmpsl
sub
xor
adc
adc
je
insl
fwait
or
in
in
bound
adc
test
fnstsw
xchg
clc
addl
sub
outsl
daa
jae
cld
cmp
shlb
arpl
sub
ja
sarl
inc
inc
into
loope
in
test
enter
lds
mov
push
pop
mov
fildll
push
and
dec
xchg
sbb
sub
addl
stos
jns
push
imul
sbb
xor
push
adc
mov
int3
sub
es
popa
xor
jp
gs
push
cli
int3
pop
cmp
sub
sysenter
movl
push
clc
and
lret
int
scas
popf
mull
scas
sbb
fisttps
call
inc
xor
fcomps
jecxz
shrb
shlb
fisubl
jmp
stos
push
insb
add
pusha
jae
add
cmp
push
subb
xor
inc
jl
shrb
sbb
sbb
xchg
fsts
or
push
into
loop
ja
push
xlat
mov
xchg
adc
sbb
mov
jl
stos
jmp
push
popa
aam
xchg
mov
sub
pushf
dec
shrb
jmp
push
fs
aas
mov
pop
loopne
add
and
repz
fistpll
pop
fdivr
testl
in
adc
jmp
ljmp
pop
pop
cmpsb
add
pop
xorl
outsl
add
lcall
inc
lds
aad
movsb
rol
rcl
jb
repz
int
cmc
mov
in
mov
adc
mov
adc
xor
cmp
fdiv
sub
push
mov
in
add
and
shlb
inc
das
mov
push
ljmp
ret
push
lds
test
xor
lahf
das
push
lret
sti
xor
cmp
dec
push
out
cmp
arpl
add
mov
adc
or
cwtl
stos
icebp
sbb
push
repnz
mov
add
nop
ret
sbb
jl
test
sti
mov
adc
and
add
jbe
push
inc
call
sbb
cmc
xor
insl
sub
es
add
mov
fldcw
sbb
lods
pop
ja
out
fldcw
mov
subl
adc
adc
cmp
out
out
orl
cs
jmp
into
inc
stos
xlat
fbstp
mov
add
add
fcoms
orb
xchg
loop
mov
dec
inc
push
insl
lahf
orl
cmpsb
or
sbb
sub
push
adc
jbe
pop
ds
js
clc
in
outsl
jbe
test
push
aam
push
xchg
mov
inc
popa
lods
inc
jecxz
push
cmc
jl
xor
cmc
outsb
mov
mov
jp
inc
xor
scas
mov
cmpb
add
aam
mov
insl
push
sbb
push
ret
and
adc
sarb
sbb
push
or
lahf
pop
rclb
mov
lds
out
xor
push
mov
rcr
das
lcall
mov
xor
cmp
mov
mov
jecxz
cmp
and
or
clc
ss
lahf
bswap
dec
pushf
test
mov
nop
loop
and
out
push
and
sbb
notb
testb
and
and
xchg
and
in
and
rclb
or
mov
das
push
mov
mull
lods
mov
mov
jno
push
insb
dec
sub
or
push
add
test
test
inc
mov
arpl
pop
out
cmpsl
sbb
shrb
int
and
cs
shlb
mov
out
inc
jno
inc
mov
pop
std
clc
rcrb
cmpsl
push
cmp
cld
and
add
push
daa
scas
jp
add
aad
iret
push
int3
pop
pop
mov
mov
out
xlat
jo
cmp
lahf
mov
xchg
and
dec
stos
ret
jge
mov
jg
and
inc
pop
loopne
and
cld
jb
sub
lea
sbb
and
fdiv
push
jae
outsb
xorb
inc
lea
push
stos
dec
mov
cmp
inc
or
pop
pop
xor
jmp
adc
dec
push
jne
mov
fstl
arpl
and
xchg
call
cmp
push
push
mov
imul
add
je
ret
aad
andb
cmpsl
mov
jmp
add
mov
loopne
jge
mov
mov
out
outsl
cli
rolb
adc
aam
sbb
sub
cmp
mov
addr16
xor
stos
jnp
pop
jo,pt
repnz
dec
xor
rorl
shll
fisubs
in
rorb
test
test
lcall
flds
lea
sub
sbb
in
push
popa
add
loopne
pop
fstl
sbb
cwtl
jns
aam
jne
cwtl
aam
push
pop
lcall
cwtl
cmpsb
sahf
imul
arpl
arpl
jl
and
or
addl
add
negb
cmp
push
xor
inc
nop
sub
fwait
rcrl
mov
or
push
mov
test
mov
bound
xchg
hlt
test
fdivr
jne
xor
pusha
xor
dec
dec
dec
test
dec
jecxz
mov
arpl
outsl
cmc
aas
fwait
or
sbb
adc
shll
insl
push
outsb
les
inc
lods
in
jmp
mov
jb
xchg
cld
add
sbb
adc
test
push
xlat
cmp
in
pop
fwait
jae
sarb
out
repnz
ds
push
les
shlb
mov
mov
test
jbe
mov
aam
mov
xor
cs
bound
mov
aaa
fsubrs
imul
adc
jae
mov
inc
jmp
cmc
test
mov
xchg
xor
testb
mov
insb
jo
jp
cmp
push
iret
fimull
negl
jle
jnp
cmp
cs
sar
pop
das
adc
pop
inc
inc
nop
stos
xor
or
ret
mov
cmp
dec
das
pusha
sub
cmp
push
ret
ss
enter
insl
fdivrl
call
and
movsb
outsl
ret
ljmp
add
aad
push
or
int3
les
cs
cwtl
jmp
and
cltd
enter
add
sar
outsl
cmp
and
cmp
sbb
sbb
inc
bound
rolb
xor
xor
xor
dec
lods
outsl
push
jmp
push
out
les
push
sub
push
test
xchg
ret
or
cmp
les
xchg
std
sub
push
mov
mov
lds
js
inc
push
push
lods
push
test
daa
adc
notb
addb
adc
pop
sbb
cmp
mull
loopne
js
mov
xor
sub
dec
cmpsb
and
andl
lcall
add
hlt
loope
mov
push
push
xchg
js
rolb
pop
test
lods
inc
push
imul
sbb
or
scas
pop
inc
xor
mov
sub
lods
aam
clc
inc
pop
adc
fists
pop
mov
push
push
jb
adc
push
cmpsl
mov
mov
xlat
xchg
dec
daa
add
cmp
shlb
sub
dec
mov
ret
sbb
push
movb
test
jo
fsubrl
pop
test
push
and
outsb
sti
xchg
push
dec
mov
ss
xchg
dec
insl
pop
and
mov
mov
in
mov
pop
push
sti
and
xor
sbb
cwtl
ret
mov
lret
or
jmp
movsb
push
mov
pop
and
pop
add
push
das
mov
adc
sarl
add
jae
mov
popf
or
add
stos
jne
push
frstor
in
mov
rclb
cld
xchg
repnz
mov
rol
in
cmp
dec
arpl
fdivrs
adc
push
popf
rol
pop
fmul
jns
and
daa
dec
pop
jno
movsb
xor
test
mov
xchg
loop
out
push
lret
loope
pusha
sub
pusha
mov
popa
xchg
dec
xor
cmp
pop
repz
adc
bswap
out
jnp
adc
clc
test
arpl
mov
push
inc
push
adc
out
scas
test
or
and
cmp
bound
lods
inc
fs
xchg
dec
pop
xor
fcoml
inc
mov
imull
cmp
xchg
and
mov
nop
add
fs
cmp
push
enter
jp
in
pop
xchg
data16
push
xor
inc
push
add
rorb
xchg
cmpsl
test
fildl
dec
setno
icebp
sbb
jbe
xchg
lods
hlt
sub
pop
inc
mov
mov
sahf
stc
lds
rcrb
sub
pusha
outsl
movsb
jge
push
mov
repz
stos
xchg
fwait
mov
mov
or
ljmp
jle
or
pop
sbb
cmp
lods
and
xlat
mov
outsb
sub
hlt
in
fcmovnbe
loope
outsl
xlat
outsl
pop
mov
mov
lds
iret
pop
nop
movsb
pop
sbb
or
ss
jg
add
outsb
rcrb
movsl
push
cmpsl
in
dec
xor
mov
minps
push
push
fistl
xchg
aas
add
fwait
sbb
cmp
lods
imul
int3
and
fnstsw
mov
fs
mov
icebp
sbbb
cmpsb
mov
loop
sbb
incb
or
arpl
pop
lods
pop
lcall
js
xor
cld
ret
jns
pop
enter
movl
or
push
aad
pop
jnp
mov
cltd
pop
push
leave
cmp
test
pop
pop
pop
push
hlt
pop
fs
fmul
out
and
jns
pop
mov
scas
pop
subb
xor
jns
xchg
std
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
mov
jbe,pn
movsl
pop
mov
jbe
push
and
dec
jmp
test
std
mov
push
push
ss
scas
xchg
xchg
dec
int
fistps
andl
cmpsl
jo
loop
xchg
rclb
aad
add
inc
push
aas
xchg
adc
outsl
callw
ja
jg
push
sub
adc
pop
mov
mov
mov
jb
les
cmp
popf
sub
lock
xor
xchg
push
inc
sbb
adc
pop
lcall
dec
out
sub
jnp
dec
je
sub
mov
cmp
cld
xorl
push
repz
in
pusha
or
test
push
fdivrs
frstor
mov
test
sub
add
adc
aam
jne
xor
fsubrp
test
inc
cmp
pop
add
and
divl
mov
and
dec
and
mov
out
imul
sti
test
daa
cmp
adc
cmp
mov
and
stos
and
rol
inc
mov
mov
ljmp
outsl
leave
sub
mov
fsubrp
sub
subb
and
pushf
push
mov
cld
call
fidivrl
sti
orl
xchg
test
adc
cmp
and
xor
mov
sbb
sub
into
outsl
cmp
sub
cmp
cmp
in
mov
lds
ljmp
cmp
jp
js
sbb
mov
mov
mov
push
orl
xor
cmpsl
in
stos
inc
push
addr16
or
xor
mov
cmp
push
mov
cmp
enter
push
shll
ret
push
mov
sbb
lret
push
lret
icebp
lods
sti
movsl
mov
ljmp
xor
aad
js
push
pop
jno,pn
dec
pop
call
xchg
imul
jp
fwait
adc
cmpsb
std
add
repz
pop
jmp
dec
scas
lods
fbstp
sub
iret
sub
pop
sbb
fsubrp
inc
mov
es
loope
or
xchg
mov
dec
in
cltd
lock
sub
push
cmc
fldcw
shrb
lret
outsl
in
stc
std
mov
popa
cmp
ret
adc
mov
fisubrs
pop
push
icebp
into
test
pop
sbb
insb
sbb
lret
mov
push
or
mov
push
pop
adc
cmpl
sub
ret
pop
push
xor
lea
push
sbb
jmp
mov
push
xchg
cmp
and
fcoml
rcrl
cwtl
sbb
xchg
rclb
andl
mov
jle
and
scas
fiadds
jle
cmp
leave
shll
stc
into
in
das
xchg
icebp
sbb
inc
mov
in
pop
dec
test
and
add
roll
dec
int3
xchg
gs
pop
enter
lcall
sub
lods
sahf
arpl
and
jmp
enter
inc
hlt
pop
jns
inc
sbb
daa
mov
loope
pop
and
add
xchg
jnp
outsb
icebp
popaw
insl
mov
push
rclb
pop
mov
fiaddl
inc
ds
ljmp
push
xchg
sarl
cmpb
mov
inc
repnz
mov
jle
pop
adc
int3
add
fs
cli
cld
les
and
cld
or
or
cwtl
leave
outsl
cli
repz
dec
mov
and
mov
aam
lds
cmp
pop
sar
ja
fnstcw
sbb
sbb
inc
lods
setne
jns
add
xorl
movsl
in
sbbb
jmp
push
jmp
popf
test
mov
lahf
dec
inc
push
out
rcrl
pop
push
test
sub
push
push
rorb
sbb
sbb
mov
jmp
sub
cmpsb
das
mov
mov
orb
sti
push
or
std
sbb
mov
jl
xorb
les
mov
add
jne
inc
mov
mov
pop
or
notl
and
iret
mov
lret
push
and
jae
cltd
cld
jle
add
cmp
and
lods
sub
fsts
sbb
inc
stc
scas
stc
mov
inc
mov
push
jp
cmpl
testl
fadds
xchg
jp
insb
lds
int3
push
orb
imul
mov
mov
and
sbb
rcrb
das
pop
xor
aas
hlt
sbb
insl
sub
ss
ljmp
and
jg
repz
std
ret
out
pusha
push
push
xchg
and
pop
mov
pop
push
decl
dec
mov
dec
stos
xor
pop
clc
jmp
pop
mov
cmp
jg
xorl
inc
xchg
or
rcll
fcmovu
pop
les
enter
loopne
je
fs
inc
and
lock
lret
dec
adc
mov
add
push
pop
jns
sub
rep
out
mov
mov
nop
push
seta
cmp
out
mov
and
mov
cmp
xlat
mov
fidivrl
rcrb
fwait
push
data16
or
jp
xchg
ja
pop
stos
mov
pop
xchg
xor
loopne
or
in
inc
pop
xchg
mov
int
inc
sub
dec
xor
mov
out
repnz
adc
dec
out
dec
sar
out
sar
inc
sbb
outsl
shrl
fsubrl
nop
mov
aad
mov
ljmp
test
jl
sti
sar
out
cs
ret
nop
in
fwait
sbb
call
jmp
pop
int3
xor
push
mov
inc
mov
cmp
addl
jge
pop
lret
fdiv
lahf
daa
mov
xchg
mov
push
and
add
in
jno
mov
pushf
jle
jp
xor
or
adc
std
inc
or
or
sbb
push
sahf
movsb
push
pop
jg
test
adc
adc
arpl
cmp
popa
add
xchg
jb
addr16
lds
adc
insb
lock
cld
mov
dec
cltd
mov
mov
fisttpll
xchg
xor
sbb
gs
jo
cltd
mov
xor
sbb
subb
mov
sbb
aaa
and
jne
dec
dec
cltd
push
cmc
mov
pop
sub
adc
mov
pminsw
call
or
sub
stos
ljmp
pusha
mov
xchg
mov
test
mov
push
cli
push
rorb
pop
jmp
xor
jg
xor
jl
imul
andb
stc
int
xor
daa
jl
add
mov
pop
xchg
pop
aas
xlat
out
pop
push
push
int
sub
add
jnp
loop
ret
icebp
test
into
or
dec
cmp
xor
push
inc
popa
pushf
fs
popf
cmp
scas
inc
sbb
fimull
out
repnz
push
cmc
jmp
dec
sarb
int3
mov
xchg
icebp
lret
testl
cld
lds
aaa
cmp
jne
inc
or
sahf
ret
stos
inc
jge
or
mov
push
mov
pop
jl
cmp
xchg
test
mov
inc
into
movsb
arpl
and
out
inc
divb
fstl
mov
cmpsl
jl
xchg
divl
push
imul
pop
or
fsqrt
cmp
testb
test
pop
sbb
aaa
or
mov
popf
and
fidivrl
cmp
out
loopne
loop
push
jp
mov
imul
das
push
sbb
popa
pop
add
popa
pusha
push
or
aaa
sbb
into
loop
jecxz
xor
insl
mov
or
shlb
clc
add
inc
cmpb
dec
stos
outsb
sbb
mov
sar
notl
lahf
js
sbb
loope
dec
or
scas
mov
inc
push
cmp
push
pop
das
ret
pop
sarb
mov
push
add
mov
pop
scas
andl
add
jo
sahf
push
pop
incl
xchg
in
test
mov
pushf
dec
in
popf
cltd
add
mov
and
sbb
in
add
iret
cli
sar
lcall
cs
iret
add
stos
jl
jmp
push
sti
das
mov
repz
jp
adcl
xor
cwtl
inc
imul
pop
std
hlt
mov
xor
mov
jae
lahf
movsb
mov
test
hlt
push
push
jge
mov
mov
mov
pushf
mov
adc
add
insb
inc
adc
call
fwait
hlt
push
mov
ret
push
pushf
or
les
sub
cs
mov
fildll
mov
mov
mov
xor
ds
notl
int3
aam
std
inc
xchg
arpl
das
outsb
add
outsl
jbe
data16
lahf
fsubl
inc
cwtl
repnz
jae
xor
dec
data16
xor
mov
xchg
push
into
stos
jge
repz
pusha
fadds
mov
or
add
cs
stc
cmpb
sub
mov
mov
aas
xchg
callw
outsl
xchg
ret
cmp
test
pop
scas
rcrb
push
insl
sub
call
and
out
in
add
loopne
inc
test
icebp
loope
subl
sbb
dec
sub
add
and
into
ss
add
sub
pop
push
pop
rorl
test
daa
add
cwtl
fiaddl
adc
push
arpl
scas
jp
lahf
sub
lret
pop
and
adc
xchg
insl
mov
out
add
call
sahf
and
in
mov
inc
cmp
insl
add
leave
insb
aad
inc
pop
lahf
out
fsubs
mov
push
test
jle
mov
pop
cmpsl
mov
sbbb
insb
scas
and
fimull
loop
loopne
out
insl
jb
movsl
shlb
stc
mov
push
incl
insb
dec
int3
and
cld
push
insb
mov
pop
sarl
fcmove
movsb
test
push
ror
jns
add
mov
dec
scas
mov
lods
rcrl
cltd
ffree
cmp
hlt
jle
sub
xor
fsubrl
sub
movsl
pop
ss
jns
inc
out
mov
scas
or
jns
cmc
imul
pop
out
sub
ja
jbe
imul
mov
lcall
cwtl
leave
dec
daa
pop
leave
pop
xor
loopne
sbb
movsl
xor
sahf
gs
leave
xor
clc
leave
lahf
adc
shlb
ljmp
dec
jae
mov
adc
pop
mov
jns
testl
sbb
lret
int
xlat
lret
sub
daa
xor
sbbl
pop
fwait
popl
xor
dec
sub
xor
icebp
adc
iret
lret
sahf
adc
mov
jp
sbb
dec
cmp
sub
js
push
xchg
pusha
sub
dec
outsl
or
iret
mov
movsb
lock
cmp
out
je
mov
filds
mov
jecxz
imul
dec
mov
xchg
xor
in
in
out
add
mov
testb
test
pop
int3
movb
jg,pn
ss
inc
xchg
aas
and
adc
and
xchg
xchg
mov
jnp
cmp
mov
push
push
adc
sbb
pop
flds
jge
test
sub
clc
cld
stos
lret
and
xor
xchg
iret
jnp
inc
loope
shlb
cmc
mov
imul
push
sbb
les
movsl
leave
jbe
mov
out
inc
push
sar
add
dec
push
sahf
stos
popf
arpl
push
adc
in
imul
xor
shrb
stos
loop
lock
rclb
lcall
clc
sub
sub
cld
rcrb
mov
mov
xchg
add
out
out
lcall
in
and
jo
xchg
cmp
arpl
aas
dec
std
nop
cmp
adc
xor
pop
cmp
shrb
loopne
in
fnstcw
fcoml
not
mov
cmp
lcall
and
nop
rcr
idivb
and
xchg
and
inc
jle
mov
ljmp
push
mov
repnz
xor
sbb
and
or
je
scas
dec
out
sbb
jge
icebp
and
dec
dec
jne
aam
jne
pop
push
dec
push
jmp
xor
mov
arpl
popf
fiadds
mov
or
xchg
mov
adc
sbb
int3
xchg
mov
add
sbb
push
stc
in
lds
xchg
or
pushf
mov
adc
adc
rorl
in
call
ret
jns
test
dec
and
frstor
sarl
mov
mov
cmc
inc
shll
dec
bound
mov
jb
arpl
cmc
jl
sub
jbe
and
xchg
movsl
xlat
add
adc
xor
mov
cmp
aas
push
push
aas
mov
push
pusha
xor
sub
fsubl
mov
pop
fadd
std
xchg
xorb
adc
pushf
imul
rolb
mov
add
shll
ja
pop
push
mov
add
lock
sbb
and
xchg
and
jo
lcall
adc
mov
sub
adc
cltd
mov
pop
rcrl
jecxz
push
xor
or
xor
sub
or
and
arpl
aad
xchg
pop
jbe
mov
sbb
and
push
out
fdivrs
cmp
cwtl
insl
push
push
sahf
outsl
push
dec
sbb
push
xlat
lcall
das
lea
cld
in
add
fcoms
jmp
lds
jg
inc
pop
dec
adc
es
adc
mull
stc
mov
pop
adc
scas
push
mov
icebp
sub
xchg
mov
jne
std
fisttps
xchg
shr
cmp
jo
push
imull
js
mov
movl
cmpl
inc
shl
jecxz
pop
jnp
and
fnstsw
test
in
cmp
dec
movsl
dec
hlt
and
xor
mov
and
pop
sbb
loope
xchg
rorl
jle
adc
sub
leave
cmp
outsl
stc
xor
lret
sti
aam
cmpsl
shlb
and
sub
mov
jmp
and
xchg
xor
idivb
scas
fs
jl
mov
jl
repnz
imul
imul
dec
xchg
push
imul
add
mov
je
push
sub
xchg
addb
addr16
mov
aad
add
mov
xlat
or
data16
or
adc
push
jecxz
jae
mov
int3
sarl
outsb
outsl
inc
xor
sub
jle
pusha
pop
movsl
iret
into
mov
icebp
add
push
pop
add
mov
dec
add
inc
cmp
ja
or
pop
and
inc
inc
movsl
insl
inc
jnp
and
inc
in
lahf
jno
pop
dec
xchg
jbe
dec
adcb
fwait
inc
push
jmp
ret
mov
scas
bound
xor
int3
xchg
divb
call
adc
les
xchg
pop
int3
sbb
or
pop
es
jno
das
mov
mov
arpl
mov
in
cmp
jnp
int3
mov
pushf
fcmovne
loopne
hlt
rcrl
and
inc
cld
aad
mov
adc
pop
pop
sbb
aad
mov
push
push
test
add
push
mov
inc
pop
adcl
lcall
add
in
and
dec
insl
push
in
push
je
add
scas
pop
inc
cmc
pushf
pop
outsl
outsb
add
mov
mov
xchg
bound
dec
pushf
iret
inc
lods
add
pusha
xchg
or
mov
lods
mov
lods
adc
fcoml
lahf
sti
xor
mov
mov
sub
sub
and
mov
mov
jg
pushf
lods
push
sub
push
jb
cs
inc
mov
sub
addl
cld
xor
out
fdiv
xchg
pop
xchg
lods
pop
jnp
mov
cmpl
test
aaa
lcall
pop
lods
pop
inc
mov
pop
pusha
jle
dec
mov
aas
cli
xor
sar
mov
mov
and
mov
cmc
mov
sub
pop
add
inc
ja
lods
fldcw
sbb
sbb
gs
scas
pop
push
or
flds
jle
or
mov
jne
movsl
js
fld
pusha
stos
fcoms
push
dec
mov
adc
sub
add
loope
out
int
fwait
xchg
in
rcrb
pop
icebp
mov
pop
outsl
sub
add
sti
jle
js
xor
sti
bound
fsubl
inc
out
aad
and
ljmp
lahf
jns
xor
cli
add
clc
mov
iret
leave
pushf
icebp
fwait
add
divl
sbb
andb
mov
cmp
fdivrs
lret
sbb
add
sbb
int
out
lahf
adc
sub
cmp
hlt
mov
cmpsl
cmc
lret
fisubl
lret
gs
aam
cmp
lret
roll
xchg
mov
sti
lahf
cmc
pop
cli
js
add
dec
cmpsl
leave
das
jecxz
adcb
rclb
jbe
jns
hlt
arpl
sub
xorl
push
xor
iret
inc
jmp
test
das
cmp
subl
fwait
jg
imul
std
jbe
je
pop
lds
mov
jl
xchg
jb
in
jno
push
ficomps
pop
pop
movsb
or
sarl
shl
in
popa
mov
sub
push
mov
cli
adc
or
jecxz
scas
imul
and
std
cmp
aam
bound
jp
enter
gs
cmpsl
jecxz
and
lds
int3
adc
dec
pushf
les
add
fisubs
mov
add
xchg
xor
daa
add
xor
test
nop
test
sti
pop
fadds
cwtl
mov
pop
push
lock
fdivrs
ficoml
cmp
aas
add
das
repnz
test
repz
mov
sub
inc
mov
lods
popa
mov
lea
mov
rcrl
cmp
dec
adc
shrb
dec
sub
dec
jp
jl
cmp
pop
xchg
loopne
inc
mov
sub
movsl
clc
mov
xchg
jnp
jp
adc
jle
cmp
aad
popf
lcall
das
xchg
ss
sahf
adc
fists
jns
jae
inc
or
faddp
ss
cld
in
sbb
test
out
lods
or
inc
sub
mov
loop
fnstcw
cs
mov
adc
mov
std
xchg
cld
aaa
mov
cmpl
ret
mov
js
cmp
mov
xchg
and
cli
sub
test
and
cmp
cld
fisttps
xchg
sbb
cwtl
jge
sbb
in
enter
jl
into
stos
mov
dec
or
loope
shr
cwtl
sub
dec
ret
add
into
or
push
lds
sbbb
or
nop
hlt
gs
mov
mov
dec
repz
arpl
cmc
ret
loopne
pop
sub
loope
adc
fists
push
fs
loopne
mov
cltd
sbb
cli
add
es
js
iret
ret
xor
enter
or
push
and
mov
outsb
or
fs
mov
mov
mov
or
imul
lcall
jg
sbb
aad
mov
pusha
fidivl
les
test
adc
stos
fisttpl
cs
dec
dec
idivb
mov
jge
pop
notl
int3
jb
push
call
inc
mov
adc
cmp
hlt
jnp
cmp
scas
adc
cmpsl
or
jmp
jae
movsl
dec
xchg
mov
mov
fadds
xchg
pop
scas
xchg
shl
dec
mov
call
pop
cmp
mov
inc
jmp
mov
inc
or
sbb
test
ret
adc
sub
mov
dec
loope
add
ret
xchg
ds
mov
mov
movsb
xchg
xchg
repnz
sbb
mov
js
xchg
pop
rcrb
mov
ret
xlat
mov
pushf
push
jmp
jg
mov
lret
mov
cwtl
dec
xchg
es
xchg
adc
ror
mov
dec
es
xor
imul
mov
cld
sbb
push
sub
xor
loop
scas
jle
push
aad
or
add
mov
and
inc
aaa
in
nop
pop
pusha
dec
sbb
test
pop
lahf
cmp
inc
scas
mov
fcoms
loopne
loopne
scas
mov
stos
fs
leave
insb
pop
mov
push
sbb
insl
sub
fs
pop
jnp
jge
inc
mov
jp
cmpsl
adc
pop
mov
inc
mov
cli
mov
les
mov
pop
jl
lcall
loopne
xchg
cmp
jl
lods
fwait
scas
lods
mov
test
inc
pusha
dec
aas
aam
jno
sahf
sub
cmc
movsb
fnsave
sbb
in
and
xchg
call
pop
icebp
ds
mov
push
pop
and
cli
or
xchg
cmp
out
inc
fmuls
cmpsl
sbb
inc
lcall
fs
or
push
mov
fstp
xor
jg
fadds
aaa
xorb
mov
lret
push
stos
cwtl
lods
inc
nop
test
fwait
roll
jns
sub
add
add
lock
neg
push
add
popa
xchg
jo
out
cmp
mov
cmpsb
xor
mov
adcb
fs
or
test
adc
gs
test
nop
mov
jae
jnp
push
mov
in
mov
aas
imul
aad
into
xor
pop
jp
cli
mov
jp
mov
std
add
data16
inc
ss
int
jbe
and
dec
test
test
xchg
mov
sbb
stc
mov
cmp
jp
adc
pop
push
or
or
pop
adc
xchg
sub
and
sbb
imul
dec
inc
dec
sbb
push
dec
aam
and
shr
push
pushf
mov
sbb
or
and
test
divb
add
fnstsw
ljmp
in
into
fsubs
ja
and
xlat
push
sub
dec
cmp
pop
adc
cmp
and
or
imul
ds
leave
lcall
push
imul
sub
mov
stos
xor
or
xchg
nop
mov
repz
xchg
mov
mov
cli
jno
mov
leave
and
mov
scas
adc
mov
push
and
add
scas
mov
repz
data16
pop
std
pop
and
ja
push
lock
pop
cmpsb
out
adc
add
imul
adc
leave
jl
bound
in
es
scas
gs
jmp
mov
cli
jns
sarl
push
xchg
fadds
jbe
push
xchg
push
push
dec
jne
insb
xor
cmc
mov
xchg
loopne
mov
xor
push
xor
push
push
add
iret
pop
xlat
sub
xchg
andl
inc
xor
inc
mov
inc
lret
or
insl
push
xchg
jne
in
jle
rcll
sub
hlt
xor
pusha
adc
sub
cmp
scas
dec
insl
repnz
mov
xchg
nop
jecxz
add
bound
test
xor
push
xchg
or
add
mov
sub
add
jbe
push
sub
dec
push
push
jnp
ficoml
aaa
sub
decl
cmp
int3
rcr
fptan
mov
adc
movsl
adc
insb
bound
sbb
pushf
cltd
jae
test
mov
mov
pop
cwtl
lock
dec
int3
out
dec
sub
jnp
loop
sub
mov
mov
jecxz
fldt
repz
pushaw
sub
pop
insl
loopne
test
push
pop
push
and
adc
xor
pop
movsl
fisttps
stos
dec
lcall
lea
fst
mov
push
cmp
test
popa
adc
pusha
les
repz
shlb
inc
movsb
call
adc
inc
call
xchg
loope
mov
in
je
aaa
enter
andb
das
dec
loop
pop
ret
addb
repz
inc
dec
xchg
sbb
mov
sbb
xchg
cmpsl
fimuls
out
adc
imul
sbb
cmpsb
imul
aas
stos
jl
inc
and
sub
sti
popf
push
int3
or
sbb
mov
dec
mov
jge
arpl
xor
lcall
dec
cmp
in
xlat
inc
mov
in
xchg
push
mov
dec
dec
jno
sbb
sbb
cmp
dec
push
or
adc
xor
jo
mov
cmp
stos
adc
bnd
push
jg
pusha
shll
jp
popa
xor
call
ficomps
sahf
adc
sbb
jnp
inc
cmc
idivl
test
xlat
pop
mov
outsb
cmpb
cmpsl
push
rclb
xorb
jbe
and
shlb
or
das
jbe
cmp
mov
push
in
enter
aad
jbe
orb
dec
sub
mov
dec
mov
in
mov
cmpsb
lods
bts
or
mov
lcall
daa
loop
jg
sbb
ret
or
pop
subl
sbb
mov
fwait
repnz
jge
xchg
sti
pushf
lea
dec
cmovge
lock
ja
xor
mov
jnp
xor
inc
jnp
dec
out
mov
xchg
inc
fcoml
inc
xchg
jns
add
jnp
aad
ljmp
rorb
rcll
lea
sbb
sub
das
dec
rcrl
shlb
loop
add
es
gs
xor
jo
pop
jmp
sbb
adc
ljmp
or
add
add
imul
adc
cli
ds
fwait
mov
dec
add
mov
mov
je
loopne
faddl
in
dec
adc
icebp
mov
lods
lret
pop
leave
es
and
std
xchg
sub
jns
push
rorl
add
cmpsb
xchg
mov
cmc
inc
mul
dec
das
out
ret
push
sbb
ja
adc
mov
repz
daa
xchg
xchg
mov
ds
ficompl
pop
pop
push
cmpsb
es
push
icebp
push
pop
push
add
dec
sub
xor
xorl
adc
sbbl
iret
cmp
scas
jge
loope
xor
loop
xchg
sbb
outsb
pop
fildl
lods
ret
call
lods
sub
int
jnp
insl
add
imul
push
ds
pop
jo
cmp
mov
mov
inc
adc
and
mov
gs
xor
sub
jno
adcl
inc
outsb
pop
jo
push
stos
cmp
ret
fdivrl
push
jne
lret
dec
xchg
fsubr
cmpl
fldenv
filds
xchg
rcr
pop
incb
les
xchg
insb
mov
push
cmp
mov
pop
mov
sarl
insb
jns
bound
mov
or
orl
leave
data16
pop
xor
loope
and
imul
xchg
sub
shlb
sarl
and
mov
test
sti
cmpsb
neg
push
or
push
test
mov
inc
andl
add
jo
inc
cmp
mov
inc
ljmp
fyl2xp1
mov
push
bnd
mov
jle
in
sbb
adc
in
pop
adc
push
clc
xchg
test
add
stos
stos
je
and
mov
das
cld
aaa
or
leave
push
push
setne
jae
xchg
sti
jle
outsl
add
fdivrs
add
je
loopne
jnp
push
inc
stos
repz
out
add
mov
cmp
mov
sub
xchg
icebp
test
sub
mov
adc
outsb
nop
inc
loopne
mov
subl
mov
sbb
ficompl
jae
push
xor
test
aad
ljmp
cwtl
dec
sarb
cmp
lea
enter
mov
sub
mov
lock
scas
push
popa
lahf
pop
sbb
cmp
divb
mov
mov
mov
enter
ffreep
fldl
jmp
ret
mov
ds
in
fadds
pop
and
push
ret
or
inc
ds
dec
shlb
scas
push
cli
inc
push
out
mov
test
ficompl
lods
ljmp
shrl
addl
inc
adc
test
push
adc
lret
sbb
push
orl
xchg
jecxz
xlat
movsb
pop
sub
xor
nop
jae
push
xor
pop
ss
push
mov
inc
enter
lds
pushf
pusha
sub
sub
adcb
jl
mov
aas
mov
mov
movsb
inc
pop
fsubrs
xor
push
pop
lret
xor
or
iret
pop
setne
mov
shll
inc
jae
fbstp
push
push
pop
ja
jno
stos
or
pusha
dec
xchg
mov
ret
in
jg
mov
ret
xchg
cmp
sub
mov
pop
jno
inc
aas
xchg
lcall
push
js
arpl
mov
cli
int3
nop
mov
jno
mov
fidivrl
xchg
repz
adc
insl
jge
push
dec
push
es
ret
frstor
out
push
outsb
jle
mov
pop
shll
adc
xchg
adc
mov
data16
cmp
or
or
jae
leave
lock
popa
mov
popf
lcall
scas
fistps
xor
pop
mov
sub
cmp
gs
pop
sub
popf
ss
lods
push
lahf
adc
pop
arpl
fsubrl
out
ret
push
test
iret
lcall
rorb
inc
jo
xlat
mov
shl
or
insb
stos
mov
hlt
or
sarl
sub
jecxz
dec
lret
imul
insb
inc
and
stos
xchg
pop
lret
sub
and
fcoms
bound
xorb
inc
enter
scas
mov
add
cmp
and
xchg
xor
lock
ds
dec
xchg
push
mov
adc
imul
xor
adc
sub
add
mov
xchg
add
clc
adc
das
lahf
push
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
adc
call
jno
