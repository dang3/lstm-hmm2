push
xor
call
test
je
push
mov
mov
call
test
jne
cmp
jne
push
push
push
mov
call
test
je
mov
push
lea
mov
call
test
jne
jmp
mov
call
test
jne
jmp
mov
call
jmp
push
push
lea
push
mov
call
push
push
lea
push
mov
mov
call
cmpl
jne
push
push
push
mov
mov
call
test
jne
cmp
je
push
mov
mov
call
test
je
mov
jmp
lea
cmp
ja
movzbl
jmp
nop
sbb
push
pop
adc
cmp
add
add
add
int3
int3
int3
push
mov
push
call
test
je
cmpl
jne
mov
cmp
jne
mov
pop
ret
orb
xor
pop
ret
push
mov
sub
push
mov
mov
mov
lea
push
call
mov
test
mov
je
andl
push
push
push
mov
add
call
mov
test
je
andl
mov
mov
lea
lea
mov
add
call
push
push
call
xor
cmp
jne
lea
mov
lea
call
push
call
test
pop
js
mov
pushl
mov
push
call
mov
cmp
mov
mov
je
mov
push
call
mov
cmp
je
cmp
jne
pushl
lea
push
call
lea
call
xor
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
call
inc
add
jge
push
mov
call
jmp
adc
inc
add
add
push
mov
push
jge
push
call
test
pop
je
mov
andl
test
movl
aam
add
add
push
add
decl
or
inc
adc
adc
inc
test
mov
je
mov
push
call
cmpl
je
mov
push
pushl
add
mov
push
call
mov
lea
call
mov
pop
pop
pop
ret
mov
push
call
jmp
test
add
xor
and
call
mov
ret
pushl
call
pushl
mov
push
call
ret
push
mov
sub
push
push
push
lea
call
lea
call
xor
xor
mov
mov
test
jle
xor
mov
or
push
push
mov
lea
push
call
test
je
inc
inc
cmp
jle
test
je
mov
xor
push
inc
call
test
jne
mov
call
test
je
cmp
jg
cmpl
jg
jne
lea
push
lea
push
call
mov
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
dec
jne
cmp
jne
lea
lea
call
cmpl
jne
lea
lea
call
cmpl
jne
lea
lea
call
mov
mov
add
movl
sub
mov
movl
mov
mov
lea
lea
push
mov
call
test
je
mov
mov
mov
add
cmp
je
cmpl
jne
mov
call
mov
mov
shr
lea
xor
mov
and
inc
shl
or
add
decl
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
xor
inc
pop
pop
pop
leave
ret
mov
jmp
cmpl
je
cmpl
je
cmpl
jmp
dec
je
dec
jne
jmp
dec
je
dec
jne
jmp
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
andl
test
jne
mov
pop
pop
pop
xor
xor
call
mov
pop
ret
mov
mov
push
push
call
test
pop
pop
mov
jne
push
call
pop
andl
lea
mov
mov
push
mov
lea
movl
movl
movb
call
mov
mov
mov
mov
lea
push
mov
mov
movl
call
dec
neg
sbb
inc
mov
je
mov
test
jne
cmpl
mov
je
testb
movl
jne
testb
je
jmp
lea
call
lea
call
jmp
push
mov
sub
mov
push
push
xor
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
cmp
je
lea
push
mov
lea
movl
movl
mov
mov
mov
call
test
jne
pushl
lea
call
mov
cmp
je
mov
pushl
mov
pushl
push
call
mov
mov
push
pushl
pushl
push
call
lea
call
inc
add
call
inc
add
pop
leave
ret
mov
mov
mov
test
je
mov
call
test
je
pushl
mov
push
push
call
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
push
mov
movl
movl
cmpl
je
push
lea
push
call
pushl
call
pop
pop
lea
movl
call
testb
je
push
call
pop
mov
pop
ret
push
mov
sub
push
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jmp
mov
mov
dec
mov
shl
add
add
call
test
jne
test
ja
mov
test
ja
mov
test
ja
mov
call
inc
add
rolb
pop
pop
leave
ret
mov
mov
mov
shl
mov
sub
lea
lea
mov
sub
sub
cmp
jne
decl
mov
mov
lea
mov
call
test
je
cmpl
jbe
jmp
mov
lea
push
mov
or
lock
dec
jne
lea
test
movl
je
push
push
lea
movl
mov
add
mov
push
add
add
inc
sbb
adc
test
js
push
call
test
pop
je
mov
test
je
push
call
test
pop
je
push
call
pop
pop
pop
xor
pop
ret
push
call
pop
jmp
push
mov
push
push
pushl
xor
mov
lea
mov
call
cmp
je
testb
push
mov
je
mov
mov
push
push
push
pushl
push
call
pop
lea
call
xor
pop
leave
ret
push
mov
testb
je
push
push
push
pushl
pushl
push
lea
push
call
mov
add
cmpb
je
xor
push
inc
call
mov
test
je
mov
test
jbe
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
test
push
mov
je
mov
mov
push
call
mov
test
mov
je
mov
push
mov
call
mov
test
mov
je
mov
mov
push
call
mov
cmpl
mov
je
mov
cmpl
je
cmpl
push
mov
je
cmpl
je
push
call
add
test
je
mov
mov
call
test
mov
je
add
mov
mov
mov
mov
add
push
push
push
call
mov
mov
mov
mov
add
xor
test
je
cmp
je
lea
cmp
je
mov
mov
cmp
jne
jmp
mov
mov
add
mov
test
mov
jne
test
je
add
mov
test
mov
je
addl
cmpl
je
cmp
je
cmpl
jne
mov
mov
cmp
jge
cmpl
jne
movl
mov
cmp
jge
cmpl
je
mov
mov
xor
mov
mov
call
test
mov
jne
mov
mov
mov
mov
mov
mov
test
je
lea
cmpl
je
cmpl
je
cmpl
jne
mov
call
mov
push
call
mov
mov
mov
addl
cmpl
je
test
je
mov
mov
push
call
test
je
mov
mov
push
call
lea
call
pop
pop
pop
xor
pop
add
ret
push
call
add
test
je
mov
call
mov
mov
test
mov
je
add
mov
test
mov
jne
test
mov
je
add
mov
test
mov
jne
add
mov
test
mov
je
call
jmp
xor
jmp
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
push
mov
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
mov
push
mov
xor
cmp
push
mov
mov
lea
push
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
call
lea
push
lea
push
mov
movl
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
cmp
mov
lea
mov
mov
mov
mov
movl
movl
mov
mov
je
mov
mov
call
mov
lea
push
lea
mov
push
mov
call
add
push
lea
call
lea
push
lea
mov
mov
call
mov
mov
add
cmp
je
mov
lea
push
mov
push
push
lea
push
push
mov
call
mov
lea
call
mov
test
jne
test
jne
test
js
mov
lea
push
mov
mov
mov
push
push
call
cmp
je
mov
mov
xor
inc
add
sbb
call
push
mov
add
call
mov
cmp
mov
je
mov
mov
mov
mov
mov
push
lea
push
push
mov
call
mov
push
push
push
push
xor
call
add
test
js
cmpw
jne
mov
mov
push
push
push
call
mov
lea
mov
mov
add
add
lea
mov
movl
movl
mov
mov
push
push
mov
call
push
mov
call
test
je
mov
lea
push
push
call
mov
add
test
je
mov
add
push
call
add
test
je
lea
call
mov
cmp
je
mov
mov
push
call
mov
cmp
je
mov
mov
push
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
mov
call
add
test
jne
mov
push
call
add
jmp
mov
add
call
mov
jmp
push
mov
push
andl
push
push
push
lea
mov
call
mov
pushl
mov
push
lea
call
cmpl
pop
pop
jne
xor
lea
call
pop
mov
pop
leave
ret
push
pushl
call
pop
call
mov
cmp
jb
push
push
push
pushl
mov
call
pushl
xor
add
adc
mov
mov
call
pop
mov
pop
ret
mov
test
je
mov
mov
mov
mov
mov
xor
ret
push
mov
sub
mov
andl
push
push
mov
lea
call
mov
test
je
mov
lea
push
lea
push
call
test
js
mov
test
je
mov
test
je
mov
mov
mov
mov
mov
mov
lea
call
pop
leave
ret
mov
push
mov
lea
call
mov
mov
push
add
push
push
call
and
neg
sbb
and
pop
ret
push
mov
push
push
push
lea
cmpl
movl
movl
jne
lea
call
mov
call
lea
call
pop
leave
ret
sub
push
mov
mov
push
push
push
xor
or
mov
lea
jne
mov
mov
lea
push
add
push
lea
movl
movl
mov
call
mov
test
jne
test
jne
mov
push
lea
call
mov
cmp
je
push
push
lea
mov
push
lea
movl
movl
mov
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
mov
mov
push
push
mov
lea
movl
mov
mov
mov
mov
push
push
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
lea
movl
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
mov
push
mov
push
lea
movl
movl
mov
mov
push
push
mov
call
mov
mov
test
jne
test
jne
test
js
mov
test
mov
je
mov
push
mov
call
mov
mov
mov
push
call
test
js
mov
push
push
push
push
call
mov
test
je
mov
mov
push
call
lea
call
lea
call
xor
pop
pop
pop
pop
add
ret
push
mov
and
sub
push
push
push
xor
push
lea
mov
call
lea
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
mov
je
add
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
movzwl
test
je
push
lea
mov
call
add
mov
call
mov
pushl
neg
lea
sbb
call
mov
cmp
je
mov
lea
push
push
push
lea
push
push
call
mov
lea
call
test
js
pushl
pushl
call
cmp
jne
lea
call
mov
cmp
jne
inc
add
fimuls
add
pop
pop
mov
pop
ret
mov
movl
xor
ret
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
jne
movl
movl
movl
mov
test
movl
jne
push
push
mov
lea
push
mov
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
test
mov
jne
test
jne
mov
test
jne
mov
test
jne
push
call
add
pop
pop
xor
pop
pop
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
andl
mov
lea
call
cmpl
je
mov
test
je
pushl
mov
call
mov
mov
lea
call
lea
call
xor
leave
ret
jmp
int3
push
mov
and
sub
push
push
push
mov
mov
test
je
mov
mov
mov
mov
xor
and
or
mov
mov
jne
mov
and
xor
or
je
mov
mov
mov
push
mov
call
test
jne
mov
mov
mov
xor
mov
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
mov
mov
push
push
lea
push
push
push
call
mov
cmp
jne
mov
andl
pop
pop
pop
mov
pop
ret
mov
mov
mov
push
add
push
mov
call
test
je
jmp
mov
cmp
je
mov
call
test
je
mov
mov
push
mov
call
mov
and
add
or
je
cmpl
jne
mov
call
test
jne
mov
mov
mov
mov
mov
movl
movl
movl
push
call
add
jmp
mov
and
or
je
mov
xor
jmp
int3
push
mov
push
mov
mov
mov
push
mov
sub
test
jne
mov
mov
mov
add
push
push
push
call
add
mov
mov
add
push
push
lea
push
call
add
pop
pop
pop
ret
mov
mov
cmp
mov
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
ret
mov
jmp
push
mov
mov
test
jne
mov
mov
mov
mov
add
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
mov
cmp
jge
inc
mov
cmp
jge
xor
pop
pop
ret
mov
jmp
mov
mov
cmp
jae
mov
push
mov
test
je
mov
push
call
mov
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
mov
mov
push
push
call
mov
mov
xor
pop
pop
ret
push
mov
push
mov
mov
mov
lea
push
push
call
test
js
mov
test
jl
cmp
jge
xor
inc
pop
pop
ret
xor
jmp
push
mov
mov
test
jbe
mov
dec
mov
lea
cmpl
je
mov
mov
push
call
mov
mov
andl
mov
test
jne
xor
pop
ret
orl
orl
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
push
push
push
je
mov
push
movl
call
mov
add
cmpl
lea
jne
push
lea
call
mov
push
call
mov
mov
lea
lea
lea
add
cmp
jb
mov
lea
lea
lea
cmp
jne
push
push
push
lea
push
mov
call
mov
cmp
jne
pop
pop
pop
pop
add
ret
mov
jmp
lea
mov
mov
call
add
cmp
jb
mov
jmp
lea
mov
lea
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
mov
call
add
test
je
add
add
cmp
mov
jne
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
movl
je
push
call
pop
mov
pop
ret
push
mov
lea
xor
call
lea
xor
call
lea
xor
call
xor
pop
ret
mov
push
push
mov
movl
movl
add
js
mov
add
add
jne
mov
test
je
push
call
test
pop
je
andl
mov
test
jne
mov
test
jne
mov
test
mov
jne
test
jne
lea
call
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
pop
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
cmp
jge
xor
cmp
jne
testb
jne
lea
mov
mov
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
mov
movb
cmpb
jne
cmpb
jne
mov
mov
lea
push
push
mov
call
test
js
mov
lea
push
mov
push
push
call
add
test
jne
lea
mov
mov
mov
push
push
mov
call
cmp
jne
lea
push
mov
call
call
push
push
push
push
call
orl
mov
mov
test
jne
test
jne
testb
jne
push
lea
movl
call
mov
mov
lea
push
call
add
cmpl
je
push
call
add
test
je
mov
call
mov
test
je
mov
mov
push
call
mov
test
lea
mov
jne
cmpl
je
mov
and
jne
test
jne
push
mov
call
push
lea
movl
call
mov
mov
call
mov
lea
push
lea
push
movzbl
push
push
mov
shr
and
push
mov
push
lea
push
push
mov
push
push
call
test
js
mov
mov
add
test
movl
jne
push
push
push
push
push
push
push
call
add
lea
mov
call
lea
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
testb
je
jmp
int3
int3
int3
int3
sub
mov
xor
mov
add
push
mov
push
push
mov
mov
mov
mov
mov
mov
xor
cmp
mov
mov
je
cmp
jne
movl
xor
test
js
mov
mov
push
lea
lea
movl
movl
mov
mov
mov
call
cmp
je
push
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
xor
jmp
mov
jmp
lea
movzwl
push
call
add
test
jne
cmp
jae
mov
nop
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
add
cmp
jb
lea
mov
xor
mov
mov
sub
mov
lea
lea
mov
movl
movl
mov
call
add
push
mov
mov
mov
call
test
jne
mov
cmpw
je
mov
push
mov
call
add
xor
push
lea
mov
call
add
lea
push
push
mov
mov
movl
movl
mov
movb
fildl
add
lea
push
lea
push
call
mov
mov
add
test
jne
test
jne
test
js
mov
cmp
je
cmp
je
mov
mov
push
push
push
mov
call
lea
call
mov
test
jne
test
jne
nop
mov
xor
jmp
lea
nop
mov
cmp
jb
mov
push
mov
lea
mov
call
lea
call
lea
push
mov
mov
call
mov
mov
mov
mov
push
push
mov
push
push
mov
push
push
push
call
test
js
cmp
je
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
jne
cmp
lea
jne
mov
push
mov
call
mov
push
lea
mov
call
lea
call
cmp
lea
je
lea
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
push
push
push
mov
push
lea
cmpl
movl
je
mov
test
je
mov
mov
lea
mov
push
push
push
call
add
cmpl
movl
je
push
call
pop
mov
test
jne
testb
je
push
call
pop
pop
mov
pop
leave
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
je
cmp
je
test
push
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
xor
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
push
mov
mov
xor
lea
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
test
jne
mov
pushl
mov
push
call
test
mov
jne
push
lea
mov
call
pushl
lea
call
test
pop
mov
je
pushl
call
mov
pop
mov
mov
mov
lea
call
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
mov
lea
push
pushl
push
call
test
mov
jne
testb
je
lea
mov
mov
test
test
mov
movl
movl
movb
mov
push
call
test
mov
jne
push
push
lea
push
or
mov
call
push
lea
mov
call
push
push
push
lea
push
lea
push
call
add
test
mov
jne
push
call
cmp
pop
je
pushl
mov
mov
mov
call
mov
mov
xor
mov
cmp
je
lea
call
mov
pushl
mov
push
call
test
mov
jne
lea
call
pushl
pushl
call
pop
pop
jmp
push
mov
mov
sub
push
lea
push
push
call
mov
test
jne
push
call
test
jne
and
push
push
lea
call
mov
lea
push
push
call
test
jne
lea
push
push
pushl
call
add
test
jne
xor
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
lea
push
push
pushl
call
add
test
jne
cmp
jne
add
xor
adc
ret
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmpl
jne
pushl
lea
call
cmp
je
cmp
je
cmpl
jne
mov
mov
lea
push
pushl
pushl
push
call
test
jne
cmpl
jne
lea
call
lea
call
xor
pop
pop
leave
ret
xor
lea
call
mov
jmp
push
movzbl
push
push
movzbl
push
pushl
mov
call
cmpb
mov
jne
xor
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
mov
mov
test
movl
movl
movl
movl
jne
mov
cmpl
lea
jbe
xor
movl
mov
mov
mov
test
je
call
push
call
add
mov
addl
add
cmp
jb
testb
jne
mov
test
jne
cmpl
jne
mov
mov
subl
sub
mov
lea
sbbl
test
jne
mov
test
jne
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
mov
test
mov
inc
mov
add
push
call
add
test
jne
push
call
add
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
lea
call
lea
call
mov
mov
push
push
push
push
call
mov
cmp
jne
mov
test
movl
jne
add
test
je
mov
call
push
call
add
pop
pop
pop
pop
pop
ret
mov
subl
mov
sub
sbbl
jmp
mov
test
je
mov
mov
mov
mov
movl
movl
jmp
call
push
call
add
jmp
push
mov
sub
push
push
push
mov
lea
push
call
lea
call
fldl
call
fldl
mov
call
fldl
mov
call
fldl
mov
call
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
leave
ret
mov
mov
mov
mov
mov
ret
andl
mov
dec
mov
movl
mov
mov
andw
ret
push
mov
sub
push
push
mov
push
xor
mov
push
lea
lea
mov
mov
mov
mov
call
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
mov
lea
push
pushl
mov
mov
push
call
cmp
jne
lea
call
push
call
cmp
pop
je
pushl
mov
mov
mov
mov
call
mov
xor
cmp
mov
je
mov
push
call
cmp
je
push
lea
lea
mov
mov
mov
mov
call
cmp
mov
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
jne
mov
pushl
mov
push
call
mov
mov
mov
lea
mov
push
lea
lea
mov
call
test
jne
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
mov
lea
call
pop
mov
pop
pop
leave
ret
test
je
mov
push
call
mov
push
pushl
call
test
jne
ret
mov
push
call
xor
inc
jmp
mov
decl
mov
jne
xor
inc
mov
mov
push
call
xor
ret
push
mov
push
andl
push
push
mov
push
call
test
je
andl
push
lea
call
mov
mov
lea
push
pushl
push
call
mov
test
js
mov
test
je
mov
push
push
call
mov
lea
call
pop
mov
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
xor
mov
mov
mov
push
lea
lea
movl
mov
mov
call
cmp
je
mov
push
push
push
call
mov
lea
push
mov
call
mov
add
cmp
jbe
xor
mov
cmp
je
add
add
cmp
jb
jmp
lea
lea
cmp
je
mov
mov
xor
cmp
setne
lea
push
mov
call
mov
cmp
jne
mov
add
mov
je
cmp
fiadds
cmpb
dec
and
int
dec
and
cmp
jne
mov
mov
call
cmp
je
mov
mov
cmp
lea
je
mov
cmp
je
add
mov
call
mov
test
lea
je
testl
jne
cmpb
jne
mov
mov
mov
push
add
call
mov
xor
test
js
mov
mov
mov
xor
mov
call
lea
call
mov
pop
pop
pop
pop
add
ret
pushl
call
pop
lea
call
lea
call
lea
call
cmpl
je
cmpl
je
ret
decl
cmpl
jne
push
movl
call
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
mov
test
je
add
mov
push
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
sub
push
push
mov
xor
push
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
testl
je
cmp
je
cmp
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
cmp
mov
mov
je
cmp
je
add
mov
cmp
lea
mov
jne
cmp
je
jmp
lea
push
lea
call
test
je
jmp
push
mov
mov
mov
push
xor
inc
cmp
movl
mov
mov
mov
movw
jae
andl
mov
pop
pop
ret
mov
mov
push
lea
push
push
push
push
call
add
test
je
xor
mov
jmp
push
mov
mov
push
mov
mov
shr
and
push
push
call
test
js
pushl
mov
push
call
test
js
pushl
mov
push
call
test
js
pushl
call
test
pop
js
lea
push
call
test
js
lea
push
call
add
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
lea
push
call
test
js
pushl
call
test
pop
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
shr
and
push
push
call
test
js
mov
mov
push
and
push
push
mov
call
mov
and
neg
sbb
and
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
add
enter
mov
mov
push
push
mov
push
push
mov
mov
cmpl
mov
jge
lea
call
xor
test
je
xor
test
js
lea
mov
mov
call
lea
mov
call
lea
xor
call
add
mov
lea
mov
mov
lea
push
mov
mov
movl
movl
mov
movl
mov
mov
mov
push
push
call
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
lea
push
push
mov
call
test
js
mov
cmpl
jge
mov
mov
mov
imul
push
push
call
test
js
mov
cmpl
jge
push
call
add
cmp
je
mov
mov
mov
push
push
mov
lea
push
call
mov
cmp
je
push
call
add
mov
cmp
mov
jne
cmp
je
mov
lea
mov
mov
mov
mov
push
lea
lea
mov
movl
movl
mov
call
add
test
js
mov
push
lea
push
lea
push
mov
call
test
js
mov
cmp
jne
cmp
jne
mov
push
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
add
jne
mov
mov
pop
pop
pop
pop
xor
call
add
add
push
mov
sub
push
mov
push
push
xor
push
mov
call
push
pushl
mov
call
test
js
push
lea
push
pushl
mov
call
test
js
cmp
mov
je
push
lea
push
pushl
mov
call
test
jne
push
lea
xorl
mov
call
test
jne
push
lea
push
pushl
mov
call
test
jne
xor
inc
test
movl
movl
mov
movl
movl
mov
je
movzwl
push
push
push
lea
call
pop
pop
push
pushl
mov
call
testb
mov
jne
testb
jne
test
jne
lea
mov
xor
cmpb
jne
cmp
mov
jne
mov
push
pushl
pushl
mov
call
pop
pop
pop
leave
ret
push
mov
andl
test
jne
pop
jmp
push
mov
mov
call
cmpl
je
mov
or
mov
mov
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpb
je
push
push
mov
mov
push
push
call
cmpb
push
je
mov
push
push
call
movzwl
push
push
mov
push
push
lea
movl
movl
mov
movl
mov
mov
call
mov
lea
mov
lea
add
mov
lea
lea
mov
mov
push
lea
xor
mov
push
lea
push
mov
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
cmp
je
mov
mov
cmp
jbe
xor
mov
jmp
jmp
lea
mov
add
mov
mov
test
lea
mov
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
push
movl
movl
mov
call
push
mov
mov
mov
movl
movl
mov
call
lea
mov
mov
xor
lea
mov
add
mov
lea
mov
lea
mov
mov
lea
mov
mov
push
lea
mov
push
lea
push
mov
mov
mov
call
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
test
jne
mov
test
jne
add
jne
mov
sub
jne
pop
pop
pop
pop
add
ret
mov
push
push
jmp
movsbl
and
ret
mov
test
jne
test
je
mov
ret
xor
inc
ret
xor
ret
mov
call
cmp
jae
mov
call
ret
mov
test
jne
mov
ret
and
ret
add
push
xor
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sub
push
mov
push
push
lea
push
lea
push
lea
mov
call
mov
mov
mov
mov
mov
mov
sub
mov
sub
cmp
jne
cmp
jne
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
mov
push
mov
push
mov
push
lea
mov
call
fildl
mov
sub
fstps
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
flds
mov
fld
fdivrp
fxch
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
fidivrl
mov
sub
mov
fstps
flds
fstpl
call
fstps
flds
call
mov
mov
mov
add
mov
fildl
fdivs
fstps
flds
fstpl
call
fstps
flds
add
call
fildl
mov
fdivs
fstps
fldz
flds
fcom
fnstsw
fstp
test
jne
faddl
call
cmp
jl
cmp
jg
mov
mov
imul
mov
imul
pop
mov
mov
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jg
xor
xor
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
push
call
mov
add
add
jmp
jne
xchg
add
mov
test
loope
xorb
add
mov
repnz
add
shll
ljmp
add
mov
sub
push
mov
add
push
push
push
lea
push
lea
push
push
push
push
call
pop
cld
popf
mov
push
add
add
add
mov
jns
add
add
add
add
leave
in
add
aam
jo
xchg
jecxz
add
roll
jo
lcall
incb
shr
xchg
jmp
add
js
cld
in
addr16
add
xchg
add
add
pushf
cmc
popf
sub
pop
popl
push
push
push
push
push
call
insb
rol
xchg
add
add
loopne
out
lds
add
jecxz
push
add
add
rolb
iret
mov
mov
out
lret
pop
pop
mov
sti
add
jmp
andb
add
add
jae
pop
in
sahf
jl
in
lock
lcall
push
push
push
push
push
push
push
push
lea
push
call
add
add
clc
mov
fdivs
add
lds
add
add
test
add
mov
lods
pop
add
add
add
add
cli
add
mov
add
xchg
imul
mov
pushf
sub
pop
push
push
lea
push
push
push
call
jmp
cmpb
add
add
mov
jecxz
add
movb
aad
add
mov
jp
add
add
add
bound
aad
lret
shlb
xchg
add
lcall
call
push
push
push
push
call
add
mov
mov
cmpsb
stos
add
mov
out
leave
fiaddl
pop
popl
jmp
add
mov
mov
jnp
add
mov
aad
ret
add
or
add
pop
add
add
add
add
sub
pop
push
push
push
call
xchg
rcrb
add
cltd
rcrl
add
aad
xlat
push
add
jmp
push
add
add
fiaddl
add
add
testb
bound
add
xchg
add
lcall
daa
pop
add
push
push
push
push
push
call
clc
add
xchg
enter
cld
add
or
bound
lcall
jae
popa
xchg
ret
add
sub
pop
jmp
push
push
push
push
push
push
push
lea
push
push
call
add
mov
jmp
les
jnp
icebp
xchg
xchg
add
rcrl
popf
rcrb
mov
mov
push
shll
jnp
add
int
mov
out
add
ret
push
push
push
push
lea
push
call
pop
jmp
add
scas
mov
jne
jno
add
ret
scas
mov
roll
mov
push
add
mov
pop
mov
push
push
push
call
add
add
add
push
add
stos
add
add
movsb
out
add
out
jns
add
xorl
shrl
std
add
mov
in
mov
add
stc
add
in
add
lcall
lcall
pop
hlt
push
push
lea
push
push
push
call
xchg
jle
add
add
add
pop
add
fldl
testl
mov
in
add
add
cwtl
add
mov
lods
push
add
cwtl
add
data16
add
pop
mov
je
push
add
movsb
add
add
add
popf
pop
push
addr16
test
in
pop
add
add
push
push
push
push
push
push
push
lea
push
push
call
arpl
fsubr
add
jo
add
jl
aad
stos
add
in
sahf
add
loopne
roll
add
in
negl
fsubr
add
push
add
push
pop
add
jl
add
notl
add
lret
lahf
push
mov
add
add
add
xchg
imul
xchg
rolb
mov
mov
fidivrs
add
mov
push
push
push
push
push
call
into
ficoml
push
clc
add
add
outsl
test
iret
jmp
mov
pop
cmpb
flds
sbb
push
push
lea
push
push
push
push
push
push
push
lea
push
call
outsl
add
faddl
push
testb
push
int
add
add
xchg
add
jnp
xchg
cltd
ja
add
add
fiaddl
fdivs
add
add
stc
mov
movl
add
mov
pushf
aad
mov
pop
add
push
push
add
push
xor
add
inc
ror
sub
sub
sub
xor
add
lea
pop
xor
dec
add
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
jecxz
jo
into
roll
popl
push
out
out
enter
in
add
loope
add
add
add
stc
clc
add
lahf
fldl
push
add
add
mov
add
add
add
add
sub
pop
pushl
call
push
push
push
push
push
push
call
fistl
lret
add
add
lret
imull
mov
jecxz
add
into
hlt
add
mov
stos
add
scas
jnp
pop
add
push
ljmp
popl
lods
fcoml
add
fadds
xchg
add
add
faddl
out
out
in
call
push
push
lea
push
lea
push
push
lea
push
push
push
call
lret
lret
push
in
xlat
in
add
int
cltd
in
add
add
lods
add
std
mov
push
stos
add
pop
add
fistps
roll
scas
add
movl
aam
sub
pop
movl
push
push
push
push
lea
push
call
testb
jne
js
call
push
jne
test
add
jecxz
add
outsl
out
add
add
add
xchg
bound
rolb
lret
imul
pop
mov
pop
lods
add
mov
sub
pop
lea
push
push
push
push
push
lea
push
push
push
push
call
xchg
mov
add
pop
popf
add
jb
lods
add
add
enter
lods
stc
add
sub
pop
push
push
lea
push
push
lea
push
lea
push
push
call
std
xchg
addr16
out
fdivs
les
jnp
push
add
cmpsl
add
add
mov
add
cld
add
addb
mov
push
add
aad
ret
mov
mov
add
add
add
fildll
mov
int3
add
add
add
mov
xchg
nop
pop
jp
add
sub
pop
pushl
push
push
lea
push
push
push
call
add
jns
add
add
add
pop
jne
movsb
add
imul
test
hlt
add
std
add
in
push
push
fwait
add
mov
add
into
cli
jae
ljmp
push
jmp
mov
add
add
add
popa
addb
lret
bound
pushl
call
push
push
push
push
call
int3
add
jbe
add
add
ret
repnz
cmc
add
add
fsubr
movsl
nop
lcall
js
add
movsl
add
add
andb
rcll
push
push
sub
pop
pushl
push
push
push
push
push
call
shll
cmpsl
loop
mov
mov
xchg
lret
add
jl
add
add
add
cmc
add
lret
movl
add
lds
add
in
in
lcall
jne
push
push
push
push
push
push
push
push
push
push
call
flds
pop
cmpsl
lock
test
movsl
mov
mov
imul
add
fildl
add
add
add
add
filds
mov
add
movsl
mov
add
loopne
movsl
add
lret
stc
add
sub
pop
call
push
push
sub
not
rol
push
or
not
add
lea
add
add
sub
not
pop
lea
sub
pop
push
push
call
add
mov
sarb
pop
mov
add
cltd
add
add
insb
jo
add
ja
jo
mov
jne
call
push
push
push
push
push
push
push
call
push
add
mov
lret
add
mov
add
add
add
movsb
lret
fs
lret
add
add
fwait
sahf
add
mov
add
xchg
ja
fsubr
js
ja
fildl
add
add
mov
add
out
jle
add
add
xchg
add
add
lds
add
add
loopne
add
mov
add
inc
push
push
lea
dec
not
shr
push
sub
add
xor
not
sub
sub
not
ror
xor
add
pop
sub
ror
inc
pop
push
push
call
test
add
shrb
mov
sti
add
jb
pop
mov
jae
xlat
pop
iret
add
add
add
movsl
mov
pop
add
fildll
in
clc
lcall
push
push
lea
push
push
push
lea
push
push
push
push
push
call
test
push
mov
add
cld
add
fiadds
mov
ja
add
incb
xchg
add
push
loopne
add
fsubrl
add
mov
add
add
mov
mov
add
scas
hlt
jbe
add
pop
lret
add
push
add
mov
scas
add
lcall
rorb
enter
xor
pop
sti
lea
push
lea
push
push
push
push
call
add
pushf
lret
imull
negl
movl
imul
lock
arpl
push
add
fiaddl
add
add
add
add
add
pop
add
jmp
scas
add
add
lcall
push
push
push
push
push
push
push
call
add
jns
call
add
rolb
fiadds
add
xchg
jns
mov
cli
add
rolb
lods
add
loop
fucomp
add
in
pop
add
add
push
push
push
push
push
push
lea
push
push
call
xchg
add
test
lods
add
push
mov
add
pusha
fucomi
mov
add
add
add
add
int3
fiaddl
add
add
lods
add
push
mov
icebp
add
xchg
negl
shlb
sub
pop
mov
add
push
lea
push
call
push
xchg
cli
lret
add
add
shlb
mov
mov
jno
not
add
add
add
js
add
xchg
mov
sarb
xchg
add
add
sub
pop
add
add
push
push
call
faddl
add
add
add
add
add
xchg
arpl
jecxz
test
add
push
add
add
leave
lds
xchg
jecxz
push
pop
add
add
stos
clc
add
jmp
icebp
cli
add
add
jecxz
mov
xchg
sub
pop
mov
push
push
push
call
add
add
add
sahf
pop
fs
addr16
mov
imul
in
add
add
push
movsb
add
jmp
add
pushf
xchg
mov
hlt
cld
mov
out
sahf
add
mov
lcall
xor
push
push
call
lahf
add
jecxz
cmpsl
add
ljmp
insb
rolb
enter
cli
gs
add
add
icebp
jp
mov
je
mov
roll
add
stc
add
filds
add
push
add
fwait
out
add
lea
add
faddl
mov
add
push
push
lea
push
push
push
lea
push
lea
push
push
call
lea
add
lret
push
in
add
push
mov
scas
add
add
push
mov
nop
into
not
loope
add
add
xchg
jge
add
cli
mov
aad
testl
into
mov
add
call
in
loopne
add
push
lea
push
call
arpl
jp
add
add
add
add
add
pop
popf
add
add
rolb
add
add
rcr
roll
repnz
xchg
lcall
je
leave
cmc
addr16
add
nop
jbe
popl
jne
pop
add
mov
jp
insb
scas
movsl
insb
lcall
inc
or
mov
push
call
lahf
lea
mov
mov
add
add
add
cwtl
pop
stc
add
lock
lea
js
lea
out
stos
lods
add
leave
repnz
push
call
lcall
lock
push
push
push
push
call
fdivrl
mov
push
lahf
outsl
add
call
add
add
mov
in
popf
out
add
add
mov
mov
add
jmp
std
add
aad
pop
mov
mov
add
add
test
jle
add
lcall
dec
add
cmp
cmc
aad
mov
dec
lea
push
push
lea
push
push
push
call
add
imul
fnop
fildl
push
clc
add
icebp
into
xchg
ja
push
into
mov
andb
scas
add
jmp
add
add
mov
mov
loopne
lcall
or
push
push
call
int
add
pusha
add
mov
add
sarb
xchg
iret
add
loopne
imul
add
add
pop
add
nop
xlat
pop
mov
add
roll
add
popa
sarl
lcall
les
lea
push
push
push
push
call
add
mov
mov
add
movsl
add
jp
add
push
add
cmc
add
pop
mov
add
xchg
repnz
pop
push
push
push
lea
push
lea
push
push
push
call
mov
add
add
add
mov
add
testl
pusha
add
bound
in
pop
fildl
add
add
jne
add
rolb
test
mov
add
add
aad
pushf
add
gs
add
out
jne
mov
add
lcall
inc
or
mov
push
push
push
call
mov
add
add
add
add
repnz
add
add
add
add
sahf
xchg
add
xchg
in
pop
push
add
add
cmpsb
add
jo
add
push
fisttpll
add
add
int3
ret
mov
add
in
lock
lcall
enter
push
call
add
pop
add
add
xchg
add
push
add
mov
out
mov
add
pop
std
add
add
pop
add
jo
lds
rolb
push
lea
push
push
lea
push
push
push
push
call
add
bound
arpl
fcom
pop
stos
add
push
mov
lock
mov
clc
out
test
add
imul
lcall
movsb
push
push
push
push
push
push
lea
push
push
call
add
add
mov
ja
add
add
iret
lds
mov
mov
popl
add
gs
enter
jns
in
add
pop
popf
mov
jae
sub
pop
pop
mov
push
lea
push
push
push
push
push
push
push
push
call
pop
cltd
pop
jno
add
xchg
add
add
jno
loope
ja
fsubp
mov
add
nop
stos
fldl
mov
in
insb
add
loop
add
pop
push
fsubr
mov
pop
int3
pusha
jae
pop
sti
add
add
add
scas
test
add
sub
pop
add
push
push
push
push
push
push
lea
push
push
call
mov
scas
cmpsl
into
mov
mov
lret
add
add
mov
jo
imul
lahf
shlb
in
add
mov
out
faddl
add
lcall
add
add
loop
sub
pop
add
push
push
call
add
jns
cltd
mov
add
enter
add
nop
add
add
add
stos
add
add
add
not
push
shlb
add
out
in
clc
lcall
ret
leave
inc
add
mov
xor
push
push
push
push
push
lea
push
push
push
call
push
mov
jp
mov
mov
lea
ljmp
je
mov
bound
add
add
mov
int3
rolb
mov
in
loopne
mov
push
push
push
call
push
mulb
loop
add
jno
mov
cld
add
add
loope
mov
add
jle
add
cmpsl
xchg
mov
pop
add
scas
addb
test
add
add
lcall
adc
push
push
push
push
push
push
call
add
add
add
add
jno
cli
cli
testb
arpl
jmp
jbe
sub
pop
add
push
push
push
push
push
lea
push
push
call
pop
mov
add
cltd
jl
add
popf
sub
add
aad
insb
add
call
add
ret
andb
push
jnp
in
lods
in
les
jns
rol
add
jp
fiadds
xchg
push
push
jbe
iret
add
lcall
dec
sub
or
push
push
push
push
lea
push
lea
push
push
call
out
push
sarl
stos
arpl
jle
sti
out
nop
add
arpl
test
add
lods
jbe
fldl
pop
mov
add
lcall
or
push
push
push
push
push
push
push
call
add
push
fs
xchg
add
xchg
rol
add
add
add
fsubr
push
mov
dec
add
add
int
je
add
mov
out
ror
mov
push
pop
add
mov
sub
pop
add
push
push
push
push
lea
push
push
lea
push
push
push
call
repnz
cmpsb
iret
xchg
ror
incb
mov
gs
push
ficomps
pusha
add
pop
stos
add
add
jbe
add
push
pusha
lock
xchg
lret
sbbb
mov
add
mov
mov
cmpb
mov
add
aam
lahf
add
add
in
fcompl
ret
xchg
dec
xchg
inc
lret
lea
push
push
call
add
rcr
add
je
add
clc
outsl
stc
add
mov
cld
add
add
jge
jne
hlt
add
add
jl
out
add
mov
add
cwtl
xchg
add
add
mov
sub
pop
add
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
gs
cld
add
add
xchg
add
gs
fadds
ljmp
pop
lret
xchg
add
jne
add
out
fiadds
add
add
int3
add
jbe
gs
add
lcall
fsubrs
mov
inc
sub
push
xor
add
inc
sub
lea
xor
pop
not
not
xor
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
add
jns
sti
pop
into
ljmp
lret
xchg
add
scas
add
js
lds
push
sahf
jb
fiadds
add
out
lahf
icebp
lahf
add
icebp
imul
add
xorb
add
test
add
sub
pop
pushl
push
push
lea
push
call
arpl
add
add
mov
add
add
add
mov
add
imul
lods
jle
xchg
nop
test
add
arpl
int3
add
xchg
pop
enter
add
aam
add
push
add
fnstsw
add
xchg
add
add
add
roll
push
add
hlt
pop
call
push
push
push
push
push
push
lea
push
lea
push
lea
push
push
call
test
xlat
loopne
jo
add
mov
add
jae
int
mov
jge
cmpsl
leave
lea
mov
test
scas
add
lahf
pusha
leave
jge
xchg
sarl
lret
sarl
add
push
ljmp
mov
add
add
add
add
shrb
in
fcomps
add
mov
add
push
shr
sub
push
or
not
add
sub
not
dec
sub
sub
pop
shl
not
shl
pop
push
push
push
call
andl
xchg
xchg
data16
add
jne
lret
fiaddl
mov
push
scas
jns
add
aad
lds
mov
fadds
idivb
enter
pop
push
push
push
push
push
push
push
lea
push
call
insb
add
arpl
jno
xchg
add
add
hlt
add
add
push
bound
ja
cli
add
add
add
add
andb
add
lret
mov
outsl
fildl
pop
add
aad
in
in
push
push
push
lea
push
push
call
outsl
fcmovbe
add
add
gs
jl
roll
arpl
fstps
add
add
add
add
mov
mov
mov
outsl
xchg
sub
pop
call
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
lea
push
call
mov
movsb
aad
nop
pop
add
add
mov
add
test
lds
mov
jae
add
in
test
mov
jae
add
add
mov
add
in
fdivr
lcall
clc
push
lea
push
push
push
call
pop
add
fwait
add
jo
mov
add
lcall
xchg
insb
out
mov
add
mov
add
add
add
movsb
cmpsb
out
in
lock
push
push
not
xor
pop
push
push
ror
pop
mov
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
pop
add
jmp
std
mov
mov
add
add
push
fildl
popa
pop
add
rolb
movsb
out
shr
lea
add
add
add
cmpsb
scas
pop
add
ret
add
add
add
push
shr
add
shr
pop
mov
xor
push
push
push
push
push
lea
push
call
add
jle
add
jb
push
add
push
cmpsb
int3
call
lcall
movsb
mov
mov
add
add
mov
xlat
fs
cld
add
fidivs
mov
mov
mov
add
sub
pop
add
push
push
lea
push
lea
push
call
mov
add
cmpsb
mov
add
push
xchg
add
add
ljmp
add
gs
mov
add
sahf
mov
add
jnp
add
mov
in
addr16
add
add
rolb
sub
pop
mov
push
push
push
lea
push
push
call
add
xchg
add
add
cmpsl
add
jo
in
cwtl
cltd
cli
jp
pop
cmpsl
out
xlat
add
add
cld
ret
iret
addb
in
jo
leave
add
add
stos
icebp
xchg
xchg
rcrl
xor
push
push
push
push
lea
push
push
lea
push
call
mov
icebp
and
add
jbe
rolb
add
mov
lret
mov
add
add
add
jmp
add
imul
add
cli
scas
add
roll
jno
into
add
in
imul
cmpsb
icebp
ja
add
add
lcall
les
add
push
push
push
push
push
call
aam
mov
add
add
jno
nop
std
faddl
jne
add
scas
fadds
add
addb
addl
call
add
add
mov
mov
add
add
mov
cmc
cld
add
testb
cld
mov
jmp
cwtl
lods
add
sub
pop
add
push
add
add
pop
pop
mov
xor
push
push
call
shlb
add
mov
mov
add
add
popl
add
xchg
lods
xchg
stos
addb
aad
jae
push
pop
add
add
int
in
lret
outsl
add
decb
add
xlat
add
add
add
add
sub
pop
rep
push
push
push
push
push
push
push
push
push
push
call
pop
xchg
add
jecxz
lahf
mov
in
mov
mov
data16
test
add
add
mov
add
movl
rcrb
jo
loopne
roll
jno
add
fldpi
pushf
stc
pushf
int3
pop
mov
push
add
in
add
add
ret
add
dec
and
cmp
mov
xchg
cs
push
push
call
call
xchg
add
test
pop
gs
pop
xchg
call
out
add
xchg
or
push
push
push
call
shll
add
add
std
xlat
cli
add
add
add
add
clc
out
jns
enter
mulb
sti
imul
add
add
jae
divl
mov
xchg
pop
add
lcall
add
push
xor
inc
sub
inc
pop
or
je
mov
xor
push
ror
add
pop
mov
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
lret
adcl
mov
lods
loop
hlt
add
add
rolb
fwait
add
add
lcall
adc
push
push
push
push
call
cld
hlt
add
test
push
add
in
or
fwait
add
mov
popf
sbbl
movsb
mov
outsl
test
add
gs
mov
add
sub
pop
add
push
dec
sub
inc
pop
add
push
push
push
lea
push
call
aam
add
xlat
jl
clc
push
add
jmp
xorb
add
mov
push
add
icebp
nop
add
add
popa
mov
add
add
faddl
jmp
add
add
xchg
lds
in
lock
add
push
push
push
push
lea
push
push
call
out
add
enter
filds
mov
add
lcall
fadds
in
push
mov
jae
add
pop
pop
pop
add
fwait
call
pop
data16
addb
jns
xorb
add
mov
std
rcrb
aam
into
add
arpl
pushf
ja
in
in
lcall
inc
or
or
lahf
mov
push
push
lea
push
push
push
call
scas
mov
iret
add
movl
add
add
clc
pop
add
lods
roll
fcomps
add
push
lea
push
call
add
fldl
add
add
add
add
mov
test
add
add
sar
add
mov
add
pusha
add
fidivs
repnz
add
fsubs
filds
add
jne
lret
add
add
push
addl
push
cwtl
addl
leave
bound
lods
add
sub
pop
add
push
not
pop
add
push
add
sub
add
pop
pop
push
push
lea
push
push
call
testb
cwtl
add
in
pushf
add
pop
pop
add
add
aad
mov
add
push
shlb
fiadds
xchg
add
sub
pop
rep
push
lea
push
push
push
push
call
in
fmulp
std
mov
std
scas
lock
jecxz
push
add
jb
imul
fildl
testb
add
add
repnz
add
loop
lret
lods
aad
mov
push
xchg
add
incb
mov
out
rol
jmp
in
pop
mov
xor
push
inc
lea
pop
or
je
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
add
add
add
nop
add
jnp
cld
cmpsl
xchg
sahf
movsl
mov
mov
fcomps
test
pop
fstpl
sahf
add
testl
ficompl
in
fcompl
sub
push
push
push
push
push
push
push
push
call
mov
add
add
les
add
int3
pop
fisubrs
fdivl
movsb
mov
in
nop
add
push
pushf
sub
pop
add
push
add
pop
rep
pop
push
push
dec
sub
sub
push
or
inc
add
xor
sub
sub
sub
add
not
add
pop
dec
add
pop
push
lea
push
call
add
jp
add
cmpsl
xchg
add
aam
push
add
loop
pop
add
fldl
add
add
jecxz
sub
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
in
push
incb
add
adcl
bound
add
add
add
add
repnz
test
add
mov
sti
add
xchg
add
mov
push
push
call
clc
leave
fsubrl
leave
add
add
push
pushf
mov
add
js
div
in
stos
popl
sub
pop
mov
mov
push
rol
rol
pop
jmp
push
push
shl
add
inc
add
pop
mov
push
inc
sub
not
add
pop
add
push
push
push
push
push
lea
push
push
call
cwtl
jp
push
addb
movl
jae
int3
sti
xchg
jle
lock
add
fs
add
movl
push
add
xchg
mov
mov
mov
pop
add
js
shrl
test
rolb
add
adcl
add
add
roll
push
push
push
push
push
push
lea
push
push
push
push
call
add
lods
roll
add
js
add
add
xor
jmp
add
movsl
xlat
mov
add
ljmp
aad
ja
jae
cmc
add
add
add
add
data16
jecxz
fsubl
add
in
add
sub
pop
push
push
push
push
lea
push
lea
push
push
push
call
add
rolb
aam
add
add
add
push
add
add
lahf
add
jbe
in
gs
add
scas
add
add
sub
pop
push
push
push
lea
push
lea
push
push
push
push
call
add
jo
add
add
add
popf
mov
scas
je
push
jge
gs
filds
mov
pop
add
lock
add
in
std
cli
ror
in
push
test
hlt
ljmp
popl
ficomps
lret
sub
pop
push
push
lea
pop
mov
push
lea
ror
sub
pop
pop
push
shr
pop
pop
push
xor
dec
pop
pop
pop
push
sub
pop
leave
push
lea
push
call
mov
xchg
hlt
add
les
push
mov
sahf
add
lods
add
add
add
mov
mov
loopne
out
add
call
add
jno
in
add
fstpl
popa
mov
add
hlt
add
jo
out
xchg
add
add
push
add
mov
add
mov
ret
push
push
push
lea
push
lea
push
lea
push
lea
push
call
leave
add
jbe
addb
add
pop
add
out
aam
mov
shlb
add
nop
loope
fildl
test
push
add
add
sar
add
lods
push
mov
push
scas
add
loop
add
mov
int
lcall
add
movsl
pop
add
in
push
mov
push
xor
dec
pop
add
push
push
lea
push
push
push
call
jae
in
movsl
add
repnz
jo
test
jl
mov
divb
fildl
std
mov
mov
add
push
push
push
rol
rol
not
sub
pop
push
push
push
push
call
add
gs
ret
add
add
add
sti
mov
add
mov
js
add
movsl
pop
std
xchg
add
add
add
add
add
jae
popa
xchg
push
add
lcall
push
pop
movl
push
push
push
lea
push
push
push
push
push
push
call
pop
lods
mov
mov
iret
xchg
cwtl
add
fsubr
jns
popf
in
xlat
flds
pop
rolb
jbe
stos
shrb
add
icebp
add
cmpsl
push
add
xchg
mov
in
sub
pop
addl
push
push
call
loopne
test
add
sarb
add
in
push
std
jbe
add
push
add
fnsave
add
add
cmc
add
out
add
xchg
add
add
std
fldl
push
mov
add
xchg
add
call
sub
pop
test
je
mov
push
push
push
push
lea
push
lea
push
call
test
mov
mov
ja
add
roll
pop
mov
cmc
mov
out
addl
in
call
push
push
lea
push
push
push
call
popa
jae
add
cwtl
jbe
add
xlat
add
mov
sti
jae
outsl
fwait
jae
lods
add
add
in
add
in
call
pop
push
ror
pop
pop
push
push
push
lea
push
lea
push
push
push
call
add
add
rcll
mov
add
jp
addb
jl
add
push
outsl
subb
add
xchg
imul
pop
add
add
push
add
les
add
mov
add
lds
stc
lea
add
add
add
sub
pop
leave
ret
push
ror
shl
ror
pop
push
mov
push
push
push
push
push
push
push
push
push
call
add
add
cmpsb
arpl
push
ret
add
lds
lea
pushf
xchg
mov
add
add
jb
xchg
jno
loopne
add
xlat
mov
cmpsb
ret
loope
mov
fdivr
lcall
cld
push
lea
push
push
push
push
lea
push
call
ljmp
add
push
mov
mov
mov
push
add
jmp
xorl
in
call
push
push
push
rol
shl
add
lea
pop
push
push
push
push
call
add
insb
jge
add
add
lds
add
add
add
jnp
add
jb
add
push
add
jl
add
add
subl
mov
add
add
jb
add
ret
nop
add
in
hlt
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
add
xorl
push
add
out
add
lret
add
sbb
mov
add
add
faddl
test
sub
pop
testl
push
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
lcall
add
fs
mov
gs
push
add
add
loope
add
sahf
loopne
test
adcl
add
xchg
add
mov
aam
fiaddl
add
add
pop
mov
lods
add
out
mov
shrb
jo
fndisi(8087
add
ja
add
xchg
lods
add
movsb
sub
pop
addl
push
push
push
push
call
in
xchg
add
addl
xchg
pushf
add
add
icebp
imul
add
pop
add
mov
shrl
add
lds
add
imul
add
testl
fiadds
add
add
add
push
mov
in
cli
jb
loop
gs
sub
pop
call
push
push
lea
push
push
push
push
push
lea
push
push
push
call
push
add
mov
mov
add
add
add
sahf
add
jge
rcrb
pop
notl
loopne
jmp
mov
push
jecxz
jmp
arpl
sub
pop
mov
pushl
push
add
shl
dec
dec
pop
push
push
push
push
push
call
add
addb
rolb
add
add
test
call
add
add
iret
popa
out
mov
in
xchg
xchg
xchg
mov
data16
add
jnp
mov
add
jge
sbb
sub
pop
call
push
push
push
push
push
push
call
pushf
mov
mov
jne
mov
add
pusha
add
mov
add
lret
add
mov
stos
addl
add
mov
scas
xchg
add
lea
scas
xchg
imull
mov
lcall
repnz
xchg
jge
divl
in
call
add
test
push
ror
shl
ror
pop
pop
pop
push
lea
push
push
push
push
push
push
call
add
lock
add
add
add
shrb
add
add
lds
imul
test
xchg
pop
in
movsb
add
mov
add
add
add
mov
add
popa
add
add
pop
add
lea
popf
sub
pop
pop
push
add
pop
leave
push
push
lea
push
call
push
add
add
movsb
leave
ret
mov
clc
addb
add
into
insb
add
add
jb
add
jne
add
enter
stos
js
pop
mov
rcll
add
add
mov
loop
in
hlt
lcall
add
push
push
push
push
push
push
call
cld
andl
out
push
test
add
jo
add
mov
lods
in
add
xorb
push
loopne
add
shl
lock
jle
out
add
add
mov
imul
popa
data16
in
mov
outsl
repnz
sub
pop
push
mov
push
xor
dec
pop
add
push
pop
push
push
shl
pop
push
push
lea
push
push
push
call
out
data16
add
je
cwtl
add
add
add
jo
cmpsb
add
add
popf
mov
add
add
mov
je
lock
data16
in
lock
push
push
shr
add
pop
push
push
pop
movl
push
shl
pop
push
call
push
shl
sub
pop
push
push
xor
sub
pop
call
push
push
push
lea
push
push
push
lea
push
call
add
jmp
add
add
add
add
ljmp
add
add
add
add
add
sahf
mov
add
add
stos
mov
sub
pop
subl
cmpl
jne
push
push
push
lea
push
push
lea
push
call
loope
loop
gs
add
in
add
add
ffree
stc
scas
add
arpl
test
add
add
shl
add
add
add
bound
pop
add
add
add
mov
data16
add
add
out
pop
int3
add
sub
pop
pop
push
push
push
push
push
push
call
test
add
leave
cwtl
mov
addl
lock
add
icebp
pop
add
shl
add
pop
fwait
add
adc
ja
lret
add
push
add
out
add
pop
push
sub
inc
xor
pop
pop
pop
push
push
push
call
add
push
add
add
add
mov
in
out
add
add
ficomps
lods
xchg
lods
push
movsb
loop
add
add
mov
lcall
ret
push
shl
add
lea
shl
pop
push
mov
push
sub
inc
inc
pop
add
push
lea
push
call
add
add
movsb
popf
add
leave
add
add
mov
add
add
add
pop
roll
pop
in
add
add
mov
xchg
add
add
aam
ja
mov
xlat
clc
add
add
fiadds
jmp
int
xchg
shr
add
ljmp
gs
add
mov
sahf
jno
sub
pop
push
push
push
lea
push
push
push
push
lea
push
call
mov
fs
jb
add
addb
lret
add
add
mov
pop
add
lods
testb
loope
aad
push
out
add
mov
leave
mov
mov
out
mov
add
nop
rolb
add
jle
add
lahf
add
add
pusha
in
xchg
call
or
pop
add
jecxz
out
out
push
push
push
lea
push
push
call
add
mov
xchg
mov
add
mov
add
push
lods
fildl
mov
stos
aam
lods
mov
mov
test
jae
test
mov
testl
rclb
add
add
repnz
jbe
mov
xlat
subb
mov
out
mov
fcomp
clc
iret
nop
mov
add
ret
int
icebp
add
stos
mov
ja
fnsave
arpl
pop
arpl
add
movsb
pop
mov
in
clc
pop
push
push
push
sub
rol
push
push
pop
add
inc
sub
add
pop
add
add
pop
push
sub
pop
pushl
push
inc
ror
not
pop
call
call
push
push
dec
shr
lea
push
sub
add
lea
sub
sub
sub
inc
rol
pop
shr
sub
pop
push
push
call
add
add
add
clc
xchg
mov
jge
add
cli
xlat
add
js
add
jae
add
add
add
add
add
pop
int3
movb
add
cmpl
addr16
pop
pushl
push
push
push
call
outsl
jo
jge
add
add
add
jno
pop
add
out
add
push
push
add
test
pop
jns
rorb
iret
int
add
add
mov
mov
in
add
add
jle
add
loopne
jbe
mov
call
push
add
pop
call
push
push
add
push
push
pop
add
sub
add
sub
sub
not
pop
sub
lea
pop
push
inc
shr
shr
pop
pushl
call
push
push
push
push
lea
push
call
add
add
out
add
lret
gs
add
out
add
add
add
add
repnz
loope
add
shrb
mov
sub
pop
call
push
push
push
or
not
add
lea
dec
shr
shl
sub
sub
pop
ror
shl
lea
pop
push
add
rol
rol
pop
pushl
push
sub
sub
pop
call
push
lea
push
push
call
add
xchg
add
aam
out
add
pushf
cwtl
add
jns
add
stos
push
add
add
xchg
add
add
add
in
add
fisubrl
int
add
insb
leave
repnz
add
fstpt
fdiv
add
add
pop
push
out
add
hlt
pop
call
push
push
inc
push
or
inc
add
xor
sub
add
pop
shl
pop
push
xor
ror
pop
pushl
push
sub
pop
call
call
push
push
lea
push
push
pop
add
not
rol
sub
rol
not
shr
pop
sub
not
ror
pop
push
push
push
call
xchg
add
add
in
add
sahf
popa
addl
mov
mov
mov
loop
jb
pusha
add
sub
pop
pushl
call
push
sub
shr
add
pop
call
push
push
not
push
sub
add
add
xor
sub
ror
ror
pop
pop
push
rol
pop
pushl
push
push
lea
push
push
push
call
addr16
add
push
call
enter
pop
loope
add
xchg
fcmovnu
mov
jnp
add
cli
add
add
xchg
add
jl
loopne
add
mov
add
add
add
add
add
add
add
lcall
mov
lcall
bound
add
push
rol
pop
call
push
push
xor
push
or
not
add
add
inc
inc
sub
sub
pop
rol
pop
push
add
sub
sub
pop
pushl
call
push
not
rol
pop
call
push
add
pop
mov
push
push
push
lea
push
lea
push
push
push
push
push
push
call
push
mov
add
lods
add
fcmovnb
add
mov
xchg
add
sahf
add
pop
pop
mov
mov
xchg
push
add
xlat
add
push
add
add
add
test
add
lods
mov
loope
in
fdivr
lcall
inc
cmp
call
fnstcw
jne
push
push
push
push
lea
push
call
push
cmpsb
add
jmp
add
add
add
addr16
cmp
mov
add
test
into
add
add
add
leave
add
add
add
js
into
mov
stos
jl
jbe
add
add
add
mov
mov
add
add
ret
call
mov
push
push
call
arpl
test
pop
add
add
add
out
scas
cltd
in
add
push
pop
mov
add
sti
mov
add
mov
push
mov
fsubrs
sahf
add
lahf
in
nop
popa
in
cmpsl
lea
add
popl
sub
pop
shr
add
push
lea
push
lea
push
push
call
push
add
mov
loopne
jmp
add
add
add
movsl
aad
add
add
out
cltd
test
add
add
jecxz
stos
call
mov
add
xchg
mov
fldl
mov
lock
lcall
inc
cld
push
push
lea
push
push
lea
push
lea
push
push
call
mov
fcomip
add
fbld
test
lods
leave
add
jns
add
lds
jne
cli
ret
add
push
rcrb
push
gs
popf
cmpsl
add
stc
cmc
add
xchg
out
cmpb
add
into
cmpsb
add
mov
js
in
fildl
andb
negb
inc
or
shl
shl
xor
pop
add
mov
push
lea
push
push
push
push
push
push
lea
push
push
call
xchg
mov
jmp
fnstsw
int3
add
out
scas
cmpsb
add
cltd
cmpsb
pop
add
loopne
add
xorl
int
add
add
insb
repnz
idivl
sti
push
add
sub
add
lret
jbe
ljmp
add
fcompl
nop
nop
nop
nop
push
not
pop
cmp
jne
push
add
pop
cmp
jne
push
push
push
lea
push
push
call
js
cli
mov
in
pop
add
in
fsubrl
mov
aam
add
add
add
movsl
jle
fldl
jle
add
clc
insb
mov
sbb
push
add
add
mov
jl
rolb
pop
sahf
les
jmp
jo
add
arpl
sub
pop
mov
push
push
push
push
push
push
push
push
call
leave
add
push
add
add
bound
movl
add
add
add
add
pusha
add
aam
add
jmp
add
sbbb
pop
movl
push
lea
shr
pop
jmp
push
xor
add
pop
mov
push
dec
pop
mov
sub
jne
push
push
lea
push
lea
push
call
gs
out
push
push
add
je
jne
call
add
in
cmpsl
add
add
mov
stos
rolb
mov
faddl
jl
aad
negl
xchg
add
in
lret
pop
filds
add
mov
jns
lods
add
add
outsl
mov
add
nop
sub
pop
mov
push
shl
pop
movl
jmp
push
lea
push
push
call
jge
jb
jl
popa
push
jecxz
pop
jno
mov
add
add
call
test
out
sahf
cld
add
jnp
out
add
lcall
add
clc
mov
add
pop
pop
mov
push
jge
sbbb
lcall
inc
cld
push
push
lea
push
call
jmp
cli
mov
jmp
arpl
add
mov
xchg
add
fldl
divb
add
fbld
into
add
fs
add
add
jb
mov
jmp
add
add
hlt
lcall
nop
mov
add
push
push
push
lea
push
push
lea
push
call
add
aam
add
popf
sahf
add
std
fadds
push
cltd
push
add
pop
mov
loope
add
mov
add
jp
mov
xchg
push
pop
jnp
test
call
jle
add
add
shl
add
lret
add
mov
mov
jbe
sub
pop
cmp
jne
push
dec
ror
ror
pop
mov
push
lea
push
call
scas
in
movl
mov
sahf
fucom
pushf
in
add
add
push
add
test
add
stc
mov
add
lret
mov
jne
add
mov
clc
add
mov
incb
cmpsl
lcall
add
loop
add
call
sub
pop
movl
jmp
push
lea
push
lea
push
push
call
add
cmc
add
loopne
add
enter
add
sahf
outsl
mov
in
add
push
test
sarb
in
lock
mov
push
add
pop
cmpw
jne
push
shr
add
pop
mov
movl
push
push
lea
push
push
push
lea
push
push
push
push
call
test
mov
xlat
add
add
add
push
mov
std
outsl
add
pop
xchg
cli
mov
cltd
lret
sub
pop
jmp
pushl
push
shr
add
xor
pop
pop
push
shr
ror
lea
sub
pop
mov
mov
push
push
call
add
in
add
add
add
jno
add
add
add
cltd
push
into
add
add
clc
lcall
push
or
sbbb
push
push
pop
add
sub
xor
rol
dec
sub
sub
pop
add
not
pop
push
rol
dec
pop
push
push
sub
pop
call
push
push
call
lret
jecxz
add
cmc
je
add
push
add
mov
add
xchg
pop
push
add
pop
stc
imul
add
cmc
cmc
repnz
fs
loope
add
js
cmpsl
add
add
clc
lcall
js
int3
fldz
ret
dec
or
add
das
pop
inc
push
push
xor
add
rol
ror
sub
shl
xor
pop
rol
shl
pop
push
push
push
lea
push
push
call
add
addb
add
cmpl
add
lea
sahf
add
xchg
int3
add
add
push
push
push
call
scas
add
add
mov
arpl
add
add
add
jmp
push
jnp
add
push
lea
clc
pop
call
push
sub
rol
pop
cmpl
je
push
push
ror
sub
inc
push
sub
add
ror
rol
sub
inc
pop
pop
push
dec
sub
ror
shl
pop
push
push
push
push
call
addl
pushf
pop
fbstp
loope
mov
add
add
add
scas
outsl
scas
add
scas
add
clc
xchg
jnp
add
xchg
loope
add
add
push
add
lcall
lcall
loopne
add
push
lea
pop
cmpl
je
push
push
shr
lea
lea
push
sub
add
rol
sub
shl
inc
lea
pop
shl
shl
shl
not
pop
push
push
push
push
call
add
add
add
cltd
mov
outsl
lds
insb
pop
pop
push
xchg
add
rol
push
mov
add
pusha
mov
outsl
js
in
xlat
mov
push
mov
add
pop
mov
out
xchg
add
cmpsl
faddl
add
sub
pop
push
push
pop
call
push
push
push
lea
push
push
push
push
push
call
mov
popa
add
add
cltd
enter
add
push
add
add
loopne
add
jle
add
cwtl
add
fcomps
add
add
add
push
add
add
lahf
push
add
add
sub
pop
cmpl
je
push
push
dec
push
or
not
add
shr
sub
add
shl
pop
lea
pop
push
inc
shr
pop
push
call
push
lea
push
push
push
push
lea
push
push
call
mov
mov
jmp
mov
jmp
add
add
add
add
mov
add
pushf
mov
add
add
add
lcall
cmp
rol
je
push
push
dec
sub
push
push
pop
add
rol
lea
sub
xor
dec
lea
pop
inc
pop
push
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
call
xchg
jbe
xchg
arpl
ja
testl
mov
mov
lods
cwtl
add
add
lahf
add
xchg
add
add
add
lret
cltd
js
addr16
imul
xlat
jns
lret
stc
cmpsl
add
pop
call
push
push
lea
push
push
push
push
push
push
push
call
mov
mov
jnp
sahf
xchg
filds
jle
les
add
ret
xlat
xchg
jb
add
jge
add
in
add
jo
iret
mov
add
add
lds
scas
out
sub
pop
cmpl
je
push
push
push
sub
add
sub
shl
sub
rol
shr
add
lea
pop
not
shl
xor
pop
push
push
push
call
mov
pop
add
js
fldenv
test
add
pop
add
add
mov
mov
in
shl
push
aam
add
push
add
add
mov
js
repnz
scas
lret
mov
roll
std
add
jmp
push
sub
pop
push
call
push
lea
push
push
push
push
lea
push
push
lea
push
push
call
mov
leave
pop
mov
cld
scas
pop
ret
js
mov
rolb
lcall
mov
add
js
aad
mov
int3
lret
call
insb
sahf
movsb
mov
int3
mov
in
xchg
fdivl
insb
mov
add
add
lcall
cmp
or
int3
je
push
push
lea
shr
inc
push
xor
add
dec
add
xor
sub
add
pop
dec
dec
lea
pop
push
push
push
lea
push
call
add
je
mov
add
rolb
add
in
add
xchg
add
bound
add
add
stos
push
add
xchg
jbe
jnp
popa
je
add
push
push
ror
pop
call
push
inc
pop
cmpl
je
push
push
xor
xor
push
or
not
add
sub
sub
shl
shl
pop
pop
push
push
push
push
lea
push
push
call
add
repnz
jle
add
add
add
jmp
mov
mov
xlat
popf
outsl
add
add
add
add
jo
lods
add
push
push
lea
push
push
push
push
push
push
push
call
add
mov
bound
in
add
add
add
add
out
filds
pop
push
cltd
jae
stc
enter
imul
ja
cld
add
add
push
mov
jns
sub
pop
call
push
add
pop
cmpl
je
push
push
inc
inc
sub
push
or
inc
add
shl
add
sub
xor
pop
rol
pop
push
xor
pop
push
call
push
push
push
push
call
add
lock
shr
loop
fwait
mov
add
xchg
add
faddl
sarb
clc
mov
arpl
lcall
cmp
test
add
add
ljmp
mov
add
sub
push
and
add
shr
not
shl
sub
sub
pop
sub
lea
pop
push
pop
push
call
push
push
push
push
push
push
push
push
push
push
call
bound
add
mov
add
iret
add
add
pop
mov
mov
shll
add
add
push
add
pop
pop
add
jp
xchg
jb
pop
add
fwait
stc
roll
icebp
mov
add
add
add
mov
testl
ret
test
add
push
push
add
shl
push
or
not
add
ror
sub
shr
pop
pop
push
dec
pop
push
call
push
add
sub
sub
pop
cmpl
je
push
push
lea
inc
lea
lea
push
or
inc
add
lea
sub
sub
lea
pop
inc
inc
pop
push
push
push
push
push
call
fcompl
push
push
push
add
xlat
int
cmpsl
movsb
add
add
add
stos
add
fiadds
push
jmp
addl
add
xchg
mov
push
add
movsl
push
add
movsb
sub
pop
push
push
push
lea
push
push
push
lea
push
lea
push
push
lea
push
push
call
xchg
add
add
lret
add
add
imul
mov
add
add
mov
pop
add
xchg
lahf
jne
loope
in
leave
add
add
add
add
lret
add
lcall
in
add
push
ror
pop
cmpl
jne
mov
push
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
add
add
mov
add
add
cmpsb
movsb
add
mov
addr16
add
pop
add
rolb
mov
not
add
add
lcall
add
add
add
mov
jecxz
push
push
push
push
push
push
call
pop
jns
in
add
mov
push
scas
add
stc
cwtl
add
pop
popf
rorl
pop
add
mov
mov
out
add
add
add
lods
mov
add
xlat
push
jbe
in
loopne
jmp
xor
push
push
push
lea
push
push
lea
push
push
call
stos
xchg
push
jl
lahf
stos
add
into
add
imul
shlb
add
nop
xorl
jge
lods
loopne
jns
loopne
sahf
pop
add
mov
loopne
in
in
lcall
push
not
dec
pop
pop
push
sub
shl
dec
pop
pop
push
add
add
pop
pop
push
rol
add
pop
leave
push
push
push
push
push
push
push
call
in
lret
jae
xchg
loop
out
mov
mov
mov
into
add
xchg
call
pop
ret
push
add
pop
push
push
push
lea
push
call
add
lods
ficoml
loope
aam
mov
add
lahf
stc
add
fcoms
add
add
idivb
rcrb
add
lcall
in
push
lea
pop
add
push
lea
push
push
call
in
mov
jne
lret
add
xchg
cmpsb
add
add
fcmovnbe
add
xorb
add
mov
add
add
pop
add
add
add
sbb
mov
cmpsl
in
sub
pop
cmpl
jne
push
push
dec
rol
not
push
push
pop
add
shl
sub
inc
pop
ror
pop
push
shl
inc
inc
pop
pushl
push
push
push
call
gs
pop
ljmp
popf
ljmp
add
jbe
push
cltd
jns
push
add
push
mov
jb
jle
popa
cwtl
mov
out
xchg
mov
ret
rcr
mov
add
insb
jns
pop
cld
lea
mov
lahf
popf
sub
pop
call
push
sub
pop
push
push
push
push
push
push
push
push
call
add
aam
add
add
add
cwtl
out
add
add
push
pop
add
repnz
data16
fdivrs
push
jmp
lahf
lods
xlat
add
add
push
add
jnp
fdivrl
add
sub
pop
call
push
rol
sub
pop
jmp
cmpl
jne
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
add
fdivrs
add
out
add
add
mov
add
int3
lret
mov
xchg
out
add
fs
add
aam
rclb
out
neg
add
cltd
in
movb
leave
add
hlt
add
in
loopne
mov
call
push
inc
dec
sub
pop
ret
jmp
push
lea
pop
cmpl
jne
push
push
inc
push
or
inc
add
ror
add
sub
xor
ror
add
pop
ror
dec
pop
push
push
push
call
add
add
rcrb
mov
mov
add
add
xchg
add
jo
add
mov
xchg
add
arpl
add
pop
lods
mov
mov
fildl
out
push
filds
add
jne
push
ror
add
pop
call
push
push
push
push
push
push
push
push
call
jns
pop
mul
jo
pusha
add
add
pushf
add
add
test
mov
add
les
add
add
xchg
add
mov
fiaddl
into
out
mov
cld
pusha
add
pop
push
call
push
add
xor
pop
jmp
cmpl
je
push
add
pop
cmpl
jne
mov
push
push
lea
push
push
push
push
call
add
cwtl
loopne
lods
je
enter
js
jb
popa
add
subb
add
add
cltd
mov
ljmp
add
add
test
push
xchg
jae
add
jp
add
in
mov
push
mov
jmp
jno
mov
faddl
add
or
add
push
push
dec
inc
inc
pop
call
push
push
sub
inc
push
sub
add
xor
ror
add
rol
sub
pop
dec
inc
pop
push
shr
shr
pop
pushl
call
push
inc
lea
dec
pop
call
push
push
sub
dec
push
sub
add
lea
rol
not
shl
sub
sub
add
pop
rol
xor
dec
rol
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
pop
mov
sahf
ja
jb
ljmp
fdivrl
add
add
mov
add
faddl
iret
shr
mov
add
scas
out
movsb
mov
sub
pop
pushl
call
push
lea
push
call
add
lods
add
flds
mov
imul
hlt
push
cwtl
mov
add
pop
mov
pushf
xchg
cli
loopne
mov
in
add
cli
enter
pop
call
push
push
push
xor
add
inc
inc
sub
xor
xor
inc
pop
shl
shl
add
dec
pop
push
add
pop
pushl
call
push
add
inc
pop
call
push
push
inc
shl
sub
not
push
xor
add
add
sub
sub
shl
dec
dec
pop
add
inc
pop
push
inc
sub
pop
pushl
push
shr
rol
pop
call
call
push
push
shl
rol
add
push
or
not
add
shl
sub
shr
sub
pop
add
add
pop
push
push
push
push
call
jle
jge
xchg
roll
mov
add
insb
mov
xchg
add
imul
loopne
arpl
jmp
pushf
sub
pop
pushl
push
push
call
movl
pop
add
aad
add
loopne
repnz
add
add
lea
je
add
call
push
push
push
push
push
push
lea
push
push
push
push
call
arpl
jp
stc
ljmp
pop
add
add
mov
push
cwtl
mov
in
ret
push
ficomps
add
aad
add
add
sarb
add
shrb
sbb
jl
dec
add
push
sub
add
sub
sub
add
sub
ror
pop
not
pop
push
shl
shl
shr
not
pop
pushl
push
push
lea
push
push
push
push
push
lea
push
push
push
call
add
test
jl
add
mov
leave
add
add
je
mov
mov
fcomps
fcompl
add
call
push
push
add
push
and
add
sub
add
shr
sub
dec
sub
inc
rol
pop
shl
pop
push
push
lea
push
lea
push
push
call
in
mov
add
incb
pop
out
mov
add
in
icebp
roll
add
out
data16
push
cmpsl
mov
stc
js
jb
mov
shlb
add
pop
sti
add
add
add
scas
jle
add
add
mov
add
mov
fsubp
add
iret
mov
push
sub
pop
pushl
push
push
push
push
push
call
add
add
jne
add
rclb
add
popa
add
filds
lock
test
xchg
out
mov
in
lcall
out
add
call
push
push
lea
push
push
pop
add
add
sub
shl
pop
sub
pop
push
ror
dec
not
ror
pop
pushl
call
push
push
push
push
push
push
push
call
add
mov
add
add
add
movsb
fiaddl
mov
add
rol
add
add
add
add
add
in
in
call
push
push
ror
push
and
add
shr
inc
ror
sub
not
lea
xor
pop
sub
add
sub
pop
push
sub
lea
pop
pushl
push
xor
pop
call
push
lea
push
lea
push
push
push
push
push
call
fimull
fwait
add
hlt
in
mov
add
mov
fs
add
add
add
push
pop
pop
clc
nop
in
xchg
add
into
imul
lcall
shrb
out
xor
jbe
or
not
add
dec
not
dec
sub
add
pop
shr
ror
sub
pop
push
push
push
push
call
cmpsb
roll
pop
mov
xchg
push
fwait
add
jne
xchg
add
je
jo
je
add
enter
lcall
jne
push
lea
push
push
call
out
xchg
mov
xchg
add
jmp
add
add
mov
lock
jnp
leave
popf
add
aam
add
cmpsl
repnz
fwait
mov
sti
add
mov
add
gs
fsubrl
xorl
lds
cmpsl
jne
in
hlt
lcall
jmp
pushf
and
call
les
sub
push
push
push
push
push
lea
push
call
cmpsb
pusha
cmpsb
pusha
add
mov
add
add
add
mov
xchg
mov
add
add
add
add
pop
add
rcrb
into
add
fucom
out
add
mov
fisttpl
call
push
push
not
shl
push
xor
add
sub
rol
add
dec
sub
add
pop
ror
dec
sub
pop
push
sub
ror
pop
pushl
push
not
pop
call
call
push
push
add
add
inc
push
and
add
sub
sub
shl
inc
pop
add
pop
push
add
add
pop
pushl
push
sub
add
xor
xor
pop
call
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
jo
cli
pusha
push
test
out
addb
add
fbld
jl
rclb
mov
add
add
stc
test
add
add
scas
jb
jo
xchg
add
add
in
fstpt
add
push
xchg
add
lds
add
addb
jnp
pop
loopne
in
fcompl
shrb
jnp
stos
push
xor
push
push
pop
add
ror
lea
ror
inc
sub
inc
pop
inc
not
lea
pop
push
push
push
push
call
add
clc
cmpsl
loop
shlb
xchg
jmp
loope
xchg
add
add
add
ljmp
cmc
fadds
movb
mov
lcall
jne
call
push
push
push
push
push
push
push
push
call
add
add
add
testl
jno
fwait
jns
xlat
add
cmpsb
cmc
movb
add
push
xchg
into
add
cmpsb
roll
lcall
shrb
or
push
push
or
inc
add
shl
ror
sub
sub
pop
xor
add
sub
pop
push
push
call
test
add
sti
add
mov
add
mov
xchg
mov
add
add
mov
imul
jbe
stos
pusha
movsl
add
add
add
filds
test
lods
mov
add
lcall
jne
push
add
pop
call
push
push
sub
inc
dec
push
xor
add
lea
add
sub
inc
pop
sub
pop
push
push
shl
shr
sub
push
push
pop
add
add
sub
sub
sub
pop
ror
inc
sub
inc
pop
push
lea
push
push
push
push
push
push
push
call
fistpll
mov
mov
add
fiadds
ljmp
push
add
fs
in
add
adcl
add
rcll
add
jge
jo
add
xchg
enter
mul
lret
mov
cli
add
fnstcw
pop
mov
aam
sub
pop
call
push
lea
push
call
add
faddl
xchg
scas
faddl
call
addr16
push
imul
add
mov
add
add
add
add
outsl
std
add
out
push
imul
jmp
add
jb
mov
mov
pushf
mov
add
sub
pop
pop
push
shr
pop
dec
jne
call
push
push
push
push
lea
push
call
xchg
add
movsl
add
add
add
cmpsb
out
iret
out
push
xchg
add
add
mov
add
sti
stc
scas
lahf
mov
ficoms
pushf
cli
jno
add
xchg
jle
xchg
xchg
lcall
add
add
push
lea
push
push
push
lea
push
push
call
movb
add
add
xchg
add
xchg
mov
cwtl
pusha
push
add
mov
loope
add
add
xchg
add
add
cmpsb
add
jno
add
jb
add
cmpsb
add
loopne
sub
pop
int
push
push
push
push
push
call
bound
test
pop
add
test
add
add
sti
add
add
in
xchg
scas
add
push
xchg
add
add
add
mov
add
xchg
add
add
add
in
in
lcall
pushf
and
ljmp
test
adcb
push
and
add
shl
dec
ror
sub
dec
sub
not
pop
xor
pop
push
lea
sub
rol
rol
pop
pushl
push
push
push
call
add
outsl
pop
ljmp
shl
mov
add
add
data16
mov
in
add
add
push
add
mov
call
in
sub
pop
call
push
not
pop
push
call
push
push
lea
ror
push
or
not
add
ror
sub
dec
pop
lea
lea
not
pop
push
shr
pop
pushl
push
push
push
push
call
add
xchg
gs
out
lea
add
mov
jge
pop
fptan
xchg
fwait
add
jnp
je
data16
test
cmpsb
add
sub
pop
call
call
push
push
call
xchg
xchg
add
jo
pop
stc
xchg
ljmp
add
add
add
mov
add
sti
add
add
into
mov
push
xchg
push
test
testb
jmp
add
add
add
bound
add
lcall
inc
cld
lea
push
push
add
xor
push
push
pop
add
add
shr
sub
sub
sub
pop
lea
sub
pop
push
push
lea
push
push
call
add
mov
lock
sti
sti
jae
mov
bound
mov
lods
add
roll
sti
scas
jp
mov
add
cwtl
add
jp
add
in
lock
lcall
jne
call
push
lea
push
lea
push
lea
push
push
push
push
push
call
add
push
push
outsl
add
push
mov
add
sahf
add
sbbl
add
add
push
add
jo
std
addl
mov
add
add
add
add
leave
add
add
add
push
incb
mov
loopne
in
loopne
lea
push
push
shr
sub
add
not
pop
push
push
push
shr
not
add
pop
pushl
push
push
sub
lea
push
xor
add
add
xor
lea
sub
dec
pop
sub
xor
shr
pop
push
push
push
push
push
lea
push
call
add
out
add
push
add
jge
add
shlb
add
mov
add
repnz
sub
pop
push
call
push
push
inc
push
or
inc
add
sub
ror
xor
sub
sub
rol
rol
pop
add
shr
pop
push
xor
pop
pushl
call
push
push
push
push
call
test
add
test
pop
add
cwtl
cmp
mov
loope
mov
add
add
mov
add
xchg
int
push
pop
data16
icebp
add
xchg
mov
lods
test
loopne
add
add
lcall
call
ror
shr
pop
call
push
push
shl
ror
push
or
inc
add
xor
ror
sub
lea
inc
pop
add
shr
pop
push
xor
sub
pop
pushl
push
xor
add
pop
call
push
lea
sub
pop
call
push
lea
not
pop
pushl
push
push
call
cltd
pop
add
incb
add
cltd
sti
mov
add
out
mov
popl
add
mov
pop
cmpsl
pop
lds
mov
add
add
add
rol
add
pusha
add
mov
add
jmp
testl
pop
mov
jmp
push
push
lea
lea
add
sub
push
and
add
not
inc
sub
inc
pop
ror
not
xor
pop
push
push
push
push
push
push
push
call
mov
mov
iret
fildl
add
jbe
add
mov
add
xchg
clc
bound
cwtl
add
add
xchg
push
insb
stos
filds
sub
pop
pushl
push
pop
call
push
ror
shl
pop
push
push
add
inc
pop
call
push
push
dec
inc
add
push
push
pop
add
sub
sub
add
rol
inc
pop
add
pop
push
push
push
push
push
push
push
call
cmpsb
lea
jnp
add
jecxz
movsl
int3
mov
lods
stc
mov
add
addr16
gs
mov
lcall
jne
push
inc
sub
pop
call
push
push
push
push
push
lea
push
lea
push
call
mov
in
mov
xchg
add
fldcw
sahf
ret
push
clc
add
jmp
push
add
mov
mov
add
add
nop
scas
mov
add
mov
pop
mov
cmpsb
add
fnstenv
pop
push
push
push
push
push
lea
push
push
push
push
push
call
lahf
fwait
lret
leave
fisttps
cli
pop
sti
add
add
arpl
cmc
mov
insb
int
nop
sarb
mov
add
push
xchg
movsb
icebp
bound
jae
add
add
lds
add
pop
call
push
sub
rol
pop
leave
push
not
inc
pop
add
pop
push
add
shr
pop
pop
pop
push
shr
add
ror
pop
xor
push
xor
pop
inc
ret
push
add
pop
leave
push
push
lea
push
push
push
push
push
call
add
add
in
add
add
loope
add
into
add
outsl
add
loopne
sti
std
add
loopne
add
xchg
pop
lds
add
add
add
push
add
pop
iret
add
mov
fs
in
in
ret
push
push
push
push
push
call
push
fsubr
push
pop
repnz
jbe
in
add
add
addb
add
mov
pusha
add
cmpl
fwait
sti
addl
xorl
push
cmc
jne
pop
pop
sub
pop
push
push
push
call
add
mov
sub
pop
loope
add
repnz
add
mov
test
add
add
int
add
fldl
add
iret
xchg
stos
jb
mov
popf
xchg
add
testl
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
add
je
scas
aad
mov
add
jp
mov
add
test
frstor
test
fldcw
jne
push
jecxz
in
cld
cltd
add
add
lret
add
lds
jno
add
add
push
int
pop
add
pop
add
lock
lcall
jge
add
test
add
add
push
lea
push
push
push
push
push
push
push
lea
push
call
clc
add
cmc
xchg
mov
addl
lds
xchg
add
add
mov
jnp
add
sub
pop
jmp
push
push
push
push
push
push
lea
push
push
push
push
call
pop
out
add
pusha
add
add
add
add
lcall
scas
mov
jnp
add
add
out
addl
mov
add
flds
test
fiadds
cmpsl
jae
jecxz
pop
add
add
pop
mov
push
dec
pop
and
push
lea
rol
shr
rol
pop
xor
push
lea
push
push
push
push
call
add
bound
mov
pop
jns
sti
mov
add
pop
leave
orl
add
cwtl
shl
lcall
add
gs
sub
pop
xor
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
jmp
add
stc
mov
xlat
cmc
popf
mov
jne
arpl
fists
add
add
jbe
scas
add
stos
add
cmpsl
add
xchg
int3
sub
pop
add
xor
push
lea
push
lea
push
lea
push
call
lahf
les
mov
out
add
mov
cld
add
xchg
add
add
repnz
in
lahf
enter
lods
sub
pop
dec
push
push
lea
push
push
lea
push
push
push
push
push
lea
push
call
add
mov
addr16
xchg
push
cli
add
mov
push
mov
mov
mov
push
sti
leave
jmp
ficompl
add
int3
add
mov
xchg
add
add
into
mov
repnz
in
loopne
roll
mov
mov
mov
add
lcall
jmp
push
lea
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
fisubrs
mov
push
add
iret
hlt
mov
fiadds
shlb
add
pushf
mov
push
add
lods
addb
sub
lcall
js
add
push
lea
push
call
add
add
add
mov
mov
lcall
push
ljmp
add
xchg
cmpsl
add
add
add
pop
leave
push
add
add
add
mov
add
add
jnp
leave
xchg
add
add
in
clc
pop
sub
push
rol
pop
pushl
pop
push
lea
add
lea
pop
sub
cmp
jne
push
shr
dec
pop
mov
push
push
push
call
test
out
je
add
int3
add
adcb
add
sahf
mov
cmpsl
js
or
pop
add
push
faddl
dec
cmp
jmp
pop
mov
push
push
push
lea
push
push
push
lea
push
call
push
add
mov
addl
xchg
add
add
iret
shl
pop
add
popa
jle
pop
insb
add
add
add
movsb
fdivrl
lcall
je
pop
fs
push
add
loope
enter
add
in
shr
push
shl
pop
add
push
push
push
push
push
push
call
add
idivb
add
stc
add
sti
add
imul
add
pop
push
icebp
add
je
add
negb
cld
add
mov
add
pusha
mov
mov
movsb
add
flds
pop
add
in
call
sub
push
lea
push
push
lea
push
call
add
fs
jl
add
popf
test
add
jmp
mov
cmpsl
bound
in
add
jne
cld
add
aad
pop
faddl
add
and
into
lea
in
lock
pushl
pop
push
push
push
call
arpl
in
add
mov
data16
mov
mov
loopew
xlat
add
fadds
xchg
lods
mov
mov
add
push
add
addl
xchg
leave
out
scas
add
pop
jl
mov
add
lds
lods
in
add
lcall
jmp
incl
add
rol
loop
sub
sub
pop
sub
push
dec
ror
add
shr
pop
cmp
jne
leave
push
push
push
push
push
push
push
call
add
stos
cmc
add
fwait
out
lcall
push
mov
out
sti
add
lret
mov
add
ja
loope
js
mov
add
add
add
push
push
push
push
call
add
hlt
jp
movsl
mov
mov
add
add
pop
add
push
mov
test
jp
filds
jle
loope
add
add
idivb
lods
out
fnstcw
insb
add
mov
push
push
push
push
push
lea
push
push
push
call
sahf
mov
imul
lods
in
movsb
add
add
add
add
add
divl
add
add
lods
lods
add
cmp
add
cld
push
push
push
push
lea
push
push
push
push
push
lea
push
push
call
mov
pop
fcompl
rcl
mov
shll
fldenv
add
pop
add
mov
sbbb
insb
add
mov
add
xlat
into
stos
mov
adcl
mov
add
xchg
lods
add
in
fdivr
lcall
push
push
lea
push
push
push
push
push
lea
push
push
call
add
jecxz
xchg
add
add
add
incb
nop
add
add
add
xchg
jb
add
loope
add
xchg
sub
pop
push
push
push
lea
push
call
add
jne
mov
imul
jge
addl
add
add
add
mov
stos
bound
add
xchg
xchg
mov
xchg
in
clc
pop
push
push
push
push
push
call
add
fs
add
add
lea
mov
fcmove
add
add
in
add
add
lcall
pop
or
push
push
call
repnz
mov
xchg
add
enter
add
lods
movsl
add
imul
loope
shrb
jle
sahf
lds
add
add
ja
lahf
add
sub
pop
lea
push
dec
pop
sub
push
lea
shr
pop
mov
push
lea
push
push
lea
push
push
push
push
push
call
lahf
add
icebp
lods
out
add
int3
add
add
add
add
out
add
pop
add
mov
mov
add
pop
shr
add
push
push
push
push
push
push
lea
push
push
call
add
add
leave
push
add
push
push
mov
sti
add
fildl
call
add
scas
rolb
orb
mov
fdiv
in
add
xchg
mov
add
jbe
add
xchg
std
int3
xchg
leave
xchg
sub
pop
mov
add
push
inc
sub
ror
pop
mov
push
lea
push
lea
push
push
push
push
push
push
push
push
call
jmp
add
mov
pushf
shl
add
push
add
jns
aam
cmc
call
pusha
repnz
lcall
adc
mov
rcr
popf
jnp
mov
add
mov
aam
out
ret
sub
pop
add
xor
push
shl
dec
sub
shl
pop
mov
and
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
mov
imul
popa
stc
into
add
hlt
cli
loop
add
add
add
clc
mov
scas
add
into
cli
les
fs
filds
cmpsb
add
fisubrs
jmp
push
int3
pop
xchg
add
rolb
add
stos
loope
push
sub
pop
rol
push
dec
inc
dec
pop
rol
push
push
lea
push
lea
push
push
lea
push
call
add
add
pushf
cltd
add
add
add
jecxz
push
add
add
jbe
fistps
data16
mov
jmpw
add
add
mov
add
test
cld
add
cmc
add
cmpsb
add
sub
pop
xor
push
xor
inc
pop
inc
cmpb
jne
push
push
push
lea
push
push
push
push
push
push
push
call
add
pop
add
mov
mov
jo
mov
cmc
add
add
add
js
add
fistpl
push
xlat
cmc
test
lock
add
add
fs
in
add
mov
imul
push
push
push
push
push
call
add
mov
jno
ret
add
out
lds
xchg
lret
aam
add
mov
pop
aad
mov
pop
xchg
add
add
loope
jbe
add
jnp
add
inc
or
test
add
push
push
push
push
push
push
call
outsl
xchg
fcompl
add
add
cwtl
add
mov
add
add
add
add
lcall
jmp
data16
add
ja
xchg
add
add
imul
add
lcall
ret
adc
lea
push
push
push
call
add
mov
sti
add
ja
jl
jae
fiadds
loop
in
add
cwtl
add
add
add
mov
lock
cmpl
jne
xor
push
pop
pop
pop
push
xor
add
pop
pop
push
sub
dec
pop
pop
push
sub
not
pop
pop
push
push
call
add
imul
add
movsb
mov
add
fldcw
out
add
add
int3
test
ja
cmpsb
jae
add
add
rolb
push
int
add
add
call
mov
add
push
add
addl
stc
jo
sub
pop
leave
push
push
lea
push
call
add
add
mov
mov
outsl
mov
add
insb
add
in
js
add
ret
mov
push
shl
xor
pop
add
push
lea
lea
pop
mov
push
push
dec
rol
inc
dec
pop
mull
push
lea
push
lea
push
push
push
call
pop
lret
pushf
scas
add
cmpsl
add
add
testb
add
add
sahf
sahf
add
loopne
add
mov
roll
leave
cmpsb
movl
push
outsl
xorb
mov
sub
pop
pop
push
sub
ror
pop
call
push
inc
lea
rol
add
pop
push
push
shr
shl
shr
pop
call
xor
push
lea
push
call
add
xchg
add
icebp
mov
add
add
add
xchg
xchg
lcall
add
je
addb
jl
jp
imul
roll
shr
mov
fs
add
in
clc
pop
pop
pop
push
lea
push
push
lea
push
push
push
push
call
add
cmpsl
jns
add
sbb
add
add
add
mov
add
add
add
add
mov
in
imul
cmpsl
add
jmp
stc
outsl
cld
add
add
add
add
add
insb
in
add
pop
pop
push
lea
pop
pop
pop
push
inc
pop
leave
ret
push
shl
pop
push
push
shl
sub
add
xor
pop
mov
add
push
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
add
les
add
pop
mov
add
add
add
sahf
in
aad
add
jle
mov
add
mov
insb
data16
add
pop
sarb
gs
test
mov
add
jmp
orb
lcall
push
lea
push
push
lea
push
push
push
push
call
push
imul
mov
add
add
push
jo
add
test
lret
add
add
add
add
add
add
test
in
add
mov
add
mov
data16
xlat
mov
fldl
enter
mov
pushf
pusha
movsl
add
pop
push
push
push
lea
push
push
call
ja
cwtl
add
lods
add
scas
jl
add
add
mov
add
hlt
add
in
out
add
mov
int3
addr16
add
pop
add
in
hlt
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
adcb
pushf
add
xchg
leave
pop
add
loope
mov
filds
negl
movsl
add
jl
cmpsb
add
add
mov
in
incb
test
add
sub
pop
mov
push
push
lea
push
call
add
aam
add
add
mov
sarb
push
add
bnd
add
push
add
add
gs
enter
imul
aam
mov
rcrb
lcall
push
sub
pop
pop
push
push
push
lea
push
push
push
lea
push
push
push
call
cwtl
in
pop
add
imul
cmpsl
mov
add
outsl
add
mov
add
add
popa
loop
clc
cld
mov
add
addr16
add
add
lds
shlb
movl
mov
lods
call
in
fcompl
push
cmp
xor
not
sub
shl
pop
sub
push
push
push
push
lea
push
push
push
lea
push
call
addb
add
popa
pop
fwait
add
add
add
loop
out
imul
hlt
add
mov
jns
add
test
jnp
add
add
in
loopne
lcall
adc
sub
rol
pop
shr
add
push
dec
dec
shr
pop
mov
add
push
sub
inc
pop
pushl
push
rol
inc
pop
popl
push
add
xor
add
pop
mov
add
push
push
call
ljmp
cmpsb
in
add
addr16
mov
add
mov
add
add
add
add
cli
mov
rclb
nop
movsb
pop
test
mov
out
mov
add
pushaw
add
add
pop
xor
push
push
push
push
push
push
push
call
add
xlat
clc
add
add
add
pushf
cld
add
push
test
loope
add
hlt
add
movsb
divb
sar
testb
add
add
add
enter
xlat
sub
pop
lea
push
push
push
lea
push
push
lea
push
call
xchg
add
outsl
add
mov
call
jae
add
add
lcall
mov
add
loop
cwtl
pushf
sub
pop
mov
push
dec
sub
ror
pop
add
push
rol
rol
pop
xor
push
add
not
xor
pop
rol
push
lea
push
push
lea
push
call
fildl
xchg
mov
popa
add
cmpsl
xchg
cmc
add
add
arpl
add
jecxz
add
add
into
add
add
mov
pop
sub
pop
nop
nop
push
not
sub
pop
xor
push
push
lea
push
call
bound
cld
in
add
mov
add
test
xorl
data16
add
leave
xchg
mov
fwait
add
add
int
sub
pop
nop
nop
push
push
lea
push
push
push
call
mov
jne
push
add
add
fdivr
imul
gs
add
add
jecxz
mov
add
fsub
fsubrs
mov
loop
mov
cmpsb
lcall
lcall
push
dec
ror
pop
nop
nop
push
push
push
push
push
push
push
lea
push
lea
push
call
add
lods
mov
ficomps
add
in
add
scas
incb
pop
add
add
sahf
mov
cmpb
jmp
pop
add
jge
add
incb
shl
stos
add
mov
push
jb
out
in
add
cld
add
add
fs
cwtl
stc
nop
mov
out
add
mov
sub
pop
cmpb
jne
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
add
add
cltd
mov
pusha
imul
add
xchg
test
pop
lret
lds
add
fildl
mov
ljmp
add
jns
add
in
ror
out
ja
add
rolb
add
xchg
mov
add
add
out
lods
sub
pop
add
nop
push
push
lea
push
lea
push
call
bound
xchg
jecxz
out
nop
add
add
mov
add
jno
jns
cwtl
add
mov
iret
icebp
mov
add
add
jns
fnop
xorl
mov
test
add
popf
pop
mov
sub
pop
nop
cmp
je
push
ror
pop
nop
nop
push
not
pop
inc
push
lea
add
not
pop
nop
push
lea
push
push
lea
push
lea
push
push
call
add
shll
cld
test
jbe
add
add
xchg
popf
mov
test
add
jle
mull
clc
mov
add
add
cld
sub
pop
nop
cmp
jb
push
ror
lea
rol
pop
xor
push
add
sub
inc
shr
pop
jmp
mov
push
push
push
push
push
lea
push
push
push
push
push
call
cmpsl
std
add
lods
into
add
add
jne
aam
adc
movsl
enter
movsl
push
jo
movsb
stc
add
mov
movsl
sahf
add
lret
lcall
add
push
add
aad
add
mov
add
mov
add
fcomps
rorl
mov
jb
add
not
xor
pop
mov
add
push
not
sub
pop
mov
xor
push
lea
push
push
push
call
jle
add
push
add
into
ret
xchg
stc
add
add
add
xlat
jne
add
xchg
push
add
mov
add
add
test
add
add
add
add
add
popf
add
aam
mov
add
add
add
add
add
add
pop
mov
cld
xchg
dec
nop
add
loope
push
ror
dec
pop
xor
push
shr
not
pop
shl
push
lea
push
push
lea
push
call
add
jnp
push
push
xchg
movsb
pusha
add
jp
push
popa
mov
add
negl
add
mov
add
loopne
pushf
out
add
pop
push
add
mov
mov
in
add
jb
mov
int
add
lock
lcall
dec
nop
add
jb
lea
pop
shl
push
lea
push
push
push
push
push
lea
push
call
ret
add
mov
add
add
imul
lret
add
jge
test
pop
jecxz
lret
popf
mov
in
in
lcall
or
mov
push
sub
pop
add
pop
push
inc
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
push
call
imul
jae
ljmp
add
jmp
xchg
lods
rcl
push
add
add
add
mov
add
ljmp
divb
add
add
push
iret
add
cld
add
mov
jae
mov
cld
stc
xchg
mov
add
add
repnz
jo
add
push
shl
xor
add
pop
pop
push
push
push
call
add
add
add
add
incb
add
pop
add
add
add
add
pop
mov
add
add
arpl
les
add
cmpsb
insb
sub
pop
leave
push
ror
ror
xor
pop
ret
push
lea
push
push
call
std
add
stos
in
mov
mov
add
lods
mov
xchg
jp
push
test
addr16
fcomps
lods
mov
add
mov
add
jne
add
iret
imul
push
push
mov
add
loop
xchg
lea
lcall
push
add
pop
mov
push
push
push
lea
push
call
popf
add
rcll
add
ret
in
lcall
mov
int3
lods
add
add
add
add
aam
add
add
pop
add
add
push
push
pop
push
push
push
lea
shr
pop
push
mov
push
sub
pop
mov
push
lea
push
push
lea
push
push
lea
push
push
call
add
pop
add
stos
aad
jl
mov
movsb
leave
add
add
aam
scas
add
mov
addr16
and
add
movsb
mov
movl
lcall
jge
push
push
lea
push
push
lea
push
push
call
add
add
mov
pop
add
add
test
loopne
add
mov
out
add
add
scas
add
jle
testb
ljmp
outsl
add
jne
jecxz
fadds
mov
add
add
popf
jnp
int
add
add
pop
test
je
push
push
call
lods
add
add
add
repnz
push
add
mov
add
lds
aad
fucomip
add
in
clc
pop
mov
test
je
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
jmp
ljmp
add
add
ljmp
mov
lcall
divb
add
incb
add
notl
or
mov
jne
insb
push
lea
push
push
lea
push
push
lea
push
call
add
out
aad
add
repnz
out
mov
int3
push
out
ror
popf
lahf
les
in
rcl
nop
rclb
icebp
les
add
scas
fstps
add
jbe
mov
add
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
popf
add
stos
nop
lods
add
jbe
add
add
add
push
pop
push
add
sar
add
sahf
add
add
mov
outsl
add
cltd
push
jmp
add
add
add
arpl
icebp
in
sub
pop
mov
inc
push
push
push
lea
push
push
call
ret
add
bnd
test
pop
mov
cmpsb
data16
loopne
add
add
add
in
cltd
add
out
sahf
add
ljmp
add
add
pop
add
jnp
movsb
add
add
lea
cld
into
rolb
add
add
cmc
aad
in
pop
std
mov
jmp
add
add
in
in
lcall
rorb
test
add
push
push
push
push
call
add
mov
add
add
cld
imul
in
add
add
add
add
xchg
add
push
roll
mov
mov
call
fxch
pop
add
gs
add
add
popa
add
pop
xchg
nop
fsubrs
lcall
rorb
xchg
add
add
xlat
not
rol
pop
mov
push
lea
add
inc
rol
pop
inc
push
lea
push
push
push
push
push
call
add
push
roll
loopne
add
xchg
add
add
outsl
add
add
loope
pop
icebp
add
jecxz
lods
fsub
rcll
add
add
pop
movsb
add
add
sub
pop
cmp
je
push
add
pop
test
jne
push
rol
add
not
inc
pop
xor
push
lea
push
push
push
lea
push
lea
push
call
popf
add
jmp
lods
stc
imul
add
loop
xchg
add
add
jo
add
add
lcall
xchg
add
cwtl
jle
add
add
cmpsl
mov
add
addr16
bound
add
add
add
lcall
pop
push
xor
shr
pop
pop
push
ror
rol
xor
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
filds
add
jnp
add
mov
add
xchg
out
add
iret
add
jo
add
je
add
icebp
out
push
add
mov
jl
add
mov
mov
add
lcall
push
xor
inc
sub
pop
ret
push
push
push
push
lea
push
push
call
enter
jecxz
mov
jns
add
add
add
add
pop
pusha
mov
jge
out
lcall
push
fistpll
mov
add
mov
push
push
push
lea
push
push
push
lea
push
push
call
pop
scas
cltd
add
mov
jno
popl
idivb
add
add
push
add
ja
sbbb
add
loopne
lcall
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
pop
mov
mov
scas
outsl
push
mov
movb
add
mov
clc
add
andb
mov
add
add
popf
add
stc
pusha
add
mov
push
int
xchg
add
lcall
lock
lea
push
shl
shl
sub
pop
mov
push
xor
pop
test
je
push
push
lea
push
push
lea
push
call
add
sti
add
popl
imul
icebp
add
mov
loop
les
sar
mov
push
jp
xchg
arpl
pop
scas
pop
jno
shl
add
push
xchg
add
in
rcl
mov
jo
add
fdivl
add
flds
loop
add
rcll
scas
add
mov
add
jmp
add
push
push
dec
pop
add
push
add
add
pop
cmp
jne
mov
push
shl
pop
test
je
mov
push
push
call
add
mov
pop
add
cmpb
loop
add
mov
out
add
add
add
add
jne
in
clc
pop
add
cmp
je
push
push
push
push
push
call
add
push
add
mov
add
lods
repnz
mov
mov
scas
add
add
mov
add
lods
hlt
add
add
add
add
xchg
push
movsb
mov
add
mov
arpl
push
add
add
jbe
xchg
xchg
jl
mov
cmpb
add
lcall
add
call
ret
dec
pop
xor
push
push
push
lea
push
push
push
lea
push
push
push
push
call
xchg
jb
jb
ljmp
stos
je
add
enter
add
mov
add
lret
in
pusha
add
enter
add
mov
add
push
add
add
xchg
jl
ja
add
imul
icebp
sub
pop
pop
push
push
lea
push
push
push
push
call
mov
cwtl
add
add
mov
add
mov
add
movb
pop
pusha
fsubs
jge
add
add
incb
in
loope
xchg
add
out
add
add
mov
loop
jbe
in
call
pop
pop
push
add
rol
pop
leave
push
pop
ret
push
sub
shr
not
pop
lea
pop
push
lea
push
lea
push
call
add
add
push
add
imul
add
add
add
ret
loop
je
jno
add
mov
add
add
xchg
sub
pop
pop
pop
push
push
lea
push
push
push
push
push
lea
push
call
imul
nop
add
rolb
add
add
mov
add
fiaddl
pushf
ficompl
lods
add
cld
in
mov
add
add
rolb
mov
push
shr
add
mov
xchg
bound
push
fiadds
add
mov
mov
xchg
add
push
add
pop
leave
push
lea
add
pop
ret
mov
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
les
lret
push
popa
fiaddl
add
add
rolb
add
add
frstpm(287
add
add
stc
arpl
fs
add
mov
mov
push
pushf
add
mov
add
add
add
add
pop
push
push
push
lea
push
call
int3
add
mov
jns
add
push
push
cwtl
add
mov
call
jbe
add
jb
fildl
lcall
push
lea
push
push
push
lea
push
push
push
push
push
call
add
mov
add
add
xlat
movsl
icebp
sti
enter
add
lret
mov
add
add
lcall
pop
push
sub
shr
pop
leave
push
shl
shr
pop
ret
cmp
leave
mov
xor
mov
mov
mov
loope
mov
ror
mov
mov
mov
out
lret
pop
lret
xchg
lret
or
sub
mov
add
add
cmc
out
cmp
sub
mov
data16
aad
lock
out
cli
mov
rcl
in
jmp
mov
lods
jle
jno
sbb
mov
push
mov
loopne
int
or
ljmp
mov
pop
mov
pop
pop
jne
push
js
aas
xchg
test
mov
fsubl
push
xchg
insl
fs
xor
dec
xchg
loope
das
xchg
fiaddl
mov
pusha
lret
rcr
addr16
or
nop
inc
out
call
inc
sbb
cmc
sbb
ja
push
push
pop
cmpsl
add
mov
mov
mov
push
add
subb
and
push
subl
push
flds
mov
dec
insl
out
sar
mov
es
es
outsb
loop
xor
cmp
in
les
push
popa
jp
xchg
mov
mov
out
clc
inc
je
xor
ss
insl
mov
mov
dec
sarl
dec
fidivs
cli
cmp
cs
movsl
push
push
mov
cmpsl
fnstsw
sbb
cmp
leave
cmpsl
mov
mov
jno
mov
lahf
and
inc
rcl
jne
cmp
fwait
add
ja
cmp
rcrl
out
dec
xchg
cmc
pcmpgtd
mov
dec
cltd
adc
aaa
aaa
xor
lahf
inc
or
mov
sbb
repz
popa
sub
lds
outsl
xchg
jbe
jg
xchg
mov
mov
das
cmpsl
in
xor
mov
rcrb
xor
nop
dec
ds
ja
and
push
sbb
fbld
pop
lret
cmp
cmp
sbb
mov
dec
mov
sub
std
addps
pop
aas
pop
and
pop
cmpsl
sbb
rcrl
mov
mov
fwait
imul
lret
add
cmpsb
or
dec
pop
and
shl
dec
jae,pt
rorb
mov
cld
shrl
mov
pop
cmpsb
js
xlat
shrb
and
je
icebp
add
scas
testb
shlb
adc
icebp
out
int3
ret
clc
lds
enter
mov
ret
push
mov
jns
xlat
mov
and
pop
mov
pop
pop
push
inc
jbe
cmpsb
int
add
mov
push
push
movsb
js
jno
inc
out
je
mov
cmp
iret
popf
push
pop
cmp
stc
mov
pop
fs
jecxz
aam
fldcw
fisttpl
jle
fdivl
fnstenv
stos
test
js
scas
daa
cmpsl
cmp
sbb
dec
mov
lds
push
mov
int
clc
inc
mov
stc
dec
sbb
push
add
rcrl
mov
jne
add
mov
sbb
inc
ret
mov
jne
inc
mov
lahf
or
xchg
stos
dec
hlt
sahf
and
mov
sub
sub
cmc
cmp
adc
push
mov
bnd
inc
rcll
adc
negb
add
aad
or
lahf
inc
pop
cmp
jns
dec
sbb
test
popf
fldl
test
ret
dec
popf
cld
jl
xchg
xchg
xorl
jg
inc
xchg
inc
push
rclb
enter
loopne
ljmp
xor
or
sub
mov
push
imul
jg
lret
dec
push
pop
add
xchg
insb
dec
mov
and
cwtl
jnp
dec
in
leave
fsubrs
adcl
test
or
pusha
in
bound
test
std
jmp
adc
bound
xchg
sub
in
rorb
xor
pop
out
fsubl
cmpsl
iret
sbb
stc
xchg
mov
inc
jp
std
pop
inc
loope
inc
outsl
lea
outsl
pusha
jae
loopne
addl
or
popa
out
ffreep
xchg
std
leave
loop
adc
rcrl
sub
scas
fcmovne
cwtl
sub
push
cmp
loopne
lahf
out
xchg
pushf
push
sub
xlat
in
xchg
into
scas
or
sbb
and
jecxz
test
in
mov
mov
pop
add
movsl
mov
xor
in
std
cmp
xor
imull
mov
mov
sub
loope
jmp
cmp
cmp
xchg
or
push
cmp
in
mov
ret
sar
insl
push
adc
iret
pop
insb
fdivrs
adc
mov
popa
mov
jb
fs
repz
lock
loope
mul
dec
out
mov
stos
stos
out
imul
stos
add
jmp
push
xchg
cmc
sarl
sbb
adc
xchg
xor
mov
cmpsb
dec
xchg
add
js
mov
mov
daa
push
adc
jle
push
cmp
ljmp
test
cmp
fwait
outsb
jns
cwtl
test
jbe
cli
push
sbb
add
xchg
jmp
lret
cwtl
push
push
inc
jecxz
dec
scas
cmp
xor
push
mov
pop
xchg
scas
jne
lods
xor
mov
jg
ds
fdivrp
test
insb
mov
inc
test
outsb
sub
push
movsb
das
mov
imul
fdecstp
daa
popf
test
shll
inc
push
pop
pop
mov
add
and
and
and
mov
dec
jmp
fstps
call
jne
push
mov
sbb
sbbb
jecxz
stos
inc
out
cmp
shlb
jb
insl
ret
cltd
fidivrl
stos
adc
jmp
inc
fbld
rcrb
pop
xor
sti
or
shrb
jl
mov
mov
testl
cmp
sub
cmpsl
mov
inc
dec
sbb
pop
dec
jl
aaa
cs
fcomi
ret
dec
inc
sub
cmpsb
aas
aaa
and
inc
mov
pop
pusha
sub
xchg
adc
lea
addr16
sbb
pop
or
iret
into
or
xchg
sahf
xchg
ret
repz
mov
into
mov
sbbl
jbe
pushf
mov
mov
stos
xchg
jecxz
jno
xlat
scas
data16
cmp
int3
xchg
lods
dec
jnp
pop
xchg
or
sub
jns
xor
fs
pop
add
push
fdivrl
mov
lock
mov
cmp
sbb
cmp
iret
out
out
mov
jmp
cmp
es
push
cmpb
pop
push
push
mov
clc
dec
aaa
sbb
dec
mov
dec
add
mov
loopne
dec
push
das
ss
int
push
fnsave
sbbw
push
cmpsb
add
sub
repz
test
outsl
pusha
adc
popf
and
rcrb
push
pop
rcr
pop
push
inc
loope
rcr
imul
or
js
sub
pop
outsl
sbb
xchg
andl
adc
lahf
cmp
jae
scas
pop
rcl
pop
cmp
dec
adc
push
lcall
adc
push
popf
aad
mov
data16
cmp
sub
cmpsb
shrl
out
fimull
cwtl
into
sub
push
push
and
mov
push
mov
fidivrs
in
mov
cmp
jg
push
ljmp
xlat
std
xchg
sub
sbb
sahf
fcoms
fimull
mov
sub
aad
ljmp
loope
mov
mov
scas
iret
aaa
test
roll
dec
inc
cmp
mov
scas
jecxz
cwtl
int3
in
jecxz
cmp
les
push
inc
mov
and
push
popf
jmp
dec
and
inc
push
inc
repz
out
push
mov
test
mov
iret
mov
mov
cmp
fistpl
mov
into
std
add
push
mov
xchg
std
xor
add
into
mov
repnz
stc
pop
fimull
sbb
enter
push
out
xchg
push
or
pop
dec
mov
pop
enter
leave
mov
push
and
cmp
add
sub
mov
lods
sbb
sub
xchg
pop
jbe
popa
add
in
cmp
jg
pushf
scas
mov
in
rcll
cmp
dec
push
push
lcall
int3
into
aam
dec
mov
pop
add
mov
dec
dec
mov
ljmp
cmp
inc
jle
ds
gs
xor
es
test
data16
arpl
idivb
xchg
push
stos
pusha
pop
iret
lods
hlt
adc
shll
sub
inc
fnsave
xor
sbb
pop
inc
cmp
shlb
hlt
mov
shrb
gs
pop
stos
std
clc
cli
lds
xchg
cmc
sub
push
sbb
cmp
sub
arpl
ret
xor
rorl
ds
enter
mov
js
ss
xchg
daa
lock
test
and
cmp
inc
repnz
push
leave
dec
dec
mov
xchg
add
outsb
rorb
arpl
mov
mov
adc
inc
repz
inc
or
mov
and
test
sarb
pop
ss
pop
add
mov
dec
pop
pop
pop
push
stc
sbb
ret
scas
add
cmpsl
rcrb
jmp
push
mov
xor
pop
mov
sbb
loope
mov
sub
sub
lock
or
mov
lock
mov
pusha
pop
rcrb
fbld
mov
call
fs
jbe
mov
xchg
push
stos
rep
push
jno
sbb
cmp
mov
shr
nop
xlat
pop
repnz
ja
scas
xor
push
in
xchg
popa
packssdw
mov
mov
dec
test
push
mov
mov
pushf
fistps
xor
arpl
push
inc
and
sti
push
test
inc
push
mov
insb
out
or
fwait
adc
dec
test
push
pusha
lods
ss
mov
icebp
inc
in
xor
sti
iret
cmpsl
inc
xchg
pop
cmp
fildll
jecxz
int3
dec
push
enter
stos
jo
push
shlb
test
push
xor
les
data16
iret
rorb
add
lods
das
pop
fcompl
pop
xor
imul
adc
mov
jg
roll
cmpsb
fisubrs
and
add
test
repz
hlt
xor
in
sub
jge
sub
pushf
pop
sbb
aas
jmp
dec
fstp
jbe
or
cmpsl
ss
out
mov
fcomps
jnp
mov
push
cmpsb
scas
jecxz
andl
xchg
shlb
push
sar
add
decb
out
xchg
movsb
lcall
sub
push
mov
jecxz
insl
loope
mov
daa
inc
inc
lret
scas
aam
pop
pop
add
or
mov
dec
lds
dec
testb
fimuls
or
testl
icebp
xchg
idivl
aaa
enter
scas
test
mov
fstpl
fdivr
arpl
iret
cli
insl
cmpl
mov
lea
sbbl
add
xor
push
sbb
mov
xchg
mov
out
mov
fmuls
sub
sub
js
cmp
sub
xor
mov
sub
sbb
sbb
dec
xlat
xor
cld
mov
cmp
jp
dec
loopne
lods
into
aad
movsb
mov
xchg
outsl
es
cld
push
or
mov
adc
cli
fistps
int
mov
aad
lods
push
clc
xchg
xchg
ret
scas
adc
leave
xchg
pop
push
mov
xchg
insb
xor
inc
sub
push
mov
or
ljmp
adc
bnd
cmc
mov
jo
jmp
and
int
inc
lcall
mov
jo
sbb
mov
dec
std
test
and
add
in
add
sete
mov
ljmp
mov
leave
xor
ret
into
lock
in
pop
repnz
cmp
jge
loope
sub
leave
cmp
stos
sub
in
adc
mov
lret
cmp
pop
adc
pop
fimuls
mov
notb
mov
mov
scas
lds
jb
jns
jle
idivb
jecxz
aas
hlt
xor
dec
fistps
stos
dec
das
out
sbb
xchg
xor
cmp
loopne
out
iret
mov
mov
xor
add
mov
xchg
and
dec
das
or
adc
movsb
or
xchg
hlt
bound
xor
adc
xchg
scas
pop
or
jno
and
addr16
sub
and
add
outsl
jbe
xor
sub
ret
xchg
movl
leave
aaa
mov
cmp
icebp
or
bound
jno
shlb
rcrb
and
jmp
sbb
pop
push
sahf
xlat
icebp
mov
loope
jb
xor
test
es
jno
out
add
add
ss
xor
jo
mov
addl
ljmp
xchg
mov
gs
and
cmp
mov
xor
mov
aam
dec
fnstcw
pop
sbb
enter
movups
and
outsl
js
sub
insb
fwait
iret
cld
mov
int
in
pop
in
mov
dec
fmul
or
arpl
xor
add
vrsqrtss
cli
fsubrs
shl
or
mov
sub
or
mov
out
xchg
sbb
xor
dec
mov
jns
adc
jae
pop
push
mov
cmp
bound
sarl
loopne
xor
orl
ret
add
push
push
fisttpll
mov
fwait
stos
mov
add
pop
rcr
addb
inc
imull
stos
or
mov
cli
add
adc
int
sub
enter
push
cmc
sub
insb
test
mov
xchg
cmp
sub
xor
sbb
add
call
xor
add
sahf
or
or
and
adc
js
out
std
out
push
jecxz
iret
fbstp
add
sahf
and
in
sbb
aaa
jmp
add
js
mov
in
test
add
dec
cmp
jno
in
dec
xchg
or
inc
loop
pusha
rcll
and
xor
dec
inc
adc
cmpsb
adc
mov
jbe
jg
fidivs
mov
jp
dec
jno
and
adc
or
in
loopne
addr16
add
out
popf
sti
clc
aaa
loope
addb
pop
outsl
dec
mov
xor
xor
das
pushf
pop
pop
push
pop
pop
aas
push
mov
insb
gs
arpl
js
adc
or
aaa
ret
inc
add
iret
cmp
adc
data16
insb
adc
push
pop
sti
inc
iret
xchg
imul
out
cmpb
fists
ret
inc
mov
or
adc
fdivs
sbb
or
sub
filds
jnp
inc
mov
adc
out
in
dec
stos
dec
add
xlat
ds
xchg
mov
insl
ret
adc
xor
divl
sbb
sub
jmp
pop
or
push
xchg
int
lods
ret
xor
in
fsubl
pop
push
cld
dec
inc
pop
pop
daa
insl
iret
xor
hlt
fstps
int
sbbb
adc
in
and
aad
xor
mov
sub
sub
mov
in
mov
push
repz
inc
add
loop
testl
sbb
cmp
mov
shlb
cwtl
in
test
retw
aad
iret
ds
and
loopne
daa
inc
inc
lahf
or
mov
lock
out
xor
and
cmp
push
xor
clc
negl
repz
adc
ret
mov
mov
xchg
aaa
cmpl
mov
gs
dec
stos
test
jnp
sub
fstps
icebp
pushf
sub
push
cli
int3
adc
out
das
movb
fcomip
add
mov
lret
push
cmp
cmp
pop
cs
jp
outsb
cmp
loopne
outsb
mov
ret
lcall
add
loop
mov
add
inc
ja
repz
mov
pop
fidivl
dec
mov
xchg
arpl
mov
iret
aaa
sbb
fcom
in
inc
loopne
std
fnstcw
mov
mov
push
add
lahf
mov
std
mov
sub
std
inc
and
repnz
jmp
lods
mov
inc
lahf
pop
in
outsl
aas
mov
mov
xchg
shlb
lcall
hlt
dec
and
mov
jo
popf
xor
cld
lds
sub
and
cwtl
mov
sbb
adc
ja
int
mov
xchg
popa
xchg
jns
sub
or
in
or
ljmp
cmp
jnp
movsb
lods
inc
lret
mov
test
and
xor
push
mov
scas
mov
cmp
scas
ss
cli
loop
or
mov
adc
and
jns
pop
mov
jmp
xor
xchg
dec
sti
xchg
inc
mov
loopne
inc
out
ror
daa
mov
jb
mov
das
or
movsb
or
add
adc
adc
ds
and
push
das
cltd
iret
cli
push
rorl
addl
jge
fs
inc
fisttpll
shl
lret
lods
cltd
xor
divl
ljmp
cmp
mov
cmp
in
mov
adc
inc
sub
adc
ret
fidivrs
xchg
loop
jbe
lret
sub
idivb
andb
sbb
je
bound
mov
fsubl
pop
and
divl
push
adc
add
std
lahf
mov
leave
sub
aaa
push
mov
fst
mov
jno
adc
nop
nop
lods
adc
scas
jnp
mov
bound
sub
add
in
push
inc
pop
mov
or
mov
lret
clc
icebp
fs
push
mov
sbb
stos
and
cmpsb
sbb
mov
xchg
pop
icebp
roll
dec
sbb
in
inc
frstor
pop
add
mov
xor
mov
scas
jb
fidivrl
xchg
add
loop
pop
mov
in
and
push
xorb
icebp
fldcw
movsb
repz
and
fildll
lea
mov
mov
cld
cltd
jno
data16
or
xor
cmpsl
mov
mov
mov
pop
mov
int3
mov
pop
mov
pop
inc
shll
fs
ret
mov
imul
push
ret
nop
popf
ss
adc
sbb
pop
cmp
inc
sbb
icebp
sbb
and
lea
push
or
aam
mov
jb
push
addr16
pop
fiadds
scas
stos
test
push
push
xor
in
fdivrl
hlt
cmp
mov
cmp
xchg
insl
jmp
iret
mov
mov
xchg
sbb
movsl
cmp
loope
std
jp
test
xchg
lcall
push
mov
fisubrs
sbbb
cmpsb
cwtl
scas
adcb
push
pop
push
sub
je
mov
jnp
or
mov
lock
xchg
push
sbb
cltd
jmp
jae
jp
and
adc
fwait
xchg
nop
pop
cmp
lcall
popa
test
sub
lods
stos
mov
jmp
outsb
push
pop
xchg
or
sub
push
mov
call
shlb
fldt
stc
addr16
sub
jno
data16
push
xchg
es
lahf
mov
fs
mov
inc
cwtl
das
or
sbb
fisubs
subl
cmc
mov
cmp
aas
pusha
mov
dec
test
lods
lods
sar
push
decl
sbb
xor
mul
lret
aam
push
stos
dec
gs
idivb
sar
fidivl
cmp
mov
mov
pop
sub
movsb
add
mov
aas
cmpsb
jmp
mov
xor
mov
out
fadds
xchg
add
cli
jae
in
xchg
int
jmp
bound
mov
sub
daa
loope
pop
pop
mov
fs
and
inc
xor
push
mov
pop
cmpsb
cmp
adc
mov
pop
insb
test
lods
dec
dec
es
cmp
push
inc
inc
bound
cvtps2pi
outsl
test
mov
adc
jne
adc
test
dec
std
cmp
inc
dec
or
pop
shll
pop
push
inc
mov
test
ljmp
push
xor
call
test
insl
mov
arpl
xor
fnsave
cmpsl
cwtl
out
cs
jno
push
mov
jecxz
out
stos
xchg
adc
xchg
enter
arpl
shrl
sbb
subl
inc
xor
cli
movsl
fsubrl
xchg
addr16
or
icebp
int
negl
mov
mov
subb
mov
push
mov
pop
dec
orl
or
xlat
fsubrs
mov
in
out
mov
call
cmp
pop
ret
sub
ret
jg
inc
insl
jecxz
xor
mov
in
std
fwait
add
loop
sub
push
add
sub
push
bswap
pop
imul
sbb
sub
xlat
pop
mov
enter
and
or
in
jge
inc
hlt
sbb
jns
inc
mov
dec
push
fidivs
mov
adc
cmpb
and
add
pop
inc
mov
repnz
sbb
xor
and
pushf
clc
mov
and
xor
cmp
in
fs
xchg
cltd
or
mov
rorl
clc
sub
push
icebp
hlt
std
aad
stos
and
sbb
pop
mov
pop
fnstcw
mov
pop
jge
adc
fstps
mov
and
adc
mov
iret
pop
xor
insb
es
jbe
sarl
sub
fldenv
pop
or
das
out
jae
and
aaa
mov
dec
imull
pushf
imul
verr
xchg
dec
movsl
mov
xchg
dec
in
leave
push
ficompl
mov
decl
xor
insl
add
negb
rcrb
mov
mov
std
aam
push
push
test
adc
popf
rorl
mov
fsubrs
das
and
push
out
ret
loop
jecxz
cmp
adc
stc
fwait
scas
dec
mov
jbe
jo
push
push
inc
popa
lea
mov
aas
mov
fists
movsl
lcall
xchg
cld
jno
adc
inc
or
fistpll
call
dec
subl
loopne
push
mov
cmp
dec
cmc
push
sbb
cltd
addl
add
dec
dec
ficoml
icebp
rcrl
cmp
ds
aas
mov
cltd
add
iret
loope
out
jmp
push
xchg
call
dec
outsb
or
addr16
aad
in
rolb
imul
mov
sar
lahf
push
mov
pushf
pop
outsb
xchg
jmp
scas
xchg
fsubs
stc
cwtl
sub
pop
and
xor
hlt
sub
hlt
iret
movsb
fldpi
mov
pop
fstl
rorl
fbld
call
mov
sub
add
outsb
xor
add
ja
lret
mov
lds
cli
jae
jecxz
and
fistpl
out
dec
cs
insb
lock
pop
out
inc
hlt
mov
mov
xor
lea
xchg
mov
add
popf
cli
test
pusha
cmp
adc
popa
push
mov
je
push
in
inc
mov
add
and
imul
jbe
pop
out
movl
jnp
xor
jl
loope
or
dec
pop
pop
xor
mov
xchg
dec
iret
sub
push
xchg
push
mov
fisttps
scas
sbb
sub
push
dec
push
pop
popf
push
jb
lods
mov
jmp
mov
add
subl
xchg
ss
les
lahf
or
mov
faddl
fwait
test
fdivrl
push
out
cwtl
and
xchg
es
addb
les
orl
jg
lret
lahf
leave
cwtl
or
out
xchg
pop
cmp
jo
adc
add
push
cmpsb
pop
sbb
push
shll
add
aaa
loop
push
xor
lock
jb
pop
pushf
adc
and
movsl
dec
loope
mov
xor
sub
mov
jne
fnstsw
imul
cmp
outsb
jmp
jns
fwait
insl
rclb
das
std
xchg
or
mov
xchg
mov
add
imul
pop
sub
push
cli
adc
pop
fstpt
jl
mov
jge
jle
pop
ljmp
cmp
lret
repnz
xchg
cmpsb
mov
jge
imul
mov
aam
in
jl
cwtl
sub
aas
sub
out
pop
pop
and
sti
pop
jmp
fs
jae
addr16
popa
lock
inc
or
aad
adc
xchg
shll
pop
aam
cmp
mov
rcr
mov
in
adc
xor
daa
jl
call
sahf
adc
mov
idivl
lds
rsqrtps
jnp
cmc
ret
adc
aas
lahf
inc
cld
xlat
sub
sub
cwtl
rcl
ret
mov
sbb
mov
movsb
loopne
js
xorb
mov
mov
cmp
iret
pop
inc
arpl
loop
imul
push
xor
adc
cltd
sub
mov
jl
sub
pop
mov
fwait
push
mov
xor
imul
int
mov
jnp
and
adc
js
jl
notb
shrb
int3
cmpsb
push
stc
andb
sbb
lea
jbe
pop
std
adc
aam
call
add
faddp
mov
mov
mov
push
jns
mov
xchg
adc
sub
jne
pop
mov
pop
bound
and
lods
jne
jle
dec
daa
jl
sub
rcl
inc
adc
pop
movsb
aaa
gs
in
enter
es
push
mov
fucomip
outsb
pop
sbb
stos
inc
dec
push
daa
sbb
cmp
leave
sub
fs
dec
lret
lahf
push
call
xor
adc
cmc
pop
arpl
pop
dec
xor
and
mov
inc
loope
popf
fsubrl
mov
sbbb
gs
mov
xchg
xor
sub
mov
leave
mov
sbb
insb
pop
xor
mov
int
mov
shrl
pop
cli
jle
test
leave
xor
in
cmpl
pop
scas
sub
push
xchg
mov
inc
xlat
cmp
lahf
enter
jmp
cmp
enter
ret
or
aaa
sbb
xorl
jbe
in
xchg
sbb
or
imul
mov
rcl
lods
mov
push
mov
clc
rcrl
push
cs
xchg
add
sbb
xchg
leave
out
dec
std
addl
int
icebp
mov
dec
pop
sub
imul
fistl
fs
sub
jmp
push
push
cmp
gs
xchg
test
daa
scas
cmp
int3
mov
sbb
cmpsl
daa
loopne
sbb
rcll
insl
or
mov
into
or
pop
xchg
dec
imul
frstor
in
and
bound
mov
sub
push
inc
mov
xchg
in
xchg
xchg
repz
and
mov
cli
test
pushf
call
adc
jno
addr16
nop
jne
mov
cmc
inc
pop
sbb
push
xchg
pop
out
add
out
push
imul
mov
leave
sarb
push
xchg
add
xor
repz
mov
stos
dec
dec
loope
mov
lock
lds
aas
pop
out
in
out
jne
daa
sbb
xor
mov
stos
push
mov
lahf
xchg
cmp
adc
push
add
xor
bound
shrl
je
push
popa
mov
and
hlt
mov
mov
add
rcr
out
fcmovbe
lret
add
xchg
pusha
mov
lock
or
in
ret
mov
pop
dec
jno
popa
and
pushf
mov
or
cld
mov
cld
adc
pop
jmp
in
lods
fwait
int3
negb
push
pop
aas
dec
adc
out
popf
pop
andb
repz
inc
push
popf
bound
into
enter
imulb
dec
call
sti
into
sbb
add
xor
outsl
xor
pop
test
xor
cmp
shlb
insb
xlat
pop
stos
mov
or
gs
stos
jns
mov
faddl
dec
pop
pusha
push
inc
cmp
sbb
and
and
xchg
adc
aas
in
jecxz
jnp
sbb
add
jl
push
lcall
popf
cs
mov
jns
mov
pop
insb
sti
frstor
mov
cmp
xchg
popf
adc
mov
jne
xchg
cmp
push
leave
popf
ficomps
and
adc
lock
inc
add
jmp
pop
int
xchg
sub
dec
rcrl
dec
cmp
lret
xor
std
xor
mov
outsb
sub
mov
xchg
mov
xor
push
jbe
lods
dec
adc
dec
ljmp
mov
imull
dec
sbb
pop
inc
rorb
cli
adc
out
rorb
fwait
mov
inc
inc
insl
loope
addr16
jns
insl
fcomp
mov
in
xor
sbb
out
jge
cmp
and
ds
mov
stos
adc
dec
mov
push
fists
pushf
out
cmp
scas
dec
imul
out
cmc
xor
shlb
cwtl
pop
fsubrs
mov
iret
or
repz
inc
jb
cwtl
int
sarl
adc
adc
and
movsb
jne
imul
stos
mov
shlb
nop
mov
sbb
fstl
mov
xor
gs
push
inc
mov
push
push
adc
mov
jns
arpl
inc
aam
xor
ficoms
xlat
dec
outsb
cmp
test
pop
aaa
sub
shlb
push
cmpb
dec
rol
loopne
and
push
mov
lahf
mov
loope
icebp
mov
inc
cmpsb
jne
test
pop
xchg
adc
mov
inc
nop
pop
xor
mov
lods
mov
push
adc
int3
negb
sbb
hlt
pusha
cmpb
push
pop
inc
jno
push
xor
mov
sub
ret
movsb
sbb
jle
mov
add
mov
dec
sub
lcall
loop
mov
lods
aas
sbb
popa
sbb
mov
jp
push
inc
fstpl
push
cmp
xchg
in
insb
sar
pop
ret
test
xchg
dec
mov
lods
xchg
xor
lahf
dec
xor
les
jge
leave
loopne
out
add
int3
mov
cwtl
cmp
dec
test
incb
sub
mov
push
mov
out
negl
loopne
push
je
mov
fsub
mov
add
addr16
mov
mov
inc
and
lret
in
or
daa
jl
cmp
loope
pop
sysenter
das
sbb
and
cwtl
xchg
repnz
ljmp
dec
jmp
fcompl
cmp
jnp
jp
push
lcall
inc
mov
add
push
daa
loopne
xor
xchg
adc
and
lahf
jo
movsb
xchg
push
dec
test
leave
pusha
jo
sarl
adc
and
adc
cld
pusha
cld
adc
outsb
mov
jb
ret
ret
stos
sarl
xchg
sub
loopne
mov
mov
cmpsl
out
fmul
sub
cmp
outsb
xchg
sahf
pop
push
dec
mov
xchg
dec
repnz
outsl
or
xchg
sarb
aas
out
lock
adc
idivb
dec
std
dec
imul
mov
pop
in
push
stc
inc
outsl
pop
jbe
orb
std
cmp
es
insl
mov
pop
test
cmp
cmpsl
jae
ret
mov
push
jmp
lcall
cmc
pop
movsl
pop
pop
inc
xchg
fucomip
xor
out
gs
ret
arpl
test
das
push
cmc
test
jns
cltd
add
cmp
ljmp
scas
push
mov
popa
cs
test
fistps
pop
inc
mov
sbb
aad
es
jge
dec
push
pushf
push
aad
push
sarb
pop
push
xchg
pop
mov
insl
mov
adc
or
inc
aam
inc
pop
xchg
sbb
adc
inc
push
jl
xchg
ret
outsb
inc
fnsave
push
loop
push
mov
fsubr
aad
and
test
xor
shlb
loope
xor
addb
mov
cmpsb
jge
dec
jmp
loopne
test
xor
jecxz
push
aam
add
dec
mov
pop
cmp
testl
fcoms
clc
cwtl
shl
out
mov
imul
mov
pop
stos
mov
pushf
xchg
stos
inc
push
lret
into
and
xor
sbb
xchg
mov
fildl
xchg
dec
sbb
ss
shrb
cmpsl
ret
adc
mov
mov
mov
jae
inc
add
push
pop
or
into
test
mov
sbb
cli
and
adc
xchg
icebp
inc
cmp
xchg
sub
or
xchg
cmp
jecxz
mov
mov
push
cwtl
shl
or
or
das
sbb
test
sub
in
std
adc
pop
test
mov
nop
addr16
xchg
shl
cmp
mov
lret
fldcw
nop
pop
push
sahf
mov
into
mov
adc
jnp
pop
mov
ficomps
add
je
or
jmp
lahf
cmp
pop
movsl
cmpsl
mov
lods
test
or
or
bound
je
inc
inc
push
xor
bound
lods
gs
add
mov
int3
loope
int3
lods
ds
movsl
xor
mov
call
or
and
push
daa
icebp
push
push
mov
push
gs
sbb
clc
das
pop
mov
fstl
xchg
lods
mov
test
lahf
push
sub
decl
mov
pushl
and
sub
add
aam
jne
fistpll
jo
cmp
movsl
stos
xchg
mov
xor
fisttps
popf
scas
jmp
xchg
lcall
and
sbb
sbb
add
or
sub
test
xchg
push
notl
push
enter
ds
cmp
sbb
test
lahf
jmp
mov
mov
adc
jge
in
sbb
jmp
leave
xchg
outsl
inc
insb
and
cli
mov
or
stos
sbb
in
jo
nop
xor
ss
xchg
pop
cmc
mov
test
shl
mov
mov
inc
push
imul
out
push
adc
testl
test
lret
test
lcall
dec
add
adc
adc
in
movsb
adc
cmp
daa
cltd
cli
or
movsl
ds
mov
repz
call
jge
jbe
or
cmpsb
lea
sbb
loope
adc
mov
pop
adc
cmp
inc
or
pop
out
movsb
mov
out
test
inc
rorb
fs
mov
test
cs
sbb
bound
repz
dec
push
insl
push
pushf
xor
fsubs
leave
mov
outsl
fidivl
in
xchg
aad
mov
sub
icebp
pop
int3
mov
in
lret
or
pushf
mov
sub
je
test
add
pop
adc
dec
shrl
fwait
lods
aad
jae
adc
cmp
or
mov
fwait
out
xor
push
aam
mov
jo
push
mov
inc
into
sub
sahf
add
cltd
movsl
or
imul
jno
je
in
aam
pop
jge
shlb
popf
pop
popa
xchg
enter
pop
mov
mov
push
mov
xor
out
mov
push
inc
rcrb
inc
hlt
jno
push
xchg
ret
pushf
cmp
mov
je
and
cwtl
dec
sbb
sub
cld
insl
mov
cmpsl
jge
adc
cmc
cmp
test
stos
mov
movsb
adcl
jle,pn
sbb
cmc
mov
rolb
and
out
xchg
nop
pop
push
repnz
lods
in
push
jae
push
stos
and
fidivs
ss
mov
out
mov
xchg
stc
cmpsl
cmp
clc
cmp
loopne
clc
out
or
xchg
pop
push
cmpsb
pop
xlat
rolb
push
popa
iret
sahf
xor
push
call
psubusw
das
cmp
mov
sbb
test
push
pop
jecxz
fldenv
or
ja
loop
addr16
and
inc
movsb
jmp
pop
xor
ljmp
shl
lds
fbld
pop
mov
pop
cmp
in
lret
call
ss
pop
cmc
pop
xor
data16
mov
mov
inc
int3
jl
jle
sub
cmp
adc
in
jne
hlt
cwtl
cmpsb
sub
sub
mov
pop
je
jns
xor
jp
leave
sbbl
or
or
sub
mov
add
sbb
pop
addr16
ret
in
lcall
push
adc
adc
jmp
push
mov
stos
shl
sbb
rcrb
scas
popf
or
in
cmc
xor
sbb
movsl
test
arpl
out
mov
mov
js
lcall
or
add
js
pop
dec
mov
sub
stos
add
xchg
ret
xchg
mov
gs
ds
push
cli
add
and
cmpsb
or
push
sarl
cmp
cmp
pop
jp
adc
mov
jg
mov
test
dec
push
stos
cmp
sub
jae
mov
push
pop
sub
cld
pop
das
jo
mov
pop
decl
xlat
incl
std
add
pushf
xor
fimuls
xchg
movsl
fs
stos
inc
sarb
mov
loope
cmpsb
shll
jge
push
xchg
fnstsw
dec
shl
jno
mov
dec
adc
aam
push
cmp
adc
out
mov
xor
adc
xchg
int
adc
les
fs
lea
inc
rcr
mov
popf
mov
dec
push
cltd
jns
jno
adc
dec
lods
mov
aad
mov
outsb
fidivl
cli
push
stos
es
sub
xchg
inc
jg
loope
cli
mov
stos
fmuls
insl
and
sub
inc
dec
shrb
pop
lret
dec
scas
pop
or
sbb
inc
jo
mov
inc
test
add
out
mov
jmp
push
mov
enter
scas
popf
pop
fidivrs
push
pop
clc
test
hlt
movsb
sub
push
xor
std
jno
and
sub
popa
or
nop
fists
pushf
push
push
lcall
std
dec
and
and
in
mov
pop
mov
repz
movsb
stc
repz
in
adc
fsts
or
or
dec
fdivrl
fimuls
iret
or
scas
inc
or
mov
cmp
xchg
pop
dec
jl
or
fsubs
xor
cmpsb
xor
fistpl
notb
sahf
jnp
sub
inc
outsb
jp
leave
push
fmul
push
adc
ja
mov
mov
rcll
add
cltd
adc
push
inc
pushf
stos
fwait
iret
and
clc
fucomip
xchg
stos
jp
sbb
lcall
mov
or
mov
pop
and
mov
push
hlt
inc
rclb
jbe
inc
leave
andb
mov
dec
stos
pop
hlt
cwtl
int3
std
inc
push
add
mov
fldenv
jne
sub
clc
xor
shll
pop
jecxz
sub
xchg
inc
cmpsl
cmpsb
hlt
push
rorl
lods
jo
in
sbb
mov
lret
mov
and
loope
call
jnp
and
clc
fs
movsl
cmp
sti
mov
test
xchg
mov
ficomps
das
mov
mov
in
mov
fwait
and
push
cmp
jmp
call
shrl
in
mov
push
mov
dec
in
adc
ss
xchg
pop
repnz
fucom
stos
or
test
xchg
xor
mov
or
in
and
leave
and
shll
inc
jae
jle
rcll
aam
fstpl
test
mov
push
ss
sub
jb
insl
adc
negl
stos
jmp
or
cltd
fldenv
and
or
mov
push
enter
xor
sub
xor
mov
sub
jae
lods
pushf
outsl
mov
in
outsl
jle
test
cli
push
cmp
mov
jns
enter
jl
adc
cmp
mov
xchg
insb
xchg
fnsave
loopne
das
test
loop
test
mov
mov
mov
out
ret
xchg
movsb
adc
and
jbe
jbe
pop
sub
xchg
in
stos
outsb
jp
add
xchg
lods
pop
rcll
jp
pop
mov
inc
sub
and
add
insl
std
jns
pop
cmp
and
xchg
enter
mov
arpl
xchg
jmp
inc
mov
fcmovnb
addl
jb
dec
jmp
add
sahf
insb
in
push
mov
jecxz
test
or
push
and
inc
mov
mov
xchg
xchg
sbb
stos
mov
lock
jle
adc
cmc
push
les
fisttpll
jmp
loop
test
pop
test
das
jae
pop
in
mov
cltd
fldlg2
imul
push
aad
paddq
sbb
lea
repnz
shl
mov
test
pop
xchg
aad
ljmp
inc
jnp
fdecstp
loop
fldl
lret
xlat
in
fs
fwait
std
pushf
cmp
dec
push
popf
fidivs
fs
dec
fmull
inc
js
aaa
xor
mov
int3
in
cmp
add
mov
fdivl
push
jg
out
inc
aam
mov
and
fsubs
jmp
dec
in
jmp
inc
seto
clc
pusha
xor
dec
pop
pop
jns
adc
jno
mov
or
pop
fwait
in
push
fs
mov
xchg
ljmp
dec
push
dec
hlt
sub
push
inc
sbb
popf
in
clc
cli
cmc
loop
inc
fcoms
movsb
shrl
sarb
lock
xor
dec
mov
insl
aaa
push
rcl
into
cmpsb
xor
push
sbb
mov
ja
cmovnp
lret
jmp
add
cwtl
and
mov
and
gs
stos
mov
cmp
mov
cmp
imul
sub
cmp
ret
je
mov
shl
mov
fsubl
pop
cs
aas
add
fisubrl
ds
aam
sbb
sti
popf
xchg
in
xchg
cmp
negl
bound
int
inc
jge
out
xchg
push
jle
push
xor
xchg
jl
cmp
fwait
adc
aaa
xor
in
sti
and
jge
mov
lds
gs
sbb
push
xchg
add
nop
xorb
inc
inc
int3
xor
gs
les
data16
je
ja
test
into
lods
loope
cwtl
mov
inc
push
push
rcl
push
fwait
pop
xor
hlt
in
insb
mov
push
mov
popf
lahf
ret
xchg
test
jl
sbb
jle
loope
adc
add
add
adc
pop
sub
or
cmp
xchg
fcoml
scas
es
pushf
or
jg
push
lods
cwtl
mov
stos
addr16
jno
fdivrl
mov
push
lds
jno
clc
popa
fidivl
jecxz
mov
int3
push
leave
lcall
dec
push
jne
jns
adc
scas
into
add
mov
sarl
pop
repnz
in
bound
test
sbbl
mov
mov
lcall
in
xor
mov
fldcw
and
and
mov
mov
dec
ds
push
pop
insb
xor
fcom
or
push
mov
fsubr
jbe
mov
mov
daa
int
scas
cmpb
rclb
push
daa
in
aaa
test
es
push
xchg
aas
xchg
leave
add
jmp
dec
lret
fwait
and
push
or
sbb
call
or
xor
ret
adc
int
mov
in
jg
cmp
lahf
sbb
addr16
enter
lahf
imul
insb
sub
xor
adc
in
pop
mov
aam
lds
push
mov
aad
sub
jns
sahf
ljmp
fiaddl
in
cs
sbb
jo
xor
mov
dec
inc
dec
mov
shlb
mov
in
xchg
dec
pop
lods
adc
push
out
out
in
test
popf
push
aas
in
sub
loop
jg
insl
je
mov
xor
popa
push
cmp
loop
fadds
xchg
push
mov
mov
mov
js
pop
test
fiadds
mov
pop
and
or
xor
and
or
imul
pop
clc
out
lods
inc
testl
cld
mov
mov
cwtl
testl
jge
pushf
sub
jnp
stc
sub
mov
jb
es
mov
inc
jno
add
pop
imul
inc
fwait
xchg
or
packssdw
hlt
lds
cli
xor
repz
or
push
cmpsl
jle
sbb
push
ss
out
and
imul
jecxz
mov
xor
push
lock
mov
pop
add
xchg
cmp
pop
scas
in
or
dec
xor
call
scas
mov
jb
lock
fmul
lahf
push
sahf
adc
aas
out
pop
fisubrl
es
insl
out
push
adc
cli
pop
xchg
jbe
fists
pop
imul
fldenv
in
jno
jmp
out
and
or
adc
add
sarl
sar
insl
mov
push
add
or
mov
test
in
repnz
sub
mov
imul
nop
dec
jg
pushl
pop
fldenv
fucomp
dec
sti
sbb
adc
mov
pop
sub
xchg
adc
pop
adc
push
pop
mov
or
xor
inc
or
dec
jno
or
jne
pop
cltd
dec
mov
dec
stos
mov
repz
out
lods
stos
iret
cmpsb
lahf
inc
adc
outsb
inc
imul
mov
inc
fwait
stc
jae
hlt
push
leave
xchg
mov
or
inc
rclb
push
jmp
dec
lea
xorl
dec
inc
scas
xchg
inc
xor
inc
jge
fists
adc
daa
lcall
jp
je
cmp
sub
jbe
faddl
lahf
sbb
jno
xor
push
inc
add
adc
push
daa
dec
add
jb
inc
ljmp
testb
iret
xor
fimull
rol
arpl
ds
popa
jo
add
inc
xchg
aam
sbb
iret
out
adc
xor
push
not
enter
sub
xchg
loope
sub
sbb
les
push
cmp
fldcw
fisubl
ret
and
shlb
or
sub
inc
sbbb
mov
cmovne
pop
jg
jns
insb
xchg
je
push
xor
je
data16
jnp
sub
jae
ja
sti
mov
cmp
jecxz
add
xchg
sub
mov
cmp
test
xchg
test
mov
inc
jmp
push
jle
inc
mov
push
aam
push
pop
jmp
ss
hlt
cmp
cmp
enter
add
subl
stos
push
std
jle
jp
call
or
mov
jle
into
lret
mov
pop
pop
push
jo
sub
test
jo
test
inc
sub
test
loopne
ficompl
lea
dec
icebp
mov
pop
ret
sbb
inc
scas
push
cwtl
fldl
mov
bound
sahf
sbb
es
mov
mov
mov
loopne
imul
aaa
or
out
xchg
dec
scas
add
addr16
xlat
fcmovu
movsl
mov
jbe
fistps
insl
dec
xor
cwtl
jns
xor
xchg
ret
insb
or
aas
shll
dec
jle
add
sub
fwait
loopne
in
cmc
push
cmp
or
negl
rcll
pop
inc
xchg
inc
shr
imul
clc
into
fidivrs
cmp
add
shlb
jecxz
mov
add
popf
mov
or
jl
movsl
jg
fcompl
fisttpl
sub
xor
push
dec
mov
call
test
mov
clc
imul
push
fwait
sub
addl
cmp
pop
jl
mov
mov
rcll
or
cld
sahf
nop
mov
xor
icebp
das
xor
test
xchg
das
mov
sub
fsubs
inc
outsb
ret
shll
rclb
pop
xor
test
sbb
out
xchg
xchg
repz
sbb
mov
push
cmp
fisttpl
inc
mov
adc
adc
ret
adc
mov
test
mov
rcrb
pop
stos
sub
cmp
inc
cmp
dec
repz
and
sub
loope
mov
sbb
pop
mov
inc
out
and
xchg
mov
mov
rcll
cmp
ja
mov
and
jnp
mov
loopne
insl
mov
fidivrs
mov
xor
push
mov
sub
sbb
cltd
shlb
adc
add
jmp
cmp
test
jno
in
sbb
inc
dec
pop
pop
cmp
xchg
ret
mov
sbb
daa
int
jo
or
out
cmp
sahf
or
sar
sarl
dec
aas
fsubrs
lods
and
sub
cmp
cmp
inc
inc
xor
lods
cli
pop
lret
add
std
cmc
pop
add
fistpll
push
cmp
cli
leave
fiadds
lods
stos
dec
insl
lret
sarl
dec
fists
inc
inc
adc
addr16
push
dec
xchg
mov
decb
sbbl
cmp
sub
fstpl
dec
loop
enter
xchg
imul
adc
stos
mov
mov
xchg
sahf
inc
rcrl
mov
fwait
or
shlb
inc
pop
xchg
push
jae
fidivrs
hlt
loopne
adc
mov
fs
lret
les
mov
xchg
cmp
cmp
rcll
scas
dec
cmpsl
push
xor
pushf
inc
xchg
cmp
add
shll
jl
jl
mov
int3
filds
or
fiadds
xchg
push
jne
xchg
mov
xchg
dec
pop
xchg
inc
pop
mov
aas
add
mov
or
push
scas
cmp
pop
pop
cmc
hlt
pop
test
rcll
and
jae
mov
sbb
out
mov
xor
sub
lcall
aad
cld
roll
sti
and
or
xchg
adc
jecxz
movsl
aas
jle
pop
fldcw
fwait
sahf
mov
mov
iret
popa
lcall
ret
mov
sbb
jns
ds
sub
or
jl
adc
je
ja
repnz
out
aaa
cmpsb
out
jne
fidivl
jge
cld
and
fs
stc
repnz
xor
mov
push
aas
sbb
adc
test
outsl
rcr
in
xchg
cwtl
jecxz
cltd
xlat
test
and
pusha
dec
int3
shr
jge
iret
pop
xchg
cmp
lcall
xchg
mull
fldt
xchg
dec
push
sarl
loope
pop
and
rorl
adc
sbb
aas
daa
cmp
add
mov
popf
arpl
imul
push
inc
arpl
gs
push
fistl
inc
inc
mov
jne
mov
ret
fwait
lea
jle
fiadds
jb
rorl
scas
xchg
push
mov
fisttps
in
cmp
jp
lods
jns
dec
cmc
jb
mul
shll
call
push
mov
mov
jmp
jno
pop
rcrb
aaa
dec
jae
lds
leave
push
xchg
jne
adc
leave
xor
add
or
addr16
push
adcl
adc
mov
and
sbb
cltd
or
pop
aam
or
inc
in
ljmp
mov
add
jbe
adc
mov
out
cmpl
dec
sbb
xor
dec
add
adc
fidivrs
lock
mov
mov
push
mov
cmpsb
inc
das
cmpsb
mov
jne
sub
scas
sub
xchg
jae
adc
insl
jp
gs
scas
adc
xchg
adc
mov
sub
std
outsb
push
repnz
jge
daa
jb
aas
mov
sub
ds
xor
out
jle
movsb
mov
inc
fdivs
or
loope
pop
mov
pop
cmpsl
out
cmp
scas
jne
mov
lahf
jae
shrl
lahf
pushf
aaa
dec
bound
fistpl
or
and
orb
sarb
in
mov
inc
addr16
sbb
sbb
push
loop
loop
cmpsb
pop
dec
fdivr
xchg
mov
outsb
movl
aaa
aad
pop
mov
sahf
pop
cwtl
add
in
add
pushf
sub
cmp
cwtl
shll
orb
or
rcll
int
dec
mov
mov
faddp
cmp
mov
fwait
pop
stc
xchg
pop
cli
ret
add
ret
call
loope
testl
ficoms
cltd
mov
lods
inc
test
dec
sbbb
inc
nop
xor
and
inc
jbe
pushf
loop
insb
and
cbtw
and
in
addl
rcrb
cli
dec
push
rcrl
loop
aad
insl
or
imul
add
mov
je
mov
jg
jecxz
incb
xchg
in
lahf
inc
je
mov
jo
add
in
imul
jecxz
jne
in
jo
push
jbe
inc
lods
or
xchg
popf
in
das
inc
push
sarb
push
hlt
mov
daa
aaa
je
cwtl
loopne
not
pop
bound
cmp
mov
sbb
int3
xchg
pushf
scas
mov
es
data16
adc
nop
pushf
jl
dec
adc
jmp
dec
test
popa
testl
add
nop
xchg
dec
mov
fldt
dec
aam
mov
push
pop
outsl
mov
repnz
nop
test
jne
addl
dec
lods
pop
lods
ds
aad
push
lods
pushf
addb
lock
in
andb
jo
add
aaa
xlat
or
push
xchg
movsl
add
sti
inc
sbb
or
dec
es
mov
dec
test
mov
loope
sub
mov
or
sbb
rorl
xor
xchg
pop
addr16
jae
inc
add
mov
or
add
push
jmp
cmpb
jne
pop
mov
inc
pop
stos
pop
lds
out
jmp
jge
leave
daa
jae
jge
lea
pop
jle
mov
inc
shr
je
aad
outsl
xchg
pop
mov
rolb
or
push
mov
mov
cmpsb
jno
imul
xchg
pop
xor
scas
mov
jnp
pop
adc
addr16
sti
jg
xchg
mov
popf
test
jns
mov
push
cli
xchg
push
fmul
test
sbb
test
das
nop
pop
rolb
and
pushf
xchg
pop
mov
cmp
pop
daa
cli
add
lret
rorl
adc
das
stos
sarb
scas
stos
lcall
xchg
push
js
push
jecxz
sbb
jae
xchg
pop
adc
sbb
add
mov
pop
mov
daa
sarl
cmp
xchg
ljmp
pop
roll
cmp
xchg
movsl
aas
pop
sbb
mov
push
ret
sub
enter
ds
pop
xchg
icebp
lea
cltd
cmp
cmp
mov
mov
lret
je,pt
sbb
hlt
lea
fcompl
mov
mov
inc
adc
mov
push
test
fsubl
test
jp
stos
mov
xchg
idivb
cmp
or
addr16
pop
icebp
sbb
mov
cli
push
adc
lods
sub
jne
inc
adc
scas
sbb
adc
xor
pop
lea
mov
repz
mov
es
xchg
mov
push
mov
xchg
push
stc
cwtl
fwait
cmp
lods
fs
sbb
fistpll
lds
jo
xor
push
mov
lds
jb
pusha
jbe
xlat
xchg
stos
call
loope
popa
into
xchg
mov
test
mov
mov
popf
cmpsl
in
pop
bound
mov
xor
popf
iret
jbe
and
ds
dec
bound
mov
les
rcl
pop
cs
jmp
jb
int3
xchg
xor
ds
sbb
mov
cltd
sbb
bound
or
xor
jae
scas
notb
imul
and
mov
or
jb
stos
xchg
cmpsl
push
nop
jbe
dec
add
adc
jb
adc
jecxz
loop
arpl
out
pusha
push
sahf
push
loopne
mov
dec
mov
add
adc
and
xor
stos
inc
lea
scas
cltd
lret
push
push
in
and
sbb
or
lods
push
ret
insl
fisubl
xchg
xor
les
xchg
rcll
add
lds
into
or
jp
pop
adc
jp
ja
ljmp
insl
cmp
or
mov
stos
mov
ds
mov
lahf
test
pop
ret
cmp
ss
push
add
pop
dec
jae
dec
rcrb
mov
mov
out
pop
pop
cmp
nop
ljmp
cmp
cmpsl
sub
xor
in
movl
aam
xchg
fnstcw
dec
daa
sbb
sahf
lds
fwait
pop
out
enter
inc
push
jnp
inc
in
add
jns
push
and
dec
lods
pop
pop
sbb
dec
jnp
adc
cmc
sub
pop
mov
xchg
sub
mov
mov
add
iret
out
test
mov
orb
mov
ret
inc
inc
and
mov
outsl
inc
repnz
mov
rcrb
jo
mov
movsl
sub
loope
xor
mov
cmp
inc
cltd
xor
jecxz
insb
dec
xor
jb
add
shrl
insl
jecxz
ds
adc
pop
inc
cli
mov
cmp
setnp
cs
push
push
inc
mov
test
int
out
rolb
ss
and
mov
ret
pusha
mov
mov
inc
negb
pop
cltd
call
sbb
mov
xor
insb
nop
xor
push
imull
rcl
mov
sub
xor
xchg
sbb
push
nop
push
sahf
mov
cmpsl
fwait
imulb
stc
jmp
sbb
adc
lret
xchg
hlt
jo
adc
mov
or
imul
push
push
sub
or
int3
and
mov
add
call
addb
lahf
int
or
jmp
push
push
push
dec
mov
adc
xchg
mov
jmp
cltd
push
cmpb
pusha
cmpsl
mov
pop
add
js
fimull
movsb
sub
mov
ja
or
icebp
xchg
push
cmp
rcrb
add
lret
mov
and
ret
fs
fcompl
jle
inc
cltd
insl
fbld
test
hlt
ret
push
es
shrb
test
cmp
adc
xor
std
mov
jmp
pop
ja
jle
aam
int
hlt
imul
lahf
and
ja
imul
in
jnp
and
xchg
adc
xchg
mov
inc
loopne
xchg
movsb
add
shl
inc
sbb
sbb
push
test
dec
xlat
jecxz
and
and
mov
in
add
pushf
inc
push
scas
dec
fcomi
mov
fstl
adc
pop
jbe
clc
mov
out
jp
in
int
lahf
movsb
enter
sahf
jo
dec
dec
adc
f2xm1
call
pop
jno
adc
movsl
ljmp
dec
and
xchg
cmpsl
lods
cmp
adc
xor
test
mov
pushf
insl
and
scas
push
sub
icebp
xchg
pop
xchg
rcrb
in
test
jl
mov
xchg
popa
push
sbb
iret
inc
pop
repz
jg
fstl
inc
mov
mov
inc
dec
xlat
ds
lahf
lea
clc
pop
fwait
mov
add
repz
lea
hlt
clc
mov
mov
int3
fcom
shl
repz
in
add
xchg
pop
sbb
mov
cmpsb
repz
lahf
mov
mov
das
dec
call
sub
jecxz
or
push
add
mov
pop
pop
push
push
mov
dec
fwait
dec
jo
sbb
fwait
scas
xor
xchg
aad
push
sub
jnp
mov
xor
sub
cli
or
outsl
sub
sbb
jge
icebp
jnp
and
arpl
in
xchg
stc
daa
jle
mov
cmp
lods
lret
sti
pop
mov
sub
pop
xchg
adc
lock
ds
inc
ficomps
adc
cmp
mov
cli
mov
dec
roll
jno
cmp
fsubs
jmp
out
out
sub
stos
cmp
ret
call
test
arpl
dec
or
mov
enterw
lea
in
cmpsb
aam
les
aad
cmp
sti
stos
ret
jecxz
or
imul
movsl
add
shrl
mov
sbb
jge
add
xorl
imul
scas
xor
and
in
into
std
stc
lret
sbb
and
daa
clc
hlt
sbb
ret
dec
std
jns
mov
mov
fcmovu
pop
rcrl
jle
test
imul
clc
aas
xor
push
call
and
mov
adc
mov
and
mov
add
enter
and
or
mov
xchg
imul
cmpsb
jecxz
add
inc
cs
jno
addl
lahf
add
push
or
adc
jmp
sbb
pop
lods
or
push
pop
mov
addb
cmp
rolb
fwait
outsb
xlat
pushl
dec
sbb
mov
push
cmp
push
mov
mov
inc
lea
pop
rorl
mov
nop
or
xchg
cmp
aad
xlat
jl
pop
daa
inc
add
ja
lods
jl
xor
push
bound
inc
mov
je
fs
mov
sahf
test
mov
test
mov
or
out
test
xchg
dec
pushf
sbb
inc
and
xchg
inc
ja
or
push
mov
shlb
inc
dec
fwait
addb
xchg
shr
mov
push
fisubs
nop
inc
loope
pop
rolb
sub
lds
popf
mov
or
add
fdivs
idivb
and
pop
aas
jl
int
xlat
cltd
ja
stc
stos
out
mov
sub
sbbl
cmp
arpl
mov
add
mov
les
mov
fildl
mov
xor
and
gs
test
xor
push
jae
shrl
add
inc
sub
cwtl
lret
clc
aam
lcall
and
sti
jp
dec
adcb
shll
or
cmpsb
incb
add
cmp
stc
insb
out
push
push
jecxz
int
out
dec
xor
xor
jg
neg
jmp
jecxz
rcr
cwtl
adc
pushf
ja
sbb
dec
or
repnz
pop
inc
ret
sbb
or
lret
cwtl
rcrb
out
mov
lods
mov
gs
push
inc
sub
add
stos
inc
pop
daa
lea
ss
dec
mov
sbb
push
sbb
in
lahf
mov
aad
loop
push
fcmovne
and
jg
movsl
int3
mov
or
loope
or
in
mov
push
loopne
inc
mov
and
xor
jae
and
sbbl
mov
jno
popf
add
out
add
aam
int3
rcl
add
or
and
cmp
int3
adc
xchg
adc
inc
ficoml
out
push
scas
inc
aaa
int3
add
sub
fstpt
adc
xchg
test
mov
cld
adc
icebp
rclb
in
addr16
and
out
psubusw
imul
imul
jge
add
adc
iret
mov
inc
je
shl
dec
sub
xchg
lahf
xlat
lret
push
aad
cmp
push
xor
lea
js
nop
int
es
dec
and
inc
lret
jl
popa
mov
cltd
mov
outsb
cli
push
movsl
pop
mov
scas
xchg
push
ffreep
mov
ficoml
cmp
popf
add
cwtl
fnsave
mov
out
popf
push
in
push
cmc
push
lcall
lods
lds
loope
ss
lods
popf
ret
push
outsl
and
and
and
add
inc
or
cmpsl
xor
pop
mov
dec
data16
fsubrl
es
test
mov
sbb
out
jg
jns
xchg
mov
adc
sahf
sti
mov
out
xchg
dec
add
jecxz
cmp
cmp
mov
inc
mov
sub
xchg
jo
lock
inc
repz
xchg
jg
outsb
mov
xor
int
pop
movsb
adc
xchg
sarb
aaa
out
lret
dec
jne
push
mov
fwait
enter
xchg
pop
mov
lock
inc
sub
ret
jnp
mov
or
adc
jl
jns
lret
sbb
imul
push
not
sbb
hlt
mov
lea
pop
dec
test
sahf
jmp
xchg
or
les
cmp
inc
insl
push
lds
sub
mov
adc
repz
cmp
add
dec
xor
mov
repz
hlt
sbb
xor
xor
mov
cmc
and
fstpl
xchg
fimuls
cmp
pop
dec
cmp
push
cmp
mov
sbbl
jmp
mov
xor
jmp
lods
ss
cmp
fcmovu
adc
ljmp
inc
xchg
outsl
fildl
mov
dec
xor
mov
mov
dec
out
fidivl
sbb
mov
rcrl
ss
xor
mov
cmp
fsubr
mov
push
jp
add
shl
adc
lret
mov
mov
mov
repz
mov
xchg
notl
imul
mov
nop
fistpll
outsl
or
dec
inc
adc
or
xchg
mov
lods
mov
pop
test
int
sbb
xchg
fcoml
dec
mov
dec
xlat
xchg
xor
mov
mov
adc
pop
jb
insb
inc
pushf
loop
pushf
loopne
lods
cld
xor
sbb
mov
cmp
push
jg
call
inc
sbb
fcmovb
pop
fisubrl
dec
orl
dec
push
add
inc
in
inc
sub
testl
sub
inc
incb
adc
loope
pop
jecxz
inc
mov
dec
inc
ds
pop
jecxz
mov
pop
cmpsb
mov
xor
call
and
subl
sbb
xchg
adc
mov
fsubrl
es
repnz
jae
cmp
jp
movsl
inc
test
xor
or
testb
repnz
stc
xor
in
fmuls
inc
in
mov
mov
sysexit
cs
push
pop
mov
jle
lret
jl
icebp
push
sub
mov
add
pop
mov
inc
ds
out
das
mov
call
mov
jle
ret
mov
push
shrl
out
mov
sti
popf
sub
in
cmpsl
mov
lret
loopne
data16
lock
jne
mov
adc
mov
sbb
test
dec
or
aas
push
mov
repz
filds
call
stos
jle
xor
jmp
sbbl
pop
test
addr16
fdivr
add
js
test
mov
add
push
xchg
aas
ret
pop
ret
or
loopne
loop
ffree
and
xor
sbb
push
jne
jne
lods
cmp
mov
fs
xchg
je
mov
andl
movsl
clc
adc
shlb
add
cltd
push
or
pop
xor
icebp
mov
out
dec
movsb
divl
xchg
adc
loopne
ffreep
cmc
inc
scas
sahf
dec
out
dec
inc
in
mov
mov
test
lock
inc
mov
mov
pop
mov
loopne
imul
fsubrl
inc
sbb
mov
or
arpl
push
lds
pop
mov
or
mov
lea
mov
std
fistpll
push
jnp
insl
jb
loop
dec
xor
data16
jbe
loopne
jbe
in
hlt
pushf
cmp
fdivrs
jl
pop
lods
cmpb
pop
adc
fsubl
pop
loopne
dec
jmp
imul
pop
add
icebp
fbstp
ja
push
push
popa
scas
repz
add
jnp
lret
mov
pop
or
pop
mov
pop
icebp
dec
mov
repz
mov
pop
push
aaa
lahf
out
sub
push
lret
lods
pushf
js
dec
lahf
idiv
loope
push
inc
mov
int
std
lea
jns
je
xor
sub
xor
dec
fadds
cs
iret
gs
xor
rolb
ljmp
loopne
inc
xchg
xor
or
mov
adc
inc
mov
sarl
jg
mov
dec
inc
push
mov
out
sbb
inc
dec
dec
mov
call
aam
mov
popa
cs
imul
in
cld
fs
xlat
ds
in
and
or
mov
xchg
and
jge
pop
adc
xchg
mov
adc
outsb
push
test
dec
mov
push
repz
dec
push
mov
or
mul
mov
aam
pop
lds
lret
pop
xchg
mov
cmpsl
mov
dec
enter
mov
call
pop
mov
popf
pop
movsl
fdivrs
sub
pushf
scas
testb
mov
jg
enter
adc
xchg
sub
in
xchg
andl
adc
ficompl
je
dec
lods
in
rorl
add
or
fldl
xchg
or
inc
ja
jbe
lock
push
mov
aad
lret
xor
scas
hlt
pop
xchg
mov
sbb
int
lahf
xor
and
or
xchg
cmp
out
or
fbstp
sbb
fsubs
add
clc
pop
sub
imul
adc
pop
pop
es
mov
add
inc
sti
mov
mov
insb
inc
mov
mov
pop
stos
mov
mov
xor
loope
es
jp
mov
ret
lods
ja
in
xlat
xchg
aaa
xor
xchg
js
popf
rcrl
aas
movsb
sub
cmpsl
or
lock
sub
push
lds
sub
sub
add
imul
lcall
cmovl
les
push
or
sti
test
out
fdivrs
xchg
subb
int
push
out
add
add
jmp
sahf
jg
lea
push
mov
aaa
cmc
dec
jne
jg
sti
lret
mov
scas
xor
adc
dec
push
inc
popf
adc
stos
push
rcll
jecxz
imul
movsl
xchg
jno
outsb
mov
jno
lcall
test
and
jne
jecxz
bound
sarl
inc
aas
cmp
imull
insb
inc
int3
data16
call
lods
mov
add
outsl
dec
mov
push
inc
sub
inc
cmp
jecxz
add
rorb
pop
enter
jg
mov
clc
gs
add
push
repz
push
push
dec
and
xchg
fadd
lock
cmp
gs
in
sub
bound
inc
iret
add
aas
lcall
xor
pop
adc
insl
push
in
xor
out
push
std
sti
hlt
xchg
in
sub
jg
icebp
aad
xor
dec
addr16
jle
cmp
sub
in
cmp
sbb
and
push
lock
and
pusha
lret
inc
mov
pop
call
fs
push
mov
cmp
inc
xorb
pop
pop
jo
fwait
test
cmp
jle
dec
int
outsl
jl
aam
ljmp
sbb
test
xchg
jp
fcom
inc
mov
daa
mulb
xor
sbb
insl
leave
sti
inc
stc
icebp
js
push
pushf
jp
sbb
dec
adc
and
push
js
leave
shlb
in
pushf
repz
xchg
jl
adc
dec
pop
jecxz
mov
jg
stc
pop
sub
out
xchg
inc
out
insb
fadd
in
cli
jne
repnz
sbb
xchg
sbb
movsb
or
imul
cwtl
popa
lea
lcall
xor
clc
push
inc
pop
xlat
jecxz
jno
and
push
iret
lods
in
daa
cwtl
jne
xchg
fsubs
int
mov
mov
mov
fcmovb
jge
and
mov
mov
adc
jnp
lods
cld
xchg
cmp
in
sbb
pop
shr
or
or
iret
not
mov
imul
outsl
push
dec
scas
movsl
mov
cmp
jg
les
out
xchg
jecxz
dec
mov
or
stc
in
lea
aam
cmp
jnp
xchg
add
pusha
gs
aad
and
mov
lods
adc
jge
test
adc
mov
dec
arpl
ret
scas
and
cmpsl
push
shlb
and
xchg
jmp
fcmovnbe
and
xchg
inc
sub
mov
xor
or
inc
fisubrs
and
mov
aam
jp
xchg
push
hlt
mov
pop
cmpsl
js
in
cvtps2pd
cmp
sbb
lods
sub
mov
imul
cmc
subl
das
xor
and
add
xor
cmp
daa
mov
jl
test
cmc
outsb
xchg
pushf
jb
and
fistpl
lock
push
adc
mov
mov
push
jae
pop
ret
cli
bound
lods
imul
cmp
mov
or
ret
cwtl
call
jne
jmp
test
mov
mov
sub
mov
rolb
adc
push
lods
and
and
or
lea
push
inc
mov
subb
addb
mov
mov
aas
into
sub
sar
movsl
test
outsl
sbb
cs
push
and
push
xchg
sbb
rcrl
and
inc
aam
sub
loope
call
loopne
xor
push
sbb
insl
push
lea
xor
movsl
daa
dec
sbb
mov
xlat
pop
and
insl
aas
jae
loop
aam
sbb
xor
inc
sub
out
shll
xor
push
push
push
movsl
xor
movsb
movb
sub
or
pushf
fistpll
and
imul
mov
jge
adc
add
data16
jmp
mov
pop
sbbb
mov
sbb
mov
outsl
dec
mov
leave
xor
and
pop
xchg
mul
push
add
pop
aas
mov
lock
jl
repnz
pop
cmp
mov
lret
sub
loopne
sbb
mov
jge
cltd
sti
cmp
adc
lahf
dec
xlat
jno
jg
fmuls
sbb
daa
add
mov
cmp
ret
in
loop
mov
inc
xor
cmp
inc
xor
call
cltd
xchg
outsb
push
popf
in
loop
les
loope
mov
clc
adcb
into
into
xchg
les
loopne
sbb
dec
pop
mov
notb
inc
fadd
les
and
inc
mov
cmpsl
or
sbb
xchg
nop
mov
loope
aaa
cmp
mov
xchg
jbe
lahf
ret
jb
je
xor
lds
es
push
mov
daa
fnsave
cmp
loopne
pop
mov
repnz
xchg
fdivs
outsb
pop
sahf
cmp
cltd
hlt
insl
xor
repz
and
dec
pop
pop
pop
test
sbbl
daa
loop
test
dec
ja
sbb
add
sub
stos
jl
dec
in
mov
popa
aad
push
xor
imull
xchg
push
sar
cltd
dec
stos
add
xor
dec
sbb
mov
mov
sbb
les
cmpsw
pop
fiaddl
iret
rorl
fmull
ds
xlat
push
mov
ret
jns
sti
mov
or
push
fwait
lods
xorl
stc
ret
aaa
push
fs
xchg
dec
mov
mov
loope
xor
and
sbb
xor
ja
int3
js
pop
loopne
pop
cs
movsb
sbb
inc
jg
mov
add
gs
outsb
jge
cmp
arpl
mov
jo
xchg
fsubs
and
push
add
mov
xchg
jbe
pusha
in
lods
insb
int3
mov
movsb
out
clc
jecxz
ret
cmp
xor
push
inc
scas
mov
and
mov
out
fwait
mov
jle
adc
ja
add
fwait
or
movaps
xchg
loop
push
mov
and
xchg
sbbl
jl
shrl
push
mov
sub
push
xor
xchg
mov
pop
pop
popa
adc
jp
xor
mov
or
xchg
ret
mov
jb
icebp
in
nop
fimuls
out
mov
fidivl
pop
push
lods
sub
imul
sub
mov
add
or
jecxz
imul
xor
imul
xchg
and
fdivs
or
push
insl
in
insl
mov
in
mov
das
test
lea
fildl
ret
data16
dec
shll
mov
xchg
push
and
cltd
or
jl
jle
inc
adcl
clc
sub
jecxz
xchg
push
mov
sub
jg
mov
lods
rcr
shll
popl
leave
cmpb
stc
push
in
les
and
fwait
pop
or
pop
repnz
pushl
jp
mov
cs
jmp
xchg
lods
jbe
cwtl
mov
jg
dec
mov
mov
shrl
repnz
xchg
mov
mov
fmul
out
mov
hlt
xor
push
dec
cmp
negb
call
aam
jno
push
pop
leave
xor
loope
mov
loop
inc
adc
pushf
mov
xchg
fsubs
jecxz
push
int
sbb
cmc
push
mov
and
mov
lea
fptan
scas
rorb
xlat
je
stc
int
in
add
xlat
xor
push
pop
hlt
in
dec
xchg
mov
cmp
test
add
mov
sub
or
dec
dec
std
sbb
sahf
sub
inc
add
sbb
arpl
mov
and
je
pop
inc
outsl
jge
inc
sub
dec
popa
ss
jo
stos
into
fs
jmp
mov
mov
mov
sub
imul
dec
cld
adc
sbb
push
jno
bound
mov
mov
insl
rol
pop
in
ret
div
and
inc
push
fadds
sub
adc
pop
sbb
xor
xor
leave
mov
arpl
repz
cltd
jg
xchg
mov
and
int
pop
mov
mov
mov
cli
xlat
mov
ret
mov
sbb
ljmp
mov
les
arpl
mov
xor
in
ficomps
xchg
sbb
mov
pop
stc
repnz
push
leave
test
inc
push
jns
fadd
popf
and
xor
or
aaa
lea
cmp
stos
pop
es
push
out
dec
pop
ret
xchg
xchg
cmpxchg
ret
adc
lods
jno
push
imul
mov
xchg
iret
jnp
pop
pop
roll
push
cmp
pop
xchg
icebp
ror
jp
mov
popl
or
sbb
lods
xchg
push
out
shl
imul
mov
mov
mov
sbb
dec
frstor
inc
mov
sub
nop
pusha
or
popf
jae
fisubrl
mulb
les
ret
lods
dec
push
xchg
inc
xchg
jne
push
mov
jmp
ror
fldenv
mov
fdivrl
or
pusha
lcall
jne
sbb
out
mov
out
movsl
stc
dec
jo
sub
push
push
mov
mov
cmp
ja
mov
xor
jnp
out
das
fwait
pop
mov
jb
ret
adc
flds
inc
mov
cmp
sbb
out
inc
in
pushf
das
lea
mov
mov
aad
mov
into
ja
dec
cltd
xchg
imul
and
or
push
ss
add
and
push
sub
mov
dec
sti
cmpsb
mov
stos
pop
rol
jb
add
pop
jno
loope
in
sbb
stos
pop
or
test
inc
adc
mov
xor
inc
faddl
add
hlt
inc
or
sbb
xor
enter
sub
cli
push
pop
dec
sbb
dec
div
push
test
cli
cld
jne
dec
insl
mov
mov
and
push
cmpsl
ret
xchg
pop
cld
dec
or
pop
xchg
lds
in
push
inc
sbb
iret
add
lock
cmc
sbb
or
add
out
aam
lahf
pop
sbb
test
jb
out
push
inc
popa
sarl
popa
lcall
push
add
js
xchg
sub
test
incb
dec
add
and
in
stc
sbb
lods
mov
or
hlt
lock
lds
repnz
std
sub
nop
cltd
ja,pt
iret
es
negl
jmp
mov
ret
icebp
xor
into
push
out
and
add
in
mov
push
outsb
sar
movsl
cmpsl
jb
cwtl
and
cmc
test
push
push
xor
lock
mov
std
and
scas
mov
adc
add
in
ljmp
repnz
pop
imul
je
push
gs
mov
push
sub
xorl
dec
iret
adc
pusha
pop
mov
xchg
ss
mov
push
add
stc
sti
xlat
push
out
cmpsl
mov
lods
jmp
mov
mov
mov
xor
push
es
pop
testl
jne
iret
repz
or
sbb
jl
xor
sub
out
dec
ret
int3
xchg
shrl
and
in
sbb
cmp
outsb
adc
js
jle
mov
das
stos
push
pop
les
outsl
insl
mov
cmpsb
mov
add
sar
push
lret
repnz
mov
ja
sar
xor
xchg
cld
xor
pushf
dec
sti
das
jg
bound
push
push
inc
xor
sahf
shl
jle
leave
jo
int3
bound
out
push
xor
enter
int
and
push
or
je
sub
out
enter
mov
or
rol
popa
jno
push
in
pop
mov
jmp
and
psrld
test
cs
add
bound
bnd
in
popf
inc
add
mov
fstl
push
jno
adc
adc
cmp
adc
xor
jp
popf
mov
mov
int
add
out
mov
sub
and
cs
adc
cmpsl
jne
mov
fs
and
pop
out
shll
ficoms
adc
roll
out
sbbl
loopne
rclb
ret
hlt
stos
dec
std
fsts
xchg
cltd
add
adc
dec
pushf
add
mov
rorb
xchg
xor
xchg
xor
cmc
repz
xchg
dec
divb
xchg
pop
cmpl
shll
fs
fldenv
adc
or
jmp
popf
repz
dec
pop
xchg
popf
inc
rcll
pop
std
icebp
dec
std
repz
ret
xor
mov
or
jmp
paddw
jmp
and
fsubrp
pop
pusha
hlt
mov
push
cld
adc
lcall
loop
xor
test
repz
sbb
cli
lret
dec
or
mov
sbb
movsl
jnp
mov
push
in
jg
cmpsb
mov
adc
insl
xchg
imul
xor
cmc
test
data16
push
xorl
cmp
xchg
aam
and
outsl
or
ljmp
pusha
lret
scas
xchg
es
outsb
loopne
jne
and
stc
or
xchg
aad
fdivs
inc
enter
sub
insb
cmpsb
call
test
jp
dec
cwtl
and
shl
out
xchg
roll
into
dec
pop
xchg
insl
test
or
pop
stos
sub
push
jmp
jb
test
cmp
xchg
outsl
mov
repz
inc
outsl
ja
pop
push
enter
sub
mov
xlat
sbb
dec
out
aad
jecxz
mov
cmpsb
pusha
mov
push
outsl
lods
fcompp
outsb
mov
rcrl
fidivrs
outsb
cmpb
dec
mov
repz
xor
out
int3
xor
das
pop
mov
dec
gs
lcall
das
cltd
lahf
icebp
mov
loop
inc
adc
mov
stos
cmp
pop
xor
or
or
dec
jmp
jo
adc
lock
int3
fwait
inc
mov
imul
pusha
ret
dec
mov
lods
mov
sub
ret
out
imul
dec
dec
in
push
ja
xorb
nop
push
push
mov
repz
movsb
jmp
sub
out
out
push
jge
pop
aad
rcrl
push
fwait
mov
cmp
sarb
sub
pop
dec
dec
inc
out
xlat
sti
lods
sbb
mov
pop
push
sahf
mov
adc
fnstcw
cmpsl
cmp
adc
cld
lcall
orl
sub
subb
in
cmp
jecxz
das
out
popf
xlat
jl
repz
cli
pop
mov
into
mov
push
pop
pop
sbb
cmp
adc
fisubrs
daa
cmp
jb
test
add
pushf
pusha
daa
call
sub
in
std
fadds
fs
xor
dec
in
fdivrl
popa
pop
jnp
jp
jae
cmpsl
cmpl
ljmp
mov
jno
mov
jo
testb
xor
call
adc
dec
ja
adc
and
mov
jecxz
mov
gs
cmp
ja
insl
push
outsl
xor
push
popf
pop
popf
sub
dec
lods
scas
adc
jmp
bound
push
lahf
xor
pop
xor
inc
add
cmpsb
movsb
inc
inc
xor
cmpsb
dec
mov
aaa
push
sbbl
test
movsb
hlt
add
mov
fidivl
push
cmp
dec
dec
dec
adc
call
push
sub
arpl
inc
push
jnp
in
inc
lret
mov
add
enter
imul
sbb
xchg
inc
cmp
fwait
mov
dec
cmp
mov
dec
sahf
gs
inc
rorl
out
mov
rcrl
movsl
mov
sahf
lods
mov
idiv
push
sbb
push
dec
lods
inc
mov
pop
imul
outsl
mov
pushf
mov
ficompl
cmc
std
jmp
in
mov
popa
cmp
dec
pusha
lea
sbb
mov
test
cmp
push
cmp
pusha
aaa
in
pop
and
xor
repnz
addr16
pop
lret
or
pop
data16
rclb
push
jb
or
xchg
or
aam
sbb
pop
push
iret
pop
in
or
or
dec
pop
xor
xchg
jle
lcall
push
lret
push
pop
mov
hlt
dec
fucom
mov
aas
add
xchg
jmp
jmp
push
aaa
fnstsw
incl
in
pop
cmp
testl
inc
xor
push
ss
xchg
sbb
outsl
and
fistps
in
push
daa
fcomps
adc
push
pop
cmp
jle
ret
jl
sbb
mov
lock
movsl
mov
stc
data16
mov
push
jecxz
ss
or
ss
popf
call
xchg
pop
lea
pop
and
mov
push
fsqrt
andl
ja,pt
cmc
push
ret
pop
clc
fistpl
jb
int3
push
enter
nop
dec
mov
lea
mov
iret
pop
push
inc
adc
or
bound
ja
pusha
pop
das
fists
imul
jnp
adc
outsl
xor
sub
jp
sbb
jbe
popf
push
jmp
insb
call
clc
jb
out
mov
and
mov
dec
dec
clc
lock
imul
mov
lds
push
fs
xchg
pop
in
xchg
or
jge
lcall
in
lcall
xor
lock
and
push
mov
cltd
push
dec
pop
andl
cmp
faddl
jl
repnz
bound
stc
idivl
xchg
and
push
jb
xsetbv
shrb
mov
add
jae
subl
js
lret
adcb
outsb
mov
push
je
mov
xor
ret
adc
xchg
cltd
jb
mov
cs
into
icebp
and
es
jb
prefetch
pop
push
pop
adc
inc
xchg
sbb
push
add
mov
xchg
push
push
and
push
icebp
mov
daa
push
stc
jmp
addr16
pop
push
test
or
in
mov
dec
mov
scas
in
insb
rol
icebp
or
and
pop
xchg
sub
out
sub
bnd
xchg
and
pop
and
pop
mov
scas
movsb
pop
or
shll
push
add
movsl
dec
dec
cmp
xchg
lea
aaa
mov
dec
push
scas
daa
iret
push
cmp
fsubr
pop
fisubrs
pop
dec
jns
add
fs
and
dec
cs
lret
fwait
ret
sbb
testl
repnz
stos
inc
in
pop
inc
out
dec
sub
cmpl
shlb
mov
jmp
pop
mov
sub
into
scas
mov
rcrb
sbb
cs
and
add
mov
add
jge
sub
add
std
repnz
es
adcb
xor
repz
add
sbb
cmpsb
mov
stc
dec
xor
push
cmp
push
sbb
rol
aam
or
add
aam
movb
pop
jne
push
sub
dec
adc
mov
mov
test
push
movsb
push
adcb
loop
sti
and
sub
jb
popa
xor
stc
push
not
cmp
xchg
pop
inc
dec
mov
sub
xchg
cmpsb
cwtl
or
outsl
pushf
sbb
push
ret
fsubrs
pop
outsl
cmp
mov
and
push
adc
cmp
sub
es
das
cmp
dec
fistpl
mov
add
rorl
out
push
pop
jmp
pushf
sub
xchg
and
push
lock
xchg
ja
imul
inc
sahf
dec
push
cmp
inc
jae
lret
dec
hlt
shl
outsl
test
pop
and
xchg
int
movsl
movsl
push
add
imul
cmpsl
xchg
rcrl
push
cltd
data16
insl
jbe
sub
fwait
stos
fistpl
fwait
jno
outsl
les
adc
cltd
popa
aam
negl
xor
sub
dec
popl
dec
inc
jg
nop
cs
insb
jnp
cmp
mov
cmpsl
xchg
mov
sub
push
pop
leave
xor
mov
pop
cwtl
jne
jbe
sbb
je
call
sub
xchg
xchg
mov
lods
mov
lea
xchg
cmp
pop
mov
insl
push
aas
leave
insb
sarb
mov
insl
scas
pushf
xor
and
push
mov
cs
icebp
ds
shl
cmp
out
and
int3
rcrb
jb
add
shl
jmp
rolb
xlat
xchg
pop
pop
lahf
add
lea
fsubrl
mov
push
nop
les
cld
imul
fwait
and
not
or
andb
inc
shl
fwait
shlb
idiv
std
pop
jb
out
pop
rorb
pop
dec
aam
mov
cmp
push
movsb
push
cmpsb
push
xchg
daa
inc
fdivs
adc
add
lcall
and
and
imul
subl
fstp
movsb
ja
mov
mov
movsb
xchg
cs
jmp
fincstp
insb
dec
mov
sub
fs
xor
lahf
lea
cltd
aas
fidivrl
sahf
fldl
rclb
jecxz
int3
cmp
xlat
mov
dec
mov
add
fdivr
cmp
xchg
cli
std
mov
add
ja
imul
loopne
popa
mov
mov
lret
xchg
sub
call
clc
icebp
xchg
notb
in
lock
xchg
inc
sahf
mov
push
int3
cli
sbb
push
rcrb
dec
cmp
aaa
dec
fldt
jns
test
scas
mov
mov
daa
jge
in
pop
jecxz
out
aas
xor
dec
push
in
or
sub
and
dec
and
daa
ss
sub
scas
xchg
mov
xlat
or
pop
enter
call
push
mov
nop
out
je
in
dec
xchg
or
ret
sub
xchg
outsb
imul
push
push
in
fdiv
mov
out
daa
aam
add
xchg
pop
stos
jp
jmp
leave
xchg
xchg
cwtl
insl
in
test
mov
je
add
scas
jo
fisubrl
mov
fstpt
mov
and
fwait
loopne
sarb
cmp
pop
add
es
subb
jle
aam
movsb
scas
outsl
mov
dec
test
and
hlt
mov
in
xchg
pop
stos
stos
je
sbb
mov
sbb
fwait
push
mov
or
mov
popf
call
testb
idivb
mov
push
in
cmp
mov
sub
pop
and
sbb
inc
pushf
mov
cltd
inc
ror
fimull
aam
cmpl
ljmp
leave
icebp
mov
sbb
or
inc
add
adc
iret
cld
ror
push
daa
repnz
dec
shrb
int
or
pop
popf
icebp
inc
insb
movsl
rol
push
imul
dec
das
mov
fcoml
or
fdivl
mov
icebp
lock
je
lea
ja
sbb
inc
dec
inc
mov
and
dec
push
cmpsb
jne
xchg
pop
iret
mov
pop
pop
mov
scas
pushf
stos
int
outsb
outsl
or
gs
lahf
fcmovu
and
das
mov
pop
in
mov
insl
testl
mov
stc
jmp
movsl
fbld
jbe
lea
mov
lcall
xchg
fsubrl
or
sub
aas
xor
pop
mov
pop
test
int3
out
mov
mov
jle
outsl
aaa
fwait
nop
or
or
into
jle
jbe
jno
pop
rclb
push
mov
push
int3
cmpsb
imul
negl
xchg
rol
call
orb
in
xchg
jle
add
push
or
add
js
pop
jecxz
arpl
inc
mov
cmp
pushf
xchg
push
iret
mov
xor
jo
out
scas
and
clc
mov
or
pop
outsb
jl
cld
iret
test
clc
mov
xchg
add
push
jmp
nop
jb
cmp
pop
sub
scas
pusha
std
mov
outsb
testl
fcmovbe
jg
add
in
loopne
aaa
sub
push
addr16
mov
cmp
pop
insl
pop
jns
addb
int3
ror
cmp
stc
in
pop
mov
aaa
imul
icebp
popl
add
or
push
in
out
daa
insb
xchg
jae
sbb
movsl
xor
adc
lock
sub
mov
sbb
inc
lcall
or
adc
outsl
orb
cmc
adc
and
cltd
mov
mov
adc
pushl
push
xchg
js
add
imul
mov
in
sarb
ja
adc
and
cltd
pop
imul
dec
jo
xchg
push
pop
mov
dec
push
inc
movb
dec
leave
push
mov
jecxz
decb
or
ss
dec
lahf
lret
in
sbb
int
les
inc
push
fs
push
or
gs
stos
inc
or
mov
dec
bound
sub
int3
lea
adc
movsb
jbe
sbb
sbb
movsb
push
mov
into
mov
mov
pop
inc
add
add
sub
cmp
out
push
icebp
mov
mov
mov
ficompl
jns
mov
pop
jae
fadds
and
movsl
mov
stos
pusha
mov
xchg
movb
sub
pop
imulb
sub
sahf
dec
push
mov
stc
dec
data16
jl
dec
aas
mov
addl
xchg
push
jle
inc
adc
ret
and
out
in
push
push
mov
cmp
dec
cwtl
sbb
pop
add
aad
cwtl
insl
std
inc
out
mov
jg
adc
mov
rclb
pushf
mov
or
loope
andl
cmp
aad
nop
cmp
adc
scas
in
jno
jecxz,pn
inc
push
je
mov
add
push
push
sti
mov
sub
fs
sbb
movsl
nop
push
mov
es
cltd
shll
cltd
scas
inc
jo
aas
mov
lret
xchg
aaa
push
and
cs
mov
hlt
mov
and
mov
or
sub
jo
mov
int
push
mov
push
mov
dec
mov
mov
cli
idivb
aaa
rcll
mov
dec
mov
adc
add
ja
pop
fisttps
mov
sub
mov
xor
insl
cmc
icebp
out
movsl
enter
lods
inc
mov
pop
fs
imul
xor
mov
ja
daa
sahf
loopne
or
ficoml
test
mov
nop
jns
jo
sub
inc
cmp
ljmp
xor
xor
mov
pop
sub
inc
and
ret
out
cmp
iret
jns
pop
jge
out
sti
in
lods
mov
pop
jmp
aas
adc
shrb
fcom
inc
icebp
sbb
adcb
and
imul
jbe
lahf
in
sbb
aaa
mov
fisubrs
mov
mov
fs
bound
bound
pop
andb
insl
daa
jno
cli
outsl
fidivrl
int3
and
xor
lock
rcr
xlat
jb
fistps
xlat
cmpb
mov
pop
loopne
jnp
jmp
inc
in
lods
call
cld
push
arpl
lds
add
and
test
adc
leave
cmp
push
sub
ljmp
rorl
aad
and
dec
loop
dec
je
mov
mov
imul
shrl
int3
add
jg
mov
pop
insl
or
in
sbb
xchg
jp
cmp
inc
std
jns
aas
outsb
mov
xor
pop
xor
fisubl
int3
xchg
pop
and
adc
mov
and
outsl
hlt
test
movb
movsl
cld
cmp
jne
push
in
dec
jl
rolb
test
jle
lcall
cmpsb
repnz
jle
mov
jg
mov
sbb
nop
test
mov
jge,pn
andb
mov
push
jmp
inc
movsb
jnp
mov
sbb
icebp
cmpsl
sbb
cmp
cmp
push
add
dec
dec
lahf
out
movsl
fsubrp
sub
dec
jmp
cmp
test
cmp
jnp
scas
mov
cmp
dec
std
xor
mov
sti
cmp
pop
push
sbb
sub
jns
cli
lods
aad
loop
cmp
sbb
xchg
jg
ds
adc
mov
xor
jl
or
repz
lods
inc
mov
adc
fistpll
scas
inc
insb
xchg
fs
pusha
mov
lret
sub
addr16
iret
add
movd
mov
sbb
mov
mov
andb
pop
mov
or
push
xchg
adc
add
push
cwtl
jge
in
mulb
sub
jg
out
cmc
mov
push
mov
push
add
mov
pop
and
mov
push
and
cmovs
adc
mov
fistpl
push
lds
movsb
add
mov
or
adc
cmp
and
sbb
push
mov
data16
fwait
jecxz
out
xchg
stos
mov
inc
xchg
in
pop
cmp
pop
cwtl
insb
in
mov
mov
and
je
adc
in
mov
pop
insb
xchg
iret
lds
pop
xchg
lcall
push
jo
pop
stos
jbe
lock
adc
dec
into
or
stc
int3
xor
lahf
dec
and
pop
fidivrs
sbb
fwait
sub
pop
xchg
pop
jb
jne
insl
test
mov
das
and
inc
xchg
hlt
popf
pop
xchg
out
jecxz
popa
mov
nop
imul
ds
shlb
inc
bound
push
nop
in
test
mov
and
jo
xor
xor
mov
cli
inc
mov
push
mov
enter
mov
sti
push
movsl
or
movsb
ds
jo
js
mov
fnsave
push
jno
insl
lea
jnp
stos
sbb
incl
mov
push
lahf
fadds
test
fucomip
mov
push
pop
mov
sbb
mov
fiaddl
insb
lods
jle
adc
push
repz
pushf
mov
push
imul
ljmp
push
cmp
ret
adc
pop
mov
jb
add
imul
rorl
lock
fwait
pop
xchg
loop
cs
dec
or
negb
ss
stos
mov
add
inc
or
test
stos
mov
cmpsb
add
popa
ficoms
add
pop
lock
imulb
je
pop
or
push
bound
scas
mov
imul
xchg
jo
in
mov
mov
xor
stos
ljmp
push
ss
mulb
inc
sbb
cmc
ret
mov
cmpsl
dec
mov
push
inc
clc
xchg
xlat
add
lcall
xlat
xor
xorl
iret
add
adc
push
adc
lods
jae
inc
lds
mov
push
stc
xchg
or
stos
push
and
dec
movsb
jl
int3
insb
jo
out
mov
mov
nop
xchg
jp
xchg
stos
les
mov
or
pop
scas
push
imul
sub
adc
xor
jnp
loop
arpl
test
mov
fildll
repz
ljmp
lods
int
mov
sbb
mov
aam
scas
jl
cltd
in
popa
js
shrl
xchg
mov
mov
jo
loop
cli
xchg
xchg
sbb
jp
sub
lret
in
jbe
mov
fsubp
inc
popf
jmp
push
fwait
icebp
clc
adc
jecxz
push
xchg
lcall
push
movsb
jb
movsl
inc
dec
mov
mov
movsl
inc
testl
mov
jge
add
mov
icebp
mov
pop
gs
adc
pop
mov
mov
add
pop
inc
jns
jecxz
lcall
push
shrl
icebp
cmp
cmp
mov
jmp
into
pop
jnp
push
js
roll
cmpsb
push
sub
xchg
popf
std
pop
cmp
xchg
jecxz
addr16
push
mov
jl
xchg
adc
jae
adcl
xor
push
cmp
lds
xchg
xor
pop
rorl
dec
mov
xlat
cmp
cmp
inc
pusha
inc
sub
pop
shll
jmp
loop
sub
movsb
push
fldcw
stc
lahf
std
aam
lods
mov
xorb
jecxz
cmp
mov
xchg
ljmp
jne
adc
push
movsb
or
adc
mov
testl
lret
pop
addps
mov
pop
push
mov
call
cmpl
jle
xchg
mov
pop
adc
icebp
lea
fisubrl
xchg
fldl
in
mov
arpl
out
adc
aas
mov
pop
enter
inc
add
fmuls
cwtl
int
push
repnz
sub
cmc
enter
imull
or
sub
test
mov
test
xchg
mov
jl
jne
mov
jns
or
pop
mov
xor
inc
ss
loope
fisubs
lods
stos
sbb
das
add
xor
push
popf
mov
pop
nop
aas
aam
aad
loop
fsubs
xor
cmp
sub
xchg
jmp
out
outsl
adcb
out
xchg
leave
dec
fstps
pop
loopne
addr16
jge
adc
stc
fists
mov
fwait
adc
std
or
add
mov
fdivrs
movsb
popa
jge
pop
jb
dec
sti
aam
fcomps
shlb
mov
cmp
xchg
and
inc
or
push
icebp
and
push
aaa
dec
bound
mov
stos
lret
adc
sarl
or
in
push
loope
xor
dec
sub
out
pop
cmpsb
stos
xor
fisubrs
and
cmp
sub
fsubrl
pop
arpl
call
in
aaa
gs
cmp
dec
xorb
and
mov
mov
mov
add
adc
jnp
sbb
mov
mov
pop
cmpb
mov
aad
stc
fistl
pop
push
lds
push
outsw
in
sub
xchg
adc
sub
out
out
shrb
mov
imul
iret
and
enter
xor
notl
int
add
xor
xchg
push
imul
pop
outsl
cmp
xchg
inc
xor
ljmp
xchg
add
outsb
sbb
xchg
pushl
cmpsl
mov
mov
arpl
setnp
jmp
sub
jo
movsb
push
ljmp
xchg
dec
dec
sahf
sub
aas
and
fidivs
notb
insl
mov
ss
sbb
mov
pop
adc
cld
bound
inc
or
mov
daa
out
dec
jns
push
jl
or
ret
cmpl
xchg
sbb
clc
test
add
sbb
adc
jmp
cmp
fiadds
pop
jne
loope
es
mov
jnp
mov
testb
scas
mov
jne
arpl
adc
inc
int
outsb
or
mov
sbb
imul
lds
stc
jo
mov
push
adc
movsl
dec
adcl
call
loope
adc
mov
ret
fbstp
stos
iret
lret
jp
inc
push
sub
fidivrs
pop
ss
adc
xchg
push
or
add
lods
outsb
loop
movsl
push
mulb
dec
aas
add
adc
fsub
faddp
and
in
mov
repnz
in
jae
lea
xchg
popf
js
push
lea
pop
dec
sbbl
ficoml
lret
fs
or
dec
xor
jg
and
sbb
sbb
jge
pop
das
dec
mov
aaa
pop
loopne
scas
xor
shlb
add
inc
mov
bnd
mov
sbb
and
dec
pop
mov
adc
jle
or
or
add
sub
push
sub
mov
and
loopne
add
adc
outsb
sbb
stos
clc
cld
pop
movsl
aas
xor
pop
rcll
jno
inc
jle
inc
inc
dec
sub
jno
testl
loop
dec
std
mov
add
and
mov
xor
push
sub
dec
pushf
pop
jae
push
push
mov
daa
push
shll
mov
adc
mov
mov
pop
movsl
movl
xlat
cld
int
pop
sbb
mov
jo
xor
xor
sti
mov
lret
mov
jo
push
out
es
into
lcall
cmc
scas
pop
divb
fs
adc
push
dec
cmpsb
in
out
pop
cmc
test
jae
xor
lods
test
out
and
mov
aas
jmp
sub
test
loope
inc
sub
loop
push
lods
and
fnstcw
out
enter
mov
push
or
aad
fdivs
sbb
stc
andl
test
and
mov
pushf
or
enter
and
mov
sbb
mov
inc
cld
outsl
cmc
xor
shl
dec
push
sub
mov
jle
lret
add
cmp
cmp
mov
test
pop
mov
and
xor
sub
mov
or
xchg
mov
arpl
cmp
sbb
add
mov
pop
mov
sbb
lahf
insb
addr16
movsb
xchg
sub
arpl
ja
data16
mov
jno
jae
inc
sub
xchg
orb
and
pop
loope
je
test
test
sub
mov
test
mov
jmp
or
ss
sbb
inc
cmp
mov
push
xchg
pop
pop
je
dec
xor
std
jo
and
push
sub
insl
fadds
mulb
push
out
xor
mov
testl
sahf
fwait
sarb
in
adc
jo
shlb
repnz
xchg
inc
iret
add
int3
pusha
imul
mov
cmp
rorl
and
mov
xchg
lock
mov
cmp
inc
cld
aad
lock
and
inc
in
lret
movsb
arpl
cmp
fs
cltd
xchg
iret
pop
das
dec
or
stos
sub
cmp
sbb
or
cmc
jns
movsb
mov
or
xorl
cli
lret
jg
mov
push
pop
mov
sbb
dec
or
pop
repnz
adc
jge
vpsrad
outsb
ret
mov
mov
pop
mov
xor
addl
push
je
xor
pop
movsl
mov
call
mov
fbstp
pushf
jp
jecxz
test
cmp
subb
aam
pop
and
and
jp
jbe
pop
insl
pop
mov
out
dec
ret
movsb
adc
adcb
ror
cmp
inc
cmp
mov
ret
and
xchg
insb
cmp
pop
popf
add
and
mov
movsb
mov
out
out
lcall
cmp
rorb
pop
inc
dec
jnp
rcr
xor
push
loop
cmp
sbb
xchg
mov
into
cs
jbe
imull
mov
adc
divl
lock
mov
bound
dec
sub
sbb
call
in
push
rcll
push
dec
aas
call
mov
lcall
hlt
popf
push
stos
and
add
fists
int3
loope
call
test
sbb
sub
out
adc
cmp
divl
fwait
mov
cmp
lods
add
xor
js
icebp
int
dec
or
mov
push
xor
pop
mov
pop
xor
pop
imulb
xchg
int
mov
mov
and
mov
mov
sarl
xor
dec
xchg
popf
and
dec
or
int3
data16
dec
in
aas
push
pushl
int3
int3
adc
lock
sahf
stos
or
bound
idivl
dec
sbb
pop
pop
inc
scas
ljmp
inc
xchg
ficompl
xor
push
and
dec
out
pop
cltd
ja
out
cmpsl
mov
scas
xchg
iret
mov
fnstcw
rolb
xchg
xchg
push
cmpsb
pop
jg
pop
fdivrs
out
xchg
es
or
sar
xchg
pop
ret
push
stos
out
push
push
inc
and
and
adc
notb
addr16
lock
outsb
daa
lret
cld
adc
das
jle
dec
in
repnz
mov
cli
adc
movsb
std
cli
sub
mov
cmp
int
bound
mov
xchg
pop
pop
into
clc
fmull
dec
cltd
aam
fsubrp
into
call
mov
add
dec
out
adc
std
jns
leave
push
pop
add
xchg
notb
fdivr
push
inc
notb
pop
imul
or
pusha
lock
xor
imul
enter
push
arpl
shr
mov
cs
out
je
and
or
pop
int3
jbe
aam
sti
movsl
cmpsb
or
test
sbb
outsb
bound
das
outsb
and
test
test
loop
sbb
fwait
scas
fs
mov
sarl
inc
add
cld
fadd
xor
mov
outsl
xor
dec
stc
push
rolw
loope
lods
std
pop
cltd
out
xchg
mov
mov
inc
test
and
ss
ss
jns
addr16
dec
bound
jo
or
xor
mov
jb
fucomp
arpl
push
ret
mov
xchg
and
je
test
push
xchg
in
push
jge
dec
push
cmp
xchg
adc
outsl
and
and
into
adc
adc
ss
cmp
mov
int3
leave
sbb
cld
lahf
mov
addb
popf
hlt
jo
sbb
pop
xlat
repz
cmp
xchg
aad
jbe
jl
in
outsb
xchg
sbb
mov
xchg
rolb
push
xor
mov
push
ss
push
cmc
sbb
push
ret
inc
add
inc
and
shrb
mov
xchg
jmp
xchg
inc
and
test
scas
test
xchg
adc
rcrb
lret
mov
ffreep
in
jl
adc
repz
adc
and
call
mov
int3
testb
inc
jns
mov
adc
popa
call
cwtl
test
in
mov
fstl
push
testl
pop
movsb
xor
dec
scas
enter
shll
mov
insl
sbb
jne
and
pushf
call
jp
lock
movsl
mov
push
pushf
jl
jnp
loop
lret
dec
shrl
jg
ja
daa
stc
bound
fisubl
insl
test
mov
out
ret
pop
lret
xchg
mov
mov
aaa
push
jmp
xchg
loopne
xor
mov
aad
or
pushf
xchg
subb
testb
mov
pop
scas
mov
fsts
scas
imull
sub
pop
es
and
scas
jp
andl
push
dec
incb
jle
in
pop
sub
push
rcrl
lods
mov
testl
es
mov
cmp
pop
test
fadds
stos
mov
xor
jbe
fs
or
xchg
gs
outsl
cwtl
dec
adc
outsb
jmp
aas
adc
fnstsw
leave
sbb
jp
mov
pop
mov
out
ret
mov
xor
cmpb
fmull
lea
mov
mov
inc
xchg
and
popa
movsb
lret
inc
mov
push
jl
xor
dec
mov
test
dec
and
out
fwait
sahf
mov
pop
adc
test
or
ds
insb
pop
add
sbb
cmp
fistpl
jns
jg
nop
test
int3
icebp
mulb
scas
mov
dec
pusha
pop
pop
js
jp
lret
adc
xor
and
imul
xor
mov
mov
ret
and
add
cli
imul
imul
push
cmpl
loopne
das
or
lcall
lds
scas
push
testb
scas
jno
cmpb
insb
push
imul
cmp
inc
mov
aad
insb
jl
sbb
fiadds
js
and
mov
sahf
inc
bound
jbe
sbb
fildll
outsb
popf
cmp
pop
xchg
inc
inc
ljmp
cmp
sbb
cs
adc
fisubrl
in
rol
mov
mov
test
sbb
cmp
sbb
sti
mov
mov
or
out
std
pop
mov
arpl
dec
pop
std
push
cli
inc
sbb
xchg
mov
ds
push
shl
xchg
inc
clc
mov
push
push
fildl
or
test
and
dec
pop
icebp
and
jmp
out
test
ljmp
popf
rclb
shlb
arpl
sbb
rorb
mov
dec
sub
pop
test
dec
or
jbe
rep
insb
lea
mov
add
adc
pop
sub
movsb
popf
out
mov
es
mov
or
ret
xchg
mov
popa
or
adc
cmpsl
push
and
jge
inc
add
and
popf
push
and
in
movsl
sbb
js
adc
out
ret
mov
repnz
sbb
lds
cltd
sbb
repnz
cli
scas
movsl
movsl
sub
cs
popa
mov
fcmovbe
adc
out
pop
shll
stos
or
inc
mov
dec
pop
aam
or
mov
push
xor
dec
stos
enter
xchg
pop
subl
jbe
repz
or
lods
inc
xchg
in
or
inc
mov
dec
or
xchg
mov
fstl
xchg
data16
loopne
mov
dec
lret
mov
addr16
rclb
xchg
loop
imul
loop
dec
in
pop
idivb
in
mov
in
push
dec
cmp
pushl
jo
mov
lods
ret
xchg
dec
movsl
and
pop
icebp
or
cmpsl
cmc
push
stos
adc
clc
scas
jno
jno
fcomip
and
movsl
insl
and
ret
cmpsb
mov
cmpb
rorl
xchg
test
adc
lods
incl
and
jmp
dec
lds
dec
gs
int3
loopne
fdivrl
cld
mov
cmc
xor
or
repnz
cmp
insb
pusha
sbb
mov
jno
cmp
inc
cli
sahf
popa
mov
rcl
pushf
popa
push
xor
cmp
jb
subl
or
or
xchg
mov
cli
push
pop
lock
fidivrs
pop
lea
mov
leave
mov
inc
add
ss
inc
jecxz
lret
icebp
jb
test
mov
jle
pusha
in
dec
clc
xchg
ljmp
aaa
js
int3
in
push
jle
adc
pop
addr16
clc
sub
inc
fnstcw
iret
imul
aam
repnz
xor
pop
fwait
inc
dec
mov
cmpsb
stos
clc
push
movsl
inc
iret
ja
inc
jno
test
loopne
push
lds
sahf
in
das
mov
aam
in
imul
and
and
inc
pop
test
xchg
std
rcr
push
push
dec
jge
pop
jge
in
incb
pop
and
arpl
daa
xchg
clc
scas
pop
sbb
iret
xchg
dec
jmp
xchg
lds
out
mov
mov
clc
xor
pop
mov
insb
idivl
mov
mov
mov
cld
popf
call
sbb
dec
inc
and
das
pop
xor
push
add
jp
add
test
into
lret
xor
jmp
adcl
pusha
lea
inc
push
jo
push
jbe
or
mov
add
neg
jns
push
and
sub
sub
sti
mov
cmp
mov
inc
push
jo
add
add
cmpsb
mov
out
sub
push
cmpsb
xchg
push
cmc
pshufw
add
and
dec
mov
cltd
cld
xchg
xor
or
dec
sub
push
adcb
push
aaa
std
cmp
mov
stos
jae
jo
xchg
loop
jl
push
cmp
xchg
and
out
push
imul
sbb
aaa
insb
popl
mov
jbe
pop
pop
rolb
xor
add
lds
scas
fists
jmp
sbb
js
cwtl
test
pop
aam
cltd
pop
js
movsb
and
pop
push
cld
popf
test
daa
sarl
sub
leave
mov
pop
loopne
mov
mov
xor
rol
js
adc
xor
xorl
lds
ja
inc
adc
jg
mov
out
mov
repnz
lods
repz
push
repz
insl
cwtl
sahf
sub
loope
popf
mov
in
icebp
adc
fs
mov
fidivrl
adc
ljmp
addr16
fs
jo
add
adc
or
cmc
ret
call
in
lds
mov
addb
test
fiadds
cmp
inc
into
int
mov
hlt
inc
dec
cmp
cmp
jge
sbb
shr
aam
movsl
js
mov
gs
mov
dec
int
dec
xor
mov
adc
mov
jo
adcl
inc
movsb
mov
adc
cld
mov
jb
lock
push
mov
dec
dec
mov
cmpsl
sub
jl
addb
nop
movsl
xchg
dec
cmp
dec
in
ljmp
push
sbb
push
cmpsb
cwtl
std
aam
shlb
sbb
leave
in
test
test
or
fsubrs
push
cmp
jmp
mov
or
repnz
loopne
test
push
mov
mov
dec
jecxz
fs
push
push
lods
sahf
fwait
in
or
cmc
adc
outsb
push
sbb
pop
jmp
std
in
gs
adc
out
test
subb
insl
push
push
push
mov
mov
pop
push
jmp
sbb
jg
mov
cld
dec
sub
dec
inc
mov
sub
int
cld
xor
test
cwtl
scas
lcall
fucomp
mov
fdivl
mov
fwait
and
cmp
and
test
decb
lds
mov
in
das
cs
cmc
mov
imul
xor
add
xor
inc
sarl
push
cmc
pop
fidivrs
mov
icebp
jbe
imul
insb
std
lock
xor
cmc
pop
or
mov
push
in
inc
es
rolb
dec
cld
cmp
or
pop
pop
mov
aas
bound
adc
mov
cmp
cs
xchg
nop
inc
dec
dec
dec
jnp
mov
aas
xchg
jns
mov
pop
popa
lock
test
cmp
xlat
dec
in
mov
xor
cmc
push
cmp
jne
lods
push
inc
add
daa
imul
push
mov
jmp
pop
movsb
repz
outsb
push
xchg
mov
fwait
push
and
fisttpl
xchg
into
sbb
adc
rcrb
xchg
cli
outsb
enter
aad
push
mov
mov
pop
lock
xchg
inc
xchg
icebp
cli
out
push
lcall
sar
cmp
testl
xlat
jbe
lcall
inc
inc
xor
push
push
xor
outsl
cmp
dec
out
jne
bnd
cmp
std
jae
ret
rol
pop
cwtl
push
mov
xor
adc
stc
aam
jmp
addr16
pusha
push
xchg
clc
insb
daa
xchg
xchg
push
dec
mov
and
xor
inc
sub
cmp
pop
xor
jno
cmp
push
lea
pop
push
repz
sbb
xchg
and
das
icebp
mov
sub
xchg
mov
adc
jmp
mov
test
testl
add
inc
out
or
xchg
aaa
xchg
lcall
bound
sub
xor
sbb
xchg
or
xchg
inc
mov
xchg
in
adc
and
sub
add
pop
cs
xchg
fcoml
cmc
push
lock
cmp
scas
leave
lahf
bndstx
insb
fimuls
sbb
std
and
push
adcl
and
call
pop
lret
cmpsb
sub
fdivs
rorb
test
dec
mov
icebp
mov
push
arpl
adc
push
add
xchg
cld
lock
out
xchg
cs
xor
jge
fsubrl
pop
data16
into
xchg
mov
repz
sub
sar
jmp
and
aad
push
and
pop
sbb
cmp
jns
fldenv
in
jo
in
lcall
imul
mov
adcl
push
jnp
mov
jl
bound
dec
push
push
ret
lahf
push
dec
xchg
idivl
in
mov
push
in
icebp
inc
push
xor
adc
enter
mov
aad
mov
sub
aam
lods
insl
in
ja
lods
adc
xchg
mov
sar
add
jnp
mov
or
lods
bound
mov
cmpsl
popa
leave
mov
jmp
cmp
push
push
and
push
mov
mov
je
mov
mov
inc
das
sbb
pushf
imul
sub
mov
mov
imul
cmp
xchg
mov
inc
pop
mov
or
push
data16
sub
sti
mov
loopne
adc
int
js
aas
push
jno
lcall
js
stc
filds
or
adc
sub
jge
mov
adc
loopne
sub
sub
imul
mov
lret
hlt
in
fldl
mov
aaa
hlt
mov
xor
mov
imulb
xor
outsl
inc
push
in
out
mov
int3
xchg
pop
sub
add
ss
sub
shlb
cmp
out
scas
jle
pop
leave
in
divb
pop
or
jg
mov
aaa
shrl
cmp
out
mov
push
sub
push
xlat
int
or
das
dec
movsb
inc
mov
mov
in
xchg
gs
pop
jnp
shrb
xchg
lcall
mov
inc
ljmp
icebp
sbb
into
push
jle
repz
push
fisttpl
mov
mov
push
test
cmpsb
shrl
jecxz
push
mov
and
xor
inc
imul
and
test
cmp
jmp
dec
stos
xchg
pop
dec
inc
in
stos
jmp
sbb
pop
mov
jo
insl
jne
mov
shll
mov
sbb
dec
pop
lods
push
loope
in
in
pop
mov
mov
mov
xor
jp
mov
sbb
add
jle
cmp
mov
xchg
jg
mov
and
js
test
and
add
lods
mov
jne
inc
scas
push
xchg
add
push
dec
jp
cld
fs
std
inc
insl
xor
cmp
popa
jo
add
iret
xchg
pop
push
in
sbbb
in
adc
push
es
lock
das
scas
push
jmp
repz
ret
enter
mov
cli
loopne
loopne
xor
mov
jae
stc
xor
fsubr
sbb
out
idivb
xchg
test
ljmp
add
stos
out
push
mov
ret
ffree
push
add
cmp
enter
repnz
dec
jno
and
pop
mov
pop
jno
push
xor
pop
mov
outsl
dec
or
jb
adc
pop
inc
roll
sub
adc
xchg
xchg
ss
jecxz
int
dec
or
aad
or
dec
out
jge
mov
arpl
mov
mov
xchg
in
imull
repz
sub
pop
repz
xor
rcll
imul
add
jp
or
shl
pop
je
out
ficomps
lods
mov
xor
dec
sbb
lods
data16
mov
ret
test
dec
mov
dec
and
cmp
in
and
dec
cmpsb
pop
sub
imul
into
push
es
mov
push
sbb
push
adc
lock
push
jge
je
insb
push
mov
in
test
cmp
insl
mov
neg
dec
lret
sti
cmpsb
popf
lret
je
dec
adc
push
mov
add
lcall
jmp
pop
or
mov
lods
int
sbb
lret
std
sub
push
mov
fwait
test
xor
cmpb
scas
ret
jmp
aam
mov
push
pop
ret
pusha
pusha
mul
mov
int
mov
jnp
jmp
xor
mov
aaa
je
dec
je
shll
mov
xor
out
stos
adc
aad
mov
xor
and
aam
call
orb
sub
test
push
pusha
pop
xchg
jmp
or
push
inc
jnp
and
cltd
movsb
lcall
jmp
and
clc
cmpl
lcall
mov
in
push
push
cmp
sbb
je
mov
rcrl
mov
ret
xor
pop
imul
pop
mov
xchg
out
outsb
dec
movsb
mov
push
mov
jle
in
fldt
int3
add
push
in
popf
adc
ret
xchg
pop
dec
push
outsl
les
dec
das
scas
imul
mov
lahf
mov
enter
jns
ss
int3
fucom
lock
cltd
inc
pop
sub
add
shlb
sbb
ss
ret
or
pop
mov
addr16
mov
stc
popa
dec
movsl
inc
xchg
ljmp
repz
js
xchg
js
sub
push
aaa
in
mov
mov
push
jbe
in
iret
xchg
xchg
jnp
iret
testl
scas
push
stos
xor
push
out
mov
xchg
dec
sbb
or
xchg
shll
fdivp
sti
mov
inc
jb
aam
test
fimuls
push
mov
ret
xor
in
dec
pushf
inc
push
dec
mov
sub
xlat
cmpsb
es
pop
add
xor
iret
sub
mov
pop
sbb
mov
dec
decl
sub
push
dec
cmp
or
rolb
jmp
fmull
pop
test
jmp
dec
xrelease
cmpsl
and
push
or
enter
or
insb
dec
push
add
sub
orb
add
and
out
jo
fdiv
push
fwait
add
imul
imul
loope
jp
ljmp
test
out
ficomps
dec
add
push
push
dec
cmp
add
cwtl
jle
in
test
sbb
and
enter
adc
mov
adc
iret
pushf
pop
jns
repz
imul
and
hlt
pop
jmp
aaa
sbb
dec
inc
insb
loop
hlt
in
dec
dec
scas
add
lods
jl
push
sub
inc
and
outsb
push
pusha
inc
int
sub
xor
mov
push
mov
sbb
loope
in
sub
adc
pop
add
sbb
lret
lds
insl
add
call
pop
cmpsl
mov
das
fiadds
sbb
fmulp
cmp
sub
clc
mov
xor
call
gs
iret
movsb
mov
in
outsb
xor
pushf
and
sub
and
dec
adc
test
push
in
or
movsl
xor
cmpsb
pop
popa
stos
push
shrl
dec
lea
cmp
lods
outsl
aaa
test
mov
adc
sti
pop
imul
jno
push
out
repz
cmpsb
call
pop
dec
or
dec
dec
mov
es
cld
sbb
mov
cmpsl
mov
popa
cltd
adc
rcrl
push
mov
push
push
sbb
popa
adc
es
lods
das
xchg
push
mov
jns
and
out
jmp
iret
shlb
inc
cld
cmpsb
in
dec
lods
and
inc
adc
jl
push
push
cmp
or
push
jle
popf
sti
xor
pop
jg
lock
dec
sbb
pop
add
in
ficomps
int3
notb
push
addr16
jbe
ffree
mov
arpl
mov
pop
lds
push
and
aad
shrl
fcoms
insb
jnp
xor
jns
or
dec
jp
cmp
pusha
mov
test
fs
int3
pushf
stos
stos
testb
push
enter
jbe
ret
jmp
mov
adc
xor
jg
ret
inc
add
and
jns
cltd
popa
imul
inc
xorb
test
enter
rcr
inc
mov
sub
shrl
std
push
loopne
movb
lahf
pushf
lods
mov
xor
cmp
mov
cmc
pusha
icebp
repnz
xor
add
jne
xchg
fs
andl
test
daa
lds
dec
in
sub
out
lahf
aas
add
decl
mov
sbbl
xchg
mov
out
or
sub
sti
mov
push
test
int
out
sbb
int3
xor
fiaddl
aaa
fcomp
dec
mov
dec
sub
add
mov
inc
popa
push
cli
push
fcompl
addb
sbb
roll
mov
es
gs
xor
or
push
jnp
int
push
mov
cmp
jnp
mov
mov
cmp
adc
fnstcw
cmp
stos
inc
sahf
ret
andl
xor
mov
icebp
xor
out
int3
cmp
lods
clc
or
mov
int3
cs
push
cmp
lds
mov
out
mov
test
mov
ja
cmp
dec
js
dec
cltd
and
cld
popf
pushf
pop
ja
lret
cmp
outsl
mov
xchg
mov
hlt
add
sbb
out
dec
lea
loope
jnp
movsb
lahf
fldl
mov
adc
add
jnp
jl
int3
push
test
jg
test
dec
lds
and
cmpsb
lds
sbb
mov
or
in
iret
lods
push
das
das
rcrl
sub
cmp
xlat
les
xchg
mov
mov
pop
push
fldcw
add
mov
add
lods
and
pop
mov
call
lret
xor
mov
adc
movsl
add
cmp
cli
dec
xor
cld
sti
mov
xchg
sub
add
popf
je
mov
sbb
leave
dec
icebp
lock
push
lahf
mov
clc
and
test
mov
jb
dec
sub
or
pop
sti
push
lahf
repnz
dec
mov
jl
fmull
jmp
sbb
sti
and
iret
jp
stos
jno
shl
fsubrl
xlat
aas
ljmp
aas
fisttps
icebp
adc
inc
push
cmp
testl
orl
or
dec
in
cmp
push
mov
addl
jl
test
aaa
xor
add
gs
enter
mov
add
out
lea
pop
sub
dec
push
clc
xor
and
sub
orb
fisubrl
test
faddl
push
mov
and
mov
scas
cmpl
cmp
std
sub
cmpsl
movsl
out
out
cmp
push
push
mov
roll
xor
addr16
jne
push
add
push
stos
mov
insl
jae
pop
jle
push
xchg
inc
int
adc
in
inc
icebp
and
jbe
push
addb
scas
lahf
gs
outsb
mov
outsl
bound
les
sub
lods
pop
pop
mov
jb
sbb
push
xchg
push
lea
and
adc
lds
jmp
mov
xor
loopne
cld
pop
dec
fldl
aas
aam
push
outsl
xchg
pop
arpl
push
cmp
enter
ret
xchg
dec
mov
adc
jno
out
pushf
aam
movsb
dec
add
add
aad
mov
hlt
pop
scas
or
test
filds
int3
sbb
mov
data16
jne
inc
pushf
outsb
and
fsubl
pop
pop
in
in
inc
dec
xor
ja
dec
ficoml
add
das
in
fiadds
pop
mov
and
cmp
fisubrl
popf
xchg
or
xchg
in
xlat
dec
mov
in
and
inc
add
test
dec
jne
stos
test
mov
nop
lahf
adc
xchg
jge
or
inc
fadd
fnstcw
int
jnp
cmp
lods
cmp
sub
fcoms
lods
loop
push
imul
fsubp
and
fdivrl
and
add
jle
mov
cmp
out
pop
rcl
sub
inc
add
sbb
js
adc
xchg
test
mov
jbe
dec
sbb
mov
addb
imul
jg
jno
shrb
jbe
mov
mov
aad
push
shll
in
enter
mov
iret
popa
fcomi
sti
sub
sarl
test
mov
loope
or
mov
add
sahf
cmpsb
jle
inc
add
xchg
push
pop
imul
sub
inc
bound
test
mov
jae
cwtl
cli
data16
shll
pop
ljmp
mov
pop
mov
out
add
leave
pop
and
add
fs
loopne
jno
movsl
lods
dec
ror
rcrb
push
or
cld
jp
push
leave
popf
inc
loope
push
pop
and
sbb
mov
jbe
shlb
inc
mov
or
mov
cmp
ret
mov
fst
dec
or
pop
pop
mov
stc
imul
movsb
cwtl
stos
push
or
xor
push
jae
sub
imul
jl
faddp
pop
pop
lret
sub
push
mov
fs
and
lcall
ret
jl
jno
add
or
daa
jmp
imul
int3
sbb
movsl
mov
in
adc
xchg
fisubrl
or
mov
mov
mov
push
in
sbb
mov
into
inc
fimuls
jo
xchg
pop
dec
jns
lock
push
iret
ljmp
leave
jle
mov
fiadds
xor
pop
pop
in
jl
and
pop
mov
cmp
jmp
mov
sbb
adc
out
inc
xor
sbb
insb
sbb
add
js
sbb
test
ljmp
into
loope
bound
adc
call
pop
fs
adc
sbb
cmp
xor
jge
dec
adc
sub
out
aam
xchg
das
mov
push
pop
rcr
dec
sarl
pop
jbe
cs
and
add
addr16
push
mov
popf
lcall
sub
insl
cmp
mov
jb
pop
pusha
jb
mov
idivl
test
pop
std
xor
mov
xchg
add
fbstp
fidivl
mov
mov
add
adc
cmp
push
pushf
loopne
jge
inc
lcall
pop
data16
pop
mov
inc
jae
les
mov
mov
and
mov
stos
and
or
inc
adc
in
pop
cli
popa
fldl
cli
cli
addr16
or
cmp
xchg
and
loopne
or
jp
cwtl
dec
inc
jne
mov
dec
sbb
movsb
out
aaa
shl
ror
out
and
sahf
in
out
in
jae
push
sahf
fdivl
xchg
xor
lds
xor
xlat
loope
ja
in
fdivs
jnp
or
sbb
push
xor
adc
mov
es
pop
in
mov
mov
jg
sub
daa
push
xchg
or
test
pushl
cmpsb
or
pusha
clc
add
mov
xchg
cmp
fidivs
jp
sti
xchg
int
push
lahf
sub
test
das
in
cwtl
push
cmpsb
shrb
and
pop
mov
inc
pop
or
add
jnp
divb
sti
xchg
sub
pop
in
shl
out
mov
daa
mov
mov
and
test
mov
xchg
lret
sbb
add
out
pop
jbe
fdivr
mov
outsl
idiv
dec
sub
dec
sbb
cltd
mov
daa
add
pop
and
aaa
bound
enter
mov
push
xlat
mov
xchg
cmc
xchg
and
scas
test
xor
hlt
dec
xor
daa
test
inc
fsubl
imul
out
adc
jbe
scas
int
int
in
inc
mov
jl
insl
sti
outsb
adc
xchg
sub
fs
mov
mov
fninit
pop
jb
or
in
fistps
jecxz
testl
or
push
push
jl
add
cmp
lods
cmp
xchg
push
sbb
test
sub
aas
inc
xchg
ret
mov
les
or
push
iret
roll
rcr
push
push
popf
sub
insb
in
mov
xor
jmp
sub
nop
je
jmp
sub
xchg
fcoms
fsubr
dec
cmp
xor
clc
aad
xchg
les
adc
loopne
bswap
dec
mov
sub
movsb
adcl
xchg
aad
or
pop
adc
ss
mov
xor
jno
insl
mov
cmc
mov
push
pop
ljmp
flds
sbb
jne
dec
push
push
add
mov
cmp
adc
gs
sub
imul
mov
cmp
cmp
in
adc
cmp
adc
and
push
add
lods
icebp
mov
pop
sub
inc
dec
sbb
nop
lcall
inc
and
and
enter
or
xchg
lds
mov
rcrl
cmpsb
adc
pop
pop
xor
mov
push
call
sbb
lret
ret
mov
jb
aas
sub
pop
dec
cmpsb
nop
and
sti
js
jae
sbb
push
outsl
push
adc
sti
out
inc
wrmsr
or
lods
sti
mov
test
push
mov
dec
or
sbb
insb
imul
int
mov
out
push
adc
mov
sub
scas
cmp
pop
gs
jmp
mov
xorl
jmp
adc
inc
pop
add
xchg
mov
jnp
in
pushf
lahf
pop
inc
cmpsl
sbb
pop
lock
sub
dec
jno
decb
xchg
sti
pushf
lds
enter
mov
sub
aad
daa
mov
mov
subb
faddl
clc
sbb
inc
lret
sbbb
and
jmp
insb
sub
lds
xchg
cmpl
xchg
inc
adc
inc
ss
xchg
inc
cmp
cmp
sub
push
cs
je
inc
and
mov
sub
add
fnstcw
add
iret
mov
int
push
lahf
or
leave
into
test
sub
pop
sbb
lret
scas
iret
mov
and
test
incl
ljmp
fwait
sbb
mov
push
fiaddl
mov
test
mov
mov
outsb
and
lahf
ret
sbb
mov
pop
das
dec
pop
push
orl
sbb
mov
cli
add
push
stos
lret
mov
jl
mov
int
les
pop
jl
out
sub
gs
xchg
push
scas
cmp
sti
xor
repz
int
into
sbb
or
mov
leave
push
pop
xchg
leave
pop
fwait
xor
lods
aaa
sets
insl
mov
or
cmp
dec
aam
sub
popf
aad
js
andl
ja
loopw
inc
idivl
js
sbb
repnz
push
mov
xchg
push
int3
mov
addr16
xor
insb
popa
andb
push
shrb
pop
bound
add
scas
je
imul
or
jnp
sub
push
out
add
lret
arpl
cmp
push
js
xchg
dec
xchg
pop
dec
pop
mov
loope
mov
fimull
mov
lods
repz
ret
xor
add
ret
adc
lret
or
aad
test
cmp
pop
lahf
mov
fwait
push
push
lea
ret
mov
imul
ret
or
pop
and
jle
stos
dec
shrl
and
jb
cmp
sub
loopne
add
pop
add
fwait
pusha
stos
ror
int3
stos
shrb
jae
popw
or
sub
push
xchg
test
les
daa
das
js
sub
je
les
dec
testb
sub
pop
shr
mov
mov
data16
jecxz
cmpsl
adc
int3
out
test
shl
xor
mov
adc
nop
lock
enter
fimull
lret
es
jge
dec
test
pop
mov
pop
insl
aaa
mov
jns
mov
pop
cli
pop
or
mov
in
sar
sub
cmp
cmp
jl
mov
sahf
stos
cmp
xchg
mov
cmp
sbbb
imul
mov
inc
dec
sbb
dec
std
mov
in
sub
xchg
mov
inc
pop
in
jmp
sbb
lret
and
mov
shrl
jns
inc
mov
ja
fs
mov
cmc
stos
leave
dec
ss
insl
mov
jns
cmpsl
jne
adc
xchg
fs
popa
pop
xchg
sbb
sub
fldenv
adc
pop
push
aas
xchg
fs
xor
loopne
jp
mov
mov
mov
movsl
push
mov
or
outsl
push
shl
xor
pop
test
mov
push
pop
inc
fnstenv
push
jae
fucom
fmull
cmp
xor
adc
pop
jge
je
lret
pop
push
sub
pushf
dec
jge
ss
cmc
jo
sbb
pop
pop
mov
enter
js
cmp
push
inc
and
mov
in
push
or
lods
sahf
mov
mov
test
mov
mov
inc
shlb
mov
int3
pop
call
mov
inc
sub
sub
pop
xchg
push
mov
pop
xchg
push
icebp
xchg
dec
rorb
shll
insb
popa
fstpt
mov
jl
jo
adc
inc
ljmp
pop
repz
mov
repnz
push
pop
cmp
push
icebp
xchg
addr16
ss
push
adc
push
or
sbb
and
dec
mov
movsl
scas
dec
lods
xchg
mov
xor
sub
lret
jae
fsts
clc
fisttps
sbb
push
sbb
pop
shll
lcall
pop
inc
push
cmc
decb
lea
test
adc
push
rcl
psubsb
lahf
fcmovnu
add
aad
dec
aam
repz
popa
fs
adc
int3
ret
fwait
mov
repz
les
sub
mov
push
add
int3
cmpsb
leave
shrl
pop
cmp
pop
retw
pop
mov
inc
xchg
push
add
aas
aad
fst
or
mov
aas
lds
imul
mov
xorb
and
loopne
pop
jecxz
xlat
push
pop
insl
sbb
adc
test
test
push
xchg
ja
xchg
sub
cmp
lcall
mov
outsb
test
out
mov
mov
imul
xchg
mov
lret
in
pop
jbe
test
cwtl
jmp
sub
pop
mov
cld
xor
sub
xor
xlat
lds
push
xchg
inc
adc
into
out
jno
or
or
add
push
dec
push
cs
dec
test
or
lahf
cmp
mov
sti
jne
cs
mov
pop
sbb
pop
shll
add
add
dec
jns
repnz
mov
out
jo
jl
mov
stos
test
enter
in
pop
enter
xchg
pop
scas
jo
jbe
push
mov
ljmp
adc
outsl
mov
popa
sti
add
ja
pop
inc
stos
jge
shll
ja
loop
arpl
fimuls
testb
mov
mov
orb
ja
popa
or
sub
pop
jnp
cwtl
test
add
jp
ja
rcrb
scas
or
or
mov
ljmp
or
lahf
test
outsl
push
les
loopne
push
sti
jmp
xchg
enter
fistpl
cld
mov
rcll
or
ret
iret
adc
imul
je
stos
call
jg
test
or
call
mov
out
aam
mov
sbb
adc
push
cmp
scas
xchg
imul
mov
shlb
jns
shll
mul
out
movsl
popa
aam
clc
pop
lahf
or
out
push
pop
xor
hlt
fisttpl
insl
stos
mov
jge
addl
mov
mov
mov
ret
aaa
mov
pop
jae
xchg
or
divl
in
call
jne
negl
cltd
add
fbstp
cmp
inc
mov
imul
mov
jo
jnp
mov
inc
push
sub
into
and
sbb
jbe
adc
add
push
data16
sub
inc
pop
pop
shl
lods
insl
cli
push
lcall
or
pop
clc
push
adc
mov
sbb
aam
call
sti
xchg
inc
pop
mov
xor
adc
pop
pop
hlt
push
xorb
adc
add
mov
test
mov
ds
jno
sub
sarl
dec
insl
push
rcll
pop
mov
testl
xchg
ret
lock
stc
icebp
fwait
mov
or
sti
cs
test
mov
or
cmpsl
adc
xor
movsl
pop
loope
mov
jb
sarb
aad
sub
mov
jnp
popf
es
bound
xchg
cmpsl
add
push
scas
xchg
mov
test
lock
or
lcall
popf
add
and
xor
add
jne
in
sbb
push
adc
jno
jmp
test
outsl
sar
je
pop
out
fsubr
cmc
loope
add
mov
loop
push
mov
rcrb
cltd
out
lcall
xor
lods
sbb
xor
push
or
sbb
inc
stos
lods
aad
mov
mov
loope
push
jns
sub
lods
enter
pop
mov
aam
pop
sub
inc
cmp
inc
idivl
mov
jns
jle
jnp
cmp
repnz
gs
pop
inc
stos
add
and
icebp
gs
mov
sahf
sub
sub
mov
push
in
ja
adc
sbbb
inc
cmp
loopne
cmp
lea
ds
cmp
ja
mov
mov
out
fstpt
jbe
adc
lret
je
stc
in
out
scas
loopne
movsl
lods
outsb
aad
outsl
xor
push
dec
testl
clc
fistps
shll
dec
scas
sbb
idivl
bound
inc
in
jge
mov
jae
dec
sub
dec
sbb
in
dec
ds
repz
test
cld
add
cli
int3
mov
xor
aam
pop
lea
scas
into
loopne
je
out
jl
shll
shll
jnp
xchg
fcoml
in
stos
cltd
stc
pop
push
pop
cmp
fsubl
loop
jne
movsb
test
orb
cmp
jmp
stc
call
and
jbe
xchg
xchg
push
in
dec
lds
faddp
mov
xor
mov
pop
push
lds
mov
sub
sub
outsb
out
add
jle
sbb
push
rol
inc
mov
inc
idivb
out
push
and
enter
jne
or
fisttpl
xchg
rcrb
push
push
out
dec
aaa
dec
and
add
xlat
mull
xchg
fists
cmp
call
cmp
pusha
jbe
leave
cmpsb
cld
cmc
daa
cmp
ljmp
pop
jecxz
js
stos
idiv
push
push
adc
and
add
xchg
cmp
cmp
pop
jecxz
addr16
shrl
push
add
rol
hlt
xor
shlb
xor
add
in
aaa
fdivs
add
orb
push
and
push
pop
or
xchg
pop
pop
sete
jnp
mov
test
loop
lods
xor
cmp
xlat
and
movsl
sahf
hlt
adc
xchg
adc
push
sbb
xor
pop
mov
lock
mov
xor
daa
roll
xor
xchg
mov
add
inc
jmp
inc
jp
out
mov
pop
cli
add
loope
mov
daa
testl
jmp
mov
push
mov
add
xchg
xchg
fcmovne
mov
mov
fstl
cli
mov
pop
orb
rep
mov
push
ret
mov
jg
dec
divb
test
mov
loop
xor
ror
in
fwait
sub
pop
inc
imul
sbbb
cli
xor
jmp
cli
xor
jae
in
and
push
push
pop
mov
jecxz
mov
dec
lods
pop
sbb
mov
stos
inc
xor
bnd
bound
adc
pop
ljmp
scas
sub
int3
repz
adc
adc
xchg
lods
inc
loop
push
mov
aad
stos
jne
mov
out
das
ljmp
sbb
jb
js
sbb
into
outsl
lcall
sbbl
ret
jo
mov
mov
inc
jns
ja
sbb
dec
fmuls
adc
and
sahf
enter
xor
imul
out
adc
pop
sbb
mov
dec
sub
fsubs
clc
and
mov
xor
pushf
pop
adc
xchg
add
sarb
inc
out
mov
adc
fnstcw
push
or
daa
jle
aam
pushf
clc
aas
xchg
jns
xchg
dec
mov
mov
sbb
fcom
int3
mov
xchg
or
mov
xor
cmp
ficomps
ss
or
xchg
mov
fsts
xor
xchg
mov
pop
lcall
dec
sub
shll
popl
mov
fmul
jmp
test
mov
or
pop
xchg
std
movq
repnz
imul
xchg
in
imul
jb
push
popf
and
int3
shlb
mov
cwtl
iret
insl
cmpsl
addl
sbb
jns
mov
loopne
rol
test
sub
mov
inc
sub
into
ljmp
cmp
and
test
cwtl
jge
sub
pushf
js
dec
inc
aas
testb
mov
sbb
add
cli
mov
mov
repnz
push
mov
jbe
add
xor
mov
push
cmpsl
push
fsubrl
ja
sahf
fistpl
jl
pop
and
jg
negl
cli
xlat
negb
adcb
lds
xchg
pop
inc
repz
scas
jmp
sbb
test
adcl
je
int3
push
int3
jo
icebp
clc
nop
jmp
pushf
jbe
ret
mov
adc
mov
pop
pushf
andb
dec
xor
adc
fidivs
clc
cwtl
js
jno
ljmp
inc
js
loop
stc
pushf
idivb
jae
cmpsl
bound
add
or
loop
lods
outsb
lock
cmp
dec
loope
popf
jns
pop
int
out
push
hlt
cltd
mov
lret
add
jo
push
movsl
pop
mov
pop
add
adc
adc
mov
jns
movb
mov
mov
mov
dec
fst
clc
js
movsl
iret
or
sub
sahf
rcl
cmp
mov
xor
je
xchg
push
jge
inc
push
dec
or
or
cmp
sarl
and
hlt
mov
out
cmp
pop
int
xor
sbb
xchg
jp
mov
xlat
popf
jmp
ja
adc
sub
jge
cwtl
mov
cld
stc
and
dec
pop
movsl
mov
pop
loopne
push
or
test
dec
cs
stc
pop
aam
lods
jno
xor
fidivl
mov
neg
je
inc
jmp
enter
or
arpl
dec
ljmp
xchg
push
rol
clc
jle
dec
cli
pusha
and
outsb
movsb
iret
fldenv
movsl
add
xchg
jae
push
xchg
cmp
fdivl
inc
xchg
imul
flds
lcall
or
fsubr
pop
repnz
cmpsl
push
sub
xor
aas
and
sub
test
pop
cmp
cmp
xorb
fs
and
roll
nop
cmp
push
and
lock
inc
or
jl
or
mov
mov
dec
or
scas
sbb
call
pop
jb
adc
xor
js
pushf
mov
pushf
out
mov
pop
gs
ss
mov
mov
pop
aam
aad
jnp
or
fildl
cs
lods
popa
sub
sbb
xchg
in
push
ret
add
ja
or
leave
lock
adc
sub
dec
icebp
mov
jl
sub
push
push
iret
cmp
xor
mov
jp
and
popa
jo
or
mov
or
add
outsl
in
xor
dec
in
insb
push
popa
btc
mov
loope
mov
xchg
hlt
push
cwtl
adc
pop
cmp
mov
scas
movl
push
testl
gs
psllq
sub
add
adc
and
add
repz
fstl
cmp
test
xchg
fwait
repz
push
mov
dec
popa
or
scas
mov
jecxz
cmp
xor
mov
xor
mov
adc
jl
add
repz
cmp
sub
jb
push
pop
ds
imul
or
or
leave
xchg
mov
popf
and
mov
dec
xor
repz
dec
pop
and
in
dec
push
test
jnp
fmul
addr16
mov
inc
cmp
aaa
fptan
mov
mov
pusha
aad
jmp
jp
pop
xor
lret
icebp
cwtl
in
pop
dec
js
icebp
push
nop
lcall
pop
jo
aaa
mov
jl
sub
add
loop
inc
cwtl
mov
pop
mov
ds
gs
xlat
mov
pop
cmp
fisubrl
and
mov
pop
cli
mov
cltd
jno
je
xor
jb
lahf
sbbb
mov
dec
add
aam
sub
add
test
mov
pusha
xor
addr16
ret
sti
inc
or
pop
in
mov
or
lret
adc
bound
xor
lahf
or
push
popf
and
mov
pop
pop
xchg
jo
testl
call
out
push
dec
sub
jge
or
mov
xor
pop
rorl
mov
sbb
pop
cmpsb
ret
pop
jle
addr16
dec
lret
fistl
shll
fldt
shld
jecxz
fnsave
pop
repz
push
dec
in
push
addr16
enter
rcll
pop
loopne
fdivrs
mov
mov
das
clc
xchg
xchg
add
fmuls
in
gs
outsb
sahf
mov
arpl
push
xor
ret
rorb
scas
mov
cmp
inc
pop
push
and
aas
out
push
mov
push
xchg
hlt
std
adc
mul
cli
leave
add
mov
repnz
and
outsb
push
pop
mov
loopne
dec
mov
bswap
pusha
ja
push
stos
pop
ret
sahf
xor
arpl
js
pop
ds
daa
sbb
sub
push
js
test
lds
adc
xor
dec
mov
adc
mov
orw
lock
mov
pusha
jbe
ss
jecxz
pop
xorl
lcall
mov
sub
out
les
pop
add
cmpsl
and
inc
dec
adc
push
in
ficomps
sti
decb
sub
add
jo
in
popa
icebp
add
inc
cmc
out
mov
cmp
jb
inc
mov
pop
lods
sti
add
or
enter
iret
push
lods
xchg
mov
cmp
pop
xor
shll
das
div
push
sbb
cli
cmc
jnp
lods
fnstenv
mull
jns
les
pop
dec
fdivr
inc
mov
and
pop
imul
pop
popa
cli
aas
leave
out
repz
dec
fisttpl
pusha
leave
xlat
fs
adc
rclb
add
ja
add
adc
les
cmp
push
jmp
stos
pop
push
popf
xchg
or
cmp
jmp
push
dec
and
jge
jne
xor
mov
xchg
dec
xchg
xchg
es
mov
mov
in
enter
arpl
sbb
fwait
or
cli
jnp
sbb
adc
adc
mov
push
mov
mov
inc
fldcw
into
cwtl
lods
imul
sahf
outsl
xor
push
out
cmpsb
mov
les
cmp
inc
jbe
fs
jno
jne
mov
mov
or
push
push
and
repz
cmp
repz
ljmp
jp
lret
cs
push
or
jno
jp
pop
cmp
sti
pop
dec
inc
shrl
and
loop
pop
stos
inc
xchg
es
dec
sub
popa
pushf
sbb
cmp
mov
mov
sbb
xchg
mov
sub
xchg
mov
or
out
into
adcb
cli
adc
andb
pop
call
out
sub
inc
mov
mov
imull
mov
and
inc
add
scas
push
mov
in
xlat
cmp
cmp
pop
pop
push
push
shrb
inc
xchg
fwait
cmp
pop
insl
pop
push
push
out
fistpll
inc
push
push
xor
pusha
lea
shlb
pop
xchg
or
add
rol
mov
fs
mov
adc
sti
push
out
or
test
fbld
arpl
cli
xchg
inc
xor
aam
or
jbe
insb
mov
adc
lods
mov
test
and
dec
ja
and
out
or
mov
aad
out
movntps
mov
outsb
sub
inc
divb
adc
add
mov
push
dec
fnstenv
stc
repnz
inc
dec
pushf
dec
inc
push
insb
dec
stos
fiadds
cld
aad
cmp
inc
adc
cmp
loop
jl
dec
mov
push
and
lea
in
inc
pop
xor
xchg
cli
dec
push
test
hlt
jo
imul
call
and
loope
test
adc
rcrl
int3
lret
or
mov
sub
mov
in
and
cmpsl
sbb
bound
push
jo
mov
fldcw
outsb
inc
adc
movsb
dec
sub
push
jg
or
push
adc
sub
jge
es
sub
mov
sahf
out
arpl
cmp
xchg
pop
subb
insb
adc
cwtl
repnz
mov
in
xor
mov
mov
cmp
and
fwait
sub
inc
ja
sbb
call
xor
xchg
loopne
pop
jbe
dec
daa
xchg
xchg
or
jne
or
int
mov
lahf
hlt
and
lds
inc
dec
push
lret
fwait
rorb
sbb
push
insl
cmp
push
orb
sbb
cs
divl
into
xchg
cmp
insb
inc
jo
pop
dec
push
ja
inc
jnp
xor
adc
ret
aas
inc
mov
loop
in
adc
rclb
and
jp
mov
call
mov
sbb
xchg
dec
call
pop
adc
dec
cwtl
inc
mov
mov
leave
aad
inc
dec
cmp
mov
into
ljmp
jb
mov
rorb
xchg
cmp
mov
pushf
insb
inc
mov
rorl
jp
arpl
repnz
ljmp
xorl
pop
stos
pop
jmp
loop
jns
es
adc
frstor
mov
sub
jg
jne
pushf
adc
loopne
repz
adc
or
arpl
or
sahf
or
out
mov
add
out
rcrl
shll
mov
sub
jecxz
dec
mov
repz
test
sahf
loopne
popa
mov
push
pop
nop
aam
gs
movsb
lock
data16
cmpsl
mov
jno
enter
jo
xor
cmpsb
out
mov
pop
and
in
adc
or
sub
enter
xchg
js
loope
sub
mov
inc
into
jne
xor
test
icebp
and
out
lock
in
gs
cmc
sti
lock
aaa
dec
mov
and
push
push
pop
xchg
bound
mov
adc
lahf
inc
mov
sub
sub
test
pop
cli
or
repz
into
sub
cmp
xor
scas
add
mov
inc
and
and
xor
mov
fldcw
xchg
mov
in
inc
cltd
jb
stos
mov
mov
inc
outsb
dec
mov
and
insb
add
addb
ljmp
sbb
out
in
ja
mov
cmp
lock
xchg
push
icebp
xchg
mov
ret
push
mov
dec
cmp
fists
test
jmp
mov
inc
push
inc
adc
and
cli
scas
loope
push
cmp
pop
data16
or
cwtl
popf
fimuls
pop
sbbl
punpckhwd
aad
push
in
lcall
xor
scas
sub
cli
fcomp
jecxz
enter
mov
int
pop
cmp
into
push
repz
lock
mov
dec
je
and
shrl
cwtl
add
sbb
inc
jno
jl
jmp
ljmp
jge
cltd
mov
call
pop
or
gs
pop
je
sbb
pop
cmpsb
mov
fwait
and
jle
testl
push
cmp
mov
fwait
cmp
jo
add
cltd
pop
ror
xchg
clc
out
leave
adc
xorb
adc
mov
adc
pop
ret
insl
mov
push
xchg
negl
ljmp
sbb
ljmp
cld
mov
mov
test
cmp
xchg
mov
js
sub
jo
mov
repz
mov
fistps
xchg
pop
mov
mov
sub
or
mov
dec
pop
sub
push
and
orl
jns
repnz
xchg
cmp
xchg
dec
cli
mov
out
imul
decb
js
adc
inc
aad
std
outsb
push
rcr
jo
push
call
cmpsb
mov
inc
mov
cmp
push
push
mov
push
or
jno
inc
jnp
adc
das
dec
in
or
loop
mov
jno
sbb
jae
cmp
test
sbb
push
sub
inc
movups
cmp
sbb
sbb
mov
mov
push
popf
cmp
sub
jecxz
add
xchg
push
mov
cld
mov
cmp
insl
cld
ffreep
dec
xchg
pop
inc
pop
icebp
aam
inc
push
mov
dec
sti
cmp
aas
sbb
dec
xor
push
pushl
sub
inc
fs
mov
sub
mulb
mov
lods
mov
xchg
addl
or
lea
mov
scas
mov
adc
stos
xor
adc
xchg
jecxz
mov
dec
movsb
arpl
outsb
xchg
mov
pop
xchg
push
fiaddl
or
fidivl
mov
mov
push
sub
mov
in
and
andl
shlb
cmp
xchg
scas
jno
xor
or
sub
push
cwtl
popf
or
iret
sbb
pushf
push
out
in
addb
lods
and
dec
pop
jg
adc
or
rclb
dec
add
mov
in
mov
and
dec
clc
dec
js
jo
cmp
sub
inc
xchg
into
in
jne
mov
shl
pop
out
mov
jmp
xchg
or
sbb
outsb
in
repz
test
mov
cmpsb
inc
xchg
mov
pop
sbb
cs
xor
leave
sahf
aad
das
aam
cmp
nop
out
cmp
movsb
jbe
jg
dec
add
mov
xor
pop
push
jle
xchg
pop
xor
into
inc
cli
and
mov
jnp
aas
add
in
sub
pusha
fcom
xchg
push
push
jg
cmp
mov
scas
test
sbbb
or
fs
xor
insb
pop
je
mov
idivb
pushf
dec
es
out
adc
sub
das
cmpsl
aam
ret
je
pop
leave
cmc
cmp
pop
and
shlb
adc
mov
or
js
cli
rorb
fs
int3
sbb
sub
outsb
xorl
sahf
adc
fcomps
ljmp
out
adc
jne
xor
lret
lret
mov
fldt
repz
mov
shrl
loope
ret
shrb
pop
daa
sub
or
rolb
add
push
xor
inc
add
xchg
jg
inc
add
push
out
js
pop
sub
cmp
pop
loopne
pop
adc
push
fwait
mov
push
mov
sbb
push
push
push
lds
icebp
sub
pop
loop
inc
test
adc
pusha
cmp
int3
pop
and
or
lods
add
dec
aad
xchg
lods
nop
mov
push
sub
fists
cmp
pop
mov
arpl
adc
adcl
das
mov
pop
sbb
arpl
and
aas
leave
cld
pop
dec
push
add
jle
xchg
dec
dec
mov
fidivs
xchg
data16
jnp
jne
addr16
push
sub
or
fistl
inc
xlat
shrl
in
push
movsl
cmp
xchg
clc
cmp
clc
sub
mov
outsb
jp
lret
mov
dec
ss
mov
push
repz
and
mov
repnz
outsb
or
sub
adc
push
loope
ss
pop
loop
test
pop
je
insb
push
sub
stc
fisubl
or
das
jecxz
jmp
stos
push
jmp
fwait
lcall
orb
je
add
push
fidivs
lcallw
ja
iret
mov
ds
nop
scas
ljmp
insb
scas
divb
pop
jne
stos
loopne
hlt
cmp
xchg
nop
mov
and
aad
das
cmp
xchg
insl
shl
or
xchg
repz
jo
jo
xor
and
jns
fsubrp
cmp
pop
stos
dec
test
fadds
jno
decl
inc
popa
mov
or
rclb
cltd
cs
test
cli
das
mov
lods
test
jb
mov
mov
pop
popf
push
or
data16
xor
rclb
mov
in
mov
cmp
pop
popa
cmovle
or
ret
iret
xchg
sahf
in
mov
aam
adc
loope
jbe
dec
aam
adc
xor
mov
xchg
jnp
jbe
cmc
xchg
stc
or
mov
int3
jno
lahf
fimuls
fsubl
pop
pop
mov
push
xchg
pavgb
sbb
orb
jge
cld
mov
enter
inc
outsb
jecxz
cmp
mov
fs
sbb
add
popa
inc
dec
inc
xor
jecxz
cmpsl
cmpsl
mov
cmp
aam
inc
std
shlb
fildll
jbe
rcrb
ret
je
adc
lods
data16
cmp
test
xchg
in
sub
jp
xchg
punpckhdq
rcll
sbb
popa
add
das
inc
ret
mov
push
mov
je
xchg
repz
xor
aam
out
push
cmp
adc
test
inc
addr16
dec
mov
fimuls
fcompl
add
insl
adc
jl
pop
aaa
jmp
adc
and
mov
and
or
inc
add
mov
es
scas
sub
and
jmp
jecxz
movsl
push
fiaddl
dec
adc
or
icebp
mov
dec
in
outsl
xchg
sti
cmp
sbb
jnp
jb
cmp
ret
sbb
or
mov
pop
cltd
cmp
push
pop
or
popf
pop
sbb
test
sbb
in
adc
movl
and
or
fbld
into
dec
out
std
cmp
inc
lcall
push
mov
cmp
and
pop
mov
sti
add
pop
enter
xchg
ds
pop
adc
mov
mov
lret
pop
sti
repnz
cmp
pop
popa
ret
cmp
lea
fsubr
push
adc
mov
cmp
jo
in
loop
test
test
punpcklwd
repz
push
inc
jne
stc
cmp
mov
jno
xor
ja
es
pop
sti
push
fsubs
xchg
cmc
mov
mov
and
xor
jbe
ljmp
call
nop
mov
mov
mov
xor
loopne
shll
mov
gs
fdivrl
roll
inc
jb
lods
les
dec
enter
inc
lret
scas
xor
push
xchg
es
dec
jp
push
sahf
dec
pop
mov
add
out
notl
push
push
mov
faddl
rorb
lea
add
mov
sbb
push
repz
iret
mov
in
inc
movsb
push
test
not
call
dec
dec
sarl
mov
les
jl
mov
sbb
jp
xor
cmpl
rclb
fs
push
cmpl
leave
xchg
xor
mov
sti
or
jbe
je
jge
xchg
arpl
push
add
je,pt
jne
cmp
cld
lock
movsl
orl
xchg
xor
mov
fisttps
cmp
mov
loope
pop
loopne
push
add
inc
test
mov
adc
mov
stos
inc
mov
divb
pop
xchg
mov
rcll
mov
mov
fldlg2
popf
push
push
dec
sub
fcoml
mov
mov
xchg
add
mov
push
repnz
icebp
or
dec
les
jge
push
jae
adc
cli
fdivrl
iret
aaa
std
adc
icebp
mov
scas
xor
test
mov
mov
inc
inc
idiv
cmp
imul
rorl
cli
lret
and
jae
jnp
cmpb
out
call
push
std
sub
xchg
pop
or
add
ret
and
mov
mov
jae
mov
inc
imul
outsb
ret
inc
mov
pusha
adc
mov
rcrl
imul
daa
movb
lds
mov
fisttpl
les
rcrl
rclb
bswap
int
xchg
cmpsb
pop
dec
fists
aad
aad
cltd
popf
loope
mov
push
dec
sub
insb
cmp
rorb
movsl
push
cmpsl
or
cwtl
or
push
jle
std
daa
push
lahf
cld
mov
push
ljmp
and
push
testb
into
sbb
sbb
dec
adc
mov
cmp
push
xchg
faddl
enter
into
sbb
or
mov
xor
and
add
ffreep
sbb
sahf
xor
pop
fwait
jb
mov
into
push
xor
cmp
pop
aas
popa
lahf
add
icebp
hlt
je
add
fsub
arpl
daa
mov
test
rcll
push
cmp
roll
lods
daa
mov
cli
sar
mov
lcall
testb
cmpsb
lods
mov
lods
push
iret
jbe
sbb
jge
mov
das
mov
xor
cmp
mov
sbb
shrl
bswap
add
cwtl
pop
jns
dec
lods
xor
jae
mov
add
arpl
sub
outsb
out
insb
jnp
ret
cmp
out
rorl
fld
adc
mov
mov
ss
jmp
ret
xor
stos
xchg
addl
inc
mov
pop
mov
cmpsb
into
add
mov
stos
mov
xchg
push
mulb
pop
jmp
lret
and
dec
fcompl
or
mov
imul
mov
into
repnz
aaa
int3
movl
sbb
mov
jnp
loop
in
jle
jns
add
push
lahf
bswap
pop
xchg
insl
lods
pop
insl
add
sbbb
xor
push
jne
jecxz
inc
pushf
scas
fdivp
xchg
or
test
in
dec
push
xchg
shl
inc
rcll
push
clc
jmp
adc
jnp
push
cmpb
movsb
fldcw
pusha
arpl
lods
or
or
dec
mov
out
lds
mov
xchg
mov
bnd
and
popa
adc
sbb
daa
pushf
je
cs
loopne
dec
aam
xchg
jne
mov
jae
or
rcl
rdpmc
imul
push
int
mov
xchg
cmpsl
jmp
iret
nop
leave
and
mov
repnz
jmp
cmc
es
mov
cmc
js
xor
mov
dec
int3
dec
ja
sub
pusha
sahf
pop
jp
jae
cld
into
fistl
out
aaa
cmp
fstps
inc
shll
and
js
test
adc
jno
adc
repnz
mov
push
adc
mov
ret
pop
call
and
jbe
sub
cmp
aam
cltd
xchg
imul
inc
scas
mov
les
sbb
mov
cmp
psubsb
dec
out
fcoml
dec
daa
daa
outsb
xor
mov
add
sbb
push
jmp
add
cld
lds
dec
jno
test
mov
ljmp
scas
inc
aam
lods
aas
jle
lea
cmc
stos
xor
test
push
cmp
outsl
aaa
or
or
popf
enter
das
loop
sbb
inc
jne
loop
fwait
add
inc
in
pop
and
sbb
ror
push
or
xchg
fsubr
lods
rorl
pop
daa
push
sbb
test
fildl
inc
xor
mov
rclb
push
pop
xchg
dec
inc
inc
jae
or
movsb
stos
bound
insl
ret
mov
out
jbe
stos
inc
sub
mov
add
xchg
insl
jecxz
xchg
mulb
push
xor
add
xor
inc
nop
sbb
testb
mov
push
out
fwait
xor
out
jp
pop
call
mov
int3
pushf
mov
lcall
push
pop
fstpt
cs
aas
lods
mov
xchg
adc
fsts
out
dec
in
lret
das
xor
out
sbb
movsb
hlt
or
add
sbb
pop
lods
sti
and
fisubrs
sub
dec
cmp
adc
fdivs
rcll
cmp
std
aam
push
xchg
add
push
ja
sbb
ja
std
sub
pop
mov
repz
ret
mov
mov
add
mov
rorl
xchg
push
out
ficompl
cld
push
sbb
jo
lock
movsl
js
sub
repnz
adc
jne
mov
dec
int
mov
test
mov
lods
push
sbb
mov
xor
sub
shll
jmp
mov
das
cmp
and
int
xchg
and
incb
mov
icebp
adcb
xchg
mov
mov
xchg
dec
fnstcw
inc
xchg
mov
std
dec
cltd
iret
fwait
pop
push
aad
adc
jno
jg
loopne
mov
xorl
cmp
loopne
or
xchg
out
inc
adc
clc
in
in
lods
xchg
mov
inc
fcomp
mov
xchg
or
testl
popl
outsl
xor
fidivrl
shl
ja
sub
mov
push
subl
cs
scas
sub
cwtl
popa
xchg
jmp
or
mov
mov
lahf
imul
pop
xchg
xchg
jbe
sub
movb
leave
xchg
ficoml
aas
ret
jecxz
adc
iret
call
aaa
push
xchg
mov
xor
sti
repz
and
mov
test
jae
lock
sbb
js
pop
mov
hlt
mov
mov
mov
fwait
cmc
sahf
in
or
jecxz
mov
cmp
test
pop
fistpl
jo
and
sbb
jnp
sub
sbb
sub
mov
sbb
mov
call
mov
cmp
or
and
pop
cwtl
dec
adc
jp
add
jl
mov
es
xchg
push
test
data16
aad
mov
mov
add
mov
push
lret
cld
fst
addr16
dec
sub
mov
test
xor
push
fldcw
into
stc
cmp
outsb
fimull
adc
adc
or
stos
sbb
dec
cmp
inc
sbb
lcall
sub
ret
push
popf
ret
pop
sahf
cmpsb
adcl
mov
insl
mov
mov
fistl
stos
stos
sti
imul
mov
jae
fwait
das
add
or
mov
call
or
flds
insl
adc
popa
clc
cs
lods
pop
orb
jns
out
xor
xchg
jnp
out
jne
pop
dec
mov
xor
pusha
adc
sbb
lahf
xchg
sub
pop
sbb
int3
and
push
mov
jmp
bound
sub
insb
and
mov
sub
cmpl
inc
stos
mov
addr16
divl
mov
rol
dec
rclb
data16
mov
rcll
push
jmp
adc
das
jno
iret
or
in
pop
dec
std
sti
ret
cmp
inc
jecxz
fmuls
mov
mov
fcoml
clc
jae
arpl
repz
jns
movb
push
dec
les
jns
mov
orb
jbe
jmp
and
scas
cs
cmpsl
jns
mov
push
out
sub
outsb
sbb
cmpsb
mov
outsb
pop
enter
dec
inc
sbb
sbb
int
mov
dec
xchg
and
add
cld
stc
bnd
rcrw
xor
push
push
test
neg
adc
test
push
add
call
rorl
or
int
mov
push
xor
ss
cltd
jle
test
add
andb
mov
ds
ds
xor
je
cmp
xorl
jl
rolb
mov
sbb
repnz
and
push
cmpsb
jg
loop
mov
scas
jge
lods
enter
ja
cltd
dec
cmp
and
or
xorl
mov
jae
sbb
mov
popa
xchg
xchg
cmp
mov
dec
xor
stc
sahf
push
xchg
sbb
shr
clc
xor
lcall
adc
mov
and
cmc
fildll
sahf
xor
in
pop
xor
and
xor
sbbl
inc
jno
lret
inc
lds
test
mov
orb
jae
fldt
add
jecxz
movsl
sti
fidivl
jno
inc
sub
clc
daa
in
testb
mov
pushf
xchg
sub
jmp
bound
xchg
mov
test
ret
mov
in
imul
inc
jecxz
lods
dec
mov
orl
or
lea
push
fdivr
or
push
xchg
mov
mov
fisttps
push
jo
aad
add
inc
dec
aaa
shll
cmp
das
lods
fcoml
scas
mov
inc
adc
jo
xchg
not
or
dec
jne
jns
in
inc
pop
or
insl
sahf
mov
adc
arpl
xor
xchg
or
mov
add
cltd
pop
jge
pop
bound
xchg
inc
lock
xor
mov
add
pop
pop
xor
lods
adcl
jb
xor
sub
push
or
push
imul
movl
push
cmc
or
fstpl
or
scas
repz
push
dec
imul
mov
and
cmc
stos
mov
fdivrs
lods
lret
gs
bnd
fsubrs
or
jge
xor
call
mov
jns
xor
stos
pop
sub
xor
adc
fdivs
lods
fidivrl
mov
xchg
mov
popa
push
sbb
adc
xchg
gs
jmp
xchg
sbbb
aas
push
xor
inc
mov
adc
cmp
insb
xchg
xchg
je
scas
mov
hlt
cmp
mov
lret
xchg
ret
dec
mov
dec
sbb
adc
fmull
dec
cltd
mov
decb
cmp
aaa
cmpsl
jne
movsb
adc
repz
insl
pop
mov
or
mov
sbb
lods
imul
filds
lods
cmpb
mov
outsl
popa
enter
dec
aaa
sub
xchg
pop
call
fbld
add
cs
fbld
rolb
mov
js
shrb
insb
ficoml
push
sbb
or
imull
test
out
fstp
sbb
mov
shl
pop
and
call
cli
fcomi
lods
imul
gs
out
mov
mov
and
fwait
pop
fistps
jne
mov
cltd
inc
adc
sub
inc
cltd
mov
mov
sbb
jge
orb
repz
pop
aam
test
outsl
lcall
or
out
push
cli
shll
or
and
jmp
in
cwtl
cs
leave
lahf
jl
mov
mov
cmp
in
test
movsb
pop
lds
out
imul
fstpl
cmp
ss
adc
mov
pop
push
cmc
pop
push
pusha
es
xor
shr
adc
rorl
sub
aam
lock
es
xchg
inc
jo
sub
push
xor
out
push
int3
sub
idivb
jnp
movsl
mov
pop
sub
movsl
movsb
xchg
addr16
jge
arpl
lcall
push
test
loopne
dec
popf
roll
and
cltd
bound
push
lea
pop
mov
or
mov
movsl
xor
cs
push
in
xorb
sbb
and
movsl
ret
mov
and
adc
dec
fisubrl
cmp
cmp
mov
pop
arpl
icebp
jnp
push
jmp
jb
or
add
inc
imul
test
stos
lock
adc
aad
jmp
repnz
loope
ds
in
gs
pop
fildl
xor
inc
ljmp
ljmp
ret
ret
and
push
add
or
mov
adc
outsl
sahf
gs
fidivrs
fmuls
mov
stos
sub
addr16
xchg
cld
std
ss
jg
pop
dec
jmp
cwtl
dec
movb
aam
lcall
lret
push
push
pop
jl
inc
es
pop
int
xchg
aam
add
fwait
sub
jo
insl
jle
flds
dec
mov
das
loop
push
imulb
inc
xchg
sub
clc
mov
add
stos
and
pop
int
push
lods
iret
ss
imul
sub
mov
cmp
cmp
add
add
addr16
pushf
xor
cmpsb
cmc
jle
hlt
jne
repz
or
loope
pop
filds
mov
push
mov
dec
enter
or
pop
sub
out
cwtl
ret
dec
aam
adc
sub
cmp
jo
pop
pushf
cld
mov
lds
sbb
repnz
xor
rclb
adc
test
push
dec
mov
fistps
gs
loopne
sti
cld
sbb
cld
jb
std
inc
jg
ljmp
dec
or
mov
ret
fs
push
das
pop
fisubrl
cmp
dec
xor
sahf
scas
pop
clc
sbb
fstl
insl
aad
pushl
lret
out
cmp
xor
out
jle
sbb
mov
imul
daa
lahf
jl
push
cltd
cwtl
inc
jbe
stos
dec
jo
hlt
into
aas
aaa
push
xor
into
mov
inc
in
xchg
nop
add
test
hlt
insb
add
inc
jle
sub
sbbb
nop
popa
js
scas
mov
dec
andl
shrl
fstp
xchg
xlat
roll
test
stos
insb
loop
cmp
pushf
mov
and
in
sbb
jno
test
ret
in
sbb
dec
out
adc
outsb
adc
sbb
in
testb
ja
push
cmp
dec
and
pop
ds
cmpsl
xor
pop
add
sub
cwtl
xchg
mov
sub
ds
pop
pushw
adc
cli
dec
test
jno
cli
cwtl
sbb
addl
push
cmp
stc
icebp
rolb
dec
imul
push
or
sbb
or
cs
into
push
mov
rcrb
xchg
outsb
sub
iret
cmc
movb
dec
addr16
out
jp
outsl
ja
pop
icebp
lods
shlb
inc
movsb
cs
push
int3
jp
dec
mov
call
mov
movsb
das
in
arpl
js
test
nop
xchg
sub
daa
xor
scas
fimull
mov
test
jno
outsb
xor
test
inc
dec
test
sbb
aam
pop
cltd
std
mov
jmp
jle
popa
xor
push
in
cmpsl
adc
aad
aam
xor
adc
jns
xchg
dec
mov
test
out
pop
clc
lret
icebp
insb
mov
adc
push
fistps
mov
dec
push
out
mov
xchg
mov
fstl
mov
push
out
aam
ljmp
popa
cmp
cltd
dec
or
dec
sbb
mov
je
mov
addr16
sub
sub
aad
pop
std
mov
icebp
or
inc
jp
mov
bound
into
andl
sub
mov
jne
xchg
cmp
sahf
pop
xchg
and
mov
stos
std
jg
cmp
sub
jmp
or
std
inc
xchg
mov
xchg
das
lods
lods
jp
arpl
mov
test
xor
rcll
shrl
lds
mov
scas
sbb
cltd
outsb
scas
push
stc
dec
or
pushf
ret
cmp
mov
or
int3
lret
ficomps
loope
and
inc
in
jo
loop
scas
stc
fldl
nop
out
jg
xchg
cmp
cmp
pop
xchg
dec
test
hlt
cltd
sub
push
mov
jno
push
call
cmp
lds
loopne
mov
mov
dec
and
test
mov
add
cmp
push
gs
pop
sbb
xchg
and
mov
inc
xor
lods
pop
xchg
imul
mov
je
imul
outsb
ss
mov
dec
js
clc
aas
xor
xchg
cwtl
subl
sbb
push
add
outsb
push
inc
lock
jo
fstl
out
clc
pop
and
loopne
cmpsb
mov
cmp
out
imul
out
inc
sub
jnp
aad
repz
inc
rorb
mov
scas
mov
xchg
jno
pop
movsb
lret
xor
cmpsl
sub
cmp
xchg
mov
sti
xchg
inc
sub
fstpl
pusha
loope
sbb
aaa
ret
mov
xchg
scas
ret
aam
mov
movsl
and
inc
push
sub
test
xchg
add
ja
loope
xchg
lret
sarl
or
in
mov
mov
fdiv
sub
mov
mov
adc
dec
adcl
mov
js
aam
push
setae
push
adc
es
push
jp
add
push
in
xor
pushf
pop
roll
sub
fmulp
sub
dec
sbb
mov
pop
pop
sub
inc
cli
pop
rorb
rcrl
jg
rcll
pop
jns
mov
pop
xor
ja
lds
jne
imul
dec
call
sbbl
push
fdiv
mov
sbb
fnstcw
movsb
push
lahf
iret
scas
cwtl
clc
sub
jl
lcall
filds
cltd
jnp
pop
pushf
dec
dec
rorb
out
inc
in
shl
sti
cld
sahf
in
cmpsb
pop
ds
lods
jbe
mov
daa
repnz
mov
jns
xchg
or
cmp
pushl
stos
loop
xchg
jb
jmp
cmc
inc
pop
rcl
lds
push
cmpb
inc
mov
cmp
mov
iret
std
add
jle
sub
jno
mov
inc
movsl
xor
ds
mov
movsl
out
mov
lcall
hlt
add
xchg
push
outsb
cmp
scas
mov
inc
dec
ret
iret
mov
in
dec
inc
cmp
int
mov
xchg
aaa
xlat
testl
scas
fsubr
add
cwtl
imul
das
jmpw
lods
xor
add
sub
inc
mov
data16
jecxz
dec
gs
mov
xchg
xor
add
dec
cmpsl
mov
pushf
adc
imul
xchg
cld
repnz
xlat
nop
add
movb
fadd
cmp
outsb
in
mov
sarb
jl
xor
jecxz
jae
inc
mov
clc
add
leave
xlat
outsb
js
pop
add
fisttpl
push
loope
adc
ds
mov
xor
cmc
or
jmp
inc
xor
push
mov
mov
in
pop
mov
out
cmp
icebp
dec
stos
dec
clc
into
jg
jle
out
push
xchg
mov
cmp
das
dec
mov
pop
xlat
pop
jge
cs
xchg
incl
adc
stos
fbstp
outsb
cli
stos
mov
pop
pop
iret
cmp
adc
pushf
sub
add
test
inc
ret
pop
pop
add
enter
xchg
dec
daa
arpl
jne
xor
mov
dec
jbe
push
insl
arpl
adc
ja
mul
jbe
icebp
xor
inc
cmpsl
inc
pop
in
mov
jg
mov
mov
out
popa
outsl
jb
loopne
loope
xchg
pop
mov
test
inc
in
inc
mov
fcomps
pmuludq
sub
hlt
mov
arpl
push
mov
adc
mov
add
cmp
aas
and
ss
loop
rorb
shl
fisttpll
and
xlat
push
lret
insl
shlb
push
leave
sbb
and
stos
pop
jno
fwait
dec
lds
push
push
out
dec
xchg
push
inc
hlt
test
out
sub
fwait
aad
inc
mov
inc
pusha
jecxz
dec
cltd
les
mov
jecxz
test
loope
ret
cmp
add
int
lock
dec
sbb
lcall
cmp
or
nop
push
cli
pause
imulb
in
lcall
and
sarb
jecxz
add
outsb
lahf
push
lds
bnd
mov
inc
out
cli
sbb
adc
call
idiv
daa
fld
icebp
clc
test
jns
sbb
jp
push
add
int
and
cld
call
pop
subl
bound
sub
int3
gs
xchg
fbld
jle
inc
movsl
lea
daa
sub
xchg
push
nop
inc
sub
sahf
ret
mov
push
and
jno
loopne
cmp
cwtl
mov
aaa
addr16
lcall
fisubrl
xchg
insb
jnp
inc
mov
in
aad
out
ret
pop
or
loop
mov
adc
ficompl
lods
iret
data16
dec
mov
sti
dec
pop
pop
add
ljmp
adc
imul
xlat
xchg
in
jecxz
testb
sub
jne
ds
xor
xor
inc
mov
daa
notl
jmp
stos
jo
xlat
cmp
dec
jle
pop
dec
jmp
nop
push
ss
shl
mov
lcall
lea
xor
push
add
push
int3
jnp
mov
neg
adc
das
mov
fnstsw
in
jb
dec
mov
sarb
jp
int
js
xchg
scas
aaa
push
out
xchg
inc
cwtl
test
xor
subb
fwait
mov
sti
xor
loopne
jg
cmp
hlt
mov
mov
sti
or
push
bound
jnp
not
mov
or
and
cmp
ret
fwait
dec
add
mov
sahf
inc
cmp
xor
sub
or
xchg
lret
sub
out
notl
xor
lahf
roll
cmpsb
pop
scas
xchg
mov
std
neg
setne
adc
mov
and
or
sbb
int3
sub
adc
stos
push
xor
sbb
or
icebp
dec
adc
inc
jge
lock
and
mov
test
adc
mov
push
les
lret
scas
iret
stos
insb
or
adc
sub
and
add
dec
pushf
mov
lret
scas
unpcklps
pushf
ja
or
xchg
jecxz
jae
or
or
or
jo
leave
sahf
inc
or
das
into
cltd
in
sbb
push
pop
cmp
inc
xor
xchg
inc
mov
inc
xchg
mov
in
mov
xchg
sub
fwait
sbbb
out
pop
jmp
push
cs
dec
call
mov
xchg
or
pop
je
xchg
mov
dec
inc
insb
sub
inc
mov
mov
mov
inc
sub
xchg
lcall
movsb
inc
inc
iret
xor
lret
dec
ja
mov
or
ror
push
hlt
es
cmp
pop
lods
imul
ljmp
andl
cmpsl
aaa
xor
xchg
push
mov
subl
sub
insb
movl
inc
fdiv
scas
and
pop
mov
mov
cs
dec
jno
adc
daa
push
pop
fs
adc
mov
sar
mov
dec
iret
stos
popa
push
iret
pop
jo
sbb
add
lods
addr16
ret
rolb
in
addr16
dec
jl
insb
lss
xchg
adc
les
sbb
add
jp
pop
and
push
mov
pop
jbe
sub
notl
cmp
fisttpl
movsb
mov
lahf
out
and
mov
sbb
ret
sti
mov
inc
repz
fwait
inc
hlt
and
lcall
repnz
inc
push
call
aas
ficoml
or
test
xchg
in
xor
sub
push
inc
cmp
cmp
pop
push
fidivl
push
les
scas
nop
sbb
push
xlat
adc
pop
adc
hlt
sub
rcrw
push
mov
push
push
push
mov
out
arpl
fucomip
jno
mov
int3
aas
sbb
xor
mov
and
cmp
aad
pushf
daa
repz
xchg
jecxz
jo
imul
stc
pop
mov
or
sub
jmp
je
out
mov
popf
fsubrs
push
mov
leave
mov
jle
aas
cmp
mov
mov
mov
sub
or
out
or
outsl
xchg
sbbb
xor
fstl
int3
mov
add
ljmp
cmp
mov
mov
out
add
or
frstor
imul
mov
in
call
fistpl
insl
dec
dec
out
popf
cmp
xchg
pop
divl
cltd
jo
loope
loope
insb
jae
jge
out
adc
inc
daa
mov
mov
mov
lret
push
mov
mov
mov
xchg
mov
push
push
pop
pop
sbb
ret
fidivrl
push
cli
iret
lods
jb
inc
leave
mov
jl
xchg
stos
jne
jmp
fadds
ret
cmp
aas
pushf
mov
jle
mov
fcmovnbe
add
icebp
mov
mov
cld
pop
ficoms
loop
mov
sbb
mov
shl
push
push
ljmp
pop
inc
movsl
inc
scas
jbe
xchg
inc
ljmp
je
scas
rcrb
jle
insl
adc
inc
mov
bound
cmc
mov
fisubrs
and
rorb
and
scas
daa
leave
call
cmp
sub
roll
movsb
orb
test
adcb
cmp
lahf
add
out
mov
add
nop
sti
mov
jne
mov
cltd
ret
inc
cltd
insb
cmp
mov
in
and
or
inc
insb
mov
adc
pop
lods
aaa
loop
les
lret
mov
pop
lcall
adc
aaa
inc
push
dec
or
cmpsl
lock
inc
or
sbb
mov
lock
scas
lods
jb
rcll
mov
jmp
cmc
xor
dec
add
jb
adc
add
nop
inc
daa
push
cmp
cmp
fistps
cmp
repz
jae
test
sbbb
pop
stos
mov
mov
cmc
ret
jnp
div
jle
in
sub
sti
imulb
aam
add
push
jo
xchg
and
sub
int3
xor
push
pop
div
in
je
mov
outsl
and
shlb
sub
adc
pop
int
ret
incl
mov
imul
inc
cmp
das
fnstenv
mov
fs
dec
xchg
ret
fcmove
dec
sahf
and
jne
lods
and
push
cli
pusha
lods
fistpll
push
scas
pop
dec
pop
rcrb
push
mov
fmull
fcmovu
sbb
inc
loopne
loope
aad
jae
ja
idivb
mov
xchg
sbb
xchg
shrl
mov
les
xchg
and
xor
ror
mov
das
cli
mov
ret
xor
fidivs
push
aad
mov
xor
mov
cs
jge,pt
push
clc
ljmp
cmp
sbb
mov
loop
test
mov
xor
mov
call
mov
into
aaa
fisttpl
add
iret
mov
dec
sub
enter
imul
push
mov
stc
jbe
fsubrs
mov
lcall
xchg
cli
outsb
cmpsb
mov
mov
adc
xor
jnp
test
lock
cmp
xchg
repz
gs
pop
add
or
sbb
sahf
or
dec
inc
mov
test
xor
sbb
sub
lret
xor
cmp
test
cltd
xchg
fcmovnbe
cmp
add
mov
adc
andb
ret
and
xor
or
bnd
pop
iret
outsw
roll
cwtl
push
jbe
int3
add
mov
pushf
in
data16
adcb
jae
fistps
and
je
sub
iret
daa
les
in
bnd
psubsb
dec
pop
jmp
mov
push
mov
lret
cwtl
inc
ret
mov
in
notl
push
xor
insb
jne
scas
or
hlt
stos
cmp
mov
int3
std
xor
aam
jge
mov
cmc
adc
lods
insb
jae
xor
cs
cmp
mov
dec
mov
or
adc
mov
jb
loop
jle
das
dec
stc
int
or
dec
push
in
inc
dec
mov
mov
mov
nop
cmp
xchg
out
cwtl
repz
das
outsb
jae
pop
xchg
push
cmpb
pop
adc
mov
imul
in
test
mov
and
lods
ds
fs
aam
andnps
or
mov
and
pushf
xor
fistpl
out
jno
push
jl
mov
imulb
jbe
xlat
dec
fnsave
out
pop
cmc
adc
aad
pop
fwait
jno
rol
or
addr16
rol
xchg
push
imul
stos
jnp
outsb
shr
fsts
shll
inc
mov
and
push
ficompl
jae
int3
rol
pop
paddsb
push
sahf
lcall
jb
xchg
add
shl
xor
dec
es
lds
inc
mov
push
mov
clc
fistpll
mov
dec
xchg
jne
and
rcl
cmpsb
aaa
sub
dec
shll
pop
fwait
cli
sub
testl
cmp
add
mov
sub
push
out
inc
pop
pop
lcall
sbb
cwtl
jg
ret
push
jb
stos
add
ss
pop
or
mov
adc
scas
jp
mov
lahf
mov
and
mov
repz
pop
mov
sub
pop
inc
mov
cmp
lcall
xor
fidivs
or
or
popf
add
nop
jmp
insb
sti
or
js
adc
add
mov
push
nopl
loopne
fst
lods
enter
ret
mov
jne
daa
sti
fsubrl
mov
mov
arpl
or
ja
shll
mov
shrb
imul
notl
je
pop
dec
test
lods
lock
negb
jae
stos
mov
pop
js
repnz
mov
sbb
pop
pop
insl
cs
int
push
xchg
js
scas
push
xchg
cli
xor
mov
xor
cli
or
in
mov
jmp
push
nop
aas
adcb
test
jo
jg
pop
lea
cmp
inc
mov
push
test
addl
imul
xchg
dec
and
jl
and
test
cld
jbe
iret
or
movaps
jnp
mov
fdiv
sti
mov
sbb
in
cmpsb
pop
test
in
xor
imul
rcpps
sarb
or
xorb
jbe
xor
mov
jp
addb
sub
test
mov
dec
cmp
outsl
call
jnp
dec
sbb
adc
pop
cltd
sbb
cmp
repnz
and
and
scas
push
shll
orb
int
lods
or
out
lds
or
leave
cmp
ds
sti
cs
jp
stos
fmul
movsb
xor
ds
add
push
or
dec
and
ret
mov
lock
xor
ret
mov
fmul
mov
scas
out
mov
dec
jnp
xchg
in
or
push
dec
and
insl
mov
jmp
ss
pop
jle
dec
or
push
ja
lods
pop
cmp
adc
sub
or
mov
push
mov
cmp
cmc
sbbb
adc
jg
fcoml
movsl
scas
or
and
pop
mov
mov
pop
stos
jecxz
outsb
test
fadd
or
outsb
fidivrl
xor
fldcw
mov
mov
sub
cli
pop
and
push
add
xor
add
in
add
and
sti
sbb
je
fbstp
test
fmul
ret
stos
jmp
orb
std
push
xlat
test
sub
les
mov
pop
mov
shll
mov
sbb
jecxz
xchg
push
push
in
adc
xor
dec
mov
jle
or
mov
xor
in
inc
sub
xchg
idivb
sub
adc
daa
outsb
movsb
pop
in
stos
add
push
movsb
xor
cmpsb
xor
icebp
stos
orl
fidivl
in
cmc
addr16
mov
xcrypt-cbc
cmpsl
xchg
add
or
out
and
push
push
and
mov
or
xchg
arpl
lods
in
jae
sbb
std
cwtl
into
ret
or
call
and
inc
adcb
push
mov
adc
push
xor
push
add
jnp
xchg
mov
fdivrp
movsb
mov
pop
andl
mov
pop
test
leave
jmp
mov
stos
push
pop
stos
xchg
or
and
jge
cmp
ret
push
imul
dec
add
jns
out
pop
into
fsubs
mov
repz
cs
jecxz,pt
sub
xor
adc
mov
xchg
lcall
fiadds
jnp
mov
cld
pop
jbe
jmp
mov
jecxz
push
in
mov
shl
call
dec
popa
jl
les
ds
push
popf
xor
mov
out
into
sbb
push
dec
stos
sbb
jne
sbb
xchg
mov
and
sub
out
dec
push
lahf
push
shl
dec
gs
and
ljmp
daa
arpl
cmp
sub
ret
xchg
fbstp
std
ret
and
push
jle
sub
push
xchg
dec
ljmp
inc
dec
movsb
or
dec
mov
fsubrs
daa
jbe
sub
cmc
pop
add
xlat
movsb
and
sub
cs
or
push
jns
jg
adc
pop
mov
pop
filds
sbb
test
and
movsl
inc
test
fidivl
pop
arpl
popa
repnz
jno
loopne
fistpl
test
pop
mov
movsb
push
in
sbb
push
scas
push
int3
fs
mov
push
ret
mov
mov
mov
sti
dec
adcl
xlat
push
test
rolb
pop
fs
sub
cmp
sbb
test
aad
mov
adc
daa
push
ljmp
mov
mov
pop
shr
or
or
mov
repnz
mov
fbstp
push
out
xor
xchg
mov
popa
pop
dec
xchg
push
scas
xlat
sub
loop
sbb
scas
xchg
sub
lcall
std
jbe
rorl
or
les
hlt
sar
insb
jge
mov
lds
loopew
sub
aam
dec
mov
cmpsl
test
or
push
pop
jne
push
idivl
das
push
aas
pushf
sub
iret
cmpxchg
es
jne
rorl
mov
add
fcmovnb
les
cmp
cltd
lds
mov
movsl
push
push
ds
xor
movsl
repz
mov
mov
jge
sbb
xor
pop
std
outsl
enter
mov
mov
xchg
add
stc
sub
cltd
pop
inc
xchg
test
sahf
mov
push
mov
push
out
ds
dec
mov
dec
movsb
push
add
mov
and
sub
lock
ret
mov
pusha
int3
cmpsl
adc
insl
mov
inc
mov
mov
push
loope
xor
cwtl
jle
das
lret
push
lock
clc
cwtl
in
dec
jmp
mov
scas
inc
movsl
sbb
adc
orl
sbb
xor
sub
sti
xlat
push
das
mov
fcmovb
cmp
scas
and
inc
cmp
or
pop
add
push
lret
inc
jp
add
mov
stos
lods
mov
add
inc
sbbl
xor
pop
in
out
sub
jo
jne
mov
lds
mov
pop
lods
test
inc
std
push
js
aad
sbb
cmp
jp
scas
aam
ds
xchg
ret
lds
mov
fwait
or
imull
cmpsb
push
lret
jmp
or
push
int
push
lods
xlat
repz
mov
cmp
inc
jle
sbb
xor
jl
cmp
sub
jbe
clc
test
rcl
cld
bound
mov
in
xchg
jecxz
scas
adc
sub
mov
loope
cmp
sbb
or
mov
icebp
subl
push
clc
mov
rcrl
sarl
negl
insb
or
das
adc
aad
pop
mov
fcoml
leave
xchg
das
rolb
test
cmpsl
inc
in
push
lds
clc
jge
sbb
dec
notb
lret
pop
sti
mov
mov
lds
cltd
mov
mov
int
cltd
test
pop
je
mov
mov
hlt
push
lods
enter
sbb
rcrl
jge
xor
stc
jecxz
sub
testl
insb
arpl
loop
cmp
mov
inc
jl
xor
inc
or
pop
or
es
jmp
in
inc
and
mov
lret
pop
cmp
iret
cmp
jg
fmul
daa
dec
test
scas
mov
add
jecxz
or
jbe
sub
stos
int
shrb
ss
inc
fsub
or
lock
xor
ss
movsl
lret
mov
add
sub
cmp
aam
dec
js
cmp
ret
stos
pop
pop
sti
push
test
mov
ret
jl
pop
cmpsl
sahf
jl
mov
jnp
cmp
out
push
push
mov
add
jae
add
iret
aaa
push
loop
jno
cmp
lahf
pop
dec
cmpsl
mov
or
cmp
mov
out
mov
mov
push
push
push
enter
mov
insl
cmc
int3
iret
inc
dec
je
cmp
andl
ss
or
jl
je
cmpsl
inc
adc
lret
outsb
repnz
xor
sti
lret
lods
adc
dec
aam
std
mov
ss
inc
pop
ljmp
jo
adc
push
inc
hlt
mov
mov
lcall
inc
clc
add
mov
pop
in
dec
mov
aad
shr
sarb
mov
inc
mov
insl
mov
gs
pusha
das
data16
sar
aaa
jae
add
cmp
push
cltd
jo
ret
stc
sahf
jge
out
mov
mov
adc
pusha
sub
add
clc
add
pop
sarb
mov
push
mov
sub
add
mov
int3
dec
xchg
roll
or
mov
ja
lds
jae
notl
xchg
pcmpeqd
sub
fsts
scas
pushf
xchg
jecxz
ss
fmul
insb
mov
cwtl
ljmp
loop
xor
push
incb
pop
add
in
jle
popf
pushf
into
pop
out
push
push
push
adc
or
addb
sbb
sbb
sub
push
mov
sub
mov
test
pop
add
les
and
fucomi
dec
sbb
cli
xchg
les
dec
imul
cmp
mov
loope
mull
mov
cmpb
mov
and
test
repnz
add
inc
lods
frstor
adc
fnstenv
push
jmp
pop
cmpsb
cmp
add
insb
and
fcompl
out
ja
xchg
out
pop
dec
movsb
aam
dec
add
imul
mov
sub
mov
std
and
ret
std
add
shll
or
mov
push
mov
int3
and
mov
lock
xor
adcb
out
out
xlat
iretw
imul
mov
scas
xor
push
and
and
sub
rcrb
mov
xor
cwtl
pop
dec
inc
jge
mov
or
mov
adc
push
aam
jg
jne
pusha
les
bnd
xor
pusha
or
push
inc
jge
repz
jnp
and
lret
push
mov
test
pop
call
push
mov
add
cwtl
hlt
imul
push
popa
das
pop
push
mov
pop
adc
fidivrs
sub
sbb
pop
and
cmpl
xor
insl
outsb
xor
test
hlt
jle
arpl
aaa
lds
sub
sbb
fadds
fnstenv
push
mov
mov
xor
sbb
jg
xor
pop
leave
xchg
fildl
out
mov
pop
mov
loopne
arpl
outsl
inc
mov
lods
lods
in
or
push
xor
lock
push
mov
push
mov
sbb
fwait
push
sbb
xchg
bound
call
inc
lea
adc
xor
in
mov
xor
sub
sub
mov
lret
int
sub
shll
data16
outsl
or
test
jns
and
sub
ss
pop
les
jecxz
jae
cmpsb
cmp
dec
mov
sbbb
aas
cli
pop
std
add
je
loop
arpl
xchg
sbb
xor
pop
je
mov
into
sub
cmpsl
or
pop
out
mov
sbb
mov
mov
fbstp
jo
shrb
pusha
mov
jg
je
inc
sub
sbb
and
push
push
into
adc
pusha
push
loope
es
pop
repnz
jl
mov
outsl
mov
dec
daa
push
lahf
push
addr16
lods
mov
inc
xor
xchg
adc
pop
sbb
lds
outsl
mov
lahf
pop
loopne
lock
lods
addr16
popa
or
pop
mov
pusha
mov
pop
jne
inc
fimuls
and
mov
cs
push
or
xor
mov
inc
xchg
adc
pop
aam
xchg
insl
outsb
xor
add
negb
xchg
frstor
jbe
lret
lcall
loope
loop
mov
loop
sub
mov
jl
dec
leave
popf
dec
or
inc
sbb
mov
mov
and
cmp
lcall
add
int3
xchg
adc
cmpsl
dec
je
push
into
inc
push
popa
xor
pop
in
add
jns
and
or
sti
scas
pop
rcr
in
inc
stos
push
dec
shll
ja
or
push
es
iret
mov
mov
jnp
add
clc
mov
das
daa
cmp
and
call
adc
pop
and
add
jmp
pushf
push
out
addr16
pop
add
adc
xchg
mov
fbld
inc
jnp
jnp
sti
or
repnz
add
mov
mov
push
inc
dec
cmp
xor
mov
push
call
ds
in
push
leave
xlat
sub
pop
add
cmpb
adc
sub
mov
stc
cmp
imul
ja
add
mov
fcoms
xchg
xchg
xchg
test
stc
in
in
test
popf
aad
push
dec
mov
or
divb
jmp
adc
lcall
or
inc
and
mov
or
cli
outsb
jp
and
inc
push
pop
bound
loopne
and
push
adc
jnp
setno
cmpsw
pop
mov
mov
add
dec
outsl
and
cmp
push
inc
scas
dec
in
xor
jle
add
cmp
scas
std
mov
sbb
mov
sbb
add
icebp
push
inc
cmp
cmc
mov
int
xchg
shl
fisttpll
shll
add
xchg
pop
sub
adc
and
dec
js
fidivrl
inc
xchg
mov
pusha
mov
loope
cli
les
mov
scas
push
mov
cmpsb
and
dec
nop
mov
push
imul
pushf
adc
xor
xor
in
push
lds
clc
into
dec
loop
sub
popf
mov
imulb
lock
scas
cld
outsb
mov
out
mov
bound
jle
push
scas
sbb
gs
sub
popa
push
sub
je
sbb
inc
inc
addr16
xor
pop
inc
dec
dec
dec
das
or
call
insl
insl
lods
popf
mov
dec
lods
mov
cmpsb
push
xor
fbstp
jl
sbb
and
xor
pushf
mov
leave
push
mov
add
lds
mov
fisubrl
pop
cs
addr16
test
mov
clc
mov
inc
add
cs
es
or
test
mov
out
loope
movsl
or
pop
insl
cmp
cld
adc
mov
cs
pop
loope
push
stos
ret
and
test
std
dec
dec
xchg
dec
cltd
xor
xlat
cmp
ljmp
out
es
dec
jmp
inc
js
std
jl
jge
cs
push
addl
inc
loope
rcll
jmp
orb
lret
mov
and
jo
call
adc
push
mull
push
inc
and
sub
push
testl
loopne
das
adcb
jb
mov
and
arpl
imul
pop
push
inc
aaa
sahf
xor
lret
incl
sub
ret
jg
and
dec
xchg
pop
xchg
and
xor
cld
in
dec
scas
cmp
push
cmp
std
xchg
test
dec
mov
cmpsl
cmc
jecxz
push
sbb
cwtl
sahf
xor
xor
out
adc
je
inc
or
xchg
shrl
pop
dec
in
adc
mov
out
mov
jge
aas
lcall
adc
mov
jmp
mov
push
enter
jns
sahf
dec
shr
mov
mov
xchg
pop
sti
jno
ss
or
xchg
push
mov
pop
daa
sbb
icebp
mov
cmp
mov
dec
pop
inc
jmp
or
fstpl
ret
insl
out
mov
lret
daa
xchg
cmp
jbe
xor
cli
pop
and
popa
dec
xchg
movsb
cld
je
loope
loopne
fnstsw
test
fcomi
scas
jae
lret
add
xor
dec
arpl
scas
and
cli
push
test
dec
bnd
rcl
lcall
jg
jns
dec
mov
pop
sbb
rcll
test
xor
adc
imul
dec
bnd
add
orb
jmp
adc
test
pop
int3
xor
mov
inc
push
scas
leave
nop
jle
dec
rcll
or
mov
rorb
push
xchg
call
push
shll
jne
mov
pop
pop
lret
mov
mov
stc
lods
int
mov
jno
repz
hlt
pop
mov
insl
dec
mov
or
into
clc
sbb
in
inc
mov
jno
add
fstpl
sub
inc
inc
add
dec
imul
imul
pop
icebp
mov
xlat
jbe
pop
in
loope
push
ret
fcoml
in
inc
fwait
outsl
sub
adc
pop
lcallw
in
jmp
xor
sbb
jb
cmc
std
jae
shrb
mov
fstpl
pop
pusha
push
sbb
leave
or
xor
in
scas
sub
lret
jge
fidivl
bound
outsl
mov
pop
jecxz
popf
push
negb
mov
add
lds
and
lea
fwait
add
cmpsb
pop
std
sub
mov
dec
jge
mov
dec
mov
jnp
fstpt
cltd
leave
mov
pop
les
push
jae
bound
int3
addr16
mov
leave
popa
aam
in
mov
out
xorl
mov
rcrb
mov
jno
mov
cltd
fnstcw
cmc
push
sbb
sbb
mov
cmpsl
add
push
xchg
out
sbb
pop
adc
xchg
mov
rcrl
dec
sub
mov
fsubrs
sahf
sub
mov
mov
dec
sbb
xlat
and
and
loop
arpl
and
bound
mov
outsl
shl
popa
je
dec
cmp
lcall
mov
dec
and
sub
pop
nop
mov
push
addr16
push
xor
iret
inc
inc
scas
addr16
xchg
loope
inc
inc
dec
test
xor
js
sub
iret
push
lds
xchg
sub
add
push
cmp
out
mov
mov
fldl
inc
iret
fidivs
stos
mov
pop
les
jnp
inc
pop
add
popf
into
adcb
loopne
jl
dec
dec
or
or
pushf
mov
xor
pop
adcb
inc
push
sbb
stos
lret
mov
negb
adc
and
adc
ja
andl
shll
pop
xchg
jle
lds
xchg
mov
adcb
push
push
inc
jle
adc
mov
test
cmpsl
cmp
push
inc
and
lret
sti
lods
jns
inc
inc
enter
insl
test
add
jo
jae
pushf
fistpll
inc
adc
fmulp
popf
stos
arpl
call
sub
push
cmp
mov
add
ja
mov
aad
add
clc
adc
repnz
fwait
sbb
mov
iret
dec
push
je
jb
fcom
test
jns
dec
or
sbb
lret
jo
jl
mov
adc
loop
add
push
or
rclb
adc
push
xor
pop
jbe
fistps
insl
enter
outsl
jge
in
pop
mov
lds
stos
jmp
inc
fcoms
enter
arpl
inc
pushf
adc
adc
cmpsl
dec
ds
subb
dec
adc
adcb
or
cli
mov
mov
cmp
cmpb
sub
jno
addr16
mov
test
xorl
xchg
mov
les
sub
enter
mov
add
dec
mov
dec
ret
mov
js
mov
imul
fs
div
fistpll
test
xor
imul
bound
loop
std
and
clc
cmp
icebp
cld
movsl
es
ljmp
sub
out
add
cwtl
aas
push
or
out
int3
mov
sbb
xchg
mov
xor
mov
xchg
out
sarl
popf
shrl
jl
les
inc
xor
shlb
test
pop
popa
data16
mov
lret
xor
push
fs
inc
loope
add
push
and
mov
push
xchg
imul
dec
adc
push
mov
cmp
mov
mov
sarb
mov
mov
pop
jecxz
popf
xchg
dec
add
jge
jg
and
insl
stos
push
test
adc
sahf
xor
sub
add
test
dec
std
lcall
int
cltd
mov
adc
sub
fcoml
loope
cld
lds
mov
movsl
pop
jl
jl
xor
adc
inc
mov
mov
ja
fwait
mov
out
mov
inc
orb
xor
test
cmpsl
jae
adc
cltd
in
cmp
inc
xchg
stos
jns
inc
cmp
dec
push
loop
push
insb
jp
dec
ja
xchg
nop
out
sbb
mov
sub
pop
aas
cmp
sbb
dec
sbb
inc
lea
cmpsl
xchg
insl
xor
add
int3
push
mov
daa
push
mov
xor
std
pop
lea
out
fstpt
push
repnz
lret
repnz
test
test
lret
stos
repnz
leave
cmc
xor
insl
or
std
loopne
pop
xor
inc
jge
jmp
sub
mov
lods
je
sbb
iret
arpl
jae
into
sbb
inc
cmp
pop
ret
push
imul
lea
jp
cmp
xor
and
xorb
inc
mov
addb
aam
mov
push
push
fbld
fwait
push
sub
inc
fmul
and
mov
js
mov
mov
mov
cmp
jb
xchg
jae
int
paddw
out
into
jmp
xor
mov
in
movsl
jns
lret
in
int
fldenv
mov
fmull
fildl
mov
adc
jge
add
xlat
lds
scas
movsl
je
loopne
adc
mov
daa
decb
adc
ja
jb
pop
jle
ffree
int3
aas
or
dec
lret
sti
test
lahf
or
inc
push
out
pop
cld
cmp
inc
popa
jnp
loopne
mov
pop
lock
mov
test
mov
js
movsl
pop
xchg
rorb
sbb
lea
inc
mov
insl
jg
sarb
insb
mov
xchg
dec
or
xchg
cmp
imul
push
in
sbb
std
mov
aaa
lea
or
adc
inc
sarb
cld
test
fnstsw
int3
andb
test
and
xor
inc
mov
cli
or
or
or
les
popf
or
xchg
push
mov
test
jae
mov
dec
jo
decl
or
testb
sbb
dec
jecxz
int
push
jge
or
mov
push
popf
xor
sub
jno
mov
outsl
not
push
scas
mov
mov
mov
divb
imul
sbb
or
sub
xchg
and
xchg
fstps
xchg
jecxz
fwait
sub
xchg
inc
cs
dec
movsb
movl
xor
xchg
pop
inc
push
ss
adc
rol
mov
testl
mov
call
es
lcall
repz
and
sahf
insl
sbb
mov
fmuls
adcl
mov
adc
jecxz
repnz
loop
andb
bnd
test
jp
lahf
push
fildl
xchg
aaa
pop
sbb
aaa
push
loope
cmp
pop
jne
jnp
test
xchg
pop
sbb
pop
adc
lcall
roll
js
in
xchg
dec
add
fiadds
iretw
adc
cmc
push
jns
aam
fs
push
les
push
push
imul
xchg
ret
mov
dec
ljmp
pop
lods
or
xor
xor
pop
stos
mov
jb
pop
in
fsubrl
paddsb
out
je
push
test
jl
jecxz
pusha
leave
jmp
jge
push
mov
in
jle
add
loopne
das
add
in
adc
jnp
outsb
pushf
out
mov
mov
mov
and
inc
out
ja
push
and
or
xchg
cmc
cmpsl
fists
mov
stc
in
fisttpll
jno
adc
call
scas
jb
int3
sbb
test
inc
mov
jae
cmp
pop
sti
out
inc
in
mov
scas
outsb
scas
sbb
mov
lcall
adc
out
fsub
rol
xor
loope
xchg
jl
es
outsl
icebp
cmp
addr16
lock
mov
out
push
rorb
lea
popa
inc
dec
xchg
test
cld
jbe
lret
lods
les
lock
xchg
lock
loopne
mov
jl
sbb
cmpsl
fildll
call
mov
into
mov
jle
fwait
push
divb
call
add
cmp
dec
add
mov
jge
inc
adc
jle
loope
stc
cmp
ficoms
leave
popa
addr16
adc
dec
out
fstpt
fs
jl
push
arpl
push
in
test
scas
outsb
pop
jecxz
mov
pop
pop
les
out
addr16
out
pop
mov
sub
or
inc
stc
jns
lods
lret
and
subl
stc
mov
xor
test
popa
arpl
mov
xchg
data16
int3
std
sbb
sub
jne
adc
pop
daa
les
or
sahf
mov
and
adcl
inc
shrb
or
xchg
in
xor
fadds
mov
lret
mov
nop
pushf
sahf
sbbb
xor
shrb
or
fsts
cmp
daa
ret
or
mov
dec
push
sub
add
cmp
test
test
mov
push
out
popa
xchg
push
pop
mov
push
xor
fcmovu
ret
lahf
mov
and
xlat
jle
fdivr
jo
and
inc
push
fwait
scas
or
scas
jne
data16
xor
and
push
inc
lds
lods
nop
pop
dec
sbb
jp
clc
xchg
mov
ja
mov
jg
sbb
push
ret
fdiv
faddl
pop
mov
outsl
dec
inc
sbb
leave
ds
cld
shlb
ss
in
add
mov
aaa
cld
rorl
fistpl
xor
xchg
jae
cmp
jns
mov
popa
add
sub
call
das
or
or
sub
sbb
gs
scas
cwtl
mov
rorb
mov
cmpsb
loop
dec
xchg
xorb
roll
stc
aad
jg,pt
pop
in
and
pusha
lret
fsubp
push
popf
sbb
mov
jae
add
fwait
pop
pop
out
jnp
sbb
cmp
sbb
mov
js
rolb
shlb
xchg
wrmsr
lret
insb
mov
cmpsl
enter
imul
mov
int
bound
xchg
mov
dec
pop
movsl
mov
pop
loope
inc
fisubs
xor
xor
sub
xor
or
and
push
add
inc
iret
and
pop
pop
xchg
xchg
shr
and
pop
in
mov
or
mov
and
sub
ds
xor
lret
mov
and
mov
pushaw
xor
lock
lret
test
insl
sbb
pop
jbe
add
out
fisttpl
jmp
hlt
and
xchg
out
push
adc
xor
adc
rorl
les
inc
mov
loopne
adc
mov
cmpsb
in
sbb
mov
fistps
lea
dec
lret
jo
add
sub
or
push
mov
clc
fucomip
out
adc
bound
stc
xlat
js
pop
daa
xor
jae
pop
mov
cmpsl
leave
pushf
and
insl
call
inc
dec
inc
and
out
stc
test
mov
mov
xor
sbb
hlt
pop
mov
xchg
xchg
ljmp
inc
jo
xchg
loopne
inc
test
aam
and
mov
les
rolb
icebp
add
fcom
inc
adc
es
or
test
loopne
and
fs
mov
int
mov
sbb
outsl
xor
popf
cltd
testl
cmp
into
ss
dec
xor
test
shlb
cmc
lret
loope
test
inc
sub
fwait
xchg
ds
xchg
xchg
mov
cld
test
insb
testl
xor
in
add
dec
push
or
pop
sbb
cmpsb
jp
lret
sti
xorl
mov
and
cli
rcl
mov
push
cli
cmc
clc
enter
fldl
jle
ret
xlat
mov
push
lret
jle
insl
cwtl
xor
push
and
adc
sbb
notl
popa
mov
or
jle
push
int
mov
arpl
lret
push
aad
push
shrl
xchg
cmp
aas
mov
std
stos
or
xlat
xchg
daa
mov
lods
jb
test
adc
in
out
sahf
ret
cmp
xchg
test
data16
cmp
push
repnz
push
dec
gs
add
negl
jmp
xchg
aam
mov
pop
push
jge
lock
scas
rcrl
pop
outsl
xchg
and
sub
int3
daa
sub
dec
xor
hlt
mov
jne
in
push
or
adc
pop
subb
loopne
movb
pop
add
mov
mov
mov
fsts
roll
sbb
jmp
scas
xchg
jmp
mov
ss
cmp
mov
adc
and
jmp
jbe
and
cld
in
sub
pushl
fdivrp
ret
xchg
nop
jg
call
in
sbb
dec
add
rcrl
imul
test
push
sbb
jp
mov
lea
test
cmp
sub
repz
leave
mov
aaa
mov
int3
sbb
out
cmp
xchg
mov
mov
fwait
mov
mov
into
aad
dec
movsb
lahf
mov
ja
or
adc
cwtl
jecxz
cmp
dec
xor
xor
dec
adc
xchg
sub
push
xor
and
ljmp
roll
mov
push
dec
xchg
cwtl
lret
push
stos
push
pop
dec
stc
push
out
gs
pop
ss
jns
jb
or
mov
cli
or
neg
outsl
pop
mulb
cmp
adc
adc
jle
and
mov
std
pop
outsl
pop
cs
jae
insb
or
mov
push
rcr
ss
jo
push
ret
mov
aas
nop
clc
sub
inc
fdivrl
push
aad
adc
jno
and
dec
aaa
repz
pushf
jae
pop
das
outsl
cmp
enter
lods
inc
cmp
movsl
mov
push
popl
xor
and
outsb
jmp
outsb
ss
xchg
lods
ja
push
iret
jg
cmp
xor
push
mov
cmp
mov
sbb
in
jb
pop
inc
lock
lea
inc
sub
add
pop
mov
sub
lods
mov
addr16
xor
jns
cmp
jl
or
movsl
pop
adc
fsubrs
fisubrs
cltd
push
loopne
jns
aaa
mov
cld
xchg
stc
xchg
mov
dec
inc
fsubrs
mov
push
dec
adc
mov
mov
orb
mov
sahf
mov
dec
roll
xchg
iret
sbb
add
jg
data16
sbb
sub
ret
cltd
in
jge
pop
jb
push
jl
and
sahf
mov
sahf
test
sahf
xor
ficoml
xchg
and
push
mov
or
jge
mov
lret
cwtl
addr16
sar
fwait
mov
mov
dec
out
xchg
add
jg
je
lock
push
int
ret
aas
ljmp
push
push
xor
insl
dec
rorl
inc
cwtl
xchg
sub
mov
push
dec
lea
repz
xchg
jl
ss
xchg
mov
add
push
out
js
sub
clc
and
xchg
lret
jns
lods
test
jno
pop
addr16
or
sbb
roll
pop
fstl
outsl
into
or
js
xchg
leave
jae
xchg
mov
pop
jecxz
into
shl
imul
jecxz
outsl
xorl
rclb
xor
jbe
lock
daa
pop
outsb
inc
stos
mov
mov
movsb
into
mov
pop
stc
in
addr16
jo
inc
cmpsl
mov
scas
adc
dec
jg
lods
rcll
mov
pop
test
jae
dec
cltd
mov
dec
xor
fmull
inc
je
dec
push
mov
popa
int3
dec
mov
pop
mov
sub
test
lret
addr16
dec
and
int
push
bound
inc
pushl
xor
jl
inc
adc
push
outsl
mov
sub
dec
jb
dec
or
add
outsl
fistpll
bound
scas
push
sti
add
xor
jg
pop
mov
add
call
cltd
imul
jae
cmp
xor
xchg
lret
out
sbb
or
enter
jae
pop
push
clc
cmp
clc
loopne
cld
sub
in
xor
ljmp
xchg
mov
push
shrb
lea
sbb
pop
inc
adc
sbb
sub
xor
sub
ret
lret
lret
pop
cs
push
pop
mov
mov
push
ret
mov
mov
ds
or
mov
loope
mov
dec
lea
sub
movsl
dec
mov
push
imul
decb
bound
push
pop
popf
pop
dec
push
dec
das
ficoms
sbb
cwtl
mov
fwait
lds
pop
mov
jl
daa
enter
stc
mov
inc
and
insb
popa
or
mov
mov
mov
inc
jno
iret
cli
dec
fiadds
lods
lahf
xchg
jnp
notl
jmp
mov
jmp
roll
mov
hlt
sbb
ficomps
or
push
push
cmp
idivb
and
xchg
fs
das
or
pushf
sub
popf
icebp
ss
in
push
mov
add
jmp
cmpsb
popf
cmpsb
out
push
pop
lea
jl
jb
xchg
cltd
fiaddl
jno
pop
push
cmp
add
and
nop
sub
xor
pop
sub
jbe
jecxz
pusha
cmp
adc
jns
sub
jmp
mov
xchg
and
loop
mov
jbe
cmpsb
nop
cmpsl
or
hlt
test
in
xchg
or
jle
pop
dec
in
jb
cmpsl
or
pop
stc
aam
fisttps
inc
mov
or
dec
mov
fidivl
shrb
add
insb
push
fs
or
loopne
pushf
sub
scas
mov
popf
sub
ss
dec
rorl
int3
jmp
punpckhbw
push
lret
cld
or
test
aaa
sbb
js
cmpsb
lock
fsubl
bound
jne
add
inc
inc
adc
js
xchg
bound
out
push
jp
in
inc
hlt
xlat
fcomip
jecxz
push
in
dec
mov
mov
scas
aaa
loopne
cmp
xchg
icebp
mov
in
ficoml
insl
adc
inc
mov
sub
add
ds
xor
imul
jns
xchg
mov
repz
cmpb
gs
dec
mov
iret
into
xor
push
push
pop
mov
push
push
mov
stos
stos
addl
jg
or
push
push
sub
jmp
nop
ds
cmpsb
ss
arpl
cmp
scas
in
data16
cmovb
sub
movb
fstps
cld
mov
mov
adcb
jns
mov
mov
shrl
in
ret
pop
leave
add
push
int3
jne
out
fildl
enter
ljmp
jne
or
xor
fistps
sub
bound
mov
lea
loope
outsb
shll
loopew
cmc
push
push
movsb
mov
mov
ljmp
inc
std
pop
xor
jge
jno
or
ss
and
mov
sub
xchg
call
mov
push
ss
push
cmp
jge
mov
sahf
jl
or
in
adc
loope,pt
nop
dec
sti
xchg
mov
out
or
mov
or
mov
add
adc
idivl
fwait
shll
mov
mov
xchg
xchg
repnz
mov
mov
xor
mov
mov
gs
pop
idivl
lcall
out
pop
test
dec
xchg
mov
or
insl
or
aaa
scas
sbb
push
outsl
xchg
mov
adcl
enter
dec
adcl
lock
add
push
jmp
fincstp
push
cli
jmp
push
push
out
sbbl
sbbl
sub
gs
ret
scas
and
dec
push
icebp
or
imul
adc
in
loope
dec
fisttpll
dec
out
in
mov
rcrl
adc
mov
scas
push
mov
das
int3
inc
cmpsb
jp
hlt
add
outsb
sub
lret
movsl
push
push
jne
lock
aaa
or
movsb
inc
pop
mov
xor
push
fdivrs
or
push
jmp
aas
sbb
mov
mov
cmp
mov
inc
cmc
outsb
idivb
inc
add
adcl
sahf
pop
stc
lcall
add
pop
adc
mov
push
mov
add
or
pop
fildl
stos
sbb
push
inc
pop
fsubrl
adc
out
aam
out
cmpb
push
out
xchg
lds
stos
sub
add
in
dec
out
push
push
in
faddl
pmulhuw
lahf
mov
mov
push
cmp
sub
aas
mov
fbld
inc
shll
xor
xchg
fistps
leave
mov
lahf
push
popl
jge
jae
popf
outsl
mov
addl
pop
arpl
ficomps
xchg
adcl
pusha
mov
sbb
sbb
add
loopne
and
pop
sub
xchg
and
xchg
loop
loopne
push
or
insl
lock
gs
es
push
aam
xor
lods
sub
in
das
cld
push
adc
sbb
sbb
test
mov
jp
or
push
cmp
mov
pop
lods
mov
sbb
into
jns
ss
xchg
ret
stos
pop
push
std
push
dec
and
xor
sbbl
fists
ss
mov
sbb
sbb
ljmp
fcom
xchg
mov
xor
fcmovu
scas
sbb
out
aas
sbb
notb
fucompp
pop
cwtl
clc
pop
add
fwait
push
ret
push
or
push
inc
jg
iret
in
loop
repnz
jmp
xorl
push
pushf
sbb
xchg
test
inc
sarl
cld
enter
stc
xor
jae
loop
pusha
inc
pop
fisubrs
xchg
test
int3
mov
sub
inc
stc
sub
leave
pop
test
clc
es
insb
dec
call
stos
fwait
dec
stc
xchg
and
fists
addr16
or
mov
pop
xchg
or
mov
jb
movsl
push
mov
jg
sub
sbb
push
mov
xchg
int3
int
leave
xor
in
jge
pop
push
test
fdivrp
xor
fs
add
mov
mov
mov
add
sbb
inc
sbb
ljmp
stc
cs
add
aaa
out
or
movsb
xor
jl
inc
and
sbb
fildl
dec
inc
push
arpl
mov
imul
inc
or
in
mov
dec
push
popf
sarl
mov
xor
inc
outsl
stos
push
push
outsl
pusha
loope
fwait
out
sbb
inc
out
adc
js
aaa
push
mov
cmp
ljmp
or
enter
pusha
aaa
push
pop
and
push
fwait
xchg
add
and
xor
enter
shl
mov
cli
pop
sub
das
bound
aas
ret
js
xchg
jo
cmp
popa
ljmp
and
xlat
aaa
xor
push
ret
pop
xor
or
mov
ret
jg
cmpsb
pop
push
aas
sarb
add
mov
cmpsl
outsb
out
inc
fs
ror
cmc
test
cs
or
dec
and
inc
xchg
into
push
mov
repnz
sub
mov
dec
data16
orl
aaa
inc
mov
js
xlat
inc
xor
addr16
inc
inc
mov
cmp
mov
fwait
in
cltd
fwait
jle
cmp
into
xchg
decl
jbe
rclb
sbb
xlat
sbb
fdivs
dec
mov
ficompl
and
mov
cli
pop
cmp
jno
adc
push
inc
and
jle,pt
or
or
fadd
xor
mull
lret
test
leave
inc
stc
push
pop
cmc
movsl
rorl
outsl
mov
mov
enter
pop
movsb
cmp
std
add
or
ret
pusha
dec
lret
adc
xor
dec
mov
adc
push
in
sub
rol
cltd
dec
adc
and
lahf
push
inc
mov
dec
jmp
pop
sub
fs
decl
test
roll
fisubrs
add
sbb
push
int3
insl
iret
xchg
sbb
insb
inc
mov
mov
daa
jmp
fucomp
or
cmp
enter
cmc
in
movsb
mov
cmp
mov
cmp
mov
push
pop
adc
xrelease
into
hlt
xchg
inc
jae
and
dec
lret
push
push
pop
jo
out
mov
and
mov
jp
dec
mov
mov
js
push
rcrl
mov
sar
xor
dec
in
inc
bound
outsb
mov
std
daa
pop
cmp
pop
sbb
mov
push
mov
jbe
sar
in
push
rcr
add
lcall
adc
lret
dec
xor
sbb
pusha
xor
iret
stos
cli
inc
addb
push
std
leave
in
sbb
cmc
movsb
lcall
push
push
addl
cmp
add
rolb
in
in
pop
sarb
in
xor
xchg
test
fists
in
pop
pop
fdivrs
dec
cltd
nop
lea
clc
movb
push
mov
aad
popf
xor
mov
sub
clc
fstl
mov
jl
leave
inc
inc
notb
inc
fistl
pusha
dec
call
jnp
nop
je
cwtl
cltd
pushf
lcall
loope
push
js
icebp
ret
sub
mov
test
lods
mov
mov
jg
adc
xchg
shrl
jbe
lahf
cs
sbb
aam
xchg
pop
pop
push
sti
adc
mov
sahf
and
mov
dec
pushf
xlat
in
pusha
clc
aaa
xor
test
dec
iret
ret
push
std
inc
sbb
bound
adc
cmp
into
inc
aas
or
icebp
sbb
sbb
add
sbb
inc
dec
jne
popa
ljmp
andl
cmpsb
mov
jns
xchg
mov
inc
push
xchg
or
cmp
gs
sbb
out
cmp
sub
lcall
or
bound
sbb
imul
addl
or
jae
sbb
cli
lret
xor
fs
in
aas
daa
sub
loop
outsb
add
or
stos
dec
push
cmp
xchg
pop
mov
outsl
pusha
rcrl
test
inc
repnz
cs
popa
dec
inc
pusha
fistps
push
lea
shll
fwait
sbb
dec
push
dec
or
outsl
popf
rcl
and
lret
sub
inc
dec
sub
jbe
adc
xor
xchg
cwtl
pusha
jo
jns
stc
stos
cmp
stc
push
add
cmp
das
push
lods
addb
call
dec
rcrb
adc
std
mov
sbb
cmp
insl
xor
lods
in
or
cmp
push
inc
or
and
rcrb
or
fwait
xchg
xchg
out
cbtw
adc
nop
mov
xor
fisubrs
clc
pop
icebp
mov
jmp
scas
into
lret
divb
jl,pn
ja
mov
pop
sbb
xor
icebp
lcall
adc
lds
jg
cld
icebp
xchg
xchg
out
iret
push
mov
jp
push
sub
imul
jmp
aaa
inc
mov
repnz
fisttps
adc
sbb
push
ja
adc
int
cwtl
mov
fidivs
cs
xchg
rcll
xchg
rcr
pop
jge
jp
out
icebp
fcmovnbe
sbb
xchg
fcmovne
ret
mov
cld
push
cmp
out
mov
lret
dec
shlb
xor
enter
jle
hlt
enter
xchg
xor
leave
mov
pushf
pslld
das
test
mov
mov
fiadds
test
daa
repz
ja
stc
int
xor
aad
xchg
stos
ret
out
push
test
push
pop
jmp
ret
jno
loopne
ljmp
xchg
icebp
cmp
mov
and
push
loope
xchg
cmc
add
popa
pop
lret
pop
iret
stc
sub
mov
daa
mov
popa
daa
hlt
leave
xorb
or
jae
adc
pop
mov
test
sahf
cs
xchg
push
mov
stc
dec
in
test
pop
test
or
les
fisubrl
lock
pop
dec
dec
aas
push
ror
aam
push
push
adc
push
cs
mov
lods
nop
add
mov
pop
mov
jg
push
or
and
lcall
stos
push
push
xchg
cmp
pop
push
sub
dec
jae
sub
xor
sahf
js
adc
sbb
mov
movups
cmpsl
je
jmp
mov
call
or
mov
mov
dec
arpl
sbb
mov
std
out
paddq
mov
loop
jne
xor
add
lahf
fwait
mov
add
bound
xchg
sub
xor
push
jb
movsb
enter
outsl
mov
sub
daa
fwait
imul
jmp
adc
xor
xchg
mov
dec
sbb
push
inc
xor
sti
mov
stc
jp
cmp
movsb
or
fdivrl
movsb
loope
sbb
lret
adc
xlat
neg
fdivr
mov
bound
andb
sahf
and
adc
pop
xlat
cmpsb
pop
sub
inc
les
push
movb
inc
mov
inc
adc
dec
test
jmp
inc
stos
clc
shll
xchg
sub
jecxz
pop
daa
scas
rorb
jmp
and
sub
mov
add
stc
cwtl
es
outsb
shll
mov
mov
outsl
push
sarb
addr16
lcall
gs
inc
data16
or
aad
xor
repnz
mov
mov
fucomip
mov
pop
loopne
scas
cmpl
enter
push
sub
push
aam
fwait
imul
sub
xor
adc
xor
push
das
mov
in
scas
out
scas
in
pop
clc
sbb
negl
adcb
push
popf
cmp
ret
mulb
filds
lods
cld
repz
out
inc
jnp
rolb
jge
sar
push
js
mov
sbb
lods
movsl
fstpl
dec
inc
push
mov
in
push
jg
xchg
jecxz
or
insb
pop
adc
iret
out
icebp
into
jp
jle
pop
jecxz
in
out
loopne
adcl
mov
dec
pop
xor
inc
sub
cwtl
int
mov
jecxz
aam
or
sbb
loop
dec
clc
pop
andb
cmp
or
ljmp
in
aaa
ljmp
outsb
inc
imul
popa
arpl
out
loope
out
or
pop
outsl
push
cmp
push
repnz
push
and
idivb
fidivl
dec
std
jmp
std
divb
out
andl
pushf
movsl
xor
xchg
fnstenv
dec
push
out
xchg
xor
imul
add
ljmp
ret
sbb
xor
orb
mov
mov
cmpsb
pop
rcl
mov
mov
rdpmc
add
inc
push
jmp
adc
inc
popa
or
jo
aas
cmp
icebp
or
adcl
add
dec
mov
in
xor
and
sbb
fs
inc
push
xor
imul
cmc
pop
push
or
into
push
shrb
sarb
ds
fisubl
push
cs
jp
scas
lock
mov
ja
mov
les
inc
or
pushf
jp
xchg
fcmovnbe
mov
addl
fcomps
or
push
lahf
je
mov
xor
cmp
aam
inc
ficompl
mov
push
sbb
orb
pop
loopne
leave
into
and
shlb
popa
mov
test
and
imul
dec
sarl
push
or
xchg
mov
outsb
mov
repnz
stc
xchg
ja
fisttps
mov
jp
dec
xor
mov
mov
enter
pusha
test
addl
cmp
pop
aad
push
xchg
mov
pop
add
mov
rcrl
sarb
sti
dec
stos
mov
stc
data16
stos
ljmp
push
xchg
add
mov
mov
imul
cmp
adcb
pop
incl
fldcw
test
adcl
xchg
push
pop
or
aad
xchg
or
mov
adc
push
push
cmpsl
dec
inc
enter
jae
rcrb
and
int
push
aad
sub
xor
aas
xor
push
pop
movsl
in
dec
sbb
or
or
xor
dec
mov
jae
rorl
dec
inc
stos
ljmp
test
mov
in
xor
cmp
aaa
out
adcl
adc
repnz
cli
repnz
in
lds
sbb
sbb
out
push
mov
xor
test
dec
dec
aas
xchg
jp
stc
xorb
lret
mov
mov
mov
cmpsl
aam
jl
pop
or
cmp
sub
int
imul
aaa
lret
dec
dec
inc
pop
subb
adc
xchg
xor
ss
addb
insb
cld
mov
pushf
inc
fsubs
gs
inc
loop
or
push
in
inc
fwait
pop
pop
leave
cmp
stos
ror
imul
or
adc
xchg
sub
or
xor
mov
bound
mov
xor
inc
pop
mov
std
sub
inc
jge
mov
mov
int
ret
push
cltd
cmc
repnz
sbb
sbb
add
mov
aas
mov
adcl
dec
loopne
and
mov
jp
add
test
je
scas
pop
add
pusha
out
lret
daa
outsb
ljmp
pusha
cmpsl
inc
scas
popa
cld
jo
sbb
fsubl
jae
bound
notl
fs
pop
mov
add
scas
add
add
or
jecxz
shlb
xchg
inc
ret
lods
pusha
scas
mov
test
lea
cmp
mov
ret
loop
push
and
movsl
and
dec
test
cld
adc
lea
or
notb
mov
ss
mov
daa
cmpl
into
jbe
int
popf
mov
jge
or
mov
add
lds
xor
out
sbb
mov
movb
out
fwait
jl
mov
cmc
popf
scas
cmp
xlat
dec
dec
data16
dec
js
mov
ljmp
mov
jecxz
sbb
fisubs
out
mov
fsubrs
cmp
sub
mov
mov
mov
mov
mov
add
mov
mov
and
adc
jns
or
inc
sbb
dec
add
sub
dec
xchg
call
movsl
jg
inc
jnp
aad
push
dec
push
add
dec
dec
hlt
pop
fimull
fisubl
testb
pushf
xchg
sbb
iret
xorl
inc
fdivl
fadd
cmp
mov
add
and
mov
data16
sarb
enter
mul
adc
call
jo
inc
jecxz
fsubs
test
shrl
dec
and
clc
lea
pop
data16
js
loopne
std
mov
shrb
popa
cmp
cmpsl
icebp
into
xchg
jmp
sub
mov
add
clc
cmc
xor
xchg
jbe
inc
repnz
shl
test
bound
fldenv
push
push
mov
jbe
jmp
mov
fistl
push
inc
testb
jb
mov
into
xor
jl
movsl
orl
or
and
dec
sbb
out
sub
scas
jbe
aas
and
pop
mov
cli
jnp
xchg
cli
in
xor
int3
addr16
sbbb
cltd
int
decl
outsl
push
jl
std
xchg
test
pop
fmuls
lds
rorb
mov
lahf
xchg
pop
sbb
xchg
insb
push
dec
jo
and
pop
sbb
inc
or
mov
test
sahf
test
add
out
lret
frstor
mov
out
es
mov
push
and
mov
orb
bound
inc
call
and
and
test
mov
inc
mov
aad
insb
popa
aad
popf
sbb
lret
popf
lret
dec
and
mov
or
mov
and
jne
cwtl
incb
fcomip
repnz
idiv
test
pop
ds
popf
dec
rclb
loope
adc
bound
int3
jmp
jbe
pop
or
dec
test
add
cli
add
xor
xchg
in
dec
push
sbb
iret
leave
xor
or
jmp
out
mov
lcall
fsubr
mov
bound
dec
dec
ror
mov
cs
std
out
sub
mov
fiadds
mov
shll
sbb
lret
mov
pop
shl
mov
mov
add
mov
xchg
notl
iret
adcl
mov
data16
xor
push
arpl
outsl
and
push
jle
es
out
aas
fwait
cli
jp
add
inc
imul
ret
lahf
mov
pop
mov
or
hlt
inc
fstl
loopne
nop
inc
mov
sub
scas
aas
mov
adc
aas
mov
mov
jp
rcl
sahf
and
and
enter
and
ljmp
shll
mov
mov
leave
mov
gs
mov
imul
inc
lcall
shll
mov
mov
fnstcw
inc
push
add
hlt
fdivrl
xchg
test
jne
inc
xchg
jno
scas
jbe
xchg
jge
imul
stos
cmp
jnp
mov
xor
xor
pop
sub
std
mov
cmp
push
sbb
mov
sub
in
adc
xor
lea
jno
add
notl
adc
into
pop
cmp
dec
lret
aad
loop
pop
out
dec
int3
and
inc
orb
lods
stos
cwtl
add
test
pushf
lea
xchg
in
mov
add
out
out
outsl
fsubrs
or
rcrb
jp
ror
cld
push
mov
mov
popf
or
insb
and
arpl
pop
pop
divb
xchg
adc
cli
cld
dec
daa
adc
fmuls
push
adc
pop
call
pop
push
xorl
push
je
enter
lret
enter
xor
loope
adc
dec
leave
int
lret
push
mov
sub
sub
dec
jo
pusha
dec
sbbb
mov
mov
insl
cs
nop
mov
xchg
push
sub
sub
pop
cmp
js
add
mov
dec
mov
popa
dec
jle
mov
xor
clc
mov
add
jp
andl
or
dec
jecxz
mov
loope
inc
pop
and
loop
xchg
repnz
jp
xchg
cmp
cmpsb
jb
jp
data16
pop
movsb
push
jge
popa
sbb
shlb
xchg
nop
movsl
insl
xchg
fldt
mov
sbb
repz
enter
pop
popf
outsb
and
test
popa
pop
stos
pop
iret
frstor
add
test
xor
call
sub
data16
enter
cmp
testl
cmp
fisttpl
dec
push
xor
mov
jbe
mov
dec
jp
sub
std
add
jle
adc
cs
mov
mov
jno
rcrb
test
scas
add
stos
hlt
dec
mov
inc
fs
or
loope
and
jo
mov
cmc
sbb
mov
dec
add
mov
sub
fmuls
call
stos
add
lret
push
ds
sub
dec
test
fidivrs
dec
nop
push
arpl
mov
mov
lret
hlt
idivl
pusha
imul
jbe
sbb
or
jecxz
imul
mov
lock
es
mov
in
js
xor
cld
pop
cmpb
bound
mov
cs
cwtl
pusha
sbb
mov
push
inc
lock
push
clc
push
sub
mov
add
std
rcrl
das
shrb
xor
movsl
popa
test
aad
pop
push
iret
or
add
das
add
mov
popa
fbld
test
add
out
cmp
clc
lret
and
inc
fsubrl
pop
cmpsl
pop
mov
mov
xchg
sub
xchg
in
jne
add
out
fs
hlt
aas
xchg
or
dec
add
mov
ds
sarl
popa
xchg
test
in
add
out
sbb
mov
stos
pop
fstpt
out
or
adc
sub
pop
xor
or
sub
xor
push
mov
xlat
push
test
ja
fisttps
test
push
and
push
js
push
sbb
test
hlt
cmp
jno
and
test
dec
jne
cmp
and
xchg
adc
loope
imul
int
out
aas
addr16
fildll
rcrl
sbbl
fcomip
or
insl
or
add
adc
cwtl
pushf
aaa
jl
push
out
mov
pop
inc
les
data16
cmp
scas
data16
sub
jno
adc
adc
aam
fbstp
nop
inc
xor
andl
fldt
pop
dec
sti
push
mov
fs
dec
lahf
xchg
xlat
adc
or
jns
mov
adc
das
cmovo
and
dec
mov
leave
mov
pop
mov
xor
call
add
xchg
push
pop
sarl
mov
not
jb
jmp
aad
mov
in
pop
inc
inc
adc
and
and
jmp
jecxz
sarb
pusha
pushf
ss
ss
out
inc
mov
dec
inc
mov
inc
mov
fldcw
cwtl
test
test
push
std
js
or
hlt
mov
insb
popa
push
fistpll
pop
cmp
stos
xor
mov
outsb
je
mov
push
clc
je
imul
pop
ljmp
mov
ret
fcoms
xor
stos
punpcklbw
inc
fidivrs
sub
pop
and
jle
stos
xchg
lock
inc
insb
scas
push
lahf
xchg
adc
xchg
sub
bound
mov
mov
inc
jmp
mov
cmp
insb
sub
data16
jne
fnstenv
int3
fwait
sahf
xor
mov
sub
insl
sbb
lret
and
pop
lock
mov
das
call
jnp
mov
outsb
dec
cmp
outsl
mov
pop
sti
mov
dec
lods
push
lock
xor
push
ja
mov
pushf
and
rcll
jae
jae
shrb
inc
imul
lcall
sub
push
mov
leave
ljmp
sbb
popf
xlat
pushf
mov
sub
jns
sbb
out
sbb
leave
or
push
inc
adc
jge,pn
decl
dec
dec
pop
mov
std
dec
mov
mov
int3
sbb
lods
xchg
jae
insb
adc
movsl
rorb
call
sbb
xor
loop
arpl
sub
lods
or
sub
rorb
shl
ret
stos
mov
int
mov
test
hlt
js
mov
mov
ret
rcr
test
cmpsb
enter
stos
xor
aas
and
fadds
les
jg
imulb
in
jo
shl
push
mov
sub
add
sub
or
fprem1
adc
sbb
aas
sub
andb
xor
gs
stos
movsl
add
jnp
das
xor
xchg
pop
repz
mov
cmpsb
mov
lcall
sub
cli
dec
xor
movlps
aas
and
adc
gs
in
aad
xor
sub
mov
mov
jnp
fsubrs
cmp
lock
mov
lods
scas
movsl
pop
pop
lcall
imul
xchg
and
pop
adc
mov
movsl
inc
pop
push
adc
sbb
daa
push
add
stc
mov
fs
mov
into
lret
in
sahf
enter
in
shrl
adc
mov
fwait
jns
nop
xor
sbb
ss
nop
mov
rcl
cmp
cmpsl
in
xlat
and
push
in
ficoml
add
ret
fdivrl
inc
dec
icebp
clc
cmc
jmp
stos
and
push
stos
jns
add
xor
push
adc
test
lret
in
dec
fadds
add
cmc
bound
loopne
lea
xor
lds
inc
cmp
mov
rorl
gs
sbb
jbe
test
sub
xchg
roll
cmp
pushl
xchg
fiaddl
dec
in
xor
in
dec
es
jne
mov
mov
xor
mov
hlt
rcrb
shr
mov
adcb
imul
cs
mov
push
lock
adc
gs
xor
mov
lods
les
fcoml
mov
cmp
xchg
mov
call
pop
cwtl
icebp
add
scas
inc
inc
add
mov
es
shr
jg
popf
dec
mov
lcall
pop
movsl
addr16
dec
or
fists
and
ficomps
mov
cmp
add
add
mov
shl
movb
adc
jl
lret
fwait
mov
gs
test
sub
outsl
loop
dec
mov
orb
mov
mov
andl
xchg
jge
cld
mov
enter
ss
lods
popa
xor
imull
int
add
push
loope
jge
mov
in
shlb
or
sbb
push
pop
js
xlat
add
daa
test
aas
aam
cli
in
xchg
xor
mov
jae
xor
mov
adc
fmuls
fnstenv
sbb
fnstcw
pusha
les
shlb
sbb
outsb
pop
decl
sub
sti
jmp
sahf
test
outsb
aam
in
adc
das
rolb
mov
mov
add
push
lods
lock
mov
test
xchg
mov
jne
imul
add
shr
sbb
push
cmp
stc
dec
jno
loop
sbb
cmpsb
jb
jecxz
push
adc
pop
inc
mov
js
xchg
filds
or
into
push
cld
mov
daa
pop
mov
cmpsb
xorl
sub
inc
sbb
inc
xor
dec
sub
iret
mov
cli
wbinvd
or
pop
inc
imul
shlb
imul
pop
mov
arpl
add
sub
lds
inc
mov
and
rcr
enter
lahf
scas
scas
xor
xchg
movsl
fs
xor
cmp
sar
pushf
mov
or
pop
or
sbb
loop
jmp
mov
inc
sbb
or
aas
mov
or
and
sub
mov
imul
jo
sub
fbld
dec
cmp
loop,pn
mov
mov
lret
repnz
cmp
cld
xchg
mov
or
mov
aam
scas
sbb
inc
cmp
nop
fstps
and
sahf
push
in
clc
test
pop
xlat
pop
push
mov
stos
add
popa
jnp
aas
lds
jns
out
xor
leave
inc
jge
mov
mov
jns
xchg
cmpsb
es
es
out
pop
add
hlt
outsl
shr
fsubl
adc
insb
adc
push
push
dec
fisubrs
popl
movl
in
je
xchg
xchg
inc
adc
and
repnz
cmp
ds
pop
sub
in
xchg
mov
shlb
push
lock
mov
movl
push
jge
enter
mov
mov
mov
sbb
das
dec
test
mov
lock
jb
add
jbe
jne
pop
push
cmp
call
push
inc
ljmp
mov
mov
mov
stos
pusha
daa
mov
cmp
add
mov
shl
xchg
outsb
push
inc
fstl
lret
jmp
call
xor
or
iret
je
dec
pop
lcall
ret
into
imul
fcoms
add
dec
cmp
es
inc
data16
xor
sti
popf
mov
mov
cmp
dec
push
xor
dec
lret
inc
pop
in
negb
inc
lock
xchg
fsubrl
jg
loop
inc
mov
sbb
sbb
mov
fidivs
outsb
gs
loopne
pop
ret
je
cmpsb
push
imul
icebp
jnp
mov
xchg
cmp
movsl
inc
cmp
out
push
sub
ret
mov
out
jnp
inc
divl
add
lods
mov
ja
imul
icebp
rclw
and
nop
cmpb
xchg
popa
scas
pop
adc
jle
loopne
cmp
pop
or
mov
cli
das
mov
lds
bound
imul
pop
out
push
test
jo
sbb
push
xor
inc
mov
test
and
and
add
pop
jb
lcallw
rcrb
pop
jge
je
aas
or
dec
enter
add
fidivrl
loop
xor
filds
ss
mov
mov
pop
js
fmull
mov
stos
adc
sub
push
mov
dec
mov
pminsw
shlb
ljmp
sahf
adc
jg
xchg
add
xor
xor
xchg
jge
icebp
inc
adc
cmpsl
xor
add
and
ret
loope
dec
pop
jno
mov
mov
stos
fidivrs
ret
and
mull
and
push
and
es
cli
out
sub
jbe
and
lock
sub
jg
push
xchg
sbb
fwait
pop
pop
push
add
pop
xor
sbb
mov
or
pop
xchg
sti
jg
mov
aas
adc
jecxz
and
cmp
fdivl
mov
add
xchg
fcmovb
and
mov
jge
test
mov
hlt
mov
rcrl
loope
inc
cltd
cld
xor
out
int
orb
adc
dec
mov
push
mov
sub
sbb
outsl
lret
pusha
and
scas
fisttpl
add
lock
or
adc
lahf
enter
cmp
bound
mov
adc
mov
push
dec
pop
lock
sarl
cwtl
xchg
inc
fs
inc
and
xchg
enter
scas
cld
add
fsts
sarl
std
lods
ljmp
jp
jg
mov
loopne
sub
test
dec
fs
mov
fcmovnbe
sbb
jne
mov
sub
inc
add
sub
testb
xchg
orl
inc
inc
xchg
daa
ds
rol
fwait
aam
adc
adc
sub
aas
loop
push
sahf
test
push
mov
leave
sbb
add
or
inc
fwait
inc
out
rol
pop
repz
cld
add
push
lret
adc
adc
test
roll
inc
aad
aad
aaa
add
inc
dec
test
mov
loopne
xchg
add
pop
jno
pushf
fisubrs
sbb
ljmp
pusha
xchg
mov
shlb
fadd
mov
ja
test
pop
mov
adc
cmpsb
xor
gs
movsl
mov
sub
push
aas
jmp
and
or
or
cmc
push
xlat
dec
sahf
sbb
out
lret
popf
lcall
push
popf
ret
gs
pop
nop
pop
ss
mov
clc
sbb
dec
jne
xlat
add
add
cwtl
dec
xchg
ljmp
and
enter
and
les
jg
pop
or
repz
scas
fistpll
pusha
pop
sarb
or
sub
add
add
dec
lret
or
xchg
aas
divb
xchg
ds
sub
scas
and
stc
xchg
add
insl
sub
hlt
scas
jle
rclb
stos
mov
sub
jbe
xor
jbe
lcall
loop
nop
lea
xor
lock
dec
cmp
cmp
lea
cmpsl
mov
mov
cmp
inc
fimuls
jo
insb
fsubrs
out
mov
lret
pop
push
pop
fs
lods
xchg
shlb
mov
fprem
lcall
iret
scas
jno
pop
mov
push
fadds
jae
das
or
or
in
lret
das
addb
mov
and
inc
mov
sub
aam
decl
push
xchg
mov
lcall
shll
aas
cmp
repnz
jne
xchg
mov
cs
popf
loope
xchg
jb
adc
int
xchg
iret
and
mov
mov
push
xchg
into
daa
scas
cmp
std
je
clc
fstpl
xchg
movsl
shrb
fadds
mov
data16
xor
and
enter
inc
push
ljmp
adc
jbe
mov
sub
lcall
imul
dec
push
xchg
sub
loopne
xlat
dec
cltd
pop
hlt
test
out
loope
movsl
and
ja
das
xchg
adc
push
mov
lods
pop
or
cwtl
or
push
xor
cmc
daa
add
in
in
orb
add
inc
daa
andb
jb
rorb
out
lcall
mov
std
leave
repz
jb
lcall
mov
cld
xor
sub
ret
fidivl
or
popa
cmpsl
divl
push
bound
shl
imul
test
lods
mov
into
pop
adc
into
int
lret
das
popf
gs
pop
outsl
cmp
cmpsb
lret
or
mov
test
in
pop
popa
cmpsb
push
mov
push
std
in
ljmp
loopne
fstps
dec
imul
pop
xchg
and
adcb
mov
lahf
je
mov
aam
jge
outsb
sub
mov
jmp
test
outsb
in
xchg
push
and
scas
inc
lahf
xor
lret
dec
test
popa
jl
mov
xor
pop
scas
call
adc
pop
les
mov
add
repz
out
jp
mov
nop
call
dec
jg
mov
in
sub
popa
dec
xlat
sbb
xor
lea
lret
addl
xor
in
jle
add
mov
jno
fcmovne
inc
add
gs
jg
imul
dec
lret
jae
and
repnz
xchg
sti
mov
lret
pop
cltd
xchg
jecxz
pop
fstl
mov
pop
jne
mov
aas
cmc
scas
and
mov
loope
rcrb
pop
sub
cld
aas
mov
ss
dec
inc
jnp
int3
push
lock
xchg
mov
sbb
and
xor
and
mov
jge
jmp
aam
cmc
inc
sub
fcmovb
sub
loopne
mov
mov
push
daa
aad
arpl
dec
jg
test
and
mov
data16
aam
jg
dec
iret
insl
enter
dec
mov
fstpt
mov
sub
jo
test
dec
add
lods
cmp
lock
js
dec
rclb
leave
cmp
and
repz
inc
popf
lret
push
jmp
or
hlt
mov
inc
and
les
es
sub
ljmp
pop
arpl
pop
xchg
subb
cmp
sbb
adc
movsb
ret
cmp
push
adc
cmp
dec
shll
inc
je
fsub
out
xor
lock
xchg
std
jg
sub
mov
repz
pop
xchg
pushfw
inc
hlt
push
cmp
xor
adc
adcl
ja
cmp
mov
cmp
mov
xor
and
add
and
aas
into
mov
adc
loopne
xchg
pop
fstps
inc
sbb
sub
sbb
cmp
pop
pop
test
fidivl
int3
dec
call
test
psadbw
push
lds
xchg
mov
leave
aam
mov
mov
push
xor
xor
sub
dec
mov
sub
mov
or
jp
push
jle
shr
jl
test
outsw
sub
mov
aad
xor
push
scas
xchg
mov
dec
xor
ret
mov
pop
out
adc
popa
and
movsl
mov
cmovl
pop
inc
nop
mov
adc
adcb
lcall
fs
lret
add
adcl
adc
fistpl
cwtl
jo
hlt
lock
jp
addb
and
lret
cmpsl
fcmovne
mov
inc
inc
scas
test
inc
pop
dec
jl
mov
test
jno
mov
and
ret
pop
or
pop
pop
std
jecxz
sahf
and
pextrw
sbb
movsb
das
pop
and
shr
pusha
aas
and
clc
push
mov
cmp
popf
pushf
mov
or
push
push
call
and
xchg
out
xor
cmp
or
icebp
int
cltd
and
aaa
cmp
in
das
daa
pop
out
push
xchg
int3
sub
es
push
fs
jle
sbb
xchg
lret
adc
cmp
mov
imul
rcrl
aaa
in
mov
in
cmpsl
rcl
lods
cltd
scas
call
xchg
sub
add
pop
sarl
inc
jmp
and
in
jecxz
mov
in
push
mov
icebp
xchg
in
mov
or
sahf
icebp
jge
das
push
iret
insl
push
in
cwtl
pop
or
mov
sub
sahf
gs
mov
insb
mov
aad
cmp
aad
stos
adc
inc
or
mov
push
xor
push
addr16
sti
xchg
fnstsw
dec
cmp
cmp
es
mov
cmp
lret
jle
iret
aam
jg
leave
sbb
les
inc
test
ljmp
stos
lods
ja
pop
loopne
in
mov
adc
in
mov
lcall
subb
rorl
ljmp
jns
jle
pop
sbb
mov
test
jg
movsl
bound
cld
pop
leave
pusha
jge
lret
mov
jl
cmpl
stc
in
jne
inc
les
call
xchg
sub
cwtl
cmp
out
mov
adc
lcall
xlat
jbe
mov
cmp
jecxz
or
arpl
jge
movsl
xchg
loopne
ja
lock
cmc
xchg
xor
das
fs
imul
push
or
jmp
popa
adc
or
pop
gs
jge
fadds
les
test
or
fwait
cmp
cs
shlb
in
cmp
stc
je
cmpsb
pusha
sbb
icebp
pop
into
and
mov
inc
xchg
int
or
out
lcall
test
mov
in
mov
shll
dec
sub
insl
pop
subb
out
push
sarl
jo
fsubs
jno
add
out
je
imul
jle
in
mov
rorb
xchg
stos
and
push
dec
jae
jp
jmp
add
sarb
add
adc
and
jle
jbe
mov
pop
xrelease
xchg
pop
out
lds
stos
add
scas
jmp
mov
mov
and
xlat
je
sub
cmpsl
lret
rcrl
movsb
out
fcomps
adc
lea
ss
ffreep
int
loopne
dec
push
jle
lret
push
fbstp
dec
into
es
mov
jo
mov
or
shlb
iret
fldcw
mov
scas
shlb
mov
ja
and
clc
in
jmp
cmp
inc
jbe
jge
or
pop
scas
out
add
fidivrs
sbb
push
mov
pop
fldcw
scas
cmp
lods
sbb
mov
lea
push
xchg
and
inc
and
call
or
mov
jg
iret
and
push
call
mov
aas
add
jno
test
mov
rcl
xchg
or
push
fistps
dec
call
mov
insl
in
push
push
jo
test
mov
fnstcw
jnp
mov
in
adcl
xchg
lds
mov
or
leave
pop
aas
dec
dec
xor
dec
xor
cmpl
outsb
xchg
out
jecxz
leave
dec
ss
pop
stc
lea
shrb
sbb
and
testb
add
mov
movsb
dec
sub
imul
mov
push
test
cs
lret
cmp
and
stos
and
inc
pop
cmp
cli
push
inc
mov
jecxz
xchg
jge
data16
and
out
pushf
test
add
and
insb
imull
rolb
push
aam
push
push
in
cmp
jp
and
sub
imul
and
jns
mov
daa
repz
pop
and
int
fildl
shll
mov
gs
cmpl
test
mov
and
pop
test
mov
add
sbb
mov
loope
inc
subb
subps
adc
fisttpl
sbb
das
mov
fnstenv
or
jmp
cmp
les
xchg
cmp
or
out
or
int
arpl
jnp
out
push
enter
and
ljmp
fwait
lods
mov
jo
fcmovnb
jp
iret
addb
jle
xlat
mov
cmpsb
dec
and
inc
and
dec
rorl
jle
subl
insb
mov
inc
enter
xchg
ljmp
inc
push
dec
leave
add
ret
call
cmp
push
mov
fmull
pop
push
push
mov
push
push
stos
movsl
repz
jnp
sbb
sahf
daa
repz
mov
and
sahf
int3
daa
pop
push
jp
push
daa
lret
sarl
loop
movsl
pop
push
fs
jnp
xor
push
mov
and
out
mov
mov
fwait
out
cmpsl
subb
mov
lret
push
dec
mov
push
mov
pop
aad
pop
cmp
pop
inc
xor
pop
pop
fdivrs
lret
xor
das
scas
pop
cmpsb
dec
fs
jl
popf
in
dec
xchg
and
jl
push
xchg
push
sti
cmp
out
ljmp
pushf
scas
ficoms
lret
cltd
mov
lret
xor
sub
mov
pop
mov
cmp
add
mov
cmp
in
or
je
test
xor
or
int3
inc
pusha
pop
nop
push
push
addl
and
inc
cmp
arpl
adc
sub
mov
arpl
cmpsb
xlat
lret
jmp
ja
outsb
dec
insb
jp
movsb
pop
lret
mov
jno
pop
jne
cmpsb
mov
inc
cmc
or
jns
negb
jle
aam
psubd
ja
andb
and
bound
shll
mov
or
pop
jmp
or
inc
imul
push
jbe
outsb
fdivs
lods
orb
mov
call
sbbb
sub
mov
adc
inc
xchg
sbb
test
add
add
test
pop
jecxz
fs
cmpsb
je
pop
adc
andl
push
out
pop
repz
xor
push
xchg
pop
out
jbe
ficoms
lcall
ljmp
xchg
out
mov
ret
loope
inc
call
mov
inc
in
xor
mov
sar
cmp
add
push
add
je
push
mov
cmovb
add
loope
xchg
xor
int3
cmp
shlb
lods
mov
and
push
add
stos
xor
int
jne
insl
xchg
outsl
mov
cmpsb
cmc
cli
stos
out
test
movsl
mov
fstpl
jb
cli
xchg
sbb
and
aam
cmp
lea
in
and
sub
jae
ja
rcrb
jmp
lahf
orl
mov
sbb
mov
mov
or
insb
imul
adc
mov
dec
push
loopne
inc
cmp
jle
mov
jbe
das
lcall
insl
jle
mov
cmc
inc
push
iret
jno
cmc
mov
aas
js
add
add
jge
lret
je
or
inc
adc
movsb
xchg
pop
jmp
push
shl
mov
repnz
cmp
bound
das
loope
aas
inc
into
jae
mov
test
loope
loop
loop
shr
and
ds
into
jle
cmp
mov
cltd
mov
xor
cmp
xchg
imul
lea
sti
ljmp
sub
mov
push
es
or
xchg
adc
pop
aaa
adc
fsts
icebp
push
in
stc
jns
test
xor
jnp
or
fcmovu
bound
inc
sti
call
sub
stos
xor
add
mov
add
mov
stos
jno
into
add
lret
xor
fcmovb
repnz
xchg
sub
lods
cmpsb
adc
xchg
xor
or
pop
sbb
mov
notb
lods
xor
sub
ror
and
popf
cs
dec
aad
test
aad
push
lea
mov
fsubrs
jmp
adc
or
jg
in
loope
stc
enter
aaa
jp
lods
jbe
pop
fldl
imul
inc
adc
push
xor
sub
inc
outsb
and
insb
fmul
cmp
gs
jbe
inc
adc
cmp
pop
rcrb
cmc
daa
mov
enter
jmp
test
ret
cmp
lcall
ret
call
jl
ret
popf
sbb
mov
mov
sub
cli
xchg
push
pop
mov
lds
fists
and
lret
mov
adc
add
dec
xchg
psubb
frstor
enter
xor
shlb
leave
pop
or
dec
sub
dec
sub
jmp
dec
leave
lcall
push
cmp
aam
xchg
pop
int3
rcr
adc
xlat
add
push
mov
cmp
jo
insb
pop
repnz
mov
loope
hlt
lods
xchg
out
cld
arpl
xlat
in
jl
nop
mov
in
lea
insl
adc
push
outsl
in
mov
mulb
push
add
addb
sbb
and
inc
into
test
ret
push
fisttps
loope
ljmp
xor
or
mov
pop
inc
mov
mov
sub
jne
xor
call
jl
pop
add
aam
loope
and
dec
int
divb
and
ja
in
adc
sbb
jbe
dec
mov
stos
das
je
mov
mov
cmpsb
mov
inc
gs
mov
pushl
imul
xchg
xor
push
cs
sub
sbb
outsb
jmp
lock
lahf
lahf
xchg
xchg
pop
mov
mov
pop
popa
lock
inc
daa
sub
das
fistps
ret
aad
adc
std
fstpt
xchg
cmpsb
fdiv
push
mov
mov
mov
push
rcrl
aam
mov
mov
jo
outsb
xor
push
push
mov
jmp
out
mov
fs
ret
rcrb
movsb
and
jg
je
arpl
mov
das
mov
rclb
mov
aaa
xchg
mov
lea
rorl
sbb
cmp
clc
popa
je
cld
std
fmulp
xchg
push
xchg
imul
mov
stos
stos
cltd
mov
push
dec
out
inc
mov
cmp
xor
mov
add
mov
adc
outsl
shll
sbb
test
pop
mov
mov
mov
jg
sub
test
lahf
arpl
add
ds
fwait
insb
sub
inc
sarb
ja
push
sub
adc
lahf
aas
imul
push
cwtl
mov
xchg
imul
js
call
or
push
push
dec
adc
dec
cmpsl
arpl
jae
sbb
es
inc
mov
mov
sub
in
dec
mov
cmp
and
out
sub
aad
clc
fs
push
repz
dec
and
daa
js
jb
jns
bound
jmp
xchg
stos
push
lcall
dec
push
pop
addr16
jp
lret
adc
push
add
pushf
orl
xor
fists
pop
mov
test
mov
mov
rcrb
push
pop
test
mov
cmpsb
adc
xor
ja
jo
inc
lret
fs
fs
insb
push
lret
xchg
mov
adc
cmp
pop
shlb
or
add
xchg
pop
or
inc
movsl
dec
lahf
rcr
sub
mov
in
jmp
and
test
and
add
jae
cmp
push
out
push
cs
jmp
in
ja
push
lea
add
ret
cli
das
push
data16
call
std
scas
fbld
bnd
push
mov
adc
or
mov
jo
into
lahf
or
add
bound
adc
out
xlat
imul
dec
rorl
cmp
xchg
dec
pop
das
repz
or
popf
inc
testb
addr16
sbb
adcl
mov
xchg
mov
sub
sub
cmp
pop
scas
push
lret
jecxz
frstor
mov
ret
fcmovb
movsb
adc
cmp
fdiv
cmc
jnp
xchg
shr
push
inc
sbb
repz
sti
cli
ret
shll
inc
test
gs
mov
addr16
sbb
fld
xlat
rorl
cs
rclb
pop
mov
sub
jp
or
stos
clc
cltd
nop
stc
pop
ret
lcall
jmp
push
or
or
mov
sub
or
xor
mov
jnp
jbe
ret
cmpb
add
gs
addb
ja
lock
or
data16
sbb
push
test
imul
insb
dec
insb
stos
sub
cmp
mul
pop
xorb
punpckhwd
jmp
jecxz
push
cwtl
sbb
sbb
cmp
out
cltd
fs
push
xchg
fdiv
movnti
testb
inc
mov
imul
sub
dec
mov
dec
pushf
or
pop
xchg
adc
in
das
jb
addb
fldcw
gs
jle
pushf
dec
or
push
sub
mov
adc
push
and
sub
jmp
push
popf
dec
pop
out
pop
in
cmp
pop
mov
movsl
scas
mov
push
pop
pop
mov
push
movsl
xchg
cmp
addb
lock
lret
cmp
movsl
imul
xor
in
pop
sub
mov
push
es
in
outsl
enter
mov
mov
aas
call
jae
jle
popa
or
sti
test
fisubl
and
lods
aad
push
outsb
adc
idivb
pop
adc
and
rclb
jecxz
cmpsl
aas
fnstenv
fbstp
sti
lock
je
mov
xchg
sub
ja
jbe
push
inc
jecxz
push
or
fiaddl
scas
jle
ret
and
add
lods
ja
mov
mov
and
mov
aad
mov
cmpsb
sahf
psrlw
add
outsl
dec
aas
enter
sbb
mov
out
sbb
in
ljmp
jmp
pop
nop
xchg
mov
rol
sub
xchg
daa
add
outsb
js
mov
popa
or
dec
test
cld
popa
pop
insl
les
icebp
sub
or
and
xchg
sub
and
jne
es
push
aaa
aam
sub
fwait
les
push
test
mov
jp
cli
sbb
stos
pushl
cmp
add
mov
inc
sbbb
push
in
sbb
and
sub
push
mov
int3
xchg
popf
out
aad
push
sti
inc
out
adc
mov
daa
cwtl
popa
mov
and
adc
pop
ret
ret
popl
mov
fisubs
jle
jo
frstor
xchg
inc
loop
test
adc
inc
xor
sarb
bound
xchg
jnp
cwtl
sti
pop
jp
sbb
repnz
test
icebp
adc
push
dec
ds
mov
adc
data16
sbb
dec
xchg
cmc
out
loop
pop
scas
jbe
pop
dec
pop
inc
jge
incl
ret
xor
lea
das
sbb
xchg
sbb
mov
sub
imul
adc
push
ret
shlb
cld
cmp
sbbl
aam
mov
les
dec
xchg
and
sarl
push
push
les
inc
cltd
int3
clc
jp
repnz
mov
cli
icebp
sub
cmpsb
push
in
mov
add
pop
dec
dec
in
mov
sub
push
arpl
repz
jnp
add
and
mov
mov
jo
jle
mov
ss
mov
popa
stos
incb
sbb
cmp
insb
mov
movb
jmp
movl
xchg
enter
data16
cmp
mov
adc
ds
or
jns
pop
adc
dec
add
mov
sub
mov
or
lods
ds
sbb
add
xchg
xor
dec
lahf
xor
test
or
adc
and
in
xor
pop
xchg
fcomip
into
fmuls
mov
pop
and
mov
adc
scas
mov
and
mov
push
cmp
sbbb
iret
xchg
jno
hlt
repnz
push
fcomp
lds
mov
dec
out
mov
mov
push
sub
lock
mov
pop
leave
push
inc
ss
mov
mulb
es
jmp
sbb
stos
das
xchg
sbb
scas
fidivrl
cmp
cmpsb
adc
popf
into
nop
fucomp
cmp
xchg
notl
jb
mov
sub
jns
xor
jecxz
gs
rcll
mov
std
adc
mov
mov
jp
daa
test
mov
or
jge
int3
pop
push
lcall
fstpt
cmp
pop
and
xor
add
pop
scas
xor
imul
fdivs
jecxz
dec
dec
xor
jne
xor
jb
adc
mov
in
add
cmp
inc
orb
js
stos
or
xchg
jecxz
pop
cmp
jbe
lret
mov
and
lcall
jnp
mov
fdivrs
jns
jecxz
mov
push
mov
mov
inc
inc
daa
movsl
je
pop
mov
adc
mov
mov
lock
mul
xchg
into
sub
xchg
inc
loope
and
fbld
leave
clc
push
or
xlat
mov
lock
jl
sahf
and
iret
fs
sub
mov
add
jnp
xchg
xorb
pop
mov
jae
jno
sbb
adc
dec
add
js
ljmp
add
push
ds
sahf
jg
push
jb
or
in
push
push
mov
cld
popa
dec
data16
pop
adc
into
xchg
lods
repnz
push
add
mov
es
mov
out
sub
push
cmp
xor
lods
mov
pop
outsb
add
push
jbe
ljmp
sbb
ret
pop
loopne
dec
cmc
sub
test
into
jle
inc
int3
sbb
pop
clc
out
fcoml
pop
jecxz
sti
cwtl
push
testl
leave
jl
neg
in
repnz
fcmovb
mov
cld
out
movsl
dec
test
nop
jne
mov
loop
ret
or
or
iret
or
xchg
mov
lds
icebp
adc
negb
repz
xlat
roll
sbb
adc
imul
sub
jne
mov
xchg
and
add
mov
mov
xorb
dec
cmc
aad
mov
ret
mov
insl
xchg
jo
push
jo
es
lahf
add
arpl
or
outsb
es
insl
jne
mov
lret
aad
jns
sbb
adc
or
faddp
ret
cld
push
outsb
lds
pop
mov
mov
jnp
sbb
call
mov
cmc
mov
sub
xor
aam
imul
loop
sbb
dec
ret
fcmovnbe
push
shrl
fcmove
jmp
movsb
in
sbb
dec
into
shll
cmpsb
mov
jnp
in
fisubrs
andl
pop
stos
mov
lods
mov
into
jne
int3
idivl
in
scas
test
popa
mov
inc
shlb
cmpsl
dec
cld
adc
add
in
js
out
xchg
push
or
lcall
adc
pop
fs
mov
jg
xchg
push
push
sub
in
fnstenv
mov
fisubs
test
aaa
int
movsl
negl
push
bound
popa
out
jne
xor
inc
cltd
mov
daa
mov
negl
cli
in
and
pusha
int
sbb
les
xchg
jns
jae
push
pop
out
mov
loop
aam
outsl
and
xor
les
sbb
scas
lret
mov
addb
adc
std
inc
mov
pushf
or
mov
xor
add
cs
or
mov
push
aaa
add
out
adc
sbb
pop
fwait
mov
pop
iret
lods
ljmp
mov
lret
arpl
cmpsb
shrb
and
xchg
adcb
add
xchg
imul
arpl
cmpsl
mov
notl
das
int3
and
jl
les
lcall
sbb
inc
cmc
arpl
addr16
mov
adc
mov
dec
in
jmp
cmpsl
insb
imul
cmpsl
xor
adc
sbb
outsb
cltd
vsqrtpd
ret
or
sbb
or
clc
leave
aam
push
gs
into
sub
setns
inc
mov
push
movb
mov
das
adcl
xor
inc
int3
aas
ret
inc
push
lds
and
shlb
push
pushf
pop
jbe
adc
mov
xorps
jge
jecxz
mov
shrl
repnz
adc
jmp
sarl
push
and
mov
dec
fisttpl
add
aam
lock
insb
push
loope
xchg
and
loopne
shrb
out
xchg
mov
lea
shll
pop
ret
sbb
mov
enter
adc
sub
jno
cltd
cwtl
jnp
pop
loop
ret
lret
stc
repz
mov
push
jmp
into
xor
fisttps
shll
mov
pushf
stos
mov
pushf
sbbl
mov
jae
jne
adc
sub
loopne
mov
roll
add
sub
movsb
inc
sub
dec
or
jb
jbe
aaa
mov
inc
stc
ss
mov
xchg
xorb
and
lds
cli
add
jle
sarb
in
fsubrl
mov
mov
cmp
pop
mov
loopne
mov
outsb
or
and
cmp
and
push
cwtl
lock
fs
mov
pop
jmp
xchg
jns
mov
inc
fsubl
and
mov
xor
jns,pt
push
dec
mov
neg
je
mov
sti
mov
int3
cmp
ljmp
adcl
push
mov
cmp
scas
pop
mov
lret
or
xchg
add
pop
xlat
sti
mov
cmp
jl
sub
lock
cmp
pop
inc
mov
ljmp
pop
call
js
bound
jb
ret
xchg
sub
pop
and
pop
jmp
xchg
inc
jae
testb
in
ss
sbb
subl
or
jns
sub
je
int3
xchg
mov
std
jp
dec
mov
dec
mov
iret
dec
mov
lods
push
lcall
mov
cmp
data16
add
loopne
xchg
or
scas
inc
xor
pop
aad
aad
dec
lds
sub
pop
stc
stos
cwtl
xchg
cmp
popf
inc
pop
adcl
or
rcll
sbb
jns
pusha
and
mov
and
iret
mov
fcoml
pop
pop
xchg
stos
scas
test
pusha
out
or
fadds
lods
push
or
mov
pop
jns
mov
add
or
hlt
lahf
int
sub
pop
xor
xchg
sbb
and
lret
popf
out
push
scas
data16
rcll
js
in
sub
outsb
mov
jmp
scas
dec
fildl
lcall
fs
scas
mov
inc
into
in
neg
pop
test
cltd
mov
mov
jg
ja
lret
cmp
cmc
or
mov
cmp
rclb
outsb
xor
pusha
ja
stc
push
add
push
pop
shlb
lds
lahf
lcall
repz
mov
loop
mulb
out
cmp
mov
mov
mov
and
push
pop
in
jg
stos
ds
adc
sbb
inc
shr
pop
or
andl
call
cmp
shlb
into
cwtl
adc
daa
popa
or
push
inc
push
add
inc
lcall
jl
and
pop
pop
cmc
sahf
add
mov
adcl
addr16
scas
add
add
dec
movsl
stos
mov
cmp
mov
int3
push
fmuls
add
add
aas
sbb
in
adc
stos
inc
in
in
lahf
dec
pop
jl
orl
sub
xchg
out
xchg
mov
xchg
insl
push
subb
xchg
loopne
in
jp
pusha
dec
pop
std
mov
xor
mov
iret
scas
xor
test
je
lcall
or
adc
jle
mov
stos
pop
add
xchg
jb
hlt
mov
or
lods
mov
ret
pop
xlat
frstor
or
out
xchg
aaa
adc
les
mov
clc
push
push
stc
hlt
xor
xchg
lcall
loopne
imul
fistpl
mov
lock
cmp
cmpsb
mov
pop
mov
pusha
jmp
jns
or
cmp
cmp
mov
jg
mov
mov
inc
cmpsl
cmp
push
xchg
add
out
jne
inc
xor
movsl
mov
jno
mov
xchg
pop
mov
imul
in
or
sub
cmpsl
lods
xor
das
sbb
insl
sub
inc
push
xorb
mov
movsl
fdivr
sub
fisttpl
mov
mov
das
js
mov
xor
rcll
into
sti
xor
sub
rcll
push
pop
out
mov
test
std
jae
push
push
in
push
stos
xchg
js
sub
jne
ljmp
inc
mov
mov
sti
je
loopne
insl
imul
inc
xchg
lahf
fprem
push
mov
xchg
cwtl
cmp
roll
inc
pusha
aad
data16
mov
add
into
inc
loopne
pushf
mov
addb
jecxz
in
xchg
cmpsb
arpl
je
push
sub
pusha
push
cmp
xchg
sub
rcrb
sbb
push
fistpl
inc
sub
iret
cli
push
xchg
stos
ret
in
add
pop
push
cltd
jge
xor
addr16
jmp
push
shrb
arpl
imul
mov
mov
mov
daa
adc
icebp
maxps
idivb
dec
fildll
aas
cld
add
cmp
out
jge
mov
xor
orl
mov
xchg
call
sti
add
cmpsl
push
in
inc
scas
xor
inc
lahf
fdivr
rolb
cmc
in
adc
test
jb
inc
cmpsl
das
mov
loope
sbb
or
sahf
pop
out
mov
lcall
jb
cld
cmp
cmpsb
mov
sbb
xchg
cmp
mov
je
push
sti
dec
fsubr
test
inc
xchg
push
mov
lods
into
sub
mov
loop
cwtl
dec
fwait
mov
sub
fs
int
daa
cmp
pop
jne
dec
rcrb
jb
mov
sbb
lods
fcmovu
mov
loop
xchg
iret
hlt
stos
jae,pt
mov
xchg
dec
sbb
pop
dec
outsl
divb
hlt
adc
in
pop
cmp
mov
and
jecxz
shll
push
setg
lcall
clc
sbb
mov
add
mov
addr16
sbb
push
push
rol
mov
loope
and
or
sti
sub
hlt
dec
int
ljmp
cmp
xchg
aas
sti
jae
inc
cmp
repnz
and
or
pusha
jp
mov
or
inc
jle
lret
movsl
mov
push
jmp
pop
in
pusha
mov
popf
mov
add
shlb
jne
adc
jmp
into
pop
fs
enter
shl
inc
adc
adc
andl
dec
xor
lods
mov
dec
and
sub
mov
movsl
mov
sahf
shrl
push
jno
mov
int3
insl
sub
addb
jge
mov
push
pusha
insb
divb
pop
cmp
movsb
std
mov
add
lods
aas
fisubrs
int
inc
inc
cmp
ja
imul
outsl
cmp
xchg
call
xchg
fiadds
xchg
movsl
aas
stc
sbb
sbb
outsl
push
mov
adc
shrd
or
push
out
cmp
test
imul
pushl
jb
call
fsubs
pop
push
pop
ljmp
std
lcall
dec
add
shll
outsb
int
sub
mov
int3
mov
or
insb
pop
mov
dec
nop
hlt
ss
push
insl
dec
insl
mov
sbb
fs
xor
adc
sub
push
into
mov
mov
push
xor
push
daa
inc
mov
lcall
clc
push
in
pusha
push
fistpll
mov
movsb
andb
sahf
inc
mov
xchg
sbb
mov
jecxz
mov
add
xchg
loopne
cmp
inc
sbb
pop
jno
in
lock
jns
icebp
cmpsb
in
mov
gs
pop
es
mov
popa
and
pop
xor
shlb
inc
pop
sbb
mov
stc
cwtl
pop
ja
je
and
xor
ret
fwait
sbb
sbb
lahf
iret
sbbl
movl
dec
xchg
out
and
lret
rolb
sahf
push
xor
adc
or
gs
pop
seta
sbb
push
in
push
jge
std
mov
or
shrl
jge
jb
les
or
ror
jle
push
cmpsb
inc
rorl
push
or
lahf
pop
xchg
adc
pop
jecxz
cli
inc
aam
inc
add
aad
jle,pt
lock
mov
lods
sbb
movsb
lret
adc
jmp
sbb
adc
shll
jmp
xchg
inc
dec
xlat
loope
data16
mov
and
nop
cli
pop
and
outsl
or
lds
decl
or
cltd
jne
mul
cmp
fsub
jns
mov
jge
call
cmp
mov
in
xor
cld
push
xchg
and
ret
pop
mov
movsb
mov
adc
push
or
fs
cmp
movsl
and
sbb
lahf
daa
outsb
sbb
loope
fsubl
imul
sub
imul
xlat
inc
inc
push
jg
cmp
jmp
ss
jno
inc
or
imul
nop
or
js
xchg
xchg
outsb
fisubrs
in
push
jle
mov
mov
and
leave
sbb
push
imul
jo
jnp
aad
pop
pop
andl
repnz
aas
sub
cltd
fistl
stos
dec
fiadds
adc
das
iret
js
push
shrb
mov
pop
ret
pop
jmp
jmp
cs
test
loope
and
in
jmp
and
push
jle
mov
push
jb
xor
out
xchg
mov
cwtl
adc
popa
imul
lret
mov
cmp
lahf
cmp
fldt
adc
mov
scas
ja
inc
and
pop
ds
fisubs
dec
iret
loopne
data16
pop
dec
rcrb
repnz
cs
xchg
popf
aam
dec
mov
cmc
mov
inc
xchg
push
cld
inc
data16
cld
loop
mov
insb
cmpsl
jmp
cmp
adc
or
adc
and
xchg
pop
push
cmp
cmc
sbb
cmp
fstl
iret
in
jnp
xor
mov
push
jmp
push
hlt
xchg
add
push
icebp
mov
xor
fnstcw
add
inc
std
jmp
scas
lods
sbb
mov
mov
aam
das
test
mov
jecxz
mov
sbb
adc
test
push
and
or
test
aaa
xchg
insl
icebp
adc
push
cld
adcb
or
mov
fidivrl
sub
mov
pop
cmp
adc
sub
test
xor
cmp
mov
jge
int
call
jns
sti
inc
imul
jb
add
aam
or
pop
inc
outsl
sbb
loope
adc
push
popf
and
scas
pop
bound
inc
pop
nop
cmc
es
popf
sbb
arpl
push
adc
sahf
dec
pop
and
aas
xor
sbb
das
xchg
arpl
push
popa
lock
add
shll
and
mov
scas
mov
push
or
arpl
push
xor
lods
into
lods
subb
mov
pusha
cs
fldenv
les
in
pop
sub
mov
cmp
cmp
popf
mov
testb
add
sub
addb
add
cltd
cmpsl
push
shrb
lahf
pusha
pusha
std
dec
in
xchg
sbb
out
cltd
cltd
lods
push
lahf
xor
sbbb
test
inc
pop
dec
adc
cwtl
dec
aam
cmp
inc
test
pop
jbe
pop
or
std
pop
mov
jp
faddl
je
jl
cltd
push
test
mov
loope
sub
and
data16
pop
fadds
mov
pusha
mov
mov
or
push
mov
dec
dec
push
pop
mov
test
pusha
imul
cmp
sbb
mov
je
jne
gs
sar
nop
adc
arpl
imul
xchg
inc
std
mov
je
inc
mov
or
inc
xor
ja
js
pop
je
in
movsl
cmp
lret
cli
fcomps
dec
in
test
push
dec
dec
jge
mov
nop
clc
push
pop
add
mov
mov
or
push
clc
push
in
lcall
pop
or
inc
xchg
inc
dec
push
jecxz
gs
notl
adcl
push
jl
imul
push
iret
push
push
push
popa
mov
pop
mov
movsl
jmp
and
repz
pusha
pop
jo
push
push
enter
mov
arpl
test
loopne
repnz
xor
outsb
xchg
cmpl
adc
ret
rsqrtps
jp
fbstp
xor
outsl
and
pop
add
xchg
pop
inc
loope
jbe
insb
imul
xor
aam
xor
sbb
or
sbb
inc
sub
mov
in
inc
mov
fisubs
inc
das
lahf
sub
xor
cmp
movsl
andnps
mov
test
and
lahf
jb
xchg
push
fisttpl
loop
cmpsb
sbb
cli
mov
in
lret
sub
mov
dec
jns
jmp
ljmp
mov
add
pop
adc
mov
shr
and
es
or
rcr
inc
add
sahf
fmull
aaa
mov
cli
cmp
rcll
xchg
xchg
fsubp
lret
into
dec
xchg
inc
ljmpw
rcl
gs
cmpsl
fcoms
loope
xchg
mov
dec
dec
repnz
or
mov
pop
xchg
stos
sbb
stos
cmp
mov
xchg
lret
mov
int3
int
xchg
inc
ret
inc
mov
pop
mov
aad
out
neg
ret
aaa
rcrb
adc
sarb
mov
add
or
lods
ret
or
adc
xchg
lea
xchg
jle
fiaddl
mov
and
inc
mov
call
cwtl
loopne
aas
mov
loopne
int
mov
or
mov
and
hlt
iret
jo
andl
xlat
es
sbb
push
daa
push
jge
and
out
cmp
adc
push
jno
fsub
aas
xchg
gs
sbb
out
ljmp
cmp
sbb
xorb
mov
nop
push
leave
shlb
in
add
pop
jl
or
aam
dec
lock
je
shr
pop
sub
and
ss
lods
xor
xor
cwtl
imul
jmp
pushl
call
fcompl
add
adc
pop
pop
xchg
pop
push
dec
out
or
lahf
arpl
adc
pop
cld
xchg
pop
movsb
lock
mov
pop
ret
nop
xor
dec
jp
sub
ja
xchg
scas
out
xchg
pop
sti
popa
stc
fsubrs
fnstenv
mov
cmp
enter
jmp
fisttpl
das
xchg
fld
dec
sarl
or
mov
add
xor
cld
adc
test
push
sbb
mov
xchg
adc
mov
aad
sbbb
cwtl
push
jae
loope
xor
mov
rorl
sbb
add
loopne
cmpsl
mov
mov
outsb
scas
xor
cltd
dec
add
xor
xor
or
mov
jo
sti
adc
lea
sbb
sub
xchg
dec
jge
jmp
pop
or
sbb
adc
int
mov
mov
ja
int
ficomps
pop
mov
bound
inc
ds
ret
stc
adc
dec
cmp
push
movsl
cmp
or
bound
out
fidivrs
mov
xor
or
imul
push
and
lods
popf
stos
rorl
cmp
xor
mov
jo
arpl
test
clc
cmpsl
sub
repnz
popf
jae
sub
js
inc
scas
cs
push
test
mov
daa
repz
int
cmp
xlat
cmp
mov
xlat
jmp
in
push
stos
loopne
clc
push
jns
mov
xchg
jmp
jecxz
mov
je
jae
inc
imul
and
mov
in
fistpll
inc
adc
or
mov
pop
filds
pusha
add
jb
movups
dec
or
jmp
je
mov
dec
push
aad
lods
xor
mov
flds
test
out
mov
in
inc
and
and
jge
mov
in
aas
push
mov
dec
mov
add
jmp
add
mov
jp
dec
adc
stc
adc
daa
movsl
sub
add
xor
xchg
neg
imul
inc
andl
orb
movsb
inc
push
mov
push
fdivp
inc
pusha
jbe
add
out
dec
jno
notl
jo
call
inc
or
push
mov
daa
mov
loop
push
mov
xor
push
popf
mov
cmpsl
or
test
adc
xchg
loopne
and
lods
push
rclb
and
mov
outsb
in
add
mul
and
call
iret
in
xchg
das
movsl
data16
cmp
or
add
stc
push
jnp
rorl
push
add
iret
ret
pop
pop
mov
fcoml
inc
and
ljmp
mov
fnstcw
ficoms
loopne
xchg
cmp
adc
clc
imul
lahf
jmp
clc
loop
add
sahf
push
jge
ds
das
pusha
lods
sbb
add
lods
lea
dec
out
sbb
mov
adc
popa
sbb
mov
in
mov
push
or
sub
pop
into
push
pop
inc
scas
inc
insl
xor
xchg
ss
in
cmp
fimuls
bound
or
pop
outsl
jbe
cmp
xchg
add
push
into
or
push
aam
jns
inc
sub
in
insb
xchg
push
data16
xlat
pop
push
and
pop
and
push
cmp
mov
repnz
cmc
and
dec
and
push
and
pop
cltd
popa
and
jmp
inc
ficoms
dec
outsl
jl
out
pop
cmpsb
pop
loope
dec
repnz
xor
lcall
add
pop
ret
ret
xchg
popf
mov
cli
inc
xchg
jbe
imul
pop
dec
jnp
push
mov
loopne
push
xchg
jne
jle
sub
push
repz
mov
mov
movsb
adc
test
dec
mov
std
cmp
sbbb
add
and
in
cmpsl
and
inc
xchg
nop
fistps
imul
xor
sbb
cld
in
jp
adc
pop
in
ret
clc
mov
imul
dec
cli
lahf
in
mov
lods
pop
loopne
mov
bound
lcall
sti
es
adc
dec
adc
cli
sbb
jae
clc
stos
sub
jle
mov
fs
ss
orb
in
mov
cmp
jns
cwtl
jl
leave
sbb
test
add
push
lods
ljmp
adc
outsl
mov
out
inc
xchg
je
mov
icebp
mov
cld
aaa
xchg
mov
fdivr
insb
add
mov
divb
mov
dec
pop
dec
adc
xor
popa
and
clc
mov
jne
xchg
mov
aam
jb
sahf
sub
out
push
add
and
xchg
rorb
sbb
and
jg
fs
mov
dec
and
mov
js
pop
cmp
xor
or
xor
mov
pop
adc
daa
das
push
stc
int
fadds
xor
pop
ret
pop
test
cmpsb
int3
imulb
movsb
imul
xchg
es
cwtl
xchg
lret
push
popa
movsl
out
inc
mov
pop
pop
jmp
in
add
test
and
push
add
xchg
stos
and
insb
push
jmp
lds
xchg
loop
mov
adc
jl
jo
jg
das
les
sbb
les
lods
pop
stos
dec
jle
and
imulb
hlt
daa
adc
jle
cltd
fwait
mov
pop
push
jnp
inc
push
pusha
push
pop
lahf
sahf
xor
cmpsl
outsl
mov
sbb
in
add
xor
pushf
outsb
dec
stos
cmc
popf
stos
push
pusha
jo
inc
je
es
jne
iret
ss
pushf
push
add
lods
xchg
adc
ja
ljmp
sbb
addr16
ljmp
or
aad
jmp
inc
gs
jl
fs
push
sbb
xor
push
or
std
shl
loop
xchg
mov
aam
dec
fists
test
mov
pop
divb
movb
fadd
call
mov
cmp
mov
mov
jbe
ja
mul
jl
mov
out
pop
jecxz
aaa
xchg
movsl
ds
push
clc
popf
adc
push
das
jae
jmp
loop
dec
lds
adc
rorl
push
sahf
cmp
ficomps
hlt
fisubs
fwait
test
leave
icebp
out
push
jmp
jg
gs
dec
fmul
idivl
int
dec
cmp
mov
jae
dec
push
and
xchg
jecxz
pop
insl
test
pop
pusha
adcb
inc
leave
sub
jp
shlb
mov
adc
enter
inc
addr16
or
cmp
cmp
xchg
add
cmpsl
mov
ljmp
xlat
mov
push
xchg
aaa
test
aam
lds
xchg
mov
movsb
push
movsl
call
aas
pop
and
mov
adc
inc
xor
scas
fwait
adc
les
lods
mov
daa
xchg
inc
or
push
daa
fistpl
lds
sarl
pop
mov
mov
xor
imulb
cmp
cmp
test
pop
cmpsl
jp
xor
dec
inc
mov
mov
or
test
iret
stos
neg
inc
add
inc
pop
js
inc
out
test
lret
subb
mov
inc
iret
cs
push
clc
mov
mov
out
outsl
mov
js
out
dec
and
push
data16
mov
loope
outsb
arpl
loop
movsl
fdivl
psubq
dec
icebp
sbb
mov
imul
das
mov
jge
mov
lea
push
call
cmc
pop
lret
mov
outsl
pop
das
mov
jae
jns
pusha
lret
or
adc
addb
mov
pop
xor
xchg
add
popf
in
cmp
push
xchg
imul
in
shlb
or
ljmp
out
out
insl
test
jo
xchg
jmp
popf
gs
mov
sbbl
and
adc
cmpsl
stc
jne
sbb
mov
mov
mov
pop
ret
pop
sarl
adc
fucomp
sub
jno
pop
iret
enter
mov
insl
clc
xchg
add
mov
xor
mov
inc
data16
pop
insb
push
dec
or
jns
xlat
push
inc
sub
shlb
or
cli
or
xor
fcoml
pop
pop
cmpsb
xchg
jne
imul
add
cli
mov
fwait
push
cmpsb
xor
wrmsr
imul
sti
push
repnz
push
mov
mov
xchg
sbb
test
jge
adc
test
mov
lods
je
cmp
pop
push
lea
insl
stc
test
add
jge
cld
inc
std
outsl
push
mov
xchg
jmp
jb
nop
out
push
mov
jle
push
inc
in
hlt
inc
and
mov
std
pop
adc
std
inc
cmp
push
mov
or
mov
xchg
mov
inc
in
fs
pop
mov
orl
cmp
sti
jp
dec
movsl
mov
ss
fs
in
push
dec
or
les
xchg
mov
enter
sarl
test
inc
cmp
rcrl
gs
sti
add
arpl
out
mov
jnp
stos
jp
mov
lds
mov
jne
pop
pop
add
popf
xchg
dec
sbb
add
cwtl
mov
arpl
orl
push
scas
mov
pusha
dec
loope
sub
pop
pop
mov
pop
call
notl
inc
icebp
fnstsw
in
out
mov
mov
pop
les
push
mov
jmp
and
mov
int3
cmp
loop
mov
xor
lret
and
fidivs
inc
shlb
push
jg
xor
roll
stos
dec
dec
inc
shll
add
sbb
sti
fs
push
sub
fadd
xor
fs
ret
xor
lds
test
test
push
and
shrl
scas
ljmp
xor
dec
popa
shr
out
jle
mov
mov
out
sub
mov
loop
cmc
push
cmp
nop
test
outsb
sbb
dec
cmp
sahf
lock
mov
test
stos
push
bound
dec
mov
dec
add
mov
stc
mov
pop
in
adc
lret
cmpsb
or
xchg
fmuls
es
jae
fsubp
rcl
push
sbb
ja
add
popf
push
mov
outsb
mov
fld
inc
sbb
outsl
mov
stos
insb
fistl
xor
xchg
dec
xchg
push
adc
dec
push
xchg
jbe
lds
fbstp
les
es
ljmp
sti
sub
jle
into
mov
sbb
sahf
les
dec
lds
lods
in
push
js
arpl
jne
decb
dec
push
push
xor
jns
outsb
cmpsl
push
dec
xchg
push
push
insb
mov
sbb
xchg
mov
inc
mov
push
aad
mov
mov
pop
out
cltd
and
cmpsl
icebp
cmc
ja
popf
xor
ret
fstp
fidivrl
int
sbb
lods
mov
loope
lret
jbe
js
jmp
cmp
rclb
aaa
fimuls
fwait
or
and
adc
adc
cmp
ds
inc
mov
aas
mov
pop
data16
ja
les
pop
and
sbb
cmp
test
or
repnz
mov
hlt
lret
adc
mov
cwtl
out
cmp
and
xchg
lret
icebp
xor
aad
mov
es
nop
cmp
mov
shrl
adc
rcll
js
int
inc
roll
repnz
fs
add
out
icebp
mov
shr
shrb
cmc
inc
stc
or
or
nop
test
sbb
xor
or
arpl
icebp
ficoml
mov
aaa
mov
jne
xchg
push
idivb
jmp
pop
pop
xor
fmull
mov
xchg
xor
mov
inc
add
fmull
imul
cmp
sub
shlb
mul
dec
cmpsl
pop
inc
mov
inc
dec
int3
jecxz
lret
and
dec
mov
mov
mov
ss
imul
mov
xchg
insl
pop
dec
or
pop
stc
aaa
lret
outsb
popf
fildl
test
jp
pop
mov
pop
xchg
adc
nop
xchg
and
fwait
scas
test
scas
mov
sbb
and
ss
in
dec
ret
stos
xorb
dec
mov
mov
icebp
or
js
mov
dec
xor
sub
leave
xchg
jge
lods
jnp
shll
out
cltd
xlat
lcall
and
in
outsl
cmp
fyl2xp1
bound
jg
iret
mov
cs
dec
sbb
dec
sbb
insl
dec
testl
pop
xchg
and
mov
cs
add
or
add
jp
or
mov
mov
and
les
outsb
push
jle
adc
or
mov
aas
jno
mov
mov
andb
mov
mov
sub
sti
lret
add
lahf
shlb
adc
js
sub
adc
out
cmp
mov
adc
mov
mov
lds
dec
rorl
add
adc
lcall
lock
cli
xchg
stos
loop
cmpsl
xchg
mov
pop
and
cmpsb
out
out
not
rorb
out
jp
subb
loope
ds
fildll
adc
lret
sub
mov
outsb
das
inc
dec
repnz
es
adc
pop
enter
push
popa
mov
pop
fstpt
in
and
flds
mov
test
fwait
and
sbb
in
rdmsr
cmp
movsl
leave
jae
cmp
mov
or
inc
sbb
pop
or
mov
sbb
loope
inc
mov
into
bound
mov
addb
aas
mov
push
cwtl
xor
pop
sarb
adc
or
iret
ja
push
stos
cs
jge
mov
scas
repnz
mov
leave
fdivr
jge
or
lock
pop
adc
cli
ss
lds
out
loope
ss
in
pop
out
scas
jge
lds
ljmp
sub
aam
test
cli
xor
mov
int3
shrb
xor
cmp
shr
push
in
cmp
xchg
ret
imul
fwait
dec
add
jb
mov
jno
lahf
mov
inc
mov
pusha
jmp
sub
inc
sub
mov
pop
jecxz
das
into
push
dec
stos
dec
rcrl
mov
rcrb
pop
push
cmp
cmpsb
sub
jmp
xor
inc
adc
inc
fiadds
iret
inc
pop
cwtl
mov
test
xor
sbb
inc
jg
add
rolb
jle
shrl
ret
fsts
xlat
mov
cld
cli
dec
sbb
fidivrs
mov
std
movsl
aaa
pop
mov
notl
movsb
mov
gs
lret
std
push
aaa
jmp
gs
daa
or
push
mov
sub
xchg
lret
inc
xor
mov
js
cmp
or
and
js
cmp
push
and
jne
push
inc
sub
mov
call
lods
aas
faddp
mov
inc
imulb
mov
mov
das
scas
push
cs
mov
dec
dec
insb
lret
in
adc
inc
mov
loope
ljmp
lods
sub
fwait
and
dec
sbb
inc
add
out
adc
adc
fwait
rorl
std
pusha
rcl
in
pop
push
rolb
adc
mov
out
shlb
sbb
std
cld
shrb
loopne
mov
add
jb
cmpsb
xor
mov
push
cmp
sub
dec
mov
mov
jg
mov
fldcw
jo
mov
jae
clc
push
mov
mov
popa
insl
imul
mov
cmp
insb
pop
fdivrp
test
popf
adc
mov
dec
mov
fldl
or
adc
popa
jmp
lock
dec
xor
inc
inc
push
jl
pop
rclb
jb
dec
push
frstor
aad
iret
ljmp
call
insl
or
sub
gs
xchg
fwait
lahf
daa
mov
cmp
das
popa
outsl
sbb
aaa
fwait
iret
scas
adc
mov
push
into
popa
xor
insl
inc
mov
mov
add
pop
inc
testb
negl
fistl
outsb
es
jno
mov
mov
pop
dec
jle
mov
stos
or
inc
sub
aas
xchg
dec
pop
mov
mov
hlt
negl
shl
push
mov
push
push
mov
inc
mov
xchg
lcall
mov
xchg
in
cld
pop
rcll
bswap
les
add
pop
xor
mov
mov
jecxz
outsl
cwtl
sbb
mov
add
mov
lret
mov
int3
inc
out
aaa
push
adc
test
mov
mov
jnp
mov
push
cmc
mov
ja
xor
jnp
dec
pop
and
fisubl
imul
mov
repz
push
bound
ja
cmp
icebp
pop
jae
stos
int3
cmp
outsl
je
fstps
fs
pop
test
popa
inc
mov
push
dec
xchg
mov
mov
xor
cmc
add
ret
iret
push
mov
in
xchg
pop
js
push
sbb
push
into
adc
scas
sbb
cpuid
xor
and
mov
push
sahf
andl
cwtl
fstpl
mov
mov
pusha
inc
out
push
xchg
push
adcw
dec
add
orb
loop
pop
or
or
jmp
mov
jns
test
xor
or
and
pop
push
ret
xchg
jecxz
dec
sbb
sbb
pop
mov
xchg
subb
or
and
shll
sub
xchg
pop
inc
popa
jae
nop
repz
movntps
jnp
setg
dec
insb
xchg
adc
xor
push
push
cmpsb
xchg
rorb
dec
mov
jecxz
jns
inc
adc
xor
jno
outsb
mov
push
add
movsl
jne
push
arpl
or
pop
mov
push
and
imul
adc
into
pop
negb
mov
mov
mov
sub
icebp
call
lock
outsb
pop
xchg
mov
jno
rol
std
mov
imul
adcb
out
arpl
iret
mov
jns
cltd
xor
cld
xor
adc
mov
inc
xchg
jle
inc
test
ja
enter
and
sbb
cs
or
insb
push
sbb
popa
sub
inc
pop
lcall
in
sub
push
shrb
jae
or
push
dec
pop
adc
lcall
cmp
cmp
adc
mov
mov
cmpsl
cmp
sub
clc
sub
mulb
loope
sbb
mov
inc
ljmp
mov
aad
push
lea
ret
out
out
dec
jmp
fcomps
test
and
and
cmp
les
imul
mov
shlb
adc
jle
cmc
insl
aad
inc
dec
imul
mov
push
loop
xchg
xchg
sahf
cmc
jg
ret
pushf
sbb
dec
cmp
and
push
inc
mov
pop
movsl
push
jno
aaa
lea
lret
lahf
js
jbe
dec
xlat
into
mov
fldcw
lcall
jle
stc
jo
jno
data16
cmp
sub
jp
faddl
xor
ret
jge
fadds
cli
out
push
insb
mov
je
jo
pop
and
int
int3
test
xchg
test
cltd
xchg
call
test
out
jmp
dec
lret
repz
xchg
or
mov
pop
xchg
mov
jp
test
repnz
jmp
xlat
int3
push
push
popf
popf
ret
push
push
ds
outsl
int
mov
push
push
and
dec
testl
adc
iret
cmp
push
cwtl
inc
adc
sbb
lcall
jle
idivb
sarl
les
inc
fisttpll
lds
lcall
movsl
push
mov
in
mov
mov
stos
outsb
jno
inc
sub
push
mov
xorl
push
mov
pushf
ljmp
loopne
fwait
insb
inc
lahf
mov
decb
lret
popa
pop
mov
fldlg2
test
pushf
sbb
inc
test
adc
stc
loope
jmp
xchg
jb
cltd
pop
fistl
enter
push
shl
icebp
test
ss
mov
adc
adc
fs
lods
mov
pop
cmc
test
sbb
xor
cmp
cmp
cmp
sub
daa
in
scas
xor
jnp
js
xor
sub
in
les
dec
loopne
push
insl
mov
sahf
enter
call
stc
or
fisubs
cmpsl
push
fisttps
inc
inc
add
lds
add
shll
inc
inc
xchg
pushf
sbbl
jne
pop
rolb
je
add
mov
clc
push
pushf
leave
lahf
inc
movsl
sub
repz
sbb
daa
lds
sbb
adc
or
roll
lahf
outsb
sbb
mov
pop
rcrb
and
pop
les
test
out
dec
jno
test
or
and
xor
pop
and
dec
mov
in
out
test
jl
mov
and
sub
inc
cli
xchg
shrb
mov
hlt
xchg
or
mov
lea
inc
jb
rolb
dec
sbb
jp
mov
repz
pop
or
vcmpsd
mov
mov
mov
repz
push
sub
int
or
pop
pop
out
mov
mov
daa
stc
inc
bound
inc
mov
inc
aad
jb
cli
ret
mov
or
cmpsl
adc
add
xor
or
stc
das
xchg
lock
xor
scas
popf
pop
dec
divl
lods
loop
jmp
stc
pop
sbb
lds
test
sub
mov
popf
push
push
jbe
xor
test
dec
jecxz
adc
pop
mov
adc
xchg
xchg
rorl
mov
xchg
mov
and
mov
adc
inc
mov
nop
mov
filds
addr16
leave
sti
lods
add
mov
inc
jle
or
test
cld
cmp
xor
xchg
cwtl
sub
sub
xchg
loopne
sub
arpl
xchg
xchg
pushf
sbbb
xor
movsl
shll
pop
add
movsb
add
add
push
xchg
sarb
cmp
or
jl
movb
mulps
jbe
loopne
loopne
int3
fidivs
pop
jns
inc
loope
and
inc
sbb
aam
jl
cmp
sti
push
into
call
mov
lds
xchg
cwtl
mov
xchg
repz
inc
pop
push
es
add
std
pop
lret
jmp
andl
fdivrp
repz
jge
push
cwtl
push
outsb
aam
mov
jp
test
dec
clc
add
sub
test
inc
dec
jp
xchg
les
pop
and
aad
jmp
jns
jp
add
jle
mov
scas
push
inc
rcr
arpl
mov
loope
lret
aaa
insl
inc
lahf
jbe
lock
arpl
out
ret
pop
pop
xchg
cmp
cwtl
pop
mov
dec
fdiv
out
in
cmp
xor
addb
mov
dec
or
stos
lock
jne
fidivrl
test
xor
test
stos
jb
mov
imul
divl
jbe
test
test
xchg
imul
sahf
imull
jmp
icebp
xchg
cltd
gs
mov
adc
ljmp
repnz
jmp
daa
orl
jae
pop
mov
pop
in
jl
int
pop
mov
scas
insl
testl
xor
pop
inc
inc
cld
xor
sarb
ja
sub
and
add
popa
lea
or
bound
popa
bswap
or
popf
inc
fsubp
cmp
or
mov
jne
in
pushf
fiadds
sbbl
inc
mov
xlat
bound
lcall
ds
dec
cmp
outsb
push
push
cmpsl
pop
jp
lret
fstpl
add
jge
add
cltd
aad
or
leave
in
lret
cmp
sar
test
lods
aam
xchg
push
ds
mov
addr16
dec
xor
cmp
jnp
jmp
in
sub
inc
jno
stos
rorl
and
insb
aas
imul
addr16
in
ljmp
and
mov
sub
imul
add
int
xor
mov
cmp
inc
fwait
adc
pop
xchg
test
xor
sub
xchg
bound
mov
enter
xor
insl
ljmp
push
in
daa
cmp
into
jae
pop
shr
add
or
loop
repz
mov
rorl
imul
xchg
aam
xor
dec
test
jns
mov
mov
xor
push
push
sub
inc
mov
and
je
inc
sbb
out
mov
es
int
lea
mov
jg
xchg
fimull
notl
cmc
xorl
loop
push
and
push
les
or
std
cmpsl
clc
mov
xchg
dec
cltd
lods
cmpsb
xchg
fistpl
neg
push
shrb
inc
lods
out
sahf
xchg
adc
pop
push
xchg
mov
fisttpl
xchg
sub
fcmovb
xchg
call
clc
nop
adc
fldenv
pushf
test
pushl
jne
sub
negl
xor
out
loopne
inc
pop
xlat
call
prefetch
into
outsb
pushf
cmp
scas
leave
jno
wrmsr
mov
push
cwtl
lret
dec
scas
xor
mov
xchg
gs
out
les
out
cmp
fmul
std
push
mov
add
push
or
push
inc
mov
test
outsl
test
add
sbb
repz
loope
xchg
xchg
xchg
sbb
test
cmpsb
xor
sub
jl
and
das
cltd
lods
jl
data16
js
aas
test
mull
cmc
mov
insl
dec
mov
test
add
mov
repnz
jg
aam
mov
test
lods
les
jle
fimuls
jmp
cli
outsb
push
mov
pop
sbb
cmpsb
inc
pop
sub
add
das
inc
mov
or
in
or
pusha
mov
cs
scas
xor
sbb
xchg
cmp
or
lea
xchg
dec
aaa
jl
icebp
fdivs
icebp
dec
les
ljmp
imul
cld
test
push
pop
stos
xor
icebp
jp
ret
inc
outsb
jmp
or
inc
imul
add
push
test
xor
das
pusha
dec
in
movsb
push
add
in
mov
andb
es
arpl
push
and
test
dec
push
mov
pop
push
mov
cmp
sbb
hlt
sbb
stos
jge
fcoms
scas
pop
add
bound
pop
scas
clc
jp
ljmp
popf
or
xlat
jae
sub
out
add
mov
ljmp
imul
repz
call
cwtl
push
cli
movb
lret
add
mov
mov
ss
outsl
mov
pop
cmp
fiadds
xor
loopne
adc
xor
rcrl
xchg
dec
xchg
inc
adc
subb
mov
xchg
pop
pop
outsb
mov
cmp
sub
push
add
mov
js
push
out
adc
mov
or
cs
stos
and
sub
or
int3
mov
jnp
cmp
pop
sub
insb
pop
cmp
repz
movsl
adc
or
jge
add
and
into
adc
aas
insb
je
icebp
jnp
jae
and
hlt
fcoml
js
hlt
mov
add
sub
mov
or
dec
bound
pushl
sub
jmp
sub
cs
cmp
inc
xor
cltd
in
scas
cmp
daa
das
mov
lods
lds
xor
enter
stos
xor
mov
sub
rorl
add
int
cli
popa
call
lods
jl
xchg
cmp
in
lods
jmp
and
pop
xchg
jp
fwait
repnz
inc
loopne
test
pop
and
add
or
pop
and
mov
lods
scas
gs
lret
add
push
stos
shlb
xor
pushf
lods
cmp
cmovno
or
xor
loope
int3
xor
out
repnz
mov
cmp
fs
es
sub
jns,pt
cld
add
fsubrl
std
cmp
push
mov
mov
lahf
push
xor
into
jo
sbb
mov
loopne
loope
sbb
sarb
out
dec
adc
out
sbb
fbld
pop
lods
das
inc
push
mov
adc
loope
inc
cmp
sbbb
dec
mov
mov
xlat
jbe
dec
jns
fisttpl
xchg
mov
mov
mov
jg
pop
mov
xchg
add
and
add
adc
popf
push
stos
jb
xlat
loope
jbe
mov
jp
adc
je
cmp
cmp
cmp
xor
sahf
mov
cli
pop
jmp
cltd
lahf
fimuls
icebp
xor
imul
movl
test
jecxz
cmpsl
fs
aas
jne
repz
inc
cmpsb
imul
mov
dec
pop
pop
mov
adc
push
jbe
or
pushf
out
push
rcrb
mov
jb
xor
xchg
cmp
mov
pop
out
mov
sbb
dec
inc
xchg
iret
pop
ljmp
shrl
pushf
lcall
inc
cmp
mov
ss
jno
enter
sub
mov
outsb
jle
mov
mov
movsl
icebp
cmpsb
mov
arpl
pextrw
mov
dec
cmpsb
aas
sub
dec
pop
or
xchg
lods
pop
fmuls
xchg
push
jb
mov
add
add
push
mov
mov
jne
mov
aam
sub
mov
in
repz
sbb
imul
xchg
jne
in
mov
dec
mov
jg
sub
sti
dec
into
lret
sbb
dec
fwait
loop
ss
push
mov
mov
out
mov
stos
cmp
aad
lods
dec
lock
aam
sbb
pop
clc
cmp
xchg
rcl
mov
leave
inc
repnz
adc
test
xchg
mov
push
pop
cmp
in
pop
incl
xor
add
or
cmp
push
loop
int
pusha
and
pushl
push
in
cwtl
shll
pop
add
in
xchg
ss
sub
or
faddp
sbb
adc
cmp
dec
mov
mov
rorb
lret
add
dec
pop
sbb
cmp
add
lds
push
stos
mov
pop
jbe
dec
inc
ss
xchg
in
jle
xchg
daa
stos
stos
cmc
lock
dec
or
xor
jecxz
fldcw
push
std
mov
adc
loop
leave
inc
xchg
add
sarb
xchg
dec
and
mov
rclb
aad
mov
test
adc
ljmp
or
outsl
pop
movl
push
je
pop
shl
insb
push
imul
mov
push
sahf
insl
mov
adc
or
call
cmp
fs
cmpsl
push
pop
dec
xchg
xchg
fidivrs
hlt
dec
cs
mov
or
sarb
pop
sahf
test
lret
stc
fimull
fdivs
repnz
sub
pop
sub
sub
insb
mov
pop
loop
cld
std
sbb
add
test
inc
inc
nop
mov
sahf
stc
outsb
hlt
cltd
rcr
jo
into
jp
xor
add
decl
sbb
push
xor
sbbl
cli
cmpsl
mov
hlt
mov
lods
in
pop
add
adc
sbb
xchg
adc
outsl
cmpb
sbb
shl
test
xchg
rorl
pusha
or
push
movsl
inc
daa
js
or
xor
int
pusha
das
int
mov
adc
mov
push
pop
sti
clc
xor
xor
movsl
aas
push
enter
jno
stos
mov
fisttps
pushf
sub
mov
jbe
adcb
fsubr
mov
arpl
push
bound
cltd
cwtl
and
mov
imul
pop
into
sbb
repnz
sub
mov
adc
adc
icebp
decl
ja
cmp
jmp
or
jecxz
adc
jp
in
mov
jns
and
push
sbb
mov
pop
mov
testl
cltd
popf
ror
adc
jae
int
sti
mov
lods
mov
inc
imul
rorb
add
popa
es
sarl
sub
fs
mov
pop
xor
dec
sbb
mov
inc
mov
xchg
int3
mov
jmp
pop
ja
push
mov
nop
cld
xchg
icebp
xor
push
daa
cmp
pop
bound
pop
push
in
sbb
cmp
sub
test
pop
jne
test
sub
not
dec
and
int
pop
xchg
xchg
lods
sbb
jg
pop
in
sub
cmp
add
mov
add
popa
rcrb
sbb
aas
loopne
dec
mov
fstpt
cmp
cmp
xchg
mov
cltd
aad
pusha
lret
dec
pusha
push
xor
mov
pop
add
mov
xor
add
mov
push
jl
pusha
clc
sub
pop
dec
mov
and
fmulp
mov
sub
xor
jle
mov
jle
fwait
gs
xlat
sbb
jl
mov
push
add
icebp
lods
cmc
cmp
or
outsb
dec
aas
aaa
pop
xchg
inc
stos
xchg
add
scas
cwtl
cmc
xlat
mov
sarb
sub
outsb
add
test
ret
int3
add
ds
or
out
sarb
add
inc
add
sti
aam
or
xchg
pop
roll
dec
xchg
in
xchg
fwait
jae
xlat
pop
xchg
popa
cmp
sbb
js
int
push
inc
adc
ja
movsb
mov
xchg
ljmp
test
push
cmp
dec
push
imul
rclb
mov
mov
in
lods
orb
int
adc
into
stos
mov
and
and
mov
movsl
js
or
jl
inc
nop
add
or
and
loop
jle
std
jecxz
cmp
sub
dec
cmp
or
mov
dec
sub
or
cwtl
mov
sar
loope
jle
sar
mov
push
lock
jp
and
stc
xchg
lret
fcomps
cmp
fs
push
lock
mov
mov
pop
in
xchg
cld
or
or
ret
add
loope
xchg
lds
clc
sbb
outsl
mov
add
data16
sub
and
ret
pop
or
mov
je
mov
les
xlat
xor
ret
imul
cmpsl
call
movl
shl
fs
ret
xor
lods
or
mov
jmp
pop
shrl
push
mov
ljmp
stos
ljmp
xrelease
jl
fcoml
push
mov
mov
adc
dec
test
add
aam
imul
repz
fidivrl
ret
mov
loope
addb
mov
sbb
sarl
or
or
movsl
inc
mov
mov
pop
add
mov
push
nop
int
pop
pusha
call
pop
mov
fs
push
push
ds
test
and
lcall
sbb
pop
fisubs
das
xchg
sbb
jne
pop
inc
pop
lret
jmp
out
sbb
packuswb
rorb
fwait
xor
add
fdivrl
fsubr
xchg
cmp
in
movsb
jecxz
adc
popf
bound
lret
fistpl
or
das
popf
out
movsl
adc
or
lahf
push
roll
dec
psubusb
sarb
test
addr16
outsl
mov
dec
aam
movsb
imul
or
push
mov
inc
push
stos
sete
push
ret
dec
xor
rolb
dec
push
call
clc
inc
imul
mov
dec
stc
lods
sub
jns
sub
out
sub
stc
ja
call
cmpl
dec
pop
shlb
inc
bnd
inc
add
push
cmp
xor
pop
mov
testl
inc
cmp
arpl
int3
push
push
inc
add
orb
popf
jg
push
push
out
cmp
fisubs
sub
xor
mov
in
fidivs
int
ss
add
pop
and
push
lret
scas
mov
xchg
lret
idivb
ret
ret
jo
inc
in
ljmp
cs
je
out
cmp
loop
insl
fbstp
cmp
popa
movsl
scas
js
fidivs
shlb
pop
outsb
ja
daa
insl
pop
dec
das
out
inc
mov
faddl
mov
std
arpl
test
pop
jo
leave
cmp
std
imul
and
leave
dec
ss
aas
xchg
xor
push
mov
and
outsl
inc
fcompl
notl
lods
sbb
inc
xchg
xabort
das
push
outsb
pop
mov
push
xchg
pop
sub
scas
xchg
scas
mov
out
mov
jp
xchg
inc
sahf
fldcw
cld
sbb
adc
rclb
cs
fwait
and
push
jp
es
iret
mov
hlt
mov
test
scas
add
pop
cmpsl
adc
jo
icebp
cmp
ret
mov
pop
xor
cmp
dec
popa
dec
fistpl
das
xchg
mov
insb
sbbb
dec
jno
pushf
lea
mov
mov
inc
cli
lret
mov
dec
lock
or
sbb
adc
or
fbld
jmp
movsb
jns
scas
push
pushf
xchg
xchg
dec
inc
mov
lds
hlt
imul
pop
shll
push
out
andl
call
xchg
andb
icebp
jb
mov
aaa
cld
fiadds
adc
lret
pop
test
cmp
pop
mov
and
js
lret
out
pusha
and
movsb
dec
jnp
mov
mov
in
sub
das
fisttpl
xor
xchg
fdiv
dec
adc
cld
aam
sub
dec
xor
es
or
push
mov
nop
out
dec
orl
mov
cmp
icebp
sbb
data16
push
sbb
or
mov
xor
jo
cmpsb
fstpt
cmp
bound
repnz
and
sub
sbb
subb
int3
push
nop
insb
bswap
sub
movsb
scas
xchg
pushl
sti
mov
push
call
or
jg
and
sbb
push
xor
in
rcrl
pop
inc
fwait
adc
sbb
lcall
jb
fsub
dec
hlt
call
mov
xor
mov
fdivs
sub
inc
and
aas
push
adc
ljmp
xor
and
sub
fcoms
sub
inc
cltd
jns
mov
add
push
mov
rorb
fs
std
fisttps
imul
push
xchg
and
sub
dec
rolb
sub
movb
mov
das
pop
fiadds
movsl
xchg
xchg
sbb
pop
aad
xchg
jns
add
adc
inc
pop
mov
in
cmp
mov
shlb
add
pop
adc
fadd
aad
pop
cwtl
jecxz
aas
js
scas
shr
mov
mov
inc
push
shlb
bound
out
jp
jno
add
insl
mov
dec
mov
outsb
repnz
sub
inc
dec
aas
aam
lret
lock
mov
mov
bound
pop
cmp
sbb
pushf
mov
fwait
add
rorb
data16
and
cli
mov
lcall
lods
cmp
add
fimuls
and
push
lock
popa
pop
adc
loope
insl
fisubs
js
fisubrs
or
push
pushf
xor
mov
push
sar
mov
pusha
push
fwait
cmp
adc
xchg
mov
popf
xchg
adc
arpl
cwtl
cld
pushf
push
addr16
sbb
or
jg
pop
das
das
pop
adc
pop
lret
test
fcoms
cltd
push
loope
daa
xlat
cli
mov
push
and
bound
fldt
iret
push
int3
or
xchg
mov
stos
js
jns
in
adc
stos
fiadds
icebp
mov
adc
clc
mov
xlat
imul
sbb
mov
mov
mov
shlb
es
dec
xchg
add
stos
sub
xor
cwtl
es
js
dec
icebp
mov
add
mov
pop
pop
notb
inc
add
sahf
and
xor
jmp
movsb
cs
pop
call
out
cmp
mov
mov
outsl
mov
scas
xchg
jae
cmpsb
outsb
test
jl
or
mov
inc
mov
inc
inc
pop
sbb
mov
mov
push
mov
fmuls
out
pop
movsl
mov
sbb
int
pop
xchg
aaa
outsb
jmp
pop
aam
jge
or
ljmp
into
cld
rclb
lock
andl
sbb
cs
je
roll
mov
popf
pop
leavew
inc
push
jecxz
das
mov
xorl
lods
push
ljmp
add
jne
mov
int
sub
cwtl
fidivrs
clc
sbb
xchg
clc
jecxz
jmp
add
cmp
cmp
lods
fstp
inc
adc
jo
sub
sti
sbb
test
icebp
sub
xchg
pop
sahf
rep
stos
in
xorb
jge
orb
scas
add
mov
into
sub
jecxz
into
lds
dec
jns
daa
xor
jecxz
or
adcb
jmp
in
push
clc
fdivrl
insl
add
fcoml
inc
mov
out
test
cld
mov
sbb
test
adc
shll
mov
and
adc
pop
dec
dec
stc
push
mov
pop
sarl
inc
xchg
push
xor
orb
sbb
cmp
int
xchg
ljmp
bound
pop
adc
lahf
aas
dec
mov
mov
jns
lahf
sub
mov
mov
scas
sbb
jge
ja
mov
sbb
jb
mov
sahf
dec
xchg
int
and
pop
mov
sub
push
jne
stos
int
xchg
and
push
mov
cmp
cmc
gs
aad
xchg
ss
push
push
insb
inc
sbb
adc
jo,pt
lcall
fimull
sbb
pop
stos
xchg
dec
push
in
inc
or
into
in
adc
jno
cmpsb
xor
sub
aad
cmp
mov
push
push
into
hlt
cltd
mov
mov
mov
push
negl
lds
sbb
popa
cmp
fbld
adc
pop
xchg
mov
xchg
pop
mov
les
cmp
in
xchg
outsl
loop
sbb
arpl
pop
cltd
es
lods
pop
adc
jg
test
scas
xchg
xchg
out
adc
into
push
push
sbb
inc
je
dec
mov
inc
in
add
or
lods
iret
daa
gs
push
cmpsl
andb
xchg
notl
and
pop
jne
mov
adc
pop
lea
imul
add
adc
fstl
jge,pt
cmp
mov
jge
movsb
lock
arpl
xchg
sbb
stos
pop
loopne
aam
outsl
mov
rcll
aas
push
jge
sahf
or
pop
les
repnz
pop
and
inc
fnstsw
add
fdivrs
lock
shrb
sahf
loop
ds
mov
mov
movl
mov
outsl
sahf
mov
icebp
bound
cmp
push
pop
jecxz
pushf
pop
and
fwait
add
insl
inc
imul
dec
mov
shrl
aam
in
gs
fwait
outsl
mov
pop
pop
sbb
xchg
cmc
test
imul
js
repnz
stos
notb
dec
loop
cvtps2pi
adc
aad
pop
xor
stc
cli
addr16
fcmovb
sub
or
mov
insl
negb
mov
xchg
stos
pop
pop
adc
lods
mov
mov
jg
cmpsl
push
rcrb
push
and
ficoml
movsb
jg
jo
and
leave
mov
je
repnz
popa
pop
fildll
pop
fs
push
xchg
mov
mov
cmc
push
fwait
xor
mov
fisubs
fisttpl
lcall
int3
fisubl
stos
adc
out
fistpl
xchg
mov
dec
jge
dec
cld
add
xchg
popa
iret
jbe
addr16
dec
loop
jb
inc
mov
inc
in
lahf
sbb
xchg
outsb
cld
scas
sbb
fwait
mov
dec
hlt
out
adc
mov
jb
aad
xchg
mov
js
fmulp
in
fdiv
ficoms
jl
inc
cmp
aam
outsl
dec
sahf
lock
jae
mov
out
ljmp
dec
sub
add
jle
push
jle
jnp
outsb
mov
xor
repz
iret
out
imul
jp,pn
int3
xor
hlt
xchg
mov
pop
sbb
sbb
in
jns
scas
cmc
mov
dec
mull
mov
xchg
push
pop
fcoms
fcomps
xor
adc
cmp
mov
and
push
mov
fistps
daa
test
sahf
xchg
mov
add
mov
lds
stos
cmp
in
fs
mov
mov
mov
mov
rclb
dec
or
pop
add
mov
incb
mov
xchg
jecxz
imul
cmpsb
int
cmp
movsb
lods
add
mov
fidivs
loopne
mov
shrb
imul
movsb
mov
imul
imul
dec
cmp
faddl
sub
aam
push
aad
cmpl
pop
fdiv
imul
dec
imull
das
xchg
scas
mov
mov
das
jae
xchg
xchg
js
movsb
lret
mov
out
and
mov
xor
les
push
idivb
pop
negl
cltd
push
mov
fbld
test
out
mov
jbe
jge
cmp
lods
push
gs
cmp
fcomp
sbb
xchg
push
out
ljmp
in
dec
cmovg
cltd
dec
stos
xor
push
adc
lock
and
fs
inc
dec
jge
inc
add
xlat
sbb
sti
gs
lods
cmp
jae
jecxz
jo
jne
sbb
mov
std
shl
call
out
mov
arpl
aaa
andl
jmp
inc
jne
pop
enter
xchg
cmp
imul
sub
in
pop
mov
fimuls
mov
and
cwtl
loopne
lods
aad
das
ret
add
mov
movsb
and
jecxz
and
aam
cmc
out
aaa
xchg
mov
mov
mov
mov
mov
add
scas
mov
or
int3
js
add
rcrl
aaa
xchg
sub
cltd
push
jp
lock
hlt
pop
sub
pop
mov
pop
outsl
repz
sbb
ret
dec
pop
xchg
sbb
sub
and
lods
sub
rclb
bound
add
pop
fidivrl
jl
or
shr
sti
cmp
push
push
mov
sub
jb
or
mov
cmp
cltd
push
adc
and
outsb
pop
xor
add
gs
scas
inc
insl
call
inc
stos
push
sbb
arpl
rcrl
int3
push
bound
lock
mov
push
adc
cmp
mov
outsb
jge
sbb
xchg
out
outsl
loop
pop
dec
mov
pop
iret
and
mov
iret
outsb
fisubl
imul
xor
iret
mov
sub
lds
and
jecxz
adc
sbbb
sub
pop
mov
inc
cmc
aas
movsl
popf
mov
enter
movsl
sub
fidivl
jmp
cmp
push
add
popa
in
test
pop
rol
or
and
int
mov
lods
sub
mov
fidivrl
loopne
push
push
int
es
movsb
ja
into
das
pop
rcr
xor
dec
pop
aas
pop
repnz
add
inc
jmp
mov
push
ljmp
imulb
mov
stos
push
and
loope
in
lldt
rcl
pop
mov
push
test
mov
ss
cmp
jno
repnz
add
mov
js
cmp
lods
loop
jbe
jno
in
jnp
enter
push
push
push
adc
lret
cli
mov
lret
decb
sbb
dec
mov
or
cwtl
sub
dec
lcall
sub
pop
pop
mov
fisttpll
jne
jbe
inc
and
lds
xchg
mov
bound
decl
xor
lret
or
xchg
jge
inc
ror
sbbb
jno
pop
out
push
and
rdmsr
lret
cmp
add
stos
divb
add
sbb
inc
or
adc
hlt
adc
rcrb
jb
sbb
les
or
ds
mov
hlt
add
ss
jge
mov
popa
or
sbb
cs
dec
out
pop
jne
out
xor
sbb
jno
push
rol
mov
ds
jg
test
loop
mov
cmp
inc
js
pop
pop
adc
or
xor
leave
sub
or
cs
cli
add
and
insl
mov
or
jb
inc
movsl
test
push
and
int
stc
mov
test
or
pop
std
leave
testb
fdivrs
sub
dec
and
sub
inc
ja
push
and
fcmovbe
pop
inc
push
xor
out
cmp
dec
mov
jmp
leave
push
nop
jbe
stos
test
out
je
cmp
imulb
pop
test
ret
push
fnstcw
add
xor
rcl
mov
and
lret
loop
es
mov
xchg
in
clc
xchg
sbb
roll
xchg
insb
sbb
cs
in
push
sub
sub
sub
pop
iret
push
sarb
push
sub
dec
and
ja
std
fs
xor
cmc
mov
shrl
xor
xor
jecxz
not
pop
mov
lods
mov
rclb
xor
adc
rclb
sahf
adc
adcb
sbb
mov
push
xchg
aad
mov
adc
test
xor
push
movsl
sub
mov
ffree
sbb
call
and
mulb
fcom
adcb
stc
xchg
sub
dec
xchg
les
push
jae
xor
adc
mov
or
lahf
lahf
adc
add
push
dec
inc
out
or
stos
sub
mov
xor
cli
jns
mov
cmp
xchg
and
push
ret
imul
jecxz
mov
adc
jp
mov
insl
adcl
sbb
and
mov
mov
sbb
jmp
jnp
test
bound
dec
xchg
xor
or
cltd
in
dec
mov
adc
adc
add
pop
jo
movsb
xor
dec
cltd
mov
mov
pop
ss
int3
and
xor
es
data16
mov
dec
addr16
loopne
ret
cli
or
mov
push
cmpsb
mov
inc
sub
aad
fs
mov
inc
mov
in
sbb
and
mov
adc
push
adc
cltd
jg
jg
fimull
adc
mov
jbe
fs
adc
inc
repz
or
and
push
xchg
xor
cmp
call
lds
and
test
sbb
int3
mov
sub
insb
fbld
jle
test
cs
fisubl
dec
jo
shll
cmp
cmp
pop
mov
and
notl
sarb
sbb
fld
fmull
ret
sbb
popa
mov
push
xchg
ds
pusha
cmp
push
out
loop
das
imul
add
call
jbe
and
fs
mov
and
jecxz
mov
xor
mov
mov
fdivrp
call
cmp
cmp
inc
fiaddl
xor
mov
ret
jae
pop
jle
in
shl
addl
or
lds
push
imul
test
cmp
cmp
pop
jge
arpl
int
jp
ja
push
dec
movsl
push
aas
push
mov
mov
dec
inc
dec
sub
xor
pop
in
loop
sbb
andl
cmpsl
fidivl
cmp
lret
out
andb
push
jns
inc
push
pop
adc
xchg
movsl
sbb
mov
dec
int3
xor
and
popa
das
push
negl
filds
std
pushf
imul
cmp
xchg
push
xchg
es
lcall
out
add
sub
sub
add
pop
mov
js
andb
pop
stos
sub
push
lcall
mov
lds
jp
pop
mov
jbe
mov
frstor
cld
and
in
lcall
sbb
jbe
xchg
repz
push
adc
hlt
add
dec
out
test
sbb
stos
inc
in
adc
cmpsl
test
sbb
jle
std
jb
into
xchg
sub
inc
jle
push
cmp
xor
cli
sbb
jmp
mov
or
inc
mov
jmp
cs
aas
lahf
xchg
sarl
mov
mov
lahf
and
mov
lret
or
roll
test
dec
mov
jmp
lock
sbb
aas
cli
mov
orl
pusha
and
cmp
arpl
test
push
push
movsl
stc
popa
in
and
dec
cmp
xlat
neg
bndldx
pop
arpl
add
or
daa
cmp
movsb
jbe
rcl
cmp
dec
imul
in
test
push
leave
daa
push
jb
out
cwtl
rcrl
push
and
add
mov
js
lea
movsl
mov
xchg
iret
es
dec
mov
rclb
add
xlat
mov
mov
mov
mov
or
out
fmull
mov
insb
test
mov
in
movsb
loop
shll
mov
add
test
sub
jmp
and
cmc
insl
fwait
or
or
xchg
shrb
xor
sti
mov
add
sub
icebp
sbb
sbb
sub
inc
mov
cltd
mov
and
mov
lret
out
int3
outsl
iret
insl
lret
insb
aaa
xchg
mov
mov
push
cmp
lds
adc
mov
or
jle
pop
aad
cltd
loopne
nop
xor
aaa
addr16
out
xor
mov
out
inc
mov
dec
jp
orl
es
rcll
les
lods
in
jmp
stos
aas
mov
fmull
xor
test
add
pusha
mov
sbb
mov
loope
and
or
jg
repz
negb
pop
xlat
xor
out
pop
jo
or
leave
lcall
pop
cwtl
xor
ds
das
int3
cltd
lret
sahf
cmc
lock
jae
add
fstpt
std
aad
jne
mov
xchg
pop
jno
push
outsb
push
jle
test
xchg
jle
ss
into
mov
dec
pop
repnz
lods
daa
xor
popa
pop
roll
cmp
push
adc
jp
push
push
or
fbld
adc
cmp
icebp
adc
add
mov
push
xchg
pop
sub
add
mov
jae
dec
outsl
xor
fsubl
xor
sbb
sbb
lods
mov
pop
cwtl
ret
xchg
dec
into
dec
xchg
push
push
push
xchg
fwait
call
jle
add
xor
mov
cmc
mov
pop
mov
inc
psubusb
adc
sbb
cmp
fisubrs
cmp
bndstx
xor
cmp
insb
add
push
sbb
sbb
mov
aam
jne
mov
xchg
enter
clc
popf
imul
scas
jl
jge
sbb
sub
out
fwait
test
xchg
ss
ss
shl
adc
xchg
call
notb
and
scas
sbb
xchg
cmp
inc
aad
fisubs
out
movl
sub
inc
test
mov
sub
jecxz
push
jbe
jnp
cmc
insl
mov
je
push
das
mov
add
cmpsl
dec
stos
fimull
adc
xchg
setg
test
xor
out
or
dec
stc
popf
ret
add
mov
and
adc
jmp
mov
sub
sahf
cmc
dec
popf
mov
ja
xchg
xchg
and
push
add
rol
stc
sbb
movsl
sub
arpl
sub
clc
mov
std
push
fdivs
mov
pop
adc
les
leave
push
push
outsb
movsl
xchg
repnz
cmp
jnp
mov
test
push
dec
insb
mov
jl
scas
sahf
add
push
xchg
mov
jle
fadds
mov
mov
jmp
cs
or
mov
mov
sahf
out
push
mov
mov
hlt
insb
int3
adcb
rorl
cli
push
in
fidivrl
jbe
rorb
push
xlat
test
mov
sbb
dec
dec
iret
inc
fistps
pop
fiadds
push
popa
out
daa
xchg
repz
xor
adc
imul
pop
push
rorb
inc
imul
xchg
sbb
fdivr
lods
mov
rcr
rorb
cmp
jno
aad
bnd
push
cmpsl
in
mov
push
inc
pop
xor
pop
clc
in
add
shll
imul
dec
imul
pop
mov
scas
or
ficoml
stc
adc
and
loope
lock
call
sbb
ds
cmp
pop
mov
repz
mov
shr
jno
sti
ljmp
xchg
enter
pushf
mov
push
mov
push
lcall
inc
aas
popa
push
je
inc
push
pop
mov
push
mov
cli
sbb
adc
inc
ds
pop
sahf
mov
nop
cmp
add
pop
test
test
fwait
xchg
stc
pushf
inc
idiv
int
ret
cmp
cmp
das
mov
xchg
es
nop
push
push
mull
jmp
scas
pop
divl
testl
push
jns
cmp
or
and
cmp
test
mov
inc
adc
das
ret
ds
inc
xor
dec
add
sbb
fs
pusha
xlat
and
dec
xor
mov
dec
or
lods
mov
jmp
sub
lods
mov
hlt
dec
xchg
in
add
fsubl
scas
inc
test
clc
imul
es
mov
lea
fidivrs
and
jecxz
jns
daa
jbe
fs
iret
arpl
or
mov
test
call
into
xlat
push
mov
jo
imul
inc
lds
insl
xchg
ja
movsl
out
mov
adc
or
repz
das
xchg
ret
mov
iret
test
in
in
lret
push
adc
sbb
and
nop
push
mov
lods
pop
scas
mov
xchg
inc
insl
push
pop
push
addr16
jbe
cmp
push
ret
mov
roll
fwait
mov
mov
scas
add
out
xlat
pop
or
xchg
call
mov
mov
es
xchg
cmpsl
mov
fnstenv
adc
lds
push
adc
mov
xlat
mov
popf
mov
movsb
push
jl
inc
rcrb
and
fwait
dec
xlat
dec
cmc
xchg
mov
and
cmpsl
movb
cmpsl
push
test
mov
push
adc
xor
orl
loop
dec
scas
adc
sbb
or
sbb
and
lods
pop
sbb
xor
adc
int
dec
adcl
iret
iret
jg
or
cmpsb
jge
mov
dec
xchg
adc
mov
pop
es
and
cmp
jp
enter
pushf
cmp
mov
mov
pop
adc
lret
adc
mov
adc
mov
jno
aam
mov
stos
lea
notl
cmpsl
add
dec
fmul
and
push
sbb
lea
or
enter
idivb
cmp
cli
lcall
test
xchg
cli
or
rcrb
sbb
sub
mov
add
dec
xchg
rcll
xor
jmp
int3
mov
mov
stos
inc
jns
adc
adc
call
icebp
jmp
lea
into
xor
sub
in
cmc
test
out
push
cmp
insl
cmp
adc
inc
ja
sub
sub
jb
push
jl
or
lret
cmpsl
mov
pusha
dec
and
data16
adc
and
add
addl
jo
sub
xor
adc
pop
mov
hlt
pop
ss
aad
daa
ffreep
movsb
cmp
mov
sub
and
sbb
cs
loopne
mov
adc
jl
cwtl
push
movsl
loop
pop
insb
sarl
add
or
jl
scas
stos
or
mov
xchg
or
jbe
mov
es
xchg
out
pop
mov
mov
cld
jp
shr
insl
xlat
fsubr
pop
mov
test
xor
dec
mov
sub
ljmp
mov
sbb
pop
or
stos
cwtl
cltd
xor
out
in
subb
jno
or
and
movsl
mov
mov
mov
jne
js
sahf
hlt
mov
out
xor
inc
es
ljmp
sbb
mov
mov
lret
xchg
sub
or
movsl
inc
mul
outsb
jne
inc
xchg
add
add
xchg
lret
or
mov
dec
xchg
xchg
sub
sti
clc
jbe
test
fmull
jle
iret
int3
dec
push
sbb
xchg
add
sbb
mov
xchg
adc
sti
lds
pop
movsl
loope
xor
xor
rcrb
mov
push
imul
and
test
outsl
roll
cs
xor
cwtl
ljmp
push
jb
pop
or
lcall
pop
cmp
adc
repnz
hlt
test
lret
push
stos
fnstenv
mov
sub
sbb
mov
inc
pop
push
xor
iret
xchg
cmp
add
mov
inc
out
popa
mov
shl
push
aas
jl
mov
pop
fisttpl
and
mov
in
les
lods
pop
scas
iret
stc
in
sbb
imulb
rolb
sti
push
xchg
mov
jne
inc
dec
and
xor
dec
jg
lret
in
leave
add
xlat
push
pop
and
push
lahf
flds
mov
sbb
fisttpll
inc
icebp
in
pop
loop
mov
jge
add
in
push
adc
rcll
stos
push
push
mov
stos
decb
or
mov
jle
jmp
loope
xchg
adc
inc
aas
adc
push
das
jg
add
cmp
xor
sbb
xlat
sbb
out
mov
fdivr
adc
ret
imul
mov
jbe
test
outsb
sub
xorb
push
mov
xor
or
jecxz
pop
test
pusha
call
add
fwait
lcall
int3
popa
mov
inc
hlt
movsl
lret
es
popa
loope
outsb
mov
cmp
loope
lods
mov
add
add
xchg
dec
and
push
jecxz
enter
xor
mov
call
outsl
jge
gs
cmp
push
mov
sub
jle
fucomi
add
inc
sbb
push
xor
lds
xchg
aad
je
pop
lods
adc
push
loop
push
fs
ret
jo
loope
jmp
cmp
jae
imul
movsb
mov
mov
fdivl
and
mov
mov
push
das
int
or
xor
in
imul
mov
push
pop
lock
push
jbe
push
pop
pop
dec
xchg
sub
loope
pop
jae
push
xor
sub
imul
mov
dec
and
xchg
in
jl
and
dec
in
repnz
aaa
jg
mov
mov
dec
lds
mov
fiadds
pop
enter
incb
jg
xchg
rcll
sbb
inc
lea
ljmp
sub
addl
ds
sub
scas
in
inc
sub
adc
push
xor
jge
ja
test
mov
sub
xchg
pop
cwtl
dec
mov
dec
push
jns
mov
and
cmp
xchg
stos
xchg
mov
dec
inc
add
mov
xchg
mov
dec
les
and
bound
leave
repz
and
fildll
in
in
sub
jns
lods
cli
xor
xchg
inc
cmp
and
pop
cltd
in
ffree
xlat
dec
jle
stc
out
jbe
repnz
and
mov
cli
mov
mov
notb
push
mov
mov
push
cld
mov
lock
jno
inc
mov
sub
inc
jnp
and
sub
mov
pop
imul
call
add
mov
hlt
das
push
rcrb
popa
fdiv
stos
sahf
movsb
dec
je
lret
ds
and
orl
daa
inc
lahf
loop,pn
in
out
add
or
adc
mov
cmc
dec
fistpll
mov
cmp
lds
in
out
lahf
testb
jge
sub
push
xchg
mov
lock
stos
aaa
dec
mov
dec
pop
mov
mov
gs
lcall
push
lret
into
in
mov
push
mov
jp
rcl
xor
jo
js
mov
fstpl
cmp
push
mov
sub
addr16
cmp
cli
sahf
leave
aaa
int
mov
test
test
fadds
test
push
pop
sahf
lock
fmul
leave
mov
and
pop
add
sub
lds
stc
cmpsb
aaa
xor
mov
and
aad
sahf
xrelease
aam
ficoml
and
out
mov
enter
pop
mov
sub
lea
inc
lret
xor
add
mov
mov
cs
xchg
lods
cmp
pop
clc
xor
clc
push
push
or
jnp
das
xlat
mov
and
jns
leave
add
xchg
pop
inc
or
repz
mov
xor
icebp
iret
stc
test
cmp
and
jge
cmp
fistl
adc
arpl
testb
imul
jmp
shrl
sbb
dec
popa
fs
hlt
add
cli
jae
movsl
ss
or
js
sub
clc
xchg
std
hlt
sub
mov
dec
pop
pushf
inc
jecxz
es
cmp
push
xor
jg
loopne
push
xor
popf
cli
loopne
sbb
sti
in
sbb
push
mov
rcrl
repz
push
pop
movsl
pop
jl
cmpsb
sar
ss
gs
mov
jg
mov
xchg
cmpsb
leave
jge
fnsave
jecxz
lret
ficoms
push
icebp
push
fsubr
adc
dec
por
es
mov
stos
mov
fs
scas
out
push
das
mov
in
mov
push
inc
jae
jns
stos
lahf
icebp
es
sub
push
ljmp
lea
adc
fsts
out
dec
loop
cwtl
adc
mov
outsb
and
jl
jmp
nop
jge
or
pop
cmpsl
inc
fsubr
pop
roll
ja,pn
fistps
jnp
jg
jmp
cmp
leave
sub
pop
daa
cmp
pop
fiadds
ret
sahf
adc
pop
or
fldcw
aam
sub
leave
add
push
sbb
push
sub
jno
js
cld
enter
incl
out
adc
fidivrl
dec
and
jmp
in
xor
cmp
mov
dec
cs
clc
mov
adcb
ss
adc
xorl
adc
jmp
sub
push
dec
and
sub
sub
adc
orl
sahf
loop
xchg
shlb
sbb
cli
add
sarb
not
into
es
std
gs
outsb
jo
or
adc
sahf
lea
test
cmp
fidivl
lcall
imull
sbb
sarb
imul
xor
adc
pusha
jge
or
shrl
iret
cmp
xchg
daa
testb
lods
or
sub
shl
and
jno
add
xlat
loope
mov
bound
test
xchg
sbb
mov
mov
xchg
shrb
xor
adc
mov
outsl
dec
and
mov
imul
test
dec
push
adc
ljmp
sarb
push
setp
or
xchg
jl
into
ficomps
cmp
mov
aaa
scas
adc
xor
stos
ljmp
not
adc
out
inc
mov
repz
pop
mov
push
out
add
mov
xchg
lret
loop
jo
add
jmp
daa
test
in
jnp
xor
test
push
hlt
data16
std
sbb
lahf
lcall
outsl
subl
jp
in
mov
push
imul
lcall
in
jge
lcall
pop
sub
cmp
scas
push
aad
sti
pusha
cmp
ja
xchg
cmp
pop
fsubs
push
sti
lahf
sti
adc
ss
nop
ret
adc
sub
mov
inc
stc
les
mov
cs
inc
icebp
fsubs
shlb
mov
loop
outsb
add
and
add
sub
fidivl
dec
mov
inc
add
jne
mov
and
jnp
mov
loop
lahf
mov
adc
xor
insb
subb
mov
sarb
jmp
and
bound
mov
xlat
loop
or
movsl
enter
cmp
lret
call
popf
mov
mov
test
pop
xchg
push
clc
jge
inc
out
sbb
and
call
adc
cltd
sar
jle
stos
shr
cli
add
inc
pushf
or
jmp
out
xlat
mov
scas
xchg
mov
mov
mov
scas
adc
sub
sub
lea
fisubrs
mov
cltd
mov
xor
lods
insl
pop
sub
cmp
sbb
test
mov
mov
int3
push
fstpl
jp
ret
or
dec
mov
sbb
xchg
scas
ret
add
cld
sub
adc
sbb
loop
or
inc
adc
jnp
xlat
mov
loopne
mov
imul
pop
adc
aam
sub
sub
gs
adc
mov
mov
adc
cmc
hlt
dec
jbe
jle
cmp
sbb
cmp
mov
sbb
adc
lret
int3
xor
lods
pusha
mov
and
xchg
divl
mov
loope
jle
pop
push
fmuls
mov
sub
ret
add
mov
mov
jns
jg
mov
jp
xchg
lds
cmp
add
pushl
mov
xchg
xchg
fadds
mov
pop
inc
xchg
cmp
jnp
cwtl
sbb
rclb
sub
pop
cmp
data16
cmpl
repnz
ds
lcall
js
cmc
and
add
push
sahf
bnd
xchg
les
xor
pop
lods
lahf
mulb
daa
push
lcall
xlat
jmp
stc
adc
sarl
outsl
jle
cli
fnstenv
mov
lods
ss
hlt
movsb
cmc
es
bound
pop
lea
das
sbb
add
out
loopne
mov
cli
add
mull
xchg
fsubl
xchg
into
xchg
sub
out
lahf
loopne
ret
ljmp
loop
add
movsb
test
sub
or
stos
popa
dec
outsl
jb
adc
jnp
add
sbb
stos
pusha
xchg
cs
and
iret
inc
jmp
imull
jnp
cld
icebp
add
mov
push
cltd
xchg
leave
dec
xchg
jge
xchg
add
ja
rcll
clc
xchg
inc
icebp
and
fsub
sub
xchg
in
out
mov
sbb
or
pop
in
inc
pop
fs
jl
mov
add
sub
out
sub
loope
mov
pusha
insl
jbe
pop
mov
cmp
je
adc
push
sub
pop
pop
lahf
xor
repz
out
test
je
push
pop
rclb
int3
aam
xor
jnp
cmpsl
ret
or
dec
out
sahf
fsts
int
insl
loop,pt
stc
les
cmp
mov
jno
jp
fstpt
push
xor
push
dec
es
cmp
jnp
imul
dec
jge
int
sarl
cwtl
cmp
aas
cmp
outsb
out
push
cmp
and
aam
adc
ds
xchg
push
mov
or
xchg
in
icebp
ror
push
lret
int3
jb
jno
addr16
clc
lcall
and
imul
divl
xchg
xchg
insl
xchg
xor
fdivrl
ja
aam
fcoms
int3
add
mov
jno
rcll
rorb
int3
mov
aaa
or
cmp
jno
mov
shr
and
enter
std
in
outsl
cld
pop
shll
lret
mov
mov
notb
cmp
fbstp
xor
loope
leave
stos
or
mov
cmp
iret
jae
dec
nop
aaa
dec
dec
in
push
imul
mov
movsb
add
dec
xchg
inc
mov
push
rcl
pop
rorl
cmpsb
nop
pusha
test
test
xor
sbb
in
and
xor
mov
sbb
test
add
ljmp
sbb
fildll
add
xchg
dec
aam
rsm
mov
jno
aad
popf
push
inc
ja
out
xor
mov
or
push
lahf
je
add
cmp
mov
sahf
push
mov
in
in
call
or
xor
push
ss
shl
lods
enter
call
sub
pop
pusha
pusha
dec
outsb
out
out
xchg
mov
add
sbb
push
das
jne
add
mov
popf
shrb
mov
rcrl
cs
push
or
or
gs
out
jge
sub
xchg
std
fiaddl
mov
add
jb
lock
sar
xorl
or
cmc
adc
stos
mov
pop
adc
add
adc
nop
mov
inc
loop
mov
mov
xor
dec
and
fistpl
mov
inc
adc
mov
pop
into
sub
cmpsb
pusha
out
push
in
les
sub
jge
insb
ss
insl
dec
int3
add
pop
jae
imul
loopne
movsl
pop
hlt
sarl
arpl
push
test
xor
leave
inc
loop
pusha
aaa
inc
inc
arpl
pop
xchg
out
add
sbb
mov
mov
xchg
addr16
test
fs
and
mov
out
cmpsl
sub
sbb
and
lcall
sti
jno
jno
dec
fstpt
int3
rolb
cltd
mov
xor
jp
push
inc
fistpl
ljmp
dec
mov
movsb
inc
inc
ret
lods
fldt
movsl
rorl
ljmp
lahf
push
and
sub
mov
and
pop
pushl
outsl
xchg
loop
cld
in
mov
adc
sti
push
xor
jno
ljmp
rcrb
push
jb
sub
dec
popf
cs
xor
test
xlat
jae
std
adc
push
mov
fdivl
xchg
pop
mov
xor
ss
adc
or
dec
push
xchg
imul
shrb
popa
gs
xchg
jne
inc
sbb
fbstp
shl
dec
push
jl
stos
test
or
das
sub
pop
jne
cmc
pop
dec
pop
push
in
lock
ja
iret
lds
std
insb
int3
test
sub
stc
adc
aas
insl
into
mov
repz
jae
lahf
sbb
negl
scas
adcl
mov
pop
daa
mov
adc
push
cmp
push
mov
xor
arpl
jg
pop
jle
add
nop
cmc
sahf
movsbl
data16
stos
mov
sub
std
js
xor
push
fstl
mov
ficoms
xchg
or
mov
mov
ljmp
daa
add
ljmp
mov
dec
inc
sbbb
fwait
add
notb
cld
or
nop
adc
push
and
addr16
sbb
dec
mov
inc
test
hlt
push
mov
test
push
aad
popf
sbb
outsb
hlt
mov
repnz
clc
iret
ficomps
and
cmpb
sub
cmp
xchg
lret
jp
nop
dec
pop
push
sahf
sbb
jnp
stos
dec
jns
insb
push
sub
lds
jge
push
jmp
aam
dec
in
aaa
push
pop
inc
loope
sub
jg
repnz
js
movsb
std
jl
sbb
arpl
sbb
pop
cmpsl
fadd
test
push
out
iret
neg
xor
or
ficoml
add
mov
xor
push
xlat
mov
xor
aad
mov
fsubp
adc
xchg
dec
sub
or
jl
int
jle
mov
sbb
and
repz
negb
add
mov
sbb
mov
inc
in
mov
pop
aaa
movsb
sbb
les
mov
imul
push
lea
lods
sub
add
cltd
ss
imul
ss
dec
ja
arpl
mov
jno
or
or
jnp
mov
lock
mov
jp
cmp
call
sti
mov
out
outsl
dec
xchg
or
dec
mov
mov
sbb
jecxz
jno
lret
pop
cli
inc
out
fcompl
adc
iret
push
adc
push
adc
jl
mov
push
lahf
in
aas
adc
push
xor
out
cmp
ljmp
mov
test
or
add
test
push
mov
repz
or
xchg
xorl
ss
loopne
outsl
lcall
into
and
mov
psllw
inc
ds
xchg
jns
fdivrl
aad
push
pop
lods
in
ja
push
xor
int
into
cltd
jo
jl
sub
arpl
pop
cmp
push
lret
lods
mov
or
sub
movsl
xchg
push
inc
mov
outsl
imul
out
cwtl
xchg
xlat
shl
mov
cmpb
and
mov
lea
cmp
mov
sbb
xor
mov
fmuls
cmc
cmpsl
pop
cld
in
fistps
push
mov
jo
cmp
inc
ss
or
enter
xchg
ficompl
pop
mov
js
stos
and
pop
subb
xchg
dec
cmpsb
dec
jle
int3
pop
and
ds
in
lds
ljmp
movsl
push
stc
lods
movsb
add
lock
mov
lret
or
xchg
cld
push
mov
ljmp
push
jl
in
or
sarl
data16
jecxz
jmp
cmp
enter
insl
and
pushf
out
lds
cmp
jl
sub
pushf
or
fistl
and
dec
inc
cmc
mov
out
jl
pop
data16
pusha
mov
push
mov
jl
lcall
inc
out
outsb
and
or
or
add
movsl
adcb
movl
push
cs
js
xchg
rcrl
mov
xor
sbb
xor
arpl
jno
xchg
jmp
sbb
leave
inc
jbe
pop
ja
mov
inc
dec
jae
out
xchg
daa
aas
sub
cmpsl
js
mov
cwtl
or
inc
xchg
pop
fcompl
sub
cmpsb
gs
mov
popf
popa
imul
sbb
jbe
sub
cltd
and
xorb
std
in
fdivl
mov
jbe
mov
mov
xor
jae
push
xor
push
inc
loope
inc
js
loope
xchg
enter
dec
cmp
es
sub
cmp
std
addr16
loopne
xorl
add
idiv
push
mov
mov
push
mov
cli
orl
xchg
push
dec
loopne
push
lret
insb
add
add
in
inc
lret
mov
rorl
or
add
mov
sbb
sahf
ljmp
pop
xchg
mov
pop
or
mov
push
mov
mov
pop
das
cmc
pop
testl
fistps
fcmovne
repnz
popf
mov
mov
fisubs
push
je
enter
pushf
loopne
sub
sub
push
push
sbb
sbb
inc
dec
or
rcrb
cmove
jne
pop
inc
push
mov
cmp
xchg
or
out
mov
ljmp
hlt
xchg
inc
dec
add
fwait
inc
mov
call
pop
push
push
xchg
cmp
mov
push
adc
jo
sti
lds
pop
jp
popf
iret
dec
push
imul
jmp
ret
mov
stos
leave
fst
sub
mov
loop
xor
adc
pushf
cmpsl
stc
movsl
mov
lods
in
sbb
xor
fcoml
fstpt
jmp
dec
push
sub
pop
pop
jp
mov
jae
ss
outsb
nop
popa
dec
push
mov
fs
bound
sti
cmp
push
jl
and
sbb
test
ljmp
fwait
int3
popa
xor
and
sub
add
testb
sub
ficoml
sbb
or
sahf
dec
or
inc
push
and
or
sbb
in
dec
enter
mov
in
pop
mov
sub
xchg
adc
and
pop
fwait
out
lds
jbe
mov
push
dec
daa
mov
jae
setge
std
mov
sbb
cs
push
sbbb
ljmp
stos
fistpl
dec
sti
pusha
cwtl
inc
xchg
call
xor
inc
test
fwait
cmp
sahf
ja
lds
mov
xchg
cmp
mov
jae
adcb
test
test
pop
lock
adc
jb
sahf
outsl
bound
dec
push
scas
sub
aad
mov
sub
mov
and
pop
mov
inc
icebp
mov
popf
cmp
outsl
popa
shl
stos
fcoms
mov
arpl
aaa
stc
xchg
mov
and
mov
fisubs
cmpsl
and
sarl
fsubrs
sbb
ficompl
adc
cli
aas
add
lds
cmp
cmp
js
call
push
adc
jmp
sbb
cli
push
jmp
ret
sbb
dec
sbb
lahf
and
push
fisubrl
je
mov
aam
rolb
mov
loope
sub
jp
notb
and
xchg
mov
jge
xchg
inc
adc
mov
ficompl
or
ds
les
mov
das
add
xor
mov
mov
fisubl
fdivs
add
and
in
dec
jb
mul
mulb
jne
nop
xchg
push
in
cmp
sub
pop
xchg
popa
cmp
mov
push
ret
scas
push
mov
pop
fdivs
sbb
sbb
mov
test
jo
jne
cmpsl
inc
push
cmp
jg
cmp
aas
push
mov
test
mov
mov
in
es
xlat
fistpll
adc
mov
mov
dec
loopne
mov
movsb
jb
std
mov
adc
movsl
mov
fisubrl
xor
shlb
push
cmp
in
mov
dec
cli
fcoml
in
dec
xor
push
jmp
adc
add
in
and
aas
adc
scas
mov
jg
dec
xor
std
loopne
cmp
popf
call
xchg
mov
dec
sub
jp
mov
popa
cmpsb
xchg
mov
das
sub
das
test
pop
les
push
xor
add
cmp
jae
je
xor
test
xlat
ljmp
push
fwait
test
ds
jle
lahf
pop
pop
nop
lahf
jno
fstps
sbb
or
dec
xchg
mov
mov
iret
negl
int3
loop
or
jl
sbb
popf
or
rorb
and
cmp
dec
cwtl
add
in
pop
addr16
jbe
fstpl
pop
test
sbb
fisttpll
pop
push
xchg
and
adc
pop
faddl
cwtl
sub
mov
out
test
call
jb
outsb
add
adc
jg
jge
repz
in
cli
stc
sbb
out
dec
movsl
shrl
or
daa
jne
xlat
fld
out
adc
je
repz
out
lods
xor
stos
es
mov
loop
nop
or
jns
hlt
lret
jl
je
dec
leave
or
ss
jno
icebp
lods
cld
mov
adc
jl
sbb
pop
and
andb
xchg
sbb
adc
and
loopne
push
lahf
loope
push
sarb
daa
icebp
cld
sub
add
arpl
test
mov
lea
pusha
and
stc
xchg
dec
and
mov
mov
jle
pop
dec
repnz
push
jnp
and
rorb
pop
lds
test
inc
xor
arpl
sub
sbb
mov
push
in
lret
aam
add
add
in
shl
push
cmc
inc
xor
dec
leave
int3
mov
mov
ljmp
push
mov
sub
adc
jne
arpl
and
lea
imul
loopne
stc
and
out
xor
add
fdivl
sbb
aad
jmp
loopnew
fists
mov
sub
dec
dec
mov
or
jae
repz
inc
sub
sbb
jmp
cltd
dec
push
sti
jnp
sbb
jb
outsb
pop
or
out
and
jbe
mov
ljmp
lret
out
jno
push
cmova
or
or
lret
cmc
xchg
arpl
into
test
sahf
cmp
jl
cmp
push
loop
xchg
movsb
adc
sahf
cs
adc
mov
loopne
mov
jnp
ja
jae
fdivs
cmpsb
pop
mov
pop
cwtl
je
nop
cmpsb
insb
inc
das
sbb
stos
mov
jbe
cmp
cld
fs
ret
xchg
mov
inc
mov
fidivrs
pop
sbb
rorb
adc
add
scas
lods
cmp
inc
push
out
scas
leave
mov
or
xchg
inc
mov
leave
call
test
insl
movsb
fwait
mov
xor
adc
dec
push
fwait
inc
pop
mov
jno
mov
test
mov
movsl
sbb
mov
insl
cmc
xor
add
jo
mov
pusha
pushf
aas
fmull
push
mov
ljmp
dec
cmp
mov
cld
cltd
mov
pop
dec
ret
enter
cmc
pop
jecxz
sub
in
les
push
cmpsb
jne
push
es
xchg
dec
jae
bound
lret
dec
mov
jg
jg
fwait
or
fxch
icebp
fnstcw
jmp
popf
aam
addr16
icebp
mov
movsb
mulb
mov
test
mov
pushf
fists
mov
or
scas
sti
or
and
pop
jmp
push
repz
jge
inc
pop
dec
mov
jnp
adc
lret
sbb
pop
outsl
repnz
or
sbb
js
add
adc
fwait
icebp
cmpsl
pop
xchg
or
dec
add
cld
jb
fs
cmp
enter
negl
or
iret
mov
scas
push
pop
pop
mov
andb
addr16
outsl
mov
push
data16
leave
dec
sub
push
jge
imul
mov
es
inc
mov
sub
rclb
and
sbb
or
adc
subl
cwtl
jge
jne
fbstp
jb
adc
rclb
mov
or
and
imull
xor
xchg
mov
cmc
xor
mov
leave
fs
sub
daa
and
lret
aaa
cli
push
mov
out
or
and
pop
aas
jmp
add
into
inc
fsubrs
test
ficomps
ds
addr16
xchg
inc
sbb
dec
add
xor
inc
push
pop
stc
subb
or
inc
mov
popf
xchg
or
fstps
iret
sbb
add
mov
mov
jge
adc
jne
push
int
andl
jle
fadds
repnz
and
movsl
out
mov
or
adc
cltd
push
dec
adc
gs
out
sbb
loopne
insl
jbe
push
repnz
nop
aaa
loopne
jne
xor
mov
push
or
imul
fmuls
fiaddl
jne
pop
inc
imul
sub
jo
sub
fcompl
sub
mov
hlt
push
inc
insl
sbb
xlat
push
cli
jmp
out
mov
inc
lods
inc
sbb
pop
push
int3
xchg
jo
in
test
and
pop
stos
pop
addr16
nop
ret
subb
out
nop
out
cld
in
jbe
pop
fldt
ss
sbb
jmp
mov
add
shlb
mov
shlb
jl
repnz
jge
ficompl
popf
jno
jge
das
stos
mov
lcall
cmpsb
sub
xor
scas
sahf
loope
lahf
and
ficoml
adc
icebp
je
add
xor
aas
inc
pop
xor
out
mov
outsl
push
adc
xor
and
shrb
std
sbb
cmc
data16
pushf
insl
push
mov
fdivl
mov
je
push
adc
repnz
lock
rolb
push
mov
add
shrb
out
sbb
iret
sti
mov
popf
test
dec
insb
shlb
stos
stos
in
sub
cltd
int3
mov
pop
add
xor
jg
sbb
aam
push
xor
xor
and
xchg
jnp
shl
xor
mov
notb
js
or
xor
js
push
mov
mov
pop
jne
rorb
and
cld
xchg
clc
and
jo
nop
scas
add
aad
cltd
pop
push
imul
mov
push
adc
sbb
inc
and
int
jge
xor
out
fstp
pop
aad
repnz
xchg
movsl
lods
hlt
test
add
mov
mov
fimull
adc
insl
lret
mov
in
icebp
sub
mov
movsb
dec
ss
idiv
sti
addr16
add
je
cmpsl
mov
clc
fsubl
sti
mov
dec
rcrb
mov
subl
push
ss
out
or
push
sar
xchg
cld
insb
sub
mov
sbb
dec
out
xchg
cmc
lret
jns
jecxz
addb
insl
dec
push
xchg
clc
nop
orl
lea
cmp
movsl
xchg
loop
xchg
cmpsl
jnp
push
fdivp
dec
dec
cwtl
xor
fistps
stos
filds
sub
lcall
sub
nop
xchg
int
mov
mov
mov
sarl
nop
add
inc
movsb
push
dec
or
sbb
cmp
pop
mov
push
movsl
mov
popa
xchg
push
imul
daa
mov
bound
sbb
xchg
ljmp
lcall
pop
and
sub
loop
outsb
lods
mov
rorb
add
push
sub
outsl
ss
and
dec
orb
dec
mov
jmp
push
push
or
inc
ret
pop
adc
lds
jg,pt
ds
mov
and
dec
lcall
jp
into
fldl
cmpsb
push
das
jge
xchg
std
xor
jo
inc
pand
loop
pushf
and
lds
popf
imul
daa
push
enter
sar
push
cwtl
push
dec
mov
cld
mov
xorb
mov
lcall
cmp
pop
push
mov
sub
mov
subl
scas
ficoms
arpl
cmp
lods
mov
and
xor
or
pop
rcrl
out
cmpsb
mov
gs
aaa
jbe
sub
jge
xor
sub
push
loope
sti
dec
jecxz
sub
dec
xchg
mov
mov
iret
nop
push
sahf
push
cmp
cmp
mov
mov
outsb
inc
xlat
adc
mov
incl
jmp
cs
pop
mov
dec
sbbl
mov
xchg
push
push
cmp
leave
mov
mov
mov
push
jg
push
lret
sbb
mov
roll
inc
fldt
cwtl
pop
ljmp
arpl
test
cmp
jle
lock
mov
pop
andl
sub
in
xchg
mov
int3
out
mov
pop
xchg
lods
sbbl
sbb
and
push
jle
leave
pusha
cltd
jno
xchg
mov
ja
and
mov
cmpsl
mov
daa
inc
dec
mov
jge
das
sub
mov
or
jae
cmp
adc
add
mov
inc
xor
pop
test
and
pop
adc
cwtl
test
aam
sub
fsubrs
aas
push
xchg
out
pop
leave
pop
xchg
imulb
js
gs
dec
daa
lret
mov
mov
insb
sbb
jne
mov
jbe
dec
sahf
lret
dec
mov
loop
jo
aad
out
mov
mov
imull
jae
ror
sbb
push
mov
xchg
imul
jp
inc
mov
scas
push
or
push
sub
add
fdivrs
clc
data16
inc
out
inc
jge
icebp
sub
cs
and
adc
loop
cmc
stc
repnz
ret
test
dec
mov
lret
xor
mov
sub
fwait
arpl
and
pusha
ret
lahf
add
mov
add
cs
int3
lods
mov
fadds
or
add
loopne
mov
dec
mov
or
lea
jne
cwtl
mov
into
sub
dec
xor
mov
mov
mov
ja
jp
pop
mov
xor
xchg
sbbl
mov
fstl
push
add
inc
xor
inc
mov
lret
pop
arpl
dec
movsb
test
arpl
dec
mov
daa
mov
pushf
mov
push
cs
or
jno
and
add
cmp
sub
out
xchg
aad
push
mov
call
mov
push
mov
add
mov
shl
cmpsl
xchg
jbe
or
xchg
daa
out
std
dec
pop
cmpsl
insb
sub
fimull
shufps
ret
jle
push
push
filds
jge
repz
repz
ret
cwtl
aas
bound
lahf
inc
ds
jae
lahf
pusha
movsl
mov
xchg
inc
push
outsl
pop
enter
outsb
sahf
mov
push
or
mov
mov
and
adc
aad
fs
clc
inc
scas
xor
in
aaa
dec
outsl
test
and
xor
dec
inc
dec
stos
mov
icebp
dec
cwtl
sbb
xchg
test
mov
clc
mov
pushf
loope
ja
and
mov
jnp
adcb
cmp
mov
popa
iret
cld
pop
repz
aaa
inc
mov
arpl
or
pop
lret
or
xchg
mov
lods
mov
test
add
orl
int
out
mov
xchg
movsb
shll
push
xchg
adc
subb
es
mov
fs
ja
scas
mov
xchg
adc
bound
mov
ljmp
dec
fildll
push
xchg
mov
mov
nop
sbb
push
xchg
inc
mov
lods
stos
movsl
jae
decb
jbe,pt
out
inc
pop
xchg
sbb
push
xor
xchg
inc
push
movsl
movsb
inc
ror
jmp
dec
jae
add
dec
dec
mov
loop
pop
arpl
mov
xchg
push
test
shll
out
adc
in
sahf
jecxz
mov
jmp
repnz
mov
sbb
nop
cli
mov
ror
in
dec
cmp
stc
sbb
inc
stos
push
dec
xchg
jmp
inc
dec
clc
jae
sbb
iret
cmpsl
mov
push
js
sahf
std
popf
pusha
sub
jo
loopne
aas
out
mov
out
dec
mov
outsl
scas
sub
push
mov
test
sbb
pop
repz
inc
ljmp
mov
in
dec
in
shrl
mov
inc
jmp
fst
aam
mov
dec
js
mov
testb
dec
idivb
out
fistps
outsb
mov
xlat
fisubrl
xchg
push
or
dec
mov
and
and
pop
xor
lea
aam
sub
add
mov
ds
stos
jne
jnp
jmp
adc
scas
mov
jno
pusha
mov
xchg
iret
jmp
shlb
repz
in
pop
pop
xchg
push
xorb
push
jmp
pop
les
sbb
jno
je
cwtl
inc
cwtl
icebp
and
inc
popf
cmpsl
movsb
mov
cld
fidivrs
xor
pop
mov
test
orl
ljmp
mov
nop
dec
ret
rcrl
inc
pop
addr16
stos
fdiv
aaa
scas
mov
and
adc
les
mov
lcall
test
loop
xor
jl
cmc
out
popa
pop
loopne
mov
das
bound
dec
rolb
and
mov
cmpsb
xor
andb
mov
jp
inc
pop
sbb
mov
push
out
call
insl
xor
cmpsl
jg
cmp
mov
repz
out
push
popa
cmc
ret
pop
insb
mov
lret
jp
stos
jae
outsl
lds
push
call
inc
dec
out
pop
inc
popf
inc
jo
lahf
xchg
popf
push
lret
and
pop
sahf
lahf
aam
shrb
push
xchg
mov
and
mov
in
in
pop
or
cmpsl
movl
add
mov
lcall
notl
pop
cmpsl
std
sub
sbb
jb
adc
lods
out
inc
imul
and
or
jg
push
inc
aaa
fistl
ja
out
mov
fildll
mov
out
pop
dec
jno
or
in
xchg
cmpsl
mov
mov
sar
push
pop
nop
cld
int3
sbb
sub
push
inc
stc
sbb
repz
repnz
inc
add
inc
data16
sbb
push
add
push
fistpll
movsb
push
xchg
movups
xchg
mov
js
push
stos
fldl
enter
or
out
push
cld
jp
lods
push
fnstcw
xchg
and
mov
mov
jne
hlt
adc
enter
repz
movsl
shlb
xlat
stos
cmp
adc
pop
lods
xlat
push
orb
out
or
lahf
mov
push
fistpll
mov
pcmpeqw
rol
ret
and
xor
xor
dec
lea
push
jl,pt
out
sub
incb
idivl
cmp
fstpl
xlat
jnp
pop
inc
hlt
into
shll
adc
outsb
add
notl
nop
outsb
repz
fcmovbe
inc
xlat
sub
or
ficoms
nop
push
cmp
xlat
gs
fldcw
and
popl
jmp
add
and
sbb
int
test
and
movsb
pop
hlt
rorl
imul
sub
push
bound
iret
enter
mov
aad
jnp
fucomp
sbb
pop
pop
jmp
fs
out
mov
cld
and
popa
aad
clc
sar
mov
dec
call
sbb
imul
out
lret
scas
stc
jge
call
fisttps
test
jnp
push
mov
dec
push
and
jmp
push
movsl
out
cmp
inc
dec
aam
sbb
cmp
lock
mov
out
push
addr16
cld
cmp
xor
fildll
loope
fidivs
out
mov
mov
in
bound
jnp
push
push
and
mov
mov
roll
sti
push
lret
mov
pop
pushf
add
xorl
pusha
lods
test
xor
or
fisubl
sbb
mov
add
or
data16
rorb
mov
mov
mov
xor
call
pop
dec
inc
mov
pop
ret
orl
mov
jmp
mov
xor
ret
mov
outsl
test
lods
fsubp
mov
mov
addr16
and
cmp
add
imul
push
outsb
xor
or
jge
fldt
lret
cld
icebp
sub
dec
push
cmp
loope
add
cmpsb
fstp
fimuls
inc
xchg
jg
sbb
inc
mov
add
mov
sbb
xor
fwait
jg
sbb
decb
hlt
test
jmp
in
test
sahf
out
test
popf
mov
sub
push
lds
cmp
sbb
mov
add
addb
pop
pop
cltd
jmp
xor
or
loope
mov
push
shlb
xchg
test
fimuls
or
xor
cld
jecxz
and
daa
nop
xchg
in
fstpl
cmp
xor
lods
pop
dec
mov
sbb
jl
cltd
mov
inc
or
inc
mov
enter
adc
cli
or
outsb
mov
mov
mov
jecxz
adc
lods
test
add
xchg
adc
fisttpll
mov
ja
cltd
bound
cltd
and
lahf
jo
mov
jo
aad
add
inc
dec
dec
adc
and
sbb
push
dec
xchg
stc
cld
fs
arpl
movsb
ficomps
xchg
pop
jg
jnp
nop
std
popf
call
push
cmp
iret
xor
jne
test
mov
dec
adc
movsl
jns
fptan
leave
adc
jbe
push
outsl
jmp
int
lret
insb
sbb
int3
and
ss
scas
std
les
sbb
fbld
xor
push
rolb
in
cmp
adc
dec
pop
mov
cmp
fwait
imul
sbb
repnz
sbb
or
lock
dec
push
fcmovnbe
lret
aas
xchg
pop
mov
cvtps2pi
iret
add
es
sbb
xor
jne
pop
inc
and
sub
jle
inc
repz
out
loope
mov
shll
cld
mov
dec
mov
popa
insb
leave
pop
fidivl
push
sbb
and
sbb
push
or
mov
loope
arpl
lods
mov
jg
sahf
and
dec
sub
sbb
sti
xchg
or
int
pop
int
jnp
jmp
dec
fldcw
dec
adcb
or
outsb
lcall
adc
subl
xchg
enter
cmpsb
mov
mov
rorl
rcll
sub
data16
ret
mov
or
lret
and
cmp
mov
in
mov
sti
or
loop
pop
inc
lea
cmp
cs
xor
sahf
or
push
xchg
inc
add
sbb
and
adc
xor
fiaddl
mov
inc
fcmovne
imul
clc
nop
pop
adc
adc
repnz
dec
sbb
push
xor
dec
pop
je
fnstenv
mov
adc
and
js
mov
faddl
cmpsb
or
xchg
movsl
mov
popa
pop
aas
add
pop
loop
push
mov
mov
xor
jp
xor
lret
cmp
imul
jge
test
fcompl
or
sbb
xchg
ss
jns
and
orl
orl
add
and
test
mov
lea
cmpsl
push
out
aas
icebp
mov
pop
sarl
cmp
pop
insb
rcr
leave
jmp
cmpsl
jae
mov
mov
sub
popf
pop
mov
std
or
lcall
mov
dec
gs
rorb
cwtl
or
mov
mov
lret
test
in
push
mov
cmp
push
iret
shll
xlat
jno
fmull
mov
js
mov
stos
push
mov
roll
jns
scas
outsb
gs
leave
outsl
pop
stc
xor
adc
data16
outsl
jge
jno
imul
fidivs
ja
cltd
dec
sarb
icebp
lea
insb
sahf
adc
pop
mov
mov
jae
cwtl
nop
ret
and
mov
rclb
add
cmc
into
in
xor
mov
jg
push
xlat
push
mov
cmp
xchg
pop
mov
inc
dec
xlat
pop
xchg
mov
roll
xchg
xor
sbbl
mov
ret
xor
push
sub
or
sub
sub
jb
add
mov
cmp
dec
pop
lds
push
dec
pop
cld
push
inc
xor
aad
adc
aaa
dec
cmp
push
mov
or
clc
and
sahf
lock
cmpb
cmpsl
sbb
cmp
int3
jo
lods
pushf
shll
fadds
inc
xor
jo
inc
repnz
jno
jne
mov
sbb
call
fs
adc
mov
loopne
fsubp
sub
outsl
popf
out
or
mov
mov
dec
insb
imul
ret
mov
sti
aad
add
or
jl
cmpsb
mov
pop
and
into
shll
cs
mov
adc
ret
pusha
push
dec
mov
rcrb
jmp
adc
cmp
sbb
push
mov
cmpsb
sub
sub
xchg
scas
xchg
mov
repnz
xor
into
rcll
and
xchg
outsl
imulb
jbe
xchg
pop
lret
test
repnz
or
xor
xchg
idivl
mov
xchg
push
fisubrs
xlat
pop
sub
movsb
insl
xor
add
cld
jle
cli
leave
aam
push
lods
dec
popf
pop
and
test
inc
sbb
jg
jno
rorl
aam
xlat
xor
mov
xor
hlt
pop
ret
ret
add
fldt
in
int
sbb
fidivl
pusha
pusha
cmc
mov
cmp
jb
xchg
insl
inc
insb
andl
lret
ficoml
popf
mov
insl
and
leave
std
dec
mov
mov
popf
imul
enter
das
test
mov
push
int3
pop
mov
inc
stc
dec
push
push
fcmovnu
lcall
hlt
imul
ucomiss
mov
rol
jge
jne
movsl
into
adc
fstp
cs
lcall
push
xor
or
pop
jne
xchg
pop
mov
stos
scas
stos
pusha
adc
icebp
ret
movsl
in
xchg
nop
xor
sbb
xor
mov
es
push
mov
cli
fcompl
push
inc
shlb
mov
mov
pop
jb
jle
out
repz
push
shl
xchg
dec
jae
int3
push
add
dec
jle
test
mul
les
jo
pop
push
mov
test
dec
add
call
add
mov
xor
mov
loop
sbb
bound
sub
ret
das
push
shrl
movsb
dec
sbb
iret
addr16
jg
mov
orb
fwait
xor
loope
ret
dec
stos
mov
xchg
test
mov
mov
lea
inc
repnz
cmp
push
ud0
mov
arpl
and
movsl
testb
ss
imul
popa
jl
inc
cmp
iretw
or
cmpsb
inc
aam
aaa
xor
jmp
mov
add
add
lahf
ljmp
push
lret
js
loope
loopne
pusha
bound
xchg
std
or
lods
push
mov
xchg
push
sbb
fildll
fstpt
jge
testb
cmp
shll
in
sub
pop
aam
outsl
mov
enter
mov
mov
popf
or
pop
xorl
hlt
inc
addr16
sub
mov
out
pop
dec
fwait
sahf
inc
xchg
shrl
xchg
jne
sti
rclb
lcall
aam
out
test
jns
outsb
pop
mov
sub
sbb
shrl
pop
and
ss
sub
adc
cmp
mov
pop
mov
fdivs
mov
out
pop
inc
bound
nop
pop
leave
pop
shll
or
mov
rol
sub
hlt
xchg
orb
dec
jo
movsl
loope
sbb
xchg
cmp
push
xor
xor
ja
std
mov
mov
pop
outsb
insb
jno
push
mov
lret
movsl
sbb
mov
mov
cmp
leave
adc
shrb
add
bound
ret
sub
mov
aas
adc
clc
jmp
dec
scas
je
mov
outsl
adc
test
mov
pop
cltd
orl
in
mov
jg
inc
mov
psraw
fistpll
xor
pop
or
mov
add
hlt
leave
imull
xor
cmp
xchg
fiaddl
xor
lods
dec
pop
mov
push
pop
push
cmp
mov
push
or
mov
lods
addr16
sbb
inc
repnz
pop
push
cmpb
cs
xor
add
xlat
or
icebp
pop
inc
les
out
sarl
mov
pop
pop
loop
xor
dec
pop
or
insb
mov
dec
jle
icebp
orb
out
in
cltd
sbb
lret
fimull
xor
or
adc
cmp
cs
xchg
pushf
loopne
inc
call
mov
dec
jne
push
icebp
and
push
mov
cmp
sbb
adc
stos
or
cmp
xorb
adc
outsl
cmp
out
popf
pop
ss
mov
daa
push
fwait
popa
xchg
imulb
fcoml
push
mov
and
mov
push
push
iret
mov
mov
pop
jmp
cmpb
push
push
adc
xchg
jl
stos
push
or
pop
bound
lret
sub
mov
loop
lods
xor
sub
jnp
sub
outsl
or
adcl
jg
add
lods
mov
sar
mov
stc
test
add
insl
int
aas
adc
add
mov
push
xor
cwtl
mov
insb
test
insl
xor
repnz
pushf
cmpl
clc
fwait
movnti
dec
add
mov
inc
add
xor
inc
aad
push
imul
mov
dec
scas
out
rolb
sub
pop
mov
dec
add
mov
sub
xor
mov
mov
dec
pushl
jg
cmc
sub
sub
sub
inc
mov
test
dec
push
gs
sub
cmc
or
pop
xorb
or
je
mov
stc
test
fdivs
inc
xchg
push
jns
xchg
movsl
and
or
dec
scas
clc
dec
xchg
add
xor
mov
sbb
rcrl
dec
inc
enter
add
or
xchg
xlat
std
rcrb
xchg
dec
cmp
mov
cmp
data16
fdiv
sbb
jne
dec
jno
jns
mov
cwtl
push
enter
rcl
sbb
ds
pop
cmp
jl
fldt
das
stos
pop
fmul
adc
jb
jecxz
sarb
sahf
mov
or
xor
cmpsl
repnz
ret
push
sahf
xchg
rorb
dec
pushf
insb
mov
sbb
adc
test
dec
ret
sub
test
js
fnstenv
sbb
mov
das
jg
movsb
jbe
inc
stos
int3
out
leave
data16
pop
dec
mov
mov
pop
mov
xchg
jbe
dec
js
jns
pop
addl
dec
imul
rol
mov
lcall
xchg
lret
inc
push
insb
inc
aam
divl
push
xchg
push
mov
rcrb
cmpsl
lret
sahf
fnstcw
mov
mov
mov
push
adc
sbb
xchg
and
jl
adc
xlat
mov
stos
cmp
lcall
xchg
dec
sahf
daa
or
mov
ret
xchg
shr
inc
dec
and
jp
push
test
xchg
movsb
pop
inc
jge
test
xor
lods
xor
push
dec
das
cli
xor
dec
mov
mov
lds
test
sub
sarl
bnd
outsl
pop
bound
shrb
sbb
popf
orl
test
or
jae
fs
int
adc
out
hlt
adc
pop
jp
out
push
xchg
stc
add
cmp
dec
pop
mov
inc
fisttpl
test
leave
insl
test
mov
ret
dec
js
movsl
fadds
adc
jle
aam
mov
pop
ds
imul
stos
fistl
cmp
fucomp
in
xchg
sbb
add
pop
cmp
daa
jno
or
pop
sub
sarb
jnp
idivb
pushf
xchg
mov
in
mov
and
enter
bound
inc
fsubrs
xchg
jge
or
bound
dec
jp
shlb
imul
push
data16
addr16
lea
ljmp
push
loope
xchg
adc
fcompl
lea
out
sbb
pop
add
mov
aaa
lahf
rcrb
add
mov
addr16
mov
push
pusha
mov
lahf
pop
inc
js
push
push
add
inc
ret
dec
stc
pushf
aas
jne
adc
repnz
sbb
sub
mov
ret
adc
inc
or
jbe
ljmp
jo
xor
push
dec
inc
adc
pop
sbb
pop
pop
cmpsb
je
pop
fsubl
aad
or
es
je
mov
pop
or
xchg
sahf
push
lcall
inc
xor
lcall
loop
repnz
ror
jbe
dec
or
xchg
addl
add
lcall
adc
adc
pop
popf
push
add
jbe
loope
jmp
aad
dec
fldenv
inc
inc
in
and
clc
out
ss
ljmp
dec
shrl
jne,pn
ret
loop
stos
xor
daa
aam
sbb
repnz
cmpsb
ret
icebp
loope
push
hlt
push
out
and
scas
ret
mov
and
sub
mov
fildll
inc
cmpsb
loop
inc
nop
push
notl
jo
in
pop
movsb
fimull
movsl
filds
scas
inc
scas
pop
dec
jecxz
cli
mov
fildl
shll
icebp
xor
jne
add
mov
sub
jmp
vpsubusb
fiadds
imul
mov
shlb
lret
sub
rolb
fwait
inc
icebp
out
insl
orb
push
and
push
addr16
ss
test
dec
gs
push
jo
jmp
push
fistl
sbb
sub
lea
inc
and
scas
subb
imul
and
jg
dec
jbe
fisttpl
arpl
cmpsl
sbb
mov
cmpsb
cmpb
fimuls
mov
fbstp
sti
cmc
mov
mov
push
cwtl
jecxz
sti
sti
add
nop
fsubrp
dec
jecxz
aaa
or
in
add
xchg
ds
mov
dec
ror
push
test
jmp
jb
lods
jecxz
cmp
cmc
sbb
shrl
dec
iret
jb
call
imul
pop
sbb
call
neg
push
pop
les
shll
je
cmpl
pop
and
xlat
lret
add
or
jbe
inc
push
pop
scas
jl
push
mov
fdivs
mov
scas
aam
cmp
stos
adc
xor
or
dec
xchg
dec
orl
sbb
sbb
out
jno
sbb
push
cmc
jno
cmovb
test
mov
insb
stc
rol
int3
iret
inc
inc
shll
sbb
fistpll
and
fnstsw
and
fimull
popf
xchg
iret
test
xlat
add
jo
jp
pop
into
xchg
push
jnp
push
mov
mov
ss
js
adc
imul
mov
hlt
mov
icebp
jecxz
adc
sbb
and
js
xchg
add
test
lret
enter
insl
cmpl
or
std
mov
mov
frstor
test
jbe
loop
icebp
cld
imul
in
addr16
stos
rcrl
push
faddl
pusha
call
mov
mov
lret
inc
les
mov
push
daa
cwtl
loopne
push
repnz
xorl
jo
and
mov
loope
mov
call
add
push
dec
mov
aad
mov
int3
lock
sbb
dec
lock
loope
or
and
mov
das
push
movl
js
sub
rcr
int
and
mov
mov
mov
xor
sub
mov
push
es
sarl
cmp
in
and
xchg
and
dec
or
mov
mov
cmpsb
inc
comiss
xor
iret
mov
sub
addr16
sti
lea
addl
mov
cmp
test
cmpsb
into
inc
std
mov
ret
jge
imul
das
mov
insl
lds
in
test
sbb
xlat
adc
into
insb
insb
dec
add
bound
and
lods
cwtl
rcll
test
mov
call
ror
repnz
das
imul
out
cmpsb
fwait
cmpsb
outsl
push
ds
rcr
add
sub
dec
pop
cmc
jp
pop
fldt
jns
dec
stos
cmp
push
push
leave
jbe
jge
inc
dec
cmpsb
jno
mov
fnsave
pop
pop
pop
xchg
jae
iret
add
push
adc
stos
jmp
nop
and
leave
adc
popa
mov
in
test
mov
repnz
imul
psraw
test
gs
into
sub
and
fcom
cli
int
loop
popa
fdivrs
call
jne
lds
dec
sahf
adc
cmc
jns
jns
sbb
push
out
sbb
sub
xchg
add
push
and
imul
or
lcall
daa
xor
mov
lods
mov
add
dec
stc
or
mov
push
cmp
pop
inc
inc
ljmp
push
jmp
lret
pushf
js
jecxz
sub
clc
mov
xchg
les
cli
jg
jg
mov
out
xchg
loop
xchg
xchg
andl
mov
xor
xlat
orb
and
into
xor
adc
add
cltd
cwtl
repz
and
fdivs
outsb
sbb
stos
je
cmpsl
ds
inc
mov
pop
cmpl
jbe
mov
adc
jnp
jge
ja
pusha
cld
push
test
jns
sti
popf
jl
cmp
sbb
imul
jo
jmp
mov
rol
cs
cmc
cmp
jle
in
push
xor
cmp
jge
dec
jl
repnz
jp
push
pop
mov
lret
jmp
or
xor
enter
aad
add
xchg
cli
jp
adc
ret
adc
jg
arpl
into
jne
or
cld
test
hlt
mov
inc
sbb
jmp
scas
inc
lahf
pop
mov
clc
push
xchg
fstpt
fcom
out
flds
push
mov
test
xor
lds
adc
dec
fwait
inc
fldt
js
neg
cmp
faddl
sub
mov
stos
sahf
pop
movsl
enter
stos
xchg
pop
cmpsb
xor
push
addr16
les
cld
pop
and
push
adc
mov
sbb
int
push
aad
pop
sbb
adcl
addr16
xor
push
adc
popf
cmp
xchg
enter
xor
and
imul
insb
jo
mov
dec
enter
xlat
jecxz
das
popa
xchg
xor
and
and
adc
cmp
adc
jmp
mov
cmp
ret
sub
xor
mov
cmpsl
or
jns
arpl
outsb
xor
dec
lcall
movsb
nop
outsb
xchg
sbb
push
add
in
adc
test
fdiv
add
jp
mov
push
sub
adcl
out
xchg
mov
pop
loopne
into
fs
xchg
xchg
rorb
ret
inc
jae
pop
push
and
sub
push
sbb
cmpsb
dec
push
in
push
inc
xchg
xchg
cmovno
out
lahf
push
out
popf
ss
dec
iret
push
daa
inc
push
jmp
push
xor
and
sti
cmp
push
cmp
rep
pop
jns
insl
inc
mov
pushf
movsl
xor
ror
add
pop
out
xor
sub
out
push
add
lret
leave
sub
dec
imul
inc
aas
ljmp
cmp
mov
lds
andl
out
or
mov
ja
pop
fbld
fwait
or
idivl
neg
daa
sbb
add
cli
or
mov
call
es
cmp
decl
pop
add
jecxz
cmc
sbb
lret
dec
stos
add
add
ds
cs
and
andps
mov
loopne
xor
xchg
ja
xchg
mov
ret
jmp
decl
add
sub
or
jno
stos
ret
pop
sub
xchg
insl
enter
push
push
loope
sbb
inc
xchg
enter
rclb
dec
daa
repz
lods
add
stos
insb
dec
sbbb
jne
push
push
imul
cwtl
sbb
pop
out
or
pushf
leave
std
sub
push
pusha
and
cmp
ja
test
js
mov
divl
or
dec
sbb
leave
inc
movsb
fsubs
pop
xor
add
jp
push
mov
jb
cmc
ja
jns
or
out
sahf
dec
xor
xchg
sbb
add
xchg
pop
mov
mov
sub
test
add
jns
inc
es
fwait
sub
ja
mov
pusha
fs
sub
jp
jb
push
mov
or
jecxz
xchg
call
cmc
add
pushf
insl
inc
outsl
test
pop
das
orl
cmp
sbb
sbb
ss
movsb
enter
scas
je
dec
xor
mov
sbb
xor
pop
adc
xor
and
or
add
mov
out
nop
int3
cltd
das
lahf
mov
sti
push
aam
and
xor
mov
adc
and
ljmp
sbb
jnp
xor
sti
bound
inc
sbb
mov
decl
arpl
push
and
in
mov
je
xchg
push
mov
popf
nop
rclb
ret
xchg
call
lahf
fadds
jg
outsb
cmpsb
sub
mov
scas
xor
inc
pop
nop
lret
cmpsb
push
or
xchg
dec
out
lret
push
sbb
orl
jmp
mov
fadds
pop
dec
dec
gs
out
pusha
lds
push
xchg
outsl
sbb
ficomps
or
ss
sbb
test
cmpsb
test
sti
push
outsl
add
xchg
add
xchg
push
add
mov
sarb
or
out
aad
xchg
aam
loope
or
or
in
mov
lret
adc
arpl
ret
clc
and
outsb
jbe
dec
movsl
popa
xchg
xchg
add
ds
loop
test
jnp
lahf
push
mov
adc
loope
test
push
js
into
add
pop
jl
nop
call
inc
push
adc
pop
cmpsb
jg
cmp
sbb
push
adc
sahf
mov
xor
adc
outsl
adc
dec
jg
loop
repnz
out
jbe
fcmovnbe
mov
ret
out
sbb
stos
pop
xchg
ds
pop
outsl
xor
pop
in
mov
popa
pop
les
mov
stos
das
cmp
cwtl
sbb
std
push
jbe
mov
mov
dec
pop
mov
or
jp
xchg
std
iret
cs
stos
add
pop
cmpsb
stos
out
fsts
je
cmp
sbb
mov
jno
mov
insl
cmp
rcrb
or
add
testl
and
jge
mov
xchg
add
adc
outsl
pusha
add
push
mov
inc
and
jmp
xchg
xor
pop
lods
outsb
sbb
mov
pop
rclb
sbb
pusha
push
add
dec
test
bound
cs
jns
dec
jbe
aad
test
jae
aaa
pop
cmp
pop
push
fisubl
sbb
dec
insl
sub
dec
inc
decb
cmc
cld
inc
fwait
daa
mov
mov
movsl
call
lret
inc
or
or
pop
and
pop
cli
inc
in
mov
mov
repz
fs
and
mov
xlat
dec
fadd
sub
int
sbb
xor
adc
imul
xor
aam
insb
add
xor
and
nop
xor
sti
adc
xlat
lods
dec
pushf
jb
dec
and
aaa
dec
sbb
dec
mov
jmp
mov
mov
aas
popf
into
mov
cmc
mov
inc
pop
xchg
and
insl
pop
cmp
testb
sbb
divb
cmp
bound
out
fists
mov
add
jle
popa
loop
lahf
adc
inc
push
cmp
movsl
js
mov
lds
adc
xchg
negl
ss
cmp
rcrl
push
adc
int3
cmpsl
sbb
stos
nop
lea
shll
dec
bound
xchg
mov
loope
popl
jg
xor
mov
xor
inc
sub
mov
sub
int3
xlat
sub
scas
call
mov
lahf
push
andl
adc
loopne
mov
and
loop
jns
ss
mov
roll
in
dec
test
xchg
and
shr
dec
stos
loopne
add
repz
js,pn
jmp
icebp
push
stc
jns
mov
rclb
mov
pushf
aaa
call
mov
flds
adc
jo
sub
inc
or
sbb
cmp
add
add
inc
dec
xor
cli
dec
mov
fwait
and
mov
xchg
lds
xchg
sbb
adc
addl
cwtl
psubusb
scas
js
outsb
fisubl
hlt
jecxz
mov
lcall
pop
push
jmp
sbb
push
pushf
cmpsl
fs
std
add
sbb
mov
stos
and
daa
xor
jns
jae
or
mov
push
sbb
jbe
lods
or
and
adc
mov
test
rorb
jns
fdivs
rclb
push
int3
or
movl
cmp
pop
cmp
and
sub
stos
out
dec
push
fisttpl
out
jae
int
shrb
inc
cmp
mov
int3
adc
xchg
int
ficomps
pop
setbe
inc
xchg
rorl
fldt
cmpsl
das
in
cmp
and
sbb
ljmp
push
mov
movsl
add
dec
ds
das
add
ret
cli
sbb
jg
leave
test
aam
jbe
aaa
pushf
cli
shll
push
sub
es
stc
lods
sbb
fcompl
std
pusha
pusha
or
sub
test
adc
imul
xor
xchg
mov
test
sbb
xor
pushf
add
call
push
mov
xchg
add
and
and
cmp
jmp
insl
inc
xlat
dec
mov
push
cld
inc
shlb
xchg
and
je
fucomi
mov
scas
sub
enter
sqrtps
aas
in
jne
sub
in
sbb
mov
out
cmpsl
xor
repz
testb
dec
sbb
dec
sbb
pop
mov
mov
inc
push
test
repz
imul
jecxz
in
inc
inc
das
test
adc
push
test
pop
inc
aas
sub
xchg
outsb
testl
mov
aad
test
lock
xchg
sub
jmp
cmp
pop
fcoml
sbb
inc
out
int3
jg
je
loope
mov
fmull
pop
inc
and
adc
push
shrl
push
lods
sub
clc
xlat
fwait
ds
and
jnp
adc
mov
or
cld
fiadds
in
adc
push
dec
ficomps
sbb
adc
loopne
inc
and
cmpb
stos
dec
jns
shl
xchg
xchg
mov
xor
adc
push
dec
dec
imul
pop
sub
lahf
inc
lcall
or
les
daa
sub
std
push
dec
adc
loopne
jb
push
jmp
test
lret
fcoms
and
ds
jnp
scas
sti
aaa
cmpsb
fidivrs
jl
jp
cmp
icebp
inc
call
lcall
arpl
sub
hlt
orl
lods
push
jg
fstl
ret
pop
adc
lahf
xchg
orl
mov
sub
out
lret
mov
popa
clc
sbb
add
push
repnz
scas
and
mov
sub
repnz
mov
add
es
cmc
insl
fmuls
inc
insb
insl
aam
dec
jmp
pop
sar
jg
loop
pop
mov
addr16
mov
in
lea
lods
add
movsl
jne
and
or
mov
mov
jmp
in
stos
int
iret
rcrl
mov
into
push
jl
inc
mov
xchg
sbb
sub
jo
scas
sbb
repz
mov
adc
jle
adcl
push
lds
notb
movsb
or
and
repnz
int3
inc
fistl
push
fisttpll
pinsrw
adc
lock
shr
fwait
xlat
pop
sub
inc
xchg
cmpsb
loopne
in
dec
cwtl
xchg
int3
pop
cmp
xor
push
sbb
hlt
mov
or
mov
outsb
notl
lahf
sbb
jne
sahf
ljmp
icebp
test
cs
pop
insl
xor
or
int3
jge
gs
jns
mov
test
add
mov
subl
test
jle
and
cmp
clc
jnp
jg
in
inc
dec
pop
add
mov
mov
add
pop
or
push
jno
or
mov
adc
and
test
dec
in
sti
sahf
repnz
ret
rcrb
mov
xor
push
int3
test
repz
sub
pop
mov
movsl
xchg
xchg
sub
pop
cmp
cmpsl
and
push
jno
xor
add
xchg
repz
and
jp
rcrb
hlt
cmp
dec
mov
push
mov
pop
mov
stos
shl
or
adc
push
enter
add
or
outsb
pop
jp
loopne
in
cwtl
sahf
jns
lods
push
es
les
mov
or
out
leave
scas
cmp
mov
stos
sar
fildll
jle
leave
mov
insl
stc
adc
fadd
or
push
pop
mov
cmc
andl
push
ss
in
addr16
loope
pop
mov
ret
in
xchg
std
pop
insl
pusha
icebp
jmp
pop
inc
rcll
inc
pop
cmp
outsl
fcoml
jg
out
pop
sbb
push
in
mov
and
dec
sarl
cmpsb
cmc
lods
jl
outsl
shl
xor
or
jge
push
push
pop
loope
cli
pop
not
push
stc
test
arpl
jp
lret
xchg
xor
and
mov
pop
dec
rcll
loopne
jg
and
xchg
into
mov
mov
out
stos
lea
jp
test
enter
int
cwtl
out
pusha
aaa
push
imul
ret
add
xchg
xchg
rorb
adc
roll
dec
bound
lds
xchg
adc
gs
adc
push
jno
adc
add
ret
mov
mov
loop
add
pop
add
mov
jb
cmp
lea
addb
fs
incb
test
and
loop
out
sub
pushf
pop
xor
inc
and
or
jge
xchg
xchg
and
cmp
sub
dec
repz
pushl
enter
dec
out
mov
js
jl
fwait
bnd
mov
sti
scas
out
xchg
ds
mov
sub
inc
rorb
icebp
xchg
sub
mov
cmp
cmp
test
repnz
fsubl
pop
dec
mov
and
sbb
in
push
add
out
sbb
cli
rcrl
addl
cmp
neg
aaa
in
pop
call
cmp
lock
fwait
mov
mov
push
adc
ror
test
and
aas
in
aam
loopne
mov
adcl
pushf
cli
jno
sub
jge
mov
inc
cmp
or
mov
lods
fincstp
lahf
adc
daa
inc
ja
clc
sbb
stc
clc
fndisi(8087
lods
daa
in
mov
into
mov
movsl
pop
fisttpl
filds
jge
jae
cmp
fisubs
imul
jno
sub
movsl
jbe
push
imul
imul
std
pop
pop
or
or
xchg
dec
and
mov
pop
dec
xchg
or
sbb
jno
sbb
adc
clc
mov
xor
fistps
pop
shll
and
stc
push
add
xchg
sbb
jmp
inc
or
mov
popa
sub
out
mov
int3
add
lods
lcall
out
pop
sbb
cmpl
push
or
inc
sbb
mov
outsl
divb
mov
pop
pushl
imul
aam
xor
lock
aaa
pop
adc
jecxz
mov
mov
sbb
adcl
add
into
mov
adc
adc
or
dec
mov
stos
std
cwtl
xor
and
fwait
mov
int
sbbb
xor
mov
lret
scas
sahf
inc
lahf
out
cmpsb
fcomi
mov
inc
mov
dec
sti
lock
adc
je
mov
aas
repnz
sarb
xchg
sbb
jg
adc
sbb
xor
push
xor
mov
jae
mov
and
jl
outsb
pop
aad
popa
lret
test
or
scas
fadds
jp
lods
sub
push
pop
aas
mov
mov
xchg
js
loope
mov
stos
dec
fs
pop
dec
pop
mov
cmp
pop
mov
or
test
add
xchg
in
subl
subb
or
cmp
out
rorb
outsb
xchg
inc
fistps
sbb
sub
inc
das
je
adc
insb
gs
pop
xorl
jl
jo
cmp
jl
pushf
pop
push
lcall
pop
in
addr16
mov
mov
adc
loop
xlat
fsubs
sub
dec
mov
movsb
outsl
stos
insl
scas
inc
mov
mov
push
in
outsl
movsl
adc
dec
inc
frstor
xor
sbb
repz
insl
sbb
jp
adc
or
gs
outsb
or
lea
inc
pop
mov
mov
lock
rcl
sbb
imul
inc
inc
add
or
xchg
and
int
push
pop
mov
movsl
jbe
xchg
into
xchg
xchg
xcrypt-cfb
cmpsl
out
dec
mov
aas
xchg
cmp
cmp
pop
sbb
jae
mov
fiaddl
inc
aam
cltd
mov
adc
int3
fmul
sub
pop
mov
push
push
sub
out
cmp
or
dec
inc
das
push
stos
bound
or
sahf
cmp
mov
and
sub
je
ret
ret
push
es
jg
mov
fidivl
sbb
popf
leave
scas
sub
lret
dec
insl
inc
mov
and
stc
lock
cwtl
mov
cmp
add
arpl
push
cmp
add
or
jg
pop
jmp
jl
rolb
and
arpl
popf
and
mov
enter
ljmp
ret
jns
ds
bound
imul
rcl
jne
pop
jb
xchg
jmp
pop
inc
mov
cli
addb
sbb
ljmp
xchg
xor
push
int3
dec
xchg
insb
jnp
pushf
in
pop
js
dec
mov
mov
addl
jne
outsb
inc
pop
fcomps
call
rcr
into
cld
and
and
lods
jae
jae
push
int3
das
popf
in
or
xchg
fisubs
stc
mov
mov
cmp
in
pop
mov
pop
mov
mov
jnp
xor
dec
flds
sti
daa
mov
inc
leave
in
insb
popa
xor
loop
adc
xlat
xlat
push
outsb
rcl
pop
es
imul
repz
adc
repz
push
int
rclb
test
sbb
xor
mov
pop
push
add
lcall
cmp
cli
orb
loopne
testl
inc
cwtl
mov
test
movsb
ret
in
lret
jp
out
fucomi
pop
ret
inc
push
inc
push
imul
lock
inc
jmp
adc
xlat
shlb
cltd
popa
clc
sbb
push
inc
xor
pop
mov
push
aam
and
add
pop
dec
hlt
mov
jecxz
cli
sbb
dec
popf
or
shlb
daa
inc
mov
je
add
pushf
int
cmp
aas
and
test
out
out
ret
sub
xchg
xchg
cmpb
adc
mov
lret
cmpsl
dec
jns
xchg
add
dec
and
mov
in
rol
outsl
sub
dec
into
scas
add
push
adc
inc
jno
std
and
out
outsl
pop
ljmp
nop
xchg
adc
into
push
in
xor
xchg
or
dec
testl
insb
stc
aam
cmp
sbb
data16
cvttps2pi
mov
mov
movsl
imul
imul
mov
push
mov
aaa
pushf
repz
jmp
aas
add
ja
dec
dec
and
dec
dec
jne
test
cmp
fmull
shrl
mov
or
fdivr
negb
xchg
fwait
out
and
dec
repnz
sahf
push
add
fiadds
xor
nop
daa
or
loopne
jecxz
inc
mov
testl
cmp
mov
stos
jle
jp
jg
repz
jle
nop
int
mov
out
enter
mov
xor
push
sub
fimull
add
pusha
rclb
sbb
xor
cmp
lock
leave
inc
jl
popw
cmp
dec
xlat
mov
inc
outsb
pushf
mov
dec
insb
lock
mov
cmp
cmp
out
je
sub
popa
push
lcall
add
bound
add
lret
adc
adc
shl
aad
inc
mov
cmpsb
and
rorl
and
add
pop
push
xor
jb
dec
cmpsb
sub
stc
xor
test
pop
aas
aad
jge
stos
insl
gs
pop
nop
add
ss
or
add
mov
cmp
push
into
sbb
xor
inc
dec
jno
cmpsl
or
aas
rorl
es
aaa
xchg
adcb
push
aas
jnp
dec
mov
sub
sub
push
mov
out
adc
mov
add
ja
push
iret
cmp
in
jg
pop
into
xor
jae
xchg
enter
pop
sub
lret
mov
add
outsl
jp
xchg
mov
jae
scas
mov
dec
push
jmp
inc
inc
xor
into
adc
xchg
call
lods
stos
fnstcw
fdivrl
sbb
push
int3
lea
in
fisttps
in
jecxz
popf
jno
jno
mov
jo
pop
fdivl
push
dec
ds
cmp
and
sbb
push
ljmp
and
xlat
inc
jp
fcomp
orl
bound
and
pushf
inc
loope
or
fsubr
mov
mov
jbe
jb
sbb
jns
jne
ret
ret
mov
cmpb
adcb
movsl
hlt
popf
and
xor
dec
push
sbb
subb
mov
add
sbb
fs
movsl
push
sbb
inc
mov
test
cmp
aas
lds
les
scas
int
lret
in
sub
adc
out
xchg
lcall
push
insl
cli
lcall
xor
sahf
pop
imul
push
pop
insb
shr
dec
fists
jo
xor
lock
aas
dec
xchg
inc
loope
dec
and
nop
loop
insb
movb
test
ja
scas
lods
mov
test
or
dec
scas
push
pop
push
xchg
push
jne
dec
cmp
cmp
mov
mov
pusha
in
dec
test
push
and
push
inc
movsl
bound
lcall
jnp
icebp
sub
sub
cmp
into
dec
cmp
cmp
sbb
inc
repnz
or
cmp
pop
push
outsb
jmp
int
pushf
pop
mov
cmp
aam
test
mov
mov
clc
shll
mov
inc
mov
sahf
jg
and
mov
lahf
cld
sub
push
cltd
jne
mov
pop
xlat
jg
call
fwait
xor
lahf
adc
sub
cld
jns
sbb
in
mov
cmpsl
out
adc
stc
push
dec
fdivs
stos
jnp
mov
pop
push
shlb
inc
scas
addr16
cmp
sbb
jge
pusha
cs
out
or
pop
mov
nop
push
pop
jns
fsubl
pop
xlat
je
jbe
roll
test
fcmovnb
sahf
mov
xor
inc
mov
push
sbb
jbe
ja
sub
mov
adc
pop
out
pop
das
loop
push
jnp
add
lea
xchg
adc
dec
adc
test
xor
and
add
mov
add
int3
inc
mov
sub
sub
fimuls
gs
xchg
pop
rcrb
out
aaa
clc
das
ds
inc
or
std
mov
inc
sub
mov
pop
movl
xchg
cmpsl
int3
and
add
or
data16
stc
rcll
flds
icebp
sub
sbb
jl
mulb
push
cmpsb
icebp
inc
cmc
insb
js
movsb
lret
mov
jne
or
cli
pop
dec
xchg
fucomi
ds
punpckhwd
xor
stos
subl
dec
addr16
and
jle
and
cli
out
xchg
pop
inc
mov
cmp
xor
mov
xchg
into
in
stos
jb
fildll
inc
or
mov
notl
cmpb
mov
mov
push
xchg
mov
out
ficoms
fildl
inc
inc
aaa
or
rol
in
pop
mov
inc
lret
inc
xchg
lret
cltd
or
shll
in
cmp
xchg
fcomp
pop
dec
add
lahf
mov
sbb
lock
jl
daa
mov
dec
je
mov
popf
adc
std
sbb
bound
adc
dec
cmc
push
xchg
add
mov
mov
or
ja
inc
xor
add
test
divb
push
rcrb
rcl
flds
bound
loop
jecxz
mov
ja
add
push
loopne
in
out
std
loopne
cs
and
xchg
data16
scas
pop
inc
xorl
pop
xchg
int
inc
nop
push
pop
jl
cmp
or
xchg
aam
sub
inc
add
mov
xchg
inc
pop
adc
mov
adc
dec
add
jb
loopne
incl
sub
jae
mov
sbb
cs
mov
sub
and
xor
and
mov
jle
mov
fstps
jno
enter
lock
and
stc
cmp
xor
cli
jno
jg
sbb
lcall
imul
sub
xor
push
adc
sub
jmp
nop
stc
imul
inc
enter
add
mov
cmp
adc
jge
shlb
test
mov
xchg
xor
xchg
jecxz
push
fbld
mov
jae
sbb
js
arpl
or
pop
mov
pop
iret
jle
push
mov
fnstenv
inc
push
inc
mov
ds
mov
je
dec
aad
pop
fsubp
lods
dec
hlt
daa
jge
sbb
out
std
cmpsl
mov
push
adc
push
dec
mov
jnp
jge
mov
dec
es
cwtl
sub
mov
loop
loopne
xor
mov
jecxz
loopne
je
mov
jmp
addr16
stos
fnsave
dec
lds
xchg
mov
leave
test
call
sbb
push
movsl
movsb
addr16
in
popa
rcrl
sub
into
mov
jnp
test
sbb
sub
xor
pop
bound
ljmp
push
xor
repnz
push
jno
mov
mov
xlat
icebp
aaa
insl
imul
inc
pop
imul
dec
mov
xchg
pop
cmp
lcall
jecxz
pop
xchg
add
mov
sub
cmp
pop
xchg
mov
mov
sbb
pop
pop
xchg
adc
xchg
pop
scas
scas
hlt
pop
movsb
sub
test
add
adcl
movsb
fcompl
shrl
outsl
dec
mov
sbb
int3
dec
xor
sub
jne
cmpsb
jo
mov
lret
bswap
scas
in
add
xorb
pop
lret
push
cmp
aaa
mov
pop
bound
out
cltd
push
cmp
pop
sbb
jecxz
cmp
mov
lret
jp
pop
cwtl
xchg
and
stos
mov
sub
dec
xchg
fcoms
int
fistpl
sub
enter
decl
cmp
lea
in
adc
js
xchg
pop
cmp
insb
loop
cmp
dec
dec
in
add
out
aad
mov
ficompl
in
mov
inc
test
jae
cltd
hlt
lret
push
int3
jl
hlt
and
int3
mov
shr
inc
in
mov
out
jge
shll
pusha
imul
mov
push
jbe
jp
sub
cltd
push
arpl
test
aad
shrl
push
iret
sub
insl
mov
jg
rol
loop
jge
pop
push
sbb
mov
addr16
fstl
sub
leave
xchg
je
pop
xlat
popf
and
aas
in
mov
popa
pop
pusha
or
dec
xchg
icebp
les
xchg
mov
rorl
out
out
movsl
sbb
sbb
gs
mov
add
mov
sti
xor
lea
lods
push
add
fstpt
sbb
add
leave
jns
sbb
xlat
add
inc
movsl
adc
nop
mov
rcrb
gs
xchg
imul
andb
jl
fsubrs
loop
mov
out
ljmp
stos
test
cmp
xchg
or
outsl
fsubrs
mov
pop
xchg
scas
jmp
test
nop
sahf
popf
xor
inc
push
repz
or
mov
lahf
mov
mov
push
inc
inc
jb
mov
rcrl
fldcw
loope
add
pop
popf
sub
test
nop
pop
jmp
sub
pop
rcr
xchg
xchg
xchg
and
in
mov
xchg
imull
adc
cmp
imul
movsb
test
adc
cmp
pop
mov
push
sti
jl
cmpsl
jne
push
loop
dec
je
mov
testb
fidivrs
jae
push
xchg
je
inc
add
sbb
pop
push
aam
fsubrl
mov
fstpl
cmpsl
lahf
or
dec
andb
ret
mov
sbb
cli
xchg
xor
js
or
aam
adc
xchg
fisubrl
jno
fldcw
push
sub
jo
mov
push
inc
xor
loopne
jg
sbb
sarl
dec
pop
movsl
mov
xchg
sub
push
pop
push
pop
stos
test
or
movsb
iret
add
push
pop
aad
fcomps
ss
dec
inc
lahf
aad
mov
roll
fcmovbe
test
mov
and
inc
jmp
out
jno
xorl
cmpsb
mov
or
jle
cmp
lock
xchg
or
or
push
add
xor
xchg
mov
and
std
lods
push
sbb
push
sti
xor
dec
mov
popf
xchg
push
fcoms
popl
fists
xchg
and
xor
imul
aam
movsl
dec
cmp
stos
leave
daa
and
pushf
mov
addr16
xchg
and
mov
mov
sti
ret
xchg
cmp
js
repz
std
jns
pop
and
mov
es
inc
loopne
addr16
aaa
mov
and
adc
add
sub
mov
cmpsl
lcall
pop
adc
test
sbb
mov
lods
inc
push
add
jo
adc
imul
jnp,pt
movsl
inc
push
push
inc
call
repz
das
fmuls
dec
jecxz
fisttps
data16
cld
mov
popf
adc
icebp
in
xchg
or
xor
xchg
xor
jbe
inc
not
jmp
xchg
dec
dec
cmp
jg
neg
cwtl
lcall
xchg
pop
dec
adcl
ds
lcall
fldt
xor
sahf
cmp
mov
jecxz
jnp
xor
idivb
cmpsb
repz
in
stos
out
pusha
lcall
dec
cld
sbb
in
repz
cs
and
aad
mov
mov
xchg
xlat
xchg
jecxz
lahf
js
test
dec
das
cmp
inc
rclb
sub
repnz
add
push
mov
insb
out
pop
xchg
mov
cltd
and
mov
inc
adc
test
sub
or
cmc
sub
push
pop
jnp
jecxz
repnz
rolb
mov
pop
addb
out
adc
leave
nop
adc
pop
jnp
rolb
or
mov
jns
clc
inc
pop
or
jg
and
addr16
es
inc
movsl
out
aaa
ja
mov
jl
lods
mov
rclb
cwtl
dec
test
daa
mov
scas
aad
mov
cmp
sub
movsb
xchg
call
pop
push
out
divb
xorb
loope
mov
inc
mov
lods
insb
fdivl
dec
xor
inc
push
scas
shrl
iret
negb
mov
push
inc
arpl
mov
xor
push
sti
or
fidivl
leave
scas
cmp
or
fxch
adc
enter
jmp
lods
sub
outsl
imul
in
in
adc
or
and
inc
xorl
and
xor
sbb
pop
mov
addl
les
inc
and
mov
outsb
xchg
data16
in
inc
jl
push
cwtl
jo
ss
iret
or
pusha
popf
sbb
repnz
fwait
adc
push
sbb
stos
mov
xor
push
mov
cmp
xor
inc
adc
shlb
rorl
dec
cmpl
mov
call
pop
pop
mov
and
sub
f2xm1
and
lea
fs
cmp
dec
sbb
adc
sahf
cmp
jl
sbb
test
mov
loope
rcrl
incb
sub
xor
shlb
mov
fcmovbe
mov
insl
sbb
sbb
xor
inc
inc
cmp
fmuls
aas
popf
and
stc
movsb
or
and
push
sbb
mov
subb
loope
or
icebp
jbe
js
outsb
fnstsw
pop
sbb
pop
test
add
push
out
xchg
lret
xor
add
jg
out
xchg
xchg
sahf
push
enter
push
or
add
popa
sar
add
push
adc
outsl
jmp
jb
andb
aad
adc
leave
xchg
and
cmp
sbb
push
inc
mov
fcomps
jne
or
loope
mov
mov
and
push
test
in
sub
mov
aam
sub
test
jmp
pop
enter
and
dec
test
sbb
in
or
pop
mov
dec
aad
popf
shll
fsubl
push
ret
nop
pushf
mov
in
mov
repnz
imul
dec
out
cli
adc
lods
test
jp
lcall
or
cs
jg
insb
mov
cltd
dec
popa
cmp
fldenv
ljmp
fwait
dec
or
pop
mov
dec
mov
mov
sub
jne
mov
mov
cmp
sub
pop
ficompl
nop
inc
sub
fcoms
shlb
in
xlat
mov
mov
mov
add
sbb
push
jecxz
mov
jns
mov
lods
xchg
shrb
insb
aad
cs
mov
push
lds
cmpsl
jmp
sub
fisubrs
roll
add
leave
sub
cld
push
out
inc
add
jge
mov
out
cmp
sbb
mov
and
or
aam
inc
add
into
push
adc
pusha
loope
push
notl
sbb
or
add
inc
lret
stos
cmp
sahf
dec
jne
mov
inc
fiadds
dec
jbe
lcall
sbb
xor
mov
sub
jo
es
sub
jmp
ds
div
fs
iret
ds
pop
lcall
or
mov
jp
ror
pop
int3
push
in
in
insl
push
addl
out
cmp
bound
sub
out
lods
mov
sbb
mov
stos
rcrb
sbb
stos
icebp
jmp
rol
mov
fwait
lods
mov
or
and
ret
ds
ficomps
ds
sub
int
mov
dec
test
pop
jmp
repz
xor
mov
sti
mov
lods
test
test
pop
jbe
push
xlat
repz
or
mov
fisubl
lea
push
imul
jmp
pop
sbb
rorb
int3
or
fwait
push
or
push
cmp
fstpt
mov
mov
jecxz
sbb
and
subl
push
dec
mov
mov
andl
dec
out
fsts
xchg
lret
in
sarl
std
cmp
outsb
lahf
fs
pop
popf
dec
cmp
push
xchg
jl
std
cmp
xchg
jge
xor
sbb
loopne
aaa
jecxz
pop
nop
sub
clc
icebp
mov
push
mov
cwtl
jb
lds
cmpsl
cmp
xchg
pop
fdivs
popf
fwait
scas
lods
das
aas
push
fisubs
mov
in
mov
jl
mov
xchg
pop
mov
mov
mov
sub
push
jecxz
cmpsl
cmpl
mov
pop
or
jns
aad
dec
adc
pop
mov
cmp
inc
mov
cld
pop
cltd
data16
andb
outsl
sub
fsubs
dec
mov
xchg
movsb
add
es
cwtl
pop
xchg
in
fisubrl
aas
add
test
sub
pop
movsb
inc
push
cwtl
and
mov
hlt
sub
cmc
fdivs
push
xchg
sbb
fsubrl
dec
in
rcrb
incb
inc
mov
and
and
mov
ja
push
incl
sbb
in
pop
mov
cmp
scas
rep
mov
cmpsb
sbb
mov
dec
jnp
xchg
insb
test
jo
dec
lret
push
clc
ja
pushf
xor
pop
mov
dec
pop
inc
xor
cmp
inc
dec
cmp
shl
dec
clc
xchg
in
xchg
xor
jmp
inc
es
jae
imul
xchg
scas
std
dec
push
fists
mov
xchg
ljmp
cmpsb
pop
test
mov
mov
repz
rorl
cli
pop
or
lock
jnp,pn
rsm
popf
ja
les
cmpsl
popa
push
in
jmp
xchg
aam
cmpsw
adc
xchg
mov
jne
sub
std
add
sub
shl
jp
jb
mov
inc
cmp
js
fs
jne
or
or
leave
movsl
hlt
jns
les
bound
or
sbbb
or
leave
jo
lock
loop
mov
scas
adc
ret
cmp
test
adc
or
jns
pop
push
gs
xchg
and
jno
add
iret
jg
jae
inc
push
push
jno
push
insb
call
or
jg
ret
push
cmp
test
dec
adc
stc
cmp
push
pop
outsl
das
or
add
jl
sbb
adc
push
stos
rorl
jge
jge
loopne
insb
repnz
sub
rcrb
mov
mov
add
mov
jae
ja
das
int3
outsl
hlt
push
inc
in
call
sbb
in
xchg
sbb
dec
mov
nop
icebp
std
adc
insl
sub
orb
push
xchg
xchg
ljmp
lds
dec
lret
clc
ds
es
scas
add
ja
aaa
push
inc
xor
xor
mov
sti
pusha
loope
lcall
jge
jns
mov
aam
adc
jecxz
mov
cwtl
inc
out
aam
mov
cmpsl
out
loope
pusha
jb
fadd
pop
stos
aas
dec
rorl
lret
inc
insb
stos
rcr
loopne
hlt
xchg
mov
loope
rcrb
or
dec
jge
loop
nop
push
mov
aad
hlt
mov
repnz
or
pop
push
mov
scas
les
cwtl
jns
add
adc
mov
mov
insl
nop
iret
roll
stos
orl
fmuls
push
adc
sbb
mov
scas
mov
pusha
dec
xchg
pop
rcll
cmp
sub
cmp
inc
push
dec
push
xchg
insb
je
lahf
inc
jle
pop
or
cmp
mov
dec
xor
or
add
push
loope
orl
or
xor
mov
pop
adc
outsl
repz
mov
fidivs
stos
cltd
cli
jae
lods
fwait
int3
lret
and
cltd
imul
mov
sbb
das
sub
into
sti
pushf
sbb
pop
inc
pop
dec
cmp
scas
sbb
mov
xchg
ds
sbb
std
jns
mov
out
inc
aam
xchg
int3
je
flds
jg
clc
sbb
mov
dec
sbb
orb
ret
push
inc
stos
mov
dec
mov
outsl
dec
sahf
sub
jnp
mov
sti
push
lds
xor
lds
mov
push
add
fst
dec
add
iret
mov
or
push
pop
xorl
hlt
lret
test
sbb
or
mov
cmp
push
ret
movsl
out
mov
mov
pop
push
lret
push
sub
jecxz
lock
lods
ficompl
inc
push
stos
xchg
mov
je
lcall
inc
loop
xor
imul
xor
mov
ficomps
or
mov
add
jnp
mov
mulb
xchg
js
mov
movsl
sbb
dec
clc
jno
shl
cmpsb
jle
xchg
mov
imul
add
leave
xchg
insb
loopne
or
out
sub
mov
sbb
mov
or
andps
movsb
xchg
cld
loop
int
lods
mov
mov
stos
loopne
pop
jo
and
xor
int
and
jbe
aad
stos
cmp
movsl
add
xchg
sbbl
inc
pushf
pop
insb
add
aam
in
sbb
test
pusha
loopne
mov
dec
mov
xor
sti
sbb
push
cmc
push
add
sub
leave
and
test
mov
faddl
inc
shll
int3
push
cwtl
addl
mov
stos
enter
idivl
xor
mov
mov
mov
dec
jmp
xchg
das
stos
es
cs
mov
xor
xchg
out
fwait
push
push
hlt
lret
push
jae
dec
sbbl
xchg
xor
and
out
mov
dec
fs
bound
clc
lret
adc
cmp
sbb
fstpl
push
pop
popf
push
or
fisubs
popf
inc
subb
pusha
pushf
xchg
sahf
jp
jg
in
pop
cmp
adc
mov
sbb
xor
mov
jnp
xlat
cmp
shll
cmp
mov
std
sti
iret
adc
dec
scas
lcall
dec
xchg
xchg
push
lret
inc
xchg
cmp
push
cmp
in
inc
jb
es
and
aaa
mov
lahf
nop
xchg
mov
enter
and
pop
jae
sbb
outsl
mov
cmc
lcall
clc
shll
sahf
push
pop
push
push
mov
in
sbbb
jb
pop
push
xor
or
cmp
inc
dec
addl
repz
mov
movsb
cmp
jecxz
shlb
rolb
testl
rclb
lods
xor
stos
jbe
xorl
push
or
fdivrs
lcall
cmp
push
aaa
xchg
pusha
leave
out
fwait
push
arpl
jp
iret
xchg
sbb
bound
xchg
sbb
mov
jno
push
dec
xchg
shll
add
and
sbb
push
xorl
incb
dec
lock
rorl
arpl
xor
cmpsl
push
cmp
push
or
pop
push
ljmp
stos
mov
imul
mov
leave
fcmovne
mov
xchg
xor
inc
in
fildll
stos
adc
dec
mov
mov
aam
or
mov
stos
mov
jp
xchg
jmp
mov
bound
bound
and
jp
adc
push
lock
push
pop
fsub
js
dec
sub
shrb
rcrl
push
jae
stos
xchg
scas
cld
jp
sub
mov
jmp
pop
add
push
mov
jns
mov
int
hlt
mov
inc
jmp
or
or
stos
inc
xchg
repnz
int3
push
rorl
and
in
mov
sbb
bound
lds
icebp
push
mov
call
fisttpll
icebp
mov
xor
push
xchg
push
jo
mov
jo
nop
mov
test
cmp
je
jmp
adc
and
pushf
nop
fabs
xchg
daa
sub
lret
inc
mov
daa
hlt
inc
leave
or
cmc
shr
clc
jbe
rcll
add
fstpl
test
call
ss
aam
xchg
or
std
pusha
loop
orb
lahf
pop
mov
insl
clc
mov
shrb
xor
shll
or
or
push
add
int3
jg
out
out
inc
xchg
inc
clc
adc
lods
in
fsts
loope
cmp
jg
xor
or
push
sbb
lret
pop
repnz
pop
sbb
test
cld
sahf
dec
mov
mov
fdivs
push
aad
in
push
push
jmp
frstor
dec
cli
movsb
pop
dec
jmp
sbbl
xor
mov
out
xor
push
jmp
push
and
movsb
add
adc
or
ret
push
cs
int
out
mov
push
pop
mov
jg
add
mov
or
pop
sbb
nop
add
and
aaa
xchg
ja
loopne
testl
ja
ja
ficoml
popf
adc
jb
ss
int
xchg
std
sbb
and
fwait
lods
data16
das
subl
icebp
pop
movsb
pop
pushf
xchg
testb
mov
inc
loopne
cmpsl
fcoml
fisubrs
call
ficomps
lods
subl
sub
les
fwait
adc
adc
sub
imul
jo
sbb
inc
mov
jmp
mov
inc
add
and
jns
push
popa
clc
shll
jecxz
mov
xor
push
jmp
fsubs
lret
shl
pop
pushf
mov
ja
sub
or
fnsave
and
js
nop
mov
xor
or
fisubl
movb
mov
pop
enter
cmp
shr
pop
loope
popf
mov
decl
pop
repz
call
xchg
dec
leave
and
pushf
lret
aas
or
push
jbe
lcall
fstp
outsb
xor
cmp
or
shrb
sbb
inc
shll
push
jo
movsl
and
xlat
sahf
stos
push
rorl
cmp
repnz
mov
pop
shl
sub
jge
imul
data16
shl
shll
add
ds
cltd
scas
xlat
dec
test
xchg
sbb
mov
mov
fucom
mov
sub
incb
inc
icebp
iret
in
sbb
pop
sub
push
jo
call
cmp
repz
std
fwait
dec
sub
or
js
rcll
sub
or
lret
pusha
ret
das
add
cld
repz
inc
lret
mov
pop
scas
push
jmp
test
outsb
sahf
out
adc
aam
cmpsb
xchg
sub
pop
andb
iret
inc
out
aam
sbb
in
mov
sub
add
or
add
cltd
sub
int3
les
aas
xchg
gs
jb
rcrl
aas
dec
sub
pop
cmp
ljmp
fists
xchg
mov
fistpl
jae
lea
in
cmp
das
mov
jge
shrb
push
or
in
or
daa
and
dec
lret
sbb
dec
aad
loopne
aas
iret
mov
and
add
loopne
jl
cmp
shlb
fisubs
std
out
push
cld
call
sub
jne
aas
repz
into
dec
pminub
push
std
jb
scas
pop
aaa
mull
adc
sub
es
mov
cmp
xlat
nop
sbb
jecxz
jecxz
fwait
xchg
sub
mov
ja
fchs
pop
stos
lods
cmp
mov
stc
dec
loop
cmp
in
lret
push
and
in
pushf
pop
pusha
aas
lock
leave
pushf
pop
push
les
lret
ljmp
outsl
cmpsb
ret
inc
pop
inc
adc
inc
push
ja
jl
or
pop
fidivrl
outsl
sub
inc
push
test
pop
and
mov
andb
stc
pop
xor
lret
fldenv
xor
out
xor
xchg
fcmovnbe
rolb
lea
test
jmp
clc
xor
out
xlat
mov
mov
sub
test
lds
adc
fdivrl
add
inc
rcrb
sbb
xor
imul
in
bound
xchg
jb
pop
mov
adc
pop
imul
pop
inc
mov
jbe
jns
out
mov
lods
and
mov
sbb
lcall
xor
mov
xor
push
stc
lret
jo
sbb
push
xor
shrb
decl
push
outsl
xor
je
xchg
jmp
adc
sub
add
aad
xchg
sub
push
leave
psrld
xchg
pop
int3
in
shll
jg
dec
cmp
scas
rcrb
pop
hlt
js
outsl
sarl
dec
faddl
insl
ljmp
nop
mov
cmp
dec
sbb
mov
mov
mov
sahf
or
xchg
rorb
pop
pop
fcmovnb
pop
mov
adc
das
and
push
sar
adc
fdivr
call
fs
pop
ss
mov
or
cltd
cmp
mov
mov
dec
jbe
dec
pop
or
inc
aas
das
out
cmp
popf
dec
fidivrl
and
mov
sbb
push
xor
mov
rclb
push
stc
sbb
shl
out
dec
xchg
pop
mov
xchg
pop
sbbb
lods
sub
xor
outsb
sub
mov
shll
adc
lods
push
ret
xchg
ss
inc
bound
mov
fldenv
jb
jge
jle
lahf
out
mov
sbb
sbb
xor
sub
fiadds
daa
stos
sti
sbb
mov
sub
scas
stos
lcall
pop
xor
cs
jle
arpl
scas
mov
or
popf
dec
pop
adc
addb
cmp
mov
test
arpl
imul
fildl
nop
push
cmp
mov
aad
cwtl
sbb
fnstenv
push
and
jecxz
sub
inc
addl
test
bnd
pop
pop
dec
shr
andb
add
ljmp
xchg
andl
push
pop
out
fldt
jns
xor
push
cld
and
aam
ss
data16
mov
in
inc
fsubrl
sub
js
rcrb
and
jne
push
xchg
leave
call
jl
jl
jno
in
pop
decb
dec
xchg
fxch
std
push
adc
sbb
pop
mov
pop
mov
outsl
pop
pushf
mov
mov
and
mov
out
jge
cltd
imul
jo
mov
in
xor
xchg
insl
add
insl
inc
mov
popa
lahf
repz
js
jmp
inc
inc
and
cmp
data16
sarb
sub
lahf
divb
mov
sub
xor
aam
outsb
mov
ja
dec
cmc
pop
test
sub
sti
ret
fstpl
lcall
mov
pop
xchg
leave
cmp
jle
enter
adc
cmpsl
pop
cmpsl
dec
enter
lcall
cli
aam
xchg
xchg
movsb
mov
fimuls
movsl
bound
jmp
movsl
iret
sbb
sbb
xor
scas
lret
add
sub
cmp
xchg
and
insb
jae
or
cmc
inc
mov
cmc
and
inc
pop
cwtl
mov
add
insl
mov
adc
jno
push
and
sbb
jecxz
lods
std
daa
ret
mov
jb
inc
mov
das
fsubl
les
repnz
lret
or
into
ret
rcrb
cli
std
gs
lahf
lret
test
mov
enter
iret
xor
nop
push
mov
lret
outsl
cmp
push
ds
xor
imul
or
mov
mov
mov
push
fsubl
and
ret
aas
jbe,pt
mov
push
push
cmp
sub
mov
pop
add
push
add
es
xor
sub
lea
mov
pop
cltd
sbb
in
aad
outsl
fnstcw
scas
dec
out
mov
sbb
repz
mov
in
xor
pop
jecxz
mov
pop
mov
nop
mov
sub
int
pushf
xchg
sbb
mov
push
fldt
adc
cmp
mull
out
and
xor
pusha
mull
cmpsb
mov
sti
popf
inc
dec
add
sub
ret
mov
xchg
and
dec
and
insl
ss
in
pop
orl
fnstcw
inc
lock
flds
dec
pop
stos
sbb
cmp
push
iret
jae
dec
and
cmp
sub
inc
lret
adc
inc
or
mov
les
dec
dec
xchg
dec
push
jp
std
fidivrs
in
mov
pop
sub
dec
rorl
scas
pop
cmpsb
divl
pop
push
ss
pop
lcall
iret
jecxz
push
mov
xchg
je
outsb
add
add
fstpt
cld
jo
imul
add
int3
jg
je
mov
ret
xor
fimuls
imul
std
push
mov
popa
fistl
mov
int3
in
sub
fnstcw
test
popf
scas
and
js
gs
jnp
enter
or
scas
jecxz
std
in
loop
sbb
loope
xchg
sbb
add
cmp
jo
mov
adc
jle
iret
push
in
movsb
xchg
dec
aam
push
sbbb
repz
ja
scas
inc
cmc
push
xchg
mov
or
mov
cmpsb
mul
add
hlt
xor
adc
cltd
stos
push
add
addr16
test
cmp
push
sbb
adcl
imul
mov
fistl
push
xchg
movsb
jns
insl
fimull
or
pop
add
notl
cmpsb
sub
in
lods
mov
ret
aad
mov
lds
inc
lret
lahf
sbb
mov
and
jg
add
jno
cmp
insl
int
mov
push
push
pop
std
xor
xor
xchg
aas
dec
jno
fists
test
lods
cmp
jbe
mov
push
mov
fwait
shlb
sti
sarb
pop
ret
in
or
scas
cmpsb
in
lahf
adc
xor
cmp
or
xorb
and
jge
jb
xor
test
sbbl
out
sub
insb
mov
cmp
scas
push
hlt
test
mov
push
lcall
gs
pop
shrl
nop
mov
pop
in
adc
and
les
pushf
sub
mov
test
aas
popa
lods
loope
dec
pop
xor
sbb
xchg
inc
je
dec
pop
pop
out
or
dec
pop
inc
cli
cmp
outsb
clc
sub
mov
sbb
scas
daa
sahf
loopne
jbe
dec
sub
aad
inc
lret
cmpsb
inc
inc
mov
or
imulb
mov
adcb
cmpsb
fxch
enter
hlt
fimuls
idivl
aad
andb
shrl
frstor
fstps
sahf
sbb
xor
mov
adc
xchg
cld
jmp
aaa
jecxz
inc
xchg
adc
inc
or
shl
dec
jo
rorl
popf
jg
xor
in
cwtl
test
rcll
psubd
rorl
shlb
pushl
repz
fstps
and
cmc
cli
or
or
jb
cmp
mov
xchg
jns
lahf
mov
std
adc
js
lock
push
cwtl
mov
pop
xchg
adc
and
add
daa
push
movswl
ds
cmpsb
adc
add
jo
call
push
mov
jp
inc
pusha
pop
int
xchg
pop
sub
jbe
pop
into
in
or
sbb
jge
jmp
inc
inc
nop
and
outsb
mov
inc
add
mov
ss
and
mov
mov
jg
stos
out
int
testl
insl
aaa
mov
push
fdivl
insl
mov
sub
xchg
xor
cmp
xlat
dec
stos
and
push
adc
mov
dec
test
mov
and
push
mov
dec
mov
bound
in
fs
mov
inc
push
pop
ret
dec
xchg
in
pop
mov
bound
decb
push
shl
movlps
addr16
icebp
xor
mov
jnp
xor
sbb
orl
insb
inc
fs
fsubl
test
xchg
std
ficompl
lret
fisubl
mov
cwtl
inc
xor
cltd
pop
lock
xor
out
jbe
push
push
xchg
rcll
mov
bound
xchg
push
stos
clc
dec
cwtl
repz
adc
xchg
gs
adc
sarb
jae
adc
sahf
imul
fcmovnbe
cmp
mov
ud0
sub
lods
lods
cmc
pop
in
pop
sbb
mov
mov
int
cli
repz
adc
mov
cmp
loopne
insb
push
popa
adc
xor
popf
sub
inc
lea
jg
xorl
xchg
mov
shrl
mov
and
js
mov
dec
scas
mov
pop
adc
ja
clc
nop
xor
xlat
gs
cmc
mov
jmp
or
addr16
mov
jno
pop
mov
jl
or
mov
jmp
cmp
adc
fldl
mov
lahf
mov
sub
lret
xor
sbb
inc
daa
out
jae
dec
mov
icebp
adc
inc
mov
xlat
xor
jbe
add
inc
in
push
inc
cwtl
lar
clc
xor
ret
sub
jo
sbb
jns
inc
scas
mov
call
shr
into
or
and
data16
add
fimull
sarb
pop
xor
cmp
bound
ds
repnz
scas
xchg
ret
lea
jecxz
sbb
out
adc
lods
dec
test
leave
int3
es
cmc
fucomp
sbb
cmp
popf
mov
lret
out
shr
or
negb
adc
jo
or
jb
fdivs
inc
xchg
cmp
cmpsl
or
cmp
jl
sbb
cmpsb
notl
mov
and
mov
dec
popf
push
scas
arpl
add
cmp
mov
cli
ja
dec
sbb
jl
add
js
out
sbb
js
jns
mov
add
jg
scas
out
rcl
add
lret
xchg
std
jae
out
mov
xchg
pop
aaa
movsb
dec
jp
sub
lcall
xchg
fdivrl
loop
in
mov
xchg
out
pcmpeqw
cwtl
aaa
mov
fs
insb
add
mov
mov
and
jae
repnz
and
ret
sbb
lods
clc
and
push
rorb
add
add
daa
lahf
adc
push
in
mov
cmc
jns
mov
sahf
fstl
dec
add
jae
lahf
loope
or
inc
jl
insb
dec
xchg
stos
lds
pop
cmp
gs
sbb
push
xchg
fistl
dec
dec
push
mov
in
inc
push
mov
in
mov
mov
sub
dec
lds
dec
imul
stc
ja
pusha
jbe
jg
push
mov
fsubrs
mov
sahf
out
and
stos
enter
jmp
mov
cmp
rcr
dec
lcall
idivb
xor
add
push
sbb
add
cmp
stos
fisttps
inc
xchg
sub
test
dec
cli
sbb
inc
lods
jno
or
dec
mov
inc
dec
fists
fmul
imul
stos
lret
jns
mov
xchg
dec
rolb
push
mov
cmpsb
push
out
push
leave
sbb
fistpll
sub
shl
mov
clc
or
adc
nop
xor
jno
or
lret
add
mul
imul
add
std
sahf
mov
pop
aam
xchg
and
add
inc
cmp
cmp
fldt
ret
rcrb
push
fldt
add
push
sub
inc
jl
xchg
mov
sbb
sbb
mov
gs
in
push
loope
fstl
inc
jl
daa
mov
and
fs
fcomps
push
mov
js
push
dec
xchg
dec
mov
movsl
stc
mov
cmpsl
jecxz
jg
lods
nop
push
movsb
xchg
shl
jl
fsubl
and
or
inc
stos
ljmp
loop
nop
es
cmp
push
imul
insl
test
mov
dec
sbb
and
cmpsb
push
cmp
sbb
add
push
scas
push
dec
jbe
fisubl
mov
push
sbb
ljmp
and
sub
pop
mov
testb
iret
add
and
xlat
inc
dec
and
fwait
and
popf
lock
inc
and
test
cli
mov
rclb
adc
lcall
cmp
sub
es
cmp
xor
sbb
outsl
adc
test
int3
xor
push
in
mov
pop
outsb
dec
mov
jl
push
js
scas
int
sub
jmp
iret
sub
into
pop
xor
sbb
add
orl
jecxz
pusha
cmpsl
sbb
xchg
test
shll
cmpl
je
js
lret
lds
mov
xchg
int3
jmp
push
sub
fcomip
je
mov
mov
jo
jmp
jne
jbe
int3
loope
xchg
nop
dec
jle
lahf
cld
outsl
pop
jns
lret
cmp
dec
push
mov
aas
test
outsb
loopne
out
movb
jmp
loopne
fnsave
fwait
sbb
sbb
sbb
jge
rolb
flds
sbb
decb
push
pop
pop
mov
mov
ds
push
add
les
pop
scas
jb
mov
popa
je
mov
mov
fs
mov
add
cmpxchg
iret
sbb
mov
int
adc
sbb
insl
pop
out
loope
dec
push
push
xchg
outsl
fbstp
imull
xchg
loopne
repnz
pop
outsb
add
xchg
cmp
popf
leave
aad
or
push
fidivrs
xchg
xor
cmp
ret
cwtl
mov
bound
rolb
popa
jmp
das
push
cld
or
xor
das
push
fistl
adc
or
add
cs
mov
mov
jp
and
mov
cs
inc
pop
push
dec
pop
pop
inc
scas
dec
in
in
jmp
mov
cmp
fiadds
xor
cmpsb
adc
fidivl
les
dec
aas
in
xchg
push
out
sahf
dec
js
xor
test
dec
test
lahf
lds
lret
mov
jo
out
movsb
mov
imul
sub
add
das
pop
dec
inc
aad
or
adc
addr16
cmc
sbb
dec
mov
xchg
and
das
push
les
sub
cmp
push
ds
cmp
lods
clc
lahf
imul
xor
popa
ja
xchg
lahf
jno
adc
test
cmp
in
rol
jne
cli
pushf
arpl
add
jmp
repz
mov
nop
mov
or
sub
out
into
fnsave
jg
push
subb
imul
mov
aam
mov
jmp
cmpsl
lods
or
inc
adc
dec
mov
pushf
gs
imul
mov
jae
sahf
sbb
mov
add
or
cmc
or
xor
mov
fistl
dec
pop
pop
cli
or
cmp
jns
push
fdiv
xchg
mov
add
movsl
jno
cwtl
push
mov
mov
inc
pop
lods
inc
cmpsb
fldt
push
push
xor
xlat
subl
fldt
hlt
mov
push
dec
xchg
dec
sub
xchg
jp
andb
lcall
sub
pop
sahf
fistl
sbb
xchg
jnp
je
push
sbb
enter
movsb
or
adc
imul
mov
xlat
and
add
push
fldcw
aas
mov
shl
rcrb
push
mov
pop
pushaw
mov
test
mov
push
repnz
aas
into
mov
addr16
mov
dec
stos
lock
add
lock
dec
or
push
mov
cmp
mov
jmp
jmp
clc
or
ja
nop
out
mov
inc
pushf
mov
call
jbe
movsl
cltd
fs
in
push
cmp
xchg
incb
out
popa
or
or
addl
mov
jge
pusha
jb
inc
pop
jmp
fcoms
mov
and
in
pop
lock
xchg
pop
ljmp
arpl
cmp
jmp
shlb
or
sbb
xchg
gs
mov
adc
cmp
or
lret
jmp
lret
cmpsl
cmpsl
mov
inc
jnp
cli
es
mov
ss
lret
cld
add
cwtl
fldenv
or
lea
addr16
push
inc
mov
popf
inc
inc
fwait
cli
pusha
jl
arpl
jno
rclb
or
xchg
call
movzbl
cmp
in
dec
or
jl
pusha
xchg
stos
imul
sub
mov
jmp
or
pushf
jne
aaa
ljmp
ret
mov
mov
scas
xlat
mov
xchg
push
pop
aam
pushf
jb
adc
jbe
incl
mov
mov
mov
lds
wbinvd
and
outsb
mov
fmul
in
iret
mov
fdivrl
shrb
add
cwtl
flds
xor
jp
add
enter
inc
stc
dec
call
or
cltd
xchg
subb
xor
sub
xchg
adc
add
cmp
inc
negl
scas
push
sbb
repnz
pop
pop
mov
cs
pop
adc
pop
cli
test
inc
mov
sahf
and
clc
dec
or
adc
fcoms
pop
push
mulb
sti
sahf
mov
push
adc
fisubl
test
test
inc
cmpsl
or
mov
int
pop
inc
aas
xor
fdivp
sti
repnz
xlat
inc
stos
mov
cmp
xchg
adc
inc
jg
stos
cmp
ss
in
xor
fwait
jg
sbb
add
mov
adc
addl
movsb
or
loope
xchg
movsb
sub
in
bound
scas
push
cmp
rcll
pop
testl
insb
shl
push
fsubrl
lea
push
ds
pop
add
outsb
xchg
pop
pop
mov
test
rcrb
add
in
add
cltd
scas
mov
ret
sbb
enter
adc
lahf
inc
cmpsb
daa
shlb
mov
and
enter
lds
movsl
lea
out
cltd
loop
push
pop
xlat
insb
or
rsm
rcrb
movsb
mov
cltd
mov
sbb
into
xchg
lds
into
and
pushf
pop
addr16
mov
cmp
cmp
shll
mov
popf
cmp
popa
inc
inc
jns
xchg
dec
insb
fcom
jnp
or
fisttps
xlat
arpl
pop
pusha
jo
out
adc
xchg
adc
jns
imul
std
mov
cli
jl
jle
cmp
push
pop
stos
scas
xchg
jns
test
mov
gs
aas
jmp
add
stc
pop
lahf
or
stos
push
cmp
lds
xchg
movsl
ljmp
xchg
iret
jg
test
xchg
imull
and
into
insl
mov
jb
pusha
cwtl
das
mov
outsl
divw
mov
add
inc
xchg
cmp
and
dec
cmpsl
hlt
adc
mov
xor
ret
lahf
inc
dec
and
mov
add
dec
cmc
int3
mov
adc
cmp
xor
out
and
scas
mov
imul
in
negl
mov
mov
add
sbb
push
adc
adc
pop
fdivr
dec
pop
std
dec
inc
lds
das
jp
lods
jmp
jle
mov
mov
dec
xchg
movsl
lods
pop
mov
lret
push
ret
sarl
repz
cwtl
cli
xor
cmp
mov
scas
pop
stc
jecxz
or
outsb
aas
or
je
cmpsl
or
adc
jg
test
inc
push
xchg
jecxz
imul
sbb
pop
or
scas
jle
mov
sar
ljmp
icebp
push
jp
push
lock
test
mov
lds
int
adc
mov
pop
cwtl
xchg
fs
in
lahf
and
les
ficoms
cmpsb
adc
clc
out
lret
pop
cmc
push
add
pop
push
and
mov
test
and
jmp
inc
cmpsb
lahf
rcl
int
arpl
lock
xor
call
jp
push
mov
adc
cmp
daa
nop
mov
movsl
call
xor
roll
cltd
and
mov
add
loop
jns
dec
xor
or
jno
cltd
outsb
fucomip
negl
xchg
pop
lea
adc
xor
pop
fwait
xor
xor
sahf
loopne
imul
add
fucom
dec
nop
cltd
testl
and
pop
push
push
cltd
and
cmpsb
lcall
sbb
cwtl
int
cmp
out
cmp
movsb
divb
sub
pop
pop
popa
jmp
repnz
cltd
sbb
sub
aaa
inc
sbb
in
push
lahf
mov
sub
push
bound
les
loop
call
jecxz
insl
sahf
lods
aas
lds
les
mov
pop
in
push
adc
sub
aam
pop
adc
jge
je
idiv
shlb
sarl
dec
lcall
xchg
mov
lock
orb
data16
inc
js
jg
mov
sbb
cmpsb
sarb
xchg
push
ret
pop
pop
in
lods
jl
sarb
cmp
add
xchg
cmp
loop
ficomps
stos
inc
lea
sub
nop
std
jns
pop
mov
or
push
xchg
jnp
xor
mov
mov
xor
lret
aaa
inc
ret
ds
inc
ja
lret
lods
shr
adcl
and
inc
jb
sbb
adc
stc
lock
aad
pop
pop
cmp
adc
stos
sub
and
push
dec
outsb
add
adc
and
inc
jge
aam
dec
inc
mov
ja
pop
xor
xchg
popa
fsub
jle
jp
out
out
pop
aad
dec
xchg
mov
cmc
add
add
mov
in
cwtl
dec
je
mov
adc
xchg
jae
nop
lret
fs
std
mov
mov
jge
add
xchg
jg
lock
pop
cmc
imul
fistpl
adc
push
movsb
lahf
push
lock
aam
pop
sbb
in
loop
arpl
int3
xor
xchg
das
repnz
test
fdivl
fsubs
and
xchg
xchg
xchg
les
mov
sub
cmp
pop
pusha
or
out
push
or
stos
pop
into
in
lcall
mov
std
cltd
lock
repnz
xchg
pop
outsl
mov
pushf
flds
sbb
cmp
inc
shrl
or
adc
jbe
xchg
mov
push
pop
in
inc
aad
mov
mov
push
stos
jmp
out
push
sti
mov
ja
movsb
push
push
xor
add
sub
rolb
fadd
add
test
dec
push
out
jne
sub
dec
adc
in
add
shrl
daa
dec
lds
add
arpl
jecxz
xchg
dec
pop
test
daa
lea
push
dec
ljmp
lods
push
add
xlat
cmp
fucomp
in
pop
stc
push
jnp
pop
jmp
mov
aam
mov
mov
shlb
cmc
push
fsubrs
outsb
dec
sub
cmp
xchg
clc
lahf
rol
lea
sub
push
sub
pop
mov
pusha
idiv
xchg
test
into
mov
leave
sub
sub
push
pop
or
sbb
ficomps
sbb
xor
sbb
imul
ret
aad
movsl
push
cmp
cli
stc
and
sub
add
mov
sbb
nop
test
inc
xchg
mov
xchg
cmp
mov
push
cmp
adc
lret
adc
sbb
popa
js
fistpll
push
xor
lret
loope
ja
in
idivb
shr
adc
dec
xchg
xchg
adc
in
int3
or
scas
adc
iret
xchg
sbb
std
pop
stos
lods
aaa
mov
pusha
jae
ss
adc
stos
lret
adc
add
fcom
lods
xor
pop
frstor
sbb
mov
loop
inc
xchg
in
lods
test
mov
mov
or
jnp
sub
cmpsb
dec
or
push
pop
cmpsl
sub
jge
icebp
pusha
push
add
xchg
sarl
push
adcb
adc
jb
stos
mov
clc
loope
dec
mov
xor
xchg
sarl
int
pop
lods
xchg
test
lea
js
xchg
mov
loop
hlt
and
movsb
loop
into
outsl
dec
xor
je
sbb
jge
arpl
rcrl
push
xchg
adc
negl
js
mov
sahf
or
repnz
sbb
sbb
ljmp
pusha
push
xor
and
sub
fstl
push
add
pop
add
cli
shrl
mov
mov
cmp
cmpsb
hlt
mov
ds
xchg
scas
cwtl
js
cmp
push
cmp
mov
mov
add
mov
fnstsw
test
rcrb
int
inc
out
inc
into
setb
xchg
std
stc
cltd
adc
mov
lds
in
cmp
xor
adc
scas
gs
in
into
fsubrs
or
insl
lds
mov
and
mov
inc
push
sub
pushf
pop
cmpsl
pop
mov
scas
ret
jae
mov
cmpsb
rcrl
sbb
cld
arpl
sub
sub
adc
lods
sub
repz
rorl
les
cmp
popf
fistpl
inc
xor
sti
and
mov
cmpsb
mov
jnp
pop
pop
jae
mov
dec
dec
jo
repz
test
mull
cmp
lods
cli
das
ret
ficoml
stc
push
dec
cmp
js
sub
mov
iret
in
push
movsb
sbb
addl
je
sahf
out
out
es
cmpb
icebp
sub
out
mov
mov
mov
add
mov
stos
push
cmpsb
test
in
and
pusha
test
hlt
aaa
insl
stos
dec
adc
mov
test
xor
mov
in
push
in
das
mov
sbb
lds
mov
xorb
jecxz
mov
jb
fsub
fwait
leave
fisubs
icebp
pusha
dec
fistpl
enter
cld
mov
adc
dec
mov
xor
lcall
cmpsb
out
dec
dec
xchg
inc
ljmp
cmp
mov
sub
mov
jmp
es
lcall
xchg
mov
jp
scas
in
aam
call
in
imul
lock
aaa
scas
inc
push
cltd
cmc
das
fisttps
xor
xor
lahf
jne
pop
mov
cmp
mov
xor
xor
ret
ljmp
add
add
jecxz
ret
sti
cmpl
fistl
shlb
scas
subl
xor
mov
fld
dec
mov
adc
cmpsl
dec
adc
sbb
sbb
or
xchg
pop
sti
js
movsb
rolb
enter
fcmove
sbb
jnp
out
ficompl
or
pop
aas
mov
mov
ja
mov
test
lods
xchg
mov
dec
jecxz
jnp
ss
fsubrl
jle
aad
sbb
mov
lea
add
subb
daa
arpl
dec
addb
adc
push
stos
mov
push
mov
out
daa
cmp
jmp
xchg
pop
ss
and
dec
xor
es
out
mov
cmpsl
fists
inc
inc
cld
and
add
das
ljmp
es
ret
pop
notl
cmp
xchg
test
jns
arpl
push
xchg
adc
mov
mov
add
ret
jae
inc
movups
lret
xor
cmpsl
push
out
or
or
test
push
dec
je
push
mov
mov
push
test
in
ds
ds
dec
mov
add
lahf
popf
out
lods
pop
outsl
sub
out
mov
sub
sub
inc
repnz
add
mov
and
lds
fwait
sub
jmp
daa
push
scas
xchg
xchg
das
push
les
jmp
mov
loop
mov
ja
sahf
aaa
sbb
into
inc
inc
out
aad
sub
dec
push
inc
pop
subl
sbb
pop
cmpsb
xor
xor
xor
ds
test
mov
push
cmpsb
adc
jl
in
or
jmp
add
jno
push
lea
dec
jno
fdivrs
inc
mov
push
test
sbb
push
xchg
cs
es
mulb
bound
loop
xor
fwait
add
sub
loope
int
mov
mov
addr16
decl
popf
nop
je
js
movsl
jle
adc
int3
out
bound
cltd
mov
outsl
cmpsb
mov
push
sub
nop
cmp
sub
jne
sbb
rclb
jne
pop
sub
movsl
jl
push
xchg
jo
lret
jge
ret
lret
mov
jbe
jg
popf
popf
and
into
dec
jge
dec
lret
xor
insb
shll
ja
sbb
andb
cmp
mov
inc
popf
dec
cmp
popa
push
pop
or
sbb
xor
xchg
orb
jg
jnp
clc
mov
testl
insb
mov
cmp
test
ljmp
orb
popf
sub
mov
xchg
pop
sub
mov
and
stos
int
xor
je
std
fdivrp
sbb
aas
and
leave
mov
lahf
ljmp
iret
dec
shrb
pop
adc
mov
pop
das
int
sbb
iret
cwtl
cmc
js
jne
pop
push
hlt
stos
mov
xorb
test
mov
jo
test
xor
xchg
jno
inc
pop
ret
jl
repnz
dec
jg
pop
ja
jnp
push
mov
xlat
in
aaa
leave
cmp
sbbl
xchg
data16
cli
ja
lcall
ror
jns
decb
sbb
add
jge
aam
xor
and
cmp
dec
pop
andl
jge
outsb
pop
pop
enter
stc
subl
cmc
jge
insl
push
iret
mov
push
lcall
push
or
pop
cmp
push
jnp
xchg
xchg
faddl
push
cwtl
call
shr
pop
add
gs
aaa
jae
ss
scas
sbb
xchg
cmp
jge
pop
andb
movsl
aad
movsb
es
push
lcall
sti
xor
stos
cmp
aaa
mov
dec
xchg
pop
and
ja
add
xor
jbe
repz
stos
and
imul
imul
setp
inc
sub
ficoml
mov
aaa
pop
adc
test
sbb
pop
xor
cmp
es
fs
movsl
sti
push
and
popa
out
std
sub
ret
call
arpl
fchs
mov
fwait
ja
in
sti
in
jp
neg
mov
in
in
mulb
mov
jecxz
cmpsl
mov
xor
pop
sub
imul
dec
daa
flds
dec
pop
or
add
nop
add
dec
je
push
mov
stos
inc
and
jmp
in
push
aaa
jg
out
cmpsb
jmp
ret
dec
mov
add
shlb
shrl
or
pushfw
ds
mov
dec
adcb
leave
test
or
dec
adc
idivb
mov
adc
or
push
outsb
int
sarb
in
cltd
lcall
push
jg
aaa
fildl
fcompl
jns
pushf
xchg
imul
dec
bound
loop
shll
sbb
xchg
movsl
sarl
add
fwait
mov
push
cmp
sti
leave
fucomi
out
fwait
xchg
insl
nop
mov
xchg
sbb
sarb
xchg
or
sbb
enter
mov
rolb
loopne
pop
movsb
sub
sbb
or
test
add
xor
ja
lock
jno
aad
adc
mov
imul
and
xorl
pop
cmpsb
dec
shlb
mov
pusha
int
mov
cmp
rorl
scas
out
and
fistl
mov
pop
jno
lret
dec
les
mov
mov
or
leave
sbb
sbb
mov
pop
pop
push
and
faddl
pushf
lcall
in
bound
imull
cs
into
mov
test
std
xlat
mov
faddl
adc
push
mov
pop
xchg
adcb
int
add
cs
loope
mov
sub
enter
ret
adc
rorb
das
sti
sbb
pop
jns
jae
loopne
mov
jbe
dec
xchg
mov
cli
mov
stos
inc
lahf
arpl
jle
stos
fs
movsb
aam
jp
call
ret
adc
cmp
push
dec
push
stos
or
fidivl
pop
add
movsb
lods
js
sbb
ja
pop
xchg
mov
clc
and
fwait
jecxz
sahf
sub
jp
test
outsl
adc
lret
sti
out
sbb
sbb
xor
loope
sbb
fisubrs
sbb
sub
adc
xchg
mov
movsb
std
repnz
mov
fs
iret
insl
or
mov
jb
mov
jp
out
out
test
jae
int3
jno
or
sarl
mul
mov
inc
inc
push
leave
lods
or
push
rorb
and
inc
pop
out
push
stos
negl
les
push
cmp
xchg
sti
ret
fcomp
xor
insb
inc
call
clc
ret
lcall
xchg
movsb
push
fcoms
call
sbbl
and
jl,pn
je
pop
push
loop
xlat
or
test
xor
mov
mov
jl
sbb
aam
xor
pop
test
xor
cmp
adc
sub
cmp
leave
pop
aaa
mov
cmp
lret
pop
cld
jnp
add
and
mov
cmp
mov
shl
in
pop
leave
andb
addl
mov
jge
pop
cmp
sbb
lret
inc
lds
pop
fiadds
fadds
sub
cs
cmc
fstp
dec
sub
sarl
vmread
lods
xchg
mov
sbbb
lcall
fs
dec
or
ds
ficomps
test
outsl
xor
pop
or
les
test
into
out
adc
inc
outsb
outsb
orb
pop
dec
in
pop
clc
push
popf
sbb
mov
dec
mov
mov
sub
imul
dec
arpl
jge
insl
or
sbb
out
and
in
popa
enter
adc
test
cmp
repnz
and
dec
push
popa
fs
mov
aam
and
insb
jno
loopne
jno
lods
nop
cmp
push
jnp
out
and
gs
add
dec
cmp
scas
adc
bound
aas
xchg
sti
nop
jb
ret
jno
cs
rcll
jge
xor
push
sbb
test
xchg
loope
ret
lret
dec
test
cli
and
mov
insl
cmpsl
flds
out
stc
adc
cmp
add
pop
push
push
cmc
xchg
cli
push
pusha
pushf
hlt
out
jle
xchg
iret
lcall
lahf
push
std
fisttpl
or
outsl
add
sub
aam
xor
sub
in
inc
jle
sbb
sbb
test
push
mov
mov
and
adc
or
loopne
mov
inc
js
dec
les
out
sub
pop
iret
repz
ds
fisttps
mov
imul
sub
das
adc
pushf
xor
fbld
lret
add
adc
ror
cmp
jecxz
pop
aad
xchg
cmp
in
cwtl
pop
lcall
sub
push
rcrb
inc
adc
scas
jle
inc
rclb
jnp
cli
and
push
mov
iret
xchg
pop
aaa
mov
adc
stc
mov
push
mov
inc
int3
mov
lahf
sarl
negb
in
daa
sbb
mov
jo
push
jno
popf
dec
jb
in
ret
mov
lret
roll
out
and
and
adc
cmpsl
xchg
adc
pop
jne
xchg
pushf
mov
arpl
push
stos
std
addr16
rolb
adc
sub
inc
ja
test
inc
and
int
xor
ds
rcrb
pop
add
gs
cltd
xchg
icebp
push
int3
mov
adc
sti
clc
pushf
pusha
std
pushf
into
xor
and
repz
inc
dec
bound
jae
hlt
sbb
insl
add
pop
pop
stos
jg
pop
mov
mov
loope
les
and
adc
jo
stos
aaa
xchg
les
aam
mov
lahf
cmp
insl
std
test
roll
jp
or
jg
pop
push
fdivrs
ret
lea
pop
mov
clc
and
xchg
cwtl
pop
outsl
shrl
nop
pop
mov
and
inc
dec
pushf
loope
jmp
or
leave
jo
cmp
cmpsl
fs
leave
push
mov
out
lret
stc
rclb
xchg
pop
rcl
out
pop
fbstp
lcall
inc
movsl
out
leave
xor
push
movsl
sub
emms
js
out
filds
push
cli
in
fwait
adc
bound
mov
aad
xchg
in
jb,pn
jp
mov
push
mov
cs
inc
mov
cld
jne
repz
push
and
lcall
xchg
sbb
fxch
mov
and
sbb
pop
ljmp
lea
mov
je
mov
repz
add
mov
pop
fwait
and
add
rcl
sarb
cmp
daa
sbb
mov
sti
push
jns
outsl
emms
es
stos
xor
hlt
xor
mov
xchg
ret
ljmp
ficomps
push
imul
in
popf
dec
sbb
add
mov
sbb
xor
inc
scas
push
sbb
jno
fists
cltd
enter
mov
cmp
ficoms
lret
cmp
sub
cs
call
orl
data16
movsb
repnz
cld
pop
leave
jb
mov
fistpl
push
add
xor
pop
cmpsl
imul
clc
mov
stos
aam
pop
add
frstor
xor
or
mov
sbb
add
test
je
xor
mov
jg
mulb
cmp
loope
jo
xchg
lea
mov
jne
icebp
cmc
adc
add
test
push
insb
sub
mov
sub
mov
inc
test
and
mov
adc
cmp
and
sbb
shlb
arpl
and
xlat
and
jnp
dec
jp
xor
push
mov
add
push
stos
arpl
add
jns
loopne
out
dec
cmp
or
pusha
aad
adc
cli
andl
call
mov
add
out
xlat
notl
and
cltd
cmpsl
lock
loop
into
outsb
cwtl
or
sbb
sbb
fsubrs
fldl
mov
xor
loop
mov
mov
or
lret
sub
movsb
jnp
pop
pop
js
sub
cmc
mov
outsb
test
adc
mov
jae
xor
mov
imul
test
sub
js
sbb
inc
rcr
out
dec
pop
js
mov
daa
bound
pushf
cltd
mov
pop
imul
add
in
or
cmp
xor
mov
lods
push
jnp
lods
fcomip
xchg
push
icebp
leave
xchg
lret
test
mov
fisubs
pop
adc
sbbl
and
add
adc
inc
xor
movmskps
stos
ja
sahf
mov
push
fwait
popf
jp
cmp
mov
loop
cmpsb
inc
cmp
in
mov
popa
push
push
lods
push
add
jns
lods
roll
pop
clc
jp
dec
sbb
cmc
decb
cmpsb
xchg
inc
cmpsb
call
fdivrl
pop
daa
lds
xor
jecxz
inc
dec
xchg
pop
jns
in
cmc
js
add
jge
sbb
adc
ja
mov
cmp
push
jnp
and
and
fs
fninit
sub
lea
inc
fs
sbb
dec
insl
mov
mov
cmpsb
add
ja
mov
rcll
lahf
pop
sub
sub
push
and
cli
mov
jo
mov
inc
hlt
cmp
je
jle
daa
mov
sub
and
es
inc
fbstp
mov
or
jbe
loopne
jg
fistps
jne
daa
push
dec
nop
cmp
and
idivl
fildll
push
fdivl
mov
cltd
mov
std
cmpsl
sub
push
les
jg
pop
cli
inc
mov
dec
dec
push
movsl
dec
adc
xchg
mov
dec
sbb
pop
aam
push
shrb
cs
inc
mov
cmp
idivb
out
mov
je
leave
sti
imul
rorb
imull
xor
gs
add
fs
add
aad
icebp
mov
outsl
xchg
pop
adc
and
pop
movsb
repz
arpl
js
jbe
dec
pop
rol
scas
pusha
test
mov
pop
aaa
push
or
dec
sub
insb
popa
cli
loope
imul
sbb
and
jecxz
out
scas
out
ret
cmp
add
mov
inc
dec
jle
mov
adc
and
mov
out
stos
xor
pop
push
sbb
imul
cmp
stos
pop
rclb
inc
mov
jns
cli
flds
mov
xor
in
ljmp
push
test
push
adc
popf
cmp
aam
sub
push
lret
dec
aaa
or
rclw
mov
add
xchg
ficomps
xchg
add
fdivrl
adc
dec
jns
mov
xchg
jp
adc
fwait
push
fcoml
xlat
or
inc
leave
int
sub
fs
jno
push
jnp
insb
cmc
jge
mov
popa
test
popa
ja,pt
xorb
scas
out
jecxz
xlat
sti
dec
cld
loope
jl
lock
cmp
xchg
fdivp
add
cli
hlt
mov
mov
add
call
push
ffree
jns
js
xchg
mov
scas
enter
lods
pushf
ja
stos
sarl
int
sbb
cmpl
add
cmpb
adc
mull
jb
pusha
jmp
and
mov
mov
sar
sbb
sti
aad
loope
mov
xor
aad
lea
and
jle
loop
xor
fwait
lock
jo
pop
lret
les
dec
push
pop
xchg
or
mov
int
test
mov
push
jl
dec
mov
prefetch
stos
out
jmp
push
and
push
and
imull
cmp
or
ffreep
outsl
sub
pop
lods
add
insl
aaa
es
ret
push
jnp
gs
dec
pop
cmp
dec
out
and
mov
mov
stc
pop
pop
inc
ja
jmp
loop
and
test
repz
subl
data16
fdivl
mov
divl
ljmp
aad
jge
dec
xchg
jl
loope
lock
sbb
sahf
and
inc
adc
mov
pop
outsl
fcomp
cld
adc
sbb
sbb
pop
mov
sbb
test
sbb
push
outsl
xchg
or
aas
dec
xor
popf
xlat
dec
or
mov
add
cmp
cs
imul
rcll
add
vmread
test
xchg
mov
xor
in
hlt
outsl
lock
jo
sbb
pop
and
mov
js
test
outsl
sub
xchg
push
inc
or
mov
inc
push
in
cmp
mov
and
and
cmc
notb
cmp
or
push
xorb
mov
out
fldz
imul
bound
sub
stos
jns
inc
mov
xchg
xchg
sbb
sub
or
ja
pop
jae
popf
xchg
jne
decb
lods
pusha
push
add
ljmp
adc
or
pop
sub
out
fs
jg
cli
shrl
push
sarb
mov
shlb
xchg
mov
js
aas
sub
lock
pop
jecxz
notl
add
sbbl
pop
jmp
les
inc
imul
push
pop
lcall
int3
pushf
shll
push
mov
das
inc
rorl
or
pop
mov
loope
inc
push
xor
mov
xor
fldenv
add
xchg
mov
lret
test
push
xchg
add
xorl
ss
mov
faddl
and
sub
daa
iret
push
jb
jb
insl
popf
rorb
mov
aas
mov
int
and
cltd
fiadds
push
fbld
test
dec
ret
incl
hlt
cmp
jno
xor
push
repz
out
gs
into
test
pop
xor
xchg
cmp
mov
push
xchg
jle
imul
push
jmp
push
lret
ss
inc
jb
lds
ficompl
cltd
adc
sbb
mov
mov
lds
add
in
popf
push
and
rcrb
and
jns
cmpl
adc
push
orb
fwait
testb
jns
sbb
movsb
xchg
loopne
ret
lock
loop
scas
cmpsl
mov
and
xchg
push
push
inc
and
add
xor
stc
lret
and
test
clc
sub
add
adcb
xor
pop
addr16
sbb
mov
inc
dec
adc
xchg
scas
inc
and
cmp
jl
sbb
loope
and
repnz
xchg
std
vmaxsd
mov
aaa
push
cwtl
sub
loope
add
inc
data16
inc
ja
stos
aad
xchg
mov
mov
stos
or
add
fcom
mov
add
push
jp
xchg
or
push
insl
adc
outsl
daa
lret
nop
jecxz
push
in
divb
mov
popf
mov
mov
xor
andl
scas
add
dec
mov
xchg
shlb
add
hlt
xor
lods
das
cmp
lock
adc
enter
xchg
mov
jae
insb
icebp
hlt
adc
mov
mov
cmp
jno
repz
in
mov
aam
xor
pop
push
fwait
scas
clc
adc
or
scas
popf
adc
fs
mov
lret
out
mov
lea
fcmovbe
push
pop
fs
int
jp
aam
pop
pop
push
cld
movsb
sub
nop
rcll
adc
mov
jmp
in
adc
xor
std
pop
out
call
ljmp
js
ds
add
filds
aad
int3
stc
in
bswap
sbb
nop
cmp
cli
jg
adc
cld
push
or
mov
mov
movsl
hlt
je
addl
loop
or
dec
inc
adc
push
call
cwtl
or
xchg
ds
ja
fwait
adc
gs
loopne
add
add
mov
cmp
cmpb
int
ret
jno
add
out
les
inc
loope
out
popf
push
jne
cmp
xor
lds
mov
jae
pop
ja
jle
pop
xchg
test
fucomp
lret
add
dec
xchg
fldenv
jmp
int
les
dec
mov
bound
shlb
xchg
jbe
push
inc
fidivs
xor
imull
lock
hlt
mov
push
in
inc
add
repz
out
gs
adc
into
or
sub
fdivrl
scas
jo
pop
mov
xchg
sar
leave
jne
lods
adc
test
dec
cmp
sub
addb
mov
add
int
mov
out
jno
lret
test
cli
filds
xor
xor
in
mov
lods
hlt
inc
sbb
iret
xor
cmpsb
push
dec
movsb
cmp
mov
das
push
in
inc
and
test
sub
or
lds
out
push
xor
mov
mov
jnp
xor
inc
jg
fcmovu
sahf
out
out
insb
pop
cld
mov
push
xlat
mov
cli
fucom
push
call
pop
mov
cmpsl
fnstcw
mov
hlt
imul
add
sub
scas
mov
push
aas
out
ja
push
aaa
sbb
jnp
push
pop
mov
xor
and
mov
xor
add
xlat
pop
jne
or
fstps
push
fs
sub
dec
daa
dec
imul
jge
stos
or
mov
es
push
lcall
dec
jecxz
dec
sbbl
cltd
inc
scas
and
jp
and
mov
adc
push
pop
mov
and
sub
cmp
hlt
jb
outsl
adc
mov
xor
sub
xchg
mov
enter
mov
xchg
mov
or
add
das
pusha
add
in
dec
or
fisubs
push
dec
adc
loopne
repnz
je
dec
std
ja
aam
sarl
xor
mov
and
push
ljmp
sbb
js
push
mov
roll
fwait
insl
xchg
inc
fcomps
pop
push
sbb
inc
mov
xchg
test
les
jg
jnp
cmp
roll
dec
clc
call
push
or
sub
sub
dec
cmpsl
rol
mov
push
inc
in
mov
ds
and
cld
ret
xchg
mov
pop
xor
add
push
sub
mov
xlat
rol
call
dec
movsl
push
stos
fistps
ds
in
andb
pop
mov
inc
jno
mov
adc
ret
out
sahf
lret
sub
pusha
jne
inc
fwait
aam
xchg
or
and
add
or
aam
into
cld
add
ret
aaa
mov
mov
push
rcll
cmp
jbe
dec
sbb
jbe
nop
push
xor
fwait
and
and
clc
out
ret
or
sbb
sub
movsb
dec
out
cmp
out
push
cmp
out
imul
fs
repz
jecxz
scas
in
sbb
jno
pop
subl
dec
lods
dec
mov
fcomps
mov
sub
mov
adc
in
mov
out
add
pop
cmp
je
clc
fildll
sbb
aas
stos
xchg
insl
mov
xor
mov
test
mov
sub
js
mov
mov
cmp
push
cmpsl
movsl
popf
out
add
adc
aam
pop
lods
jecxz
cmp
sbb
loope
dec
fsts
das
pop
jg
pop
cmc
xchg
xchg
out
and
add
and
sbb
xchg
push
stos
lret
into
lcall
rclb
mov
xchg
stos
xchg
push
push
lods
insb
lret
jns
mov
mov
inc
dec
jmp
fbld
xchg
icebp
cmc
enter
push
pushf
rorb
dec
inc
nop
dec
mov
pop
inc
in
sarb
push
inc
iret
xchg
orb
mov
clc
ljmp
subb
ljmp
sub
repz
mov
pop
sahf
pop
xor
movsb
jp
cmp
ret
mov
jl
cmp
cmp
adc
cmp
push
mov
mov
pop
test
inc
or
cmp
push
add
shlb
add
out
sbb
repnz
ret
nop
inc
mov
int
gs
fwait
inc
stos
outsl
lods
sahf
mov
ret
hlt
mov
inc
inc
stc
adc
mov
ret
sub
adc
cmp
mov
or
xchg
dec
mov
push
or
push
repz
push
dec
lret
xchg
jecxz
xchg
aas
and
mov
test
cmp
xchg
push
cmp
pop
fidivs
js
adc
jle
fisubrl
fsubrl
insl
xchg
bound
xchg
jb
adc
js
pop
in
or
enter
cmp
aaa
or
in
sbb
xlat
or
jae
add
icebp
push
repz
or
cmp
pop
mov
cmp
xor
int
lahf
adc
gs
mov
fs
iret
mov
mov
push
or
xchg
or
loop
adc
cmp
jns
aaa
dec
imul
stos
pushl
and
divb
movsb
fldenv
sub
jbe
out
shll
xor
adc
mov
test
cmpsb
xchg
sub
mov
xchg
fisubrs
aaa
cmp
in
lret
add
cmp
ficomps
ret
int3
lea
dec
ficomps
ds
in
insl
bound
cmp
mov
push
pop
sbb
mov
stc
lret
loopne
fimull
cmpsb
jns,pt
std
jg
mov
enter
dec
push
in
push
push
shl
fbstp
stc
aam
adc
hlt
adc
orl
fs
repnz
push
jle
adc
push
xchg
pop
push
jb
orl
sub
xchg
rcl
aaa
pop
shll
xchg
mov
notl
bound
insl
pop
mov
lods
jle
jmp
pop
in
movsb
in
push
dec
insb
fwait
ja
jbe
sbb
mov
int3
cmp
mov
cltd
rclb
add
cmpl
jne
test
cmpsl
call
outsb
pop
out
jge
jg
push
ret
repnz
lock
out
movsb
and
lcall
test
jle
inc
arpl
xlat
sub
dec
and
jl
mov
sbbl
rolb
inc
jnp
mov
jle
or
xchg
mov
inc
std
loopne
shll
inc
hlt
test
inc
and
xor
sahf
add
addb
dec
inc
sbb
mov
shlb
in
push
lret
adc
inc
setns
dec
out
pop
jae
sahf
test
jne
mov
fs
scas
mov
jecxz
fwait
out
inc
aad
imul
pusha
add
jae
and
mov
inc
inc
ljmp
or
add
jmp
inc
loopne
out
jns
inc
in
adc
es
push
clc
dec
mov
or
inc
in
pop
push
out
popf
cs
sub
ds
pop
push
loop
and
into
dec
pushf
adc
sahf
and
cwtl
mov
and
sub
das
std
insl
daa
mov
push
cld
outsb
cmpsl
sub
imul
adc
cld
mov
pop
jo
out
movb
mov
mov
cmp
or
cltd
pusha
in
test
or
add
jo
sbb
or
or
mov
cmp
jno
cmpsb
pop
ret
mov
enter
push
sub
jbe
mov
mov
jl
pop
dec
add
je
dec
push
push
rcl
jne
sahf
jge
loop
test
xadd
dec
and
outsl
jp
or
mov
sbb
repnz
or
addl
xchg
test
push
in
xor
out
mov
push
jbe
push
pop
cmc
sbb
ljmp
lea
sbb
pusha
pusha
pop
das
cmp
push
xor
jecxz
test
shl
or
mov
idivb
push
imul
es
xorl
int3
inc
icebp
mov
pop
addl
loopne
xchg
mov
js
into
cmp
inc
adc
js
pop
adc
jmp
in
fwait
xor
stc
push
mov
stos
add
bound
mov
in
int3
jmp
adc
mov
and
daa
aam
out
and
pop
add
pop
sbb
dec
test
nop
or
mov
mov
sub
push
mov
loope
in
add
jl
and
add
pop
xor
aas
push
inc
insb
insl
xchg
mov
jmp
pop
xchg
popf
mov
dec
or
cmp
pop
xor
or
es
jg
js
loope
stos
pushf
pushf
or
out
inc
and
repnz
mov
sti
adc
xchg
add
scas
fiaddl
inc
imull
push
pop
add
pop
or
jmp
cmp
daa
mov
sbb
xor
ja
mov
mov
dec
fsubp
daa
mov
sti
out
xchg
notb
mov
jnp
jmp
xor
lahf
icebp
pop
push
les
jno
ja
jno
inc
loopne
loopne
cmp
cli
pop
pop
xchg
cmp
push
out
push
jg
movsb
push
cmp
enter
sbb
call
div
subl
or
sub
sarb
data16
mov
inc
js
mov
inc
inc
sub
insl
in
not
stos
add
xchg
sbb
out
jne
jae
mov
add
push
jl
test
sbb
fisttpll
scas
test
aad
sub
sub
push
fiaddl
push
les
fiadds
mov
push
ja
sbb
inc
dec
mov
mov
xor
cwtl
rcrl
bound
xor
jno
jp
jmp
popa
cli
ret
rep
dec
lret
adc
frstor
adc
movsl
loope
pop
mov
lods
fsubl
mov
cs
xor
sbb
and
aam
cmp
inc
int3
insl
xlat
jae
jne
divb
iret
shl
sbb
dec
leave
mov
push
adc
pop
jbe
call
jb
push
out
fists
and
arpl
jns
cmp
xchg
pop
xchg
cmp
and
aas
mov
push
dec
jb
repz
cmc
jns
test
pusha
mov
lds
push
pop
ja
lods
outsl
or
call
ret
outsb
lods
jl
popa
cmp
cmp
out
xchg
add
cmp
je
and
out
es
add
mov
sub
pop
jo
roll
aad
push
out
xchg
mov
leave
push
mov
jge
jmp
dec
jmp
sbb
fwait
stos
icebp
fimull
icebp
mov
jae
insl
cmp
in
cli
mov
repz
push
or
gs
sbb
mov
pop
pop
sbb
sbb
sub
dec
or
adc
and
hlt
jg
cmp
stc
aam
movsl
in
out
sbb
loope
icebp
test
cmp
push
mov
loop
sbb
inc
out
xchg
push
cmpsb
pop
mov
testl
scas
ss
in
test
mov
stc
add
cmp
adc
clc
mul
sbb
aad
xchg
push
cld
lret
or
aad
in
mov
ret
popa
jns
repz
or
dec
lret
jae
sbb
loopne
adcb
xchg
test
push
es
cmpsb
out
mov
pop
js
mov
in
adc
pushf
adc
push
xor
ja
movsb
sbb
loope
out
xchg
scas
int
mov
mov
adc
jns
divb
in
and
pop
mov
adc
insb
add
push
hlt
and
aam
fsts
lret
gs
jbe
fdivl
mov
lods
mov
mov
jp
daa
pop
add
pop
flds
mov
sti
shl
mov
jp
dec
jb
je
insl
test
dec
pusha
lcall
pop
test
ja
test
cmp
repz
pushf
bnd
popf
push
pop
fcoms
clc
outsl
rolb
mov
push
paddusw
or
dec
lock
cmp
dec
push
pop
mov
addr16
inc
cmp
push
sbb
mov
mull
sub
ja
cs
ljmp
sbb
shl
push
outsl
lcall
stos
popa
jbe
mov
in
push
hlt
popw
fnstcw
daa
repz
das
out
cmp
xor
pop
xor
loope
fildl
fistpl
dec
lds
movsb
mov
lcall
inc
loop
jp
push
sub
ret
and
xchg
mov
pushf
mov
inc
arpl
push
in
xchg
aas
fdivs
xor
aaa
popa
pop
push
xchg
pop
lahf
shr
pop
loope
jmp
cmp
outsl
cmc
insb
into
ret
ds
xchg
jb
hlt
push
push
movsl
jb
and
pusha
jl
fcmovnbe
ss
lcall
insb
mov
pop
add
xor
xor
sahf
sahf
lahf
out
sub
pop
mov
and
add
adc
mov
jg
and
xor
das
sub
inc
adc
popf
nop
gs
imul
pop
xchg
add
fucomip
add
fchs
dec
idivb
mov
mov
dec
popf
fdivrs
cltd
xor
in
dec
fs
or
inc
xchg
in
mov
cs
pop
xchg
mov
inc
ljmp
nop
negl
mov
push
and
sbb
xor
pusha
xor
xchg
out
jmp
sub
add
aas
outsl
dec
mov
mov
call
pop
aas
push
jbe
nop
outsb
adc
jecxz
pop
scas
scas
mov
test
push
push
dec
mov
int
lea
and
aas
outsl
lock
jo
jle
pushf
andb
xlat
and
sbb
mov
add
cltd
add
popa
shlb
or
xchg
inc
insb
popa
fsubl
inc
or
test
loope
mov
push
mov
mov
jmp
push
das
jb
xor
fists
jne
in
push
mov
dec
xor
repnz
cmp
mov
push
xchg
aas
addr16
mov
jb
cmp
popf
xchg
ljmp
inc
movsb
rcrb
pop
insb
xchg
cmpsl
jg,pt
cwtl
movb
or
out
xchg
cmp
stos
fisubrs
cmp
pop
repz
loope
insb
sarb
push
push
jno
push
pop
mov
or
and
push
xor
jae
sub
enter
insl
mov
shl
mov
test
mov
enter
mov
std
int3
sub
lea
aad
mov
faddp
mov
shlb
stos
rclb
and
sub
sbb
and
lret
mov
sbb
dec
rolb
fld
jbe
jo
and
cs
jl
popf
pop
rcll
shll
lret
or
imul
mov
inc
insb
rcr
mov
mov
shrw
or
stos
jp
sbb
or
sbb
imul
adc
fsubl
pop
pop
js
lds
cmc
movsl
pushf
sti
pop
adc
daa
ljmp
popa
outsl
push
fsubs
xchg
pop
pop
push
cmpsl
popf
movsl
mov
and
in
fs
add
orl
xchg
insl
lahf
mov
add
sbb
push
ret
mov
lock
inc
in
lods
mov
dec
mov
add
add
or
lea
in
cltd
inc
cwtl
test
xor
int
pop
and
sub
xchg
cwtl
cltd
inc
pop
test
xchg
es
sbb
pop
sub
addr16
filds
shll
outsb
pop
pop
pop
inc
cmp
in
scas
mov
sub
subl
and
pop
pop
mov
xchg
std
xor
cmc
push
popa
sbbl
push
mov
daa
cwtl
sbb
and
jle
lcall
cmp
aad
insl
or
push
or
lock
ret
std
mov
fwait
xchg
xor
insb
push
fsubs
inc
and
push
mov
out
ret
sti
add
fistpl
outsl
cmpsb
int
roll
jb
stos
lret
xlat
out
cmp
js
je
fistpll
add
call
adc
cmp
sbb
pop
dec
xor
call
or
lea
adc
xor
lods
sbb
cwtl
and
pop
push
mov
mov
adc
xor
mov
sub
sub
ret
xabort
fisubrl
cli
push
into
adc
lahf
lcall
push
cmc
push
jg
xchg
and
sbb
rcrb
sub
adc
outsb
cmp
cmp
icebp
fisubrl
sbb
sti
push
les
inc
pop
dec
mov
pop
push
jb
mov
addr16
mov
ljmp
inc
lock
pop
inc
cmp
mov
outsl
arpl
xchg
notb
inc
outsb
xchg
adc
fdivl
lds
pop
es
xlat
int
mov
mov
sbbl
push
cmp
into
jl
dec
pop
push
aam
int
loop
pushf
xchg
psubsb
jle
sub
nop
push
add
js
hlt
rorb
out
aam
mov
imul
js
jno
gs
xor
add
fnstsw
inc
and
popa
jnp
jns
shl
pop
test
rorl
mov
aaa
hlt
push
sti
lcall
lds
mov
out
subb
xlat
xchg
lret
pushl
daa
aad
lock
cwtl
dec
aad
ja
dec
mov
push
sub
loop
ret
push
dec
ja
add
add
fwait
mov
cmpsb
push
push
into
sti
clc
add
jmp
pop
daa
imul
int
ret
pusha
mov
pop
je
jnp
inc
mov
dec
test
sub
or
movsl
add
mov
push
adc
bound
pop
xchg
int
addr16
jge
orb
inc
push
lret
fidivl
pop
sti
iret
cwtl
push
outsb
fidivs
sti
mov
cld
mov
or
add
enter
sahf
jmp
test
mov
lret
inc
fsubrl
push
mov
cmp
cmp
jmp
add
and
mov
mov
and
jge
aaa
jecxz
mov
addr16
fiaddl
xor
pop
jae
ljmp
outsl
fs
mov
push
mov
aaa
mov
add
imul
mov
pop
mov
dec
imul
std
sarb
xchg
popa
push
shl
push
mov
push
lret
rorb
sub
test
inc
test
lret
lret
idivb
sub
movsb
or
pop
adc
or
dec
jge
aas
lcall
mov
sahf
adc
mov
ja
cmpl
push
ss
mov
push
sub
hlt
pop
dec
pop
jbe
sub
dec
mov
xchg
mov
lods
popa
pop
pop
and
mov
inc
xor
out
cwtl
pop
enter
mov
in
fimull
hlt
push
and
shll
xchg
mov
jecxz
ds
jl
hlt
imul
adc
je
fmuls
xorps
lock
dec
sbb
leave
je
insl
in
mov
fcmovb
xchg
sarl
mov
shlb
add
loope
sub
sarl
jne
outsl
mov
out
stos
mov
xor
fimull
fwait
out
cmp
hlt
int3
movsl
roll
stc
test
sub
aam
pop
jnp
fists
mov
add
cwtl
insl
xchg
xor
cmp
gs
push
ret
popa
xchg
scas
inc
insl
jle
repnz
sub
xor
sbb
pop
mov
or
add
sub
movsl
and
aaa
stos
mov
loop
mov
push
fistpl
dec
in
leave
addr16
push
dec
clc
pop
add
pop
add
push
shr
jae
xchg
enter
std
lea
mov
rcll
xchg
aaa
ret
enter
pop
xchg
nop
mov
mov
xchg
sbb
iret
pop
jb
xorb
xchg
and
inc
out
je
inc
mov
jbe
out
or
add
mov
cmc
fsts
dec
jae
mov
shl
mov
mov
or
xchg
mov
push
sub
xor
cmp
adc
shr
xchg
xor
sbb
and
pop
aaa
xor
mov
pop
mov
dec
push
xchg
jae
adc
jo
xor
dec
pop
int
ficoms
addr16
out
je
push
imul
test
and
adc
out
int3
xchg
inc
sub
push
into
sbb
xchg
in
int3
jnp
add
fnstsw
fsts
add
jne
mov
std
out
test
inc
fisttpll
push
outsb
or
cmpb
inc
push
and
inc
test
adc
or
fs
xchg
stos
scas
out
repnz
sbb
inc
xor
mov
js
xor
imul
call
inc
mov
add
and
cmp
xor
jne
pop
cmp
or
rolb
pop
lcall
out
jno
inc
add
cmp
mov
fnsave
fldl
mov
repz
jle
push
imul
mov
and
pop
aam
out
jnp
jl
jmp
cmp
out
jb
das
push
int
insl
sub
lret
dec
xor
lock
bound
nop
xchg
out
aaa
jl
shll
mov
xlat
shll
jmp
negb
mov
mov
jbe
aas
les
leave
or
arpl
pushl
sbb
sub
mov
cmp
dec
jbe
jnp
and
xchg
mov
incb
aas
andl
inc
mov
push
scas
push
xchg
insb
cmpsl
sbb
lods
shll
and
adc
inc
xor
stos
fcomps
add
sbbl
xchg
cmpb
and
jp
push
hlt
loope
or
mov
lret
jb
xchg
pusha
push
fisubl
frstor
outsb
xlat
fsubs
fists
insb
lds
loop
fs
daa
in
lahf
test
pop
push
sbb
insl
pop
loope
movsl
loope
xor
ss
cwtl
inc
aam
mov
call
lcall
mov
or
enter
mov
and
sti
cmp
mov
add
fwait
popa
pop
subl
scas
xor
iret
aaa
cmpl
cltd
cli
popa
enter
jp
add
inc
mov
lods
repz
nop
mov
lret
nop
push
sti
jo
pop
pop
adcl
je
mov
outsb
shlb
push
out
std
xor
repz
sbb
enter
jl
push
sbb
ja
lods
push
movsb
ret
mov
jl
xlat
aaa
ret
shll
vmptrst
cltd
xor
xchg
push
dec
cmc
lret
mov
inc
inc
or
jecxz
jnp
push
sbb
enter
push
fldl2t
mov
imul
mov
pop
sti
adc
push
cmp
std
inc
movsb
xorb
fdiv
outsb
mov
xor
lahf
ret
aad
adc
aad
jo
loopne
sbb
js
xor
mov
negl
cmc
loope
dec
xchg
cmp
or
mov
jle
popa
jne
jp
ficoms
loopne
sub
and
xor
mov
pop
enter
ret
sub
mov
aam
pop
icebp
fcompl
mov
pushf
sub
test
dec
or
lret
or
daa
inc
int
cwtl
lahf
outsb
cmp
push
in
and
or
mov
movsb
mov
das
bound
push
push
pop
scas
xchg
mov
push
mov
pop
push
jl
into
ja
ret
icebp
insl
cmp
xchg
xor
in
lock
or
cmp
cwtl
jp
cmpsb
jo
insb
xlat
aam
or
aam
popf
outsb
adc
cmpsb
test
adc
or
ror
and
dec
dec
icebp
insl
jle
pop
aas
or
scas
inc
call
mov
in
or
das
insl
xor
xchg
addl
sub
dec
outsl
xchg
sub
sbb
sub
mov
lods
push
sahf
pop
ret
sub
je
inc
jae
and
push
mov
push
mov
dec
pop
mov
iret
mov
outsl
push
xor
sbb
enter
jge
fs
stos
push
dec
popf
ds
push
test
inc
xchg
or
cmp
idivl
xchg
jge
decb
adc
mov
cmp
fdivrs
jle
ds
inc
nop
ds
hlt
mov
std
adc
mov
mov
pop
xchg
cmp
repz
mov
pop
testb
ja
cli
xorl
sub
mov
jecxz
cmp
bound
out
jecxz
add
fidivrs
inc
cmp
negb
aad
or
nop
xor
in
add
mov
add
pop
arpl
mov
mov
jns
mov
or
imul
mov
dec
pop
mov
sarl
rclb
inc
mov
es
sub
pop
ljmp
jmp
push
fldt
xor
push
ljmp
jnp
cmp
fisttps
mov
outsb
or
in
out
inc
and
aad
pop
outsb
cmc
mov
push
sbb
test
push
and
mov
add
inc
lret
nopl
push
jae
aaa
pop
insb
dec
add
pop
xor
fnstenv
dec
xchg
pushl
or
jno
xchg
int
int3
mov
pop
mov
fwait
nop
rol
adc
cmp
and
and
leave
dec
and
hlt
std
mov
adc
sbb
test
int3
fldenv
mov
int3
mov
add
or
sbb
loope
jbe
stos
in
inc
or
push
push
inc
les
sub
insl
rol
mov
jmp
dec
lods
xchg
push
jge
cmp
jl
mov
or
dec
push
inc
push
adc
add
adc
pop
push
add
xlat
mov
cwtl
sbb
decb
test
and
mov
loop
popl
xchg
mov
inc
movsl
inc
or
fwait
lods
mov
imul
sbb
rcll
arpl
jae
xchg
test
je
in
sbb
xor
adc
mov
scas
outsl
adc
push
arpl
sub
dec
loopne
loope
xor
je
outsb
call
shll
push
imul
mov
aas
sbbl
outsl
ficompl
out
xchg
rcl
adc
stc
lcall
cmc
out
dec
lods
or
sbb
cmp
aad
test
pop
jl
jne
test
insl
jp
data16
pop
dec
rorl
ja
ljmp
xor
movsl
scas
sbb
scas
push
lret
inc
adc
push
testl
aaa
xor
ds
adcl
imul
xchg
pop
mov
pop
sbb
iret
mov
pop
fs
mov
pop
sbb
loop
cmp
inc
ja
test
sbb
dec
or
pop
data16
sub
mov
mov
and
int
inc
bound
or
inc
and
mov
callw
sub
xor
mov
js
dec
pop
cld
mov
add
add
daa
nop
or
test
dec
pop
outsl
sbb
lods
imul
bound
test
daa
inc
popa
aaa
mov
cltd
sbb
cmp
mov
bound
jp
pop
aam
shll
mov
imul
lods
subb
add
ljmp
or
pop
push
mov
mov
cmp
fwait
sub
into
stos
outsl
cmpsb
mov
stos
test
icebp
add
cmpsb
popf
mov
mov
lcall
fisttpll
rclb
sub
outsb
jecxz
scas
push
sub
dec
subl
pop
or
xchg
lds
sbb
and
mov
popf
scas
lock
jbe
fldt
xchg
sub
pushf
jbe
nop
das
pop
adc
adc
lds
add
and
adc
push
jecxz
insb
and
jnp
add
mov
out
mov
xor
xchg
loop
lods
aas
pop
fs
in
dec
mov
xor
push
adc
adc
inc
movsl
mov
sbb
sbb
iret
add
jbe
pop
mov
inc
or
test
ja
cs
sub
push
pusha
test
stos
arpl
adcl
sahf
xchg
sub
rcrb
and
jo
adcb
jge
js
mov
inc
adc
dec
nopl
jge
cltd
mov
lds
fs
cmc
sub
xor
xchg
movsb
sahf
movsb
lods
xorl
pusha
xchg
sahf
iret
mov
mov
insb
aaa
test
popf
and
mov
lcall
scas
or
ss
push
ret
sub
jmp
xchg
mov
push
cmpsb
and
adc
mov
mov
and
aad
add
inc
shlb
dec
mov
dec
into
mov
jmp
mov
mov
loopne
add
inc
shlb
add
mov
mov
dec
lods
bound
cltd
jb
and
push
shr
fwait
dec
xchg
xchg
test
js
popl
jbe
aad
out
mov
cmp
inc
and
ret
cmpb
jg
sbb
jae
out
data16
dec
dec
xchg
mov
loope
sub
push
lock
cli
repz
incl
cltd
push
cmpsb
popa
push
adc
stos
cmp
push
ljmp
mov
mov
dec
loop
or
jae
lret
xchg
pop
xor
sub
faddl
and
cmpsl
xchg
popf
js
and
mov
fistpl
lds
shlb
aaa
adc
add
sbb
ret
add
inc
mov
stc
mov
and
cmpsl
mov
fs
daa
aas
fwait
sub
repz
push
xchg
sub
lahf
push
loopne
or
aam
lret
mov
mov
or
daa
fs
das
pop
push
aad
sub
sub
in
jl
lock
in
sub
cmp
aas
add
icebp
dec
loopne
and
lds
jne
dec
or
ljmp
ds
mov
jmp
fsubrl
mov
cmpsb
mov
sub
mov
push
add
or
sbbl
dec
clc
aas
addr16
adc
jno
dec
idivb
rcrl
adcb
add
aas
ret
mov
xchg
dec
cmp
loope
xor
mov
mov
loopne
lods
pop
and
dec
and
ljmp
jae
stos
int3
or
outsb
pop
add
iret
ret
add
fs
xlat
imul
pop
outsl
xor
mov
ss
mov
jb
and
rclb
fimuls
dec
mov
out
xchg
addb
pusha
jp
xor
mov
pop
xchg
lret
sbb
lahf
ret
aaa
subl
push
je
mov
sub
cmp
xchg
mov
inc
push
dec
push
mov
jl
add
inc
clc
dec
out
xchg
dec
shrb
fadds
js
pop
jmp
xchg
cmp
clc
aam
or
inc
outsl
and
add
and
orb
pop
pop
out
sahf
inc
inc
call
daa
adc
add
xchg
fcoms
mov
jne
push
repz
jae
in
sub
mov
mov
es
repnz
adc
mov
stos
xchg
fwait
aad
in
inc
int3
mov
in
sbb
lret
push
outsl
mov
and
lmsw
pop
xchg
sub
in
inc
shll
lahf
notb
fldt
mov
jmp
and
cmp
pop
ss
or
loope
jg
mov
xlat
pop
jnp
sub
xchg
jle
insb
lcall
shll
ret
in
into
bnd
push
pop
jl
mov
cmp
and
rcr
sub
or
cld
loope
imul
ja
mov
push
mov
push
jp
cmp
faddp
inc
sti
sub
out
add
js
push
adc
sub
notl
out
sbb
xchg
lods
fwait
sbb
mov
cmp
test
fnstsw
rcrb
pusha
sarb
popf
inc
pop
mov
push
pop
ret
pop
push
mov
sti
xchg
data16
fs
gs
faddl
ror
lcall
xchg
lret
or
ja
push
jae
jne
xlat
scas
fiaddl
mov
dec
dec
mov
sub
fdivrs
sbb
loopne
mov
jg
cld
clc
lock
orb
fldl
mov
dec
cs
dec
push
pushl
mov
cmp
int3
imul
sub
div
xchg
inc
adc
jbe
add
rorb
and
inc
insl
mov
dec
test
loop
nop
lods
cs
mov
dec
mov
xor
pop
shll
imul
nop
ljmp
aam
pop
mov
or
shrl
or
sarl
je
aad
lods
inc
into
sub
enter
jnp
push
push
cld
cmpb
outsl
pop
in
loope
shl
lods
es
dec
data16
std
shrb
int3
mov
adc
push
inc
sbb
jne
dec
mov
mov
mov
out
pop
sti
xor
add
inc
das
mov
add
lret
outsb
pop
std
orb
adc
dec
lock
ss
dec
ret
xchg
mov
pop
mov
movsl
incl
cmc
sbb
repnz
fcmovu
inc
xchg
adc
ret
dec
call
cmp
mov
cltd
xchg
pop
push
cmp
push
sbb
add
mov
and
fwait
stc
sub
jo
popl
inc
jmp
lahf
int3
mov
jecxz
push
hlt
mov
sub
xlat
mov
rcll
push
pop
shrl
xlat
pop
cmp
mov
in
ret
or
push
sbb
lcall
sub
test
pop
fildll
cmp
incb
movsl
fists
addr16
test
mov
push
mov
and
push
cld
push
mov
push
pop
push
add
add
sahf
iret
imul
xor
lock
rol
in
enter
mov
push
sti
into
pop
cmp
sbb
pop
dec
aas
jbe
sub
movsl
adc
ja
arpl
sbb
stos
dec
pusha
call
cli
pop
add
jmp
shrl
jmp
mov
jbe
test
aas
repz
dec
cld
test
test
notl
mov
into
sbb
stos
cltd
push
out
push
add
loop
jecxz
inc
das
or
cmp
and
push
lods
xor
cs
inc
sbb
loope
jg
iret
sub
sub
lahf
rorb
nop
pop
add
mov
sti
ficomps
in
loope
in
mov
sahf
ret
test
ret
scas
jmp
shlb
popa
sub
or
mov
mov
rcrb
rcrl
add
lods
cmpsl
inc
mov
dec
lret
inc
insb
in
add
cld
mov
out
push
call
mov
mov
push
leave
std
mulb
rcll
mov
lods
jbe
mov
xor
sbb
lods
inc
fwait
out
xor
lcall
and
and
fdivs
and
push
inc
std
jge
enter
mov
add
pop
push
pop
xchg
repz
dec
adc
in
fwait
sbb
int3
sub
cmpsb
mov
lcall
inc
push
data16
rcrl
popa
sbb
aad
mov
in
xchg
sub
pop
and
cld
push
popa
pop
cli
pop
stos
xchg
in
xchg
lock
mov
dec
rcrb
jmp
pop
gs
nop
bound
pop
loopne
sub
fidivrl
xchg
adc
jae
dec
sbbl
mov
lcall
lret
in
jge
inc
daa
in
sbb
jp
xchg
or
data16
mov
mov
xchg
jp
xor
mov
mov
lret
mov
in
adc
loope
in
lcall
pop
sahf
inc
test
jno
pusha
dec
popl
xor
mov
sahf
addr16
outsb
js
mov
add
lahf
lock
xor
adcl
sub
pop
dec
shlb
shrl
jns
xlat
xor
mov
dec
or
ss
jbe
pop
dec
pop
sti
fiaddl
addr16
test
mov
lahf
pop
jle
pop
clc
adc
sbb
sub
pop
push
rorl
clc
push
icebp
adc
fstpl
and
std
fidivrs
xchg
mov
mov
testl
mov
arpl
and
mov
cltd
dec
stc
sbb
jle
xchg
push
adc
push
xchg
jne
mov
mov
out
enter
cli
jmp
filds
jecxz
dec
and
daa
ficompl
jne
pop
jecxz
mov
cld
insl
dec
xor
cmp
and
xchg
dec
xchg
xchg
or
fadds
ss
cmp
ret
mov
pop
sbb
push
cmpsl
test
loopne
fstps
add
push
popf
gs
cwtl
adc
daa
inc
shl
loop
mov
jns
or
mov
xchg
inc
imul
xchg
mov
xor
enter
mov
das
sub
sbb
iret
jge
push
sub
or
call
fwait
stos
mov
adc
cmc
bound
mov
mov
movl
jb
lret
cmp
adc
or
xchg
loopne
bound
ficomps
and
xchg
mov
cmp
lcall
jl
dec
mov
mov
and
sbb
pop
lret
dec
in
bound
dec
cmp
push
insb
iret
daa
inc
add
pusha
push
lock
divl
outsb
push
lahf
jl
out
cmp
and
ljmp
jl
in
jae
mov
mov
sti
cli
sbb
push
arpl
lret
jg
jbe
subb
cmp
divl
mov
cmp
pop
and
cmpsl
es
fnsetpm(287
cmp
pop
or
sahf
mov
cmpsl
mov
mov
mov
sbb
call
cli
mov
inc
xorb
jl
ljmp
out
dec
lock
bound
jno
rcr
mov
add
xchg
gs
add
inc
mov
push
ret
or
lret
lods
lea
add
stc
lahf
xor
inc
test
adc
arpl
cmpsl
je
xor
pop
insl
lret
data16
push
push
insl
loopne
sahf
push
mov
push
imul
repz
shlb
sbb
and
xchg
cmp
xor
scas
push
xchg
popf
mov
mov
xchg
fisubs
push
lock
cmc
cmp
call
adc
aam
or
and
push
sub
xor
popa
and
orl
aam
jle
jns
adc
movsl
mov
mov
sarb
pop
jg
ret
mov
out
rol
lods
test
clc
cld
in
fiadds
addr16
stos
dec
adc
push
and
ja
jmp
and
dec
pop
data16
test
test
cmpb
cmp
and
wrmsr
repnz
sbb
mov
std
and
daa
es
sti
jge
inc
pop
aam
leave
or
jnp
aaa
cmpsl
or
jno
sbb
pop
je
stos
push
add
push
sub
mov
fs
cmp
xchg
mov
leave
in
jg
mov
pop
imul
push
or
int
loop
mov
int
cmpsl
mov
repnz
fwait
sarb
or
clc
test
out
jl
xor
xor
mov
and
lahf
jns
loopne
lock
mov
and
and
dec
mov
dec
cltd
dec
mov
enter
hlt
mov
push
push
cmp
loop
ljmp
adc
xor
inc
ficoms
test
imul
sbb
sbb
jnp
stos
xor
testb
lock
cltd
lcall
xchg
notl
not
lds
xor
int3
mov
cltd
add
lods
adc
inc
pop
xorl
adc
inc
pop
outsl
ret
rcrb
jmp
and
pop
sbb
scas
cmp
test
roll
sub
xchg
add
mov
test
sbbb
cmp
cwtl
pusha
aas
cmp
jo
push
gs
lahf
dec
fcompl
imul
ljmp
xchg
popf
xlat
loopne
popa
fwait
mov
sub
mov
test
mov
or
or
pop
fistpll
and
jns
test
daa
lret
jge
xchg
and
fs
loop
and
lods
sbb
adc
bound
adc
add
shr
pop
adc
and
pop
popf
mov
xchg
add
jmp
lret
adc
popf
cmp
mov
mov
mov
mov
mov
sbb
mov
xor
inc
cltd
adc
sub
adc
xchg
test
lahf
add
mov
push
xchg
dec
pop
aas
test
sbb
xchg
pop
mov
fwait
add
imul
mov
cmpsl
notl
mov
push
inc
popf
sbb
add
xlat
hlt
jns
clc
and
mov
fadds
cmp
cs
xchg
test
add
jae
mov
fsub
pop
std
or
mov
movsb
sarl
mov
push
jb
dec
and
sub
icebp
xor
out
call
sbb
ljmp
push
push
push
repnz
jp
std
lods
mov
xchg
jecxz
dec
mov
shll
test
jb
dec
test
cmpsl
fbstp
movsl
ljmp
fldcw
and
in
pop
inc
add
adc
fwait
out
lret
pop
decl
icebp
add
and
jo
imul
fsub
iret
or
inc
sub
fldcw
in
loope
sbb
pusha
stc
cld
loopne
popf
sbb
gs
out
cmp
pmaddwd
cmpsl
cmp
aaa
or
mov
fisttpll
adc
loopne
push
xchg
sar
js
bound
in
movl
ljmp
and
inc
inc
aaa
add
add
loopne
mov
pop
jae
cs
std
std
dec
fldcw
inc
xor
xor
jg
sub
or
das
aam
lcall
int
mov
test
inc
mov
ljmp
mov
mov
ret
cltd
ret
xchg
mov
and
and
aaa
xchg
xor
stos
jmp
shrl
scas
pushf
xor
iret
lea
into
adc
cmp
adc
stc
arpl
testb
loopne
aaa
xchg
outsb
or
cmpsb
sub
xchg
mov
out
adc
push
cld
mov
insb
shlb
sub
push
jo
hlt
sub
inc
mov
jae
cmp
mov
cmc
cmp
aaa
lods
lea
pop
xchg
or
ss
cmc
pop
pop
enter
out
xor
pushf
mov
lods
imul
xchg
fdivs
imul
xor
lock
xchg
xchg
inc
xor
push
mov
sarl
ljmp
roll
jecxz
repnz
aam
insl
or
xlat
xor
std
pop
sub
lret
das
in
mov
je
jecxz
cmp
sbb
jg
lea
lret
pop
in
lods
push
and
xor
add
js
add
and
imul
cli
test
in
xor
test
inc
and
and
int3
push
or
aam
pop
loope
jp
pop
repnz
jno
dec
push
sbb
mov
xchg
cmp
lock
js
leave
test
adc
aad
xlat
out
out
pop
and
data16
mov
mov
mov
gs
mov
push
and
fs
push
inc
lcall
je
sub
jg
sub
pop
jb
aaa
lret
xchg
in
cmc
ss
sbb
ljmp
adc
pop
pushf
jmp
sub
addr16
test
imul
inc
mov
sub
out
or
or
into
jo
subl
je
movsl
cmp
leave
popa
xlat
push
mov
xchg
pop
sub
push
mov
lods
inc
insb
ljmp
popf
push
fs
test
xchg
mov
mov
loop
mov
push
pop
and
mov
pusha
cmp
arpl
je
nop
in
outsl
cmp
popf
scas
or
sbb
xor
imul
cld
or
rolb
push
arpl
rcll
int
gs
nop
les
pop
addr16
xchg
sub
test
sbb
enter
aaa
js
sub
mov
aam
js
inc
adc
mov
push
dec
mov
lea
and
cmc
jecxz
sbb
dec
gs
sbb
or
jnp
fisttpll
scas
and
dec
push
mov
push
cs
pop
xchg
dec
adc
mov
push
add
cwtl
xor
repz
pop
ret
inc
inc
arpl
xchg
inc
nop
fists
and
pop
testl
movsl
mov
jae,pt
mov
ret
popa
push
out
icebp
push
sbb
adc
inc
sub
aas
push
es
aas
push
inc
imul
cmc
scas
jp
xchg
or
outsl
push
pop
sbb
pusha
and
cmp
je
xchg
cli
pop
mov
arpl
daa
push
test
sbb
das
fwait
dec
lahf
sti
xchg
pusha
xor
jbe
dec
cmpsb
push
push
cmp
push
adc
shrl
lea
icebp
cmp
sub
out
sub
lret
dec
dec
loop
rcl
out
xchg
xor
push
xchg
out
xchg
enter
aas
xchg
adc
adc
fwait
dec
cltd
or
int
pop
repnz
sti
stc
push
test
mov
push
mov
cwtl
and
lret
jns
sbb
adc
test
jbe
lret
repz
aad
pop
fs
xor
cmp
lcall
push
ljmp
sbb
mov
test
daa
cmp
inc
pop
test
pop
fwait
and
clc
ss
outsb
lret
lods
cmp
pop
cs
out
ss
inc
and
ss
mov
sub
call
adc
lods
xor
loopne
es
sub
sbb
jno
adc
test
pop
movsb
xchg
pop
xchg
add
inc
xor
jns
mov
xchg
daa
mov
xchg
loope
mov
inc
gs
ret
in
icebp
fnstsw
bound
testl
test
scas
std
xchg
mov
xchg
sub
jno
aam
gs
and
hlt
or
lret
adc
out
in
insl
loopne
and
in
loope
cmpsl
testl
jmp
jp
mov
push
mov
mov
cli
sbb
lds
inc
push
mov
out
xor
pop
pushf
out
mov
and
sub
dec
sbb
test
push
movsl
dec
jb
xchg
cltd
mov
stos
cmp
movsb
insb
push
push
xor
cmc
jmp
sti
push
xchg
cmpsl
pop
jbe
loope
ja
and
int
mov
push
or
icebp
or
push
lcall
nop
and
in
negl
decl
ficompl
sbbl
or
mov
mov
inc
lret
aaa
repz
rorb
test
or
push
in
aaa
push
sbb
sub
sbb
data16
inc
js
jb
test
scas
in
js
cmp
dec
loop
sub
and
jmp
loop
lods
lcall
mov
mov
push
loopne
push
sub
test
fdivs
iret
sbb
mov
daa
xor
sbb
and
jb
cli
pop
lcall
jle
lea
sbb
inc
push
inc
stos
xchg
dec
add
ljmp
mov
mov
and
out
sbb
gs
movsb
and
or
add
dec
in
mov
cmp
lea
cmp
inc
dec
mov
outsb
xchg
cmp
ffree
mov
in
outsl
xlat
mov
ret
push
cmp
test
inc
or
stos
mov
jle
inc
test
es
pop
xchg
enter
xchg
sbb
movsb
out
ja
push
cmp
mov
clc
jmp
ficoms
outsb
adc
jecxz
adc
or
push
jp
loop
add
int3
test
jmp
fstpl
dec
fsubrs
mov
out
ja
fistl
or
in
sbb
cmpsl
mov
add
adc
fwait
inc
add
mov
adc
mov
in
cmp
movsl
push
or
ja
call
jmp
rcrb
add
xchg
das
in
pop
call
pop
std
mov
std
jle
cmp
testb
adc
repz
pop
mov
add
push
dec
jg
dec
pop
aaa
xchg
aas
and
jb
sbb
inc
enter
loope
mov
rcr
test
push
add
or
lahf
push
inc
lods
xor
xor
call
cmovl
arpl
xlat
pop
repz
test
xor
xorl
or
iret
repnz
xor
lahf
pop
mov
into
cs
aas
cmp
xor
add
lods
mov
pop
sbb
jb
lahf
stos
test
nop
add
jnp
sub
cltd
jbe
pusha
and
jmp
jmp
xchg
mov
add
lods
xchg
je
jne
je
jno
add
test
pop
bound
imul
jge
pop
mov
push
and
add
cmp
out
fildll
lock
filds
and
pop
loope
jnp
inc
outsl
mov
adc
popa
push
mov
lahf
faddl
add
add
pushl
imul
addr16
inc
test
add
mov
fsubr
push
daa
pop
cmp
outsb
mul
bound
gs
adc
fisubl
arpl
adc
and
adc
hlt
adc
push
hlt
push
sub
mov
sbb
fsubrp
pop
mov
popf
pop
sbb
adc
mov
into
inc
mov
fcoms
sahf
jge
daa
in
sub
mov
hlt
in
sahf
lds
ret
adc
inc
jle
xchg
inc
and
and
les
imul
cmp
outsl
cmc
aad
imul
and
int3
repnz
inc
imul
cwtl
and
cmpsb
movsb
pop
clc
jnp
xor
mov
ja
fnsave
scas
cmp
aaa
cwtl
pop
cld
xchg
leave
adc
imul
jecxz
leave
outsl
push
and
fnstsw
pop
loopne
xor
and
hlt
andl
xchg
pop
int3
add
test
sbb
push
sbb
out
sub
fnsave
cwtl
jmp
or
shlb
push
jmp
xchg
sbb
insl
out
cli
shll
packuswb
fwait
inc
js
cmp
and
iret
sarl
scas
aam
cltd
les
stos
mov
call
popa
outsb
jmp
mov
ret
js
jne
pushf
sbb
push
int
test
xor
push
jecxz
sub
pop
in
nop
jo
inc
sbb
or
fwait
adc
test
pusha
insl
inc
fsts
pop
mov
stos
cmp
leave
repz
loope
push
jle
lahf
jne
adc
pop
fwait
xchg
sahf
pushl
std
mov
pop
imul
sbb
mov
lahf
add
cmp
jbe
mov
movsl
adc
test
scas
mov
inc
jmp
mov
sti
aas
pop
addr16
and
dec
sbb
xchg
or
mov
add
xchg
lret
push
sub
sub
xor
fmull
mov
add
mov
insl
mov
sbb
xchg
cmp
xchg
sbb
jge
add
js
mov
adc
das
sbbl
fstps
movsb
int
dec
sbb
fdivs
or
pop
xchg
lea
pop
jecxz
push
mov
ret
insb
test
scas
imul
insl
mov
stos
lods
cmp
xor
aas
movsl
inc
mov
scas
or
scas
sub
jl
inc
lock
je
sbb
pop
imul
aam
out
mov
out
fsubl
pop
xor
mov
cld
mov
test
mov
mov
add
xor
mov
mov
outsb
mov
cmp
fabs
and
xchg
adc
enter
mov
ja
sub
jo
mov
fisttpl
lret
inc
mov
xchg
xor
mov
test
push
out
andl
xor
daa
pop
fildll
pop
cltd
inc
push
pop
test
xchg
jns
sar
outsl
outsl
ss
outsb
xchg
sahf
xchg
push
fcmovnb
push
sti
icebp
rcl
xchg
je
notl
lcall
subl
imul
pop
mov
mov
lret
and
in
out
sti
pop
bswap
shll
lea
pusha
in
ficomps
fildl
data16
mov
fdivl
sbb
out
push
lahf
pop
test
cmp
jns
or
add
dec
jecxz
rorl
es
clts
push
into
inc
lcall
push
mov
andb
inc
adc
mov
cli
mov
pop
mov
int3
jecxz
pusha
xchg
inc
mov
inc
popa
inc
mov
ljmp
lret
xor
lods
lods
or
sbb
iret
out
lcall
mov
ret
sahf
imul
popa
popa
mov
push
movsl
ret
or
mov
mov
xor
std
popf
in
and
inc
leave
iret
pop
cmpsb
sub
lods
fucomip
decl
stos
pushf
jo
and
and
pop
pop
xor
in
fucom
ret
push
stos
xor
xchg
jne
scas
push
sub
ret
xchg
stos
insb
enter
add
xor
repnz
fsub
lret
xlat
mov
sbb
mov
imul
xchg
xchg
outsb
iret
sbb
stos
adc
mov
sbb
pop
jnp
std
movsb
sbb
push
js
pushf
out
lahf
push
lret
hlt
shll
cmpsb
cs
ljmp
xchg
pop
loopne
inc
pop
dec
jg
jns
mov
add
sbb
outsb
test
aaa
outsb
jbe
inc
mov
mov
cmp
shlb
test
jp
js
mov
push
pop
in
adc
fisubrl
leave
xchg
mov
or
sub
loope
fadds
fwait
dec
dec
xorb
cmp
add
lret
xchg
pusha
lea
adc
push
js
inc
pop
and
and
stc
sbb
fisubrs
mov
faddl
xchg
pop
xor
jg
push
cs
ret
popa
mov
or
push
js
cmp
sbbl
jns
sti
imul
pop
sub
mov
fprem
scas
packssdw
mov
mov
inc
dec
pop
push
sub
and
mov
lds
inc
push
jo
pop
jle
cmpsl
mov
das
push
pop
notb
in
mov
loope
xchg
iret
or
in
fisubrl
mov
dec
cmc
je
loope
push
jge
sbb
rcrl
sti
xchg
mov
mov
xor
loopne
jns
xor
jne
push
lods
mov
jae
in
cld
and
mov
xchg
xor
mov
cwtl
andl
adc
push
sahf
mov
in
or
out
pop
dec
or
jl
aas
mov
dec
jno
bnd
fcoms
rclb
shlb
adc
pop
fcoms
push
mov
or
por
js
xchg
inc
xlat
pop
push
mov
cmpsl
inc
test
mov
push
mov
clc
and
cwtl
stos
sti
mov
arpl
inc
pop
inc
imul
and
xchg
dec
sti
jbe
idiv
pop
mov
ss
jbe
out
pop
gs
sub
movsb
cmp
adc
adc
fldcw
xchg
sbb
lods
jmp
addb
fadd
mov
jae
dec
ffree
shll
push
push
fwait
cltd
push
inc
cmp
pop
mov
jnp
mov
or
dec
inc
xor
sbb
dec
lret
movsl
mov
and
jb
pop
and
xchg
jl
cli
jnp
mov
mov
and
pop
cmp
pop
je
cmc
dec
addr16
ret
test
cmp
gs
xchg
pop
in
addr16
cmpl
das
out
pop
push
adc
and
rolb
adc
ja
test
mov
adc
and
nop
push
dec
adc
addr16
pushf
int
shlb
mov
aaa
push
cwtl
mov
adc
movsl
mov
mov
pop
ja
mov
cmpsl
cmc
sti
push
or
loop
decb
ljmp
in
sub
inc
lcall
je
in
pop
lods
cmp
xchg
adc
nop
mov
scas
imul
jbe
mov
jp
fnstenv
cmp
mov
aad
iret
cmpsb
and
jae
lret
fucom
jle
pop
test
xchg
imul
xor
mov
xor
cmpsl
icebp
fst
xchg
addr16
mov
dec
lds
fisttps
hlt
cmp
and
xor
push
pop
out
aas
aas
inc
popa
push
mov
or
xchg
pop
fists
push
add
pop
xor
loop
jmp
loopne
mov
xor
fsts
ret
je
movsl
subl
sbb
push
lret
lahf
xor
and
into
addr16
daa
arpl
pop
popa
add
sarb
loop
andl
das
arpl
sbb
inc
adc
out
shrb
jge
pop
jmp
cmp
and
jbe
and
cli
lahf
rclb
movsl
sub
pop
mov
cmovle
stos
das
cwtl
jecxz
out
cltd
cmpsb
xor
dec
iret
imul
lods
mov
and
jnp
add
inc
bswap
int
xor
or
shlb
or
dec
in
sub
inc
mov
sub
enter
movsb
pop
mov
arpl
aam
lret
inc
jle
insb
rcll
push
jnp
xchg
std
push
or
je
cmp
xchg
mov
jle
enter
add
pop
mov
jns
sub
pop
cmp
nop
cmp
and
mov
fwait
push
add
jae
inc
popf
sarb
cmp
cltd
lret
cmp
arpl
jno
cmp
add
dec
faddl
dec
mov
xorl
mov
aam
sbb
mov
insl
and
adc
pop
in
in
ret
int
out
hlt
pushf
into
arpl
jl
or
or
stos
jae
inc
adc
sti
cmpsb
pop
mull
mov
frndint
xlat
dec
push
pusha
mov
dec
ljmp
add
lock
cmp
subb
popa
adc
jns
das
xorl
mov
test
orb
inc
test
sarb
xchg
dec
jle
and
mov
ja
dec
sub
inc
int
or
push
adc
loop
mov
dec
fisttps
ret
imul
subl
rolb
out
lret
ja
mov
inc
push
or
inc
mov
mov
jmp
sub
mov
mov
int3
in
aad
adc
clc
jnp
jmp
xor
lods
test
pop
nop
sbbb
sbb
jnp
ljmp
jns
in
or
mov
xor
in
cmp
mov
push
pop
out
cmp
sub
mov
push
std
dec
sbb
inc
or
xor
push
addr16
ljmp
gs
aaa
jle
in
outsb
movsl
enter
mov
mov
pop
mov
xlat
xchg
mov
xchg
mov
in
out
loop
das
cmp
test
test
jecxz
mov
adc
lods
dec
mov
cmp
cmc
pop
in
cmp
std
dec
mov
jno
jb
andb
push
dec
or
mov
push
hlt
ljmp
dec
mov
lods
in
add
lods
push
dec
leave
jg
jecxz
pop
fisubrs
fdivr
dec
insb
aad
inc
aas
insl
fsubrs
and
add
pushf
sbb
stc
ret
add
xchg
shl
movsb
push
je
pop
mov
movsb
in
mov
adc
in
xor
inc
cwtl
cmpsb
push
mov
aaa
out
mov
scas
jp
pop
loopne
mov
cmp
das
stos
sbb
icebp
pop
mov
cltd
or
add
clc
andb
popf
ljmp
andb
jae
fistpl
push
dec
cmc
push
xchg
pop
xchg
int3
fidivrl
mov
sbb
aaa
jmp
xchg
push
js
mov
sbb
or
into
cmp
xchg
icebp
sub
jl
or
and
std
les
add
or
sbb
mov
mov
movsl
pop
push
lret
sub
mov
out
cmc
mov
ret
lret
mov
int3
orl
inc
sub
jle
inc
loopne
in
negb
outsb
or
xchg
jl
loope
push
xchg
push
mov
icebp
jns
hlt
dec
dec
out
pop
int3
nop
sbb
shrl
xchg
pop
inc
inc
or
pop
sahf
pop
sti
leave
inc
stos
scas
rcrl
mov
mov
and
xchg
aad
mov
jmp
ds
aad
mov
mov
divl
inc
push
in
sub
adc
or
faddl
popa
rorl
shrl
push
aaa
dec
call
jb
mov
sbb
sti
mul
or
xor
xchg
in
sbb
stos
cli
or
into
xor
dec
stos
loopne
pushf
leave
scas
lcall
dec
mov
insl
aad
ss
mov
movsl
cli
dec
xchg
push
sahf
arpl
and
sbb
lods
mov
pop
ljmp
in
addb
xor
repz
jmp
repnz
outsb
pop
mov
pop
and
loopne
test
sub
xor
mov
adc
test
pushf
sarb
ja
arpl
ja
mov
out
repnz
push
mov
mov
shl
ljmp
loopne
std
adc
mov
movsl
xor
out
leave
sub
pop
mov
in
test
jge
out
push
or
cmp
cmp
imul
repnz
arpl
pop
movsl
mov
mov
xchg
dec
cli
or
arpl
test
loope
mov
dec
xchg
and
xchg
mov
popa
int3
lds
out
jl
xchg
lock
addl
adc
lcall
fwait
outsb
fdivp
mov
icebp
pusha
in
pusha
popf
and
call
lds
dec
xchg
sbb
es
dec
sub
hlt
lahf
lret
sti
iret
aam
dec
cmp
insb
or
fidivs
push
dec
out
sti
xchg
enter
imul
mov
cwtl
xor
sbbl
repz
das
sbb
pop
xor
mov
scas
push
mov
jo
imul
cmpsl
xchg
and
mov
aad
imull
dec
dec
mov
mov
aad
xor
addb
addr16
loope
in
ja
sub
mov
jns
or
pop
inc
mov
sbb
pop
dec
mov
jl
fcmovbe
xlat
pop
jmp
mov
scas
xchg
gs
mov
mov
imul
mov
data16
sarb
lahf
fdivl
lock
aas
fisubl
xchg
fisttpll
sbb
int
or
loope
dec
and
sar
mov
or
inc
addb
mov
aaa
ljmp
xchg
adc
les
mov
js
dec
icebp
aaa
in
or
arpl
inc
inc
mov
movsl
test
mov
pop
dec
popa
sub
fbld
mov
test
pop
dec
xchg
call
sub
outsl
stos
push
mov
andb
in
xchg
mov
inc
aam
sub
pop
push
out
push
mov
or
mov
sub
mul
imul
lret
xor
dec
inc
icebp
xor
jno
jp
mov
and
fstp
mov
adc
adc
dec
mov
ret
scas
xor
dec
repnz
xor
pop
sbb
pop
fdivl
clc
sbb
add
and
inc
dec
and
sub
dec
push
test
test
call
push
rcrb
int3
divb
sbb
cmc
incl
stos
jnp
push
lods
insl
loopne
call
pusha
mov
add
fimull
xchg
and
xchg
mov
jp
dec
mov
lcall
pop
lcall
jp
jbe
push
daa
inc
pop
dec
insb
in
jge
arpl
dec
sub
push
aaa
leave
icebp
adc
adc
cmp
mov
out
mov
inc
mov
pop
sub
or
cmc
jns
xchg
pop
jno
push
xchg
stos
mov
or
cmp
gs
insb
add
jo
pop
ja
adc
adc
pop
push
lahf
adc
mov
push
int3
icebp
push
lods
mov
dec
dec
inc
dec
inc
xchg
hlt
fdivrl
jo
xor
or
mov
or
jg
pop
dec
dec
lds
jmp
sub
stos
daa
aam
mov
lds
outsl
dec
movsl
inc
leave
xchg
mov
bswap
repz
test
sub
and
pop
push
dec
or
aam
repnz
enter
ds
in
icebp
leave
call
fisubl
sbb
xor
arpl
popl
test
mov
mov
lret
and
mov
mov
mov
and
fidivl
add
pop
and
xchg
mov
fmull
cmc
cmp
stos
cmp
sub
push
mov
mov
push
outsb
push
sbb
inc
stos
push
or
adcl
xchg
shlb
xchg
iret
imul
mov
aad
js
fcomps
mov
lods
jae
xchg
loope
fbstp
mov
xchg
addl
loope
iret
cs
aad
sti
mov
pushl
leave
or
test
pop
imul
dec
sahf
int3
inc
loopne
fisubs
sbbl
adc
nop
dec
jne
mov
flds
pop
cmp
mov
mov
adc
or
mov
test
in
stos
jge
mov
out
rcrb
inc
inc
cmpsl
add
xor
push
negl
cmp
lahf
cmpsl
xchg
jne
sub
icebp
jae
mov
jb
pusha
pop
scas
pusha
popa
cmpb
out
pushf
rolb
subl
cmp
cmpl
add
and
inc
mov
xchg
out
rorl
xchg
outsl
inc
jg
mov
dec
fildll
je
inc
fisubrl
popf
or
push
mov
add
push
inc
ret
repnz
fsubrl
adc
movsl
daa
addb
push
push
subl
push
and
xor
mov
add
fcmovbe
icebp
decl
mov
push
mov
pop
mov
negb
inc
out
inc
jge
mov
stos
mov
mov
inc
or
xchg
mov
dec
push
les
pop
sub
dec
fs
push
jl
call
inc
dec
sub
adc
mov
enter
outsl
mov
adc
sbb
fisubs
fldenv
es
jge
call
mov
push
xchg
jmp
in
push
pop
push
push
add
icebp
lock
or
cmpsl
pop
pop
aas
mov
jno
icebp
xor
push
shll
pop
inc
cmpsb
mov
pushf
xchg
cwtl
rcll
mul
test
ljmp
adc
cmc
je
rol
pushf
dec
loop
push
and
cmpsl
mov
dec
mov
das
pop
int3
std
mov
cmp
popf
mov
add
push
mov
sarl
ret
cmp
bound
mov
outsb
sub
xchg
lret
push
enter
sub
es
jnp
sbb
rorl
or
cltd
sbb
fists
pop
push
pop
cmp
push
int3
push
inc
jae
inc
jno
inc
std
cld
and
pop
cmp
mov
pushl
cmpsb
addr16
sbb
adc
insl
or
sbb
enter
sub
jp
xor
lret
aad
push
push
ja
mov
ret
cld
mov
inc
cmp
lcall
xchg
mov
mov
push
pop
jp
in
sbb
ja
inc
inc
dec
or
repnz
mov
into
outsb
inc
loope
js
pop
int3
loope
add
xor
gs
xchg
mov
and
sbb
test
rcll
stc
fdivs
jl
mov
repnz
ljmp
fcompl
js
test
imul
movl
push
call
imul
lahf
sub
aas
dec
push
or
push
mov
inc
iret
push
jae
aam
dec
dec
clc
dec
les
test
out
loope
fwait
xor
aaa
outsb
lods
adc
push
and
push
sub
movsl
es
in
xor
bound
add
shll
fwait
aam
mov
insb
push
sub
jg
inc
sub
loope
push
add
cmpsb
call
dec
xchg
cs
mov
xchg
call
adc
cmp
fstl
push
push
out
sbb
cmpb
push
dec
push
dec
ret
lret
int3
pop
sbb
inc
out
xchg
ror
inc
addr16
movsl
jne
mov
jg
cmp
xor
ret
xchg
pop
cmp
adc
rol
inc
jnp
pop
sub
sahf
insb
loopne
cmp
imul
or
imul
push
bound
pop
and
sbb
jp
adcl
jp
cmp
mov
mov
pop
lret
fs
cld
xchg
mov
dec
popf
aad
popf
inc
jle
mov
idiv
cmp
cmp
aam
cld
or
fbstp
jp
fmull
mov
mov
incl
adc
std
mov
cmpsl
push
stos
lahf
bound
xchg
ja
ret
mov
out
sbb
mov
dec
das
int3
push
lds
jecxz
lret
sbb
dec
jo
enter
in
enter
test
sbb
in
cmp
ss
sti
iret
mov
add
ljmp
or
add
jge
repnz
pop
xchg
cwtl
scas
push
adc
pop
add
es
shlb
loope
int3
mov
and
push
jnp
imul
mov
test
hlt
jb
lods
inc
jno
sbb
push
push
fwait
dec
addr16
dec
fidivs
cmpsl
into
xor
jg
ret
mov
adc
dec
and
sub
hlt
scas
jle
dec
call
mov
xchg
ds
inc
mov
inc
aaa
popa
popa
es
jg
fidivrs
sbb
das
jns
lds
rcrb
xor
pop
inc
xor
mov
adc
adc
xchg
lock
pushf
pop
cmp
dec
les
insl
or
or
daa
movsl
clc
negl
pop
or
scas
mov
mov
inc
daa
repnz
rclb
pop
inc
push
sbb
ror
lds
in
pop
daa
dec
pop
ss
or
and
fidivrs
xor
pop
ret
xlat
cmpsl
jno
aas
das
fiadds
lds
xchg
sti
or
stos
out
sbb
mov
sti
xchg
push
in
loop
lahf
js
addr16
inc
jmp
sbb
sahf
adc
xchg
pop
stc
mov
jl
mov
repz
push
test
xchg
loope
dec
fists
cmp
inc
mov
lods
push
pop
fistl
pop
cmp
xor
test
mov
push
mov
cmpsb
enter
cmpsb
cwtl
sbb
dec
cmp
outsb
into
pusha
xchg
adc
add
xchg
dec
jb
mov
icebp
lods
dec
in
mov
daa
or
dec
add
push
push
mov
ret
xchg
push
pop
fwait
sbb
aam
out
mov
add
mov
fldenv
repnz
jp
fcompl
dec
mov
lods
cli
test
sahf
cli
sub
mov
repnz
insb
mov
or
int3
dec
out
and
mov
dec
cmp
rorb
repnz
fisttpl
sbb
dec
popa
lods
or
dec
jge
sub
pop
sub
mov
dec
jne
jp
xor
leave
mov
jbe
mov
dec
push
mov
mov
adc
js
add
pop
sbb
mov
xor
cmp
insl
jae
clc
mov
test
jle
xor
daa
pop
pop
xor
xlat
cwtl
js
mov
movsb
add
shlb
mov
add
movsl
imul
imul
scas
fsubp
dec
jmp
or
jb
into
fdivs
into
xor
fsts
xchg
inc
push
lea
out
xor
frndint
pop
js
mov
add
xchg
pop
sbb
cmp
push
mov
mov
xlat
int
cmp
js
sbbl
xchg
mov
call
mov
xchg
xchg
into
movl
pop
adc
call
decl
lds
lds
cwtl
cmc
dec
call
out
shlb
rolb
pop
cltd
je
fisttpl
mov
add
cs
outsl
mov
dec
lret
or
inc
and
inc
das
out
or
cmc
roll
std
mov
rorb
rorl
and
in
idivb
jae
xchg
clc
in
fidivrl
dec
sbb
outsl
sbb
lahf
inc
dec
imul
fcompl
xor
lock
das
jne
lock
fildl
sarb
sub
sbb
mov
outsb
jle
jecxz
dec
inc
loopne
mov
mov
inc
push
std
stos
mov
inc
dec
cmp
mov
adc
movb
xchg
mov
mov
mov
push
xor
jge
mov
in
outsl
popf
stos
push
aam
jge
ret
pop
mov
sub
adc
cmp
cmp
addb
push
dec
fptan
ss
jns
xchg
push
dec
and
repz
lods
pop
je
xor
push
frstor
mov
mov
out
dec
ret
test
jecxz
jb
lock
mov
jo
repz
ja
xchg
cmp
push
adc
jo
or
inc
sbb
test
out
insl
dec
dec
stc
inc
mov
sub
shl
fldl
shll
mov
jbe
xlat
arpl
dec
into
leave
adc
jmp
adc
push
loope
ja
roll
mov
push
jbe
xor
gs
or
xchg
pop
jne
pop
movsl
xor
cmp
or
test
push
loopne
pusha
adc
adc
fisttpl
clc
mov
pop
stos
cmp
dec
ljmp
or
fstps
lret
mov
test
mov
movsl
push
inc
mov
aaa
repnz
xorb
nop
jnp
daa
loop
add
jbe
or
sti
ret
cs
push
fisttpl
mov
mov
movsl
xor
loope
addr16
mov
xchg
mulb
insb
pop
sbb
jl
xchg
add
pop
jbe
iret
fisttpll
xor
shrl
jle
mov
dec
stc
jle,pt
repnz
ficompl
sbb
out
mov
inc
mov
push
lods
xchg
ja
cmpl
push
mov
add
pushf
icebp
imul
stc
and
sbb
xchg
sbb
mov
mov
pop
std
mov
lret
lret
bound
and
and
sarl
mov
idivb
cmp
jno
dec
jecxz
mov
jns
test
ds
sub
inc
pusha
sub
mov
jl
shll
push
cmpsb
inc
jp
xor
jne
pop
lock
aaa
scas
push
fs
inc
sub
jns
jb
fistpll
es
push
pop
dec
mov
ror
sbb
push
mov
jae
push
ret
rcr
mov
xor
repnz
push
sub
shrb
in
or
add
xor
shlb
push
rcrl
dec
iret
lods
fsubs
int
dec
xor
sti
mov
and
stos
mov
fidivrs
pop
jge
outsl
scas
mov
rcrl
negl
cmp
test
in
add
js
and
inc
jl
adc
dec
das
add
lahf
in
and
inc
sbbb
sbb
fwait
out
or
inc
loope
dec
mov
rcl
out
xlat
xchg
adc
popf
negl
sahf
mov
jns
push
cli
xchg
movl
movsl
and
sub
mov
out
addb
cmpb
mov
gs
and
or
out
js
int3
mov
push
mov
lcall
sahf
sbb
subl
dec
inc
dec
ljmp
addr16
adc
pop
jno
pop
lret
decb
dec
sbb
add
fmull
aaa
jle
and
xlat
sbb
cmp
jp
js
xlat
inc
lahf
xor
sub
movsl
mov
push
stos
addr16
bound
cld
or
out
aas
and
jle
aam
jno
inc
xor
sub
mov
add
idivl
dec
insl
js
leave
xchg
xor
daa
int3
mov
xor
mov
push
ret
fiadds
arpl
cmpsb
cwtl
inc
icebp
loopne
push
insl
jae
push
arpl
lret
inc
push
mov
add
fcoms
dec
jb
std
in
inc
mov
sub
fdivl
push
mov
jp
popa
inc
rclb
test
sbb
sub
sbb
mov
push
stc
sub
xchg
adc
push
test
je
push
add
jno
jns
es
pop
inc
scas
cmpsb
int
sub
lret
int3
lcall
in
adc
adc
adc
inc
pop
mov
dec
cld
mov
leave
leave
je
jmp
lock
sub
movsl
pop
mov
mov
mov
test
fnstenv
pushf
sub
insb
push
bound
push
fwait
add
inc
cltd
mov
mov
cmp
in
sub
lahf
insl
mov
imul
int
lret
cmp
or
push
pop
lock
cmpsl
imul
icebp
xchg
and
sub
push
pop
leave
pop
dec
pop
push
lahf
xchg
dec
scas
lea
push
dec
xchg
call
cmp
jl
inc
subl
jae
stc
lret
mov
xchg
pop
orb
mov
push
call
inc
sub
ss
mov
mov
push
in
adc
shl
cs
gs
push
or
shlb
jge
cmp
lret
xorl
pop
dec
xor
inc
sbb
pop
cld
fs
popa
dec
mov
mov
or
ret
nop
mov
insb
pop
xor
pop
je
es
arpl
inc
fistl
shrl
jg
imul
cmp
je
mov
test
pop
adc
pop
and
sub
insl
or
cmpsl
cmp
mov
or
cmp
enter
fucom
sbb
andb
jmp
popf
jp
xchg
xor
cmp
in
pop
push
sbb
add
xlat
jp
fcmovnbe
inc
push
fmull
loop
xchg
sti
cs
rcrb
dec
bound
dec
or
sarl
test
les
movsb
in
out
aam
add
xchg
push
push
lock
pop
fs
jnp
jge
adc
mov
loope
dec
loopne
pop
cltd
cmc
xchg
add
stos
jno
jp
sub
std
in
mov
or
sahf
mov
js
add
shr
dec
mov
mov
mov
lods
inc
outsb
js
mov
repz
std
fnstsw
add
arpl
test
out
xor
mov
push
sbb
hlt
cmpsb
sub
and
in
addb
setge
addr16
lret
or
lret
pop
jo
sbb
jmp
shll
dec
cld
xlat
xchg
push
push
fwait
loope
sbbb
cmc
lahf
sti
lret
lsl
mov
mov
pop
dec
test
cwtl
scas
mov
xchg
mov
xchg
fcmovne
gs
push
fisubs
ja
stos
cli
out
shrl
aaa
and
push
aaa
sbb
sub
ja
cltd
push
jns
push
push
lahf
xor
cmp
pop
popa
je
cwtl
push
cmp
mov
add
inc
mov
mov
pop
leave
jbe
inc
sahf
jae
dec
int
xor
mov
mov
inc
shll
jmp
or
mov
push
mov
xchg
jno
js
arpl
mov
mov
inc
pushf
imul
aas
cmpl
mov
mov
orl
sarb
cmpsl
pop
cli
jb
sub
xchg
and
cmp
xchg
mov
cld
mov
jp
movsb
mov
or
mov
jge
mov
mov
notb
sub
mov
scas
stc
aaa
push
jbe
jo
dec
mov
xchg
xor
mov
jp
or
jno
sbb
clc
add
cmp
andb
xchg
and
outsl
jbe
sahf
jmp
stos
pop
cmp
stc
sbb
fldl
fcmovbe
repz
mov
es
pop
add
icebp
out
ret
pop
addr16
mov
leave
divl
scas
jle
dec
out
lock
jns
xchg
imul
inc
bound
push
lds
lcall
add
out
sbb
arpl
outsl
outsb
leave
xor
mov
push
pop
cli
push
xchg
out
das
test
xchg
outsb
aaa
mov
sbb
ja
ljmp
fwait
sar
mov
pop
shrb
ret
or
lock
lret
ficomps
nop
out
xor
cli
popf
push
push
xor
xor
mov
xchg
jns
lods
fldenv
lret
pop
mov
fisubrl
xor
aas
mov
xor
push
and
xchg
cmc
ret
js
xchg
shl
inc
or
sbb
loope
push
repnz
add
dec
and
lods
popa
ret
inc
fdivrl
mov
cmpl
pop
cwtl
lahf
je
pop
jno
jns
aam
and
ss
or
jmp
and
mov
bound
das
inc
push
add
mov
dec
scas
aad
mov
inc
xchg
sbb
insl
mov
push
add
sub
int3
in
jb
jns
add
xor
jne
les
jne
sbb
cmp
push
iret
fnsave
pop
subl
loope
mov
add
es
xchg
lret
push
inc
jp
jb
nop
and
daa
or
xchg
xchg
pop
sbb
add
addb
xchg
shll
xchg
mov
push
out
aas
std
mov
adc
push
jg
sub
rorl
shll
xchg
add
fs
push
lock
add
rcr
pusha
mov
add
lock
sbb
or
mov
sub
sub
out
cmp
mov
sbb
jo
cmp
out
scas
cmp
mov
dec
xor
or
jmp
lea
adc
ljmp
out
loope
and
mov
sbb
jb
lea
loopne
dec
rcl
lock
popa
insb
test
pop
dec
mov
adc
cmp
popf
inc
rcrb
mov
xor
movsb
and
out
ss
sub
fmul
popa
outsl
pop
adc
sbb
in
push
movsb
rcll
scas
scas
shrl
mov
dec
adc
scas
mov
mov
es
sbb
cmpsb
fsts
pop
filds
or
lods
stc
bound
adc
aad
adc
scas
mov
int
fwait
cld
rcrb
and
pusha
jg
sbb
sahf
imull
pop
sbb
stc
rolb
jp
pop
imul
xor
add
negl
jp
or
mov
jne
ret
pushf
xlat
sub
out
pop
ror
cwtl
mov
pushf
mov
xchg
mov
dec
arpl
jb
dec
lahf
mov
hlt
leave
ljmp
nop
cmpsb
ljmp
mov
pop
xor
dec
ja
lods
fnstcw
dec
jb
push
mov
add
push
lds
jg
ficompl
rol
xchg
imul
in
add
mov
inc
mov
push
pop
test
div
mov
and
test
fnsave
les
rol
and
repz
ljmp
iret
add
test
push
orl
jge
jge
mov
xchg
int
scas
inc
ds
cmp
mov
push
lods
xchg
pop
fldt
mov
cmp
add
loope
std
out
inc
outsb
jecxz
xor
dec
jmp
fstl
jmp
fdivrs
or
cmp
decb
cmpb
mov
call
pop
dec
sub
decb
fldt
testb
push
pop
sub
scas
xor
or
jp
aas
stc
pop
inc
pop
sub
push
scas
rclb
pop
ljmp
adc
xlat
sahf
dec
jns
cmpsl
jns
and
ffree
ds
mov
pushf
in
jg
cld
dec
cwtl
test
nop
mov
jno
in
mov
ret
xchg
adc
repz
xchg
push
idiv
repz
loope
inc
jmp
sub
push
dec
outsb
iret
cmp
sbb
pop
cmp
movsb
int3
pop
push
xlat
dec
add
mov
sahf
aaa
jno,pn
popf
cmp
mov
loop
je
sbb
pop
lea
dec
int3
jno
inc
ljmp
jecxz
cmp
cmpsl
shlb
fwait
cmp
iret
jl
bound
stc
mov
shrb
pop
cmp
imul
movsb
fadd
pop
mov
adc
pusha
fwait
imul
clc
inc
sbb
mov
leave
lea
imul
pop
lods
es
or
out
fnsave
fcmovb
sub
sbb
sbb
out
mov
cmp
mov
outsb
fs
pusha
or
pop
or
mov
fucomp
jno
and
cltd
and
mov
lds
pop
pop
and
cmc
mov
outsb
aad
dec
clc
loopne
sub
bswap
push
mov
loopne
mov
hlt
pop
loope
xor
pop
cmc
sahf
test
test
into
xchg
rorl
push
jge
inc
xchg
cs
ret
arpl
cltd
in
cld
shrb
sub
jecxz
mov
push
mov
mov
popa
arpl
aad
push
cmpsl
mov
imulb
loop
push
xchg
mov
pop
loope
pop
cmc
xor
adc
inc
add
pop
mov
sti
aam
in
popa
and
xchg
push
cmp
ficomps
lahf
and
stos
addl
jmp
mov
ret
ret
mov
stos
sbb
les
into
daa
xorb
cmp
pop
pop
movsb
in
aam
hlt
jg
ja
adc
rcrb
jg
ds
mov
cld
and
add
add
ljmp
frstor
cmovae
cmp
bound
xchg
mov
orl
mov
xchg
xchg
mov
mov
xor
movsl
mov
das
ja
pop
loop
add
pop
push
push
pop
iret
inc
and
js
dec
and
ljmp
inc
das
fdivs
and
cmc
fdivl
scas
outsl
mov
dec
xchg
int
lret
cmp
movl
shr
cmp
inc
test
add
mov
sbb
mov
adc
loope
mov
inc
icebp
js
scas
jo
test
mov
xlat
xchg
shll
pop
orb
and
sbb
lret
add
sub
hlt
or
dec
jecxz
lods
inc
test
loopne
fwait
mov
orb
and
push
pop
push
jbe
inc
stc
ret
int3
aad
mov
and
aam
xor
fs
cmp
lcall
fistpl
aam
loopne
cmp
pushf
jae
mov
int
jo
add
das
shlb
popf
jne
push
aam
mov
dec
xor
dec
add
xchg
dec
mov
scas
push
dec
mov
outsb
cmp
cmp
arpl
sub
dec
imul
lcall
jbe
lea
and
inc
fst
dec
test
loope
loope
xchg
mov
xchg
mov
stc
xlat
testl
jo
push
pop
add
push
push
cmp
scas
pop
or
es
sbb
je
pop
stos
movsb
stos
mov
cltd
fwait
cmp
mov
xor
pop
mov
mov
je
popf
sbb
fcmovbe
dec
push
les
popa
pop
fdivrp
mov
movsl
push
mov
dec
jg
mov
jp
out
ja
pushf
mov
mov
jle
pop
repnz
outsb
pop
std
push
jmp
cmpsl
fadd
arpl
test
sbb
lahf
push
and
mov
sbb
in
push
ljmp
jge
js
sbb
inc
imul
and
in
push
dec
xchg
push
fildl
jne
xchg
jbe
lock
mov
ffree
inc
inc
pop
ljmp
add
movb
cmp
adc
mov
cmp
add
rorb
xchg
cmpsb
mov
ret
idivb
nop
outsl
or
jmp
cmp
jl
sbb
mov
fldcw
repz
and
xchg
popf
rep
add
ljmp
cmpsb
shl
mov
int3
rolb
pushf
in
clc
leave
out
jae
arpl
push
cs
cmp
inc
sbb
sub
imul
and
mov
lock
sbb
popa
adc
jp,pt
add
cwtl
mov
jns
sub
movsb
jbe
push
xchg
cmp
push
mov
stc
dec
repz
call
lret
adc
ret
xor
xchg
jmp
sbbb
pop
ret
and
lds
xchg
jns
cs
cmpsl
mov
jne
cmp
adc
push
or
mov
aaa
pop
cltd
cmpsb
cltd
xchg
lahf
mov
mov
out
lock
aas
pop
cmp
adc
loope
daa
cmp
push
mov
dec
stos
xchg
pop
push
mov
cmpsb
push
jbe
lretw
insb
test
shrl
jmp
rorb
insb
adcb
imul
mov
add
iret
sti
push
jmp
mov
sub
sub
sbb
ss
pop
lods
dec
js
jbe
mov
rcl
cmc
gs
mov
jl
icebp
js
add
inc
mov
xchg
fdivl
cltd
push
insl
dec
sbb
orl
imul
mov
mov
add
xchg
sub
pop
cmp
int
fwait
in
pusha
in
sub
and
ret
scas
mov
and
pop
mov
sub
dec
or
pop
pop
hlt
cmp
adcl
add
in
push
pop
pop
or
push
or
in
pop
pop
and
adc
shlb
mov
or
cld
cmpsl
movhps
pop
test
adcb
lods
mov
or
cwtl
rcl
sub
cmc
out
ret
cmp
scas
jl
sbb
icebp
dec
xchg
test
xchg
mov
or
push
or
movsl
dec
pop
and
das
test
sub
push
js
mov
mov
jle
test
ret
push
cli
mov
sahf
mov
cwtl
shl
push
jecxz
out
dec
imul
test
and
fdivrs
mov
aam
cwtl
pop
mov
nop
lods
mov
fsubr
int
mov
jae
lret
ffree
ds
adc
and
test
inc
sbb
daa
out
push
push
xor
incl
dec
cmpsb
fs
jo
xor
or
sbb
hlt
insl
scas
lock
jge
jp
xchg
jb
iret
add
in
outsl
inc
and
scas
pushf
rol
xor
ljmp
lds
cmp
lcall
xchg
popf
fcompl
icebp
out
push
cld
faddp
out
inc
or
xchg
icebp
nop
cltd
inc
or
push
nop
dec
and
ljmp
add
scas
and
inc
ds
sub
mov
sarb
jge
push
xchg
js
add
mov
jne
pop
outsl
psubw
shrb
xchg
aaa
mov
out
mov
fldt
lret
imul
dec
cmp
out
push
adcl
in
or
pop
adc
push
lret
stos
mov
mov
aaa
xchg
jnp
xchg
pop
lcall
cli
std
sbb
das
push
loopne
mov
or
sub
imul
stc
pop
jmp
test
add
ficoms
or
add
mov
dec
and
lods
dec
mov
sub
test
jae
dec
and
loope
imul
mov
pop
loopne
repnz
sub
sbb
sbb
stos
push
gs
dec
xchg
popf
mov
loope
icebp
cmp
cs
cs
mov
and
std
xor
aad
out
xor
outsl
inc
ror
icebp
mov
mov
pop
push
int
fiaddl
dec
leave
loop
mov
lcall
xor
aam
les
out
in
xchg
fldenv
pop
ljmp
lea
fldl
pusha
inc
int
roll
fwait
bound
push
sub
aaa
inc
mov
dec
in
test
push
and
clc
push
or
adc
push
lods
aaa
sub
sbb
jmp
sbb
push
adc
cmc
inc
fwait
pushf
jg
add
in
cmp
xor
fidivs
xor
or
std
lahf
lret
xchg
or
mov
push
rol
xor
mov
out
cmpl
add
icebp
fld
int3
push
mov
js
mov
and
je
fnstcw
push
inc
sbb
mov
int3
sbb
mov
fadds
in
loop
jne
jge
xor
rcrl
xor
std
mov
inc
cmp
or
xor
movsl
shr
mov
movsb
xchg
push
jo
aas
mov
or
verr
sbb
in
push
and
loop
jae
outsb
pop
mov
fcomip
data16
mov
test
jp
shll
lahf
add
in
in
fstps
fsub
shll
pop
in
cmp
loope
inc
push
insb
test
mov
sti
dec
test
mov
pop
out
mov
mov
cmp
jae
outsl
mov
bt
ror
dec
add
pushf
jle
outsb
push
or
cmp
loopne
mov
movsl
cmp
call
fidivl
daa
std
push
mov
shlb
push
adc
outsl
iret
or
adc
sbb
xchg
jl
jne
adc
push
in
xchg
or
dec
mov
adc
cmp
nop
addr16
mov
outsl
push
idivl
xchg
sbb
leave
iret
fs
inc
inc
ljmp
xor
cmp
sbb
movsl
sub
std
stos
pop
xor
jbe
aad
and
xchg
sbb
pop
ftst
in
test
adcb
gs
mov
xchg
ljmp
xchg
ret
call
xchg
add
scas
movsb
xor
test
lret
push
jne
sub
dec
and
jo
mov
frstor
add
sarb
and
in
ljmp
push
pop
sub
sub
xor
imul
nop
sub
push
enter
and
mov
dec
mov
mov
aad
adc
adc
cmpsl
enter
scas
in
xchg
lds
cli
test
fs
test
cs
sbb
inc
orb
jg
sub
and
xchg
mov
icebp
fmuls
cmp
pop
mull
mov
fwait
inc
subb
add
test
in
fistps
jb
dec
das
jns
push
fdivrs
inc
std
sahf
adc
movsb
aad
sub
xchg
sbb
nop
fs
out
sbb
inc
and
insl
pushf
stc
sub
insb
push
xchg
xchg
inc
je
cmp
pop
push
jo
test
lock
or
mov
pusha
push
data16
dec
cli
cs
mov
inc
pop
fisttpl
mov
gs
sarl
js
mov
push
xchg
negb
inc
iret
mov
dec
inc
hlt
stos
aad
and
add
rorb
iret
and
mov
lret
or
test
mov
repnz
sub
mov
ss
or
sbb
jle
jmp
jne
imul
lret
ja
pusha
rcrb
xor
outsl
lea
cld
negb
imul
pop
mov
test
test
pop
jae
std
pop
inc
adc
wrmsr
adc
mull
mov
mov
scas
test
addr16
or
rclb
loop
wbinvd
out
cwtl
mov
jmp
sbb
sbb
lods
lret
mov
mov
jmp
lea
push
pop
ss
int
mov
call
xchg
dec
inc
js
or
cs
xchg
mov
mov
subb
xchg
mov
xchg
nop
and
pop
lds
out
lahf
call
adc
push
adc
out
test
imul
out
dec
shll
js
xchg
add
lods
pop
cmpsb
gs
pop
inc
or
sbb
sub
popa
dec
stos
push
jmp
cmpsl
stos
xchg
shl
mov
jecxz
das
cwtl
xchg
inc
std
sub
mov
fdivl
jg
fnstsw
int3
and
xor
subb
jle
fimull
lock
sub
daa
out
jp
idivl
std
sarl
sbb
mov
pop
sbb
sub
in
cs
daa
test
pushf
test
pop
sbb
loope
add
inc
adc
faddl
and
mov
mov
roll
repz
movsb
adc
test
sub
les
jne
and
gs
dec
inc
adc
push
mov
ret
inc
push
clc
lock
jnp
add
sub
or
sub
mov
and
pop
jecxz
dec
add
sub
push
mov
repnz
lods
sbb
shlb
repnz
clc
hlt
insl
in
mov
aas
cmp
out
inc
cmp
ret
movsb
dec
mov
cmovbe
mov
mov
sbb
ja
and
and
js
aam
lea
xchg
loop
push
dec
nop
cld
call
jo
outsl
pop
dec
leave
push
gs
jbe
popf
mov
mov
dec
dec
out
xlat
pop
mov
aad
fcompl
jnp
loope
pop
iret
add
test
call
dec
jecxz
jmp
mov
