and
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
jmp
push
and
cmpl
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
add
inc
add
rorl
push
and
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
cltd
sbb
push
push
lea
push
mov
mov
adc
inc
add
mov
adc
add
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
xchg
inc
add
mov
cmp
jne
add
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
add
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
add
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
and
add
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
ds
add
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
push
inc
add
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
ds
add
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
mov
xchg
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
stos
and
adc
lds
or
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
cmp
inc
add
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
lds
add
out
je
add
or
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
insl
and
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
adc
inc
add
adc
add
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
mov
inc
add
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
dec
adc
ja
mov
mov
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
add
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
mov
pop
pop
pushl
lea
push
pushl
movl
push
movl
mov
mov
push
call
pushl
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
add
call
pop
pop
mov
pop
pop
xor
pop
call
leave
ret
push
call
cmp
pop
je
mov
xor
mov
stos
stos
xor
mov
push
mov
call
mov
pop
mov
lea
push
add
mov
push
push
call
test
jns
jmp
mov
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
lea
call
jmp
push
lea
call
xor
call
jmp
push
mov
sub
push
lea
mov
test
jne
inc
add
or
andl
andl
lea
mov
push
lea
lea
movl
mov
call
pushl
andl
mov
lea
call
mov
test
je
mov
push
push
call
xor
mov
call
lea
xor
call
lea
xor
call
lea
call
lea
call
pop
leave
ret
push
push
push
push
push
push
push
movl
lea
mov
mov
push
push
call
mov
mov
cmp
jne
lea
mov
mov
add
lea
cmp
jne
push
push
push
push
call
mov
cmp
jne
push
xor
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
push
push
push
lea
push
call
inc
add
les
jmp
push
mov
and
mov
sub
cmpl
push
push
push
mov
jle
cmpl
jle
fldl
mov
fstl
fildl
fstl
fidivrl
fstl
fcompp
fnstsw
test
je
lea
fldl
sub
fldl
fmul
fxch
fstl
fmull
faddp
fstpl
call
call
fldl
fmull
mov
faddl
fstpl
call
add
call
test
mov
mov
mov
movl
jne
xor
cltd
idivl
cmp
mov
jg
lea
test
mov
mov
mov
jg
test
jg
test
jg
testb
jne
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
mov
fildl
lea
fldl
fdivr
fxch
fstpl
fildl
fdiv
fstpl
je
inc
add
fstpl
fildl
mov
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fildl
fdiv
fstpl
fidivrl
fstpl
call
mov
push
lea
push
lea
push
lea
push
lea
push
mov
mov
mov
call
test
je
addl
mov
test
mov
je
jmp
mov
and
neg
sbb
inc
ret
push
mov
mov
mov
push
push
xor
push
add
call
mov
neg
sbb
and
cmp
jne
xor
cmp
jne
mov
pop
pop
pop
ret
mov
jmp
push
lea
mov
call
mov
lea
push
push
call
test
js
mov
cmp
je
pushl
mov
pushl
push
call
mov
lea
call
mov
jmp
mov
mov
jmp
push
mov
and
push
push
mov
push
push
mov
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
mov
test
jne
pushl
pushl
pushl
push
call
add
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
test
je
mov
mov
mov
pushl
xor
pushl
pushl
push
call
mov
movzwl
push
push
push
mov
call
test
je
mov
mov
jmp
push
push
pushl
mov
call
jmp
push
mov
call
test
je
orb
cmpl
jne
mov
push
push
mov
call
jmp
test
inc
add
add
pop
add
add
cmpsb
mov
add
jnp
mov
ret
lock
add
add
xchg
add
in
pushf
add
filds
mov
mov
push
cmpsl
add
add
sbbl
push
mov
add
push
push
push
lea
push
push
push
lea
push
lea
push
lea
push
push
lea
push
call
flds
add
lock
lea
jnp
add
fadds
sahf
add
add
add
add
imul
mov
jae
add
jge
add
add
add
add
push
add
add
aam
mov
add
xchg
movsl
add
xchg
testb
in
faddl
in
add
add
sar
cld
add
add
mov
lea
pop
popl
push
push
push
push
call
bound
add
ja
jle
add
add
add
stos
add
add
add
add
test
add
mov
js
mov
mov
mov
fiaddl
xchg
add
add
add
movl
add
data16
popl
mov
add
add
mov
test
jo
add
mov
add
add
pop
push
push
push
push
call
fsubl
mov
mov
mov
iret
xchg
cwtl
repnz
xlat
add
fldenv
add
data16
xchg
test
fcoml
mov
pop
xchg
leave
aam
stc
mov
push
data16
add
add
add
pop
mov
addl
lahf
leave
mov
lea
pop
push
push
push
push
push
call
pushf
mov
jmp
add
insb
sahf
insb
mov
mov
add
roll
add
add
xchg
add
les
push
roll
jno
add
mov
push
mov
adc
call
push
push
lea
push
push
push
push
push
push
push
push
call
pop
add
xchg
add
lret
jb
add
test
push
cltd
add
add
cltd
jnp
enter
add
fidivrs
lcall
std
jne
add
cwtl
mov
test
add
add
push
mov
add
fs
mov
cltd
add
add
add
int
add
add
add
lea
pop
call
push
lea
push
lea
push
push
lea
push
lea
push
push
push
push
call
cmpl
xlat
iret
lahf
add
add
add
mov
add
xchg
add
cmpsb
jb
add
cmpsb
shl
mov
mov
data16
les
add
jne
shlb
and
push
call
push
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
rolb
aad
mov
testl
add
add
mov
aam
add
aad
gs
jge
test
sahf
addl
addr16
add
mov
add
mov
add
lods
cwtl
add
add
add
andl
xchg
add
add
add
push
mov
mov
lea
pop
jmp
ret
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
add
jl
fucomp
lds
add
add
iret
pop
add
les
push
xchg
ror
jmp
lret
push
jb
cmpsb
movsl
add
push
add
add
jo
add
add
scas
cli
cmpsl
fiadds
shl
add
pop
mov
push
push
lea
push
push
call
add
aam
add
add
faddl
pop
add
add
jno
cmpsl
aad
imul
jns
add
xchg
add
test
pop
pop
imul
push
out
add
add
mov
jge
add
push
add
in
fldl
add
in
xlat
mov
lea
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
add
mov
scas
jno
mov
int
aam
cld
test
out
lahf
mov
mov
add
out
testl
add
add
jne
leave
add
incb
add
imul
sub
pop
in
ret
add
add
push
lea
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
cld
add
add
add
rolb
cmc
les
test
add
add
add
add
mov
imul
faddl
add
fiaddl
xchg
pop
add
add
mov
jns
xchg
add
mov
lea
pop
add
push
lea
push
push
push
push
call
in
out
in
std
mov
test
pop
push
add
cmpsb
add
cmpsl
add
lcall
in
add
faddl
add
add
add
mov
mov
add
mov
in
add
jbe
jbe
icebp
jmp
add
movsb
add
stc
mov
add
insb
add
ja
les
pop
add
xchg
xor
push
push
push
push
lea
push
lea
push
call
int3
mov
gs
add
jle
test
add
fiadds
add
mov
out
xchg
jae
add
add
aad
add
imul
stos
add
sbb
xor
push
push
push
lea
push
push
push
call
test
add
jmp
leave
xlat
add
lods
mov
iret
mov
add
jecxz
xchg
push
test
bound
cmpsl
pop
shll
popa
add
les
shlb
lock
mov
scas
scas
orl
lahf
push
add
mov
mov
cltd
add
add
jle
mov
pop
xchg
flds
add
mov
lea
pop
add
push
push
dec
sub
push
or
inc
add
shl
sub
add
sub
sub
pop
xor
sub
pop
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
fs
add
cmpb
pushf
add
jns
mov
test
add
add
add
add
popl
pop
add
mov
add
push
shr
test
add
jno
add
add
add
add
pop
pushl
push
push
push
lea
push
lea
push
call
xchg
add
testb
les
test
jnp
arpl
xchg
mov
mov
mov
add
push
add
add
add
aam
add
xchg
lds
lock
add
add
fldl
add
add
add
mov
icebp
jle
ret
std
mov
add
add
pop
xor
aam
bound
call
push
push
push
push
push
push
push
push
push
push
call
add
add
fcompl
addl
add
in
lods
add
pop
movsb
cld
add
push
add
push
mov
test
ja
add
fdivrl
add
imul
add
popa
add
add
add
lret
mov
add
out
cmpsl
lock
mov
push
xlat
add
add
add
pop
sar
add
pop
mov
push
push
call
jnp
lret
loopne
int
push
add
pop
mov
push
mov
add
les
add
add
in
add
pop
mov
loop
std
jge
xchg
mov
push
add
aad
mov
add
xchg
add
mov
lods
int
test
push
jge
std
add
or
inc
loopne
add
add
mov
push
push
push
push
push
push
push
call
cmp
out
add
mov
add
bnd
add
pop
fstpl
imull
pushf
out
push
jge
add
add
pop
jp
add
add
jb
test
lahf
aam
aad
add
add
mov
icebp
push
ja
add
lock
loope
add
ret
ret
mov
add
push
jle
lea
lea
pop
lea
push
push
lea
push
push
push
push
push
push
call
clc
out
mov
jns
out
loop
loope
add
mov
add
shll
xchg
ja
mov
mov
add
mov
mov
add
mov
lea
pop
push
push
push
push
push
push
call
add
jge
lahf
add
push
in
jmp
add
test
cmpl
jbe
add
jmp
add
add
jne
xchg
add
mov
lea
pop
pushl
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
mov
loop
rcr
xlat
add
add
add
mov
push
shl
jbe
add
aad
into
add
add
lcall
fwait
pop
enter
jnp
xchg
mov
add
shl
lea
add
add
ficomps
push
add
add
in
rorl
add
mov
arpl
pushl
push
lea
push
push
lea
push
push
push
push
push
push
push
call
xchg
add
add
mov
push
popl
push
push
xchg
add
cmpsl
add
pop
add
aad
lcall
call
add
movsb
xchg
add
lea
pop
call
pushl
push
lea
push
push
push
push
push
call
add
add
pusha
shll
push
pop
mov
add
insb
add
into
pusha
mov
add
xchg
jno
add
push
pop
add
fldenv
jns
push
add
add
mov
lea
pop
pushl
push
lea
push
push
lea
push
push
lea
push
call
mov
mov
mov
add
add
nop
pop
int
outsl
add
cmpsl
push
in
je
add
mov
add
add
imul
add
gs
cli
add
data16
cwtl
push
int
add
mov
lea
pop
call
push
push
inc
push
or
not
add
not
rol
sub
sub
pop
shr
add
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
stc
pop
and
cmpsb
lret
out
mov
test
add
add
movsb
mov
xchg
mov
pop
shlb
push
add
fadds
xorb
xchg
add
in
xlat
lock
je
clc
into
jle
aam
bound
pushl
call
push
lea
push
push
push
push
lea
push
call
add
lea
addb
fsubp
mov
add
add
xchg
add
scas
lcall
cmpsb
ljmp
add
bound
test
clc
jmp
add
addl
add
add
add
xchg
push
mov
rcrb
add
nop
add
sbb
inc
push
push
rol
shr
shl
push
xor
add
xor
sub
sub
rol
pop
shl
inc
pop
push
push
call
mov
add
add
mov
fs
cli
add
jbe
fwait
mov
lcall
add
stc
add
imul
mov
sarl
add
add
lods
pop
xchg
cmc
in
push
push
add
add
push
jb
add
lods
add
loop
rcl
sti
xchg
roll
incb
add
pop
push
push
push
push
push
call
rol
popa
add
add
mov
add
cwtl
add
fcmovb
push
pop
jbe
push
not
add
addb
fistps
add
cli
pop
test
in
mov
lea
pop
push
push
push
push
push
push
push
push
call
mov
mov
add
popa
shr
fsubrs
roll
add
add
icebp
add
cmc
mov
add
mov
xchg
lret
add
add
mov
add
add
imul
roll
add
add
stos
mov
add
addl
add
mov
lea
pop
call
push
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
mov
add
add
add
jge
add
push
aad
xchg
jecxz
add
fadd
cmc
outsl
add
jae
add
xlat
add
outsl
add
cltd
popa
add
add
test
mov
fisttps
ret
xlat
add
mov
lea
pop
mov
push
lea
push
push
lea
push
push
push
push
push
push
push
call
mov
add
mov
gs
js
add
add
aad
adcb
in
add
fdivr
mov
test
hlt
insb
fiaddl
ljmp
mov
aam
add
fs
fimuls
add
add
add
mov
pop
add
js
pop
pop
add
mov
lea
pop
push
push
lea
push
push
push
push
push
push
call
mov
les
xchg
add
add
add
call
test
mov
add
add
add
testl
testb
add
iret
lcall
jge
add
ja
mov
lea
pop
push
push
push
push
lea
push
push
push
push
call
xlat
add
test
add
add
mov
ljmp
add
fwait
jns
xchg
xchg
cli
push
out
mov
test
lock
aad
test
cmc
clc
fldcw
add
jmp
ror
flds
fists
cltd
add
sbb
mov
push
push
push
push
push
push
push
push
push
call
shll
push
mov
add
push
mov
clc
ja
mov
add
add
xchg
mov
add
testl
mulb
pushf
jge
cwtl
clc
flds
add
addr16
add
add
push
push
push
push
push
push
push
push
push
call
add
push
mov
add
mov
movl
jae
lahf
add
add
fwait
add
fs
add
outsl
rcll
mov
add
mov
add
pushf
in
add
xchg
jmp
pusha
fildl
je
test
mov
push
loop
arpl
and
add
push
push
lea
push
push
push
push
push
call
mov
stos
mov
in
mov
add
add
add
cmpsl
roll
arpl
mov
pop
xchg
lods
mov
shl
jb
add
fdiv
popf
add
add
add
ret
add
jle
js
add
ljmp
lahf
mov
lea
pop
mov
xor
push
push
lea
push
push
push
lea
push
push
call
add
jo
shl
mov
lret
in
mov
icebp
xchg
add
add
add
jno
add
add
pop
add
je
add
fs
mov
lea
pop
add
push
push
push
push
push
lea
push
push
push
push
call
add
les
add
movsl
add
add
xchg
popl
std
lods
add
add
je
shlb
add
scas
mov
mov
lea
pop
push
push
push
push
call
jle
mov
lret
ret
fildl
xchg
push
add
imul
scas
bound
add
scas
add
push
add
pop
ret
mov
out
add
lock
xchg
mov
out
out
push
add
jle
aam
bound
mov
xor
push
push
push
call
add
add
add
mov
pop
fldt
pop
loope
add
add
test
lahf
pop
lret
add
xchg
add
scas
sti
mov
fidivs
push
stos
rolb
gs
lret
test
rorl
pop
add
pop
push
not
pop
mov
xor
push
lea
push
push
call
add
outsl
aam
stc
leave
cwtl
add
pop
add
icebp
jb
std
jb
pop
add
mov
add
gs
lods
add
add
out
jb
add
add
mov
pusha
lcall
cmpl
out
jnp
lret
mov
lea
pop
push
push
sub
pop
mov
push
push
push
lea
push
call
pop
in
add
add
xlat
loope
add
std
jbe
scas
add
add
jle
test
jl
add
add
mov
add
add
add
in
fstps
imul
mov
mov
add
add
stos
add
scas
in
fiadds
add
add
add
add
xlat
xorb
add
cmpsl
add
mov
mov
lea
pop
xor
push
push
lea
push
push
call
mov
jno
lock
add
mov
jp
leave
insb
loopne
add
call
add
fwait
cli
je
jmp
jbe
in
add
mov
pop
mov
jl
clc
push
add
ja
sti
lea
add
add
mov
xchg
cmpsl
add
insb
add
jo
push
add
add
repnz
lea
pop
add
push
lea
push
lea
push
push
push
push
push
push
push
call
testl
mov
add
add
mov
add
add
mov
add
add
add
pop
add
push
in
push
add
cld
fistpll
gs
jp
add
add
pop
sub
push
lea
push
push
lea
push
call
mov
add
add
add
mov
add
out
add
test
cld
add
int
test
test
pop
lret
push
add
add
add
mov
add
cli
mov
add
pop
add
mov
mov
add
add
mov
mov
lea
pop
pop
push
push
lea
push
push
lea
push
call
enter
ret
pop
jbe
add
push
add
add
cltd
sahf
ret
push
add
add
add
mov
add
addl
add
add
ret
hlt
mov
mov
xchg
add
add
push
xchg
fcmovnu
clc
mov
shlb
into
add
xchg
lcall
lea
pop
rep
pop
push
push
push
push
push
call
cltd
ret
add
mov
add
pop
add
add
mov
xorb
add
iret
jo
add
add
add
lcall
clc
add
add
stc
movb
add
mov
xlat
cltd
add
jle
mov
add
cmpsl
add
xchg
mov
xchg
out
hlt
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
imul
pop
test
mov
cld
add
add
ret
imul
mov
fwait
out
add
fwait
test
jl
hlt
aam
popf
add
in
shr
pop
add
jo
add
jle
out
mov
mov
lea
pop
add
push
push
push
push
call
stc
sbb
mov
add
add
add
add
mov
add
add
ffree
jmp
add
in
jnp
cld
scas
add
ja
movsl
fwait
add
orl
addr16
bound
pop
add
add
push
lea
lea
rol
pop
mov
push
push
push
push
push
push
lea
push
call
fldl
mov
add
fsubs
mov
movsb
fbstp
add
pop
lahf
jbe
lods
rcrb
lret
mov
adcb
icebp
add
mov
add
cmc
add
add
mov
lea
pop
xor
push
push
lea
push
push
push
call
jno
lods
push
aam
ljmp
mov
mov
movsl
in
fnstenv
fbstp
add
testb
flds
mov
leave
jp
rcrl
push
cmpsl
scas
xlat
add
mov
lea
pop
add
push
lea
push
lea
push
push
push
call
add
lret
add
imul
lods
mov
xchg
mov
imul
add
add
loopne
push
add
add
stos
add
add
mov
out
mov
push
arpl
add
ja
lods
filds
in
stos
test
stos
andl
mov
cmpsl
std
mov
lea
pop
mov
xor
push
push
call
les
mov
out
mov
outsl
add
hlt
add
ljmp
clc
in
pop
xchg
jmp
push
add
mov
hlt
add
mov
stos
popa
lods
cmpsb
add
mov
add
add
add
jle
add
push
add
fs
fadds
stc
xchg
add
add
add
out
bound
mov
lea
pop
mov
push
push
push
push
lea
push
lea
push
call
into
add
arpl
add
imul
add
add
add
sarb
std
add
add
repnz
add
cwtl
mov
bound
testl
icebp
sahf
mov
add
jl
add
add
mov
shll
cli
shll
push
mov
clc
add
pop
xor
push
push
lea
push
call
out
jae
addb
out
jnp
in
out
cltd
sti
add
mov
add
popf
fstps
pop
add
rcr
mov
fnstcw
sti
xchg
test
add
add
push
in
add
add
popa
or
add
push
dec
dec
shr
sub
pop
add
add
push
push
lea
push
push
push
call
lret
fadds
test
add
add
xchg
test
fbld
mov
int
xchg
mov
jo
add
jbe
cmc
jne
loope
imul
mov
mov
sbbl
int
jns
xchg
aam
fldl
add
add
pop
cmpsb
add
push
add
xchg
mov
int3
lea
pop
mov
push
push
ror
push
and
add
shr
xor
sub
add
add
pop
inc
not
xor
pop
push
add
add
pop
pushl
push
sub
pop
call
push
push
lea
push
push
push
push
lea
push
call
add
push
add
add
add
jae
iret
bound
add
mov
add
add
jp
jmp
push
aad
test
add
mov
lea
pop
push
push
push
lea
push
push
pop
add
sub
sub
xor
xor
add
pop
sub
not
rol
pop
push
push
push
push
push
lea
push
push
call
test
jmp
push
cmpsb
pushf
shlb
lds
push
out
mov
add
out
in
add
mov
jp
call
push
add
cltd
mov
add
add
cli
leave
mov
add
jo
jne
cmpb
pop
scas
rcrb
jbe
add
mov
fmull
push
lea
push
push
push
call
mov
divb
add
rclb
loopne
add
call
add
add
jbe
add
roll
add
push
pushf
shrl
add
add
call
fs
imul
data16
add
rclb
adc
xor
push
lea
push
push
push
lea
push
call
fcom
add
push
add
push
cmpsl
xchg
out
sahf
rclb
add
enter
enter
int3
sti
add
jp
add
loopne
jmp
jnp
pop
divb
mov
scas
mov
xlat
repnz
add
add
addb
push
add
xchg
shlb
ja
les
clc
push
push
push
push
call
imul
faddl
imul
push
les
add
lahf
jmp
icebp
pushf
add
scas
test
idivl
add
add
xchg
add
arpl
push
add
add
mov
jo
roll
movsl
ror
pop
lret
add
jecxz
mov
mov
add
int3
lea
pop
push
push
push
push
lea
push
push
call
add
rolb
mov
add
call
push
pop
add
add
flds
lock
add
js
addb
add
add
add
mov
loopne
add
sar
jmp
test
add
aam
xchg
lock
add
add
movsl
add
lea
pop
push
push
push
lea
push
push
lea
push
push
push
call
add
add
xchg
add
jo
add
int3
add
add
add
arpl
mov
jo
jno
add
jae
jo
add
add
movl
add
out
xchg
add
mov
rcrb
add
xlat
in
mov
leave
push
ja
add
pop
mov
push
lea
push
push
push
push
lea
push
push
call
imul
lahf
add
rolb
clc
pop
xchg
imull
cli
popf
mov
jecxz
push
ror
add
pop
push
add
mov
cmc
add
in
fnstsw
jae
out
xchg
xchg
aam
hlt
jnp
jno
push
test
add
xchg
mov
lea
pop
add
push
push
push
push
push
call
fs
popa
add
stos
loope
jno
in
add
add
mov
add
add
push
ja
add
jp
add
add
xchg
enter
mov
add
lds
push
mov
push
fs
sti
notb
mov
xchg
add
add
pop
add
push
push
lea
push
push
push
push
push
call
mov
pop
jo
add
jne
add
add
add
fistpl
add
add
add
mov
add
stc
add
add
add
notl
fsubr
outsl
push
add
mov
jae
add
loop
scas
add
add
mov
lea
pop
add
push
rol
add
pop
mov
xor
push
push
push
call
test
popa
mov
ja
cld
add
jle
mov
add
add
mov
add
add
popa
les
add
shll
pop
iret
stos
add
in
in
add
ljmp
imul
mov
les
mov
push
pop
in
add
push
les
jp
add
add
hlt
lea
pop
add
push
lea
push
call
movsl
mov
add
mov
add
push
add
add
add
outsl
jecxz
add
push
push
push
add
mov
aad
add
mov
pop
jl
xchg
mov
faddl
in
into
xchg
lea
cli
repnz
imul
testl
mov
int
add
xchg
jecxz
add
test
xchg
fldenv
aad
add
add
pop
push
mov
push
push
push
push
push
call
movl
out
add
add
in
add
call
xorl
out
aad
test
cmpsl
add
insb
fiadds
add
movb
mov
lea
pop
xor
push
push
call
add
add
add
std
cmpsl
add
xchg
movsl
add
add
xchg
push
adc
lret
lret
push
push
add
test
jne
add
lock
mov
add
lea
je
jns
fsts
insb
push
scas
add
pop
bound
mov
lea
pop
add
push
shr
not
pop
add
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
pushf
jne
add
loope
mov
add
add
xchg
scas
xchg
add
in
mov
add
div
rorb
fcmovnu
sti
enter
in
andl
lcall
rcrb
add
add
add
mov
push
iret
add
test
mov
lea
pop
mov
xor
push
push
push
push
push
lea
push
push
push
call
jmp
ret
pop
popl
add
out
test
pop
bound
push
pop
add
add
pop
fs
push
loop
in
in
add
xchg
lods
out
jle
xorl
test
add
mov
lea
pop
rep
push
push
push
push
lea
push
push
push
call
hlt
lcall
add
add
loop
push
cltd
add
add
add
sbb
fs
mov
add
je
lock
loope
mov
fmull
dec
and
icebp
xchg
xor
lea
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
lds
jae
xchg
lahf
add
ja
cli
add
xlat
pop
pop
add
add
xchg
add
out
add
js
scas
rolb
jge
hlt
scas
mov
testl
add
push
add
in
add
add
sarl
cli
pop
hlt
add
pop
or
je
mov
xor
push
dec
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
ret
stc
add
rcr
mov
jbe
testb
lret
add
add
add
add
add
test
add
rorb
add
xchg
mov
cltd
fstps
stc
std
pushf
sti
mov
add
add
call
out
mov
nop
add
add
pop
xor
push
push
lea
push
push
push
push
push
call
scas
add
pop
xchg
arpl
add
aad
mov
mov
add
pusha
int
add
push
push
add
pop
add
jl
imul
loope
add
xchg
clc
faddl
pop
rorb
add
mov
add
aad
add
mov
add
add
lahf
pusha
add
add
pop
add
push
shr
not
pop
add
add
push
push
push
push
push
push
call
add
xchg
add
orb
xchg
jl
add
fwait
js
add
pop
add
add
add
mov
add
test
clc
mov
add
pusha
add
icebp
mov
mov
loopne
ljmp
ja
leave
add
fnsave
fwait
cwtl
xchg
cmpsb
repnz
add
pop
push
mov
push
push
lea
push
push
call
sti
popf
add
ficoms
jb
add
ror
add
push
out
add
test
push
loope
out
jge
add
jge
cmpsl
jb
add
add
movsl
mov
lea
pop
xor
push
push
push
lea
push
push
push
push
call
sar
fcmovnu
pop
xchg
sahf
add
add
jecxz
icebp
cltd
add
gs
xchg
mov
add
lret
mov
mov
gs
add
addr16
fidivs
mov
data16
test
repnz
fwait
xchg
add
mov
mov
lea
pop
add
push
dec
lea
dec
pop
add
push
shl
add
pop
pop
rep
push
rol
dec
not
sub
pop
mov
xor
push
push
call
add
add
jmp
mov
add
add
add
lahf
ret
mov
add
addl
add
sti
js
outsl
add
add
xchg
add
outsl
push
xchg
mov
lea
pop
or
je
push
add
add
dec
shl
pop
mov
push
push
push
push
push
push
call
andl
ja
add
call
call
call
jnp
fwait
sbbl
add
mov
jae
cmpsl
add
add
ret
add
repnz
mov
fiaddl
jl
add
test
clc
add
pop
fildl
add
pop
add
push
push
push
push
push
call
shrb
add
mov
mov
add
add
add
int
fstpl
gs
mov
add
popa
xchg
roll
aam
cmpsl
outsl
add
out
cli
loopne
lcall
add
add
mov
lea
pop
add
rep
push
sub
pop
pop
push
push
dec
dec
not
push
or
not
add
dec
sub
add
sub
pop
lea
ror
lea
pop
push
inc
add
add
shl
pop
pop
push
push
push
push
push
push
push
call
lahf
add
jno
push
popf
add
clc
lret
jb
add
add
mov
add
fimull
negb
mov
add
stc
imul
sbb
mov
mov
push
lea
push
push
push
lea
push
lea
push
push
lea
push
lea
push
call
fnstcw
je
jb
add
loopne
jle
aad
add
add
add
push
ljmp
add
addr16
imul
rolb
and
mov
jmp
push
not
pop
push
mov
push
rol
rol
shl
pop
add
push
shl
ror
pop
push
push
push
push
push
lea
push
push
push
push
call
lcall
jp
push
mov
mov
fisubrs
mov
aam
out
add
add
cld
add
add
add
repnz
bound
add
rcrl
int3
mov
add
mov
js
xchg
nop
add
mov
add
clc
in
sahf
in
jl
add
add
add
outsl
add
in
mov
cld
lea
pop
push
push
push
push
push
push
push
lea
push
call
rolb
lcall
rolb
jbe
out
add
ror
add
mov
cmc
iret
mov
add
jb
mov
bound
add
call
pushf
add
pop
add
repnz
add
hlt
lea
pop
push
push
rol
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
call
xchg
add
mov
imul
les
add
xchg
stos
pop
add
push
add
cli
mov
fwait
jge
add
jecxz
add
stos
cwtl
jns
stc
add
add
mov
mov
add
add
lods
ja
cwtl
add
add
pusha
and
mov
push
shl
add
pop
pop
push
lea
sub
pop
pop
push
inc
inc
rol
pop
pop
pop
push
not
ror
add
pop
leave
push
lea
pop
ret
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
push
add
lods
mov
add
mov
jno
flds
fidivl
loop
loopne
nop
icebp
xlat
faddl
add
stc
pushf
jle
add
mov
pushf
mov
add
add
call
add
add
add
lea
add
add
into
outsl
add
mov
movsb
repnz
imul
push
push
push
push
push
lea
push
call
add
pop
jo
add
add
add
outsl
test
add
fwait
cltd
push
insb
mov
add
mov
push
add
imul
js
test
add
xchg
mov
lahf
jecxz
std
icebp
push
mov
add
add
xbegin
add
add
hlt
lea
pop
add
push
push
call
lock
cli
add
push
js
cwtl
roll
data16
shlb
add
sti
mov
ljmp
test
add
add
movl
add
push
shrb
jl
add
mov
lea
pop
push
push
push
inc
pop
push
push
push
shr
add
pop
movl
addl
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
add
add
xchg
xchg
add
add
mov
lods
add
lods
add
add
add
xchg
mov
add
add
out
add
mov
xchg
pop
in
mov
mov
pop
loope
enter
lods
mov
lea
pop
test
je
push
push
call
add
add
add
jno
incb
jns
jno
test
test
add
bound
add
testb
add
add
movsb
push
add
add
std
mov
add
jge
jns
add
add
lock
mov
add
jno
roll
icebp
out
lds
add
add
in
in
mov
test
hlt
lea
pop
mov
push
lea
lea
pop
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
jb
imul
add
mov
add
add
jle
add
add
addl
add
add
add
add
add
cwtl
loop
hlt
lea
pop
pop
push
pop
pop
push
rol
add
pop
pop
push
add
ror
pop
leave
ret
push
xor
sub
sub
pop
push
push
dec
add
xor
pop
mov
push
push
push
push
lea
push
lea
push
push
call
rolb
mov
xchg
nop
stos
mov
fsubs
sahf
push
cmpl
add
add
add
arpl
xchg
fldz
add
mov
scas
mov
add
mov
div
add
add
add
xchg
repnz
outsl
add
insb
jecxz
add
add
sbb
cmc
pop
js
hlt
jne
add
loopne
pusha
add
cld
lea
pop
add
push
push
push
call
jns
ret
jae
add
scas
aad
repnz
add
add
xchg
add
add
pop
add
add
fidivrs
fbstp
shll
xchg
add
push
insb
add
add
mov
lods
fwait
movsl
push
add
mov
add
push
jno
mov
lods
mov
lea
pop
push
push
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
bound
scas
add
add
add
lahf
in
add
scas
jp
roll
add
jecxz
in
add
mov
lea
pop
push
push
sub
pop
push
testl
push
add
pop
addl
push
push
push
push
push
call
push
add
add
imul
aam
data16
shlb
std
lods
stos
cmc
fadds
out
jne
cli
je
push
outsl
add
xchg
add
fildl
add
jb
pop
sti
gs
add
jnp
add
mov
lea
pop
call
push
push
push
call
movsb
stos
pop
xchg
nop
mov
stos
lock
iret
xlat
mov
mov
xchg
jl
add
addr16
add
cmc
jbe
jbe
pop
pushf
cwtl
ror
aad
mov
push
pop
loope
mov
mov
add
pop
mov
mov
or
mov
push
lea
push
lea
push
push
lea
push
call
jbe
out
popa
shlb
add
mov
add
in
and
fs
add
add
mov
add
out
adc
add
mov
rcll
stc
icebp
fbld
add
fiadds
add
mov
pop
sti
add
add
addl
xchg
rcll
add
add
mov
ljmp
pushl
push
ror
pop
push
push
inc
pop
push
call
push
pop
cmpl
jne
push
ror
pop
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
popa
js
mov
hlt
add
mov
push
lods
mov
add
jne
add
xlat
out
add
jle
add
fstl
jne
add
add
cmc
aam
testb
add
add
jbe
popa
pop
outsl
lock
outsl
popl
leave
add
add
xchg
pop
lret
mov
enter
add
in
xchg
mov
lea
pop
pop
push
push
push
lea
push
push
lea
push
push
call
leave
xchg
add
cmpsb
leave
push
add
clc
data16
ret
add
add
jo
add
mov
add
insb
bound
std
push
add
add
cli
popl
subl
add
les
sti
lea
jne
push
sar
out
add
rcr
add
fs
xchg
int3
jp
jp
pusha
mov
lea
pop
pop
pop
push
push
push
push
call
mov
mov
movsb
les
mov
add
add
out
add
mov
fiaddl
add
jge
add
mov
add
jle
add
xchg
add
add
mov
fwait
js
lds
add
imul
add
shrl
xchg
loope
jmp
movb
add
add
pop
leave
push
lea
lea
inc
pop
ret
push
lea
push
lea
push
call
test
mov
add
add
fdivl
out
jmp
nop
add
add
cmpsb
jae
mov
add
add
rol
push
sahf
cli
ljmp
or
push
push
push
push
push
lea
push
push
push
push
push
push
call
push
push
add
jae
push
push
xchg
add
push
fwait
pop
stos
add
add
mov
cld
loop
ja
add
repnz
lds
mov
jle
aam
add
aad
imul
mov
int
outsl
test
mov
repnz
fs
jne
add
bound
mov
add
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
std
add
xchg
jmp
add
add
add
jecxz
call
pop
xlat
popf
fcmovu
mov
mov
mov
xchg
add
in
lods
add
add
enter
add
jp
add
add
xlat
mov
mov
add
add
push
cld
add
mov
lea
pop
add
push
push
push
push
call
mov
add
mov
shlb
add
add
scas
shll
add
xor
js
in
add
xlat
add
fwait
add
jno
rolb
test
add
add
incb
add
add
push
add
pop
push
push
ror
pop
push
push
lea
pop
push
push
lea
push
push
call
bound
add
pop
cltd
add
cmpsl
add
in
add
and
add
xchg
mov
movsl
mov
js
out
sarb
add
add
jno
add
arpl
add
mov
add
mov
add
je
test
scas
add
xchg
add
ret
lahf
add
jb
push
add
outsl
add
add
or
push
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
push
push
call
mov
add
lods
jnp
test
out
mov
add
push
cli
add
add
outsl
ficomps
movsl
add
pushf
cld
push
jne
mov
jno
bound
xchg
jp
add
fstps
add
add
add
mov
lea
pop
movl
push
push
add
shr
pop
call
push
add
lea
ror
sub
pop
push
push
lea
pop
call
subl
push
push
call
lret
std
iret
movsl
add
sarl
mov
add
add
push
push
add
mov
add
pop
leave
add
out
fiadds
shrl
mov
add
add
jo
cld
lea
pop
cmpl
jne
push
push
push
call
out
nop
add
jge
jns
add
add
std
aad
sti
add
lods
in
add
loope
add
sahf
roll
lods
in
addr16
add
leave
add
out
add
add
ljmp
mov
add
lock
add
je
mov
add
lcall
testb
mov
add
out
mov
bound
pop
push
push
push
call
push
add
jmp
mov
push
add
cmpsb
add
fildl
add
pop
mov
jb
add
add
add
add
add
in
aam
fsts
rolb
data16
out
add
cmpsl
add
jo
in
pop
mov
or
pop
push
shr
pop
pop
pop
push
push
lea
push
lea
push
push
push
call
add
cmpsb
sti
lret
add
js
add
jns
jge
add
fldl
shrl
jo
pop
add
jmp
into
in
into
jne
popa
add
cli
add
add
add
mov
add
mov
add
into
mov
lea
pop
leave
push
ror
sub
dec
pop
ret
push
push
push
push
push
push
call
sti
mov
add
mov
leave
cmpsl
lcall
mov
arpl
scas
push
add
add
mov
ljmp
hlt
flds
add
jle
add
xchg
std
mov
mov
pop
add
add
add
xchg
push
subb
add
cwtl
mov
add
xchg
mov
mov
lea
pop
push
push
not
pop
mov
push
add
pop
add
push
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
test
ror
add
mov
add
lret
xchg
add
mov
push
add
add
mov
outsl
add
add
cld
addb
andb
xchg
test
jmp
loop
out
bound
scas
mov
add
stos
out
add
push
pop
cltd
mov
lea
pop
push
push
shl
pop
push
push
shl
xor
xor
pop
push
push
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
push
call
test
add
xchg
jge
jle
add
rolb
add
add
arpl
mov
out
lret
mov
add
add
cmpsb
cld
xchg
xchg
mov
xchg
sti
imul
jo
mov
lds
jno
test
jle
mov
imul
add
add
add
mov
lea
pop
mov
lea
push
push
push
push
push
lea
push
push
push
push
push
call
adcb
in
lock
add
rcll
les
mov
outsl
add
pop
test
mov
add
push
push
mov
ljmp
add
movsb
add
add
xchg
cltd
add
jb
popa
js
push
fcmovu
push
add
fmull
call
not
inc
sub
pop
shr
add
push
push
call
cld
add
add
movsl
add
mov
leave
in
mov
pusha
push
mov
add
add
addl
cmc
pop
out
add
xchg
jge
add
ljmp
mov
lea
pop
mov
push
push
push
push
push
push
call
add
repnz
push
aam
bound
test
add
add
jecxz
jb
stos
cld
xchg
lcall
test
lods
xchg
jecxz
push
lds
ret
cmc
mov
jbe
cmpsb
add
lods
add
mov
mov
lea
pop
mov
push
xor
shr
xor
lea
pop
add
push
add
pop
add
push
push
push
push
push
call
fildl
bound
jge
out
xchg
add
jmp
fcoml
add
add
add
add
add
add
add
add
add
imul
hlt
lea
pop
mov
push
shl
ror
xor
pop
mov
push
xor
add
pop
cmp
jne
push
push
push
push
push
push
push
push
push
call
mov
xchg
mov
in
fwait
add
mov
call
shll
movsb
sahf
jp
add
addl
add
lods
fistpll
mov
sahf
in
roll
push
out
add
pop
mov
lds
add
add
add
add
movsb
jecxz
mov
lea
pop
cmp
jne
mov
push
sub
pop
movl
push
xor
pop
jmp
mov
push
push
push
push
call
hlt
mov
lock
popf
add
add
pop
pusha
add
imul
lock
addr16
add
push
loopne
mov
pusha
sti
add
add
mov
add
jl
popa
out
mov
mov
test
add
hlt
outsl
fisubs
arpl
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
pushf
out
add
mov
add
mov
in
in
leave
jne
test
xlat
add
jno
cli
jge
shr
add
add
lcall
insb
je
aad
jmp
aam
bound
pop
sub
jne
mov
push
not
not
pop
movl
push
lea
push
push
push
call
jmp
call
add
add
jb
loope
xchg
add
add
mov
iret
repnz
mov
xchg
imul
add
mov
mov
add
jno
mov
mov
lea
pop
jmp
push
push
call
xchg
ret
addb
add
call
mov
imul
push
add
mov
add
lret
add
mov
out
fs
outsl
test
add
add
add
add
mov
lea
pop
mov
push
add
not
add
pop
mov
push
add
add
inc
pop
cmp
jne
mov
push
push
push
call
add
clc
add
add
add
lock
frstor
mov
add
incb
out
add
icebp
ror
add
add
cmpsl
jno
lahf
add
movl
out
fiaddl
lea
add
add
add
mov
std
add
roll
add
sub
sti
imul
fmull
add
add
add
je
inc
pop
jmp
push
shl
dec
pop
mov
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
jmp
add
jmp
add
add
mov
mov
add
mov
add
add
add
add
push
insb
lea
ljmp
add
pushf
xchg
int3
test
movl
fmull
cmpl
jne
push
add
add
dec
pop
mov
push
shl
sub
sub
pop
movl
push
lea
push
push
push
lea
push
push
push
push
push
push
call
pop
mov
fcomip
add
jo
add
add
repnz
add
popa
jo
pushf
xchg
add
jecxz
mov
imul
xlat
mov
mov
xor
lea
pop
jmp
push
push
push
lea
push
push
lea
push
push
call
add
add
add
test
jb
add
add
add
loop
mov
stos
add
pop
pop
bound
ret
je
cmc
push
jno
into
add
mov
add
add
mov
add
add
mov
lea
pop
pushl
push
push
push
push
push
call
ljmp
pop
lock
add
rcrb
pop
icebp
pop
pusha
mov
iret
lea
mov
sahf
add
add
jl
add
into
fwait
mov
push
loope
xchg
mov
cli
repnz
test
add
out
push
pop
out
mov
lea
pop
pop
push
inc
dec
rol
pop
mov
push
lea
push
call
jl
add
mov
mov
popf
add
addl
out
mov
data16
mov
push
aad
test
ror
push
add
stos
pop
iret
lds
add
mov
push
add
mov
add
mov
lea
pop
mov
mov
push
push
not
sub
shr
push
or
inc
add
xor
sub
sub
add
rol
pop
rol
sub
shr
pop
push
push
call
add
mov
push
jae
add
add
mov
add
gs
mov
pop
ljmp
imul
mov
add
out
roll
xchg
jb
jmp
addr16
pushf
lret
popf
jns
ljmp
push
push
shr
xor
pop
call
push
dec
rol
pop
cmpl
je
push
push
dec
add
push
or
not
add
inc
not
sub
dec
pop
not
add
pop
push
inc
pop
push
push
push
push
lea
push
push
push
push
call
add
xchg
add
outsl
add
js
loope
jbe
pop
out
stos
lods
push
add
add
insb
add
add
xchg
mov
addl
negb
fldl
in
add
push
add
jl
jge
add
pusha
add
mov
lea
pop
call
push
sub
rol
sub
shl
pop
cmpl
je
push
push
dec
sub
push
xor
add
add
sub
lea
ror
not
pop
xor
inc
pop
push
push
push
push
push
push
push
call
add
add
add
xchg
add
mov
pop
cwtl
xlat
xchg
pusha
fs
add
mov
add
lret
insb
andl
add
jl
pop
add
add
fs
iret
rolb
add
mov
lea
out
pop
mov
loopne
cmpsb
ja
jle
add
pop
push
push
shr
pop
call
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
cmpsb
faddl
ret
jne
add
jle
in
test
jp
push
arpl
ja
xchg
lds
pop
out
add
xchg
rolb
mov
add
cli
cmpsl
add
movsb
icebp
add
out
iret
add
fldl
add
rcrb
in
mov
lea
pop
cmpl
je
push
push
ror
push
or
inc
add
rol
xor
sub
sub
shr
sub
pop
add
ror
add
pop
push
sub
shl
pop
push
call
push
sub
not
pop
cmpl
je
push
push
shr
sub
add
push
sub
add
sub
sub
add
sub
pop
lea
inc
inc
pop
push
lea
push
lea
push
push
push
push
call
sahf
not
add
add
add
add
pop
add
add
push
add
lcall
xchg
add
mov
fisubs
cld
icebp
add
js
add
add
call
pop
cwtl
add
into
add
mov
fcmovnu
mov
jl
add
add
add
mov
lea
pop
push
call
push
shl
xor
lea
pop
cmpl
je
push
push
not
add
xor
shl
push
push
pop
add
add
shr
sub
dec
add
xor
pop
sub
rol
shr
pop
push
push
call
ficomps
test
out
iret
mov
add
fs
fadds
mov
add
addb
aam
repnz
add
add
test
add
jns
push
arpl
hlt
lea
pop
push
call
push
lea
sub
lea
pop
cmpl
je
push
push
shl
push
xor
add
rol
lea
sub
sub
dec
xor
pop
add
lea
dec
inc
pop
push
dec
add
sub
pop
push
push
push
push
push
call
nop
add
bound
lret
add
add
mov
jo
add
mov
stos
aam
flds
add
mov
add
in
add
add
mov
gs
in
jo
addb
mov
cwtl
ljmp
add
div
in
add
lods
loop
mov
add
lods
mov
add
push
mov
lea
pop
call
push
xor
ror
pop
cmpl
je
push
push
xor
push
xor
add
add
sub
xor
ror
add
pop
add
rol
inc
not
pop
push
shl
not
pop
push
call
push
push
push
push
call
xchg
add
lcall
pop
jno
movsl
add
add
rcl
cltd
add
add
add
out
pushf
arpl
hlt
jae
add
mov
iret
add
arpl
cli
mov
push
fs
add
mov
fadd
pushf
mov
std
add
in
out
add
int3
lea
pop
cmpl
je
push
push
rol
push
or
inc
add
add
inc
sub
shl
add
ror
pop
xor
rol
xor
pop
push
push
call
lods
clc
filds
add
xchg
mov
cmpsb
jp
mov
test
aad
add
jmp
test
std
add
out
int
add
sti
push
mov
popf
mov
add
lret
adcb
add
shr
roll
mov
mov
aam
add
faddl
mov
lea
pop
push
push
not
pop
call
push
sub
sub
shr
inc
pop
cmpl
je
push
push
shr
dec
not
sub
push
push
pop
add
rol
sub
rol
sub
ror
add
pop
dec
dec
pop
push
lea
push
push
lea
push
call
shlb
add
stos
mov
add
add
int
add
loope
add
aam
add
add
add
clc
push
cmpsl
push
out
iret
into
cltd
add
push
pushf
fcmove
pop
pop
rcrl
push
push
add
mov
lea
pop
push
push
shr
ror
pop
call
push
push
push
push
call
fdivs
fwait
test
filds
add
add
xlat
pop
lock
fcmovu
xchg
ja
add
test
pop
clc
addr16
mov
add
push
jnp
fldenv
add
hlt
lea
pop
cmpl
je
push
push
rol
sub
push
xor
add
add
sub
sub
dec
add
ror
pop
shr
rol
pop
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
add
xchg
hlt
push
add
fdivrp
push
in
jns
add
pop
jnp
add
add
add
jmp
add
cmpsb
mov
stos
mov
lods
sub
add
push
faddl
cld
lahf
add
cld
test
add
mov
lea
pop
push
call
push
shr
sub
pop
cmpl
je
push
push
lea
xor
not
push
or
not
add
not
sub
rol
dec
pop
shr
shl
pop
push
push
push
push
push
call
add
jae
test
mov
lea
mov
add
add
loop
pop
add
add
add
stos
add
add
faddl
pop
loop
add
add
add
lret
ror
add
add
add
mov
lea
pop
push
push
inc
add
pop
call
cmpl
je
push
push
dec
xor
not
push
push
pop
add
xor
xor
sub
add
sub
shr
pop
dec
sub
pop
push
push
push
call
stc
mov
add
roll
mov
repnz
xchg
add
outsl
xlat
testl
movsb
add
add
add
jbe
repnz
lds
mov
add
mov
lea
pop
push
push
rol
pop
call
push
lea
push
call
testl
bnd
add
add
pop
ljmp
cwtl
mov
jp
popl
pop
jae
add
add
add
fwait
negb
add
rol
addl
stos
fldt
pushf
mov
add
mov
jb
fs
outsl
mov
pop
pop
add
out
add
add
add
xchg
mov
movsl
addb
fmull
js
xor
pop
ret
and
add
push
push
push
call
add
push
mov
mov
cmpsl
add
test
lret
mov
mov
add
add
testb
push
add
jmp
add
outsl
pop
xchg
add
add
jge
mov
add
add
repnz
add
hlt
sti
jle
add
mov
pushf
mov
add
mov
mov
popa
mov
lea
pop
mov
movl
push
add
pop
jmp
push
push
push
push
push
push
call
int
loopne
add
jecxz
mov
add
ret
out
les
nop
add
add
push
add
add
mov
repnz
add
loope
leave
in
lods
add
imul
push
add
add
push
add
mov
add
pop
jb
stos
insb
jmp
xchg
add
add
push
mov
jmp
arpl
pop
xor
push
not
dec
pop
pop
push
not
lea
pop
pop
push
shl
pop
pop
push
lea
push
push
call
jmp
addr16
aam
xchg
add
popl
pop
loope
push
xchg
add
add
int
jo
add
push
cli
push
cmp
cli
loop
in
add
add
add
mov
jbe
mov
data16
add
add
addl
jmp
sahf
test
in
add
loop
add
pop
pop
leave
push
push
lea
push
push
call
xchg
shlb
clc
add
xchg
fildl
add
add
push
mov
cld
mov
stos
mov
jno
add
pop
shll
xchg
loop
pop
cmpsb
test
mov
lea
pop
ret
push
lea
push
push
push
lea
push
push
push
push
push
push
call
les
add
mov
add
add
add
pusha
add
pop
add
cld
add
add
lret
mov
add
sahf
loop
add
roll
lcall
add
out
stos
add
add
add
mov
pushf
jp
add
jo
add
fcmovnu
add
mov
mov
lea
pop
push
mov
push
inc
ror
pop
add
push
lea
push
push
push
push
push
push
push
call
add
int3
jmp
add
jmp
pop
scas
add
add
cmpsl
out
out
jns
add
push
add
add
test
test
add
mov
sahf
bound
iret
pop
add
add
test
jno
mov
lea
pop
cmpl
jne
push
push
add
push
or
inc
add
sub
pop
add
lea
inc
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
bound
add
add
js
add
push
fwait
xchg
add
mov
loope
enter
add
js
call
mov
add
add
add
add
cwtl
nop
xchg
mov
test
shl
add
add
jns
andb
out
mov
mov
lea
pop
pushl
push
lea
push
push
push
push
call
add
subb
push
mov
xchg
int
add
jp
jl
mov
add
add
xchg
lea
fwait
rcrl
lret
mov
cwtl
jne
add
add
add
add
loope
icebp
add
cmc
xchg
add
xchg
add
pop
call
push
push
push
push
push
push
lea
push
call
repnz
push
jns
add
mov
lea
pop
add
add
cmpb
pop
mov
add
in
add
in
pop
mov
ljmp
out
pop
add
add
add
add
addl
mov
mov
sbb
rclb
ffree
jecxz
pop
jmp
push
push
push
push
push
push
push
lea
push
push
push
call
mov
pop
add
iret
js
imul
add
pusha
shr
add
add
popa
rcrl
loopne
mul
add
mov
add
popa
jl
add
outsl
bound
add
add
fsubl
push
mov
sti
scas
fldl
jmp
into
pop
mov
popf
idivb
mov
lea
pop
cmpl
je
cmpl
jne
push
lea
push
call
add
fmul
add
clc
cltd
mov
stc
xchg
push
add
push
add
aad
shl
xchg
xchg
mov
cmp
mov
add
movsl
xchg
leave
add
sti
add
add
pop
leave
push
push
push
push
push
push
push
call
add
testb
xchg
testb
add
xchg
gs
mov
push
jno
pop
and
fidivs
mov
add
add
mov
scas
lods
mov
add
insb
ljmp
pop
xchg
add
add
imul
jmp
jge
add
add
outsl
add
shll
jo
or
hlt
lea
pop
add
pop
push
lea
push
push
push
call
flds
hlt
mov
mov
add
cmpsb
pop
mov
add
pop
add
loope
pop
cwtl
loop
add
mov
jl
fwait
cmpl
add
fcmovnbe
sahf
loop
mov
lea
pop
pop
push
lea
push
push
lea
push
push
lea
push
push
push
call
jo
jbe
rorl
push
add
lods
push
pop
mov
add
jno
cmpsl
pop
xchg
std
add
pop
xlat
out
aam
push
ja
add
mov
mov
add
add
add
ljmp
mov
mov
leave
fwait
add
ja
mov
scas
jp
add
add
add
pop
pop
push
push
push
lea
push
lea
push
lea
push
push
call
testl
xlat
add
out
xlat
cwtl
rcl
nop
push
mov
mov
stc
stos
loopne
xchg
leave
stc
mov
jnp
add
xchg
mov
add
lret
mov
hlt
add
xchg
lea
popf
js
scas
add
add
add
add
aam
int3
lea
pop
pop
push
dec
pop
leave
push
lea
push
push
lea
push
lea
push
push
call
push
add
add
mov
fiaddl
add
cwtl
add
mov
imul
imul
add
mov
mov
xchg
add
mov
addl
mov
ret
out
hlt
jge
add
add
lahf
mov
iret
add
add
je
add
mov
mov
lea
pop
add
ret
push
shr
pop
jmp
push
push
push
push
push
push
lea
push
push
call
sar
out
add
pop
add
mov
mov
mov
add
add
stc
add
add
add
rclb
xchg
fnstenv
ret
pop
add
add
add
enter
out
aad
add
xchg
lahf
rcl
add
add
fucomip
mov
lea
pop
cmpl
jne
push
push
rol
push
xor
add
not
ror
sub
sub
not
pop
ror
pop
push
add
ror
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
call
add
add
mov
pusha
mov
add
add
jmp
add
add
add
add
xlat
add
add
mov
test
add
movsl
mov
mov
add
int3
add
mov
add
mov
lea
pop
call
push
not
shr
lea
pop
push
push
push
push
push
call
push
lret
add
mov
push
add
jb
mov
test
jge
jnp
xchg
pop
add
add
xchg
add
add
xchg
add
add
add
out
add
cmpsl
mov
add
pop
add
js
fistpl
add
loop
sahf
imull
add
aad
xchg
arpl
pop
call
jmp
push
ror
pop
cmpl
jne
mov
push
ror
pop
mov
push
add
pop
push
push
push
not
add
push
or
not
add
dec
sub
dec
add
dec
pop
dec
pop
push
push
call
add
out
fnstcw
mov
add
add
add
icebp
ljmp
add
add
mov
add
jae
add
fs
sti
add
les
add
loope
mov
lea
pop
pushl
push
push
push
push
push
push
call
add
add
add
add
fcomip
shlb
mov
testl
jnp
add
add
add
aam
bound
pop
call
push
push
lea
push
or
inc
add
inc
sub
sub
sub
sub
pop
dec
pop
push
push
call
lret
push
add
subl
stos
fcompl
add
shlb
lock
pop
ljmp
jle
lret
movsl
add
lcall
mov
lea
pop
pushl
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
insb
add
add
fdecstp
loope
cmc
add
loopne
mov
fwait
push
mov
mov
add
fisubrs
mov
push
mov
out
arpl
sahf
jl
outsl
jbe
aam
insb
add
out
mov
mov
lock
orb
call
push
push
call
xchg
add
stc
addr16
add
jge
stos
mov
lcall
cld
add
push
xchg
repnz
add
add
aad
enter
add
jae
add
ret
mov
add
add
jl
add
push
pop
push
add
add
out
mov
lea
pop
call
push
push
not
shr
push
sub
add
add
add
inc
sub
shl
pop
ror
pop
push
not
lea
pop
pushl
call
push
push
push
push
push
lea
push
lea
push
push
push
push
call
jae
arpl
add
add
nop
add
add
ret
add
add
out
push
les
add
add
add
mov
add
fwait
jle
add
popa
mov
add
arpl
mov
add
sti
mov
add
stos
add
add
mov
pop
test
pop
mov
add
data16
add
movl
cmpsl
add
hlt
lea
pop
call
push
push
lea
push
sub
add
sub
sub
add
rol
sub
pop
add
pop
push
push
push
push
push
push
lea
push
call
add
mov
xchg
add
cltd
cmpl
ret
add
in
lahf
scas
mov
xchg
addb
add
int
push
lret
incb
test
addb
add
int
add
add
push
imul
stos
lret
popa
add
stos
add
add
repnz
add
add
cli
repnz
pop
add
ljmp
pushl
push
lea
push
push
push
push
call
mov
add
jbe
rcl
lods
add
jp
cwtl
fldl
add
pop
add
add
mov
addr16
jb
ret
mov
mov
add
jo
add
hlt
mov
lea
pop
call
push
push
push
push
lea
push
push
call
add
push
mov
loope
add
add
mov
jns
cli
int3
lret
aad
stc
xchg
xchg
imul
jge
mov
scas
int
cmc
shrb
ja
lock
loope
jge
add
jno
xchg
imul
add
test
dec
rol
add
mov
lea
pop
call
push
push
rol
inc
lea
push
and
add
not
sub
ror
inc
inc
pop
dec
sub
sub
pop
push
not
shl
pop
pushl
push
add
sub
inc
pop
call
push
push
push
push
lea
push
push
push
push
push
call
aad
lock
add
add
std
add
add
add
add
push
fstps
jge
add
in
add
mov
add
loop
clc
add
pop
call
push
push
ror
shr
ror
ror
push
or
not
add
ror
dec
sub
inc
shr
add
pop
shl
pop
push
not
pop
pushl
call
push
shr
not
pop
call
push
push
rol
rol
not
push
and
add
lea
rol
lea
sub
not
pop
shl
sub
pop
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
lea
push
call
mov
xchg
sar
add
popa
add
xlat
aam
hlt
mov
ljmp
jns
lds
in
add
xchg
add
mov
loop
push
push
ljmp
add
in
jae
stos
pop
add
pop
pushl
push
push
push
push
push
lea
push
push
push
push
push
call
in
loope
jnp
add
add
js
add
add
out
cld
into
pop
add
arpl
jecxz
add
fcmovu
jp
pop
add
add
jl
addr16
call
push
add
nop
add
pop
call
call
push
lea
push
push
call
add
incb
aad
repnz
fdivrl
std
pusha
in
add
add
pop
les
test
clc
add
lahf
leave
ror
mov
in
add
fiaddl
add
orb
ret
mov
lea
pop
call
lea
push
push
add
push
xor
add
ror
not
dec
sub
dec
inc
inc
pop
inc
pop
push
push
push
call
mov
mov
int3
hlt
mov
add
js
ret
add
add
add
add
add
add
add
loope
clc
lods
add
add
ret
out
add
mov
jl
add
add
addl
fiaddl
add
int
imul
arpl
leave
icebp
add
fwait
add
pop
pushl
call
push
lea
push
push
push
push
call
add
ja
ljmp
push
shrb
add
add
add
fimuls
pusha
jecxz
fidivl
aad
jae
add
orb
push
call
push
push
sub
push
or
not
add
ror
lea
sub
add
pop
add
shl
add
lea
pop
push
add
pop
pushl
push
sub
inc
pop
call
call
push
push
push
push
push
call
mov
lods
data16
shlb
mov
popl
adc
jae
aad
lret
fisubs
add
push
repnz
ret
cli
popf
shlb
mov
mov
sarb
fists
bound
mov
push
push
inc
ror
push
or
inc
add
sub
add
shr
sub
sub
add
pop
add
rol
lea
pop
push
not
shl
dec
pop
pushl
push
rol
pop
call
push
push
call
add
mov
mov
add
mov
filds
add
add
add
mov
add
add
ljmp
add
rcrb
add
clc
flds
mov
add
add
icebp
fcmovnu
clc
lret
add
data16
arpl
pop
push
pushl
push
shl
rol
ror
pop
call
push
push
sub
dec
shr
push
push
pop
add
sub
xor
lea
sub
add
shl
pop
shr
pop
push
sub
pop
pushl
push
sub
rol
shr
pop
call
push
push
add
push
push
pop
add
add
sub
add
add
shl
pop
pop
push
push
inc
push
push
pop
add
add
sub
sub
sub
pop
xor
dec
sub
pop
push
lea
push
push
push
push
call
nop
iret
mov
add
mov
nop
add
add
add
stc
addb
lret
lock
add
enter
pop
nop
mov
out
imull
push
add
arpl
add
mov
lea
pop
call
push
push
lea
shl
push
push
pop
add
sub
sub
not
rol
sub
pop
rol
pop
push
xor
inc
shr
pop
pushl
push
shl
inc
lea
pop
call
push
sub
pop
mov
push
not
lea
pop
lea
push
lea
push
call
add
add
xchg
addl
loope
add
jns
fldcw
add
ja
pop
ljmp
out
fdivr
jle
jge
add
add
mov
addb
cmpsb
mov
movsl
add
repnz
add
movsb
loop
int3
test
fistpl
imul
xchg
nop
lea
push
les
cld
lea
pop
lea
push
push
xor
pop
push
push
push
push
push
push
push
push
call
add
add
cmpsb
mov
loop
xchg
add
add
jp
add
push
aad
add
pop
mov
cmpb
mov
add
jb
add
ljmp
mov
data16
movsl
ja
sti
add
add
mov
add
cmpsb
into
std
pushf
add
jb
add
jge
add
pop
push
push
push
lea
pop
push
push
add
dec
not
pop
push
push
xor
pop
push
push
add
pop
push
push
push
push
lea
push
lea
push
lea
push
call
arpl
pop
push
imul
testb
lods
add
xchg
push
add
fldl
add
add
popf
add
leave
mov
add
add
add
push
cltd
popa
sbbb
mov
rolb
sarl
scas
cmpsb
add
add
jp
add
mov
cld
lea
pop
pushl
push
push
push
push
call
xlat
add
add
mov
out
push
mov
jnp
fiaddl
jb
mov
arpl
fidivl
jno
xchg
mov
add
jb
hlt
rolb
add
mov
add
push
iret
add
jp
push
jno
jl
add
test
jb
lcall
add
loope
int3
lea
pop
push
call
push
push
xor
push
xor
add
shr
xor
add
sub
not
pop
pop
push
ror
shl
shr
pop
pushl
push
push
call
call
add
out
cltd
mov
add
add
fistpl
data16
add
add
mov
add
add
add
add
mov
add
xchg
ficomps
je
jl
jns
ret
mov
lea
pop
call
push
inc
inc
add
ror
pop
call
push
push
lea
push
push
push
call
add
jne
add
add
push
mov
cmpsl
add
cmc
pop
add
pop
push
rcrb
stc
imul
pop
xchg
enter
into
roll
popa
pushf
jge
push
jmp
test
jp
mov
lea
pop
mov
push
push
push
lea
push
push
push
lea
push
call
xchg
add
jl
movl
add
push
add
lock
mov
add
add
mov
jle
jle
add
jno
jo
add
add
add
push
mov
sbb
pop
push
ror
rol
pop
dec
jne
push
push
push
push
call
xchg
add
leave
mov
scas
add
add
pop
fistpll
mov
add
mov
adc
add
jne
add
jl
call
xchg
add
push
into
cmpsb
lds
jp
add
aad
lock
out
add
add
mov
lret
xchg
rolb
add
jl
int
add
add
outsl
out
ljmp
leave
cmpsb
push
adc
push
or
add
clc
rol
xor
sub
pop
call
push
push
shl
shr
push
push
pop
add
shr
sub
sub
pop
add
sub
shr
pop
push
push
push
push
call
lahf
subl
add
add
mov
add
add
jmp
add
test
fs
push
stos
pop
add
mov
add
testb
in
cmpsb
add
adc
jne
push
lea
push
call
mov
mov
rclb
add
add
add
add
adcl
not
add
xchg
fwait
add
out
add
mov
add
aad
add
enter
out
mov
scas
jae
movsl
cmp
add
pop
call
push
push
push
push
lea
push
push
call
scas
scas
clc
cmpsb
push
loopne
add
mov
add
add
fistl
push
addb
add
out
add
mov
scas
add
enter
mov
test
push
aam
add
add
imul
add
enter
mov
out
mov
aam
add
fcomp
js
jl
sti
mov
add
add
sar
mov
lea
pop
push
push
dec
pop
call
push
add
ror
ror
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
call
jnp
add
scas
add
lcall
test
lock
add
add
add
clc
mov
mov
xorl
add
add
add
fcomps
leave
sahf
in
add
mov
add
jns
in
jmp
add
repnz
filds
mov
lea
pop
lea
push
push
add
add
push
and
add
lea
sub
add
inc
add
pop
inc
pop
push
add
add
pop
pushl
push
push
push
push
push
push
push
push
push
push
call
push
mov
add
add
add
orl
stos
imul
push
imul
imul
in
add
add
test
sub
push
sbb
push
lret
push
push
push
push
push
push
push
push
push
call
jmp
jbe
in
mov
rcrb
add
jo
jle
add
mov
add
lods
push
cmc
add
add
add
mov
lea
pop
push
call
push
push
rol
inc
sub
push
or
not
add
dec
sub
shl
pop
ror
pop
push
inc
xor
pop
pushl
call
push
push
push
push
push
push
call
add
push
mov
mov
add
add
add
jmp
fldenv
jl
add
lds
add
add
cmc
mov
add
mov
fiaddl
clc
add
add
in
add
add
fwait
add
test
mov
add
roll
fiaddl
add
mov
sbb
rclb
rol
pop
mov
push
pop
lea
push
push
add
push
and
add
add
not
sub
rol
pop
not
pop
push
rol
add
pop
pushl
call
push
push
push
lea
push
lea
push
push
push
push
push
push
call
iret
mov
movl
addr16
out
mov
lret
stos
add
add
mov
jae
clc
stos
mov
add
testb
add
add
pop
add
add
add
pop
add
xchg
add
out
mov
mov
lea
pop
lea
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
push
call
enter
lahf
pusha
iret
subb
mov
fildl
add
add
add
add
add
push
xchg
in
add
jge
in
hlt
add
add
mov
lds
orb
push
push
push
not
inc
pop
push
push
push
push
call
mov
jnp
push
mov
add
clc
add
add
push
add
stc
loopne
mov
add
add
add
push
fwait
add
add
add
mov
addr16
pushl
push
push
sub
shr
shl
dec
push
xor
add
ror
xor
add
sub
sub
inc
inc
shr
ror
pop
sub
inc
dec
pop
push
push
push
push
lea
push
push
call
lds
add
add
add
rcll
xchg
add
pop
add
add
add
call
fwait
mov
add
popa
mov
sbb
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
mov
add
pop
jb
int
addb
mov
cmc
push
add
add
add
ljmp
push
mov
mov
xchg
in
lea
stos
fwait
mov
mov
lea
pop
call
push
push
push
push
pop
add
rol
sub
ror
dec
pop
rol
pop
push
push
push
lea
push
push
push
lea
push
push
push
push
call
jle
add
je
in
cli
add
add
flds
push
add
iret
add
add
add
bound
cmc
mov
test
jns
add
push
add
xchg
lahf
add
insb
xchg
jae
add
rcrb
add
add
test
cld
lea
pop
pushl
call
push
push
push
lea
push
push
push
push
lea
push
call
mov
imull
fstl
fiadds
add
add
mov
cmc
add
pop
fadds
add
add
add
add
mov
lea
pop
push
call
push
push
shl
shr
push
and
add
not
rol
sub
sub
lea
pop
xor
xor
ror
sub
pop
push
lea
pop
pushl
push
push
call
lcall
lret
add
imul
add
add
popf
push
add
add
lret
int
add
add
xchg
mov
add
add
add
add
fcomp
xchg
add
jae
repnz
mov
mov
mov
add
mov
lea
pop
call
call
push
push
push
lea
push
push
lea
push
push
push
call
add
stos
add
popa
nop
ret
pusha
add
mov
fsubrl
jp
test
add
jp
ljmp
add
add
imul
jmp
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
add
into
add
sarl
lods
add
hlt
xchg
add
xlat
mov
add
sahf
addl
rolb
add
add
add
ljmp
xchg
xchg
mov
les
pushl
push
push
push
call
add
jmp
pop
add
add
add
add
cli
popf
jno
add
add
add
hlt
push
nop
add
lea
hlt
imul
cmpsb
add
add
ljmp
int3
push
xchg
mov
lea
pop
mov
jmp
push
push
sub
add
add
sub
push
sub
add
dec
sub
ror
add
xor
pop
pop
push
lea
push
push
push
lea
push
call
fcmove
pushf
add
cmpsb
jne
sub
jl
pop
add
shlb
int
loope
les
imul
xchg
push
mov
add
mov
mov
lret
into
test
imul
jp
addr16
mov
sarb
pop
mov
mov
add
add
in
add
lock
popa
adc
pushl
push
push
lea
push
push
lea
push
push
call
add
add
push
add
add
sbb
sbb
scas
pop
add
je
mov
mov
lock
fldl
add
add
add
add
mov
lea
pop
call
push
shr
xor
pop
push
call
push
push
shr
shr
push
push
pop
add
sub
rol
dec
sub
shl
pop
pop
push
lea
push
push
push
call
add
icebp
pusha
testb
add
add
add
lret
loop
push
add
add
cwtl
jno
mov
mov
add
mov
add
add
mov
lret
push
jge
out
xchg
add
add
shrb
add
mov
add
adc
jne
push
push
push
push
push
push
call
rolb
add
add
loopne
test
addl
add
push
add
mov
lock
add
roll
add
add
mov
mov
add
add
jp
add
add
mov
rcrl
add
add
add
add
xchg
mov
add
les
add
stc
add
mov
in
addr16
enter
mov
add
pop
call
push
push
push
push
push
lea
push
call
fwait
fs
jne
loope
add
frndint
add
push
aam
xchg
add
mov
add
adcl
lea
add
push
push
jmp
add
mov
cmpsl
add
xchg
mov
mov
mov
add
add
jecxz
add
add
jne
fucomp
ljmp
fadds
addr16
movsb
mov
lea
pop
push
call
push
shr
xor
shl
pop
leave
push
not
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
loopne
xchg
out
out
push
add
xchg
sarl
add
jl
std
cmpsb
testl
jle
cld
push
rcrl
fldl
addl
popl
movl
negl
cld
lea
pop
pop
push
not
add
add
pop
pop
push
not
pop
pop
pop
push
push
push
push
push
push
lea
push
push
call
add
pop
fsubs
xchg
js
cmpsl
add
add
add
xlat
int
pushf
cmpsl
add
add
rcll
push
gs
addr16
add
pushf
fisttpll
add
sti
add
xlat
add
xchg
lret
add
add
repnz
cmc
add
lcall
add
call
add
add
add
add
mov
add
data16
mov
lea
pop
leave
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
add
pushf
xchg
add
test
add
rolb
add
add
out
xchg
add
add
in
out
mov
testl
iret
add
mov
repnz
add
xchg
add
add
add
pop
add
push
add
sub
pop
ret
push
inc
pop
leave
push
add
pop
ret
push
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
jnp
add
xchg
mov
icebp
out
mov
add
cli
mov
mov
xchg
clc
add
jno
lret
into
int
testb
gs
mov
mov
lea
pop
mov
cmpl
jne
push
lea
push
push
push
push
push
push
push
push
call
add
add
in
fdivrl
add
push
add
xchg
testl
add
xlat
data16
pop
fsts
add
mov
mov
pop
out
out
pop
lods
add
add
mov
rolb
fs
leave
int3
lds
movsl
pop
outsl
add
mov
mov
xchg
mov
lea
pop
mov
jmp
push
sub
shl
rol
pop
mov
and
push
rol
add
pop
xor
push
lea
push
push
push
push
push
call
in
roll
in
stc
add
add
push
add
in
add
add
popf
fnstsw
roll
out
add
add
jp
lcall
add
add
mov
add
add
add
mov
rolb
add
add
push
cmpsb
xchg
mov
lea
pop
xor
add
push
dec
add
pop
xor
push
push
push
push
push
push
push
call
jbe
pop
mov
add
mov
add
int
jle
add
add
mov
movsl
push
xchg
push
data16
insb
mov
js
cmc
movsb
imul
jo
jl
push
mov
out
les
sub
push
inc
shr
ror
not
pop
jmp
push
push
lea
push
push
call
push
add
add
jle
pop
add
leave
ja
add
add
mov
sahf
cmpsl
add
pop
out
xchg
cltd
push
add
jle
add
pop
fsub
stos
fiaddl
mov
jbe
add
pusha
adc
add
add
pushl
push
push
push
call
rcrl
add
push
cltd
jne
cmpsl
addr16
add
add
jle
out
jmp
add
test
add
lret
pop
add
push
std
add
mov
in
add
sti
jb
xchg
add
add
pop
lods
cmc
jns
loop
flds
testl
jge
lock
add
jl
cli
icebp
add
push
addl
stc
in
ja
xchg
popa
or
pop
sub
push
ror
pop
cmp
jne
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
xchg
xchg
add
je
add
add
add
mov
repnz
add
loope
pusha
jae
add
add
leave
jns
hlt
add
jmp
add
add
add
add
add
add
xchg
xchg
nop
nop
mov
push
mov
mov
js
pop
aam
add
movsb
shll
testl
fmull
enter
ror
add
pop
lea
push
push
push
lea
push
push
push
call
aam
mov
loop
cmpsl
outsl
lahf
fucomi
add
add
aam
add
xchg
xchg
push
jecxz
add
add
faddl
xchg
add
add
add
cltd
iret
lea
mov
jbe
gs
scas
add
std
add
add
je
add
xchg
add
add
add
mov
lea
pop
sub
mov
push
push
lea
push
lea
push
push
call
add
xchg
mov
imul
mov
mov
add
pop
push
xchg
mov
mov
add
add
push
mov
mov
mov
cmc
add
movl
jae
add
xchg
int3
sahf
imul
addr16
icebp
lret
add
in
hlt
lea
pop
shr
push
push
push
lea
push
push
push
call
xchg
add
hlt
mov
fwait
pusha
cli
add
add
loop
div
add
fcoml
jge
jecxz
scas
add
cltd
add
mov
mov
add
int3
mov
add
in
loopne
add
test
xorb
jl
mov
lea
pop
add
push
lea
push
push
call
movsb
add
push
out
test
repnz
addl
mov
shr
xchg
xchg
scas
jne
push
add
add
xchg
sti
loop
add
test
jp
mov
shll
lds
mov
lea
pop
sub
push
push
push
push
push
call
bound
out
add
add
mov
fiadds
add
add
push
fbld
add
aad
out
lods
push
add
mov
push
out
push
xchg
add
add
pusha
add
fiadds
add
push
out
add
cmpsb
add
sahf
add
loopne
push
mov
lea
pop
pushl
pop
push
push
push
push
push
push
push
push
lea
push
push
call
loopne
mov
in
add
add
pop
imul
gs
jp
cmpsl
roll
add
shlb
add
xchg
movsl
add
fsts
add
jne
add
push
out
add
pop
shr
push
lea
push
push
push
push
lea
push
push
push
call
add
add
add
into
add
add
add
add
mov
push
out
add
test
add
mov
ret
enter
mov
popa
and
loope
incl
add
push
push
push
push
push
push
call
je
hlt
add
aam
popf
mov
les
fstl
push
add
popl
cmpsl
popa
xchg
add
add
xlat
add
jbe
fs
clc
add
aad
lea
add
in
mov
add
shll
jecxz
stc
call
xchg
add
pop
pop
idivl
in
mov
imul
bound
add
push
mov
out
mov
lea
pop
sub
push
sub
shr
shl
pop
cmp
jne
leave
push
sub
pop
ret
push
shr
sub
add
pop
push
push
add
pop
mov
push
inc
sub
dec
pop
add
push
xor
inc
not
pop
push
push
add
pop
push
push
lea
shl
pop
push
push
push
push
lea
push
push
push
push
push
push
push
push
call
loope
add
add
movb
nop
roll
incb
jmp
clc
out
cmpsb
add
jle
popl
xchg
jnp
stos
add
push
lcall
add
push
mov
popa
sub
mov
push
push
lea
push
call
add
mov
mov
add
int3
add
cltd
mov
add
fidivrl
add
repnz
jl
add
jecxz
xchg
enter
add
sbb
xchg
shrb
stos
arpl
mov
add
lds
mov
add
mov
add
bound
add
add
leave
pop
add
add
add
mov
or
lea
sub
push
push
lea
push
push
lea
push
push
call
test
fmul
faddl
add
subb
cmpsl
jle
nop
popf
add
add
rolb
mov
xchg
add
mov
addb
iret
aam
mov
jo
loope
xchg
pop
pusha
lcall
add
jae
add
add
sahf
jb
add
jecxz
leave
clc
add
add
add
add
aam
bound
pop
mov
push
shr
add
add
pop
shr
push
push
push
push
lea
push
push
lea
push
push
push
push
call
mov
test
nop
add
add
jnp
add
add
add
stos
add
test
cld
fistpl
mov
jl
js
lods
xchg
rclb
jmp
lea
pop
add
push
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
add
loope
xchg
mov
add
data16
lcall
in
add
add
push
int3
add
mov
add
out
stos
nop
add
out
testb
aam
enter
xchg
fstpl
into
add
shrb
test
frndint
mov
add
sub
fwait
addb
add
add
pop
add
mov
push
add
sub
dec
inc
pop
add
push
add
dec
rol
pop
xor
mov
push
lea
push
push
lea
push
call
in
add
pusha
fwait
add
movsb
xchg
add
fiaddl
mov
push
jmp
popa
add
add
sahf
add
fdivrs
cmpsl
add
xchg
add
add
std
add
add
pop
and
rol
push
add
add
add
pop
rol
xor
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
add
add
popl
jbe
in
mov
mov
push
fxtract
jae
add
out
add
stos
add
jb
add
fdivrs
add
add
and
add
hlt
lea
pop
inc
push
push
lea
push
lea
push
call
pusha
mov
aam
hlt
add
add
fyl2x
add
mov
jecxz
xchg
add
add
add
add
add
cli
call
add
mov
lea
pop
cmpb
jne
push
ror
sub
rol
pop
add
push
push
push
push
push
push
lea
push
lea
push
call
mov
enter
scas
add
stos
int3
mov
add
pusha
add
jbe
jl
outsl
out
mov
fildll
push
je
call
add
lea
leave
add
mov
stc
add
add
sti
lock
jecxz
add
mov
call
push
out
mov
lea
pop
cmp
je
push
push
push
push
push
push
push
push
lea
push
lea
push
call
push
roll
push
fildl
add
mov
add
mov
add
add
push
add
add
add
out
loopne
fistl
ja
movsl
add
mov
jecxz
add
mov
add
add
test
repnz
mov
subl
jo
fiaddl
jbe
pop
push
add
imul
add
add
add
mov
lea
pop
add
push
push
lea
push
push
call
lahf
cmpsb
add
cli
fildl
movl
jmp
in
into
notb
add
add
icebp
fdivrl
add
add
add
in
add
mov
lds
add
pushf
add
add
add
cmpsl
mov
cmpl
andl
shl
add
mov
lea
pop
cmpl
jne
push
shr
lea
not
pop
xor
pop
push
not
pop
pop
push
push
lea
push
push
push
push
push
call
jo
jb
add
leave
rcr
cltd
pop
fiaddl
fadds
divl
mov
mov
add
add
mov
pop
mov
cld
add
call
fwait
jnp
add
add
pushf
lock
add
gs
add
add
fdivs
add
popf
add
add
add
fmull
pop
push
sub
pop
pop
leave
push
inc
add
pop
ret
mov
push
dec
pop
add
push
shr
pop
push
push
push
sub
rol
pop
add
xor
push
push
push
call
add
jno
icebp
add
add
int3
add
add
add
test
test
data16
mov
test
xchg
cmpsb
add
and
test
stc
test
add
pop
mov
add
cltd
out
push
in
mov
fadds
xchg
add
mov
lea
pop
add
add
push
push
push
call
fs
add
mov
in
add
testl
xchg
jmp
mov
cmpsl
ljmp
out
add
add
add
add
xor
xchg
add
push
jo
mov
add
scas
add
pop
pop
push
push
call
mov
mov
out
add
xchg
mov
enter
add
add
push
add
add
add
movsb
loopne
in
cmc
std
test
clc
add
lock
add
add
add
enter
add
add
cmpsl
imul
fiaddl
add
pop
fwait
add
jcxz
add
idiv
mov
lea
pop
pop
push
push
call
movsb
call
add
add
iret
add
lds
add
fstp
sarl
add
in
add
insb
arpl
cmc
popa
add
pop
add
insb
mov
add
add
add
rolb
repnz
add
arpl
xchg
ja
idivb
add
pop
bound
add
add
js
xchg
repnz
xchg
xchg
xchg
fildl
test
or
add
xlat
lret
push
push
lea
push
push
lea
push
push
lea
push
push
call
pop
cwtl
add
pushf
mov
notb
add
add
jp
add
add
add
xchg
push
mov
xchg
repnz
jl
into
mov
add
mov
int
mov
lea
pop
push
push
push
lea
push
call
add
mov
add
js
notb
lods
jo
test
sahf
mov
mov
pop
mov
pushf
lahf
add
add
je
add
in
aad
add
fs
add
jmp
add
mov
add
nop
mov
add
mov
lea
pop
call
push
add
pop
xor
push
inc
inc
pop
pop
push
push
push
push
lea
push
push
push
call
gs
add
sahf
addr16
js
add
mov
jae
mov
cmpsb
cmc
test
mov
add
stc
add
add
out
imul
cmpsb
lods
add
add
jo
pop
add
push
mov
test
push
popa
add
pop
pop
push
push
push
push
lea
push
push
push
lea
push
push
call
add
add
int
sti
arpl
push
add
repnz
mov
movl
add
xchg
add
fiaddl
iret
xchg
add
loopne
add
add
pop
int
lret
add
add
mov
lea
pop
pop
pop
push
add
not
rol
pop
pop
push
add
not
pop
leave
ret
push
sub
add
lea
pop
push
mov
push
not
pop
add
push
ror
not
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
lret
add
add
les
rclb
xchg
add
add
pushf
add
mov
add
add
fadds
add
out
icebp
std
mov
push
push
shlb
sahf
push
mov
lea
pop
push
push
push
push
call
add
jns
ljmp
add
popf
dec
lods
pusha
test
mov
add
jle
lret
fistpll
xchg
in
add
add
add
jo
cli
fists
outsl
add
iret
add
in
jb
lret
xchg
mov
lret
pop
add
add
loop
add
pop
push
push
push
add
pop
mov
push
push
push
push
push
push
push
push
call
lds
roll
xchg
push
add
mov
add
enter
xlat
add
orl
mov
rol
mov
add
std
cltd
lret
lea
pop
push
push
push
call
add
fildl
aad
lret
nop
add
pop
shlb
add
xchg
ficoms
jbe
mov
jb
pop
gs
mov
jp
add
cmpsb
lcall
scas
push
xchg
mov
add
add
add
add
cmpsl
sti
bnd
add
lock
test
lea
pop
pop
push
add
lea
dec
shl
pop
lea
push
push
lea
push
push
push
push
push
push
call
in
jmp
loop
add
jge
fsub
mov
imul
add
mov
jbe
add
mov
push
add
add
pop
add
in
addl
add
add
jne
add
sarb
fs
mov
add
lea
pop
sub
push
rol
pop
mov
push
xor
dec
pop
shr
push
add
sub
lea
pop
add
mov
push
lea
push
push
push
push
push
push
push
push
call
add
mov
andl
pop
movsl
data16
out
cmpsl
push
fcompp
and
in
arpl
popa
enter
add
call
arpl
mov
add
add
push
mov
fwait
aam
xchg
add
add
mov
lea
pop
add
push
lea
push
lea
push
call
mov
loope
fcmovnbe
fucomi
add
add
push
mov
pop
add
add
add
add
mov
add
add
incb
add
cltd
data16
mov
pop
mov
jle
ljmp
bound
pushl
push
rol
shr
pop
popl
mov
push
lea
push
push
push
lea
push
call
add
add
sar
lea
mov
add
add
loop
clc
shr
add
add
push
imul
popl
add
test
mov
lea
pop
add
xor
push
lea
push
push
push
push
push
push
push
push
lea
push
call
xchg
mov
mov
orb
loope
add
add
movsb
js
pop
xchg
pop
add
fsubl
add
jl
mov
jecxz
leave
cmpsl
add
add
cmpl
in
stc
add
push
add
add
jnp
roll
mov
mov
cli
add
sahf
add
pop
lea
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
jo
notl
add
add
int3
int
add
xchg
fcomip
add
add
add
add
cld
addb
add
xchg
add
sub
adc
inc
pop
add
push
lea
push
push
lea
push
push
call
mull
out
pop
add
shl
jbe
lods
test
add
fs
add
pop
mov
hlt
mov
mov
shlb
mov
lea
hlt
lea
pop
xor
push
lea
push
call
lahf
ja
mov
add
stos
mov
stc
mov
mov
add
xchg
fisttps
add
add
add
pop
add
add
push
add
mov
lea
pop
rol
push
lea
push
lea
push
push
call
add
loope
sahf
add
add
add
add
xchg
push
add
add
cli
cld
imul
add
pop
xlat
imul
nop
mov
add
std
mov
lea
mov
add
mov
add
scas
mov
mov
xchg
jne
nop
popf
loopne
mov
fsubl
add
mov
add
les
adc
nop
push
push
push
push
push
call
les
orb
insb
add
popf
aam
jmp
fs
jmp
out
add
add
mov
add
add
out
add
sti
hlt
mov
lea
pop
xor
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
jmp
add
test
lahf
add
mov
add
add
add
test
mov
push
shrb
loopne
add
in
popa
add
int3
jbe
std
add
pop
nop
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
push
icebp
jecxz
loope
sbb
mov
rol
ja
int
fs
in
fildl
add
xchg
movsl
test
push
data16
nop
popa
jo
mov
jge
mov
jl
add
jle
cli
lcall
nop
test
in
movb
add
outsl
call
std
add
int3
lea
pop
nop
push
push
push
push
lea
push
push
push
push
push
call
xchg
ljmp
popa
popa
add
pop
aam
add
loopne
add
test
mov
mov
insb
mov
loope
add
jl
pop
loope
add
xchg
xchg
bound
mov
hlt
add
add
mov
xchg
pop
inc
nop
push
lea
push
push
push
call
movb
add
add
clc
scas
xchg
push
pop
pop
add
flds
jo
add
add
gs
leave
mov
mov
mov
add
add
add
stos
in
pop
out
jmp
add
into
pop
je
add
add
add
pop
je
add
leave
aad
pop
jnp
cmpsl
lods
enter
lock
mov
lea
pop
nop
cmpb
jne
push
dec
pop
add
push
lea
push
push
call
jb
loope
lods
xchg
stc
add
add
add
add
add
pop
add
add
filds
add
add
stc
xlat
ret
add
xchg
xlat
cmpsl
push
mov
rolb
add
add
add
loop
add
movsl
xchg
add
movsl
cmc
push
add
add
hlt
add
xchg
lea
pop
nop
push
push
call
js
cmpsb
add
iret
xchg
mov
idiv
add
je
add
add
jmp
aam
mov
cmc
add
add
cmp
int3
sarb
cltd
mov
ret
add
mov
lret
fs
xchg
xchg
fucomp
imul
add
jmp
loop
mov
lea
pop
nop
push
push
push
call
add
add
add
xlat
int
add
addb
ljmp
add
jne
mov
add
mov
test
add
jge
add
add
xchg
test
add
add
mov
lea
pop
cmp
je
nop
push
add
pop
nop
inc
push
push
push
push
push
lea
push
call
add
add
lcall
pop
movsl
push
test
in
add
lods
pop
cmpsb
jle
jl
fs
test
enter
mov
add
lahf
jle
shlb
data16
nop
push
push
push
call
fsubrs
or
add
add
out
add
enter
push
xchg
mov
xchg
add
ja
lods
pop
cltd
jl
add
movsl
mov
add
push
pusha
cmc
loop
pop
add
sti
mov
lea
pop
cmp
jb
push
add
ror
add
add
pop
xor
jmp
push
lea
push
push
push
push
push
push
push
push
push
call
add
aad
add
in
add
add
add
jb
add
lret
int
add
add
arpl
push
mov
pop
jmp
mov
add
add
add
add
addr16
mov
sub
push
and
xor
add
shl
sub
pop
add
push
push
lea
push
push
push
call
mov
aad
jnp
add
fiadds
test
pop
pushf
nop
jno
push
add
push
out
stos
mov
add
add
add
xchg
lods
add
mov
add
add
add
add
add
xchg
add
sahf
mov
add
add
add
gs
mov
lea
pop
movzwl
push
push
push
push
push
call
push
xchg
add
lahf
mov
add
xchg
jmp
mov
pop
add
mov
repnz
xchg
testb
cwtl
xchg
add
fsub
xchg
add
xchg
fisubrl
mov
lea
pop
mov
add
push
shr
add
xor
pop
mov
push
push
push
push
lea
push
lea
push
push
call
lret
loop
add
add
mov
add
add
add
mov
shl
add
add
pop
mov
aam
jmp
frstpm(287
aam
popa
mov
add
in
push
mov
xchg
in
jp
insb
add
lea
pop
xor
push
lea
push
call
add
fiaddl
mov
pusha
add
add
add
mov
jecxz
ljmp
mov
scas
flds
pop
lcall
mov
jp
stos
jmp
add
cmc
add
popf
pop
add
add
shll
add
add
ljmp
add
mov
aam
bound
pop
xor
push
not
dec
sub
pop
shl
xor
push
push
push
push
push
push
lea
push
lea
push
push
call
add
in
add
mov
faddl
loop
test
add
push
add
add
add
pop
add
add
loop
add
lock
shlb
orb
fldl
add
jle
addr16
add
rolb
add
pop
shl
xor
push
push
push
push
push
push
push
call
cmpsb
add
mov
add
ja
push
stos
mov
add
mov
xchg
add
aam
add
jb
into
add
lods
mov
shr
mov
int
pusha
add
add
scas
jno
add
add
imul
pushf
push
add
add
jl
bound
push
movsl
shll
mov
bound
shl
push
push
push
call
cli
arpl
mov
scas
mov
filds
add
mov
in
fucomp
jae
imul
cli
push
add
push
add
ljmp
add
add
mov
in
add
push
cmc
jge
jge
add
loopne
xchg
add
jl
mov
lret
add
push
mov
lea
pop
xor
push
add
shr
pop
mov
add
push
lea
push
push
push
push
lea
push
push
call
add
fwait
popa
add
test
in
data16
lea
add
add
xchg
add
add
rolb
js
mov
popf
add
pop
mov
movsb
fldl
add
add
icebp
out
pop
add
add
incb
add
faddl
jno
mov
sti
fisubl
add
add
loope
push
add
pop
xchg
hlt
mov
arpl
cld
lea
pop
pop
push
add
rol
xor
pop
pop
push
lea
push
push
push
call
mov
call
pop
lea
mov
rolb
loopne
mov
ror
add
mov
out
test
mov
ljmp
mov
add
xlat
add
add
add
pop
add
data16
push
add
enter
test
pop
mov
add
add
les
add
add
xchg
mov
lea
pop
pop
pop
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
add
add
add
shl
mov
add
add
mov
ficoms
xlat
add
xchg
nop
add
mov
lea
pop
leave
ret
push
push
lea
push
push
lea
push
push
push
call
hlt
mov
popl
xchg
add
icebp
xlat
mov
loopne
jmp
lock
pop
stos
rolb
cld
xchg
les
loope
add
mov
stc
add
push
add
add
xchg
pop
jmp
in
int3
lods
add
push
jp
popl
rcrl
jb
jo
add
cli
add
add
add
lea
pop
push
mov
push
shl
sub
pop
push
push
pop
push
push
push
dec
xor
inc
pop
push
push
shl
dec
xor
pop
mov
push
push
push
push
lea
push
push
push
push
push
call
mov
mov
add
xchg
add
add
jns
mov
add
scas
popl
fdiv
add
cltd
pop
sbbb
rolb
out
add
std
add
add
flds
add
fwait
lods
add
add
add
arpl
add
ja
leave
les
add
add
mov
mov
lea
pop
mov
push
push
push
push
push
push
push
push
push
call
push
adc
push
addl
jecxz
xchg
lods
add
add
mov
mov
push
jbe
add
add
add
add
lods
loopne
scas
mov
mov
add
add
add
lret
push
push
pop
orb
ret
add
lea
pop
mov
push
lea
push
push
push
push
push
lea
push
lea
push
call
iret
jbe
add
mov
add
cwtl
add
mov
out
imul
add
les
add
mov
outsl
mov
scas
push
add
mov
pushf
add
popf
add
add
add
testl
test
add
lcall
mov
add
sti
fstpl
push
mov
lea
pop
test
je
mov
push
shl
dec
inc
pop
test
je
mov
push
push
lea
push
push
push
push
push
call
add
mov
add
cmpsl
std
add
mov
add
out
loope
cmpsl
test
popf
cwtl
add
loopne
incb
add
into
scas
rcl
add
add
cwtl
add
jecxz
out
add
hlt
add
std
mov
mov
lea
pop
mov
mov
push
lea
push
push
lea
push
push
push
call
push
add
add
cmp
jl
rolb
jne
add
add
lock
mov
add
add
mov
loop
xchg
fadds
jno
add
into
add
add
add
gs
mov
lea
pop
inc
push
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
pushf
data16
add
sti
push
xchg
mov
add
lret
nop
add
add
in
add
in
add
add
add
mov
fdivrs
mov
add
push
add
add
add
add
orl
in
add
jae
add
stos
rolb
lcall
sub
rorb
test
add
push
lea
add
pop
test
je
push
lea
push
lea
push
call
add
fdivl
add
add
fcomi
jae
mov
add
push
add
clc
scas
add
icebp
fwait
stc
roll
add
lahf
add
add
add
pop
xchg
add
rcrb
add
mov
add
movsl
push
fnstcw
add
fldl
fildl
leave
add
fldcw
mov
cld
add
add
outsl
add
mov
lea
pop
mov
push
shr
pop
inc
push
push
push
lea
push
push
push
push
push
push
push
call
std
jae
mov
lods
pop
fistl
add
add
pop
mov
into
push
iret
add
add
jl
add
movsb
mov
xchg
xchg
data16
out
add
add
testb
js
mov
rolb
enter
add
push
add
fildl
jl
imul
cmp
je
push
push
push
call
mov
test
lcall
aam
jnp
add
cld
add
add
add
add
xchg
fiaddl
pop
jl
into
rcr
mov
add
imul
rorb
adc
pushl
rclb
push
push
lea
push
push
push
push
lea
push
call
ljmp
add
push
add
add
lret
pop
lock
add
sti
add
add
add
roll
jl
add
jns
add
outsl
iret
in
fucomi
add
add
mov
out
push
pusha
add
mov
mov
mov
cmc
add
add
int3
jb
xchg
add
push
orb
pop
push
sub
ror
ror
pop
pop
push
push
push
push
push
lea
push
push
lea
push
call
popf
lods
loope
fwait
rol
mov
add
xchg
mov
pop
add
addl
popf
imul
lcall
add
mov
addr16
add
mov
mov
jge
filds
out
add
popa
add
add
pushf
xchg
scas
cld
out
jne
add
mov
loop
mov
lea
pop
pop
push
push
push
push
lea
push
push
push
call
add
jp
add
xchg
stos
push
shl
add
aad
add
add
loope
push
add
add
std
add
add
jl
in
fwait
stc
add
mov
add
add
add
jne
ljmp
jns
clc
imul
add
ljmp
pop
leave
push
push
call
mov
add
add
divb
add
pop
jno
outsl
add
pusha
out
xchg
in
xchg
popa
addl
pop
fiaddl
mov
add
add
add
add
add
add
lcall
jge
add
std
in
xchg
fdivrl
aam
add
pop
in
rolb
add
add
addr16
lea
pop
ret
push
push
push
push
push
push
call
xchg
add
add
arpl
add
add
mov
in
add
cltd
pop
jne
cwtl
add
add
fsubr
jae
add
push
mov
pop
jb
mov
mov
push
jl
add
pop
lock
mov
in
add
in
fldl
js
test
add
rorl
sti
push
add
popf
jne
mov
lea
pop
mov
push
lea
pop
inc
cmp
jne
push
shl
shl
dec
pop
lea
push
sub
rol
lea
pop
mov
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
call
add
pushf
lods
roll
add
popa
add
jp
call
aad
mov
mov
add
cli
pop
insb
xchg
lds
add
stos
cmpsb
add
outsl
add
outsl
popf
add
xchg
add
pusha
add
pop
add
incb
clc
lods
enter
fmull
in
test
sarl
lods
daa
bound
push
push
push
call
mov
push
add
lock
add
mov
addl
add
pop
loopne
out
pop
test
add
add
mov
pop
add
movsl
add
add
pop
add
push
push
lea
push
push
call
shr
add
add
add
push
mov
lret
test
pop
add
test
add
mov
xchg
add
popf
scas
shlb
mov
add
add
in
push
flds
addl
add
lret
imul
add
add
jae
lds
lods
sbb
add
bound
pop
cmp
jne
push
sub
pop
mov
push
push
push
lea
push
lea
push
push
push
call
stos
in
mov
gs
stos
add
add
scas
add
aam
movsb
push
fiaddl
hlt
add
add
lods
add
add
pushf
popf
mov
adcl
add
jo
lret
lock
add
pop
sarb
add
std
mov
jb
test
add
in
fnsave
hlt
lea
pop
test
je
push
push
push
push
push
push
call
into
add
roll
cmpsl
add
les
add
add
sahf
idivl
mov
add
idivb
push
add
cld
rolb
les
out
mov
mov
add
add
add
add
xchg
mov
sbb
callw
push
push
push
push
push
call
add
add
gs
data16
stos
fcmovbe
mov
sti
mov
add
lods
mov
rcrl
add
scas
movsl
xchg
add
add
mov
xchg
mov
imul
in
scas
add
mov
mov
add
pop
add
push
push
push
push
lea
push
lea
push
lea
push
lea
push
call
add
aad
add
pop
add
add
add
push
scas
push
push
iret
add
lock
add
rcll
add
jne
add
pusha
stc
clc
push
add
mov
push
add
lcall
nop
jne
add
mov
imul
shlb
out
cli
popa
mov
int3
lea
pop
cmp
je
push
add
sub
lea
pop
jmp
push
lea
pop
xor
push
inc
pop
pop
push
rol
add
pop
pop
pop
push
pop
pop
push
push
push
push
push
push
call
add
test
add
add
in
add
lea
imul
jnp
in
fildl
movsb
add
jecxz
add
int
jge
gs
push
jmp
cwtl
lahf
fiadds
popl
int
movsl
mov
nop
lcall
aam
mov
mov
jae
add
cmpsl
add
leave
popf
add
frstor
jge
enter
lahf
add
pop
leave
push
ror
sub
pop
ret
push
lea
pop
lea
pop
push
push
push
push
push
push
lea
push
push
call
in
xchg
add
je
mov
add
fmuls
add
fucom
sbbl
mov
add
add
mov
add
jb
add
add
fnstcw
lea
pop
pop
push
dec
pop
pop
pop
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
push
call
into
lods
add
pusha
add
cltd
movsb
loop
add
clc
add
add
add
add
lret
add
adcb
enter
addr16
pushf
cwtl
mov
jno
add
adc
add
fstl
add
mov
lea
pop
leave
push
add
pop
ret
mov
push
push
push
call
add
js
add
xlat
add
push
add
xchg
add
in
mov
mov
stos
add
les
fbstp
add
decb
mov
notb
add
push
out
jmp
nop
xorl
iret
mov
scas
leave
add
les
pop
push
push
push
call
add
addr16
add
pop
add
add
fnstsw
add
lea
add
add
mov
jecxz
addb
mov
mov
mov
add
add
icebp
mov
rolb
imul
arpl
mov
lea
pop
pop
push
rol
pop
pop
push
not
pop
leave
ret
xchg
and
xchg
icebp
je
movsb
add
loope
imul
mov
imul
je
xchg
xor
jne
pop
pop
jb
sbb
mov
out
pushf
mov
fs
xchg
mov
push
pop
mov
jl
test
push
cltd
shlb
push
scas
enter
and
xor
imul
loope
pushf
in
into
ret
cmp
jecxz
mov
inc
mov
adcb
ljmp
imul
sub
rcpps
cmp
cmpsb
pop
rcrb
xor
dec
push
xor
cmp
psrld
test
movsb
jo
mov
xchg
push
and
les
pop
adc
mov
fwait
dec
inc
pop
insl
imul
dec
in
or
cs
xchg
aam
hlt
in
push
insl
out
sub
push
mov
jnp
xor
pop
mov
std
jmp
cmp
jmp
xor
or
xchg
cmc
jne
mov
lcall
outsb
stos
call
dec
in
pop
je
pop
fldt
mov
out
push
lret
lret
hlt
push
ret
imul
in
jae
xor
mov
xchg
cmp
test
repnz
push
sbb
mov
pop
xchg
js
mov
bound
jb
mov
jg
adc
push
aad
dec
rolb
push
fsubrl
and
ret
ljmp
push
out
push
jne
aad
push
push
imull
sarb
nop
mov
ret
jae
cli
pop
fwait
lcall
dec
sbb
ret
sarl
lret
lds
mov
imul
lea
mov
mov
mulb
and
rcl
sub
shlb
inc
notl
xchg
ja
andb
scas
add
ds
lock
mov
mov
pop
or
hlt
roll
aas
ss
pop
dec
dec
ss
lret
add
clc
fistps
xchg
scas
or
dec
add
or
sahf
mov
jmp
pushf
out
inc
bound
fstl
mov
pop
sub
jne
inc
mov
mov
shrl
stc
xor
dec
cmpl
movsl
dec
stos
add
loop
sbb
add
mov
xor
jg
sub
adc
or
mov
and
adc
push
adc
cmpsb
adc
popa
mov
cmp
enter
dec
das
and
dec
push
ja
add
out
arpl
loope
push
sub
and
add
sbb
mov
dec
lcall
pushf
das
xchg
cmpsl
xchg
mov
or
rol
jp
arpl
cmp
pop
add
fisubrs
sar
xor
leave
add
pop
popa
jae
mov
jge
add
js
ret
icebp
ljmp
pop
lods
or
sbb
cmpsl
jmp
and
bound
out
jns
les
sbbl
push
mov
imul
or
jne
hlt
sub
iret
cmpsb
mov
xor
dec
mov
adc
int3
dec
popa
in
mov
mov
mov
jge
bound
cmc
add
stos
mov
mov
sarb
pop
adc
int3
cmpsb
dec
insl
clc
xchg
cmpsl
ljmp
mov
rcll
mov
mov
pop
xchg
mov
jge
shlb
sbb
int
sbb
inc
push
insl
dec
mov
mov
cmp
les
pop
push
mov
jle
daa
push
mov
pop
sub
or
push
test
sbb
pop
push
movsl
sarb
mov
imull
scas
inc
mov
pop
sub
mov
movsb
popa
dec
mov
dec
addr16
xchg
lcall
addr16
sbb
mov
cltd
mov
ja
fucomp
mov
xor
bound
cmpsl
xor
jl
dec
dec
fsubr
add
jo
inc
nop
add
xor
ja
xor
pop
cli
js
jnp
mov
mov
mov
adc
push
mov
dec
test
add
xorb
inc
bsr
lods
push
xchg
or
or
into
and
and
aam
cli
gs
xchg
std
jne
mov
test
xchg
or
or
push
and
xchg
lret
inc
stos
out
int
sub
sbb
mov
fmuls
popf
push
testb
stos
pushf
push
fbstp
pop
push
outsl
mov
xchg
mov
mov
imul
push
test
add
push
xchg
out
das
inc
stc
mov
ja
pop
sahf
int
inc
xchg
lcall
ja
and
and
bound
popf
push
es
adc
push
mov
leave
and
fists
pop
push
push
mov
cld
mov
loope
cmpl
out
imul
arpl
inc
sbb
fdivrs
aam
pushf
mov
push
or
in
enter
and
sub
mov
into
xor
jmp
cmp
out
xlat
or
or
mov
ss
std
mov
dec
insl
call
lods
and
pop
ret
mov
cmp
out
mov
push
pop
fildll
push
dec
sbb
in
or
cmp
imul
lret
mov
jp
stc
add
cmp
sub
push
push
jnp
imul
cmp
cmp
xchg
inc
aam
push
imul
xchg
mov
xor
ss
xchg
inc
pop
subl
movl
je
es
pop
sub
mov
mov
repz
mov
fists
inc
hlt
adc
push
ja
testb
dec
xchg
rorb
jg
sbb
sbb
push
fisubl
xchg
mov
daa
mov
mov
cmpsb
push
mov
pushf
lods
mov
mov
dec
sub
jl
fdivl
push
jmp
outsb
bound
inc
cld
gs
add
push
cmp
fistps
mov
daa
inc
out
add
xchg
aaa
xchg
mov
pop
or
rcll
movsb
cmpsl
xor
outsb
mov
xor
outsl
inc
call
not
dec
aas
sbb
pushf
mov
in
and
jbe
filds
mov
out
sbb
insb
push
jns
cmpsb
jp
add
add
popa
jmp
fsubs
xchg
mov
pop
sbb
ja
pop
dec
mov
or
xor
pop
popf
pop
shr
jnp
jl
mov
lahf
mov
xchg
leave
ror
in
iret
xlat
repz
sbb
push
adc
mov
mov
sbb
int
pop
dec
jp
push
cmpsb
xchg
xchg
jl
jb
lcall
jnp
sub
pop
dec
mov
insl
pop
mov
inc
arpl
in
sub
xlat
fiaddl
lods
sbb
orb
pushf
enterw
lea
jne
mov
mov
fwait
sti
stos
mov
pushf
push
cmc
sbb
jno
dec
or
adc
fmuls
dec
loopne
div
shll
sub
pop
imul
jno
lock
dec
jo
rcrl
pop
mov
mov
push
sub
out
inc
inc
rcrb
lods
movsl
sar
push
bound
shrl
push
in
cmp
std
setg
mov
rcrl
popf
xor
out
sbb
xlat
inc
cmpsl
sbb
add
cmp
ljmp
xchg
jo
fdivrl
daa
dec
inc
jmp
addr16
aam
inc
call
sub
in
push
dec
dec
xchg
mov
pop
scas
adc
fbld
pop
ljmp
out
push
stos
pop
xchg
in
loop
mov
ficoml
jae
add
sahf
mov
pop
jbe
xchg
push
push
fists
test
into
xor
out
push
in
jae
scas
leave
pop
ja
mov
jae
xor
decb
in
fstpt
ja
mov
push
movsl
push
notb
pop
jle
xchg
stc
les
inc
cmp
aad
repz
repz
jmp
iret
push
in
subl
adc
inc
jns
fsubr
dec
sarb
ficoms
dec
pop
dec
cli
mov
dec
popl
xchg
pop
mov
or
sbb
sahf
leave
lods
cmp
in
xor
cmp
ret
aam
dec
scas
mov
dec
fisubrs
roll
stos
shll
dec
lods
cmp
sub
loopne
jg
stc
mov
mov
xchg
xchg
jmp
out
shrb
push
push
sbb
ret
or
mov
add
xchg
dec
mov
add
daa
mov
mov
inc
sub
xor
lds
out
arpl
das
sub
in
push
inc
enter
pop
js
out
stos
insb
jno
pop
lcall
jae
idivb
xchg
mov
sbb
shl
enter
insb
xchg
jecxz
jg
sbb
add
packssdw
inc
xor
int
clc
cmc
mov
inc
lret
push
xchg
arpl
std
mov
stos
adc
jecxz
mov
push
jecxz
jg
aaa
ret
jmp
and
fmull
stos
add
dec
cmp
push
dec
mov
inc
xor
in
mov
xlat
jno
inc
jg
cmp
dec
mov
pop
and
mov
lods
int3
sub
pop
jb
rclb
inc
push
mov
push
and
pop
mov
fisttps
mov
std
fcmovb
imul
in
inc
cmpb
sub
psubq
data16
lcall
push
dec
and
jmp
sbbl
leave
mov
dec
in
mov
scas
test
pop
popf
icebp
movsb
mulb
scas
inc
sti
mov
lods
adc
cmpsl
fistpll
nop
add
jns
adcb
add
cwtl
cld
adc
push
and
aad
mov
lods
in
cmp
xchg
insb
xchg
loopne
adc
push
hlt
jae
and
pop
sbb
rcr
enter
stos
add
sbb
pop
pop
shrl
mov
fdivs
movsb
popa
or
fmuls
add
adcl
inc
lcall
push
sbb
jmp
cld
sub
scas
dec
int
jns
lcall
pop
imul
mov
lods
lds
cmp
dec
or
and
sar
mull
pop
popf
mov
jmp
pusha
dec
mov
outsl
dec
mov
mov
sahf
push
dec
fistpll
mov
cmp
mov
int
jle
mov
sub
mov
outsb
leave
arpl
cmc
int3
dec
mov
fcmovnu
js
repz
enter
fsubs
sbb
nop
les
shrl
cltd
pushl
ret
xor
push
add
pop
cmp
rorb
out
fldt
sbb
push
xchg
and
inc
stc
cli
mov
testl
lea
jp
idiv
sub
into
lea
jb
pop
addb
repnz
repz
dec
adc
adc
dec
das
and
es
mov
jns
bound
into
add
pop
mov
cmpsb
sahf
push
adc
loop
arpl
add
add
fists
dec
cmp
xchg
cmp
scas
xchg
push
aaa
fadd
xor
xchg
and
in
andb
xlat
inc
mov
out
xor
sub
jbe
dec
dec
add
dec
cmp
jno
in
int3
dec
addr16
xchg
insb
lcall
and
mov
in
xorl
loop
les
lods
dec
repnz
sbb
js
adc
sti
jb
fldenv
adc
inc
insl
sbb
cmp
push
mov
bound
in
jo
in
in
adc
in
sahf
ret
or
fwait
jl
pop
add
scas
outsb
stos
into
fcmovnu
aad
loope
rclb
repnz
fwait
lret
enter
mov
xor
aas
pop
cs
roll
mov
jnp
pop
xchg
cmpl
shlb
js
daa
pop
xor
sbbl
cmp
cmc
push
mov
xor
mov
sarl
aaa
add
mov
lea
cmp
xchg
jecxz
sub
mov
in
xchg
ds
cmpsl
das
adc
lods
gs
sbb
and
xor
sbbl
subl
call
push
je
or
out
idivl
js
adc
mov
or
cmp
dec
jne
in
scas
shl
or
test
insl
stos
lahf
xchg
mov
push
loope
out
and
je
pushf
jno
movsl
push
mov
outsb
xchg
mov
fwait
push
adc
scas
fsubl
outsl
test
imul
ss
lret
jbe
test
jg
inc
adc
mov
cltd
pop
lret
shll
cld
mov
cmp
xor
scas
pop
cltd
cwtl
das
pop
rol
mov
xchg
cmc
arpl
leave
pop
xor
jp
dec
lahf
mov
xor
adc
ljmp
mov
pop
lds
add
mov
jle
add
add
xor
aas
cli
ret
fiaddl
scas
cmp
fs
loopne
cmp
std
cmp
sub
hlt
fwait
push
push
pop
and
fsubr
lahf
or
stos
icebp
inc
cmp
add
sbb
jmp
ficompl
fstpt
inc
mov
sar
sbb
inc
ret
push
rcll
ret
cmp
inc
pop
arpl
cmc
cli
sub
add
inc
and
lahf
mov
dec
in
cmp
sub
jp
test
sbb
jne
cmpb
lock
mov
cld
cmp
cmc
fwait
lods
insl
out
daa
hlt
aam
lahf
clc
inc
push
fisttps
icebp
mov
or
and
pop
scas
sbb
ret
lcall
inc
add
push
jp
mov
pop
std
mov
mov
in
fisubl
inc
ret
add
or
les
xor
mov
jmp
xchg
pushw
popf
sbb
insb
pop
push
dec
jno
lahf
adc
imul
fmull
ss
sub
pushl
dec
in
sbb
pop
fs
push
push
xor
cltd
cmp
lea
sub
inc
repnz
mov
leave
mov
insb
or
stos
ja
shlb
xlat
sbb
mov
lret
jae
xor
sub
mov
mov
test
aaa
inc
adc
cmpsl
cmp
jmp
or
stc
mov
cli
and
or
or
mov
in
cmc
mov
daa
arpl
or
xchg
mov
pushf
loop
mov
mov
mull
leave
mov
aam
cli
xchg
xor
jl
imul
sar
data16
adc
ss
sbbb
enter
mov
into
in
cmp
cmp
aaa
rclb
sbb
cmpsb
rolb
pop
mov
lahf
call
inc
ja
sub
mov
shll
mov
inc
push
xchg
cltd
pop
mov
sbb
push
mov
or
sub
xor
aam
js
xchg
sub
mov
mov
popa
xchg
sub
lahf
cmp
es
dec
cld
xchg
cmp
das
nop
or
and
and
arpl
aad
out
shrb
bound
push
ds
dec
ljmp
int3
outsb
pop
mov
xchg
cmp
mov
push
mov
mov
inc
mov
add
movsb
jbe
outsl
sti
pop
js
inc
jo
sbb
xchg
xlat
fisubrl
shl
lods
xlat
vaddss
inc
or
fstl
in
xlat
data16
lods
enter
jmp
insl
idivl
push
push
sahf
dec
and
or
addr16
cli
pop
cli
mov
subb
ss
popa
dec
push
cmpsl
push
mov
pop
jle
enter
sub
adc
push
rolb
sbb
push
int3
imul
sbb
fimuls
sub
push
inc
xor
int3
jle
ret
data16
hlt
nop
rcr
iret
push
inc
xchg
adc
imul
adc
aad
cltd
mov
int
cs
push
sbb
sbb
leave
inc
lret
les
mov
jp
push
and
mov
cmc
jbe
cltd
pushf
adc
cmpsb
pushf
cmp
push
adc
fldenv
cli
cmp
mov
sbb
addl
mov
std
out
mov
movsb
xor
or
push
ljmp
sbb
sbb
mov
aad
mov
rcrl
jle
iret
cmc
mov
sub
sbb
adc
mov
mov
sbbl
mov
sub
xchg
enter
add
push
dec
loopne
mov
rcrb
lds
jge
in
xor
cmp
shl
jne
aam
cmp
fstpl
cmpsb
loopne
testl
pop
in
daa
lods
fisttpl
add
ret
fwait
inc
mov
cwtl
sidtl
mov
ret
xchg
sub
int
jp
lret
sub
adc
clc
aas
jl
push
cmp
stos
mov
xchg
xchg
or
adc
mov
int3
push
lods
pop
les
jmp
data16
xchg
xchg
dec
in
jmp
pop
jb
arpl
imul
repnz
sbb
inc
mov
fdivl
add
bound
lea
inc
sbb
sti
es
or
mov
dec
enter
test
mov
test
insl
pop
mov
mov
dec
rorb
jg
sbb
lds
and
cmp
jb
pop
xor
xchg
add
jg
out
shlb
arpl
xchg
repz
sarb
out
xchg
fcompl
jns
sti
loopne
fmull
add
fcompl
push
data16
mov
cld
pop
mov
dec
pop
sub
mov
mov
outsb
fists
fistl
loopne
imul
push
dec
xchg
rol
pop
inc
test
adc
mov
sbb
pop
mov
push
push
xchg
xchg
inc
sub
push
push
mov
mov
js
mov
loopne
sub
lahf
jmp
xlat
mov
jmp
rclb
iret
ret
inc
cmp
aas
cs
xor
and
cmp
int3
push
xchg
mov
jb
mov
repnz
add
loope
int3
hlt
out
push
add
stos
mov
aad
add
fsubs
mov
out
sub
ret
mov
push
add
mov
pop
int
sub
mov
lret
rclb
lret
sbbl
xor
dec
clc
cwtl
mov
mov
push
icebp
ret
ret
cmp
or
or
adc
insb
pop
xchg
dec
int3
mov
pop
cmpsb
testl
pop
push
outsb
mov
pop
loopne
lcall
fsubl
stc
inc
int3
add
jno
cmp
hlt
test
cmp
and
data16
xor
xchg
ljmp
in
es
cmp
xchg
notl
cmpsl
mov
mov
mov
fwait
sysexit
lret
add
xchg
nop
enter
imul
fsubs
je
mov
sub
push
aam
fcmovb
mov
push
je
push
mov
mov
adcb
pop
std
enter
into
jp
sarb
mov
ret
mov
loopne
cmp
sub
mov
shll
ss
mov
adc
push
repnz
jp
dec
aaa
sbb
in
movsb
add
fwait
push
outsb
mov
int
jnp
ficompl
addr16
and
xchg
push
push
dec
js
xchg
cwtl
lods
cld
in
out
test
into
cmp
and
xor
lods
mov
das
jo
popf
fwait
and
int
xchg
stc
inc
fsubrl
push
icebp
lds
adc
or
loope
push
jo
dec
sub
jnp
loop
shrl
dec
xlat
es
inc
inc
mov
pop
push
xor
and
jl
ds
fadd
iret
test
loopne
and
jo
lcall
das
es
divl
dec
mov
or
push
cmp
xor
sub
jne
add
mov
ret
lock
jp
scas
inc
out
clc
clc
push
or
lahf
jns
mov
pop
jo
dec
mov
xorl
test
pop
dec
xlat
inc
movsl
inc
push
jbe
jecxz
shll
bound
lods
jo
in
cltd
mov
fists
cmp
test
or
pop
push
fcomps
int3
pmullw
xor
ds
dec
jmp
or
daa
mov
leave
push
cltd
pop
pop
loope
pop
popf
notl
xor
out
hlt
aaa
mov
shrb
loopne
je
mov
cmpsl
les
adc
or
or
nop
test
loop
cmp
test
adc
ret
adc
xor
mov
addb
js
mov
adc
sbb
jbe
push
fadds
pop
push
out
adc
cmp
popa
mov
xchg
jmp
leave
xor
push
push
xchg
loopne
in
or
cltd
aas
lret
insb
mov
lahf
pop
rcll
jbe
pop
ret
aam
adc
das
pop
icebp
cmpsb
pop
xlat
in
imul
mull
js
test
lahf
stos
icebp
pop
or
pusha
adc
pop
mov
cwtl
xchg
sbb
lcall
push
add
adc
pop
out
fnstcw
ffree
in
pop
mov
scas
add
ffree
fildl
mov
lahf
sti
adc
popa
sub
outsl
xchg
popa
popf
lods
shlb
iret
outsl
mov
and
sub
xor
xlat
cmc
sbb
scas
and
lea
push
adc
add
ja
inc
inc
sub
loopne
xlat
xlat
int
enter
inc
roll
and
ds
lds
mov
push
sub
negb
cmpsb
ds
mov
repnz
scas
daa
fcomps
repnz
adc
aam
or
sub
loope
jecxz
adc
in
push
jmp
shlb
enter
fwait
sub
imul
and
int3
add
cltd
mov
add
mov
mov
xchg
and
movsl
inc
cwtl
mov
aaa
fidivrs
orb
ss
and
repnz
sbb
bound
stos
add
cli
arpl
mov
call
pop
or
scas
cmp
dec
inc
xor
sub
scas
adcl
adc
fwait
loop
orb
imul
fwait
rcl
adc
lahf
aad
push
pushf
push
sbb
jge
xor
adc
lahf
int3
adc
mov
insb
push
cmp
xchg
loopne
push
lcall
jae
and
sub
xor
push
inc
add
sbb
popf
jo
add
and
jge
lods
mov
enter
xchg
sbbb
sbb
push
fwait
movsb
dec
and
mov
add
mov
out
jg
dec
fsubrs
fstpl
cmp
ret
subb
xchg
out
push
jmp
xor
or
pop
enter
and
push
popa
and
ret
jge
ljmp
mov
push
sahf
jg
xor
fbstp
mov
fiaddl
pushf
xchg
push
mov
xchg
dec
mull
pop
mov
adc
sub
std
adc
in
pop
adc
fbstp
test
mov
aam
ficoms
mov
and
cmpsb
movsb
cmpsl
inc
mov
xchg
or
jne
push
xchg
push
mov
dec
jno
push
cwtl
xchg
cmp
fwait
pop
dec
dec
arpl
lcall
mov
js
js
je
lcall
testl
inc
pop
sub
ret
xchg
pop
dec
mov
test
jno
xchg
xlat
mov
or
mov
inc
pavgb
shll
or
addr16
shl
push
xchg
mov
arpl
leave
shl
pop
gs
and
dec
push
lods
lret
xor
push
shl
test
add
sub
push
sbb
xchg
cmpsl
ret
adc
add
add
push
fcompl
sti
cltd
jne
popf
sub
jecxz
jbe
clc
xchg
cmpsl
push
cmpsb
cmp
test
das
jge
arpl
movsb
xchg
lcall
frstor
aad
pop
pop
in
jne
sbb
mov
sub
cmp
insl
mov
shll
insb
xchg
or
dec
pop
fwait
sub
js
mov
leave
mov
dec
data16
push
das
fs
inc
test
fwait
es
paddw
mov
xlat
xor
jge
stos
lods
sbb
nop
fidivrl
sub
jmp
loopne
mov
fnstcw
into
scas
jo
adcb
je
xchg
lds
mov
imul
push
into
or
inc
int
dec
cltd
dec
aas
cmp
into
mov
test
add
mov
jp
repz
dec
into
mov
pop
scas
lea
push
mov
push
dec
int3
mov
addr16
push
mov
in
fbld
and
jnp
outsb
jne
sub
mov
lock
xor
data16
mov
xchg
xor
mov
dec
jno
dec
push
adc
push
sub
out
movl
xor
ss
jo
mov
pop
std
out
adc
int
mov
jg
jp
lret
sahf
in
dec
push
xchg
shll
ja
loopne
cmp
int
shl
mov
rorb
pop
ljmp
movsb
out
fneni(8087
mov
sub
lods
jns
into
pop
xchg
mov
rcrl
int3
mov
add
inc
jne
mov
mov
inc
xorb
test
out
in
or
or
insl
ja
sub
repz
xor
adc
or
jmp
inc
dec
xchg
xchg
cltd
dec
jae
cmpsl
or
in
xor
repnz
and
fistl
jb
mov
cmp
aaa
lea
and
mov
stc
fwait
scas
pushf
icebp
push
xor
push
mov
pop
loope
pusha
or
jnp
pop
frstor
mov
clc
jmp
push
imul
sahf
popf
inc
dec
cld
fcomi
push
decb
movsb
sarl
sub
inc
das
out
dec
fmull
inc
sbb
mov
dec
insb
inc
sbb
stos
push
xchg
fsubr
and
fldenv
pop
vmwrite
jb
inc
mov
dec
pop
lcall
int3
ja
add
adc
in
sub
and
popf
jecxz
sub
fsubs
ds
in
ja
inc
fsubs
popf
test
jp
push
sub
lret
sar
lret
jp
addr16
out
inc
inc
scas
pop
outsl
lcall
sub
jns
stos
inc
fisubl
add
loop
mov
mov
popa
xor
sbb
adcb
and
mov
dec
pop
xchg
flds
movsl
daa
repnz
mov
fwait
daa
aas
mov
xchg
sub
cld
loop
jnp
call
cs
inc
orb
data16
push
shrb
adc
stos
fcmovnbe
mov
das
movsb
out
mov
out
gs
push
xor
cmp
xchg
push
in
inc
sahf
jo
out
imul
sbb
push
and
mov
mov
iret
xchg
inc
push
mov
mov
xchg
cmpsl
dec
cwtl
sbb
testl
sbbl
mov
cs
das
movb
leave
cmp
in
mov
sarb
jns
fstps
lahf
adc
sbb
adc
lcall
xor
popa
ss
pop
into
jae
aad
adc
mov
cmp
fisttps
pop
pop
or
lret
mov
jecxz
add
aas
pop
movsl
add
dec
lods
stc
inc
xchg
pop
mov
out
mov
scas
daa
loop
out
sub
icebp
ljmp
out
sub
sub
adc
leave
pusha
or
stc
mov
mov
test
and
pop
call
sbb
xlat
inc
push
outsl
and
inc
pop
and
push
fildl
add
pusha
mov
leave
jge
addr16
jp
pushf
scas
das
cmp
stos
in
dec
add
mov
imul
std
mov
ljmp
mov
or
imull
xor
std
jns
cmpsb
into
add
cmp
dec
sbb
icebp
jp
pusha
fmull
and
adc
xlat
addr16
das
lock
pop
pop
or
scas
xchg
repz
inc
adcb
mov
pop
or
fwait
sub
iret
add
test
fisttpll
mov
or
xorl
imul
lret
fbstp
adcb
fprem
loopne
jge
test
cmp
ficoml
or
pop
ja
inc
and
lcall
jle
jnp,pt
stos
repz
push
ret
add
roll
sub
int3
fsub
js
cli
iret
andb
fucom
fmulp
mov
push
or
add
fcomps
mov
in
add
sub
sahf
test
in
push
jo
fsubrl
mov
sub
divb
nop
out
inc
ret
and
sub
jnp
add
dec
pop
dec
add
mov
and
sub
lret
fstpt
popa
inc
out
sbb
test
imul
cmpsl
stos
fnsave
push
fistpll
mov
ja
in
mov
or
bswap
or
sub
into
xor
add
rcrb
xchg
jb
pushf
cltd
or
cmp
fstp
and
rorb
jae
sub
imul
add
pop
xchg
xlat
and
xchg
xor
and
lods
mov
outsb
mov
xor
jp
pop
fwait
test
jle
sbb
divl
mov
in
sub
or
aam
arpl
js
stos
mov
jg
inc
jl
inc
mov
es
adc
dec
sbb
add
in
sbb
pop
repz
xor
sbb
imul
cmp
fcompl
mov
dec
inc
jne
lret
arpl
incb
iret
pop
push
inc
xchg
and
pop
call
cld
adc
sbb
add
mov
aam
fmul
cmp
inc
pop
inc
cld
rclb
xchg
fsubrs
push
dec
cmpb
out
jno
lds
adc
jnp
jge
cmp
sbb
dec
imul
xor
sbb
xchg
or
stos
popf
push
jns
jo
add
aas
pop
inc
jecxz
pop
lods
mov
xor
inc
push
mov
pop
mov
sub
jge
ficompl
fstps
loope
pop
dec
lods
test
sbb
jg
cmpsl
out
xchg
inc
dec
scas
adc
sub
bound
lods
loop
ja
cmpsl
repnz
mov
repz
movsl
sbb
loope
ljmp
cld
aam
and
mov
sub
pop
hlt
mov
lahf
pop
rcrl
inc
int
out
jbe
sti
jecxz
dec
loope
sub
into
xor
dec
mov
loopne
clc
ret
pushf
cwtl
adc
rcrl
xor
mov
movsl
sbb
pushf
jecxz
fs
cmc
mov
add
daa
lret
ret
xor
mov
adc
adc
push
iret
outsb
adc
ss
lds
mov
pop
pusha
xchg
sub
cltd
adc
js
and
xchg
inc
lods
mov
sti
cmp
xor
imul
addr16
push
arpl
push
cs
xchg
jg
cmpsl
popf
movsb
sub
jns
mov
hlt
mov
add
and
xor
sub
repz
das
mov
loope
lret
popf
icebp
sub
aaa
in
jge
test
add
call
rcl
pop
inc
int3
fidivrl
rcr
mov
inc
dec
call
mov
dec
xchg
imul
cmp
mov
pop
test
jl
in
dec
nop
mov
or
xchg
jl
mov
adc
mov
xchg
cwtl
scas
fs
pop
inc
sub
ret
adc
inc
pop
sbb
jg
dec
sub
ret
std
div
adc
and
clc
inc
out
dec
cmp
push
inc
lods
clc
fildll
mov
mov
add
leave
clc
addl
hlt
push
faddl
or
jle
movsb
cltd
sub
xchg
sbb
fstl
std
ljmp
lods
mov
xchg
adc
mov
rclb
sub
in
inc
push
push
pop
les
pop
gs
push
ljmp
lods
arpl
push
outsl
aaa
stos
bound
in
mov
lea
xchg
fdivrs
ret
leave
push
iret
mov
imul
loopne
jl
mov
and
pop
pop
cli
fldenv
loop
mov
je
orb
mov
movsl
mov
inc
dec
xchg
out
mov
das
jbe
add
pop
pop
ret
int3
pop
dec
pop
and
daa
fldenv
or
scas
mov
push
rcrb
std
mov
hlt
mov
out
sbb
jmp
mov
add
add
inc
out
push
aas
sbbl
aas
inc
ds
xor
xchg
inc
les
lock
fmuls
sub
cmpsb
mov
cwtl
sub
test
mov
addb
push
jbe
jecxz
add
outsb
add
sub
push
sub
and
pusha
and
imul
sahf
mov
mov
pop
fldl
les
and
aaa
int3
jmp
sub
rolb
mov
ret
add
popf
out
inc
pop
inc
fcmovbe
in
imul
xor
in
mov
sub
xlat
lret
fwait
aad
inc
lds
fidivs
push
lods
rolb
mov
add
or
dec
sub
je
push
frstor
lds
pop
aam
xchg
std
stos
repz
sti
fildl
addl
test
in
jle
pusha
ret
popa
pop
or
lea
out
or
pop
fsubs
push
ja
push
cmp
cmp
lahf
inc
shrb
imul
cmp
xor
dec
mov
adc
push
sub
std
push
mov
addl
inc
outsb
adc
pop
cwtl
test
fs
scas
cmp
push
or
push
lret
push
call
out
or
aas
add
fcoms
mov
xor
fsubp
add
out
out
and
arpl
sub
shlb
sbb
out
test
daa
jo
or
sub
out
mov
hlt
adc
ret
jg
aaa
push
pop
or
std
jle
inc
movsl
pusha
mov
bound
cmpl
into
loopne
add
dec
sub
fsubl
pop
sub
aad
in
push
sahf
jmp
lock
out
and
pop
and
jns
adc
dec
push
pop
stos
xlat
sbb
xor
sub
add
jb
inc
fsubrl
push
test
mov
inc
push
aas
xor
movsl
jp
pop
push
and
cmp
push
hlt
imull
scas
inc
xor
lret
clc
fmul
xchg
movsb
and
adc
mov
fdiv
inc
push
int
inc
das
xor
xchg
lahf
add
cmpsb
jns
inc
jb
notb
repnz
popl
mov
mov
mov
mov
mov
mov
sbb
jecxz
lods
stos
out
lods
mov
popf
iret
repz
jmp
jb
leave
mov
lock
dec
jbe
pop
cmp
out
div
inc
into
loop
popf
outsl
int
rol
scas
inc
bound
ja
jg
mov
fildll
sbb
pop
add
popa
fistps
repnz
mov
rcl
ja
mov
jo
loope
add
or
fcmovne
dec
xchg
popf
fnsave
sti
inc
sub
jp
jmp
cmp
dec
mov
push
dec
shll
lds
loope
or
or
ret
jno
sbb
mov
xor
mov
incb
cld
jle
mov
enter
cld
popf
stos
stc
cmp
mov
hlt
or
testl
cmp
cmp
pop
xor
testw
xchg
inc
adc
xlat
xchg
or
jle
mov
mov
dec
xchg
xor
and
outsl
mov
mov
xchg
and
xor
fisttps
jp
mov
scas
bound
sub
xchg
adc
ljmp
jle
outsl
xchg
stos
ret
mov
cmp
popf
inc
push
add
stos
fsubrl
repz
lods
test
push
jns
xor
sti
xlat
mov
idiv
dec
mov
test
call
dec
sbb
pop
xlat
jne
and
addb
stos
pop
pop
dec
xchg
mov
push
sbb
cmp
bound
scas
mov
sub
test
mov
je
fdivrs
adc
stos
inc
out
sti
cmpsb
pushf
dec
inc
nop
lret
sub
dec
mov
sbb
push
into
xor
push
push
dec
mov
cld
call
sbb
loope
test
xchg
lods
arpl
int
mov
loope
adc
mov
jne
mov
add
or
inc
jge
imul
inc
sbb
sbbb
fs
movsb
pop
cld
arpl
pop
sub
jae
test
out
fstl
dec
cs
mov
sbb
shrb
das
leave
sub
pop
es
mov
adc
insb
add
addr16
imul
mov
div
inc
add
leave
xor
das
fldt
cmp
std
cmp
mov
fdiv
mov
loopne
jp
or
ja,pn
xchg
add
sub
cmc
aas
mov
mov
pop
ja
push
cmp
jns
cltd
dec
outsb
aad
test
cli
fwait
sub
jg
pop
stc
rclb
sub
mov
scas
and
lahf
bound
mov
and
int3
int3
stc
sub
sub
mov
cmpsb
fimuls
in
lret
sti
or
in
js
je
bound
adc
pushf
adc
les
stc
mov
inc
popf
push
lds
loope
mov
sbb
loop
push
cmpsl
insl
cld
cmc
dec
loope
lods
cmp
wrmsr
insb
xchg
cmp
dec
dec
mov
dec
imul
fisttpl
lahf
cmpsl
mov
push
mov
mov
xor
lcall
enter
pop
xchg
cmp
int3
rcll
out
xor
jge
cli
mov
sarl
cld
movsl
cs
dec
inc
mov
mov
mov
and
cmpsl
jecxz
imul
inc
mov
push
int3
lock
xchg
mov
xchg
cmp
shlb
mov
push
outsb
pop
fdivl
jno
loope
ror
lock
ja
call
xlat
jecxz
in
mov
xchg
xchg
fwait
and
mov
xchg
imul
push
inc
out
loop
jp
sbb
or
cvtpi2ps
xor
push
add
mov
xor
test
loop
add
mov
stc
and
leave
jmp
xchg
sahf
xor
jge
push
mov
icebp
insl
repnz
mov
xchg
mov
int3
repz
xchg
push
imul
fs
outsl
cwtl
lods
push
cmp
cmp
adc
mov
lret
cmp
in
inc
mov
mov
adc
add
mov
jnp
pop
cmp
pop
dec
pop
in
popa
lea
dec
into
or
cmp
mov
jbe
mov
fildll
dec
mov
add
daa
cmp
adc
outsb
dec
xchg
sbb
sahf
push
and
clc
pop
xchg
outsb
add
divb
loope
out
xchg
rorb
or
add
stc
scas
push
sub
daa
sbb
dec
adc
cmp
loope
push
pop
pinsrw
sub
fdiv
jbe
pop
nop
lret
stc
loop
sbb
dec
lds
out
push
mov
xchg
add
xor
imul
repz
aas
mov
xor
es
lods
jmp
sbb
sub
pop
push
sti
mov
rorb
dec
les
loopne
mov
jno
mov
int3
push
push
xchg
loop
in
sbbl
cld
sub
mov
out
repnz
cltd
loope
mov
icebp
stos
pop
addr16
add
pushf
filds
mov
popl
testb
push
fbld
fldt
repnz
sbb
xchg
test
cmp
mov
ljmp
jmp
ret
and
add
bound
adc
mov
pop
sahf
sbb
test
add
stc
fcmovne
mov
aaa
insb
fsub
int
sub
ljmp
dec
repz
notb
mov
dec
or
icebp
cli
sub
das
and
pop
xchg
cmp
dec
push
icebp
shl
mov
sub
jge
xchg
aam
mov
sahf
fidivrs
push
rcll
mov
out
pop
mov
dec
pop
stc
loop
loope
xor
and
or
and
dec
push
lcall
fisubs
out
jnp
call
leave
es
or
lret
mov
push
test
shr
ret
push
inc
fisttpll
and
lock
daa
aad
insl
cmp
xor
sub
mov
adc
xchg
addr16
aaa
or
aas
mov
es
jbe
inc
fs
jnp
push
lret
jecxz
push
add
std
sahf
in
in
mov
add
pop
aaa
int
cmp
cmpsb
test
popa
dec
imul
push
jno
push
rcrb
roll
dec
sub
imul
mov
pop
fs
jl
inc
scas
push
cs
dec
imul
and
lods
xor
xchg
or
jmp
mov
mov
cmp
jo
and
rcll
pop
insl
bound
mov
jae
pop
and
dec
lds
sub
leave
pop
mov
add
shrl
push
mov
aad
imul
sub
out
xchg
ret
and
icebp
scas
mov
out
sahf
pop
mov
xorb
js
in
or
data16
or
scas
inc
ss
movsb
dec
int
ja
lock
aas
jl
ljmp
add
and
xor
test
xor
hlt
ljmp
mov
pop
cld
test
das
mov
les
and
mov
lock
dec
cmpb
sub
sbb
loope
and
sbb
mov
ljmp
cltd
pop
cwtl
in
fmull
push
mov
or
bound
mov
rolb
std
call
out
pop
outsl
add
push
push
mov
xor
mov
js
es
out
jns
lret
cmp
fcoml
pusha
repz
cmp
movsb
add
testb
inc
pop
mov
or
dec
pop
cmpsl
xor
cs
repnz
clc
mov
in
ljmp
mov
aad
sub
movsl
mov
pop
mov
xchg
loop
push
xchg
loop
idivb
dec
inc
lods
sub
mov
push
lods
or
adc
out
decl
rcll
inc
scas
out
xor
push
insb
insb
xchg
cwtl
mov
lea
xor
test
lahf
sbb
in
push
xchg
xchg
pop
out
loope
inc
out
loopne
inc
dec
orb
mov
push
add
mov
sbb
cmp
aad
mov
jecxz
repz
cmp
xchg
inc
mov
push
fcomp
in
je
das
jg
jb
pop
adc
imul
sbb
lahf
dec
std
aad
sub
repz
xchg
sub
aas
mov
ret
add
pop
das
test
sbb
push
ds
lods
push
add
loop
or
adc
jl
daa
fistps
pop
inc
outsl
out
enter
fwait
vmovhlps
xor
fs
pop
dec
dec
dec
inc
mov
stos
push
aas
loopne
mov
frstor
cmpsb
jmp
xor
cli
fucomip
xor
in
call
into
fisttps
call
sub
out
inc
mov
pop
pop
rolb
and
ss
sbb
xor
lds
popf
mov
pop
movsb
mov
push
add
mov
push
xor
mov
and
fdivrs
sub
mov
std
leave
jge
xlat
sbb
sbb
xchg
fcoml
jp
and
outsb
push
mov
dec
sbbl
aam
test
fdivr
clc
shr
lds
mov
orb
fcmovu
sub
and
frstor
sbb
je
movsl
aad
roll
push
dec
lds
aam
outsb
lret
jno
mov
lock
adc
jne
dec
decl
arpl
insl
sub
dec
iret
dec
addr16
popf
ret
in
pop
std
jmp
lahf
push
pop
sbb
clc
or
pop
mov
mov
inc
jle
cmp
nop
psadbw
add
ljmp
xchg
out
pushf
rcrb
add
ds
push
mov
divb
push
popa
sbb
mov
outsl
xor
lods
dec
ret
cwtl
movsb
pop
aam
dec
jbe
sub
push
cmp
icebp
daa
lock
jp
and
or
pop
or
mov
xor
and
sub
mov
push
xor
push
cmp
nop
mov
or
mov
and
sbb
pop
enter
mov
inc
data16
ja
popl
push
push
sub
adc
dec
imul
in
loope
jno
xchg
arpl
sub
sbb
adc
pop
testb
push
add
lods
add
mov
inc
jb
sub
xchg
in
push
std
push
aas
fcmovb
into
mov
arpl
aas
scas
lret
ret
hlt
push
imul
mov
insb
mov
mov
cmp
icebp
push
dec
pop
into
cltd
loope
jmp
fsubrs
or
gs
lret
cmp
pushf
mov
popf
cmpsb
jl
sahf
je
loope
adc
or
shll
dec
jmp
cwtl
pop
popa
inc
sbb
mov
out
imul
xchg
stc
lock
imul
adc
in
inc
dec
pop
inc
sub
push
mov
mov
iret
ljmp
popa
popf
jecxz
arpl
mov
push
outsb
aad
aam
sbb
neg
les
mov
lock
dec
dec
mulb
aam
cmpb
push
scas
dec
dec
push
xor
int3
pop
cs
pop
mov
repz
pop
and
fcmove
hlt
hlt
es
pop
pop
ror
cli
out
pop
jbe
mov
in
cwtl
lret
mov
pop
jge
or
and
inc
inc
aas
jo
je
jae
in
add
sbb
adc
jmp
aad
jo
mov
xchg
cmp
sub
loope
data16
jecxz
jnp
and
es
xchg
xchg
xchg
xor
sub
cli
push
gs
xchg
lods
xchg
popa
xchg
mov
inc
scas
and
mov
dec
fidivl
cli
lods
and
mov
push
or
addb
outsl
jg
hlt
pop
xchg
insb
nop
pop
mov
pop
xchg
loop
sub
or
cmovae
adc
jmp
push
push
mov
mov
movsb
test
mov
xchg
mov
mov
pop
sub
iret
inc
mov
mov
and
fsubrl
adc
in
jle
jl
jno
add
xor
mov
loopne
sub
shrl
or
das
mov
js
mov
inc
xchg
push
push
mov
add
pop
jb
jnp
adc
fstpt
jae
cld
popf
dec
popa
push
adc
ficomps
test
iret
cmp
or
aad
shrl
lock
ja
mov
rcl
jb
dec
stos
call
lret
cwtl
lock
cmpsl
out
cwtl
notl
or
sub
jbe
pop
imul
sub
sbb
pop
jle
clc
cmpsl
fcomps
icebp
out
mov
mov
out
adc
cmp
jg
inc
test
add
arpl
inc
fmul
outsl
xchg
je
cmp
mov
mov
mov
addr16
out
sbb
daa
test
addl
loope
dec
lret
pusha
data16
ficomps
testb
mov
out
sbb
mov
in
cs
cmp
insl
addr16
cmpsb
jo
imul
cwtl
inc
sbb
faddl
fildll
pop
jb
xor
or
mov
faddl
cmp
gs
or
mov
inc
lret
mov
jno
pop
repz
sbb
mov
fs
push
lret
shrl
pop
sbb
or
lret
add
call
das
popa
cmp
and
outsb
mov
test
test
mov
jecxz
mov
mov
add
lahf
lcall
insl
fs
cmc
and
or
adc
movsl
or
cmp
lea
adc
jnp
ja
push
adc
jne
mov
adc
dec
cmc
mov
lcall
dec
cli
sub
xor
dec
sbb
mov
mov
push
dec
js
icebp
lods
cmp
aas
xchg
add
add
xchg
adc
push
xchg
fdivl
std
sub
lods
js
rcl
lcall
mov
mov
dec
pop
ret
mov
std
mov
rorb
sub
inc
xchg
adcb
mov
adc
jbe
test
out
bound
aam
cmp
les
mov
data16
mov
mov
loopne
dec
pop
jnp
jl
and
xor
mov
dec
sbb
xor
bts
jnp
xchg
jge
sti
testb
cmp
mov
pop
cs
mov
je
xchg
daa
jns
cmc
sub
cmp
push
pop
sahf
add
and
std
fldt
cmp
adc
out
sbb
es
jp
pop
dec
sarb
repz
fs
jne
in
jl
push
or
daa
push
lcall
and
fnstcw
movsl
or
lcall
pusha
cmp
cld
mov
std
leave
cld
orb
cmpsb
pusha
sbb
push
aaa
lahf
push
push
sub
xchg
xchg
or
jae
jb
jmp
aad
mov
mov
and
and
gs
adc
pushf
notb
pusha
or
sub
pop
xor
push
xor
mov
in
or
add
sbb
pop
sub
or
sbb
mov
adc
inc
sub
ja
push
push
xchg
mov
cmp
pop
scas
pop
push
or
loope
daa
outsl
imul
lret
in
and
sti
push
lods
sarl
lea
ds
stos
add
push
mov
sub
in
cld
pop
nop
jne
pushf
dec
jae
jb
cmp
test
lds
dec
jmp
mov
lret
sarl
dec
adc
out
xchg
inc
aas
mov
leave
mov
push
sub
lret
lcall
shll
cmp
sahf
sbb
sar
mov
int
jecxz
pop
or
out
mov
pop
arpl
pop
inc
pushf
xchg
dec
neg
dec
jp
push
out
repnz
or
loopne
dec
add
sub
fs
add
or
cltd
loop
ljmp
mov
xchg
cli
dec
hlt
cs
sub
fstpl
and
sbb
jge
lds
dec
push
mov
dec
sub
push
add
sbb
into
sahf
roll
sti
jae
pop
mov
test
cmpl
outsb
dec
or
sbb
popf
sub
cmc
repz
push
xor
push
aaa
sbb
adc
xchg
loop
or
xor
add
sub
mov
xchg
out
xchg
lock
or
cs
hlt
repz
jae
xchg
or
popa
icebp
movsl
cmpsb
scas
cmpsl
push
or
jo
test
imul
sub
mov
push
sub
inc
lds
xchg
dec
mov
and
pop
stc
jp
popf
mov
stos
mov
jno
lcall
mov
pop
addr16
fwait
imul
sub
sbb
fisttps
or
gs
fucomip
je
ret
cmp
and
std
dec
xchg
icebp
sbbl
xchg
jle
fwait
or
stos
inc
mov
aaa
stc
popf
cld
push
pop
xor
in
mov
pop
icebp
adc
aad
dec
mov
ret
in
fistps
movsb
fwait
fs
sar
add
mov
test
cmp
or
lret
push
pop
jno
aad
pushf
mov
inc
stos
mov
mov
cmp
test
pop
rorl
shrb
or
gs
sbb
cmp
cmp
divb
cltd
cltd
sbb
negl
and
mov
mov
mov
pop
cmp
insl
pop
cmp
xlat
pop
jne
imul
xchg
sub
add
imul
inc
repnz
out
pusha
outsl
rcll
ja
das
lret
les
in
repnz
mov
gs
out
dec
cmp
push
mov
add
add
lods
adc
decb
cmp
ss
cmpsl
insb
sub
aaa
xor
and
sub
loopne
cmp
pop
lret
or
and
arpl
sti
push
cmp
xlat
cld
inc
jne
stc
out
xchg
sub
loop
pop
rcl
add
out
or
or
je
xchg
roll
pop
movsl
stc
insb
gs
pop
das
mov
cmp
adc
cmp
sub
sbb
out
xlat
scas
lds
fnstsw
mov
sbb
icebp
jae
pusha
sbb
or
pop
xchg
or
out
and
sti
inc
outsb
ret
inc
mov
jmp
xchg
sub
mov
mov
cmp
sub
test
lods
dec
jne
call
mov
xchg
mov
int
jle
fidivl
inc
sub
outsb
popa
xlat
lret
xlat
xor
fsubrs
sahf
pop
out
mov
gs
adc
test
pusha
mov
cs
adc
and
ds
fld
cs
loope
cmp
xor
notb
aaa
test
aaa
cmc
inc
sbb
or
out
jns
jg
fsubs
and
add
int3
dec
jo
jmp
ljmp
xor
pop
sbb
stos
flds
lea
or
popf
fwait
std
lea
sahf
nop
cmp
adc
and
sbb
enter
fst
push
repz
mov
dec
push
xchg
add
shll
xchg
pop
xor
inc
cmp
movhps
mov
sbb
fisubs
jg
ret
repnz
cmp
cmc
mov
jmp
push
ds
adc
in
neg
adc
fdiv
iret
push
pop
xor
call
popa
and
ret
cmp
sahf
test
ret
adc
xchg
push
loop
sub
xchg
rol
sub
pop
inc
lods
scas
repnz
ret
xchg
punpckhbw
nop
sub
insl
idiv
mov
popf
out
push
cmp
loopne
jmp
dec
adc
ds
cli
popa
cmp
push
imul
aas
cmp
pop
xchg
fldcw
or
int
pop
sti
ljmp
pop
stos
push
xchg
sbb
adc
mov
xor
aaa
and
pushf
pop
xchg
cmp
popa
je
icebp
cli
sub
xlat
xchg
das
imul
xlat
pop
xchg
push
das
in
loopne
jne
fildll
scas
mov
sbb
xchg
aad
lods
jbe
aad
mov
jmp
leave
sub
add
call
jne
popa
sub
testb
push
ljmp
mov
pop
lcall
iret
ljmp
scas
int
sub
sbb
sbb
and
in
leave
pop
jecxz
test
dec
sbb
cmp
mov
inc
cmp
add
inc
xchg
adc
sarb
cmp
in
mov
cmp
adc
cmc
cmpsb
mov
sub
dec
and
cld
or
and
test
imul
aam
cmp
mov
test
clc
lods
in
jecxz
xor
pop
inc
xchg
xchg
jnp
pop
sarb
jmp
enter
jns,pt
cs
push
std
xor
inc
ret
xor
inc
lods
xchg
outsl
popf
out
mov
dec
das
and
mov
iret
jmp
jns
imul
das
adc
rcll
cmpsb
push
cld
sub
movsb
xchg
aas
cmp
or
dec
fdivrs
call
clc
scas
bound
pushf
cmpsl
cli
jmp
test
add
repnz
sbb
shll
stc
cmp
xorb
push
add
stos
push
arpl
movsb
sbb
ja
insl
and
aas
mov
or
adc
pop
icebp
mov
and
bound
xlat
outsb
cs
jge
pop
scas
mov
scas
mov
jbe
jl
ja
ss
stos
pop
add
cmp
add
inc
fdiv
adc
mov
jl
ret
add
movsb
jge
addb
xor
push
icebp
scas
xchg
popf
push
imul
sub
or
jl
je
mov
int3
jmp
mov
imul
fucomi
add
adc
stc
adc
and
inc
fs
pop
cld
out
dec
mov
adc
pop
cmp
mov
stos
pushf
xchg
test
push
cltd
pop
dec
mov
xor
rol
lret
jne
and
adc
enter
inc
shl
jmp
xlat
pop
test
lea
jne
es
jns
pop
dec
sub
mov
mov
or
insl
mov
scas
add
sub
xor
jmp
or
push
adcl
cmp
sub
jl
cs
jo
int
jge
aam
lea
pop
sarl
shll
push
mov
ja
or
aad
popa
inc
fdivrl
fcmovnb
jle
mov
lahf
pusha
pusha
arpl
arpl
pop
xchg
push
lods
pop
mov
mov
cwtl
xor
lcall
xor
cmp
scas
dec
lcall
ja
dec
daa
mov
stos
in
popf
xchg
sahf
data16
jmp
or
ds
sbb
mov
mov
int3
in
pop
adc
jne
fdivs
clc
xchg
lcall
cmc
sub
repnz
aas
inc
pushf
fdiv
data16
outsb
mov
pop
movsl
aad
mov
lea
adc
cmp
popf
lock
int
pop
daa
pop
inc
adc
jle
mov
jg
xor
xchg
test
and
bound
fldenv
mov
leave
into
inc
repnz
icebp
dec
xchg
pushf
popf
mov
cwtl
ss
mov
mov
loopne
jmp
adc
jbe
mov
mov
clc
jecxz
ja
ss
dec
push
pusha
shlb
xchg
out
push
and
jge
xchg
push
pusha
lahf
js
adc
popa
aad
adc
jp
xchg
cmpsb
shrb
out
out
or
cwtl
sbb
cld
fstps
sub
cmp
ret
loope
jge
or
rclb
xchg
lret
push
pop
or
cwtl
cli
fmul
mov
push
adc
push
lea
sti
mov
jp
imul
and
push
shrl
flds
jmp
fcmovnu
jmp
rcrb
xchg
jg
dec
outsb
dec
ja
sahf
mov
int
sbb
mov
mov
repz
lcall
std
dec
mov
hlt
mov
jae
pop
lcall
lea
mov
out
dec
or
data16
in
cmp
push
sbb
push
fadd
mov
call
or
lcall
ror
cltd
ja
jp
mov
push
sti
in
int
rcrb
imul
inc
pop
jnp
cmp
or
jbe
sbb
push
xor
into
sub
and
push
adc
fs
insl
or
aam
xchg
cli
rorl
fwait
imul
sbb
xchg
test
adc
shrl
push
mov
and
icebp
push
jmp
sbb
or
outsb
cwtl
pop
testb
jnp
add
fwait
push
je
jg
adc
mulps
nop
xchg
call
push
iret
cmpsb
scas
cmp
jmp
es
mov
popa
stc
or
jne
push
jae
ja
jae
mov
hlt
jmp
pushf
lcall
pop
inc
adc
and
sbb
daa
daa
dec
fwait
hlt
add
dec
nop
sub
popf
gs
mov
out
pop
fldt
add
lcall
mov
sbb
into
or
iret
sub
dec
inc
xor
mov
jle
popa
out
xchg
xchg
cmp
mov
addr16
in
lds
cs
pop
jl
lret
jbe
or
lds
push
aad
out
in
push
lods
cld
test
push
mov
mov
mov
xlat
mov
lret
lcall
fdivs
mov
sbb
cmp
pop
xor
sub
xchg
pop
mov
sub
pop
scas
push
mov
rcll
adc
xlat
xchg
adc
mov
mov
test
js
movsb
fsts
into
push
sbb
je
sub
das
xor
jb
or
arpl
xor
push
mov
mov
inc
lds
nop
aas
xor
test
sbb
and
movsb
loope
mov
jo
cmp
out
xor
ss
add
arpl
fs
fcoml
pop
in
jb
pop
sbb
int
fwait
mov
add
sub
pop
ret
xor
je
jbe
ds
pusha
arpl
pop
push
pop
sub
pop
nop
add
adc
pop
xchg
pop
shl
orl
or
mov
mov
push
add
mov
rorb
fadd
add
int3
repnz
sbb
movsl
mov
jns
jno
test
inc
inc
stc
xor
mov
sub
sbb
mov
rcl
dec
int3
jge
clc
in
mov
popa
gs
xchg
ljmp
data16
sbb
icebp
sub
cmp
mov
dec
movswl
mov
inc
scas
xchg
xchg
adc
fisubs
sahf
int3
jo
mov
dec
movsb
xchg
in
adc
cltd
jnp
lret
shlb
xlat
push
add
mov
xchg
gs
popf
je
scas
iret
call
push
das
loop
mov
mov
ja
repnz
out
insl
jge
lahf
sbb
adc
fwait
add
mov
push
sarl
push
cli
nop
in
push
push
insb
aad
add
or
ja
insb
or
in
in
shrb
sbb
xor
jne
mov
adc
inc
adc
lods
jns
bound
shr
jb
aad
mov
cmc
es
test
lds
ret
pop
xchg
pop
xorb
adcb
jne
xor
jne
dec
cmp
or
mov
pusha
loop
mov
test
mov
arpl
jnp
lods
popa
inc
mov
test
loope
jmp
lods
repz
dec
ficoml
mov
aam
fisubrl
xchg
mov
and
mov
scas
mov
or
cs
mov
icebp
rcll
pop
push
inc
dec
popa
mov
cmc
fdivrp
pop
sub
xchg
jne
mov
into
fs
dec
dec
add
fwait
test
in
sbb
icebp
add
adc
mov
or
lea
and
jl
into
jecxz
sbb
cltd
movsl
xchg
aas
sbb
mov
sti
repnz
adc
in
pushf
in
lret
aam
push
jo
jp
sub
push
push
repnz
jge
dec
pushf
pop
lea
xchg
cld
dec
dec
jl
dec
xchg
out
pop
popa
sub
jp
sti
lods
sub
mulb
or
sbb
ljmp
pop
push
dec
test
lock
stos
testb
jne
pop
popf
sbb
sub
mov
ja
fldenv
icebp
lods
lret
mov
cmc
negl
mov
aaa
mov
into
rolb
rcll
sub
xchg
shl
adc
push
push
nop
fadd
sub
sub
xlat
jecxz
out
pushf
rcr
push
adc
xor
sub
lret
aad
out
xchg
cmpsl
mov
and
mov
xchg
repnz
repnz
cld
pop
xchg
jg
loope
scas
es
testb
jno
mov
pop
jl
cmpsb
addr16
push
iret
mov
and
imul
dec
sub
sbb
jle
ret
xor
cmp
ja
or
iretw
and
int
clc
xor
aas
movsb
in
fwait
int3
pop
iret
add
dec
lea
adc
mov
rorb
mov
add
and
add
xor
imul
shlb
xor
inc
out
mov
loopne
dec
outsb
orl
mov
pop
mov
clc
inc
or
ret
aaa
cmp
jns
mov
mov
pop
rol
sbb
mov
cld
out
xor
or
stos
ret
cli
icebp
out
sub
sub
cltd
cmp
loopne
cld
mov
adc
inc
int
xchg
movsl
mov
pop
pusha
pop
xchg
addr16
pop
cld
or
mov
jno
ss
push
mov
ror
psrld
mov
xchg
movsb
xchg
popa
xchg
dec
addr16
mov
ds
push
call
dec
cld
sti
je
fldt
outsl
cmp
arpl
jp
aad
and
push
and
mov
cmc
sub
mov
inc
and
call
out
ja
bound
lock
and
mov
mov
popa
mov
lock
or
xchg
cmpsb
mov
mov
xor
mov
aaa
pop
test
mov
clc
cmpl
mov
inc
sahf
loope
inc
cmp
testl
aad
inc
ret
test
dec
test
mov
sbb
roll
adc
test
icebp
out
jae
sub
mov
or
pusha
add
test
rol
call
outsb
out
mov
fsubr
cmp
lcall
imul
jbe
mov
repz
nop
pop
jle
adc
std
push
pop
shl
xor
add
cmp
mov
decb
testl
xor
fucom
aad
punpckhwd
xchg
das
push
lea
int3
cmp
icebp
das
dec
dec
sti
les
sbb
movsb
dec
add
mov
inc
push
or
and
fistpll
aad
xchg
repz
int
jno
mov
leave
test
jnp
sahf
stos
aad
iret
pop
push
aas
cld
pop
les
or
inc
mov
push
in
jb
push
cmpsl
push
insl
dec
insl
fadd
js
inc
lea
out
or
out
fistps
jno
int
jmp
mov
lret
repz
add
mov
xor
add
sbb
push
psrlw
sbb
loopne
mov
push
pushf
jmp
lods
aas
sub
xchg
scas
pop
dec
xchg
push
jecxz
insl
fcoml
jae
lea
push
fmuls
inc
push
out
dec
call
mov
sahf
add
lds
adc
and
mov
mov
mov
jae
inc
fsubp
pop
dec
add
lret
call
mov
push
cmp
adc
cmp
or
push
mov
fistl
lret
jne
mov
arpl
gs
negl
popa
adc
ret
fs
lds
scas
shlb
mov
rcll
jmp
cmp
cmp
jp
rcrb
sahf
cmp
shlb
pop
mov
pop
dec
leave
dec
jns
repnz
mov
addb
scas
mov
push
fsubr
pop
pop
mov
dec
cmpsl
jp
popf
push
fbstp
imul
fldl
lahf
push
xchg
cltd
and
adc
mov
scas
in
sub
aad
into
ljmp
inc
int
stos
mov
aaa
xlat
addl
or
sahf
mov
testl
fsubrl
mov
pushf
cmp
hlt
sub
stc
insb
paddsw
adc
jle
out
ficoml
lahf
xchg
jp
incl
mov
mov
cmp
movsl
xor
push
popf
jno
mov
cmp
fisubs
arpl
inc
cmc
leave
enter
psrlq
xlat
outsb
jb
mov
cli
push
push
aaa
inc
fdivl
pop
icebp
dec
popa
mov
jnp
mov
push
mov
push
in
xor
xor
jns
out
mov
jg
insl
sub
inc
cmp
push
cmp
push
sub
ret
repz
hlt
jns
push
insb
xchg
fsubl
movsl
push
cmpsl
inc
dec
jg
out
jecxz
cmpsb
loope
shlb
nop
addl
mov
lret
adc
push
or
pop
xor
into
jae
mov
inc
and
xor
mov
sti
jnp
sbb
into
lea
add
sti
cmp
not
or
enter
jo
pop
mov
mov
jle
lods
jo
ljmp
xchg
loope
ja
cs
loope
push
sbb
xor
loope
adc
sub
fwait
adc
cmp
sub
add
jl
push
in
loopne
and
mov
add
dec
mov
pusha
lcall
xchg
int3
sbb
pusha
xchg
adc
fcmovne
push
into
outsl
arpl
cvtdq2ps
pop
int3
and
and
lret
mov
cmp
sarl
ja
cltd
sub
lea
test
ret
mov
imul
jno
aaa
push
roll
ret
or
or
pop
je
xchg
dec
cmc
cmp
pusha
mov
mov
add
in
sahf
test
shll
jge
scas
sub
fnstcw
mov
stos
cs
inc
xor
mov
ror
das
mov
sahf
ret
dec
imul
dec
cmc
out
jg
icebp
fcomps
mov
sub
into
sbb
adc
inc
test
lods
in
jb
cmc
dec
xor
rorb
in
andl
fsubrl
push
lret
adc
push
aas
dec
test
jbe
fcmovnb
dec
daa
adc
cmp
mov
insb
test
mov
mov
ljmp
xchg
repz
arpl
mov
movsb
and
add
movb
in
in
jno
inc
repz
pop
aam
fbld
bsr
xorl
in
notb
xchg
xor
sbb
pop
popf
int3
pop
cmc
push
xchg
fucomip
fsubl
push
xor
test
in
mov
sub
xor
nop
adc
mov
push
xchg
xchg
sub
pop
mov
mov
lods
in
data16
movsl
aam
mov
test
xor
cmp
jne
stos
mov
inc
inc
hlt
push
xchg
add
lock
mov
leave
aaa
or
mov
leave
je
adc
jg
aam
sub
jmp
inc
mov
insl
loopne
dec
sbb
push
jle
jmp
xlat
and
jp
popf
stc
sbbb
ret
aad
pop
mov
jno
rol
sarb
add
pop
popf
xchg
into
xor
lret
arpl
loop
nop
mov
sub
js
cmp
int
push
in
aad
xchg
daa
inc
xchg
adc
and
arpl
lea
cmp
xchg
lock
adc
and
jne
jle
adc
je
or
jns
sar
and
mov
jle
jge
mov
pop
mov
or
popf
call
dec
addr16
jle
jno
lds
mov
xchg
jmp
push
push
mov
fs
imul
fistpll
sub
add
jg
rorl
aad
mov
adc
fsts
insl
push
popa
adc
sub
xchg
mov
push
mov
inc
jo
paddsw
push
push
fsubs
xor
in
out
xchg
mov
add
insb
daa
addr16
mov
lahf
clc
dec
push
les
xor
js
jp
pusha
xor
out
xchg
and
addr16
push
or
jb
xchg
push
sbb
es
lods
cwtl
sub
lret
out
popf
divb
mov
jae
fadds
in
es
imul
mov
jg
adc
stos
pop
and
sarb
xor
inc
mov
pop
and
sbb
adc
or
inc
add
outsb
jg
xor
sbb
dec
imul
pushf
xchg
out
out
mov
cs
push
cmp
mov
cli
test
pop
mov
add
sub
mov
add
jp
flds
imul
in
xor
movsb
fisubs
das
jne
xor
das
mov
pop
outsb
xchg
imul
gs
in
mov
and
xlat
jmp
in
xchg
jmp
cmp
shll
ljmp
ljmp
arpl
imul
paddusb
mov
pop
sub
jns
call
sub
cmp
xchg
xor
sub
sbb
sub
test
xor
lret
es
jno
jl
xlat
addl
into
mov
sub
adc
adc
adc
inc
add
dec
loopne
lcall
pop
loope
addr16
lods
mov
mov
fwait
lea
mov
adc
ror
dec
rorb
out
imul
jecxz
lods
mov
movsb
mov
cmpsb
fdivrl
add
lcall
jb
push
pop
aam
in
or
mov
leave
dec
int
mov
dec
pusha
mov
loope
outsb
decl
or
mov
ficomps
xchg
add
das
sar
filds
lahf
jmp
adc
loopne
movsl
pop
jp
sti
push
rol
adc
subl
push
cli
movb
mov
fstps
inc
cltd
lret
outsl
pop
xor
xchg
mov
xchg
mov
lds
and
fsubrs
lret
dec
lds
stos
or
dec
mov
mov
adc
js
stos
inc
add
lock
das
fstps
sub
mov
sbb
mov
jae
jno
add
and
push
add
or
ret
cltd
mov
sub
push
cmp
arpl
imul
mov
test
jg
jb
mov
cmc
lods
mov
push
mov
rcll
aaa
fstpl
mov
mov
lods
xor
dec
stc
mov
sbb
shl
jno
or
sbb
xrelease
lahf
xchg
inc
and
adc
sbb
out
cmp
data16
or
push
hlt
mov
mov
stc
stc
hlt
mov
js
mov
xchg
cmp
dec
xlat
call
mov
mov
sbbl
jp
sbb
test
and
mov
jg
sbb
or
dec
cld
or
lcall
ficoms
aad
pop
aaa
std
out
pop
jle
rorb
cmp
dec
adc
pop
xor
or
push
aas
addl
adc
mov
adc
sub
push
nop
daa
sbb
icebp
sub
orb
sub
mov
jecxz
jnp
jecxz
sbb
cmp
lret
fcomps
xchg
dec
icebp
add
scas
fs
push
jne
jns
dec
aam
dec
dec
outsl
loope
gs
out
clc
or
xchg
sbb
jp
or
mov
lcall
xchg
lahf
lods
cmc
push
addb
cmpsb
stos
inc
push
scas
or
sbb
cmpsl
mov
mov
mov
xor
fwait
lret
and
fsubrl
xchg
in
test
in
daa
mov
mov
push
data16
repnz
pop
xchg
mov
out
das
cmpsl
or
fnstsw
call
inc
inc
addr16
lods
mov
lea
cmp
dec
mov
mov
add
in
fiaddl
mov
pavgb
sti
ret
ds
out
push
xchg
sbb
xor
test
cwtl
pop
insl
sbb
lahf
inc
imul
ja
or
or
lods
decl
stos
dec
gs
adc
fwait
jnp
dec
nop
cli
pop
stos
inc
or
sub
inc
cmpb
adc
imul
ds
mov
in
clc
outsb
sbb
in
call
pop
adc
or
sub
lods
push
in
add
dec
rcrl
dec
sub
xor
rcl
mov
out
inc
inc
adc
jne
jecxz
in
pop
mov
xor
lock
daa
out
out
and
das
or
jle
xchg
dec
stc
mov
int
shlb
jne
les
jle
dec
ror
int
repnz
push
pushf
sti
jne
mov
adc
mov
push
mov
mov
inc
xlat
filds
push
loopne
mov
insl
hlt
mov
jae
sub
cltd
adcl
je
cvtps2pd
push
rolb
push
xor
sub
je
pop
xchg
cld
pop
cmpsl
hlt
les
add
in
xchg
add
xor
movsl
mov
push
jmp
lock
out
mov
popa
rclb
scas
clc
mov
jge
mov
dec
lea
shlb
pop
push
sbb
js
pop
mov
out
fldt
xchg
jo
lods
ja
mov
push
push
adc
adc
arpl
stos
stos
cmp
xchg
or
out
jbe
sti
pop
iret
negb
inc
movsl
pop
mov
inc
xor
mov
std
aam
in
lods
push
xchg
jb
mov
mov
mov
out
cmp
outsl
mov
jne
sub
je
jmp
cmp
mov
jmp
xor
std
sbb
pop
xchg
mov
xor
mov
adc
dec
aaa
loopne
orb
mov
addr16
nop
cmp
or
and
pop
aam
mov
jp
scas
je
mov
sub
push
std
enter
loopne
push
stos
loopne
pop
push
inc
ja
jle
sub
das
movsb
lods
loopne
push
jp
scas
aaa
arpl
in
iret
sbb
cmp
nop
mov
scas
sub
js
xlat
aaa
dec
cmp
ret
sub
push
xchg
lods
loopne
mov
mov
jb
es
xchg
fdivs
mov
rolb
or
outsb
int3
push
dec
stos
fadd
inc
shl
inc
mov
xlat
inc
cmp
inc
sbb
cmp
das
rorb
scas
lock
dec
jp
inc
jl
das
xor
faddp
add
repnz
pop
daa
sbb
and
mov
stos
dec
les
and
mov
pusha
out
pop
in
cmp
test
mov
xor
rcll
xor
loop
outsl
xchg
rolb
dec
call
xor
hlt
bound
imul
or
out
fdivr
cmp
add
push
decb
sbbl
xor
sarl
or
shl
or
and
shrb
push
sbb
inc
xchg
cmp
scas
imul
outsl
and
dec
adc
jae
sub
insb
out
scas
aad
mov
or
test
lds
pop
push
pop
ljmp
adc
or
nop
xor
inc
jnp
testl
stos
jne
jecxz
cmpsl
hlt
and
or
mov
out
rcl
add
mov
xchg
sbb
loopne
insb
in
hlt
sub
sub
fwait
adc
jge
sub
cmp
pop
mov
adc
ja
fnstcw
lods
in
nop
ret
pop
lcall
cmc
inc
jg
xor
mov
fwait
push
stos
adc
lds
mov
sbb
dec
test
imull
ret
inc
cmp
and
and
jg
xor
stos
int3
test
lods
test
jecxz
fcomp
push
loopne
lea
xchg
orb
in
sbb
push
stos
mov
fbld
adc
push
addl
es
mov
or
lock
repz
loopne
lods
pop
mov
cmp
xchg
xor
cmp
add
push
fdivs
mov
iret
divl
mov
pop
xor
fs
movsb
adc
or
mov
jp
ss
xor
fcmovbe
inc
ret
mov
shll
cltd
out
sub
push
sub
mov
add
cld
mov
inc
ljmp
push
ret
dec
gs
pop
test
in
xor
push
outsl
pop
cmp
adc
pop
and
sbbl
add
ds
aam
add
enter
shrb
mov
orb
es
mov
sbb
sbb
ds
rcr
xor
pop
test
jae
test
lods
scas
add
cmpsb
add
sahf
cmp
out
push
add
outsb
sub
pushf
in
xor
xchg
add
cmpsb
mov
fimull
adc
or
jae
scas
movsb
lea
cmp
scas
dec
sub
loop
add
imul
sub
daa
scas
in
jmp
repz
mov
or
and
int3
rcrb
jne
or
fs
cmp
push
mov
push
fwait
dec
xchg
inc
popa
pop
mov
mov
fsubrs
mov
loop
fildl
test
inc
ret
add
dec
sbb
dec
pusha
mov
sub
push
cmp
nop
xchg
pop
mov
or
sbb
scas
fs
xchg
mov
jge
pop
mov
push
push
pop
imul
push
sub
cmp
fwait
lret
pop
pop
mov
in
adc
repnz
pop
lds
mov
nop
leave
xor
mov
jge
sub
test
pop
xchg
sbb
pusha
inc
pop
xlat
lock
pushf
out
shrl
add
xchg
leave
fadds
xor
std
sbb
dec
cmp
inc
lcall
pushf
data16
or
popf
jnp
daa
xchg
int
fldt
addr16
xor
adc
sub
push
adc
mov
cmp
fiaddl
movb
mov
xorb
cs
xchg
inc
lds
xchg
mov
lea
xchg
push
add
mov
pusha
insb
les
filds
out
inc
cmp
mov
movsb
cs
sti
adc
pop
daa
jp
cli
lods
push
or
push
pop
push
test
popf
xlat
inc
mov
add
dec
fnstcw
rcll
add
in
pop
int
lcall
int3
adc
imul
clc
das
lret
adc
mov
and
outsl
xchg
hlt
sub
mov
or
cmp
inc
fsubp
hlt
pop
jns
adc
inc
ss
cli
and
inc
jle,pn
imulb
mov
clc
adc
cmc
gs
push
movb
mov
cwtl
dec
jmp
adc
jp
scas
adc
stc
inc
and
loop
and
pop
nop
xor
dec
push
mov
mov
and
mov
cli
fldcw
or
push
mov
sbb
add
sbb
iret
sbb
xor
cmp
jg
lods
xchg
shlb
or
nop
ret
mov
fs
pop
inc
and
xor
mov
push
icebp
inc
jmp
test
adc
repz
jae
out
mov
push
insb
int3
data16
jle
call
fldl
pushf
cmc
ficoml
sbb
shrl
aas
add
cli
pop
dec
in
inc
xchg
bound
and
jle
out
mov
out
daa
daa
pop
stos
inc
js
js
dec
xor
das
push
mov
jnp
or
movl
bound
or
popf
stos
mov
and
xlat
pop
xor
movsl
fisubl
adcl
xlat
mov
jmp
in
adcb
add
or
xchg
pop
inc
lods
mov
imul
pop
adc
jp
jg
arpl
dec
loop
xor
cmp
xchg
iret
jge
fists
rclb
jecxz
in
test
sub
adc
orb
adc
cmp
mov
movsb
fistpl
mov
xor
xor
mov
xchg
out
or
lret
adc
cs
js
lods
xor
js
mov
mov
aad
or
xorl
mov
and
mov
xchg
cwtl
or
js
rclb
mov
dec
das
test
idivl
xor
sbb
cmp
pop
dec
pusha
xor
lods
data16
dec
aaa
movsl
out
movsl
aas
in
out
pop
cmp
cmp
js
mov
leave
dec
fwait
insb
repz
stos
jmp
jg
push
inc
push
push
and
pop
push
mov
add
mov
push
ret
or
icebp
mov
cs
cmp
xlat
sbb
fsubs
std
jp
cmovs
stos
insb
mov
or
hlt
cmp
mov
scas
xchg
mov
cmpsb
add
imul
lret
or
sahf
dec
push
pop
mov
jecxz
and
fwait
lea
popf
xchg
out
sbb
push
rcr
aam
mov
dec
cltd
jl
or
stc
push
push
mov
ss
push
js
les
add
xchg
cld
xor
jmp
add
mov
mov
inc
mov
mov
sub
pop
aas
xchg
jle
adc
xor
repz
push
stos
iret
test
dec
lods
in
adc
jne
imul
push
lret
in
xlat
mov
push
aad
iret
leave
and
outsb
pop
sub
ljmp
cmpsb
mov
sub
ljmp
inc
pop
mov
mov
insl
add
pusha
and
shll
push
dec
incb
movsl
data16
fcomip
push
aam
jbe
pop
inc
fs
aad
js
add
test
mov
pop
add
jne
pop
test
xlat
fmuls
daa
repnz
jmp
cmp
xor
lea
jmp
push
mov
cmpsl
inc
imul
push
andb
or
cli
add
mulps
fadd
les
pop
xchg
ds
jmp
mov
jl
jmp
jb
outsb
scas
into
icebp
pop
daa
out
mov
fwait
lea
idivl
idiv
mov
cmp
jb
popa
jae
nop
scas
in
sbbl
jmp
adc
popa
out
mov
outsb
int3
jl
mov
stc
jl
sub
rcrl
mov
cmp
nop
jne
test
idiv
or
pop
imul
xlat
mov
cmpsl
push
jmp
mov
mov
test
test
enter
mov
or
jb
loop
andb
je
dec
mov
nop
imul
sahf
and
jnp
xchg
lods
iret
repz
xchg
add
mov
jmp
adc
stos
iret
mov
pop
mov
daa
ffreep
and
int3
or
js
xor
cs
add
mov
pushf
icebp
imul
lcall
push
stc
cmp
xor
and
mov
adc
dec
daa
fcoms
jp
out
mov
and
mov
into
sbb
xchg
pop
xor
scas
ljmp
or
fisubrl
dec
nop
sbb
push
aaa
jle
and
jle
fidivrs
sub
dec
push
test
add
pop
or
inc
lahf
mov
test
insb
in
cs
mov
mov
les
cmp
inc
inc
adc
sahf
xchg
movsb
je
dec
out
cmpsb
lahf
sbb
xchg
in
adc
pop
iret
not
lds
jmp
into
pop
iret
cli
jle
xchg
pop
cli
mov
and
jp
cli
aas
dec
out
add
and
fnstcw
cmp
jp
xor
jns
or
ja
jo
cmp
test
enter
aad
or
add
ds
cmp
dec
lock
mov
pop
cmp
jecxz
inc
xchg
scas
jmp
mov
adc
push
or
test
xor
adc
aas
cmp
aad
loope
nop
loope
cmp
jno
test
mov
jae
imul
add
or
gs
xchg
push
pop
xchg
rclb
lcall
jp
push
cmc
fs
xchg
in
ja
inc
jnp
sti
iret
insb
das
out
fnstenv
sub
sbb
sbb
push
mov
int
cmc
xchg
and
lock
mov
pop
jg
ja
movhps
in
mov
sbb
inc
bound
fldcw
aam
into
into
call
mov
bound
dec
pop
mov
jo
orb
pop
or
shlb
or
xor
movsl
push
fcmovnu
push
out
mov
mov
mov
sbb
pop
xor
push
and
aas
pop
lret
ret
add
int
push
ss
ret
mov
mov
out
mov
mov
nop
sub
into
xchg
lret
testl
out
mov
xor
data16
lock
mov
imul
and
jns
mov
adc
mov
inc
jecxz
and
adc
dec
sbb
inc
push
ret
stc
jnp
sbb
and
sbb
movsl
mov
mov
push
cmp
mov
jae
mov
movsl
in
in
lds
xor
lahf
testl
push
out
xchg
dec
mov
add
in
mov
mov
sbb
aaa
mov
std
insl
call
sbbb
imul
xchg
lret
dec
jg
test
int3
mov
faddp
cmp
pushf
je
jns
cmc
leave
jae
xor
dec
shlb
mov
loopne
sub
mov
test
notl
xchg
xchg
mov
jne
fnstsw
lahf
jle
inc
lret
jp
inc
sbb
loope
mov
cmpsl
or
fidivs
setl
jl
dec
push
jno,pt
jae
imul
or
and
mov
roll
stos
aas
rclb
push
xor
cmp
xor
lret
insl
xchg
aad
mov
mov
movsb
shrb
in
addb
fimull
dec
pop
les
xlat
mov
popa
xchg
jo
sub
push
push
sbb
pmulhw
jmp
add
sbb
xor
repnz
mov
adc
ljmp
inc
or
bound
daa
jns
sub
dec
fldcw
push
icebp
rclb
lcall
cmp
stc
insb
sub
sub
in
mov
xorl
fsubrs
xchg
mov
jle
popf
mov
pushaw
dec
xchg
cmp
push
mov
stos
leave
add
lretw
mov
cmp
pop
jbe
iret
sarb
into
inc
in
repz
roll
jbe
sbb
adc
sub
xchg
mov
hlt
xor
ret
scas
mov
movsb
and
mov
mov
ds
stc
push
sbb
test
clc
ljmp
ret
and
sahf
loope
mov
popa
roll
out
push
adc
push
sbb
cmc
cwtl
aad
jb
mov
shl
cld
or
pop
fisubrl
adc
imull
inc
fwait
les
or
push
gs
fsts
jae
shlb
test
fsubs
cwtl
push
cmp
xor
pop
leave
cmpsb
mov
or
aad
mov
pop
push
jb
fadds
adc
mov
fwait
and
jae
sbb
decl
rorb
sbb
sub
inc
stos
leave
and
pop
push
lods
cld
or
sbb
and
stc
and
in
pop
or
mov
mov
dec
insb
xor
xchg
jge
outsb
dec
mov
stos
lret
sti
adcl
push
test
or
push
dec
fwait
leave
popa
es
ja
add
xchg
sbb
cmp
nop
hlt
stos
sub
fimuls
js
fwait
push
fcoms
popf
mov
ljmp
jb
pop
sub
test
repz
fucom
sub
je
mov
push
pop
pop
xor
in
adc
arpl
nop
push
icebp
out
push
and
xchg
xor
outsl
mov
mov
arpl
jmp
mov
out
dec
loop
iret
sub
mov
ror
jge
xor
gs
push
mov
in
out
addr16
repnz
cmpsl
pop
pop
dec
test
xorb
push
out
push
inc
and
fs
lods
fnstsw
inc
xchg
movsl
sbb
pop
and
cmpsb
and
sbb
dec
mov
xlat
fldcw
xor
mov
movsb
adc
daa
push
int
fs
adc
jg
mov
dec
rorb
adc
xlat
cmp
push
push
test
jl
dec
add
aad
xchg
add
test
movsb
insb
loope
cld
arpl
fstps
mov
mov
mov
aas
repnz
dec
hlt
xor
rolb
sub
add
sahf
icebp
outsl
lret
mov
jne
sbb
adc
adc
jo
xchg
ss
shl
sbbb
push
out
push
mov
mov
xor
adc
add
jle
or
mov
loop
jge
jb
inc
addr16
jge
mov
or
movsb
test
xchg
xor
lcall
push
sbb
and
mov
in
sbb
movntps
xchg
dec
mov
jno
enter
call
dec
loope
ret
inc
in
enter
rclb
or
enter
jae
rcl
jge
pop
add
std
pop
mov
dec
call
push
and
insb
pop
cmp
mov
cmp
lods
push
mov
xchg
xchg
shll
int
dec
dec
mov
jl
mov
adc
cmp
movsb
test
lahf
lock
loopne
adc
enter
hlt
mov
jns
mov
adcl
shrl
rcrb
fsubs
push
xchg
in
add
popf
mov
jge
rorb
jle
jl
mov
and
ret
jmp
adc
push
and
push
jmp
decl
add
mov
cmpsl
inc
jge
fcomp
cmc
fs
pop
pop
ljmp
cmp
jb
cld
insl
jno
les
or
negl
movsl
cmp
flds
sbb
sub
xchg
inc
jecxz
pop
inc
pusha
mov
push
lods
add
insb
loope
inc
sub
adc
dec
cmp
sub
fisttps
out
fdivl
xchg
inc
mov
xor
ret
cmp
daa
loope
inc
pop
sbb
inc
jb
inc
bound
popf
shrb
sbb
xchg
jno
and
jecxz
or
inc
ss
sahf
adc
out
add
jle
in
sti
dec
repnz
lods
adc
sarl
mov
loope
aas
xor
jb
stos
and
dec
out
imul
inc
cwtl
add
and
in
outsb
add
outsb
add
xchg
jecxz
int3
leave
aaa
leave
ret
mov
xor
or
mov
mov
stos
lcall
inc
adc
ja
xchg
push
stos
mov
pop
mov
pushf
fwait
xchg
ljmp
pushf
inc
ds
add
mov
mov
xchg
or
loopne
int3
and
adc
sbb
imul
adc
repz
pop
aaa
dec
inc
add
xchg
jno
inc
add
ss
dec
push
mov
mov
mov
inc
in
mov
cld
pop
ret
fs
mov
pop
ret
fidivrs
mov
insl
add
xlat
sbb
les
push
jne
xor
testl
ljmp
insl
mov
scas
popf
call
mov
test
and
sbb
lahf
ss
or
jmp
jbe
mov
je
shlb
stc
sub
shll
xor
not
rcrb
aad
mov
cmp
inc
inc
sbb
ljmp
cmc
in
cwtl
flds
fstps
mov
insl
ret
sbb
pop
mov
xchg
in
stos
int3
adc
test
inc
lret
lcall
outsb
pop
rorb
and
ja
and
aas
lods
mov
shll
shrb
xor
loopne
inc
test
mov
xchg
insb
dec
and
test
inc
xchg
ret
jle
lods
push
xchg
or
xlat
daa
out
sbb
xor
rolb
sub
sti
pop
pop
jl
cmp
adc
sar
push
and
mov
xlat
ret
dec
filds
dec
jmp
mov
mov
popa
data16
pop
mov
dec
mov
fisttpl
jae
xchg
fsts
call
pop
icebp
inc
mov
jnp
loop
jnp
mov
adc
push
xchg
xchg
add
shll
inc
leave
sti
cld
xchg
push
dec
jmp
das
jnp
data16
add
rorb
jne
mov
xchg
addb
mov
stos
call
sbb
pop
loop
shll
mov
pop
ret
dec
movl
call
mov
cmpsb
jnp
xrelease
or
or
mov
sub
ret
mov
xchg
lods
lods
mov
jg
pop
lsl
dec
cmc
sbb
jmp
jecxz
mov
sbb
xlat
cld
adc
sub
pop
ret
add
shll
test
or
clc
clc
xor
insl
subl
mov
cmpb
mov
or
mov
mov
mov
jne
jnp
and
mov
inc
jo
mov
cmpb
adc
call
jne
rcr
dec
cmp
add
cmp
jg
into
scas
repnz
addr16
insb
popa
push
das
mov
dec
shl
aaa
mov
bound
std
xor
adc
mov
add
mov
pop
cmp
xor
lret
mov
fistps
adc
push
xor
and
dec
adc
dec
imul
sti
ljmp
add
and
pop
jl
call
hlt
test
xlat
mov
dec
mov
incl
pop
inc
fsts
cmp
dec
pop
aam
xor
adc
mov
call
sbb
dec
pop
adc
popa
jl
ret
test
ja
push
outsb
push
in
sub
pop
fsubrl
shld
fisttpl
mov
andl
rcrb
sub
jae
mov
pop
inc
add
sbb
fwait
int3
in
fisubrs
gs
dec
pop
adc
movl
xor
push
push
mov
icebp
push
add
xchg
pop
inc
xlat
shlb
mov
insb
cmp
lcall
add
jnp
adc
mov
addr16
mov
dec
pop
dec
xchg
fisubrl
ror
mov
jmp
mov
mov
and
ror
mov
int
hlt
pop
xchg
push
sub
in
mov
push
xchg
pusha
mov
cli
fcoml
cmp
mov
rolb
mov
aaa
sbb
mov
push
inc
jo
jae
mov
and
leave
clc
inc
pop
cli
xlat
push
adc
scas
cwtl
sub
stc
inc
loop
les
out
loope
jns
test
push
adc
mov
scas
push
inc
cli
insl
sbb
iret
nop
xchg
xchg
xor
int3
mov
cld
rcll
sub
cmp
je
or
sti
pushf
call
xorb
add
popf
inc
cwtl
loope
data16
add
add
push
pop
js
xor
pop
mov
or
outsl
or
cmp
push
nop
lock
sbb
lcall
or
pop
mov
mov
cltd
pushl
fs
and
adc
out
mov
fildll
sub
jno
mov
xchg
mov
stos
lcall
xlat
sbb
pop
add
leave
movl
sub
movsb
xchg
push
sbb
pop
adc
idivl
mov
push
and
push
dec
fisttpll
dec
rorb
ret
mov
das
test
pop
cmp
cld
cmp
or
push
data16
testl
cmp
xchg
lea
mov
inc
cwtl
repz
push
cmp
lock
or
repnz
xchg
push
add
mov
repnz
les
and
lret
pop
cmp
cmp
mov
dec
pushf
xor
mov
cs
in
inc
mov
xor
sub
loopne
mov
push
rol
xor
cmp
jb
fstpl
mov
or
jnp
jp
enter
fstp
shlb
scas
adcb
mov
mov
add
icebp
xor
adc
sub
or
stos
jnp
add
fldl
push
aam
insb
mov
aas
jno
rcrb
or
cmp
fmulp
add
ss
aam
lock
movsb
idiv
adc
loop
xchg
inc
xor
adc
jb
pop
push
adc
cmp
lahf
pop
inc
hlt
sub
leave
xchg
int3
lret
jo
cmp
xchg
and
rol
into
mov
push
rorb
movsb
les
push
aaa
xchg
addr16
lods
push
mov
or
int3
mov
mov
mov
inc
js
movsl
clc
xor
lods
mov
jp
popa
pop
les
lods
mov
mov
lea
aaa
in
xor
loopne
scas
push
shlb
in
aaa
mov
repnz
popf
and
frstor
pop
cmp
int3
mov
inc
push
test
ljmp
mov
ficoml
sbb
xchg
jbe
or
add
lods
ror
jp
dec
loope
push
inc
repz
jae
or
in
outsl
cli
xchg
popa
mov
in
mov
inc
je
andl
adc
jmp
imul
pop
and
mov
fnstenv
push
jmp
fnstenv
jecxz
pop
aad
in
test
cld
imul
jmp
iret
imul
out
subb
or
cltd
sbb
push
mov
mov
clc
subl
lds
inc
pop
pushf
dec
sub
sti
pop
je
dec
cmpsl
mov
cmpsl
push
std
xchg
fwait
cmc
jns
jb
addr16
imul
lods
push
fdivp
ljmp
lds
inc
push
push
pop
cmpsl
xchg
xchg
dec
add
sub
pop
scas
xchg
aad
or
xchg
xchg
sbb
inc
pop
push
test
cwtl
imul
and
xor
inc
push
ret
pop
ljmp
xchg
cmp
push
xchg
test
imul
mov
shl
xchg
aaa
pop
cmp
das
xchg
aas
inc
push
dec
jb
add
sub
cmp
push
fisubrs
loopne
jbe
cmp
fcmovu
dec
cltd
xchg
add
adc
leave
les
jmp
nop
add
xor
fxch
out
rcl
jb
pusha
inc
mov
sub
mov
push
mov
mov
inc
mov
adc
or
xchg
or
in
lock
pop
idivb
ja
push
xor
mov
push
lods
mul
insb
divl
adc
mov
jnp
mov
xorb
lock
push
mov
cwtl
inc
mov
rolb
scas
adc
inc
dec
sahf
adc
inc
inc
inc
mov
les
stc
int
lods
aas
push
add
sub
ret
int3
pop
pushf
movsb
mov
scas
mulb
or
adc
push
imul
mov
push
sbb
ret
push
mov
lea
dec
or
pop
xlat
lea
cmp
xor
cmp
test
aam
xchg
imul
cmc
loope
notl
ret
push
stos
and
adc
rclb
test
daa
inc
in
jne
cmpsb
mov
cmpsb
pusha
pop
loop
and
mov
test
jno
aad
fs
sbb
pop
dec
inc
push
pusha
or
stos
xchg
inc
das
mov
stos
push
mov
xchg
cmp
mov
int3
push
add
jbe
shl
mov
js
mov
fcomi
sub
lock
mov
in
jmp
arpl
pop
fistpl
test
dec
pusha
push
push
int
stc
xor
xor
mov
cmpsb
jecxz
inc
xlat
movsl
jg
adc
rol
cmp
stos
cld
sbb
sbb
nop
cld
dec
add
sbb
mov
test
pop
pop
gs
movl
out
lods
adc
pop
xor
test
mov
int
in
xchg
lahf
jne
adc
movl
orb
add
gs
stos
popa
std
add
je
addl
jge
inc
xchg
xor
fcompl
in
lret
aam
out
jno
sbb
cld
inc
inc
stos
push
mov
gs
rcrb
cli
movsl
sub
add
or
dec
in
xlat
mov
clc
shlb
mov
jno
fists
mov
sub
sti
mov
out
dec
test
arpl
ja
std
scas
xchg
mov
xor
add
aaa
imul
dec
jne
loop
mov
mov
and
add
sbb
jmp
push
mov
stc
stos
or
sub
jno
sbb
dec
mov
dec
cwtl
pop
rcrl
dec
lret
inc
jb
lods
fwait
mov
push
sti
or
mov
dec
aas
scas
lock
call
pushf
mov
sbb
shl
mov
inc
xchg
mov
pop
leave
outsb
lock
rcr
repnz
out
sub
into
mov
lret
fld
in
mov
pop
jns
sub
and
imul
nop
xor
jne
test
ret
mov
mov
mov
mov
jecxz
movsb
mov
push
call
cmp
or
pop
cmp
pop
int3
xor
fstps
call
cmpsb
mov
insb
pop
je
pop
fadds
and
push
outsl
add
dec
add
out
lcall
imul
mov
ljmp
and
mov
pop
aaa
pusha
lret
push
xchg
mov
mov
pop
je
fisubs
loope
and
enter
or
xor
push
loope
mov
pop
pop
xor
int
sub
mov
in
xchg
inc
or
fucomip
test
add
adc
jp
std
adc
fbld
or
js
push
shl
pop
xchg
adc
cmpsb
in
xchg
push
adc
jns
rcrb
subl
lahf
lods
loope
sahf
xor
xorb
jns
cmp
rcrb
mov
or
push
inc
imul
xchg
push
xchg
ljmp
out
cmp
in
fnsave
sub
mov
dec
mov
xchg
stos
fucomp
rcpps
inc
lcall
sbb
lds
fnstsw
push
mov
cld
mov
sbb
popf
xchg
sub
outsl
mov
adc
add
mov
xor
and
jecxz
xchg
popa
mov
lods
sbb
sbb
sub
xchg
insl
mov
hlt
xor
mov
out
imul
subb
jge
fildl
dec
clc
std
out
dec
outsl
pop
xor
inc
sahf
int
inc
push
cmp
sbb
popf
faddl
call
mov
mov
push
int3
fsub
xchg
inc
int3
pop
mov
and
dec
mov
or
jnp
loope
stos
pop
fs
add
test
jle
push
iret
sub
popf
and
int
test
aas
ret
cwtl
das
test
outsb
fwait
jge
push
cmp
mov
sub
outsb
jo
mov
push
mov
add
jg
fwait
xor
sbb
ret
cmp
cld
jo
inc
push
sub
scas
ret
xor
inc
aaa
xor
jmp
popf
inc
or
sub
cmp
ss
stc
jb
inc
mov
aam
pusha
shlb
mov
jbe
sbb
mov
mov
sti
sti
andb
add
stc
xchg
data16
or
outsb
sub
cmp
test
xor
jmp
and
sub
xorb
add
lret
dec
popf
bound
or
mulps
fidivrs
xor
aas
dec
mov
add
push
fstl
loope
dec
jbe
jnp
ror
fwait
jg
inc
repnz
mov
std
js
jae
je
push
mov
or
mov
lds
sub
pop
test
aad
mov
mov
scas
cli
inc
cmpsl
dec
imul
popa
adc
jg
push
addr16
pushf
in
in
or
inc
sub
add
mov
fcmovnb
dec
dec
fwait
int3
pop
leave
ret
fcmovbe
scas
jae
ds
clc
adc
xchg
lea
push
lret
add
loopne
or
scas
sub
inc
mov
xor
jmp
leave
cmp
pop
mov
popl
mov
or
loope
mov
xor
bound
pop
lock
inc
lock
rcll
shl
sub
mov
xor
repnz
gs
sub
out
pop
stos
arpl
xor
jns
addr16
popa
cmc
and
imul
fiaddl
lea
mov
sub
addb
inc
pop
and
sbb
mov
icebp
pop
subb
mov
mov
orb
orb
or
divb
pop
jge
sbb
lsl
data16
dec
inc
push
int
test
mov
imul
aam
sbb
add
jo
inc
out
or
lret
jge
popf
out
inc
hlt
adc
cmp
mov
or
mov
dec
dec
push
incb
int
jl
icebp
xchg
into
es
aam
mov
jl
in
or
ljmp
adcl
shlb
scas
xchg
sarb
scas
outsb
xchg
mov
xchg
inc
adc
roll
xchg
loop
out
jl
pop
xchg
xchg
push
cs
xchg
mov
adc
jne
dec
mov
jbe
mov
loop
jg
pop
das
jp
sub
js
dec
idivb
rolb
filds
cwtl
mov
fsubrp
inc
enter
ret
pop
imul
mov
sbb
mov
push
call
in
aad
mov
or
sbb
out
addr16
cwtl
ljmp
or
mov
sbbl
inc
push
mov
pop
jne
jbe
inc
mov
inc
inc
push
data16
mov
out
adc
pop
or
jmp
sub
daa
sub
ds
mov
jg
mov
xchg
lock
frstor
popf
push
leave
ss
jmp
sahf
jbe
ljmp
mov
icebp
or
int3
push
mov
ljmp
dec
sbb
cmpsb
pop
lods
test
adc
jae
pop
sbb
rcrb
sub
add
xchg
cmp
add
scas
movsl
dec
jb
popl
and
movsl
lods
xchg
push
and
mov
dec
jmp
cmp
adc
insb
dec
mov
daa
in
mov
inc
insb
cwtl
push
nop
imull
mov
jge
in
lret
pop
push
mov
daa
jl
jnp
daa
mov
into
xor
js
mov
sub
daa
scas
mov
jb
aas
and
sbb
adc
pop
shrb
pushf
mov
inc
fldcw
test
in
cltd
push
lock
push
in
fisubrl
mov
divb
dec
in
in
xlat
jne
lods
nop
jle
mov
bound
cmpsl
and
jle
mov
loop
xor
cmpsb
test
cmpsb
loopne
je
test
push
mov
fcoml
push
xlat
cmp
jbe
push
mov
mov
jmp
mov
adc
adc
sbb
inc
imul
insl
jnp
jns
sbb
xor
lcall
enter
je
adc
xchg
pop
mov
notl
or
arpl
xchg
push
and
add
mov
mov
mov
mov
or
loop
cmp
sub
jmp
adc
add
loopne
sbb
testb
test
jg
test
outsl
pop
cmp
cld
xor
inc
inc
xchg
xor
sbb
jge
dec
jp
fucomi
test
mov
adc
xchg
sub
imul
sahf
pusha
xor
pop
pop
dec
xorl
mov
rcl
pop
sbb
sbbb
sub
popa
jp
xchg
jno
dec
push
lods
xchg
xchg
push
jb
xchg
sbb
popf
fisttpl
mov
cwtl
sub
jno
xchg
loop
cmp
lods
cmc
push
pop
popf
dec
dec
stos
dec
lea
shrl
xchg
dec
sbb
popa
mov
add
inc
out
jne
xchg
popa
inc
fs
adc
mov
adc
es
sub
push
test
in
and
add
insb
xchg
popa
fnstenv
andb
stos
imul
sub
in
ja
outsb
push
xchg
inc
xor
imul
inc
xor
xchg
xchg
sub
stos
popf
int
push
or
loop
fs
icebp
adc
fsubrs
lods
inc
rcr
sub
es
imull
xor
rcr
xchg
lea
mov
ret
incl
fidivl
cmpl
inc
mov
xchg
cltd
jmp
adc
dec
xor
xchg
jbe
mov
loopne
pop
test
jge
jnp
leave
cs
das
outsb
loope
addr16
test
fcmovne
cltd
call
sbb
fimull
add
jo
and
fldl2e
loopne
out
xor
into
push
outsl
sub
pop
les
lock
ds
xchg
lret
push
pop
sub
pop
jbe
fcomps
sub
mov
mov
sub
jle
or
cmp
inc
imul
es
jns
and
mov
mov
or
in
xchg
insl
sub
xchg
scas
sub
and
xor
fs
cmpsb
or
xchg
repz
mov
push
test
or
call
pusha
clc
pop
mov
ss
das
fs
push
add
mov
jmp
ret
cmp
fistpl
mov
push
xor
adc
cmp
stos
movsl
push
sbb
pop
fwait
jmp
popa
roll
xchg
sbb
cs
jle
pop
sub
cmp
push
cs
mov
out
std
xor
clc
lret
fwait
insb
sub
xor
lret
addl
js
ret
lret
xchg
ss
ljmp
push
sbb
adc
aas
movsb
movsb
fildl
fdivrs
sbb
inc
bound
aad
out
div
pop
addr16
inc
jae
sbbb
cmpsl
arpl
and
ror
mov
mov
push
push
iret
imul
push
imul
ljmp
divb
or
xchg
sbb
jnp
out
daa
jo
mov
adc
mov
xor
inc
inc
arpl
mov
xor
repz
push
insb
mov
test
decl
movsl
cmp
or
jp
cmpsb
test
adc
pop
mov
jne
push
pop
cwtl
jmp
xorb
mov
xor
arpl
bound
adc
test
xchg
push
ljmp
mov
fbld
add
xchg
hlt
sahf
mov
jne
jae
mov
ja
addb
adcb
jmp
lret
jb
dec
fdivrs
adc
sbb
jecxz
rcr
xchg
popa
push
cmp
lahf
stos
or
movsb
jb
xchg
xor
xlat
pop
mov
push
mov
mov
adc
jecxz
sbb
push
repz
aad
jnp
add
add
fbld
mov
test
pusha
cmpb
mov
fnsave
push
and
test
gs
das
les
icebp
nop
push
xchg
popa
xchg
sbb
cmp
das
loope
in
loope
pop
popa
imul
lock
lods
test
outsl
repz
jmp
lcall
bound
fdivrl
or
add
loopne
mov
lcall
cmp
enter
mov
and
xchg
inc
loopne
jmp
fnstsw
ja
xchg
rcll
mov
inc
sti
or
int
test
leave
xlat
pop
cmc
or
inc
sbb
aam
shrl
aas
push
mov
inc
pop
sub
pop
sub
aad
push
xor
jle
push
push
push
insb
adc
test
sbb
mov
shlb
nop
xor
das
lcall
push
push
and
ds
sub
mov
dec
cmpsb
sub
dec
scas
jmp
xchg
out
or
push
cmp
std
ss
jg
aas
les
pop
insl
ret
mov
arpl
jno
fnstsw
add
jmp
int3
mov
je
std
test
push
jmp
inc
push
testl
adc
leave
loopne
popa
sub
daa
push
lea
pop
scas
shl
xor
sub
rcl
fimull
sub
inc
cld
test
mov
movsb
out
fbld
rol
icebp
sbb
cmpsb
xor
in
push
or
mov
xchg
dec
out
in
nop
sub
jp
or
test
sbb
xchg
fcmovu
es
mov
inc
inc
or
sub
pop
mov
adc
push
cli
cmpsl
fwait
test
lcall
je
jg
enter
jbe
outsb
ret
sbb
out
sarb
xor
pushl
fistps
and
movsb
pusha
add
push
ret
clc
out
int3
sarb
lds
test
popf
inc
and
insb
into
nop
test
push
mov
lahf
sbbb
cmp
mov
sub
rolb
mov
jg
lahf
shll
mov
fwait
sub
jge
mov
cmp
jno
pushf
push
ss
popa
pop
add
push
inc
cwtl
push
roll
sarl
cmp
pop
aad
popf
in
mov
inc
xchg
jmp
push
adc
leave
ljmp
incb
mov
rcll
sub
aas
je
inc
das
imul
dec
mov
imul
iret
fidivrl
mov
sbb
out
imul
pop
mov
jmp
adc
push
xor
sbb
sbb
jb
xor
aaa
mov
jle
sbb
dec
pop
jge
dec
add
imul
push
mov
xchg
int3
les
pop
or
push
dec
push
dec
push
aas
and
xchg
fnsave
ficompl
pop
jae
sbb
hlt
pop
aam
mov
gs
push
adc
inc
pushf
imul
add
cltd
std
in
xchg
fistpl
push
stos
popa
nop
mov
out
push
push
sub
mov
scas
jle
outsl
jnp
mov
and
cmp
xor
jl
dec
outsl
mov
cs
mov
inc
mov
outsl
cmp
sbb
fldcw
scas
loop
dec
sahf
subl
add
cli
mov
pop
sbb
jg
cmpsl
cltd
mov
push
dec
add
mov
jo
ss
in
mov
ret
imul
dec
jle
adc
pushl
jb
cld
inc
xor
hlt
push
or
cmp
out
mov
insb
xchg
adc
arpl
stc
js
icebp
ss
insl
icebp
jae,pn
and
fmulp
jae
das
mov
daa
in
mov
pop
add
xor
jns
cltd
mov
addr16
lea
fiadds
xchg
aad
clc
cmp
inc
outsl
leave
sub
int
stos
dec
loop
and
jne
and
popa
cmpsb
mov
inc
mov
addr16
orl
sbb
push
sbb
dec
scas
int
add
sbbl
mov
fmull
push
movsl
aas
push
fisubl
jp
pop
nop
out
frstor
imul
fsubrs
push
and
sbb
push
sub
jo
push
cmpb
leave
nop
xchg
icebp
inc
addr16
ret
xlat
adc
and
and
sbb
rolb
push
popa
mov
out
pop
gs
les
dec
fimuls
loopne
je
pop
xor
nop
pop
hlt
movsl
imul
xchg
add
and
repz
xchg
sbb
movsl
xchg
pop
addb
outsl
les
out
xchg
and
ds
jge
movb
push
int3
leave
clc
lret
dec
cmp
cmpsb
xor
jecxz
sub
and
adc
scas
sub
roll
lods
cli
fstl
andl
fwait
dec
push
mov
xchg
dec
ret
mov
out
xchg
fstps
bound
insb
xor
mov
mov
flds
mov
lret
adc
pushf
push
std
dec
aaa
xor
into
imul
popf
dec
insl
incb
jo
push
sbb
int
loope
das
hlt
xchg
cwtl
cs
jno
imul
cmp
and
mov
insb
outsb
subl
pop
inc
test
sbb
out
insl
lahf
add
cmp
mov
pushf
ds
fs
and
pop
rolb
pop
cwtl
jbe
cmp
jns
and
push
sub
sarb
adc
jnp
pop
jno
mov
mov
and
popf
sub
push
jo
cmc
inc
scas
and
xorb
outsb
or
sub
xor
push
pop
ljmp
fcomip
repz
xchg
push
jle
push
insl
mov
pop
pop
push
out
aad
mov
adc
xor
dec
and
inc
fucom
xlat
fists
xchg
xor
dec
movsb
ror
frstor
add
jbe
sub
js
cs
xchg
pop
orl
in
call
adc
or
bound
inc
dec
call
fdivs
pop
mov
imul
jl
lea
mov
jl
cmp
filds
pop
das
stos
lds
mov
popa
mov
mov
jl
mov
add
popf
aam
add
mov
xor
ret
and
in
fmul
jae
leave
icebp
sub
or
lock
ja
inc
stc
or
shl
cmp
shll
push
fisttpll
test
scas
pushf
iret
mov
ret
repz
cmp
adc
mov
data16
loop
icebp
icebp
dec
repnz
xchg
mov
loop
push
sub
fnsave
iret
popf
sbbl
in
repnz
mov
jecxz
jmp
sarl
xchg
jb
xchg
fistpll
sahf
xchg
repz
dec
inc
enter
data16
pop
mov
sub
add
aam
sahf
lock
mov
jo
repnz
sbb
inc
pushf
stos
mov
fistpll
addr16
cmp
mov
aad
xchg
sub
or
inc
movsl
or
nop
xorl
pop
testb
cs
imul
push
test
ds
mov
adc
jl
inc
add
sub
shr
sbb
cld
aad
dec
in
lods
sbb
jns
dec
fsts
cmp
mov
sub
pop
push
lahf
in
stc
add
push
mov
push
and
movsl
pop
nop
ficompl
jmp
bound
add
aad
icebp
mov
push
dec
dec
push
dec
je
je
cmp
and
dec
jp
incl
sub
ret
loope
push
lret
xchg
and
jbe
int
call
jmp
jae
lods
mov
lea
std
pop
xchg
push
mov
or
mov
sbb
dec
cmp
push
outsl
adc
pop
hlt
ljmp
xchg
xor
jo
dec
lret
loopne
push
inc
cmpb
xor
cmpsb
es
mov
repnz
fisubrs
scas
pop
fdivr
push
aas
sbb
jp
shlb
xlat
mov
ret
cmp
and
scas
mov
jno
pop
cmpsb
push
fcmovbe
xor
out
je
dec
mov
push
jge
mov
out
mov
into
cmp
aad
imul
call
aaa
cmp
sbb
cmpsb
fsubrs
popf
leave
dec
std
call
xor
fiaddl
iret
mov
adc
stc
or
and
loope
sub
mov
push
xchg
mov
fwait
and
into
mov
or
rolb
xchg
ficoml
lret
test
cmp
mulb
sub
fwait
pop
sub
adc
push
cmp
loop
mov
mov
mov
jae
push
cmp
mov
mov
jo
loope
in
stos
stos
std
scas
aas
pop
mov
aaa
cmpsl
mov
add
adc
adc
fs
into
xorl
cmp
sub
insb
mov
xor
cmpsb
dec
xchg
stos
inc
push
xchg
test
sahf
xchg
adc
loope
jno
pop
push
sub
fsts
mov
add
pop
pop
mov
adc
out
lea
movsl
sets
lahf
sub
jge
arpl
movsl
jle
mov
insl
repnz
dec
cmp
pop
js
pop
fisubs
imul
ficomps
jae
cld
xor
add
or
mov
cli
push
dec
sbb
inc
add
fwait
push
aas
scas
jnp
pop
sub
xor
gs
dec
xchg
call
fisttpll
push
cmc
sub
fists
pushf
add
push
inc
int
xchg
push
add
and
flds
adc
verw
mov
aaa
dec
push
ret
sub
mov
js
imul
lret
jmp
ficomps
rcll
pop
mov
sbb
or
popa
mov
out
cmp
add
scas
adc
lahf
sbb
cmpsb
sub
idivb
dec
jge
push
das
sbb
int
loopne
int3
daa
sti
clc
push
cmpsb
mul
mov
and
fistpl
sbb
movl
loop
cmp
movsl
cmp
adc
int3
ss
out
xchg
std
jo
sbb
int
into
std
or
aaa
jae
dec
pop
xor
mov
and
or
mov
nop
mov
push
jae
pusha
mov
xor
xchg
ds
and
adc
mov
fcmovne
imul
cmp
xchg
cmp
adc
pop
push
xlat
fs
call
sbb
ljmp
sbb
push
pop
or
scas
jo
push
mov
prefetchwt1
or
jle
mov
cmp
pop
xchg
or
jb
add
cmp
stc
adc
fwait
inc
dec
jne
test
out
mov
decb
jg
in
jnp
ret
shll
push
xchg
clc
jo
jecxz
mov
add
data16
aad
dec
lret
sub
dec
lds
sahf
pop
and
cmp
xor
lods
lock
jmp
pop
aas
jmp
sub
loop
outsl
fstl
aas
fmuls
push
loop
sarl
pop
inc
shrl
add
cmp
lcall
push
xchg
pushf
rcrl
pop
mov
fists
and
mov
xlat
adc
mov
xor
stos
xchg
out
outsb
push
and
and
leave
mov
ss
push
mov
test
mov
sarl
mov
xchg
movsl
pop
test
mov
mov
out
mov
rcr
fistl
repnz
dec
in
adc
loop
push
sbb
pop
gs
addr16
pop
lahf
mov
lods
xchg
das
mov
mov
mov
adc
sti
adc
mov
mov
mov
cmp
arpl
shrb
popa
jb
xchg
stos
adc
enter
std
sub
int
dec
xlat
pusha
aas
or
negl
and
lcall
pop
sahf
pop
insb
popa
push
repnz
jge
jbe
ljmp
loopne
loopne
mov
mov
int
jo
mov
xchg
push
pop
pop
in
inc
bt
jle
mov
mov
inc
jne
cmp
fwait
jle
dec
sbb
and
inc
or
jb
sbb
dec
rcrb
fwait
insl
xchg
mov
ljmp
lea
cltd
jo
and
mov
outsb
pop
addl
add
sbb
sarb
jmp
inc
inc
push
cmp
xchg
stos
dec
cwtl
pop
xchg
data16
mov
lock
xlat
push
test
nop
xchg
mov
mov
int3
jae
imul
mov
shl
cmp
lahf
data16
push
jo
pop
dec
fcmovnu
shll
jmp
rorl
mov
add
adc
std
stos
dec
mov
sbb
outsb
or
movsb
nop
test
scas
jb
push
push
mov
cltd
pop
mov
mov
clc
outsb
mov
mov
push
movsl
jg
sti
iret
and
sub
jg
test
and
lcall
data16
dec
pop
mov
repz
sbb
inc
pushf
jmp
sub
push
ja
sar
or
adc
sub
mov
fcoms
jg
pop
icebp
sub
loopne
push
push
push
push
ljmp
es
loop
ss
and
mov
mov
push
cmp
jbe
fidivrl
bound
xchg
pop
rclb
cld
insl
jmp
in
in
inc
mulb
dec
fcoms
out
mov
pop
push
cmp
pusha
out
inc
rol
dec
aad
and
loope
mov
xchg
pop
outsb
mov
cmpsl
scas
jns
and
inc
inc
fwait
loop
mov
inc
cmpsb
cs
sahf
movl
cmpsb
mov
adc
xlat
and
je
lret
push
adc
scas
adc
cmp
lock
or
cli
cmc
imul
sub
fiadds
xchg
push
mov
lcall
xor
daa
dec
mov
sbb
in
jg
fbld
movsb
loop
incl
xor
jmp
add
dec
and
std
mov
sar
jnp
loope
imul
aas
aad
std
sbb
aam
jno
jmp
fistps
or
pop
mov
cltd
imul
icebp
stc
imul
cmp
fbstp
cmovae
test
outsl
cmp
xchg
lock
addr16
cli
mov
int3
jo
sarb
xchg
scas
pop
enter
or
sar
stc
stos
ret
sub
dec
aaa
dec
adc
test
lods
aaa
insb
pop
sbb
int3
daa
add
jle
cli
loop,pt
int3
inc
mov
mov
dec
push
adc
in
or
mov
pop
inc
mov
into
sub
stos
adcl
fsubs
mov
std
sbb
ds
cmp
test
mov
test
adc
jmp
jbe
lea
jbe
dec
inc
les
fisubs
ret
or
ja
mov
mov
ljmp
ret
xor
rcrl
cmp
lret
out
adc
jae
xchg
and
sub
and
std
lods
pop
jae
stos
jmp
cmp
inc
in
testb
jmp
jp
push
cmovge
stos
cmc
xchg
mov
pop
stc
cwtl
shll
std
push
adc
and
movsb
hlt
or
in
push
pop
stos
add
or
leave
or
je
jle
mov
mov
fiaddl
cmp
jge
test
xor
mov
aad
dec
inc
sbb
mov
add
sbb
inc
pop
mov
shl
rcrl
andl
or
adc
jb
addr16
repz
addr16
add
add
lock
mov
cwtl
fisubl
lds
adc
or
add
xchg
xor
jo
scas
cld
ljmp
and
or
push
dec
mov
fldcw
pop
xchg
cmpsb
rolb
cli
jo
in
fstpt
or
xchg
das
fisubrl
mov
mov
in
sub
cmp
enter
scas
stos
jmp
jbe
repnz
dec
ds
stos
xor
pushf
loopne
mov
mov
out
sbb
xor
or
mov
mov
out
roll
pop
pop
add
fcoml
and
stos
push
pop
into
push
inc
add
repnz
faddp
leave
pop
jbe
or
push
call
arpl
jnp
mov
dec
mov
pop
xchg
xchg
in
mov
sub
sbb
jmp
insb
sub
stos
xchg
pop
mov
xor
popa
lcall
xor
popa
dec
xor
jge
sbb
fs
push
ss
xor
adcl
orb
fidivl
mov
xchg
mov
pusha
mov
add
xor
or
imul
mov
iret
add
test
xchg
pop
mov
aad
inc
sahf
xchg
addr16
cmp
add
inc
mov
inc
ret
mov
int3
cmp
adc
xchg
fwait
repz
fsubrp
lea
aad
xchg
stos
mov
data16
jl
sub
cltd
shll
pop
stos
xchg
repz
pop
icebp
clc
lahf
mulb
call
lret
stc
pop
sahf
mov
xchg
iret
and
test
jg
or
icebp
or
push
inc
in
push
aas
inc
lods
mov
push
mov
hlt
lret
sarl
pop
imul
mov
sub
mov
mov
mov
insb
jge
mov
ds
cmp
dec
aam
push
mov
push
and
jbe
mov
jne
cmpsl
jl
pop
cmp
call
mov
stos
xor
into
loopne
jg
sbb
cmp
xor
dec
dec
icebp
loop
jo
cmp
mov
movsb
jge
dec
pusha
or
inc
mov
pushl
cmpsl
fcmovnbe
ss
js
push
ljmp
push
or
jge
in
hlt
aas
cmp
jge
jg
inc
bound
popf
pop
ja
mov
mov
je
mov
std
adc
xor
or
hlt
add
loopne
sub
das
inc
icebp
aaa
sti
jnp
lods
dec
cmp
dec
push
sar
leave
push
xchg
dec
mov
xor
or
fistps
or
xchg
cs
add
inc
sbb
cmp
pop
push
xchg
push
jno
mov
push
or
imul
std
and
out
or
dec
lcall
fwait
imul
cmpsb
mov
daa
lret
add
xor
pushf
pop
and
mov
pop
cltd
js
gs
mov
inc
pop
add
int
mov
lret
jge
mov
mov
adc
jp,pn
xchg
fs
pop
int3
out
lock
mov
bound
inc
stc
frstor
push
daa
mov
sarb
je
push
jbe
cmc
pushf
stc
adc
les
mov
cwtl
dec
push
mov
aam
mov
popa
mov
mov
push
push
les
pusha
gs
fcomps
inc
outsb
dec
fwait
movsb
das
inc
inc
inc
inc
add
jecxz
cmpsb
xchg
mov
mov
fidivrl
outsb
addb
insl
js
scas
movsb
jae
int
mov
fistpll
insb
inc
xchg
rcrb
lea
mov
inc
cmp
testb
push
jge
bound
fistl
xchg
adc
cmp
aaa
dec
cltd
and
mov
and
mov
jbe
fwait
sub
lea
call
sbb
mov
push
in
add
jo
cltd
repz
enter
int3
adc
and
inc
fsts
imul
in
and
jge
stos
ja
and
dec
cmp
es
adc
or
ret
mov
nop
pop
leave
loop
sbb
push
jge
and
hlt
dec
les
cli
test
sub
or
data16
cmpsl
xor
cli
data16
aas
push
fbstp
rcr
test
stos
pop
push
arpl
fs
enter
jmp
xchg
dec
dec
mov
push
mov
in
lock
stos
add
ret
out
cmpps
lret
divb
cmpsb
dec
dec
dec
mov
into
scas
mov
lods
pop
cmpsb
or
or
rcll
push
xchg
loopne
cli
leave
imul
clc
testb
pop
dec
add
adc
sub
pop
mov
scas
xchg
jae
fwait
pop
adc
and
rcl
xchg
pop
inc
mov
mov
mov
decb
push
imulb
scas
ja
pop
jbe
loopne
or
dec
jno
inc
nop
insb
xor
xchg
pop
adc
adc
or
sbb
mov
scas
mull
lock
popf
js
mov
loop
call
push
cmpsb
pusha
es
shlb
mov
enter
in
faddl
inc
leave
bswap
dec
cmp
mov
mov
dec
jecxz
stos
ja
and
hlt
sahf
add
cmpb
test
aaa
or
add
cmc
and
pop
jbe
xchg
ds
shlb
xlat
jmp
popf
sub
sbb
mov
push
jbe
cmp
loop
mov
add
mov
mov
sbb
sub
mov
fcom
sbb
dec
dec
mov
fwait
jge
scas
daa
dec
push
mov
add
and
mov
scas
lea
gs
xlat
in
push
add
cs
jle
les
push
add
dec
call
xor
adc
push
mov
push
xchg
mov
adc
cs
mov
mov
cmc
cmp
dec
loop
or
mov
outsl
and
sbb
jg
xor
xchg
and
jp
or
sub
or
repz
lds
inc
dec
ret
shl
mov
cmp
xchg
js
cmp
cwtl
mov
shll
jg
sub
hlt
xchg
fstps
sarb
daa
pushf
jae
sahf
xchg
xchg
leave
addb
orb
lock
je
mov
mov
imul
sub
daa
sub
leave
pop
push
add
in
mov
pop
and
mov
sub
rclb
or
ret
jle
mov
xchg
xchg
sbb
stos
out
push
ds
lock
setae
lahf
jg
push
xchg
dec
cwtl
sbb
cld
cmpsb
mov
xchg
ds
cmc
addr16
ljmp
and
jp
and
mov
add
pushf
xchg
dec
test
add
fwait
xor
mov
mov
lret
mov
lods
cmp
pop
fildll
xor
aaa
aaa
add
jae
sbb
push
xchg
jno
xor
jl
mov
mov
xor
in
sub
dec
jns
loopne
jns
fdivrl
cmp
push
je
pop
inc
movsl
inc
jns,pt
pusha
mov
stc
fs
popa
or
andl
mov
pop
push
test
arpl
pusha
add
push
cmp
lret
ds
stos
mov
xor
cli
pop
roll
mov
cmpsl
cli
out
fcomps
pop
lret
addps
inc
adc
stos
cwtl
push
mov
repz
mov
pop
jo
test
sub
lds
repz
test
das
mov
shl
cmc
pop
mov
rcrb
stos
sbb
int
out
imul
sbb
mov
cwtl
xchg
sti
sarl
and
xchg
mov
adc
sbb
sbb
jg
rcrb
inc
pop
inc
sbb
pushf
sub
insb
dec
addr16
and
addr16
add
sub
mov
inc
sub
sub
pop
push
pop
cmp
or
xchg
jnp
jnp
ds
divb
loop
sub
mov
fwait
ret
push
movsb
jnp
xor
push
push
cmp
aaa
in
xlat
popf
or
ror
loop
into
mov
loope
in
hlt
adc
insb
inc
inc
mov
bound
xchg
mov
jg
faddp
loope
fadds
inc
aad
pop
jae
mov
mov
mov
sub
inc
test
shll
inc
sub
in
das
cwtl
hlt
shl
push
inc
xchg
aaa
mov
mov
cs
sub
inc
mov
test
cmp
hlt
dec
add
adc
je
sbb
sbb
inc
sbb
notb
jecxz
in
pop
stc
and
push
add
jl
jbe
jecxz
gs
inc
ret
sbb
pop
das
add
es
push
sbb
sbb
stos
lods
add
xor
push
jecxz,pt
rcrl
cmpsb
shl
inc
movsl
push
xor
push
push
sub
sub
pusha
push
sub
xor
xchg
loop
ret
jge
mov
lods
add
icebp
cltd
daa
mov
mov
js
shl
lret
stos
xchg
dec
in
pop
imul
xchg
push
enter
or
mov
aad
iret
mov
push
inc
pop
and
sub
pop
test
int
daa
insb
js
push
rorb
mov
in
fistpll
mov
shrb
les
inc
jle
mov
insl
mov
into
xchg
sbb
adc
dec
sbb
pop
pop
pop
add
jmp
fistpll
shll
cmp
bound
jl
mov
icebp
mov
inc
xchg
adc
stos
popa
push
mov
testb
gs
jb
mov
mov
add
and
inc
inc
fnstsw
outsb
lods
stc
xchg
jne
mov
hlt
jp
fcoms
and
xchg
in
jne
shlb
push
xchg
cld
sbb
frstor
pop
lods
lea
test
mov
xor
adc
out
xchg
in
ret
add
push
dec
outsb
mov
rcrb
out
and
jl
adc
add
xor
or
test
cmp
popa
test
pop
or
xchg
popa
jb
add
sar
mov
jbe
rolb
add
mov
xor
inc
xchg
add
lcall
ret
xlat
sub
jg
dec
xor
gs
adc
or
aaa
jge
test
and
cmp
and
notl
adc
loop
jnp
in
xor
add
push
hlt
bnd
cmp
jo
pop
sub
sub
aaa
or
ss
xchg
stos
repz
pop
push
pop
stos
incb
cmpsl
mov
lret
rcrl
movsb
sarl
fnsave
ljmp
push
pop
fwait
pop
sbb
ficoml
cld
jne
mov
lret
adc
std
lds
lahf
mov
push
sub
shll
cli
mov
xchg
mov
ds
and
movsb
dec
movsb
cmp
jp
and
jo
jmp
sbb
adc
mov
add
in
loope
incl
cs
jecxz
jne
sub
pop
stos
ret
pop
hlt
pop
pop
cwtl
jecxz
cwtl
pop
daa
outsb
or
decl
jno
mov
out
dec
popa
cmc
pushf
imul
sbb
pop
xchg
rcrl
ja
or
sub
clc
fidivrl
pop
sub
movsb
mov
stos
pop
lahf
lea
xchg
add
in
xor
jns
hlt
pop
push
pop
in
mov
inc
cmp
scas
lods
push
or
mov
jne
pop
mov
cmp
sti
in
push
sub
in
jb
jecxz
in
dec
test
mov
mov
repz
xor
or
mov
stc
addr16
xchg
shll
sbb
aaa
cltd
fidivs
dec
pop
dec
xchg
mov
sbb
icebp
call
daa
xor
mov
mov
push
lods
ror
sti
les
mov
ja
sbb
mov
inc
es
cs
stos
lods
inc
jl
aaa
mov
mov
push
jbe
iretw
outsb
leave
or
xor
sub
mov
mov
push
lea
jp
pop
je
test
clc
ja
ret
enter
inc
addr16
and
sub
mov
shlb
jb,pn
mov
int3
das
xchg
cwtl
mov
outsb
mov
inc
inc
xchg
fiadds
inc
jecxz
dec
movaps
out
push
in
push
dec
push
roll
sbb
push
push
not
jg
sub
and
sub
imulb
xor
jg
pop
inc
loopne
scas
scas
jne
loopne
dec
pusha
or
nop
rcl
xchg
mov
imul
mov
or
inc
pop
rol
mov
mov
push
dec
sub
adc
pop
sub
ljmp
andl
sbb
pop
xor
js
ss
mov
cmpsb
nop
orb
insl
inc
js
mov
cmp
mov
out
jb
out
pop
pop
push
push
and
test
fsts
add
negl
int
out
mov
mov
aam
in
cmpsb
jne
into
fiaddl
cmpsl
mov
pusha
cmpsl
jle
pop
bnd
insl
xor
pop
cmp
xchg
enter
dec
adc
std
cmpsb
xlat
inc
cwtl
pop
and
cli
and
idivl
roll
sbb
push
loope
call
imull
imul
pop
test
test
aaa
cmp
xchg
bnd
jnp
lcall
icebp
jmp
pop
mov
adc
movsl
dec
in
or
lods
sbb
jnp
and
push
inc
test
sub
add
and
mov
mov
add
dec
leave
fstl
scas
xchg
test
inc
dec
xor
xchg
cmp
aad
adc
mov
and
je
rolb
xor
jg
pop
sub
xor
out
shlb
fistl
sbb
mov
clc
push
pop
mov
cmpsb
pop
movsl
loopne
nop
cmp
or
and
or
mov
and
cmc
idivb
pop
std
push
and
scas
sahf
stc
push
jnp
fstp
iret
scas
add
xor
dec
pop
or
sub
sbb
dec
jae
insl
rcpps
xor
loope
enter
jge
les
and
hlt
jno
mov
inc
pop
sbb
pop
push
dec
das
int
pop
scas
push
sbb
xlat
mov
jns
test
push
fs
jge
mov
jb
adc
lahf
sub
mov
inc
xchg
test
fisttpl
fsubrs
stc
movsb
in
aad
jle
inc
sbb
jae
xor
lds
addr16
mov
fmul
dec
add
pop
fstpt
rol
push
and
mov
repnz
test
pushw
ret
mov
xor
movsb
repnz
adc
add
iret
lods
test
es
into
jecxz
sbb
out
cmc
pusha
mov
adc
jae
shrl
ljmp
loope
add
xchg
jo
iret
int3
insl
mov
add
hlt
add
jae
ret
mov
pop
cmpsl
imul
and
arpl
ja
or
xorb
sti
dec
cltd
mov
aad
jl
repz
scas
movsl
push
jg
jno
pop
inc
sbb
fidivrl
call
mov
in
sbb
sti
icebp
fs
xchg
insb
data16
vmaxsd
cmovbe
lcall
cmpsb
test
and
out
xchg
cs
push
jo
mov
insl
and
dec
and
mov
xchg
mov
fs
mov
sub
outsb
jb
insl
pop
and
adc
lcall
les
sbb
clc
imul
dec
addl
cld
dec
leave
push
fldt
rclb
clc
dec
pop
dec
ljmp
xlat
sub
and
in
push
aas
mov
sub
mov
ret
enter
jmp
cmc
loop
push
sti
dec
add
icebp
insb
adc
or
sbb
add
or
leave
cmp
xchg
mov
or
jg
ljmp
es
pushf
push
xchg
stos
pop
testb
out
ror
jg
add
mov
cmp
pop
inc
jl
jecxz
lret
fdivl
std
jo
movsl
shlb
mov
dec
adc
pop
in
cmpsl
ss
or
pop
jae
push
xchg
adc
inc
imul
mov
push
and
push
scas
lcall
adc
pusha
or
sub
xor
lods
daa
jg
cmp
sbb
das
jecxz
repz
decl
add
lods
mov
cmpsl
push
movsl
mov
lea
in
push
jns
adcb
out
inc
adc
lea
mov
popf
insl
adc
cwtl
pop
js
repnz
aad
mov
aad
sbb
mov
and
sahf
hlt
mov
inc
sbb
dec
xchg
lock
les
push
xchg
outsb
add
in
push
into
sbb
cmp
sbbb
sarb
inc
mov
pop
mov
in
inc
and
iret
bound
push
add
cmp
push
push
nop
mov
test
aas
aas
inc
xor
rorl
cmp
das
outsb
pushf
dec
je
add
fs
adc
cs
out
cmc
fidivs
xor
mov
and
or
scas
mov
ja
sbb
pop
in
inc
movsl
cwtl
add
mov
aam
pop
fsubrs
mov
adc
loope
lods
mov
fmuls
sbb
and
push
cmp
sbb
lret
jo
pop
popw
xchg
icebp
int3
popa
notl
pusha
adc
adc
lock
aaa
fcmovbe
test
pop
ljmp
sub
and
add
mov
in
jno
jo
sbb
mov
push
mov
push
test
aad
pop
popfw
jge
es
lods
insb
loop
pop
js
pop
and
adc
test
in
lods
inc
add
pop
les
push
lds
pop
add
add
mov
inc
add
mov
in
loopne
clc
icebp
lret
pop
fsubrs
mov
jecxz
fisubrs
adc
sbb
rorb
es
xor
pop
out
jbe
lock
icebp
pushf
pop
aad
mov
jl
cmp
jb
xchg
jmp
enter
jns
shl
lods
in
inc
and
fwait
lods
inc
leave
ds
fildl
mov
xor
sbb
pop
adc
icebp
pop
mov
aad
jns
pushf
pop
je
hlt
ret
inc
mov
push
vmovntps
adc
outsb
cmp
mov
enter
jp
cmp
sub
gs
lock
pop
mov
dec
adc
mov
rol
add
xchg
push
mov
cmp
in
ja
jns
daa
daa
dec
xlat
mov
lods
hlt
inc
push
fwait
cmpsl
andb
daa
movswl
cwtl
mov
sub
aam
ja
sbb
sbb
cmpsl
adc
mov
idivb
mov
test
mov
cltd
icebp
inc
sti
push
loope
outsb
inc
dec
dec
or
scas
arpl
outsb
leave
icebp
xor
bound
inc
pop
jp
clc
adc
js
jb
outsb
mov
daa
sti
js
adc
cmp
aaa
out
jle
push
jno
mov
je
call
xor
push
xchg
cmp
fisubs
insl
into
hlt
add
das
and
into
push
aam
loopne
sbb
push
lods
push
loopne
mov
sahf
push
hlt
mov
push
jo
insl
insl
lret
or
xchg
loopne
ja
xchg
jle
fldenv
aad
or
inc
iret
cs
pop
rcll
cmpsl
mov
jp
or
mov
fldenv
test
cmpl
xorb
repz
mov
sbb
insl
out
mov
lret
inc
mov
in
test
or
out
dec
or
cmpsb
ret
mov
xchg
in
sti
sbb
jecxz
cmpb
imul
push
jno
test
push
mov
adc
pushf
test
xchg
scas
lcall
adc
imul
mov
mov
push
lock
cld
mov
dec
test
add
out
pop
add
cmp
popf
or
negb
xchg
jne
push
fcompl
add
mov
jp
push
cmp
std
and
push
cld
lret
loope
xchg
daa
xor
push
sub
test
dec
lahf
fbld
inc
out
jmp
out
cmp
mov
lahf
cltd
jg
mov
aam
cmc
sub
jg,pn
je
xchg
test
jmp
hlt
lds
xor
out
aas
push
mov
xor
and
and
mov
mov
dec
xchg
dec
pop
cmpsb
dec
sbb
sub
mov
cwtl
adc
and
in
out
cmp
adc
xchg
add
add
lret
or
add
aaa
dec
pop
xchg
aas
mov
sbb
roll
and
lods
mov
fbld
mov
pop
pop
imul
mov
dec
call
push
sbb
pop
test
ja
mov
fstpl
test
jnp
call
sub
out
jns
out
jge
mov
or
les
lods
pop
pop
insl
adc
inc
ficoms
outsb
xchg
gs
add
pop
pop
cmp
add
cmp
cmpsb
hlt
mov
push
xor
push
xlat
jb
xlat
adc
dec
mov
push
pop
adc
loop
cmpb
arpl
arpl
stos
sti
mov
push
sbb
jl
leave
mov
xchg
dec
movsl
out
and
dec
popa
int3
or
and
repnz
addr16
sahf
cmp
add
sbb
lcall
rcr
push
jae
lret
inc
add
inc
xsha256
cmpsb
xchg
adc
push
or
incb
cmp
lret
mov
pop
stos
mov
popf
loopne
das
lea
jne
sahf
gs
push
push
shll
out
adc
lods
or
stos
mov
enter
fwait
pusha
fs
sbb
push
adc
sub
int3
negl
fiaddl
mull
mov
jae
dec
mov
mov
aam
jne
xchg
mov
or
cmp
jmp
xchg
outsb
js
jnp
add
push
cwtl
sbbl
pop
in
xchg
jo
lock
ja
pop
pop
and
pop
bound
push
leave
jmpw
sbb
sbb
pop
and
cs
test
jecxz
mov
or
lods
inc
mov
jbe
cs
jbe
int3
jns
pushf
les
sahf
sbb
mov
xchg
idivb
inc
test
movsb
loopne
std
pop
sbb
scas
adc
loopne,pn
adc
movsb
stos
pop
cmp
out
lea
pop
std
and
jp
add
scas
popa
pop
cmp
ret
lahf
sub
dec
loope
push
aad
xchg
daa
and
aaa
jb
xlat
in
repz
mov
xchg
call
add
sub
mov
push
or
fnstenv
cmpsb
sahf
mov
inc
das
into
icebp
mov
daa
xchg
jmp
inc
test
or
sub
sbb
sub
fimuls
sbb
shrl
inc
jbe
and
les
scas
and
popf
add
mov
outsb
mov
xchg
in
jl
inc
mov
incl
mov
mov
add
jnp
inc
cwtl
mov
fs
mov
dec
adc
mov
das
mov
jo
xchg
sbb
sub
mov
outsl
adc
out
stos
insl
xor
mov
js
lahf
fsubl
jg
ret
mov
daa
dec
mov
xchg
pop
mov
mov
jg
push
add
scas
popa
cmpsl
aaa
add
mov
pop
push
cltd
and
pop
mov
popf
rclb
test
fs
push
sub
xor
imul
jg
les
fildll
sub
sbb
leave
int3
testl
jge
cs
rolb
pop
jg
lret
mov
jecxz
movsb
hlt
sbb
mov
leave
arpl
xor
push
xchg
movsl
cmp
sbb
cs
in
outsl
xchg
fmuls
push
fistpl
and
xor
cld
pop
and
inc
icebp
mov
add
fdivrs
jns
mov
mov
sbb
push
scas
out
test
mov
loopne
sub
sub
inc
std
stos
or
push
adc
xchg
sub
repnz
pop
add
mov
mov
lock
repz
mov
fldt
adc
xchg
xchg
xchg
add
in
pop
mov
inc
xchg
push
push
xor
adc
mov
setp
das
push
and
mov
inc
pop
mov
popa
pop
lock
xor
cmp
scas
sub
js
popf
js
jmp
push
int
xchg
xchg
or
out
scas
out
fimuls
shlb
pop
add
lds
mov
sbb
sbb
add
decl
mov
stos
aas
out
sub
inc
sub
jmp
outsl
lods
dec
fsubrs
into
adc
xor
and
pop
in
mov
push
aas
pop
das
in
xchg
daa
aas
mov
jno
mov
repnz
cmp
outsb
xchg
popa
xchg
iret
imul
xchg
mov
cld
in
jae
push
push
or
push
mov
pop
inc
out
imul
pop
rcrb
xchg
dec
xchg
stc
aam
sbb
mov
outsl
xor
jns
sbb
lods
sub
movsb
xchg
push
xor
test
loopne
pop
mov
cmc
add
cmp
mov
scas
ds
mov
cmp
in
inc
aam
pop
push
icebp
pop
xchg
cmp
push
jns
and
adc
add
dec
mov
cs
adc
dec
adc
mov
xor
fstl
out
movsb
fdivl
xor
add
in
jmp
inc
push
push
dec
sub
mov
pop
adc
bound
push
repz
out
xchg
rol
stos
cld
mov
mov
add
add
jne
jbe
fwait
dec
mov
sub
jl
add
and
add
xchg
fdivl
sbb
test
stos
pop
shll
repz
jle
dec
pop
std
pop
dec
jge
mov
push
divl
sbb
das
cmc
into
mov
push
sar
enter
xchg
ds
rcrb
rorb
jb
cmp
aam
jno
push
mov
or
aad
cs
lret
and
or
or
popl
mov
and
lods
inc
test
xchg
jmp
outsl
add
push
test
and
push
lret
mov
cwtl
dec
push
repnz
sub
sub
sbb
xchg
loope
push
or
jp
fsub
stc
outsl
adc
sahf
lds
sub
or
clc
add
imul
test
leave
push
cli
fistpl
sbb
adc
jl
xchg
or
jae
ret
in
and
xchg
std
test
adc
lods
leave
daa
mov
cmpsl
sub
sahf
jmp
mov
mov
popa
jbe
std
mov
pusha
mov
and
or
insb
test
push
call
movsb
ljmp
mov
jnp
cmpsl
push
mov
or
lods
jp
shll
or
jmp
or
push
int
sbb
movsb
inc
in
pop
jecxz
jge
lahf
ret
les
fimull
xlat
jmp
or
pop
or
es
inc
clc
ldmxcsr
movsb
ja
mov
xor
mov
push
push
pop
stos
cld
test
and
xor
addb
lret
push
mov
jp
jb
jns
cltd
pcmpgtb
pop
sahf
pop
add
loopne
mov
xchg
out
js
imul
add
adc
push
and
cmpsl
mov
sbb
or
inc
jle
negl
mov
sbb
mov
imul
dec
xor
pop
popf
rcr
xor
sub
fwait
push
xor
pop
cmp
sti
pusha
xor
pop
shlb
mov
jp
jg
mov
aam
mov
pcmpgtd
in
lods
fnstsw
adc
ret
sub
enter
mov
dec
add
dec
imul
dec
stos
xor
pop
lcall
in
lret
mov
jnp
fwait
and
mov
xchg
push
xor
push
fists
pop
test
lea
pop
xchg
rcll
sbb
dec
adc
lods
xchg
adc
inc
adcb
test
outsl
push
cmp
data16
fcompl
sub
jns
push
loope
loopne
stos
popf
imul
test
cmp
sarb
shr
inc
ret
iret
jl
mov
mov
and
mov
inc
insb
mov
jle
inc
sti
in
jbe
dec
les
sbb
push
or
scas
mov
xchg
lret
mov
pusha
outsb
sbb
add
xchg
fsubrs
scas
daa
outsl
xor
inc
add
loopne
cmp
sarl
jno
lds
imul
dec
and
and
adc
daa
movsl
mov
lods
jnp
icebp
xchg
dec
rcl
imul
andb
ret
xor
insb
dec
mov
push
pop
push
test
adc
call
testb
jp
stos
loopne
inc
sub
das
js
popa
aad
and
xor
lahf
scas
xor
ss
or
les
in
mov
je
les
cmp
dec
cmp
dec
mov
jmp
xor
lds
cmp
dec
rcrb
push
lret
fstl
je
cltd
dec
mov
mov
or
push
cmpps
aaa
push
movsb
in
outsb
popa
and
push
ljmp
jbe
push
jmp
and
jns
insl
fistl
repz
or
cli
cmp
add
arpl
lret
mov
sbb
sub
es
inc
test
paddusw
jno
movsb
inc
mov
shr
xor
loopne
rcrb
pop
lea
xchg
mov
cmp
pusha
and
movsb
jle
and
aad
adc
mov
push
xchg
sub
push
push
mov
mov
xchg
ss
push
or
pop
jo
adc
movsl
adc
pop
sub
outsl
inc
cltd
add
mov
xchg
cmp
xchg
ret
inc
int
jno
into
iret
test
cli
mov
in
insb
test
out
adc
mov
or
and
repz
hlt
dec
mov
push
xchg
xchg
shlb
pop
imul
aad
sub
cmpb
inc
pushf
fwait
outsl
pop
clc
jno
loop
test
xchg
xor
mov
repnz
push
sar
or
and
mov
lcall
and
cmp
inc
jbe
cmp
or
aas
xor
insl
inc
cltd
dec
or
ljmp
lods
dec
fs
mov
pop
pop
loop
cmp
fldt
dec
push
xor
dec
invd
or
cmp
shrl
loope
push
dec
inc
rcrb
jb
push
ljmp
lret
and
bound
gs
inc
dec
xchg
ss
pop
fdivs
sbb
movsl
sbb
xchg
lcall
movsb
pop
xchg
add
mov
in
xor
aam
pop
out
outsb
fldt
add
cmp
aaa
mov
in
mov
sub
mov
mov
out
loope
sbb
xor
add
jb
cmpsb
xchg
cmp
mov
fisubrl
or
iret
jecxz
lods
roll
call
setge
xchg
jge
ja
jmp
fs
adc
clc
xor
out
or
cli
jg
jns
mov
pushf
or
lods
mov
mov
scas
cmp
mov
js
xchg
mov
sub
fs
icebp
sbb
les
js
push
arpl
ds
sub
push
repz
into
out
ret
das
nop
inc
into
movsb
insl
xchg
cs
push
adcl
and
pop
mov
add
enter
jmp
jns
sbb
into
icebp
pop
lds
sub
dec
movsb
pop
push
data16
dec
fcomip
or
outsb
stos
lret
add
or
mov
and
jmp
ret
ja
or
popa
lret
add
dec
xchg
and
nop
push
loopne
mov
adc
add
jle
aad
shll
sarb
inc
push
mov
pushf
inc
xor
sub
xor
pushf
add
sahf
lret
fisubl
cwtl
sarl
push
cmpsb
stc
popf
jo
push
sbbb
mov
loop
into
mov
sub
cmp
bound
dec
popl
mov
insl
test
dec
mov
lods
je
push
mov
mov
or
sti
push
enter
fistps
xor
xchg
mov
cmp
xchg
xchg
clc
pop
push
xlat
sbb
xchg
fildll
sahf
mov
hlt
xchg
pop
inc
nop
cmpl
xchg
ffree
arpl
adc
div
mov
imul
in
dec
pop
bound
insb
and
add
imul
fwait
xor
js
xorb
pusha
and
xor
das
pop
xchg
js
cmp
xchg
fadds
cmc
ja
leave
fs
mov
lahf
pusha
rolb
push
dec
dec
mov
ljmp
je
adc
add
add
out
and
std
inc
stos
jmp
lods
and
push
mov
int3
jns
inc
mov
aam
mov
cmp
clc
pop
cli
dec
mov
xor
xchg
cltd
lcall
test
rcrb
jl
adc
int
int3
or
dec
fstpl
jbe
xor
push
pop
fildll
stc
dec
mov
lods
xchg
pop
call
cmp
xor
xchg
leave
jns
lahf
pop
scas
outsl
xchg
rorb
sbb
ljmp
ds
roll
fxch
scas
add
aad
push
leave
ljmp
mov
out
jb
mov
xchg
icebp
ljmp
push
mov
pop
loop
inc
and
pop
insb
and
pop
fdivrs
sbb
orl
in
loop
xchg
sbbb
testw
jecxz
add
divb
or
cmp
pop
mov
jb
mov
aad
decb
jbe
sbbb
push
jb
popa
and
je
jg
jg
enter
ds
push
shlb
jp
xchg
andb
and
test
push
and
jmp
cmp
outsb
aaa
std
movsl
std
jmp
stos
dec
frstor
jecxz
xchg
in
xchg
insb
mov
and
jae
cld
sbb
aaa
pop
je
popf
dec
hlt
rcll
mov
push
lea
jno
sti
adc
mov
cmp
add
pusha
les
mov
mov
or
aaa
xchg
mov
aas
pop
and
cmp
xchg
xor
fstpt
icebp
sbb
add
and
sbb
lock
push
enter
rclb
nop
das
sbb
mov
movsb
cmc
ret
and
fmuls
out
or
xchg
pop
sub
adc
jl
cmp
cmp
pop
fs
push
dec
jg
stos
in
in
jb
loop
inc
imul
icebp
int3
adc
push
into
jge
lcall
lods
imul
outsl
or
outsb
cmpsb
add
cmpb
xchg
adc
pop
jp
cmp
scas
dec
dec
cli
imul
pop
sbb
aaa
addr16
adc
jo
adc
loop
aad
dec
aas
repnz
add
sbb
stc
int
popf
lret
and
jb
and
xchg
xchg
in
subb
xchg
push
into
mov
out
mov
adc
cmp
pop
inc
pushf
jg
mov
lahf
cmp
sbb
aas
xchg
sbbb
movsl
xchg
jge
loopne
dec
mov
mov
aad
cmc
sti
aam
or
inc
lock
cld
stc
xor
pop
sbb
lea
mov
rclb
hlt
xor
mov
std
es
jne
push
inc
iret
clc
jnp
jle
enter
out
stc
nop
xchg
mov
sbb
sbb
inc
loop
scas
pop
pop
pop
add
lahf
inc
jmp
std
jge
lods
jae
test
jnp
sar
std
fadds
das
dec
push
flds
dec
mov
jl
jg
pushf
ds
cmp
aam
mov
xchg
test
adc
push
jp
aaa
sub
ds
xchg
mov
xchg
in
push
and
and
push
insl
out
lods
rclb
clc
sub
cmc
mov
jb
jns
pop
inc
xlat
mov
imul
pop
andl
and
jp
call
mov
xchg
loop
cmp
xor
loope
sub
scas
js,pt
cmpsl
stos
and
gs
mov
idivb
scas
scas
cmp
mov
mov
pop
add
or
jb
aad
out
test
xor
gs
push
xchg
lods
rcll
pop
cmp
lods
lds
lods
push
js
stc
insl
addr16
dec
dec
outsl
sub
ljmp
leave
xor
inc
aam
sbb
and
xchg
xlat
lea
cltd
dec
popf
jns
pop
xor
push
popa
pusha
fildll
cld
jnp
pop
xor
sti
loopne
mov
sbb
jp
cmp
ss
pop
mov
lea
sbb
outsb
pop
data16
aam
aas
ss
loopne
popf
mov
mov
push
sbb
cs
or
in
pop
xor
mov
cmp
rorl
add
mov
adc
test
jecxz
pop
add
fcos
adc
test
fidivs
sbb
ljmp
adc
lahf
mov
and
icebp
dec
inc
mov
les
cmp
je
jle
mov
xor
clc
xchg
fdivrs
or
test
fidivrl
inc
push
mov
jo
out
jmp
pop
add
push
mov
jb
pop
leave
mov
mov
ja
loopne
daa
sbb
sub
cmp
push
ja
aas
jns
mov
fsubs
jae
jb
in
and
cmp
imul
adcb
mov
pop
and
fidivs
push
pop
ret
addr16
ljmp
inc
xchg
push
enter
sarb
adc
jg
jmp
jmp
ficoml
push
push
leave
xor
mov
push
inc
scas
dec
cmpsl
mov
adc
subb
mov
jne
mov
jae
mov
pop
sbb
rorl
pop
mov
mov
arpl
pop
in
xchg
xchg
ljmp
aaa
rorl
inc
test
insl
sbb
js
add
imul
dec
popa
sbb
xorb
xor
mov
pushf
cmpsl
dec
cld
imul
xor
xchg
rcll
decl
xchg
pop
jecxz
and
or
or
aaa
xor
cmp
sbb
repnz
insb
jns
inc
stos
cmc
mov
or
sbb
xchg
cmpsl
aas
push
test
stc
out
imul
stos
xchg
mov
aam
or
imul
adc
lret
fwait
mov
addl
in
add
pop
and
dec
aas
pop
pop
mov
or
icebp
cmpsb
mov
adc
fsubr
pusha
push
mov
outsl
cwtl
scas
cmp
dec
outsl
cmpsb
inc
pop
add
mov
jmp
mov
nop
xor
mov
cmp
mov
inc
insb
fidivs
dec
hlt
hlt
xchg
jb
js
pop
add
outsl
push
mov
mull
mov
xchg
decb
pop
addb
jne
lahf
insl
mov
cld
sub
jmp
xchg
mov
add
movsl
xchg
dec
mov
xor
repz
pop
inc
imul
jg
pop
fwait
imul
xor
es
shl
pop
add
ljmp
cli
insl
int
cmpsb
add
mov
jb
dec
xchg
cmp
cmpsb
mov
xorb
ret
adc
in
push
add
cmp
in
adc
cld
pop
xor
pop
loope
inc
adc
into
pusha
sbb
loope
insl
and
pop
push
or
mov
mov
mov
adcb
jbe
insl
push
mov
mov
pop
xor
stos
jnp
sub
push
das
js
pop
fidivs
cmc
insb
adc
sub
lods
lret
roll
scas
add
mov
sub
mov
push
enter
in
dec
and
pop
sbbb
pop
or
aaa
jle
shrl
aaa
jns
shlb
add
adc
cs
sti
adc
mov
or
sahf
mov
xchg
icebp
cmpsb
daa
sub
mov
cmp
xchg
cli
and
lods
mov
loope
test
scas
or
pusha
sbb
lods
sub
xchg
testb
call
lods
xor
rorb
jne
push
pushf
and
push
hlt
js
bound
ficomps
shll
mov
movsb
subb
int3
sub
andl
and
leave
lods
push
sti
rcr
sub
jecxz
mov
out
mov
out
dec
mov
out
fsts
adc
xor
mov
enter
inc
xchg
stos
flds
stos
mov
int3
pop
xchg
dec
xlat
add
pop
sbb
xchg
mov
in
jnp
int3
dec
cmp
jg,pn
xchg
aaa
push
lret
inc
push
adc
mov
pop
lea
ror
iret
cmp
xchg
rorb
or
stc
lods
add
and
in
xchg
gs
jb
adc
lock
rolb
cmpsl
or
in
xchg
mov
pop
loop
or
add
push
and
daa
cmp
cmpsb
inc
adc
stos
pop
inc
mov
sbbl
dec
aam
gs
inc
iret
stc
push
mov
lods
xor
jno
xchg
mov
sbb
in
sbb
adc
and
fcoms
add
cltd
imul
iret
push
sub
sbb
loop
in
add
repnz
mov
jmp
scas
in
aad
push
sbb
mov
imul
in
or
xlat
insb
adc
icebp
rcrl
into
addb
hlt
les
imul
daa
sub
ljmp
stc
sub
ret
xor
stos
pushf
jp
pop
xor
mov
out
adc
stos
lea
push
fidivl
xchg
in
mov
jno
lahf
mov
decl
cmp
mov
mov
cmp
test
cmp
dec
inc
pop
cmpsl
fisttps
stos
ljmp
cmc
rcll
call
mov
dec
mov
sub
pop
and
lods
lea
rol
sbb
pop
outsb
daa
cmc
nop
mov
or
lods
xchg
mov
loope
inc
xor
or
idivb
mov
orl
pop
fldl
xor
mov
mov
sbb
or
mov
sarl
test
das
daa
pushf
xor
jmp
imul
pusha
xor
aad
fildl
das
movsb
or
add
sub
daa
adcb
adc
stos
jo
mov
mov
adc
lcall
sub
ret
das
loop
cmp
out
dec
mov
test
mov
inc
jb
lods
insb
test
adc
sub
xor
mov
jl
add
adc
ljmp
out
mov
adc
loopne
push
and
call
xchg
js
sbb
testl
xchg
call
push
lods
repnz
pop
xor
out
repnz
cmpsb
fwait
jns
mov
jae
jge
push
sbb
mov
out
add
scas
pop
rep
ret
inc
fimull
adc
iret
or
pop
sub
mov
loopne
addr16
in
add
pop
lret
mov
add
shrl
filds
mov
iret
in
call
sub
lcall
scas
push
repnz
mov
jae
pop
in
gs
imul
jp
fiadds
insb
aaa
pop
and
into
das
dec
into
jo
scas
cld
mov
push
int3
xor
pop
lahf
pop
out
and
inc
or
mov
movsl
out
jmp
add
es
inc
xor
negl
lock
jns
sbbb
stos
outsl
dec
mov
scas
push
cli
pop
fcompl
jmp
mov
cld
xchg
sub
fsubr
mov
push
icebp
fists
outsl
sti
outsb
jmp
mov
mov
jnp
mov
pop
cmp
rcl
hlt
add
sbbl
lahf
mov
dec
push
fsubl
mov
lea
or
cld
and
test
sub
fsubl
and
lar
addb
test
out
mov
cli
pop
cli
cmp
ficoms
inc
sarb
mov
push
jmp
aad
sbb
xchg
adc
dec
sbb
cs
jl
push
cwtl
sub
loope
xchg
insb
call
sub
mov
sbb
fimuls
movsb
addr16
dec
sbb
ds
sub
lea
push
mov
data16
notb
js
mov
shll
shlb
addr16
xchg
sbb
fnstsw
decl
out
push
or
inc
cmc
or
rclb
jns
mov
dec
cwtl
pop
sbb
cmpsl
xorl
mov
mov
sbb
jl
enter
sti
jno
pop
jmp
mov
cmp
or
push
in
aas
mov
sub
test
lcall
fwait
mov
jne
jnp
push
ss
dec
mov
aad
mov
addr16
daa
leave
jmp
pmulhuw
sbb
int
addr16
movsl
popl
bound
mov
mov
add
mov
xchg
dec
cs
mov
push
aad
mov
push
mov
adc
pop
or
ds
stc
bound
mov
mov
sbbb
or
push
rorb
mov
push
iret
adc
mov
dec
mov
ds
xchg
xchg
int3
out
xchg
cmp
shlb
ret
sbb
mov
jo
mov
inc
imulb
push
movsb
pop
adc
addl
mov
or
cmp
fistps
ja
data16
fcmovnu
mov
push
sub
mov
cmp
mov
fldl
adc
cmc
mov
xchg
repz
sub
lret
add
pop
sub
jnp
jp
rorl
push
mov
shll
rcll
dec
cmp
jbe
adcb
pop
mov
push
sub
jnp
jnp,pt
fiaddl
in
mov
out
mov
arpl
cmpsb
jne
cmp
ret
leave
dec
push
out
daa
pop
dec
cmp
cmp
popa
xor
adc
cmp
cmp
fisttps
leave
movsb
xchg
cwtl
cwtl
xchg
xchg
outsl
inc
pop
mov
adc
pop
or
into
fcos
test
in
adc
pop
add
lcall
mov
inc
mov
in
test
mov
in
mov
in
mov
imul
and
gs
inc
xchg
int3
add
jne
pop
push
xchg
push
mov
sbb
cmp
dec
pop
inc
push
sub
xor
loopne
and
xchg
stos
xchg
mov
xchg
jmp
insl
push
loopne
jp
loopne
sub
mov
leave
jge
add
sbbl
inc
mov
mov
popf
and
or
clc
dec
xor
or
inc
mov
call
cli
and
sbb
cltd
dec
mov
movsb
add
cli
rcrb
and
xchg
jo
rorb
icebp
ja
daa
daa
xor
fwait
insl
mov
pusha
mull
dec
add
cmp
add
rcrl
sbb
inc
stos
pop
mov
push
adc
insb
cld
sub
adc
inc
imul
cli
pop
or
repnz
stc
mov
mov
xor
adc
pop
dec
or
int3
pop
or
test
fisubrl
ret
push
cwtl
xchg
adc
test
xchg
adc
inc
mov
mov
jmp
mov
lds
adc
mov
pop
data16
shll
push
sub
mov
sub
sub
or
xor
popa
sbb
push
scas
iret
mov
push
je
test
pop
jl
rcrl
mov
or
mov
cmc
jns
dec
cli
clc
cmpsb
cld
pop
mov
mov
in
cmp
fbld
int3
in
pushf
and
sbb
pop
sub
test
bound
insb
outsb
stc
mov
pop
xchg
inc
adc
push
ja
sub
cmp
repz
les
dec
ds
xchg
jge
jno
ds
movsl
imul
push
iret
push
cmp
jecxz
loopne
push
sbb
mov
popl
dec
or
movsl
pop
sbbl
cmp
fsts
push
jg
stc
dec
pop
js
faddl
repz
jnp
jg
addl
aas
in
sbb
add
outsl
mov
gs
test
into
hlt
mov
xlat
enter
into
adc
cmp
fwait
xorl
cmp
outsb
pop
in
and
xor
add
sbb
leave
cld
jns
dec
scas
and
stc
or
cmpl
push
das
sub
fildll
add
adc
scas
sbb
pop
sbb
iret
scas
push
mov
bound
sarb
sub
sahf
cmp
data16
push
dec
cmp
negb
cmp
rcrb
and
sub
adc
out
inc
cli
or
add
sub
xor
lret
push
out
sahf
xor
fcomi
xor
lods
and
into
data16
jecxz
je
jne
les
mov
test
push
cmp
cld
sub
mov
daa
fs
outsb
inc
pop
mov
jno
mov
mov
cmp
inc
stos
pop
dec
lea
into
pop
in
inc
popa
stos
sub
push
sub
ret
mov
sub
lods
cwtl
push
in
mov
cmc
inc
pop
jl
lods
loopne
add
add
xorb
cmpsl
or
imull
jbe
jo
ss
ret
nop
xor
push
jmp
aas
sahf
or
mov
xchg
cs
sbb
cltd
xchg
jmp
cmc
inc
pop
dec
int3
call
pop
xchg
ficomps
mov
sbb
lods
popa
cwtl
mov
loop
mov
insl
mov
clc
inc
adc
stc
ret
xor
sti
cli
sub
lret
xor
cmp
ja
jle
imul
mov
movsl
jbe
add
data16
cmpsb
mov
ficoms
scas
adc
test
mov
bound
mov
loope
cwtl
fdivrs
lods
push
loope
mov
or
push
scas
icebp
push
aaa
xchg
push
mov
je
int
sbb
ret
std
stc
mov
lret
movsb
pop
int
call
out
in
dec
pop
stos
inc
mov
stos
pop
das
stos
fldenv
pop
push
mov
jmp
xchg
and
mov
ret
clc
orb
in
call
cli
loope
daa
sbb
adc
cmpsl
test
inc
insb
fildl
jb
sbb
push
arpl
icebp
jo
dec
mov
imul
popa
dec
outsl
bound
repnz
xchg
or
mov
dec
pop
fwait
decl
mov
data16
lds
jae
in
or
xchg
inc
loope
xchg
mov
fistpl
jb
xchg
push
in
rol
or
push
ja
cwtl
pop
stc
pop
mov
xor
dec
lods
xor
cmpsb
pop
jo
jo
fwait
cmp
loope
push
or
fildll
jb
fwait
ljmp
daa
inc
stc
push
dec
data16
mov
pusha
xor
ret
jmp
sub
xor
movsb
loopne
pusha
mov
cmp
test
fldcw
dec
or
fdivrs
gs
pop
loope
mov
jmp
mov
mov
and
sbb
pop
pop
push
int
arpl
jbe
fdiv
bound
pop
sbb
mov
jo
popa
fdivrl
xchg
cmpsl
xchg
inc
jp
rcrb
xchg
push
lock
lret
mov
sbb
or
lret
xchg
scas
mov
add
jl
les
xchg
out
aas
push
inc
nop
sbb
jp
xchg
sbb
pop
inc
add
inc
inc
push
enter
int
cmp
scas
and
das
sbb
xor
bound
xorb
xchg
lcall
jp
fsubs
cmp
aaa
cld
addb
ds
mov
call
pop
arpl
daa
in
fdivrp
repnz
inc
xchg
sahf
repz
dec
sti
gs
fimuls
imul
ja
sti
jg
js
or
mov
gs
dec
stos
test
call
aad
adc
sbb
lahf
mov
xchg
mov
pop
sub
mov
xchg
in
mov
pop
dec
pandn
jecxz
sub
icebp
loop
iret
dec
jg
es
lea
insb
push
sarl
leave
mov
loopne
imul
fmull
sub
out
mov
gs
sbb
mov
sub
sub
clc
lea
adc
jns
mov
mov
hlt
ret
imul
inc
cmp
lea
bound
sbb
lods
addr16
je
aaa
das
xchg
inc
cmpsb
loopne
ret
mov
aaa
pushf
fsubs
or
mov
pop
sub
push
dec
pusha
dec
mov
mov
inc
or
jbe
in
dec
mov
jge
pop
pusha
pusha
xchg
std
mov
bound
rorl
xchg
aas
mov
xor
fdivr
xor
pushf
rolb
cwtl
inc
adc
xor
notb
in
push
je
or
pop
loopne
testl
inc
cwtl
and
mov
adc
or
popf
push
sahf
add
imul
lds
scas
aam
xchg
or
mov
jne
movb
les
cmp
mov
mov
rcr
jle
mov
pop
sbb
jg
add
push
or
cmc
push
inc
dec
pop
pop
inc
push
sub
xchg
push
mov
mov
adc
mov
leave
xor
lret
and
daa
das
jg
mov
add
ss
cmc
cmpsl
mov
and
push
inc
aam
dec
arpl
mov
and
stos
mov
adc
es
insl
push
mov
xor
xchg
fwait
pop
insb
int3
push
fisubl
pop
push
sbb
adc
mov
inc
lret
add
jae
xchg
adc
sbb
ds
push
sbb
mov
xchg
mov
push
popa
inc
leave
adc
orl
arpl
sbb
das
push
mov
ret
pop
fucomip
mov
clc
cli
cmc
inc
in
inc
push
mov
inc
push
arpl
scas
fs
xchg
cmpsb
cmp
sbb
sub
incl
dec
pop
xchg
out
mov
cmp
insl
cs
nop
add
sti
pop
or
xchg
sub
cli
push
xor
repnz
inc
into
arpl
xchg
stc
jmp
xchg
fisubrs
mov
pop
pop
add
lods
push
mov
scas
out
lea
sbb
enter
jl
and
dec
pop
mov
mov
and
movsb
mov
enter
mov
jmp
les
call
mov
clc
mov
popa
push
pop
fdivp
fwait
adc
dec
shrl
jno
pop
mov
addr16
fwait
bound
xchg
insb
mov
pusha
es
clc
movsb
into
or
xchg
in
mov
enter
mov
or
xorl
popf
xor
cmp
mov
leave
pop
add
clc
jns
std
xchg
mov
pop
sahf
mov
rcrl
dec
mov
cwtl
mov
dec
push
mov
xchg
loope
inc
out
cmp
sti
xor
cmp
ss
dec
push
pop
popa
stc
inc
adc
inc
ss
add
imul
cmpsb
mov
xchg
leave
aas
mov
mov
lods
lods
pop
xchg
sbb
cmpsb
inc
xchg
adc
cmp
inc
es
bound
xor
out
movsb
lea
xchg
push
orb
mov
jge
icebp
stos
cmpsl
fcompl
shrb
pop
faddl
cmp
mov
inc
lahf
mov
call
in
test
xor
enter
sub
in
cltd
in
enter
add
insl
lret
jno
testl
sbb
xchg
push
fmull
adc
xchg
incb
lea
push
push
std
add
inc
imul
mov
push
mov
mov
inc
ljmp
or
jo
cmc
sbb
sub
dec
iret
nop
jo
dec
mov
add
mov
psubusb
mov
adc
xchg
pushf
inc
fs
pop
fsts
inc
in
loope
mov
addr16
into
shlb
mov
sbb
insb
js
lods
mov
mov
xor
jno
xchg
mov
adc
mov
cmp
ret
lods
pop
pop
cs
daa
sbb
nop
fstpl
add
fimull
addr16
pop
cmp
mov
aad
mov
stc
cmp
cmp
insl
lds
fnstcw
and
inc
sti
ss
ljmp
pop
dec
lahf
mov
mov
sub
mov
mov
push
movl
nop
ja
shll
lea
lods
push
mov
jne
push
std
or
dec
lret
mov
jp
ret
jne
jb
popf
cmp
test
cld
push
scas
mov
mov
mov
neg
in
mov
fdivrs
xor
push
sbb
pop
push
out
loop
shlb
jb
adc
or
jnp
xchg
xor
xor
sbb
mov
inc
scas
out
iret
decb
outsl
mov
scas
gs
xor
fbstp
push
fwait
int
and
lods
dec
call
adc
add
std
cmp
xchg
xchg
mov
pop
add
shrl
notb
into
mov
cmp
push
rcll
xchg
idivl
mov
imul
inc
outsl
nop
add
icebp
jbe
adc
sahf
les
inc
adc
push
or
add
loopne
jle
lods
xchg
sub
adc
aaa
or
imul
out
sbb
mov
mov
aad
or
std
cwtl
add
mov
inc
pop
pushf
in
inc
loope
negb
test
xlat
xchg
mov
aas
dec
bound
mov
shl
mov
sbb
and
cmp
inc
cwtl
clc
loopne
rclb
push
xchg
aas
mov
add
jnp
cmp
fwait
out
jle
inc
iret
jge
xchg
scas
push
mov
adc
pop
adc
stos
push
fists
sub
rcrl
movsl
cmpsl
cmp
or
mov
imul
adc
cmc
cld
jecxz
pop
xchg
xor
adc
cld
jno
push
mov
add
out
jmp
imul
xchg
ficomps
mov
mov
mov
ss
int
xchg
pushf
fadds
inc
cs
stc
daa
rcrb
inc
ja
and
cli
mov
mov
pop
add
mov
adc
std
add
idivl
jge
cmpsb
test
adc
jns
rorl
les
inc
sub
negl
das
stos
xor
pop
test
xor
fadd
jb
hlt
xor
cmp
fdivs
stc
lods
pop
sub
mov
xor
jns
ja
in
mov
mov
cmp
fisttpll
subl
add
movsb
scas
mov
movsb
mov
lods
xchg
xchg
pop
mov
xchg
cs
and
sbb
add
gs
or
xor
mov
cwtl
cltd
testl
je,pt
push
movsl
pop
mov
aam
sbb
btc
push
aad
jmp
or
add
das
xor
mov
inc
push
pop
add
jl
mov
xor
aad
and
ja
mov
das
fnsave
cltd
add
xchg
add
jg
dec
xor
xor
adc
xchg
or
nop
dec
mov
mov
int3
popa
and
out
jle
pop
je
mov
scas
sbb
inc
jae
xchg
imul
loop
pop
lods
and
push
sub
sbb
or
mov
and
clc
push
ds
jmp
notb
cmp
je
jle
pusha
sahf
jge
pop
pusha
sbb
mov
rorl
xchg
mov
adc
adc
or
rorb
test
jecxz
rolb
jns
xor
scas
sbb
sub
stos
cmpsl
mov
xchg
in
jno
and
orb
std
decb
push
jnp
sub
fnstsw
and
sub
cs
mov
push
adc
pop
jnp
cli
mov
stos
aaa
sub
sbb
mov
dec
sbb
das
xchg
cli
push
cltd
and
call
xor
push
ret
dec
mov
dec
lock
fisttps
or
cld
cwtl
mov
loopne
lret
mov
das
mov
int3
icebp
cmp
adc
mov
cmp
rcl
cld
dec
fldenv
xlat
aam
fldt
in
inc
insb
ret
dec
ret
popf
mov
jnp
cmp
push
xchg
rcl
shll
ret
inc
andl
dec
xchg
pop
imul
mov
adc
xor
movb
push
push
push
hlt
mov
add
movsl
xor
xchg
mov
jge
je
lock
jo
xor
jmp
out
mov
xor
mov
int
xchg
rcll
jbe
sahf
mov
sub
rol
jge
sub
mov
test
aad
sub
and
inc
cli
jb
lret
sbb
dec
sbb
cs
jl
rorb
jl
out
mov
in
inc
mov
and
or
in
cmp
push
call
jp
mov
sub
out
sbb
in
test
stc
xlat
jmp
xor
subl
pop
loop
das
mov
push
ja
pushf
repnz
hlt
pop
test
adc
dec
out
sub
push
sbb
js
cmp
inc
into
sti
frstpm(287
bound
rclb
jnp
xchg
fsubrl
sub
bound
loope
add
popf
gs
lret
loop
fdivs
push
jg
aam
xchg
mov
pop
lods
fldl
dec
inc
fcoml
das
inc
fcomps
inc
push
mov
sub
in
dec
xor
fdiv
ljmp
dec
inc
cmp
in
shl
leave
pop
mov
sub
mov
js
push
bound
jmp
dec
les
rcrl
ja
jne
les
and
jns
call
scas
call
adc
mov
cld
mov
mov
dec
mov
test
cmpl
aad
mov
and
out
sbb
sti
jbe
outsl
cmp
test
leave
neg
mov
dec
xchg
les
loop
push
lds
push
and
xor
gs
adc
mov
insb
stos
adc
insb
aam
or
ret
mov
fnstsw
adc
inc
movsb
imul
xchg
jnp
adc
push
or
sbb
iret
push
mov
xchg
jno
or
das
fisttpll
int
mov
vmovd
push
lcall
movsb
mov
add
ret
jecxz
push
ja
jb
in
dec
push
add
jo
test
leave
ja
or
lods
and
lret
sub
pop
hlt
mov
fs
enter
test
xchg
andb
mov
jl
frstpm(287
jl
ljmp
pop
xlat
adc
adc
push
add
sub
mov
int3
out
jne
mov
inc
sahf
in
adc
imul
push
out
mov
int3
mov
jmp
push
aas
pop
ret
pop
and
mov
push
shrd
mov
mov
dec
or
sub
mov
sar
ja
iret
pop
out
mov
cld
loopne
xlat
lret
add
sub
mov
fsub
movsb
in
xor
gs
dec
mov
push
jb
mov
lds
int3
add
push
icebp
inc
sub
xlat
sub
int3
xor
and
mov
cmpsl
pop
cltd
xorb
xchg
mov
sbb
xchg
rcr
mulb
inc
mov
rcrl
add
je
cld
sbb
leave
lods
in
mov
into
mov
jge
inc
dec
cltd
dec
pop
bound
ljmp
mov
jle
popw
pushf
dec
adc
andl
adc
push
xchg
xor
popa
sub
lahf
sbb
pop
movsb
jae
push
xchg
add
xchg
mov
and
sub
push
in
sbb
divl
lahf
out
mov
inc
xchg
mov
adc
push
fldl
das
mov
in
in
inc
into
inc
shrl
xor
test
movsb
pusha
imulb
xchg
jne
inc
gs
lcall
push
bound
mov
jb
mov
aam
leave
inc
mov
mov
and
test
or
lock
dec
subb
or
mov
aam
in
jb
stos
rorl
aam
clc
pop
loop
xor
xchg
push
xchg
popa
xor
jae
mov
jp
xchg
fisubrs
int
inc
mov
jg
jmp
fsubl
push
xchg
xchg
xor
sbb
pop
insb
pushf
test
leave
push
cmp
rcll
add
ret
cmpsb
xor
leave
rcll
in
int3
idivl
inc
inc
cmp
sbb
cmpsl
mov
loop
jmp
shlb
xchg
divb
hlt
xlat
js
stos
pop
xlat
pop
leave
les
sbb
arpl
fcompl
rep
fs
mov
mov
roll
and
jnp
pop
sub
jle
repz
sbb
loopne
jl
push
and
mov
fwait
and
fidivl
or
inc
push
hlt
xchg
bound
insl
shlb
popf
imul
mov
or
imul
sub
mov
mov
repz
int
jl
mov
jge
mov
xchg
xchg
push
les
loop
incb
add
enter
lahf
push
shrb
cmp
sub
fwait
add
scas
cmp
mov
mul
outsb
and
imul
push
cwtl
mov
push
push
mov
add
dec
and
pushf
sti
subb
jecxz
cmc
jecxz
rolb
addl
lea
ret
ret
cltd
test
loope
pop
cmp
jo
ds
gs
push
mov
jnp
cwtl
push
std
xlat
add
sahf
aad
xchg
in
mov
out
push
sbb
stos
cmpsl
roll
mov
shrl
movsb
push
aam
push
imul
jg
and
inc
imul
push
mov
inc
mov
aas
jmp
inc
mov
lds
frstor
jge
rcl
dec
lcall
stos
cld
lret
int
out
pop
xchg
mov
ret
out
pusha
gs
int3
bound
cmpsl
cmc
leave
inc
mov
fmulp
dec
subb
fidivs
pop
popf
ror
mov
cwtl
and
mov
sbbb
sub
xor
cwtl
xchg
cmpsl
rcll
push
cmp
push
push
xor
dec
leave
pop
loop
add
mov
loope
out
dec
sarl
jne
mov
testb
lods
or
jns
pop
xchg
sbb
cmp
cmp
ror
popf
sti
xchg
sbb
rcl
jb
ds
std
or
cmc
test
inc
xchg
fistps
enter
or
sbbb
testb
and
in
call
pushf
fsubr
addr16
sub
scas
dec
in
sub
mov
movsl
repz
lret
cmp
test
pop
movsb
sbb
lret
sub
int3
jg
repnz
mov
push
add
push
cltd
dec
shl
scas
fstps
dec
rorb
jb
rolb
nop
pop
enter
gs
les
xlat
cmp
rol
xchg
push
fadds
lcall
pop
sbb
or
insb
xor
imul
jmp
mov
fisubl
fcmovnbe
mov
mov
into
inc
out
insb
jo
mov
pusha
fnstsw
lods
mov
jno
xor
push
cltd
fldl
inc
sbb
dec
sbb
jno
push
pop
lods
cltd
cld
ret
mov
sbb
lds
or
adc
dec
jp
inc
lock
lcall
jp
lods
out
in
xor
lahf
insb
orl
push
aam
hlt
stos
aad
and
dec
push
pop
dec
paddb
rcrl
popa
es
sbb
mov
sub
fistpll
fcompl
push
mov
push
das
shrb
inc
pusha
mov
pop
mov
scas
add
lea
aaa
daa
sbb
dec
jnp
sbb
mov
inc
lret
rorl
lret
ja
lret
insb
jg
inc
and
stos
lds
push
adc
inc
xor
mov
sub
fs
sub
xchg
cmp
aam
mov
and
and
dec
mov
insb
cmp
fsubrs
jge
ljmp
pop
add
jnp
sti
sub
cmp
addl
cmp
or
sbb
out
shrl
cmp
out
dec
imul
test
pusha
sahf
dec
cmpb
mov
sub
fucomi
jle
les
mov
jnp
dec
orb
or
xor
dec
and
aad
scas
push
mov
mov
mov
jno
in
inc
ss
xchg
aad
sub
cmp
push
fiadds
sbb
sbb
jle
aam
mov
mov
mov
loop
mov
into
sub
mov
cli
jg
dec
and
jne
cli
mov
mov
test
lcall
push
sub
mov
pop
int3
pop
imul
mov
sbb
fldl
out
cmp
cmp
repz
fidivl
cmc
dec
subl
dec
test
inc
jecxz
sbbl
lods
xor
push
adcb
mov
cmp
xchg
cmp
popa
cmp
ret
lock
add
dec
nop
mov
mov
bound
out
repz
dec
and
into
out
in
or
push
mov
mov
aas
sbb
mov
orl
jmp
popa
cltd
test
stos
addr16
pop
fs
jl
ret
test
outsl
cmp
adcl
aad
inc
in
or
movsl
pusha
push
jo
mov
or
push
out
jo
iret
pop
sub
das
push
mov
out
jp
jb
adcb
dec
xor
push
sbb
dec
dec
cmc
adc
nop
and
jne
inc
das
cmp
js
adc
js
ficompl
dec
jg
adc
out
aas
adc
sub
bound
imull
stos
push
dec
add
int3
cltd
dec
inc
mov
loope
push
aaa
stc
test
pop
inc
iret
jae
shr
aaa
cmp
xor
or
movq
daa
mov
lds
inc
xchg
in
add
or
sub
popa
mov
lret
sub
mov
test
jg
cmp
add
lret
std
or
cld
sbb
mov
mov
cmp
pop
insb
test
arpl
cmpsl
push
insl
flds
aad
test
cmc
sarl
in
mov
mov
hlt
pop
push
push
xor
in
pop
cmp
je,pt
sbb
sbb
lods
out
adc
dec
jnp
fs
mov
jb
jle
pusha
fstps
enter
sub
and
mov
lds
icebp
mov
stos
repz
rol
jo
int
dec
sbb
add
insb
cmp
mov
dec
lods
scas
pop
push
cmpsb
push
pop
sbb
mull
adc
fsubrs
loope
push
mov
out
mov
push
cld
inc
cwtl
dec
xchg
xor
scas
dec
pop
or
leave
mov
cmpsb
xor
pop
dec
mov
xor
mov
insl
lret
inc
dec
adc
sti
pop
fsubrl
push
pop
adcb
sti
movsl
cltd
pusha
inc
adc
mov
in
dec
dec
mov
cli
sbb
xor
dec
jle
hlt
jp
js
cmp
dec
shrb
push
lds
std
dec
mov
xor
fidivl
mov
lds
mov
in
insl
and
icebp
mov
mov
sbb
mov
push
mov
push
xchg
jmp
or
imul
mov
je
xchg
outsb
mov
imul
gs
adc
arpl
stc
arpl
mov
mov
sbb
aas
push
and
and
jnp
imul
cmpsl
into
xchg
mov
ljmp
lcall
jmp
test
inc
adcb
je
lds
mov
mov
fst
xchg
xchg
cld
or
stc
sub
int
jns
stc
shll
adc
mov
sbb
add
push
pushf
mov
ja
stos
adc
inc
pminub
dec
icebp
cmpsl
fildl
les
mov
mov
fldcw
pushf
and
dec
shll
or
push
nop
pop
jmp
push
mov
aaa
add
arpl
or
add
movsl
mull
fldt
subl
jne
mov
adc
js
rcrl
sbb
sbb
or
out
mov
js
push
movups
call
mov
rcrb
out
inc
fwait
mov
aaa
lea
push
inc
sub
lret
iret
ljmp
mov
iret
into
sbb
std
shl
fwait
dec
inc
inc
and
mov
cmp
inc
mov
sub
out
mov
sub
cmp
xor
lahf
pop
fdivrl
test
adc
cmovle
ljmp
jns
add
pop
xchg
mov
pop
ds
mov
jl
mov
mov
sahf
and
and
in
ljmp
add
mov
and
mov
ss
mov
fisubs
lret
dec
in
pop
outsb
add
lods
jmp
daa
test
dec
or
lret
imul
xchg
and
mov
arpl
stos
aad
pop
xor
push
push
xchg
xlat
scas
fcoms
ja
xchg
xchg
outsl
nop
out
cwtl
push
loope
outsl
and
outsb
push
shll
push
fidivrl
mov
out
inc
in
push
mov
mov
cmpsl
das
fwait
mov
cmp
pop
cmc
mov
popf
sub
fldt
push
pop
scas
jg
popa
jno
cmp
and
add
test
pusha
jb
jmp
or
imul
and
lea
push
inc
pop
xchg
adc
dec
dec
cmp
or
pop
or
sbb
sub
inc
aas
lret
sub
fwait
popf
cld
inc
push
mov
mov
ret
xchg
dec
sub
dec
mov
pop
out
stc
jecxz
sbbl
push
std
int
and
mov
rcll
jp
xor
lahf
cmp
pop
pop
xor
das
adc
loope
js
ret
pop
adc
imul
mov
mov
stos
lret
xchg
mov
cmpsl
sbb
in
push
xor
ret
fcmovnb
cld
int3
mov
push
outsl
adc
mov
xor
sbb
lcall
cmp
xor
adc
dec
leave
add
pushf
push
xchg
and
out
rcrl
out
shr
nop
dec
test
or
jecxz
mov
dec
jae
shlb
pop
or
es
out
dec
inc
rol
arpl
cmp
clc
mov
xor
add
rcrb
dec
mov
cmpsb
out
push
sbb
sbb
test
lret
jl
stos
fistpll
fnsetpm(287
lahf
pop
cmp
outsb
pmulhw
sti
mov
ljmp
mov
fs
cwtl
push
pop
xchg
mov
lret
subb
fbld
sbb
mov
cmpsb
adc
inc
push
mov
push
js
pop
mov
xor
inc
inc
dec
sti
fwait
lret
roll
mov
dec
xchg
xchg
scas
lds
xchg
scas
cmp
mov
ret
pushf
stos
rcrb
sbb
divl
mov
dec
movsl
call
sar
jle
repz
bnd
jl
xor
imul
insl
mov
daa
add
push
fs
cltd
popf
ret
mov
repnz
mov
mov
xchg
das
scas
iret
mov
dec
cmp
add
pop
or
hlt
movsb
and
negl
rcl
mov
xchg
pop
fiaddl
add
cmp
mov
in
mov
sub
aam
push
cmp
jle
gs
mov
mov
repz
sarb
out
mov
fistpl
in
add
out
and
cmp
mov
test
test
js
mov
test
add
mov
and
jle
and
in
fdivrp
xor
mull
dec
or
and
and
fucom
jo
out
orl
and
lods
outsl
or
xchg
or
jecxz
repz
ds
mov
mov
jb
rclb
mov
or
bound
add
xchg
addr16
rol
push
push
popf
psubsb
cmp
jl
xchg
cmp
ljmp
sub
push
push
rorl
push
popa
mov
sbb
and
jb
outsl
xchg
pop
jb
enter
mov
adc
pop
cmc
cmpsb
xchg
pushf
mov
push
loop
into
icebp
adc
sub
ljmp
xor
push
mov
xlat
cmpsl
xchg
out
outsb
out
aaa
adc
pop
sbb
mov
adc
daa
ja
insb
incl
popa
jo
and
or
cld
and
sbbb
mov
lods
jno
xchg
testl
pop
mov
and
cs
or
dec
cltd
and
loop
int3
pop
sub
lds
mov
xchg
and
cmp
xchg
bts
push
aad
rcrl
out
aad
cld
inc
sbb
lret
sbb
inc
test
push
push
sahf
sbb
rolb
cmp
inc
or
stos
scas
dec
fmul
loop
ljmp
iret
mov
or
dec
ret
addr16
mov
shrl
cwtl
pop
push
dec
subb
sub
xchg
rcrl
mov
sbb
push
cs
sar
xor
je
xchg
sub
lahf
shr
cmp
sbb
xchg
bound
test
jecxz
adc
cmp
push
or
stos
jp
repnz
sbb
shl
mov
loope
sarl
pop
jae
mov
out
aas
xchg
ss
sarl
or
dec
jmp
repz
mov
sub
push
lcall
lahf
in
std
nop
or
push
jp
jecxz
aaa
test
sub
or
addr16
rclb
icebp
scas
gs
sbb
adc
cmp
repnz
add
cmpsl
add
ja
pop
adc
cli
push
mov
xchg
imul
movsl
clc
in
jge
dec
or
lds
iret
pop
sbb
jmp
dec
out
aam
sbb
inc
mov
jns
lea
pusha
sub
cmp
add
cltd
add
sub
mov
adc
xchg
cli
inc
icebp
pop
xlat
into
cmc
in
jecxz
sbbl
push
mov
xor
rorb
icebp
xchg
mov
bound
es
jae
fcoms
dec
sbb
les
jbe
ret
sbb
xchg
loope
mov
push
cld
outsl
or
ljmp
adc
mov
setl
mov
or
outsb
dec
jg
jp
aas
xchg
push
dec
or
fistpll
aam
shl
xor
out
test
enter
pop
subl
mov
inc
pusha
cld
pop
int
fadd
jge
mov
adc
mov
adc
sbb
mov
ret
daa
dec
roll
and
jl
orb
mov
in
push
sti
push
xor
mov
lods
mov
jecxz
data16
add
div
add
dec
cmpsb
jbe
test
ja
and
xchg
lds
in
notl
sub
mov
mov
lea
lret
pop
cmp
fwait
js
xchg
adcb
dec
sbb
lret
mov
std
mov
aam
pushf
sbb
ljmp
push
inc
sub
loope
dec
or
pop
ljmp
pop
jmp
mov
dec
mulb
xlat
daa
push
push
nop
out
jp
lds
jnp
call
dec
inc
mov
push
mov
mov
xchg
aas
cld
sahf
rorl
adc
stos
rcrl
mov
ret
inc
xor
je
add
cmp
xor
sbb
mov
out
pop
add
out
push
xor
pop
cmp
mov
jnp
or
push
outsl
in
fstps
fistl
jns
sbb
xchg
push
sub
xor
pop
dec
push
rcll
in
push
js
mov
popw
fwait
lret
xlat
mov
decb
pushf
xchg
pop
add
push
jecxz
cli
int3
les
inc
inc
addr16
outsl
js
flds
pop
xchg
mov
sqrtps
enter
jns
pop
mov
rol
outsl
ss
imul
dec
push
in
rcrb
movsb
and
jbe
decb
nop
aas
cs
pop
push
jmp
ja
sbb
stos
sub
mov
in
addr16
push
pop
sahf
mov
test
pop
jecxz
call
ds
cmp
xchg
xor
cmp
mov
add
stc
stos
pusha
rclb
or
and
pop
add
hlt
out
dec
push
fxch
dec
sub
ljmp
hlt
or
mov
fists
sub
inc
es
fmuls
icebp
cmp
pusha
sub
insw
fdivrl
fwait
popa
fidivs
sbb
aad
setns
jne
xchg
movl
fsts
fwait
hlt
xchg
mov
push
jae
mov
xchg
jns
push
sub
aaa
xchg
push
sbb
imull
jns
push
les
and
sbb
xchg
lret
fdivrs
ds
dec
js
sbb
dec
leave
pop
add
sbb
es
and
mov
decb
repz
pop
movsb
inc
push
add
jmp
in
mov
add
sbb
movsb
dec
pop
dec
adc
add
es
adc
push
loopne
pop
daa
inc
mov
lcall
pusha
cmp
jae
es
icebp
movsb
imul
inc
add
cmpsb
push
cmp
xor
sub
adc
popa
iret
sbb
mov
lds
mov
xor
scas
test
jl
enter
cmpsb
mov
jb
xor
cmp
sub
mov
mov
mov
xor
sarb
test
or
bound
sbb
cs
dec
test
loop
fwait
pop
jne
push
enter
cmp
push
jo
das
mov
mov
lds
and
outsl
jg
cli
bound
xchg
shr
test
repz
aaa
data16
fdivrl
ljmp
mov
ss
shlb
xchg
pop
pop
fscale
popa
push
mov
jmp
pushf
mov
cmp
sti
xchg
inc
lods
mov
pop
push
mov
cwtl
scas
int3
and
rcll
in
shlb
dec
enter
xor
lret
or
lods
mov
sub
mov
sbb
sahf
int
outsb
iret
imul
in
jno
push
mov
inc
pusha
lods
or
mov
aaa
adc
pop
push
xor
into
jge
int3
lods
or
into
adc
pop
xor
xor
ret
inc
repz
sbb
xchg
sub
test
and
fstpl
pop
mov
push
adc
adc
cs
push
cwtl
pop
cmp
fsts
dec
mov
inc
aaa
popa
imul
inc
lods
xor
fdivrs
mov
cmp
cmc
mov
jge
arpl
adc
inc
popf
mov
stos
les
sub
icebp
outsb
shl
mov
adc
ret
imul
and
addr16
xchg
fs
inc
xchg
dec
lods
cmc
and
movaps
das
dec
mov
aas
iret
stos
pusha
mov
sub
movsl
sti
and
jns
cmp
aaa
add
into
pop
or
cmp
push
add
in
sub
inc
mov
sbb
inc
adc
in
mov
xchg
adc
or
sbb
cmp
cmp
jnp
lods
incl
add
or
testl
adc
stos
mov
pop
xchg
daa
cmpsb
insl
xchg
arpl
push
jo
mov
insb
inc
dec
lock
inc
pop
decb
push
repz
stos
fistl
aas
dec
inc
aad
jo
mull
cltd
in
push
jl
pop
jle
setb
fcoml
int
add
mov
daa
ds
jo
lret
mov
mov
xor
pop
movb
dec
subl
inc
adc
mov
je
mov
mov
ljmp
in
and
xor
loopne
sub
movsb
xor
lods
jnp
and
in
inc
sti
test
pop
xchg
jle
cs
push
jae
fdivs
out
adc
lcall
sbb
sahf
movb
data16
in
mov
xor
subb
nop
out
mov
loop
addb
mov
negb
ret
lcall
adc
pop
mov
outsl
icebp
mov
mov
inc
sbb
call
mov
fwait
pushf
pop
int3
in
sub
xlat
jae
pop
pusha
mov
les
fiaddl
fbstp
inc
xor
xchg
pop
repnz
fnclex
cwtl
cmc
mov
add
cmpl
les
mov
popa
mov
push
lret
outsl
xchg
mov
mov
leave
stos
adc
pop
sub
xchg
xor
or
popf
bound
out
xor
xchg
test
call
int
dec
in
sahf
xchg
push
pop
xchg
daa
xor
mov
hlt
sub
add
and
addr16
adc
rcll
lcall
aaa
shr
mov
popf
xchg
fisttpl
or
adc
fisttps
sbbl
std
jmp
xchg
fnstenv
push
loop
ret
mov
sub
cwtl
dec
add
test
dec
rorl
loop
jno
and
pop
xor
jae
pop
stos
jg
movsl
into
lea
sub
xor
mov
sbb
push
dec
mov
or
xor
testb
push
iret
xor
and
es
xchg
dec
fistpl
sbb
lods
in
aaa
add
push
popf
mulb
mov
fiaddl
or
dec
mov
repz
in
sbb
sbb
imull
arpl
in
scas
test
mov
nop
cmp
hlt
adc
movsl
mov
push
sub
lcall
sub
cltd
stos
imul
testl
xchg
xor
fsubr
inc
leave
popf
mov
mov
cmp
iret
sbb
jnp
ret
jb
fcoml
mov
cmp
loope
icebp
aas
pop
out
push
xor
jmp
mov
stos
gs
jne
cmp
adc
sbb
or
sbb
and
mov
mov
push
jl
mov
sub
fs
xchg
popf
cli
lcall
shrl
movsb
xor
mov
cmp
cwtl
xchg
mov
mov
adc
out
ds
repz
enter
jns
jae
xor
mov
add
das
int3
push
sub
das
ret
inc
mov
out
mov
and
cmp
jae
jns
hlt
push
cmp
cld
decl
enter
push
cmp
clc
xor
push
and
push
test
or
inc
les
lds
sub
mov
sarb
sub
mov
inc
inc
xchg
inc
pop
test
dec
mov
icebp
int3
call
mov
and
sbb
mov
sub
cmpsb
push
ds
mov
dec
rorb
sar
cwtl
jg
shrl
pop
fucomi
dec
adc
mov
add
filds
sti
sbb
das
push
int3
ret
cmp
cld
adc
and
adc
or
outsb
imulb
sub
xchg
xchg
pushl
repnz
push
test
jmp
mov
mov
mov
cmp
xchg
push
xchg
inc
cli
test
addl
push
bnd
dec
or
aas
stos
mov
jp
mov
pop
push
sti
fcmovnbe
aas
jle
xchg
out
or
rcrl
arpl
into
lock
aad
add
mov
pop
xor
lret
push
and
cmp
aad
fidivrl
dec
mov
out
outsl
mov
inc
pop
jl
adc
pop
mov
iret
pop
mov
loop
scas
icebp
hlt
push
in
pop
pop
lcall
and
mov
stc
mov
fstpt
sti
jl
jmp
rclb
repnz
sub
xchg
fisubrs
jne
mov
cwtl
shll
mov
sub
xor
xchg
cmpsl
and
jae
hlt
outsl
pop
push
jmp
pusha
pop
dec
imulb
in
cld
ficoml
aaa
lret
mov
lods
add
cmp
in
or
nop
xchg
int
push
dec
out
or
mov
or
jmp
lods
adc
xchg
inc
inc
inc
sub
cwtl
fwait
jl
ljmp
repz
mov
in
mov
sets
cld
aad
das
or
std
mov
mov
xor
mov
cmp
rorb
mov
stos
insl
jne
jg
sti
bound
leave
pusha
pop
jb
sub
mov
push
int
lahf
jne
lret
enter
cmp
mov
in
and
mov
insb
test
inc
pop
roll
push
inc
cld
jnp
scas
mov
push
add
xchg
xchg
fsts
bound
inc
sbb
mov
inc
popf
adc
adc
jno
cmpsb
dec
sub
int
or
cmp
push
aas
movsl
sub
in
cmpb
popf
inc
push
movsl
adc
adc
dec
cmpb
or
rep
icebp
cltd
sbb
pop
and
jp
pop
xor
lock
stos
xchg
pop
push
push
push
adc
jp
sbb
sub
or
mov
push
std
mov
jae
out
mov
sti
test
cmp
cmpl
insl
movsb
add
mov
enter
xchg
sub
stos
cmp
test
mov
add
cs
push
andl
push
xor
mov
cwtl
test
inc
and
push
loopne
test
sahf
pop
pop
adc
lock
inc
dec
push
fwait
stc
inc
mov
inc
xchg
iret
ret
adc
lcall
movsl
push
inc
lea
add
sbb
rorl
inc
addr16
inc
cmpsl
pusha
jo
sub
mov
pop
sub
dec
mov
push
leave
fildll
add
or
pop
int3
xchg
push
movl
push
das
jmp
inc
sarl
pop
xchg
js
jns
pop
xchg
add
xchg
outsl
xchg
aas
jo
dec
mov
mov
pop
notb
adc
jge
cli
lods
nop
xlat
mov
pop
jns
dec
pop
add
sahf
xor
in
mov
cmpsl
pop
and
lcall
clc
inc
pushf
sti
adc
test
pop
sub
loope
rcrb
fwait
and
push
jne
inc
push
cmp
loope
imul
out
out
dec
popa
gs
pop
orb
mov
jns
rorl
mov
mov
inc
jnp
adc
jmp
push
stos
fidivs
jb
jmp
and
repz
inc
test
fdivl
stos
ds
js
aam
iret
jnp
and
out
adc
and
mov
push
lea
xchg
mov
ja
mov
mov
cmp
inc
ljmp
pop
push
loope
pop
sub
out
nop
inc
sub
insl
dec
dec
js
or
int
dec
ljmp
leave
test
fimuls
call
cmpsb
push
pop
imul
jno
dec
decb
test
subb
and
lcall
mov
movsb
outsl
rcr
pop
mov
push
sub
mov
test
and
jb
jb
lret
popa
xchg
cmp
jb
arpl
shrl
lods
sarb
movsl
jp
enter
cs
add
dec
cmp
stc
test
pop
or
push
sbb
dec
test
movsb
mov
rolb
lds
mov
ss
inc
push
roll
adc
cmc
mov
bnd
aad
clc
cmpsb
aas
aas
insb
ret
dec
sar
xor
int3
adc
ror
out
cmp
dec
push
inc
xchg
rorl
mov
inc
xor
jo
les
xchg
push
aaa
push
pop
mov
or
mov
arpl
sbb
xchg
mov
sbb
test
sub
repz
sub
cwtl
lea
add
dec
jge
or
outsb
lds
xchg
scas
add
jbe
or
stos
sbb
push
daa
jp
lret
imull
mov
mov
hlt
mov
push
movsb
clc
push
mov
repz
xor
shrb
lods
lds
push
adc
inc
inc
mov
sti
xchg
inc
push
mov
xor
or
mov
pop
mov
enter
outsl
movsl
cmp
pop
xchg
or
fs
popf
dec
xor
cmpsl
scas
outsl
je
outsb
pop
popf
inc
movl
popa
outsb
pop
imul
mov
daa
xchg
pop
and
cli
add
movsb
lods
mov
dec
bound
dec
idivb
stc
mov
shlb
movb
popf
dec
shl
fisubrs
xchg
cld
mov
call
fdivr
or
lret
pushf
icebp
negb
jle
add
jnp
fcompl
sbb
and
fdivr
or
mov
jo
idiv
das
pushf
mov
daa
dec
call
loopne
lcall
mov
jo
popf
aaa
jno
lea
xor
stc
xor
mov
bound
ss
rcl
xchg
into
pop
push
mov
fnsave
stos
roll
cltd
loope
inc
pop
cwtl
dec
fcmovu
inc
inc
push
push
xor
or
pop
xchg
movsl
mov
cmp
mov
pop
in
pop
les
sub
dec
push
dec
mov
cmp
shrl
sbb
nop
xor
sub
fsubs
int3
test
out
cmp
leave
mov
out
sbb
push
cltd
out
ss
dec
xchg
pop
and
cmp
mov
shll
jb
pop
or
fxtract
adc
cld
mov
dec
ds
sbb
std
xor
lahf
cmp
inc
mov
dec
addr16
stos
adc
pop
leave
xchg
add
and
jb
rol
cmp
lahf
lds
mov
pop
fwait
sbb
inc
fs
sarb
lcall
cwtl
ss
and
int
fistl
scas
das
shlb
cmc
xchg
push
push
js
jg
pop
mov
jp
ja
testl
call
loope
push
sbb
jnp
fwait
push
in
or
mov
divl
push
push
sbb
sbb
and
outsb
sbb
call
lods
iret
add
das
fnsave
std
sub
or
xlat
mov
push
and
cltd
push
movsb
cld
adc
sub
pushf
je
into
stos
xchg
mov
shr
xchg
xchg
arpl
lcall
stos
pop
or
insl
imul
int
mov
mov
mov
fbstp
mov
scas
das
int3
fwait
push
add
fnstenv
out
xor
pop
inc
mov
test
adcb
js
arpl
pop
and
jecxz
add
sub
mov
lea
std
jb
dec
xchg
movsb
iret
aam
das
inc
mov
fdivr
push
andb
pop
loope
repz
in
cli
mov
rclb
push
push
negb
shrl
test
or
outsl
jg
mov
les
fidivrs
sub
add
adc
or
mov
mov
aas
lcall
test
ja
push
jb
int3
icebp
aaa
in
imul
push
popa
jmp
mov
stos
fisubrs
cs
jp
addb
push
lods
rolb
push
rclb
fistl
jbe
push
mov
inc
mov
insb
lret
inc
and
and
pop
test
sbb
add
pop
xor
orb
iret
add
pop
addr16
push
pop
popf
dec
and
ret
add
cs
mov
cltd
dec
xor
mov
mov
push
popl
cmp
sub
idiv
or
hlt
aaa
loope
ljmp
jo
fwait
sbb
mov
dec
aas
mov
rorb
nop
xchg
nop
repz
fs
icebp
sahf
adc
enter
xlat
pop
sbb
ja
inc
outsl
aaa
mov
sti
mov
aam
jmp
mov
aaa
jb
push
mov
scas
pop
icebp
scas
fnstsw
cmp
xchg
sbb
sub
jbe
lret
popf
out
hlt
or
retw
jl
es
and
add
in
dec
ja
jno
test
mov
push
inc
fs
mov
push
scas
adc
xlat
stos
jb
cmp
push
les
xchg
bound
mov
or
cmp
dec
push
mov
sbb
or
cli
lret
or
aaa
test
adc
iret
call
jno
shrb
xlat
sub
jmp
push
popa
dec
leave
mov
test
lahf
aam
jne
pop
repz
orps
aas
sbb
faddl
fidivrl
cmp
adc
mov
pop
mov
cwtl
cwtl
jo
adcl
or
ret
mov
jne
jmp
or
push
dec
mov
mov
test
push
call
jae,pn
sub
call
test
mov
jle
mov
les
adc
out
sub
push
xchg
mov
daa
scas
repz
fimuls
rorb
std
dec
rorl
sub
dec
push
out
rorl
arpl
sub
mov
jae
cmp
jae
cli
rcl
xor
push
xchg
inc
orb
sbb
xchg
push
addr16
jecxz
das
outsl
ret
out
loope
pop
mov
xchg
fidivrl
mov
aas
cmpsb
mov
test
push
cmp
push
cmp
inc
dec
pusha
hlt
out
mov
sub
push
sbb
xchg
sub
xor
add
mov
sbb
movsl
cmc
mov
add
sahf
pop
mov
movsl
jo
int
shrl
movsl
or
mov
aaa
call
and
movsb
mov
xchg
nop
aad
or
outsl
and
jp
roll
cmp
out
fs
outsl
jb
es
cmp
push
sbb
shl
jmp
sub
out
ds
movsl
mov
xchg
fstl
or
mov
shrb
daa
jno
lods
jno
sbbl
pop
stc
xlat
sub
call
pop
es
jge
xlat
mov
push
cmc
cmpsl
cs
leave
je
push
repz
cli
mov
xchg
pop
insb
pop
sub
xchg
mov
mov
ljmp
or
jecxz
out
cmc
test
fldl
push
sti
daa
or
pop
int
jnp
push
sbb
fcoml
jne
cmp
jg
sbb
add
mov
test
test
dec
push
jmp
rcrb
xchg
jns
xchg
stos
mov
dec
sbb
pop
inc
dec
daa
xlat
loope
lcall
movsb
je
xchg
and
aaa
or
fstpt
sub
push
or
inc
jl
cmp
in
xor
pop
sbb
es
mov
sub
jge
sbb
or
mov
adc
pop
fdiv
adc
gs
push
pop
mov
sub
iret
dec
mov
push
popa
fstps
and
popf
enter
xor
and
repnz
push
or
pop
imul
jno
arpl
clc
icebp
repnz
mov
add
dec
sbb
loopne
imul
xor
mov
test
pop
outsb
pop
mov
xlat
mov
std
pop
ret
sub
fwait
insb
push
jne
mov
insb
add
dec
cmp
mov
int
fiadds
std
lcall
stc
lcall
insl
mov
movsb
xor
testb
mov
jecxz
mov
pop
sbb
mov
jbe
fistps
cmp
and
jmp
cmpsl
jne
pop
call
lret
lret
fildll
push
addr16
pop
pop
shrl
sarl
add
pop
adc
mov
cwtl
mov
out
add
int
mov
push
in
pop
rcrb
sub
leave
fdivrl
sub
or
push
cmovno
ja
or
xchg
lock
out
and
scas
fs
sub
sbb
push
sub
ljmp
and
insl
add
inc
inc
dec
sbb
mov
push
mov
jne
ja
mov
mov
jl
test
inc
test
and
jge
pop
pusha
dec
adc
sub
mov
pop
aam
into
push
inc
and
pop
andb
iret
pushf
out
rorl
scas
mov
out
push
sbb
repz
push
xor
inc
iret
add
stc
scas
xchg
mov
sahf
jno
repnz
sub
pop
call
dec
cmp
sbb
int3
cmpsb
bnd
add
adcl
push
sahf
mov
pop
add
mov
xchg
dec
data16
outsb
int3
mov
mov
add
out
or
das
sbb
pop
mov
pop
jecxz
mov
jp
push
mov
movsl
inc
mov
daa
addr16
mov
xchg
add
iret
ret
pop
popa
jnp
shll
imul
inc
jge
push
mov
mov
sti
cmp
shrl
inc
aad
inc
and
loope
out
pop
addr16
push
xchg
dec
aam
jmp
push
loope
hlt
sub
gs
int
push
out
adc
mov
addr16
cmp
mov
sbb
push
or
add
icebp
in
in
pushf
femms
pop
push
xchg
xor
mov
dec
jbe
pop
xchg
imulb
mov
ss
and
mov
mov
ljmp
scas
jns
sbb
cmp
insl
in
scas
cmc
cmp
add
jb
xchg
ja
rep
hlt
outsl
push
js
mov
movsl
adc
mov
xor
cmp
pop
insb
add
cmp
mov
adc
pop
pusha
hlt
pop
outsb
dec
cmpl
sbb
or
xor
or
inc
leave
xchg
ja
push
in
cmp
scas
jbe
js
and
cmp
hlt
jp
pop
in
ja
jle
xlat
rcrb
fbstp
push
sbb
adc
in
dec
in
adc
test
daa
sbb
fsubl
push
mov
cwtl
add
test
cwtl
sub
popa
insb
pop
test
or
push
lret
push
mov
xchg
mov
adc
xchg
jge
fidivrs
sub
mov
mov
mov
push
out
add
mov
xor
cmpsl
jl
dec
lret
and
in
out
mul
xor
out
loopne,pn
add
and
jbe
movsb
xor
aad
lds
fidivs
hlt
push
xchg
pusha
in
mov
or
pop
ljmp
into
push
pop
xchg
add
mov
ficompl
dec
inc
roll
mov
mov
mov
gs
in
out
push
add
leave
fcompl
shr
stos
jae,pt
ja
outsl
push
inc
fcmovnu
cs
dec
ds
sub
loopne
fisubrs
xchg
into
adc
mov
mov
cmpsb
push
ljmp
mov
push
or
mov
pop
inc
cs
inc
inc
xor
jo
or
jmp
bound
push
jo
not
inc
jecxz
out
xchg
iret
ret
or
test
out
jns
lods
mov
push
ja
mov
fdiv
in
repz
arpl
mov
lods
and
mov
cli
inc
xor
xor
jge
xchg
dec
xchg
loop
pop
jnp
fwait
xchg
or
and
lock
add
stc
and
aas
shlb
dec
mov
inc
clc
jno
xor
imul
xchg
inc
jo
out
lock
shr
std
out
cmpsl
mulb
xor
lock
sbb
xchg
add
jge
fisttpll
xor
jb
imul
aad
rorl
xor
push
and
roll
stos
pop
push
xlat
pop
sbb
mov
cmpsl
cltd
data16
jnp
fimull
push
xlat
jo
adc
xchg
scas
xor
stc
and
aas
and
fsub
mov
jle
add
test
cmp
cmpsb
dec
mov
nop
lcall
or
mov
in
clc
pop
hlt
sbb
testb
fisttpl
dec
push
mov
cmp
addb
rorb
imul
mov
jo
add
lcall
enter
xchg
xor
xor
sub
mov
pop
add
jo
arpl
jae
jnp
sbbb
mov
call
mov
in
lahf
stc
jmp
clc
dec
sub
sti
dec
fdivrs
dec
loope
cmc
mov
das
sbb
jl
push
jne
dec
add
cmp
fistl
lret
loopne
test
dec
push
xchg
inc
xor
scas
dec
inc
rolb
sbb
aad
push
lcall
mov
or
ret
sbb
or
out
cld
xlat
add
cs
imulb
adc
loop
stc
ss
dec
sub
out
ret
mov
mov
and
test
pop
xor
test
inc
and
call
adc
push
cmp
mov
decl
loopne,pt
outsl
stos
or
inc
push
sbb
in
mov
jl
fstpt
mov
push
sub
aad
repz
pop
int
es
or
jg
inc
inc
jnp
pop
aaa
nop
jg
lret
repnz
dec
ret
pop
fwait
cltd
mov
adc
inc
mov
ljmp
cmp
loope
orl
fld
pusha
bswap
xchg
icebp
dec
jecxz
lods
xor
jg
mov
mov
cmp
jg
adc
push
cwtl
inc
rcll
jne
or
sbb
aad
int3
stos
inc
sbb
into
iret
scas
repnz
sub
mov
dec
xor
xchg
insb
js
jne
outsl
adc
and
mov
shll
lret
jns
scas
in
ss
arpl
shlb
cmp
or
data16
push
mov
jnp
ret
sahf
fldl2e
xor
or
xchg
or
mov
ss
mov
mov
rcll
movsl
mov
loope
or
repz
into
sbb
inc
leave
inc
lret
insb
and
adc
mov
imul
in
pop
filds
mov
lods
sbb
sub
sub
xchg
xor
les
xlat
jae
mov
sub
int
xchg
cltd
ss
inc
xor
enter
mov
cs
lea
adc
jae
mov
cmc
clc
xchg
shrl
mov
cs
xor
scas
test
jle
cmp
sbb
adc
inc
mov
arpl
pop
cmpsb
mov
and
dec
dec
mov
popf
push
mov
add
pop
int3
cmpsl
in
daa
data16
xchg
fcmovnbe
jnp
roll
pop
and
insb
sti
insl
adc
sbb
sbb
lret
rorb
or
and
out
xchg
mov
sbb
mov
es
add
movnti
mov
ljmp
or
repnz
or
iret
dec
mov
adc
ficoms
fs
push
lahf
enter
or
push
dec
shl
popa
arpl
dec
lock
fs
shrl
enter
fmulp
pop
or
sti
mov
push
xchg
mov
movsb
pop
jge
fs
mov
jmp
pop
push
jge
add
test
je
push
stos
mov
pop
xchg
or
in
push
push
adcl
imul
sbb
inc
lahf
dec
jecxz
and
sub
jge
daa
mov
pusha
cmp
push
inc
ljmp
clc
fnsave
adc
jne
xor
js
or
jnp
cmpb
out
or
mov
out
sysret
add
stos
movsl
mov
xlat
clc
ds
xchg
ds
sahf
push
sahf
cmp
add
xchg
into
jno
imul
cwtl
push
fimull
fidivrl
add
jl
or
push
or
dec
jmp
sti
xchg
add
mov
loop
in
pusha
mov
sub
inc
or
jg
jns
pop
cltd
aaa
hlt
adc
stos
inc
jg
test
cs
sub
js
xchg
push
push
enter
stos
insl
and
fwait
xchg
jp
lock
dec
adc
movsb
dec
mov
push
ret
ds
xchg
push
dec
inc
xor
call
lahf
sub
insl
in
iret
shll
and
xor
push
xchg
mov
loop
and
mov
cmp
movsl
sbb
xchg
pop
add
stos
mov
push
jbe
push
popf
jae
mov
ret
ret
pop
mov
cmp
out
add
push
les
xchg
inc
cmp
insl
sahf
fs
aaa
push
test
push
and
insb
movsb
test
decl
enter
mov
sbbl
addr16
mov
xchg
shrl
repnz
push
sbb
adc
xor
outsb
mov
pop
mov
push
dec
mov
lahf
jmp
je
sbb
xchg
mov
or
sub
js
xchg
outsb
add
and
lahf
sbb
inc
cmp
ffree
jno
and
sub
popa
hlt
jae
add
push
pop
pop
rep
mov
std
cmp
addr16
sbb
in
cmp
sub
outsb
and
add
out
pop
xor
mov
sarb
test
ret
inc
idivb
bound
and
fucomp
jp
in
pop
adcl
push
lcall
testb
test
out
lods
jmp
daa
add
loope
shlb
mov
sbb
out
adc
mov
test
jbe
cmpsl
cmp
sbb
bnd
xor
pop
in
cmc
fadds
add
xchg
xor
shrb
or
xor
mov
in
rcrb
mov
add
bound
add
into
or
int
lahf
fnstcw
lcall
sub
xor
or
mov
sub
pop
out
jge
add
sarl
iret
jno
stos
sub
xchg
call
lods
insl
or
fs
inc
xchg
push
fwait
int
subl
push
xor
dec
roll
out
loope
cmc
mov
aam
into
dec
mov
sbb
or
popf
repz
loopne
or
test
rol
adc
inc
push
mov
dec
mov
out
xor
in
xchg
jp
xchg
and
cmp
dec
out
mov
sbb
dec
in
sub
testb
mov
add
sub
cmp
outsl
or
mov
aaa
sbb
out
push
adc
js
adc
and
inc
cmpsl
cli
xchg
aas
pop
push
test
enter
adc
imul
xor
js
add
and
in
mov
mov
leave
in
xchg
mov
cmp
repnz
xor
sub
mov
movsb
out
add
in
aam
aad
xchg
jmp
int3
fwait
cmpsl
adc
pushf
mov
out
push
data16
adc
nop
xor
enter
dec
adc
inc
jle
pop
fcomps
out
fldt
push
dec
loop
add
sbb
ds
sbb
pop
and
fisubl
adc
add
dec
sub
push
rorb
xlat
cli
jae
iret
retw
test
sub
mov
jae
push
sarb
sub
cld
cli
ljmp
jl
sbb
cltd
xchg
and
jns
mov
push
push
adc
loopne
and
cmc
stos
je
mov
add
ficoml
cld
ret
sbb
lret
movzbl
sub
sti
popl
adc
imul
lock
cli
jnp
stc
lea
jb
das
mov
jp
fstpt
jnp
pop
jecxz
aad
insb
rorb
stc
xor
adc
mov
jmp
xorb
and
daa
add
mov
pop
xor
xor
popa
inc
jbe
cmpsl
adc
mov
cmp
pop
pop
shrl
ret
pop
mov
sub
mov
sub
and
xor
cwtl
sbb
add
push
lock
cltd
lcall
or
mov
adc
or
rcl
lods
jle
popa
sbb
mov
in
jg
jae
cmp
mov
mov
sub
lahf
inc
mov
scas
add
sbb
mov
push
jbe
aaa
es
sub
mov
sub
xchg
loopne
ror
je
pop
in
les
adc
push
pop
outsl
shlb
scas
mov
mov
ret
pop
inc
pop
ret
mov
mov
loop
sbb
xchg
xor
xor
and
cltd
lods
jb
lret
mov
and
pop
fcmovnu
ret
enter
pushf
push
cmp
aad
push
sbb
fcomps
aas
xor
push
out
fcmovb
jge
or
push
push
mov
movsl
adc
testb
xor
inc
out
enter
leave
int3
mov
pop
idivb
cmc
mov
mov
fldenv
les
add
bound
je
jge
inc
addr16
sub
dec
pushf
sbb
lret
jge
jne
and
xchg
adcb
mov
icebp
addr16
xor
pop
lret
gs
out
loopne
mov
clc
or
inc
pop
push
xor
rcll
movsb
push
inc
inc
jmp
fwait
inc
jl
rorl
pop
sbb
cmc
mov
decb
cmp
jno
pop
inc
das
add
sbb
push
cmpsl
inc
jle
daa
push
mov
nop
daa
mov
or
cmpl
aas
lcall
insb
add
sbbb
dec
sub
es
in
jno
inc
cmp
mov
repz
adc
mov
add
cmp
sub
xchg
fs
xchg
scas
stos
and
mov
pop
inc
aas
pop
mov
cmp
fimull
in
out
lods
dec
jge
mov
cltd
fildll
pop
cmp
pop
adc
repz
xor
cli
push
bound
push
pop
push
flds
cmp
cwtl
jne
dec
inc
shrb
dec
daa
add
push
sbb
adc
sbb
pushf
cmpsl
pop
test
scas
lock
iret
sbb
inc
aam
add
jecxz
xchg
cmp
test
stos
lds
enter
pop
mov
popf
mov
sub
movsl
mov
lods
ret
inc
cs
sub
dec
mov
jo
cli
mov
inc
adc
enter
imul
xor
push
mov
movsb
mov
gs
shl
into
dec
loop
mov
xchg
out
cmp
aaa
icebp
mov
mov
and
adc
cld
jae
repz
popf
stos
adc
pop
in
pop
push
or
mov
mov
sub
outsl
aam
cmp
rcl
orl
leave
inc
xor
aad
imul
andl
rolb
iret
xor
hlt
std
cltd
js
pushf
and
fs
icebp
mov
mov
xor
mov
mov
cs
cmp
lcall
movsb
mov
pop
xor
pop
mov
sub
pop
lret
push
push
lahf
pop
push
and
adc
sub
js
aas
and
je
pop
fbld
mov
add
lds
mov
or
mov
addb
scas
fimull
out
pop
fisubrl
sbb
leave
dec
outsl
pushf
jg
xchg
ljmp
inc
xor
push
scas
rcrl
inc
jmp
mov
into
repnz
loopne
push
add
test
sub
loope
pop
mov
std
mov
int
in
jno
outsl
push
fcmovnb
sbb
cli
mov
in
ret
js
rclb
add
adc
inc
jmp
add
cwtl
mov
mov
jle
scas
mov
push
xor
cmp
aaa
and
sbb
adc
lret
mov
test
js
lock
mov
lods
sbb
push
dec
sub
mov
loopne
and
fdivs
pop
lret
outsl
push
imul
and
jo
or
repz
into
jge
cmp
je
push
xor
mov
outsl
les
frstor
je
jle
pushf
nop
test
push
sbb
daa
add
rolb
ds
cmpsb
adc
xchg
fucom
hlt
cs
enter
insb
mov
and
xor
pop
pop
push
xlat
cltd
notl
or
nop
aaa
cli
and
mov
repnz
xor
push
inc
push
adc
les
int
shl
in
test
in
jne
jnp
add
cmp
push
push
stos
mov
test
adc
and
or
sub
mov
xchg
adc
xchg
repz
enter
test
cli
cmp
int
inc
rorb
jmp
daa
daa
and
sbb
cmp
pop
xor
pop
testl
and
dec
test
sub
outsb
in
in
daa
lods
pop
popf
std
fimull
and
push
xchg
sbb
lods
mov
loopne
fucomp
jp
or
xchg
jb
ja
cmp
rolb
push
aam
sub
and
in
jae
insb
cmp
hlt
adc
mov
popl
or
push
daa
cltd
mov
mov
nop
or
outsl
dec
out
mov
add
sub
mov
jg
sub
fcmovnbe
sub
push
mov
mov
xchg
mov
sbb
push
repnz
sub
and
je
push
and
jge
cmp
es
inc
call
mov
movsl
pop
fwait
mov
pusha
jnp
into
dec
xchg
nop
pop
mov
imul
adc
jne
push
icebp
enter
push
shrb
jp
loop
ljmp
xlat
or
push
add
jno
jne
xchg
ficoms
cmc
je
inc
imul
imul
outsb
shlb
sub
dec
adc
mov
mov
shrb
and
and
js
sbb
or
mov
out
stc
frstor
push
adc
ror
mov
pop
out
cmp
loop
pusha
mov
dec
sub
inc
in
insb
push
cmp
push
xor
dec
stos
mov
adc
xor
mov
jge
jo
rcll
in
jp
shrb
jno
femms
dec
dec
mov
es
in
jl
adc
insl
sbb
add
test
pop
in
sub
cmp
pop
fwait
mov
xor
lret
mov
push
in
inc
movl
dec
in
ret
xor
stc
cmp
mov
pop
push
dec
insl
nop
xor
mov
bound
nop
xchg
mulb
inc
fistpl
sti
xorb
jp
dec
push
aas
outsl
fwait
jecxz
xor
jl
into
sbb
lcall
add
pop
cld
xchg
repnz
jmp
jge
or
idivb
fwait
push
mov
pushf
cs
lods
jecxz
test
sbb
ret
incb
ds
in
sub
pop
ja
mov
or
out
sub
xchg
and
pop
sahf
mov
sub
lods
fldt
push
pop
cmc
jo
cmp
lahf
sub
das
mov
sahf
sub
mov
stc
fbstp
stos
push
pop
sbb
jg
ret
dec
sbb
pushf
jae
pop
xorl
sbb
xorb
push
cs
push
sub
and
popl
repz
inc
mov
mov
dec
sub
sbb
outsb
xchg
xor
push
dec
sub
stos
out
inc
stos
xor
js
aas
xor
and
jle
orb
sahf
or
roll
dec
and
mov
and
mov
inc
sbb
insl
or
call
inc
loope
or
ljmp
sub
lock
mov
xchg
dec
pop
cli
outsb
andl
pop
aas
cmc
lret
pop
imul
popf
fmulp
stos
pop
daa
scas
or
aad
out
pop
lods
pushf
push
sti
sti
xor
loope
mov
out
stc
repz
mov
push
or
push
divb
xchg
pop
sbbb
es
addb
mov
pop
lods
mov
int
jp
hlt
push
imul
iret
inc
mov
inc
loop
add
pop
addr16
aam
or
and
lcall
andl
cmc
pop
pop
pushf
lcall
jne
cli
mov
dec
pusha
add
stos
je
or
leave
mov
add
dec
mov
dec
xlat
mov
rcrb
insb
and
push
sahf
imull
mov
out
pop
mov
mov
pop
mov
pop
pop
mov
cwtl
jl
clc
movsb
rcll
icebp
out
jbe
adc
mov
in
dec
pop
jb
pop
icebp
fmul
imul
xor
push
or
les
adc
xor
daa
bound
sub
bound
ret
popa
cmp
or
scas
insb
mov
adc
test
inc
adc
loope
jecxz
adc
scas
mov
sti
cmp
movsl
sbb
out
scas
inc
pop
xchg
mov
sbb
fwait
mov
or
jne
shll
sbb
cltd
pop
sbb
js
xlat
addb
int3
adc
popa
mov
sub
jg
nop
in
lock
sub
pop
mov
lods
aad
or
inc
dec
inc
popa
jle
jnp
pop
mov
cmp
add
inc
mov
mov
cmp
js
jge
jnp
bound
pushf
adcb
pop
mov
decl
adc
xor
jl
mov
adc
scas
inc
xchg
stc
iret
push
cmc
lods
fs
cmp
cmp
ljmp
movsb
jmp
pop
push
and
add
sub
aaa
mov
cltd
cmc
xchg
xchg
int3
stos
pop
orb
lret
cmp
sub
fildll
dec
lret
mov
mov
aam
popa
add
aaa
inc
add
adc
sti
mov
loope
push
das
sbb
mov
cmp
dec
mov
shrb
repnz
lods
ja
pop
ret
push
in
mov
pop
mov
sahf
jnp
dec
xor
sbb
mov
xor
sbb
filds
xor
mov
lods
repz
out
sbb
push
add
push
loope
push
jmp
add
je
cwtl
mov
pushf
ja
test
pop
scas
fstl
iret
push
mov
repz
cmp
push
xor
mov
or
xchg
test
test
bsr
out
in
or
xchg
and
popf
xchg
pushf
enter
push
addl
imul
ret
enter
mov
xor
pushf
arpl
cmp
fisubl
inc
xor
dec
lcall
lcall
stc
sub
int
jmp
inc
jae
and
sti
cmp
inc
push
cmp
and
xchg
repnz
sbb
inc
jg
test
pop
testb
xchg
push
pop
stos
xor
cli
xlat
mul
push
push
roll
pop
in
les
mov
mov
lahf
mov
cmp
sub
mov
jmp
pop
je
bound
xor
or
jl
push
jbe
out
sahf
gs
cld
sub
mov
or
push
jns
lds
jne
adc
lret
mov
pop
fisubrs
les
loop
jbe
xchg
push
add
xor
hlt
mov
or
mov
daa
addr16
pop
mov
loopne
repz
or
dec
mov
es
aam
jp
add
out
cld
lcall
add
in
dec
inc
ss
scas
js
into
cwtl
arpl
lods
or
addr16
push
dec
fdivp
mov
out
std
mov
mov
xchg
or
mov
popa
push
sbb
cmp
ss
std
ficoml
mov
inc
sbb
repnz
push
aas
mov
repz
sub
ret
mov
subb
insb
nop
sbb
mov
fcoml
dec
cmp
dec
lea
jle
xchg
xchg
stos
pop
repz
add
or
jnp
cmp
pop
sub
cmp
daa
idiv
pop
in
jb
xchg
sbb
and
push
sti
and
xchg
inc
ljmp
orl
test
xchg
pop
int3
cli
xor
cmp
cmp
mov
inc
push
into
jge
xor
pop
mov
pushf
insl
pop
sbb
fstpt
add
cmp
push
addr16
nop
dec
push
dec
sbb
outsb
lods
mov
mov
and
fisttps
mull
sarb
aaa
push
movsl
add
aas
push
pop
mov
push
pop
jns
push
sahf
movsb
popf
mov
push
push
adc
cmpsl
dec
inc
or
xor
test
sarl
lahf
jb
mov
jns
adc
leave
jp
add
xchg
add
repz
push
sub
mov
cwtl
pop
dec
rcl
div
bound
adc
sub
ror
loope
mov
cld
ret
push
jbe
xor
sub
xchg
pusha
jg
jp
sti
and
pop
fincstp
jge
sub
add
mov
movsb
add
push
out
lods
inc
or
sbb
mov
mov
sub
mov
daa
mov
mov
pusha
int3
cmp
fstl
dec
inc
xchg
push
jmp
jns
adc
jno
inc
dec
xor
dec
cs
cmpsb
ljmp
adc
push
xorb
aam
pop
jo
pop
mov
push
mov
or
mov
ficoml
dec
je
decl
pop
aam
xlat
scas
and
icebp
or
pop
arpl
or
and
xchg
xchg
bound
add
sahf
ficoml
fwait
pop
ja
out
push
sbb
and
fdivp
in
mov
mov
arpl
jge
lret
shl
or
dec
lea
xor
insl
pop
cmp
aaa
test
jle
jns
into
push
dec
xor
loop
push
or
sub
mov
adc
shll
push
aad
test
icebp
mov
push
fsubs
mov
xor
mov
dec
pop
int
movsl
mov
inc
test
jge
jmp
dec
fmuls
push
lcall
rorl
mov
addr16
or
and
jne
fiadds
xchg
outsl
movsl
data16
popf
sub
cmc
dec
xchg
cld
mov
pusha
lods
cwtl
mov
lahf
and
mov
dec
leave
sarl
repz
lret
fwait
lea
pushf
fwait
loop
rorl
dec
aaa
jb
pop
sbb
jno
jmp
adcl
sbb
lcall
hlt
rcr
and
sbb
repz
push
bswap
sub
iret
int3
int
out
sahf
cltd
jle
divb
scas
hlt
sub
sbb
packsswb
xor
xor
pop
sbb
add
js
jecxz
aad
xor
dec
test
inc
test
jle
sbb
xchg
out
dec
scas
push
outsb
sub
xor
or
repz
imul
addr16
mov
xor
push
lods
test
fimuls
mov
in
pop
add
loope
add
dec
call
shl
add
or
or
or
jge
hlt
iret
test
push
mov
xor
popf
mov
subl
inc
ret
mov
rcll
ror
xor
push
cs
aad
lods
push
pop
dec
dec
push
xchg
push
xchg
and
addr16
out
sahf
pop
mov
push
cwtl
fisubl
cmp
xchg
gs
repnz
lahf
ljmp
mov
add
xchg
fildll
fucomip
fnstcw
xor
imull
scas
sbb
inc
add
push
or
pop
cmp
gs
xchg
xor
cltd
out
pop
fildl
xchg
leave
int3
subl
mov
cwtl
adc
neg
ss
idivl
decb
mov
cli
push
into
scas
sbb
neg
lods
cmp
mov
adc
pop
nop
lret
add
hlt
push
sub
out
cmpb
jge
fs
adc
mov
push
pop
sub
mov
fcoml
lds
cld
sub
mov
outsb
leave
loope
pop
sbb
dec
jbe
imul
fnstenv
xor
xchg
lret
dec
pop
jno
xchg
fldenv
push
in
mov
dec
or
push
jbe
leave
xchg
iret
test
cs
push
cmpl
data16
cli
mov
pop
leave
fucomi
inc
cwtl
andb
mov
dec
insl
or
pop
pop
icebp
jo
jno
mov
lods
lahf
imul
adc
out
mov
rcr
cmp
and
imul
sbb
jmp
outsl
out
xor
mov
repnz
jno
mov
xchg
nop
out
xchg
addl
fwait
and
mov
daa
ljmp
push
mov
cmp
scas
mov
fsubrp
icebp
stos
movsl
mov
clc
sub
lods
out
fisubrl
jecxz
or
lds
push
lret
pop
js
inc
inc
sti
iret
jns
dec
pusha
and
fildl
jecxz
mov
fistl
mov
shll
pop
cmp
xchg
mov
jle
push
mov
and
mov
daa
push
addr16
xchg
cld
mov
dec
jnp
push
push
mov
inc
mov
insl
mov
adc
cmp
or
out
xor
sub
shll
xchg
inc
iret
mov
ljmp
shll
repnz
pushf
mov
cs
jo
repnz
mov
push
je
and
stc
xor
dec
arpl
cltd
movsl
mull
jb
enter
sub
inc
lahf
out
push
in
out
jecxz
adcl
fidivrl
in
xchg
sub
subb
aaa
dec
add
aam
pusha
add
cmp
ret
insb
fisttpl
das
add
or
jg
mov
add
adc
test
lahf
mov
dec
loope
xor
push
cmc
ljmp
cmp
in
mov
lods
xor
xor
pop
stos
outsb
mov
out
aad
in
mov
mov
mov
and
lea
xchg
lock
loop
scas
and
mov
jle
mov
incl
sahf
out
dec
pusha
ret
mov
fcoms
push
xchg
test
std
push
int
xor
sub
dec
jmp
mov
test
movsl
loope
jo
add
addl
sahf
adc
insb
lea
scas
rcr
imul
mov
cmp
push
shr
stc
pop
cmp
filds
loope
pop
mov
imul
fidivrs
das
pushf
test
pop
insl
xchg
pop
cmp
leave
lahf
cmp
push
push
out
push
or
outsl
inc
add
push
in
mov
int3
fbld
add
shll
inc
xor
test
or
mov
sbb
das
pushf
out
imul
push
sbb
pop
and
icebp
into
adc
sub
mov
and
test
das
test
int3
sbb
insb
push
pop
repz
xlat
adc
push
loop
in
stc
test
xchg
pop
shrb
lock
mov
xchg
jb
leave
jnp
jge
inc
add
sbb
adc
out
loop
int3
imul
cmpsl
pushf
inc
and
cmp
enter
js
cmp
add
pop
mov
xor
cmp
stos
mov
cmp
mov
je
sahf
cmp
sbb
or
xchg
sub
es
test
mov
jecxz
add
addr16
ja
cmpl
inc
out
jns
mov
push
fwait
adc
cmp
push
aaa
sbb
lock
ret
add
dec
daa
pop
fwait
pop
sbb
fistps
shrl
pushf
inc
insl
adc
stc
add
popa
jb
and
jp
pop
ficoml
pop
mov
push
xchg
insl
das
cmpl
call
dec
mov
jl
test
lock
aas
loope
mov
and
jecxz
add
loopne
dec
xor
test
xor
sbb
xchg
inc
movsb
repz
add
cmp
push
add
add
scas
or
js
cmpsb
dec
fimull
aam
xchg
sub
jb
push
and
push
mov
sub
xor
or
movsl
mov
sub
data16
int3
repz
leave
xchg
mov
hlt
push
mov
js
ret
xlat
cltd
in
scas
mov
mov
leave
jo
lds
jns
pop
xchg
pop
cld
out
or
pop
shlb
push
js
cld
repnz
in
jo
xchg
sub
js
nop
inc
je
movsl
cmpsb
mov
cwtl
cltd
leave
and
push
mov
loope
adc
lret
das
push
roll
test
sbb
lods
aam
cmp
xchg
pop
pop
repz
sbb
pop
dec
int3
add
out
and
inc
lock
mov
out
xchg
lods
mov
lods
jmp
mov
je
and
cmp
push
inc
pop
pop
xor
dec
scas
mov
das
and
stc
ret
push
push
cmp
sbb
cmc
push
push
das
jo
lds
fptan
mov
sti
xchg
mov
xor
push
ret
insb
loopne
xor
adc
mov
cmp
icebp
ret
fldl
sbb
sti
rcr
fcompl
ds
mov
cmpsb
jne
xor
in
bound
nop
and
outsb
repz
je
fwait
sarl
sahf
adc
sahf
adc
mov
rclb
pop
sbb
mov
test
addr16
in
cmp
push
or
into
jp
int
xchg
aas
sbb
and
push
inc
iret
add
test
imul
fdivrp
push
sub
in
subb
pop
in
call
mov
inc
test
sbb
xor
jb
fcoms
rcr
fnsave
xchg
adc
les
ljmp
dec
add
and
sbb
test
pop
test
dec
lret
add
frstor
stos
adc
ss
jecxz
dec
lock
mov
cmp
cmpb
push
add
aad
nop
sub
jne
cmpsb
jg
and
sub
ss
mov
jae
out
hlt
push
out
movsb
fwait
inc
gs
mov
cmp
dec
sub
ds
or
sbb
test
jnp
inc
mov
pusha
hlt
scas
js
clc
cltd
mov
cmp
test
xchg
cmc
mov
hlt
fwait
jb
aaa
xor
sub
lock
ds
adc
fld1
inc
push
add
mov
fwait
inc
inc
sbb
ljmp
adc
and
pop
mov
push
jecxz
ret
xchg
pop
xchg
dec
and
cmp
fwait
push
mov
sahf
into
loop
mov
xchg
psubb
pop
fwait
mov
push
mov
repnz
lret
jae
dec
cmc
rclb
outsl
sarl
lret
pop
stos
inc
push
cmp
sahf
pop
pop
xor
jmp
inc
add
jg
fsubrl
fcom
cmp
or
or
ret
mov
lock
mov
pop
pushf
addr16
adc
iret
nop
sbb
or
pop
cmp
fsubrp
mov
call
jmp
pop
mov
insb
mov
mov
rcr
mov
dec
pop
std
inc
inc
in
mov
push
cmc
mov
xchg
mov
and
aaa
test
ret
inc
cmc
insl
add
lea
fs
aam
mov
push
cmovs
daa
xchg
pop
xchg
add
stos
fwait
jbe,pt
pop
test
or
insb
adc
mov
cmpb
cld
sbb
scas
dec
leave
int3
jno
mov
scas
pop
movsb
jns
shlb
jb
loope
mov
add
js
add
out
jecxz
cltd
and
push
int3
and
out
orb
cld
jae
enter
xchg
xlat
push
mov
lahf
push
sub
dec
fnstcw
mov
sub
sub
adc
pop
mov
jno
xlat
jbe
cmpl
ja
movsb
dec
pop
adc
mov
dec
or
in
out
je
push
fwait
icebp
in
or
pop
xor
dec
lret
dec
nop
mov
test
jecxz
imul
roll
mov
xlat
rcll
mov
adc
das
push
xchg
mov
sbb
xchg
pop
ret
fldcw
xor
shlb
mov
sub
sub
shl
jo
fistps
cmpsl
mov
sbb
sub
leave
shl
add
mov
lcall
enter
shr
mov
mov
jbe
aas
ret
push
shrl
pop
add
push
loope
cmp
in
pop
push
jno
ljmp
sub
mov
push
repz
and
and
adc
dec
pop
sub
sub
and
mov
mov
push
dec
je
fwait
lahf
icebp
in
adc
mov
movzwl
add
pop
lock
movsb
inc
scas
jb
xor
mov
mov
insl
pushf
jae
pusha
push
lret
lods
xchg
fs
jne
cmc
popa
sbb
idivb
ds
cmpsb
add
sti
jbe
out
ret
imul
mov
pop
dec
xorl
in
in
sub
les
psllq
jmp
lea
sub
push
out
mov
daa
imul
mov
cmp
outsb
xchg
fsubl
shrb
ret
in
leave
pop
sahf
jge
mov
jbe
sar
inc
xor
movsl
in
rcrb
cltd
es
or
orb
mov
jmp
rcrl
jnp
mov
in
in
mov
add
mov
sbb
add
test
and
cli
cli
out
lock
push
adc
rcrb
dec
jae
dec
shlb
sbb
insb
jns
or
mov
push
insl
jb
cmpsb
xchg
sbb
popf
pop
fwait
cmc
jns
inc
sahf
and
dec
lea
fwait
push
aam
out
pop
push
adc
xor
push
mov
loope
sub
adc
adc
push
shlb
dec
scas
push
clc
dec
dec
cmp
popa
pop
push
js
insb
call
pop
pop
push
push
push
repnz
mov
cmp
mov
insb
cld
push
inc
and
jo
test
fwait
movsl
repnz
push
pop
lret
rcrl
add
addl
out
aam
cmp
dec
push
rcrb
fiaddl
xchg
or
out
fnstsw
fisubrl
push
mov
mov
sub
cmp
pop
ljmp
adc
lahf
push
movsb
sbb
cmp
scas
mov
pop
test
out
and
adc
mov
aaa
push
call
mov
mov
lahf
cmp
mov
fucom
jmp
sub
cmp
jge
sbb
mov
add
call
or
xor
jmp
xchg
pop
dec
icebp
or
jg
sub
mov
push
add
adc
dec
cmp
outsl
dec
cwtl
das
and
xorps
xchg
mov
out
xor
jbe
jecxz
jne
xchg
roll
sbb
push
mov
aam
stos
or
sbb
sub
push
dec
shrl
and
push
aad
sbb
mov
lods
xor
xchg
inc
or
jb
or
mov
or
mov
mov
outsb
adc
aad
andl
js
mov
mov
popa
push
xchg
mov
sbb
sbb
push
sbb
testl
outsb
mov
pop
xchg
adc
out
roll
sbb
dec
push
in
xchg
mov
mov
iret
bound
and
mov
fwait
mov
jl
test
outsl
mov
inc
fsubrs
sbb
push
push
push
xor
ret
out
stc
push
out
jmp
lret
xchg
rol
das
shld
les
xor
inc
les
mov
mov
jg
jbe
or
invd
xor
add
andl
call
clc
out
pushf
fcoms
insl
push
scas
scas
mov
fdivrl
cmp
pop
dec
mov
sbb
leave
jo
nop
paddw
dec
fmuls
fwait
or
movl
xor
cltd
xor
mov
xchg
adcb
or
into
inc
faddp
xor
into
mov
dec
cltd
aam
mov
push
sbbl
in
adc
dec
and
shl
push
sbb
mov
add
dec
xorb
sbb
icebp
mov
scas
push
add
cmpxchg
outsl
ret
cmpsb
pusha
pusha
movsb
adc
jne
mov
jns
les
push
dec
es
popa
cli
inc
lods
loopne
inc
pop
fsts
neg
pop
cmp
enter
sub
xlat
icebp
out
rcr
test
jns
fmuls
jmp
ja
jo
cmp
cmp
xor
mov
xlat
aam
cmpsl
aam
inc
fidivrs
dec
mov
pushf
jle
dec
in
push
out
in
xchg
add
fwait
or
xchg
mov
cs
push
stos
stos
aad
mov
lea
mov
in
push
call
cmp
dec
stc
int
shlb
insl
mov
cltd
repz
mov
rol
xor
stc
add
aaa
xor
pop
enter
je
int3
into
popf
cmp
add
jle
fs
xor
xlat
dec
rol
lcall
jmp
xor
or
xor
cld
mov
cmc
jno
jnp
and
das
jg
push
lods
stos
lret
cmp
dec
push
adc
daa
repz
or
push
jno
out
add
repnz
mov
into
lds
mov
cs
addr16
aaa
mov
daa
aas
in
popf
lret
sbb
jne
or
xchg
ss
sbb
jg
add
mov
jge
test
clc
lods
xor
data16
push
pop
das
pop
mov
fiadds
sub
adc
loopne
flds
mov
into
adc
iret
xchg
dec
ret
xchg
xchg
xor
xchg
xchg
xor
adc
sbb
push
mov
cmp
mov
idiv
iret
jl
mov
add
sbb
cmpsb
mov
pop
mov
push
lret
scas
push
mov
xchg
or
or
lahf
xchg
ja
std
cmpsl
arpl
hlt
and
xchg
jns
xor
mov
mov
or
xchg
mov
ficompl
out
jl
jmp
dec
aas
test
pop
jbe
xor
adc
imul
or
dec
hlt
mulb
ret
mov
lret
and
cli
mov
jo
xlat
inc
and
sbb
cmp
cmpsl
aaa
adc
outsb
sbb
xor
xchg
xor
test
ret
jns
movsb
sbb
cmp
imul
push
inc
cld
dec
adc
stos
negb
push
jmp
xchg
mov
imul
out
cmpsb
mov
ljmp
enter
fsqrt
xchg
cwtl
xor
leave
fbstp
rorl
lcall
push
mov
imul
pusha
lods
popf
call
repz
mov
pusha
lods
mov
xor
sub
push
shll
outsl
jle
ja
stc
test
jb
iret
bnd
push
call
dec
pop
sbb
mov
aaa
std
sbb
pop
aas
add
jecxz
add
cmp
ljmp
fsubrl
pop
stc
mov
inc
cmpsb
mov
movsb
adc
nop
inc
clc
mov
adc
pop
pop
cmp
les
push
push
sub
test
push
lods
ficompl
int
sub
lock
sahf
shrb
mov
and
dec
pop
push
pop
jmp
sub
mov
sti
mov
loopne
ljmp
and
call
addr16
add
and
test
pop
sub
mov
imul
add
jl
ret
lods
xor
xor
mov
xchg
mov
push
jb
stos
lcall
lods
or
fcoms
addr16
add
pop
repnz
pop
in
iret
lret
in
lcall
add
pop
and
mov
lock
mov
out
xor
push
mov
dec
dec
int
mov
xor
mov
xchg
cmp
cs
insb
int3
cmp
add
shl
jnp
or
out
sub
fnstenv
enter
ds
sub
or
jmp
enter
lods
repnz
rcll
xchg
mov
mov
inc
stc
fists
insl
cli
daa
add
sbb
push
subb
lret
enter
popa
cs
xor
ret
scas
sahf
js
add
xlat
cwtl
add
sub
int
into
not
fistpll
sub
jecxz
in
or
rep
and
mov
dec
mov
clc
mov
hlt
inc
stos
and
push
push
push
stc
fwait
movsl
jle
stos
popf
stos
jp
xchg
call
push
pop
pop
xor
add
xchg
stc
jge
mov
ss
cmpl
inc
inc
sbb
out
popf
repz
sub
mov
add
sbb
adc
sar
cmp
cwtl
xchg
bound
fldenv
cmc
cmpb
fcomip
mov
es
sbb
std
or
add
repnz
sub
cmp
mov
dec
fdivl
inc
mov
xchg
ret
inc
pop
es
ret
scas
adc
cltd
mov
js
imul
test
jbe
ret
pushl
cli
enter
mov
dec
mov
xlat
enter
test
repz
adc
xchg
mov
mov
pop
aad
pop
cs
pop
jge
sub
test
or
dec
stc
je
mov
fdivrs
or
add
mov
imul
mov
pop
test
push
mov
outsb
mov
int
rolb
inc
and
pop
cltd
xchg
xor
mov
lret
xor
push
add
cs
stos
sbb
and
lds
push
hlt
lahf
mov
out
push
div
sub
push
jb
jmp
mov
add
mov
dec
jge
mov
mov
adc
sub
mov
loop
mov
jmp
not
jg
sbb
or
test
mov
addb
lret
aas
adc
ljmp
ficompl
test
fisttps
popa
out
clc
fnstsw
aaa
out
and
clc
daa
mov
jb
loopne
cmpsb
inc
mov
mov
divl
jo
loop
mov
mov
lea
mov
testb
int3
pop
push
cmp
data16
mov
jae
cs
pop
mov
test
rcll
and
sbb
xchg
push
aas
arpl
dec
ret
out
out
stc
ficoml
xchg
clc
test
in
in
pop
push
jno
mov
mov
in
addr16
xor
pop
add
iret
cld
push
int3
sub
je
xor
icebp
inc
push
mov
icebp
dec
push
mov
inc
xor
ret
sub
cwtl
pop
lahf
sub
mov
sti
xor
mov
sub
xchg
xchg
jb
test
fs
je
xchg
and
andb
cmp
es
push
idiv
push
test
icebp
ds
adc
shlb
imul
daa
pop
pop
cmp
dec
mov
popa
pop
stos
xchg
mov
push
ret
xchg
inc
adc
mov
jl
add
add
inc
nop
cld
lods
cmp
and
ljmp
push
lods
enter
call
sub
cmp
insb
and
and
add
cmp
movsl
stos
cld
mov
dec
mov
flds
inc
dec
aaa
xor
xor
add
inc
push
lea
push
inc
add
cmpsl
lret
dec
repnz
or
jecxz
pop
stos
adcl
repz
rcll
dec
sub
or
nop
gs
xor
mov
push
sbb
enter
or
xor
out
or
stos
lock
mov
data16
mov
aad
mov
xchg
push
jmp
lods
jp
fmull
or
sub
mov
mov
les
xor
mov
xchg
lahf
je
xchg
adc
fistpll
and
jmp
and
mov
rcr
out
xchg
hlt
xchg
aaa
inc
arpl
cltd
dec
ret
addb
pop
aam
addr16
repnz
notb
inc
sbb
add
mov
dec
mov
push
test
ja
and
pop
lcall
dec
test
aad
adc
or
jg
movsb
movsb
and
mov
iret
lods
in
je
and
adc
jmp
xor
loop
clc
repnz
inc
sub
out
add
push
dec
push
add
push
sub
test
inc
mov
add
inc
sti
sti
inc
cwtl
in
cld
xchg
dec
xchg
lods
in
xchg
xchg
xlat
cmpsb
jecxz
loope
xor
fisubs
xchg
sti
sub
rclb
pusha
add
inc
hlt
jbe
addr16
fwait
sbb
inc
lret
leave
out
pop
push
xchg
mov
mov
cmc
jne
pop
fistl
out
jno
inc
leave
test
outsl
pop
lods
or
sbbb
hlt
test
dec
mov
bnd
imul
lret
addr16
repnz
cwtl
imul
mov
pop
lock
add
pop
outsb
testb
or
push
xchg
adcb
into
fwait
mov
or
dec
push
push
cmp
mov
push
ss
fbld
xchg
js
push
into
in
jo
pop
and
dec
outsl
shrd
pop
lret
adc
addr16
scas
pop
and
push
jl
fadd
jno
test
icebp
xchg
pop
hlt
stos
aas
pusha
and
sub
rcrb
lcall
adc
xchg
lods
push
out
lods
shrb
mov
jnp
cmp
pop
lret
rclb
pop
inc
pop
jnp
xchg
jbe
xchg
notl
stc
cmpsb
ds
sbb
repz
fwait
scas
cmp
popa
pop
inc
mov
out
xchg
push
cli
pop
rclb
mov
inc
pop
add
leave
jns
es
daa
pop
xchg
ds
jp
orb
rcrb
ja
push
pusha
xchg
js
lahf
xchg
push
adc
sbb
scas
mov
ffreep
cmpsl
pop
and
or
inc
xchg
std
idivl
add
sbb
cmp
inc
gs
ja
mov
xchg
test
out
xor
subl
add
das
shrl
fwait
or
int
aad
out
jp
xor
inc
and
push
sbb
jbe
scas
cmp
test
mov
mov
jns
out
mov
xchg
icebp
xchg
mov
jae
dec
js
and
and
es
xor
lea
ss
ret
ret
sbb
lds
pop
jno
and
push
adc
push
pop
mov
adc
xchg
lret
lds
mov
imul
subb
mov
movsl
test
add
lea
inc
fwait
add
loop
clc
add
bound
adc
inc
sbb
dec
inc
insl
fnstenv
sbb
cmp
cmp
aad
xor
xchg
or
jne
out
mov
push
insb
in
mov
pushl
fs
clc
popf
ja
cmp
inc
xor
inc
jl
cmp
cmc
or
dec
data16
scas
ss
iret
jne
lret
sub
nop
call
pop
add
ret
inc
cmpsl
mov
adc
ret
js
adc
lret
clc
into
add
lods
push
pop
inc
sub
xchg
add
call
sahf
in
repz
je
pop
imul
out
fcmovnu
jmp
mov
pop
dec
dec
and
ret
cmp
divl
push
xchg
ljmp
adc
js
mov
in
xchg
mov
in
xchg
cmp
rolb
in
in
push
arpl
jge
imul
iret
mov
push
adc
adc
adc
ja
sbb
ja
lods
imul
mov
inc
or
lea
push
mov
loop
xchg
addb
mulb
pop
nop
adc
xor
idiv
rcrb
mov
shrb
ret
loopne
movsl
lcall
dec
mov
mov
mov
push
cmp
std
xor
sub
pop
mov
ja
add
jno
punpcklwd
test
or
jg
push
rorl
mov
jmp
shlb
pop
push
test
jbe
push
xchg
mov
lods
mov
push
dec
mov
push
jne
inc
je
cmp
jecxz,pt
and
mov
or
notl
aad
cs
push
cmc
adc
xor
xchg
arpl
aad
dec
test
stc
rcl
push
cmc
mov
or
fistps
mov
jecxz
lcall
jg
jp
dec
test
divl
popf
cli
fisttps
add
push
loope
ljmp
pop
sti
lods
add
sarb
mov
lds
movaps
into
andb
lods
add
push
fs
pusha
and
dec
enter
cld
insb
mov
jns
pop
shlb
inc
and
dec
lods
sub
push
xchg
repz
pusha
popa
sub
adc
push
push
clc
jg
imul
bound
push
adcl
jle
jo
std
dec
xchg
mov
dec
les
sub
js
filds
call
xchg
push
cld
jne
inc
cmpsl
leave
hlt
cld
test
arpl
xor
imul
fidivrs
jae
fsts
push
clc
in
loop
movsl
out
mov
dec
jne
push
aaa
pop
xor
push
insl
pop
outsb
jne
ficompl
pop
nop
dec
add
ja
or
movsl
sti
inc
outsb
cmpsb
ss
pushf
ret
inc
xchg
dec
fcoms
mov
dec
bound
adc
jge
aas
xchg
mov
dec
loop
jmp
or
jl
pop
sbb
pop
inc
or
or
insb
call
dec
stc
fnsave
xchg
aad
sbb
add
and
dec
mov
inc
callw
jns
and
pop
mov
aas
xchg
pop
jle
imul
leave
adc
xorl
push
pop
mov
dec
mov
out
mov
outsl
dec
sti
lds
and
aaa
pushf
ljmp
jne
loop
jbe
add
lods
pop
xchg
js
cmp
jg
mov
mov
sub
jnp
jl
fisttpll
fnstsw
in
and
add
dec
mov
std
sub
popf
roll
and
shl
fs
fsts
push
outsb
dec
mov
xchg
xor
pop
mov
xchg
xchg
mov
cmp
mov
das
pop
cs
sbb
test
in
jge
xchg
in
push
out
lds
sub
fdivs
and
pop
out
sub
inc
push
xor
fimuls
or
stos
fadds
xor
ljmp
adc
popf
adc
sbb
popa
pop
sbb
sbb
mov
xlat
dec
insb
mov
or
out
fstl
lret
mov
pop
dec
icebp
inc
test
or
and
lret
push
ds
sub
int
mov
xchg
jbe
aad
rorb
in
mov
iret
lds
mov
mov
push
or
outsl
sbb
ficoms
push
popf
xor
rol
and
mov
jmp
pop
jle
push
mov
push
pusha
push
and
daa
adc
lods
dec
and
or
rcr
call
lods
mov
xor
xor
dec
cmp
dec
je
push
jb
filds
xor
adc
xchg
dec
xor
jnp
and
cmp
out
mov
jb
fmul
sub
clc
rcll
push
dec
mov
insl
or
pop
test
stos
add
imul
push
inc
jp
insl
pop
xchg
mov
mov
xchg
test
test
stos
rcl
das
cmp
mov
paddsb
sbb
negb
subb
pop
repz
sahf
test
and
jbe
sbb
mov
pop
push
loop
fdivs
sbb
xchg
sub
les
pop
aad
sub
stc
das
mov
das
adc
mov
cmp
xchg
push
and
das
sub
mov
popa
nop
adc
outsb
cmc
push
aad
into
jo
daa
xchg
insb
jge
imul
and
push
inc
orl
lcall
jbe
jge
and
ret
cmpsb
xchg
fdivrp
repnz
xchg
daa
inc
stc
imul
jo
cmp
pop
adc
mov
lock
fsubr
mov
push
adc
loop
adc
fchs
push
scas
add
cmp
loope
mov
std
xor
scas
ds
adc
fcompl
stos
xlat
insl
mov
movsb
push
add
out
addl
cmp
arpl
pop
movsb
decb
xchg
or
xor
test
xor
mov
nop
and
pusha
or
jb
arpl
lret
cmp
cmp
fisubl
jl
or
aas
ror
jbe
out
inc
or
or
into
hlt
xor
xchg
and
orb
loopne
pushf
sbbl
arpl
std
mov
or
fwait
out
cwtl
mov
sub
leave
lods
sbb
add
push
out
call
fidivs
dec
cli
cmp
pop
cwtl
scas
pusha
ret
push
pop
sub
push
jle
lods
or
jne
vpsllw
outsb
pop
sahf
push
aad
xchg
sbb
sbb
cmp
leave
ror
cmpsb
aaa
fidivrs
int
loope
mov
sbb
dec
in
aas
pop
mov
mov
sbb
in
pop
xor
jl
adc
fbld
mov
fsub
and
shrb
clc
imul
mulb
mov
add
les
add
xchg
sbb
das
push
jg
push
subb
and
pop
ror
dec
push
inc
je
pop
jnp
mov
in
jmp
xor
pop
dec
dec
insl
sub
test
popf
cmp
lea
insb
cmp
sbb
cmp
lods
push
push
in
pop
aad
repnz
push
push
push
out
xchg
adc
sub
jp
aas
out
int
adc
lret
jb
dec
inc
shrd
pop
fstpl
into
adc
add
insb
xor
cmpsl
mov
jl
dec
inc
adc
ret
jmp
mov
and
xchg
je
js
dec
cmc
in
insl
pop
mov
mov
and
fs
xor
sbb
dec
test
adc
pop
aaa
cmp
xchg
lahf
inc
pop
add
add
sbb
jae
out
xchg
lret
cli
inc
aas
mov
jl
xchg
mov
sarl
dec
cmp
push
les
call
inc
fcomip
jmp
ror
sub
cmp
sbb
cs
xchg
mov
or
inc
push
fwait
lret
jmp
pop
adc
jge
and
inc
jge
pop
ret
into
mov
adc
cltd
mov
jmp
in
out
pusha
push
mov
sbbl
mov
pcmpgtw
push
pop
dec
shll
clc
pop
pop
test
jns
jl
push
dec
adc
sub
out
ret
outsb
adc
repz
rcrb
addl
mov
pusha
aaa
test
sub
scas
pop
or
xor
xchg
push
xchg
sbb
inc
jl
ret
or
ljmp
push
adc
mov
cmpsb
lcall
dec
out
aas
add
cmpsb
mov
and
cmp
and
test
int
insl
lcall
test
xor
movsb
inc
lcall
xchg
push
mov
push
xchg
cmp
dec
add
or
icebp
int
cli
jb
cmp
movsl
imul
push
push
xchg
or
hlt
cli
lahf
adc
mov
enter
sbb
ret
insl
inc
lods
xlat
mov
sub
or
mov
out
or
cmp
stos
cmpsb
push
and
test
sti
or
dec
cmpsl
bound
icebp
je
xor
and
jp,pn
pusha
and
fstl
dec
pop
subl
pop
fcomps
pop
pop
iret
sahf
ss
icebp
cmp
movsb
stos
call
pop
xchg
push
add
stc
ljmp
incb
out
mov
inc
xchg
insl
mov
ret
xor
nop
repnz
push
xorb
je
adc
dec
lods
pop
and
popa
mov
adc
ja
mov
leave
inc
test
push
outsl
idiv
std
jecxz
cwtl
and
inc
pop
cli
sbb
pusha
xchg
dec
add
shrb
loope
xchg
adc
or
cmpsl
aaa
fisttpll
in
xchg
mov
xchg
sbbb
ret
mov
push
pop
pop
inc
mov
jae
je
mov
mov
xchg
icebp
fidivl
jge
jbe
adc
mov
lcall
ljmp
mov
pop
xlat
repz
push
repz
arpl
adc
xchg
sub
adc
cltd
or
jne
mov
pop
mov
je
cmp
mov
xlat
inc
push
nop
inc
mov
leave
mov
inc
or
add
mov
dec
roll
hlt
add
and
xchg
loopne
dec
icebp
jmp
sub
sbbb
rorb
leave
add
sbb
orl
addb
test
jns
int
mov
xchg
aam
add
repz
fimuls
jle
mov
xchg
inc
sbb
sbb
ja
xor
out
inc
push
insb
imul
rorb
sti
ljmp
push
aad
dec
fsubrl
ficompl
xchg
daa
popf
sbb
mov
jae
sub
cmp
add
subb
mov
inc
sbb
and
sub
mov
out
and
insl
fs
adc
cmp
cmp
and
pop
nop
dec
rorb
decb
imul
or
xor
dec
jb
lea
nop
in
lock
mov
jns
negb
xchg
jns
leave
les
sahf
sbb
jl
inc
in
mov
ss
roll
dec
pop
pop
imul
rorb
loop
inc
cmpsl
pop
push
mov
nop
ds
mov
hlt
mov
sbb
push
adc
dec
push
add
fdivl
jl
and
bound
inc
test
mov
out
imul
jne
addr16
mov
mov
dec
mov
and
pop
xchg
into
xchg
xchg
adc
fs
std
and
test
push
pmaddwd
xchg
ss
push
aaa
cltd
mov
xor
loopne
mov
pop
jae
ret
dec
and
sbb
xchg
jnp
or
sbb
mov
rcrb
out
or
mov
jle
shl
xchg
mov
sub
fdiv
add
ja
inc
hlt
imul
dec
push
popa
jno
jns
or
xor
sbb
orl
mov
mov
jle
jbe
push
mov
enter
and
and
es
lods
and
jmp
icebp
aaa
sti
fcomi
stos
mov
dec
ds
mov
cmp
mov
sbb
stc
xor
lcall
xchg
pop
fimull
xchg
sub
xchg
inc
je
rcl
lret
aas
pop
jns
adcb
sub
mov
dec
jnp
xchg
out
and
into
in
int3
mov
cmc
mov
out
idivb
mov
fisubl
sahf
ret
lcall
shrb
inc
test
cs
xor
dec
mov
into
pop
pop
jns
lock
pop
add
jb
inc
pop
call
les
clc
add
or
outsb
adc
xchg
movsl
dec
incl
pusha
fwait
das
sub
dec
mov
xlat
shll
sub
rcrb
stos
pop
adc
js
ja
mov
mov
cmp
aam
mov
popa
or
cmpsb
xlat
xchg
jae
xorb
aaa
push
pusha
mov
icebp
icebp
rcr
xchg
test
inc
inc
popf
and
inc
inc
push
lock
mov
stos
pop
xchg
xor
ret
cmp
adc
fnstcw
negl
push
jp
pop
dec
fwait
sbb
xor
sub
xor
pop
daa
jp
dec
mov
xchg
cmpsl
sahf
inc
xchg
repnz
mov
fiaddl
int3
pop
dec
add
int
pop
jae
scas
push
add
loope
out
xor
jge
xchg
sub
lods
inc
mov
ss
ja
mov
adc
or
push
test
sbb
stos
sbb
jp
hlt
test
das
int3
sarb
bound
xchg
out
pop
xor
sub
pop
imul
adc
xor
add
cmpl
ds
adc
aas
or
enter
push
out
lds
in
pop
clc
xchg
scas
movsb
scas
xchg
add
cmp
sub
mov
mov
out
sti
sbb
aam
shl
loopne
or
lods
add
pop
fdivl
dec
popf
pop
divb
aas
pop
int
fsubl
mov
inc
jb
xor
addb
loopne
mov
sbb
loopne
insl
jp
btc
adc
arpl
mov
pop
dec
pop
loop
xlat
lock
ret
mov
mov
jbe
push
inc
scas
imul
stc
xor
jno
out
scas
outsb
movsl
clc
jns
call
aam
cwtl
mov
push
mov
in
aaa
add
std
loopne
cmpsl
lret
hlt
xor
pop
cmp
ss
sub
arpl
xchg
in
push
aaa
adcl
lcall
mov
push
movsb
aas
jae
lods
mov
clc
push
ret
lcall
xchg
hlt
jnp
jnp
bsr
lock
dec
std
pop
xor
cmp
int
push
aad
sti
cmpsb
test
into
rorl
scas
inc
dec
rsqrtps
mov
daa
ljmp
ss
nop
push
leave
mov
dec
add
fdivrs
ret
in
imul
mov
jne
jmp
inc
lea
mov
js
push
dec
and
push
pushf
pop
adc
xor
in
cmp
push
push
and
cmpb
lds
nop
pop
jge
lea
add
pop
rclb
add
cli
leave
test
xchg
loopne
xchg
xorb
pusha
fistps
adc
shrb
or
pop
jecxz
popl
call
cmpsl
lock
enter
cli
push
in
mov
push
mov
shlb
sub
pop
dec
push
rcl
mov
dec
mov
inc
sub
cmp
int3
or
pop
push
fimull
out
outsb
lods
xorb
cwtl
iret
jns
int3
insl
mov
mov
flds
dec
je
or
subl
das
mov
js
jbe
and
test
fimuls
pop
sbb
iret
ficomps
in
and
mov
jo
lret
xor
push
inc
movsl
or
in
sub
loopne
and
pop
dec
scas
in
mov
lock
and
not
or
or
shrb
mov
test
dec
jb
in
loope
dec
addr16
data16
dec
lods
pop
test
mov
inc
jmp
negb
shrb
xor
mov
mov
test
add
mov
subb
xchg
imul
ljmp
js
pusha
or
pop
inc
rorl
jmp
xchg
aas
sahf
and
insb
and
adc
sbb
add
dec
sbbl
out
das
xchg
clc
inc
out
xlat
sub
imul
xchg
fdivrl
and
inc
or
dec
lods
in
mov
subb
cmp
lcall
das
jnp
inc
mov
ret
loopne
xchg
xlat
dec
je
aas
pop
and
xorb
mov
push
ss
dec
sti
sub
pop
aad
sbb
je
or
lock
dec
fs
lret
pop
mov
mov
jg
or
xor
into
or
in
mov
cmpsb
push
aam
or
imul
jb
pop
shr
das
fidivrl
popf
shll
mov
mov
xor
jnp
cmc
xchg
int
dec
and
out
out
outsb
insl
fildll
xor
ss
adc
inc
dec
out
pop
inc
iret
and
mov
pop
test
sbb
adcl
push
xlat
pop
scas
xchg
mov
lods
sbb
mov
dec
and
clc
and
cmpsl
jae
and
fimuls
adc
add
mov
movsb
int3
movsb
sub
test
mov
pusha
mov
xor
jl
stos
jp
xor
cmp
movsl
pop
and
jbe
icebp
nop
bound
lods
ds
xchg
scas
test
es
jo
pop
sub
xchg
sbb
inc
outsb
mov
pushf
mov
lock
ficomps
in
adc
xor
movsl
vrsqrtss
shlb
test
cmp
push
iret
out
stos
iret
sub
xchg
mov
mov
inc
iret
movsl
push
cmpsl
xor
sti
sbb
or
scas
mov
xchg
insb
sbb
mov
mov
pop
test
jge
mov
xchg
int3
pop
cmp
stos
stc
arpl
ja
je
imul
push
xor
cmp
add
mov
mov
or
dec
daa
iret
sarl
int
and
inc
shl
inc
add
mov
into
push
int
xchg
pop
lea
or
pushf
aam
cmpsb
xchg
inc
pop
inc
negb
or
jns
test
sub
scas
jo
dec
dec
out
mov
mov
out
cli
jmp
insb
data16
imull
pusha
and
xchg
cmc
rcr
repz
mov
xchg
imulb
hlt
dec
fdivr
insb
pop
or
stos
push
jge
add
push
mov
or
add
cmpl
insb
adc
push
out
xchg
mov
jb
les
dec
test
sbb
inc
xchg
sbbl
stos
cwtl
mov
mov
sub
sub
add
pop
out
icebp
push
sbbb
mov
mov
in
jge
sahf
cld
sub
and
dec
adc
insl
in
out
sub
lock
aaa
insb
inc
push
inc
es
cmpsl
pop
insl
inc
inc
push
jns
mov
aam
cld
and
xchg
adc
mov
xchg
push
add
or
in
dec
movsb
popf
xor
insb
emms
jae
leave
adc
pushf
sbb
outsb
and
dec
or
mov
push
cltd
and
loop
in
dec
jmp
xchg
push
pop
sbb
es
movsb
pop
pop
mov
test
mov
lods
sbb
nop
aaa
mov
lahf
mov
mov
sbb
ss
fildll
adc
ds
sub
test
daa
mov
mov
xor
call
imul
inc
into
test
push
daa
scas
imul
loop
or
xchg
xchg
lock
inc
movsb
mov
enter
jnp
mov
stc
imul
mov
xor
jo
icebp
int3
jmp
mov
dec
inc
jmp
xor
and
sbb
jg
ficoml
sub
jae
cmp
mov
sbb
call
cmp
lahf
mov
arpl
jb
imul
xchg
mov
es
mov
or
fs
into
or
jo
ret
inc
rolb
jmp
mov
pop
out
xchg
mov
push
mov
xlat
or
xor
push
sub
in
xor
xchg
in
inc
sub
in
lea
push
jno
mov
mov
pop
pop
shrb
sbb
call
xchg
jae
testb
push
outsb
add
test
out
lock
mov
sti
cmpsb
fs
cmpsb
mov
imul
dec
add
hlt
fldenv
aad
mov
clc
xchg
add
or
jecxz
add
loopne
scas
adc
icebp
push
std
mov
int3
cli
push
nop
mov
mov
mov
int3
inc
sahf
or
mov
roll
pop
cmp
mov
pop
xchg
xchg
out
mov
enter
lret
je
in
ret
cli
xlat
mov
mov
mov
push
xor
icebp
lcall
fs
adc
mov
xor
pop
data16
iret
repnz
insl
gs
js
insb
fldl
subl
cmp
sbb
cli
sub
or
enter
xchg
adc
lcall
repnz
sub
mov
mov
mov
add
test
pop
aad
mov
mov
popf
xor
pop
sub
and
not
nop
xchg
or
arpl
shll
fadds
imul
sti
dec
cs
in
hlt
imul
sub
stos
aas
sub
pop
iret
in
inc
mov
push
fcom
adc
and
cmp
inc
fstps
scas
push
daa
adc
jae
mov
mov
xor
mov
sbbl
fisttpl
addb
sbb
leave
pop
cmpsl
dec
jbe
mov
fwait
daa
pop
test
pop
popf
push
aas
js
adc
shll
gs
hlt
notl
out
notl
adc
jg
cmp
addr16
lret
jne
cltd
loop
ss
das
inc
push
jb
mov
xor
imul
fcoms
or
into
lods
mov
hlt
ja
insb
ret
xlat
jl
sti
jl
ds
lcall
fsubrl
inc
arpl
lock
lss
jo
mov
scas
in
outsl
sub
mov
icebp
icebp
orl
jae
cltd
shll
dec
orb
loopne
inc
dec
mov
jo
add
pop
mov
dec
fdivl
int3
pop
sbb
call
popf
mov
inc
inc
or
fs
pop
inc
stos
xchg
and
dec
sbb
loop
jecxz
ja
mov
repz
cmp
sahf
hlt
pushf
dec
popf
xor
mov
mov
dec
pop
push
or
call
mov
xchg
xor
ret
and
bound
fnstenv
mov
aaa
mov
pop
aad
pop
jmp
out
ja
loop
cltd
repz
mov
ljmp
stos
mov
jne
xor
pusha
outsl
pop
jae
sbb
dec
rclb
out
jg
sbb
incb
dec
jnp
xchg
adc
inc
xchg
sub
int3
mov
ljmp
pusha
mov
dec
in
mov
and
mov
fnsave
ret
rcrb
je
dec
rcrl
push
daa
jbe
cmpsb
loopne
xchg
mov
or
xchg
sbb
xor
test
bnd
or
sub
sub
cld
ja
inc
sbb
fcmovnu
sbb
popf
dec
leave
dec
mov
mov
jbe
mov
xchg
pushf
insb
sbb
fsubrl
fcomp
cmp
lret
arpl
pop
mov
push
pop
fisubl
imul
mov
add
adc
add
insl
pop
cmc
popf
in
nop
sub
mov
sub
test
or
jns
sbb
lods
sbb
popa
mov
add
dec
ss
stos
test
fstpl
pop
add
inc
idiv
add
xchg
push
mov
inc
scas
cltd
inc
mov
sub
int
and
repnz
addr16
push
iret
xor
scas
push
inc
jl
ss
insb
or
mov
inc
mov
inc
std
imul
popf
add
jg
fiadds
mov
lahf
test
pop
std
pop
sti
jmp
in
aas
divb
mov
mov
mov
ret
inc
jl
xchg
adc
aas
shll
out
jge
cltd
jb
andnps
add
and
fwait
subl
in
inc
push
mov
adc
xchg
jno
or
jmp
out
shrl
mov
inc
ds
test
push
lds
mov
pushf
dec
sub
out
rclb
push
push
int
cmp
cld
aad
int3
loopne
pop
sub
fsubrl
mov
testb
mov
xchg
adc
inc
cmp
mov
int
jg
jecxz
mov
mov
mov
lcall
cmp
movsb
xlat
xlat
jb
cmp
adc
add
fists
push
hlt
and
pop
xchg
sub
stos
js
adc
imul
bound
pop
jle
adc
int3
std
pop
repz
jb
jp
enter
imul
enter
xchg
add
mov
mov
loopne
mov
dec
xchg
pusha
imul
in
packssdw
mov
in
mov
pop
add
lcall
jns
sbb
fnstenv
hlt
ja
sub
shlb
or
push
or
inc
ds
mov
ljmp
mov
pusha
int3
sub
lret
into
je
sub
pop
adc
lock
imul
int
cs
xor
es
adc
into
mov
push
pushf
sbb
push
push
in
jmp
adc
mov
push
mov
movsb
inc
mov
cld
xchg
movsl
negb
sub
hlt
aas
jo
jno
xor
pop
cwtl
adc
std
stc
inc
pop
xor
aaa
pop
jbe
xchg
sub
push
lea
mov
mov
pushf
aaa
cwtl
or
sbb
dec
rcll
add
sbb
movsb
jo
out
mov
lods
out
shrb
cmpsb
cli
dec
push
jb
or
cmp
repnz
testl
dec
data16
add
or
mov
mov
adcl
icebp
ss
adc
filds
add
sbbb
add
and
sbb
mov
fs
jl
loopne
pop
add
movsl
stos
or
js
aas
push
cwtl
test
insb
inc
ja
sub
pop
xchg
xor
imul
adc
mov
mov
cwtl
movsl
in
xor
sub
pop
mov
cli
rclb
std
jmp
sbb
dec
jecxz
icebp
jl
ret
add
cmc
mov
ja
outsl
movsl
repz
xchg
dec
pop
adc
cmp
rol
int
add
sub
ljmp
push
lret
jg
enter
rorb
outsb
xchg
mov
or
sub
xchg
addb
loop
mov
jmp
out
xor
lret
xchg
add
mov
pop
stos
mov
pop
mov
xchg
arpl
gs
cmp
mov
ja,pt
stos
enter
fdiv
jnp
and
addr16
nop
lea
outsl
ds
lret
jno
mov
cmp
sbb
mov
cmpsb
ss
loop
mov
mov
pop
push
lcall
into
jg
xchg
dec
sbb
mov
xchg
scas
fdivl
stos
lret
dec
leave
pop
xor
mov
add
sbb
das
sub
add
int3
mov
mov
aaa
mov
outsb
add
and
arpl
fists
jge
or
shlb
or
lods
popf
pop
add
xchg
jbe
jl
addr16
notl
aad
loopne
mov
scas
repz
iret
lret
mov
push
cmc
inc
dec
mov
xor
and
add
push
dec
jns
std
add
dec
fst
jecxz
xchg
inc
rcl
dec
stos
clc
inc
add
popf
or
mov
xchg
and
cmpsb
mov
enter
lcall
out
imul
dec
loope
int3
hlt
cmpsb
xor
fsub
mov
mov
inc
mov
pop
arpl
filds
stos
test
xor
mov
insl
jp
out
mov
mov
js
jb
adc
adc
adc
mov
lods
jbe
xorl
cli
cli
nop
jnp
scas
xchg
into
clc
pop
pop
repnz
jne
pop
outsl
icebp
lds
add
cmp
mov
dec
jmp
insb
mov
dec
popf
inc
adc
xor
iret
ret
add
and
mov
sub
push
icebp
outsb
lret
fistps
rclb
mov
pop
mov
popa
add
cli
add
jp
cmpb
outsl
dec
outsl
in
subl
xchg
pop
aas
adc
add
mov
cmc
mov
call
std
stos
fsubrl
loope
pop
pop
cmpsl
mov
sahf
xor
fcoms
test
push
mov
dec
xchg
cmp
mov
inc
les
mov
loop
inc
cmp
jp
jmp
repnz
cwtl
push
repnz
popa
and
hlt
out
xchg
sub
mov
xor
call
jl
xor
or
test
xchg
lea
dec
mov
mov
add
xor
mov
add
pop
mov
dec
mov
push
add
xchg
sub
sbb
jb
jb
pop
das
in
jl
mov
lock
std
aam
and
pusha
lcall
addr16
gs
add
js
add
dec
and
inc
in
sub
fmul
cvttps2pi
pop
and
sub
enter
xor
nop
fidivrl
push
jbe
stos
jo
mov
push
xor
jg
mov
push
dec
or
das
mov
test
sub
mov
mov
cmp
xor
or
push
scas
pop
lock
aaa
ja
stos
inc
sub
out
loopne
push
in
sub
lahf
or
sub
adc
adc
outsb
adc
pop
dec
jnp
in
dec
in
and
call
xchg
inc
pusha
pop
pop
inc
inc
lret
mov
mov
stos
sbb
pop
pop
cld
fdivl
xor
int
mov
out
mov
leave
cli
push
xchg
inc
loop
add
mov
cmp
cltd
cmp
mov
loopne
push
loopne
mov
or
pop
dec
push
nop
pushf
cmp
adc
cwtl
dec
outsb
mov
jp
call
dec
lods
sbb
pop
cltd
inc
dec
add
inc
outsb
pop
lret
fdivrs
in
out
jp
lret
mov
mov
or
je
and
sbb
xor
xlat
shr
xor
fidivrl
bnd
dec
aas
xor
sbb
mov
outsb
sbb
aam
out
je
inc
sbb
test
inc
loope
btr
movsb
add
and
mov
aam
pop
imul
imulw
mov
or
and
or
jo
jle
shlb
ljmp
pop
jno
and
in
mov
fsubl
pop
jno
lcall
jecxz
fistpl
cltd
imul
clc
mov
ja
fstl
lret
xchg
shrb
mov
mov
scas
ret
or
cld
std
and
jg
arpl
xor
and
mov
shll
ficoml
pop
xchg
mov
gs
xchg
lret
in
int3
out
sub
enter
fistpl
leave
xor
mov
add
sarb
and
daa
sub
sti
mov
pop
mov
mov
push
outsb
inc
sbb
mov
jge
or
adc
xor
mov
or
and
in
les
mov
adc
mov
movsb
mulb
mov
mov
push
mov
scas
fmuls
repz
mov
push
push
mov
prefetch
iret
xchg
rsqrtps
mov
sbb
out
cmc
push
mov
mov
lea
pushf
mov
in
and
xlat
cmc
scas
push
ljmp
sbb
insb
iret
push
stos
scas
ret
mov
int3
mov
mov
adc
bound
dec
pop
push
or
push
aad
add
xorl
jbe
adc
aas
jle
mov
scas
xor
aam
add
ljmp
mov
cmpsl
adc
jmp
aad
mov
test
in
inc
xor
mov
push
orl
movsb
cmp
ret
or
sbb
push
mov
xor
nop
adc
cmp
lea
sub
push
adc
jbe
fwait
hlt
fcoml
push
xor
sahf
push
movsb
nop
jl
mov
adc
pop
dec
xchg
fdivr
or
pusha
sbb
fsubl
xorb
mov
filds
xchg
cmp
mov
out
bound
inc
mov
cmpsb
cwtl
pop
out
mov
es
mov
fwait
imul
or
sub
and
imul
lret
jns
jge
inc
jbe
pop
push
ret
popa
sub
pop
ror
mov
iret
cmp
sub
push
push
cmpsb
aad
test
and
cli
adc
add
push
push
xor
fisttpll
popf
dec
cli
addr16
jmp
std
btr
xchg
fcomps
lahf
adc
pusha
xchg
mov
sbb
sbb
add
and
movsl
mov
push
push
sbb
repnz
lods
mov
dec
lea
jbe
add
iret
fcomi
aad
fldt
jg
and
inc
mov
jmp
lret
mov
sarb
mov
push
stos
mov
jns
sub
pop
mov
or
mov
fdivl
addr16
or
cli
push
in
jle
mov
xchg
sahf
leave
das
pop
sbb
mov
loopne
xor
pop
push
clc
in
adc
or
lret
mov
push
sbb
adc
add
sbb
cmp
bound
fs
ss
insl
sbb
or
call
fstpt
xor
or
popf
fwait
divl
pop
arpl
divb
imul
cmpsb
xchg
hlt
xchg
test
sub
jns
shl
pop
mov
sub
rorl
push
jmp
fwait
and
or
bound
rcrl
lods
out
insw
inc
ret
das
mov
push
xor
adc
cmpsb
pop
jbe
pop
mov
push
sub
cs
cmpsb
inc
leave
push
shl
push
imul
arpl
cltd
sub
outsl
sub
add
rorb
mov
inc
xchg
add
pop
negb
cmp
ficompl
inc
sti
lret
mov
adc
lods
insl
inc
adc
adc
inc
lret
adc
insl
fstp
call
dec
jp
xor
add
outsl
fildll
ljmp
cld
ret
pop
cmp
push
int3
andb
imul
test
jns
jo
pop
mov
je
cld
ljmp
xchg
push
leave
aas
jl
mov
jno
jecxz
shlb
outsb
cmpsl
movsl
cmpsb
out
mov
push
sub
cmpsl
or
fnstcw
cmpsl
in
ljmp
dec
lret
xor
popf
xchg
dec
jae
xor
and
inc
push
sub
and
mov
add
outsl
outsb
xchg
fsubs
push
cmp
out
mov
jo
out
mov
push
outsb
dec
aam
hlt
pop
sbb
adc
cmp
fs
add
popa
dec
xchg
std
push
ret
push
xchg
lea
ds
xlat
inc
loop
insb
pop
mov
roll
js
jecxz
cmc
mov
mov
scas
adc
scas
mov
out
mov
push
and
lret
std
sub
ds
hlt
push
push
in
adc
xchg
shlb
loop
jns
insl
into
les
cmpsb
xchg
xchg
jle
jmp
or
push
nop
out
call
pop
and
jp
rcll
pop
mov
mov
inc
cmc
ljmp
jo
xor
out
ljmp
push
push
pop
pop
fcoms
jp
pop
popf
pop
roll
stos
outsl
leave
and
adc
sbb
or
adc
mov
shl
scas
stc
mov
add
xor
xor
stos
test
push
adc
mov
icebp
mov
cli
sahf
mov
add
jg
icebp
mov
jge
lret
movsb
out
push
call
hlt
adc
int
push
imull
in
fdivs
push
cld
xchg
mov
lods
or
in
jbe
jno
mov
mov
popa
lea
je
jecxz
inc
push
insl
enter
ret
mov
popf
cmp
rorl
mov
sbb
xchg
lods
dec
test
cs
mov
adc
and
sub
lea
and
lret
ljmp
mov
or
fimuls
mov
xchg
push
in
xor
pushf
in
inc
push
insl
inc
shrl
mov
sub
repz
push
fnsave
stos
aas
inc
add
into
imul
pushf
lods
mov
bnd
daa
call
sub
push
jp
sbb
dec
xor
outsl
enter
stos
fistpl
jg
push
xchg
fcom
adc
adc
jge
fcompl
pop
stos
push
cmp
out
test
icebp
inc
icebp
sub
popw
out
pop
push
dec
popa
xor
mov
loope
gs
jg
jmp
data16
mov
pop
inc
sbb
push
imul
fisubs
leave
aam
and
stos
xor
dec
jbe
pop
mov
loop
mov
pop
pop
mov
pop
cmp
test
sub
fdivl
sub
popf
lods
mov
lods
mov
xchg
pop
subb
push
push
jo
adc
pop
cmp
in
scas
sub
or
in
mov
ret
clc
xor
mov
pop
push
jg
xchg
mov
mov
icebp
push
insl
lods
sbb
idiv
jmp
popa
xchg
test
dec
call
push
adc
xor
sub
inc
xor
jmp
loope
add
cwtl
lock
ja
mov
lcall
jae
lahf
or
mov
loopne
loopne
and
ljmp
push
jl
mov
les
push
test
test
dec
xchg
js
cmp
popa
es
xor
lcall
shld
inc
mov
xchg
pop
jbe
fmull
ljmp
cwtl
push
arpl
dec
and
or
adc
push
into
add
inc
sub
ret
or
into
mov
ss
sub
mov
cmpsb
push
lahf
flds
push
gs
mov
fisttpl
int3
sbb
aam
js
mov
dec
mov
fsubrl
cwtl
pusha
int3
jae
or
inc
daa
dec
jae
lcall
or
cltd
je
push
mov
imul
xchg
inc
nop
mov
gs
push
push
lods
pop
jb
sbb
rcr
jbe
mov
push
test
sahf
mov
sbb
push
mov
aaa
cmpsb
inc
nop
push
addl
pop
mov
xchg
jmp
movsl
mov
pop
mov
test
jno
jg
cltd
hlt
notl
dec
popf
icebp
add
rorb
in
icebp
sti
jne
fs
scas
sar
and
pop
enter
sbb
add
pusha
out
fstps
lds
push
lods
jecxz
xor
sub
mov
notb
pop
inc
iret
add
in
sub
mov
jle
jbe
movsl
shrd
in
mov
js
add
test
xchg
adc
adc
sub
iret
popf
clc
icebp
test
inc
dec
out
mov
test
leave
cmp
int
stos
fidivl
daa
mov
cli
bound
test
and
repnz
mov
mov
dec
or
jb
xchg
mov
mov
icebp
hlt
test
mov
adc
sub
scas
fsubrs
notl
adc
testb
pop
xchg
inc
rclb
mov
add
push
int
cmp
xor
in
xor
and
fisubrl
les
sbbb
sbb
push
lea
pop
ss
jne
aad
cmpsb
push
jge
enter
xchg
cmc
jb
push
pop
mov
sbb
fstps
mov
and
inc
xor
xchg
data16
in
sbb
mov
pop
aas
sbb
das
sbb
jl
in
test
sbb
scas
testl
xor
nop
loope
insb
lret
out
dec
dec
jb
inc
push
xchg
adc
and
nop
or
jl
in
cmp
push
aas
xchg
shrb
iret
test
movsb
out
icebp
dec
neg
add
adc
mov
repnz
or
movsb
jl
or
sub
jo
jo
into
scas
js
fisubs
sti
rcl
jp
mov
hlt
dec
in
mov
mov
xchg
test
cwtl
cmpl
repnz
xor
sbb
arpl
scas
packssdw
cmp
cmpsb
jle
fnstcw
aam
sbb
bound
mov
xchg
lret
fucomp
out
or
add
shl
mov
pop
xchg
negl
xor
clc
ds
xchg
enter
nop
in
mov
mov
psubq
inc
jo
ret
xchg
int3
xor
aas
jl
pop
and
cmp
pop
sbb
fs
add
jg
fiadds
xor
ljmp
cmp
pusha
mov
arpl
rclb
xchg
mov
mov
popa
pop
ror
jb
fwait
std
cmp
fs
adc
mov
sbb
rorb
and
cmpsb
lods
mov
sub
ds
or
mov
insb
in
loopne
insl
inc
out
sub
dec
test
add
ja
mov
xor
dec
in
mov
and
and
and
clc
les
dec
cs
mov
hlt
mov
xchg
lcall
sbb
or
add
icebp
dec
mov
test
push
cmc
or
or
cmp
rol
call
shrb
in
xchg
sub
add
xor
push
pop
imul
jo,pt
sbb
xor
shrl
into
inc
aam
adc
cmpsb
xor
mov
fnstenv
or
loope
cltd
sbb
adc
pop
lds
mov
adc
lret
mov
push
pop
pop
push
decl
add
pop
jbe
mov
int
outsb
pop
mov
das
cmp
std
jg
cmp
or
add
dec
pmullw
imul
add
cmp
daa
stos
dec
mov
fidivl
int
cwtl
push
loope
inc
das
sarb
adc
cmc
pop
dec
xor
inc
jmp
sbb
scas
outsb
or
dec
aam
je
mov
adc
mov
cwtl
inc
sub
mov
dec
inc
popa
lea
pop
add
fs
xchg
cmp
xor
add
mov
jo
repnz
mov
inc
push
xchg
lods
pop
loopne
addr16
adc
jmp
cmp
fldcw
sbb
fbstp
inc
jno
add
scas
mov
out
mov
rorb
aam
movsl
jl
clc
adc
stc
scas
pop
mov
cmp
sub
pop
or
adcl
mov
add
mov
push
clc
enter
inc
out
or
jo
test
adc
hlt
cmc
add
insl
test
ljmp
adc
fdivr
dec
mov
aas
out
jge
jb
mov
lods
pop
mov
jns
test
dec
dec
js
hlt
push
outsl
add
out
push
mov
out
adcb
inc
mov
and
and
jae
fisttpll
rclb
lret
stos
aam
or
das
repz
fstps
in
sub
push
jnp
or
test
std
xchg
dec
sub
icebp
mov
pop
test
rcll
adc
xchg
and
mov
jmp
int3
xchg
in
mov
scas
cmp
stc
xchg
test
pushf
out
cld
pop
shll
cmpsl
push
loopne
jg
mov
cmpsl
pop
sub
loopne
std
ret
roll
fisttpl
xchg
jne
push
cs
addr16
add
jp
adc
mov
mov
mov
dec
prefetcht2
ret
andb
pop
sub
cli
xchg
adc
lcall
push
repz
clc
inc
dec
sbb
jbe
aad
mov
in
stc
imul
add
push
mov
not
jge
mov
push
insl
or
leave
outsb
lret
imulb
inc
stc
hlt
aam
rclb
push
test
and
cwtl
ljmp
pop
jno
out
into
push
and
adcb
fsubr
test
inc
and
insl
inc
jne
pop
movsb
add
and
lret
cmp
mov
mov
xchg
push
inc
in
or
add
add
mov
cmc
leave
xchg
je
jo
mov
push
aas
ds
or
xlat
add
xchg
dec
gs
lods
lgs
push
insb
dec
mov
stc
xchg
sbb
pop
or
dec
repz
addb
xchg
fwait
outsl
inc
leave
sbb
pop
lcall
imul
mov
out
mov
push
xchg
jnp
mov
insb
xchg
into
cli
in
sub
pop
add
call
test
aas
jl
lret
adc
sti
mov
pop
push
pop
xor
sub
ljmp
scas
test
cltd
ret
fdivl
scas
mov
nop
arpl
rol
ljmp
test
push
inc
movsl
daa
xchg
incb
mov
call
movsl
loop
or
iret
mov
std
and
xor
fsubrl
xchg
aad
div
fistps
andb
cmp
sbb
jmp
jne
pop
ret
iret
add
jmp
out
jbe
insb
repnz
or
xchg
repz
stos
cltd
jae
and
sbb
lcall
or
xor
add
aad
cmpsb
and
sbb
mov
xlat
nop
mov
cmp
inc
ret
fisttps
pop
xor
das
frstor
fiadds
pusha
xor
and
or
xor
and
arpl
aad
in
push
cmp
jecxz
ret
mov
or
pusha
sti
test
mov
mov
repnz
jno
pusha
rcrb
pop
int
push
mov
or
call
ret
adc
sub
repz
movsl
mov
lds
je
test
add
test
cmp
xor
adc
in
shrb
push
pop
stos
jg
jge
cmp
and
add
mov
pusha
rcl
push
movsb
sahf
leave
int
fiaddl
call
push
icebp
and
sub
dec
aam
in
sub
dec
push
lret
mov
lock
lret
pop
out
push
scas
mov
add
and
dec
test
lret
push
mov
mov
jne
mov
popa
jns
out
ja
jg
inc
sbb
or
inc
xor
dec
enter
mov
mov
out
jne
cmpsl
mov
mov
push
movsb
sbb
pop
or
dec
mov
in
pop
clc
add
xor
stos
jae
arpl
sbb
mov
cmpsb
pop
push
movsl
mov
adc
cld
dec
pusha
fwait
in
ret
stos
push
cs
out
mov
jg
xchg
in
pop
xor
ret
leave
mov
stc
inc
mov
dec
cld
cmp
or
lahf
mov
shll
inc
mov
pop
into
xchg
sbb
inc
pusha
insb
int3
ds
add
jns
xchg
test
arpl
or
pop
push
pop
clc
xor
sarl
nop
incb
and
stc
pushw
jmp
mov
cmp
mov
mov
pop
sub
aam
jne
fistpl
mov
imul
pop
adc
cmp
fwait
xor
mov
mov
cmp
fadds
push
dec
std
dec
setbe
aam
popa
sub
xor
lds
test
push
or
jae
mov
lock
mov
or
nop
cmpsb
or
iret
xlat
sarb
inc
test
fwait
scas
adc
imul
pop
pop
js
mov
jle
add
fisubrl
cmp
fisttps
shrl
outsl
ljmp
shll
fmull
or
sbbl
xchg
lods
addr16
mov
repnz
lret
or
lods
mov
and
ljmp
mov
mov
sti
lret
push
jno
lahf
lret
cmp
fcmove
jbe
mov
adc
push
shlb
scas
filds
push
into
lea
mov
xchg
pop
mov
mov
xchg
or
dec
test
push
jge
cmpsb
fwait
pop
jbe
xchg
adc
outsl
test
jo
xchg
imul
mov
mov
fistl
pop
outsl
jbe
xor
or
push
or
xor
push
dec
sbb
push
jno
xchg
repz
push
arpl
or
sarl
mov
cmp
mov
jmp
repnz
jg
subb
push
inc
jge,pn
int
xor
in
loop
sbb
scas
pop
mov
push
xor
mov
and
mov
cwtl
adc
add
fwait
lds
ds
stc
and
subl
pop
test
clc
cmpsb
mov
xchg
fcoml
mov
xchg
stc
pop
inc
jbe
inc
xlat
sbb
rcl
enter
lret
out
mov
incb
add
les
sbb
xchg
sub
xchg
imul
shlb
or
ficoms
daa
inc
icebp
js
mov
mov
jmp
cli
in
push
mov
fisubs
sti
xchg
lods
dec
xor
sbb
test
fwait
cld
int
or
pop
mov
fcomp
adc
xchg
sub
shrl
lret
adc
js
inc
push
outsl
adc
sarb
fildll
sbb
enter
pop
lret
sbb
or
xlat
test
data16
imul
jbe
inc
xchg
fcompl
mov
imul
int3
push
inc
push
aas
imul
loop
xor
outsb
mov
sub
push
subl
pop
aas
pop
inc
xchg
loopne
sub
lea
pop
enter
movsl
sahf
fmull
xor
lret
push
fdiv
mov
push
scas
fs
dec
sub
leave
mov
shl
jbe
xchg
cmp
out
outsl
push
xchg
cs
jl
test
mov
popf
add
adc
rcr
xchg
xor
mov
ficoml
add
dec
and
mov
repnz
cld
jp
scas
add
imul
mov
mov
mov
push
xchg
sarb
sarb
cmp
les
call
popa
bswap
sub
and
or
std
gs
add
es
repz
sbb
adc
aaa
cmp
ds
jmp
sbbb
in
mov
sub
sbb
mov
adc
aaa
test
and
adc
cmovge
jbe
es
lds
add
aad
out
sbbl
push
jbe
cltd
mov
js
dec
mov
lret
mov
lock
aam
jne
sbb
jb
insb
add
pop
movsl
inc
xlat
pop
mov
dec
mov
shrl
sbb
dec
adcl
cmp
outsb
aad
or
fadd
ljmp
pop
stos
mov
dec
jp
inc
andl
mov
cltd
stos
cmp
mov
xchg
jmp
movsb
sub
inc
ret
mov
icebp
sbb
push
sub
sub
and
insb
inc
and
sub
pop
addb
push
lret
mov
push
daa
fbstp
xchg
faddl
les
rcll
fisttps
dec
fidivrl
addr16
notl
scas
sub
js
out
cs
cmpsl
cmp
mov
lahf
xor
jp
cmc
movsb
adc
lret
sbb
pop
push
nop
fwait
inc
popa
dec
loope
xor
lods
pop
imul
xor
fildl
mov
mov
cmc
lods
push
jnp
fwait
sub
mov
mov
or
sti
push
mov
cmpl
les
sub
movsb
shll
test
cmp
subb
out
mov
leave
push
inc
sbb
mov
sub
leave
fnsave
jge
pmaxsw
fidivrs
mov
adc
daa
add
push
dec
scas
lea
xor
xchg
jnp
notb
dec
out
test
dec
push
into
push
mov
aaa
popf
mov
sbb
cld
jno
push
aam
sbb
imul
cmp
mov
sub
out
pop
stos
fdivrl
loopne
in
mov
inc
repz
xchg
jno
sbb
and
test
packuswb
and
out
test
and
ret
push
lods
ror
cmp
rclb
cmp
stos
push
pushf
mov
sub
cli
sub
inc
hlt
out
inc
sub
inc
aas
aas
rcr
stos
add
js
or
leave
mov
js
push
popf
mov
clc
scas
and
ret
cltd
cmp
jg
pop
cmp
inc
sub
test
repnz
mov
push
outsb
mov
xchg
xor
push
pop
stos
stos
bound
push
mov
clc
push
loop
push
js
flds
sub
shr
xor
cmc
mov
add
cmp
jne
xchg
inc
inc
lcall
ljmp
mov
jg
data16
shl
aaa
aaa
add
imul
into
push
adc
mov
sbb
mov
arpl
cmp
shr
xchg
rcrl
pusha
mov
orb
aaa
aam
push
int3
addl
mov
dec
or
add
and
test
dec
out
inc
fcomps
inc
fisubrl
shr
insb
xchg
inc
iret
cli
ficoms
nop
cmpsl
bound
es
push
mov
lds
mov
xlat
fwait
inc
call
int3
and
jecxz
mov
xchg
pushf
push
xchg
adc
lcall
scas
enter
and
add
sub
subl
pop
push
push
jno
cmpb
fdivl
mov
cmp
dec
inc
shr
push
add
mov
jnp
mov
clc
pusha
xor
ret
or
scas
push
xchg
hlt
es
adc
cld
mov
pop
pop
shr
loopne
mov
cwtl
pop
icebp
xchg
inc
pop
xchg
test
sub
ss
test
sbb
mov
jecxz
sbb
mov
daa
cltd
jno
shlb
sbb
mov
gs
mov
les
jae
jge
inc
ret
pop
mov
add
push
popa
push
and
imul
imul
cltd
and
out
shr
movsl
mov
jne
pop
in
aaa
sbb
pop
xor
fmull
and
ja
pop
adc
or
inc
daa
xchg
lcall
ss
ret
pop
js
sbb
out
pop
inc
aas
lret
pushf
mov
mov
stc
push
gs
jno
and
push
ds
sbb
sub
mov
xorb
imul
push
repnz
xor
in
dec
jae
idivb
push
lahf
sbb
adc
mov
pop
rcrb
fs
cmp
mov
nop
inc
mov
xor
stc
sti
cs
xchg
add
roll
lea
cld
sub
popa
xchg
xor
loop
cmp
ja
push
inc
pushf
xchg
fmull
or
outsl
xchg
aas
jecxz
inc
push
and
jle
test
sub
xor
xchg
cli
data16
scas
sub
mov
jno
fwait
repnz
adc
in
xlat
sahf
jb
movlps
shrl
mov
xchg
push
fcmove
mov
data16
add
mov
jo
pop
nop
fwait
loop
jae
cmpsb
popa
push
push
add
rcrb
ja
inc
cmc
out
stos
sbb
sbb
push
mov
sbb
es
dec
movsl
jecxz
test
cmp
mov
pop
cmpsb
and
repz
fldz
sti
mov
mov
mov
pop
jbe
andb
add
xlat
ds
das
mov
adc
stos
mov
jmp
cmpsl
sub
enter
sbb
inc
scas
outsl
mov
faddl
push
lods
or
pusha
insl
js
cld
inc
jmp
imul
pop
sbb
adc
mov
sbb
pop
jno
add
mov
pop
inc
xchg
jne
jae
push
lahf
inc
xchg
xorl
mov
mov
cld
pop
enter
inc
subb
sti
scas
jmp
xchg
sbb
sti
sbb
dec
ret
scas
inc
mov
inc
xor
xchg
adc
ds
mov
mov
jns
subps
lods
lcall
lock
inc
pop
daa
mov
xor
push
insl
pusha
shlb
dec
pop
mov
xor
xor
int
sub
push
ror
insb
out
dec
sub
inc
popa
jb
and
fmuls
adc
cmp
add
pop
notb
sub
cld
outsb
push
cmp
in
xchg
ljmp
jg
mov
fistps
dec
daa
or
adc
jp
push
imul
dec
jo
sub
pop
pushf
or
or
mov
push
neg
push
shll
rorb
mov
adc
in
jl
fwait
movl
fimull
shll
stc
test
into
jbe
movsl
inc
jl
movsb
inc
sub
cmp
mov
cld
and
fucomip
pop
fidivl
js
out
or
dec
and
mov
std
mov
xor
cmpsb
xchg
nop
sbb
jb
fdivl
stos
ret
notl
lock
nop
addr16
cmpb
or
je
repz
mov
sub
and
cs
xor
pop
xchg
inc
mov
call
lahf
jae
push
push
hlt
and
jge
pop
je
mov
in
lret
inc
mov
rorl
mov
dec
fisubrl
and
idivl
pop
inc
das
jae
add
push
sub
lds
loop
scas
xor
testl
iret
shlb
jo
xchg
js
bound
mov
fs
outsl
call
fcoms
mov
mov
jb
ret
imul
xor
adc
aam
cmpl
cs
dec
mov
call
nop
mov
mov
jbe
xor
jp
cmp
cmp
jmp
dec
inc
xchg
out
popa
dec
fisubrl
add
mov
out
in
push
addl
push
pop
arpl
fnstcw
push
hlt
mov
mov
adc
add
add
xor
mov
jb
pop
fwait
orb
jg
ret
loopne
or
mov
out
mov
out
dec
ret
push
pushf
insb
pop
mov
into
imul
push
inc
mov
stc
int
call
jmp
mov
mov
pop
test
xchg
jp
outsl
inc
in
mov
xor
lock
mov
push
in
out
or
cwtl
daa
imul
fildl
hlt
out
pop
inc
call
sbb
xor
cmpsl
jb
pop
addr16
pushl
dec
jbe
lock
mov
mov
jae
enter
daa
outsb
pop
mov
sbb
dec
icebp
imul
mov
insb
ss
push
loop
enter
push
ficoml
ficoml
iret
mov
int3
bswap
jb
pop
jge
iret
dec
sarl
int
fisttps
adc
cmp
cmp
out
sub
cmpb
orl
mov
dec
js
ljmp
inc
xor
fidivrs
loop
jge
push
cld
je
jge,pt
xor
add
cltd
xor
pop
into
jp
mov
movsb
cmp
and
pushf
mov
sub
jge
pop
lcall
and
fcomps
aaa
lods
and
mov
pop
add
adc
sub
dec
js
in
movl
js
mov
xchg
push
cs
insl
xchg
inc
stc
aad
arpl
ret
inc
mov
mov
mov
aaa
imul
into
fidivrs
std
call
dec
hlt
stos
lret
adc
int
test
flds
add
lcall
or
or
mov
sahf
outsb
jp
cld
and
in
mov
mov
jecxz
xchg
sbb
icebp
shlb
sbb
test
sub
sub
popa
int3
push
dec
enter
cmpsl
jle
lods
scas
cwtl
xchg
xor
dec
outsl
mov
ja
cmp
pop
push
dec
xchg
push
popl
pushf
stc
pop
cmpsb
xor
pop
bound
sbb
inc
xchg
das
or
xchg
xchg
mov
sub
movsb
adc
xchg
enter
popf
push
fdivrl
bound
mov
ror
negl
in
sahf
ret
cmpsb
js
xchg
mov
std
dec
jbe
mov
xor
test
loope
xchg
int
dec
popa
and
arpl
xchg
popf
imul
inc
mov
inc
push
add
popf
movsl
push
mov
mov
rorb
push
add
mov
jno
or
cmp
movsl
das
mov
lds
in
fistpll
sahf
and
push
mov
pusha
dec
loopne
cld
leave
mov
sub
icebp
push
es
in
xor
outsl
cmp
cmp
cli
scas
and
or
and
inc
movsl
repnz
xchg
lret
inc
push
sub
or
push
inc
lcall
add
add
insl
mov
ret
mov
jp
test
xchg
ljmp
fwait
xlat
inc
mov
ret
xor
inc
add
cmp
shl
inc
aad
test
mov
fisttps
jge
xchg
js
and
sbb
push
cmc
dec
dec
push
mov
pushf
sete
sub
nop
cld
pop
test
pop
pop
push
filds
jp
lahf
popf
mov
mov
lods
scas
or
popa
xchg
dec
and
stos
and
daa
call
sbb
shrl
mov
fwait
aam
lds
dec
lea
dec
iret
push
repnz
sub
ja
or
mov
decl
dec
subl
subb
es
bts
inc
popa
mov
gs
sahf
push
jbe
jne
pop
cli
repz
pop
sub
and
inc
cmp
sbb
das
inc
mov
lock
into
movzwl
movsb
int3
mov
clc
inc
shlb
fldl
cmc
mov
dec
test
adc
jb
jo
ja
or
cmpsb
push
and
ret
and
push
pushf
imul
subb
mov
mov
add
lock
in
shll
mov
addb
xchg
mov
insb
or
and
xchg
adc
xor
push
sahf
xchg
mov
adc
daa
sti
js
pop
jae
paddusw
or
loopne
ljmp
xchg
sbb
sbb
sub
leave
out
fmull
pop
xchg
loope
pop
sub
clc
std
xor
sub
adc
ds
add
pop
lock
cld
adc
and
filds
xor
inc
hlt
xchg
lea
pop
xor
int
push
jge
mov
push
pop
inc
and
sti
mov
call
xchg
xor
cmp
fbld
lahf
fcmovb
flds
pop
inc
push
pop
sub
jno
lea
ficomps
push
add
sub
mov
fisttpll
jne
mov
adc
pop
cmp
mov
imulb
std
push
jecxz
xor
jne
xchg
imul
fmuls
mov
insb
lock
clc
lods
lahf
pop
movsl
sbb
sub
call
xchg
fs
shr
dec
fmul
addb
jno
dec
rcll
mov
xchg
mov
out
lahf
ljmp
das
jo
ja
pop
jp
mov
scas
fsub
hlt
fsubrp
stc
jo
lcall
and
mov
jo
jmp
cmp
fbstp
mov
std
daa
add
mov
icebp
mov
loope
xchg
or
pop
dec
movl
outsl
or
sub
repnz
mov
or
jmp
push
addr16
mov
mov
repz
fistps
push
xchg
movsb
adc
or
mov
mov
test
and
in
or
mov
mov
popf
mov
scas
bound
push
inc
xlat
scas
jns
enter
sub
int3
ja
movsb
mov
gs
arpl
mov
or
or
mov
and
xor
sub
das
sub
loope
jle
inc
sub
inc
push
push
negl
sub
frstor
xchg
mov
pop
cmp
jnp
add
mov
sar
push
pop
out
push
inc
mov
mov
enter
in
pop
mov
call
out
mov
test
fisubrl
nop
and
or
sbb
and
and
arpl
mov
testb
incb
mov
cmp
push
mov
xchg
hlt
les
rolb
aas
test
push
push
jbe
cli
pop
sbb
mov
aaa
outsb
mov
popa
xor
mov
mov
and
clc
cmpsl
push
fbstp
jo
mov
pop
xorl
mov
and
clc
dec
dec
sbb
or
push
insb
xor
mov
out
shlb
dec
sbb
mov
push
mov
sarl
mov
dec
rcll
add
pusha
push
lods
scas
add
imul
cmp
adc
lret
cmpsl
stos
pop
enter
adc
push
mov
sub
and
sbb
dec
stos
mov
stos
jg
xchg
mov
int3
cmp
mov
ja
or
xchg
xchg
jne
je
fmull
mov
fs
sbb
mov
pop
scas
jnp
inc
hlt
es
nop
loope
mov
fwait
lods
jmp
or
dec
mov
mov
xchg
mov
ljmp
call
cwtl
movsb
xchg
aam
push
pop
jae
push
adc
sti
or
test
xor
jmp
lret
lcall
movsl
inc
outsl
jge
out
xchg
sbb
pop
or
inc
in
add
push
pop
pop
mov
cs
add
in
pop
repz
in
popf
loope
or
imulb
lret
inc
andl
into
popa
push
ljmp
or
in
or
pop
repz
divb
xor
sub
jmp
dec
outsl
jge
scas
pop
cli
sub
mov
inc
std
hlt
daa
aam
dec
jb
pop
leave
bound
ror
movsl
xor
mov
icebp
cmpsl
fdivrs
stos
int3
inc
sbb
mov
rcrl
inc
int3
mov
jbe
push
push
xor
iret
jl
ret
mov
xor
sbb
mov
jle
inc
sarb
xchg
fdiv
movsb
lret
mov
sbb
in
dec
push
decb
add
outsl
xchg
cli
jne
and
fiaddl
pop
pop
fidivl
pop
jl
leave
les
jmp
jo
loop
mov
vprotq
jb
and
leave
pop
xchg
pusha
push
inc
mov
inc
mov
inc
cmp
movl
fcomps
lock
mov
pop
adc
sbb
xor
jae
lods
imul
loopne
add
mov
push
scas
aaa
xchg
fidivrl
test
mov
push
outsl
loopne
mov
xor
int3
flds
sbb
int3
cmc
fs
inc
and
mov
mov
xor
lret
mov
aad
sbb
dec
push
adc
in
fnop
mov
lock
jno
adc
mov
pop
ja
pop
jle
lock
jb
ret
repz
inc
jns
mov
inc
in
cs
into
push
push
mov
mov
test
pushf
xchg
addr16
insw
pop
sub
mov
cmp
imul
lret
int3
popa
xchg
mov
cld
xor
dec
cmc
scas
mov
cmp
mov
xchg
push
cmpsb
dec
jnp
stmxcsr
mov
rcll
imul
dec
push
jno
push
data16
bound
daa
xor
cmovs
fucomip
hlt
or
xor
jbe
outsl
rolb
xor
pop
insb
movsl
out
std
in
add
add
inc
xor
stos
data16
ja
in
pop
movsl
out
xchg
int
sub
or
fs
mov
jnp
add
aam
in
add
pushf
test
lahf
pop
xor
mov
mov
sub
inc
repz
pop
add
mov
loopne
filds
or
in
movsb
inc
and
and
pop
addr16
push
js
jge
pop
or
outsl
and
loop
movsl
dec
push
shll
sub
in
sbb
int
push
dec
bound
mov
jmp
mov
jnp
shll
in
and
sub
sub
pushf
stos
cmpsl
xor
rcll
or
adc
mov
inc
push
scas
xchg
xchg
cmpsl
sub
add
cli
fbld
lds
or
xor
cld
sub
popa
inc
jno
bndstx
cwtl
cmp
divl
or
push
sarl
adc
pop
enter
fisubl
ds
arpl
push
fwait
xor
sti
add
dec
sahf
fidivl
push
or
aam
xlat
clc
ret
out
fadds
popf
xchg
data16
sub
cmp
sub
in
push
dec
jge
fs
gs
push
out
int3
test
cmc
and
pop
dec
pop
js
cwtl
lahf
fstpl
ljmp
ret
pusha
mov
adc
aad
inc
movsb
aad
adc
inc
or
in
jle
out
fstpt
popa
lds
pushf
iret
jb
out
test
xchg
push
sub
int3
mov
sti
dec
mov
pop
adc
jb
fildll
jl
dec
daa
and
pop
lahf
addb
inc
sub
and
xor
icebp
out
int3
cmp
sub
fiaddl
sub
xor
pop
jl
icebp
outsl
mov
xorb
adc
insb
cli
sub
movsl
mov
gs
movsb
add
pusha
mov
dec
sub
jg
scas
xchg
loope
add
iret
movd
add
test
pop
je
xor
or
xchg
add
mov
scas
bound
pushf
inc
in
movsb
fdivrl
cmp
rep
repz
fdiv
movsb
or
mov
sub
push
mov
adc
stos
adc
dec
incb
enter
fs
inc
pop
and
mov
nop
sub
nop
lcall
sbb
add
mov
and
pop
cmp
sbb
sbb
cmpsb
js
adc
mov
inc
aad
sbb
inc
sub
xlat
cmp
cmpl
xor
cmp
inc
mov
jle
or
lret
fldenv
fwait
cld
sub
xor
aad
addr16
xor
cmp
or
xchg
insb
dec
dec
cwtl
rcrb
cmp
testb
les
fistl
mov
mov
dec
pop
je
jg
and
adc
outsb
js
or
sub
fneni(8087
ja
adc
sbb
fdivr
loope
ds
sar
add
cmp
sub
scas
rcll
mov
mov
ret
test
sbb
cmp
sbb
aaa
mov
pusha
mov
bound
push
xchg
lcall
fs
xor
dec
shll
test
push
cmp
mov
mov
stos
and
or
sbb
push
push
mov
or
lcall
js
jb
push
dec
xor
call
jmp
ds
mov
pop
mov
test
add
ljmp
add
call
mov
dec
and
dec
cld
xor
fsubrl
pop
int3
push
les
scas
jbe
pop
cmp
aaa
aas
es
aad
fistpl
dec
add
shrb
push
jne
leave
or
loop
out
push
in
cmp
dec
jl
loop
mov
aad
orl
arpl
loop
xor
and
loopne
out
add
or
sub
aam
or
aam
pcmpeqw
or
insl
xlat
aaa
packuswb
lock
dec
mov
sti
ret
add
or
outsl
sahf
pop
sbb
lret
xchg
cld
mov
inc
pop
push
cmp
clc
frstor
pop
addr16
add
pop
inc
pop
xchg
test
cmpsb
mov
mov
in
mov
dec
pop
lcall
call
rcll
lods
xchg
pop
ret
ja
popf
fdivrs
mov
mov
ret
sbb
cmp
mov
add
rcr
jo
ret
leave
int
push
dec
fwait
out
xor
add
xchg
sub
push
dec
xchg
addl
mov
inc
sbb
idiv
in
pop
cmp
testb
outsl
jbe
sub
aad
imul
mov
dec
dec
lcall
jno
fcompl
and
cmp
in
sbb
jae
dec
xchg
or
pop
movsl
shl
and
pushf
adcl
imul
inc
mov
fxch
xor
or
clc
stos
jecxz
loop
iret
lret
dec
daa
das
pop
sbb
pop
mov
inc
push
cld
xchg
fimuls
jp
mov
sahf
push
mov
xorl
aad
xchg
imul
mov
fucom
cmp
or
dec
setg
push
mov
xchg
and
cld
push
daa
popf
mov
pop
data16
pop
cmp
inc
pusha
add
int3
popf
xchg
xchg
mov
loop
popa
mov
and
outsb
jmp
lcall
jb
ds
das
sub
lods
cmp
jg
dec
xchg
out
cmpsl
imul
jbe
mov
push
push
cmp
dec
neg
int3
push
jg
add
dec
ret
sub
into
inc
jmp
icebp
lahf
mov
push
jl
addr16
or
xor
lock
jge
pop
aam
sub
inc
adc
jae
negb
dec
inc
xchg
and
stc
nop
aaa
movsl
sahf
cmp
int3
jl
cs
cs
cmp
pop
mov
dec
pop
mov
inc
mov
std
pop
push
aam
sub
cmp
push
fsubs
or
filds
push
lret
data16
out
xor
inc
dec
pop
mov
sti
es
push
jle
or
lock
cmp
push
and
mov
push
rcrl
jnp
ja
int3
cltd
loopne
fidivl
jbe
loope
leave
jbe
aas
ljmp
es
add
cmp
pop
cwtl
jns
stc
push
scas
fwait
and
insb
rolb
imul
xor
fwait
test
stc
mov
inc
test
lret
sub
mov
pusha
push
and
ret
pop
pop
push
cmp
mov
push
ja
xchg
sbb
loope
push
cmp
cwtl
sub
inc
mov
add
cli
sub
shlb
bound
inc
mull
enter
nop
loop
xchg
and
mov
mov
or
addr16
xchg
dec
not
jmp
sub
sbb
adc
cld
outsb
in
dec
daa
iret
inc
subb
sbb
loope
mov
ret
call
xchg
pop
inc
push
push
mov
fidivrl
test
mov
in
sub
mov
mov
popf
out
test
sub
in
std
push
hlt
xchg
mov
fs
push
and
push
inc
mov
adcl
xor
movsb
or
push
mul
adc
jns
std
out
xchg
aad
add
cmp
pop
sub
sti
iret
jl
iret
aad
sbb
aaa
pusha
cld
pop
pop
cmp
in
sub
loop
sbb
pop
shll
in
call
xor
sbb
fwait
subb
push
mov
es
js
pusha
pusha
jnp
and
sbb
jo
dec
adc
int
iret
push
fwait
daa
jmp
roll
adc
inc
sbb
fcmove
pop
cs
pop
add
mov
ret
jle
pop
nop
fcomps
cmp
pop
pop
push
sub
ja
imul
loop
dec
cli
mov
mov
push
xchg
rolb
inc
pop
sbbl
je
mov
aad
sub
test
insb
jg
scas
or
mov
sub
in
cs
sbb
mov
lds
inc
mov
xchg
adc
dec
mov
flds
fsubr
push
sar
inc
mov
cmp
xchg
iret
divl
lahf
and
dec
xor
pushf
jmp
pop
jbe
out
adc
jb
cmpsb
xlat
stos
cmp
ljmp
mov
js
subb
lret
dec
orl
in
stos
pop
push
enter
adc
das
mov
dec
lods
sub
lock
mulb
ret
mov
in
rorb
mov
imul
rorl
sti
or
mov
std
hlt
das
mov
jp
add
insl
rorb
and
sub
push
inc
in
inc
js
hlt
inc
mov
xchg
popa
call
popa
bound
add
ret
jle
cmpl
inc
fdivrl
inc
jo
inc
adc
ret
lea
mov
js
lret
pop
lret
test
add
push
js
adc
push
sahf
iret
imul
cmp
pop
sbb
cmpsb
sbb
xchg
scas
imul
add
stc
cli
or
fdivl
dec
subl
xor
cmp
lds
or
test
or
fildl
sub
xchg
lock
jne,pt
js
xchg
dec
and
xchg
iret
test
or
popf
add
add
adc
mov
and
mov
jns
and
and
add
dec
fs
lret
mov
nop
or
xor
lahf
sbb
inc
mov
or
in
fstpl
lea
and
popf
inc
in
add
xor
xor
lret
mov
shl
jge
cmpsb
loope
cmp
rcl
jp
in
xchg
jl
pop
into
inc
sbb
jb
js
dec
dec
adc
pop
orb
mov
mov
pop
repz
outsb
mov
xchg
inc
sbb
imul
xor
mov
push
sahf
pushf
dec
mov
mov
fwait
enter
mov
sub
xchg
loope
jg
cld
pop
adc
mov
lds
lcall
add
les
sub
mov
mov
inc
inc
dec
push
daa
mov
shrb
fs
dec
ja
fsubrs
mov
frstor
mov
sbb
fbld
and
in
jge
cld
movsb
mov
test
dec
push
adcb
aas
or
ret
test
xchg
jno
lock
pop
ret
test
jnp
or
inc
dec
add
push
xchg
jecxz
lcall
cs
bound
cmp
daa
lcall
adc
sub
xchg
mov
pop
jmp
js
cwtl
aad
pop
stos
push
pop
stos
shl
mov
sarl
leave
xor
mov
jp,pt
fmuls
cmpsb
aaa
lea
push
add
and
movaps
mov
js
repz
js
jecxz
inc
sbb
fcomp
jg
int3
leave
push
ret
dec
add
xor
xchg
sbb
pop
mov
mov
filds
or
dec
mov
je
arpl
xlat
push
push
inc
mov
xlat
mov
mov
stos
incb
lret
pslld
in
add
jnp
outsb
pop
fwait
cmp
mov
into
lods
mov
mov
test
les
das
mov
sub
sarb
mov
iret
gs
and
mov
pop
in
push
daa
pop
jb
movsb
in
fs
push
mov
push
inc
or
arpl
sbb
adc
push
fistps
jecxz
outsb
xor
mov
daa
ja
xor
rol
push
mov
stos
sbb
jg
call
test
rorb
mov
or
mov
and
loopne
lret
iret
loopne
mov
xchg
cmpsb
or
test
movsl
push
sbb
popa
xchg
data16
pop
sti
sarl
xchg
in
jp
add
pop
jne
cmp
mov
sub
and
inc
cltd
cld
push
fdivs
je
out
mov
rorl
movsl
in
inc
flds
pushf
and
outsb
lahf
out
or
xchg
push
xor
and
fiaddl
insb
stos
sub
dec
ficoms
daa
mov
pop
or
in
sbb
dec
jmp
push
fs
add
pop
mov
or
push
and
icebp
int
dec
testl
stc
repnz
jae
push
scas
iret
insb
flds
outsl
jno
aas
and
cmpsl
inc
or
aas
add
dec
loopne
cli
pop
cltd
xchg
imulb
das
and
movsb
inc
inc
mov
jb
pop
in
mov
adc
ja
fstps
call
push
xor
sbb
sbb
rolb
aad
aam
mov
mov
sarl
scas
shrl
or
rcrb
ss
sbb
mov
fidivrl
mov
cmp
mov
mov
xchg
aaa
cwtl
sti
loopne
test
loope
lods
xchg
scas
xchg
mov
and
mov
fcmovu
fbld
sbb
test
dec
aam
cld
push
fs
xchg
out
push
xchg
and
adc
movsb
loop
lcall
fsts
adcb
dec
cmc
ss
cmp
popf
imulb
in
xchg
jp
sub
pop
jl
push
pop
jmp
jecxz
inc
add
mov
aas
outsb
inc
hlt
mov
mov
div
push
ret
push
xchg
mov
cld
popa
mov
mov
jecxz
leave
push
pop
jmp
pop
push
cmp
dec
push
out
xchg
mov
xorl
jno
pop
xchg
jns
scas
push
mov
mov
iret
sbbl
xor
or
lahf
test
push
jnp
aaa
fwait
adc
sub
fistpll
dec
adc
sub
pusha
stos
push
andb
xchg
add
adc
fldenv
pop
and
mov
das
jl
inc
pusha
jb
add
mov
sub
aaa
cmp
xchg
rclb
xchg
fwait
lods
sub
push
sbb
mov
mov
jae
scas
int
insl
fldt
xor
arpl
fsubs
and
sub
sahf
icebp
cmp
mov
jnp
cmp
jmp
lret
test
test
dec
mov
loopne
mov
or
cmp
add
xchg
mov
repz
inc
mov
push
xchg
add
mov
loopne
inc
sub
test
sbb
sarb
mov
mov
sbb
pusha
insl
and
jb
mov
pusha
gs
fistl
lcall
xchg
cmc
cmpsl
jo
leave
enter
dec
pop
jmp
dec
jb
out
arpl
inc
aaa
lret
stos
mov
pop
in
xchg
jae
add
mov
cltd
mov
inc
stc
adc
in
das
int3
adc
sbb
das
fcmovnb
or
sub
mov
sub
mov
and
paddq
jecxz
xor
in
decb
fwait
jecxz
xchg
adc
jmp
sahf
bound
arpl
xchg
mull
cmp
push
rorl
out
cmp
popa
jnp
out
cmp
mov
and
dec
adc
jle
popa
out
or
imul
or
mov
pop
mov
xlat
loop
jo
rclb
or
pop
dec
jnp
mov
popf
cmp
push
jle
mov
jo
xchg
mov
icebp
inc
shr
add
popa
lods
mov
jge
add
call
inc
cmp
lock
adcl
pushf
rolb
push
adc
xor
and
fisubrl
jb
xor
fisubl
stc
push
aaa
andb
inc
aas
xor
adc
xchg
testb
push
cmp
fbstp
cld
lahf
xchg
leave
jo
vshufpd
orb
aad
loop
ret
adc
mov
cmp
inc
dec
call
ret
inc
mov
push
push
fbstp
pop
push
push
xchg
pusha
in
roll
and
jl
mov
out
inc
pop
push
mov
mov
or
in
push
sub
or
cwtl
mov
popf
mov
dec
fstps
inc
fcmovu
mov
jg
pop
dec
test
push
out
js
fiadds
call
dec
out
xor
iret
fs
sbb
sbb
sub
repz
in
pop
das
sbb
xchg
lods
sbb
mov
adc
inc
dec
adc
aaa
cli
push
mov
fimull
sub
in
adc
mov
andl
cmp
and
daa
movsl
mov
push
insl
outsl
aam
mov
arpl
mov
mov
aam
stos
xchg
push
das
push
in
push
xor
or
xchg
xor
cmpsl
sub
imul
lret
mov
ret
mov
aad
sub
imul
mov
dec
test
mov
pop
testl
push
or
sti
cmp
cmp
int3
ja
push
scas
adc
sahf
repz
push
cmpsb
lock
mov
jo
cmp
jp
outsb
aaa
ret
xor
sti
or
ret
pop
shr
xchg
clc
or
push
pop
out
lds
lea
andb
fidivs
dec
push
aam
ja
push
mov
inc
mov
outsb
push
push
or
mov
je
inc
mov
inc
and
cmp
iret
fists
stos
in
mov
mov
in
sbb
insb
fimull
or
ja
rclb
movsb
js
ds
push
shrl
pop
xchg
xchg
in
jmp
scas
in
cmp
imul
jbe
das
cmpsl
pop
sub
aaa
into
mov
lods
mov
mov
lods
orl
xor
xchg
push
jecxz
xor
jp
inc
cld
les
push
jo
mov
sub
push
pop
add
xor
les
jg
imul
nop
loopne
adc
es
popf
aaa
xor
xchg
sub
xor
decl
movsb
jb
fst
out
sbb
movsb
xor
repz
aaa
adc
push
push
lods
roll
mov
mov
mov
imul
sbb
gs
pop
hlt
repz
and
fiaddl
mov
xor
mov
xor
addr16
xor
mov
hlt
adc
mov
xchg
cmp
inc
inc
lods
xor
lock
shll
dec
lahf
jg
fyl2xp1
loop
pop
hlt
cmp
test
inc
adc
das
pop
movsb
addr16
divps
jp
mov
mov
out
test
mov
pop
pop
dec
sub
std
in
rolb
test
movsl
cwtl
hlt
add
ja
rcrb
loopne
sbb
add
cmp
fists
test
add
ljmp
int
mov
pop
dec
adc
and
mov
repnz
mov
inc
filds
popa
dec
mov
inc
imul
loopne
mov
xor
mov
xchg
int
xchg
fbld
in
push
mov
jle
dec
pop
call
xor
pop
loopne
iret
inc
xor
sar
and
fnstsw
cmp
fimuls
inc
bound
xor
mov
out
fisttpll
and
mov
loop
cmp
js
pop
lock
or
cmpsb
addr16
es
int
roll
popf
dec
sarl
movsl
inc
mov
sub
sbb
mov
testb
outsb
ds
mov
lds
aaa
data16
and
test
inc
push
jae
push
in
push
je
loopne
xchg
sbb
int
jmp
jge
xchg
fisubl
or
xchg
and
or
cmp
xchg
dec
lea
xlat
pushf
push
and
out
sub
xchg
out
add
lds
cli
notl
imul
icebp
shrl
lahf
in
shlb
into
cmc
push
lods
fsubs
push
out
xchg
xlat
mov
inc
stos
movsb
cmp
and
mov
jge
fs
pop
pop
fidivs
hlt
xlat
pop
sti
ljmp
cltd
fcoml
pusha
enter
loop
mov
sbb
push
add
mov
adc
jbe
cmpsb
push
inc
jo
mov
sub
adcl
sbb
sbb
mov
aad
lock
ret
sbb
push
outsl
pop
add
shrl
mov
add
or
repz
or
cmc
jge
mov
add
xchg
xor
rcll
enter
fcmove
xor
int
std
dec
arpl
in
ja
enter
push
call
inc
cmp
jb
pop
jbe
sti
loopne
mov
ror
mov
cmp
out
ffreep
xor
push
fnstsw
and
movntps
xchg
or
rcrl
mov
or
mov
ficomps
mov
mov
mov
pop
cmp
mov
mov
dec
push
pop
repz
mov
pop
leave
jno
je
push
nop
sbb
test
icebp
dec
or
cmp
push
pop
jmp
sbb
cmp
orb
xor
enter
stos
mov
jns
testb
in
rcrb
ret
push
xchg
addr16
jnp
aas
and
dec
push
fists
ljmp
mov
cli
push
clc
fcmove
sbbb
pushf
bound
repz
push
push
hlt
rcl
cmpsl
pop
lock
adc
adc
xor
cltd
mov
stc
hlt
and
loope
jmp
cmp
sti
xchg
jge
adc
fwait
js
out
push
and
mov
mulb
inc
sub
pop
cmpb
sbb
outsb
pop
cltd
jb
and
or
je
pop
sbb
scas
rolb
dec
fs
or
daa
stos
mov
jae
lcall
xorb
pop
mov
push
test
mov
mov
sbbl
pop
adc
cmp
sbb
dec
stos
sbbb
add
push
or
or
bswap
jmp
gs
ss
cmp
scas
dec
push
xor
jb
mov
push
sbb
jno
cmpsl
cld
and
jno
pop
cmc
lods
adc
inc
nop
jp
adc
aas
sub
rorb
adc
lea
add
addr16
jp
repz
lds
push
lcall
lds
jo
or
pop
sub
add
push
subb
fildll
push
out
xor
xchg
testb
dec
sahf
mov
xor
cmc
dec
dec
mov
xchg
xor
mov
cmp
mov
mov
add
dec
dec
cmp
adc
jle
lds
imul
mov
push
rcrb
jo
sub
ret
int3
pop
pop
pop
fadds
pop
js
sub
and
mov
push
jne
ja
xor
push
cmp
lods
and
lock
mov
aad
daa
loop
roll
inc
js
test
stc
fdivl
fsubs
into
aam
hlt
jb
in
orl
or
jns
in
lret
nop
pop
jp
int
mov
in
ss
xchg
and
push
cltd
data16
inc
pop
push
das
test
jbe
inc
cmp
xchg
xor
loopne
cmpsb
push
cmp
pop
xor
or
lock
jno
cmp
xchg
cwtl
push
inc
lret
sbb
icebp
mov
fwait
and
pushf
and
pop
fisttps
int
inc
repnz
sbb
cmp
cwtl
repz
js
ds
mov
ret
mov
adc
cwtl
adc
bound
xor
mov
repz
in
sbbb
pop
or
jp
lock
subl
cmp
jbe
fisttpl
je
in
gs
ja
push
sub
and
sbb
sbb
cld
add
fsub
xor
inc
inc
call
mov
outsl
dec
push
add
stos
inc
cwtl
sarl
xchg
aaa
jne
popf
cmp
test
je
shlb
cmpsl
pop
ljmp
cs
test
pop
js
dec
xchg
movsl
jp
fdivrl
dec
addr16
stos
cli
mov
pop
nop
cmp
or
pop
sub
lods
jp
mov
dec
adc
movsl
int
cltd
int
lret
xchg
xchg
fisubrl
inc
notl
cmp
arpl
clc
int
arpl
movsl
mov
ss
mov
inc
imul
repz
pop
inc
pop
mov
and
leave
in
mov
int
dec
loopne
clc
mov
stc
cmp
notl
stos
sub
rolb
mov
popf
cwtl
xchg
sbb
sub
stc
dec
mov
mov
and
and
mov
push
sarl
dec
add
ret
data16
aas
int3
dec
leave
jg
test
std
and
cli
fcoms
mov
xchg
mov
pop
jo
insb
adc
stos
call
xor
test
lods
mov
cmpsb
or
cmp
jne
and
loope
ret
mov
push
pushw
addr16
in
add
jle
mov
jp
or
mov
push
lds
mov
and
inc
test
jmp
decl
mov
or
add
stos
pop
xlat
push
sbb
nop
or
jmp
shll
and
push
out
cli
test
subl
fldt
mov
aad
dec
clc
jns
inc
lock
aam
repz
mov
sub
loopne
mov
pop
pop
and
xor
cld
and
push
sbb
jo
and
pushf
cmp
dec
ret
divl
push
pop
xlat
imul
cld
pushf
sar
dec
subb
jmp
dec
test
imul
rorb
dec
cmp
or
shlb
inc
xchg
cmpsl
add
cmpb
sti
push
mov
cli
jne
push
leave
cmp
sti
insl
and
jp
int3
sub
mov
out
sub
mov
lahf
subl
pop
add
sti
lods
adc
pop
push
mov
inc
lods
mov
icebp
shl
jae
outsb
push
fldcw
jle
mov
sbb
lods
pop
inc
dec
pop
lea
insb
push
xor
mov
pop
insl
push
int
and
sbb
and
pop
xchg
dec
lea
mov
add
fs
aad
mov
ret
xor
xchg
xchg
push
mov
cmp
insb
push
sbb
ljmp
out
jg
int
outsb
pop
cmp
repnz
mov
lods
ret
mov
imul
cmc
shrb
enter
xchg
movb
mov
adc
std
pop
lods
push
cmp
ds
lcall
lock
test
dec
dec
lods
mov
mov
imul
pop
push
stc
lea
pop
cmp
dec
mov
mov
add
inc
push
or
cld
ret
jbe
or
clc
adc
or
pop
fldl
cmp
aas
clc
std
and
popf
outsl
mov
cmp
imul
lret
inc
leave
push
push
shrl
addl
or
push
jp
out
sahf
xor
inc
add
sbb
mov
pop
out
stos
or
lea
in
mov
push
cltd
push
aam
sub
dec
loope
in
lret
cmp
inc
sub
xchg
out
xor
cltd
and
or
scas
call
leave
mov
mov
mov
lahf
lahf
pop
or
test
pop
mov
mull
add
in
sub
push
inc
mov
and
enter
inc
insb
cmp
xchg
mov
cmp
push
mov
in
adc
pop
sub
fsubrs
cwtl
loop
lea
fcmovnb
in
movsl
lret
leave
mov
dec
hlt
loop
insl
push
and
dec
push
in
pop
popa
push
sahf
fwait
in
es
sub
jmp
jnp
adc
push
lret
jb
xor
and
dec
dec
outsl
ja
jnp
push
or
pop
mov
das
daa
test
ss
je
mov
ret
xor
insl
jl
push
dec
mov
or
sbb
in
add
into
sbb
dec
loope
jl
lea
int
scas
movsb
mov
fs
ljmp
rol
adc
nop
jns
data16
mov
inc
and
mov
dec
mov
cmpsl
stos
rcrb
xchg
outsb
loopew
sti
subb
test
sbbb
xor
jmp
bound
idiv
pop
dec
dec
sarl
mov
outsb
shlb
sbb
add
mov
pop
rcrl
or
mov
jmp
nop
rclb
ja
bound
mov
call
inc
cmp
das
outsl
inc
mov
dec
data16
lcall
inc
adc
movsb
in
cmp
xchg
rcrb
iret
leave
xor
adc
icebp
add
stos
stc
sub
enter
hlt
mov
push
and
test
cmp
push
sub
inc
inc
ret
in
stc
mov
cltd
or
iret
jl
xor
jle
jo
xchg
xchg
adc
test
sbb
pop
push
cmp
inc
popa
mov
popa
loopne
lret
lahf
mov
icebp
add
and
rolb
xchg
in
ss
pop
mov
push
movsb
in
mov
mov
shll
out
ss
mov
jle
mov
mov
jbe
or
xlat
xchg
and
cmp
inc
test
stc
stc
cmpsl
sbb
lods
or
movups
inc
insb
call
jl
ljmp
out
nop
or
pop
gs
xor
push
adc
mov
les
sbb
ficoms
mov
std
adc
xchg
jecxz
cld
inc
dec
sbb
mov
cli
xorl
dec
push
aam
dec
dec
outsb
pop
sbb
push
or
jmp
inc
mov
jb
fisttpl
push
mov
js
adc
xor
cmpsl
xchg
mov
pushf
jge
pop
xor
div
ljmp
adc
cmp
rcll
and
add
push
push
fucomp
and
addb
xor
shl
cli
cwtl
lods
jnp
das
in
test
mov
jbe
or
mulb
xchg
push
scas
xor
addr16
mov
sbb
jnp
scas
add
js
shll
mov
jae
popa
test
out
aaa
xchg
jmp
test
popa
cmp
out
jo
pop
or
nop
pushl
aaa
adc
jl
inc
lcall
push
sub
push
add
les
int
mov
sarb
push
leave
mov
inc
dec
mov
mov
mov
ror
mov
fwait
adc
sbb
pop
xchg
stc
mov
mov
push
stos
ds
dec
xor
sub
or
pop
sti
daa
les
in
adc
std
gs
mov
insl
pop
out
repnz
out
add
outsb
xor
fisubs
stos
pop
mov
jnp
sbb
out
std
push
movsl
push
pop
add
out
sub
adc
orl
scas
outsl
enter
ja
or
sti
adc
fld
dec
xchg
push
mov
fwait
sbb
addb
push
sbb
sub
jae
add
aas
cmpsb
ret
enter
sti
cmp
stos
xchg
mov
outsb
rorl
sbbb
adc
das
test
mov
cmc
imul
push
pop
in
cmpsb
pop
arpl
xchg
loopne
dec
mov
int
xchg
xchg
push
mov
gs
fst
sarl
jge
dec
lods
andl
stc
fcomps
push
fwait
stos
adc
maskmovq
mull
dec
cmpl
sbb
scas
ret
jno
sti
clc
push
stos
adc
outsl
ret
shl
jbe
or
ja
pop
or
ljmp
movsb
cmp
jecxz
cmp
mov
xor
jp
mov
nop
test
pop
adc
pop
movsb
jge
pusha
xchg
jmp
fcompl
lahf
int
fs
call
loope
inc
or
or
inc
pop
fwait
sbb
xchg
comiss
jns
sbb
or
mov
mov
or
cmp
roll
xchg
aad
dec
mov
push
stos
rcrl
add
adc
adc
sbb
dec
int3
jns
xor
ljmp
in
or
sbb
faddp
fsubl
add
mov
notb
mov
outsb
xchg
fs
repz
sbb
or
fnsave
insl
jae
in
shrb
mov
push
cmpsl
push
xorl
mov
jo
insl
xor
xchg
inc
inc
sbb
mov
rcr
jl
fiadds
mov
push
sub
cs
xchg
dec
ja
inc
mov
fs
jecxz
dec
mov
add
add
mov
pop
mov
adc
dec
ret
xchg
cmc
add
lret
sbb
mov
sbb
rcrl
mov
jae
add
and
jno
aas
jmp
cmp
mov
xchg
xchg
mov
imul
leave
std
dec
dec
imul
and
cmp
mov
pop
ret
xor
adc
test
jecxz
loop
mov
inc
xchg
pop
cmp
mov
lret
push
dec
mov
dec
test
in
movsl
movsb
ficomps
xchg
xor
repnz
cld
fiaddl
cmpsb
in
xor
iret
mov
iret
and
repnz
and
inc
enter
out
test
xorl
stos
aaa
and
xchg
testl
bt
mov
out
or
les
xlat
in
shl
inc
test
sub
out
jg
xor
test
jae
icebp
shrl
in
dec
mov
mov
mov
inc
jbe
sbb
add
jae
lcall
inc
faddl
addb
stc
repz
sub
jbe
mov
cmp
aaa
icebp
loope
inc
test
xor
cmp
push
leave
stos
in
out
stos
pushf
jo
mov
and
cmp
adc
mov
xor
nop
xchg
sti
stc
shrl
out
xchg
dec
pop
mov
mov
iret
scas
rclb
xchg
imul
int
jb
jl
lahf
ljmp
cmpsb
or
ss
mov
dec
aad
push
imul
jne
pusha
and
push
stos
shrl
cmp
add
mov
add
shlb
loop
cmpsb
pop
adc
lahf
insl
xchg
push
repz
push
add
ja
jae
lds
jmp
add
iret
inc
fs
loope
cld
nop
jp
xlat
mov
mov
jb
jp
pop
stc
jl
daa
sahf
push
aam
adc
insl
ljmp
dec
or
ss
mov
jne
xor
sbb
loopne
js
sar
jmp
cmp
repnz
repz
cli
data16
add
mov
int3
and
and
in
pushf
jb
mov
jns
or
dec
test
cmp
cld
push
jns
pop
rclb
fcmovnu
test
xchg
test
and
mov
inc
shrl
das
bound
cltd
jg
and
in
dec
add
mov
cli
bswap
fbstp
and
das
sbb
icebp
pop
rorl
clc
ja
mov
pop
jae
xchg
ret
ret
mov
sbb
inc
or
sti
dec
fnsave
scas
pop
lods
push
pop
pop
sub
jmp
andl
mov
pop
sbb
xor
imul
mov
mov
in
test
fcmove
xchg
int
sbb
xchg
popf
dec
mov
xchg
and
call
cld
cmc
push
repz
inc
cmpsl
lods
mov
sbb
inc
pop
adc
icebp
popf
push
mov
pop
jb
or
stos
xchg
rorl
cld
cmpsb
scas
rorb
aaa
clc
pop
arpl
out
mov
sbb
shrl
shll
cmp
xor
dec
or
sub
jg
in
jmp
movl
test
scas
pop
imul
xor
sbb
outsb
idiv
mov
pop
orb
imul
cmp
imull
std
push
icebp
out
lret
popf
sub
sbb
xor
sahf
popf
cmp
daa
push
inc
xchg
jl
xchg
inc
push
sub
ret
ss
leave
sbb
sahf
and
cli
adc
mov
adc
or
push
sub
dec
jbe
xlat
test
insb
aam
pop
or
xchg
out
cltd
das
adc
lcall
pop
imul
in
sub
mov
pushf
das
loopne
xchg
nop
int3
js
int
push
nop
mov
fwait
out
repnz
aam
nop
loope
les
sub
push
stc
lods
mov
out
subb
out
add
rcl
into
fnsave
sbb
push
cmpl
add
mov
ret
inc
adc
jno
scas
test
pop
shl
pop
int3
into
jne
mov
mov
nop
cmp
inc
add
sbb
xchg
mov
dec
std
imul
lret
or
sub
fs
jmp
loopne
and
push
push
jp
cmc
aam
subb
iret
lahf
clc
mov
out
add
shrb
ja
out
imul
cmp
inc
push
or
test
in
xchg
fistpll
sub
in
sub
xadd
lods
jo
sbb
inc
xchg
pushf
sahf
aad
push
es
push
xchg
or
push
add
cltd
call
fwait
lods
jae
add
idivb
mov
mov
xorb
fimuls
mov
cmp
inc
adc
sub
arpl
loopne
flds
sub
mov
jb
scas
cmp
mov
jnp
dec
inc
insb
popa
pop
inc
xchg
repz
nop
lea
clc
pop
shrb
std
test
mov
ss
les
clc
bound
pop
inc
ljmp
mov
sub
cmpsl
push
imul
sti
sbb
and
pop
aaa
cmp
scas
dec
repnz
xor
lret
push
popa
imul
pushf
popf
cli
shl
xchg
or
cmp
jg
lods
inc
les
das
mov
inc
jle
ror
scas
mov
jl
inc
leave
pop
mov
pop
iret
or
and
cmp
sbb
pushf
pusha
sbb
fstpt
mov
or
cmpl
xlat
push
cmpsb
or
push
or
add
rcrb
aaa
iret
mov
push
mov
dec
mov
jbe
lock
mov
pop
jmp
test
mov
outsl
fimuls
test
add
ret
mov
push
push
test
jbe
out
mov
jns
mov
jbe
fwait
pop
adc
leave
mov
ljmp
fcoms
leave
hlt
rcll
xchg
sbb
pop
sarl
sbb
push
xchg
mov
lock
repnz
adc
sbb
inc
cltd
xchg
and
insl
inc
lea
add
call
or
js
sbb
mov
and
js
mov
pop
sub
mov
xchg
ret
xchg
push
repz
mov
mov
lahf
idiv
popa
mov
cmp
sti
repz
cmc
sarl
push
adc
jp
or
sti
add
jne
sbb
add
fcmovu
or
leave
jl
jle
pop
jge
dec
notb
loope
out
jge
mov
sbb
fldcw
push
jo
xchg
vdivps
sub
cmp
in
mov
pop
ret
add
jns
inc
sbb
aad
add
loop
aas
mov
jne
leave
xchg
inc
stos
inc
xchg
sarl
jns
in
jmp
mov
pop
inc
xchg
pop
notb
mov
call
xchg
outsb
jne
and
mov
adc
sbb
xchg
int
repz
push
aaa
jnp
stc
out
xchg
sbb
and
and
push
mov
mov
mov
iret
adc
sbb
pushf
repnz
cltd
lds
push
in
jno
jbe
add
out
pop
xchg
popf
and
mov
xchg
push
clc
in
adc
aaa
adc
mov
and
jp
lea
pop
jno
lds
xor
in
in
add
jle
inc
xor
sbb
sub
mov
in
push
cmp
add
hlt
setne
aad
mov
shlb
mov
repz
dec
xchg
bts
movsb
dec
jg
repnz
test
mov
xlat
lods
add
jns
sbb
arpl
sbb
jne
xchg
movsb
test
mov
inc
lea
arpl
in
mov
pop
or
adc
es
jne
insl
pop
sub
iret
scas
jne
mov
lods
sbb
mov
push
cs
cmpsl
in
lods
push
jbe
cltd
cltd
inc
xchg
ljmp
lods
xlat
gs
jl
cmp
aas
mov
jbe
jo
out
popa
mov
mov
shll
xor
outsl
lock
test
mov
adc
out
loopne
outsb
inc
repnz
push
dec
jecxz
outsb
inc
mov
jns
pop
cmp
mov
mov
stc
adc
sbb
scas
scas
push
test
test
lret
dec
cmc
cmp
sub
repz
mov
cmp
hlt
mov
movsb
xor
iret
cmp
sbb
cmpsl
mov
and
cld
lret
cltd
cmp
xchg
int3
xchg
int
je
or
mov
pop
mov
aam
lds
popa
js
imul
pop
bound
or
sbb
mov
fnstsw
leave
push
push
das
xchg
sub
xor
loope
imull
cwtl
das
push
jae
imul
jb
cmp
cmpsl
pop
test
les
push
add
push
mov
jns
clc
mov
ljmp
jle
lods
push
arpl
mov
shlb
xchg
lock
jo
jl
cmp
jno
scas
fisubrl
fwait
stc
and
mov
pusha
mov
stos
jg
or
push
into
sbbl
dec
dec
scas
inc
pop
not
lds
mov
dec
setno
adc
int3
push
test
in
adc
dec
das
pop
xor
pop
insb
popf
std
push
popa
dec
rcrb
hlt
into
js
sub
jbe
sahf
dec
movsl
ss
shll
faddl
inc
jno
mov
pusha
lret
and
dec
mov
sbb
lock
push
jb
cli
inc
mov
lret
leave
and
fwait
aam
and
repz
pop
add
lock
inc
dec
adc
pop
add
repnz
lock
pavgw
jl
add
push
repnz
cmp
jb
scas
jg
dec
mov
mov
in
mov
jno
dec
fs
enter
push
xor
mov
fimuls
pop
stc
rol
pop
sub
test
sbb
mov
in
inc
icebp
popf
scas
pop
cmc
sub
mulb
outsl
adc
cltd
jmp
pop
pop
int
adc
mov
adc
inc
dec
xor
imul
aad
cmp
mov
jns
gs
rclb
pop
sbb
push
cs
add
ficomps
stos
xlat
inc
rorl
bswap
mov
push
stos
cmpsb
mov
aas
sbb
push
clc
std
push
loop
imul
inc
imul
in
sub
push
mov
test
es
jns
mov
sbb
jne
add
dec
hlt
iret
and
out
loopne
push
adc
xchg
mov
xchg
outsl
or
adc
aaa
gs
mov
push
testb
mov
jle
shrl
ret
pusha
cmp
cmpsb
adc
cmp
insb
dec
add
mov
mov
hlt
out
mov
popa
data16
roll
xor
pop
mov
mov
das
adc
push
adc
fistpl
sahf
shll
lock
mov
adc
in
jp
icebp
outsl
adc
sbbl
call
mov
dec
jle
jns
xlat
xor
sbb
push
lcall
mov
pop
pusha
mov
mov
in
shl
pop
sbb
push
mov
shlb
fwait
dec
pop
out
js
fwait
cmpsl
fsts
or
mov
cmpl
mov
shl
and
mov
pop
clc
push
xor
inc
xchg
das
cltd
out
into
jp
mov
stos
jns
sti
adcb
movsb
jmp
xchg
add
xchg
mov
mov
repnz
mov
sub
jns
loop
push
cs
cmpsb
xchg
arpl
cmp
cmc
aam
mov
int3
aam
ret
pop
js
in
dec
out
push
and
ret
cmp
xor
inc
mov
mov
add
mov
mov
pop
dec
fwait
or
jno
data16
inc
mov
ljmp
loop
mov
ljmp
clc
dec
sbb
sub
movsb
add
push
lods
xchg
ret
mov
subb
jg
cld
cld
dec
pusha
lahf
incb
insl
leave
pop
mov
ds
bound
push
sbb
or
gs
repnz
sbb
xchg
idivb
out
arpl
jge
push
xchg
mov
lea
je
dec
inc
or
filds
stos
loopne
ljmp
jle
adc
sahf
mov
cs
push
mov
dec
stos
xor
dec
sub
adc
out
sbb
jo
das
test
sti
movsb
insl
pop
jbe
rcrb
push
mov
mov
repz
mov
and
lahf
aad
adc
fisubrl
cmc
cmp
lds
fwait
imul
mull
ljmp
jbe
inc
jmp
nop
sub
ja
cmp
clc
xchg
movsl
sub
push
and
jnp
sbb
call
mov
jge
out
out
dec
pop
into
inc
loopne
inc
jg
jl
ds
dec
cmp
pop
sbb
inc
jb
pop
cli
loope
jle
sub
xchg
sub
xor
ffreep
push
sbb
lahf
dec
cli
addb
sbb
ss
inc
pop
or
dec
jbe
push
out
and
sub
xor
aad
int3
ds
out
scas
in
adc
popf
iret
fistpl
cmp
and
jmp
inc
sub
lahf
jle
mov
mov
mov
jns
push
repnz
sub
adc
xchg
lock
inc
jmp
cmc
fsubr
jge
jae
les
ljmp
test
sbb
mov
clc
lock
jns
inc
dec
dec
pop
xchg
xor
pop
cmp
push
jb
dec
aas
jecxz
or
cmp
out
adc
add
sub
mov
xchg
shlb
stos
stos
dec
mov
lds
xor
mov
sub
jg
sbb
mov
and
jb
or
pop
mov
jge
jne
popf
lea
out
sahf
aad
jae
lgs
loope
inc
inc
mov
loop
sbb
pop
push
shl
pop
mov
shr
lock
mov
xchg
scas
mov
mov
dec
in
bound
ss
pop
shlb
into
push
inc
pop
nop
add
xchg
or
push
loop
sub
les
mov
mov
std
cmpsl
sbb
cmp
pop
xchg
mov
sub
outsb
pop
mov
rorl
lret
int
pop
mov
lret
sub
ja
movsl
in
bound
lret
cs
xor
push
mov
int
add
push
mov
and
lock
lods
lret
dec
adc
adc
pop
sbbl
jp
mov
cli
loope
or
jne
or
in
insb
cmp
inc
cmp
mov
addr16
adc
dec
in
mov
mov
and
mov
shlb
mov
dec
jb
xchg
mov
and
sbb
ja
out
js
sar
inc
stos
fisubl
mov
adc
insl
arpl
cs
hlt
cltd
xor
imul
outsb
out
dec
jno
xchg
stc
decb
mov
sub
idiv
call
jl
sbb
mov
jne
sti
pop
sub
sar
and
and
adc
inc
mov
pop
or
fsubs
xor
and
sub
jnp
fwait
ljmp
sbb
imul
int
ret
inc
mov
add
testb
hlt
mov
inc
test
insb
push
dec
mov
xchg
hlt
shl
or
js
mov
dec
add
jge
xor
imul
xor
sbbb
xchg
scas
cmp
xchg
pushf
test
shl
xor
test
cmpsb
lahf
popf
and
popa
cmc
and
cmp
cmp
mov
adc
sub
sbb
jb
sarb
jmp
das
es
push
adc
jno
add
cld
push
jp
xchg
jae
push
inc
in
dec
aad
jg
stos
scas
test
xor
push
stc
clc
jmp
add
loope
das
insb
mov
fistps
push
imul
movsl
cltd
sub
leave
push
mov
dec
sahf
aaa
push
nop
xor
sbb
fcoms
fwait
push
xor
pop
jnp
ss
outsl
pop
lods
inc
test
stc
rep
dec
pop
cmp
jg
mov
mov
sub
ljmp
xchg
mov
lods
mov
movsb
push
mov
imul
push
aam
xchg
ret
cmp
mov
jl
rorb
xchg
orl
jno
mov
push
sbb
mov
push
push
or
cmp
call
iret
jb
push
fisubrs
js
xchg
pop
stos
push
lret
pop
aam
mov
or
inc
jns
jae
les
push
ss
jbe
ja
imul
pop
add
repz
add
nop
dec
adc
mov
mov
sub
outsl
scas
jno
lock
mov
cmp
outsl
mov
das
mov
jbe
icebp
les
or
sub
dec
xchg
sbb
nop
inc
rcrb
outsl
popa
test
out
gs
cbtw
aas
repnz
popa
inc
insl
imul
aam
adc
sub
fldl
push
jg
sti
xor
mov
outsl
mov
pop
adc
shll
push
insb
and
add
sti
mov
mov
xor
xor
enter
mov
mov
fwait
or
lods
pushf
xchg
mov
inc
lcall
in
mov
cmp
addr16
or
jecxz
movsb
inc
lret
jne
pop
ljmp
pop
rdtsc
dec
loopne
fs
fimuls
jb
adc
push
stos
leave
pop
iret
mov
cwtl
pop
jnp
push
lods
dec
in
push
jnp
add
mov
popf
frstor
bound
psubq
fwait
popa
lcall
push
gs
adc
daa
adc
repnz
lret
mov
data16
ja
mov
cmp
call
or
int3
movsl
out
div
mov
loope
and
cmp
repnz
sbb
xor
int3
faddl
push
aam
xchg
in
ret
push
xchg
movsb
adc
xchg
fwait
cmpsl
mov
lods
fmulp
add
inc
and
rolb
mov
movb
cmp
sbb
ljmp
push
mov
out
in
dec
mov
push
arpl
pop
stos
outsl
and
ret
or
cmc
xor
pop
loope
push
or
popa
cld
fistps
cmp
push
add
fisubs
out
out
xchg
xlat
dec
inc
adc
hlt
jge
jge
in
and
push
pop
cmp
cmp
xor
mov
int
sahf
scas
dec
mov
subb
cwtl
pop
outsb
addr16
test
repz
ficomps
mov
xor
in
gs
pop
in
int3
mov
cmpsl
scas
cld
inc
ja
inc
insl
call
aad
pop
xchg
push
jns
fildl
pop
mov
nop
xor
sub
call
add
mov
in
or
and
inc
mov
cmp
lods
nop
and
cmc
xchg
dec
int
cltd
pop
jo
mov
push
sbb
enter
mov
stc
movsb
push
xor
adc
jb
sub
sub
mov
movsl
or
lods
xor
sub
jae
cmp
inc
sub
push
xchg
lret
xlat
jns
lcall
push
xor
out
test
inc
xlat
mov
ret
dec
inc
out
sub
lcall
push
cmp
cmp
dec
orl
into
aad
sub
dec
jp
lea
mov
pop
data16
rolb
mov
test
pop
je
inc
xchg
jp
addb
and
je
and
icebp
pop
clc
mov
ja
sbb
pop
sbb
lea
mov
aaa
mov
pop
inc
int3
jbe
and
mov
push
mov
insl
daa
push
loopne
xchg
mov
bound
pop
cmp
jecxz
xor
or
int3
mov
mov
xchg
inc
aas
pop
repz
xchg
mov
test
test
mov
mov
sbb
ret
jnp
cmp
lds
repz
push
loopne
add
push
sbbl
mov
mov
mov
and
in
les
out
enter
insb
mov
enter
loope
out
data16
lret
fs
arpl
cli
adc
mov
adc
outsb
and
fcompl
xor
stos
lods
gs
pop
vpaddw
ret
cld
ret
pop
cwtl
imul
cwtl
fsubs
push
adc
jne
pop
stc
adc
cmp
scas
lret
pop
jle
mov
mov
daa
adc
add
lock
xchg
pop
mov
xchg
adc
lea
inc
inc
imul
dec
arpl
out
jbe
ds
cmp
aad
repnz
dec
mov
inc
or
test
mov
mov
cwtl
fistpl
mov
fcmovnbe
icebp
loopne
lea
sbb
imul
adc
mov
clc
and
mov
hlt
sub
out
lret
push
out
fadds
fwait
mov
rcll
pusha
scas
pop
imul
dec
lret
or
xor
mov
iret
pop
push
imul
jg
and
xor
lcall
repnz
insl
lahf
je
test
xchg
out
xchg
fldcw
addr16
cmp
mov
push
and
les
sbb
mov
adc
mov
in
pop
cld
repz
push
push
enter
insb
cmc
std
js
lret
and
mov
jmp
sub
loope
dec
fdivrl
nop
xlat
and
xor
shll
push
shlb
pop
test
sub
rcr
pop
push
cld
fdivrl
mov
jmp
pop
add
jo
push
dec
cmp
fs
jmp
sbb
iret
leave
push
inc
shrb
cmp
movsb
mov
pop
in
push
lahf
das
lahf
xor
jo
push
add
fstpt
ret
jae
cmpsl
lret
mov
sub
sub
outsb
in
out
les
call
mov
rorl
mov
push
pop
mov
enter
mov
sub
and
sbb
sub
insl
clc
xchg
hlt
std
sub
int3
mov
mov
pusha
in
jp
call
into
adc
mov
pop
pushf
mov
pop
in
test
inc
sbb
or
rcll
in
adc
sbb
jp
jge,pn
stos
sub
push
rcrb
mov
xor
push
je
repz
notl
pop
incb
mov
pop
aaa
dec
popa
push
stc
lret
data16
loope
sub
mov
outsl
pop
pushf
or
addl
mov
jl
mov
push
jp
or
movsl
cmpsl
jo
std
clc
sbb
add
add
and
ret
push
call
call
push
testb
push
scas
cmp
push
aas
jmp
fimuls
cmp
cmp
push
iret
xchg
add
cmp
xchg
ljmp
xchg
cmp
mov
sarb
out
xor
push
iret
xor
test
or
ret
push
mov
or
xchg
pop
adc
fwait
ret
pop
popf
sbb
daa
inc
aad
rclb
scas
insl
adc
inc
out
negl
stos
xor
loope
ds
pop
mov
lret
stc
mov
out
cmpb
cmp
dec
mov
sbb
sbbb
xor
push
rcrl
das
in
push
std
dec
ret
filds
movsl
mov
repnz
addb
pop
sbb
scas
rcrl
adc
add
sub
mov
mov
daa
adc
and
cli
push
lahf
test
xor
ds
mov
xchg
sub
jne
adc
sub
pop
fnstsw
imul
ljmp
cmp
cmp
ja
push
add
and
pushf
jle,pn
test
mov
ja
jle
push
pop
stos
sub
mov
cs
sub
push
dec
out
cmp
loopne
movsl
xchg
insb
push
data16
es
cmp
mov
sub
fs
in
repz
add
vmread
movsl
sub
mov
or
mov
inc
pop
cmp
mov
nop
aad
adc
addb
test
arpl
ja
mov
jp
stos
addr16
sub
test
jle
outsl
jmp
or
push
fs
push
jbe
jl
insb
fadds
repnz
adc
std
push
dec
fcompp
outsl
inc
lret
push
mov
dec
dec
aas
sarb
mov
lods
cmpsl
test
out
jo
imul
xor
setnp
imul
cmp
mov
imul
inc
orb
fstpl
sahf
mov
mov
scas
inc
or
mov
aas
imul
mov
iret
or
bound
frstor
adc
mov
jb
imull
stc
dec
adc
ja
popa
std
clc
sbb
and
push
stos
pop
scas
repz
loopne
scas
mov
or
aaa
in
or
les
ss
sbb
and
sti
mov
mov
insb
lret
mov
cmpsl
mov
pop
sub
cld
jp
mov
jl
cwtl
adc
push
mov
fistpll
adc
inc
test
enter
adc
xchg
call
push
faddp
jmp
aad
in
pop
lods
andb
ret
sahf
insl
rolb
mov
jb
mov
jmp
in
les
inc
nop
in
xor
test
out
cmp
leave
cmpsb
leave
loop
cmp
mov
pop
jne
jg
cmpsb
or
jbe
jl
pop
push
dec
das
cmp
inc
xchg
test
mov
pop
pushl
jb
and
sub
shll
xor
cmp
fcomip
aam
or
or
dec
scas
push
arpl
xchg
bound
push
or
xchg
push
js
or
hlt
mov
inc
jnp
pop
aad
rolb
aad
popa
fdivs
sub
cli
stos
enter
pop
jl
lret
fildll
test
cmc
jbe
lret
in
sub
xchg
add
pop
clc
jp
imul
inc
dec
sbb
mov
mov
cmp
mov
lret
push
dec
dec
ljmp
push
mov
jg
xlat
test
sbb
pop
jo
adc
mov
sahf
mov
sub
cli
aaa
cld
xchg
mov
dec
jns
popf
data16
xorl
xchg
jl
mov
push
sub
ljmp
xlat
test
mov
adc
sub
jmp
loopne
je,pn
rcll
cli
xchg
ja
mov
jmp
and
popl
pop
test
cmc
adc
and
aad
pop
lahf
mov
push
adc
mulb
jnp
and
js
push
lea
push
mov
mov
mov
jbe
jl
push
jne
mov
or
subl
jle
mov
flds
test
stc
mov
in
mov
mov
jg
shrl
mov
loop
insl
outsl
popa
and
add
adc
in
loopne
aam
push
pop
mov
psrad
mov
add
adc
mov
jecxz
jg
dec
fnstenv
adc
popf
int3
out
dec
cmp
cwtl
test
add
lcall
xchg
into
lret
stos
stc
xchg
push
lcall
cmpsb
push
jno
push
jo
xor
outsl
mov
adc
add
xchg
inc
aam
pop
cli
movsl
push
mov
movsl
xor
fistpl
and
imul
jge
sbbl
push
in
dec
fstl
sub
adc
xchg
scas
xor
lods
shrl
adc
inc
and
std
cmp
out
jbe
pop
push
push
insl
mov
clc
push
nop
sub
cmp
aad
pop
mov
jl
aaa
sar
mov
sub
xchg
dec
adc
faddl
rcrb
pop
lret
mov
dec
ficomps
and
stc
lret
xchg
or
sbb
xor
sbbl
jbe
pop
lahf
mov
mov
and
pop
mov
push
out
mov
popf
fisubrs
cwtl
jle
pop
call
adc
mov
mov
fistl
jns
movsl
repz
cmp
clc
popa
xchg
inc
and
xchg
fsubs
fnstsw
dec
sti
add
or
out
jle
cmc
lcall
sub
outsl
js
sbb
rcl
jg
fcomps
add
dec
aaa
xor
fistps
mov
test
es
rcl
cmpsl
jle
ret
popa
out
xchg
adc
add
mov
jns
in
scas
adc
xor
je
in
insl
or
sbb
jbe
cmpsb
xchg
jl
and
rorl
orl
into
movl
in
cmp
cld
popf
jle
add
test
jmp
add
into
pop
sub
iret
fistl
js
xor
pop
xor
push
push
dec
sub
xchg
push
jno
out
push
test
outsl
in
lret
xor
test
ljmp
stos
stos
fs
mov
inc
out
in
mov
pusha
std
ds
cli
inc
cltd
dec
and
hlt
lea
cmpsb
mov
inc
mov
lock
rcr
push
cli
and
fsubl
or
imul
inc
xor
mov
mov
mov
jbe
dec
aaa
xor
loopne
test
jno
jmp
js
adc
xlat
scas
aad
inc
out
xor
aam
jg
push
fcoml
mov
cmpsl
jbe
rolb
push
into
inc
rcll
dec
xchg
int3
cmpb
arpl
add
push
in
pop
jecxz
fistpll
pop
mov
call
fmul
xor
mov
add
out
out
push
sahf
lret
pop
jle
xor
and
jno
push
popa
sub
fmull
sbb
jmp
leave
movsl
rolb
cs
loope
les
int3
xchg
fiaddl
xor
inc
out
mov
sbb
mov
or
test
mov
jne
mov
mov
and
cmp
jecxz
push
aas
aad
sub
repnz
jmp
fbld
fcompl
in
mov
jp
orb
push
shll
mov
out
cmp
cmp
and
mov
lea
pop
sahf
outsl
sub
in
sub
testl
cli
xchg
fildll
repz
repnz
push
scas
jo
xchg
insl
cmp
push
nop
adc
xor
adc
pusha
pop
dec
inc
pop
stc
cli
mov
pop
dec
loop
test
pop
bound
icebp
mov
push
xchg
adc
test
dec
pushl
or
adc
sbb
push
jo
xchg
fmuls
mov
vmwrite
add
xor
std
push
aaa
fwait
insb
xorb
test
sarb
cwtl
clc
and
cmp
clc
mov
jno
lds
das
xchg
icebp
inc
jg
jno
sahf
push
cs
cmp
in
jle
mov
xchg
xchg
jmp
xor
and
pushw
pop
loopne
nop
in
mov
mov
cmp
pop
push
jae
and
inc
jge
les
and
inc
fs
push
fimuls
leave
arpl
jl
pushl
jp
lret
in
in
adc
sub
cmp
test
mov
or
pop
mov
fcoms
pop
jl
cmp
popf
ret
int
frstor
sub
outsb
adc
xchg
mov
dec
jge
repnz
sbb
mov
or
std
mov
mov
cld
cmp
push
inc
xor
sbb
or
sbb
xor
lret
push
inc
sub
sub
ficoms
mov
out
mov
push
dec
mov
pop
data16
sarb
aad
push
shl
movsl
aaa
inc
movsl
cwtl
aam
imul
mov
mov
cmc
xchg
fidivrs
cmpsb
fsubrl
or
aaa
xchg
mov
push
stc
or
test
jp
xchg
outsl
addr16
imul
cmp
mov
adc
push
sbb
enter
or
ret
dec
jl
jbe
movsb
add
cmp
icebp
stos
xchg
inc
mov
ret
sub
inc
xorl
and
popf
lcall
xor
adc
shll
sub
call
mov
jle
rolb
and
sbb
push
push
add
mov
fcmovu
insl
add
ds
shl
movsl
push
out
pop
scas
lahf
jns
xchg
push
mov
push
mov
and
xor
adc
sbb
fst
jp
and
out
push
iret
ret
mov
mov
ret
add
js
jns
xchg
cmp
jmp
or
pop
adc
and
fdivrl
add
dec
outsb
shlb
stos
and
add
ror
xchg
orl
lahf
imul
sbb
sbb
xor
mov
mov
test
pop
sbb
popa
mov
loope
pushf
insl
lcall
cmp
adc
cmpb
inc
xchg
push
out
dec
sub
popf
xor
lds
pusha
or
push
push
xchg
inc
sub
fimull
lds
addl
pop
ljmp
push
dec
test
ret
add
xchg
or
pop
push
dec
pop
mov
add
xchg
hlt
mov
jle
pop
push
fwait
testl
cmpl
sbb
pop
adc
cmp
int3
adc
adcl
ja
sti
cltd
movsb
xchg
adc
mov
and
push
jb
pop
mov
leave
sbb
inc
jl
aas
mov
mov
pushf
and
or
inc
mull
lods
ret
cmp
cmova
in
dec
pop
pop
push
repnz
das
aad
les
arpl
icebp
cld
dec
les
cmpsb
mov
jl
loope
adc
cltd
and
xchg
adc
insb
ja
enter
scas
fcos
xorb
or
sub
xlat
enter
inc
push
js
mov
orl
inc
or
push
aad
adc
mov
or
lods
cmpsb
ficomps
dec
shll
fucomp
or
xor
xchg
pop
or
test
in
movsb
test
data16
imul
push
xor
xchg
lock
adc
inc
mov
cld
fwait
in
cmp
imul
shll
ss
mov
mov
test
jae
push
mov
sti
or
nop
xor
in
insl
and
call
aaa
test
or
call
fldl
and
sbb
add
mov
xor
mov
fdivrs
dec
inc
fs
jnp
test
cmpsb
int
shll
sahf
hlt
icebp
movsl
xchg
and
xchg
mov
adc
fstps
jns
add
mov
inc
push
push
mov
inc
sbb
add
cmp
xchg
cmc
jl
ret
xor
jbe
popf
mov
pop
cmp
test
movsl
imul
sub
mov
test
insb
add
stos
adc
dec
dec
push
repz
test
jnp
sbb
fs
ror
sub
push
sahf
ss
nop
xor
fwait
sbb
mov
adc
add
and
xchg
cmpsl
xchg
sahf
jp
ss
out
call
xchg
pop
jp
js
jno
test
mov
xor
incl
cmp
push
sahf
cmp
xchg
test
bound
rcrl
jp
or
mov
les
inc
cmp
jge
cmp
inc
decl
mov
outsb
outsb
jnp
scas
xor
out
iret
mov
fcom
cmp
loope
jb
jle
mov
pusha
cmp
cmpsl
mov
scas
scas
in
or
cld
adc
ss
call
cmp
sub
daa
out
adc
xor
xchg
fcoms
ret
mov
jae
xor
mov
or
int
inc
dec
xchg
sbb
insl
mov
mov
sbb
dec
xchg
fcoml
dec
insl
shr
or
addr16
jl
add
push
push
lahf
jbe
inc
inc
adc
push
lods
fwait
push
xor
addr16
mov
or
decb
mov
mov
dec
test
add
sbb
mov
push
dec
jg
sbb
pop
call
adc
popf
mov
sbb
inc
add
rcll
pop
inc
orb
add
sbb
pop
inc
adcl
ds
test
cmc
imul
inc
inc
fiaddl
mov
imul
pop
push
subb
dec
shlb
pop
cmpsb
dec
ret
imul
xlat
sahf
loop
mov
cs
mov
pop
mov
lret
addr16
rolb
aaa
pop
mov
mov
je
cmp
sbb
shrb
push
push
xor
insl
push
shrl
lahf
imul
add
push
push
bound
push
pop
mov
scas
cmp
push
out
dec
inc
test
mov
jmp
jo
bound
repz
and
orb
pop
cmpsw
pusha
pop
xchg
sub
loopne
jl
jnp
adc
out
imul
pop
repz
in
push
pop
sbb
push
xor
jecxz
push
or
popf
push
xor
cltd
add
call
test
inc
and
cmp
jp
mov
add
stos
or
push
mov
neg
sub
mov
lahf
adc
push
mov
mov
push
dec
mov
dec
xchg
or
cmp
les
imul
sbb
or
or
aam
mov
cmc
xchg
sub
inc
cld
mov
inc
push
imul
inc
rorb
push
ret
fdiv
xchg
sbb
add
inc
and
pop
notl
ret
jmp
sub
xor
mov
sub
lods
call
gs
add
outsl
lods
mov
dec
