or
and
add
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
add
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
add
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
pop
je
lea
mov
mov
mov
push
push
mov
call
mov
mov
lea
push
push
mov
call
cmp
je
cmp
je
cmp
jne
cmp
jne
cmp
je
call
cmp
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
mov
mov
push
push
call
add
cmp
je
mov
cmp
mov
jne
xor
mov
jmp
xor
jmp
mov
mov
jmp
push
mov
push
mov
lea
push
lea
push
pushl
movl
call
mov
mov
and
neg
sbb
not
and
leave
ret
andl
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
lea
mov
mov
call
add
sub
jns
mov
push
push
lea
push
push
call
cmp
jl
mov
mov
call
test
je
test
je
test
je
test
je
lea
lea
lea
mov
mov
movl
jmp
lea
addl
addl
mov
mov
mov
mov
mov
mov
add
cmp
mov
je
cmpl
jne
call
mov
and
mov
mov
shl
shr
lea
lea
or
mov
mov
mov
add
cmp
movl
mov
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
or
mov
mov
add
lea
cmp
je
cmpl
jne
lea
call
mov
shr
lea
mov
and
mov
shl
lea
or
call
subl
jne
push
push
push
lea
push
call
mov
pop
pop
pop
pop
add
ret
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
cmpl
jne
movl
movl
jmp
int3
int3
int3
int3
sub
push
mov
test
je
push
mov
movl
mov
cmp
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmpb
jne
mov
test
je
push
mov
lea
movl
call
mov
test
je
mov
mov
mov
push
call
lea
call
cmpl
je
xor
pop
pop
pop
add
ret
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
je
mov
cmpb
je
lea
call
test
je
mov
mov
add
push
push
push
call
pop
pop
pop
add
ret
mov
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
jne
push
push
lea
call
xor
add
cmp
je
mov
movl
mov
lea
cmp
movl
movl
movl
mov
mov
je
mov
mov
push
call
test
mov
je
mov
mov
push
call
mov
test
je
xor
call
add
or
mov
mov
mov
push
mov
call
lea
call
pop
lea
jmp
add
jmp
push
mov
sub
push
mov
mov
test
je
testb
je
push
push
xor
push
lea
mov
call
lea
push
mov
lea
call
test
pop
js
pushl
mov
lea
mov
mov
call
mov
cmp
je
mov
lea
push
push
call
test
jne
mov
cmp
jne
and
mov
lea
push
lea
call
mov
test
pop
jne
mov
mov
call
xor
push
mov
lea
mov
call
cmp
je
mov
cmp
jne
mov
inc
push
push
lea
call
cmpl
pop
pop
jne
mov
lea
call
lea
call
lea
call
lea
call
lea
call
pop
mov
pop
pop
leave
ret
pushl
call
test
pop
je
mov
mov
push
pushl
push
call
mov
jmp
mov
mov
push
call
xor
ret
mov
pushl
mov
pushl
mov
push
call
movsbl
add
and
ret
push
mov
push
push
push
push
push
xor
push
lea
mov
call
mov
mov
lea
push
push
call
mov
cmp
mov
jne
push
lea
mov
call
mov
lea
push
push
mov
mov
call
mov
test
jne
testl
mov
lea
push
push
jne
call
mov
test
jne
mov
mov
push
pushl
push
call
mov
lea
call
lea
call
pop
mov
pop
pop
leave
ret
mov
push
push
push
call
cmp
je
xor
jmp
call
jmp
mov
ret
int3
int3
cmpl
push
push
mov
jne
add
add
add
test
sbb
adc
add
test
je
push
push
xor
mov
roll
mov
mov
mov
mov
les
push
add
mov
call
pop
pop
mov
call
test
je
mov
mov
push
push
push
call
test
js
mov
cmp
je
test
jne
test
je
mov
mov
push
call
mov
test
mov
jne
test
je
mov
mov
push
call
pop
pop
ret
orb
jmp
mov
jmp
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmpl
jne
cmpl
jne
cmpb
jne
xor
pop
ret
mov
mov
mov
call
xor
pop
ret
sub
push
mov
push
push
mov
mov
push
mov
mov
test
movl
movl
mov
je
mov
mov
mov
mov
mov
lea
push
push
lea
call
mov
mov
add
test
jne
test
jne
test
jne
mov
mov
mov
push
call
mov
test
mov
jne
mov
push
call
add
push
mov
call
mov
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
cmpl
jbe
xor
mov
movl
lea
mov
push
push
call
push
mov
call
mov
add
mov
mov
push
add
push
push
call
test
je
mov
mov
lea
lea
lea
cmp
je
lea
mov
jmp
lea
test
je
push
movl
movl
movl
call
mov
add
add
cmp
jne
mov
addl
mov
add
cmp
mov
jb
xor
pop
pop
pop
pop
add
ret
push
push
mov
mov
test
je
test
je
sar
mov
mov
push
push
push
push
push
call
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
mov
test
push
je
mov
lea
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
je
mov
lea
push
push
push
movl
call
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
movl
pop
xor
pop
ret
cmp
je
cmp
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
push
call
mov
pop
xor
pop
ret
mov
add
call
ret
int3
push
mov
push
mov
imul
xor
cmp
mov
jg
sub
js
push
mov
cmp
jge
movzwl
add
cmp
ja
cmp
jb
add
movzwl
shl
add
sub
jns
pop
pop
pop
ret
cmp
jb
cmp
ja
and
shl
lea
jmp
lea
cmp
jbe
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
cmp
push
mov
jne
test
jle
xor
jmp
lea
movzwl
cmp
ja
cmp
jb
add
cmp
jl
push
xor
cmp
setne
push
push
xor
add
mov
call
mov
push
mov
mov
call
mov
push
mov
mov
call
add
cmp
je
mov
or
shl
or
mov
shl
or
pop
pop
pop
mov
mov
pop
pop
ret
cmp
jb
cmp
jbe
add
cmp
jbe
pop
xor
pop
pop
ret
cmp
je
pop
xor
pop
pop
ret
mov
shl
or
mov
mov
shl
or
mov
shl
or
jmp
push
mov
and
mov
sub
push
xor
cmp
push
push
je
mov
push
lea
mov
call
mov
mov
mov
mov
lea
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
mov
lea
push
push
pushl
push
push
call
mov
test
je
mov
test
mov
je
mov
mov
push
call
mov
mov
call
mov
lea
call
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
cmpl
jne
mov
push
mov
push
mov
testb
push
je
mov
sub
je
push
call
add
add
mov
xor
pop
pop
pop
ret
mov
lea
lea
push
call
add
test
je
mov
movl
mov
push
lea
push
push
call
add
movb
mov
pop
pop
xor
pop
ret
mov
push
lea
mov
push
lea
jmp
push
call
pop
add
cmp
jne
pop
pop
ret
pushl
call
ret
mov
call
mov
ret
push
mov
push
push
decl
cmpl
jne
push
movl
lea
mov
push
mov
mov
add
shl
add
cmp
je
mov
jmp
mov
lea
call
mov
call
addl
cmp
jne
mov
push
push
push
push
call
mov
cmp
jne
lea
call
lea
call
lea
call
lea
lea
call
mov
call
push
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
push
andl
push
push
lea
call
mov
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
mov
pushl
push
call
lea
mov
call
mov
pop
leave
ret
mov
cmp
mov
je
cmp
je
sub
neg
sbb
not
and
mov
ret
mov
add
jmp
push
mov
cmpl
jne
pop
ret
mov
call
lea
push
mov
xchg
add
add
sub
inc
add
add
pop
xchg
add
add
sbbl
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
andl
andl
lea
call
lea
call
lea
call
lea
call
push
lea
push
push
call
push
lea
push
push
call
add
mov
ret
int3
int3
sub
mov
push
push
xor
push
lea
lea
mov
movl
mov
mov
mov
call
mov
cmp
je
mov
lea
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
jne
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
cmp
jne
push
lea
push
push
call
mov
add
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
lea
push
push
call
add
lea
push
call
mov
test
jne
test
jne
cmp
je
testb
jne
mov
lea
push
lea
push
lea
push
push
push
call
mov
or
shl
or
add
shl
or
mov
mov
test
pop
jne
test
je
mov
push
call
add
mov
push
push
call
add
cmp
mov
jne
mov
mov
shr
and
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
cmp
je
mov
lea
xor
and
xor
lea
call
pop
pop
add
ret
mov
lea
push
movl
lea
movl
mov
mov
push
push
call
mov
mov
mov
push
push
push
call
jmp
mov
jmp
push
cmpl
jne
cmpl
je
mov
pop
ret
push
call
test
pop
je
call
mov
push
mov
call
call
test
jns
xor
pop
ret
xor
jmp
push
mov
sub
push
xor
cmp
push
push
jne
call
test
je
push
push
push
call
add
test
js
push
mov
mov
mov
call
cmp
pop
je
movl
mov
lea
call
cmp
je
push
lea
call
mov
mov
lea
push
pushl
push
push
call
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
mov
push
mov
add
lea
mov
push
lea
push
lea
movl
mov
call
test
jne
mov
lea
push
mov
mov
push
call
test
mov
jne
call
or
test
movl
mov
movl
je
or
or
movl
mov
movl
add
cmp
mov
leave
adc
add
je
lret
adc
mov
add
cmp
test
movl
mov
movl
jne
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
mov
mov
pop
push
mov
and
or
pop
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
add
or
pusha
loopne
adc
add
shr
adc
add
clc
xchg
mov
loopne
adc
add
enter
movl
mov
movl
mov
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
and
or
or
or
or
or
or
add
mov
add
and
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
inc
add
leave
adc
add
add
add
sbb
lret
adc
add
lock
jecxz
adc
add
and
lret
adc
add
sbb
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
and
add
or
or
or
or
or
or
or
mov
mov
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sub
lret
adc
add
adc
mov
leave
adc
add
push
icebp
lret
adc
add
xor
out
adc
add
je
lret
adc
add
js
mov
leave
adc
add
cwtl
icebp
lret
adc
add
fs
adc
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
in
lret
adc
add
adc
mov
leave
adc
cmp
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
leave
adc
add
enter
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
jmp
jmp
lret
adc
add
push
mov
adc
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
and
or
or
or
or
or
or
or
or
or
or
and
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
movl
movl
add
add
cmp
lret
adc
add
add
jmp
adc
add
pusha
test
jmp
adc
mov
leave
adc
add
test
lret
adc
add
cmp
in
leave
adc
add
test
lret
adc
add
sub
in
leave
adc
add
int3
test
in
leave
adc
xchg
mov
leave
adc
add
lock
in
leave
adc
xchg
mov
leave
adc
add
adc
lret
adc
add
pop
or
leave
adc
add
cmp
lret
adc
add
adc
in
leave
adc
add
add
lret
adc
add
je
mov
leave
adc
add
test
lret
adc
adc
movl
movl
mov
movl
movl
or
or
or
or
add
or
and
or
or
or
or
and
and
or
and
and
or
or
or
or
mov
push
mov
mov
mov
inc
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
mov
mov
add
and
lret
adc
adc
adc
add
xor
lret
adc
add
jl
mov
out
leave
adc
add
cmp
lret
adc
add
clc
cld
mov
icebp
leave
adc
add
inc
stc
lret
adc
add
enter
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
add
or
and
or
or
or
or
or
and
and
or
and
or
or
or
or
or
or
push
pop
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
sbb
lret
adc
add
and
mov
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
mov
movl
movl
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
movl
movl
add
test
mov
hlt
leave
adc
add
mov
lret
adc
add
cwtl
mov
hlt
leave
adc
add
cwtl
cld
lret
adc
add
mov
jl
leave
adc
add
cld
lret
adc
add
push
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
movl
movl
movl
mov
movl
movl
add
add
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
add
movl
add
test
mov
cld
leave
adc
add
jo
int3
adc
add
cwtl
mov
cld
leave
adc
add
js
int3
adc
add
mov
in
cld
leave
adc
add
addb
std
leave
adc
mov
std
leave
adc
add
mov
sub
leave
adc
mov
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
or
or
or
or
or
or
or
or
or
or
or
or
or
add
or
or
or
or
or
or
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
movl
mov
add
pushf
push
int3
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
add
adc
cmp
or
mov
movl
movl
add
movl
movl
mov
movl
movl
mov
movl
movl
mov
movl
push
mov
sub
push
push
push
push
push
lea
push
push
lea
push
call
add
pop
stos
xchg
add
pop
in
je
jmp
add
add
leave
in
rolb
test
add
jo
leave
filds
add
mov
popl
push
push
push
push
push
lea
push
push
push
push
call
mov
mov
pop
data16
mov
js
jnp
mov
add
add
add
sahf
scas
mov
sub
pop
push
push
push
push
push
push
push
push
push
push
call
nop
cmpsb
insb
add
ja
push
add
add
cld
jne
movsb
data16
push
imul
add
repnz
mov
add
add
shrl
add
addl
xchg
mov
add
add
push
mov
popa
add
mov
jle
clc
cli
add
lcall
push
push
lea
push
call
popa
pushf
add
cmc
jne
add
add
roll
add
ret
sti
add
push
jmp
fcomi
scas
add
ljmp
pop
jp
add
shll
into
push
rcrl
pop
add
int3
push
lock
fimuls
in
clc
pop
push
push
push
push
push
push
push
call
arpl
add
add
cwtl
add
jge
lods
fcmovu
test
roll
add
pop
pop
shlb
sar
in
add
add
add
mov
add
add
jmp
loope
nop
out
js
jae
lret
add
jecxz
in
add
xchg
pop
add
fisubrs
jle
push
lods
lcall
sub
pop
call
push
push
push
push
lea
push
push
push
lea
push
push
push
call
add
push
test
addb
fldl
add
scas
add
gs
pop
lahf
jbe
popf
push
add
mov
aam
pop
out
add
add
lea
loop
push
lods
mov
addr16
imul
lods
cld
add
repnz
out
movb
in
fdivr
lcall
add
pop
call
push
lea
push
push
push
push
push
push
call
add
jmp
push
repnz
rcrb
add
add
jnp
add
add
add
add
add
add
sti
stos
pop
fadd
mov
mov
fucomp
xchg
mov
add
add
add
imulb
add
add
add
imul
push
add
push
push
push
push
push
lea
push
push
push
call
add
mov
filds
mov
add
add
fwait
aam
add
add
add
lea
pusha
add
mov
mov
rorb
add
popf
iret
int
mov
jmp
add
lcall
xchg
add
add
pop
lea
push
push
lea
push
lea
push
lea
push
push
push
call
shr
add
xlat
fsubrl
add
add
add
add
push
mov
jge
fisubrs
push
xchg
mov
mov
xorl
push
testl
in
iret
loope
hlt
add
add
push
mov
mov
add
roll
sti
loop
cmpsl
loope
in
fcompl
mov
push
push
push
call
test
add
add
add
test
aam
loop
roll
add
je
jmp
ja
in
scas
jb
add
stc
cli
add
add
in
add
add
add
loop
fadds
add
add
lcall
pop
hlt
push
push
push
call
add
jge
add
add
loop
rolb
add
out
lods
addl
add
add
std
add
add
les
add
push
add
jmp
mov
add
mov
lcall
pop
in
push
push
lea
push
lea
push
push
push
push
push
call
xchg
add
add
xchg
test
test
add
add
int3
ja
jmp
rcr
hlt
jmp
jmp
jp
add
mov
add
pop
add
arpl
ja
popa
add
pop
add
add
push
addl
push
lds
ret
add
add
push
push
push
push
lea
push
call
push
xchg
add
lods
in
add
add
fbld
mov
mov
add
add
add
jnp
xchg
xchg
ficoml
add
add
xchg
mov
in
std
jo
add
leave
add
lods
fsubrp
mov
sti
sub
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
xchg
xchg
add
test
jne
add
add
stos
repnz
add
scas
out
ja
cwtl
add
addl
add
pop
mov
push
push
push
push
push
lea
push
call
bound
roll
push
mov
imul
add
add
add
aam
add
add
add
sub
pop
xor
push
push
push
push
push
push
push
lea
push
push
push
call
int
add
adc
jecxz
add
add
add
add
xchg
mov
add
ja
jnp
in
push
mov
mov
pop
roll
add
outsl
lds
into
sub
pop
add
push
push
shr
push
push
pop
add
ror
sub
shl
pop
add
sub
pop
push
lea
push
lea
push
lea
push
push
call
add
add
add
add
xchg
filds
mov
iret
push
add
leave
add
flds
add
add
add
into
jbe
add
add
shrb
hlt
cmc
mov
sub
pop
pushl
push
lea
push
push
push
push
lea
push
push
lea
push
call
add
scas
pop
mov
scas
sar
mov
fs
je
aam
xchg
add
filds
jmp
add
test
in
loopne
lcall
dec
push
add
mov
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
out
mov
js
fwait
popa
add
test
add
add
lods
rolb
int3
mov
ficoms
add
ljmp
faddl
int
shlb
in
cwtl
mov
add
lcall
inc
call
push
push
lea
push
push
lea
push
call
add
add
leave
popf
sti
popl
mov
pop
std
pop
add
add
lods
int
mov
jbe
lock
loope
add
add
mov
jl
mov
add
add
xchg
add
loopne
add
pop
lea
push
push
push
call
push
add
add
jle
cwtl
out
add
add
xorb
add
add
jl
add
nop
xlat
imul
add
add
fistps
clc
fcmovne
sti
pop
lret
add
add
add
insb
add
sub
pop
pushl
pushl
push
lea
push
lea
push
lea
push
push
push
call
push
jae
jbe
add
add
mov
outsl
add
add
loopne
add
sti
ret
decb
test
scas
std
add
add
movsb
mov
mov
arpl
push
mov
jb
add
add
lahf
add
mov
lcall
jle
add
push
push
push
push
call
js
cli
mov
mov
jp
in
add
push
mov
out
add
sarb
mov
add
sahf
ljmp
addb
sub
pop
pushl
push
push
lea
push
push
push
lea
push
call
xchg
push
push
pop
movsw
leave
add
add
sarb
mov
mov
pop
jnp
mov
add
mov
add
call
push
lea
push
call
add
add
icebp
test
add
in
ret
bound
jle
xchg
lret
add
mov
add
jb
add
lret
add
add
rol
add
add
les
add
add
push
jbe
add
add
jb
mov
mov
lcall
add
jmp
stos
push
inc
push
or
not
add
add
sub
sub
xor
sub
shl
pop
inc
xor
add
pop
push
push
call
add
test
sarl
loope
add
add
filds
add
jecxz
pop
add
outsl
jmp
add
add
xchg
sarb
xchg
pop
pop
mov
lcall
jne
push
lea
push
push
push
call
mov
add
cltd
aam
add
vrsqrtps
aam
add
xchg
pop
cwtl
xchg
add
mov
add
bound
mov
mov
add
xchg
loopne
sti
xchg
sub
pop
call
push
push
lea
push
push
lea
push
lea
push
call
cwtl
test
loop
add
add
xchg
add
insb
add
test
mov
mov
fwait
fs
mov
add
push
mov
add
add
add
jmp
cmc
jecxz
cmpsb
nop
add
xchg
add
add
in
cmpsb
add
sub
pop
push
push
push
add
push
and
add
ror
sub
shr
dec
add
pop
sub
dec
not
pop
push
push
push
push
push
push
call
add
aad
int3
sti
add
pop
add
cwtl
test
hlt
add
add
lret
jne
cltd
add
mov
out
add
loope
pop
add
pop
mov
push
add
add
lods
add
push
std
jmp
aad
cmpsl
jl
add
fiadds
add
add
icebp
add
add
in
call
je
scas
push
push
push
lea
push
push
push
call
sahf
add
jno
add
add
hlt
cmpsl
bound
xchg
andb
jp
mov
add
lret
in
in
lcall
add
rclb
lea
push
push
call
add
pop
pop
out
pop
in
addr16
mov
push
add
sahf
andl
add
jnp
fimull
add
push
mov
shll
iret
add
mov
adcl
add
add
push
xchg
clc
movl
push
lea
push
push
lea
push
push
call
pusha
lea
jmp
xchg
js
add
mov
jp
test
add
int3
add
xchg
xchg
add
add
out
add
mov
movl
sub
daa
scas
mov
push
push
push
push
lea
push
push
lea
push
call
test
imul
pop
rol
out
pushf
add
mov
add
xchg
test
add
add
add
popf
add
mov
pop
outsl
pusha
mov
std
xchg
mov
orb
mov
lds
pop
hlt
add
push
push
push
push
push
push
push
push
call
add
lods
xchg
outsl
addb
add
add
add
add
add
in
aam
popf
push
bound
mov
jmp
pop
add
add
int3
xchg
add
xchg
rolb
in
loopne
lcall
ret
add
add
push
lea
push
lea
push
push
call
add
fiaddl
add
add
add
jns
xchg
cmpsb
imul
add
mov
roll
mov
add
stc
add
add
add
fldl
outsl
jmp
insb
rcrl
roll
add
in
lock
add
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
push
add
imul
pop
add
mov
int
add
call
ljmp
int3
push
nop
add
lahf
cli
add
mov
add
repnz
push
lcall
xor
scas
push
push
lea
push
call
movsb
jo
loope
data16
add
mov
push
cltd
add
mov
push
out
clc
add
stc
nop
add
fstpt
add
xorl
icebp
imul
xlat
add
add
outsl
sub
pop
add
push
push
push
push
push
lea
push
push
push
lea
push
push
call
cltd
add
add
mov
lea
xchg
add
push
leave
add
nop
insb
jl
hlt
fucomip
aad
lods
add
sub
pop
mov
push
push
push
push
push
call
xchg
jne
iret
or
cli
add
div
in
xlat
in
icebp
add
pop
add
add
xchg
divl
pop
xor
push
push
lea
push
push
lea
push
call
rolb
pop
imul
add
mov
mov
push
mov
icebp
add
add
add
add
add
leave
lods
add
mov
jno
add
xchg
add
aam
mov
in
mov
jns
mov
enter
add
add
aam
lahf
add
addr16
loop
add
mov
in
in
lcall
les
add
push
push
push
push
lea
push
push
push
call
addr16
aam
fldl
add
lds
add
lret
ljmp
add
mov
rcrl
negl
clc
add
lds
popf
add
add
in
add
cwtl
mov
repnz
mov
leave
add
push
loope
mov
bound
iret
add
add
pushf
add
int
in
in
add
push
push
lea
push
push
push
lea
push
push
push
push
call
arpl
out
shlb
push
int3
add
add
add
je
subb
add
call
mov
scas
rolb
addr16
fcmove
add
insb
sub
pop
pop
push
push
push
push
lea
push
call
imul
add
add
xchg
stos
loop
pop
cmpsb
fadds
add
pusha
test
add
add
pop
lret
add
loop
popf
jne
int3
loope
mov
les
xchg
movsb
xchg
add
sub
pop
mov
push
push
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
add
cld
add
add
test
out
sti
push
arpl
pop
subb
add
add
arpl
test
pop
mov
movsb
or
in
fcomps
or
push
push
lea
push
push
push
lea
push
call
add
add
lds
xchg
fnstcw
hlt
scas
add
mov
scas
xchg
mov
mov
add
add
add
add
jle
fnstcw
popf
add
movb
xchg
ret
ljmp
lds
add
add
push
jbe
sub
pop
add
push
lea
push
lea
push
push
push
call
xlat
add
add
test
pop
mov
push
mov
add
lock
stos
js
mov
mov
mov
gs
mov
add
jbe
icebp
mov
addr16
fcompl
pusha
test
mov
add
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
faddl
sahf
add
xlat
pop
add
std
sti
push
add
add
jne
iret
add
xchg
in
test
xchg
add
add
je
xlat
rolb
add
add
xchg
add
stos
pop
add
add
fiadds
mov
add
lcall
inc
or
scas
push
push
push
push
push
call
into
fcomi
add
push
xchg
add
add
enter
int3
sahf
imul
mov
mov
in
in
lcall
enter
push
lea
push
push
lea
push
call
pop
add
add
cmc
add
add
mov
loop
movsl
scas
jns
jne
ljmp
add
idiv
mov
lods
loope
add
les
add
mov
hlt
mov
call
add
add
add
sti
lret
leave
mov
sub
pop
rep
push
push
call
add
add
std
std
xchg
imul
shll
loope
stc
push
add
push
in
js
mov
clc
pop
pop
push
push
push
push
push
call
jbe
add
in
add
fwait
add
cltd
add
jae
mov
ljmp
add
icebp
add
xchg
ret
fsubrs
mov
add
jnp
add
add
add
mov
pop
add
add
in
in
lcall
pop
hlt
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
add
add
add
add
ljmp
xchg
add
mov
addb
fisubrl
cltd
jbe
mov
add
mov
add
sub
pop
add
push
lea
push
push
push
push
push
lea
push
push
push
lea
push
call
imul
gs
mov
add
icebp
cmpsb
add
test
add
lds
lret
add
mov
add
add
add
jno
add
add
mov
cmc
enter
sub
pop
add
push
add
sub
xor
pop
add
mov
push
push
lea
push
lea
push
call
jb
add
rolb
test
scas
fiaddl
push
add
add
cwtl
add
incb
sbbb
add
fs
in
xchg
add
sub
pop
xor
push
push
push
push
call
addb
add
push
jno
add
loope
add
shr
add
add
popa
add
sarl
filds
cmc
roll
add
jl
add
push
les
cmpsb
lea
add
loopne
jb
add
mov
lcall
les
add
push
push
push
lea
push
push
call
loop
icebp
pop
out
fcmovnbe
mov
add
lret
fcmovne
jb
mov
add
in
mov
add
push
and
lret
lods
mov
push
push
push
push
push
push
push
lea
push
call
add
aad
sahf
add
mov
out
add
push
add
aad
push
add
enter
add
add
add
add
icebp
pop
add
pop
add
add
mov
repnz
in
fcomps
adc
push
push
lea
push
push
push
push
push
lea
push
push
push
call
mov
add
add
enter
outsl
jp
movb
add
add
shrl
shll
aad
andb
add
push
add
out
add
add
xchg
add
mov
les
rol
sub
shr
pop
mov
push
push
push
push
call
add
add
aam
sti
mov
je
in
mov
jbe
add
mov
add
divl
mov
add
add
faddl
mov
add
add
roll
fiaddl
sub
pop
xor
push
push
push
lea
push
lea
push
lea
push
call
pop
add
add
cmpsb
fcomp
add
mov
add
popf
jae
icebp
add
xlat
shlb
add
ret
add
add
pop
add
iret
lret
in
call
add
push
push
push
push
push
push
push
push
push
push
call
mov
pop
add
enter
xor
add
lcall
add
cwtl
jb
push
pop
cld
push
add
add
scas
mov
lods
add
cltd
iret
push
repnz
add
push
mov
in
fcomps
ret
pop
add
push
not
pop
mov
push
push
inc
xor
push
push
pop
add
not
dec
sub
sub
dec
pop
sub
pop
push
push
push
push
push
push
call
in
add
xchg
pop
add
mov
add
test
addb
mov
push
in
idivb
scas
add
jb
mov
sti
into
lret
add
lret
add
test
loope
add
add
sub
pop
pushl
call
push
dec
pop
push
push
push
ror
push
or
not
add
ror
sub
shr
add
pop
rol
pop
push
pop
push
push
push
push
push
lea
push
push
push
lea
push
call
icebp
add
test
into
add
cli
lret
mov
pop
out
out
cmpsb
enter
add
movb
add
jecxz
mov
in
loopne
push
push
push
call
mov
add
pop
push
sti
add
add
add
add
ret
out
pop
arpl
test
add
add
add
ret
add
add
cmpsb
add
sub
pop
call
push
push
push
push
lea
push
push
push
push
lea
push
call
add
jnp
mov
add
stos
popa
stc
jno
push
xchg
xchg
into
add
popa
add
addb
pop
add
vdivsd
add
add
mov
add
hlt
sahf
add
add
add
add
movsb
add
fdivr
lcall
clc
push
push
lea
push
lea
push
call
shlb
add
cltd
add
hlt
add
add
add
jle
add
test
add
scas
lret
movsb
add
mov
lds
lock
lcall
push
add
add
pop
push
push
sub
xor
inc
pop
mov
push
ror
rol
rol
add
pop
add
push
add
rol
shl
add
pop
add
add
push
ror
pop
mov
xor
push
inc
lea
inc
pop
add
push
push
push
lea
push
push
push
push
lea
push
call
jae
lds
int3
call
add
pop
add
add
add
cmpsb
xlat
add
sahf
lahf
insb
mov
add
ja
push
sti
add
fwait
add
fadds
add
push
add
mov
sub
pop
mov
xor
push
sub
sub
sub
pop
add
pop
push
xor
xor
pop
mov
xor
push
push
push
push
push
push
push
push
lea
push
call
push
add
int3
stc
loopne
jmp
add
add
mov
fcmove
push
add
add
add
fiadds
addb
pop
add
imul
pushf
add
iret
sub
pop
rep
push
push
lea
push
push
push
push
push
call
fsubp
jmp
add
add
pop
in
add
outsl
in
bound
scas
out
fdivr
add
mov
pop
jp
add
int
aad
insb
add
cwtl
add
pop
mov
push
push
lea
push
push
push
push
push
lea
push
push
push
call
into
in
nop
jl
mov
jns
push
add
incb
aam
loopne
popf
movsl
out
les
mov
aam
add
mov
mov
add
add
add
test
add
insb
ja
add
add
std
add
sub
pop
xor
push
lea
push
push
push
call
jmp
xchg
sarl
cwtl
mov
add
add
push
mov
add
ljmp
xchg
jae
add
add
fidivl
add
fdivrs
popf
aam
add
iret
pusha
adcb
pop
pushf
mov
ret
add
add
roll
les
add
push
lea
push
push
push
lea
push
call
add
add
add
add
add
imul
xchg
add
add
rcll
add
jnp
push
xchg
jo
pop
add
push
jl
stos
xchg
add
add
add
int3
add
fcom
add
mov
add
mov
iret
add
add
add
add
add
mov
add
leave
je
push
sub
add
ror
pop
mov
push
push
push
lea
push
lea
push
push
push
push
call
scas
lahf
call
add
xorl
jmp
fwait
xchg
stos
scas
iret
add
xchg
aad
add
add
mov
addb
scas
mov
mov
into
loope
add
add
jnp
add
lcall
xor
push
lea
push
call
popf
xchg
mov
faddl
add
push
loope
icebp
stos
add
mov
add
test
add
aad
int
subb
mov
ja
cmpsl
add
xchg
mov
add
mov
add
out
in
clc
lcall
les
add
shl
not
pop
mov
push
push
lea
push
push
lea
push
push
lea
push
push
push
call
mov
add
pushf
ret
add
add
imul
je
std
add
ret
je
add
ret
sub
pop
xor
push
push
push
push
call
jo
add
mov
arpl
rorl
enter
ret
shl
xchg
jecxz
loopne
add
in
test
nop
pop
into
aad
fadds
popa
add
add
leave
add
sbb
push
roll
lcall
les
shl
rol
pop
add
push
pop
add
push
add
ror
pop
push
push
lea
push
lea
push
push
push
push
lea
push
push
push
call
mov
popf
add
add
test
pop
popa
stc
jae
icebp
mov
aad
add
fmul
int3
shl
add
ljmp
xchg
add
push
add
sbbb
add
faddl
lcall
inc
or
scas
push
lea
push
push
lea
push
lea
push
push
push
call
leave
lock
std
push
add
add
add
insb
pop
add
add
sahf
roll
add
add
lcall
lock
push
push
push
push
push
call
roll
popf
movsl
add
addl
xchg
test
test
jmp
xchg
add
push
add
hlt
sub
pop
rep
push
push
push
push
push
call
shll
add
xchg
add
in
add
add
sahf
enter
add
xchg
test
add
mov
add
xchg
add
add
add
aad
pop
add
in
in
lcall
dec
sub
scas
push
push
push
push
push
push
call
test
fistpll
in
cmc
repnz
cwtl
add
add
mov
add
mov
mov
ja
mov
add
js
jge
enter
faddl
mov
cmpsb
push
ret
xchg
add
add
mov
jne
add
mov
loop
add
sub
pop
or
je
mov
push
push
lea
push
push
push
push
push
push
push
lea
push
call
pushf
movsw
lods
add
mov
add
in
pop
add
push
add
add
std
retw
pop
in
out
add
roll
push
lcall
add
add
sub
pop
add
add
push
push
push
lea
push
push
push
lea
push
call
add
add
xlat
mov
xlat
lret
mov
add
mov
add
pop
add
add
jno
ljmp
data16
repnz
pop
rep
pop
push
push
ror
push
xor
add
shr
sub
sub
pop
dec
pop
push
push
lea
push
push
push
push
call
xchg
pop
fdiv
in
mov
fildll
cli
jb
test
add
add
xchg
icebp
out
jl
push
movl
jne
push
shl
pop
mov
mov
push
add
pop
jmp
push
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
scas
mov
add
push
xchg
lock
xchg
cmpsb
divb
fsubr
nop
add
add
add
les
out
add
in
jae
sar
add
movsl
ret
add
add
add
add
addb
stc
in
lock
jp
int
add
fwait
add
pop
mov
add
push
push
push
lea
push
push
lea
push
lea
push
push
lea
push
call
push
push
je
jo
pushf
rolb
loop
jecxz
roll
add
stos
add
xlat
add
mov
xchg
je
out
add
add
add
add
fcompl
push
lea
not
pop
push
push
inc
pop
push
push
ror
inc
pop
push
push
push
call
add
add
pop
hlt
add
add
add
add
add
cmpsb
add
jno
addr16
mov
addl
lods
jle
sub
pop
mov
pop
push
dec
pop
pop
pop
push
push
push
call
add
mov
add
in
push
out
add
scas
testb
fwait
out
mov
stc
lahf
cmpsb
mov
jecxz
notl
add
je
mov
pop
sarb
scas
add
add
test
pop
push
push
call
add
add
push
mov
in
les
les
add
add
cmc
jge
add
pop
mov
add
movsb
loopne
xchg
add
movb
add
lcall
push
pop
ret
push
push
add
pop
mov
push
push
lea
push
call
sahf
add
lods
add
add
add
add
mov
add
add
arpl
mov
jb
in
hlt
pop
add
push
push
add
inc
xor
pop
push
push
push
lea
push
lea
push
call
add
add
add
flds
add
add
mov
jle
popa
addb
add
mov
add
in
fidivs
add
add
fiadds
data16
add
add
add
rorb
add
push
shr
xor
pop
push
push
xor
rol
dec
pop
movl
push
push
push
push
call
add
xchg
add
icebp
jo
je
add
popf
add
flds
ret
add
add
mov
cld
add
add
jge
add
cwtl
addr16
fmulp
mov
add
lds
add
lahf
lahf
jmp
gs
outsl
add
add
scas
add
mov
sub
pop
addl
push
push
lea
push
push
call
je
mov
lock
add
aam
hlt
test
jne
nop
clc
lods
add
int
mov
add
add
into
stos
mov
int3
xchg
push
add
add
fildl
add
add
add
add
jno
add
pop
test
je
mov
push
push
push
lea
push
call
add
out
jno
add
add
rolb
test
divb
add
clc
xlat
add
mov
movl
xchg
xchg
push
mov
rorl
jp
add
add
mov
add
add
add
xchg
jle
loop
mov
jbe
push
into
bound
push
push
push
push
lea
push
push
lea
push
push
push
call
add
pop
add
xchg
cld
cwtl
clc
jbe
xchg
scas
add
mov
add
mov
add
mov
out
mov
add
sub
pop
pop
push
lea
push
push
push
push
push
push
call
arpl
add
pop
in
shl
divb
add
add
enter
fst
addr16
jmp
jno
out
push
ffreep
add
add
lods
stos
negb
enter
in
in
lcall
push
push
push
push
push
push
push
push
push
push
call
add
add
movsb
in
add
fiadds
add
add
xchg
jp
jecxz
gs
add
cmc
add
xchg
gs
add
add
mov
fildl
add
add
add
leave
push
push
push
push
lea
push
push
lea
push
call
add
add
outsl
add
imul
add
add
jne
gs
add
ja
add
mov
idivb
lods
add
push
add
nop
flds
fs
ret
push
call
pop
ret
push
xor
pop
push
push
push
push
push
lea
push
push
call
xchg
test
nop
hlt
fimuls
mov
add
aad
xchg
rcrb
ljmp
lret
jae
incb
pushf
add
mov
stos
cmpsl
jge
add
in
cli
add
lcall
mov
mov
in
mov
stos
sub
pop
mov
add
push
push
call
pop
mov
xchg
add
lret
add
add
jae
jl
pushw
icebp
shr
roll
add
add
mov
aad
lret
add
add
jo
push
std
add
add
add
insb
lcall
test
test
mov
loop
push
stc
scas
xchg
fcmovu
insb
fs
pop
push
push
push
lea
push
push
call
jb
fildl
add
in
xchg
shrb
add
outsl
lods
add
xchg
add
cld
add
push
lcall
imul
mov
call
lcall
cmc
add
push
xchg
add
add
push
test
les
lds
add
add
add
lcall
push
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
int3
test
fwait
add
popf
aam
add
mov
loope
ret
add
add
add
incb
bound
add
add
stos
movsb
rcr
add
mov
mov
add
addr16
rolb
jp
test
add
lcall
push
lea
push
push
push
push
push
push
push
call
add
jae
mov
add
mov
mov
add
sarl
add
lea
add
add
pop
jmp
push
add
ja
jge
fst
mov
add
add
fisubs
sub
pop
testl
addl
push
add
pop
push
push
add
dec
inc
pop
call
push
push
lea
push
call
jge
add
aam
xchg
add
testb
int
add
add
mov
scas
roll
add
js
roll
in
hlt
lcall
inc
cld
push
dec
pop
pushl
push
push
push
push
push
lea
push
call
ljmp
insb
pop
cmc
and
mov
shl
add
add
stos
add
out
loop
in
cli
add
cli
sub
pop
push
push
dec
ror
pop
call
push
lea
xor
pop
cmpl
jne
push
push
lea
push
lea
push
push
lea
push
push
call
fprem1
pop
aam
jns
outsl
add
testb
cwtl
jbe
mov
test
aam
add
mov
add
jmp
add
mov
xlat
add
mov
pop
pop
add
lcall
pop
push
shl
sub
add
sub
pop
pop
pop
push
not
add
inc
pop
leave
ret
push
xor
pop
push
push
xor
add
shl
shl
pop
mov
push
push
push
push
call
add
mov
add
in
cwtl
out
jl
add
stos
mov
shl
fld
mov
add
add
add
jnp
in
lock
lcall
cld
push
rol
rol
pop
push
push
push
push
push
push
push
lea
push
push
call
cltd
add
sti
mov
add
mov
insb
pushf
add
jl
add
popa
add
imul
mov
mov
mov
stos
add
repnz
add
add
int3
push
xchg
add
mov
adcb
test
rolb
add
add
push
push
xor
pop
push
movl
push
lea
push
push
push
push
push
call
les
jns
flds
test
add
movsb
jp
movsl
xlat
ret
lea
lret
jb
xchg
gs
mov
add
jo
push
in
mov
add
add
lcall
add
sub
pop
push
push
lea
push
push
push
call
pusha
clc
mov
add
add
add
mov
in
add
push
fucomp
xchg
in
enter
in
lock
call
push
lea
push
push
lea
push
call
add
incb
data16
xchg
pushf
add
mov
pop
pusha
icebp
add
add
sbbb
popa
pop
jge
hlt
add
int3
add
xorl
cmpb
bound
mov
add
mov
out
rcrl
mov
movl
fsts
in
lock
push
push
push
lea
push
push
push
push
push
push
call
popa
jns
loope
ret
mov
add
mov
jno
loope
in
roll
mov
add
lock
add
add
movsb
mov
int
add
xchg
mov
lcall
lahf
mov
sti
repnz
jle
mov
add
add
xchg
je
cli
add
add
add
in
lahf
fadds
lcall
push
cli
incl
sub
lea
shr
pop
cmpl
jne
push
shr
sub
not
add
pop
pop
push
pop
pop
pop
push
sub
not
rol
pop
pop
leave
push
sub
inc
pop
ret
push
push
push
push
call
add
cmc
shlb
jp
cmc
push
test
add
add
mov
pop
addb
xchg
fldenv
scas
mov
mov
add
sti
add
jmp
add
add
ret
lock
lcall
push
push
push
push
push
push
call
int3
pop
aam
add
xchg
mov
add
xchg
add
cltd
sar
push
mov
mov
add
testl
add
lcall
in
push
shr
ror
pop
add
push
dec
sub
xor
lea
pop
push
push
sub
inc
pop
push
push
inc
shr
pop
push
push
push
push
push
xor
add
xor
shr
sub
add
xor
pop
shr
not
pop
push
inc
lea
sub
inc
pop
pushl
push
shl
inc
sub
pop
call
push
push
push
push
call
xlat
addr16
add
add
rolb
add
mov
iret
xchg
add
add
lcall
add
out
add
add
add
filds
sub
pop
call
push
push
push
or
not
add
inc
sub
pop
pop
push
rol
dec
pop
pushl
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
jne
add
je
repnz
int
idivb
add
add
out
jl
add
add
jmp
sub
pop
call
push
push
push
lea
push
call
data16
add
cmpsb
xchg
add
popa
fcmovnbe
mov
fdivr
test
mov
fs
pusha
add
mov
test
add
jl
mov
out
push
add
add
jp
add
aam
test
cmpb
add
sub
pop
call
push
push
push
push
push
push
call
cmpb
in
add
nop
mov
mov
aam
xchg
add
add
gs
add
mov
loope
in
call
mov
push
lea
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
test
in
add
add
add
mov
add
loopne
mov
add
add
add
fldl
call
add
pop
test
stc
add
mov
jp
mov
xchg
scas
add
rolb
add
push
pushf
mov
add
xchg
xchg
rolb
jns
in
stos
data16
lcall
inc
cmp
call
lea
push
call
push
add
out
add
mov
pop
add
icebp
mov
nop
add
add
lds
add
add
lahf
lret
rcl
push
add
mov
aad
cmc
testb
imul
add
hlt
pop
mov
shr
push
push
push
push
push
call
add
data16
add
fbld
pop
add
push
push
jo
add
add
mov
addl
add
testl
outsl
repnz
add
add
mov
lret
add
mov
in
pop
add
push
pop
mov
push
add
inc
pop
mov
push
not
lea
pop
add
push
push
lea
push
lea
push
push
push
call
add
jle
cmc
mov
add
jl
add
jb
add
jnp
push
add
in
add
add
fiadds
xchg
add
lret
int3
push
addb
int
mov
test
in
call
push
add
add
pop
mov
mov
push
lea
push
push
lea
push
push
push
push
push
push
push
call
mov
lret
test
add
test
add
testl
add
bound
fiadds
add
nop
nop
mov
les
pop
cmp
jne
push
lea
push
push
push
push
lea
push
push
call
rcrl
xchg
pop
imul
out
push
pusha
int3
add
rolb
into
mov
aam
pushf
stos
pushf
add
jns
lods
add
cwtl
fadds
add
jne
mov
push
pop
movl
push
xor
rol
shr
dec
pop
jmp
mov
push
ror
shl
rol
rol
pop
mov
sub
jne
push
pop
mov
push
push
push
lea
push
push
push
call
stos
add
mov
jecxz
push
add
ljmp
and
mov
add
add
add
mov
add
mov
add
pop
add
pusha
xchg
add
add
lcall
add
add
jmp
push
add
pop
mov
mov
push
lea
push
push
push
lea
push
lea
push
call
cmpsl
add
mov
vzeroall
add
movsl
loop
add
add
add
rolb
add
mov
pop
test
fld
jecxz
in
call
cmp
jne
push
lea
push
push
lea
push
push
push
lea
push
call
add
std
add
add
add
lahf
add
lea
add
cmc
add
test
mov
add
mov
mov
add
add
test
add
pop
mov
push
push
lea
push
call
jge
add
sti
roll
add
mov
xorl
nop
cmpl
add
mov
add
add
add
stc
mov
add
clc
mov
stos
ljmp
insb
faddp
lret
in
hlt
lcall
add
add
add
lea
pop
jmp
mov
push
push
lea
push
push
call
lahf
cld
outsl
jge
bnd
add
add
add
mov
add
add
mov
add
mov
xchg
add
cmc
jns
nop
mov
data16
cmpl
jne
mov
push
inc
shr
pop
movl
jmp
push
inc
pop
pushl
pop
push
lea
push
push
push
push
lea
push
push
call
xlat
add
xchg
push
pop
movsb
in
pushf
jle
xchg
add
add
mov
add
add
out
add
mov
std
loopne
pop
add
enter
xchg
add
add
add
lret
push
jecxz
in
push
enter
fwait
push
add
add
jae
add
add
fsubr
add
lods
stos
push
add
out
roll
or
lea
push
push
push
push
lea
push
call
cltd
jmp
movsl
movsl
add
xchg
add
jb
lret
add
insb
add
xchg
pop
add
push
add
imul
mov
lcall
inc
sbb
inc
shl
pop
mov
push
push
ror
push
or
inc
add
rol
sub
ror
dec
sub
pop
add
sub
pop
push
push
lea
push
push
call
stc
fiaddl
xchg
add
mov
addl
xchg
sti
jo
lods
add
mov
add
add
add
out
fidivl
cli
stos
add
mov
in
add
add
jnp
add
add
mov
ror
sub
pop
push
push
push
lea
push
push
lea
push
push
push
push
call
add
pop
addb
jp
mov
adcl
mov
add
stos
stc
add
loop
add
add
add
add
add
xchg
addr16
lret
aad
stos
in
push
mov
in
loopne
lcall
xor
add
or
test
add
push
push
rol
inc
push
or
inc
add
dec
rol
sub
dec
inc
dec
pop
lea
add
pop
push
push
push
lea
push
push
call
jo
push
add
jno
test
add
jne
add
std
in
xlat
imul
add
add
add
fldl
rol
std
lds
add
out
cmpsb
rolb
lea
add
jmp
add
xchg
stos
add
push
mov
push
stc
fwait
insb
add
jnp
in
in
pop
push
push
not
sub
sub
rol
pop
call
push
not
pop
cmpl
je
push
push
dec
inc
push
push
pop
add
sub
shr
sub
pop
lea
pop
push
add
pop
push
push
pop
call
push
lea
push
lea
push
lea
push
push
lea
push
push
call
pusha
mov
mov
mov
aam
add
add
in
fadd
add
add
push
pop
test
sub
pop
cmpl
je
push
push
shl
push
sub
add
not
sub
sub
xor
rol
pop
rol
not
sub
not
pop
push
lea
push
call
mov
ja
pop
mov
jmp
loope
test
js
ja
leave
sti
mov
movb
cmpsl
popa
pushf
add
lahf
lock
gs
enter
sub
pop
push
push
lea
push
push
push
call
add
cmc
addl
bound
mov
lock
in
mov
push
jle
loope
imul
add
add
stc
fldl
lcall
mov
add
push
push
lea
push
push
push
push
push
push
call
mov
into
pop
mov
jmp
jbe
add
jo
mov
pop
std
add
xchg
xchg
add
add
fldenv
add
add
add
add
add
mov
add
pop
lea
std
add
shll
mov
test
mov
cmpl
je
push
push
rol
shr
push
xor
add
add
sub
sub
sub
sub
pop
not
ror
pop
push
xor
pop
push
push
sub
lea
pop
call
push
lea
push
lea
push
push
lea
push
call
xchg
add
mov
movsl
mov
add
add
mov
add
add
add
shll
add
lods
add
std
incb
addr16
mov
add
ret
in
in
lcall
cmp
rol
je
push
push
shl
inc
push
or
inc
add
add
sub
sub
pop
shr
not
pop
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
call
fwait
insb
les
out
movsb
push
add
shlb
leave
std
fisubl
in
fcompl
call
push
pop
cmpl
je
push
push
sub
ror
not
push
or
inc
add
not
xor
sub
shl
lea
pop
dec
pop
push
rol
not
pop
push
call
push
push
push
push
push
push
push
push
call
push
xorb
add
mov
mov
bound
shl
pusha
add
jns
pop
add
leave
roll
sub
pop
cmpl
je
push
push
inc
xor
sub
push
or
inc
add
ror
sub
add
lea
ror
not
pop
shl
dec
pop
push
add
inc
not
shl
pop
push
push
lea
push
push
lea
push
lea
push
push
call
cli
mov
jno
add
cmpsb
lret
faddl
xchg
add
jnp
add
add
add
cmpsl
cmpsl
rcrl
add
add
cltd
js
fistps
xchg
mov
mov
int3
add
add
mov
add
push
loope
bound
add
add
mov
mov
pop
call
cmpl
je
push
push
sub
add
xor
inc
push
xor
add
lea
sub
not
rol
add
sub
pop
add
sub
pop
push
rol
pop
push
call
push
add
rol
pop
cmpl
jne
mov
push
add
pop
movl
push
push
lea
push
push
push
call
imul
cmc
data16
xorb
add
add
xchg
add
add
xchg
add
insb
push
rcrl
mov
mov
ljmp
fwait
push
add
xchg
arpl
add
add
add
add
pop
add
sub
pop
jmp
push
push
call
jo
imul
add
mov
add
pop
add
add
popa
fdivs
add
cltd
test
add
add
xchg
xchg
fistpl
je
push
xchg
add
add
add
xchg
test
aad
add
add
lcall
rclb
leave
lds
ds
ficoml
call
xchg
jmp
add
add
test
add
in
mov
mov
into
mov
add
add
mov
nop
xorl
add
gs
add
mov
pushf
add
add
push
push
push
push
push
push
push
push
push
push
call
cmp
add
add
sbbl
mov
add
push
add
add
xchg
add
roll
add
add
add
imul
addb
adcl
in
fdivr
lcall
push
xor
add
sub
pop
pop
pop
push
sub
sub
add
pop
leave
ret
push
push
call
push
mov
jl
bound
cmpsl
add
std
mov
push
int3
test
push
add
fstps
lcall
pop
push
push
sub
pop
mov
push
shr
lea
xor
pop
add
cmpl
jne
push
push
shl
ror
push
and
add
xor
lea
sub
pop
sub
pop
push
lea
push
push
push
push
push
call
mov
faddp
cwtl
add
std
add
mov
add
add
popl
sbb
xchg
jae
add
add
jp
mov
nop
add
mov
add
xlat
sub
pop
pushl
push
push
push
push
call
add
enter
push
addl
add
imul
lock
andl
movsb
add
add
jnp
lods
add
fildl
lea
sub
pop
call
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
mov
mov
add
jp
add
jae
stos
add
test
sub
add
cwtl
andb
popf
xchg
out
mov
pop
jne
add
add
add
jmp
aam
adcl
jmp
int3
std
add
mov
lcall
in
loopne
lcall
call
pop
call
jmp
push
push
call
add
int3
cmc
lcall
xchg
add
add
ret
push
mov
ja
int3
add
pusha
add
or
jmp
lcall
imul
scas
add
add
xchg
push
pop
into
js
add
testb
sahf
mov
fs
sub
pop
cmpl
jne
push
inc
add
pop
mov
push
push
push
push
push
push
call
mov
add
mov
add
jmp
add
push
std
jp
add
sti
lcall
pop
enter
in
call
call
push
lea
add
ror
pop
ret
push
shr
shr
pop
jmp
push
lea
shr
ror
pop
cmpl
jne
push
push
xor
sub
push
and
add
add
sub
lea
sub
lea
pop
not
sub
ror
pop
push
sub
pop
pushl
call
push
shl
pop
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
mov
jo
cwtl
out
stc
add
add
fdivs
add
std
add
mov
fiaddl
fs
test
add
nop
shl
loop
add
jns
xchg
push
fiaddl
add
add
ficomps
pusha
add
out
iret
popf
ljmp
lcall
rclb
out
shl
pop
jmp
cmpl
je
push
push
lea
push
lea
push
lea
push
call
add
add
stos
add
cli
cltd
lock
xchg
lret
add
test
add
mov
jle
add
hlt
scas
arpl
add
add
pop
pop
jo
add
add
lcall
jge
add
add
mov
push
push
push
push
push
lea
push
lea
push
push
call
add
add
ret
jo
add
cltd
add
enter
ja
push
aad
roll
pushf
xchg
lods
out
jl
jae
add
add
mov
in
pop
out
add
jge
add
push
cld
add
lcall
or
add
push
push
push
push
push
call
roll
xor
loopne
cmc
mov
data16
add
add
lds
movsl
nop
mov
add
in
in
pop
push
push
push
push
lea
push
push
lea
push
push
push
push
push
call
ja
rcr
pop
jnp
mov
lret
jecxz
mov
cli
out
mov
lock
xchg
xchg
loopne
imul
lahf
pop
add
adc
add
loopne
lods
push
push
or
not
add
shl
add
add
ror
sub
sub
sub
pop
not
xor
sub
pop
push
lea
push
push
lea
push
push
call
xchg
jno
pop
add
pop
mov
pop
hlt
lret
pop
add
test
add
loop
add
add
push
add
push
add
jl
in
sub
pop
pushl
call
push
lea
push
lea
push
push
push
push
lea
push
push
call
mov
test
add
movsl
push
pop
add
mov
cmpsl
add
add
mov
add
pop
xchg
add
add
add
into
add
push
add
push
iret
mov
sub
pop
call
push
push
ror
inc
push
or
not
add
ror
xor
ror
sub
sub
sub
add
sub
pop
ror
shr
pop
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
xchg
sub
stos
pop
add
add
add
into
xchg
xchg
add
add
stc
add
ret
jne
ja
add
lret
into
mov
out
mov
mov
rolb
mov
fs
add
add
addl
in
add
lcall
jne
push
shl
sub
inc
pop
call
push
push
push
push
push
push
push
push
call
ret
les
add
in
andb
add
arpl
jb
aam
jp
sub
les
add
add
push
nop
add
push
add
movsl
clc
js
mov
add
in
loopne
lcall
shrb
add
push
push
lea
add
dec
xor
push
xor
add
inc
shl
sub
lea
inc
shr
pop
xor
lea
sub
pop
push
inc
pop
pushl
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
call
lret
add
add
fwait
add
add
add
rolb
pop
add
popf
jae
add
cmc
add
iret
add
lds
sub
pop
call
call
push
push
xor
push
or
inc
add
xor
rol
sub
pop
sub
not
pop
push
push
lea
push
call
xchg
pop
hlt
add
mov
push
pop
test
add
icebp
loopne
push
movl
push
mov
add
mov
scas
sub
pop
pushl
push
push
lea
push
lea
push
call
stos
push
pushf
call
add
stos
add
add
fiaddl
mov
xchg
push
pop
aam
add
test
cli
mov
iret
cmc
add
cld
mov
xchg
add
mov
jo
add
cmpsl
add
push
mov
mov
add
mov
mov
add
jge
aam
push
push
hlt
sub
pop
call
push
push
push
push
push
push
push
push
push
push
call
add
push
out
mov
add
xchg
add
add
add
xchg
idivl
data16
mov
push
add
mov
add
add
fnstsw
lods
lret
fcomps
shrb
movsl
loope
push
xor
push
sub
add
sub
sub
pop
rol
pop
push
not
shr
pop
pushl
push
shl
pop
call
call
push
push
add
sub
dec
ror
push
xor
add
shr
sub
not
shl
sub
inc
ror
pop
add
pop
push
shr
pop
pushl
push
xor
shl
pop
call
push
sub
lea
shl
sub
pop
call
push
push
add
not
not
push
sub
add
sub
shl
sub
rol
xor
pop
xor
rol
inc
pop
push
push
push
push
push
lea
push
push
push
call
in
test
add
add
lods
add
aad
les
rcrl
add
test
jb
add
jo
xchg
insb
je
add
movsl
cmc
xchg
add
add
test
ljmp
add
lods
pusha
notl
loopne
lcall
jne
push
lea
push
push
push
push
push
push
push
push
call
jmp
add
aam
add
imul
add
ljmp
stc
int
pop
add
pop
call
push
pop
call
push
push
sub
shl
shl
push
or
not
add
inc
shl
shr
dec
sub
pop
shr
shr
sub
pop
push
not
xor
shr
pop
pushl
call
push
shl
not
pop
call
push
push
inc
add
push
or
not
add
dec
sub
ror
pop
sub
sub
shr
pop
push
rol
lea
add
add
pop
pushl
push
push
push
push
push
push
push
lea
push
push
call
int
mov
cmpsl
mov
xchg
popl
in
add
pop
call
repnz
jp
mov
add
add
add
add
aam
pop
add
imul
add
jle
mov
add
add
add
xchg
nop
add
scas
cltd
pushf
jp
add
int
jnp
pop
add
add
add
movl
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
iret
add
popa
push
jmp
jle
fwait
add
jae
jns
into
imul
rcrl
scas
shrl
xchg
jmp
jmp
fcomps
shrb
les
mov
not
push
xor
add
add
sub
add
not
sub
ror
pop
dec
lea
pop
push
push
lea
push
push
push
lea
push
call
call
test
ficomps
pop
add
jge
enter
mov
mov
cmpsl
jns
aad
fldlg2
add
xorl
jb
add
add
in
iret
pop
cwtl
add
add
pop
pushl
call
push
pop
lea
push
push
push
push
push
lea
push
call
add
fs
sti
lcall
rolb
jle
mov
add
mov
add
subl
out
add
sarl
add
add
shrb
sub
push
sub
ror
push
or
not
add
dec
shl
sub
xor
pop
rol
inc
not
pop
push
add
pop
pushl
push
sub
not
pop
call
push
push
push
push
push
push
push
push
lea
push
lea
push
call
lea
in
cmpsl
push
add
add
jge
fisttpl
lret
add
add
add
add
add
add
in
push
test
add
testl
add
xchg
fiadds
jl
mov
data16
add
fs
nop
add
rcll
xchg
icebp
sub
pop
call
push
push
xor
ror
inc
push
and
add
lea
dec
sub
sub
dec
inc
pop
add
pop
push
inc
pop
pushl
push
push
lea
push
call
je
mov
ja
pop
test
add
add
mov
pushf
mov
mov
jbe
test
mov
add
rcl
mov
hlt
movsl
add
add
mov
mov
cld
js
add
add
xchg
push
mov
in
hlt
lcall
adc
add
push
push
push
call
mov
add
push
cmpsl
int
add
add
add
add
mov
add
add
add
add
insb
test
sub
pop
call
push
push
rol
push
push
pop
add
shl
dec
sub
ror
not
inc
pop
sub
pop
push
lea
pop
pushl
push
shr
pop
call
push
lea
push
push
lea
push
push
push
push
push
push
push
call
add
xchg
push
enter
mov
ljmp
sarl
iret
pop
add
mov
imul
movsl
xchg
out
in
out
stos
jno
pop
add
add
sahf
add
lcall
shrb
jbe
pop
push
dec
push
or
not
add
sub
sub
lea
lea
add
xor
pop
sub
inc
sub
pop
push
ror
pop
pushl
call
push
push
shr
push
push
pop
add
shr
shl
sub
inc
sub
ror
pop
not
xor
pop
push
push
sub
dec
sub
dec
push
xor
add
add
sub
sub
xor
pop
xor
pop
push
push
call
push
pop
scas
shlb
add
test
mov
addl
xchg
add
out
lds
mov
cld
fdivrs
negb
add
jo
in
push
shl
lahf
movsb
in
add
adcl
jnp
in
clc
lcall
rcrb
push
lea
push
push
call
add
data16
xlat
sbbb
xchg
mov
lock
push
add
jmp
add
add
iret
fs
outsl
mov
sub
pop
dec
jne
push
lea
push
push
lea
push
push
push
call
popa
add
add
add
lds
mov
aam
add
call
add
add
cld
roll
add
bound
add
lret
xchg
fwait
shr
cld
xchg
movl
mov
lods
jne
in
call
add
push
push
lea
push
call
add
pop
mov
add
fsub
bnd
lcall
push
lcall
jno
add
xchg
rcr
add
scas
aam
add
add
add
int
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
push
call
add
jno
lcall
clc
add
call
fstl
stos
lahf
enter
xchg
add
add
sub
pop
lea
push
push
shl
shr
push
and
add
shl
sub
lea
ror
xor
pop
sub
add
pop
push
push
call
xorb
add
cmpsl
fwait
push
mov
shll
jb
add
mov
mov
add
add
lcall
add
add
arpl
lods
stos
add
enter
roll
ljmp
lcall
jne
call
push
pop
push
push
lea
not
rol
pop
call
push
push
rol
push
push
pop
add
sub
lea
add
sub
add
pop
ror
pop
push
shr
sub
pop
pushl
call
push
sub
inc
pop
call
push
push
push
push
push
push
push
lea
push
push
call
sahf
gs
add
stos
add
fldl
fistl
jle
add
xchg
test
outsl
int3
scas
out
push
add
fdivrs
addb
add
pusha
jbe
mov
add
mov
lods
icebp
add
popa
imul
push
add
add
test
sub
pop
mov
push
lea
push
call
mov
pop
add
xchg
add
rcrb
test
add
pop
mov
jp
cmc
int3
scas
in
add
add
add
fiaddl
add
loope
stos
add
mov
push
data16
add
lods
add
push
add
loop
xchg
mov
add
add
js
in
clc
lcall
pushf
and
ljmp
and
jmp
push
or
inc
add
add
sub
xor
add
pop
add
add
dec
dec
pop
push
inc
shr
dec
pop
pushl
push
shl
pop
call
push
push
push
lea
push
push
push
push
push
lea
push
call
add
xchg
rcrl
imul
add
add
nop
add
or
addb
imul
add
add
add
push
mov
cld
lcall
lret
add
in
fildll
shll
add
add
lcall
add
push
inc
ror
add
lea
pop
push
push
push
push
push
call
jle
fwait
add
shl
add
add
jmp
pop
lds
filds
fs
add
add
lcall
add
icebp
pop
pushl
push
push
xor
push
or
not
add
dec
dec
sub
add
sub
rol
dec
pop
rol
pop
push
lea
dec
pop
push
push
not
dec
dec
pop
call
push
push
sub
dec
ror
push
xor
add
add
not
sub
add
pop
shr
inc
pop
push
shl
xor
add
sub
pop
pushl
call
push
push
lea
push
push
lea
push
push
call
popl
out
push
stos
jl
add
add
imul
add
jno
push
loop
clc
add
in
add
in
pop
mov
in
rolb
ja
xchg
add
sahf
pop
add
call
sub
add
xor
pop
call
push
push
shr
ror
push
and
add
dec
ror
sub
shl
sub
lea
rol
sub
pop
inc
pop
push
lea
inc
shl
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
push
call
push
add
add
rcr
call
pop
add
mov
add
mov
roll
add
mov
mov
add
push
rolb
dec
adc
add
rclb
ret
in
iret
lret
pushl
mov
push
rol
pop
jmp
push
push
add
sub
dec
push
sub
add
sub
ror
add
sub
shr
lea
pop
add
pop
push
push
push
push
call
mov
sub
ret
jnp
scas
int3
add
add
add
jbe
jnp
add
test
push
add
add
add
sahf
clc
iret
mov
push
pop
bound
fnstsw
mov
js
push
push
add
add
leave
add
lcall
jne
call
push
push
push
push
push
call
pop
movsb
js
cltd
iret
jbe
addr16
add
jge
add
add
jne
icebp
lahf
push
pop
test
roll
add
push
lods
add
mov
popa
add
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
push
stos
data16
add
mov
add
push
add
popf
testl
test
add
scas
out
jl
rol
push
add
add
pop
stos
mov
shrb
sbb
xlat
push
shr
ror
shl
push
or
inc
add
inc
sub
sub
pop
pop
push
ror
rol
pop
pushl
push
push
lea
push
push
push
push
push
push
call
add
add
iret
add
jbe
xchg
add
add
faddl
shlb
repnz
add
xchg
les
bound
in
loopne
lcall
push
adc
add
push
sub
pop
call
push
pop
leave
push
xor
pop
add
pop
push
push
push
push
lea
push
call
jge
insb
push
add
add
adcl
mov
lcall
loope
jge
add
cld
sub
pop
pop
push
sub
add
not
pop
pop
push
push
lea
push
push
push
call
lods
add
stos
add
movsl
sti
enter
sti
jnp
lea
test
add
add
lret
add
add
add
xchg
mov
push
lods
addl
mov
add
lret
add
cmpsb
rcr
jmp
jns
mov
cmpsl
fmul
imul
xor
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
lods
add
mov
push
sti
add
add
push
add
test
add
loope
movsb
sub
pop
inc
push
dec
not
pop
ret
push
push
call
bound
test
lods
sti
add
add
add
repnz
jl
int
add
push
ja
jns
test
add
add
lret
mov
mov
add
pop
rcll
stc
pop
hlt
add
lret
stos
add
in
call
enter
mov
add
sub
pop
leave
ret
push
push
push
call
shll
cltd
icebp
aad
add
add
addr16
add
test
xchg
out
add
push
add
push
fs
add
add
jnp
add
add
add
push
add
add
stc
xchg
mov
add
push
hlt
loope
add
add
loop
movsl
add
fisubrl
xchg
add
add
mov
xchg
sub
pop
push
push
push
call
cli
add
jae
mov
in
add
add
push
jmp
add
add
add
roll
testl
add
add
add
cwtl
xchg
out
testb
lcall
mov
shl
xchg
jge
int3
push
fcoms
aad
stc
add
mov
pop
jae
sub
pop
mov
cmpl
jne
push
sub
pop
mov
push
push
push
push
push
lea
push
call
add
pop
jmp
jmp
les
mov
ffreep
fcmovbe
add
push
push
movsl
mov
xchg
shr
add
push
mov
add
orb
mov
divb
add
mov
test
in
call
add
push
lea
push
push
push
push
push
call
add
rolb
mov
pop
add
pop
add
jae
add
lcall
faddl
lods
mov
imul
fucomp
mov
push
add
out
fwait
add
xchg
add
sub
pop
mov
and
push
shr
pop
xor
push
push
call
mov
add
jmp
add
jl
mulb
jno
add
enter
mov
test
push
lds
add
mov
lahf
add
mov
cld
jb
add
push
cmc
lcall
push
adc
lea
push
push
lea
push
push
call
push
xchg
fcmovbe
add
add
add
mov
add
add
add
add
jp
add
cmc
mov
mov
add
jae
cwtl
pop
lods
add
sti
add
add
scas
add
add
insb
gs
pusha
add
js
mov
add
add
jmp
fistpll
add
sub
pop
add
push
lea
push
push
push
call
add
add
cwtl
test
pop
cld
add
cld
pop
jecxz
js
add
mov
jb
add
jo
mov
add
mov
in
lock
lcall
dec
decl
push
push
push
push
lea
push
push
call
add
movb
add
jp
lret
add
add
push
ja
cld
cld
mov
mov
fildll
xchg
cld
data16
mov
lret
imul
add
push
add
addb
push
insb
mov
aad
push
add
add
add
add
jmp
lcall
jmp
push
dec
add
add
pop
jmp
push
rol
pop
sub
push
dec
pop
pushl
pop
push
rol
sub
add
pop
sub
cmp
jne
push
pop
mov
push
lea
push
push
lea
push
push
push
call
ret
icebp
mov
mov
into
jnp
jns
add
add
lahf
add
xchg
fldl
loop
mov
repnz
in
call
lea
push
not
dec
pop
sub
push
push
push
push
push
push
push
lea
push
push
call
mov
cmpsb
xchg
cld
add
mov
add
mov
add
xchg
loopne
fwait
hlt
pop
add
add
std
add
lret
add
ret
add
add
mov
fisttpl
je
mov
add
pushf
stos
add
pop
ret
mov
add
fcompl
or
jmp
enter
push
shr
not
pop
pushl
pop
push
push
push
push
push
call
mov
loopne
push
mov
pop
add
int
add
loop
xchg
stos
add
add
mov
add
xchg
lret
add
hlt
mov
add
add
js
add
push
jb
jno
mov
add
shrb
pushf
pushf
add
add
lods
add
add
stos
loop
mov
mov
add
add
xchg
add
loope
in
in
lcall
jmp
in
adc
shll
repnz
int3
shr
pop
and
sub
push
push
push
push
push
lea
push
push
call
lods
add
mov
push
xchg
add
addr16
std
loopne
shlb
xchg
loopne
add
add
mov
add
add
xchg
jno
add
jmp
addr16
mov
push
add
cmpsb
fwait
out
add
push
add
cmpsb
pop
fldl
pushf
push
addr16
mov
fs
cltd
aad
in
pop
sub
pop
cmp
jne
push
lea
push
call
add
add
add
je
lods
mov
in
add
loopne
add
int3
data16
out
jnp
mov
int3
outsl
add
add
jmp
push
arpl
faddl
pop
jecxz
add
add
add
lcall
ret
push
sub
rol
shr
pop
push
push
shr
rol
xor
pop
mov
push
sub
add
ror
pop
add
push
add
add
pop
push
push
pop
push
push
push
lea
push
lea
push
push
push
push
call
test
add
add
jp
jnp
push
mov
sbbl
add
divl
in
xchg
fisttpll
movsl
add
movsl
jp
ja
fildl
in
ljmp
stos
add
sub
pop
push
push
push
not
add
pop
push
mov
push
lea
push
push
push
push
push
push
push
call
loope
add
pop
add
out
movsb
stos
jmp
lret
ret
insb
mov
add
sub
pop
lea
sub
push
dec
xor
shl
add
pop
mov
shr
push
push
push
push
push
push
push
lea
push
call
add
jbe
add
add
xchg
fwait
jne
filds
mov
into
xchg
jno
push
xchg
add
add
int3
add
hlt
xchg
nop
pop
ret
mov
fxam
out
roll
add
add
add
mov
push
ror
inc
pop
add
push
push
push
push
push
push
push
push
lea
push
call
push
add
mov
fmul
add
cltd
mov
cmpsl
add
iret
gs
add
push
add
pop
fistps
test
add
add
in
fcompl
jnp
push
inc
sub
add
pop
add
xor
push
dec
pop
mov
and
push
add
lea
sub
pop
rol
rol
push
push
lea
push
push
push
push
call
sahf
pop
add
test
out
les
aad
out
lods
ljmp
popa
in
mov
stos
add
rolb
add
cli
jge
add
add
mov
out
add
sahf
push
leave
add
xchg
add
mov
sub
pop
xor
inc
push
push
push
lea
push
push
push
push
push
call
fs
cld
aad
pop
into
bound
add
add
add
roll
add
lods
imul
jmp
imul
mov
jmp
push
sahf
sub
pop
cmpb
jne
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
addr16
data16
push
call
add
js
add
mov
add
pushf
pushf
js
in
add
out
cli
mov
add
add
jmp
push
test
add
rclb
lahf
push
add
in
jbe
sub
pop
add
cmp
je
push
lea
push
push
lea
push
push
push
push
push
call
hlt
lahf
leave
popf
mov
imul
add
mov
ficompl
add
lock
mov
add
add
mov
jp
iret
jo
imul
add
fiaddl
add
shr
add
int3
out
std
in
add
push
add
add
mov
add
add
jno
pop
jle
scas
add
ret
adc
ror
pop
cmpl
jne
push
push
push
push
push
lea
push
push
push
call
lods
mov
movsl
xchg
push
xchg
pop
sahf
xchg
add
jno
push
mov
add
jno
add
push
jmp
mov
test
add
fadds
add
jge
sti
addl
jmp
in
loopne
lcall
rcrb
lea
push
push
push
call
lahf
push
mov
pusha
add
mov
push
add
add
stos
cli
mov
push
add
pop
leave
push
xchg
stos
fadd
push
add
addb
add
add
fwait
jle
fsubp
add
add
jno
add
add
push
add
push
push
lea
push
push
push
push
push
push
push
call
mov
lock
jmp
add
pop
xchg
xchg
jecxz
xchg
add
mov
shll
out
add
add
cltd
push
xchg
add
add
pop
cli
push
xchg
rolb
aad
scas
data16
stc
mov
fdivr
lcall
push
push
push
push
lea
push
call
loop
add
add
ret
rolb
jo
xchg
fsubr
add
add
mov
imul
scas
stos
add
iret
add
push
xchg
popf
hlt
loope
mov
fbstp
nop
add
lods
movl
jmp
push
push
lea
push
push
push
call
sti
xchg
mov
add
pop
mov
fwait
loop
out
add
jl
add
mov
add
push
out
add
test
add
out
jo
mov
add
repnz
add
add
mov
add
add
add
lcall
push
push
push
lea
push
call
add
jns
pop
add
add
add
jb
xchg
bound
mov
in
lret
fwait
pop
add
add
add
lcall
add
add
add
int3
int
mov
add
add
add
sub
mov
icebp
add
add
push
not
rol
shl
ror
pop
ret
push
push
push
push
push
push
lea
push
push
call
scas
enter
test
add
add
mov
lock
jl
add
pop
flds
add
pop
stos
clc
add
add
mov
add
cld
nop
add
add
add
add
jb
add
sub
pop
mov
push
shr
not
rol
shl
pop
add
push
push
push
lea
push
call
add
movl
add
push
add
add
push
mov
add
mov
push
pop
add
xchg
add
add
add
push
int3
filds
mov
ret
add
icebp
in
jb
jne
add
add
test
sub
pop
mov
push
xor
pop
movzbl
push
shl
lea
pop
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
test
add
gs
add
test
push
add
filds
add
rolb
add
add
add
sub
pop
call
push
lea
push
push
push
call
movsb
add
fs
popa
test
lods
subb
add
xchg
imul
push
ja
add
add
enter
mov
add
into
fdivs
add
add
ja
sub
pop
xor
pop
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
add
add
xchg
add
jb
js
movsb
aad
arpl
add
add
add
mov
push
pop
loope
jp
add
jb
add
add
mov
lea
test
mov
shrl
xchg
jae
mov
pop
add
add
add
sub
pop
pop
push
push
push
push
push
call
shrb
add
add
iret
add
mov
add
add
add
nop
add
mov
fiadds
fiaddl
add
add
in
add
pop
add
jecxz
xchg
mov
xor
out
add
add
jno
repnz
add
add
vmovntdq
add
push
cmc
sub
pop
pop
push
push
push
lea
push
call
add
jb
push
add
mov
add
xchg
add
clc
jne
add
roll
clc
jl
add
push
fldcw
add
jne
add
add
clc
sar
in
push
movsl
mov
add
ljmp
xlat
std
jbe
mov
scas
add
jns
add
sub
pop
pop
push
dec
pop
pop
push
lea
push
push
push
push
push
push
push
push
push
call
pop
out
aad
in
add
js
add
add
aam
fiaddl
add
cli
pop
icebp
subb
bound
mov
in
fcomps
push
push
push
push
lea
push
push
lea
push
push
push
call
stos
outsl
add
int3
mov
add
xchg
xchg
add
add
mov
add
add
xchg
insb
mov
test
sti
add
add
add
in
int
lret
mov
lock
mov
add
pop
pop
icebp
aam
push
mov
ret
rcrl
shlb
add
testb
in
fdivr
lcall
or
push
push
push
lea
push
lea
push
call
add
jb
cli
test
add
mov
xchg
add
in
test
in
jp
xchg
add
add
addr16
lcall
test
mov
in
add
add
add
mov
add
add
jecxz
add
add
add
lcall
push
push
lea
push
call
add
add
stc
bnd
add
push
outsl
mov
arpl
pop
xchg
std
mov
add
jbe
imul
add
mov
xchg
jo
mov
add
cltd
mov
push
add
ljmp
test
add
add
pushf
subb
in
hlt
lcall
in
push
xor
shr
add
xor
pop
add
push
lea
ror
inc
pop
push
push
sub
inc
xor
pop
push
push
push
push
push
push
push
push
call
mov
add
add
pop
sbb
add
add
rcll
xchg
add
add
lret
mov
add
lea
addr16
add
arpl
push
mov
add
add
mov
xchg
addl
call
push
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
lahf
mov
add
lock
add
mov
lret
mov
add
jae
xor
jmp
add
mov
fcoml
add
arpl
mov
jle
in
fcomps
pop
or
shr
pop
pop
push
shl
pop
lea
push
push
lea
push
call
call
add
clc
pop
add
repnz
sti
add
add
add
loopne
test
add
add
int3
add
out
add
jmp
add
add
add
add
mov
add
fistpl
xchg
js
add
xlat
sub
pop
sub
push
dec
pop
mov
push
push
push
lea
push
lea
push
push
call
xchg
into
push
jbe
mov
rolb
fs
add
loopne
mov
add
leave
hlt
jne
mov
pop
add
js
insb
add
add
roll
add
iret
fiadds
loope
add
add
add
xchg
popf
jbe
test
add
add
addr16
gs
outsl
mov
call
in
call
shr
add
push
push
push
push
lea
push
lea
push
call
push
add
je
xorb
add
pop
add
int3
add
test
in
add
add
mov
add
imul
add
add
rolb
xchg
mov
add
lcall
pop
js
lea
push
lea
push
push
push
push
push
push
push
lea
push
call
add
lahf
add
scas
add
mov
clc
insb
add
add
jo
ret
xchg
mov
cli
add
aad
add
fsubrp
add
incb
fld
xchg
add
pop
in
add
icebp
add
add
in
add
iret
add
add
pop
add
pushl
push
sub
pop
popl
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
push
add
pop
add
fdivrs
je
add
aad
fwait
add
mov
add
jno
testb
andl
mov
add
add
add
jge
add
loop
out
nop
lret
rcr
add
add
add
pushf
mov
add
add
jae
fildl
lcall
jnp
push
push
push
push
push
push
lea
push
call
jecxz
mov
lock
push
pop
testl
push
subb
int3
iret
fstpt
roll
loopne
aam
nop
lods
addr16
add
add
pop
push
add
mov
add
push
rcll
ret
jmp
sub
pop
add
push
lea
shr
shl
dec
pop
xor
push
push
push
push
push
push
call
push
add
rcr
pop
add
add
add
xchg
data16
out
cmpsb
outsl
movsb
add
pop
add
add
in
in
mov
filds
fs
push
cwtl
iret
popa
mov
pusha
mov
add
pop
add
mov
in
call
mov
push
shl
add
pop
add
push
push
push
push
lea
push
call
lods
mov
add
cmpsl
pushf
push
add
add
fstps
mov
lds
leave
mov
add
fldl
jae
test
add
add
push
ljmp
filds
add
repnz
lret
xchg
addl
mov
pop
xor
rol
push
lea
push
lea
push
push
lea
push
call
add
add
add
out
add
push
add
repnz
add
add
lods
add
int3
add
add
sahf
outsl
add
std
add
add
addl
cmpsl
scas
jmp
cmpsl
mov
add
add
imul
add
xchg
add
xchg
iret
mov
lcall
push
shl
pop
nop
push
shr
pop
xor
push
rol
lea
pop
nop
push
sub
pop
nop
inc
push
add
shr
add
xor
pop
nop
push
lea
push
push
push
push
call
call
pop
test
add
add
rolb
pop
lret
add
aam
add
jmp
pusha
icebp
add
add
jp
cmpsl
mov
mov
add
add
enter
pusha
popa
rolb
into
cli
leave
add
mov
iret
add
imul
add
lret
in
pop
nop
push
push
push
call
add
mov
data16
scas
bnd
push
add
mov
add
mov
cmc
add
jl
hlt
add
out
shlb
loope
lret
add
add
sarb
or
jp
clc
jns
xchg
xlat
pop
push
sarb
sub
pop
cmpb
jne
add
push
push
push
call
add
jne
xlat
pushf
add
add
movsb
add
add
add
data16
test
cmpsl
imul
push
add
add
jl
xchg
lahf
sti
add
add
add
test
lcall
push
push
push
push
push
push
push
push
lea
push
call
add
mov
loop
pop
add
push
add
add
mov
scas
add
mov
int
jns
mov
add
rorb
in
add
test
gs
add
add
jmp
in
pop
out
sub
pop
nop
push
xor
ror
pop
cmp
je
push
add
shr
add
pop
nop
push
pop
nop
push
dec
shr
add
sub
pop
inc
push
push
lea
push
lea
push
push
push
push
push
push
call
jmp
add
stos
mov
fistl
add
mov
in
add
push
jbe
mov
std
mov
add
insb
lret
add
not
add
pop
lods
add
add
xchg
add
add
popa
xchg
popf
in
mov
clc
loopne
mov
lcall
push
push
call
add
rcl
add
add
shlb
jge
add
mov
add
in
add
enter
add
mov
test
add
mov
jns
mov
mov
add
jb
push
add
hlt
add
flds
test
fcoml
sub
pop
nop
push
xor
sub
lea
sub
pop
cmp
jb
xor
push
push
push
push
push
push
call
add
add
add
xchg
nop
imul
jne
mov
in
mov
fwait
rorb
jbe
push
jge
add
add
add
mov
add
pop
add
xchg
xchg
xchg
add
add
fs
add
sub
pop
jmp
push
shr
pop
mov
push
push
push
push
push
call
add
add
push
arpl
add
loope
add
jle
mov
jne
add
add
add
add
filds
add
add
add
jb
add
outsl
in
cmpsb
test
mov
add
hlt
add
add
add
pop
add
jbe
add
add
add
add
add
push
add
sub
pop
movzwl
push
add
pop
mov
add
push
not
inc
lea
pop
mov
push
pop
xor
push
rol
add
rol
pop
xor
push
rol
pop
shl
push
lea
push
call
mov
push
popf
add
fs
jle
add
jnp
add
add
mov
cwtl
add
pop
cwtl
subl
shll
data16
test
fldl2e
add
add
add
imul
mov
jp
sub
pop
xor
push
push
push
lea
push
push
call
add
add
lods
lcall
ljmp
mov
fildl
add
test
add
push
in
add
out
rolb
jnp
andl
add
xchg
in
add
add
ja
test
jmp
arpl
add
lock
mov
sti
cltd
cld
les
out
sub
pop
shl
xor
push
push
push
call
push
mov
neg
data16
push
cwtl
lahf
mov
sahf
add
xchg
mov
aad
mov
mov
ja
lds
std
mov
iret
mov
popf
add
add
lcall
loope
xor
push
pop
mov
push
lea
push
push
push
lea
push
push
call
add
push
add
mov
xchg
cmc
add
testl
mov
popf
add
popf
mov
fiaddl
mov
iret
leave
add
repnz
sub
pop
add
pop
push
not
lea
xor
pop
pop
push
sub
ror
pop
pop
push
pop
pop
push
push
call
in
pop
xchg
enter
out
loop
add
add
cmc
mov
add
add
add
add
add
add
cwtl
sub
pop
leave
ret
push
push
push
lea
push
push
call
out
xchg
test
add
add
add
int3
test
rol
pop
movsb
jl
xchg
pop
mov
add
test
in
mov
add
add
into
ljmp
push
add
test
pop
xchg
fiaddl
mov
stos
add
push
add
addb
xchg
add
mov
add
lcall
mov
push
rol
pop
push
push
shl
add
add
pop
push
push
shr
dec
dec
pop
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
add
sti
mov
out
xchg
sarl
shrl
testb
test
mov
lret
add
push
cmpsb
add
stc
loope
add
sub
add
add
lea
add
pop
sub
pop
push
push
push
lea
push
call
in
shl
add
pop
stos
fistl
clc
xchg
mov
add
fmulp
mov
add
add
add
add
add
push
add
lcall
dec
or
adc
rorb
cld
pushf
ror
pop
mov
push
xor
xor
pop
test
je
mov
push
push
push
push
push
call
push
lock
add
add
add
mov
add
add
fwait
add
add
test
xchg
add
xchg
mov
iret
mov
add
gs
add
sahf
int
jb
add
enter
sub
pop
test
je
push
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
add
add
add
test
in
rclb
push
mov
add
data16
push
bound
lea
mov
cld
mov
xchg
mov
mov
push
push
push
push
push
lea
push
push
push
call
add
add
mov
pop
lods
mov
add
mov
add
push
stc
out
jl
cld
mov
xchg
add
fiadds
mov
pop
jecxz
movsb
je
in
add
lret
add
in
loopne
lcall
pop
push
sub
lea
rol
pop
inc
push
dec
sub
dec
pop
cmp
je
push
shr
shr
pop
test
je
mov
push
push
push
push
call
add
sahf
add
out
jl
leave
in
fs
add
test
add
test
mov
lods
lcall
call
scas
add
xchg
hlt
mov
xor
lock
lcall
cmp
je
push
sub
not
pop
test
jne
xor
push
push
push
push
push
lea
push
lea
push
push
push
push
call
add
add
xchg
mov
cltd
pop
iret
add
add
add
nop
mov
jb
lret
scas
popf
mov
fcompl
add
push
jns
mov
jo
in
fdivr
lcall
pop
push
push
push
lea
push
push
push
push
push
call
test
add
in
push
pop
mov
mov
add
mov
jle
jecxz
add
les
mov
jle
pusha
pop
push
add
add
movl
add
rol
mov
add
add
add
mov
cld
add
sub
pop
pop
push
lea
push
lea
push
push
lea
push
call
test
add
add
testb
test
mov
add
jecxz
stos
data16
std
add
add
adc
out
add
mov
add
loop
les
add
add
add
add
add
loope
pushf
lock
jo
fs
pop
pop
push
rol
sub
pop
leave
ret
push
push
push
lea
push
push
push
push
push
lea
push
call
test
lds
push
add
add
loope
add
push
mov
add
jmp
add
add
iret
mov
cmpsl
push
add
mov
add
fldl
notl
add
add
add
jp
out
fldenv
add
movsl
repnz
add
add
mov
lcall
push
push
inc
pop
inc
cmp
jne
push
push
push
lea
push
push
push
call
add
xchg
into
add
pop
iret
je
out
add
icebp
mov
out
jnp
lods
xchg
jne
bnd
lods
jne
roll
pop
lea
push
push
call
add
add
ret
in
add
fwait
xchg
push
imul
add
add
popa
js
push
loop
in
clc
lcall
popa
add
mov
cmc
sub
gs
jecxz
lea
push
push
push
push
call
rolb
je
add
push
jge
jns
add
push
lea
add
add
add
add
cltd
sti
jle
enter
xchg
out
test
add
add
xchg
lcall
add
pop
test
je
push
lea
xor
ror
rol
pop
mov
add
push
push
lea
push
push
call
orb
test
loop
mov
fstpl
mov
add
mov
push
add
add
lahf
out
pop
mov
sarl
add
mov
shll
mov
in
lock
lcall
loopne
test
decl
add
pop
test
je
mov
push
push
call
leave
loop
xlat
add
out
sarl
add
mov
add
mov
mov
pusha
add
add
fists
add
out
js
add
push
add
jo
in
clc
pop
add
cmp
je
push
sub
sub
sub
shl
pop
jmp
xor
push
xor
pop
pop
pop
push
push
push
lea
push
lea
push
call
jmp
outsl
mov
mov
add
std
loope
xchg
jnp
add
ficoml
add
mov
add
scas
movsb
stos
mov
les
mov
add
mov
cltd
push
add
lret
addr16
add
add
pop
push
push
lea
push
push
push
push
push
push
push
push
call
jns
in
xchg
cmpsb
mov
ret
test
addb
stos
add
popf
jae
add
push
jne
stos
add
add
mov
les
mov
add
add
sub
pop
pop
push
not
add
pop
leave
push
lea
push
lea
push
call
nop
les
data16
repnz
popf
stc
add
aad
add
mov
add
add
loop
rcrl
enter
fiaddl
faddl
rolb
or
lea
push
push
push
lea
push
push
push
call
xchg
mov
addr16
lahf
jne
pop
dec
bound
mov
add
add
add
add
loope
add
nop
add
add
add
pop
pop
push
add
not
sub
pop
pop
pop
push
add
pop
leave
push
push
call
pushf
scas
fldt
sbbl
filds
add
scas
add
lahf
sahf
pushf
ljmp
lret
clc
add
add
add
mov
jp
push
xchg
mov
add
or
push
ror
rol
sub
pop
mov
push
sub
ror
pop
pop
pop
push
dec
lea
pop
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
call
lcall
add
xchg
add
movsb
je
add
add
add
add
add
add
lcall
mov
add
add
add
xchg
cwtl
rolb
jne
sub
pop
pop
leave
push
push
lea
push
push
push
push
push
push
lea
push
call
add
insb
add
mov
add
mov
add
mov
add
cmpsl
xchg
pop
add
pop
xlat
adcl
add
insb
mov
imul
movl
mov
in
fldenv
rcrb
pop
ret
lret
sbb
mov
scas
lret
int
scas
lret
std
mov
scas
rcr
mov
scas
lret
mov
mov
scas
dec
and
fdivrp
ljmp
sbb
sub
mov
insb
push
add
or
jae
mov
add
sbb
int
lock
or
pusha
or
jmp
dec
dec
test
cmc
xchg
push
dec
cmc
ficompl
rorb
mov
push
adc
xlat
orl
jne
in
inc
dec
pop
std
mov
cmpl
mov
ja
hlt
in
add
cmp
jmp
xor
ljmp
das
and
or
push
clc
add
xchg
sbb
and
adc
jb
push
sub
cwtl
aad
pop
addr16
aam
cs
jns
fidivl
mov
aam
popf
mov
jae
sub
test
shlb
mov
flds
sbb
scas
cltd
mov
cmpl
jbe
mov
sbb
xchg
push
xchg
les
mov
fisubrs
jno
repz
xchg
mov
rol
jo
mov
arpl
out
mov
pop
cs
movsl
add
push
les
push
clc
cwtl
sub
adcl
mov
mov
or
sub
data16
mov
xor
lea
ffreep
xchg
xor
add
popa
loop
xor
jno
mov
sbb
pop
hlt
fiadds
sub
dec
ret
or
stos
sub
in
or
mov
lret
pop
pop
pop
inc
xor
sbb
inc
or
push
push
cwtl
sub
arpl
std
movsl
xchg
or
hlt
fistl
jg
jo
insl
mov
sub
in
icebp
lds
sbb
mov
dec
push
mov
sub
and
pusha
sub
add
in
ret
outsb
adc
pushf
push
gs
sbb
inc
lret
mov
jge
loope
cmp
ret
push
mov
mov
test
sbbl
add
out
mov
cs
lods
jecxz
nop
ficoml
bound
aas
pop
jle
out
insl
mov
dec
aam
or
outsl
ret
xlat
adc
cld
lods
movsb
fisubs
mov
shlb
pop
in
push
xchg
and
pop
insb
or
add
cmpsb
test
int
fsubrs
or
mov
cmp
inc
daa
xchg
jae
jo
mov
and
jmp
divl
adc
jmp
sbb
and
dec
cmpsb
jae
adc
mov
mov
leave
sub
jne
xchg
adc
lods
sbb
call
fistps
loop
out
sub
jbe
stos
sbb
pop
push
or
jo
mov
cs
push
pop
dec
cmp
sub
out
adc
je
pop
or
mov
jbe
popa
shr
cmp
nop
xor
push
xchg
fcmove
js
sti
or
out
xchg
vcvtsi2ss
adc
inc
push
xchg
mov
jmp
push
mov
inc
mulb
add
xchg
pop
xor
scas
test
imul
inc
push
in
jl
jb
xchg
sub
xlat
mov
mov
ficomps
loopne
fdivl
jmp
scas
cltd
fldt
sbb
sbb
lods
nop
mov
lods
out
mov
mov
in
iret
sahf
in
pop
mov
dec
push
les
icebp
movsb
sub
stc
loope
hlt
jo
push
pop
arpl
add
hlt
mov
sbb
mov
dec
adc
and
inc
jne
add
xor
lds
push
out
leave
out
div
ss
push
out
sub
int3
repnz
mov
rcll
inc
in
jbe
out
jb
pop
adc
stos
cs
cmpsl
out
push
mov
stos
out
fldcw
mov
add
adc
int
xor
insb
dec
inc
addr16
adc
jle
jmp
leave
push
mov
jns
sbb
jno
fwait
out
jns
mov
pop
adc
test
ret
movsb
jbe
inc
adc
outsb
cld
pop
xchg
ds
cmp
sub
sbb
cmp
pop
push
push
in
jnp
add
push
in
jle
xchg
or
dec
cmp
adc
lock
mov
mov
fists
sub
push
stc
testb
mov
data16
sbb
pop
mov
andl
pop
sub
sbb
mov
lock
push
xchg
in
repz
in
push
sbb
and
and
cs
xchg
cs
cld
cmpb
jg
cltd
dec
out
ret
or
into
jb
jno
lea
fwait
popa
or
or
dec
loop
hlt
push
in
loopne
sub
aaa
sub
pop
sbb
in
test
add
bound
and
outsl
std
adc
cmp
xchg
das
mov
stos
subl
cmc
pop
pop
sbb
pop
decl
das
dec
lret
mov
push
dec
lret
add
lahf
shlb
dec
pop
pop
cmp
outsb
stc
adc
sahf
xchg
pushf
inc
push
ja
inc
rep
adc
mov
xchg
addr16
arpl
xchg
stos
cltd
push
popf
es
nop
in
mov
arpl
mov
lahf
sbb
popa
stos
fbld
sti
dec
pop
dec
pop
stos
push
fwait
add
mov
push
mov
push
shl
adc
push
push
test
je
xor
popa
inc
dec
sti
xchg
cmpsl
enter
das
fnstcw
xor
jnp
cmp
push
and
and
fwait
out
sahf
scas
jnp
and
mov
ud0
cmpsl
aaa
stos
mov
int
fs
xchg
push
outsb
mov
mov
les
push
mov
xor
or
pop
lea
out
ret
mov
mov
out
faddl
adcl
xor
sti
icebp
add
mov
iret
add
lea
shll
dec
hlt
nop
adc
pop
scas
xor
mov
sub
mov
popa
jle
in
add
inc
mov
mul
push
and
push
dec
mov
cmp
lcall
pushf
adc
in
sbbb
imul
add
imulb
and
mov
xor
xchg
add
repnz
xor
sar
add
sub
and
aam
stos
out
or
xchg
push
xchg
push
jnp
lock
mov
inc
ss
icebp
pop
fsubl
dec
dec
out
sbb
test
je
leave
xchg
mov
xor
adc
icebp
les
jg
xchg
mov
inc
add
int3
stc
fstpl
fstpt
lcall
xlat
popa
push
xlat
mov
rorl
stos
mov
mov
jecxz
stc
pop
push
adc
ss
xchg
in
sbb
cmc
mov
inc
outsb
mov
xchg
fidivl
inc
xorb
mov
mov
mov
repnz
loopne
push
ja
inc
add
call
roll
adc
push
das
aam
add
ja
xor
rorl
ret
push
shrl
pusha
arpl
int3
push
loop
mov
jne
adc
dec
add
in
clc
dec
dec
jg
in
jge
xor
push
sbb
dec
ficompl
push
jl
sarb
sbb
adc
cwtl
mov
pop
shlb
and
test
fdivl
dec
lret
push
sti
inc
jnp
xor
out
sub
xchg
movb
cmp
dec
mov
xchg
or
shrl
out
sub
outsl
pop
dec
fs
jecxz
filds
in
and
shlb
daa
loope
js
into
jb,pn
adc
dec
mov
fnstcw
mov
inc
into
adc
xchg
incl
pop
rolb
push
out
mov
popf
push
or
jle
mov
je
jnp
xchg
adc
mov
push
push
rcr
or
mull
pop
sahf
loopne
sub
in
bound
xchg
loope
shl
ret
xchg
cmp
scas
movsl
cmpb
popl
xchg
dec
mov
push
add
into
movsl
mov
in
cmc
sarb
and
lcall
add
popf
push
or
mov
fisttpll
jnp
jecxz
xchg
call
mov
or
inc
dec
xchg
cmp
ljmp
push
jmp
inc
xchg
xor
jno
outsb
imul
das
ret
sub
xor
xor
mov
dec
mov
iret
cmp
std
aaa
xchg
and
push
and
icebp
sbb
push
aas
mov
and
xor
ret
adc
in
imul
pop
add
int
insl
or
lahf
jecxz
cmpsb
jge
adc
push
xchg
pop
lods
cmpsb
mov
push
bound
push
jl
jnp
cld
cmp
in
or
punpckhwd
rolb
ficoms
ror
outsb
cmpsb
aas
ret
cld
es
inc
pop
cmp
lea
and
jno
stc
adc
lea
cmp
or
repz
test
cli
rcl
cmc
mov
jecxz
mov
shr
negb
inc
jmp
inc
dec
add
ds
mov
sahf
push
leave
in
sbbl
pop
xchg
loopne
mov
cmpb
sub
adc
cmp
enter
mov
jns
movsl
jno
push
add
pop
sbb
popf
xor
pop
adc
xorl
lds
mov
cmp
jmp
lret
out
xchg
pop
inc
addr16
lret
out
es
shlb
push
cltd
dec
movsb
adc
adc
mov
dec
aas
xchg
outsl
jbe
pop
push
jbe
iret
fcompl
mov
xchg
inc
sbb
fcom
rcrb
push
mov
sbb
addr16
adc
push
cmp
sub
push
jo
outsb
popa
and
repnz
mov
jo
sub
dec
les
leave
xchg
and
mov
das
jb
inc
or
mov
add
jns
ds
vandps
dec
fwait
cmpsl
push
mov
ss
fstpl
outsb
mov
hlt
imul
sarb
pop
popf
xchg
ds
inc
in
daa
ret
mov
test
notl
xchg
sarl
mov
popf
jp
add
inc
adc
pop
xchg
push
js
fcom
out
sbb
out
lcall
push
idivl
enter
int3
es
pop
push
mov
cs
xchg
jbe
and
cmp
stos
xchg
xorb
mov
inc
out
sbb
test
cmp
push
fmul
das
pushl
cmp
loop
cltd
xchg
jb
cmp
test
scas
fbstp
mov
out
jno
adcl
std
adc
rolb
imul
jmp
mov
insb
cmpsl
in
push
sbb
sti
idivb
loopne
ficoml
arpl
sbb
lahf
sbb
inc
and
mov
fnstcw
sahf
dec
movsl
lock
jp
mov
mov
das
test
mov
icebp
mov
jno
xorl
bound
sbb
out
imul
sub
jmp
icebp
fsubrl
or
hlt
decb
jno
loopne,pt
mov
aad
data16
rolb
cmp
mov
repz
pusha
dec
jno
dec
or
lret
xchg
jecxz
aam
pop
dec
fistl
pop
sub
popf
dec
imul
in
mov
test
xor
push
je
xor
adcl
cmp
jge
stos
in
xchg
inc
sub
stc
push
inc
sbb
addr16
push
add
pop
dec
mov
repz
and
xchg
insl
daa
sbbb
test
repnz
mov
cmpsl
rcr
fsubrs
add
xor
push
out
int3
scas
adc
cwtl
lock
stc
subb
mov
aad
ja
inc
notb
fnsave
mov
xchg
pop
nop
cmp
or
and
mov
ss
mov
les
arpl
jb
adc
std
inc
lret
rcll
mov
lahf
cltd
in
test
inc
cld
sti
or
ja
inc
mov
add
insl
cmpxchg
enter
packuswb
cmpsl
jb
cltd
dec
int
stos
push
dec
add
orb
dec
sub
pop
jl
or
stos
ja
mov
mov
dec
push
popa
sahf
dec
xchg
or
xor
aam
cmp
lret
imull
popf
leave
stos
fiadds
push
mov
lock
in
lret
lods
test
popa
test
push
sub
cmp
testl
pop
addr16
sbb
out
push
mov
ss
ficomps
xchg
daa
or
inc
flds
fldl
dec
cltd
mov
fidivl
call
dec
push
fstpl
inc
idivl
movsb
jmp
call
sbb
rorl
and
dec
mov
adcb
push
cld
mov
xchg
and
imul
pop
out
mov
push
in
fcmovnbe
inc
mov
stos
jne
jmp
or
aad
pop
sub
cmp
ja
repz
cmpsl
insl
ss
imul
movsb
sbb
sti
loop
add
sbb
or
sbb
ds
mov
push
cs
mov
arpl
cmpsb
mov
cld
cwtl
fsts
jl
test
xor
push
movsb
out
in
push
cmc
adc
and
adc
mov
push
enter
and
iret
xor
jle
cmpl
out
test
or
sahf
add
fwait
jp
lods
daa
std
loop
int3
rcll
shlb
xchg
push
test
das
out
mov
pop
cmpb
xor
mov
add
addb
dec
mov
dec
pop
icebp
cmp
jb
mov
xchg
jno
pop
sbb
out
imul
mov
jmp
cmp
lcall
fcoml
nop
dec
pusha
out
call
test
in
call
popf
je
sub
lahf
lds
lods
repz
fnsave
add
mov
mov
rcl
int3
jae
cmc
add
add
sub
push
mov
cmp
icebp
dec
inc
add
or
cmp
jmp
push
rol
jns
sbb
icebp
mov
sub
jbe
popf
mov
cmpsl
outsb
sub
cltd
add
cwtl
lahf
jle
fbstp
ja
arpl
push
scas
mov
test
cmpsb
inc
inc
insl
sarl
loope
aam
stos
mov
cltd
repnz
xlat
scas
shrl
pop
xchg
adc
cli
xor
adc
pop
rorl
mov
jae
popf
jb
mov
imul
cmp
inc
sub
sbb
jbe
jp
xchg
or
xchg
imull
inc
pushf
ljmp
push
ja
sbb
or
lock
insb
lds
inc
mov
sar
add
jno
lock
jp
pop
jmp
pop
stos
pop
adcb
or
lret
lret
out
pop
dec
add
push
in
scas
shld
lret
in
je
aad
mov
add
pop
mov
mov
aas
lret
or
sbb
das
sub
fidivrs
mov
mov
aad
mov
mov
mov
dec
xchg
and
aaa
dec
jp
push
sub
push
incb
push
jbe
je
dec
adc
pusha
sar
xchg
addr16
xchg
xchg
jbe
les
mov
sub
insb
pop
repnz
mov
xor
popf
sub
inc
das
xchg
jo
pusha
scas
movsl
xor
cld
stos
nop
jmp
rorl
add
ja
and
mov
dec
stos
lods
jmp
cmpsl
bound
mov
aas
fadds
leave
add
mov
pop
cmc
dec
add
std
xchg
jecxz
popf
jnp
jl
pusha
lret
test
in
ja
mov
mov
push
sub
out
sbb
not
mov
add
xlat
or
rolb
add
mov
dec
jmp
and
pop
sbb
aam
test
sbb
jg
cmp
aas
inc
cwtl
inc
adc
xorb
stc
pop
call
lret
sbb
mov
ficompl
adc
rcl
jnp
iret
jle
push
xorl
frndint
dec
mov
outsb
and
and
sbb
movsb
mov
sbb
cmp
cmp
sbb
pop
jno
jne
in
mov
std
mov
cltd
sbb
ficompl
stos
dec
popa
mov
into
pop
in
jno
out
lea
push
push
pop
inc
in
xor
inc
mov
shl
pop
push
sub
gs
jl
pop
push
jl,pn
imul
les
cs
leave
mov
adc
aas
data16
mov
add
out
xchg
nop
mov
dec
lds
add
pop
jmp
les
xchg
int
cmpsl
cld
pop
add
das
lahf
mov
mov
bound
dec
out
dec
add
pop
xchg
das
jne
aas
arpl
or
fisttpl
and
ja
jb
mov
popf
push
out
out
testl
fwait
mov
mov
adc
jne
jl
push
xchg
or
jno
mov
cmc
mov
jge
fcmovu
sbb
lods
xchg
jae
test
clc
pop
and
push
push
loop
jg
pop
jle
cmp
push
flds
add
addr16
adc
xchg
loopne
aas
pop
mov
or
jo
push
xchg
shll
mov
imul
ror
sti
jge
mov
sub
imul
mov
cmp
pop
arpl
mov
loope
jmp
stos
dec
adc
js
add
sub
adc
jecxz
jbe
ljmp
and
mov
push
ret
gs
pusha
dec
adc
aam
mov
rcrl
shll
cs
jb
pop
inc
rcrb
push
divl
mov
sbb
pop
push
scas
lods
adcl
push
jae
add
dec
into
or
mov
push
sbb
ficompl
stos
push
mov
push
mov
dec
sub
push
push
mov
cmp
pop
in
scas
pop
xlat
push
cmp
mov
lods
outsl
push
negl
pop
or
push
stc
adc
or
xchg
cmp
sub
ds
xchg
mov
fistl
sbb
jae
push
dec
adc
cmpb
push
jecxz
jbe
mov
push
movsb
cmpsb
movsl
fnstsw
outsl
sahf
mov
cwtl
push
out
pop
jmp
lods
mov
mov
mov
jle
lret
and
test
or
add
cmp
movsl
sub
addr16
ret
add
jns
aam
loopne
lcall
push
cmp
les
daa
push
in
lret
data16
inc
popf
mov
push
pop
out
jge
cmp
sbbb
sbb
jo
inc
jl
decb
sbb
lods
push
mov
adc
insb
dec
jnp
imul
fwait
xlat
mov
push
lea
icebp
push
mov
ror
in
mov
mov
push
cmp
cmp
push
push
and
and
xchg
adc
push
jns,pt
mov
pop
rcr
cwtl
dec
out
pop
jb
daa
es
or
pop
cmp
aaa
vpmacssdd
mov
stc
pop
add
xchg
ja
call
mov
pop
inc
cli
movsl
and
icebp
dec
sbb
pop
testb
add
or
inc
fmuls
adc
sub
jnp
mov
pop
add
test
out
and
jne
add
mov
lods
roll
sbb
je
add
icebp
ffree
cld
xor
imul
pop
movsb
mov
scas
cmp
mov
lcall
xchg
lods
and
mov
rorb
mov
and
and
jg
push
mov
cli
cmc
mov
popf
mov
pushf
jecxz
pop
repz
lret
inc
scas
inc
pop
dec
xchg
xor
and
push
cs
fldt
in
mov
add
and
push
pop
adc
sub
mov
add
adc
inc
jecxz
push
cmc
jmp
repz
rcll
xor
xchg
jle
sub
lods
shrl
xchg
and
adc
lret
fnstsw
add
jecxz
in
jo
aas
add
mov
out
and
inc
in
mov
xor
xchg
add
shrb
push
cmp
dec
in
pop
daa
mov
repz
mov
mov
ss
sbb
inc
mov
mov
loopne
cmc
add
adc
adc
jnp
and
lahf
aas
pusha
add
sub
clc
pop
ds
stos
jb
out
icebp
mov
sti
inc
dec
sub
rcll
xlat
sub
in
repnz
mov
xlat
clc
iret
xchg
add
push
int3
scas
pcmpgtd
cmp
or
adc
cltd
sub
jmp
jnp
imul
cmp
leave
and
mov
stos
sti
fcoms
add
js
or
add
push
cs
sbb
test
orb
adc
jnp
imul
push
mov
cmc
dec
mov
push
movb
xchg
push
jg
lret
mov
out
sbbb
mov
cltd
cmp
mov
add
dec
cmp
push
ljmp
stos
cmpsl
add
jbe
push
or
addl
lds
stos
mov
pop
cmp
mov
in
aad
pop
push
test
xchg
dec
jge
arpl
pop
dec
mov
and
clc
sbb
mov
enter
pop
xchg
cwtl
and
out
xor
mov
sbb
push
imul
adc
cwtl
push
jbe
loopne
cmp
ds
mov
iret
fistl
adc
sarb
jno
mov
mov
sub
or
inc
stos
and
jns
pop
push
lcall
in
mov
sti
push
dec
test
or
mov
mov
mov
fs
out
popl
iret
adc
push
xor
in
divl
fdivs
data16
stos
xchg
loopne
loop
mov
mov
addr16
out
outsl
add
ds
fwait
rol
mov
mov
mov
dec
pop
mov
aad
cmp
cmp
xchg
std
adc
dec
insb
mov
cmp
sub
push
pop
insl
adc
sub
and
imul
mov
xor
jno
aaa
adcb
adc
mov
cmp
pop
and
iret
lret
inc
outsb
imul
dec
aas
sbb
or
test
imul
fidivrs
out
jl
dec
mov
sbb
test
xchg
sahf
test
sub
test
push
cmp
outsl
mov
mov
mov
sbb
lret
loopne
cmc
gs
call
int
lcall
popa
or
mov
and
aad
xchg
add
and
std
sub
jp
jl
lock
and
mov
adc
mov
pop
lods
pop
adc
xchg
scas
push
mov
jne
iret
rcrb
mov
enter
pop
dec
xor
xchg
mov
mulps
jl
dec
push
popf
into
adc
mov
xchg
inc
cmp
repz
or
aad
jmp
rcrb
sbb
mov
push
in
cwtl
in
jo
leave
mov
jbe
mov
dec
stc
lods
mov
pushf
xchg
outsl
xlat
lcall
cmp
pusha
push
or
cli
adc
sbb
jno
mov
jmp
call
lock
les
jne
dec
xchg
adcb
insb
jnp
mov
sbb
les
push
adc
sub
xchg
dec
inc
leave
cs
leave
xchg
jg
cmp
jb
mov
test
dec
or
mov
add
cmp
push
ds
xchg
popf
hlt
push
mov
je
jp
cwtl
jecxz
fimuls
int3
scas
cwtl
adc
jnp
dec
scas
lea
repnz
xchg
jecxz
and
sub
inc
inc
lock
fsts
or
push
xchg
add
sbb
xlat
pop
pushf
add
adc
rcrl
daa
js
push
jecxz
adc
cmp
loopne
call
pop
mov
pop
out
cmpsb
aam
pop
cmpsl
inc
adc
js
fidivs
push
mulb
add
gs
aad
xchg
test
cmpsl
jbe
jmp
shrb
cmp
mov
daa
dec
jno
push
mov
enter
sbb
pop
xchg
adc
insl
or
aaa
push
ja
mov
sbb
int3
cwtl
subb
dec
out
arpl
mov
divb
das
sbb
xor
sub
out
fwait
pop
addr16
idivb
loope
in
inc
nopl
int
jl
dec
enter
push
mov
std
sbb
lret
dec
popf
jo
loopne
cmpsl
jecxz
xchg
test
lret
push
or
adc
and
fmul
ror
xchg
push
mov
aaa
and
sahf
pop
pop
dec
cwtl
pop
adc
mov
cmp
bound
jge
dec
push
push
dec
sub
jno
cwtl
sbb
mov
mov
dec
xor
jl
daa
popl
inc
sbb
movsb
loope
xor
add
outsl
movsl
and
push
ja
jo
in
adc
or
ret
je
mov
push
cmp
cli
insl
mov
fcompl
testb
into
mov
insl
push
ljmp
stos
loopne
lret
fldt
mov
ss
sub
sbb
fisubl
jne
mov
cli
cwtl
pop
or
mov
aad
aaa
or
clc
std
cmp
and
ja
shlb
inc
bound
xchg
lock
es
cmp
fs
ret
jecxz
jbe
mov
adc
idivl
and
and
mov
mov
xchg
incb
lods
sub
bound
or
add
add
dec
or
inc
pop
lock
xchg
lds
sti
pushw
mov
or
out
cld
aaa
les
or
int
addr16
mov
cwtl
das
mov
in
mov
outsl
adc
jl
xchg
stos
testb
subb
add
and
xlat
jg
mov
xchg
jl
mov
rorl
je
mov
add
inc
shrl
jnp
and
outsl
cmc
lods
jmp
arpl
sub
mov
lods
stc
push
inc
call
pop
ljmp
pop
sbbb
jne
aam
ss
sbb
add
fidivs
popl
pop
xor
fwait
cmpsl
mov
fisttps
mov
xor
inc
fcmove
or
push
call
push
and
test
cs
movsb
or
sbb
sub
mov
in
mov
pop
bound
stos
test
cmp
int
pop
mov
sub
ret
sbb
dec
xchg
push
or
xor
jo
lods
ljmp
shr
lods
push
xchg
fsubr
lcall
insl
jne
xchg
pusha
jno
insl
pop
or
dec
flds
xchg
adc
pop
inc
cmc
stos
dec
icebp
xor
rep
xor
jo
inc
popf
iret
sub
sahf
sbb
pop
in
addr16
pop
pop
mov
loope
jne
pushf
aam
cltd
rcl
mov
fbstp
mov
adcl
xchg
mov
ljmp
inc
das
fwait
mov
add
dec
lods
bnd
aam
int
arpl
inc
test
fsubl
inc
stos
pop
adc
jno
loopne
jl
xchg
pop
movsb
or
movsl
adc
xchg
stos
mov
out
scas
xor
in
lds
xor
test
test
lret
xchg
inc
dec
xlat
jnp
fmull
mov
cmp
inc
dec
outsb
xor
mov
or
shll
lods
movl
inc
jecxz
ret
stos
int
inc
scas
jnp
mov
mov
movsl
pushf
test
sahf
push
pop
push
sub
dec
fisubrs
pop
lds
lock
adc
mov
pop
add
ret
inc
push
xor
jp
leave
and
dec
mov
mov
cld
rorb
sbb
adc
add
add
xor
xchg
movsb
fsubrl
sbb
cmc
lret
jp
jl
xor
and
jp
adc
cwtl
les
fcomip
out
inc
and
repz
shll
fsubl
mov
in
pop
mov
faddp
scas
adc
in
mov
outsb
cld
pop
cmp
aam
fldl
and
xchg
scas
jmp
pop
dec
mov
xchg
pop
call
cmpb
pop
xor
fidivs
sbb
roll
popf
jle
xchg
cmc
rol
mov
imul
adc
test
or
sub
mov
sbb
sti
mov
pop
dec
fcomps
dec
sub
cmpsb
push
xchg
outsl
jae
xlat
subl
scas
jo
add
and
mov
sbb
pop
dec
sub
jbe
push
bound
movl
inc
scas
test
js
mov
insb
pop
enter
dec
xor
jne
adc
or
pop
mov
lahf
add
test
adc
cmc
sbb
sbb
ds
aas
dec
addl
xor
sbbl
lmsw
fwait
jo
test
popf
dec
lcall
add
or
cmp
pop
mov
lock
test
fwait
mov
movsb
mov
lret
lods
adc
pop
loopne
pop
mov
dec
out
imul
fldl2t
jl
sub
xor
movsl
iret
xchg
add
loope
lcall
stos
test
mov
lcall
adc
dec
inc
or
sbb
jp
adc
cmp
aas
jge
dec
mov
add
call
dec
mov
sub
fistpl
mov
dec
cwtl
cmpsl
fs
and
adcl
or
and
iret
dec
aas
dec
gs
ret
outsb
or
sub
sarl
in
test
cmp
fdivs
enter
enter
mov
mov
ret
inc
int3
mov
lahf
sub
sbb
arpl
call
inc
sub
ljmp
and
jge
mov
sub
out
mov
push
loop
sbb
insl
jo
xchg
les
inc
stc
or
fstpl
inc
xchg
sbb
lcall
pop
ss
clc
sbb
mov
jns
push
aam
pop
cld
arpl
push
sub
sti
out
pop
stc
lcall
dec
lods
inc
inc
adc
dec
sub
adc
loop
sub
sub
fnsave
stos
inc
scas
shrb
enter
adc
outsl
lea
mov
jne
sbb
mov
test
inc
and
xchg
mov
shll
xchg
mov
mov
jle
mov
jns
in
iret
aam
pusha
xchg
test
mov
outsb
mulb
push
push
sub
xlat
repnz
mov
cmc
and
push
iret
pop
adc
addr16
mov
pop
jge
dec
and
rorb
jecxz
jbe
mov
cmp
les
or
and
xchg
mov
in
xchg
push
sbb
out
insb
mov
add
lods
cmpsl
iret
jae
aam
in
and
fdivl
std
cltd
push
mov
mov
movsl
push
test
sub
mulb
jecxz
mov
hlt
xor
dec
or
mov
or
es
jecxz
mov
jo
lock
lcall
lods
lods
sbb
xor
out
inc
ds
aaa
fildl
insb
pushf
push
cmp
dec
xchg
or
jb
iret
xchg
out
jne
jb
mov
std
inc
fs
fisttpl
mov
leave
lahf
inc
pop
jb
jle
test
ljmp
stos
cmp
popa
lret
sub
popa
xchg
add
test
lea
call
js
xchg
and
mov
xchg
jnp
insl
xor
xchg
nop
testb
push
std
in
xchg
mov
push
icebp
js
mov
sbb
lcall
adc
push
cmp
jo
lret
xchg
mov
jl
dec
aas
aad
iret
imul
push
test
mov
outsb
fldl
jp
daa
lahf
push
sbb
sub
jge
or
in
push
test
pop
or
cmp
inc
movsl
ljmp
ss
dec
test
cmp
and
xor
arpl
lahf
fisttpl
push
jns
sbb
test
test
call
lcall
sbb
mov
mov
mov
aas
incb
push
addr16
enter
ret
dec
imul
andl
fs
gs
lods
ss
push
mov
fs
jbe
call
inc
xlat
fdivrl
sub
sbb
fmul
mov
mov
sub
or
dec
jnp
pusha
dec
jns
stc
or
and
aaa
enter
xor
fsubl
ret
xchg
mov
fcoms
inc
bound
scas
and
sbb
adc
sub
sbb
xchg
xchg
add
cmp
fs
or
mov
pop
push
jnp
fildl
push
mov
jecxz
scas
fnstcw
jmp
mov
and
mov
mov
stos
xchg
loope
jo
push
mov
mov
outsb
pop
fldenv
ficompl
mov
xor
mov
orb
xor
xor
daa
dec
dec
inc
into
insl
aam
insb
push
mov
ret
pop
push
lods
in
adc
iret
sub
jmp
pop
jg
outsb
push
mov
aaa
dec
cltd
add
mov
into
pusha
movsl
inc
pop
mov
imul
ds
cmp
mov
jmp
adc
not
into
daa
jae
mov
xlat
cmp
mov
test
xlat
faddp
push
popf
and
idiv
xlat
push
jecxz
stos
mov
jge
pusha
jnp
hlt
cmp
shll
pushf
mov
les
push
imul
lret
jmp
pop
rorb
adc
arpl
loope
adc
pop
fstps
cmp
pop
mov
ret
pop
out
pop
and
fbstp
fisttpll
or
sub
and
sub
fdivrs
sub
xor
ret
je
jp
hlt
lahf
cmp
fsubs
fldl
or
pushf
fcmovnbe
ds
shlb
imul
inc
mov
in
push
mov
into
addl
gs
cmp
dec
mov
imulb
mov
cmpsb
mov
fcoms
mov
insb
in
fisubrl
cmc
rorl
xchg
sub
or
out
gs
insl
and
rcrb
sub
push
cltd
cmc
add
xchg
jg
xchg
out
daa
sub
cmp
stc
adc
inc
mov
cmpsb
sar
xor
mov
xor
adc
push
or
mov
inc
or
imul
insl
add
push
xchg
mov
popf
das
jg
jne
jle
xor
mov
push
and
mov
stc
dec
imul
shr
mov
inc
ret
add
push
xlat
ret
ja
cmc
or
imul
dec
add
and
in
lahf
aaa
mov
mov
pop
inc
jb
jp
loop
jmp
or
push
inc
add
fistl
or
enter
cmp
mov
add
and
adc
mov
inc
inc
jmp
dec
in
clc
inc
mov
add
xchg
dec
mov
in
add
fwait
negl
aam
fldcw
movsl
or
cltd
sub
jae
or
addb
in
es
ret
jne
arpl
push
stc
mov
movsb
push
and
and
mov
add
jbe
or
ss
push
adc
adc
push
shll
repnz
call
and
scas
or
jecxz
in
or
aaa
xlat
aam
cmp
sub
and
ljmp
jg
jecxz
push
mov
stos
dec
shll
sub
pop
mov
mov
xor
jo
lea
push
std
mull
sbb
xor
sub
xor
jecxz
pushf
test
bound
lea
jmp
pop
add
dec
dec
push
or
div
outsl
jne
aad
in
push
shrb
mov
adc
adc
fxch
ret
push
gs
xchg
clc
mov
inc
mov
stos
inc
les
jno
je
aaa
sub
leave
hlt
push
ficoml
mulb
std
out
dec
popa
dec
insl
dec
repz
add
adc
mov
inc
shrl
mov
test
mov
insb
xchg
bound
scas
sti
xchg
mov
into
inc
jge
enter
call
int3
pop
stc
push
sub
cmp
jg
dec
out
cmp
fdivs
aam
out
jle
imul
or
leave
jne
mov
scas
out
das
pop
shrl
push
sub
mov
faddp
out
fnsave
mov
mov
mov
jo
gs
ret
inc
adc
test
mov
xchg
jo
cmp
add
cmc
in
and
pop
lods
cltd
and
mov
push
jbe
loope
xor
pushf
push
pop
stc
xor
popl
mov
movsb
jno
nop
inc
or
xor
add
adc
xor
xchg
loopne
push
es
xchg
fdivrl
cmc
repnz
xorb
cmp
mov
js
push
iret
xor
lret
popa
xchg
cmp
push
clc
inc
and
jle
mov
xor
notb
imul
imulb
push
iret
cmp
mov
dec
push
aam
rorl
or
into
enter
cmp
mov
mov
lcall
sub
test
sub
adc
add
cs
xchg
and
sub
sbb
leave
push
mov
movsb
lds
fdivrs
scas
or
push
lcall
jle
dec
loopne
mov
mov
popf
xchg
lret
push
push
aaa
cmp
inc
fwait
mov
dec
dec
repz
jnp
sbb
add
das
sbb
jecxz
cmp
arpl
fists
push
sub
or
leave
sub
xchg
mov
and
ss
push
fistps
mov
jecxz
push
divb
shr
mov
das
lods
mov
mov
leave
jecxz
rorl
mov
out
test
test
fldl
xchg
adc
stc
or
cmp
data16
lret
int3
xor
enter
jge
lods
in
mov
arpl
jae
test
filds
mov
loope
mov
jp
test
sbb
sbb
imul
pop
test
fdiv
fadds
jp
sahf
std
in
jae,pn
out
dec
xchg
pop
leave
mov
dec
or
lahf
or
aaa
or
mov
dec
dec
sbb
cmc
mov
outsb
dec
mov
andb
outsl
lret
and
lea
xchg
sub
xchg
xchg
mov
lods
mov
cmp
in
ljmp
jl
sub
xchg
movsl
sahf
or
push
jmp
out
jmp
das
cmp
into
jb
dec
pop
repz
cmpsl
shll
xorb
cmp
popa
leave
movsb
loopne
inc
and
iret
shll
push
ja
xchg
inc
scas
pop
movsl
es
cmp
xchg
outsb
popf
xchg
int
lock
pop
ja
mov
push
in
mov
dec
xchg
push
outsb
add
jmp
xor
cwtl
dec
jb
out
es
popa
mov
adc
out
ljmp
dec
jno
out
adc
js
fsubp
les
mov
out
outsl
and
xchg
test
fwait
pop
add
ficompl
ljmp
lahf
into
ss
sbb
lock
in
cwtl
cmpsb
imull
nop
jno
push
push
ss
icebp
sbbb
stos
leave
sub
adc
adc
sahf
scas
mull
loope
es
mov
pop
sbb
mov
iret
loope
test
mov
hlt
incb
or
jl
dec
jle
jbe
sub
lock
mov
test
mov
sbb
repnz
push
scas
adc
into
sub
and
add
test
imul
nop
dec
sub
inc
out
pop
outsb
cs
mov
in
or
nop
pop
xchg
mov
jae
jl
mov
mov
cmp
daa
mov
dec
mov
xchg
ret
cmpsl
gs
cltd
push
jle
fcmovnb
and
mov
in
leave
adc
hlt
popa
cmpl
call
movsl
loop
adc
push
decl
cs
pop
sbb
adc
cltd
mov
inc
push
gs
xor
or
dec
mov
and
jo
imul
adc
cmpl
aad
lret
jbe
mov
ret
push
jle
mov
les
mov
or
dec
xchg
mov
mov
cs
adc
mov
inc
mov
dec
or
mov
test
stc
mov
cmp
inc
and
ss
int
push
leave
lods
daa
pop
adc
ljmp
sbb
scas
iret
xchg
mov
in
xlat
dec
ret
xchg
mov
lods
cmpxchg
insl
es
sub
hlt
imull
dec
into
jo
gs
sarb
push
dec
mov
aaa
pop
dec
mov
cmp
and
push
insb
mov
push
sub
aaa
mov
fmul
shrb
inc
inc
divb
add
inc
pusha
repz
sbb
sub
lds
inc
orb
cld
sbb
lock
and
dec
leave
xor
loope
cmp
sbbb
cmp
out
sub
push
dec
insb
daa
je
add
fcmovnbe
and
sarb
push
in
nop
xchg
lock
pop
sbb
mov
cmp
cltd
or
movsb
push
add
pop
test
mov
xor
add
mov
mov
pop
insb
int3
adc
mov
stos
inc
adc
shrb
jge
push
flds
jle
adc
repz
and
sub
pop
sub
push
cmp
adc
pop
pushf
fcoml
fcoml
jp
movl
popf
xor
cmp
sub
les
mov
pop
shrb
pop
cmc
jp
pop
jg
popa
nop
cmp
add
or
imul
sahf
add
add
jno
aas
movsl
mov
inc
cmp
in
add
loop
repnz
sbb
arpl
jecxz
testb
or
push
sub
jae
cmp
cmp
or
and
pop
lods
mov
dec
and
push
and
scas
aaa
sbb
adcb
pop
adc
out
and
mov
or
int
or
or
int
rol
mov
in
mov
xchg
data16
lods
add
dec
nop
outsl
add
mov
popf
mov
js
and
jg
sbb
xor
lahf
and
in
jae
jmp
iret
loope
orl
stos
mov
iret
sarb
jle
push
and
sub
test
das
loope
cmp
adc
push
cmp
pop
cli
fldt
fildl
pop
das
jbe
sub
aas
cmpsb
mov
push
ljmp
ljmp
push
test
inc
fisubrl
mov
pop
cli
cltd
sub
dec
test
inc
push
sbb
jae
pop
mov
mov
push
movsl
dec
test
loopne
lods
aaa
cmp
mov
jbe
mov
mov
lock
cmp
dec
fwait
mov
sbb
jno
sbb
dec
jo
mov
repz
pop
adc
and
lcall
jmp
incb
out
push
xor
cmp
lret
or
pop
stos
mov
xor
stos
mov
addr16
movsl
pop
pusha
cmc
and
push
jae
mov
push
jl
jae
dec
int
scas
adc
loop
push
push
in
ss
or
push
mov
inc
aas
flds
shr
xchg
lret
iret
pop
jne
add
stc
xor
sub
mov
movsb
and
sub
xchg
test
scas
test
mov
ret
jnp
dec
das
pop
push
push
aas
gs
imul
fxch
testl
add
gs
fsts
jecxz
mov
push
pop
sbb
pop
sti
popf
xor
inc
pop
scas
je
pop
nop
sub
add
aas
bswap
bound
sahf
movsb
sbb
test
push
pop
in
iret
ss
popa
sarb
test
out
lock
adc
mov
rcrl
cwtl
mov
clc
mov
test
sub
test
adcl
mov
pop
mov
rcrl
sub
loope
sub
xor
xor
dec
dec
cmp
test
xchg
cmp
and
cmp
xchg
stc
xchg
imul
or
xor
jnp
fsubl
push
pop
cmp
sahf
mov
arpl
pop
repz
add
inc
pushl
adc
push
adcl
je
int
pop
lods
movsl
int3
pop
fnstsw
and
and
mov
mov
pop
sahf
enter
add
nop
pop
sub
cmpsl
out
movb
pop
cld
repz
mov
push
push
push
ljmp
int
leave
lods
sbb
stos
xchg
int3
add
push
fstpt
mov
cs
movsb
jle
mov
fs
mov
arpl
das
or
stos
iret
lea
add
mov
pop
ja
push
sub
scas
enter
jns
les
neg
inc
sar
xchg
jmp
add
movsl
push
sbb
subl
out
or
sbb
xchg
lahf
sbbb
arpl
push
ja
mov
lret
inc
nop
xchg
roll
movsl
fmuls
mull
sub
push
in
mov
jge
rcl
xor
jo
mov
jl
inc
xchg
mov
add
push
daa
inc
mov
call
loop
fildl
mov
or
jne
dec
jns
jo
push
pop
jns
sub
out
inc
pop
lret
push
syscall
mov
jb
mov
lea
push
sub
adc
ret
xor
push
call
cmp
shrl
mov
leave
xchg
add
mov
jbe
out
mov
fistpll
mov
mov
imul
out
fbld
mov
test
mov
fisttps
pop
ret
xor
out
mov
jg
or
lods
jle
in
sub
cmc
arpl
jae
leave
int3
mov
push
call
clc
out
icebp
pop
popa
adc
movsl
mov
nop
xor
and
addr16
cmp
jmp
sub
dec
ret
lods
or
fsubrl
unpcklps
lahf
sbb
sub
or
mov
adc
xor
loope,pn
mov
lret
cmp
sbb
std
addr16
leave
lods
loope
jl
inc
cmpsl
or
mov
cmc
jg
out
jns
push
arpl
pop
or
flds
testb
push
mov
lea
imul
mov
repnz
jno
fildll
dec
cltd
mov
mov
shll
imul
lret
test
insb
mov
xchg
movsb
clc
adc
les
ret
movsl
push
xlat
pusha
sahf
push
data16
inc
aad
sub
cmc
xchg
psrad
icebp
add
cmc
bound
xor
xchg
nop
sbb
jmp
arpl
push
lret
out
addr16
pop
mov
pop
test
repz
adc
btr
popf
cmpb
in
and
dec
and
test
mov
addr16
sub
lret
mov
xchg
arpl
jae
xchg
dec
enter
and
outsl
mov
sbb
icebp
cmp
xor
adc
and
repnz
lods
sub
mov
stos
mov
es
sbb
sub
add
sbb
aas
jecxz
add
mov
rorl
fisubs
jnp
cs
or
or
inc
push
jns
les
and
test
dec
dec
ret
jne
lahf
fcomps
push
int3
inc
add
cmp
popa
cmpsb
jp
sub
push
aaa
stos
fs
ja
mov
into
movsl
mov
test
pop
add
inc
icebp
outsb
xchg
xlat
adc
or
and
sbb
jnp
fsubp
jnp
xchg
inc
dec
std
xchg
cmpsl
jo
cmp
and
sub
mov
or
add
or
cmp
jno
xchg
push
cwtl
push
fldt
mov
pop
loope
xchg
std
scas
fimull
insl
outsl
adc
mov
mov
ror
cli
mov
leave
xchg
push
ljmp
cmp
push
lret
aam
add
jg
push
inc
add
adc
test
jp
pusha
sub
xlat
call
adc
inc
add
cltd
xchg
scas
cld
mov
sahf
push
stos
mov
aaa
arpl
cmp
lret
into
out
pop
data16
fnstenv
cvtps2pd
ret
adc
mov
pop
imul
adc
jp
roll
std
and
cli
push
and
movsl
stc
fnstsw
popf
pop
add
enter
cmp
mov
in
sbb
enter
stc
mov
xchg
orb
sub
xor
cmp
out
aam
add
dec
xor
xchg
out
pop
insb
das
scas
aam
negb
mov
loope
dec
lcall
movsl
inc
pop
xorl
fstpl
mov
and
mov
insl
cmp
jbe
cld
add
xor
int3
aad
lahf
pop
push
mov
movsb
jp
loope
leave
mov
jg
fcmovne
cs
jno
les
or
mov
in
jg
or
gs
idivl
mov
sub
push
hlt
jge
xchg
and
and
mov
loop
push
mov
je
imul
outsb
lds
add
mov
out
xchg
xchg
scas
inc
cmpb
clc
xchg
popf
mov
push
push
sbb
sbb
sub
add
push
pushf
or
out
or
xchg
sub
sbb
scas
sbb
mov
mov
sub
filds
xchg
pop
rorb
pop
fisubrl
movsb
jne
lret
pop
add
movsl
mov
xchg
fldcw
jp
push
mov
and
pop
push
xor
iret
add
xchg
xchg
push
mov
or
adc
pushf
jno
and
add
das
or
mov
push
stos
daa
sub
bound
lds
pop
std
sub
push
stos
ja
push
lds
dec
and
xor
xor
imul
push
add
movsl
inc
mov
cmpl
daa
stos
cmp
lea
xor
jbe
mov
push
stos
pop
pop
cmp
cld
call
push
dec
jo
sbb
or
cmpsb
mov
cmp
jmp
or
rcrb
add
filds
sbb
inc
sub
cmp
or
out
cli
jecxz
xchg
imul
jne
aam
dec
ljmp
jne
loop
push
fwait
mov
dec
jp
cli
ret
outsl
enter
mov
xor
sbb
rolb
jle
sarb
cld
std
xchg
loop
inc
add
scas
add
pushf
jns
leave
test
cli
enter
movsb
mov
and
rorb
gs
jnp
and
adc
mov
rol
test
int3
jbe
mov
std
jo
arpl
stc
dec
cli
test
in
hlt
xchg
xchg
faddp
loopne
jecxz
dec
mov
sahf
mov
sti
pushw
cmp
pop
lods
pop
inc
add
lock
jp
out
clc
aad
xchg
andl
pushw
test
cmpsb
jbe
sub
jae
add
cld
scas
sub
les
jmp
push
and
in
popa
lret
sbb
or
cmpsb
jmp
mov
jp
xchg
xlat
cmpsb
nop
push
imull
mov
pop
adc
sbb
je
fimuls
cmp
in
pushf
lcall
rcl
cwtl
dec
in
insl
in
mov
or
and
and
das
add
in
fcomp
push
test
in
lods
or
ljmp
dec
mov
out
repnz
sbb
xchg
js
sbb
sub
inc
or
push
cmpsl
je
and
faddl
cmovns
xchg
cmpsl
pusha
scas
aad
fs
or
pushf
adc
ja
outsb
in
clc
pop
dec
loopne
lock
xor
mov
daa
or
pop
cltd
and
pop
jne
cli
fistpl
addr16
sbb
jbe
stc
psllq
mov
mov
xchg
mov
jno
sub
mov
lods
and
int3
ja
popf
aam
mov
sub
insb
push
in
aas
sub
mov
dec
dec
mov
shlb
mov
enter
push
repz
je
ljmp
xchg
xchg
scas
push
add
out
movsl
daa
jnp
xchg
mov
cs
jge
js
pushf
cltd
adc
repnz
xchg
fldenv
movsl
mov
sub
dec
jb
cmp
dec
sbb
and
andl
out
frstor
adc
popf
addl
push
lret
pushf
ljmp
sub
mov
cld
adc
sbb
stos
cs
insl
addr16
xor
xor
sbb
adc
int3
repz
cmp
mov
shr
jnp
xor
push
sbb
sub
mov
jg
rolb
nop
and
inc
divb
ret
int3
mov
jmp
dec
loopne
fucom
and
gs
out
cmp
xor
clc
pushw
aad
mov
call
dec
pop
mov
push
imul
or
movsb
mov
das
cli
daa
fdivr
call
pusha
inc
decb
loop
in
sahf
xchg
repz
in
mov
mov
and
push
lock
mov
out
mov
jge
mov
lods
jns
clc
mov
ffreep
lea
scas
cltd
inc
cmp
fisttpll
test
ds
mov
addr16
cwtl
push
push
subb
mov
xor
xor
pop
dec
mov
mov
lds
push
addl
lea
negl
jge
int3
add
cltd
jle
insb
or
pushf
flds
test
or
xchg
adc
imul
repnz
xchg
jae
pop
arpl
or
aad
loope
pop
fsub
mov
stos
and
adc
push
xchg
jno
daa
lods
ror
inc
stos
and
ja
aaa
xor
test
loop
jbe
push
pop
orl
dec
mov
adc
sbb
sbb
mov
fcompl
xor
add
lcall
imul
in
fstpl
adc
or
call
cmp
mov
cmpl
popa
mov
pop
js
and
jl
cmp
pop
add
out
mov
adc
out
mov
imul
or
mov
ret
xlat
mov
cwtl
dec
dec
mov
sub
sahf
inc
xor
and
scas
mov
mov
leave
xlat
pop
inc
mov
iret
pop
inc
adc
stos
hlt
push
dec
adc
pop
and
fs
int
cmc
ljmp
sbbl
outsl
jmp
cld
imul
ljmp
pop
jp
or
and
pop
or
lock
cmpsb
inc
push
sbb
ror
inc
shr
adc
popf
xchg
mov
xor
mov
js
stc
pusha
lock
daa
stos
sbb
jecxz
into
daa
dec
add
pop
dec
inc
mov
loop
in
xor
subb
xchg
ds
mov
into
cli
aam
fimull
mov
and
xorb
scas
xor
fwait
and
push
cmp
pusha
vpsubsb
das
inc
dec
ficomps
and
imul
mov
cmp
pop
mov
jle
js
mov
and
add
jle
add
dec
sbb
xchg
add
jnp
adc
push
sub
rorb
xlat
das
pop
imul
inc
jge
mov
cmp
cwtl
push
pop
mov
mov
addr16
xchg
in
add
cmp
adc
jp
sbb
pop
stc
xor
mov
xor
andl
fwait
cmp
sahf
in
hlt
cmp
sbb
pusha
fmuls
je
push
jecxz
push
jl
insl
popa
mov
xor
push
jns
ficoms
cs
jae
xlat
insl
dec
push
mov
es
push
add
movl
xor
add
xchg
cmp
jl
test
push
or
mov
fstps
and
loopne
sti
fstpl
imul
mov
add
pop
inc
stos
xchg
fadds
mov
mov
push
fldenv
fdivl
xor
scas
data16
and
daa
int3
pushf
pcmpgtw
div
test
xor
pop
faddp
and
add
push
iret
adc
inc
mov
incb
sbb
mov
xor
in
fistl
xor
xor
fs
cltd
pop
mov
ja
sbb
inc
mov
mov
push
xchg
add
fbstp
sub
mov
sbb
jnp
mov
pop
in
jb
xchg
mov
loop
pushf
inc
jae
mov
mov
ja
dec
sbb
int
jo
jne
rol
pop
lret
jno
std
lahf
sbb
jne
in
aaa
dec
mov
mov
dec
js
out
in
loope
stos
lahf
pop
or
cli
push
ss
xor
xchg
lods
pop
repz
hlt
inc
mov
insl
cmp
push
cmc
add
jbe
push
pop
jns
rorl
inc
arpl
push
fisubrs
cmp
inc
mov
and
stos
jmp
sub
lock
xor
jae
scas
xlat
ror
add
mov
dec
jb
and
inc
imul
les
cmp
xchg
dec
sti
pop
add
icebp
cs
fnstcw
push
jl
icebp
scas
jae
pop
push
or
ret
aas
loope
into
xor
xchg
gs
cmp
repnz
cmpl
cli
jnp
std
push
push
adc
pop
mov
mov
push
repz
ficoml
pusha
and
sbb
rcrl
scas
mov
cmpb
stos
inc
test
pop
cmpsl
pop
xlat
mov
xchg
xchg
jne
insl
js
nop
int
or
mov
enter
and
js
sub
xchg
fwait
dec
test
movsb
imul
push
xchg
repz
popf
rcrl
jne
xchg
fstl
push
jbe
mov
sbb
dec
dec
divl
xchg
or
cmc
cs
inc
decl
sub
pop
mov
xor
insb
or
jg
push
push
out
sbb
movsb
jns
in
xor
and
jnp
push
dec
lods
dec
nop
mov
or
arpl
cld
or
lcall
loop
cmp
lahf
jp
outsb
mov
notl
jne
xor
out
and
or
out
jb
jnp
sbb
fisttpl
mov
xchg
jbe
ds
repnz
xor
jnp
lahf
fbstp
cmp
in
inc
dec
or
push
jb
js
jns
aad
sub
jmp
push
sahf
clc
inc
enter
loope
dec
loop
inc
sbb
jp
mov
pop
shrb
aad
insb
adc
lret
mov
test
mov
sbb
adc
push
pop
scas
pop
and
mov
push
adc
hlt
mov
cld
out
lds
sub
sub
push
mov
lahf
xlat
addr16
xchg
movsl
pop
inc
cmp
jno
sbb
lods
inc
xor
mov
or
xchg
lcall
test
inc
sub
adc
inc
addb
push
add
test
jge
lcall
scas
enter
enter
mov
jp
mov
ret
ljmp
mov
jns
inc
xchg
lods
cmp
cmp
mov
in
sbbl
adc
cs
in
jae
or
adc
cwtl
mov
sub
sbb
or
mov
mov
cmc
or
ja
push
test
stos
mov
adc
cld
ja
in
or
pop
add
jne
xchg
sub
aad
sbb
jg
mov
xchg
jg
data16
leave
sbb
lcall
jl
push
jle
pop
fisubs
mov
clc
pop
jg
addl
sbb
hlt
rcr
push
add
xchg
pop
loope
mov
push
mov
adc
inc
mov
pop
mov
inc
mov
cmpsb
push
xchg
xchg
sbb
std
and
iret
outsb
mov
subb
jle
out
dec
lock
je
inc
and
popf
jecxz
xor
call
and
pop
in
in
xchg
cmp
ds
xor
inc
xchg
push
mov
cmp
inc
insl
enter
or
and
xchg
push
mov
les
stc
es
and
adc
jge
and
xchg
sti
or
clc
aam
gs
aas
pushf
mov
movsl
cmp
add
cmp
adc
mov
sti
push
pop
push
pop
arpl
hlt
mov
mov
repz
mov
out
and
sub
jmp
sub
cli
movsl
inc
and
mull
add
xchg
inc
jecxz
shrl
jg
popf
mov
xor
rclb
test
or
cmc
dec
clc
fnstenv
inc
pop
jmp
out
sahf
mov
and
loopne
sub
sub
movsl
hlt
movsb
insb
js
adc
inc
dec
mov
xor
andnps
push
pop
bound
pusha
mov
dec
xchg
mov
neg
fwait
and
ret
aas
xchg
testb
std
xchg
test
lahf
pop
add
xor
aas
cs
pop
sti
sbb
sahf
mov
mov
mov
pop
rcrl
mov
push
cmpsb
mov
adc
pop
roll
jecxz
mov
cmp
decb
jb
gs
mov
shl
mov
iret
out
push
rorl
adc
pop
pop
sbb
cmpsl
add
in
mov
iret
fldt
paddsb
add
jle
mov
std
or
and
lahf
loopne
andl
inc
xchg
mov
sbb
cmp
and
imul
cltd
or
jge
test
mov
cmp
outsb
int
adc
mov
icebp
jge
mov
roll
xchg
fstpl
js
mov
add
mov
stos
bound
jne
push
and
cs
add
insl
pop
mov
pop
test
dec
lcall
or
setl
jno
idiv
mov
sub
pop
bound
xchg
mov
jbe
mov
sub
ds
mov
dec
bswap
lock
gs
mov
push
fistl
adc
jmp
cwtl
lret
lock
rcrb
pop
jbe
lahf
in
scas
loopne
jle
or
pop
xchg
sbb
xor
lret
mov
pop
xlat
jne
outsb
pop
ja
ficompl
and
jb
mov
sub
ret
or
lods
xchg
mov
xlat
pop
icebp
out
dec
cmpsl
adc
xchg
es
pop
xor
xchg
and
pop
sub
xchg
xor
xchg
pop
xchg
add
inc
into
cmp
pop
dec
js
aas
and
mov
ja
insb
dec
ljmp
mov
daa
in
xor
sahf
cmpl
pop
ljmp
or
std
aaa
cmp
xor
jb
mov
in
jno
add
inc
jmp
nop
jge
inc
call
jne
mov
mov
push
jp
pop
shrl
js
fnstcw
outsl
mov
lods
mov
data16
mov
fimull
jae
mov
pushf
mov
push
xor
xchg
roll
or
out
mov
sub
push
pop
mov
imul
cmp
xor
xchg
dec
out
pop
repnz
mov
jp
je
and
jns
popf
add
cmp
scas
hlt
lea
lods
xchg
jns
pop
fdivs
and
jg
cmp
out
or
pop
sbb
push
jecxz
lock
adc
cmp
add
jg
inc
test
mov
add
inc
mov
rcrb
mull
test
aaa
sbb
pusha
clc
push
cmc
sub
test
sub
gs
pop
mov
add
loopne
pop
dec
cmp
ret
adc
stc
test
sbb
pop
sbb
out
push
adcb
mov
pop
cmp
xchg
mov
outsl
hlt
and
movsb
dec
ret
jb
imul
orb
mov
push
mov
jb
fstps
jecxz
mov
test
sbb
dec
in
sub
or
aad
pop
mov
in
sub
in
mov
or
rcl
cld
movsb
dec
xorl
add
adcb
or
mov
sub
dec
and
cmp
out
lods
mov
fdiv
and
adc
xadd
or
or
shl
xchg
pop
les
jae
leave
sub
pop
mov
mov
sbb
rcll
sti
xchg
jae
push
addr16
jbe
mov
xchg
enter
aas
inc
pusha
fists
mov
repnz
sahf
lods
mov
scas
inc
popa
insb
jno
in
mov
sbb
loop
andl
outsl
pshufw
jp
ds
negb
rclb
add
imul
jnp
pop
or
shl
sbb
xcrypt-ecb
cmpsl
lret
addb
xor
xchg
xchg
jb
gs
jge
push
js
out
fadd
divl
jae
sbb
mov
aam
inc
test
subl
xlat
or
les
cwtl
dec
enter
pop
hlt
jle
xchg
dec
dec
mov
sbb
cmpsl
and
std
out
int3
scas
pusha
fs
pop
jg
rorl
push
mov
fcomps
pop
dec
or
inc
stc
movsb
sbb
and
mov
daa
add
imul
das
push
mov
sti
dec
mov
xchg
jbe
cmp
pop
mov
insb
int3
jne
jo
gs
jbe
sarb
lcall
lret
arpl
dec
mov
out
cli
pop
pop
xchg
adc
aas
add
sahf
mov
repz
jbe
pop
ret
lods
mov
andb
ds
test
dec
in
jl
inc
cld
outsl
imul
bound
aaa
push
hlt
mov
insl
insb
shr
movsb
xchg
inc
ss
hlt
jp
daa
jno
loop
scas
sub
xor
test
xorb
fcompl
sub
ret
pop
imull
jmp
popa
pop
mov
cmp
subl
mov
fwait
arpl
and
mov
mov
addr16
incb
jg
mov
or
bound
xchg
cwtl
mov
stos
enter
inc
cmp
inc
and
movsl
subb
bound
pop
and
scas
xlat
rorl
adc
inc
add
adc
push
push
cmpsb
push
mov
shl
mov
icebp
cmpsl
pop
test
dec
mov
pop
pop
jae
push
inc
add
mov
push
xor
and
stos
cmc
dec
cmp
ret
cmpsl
negb
pop
mov
adc
pop
inc
gs
mov
outsl
pusha
adcb
movsb
fcoml
add
fsubrl
orl
aad
adc
loop
mov
ja
jl
push
movb
lret
mov
jns
xchg
cmp
add
pop
int
movsl
je
sbb
mov
or
pop
xchg
daa
sub
push
lcall
push
fisttpll
mov
or
negb
repnz
pop
or
sub
sar
test
aaa
and
inc
mov
xor
sub
sbb
loop
push
push
faddl
call
fs
bound
divb
sbb
mov
mov
jnp
repnz
and
pop
push
xor
mulb
lret
mov
adc
loop
adc
inc
sub
lock
mov
daa
pop
sti
arpl
aam
dec
xchg
dec
cmpsl
fistpl
dec
data16
inc
add
push
fucomp
xchg
mov
or
lods
js
enter
jo
ja
loopne
adc
push
xor
orl
mov
sbb
imul
and
inc
add
mov
or
test
xchg
sbb
dec
xlat
mov
ss
xchg
jecxz
incb
mov
leave
dec
cmpsb
and
mov
xchg
or
fs
pushf
sub
mov
xchg
dec
lret
jl
testb
or
push
mov
sub
test
adc
inc
ss
inc
xorb
sbb
in
inc
sub
mov
and
or
inc
dec
cli
adcl
jle
rorb
mov
addb
push
mov
sub
fnstcw
and
sbb
pop
mov
cli
xchg
in
cltd
mov
outsl
aas
lds
sub
inc
addr16
insb
lea
js
loope
repz
mov
dec
push
sbb
cmp
insb
inc
pop
xorb
insl
or
les
inc
insl
sub
adc
and
sub
cmp
push
dec
aas
jge
xchg
dec
cmp
fistl
and
std
add
cmc
jbe
loop
mov
and
cmp
test
sub
pop
mov
aas
jp
push
push
out
push
sub
rcr
add
shlb
iret
out
xchg
je
cmpsl
and
jno
push
and
loope
lret
mov
xchg
cwtl
mov
jge
inc
in
pop
lock
inc
div
in
jo
cmp
and
sub
scas
bound
loope
sub
jnp
outsl
lret
mov
cmp
shlb
mov
jae
imul
repnz
pop
js
rcr
lods
adc
loop
lock
jl
mov
add
lods
test
and
hlt
fadds
enter
ret
jbe
sub
iret
repnz
mov
jb
scas
xchg
lret
adc
in
fstpt
rorb
pop
mov
mov
out
in
mov
ljmp
and
out
hlt
arpl
ds
lea
lods
mov
pusha
pop
dec
dec
push
mov
dec
loopne
sub
into
jmp
ljmp
mov
loop
jle
sarl
pusha
adc
cmp
mov
fimuls
mov
std
inc
cmp
test
ror
mov
cmp
and
mov
push
in
outsb
pop
arpl
stos
adc
sarl
leave
aad
add
cmpsl
jge
lret
or
insl
sahf
mov
xchg
icebp
popf
repz
aaa
out
cwtl
pusha
imul
sar
mov
and
fisttps
cmp
xchg
sbb
mov
dec
push
sbb
daa
push
mov
fbstp
sbb
pop
jns
movsb
hlt
leave
or
fs
stc
sti
cltd
inc
or
jae
and
sub
inc
lgs
xor
cmpb
stos
hlt
int3
push
lods
ret
adcb
mov
test
shl
dec
mov
pop
xchg
push
add
repnz
and
adc
adc
out
xlat
jmp
push
scas
pop
test
push
push
fldl
push
sbb
movsb
mov
cmp
mov
outsl
cmp
int3
or
int
ss
loope
adc
int3
push
mov
cli
sahf
jle
sbb
aaa
js
add
out
and
rorl
mov
rclb
jg
pop
int3
lea
popf
ret
fs
ret
cmp
xchg
call
mov
add
lahf
push
mov
jae
lods
les
adc
aam
push
xchg
push
and
iret
fwait
or
movsb
vprotw
mov
popf
faddp
cmc
jb
ljmp
int
push
mov
xchg
mulb
add
aas
sti
mov
mov
and
lock
dec
xor
in
sbb
add
inc
mov
inc
ljmp
repnz
mov
cvtpi2ps
sbb
push
fadds
icebp
ficomps
into
dec
shll
nop
and
popa
mov
sbb
sbb
inc
arpl
jp
jae
or
lret
mov
shll
mov
xchg
xchg
push
sbb
pop
in
xchg
repz
into
dec
cmp
lods
xchg
ret
mov
cmp
lcall
dec
adc
movsl
and
movsb
sub
arpl
inc
fsubp
out
pop
popa
add
adc
push
xor
xlat
push
fisubl
mov
dec
pop
daa
xchg
mov
lods
pop
rolb
repz
imul
mov
in
or
in
mov
cwtl
add
pusha
jmp
adc
inc
fs
sbb
push
fsubrp
jae
rol
aaa
jecxz
out
scas
scas
scas
cmp
xor
xchg
pop
mov
in
or
sbb
sbbb
pop
roll
in
gs
pop
movsl
adc
inc
sub
repnz
fistpll
pushf
adc
sbb
jb
inc
out
fimuls
cmp
xchg
or
jnp
inc
lret
sbb
arpl
dec
cld
jg
pop
pop
jle
ljmp
cmpsl
test
insl
xor
fdiv
je
cmp
inc
inc
pop
insl
mov
mov
lock
add
cmc
push
jns
jge
cli
rol
pop
cmp
cs
lea
adc
adc
stos
daa
jne
dec
aad
pop
out
insl
mov
jmp
jecxz
jnp
lods
sub
int
push
cmc
std
xor
jns
push
imul
enter
add
les
cmp
fimuls
aaa
loop
push
sub
jmp
xchg
aaa
dec
push
jle
adc
fiaddl
dec
fsubl
enter
sbb
mov
dec
mov
push
mov
jp
call
scas
push
stos
cs
jo
xor
cmpsb
cmpsl
shrb
push
roll
fdivl
push
lret
lret
add
scas
inc
int3
hlt
add
pop
jg
sub
pop
mov
int3
mov
add
jmp
fildl
insl
inc
cmp
sbb
push
mov
in
les
ret
push
xlat
xor
adc
das
ret
push
outsl
jmp
std
stos
push
mov
pop
push
icebp
sub
jp
mov
adc
mov
add
jns
adc
mov
jge
int3
sbb
cmp
aam
cld
es
sub
mov
inc
fnstcw
ret
xchg
leave
enter
inc
adc
fsubs
jl
and
xchg
push
test
test
sub
movsl
dec
mov
in
cwtl
sub
sti
inc
xor
addr16
jge
and
pop
pusha
add
ds
fldpi
mov
cmp
xchg
pop
or
push
aaa
cmp
fnstcw
xchg
pop
mov
or
loop
push
fisttps
sbb
mov
sbb
cmpsb
test
movsb
pop
dec
lods
push
ds
and
and
or
pop
psubsb
ret
sub
lods
lods
lds
into
mov
adc
outsb
mov
fsub
daa
mov
ret
mov
fnstsw
mov
xchg
fistpl
mov
xor
hlt
sahf
adc
jle
outsl
outsl
leave
popa
xchg
stos
dec
or
mov
js
out
out
fwait
lahf
inc
fistpl
xchg
pop
repz
inc
out
sbb
cli
sub
je
les
andb
lods
mov
aad
cmpsb
jne
lahf
subb
nop
cmp
xlat
icebp
push
mov
fs
int3
neg
sub
imul
push
jno
cs
jno
outsb
fcmovnb
andl
jge
pop
inc
inc
pop
adc
arpl
movsb
cmpsl
ficoms
idivl
sbb
aas
push
mov
fstps
iret
jecxz
dec
pop
icebp
xor
aam
stc
insb
std
ficoms
in
jno
je
lods
adc
cmp
ror
pop
inc
int
mov
repz
mov
inc
mov
das
mov
fildll
cmp
mov
xchg
jecxz
or
mov
push
cmp
pop
das
xlat
nop
and
fcomps
xor
imul
add
icebp
and
fdivl
popa
cld
jge
stos
inc
ret
jns
insb
fnstenv
test
push
addr16
imul
movb
lcall
jle
int3
fsubs
fists
sub
sbb
sub
es
pop
mov
push
dec
xor
aam
fsubrl
into
ljmp
in
in
mov
sbb
push
xor
sub
orl
nop
inc
pop
ljmp
cli
mov
lods
movb
jmp
jge
mov
movsl
ja
jae
ret
das
xchg
leave
incl
or
mov
inc
pop
addr16
or
data16
cmp
ss
fldt
aad
and
jecxz
mov
mov
fcoms
or
pop
jne
cmpsb
xchg
add
outsl
ljmp
push
insb
shll
push
es
arpl
cmp
outsb
inc
inc
sub
fsubp
pop
pushf
leave
adc
out
jg
lea
sub
and
jl
xlat
jnp
clc
stos
scas
adc
push
and
in
orb
xor
mov
dec
fucomip
pop
add
insl
in
xchg
mulb
mov
faddp
push
push
into
push
mov
fldl
xchg
test
es
out
xchg
stos
adc
clc
rcrb
pop
mov
mov
push
frstor
pop
push
push
loopne
repz
push
add
xchg
std
push
sarb
popf
fcmovnu
insb
out
push
out
in
icebp
adc
aaa
and
jmp
dec
je
or
mov
inc
xor
or
fstpl
shrb
inc
inc
sub
scas
leave
push
lret
push
loope
cmp
test
dec
rorb
out
imul
ljmp
cmp
add
sbb
pop
adc
mov
hlt
mov
loop
inc
mov
dec
push
jne
dec
pop
and
aas
pushf
rcll
mov
jbe
dec
shrl
aas
shll
das
sbb
jne
sti
sti
adc
adc
cwtl
fdivl
push
bound
jecxz
xorb
rcrb
in
add
std
mov
rcrb
mov
nop
into
and
aad
loope
bound
sbb
add
popa
imul
sbb
jle
aas
jnp
addb
in
push
das
fldl
rol
mov
sub
cmp
mov
pop
int
mov
das
fwait
sub
pop
inc
out
loope
aam
nop
cli
jae
sbb
xor
pop
xlat
int
push
sti
cmpsl
push
add
inc
sub
jmp
or
call
dec
cmp
cltd
mov
pop
xor
imul
jbe
loope
aas
ljmp
mov
sbb
mov
inc
dec
push
dec
fstpt
lock
out
repz
lret
mov
jmp
cmp
shrl
js
mov
lcall
pop
sub
stos
je
cli
repz
sbb
sbb
cmc
xchg
mov
in
adc
xor
loopne
adc
push
lret
jmp
push
fs
fnsave
call
adc
dec
lret
or
jp
pusha
stc
lods
add
sarl
xor
and
or
mov
mov
inc
rolb
in
mov
jb
lahf
xor
fmull
pop
mov
daa
and
or
js
or
dec
mov
sahf
pushf
mov
iret
sbb
jno
outsl
lret
hlt
pop
pop
shll
scas
js
out
jl
add
lcall
sti
push
dec
sti
sbb
dec
lret
testw
fs
xchg
aaa
push
rol
mov
sub
aas
mov
lods
cmp
clc
lods
sahf
pop
cli
fidivrl
fwait
mov
mov
mov
out
adc
and
loope
add
push
aaa
insb
sbb
dec
sub
test
jle
pushf
push
mov
lea
or
mov
sbb
inc
xchg
out
test
mov
je
stos
xor
data16
stos
popf
shr
add
inc
sub
or
xor
or
cmpl
fistpll
into
cwtl
lret
cmp
rcrb
lcall
dec
scas
out
lret
or
jnp
jge
pop
pop
push
sbb
fisubs
sub
pop
push
ds
aam
lds
cmc
mov
jae,pn
out
or
rcrl
ljmp
jo
adc
je
into
mov
mov
or
test
ljmp
fadd
pop
icebp
inc
sub
adc
int3
jmp
or
mov
bound
out
sbb
fwait
bound
pop
xchg
test
inc
ja
pop
and
lods
aam
orb
daa
int3
daa
push
pop
movsl
lods
jbe
cmp
cmp
mov
std
xor
subl
outsb
pop
mov
ror
cmpsl
pop
daa
inc
or
inc
dec
or
pshufw
fcom
mov
cld
call
gs
adc
nop
cmpsb
sub
push
nop
aam
sbb
cmp
push
pop
jo
or
fucomi
scas
in
sbb
jb
xchg
xorb
lcall
and
rolb
lahf
insb
mov
call
jb
in
add
and
add
jecxz
insl
shlb
fisubl
mov
in
xor
pop
cmp
mov
xchg
cltd
pop
sbb
mov
adc
jle
jp
or
mov
ss
in
adc
iret
les
mov
outsb
jne
mov
flds
pop
cmc
cmp
xor
jecxz
or
arpl
pop
mov
xor
xlat
and
xchg
xlat
addl
mov
rorb
sub
push
push
xchg
clc
out
ljmp
mov
test
push
pop
mov
daa
pmulhuw
cld
fsubp
icebp
pusha
adc
jmp
mov
sbbb
add
and
jp
leave
lcall
test
leave
xor
jg
mov
fnstenv
dec
mov
mov
push
and
inc
fcompl
xchg
icebp
daa
xor
lret
dec
cmpsl
dec
add
mov
pop
mov
jg
jg
scas
clc
add
loope
imul
sbbl
test
and
fildll
sub
outsb
xor
into
mov
les
xor
and
pop
out
xlat
hlt
aaa
das
lods
sbb
and
and
adc
cmp
add
mov
dec
loopne
aad
mov
orl
push
test
rcrb
xorb
mov
jge
dec
mov
test
stos
inc
pop
filds
jp
jnp
out
and
orb
push
addr16
pop
out
dec
call
test
std
dec
ja
rcll
push
dec
mov
push
sub
and
push
push
in
and
cmp
movl
ljmp
sbb
pop
push
dec
fwait
mov
out
call
outsb
loopne
repz
inc
and
addb
lock
lahf
mov
adc
jg
mov
xchg
mov
add
xchg
lahf
sbb
pop
pop
icebp
dec
call
repnz
mov
sub
jb
add
test
pushf
pop
cmp
push
gs
pusha
push
lahf
or
adc
stc
fidivs
lea
adc
aam
xchg
iret
xor
sbb
xor
and
mov
or
scas
dec
pop
das
loop
sub
clc
ds
data16
cmp
sahf
mov
mov
mov
mov
jbe
scas
hlt
shll
clc
push
dec
jl
les
jp
pop
xchg
in
enter
sbb
lods
popf
mov
push
adc
lcall
fs
pop
stos
insb
mov
push
mov
inc
and
adc
das
js
test
in
lret
jns
cmc
ljmp
dec
adc
push
pop
push
pop
xchg
hlt
mov
or
sti
fcmove
into
push
cmp
stc
std
cmpsl
sbb
mov
mov
dec
iret
out
xchg
imul
pop
jne
fs
cmp
add
mov
jl
lahf
xchg
lods
xor
fistpll
cmp
sbb
dec
in
mov
xor
pop
jo
sbb
arpl
pop
cmp
sub
stos
mov
add
test
cmp
mov
dec
ljmp
lods
aad
xchg
jl
daa
push
cmp
and
xchg
and
mov
and
js
sub
push
jbe
imul
xchg
in
enter
movsb
ja
push
out
adc
loopne
test
push
fmul
fdivrs
lcall
cmpsl
in
sahf
test
push
or
faddl
xor
adc
cmp
mov
sbb
or
stos
dec
lahf
out
cltd
and
js
pop
xchg
push
call
dec
stc
jns
orb
jnp
mov
daa
push
fs
add
leave
push
iret
xor
lret
sub
repz
adc
and
int3
cld
and
movsb
cmp
test
sbb
imul
int3
add
fstps
mov
popf
test
xchg
cmpsl
dec
add
lods
mov
aad
cwtl
jns
jne
les
lret
insl
icebp
dec
cmpb
xchg
add
pop
inc
add
roll
mov
in
or
mov
rcll
ljmp
mov
iret
mov
mov
lods
mov
mov
inc
jo
into
mov
repnz
dec
adc
and
clc
lret
movsb
lock
cmpl
mov
sbb
mov
push
fdivl
push
xor
fstpt
loopne
add
xchg
out
pop
or
pop
pop
mov
sti
xchg
mov
and
sub
inc
jge
sbb
scas
jne
ds
imul
lret
paddusb
cmpb
jl
js
mov
inc
ja
or
push
cmpl
mov
jnp
iret
lock
xor
fidivrs
cli
sub
push
jb
ret
sub
pop
out
mov
pop
mov
daa
inc
push
rcrb
stos
fmul
mov
loopne
cs
and
divb
fnstcw
pop
sbb
push
adc
rol
push
jge
mov
mov
push
add
into
aam
pop
ret
ja
mov
dec
icebp
pop
pop
dec
lret
dec
mov
and
and
and
mov
cmp
adc
jle
add
push
dec
or
stos
mov
arpl
gs
rcr
dec
fcmovnb
mov
sub
mov
push
and
mov
add
xchg
lret
loop
aad
jno
scas
sub
addl
mov
gs
dec
pop
in
pop
aaa
pop
out
rclb
out
sbb
jg
add
movsb
mov
pop
push
xor
mov
icebp
es
mov
imul
ljmp
pusha
cmp
ds
mov
pop
popf
cwtl
fadds
adc
aas
daa
repz
std
dec
lcall
push
sub
adc
mov
xchg
mov
leave
cmpsl
cli
les
dec
push
call
adcl
dec
mov
cmpsb
jno
pop
std
mov
cmpsb
or
test
mov
mov
daa
pop
scas
repz
cmp
dec
and
repz
adc
or
pop
dec
or
xlat
xor
jl
xor
add
jecxz
ljmp
pop
or
lds
stc
cmpb
cli
sbb
inc
mov
insl
clc
mov
jmp
shlb
jno
imul
lcall
aam
cmpl
add
dec
inc
rol
pop
or
xor
sbb
out
insl
out
mov
movsl
movsb
mov
fs
ret
mov
or
int3
adc
inc
cmp
jnp
jno
push
jg
pop
int
xor
xchg
in
in
sarb
cs
push
cmp
stos
fsubrp
icebp
sbb
popf
in
aam
mov
or
add
or
fidivs
int
mov
scas
mov
mov
xchg
imul
out
xor
push
cmp
fldcw
mov
cs
add
outsl
stos
mov
xor
inc
or
aad
imul
xchg
push
jne
push
icebp
out
inc
mov
fs
in
xchg
lahf
mov
std
push
mov
xchg
fcmovb
dec
xor
aaa
fistpl
pusha
les
xor
push
fsubrs
jg
jb
insl
aam
push
jl
jmp
sbb
rolb
push
push
mov
stos
inc
insb
fidivrl
ror
push
fcom
pop
clc
dec
mov
sarw
pop
sti
cmpsl
loopne
cmp
cli
jb
adc
jle
xor
dec
loopne
push
lea
inc
push
andl
inc
dec
std
int
outsb
push
push
dec
int
push
fisttps
pslld
adc
jo
int3
xor
jl
push
dec
ljmp
xlat
push
lea
jo
jp
pop
and
and
push
in
cmp
and
pop
or
hlt
icebp
scas
inc
sbb
test
cmpsl
ds
mov
push
imulb
call
or
pop
cmp
gs
jns
xor
mov
inc
mov
and
push
fbld
cltd
in
loope
fcoms
xor
daa
das
enter
mov
add
mov
sbb
shlb
push
jg
xchg
mov
fcmovnbe
xchg
int
jae
sbb
dec
les
cmp
popa
sbb
sahf
mov
mov
xor
jb
mov
incb
fs
mov
hlt
subb
arpl
aaa
jle
mov
fmulp
mov
mov
or
jb
inc
cmp
fnstcw
jns
mov
sbb
negl
insl
cs
in
movsb
je
dec
mov
lods
rdpmc
inc
sti
enter
jl
jg
push
xchg
outsb
aas
add
or
lret
push
aam
mov
pop
mov
clc
xor
flds
jle
outsb
sub
in
clc
insl
mov
test
add
sub
daa
xor
mov
lock
xchg
lea
adc
jb
adc
flds
data16
sbb
mov
bound
push
rcrl
ja
sub
mov
or
pop
out
sub
push
lahf
outsb
and
dec
out
cli
js
sti
and
dec
and
xchg
pop
adc
pushf
inc
into
cmpsb
xor
testb
nop
xlat
clc
push
lds
mov
mov
std
addr16
shl
inc
push
loop
sbbb
inc
pop
mov
sub
lret
inc
femms
sahf
clc
out
sbb
xchg
cmpsl
ret
dec
pop
mov
mov
sahf
ds
cmp
js
cmp
imul
movsl
dec
mov
push
xchg
and
mov
jns
xchg
adc
popw
std
add
mov
and
shrb
addb
cmp
sbb
inc
lcall
jge
sub
jb
icebp
dec
mov
jnp
loop
mov
mov
rolb
neg
rclb
pop
jp
in
xor
xchg
dec
push
mov
cmp
mov
lret
and
sbb
rcr
push
or
mov
pop
jnp
jbe
pop
incb
pop
push
in
dec
mov
int
inc
popa
fisttps
xlat
xchg
jp
adcb
or
sub
repnz
dec
jmp
lcall
les
out
shr
call
jae
dec
mov
daa
cmpsb
movsb
inc
sbb
push
fs
stos
add
fs
inc
out
jae
in
orb
negb
es
push
pop
pop
aad
inc
jnp
add
or
clc
insb
inc
hlt
repz
insb
sub
cmp
jecxz
mov
loopne
addr16
in
fldpi
pop
mov
dec
inc
out
js
cmp
movsw
incl
dec
fwait
cs
inc
cmp
nop
mov
mov
mov
mov
sti
pop
mov
lret
nop
in
mov
fsubr
cltd
leave
faddl
add
fimuls
and
lock
mov
cs
add
scas
mov
fdiv
cmp
iret
inc
cmc
push
frstor
rcll
out
and
sub
mov
ret
sub
call
outsl
jno
lcall
dec
and
icebp
cmp
cwtl
and
cmpb
out
sbb
sub
cmp
push
inc
dec
insl
adc
jg
jne
jg
mov
out
loope
stc
xor
fmuls
cmc
sbb
fisubl
mov
xor
and
jl
push
mov
sbb
cltd
cs
test
adcl
dec
movsb
ds
roll
mov
and
xor
cmp
or
adc
adc
add
push
loop
xor
movl
push
jno
bswap
lds
nop
lods
int
std
xchg
aad
fwait
mov
lock
movl
xchg
data16
sub
pop
in
jae
insl
sub
int
xchg
clc
stc
lcall
xchg
xchg
xor
add
stc
stc
fsubrs
dec
in
mov
test
sti
sbb
inc
cld
sub
add
data16
inc
pop
xchg
negl
insb
push
adc
jmp
push
add
dec
sbb
dec
and
lahf
ror
ss
pop
jge
sti
jbe
and
xchg
pop
stos
push
outsb
jecxz
push
push
testb
xchg
pop
mov
dec
jp
xchg
in
rolb
ror
rorl
push
push
cmpsl
fnstenv
in
imul
mov
sarb
imul
xchg
mov
push
loopne
sti
jge
fwait
pop
adc
push
daa
sub
stos
call
sti
enter
xlat
lret
mov
mov
and
and
int
jle
xor
andl
icebp
mov
lea
out
push
mov
add
sti
icebp
dec
jne
scas
pop
add
cs
xchg
sar
pop
mov
cmp
ret
xor
mov
or
jp
mov
out
ror
scas
mov
jecxz
pop
fwait
mov
and
xor
cli
jmp
mov
adc
xor
faddp
lea
rcll
cltd
fsubrs
dec
addr16
sub
shr
jecxz
stos
pop
ret
push
fdivl
lea
fldcw
rclb
mov
mov
add
pop
popf
jae
imul
and
fwait
into
mov
std
orb
pop
iret
sub
jle
push
imul
adc
xor
pop
lods
mov
sahf
arpl
cmc
int
sub
dec
sbb
ljmp
stos
fs
subl
sbb
sbbl
cmp
push
addl
dec
dec
orb
mov
pop
adc
push
pop
rcl
mov
aad
testl
sbb
xor
mov
aad
adc
jb
cmp
sbb
loop
in
xchg
mov
add
and
mov
adc
cmp
lret
mov
push
std
push
nop
sub
popa
lods
out
adc
ror
jne
pop
inc
into
cld
jae
push
popa
cmpsl
sbb
pop
mov
sub
mov
out
sbb
add
pop
jp
repnz
outsb
sub
push
dec
and
mov
and
loope
jle
mov
xchg
xor
push
sub
inc
push
nop
mov
loope
jp
loope
add
imul
lcall
jo
xlat
sub
cmovle
sub
sbbb
push
ljmp
add
clc
addb
add
stc
test
jmp
dec
fsubrs
aad
xlat
fldcw
cmp
out
sub
ret
cmpsb
pushf
mov
add
push
and
cli
jae
ret
ljmp
jecxz
shlb
cltd
add
lock
push
je
test
lret
add
xchg
das
pop
jl
xor
push
fsts
movsl
xchg
mov
xchg
icebp
fsubs
cltd
mov
pop
xchg
insl
fcmovnu
enter
adc
mov
lods
ljmp
ret
mov
leave
pop
testl
fisttps
inc
addr16
xorl
test
jg
imul
sub
sbb
adc
mov
mov
rorl
enter
aam
stos
in
mov
mov
adc
lds
xchg
jbe
jl
push
push
jno
xor
lea
xchg
add
in
jmp
or
xorl
xchg
add
cltd
dec
adc
inc
mov
movsl
jae,pn
test
push
mov
add
adc
mov
pop
mov
and
insb
stos
xlat
cwtl
cmp
lcall
testl
or
test
push
xlat
lcall
fsubs
push
pop
lret
ret
mov
xchg
sub
mov
imulb
mov
adc
imul
sahf
aas
dec
inc
push
add
stos
jae
cli
jbe
cld
sarb
insl
aad
adc
loope
fidivl
jge
mov
sub
cmpsl
les
fmull
sub
mov
arpl
sarb
inc
sub
rcrb
dec
insl
xchg
loop
sub
loopne
pop
ret
sahf
push
mov
xor
cmc
arpl
imul
punpckhdq
data16
xor
pusha
sub
cmp
inc
inc
cli
test
lods
sbb
xchg
sahf
inc
mov
sub
sub
xor
inc
and
mov
mov
pop
stos
jp
dec
test
fcmovne
test
aaa
shlb
adc
mov
repnz
add
mov
sub
cli
xorb
or
lods
push
mov
xor
fbld
hlt
lds
mov
stos
loop
test
es
xor
jnp
push
lret
jns
call
push
adc
int3
outsb
push
cltd
stos
bound
mov
iret
jg
push
aas
sub
mov
sarb
mov
sbb
out
scas
dec
outsb
cmp
daa
scas
scas
aam
test
lods
aad
cmp
mov
sub
lahf
sbb
mov
jecxz
imul
adc
lret
mov
dec
mov
sti
cmp
sub
jnp
les
test
icebp
mov
shlb
out
sbb
fwait
cs
sahf
pop
pop
sbbl
push
sub
stos
mov
cld
fisubl
bound
jge
push
inc
pop
mov
push
out
xchg
sbb
jo
rcll
pop
es
scas
fxam
xchg
sahf
dec
jl
sub
in
adc
imul
mov
rclb
jne
sbb
xchg
cmp
int
inc
addr16
sub
and
inc
inc
inc
rorl
push
popf
mov
cmc
lahf
daa
test
cltd
popa
cmp
dec
mov
xor
jmp
push
iret
push
sar
push
push
sbb
mov
mov
std
aaa
movsb
mov
xlat
mov
pusha
add
xchg
mov
ja
dec
mov
xor
mov
add
ja
insb
cli
sub
inc
stos
testb
lcall
xlat
and
aam
adcl
imul
inc
pop
cmpsl
test
scas
adc
fmul
add
out
push
xor
cmp
cltd
dec
push
or
mov
push
jl
xchg
fsubs
scas
sbb
push
repnz
fcompl
stc
sbb
add
icebp
cld
arpl
arpl
dec
es
xor
cmp
cmp
cmpsb
push
mov
inc
sbb
pop
out
bound
jl
cltd
out
adcb
add
in
scas
in
sbb
andl
add
sbb
ja
sbb
dec
mov
clc
xor
aam
push
imul
in
out
mulb
lea
and
sarl
fwait
arpl
add
popa
lret
dec
icebp
cmpsb
scas
test
test
ret
push
or
xor
call
adcb
bound
out
xlat
cwtl
sahf
cmp
dec
mov
mov
aaa
das
push
jne
scas
loop
xchg
pop
inc
and
fcomps
mov
into
and
adc
ret
sbb
jne
jl
inc
les
or
mov
jno
jbe
inc
ret
mov
sbb
push
imul
or
jae
dec
dec
mov
jns
cmp
sbb
fcompl
sub
loope
xchg
jmp
out
and
jl
and
jo
sbb
push
clc
sarl
gs
mov
and
pushl
push
imul
test
jecxz
sub
and
pop
test
dec
loop
adc
outsb
into
mov
push
into
fstpt
cs
ud2
dec
xchg
jl
push
jmp
rclb
pop
mov
or
jae
push
lock
sbb
fidivrl
lret
addr16
and
test
daa
loop
dec
cwtl
addr16
pop
xchg
arpl
push
or
mov
adc
mov
mov
jne
loopne
or
sbb
mov
lods
mov
cmp
cli
mov
stc
xchg
imul
loopne
inc
insb
inc
aas
stos
fucom
xlat
hlt
psubsb
in
sub
lock
mov
jnp
je
inc
push
rcll
aad
and
lock
adc
decl
add
orb
adc
xchg
popf
retw
stos
or
mov
dec
loop
cmpsl
lods
mov
inc
dec
and
inc
or
or
xor
mov
inc
xchg
cmp
and
mov
lahf
cmp
cs
repnz
in
in
and
adc
fsubrs
push
test
stos
insb
mov
xor
push
lahf
ds
or
mov
imul
mov
aaa
xor
and
xchg
xlat
leave
iret
je
cmc
push
sbb
dec
xor
mov
push
pop
jge
lahf
pusha
pushf
adc
mov
sbb
dec
inc
hlt
cmc
add
jecxz
rolb
pop
add
mov
xor
pop
xchg
fnstsw
and
push
inc
xchg
ror
arpl
cwtl
fisttpl
cltd
xorl
mov
out
arpl
rolb
xor
push
mov
cmp
das
test
loop
sbb
neg
sti
mov
mov
jns
push
push
dec
popa
jo
fadd
cmp
imul
push
mov
jg
mov
cwtl
mov
xor
mov
cmpsl
and
xor
sub
and
shll
jp
aaa
sub
and
mov
out
push
fstpt
adc
jp
pop
and
mov
lret
xchg
push
cmc
mov
repz
push
pop
cmpsb
jl
hlt
pop
pop
addr16
test
ss
arpl
jecxz
mov
pop
cmp
mov
inc
notl
out
icebp
shll
jmp
cli
daa
lahf
dec
lret
fidivrl
movb
cmp
in
hlt
jl
sbb
jle
or
repnz
fisubl
imul
clc
xchg
dec
mov
jmp
gs
jle
jl
das
imul
cmp
xlat
outsb
add
inc
popa
cmp
mov
out
outsb
mov
xlat
mov
ljmp
jge
mov
inc
js
mov
mov
gs
call
mov
sub
andb
pop
aad
push
xor
nop
and
adc
dec
mov
imul
stos
popf
mov
adc
sbb
sbb
push
cmp
mov
loope
mov
cs
pop
sub
inc
xchg
loope
sarb
sbb
xchg
int3
jp
nopl
in
jge
dec
pop
cli
cmp
lahf
xor
aas
fisttpll
and
out
shl
mov
cwtl
or
xchg
jae
jge
adc
fcoml
rcrl
leave
cmp
mov
clc
adc
ds
mov
add
push
shll
imul
xchg
jge
pop
add
stc
lret
stc
and
shrl
je
lock
xlat
ja
push
add
and
jne
popf
jmp
mov
loope
fpatan
push
push
add
mov
mov
loopne
test
jns
cmc
jl
inc
les
sub
jne
idivb
imul
mov
mov
loop
sub
xchg
clc
enter
cmp
jnp
jb
mov
fists
cwtl
xchg
sub
mov
mov
jne
sbb
sbb
xchg
outsl
iret
sub
xor
ljmp
repz
cmp
sbb
add
cmp
sbb
test
ret
imul
aas
cmp
cltd
clc
mov
mov
fnstenv
mov
into
adc
loop
sbb
fildll
movsl
cmp
mov
loopne
or
or
pushf
sbb
enter
pop
xor
jns
jecxz
test
adc
add
movsb
mov
lahf
rolb
jbe
std
rol
cli
bnd
stos
sbb
lcall
sub
dec
adc
lea
and
es
movd
adc
adc
and
add
jnp
xor
inc
add
divl
sbb
mov
test
popa
add
jno
insl
and
or
or
xorl
push
mov
lea
int
cmpsl
lds
mov
or
or
jl
xchg
xchg
mov
clc
xchg
je
sbb
xlat
adc
cmp
loope
xlat
out
mov
xor
lahf
fs
testb
cs
out
sbb
adc
cld
sbb
fucomp
add
inc
adc
nop
sbb
sti
sbb
xor
in
mov
ret
fmul
dec
cmp
aam
jg
mov
orb
mov
out
inc
movb
mov
mov
popf
movsb
sbb
shr
or
cli
bound
pop
mov
dec
or
cmp
jp
mov
outsl
mov
repnz
into
cld
mov
ret
add
popf
mov
insb
or
lret
lea
out
cwtl
loope
inc
pushf
lock
mov
add
and
dec
add
inc
sahf
cmp
or
std
daa
cmc
push
mov
or
xor
testl
mov
stos
inc
push
jle
adc
xchg
aas
in
push
sbb
cmp
adc
sub
mov
movsl
pop
icebp
scas
push
lods
sub
push
test
data16
insb
es
rcrl
inc
or
and
int3
adc
mov
mov
xor
mov
mov
jbe
sbb
fistps
pop
inc
lds
fisttps
or
daa
push
pop
cmpb
mov
aam
je
push
mov
test
and
add
sbb
imul
test
nop
jo
jle
aaa
cmp
lret
cmpsl
mov
mov
aam
mov
mov
imul
cmpsl
shll
lds
fdivl
mov
nop
fs
je
mov
icebp
push
add
mov
mov
xchg
xor
mov
popf
out
jmp
lea
loop
adc
push
adc
xchg
and
pop
lea
aad
cltd
loop
sbb
dec
je
cmc
cmp
adc
pop
xchg
sbb
cmpsb
cmp
js
cmp
sbb
pop
lret
cmp
dec
decb
test
jmp
jecxz
mov
add
lods
dec
mov
xchg
ja
mov
nop
pop
add
add
pop
dec
and
int3
cmp
inc
sbbl
pop
stos
push
insl
pop
add
push
inc
aad
repnz
inc
dec
lret
cli
adc
lcall
push
jle
mov
xlat
imul
push
hlt
jmp
sub
fnstsw
inc
into
imul
jo
and
sub
jns
pop
in
loop
ja
xchg
rep
sub
inc
lods
sub
scas
jg
xchg
mov
adc
inc
xchg
mov
and
adc
lods
imul
inc
dec
fnstsw
jo
inc
movsb
sub
outsb
popl
jb
in
imul
mov
inc
test
not
repnz
pop
mov
call
adc
sub
or
lahf
jno
xchg
roll
out
xor
add
loope
pop
adc
push
adc
inc
clc
fldenv
ret
sbb
lea
or
cmpsb
xor
mov
add
aas
push
shrb
cmpsl
cmp
cmpsb
sbb
mov
inc
xchg
fistpl
mov
shrb
lret
loop
adc
push
leave
enter
daa
or
loope
cmpsb
dec
out
repnz
sbb
leave
lock
outsb
push
sbb
daa
int3
add
adc
jo
addl
sbbb
dec
mov
sbb
xor
bound
cmp
test
and
clc
movsb
push
jbe
ljmp
call
aam
push
lock
sahf
mov
cltd
nop
test
int
shlb
push
or
cmp
aaa
out
cld
push
xchg
xor
scas
dec
jo
mov
xchg
inc
or
sbb
inc
push
and
mov
test
cli
mov
scas
in
mov
rorb
push
cmc
add
push
push
jne
or
adc
mov
lea
adc
mov
xlat
fildl
jl
das
adc
dec
lret
and
iret
pop
fildll
out
and
in
sbb
test
in
fcoms
jae
clc
pop
add
shrl
pop
imul
or
pop
sbb
add
scas
xchg
sysret
clc
fnstenv
data16
loop
lods
out
jg
jnp
xor
add
mov
int
notl
shl
out
jge
push
mov
xor
inc
out
xor
cmpsl
xchg
xchg
stc
jo
daa
cmp
fmuls
mov
cli
out
pop
cmc
dec
mov
fwait
lea
ljmp
xchg
std
mov
out
nop
leave
rolb
pop
in
inc
push
outsb
decl
fcoms
adc
insl
and
sbbl
mov
adc
pop
jg
out
popf
fisubs
sub
addr16
fisubl
jns
cmpsb
mov
xchg
mov
pusha
and
aad
sbb
sti
insb
sbb
sub
mov
mov
push
push
jns,pt
push
repz
stos
or
add
jae
adc
inc
fs
in
dec
orl
pop
pop
push
jmp
add
cmc
dec
negl
mov
sbb
and
xorb
test
dec
dec
jno
inc
hlt
pop
inc
lret
scas
aas
imul
sub
sub
add
dec
fidivs
es
mov
fimull
xor
addr16
cmpsb
lret
mov
mov
icebp
stos
mov
lea
xor
je
bound
call
add
iret
lods
insb
pop
cmp
fdivrl
pop
sti
fidivl
scas
pop
cs
cmpsl
in
sbb
mov
mov
xor
in
idivb
mov
sub
sub
ficoms
fnsave
lea
dec
mov
cmp
mov
ficoms
out
aam
lds
push
pushl
jle
jle
sub
sbb
jg
arpl
cmp
imul
pop
jnp
add
mov
mov
mov
xor
mov
fiadds
loop
inc
mov
push
inc
jle
sbb
xchg
addr16
dec
mov
adc
sahf
scas
pushf
pushf
pop
lock
mov
xor
cmp
imul
dec
ljmp
xchg
loopne
cmp
push
jno
and
cmpsb
mov
outsb
lock
xchg
lods
mov
pop
iret
or
cmp
push
xchg
fmull
push
loope
out
in
hlt
mov
dec
paddusw
adc
add
ret
sahf
adc
add
into
fs
into
sti
sbb
mov
decl
pop
call
cmc
mov
push
loope
adc
pop
cld
scas
inc
dec
insl
xchg
and
mov
pop
hlt
inc
int
int3
cltd
cmp
loop
adc
scas
out
loopne
fcoml
pop
jp
jbe
sbb
sahf
gs
lret
ret
mov
adc
cmpsb
cmp
or
int3
inc
or
pushf
sub
mov
mov
push
mov
jmp
aad
inc
mov
test
ret
int3
movsl
sub
jns
out
fisttpll
sub
lods
mov
shl
adc
adc
xor
dec
icebp
and
jmp
add
xor
push
movsb
sub
loopne
or
dec
sbb
cmp
xor
cmpsl
xor
adc
or
dec
xchg
xchg
out
dec
in
sub
dec
int3
fxch
repnz
push
push
xchg
movsl
or
add
mov
addl
jp
sbb
jns
add
lret
push
cld
cmp
pop
fs
mov
pop
jo,pn
jecxz
les
movsl
cld
xor
cwtl
ljmp
scas
in
movsb
lods
loopne
mov
and
adc
pop
xlat
mov
nop
shll
xchg
add
adc
testl
cmpsl
and
jmp
ljmp
jae
lcall
imul
pushf
lds
jns
mov
scas
out
movl
push
add
mov
fiadds
stos
jmp
pop
cld
inc
ds
imul
lret
sbb
push
loopne
xchg
xor
outsb
jg
mov
adc
mov
cmc
mov
cwtl
jne
mov
xchg
inc
sbb
add
les
pop
xchg
nop
mov
sbb
stc
int
lahf
jecxz
in
xor
xlat
cltd
je
or
icebp
fwait
push
testl
push
fstpl
push
lcall
ret
pop
pop
mov
push
and
int3
inc
fldl
fdivs
leave
mov
repz
mul
iret
mov
leave
push
add
in
es
mov
loopne
ret
in
mov
repz
adcl
add
mov
cmpsl
stc
xchg
mov
xor
add
mov
xlat
push
inc
in
fwait
mov
into
fisttpl
and
aad
pop
test
dec
fnsave
fsubrp
ja
std
in
icebp
and
in
rol
push
mov
imul
sbb
movsb
stos
inc
lret
insb
dec
mov
les
push
mov
and
mov
jp
das
mov
add
stos
leave
adc
test
loope
movsl
push
cs
pop
into
add
das
inc
xlat
out
xchg
out
mov
stos
and
sbb
cmp
mov
mov
pop
sbb
sub
adcl
stos
lret
mov
icebp
push
in
imul
xchg
xchg
cmpsl
inc
xchg
push
xchg
xchg
dec
push
repnz
stos
clc
jmp
dec
dec
mov
dec
adc
test
mov
out
rorb
adc
add
inc
test
int3
mov
sbb
jg
repnz
movsl
cmpsb
bound
dec
adc
sub
sahf
cmpl
loopne
push
negl
inc
iret
push
leave
imul
xchg
push
mov
sbb
push
callw
mov
lahf
jg
cmp
fidivrs
lret
jp
repz
lret
dec
fisubrs
inc
enter
jmp
adc
int3
ficoms
cmp
movsb
stos
dec
iret
mov
cli
shll
fistpll
mov
add
pop
adc
xchg
icebp
mov
popf
shr
jge
push
addr16
std
add
pop
fistpll
jecxz
xchg
aam
jge
cld
lods
imul
aaa
cmc
sahf
fwait
repz
filds
out
mov
andb
loop
leave
repz
movsb
mov
mov
shrb
dec
or
jne
ljmp
loopne
jl
je
dec
mov
cmp
mov
inc
ljmp
xor
ss
bound
or
xor
ljmp
imul
test
cmpsb
ret
add
in
xchg
pop
jle
xor
stos
ljmp
and
fcoml
push
gs
pop
mov
rolb
repnz
mov
fildll
push
iret
mov
sub
mov
fisubs
mov
addl
mov
out
lahf
inc
aam
jbe
fisubl
nop
ret
or
enter
ja
jae
data16
and
out
popf
lahf
mov
add
adc
sub
add
jo
fistl
dec
sbb
jbe
leave
adc
push
add
inc
es
mov
and
je
test
imul
sub
call
loopne
inc
sbb
mov
daa
adc
lret
inc
push
push
arpl
mulb
pushf
movsl
ljmp
mov
loop
lret
daa
js
pop
and
daa
mov
sub
push
lret
aas
aam
xchg
pusha
in
bound
mov
dec
or
pop
mov
mov
and
insl
dec
mov
dec
pop
jmp
xor
dec
mov
js
inc
mov
push
xchg
ret
adc
mov
push
mov
inc
xchg
mov
in
add
loope
xchg
sbb
xchg
adc
or
fdivs
pop
mov
mov
jge
arpl
push
mov
xlat
jne
cmp
jnp
cmp
and
leave
jecxz
mov
sbb
ss
sbb
pop
mov
mov
cmp
pop
cmc
iret
mov
iret
and
cmp
sbb
dec
pop
lds
sub
mov
out
cwtl
inc
imul
mov
ret
lods
aas
movsb
dec
mov
add
inc
imul
pop
push
test
cli
add
mov
push
sbb
dec
fcoml
and
js
jle
enter
movsb
cmpb
sar
out
subb
test
repz
or
jbe
in
insl
jecxz
cltd
push
mov
mov
push
jle
push
outsb
jbe
popf
sti
push
popa
enter
or
push
mov
xchg
mov
out
fidivrs
push
insl
movsb
or
mov
pop
push
int
je
dec
test
mov
pusha
roll
sti
fimuls
mov
push
xchg
and
push
orb
test
jg
sub
sti
push
mov
and
mov
mov
imul
and
jl
mov
adc
jge
mov
push
daa
arpl
cmp
addr16
cmp
mov
in
imul
lds
cmp
in
dec
xchg
aaa
inc
pop
dec
xor
sbb
hlt
test
ret
sbb
or
inc
lcall
popf
push
mov
dec
cwtl
fimull
and
test
add
push
out
mov
dec
test
add
dec
adc
dec
outsl
mov
pop
xchg
jne
add
lahf
xchg
fisubrs
imul
mov
adc
fbstp
pop
add
sub
push
jmp
pop
mov
add
arpl
mov
hlt
loop
inc
mov
popf
pop
mov
ljmp
jge
or
dec
daa
enter
xor
das
push
inc
mov
fsubrs
push
cmp
loopne
push
lods
sbb
in
push
fstl
lods
std
test
push
jae
bound
addr16
xchg
adc
pop
js
sub
add
ret
outsb
cmp
or
pop
push
ret
dec
xor
movl
lods
aas
stc
ret
inc
gs
mov
into
add
popa
mov
mov
adc
loopne
mov
mov
cmpl
enter
in
push
mov
or
ficoml
cli
mov
arpl
repnz
sbb
lcall
mov
jns
pusha
shlb
outsb
and
jmp
out
aad
jb
xor
stos
lcall
jno
inc
sub
clc
push
xchg
fcmove
cs
mov
dec
pop
daa
leave
pop
icebp
push
or
adc
mov
les
cmpsl
sub
or
adc
int
or
jns
gs
dec
xor
stos
repnz
mov
and
cmc
sbb
jecxz
pop
scas
push
mov
mov
push
hlt
pop
mov
push
je
fucomi
and
shrl
xchg
xchg
test
sbb
jbe
pop
test
dec
dec
stos
cmpsb
jnp
mov
push
mov
or
aas
or
sti
mov
xor
mov
inc
shl
movsl
mov
and
sbb
adc
add
jns
psllq
ja
lea
add
mov
fimuls
sbb
jecxz
ljmp
nop
pop
iret
stc
mov
push
cmp
lods
dec
dec
sbb
lahf
or
jmp
js
cmp
arpl
rcrl
dec
shlb
inc
fimull
xchg
dec
push
ds
stc
push
aaa
lock
cmp
inc
lock
push
div
mov
nop
out
les
cmp
scas
lds
jge
das
and
pop
xchg
fmuls
add
incb
pop
xchg
sbb
inc
jmp
adc
clc
jmp
xchg
xchg
xorl
pop
repnz
dec
or
xchg
cwtl
outsl
mov
in
jge
int3
push
in
xchg
shll
pop
sbb
and
popf
jmp
or
push
or
aas
aas
rolb
sbb
shll
jmp
mov
fidivrl
hlt
mov
daa
fmuls
or
scas
jl
push
clc
jbe
sub
xor
pop
sti
mov
lea
inc
in
jge
ss
out
lret
or
dec
shl
sbb
mov
pop
ds
rcl
jbe
andl
das
and
mov
jb
call
mov
imul
in
xchg
cli
dec
and
fimull
xor
fistl
adc
pop
sub
subb
cli
add
lock
push
lcall
adc
and
xor
lret
cltd
clc
mov
sub
jbe
fidivl
cmpsb
mov
lock
pop
sub
cmovns
fdivrl
pop
pushf
sbb
cmp
and
aaa
dec
inc
imul
aas
fcmove
pop
pushl
and
and
cmc
xor
xor
imul
mov
rcl
xchg
scas
or
jge
ret
sub
sbb
or
and
cmc
lds
mov
push
adcb
and
shlb
mull
jo
sub
out
xor
imul
or
in
inc
std
inc
dec
jge
into
lea
xlat
inc
lds
jmp
jb
mov
movsl
sbb
mov
lds
push
popf
jne
sub
xor
fdiv
xchg
imul
inc
xor
xlat
pop
stos
or
in
sub
fprem
sbb
imul
arpl
inc
jle
dec
insb
jns
fs
repz
int
test
xchg
ret
out
lahf
sbb
jo
mov
jmp
shll
test
cmpsb
aas
lods
negb
mov
mov
es
movsb
das
xor
movsl
movb
mov
adc
sti
push
mov
pop
xchg
imull
sbb
inc
sub
lcall
jnp
stc
sahf
mov
push
push
jl
mov
test
aaa
rol
jns
and
sarl
in
jo
push
outsb
jge
lret
inc
cmp
adcl
aam
roll
test
popa
lret
jmp
push
fdivrl
dec
lcall
out
mov
loop
aaa
jl
std
push
mov
dec
test
push
fldcw
mov
mov
lea
in
into
mov
test
iret
test
das
sti
mov
xchg
cmp
sbb
int
jmp
pop
adc
hlt
xor
jmp
push
in
jmp
cmpsb
adc
cmc
or
jne
xor
cmp
sti
lods
xchg
scas
jo
push
add
sub
orb
mov
inc
shlb
clc
xchg
adc
pop
fdivrs
and
out
adc
sti
out
ja
stc
dec
fwait
inc
lret
mov
negl
and
add
out
jge
xchg
xchg
iret
and
test
adc
bound
mov
adc
pop
insl
popa
jge
jno
xor
sub
push
test
or
rcll
pop
imul
popa
lds
dec
clc
push
mov
pop
imull
push
imul
rorb
push
test
lret
fidivrl
jg
aas
stos
shlb
dec
test
clc
adc
iret
jle
test
mov
sbbl
mov
mov
mov
std
and
out
pushw
ja
ds
inc
mov
notb
jb
mov
int3
cwtl
and
sub
jg
mov
pop
jg
shlb
in
jle
adc
ret
std
pop
cmpsb
leave
fcoml
sbb
jnp
push
or
mov
inc
sbb
sub
test
lods
fsubs
les
cltd
xchg
repz
imul
mov
push
scas
mov
aam
pop
aas
xchg
scas
xchg
adc
lods
lahf
pop
sub
out
cmp
jecxz
into
push
and
jns
jl
dec
inc
and
xchg
ret
imul
or
xchg
add
test
sbb
xchg
push
mov
mov
addl
xor
leave
jb
aas
test
xor
add
les
adc
sub
pusha
scas
mov
scas
ret
push
inc
cmpl
cmpsb
mov
mov
cwtl
mov
dec
ret
sti
ret
mov
mov
lock
push
dec
jle
mov
cmpsb
lea
call
inc
mov
test
adc
nop
cmp
test
stos
mov
in
pop
push
mov
jp
xchg
sti
addr16
daa
mov
ficoms
xchg
insb
js
adc
repnz
jb
cmp
sbb
sub
lods
add
outsb
out
or
mov
nop
repz
xchg
sbb
rcrl
and
jg
aad
adc
rcr
cmpsb
lock
and
pop
push
jae
sahf
and
sbb
mov
test
or
sbb
clc
popf
je
xchg
dec
scas
xchg
rcrl
push
mov
ljmp
sbb
imul
lock
in
sub
cmp
test
jb
popa
or
push
lret
pushf
xchg
sub
sti
push
xchg
pop
in
pop
repz
add
dec
out
adc
add
cltd
or
cmp
aam
pushf
sti
aaa
or
jb
fadds
push
fdivl
addr16
fnstenv
xchg
jmp
mov
clc
add
out
cmpsb
mov
data16
xchg
xchg
or
hlt
jmp
push
out
repz
pop
push
out
subb
mov
inc
sbb
lcall
sbb
ret
movsl
aad
cli
pop
std
hlt
jle
dec
in
xchg
popf
addr16
xchg
mov
lods
stos
pop
sbb
pop
push
add
and
add
adc
adc
lahf
nop
and
cmpsl
mov
cmp
in
aas
or
call
sbb
sub
lods
xor
std
add
fdivr
test
xor
add
adc
jae
inc
out
insb
push
dec
mov
pushf
mov
loope
adc
mov
cs
movsb
cmpsb
fstpl
mov
cld
cmp
pop
add
sti
and
or
push
mov
cmpsl
cmp
fcoms
jno
into
mov
jg
push
sbb
aas
fldl
xchg
xchg
jns
frstor
xchg
mov
daa
pop
mov
mov
int3
int
xor
push
xchg
sbb
cltd
fsubr
jnp
add
loop
cmp
stc
inc
mov
std
popf
mov
mov
cmovs
mov
inc
mov
ljmp
ja
imulb
notb
cmp
xlat
xchg
jmp
push
aas
mov
test
pop
mov
cs
addr16
dec
pop
inc
out
inc
ret
int3
mov
sbb
mov
addl
xchg
pop
xchg
leave
nop
cli
into
and
mov
in
xor
popf
pop
insb
sbb
sub
into
xchg
cmp
sbb
xchg
data16
jbe
pop
std
pop
in
adc
sahf
mov
pushf
arpl
gs
jg
dec
out
sarb
js
inc
adc
aas
jmp
test
mov
xor
movsl
int3
insl
mov
sbb
cmp
inc
inc
xchg
xor
les
rorb
jo
clc
imul
pop
pop
push
or
test
lret
and
adc
xor
adc
adc
lret
xchg
pop
push
stos
mov
push
pushf
lods
pop
add
fincstp
in
or
inc
adc
sbb
fcomps
and
pop
xor
adc
scas
push
aas
jne
xchg
mov
jne
repnz
xchg
push
loopne
les
cwtl
nop
push
insl
lahf
cwtl
mov
push
or
mov
adc
rorb
lods
mov
loopnew,pt
push
inc
mov
sub
jmp
in
or
movsl
subb
xor
cltd
mov
jnp
pop
mov
imul
sbb
imul
pop
lret
add
mov
aad
gs
rclb
scas
push
xor
inc
cmp
mov
push
lods
fmull
sbb
xchg
movsb
add
imul
add
loop
mov
and
lfs
and
inc
dec
cmpsb
adc
or
sahf
add
xchg
xor
push
test
aas
add
xor
stos
out
movsb
pop
cmpl
shl
sti
dec
and
jns
lds
gs
sbb
push
or
sub
repz
bound
adc
dec
xchg
xchg
jg
cmpsl
ficompl
cmp
fidivrs
arpl
adc
rorl
aas
pop
xchg
mov
mov
hlt
add
sub
fidivrs
mov
sbb
das
aad
nop
daa
das
sub
pop
and
sub
dec
adc
fld
jmp
sbb
add
push
adc
and
outsb
adc
icebp
mov
inc
test
xchg
push
pop
adc
adc
mov
mov
data16
xorl
sbb
jb
push
sub
jo
stc
and
cwtl
mov
add
sbb
and
jns
ficoms
into
add
stos
movsb
pop
mov
stc
push
pop
mov
out
mov
mov
ss
push
inc
pusha
movsl
push
push
or
pop
movsb
inc
push
adc
insb
cmp
call
inc
test
scas
and
jne
arpl
cmpsl
insl
decl
jno
xor
xchg
sub
adc
out
lret
ljmp
sub
gs
mov
int3
sbb
mov
pavgb
jae
stos
or
out
lods
ds
test
cmpsb
inc
jmp
sub
add
mov
pop
lret
scas
jb
leave
adc
pop
inc
mov
loopne
je
push
cmc
and
dec
lcall
xchg
jae
divl
insl
ficoml
out
adc
inc
jg
aam
jns
jno
pop
sub
lahf
call
push
push
movsl
sbb
nop
add
and
ljmp
inc
shr
add
test
cmp
loopne
adc
stos
adc
sub
push
lds
in
mov
andl
imul
inc
push
data16
xor
pushf
xor
pop
jmp
cwtl
push
push
jl
std
pop
jl
cmp
add
imul
jg,pn
inc
push
xchg
pusha
xchg
jbe
push
std
ja
imul
stc
push
dec
inc
mov
mov
lret
test
fdivrs
scas
lahf
fistl
inc
gs
xchg
mov
lea
add
pop
clc
popf
sbb
sarl
pop
mov
sbb
das
ret
pop
repnz
add
inc
xor
ljmp
pop
scas
mov
and
add
jge
inc
setl
mov
mov
ds
ljmp
xor
addr16
popa
decb
leavew
jb
mov
lods
data16
jne
mov
sbb
fsubrs
xchg
aad
or
fucomip
mov
or
sahf
cmpsl
call
loopne
inc
in
mov
aam
xchg
cmpsb
mov
jmp
fcmovne
icebp
sbb
std
xchg
mov
andnps
xchg
jnp
popa
cmp
push
inc
jl
jl
dec
lea
mov
mov
sub
sbb
fstpl
cltd
push
lods
cmpsb
nop
orl
mov
cmp
sti
outsb
lods
sbb
repnz
movsb
repz
sub
push
push
jge
pushf
cmp
mov
cld
jb
jne
fdivl
mov
push
data16
and
sub
outsb
mov
mov
cmp
clc
loope
sub
shlb
mov
mov
fstps
jmp
fcomps
push
sti
jecxz
xchg
test
push
ds
pop
je
jns
test
or
mov
jnp
xchg
or
push
xchg
lcall
aam
or
sub
mov
mov
into
das
repz
mov
dec
sbb
test
rclb
mov
cltd
inc
stos
pusha
sbb
mov
es
or
mov
dec
pop
lock
aaa
cli
mov
mov
cmp
pusha
nop
aaa
popf
jne
shr
push
xchg
jne
add
push
shl
mov
jne
jne
sti
cmc
enter
out
dec
sbb
sub
call
ds
add
addb
inc
lahf
xchg
imul
add
inc
into
je
aaa
ret
scas
cmp
mov
inc
stos
pop
imul
out
clc
movsb
pop
rcr
out
cmpsl
scas
and
stos
dec
cmp
fldl
jecxz
or
clc
and
mov
fcmovnbe
aaa
lds
mov
ds
es
pop
jns
loopne
lods
inc
xchg
aaa
mov
call
pop
loop
pop
xchg
lea
xor
imul
jns
testl
std
lret
fxch
xchg
push
fiaddl
gs
scas
adc
les
push
scas
push
repz
mov
inc
dec
fsub
and
roll
sbb
fidivs
xchg
cmp
jae
shlb
cltd
adc
xchg
jg
daa
cs
inc
lds
jno
cltd
add
mov
mov
inc
into
jp
sub
xor
mov
mov
sbb
inc
inc
int
push
cmpb
arpl
pop
pop
mov
xchg
dec
add
bound
adc
shr
jbe
fdivs
and
xchg
cmp
sbb
js
cmp
push
dec
inc
adc
pop
mov
fidivs
push
add
jnp
test
sahf
cltd
push
jle
add
pop
mov
push
int3
xchg
sbb
pop
jge
flds
xlat
ljmp
in
add
and
hlt
sub
xor
push
inc
daa
outsb
mov
mov
dec
mov
and
loop
dec
jb
dec
cmp
pop
inc
adc
mov
mov
add
add
jmp
popa
in
mov
popf
add
mov
xor
imul
fs
fstp
shl
push
xor
add
ljmp
mov
mov
out
mov
fldcw
mov
cmp
xchg
mov
pushf
nop
dec
les
shll
dec
push
adc
fisttpl
mov
mov
mov
fnstenv
enter
adcb
mov
sub
dec
lcall
outsb
inc
repz
mov
stos
add
cmp
sbb
fs
adc
xchg
pop
xor
lahf
pop
mov
hlt
adc
mov
enter
test
mov
dec
and
xchg
add
cmp
dec
xchg
cmc
add
xchg
xchg
sub
leave
rclb
pop
shlb
sarb
stc
test
or
mov
cltd
and
fsubs
pop
into
es
loopne
jne
cmpsl
inc
pop
in
mov
add
or
shrb
out
or
add
adc
or
add
adc
pop
cmp
cmp
push
mov
lret
inc
mov
js
subl
or
push
mov
push
scas
sbb
push
lcall
inc
cmp
push
lahf
jnp
mov
mov
loope
xchg
xchg
add
scas
ret
cmp
mov
ja
jae
jnp
rcrl
mov
xlat
xchg
lods
mov
aam
xor
mov
dec
ret
in
add
cmp
dec
push
cmc
cmpsl
mov
push
aad
pop
fs
shrb
cltd
aaa
test
std
jge
data16
lods
fisttpll
push
cwtl
mov
cmp
dec
rcr
aaa
sahf
cwtl
lret
mov
rol
pop
call
inc
lods
pushl
int3
cmp
imul
pshufw
jae
mov
xchg
and
and
loope
sub
sub
pushf
insl
sub
push
shl
fcompl
jno
adc
lcall
fisubs
icebp
dec
mov
pop
stc
jo
lds
fwait
pushf
hlt
cmp
sub
push
cmpl
les
xchg
push
lret
aam
movsb
jge
lock
out
mov
loop
pop
or
or
jg
xorb
daa
and
mov
cmp
cmp
outsb
mov
dec
push
fwait
sarb
pop
xchg
sub
jle
shll
cmp
xchg
mov
decb
xor
mov
jmp
mov
adc
sti
fs
pushf
loope
clc
inc
sub
enter
in
dec
push
in
or
fildll
mov
push
xlat
enter
enter
imull
mov
mov
daa
cmp
aas
out
rcrb
das
and
loope
imul
and
jge
xchg
jp
cmp
es
sbb
pop
sub
in
mov
xchg
jns
mov
dec
rorb
lcall
inc
cmp
cmp
mov
aas
repz
andb
ret
pop
fcoml
nop
std
mov
inc
lahf
loop
lods
notb
xor
cmp
inc
cmp
cmp
mov
leave
push
fldt
inc
cltd
out
inc
ror
cltd
scas
xor
pop
je
mov
mov
rorb
bswap
mov
jle
push
mov
mov
sbb
push
sub
mov
imul
or
and
out
adc
mov
sub
push
iret
add
shlb
adc
cwtl
dec
loopne
or
dec
xor
es
xchg
shld
pop
cmc
mov
and
or
push
jle
sbb
push
fnstsw
jae
adc
inc
mov
xchg
dec
nop
jecxz
jl
movsl
xchg
pop
and
sti
mov
inc
or
mov
and
ret
xchg
push
faddp
jmp
das
cmp
mov
push
dec
fsubs
dec
je
sbb
aas
movsb
adc
gs
movl
jbe
mov
insl
add
pop
dec
hlt
push
push
lods
push
cmp
cmpsl
pop
and
popf
jae
mov
cmp
or
jl
mov
cmp
jns
xor
ja
xchg
fs
push
dec
movsb
jp
xor
push
inc
mov
rcr
rorl
add
mov
int
lret
and
imul
test
mov
pop
pop
mov
xor
mov
jg
gs
xchg
sbb
sbb
or
pop
jne
sub
lret
insl
in
shlb
loope
or
or
add
popa
adc
xchg
sbb
sub
dec
daa
pop
jle
popa
rcl
or
xor
stos
xchg
scas
sub
xchg
pop
cld
fidivrs
jp
test
sub
lret
in
insl
cmc
aaa
sarb
inc
dec
nop
dec
shrb
ret
jno
outsl
cli
aaa
adc
xor
adc
mov
inc
xchg
and
jl
les
testl
cmpsb
xor
pop
xchg
inc
inc
mov
mov
roll
mov
jb
movsb
sbb
je
shll
inc
pushf
mov
cmp
push
mov
fdivrl
mov
repnz
push
sbb
xlat
add
jmp
call
cmpsb
fildl
adc
aam
mov
std
pop
or
fdivrs
jge
test
pop
push
test
xlat
dec
stc
movsb
jge
imul
xchg
and
gs
clc
lret
in
imul
dec
nop
push
test
jne
push
aas
js
pop
iret
fistpl
sahf
insl
xchg
ret
clc
fs
movsb
xlat
mov
dec
aam
cmpsl
sbb
dec
andl
and
xorb
addl
mov
jmp
mov
fcmovu
pop
pushl
jno
sub
sahf
dec
cltd
setp
fbstp
fcompl
add
pop
decb
inc
inc
jl
add
sub
lret
xchg
jmp
dec
fiadds
out
mov
jle
push
shl
xor
cmp
mov
pmulhuw
mov
xor
cmp
mull
sbb
ret
cmp
jbe
cli
pop
lcall
lret
push
push
pushf
nop
adc
mov
sub
xchg
aad
cmp
lcall
test
repnz
sti
cmp
lock
cmc
xchg
adc
jno
outsb
pop
push
jbe
sub
mov
dec
pop
inc
jl
cmp
das
mov
inc
clc
inc
sbb
lahf
pop
cmp
adc
sbb
shll
inc
shl
inc
xor
out
aaa
cmp
lcall
fldcw
add
inc
mov
dec
jb
pop
aam
ljmp
imul
pop
mov
mov
rorl
dec
xor
shl
cld
les
test
sbbb
cmp
or
aad
mov
cld
xchg
jl
or
add
and
insb
aas
inc
cmp
test
jnp
test
lret
adc
push
dec
ja
add
jns
push
adc
add
inc
xchg
or
outsl
add
cmpsb
jne
and
out
mov
xchg
shl
not
or
lea
ljmp
je
sub
stos
pop
mov
mov
pop
test
das
add
push
adc
mov
fstpt
js
fyl2x
movsl
dec
fnclex
jae
lcall
jecxz
out
scas
cmp
cmp
pop
sbb
and
cmp
int
dec
jbe
push
add
lahf
insb
rclb
test
jns
mov
insb
mov
or
xor
lds
jp
mov
int3
hlt
jne
xorl
add
xor
testl
jno
push
shrb
rcl
mov
adc
je
xchg
and
dec
popf
lahf
push
xchg
xor
movsl
xchg
dec
push
sub
loop
cmp
lret
adc
inc
cmp
jae
lock
xor
insb
inc
and
loope
je
divl
out
cmp
aam
xchg
mov
cmp
xor
push
int
mov
iret
jle
sarb
jp
and
les
cmp
inc
push
test
push
jno
xchg
enter
jo
loopne
hlt
rorb
lahf
xchg
ret
pop
add
shrb
mov
or
add
data16
lahf
arpl
fbstp
pop
jbe
ss
adc
cmpsl
or
or
dec
imul
int
push
xchg
add
cli
outsb
push
ret
jno
cmp
push
inc
pop
xchg
mov
and
mov
mov
out
out
adc
adc
jbe
andl
push
mov
mov
xchg
insb
stos
stc
xor
mov
imul
jmp
fnsave
sub
sub
xchg
fldenv
test
stc
sbb
inc
sbb
add
pop
bound
cs
mov
mov
inc
call
cmp
popf
xchg
cmp
mov
int
jne
sub
repnz
fdivl
shl
dec
jmp
lret
inc
cld
out
aaa
into
and
push
ljmp
inc
add
sub
jnp
inc
jp
int
dec
xchg
insb
push
aaa
call
loopne
push
ja
orb
cltd
lretw
pop
lret
std
and
mov
pop
aam
and
lret
mov
mov
loop
pop
jp
cmpsl
mov
adc
icebp
test
std
inc
pop
pop
jnp
mov
add
lret
mov
push
xchg
xchg
imul
xrelease
or
pop
mov
lahf
cmp
pusha
pop
or
lock
cmpsb
repnz
push
push
jno
shr
or
pusha
mov
mov
stc
ficoms
jecxz
add
xchg
mov
js
sahf
nop
or
ret
lock
lock
stos
cmpsb
lods
jno
lods
xor
test
loop
inc
cmpb
ja
insb
dec
sub
shl
pop
mov
lret
xchg
push
fidivrl
jnp
popf
ror
inc
push
iret
mov
xchg
mov
stos
push
ljmp
or
test
in
mov
inc
jecxz
repnz
push
js
test
fdivrs
pop
pop
jb
sub
adc
jbe
lahf
fs
push
andl
mov
mov
mov
push
mov
mov
movsb
mov
push
jge
pushf
add
adc
jg
repz
fcomps
lcall
iret
cwtl
inc
icebp
insl
xchg
mov
hlt
hlt
int3
push
lea
sub
mov
int3
and
mov
add
int3
movb
mov
lods
mov
mov
dec
cmpsb
jnp
lahf
stos
out
cwtl
sti
fdivl
test
loope
add
ds
sbb
jno
adc
push
dec
sbb
nop
inc
add
cmp
fwait
jnp
fldl
mov
aaa
jns
xchg
push
outsb
lret
insb
dec
andb
sbb
ret
aaa
bound
xchg
out
xor
aad
xor
lea
add
adc
shll
notl
inc
mov
cmp
pop
lret
add
cmp
jp
jg
leave
push
add
push
cmc
jle
outsb
cltd
inc
cs
xor
ret
cmovnp
jno
mov
movsl
incb
pushf
mov
xor
ljmp
mov
sti
xor
dec
cmp
push
pop
sbb
dec
push
pop
pop
mov
int3
xchg
cltd
xor
sub
aas
mov
xorl
shll
aas
pop
dec
sbb
and
inc
out
mov
inc
xchg
xchg
or
push
xchg
or
daa
pop
test
shr
adc
loopne
data16
inc
pop
stos
adc
out
xor
addb
push
fidivs
xchg
pushl
sub
icebp
jl
jl
xor
jae
enter
mov
pop
pop
sub
xchg
sar
adc
and
in
add
mov
xor
and
mov
leave
and
in
bound
call
sbb
shll
jne
pop
jmp
scas
xor
int3
mov
test
imul
ja
cmpsb
rorb
dec
imulb
mov
pop
sarl
sbb
fs
ss
shlb
cmp
xor
rcll
rcr
inc
stc
test
xor
sub
push
inc
or
push
adc
mov
ret
xchg
xor
push
xchg
out
mov
push
sub
cmpsb
ja
jne
repz
ja
lahf
aad
push
je
and
push
jb
imul
adc
push
stc
ljmp
mov
xor
decb
cwtl
xchg
cmp
dec
xor
ror
cwtl
es
loopne
out
mov
xchg
add
dec
add
test
or
lods
adc
sahf
ja
sub
stos
scas
imul
int
aas
ss
pop
push
dec
dec
push
shrd
mov
out
shll
mov
outsl
dec
into
lock
xchg
or
mov
sti
or
mov
fwait
push
stos
popf
dec
adc
popa
stos
pop
and
into
pusha
sarl
repz
mov
testl
sub
movsl
mov
arpl
pop
jle
daa
mov
lret
and
sbb
ljmp
cmc
push
push
xchg
subb
ljmp
ret
pop
adc
js
in
lock
arpl
bound
jb
je
sub
cld
sub
sbb
out
push
mov
outsb
in
inc
insl
push
add
jp
cwtl
lret
into
add
leave
cmp
popa
push
into
pop
mov
xchg
test
es
mov
mov
cwtl
outsb
roll
or
dec
test
arpl
sub
scas
mov
inc
mov
push
test
shlb
sbb
add
notl
push
nop
ss
sbb
xor
in
pop
cmp
pusha
or
pavgw
adc
test
fwait
lock
mov
outsb
mov
mov
data16
dec
cmp
imull
inc
pop
mov
leave
inc
aam
and
dec
mov
cmpb
jo
nop
jno
arpl
sub
stos
jge
mov
push
push
pop
ljmp
add
ljmp
ja
xchg
jecxz
cmp
int
mov
sbb
subb
pushf
cmp
dec
cmpb
loope
jecxz
adc
sbb
cmp
pop
test
mov
aaa
mov
xchg
cmp
stc
push
push
mov
xor
xor
mov
pop
cmc
adcl
cmp
xchg
cmp
adc
sarl
mov
xor
sahf
pop
xor
jno
jns
bound
jae
das
lahf
pop
lods
pop
push
imul
popf
hlt
sti
dec
jle
adc
popa
xchg
movsl
pop
fisubs
pop
lock
cltd
add
stos
sub
dec
mov
jo
aam
xchg
and
pop
inc
aad
pop
mov
sbb
push
int
jge
fnsave
push
cmp
xchg
mov
inc
adc
add
pop
pop
dec
jnp
jo
mov
shrl
add
loope
hlt
xchg
aad
cmpsb
jge
ss
mov
xchg
dec
pop
mov
xor
inc
ret
inc
add
pop
lahf
insb
pop
filds
aas
mov
mov
sbb
adc
and
mov
out
fldl
push
xchg
jecxz
lahf
inc
xorb
mov
stc
xchg
dec
and
cmc
push
testl
rol
fwait
sbb
add
icebp
pop
adc
ds
add
jl
testl
adc
lcall
push
out
scas
cmp
pop
fistps
xor
ret
scas
xchg
aad
fnstenv
adc
loope
sahf
into
jp
stc
lock
pop
popa
inc
sarl
jae
cmp
rcr
shlb
stc
jnp
dec
test
sbb
mov
mov
addb
movsb
fs
inc
stos
cmp
scas
iret
hlt
cli
or
mov
nop
mov
pop
ljmp
arpl
popa
loopne
loop
sbb
out
xchg
insl
add
pop
pop
pop
xchg
pop
push
and
pop
cli
sbb
imul
dec
pop
notl
int3
enter
mov
and
hlt
aas
out
nop
adc
mov
sub
xor
movsb
loopne
add
jp
fdivrl
or
out
js
lret
out
push
push
adc
sbb
sub
lret
sbb
jmp
pop
shl
cld
lods
lret
lcall
lret
ljmp
aaa
mov
shlb
scas
out
cmc
ljmp
mov
outsb
sbb
in
xor
clc
jp
dec
cmpsb
mov
mov
insb
popf
xchg
movsl
test
push
lret
lcall
dec
jle
lea
mov
inc
jle
leave
rclb
cmp
jg
mov
ret
mov
sbb
pop
xchg
fs
incb
xchg
insb
lahf
sbb
sbb
pop
out
jo
mov
sub
fsubrl
sbb
lock
cltd
push
pop
push
ret
xchg
out
aad
sar
fmull
arpl
rcll
and
jo
mov
jle
lret
icebp
jne
bound
das
fwait
sahf
ret
fndisi(8087
add
push
incb
xor
add
jge
add
or
into
xchg
imul
fcoml
outsb
stos
and
loop
push
cmp
jo
xorl
mov
sbb
inc
cmp
aam
rcl
inc
jecxz
ret
out
cmp
adc
inc
xorb
lahf
push
call
add
xchg
dec
ds
pop
lock
sahf
jle
daa
adc
add
pop
rcr
inc
in
sbb
dec
inc
mov
mov
jge
stos
gs
xchg
and
fstpl
imul
jle
call
sub
leave
filds
adc
jmp
imul
mov
ss
and
out
xchg
push
out
loop
push
addr16
lods
les
mov
test
jnp
push
lods
dec
lret
jp
fidivrl
data16
clc
jmp
aas
fnstcw
daa
jbe
sahf
aaa
enter
mov
xchg
sbb
hlt
dec
cwtl
clc
or
mov
xor
test
orb
insb
mov
adcb
mov
xchg
hlt
cmc
ficoms
sbb
add
pop
dec
fsub
jns
add
mov
xor
push
push
pop
mov
bnd
xor
fwait
adc
in
test
fisubrs
sbb
lock
adc
push
push
sar
insl
pop
xchg
std
test
into
jo
and
inc
loopne
push
clc
lcall
sub
add
pop
loope
pop
dec
das
mov
bound
orl
fsub
shrb
test
sbb
or
push
xchg
test
pop
cmpsl
or
cmp
fisubs
and
out
scas
push
jp
inc
out
aam
ficompl
and
adc
call
pop
dec
cs
inc
cwtl
sub
pop
mov
int3
adc
stos
fwait
repz
or
lods
mov
dec
stos
sti
mov
xor
filds
and
addr16
mov
push
adc
test
addb
test
pop
and
ror
lret
pusha
adc
out
shlb
negb
scas
rorb
movsl
mov
es
lahf
stc
add
fwait
repz
in
jmp
addr16
scas
fsubrs
scas
mov
xor
test
xor
pop
adc
cmp
xchg
movsl
scas
pop
cmp
pop
scas
cmp
mov
rorl
aaa
push
scas
andnps
xor
push
jmp
addb
adcb
sbb
pop
xor
push
out
sub
jb
int3
xor
add
dec
xchg
cmp
jp
enter
mov
jb
jne
mov
or
loopne
in
pop
in
dec
dec
mov
sub
xchg
sbb
insl
repz
pop
ljmp
das
outsl
and
mov
and
data16
sub
mov
cmp
xor
adc
sbb
mov
or
inc
fnstenv
mov
sub
and
push
dec
lcall
push
mov
pushf
divps
pop
imul
xchg
iret
jmp
filds
push
fimuls
adc
stc
lret
adc
loop
das
std
aam
xchg
pop
int
ljmp
sbb
cmp
and
push
push
xor
out
mov
int
popa
mov
pop
xor
sbb
pop
cmc
pop
jle
int
imul
divl
idivl
mov
icebp
pop
ret
mov
mov
lcall
lahf
inc
ss
clc
xor
xor
push
leave
ljmp
push
test
dec
loopne
imul
mov
rcrb
aam
test
mov
mov
dec
sub
test
xor
sub
mov
jl
add
ja
xchg
imul
mov
add
test
les
insb
inc
add
popf
cmpsl
dec
fsubs
jecxz
adc
cmp
adc
test
jb
into
pushf
or
mov
mov
sbb
and
sbb
xor
outsb
fidivl
enter
cltd
or
or
dec
jle
gs
jnp
rolb
mov
xor
dec
test
test
xchg
icebp
mov
dec
and
sahf
arpl
loope
push
mov
les
std
jg
lock
inc
cmp
out
fs
pop
xor
mov
push
outsb
fs
jecxz
push
jae
int3
loop
in
sbb
arpl
arpl
xchg
sti
stos
fcoms
mov
inc
out
push
sahf
cmp
arpl
in
inc
sbb
add
je
dec
sti
cmpsl
and
imul
stc
or
int3
popa
and
aaa
sub
sub
mov
out
std
mov
inc
int3
and
clc
adc
jne
enter
push
xchg
jl
rorl
xchg
push
lret
rcll
cmp
jle
mov
nop
pusha
adc
std
mov
pop
jmp
in
inc
subl
stos
ljmp
sbb
std
dec
call
ficomps
mov
push
ss
mov
push
in
jg
xchg
inc
pop
lret
mov
imul
test
inc
lret
hlt
pop
xchg
mov
xorb
sbb
enter
shl
aad
int
pushl
mov
pop
jle
std
push
sub
int3
fistpl
xor
mov
sbb
cltd
imul
mov
jecxz
in
mov
inc
inc
movsb
fsubp
das
pop
stos
in
test
fidivrs
testl
and
icebp
push
fs
cmp
inc
cmpsl
xchg
into
lods
and
add
push
and
or
aas
dec
sub
in
xchg
jb
xor
cltd
test
and
jbe
fstpt
cmpsl
cmpl
xchg
std
adc
cmpsb
xchg
lcall
out
xchg
add
mov
lds
aad
cmc
call
stos
push
dec
jp
clc
int3
scas
sbb
pop
insl
aam
aaa
xchg
int
push
and
mov
std
shr
rcrb
mov
jns
adc
je
add
lcall
sbb
cmc
push
movsl
arpl
subb
jp
jne
adc
into
aad
enter
adcl
or
daa
movb
daa
ja
adc
sbb
xlat
mov
shll
pop
sarb
jle
pop
sub
sub
xchg
js
adc
pop
lahf
les
add
cld
cmp
into
dec
aas
push
dec
xlat
in
out
pop
cmp
test
cmpsb
push
push
mov
xchg
sub
imul
ret
lret
mov
sahf
clc
loopne
bound
add
mov
xor
or
out
in
jns
js
add
or
test
xor
outsl
cmp
add
xor
and
pop
cmp
out
enter
mov
add
sub
add
jb
dec
outsl
nop
xlat
push
stos
sbb
idiv
xor
jecxz
xchg
mov
jp
and
cmp
mov
popf
adc
nop
pop
sub
pop
ss
ret
push
dec
shll
pushw
inc
cmpsb
cmpb
add
cmp
movsb
roll
ja
cwtl
loope
mov
outsb
cmc
sub
adc
aaa
adc
mov
or
lods
lret
repz
jge
and
mov
fidivl
jg
push
popf
lock
jge
aam
std
pusha
jbe
jecxz
mov
int3
push
sub
mov
ss
xor
cmp
jg
dec
inc
repnz
mov
cltd
push
lods
repz
movntq
ret
ljmp
dec
cmp
lret
xchg
scas
sub
pop
movsb
pop
fcompl
mov
mov
xlat
sub
pop
add
out
aam
jne
xchg
mov
xchg
inc
aad
lret
loopne
pusha
insb
mov
call
cltd
dec
dec
mov
jb
or
rcl
icebp
out
cmp
call
add
mov
pop
xchg
jbe
cltd
sub
jge
aad
aas
popa
mov
push
push
xor
dec
sub
into
nop
les
loop
inc
dec
mull
xchg
ss
mov
leave
add
sub
out
mov
imul
mov
xchg
and
pushf
mov
and
rorb
lcall
ds
dec
inc
nop
push
mov
jecxz
sar
arpl
cltd
adc
je
xchg
lods
dec
adc
xchg
lock
pop
nop
lds
cmp
arpl
cmp
gs
jbe
enter
std
mov
rorl
ror
jnp
repz
add
add
jl
lock
and
adcb
push
out
test
pusha
stc
mov
cli
testb
ror
movsl
sbb
push
jg
cmp
mov
sbb
scas
aad
les
aad
sub
jge
jmp
fdivs
shrl
cmp
test
into
pop
mov
cmp
call
mov
in
xchg
in
lods
sbb
inc
imul
insl
pushf
js
pavgb
mov
cmp
out
fs
mov
stos
test
jno
cld
xor
les
daa
ss
stos
push
test
cmp
shl
lock
dec
mov
fistps
rolb
pop
outsb
movsl
xor
jmp
pop
add
mov
stc
mov
icebp
mov
mov
mov
fstpt
fwait
sub
ret
jae
inc
rolb
mov
and
mov
stc
pop
ja
and
je
addr16
xchg
lods
jmp
or
jl
mov
sahf
cmc
frstor
cmp
inc
sub
cmpsb
rorl
leave
push
add
lds
sub
push
insb
push
cmc
mov
cmp
xor
push
bound
mov
xorb
mov
js
fmuls
lcall
dec
cmove
rcrl
and
in
fstp
and
out
jmp
lret
rorl
mov
popf
movsb
mov
stos
jnp
sub
ret
jmp
mov
or
aam
sub
lea
push
sub
mov
stos
jge
lea
add
jns
dec
mov
pop
inc
imul
mov
loope
jl
cmp
les
jnp
test
int3
jge
loope
fs
lret
mov
in
pushf
insb
int3
nop
pop
clc
sahf
pop
inc
cwtl
jge
lcall
jo
popa
mov
jecxz
aaa
sub
rorb
sub
icebp
lock
xlat
mov
mov
fwait
sti
test
je
inc
out
popf
xor
jl
scas
jge
mov
int3
mov
sub
enter
sti
je
in
push
hlt
jecxz
sahf
dec
mov
adc
mov
sbb
scas
rcll
push
sbb
popa
lock
mov
ja
mov
lret
xchg
ret
jmp
mov
out
push
testl
inc
xchg
mov
jnp
sbb
clc
xchg
sub
int
jnp
adc
sbb
push
out
ret
sbb
incl
es
fbld
mov
adc
bound
insl
cmpsl
sbb
xlat
sbbb
mov
sub
cmc
or
cwtl
xchg
imul
stos
fcoml
pusha
imul
jno
xchg
test
and
pop
scas
mov
sti
or
or
mov
mov
hlt
les
nop
inc
push
loop
cli
jae
and
cli
jne
and
mov
sbbl
push
inc
cmp
scas
mov
lcall
adc
lds
movsl
dec
movsb
stos
push
lret
or
jns,pt
mov
mov
and
ret
mov
icebp
and
sahf
push
enter
cs
cmc
mov
sbb
leave
jb
ja
xchg
in
and
out
inc
das
mov
inc
das
dec
int
iret
adc
imul
enter
jecxz
sub
push
dec
push
lods
testb
push
dec
pushf
cmpsb
add
scas
or
inc
in
push
jp
mov
xor
adc
jae
push
and
les
lcall
in
sbb
sub
dec
test
lret
arpl
aam
push
test
les
mov
jae
mov
xchg
or
popa
mov
fwait
mov
das
push
popf
mov
mov
stos
icebp
aam
les
lods
lock
movhps
arpl
sbb
shll
stc
cmp
mov
mov
push
insl
popa
enter
ds
in
test
xchg
sbb
psubw
mov
cmp
xchg
add
out
jmp
xor
mov
inc
clc
xchg
lcall
jne
fsubs
out
jecxz
xchg
dec
inc
mov
ljmp
and
int3
inc
cmc
and
cmovne
push
xor
ret
inc
cmc
pop
mov
push
xlat
push
adc
or
lcall
in
enter
xchg
fwait
ljmp
pop
cmpb
arpl
imull
fstp
les
imul
out
xor
insl
mov
xchg
aam
adc
data16
imul
push
xchg
mov
and
xor
adc
data16
sub
jb
shrl
jns
adc
sub
dec
lahf
mov
add
sti
stos
arpl
lock
fldl
mov
dec
lret
sbb
dec
fnstenv
aam
fstps
add
imul
add
subb
or
sti
test
repz
fnstcw
xor
in
mov
icebp
sti
cwtl
ret
insb
fs
incl
jmp
sbb
sahf
push
jg
dec
xorl
mov
mul
dec
aad
mov
addl
pop
jp
or
push
sar
inc
jns
movsb
sti
std
mov
adc
ja
aad
push
leave
mov
push
or
push
test
or
aam
pusha
flds
mov
push
imull
xor
repnz
sub
sub
adc
adc
xor
lret
pop
xchg
and
popf
lods
popa
loope
push
addl
and
add
add
mov
repnz
adc
cmp
test
xchg
cmpsb
sbb
jmp
jge
mov
test
ret
fdivr
cli
inc
aam
sbb
pusha
fstl
mov
das
cs
dec
add
arpl
xchg
fsubrl
into
imul
sub
mov
cmpsl
fwait
test
sbb
xlat
test
pop
es
mov
fidivs
enter
lcall
jp
push
and
in
rcl
jp
mov
dec
out
lods
cmp
adc
sbb
mov
cmp
mov
mov
pop
cli
iret
push
mov
iret
dec
popf
shl
fldenv
gs
adcb
imul
out
push
fnstcw
rcl
mov
fadds
stc
jle
inc
or
push
mov
pushf
sarb
pop
inc
pushf
es
mov
jle
jb
in
hlt
xchg
ficompl
ljmp
lock
rorb
mov
ficoms
mov
ss
sub
inc
lret
adc
lcall
push
push
inc
mov
sub
leave
pop
xor
inc
popa
xor
mov
dec
push
adc
dec
hlt
int3
out
sbb
sarb
dec
sub
lock
mov
in
ret
xchg
adc
mov
pop
repnz
fstps
inc
fmull
or
test
jnp
cmp
call
inc
fdivr
push
sahf
inc
outsb
aad
or
xor
imul
push
adc
fbld
aas
ljmp
lds
movlps
inc
lds
and
mov
call
mov
and
mov
sahf
adc
jg
push
cmp
gs
lock
pop
clc
sub
cmc
mov
push
mov
sbb
int3
and
mov
or
sbb
ljmp
in
out
adcl
popf
sub
sbb
pop
js
test
mov
and
aam
ret
push
pop
arpl
xor
shlb
movsb
shrb
dec
mov
ljmp
repnz
inc
adc
or
in
lcall
jle
jns
sub
arpl
sbb
cmp
pcmpeqb
mov
or
cld
fsub
adc
lods
enter
int
inc
mov
add
repnz
xchg
jno
enter
testb
xor
rcrl
outsb
dec
or
dec
xor
out
adc
pop
inc
inc
out
mov
mov
xchg
jl
mov
jae
hlt
or
aaa
xchg
dec
data16
repnz
aam
inc
in
popa
leave
inc
push
test
bound
add
jl
adc
and
cmpsb
inc
cmp
sbb
repnz
xor
pop
es
inc
xchg
stc
mov
push
jbe
cmp
daa
mov
mov
mov
outsl
pop
fs
xor
adc
inc
pop
cltd
fdivr
jo
jecxz
push
inc
mov
adc
insl
xchg
popa
daa
daa
sbb
dec
icebp
sub
adc
popa
push
inc
push
sub
pop
sahf
ja
cs
inc
cmc
xor
out
test
fimuls
test
mov
test
addl
fidivl
dec
fdivs
clc
xor
pop
push
rorl
xchg
pop
ret
jmp
mov
push
fldcw
test
stos
lds
mov
mov
jno
pop
popa
ficomps
out
aaa
lcall
icebp
push
jo
popf
cmp
cmp
call
push
rcll
test
mov
pop
adc
add
lods
xchg
adc
aam
aad
les
aad
pop
sub
dec
fldcw
stos
dec
dec
push
sub
jae
cmove
jno
divl
push
fdivrp
loope
call
adcl
jns
xchg
arpl
insb
and
or
and
lret
ja
ja
enter
fsubl
mov
mov
rcrb
scas
in
pop
jmp
inc
shll
push
loope
mov
mov
jo
les
pop
in
out
dec
mov
jne
pop
jno
fcoms
mov
jge
dec
enter
dec
sbb
lds
add
xor
sbb
data16
inc
scas
sbb
xlat
sbb
ficoml
xor
mov
dec
mov
mov
push
pop
mov
shl
mov
or
shrb
xlat
rcr
pop
adc
addr16
add
jl
sbb
test
mov
ret
aaa
mov
aas
add
jmp
dec
imul
jmp
fwait
sahf
cmp
pop
jmp
cmp
insl
and
adc
ficoml
fdivrs
sub
xchg
sar
incl
std
jne
mov
xor
pop
xlat
add
xchg
test
push
mov
popa
cmp
notb
jmp
fcompl
adc
xor
call
outsb
or
xor
popf
push
in
mov
jb
push
mov
cmp
xchg
inc
retw
adc
fwait
dec
jmp
pop
sbb
mov
testb
inc
nop
mov
dec
mov
adc
lock
loope
cmp
add
rolb
xchg
cmp
jno
or
mov
adc
loope
jge
jmp
hlt
and
loopne
pop
shll
push
lret
add
adc
and
adc
int
mov
mov
repz
fiaddl
jmp
sub
mov
xor
mov
jbe
jbe
xchg
pop
out
pop
jb
imul
movhps
insl
ret
jnp
ja
mov
mov
dec
outsl
fldln2
push
adc
mov
int3
lret
mov
xchg
cmp
ds
xchg
call
lcall
repnz
xor
pusha
jmp
sahf
dec
dec
ds
cmp
mov
inc
pop
out
cmpb
or
not
adc
movsb
js
into
mov
or
stc
leave
xchg
and
and
cmc
sarl
and
mov
int3
sbb
fisubrl
jg
mov
es
lds
push
addl
mov
mov
outsl
scas
loop
pop
pop
shll
mov
mov
lret
icebp
stos
push
xchg
adc
sub
filds
push
push
ds
out
xchg
sti
fs
out
shll
xor
movsb
les
inc
rclb
cwtl
or
les
xor
push
sub
shld
int3
xchg
push
or
xchg
test
stos
inc
or
xchg
test
pop
leave
movsl
shll
mov
fcompl
xor
shrb
push
hlt
in
xlat
xchg
add
nop
xor
and
mov
mov
push
xchg
push
lcall
int3
cld
and
and
imul
orl
cld
fcmovbe
ss
pop
das
jl
dec
popa
and
psraw
pop
cmpsb
mov
je
push
xchg
pop
dec
adc
test
mov
popf
inc
jbe
lock
and
push
movsb
and
and
sti
lret
sbb
push
push
dec
call
out
adc
mov
lds
cmp
jo
xlat
inc
lret
aaa
jle
arpl
jl
lahf
mov
xor
inc
mov
mov
mov
xor
jbe
mov
repnz
cmpsl
push
mov
xchg
jne
cmp
pop
mov
aam
orl
or
into
pop
lcall
sbb
mov
sub
jp
pop
mov
je
mov
gs
in
aas
jge
adc
sbb
push
out
cmpb
cltd
dec
jnp
sub
cwtl
ljmp
push
jge
pop
jo
pusha
mov
mov
lods
roll
sub
aas
fcoms
cld
aad
insb
fs
js
ljmp
cmp
mul
adc
inc
and
mov
cmc
aam
sub
mov
mov
add
xchg
cmp
cmp
les
cs
ds
or
adc
dec
xor
orl
push
sub
inc
and
push
xchg
push
cmp
pop
sarl
pop
jno
adc
out
loope
cmpsb
insb
pop
loop
add
out
scas
mov
mov
or
sbb
cmc
bound
sbb
fdivs
add
cmp
ja
aam
push
cmp
pop
pop
inc
lds
adc
fisttpl
pop
xlat
push
rorb
lcall
jle
adc
dec
fbld
hlt
jo
in
stos
jnp
jb
mov
sbb
jle
mov
or
in
nop
icebp
dec
mov
push
jl
dec
push
orb
add
adc
js
cmp
dec
dec
mov
xchg
icebp
pop
and
sub
add
mov
iret
cmp
adc
cmp
xor
rclb
lahf
mov
mov
movsb
mov
add
dec
jmp
sub
cs
pop
scas
cmp
cltd
jbe
xchg
imul
jl
push
inc
xchg
es
lods
adc
rolb
arpl
xchg
and
and
mov
pop
cmp
lock
mov
jge
xchg
leave
cwtl
push
sbb
aam
jb
mov
push
lods
pop
sbb
mov
addb
lcall
mov
das
xchg
push
cwtl
hlt
and
dec
ljmp
shll
outsl
rsm
xorb
or
jl
jns
outsl
loop
xchg
in
add
add
les
adc
sbb
je
add
inc
adcb
cmp
cmp
and
lea
push
mov
out
or
scas
cmp
inc
or
adc
sub
fiadds
or
into
je
xchg
je
inc
xlat
stos
push
stc
in
jp
xchg
scas
or
cmp
jno
xchg
mov
out
or
sub
test
mov
cmp
fbld
pop
scas
mov
push
dec
imulb
mov
cmp
out
and
dec
adc
push
xchg
xchg
xchg
xchg
xor
stos
and
pushf
loope
in
out
in
push
pop
push
mov
adc
pushf
sbb
ss
jns
mov
xor
pop
arpl
sub
mov
mov
push
imul
dec
mov
enter
pop
mov
sub
and
jne
mov
rorb
push
fmuls
movsb
mov
outsb
sub
loop
lcallw
sti
jns
movsl
xchg
test
scas
or
xchg
or
test
push
shrb
enter
sub
pusha
icebp
icebp
mov
ja
adc
or
rorl
mov
shll
push
sbb
lret
outsb
cmp
xor
cmp
mov
mov
cld
jge
xor
and
jg
loopne
jae
js
sub
xchg
inc
aas
loopne
in
sbb
lods
inc
pop
sti
pop
inc
pop
ss
push
les
xlat
mov
fstp
mov
adc
ret
push
fdivr
ljmp
pop
sbb
mov
lock
mov
and
shll
les
push
cli
lahf
lret
mov
xchg
sub
push
imul
daa
xchg
dec
jle
add
sub
dec
adc
dec
iret
inc
pop
aaa
and
dec
jg
xchg
and
rcll
out
jmp
jae
outsb
je
dec
lret
add
or
mov
sbb
mov
xchg
sbb
int3
in
ss
mov
inc
add
call
mov
cmp
insb
mov
mov
inc
repz
int
lcall
jg
mov
fimull
xor
inc
add
push
out
mov
pop
lahf
cmp
pop
rcrb
push
std
stc
adc
ss
in
out
in
shlb
push
cmp
sub
xchg
xor
sbb
cmp
push
fldt
ds
je
adc
imul
aas
push
push
inc
in
negl
inc
xor
rclb
cmp
sbb
cwtl
icebp
inc
subb
mull
jg
inc
rcr
ljmp
pushl
pusha
ret
imul
mov
push
enter
aam
loopne
mov
ss
repnz
loopne
iret
lcall
push
sbb
lods
xchg
testb
clc
sub
jmp
sub
inc
cs
push
aas
xor
pop
negb
inc
or
loopne
jp
lcall
ret
sub
jo
iret
cwtl
in
xor
pop
cltd
pop
fstpl
mov
xor
fildl
inc
rcrl
jp
pop
arpl
and
mov
outsb
pop
adc
jno
fsubrs
jge
dec
cli
or
push
sti
xchg
or
jecxz
inc
pop
or
repz
adc
jl
mov
fstpt
stc
outsl
lret
cltd
out
mov
mov
popf
outsb
xor
repz
sub
add
lea
into
adc
subb
cwtl
push
ret
pop
loopne
xor
pop
pusha
push
jmp
ficoms
cmp
mov
jbe
xor
ljmp
test
jge
sub
ffreep
pop
int3
xor
shrl
push
fstpl
xorl
xchg
cld
nop
in
jbe
mov
rcr
pop
xor
jmp
scas
pop
ljmp
push
scas
xchg
jne
dec
enter
sbb
aam
push
outsl
test
mov
mov
xor
iret
jb
cld
std
pop
outsl
dec
iret
inc
mov
and
cmp
pop
addb
add
scas
inc
pop
xchg
jmp
cmp
dec
iret
inc
orl
mov
fdiv
cmp
mov
push
push
inc
js
push
push
jb
add
mov
or
add
xchg
iret
sbb
rolb
pop
out
jle
js
mov
icebp
test
sar
xor
int3
das
sub
xor
inc
adc
and
cltd
test
dec
sub
or
movsl
in
xor
or
cld
call
and
add
inc
test
lea
stos
movsb
cmpsb
mov
fisubl
rorb
xchg
xchg
push
out
mov
pop
and
movl
xchg
insb
fadd
mov
push
test
and
adc
mov
dec
cmp
fcomps
in
mov
stc
xor
inc
add
xchg
jne
pushf
stos
inc
into
or
orl
movsb
cs
ljmp
or
imul
lds
jecxz
stos
adc
into
fwait
and
pop
mov
sub
pusha
inc
mov
sbb
xchg
cmp
mov
sbb
adc
cmp
adc
fcompl
add
hlt
fwait
repnz
adc
aad
mov
and
imul
clc
sub
jae
push
or
cmc
rorl
push
push
xor
rorl
filds
fs
push
adcl
and
test
mov
or
sahf
xchg
loopne
inc
stc
inc
pop
aaa
push
add
ficoms
cwtl
mov
pop
jns
ret
sub
xchg
loope
outsb
or
fwait
pop
dec
mov
jecxz
insl
pop
aaa
fisubrl
dec
stos
js
mov
inc
cmp
in
stc
add
subl
xor
decb
jle
mov
cs
mov
test
add
dec
shlb
leave
push
and
repnz
push
push
mov
mov
pusha
popf
dec
cwtl
jle
sbb
test
gs
popa
jo
xchg
dec
fisttps
and
cmc
in
int
or
mov
xchg
fistps
pop
xor
cmp
jl
mov
add
sbbb
sub
test
int3
aaa
outsb
mov
mov
inc
add
or
rol
int3
xchg
addl
mov
ja
jg
add
rcrl
xchg
cmp
fiaddl
add
jno
push
fidivrs
mov
cmpb
ljmp
pop
stos
lds
jns
and
rcll
push
outsb
sub
and
xor
nop
xchg
scas
mov
push
sbb
push
sti
into
rorb
aad
mov
mov
pushl
shll
pop
aad
cmpb
int
push
nop
inc
lods
popa
sbb
mov
and
pop
mov
push
jge
xchg
imul
xlat
mov
mov
adc
lea
stos
fnstcw
ret
push
int3
ljmp
lds
popf
shlb
rclb
stos
jmp
cmp
pop
jno
mov
jp
mov
push
pusha
adc
lahf
pusha
pop
popf
adc
loop
xor
push
cmp
push
repz
scas
sahf
dec
inc
jge
cmp
out
xor
lahf
cmp
imul
sbbb
test
add
aad
out
mov
dec
nopl
cld
xchg
stc
mov
movsl
and
les
dec
mov
cli
ret
call
xchg
fsts
xchg
lock
test
lahf
sbb
cwtl
cmp
adc
mov
or
mov
xchg
data16
fsts
je
loop
gs
clc
mov
jb
sti
lods
rclb
mov
jmp
icebp
lcall
cmp
daa
jnp,pt
inc
call
iret
pusha
xor
bound
mov
ja
in
aad
sbb
cmp
jnp
pinsrw
rorl
cli
mov
lods
add
lcall
int
test
lret
push
lods
pop
sub
cmp
enter
xor
jmp
test
add
mov
sbb
mov
xor
and
cmp
mov
mov
add
ss
mov
rorl
cmpsb
jo
lea
xor
and
pop
and
xchg
cmpsb
roll
push
es
clc
sub
sub
and
bound
sbbl
mov
push
jbe
push
pop
or
xchg
imul
push
mov
and
jns
pop
loop
pop
xchg
rcrb
mov
sub
icebp
sahf
hlt
mov
out
or
pop
daa
sbb
dec
dec
imul
xchg
ficomps
adc
xor
xor
ss
clc
add
lcall
inc
fimull
mov
jl
out
dec
ss
add
fildll
aas
jp
inc
adc
sbb
jne
ja
out
inc
rorl
xchg
out
mov
jnp
lret
pop
pop
inc
imul
stos
fdivl
mov
testl
dec
jle
add
push
jmp
xchg
xchg
xchg
popf
mov
movsb
xchg
rcrb
mov
ljmp
xlat
or
push
sti
test
ja
add
mov
subb
andl
or
sbb
xchg
inc
loop
push
sub
stc
or
push
fildll
lret
mov
inc
xor
and
jae
push
arpl
les
jo
pop
sahf
inc
addr16
inc
sbb
adc
sub
push
cmp
fnstcw
or
cli
clc
cli
dec
cmpsb
and
loop
adc
stos
arpl
pop
jmp
loope
mov
insb
movsl
lods
adc
mov
std
das
out
lea
repnz
sbb
gs
ficomps
gs
xor
pushf
jno
add
sbb
mov
pop
cmp
call
cmp
pcmpeqw
loopne
inc
cs
xlat
das
mov
cmp
cmp
sti
in
add
jo
icebp
push
aas
mov
xchg
fisubrl
push
mov
pop
inc
loopne
ficoms
jnp
adcl
pop
repz
movsl
mov
outsb
lret
jge
pop
lret
fsubrs
push
adc
movsb
cmp
push
xor
fcmove
jns
data16
or
les
inc
lock
inc
arpl
les
cli
dec
hlt
leave
xor
adc
mov
repnz
pop
add
sahf
imul
sbb
rcll
cmp
fsubrs
sub
add
xchg
in
jo
cmp
adc
es
imul
inc
ficompl
cmc
stos
aam
int3
gs
jnp
mov
xchg
testb
or
mov
repnz
sbb
sbb
shrl
bound
lret
push
inc
xor
mov
ds
sbb
popf
fwait
stos
mov
sbb
pavgb
orl
mov
mov
movsb
xor
xor
xor
mov
and
dec
mov
das
xchg
cmp
aas
subl
jmp
xor
xchg
daa
lret
or
adc
mov
sub
int
int3
pop
ja
sub
movb
aad
cli
or
cmpb
ljmp
push
jle
jecxz
cmp
xchg
cmp
cmc
or
rorb
cli
xchg
fisubl
push
dec
divl
es
adc
xor
push
mov
mov
pop
les
outsb
push
bnd
dec
addr16
jb
sbb
mov
sub
les
and
cmp
or
adc
mov
jo
sbbb
pop
and
dec
ret
lods
outsb
jecxz
rcrb
arpl
pop
pop
jmp
mov
jle
xchg
push
cmp
xchg
lcall
dec
pusha
movsb
mov
dec
push
mull
jbe
out
and
or
vmwrite
or
xchg
out
data16
or
mov
call
mov
fidivs
mov
pop
out
cmp
xchg
scas
outsl
inc
ss
sub
and
xchg
clc
dec
push
call
and
mov
cmp
sbb
in
xchg
push
arpl
xlat
insl
cld
push
xchg
lret
sbb
xchg
mov
mov
sbb
sub
test
ja
sti
out
mov
lret
dec
stos
lock
cmp
addb
inc
fstpl
les
cld
jb
inc
sub
in
addl
add
adc
xor
mov
mov
adc
cli
insb
loope
es
dec
roll
imul
movsb
addb
rcl
sub
sti
ja
jne
push
sbb
lea
out
sub
sub
js
pop
push
and
mov
and
jecxz
mov
push
lods
cmpb
or
adc
mov
mov
add
movsl
jecxz
mov
sub
cwtl
rorl
add
ja
insl
mov
dec
movsb
jmp
cmp
mov
sbb
jnp
sahf
cmpsb
jno
lcall
mov
iret
push
jnp
add
mov
insl
mov
mov
jg
out
jp
dec
inc
push
pop
es
xchg
sbb
sub
jmp
stos
insl
sar
sub
sub
sarl
and
push
nop
ret
lea
and
jl
ljmp
push
lods
sti
inc
xor
jae
loop
popf
or
sbb
lcall
jecxz
lock
cli
inc
push
mov
inc
cltd
mov
mov
jg
push
in
inc
hlt
dec
jnp
mov
push
adc
js
xchg
movsb
repz
scas
mov
leave
sbb
jne
stos
xchg
imul
ds
sahf
xor
xchg
mov
cmp
cmp
sbb
clc
bound
push
xchg
and
nop
sbb
imul
loope
fdivrs
sti
lea
test
xor
fldl
popl
cmp
jb
jmp
cmc
test
jmp
mov
popf
mov
int
in
insl
xchg
or
loope
subb
xchg
sbb
in
and
pop
in
or
ret
cmp
jle
mov
mov
inc
push
xor
sbb
les
stos
add
insb
adc
jl
cmp
mov
sar
icebp
cmp
out
jbe
scas
inc
clc
lret
pop
pop
shr
in
add
and
mov
in
lds
sbb
ret
inc
or
repz
jmp
pop
push
rcl
add
pop
add
adc
jge
mov
jp
push
imul
cmpl
dec
jle
xchg
and
sub
lcall
scas
dec
popf
imul
stos
cvtdq2ps
xchg
mov
adc
push
fistpll
xor
adcb
ljmp
pop
out
adc
pop
and
insb
xchg
or
insb
push
in
out
push
sbb
mov
cmp
adcb
or
fwait
in
mov
push
inc
ja
or
inc
xchg
jg
fstl
jne
jg
cli
ret
mov
mov
and
jnp
popf
push
sbb
data16
and
jle
imul
stc
xchg
repz
test
scas
fmuls
dec
loopne
mov
or
jl
fcompl
dec
add
sbb
dec
es
ret
jns
lea
inc
and
pop
movaps
xchg
jmp
js
test
mov
shrb
and
popa
xor
mov
mov
aaa
imul
out
pusha
lcall
xlat
mov
bound
adc
mov
das
ss
xchg
shr
mov
divb
xor
imul
lret
cmp
xchg
or
leave
jne
mov
repnz
lods
cmpsl
sbb
mov
call
inc
int
fucomip
cs
mov
mov
add
rcrl
nop
cmpl
xor
pop
mov
rclb
mov
ss
sub
sub
push
ds
xchg
adc
pop
xchg
test
mov
ljmp
shlb
jl
sbb
mov
add
sub
leave
insl
mov
pop
sti
pop
ss
in
push
aaa
pop
jne
push
add
cltd
jnp
adc
out
push
clc
xor
ret
jo
loope
stc
mov
jecxz
ljmp
add
xor
or
cmp
movsl
mov
cmp
jbe
into
sub
jge
mov
leave
sahf
lret
addr16
les
jbe
add
inc
arpl
pop
xor
bnd
sbb
div
ja
add
xor
rorb
fs
lcall
in
fistps
ljmp
cmc
push
loope
mov
lahf
mov
inc
lock
pop
repz
ja
ja
sbb
push
lcall
push
lods
pop
test
or
xor
fisttpl
mov
xor
and
sub
in
aad
pop
shr
iret
enter
jno
dec
fistpl
in
mov
out
mov
fstl
mov
stos
rclb
adc
push
addb
cmp
adc
aad
jne
sbb
popl
into
xor
inc
std
cmp
ret
cmp
sti
mov
incb
scas
fdivr
out
jle
pop
and
ud2
mov
in
push
cmpsl
jbe
ljmp
clc
testl
mov
mov
roll
pushf
aaa
std
cli
xchg
jne
cmc
dec
xchg
mov
push
jmp
in
push
dec
fcompl
in
roll
sub
dec
dec
mov
mov
addb
xor
jp
pop
scas
add
inc
inc
mov
ss
cmp
adc
adc
mov
push
cld
ss
fwait
cltd
movsb
push
nop
jns
xchg
pushf
popa
push
sub
int3
iret
lds
hlt
les
lods
sub
jmp
in
loopne
and
pusha
fldcw
xor
inc
call
pop
jmp
test
test
mov
adc
sbb
in
aas
sub
cmp
jnp
dec
lret
or
test
mov
jmp
repnz
inc
sti
pushf
dec
add
bound
std
pop
loop
loope
mov
popf
jns
dec
xchg
inc
adc
data16
fsts
fdivrl
outsb
inc
and
loop
pop
push
into
incb
test
icebp
add
in
xlat
int
cmpb
add
pushf
xor
push
icebp
cmp
add
scas
pop
scas
jb,pt
in
fwait
adc
mov
fidivs
push
pop
cmpsl
pop
scas
sqrtps
test
ret
mov
sub
and
arpl
bound
jb
cli
loope
sbb
fs
arpl
lds
xor
add
xor
dec
sub
push
mov
imul
int3
ret
repnz
mov
ret
stc
sbb
jg
sbb
mov
lock
ss
hlt
dec
or
mov
mov
dec
push
and
push
movsb
xchg
push
cmp
popf
sbb
cs
mov
cmpl
adc
in
fsubl
cli
cmp
mov
ja
iret
jp
mov
jecxz
aad
scas
fwait
fisttpl
dec
out
or
shlb
sbb
lcall
xchg
lret
cmp
daa
jbe
mov
cmp
jo
scas
or
addr16
adc
bound
cmp
out
gs
int3
cmc
hlt
mov
fisubs
movsb
fcmovnu
fcompl
cmpsb
sahf
xlat
xor
stc
movsb
ss
xor
inc
hlt
loopne
inc
dec
cwtl
mov
test
mov
sub
in
pop
sub
clc
cmp
inc
cltd
cmp
pop
push
push
add
sub
mov
sub
dec
fistpl
jns
jno
sbb
inc
mov
lret
sbb
jp
in
adc
jae
inc
ret
and
dec
arpl
pop
xchg
pop
leave
das
or
xlat
add
mov
jns
jo
cmp
fisubs
rcr
jl
adc
and
cmp
sub
and
and
sub
lahf
rorb
cmp
inc
fmuls
scas
loope
das
clc
add
sub
xor
mov
mov
ret
mov
out
int3
and
mov
cmp
push
jo
xchg
imul
movsb
stos
inc
xchg
rcrb
imul
ret
mov
cmp
pop
fbld
pop
fisttps
cwtl
pop
jae
adc
push
xchg
jne
test
repz
push
xor
mov
ret
pop
sbb
sub
int3
mov
ljmp
or
inc
inc
das
cmpsl
cmp
lock
jmp
mov
negl
sub
jb
xchg
subl
flds
scas
in
and
cmpsl
pusha
int3
xorl
int3
jmp
push
in
dec
mov
out
add
jp
hlt
push
fwait
mov
into
mov
stos
cmp
sub
daa
and
fwait
push
repz
dec
rorl
pop
pop
lea
push
shlb
mov
mov
negb
dec
inc
mov
ret
arpl
pop
aad
jg
in
xor
jnp
ret
pop
decl
mov
xchg
cwtl
addl
fwait
and
inc
decl
xor
fidivrl
in
mov
aas
mov
loopne
push
pop
lds
lds
mov
rcrl
ret
mov
pop
jo
xor
xorl
mov
out
into
or
sub
aaa
andl
or
insb
lods
push
fwait
add
out
or
notl
sub
sbb
jnp
nop
scas
xor
jno
add
push
mov
lea
pushf
or
mov
dec
hlt
jmp
jnp
daa
dec
xchg
fsubrp
xchg
adc
sub
test
cs
jns
cmp
inc
push
pushl
xchg
rorb
imul
das
mov
mov
cmc
ret
mov
sarl
iret
xchg
or
mov
xor
test
mov
js
add
popa
mov
xchg
add
ret
add
test
push
outsb
dec
or
stos
push
adc
cmp
push
mov
xor
dec
outsb
movsl
clc
fimull
cmpsl
push
pop
lods
out
mov
or
xchg
sbb
and
mov
mov
pop
lds
shlb
xchg
and
xor
js
adc
lahf
pop
jmp
test
inc
pop
andb
lret
aam
xchg
mov
and
push
fwait
jge
lods
subb
lock
adc
xor
or
sub
pop
ljmp
jne
lret
lock
rol
push
dec
and
mov
xlat
andb
xacquire
and
mov
or
fiadds
bound
lahf
fwait
in
mov
and
cwtl
scas
les
push
dec
seta
shrl
clc
and
repnz
jnp
sub
dec
es
fwait
and
mov
cmpsb
inc
add
pop
xchg
or
ret
ret
jl
push
pushf
fwait
inc
out
and
jns
cmp
dec
sbb
xchg
lods
mov
push
out
dec
mov
jp
push
testl
js
rol
das
push
mov
sub
xor
jnp
in
call
negl
sbb
cmp
cmp
lea
push
es
jecxz
movsl
add
frstor
mov
xchg
popf
loop
mov
lcall
clc
add
adc
lods
inc
xchg
popf
or
in
imul
jbe
cmp
mov
push
pop
xchg
iret
lret
in
xchg
adc
and
xchg
fldenv
add
mov
faddp
aas
loope
lret
ja
cld
push
mov
cmpsb
xchg
mov
add
sarb
mov
imul
test
mov
loope
lcall
fsubl
jp
dec
not
or
mov
pop
dec
shrl
pop
mov
bound
mov
lock
jnp
fadds
mov
scas
popl
rorl
adc
pop
jmp
lock
loopne
fcmove
mov
out
lods
xchg
dec
out
arpl
test
ja
mov
xlat
aaa
jmp
mov
stos
shll
stos
insl
push
or
mov
leave
lret
jecxz
dec
xor
out
icebp
or
popa
dec
mov
movsb
push
adcb
fcmovbe
push
inc
push
imul
insw
mov
push
insb
popa
push
sbb
mov
sub
addr16
push
sub
xor
mov
inc
mov
fstl
push
mov
lds
insb
fldenv
or
xchg
push
jmp
shr
pmullw
lods
gs
andb
nop
mov
andb
mov
mov
repnz
pop
add
clc
imul
push
test
dec
insb
clc
leave
mov
fsubl
jne
push
ficompl
shr
push
faddl
stos
into
pop
fiaddl
popf
dec
sub
or
scas
hlt
out
sbb
scas
repnz
pusha
cmc
stos
or
es
aad
mov
xchg
int3
clc
icebp
ret
stos
clc
clc
mov
sub
out
mov
movsb
jns
dec
inc
dec
insl
ror
lds
lea
fstps
jmp
outsb
xchg
sub
fimuls
inc
push
push
fisubs
iret
and
pop
mov
inc
in
test
xor
pop
or
es
jbe
in
dec
xchg
call
dec
pushl
inc
stc
out
out
mov
decl
adc
ss
and
sbb
inc
mov
or
arpl
fisttps
test
mov
loopne
add
clc
or
neg
mov
aam
call
mov
push
jbe
jg
or
push
and
xor
jae
sti
outsl
pop
push
fs
and
sub
notl
cmpl
sbb
cmp
jbe
jg
jl
mov
sub
fldenv
leave
mov
xchg
je
and
insb
das
pop
dec
mov
xchg
push
mov
and
sbb
fdivrs
mov
sti
or
pop
lahf
mov
sub
mov
jle
inc
das
pusha
sub
sbb
mov
jo
pop
inc
shrb
xchg
test
mov
lret
xchg
cmpsl
addr16
das
imull
cmc
xchg
ficoml
int
sbb
iret
mov
out
shlb
pop
sbb
xor
and
orb
xor
pop
rclb
jns
add
psrlq
insb
mov
pushf
mov
jg
add
loopne
clc
faddl
in
add
jbe
xchg
xchg
fmulp
fisttps
push
xchg
dec
scas
mov
ret
loop
mov
and
or
negl
outsb
fwait
and
inc
sub
dec
push
or
or
cwtl
pop
stos
push
mov
leave
rcrl
cmc
daa
addr16
inc
inc
dec
xor
stc
push
movsl
jge
negb
xor
dec
sbb
stos
fldenv
jle
xlat
jl
mov
cmc
leave
iret
pop
das
test
out
jmp
adc
int3
lods
insl
xlat
jl
and
std
mov
xor
insb
push
popa
ret
sbb
add
add
imul
pop
divb
or
mov
inc
int
sub
imul
stc
gs
cmp
mov
flds
lock
int
sub
and
inc
mov
pop
cs
cmp
stos
xchg
into
add
ljmp
mov
lds
xchg
cld
or
repnz
push
jle
pop
inc
inc
or
loopne
push
adc
into
shll
mov
loopne
mov
insb
pusha
and
inc
adc
pop
lahf
dec
idivb
out
popl
and
rcrl
mov
shll
nop
icebp
repz
cs
xchg
cli
sarl
bound
pop
lds
in
push
ss
sbb
mov
xchg
scas
and
jne
push
adc
stos
cmc
adc
mov
aad
rclb
or
std
jbe
mov
pop
and
or
das
outsb
add
mov
add
imul
xchg
jmp
les
insl
inc
bswap
pop
repnz
imul
subl
clc
stos
call
cwtl
stc
mov
fs
dec
inc
jns
push
movsb
pop
in
sbb
popa
xchg
dec
pop
leave
add
scas
xchg
int3
or
faddl
jg
popf
or
add
call
fwait
jp
ret
into
pop
test
nop
jae
xchg
inc
fistpll
into
cmpsb
inc
xlat
mov
ja
push
and
clc
or
xchg
add
ret
mov
mul
xor
xor
or
cmp
mov
cs
pop
pop
and
lods
xchg
std
cmp
es
outsl
lahf
test
leave
arpl
push
in
shrb
xchg
sbb
push
lret
in
inc
push
test
mov
xlat
in
mulb
fstps
pop
pop
mov
and
add
sbb
ficompl
mov
stos
mov
ret
out
jb
mov
jae
cmp
and
push
inc
gs
cmp
lret
xchg
out
mov
inc
pusha
jo
lahf
adc
shl
frstor
dec
mov
jge
add
out
sub
or
lahf
push
fidivs
pop
mov
es
movsl
mov
mov
movsb
aam
mov
stos
lock
jo
popf
out
dec
and
lret
fidivrs
and
mov
mov
lcall
mov
dec
js
out
lds
pop
adc
xchg
sub
add
push
lahf
add
test
or
dec
xchg
clc
popa
pop
xor
jle
sbb
ret
xchg
xlat
inc
leave
pop
mov
fiadds
test
lods
orl
dec
adc
aas
and
pop
pop
jmp
fidivrl
jne
loop
xor
ret
cli
and
stc
jl
pop
cmpsb
adc
sbb
cmp
or
dec
loopne
iret
mov
push
in
pusha
sub
mov
fisubrs
aad
xchg
mov
in
sbb
mov
adc
sub
sahf
mov
sbb
mov
sub
sub
das
and
stos
lods
fldt
and
das
movsl
dec
out
mov
arpl
jge
jbe
cli
jge
and
sub
sub
push
jnp
stc
cltd
or
mov
scas
push
adc
cmp
imul
dec
leave
arpl
sbb
jg
inc
mov
push
sbbb
push
sbb
add
dec
mov
fwait
in
repz
push
xchg
add
vpsubusb
inc
xlat
int3
ss
and
jg
jge
mov
test
xor
mov
sub
xchg
cmpsl
call
and
fwait
bound
sub
push
mov
shlb
leave
jbe
jns
pop
out
ja
insb
add
nop
scas
bound
in
testl
add
call
lds
mov
cmp
jge
hlt
jge
bound
iret
adc
rcrl
sbb
mov
sub
add
loop
cmp
sub
jbe
test
ret
mov
out
icebp
rcrb
xor
icebp
loop
mov
stos
fst
or
sarl
mov
sub
mov
lret
cmp
xor
lahf
mov
mov
aas
pop
add
mov
stos
loope
xchg
cmp
jge
add
mov
les
mov
das
pop
pop
jle
and
jbe
testl
inc
sbb
xor
sbb
jge
call
sbb
or
cmpsl
jmp
push
sbb
fistpll
cltd
outsb
add
pop
sti
dec
shll
push
jne
cli
arpl
cmc
std
xsavec
insl
cmp
jae
pushf
mov
pusha
cmovl
lock
jmp
loope
xchg
pushf
inc
mov
movsl
fstpl
jl
xor
fs
adcb
loope
andb
movl
mov
push
adc
mov
lods
imul
stos
xchg
mov
pop
not
movsl
and
xchg
fmulp
and
sbb
and
inc
pop
mov
adc
sub
cmp
cmp
std
stos
push
mov
xor
sub
cmpsl
fcomp
lcall
push
and
dec
sbb
xor
xchg
sbb
nop
cmpsb
ret
or
cmpl
pushf
outsl
xchg
xchg
les
ljmp
or
cmpsb
test
out
aam
mov
push
in
pop
movsb
dec
adc
jecxz
ds
lcall
pop
ja
cmpsl
fs
inc
ljmp
hlt
insl
aad
outsb
repnz
cmp
xor
nop
jne
je
xchg
add
push
or
sbb
bound
rol
mov
sti
enter
cmp
rol
roll
in
popf
adc
lods
imul
fildl
xchg
jne
orb
pushf
shll
hlt
push
shlb
adc
xchg
and
xchg
jl
jecxz
dec
shll
xchg
test
jge
nop
ret
jne
add
std
pusha
imul
pop
cli
mov
mov
xor
movsb
icebp
data16
cmpsl
popf
cld
adc
mov
mov
int
jmp
mov
cmp
xor
bound
std
mov
fmuls
test
push
stos
pop
push
cltd
add
in
push
sbb
push
fnstsw
ret
add
mov
addr16
dec
adc
ficoml
popf
add
add
mov
xor
lret
jo
push
ficoms
pop
cmp
mov
xchg
lret
sarl
jo
cld
outsl
loopne
push
and
data16
insb
andb
inc
leave
pop
fwait
jo
push
mov
fildl
rclb
in
mov
xchg
out
sbb
adc
sbb
repz
mov
or
cmpsl
mov
idiv
xchg
in
icebp
lods
addr16
add
fnsave
loopne
outsb
leave
lock
and
insl
stc
add
mov
add
jg
or
jne
je
and
push
adc
mov
or
ljmp
jns
inc
mov
test
adc
test
insb
pop
adc
pop
xchg
arpl
dec
scas
jns
xor
or
pop
mov
fs
sbb
inc
dec
sbb
push
test
scas
inc
stc
outsl
xchg
fistpll
cli
aad
jb
mov
int3
into
inc
cmp
jle
mov
xorb
movsl
xchg
std
push
enter
fdivs
mov
hlt
inc
pop
in
jne
int
sub
mov
insl
movsl
add
rorl
pop
push
not
adc
mov
test
pop
insl
jo
mov
pop
insb
push
shll
xchg
idivb
mov
leave
scas
jle
sub
and
cmp
movsl
std
cmp
sbb
ljmp
shl
pop
orl
dec
xchg
pushf
cli
orl
cmc
dec
enter
jne
xor
es
jnp
or
mov
lds
shlb
ss
jmp
aad
popf
call
jg
and
sbb
fwait
push
jnp
push
xchg
xorb
lea
int
lahf
jo
inc
iret
cmp
xor
adcb
jb
popa
push
mov
sub
push
sbb
dec
adc
xorb
jmp
lock
sub
mov
jge
pusha
iret
mov
sbb
je
rorl
sahf
mov
cmovns
xchg
cmp
pop
sbb
rcrl
insb
jnp
add
jnp
pop
cmpsl
gs
ret
mov
clc
mov
sbb
rclb
push
add
insb
mov
call
jg
ret
daa
mov
inc
notb
push
xchg
sbb
push
cld
data16
imul
inc
lea
cld
sarl
icebp
push
push
pop
dec
jl
or
jo
call
and
push
sbb
outsl
out
mov
dec
xchg
mov
test
shrb
dec
imul
ror
aam
sub
iret
mov
xor
aas
jecxz
jmp
inc
lret
outsb
pop
jbe
pop
addr16
adc
mov
test
push
jne
popf
sub
add
inc
pushf
lret
pop
push
cli
mov
jno
xor
and
aad
jecxz
pop
movsb
iret
sbb
jno
std
rep
ficoml
mov
pop
xchg
pop
sbb
mov
sub
icebp
mov
xchg
cwtl
mov
pop
pushl
mov
mov
mov
adc
icebp
gs
mov
inc
push
sahf
repnz
bound
push
push
jno
cmp
stc
push
mov
cmp
adc
frstor
and
lea
sbb
fs
xchg
mov
subl
pusha
mov
add
cmp
mov
pusha
les
nop
cmp
outsl
jle
mov
dec
xchg
xor
xorl
out
scas
imul
and
mov
pop
and
jb
inc
mov
mov
ss
xchg
pushf
insb
pop
and
sarb
jb
add
insb
loope
and
push
es
test
mov
sqrtps
icebp
jg
xor
imul
jmp
sbb
mov
das
cmp
pop
scas
sbb
xchg
scas
js
pushf
sub
das
daa
adc
push
sbb
mov
mov
xor
pop
mov
outsb
push
in
icebp
adc
cmp
lahf
push
xchg
inc
lock
lahf
insb
sub
into
sbb
push
push
int
jl
fucom
push
push
inc
sub
xchg
xor
push
pop
int3
fs
jge
push
push
out
pop
and
movsb
xchg
xchg
sahf
cmp
sub
jl
in
int
adc
mov
pop
mov
inc
cmp
sar
cwtl
cld
push
ljmp
popf
xor
pushf
ret
push
xorb
incl
lea
pop
mov
xor
jecxz
cli
sub
inc
or
adc
mov
fnstenv
movb
inc
rcrb
mov
or
das
jmp
cmpsb
push
sbb
iret
out
or
sbb
mov
push
fnstsw
push
iret
lods
shrl
enter
fbstp
sti
rcr
insl
imul
jae
adc
pop
pushf
adc
and
lods
scas
and
test
xchg
jmp
rolb
and
dec
xor
icebp
xor
sbb
fistpl
enter
sahf
gs
dec
sti
push
in
popa
repz
xchg
nop
xlat
addr16
cmp
xor
dec
scas
clc
xor
iret
leave
push
mov
aas
inc
pop
xor
stos
xchg
sbb
scas
addr16
add
fmuls
fisttpl
out
dec
or
mov
xchg
add
es
or
push
pop
xor
xlat
add
sub
ffree
pop
dec
mov
call
outsl
adc
arpl
in
cmpsl
loope
fwait
aas
mov
cwtl
shrb
mov
jle
movsl
sub
in
cli
idivb
pop
lret
pop
xchg
xlat
out
xchg
jnp
stos
pop
dec
push
inc
mov
mov
cmp
dec
cmp
sti
push
js
jo
in
nop
out
scas
hlt
jp
sub
sahf
out
inc
cmpsl
cmp
aaa
out
mov
mov
jecxz
loope
push
inc
cmp
aaa
xor
jmp
sarl
mov
mov
sbb
call
mov
sub
push
clc
mov
jb
notl
out
or
inc
sahf
insb
andl
jns
bound
outsl
push
inc
lds
out
pop
sbb
or
or
dec
out
ja
and
insl
jb
sbb
xor
into
lock
repz
mov
arpl
pop
mov
jo
cld
and
lahf
cmp
enter
int
adc
inc
repnz
enter
ret
push
icebp
dec
addr16
popa
push
jnp
lods
lahf
mov
jo
xor
shrl
into
inc
and
pop
add
vpmaxub
fwait
push
adc
or
jl
popa
cltd
add
loopne
out
rorl
in
lret
sub
es
dec
ljmp
or
inc
test
sbb
negl
ret
ljmp
call
out
scas
dec
sti
mov
bound
adc
jmp
fisttpll
push
imull
sub
jg
mov
xor
pop
test
xor
push
cmp
sub
cs
sub
xor
aam
cmp
dec
mov
lds
cwtl
inc
mov
lods
jo
bound
push
das
xor
cld
push
lods
jmp
mov
repz
mov
clc
stc
jbe
jmp
sbb
rclb
mov
and
movsl
lock
iret
js
shlb
lcall
pushf
out
test
paddw
mov
in
xor
jg
and
icebp
roll
sbb
xor
mov
outsl
out
push
stos
in
repnz
stc
shll
stc
mov
push
inc
mov
mov
inc
das
mov
leave
and
cmp
sub
cld
cmp
mov
jno
cltd
call
mov
sbb
jo
out
jl
cwtl
fnstenv
cmpsb
lods
in
xor
mov
mov
add
pop
cmp
push
cmp
addr16
imul
lahf
in
mov
sarl
rorl
aam
sub
add
mov
ficoms
jmp
sahf
xchg
inc
test
jle
lahf
imul
int
ljmp
in
adc
adc
cmc
shll
cmpb
aam
jge
mov
ds
mov
adc
add
lcall
sub
call
jbe
in
test
xor
sbb
xor
fdivl
stos
cmc
xor
test
mov
scas
pop
rcl
or
sbb
mov
shlb
pop
pop
or
add
mov
std
push
mov
sub
imul
cwtl
mov
mov
cmp
fyl2x
mov
shr
cltd
shrb
mov
xchg
pop
and
xchg
push
xchg
les
mov
push
ljmp
or
push
outsb
call
pop
subb
leave
pop
mov
out
dec
xchg
dec
cmp
out
sbb
ss
mov
push
mov
stos
fdivrs
daa
dec
xchg
mov
mov
adc
clc
repnz
jns
out
mov
pushf
adc
adc
scas
inc
push
subl
repz
out
xchg
das
in
out
pop
sub
adc
inc
cmc
rcrb
and
rcr
sahf
xor
cmc
test
test
dec
sbbb
nop
int
movsb
ljmp
je
add
fwait
mov
stc
lods
insl
xor
add
sub
or
sub
test
xchg
lcall
add
int3
push
xor
or
pop
fdivrp
sub
push
mov
push
push
fsubl
jbe
inc
bound
mov
xlat
jne
push
int
xchg
stos
lock
or
test
jle
cld
jp
jecxz
mov
push
ljmp
mov
or
mov
push
pop
aas
int3
jae
jns
dec
in
leave
jl
mov
pop
pop
cmpsl
xchg
rorl
and
repnz
xchg
add
push
test
sahf
div
cwtl
sub
dec
jns
testl
jae
sub
aaa
ja
stc
insb
lret
je
jl
data16
jnp
push
cmp
jmp
aad
sarb
test
cmp
incl
xor
out
test
xor
outsb
les
bound
dec
aam
xchg
mov
adc
xor
jnp
bound
test
cmp
movsl
cmp
fistpl
xorb
lods
mov
inc
adc
adc
out
or
lret
bound
daa
dec
inc
mov
adc
push
add
pop
int3
into
divb
adc
cld
xlat
or
shrb
adc
and
mov
out
mov
std
mov
lock
mov
jo
aas
lds
aas
pop
jbe
out
push
stc
jb
and
mov
mov
mov
sub
cmpsb
push
scas
xchg
and
in
xchg
sbb
push
dec
mov
sbb
lds
sbb
repnz
add
add
fnstcw
inc
mov
jecxz
xor
cwtl
clc
dec
adc
pop
push
inc
cmpb
adcb
cwtl
in
mov
mov
das
add
lahf
insb
sbb
add
and
cwtl
and
inc
mov
cli
es
xor
aaa
iret
imul
pop
jle
pop
pusha
lods
pop
pop
lds
push
pop
jbe
jne
popa
xchg
shr
icebp
rorl
cwtl
sti
movsb
movsl
lds
ds
inc
arpl
stc
and
ljmp
push
sub
jp
xorl
ljmp
xor
mov
mov
lods
push
jg
add
jge
mov
std
inc
cmc
dec
pop
jl
jmp
bound
push
dec
push
out
inc
mulb
and
mov
movsl
cmp
xchg
fisubrs
pusha
std
mov
ss
jne
sub
inc
pop
imull
xchg
cmpsb
mov
adc
jmp
and
inc
cmc
mov
push
insl
pop
cmp
shl
in
jle
cltd
rolb
inc
dec
out
inc
ljmp
jmp
or
fs
outsb
test
loope
pop
test
sub
mov
es
cld
loop
sub
mov
sbb
into
addr16
lods
push
jg
jo
jl
cmpsl
je,pt
adc
fdivrs
push
shll
icebp
add
sbb
popf
mov
out
pushf
bswap
mov
es
jo
xor
or
ret
int
xchg
push
mov
push
inc
cs
fnsave
out
ret
enter
mov
add
push
loope
mov
mov
push
mov
fdivrs
ret
jbe
mov
sbb
mov
inc
test
das
sbb
in
dec
mov
jne
mov
pop
leave
or
shrl
mov
xor
je
cmp
push
dec
insb
inc
lahf
add
nop
sub
pop
xor
insb
scas
outsb
fisttpl
movsb
dec
jg
scas
mov
sub
xor
add
xor
sub
adc
test
es
adc
jge
mov
jns
inc
fsubs
xchg
in
inc
insb
dec
jmp
cmp
test
stos
fistl
pop
movsl
addr16
mov
cwtl
push
bound
jmp
das
sub
aam
aaa
jnp
push
rcrl
in
popf
daa
fmull
mov
cmpl
loopne
xor
mov
push
imul
loope
sbb
cmp
ss
jl,pt
mov
push
je
mov
test
sbb
dec
xchg
hlt
popf
scas
cmp
daa
cltd
cmp
jo
push
ficomps
aaa
dec
xchg
add
lahf
cmpsl
scas
subl
pop
iret
dec
mov
sbb
jno
ret
dec
repnz
pop
imul
shlb
sub
pop
inc
mov
xchg
cmp
lea
popf
rcll
cmc
mov
push
or
cmp
aam
cmp
inc
cs
sub
je
sub
add
stos
imul
fcoml
jmp
sub
sbb
imul
imul
sti
out
push
imul
pushl
jns
mov
test
mov
jb
in
movsb
hlt
inc
btr
add
cli
scas
sub
jl
popf
mov
jmp
aad
leave
adc
mov
repz
dec
mov
sbb
or
pop
push
scas
es
or
xchg
dec
test
dec
inc
sbb
rol
lods
dec
cmc
loopne
push
sar
add
mov
fmul
xor
aaa
cwtl
push
sbb
arpl
jmp
jae
xchg
dec
dec
adc
push
cli
cmp
push
inc
inc
mov
jle
xor
orps
inc
sub
jmp
hlt
cmp
cli
jg
inc
ds
xchg
jmp
add
push
xor
test
pop
loop
and
stos
xchg
mov
repz
or
push
add
inc
or
in
push
mov
imul
orl
mov
decl
sbb
imul
sahf
leave
insl
dec
add
jg
push
sbb
imul
push
mov
sbb
add
arpl
pop
daa
mov
jg
mov
xchg
decl
andl
mov
aad
std
cmp
stos
arpl
and
ljmp
dec
mov
cmpsl
jo
clc
test
lret
jnp
dec
mov
sub
incl
or
dec
fwait
inc
fwait
in
dec
add
movsb
loope
and
inc
sti
insl
push
push
addr16
mov
push
sub
xor
icebp
insb
testb
pop
cmp
repnz
shll
leave
dec
mov
pop
cmp
arpl
lea
rorb
push
push
ss
jle
lret
inc
jo
add
xchg
insl
ja
loopne
in
cli
mov
push
sbb
xchg
mov
lcall
lock
or
repz
xchg
and
fmul
push
aas
dec
dec
out
frstor
lock
sub
addr16
add
cmpsb
dec
push
nop
xchg
lret
clc
sub
jns
sbb
insb
pop
mov
sub
mov
rorb
mov
popa
loope
cmc
push
sub
push
int
add
mov
xchg
add
leave
adc
jmp
fcmove
adc
pop
inc
lds
push
je
cmp
xchg
je
andb
add
pop
mov
and
jbe
fabs
push
jae
mov
clc
loope
in
mov
mov
lret
mov
aam
push
repz
jg
fwait
mov
xchg
xchg
adc
test
out
jne
enter
dec
or
adc
jo
xchg
leave
jmp
jae
xchg
cwtl
fstpt
add
into
push
neg
div
cltd
xchg
sub
xchg
int3
dec
mov
icebp
sti
addl
or
and
fldenv
xlat
push
cmp
mov
adc
jno
dec
add
outsl
mov
fistpll
js
mull
or
lods
lods
adc
int3
xchg
cwtl
xchg
bound
popf
sbb
addr16
loope
pop
movsb
xchg
test
fucom
push
sti
pop
push
push
lret
push
scas
lods
shll
insb
xlat
cld
cmp
int3
sbb
or
mov
push
mov
jle
cmpb
push
stos
or
dec
fistl
jg
addr16
pop
pop
pop
cmpsl
js
mov
fsubrs
addb
adc
xchg
popa
aad
out
mov
dec
sub
add
cmpsb
jecxz
imul
enter
aaa
scas
add
sbbb
pop
in
les
pop
mov
mov
xchg
mov
clc
lods
jmp
pusha
sti
lds
les
xchg
fs
mov
stc
arpl
add
jle
xchg
sbb
mov
add
adc
fcmove
fmuls
mov
push
bnd
pop
or
jns
mov
xchg
adc
add
or
sbb
xor
or
cmp
mov
xchg
negb
adc
cmp
xor
or
out
mov
cmp
test
shlb
or
push
sbb
jg
mov
jbe
or
sub
popf
mov
cli
xlat
ret
cmp
mov
push
dec
fstps
cmp
aam
xlat
pushf
and
lea
cld
pop
jle
dec
test
movsl
lcall
mov
or
add
data16
or
mov
pop
popa
std
inc
jmp
fnstcw
jns
push
imul
cmpsl
lahf
mov
sbb
xlat
testb
adc
or
mov
cmp
xor
rcrl
ja
pop
ss
cli
mov
hlt
pop
jno
inc
jp
mov
cmp
jecxz
orl
add
rclb
mov
fs
pop
or
xor
jno
fstpl
push
pop
sti
idivl
jo
je
mov
scas
scas
out
loope
inc
fisttpl
or
rcr
mov
fbstp
add
add
das
xchg
daa
pop
push
push
test
ljmp
mov
dec
testb
outsl
jecxz
or
mov
sub
iret
mov
mov
std
aam
insl
mov
out
leave
orl
fstl
scas
dec
and
pop
xchg
pop
xchg
adc
xchg
mov
cli
mov
add
jp
pusha
adc
sbb
popa
and
pop
inc
cltd
mov
lahf
jbe
test
add
lret
mov
es
cmp
push
push
cmp
arpl
sbb
pop
cld
adcb
inc
and
xor
cmpsl
sti
ret
mov
and
faddp
cltd
sbbl
stc
adcb
dec
jl
pop
aas
inc
cli
int3
push
mov
stc
push
sub
add
mov
mov
pop
mov
lock
jno
ss
adc
jle
dec
stos
insl
inc
fidivrl
jbe
test
push
decl
test
mov
mov
mov
out
pop
jmp
lret
xchg
inc
xor
mov
in
inc
xchg
test
sub
adc
pusha
and
insl
lods
and
sub
jns
fisubs
inc
and
inc
mov
lahf
mov
pop
out
cli
add
fwait
mov
mov
dec
test
dec
rclb
aaa
lcall
enter
push
inc
ret
inc
cmpsl
outsl
lcall
push
push
sub
mov
sahf
inc
fwait
sbb
sar
inc
mov
ret
add
test
testl
mov
and
xor
jg
xor
push
mov
pusha
and
xor
leave
fdivl
clc
cmc
xchg
leave
dec
jns
subb
pop
je
sub
push
mov
or
or
cli
sbb
mov
repz
mov
mov
fiaddl
xchg
jle
outsb
into
inc
dec
pop
push
arpl
lcall
xor
mov
jg
or
out
lret
std
aaa
cmpl
js
or
xor
adc
test
mov
das
push
mov
loop
gs
xor
jbe
xchg
xchg
mov
mov
xor
jge
popa
mov
dec
inc
sbb
adc
push
xor
fists
pop
mov
jae
loopne
cld
xchg
fistpll
and
pop
lret
jecxz
clc
or
out
sub
push
jb
int3
dec
adc
push
mov
push
dec
xlat
cmp
insb
or
cmp
sub
mov
divb
sbb
orl
in
mov
jns
xchg
adc
mov
test
or
leave
push
inc
push
ljmp
mov
mov
int3
jg
popa
test
mov
dec
inc
rcl
push
mov
das
pop
outsb
test
cmpsb
dec
testb
jge
inc
xchg
and
cmp
imul
in
xlat
mov
ds
aaa
es
mov
mov
xchg
setae
pop
mov
lods
push
int3
dec
cmc
movsb
das
nop
ficoms
rolb
movsl
repz
cmp
mov
mov
roll
fwait
cmp
sub
jne
mov
push
ds
fnsave
jmp
rcrb
mov
xchg
fs
add
mov
loop
adc
pop
lods
test
adc
shrb
pop
sbb
ja
push
mov
inc
adc
sbb
ret
out
xchg
push
cli
dec
push
pop
popf
jl
adc
sti
cli
fistpl
xchg
mov
aas
xor
popf
inc
iret
push
mov
mov
ret
cmp
ret
repz
frstor
in
jle
fisubrl
je
int
mov
jg
or
insb
icebp
or
mov
loopne
outsb
fmuls
cwtl
push
xchg
mov
addr16
xlat
dec
cltd
add
and
pushf
loop
mov
or
outsb
movsb
or
sar
adcb
sub
out
loope
nop
xor
aam
enter
push
cmp
xchg
popf
fldenv
insb
idivb
test
mov
xchg
out
mov
dec
inc
or
pop
int
xlat
dec
xchg
mov
mov
fimuls
test
lock
cmp
daa
sub
push
das
mov
sahf
push
sub
dec
add
int3
imul
or
or
cmp
mov
lcall
aas
mov
scas
mov
jmp
push
in
push
int
push
hlt
pop
jl
mov
xchg
into
inc
jmp
aas
popa
decb
data16
loop
inc
xor
xor
inc
sbb
cmpsl
mov
imul
or
ljmp
stos
call
sub
xchg
adc
loop
imul
mov
scas
xchg
lock
xchg
dec
xor
inc
xor
jns
sbb
add
mov
ret
loopne
test
aad
xlat
add
test
pusha
jg
stc
xchg
mov
add
pop
orb
mov
rcrb
loopne
fistl
inc
movsb
push
push
dec
cld
adc
ja
cwtl
mov
sub
mov
cs
push
push
dec
scas
fmull
mov
test
cltd
or
popa
cmpl
fdivrl
hlt
push
fimuls
popf
inc
stos
add
jle
loop
es
pop
aam
dec
je
sub
mov
sbb
sahf
in
mov
ja
scas
clc
ja
mov
inc
add
shll
mov
mov
or
pop
xchg
and
and
push
add
pop
movsb
sub
shll
sub
xchg
in
mov
aam
in
daa
mov
lds
sahf
xchg
loope
movb
lea
fadd
rorb
test
rol
mov
pop
push
inc
mov
cmp
pop
mov
leave
and
xchg
jp
insb
adc
ret
cmp
push
test
cmp
xchg
mov
inc
iret
jb
xchg
imul
inc
out
push
bound
cltd
aad
das
inc
lods
inc
aam
mov
enter
sub
sbb
out
stc
sbb
cvtdq2ps
mov
xor
sbb
stc
loopne
jle
or
scas
or
cmp
push
das
cltd
mov
jae
scas
adc
sar
mov
aas
and
aam
sbb
xchg
je
mov
lods
int
fs
mov
lret
nop
mov
cld
inc
cmp
pop
int3
adc
ja
cmpsb
popa
fdivl
xor
fcmovne
stc
xlat
addr16
hlt
and
xchg
pop
or
xor
stos
popa
call
call
adc
push
orb
mov
pop
jg
int
sahf
mov
mov
je
enter
jne
daa
pop
pop
insb
adc
mov
out
adc
pop
push
icebp
cld
pop
lcall
scas
in
pop
out
push
mov
stos
test
daa
inc
fwait
das
push
lret
xchg
test
fxch
clc
jns
jmp
jmp
lea
xchg
xchg
push
cmc
push
jle
pop
or
mov
xlat
sbb
out
cmc
stc
movsb
test
push
imul
push
ss
in
push
aad
jecxz
cmpb
dec
shll
into
rep
pop
sub
mov
in
arpl
push
jmp
ret
pop
jne
jb
sub
pop
mov
or
roll
mov
inc
lret
outsl
sub
hlt
aaa
andl
cwtl
pusha
imul
negb
inc
aam
aas
or
test
mov
pop
mov
sbb
stos
mov
xchg
add
in
sub
scas
jg
mov
sar
sub
xchg
fdivrs
stos
ja
sub
lret
push
and
sahf
andb
push
mov
dec
sbb
fimull
loope
lea
icebp
cs
das
cmpsl
es
ret
cmpb
mov
mov
pop
daa
out
sbb
add
cli
push
pop
mov
dec
lea
mov
fwait
movsb
push
ds
stc
xor
aam
orl
mov
stos
cmpsl
xchg
imul
pop
aam
jb
cld
jl
mov
mov
dec
jecxz
jp
aaa
cli
dec
add
dec
fwait
out
mov
push
fldt
rclb
aad
adcb
xchg
enter
rcr
jb
subl
jbe
enter
test
mov
jl
xchg
cmp
pushl
adc
cmp
jns
mov
loop
mov
sahf
popf
popl
xor
loope
repnz
int
jp
stos
and
fbld
xlat
mov
adc
jns
dec
lea
nop
cltd
cld
dec
into
pop
test
xorl
fxam
inc
in
gs
sub
xchg
sbbl
nop
sti
daa
add
stos
jae
or
mov
daa
test
cltd
or
fwait
mull
jns
sub
dec
inc
mov
sub
pop
mov
cld
inc
xchg
int3
into
pop
jae
insl
jecxz
push
les
or
lahf
insb
sub
jle
repnz
mov
adc
xlat
mov
and
push
leave
and
and
mov
rcll
andnps
rclb
inc
cltd
add
mov
push
out
cmp
enter
pushf
xchg
shll
movsb
cmpsl
xor
inc
push
sarl
fs
imul
pop
js
das
lock
shrl
xlat
pop
xchg
sub
cli
cmc
push
or
divb
xchg
rcrl
or
jp
hlt
push
in
mov
inc
test
scas
sub
enter
sbb
mov
dec
pop
enter
push
ja
scas
sbb
add
imul
add
dec
push
adc
adc
sbbb
repz
push
and
call
in
and
in
fstl
aas
scas
xor
sbb
ljmp
pop
lea
pop
adcb
ret
inc
out
fnstenv
mov
movsl
lods
xchg
jae
xor
test
or
mov
fwait
mov
sbb
push
call
sub
test
adc
movsl
jp
sbb
cmp
loopne
cmp
in
lods
dec
dec
std
stos
jns
dec
dec
mov
mov
out
mov
mov
xchg
jecxz
inc
and
iret
xor
iret
xor
xor
push
shrb
and
adc
loopne
cmpsl
loopne
test
push
mov
push
inc
stos
mov
sub
icebp
or
cltd
push
cmpsl
lcall
out
mov
scas
or
stos
shlb
ret
adc
jo
mov
in
outsl
push
jg
std
add
adc
hlt
je
lock
inc
dec
outsl
mov
adc
lahf
ljmp
fbstp
movsb
pop
in
mov
push
out
cmpb
fisubrl
xor
ja
lahf
cmpsl
xor
xchg
add
and
mov
dec
fdivrl
fcomps
repnz
ss
mov
cld
rcrb
xor
jp
xor
sub
sbb
sahf
xor
orb
and
test
xchg
ss
ljmp
stos
ret
jmp
ja
mov
inc
shrb
cmp
mov
les
pop
sarl
out
jmp
dec
fwait
push
mov
push
xor
jp
mov
mov
add
or
shrl
fwait
rclb
jb
pushf
stos
dec
dec
mov
stos
push
mov
mov
into
pop
test
add
jmp
shlb
pop
enter
xor
out
stc
adc
jl
mov
shl
shlb
jae
jecxz
xchg
pop
inc
push
lcall
push
sub
loop
fsubrp
pop
lcall
test
jne
mov
fstl
cmp
mov
dec
subl
mov
mov
lods
js
push
push
sbb
jne
in
dec
cld
xchg
data16
and
cmp
mov
fcoms
aaa
lock
jb
addr16
sbb
pusha
cmp
dec
popf
mov
jbe
lret
je
stos
mov
iret
out
push
mov
rol
rolb
mov
xorl
sarl
and
sub
shlb
cwtl
mov
lds
out
loope
xchg
mov
ljmp
jle
adc
pop
jae
jmp
adc
rcrl
jae
data16
popa
mov
fidivl
jg
push
pop
pop
mov
or
cmp
jge
loopne
inc
es
out
sub
push
inc
xor
push
and
push
sbb
cmp
jecxz
aas
les
sbb
clc
jge
mov
adc
push
std
cmpsl
in
arpl
imul
cli
or
sahf
orl
pop
movsl
pop
dec
xchg
mov
or
loop
or
adc
ja
or
pop
jg
sbb
lods
cmc
mov
or
shrb
push
or
push
xor
data16
dec
shr
add
ret
jmp
incb
add
das
in
cld
sub
xchg
mov
add
pop
stos
sbb
fildl
loopne
imul
push
gs
xor
pop
and
es
mov
aas
les
push
jecxz
lea
out
mov
add
inc
aad
mov
imul
jecxz
push
mov
imul
std
xchg
pop
cmc
fnstcw
adc
xor
inc
lock
ror
jge
pop
xlat
aad
xchg
push
xchg
dec
das
out
xor
or
sbb
inc
loopne
pop
mov
xchg
jg
mov
pop
push
mov
test
stos
cmc
dec
cmp
and
push
mov
jp
popf
pop
mov
cs
xor
xchg
cltd
or
popf
dec
divl
xor
push
movsb
data16
mov
mov
test
ljmp
mov
fstpt
xchg
aaa
xchg
and
push
lock
loop
and
mov
inc
add
je
out
jg
out
out
xchg
pop
out
shlb
xchg
mov
lods
and
ret
popa
insl
test
imul
ret
lods
jo
call
push
inc
pop
insl
lock
xchg
sub
fldl
and
mov
fwait
mov
lock
shl
and
mov
lock
aas
inc
test
jge
and
cmc
in
pop
in
adc
or
inc
fsincos
lods
xchg
dec
popa
sub
sub
ret
mov
pop
stc
fnstenv
and
push
fwait
inc
mov
mov
inc
pop
cmp
push
call
xor
fcmovnb
mov
jne
nop
mov
jge
sarb
mov
faddl
out
clc
repz
stos
adc
loopne
out
mov
xchg
mov
xor
leave
inc
fisttpll
add
push
dec
loopne
insl
lret
xchg
rolb
pop
adc
xchg
adc
out
popa
push
xchg
xchg
jne
add
insb
push
adc
popa
mov
enter
adc
out
stos
sub
push
mov
in
add
mov
xor
loopne
or
daa
out
mov
imull
imul
jno
inc
mov
push
sub
aas
add
ret
jb
jb
mov
lcall
ret
xor
stos
pop
xchg
adc
jno
sbb
shlb
sahf
pop
xchg
adc
stos
aam
imul
mov
loopne
addb
sub
pusha
cmc
sub
sbb
sbb
xchg
mov
shlb
push
sbb
mov
mov
stos
push
or
nop
dec
pop
or
test
sahf
xor
dec
pusha
rorl
pop
dec
aad
cmp
shrb
sbb
jp
lcall
lock
mov
repnz
js
sahf
push
mov
jns
movsl
insb
pop
add
hlt
push
dec
jle
mov
int3
inc
push
adc
in
mov
aaa
mov
mov
js
leave
inc
jmp
jnp
jb
adc
jmp
clc
das
or
in
jmp
aam
fimull
inc
sbb
pusha
jo
mov
in
fs
mov
sub
add
hlt
sbb
push
or
shrl
add
addl
lods
and
xchg
out
popa
mov
or
rorl
mov
popf
pop
cmpsb
jae
add
int
stos
inc
jmp
jb
and
loop
push
cmp
xlat
push
scas
mov
outsl
push
pop
mov
xchg
ror
push
rclb
and
ja
test
jl
cli
mov
jecxz
jg
jl
mov
iret
xchg
lods
adc
push
lcall
loope
mov
test
arpl
pop
repnz
mov
mov
dec
fiaddl
adc
mov
in
dec
and
push
or
lcall
jl
jno
push
mov
mov
mov
subl
xorb
xchg
pop
push
test
popa
dec
xchg
mov
xor
lret
mov
adc
mov
xchg
push
or
imulb
dec
add
icebp
loop
jno
sub
arpl
call
aad
fucomip
dec
stc
jne
jp
out
cltd
xchg
hlt
jge
xor
rclb
mov
jl
mov
mov
sti
dec
mov
repnz
cmpsb
mov
push
popl
inc
cmp
or
or
and
jmp
aam
test
out
jmp
nop
hlt
jae
push
mov
ds
dec
jp
mov
or
xchg
shrb
push
sbb
xchg
rcrl
dec
sbb
dec
cmp
jnp
mulb
cmpsb
and
jns
scas
fcomp
jno
ss
ficoms
fsubrs
xchg
pop
repnz
jmp
mov
test
negb
xchg
and
jbe
addr16
loop
clc
push
sbb
cld
aaa
cmp
jg
out
inc
and
test
ds
mov
lcall
or
mov
gs
xor
negl
ret
inc
scas
push
rcrl
and
aas
mov
scas
fldl
mov
es
lods
mov
adc
xor
lds
jno
test
das
push
xchg
jo
lock
sbb
je
repnz
dec
jb
fildl
mov
nop
lock
out
inc
push
aad
les
imul
adc
push
call
pusha
fnstsw
lahf
mov
fsubl
fdivr
or
into
jge
popf
cmc
pop
cmpsb
push
fisttpll
loop
pop
adc
mov
mov
adc
call
in
insb
fidivs
push
adc
mov
push
aaa
inc
shl
gs
add
mov
bound
or
push
add
movsl
jecxz
fimuls
push
push
push
lds
test
or
xchg
pop
sbb
mov
imul
xor
pop
rclb
pusha
fsubs
fldt
mov
jne
cwtl
jmp
inc
inc
sub
fsubs
subl
adc
popa
jecxz
sub
fsub
cmpsb
outsl
or
cmpsb
push
or
sbb
jae
cmp
xchg
jnp
sbb
lock
fisubrl
and
icebp
cmp
addb
cli
mov
pop
jns
popf
cmp
ds
mov
mov
stos
cld
ljmp
jecxz
out
mov
cmp
inc
negb
sbb
push
cmp
mov
cs
repnz
call
fsubrs
flds
sbb
or
int3
jp
repnz
mov
insb
mov
hlt
int
aaa
scas
mov
adc
sbb
push
xchg
stc
mov
pop
sub
jae
in
clc
jnp
stc
xorb
orb
push
je
push
sbb
mov
mov
imul
in
ja
lods
mov
cld
or
and
inc
adc
test
ja
jmp
push
lret
enter
jp
mov
std
daa
and
cld
mov
cltd
and
lret
inc
inc
cwtl
and
movsl
daa
mov
jns
pop
popf
jno
scas
ficoml
ljmp
mov
and
and
insb
sbb
les
inc
out
add
jo
movsl
mov
loopne
lock
jle
sub
cmpsl
xor
dec
fisubrs
xor
jnp
or
iret
add
fsubrl
cmp
test
push
in
daa
imul
jl
fimuls
jb
sbb
push
mov
add
push
fildll
cmp
and
jmp
scas
nop
outsb
divl
push
into
repz
xchg
icebp
jns
dec
dec
mov
and
cmpsb
fbld
jne
dec
sahf
dec
push
inc
rcl
dec
fs
out
ds
sbb
ss
inc
mov
repz
pop
inc
popa
lahf
sti
pop
popa
xchg
int
pop
pop
mov
out
or
lods
sti
mov
rol
cmp
notb
adc
push
jl
loopne
xor
mov
pmulhw
cwtl
pop
or
loopne
inc
cmc
pcmpeqb
das
divb
mov
lcall
sbb
jle
rcl
mov
adc
fwait
mov
insl
jae
pop
jns
pop
or
mov
pop
dec
and
mov
stos
fildl
scas
test
outsb
mov
fstpl
insb
fstp
insl
psadbw
mov
popa
ret
push
mov
mov
inc
pop
pop
xor
ja
and
add
jp
popf
cmp
mov
out
stos
xor
jle
in
or
out
cld
mov
test
jl
push
fcomps
pop
mov
int3
xor
loope
jns
imul
bswap
sbb
stos
lock
les
outsb
push
adcl
inc
xchg
mov
popf
nop
adc
lret
insb
js
popl
jno
lahf
pushf
daa
xchg
push
test
add
pop
daa
insl
in
loope
scas
pop
inc
loopne
mov
adc
or
test
es
xor
cmpsl
push
or
inc
lret
jmp
nop
xchg
add
push
xchg
sbb
lret
enter
inc
jb
add
jmp
dec
out
mov
addr16
add
cmc
cmp
mov
jle
xchg
cwtl
mov
out
scas
push
sub
adc
push
clc
pushf
fbld
lret
mov
cs
sub
xlat
or
dec
pushf
lret
dec
xor
cmpl
cmpsl
xchg
dec
sbb
scas
lock
sbb
pushf
and
cmp
pop
loop
sti
clc
mov
xchg
mov
push
hlt
push
add
xchg
out
cltd
seta
sbb
dec
std
jne
push
xchg
aaa
xor
xor
inc
sub
es
popf
scas
mov
pop
leave
sbb
xchg
and
pop
sub
les
out
jae
push
cltd
imul
loop
rorl
jo
popa
pop
sbb
xor
es
push
popf
cmp
out
sti
fistl
jne
adc
mov
loopne
mov
jae
daa
pop
cmp
xor
cmpb
xchg
arpl
pop
outsl
subb
scas
jg
mov
std
outsl
xchg
ficoml
aas
add
test
sbb
clc
mov
or
ss
jg
frstpm(287
jo
jo
stos
data16
xchg
loope
xchg
adc
repnz
or
xlat
sbb
push
imul
iret
imul
test
sahf
std
hlt
xchg
out
push
push
xchg
inc
loop
lods
jne
pop
mov
clc
cmpsl
loop
aam
cmpsl
cmp
jns
jb
ret
sub
loope
insb
xchg
inc
loope
inc
cmp
push
pop
pusha
fs
pop
insl
dec
and
and
mov
pop
pop
in
negb
sbb
mov
pusha
aas
cmp
add
xchg
lahf
push
out
push
cmpsb
xor
cmp
push
ss
add
enter
lret
dec
scas
les
cmpb
mov
add
rcrb
jo
inc
and
test
or
push
test
lock
mov
addr16
lret
mov
cmp
aam
pusha
pop
neg
dec
ss
lcall
call
sub
out
jmp
prefetch
add
insb
pop
push
and
xchg
dec
cmp
or
jp
jmp
insl
push
in
sti
repz
fstps
aaa
arpl
scas
xchg
push
jmp
add
cmp
xor
add
mov
test
movl
inc
inc
or
out
negl
adc
cmpsb
and
xor
mov
jb
pop
jbe
jl
rcll
outsb
add
or
add
sub
dec
jg
dec
jae
dec
nop
and
int3
jo
adc
dec
mov
pusha
in
hlt
pop
xchg
and
push
insl
std
aad
push
mov
mov
insl
insb
mov
sahf
push
add
push
and
xlat
dec
loop
mov
dec
add
mov
pop
or
add
pop
adc
lahf
cmp
or
scas
dec
mov
sub
cmpsl
inc
out
jle
xchg
and
int
fistl
sbb
sub
inc
jae
scas
push
inc
inc
add
lock
or
push
mov
lods
cmc
xchg
xchg
jnp
sub
in
xor
push
inc
xor
push
iret
sub
inc
xor
mov
in
into
shlb
sbb
mov
or
jl
dec
cmc
jb
adc
dec
cmp
sub
fsubs
loopne
xchg
dec
pop
dec
ja
or
or
push
inc
push
int
ret
int
pop
jo
pop
pop
jno
pushl
cmp
jl
addr16
sbb
andl
lock
and
add
fbstp
sbb
loop
xor
repnz
lods
pop
loope
mov
cmp
sti
call
into
add
imul
xchg
fdivrp
fistpl
xcrypt-ecb
cmpsl
dec
xchg
ret
push
imul
jg
in
dec
shr
daa
or
in
dec
mov
icebp
mov
sar
jno
sbb
push
push
mov
sbb
gs
iret
cmovl
icebp
out
iret
or
and
mov
or
pop
pop
sbb
aam
push
outsb
mov
xlat
sbb
cwtl
xchg
pop
pop
adc
mov
dec
xchg
fcomps
mov
fwait
scas
push
mov
cld
jp
shlb
pop
pop
sub
pop
push
jno
jp
cmp
fs
fdivrl
adc
mov
aas
sbb
xor
sub
test
pop
int3
fcmovu
cld
shrl
enter
ss
data16
adc
push
in
sbb
test
xchg
inc
xchg
add
pop
in
and
inc
mov
xchg
lods
std
cwtl
cmp
add
push
mov
repnz
aaa
or
cmp
outsb
sahf
lods
mov
ja
loopne,pn
and
and
adc
add
cmp
dec
mov
lret
aaa
adc
mov
scas
adcl
xchg
stos
sub
jb
scas
aad
cmp
test
movsl
test
imul
popa
hlt
loop
out
js
loop
lock
jns
test
or
sub
xchg
sub
cld
pop
mov
cmp
add
mov
lods
ljmp
fiadds
sbb
ja
arpl
push
mov
push
add
inc
xorb
imul
sub
icebp
lds
xchg
push
in
lret
cmc
inc
jg
dec
insl
in
mov
xlat
jecxz
hlt
out
xor
bound
sub
clc
mov
dec
xor
xchg
js
sbb
pop
dec
int3
decb
push
test
mov
sub
xlat
pushf
out
into
lcall
ljmp
push
stos
pop
and
adc
int3
incl
jmp
hlt
pop
pusha
mov
or
sub
adc
test
testb
sub
sub
mov
dec
in
out
fcmovu
cmpsb
pop
shll
and
push
mov
push
lock
shlb
das
movsl
insb
add
jecxz
xor
push
aam
xor
repnz
rcll
imul
and
jne
cmp
mov
call
or
mov
divl
jmp
shlb
push
add
dec
popl
das
nop
cmp
mov
or
adc
pop
xor
xor
push
aam
hlt
movsb
fmul
sbb
pop
addr16
xchg
std
mov
mov
jp
insb
ss
rcrb
add
mov
loop
daa
xor
xor
loop
lea
imul
ret
shrb
cmpsl
shrb
dec
mov
xchg
in
inc
ljmp
out
push
jmp
cmpsl
dec
call
xchg
popf
fwait
lret
loop
popf
pop
xchg
jbe
add
addb
add
ljmp
iret
outsb
xchg
pop
mov
out
ss
aad
push
lcall
cli
rcr
mov
dec
jecxz
sahf
shr
xchg
jp
mov
xchg
pop
lret
push
dec
mov
xlat
dec
lahf
sbb
sbb
sub
add
outsb
sub
add
iret
jg
dec
sub
dec
mov
mov
call
aam
movb
jbe
jmp
je
pop
xchg
out
jmp
or
in
imul
add
dec
aad
dec
es
fnstenv
xchg
pop
jae
sub
add
loopne
inc
imul
fimull
pop
add
fnstcw
mov
mov
loop
mov
outsb
sbb
xchg
cmp
xchg
adc
fldcw
jl
add
jecxz
fisubrl
pop
push
xchg
inc
cmp
mov
enter
pop
insl
xchg
fisubrl
xor
fiadds
push
mov
dec
cmp
jge
mov
sbb
add
into
insl
mov
dec
popf
rcrl
mov
lcall
or
imull
insb
adc
arpl
mov
ljmp
mov
rcll
mov
fdivrp
push
sti
clc
jg
lret
int3
jbe
imul
shr
or
and
jge
pop
mov
movsb
iret
xchg
xor
ficoms
mov
lock
pop
mov
adc
pop
mov
mov
int
mov
and
cmp
fidivrs
push
cmc
cwtl
jb
jne
fs
cmpsl
xchg
sub
call
pop
jp
mov
pop
xor
jge
and
bound
pop
fidivrl
fistpll
pushl
jecxz
pop
pop
sbb
jmp
mov
or
sbb
pop
movsb
sub
sahf
push
or
imul
insl
sub
push
test
dec
movsb
mov
rcrl
mov
xchg
mov
lea
mov
cmp
mov
cmp
xchg
mov
push
out
mov
mov
daa
rorl
fisubrl
sbb
or
mov
mov
jo
dec
imul
pop
xchg
cmp
xchg
repz
or
popf
push
iret
sub
js
and
pop
pop
push
scas
jg
mov
mov
rol
scas
mov
mov
sti
addr16
jbe
lods
negl
fstpl
outsl
in
js
repnz
je
pusha
mov
fwait
or
int3
imul
jae
jmp
in
inc
aam
scas
mov
int3
mov
imul
or
and
in
mov
ss
pop
lock
orl
ss
cmp
testb
lock
mov
sub
sti
stos
out
cmp
xchg
sub
mov
jmp
sti
nop
test
rcl
inc
pop
aas
sub
dec
jno
xchg
lret
mov
je
xchg
fcmovbe
inc
jecxz
mov
add
xor
movsb
xor
aas
push
jp
call
add
and
aad
and
subb
lcall
jp
aam
xchg
aaa
sbb
cwtl
mov
sub
pop
out
sarb
xchg
mov
jl
inc
jns
cmp
addr16
and
jmp
jne
stos
fwait
lds
orl
jecxz
xchg
pusha
sbb
ja
fcmovnu
inc
out
sarb
ret
mov
movsb
test
int
pop
test
lret
or
hlt
dec
popf
icebp
icebp
imul
mov
fcompl
ljmp
dec
mov
das
jg
jo
adc
sti
dec
call
mov
mov
dec
sbb
add
push
sub
lea
lret
mov
jns
mov
test
jne
lock
pop
mov
imul
adc
cmpsl
pop
mov
push
aad
fdivrs
dec
sub
outsb
inc
xchg
test
dec
aam
scas
push
rcl
mov
xchg
gs
lret
mov
xor
fcmovu
mov
shrl
in
xchg
cld
je
push
dec
sub
jmp
sbb
inc
jmp
cmp
xchg
cmp
jge
and
mov
add
aad
jne
sub
insb
insl
rclb
xor
stc
fdivrp
icebp
ds
icebp
out
or
imul
sbb
dec
push
sub
jp
add
cmp
sub
xchg
xchg
clc
lods
mov
sahf
cmp
xchg
inc
dec
cmp
push
xor
xchg
mov
inc
sub
hlt
push
les
push
iret
ffree
int
dec
loope
pop
cmp
dec
or
nop
jg
mov
jg
lret
pop
stos
mov
cmp
shr
pop
ljmp
add
pop
jno
cmc
sahf
add
ret
pusha
ficoms
mov
jmp
sbb
mov
mov
lods
mov
shl
mov
sbb
jb
cmp
incb
ss
add
and
loop
xchg
fs
push
call
scas
dec
cmp
fidivl
mov
sub
ficoml
sahf
invd
sub
pop
gs
out
sub
aam
mov
je
fwait
insb
jl
push
stos
xchg
sbb
mov
jecxz
data16
sub
fidivl
sbb
jge
inc
mov
lock
clc
fndisi(8087
ja
js
sar
movsb
mov
xchg
dec
cld
pop
pop
mov
pop
mov
int3
lods
or
aad
lods
popf
idivb
sbb
cltd
andl
aam
dec
ret
mov
mov
cmc
or
mov
div
mov
add
mov
mov
ss
ret
out
lock
das
hlt
or
outsb
fnsave
popa
cwtl
mov
nop
adc
jl
xor
out
jp
xchg
push
aad
push
andb
outsl
dec
cmp
ficompl
stc
xor
xchg
sub
es
mov
pusha
push
cmpsl
mov
jmp
sahf
mov
in
pop
mov
dec
enter
and
xchg
cmpsb
inc
inc
cmc
add
mov
aam
xchg
pushf
popa
adc
and
sub
sbbb
icebp
daa
repz
push
inc
jl
aaa
test
test
flds
jns
mov
mul
jnp,pn
call
dec
inc
pushf
inc
sub
shrl
popa
stc
or
std
shl
mov
cmp
dec
jl
fisubrl
jb
dec
adc
jne
bound
or
adc
mov
iret
aas
test
push
aad
out
xchg
stc
lahf
imul
dec
data16
stos
int
inc
in
test
int
lock
addl
lret
arpl
dec
jmp
loopne
scas
daa
call
xor
fistpll
sub
xchg
or
andb
jno
inc
lock
adc
nop
push
xor
nop
pop
jp
test
dec
in
sbb
fsts
push
insb
xchg
xlat
cmpsb
aad
mov
dec
mov
jg
cmpsl
and
std
adc
xor
adc
xchg
into
mov
pop
cmp
enter
sbb
xchg
xor
into
nop
cmpsb
data16
jl
aad
test
cmp
xor
das
pop
or
aaa
subb
aaa
out
mov
xchg
sub
mov
es
stc
add
sahf
mov
mov
rolb
inc
cmpsl
sbb
mov
fbld
stos
inc
push
inc
arpl
sti
cmc
das
sbb
mov
sahf
in
scas
lahf
leave
movsl
xchg
push
and
lea
sbb
in
jecxz
cli
test
dec
jnp
push
pushl
daa
lds
sbb
in
lret
jb
outsb
mov
lret
cld
js
mov
and
dec
addl
push
cmp
cli
lret
pushf
loope
es
and
jns
and
insl
inc
jnp
dec
das
push
inc
push
test
rorl
pushf
test
adc
mov
das
cmp
dec
ret
test
mov
jge
pop
pop
mov
fadds
iret
and
int
negb
pop
cmp
pop
das
in
jl
out
popa
aaa
jbe
dec
jl
xlat
test
push
mov
cmpb
jmp
cmpsb
in
hlt
pop
in
hlt
and
push
leave
push
xor
cs
outsl
mov
cmpl
lods
sti
cmp
jmp
push
stos
add
pusha
test
fimull
cmp
data16
mov
nop
sub
jbe
mov
cmovns
aam
xchg
mov
cld
mov
mov
leave
or
test
pop
repz
sbb
push
mov
pushf
mov
push
iret
stc
sbb
addl
faddp
pop
inc
inc
sub
mov
ja
mov
or
xlat
pushf
in
es
cltd
enter
hlt
or
jp
mov
repnz
fsub
inc
xor
cwtl
mov
or
mov
sarb
pop
pop
sbb
sub
icebp
ss
sub
pop
daa
mov
pop
sbb
xchg
imul
insl
repnz
lds
mov
outsb
aad
out
pop
out
pusha
in
movsb
dec
test
mov
sub
and
pusha
int
sahf
adc
fstl
in
xlat
xor
iret
jo
jl
add
test
xchg
cmc
loop
add
ljmp
add
mov
or
xchg
cmc
dec
inc
sbbl
mov
mov
pop
es
repnz
jp
test
inc
arpl
cs
jno
xchg
pop
and
ja
imul
push
add
mov
cld
lock
cmc
and
cmc
icebp
into
in
sahf
dec
mov
cmpsl
xchg
imul
push
push
ret
mov
add
jmp
cmp
adc
test
hlt
mov
inc
jns
adc
mov
test
dec
aad
stos
js
rorb
jbe
jecxz
inc
xor
fistpl
sbb
sbb
add
jbe
fs
jo
lods
cmpsb
add
push
ficompl
xchg
int
inc
mov
shl
add
jae
add
pop
lods
and
jbe
popf
pop
aaa
lahf
cmc
je
or
rolb
add
fbld
test
or
push
rorb
ds
sub
dec
inc
aad
lods
mov
call
adc
add
dec
sbb
jp
adc
push
insl
jp
adc
scas
add
iret
bnd
sbb
and
je
mov
mov
testl
inc
cmp
jns
jecxz
xor
sbb
pop
es
sub
jns
orl
xchg
adc
mov
sbb
cmp
jle
jb
pop
cltd
mov
mov
push
jo
out
xor
test
nop
lahf
int3
test
dec
bound
lahf
lahf
addl
sub
test
xchg
bound
fstl
lods
sub
mov
dec
xchg
jnp
or
push
jnp
and
ja
popa
mov
mov
movsl
cli
mov
add
fistps
stos
jb
scas
shl
or
fdivs
pop
pushf
bound
sub
pushf
push
mov
dec
inc
jg
lock
rorl
sub
cltd
shl
inc
stos
add
xor
scas
stos
cmp
inc
sub
xchg
jae
ficoms
jb
lret
in
or
and
xor
rcrl
std
not
sbb
incb
imul
sbb
imul
testb
aad
bound
popa
pop
add
cmp
popf
mov
in
pop
rcrl
arpl
pusha
aaa
push
push
or
ffree
adc
out
or
lea
xlat
into
xchg
xchg
push
or
sub
outsb
std
dec
fsubrs
mov
mov
inc
add
loop
cld
cmp
sarb
fmuls
mov
shl
push
vandpd
xor
mov
pop
ljmp
sbb
fnstenv
xchg
int
sbb
rol
or
sbb
pop
test
pop
xchg
mov
push
in
sbb
cmp
addb
jno
adc
sbb
push
or
cmc
sub
mov
push
or
mov
or
cmp
or
stos
xlat
jle
mov
xchg
mov
adc
flds
cmc
lret
je
pushf
xchg
cmp
mov
out
leave
ljmp
insb
out
xor
pop
call
mov
xor
mov
mov
cmc
adcb
mov
cmp
mov
pop
xchg
fxam
enter
jb
push
xor
in
loope
adc
jae
out
jp
nop
loope
xor
pusha
movsb
mov
rcl
push
imul
call
mov
xchg
pop
or
orl
movsb
mov
xor
dec
add
push
and
out
inc
cwtl
loope
inc
popa
xchg
cmp
push
movsl
movsl
lret
pop
in
mov
das
and
loop
and
mov
or
lock
ficompl
mov
sub
dec
cmp
add
inc
stos
xchg
push
cltd
pop
dec
or
mov
jbe
jb
das
cltd
fisubrl
and
inc
imul
lods
pop
push
jnp
insl
inc
sbb
cmc
and
pop
gs
call
test
cmp
pop
popa
push
and
push
je
and
subl
stc
incb
ret
push
push
call
ffreep
stos
fdivl
mov
sub
xchg
repz
push
orb
orl
jno
pop
dec
mov
xor
mov
sbb
into
add
push
jno
lret
sub
je
pop
test
pop
insb
leave
or
stos
rorl
sbb
inc
cs
jo
jg
xor
and
xorl
sbb
icebp
xor
comiss
nop
mov
mov
xor
push
xlat
lods
push
jg
faddl
jmp
mov
sbb
add
mov
sbb
xor
mov
repz
stos
or
out
jp
or
mov
daa
adc
sbb
mov
fdivrs
nop
adc
pop
ss
das
std
bound
movsb
lods
mov
sahf
clc
movsb
mov
stc
fdivrs
dec
call
xchg
sbb
or
aam
add
movsl
mov
addr16
xlat
xchg
popf
lcall
dec
jae
add
adc
in
xchg
jg
xchg
cwtl
push
and
mov
out
imul
lods
cwtl
push
js
and
sarl
jns
cmp
add
mov
pop
pop
mov
movsl
cmp
jno
aam
in
mul
or
fnsave
out
in
es
sbbl
iret
movsb
xor
fistps
pop
jne
push
cmpsb
movsb
out
push
adc
incb
jl
movsb
popa
sbb
xchg
lock
xor
jne
jl
dec
decb
jno
adc
push
add
or
jp
fistps
cwtl
push
push
mov
push
sbb
dec
pop
fdivs
fwait
in
sub
jmp
pop
mov
rcrl
movsl
pop
stos
add
and
dec
pop
pop
fstps
cmp
pop
mov
inc
inc
inc
pop
mov
ds
dec
fimuls
inc
cld
push
xchg
inc
pop
dec
repz
xor
stos
insl
jl
cs
cmpsl
int
arpl
sbb
ficomps
jne
dec
mov
dec
and
or
dec
sbb
sbb
mov
cmp
adc
sbbb
cltd
adc
js
lahf
pop
mov
dec
mov
rcrl
mov
cmpsl
sbb
leave
repz
cld
daa
pop
dec
or
mov
outsb
aad
arpl
ss
mov
shrl
cmpsb
or
add
pop
xor
pop
xchg
sub
mov
ja
insl
out
mov
aas
push
not
out
xchg
mov
call
loopne
arpl
ja
jecxz
leave
lahf
sahf
iret
lods
xor
stos
dec
add
cmp
xor
call
xchg
mov
and
test
lahf
mov
cmp
mov
sub
mov
in
ljmp
in
adc
andl
shll
lahf
xor
mov
adc
icebp
xlat
test
call
sub
mov
ja
hlt
mov
test
aam
or
push
jbe
sti
js
jbe
leave
cld
call
std
and
ret
mov
in
dec
je
sbb
in
leave
inc
ret
add
lods
or
ret
lods
pop
iret
sub
dec
jae
add
or
arpl
dec
push
dec
add
adcb
mov
shr
insb
out
out
daa
xchg
ret
adc
add
scas
sbb
shr
jl
mull
pop
mov
jl
or
hlt
mov
shlb
bound
adc
add
or
bound
jbe
out
and
add
or
stos
add
addr16
enter
mov
insl
test
cmp
jl
push
inc
mov
cmpsb
xorl
out
jnp
mov
pop
mov
aas
lret
ret
cmp
or
mov
xchg
ss
test
cs
add
cmpsb
fisubrs
data16
loope
mov
cmpsl
insl
mov
jnp
lods
daa
and
or
sti
imul
out
dec
pop
leave
shll
fst
scas
sub
mov
repz
outsl
call
loope
lea
dec
pop
lahf
xchg
in
or
cmp
cmp
adc
inc
xor
xchg
frstor
insb
and
xchg
data16
cmp
mov
push
add
add
jl
or
fcompl
fldcw
outsb
pushf
pop
jmp
sti
inc
jne
and
cltd
cmpxchg
addr16
pop
movsb
loopne
mov
fisttpl
cs
fidivl
call
push
lret
xchg
aam
mov
das
ljmp
jmp
dec
cmp
addl
aaa
push
sub
out
sahf
aam
scas
xchg
rclb
push
loope
in
push
iret
jmp
xchg
dec
jns
das
mov
cs
mov
xor
cmp
pop
imul
push
jp
imul
inc
lock
dec
push
sbb
aad
mov
lahf
adc
jbe
xorl
popa
pop
outsb
mov
lods
and
ficoms
ljmp
xchg
dec
gs
add
shlb
aas
xorb
push
mov
in
das
xor
pusha
xor
out
sbb
push
jmp
test
and
clc
clc
mov
or
adc
jb
in
inc
pop
movsb
adc
xchg
jle
test
rcr
sbb
loopne
or
std
xlat
cmovo
pop
cwtl
enter
rorb
mov
scas
pusha
leave
imul
mov
das
xor
fldenv
or
jl
jae
or
dec
adc
mov
sbb
xor
lcall
sti
les
mov
std
jmp
mov
or
scas
leave
xlat
mov
int3
add
cld
out
lret
mov
addl
test
lds
xor
push
xchg
popf
imul
ss
mov
loope
inc
das
repz
fucomi
cwtl
dec
jge
xchg
cmp
xor
and
or
xchg
mov
push
bound
cmc
in
mov
loopne
sti
mov
mov
das
adcb
push
lret
lods
lock
in
test
dec
or
pop
sbb
pushf
and
mov
addr16
pop
inc
jl
iret
in
rolb
in
or
cmpsl
loopne
push
cmpsb
divb
loopne
or
imulb
shll
in
lea
xchg
pop
jmp
cmp
rorb
sub
jbe
xor
cltd
mov
add
loopne
out
and
mov
scas
shll
sub
aas
pop
and
mov
dec
and
push
lods
aad
push
gs
or
je
cmp
xchg
lahf
push
pop
sub
xchg
bound
mov
and
mov
push
in
out
pop
jo
xchg
loope
lahf
scas
xchg
xchg
fistps
into
ds
imul
push
jbe
add
jae
xor
out
or
sub
fstps
pop
dec
test
ret
inc
mov
cmp
je
pushf
dec
mov
orl
movl
jecxz
ljmp
fdivl
lret
cmpsl
sahf
je
mov
sub
out
lods
inc
roll
icebp
jns
mov
push
and
sahf
xor
fldl
ret
fstp
adc
add
sub
test
inc
cs
jge
gs
cmp
fisttpll
cmp
cwtl
mov
xchg
pushf
ss
sbb
jecxz
fwait
mov
data16
sbb
pop
push
mov
pop
leave
lret
mov
jecxz
pusha
shll
iret
dec
mov
rolb
int
xor
jno
scas
push
push
lahf
cwtl
lods
je
call
sti
or
lods
fstpt
pop
jb
add
jmp
lds
rcrb
andb
pop
sub
imul
mov
mov
jge
mov
pop
cmp
test
cmp
dec
dec
popa
aaa
imul
loopne
and
out
loop
stos
mov
push
push
fimuls
cmp
loopne
cmc
jl
inc
lods
rcl
jbe,pn
insl
adc
pop
or
xchg
clc
test
add
insb
daa
or
mov
add
cmp
scas
adc
xor
and
sub
cli
mov
push
sub
xchg
mov
and
decb
int3
add
enter
repz
adc
frstor
pop
addr16
icebp
push
mov
jbe
pop
les
pop
jne
jle
and
sbb
mov
mov
jg
lods
andb
sbb
pop
scas
sub
sub
push
pushf
cwtl
aam
loope
arpl
test
jns
scas
xchg
scas
arpl
fidivrs
or
popa
daa
mov
les
mov
cli
cmp
xchg
adc
jge
mov
pop
loopne
jp
addr16
int3
stos
pusha
xor
repnz
xchg
adc
cltd
fcomp
loop
pop
push
xchg
adc
pop
or
out
out
push
outsl
mov
mov
push
hlt
sub
pusha
fidivrl
sbb
cli
pop
xor
out
jg
fdivr
pop
pop
cmp
pop
cmc
pusha
lds
inc
mov
lret
or
push
dec
cmp
cwtl
ret
mov
push
sub
lock
cwtl
pop
xor
sub
cli
out
push
sub
add
jecxz
mov
sbb
xchg
jno
loopne
jb
ss
mov
dec
iret
js
inc
inc
icebp
mov
sub
inc
xor
int3
dec
lods
gs
dec
jecxz
jmp
es
out
pop
mov
xchg
in
pop
leave
add
dec
mov
and
out
out
lods
mov
sub
push
dec
movsl
dec
in
pop
fdivs
in
pop
xor
sbb
pop
mov
outsb
push
jnp
out
in
loop
xor
dec
mov
push
pop
outsb
shll
idiv
push
and
xchg
sahf
xor
out
jle
je
int3
scas
xchg
cmp
dec
cmp
fimuls
jnp
xchg
icebp
cltd
icebp
adc
dec
scas
lods
xor
loop
xchg
lret
dec
arpl
lds
and
xchg
push
mov
pop
push
out
inc
cmpsl
movsl
movsl
xchg
mov
ffreep
stos
fisttps
push
sbbb
pop
xor
out
daa
pop
adc
test
mov
sub
xor
push
or
pop
enter
push
mov
imul
pop
inc
pop
outsb
adc
pop
push
jmp
fdivrs
in
pop
inc
mov
outsb
das
cli
sar
jo
cmp
jmp
sbb
adc
cmp
das
jae
pop
movsb
lahf
mov
xlat
mull
and
sahf
jmp
call
cmp
subl
pop
stos
call
xchg
sbb
stos
aam
pop
pop
lods
push
movsb
dec
movsb
iret
xchg
xor
sub
cmp
xor
jp
inc
push
sub
and
jecxz
js
pusha
stc
or
dec
iret
lcall
lret
cmp
outsb
sbb
lcall
xor
mov
imul
inc
test
mov
or
test
aam
sub
adc
out
rcrl
dec
js
gs
pushf
jbe
js
or
sbb
ja
imul
push
jo
iret
lcall
loop
stos
cmp
mov
mov
xlat
xlat
cmp
push
jecxz
in
test
shrl
or
icebp
adc
cli
push
bound
jae
daa
popf
and
jns
fbstp
push
or
loope
inc
test
jle
nop
lock
add
sbbb
add
test
clc
or
sub
in
mov
test
std
xor
stos
push
or
iret
out
mov
ds
daa
inc
lcall
dec
mov
test
and
push
rolb
loopne
push
jg
xor
mov
and
add
jbe
mov
sub
clc
leave
mov
clc
or
push
jl
mov
stos
inc
stc
fsubrs
jne
fistps
dec
inc
inc
xor
scas
ficoml
test
cmpsb
int3
or
sbb
stos
lock
xchg
fisubrl
sbb
sub
gs
adc
adc
dec
adc
push
adc
fwait
stc
into
jge
lret
inc
and
xchg
xchg
sub
cmpsl
int3
pop
rorb
cmp
stc
rcl
insl
testl
out
inc
xor
mov
push
xchg
push
xor
or
mov
jl
rcll
stos
lcall
fwait
popa
mov
push
mov
pop
inc
xchg
pop
loope
nop
shrl
imul
pop
test
dec
lret
ja
scas
icebp
imul
adc
jae
cmpsl
adc
sub
pushf
push
out
leave
jns
pop
fldcw
cwtl
in
and
inc
enter
adc
rcr
push
mov
es
lret
ljmp
insl
bound
in
mov
cli
outsl
push
mov
in
add
add
daa
adc
jno
aad
mov
push
fwait
fwait
mov
xchg
scas
mov
dec
mov
mov
add
dec
loope
mov
mov
out
mov
xor
mov
jbe
ja
jns
hlt
push
inc
xor
sahf
push
mov
mov
jmp
pop
stc
cmp
push
out
push
sbb
jo
fsubrs
loope
sub
adc
cli
mov
cmp
movsl
push
lds
push
xchg
sub
xorl
cmpsb
push
inc
add
add
data16
mov
pop
and
cld
lahf
mov
xor
mov
adc
xchg
lcall
xchg
xlat
fcomi
popa
mov
cmc
js
pop
adc
popw
pop
jmp
dec
pop
ss
and
loopne
mov
lods
mov
outsb
dec
in
dec
push
subl
xor
out
adc
xor
xchg
into
inc
mov
mov
xchg
pop
mov
sub
sub
lcall
mov
adc
jns
and
cmp
cmp
js
es
not
jo
jle
gs
lock
sub
ds
leave
incl
jbe
mov
inc
es
adc
pusha
cs
add
xor
popf
push
cltd
or
add
mov
imul
cmp
call
loop
adc
mov
arpl
cwtl
loope
and
push
sbb
xor
dec
mov
jo
pop
adc
gs
gs
loop
xchg
xor
xchg
and
out
mov
cwtl
fiaddl
push
xor
xor
mov
and
sarb
jmp
mov
push
and
and
call
pop
pop
lahf
push
pusha
mov
mov
int
lds
adc
pop
stos
lds
movsl
pop
xchg
mov
xchg
pushf
xchg
in
sbb
jecxz
add
sub
mov
mov
aaa
mov
lods
push
push
mov
cmp
daa
add
int
jo
loopne
shll
outsb
stos
adc
in
jnp
mov
test
xchg
jp
jg
rolb
js
push
pop
xchg
xor
call
cmc
mov
std
or
or
cmc
xorl
lods
jae
mov
adc
pop
dec
imul
or
lret
jb
pusha
rorl
jl
or
mov
shl
idivl
pusha
lea
in
insl
inc
mov
nop
cmpl
inc
pop
mov
and
sbb
sbb
aaa
rcl
pushf
and
cmp
cmp
mov
or
jecxz
lds
mov
gs
cmp
adc
xchg
lds
stos
cwtl
mov
sbb
dec
ret
dec
mov
pusha
cwtl
mov
dec
xor
xchg
and
and
fwait
inc
das
hlt
sbb
out
test
iret
loope
dec
sbb
add
sub
mov
fdiv
jne
cli
clc
mov
xchg
cli
pop
popa
add
int
hlt
add
xchg
and
dec
lds
xchg
jns
ds
and
or
pop
or
cmp
jo
mov
jecxz
jns
in
lahf
adcb
std
cmp
push
add
cmc
dec
nop
sub
dec
mov
in
xchg
mov
enter
je
push
mov
push
mov
mov
xchg
cmp
and
jmp
xchg
dec
arpl
push
jns
jne
cli
cmpsb
sub
lcall
outsb
insb
test
jp
sbb
pop
lods
int3
daa
rcll
add
dec
jno
push
clc
mov
push
inc
inc
or
sub
pop
jnp
xor
lahf
loop
push
mov
xor
lds
ret
mov
xchg
out
ret
ja
xor
ror
iret
enter
addr16
adc
sub
push
repnz
push
jge
fwait
xchg
jge
jo
jmp
popa
and
arpl
xor
stos
loopne
add
cmp
daa
add
mov
fldcw
xor
adc
in
pop
pop
insb
insl
and
push
cmp
fmull
push
push
add
test
pushf
imul
lret
js
adc
cmpsb
jne
cmp
gs
inc
push
sub
mov
in
adc
push
xchg
sbb
xlat
outsl
xchg
aaa
lcall
pop
sahf
pop
push
subb
cli
cmp
xor
ret
test
push
jbe
jge
pushf
dec
jnp
jmp
xor
das
scas
xchg
scas
mov
pushf
fistpl
dec
in
mov
fstpl
cwtl
xchg
cltd
sbb
int3
add
lret
in
push
mov
scas
aam
push
mov
inc
fisttpl
pop
test
or
scas
pushf
jmp
jg
cvtps2pi
scas
mov
mov
inc
push
lret
cmp
loope
enter
and
cmp
js
out
or
dec
pop
mov
xchg
mov
int3
incl
imul
shll
bound
mov
xor
cmp
std
xor
pop
lods
lea
xor
pop
fdivrl
dec
gs
shl
pop
ret
movsl
out
imul
mov
test
mov
lahf
sub
jmp
loop
fs
fldenv
jns
xlat
mov
jg
push
jne
lcall
cmpsl
ljmp
jecxz
das
movsb
push
cmp
bound
sub
adc
ret
out
test
nop
enter
pop
and
xchg
and
mov
in
mov
mov
outsb
scas
fnstcw
sbb
stos
mov
cmp
pop
push
out
mov
add
jmp
aam
sbb
jbe
lea
int3
add
mov
cmp
mov
and
je
pop
cmpsl
jg
pop
ss
mov
jecxz
mov
mov
xchg
cmp
jno
cmpb
arpl
sub
inc
arpl
out
pop
lahf
sub
fistpll
pop
imul
mov
jg
shll
daa
ss
ljmp
mov
movsb
shrb
xor
int
xchg
sub
test
nop
inc
scas
mov
mov
sub
mov
and
inc
pop
pop
jmp
pop
mov
jmp
sub
push
sbb
add
je
mov
scas
incl
mov
out
mov
scas
cmpsb
pop
js
enter
lret
pop
mov
and
push
jmp
and
out
push
dec
jno
fdivrl
dec
ret
mov
imul
lods
xor
out
mov
scas
jno
inc
mov
xor
or
scas
jle
fninit
in
mov
xorb
cmpsl
mov
movsl
out
sub
scas
mov
pop
inc
inc
mov
popf
xchg
int
sbb
dec
adc
test
dec
mov
ffree
int
notb
ret
lcall
pop
push
into
dec
and
sub
arpl
sbb
out
mov
clc
das
jae
idivb
inc
push
sub
jp
sub
icebp
cwtl
mov
xchg
push
aaa
mov
leave
xchg
or
cmpsl
and
sahf
add
jge
jb
inc
jmp
lea
clc
in
insb
inc
test
stos
daa
or
jnp
es
andl
inc
aaa
xchg
in
out
lods
jnp
icebp
pop
mov
jle
cli
clc
add
inc
shl
dec
mov
rcll
stos
jb
cmc
repz
sbb
out
xchg
lahf
xchg
push
add
or
es
sbb
ja
dec
testb
jl
pop
fidivs
icebp
mov
enter
lahf
jg
bound
pop
int3
jle
subl
mov
adc
jp
push
pop
jge
push
inc
mov
sbb
sub
fidivl
jp
xor
or
xchg
mov
adc
and
aam
cmp
adc
and
dec
lea
mov
iret
xchg
outsl
mov
xchg
out
adc
fisttps
sub
xor
ret
mov
daa
outsl
mov
aad
add
dec
dec
stos
jno
xchg
sbb
enter
inc
daa
sub
test
jge
push
jo
adc
ficoml
cwtl
pop
mov
and
xchg
inc
adc
ret
ret
or
in
push
shll
inc
or
push
mov
hlt
das
cmp
ss
jb
ret
jg
data16
sbb
push
xchg
pushf
sbb
dec
call
in
or
cmp
cmpb
mov
mov
xchg
dec
aaa
or
test
inc
mov
gs
out
repnz
adc
mov
or
out
scas
sub
and
push
mov
popa
xlat
inc
mov
push
lret
fwait
dec
inc
pop
xchg
nop
loopne
pushf
insb
mov
mov
dec
pop
scas
jns,pt
in
cmp
pop
add
dec
ficoml
stos
clc
test
xchg
mov
mov
mov
bound
fbstp
dec
push
adc
ja
cmpsl
imul
xchg
xorb
mov
and
popf
mov
sbb
cmc
add
cltd
cmp
sbb
mov
jmp
jns
mov
push
dec
push
xchg
lea
cli
jle
pop
cltd
imul
inc
ret
call
iret
lcall
sarl
cmpsb
fcomi
bound
or
push
mov
ss
sbb
outsb
push
repnz
pop
shrb
and
cmpsl
loopne
pop
xor
jecxz
jne
sbb
pop
xor
inc
jb
xor
sbb
inc
sahf
mov
mov
xor
cmpsl
in
xchg
cmc
jns
addl
sbb
mov
leave
hlt
adc
pop
cmc
mov
pop
or
lcall
sub
xchg
push
dec
imul
shl
sti
push
js
lea
pextrw
jg
jo
push
jbe
pop
pop
daa
jle
dec
imul
pop
and
fstl
mov
gs
mov
mov
sahf
pop
cmc
jb
cmp
mov
pop
push
in
int
mov
fdivrs
pop
pop
jl
lret
stc
pop
and
inc
add
xchg
fmull
ret
aas
cli
lret
sbb
mov
bound
out
shl
jp
lds
orl
out
push
add
into
mov
inc
cwtl
test
pop
fcomp
push
or
hlt
xor
bnd
repnz
sarl
or
shlb
pop
lods
add
push
test
jb
xor
xor
fiadds
cmp
xchg
push
ja
pop
push
mov
lahf
xchg
stos
pop
sti
pop
adc
daa
data16
mov
adc
mov
xor
mov
cmpsl
fildll
xchg
adc
rolb
lahf
xorl
dec
jmp
jae
adc
int
cwtl
adc
loopne
ret
cmc
daa
in
xor
or
xor
ja
push
lds
data16
enter
aad
sarl
mov
pop
push
jnp
jl
xchg
sub
imul
scas
loopne
adc
or
stc
mov
adc
sub
mov
shrb
sub
xchg
enter
adc
mov
cli
mov
lret
cmp
xor
mov
mov
mov
jmp
rolb
mov
push
jne
es
sub
test
out
mov
sbb
mov
cwtl
call
jge
xor
push
sbb
mov
pop
push
aam
and
or
fwait
dec
push
mov
repz
sub
std
pop
cli
sub
add
test
xor
inc
jecxz
pop
xorl
mov
sahf
lds
stos
ret
sahf
ret
shlb
dec
stos
mov
lcall
imul
pusha
daa
sarb
out
mov
testb
mov
add
xchg
mov
xchg
cmp
imul
ret
jbe
pop
gs
es
cmpb
jne
inc
add
jae
pushf
fnsave
sub
push
sbb
mov
cmp
aad
in
dec
addr16
ds
in
mov
fcmovne
test
add
lock
jl
imulb
xchg
xor
loopne
jne
adc
mov
ffree
dec
or
mov
jnp
pop
inc
lahf
cmp
je
lds
test
cs
dec
bound
flds
cmp
js
mov
cmp
jmp
ds
lods
cli
and
add
rorl
xor
lods
adc
push
push
repz
movsb
out
data16
add
imul
pop
jmp
mov
popa
sub
in
enter
data16
es
call
leave
fdivr
sub
xchg
div
push
xor
dec
std
adc
adc
lea
jmp
ja
dec
pop
sbb
lret
popa
push
popa
sub
or
test
push
sbb
pop
xor
xor
xchg
pushf
fwait
or
cmp
pusha
mov
lods
dec
nop
dec
fcompl
out
cmp
lcall
xor
mov
stc
push
xchg
xor
xlat
and
dec
pop
cli
dec
js
mov
dec
pushl
pop
fyl2xp1
jmp
fsubp
cmpsl
jecxz
les
imul
xor
ficomps
ja
lret
in
sub
and
inc
lcall
andl
fwait
push
jle
mov
mov
sub
notl
xor
aam
pop
aas
push
and
jge
iret
ljmp
xchg
lds
lcall
into
lret
bound
jb
xchg
mov
lret
jmp
cmpsl
mov
popa
loope
adc
lret
cmp
mov
jne
inc
add
je
xchg
rcr
and
sbb
mov
pop
aam
fs
pcmpgtd
out
pop
push
xor
mov
adc
sbb
sbb
xchg
pop
add
loopne
lret
pop
cli
pop
jb
int3
mov
push
xlat
cmp
mov
lea
iret
addb
cmp
in
movsb
imul
ret
popa
cmpl
jb
mov
and
int
fcmovne
addl
and
mov
xor
repnz
fadds
dec
mov
cwtl
and
stos
jmp
psrld
mov
adc
inc
sbb
jl
pop
jns
inc
call
dec
dec
dec
scas
adc
lea
hlt
roll
cmp
and
xchg
push
int
fisttpl
scas
cltd
sub
pusha
sub
push
cmp
adc
push
mov
stos
lahf
lds
sub
mov
sub
inc
push
lea
sahf
iret
dec
arpl
mov
jb
mov
or
fs
inc
mov
cmovl
in
jo
xchg
mov
in
push
xchg
mov
push
xchg
xor
repnz
in
jge
push
add
mov
dec
in
rorb
lret
ss
aam
xor
sbb
ret
dec
and
movsl
flds
inc
lds
add
jnp
xchg
mov
fildll
popa
call
or
push
and
frstor
jge
repnz
sarb
outsl
das
xchg
ret
mov
clc
xlat
inc
fstpt
daa
mov
idiv
mov
test
dec
or
mov
ljmp
cmpl
cld
xchg
sbb
loope
lods
mov
jle
iret
push
jl
pushf
push
jmp
xchg
arpl
jmp
xchg
inc
mov
out
push
push
push
cltd
sti
or
xor
cmp
jno
hlt
ficoml
sti
push
out
ja
mov
outsb
or
cs
mov
mov
aas
insl
push
mov
sbb
sub
push
movsb
pop
push
jb
stos
pop
adc
and
imul
testb
inc
mov
out
jbe
add
outsb
ds
inc
pop
jno
pusha
xor
stos
add
mov
clc
adc
aam
daa
xor
fstp
xor
mov
xchg
mov
jp
seta
sub
jb
jle
push
dec
pushf
inc
sub
adc
pushf
mov
add
pushf
ret
sbb
insl
rolb
fisttpll
sbb
mov
cmp
push
data16
push
mov
mov
pop
push
jp
mov
pop
mov
jecxz
loopne
inc
lret
incb
jle
sbb
xchg
daa
pop
shll
fwait
xchg
out
pop
and
shll
js
push
pop
fxch
xor
dec
les
mov
dec
lcall
shlb
jle
pop
ljmp
jnp
repnz
fistpl
stc
es
or
arpl
xchg
push
dec
or
popf
xchg
inc
enter
out
add
dec
jg
push
ret
jno
stc
js
mov
mov
xor
iret
scas
lods
sbb
icebp
cli
sub
push
popa
dec
aaa
int
pop
loopne
lret
ss
add
adc
popf
jecxz
popf
mov
cmp
jne
ret
movsl
enter
aad
in
push
outsb
cli
jle
sti
js
adc
outsl
lods
lods
test
push
mov
xchg
cmpsb
sbb
jae
in
xor
stos
add
enter
dec
push
fbstp
or
cli
icebp
inc
adc
and
mov
pushf
lcall
sub
cmpsl
cli
aaa
fs
fwait
adc
add
popf
lret
ljmp
and
mov
mov
int
mov
lea
push
xor
inc
push
or
into
leave
aaa
lea
sbb
int
pusha
mov
lods
test
add
repz
pop
pop
iret
add
mov
mov
dec
or
rcl
es
stos
popa
dec
cwtl
jns
adc
mov
mov
imul
mov
outsb
stc
inc
jp
fiaddl
sub
pop
mov
cld
out
frstor
jns
jp
or
repnz
cmp
push
int
xchg
add
push
int
pop
les
stos
mov
jmp
out
dec
movsb
xor
aas
jp
sbbb
xor
stos
add
js
mov
mov
mov
inc
inc
std
ds
xchg
inc
mov
add
loop
lret
adc
pop
xor
xchg
in
jl
inc
sbb
testl
adc
repz
inc
adc
push
and
xor
insl
mov
add
inc
xorb
daa
sahf
push
add
into
or
add
aam
dec
push
lods
aas
inc
inc
xchg
sahf
into
inc
fiadds
arpl
cmp
shll
and
sub
aaa
xor
clc
movsl
pop
pop
push
xchg
inc
adc
ss
push
loope
pop
jg
sbb
cmpsb
cli
lret
gs
gs
clc
movb
aad
sbb
add
mov
jae
xchg
dec
mov
xchg
sub
adc
in
cli
movsb
sub
ss
into
inc
sub
mov
aam
into
inc
add
je
xor
outsl
pop
mov
in
push
adc
test
lret
int
push
inc
inc
addr16
shlb
xor
sub
dec
cmp
pop
dec
add
adc
or
scas
push
sbb
mov
orb
adc
and
out
stos
add
addr16
out
sbb
stos
rorb
out
fcom
mov
xchg
xor
or
fbstp
xchg
add
push
and
push
add
insl
shl
es
pop
mov
sbb
push
dec
jo
inc
push
add
mulb
sbb
adc
mov
scas
insb
rclb
and
jno
aaa
inc
xor
dec
and
mov
repz
scas
dec
mov
xchg
lret
mov
test
xor
jp
rclb
rcrb
subb
mov
push
jne
ret
std
xchg
inc
push
ja
sub
sub
in
push
and
pop
inc
loopne
movsb
ds
sti
loopne
ja
imul
stos
daa
dec
inc
lea
fsubp
les
jecxz
or
and
rorl
jo
dec
cmp
cmp
ret
mov
pop
enter
mov
sbb
imul
and
xchg
mov
fucomi
mov
adc
fsubrl
sub
mov
push
dec
xchg
outsb
in
xor
ja
stos
int
ja
data16
out
leave
mov
mov
mov
adcb
mov
in
mov
xchg
enter
lcall
dec
dec
xchg
jbe
lods
fsubr
sub
movsb
ds
push
xchg
inc
sbb
imul
cmc
stc
mov
fistl
mov
pop
fdivrs
xchg
imul
jmp
or
inc
adc
adc
mov
push
icebp
aas
ljmp
xlat
adc
out
add
mov
clc
shll
pop
mov
jo
addr16
in
out
in
mov
pusha
mov
lea
push
out
imul
sub
std
scas
xchg
cmpl
lret
mov
popf
mov
into
mov
sahf
insl
sbb
pop
pop
aam
push
inc
call
mov
jmp
adc
sbb
jecxz
mov
arpl
mov
inc
cwtl
ja
sbb
cmc
scas
mov
push
sbb
pusha
movsb
mov
jo
adc
push
and
arpl
cmp
cmp
pop
aaa
push
dec
inc
xchg
mov
add
mov
enter
cmp
push
adc
or
rcrb
xor
es
ds
jge
add
arpl
push
mov
daa
fists
test
dec
fcmovbe
xchg
pop
movsl
daa
mov
aad
push
sbb
or
enter
push
xor
aaa
add
sarl
sbb
sub
mov
imul
xor
mov
jae
subb
xchg
xchg
or
jbe
inc
push
mov
imul
scas
push
mov
cmp
js
jno
pop
fldl
ret
xchg
mov
jmp
roll
sbb
mov
mov
mov
mov
pop
xor
mov
loopne
mov
and
addl
arpl
mov
mov
loop
imul
mov
sub
mov
mov
cmp
stos
int3
jp
cs
stos
pusha
dec
pop
ja
movsb
daa
int3
fisubrs
pop
lods
add
push
cmp
fdivrs
dec
inc
ss
and
nop
mov
and
test
iret
icebp
mov
and
ret
lods
mov
je
inc
aad
test
movsb
cmp
push
inc
ret
or
out
fidivl
shlb
fs
stos
mov
jmp
out
in
jecxz
fwait
movsl
shlb
roll
or
mov
cmp
mov
jl
hlt
cmpsl
clc
leave
pop
imul
dec
pop
fdivr
out
dec
loopne
xchg
ljmp
sbbb
stos
sbb
in
add
mov
pop
cmp
daa
cmp
lock
push
int3
jnp
outsb
and
into
jbe
in
insl
pop
push
and
scas
push
sarb
test
and
iret
push
mov
test
add
bound
cmc
adc
dec
data16
cmp
ret
cwtl
dec
adc
cld
add
mov
arpl
stc
mov
xchg
add
bound
cmp
push
outsb
fmull
pop
adc
or
and
cmc
and
and
aaa
mov
cld
push
loopne
sub
xchg
into
movsb
jle
outsl
xchg
mov
sub
xchg
sbb
dec
pop
push
js
clc
test
arpl
sti
or
jno
add
loop
dec
cmc
arpl
pop
mov
pop
je
or
jns
mov
sub
fnstenv
mov
xor
add
jmp
jg
jmp
hlt
push
push
leave
xchg
fs
inc
in
loope
pop
pop
sbb
xchg
mov
jge
cwtl
inc
fcmovne
negl
mov
pop
jns
out
mov
das
and
adc
jmp
cmp
xlat
mov
adc
push
in
mov
fsub
cmp
rclb
xor
imul
frstor
stos
mov
jge
push
xchg
adc
dec
ljmp
ficoms
push
xor
inc
andl
sub
inc
mov
cltd
push
xchg
divb
dec
pop
mov
adc
in
or
mov
pop
and
push
mov
stos
insb
stos
arpl
inc
cmpsl
mov
mov
out
hlt
pop
scas
loope
les
ret
pop
mov
push
and
in
push
dec
pop
jae
repz
aaa
xlat
lock
xor
incl
pop
pop
repnz
clc
aaa
dec
dec
in
test
xor
adc
loope
pop
mov
movsb
out
fnstsw
fdivrs
sbb
cs
mov
orb
aam
fcompl
mov
repz
sub
int3
insl
cmp
push
push
xchg
cmp
cli
lret
int3
xchg
in
mov
pushl
sbb
aas
inc
inc
fisttpll
mov
inc
lahf
divl
data16
mov
imul
cld
ret
mov
clc
inc
sti
sub
imulb
aaa
jbe
rorl
hlt
sarb
dec
mov
sbbl
jg
inc
xor
fldt
stos
or
mov
jnp
inc
cmp
sbb
dec
bound
jle
outsl
xor
cwtl
enter
add
lock
movsl
adc
movsb
mov
les
inc
movsl
xchg
ret
push
in
lahf
lds
adc
push
stc
mov
mov
fldenv
add
lret
loope
cmp
xchg
cmp
inc
movsb
jecxz
icebp
xor
loop
pop
nop
jmp
mov
mov
sbb
notl
movsb
daa
std
fwait
mov
push
add
mov
out
xchg
push
loope
mov
adc
and
lret
and
sub
into
cmp
mov
int3
inc
lods
adc
mov
mov
movsl
xchg
fstps
in
sahf
pop
sbb
jae
sarb
je
out
inc
pop
shll
insb
stc
adc
lea
mov
addr16
bound
dec
test
lea
mov
and
jb
push
pop
cmpsb
int
popa
xor
stos
fwait
aam
mov
jecxz
and
lods
call
adc
lods
adc
addr16
fnstenv
jbe
xchg
ss
xchg
cli
movsb
popw
mov
pop
fnsave
mov
dec
cmp
shll
shr
xor
jle
shrl
bound
jmp
imul
sbb
dec
imul
add
fimuls
insb
mov
sbb
xor
and
das
out
inc
mov
and
ret
cmp
cmpsb
lcall
push
mov
cmp
in
into
shl
mov
dec
cmp
clc
loopne
decl
jmp
aas
outsb
jge
jne
push
jbe
xor
jl
mov
rcrb
push
jmp
outsl
out
xchg
xchg
sub
sub
cmp
xor
es
push
lret
cmp
push
mov
xchg
out
stc
stos
imul
sub
mov
mov
xchg
sub
lea
pusha
cmp
int3
adc
sti
insb
repz
sbb
sbb
into
inc
aaa
cli
sarb
int3
cltd
or
xchg
pushl
std
pop
fldl
push
mov
lret
jo
jp
hlt
das
mov
in
pop
faddl
mov
add
lods
cltd
fdivrp
sbb
sub
mov
test
hlt
or
fst
cmp
scas
ds
lea
mov
sbbb
xor
ficompl
decl
or
les
call
gs
call
jp
push
out
add
or
sbb
into
dec
or
jb,pn
xor
mov
xchg
in
adc
mov
int3
mov
adc
pop
in
outsl
cld
push
pushf
repz
pop
xchg
pop
mov
inc
mov
xor
adc
nop
mov
pop
leave
mov
repnz
cmp
pusha
xchg
mov
mov
mov
cld
pop
cs
rorb
shll
cmpsl
and
std
lds
sub
les
int
push
orl
iret
aam
push
pushf
out
pop
outsl
int
adc
cmp
je
mov
sbb
sub
push
addl
lods
push
and
pop
sbb
inc
mov
std
dec
fnstsw
repnz
pop
outsl
mov
lods
stos
xor
lods
add
mov
into
sbb
pusha
repz
inc
mov
cmp
push
mov
push
sahf
sbb
push
mov
mov
scas
in
sbb
popf
ret
cmpsl
sub
xchg
rolb
movsb
xchg
in
mov
adc
lods
fidivrs
ja
cmp
mov
lods
rcrl
cli
andl
add
jg
rcrb
in
icebp
popf
dec
pop
pusha
ja
mov
scas
sub
pop
divb
lods
push
dec
lret
pop
adc
stos
inc
pop
and
and
es
stos
subl
inc
push
mov
cmc
imul
nop
test
dec
mov
or
xchg
rorb
pop
arpl
sub
insl
repnz
mov
rol
lahf
pushf
imul
arpl
inc
push
and
mov
xchg
shll
mov
or
or
mov
cwtl
rclb
or
xchg
loop
mov
mov
xor
mov
rcrb
dec
xchg
call
sbb
mov
lret
loope
cmp
xlat
push
push
outsb
loope
adc
and
mov
sti
outsb
out
jne
jnp
push
ret
mov
scas
imulb
sar
push
out
adc
push
test
pusha
pop
icebp
iret
mov
fidivrl
adc
xor
adc
pop
arpl
clc
jg
cmpsb
jb
mov
lods
je
mov
das
jecxz
mov
aam
adc
mov
mov
mov
hlt
sbb
stc
push
test
add
addr16
fcmovnb
cltd
leave
idivb
int
in
mov
int3
in
shll
ja
sbb
jle
xchg
mov
mov
mov
enter
in
jbe
cmpl
jne
and
stc
sbb
shrb
in
xchg
jg
hlt
arpl
push
dec
es
ljmp
mov
xchg
test
test
stc
mov
cs
push
push
cld
lcall
push
call
lcall
sub
push
outsb
out
jbe
sarb
call
sub
add
jmp
test
xor
cmp
movsl
sahf
sti
pop
shl
sbb
pop
loopne
pop
pop
push
fists
out
insb
inc
xor
pop
add
mov
ret
bound
ja
dec
ficoms
in
fbstp
xchg
pop
sub
loopne
jo
xchg
mov
sbb
sub
mov
imul
fstp
call
jb
aad
scas
dec
int
in
inc
or
or
and
rcl
adc
mov
pop
les
arpl
popf
fnstenv
adc
cmp
and
and
mov
icebp
loopne
and
pop
fcoml
nop
cmp
rorl
sahf
mov
dec
fisubrs
ret
cmpsb
add
bound
fdivrp
xchg
add
dec
stos
xor
jl
mov
test
jmp
xchg
add
leave
sbb
dec
fsubs
cld
cs
daa
sbb
popa
mov
cmp
icebp
or
adc
push
lea
out
shl
rcrb
dec
push
cld
outsl
or
je
xchg
xchg
add
sbb
in
xor
xchg
adc
mov
sub
pop
clc
mov
scas
mov
mov
adc
push
mulb
mov
xchg
cltd
xlat
and
xchg
insl
add
mov
and
cmpl
or
fcomp
cmp
sbb
mov
ljmp
or
and
mov
dec
stos
pop
and
dec
popf
addl
mov
sub
mov
dec
outsb
lahf
into
jns
or
sahf
ja
dec
lcall
cmc
mov
xchg
aam
cli
lds
lret
sbbb
nop
cmp
mov
lods
mov
sub
cmc
sbb
aas
jg
sahf
xor
lds
pop
lods
ds
sub
outsl
inc
gs
adc
dec
jle
mov
aad
fistpl
xchg
and
xchg
testl
into
es
pop
jmp
lods
inc
repz
mov
add
hlt
pop
lock
lret
pop
movsl
mov
ret
or
rolb
lret
loope
js
call
mov
mov
sbb
divb
or
mov
pop
lea
mov
jge
sbb
mov
xchg
gs
fnstenv
inc
dec
push
cwtl
aam
leave
cmp
jmp
rcll
adc
sbb
adc
add
sbb
nop
cltd
push
lret
cli
pop
hlt
leave
insl
rclb
dec
std
stos
pushw
cmp
aaa
rcrb
or
int
stos
inc
cmp
pop
mov
orb
cwtl
pop
adc
leave
in
xchg
addr16
aaa
stos
aas
jle
and
lcall
ret
jns
inc
mov
cli
stos
adc
mov
sub
test
sub
mov
inc
sub
xor
jle
mov
daa
stos
inc
rorb
jmp
pop
lds
mov
pop
divb
loopne
push
push
divl
das
pusha
adc
push
ljmp
inc
shll
xor
mov
roll
cltd
pop
xchg
aam
add
andb
jle
or
jne
sub
loope
rorb
std
adc
popa
in
stos
ja
dec
push
ret
xor
jno
push
lods
dec
mov
adc
xchg
fsts
sbb
lahf
shlb
int
sub
sub
cmp
mov
mov
frstpm(287
add
jns
xor
lahf
xchg
rorl
addr16
test
fdivl
sub
leave
and
mov
enter
xor
cli
xor
inc
dec
insb
test
mov
add
mov
call
in
cmp
cmp
xchg
mov
xchg
lahf
jecxz
stc
sbb
sbb
int
mov
stos
mov
sub
insl
les
out
sbb
push
lret
out
xchg
mov
out
sub
add
and
fwait
pop
adc
out
dec
les
repz
sbb
adc
and
mov
out
mov
cmpl
xchg
and
mov
mov
xchg
jmp
xor
lret
pop
mov
stos
sbb
hlt
jecxz
hlt
mov
fidivrs
xor
cmp
out
jne
xor
lods
lcall
sub
pop
cld
add
add
sub
inc
xchg
cmpsb
popf
add
cmpsl
inc
and
xchg
bound
icebp
loopne
gs
clc
dec
cmc
call
pushf
repnz
sti
negb
out
push
aaa
dec
pmulhuw
ret
lea
xchg
ss
inc
xor
rolb
adcb
ret
sbb
out
mov
jg
cwtl
aaa
bound
loopne
imul
sti
int
lods
sub
sub
outsb
push
cltd
pop
and
out
pop
out
dec
dec
cmc
push
scas
repz
mov
sti
mov
out
jbe
rclb
cmc
xor
repnz
lea
in
mov
jecxz
aam
cmpsb
test
test
js
adc
or
pusha
or
in
mov
gs
add
jnp
testl
frstor
mov
push
shlb
push
mov
cmp
ret
push
add
fidivl
sub
xor
scas
dec
aas
mov
mov
mov
add
xor
sbb
dec
je
scas
js
xor
fldenv
and
xor
push
hlt
push
out
das
mov
test
pop
sbb
cmp
mov
lock
inc
leave
icebp
adc
gs
jno
adcl
jb
sub
addr16
and
jo
pop
insb
fsubs
add
sub
mov
mov
add
lahf
int3
jp
push
out
jmp
mov
jae
mov
mov
jle
dec
into
adc
ret
add
and
cmc
inc
dec
fwait
or
mov
xchg
repz
inc
test
dec
cwtl
add
xor
mov
add
push
jp
and
fisubrl
outsb
iret
cmp
pop
dec
lret
sub
stc
push
mov
iret
pop
xor
and
mov
loop
push
mov
push
mov
sub
pop
stos
sbb
xchg
xchg
xor
shr
pop
and
jo
ret
js
lock
lret
jp
sbb
pop
rcrb
pop
push
mov
ret
cmpsb
add
or
mov
pushf
je
lret
mov
or
or
cmp
pop
in
xor
adc
add
sbb
int
sbb
xor
and
es
adc
mov
xchg
sbb
inc
jle
mov
pop
dec
and
iret
cmc
fisubs
mov
int
fwait
in
lcall
adc
dec
test
jno
out
enter
int
test
pop
out
mov
fstl
sbbl
gs
jae
rol
popf
ja
iret
test
sarl
add
lcall
inc
aaa
sbb
aaa
mov
inc
adc
mov
or
aas
cmc
ret
sub
adc
sbb
movsl
push
xchg
imul
push
xor
jmp
aas
or
or
jecxz
xchg
mov
mov
addb
pop
inc
and
into
sti
xchg
sub
lahf
pop
adc
std
mov
sbb
scas
pop
push
cmp
ds
popa
outsb
add
andb
shll
dec
fdivrl
fs
pop
lds
cs
sbb
fsubs
mov
mov
jle
addr16
out
pushf
sbb
pop
pusha
lret
mov
xor
test
add
into
pop
sub
fbstp
pop
popa
inc
xor
sub
imul
fstpl
enter
bound
and
mov
cltd
push
mov
and
pop
sbb
pop
dec
jb
sbb
cmp
lea
call
xchg
mov
fnstsw
outsb
andl
add
mov
sahf
aas
xchg
scas
jge
mov
add
sbb
add
mov
popa
cltd
push
leave
enter
inc
not
popf
rcrl
add
or
xor
or
or
adc
cld
xchg
mov
loop
mov
out
mov
shrb
push
into
adc
pop
in
jl
aaa
or
add
dec
stos
dec
out
cmpl
addr16
in
xor
jnp
mov
xor
mov
mov
ja
pop
xor
out
mov
dec
push
mov
xor
loope
sbb
lock
push
nop
fcomps
std
mov
pop
pushf
cmp
shlb
push
nop
xchg
adc
or
scas
inc
sub
sbb
movsl
repz
mov
in
stos
hlt
sub
mov
push
pop
in
mov
imul
lret
dec
mov
push
cltd
and
inc
cmp
add
ret
testl
inc
jecxz
jecxz,pn
rol
xor
push
es
notb
mov
adc
cmc
iret
pusha
f2xm1
sub
pushf
int3
lahf
pop
test
adc
jbe
int
mov
repz
inc
loopne
jle
pop
mov
idivb
daa
or
mov
mov
in
and
es
sarb
int3
addr16
outsl
sbb
lcall
popa
cmc
sar
or
xor
xor
jne
ja
hlt
movsl
mov
and
mov
or
inc
jle
and
fs
adc
fldt
pop
outsb
imul
outsl
pop
xchg
fistpll
sti
xchg
inc
cmp
jg
sti
xchg
pushf
push
cmc
sub
inc
cmc
loopne
adc
adc
mov
cmp
sbb
stc
inc
in
or
enter
inc
inc
test
jno
std
mov
dec
inc
inc
jmp
push
hlt
xorl
push
pop
or
addr16
subl
or
add
jg
mov
cwtl
sbb
mov
scas
mov
mov
pop
bound
sub
pop
lcall
and
dec
pop
repz
repz
nop
pushf
push
or
mov
das
mov
movsl
scas
dec
inc
shrl
ja
add
test
pop
add
insb
cwtl
pop
push
xchg
mov
ret
cli
shr
cmp
xchg
or
pop
ljmp
fwait
das
repnz
and
sbb
int3
inc
xor
repz
test
iret
push
or
nop
into
mov
push
shl
jp
test
push
cmp
fstl
es
decb
jae
gs
push
xchg
std
or
bound
aad
push
add
sti
jg
and
adc
and
imul
push
mov
pop
or
pop
cmpl
push
push
cmp
xor
xor
out
sbb
cmpsl
popa
fisttpll
ficoml
mov
call
lds
push
stos
and
aam
loop
not
inc
push
cmc
ret
in
xchg
cmp
dec
sbb
insl
mov
jno
and
cmp
xchg
mov
adc
xor
mov
push
adc
sbb
push
fidivrl
pop
and
adc
popf
insl
dec
lret
sub
int3
sbb
sub
xabort
xchg
and
sbb
rol
push
add
ljmp
sub
mov
xchg
mov
pop
mov
jb
fptan
bound
push
xchg
cmpsl
pushf
sbb
mov
fldt
in
outsl
out
mov
inc
aam
or
xchg
mov
xchg
subl
popa
mov
sub
jbe
cmp
mov
popa
dec
push
xor
ret
ret
out
lret
es
or
rclb
sub
insl
push
mov
in
jl
sbb
jnp
out
or
dec
int3
mov
mov
mov
lds
aaa
out
push
cmp
incl
adc
xchg
sbb
je
ficoms
in
pmaxsw
iret
mov
xchg
add
lcall
fildll
push
stos
mov
cmp
mov
rclb
mov
je
pusha
ret
xchg
repnz
inc
adc
outsl
sub
add
push
push
pop
and
loop
sub
xor
rolb
dec
jle
stos
out
mov
push
ss
sarb
cmp
mov
jne
sarb
lock
cmp
lcall
mov
les
das
cld
cmp
push
fdivrl
pop
xlat
mov
inc
das
xor
pop
adc
fidivs
jno
fisubrl
xchg
jge
arpl
cmp
sbb
rorb
mov
jae
in
sub
cmp
test
dec
mov
push
inc
ljmp
mov
sbb
jle
and
add
or
rcr
inc
mov
sub
sbb
rcll
ljmp
test
mov
fmuls
shll
xor
fs
pop
dec
cltd
leave
pop
das
mov
jp
pop
jge
in
and
xchg
out
ja
inc
xchg
push
cltd
dec
inc
std
adc
out
and
cmp
adc
test
mov
imul
mov
loopne
roll
mov
ljmp
pop
cs
xchg
adc
out
fcmovnb
in
sahf
outsb
mov
push
bound
cwtl
adc
add
popf
outsl
xchg
in
push
push
jmp
fneni(8087
cmc
roll
push
xchg
testb
jmp
push
out
stos
aam
out
in
pop
sti
inc
pop
mov
push
je
cmp
xchg
adc
adc
ljmp
bound
insl
arpl
push
imul
pop
loope
aaa
sub
jnp
xchg
or
dec
xchg
mov
pusha
rclb
adc
push
in
hlt
sbb
flds
push
sti
mov
bound
cs
mov
jnp
ja
int3
mov
xor
inc
push
repz
roll
outsl
stos
fstl
out
jns
pop
xchg
pop
fs
add
fld
add
outsl
aaa
into
lret
test
into
dec
roll
fistl
jl
xchg
dec
pop
aaa
sub
and
pop
jle
mov
cmpsl
fiadds
outsb
js
sarl
in
mov
and
jbe
jle
cmp
mov
mov
xchg
jecxz
cltd
adc
lcall
lods
fldl
adc
repnz
ret
pop
xchg
mov
test
cmp
stos
mov
nop
inc
imul
add
divb
fwait
in
es
daa
pop
jecxz
lret
sahf
xlat
sbb
aaa
xchg
mov
xor
mov
ljmp
pop
push
sub
mov
mov
fidivrs
imul
xchg
xor
adcl
bnd
cmpsb
jp
xor
outsb
sti
push
cmc
or
mov
inc
jae
dec
in
and
inc
js
orb
fs
mov
adc
add
call
gs
in
std
push
push
movsb
iret
add
pop
sar
and
out
push
pusha
and
jns
cmp
xor
clc
aaa
ret
test
cmp
loope
push
out
adc
repnz
jb
scas
add
rcrb
repnz
adc
jle
in
dec
push
mov
fdivl
mov
fistpll
jo
and
add
call
mov
out
dec
aaa
imul
add
pop
ljmp
add
bound
cmp
xor
jae
or
sbb
ljmp
loop
cmp
imul
inc
fucomi
cmc
xchg
data16
shlb
or
mov
shrd
or
xor
or
pop
jge
push
aam
rcll
adc
and
ror
mov
roll
fmuls
push
sub
cs
mov
push
mov
repnz
lahf
ljmp
or
push
nop
sbb
xchg
mov
jb
mov
cmp
je
pop
mov
jge
push
inc
xchg
xchg
cwtl
mov
push
mov
aam
adc
jns
pop
fmul
push
mov
mov
pop
testl
xlat
pop
in
pop
test
cmpsl
lea
repz
pushf
sub
dec
lock
and
insb
jmp
or
fisubrl
loope
int3
js
or
ficoms
fwait
cmp
jo
xorl
int
imul
dec
sahf
pop
fstpl
or
daa
push
mov
xor
xor
cli
push
jbe
repnz
or
jno
in
or
jb
mov
push
int3
sub
jo
mov
inc
add
test
dec
push
mov
sbb
and
xchg
xchg
adc
xor
pop
sub
test
stc
jle
mov
dec
xchg
cmovo
or
les
push
adc
fstpt
popf
jge
pop
andl
push
aad
cmc
jle
loope
in
xor
in
xchg
loop
lds
or
cli
jmp
sub
or
mov
add
movsb
in
mov
dec
loope
pop
xchg
jns
fnsave
test
mov
shlb
mov
leave
xor
cmp
sti
dec
mov
push
insb
sub
sbb
loope
rcr
test
add
pop
inc
fisttpl
xlat
or
das
aam
insl
subb
stos
dec
xchg
punpckldq
mov
insl
nop
sbb
cmp
mov
cltd
bound
adc
and
cmp
lahf
mov
sti
mull
push
mov
pusha
cmp
aas
fidivl
add
mov
rclb
fwait
int3
rclb
sarl
and
gs
cmp
push
jb
xlat
push
dec
xchg
in
pop
xor
push
cmp
pop
jg
add
mov
sbb
mov
js
push
outsb
lahf
or
aam
add
dec
fimuls
add
adc
sbb
adc
mov
adcl
sbb
or
and
pusha
pop
cmc
xor
outsb
lret
pop
sahf
mov
dec
xchg
cli
jbe
lods
xor
cmp
add
imul
dec
xor
loopne
and
cmc
xor
inc
sbb
mov
shl
jnp
or
xchg
test
sub
xchg
mov
mov
insb
or
pop
movsb
push
aad
xor
jo
iret
pop
dec
pusha
scas
rcll
adc
js
mov
call
fimuls
inc
cmpsl
lret
inc
inc
in
sti
flds
mov
mov
mov
rcrl
scas
jo
sub
xchg
jns
fbld
hlt
push
mov
push
andl
and
fptan
test
into
xchg
mov
bound
mov
mov
les
push
std
cltd
xor
jmp
jae
inc
inc
push
inc
sbb
pop
dec
sbb
outsl
dec
sub
hlt
mov
gs
insb
xchg
jg
mov
lahf
shl
int
and
mov
repnz
in
sub
iret
add
int
dec
mov
mov
dec
stos
mov
or
lods
jnp
inc
stos
fcmovnbe
dec
notb
mov
mov
lods
push
sbb
cmp
mov
or
mov
enter
sbb
mov
xchg
arpl
push
cmpsb
jbe
push
jmp
hlt
aas
jp
shlb
lods
stos
dec
pop
test
cwtl
mov
cli
xor
xchg
adc
or
ja
arpl
and
sbb
xorl
sub
jbe
inc
int
icebp
mov
int
lcall
pop
push
je
xor
dec
and
test
xchg
push
test
jle
sbb
leave
inc
inc
outsl
hlt
sub
mov
cmc
nop
dec
cwtl
push
mov
xor
fmuls
fisttps
sahf
inc
pop
mov
xor
fisubrs
js
test
or
jno
xor
mov
jns
scas
push
lret
jp
sub
jb
mov
push
mov
lret
mov
or
dec
addr16
sub
jge
subl
and
movsl
pop
arpl
mov
add
cmpsl
stc
ror
repz
insb
mov
cmp
sbb
mov
fildll
sbb
cmp
subb
scas
jp
add
sub
aam
push
push
loope
pop
mov
mov
loope
sbbb
rorl
fcomi
repnz
fnsave
xchg
aam
notl
out
pop
mov
jp
mov
mov
sub
insl
mov
dec
adc
push
jb
sti
popa
int
scas
xchg
cli
dec
lcall
imul
sbb
aaa
and
rcr
or
and
jb
movl
loopne
addb
jp
push
xor
jbe
cmp
jbe
in
iret
jbe
insb
push
add
inc
or
mov
cld
insl
out
sbb
xor
in
push
dec
in
push
add
dec
and
jg
popf
sbbb
sub
cli
in
jecxz
scas
loope
adcl
mov
add
in
jmp
out
notb
dec
pusha
or
mov
scas
ljmp
dec
repz
enter
and
push
sub
add
xchg
xchg
flds
and
cmp
cmp
jge
jo
pop
pop
aas
inc
add
loopne
rcr
leave
dec
rorb
xchg
push
pop
in
and
inc
stos
sub
imul
xchg
into
push
negl
fcomps
jg
xchg
clc
mov
insl
nop
or
popa
lock
adc
rcrb
mov
push
daa
dec
xor
add
and
push
sets
dec
sub
cltd
mov
movsb
xor
push
rolb
push
js
dec
mov
pop
jecxz
ljmp
in
fwait
gs
test
add
push
push
jbe
jbe
fistps
scas
in
xchg
and
xchg
inc
fistpll
fsubs
and
jns
cltd
les
push
ja
stc
in
push
loopne
cmp
xchg
loopne
mov
dec
cmp
lods
outsb
inc
mov
scas
cld
jmp
cmpsl
adc
icebp
jg
daa
mov
rorl
jne
mov
or
jno
clc
jns
and
ljmp
sub
out
add
mov
jne
loopne
mov
dec
jbe
jb
fidivrl
popa
cld
scas
outsl
add
inc
icebp
not
jns
mov
mov
pop
in
sbb
and
mov
fbld
shl
mov
mov
and
icebp
sbb
and
cmpsl
sbb
inc
fsubs
andb
sbb
repz
and
lds
cmp
lret
sub
or
mov
adc
orb
jnp
insl
push
xor
cmpsb
jae,pn
xor
xorb
frstor
inc
dec
jge
xchg
out
pop
jecxz
pop
or
jbe
or
xchg
adc
pop
ret
sub
clc
and
inc
fsubrs
jae
out
repnz
lret
fstpl
xor
jp
jne
cmp
mov
mov
adc
and
int
push
adc
repz
pop
lcall
inc
xor
adcb
mov
mov
movsl
pop
xor
iret
inc
sub
outsb
jge
xchg
lcall
lret
mov
adc
adc
or
and
fs
icebp
push
xchg
mov
rcrl
sbbb
in
shrb
xchg
or
cmp
mov
movsl
xor
movsl
add
cltd
out
ret
adc
pop
test
lret
mov
insl
fs
addl
pop
add
enter
data16
jecxz
push
int
cli
repz
stos
imul
add
mov
and
aad
sub
push
sub
dec
inc
dec
mov
xchg
das
loope
fstl
dec
cli
or
xor
pop
stos
xor
xor
in
insl
sbb
ret
push
add
roll
mov
aad
in
jne
and
xchg
out
sbbl
xor
cmp
ljmp
repnz
xor
inc
repz
loop
stos
dec
hlt
repnz
sti
orl
pushf
and
and
xchg
jle
inc
leave
pop
pop
cmp
movsb
pop
push
jp
mov
sub
dec
testb
or
and
push
cmp
sub
jno
pushf
js
in
sub
ret
jb
movsl
pop
arpl
sbb
mov
sub
push
sub
or
mov
std
stos
xchg
pop
xlat
inc
push
scas
cmpsb
jo
sbb
mov
dec
pusha
xchg
add
into
sbb
pop
shll
mov
pop
and
mov
and
fcoml
fdivs
dec
inc
scas
int3
pop
xchg
in
cltd
pushf
pop
dec
shlb
mov
add
cmpsb
aam
ror
fwait
and
mov
rcrb
rolb
add
jl
daa
scas
xchg
push
add
lret
enter
adc
fninit
iret
xchg
lahf
fbstp
dec
push
out
push
cmp
and
fisubs
fsubrl
xchg
push
cli
enter
out
loop
aad
pop
mov
hlt
das
lret
scas
call
jmp
cs
mov
roll
pusha
lcall
sbb
call
mov
inc
lea
xlat
stos
xchg
xor
shl
subl
test
pop
mov
leave
rorb
jae
jge
xor
adc
xor
int
lahf
cld
mov
shl
jmp
push
dec
movb
imul
jne
lods
cmp
or
adc
leave
inc
inc
xor
xorb
jo
push
add
xchg
call
sbb
pop
insb
ss
call
clc
enter
xor
push
daa
mov
pushl
stos
gs
dec
movsb
in
sub
dec
lods
jp
pop
mov
stos
repz
inc
lods
adc
loop
imull
das
jge
mov
jo
out
mov
add
test
pop
mov
jecxz,pn
xchg
dec
adc
outsl
popa
iret
push
in
ds
test
test
jns
or
jle
push
jo
adc
out
push
test
cmp
movb
js
ret
inc
lahf
shll
scas
icebp
jne
pop
mov
lcall
inc
xchg
adc
inc
lret
xchg
adc
add
outsl
mov
xor
fcom
in
jecxz
ficoml
or
push
cltd
sbb
xlat
pop
sub
orl
cmp
dec
in
leave
sbb
bound
cmpsb
repz
push
push
lcall
jo
std
scas
xchg
jle
or
push
mov
mov
mov
jne
roll
cmp
stos
or
lods
xchg
into
nop
mov
sbb
mov
lods
cmc
push
aam
clc
sahf
xchg
sbb
pop
dec
sbb
mov
fs
inc
sbb
test
or
add
in
jb
rcrb
pop
aad
mov
subb
sbb
mov
popa
sbb
call
in
push
insl
push
mov
hlt
cs
xlat
stos
and
add
push
jnp
repnz
jae
add
xchg
in
ret
nop
pop
jl
jl
and
sti
ret
lea
sarb
outsl
test
les
stos
or
ret
sub
jno
pop
lods
cltd
and
imul
aas
mov
aam
rorb
out
stos
lods
xchg
fstp
pop
inc
or
loope
xor
div
or
stos
mov
or
ja
into
int
lret
adc
mov
push
lcall
sbb
loope
je
addr16
flds
leave
add
testb
mov
nop
xchg
inc
mov
aad
jbe
push
and
in
cmp
test
mov
add
cmp
movb
or
mov
sub
stos
movsl
mov
or
gs
mov
pop
dec
cmp
add
fs
test
ss
and
bound
push
inc
pop
pop
testb
lock
pop
cli
scas
addr16
push
lods
stc
xchg
mov
into
inc
and
mov
pop
inc
cmpsb
pop
sub
and
cmp
stos
cs
xor
lahf
daa
xchg
or
jnp
inc
mov
xlat
xchg
jnp
cltd
dec
bound
pop
fdiv
or
pop
call
dec
add
fwait
imul
lret
mov
sub
dec
inc
call
nop
fcompl
in
es
push
inc
mov
lds
mov
inc
mov
insb
gs
add
mov
jb
ss
mov
gs
mov
cmc
into
stos
pop
jne
cmp
pop
in
aaa
fstpt
mov
or
fldl
and
pop
xchg
xor
in
test
fisttps
jo
daa
dec
test
pushf
sbb
hlt
aad
dec
xchg
and
in
jmp
jbe
jae
and
fsubrs
es
mov
test
inc
mov
xor
cmp
in
insb
dec
xchg
das
outsl
fstl
clc
insl
and
inc
adc
repnz
xchg
and
ficoml
push
pushf
pushf
or
jp
nop
pop
adc
pop
jne
mov
inc
or
in
imul
pushf
jmp
inc
imul
push
test
into
js
add
je
movsl
ljmp
and
dec
jns
insl
movsl
add
xchg
fcom
movsb
cli
fdivs
jns
loope,pt
and
jno
shl
jge
sbbb
in
adcb
in
add
call
mov
enter
test
loop
inc
inc
sbb
imul
xor
pop
out
mov
dec
test
pop
jg
std
and
mov
shl
inc
loop
into
in
in
xchg
and
adc
pop
push
addr16
add
sti
insl
hlt
aad
loopne
dec
push
sahf
sbb
cwtl
sbb
and
insl
push
movsl
sbb
dec
jl
icebp
in
pop
push
push
mov
ret
hlt
pop
imul
adc
sbb
loop
add
pusha
jo
jb
jp
pop
jle
test
adc
adcb
out
inc
fwait
cmp
sub
test
pop
fs
arpl
idivl
cmp
test
mov
push
pop
stos
fcom
jne
inc
mov
inc
xor
ret
inc
std
mov
push
ret
mov
jmp
hlt
roll
punpckldq
cwtl
adc
pop
fs
adc
jns
inc
shrb
add
and
mov
cmp
adc
ss
lods
inc
and
test
jl
mov
addr16
mov
jno
scas
icebp
dec
test
adc
mov
pop
xchg
adc
mov
dec
cmp
xlat
push
popf
movsl
int
add
cmpl
cvtpi2ps
movsb
data16
mov
pop
aas
clc
mov
add
aad
inc
mov
enter
bound
mov
jo
fnsave
lea
pusha
pop
xor
mov
ret
inc
bound
cld
stos
inc
ret
imul
push
icebp
lret
mov
cmc
es
pop
sub
push
addr16
aad
jo
movsb
dec
dec
movl
into
sarb
hlt
cmc
dec
scas
shll
js
pop
and
mov
into
push
jae
pop
lock
test
push
dec
lret
adc
popf
pop
nop
aaa
push
and
jbe
cmp
aad
arpl
jle
xchg
pop
lods
add
das
cmp
mov
loopne
jbe
stc
in
adc
gs
call
jne
inc
fidivrl
rorb
and
mov
out
or
sub
push
and
sarb
out
in
jge
mov
and
mov
lahf
and
adc
mov
sarl
adc
and
arpl
popa
test
test
mov
lods
int
rol
pop
or
scas
mov
in
adc
mov
mov
mov
cwtl
in
sbb
das
test
scas
mov
cs
pushf
push
jne
adc
mov
rcr
pop
ret
ret
out
pop
jecxz
xlat
cwtl
imul
icebp
sub
lea
dec
sub
sahf
xlat
fsts
pop
sbb
in
subl
mov
popa
aam
loopne
cmpsb
aaa
iret
pushf
inc
ds
jmp
repz
or
add
nop
cmc
fwait
and
mov
in
mov
call
mov
lahf
cli
idivl
out
jmp
andb
push
repz
jns
inc
pop
in
lds
mov
mov
enter
out
shrb
cwtl
sub
lea
pminsw
mov
jo
pop
push
out
jmp
lods
mov
inc
in
mov
xchg
shrl
sub
jp
jne
mov
push
roll
mov
cmpsb
jo
jmp
or
mov
jae
movsl
das
in
inc
adc
sub
test
lret
adc
cmpsb
push
sbb
lahf
mov
lea
mov
or
fdiv
outsb
cli
je
mov
sbb
xchg
mov
inc
pusha
insb
outsb
hlt
inc
stos
xchg
push
out
outsb
mov
sub
mov
std
and
cltd
xor
or
and
addl
sbbb
cmp
or
fisubrs
push
int
pop
cwtl
out
xchg
mov
scas
fmul
lahf
stos
mov
lock
pop
xor
sbb
imul
dec
mov
in
mov
or
mov
sbb
loope
mov
ss
jp
lcall
or
loopne
or
mov
bound
jnp
mov
loopne
mov
aad
add
mov
rcrb
fldt
je
movsb
scas
insb
adc
and
add
xor
out
xchg
xchg
mov
bound
test
popa
jmp
pop
jb
or
mov
mov
nop
sti
stos
out
flds
std
lea
dec
incl
push
lcall
out
xor
add
dec
jnp
dec
sub
push
cltd
jo
add
ret
dec
mov
xor
jl
xchg
jbe
sahf
daa
add
dec
aam
pop
mov
inc
repz
cmpsl
cli
mov
int
jl
gs
repnz
scas
addl
outsl
jb
out
jecxz
psubb
mov
xor
scas
mull
inc
mov
pusha
fcoms
and
pop
fcomi
test
movsl
mov
icebp
fidivl
add
inc
push
jns
jl
addr16
lods
push
adc
mov
inc
cmp
pop
jnp
push
push
dec
test
add
rorb
jns
subl
ret
pop
mov
ret
es
mov
shlb
dec
push
add
fisttpll
fisttpl
sbb
jecxz
mov
addr16
cld
mov
in
pop
fs
mov
jle
xchg
or
mov
inc
stos
mov
or
mov
push
enter
push
call
subb
mov
or
lods
mov
jne
add
push
push
pop
add
mov
pop
fsts
fs
jns
stc
cs
inc
and
cmp
ja
pop
shlb
loop
adc
jle
nop
xchg
jno
or
icebp
add
sarb
fidivrl
inc
mov
cmc
arpl
pop
adc
cmc
es
and
cmp
pop
imul
dec
pop
pop
and
inc
sbb
clc
call
mov
adc
in
xchg
roll
mov
addr16
icebp
sahf
mov
dec
mov
mov
cwtl
xor
cmc
xor
lea
add
bound
push
or
stos
dec
into
sub
ljmp
movsb
xchg
jns
in
xchg
xor
mov
dec
inc
js
sub
imul
out
pop
fildl
arpl
inc
sbb
mov
loop
movsb
mov
dec
arpl
out
mov
hlt
mov
mov
xlat
xchg
sarb
and
loop
rcll
ret
int
dec
loope
les
int
mov
push
dec
sbb
sub
scas
je
jle
inc
adc
xor
or
insl
fdivrs
push
movsb
mov
out
pop
or
pop
cmpsb
ds
mov
and
sbb
add
add
inc
pop
push
add
in
pop
xchg
sub
outsb
fucomp
into
das
xor
ljmp
cmp
out
mov
ljmp
push
or
stc
loop
mov
rol
sbb
inc
ret
cmp
pop
pushf
in
jmp
xchg
adc
scas
lret
daa
ds
xor
cmc
xor
arpl
call
push
addr16
movsb
dec
fidivrl
adc
js
push
shll
adcb
enter
and
cmpsl
roll
jge,pn
cmc
clc
lahf
out
test
lock
xlat
sub
test
loopne
int3
inc
mov
in
lret
aam
xor
stos
leave
mov
push
mov
cmpsb
adc
mov
outsl
lods
test
inc
fwait
cmpsl
popf
mov
repnz
je
pop
fdivl
jns
inc
xor
adc
fistpl
ljmp
sub
cmpsl
jbe
or
xor
imul
outsb
mov
std
fldenv
dec
push
or
jp
pop
jnp
fisubs
pop
mov
aaa
imul
or
loopne
pop
sbb
jp
xchg
addr16
xchg
or
outsb
xchg
aaa
pop
icebp
leave
int3
ljmp
sbb
or
adc
sti
fwait
sub
sbb
xor
popa
imulb
icebp
fstl
xor
ss
adc
cmpsb
or
and
fcoml
in
lock
lds
out
pop
inc
xor
mov
mov
mov
push
push
scas
in
insl
repnz
or
xchg
jb
sub
xchg
das
ficoms
fisttps
in
gs
and
adc
daa
and
es
inc
adc
ret
int3
xchg
mov
std
stos
pop
pop
mov
ds
mov
adc
mov
ja
push
jnp
ret
sbb
cmp
and
lods
cmp
lret
in
fstl
sbb
pushf
into
sub
movsb
inc
inc
test
pushl
push
movsb
xor
mov
inc
pop
popa
or
fwait
enter
ss
dec
mov
aaa
test
sub
mull
mov
cltd
stos
clc
movsl
mov
adc
mov
add
push
iret
jbe
or
push
and
add
cwtl
xchg
push
and
pop
lret
cmp
cmpsl
cmpsl
cmc
jmp
push
lahf
sti
pop
bound
xlat
outsb
cmp
sub
and
xadd
mov
stos
push
dec
push
fidivrl
fstps
jle
or
xor
test
in
sbb
in
mov
or
xor
bound
push
sbb
cli
push
les
adc
pushf
cmp
cmp
cmpsl
mul
pop
push
add
ds
fcomp
adc
pop
xor
jmp
xchg
or
out
pop
xchg
xchg
mov
push
loopne
sahf
mov
repz
xor
hlt
icebp
outsb
hlt
fstps
jge
enter
mov
addr16
add
mov
xor
sbb
pop
ss
dec
ficoml
add
fs
jge
dec
mov
sub
mov
stc
mov
mov
data16
lcall
mov
jmp
popa
mov
popa
ds
lock
jmp
cltd
test
fcmovnu
stc
stc
loopne
in
mov
dec
loop
ljmp
shrb
int3
in
mul
dec
mov
inc
insb
cmp
fists
das
sahf
push
test
and
push
add
test
fs
or
loope
out
or
lods
lods
and
cmp
adcb
push
mov
lock
popa
mov
repnz
ret
cwtl
testb
push
cs
loop
inc
leave
cmc
mov
jge
daa
clc
pop
inc
repnz
xor
mov
jecxz
cmpsl
dec
sbbb
jmp
repz
dec
push
rorb
jae
bound
xor
imulb
pop
mov
movsl
xor
es
xor
in
bound
pushf
add
rol
cmc
xor
inc
mov
ret
sbb
and
and
jnp
xor
not
or
test
xchg
in
mov
call
mov
fadd
sub
push
jo
and
jle
xor
jae
out
push
fldenv
push
jns
in
lds
pop
pop
xor
mov
aaa
dec
rorb
imul
pop
addr16
in
jecxz
xor
inc
xchg
add
inc
mov
loop
int
push
mov
mov
ds
lahf
inc
fiadds
cli
out
in
mov
mov
loopne
sbb
daa
arpl
cmp
std
ffreep
push
push
pushf
lea
push
mov
ss
mov
pop
movb
cmc
rcrl
nop
int3
mov
dec
and
pusha
clc
inc
inc
aaa
inc
scas
push
repnz
pushf
iret
subb
pushf
jge
imul
pop
xor
repz
ds
dec
pushf
jbe
lea
sahf
sbb
in
popf
mov
jle
nop
sbb
ds
pop
leave
and
mov
mov
ds
jmp
leave
sub
and
arpl
repz
out
and
push
adcb
xor
xor
icebp
cli
ret
loop
sub
mov
jo
mov
fcmovb
cmp
cld
mov
push
popa
lods
int3
xchg
add
test
sbbb
cmp
loopne
mov
stos
cmp
movsb
inc
pop
lret
dec
nop
std
jmp
mov
lcall
pusha
fnstsw
lock
mov
cmp
addr16
popf
dec
mov
pop
jns
scas
int3
outsb
and
scas
xlat
scas
orb
push
jecxz
lea
std
testl
mov
out
sub
xor
cmp
xchg
pop
mov
fldt
dec
pop
fbld
movsl
aas
out
lds
fxtract
cmpsl
movsb
insl
inc
outsl
std
andb
and
pushf
cmp
int
sbb
add
loopne
icebp
mov
xor
dec
pop
out
mov
add
cmp
pop
out
xor
xchg
into
cmc
adc
xor
iret
js
mov
jle
or
fisubrl
xor
stc
jno
lock
adc
add
movsl
test
test
inc
pop
xchg
or
ljmp
movsb
fldcw
fwait
daa
jl
jb
mov
popa
idivb
das
push
jae
aaa
loop
lcall
mov
enter
rolb
xor
adc
pop
mov
xchg
lock
pop
xchg
pop
int
adc
fisubrl
clc
and
rclb
filds
fsubrl
mov
int3
popa
jmp
es
or
ds
mov
hlt
push
outsl
push
mov
jnp
dec
pop
jp
add
movsb
outsb
dec
stos
xchg
rorb
leave
xchg
adc
imul
shll
mulb
and
decb
or
inc
adc
or
and
mov
outsl
jns
in
iret
jle
pushf
sub
imul
add
in
loop
xor
xchg
sub
mov
push
sbb
loope
and
and
lret
jp
add
popa
sbb
mov
jns
ret
xor
cli
adc
push
mov
xor
das
mov
xor
sbb
sbb
scas
sbb
push
nop
add
sbb
xor
in
mov
sbb
in
frstor
into
xorb
push
test
jmp
ljmp
cli
sbbb
jae
cmc
int
mov
out
out
xor
cld
or
and
or
filds
clc
mov
mov
push
jo
or
out
data16
jecxz
jno
pop
fisubl
mov
in
or
pop
adc
mov
daa
mov
out
clc
add
ret
sarl
sub
leave
push
fwait
add
jo
stos
jle
xchg
idivl
ret
lret
push
insl
insl
mov
cmp
sub
inc
loop
fidivs
pop
imul
out
aad
mov
jne
xchg
ret
mov
enter
clc
sub
jle
adc
xchg
std
pop
fiadds
or
lods
js
push
inc
shlb
ds
jg
and
push
outsb
enter
fldenv
pop
arpl
fwait
stc
lahf
inc
mov
mov
jle
dec
fcmovne
and
std
shrb
jmp
jmp
adc
cmp
pop
mov
out
jno
icebp
mov
ja
jns
mov
lahf
cmp
test
xchg
jp
pop
nop
mov
insl
js
test
movsb
mov
xor
push
adc
shlb
add
xor
scas
cmp
inc
sub
ds
out
lcall
mov
cmp
adc
mov
ljmp
ds
xor
fiadds
jecxz
out
pop
inc
jmp
xchg
loopne
dec
decb
pop
adc
or
or
hlt
cmp
lahf
insl
dec
xchg
das
adc
int
sbb
je
fstl
mov
pop
out
cltd
inc
ds
jne
push
ficoms
fdivs
aaa
pushf
mov
and
dec
sbb
adc
xorl
sbb
adc
cltd
into
push
push
and
pop
inc
test
repz
dec
gs
out
lods
sbb
sbb
ret
xchg
sbb
sub
mov
shll
sahf
sub
cltd
push
sub
fimull
push
cld
mov
bound
popf
push
outsb
pop
lahf
mov
sahf
push
imul
test
push
fdivrs
shl
mov
mov
jp
pusha
pop
sub
push
aaa
sti
pandn
into
mov
dec
sub
icebp
fwait
xchg
stc
repnz
data16
pop
lea
sbb
or
mov
aad
jp
and
push
test
and
mov
je
test
adc
add
dec
fstl
or
mov
fcoml
popl
cs
jbe
pusha
lret
cmp
fdivrs
ja
fs
xchg
or
fwait
ret
imul
sub
adc
adc
test
pop
sub
inc
punpckhbw
pop
push
add
jg
dec
xchg
sbb
push
push
test
into
loopne
or
inc
push
push
add
and
jle
lret
push
mov
ja
ret
ss
push
gs
mov
inc
xor
or
pop
lods
shll
jge
mov
add
pop
lret
je
icebp
std
les
or
jge
xchg
std
inc
inc
shll
cmc
sub
arpl
pop
fisubrs
loop
push
mov
stc
add
cli
out
in
jbe
roll
lret
jnp
in
lods
movsb
or
xorl
push
repz
sbb
mov
loop
leave
sbb
ret
xlat
loop
sub
outsb
enter
gs
loopne
mov
aam
xchg
sub
add
mov
pop
cmp
mov
mov
stos
setb
push
jo
push
fiadds
cmp
cli
mov
xor
push
stos
in
sbb
mov
push
fistl
add
push
stos
mov
arpl
in
jecxz
jbe
xchg
addr16
mov
lock
stos
sarb
xor
dec
mov
dec
add
out
and
ss
and
jne
sbb
outsl
ds
adc
push
imul
repz
rcrb
lods
inc
pop
sti
dec
decl
sbb
mov
dec
mov
sbb
adc
popa
sub
xchg
add
dec
pop
xor
jne
loope
xor
mov
cmpsl
insl
mov
inc
inc
insl
cs
xchg
aaa
mov
loope
cmpsl
mov
xchg
or
jmp
sub
popf
adc
push
dec
xchg
pop
pop
xor
lahf
cltd
arpl
sbb
loopne
movsl
lahf
and
pop
aad
xor
mov
jb
int
clc
jns
cmp
mov
mov
loopne
push
dec
popf
xchg
lcall
nop
pop
int3
divb
sub
leave
das
push
out
pop
insl
pop
add
mov
adc
pop
icebp
enter
repz
mov
adc
cmp
gs
call
dec
xchg
daa
mov
adc
fcmovu
imul
sbb
add
xor
pop
out
cmpsl
jb,pt
lds
jecxz
pop
aam
pusha
pop
ret
gs
shl
or
sub
nop
push
imul
xor
push
shll
into
scas
pop
adc
push
lret
pop
add
and
fistps
xlat
lods
or
popf
fisubrs
outsl
testb
inc
cmp
aad
dec
sbb
fdivl
sarb
scas
scas
adc
cmpsl
addb
adc
mov
sbbl
imul
push
outsb
aam
shlb
test
repnz
call
das
and
cmp
and
sbb
lods
xchg
add
mov
cmpb
pusha
testb
and
call
mov
adc
ror
out
cmp
pop
mov
push
xchg
ds
inc
lods
fsubrs
xchg
ret
aas
push
pop
daa
cmc
repz
fldcw
jb
ret
xor
cli
xor
jle
pop
pop
imul
and
je
mov
pop
ss
inc
xchg
aad
sub
repz
lods
ficoms
mov
addr16
shll
int
fsubrl
shll
jecxz
or
sar
xchg
data16
mov
mov
mov
cld
enter
lock
in
sub
pop
rclb
jne
inc
adc
shll
sti
out
fs
inc
repz
invd
push
mov
jmp
push
pop
mov
int
xor
cmc
fistl
call
ret
pop
sbb
push
loopne
rol
into
sbb
pop
enter
jge
mov
push
jne
gs
adc
sub
or
pop
subl
inc
pop
and
sbb
pop
or
iret
and
push
loopne
pop
push
xchg
push
popa
xchg
fisttpl
xor
rorl
cmp
rcrb
or
mov
and
pop
sub
iret
jb
out
not
cmpsl
push
aad
jnp
mov
adc
stos
xchg
jle
jl
dec
stos
mov
and
push
out
ja
jle
mov
scas
lods
push
jp
int3
cwtl
sub
xchg
add
push
call
fldt
xchg
call
ret
imul
cmp
xchg
adc
es
xor
dec
push
cwtl
sbb
in
lods
cld
xor
test
add
ljmp
jno
and
test
dec
lock
nop
xor
pop
insl
arpl
cmpb
mov
sub
stc
pop
cltd
imul
push
or
push
mov
in
mov
cmp
iret
or
scas
andb
jg
std
js
pop
fcom
mov
pop
loopne
mov
inc
shll
mov
or
xchg
mov
popf
mov
ja
ret
dec
dec
sarb
aas
ja,pn
add
or
out
lea
push
xor
iret
in
sub
lret
inc
cltd
jnp
in
xchg
div
pop
in
lds
fisttpl
std
cmp
mov
in
stos
push
xchg
inc
jecxz
pop
inc
in
inc
and
mov
stc
int
mov
xor
sub
mov
dec
xchg
or
pop
aam
das
lahf
pop
xchg
xlat
aas
loop
jp
test
mov
les
jns
mov
mov
lock
adc
js
add
jl
fimull
addb
inc
negl
mov
inc
xchg
sbb
cmp
jl
ss
rcrb
fwait
mov
pushf
test
lods
cltd
lahf
pop
jae
movsb
fs
fsts
dec
sbbb
insl
cmpsl
movsl
hlt
dec
xor
out
repz
inc
sub
jnp
add
or
mov
stos
int3
mov
in
xor
cltd
mov
and
stos
or
loopne
or
push
inc
xor
xchg
aas
bswap
push
cltd
fisubrs
and
es
insb
insl
gs
mov
enter
and
hlt
mov
mov
fcomp
dec
lahf
repz
shrl
mov
and
into
pop
lock
and
sub
in
sahf
add
rorb
sarb
roll
and
add
cli
andl
scas
mov
or
push
lods
sub
fwait
out
push
xor
mov
insl
ret
and
mov
pop
add
xchg
stos
dec
sbb
jge
pop
in
je
cltd
jecxz
sub
in
cmp
mov
cmp
test
fnsave
ja
inc
arpl
pushf
push
int3
sub
push
xor
lahf
into
cltd
jl
test
rclb
and
xchg
inc
mov
inc
ds
rcll
or
scas
inc
cltd
jmp
lods
xchg
test
add
xchg
addl
mov
add
lret
scas
mov
jno
or
movsb
push
lea
add
ficoms
out
mov
mov
mul
and
xor
mov
rcll
mov
jns
push
iret
push
push
sbb
outsb
jle
int3
out
aad
popf
cmp
lcall
movsl
jnp
xor
test
add
xchg
fstpt
and
xchg
mov
adc
popa
mov
sub
adcl
bound
ret
stos
cwtl
inc
sbb
mov
ret
mov
cmp
dec
pop
push
shl
lahf
mov
cwtl
sbb
fistl
mov
adc
leave
shr
mov
fisttpll
add
mov
push
lods
xchg
test
sahf
leave
jno
and
or
push
bound
pop
in
bnd
gs
lcall
movsl
lcall
sub
push
cmp
dec
and
and
dec
xchg
push
enter
push
add
das
bound
fs
out
sahf
xor
push
mov
mov
sbb
pop
repnz
shrl
adc
mov
mov
push
mov
add
mov
test
test
jmp
xlat
xchg
out
aam
ror
std
je
mov
jb
mov
nop
test
cltd
mov
dec
dec
insl
mov
pop
loop
jns
dec
roll
add
adc
test
lds
pop
push
call
mov
loop
xchg
mov
push
jb
cli
test
call
stos
jl
stos
gs
andl
cld
push
dec
pop
pop
mov
stos
mov
pop
cltd
lds
popa
push
sbb
sbb
outsl
sbb
push
bswap
enter
jmp
add
xchg
cld
bnd
in
inc
add
clc
pop
xchg
call
clc
mov
ror
jg
out
push
lock
xchg
pop
or
inc
ss
vfmadd231ss
repnz
push
test
sbb
fcmovb
rorl
mov
jle
xchg
pusha
sarl
sub
sahf
ret
arpl
das
mov
jns
sbb
ss
mov
je
ljmp
xor
jg
xchg
inc
mov
or
add
iret
xchg
enter
fcoml
test
mov
mov
xor
jge
mov
aad
inc
pop
adc
aad
loop
push
out
xchg
pop
test
inc
push
push
cmp
popf
jne
adc
pop
test
call
std
push
std
push
sbb
inc
xor
xchg
push
dec
sub
or
in
mov
inc
jae
daa
cmpsl
push
or
push
sbb
sub
std
push
mov
das
sbb
inc
nop
test
popl
jg
loope
sub
cmp
pusha
mov
cmc
inc
xchg
loop
sub
sbb
shrl
mov
leave
push
mov
and
adcl
xor
movsl
jmp
dec
push
adc
inc
jecxz
aad
add
pop
fisubl
add
arpl
fbstp
fisttpl
adc
pushl
mov
repz
stos
and
cmp
cmp
addr16
xchg
push
mov
jmp
pushl
test
push
leave
in
sub
fsubr
sbb
bound
insl
fildl
dec
test
pop
movsl
sbb
aas
jp
and
push
movsl
ret
xchg
sti
push
xchg
jge
mov
dec
lret
cmp
cmp
pop
push
dec
std
jns
je
xchg
jne
stos
add
dec
sbb
inc
ret
pop
jns
mov
cltd
outsl
ret
pop
xchg
ficomps
dec
insl
mov
push
int3
std
or
sbb
xor
adc
pop
flds
xor
out
cmp
cmp
cs
inc
mov
inc
pusha
cmp
aaa
jecxz
movsl
ds
movsl
in
aad
imul
lock
fdivs
add
mov
sub
jg
insl
sub
aaa
add
addr16
pop
inc
aad
lods
mov
lret
pop
rol
mov
lret
jno
fs
jecxz
mov
movsb
mov
jmp
xchg
push
mov
cmpsb
sbb
push
ret
in
push
gs
push
popa
ret
outsl
or
jmp
add
mov
in
aad
ret
adc
shrb
push
inc
pop
xor
aam
and
fwait
in
cmp
adc
or
gs
mov
lea
movsb
repnz
sbb
les
aas
xor
xchg
test
cs
jno
in
sbb
push
cli
call
add
daa
cmp
push
hlt
or
and
clc
or
xor
scas
mov
ja
cli
push
dec
popa
clc
out
rcr
daa
sub
test
sbb
iret
fisubrs
fistps
fisttps
jo
in
maxps
adc
cwtl
je
jp
sbb
icebp
sbb
fsubl
cli
es
add
push
movsl
adc
inc
inc
inc
loop
inc
inc
stos
fdivrs
aad
fidivs
lahf
mov
out
ret
sahf
sub
mov
cmp
and
jle
shll
mov
mov
push
push
inc
pop
cmp
cmp
adc
hlt
mov
sbb
rolb
mov
mov
jbe
sbb
or
adc
or
lds
mov
jns
jne
mov
clc
mov
jne
or
test
push
aad
jecxz
push
and
test
push
lcall
sahf
aaa
cmc
hlt
ds
ss
addr16
fdivrl
pop
mov
mov
iret
and
adc
cmpb
les
pop
dec
loope
ds
rcl
push
dec
stc
leave
pop
jle
arpl
leave
mov
dec
rorb
lock
stos
pop
sbb
dec
repz
mov
jecxz,pt
into
bound
ret
xor
iret
test
arpl
or
add
and
ds
sub
fldcw
push
je
xor
in
outsb
mull
xor
sbb
outsb
ffree
jno
or
cmpsb
pushf
xchg
lock
dec
dec
cltd
roll
je
jb
fldl
mov
test
xor
dec
adc
movsb
add
and
push
incl
jnp
inc
outsb
incl
popf
test
stc
inc
popf
aas
xor
sahf
rcrl
mov
into
fucom
and
xor
mov
lods
fwait
jge
fnstsw
ds
dec
push
xor
pop
mov
lods
jae
icebp
leave
mov
sti
cltd
lar
sbb
mov
enter
xchg
rcrl
inc
mov
xchg
mov
dec
jecxz
hlt
jo
or
scas
push
fildl
int3
clc
inc
lcall
sbbb
push
inc
dec
sbb
into
movsl
xchg
imul
shrl
pop
scas
sar
mov
cmpb
dec
sbb
dec
dec
popa
loope
cld
ret
sbb
mov
aaa
les
shl
xor
insl
fcoml
inc
xorl
js
mov
mov
sub
aad
test
clc
jae
or
cmp
push
mov
test
pop
push
sub
pop
repz
dec
push
test
jno
inc
mov
and
lcall
mov
dec
int3
cli
test
jnp
jo
xchg
js
shll
push
jg
sbb
mov
orb
es
xchg
sahf
enter
mov
push
ret
imul
jle
dec
mov
xchg
push
movsl
sub
pop
pop
pusha
cmp
ret
test
out
lcall
in
into
in
add
out
hlt
inc
mov
in
sub
outsb
mov
ficoml
mov
mov
rclb
pop
mov
dec
pop
sbb
mov
pop
push
aas
add
mov
in
push
mov
add
fnstenv
sarb
sub
dec
insb
loopne
add
imull
dec
jae
and
sbb
bound
das
cltd
aaa
rorb
psrlw
pop
ja
xchg
in
leave
bound
cmpsl
or
iret
ficoml
int3
dec
clc
add
gs
mov
or
ja
cmpsb
add
andl
testl
add
fyl2xp1
fwait
xor
insl
je
js
and
xor
push
stos
cmp
xor
in
ss
dec
xor
xorl
inc
or
fsubl
or
or
insl
gs
leave
push
pop
cmpsb
push
jb
pop
dec
into
sub
sub
lds
xor
stos
push
mov
ljmp
cs
dec
cmpsb
aaa
test
sarb
dec
mov
lahf
pushf
jle
xor
test
aam
pop
loopne
sbb
pushf
adc
out
pop
xor
or
out
jbe
adc
js
inc
sbb
jbe
ss
daa
popa
xlat
dec
mov
sbb
test
xchg
repz
fidivl
sub
loope
xacquire
sub
push
das
or
cmpsb
fs
push
outsb
jns
rcrb
push
sub
inc
cld
or
jl
fiadds
fwait
push
pushf
daa
shlb
jns
cld
fs
pop
xchg
scas
leave
inc
xchg
cmp
mov
jge
rorl
and
and
push
add
add
and
pop
out
daa
in
jnp
and
lcall
mov
mov
and
cli
sub
cld
add
dec
dec
mov
mov
jb
mov
cmc
fiaddl
loopne
cmp
mov
mov
rolb
rorb
fstpt
pop
gs
xor
push
xor
mov
pusha
fwait
les
xor
mov
xor
ljmp
cwtl
test
adc
bound
dec
push
arpl
in
mov
pop
repnz
jg
orb
sub
gs
or
xor
pop
mov
inc
lea
inc
mov
dec
fstl
xchg
mov
xchg
and
aas
out
push
aam
dec
sbb
adc
sub
out
ja
stc
fidivrs
rclb
mov
ror
pop
dec
incl
mov
jbe
jns
movaps
lds
int3
jmp
daa
inc
loop
pop
sub
mov
jbe
test
outsb
jmp
adc
outsb
push
sub
sbb
ret
out
sub
mov
mov
cmp
pop
fists
and
sub
lret
jne
push
inc
xchg
ret
pop
cwtl
and
out
in
je
mov
pushf
sub
pop
jmp
xchg
sarb
fistpll
mov
dec
pop
dec
push
hlt
in
int
sahf
add
jle
inc
fisubrl
loope
mov
jbe
cwtl
mov
jecxz
popa
xchg
jo
sbb
xor
or
sub
leave
sti
orl
bound
in
cmp
pop
cmc
pop
xchg
out
rcr
mov
mov
in
pop
in
or
out
mov
lret
pop
fisttpll
dec
xchg
xchg
clc
lcall
ret
mov
mov
mov
pushl
out
lret
callw
es
aas
jne
pusha
mov
je
pusha
jge,pn
popf
sub
or
pop
int3
shlb
lods
mov
add
jge
lods
pop
out
cs
aad
mov
andl
cmp
mov
jp
call
mov
lds
inc
aam
pop
mov
sahf
mov
loopne
push
cmpsl
daa
xor
imul
and
int
inc
je
pop
sahf
push
movsb
cmp
mov
aas
test
shlb
xchg
sbb
xchg
dec
mov
imull
xchg
das
bound
dec
imul
fstps
jmp
mov
inc
sbb
sbb
cmp
out
test
shlb
or
xchg
shlb
mov
add
outsb
fiadds
hlt
cltd
jmp
mov
adc
mov
imul
shrl
cmc
rcll
in
rcl
jl
adc
bswap
sbb
mov
lds
mov
into
xchg
fucomp
mov
jns
test
negb
cmp
lods
loopne
loope
pop
lock
mov
fisttpl
lods
push
inc
mov
or
aad
cmp
mov
test
stos
outsl
mov
stos
pop
sarl
xchg
pop
mov
stos
inc
cs
mov
aaa
push
sub
mov
add
cmp
out
adc
in
icebp
negb
lds
or
decb
pop
fwait
ret
pop
aas
in
js
sub
xor
aas
push
pop
jl
imul
lretw
fadds
rorb
add
aas
jg
shlb
cmp
fs
xchg
or
mov
gs
cmp
pusha
pop
mov
mov
aam
sbb
js
jge
enter
sub
sub
stos
enter
js
xor
inc
cmc
inc
pop
pusha
push
or
leave
push
adc
jno
out
data16
testb
ret
ss
sub
insb
cli
dec
and
shrb
jbe
mov
sub
xchg
add
pusha
mov
xchg
aam
mov
lock
stos
mov
add
test
stos
orb
aad
loopne
test
imul
out
in
out
rcll
mov
ss
sub
cmp
pop
push
mov
nop
movsl
xchg
aas
fsubrs
lret
mov
push
shr
cld
jbe
xor
mov
repnz
pop
mov
sub
push
jo
addb
and
cmp
cmp
rcpps
mov
js
mov
cmp
stos
fwait
cmpsb
movsl
xchg
fadd
pop
xchg
ljmp
add
jnp
mov
out
and
dec
mov
add
xchg
pop
lea
and
ja
jbe
sub
pop
lret
mov
mov
mov
and
out
jb
lds
mov
pushf
fwait
stc
call
pushl
push
pop
idiv
fst
test
ljmp
popf
mov
inc
xchg
fcmovbe
inc
incb
rorb
fwait
mov
push
mov
and
and
dec
push
in
xor
mov
cmp
cmp
sub
in
insl
into
adc
jo
pop
addr16
outsl
dec
jbe
push
or
stos
cmpsl
movb
dec
sub
lock
mov
test
and
lea
repz
jg
xor
xchg
mov
arpl
and
shr
lds
push
decl
xchg
loop
xor
xchg
adc
mov
jp
popf
sub
xchg
lods
out
jmp
data16
sub
jge
sti
xor
stos
mov
sub
mov
push
xchg
lcall
jae
pop
mov
call
lds
mov
add
addr16
adc
cmc
ljmp
fisubrl
adc
hlt
in
adc
mull
out
std
sbb
bound
mov
mov
outsl
out
test
insl
call
and
sti
adc
xchg
mov
mov
xchg
movsl
gs
fcoms
push
in
xor
xchg
or
inc
mov
push
or
and
jmp
sarb
sar
je
gs
mov
in
xor
data16
lock
xorb
mov
dec
sub
xchg
jno
fisttpll
sar
out
or
push
mov
mov
push
adc
mov
adc
orb
icebp
sub
xor
dec
repnz
add
push
rorb
leave
fs
popf
pop
incl
jno
cmp
jnp
mov
stos
ja
jo
push
pop
ljmp
xchg
ret
inc
notb
aad
mov
or
mov
jae
push
adc
repz
jecxz
js
cmc
cmc
decl
int
jg
dec
adc
in
leave
lea
or
jbe
bound
inc
stc
add
popf
stc
loopne
dec
js
jbe
mov
pop
xchg
mov
std
jbe
pop
scas
in
int
test
iret
filds
cld
mov
ds
lret
adc
mov
call
push
es
ljmp
pop
pop
jb
push
rep
test
push
jb
pop
xchg
add
lret
mov
cmp
push
clc
xchg
xchg
push
mov
sbb
pop
popa
hlt
aaa
sub
repnz
push
js
les
xor
dec
mov
pop
mov
cmpsl
pop
sbb
sbb
pop
out
mov
xchg
inc
jno
dec
fs
cmp
pusha
and
pop
out
inc
leave
cld
fists
sub
and
push
fadd
in
xchg
das
dec
dec
push
mov
push
cwtl
loop
hlt
sbb
repz
enter
xchg
popa
add
adc
ret
xchg
stos
push
xor
sub
imulb
sbb
mov
lock
dec
jb
bound
pop
das
xor
xchg
into
pop
cmp
mov
jae
pop
jb
inc
cmpsl
les
jb
fistps
sub
jno
xor
add
pop
imul
ficoms
jns
jge
push
push
xchg
in
mov
icebp
or
insb
sub
in
cwtl
loop
inc
pushf
test
mov
incb
outsl
xor
shlb
xor
cmpl
ret
js
out
dec
and
movsl
and
icebp
push
data16
daa
jge
icebp
jnp
dec
xchg
stos
dec
sbb
adc
fdivl
loop
push
mov
pop
mov
sbb
xor
xor
mov
aad
pop
push
mov
push
imul
fnstcw
pop
popa
xchg
add
pop
call
sbb
xor
inc
cmp
fbstp
ret
lock
or
push
lea
push
bound
sbb
pop
xchg
add
cs
cmp
cmpsb
out
adc
xchg
cmp
push
mov
das
jnp
cmp
push
cwtl
cmp
fstl
inc
and
test
jne
or
dec
cs
push
pusha
xchg
sbbl
xchg
adc
divb
js,pt
cmpsb
psrlq
cmp
lock
sub
and
xchg
lds
sub
mov
and
xchg
mov
lea
lcall
test
arpl
cmpsb
pop
outsl
ja
int3
xchg
les
aas
pop
mov
push
loope
jo
pop
clc
pop
imulb
je
out
cmp
fcomp
xchg
adc
jo
push
jb
test
mov
dec
fs
cmpsb
inc
xchg
stos
lret
rcll
int
mov
shl
inc
pushw
test
and
cmc
jo
aam
loopne
adc
call
cmpsb
insb
ds
in
pand
loope
pop
pop
notl
pop
lret
in
call
rcrl
cmp
call
jne
pop
adc
cs
das
test
hlt
cmpsb
jmp
mov
adc
fs
addr16
cmp
dec
pop
dec
jmp
xchg
xor
mov
lods
inc
movq
or
pop
lret
pop
or
leave
loop
cmpsb
std
div
lret
lods
jg
aas
dec
mov
or
mov
and
cmpsl
in
lds
rcr
sub
mov
clc
xchg
xor
lock
cmp
push
lcall
mov
js
sbb
pop
sbb
loopne
lock
movsl
mov
clc
out
pop
cmpsl
popa
imul
inc
add
cmp
mov
and
in
xchg
or
test
pushf
sbb
mov
or
jnp
push
out
xchg
sahf
cltd
pop
iret
mov
push
orb
scas
sbb
and
and
mov
mull
test
mov
js
inc
aaa
sbb
push
fmull
cmp
daa
icebp
subb
pop
sbb
rcr
mov
adc
xchg
mov
and
mov
cli
cmpsb
out
sub
andl
dec
mov
fisubrs
shlb
mov
pop
icebp
mov
fbld
pushf
imul
hlt
and
loop
cltd
bound
fisttps
xchg
xchg
cmc
ja
mov
insl
xor
fwait
test
xchg
and
mov
stos
or
imul
ljmp
lret
jns
pop
fistl
sub
or
ret
sub
loop
jg
mov
repnz
outsb
inc
lcall
lods
mov
pcmpgtd
les
arpl
pop
push
xchg
mov
es
imul
cmp
imul
dec
test
ja
lret
lea
ficompl
in
inc
cs
xor
sub
lods
hlt
leave
cmc
jns
testl
cmc
jno
insl
pushf
add
lahf
cli
aad
adc
jecxz
dec
push
test
and
sbb
out
cld
cmp
sbb
out
ret
pop
pop
add
pop
dec
push
popl
xchg
fs
sbb
mov
fnstcw
inc
jbe
pop
and
sar
loop
sub
mov
mov
or
lret
stos
arpl
stos
sti
fcoml
or
iret
sub
lods
push
or
imul
lods
inc
dec
aam
rol
pop
test
push
lret
cmp
dec
aam
push
fidivl
scas
xor
mov
or
stc
shl
loop
fidivs
aad
test
jg
loopne
pushf
mov
push
lea
dec
call
std
pop
pop
out
pop
out
jno
and
sahf
pop
aad
fwait
xchg
je
in
sbb
shl
push
sub
inc
inc
add
mov
fsubs
fmul
je
sti
inc
in
test
clc
lods
fistps
sub
mov
dec
push
sub
push
inc
mov
push
es
mov
mov
ja
and
std
pop
inc
insl
adc
pop
clc
jecxz
add
jns
test
fsubs
push
scas
cmp
jne
movsb
mov
sub
xor
cmpsl
inc
mov
and
andb
inc
rorb
push
iret
inc
cmp
push
dec
test
xlat
fstpl
add
jne
add
cwtl
aaa
sbb
and
jl
lcall
addl
xchg
in
in
pop
daa
cmp
fisubrs
cmpsb
leave
dec
out
popf
adcl
lahf
lahf
addl
push
out
outsl
xchg
add
lea
aas
inc
cmp
dec
and
push
popf
ret
stos
daa
addr16
mov
das
repnz
push
mov
out
adc
push
lea
mov
add
in
in
clc
mov
xchg
jecxz
stos
lods
or
inc
sbb
leave
roll
cltd
sub
mov
int3
les
dec
mov
in
xchg
jno
dec
pop
imul
mov
clc
fbld
rolb
addr16
shll
ja
dec
or
sub
cmp
nop
repnz
ret
mov
outsb
movsl
mov
loop
sub
sub
push
mov
outsl
mov
adc
ret
mov
cmp
aas
fidivrs
push
ret
adc
insl
mov
sub
xor
cwtl
sbb
imul
mov
dec
add
cmpsl
xor
add
xchg
fdiv
dec
or
xor
inc
xlat
xchg
mov
shl
mov
pusha
mov
jns
jle
bt
add
or
push
ret
lcall
adc
orb
lods
cmc
sahf
insl
pop
jle
cld
dec
stos
dec
outsl
push
and
shr
push
int3
mov
push
inc
out
dec
cmpsb
aam
ret
mov
mov
or
fisttpl
loopne
cmc
pop
or
xor
cmp
push
and
inc
push
dec
and
outsl
lods
and
out
test
adc
sar
mov
imul
movsb
aaa
fdivl
rcll
loope
dec
and
leave
dec
repz
adc
push
adc
in
stos
negl
aas
push
push
jp
popa
adc
ret
sbb
mov
pop
call
out
mov
lods
inc
pusha
fstpl
cltd
gs
or
mov
or
sbb
cs
push
adc
pop
or
sub
outsb
je
cltd
and
into
lahf
and
dec
pusha
test
xchg
jne
fmuls
mov
test
mov
jnp
jns
pop
pop
divl
xor
mov
popf
push
mov
ror
cmp
dec
add
mov
mov
ret
adc
fisubs
in
clc
xchg
cs
lea
pop
insl
loop
call
movq
outsl
fisubl
dec
pop
jecxz
mov
push
xchg
jnp
sbb
pop
push
std
in
xor
xor
xor
adc
cmpsb
cmp
loopne
dec
mov
shll
adc
mov
sub
mov
sahf
fcmovb
xchg
xchg
rorl
ret
lret
out
iret
test
sbb
pop
push
pusha
jge
xchg
or
or
xchg
rcll
sub
mov
stos
mov
push
int3
push
add
sub
or
stc
fstpt
xchg
mov
mov
call
push
repnz
gs
int
stc
push
orb
inc
cmp
stos
jmp
xor
cmpsb
jne
lds
rcll
je
adc
and
dec
enter
sub
inc
cmp
enter
mov
imul
cs
mov
xchg
or
cmpl
scas
cmp
shlb
and
push
mov
lock
shlb
jecxz
std
lea
mov
addr16
lods
pop
sbb
inc
xchg
push
cmp
es
loope
data16
dec
out
test
add
sub
xchg
cmp
inc
jp
or
incb
pop
inc
xlat
xchg
out
repz
iret
orb
mov
jb
mov
cmp
decb
mov
aas
call
or
popa
in
and
sub
popa
loopne
loopne
loope
pop
mov
dec
push
sub
lahf
inc
and
dec
dec
xchg
jnp
repnz
daa
pop
mov
mov
cli
loopne
lods
aas
into
orl
scas
xor
test
or
xchg
sub
insl
testb
lods
icebp
cmc
adc
mov
xchg
add
cmp
or
iret
adc
push
pop
arpl
arpl
xor
push
cmp
ja
dec
push
xlat
test
out
popf
out
xor
mov
fimull
sbbb
inc
cmpsl
sbb
lods
pop
mov
aam
dec
jbe
xchg
xchg
orb
sbb
call
mov
adc
inc
jecxz
bound
jmp
popa
sbbb
and
nop
dec
add
jnp
xchg
in
mov
pcmpgtw
outsl
shrb
mov
pop
stos
hlt
ljmp
test
aam
loopne
and
imul
jge
aas
jmp
dec
jns
iret
or
dec
dec
lods
jne
mov
push
pop
xchg
xchg
sbb
add
ljmp
xor
jle
cmp
xor
add
xor
stos
movsb
aaa
add
and
mov
or
bound
and
xor
xor
add
jb
cmp
push
cmp
or
adc
movsl
xchg
outsl
jmp
je
xor
mov
fstpl
call
sbb
pop
movsb
xchg
add
scas
push
lea
add
or
lods
movsl
idivl
or
jp
or
icebp
push
xor
sbb
jns
pop
inc
push
rclb
adc
movsb
push
out
fisubl
and
loopne
loopne
dec
in
fsub
shr
test
test
inc
cmp
push
into
repnz
jp
dec
ss
cmp
lahf
enter
add
dec
mov
daa
jmp
cltd
decl
mov
ret
movsl
stc
shll
into
call
adc
test
loope
push
mov
add
mov
mov
ret
cld
stc
cmp
stc
and
mov
push
jae
pop
push
cmp
add
pop
data16
lcall
cltd
leave
jbe
addr16
bound
mov
cwtl
lds
sbb
scas
leave
ja
xchg
les
jg
mov
repz
sbb
xor
fxtract
call
pop
iret
clc
sbb
imul
mov
cmp
aam
addr16
popa
mov
sub
aam
mov
inc
pop
jae
cmpsb
pop
in
and
add
ret
push
pop
inc
hlt
dec
add
xchg
cmpsl
test
fwait
mov
je
addr16
push
dec
pop
mulb
call
jno
and
rcl
popa
mov
adc
stc
js
movb
jecxz
sub
adc
fistpll
ret
push
dec
aam
fcmovb
sub
dec
dec
xchg
jecxz
mov
les
mov
out
loope
into
jl
or
shlb
repz
inc
jbe
scas
mov
adc
cmp
fisubrs
fsubrl
jo
inc
scas
mov
or
out
jns
lahf
inc
pushf
enter
rcll
arpl
stc
leave
pop
ret
xor
mov
movsb
sbb
dec
pusha
jl
push
sub
orb
add
fidivs
insb
test
jmp
lret
test
jo
lock
or
in
cld
jae
push
je
fdivrs
in
push
faddl
stos
mov
adc
and
cli
dec
fs
add
add
jb
daa
push
lock
lods
in
sub
jae
arpl
xchg
push
dec
stos
push
scas
ror
les
jae
sub
ret
leave
enter
xor
aas
mov
mov
shrb
daa
das
push
inc
sub
cmp
mov
inc
pop
imul
lret
mov
fisttpl
ja
jb
jne
sub
aad
push
bound
xchg
sub
mov
hlt
aas
loopne
cmp
pop
mov
ljmp
mov
jno,pt
loope
cmc
push
fstps
fwait
sub
addr16
mov
xchg
mov
mov
adc
and
and
outsl
mov
ja
scas
push
mov
aas
pop
sbb
sub
mov
mov
scas
sbb
and
ret
and
and
test
dec
cmp
sbb
push
adc
in
dec
xchg
pop
push
popl
jp
xor
in
push
xchg
add
dec
mov
loope
loopne
jnp
mov
jmp
loope
or
xchg
jns
sbbl
repz
flds
leave
mov
mov
xchg
mov
arpl
inc
inc
lods
in
test
xor
cld
pop
in
or
xchg
xor
call
or
cmp
adc
adc
cmc
xlat
rolb
rcll
sub
insl
sub
sub
or
test
dec
dec
jmp
daa
aad
clc
test
clc
test
divb
out
cltd
mov
imul
call
out
scas
mov
sarb
lea
ret
pop
nop
dec
ljmp
pop
pop
test
sbb
mov
inc
fwait
leave
mov
movsb
push
cmc
aad
adc
shlb
shll
xor
pop
dec
rcrb
div
outsl
xchg
pop
jl
scas
cmp
test
pop
mov
mov
sbb
dec
scas
roll
pop
movsb
xchg
inc
xchg
adc
daa
pop
push
push
mov
sub
out
decb
imul
orl
shlb
push
jecxz
imul
ret
push
sub
inc
dec
inc
cmp
mov
popf
enter
or
lods
mov
fwait
and
sbb
out
in
dec
jne
lcall
sub
or
add
lock
pushf
loope
mov
jg
mov
testl
js
imul
add
loopne
adc
lahf
daa
xor
add
mov
or
pop
in
testl
push
imull
test
push
or
lods
mov
movsb
mov
int
ret
dec
and
cmc
push
stos
mov
enter
cltd
cmp
stc
xchg
cs
out
xchg
adcb
int
sbb
cwtl
je
or
idivl
xchg
mov
sbbb
mov
js
jbe
cmc
mov
idivb
dec
adc
bound
enter
cld
out
mov
add
jbe
test
clc
lods
int
add
dec
xchg
les
bound
cli
leave
mov
mov
jle
pop
and
test
cld
data16
loop
and
fidivl
ret
scas
mov
lret
mov
jbe
inc
inc
je
scas
sarb
leave
sbb
imul
test
mov
add
mov
js
mov
inc
inc
or
into
int3
jle
sbb
mov
mov
jnp
push
popa
roll
push
into
call
call
lea
imul
jne
or
and
std
popf
leave
call
or
push
push
dec
pop
mov
fwait
pop
push
dec
jne
push
xor
xor
mov
scas
movsb
std
roll
test
mov
gs
xchg
push
pushf
shlb
ret
repz
into
mov
call
xchg
test
dec
mov
mov
movsb
jmp
js
movsb
hlt
repz
orl
je
cmpsl
stc
mov
clc
jmp
popa
into
ss
stos
and
jp
push
jge
loop
cltd
mov
popaw
fcmovu
fadd
or
or
push
pop
sub
in
enter
sub
inc
and
add
prefetch
and
xchg
mov
cmp
jmp
pop
inc
in
jns
and
daa
rcll
mov
cmp
stos
jns
pop
mov
ljmp
xor
popf
mov
fnsave
movsb
lock
subb
jmp
jae
xor
push
xchg
xlat
xchg
xchg
mov
sti
inc
xchg
jecxz
fidivs
push
xor
ret
imul
mov
and
mov
lahf
mov
sahf
and
add
scas
mov
sbb
inc
in
dec
pop
add
lret
xchg
mov
ret
mov
jecxz
dec
inc
jne
adc
push
rorl
fs
lods
pop
repz
pop
sub
xchg
pop
push
lret
popf
in
sub
daa
movl
in
cmc
out
push
or
inc
insb
adc
ficompl
jge
sbb
outsb
sahf
jo
lahf
cs
jae
push
add
push
popa
jge
fs
incb
cmp
fadds
sbb
int
pop
mov
insl
stos
jnp
frstor
outsl
outsb
jnp
cmp
loope
or
and
icebp
lret
lcall
icebp
xchg
test
jle
xchg
push
adc
movsl
xchg
jns
in
loop
mov
aad
cmp
pop
jb
mov
mov
imul
nop
jnp
mov
fadds
inc
inc
add
jmp
push
mov
das
push
ret
jge
add
sub
out
cs
bound
je
test
icebp
jecxz
inc
imul
cmp
fldcw
aam
adc
mov
sub
push
mov
dec
pop
or
dec
loop
adc
jno
loop
mov
xor
adcl
fnstcw
xor
mov
je
fldenv
and
int3
roll
sti
loope
push
pushf
imul
aam
inc
negb
push
mov
popf
push
roll
push
xchg
notl
xchg
jmp
mov
xlat
dec
sti
adc
fbld
rol
xchg
mov
mov
dec
test
into
inc
ja
push
test
fmull
dec
mov
jge
dec
rcl
inc
lcall
add
mov
and
aaa
inc
mov
out
cmp
adc
test
cli
jecxz
int3
shrb
xor
repz
push
pop
mov
pushf
push
push
lret
lock
mov
aaa
add
popf
or
jnp
sbb
add
aas
sub
lea
ret
xor
push
mov
test
inc
jnp
inc
adc
shlb
scas
mov
or
pop
sub
call
sti
sbb
popa
ret
movsl
incl
xchg
inc
pop
sub
out
daa
mov
sbb
push
push
jae
pushf
adc
fwait
dec
les
add
shl
sbbl
and
mov
lahf
jp
ljmp
mov
int
leave
aad
jle
xlat
or
lods
push
mov
xchg
outsb
adc
fnstcw
add
dec
and
push
mov
mov
lahf
repnz
fwait
inc
je
call
or
dec
inc
pop
out
cmpsb
out
je
jge
adc
dec
pop
test
test
add
rcll
lret
lcall
movsl
mov
mov
fisubrl
fdivl
fcmovnu
cld
push
cmpsl
cltd
ja
lea
cwtl
and
pop
sbb
mov
lds
mov
movsb
lods
and
jb
mov
lods
imul
add
xchg
dec
call
popa
cs
mov
daa
xor
dec
ret
inc
xchg
lock
ds
faddl
push
stos
mov
adc
cmp
imul
lcall
orb
mul
and
jbe
mov
dec
xchg
stos
cmpsl
mov
js
in
pop
pop
fdivrs
stos
addl
sahf
leave
mov
imul
in
imul
cld
sti
lahf
lret
das
xchg
mov
js
sahf
daa
sub
cmp
vcvtpd2psy
push
insl
outsl
and
stos
push
cli
mov
lock
loop
or
test
push
ja
hlt
leave
xor
arpl
inc
out
push
pop
in
sub
mov
sarb
mov
cmp
pop
pop
mov
sub
out
daa
repz
aas
leave
addr16
gs
xor
cmp
sub
push
je
scas
mov
fidivs
mov
movsb
cli
pop
or
in
jmp
xorb
fs
mov
lcall
repz
pop
fadds
add
fimuls
addl
adc
xchg
xchg
addr16
mov
stc
scas
sub
cmp
xchg
jno
push
aaa
pop
cmpsl
sbb
dec
push
adc
jnp
sub
out
sub
mov
xchg
or
xchg
cltd
push
aad
cmpsl
stc
int3
stc
shrd
aad
hlt
adc
rcrb
lret
pusha
jg
push
iret
pop
or
mov
push
in
imul
in
je
push
mov
xchg
sbb
dec
push
loopne
xchg
mov
push
pop
popa
ja
lock
or
loop
sbb
mov
push
dec
jo
scas
pusha
jbe
mov
mov
test
aas
insb
mov
or
or
and
stos
push
or
add
ss
gs
movsl
jl
into
mov
shlb
int3
shl
pop
ja
add
loop
pop
cmp
or
rcr
add
cmp
and
repz
mov
xor
jecxz
jge
in
cwtl
lock
jne
fidivrl
mov
in
mov
pop
push
mov
test
sti
and
mov
int
movsl
and
loop
ljmp
and
ret
insb
pop
xor
roll
xchg
enter
inc
fistl
or
push
insb
inc
xor
out
adc
xor
xor
ret
mov
jns
enter
push
pop
adc
aaa
or
rcrb
divb
dec
mov
sarb
into
in
mov
test
add
xchg
mov
push
mov
sub
mov
gs
hlt
fidivl
push
xchg
inc
sbb
sub
movsb
stos
and
dec
xor
push
jmp
and
test
out
cmp
pop
cmp
pop
test
mov
js
lods
ss
cmp
and
into
outsb
xor
or
cld
out
add
adc
inc
or
daa
leave
ror
pop
sbb
mov
sbb
sbb
sbb
movsl
mov
fdivs
push
mov
lds
fs
pop
loopne
lret
lock
pop
imul
or
std
cmpsb
inc
mov
jmp
pop
nop
iret
cmpsl
nop
add
call
sarb
mov
addr16
xor
mov
les
aaa
sahf
push
xor
test
push
xchg
cwtl
adc
jmp
cwtl
ja
outsl
push
jmp
loop
mov
jp
fistpl
cmp
inc
push
dec
add
xor
mov
cmp
inc
dec
sub
push
mov
sahf
pushf
jg
jnp
test
aad
dec
jp
mov
add
into
jle
test
scas
xlat
push
ljmp
loopne
adc
xchg
push
jb
adc
jle
aaa
sti
insl
add
popf
add
es
lahf
mov
xor
mov
sub
cltd
loopne
popf
std
push
dec
es
inc
lods
adc
dec
cmp
mov
sub
xlat
pop
inc
ret
les
pop
sub
sub
scas
mov
bound
mov
imul
aad
sub
iret
cld
fwait
jg
push
dec
adc
ret
sbb
xchg
adc
jb
hlt
shll
in
es
cwtl
or
push
aas
sbb
xor
adcl
xor
jl
dec
movsl
cwtl
ljmp
lods
cmp
ror
cmp
mov
xchg
or
xor
push
aam
loopne
jmp
dec
xchg
mov
lea
mov
ret
jl
stos
out
xor
inc
jno
std
dec
cld
mov
outsl
dec
sub
outsb
fld
shrl
daa
test
adc
jnp
fldcw
out
lcall
sarl
lods
xor
xchg
cmp
pop
cltd
cmp
inc
mov
rolb
xor
lahf
xor
pop
inc
xor
mov
cmp
pop
js
push
push
mov
add
aas
fstpl
jb
pop
cmp
ret
xchg
inc
cmp
pop
test
cmp
mov
pusha
sub
test
inc
mov
sbb
sahf
fcoml
pop
daa
push
xor
xchg
pop
cmp
add
int
es
mov
cmp
aas
cmpsl
mov
std
push
mov
loopne
aas
popl
pusha
sub
popf
and
xor
jg
inc
in
std
push
jns
outsb
les
ljmp
rcll
ret
push
cmpsb
inc
aam
xchg
jne
add
and
mov
jne
pusha
dec
es
std
fimull
fadd
or
int
push
imul
and
inc
repnz
push
push
mov
pop
jecxz
xlat
sti
inc
adc
stc
xchg
sub
pushf
and
or
jmp
xor
sub
dec
jge
addb
lock
pusha
in
sbb
js
mov
push
scas
std
dec
mov
rolb
sti
in
dec
mov
mov
lock
arpl
and
dec
pop
pushf
stos
rep
mov
enter
and
out
sub
imul
pop
movsbl
scas
and
push
test
stc
and
dec
insb
insl
inc
cmp
lods
pop
mov
cmp
mov
fldl2e
xchg
sub
pusha
pop
pop
insb
pop
enter
call
xor
or
popf
sahf
mov
dec
cmc
ret
xor
scas
lea
or
inc
jmp
sahf
aam
ficoms
in
cmp
outsb
loope
decb
fisubl
out
sub
dec
js
std
xchg
sub
in
pop
test
cmpsb
mov
icebp
cmp
gs
add
shrl
lods
lcall
sub
ficompl
mov
aad
outsl
pop
sub
sub
pushf
dec
push
stos
xor
scas
test
mov
test
push
inc
orl
or
aas
mov
cmp
mov
mov
fbld
and
cmp
in
adc
jb
jo
pop
imul
inc
pop
and
pop
out
rcrl
push
mov
hlt
cmp
int3
addr16
mov
jp
push
push
das
cwtl
aad
xchg
mov
adc
mov
jmp
cmpsb
and
jbe
nop
ds
jle
repnz
repnz
mov
mov
test
addr16
pop
icebp
mov
push
in
mov
into
cmp
dec
pop
pop
sbb
cmp
ds
cmp
sub
std
xor
mov
push
jmp
testl
popf
test
lcall
das
or
iret
enter
mov
jae
sahf
fcomps
mull
sub
jo
sbb
fmuls
and
insb
jg
rol
mov
pusha
repnz
imul
mov
ficompl
iret
xor
in
ret
leave
sub
pop
sbb
into
fdiv
fstps
mov
js
pop
inc
push
sbb
fiaddl
sbb
pop
pop
aam
aam
xchg
fisubs
dec
addb
dec
movsl
mov
xor
mov
mov
xor
das
mov
lea
rcr
mov
gs
xlat
js
adc
sub
shll
in
sub
clc
push
xchg
pop
aam
push
inc
and
push
lahf
lds
adc
cmpsl
and
add
pop
out
mov
cmp
mov
adc
stos
jo
daa
adc
lds
es
imulb
nop
pop
test
clc
inc
jge
jmp
int
inc
movsb
jmp
dec
nop
xor
cs
outsl
in
cmp
jge
jp
sub
mov
lret
cwtl
movsl
xchg
aas
sub
jmp
lret
subl
jg
test
loop
mov
sbb
mov
ret
adc
and
xchg
adc
mov
rol
cltd
mov
mov
scas
mov
cmc
loope
int
lret
pop
enter
mov
fs
push
fdivr
push
mov
out
cmp
insl
fmuls
shll
je
cltd
hlt
call
stc
jo
pop
xchg
mov
adc
call
sbb
inc
xlat
pop
pop
shll
mov
dec
maskmovq
sub
xchg
cmc
push
mov
pop
pop
loopne
lahf
sbb
pop
jae
outsb
scas
pop
pop
lods
das
popa
pop
dec
aad
xor
add
and
hlt
and
push
push
test
cli
addb
sub
mov
ds
mov
pop
inc
cld
mov
jmp
xor
out
cmp
aas
test
mov
xchg
sahf
loop
and
xorb
push
aas
hlt
repz
sub
adc
pop
xchg
es
jbe
xchg
shll
bound
push
mov
pop
lods
cmp
lds
pop
fisttps
ds
rcrb
jp
push
subl
push
xchg
push
stos
iret
pop
nop
sbb
jae
stos
jbe
imul
jge
in
xchg
fstpt
mov
adc
mov
push
movsb
sub
fists
incb
xor
add
and
jb
in
imul
mov
xchg
xchg
inc
xchg
adc
es
push
mov
jbe
xchg
cwtl
mov
ja
in
out
in
jge
fisttpl
aam
pop
pop
pop
push
dec
daa
nop
mov
aaa
xchg
jmp
sbb
and
out
push
inc
daa
push
pop
lcall
mov
inc
js
stos
cs
pop
xor
lods
ljmp
mov
ret
ds
jmp
mov
dec
aaa
out
lret
push
xchg
inc
mov
lea
push
push
fcoms
jb
inc
adc
mov
popa
mov
adc
jmp
lods
aaa
pop
or
push
les
aas
mov
subb
dec
jno
enter
sarl
in
lret
jp
jae
loopne
mov
pop
mov
cmp
test
pop
push
push
arpl
push
mov
dec
lcall
or
repz
divl
sbb
fildl
add
mov
cld
loop
lret
pop
push
sbb
mov
mov
and
loop
push
test
inc
out
dec
pop
mov
rcrb
pop
sub
cmp
mov
ret
jbe
sbb
mov
xchg
leave
add
lret
addr16
dec
aad
ja
cmp
push
test
jno
push
xor
orl
pop
adc
fwait
lea
mov
inc
push
pusha
dec
xchg
sahf
decl
mov
inc
cli
push
dec
loope
inc
adc
jg
cli
in
jb
sbb
lahf
add
mulb
sub
jecxz
sub
test
out
test
mov
popa
add
sub
pop
sub
pushl
push
cli
add
addr16
aad
xchg
movsb
repnz
xchg
popf
stos
add
cmp
scas
cmp
mov
inc
lea
adc
mov
mov
xor
and
add
add
mov
mov
cwtl
je
test
mov
lds
shll
fsts
mov
mov
mov
pop
sub
js,pn
ljmp
xchg
jb
and
ja
jmp
test
mov
xor
pop
shll
test
cmp
insb
es
inc
adc
ja
add
dec
jge
in
mov
sub
out
sub
inc
stos
jmp
push
lods
imul
pop
cltd
ss
sti
pop
mov
cmc
adcl
rcrb
pop
lahf
mov
push
xor
pop
popl
dec
icebp
inc
fsubrl
cmpsb
movsl
ficoml
xchg
aaa
out
gs
pop
jbe
dec
jmp
idiv
std
jb
es
divl
rep
mov
push
push
in
dec
or
int
sarb
ds
mov
adc
es
dec
aad
aam
sub
loope
inc
ljmp
dec
fwait
test
in
sahf
xchg
xor
call
sub
add
scas
mov
shll
ljmp
in
pop
pop
fcmovnb
test
push
sub
sub
sbb
stos
xchg
in
mov
sub
sahf
insb
xor
nop
jnp
enter
jl
push
push
mov
shll
cmpsl
inc
dec
adc
popf
inc
movl
push
nop
pop
push
fwait
pop
jns
in
mov
stc
stos
add
or
add
lds
sub
adc
fwait
pop
inc
inc
push
out
jg
es
or
pop
sub
add
stc
fcmovnu
or
repnz
ds
bound
mov
fs
and
jnp
mov
les
cltd
adc
or
xchg
test
lahf
icebp
movsl
out
call
das
loope
shl
xor
xor
in
push
adc
out
insl
lods
adc
je
mov
enter
sti
push
add
cltd
sarl
fs
inc
xchg
or
push
add
push
lret
add
add
push
jp
into
or
stos
pop
xor
clc
jg
gs
sbb
mov
mov
mov
push
adc
fdivl
out
movsl
adc
out
sub
and
and
int3
loopne
pop
out
ret
mov
pop
es
lods
push
jl
mov
cli
cli
add
aad
imul
fiaddl
shr
fists
popf
jmp
les
and
test
or
jmp
in
scas
dec
xchg
lret
orps
xor
ret
negb
inc
sbb
cs
and
dec
rorl
les
mov
mov
movsl
cmp
or
and
xor
outsb
ror
jbe
or
mov
fidivrl
dec
fsts
mov
sbb
pop
dec
cmpsl
das
mov
std
adc
aaa
cli
iret
movsb
mov
fsubs
setle
or
jmp
out
stc
push
test
lods
cmp
xor
add
mov
pusha
mov
lahf
loopne
test
pop
pusha
outsl
aam
pop
jl
mov
repz
aad
ds
jbe,pn
in
or
in
aad
jo
mov
mov
sub
push
shll
sub
jo
or
bound
mov
mov
negb
rcrb
repnz
push
add
mov
aas
mov
jmp
adc
or
jno
jle
sub
jns
jns
mov
cmp
xchg
rcrl
loop
lret
nop
inc
xchg
cmp
repnz
or
add
xor
fmuls
cmp
add
xchg
push
push
fistpl
pop
cwtl
sbb
jle
add
inc
mov
adc
jb
mov
cmc
pop
xor
and
je
xchg
pushf
ret
dec
pop
pop
pushf
scas
jb
pushf
push
mov
mov
sub
mov
add
inc
mov
and
rcrl
mov
into
mov
outsl
scas
jbe
pop
fwait
sub
fbstp
mov
fwait
in
lock
insb
clc
dec
mov
stos
mov
push
push
daa
adc
cmc
mov
bound
dec
or
mov
inc
push
das
iret
or
fs
loopne
bound
fsubrs
daa
dec
cmc
sbb
lcall
mov
out
adc
stos
out
ljmp
test
lea
jns
arpl
rcr
fcom
aad
mov
sbb
push
das
push
mov
hlt
lock
out
popa
sub
ljmp
and
lret
cmpsb
shrl
push
mov
cmpsb
push
inc
ds
mov
jmp
lahf
xchg
ja
and
mov
lods
and
lds
ss
shll
mov
inc
dec
adc
mov
sub
popf
roll
mov
popf
cld
mov
mov
rclb
es
pop
xor
mov
sub
icebp
push
add
int
stos
mov
in
pop
push
sbb
popf
mov
rcrl
xchg
xor
outsb
pop
mov
pop
fs
sti
pushw
mov
in
out
mov
lret
fldenv
cmp
enter
movl
sub
fldcw
cmpsl
cmc
xor
mov
divb
mov
jle
sbb
adc
xchg
and
jne
cmp
push
pusha
jp
out
mov
iret
push
fisubl
pusha
shrl
aam
and
mov
lods
adc
push
sub
stc
sub
dec
pop
sbb
xchg
add
cmp
mov
inc
mov
xchg
test
fwait
ljmp
jo
jg
lods
jge
ds
jmp
int3
fstpl
sbb
or
push
movsb
sar
and
mov
and
xchg
cmp
sub
outsb
shrb
push
or
sub
push
ss
or
mov
inc
or
je
aaa
push
push
fldt
xchg
mov
add
sbb
movsb
cltd
cmp
dec
sti
imul
mov
lock
adc
out
mov
fimuls
add
adc
pushf
sub
leave
addr16
cmp
sbb
mov
mov
mov
sti
jns
fimuls
gs
push
add
or
lahf
pop
push
testl
inc
sub
inc
pop
fbstp
push
iret
icebp
pop
cltd
int3
or
pop
xor
push
pop
stos
outsb
and
xchg
arpl
push
in
inc
insl
cmpsb
lcall
sub
lret
scas
jae
mov
cmp
das
shll
ss
addr16
or
daa
loope
in
mov
imul
xor
insb
test
jmp
jns
scas
lds
sti
movd
cmc
test
cmpsb
movsb
stc
mov
xor
xlat
je
adcl
jno
or
fisubl
mov
gs
push
popa
cmp
add
stos
es
dec
fildll
inc
mov
in
frstor
push
mov
pusha
cmc
out
pop
jbe
aam
xor
mov
pop
or
outsb
addr16
call
xlat
sbb
lock
in
inc
call
mov
aam
lds
das
sub
pop
idivl
cltd
add
ss
cld
and
cld
inc
mov
sbb
cmc
fwait
inc
iret
xor
scas
hlt
jbe
negb
shlb
push
dec
dec
fildl
cmp
outsb
cmpsl
imul
je
mov
mov
js
xchg
xchg
adc
cmp
adc
int3
jmp
ljmp
enter
push
outsl
fcmovnb
xchg
cmp
outsl
mov
lret
loop
shll
inc
test
clc
mov
mov
rcrl
aam
fwait
repz
inc
les
push
fiaddl
insb
xchg
jns
or
imul
jne
clc
jmp
inc
cltd
push
inc
and
push
add
cmc
sbb
pop
cwtl
lock
stos
rcrl
sahf
movsb
cmpsl
sub
push
neg
roll
leave
out
pop
pop
add
dec
ljmp
daa
bound
movsb
jnp
xor
jo
iret
mov
arpl
jnp
movsl
pushf
scas
aas
sarl
out
and
lods
mov
pop
inc
lahf
ds
xlat
cld
add
mov
cwtl
mov
dec
mov
mov
aaa
ror
fildll
push
pushf
xchg
and
mov
jge
or
cs
mov
jg
iret
mov
jb
xor
into
xor
jnp
je
push
cld
imul
cltd
pusha
jge
mov
dec
push
or
xchg
imul
js
inc
mov
lcall
jns
scas
cmp
fs
sbb
and
pushl
lcall
shlb
scas
insl
jge
pop
mov
fdivrp
dec
xor
pop
mov
push
xor
outsb
inc
popf
fstpt
adc
add
xorl
dec
nop
xchg
dec
push
and
ret
pop
mov
aam
imul
test
cld
xchg
mov
std
jae
ljmp
rorb
fdivs
and
shll
aas
sbb
mov
pushf
xchg
sub
imul
cmp
xchg
mov
cltd
fcmove
in
sub
call
and
out
jle
adc
addr16
pop
push
add
mov
jecxz
aad
loopne
aad
nop
xor
stos
inc
jmp
in
add
or
ficoml
iret
jmp
lea
stc
imulb
repnz
pop
bound
int3
stc
inc
ds
testb
jp
cmpsl
pop
movsl
inc
cmpsb
mov
add
sub
leave
aad
xorb
mov
cmc
es
jle
xchg
dec
movsb
lcall
mov
dec
push
dec
iret
cli
mov
mov
add
mov
sbb
cmc
sbb
rcrl
sbb
pushf
mov
popa
cli
jno
or
sti
or
mov
jns
and
push
jmp
mov
fidivs
lds
mov
or
in
xchg
mov
cmpsb
pop
mov
icebp
repnz
fists
push
fistpl
rorb
fstps
mov
add
les
lods
fldenv
inc
stos
mov
ljmp
jbe
cltd
fwait
dec
fsts
sub
mov
sbb
mov
mov
xorb
std
jbe
cmpsl
xchg
push
psrlq
popf
movsl
ja,pn
imul
add
jb
sbb
fisttpll
cmpb
cmpsl
mov
push
cmp
repnz
mov
xchg
inc
sbb
lea
mov
mov
mov
and
dec
adc
mov
sbb
mov
test
adc
or
and
pusha
fwait
jo
push
cmp
push
cmc
or
mov
aam
iret
xorl
fisubs
idivl
cmp
mov
enter
daa
repnz
mov
or
cmp
lret
cmp
outsb
add
dec
add
cmp
jg,pt
push
and
sti
push
dec
mov
adc
loopne
mov
clc
arpl
dec
push
jo
popa
mov
mov
test
push
scas
sar
fimuls
test
xchg
das
ja
add
xor
add
jecxz
dec
sahf
int
inc
clc
bound
pop
mov
mull
inc
or
push
and
mov
adc
mov
lods
add
mov
add
add
pop
mov
cmp
scas
rcrb
mov
call
mov
stos
add
add
int3
add
enter
imul
jg
push
call
and
stc
cld
jecxz
mov
cli
adc
addr16
popa
in
lock
add
cmc
dec
pop
sub
fdivrs
lods
push
sub
ds
and
sub
adc
xchg
out
mov
push
or
insl
stc
xchg
jmp
mov
jo
pop
push
lea
aam
jne
pop
sub
adc
bound
push
push
lret
cmp
add
ss
cmp
or
bound
xlat
jg
push
dec
mov
and
ja
adc
movl
mov
cmp
mov
push
adc
mov
test
das
leave
outsl
sub
ljmp
mov
sti
xor
and
sub
subb
pop
push
icebp
pop
adc
ffree
pop
sub
push
pop
leave
mov
shl
xchg
and
into
mov
xor
adc
sbb
xchg
add
add
pop
mov
out
push
mov
icebp
xchg
ret
fdivr
lock
and
inc
lock
or
lret
push
ficomps
incl
inc
mov
push
jle
push
sub
jl
mov
loope
add
mov
shlb
dec
les
pushf
mov
into
ljmp
out
aas
push
push
lock
stos
mov
fsubrp
xorl
out
loope
cmp
or
fwait
push
dec
lods
dec
add
or
shl
mov
shll
jns
add
mull
jmp
xchg
bound
jle
add
or
mov
in
je
xor
arpl
sbb
fcoms
pusha
and
in
cli
adc
les
cmpsl
lods
jae
test
repz
mov
mov
mov
std
jg
mov
mull
xchg
and
cwtl
pop
mov
cmp
sti
jne
lret
stos
jge
jb
inc
pop
sub
push
in
loope
daa
jge
xchg
xor
cld
xorl
or
cmp
int3
xchg
push
mov
and
xchg
cmpsb
repz
xor
push
sub
test
and
stos
pop
or
push
dec
or
add
inc
lock
shll
shll
push
inc
xor
or
test
mov
cmp
inc
xor
fistpl
repnz
lcall
out
mov
mov
bound
xchg
jae
add
cmp
js
push
jb
fsubs
mov
xchg
pop
pusha
stc
pop
xlat
inc
adc
sbb
in
iret
loopne
xchg
xor
cmp
pop
shl
or
rcr
test
lods
lds
je
sahf
loopne
mov
push
shrl
adc
mov
iret
sub
stc
inc
ds
push
sbb
mov
lahf
ret
adc
lcall
push
mov
pop
popf
xchg
or
into
inc
xor
jno
out
push
pop
aaa
fisubl
or
sbbb
sbb
jle
fiaddl
jo
call
stos
inc
out
cmc
outsl
fldenv
sub
call
and
dec
subl
int3
push
cli
cwtl
jmp
repnz
fisubrs
or
out
stos
add
into
dec
movsb
in
xchg
jbe
sbb
das
scas
add
dec
pop
add
jg
in
xor
adc
cs
mov
fidivrs
movsl
pop
mov
xor
dec
incb
lea
jecxz
mov
jg
ljmp
mov
or
xor
js
cmp
dec
mov
push
add
or
sbb
ficoml
pushf
xchg
add
test
jnp
shrb
add
shrb
rcrl
mov
pop
shrb
lods
fimull
stos
or
sub
dec
fldl
ss
fbld
mov
xor
push
inc
mov
sub
je
mov
mov
fcoms
sti
adc
rsqrtps
aad
bound
and
sub
outsb
hlt
rorl
icebp
pop
mov
push
cltd
mov
inc
xchg
or
sub
jmp
and
popa
xchg
jl
shll
mov
or
jne
lock
in
out
stc
repnz
rorb
roll
sahf
push
mov
xor
gs
lea
hlt
add
or
mov
mov
jae
filds
cltd
test
xlat
jns
push
testb
addr16
dec
ret
sub
mov
dec
dec
stos
dec
ljmp
sub
ljmp
cmp
test
mov
scas
jge
or
pop
xor
add
sub
add
stos
sbb
loope
sarb
and
sub
js
out
andl
fs
adc
jmp
sub
and
outsl
cmp
adc
negl
cmc
and
daa
add
cmpsl
inc
or
push
sbb
sub
ljmp
dec
cmp
dec
mov
lods
pop
inc
xchg
sahf
fisubl
jp
mov
or
mov
jb
lods
mov
movsb
and
and
push
push
icebp
sub
inc
fwait
mov
inc
mov
das
in
mov
push
out
loope
and
adc
push
loope
scas
or
insl
lea
rolb
dec
pop
and
out
scas
and
ss
xor
mov
xchg
dec
mov
sbb
repz
cld
dec
stos
add
sub
pop
js
jmp
adc
mov
js
into
ds
std
push
insl
and
inc
and
dec
xchg
cmp
popf
push
adc
sub
cmp
es
imul
push
out
add
cwtd
mov
test
xchg
add
aad
mov
or
test
mov
and
sbb
sti
sbb
aad
lret
adc
add
push
dec
into
divl
xor
stos
mov
push
ss
jecxz
cs
sbb
popf
lock
daa
cmp
stc
outsl
pop
ja
xor
enter
ret
push
xchg
push
fwait
mov
add
ljmp
fmuls
mov
and
jae
mov
push
testl
into
inc
sarl
dec
mov
push
adc
mov
in
push
pop
mov
stc
xor
mov
inc
xchg
mov
shlb
dec
ss
xchg
inc
or
out
loop
fdivr
jl
adc
jge
cmpsb
shrl
js
push
std
pop
cld
push
and
sahf
cmp
and
stos
aaa
movb
pop
mov
push
add
mov
cli
aas
in
mov
pop
loop
into
xchg
aaa
lock
pop
outsl
out
xchg
int
scas
adc
adc
adc
sahf
data16
sbb
mov
and
or
stc
xorb
fmull
popf
leave
repz
dec
int3
mov
cmp
xlat
lods
cli
jl
mov
mov
mov
sub
addr16
test
jl
scas
aas
push
and
xchg
dec
mov
mov
or
mov
shll
gs
outsb
mov
mov
xchg
mov
sahf
mov
je
lods
adc
cmpsb
xlat
xchg
xchg
aaa
les
fldt
mov
mov
pop
fimuls
adc
xor
or
arpl
and
fs
fldl
inc
pusha
mov
xchg
xchg
nop
lods
mov
add
adc
inc
or
in
jl
bound
dec
mov
ljmp
test
jo
xorb
mov
int3
fcmovnb
pop
dec
outsb
shll
jge
cwtl
pop
dec
lea
adc
ja
add
test
sub
dec
jbe
inc
clc
rdtsc
out
xchg
pop
add
imull
jne
sbb
sbb
addl
arpl
inc
jo
mov
movsl
xor
std
xor
cs
sub
mov
sub
mov
bound
sub
stos
shr
sub
and
fimuls
xor
jo
and
out
mov
leave
mov
ja
stc
ret
jo
mov
jae
daa
add
jno
fwait
cmp
sbb
aas
xchg
fnstsw
testb
xchg
lea
sbb
shl
loop
dec
dec
xor
inc
xlat
pop
enter
dec
or
xchg
inc
bound
arpl
int
xchg
jae
jno
jle
push
clc
cmp
hlt
clc
data16
test
push
and
arpl
ja
cmp
pop
push
add
cmp
mov
in
out
jno
loopne
cmc
adc
cmp
cmc
mov
jge
mov
jno
adc
lds
xchg
test
mov
push
cwtl
lret
dec
add
xchg
mov
adcb
xchg
ret
mov
repnz
cmp
mov
cmc
mov
icebp
pusha
inc
fisubs
xchg
mov
addl
std
std
lods
hlt
xchg
mov
lcall
popf
movsl
push
hlt
lock
aad
jb
adc
in
inc
outsb
movsb
enter
test
xor
imul
lahf
sbb
fistpl
notb
rorb
inc
mov
pop
or
lods
sub
mov
insb
adc
les
sbb
push
mov
lods
xlat
shlb
jb
iret
gs
push
mov
xchg
sub
xor
xchg
in
fwait
sbb
mov
mov
and
jle
pop
ljmp
jmp
addr16
out
loope
andl
mov
imul
addb
sahf
insl
xor
mulb
shrl
push
inc
fstpl
sub
add
dec
nop
and
xchg
mov
fildll
mov
mov
mov
daa
imull
repnz
pop
mov
cmp
stos
pop
loop
xchg
jg
je
push
mov
mov
adc
jo
out
pop
rcrl
roll
add
add
out
mov
jle
adc
xor
inc
push
inc
adc
mov
incb
call
rorb
cld
xchg
jmp
mov
js
cld
jge
add
out
rorl
pusha
inc
sbb
cmpsb
adc
sub
lcall
and
shrb
mov
int
mov
mov
imul
jbe
inc
int
and
adc
mov
mov
cmpsb
mov
rcll
imul
fcmovb
stc
mov
jmp
sbb
dec
dec
out
rorl
dec
jp
lahf
mov
mov
fdivrp
push
lret
sti
xor
dec
jb
add
aas
lret
cmpsl
sbb
adc
cmp
repnz
inc
fwait
dec
mov
cmp
and
jno
and
test
in
stc
cltd
sub
ljmp
inc
mov
repz
push
loopne
movsl
into
jle
loope
mov
leave
jmp
xchg
cmp
addr16
jmp
sbb
pusha
cmp
xchg
sahf
outsb
xor
dec
int
aas
shlb
sbb
xor
lea
movsb
mov
sahf
in
push
roll
mov
dec
jo
loope
fcmovnbe
in
and
push
movsb
mov
cmpsb
fwait
je
dec
push
loope
insl
xchg
or
adc
aaa
push
push
and
mov
insl
adc
push
sub
pop
xchg
fwait
into
adc
js
xor
fs
xchg
sbb
aaa
inc
jge
dec
mov
fs
rcll
add
clc
repz
int3
jne
fsubr
dec
mov
je
bound
data16
leave
insb
dec
inc
mov
pop
add
mov
or
jl
les
and
out
or
fimuls
daa
dec
pop
cmp
jge
mov
aam
xor
movsb
lods
mov
push
sub
pop
xchg
push
pusha
fimuls
dec
or
mov
in
in
sub
xor
stc
fcmovnb
mov
std
out
sub
add
jnp
sub
jge
jae
xor
rol
add
cmp
scas
or
je
sub
inc
cmp
ret
ljmp
aaa
push
in
dec
cmp
clc
data16
and
rorb
xor
push
arpl
or
lcall
test
xor
inc
xchg
xchg
xchg
mov
push
cld
nop
cmp
jae
jo
adc
outsb
ja
mov
fdivrp
aaa
sub
test
inc
mov
nop
jle
mov
sbb
arpl
and
jo
outsl
popa
jno
mov
stos
cltd
jbe
fs
je
adc
cmpsb
lahf
movsb
cmp
aam
frstor
loop
sahf
arpl
movsl
add
xorb
imul
pop
mov
sbb
cwtl
jo
mov
aad
pushl
and
aaa
adc
and
pop
or
sbb
sbb
sub
fldl
jp
mov
lods
sub
or
test
push
jle
incb
cmp
rsqrtps
test
sahf
clc
mov
fisubl
shll
gs
and
xchg
testb
hlt
lret
mov
push
fsubrl
cmp
cmp
push
into
cmpsl
dec
sahf
in
sbb
test
popa
data16
dec
or
sbb
sbb
adc
popa
or
rcrl
icebp
cmpsb
lea
jns
adc
sahf
jmp
cmp
pop
adc
dec
pop
popf
loopne
cmp
jnp
jl
pop
cmp
xchg
jmp
rcll
arpl
xor
js
ljmp
push
aaa
lcall
add
mov
pop
sahf
inc
sbb
push
mov
movsb
mov
je
lahf
shlb
rcr
clc
mov
aas
adc
inc
and
stos
mov
shl
nop
ja
dec
inc
bound
es
fmull
xchg
xchg
test
fmulp
cmpsl
test
sti
or
jmp
adc
andb
stos
pop
je
sub
sahf
cmp
stos
call
sbb
lods
adc
repnz
push
incl
mov
sub
mov
xor
roll
dec
and
clc
cmp
xchg
sbb
pusha
test
mov
jbe
divl
ret
sub
inc
hlt
push
nop
call
adc
in
jp
pop
fwait
pop
ss
jl
jg
xor
mov
outsl
sub
mov
fcomps
lret
push
mov
mov
adc
jo
cmp
and
movb
out
lds
and
shll
data16
lds
pushf
mov
out
popa
movsb
fisubs
or
popf
popa
mov
xchg
pop
lahf
stos
lock
add
add
cmp
mov
in
jl
xchg
mov
dec
out
mov
pop
pop
inc
xchg
mov
add
push
leave
jo
ror
jnp
push
mov
push
lcall
mov
stos
dec
dec
inc
push
and
and
mov
jns
cmc
test
sub
dec
outsb
into
sarb
addr16
imul
xor
pop
jg
jecxz
jecxz
repnz
pop
fcoml
mov
out
outsb
dec
inc
inc
inc
mov
mov
add
imul
in
push
or
fisubs
sub
cmp
dec
bound
insb
push
andb
dec
adc
scas
sbb
insb
adc
test
int3
int
call
inc
cmp
xchg
lds
clc
mov
test
push
sbb
cmpsb
xor
push
cld
pop
pop
shlb
sbb
dec
or
daa
clc
inc
push
movsl
or
and
sbb
sti
push
push
or
push
cltd
orl
aad
adc
sbb
jmp
mov
add
cmp
push
icebp
xor
dec
cwtl
fstl
inc
xchg
and
lahf
adc
and
jnp
jne
xchg
xor
daa
cmpsl
xchg
and
xchg
std
or
adc
and
out
mov
push
mov
inc
pushf
sbb
jo
jecxz
mov
cmp
push
popa
jae
dec
xchg
jle
push
stos
jge
add
cli
sub
adc
xchg
pop
push
shll
sbb
lods
xorb
test
sub
push
mov
fists
sub
test
xchg
lods
sub
insb
and
imul
outsl
xchg
adc
pop
cwtl
stos
out
sbb
pop
mov
rclb
dec
xchg
fcoml
mov
stc
stc
test
ret
cmp
mov
dec
loop
and
lea
popl
push
mov
cltd
adc
cmc
cmp
leave
jl
das
mov
mov
ret
inc
adc
sbb
rcrb
outsl
mov
jnp
mov
cmc
or
mov
dec
addb
and
adc
and
or
sub
xchg
cld
pop
xor
movsl
xchg
stos
pop
xor
add
add
andl
mov
and
inc
mov
sbb
movsb
cwtl
mov
insb
sub
cli
pushw
in
push
adc
pop
jbe
cmp
pextrw
addb
js
mov
sbb
lods
lcall
popa
ret
scas
jle
xlat
mov
xchg
mov
call
outsl
mov
sbb
push
jl
pushf
rclb
dec
push
and
pop
push
or
popa
js
insl
and
outsb
mov
nop
inc
add
sbb
mov
aaa
pop
pop
jae
mov
shll
call
pop
add
or
test
add
lret
es
shrl
and
pop
cld
cmpsl
mov
xor
xor
outsb
repnz
fmul
jae
frstor
sub
cmp
jge
inc
sbb
fisttps
xor
outsb
pop
mov
ljmp
xchg
imul
nop
lea
aaa
dec
std
nop
jp
ret
push
hlt
jbe
lcall
fildll
mov
pop
popl
test
arpl
jp
fadds
in
fsubrs
mov
punpckldq
pop
or
lret
push
ja
dec
test
les
lret
lret
je
mov
and
loopne
mov
hlt
mov
or
inc
out
mov
es
cmc
sbb
adcl
jo
scas
mov
sub
pop
int3
push
or
js
test
mov
cmovae
lret
insb
push
mov
jecxz
adc
cmp
dec
loope
loopne
es
mov
sub
mov
popf
sbb
fdivs
std
inc
sbb
jne
arpl
mov
xor
pop
mov
lods
lock
imul
sub
lods
mov
lcall
and
shl
mov
inc
repz
cmpsl
push
cmc
icebp
addl
or
cmc
pop
mov
ror
les
icebp
cmpsl
and
stos
sbb
jnp
and
xlat
cmpsl
pop
cmp
out
lret
jmp
cmp
aam
mov
gs
shlb
repnz
mov
pop
mov
adc
pop
cmp
add
nop
gs
push
pop
dec
pop
arpl
mov
ja
ja
fwait
lret
lea
sub
jg
lock
es
push
jns
loop
addb
test
daa
aam
rcll
mov
cmpsb
ds
mov
xlat
sti
out
out
out
leave
stc
cmpsb
and
pop
jno
sub
pop
rcrl
sti
inc
and
push
inc
mov
addb
ds
sub
sub
mov
pop
inc
xor
orl
inc
std
mov
lret
je
push
xchg
cmpsb
xor
mov
mov
sbbb
cwtl
pop
gs
or
ss
ss
test
and
mov
sub
in
adc
addr16
sub
or
dec
jg
mov
cmp
nop
mov
repnz
popl
cmpsb
imul
push
test
mov
sbb
fmull
aad
enter
popa
sub
lret
inc
pop
in
test
jnp
outsl
pop
pop
nop
jnp
xchg
or
in
out
incl
loop
sub
fmuls
adc
cmp
sub
add
das
sar
mull
shlb
mov
and
jg
adc
xchg
dec
scas
rcl
add
sbb
jae
sti
fcoml
lret
imul
shrl
outsb
stc
push
push
orl
jmp
dec
or
and
je
jnp
add
mov
movl
xor
leave
jns
mov
dec
sbb
nop
inc
mov
icebp
cmpsl
jo
or
orb
pushf
cmp
call
subl
pop
cmp
insl
jecxz
and
ljmp
aam
add
jl
xor
mov
mov
pop
test
sbb
push
mov
cltd
lahf
test
cs
rcrl
popa
out
jge
leave
test
es
mov
inc
mov
divl
loope
xlat
jg
aas
das
dec
dec
jne
movsl
js
test
popa
inc
imul
sub
mov
jnp
js
push
rep
and
cmpsl
sahf
outsb
leave
rcr
or
xor
cmpb
add
std
mov
insb
or
popa
cltd
dec
cwtl
xchg
add
ret
sub
addl
push
je
xchg
dec
sbb
lcall
or
add
jle
mov
adc
into
scas
mov
lock
std
shlb
sub
jge
add
in
push
cmp
std
adc
push
mov
movsb
fimull
scas
dec
sub
push
xchg
push
ss
mov
cmp
xor
iret
enter
pop
pushf
add
sbb
popf
mov
mov
adc
xorb
cmp
out
mov
mov
ljmp
negb
lds
aaa
and
jns
into
icebp
inc
cmp
mov
pop
shrb
pop
mov
imul
and
or
sahf
and
lcall
xchg
pop
jnp
fucomp
stos
outsl
sbb
xor
fcmovnu
lret
sbb
adc
cmc
gs
mov
in
and
shrb
sbb
enter
xchg
lret
mov
push
shl
sub
dec
ss
into
mov
cmpsb
cmpsl
adc
inc
imul
arpl
push
enter
pop
rcr
sti
mov
cmpsb
arpl
push
mov
dec
aam
fisttpl
repnz
jge
xor
je
mov
scas
je
pop
insb
sub
xchg
outsl
xor
xchg
movsl
pushf
sbb
mov
sub
mov
pop
repz
addr16
lahf
les
xchg
inc
aad
bound
and
fdivr
fisubs
hlt
jns
mov
lea
loopw
nop
sbb
xor
cmp
sbb
push
pop
pop
cmp
mov
jp
jnp
ret
pushf
es
dec
push
push
pusha
test
pop
nop
fs
ja
mov
test
cmpsl
lahf
cmp
add
push
insl
das
jae
xchg
jge
dec
adc
shlb
inc
adc
dec
inc
adc
arpl
xchg
int3
pop
in
mov
push
mov
scas
imul
lock
xor
andb
xchg
xchg
mov
ja
mov
fcom
sbb
cmp
gs
jge
cwtl
scas
nop
out
inc
jo
xchg
test
push
mov
cld
stos
mov
mov
outsb
popf
mov
pop
mov
pop
les
jmp
ret
vunpckhps
jl
jo
mov
jbe
mov
xor
jns
pop
ja
dec
stos
inc
fcompl
and
daa
cmp
out
lea
cvttps2pi
xchg
sub
punpckhbw
cld
inc
aam
scas
lock
iret
cmp
addr16
popa
push
cmp
movsb
cmp
inc
push
movsl
mov
jne
xchg
les
imul
inc
pop
clc
push
imul
mov
xchg
scas
lret
cmp
lret
testb
mov
les
lds
push
lcall
or
pop
pushf
mov
lods
push
add
pop
lcall
shrb
frstor
nop
add
mov
pusha
adc
pusha
pushf
dec
shr
mov
gs
jmp
neg
xchg
cmp
adc
idivl
inc
cmp
cltd
xor
cmp
sbbl
mov
xlat
jmp
and
and
and
subb
jno
pop
imul
adc
iret
inc
scas
orl
out
pop
leave
cmpsl
jo
sti
cld
imul
loopne
out
addl
std
stos
out
pop
lea
and
lock
bound
sbb
pusha
sbb
lock
ljmp
inc
jl
stc
cmp
bound
inc
insl
iret
xor
xlat
stos
dec
push
jecxz
jle
push
add
insl
arpl
xor
mov
out
scas
cwtl
jp
enter
ljmp
imul
cmp
xor
pop
dec
fistl
rorb
imul
add
jb
sub
push
push
cltd
inc
setb
fbld
les
sub
mov
in
mov
js
adc
out
icebp
sub
xchg
out
rcr
fidivl
rorb
mov
es
sub
xor
les
mov
call
mov
pop
mov
xor
sar
cmpsb
xor
sub
test
jp
lods
mov
pop
shlb
fldt
fmuls
jle
xor
inc
add
loope
scas
and
and
es
addr16
cmp
sub
jmp
xchg
int3
imul
sbb
mov
pop
lret
lock
sub
outsl
lret
fisttpl
mov
stc
not
mov
int
bound
orb
cmpsb
int
cmp
into
and
movsb
jo
mov
mov
lret
test
cmp
cmp
sbbb
cmpsl
cmp
iret
add
lahf
fistl
and
std
jge
xchg
shll
mov
and
cmpsb
or
fwait
shr
loopne
mov
sbb
mov
jne
outsb
outsb
sarb
mov
inc
lea
dec
sbb
rorl
insl
push
es
add
push
out
aad
bound
dec
sbb
adc
in
imul
sub
imul
movsb
add
and
xchg
in
test
jb
or
mov
jo
or
imul
and
rcrl
dec
imul
inc
loope
bound
sbb
das
int3
or
sbb
xchg
lods
cmp
push
mov
add
es
xor
es
and
and
das
push
adc
inc
dec
push
cmp
loope
loop
adc
push
push
xor
mov
sbb
sahf
mov
ret
sub
test
pop
fdivs
or
add
adc
ret
gs
dec
sub
test
xchg
out
lahf
mov
js
and
js
push
or
pop
adcb
hlt
sub
rcrl
xchg
push
loop
fwait
sub
mov
add
fistpl
jne
scas
fbstp
jl
ss
rclb
mov
push
mov
aam
inc
dec
out
mov
scas
test
mov
lcall
decb
cmpb
dec
call
je
leave
pop
std
fwait
dec
cmp
in
iret
flds
inc
and
aam
ja
dec
pop
mov
cli
out
subl
dec
inc
aam
mov
inc
dec
cmp
test
push
shll
ss
fiaddl
sbb
test
mov
push
mov
xchg
jne
outsl
sbb
testb
xchg
cmpsb
stos
ss
shl
push
std
dec
jae
insl
push
mov
add
sbb
xor
jg
xlat
add
push
pop
sub
add
and
lret
test
dec
test
lahf
movzbl
int3
sbb
mov
fnsave
adc
dec
adc
push
mov
stos
insb
mov
int
ds
frstor
jns
cmp
rcl
pop
push
xor
mov
cmpb
push
xchg
pop
push
mov
jne
mov
notb
and
push
movsl
and
adc
push
mov
out
enter
or
popf
inc
arpl
mov
pusha
pop
push
daa
dec
sub
pop
setge
ds
push
jne
lds
test
arpl
jecxz
push
mov
in
dec
push
mov
push
jmp
mov
xlat
pushl
mov
mov
xchg
mov
xchg
data16
adc
jl
xor
xchg
adc
sbb
mov
mov
out
cmpsb
and
movsb
and
and
sahf
fwait
loop
push
test
xor
xor
jp
sysexit
popa
push
xlat
clc
insl
loopne
jecxz
push
inc
sub
push
aas
inc
out
push
add
aas
loop
cmpsl
jecxz
ret
cmp
jae
stc
sahf
std
and
rcr
push
movsl
add
sbb
lock
lret
loop
inc
cmpl
in
mov
xchg
stc
clc
sbb
inc
das
js
and
cmp
push
jge
stos
test
out
inc
pop
rol
aas
daa
loop
test
es
fiadds
scas
push
sbb
fadds
mov
dec
dec
adc
jecxz
ss
ljmpw
lahf
mov
and
or
dec
cs
rep
divb
adc
lea
jno
mov
mov
inc
xchg
inc
pop
mov
or
dec
xor
leave
push
outsl
push
in
inc
pop
xchg
dec
push
aaa
cli
pushf
inc
dec
jg
insb
iret
daa
rorb
cmp
mov
jns
jp
bound
clc
out
mov
gs
cmpsb
imul
lods
pop
push
mov
and
shrb
out
inc
mov
rcrl
adc
popf
lcall
rorl
dec
cli
outsb
mov
push
test
stos
movsb
sub
sbb
mov
cmc
dec
fists
pop
dec
pop
pop
adc
popl
fbld
inc
scas
inc
out
push
int3
sbb
cmpsl
push
lea
fmuls
cli
xor
pop
lahf
add
mov
mov
pop
xchg
or
cmp
pop
scas
pushf
aad
call
xchg
ficoms
push
dec
sbb
mov
jl
popf
push
xor
adc
mov
pop
pop
leave
decl
mov
mov
cmp
incl
fucom
lea
lret
or
add
sti
andb
xor
rorl
adc
inc
icebp
aam
hlt
lods
cmpsb
cmp
sub
mov
fucomp
push
call
cmp
testb
int
in
inc
push
sarl
sub
xorl
sti
dec
mov
test
movsl
std
and
mov
jg
mov
in
sub
adc
jl
popa
cmp
call
mov
jbe
add
repnz
adc
sbb
push
inc
cmc
les
lret
lcall
cmc
pop
ja
or
es
sbb
lret
arpl
rcl
push
cmc
lcall
mov
mov
jmp
jecxz
idivl
enter
inc
outsl
mov
adc
dec
mull
pop
in
jecxz
jmp
dec
xchg
stos
and
popf
add
xor
into
pop
inc
pushf
movsl
push
sub
out
popf
add
xor
fwait
icebp
xor
call
fidivrl
into
insb
xchg
sub
roll
fisubs
pop
pop
movsl
pusha
jae
jb
sbb
add
test
icebp
cmp
mov
or
inc
fimuls
mov
popa
sbb
call
ss
mov
out
fnstcw
iret
fsub
inc
in
nop
adc
div
aaa
shll
xchg
xor
mov
test
das
lret
sbb
scas
cli
push
mov
loope
inc
inc
insl
dec
ret
roll
loopne
lret
jmp
lea
inc
xlat
ret
enter
ret
stos
je
pop
adc
sub
adc
or
xchg
mov
xor
stos
test
incb
subb
sbb
or
js
nop
inc
mov
jl
jbe
jle
ss
inc
xchg
sub
addb
test
lds
xor
and
xor
stos
mov
aam
ja
add
xor
add
insl
leave
stc
and
push
jl
repz
roll
out
rcrb
xor
pop
jae
add
hlt
jmp
cmpsb
mov
repz
and
xchg
mov
ret
sub
push
out
jmp
js
cmp
loop
mov
xlat
imul
jns
jmp
out
les
in
sti
int3
in
sub
in
jmp
hlt
in
aaa
data16
insb
xor
jb
sub
ds
cli
mov
sti
pop
lods
push
popl
xor
sti
clc
dec
mov
inc
sub
mov
xor
sub
cltd
incb
and
movsb
and
lahf
fcmovne
or
cld
inc
xchg
loopne
sub
inc
gs
push
add
inc
sti
stc
xor
xor
ljmp
addl
aad
fxch
clc
pop
mov
rcll
sbb
sahf
aam
xor
lods
repnz
std
lahf
cmpsb
test
and
xchg
add
repz
shll
sbb
adc
pop
sbb
popa
pop
in
xchg
fisttps
mov
xor
jp
inc
sub
or
cmp
shlb
sbb
aam
adc
xchg
ror
lret
xchg
gs
in
inc
in
xor
pop
jb
cmp
aad
adc
pop
daa
pop
add
aas
in
fwait
pop
sbb
cwtl
in
fwait
aaa
ret
out
paddb
push
or
clc
or
mov
xchg
cmp
outsw
inc
mov
cltd
bound
mov
paddsw
dec
repz
adc
push
or
lods
and
push
ja
add
iret
divb
jmp
or
cmp
in
out
divl
lcall
loope
hlt
mov
add
jge
mov
pusha
sbb
sbb
jle
jno
ds
cmp
aad
or
in
daa
sub
jg
mov
or
xor
cs
cld
cmp
push
lcall
shrl
lods
mov
loop
push
adc
loope
mov
add
das
mov
mov
fs
testb
fwait
push
divl
sbb
mov
aaa
and
dec
in
rorb
lods
fcoml
lea
dec
xlat
jmp
jbe
adc
jp
movsl
add
leave
repz
int
xchg
adc
outsb
mov
daa
sub
in
clc
sbb
popa
mov
decb
jmp
out
icebp
push
loopne
stos
mov
push
rorb
inc
cmpsb
lret
push
pop
adc
adc
sbb
and
inc
inc
add
cltd
imul
shr
cs
fisubs
inc
outsl
iret
xchg
lock
cmp
and
mov
xchg
pop
jae
js
mov
xor
sbb
clc
push
cs
jo
stos
jmp
cmp
cwtl
sbb
fwait
jae
xchg
cmc
jns
adc
xchg
inc
add
ds
shrb
ja
mov
push
cld
js
mov
add
div
push
mov
adcl
inc
pushf
xchg
or
ja
cmp
pop
jg
xchg
sahf
std
es
stos
xchg
mov
call
jle
mov
jo
clc
repnz
ds
jbe
fists
repz
jl
pop
daa
adc
sub
aad
cmc
test
int3
in
fcmovne
jno
and
pop
cli
push
ds
inc
outsl
mov
inc
fimull
lcall
xor
ja
insb
in
data16
stc
adc
leave
fwait
adc
pop
popa
movsl
dec
call
lods
test
nop
pop
mov
sbb
mov
push
add
das
push
das
punpcklbw
cmp
aad
and
inc
pop
stc
sbb
lods
repnz
fwait
mov
dec
pop
les
loop
push
add
into
jno
cmp
pop
xchg
jo
inc
mov
scas
add
xchg
int3
aad
fs
loop
dec
xchg
pop
push
mov
or
dec
movsl
pop
sbb
cmp
dec
xorl
push
cli
xchg
xchg
ret
pusha
iret
ret
or
xchg
dec
cmpsl
fwait
sbb
mov
jbe
mov
icebp
xor
add
mov
adc
inc
cli
mov
mov
xor
pop
add
xor
pop
je
mov
mov
movsb
mov
pop
mov
sub
lahf
xrelease
subb
inc
push
insl
incb
xor
mov
push
adc
mov
jp
out
sbb
cltd
ljmp
xor
dec
jns
xor
dec
mov
fbld
jmp
push
daa
dec
dec
inc
mov
test
in
fidivl
std
mov
pop
mov
out
fildl
sahf
ljmp
cmp
lcall
leave
adc
adc
mov
test
insb
mov
sar
into
test
jge
in
mov
sub
ret
add
adc
and
leave
add
inc
clc
inc
sub
cmp
xor
xlat
loope
cmp
imul
stos
mov
rcrb
out
iret
xor
adc
and
call
fwait
andb
add
hlt
jp
xorl
mov
mov
stos
cmp
out
mov
fists
ret
aad
adc
loop
stc
inc
shlb
pop
fwait
lock
lea
icebp
insb
sub
inc
mov
mov
cltd
cmp
sbb
jl
sbb
mov
inc
cmp
test
xor
jns
imull
pop
stos
and
shll
inc
jl
cld
repnz
mov
xchg
add
ret
jne
cli
adcl
test
push
xor
sub
loopne
add
mov
add
das
xor
mov
jb
push
or
js
push
push
into
sarb
cwtl
imul
dec
imul
push
mov
mov
and
sbb
jbe
cmp
inc
mov
mov
push
nop
dec
fnstcw
rcl
call
inc
xor
jns
jbe
ja
iret
rcrb
test
jne
inc
jae
sub
xor
and
jmp
push
movsb
sbb
cmp
imul
push
dec
ret
nop
and
notb
xchg
stos
test
cmpsl
movsl
das
ss
pop
sbb
mov
mov
int
icebp
shll
jno
xchg
jge
and
shlb
aam
movsl
sub
fdivl
scas
sub
lea
mov
cmpsb
loopne
je
lret
and
jno
add
mov
or
in
push
lcall
push
mov
jno
das
sahf
sti
jae
jmp
jbe
fcomps
xchg
fidivrl
ljmp
xchg
mov
fnstenv
push
dec
xor
adc
cmpsb
mov
mov
out
mov
add
or
addr16
push
xor
bound
je
mov
add
ret
mov
ljmp
ljmp
push
mov
outsl
sti
mov
test
outsl
mov
pop
cmp
add
mov
mov
pop
lret
mov
inc
mov
xchg
fs
push
mov
lret
movsb
clc
or
test
fstpt
bound
lret
call
push
mov
xor
sarb
dec
test
test
enter
js
jl
inc
lock
sbb
test
inc
pop
aaa
leave
dec
xchg
jo
gs
cmpsb
mov
cmp
add
lods
dec
pop
add
mov
es
mov
nop
icebp
mov
or
pop
and
pop
push
les
pop
and
int
push
mov
stc
and
mov
ds
jnp
xchg
les
sub
xchg
ljmp
dec
fcomps
xchg
clc
dec
lret
fisubrl
cmp
mov
mov
sub
lock
insl
jmp
cmp
mov
dec
arpl
push
mov
insl
mov
movsl
mov
xlat
rolb
mov
xor
inc
pushf
pop
cwtl
lock
cmp
movsl
out
mov
cmpl
xchg
add
add
arpl
dec
aad
lods
out
loope
push
mov
lods
jb
pop
daa
decb
add
mov
andb
mov
sarl
scas
push
mov
cs
out
in
sbb
sbb
adc
outsl
pop
idivl
xchg
frstpm(287
mov
sbb
cld
or
shlb
mov
call
rorb
fwait
popf
add
in
add
aad
ret
and
jo
add
cmpsb
stos
std
adc
xlat
insb
aam
scas
push
pusha
xor
jg
sbb
xchg
test
sub
leave
outsb
jne
cli
icebp
stc
dec
les
push
inc
loope
aaa
gs
mov
notb
stc
mov
inc
cmp
pop
pop
addr16
shll
pop
push
mov
lcall
push
sbb
jne
mov
sbb
call
xorl
pop
aas
in
mov
cs
repz
loop
xor
in
or
add
cwtl
push
lock
int3
out
loop
sub
insl
stos
jno
xchg
mov
mov
ljmp
or
mov
jbe
add
cmp
jge
add
rep
inc
pop
mov
jp
dec
into
fnstcw
sub
stos
rorb
jmp
adc
cmp
cmpsl
in
dec
es
dec
lock
or
hlt
lcall
sbb
dec
in
sub
aas
push
mov
out
call
paddq
mov
dec
and
addr16
dec
xor
cmp
adc
jge
xor
mov
movq
imul
push
sub
add
clc
fstpl
push
incb
push
int
add
stos
add
aaa
inc
shll
mov
push
xchg
mov
mov
cmpsl
xor
pop
push
mov
mov
mov
sbb
push
cmp
mov
out
push
mov
lds
and
and
in
jp
hlt
xor
dec
xchg
mov
xchg
fsubs
xchg
adc
jmp
orl
xor
divb
xor
fcmovb
pop
add
sti
mov
push
loopne
sbb
cmp
mov
jl
jnp
out
fsin
rdmsr
xchg
repz
xor
add
dec
push
aad
fistl
test
and
or
out
adc
pop
push
cli
fsubr
jg
pop
nop
push
movsb
push
int3
outsl
fists
add
iret
pop
and
mov
scas
ja
scas
and
ret
mov
jbe
ficompl
ss
adc
push
and
cld
fwait
xchg
cmpsb
mov
fisttpl
call
ljmp
inc
sbb
push
cmp
repnz
mov
test
stc
inc
xchg
cmp
push
mov
insb
jle
xor
iret
cli
dec
jbe
int
push
test
xchg
dec
test
add
dec
pop
in
out
xor
cmp
pop
movsb
int3
push
subl
addr16
lahf
fwait
jge
cmp
dec
fsts
or
mov
push
and
cmp
imul
dec
les
lods
into
fstpt
sahf
inc
pop
unpckhps
stc
aaa
and
cmpsb
in
lods
mov
ret
adcl
lods
xor
push
or
cltd
imul
sbb
push
stos
jb
int3
mov
pushf
mov
cmp
fbstp
mov
lods
ror
cwtl
clc
mov
and
add
rcll
aad
mov
adc
adc
fwait
dec
cld
mov
call
fisttpl
call
xor
jbe
or
mov
push
xorl
mov
sub
outsl
cltd
cmp
clc
push
add
js
jle
dec
xor
dec
mov
mov
call
mov
stc
xchg
out
adc
and
sub
or
jmp
and
in
imul
mov
sbb
pop
mull
push
xchg
pushf
mov
loop
dec
lods
adc
add
dec
pop
push
mov
mov
addr16
lret
push
pop
fdivrp
fidivs
subl
inc
sbb
push
sub
in
hlt
scas
lods
mov
aam
xchg
mov
sub
fs
idivl
or
pusha
jmp
iret
or
mov
adc
or
lret
movsb
dec
je
pop
xchg
loopne
pushf
mov
jbe
mov
dec
js
rcl
aam
pop
pusha
movsb
mov
mov
sub
jge
imul
pop
outsl
loopne
loopne
dec
sti
or
pop
nop
pusha
or
pop
imul
test
fwait
xor
mov
addr16
add
mov
sbb
inc
mov
testl
aas
sub
data16
aas
xor
add
fsts
cmp
aad
inc
add
daa
mov
ffree
jno
sub
mov
pop
xchg
pop
pushf
aam
out
sbb
gs
mov
insl
inc
mov
movsl
int
cmpb
filds
test
mov
sbb
push
add
sti
std
add
ret
nop
inc
fisubl
subb
fdivl
and
xchg
out
xor
inc
sbb
jge
orb
imul
aad
push
lock
inc
push
dec
iret
pushf
mov
push
xor
je
je
lret
mov
cmp
lret
mov
pop
loop
insb
mulb
mov
cmp
aad
negb
in
sbb
divl
adc
test
faddp
call
adc
iret
jg
clc
pop
jg
dec
and
sub
popa
jbe
cmp
adc
stc
movsb
mov
xor
incb
leave
in
sarl
sub
push
lret
inc
or
push
sbb
jecxz
xchg
or
sahf
jno
or
push
std
inc
add
scas
mov
shrl
fsub
pop
sub
je
xchg
pushf
push
sub
mov
std
inc
out
sbb
mov
out
mov
dec
mov
xorb
stos
aam
outsl
add
xchg
lcall
and
xor
scas
sub
mov
sub
lods
cmp
inc
dec
jmp
imul
dec
jno
out
mov
outsl
xchg
imul
mov
mov
push
jle
cmp
jmp
add
push
push
int
into
mov
dec
cwtl
push
add
sahf
sub
mov
push
jecxz
into
les
xchg
clc
ficoms
popf
dec
pop
arpl
mov
sub
scas
out
leave
cwtl
stc
inc
sbb
inc
mov
dec
pop
mulb
cmp
ss
icebp
mov
cmp
mov
push
lods
mov
mov
or
shrl
sahf
lock
outsb
mov
jo
xchg
fmull
add
pop
sahf
fs
cmp
adc
les
fs
cld
loopne
lock
cmpsb
dec
bound
mov
lahf
inc
shll
xchg
shlb
fstl
daa
add
fs
mov
xchg
loop
mov
jmp
xor
daa
out
pop
testl
mov
cmc
mov
out
sbb
add
xchg
mov
mov
int3
sub
adc
jg
dec
jbe
xchg
xchg
mov
arpl
or
mov
movsb
shlb
outsl
xchg
jbe
pusha
dec
pop
rcr
pop
xchg
xor
push
sti
call
cmp
nop
mov
adc
leave
add
or
aad
icebp
and
mov
int3
dec
outsl
popa
inc
adc
sbb
rorb
outsl
shll
dec
inc
mov
imul
jmp
hlt
inc
cmc
divl
jmp
and
movsl
xchg
pop
jo
hlt
mov
xchg
mov
aad
mov
popf
cmp
cld
scas
std
lret
into
and
cmc
jmp
out
push
idivb
scas
call
adc
stos
add
mov
xor
bound
push
mov
adc
sbb
fistps
xchg
mov
or
in
insb
subl
fucom
push
xor
rcrb
pop
fldcw
cmp
xlat
lods
fidivrs
adc
call
fisubs
push
aad
mov
xor
pop
push
lods
idivl
mov
xchg
mov
cmp
inc
pop
bound
mov
push
adc
mov
iret
xor
mov
add
mov
or
sbb
testl
nopl
push
or
sti
inc
or
add
sbb
pop
daa
fsubl
mov
sub
shrl
out
mov
push
fidivrs
inc
jmp
shlb
dec
push
int
in
xchg
arpl
loope
aam
push
and
insl
sub
dec
aad
inc
fcoml
dec
into
xor
cmp
bound
xor
pusha
sbb
imulb
std
mov
pop
push
jmp
insl
mov
add
mov
push
test
out
cltd
mov
pop
popf
jg
dec
add
inc
lea
xchg
pop
test
gs
xlat
adcl
ret
pushf
or
mov
mov
mov
nop
loopne
xchg
pop
stos
add
fisttpll
push
xor
aaa
andb
gs
arpl
sbb
jnp
push
lret
bound
lea
rclb
pop
dec
xchg
mov
inc
adc
out
xchg
push
nop
mov
sahf
jle
add
sbb
cltd
mov
into
mov
mov
call
sbb
test
fsubrl
xor
lds
cmpsb
mov
xlat
outsl
movsb
mov
fwait
cmp
aam
adc
xor
mov
pushl
loop
cmp
mulb
jl
scas
mov
xor
mov
adc
data16
pop
mov
push
test
fstl
js
adc
adcb
adc
ret
out
addr16
outsl
cmp
mov
ficoml
div
das
movsb
dec
sahf
inc
push
pop
movsl
mov
inc
and
sub
mov
sbb
fadds
enter
jp
sbb
add
push
fwait
jge
cmpsb
shlb
mov
mov
cmc
mov
add
fwait
jns
pop
dec
push
sarl
dec
fdivrl
arpl
pushf
fnclex
push
push
mov
xor
and
jne
xchg
int
push
cmpsb
test
dec
pop
adc
xor
xchg
loopne
outsb
mov
lret
dec
jae
inc
ffree
jmp
mov
jl
mov
jl
push
inc
dec
aam
mov
xor
or
cli
xor
xchg
insl
mov
mov
int
andb
ficomps
cmp
mov
in
jge
fcmovb
shrb
pop
inc
leave
mov
jae
insl
movsb
es
lahf
daa
jg
pop
xlat
loopne
add
in
test
pop
fcoml
xchg
pop
push
cmp
mov
inc
pop
inc
xchg
int
sti
jecxz
jge
adcb
cld
in
inc
xlat
js
sbb
icebp
mov
ds
sub
mov
add
lock
xlat
dec
xchg
or
bound
pop
push
outsb
lock
xchg
lods
cwtl
mov
sbb
adc
cmpsb
xor
mov
test
adc
in
jb
dec
scas
outsb
inc
adc
lcall
pop
mov
mov
or
je
inc
daa
adc
pop
xchg
mov
mov
pop
ret
iret
jno
mov
or
push
and
xchg
fcoml
push
mov
mov
dec
sahf
cmc
sbb
stos
lock
out
les
int
test
push
mov
jae
mov
or
pop
cmpsl
lock
add
or
jp
sbb
pushf
adc
push
aaa
cld
insl
ret
add
loopne
mov
sub
lods
push
pop
and
sti
adc
gs
les
test
inc
jne
jp
mov
addr16
mov
dec
aas
sbb
cli
push
pop
xchg
sub
aad
int3
or
add
test
and
xchg
sub
push
inc
jg
mov
pop
sub
popf
repz
je
xchg
xchg
jle
bnd
rcll
jns
scas
push
mov
aas
jl
ja
les
push
cmp
mov
or
sub
and
mov
mov
andl
mov
dec
or
mov
lcall
sahf
dec
xchg
pop
or
frstor
lret
sbb
mov
adcb
sbb
xor
jno
je
add
add
les
hlt
dec
orb
es
mov
jecxz
dec
aad
outsl
les
fcmove
loopne
pop
mov
int
mov
sbb
loop,pn
mov
pop
loope
cmp
ret
imul
rolb
lea
mov
es
leave
cmp
ljmp
call
std
adc
cld
ljmp
test
xchg
insb
pop
pop
add
add
jge
arpl
or
xor
inc
sahf
mov
cmp
jge
pop
or
adc
cltd
pop
mov
fs
filds
cmp
and
adc
and
cmpsl
or
repnz
mov
addl
adc
mov
xchg
push
ret
mov
mov
inc
adc
or
test
sub
ret
loopne
les
mov
loop
jne
sar
jmp
push
jp
xor
sbb
xchg
in
movsl
jns
lods
xchg
or
into
cmp
add
jbe
inc
imul
call
bound
jbe
iret
dec
insb
jg
dec
lods
pop
popf
sahf
or
dec
out
shrb
sub
and
mov
cmpsb
icebp
insl
or
pop
ret
leave
add
xlat
fsubrp
mov
push
mov
mov
xchg
mov
push
mov
inc
enter
xor
outsl
enter
aad
mov
mov
adc
jecxz
mov
dec
rorl
out
add
clc
mov
pop
lcall
ds
outsl
push
ja
movl
cli
add
ss
popa
movsb
scas
in
cmp
aad
fisubrl
push
sbb
sub
lret
inc
push
jge
bound
test
add
push
outsl
jmp
jp
pushf
mov
sub
jge
pop
add
cltd
cld
arpl
jb
ljmp
daa
fimuls
pushf
mov
scas
inc
sbb
push
push
mov
mov
and
inc
test
jle
push
fcmovu
push
dec
push
jp
sbbl
cmp
stos
inc
jl
or
inc
inc
dec
arpl
mov
lock
fidivrs
add
pop
in
mov
daa
mov
aam
lods
nop
lret
inc
mov
xchg
scas
sub
push
icebp
adc
or
outsb
inc
subl
in
daa
jbe
in
repz
xchg
xor
ljmp
icebp
push
push
push
mov
mov
jo
add
push
push
mov
icebp
push
movsl
xor
mov
divb
and
es
jmp
push
test
xchg
push
scas
dec
pop
sub
fidivs
mov
call
sbb
mov
cld
cmp
cld
pop
push
insl
push
ss
rclb
inc
push
cmpsb
nop
es
mov
out
cmc
loopne
push
in
mov
call
lods
int3
scas
enter
jmp
inc
cmp
lret
push
daa
test
leave
aas
lea
mov
les
dec
iret
shll
fiadds
dec
cmp
lods
sub
jae
mov
cmp
ret
dec
mov
std
fcmovb
mov
jmp
insl
add
lcall
sub
loope
pop
pop
add
cld
pop
jecxz
and
jns
es
popa
or
rcrl
mov
dec
test
push
aaa
sti
and
pop
imul
scas
icebp
push
fsubs
mov
cmp
jae
jno
adc
pop
dec
jae
aad
fsubs
jge
inc
jle
stc
notl
xchg
sbb
mov
xchg
cmpsl
add
sbb
ljmp
lock
daa
sub
enter
xor
mov
jle
sbb
sub
pop
imul
inc
and
ljmp
push
fadds
or
mulb
add
inc
or
xor
push
dec
xchg
imul
jle
icebp
clc
ds
or
lea
push
int3
pop
cltd
in
dec
xchg
adc
jge
dec
sbb
mov
dec
sahf
dec
and
inc
aad
jg
movsl
fildll
add
pop
cmp
dec
push
inc
icebp
cmpsl
les
fcoms
rorl
xlat
lods
test
sbb
xor
inc
sbb
ds
adc
stc
into
out
leave
dec
push
in
cmp
jecxz
add
add
insl
xchg
fs
sar
cs
and
dec
and
in
lods
ss
push
cmpsl
in
pop
pop
adc
ja
sub
les
add
sbb
add
sbb
inc
arpl
or
jbe
test
data16
pop
out
int
push
xor
push
imul
stc
fcoml
inc
stos
or
pop
out
adc
push
outsl
dec
mov
jl
or
sbb
mov
mov
or
cmp
xchg
dec
fidivl
cmp
mov
fildl
jl
outsb
fs
push
mov
ja
pop
scas
lcall
push
sbb
sub
stc
insb
pop
test
push
loope
pop
jle
loopne
jae
adc
xchg
mov
out
cmc
pop
or
cmpsb
push
mov
push
in
testb
dec
addr16
outsl
push
je
mov
xor
mov
sbb
loopne
sbb
fistpll
sbb
mov
ret
bound
shlb
adc
popl
loopne
or
mov
loopne
and
mov
orb
andb
stos
push
aas
pop
cmp
punpckhbw
daa
movsb
mov
mov
mov
cmp
mov
ja
add
add
inc
lock
cwtl
sbbl
sbb
leave
add
ss
jg
out
mov
push
nop
jecxz
shll
ficomps
imul
lret
lret
push
addl
lea
and
test
cs
jne
xor
inc
dec
popa
mov
cld
stos
loop
dec
adc
in
mov
fldenv
fisubrs
stc
add
nop
movsb
rorl
dec
idivl
cli
jbe
aad
dec
mov
sbbb
arpl
out
test
inc
adc
subb
mov
aaa
sub
mov
je
lock
dec
push
jl
sbb
out
and
xchg
iret
jg
bound
int
addr16
adc
add
push
in
sti
sbb
mov
loope
or
jl
pop
into
stos
cmpsb
xchg
rol
inc
aaa
movb
push
pop
in
iret
cmc
notb
dec
pop
lret
out
loopne
and
mov
and
or
insb
cld
cmpsl
push
nop
jne
push
pushf
adc
ljmp
xchg
mov
subb
je
sbb
push
insl
inc
insl
xor
lcall
ficomps
arpl
pop
outsb
mov
push
mov
clc
cmpsl
mov
mov
imul
je,pn
lret
xor
jge
dec
mov
pop
xchg
mov
or
push
in
cmp
mov
icebp
jp
stos
sbb
dec
out
out
shrb
pop
mov
adc
roll
cmp
les
test
fwait
sbb
jge
mov
mov
dec
dec
add
cli
xor
popf
imul
pushl
mov
test
in
cmc
pop
push
jg
rorb
int3
arpl
cmp
push
pop
clc
sub
and
xchg
aad
add
out
scas
call
add
outsl
mov
scas
popf
sub
sub
clc
and
sbb
jb
leave
arpl
push
cmp
orb
aas
jne
outsb
mov
sub
sarb
imul
fsubrs
xchg
cs
jnp
test
adc
pusha
inc
pop
ds
fistl
inc
mov
stc
mov
stos
adc
fwait
push
ss
icebp
pop
mov
sbb
sub
pop
insl
stos
sub
into
jae
shr
jmp
je
mov
sub
rolb
push
pop
sbb
neg
sbb
ds
jl
in
push
adc
add
add
gs
int3
cli
mov
jge
cmc
add
mov
inc
xor
enter
stos
jne
std
lcall
scas
les
mov
icebp
mov
mov
dec
push
ret
mul
je
cmp
push
add
cmp
dec
fldenv
adc
sbb
mov
movsl
jecxz
cmp
jb
sbb
mov
imul
lods
mov
lock
jecxz
push
cmp
in
or
xchg
in
xchg
mov
cwtl
cmpsl
inc
loop
xor
push
dec
sbb
mov
inc
cmp
fsubs
ja
into
adc
je
jbe
xor
stos
mov
adc
cmp
mov
and
adc
nop
push
and
mov
inc
in
lods
jge
push
mov
scas
les
dec
push
push
enter
movsl
aam
push
xchg
push
jg
pop
in
aad
or
inc
xchg
xchg
movsl
scas
sti
sub
xchg
enter
mov
cwtl
cmp
bound
mov
out
clc
inc
xor
dec
mov
scas
imul
xor
repnz
repz
movl
mov
mov
fstpt
cwtl
fsubr
std
xor
xor
pop
sbb
pushf
pushl
adc
or
add
jmp
rorl
imul
and
and
push
sub
cmp
leave
bound
mov
cld
test
cmp
pop
jmp
xchg
inc
lret
outsb
sbb
xor
adc
mov
inc
jbe
hlt
jl
bnd
xchg
lds
xchg
cmpsb
xchg
jno
push
sub
fiadds
popa
stc
and
dec
fisubs
xor
scas
aad
enter
inc
popa
adc
pusha
aaa
fdivl
add
add
clc
popa
pop
test
js
sbb
mov
cmpsb
cli
cli
je
and
aad
outsl
xchg
test
mov
test
jle
cmp
sbb
jmp
js
mov
sarl
in
jecxz
test
in
xor
sahf
mov
lods
sahf
cmc
xor
cmp
stos
aad
mov
mov
and
repnz
aam
xchg
pop
and
push
dec
jp
cmp
loope
cmpsl
add
push
sbb
add
mov
mov
shll
gs
bound
inc
scas
cmp
jbe
or
daa
xchg
orb
ljmp
test
scas
xor
mov
add
shll
xor
mov
arpl
pop
fildl
xchg
aad
rcll
das
add
fstpl
sbb
outsl
xor
lret
dec
je
stc
sub
shlb
jl
inc
add
popa
sbb
movsb
scas
mov
je
rcrl
cmp
and
paddsb
ficompl
pop
jae
mov
push
and
fcmovnu
adc
js
fdivp
push
stos
loope
cmp
pop
mov
sub
mov
dec
test
mov
inc
dec
jge
jne
mov
and
sub
adc
jne
pop
stc
pop
lgs
daa
adcl
cmp
jnp
ds
mov
movsb
adc
les
loopne
mov
sub
push
cmp
jns
mov
into
outsb
adc
orb
fstpt
dec
sbb
test
xchg
pop
jecxz
sti
shlb
pop
pop
pop
dec
inc
in
fstl
lret
shl
std
add
pop
ret
in
xchg
std
push
in
add
mov
mov
outsl
les
stc
pop
cmp
mov
mov
frstor
scas
push
ret
mov
mov
adc
ja
pusha
jbe
pusha
ds
mov
mov
pop
xchg
cmpsb
popa
mov
jl
imul
lods
fadd
pop
in
int3
aaa
in
fwait
les
adc
fs
mov
sub
push
xchg
fwait
in
es
nop
jp
mov
xchg
jge
out
nop
xor
push
dec
insb
in
add
adc
jo
cwtl
push
mov
adc
outsl
add
dec
cmpsl
inc
inc
xchg
adc
jmp
sub
mov
add
cmpsl
xchg
or
adc
nop
inc
mov
mov
add
dec
mov
mov
lods
sbb
add
push
ljmp
lahf
dec
pop
cmp
xor
xlat
xlat
dec
out
and
cmpsb
and
popa
rcrb
das
cmp
adc
mov
pop
iret
cmp
adc
dec
ret
add
cmp
pop
int
inc
andb
cmpsb
repz
shrb
js
or
cmpsb
pusha
mov
ret
gs
pop
bound
mov
nop
cmp
jmp
inc
cmc
push
sar
je
jge
js
adc
jp
into
sbb
push
add
div
mov
xchg
adcb
mov
les
cmpsb
aaa
das
dec
js
jne
clc
xchg
lcall
pop
mov
pop
dec
das
xchg
adcl
jle
mov
or
xchg
pop
insl
adc
cmp
and
ret
scas
test
outsb
jo
cltd
out
mov
int
mov
addr16
loopne
xchg
xorb
mov
mov
push
mov
cmp
or
addl
adc
bound
in
rorl
inc
jnp
mov
lock
sbb
fsub
iret
fidivl
lods
add
loopne
dec
jnp
jo
xor
cmp
xchg
shrb
cmp
sub
mov
mov
jo
leave
stos
mov
mov
gs
fdivrl
jp
cwtl
jge
adc
sarb
lret
push
test
jns
sub
test
lock
movsl
jmp
jae
adc
ds
stc
stos
neg
add
xorl
std
imul
xchg
dec
loope
mov
cwtl
cmpsb
andb
leave
je
ficoms
das
sahf
es
or
sbb
adc
scas
lcall
mov
add
push
scas
dec
sbbb
jecxz
xchg
shrl
dec
lcall
ss
rcll
gs
mov
enter
ficoml
shll
jmp
adc
into
inc
imul
repz
fs
push
mov
cli
stc
mov
mov
mov
or
das
roll
cmp
push
push
fistpl
jb
xchg
ds
pop
es
lcall
call
push
xor
lret
insb
es
test
scas
lods
cltd
or
add
int3
sub
xor
stc
fldenv
dec
shrb
int3
jo
xchg
xchg
xchg
pop
std
jbe
push
adc
popa
push
enter
cmpsb
mov
and
data16
nop
andl
dec
shlb
fidivrs
inc
or
icebp
in
repnz
dec
cld
inc
push
cs
sub
and
mov
push
adc
mov
mov
prefetch
cmp
xor
or
sub
movsl
cwtl
push
add
in
aad
xor
enter
mov
ret
stc
js
mov
mov
enter
push
lods
xchg
mov
mov
xchg
popf
and
idivl
popf
lea
or
inc
cwtl
push
psrad
pop
dec
lcall
push
popa
cli
sub
adc
nop
push
xchg
push
cmp
xor
jo
icebp
daa
sub
inc
sti
ljmp
mov
clc
lret
shll
mov
add
push
in
imul
shrl
rcrl
nop
fcmovu
sub
pop
outsl
xchg
imul
mov
mov
xchg
std
adc
pop
xchg
stos
mov
shlb
xchg
xor
faddl
sti
popf
mov
ret
pop
jnp
push
cmp
insl
jbe
inc
xchg
jbe
mov
pusha
sub
sub
das
xor
inc
inc
lret
xor
gs
pop
adc
pop
dec
popf
pop
mov
rol
and
lret
mov
dec
push
insl
adc
push
idivb
js
mov
mov
sub
jecxz
pop
mov
test
arpl
call
hlt
cmp
cmp
sarl
push
sbb
jae
out
pop
clc
cmpb
dec
adc
and
pop
leave
std
mov
add
pop
cmp
mov
pop
mov
fwait
scas
sub
xchg
inc
dec
jb
adc
push
pop
mull
dec
fldenv
jne
iret
test
xor
icebp
cs
rcrl
adc
xchg
ja
insb
outsl
test
iret
push
aam
cmp
orb
mov
or
mov
rcrb
testl
mov
mov
or
sbb
xor
xor
pop
arpl
mov
scas
pop
cmp
mov
inc
push
and
addb
mov
inc
daa
mov
pop
outsl
adc
scas
jae
rcl
cmpsb
and
cld
lret
adc
mov
jmp
ja
mov
stos
mov
loop
dec
cltd
xchg
fcmovne
push
xchg
adc
fisubrl
sti
aam
sub
movsb
inc
xchg
and
aam
jle
fwait
or
jno
push
jb
movsb
fsubl
jns
cmpsb
stos
add
dec
or
pusha
call
shr
lods
mov
addr16
sbb
xchg
mov
sub
mov
pminsw
push
sub
mov
incl
mov
mov
dec
jno
cs
mov
daa
add
jmp
imul
adc
mov
fildl
push
xlat
pop
pop
inc
inc
lahf
add
stos
sbb
jp
movsb
cwtl
inc
fidivl
xchg
into
cltd
cmp
lock
daa
shr
in
xor
sbb
lea
pop
inc
jno
std
xchg
outsl
and
and
or
jo
cmp
loopne
mov
push
mov
jmp
mov
in
push
pop
cmp
mov
mov
dec
xchg
in
xchg
fists
add
pop
cmp
adc
xor
jae
inc
jb
push
fildl
mov
push
mov
roll
ds
pop
push
roll
push
jns
mov
mov
in
sub
mov
mov
addl
add
mov
and
popa
dec
or
adc
mov
xchg
xchg
inc
dec
scas
bound
mov
adc
jmp
xchg
es
jns
mov
arpl
js,pt
push
enter
add
insb
data16
fbld
loop
call
pop
mov
adc
test
add
mov
and
fadds
push
je
mov
leave
arpl
and
les
icebp
jo
jne
jno
mov
loope
repnz
cmp
out
lods
xlat
or
aaa
jnp
sti
and
mov
mov
mov
iret
inc
lret
cmpsb
jge
aad
pop
leave
mov
addr16
add
arpl
fcoml
cmp
mov
cmp
add
int3
nop
ja
or
inc
and
ret
jne
jo
pusha
cmp
jl
daa
and
loope
sar
lahf
addr16
push
pop
push
popf
ret
lret
mov
aaa
pop
stc
fisubs
out
nop
sahf
jle
and
shl
mov
cmpsb
cmp
pop
xor
mov
add
push
stc
sbb
lock
pop
mov
jge
xchg
push
jb
mov
jo
test
xchg
daa
jl
mov
sarl
inc
add
add
subl
xor
sub
pop
jbe
or
and
in
push
mov
stos
int3
je
scas
daa
out
leave
inc
fcmovnbe
dec
cmc
jb
jo
punpcklwd
int3
hlt
mov
movsl
fsubs
jg
ret
jge
lcall
cmp
test
pop
fsubr
cli
push
jns
ficoms
or
mov
mov
ljmp
fs
add
pusha
dec
inc
movsl
iret
xchg
loopne
int
je
hlt
and
sbb
cli
test
mov
int
dec
add
pop
arpl
jae
in
xchg
lock
ja
mov
addr16
push
clts
call
enter
mov
call
sub
xchg
cmpsl
and
push
xchg
in
inc
jnp
sbb
lahf
sub
jmp
fistl
mov
rcll
xchg
fisubs
sub
test
jl
sub
inc
les
insb
iret
cmpsb
clc
cmp
sahf
outsb
cmp
out
or
and
ret
ja
adc
xor
pop
mov
sbb
mov
cld
inc
in
pop
cmp
lahf
loopne
cmp
pop
cli
sbb
jbe
aas
mov
call
test
xor
mov
mov
outsb
lds
scas
and
mov
push
dec
sar
insl
or
inc
roll
fst
push
mov
jle
xchg
mov
push
mov
lahf
cmp
and
mov
mov
mov
adc
mov
loop
mov
adc
fs
cmp
bound
add
sarl
sub
shll
adc
jbe
loopne
inc
sub
ret
dec
jnp
xchg
outsl
gs
sti
xchg
out
xchg
enter
ja
arpl
repnz
mov
test
cmc
in
sbb
lret
mov
cltd
and
adc
pop
stc
push
push
fimull
repz
inc
mov
negl
bound
jne
gs
mov
shll
imul
jbe
and
jp
cmp
mov
idivb
sub
xor
out
fistl
or
loopne
add
scas
dec
push
and
sahf
fisubs
jns
icebp
lahf
ret
jle
shrb
popf
test
mov
mov
pop
mov
mov
sbb
cltd
cmp
xchg
add
pop
pushf
daa
loope
adc
push
mov
mov
jno
mov
jmp
jb
xchg
mov
mov
or
or
jge
sti
repz
in
mov
std
sbb
sbb
arpl
test
or
stos
mov
adcl
and
add
sahf
pop
mov
jae
rcrl
jns
addb
mov
mov
dec
stos
mov
mov
adc
xchg
jne
and
nop
enter
inc
and
lahf
imul
outsb
pop
gs
push
mov
xor
and
lahf
mov
shll
in
xor
bound
xchg
mov
scas
aaa
sub
lock
shlb
sub
jnp
in
cld
jae
daa
adc
shrb
dec
mov
ret
jg
mov
pop
psrlw
adc
dec
pop
jnp
adc
jg
mov
or
cmp
test
dec
shlb
shll
daa
and
insl
nop
pop
or
push
cmp
shrb
pop
ret
cmp
mov
das
cmp
insl
lret
jp
retw
mov
fdiv
or
in
imul
cmp
push
push
sub
jg
mov
or
ljmp
sti
js
sahf
mov
mov
xor
xchg
jbe
or
mov
lock
imul
test
inc
stos
icebp
pushf
sbbb
pop
jno
sbb
mov
popf
jae
insl
xchg
sbb
aas
outsl
dec
arpl
xor
mov
jbe
or
leave
sub
xchg
xchg
or
ds
repnz
in
push
and
mov
loopne
int
or
std
mov
inc
scas
fdiv
std
cltd
outsl
add
mov
sub
ja
pop
push
movsl
pop
adc
push
lcall
xchg
cld
aam
mov
hlt
inc
stos
shrb
mov
add
call
mov
inc
pop
push
push
sbbb
cld
gs
push
dec
lahf
pop
cmp
mov
test
jne
pop
fs
pop
jb
xor
lods
mov
xchg
jbe
cmp
adc
repnz
jo
push
xchg
sbb
pop
in
add
lcall
into
nop
lret
idivl
xor
ja
add
xchg
repnz
out
ds
mov
pop
dec
pushf
sbb
mov
xchg
xchg
mov
push
mov
xor
sub
or
sub
sbbl
push
stc
insl
sub
xchg
dec
inc
es
mov
cmp
repnz
jo
jmp
mov
test
push
cmp
rolb
dec
add
inc
mov
clc
push
addb
jmp
fadds
jae
inc
out
repnz
jmp
xlat
call
xor
xchg
or
jecxz
test
mov
inc
js
out
jge
aam
xchg
lods
inc
mov
int3
pop
movsb
adc
sub
shrl
push
jne
jns
hlt
or
xor
jnp
subb
mov
enter
fidivs
out
sbb
test
pop
fwait
cmc
loope
decb
aaa
int
jbe
xchg
jge
jmp
cmp
jge
dec
gs
mov
jne
mov
push
mov
loopne
mov
pusha
push
adc
mov
mov
inc
sbbl
mov
nop
mov
mov
jge
lods
jecxz
lds
outsl
xchg
mov
nop
push
enter
xchg
aad
jno
dec
imul
fisttpll
push
mov
fnstcw
inc
inc
xor
aam
add
mov
mov
xchg
imul
adc
jb
pop
jmp
enter
loopne
sbb
fldlg2
mov
sbb
das
test
das
mov
ja
dec
lret
enter
rcr
mov
in
loop
or
test
aad
aad
pop
push
out
xchg
cmp
mov
add
pop
and
mov
ljmp
fildll
popa
xchg
xchg
sti
mov
adc
insb
cli
mov
pop
loope
sbb
push
push
add
pop
xor
daa
notb
fildll
mov
pop
jns
jmp
adc
dec
pushf
rol
orl
aas
out
ret
jns
test
push
sti
rcr
call
nop
jb
ss
xor
xchg
pop
pusha
sbb
in
inc
sbb
push
inc
ss
out
shr
sar
or
xor
jle
popa
dec
or
xor
int
out
movb
and
jmp
inc
mov
rol
xchg
xchg
xchg
jo
pop
dec
jne
mov
add
aaa
sti
cmp
and
sbb
sub
aaa
in
jge
mov
or
sbb
icebp
jecxz
push
shrb
dec
add
dec
negb
stos
sub
lret
dec
out
daa
cwtl
sub
outsb
fstpl
cli
testl
in
fcmovnb
lods
jmp
jbe
xchg
int3
in
sbb
mov
pop
icebp
dec
adc
mov
je
scas
sbb
mov
mov
fnstenv
mov
lock
out
popa
jecxz
jnp
mov
mov
cmp
adc
lds
jb
les
ficoms
mov
shll
outsl
add
lods
sbb
sarb
dec
shll
les
pop
inc
mov
xchg
lea
ret
lods
insl
sub
xchg
xchg
pminub
pop
mov
and
test
cmp
cmp
fxch
mov
out
or
cmc
int
add
ljmp
and
call
xlat
jae
xchg
sahf
fistpl
jg
fmull
stos
adc
push
cmpsl
out
stos
fisubl
daa
stc
xlat
int3
mov
lahf
int3
loopne
push
imul
stc
pusha
jge
and
ret
mov
sbb
lahf
out
pop
pop
and
sbb
aas
leave
push
mov
mov
xchg
pop
cmc
idivl
lcall
jno
mov
iret
pop
enter
push
and
push
sahf
cli
push
std
ret
jge
mov
stc
cmc
or
scas
loopnew
inc
add
dec
pop
push
inc
mov
mov
test
lret
jnp
pop
mov
out
jb
pop
dec
cmp
xchg
add
mov
cld
mov
cmpsl
and
daa
fisttps
pop
xchg
jno
fiaddl
nopl
push
xchg
shl
test
sbb
pop
mov
sbb
clc
loope
xor
cmpsl
mov
push
add
mov
adc
jecxz
jno
push
sti
inc
cmp
sti
mov
pusha
mov
rcll
xor
cwtl
push
and
xchg
pop
fldenv
jl
fsts
shlb
fldt
sbb
dec
pop
mov
bound
sbb
push
sub
mov
inc
push
stc
adc
test
leave
lock
pop
sbbl
jg
jnp
push
inc
mov
mov
mov
mov
xchg
in
xor
cmp
in
mov
sub
jg
mov
fcompl
xchg
jo
les
jb
and
adc
mov
ja
fwait
mov
repnz
pop
dec
dec
scas
in
pop
cmpsb
jge
fcoml
jne
inc
pop
ret
mov
movb
push
pop
shll
loop
int
or
xor
cwtl
dec
add
cs
lods
sti
into
cs
fwait
rcrl
jnp
mov
movsb
int3
push
popa
das
push
dec
inc
xor
and
cli
dec
popa
cmp
pop
inc
and
leave
dec
push
hlt
mov
subb
or
cmpsl
aad
xchg
dec
jb
cld
jmp
jns
cmp
push
jecxz
xor
dec
xor
jns
mov
ja
out
mov
sbb
cmp
fs
mov
mov
scas
cmpb
ss
stc
xor
mov
rcrb
je
xor
out
loopne
fisttpl
sub
incb
dec
clc
lea
mov
or
xchg
loop
test
mov
aam
ss
ja
mov
jns
std
jmp
andb
movsb
test
mov
mov
unpckhps
pop
cmp
inc
outsl
movsb
sbb
mov
insb
daa
jmp
sbb
inc
dec
jae
testl
push
jecxz
mov
mov
fs
sbb
scas
inc
jnp
lcall
daa
mov
jp
jbe
dec
push
ja
dec
fcom
dec
sub
shrl
shll
pop
mov
pop
mov
cmp
adc
imul
ret
dec
ljmp
adc
std
jg
sub
mov
call
lcall
push
mov
jno
ja
fistps
cmp
orl
popa
in
sar
xor
in
adc
dec
jae
xchg
or
mov
mov
ja
xor
sbb
xchg
sahf
cwtl
mov
push
mov
jmp
and
or
pop
pop
xchg
xchg
mulb
addr16
sbb
into
push
push
or
repnz
std
xchg
stc
clc
addb
mov
out
add
inc
outsl
mov
push
cmp
push
mov
fdiv
pop
sti
jge
sti
push
daa
ss
out
cmpsl
or
scas
inc
cmp
roll
popa
xor
push
aam
xor
xor
jnp
out
mov
jl
push
int
leave
inc
in
sub
mov
or
ret
push
je
mov
pop
mov
sahf
jp
or
push
je
mov
addr16
sub
hlt
lods
push
jg
xchg
cmp
popf
bsr
cwtl
sbb
push
adc
pushf
add
das
inc
mov
pop
jnp
push
cs
shll
nop
addb
cmovg
mov
movsb
insl
cmp
ret
aaa
jae
out
add
jecxz
mov
aaa
insb
mov
insl
out
pop
andb
sbb
or
and
or
stc
mov
cld
js
jge
daa
cmp
iret
add
clc
call
icebp
sub
jbe
cwtl
bound
cmp
js
ret
or
lds
sbb
jmp
cmc
sbb
add
jo
push
ret
cmpsb
pop
ds
popa
scas
adc
sbb
rorb
xor
xor
jg
dec
xchg
and
sahf
sbb
call
and
stos
dec
dec
in
pop
cmp
push
adc
xchg
scas
push
push
push
sbb
ds
out
loope
test
fs
mov
add
ret
fwait
and
jecxz
and
shrb
clc
jns
mov
je
data16
fcompl
arpl
add
or
stc
adc
pop
ret
es
push
fcmovnbe
lcall
cmc
cmp
rcrb
pop
push
adcb
sahf
sbb
pop
mov
jnp
in
xor
pop
dec
fiaddl
jge
xchg
jmp
lahf
insb
in
push
push
mov
xlat
dec
cmc
mov
and
daa
sbb
pop
jmp
sub
cmp
test
and
jns
or
push
mov
sbb
pop
loope
push
adc
call
or
pop
jp
je
mov
or
out
dec
jl
adc
or
add
jg
cmc
sbb
negb
cmpsb
dec
scas
iret
xchg
mov
fiaddl
pop
pop
adc
pop
sbb
movsl
push
mov
fstpt
cld
loope
mov
xchg
es
xor
sti
push
hlt
adc
add
movsl
pop
into
xlat
jge
dec
mov
cld
icebp
mov
jb
shr
fwait
jecxz
rorl
push
test
pop
xor
sarb
loopne
fnstcw
pop
xlat
fiadds
sbb
push
mov
mov
push
lock
jnp
mov
xor
xchg
mov
xchg
or
shr
scas
jle
sub
daa
push
movsb
das
mov
xchg
incb
xor
lds
cmp
add
add
add
jno
pushf
push
push
push
mov
movsl
or
outsb
mov
les
sbb
nop
or
mov
mov
mov
push
mov
out
es
and
xor
mov
in
movb
shlb
jno
and
nop
in
push
mov
and
hlt
inc
stos
inc
dec
clc
aas
and
mov
cwtl
and
fmuls
xchg
ret
jno
leave
sub
adc
stc
incl
leave
ds
stos
cmp
aaa
push
xchg
inc
adc
mov
js
inc
femms
pop
mov
sbb
pop
cmp
jmp
icebp
jo
test
add
lcall
pushf
inc
roll
popf
sti
pop
js
fwait
add
js
cmp
jl
es
cmp
hlt
mov
orl
fs
push
lret
mov
cld
inc
pusha
jmp
and
pop
sbb
inc
cmp
cmp
je
clc
imul
mov
jbe
arpl
lods
stos
mulb
mov
adc
cmp
ss
sahf
in
inc
push
inc
pop
xor
jge
jecxz
mov
cmp
cwtl
mov
xor
mov
in
lods
test
mov
xor
pop
outsb
insb
mov
das
and
ljmp
sbb
lret
xchg
call
add
orb
xor
pusha
jb
shrb
or
pusha
lods
shlb
pushf
test
mov
mov
test
jg
jle
stc
and
jbe
int3
pop
or
data16
shll
inc
lods
scas
xor
call
push
out
clc
cmp
xor
mov
jmp
cmpl
fcoms
xor
je
xchg
dec
outsb
dec
fdivrl
data16
xchg
inc
pop
jae
add
dec
pop
jmp
sbb
test
repz
imul
dec
push
xchg
and
enter
jns
sub
divl
arpl
sbb
sub
rolb
dec
mov
int
push
in
mov
scas
cs
jne
call
add
cld
fs
xchg
pop
lretw
jmp
test
pop
fmull
pop
adc
push
and
fldenv
xchg
pop
out
mov
push
scas
pusha
outsl
mov
dec
sbb
mov
in
xlat
sbb
xchg
mov
add
sub
stc
pop
push
xor
stc
jns
mov
pop
cmpsl
push
lret
fsts
in
mov
mov
ja
es
add
mov
test
stc
push
xorl
mov
push
in
cwtl
cmp
cwtl
push
pop
ret
mov
adcb
js
lret
in
rclb
lret
add
lods
jbe
sbb
mov
fidivrl
lea
aad
xor
sbb
mov
cmp
out
mov
ret
xchg
imul
sbb
and
push
or
pop
pop
dec
pop
jle
cli
cmp
mov
xchg
test
mov
int
and
jo
cmp
outsb
adc
dec
jne
test
and
mov
loop
aam
xchg
cwtl
outsb
push
xor
lret
in
sbb
cmp
mov
outsl
mov
pop
lods
mov
push
sbbb
imul
push
into
or
dec
xchg
xor
and
inc
and
cli
js
or
mov
dec
jmp
adc
lds
inc
jne
mov
fisubl
dec
mov
into
mov
push
or
xchg
adc
push
test
or
and
pop
xrelease
jecxz
mov
rcll
je
mov
xor
xor
outsl
ret
je
mov
and
out
add
mov
stos
pop
gs
jae
dec
mov
cmc
aas
out
pop
dec
xor
in
jo
movsl
fwait
sti
jno
in
mov
push
fwait
inc
xchg
or
jmp
mov
xor
inc
sarl
cli
or
test
jno
psubsb
mov
push
aaa
shll
xchg
out
and
cld
inc
mov
sti
jnp
xchg
push
sbb
sbb
and
imul
in
arpl
int3
repnz
jne
xor
sbb
sbb
jg
xchg
inc
add
sub
push
mov
ds
enter
in
mov
xlat
arpl
subl
cmp
push
pop
stc
mov
push
aad
mov
addr16
mov
push
or
and
push
fucomip
iret
icebp
xor
xor
aas
add
xor
xchg
es
mov
lret
mov
sbb
push
add
mov
fstps
sub
sbb
jmp
lret
add
sbb
sub
pop
lahf
ljmp
add
je
notl
stos
push
cltd
mov
pop
add
dec
aas
ja
xor
sbb
inc
fiadds
test
xchg
push
faddp
xchg
cmp
insb
add
daa
jbe
xchg
inc
sbb
lcall
xor
push
mov
push
pop
orb
inc
adc
cmp
adc
notl
fildl
subb
pop
cmp
push
jno
add
mov
adc
scas
out
mov
xor
dec
pop
testb
insb
mov
xor
dec
fstpt
sti
loopne
sbb
pop
sbb
clc
mov
cld
mov
shr
enter
incl
mov
imul
fstpt
shlb
jle
jbe
pop
jmp
dec
mov
pop
or
sbb
sbb
pop
mov
sar
outsb
ljmp
mov
ss
jecxz
mov
xchg
clc
jecxz
cmpsb
mov
rorb
cmpsb
and
mov
fldcw
outsb
testb
dec
repz
aaa
jb
fdivrl
cmc
pushf
pop
incb
dec
xchg
mov
lret
push
mov
sahf
mov
aaa
add
pusha
or
mov
fnstenv
outsl
mov
xor
jmp
or
xchg
dec
outsl
jae
stos
int3
lahf
jnp
mov
arpl
xor
inc
addr16
mov
outsl
xor
mov
push
dec
cltd
mov
in
jmp
mov
cltd
imul
scas
cmp
push
adc
es
xchg
sub
test
popa
ja
jns
std
mov
cwtl
push
mov
xor
xchg
inc
push
out
in
stos
push
jmp
fs
jo
pop
rcrb
mov
mov
stos
or
lret
cltd
rcll
hlt
stc
imul
lods
out
jge
into
jb
mov
jne
lcall
push
hlt
fistl
xchg
lods
xchg
xchg
scas
test
cmpsl
pop
fnstsw
xchg
mov
nop
sbb
movsb
loop
and
aas
sbb
and
ss
loop
cltd
mov
mov
mov
inc
insl
lods
insb
vpshad
jns
stos
mov
lahf
test
pop
je
mov
jp
movsl
pop
cwtl
pop
mov
pop
scas
dec
ret
fsts
or
xchg
imul
add
and
or
dec
push
popf
aaa
jne
push
sub
hlt
aad
in
dec
data16
addr16
test
mov
adcl
and
mov
cmp
inc
sbb
addr16
pop
or
jmp
int
ljmp
cmp
mov
int
inc
and
sbb
ret
cmpsl
fldenv
test
ret
pop
jbe
loopne
loop
jge
lcall
xor
cmp
pusha
adc
fsincos
in
lret
mov
packssdw
rcll
into
in
sub
jmp
rclb
lcall
add
jbe
sbb
cmpsl
and
sbb
cmp
in
mov
jbe
ficompl
jp
push
hlt
pop
push
cwtl
mov
or
loope
adc
hlt
and
ror
outsl
sub
xor
insb
fcmovbe
and
subb
mov
lcall
adc
insb
enter
pop
dec
popa
xchg
test
repz
jecxz
test
and
push
pop
mov
fcoms
mov
icebp
ja
or
movb
sub
and
inc
sbb
mov
pop
icebp
xchg
daa
rorb
jne
sbb
rcll
popa
insl
mov
push
jmp
pop
mov
jae
jge
fistpll
enter
pop
inc
icebp
dec
adc
mov
movsb
test
cmp
dec
dec
adc
sbb
sbb
movsl
and
sahf
push
cmp
mov
adc
test
insl
movsl
stc
jg
push
push
add
pop
mov
sub
sub
push
cmp
movsb
out
outsb
add
sbb
outsb
dec
or
mov
stos
in
push
push
adc
jne
pop
movsb
mov
lcall
push
cmp
jle
mov
xchg
aas
mov
adc
negb
inc
adc
and
dec
lret
sbb
add
addb
mov
std
dec
jp
sub
loope
in
into
dec
and
stos
push
xchg
repnz
bound
aas
popf
cmp
inc
jo
popl
and
push
dec
sti
mov
sub
addr16
xchg
sub
popa
lea
test
cmp
and
push
add
repz
shr
xchg
call
fwait
enter
mov
rorb
xchg
mov
add
sbb
std
loopne
shll
js
mov
push
pusha
and
pushf
fildll
mov
daa
sub
xchg
mov
dec
add
popf
shll
aaa
pop
push
rorb
lock
xchg
ja
movsb
jno
in
dec
orl
push
push
icebp
sub
push
lods
sbb
mov
sarb
test
loop
daa
sbb
mov
adc
out
add
imul
sub
dec
cmpb
jmp
and
movsb
mov
jmp
push
es
inc
hlt
stos
pop
rclb
sub
enter
stc
xchg
sbb
daa
fbstp
jecxz
or
xor
and
cmpsl
lahf
insb
inc
cmp
enter
movb
les
mov
dec
mov
pusha
in
push
add
add
add
mov
jp
jmp
test
sbb
jl
sub
outsb
into
cmp
jb
int3
xchg
out
xchg
arpl
dec
mov
sub
or
sub
push
dec
sbb
adc
mov
fwait
sbb
int
fnstcw
pop
cld
mov
stos
call
mov
std
pop
pop
push
sbb
lods
test
pop
xor
jbe
push
pusha
lret
rclb
cmp
nop
mov
jg
insl
sub
push
addb
daa
sarl
jno
xchg
lea
bound
adc
adc
mov
out
jmp
mov
sbb
dec
leave
pop
dec
sub
movsl
mov
and
pop
out
add
sbb
in
or
add
cmp
and
cld
jle
in
aaa
lods
sbb
mov
out
mov
sbb
sub
cmp
mov
in
mov
and
inc
jp
shlb
add
in
rolb
or
dec
and
pusha
inc
sub
or
jbe
mov
pop
add
in
std
sbb
cld
in
bound
and
mov
mov
mov
icebp
je
mov
nopl
fistl
sbb
mov
and
sub
pop
mov
xor
cli
jns
pop
push
xor
mov
hlt
mov
or
fisubl
or
xlat
call
jb
pop
xchg
sub
adc
je
out
pop
je
mov
int3
not
imul
or
or
inc
lods
jbe
add
inc
cmp
jecxz
sub
cmp
push
inc
aam
cmp
add
or
rcll
lods
rorb
add
jbe
adc
sub
cmpsl
jp
mov
dec
dec
lret
cli
rolb
sbb
pushf
ljmp
int
pop
mov
xchg
addr16
iret
sti
or
iret
fadd
or
inc
cmc
pop
inc
pusha
or
cmp
andb
cwtl
sub
inc
dec
jb
mov
dec
xor
mov
lods
sbb
adc
out
imul
pop
xchg
sbb
xchg
mov
int3
subl
popf
clc
das
shlb
and
mov
sbb
mov
sub
cld
sbb
cmp
push
sbb
adc
out
mov
add
adc
out
mov
cmc
lahf
pop
cltd
cmp
mov
fmuls
inc
mov
ja
jp
loope
mov
pop
push
xlat
xor
ret
lret
mov
mov
punpcklbw
pop
lea
mov
aas
cmp
repz
les
cmp
mov
add
stos
cs
dec
cmpsl
xor
mov
cmpsb
sbb
xchg
jnp
negb
pop
jo
sub
ffree
adc
out
test
dec
rcrl
and
cmovns
scas
movsb
jb
xchg
movsb
pop
lock
lods
or
cs
push
lods
mov
add
dec
jb
sub
xchg
daa
fidivrl
xor
dec
inc
jle
lret
lods
push
push
data16
sti
pop
insl
lock
dec
sub
push
jle
inc
push
dec
test
cmp
fistps
mov
idiv
rcrb
and
pop
ljmp
cmp
mov
stc
sbb
mov
imul
gs
xchg
push
dec
out
lds
mov
aaa
and
push
popa
adc
cmp
fstpt
mov
xor
fsts
mov
jmp
pop
cltd
popl
push
iret
mov
int
add
ljmp
xor
hlt
jb
push
movsb
shrl
xor
sbb
cltd
add
fldenv
lds
push
lods
dec
ret
in
xchg
shrb
lcall
pop
push
cmp
jl
inc
hlt
inc
push
jg
in
mov
xor
dec
jp
lock
test
repz
sub
je
mov
and
addr16
fnstcw
sub
mov
cmp
and
cmp
lea
repz
inc
lret
mov
mov
loopne
andb
data16
or
xchg
adc
sete
or
test
jno
xor
push
jnp
test
sarb
aas
mov
push
insb
mov
pop
add
test
imul
add
lods
insl
xchg
mov
push
jo
cmpsl
mov
repnz
test
dec
xchg
sub
jg
leave
xor
push
sub
fcmovnbe
xchg
shrl
jle
hlt
mov
out
sti
inc
andb
push
cs
movsl
stos
out
cld
and
sub
jae
out
stc
bound
dec
jge
jmp
inc
xchg
cmp
stos
adc
incl
dec
test
mov
das
mov
inc
jg
cmp
inc
fs
fdivrs
test
movb
inc
cmc
push
dec
adc
dec
sbb
lahf
fildll
rcrb
pop
ds
and
je
shll
faddp
cli
test
lahf
pop
add
lea
sub
adc
mov
inc
test
push
hlt
iret
pusha
mov
pop
adc
dec
pushf
push
jno
popf
pop
dec
mov
pcmpeqd
mov
adc
jle
or
sbb
inc
testl
std
pop
shrl
test
leave
out
xchg
inc
aam
xor
xlat
mov
out
mov
fidivl
jg
sbb
loopne
jbe
movsb
sahf
adc
jle
in
adc
sub
jns
pop
iret
pop
insb
into
daa
push
sbb
repz
inc
add
xlat
and
loop
iret
xchg
xor
dec
lock
mov
mov
mov
push
push
and
and
lods
cmp
jns
mov
push
int
push
mov
movsl
jo
adc
cltd
and
and
mov
outsb
cld
jmp
jg
rcrb
shlb
and
xchg
add
lods
mov
cs
stos
mov
mov
stc
push
lret
jmp
fbld
popf
or
lea
aam
mov
jl
movsb
fdivrl
stos
shll
sbb
cmovae
add
loope
mov
loopne
mov
add
pop
int
scas
mov
jne
xchg
mov
or
adc
daa
fidivrs
mov
setge
mov
adc
out
jo
cs
mov
bound
fcomip
xchg
out
test
cmpsb
add
dec
inc
ret
xor
pop
inc
in
mov
mov
cmp
dec
jge
fcomi
jae
push
sbb
mov
sub
popa
xchg
cmp
adc
cmp
push
test
arpl
mov
xchg
dec
lret
sahf
dec
or
test
nop
movsb
jae
sbb
cmp
fs
ficoms
movsb
or
push
cmp
jl
jb
xchg
sub
orl
lods
add
pop
divl
xchg
rolb
or
xor
cmp
adc
stos
sarb
and
mov
jo
pop
ja
gs
lret
in
mov
bound
cmp
mov
mov
int
inc
loop
fisttpll
inc
pushf
pop
push
or
shl
add
or
in
add
jmp
aad
mov
ja
sub
enter
adc
mov
lock
adc
sub
sbb
bound
mov
les
mov
inc
mov
jno
outsb
sbb
and
push
push
out
bound
test
push
rclb
gs
jle
and
inc
outsl
xchg
push
loop
sub
mov
test
xchg
rcll
out
sub
mov
cmp
add
ret
rcrb
in
cmp
icebp
inc
or
scas
mov
or
fnsetpm(287
aad
or
es
cmp
negl
test
aas
jne
arpl
xor
sarl
jge
shll
mov
push
xchg
add
push
mov
cmpsb
or
mov
mov
add
decb
dec
test
mov
xchg
loope
add
mov
jge
mov
mov
mov
push
mov
insl
cmp
jnp
movsb
cmpsl
add
sbb
pushf
repz
pop
rolb
test
lret
movsl
in
mov
mov
pop
mov
pusha
fdivl
out
rdpmc
jecxz
pop
cwtl
scas
xchg
pop
daa
dec
cmp
fisubrl
bound
push
inc
cmp
and
loope
cmp
fwait
push
push
push
insl
xchg
leave
int3
mov
and
pop
dec
cmp
push
test
jp
dec
scas
iret
xchg
push
inc
jo
movsb
jnp
shrb
sbb
int3
mov
dec
cld
out
mov
gs
test
lea
or
jl
sbb
add
mov
and
sbb
add
iret
test
fidivrl
inc
mov
sbb
pop
or
cmpsl
cmc
ss
test
addl
mov
aam
data16
in
dec
mov
pop
ret
mov
jnp
in
clc
cmpsl
call
push
mov
das
mov
xchg
into
in
sbb
dec
aad
fwait
bound
cmpsl
addl
push
lahf
clc
xor
test
xor
jle
out
fists
cmpsb
mov
push
flds
mov
add
sbb
cmpsb
cld
in
out
pop
outsb
push
jge
daa
add
xor
push
pop
push
mov
out
xchg
int
icebp
inc
iret
pop
pop
arpl
add
xor
adc
jbe
maxps
mov
fs
cld
mov
ficoms
mov
pop
ss
mov
lahf
hlt
insl
je
fistpl
push
mov
pop
rcrl
lcall
mov
pop
js
inc
stos
cmp
je
imul
fmull
mov
icebp
and
mov
leave
insb
test
cld
lcall
or
push
sbb
xchg
arpl
js
mov
and
mov
ja
scas
mov
pop
cld
fsts
stc
and
int
ja
adc
or
clc
movsl
sti
and
dec
out
int3
and
mov
fmull
xor
clc
fistpll
scas
xor
mov
les
test
stc
sbb
add
adc
dec
sti
dec
push
xor
in
ja
xor
inc
jo
jecxz
lods
mov
mov
imul
mov
stos
inc
jp
mov
mov
ds
jge
pop
movsl
or
mov
mov
mov
negb
enter
int
lret
cmpsl
or
ret
ljmp
out
lret
xchg
dec
push
jecxz
push
pushf
popa
pop
loopne
inc
outsb
jns
lods
inc
lret
test
push
mov
js
add
stc
loopne
sbb
sub
je
hlt
mov
cmc
jb
fwait
hlt
shll
sarb
bnd
popf
ret
xor
call
jg
adc
cmp
icebp
sbb
leave
loopne
test
jg
push
in
repz
mov
or
dec
inc
sbb
or
add
arpl
mov
bound
ret
lods
sbb
jmp
jbe
add
sub
icebp
sbb
sub
xor
dec
sbb
ss
cmc
add
mov
idivb
hlt
pop
pop
push
into
pop
icebp
gs
push
std
in
pop
outsl
jns
pop
inc
hlt
fildl
push
testb
push
xchg
pop
push
cld
popa
inc
cwtl
scas
mov
or
mov
mov
fidivs
out
rcrl
fistps
scas
cmpsl
xchg
jae
ficoms
std
inc
pop
fistl
test
dec
add
jmp
into
inc
test
fimull
xlat
xchg
mov
scas
addb
sub
shufps
jne
rcrl
orl
cmp
jo
mov
cli
mov
mov
mov
sbb
fwait
and
xchg
sahf
scas
in
dec
sub
xor
lods
cmp
sub
sti
pop
or
mov
or
sbb
push
cmp
xor
mov
jg
aam
sarl
lahf
das
rol
aaa
ds
mov
push
jb
dec
outsb
dec
push
push
dec
pop
xchg
mov
inc
inc
mov
stos
jl
bound
es
icebp
push
cmpb
repz
shl
jnp
inc
cli
mov
or
cmpsb
ds
movq
add
in
nop
and
popf
jp
rcrb
mov
jl
hlt
sbb
lds
and
mov
or
clc
fsubrl
adc
call
xchg
pop
lret
mov
int3
popl
lods
pop
shr
out
adc
or
aas
cmpsl
pop
lahf
cmp
or
stos
out
pop
inc
pop
lds
xor
inc
sub
or
jle
daa
mov
cltd
xchg
arpl
or
push
pop
jne
enter
lret
js
fsubrs
lds
lock
xor
push
xchg
inc
and
or
movb
iret
mov
pop
pop
cld
mov
rcrl
add
addl
mov
xchg
inc
insb
cli
imul
lods
pop
cmp
inc
in
pusha
push
jns
mov
mov
pop
scas
int3
or
sbb
mov
nop
and
test
xchg
cmp
cmp
and
shrl
jns
sbb
mov
inc
mov
cmpsl
or
sub
cmp
cli
lahf
ss
int3
fcoml
push
mov
mov
loopne
inc
test
lret
mov
pop
inc
ret
pop
sarl
in
xor
xchg
fwait
cmp
in
xchg
dec
push
je
gs
cmp
rorb
scas
test
pushf
fmulp
es
sarl
fistps
add
call
test
mov
cmp
xlat
leave
push
rcrb
sarl
pop
fadd
std
lcall
mov
nop
adc
dec
and
inc
scas
mov
push
test
movsl
out
js
and
xor
inc
push
adc
mov
hlt
mov
mov
lods
dec
dec
pop
and
fsubrl
add
jl
mov
jge
push
in
inc
sti
out
sbb
sbb
lret
rol
pushf
jne
jp
fsubr
jne
jg
nop
scas
cwtl
pop
leave
lret
fdivs
adc
mov
pop
pop
xchg
insb
xchg
and
mov
jno
or
and
and
sub
ret
mov
sbb
std
mov
cwtl
ret
dec
xlat
cwtl
pushf
adc
inc
sbb
in
fildl
shll
les
fcmovb
insb
push
mov
adc
fstps
and
andb
xor
or
and
adc
out
aas
loope
jp
into
adc
add
adc
xor
in
jmp
jnp
jbe
call
push
xor
test
movsb
ja
sbb
cmp
cmp
inc
mov
jne
xchg
mov
inc
cmc
mov
fcomp
movl
push
push
hlt
pop
xchg
jle
cmp
xlat
mov
pop
mov
negl
movsb
enter
aas
ja
sub
cmpsb
loop
pop
dec
enter
inc
enter
dec
into
push
mov
dec
test
stc
xor
not
jnp
es
clc
sbb
mov
and
shrb
add
mov
jbe
jg
andl
imull
daa
out
jb
out
xchg
mov
lret
aam
dec
sti
sbb
inc
pop
mov
lcall
jge
mov
arpl
sbb
push
push
jmp
aas
sti
jle
and
enter
and
jg
and
inc
std
xor
in
leave
testl
scas
outsb
cs
lret
and
sbb
push
mov
or
mov
lret
sbb
cmp
jl
push
cmp
stc
cmp
sbb
mov
cmp
jae
mov
push
jg
jb
pop
int3
adc
movhps
popf
cwtl
push
rclb
imul
pop
and
and
test
mov
push
imul
pop
cmpsl
push
push
imul
scas
push
jb
and
sbb
out
jnp
jp
dec
and
cmp
sub
pushaw
cld
cld
out
ljmp
ss
xor
inc
and
mov
dec
mov
aaa
lock
insb
lods
pop
mov
es
inc
lods
lock
mov
data16
call
push
dec
mov
or
aam
shrb
dec
or
scas
cmpsl
adc
push
in
in
popf
pop
fdivl
jmp
leave
clc
mov
mov
dec
sbb
inc
movsl
mov
in
sub
pop
inc
mov
popl
xchg
aaa
mov
fdivrl
in
jno
aas
or
movsl
xlat
or
sar
mov
dec
ljmp
je
dec
jmp
inc
mov
sbb
push
cmp
paddsb
cmp
lret
mov
mov
push
jge
push
cltd
cwtl
push
lcall
rclb
aam
fisubrl
jo
pop
mov
enter
psubw
push
jae
out
pop
mov
pop
and
xor
outsl
imul
lds
xchg
mov
mov
dec
insb
or
dec
add
dec
into
pop
ja
push
dec
movsl
inc
inc
pop
rcrb
pop
mov
dec
xchg
in
jno
out
lret
mov
push
divb
mov
sub
mov
push
mov
mov
push
xchg
pop
es
roll
movsl
inc
lcall
cmc
call
femms
cmc
dec
ret
mov
cmpsb
repz
sbb
xchg
pusha
pop
sub
and
scas
int
rcll
ret
sbb
movsb
inc
xchg
int3
cmp
push
ret
ss
mov
fldcw
or
outsl
mov
xor
or
rep
mov
mov
xchg
inc
insb
or
int3
shr
push
xorl
mov
popl
fs
jb
nop
rorl
in
inc
add
insl
adc
push
pop
jo
fidivl
or
mov
lret
popf
clc
mov
xlat
addl
in
jne
pop
clc
adc
mov
push
adc
jge
xchg
xchg
ret
addl
jecxz
dec
mov
gs
pop
or
scas
jo
cs
adc
mov
shl
mov
lcall
push
adc
stc
andl
push
xor
adc
push
inc
cli
leave
push
daa
jge
or
loopne
push
xchg
lods
jl
lea
in
or
out
adc
aad
mov
sti
push
push
sbb
loop
or
xchg
push
pusha
fsubrl
insl
aas
movsb
repz
loopne
movhps
cmpsl
mov
faddp
dec
icebp
aas
mov
fdivs
lods
cli
and
mov
les
insb
aas
dec
xchg
outsl
enter
js
js
mov
into
mov
lahf
xchg
mov
push
push
pop
fisttpl
dec
test
push
fs
popa
cld
jae
pop
push
add
fistps
clc
add
cmp
les
sub
pushf
adc
sub
popf
mov
adc
lods
pop
mov
loopne
mov
mov
push
addr16
pop
xor
cmp
jge
stos
out
aas
xchg
fnstcw
push
fbstp
xchg
inc
aam
in
and
iret
jnp
jecxz
pop
shlb
xlat
xlat
jns
in
aam
notb
cmp
cwtl
push
push
lods
ret
ret
fistpll
lods
ds
sti
push
jb
sahf
ljmp
cmp
lods
inc
hlt
inc
leave
notl
sti
lcall
ds
sahf
cld
in
adc
xorl
std
out
movsl
mov
divb
scas
pop
cmp
adc
test
lret
xlat
pop
mov
shll
outsl
adc
arpl
scas
std
cmp
in
and
xor
push
jl
imul
and
cmp
jmp
repnz
xor
mov
sbb
mov
loop
mov
mull
ds
pushf
movsb
incl
pop
inc
xor
push
inc
sub
xor
nop
dec
push
adcl
add
test
cmp
jne
movsl
or
repnz
sbb
inc
and
mov
xor
pop
loope
aas
mov
daa
in
scas
jno
repz
fadds
ret
mov
dec
mov
xor
mov
loop
scas
enter
push
fimull
push
popf
or
jp
cmp
mov
outsl
xor
iret
jns
lods
sbb
mov
std
and
inc
dec
adc
sbb
and
leave
sbb
xor
jnp
es
cld
in
scas
cltd
aaa
cmpsl
std
sub
or
cwtl
mov
fs
inc
xchg
sub
xor
mov
fcomip
push
jmp
and
add
lret
adc
dec
or
xor
mov
or
call
cs
sbb
repnz
lcall
sub
sbb
push
mov
or
fwait
inc
and
lds
mov
pop
jle
fcmovb
xchg
aaa
push
inc
pop
insl
dec
test
pusha
loopne
cmp
mov
jae
das
sub
shl
idivl
cvtpi2ps
lcall
xchg
jmp
les
adc
xchg
out
xor
mov
fimuls
sahf
adc
iret
pushf
fs
xchg
mov
xchg
jnp
aam
inc
xor
push
mov
hlt
and
shl
dec
jb
sbb
int3
hlt
xor
movsb
pop
dec
roll
push
std
hlt
imul
mov
jno
and
aam
stos
add
fwait
mov
push
cmp
shlb
movsb
sahf
cmp
sti
dec
mov
or
outsb
enter
add
lcall
popa
jne
jno
push
repz
xchg
sub
pushf
in
adc
arpl
xor
cmp
ss
push
xchg
das
loope
push
or
adc
enter
stos
jbe
mov
insl
fsubrl
cmc
and
fwait
lds
imul
push
daa
xchg
insb
lret
inc
sbb
sub
push
adc
faddp
mov
adcb
dec
mov
pop
add
cmp
scas
and
rorl
xlat
xchg
out
outsl
and
add
sahf
lret
xor
dec
aas
loopne
sub
sbb
into
xchg
inc
sub
insl
dec
mov
in
lods
aaa
add
gs
push
lds
int3
cmp
push
mov
pop
mov
or
mov
inc
jno
cmp
or
test
cltd
in
bound
andb
cmp
jne
data16
in
xchg
jl
jmp
enter
mov
ds
fwait
jge
xor
jo
enter
outsl
mov
cmp
adc
jl
out
add
frstor
lds
inc
enter
push
je
pusha
lret
es
xchg
mov
pop
add
les
aam
or
dec
movsb
call
pop
mov
cmp
cmp
push
or
int3
or
push
mov
insl
out
cmpsb
popf
int
xchg
sbb
lods
inc
das
jl
rol
hlt
mov
aas
movsl
sbbb
ret
je
test
sbb
dec
push
aaa
or
jl
sbb
jp
icebp
int3
xchg
pop
dec
js
pop
ror
aad
inc
lea
jb
inc
icebp
insl
or
scas
mov
cmp
push
stos
add
adc
and
xchg
loop
sub
add
loop
sbb
in
push
cmp
mov
sahf
jbe
add
mov
push
xchg
loopne
pop
jo
fwait
mov
inc
sbb
push
roll
sbb
cmpsl
add
jp
inc
scas
out
mov
jo
pushf
ss
and
jne
js
cmc
inc
int3
push
cmp
and
sahf
outsl
jl
cs
xor
movsb
out
inc
pushf
outsl
jae
jno,pt
ret
cmp
in
jmp
in
push
xlat
fcomps
or
or
orl
pushf
sahf
fdivrl
frstor
je
fbstp
aad
pop
aam
mov
jl
xor
ss
loopne
retw
imul
xorl
loopew,pn
es
scas
pop
xchg
fsubrl
ds
mov
int
mov
lods
jb
fisubl
pop
dec
push
jg
mov
divl
cs
out
mov
sbb
and
or
sbb
xlat
sbb
or
sub
dec
push
sahf
or
ja
xchg
push
and
rcrl
jae
dec
or
cmp
stos
xor
aaa
in
repz
xchg
add
cmpsb
adcl
repz
inc
popa
xchg
or
lcall
or
cmp
cs
scas
xchg
cmp
ror
inc
mov
addr16
nop
in
hlt
mov
in
inc
andb
loop
ret
lds
adc
cwtl
out
push
daa
lcall
xchg
in
cwtl
and
jnp
xor
mov
cmp
out
pop
push
pop
or
fimuls
in
aas
sub
ja
cmpsl
sti
cmc
sub
jecxz
fstpt
xor
test
push
cwtl
cwtl
jnp
xor
lods
add
xor
ror
leave
sub
lods
dec
mov
push
jae
mov
ror
xchg
popa
mov
mov
or
jecxz
fbstp
sub
adc
cmp
inc
nop
and
sbb
int
std
cltd
stos
sub
pop
xchg
test
ljmp
leave
xor
mov
pop
xchg
jae
adc
xor
sub
mov
sbb
jle
xchg
mov
mov
mov
mov
insl
hlt
test
xchg
iret
faddl
leave
dec
addb
jmp
jmp
mov
add
sbb
mov
in
popa
lds
call
fwait
pop
xchg
inc
sub
std
adc
cmp
stos
outsb
push
sbb
loopne
mov
push
dec
mov
jg
ljmp
sbb
sub
sarb
mov
inc
int
out
sbb
adc
jno
out
lret
rcrb
popa
lds
leave
outsl
fsubrs
mov
jne
lods
lret
inc
ds
sbb
push
shr
call
jmp
jb
addr16
push
jecxz
add
hlt
push
sbb
or
dec
pop
mov
inc
addr16
aam
andl
sub
push
adcl
in
gs
mov
jae
mov
loopne
out
xchg
scas
and
dec
aaa
int
xlat
jle
adc
mov
insb
pop
xor
and
jge
or
shrb
sub
sbbb
jmp
xchg
lods
xchg
cmc
test
in
push
jmp
imul
fisttpl
mov
out
adc
adc
adc
out
cmp
or
sti
cli
data16
or
icebp
dec
jnp
cmp
mov
dec
lock
imul
sbb
imul
mov
icebp
in
rcll
mov
jp
mov
mov
addr16
fidivrl
shl
inc
pop
arpl
in
mov
sbb
repnz
xchg
stos
lea
je
xor
or
jno
push
in
add
pushf
jo
sbb
or
loopne
xor
inc
inc
add
clc
mov
jo
jl
out
cwtl
sub
pusha
xchg
popa
imulb
adc
push
and
dec
pop
sub
push
dec
mov
jmp
push
daa
pop
xlat
hlt
popf
pop
push
cmp
subb
dec
cmp
test
imul
out
lret
adc
jo
dec
push
mov
cli
repz
pop
xor
push
adc
aas
pop
jle
sbb
seto
out
push
ds
scas
lret
mov
mov
shrb
xor
and
and
push
lods
cmp
loope
imulb
push
mov
mov
adc
gs
pop
dec
pop
imul
mov
cmpsl
inc
stc
dec
xor
add
ss
lcall
je
jp
repnz
lds
add
dec
repz
or
sub
pop
inc
aad
jl
and
movsb
int
push
pop
fnstenv
pop
das
cli
iret
mov
adc
push
rol
notl
into
lock
lcall
inc
pop
ja
push
ss
shrb
xchg
mov
filds
out
inc
jmp
scas
push
and
aas
push
push
ret
add
pop
in
in
sbb
lods
add
lock
or
dec
mov
fimull
enter
clc
push
jbe
jns
lods
sti
mov
cmp
pop
out
testl
jecxz
push
inc
ret
dec
enter
addr16
lock
jbe
mov
cmp
push
rcl
js
dec
push
xchg
bswap
pop
or
sahf
dec
dec
addr16
test
insb
jae
fbld
mov
fnstcw
fdivrp
push
sub
mov
dec
mov
sbb
mov
add
jb
xor
mov
addr16
mov
and
das
std
cs
jae,pn
leave
pop
popa
bound
rolb
insl
sbb
les
shr
arpl
adc
pop
adc
in
insb
mov
ss
push
mov
std
scas
es
out
mov
dec
cmp
sub
sub
push
inc
pop
xchg
jae
subl
insl
movsl
insl
mov
loope
cmp
test
hlt
sbb
cltd
mov
adcb
fimull
sbbb
sbb
nop
pusha
out
pop
insb
pop
pop
shlb
inc
insb
insb
xchg
mov
imul
arpl
pop
lock
pop
rorl
jge
sbb
fildl
lds
sub
xchg
pop
mov
cli
xor
sbb
rcrb
sbb
push
idiv
aas
clc
push
addr16
sahf
in
or
jp
ret
lcall
out
jge
jp
repnz
jne
divb
sub
sub
xor
hlt
je
xor
lock
dec
xchg
imul
jno
push
lds
inc
out
in
stc
ficoms
mov
jecxz
xor
outsl
jmp
push
and
jae
dec
dec
jg
ss
sbb
jae
sti
outsl
xchg
rorb
xchg
loop
rorb
xchg
jnp
shrb
jecxz
sahf
aas
push
idiv
cmp
dec
aas
mov
push
in
dec
sub
insb
pop
and
fmul
addb
sbbb
rorb
test
mov
push
cmpl
jbe
push
pop
dec
mov
inc
xor
sahf
int3
nop
stos
outsl
in
adc
mov
inc
leave
imul
cmp
fcmove
push
xchg
mov
leave
sub
and
xchg
mov
cltd
adc
les
std
into
pop
pop
lret
jo
xchg
outsl
mov
mov
or
or
mov
mov
jnp
xchg
leave
jae
and
lods
xchg
js
xor
cmp
hlt
fadds
adc
cmp
cmp
add
add
push
fs
jecxz
dec
js
mov
ret
and
ja
out
add
aaa
leave
insl
cmp
dec
mov
hlt
xchg
dec
lahf
enter
push
mov
mov
add
pop
cmc
stc
das
rcl
ffree
mov
adc
jns
sub
imul
or
stos
push
cs
in
popf
or
je
out
jno
sub
cmp
adc
inc
aad
loopne
ds
les
fisubrs
cmp
cwtl
mov
mov
lods
dec
rorl
push
ss
and
mov
jecxz
mov
xor
bound
add
loop
jp
leave
and
jo
loop
cmp
and
adc
dec
stc
addl
out
or
js
xor
pop
ja
adc
fmulp
cli
gs
mov
imul
mov
cmc
lea
fnstsw
stc
sub
repnz
loope
dec
lcall
xchg
dec
jnp
mov
xchg
xlat
xchg
or
outsb
imul
es
in
loopne
sub
inc
mov
mov
sub
xchg
test
xor
iret
mov
shll
add
lahf
cmpsb
fs
and
pop
dec
rcrl
push
repnz
dec
fdivrl
movl
sbb
jmp
lahf
cmp
popa
cmp
adc
enter
out
scas
jl
aam
and
fisttpl
adc
cmp
inc
adc
jl
fsubl
arpl
or
lods
push
imul
popf
inc
lcall
dec
inc
xchg
fnstenv
add
mov
orb
cmpsl
push
iret
arpl
mov
mov
je
xchg
mov
cmp
addl
lds
mov
add
xchg
sbb
mov
and
xorb
mov
in
addl
pop
push
movsl
inc
push
loopne
sti
jae
cli
or
xor
pop
daa
inc
add
jle
xor
scas
adc
outsl
lret
mov
cmp
lcall
stos
mov
cli
orl
repnz
pop
insl
popa
test
dec
xor
dec
mov
cli
ds
jg
outsl
cmpsb
adc
cmpb
les
les
mull
hlt
dec
fmuls
repz
xor
pop
inc
xor
dec
push
pop
shl
sbb
xchg
push
xor
lret
jle
adc
inc
aad
jb
shll
cld
jae
cmpsl
test
lock
ret
stos
in
aam
test
bound
mov
mov
cmpl
jae
std
xor
xor
es
jl
xor
cld
mov
inc
jnp
mov
sahf
divb
nop
pushf
xchg
or
ljmp
jecxz
sti
xor
mov
cmp
stos
sbb
ret
hlt
lret
sbb
lods
jp
or
jns
sti
jp
test
sub
testl
jge
xchg
lock
lock
fsubp
dec
push
push
sub
dec
xor
pusha
mov
pop
mov
aaa
inc
pop
std
test
repz
mov
aaa
aam
mov
mov
shrl
pop
mov
lds
xor
in
fcoms
ljmp
loop
push
idivb
mov
imul
aaa
lret
inc
movsl
mov
div
test
xlat
cltd
in
push
lea
inc
fwait
inc
cld
dec
lods
lock
lret
jecxz
insb
add
call
sbb
aad
out
push
or
and
mull
push
or
mov
jmp
pushaw
and
fimull
add
mov
cmp
lret
jl
xor
xchg
lods
or
ljmp
fisttpl
int
pop
js
ss
pop
mov
ja
leave
inc
cmpsl
adc
adc
mov
xor
adc
cwtl
mov
scas
xlat
leave
sahf
xchg
adc
mov
mov
or
pop
sti
pusha
mov
cmpsb
inc
insb
jmp
test
in
cwtl
dec
cmp
test
jb
arpl
clc
and
and
sahf
sarb
add
pop
pop
imull
pop
sub
ret
cmp
iret
xchg
mov
test
push
std
lods
pop
arpl
fmulp
daa
lcall
mov
push
xor
addl
push
jno
lods
and
cli
outsl
and
shlb
bound
xor
cmp
shll
jmp
push
ss
hlt
and
mov
push
fimuls
fincstp
mov
xor
testb
adc
sti
sbb
push
jle
inc
fucomip
cmc
mov
dec
pop
jno
je
test
add
xor
push
in
and
repnz
and
hlt
aam
movsb
pusha
sub
jbe
stos
fiadds
pop
rcr
movsb
inc
dec
fmuls
add
into
aas
inc
outsl
jae
shl
jecxz
outsb
fcomps
mov
std
or
dec
movsl
cmp
xlat
xor
sbb
push
cmp
test
mov
xor
ljmp
sahf
jg
add
fmul
or
lods
mov
hlt
xchg
pushf
pop
lret
mov
jecxz
fmull
das
stos
sbb
repnz
inc
repnz
ficoms
jg
inc
or
dec
adc
into
mov
outsb
daa
pop
cwtl
or
outsl
fucomp
sti
pop
jl
xchg
cmpsl
stos
fcoml
xchg
lahf
sbb
mov
into
push
mov
pop
mov
test
mov
dec
nop
loopne
cwtl
cmc
dec
insb
pop
icebp
stos
jne
ds
mov
xchg
push
xchg
pop
lds
outsl
pusha
sub
icebp
cmc
mov
jl
iret
push
adc
rorl
imul
lret
std
mov
ljmp
hlt
nop
inc
and
push
js
inc
cwtl
inc
sbbb
push
fcoml
fnstcw
pop
inc
xchg
test
jnp
xchg
fstl
bound
sub
sti
cmp
fstl
jns
shr
and
icebp
jecxz
xor
xchg
jb
fisttps
xor
inc
loop
xlat
test
jge
dec
sub
into
ja
in
jb
jb
adc
adc
jnp
mov
stc
fcompl
push
fistl
and
cltd
out
fcmovnb
xchg
sbb
out
leave
push
inc
lock
lds
jmp
xor
pusha
jns
dec
jo
pop
mov
jae
adc
push
mov
aam
fnsave
xchg
repz
inc
and
aas
rcrb
jle
mov
cmp
push
je
pop
jae
fdivl
jo
xchg
xor
push
scas
mov
xchg
jb
dec
scas
push
loopne
es
ret
lcall
cmp
add
and
pop
in
xchg
mull
jecxz
fwait
cmp
adc
mov
imul
cmpsb
pop
fld
mov
sbb
gs
jo
je,pt
aaa
cld
cs
aad
cld
popa
jge
out
cmpl
shll
dec
dec
repz
int
pop
js
inc
xchg
inc
leave
add
inc
ja
or
cmc
cmp
in
lock
mov
outsl
sbb
shll
xchg
push
dec
cmp
in
pop
rcr
dec
or
or
cmpsb
cmc
and
js
ror
js
lret
jle
inc
sub
mov
dec
test
pop
and
mov
ja
cmp
mov
sbb
sub
xchg
jno
inc
xor
das
jl
xchg
ss
mov
inc
addr16
cwtl
sti
cmpsb
xor
dec
movsl
cld
test
and
mov
mov
call
pop
push
jge
lret
int
pop
loope
inc
cmpsb
jmp
push
push
mov
es
stc
imul
sub
jp,pt
int3
push
call
movsb
in
gs
dec
out
sbbl
loopne
ret
jb
jecxz
and
cmp
adc
and
adc
lock
inc
loop
mov
push
sbb
outsb
push
inc
inc
mov
stos
dec
les
cmp
dec
cmpb
dec
add
aam
outsl
subl
stos
ret
insb
mov
pop
fistl
mov
mov
popa
leave
lahf
out
inc
cwtl
int3
xchg
xchg
pop
mov
jmp
or
shll
push
sti
mov
nop
mov
push
jmp
fisttpl
shlb
cmc
ret
fmul
subl
fwait
test
imul
popf
mov
jle
inc
notb
in
mov
mov
fidivs
add
cmp
mov
lcall
loopne
or
pop
mov
add
inc
sbb
iret
cli
sahf
pop
xor
pop
pop
xor
les
jmp
dec
ficoml
dec
xchg
push
pusha
ds
mov
push
movzbl
shll
fld
jle
inc
xor
fisubs
insl
and
xor
movsb
btc
and
xchg
sbb
sbb
repnz
scas
push
lods
loopne
mov
ret
cmp
and
lods
hlt
lret
repz
sbb
popf
sub
pop
xchg
aas
push
cmpb
inc
adc
arpl
test
lret
xchg
sub
push
mov
push
mov
push
and
jae
dec
pop
lahf
mov
pop
test
fdivl
sbb
test
in
add
xchg
popa
add
and
je
mov
int3
pop
adc
or
rolb
push
cmpsb
inc
jmp
xchg
jo
std
repz
fsubl
insb
int
adc
xchg
rolb
cmp
inc
sarb
pushf
xchg
mov
outsl
jmp
out
leave
insl
xor
mov
dec
ja
loope
and
pop
ds
xor
call
cltd
push
sbb
push
repnz
jle
popf
adc
in
sub
xchg
loope
subb
push
xor
js
push
pop
lea
ds
mov
clc
jns
pop
sbb
sbb
mov
pop
mov
cmc
sub
sbb
and
and
ss
cmp
cmpsl
int3
xorb
or
push
jb
sub
sahf
fiaddl
push
int
or
pop
roll
jg
pop
loop
test
mov
or
pop
outsb
daa
inc
addb
addl
mov
pop
ret
das
xchg
stos
or
std
pop
xor
mov
adc
rorl
mov
jno
xor
dec
lods
test
mov
clc
pushl
fimull
mov
fstl
pop
cmp
mov
mov
ds
add
movsb
cmpsb
dec
jge
cmp
or
and
pop
out
jo
mov
icebp
adcb
addr16
pop
repz
es
mov
loop
loopne
sbb
or
pop
inc
mov
sarb
pop
jo
push
inc
inc
xchg
hlt
cmp
cmp
mov
jns
test
xchg
mov
mov
stc
add
aas
and
jne
adc
inc
push
out
push
jb
mov
sbb
pop
in
mov
dec
imul
int
jbe
fwait
lret
mov
lcall
cmp
cwtl
dec
mov
adc
cmp
stc
clc
add
jbe
test
sbb
fwait
lcall
les
scas
ror
pop
test
or
int
ds
into
imul
ljmp
mov
aad
ds
std
roll
testl
jg
aas
dec
xchg
lea
and
and
scas
adc
sub
loop
dec
imul
pushw
arpl
push
add
shll
test
gs
nop
rol
nop
push
aad
shrb
cmpsl
mov
rcrb
stos
lock
data16
cmp
int
jb
mov
inc
aas
pop
in
cwtl
xchg
hlt
mov
sarl
pop
cltd
push
lea
loop
cwtl
mov
mov
subb
das
jbe
dec
ljmp
test
push
popa
jecxz
fldl
mov
dec
lret
or
rcrb
adc
test
es
aaa
add
test
mov
aad
and
clc
pop
mov
push
cmc
inc
add
insb
cmpsl
pop
mov
sbb
cmp
xchg
xlat
dec
mov
dec
in
scas
and
pop
or
or
int
mov
xchg
jae
jbe
mov
mov
xchg
test
inc
ds
mov
inc
cmp
popa
pop
faddl
mov
call
sub
xor
popf
repnz
repnz
lea
jecxz
lods
inc
jp
pop
shll
mov
data16
and
mov
and
mov
pop
pop
inc
stos
test
jb
jg
mov
sub
hlt
xchg
ffreep
sub
inc
fyl2x
adc
sbb
mov
or
cltd
sbb
int3
add
iret
movsl
hlt
push
xchg
outsb
mov
lahf
push
jge
movsb
sub
push
jns
dec
push
enter
push
and
xor
rol
lock
sub
jno
insb
pop
mov
xchg
cmp
imul
pop
cmp
add
jnp
push
test
and
xchg
inc
pop
cmpsl
add
add
testl
mov
lods
mov
or
mov
adc
fs
stc
mov
cmp
cmpsl
mov
jb
imul
sbb
inc
insb
sub
sub
addl
mov
mov
pop
loop
arpl
or
jl
jno
mov
movsb
fisubrs
arpl
imul
inc
sti
mov
cmp
aas
cmp
mov
shrl
iret
cwtl
add
addw
stos
mov
in
aam
popf
pop
pop
sbb
xchg
xor
in
xchg
push
movsl
icebp
xchg
roll
movsb
icebp
out
push
cmp
adc
jmp
jo
add
shlb
push
stos
pusha
push
into
mov
frstor
into
out
cmp
mov
and
fwait
repnz
push
out
scas
jbe
loop
test
xor
sbb
add
sbb
xor
sbb
not
rorb
push
inc
retw
jnp
mov
push
jmp
cmp
jecxz
out
fwait
cld
cmp
mov
push
jge
cmp
mov
andb
push
cmp
popa
xor
fwait
sub
jno
mov
out
clc
add
mov
jl
in
mov
mov
mov
mov
jecxz
xchg
mov
mov
push
int3
jnp
xor
lahf
push
in
call
sti
ja
push
xchg
dec
mov
fdivr
cmc
data16
cmp
rcrb
add
dec
dec
in
push
outsl
loop
sub
inc
jmp
jb
call
mov
aaa
stos
mov
xor
push
or
es
mov
push
inc
ret
jge
push
dec
adc
and
ds
cmp
and
sbb
popa
xchg
ds
inc
rcrl
xor
dec
inc
push
add
in
fs
cltd
cmc
jo
ljmp
pop
pop
pop
sbb
cltd
xchg
hlt
dec
adc
push
push
lahf
fwait
pop
adc
icebp
xchg
sbb
jp
add
mov
les
xor
addr16
mov
sub
fisttps
cmp
push
std
sarb
push
repnz
push
mov
dec
fisubrs
or
in
icebp
mov
add
js
add
pop
dec
mov
outsl
pusha
hlt
push
push
add
lcall
shlb
popa
in
inc
rcrb
pop
addl
inc
lock
shl
popa
rcll
mov
push
fisttpll
pop
add
shll
sbb
fldl
and
test
mov
xor
pop
arpl
adc
leave
dec
xchg
dec
xor
ftst
jo
jmp
or
repz
mov
mov
cmp
pop
xlat
and
shll
stos
lahf
sub
jns
into
ret
lods
clc
mov
cmpsw
arpl
jnp
add
ja
adc
xchg
jmp
lret
daa
ds
test
orl
inc
scas
test
cmp
sbb
mov
sbb
jp
inc
mov
cmpsb
mov
in
pop
adcl
or
and
popf
jae
shr
fwait
cmovo
loope
in
sub
test
and
mov
repnz
call
enter
jle
xchg
rol
dec
lahf
jns
popf
sbb
mov
cli
push
shrl
dec
jle
jno
xor
sub
and
and
cmp
int
jnp
insl
sbb
push
lea
mov
fcomi
mov
inc
adc
pusha
adc
test
rolb
movhps
inc
add
pop
pop
loope
adc
lea
pusha
cmp
dec
andl
movsb
addb
xchg
inc
insl
movsl
sub
movsb
mov
xchg
pop
inc
add
pop
mov
jno
adc
xchg
xchg
ret
sub
aam
jo
pop
jmp
add
xchg
cmc
push
mov
xor
adc
cmp
or
xor
push
dec
ret
mov
inc
push
std
mov
cmpsl
dec
push
mov
or
clc
pop
fwait
or
ds
mov
imul
cmpsl
pop
mov
jg
cmp
xor
xor
and
das
imul
fdivs
movsb
push
cmp
mov
jp
shl
jmp
mov
adc
test
xchg
in
adc
jge
jno,pn
je
mov
cs
jne
mov
mov
jecxz
dec
pop
mov
and
es
jp
or
jmp
or
lods
lret
cltd
std
andb
push
call
loope
loop
dec
inc
jge
lahf
inc
adc
mov
arpl
push
xor
rorb
scas
repnz
xor
push
rorb
sti
xchg
lret
inc
hlt
push
push
cmp
push
or
mov
sub
ja
pop
imul
dec
or
add
pop
lret
andl
out
decl
pop
jb
out
add
mov
fisubrs
xchg
cmp
bound
push
sbb
jo
cli
push
pop
not
int
mov
mov
ljmp
enter
stos
cmp
cmpsl
nopl
int3
mov
les
push
adc
arpl
adc
lock
pop
jbe
nop
insb
in
cmc
stos
mov
ljmp
cmp
xchg
das
or
adc
out
dec
and
xlat
inc
mov
xor
lcall
bound
fiaddl
cmpsb
loopne
mov
sbb
sarb
fidivrl
mov
adc
ss
push
cmpsl
push
int3
jl
pop
fildl
ret
ss
aas
mov
xchg
ljmp
cmpsb
out
aam
ds
lods
adc
cmp
out
sub
jl
mov
inc
out
push
lods
and
movl
cmpsb
xor
test
jge
xor
pusha
add
pop
xchg
gs
push
ljmp
lahf
rcll
push
nop
mov
std
test
in
ja
sub
push
fwait
push
mov
lret
pop
jecxz
dec
fstpl
push
mov
cmp
in
dec
pop
cmp
aam
dec
mov
pushf
nop
ja
fdivs
fsubrs
aam
out
sub
sub
adc
clc
loope
bound
lcall
xor
jnp
std
fistps
in
sbb
pop
push
push
stos
push
xor
andl
dec
push
in
mov
loop
add
ret
cli
stos
popa
stos
shlb
mov
jbe
aaa
mov
jp
test
dec
xchg
mov
jns
and
mov
mov
js
dec
jle
fucomip
sbb
insb
inc
mov
dec
and
lods
int
je
int
jg
push
enter
nop
xor
int3
mov
cli
jge
sbb
jmp
xchg
adc
push
mov
adc
inc
mov
adc
inc
push
xchg
mov
pop
cwtl
ss
popf
pusha
mov
call
ja
jne
sti
test
lahf
mov
sub
mov
shll
stc
jb
scas
fwait
push
mov
imul
jp
stc
pop
dec
jecxz
push
xor
mov
mov
push
lods
sub
push
subb
sbb
rol
adc
push
lret
test
imul
addr16
add
sbb
pop
test
js
incb
add
popa
test
insb
cltd
je
rolb
daa
mov
jo
lcall
sub
sub
mov
aad
push
sub
mov
lcall
cmp
aas
sarb
cmovp
rorb
mov
mov
repnz
xorl
fidivs
sti
jno
or
pusha
hlt
cli
jns
adc
pop
test
pop
lock
push
or
mov
xchg
jbe
sbb
daa
sahf
mov
adc
fists
sbb
xor
sub
out
and
stos
inc
cmp
mov
adcl
or
xchg
out
repz
aas
push
mov
aas
lock
imul
shrb
sti
add
cltd
xchg
shlb
mov
xchg
pop
iret
aad
adc
dec
add
or
shlb
ljmp
inc
inc
dec
cltd
xchg
mov
imul
cltd
rcrb
ljmp
aad
xchg
sahf
sti
xor
loope
rcll
call
push
mov
jo
cmp
cld
hlt
xchg
push
sbb
hlt
sub
adc
dec
cmp
pop
inc
in
daa
mul
stos
cmp
hlt
gs
sbb
dec
lock
pop
mov
pop
cmpsl
adc
cmpsl
into
loopne
arpl
dec
jo
mov
pop
iret
loope
mov
add
mov
loope
push
and
cmp
xchg
ret
int
or
push
fcompl
add
cld
jo
or
mov
xor
out
mov
adc
call
sub
movsl
adc
movsb
mov
adc
xor
inc
je
fcmovb
inc
nop
sub
or
push
xchg
pop
push
jecxz
jmp
roll
jae
adc
mov
int
dec
sbb
out
jnp
in
xor
jne
cmpsb
mov
inc
je
or
jb
mov
pop
sbb
popa
adc
movsl
adc
push
sub
mov
push
fisubrs
jns
int3
xchg
pop
mov
and
add
outsb
push
test
bound
cld
sub
std
sbb
setp
pop
test
divl
scas
lea
dec
or
and
int
in
test
pusha
mov
cmpsb
or
mov
pop
clc
aaa
or
in
in
add
jecxz
jle
iret
imul
or
sti
cmp
push
pop
xchg
add
stos
in
push
iret
mov
cmp
adc
int3
push
push
lcall
popa
sbb
in
jno
dec
pop
push
shlb
ljmp
imul
shrb
cmp
faddp
push
adc
mov
xchg
sbb
xor
aam
scas
lods
add
and
xchg
mov
add
out
mov
mov
mov
adc
xlat
jge
fsubrp
mov
and
jns
push
jl
pop
test
faddp
lret
sub
inc
aad
mov
dec
xchg
mov
data16
into
ret
lods
lret
xchg
out
mov
cmpsl
mov
std
movntps
test
add
cmp
test
push
pop
xchg
add
enter
sub
adc
aas
loopne
fstl
shl
push
mov
xor
mov
xchg
jmp
shrb
dec
pop
dec
loope
and
cmp
push
pop
ja
add
ret
imul
mov
mov
adc
sbb
jg
fsubr
adc
jns
sub
clc
imul
js
shl
push
xchg
orb
enter
ret
lds
dec
iret
dec
mov
sbb
je
iret
insb
aaa
jo
pop
sub
ja
adc
mov
mov
mov
mov
pop
cmp
cmpl
xchg
jo
and
lret
aas
add
sbb
mov
and
inc
inc
rolb
push
cwtl
mov
adc
push
negl
ret
jno
imul
or
fs
into
fbld
dec
dec
pop
insb
in
mov
sbb
addl
bound
cmpsb
insb
mov
mov
sbbl
push
jbe
xchg
aam
iret
sbb
test
in
push
mov
xor
add
int
sub
cmp
inc
pushf
sbb
call
jne
rorb
inc
xor
mov
cmp
in
add
mov
ljmp
xchg
daa
call
pop
dec
sbb
mov
pop
xor
ljmp
xchg
subl
repz
es
dec
popa
fnsave
les
cld
mov
inc
inc
call
push
fidivl
sti
scas
sub
mov
and
inc
mov
idiv
pop
test
adc
sub
sbb
xor
pusha
sub
das
push
int3
mov
out
add
test
push
and
push
outsb
jmp
mov
lret
js
imul
xor
adc
mov
jge
sbb
inc
pop
mov
cmp
mov
xchg
and
imul
into
and
xor
sbb
mov
bound
negl
rclb
add
or
cmp
gs
inc
and
jmp
aaa
cmpsl
sub
xor
mov
scas
out
xor
test
mov
mov
push
pop
push
fbld
xchg
data16
jecxz
mov
mov
dec
int3
cmpsb
mov
enter
push
mov
movsl
cmc
ds
lea
and
ret
push
mov
mov
xchg
sub
fimull
icebp
loopne
or
icebp
insl
out
aaa
xchg
cwtl
mov
xchg
std
dec
mov
hlt
jnp
ret
ret
inc
test
xchg
sbb
or
test
sub
xor
das
dec
or
dec
nop
mov
xchg
shlb
sbb
ss
and
push
add
pop
popa
call
call
dec
mov
pop
mov
loop
stos
test
loop
xor
mov
dec
mov
mov
cs
fists
idivl
xorw
add
incb
stos
rcll
orl
outsb
aad
xchg
mov
adc
sbb
fimull
stc
and
xchg
inc
clts
push
xchg
sbb
sbb
add
sbbl
lods
ret
jmp
inc
cmpsb
ficoms
and
les
jecxz
xchg
inc
pop
jo
mov
lock
xchg
inc
mov
sub
or
data16
and
stos
cmp
pushl
repnz
xchg
daa
xor
and
mov
adc
mov
das
dec
push
pop
mov
xor
out
fdivl
cmc
lret
rcll
pop
mul
in
jle
pop
xchg
rcrl
icebp
lock
arpl
mov
pop
imul
sub
fstpt
scas
mov
movzbl
dec
and
sub
sbb
fsubs
add
mov
inc
leave
adc
adc
dec
mov
sbb
sub
inc
test
jge
adcl
xor
mov
pushf
inc
iret
movsb
in
cmc
dec
aam
push
pop
je
movsb
repz
call
add
add
fsubrp
and
cmpl
sahf
push
leave
sarb
into
mov
ret
adc
fisubs
rcll
xchg
add
pop
je
pop
scas
or
xchg
push
jno
ja
and
lret
push
push
lds
ljmp
add
sbb
mov
mov
add
mov
jl
xchg
dec
xchg
lcall
jmp
insb
jnp
movsb
sub
cli
push
mov
add
mov
push
xchg
lcall
pop
xchg
jo
pop
add
jo
mov
inc
sub
pop
int
pop
movsb
bound
out
push
mov
push
xor
popa
in
cmp
push
push
sub
mov
ss
aam
sub
lcall
pop
pop
push
jg
ret
inc
das
sbb
shrl
imul
movsl
inc
xor
push
cmp
add
jg
push
fwait
sbb
testb
cmp
xlat
jne
lahf
into
cmp
in
out
std
lock
adc
je
js
inc
xor
mov
adc
nop
jne
and
sub
stos
into
jne
insl
add
dec
jle
inc
test
sahf
lods
lods
mov
and
lock
movsl
mov
adc
cmp
push
aad
jae
jo
mov
or
cmp
in
pop
mov
das
adc
insl
mov
pop
adc
mov
mov
out
inc
push
lahf
xor
mov
xchg
sahf
xor
data16
loopne
dec
out
adc
jle
pop
imul
pop
sahf
pop
aam
rolb
pop
xchg
cmp
lcall
enter
loope
mov
xorl
jns
or
test
jp
cltd
movb
out
xchg
xor
andb
shrb
xchg
scas
jns
fcomps
dec
outsb
leave
dec
das
cmp
and
pop
icebp
adc
cs
sahf
inc
cmp
dec
pop
push
xor
mov
lcall
in
repz
jg
xchg
mov
pop
push
dec
imul
mull
mov
jnp
sub
push
mov
mov
shrl
mov
sub
xchg
mov
dec
jae
mov
xor
push
pop
arpl
push
ret
lcall
mov
pop
in
push
sahf
xchg
or
shlb
push
add
mov
gs
push
sbb
mov
insb
cli
push
xchg
mov
or
imul
stos
inc
jle
pop
sub
push
xor
test
sahf
pushl
fcom
cmp
lods
stos
jb
out
ja
and
jae
pushf
clc
xchg
test
pop
subl
daa
lahf
xor
sbb
xchg
jno
dec
mov
pop
jnp
jnp
inc
mov
int
aaa
aas
mov
xor
jne
jno
inc
das
gs
into
imul
or
inc
adc
lcall
mov
stos
cli
sub
sbb
jge
xchg
jmp
adc
jne
je
inc
negl
imul
xchg
das
add
outsl
fs
cmp
add
sub
aas
add
in
std
out
out
or
out
arpl
push
mov
nop
mov
inc
dec
rcrl
or
and
bound
xor
mov
mov
shll
dec
xchg
loop
pop
inc
mov
pop
jbe
fwait
dec
je
dec
in
mov
stos
mov
pusha
push
pop
lods
or
push
popl
pop
scas
stos
push
in
test
jns
jp
sbb
fistps
xchg
mov
mov
enter
xor
adc
xchg
xlat
add
fcoml
fcoml
shll
dec
adc
daa
xlat
inc
push
jl
cmc
aas
pop
and
pushf
pop
mov
fnstcw
push
leave
jbe
xchg
js
pop
add
shl
adc
cmp
iret
lahf
or
lods
sbb
mov
fiaddl
aam
inc
sbb
in
dec
loopne
dec
icebp
fcmove
sub
stc
loope
daa
out
sbb
cmc
sbb
jg
or
daa
sub
jg
ss
xchg
fwait
jne
jns
sub
in
and
testl
das
jg
jbe
sub
push
mov
pop
leave
aas
lods
jb
pusha
cmp
xchg
je,pt
ror
add
js
mov
dec
loopne
add
mov
arpl
mulb
or
xor
inc
dec
dec
and
test
add
push
push
push
jge
insb
jnp
adc
add
inc
push
and
das
sbb
dec
fdivl
push
push
mov
shlb
pop
push
aam
xlat
xchg
aas
int3
cwtl
clc
stos
stos
jne
jns
cmp
lds
test
jno
cltd
mov
iret
inc
and
scas
xor
xlat
rcll
add
out
cmpsb
add
out
jg
push
int3
stos
fildl
cmp
out
or
xchg
mov
dec
lods
dec
inc
xor
sub
pop
xchg
mov
jns
xchg
push
cmpsl
mov
adc
popa
jno
cmp
mov
pusha
push
or
aad
push
push
inc
xorl
imulb
sbb
dec
mov
pop
add
push
mov
mov
cli
inc
mov
mov
mov
pop
pop
nop
add
ja
push
popa
mov
fmul
pop
cmp
inc
pop
sub
mov
out
enter
sub
bound
mov
xorl
push
cmp
andl
push
push
push
mov
es
scas
or
and
or
sub
ficoms
sbb
lock
cmc
bound
leave
adc
mov
mov
in
push
jae
dec
cltd
inc
mov
inc
cmpl
mov
fbld
out
pop
and
adc
push
cli
push
repnz
shll
jmp
mov
xor
inc
cmp
js
xor
add
out
sbb
gs
push
repnz
lret
daa
jns
cmc
push
dec
in
pop
pop
ret
jmp
cmp
or
leave
out
mov
jecxz
gs
jl
loopne
out
dec
cmc
sar
mov
pop
mov
outsl
jl
test
cli
cmpsl
jmp
jl
fldl
rorl
or
out
les
xchg
out
jecxz
and
jmp
sahf
xor
call
dec
aaa
pop
lret
out
or
mov
push
inc
xchg
lods
lods
icebp
add
xchg
xchg
cmp
mov
xor
push
push
cmpsb
jge
int3
pusha
ret
mov
mov
test
pusha
les
repnz
cmpsl
test
push
jmp
mov
int3
mov
jp
icebp
in
aam
mov
aas
mov
sbb
scas
in
mov
mov
xchg
mov
cwtl
sbb
cmp
cmpsb
mov
push
mov
popf
dec
fmul
cmp
movsb
loope
mov
xor
xchg
jle
sub
push
pop
les
cltd
pop
outsb
xor
shll
cli
dec
into
cmc
sbb
sub
dec
add
clc
dec
hlt
shr
dec
pop
xchg
loopne
push
hlt
in
rcr
fimuls
jecxz
add
cwtl
push
les
xchg
sub
adc
lcall
rorb
in
das
stos
jge
jp
icebp
xor
int
sahf
mov
add
cmp
mov
and
mov
inc
addl
rcrl
into
jae
xor
jge
insl
jo
stos
in
xchg
loop
pop
and
fisttpl
data16
scas
dec
lcall
cmp
fcompl
popa
cmpsb
sub
out
push
push
push
and
cmp
cs
lods
ds
mov
mov
popf
mov
dec
jne
or
adc
sbb
push
pop
add
mov
iret
lret
insb
push
xlat
mov
push
subl
and
pop
jmp
push
scas
jg
jno
int3
jnp
andb
ds
dec
lock
cltd
scas
movsb
pop
jnp
mov
cltd
mov
xchg
sarb
sbb
sbb
pop
bound
imul
ljmp
push
inc
mov
mov
mov
out
cmp
mov
int3
mov
jle
stos
cltd
shrb
test
pop
xchg
add
mov
cld
xchg
push
xchg
aas
jmp
movsb
mov
aad
test
dec
outsl
fwait
adc
jns
push
jne
or
cwtl
or
sbb
sbb
add
es
adc
ds
inc
in
cmc
push
and
mulps
aaa
mov
push
out
xchg
iret
and
dec
cltd
pop
mov
mov
jne
popa
sub
sbb
fildl
add
loope
jo
mov
cmp
popf
sub
icebp
inc
cmp
push
insb
fcoml
pushl
movsl
dec
test
cld
cmpsl
jne
cs
pop
mov
push
inc
jge
mov
int
cmpsb
push
xor
lahf
push
aas
push
loop
scas
cmpsl
fildll
push
sub
and
cmp
cmp
lahf
dec
xor
sub
push
decb
shll
mov
in
inc
cmp
into
sbb
or
add
mov
or
cmpsl
jle
mov
repnz
inc
fnstsw
add
fisttpll
sbb
xor
xlat
or
enter
sub
adc
adc
gs
sbb
lods
jmp
cmp
out
int
and
rolb
push
fidivrl
fwait
into
std
sub
scas
pop
ret
and
clc
pop
and
and
pushf
push
sahf
sub
int3
push
inc
inc
xchg
sub
outsl
mov
push
fildll
out
dec
mov
enter
adcb
std
jnp
mov
and
adc
jno
xchg
mov
or
mov
mov
mov
icebp
cltd
lahf
mov
mov
and
xchg
mov
xlat
rclb
jg
sarb
pop
xchg
push
cli
adc
xchg
dec
pop
cwtl
mov
xchg
and
lods
call
outsl
mov
insb
jmp
outsb
ljmp
inc
mov
outsl
push
xchg
inc
es
xchg
ljmp
nop
push
cmp
addl
sub
outsl
ja
jge
sti
dec
dec
pop
sti
dec
lret
lahf
and
orb
ss
jp
test
int3
lret
xchg
lret
lret
mov
sti
adc
sahf
es
out
cs
loope
jp
daa
aam
sbb
adc
mov
leave
and
mov
lods
mov
fisttps
jne
scas
sub
jno
mov
rorb
pop
in
add
sahf
xchg
gs
dec
pushf
andl
mov
out
cmp
loopne
adc
out
sub
leave
push
mov
push
fldenv
xor
daa
pop
mov
stos
and
iret
cwtl
or
wrmsr
das
movsl
xorb
adc
and
test
xchg
cmp
or
movsb
cs
pushf
push
pop
add
dec
roll
fstpt
fwait
sub
mov
and
outsb
shlb
movsl
in
cmp
and
jbe
dec
out
js
push
jp
inc
jp
pop
adc
mov
les
leave
cmp
sub
jle
iret
adc
sub
imulb
test
or
sbb
cmpsl
inc
subl
insl
push
repz
xor
pop
push
seta
and
lea
sbb
push
dec
jo
not
imul
mov
dec
xor
js
lahf
pop
mov
pop
bound
out
int
push
fsubrs
dec
addl
arpl
jb
or
mov
push
cmovbe
push
xlat
loopne
fcompl
aam
push
mov
jne
arpl
push
out
xor
fidivrl
xchg
pop
ficompl
scas
leave
dec
subl
mov
pop
mov
mov
mov
inc
inc
cmp
imul
sub
xchg
movsb
iret
pop
lret
sbb
cltd
jbe
loop
push
xlat
or
mov
xchg
jbe
ja
mov
pushf
hlt
fdivl
call
push
xchg
rcrb
jno
insl
jl
shl
or
jae
xchg
cmp
mov
aaa
mov
out
lcall
jne
dec
lcall
testl
xor
seta
das
and
xchg
sar
xor
xchg
mov
mov
or
cld
jecxz
xchg
inc
xlat
push
pop
mov
and
push
jbe
fldcw
rorl
mov
sub
jle
test
loop
xchg
cwtl
xchg
test
jmp
out
add
insb
paddusw
in
lret
insl
daa
call
pop
in
lods
stos
mov
cmpsl
xchg
les
movsb
sbb
shll
pop
dec
jg
and
loope
jb
ret
push
testl
lcall
ljmp
xchg
mov
or
cld
jl
mov
in
mov
dec
pusha
ficomps
sub
and
daa
pop
mov
lock
or
mov
push
adc
xchg
mov
imul
movsb
xchg
jb
ficoms
jne
lret
xchg
cmp
cmpsl
adc
add
pop
pushf
out
fwait
dec
loope
push
repnz
popf
leave
stc
jno
pusha
mov
leave
mov
xchg
lret
decl
and
gs
popl
and
mov
shlb
xchg
mov
sti
dec
jns
int
pop
cmp
hlt
mov
pop
mov
insl
sbb
negb
inc
mov
lods
daa
mov
stos
sarb
or
cs
icebp
int3
push
out
shl
push
lret
xchg
or
and
adc
les
sub
cmpb
adc
loope
inc
cli
lret
mov
in
stc
cld
aas
aad
cld
cwtl
scas
cmpsl
dec
lahf
mov
rclb
jmp
sub
mov
sub
sbb
pusha
and
leave
sbb
xor
push
jno
stc
jns
orl
push
in
add
int
push
jmp
inc
dec
mov
sahf
add
repnz
push
jecxz
out
pop
aad
shrl
jne
jecxz
adc
dec
mov
sub
push
push
gs
mov
add
outsb
dec
stc
stc
insl
add
lcall
scas
ljmp
and
fs
jne
pop
outsb
sahf
and
sahf
roll
dec
add
jge
xor
pop
lahf
hlt
sub
lods
or
mov
ficomps
mov
das
inc
sub
idivb
push
movsb
mov
lea
mov
mov
jne
xor
testl
jbe
xchg
push
nop
push
sbb
lds
jbe
xchg
gs
pop
xchg
sbb
fld
lock
or
mov
arpl
cs
mov
in
pop
sbb
aad
mov
pushf
iret
sarb
or
mov
shrl
outsb
dec
outsb
dec
xlat
add
push
sbb
xchg
or
sbb
in
inc
test
inc
lahf
out
repz
jp
imul
mov
rcll
clc
std
add
test
inc
pop
push
jo
sub
sub
inc
pop
lds
pushf
mov
in
shr
mov
cld
dec
sub
repnz
lds
outsb
jae
and
enter
pop
add
les
jo
mov
jp
dec
iret
das
inc
div
xor
lds
pop
inc
inc
ret
hlt
fmull
mov
in
shrb
mov
cmpsb
outsb
into
mov
mov
jp
inc
xchg
pop
and
es
loop,pn
and
sub
and
das
jp
cmp
sbb
ja
mov
movsl
jecxz
fistl
ds
or
fsubl
jae
rcrb
sarl
clc
xlat
xor
sahf
movsb
lods
push
inc
out
movsl
jmp
popf
jns
jecxz
stos
dec
jno
test
inc
or
imul
cmp
aam
and
outsl
ficomps
adc
call
into
mov
cld
hlt
js
xchg
das
mov
jl
orb
lods
insb
jnp
cmp
test
insb
fs
rcll
inc
das
out
std
or
inc
sub
js
lahf
scas
fwait
sarb
enter
outsl
mov
pop
xor
sub
xor
pop
xor
mov
lods
fsubrs
movl
pop
mov
in
push
pop
rcrb
cwtl
std
scas
sub
das
cld
and
pop
inc
loope
push
in
ret
xor
mov
repz
rcrb
sub
iret
sub
pop
mov
mov
pop
mov
jl
out
scas
inc
loopne
leave
insb
or
mov
add
jnp
xor
les
in
xchg
stos
adc
jnp
fmul
pushf
adc
xor
inc
adcb
rcrb
jae
lret
loope
mov
iret
ffree
sub
imul
inc
lods
iret
jmp
add
push
sbb
dec
jp
dec
pop
sbb
shll
enter
or
xor
mov
inc
or
cmp
in
call
aam
aad
sbb
outsl
sbb
or
inc
push
call
stos
jp
loopne
mov
push
mov
mov
jne
push
mov
mov
cmp
push
fdiv
lret
inc
mov
imul
mov
dec
pop
insb
mov
or
jle
test
jo
repz
enter
push
push
cmp
mov
int3
mov
test
lea
outsb
push
data16
cmc
inc
jmp
cli
xchg
gs
dec
xlat
inc
dec
pop
cmp
and
pop
out
jle
sti
mulb
mov
les
mov
sub
or
sbb
sub
mov
es
ljmp
lds
mov
mov
inc
inc
push
mov
mov
lahf
cli
mov
mov
aas
ja
sub
fimuls
rorl
jne
sub
cmp
out
xchg
pop
dec
mov
lcall
jmp
fsqrt
pop
test
pushf
add
inc
aas
adc
cltd
faddl
dec
sub
push
push
jle
lret
mov
mov
mov
cmp
ficompl
lea
repz
outsb
popf
in
push
xor
fstpl
adc
js
arpl
xchg
stc
push
mov
ja
int3
dec
dec
fisttps
push
dec
mov
scas
arpl
xchg
sub
xchg
sbb
inc
pushf
pop
mov
mov
loop
sub
dec
movsl
add
cs
data16
lret
or
adc
sub
sub
jbe
dec
popa
lds
cs
mov
test
adc
sub
pop
addr16
push
faddp
push
mov
es
movsb
sbb
daa
scas
or
std
mov
adc
pop
xor
imul
sbb
push
std
sbb
and
aam
cmp
fdivrl
mov
inc
cmp
cmp
fisubs
or
ja
dec
xchg
into
fsubr
dec
or
stc
scas
in
mov
in
dec
rorb
xchg
aas
xchg
pop
mov
adc
jmp
push
enter
aad
shr
xchg
cmp
aaa
les
leave
adc
pop
pop
into
jge
pop
repz
bound
mov
out
xadd
rorb
in
xor
or
sbb
jle
mov
push
subl
and
pop
fdivl
adc
nop
push
jl
fisttps
push
sbb
dec
cmpsl
movsl
enter
push
and
push
pop
inc
cli
push
test
test
lret
pop
push
inc
lret
dec
adc
or
lds
add
add
leave
imul
pop
xor
jl
pop
add
fisubl
xchg
mov
fcmovu
mov
aam
cli
dec
inc
in
iret
add
mov
push
nop
dec
sub
xor
or
outsb
mov
cltd
aam
xor
bound
or
sbb
sbb
jno
in
dec
pop
or
or
jecxz
jo
arpl
addb
xchg
out
adc
push
xor
inc
jns
mov
lods
pop
mov
test
push
clc
and
ret
das
adc
xor
sbb
adc
mov
cmp
pop
mov
cmpsl
adcb
inc
imul
and
es
jp
pop
sbb
mov
xchg
adc
mov
mov
mov
dec
cmp
icebp
cmp
cmc
add
out
mov
stos
xlat
sub
inc
dec
pop
repz
shl
iret
sub
sub
mov
mov
adc
xor
pop
gs
jle
gs
in
mov
aas
fnstcw
mov
add
es
mov
in
cmp
xor
aam
cmp
adc
push
cmc
dec
cmp
xor
cmp
iret
lea
jne
fstps
leave
adcl
loope
jne
lcall
mov
cmp
cmpsb
push
push
call
jmp
sub
out
ret
jp
int
adcl
rolb
popf
adc
in
sub
push
aam
cmc
inc
jns
out
pop
cld
dec
mov
push
fs
jae
pop
addr16
add
in
xlat
int3
add
std
and
and
dec
mov
out
test
aas
hlt
lcall
cmp
jns
push
and
and
inc
arpl
pop
inc
jnp
dec
mov
test
push
loope
xchg
lahf
and
sahf
mov
and
gs
leave
pop
div
pop
inc
or
movsl
fildl
mov
dec
mov
jp
jle
fildl
mov
adc
or
fs
mov
jo
dec
roll
jae
jg
adc
dec
inc
mov
lds
pop
out
ljmp
pop
cli
inc
add
repnz
adc
cmpsl
fimuls
outsb
mov
shl
pop
push
xchg
mov
popa
mov
or
mov
ds
jg
ret
fsubrl
icebp
enter
test
movb
cmp
das
in
inc
mov
adc
jge
mov
adc
sarl
and
mov
andb
push
adc
inc
pop
fsubrp
push
fisubrs
sbb
mov
ss
lods
dec
sub
out
xor
inc
cmp
addr16
test
es
cmp
xchg
push
push
xchg
adc
mov
mov
mov
jbe
test
loop
sti
lea
outsb
jp
lods
lods
push
mov
cld
out
mov
xor
pop
jg
xlat
xchg
inc
xchg
dec
jl
int
adcb
out
repz
daa
scas
inc
fincstp
sbb
aaa
add
daa
cltd
mov
cltd
fs
pop
dec
cmp
test
sub
xchg
mov
cs
push
cmp
int
push
sbb
int
mov
fdivrl
notl
mov
xchg
cmp
push
mov
inc
xor
jmp
cmp
jmp
pop
loop
test
and
je
dec
add
mov
or
push
insl
test
and
negb
adc
xchg
push
xchg
mov
add
mov
xor
fdivrl
fsts
loop
test
pusha
ret
jbe
insb
and
mov
jge
or
or
cmp
push
mov
js
add
mov
stos
outsl
insb
pop
icebp
adc
xchg
sarb
rcrl
mov
xchg
mov
icebp
in
mov
mov
pushf
adc
repz
mov
jo
add
lret
hlt
sub
fwait
xlat
in
dec
fdivl
movsl
and
out
mov
pop
xchg
es
test
inc
add
dec
test
test
test
call
push
test
push
leave
sub
pop
dec
pop
or
cmpsb
aam
sbb
pop
jno
enter
shrb
mov
sbb
les
in
xor
arpl
jg
xor
xchg
stc
and
push
adc
jns
orb
ja
dec
movsl
pop
xorb
xchg
faddl
sub
mov
in
stos
mov
lods
in
push
aam
enter
inc
cmp
shlb
xchg
ss
mov
mov
push
jg
mov
cli
mov
mov
xor
int3
or
stos
enter
js
mov
fdivs
insl
pop
mov
xchg
scas
shll
mov
jge
sti
in
outsb
arpl
dec
pop
fwait
jg
aad
decl
cmp
nop
in
push
pop
mov
fidivrs
mov
ljmp
xchg
ret
cmp
mov
cmpsb
xchg
adc
xor
das
cmp
fdivr
push
fstpl
xor
fildl
push
jns
ret
pop
andb
imul
lds
outsl
inc
xchg
cmp
pop
into
push
outsb
xor
gs
push
jnp
in
loope
sub
ret
or
or
jae
clc
cs
cmpb
test
in
ud1
movsl
stos
inc
adc
sub
adc
subb
adc
arpl
mov
mov
cltd
pop
ret
in
nop
lock
gs
addl
pop
arpl
js
inc
mov
es
mov
je
fs
aad
rclb
dec
mov
icebp
int
mov
sbb
pop
inc
xchg
pop
cmp
inc
bswap
adc
mov
inc
into
adc
jp
or
or
mov
pop
enter
push
xchg
push
adc
enter
add
pop
shl
sahf
push
add
sbb
popf
add
inc
and
inc
add
stos
call
jb
scas
rclb
in
stos
mov
mov
cmc
hlt
adc
push
lods
fbld
js
icebp
sub
adc
add
shll
mov
into
push
lods
xchg
stc
nop
icebp
popl
pop
jo
cwtl
jl
leave
in
sub
or
popf
outsb
dec
mov
out
adc
dec
ret
sbb
add
mov
addr16
test
pop
and
jns
jo
pushf
rolb
imul
int
xchg
mov
mov
ja
add
pusha
xchg
decl
in
xchg
rcll
outsb
pop
ja
or
popf
ret
add
cmp
push
sbb
test
adc
ljmp
jnp
insb
jle
sub
lds
inc
dec
sub
fnstsw
sub
out
cmp
inc
test
lret
ficoml
xor
fwait
imul
dec
fcoml
inc
bound
xchg
xchg
test
adc
sbb
pop
inc
movq
xchg
inc
fmuls
movsb
iret
mov
shrb
pop
and
or
enter
lea
test
cmp
or
sahf
mov
das
jmp
or
insl
mov
aas
sbb
sub
push
popa
inc
fdivrs
pop
ret
sbb
xchg
sbb
mov
or
or
lock
mov
lds
gs
dec
and
push
ret
xor
inc
cltd
push
lcall
cmpsb
aad
les
gs
gs
or
pop
cmp
loope
dec
xor
in
sbb
adc
dec
push
out
fidivs
add
orb
or
enter
int
mov
rolb
es
sbb
push
popa
cmp
insb
sbb
xor
or
xchg
cmp
lahf
seto
xchg
cmp
dec
xchg
test
testb
scas
in
xchg
adc
sub
xchg
xor
mov
dec
or
push
push
push
stc
mull
leave
in
lret
push
jmp
ja
mov
push
xchg
cltd
shrb
mul
xchg
movsl
jo
int3
inc
in
ret
mov
xchg
lahf
je
or
data16
rcl
nopl
roll
outsb
pop
or
jbe
adc
push
aam
adc
jge
loope
add
into
mov
pop
dec
daa
push
pusha
adcl
jno
cmpsl
ficoml
aad
fimull
rorb
scas
sub
rclb
mov
jnp
push
imul
pop
push
push
cmpsl
push
mov
jl
scas
rolb
cmpsb
loope
pop
je
pop
push
out
sub
out
popf
into
lock
loope
bound
cs
push
movsb
pop
jbe
or
mov
ja
pop
jo
sub
push
imul
into
decl
push
aaa
xchg
pop
lods
xchg
mov
mov
imul
sub
and
or
out
push
adc
and
inc
add
pop
dec
push
decl
xor
movsb
push
popf
pop
mov
fnsave
out
test
aaa
add
mov
mov
movsl
push
add
mov
in
mov
adc
test
push
mov
sbb
idivl
repnz
mov
negb
lods
filds
jnp
dec
aad
aad
hlt
ja
repnz
cmp
dec
jo
and
push
add
mov
push
add
jp
mov
jne
adc
out
jmp
mov
and
icebp
jno
mov
pop
xchg
inc
sbb
fldt
cmpsb
sub
mov
cmpsb
ljmp
or
daa
jnp
dec
bound
or
and
jecxz
cmp
lret
cltd
jno
add
les
push
xchg
pop
push
mov
push
in
xor
test
movsb
pslld
insb
aas
sub
faddl
int3
xchg
or
pop
xchg
jne
cmpsb
popa
mov
jnp
mov
cli
ret
dec
xchg
ds
pop
cwtl
or
inc
iret
out
add
push
sbb
sbb
mov
mov
cmc
std
cmpsl
adc
cmpsb
mov
mov
leave
popf
inc
int3
movsl
sub
cmp
in
addr16
fs
xchg
lods
call
mov
cmp
xlat
cmpl
mov
sti
out
inc
shl
mov
call
adcl
inc
lods
pop
dec
xor
in
cmp
test
mov
jge
push
fs
cmpsl
lahf
rolb
jge
sahf
mov
divl
sub
imul
jecxz
inc
pop
mov
or
icebp
mov
in
lcall
mov
push
sub
jne
xor
mov
and
xchg
xchg
test
jnp
jae
in
push
outsb
aas
push
fisttps
in
dec
iret
lret
dec
lods
sarb
mov
pop
adcl
lock
sub
ja
xchg
mov
dec
fidivrl
shrb
cmp
popa
decb
ljmp
inc
aam
lea
sub
icebp
dec
and
adcl
mov
ja
or
cmc
fsubl
inc
arpl
clc
dec
daa
cmp
add
out
ja
aaa
rorb
sbb
imul
lock
add
lret
fwait
cmpsl
cmpsl
and
add
popf
dec
sub
pop
inc
test
test
dec
test
xchg
outsl
inc
test
ljmp
mov
lea
sti
ret
cmp
xor
dec
and
pop
lcall
jae
cmpsl
pop
jl
lock
cwtl
jge
jle
shll
lret
mov
scas
loopne
movsl
inc
jge
jae
jbe
inc
stc
xor
je
push
mov
dec
cmp
mov
imul
pop
push
dec
ficoml
jno
ljmp
ljmp
ss
mov
loope
aam
dec
or
in
nop
inc
ror
mov
adc
mov
adc
cmp
cmpsb
fs
daa
int
inc
adcl
xlat
mov
int3
cld
dec
daa
leave
pop
xor
cmp
jo
push
adc
cmp
lock
fdiv
js
xchg
sub
push
xor
or
popa
and
push
shrl
xchg
mov
les
pushf
dec
add
add
jae
sub
dec
and
mov
adc
outsl
loopne
sub
fchs
adc
dec
push
lock
mov
clc
fstps
mov
or
or
mov
jmp
cmp
iret
pop
sbb
mov
xchg
or
les
push
push
scas
jb
hlt
cmp
adc
dec
mov
sbb
adc
lret
shll
mov
out
sbb
inc
xlat
and
sbb
jbe
jmp
stos
mov
dec
xchg
ret
and
adc
push
lock
xor
push
jmp
jae
jb,pn
or
xchg
sahf
andl
and
sub
sub
gs
ds
jle
push
push
adc
cmp
ds
add
and
xchg
scas
ret
aam
add
cmp
adc
cmp
leave
out
popw
outsb
ljmp
clc
out
sbb
sub
inc
mov
rcrb
add
mov
lcall
mov
mov
cmp
add
xchg
aas
sbb
sbb
or
sbb
push
rcrb
test
sub
adc
add
mov
xchg
bound
in
adc
pop
dec
adc
iret
dec
mov
mov
xchg
mov
enter
mov
mov
xorb
mov
sti
pop
push
jge
inc
sbb
inc
cmp
sbb
shlb
cld
dec
stos
sub
test
push
ljmp
lea
jecxz
dec
pop
push
loope
fmull
xchg
fwait
arpl
int
push
jae
push
jbe
daa
mov
xchg
call
mov
push
jp
cmp
jmp
mov
cmp
mov
and
mov
arpl
push
idivb
push
rol
out
push
icebp
imul
leave
adc
clc
jns
or
pop
inc
arpl
adc
les
mov
cs
mov
enter
xor
stos
jo
pushf
popa
dec
jmp
xchg
adc
mov
mov
fs
out
fwait
xor
jae
shr
pop
enter
sahf
mov
test
cmpsl
xlat
test
mov
sahf
repnz
sbb
jp
shl
xchg
ret
xchg
mov
imul
ret
sub
outsl
sti
xchg
cmpl
aaa
push
xchg
add
fwait
push
clc
jle
aas
and
adc
pop
cwtl
jno
adcl
call
or
stos
dec
negl
sti
mov
pop
cmpsb
mov
pushf
sbbb
xchg
addr16
je
mov
int3
dec
cmc
mov
pop
cmp
push
popf
aad
in
outsl
daa
std
out
push
clc
cmp
lret
sahf
in
orl
pop
fsub
jp
std
aas
dec
mov
xor
pop
sbb
mov
push
jnp
in
xchg
push
aam
cmp
shl
add
xorb
pusha
fisubs
mov
hlt
push
xchg
add
jae
sbb
in
loopne
out
push
mov
adc
xchg
push
bound
dec
mov
sub
lds
arpl
movsb
sub
push
jae
pop
test
jmp
bswap
cmp
mov
cld
popa
subb
or
shrb
pusha
add
scas
cmp
ret
dec
ds
orb
cwtl
mov
adcl
add
sub
cli
dec
aam
movsb
ret
arpl
lret
rcll
mov
in
adc
cs
add
repnz
movsl
imul
adc
xlat
insb
sub
mov
fnstcw
lods
out
jns
sbb
pushf
fnstcw
test
xchg
sub
mov
cs
lock
jecxz
adc
jecxz
inc
xchg
test
sub
jle,pt
ss
sti
mov
sbb
push
sbb
mov
jg
js
iret
mov
enter
cld
fdivl
inc
fwait
push
leave
es
xchg
or
xchg
insl
pop
or
lds
andl
faddl
out
aas
sbb
push
enter
dec
clc
popa
mov
popa
fs
mov
adc
jne
cmp
fwait
or
mov
sbb
loop
push
int
lds
push
les
shrb
inc
push
inc
cmp
fdivrl
test
mov
aaa
cld
dec
fstl
fwait
xchg
outsb
das
adc
lret
push
fwait
sub
push
mov
mov
jo
adc
jns
roll
xchg
jp
xchg
fisubrs
fcom
aam
push
push
fdivl
mov
mov
jecxz
fs
mov
adc
lret
mov
sbb
mov
adc
or
pusha
pop
push
rolb
dec
fdivrp
sub
adc
and
shll
add
insl
sub
adc
outsl
mov
or
pop
cmpsl
jne
insl
js
aas
sti
sub
xchg
xor
in
push
xchg
movsb
sbb
lods
mov
fs
push
in
dec
ret
leave
mov
lret
int
or
mov
pushf
leave
ret
dec
adc
sbb
pusha
jo
aas
out
movsl
int3
mov
lods
gs
adc
cltd
movsb
clc
mov
or
sbb
subl
je
xchg
mov
ss
out
popf
mov
push
repz
fnstsw
pop
gs
stos
sub
imul
push
and
push
xchg
test
enter
or
adc
fcomps
aaa
jp
cmpsb
nop
ljmp
divl
jmp
add
mov
adc
push
cld
push
jl
sub
lea
dec
pushf
inc
and
ffree
fadd
test
lods
repnz
pop
loope
dec
in
add
pusha
sub
mov
push
pop
xchg
or
mov
sahf
aas
xchg
jno
push
pop
mov
mov
bound
adc
mov
push
movsl
mov
bnd
pop
nop
mov
xchg
scas
stos
fsubrs
popa
aaa
adc
jmp
out
out
lret
loope
jecxz
or
sbb
inc
fcoml
cli
sbb
les
jle
es
jp
filds
jmp
push
or
pop
and
mov
push
or
mov
pop
scas
mov
lea
aaa
adc
adc
add
push
and
mov
mov
shlb
sbb
jp
sub
lock
add
movsb
inc
ret
mov
xchg
ds
push
jo
pop
out
icebp
jle
das
or
pushf
push
imull
dec
mov
push
pop
mov
outsl
andb
shll
inc
xchg
pushf
stc
mov
xchg
lock
addr16
pxor
ret
leave
int
jge
lcall
std
fildl
movsl
cwtl
sbb
cmovg
adc
and
insb
dec
sbb
add
mov
fcoml
cmpsb
mov
into
imul
xchg
jb
fstpt
insl
jg
imul
ret
mov
out
cld
leave
pop
jno
or
sub
and
xor
shll
daa
iret
test
fs
cwtl
aas
aas
pop
rclb
data16
cwtl
jg
in
data16
rcll
push
add
xchg
in
popf
lret
pop
jb
stc
mov
push
and
outsb
int
push
xor
call
lret
mov
sub
cmp
add
ficomps
loop
xchg
ja
dec
fists
cmp
das
dec
jge
dec
xchg
int3
jo
call
mov
sub
loopne
push
pop
pop
aam
in
push
repnz
in
xor
test
mov
fildl
filds
sub
pushf
jg
ja
sbb
cltd
dec
sub
dec
add
add
ja
mov
ret
movsb
inc
ja
cmp
stc
mov
mov
and
aas
adcb
push
jg
push
outsb
lcall
add
cmp
push
and
or
add
je
fucomip
iret
add
xchg
push
cmp
add
jle
push
sti
push
movsl
pop
gs
ret
dec
inc
leave
shll
fscale
stos
out
mov
pop
mov
andl
mov
mov
stc
leave
and
aam
fimuls
push
ret
inc
pop
iret
rcr
mov
cmc
cltd
lock
mov
ljmp
lods
sub
mov
pand
jmp
jmp
jo
clc
or
jge
mov
or
push
jmp
call
push
xor
add
jo
mov
dec
dec
sbb
jg
pop
loope
ja
pop
cmpsl
push
mov
jg
sub
jmp
mov
shl
pop
mov
cli
fisttpl
adc
or
test
jb
fwait
add
jnp
fsubl
jl
ljmp
dec
sub
cmp
subb
lcall
mov
or
mov
fsubl
inc
adcl
cmp
mov
ffreep
and
push
icebp
popf
pop
pop
jnp
lahf
hlt
cmp
aam
push
push
adc
aaa
aas
lret
icebp
pop
test
ss
fmuls
outsb
dec
jl
stc
inc
or
mov
adc
adc
icebp
outsb
cltd
add
test
and
mov
cmp
push
push
aad
lods
jb
fwait
push
xchg
cmp
notl
mov
cs
sbb
stc
push
leave
jne
ljmp
push
sub
icebp
loope
fmull
xorl
enter
inc
xchg
dec
mov
push
add
lret
addr16
add
xor
rolb
sub
jge
mov
ljmp
jae
mov
adc
xchg
pop
add
push
icebp
ret
or
aad
mov
mov
sub
mov
dec
dec
adc
lahf
mov
movsl
rcrl
cmp
dec
and
fmul
and
xchg
sub
pop
movsb
push
lret
sub
insl
push
ficompl
scas
and
pop
lds
cld
inc
jge
cmpsb
subl
mov
mov
jmp
cmp
mov
stos
cmp
inc
fs
adc
or
sub
add
pop
pushl
rdmsr
push
mov
inc
test
pop
sbb
push
mov
fwait
lahf
imulb
iret
in
and
pusha
push
lock
std
fcoms
adc
and
xchg
mov
mov
mov
in
add
out
mov
insb
sub
dec
xchg
leave
or
or
cld
xor
cmc
roll
in
xchg
loopne
push
mov
adcb
push
cmp
xchg
sbb
pop
daa
loope
das
das
sbbl
ret
shrl
ss
mov
jnp
rclb
stc
fwait
push
xor
in
fdivrs
inc
mov
test
and
loopnew
inc
pop
fmuls
rorb
cld
shll
movsl
rorb
push
push
inc
js
push
and
mov
xchg
push
cmp
and
add
ja
adcb
fidivs
into
cmp
loop
pop
push
or
push
repz
pop
jl
or
sub
stos
jo
insb
add
repnz
and
outsl
in
pop
or
dec
popf
call
inc
sbb
aaa
je
mov
add
xchg
cmp
outsl
js
mov
les
xor
dec
fnstenv
lods
loop
imul
or
sbb
in
and
adc
negl
pushf
inc
je
ljmp
insl
and
addr16
or
aas
mov
out
jnp
idivl
mov
mov
pusha
push
dec
jmp
adc
incl
js
add
cmpsl
imull
push
mov
dec
dec
mulb
mov
sete
lret
mov
xorl
shl
cli
in
cwtl
pop
negb
dec
pop
cltd
daa
cld
imul
sbb
cld
fs
in
xchg
imul
sbb
out
sub
push
xor
das
stos
xchg
sbb
fimull
out
insl
xchg
das
lahf
imulb
insl
out
les
push
repnz
repz
in
je
sub
lods
xor
out
xor
pop
add
sti
in
call
mov
cmp
in
push
inc
ss
out
cmovg
lock
aas
mov
jno
adc
repz
les
outsb
cld
ss
into
inc
inc
popf
sbb
xchg
mov
inc
inc
dec
mov
adc
lods
aad
jns
cwtl
adc
js
push
push
out
inc
push
je
clc
lahf
mov
push
jmp
sysenter
sahf
pop
sub
xchg
xchg
pop
pop
pop
arpl
xchg
in
mov
sub
call
lods
sbb
mov
repnz
cmpsl
push
or
aas
pop
add
fnstenv
sub
movsl
cmp
xchg
cmpsl
lret
fldt
xchg
sbbb
push
adc
xor
dec
jb
push
testb
inc
mov
imul
scas
push
lea
int
fwait
mov
xchg
cld
dec
xor
pop
mov
std
jle
mov
fcomps
out
pop
adc
dec
addl
rclb
dec
call
call
fsubs
jo
dec
inc
sbb
fsubrl
inc
ret
idiv
pop
cs
xchg
imul
gs
inc
adc
in
inc
rolb
push
jnp
test
out
jmp
inc
xlat
loop
pusha
or
pop
mov
pop
cmp
dec
les
adc
addr16
push
mov
or
cmpsl
jl
mov
idiv
cmpsl
iret
out
fwait
shrl
outsb
rclb
pop
xor
je
xchg
sub
rcrb
sbb
jle
pop
stos
add
aas
das
test
push
lret
mov
mov
ljmp
cld
mov
xchg
addb
inc
cld
push
and
cld
fsubs
adc
jae
mov
stc
cli
std
mov
es
aaa
insb
fldt
test
dec
insb
push
inc
ljmp
sbb
cmp
sahf
jge
push
aad
es
push
xchg
call
mov
sub
fidivs
adc
jp
gs
jge
jnp
xchg
mov
or
push
push
mov
xor
and
xor
pop
pop
dec
cmpsb
push
call
cs
mov
push
or
adc
movsb
fwait
push
adc
cmp
call
add
inc
es
or
dec
arpl
ljmp
xlat
sbb
mov
fisubrl
fstp
lds
pop
ret
daa
gs
loope
mov
repnz
jnp
out
scas
imul
loopne
cmp
shrb
ret
push
xlat
pop
add
cltd
mov
divl
pop
fmul
faddl
scas
addr16
xchg
test
inc
jae
repz
mov
adc
adc
pop
pop
lahf
aas
dec
adc
mov
fnstcw
mov
cmp
dec
fs
jae
ret
adc
or
insl
outsl
insl
aam
or
lods
mov
fdivrs
pushf
jbe
push
lret
movsb
in
cmc
sbb
add
fidivs
adc
mov
dec
fsts
outsl
fidivl
cmp
arpl
pusha
lock
inc
aas
insb
out
pop
cli
inc
test
push
add
xchg
push
addr16
and
aaa
sub
lret
data16
bound
pop
call
jnp
shr
sahf
sub
dec
push
pop
in
pusha
add
xor
call
fcom
stos
dec
imul
dec
mov
jae
nop
rcrb
mov
lods
std
inc
mov
dec
stos
out
dec
aam
dec
cld
loopne
cmpl
or
and
cmp
sub
pop
mov
mov
movsl
mov
gs
imul
shrb
mov
out
outsl
push
add
pop
xor
das
fdiv
mov
pop
jg
mov
jo
je
pop
mov
cli
push
or
dec
mov
roll
loope
mov
push
addl
xchg
pushf
mov
test
stos
cmp
pushf
jno
xchg
jg
fdivs
mov
bswap
jno
xor
jge
lret
popf
addr16
clc
sbb
lock
mov
adc
adc
adc
adcl
xchg
ror
