jno
add
divb
rorb
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
cmpl
jne
cmpl
jge
cmpl
jne
cmp
je
cmp
je
ret
push
lea
call
movl
pop
jmp
push
mov
push
push
incl
mov
mov
cmp
push
mov
je
mov
mov
mov
pushl
mov
pushl
mov
call
pop
leave
ret
push
mov
sub
push
push
push
mov
xor
cmp
je
mov
neg
sbb
pop
and
pop
add
pop
leave
ret
lea
push
push
lea
call
test
pop
pop
jne
lea
push
mov
call
push
push
call
test
js
lea
call
mov
test
mov
je
call
test
je
mov
test
je
mov
push
push
lea
push
push
call
mov
mov
push
push
push
push
call
lea
call
pushl
call
pop
pushl
movl
call
pop
pushl
call
pop
jmp
mov
pushl
mov
pushl
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
cmp
ja
add
cmp
jb
mov
sub
jne
mov
test
mov
mov
je
mov
push
mov
call
addl
pop
mov
pop
ret
mov
mov
push
push
call
test
jne
pop
xor
pop
ret
push
mov
and
sub
push
push
mov
mov
cmp
lea
push
mov
jb
mov
test
je
push
lea
push
lea
push
push
push
movl
call
add
test
je
mov
cmp
jb
mov
mov
push
add
push
push
push
push
lea
push
mov
call
test
je
lea
push
push
push
call
add
test
je
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
lea
push
push
push
push
lea
movl
call
add
test
js
mov
mov
lea
push
push
push
push
call
add
cmp
ja
xor
mov
lea
push
push
push
push
call
mov
mov
mov
mov
add
sub
push
push
mov
push
mov
push
lea
push
push
call
test
js
mov
movl
movl
mov
test
je
mov
push
mov
call
lea
call
mov
test
je
mov
mov
push
call
mov
pop
pop
pop
mov
pop
ret
push
push
call
add
jmp
mov
mov
jmp
push
mov
and
push
push
push
mov
push
mov
push
pushl
pushl
push
call
test
mov
jne
test
js
mov
mov
call
call
mov
mov
call
push
mov
call
mov
orl
pop
mov
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
mov
mov
xor
cmp
je
add
add
cmpl
jne
test
mov
mov
je
lea
push
call
mov
add
test
mov
je
test
push
push
jbe
xor
mov
mov
mov
push
call
mov
add
test
je
push
push
push
call
mov
mov
mov
add
add
cmp
jae
mov
jmp
xor
pop
pop
pop
pop
add
ret
push
mov
push
mov
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
xor
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
jmp
mov
test
je
lea
jmp
mov
test
je
lea
jmp
mov
test
jne
mov
movl
movl
mov
jmp
mov
test
je
lea
jmp
push
mov
sub
mov
xor
mov
movzbl
push
xor
xor
push
inc
cmp
mov
mov
mov
mov
je
jg
cmp
jle
cmp
jg
cmp
jge
cmp
je
cmp
je
add
cmp
ja
mov
push
call
push
mov
call
mov
andl
xor
mov
pop
xor
pop
call
leave
ret
sub
je
dec
je
dec
jne
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
mov
push
call
push
jmp
cmp
jge
cmp
jg
je
cmp
je
jle
cmp
jg
push
pop
mov
jmp
push
call
add
mov
jmp
mov
push
call
push
mov
call
mov
mov
call
test
jne
sarl
jmp
cmp
jle
sub
cmp
jbe
mov
jmp
je
sub
je
dec
dec
je
sub
je
dec
jne
push
call
jmp
movzbl
jmp
mov
push
call
push
mov
call
addl
add
mov
mov
cmp
je
cmp
jne
mov
jmp
cmp
je
jmp
xor
push
call
pop
jmp
cmp
je
cmp
jne
push
push
pop
jmp
lea
sbb
and
adc
cmp
insb
and
adc
cmp
hlt
fs
adc
add
add
push
push
push
push
push
push
push
push
push
push
push
add
add
add
add
and
push
mov
push
call
test
je
mov
push
lea
call
mov
neg
sbb
and
je
lea
mov
call
test
jbe
xor
mov
call
pop
ret
xor
jmp
cmpl
je
xor
inc
ret
push
testb
jne
call
pop
ret
mov
mov
mov
mov
mov
mov
shr
and
dec
je
xor
dec
je
dec
je
shr
and
cmp
sete
pop
ret
inc
pop
ret
push
mov
push
testb
push
push
push
mov
jne
mov
call
xor
cmpb
pop
setne
pop
pop
mov
leave
ret
mov
test
je
mov
add
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
or
inc
add
jl
insb
test
je
mov
lea
push
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
mov
push
push
push
lea
push
push
call
test
js
mov
mov
push
push
mov
call
mov
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
pop
pop
pop
xor
call
add
ret
test
jne
inc
ret
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
test
push
mov
mov
je
push
call
mov
add
mov
mov
test
js
mov
cmp
je
cmpl
je
mov
cmp
jne
cmpl
jne
mov
mov
sub
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
test
mov
je
test
je
push
call
add
xor
pop
pop
pop
add
ret
lea
call
test
je
mov
add
addl
mov
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
mov
sub
cmpl
push
push
push
movl
je
mov
mov
lea
push
lea
push
call
mov
test
js
mov
cmp
ja
test
je
mov
mov
mov
mov
lea
push
mov
push
push
push
push
push
movl
call
test
js
mov
mov
test
je
mov
add
add
sub
sub
add
adcl
test
jne
in
fadds
mov
mov
cmp
mov
jae
sub
push
mov
call
cmpl
jne
mov
pop
pop
pop
mov
pop
ret
mov
mov
jmp
pop
pop
xor
pop
mov
pop
ret
mov
test
jne
or
ret
test
push
mov
jbe
lea
push
mov
movzwl
movzwl
cmp
jae
movzwl
movzwl
sub
cmp
jb
add
dec
jne
pop
mov
cmpl
jge
push
call
pop
pop
ret
xor
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
xor
cmp
push
je
lea
mov
mov
add
call
cmp
mov
jne
xor
mov
call
mov
mov
cmpl
jge
mov
push
push
push
call
add
mov
call
mov
mov
sub
cmpl
jge
push
call
mov
add
mov
mov
pop
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
push
push
mov
cmp
push
mov
jge
mov
sub
mov
jns
lea
test
jl
lea
lea
cmp
jge
mov
testl
jne
cmpw
jne
sub
sub
test
jge
cmp
jge
mov
lea
push
push
mov
call
test
jl
cmpl
mov
jg
mov
sub
jns
test
je
cmpw
je
pop
pop
pop
xor
pop
add
ret
lea
lea
lea
mov
cmpl
jge
mov
testl
jne
movzwl
test
je
mov
movw
sub
sub
sub
test
mov
jge
mov
jmp
xor
lea
lea
test
jle
cmpw
je
mov
movw
movzwl
mov
mov
push
mov
push
call
mov
add
add
add
cmp
jl
mov
jmp
lea
lea
lea
mov
testl
jne
sub
sub
test
jl
jmp
mov
push
call
add
test
je
jmp
mov
cmpw
je
jmp
lea
push
push
call
test
mov
js
push
call
mov
mov
jmp
add
call
mov
mov
jmp
add
push
mov
call
mov
mov
jmp
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
push
mov
push
push
mov
mov
mov
mov
mov
test
je
push
push
call
add
mov
mov
test
je
mov
testl
je
lea
call
push
push
lea
call
test
je
mov
movl
mov
mov
mov
lea
push
mov
push
mov
push
push
push
push
push
call
test
js
cmpl
je
lea
call
mov
pop
pop
pop
pop
pop
ret
push
push
push
mov
lea
mov
push
call
xor
cmp
jne
mov
push
push
pushl
mov
push
call
cmp
je
pushl
mov
pushl
call
mov
call
pop
pop
pop
ret
cmp
jne
pushl
mov
push
mov
call
test
jne
pushl
mov
call
test
je
mov
test
lea
je
lea
andl
jmp
mov
push
mov
call
jmp
mov
mov
push
call
faddp
inc
add
adc
insb
cmp
mov
mov
push
call
mov
lea
push
push
call
mov
lea
push
push
call
mov
mov
imul
mov
mov
imul
mov
mov
and
or
jne
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
ret
jmp
mov
push
call
jbe
inc
add
ret
mov
mov
test
jbe
dec
mov
mov
test
je
mov
decl
mov
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
test
jne
mov
mov
cmp
jne
call
test
jne
test
jne
pop
pop
ret
mov
mov
mov
call
test
jne
mov
mov
popf
aam
add
pop
ret
mov
mov
mov
call
test
js
mov
add
xor
and
xor
pop
pop
ret
call
jmp
xor
mov
xor
and
xor
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
jbe
mov
cmp
je
mov
cmpl
jae
xor
ret
testb
je
xor
ret
mov
mov
incl
test
je
mov
incl
call
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
mov
cmpl
je
push
push
xor
push
jmp
lea
test
movl
jne
mov
lea
push
push
push
call
add
test
js
mov
test
je
mov
mov
mov
mov
add
push
add
push
xor
push
mov
call
test
je
mov
mov
lea
add
lea
cmp
je
lea
lea
test
je
mov
mov
mov
add
add
cmp
jne
mov
addl
mov
add
je
xor
test
js
mov
mov
mov
mov
sub
je
sub
je
jmp
test
jne
xor
pop
pop
pop
pop
pop
ret
int3
int3
sub
mov
push
push
push
xor
mov
push
lea
mov
call
lea
call
mov
lea
mov
mov
xor
cmp
je
mov
lea
push
push
mov
mov
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
enter
jmp
inc
adc
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
add
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
jecxz
add
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
out
int
add
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
jmp
add
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
add
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
mov
and
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
add
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
add
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
dec
mov
sbb
push
and
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
std
into
inc
add
add
add
xabort
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
inc
add
mov
inc
int
add
or
add
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
add
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
inc
add
add
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
mov
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
jne
inc
add
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
jmp
adc
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
mov
add
mov
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
add
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
inc
add
mov
outsb
sbb
int
pop
or
lea
mov
call
mov
lea
push
mov
add
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
add
call
inc
add
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
add
mov
mov
mov
mov
mov
mov
arpl
inc
add
add
test
or
test
dec
and
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
mov
push
and
lea
mov
movl
movl
movb
filds
push
mov
jle
inc
add
mov
arpl
add
dec
and
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
add
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
add
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
add
loop
add
add
call
mov
roll
out
add
test
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
add
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
ret
or
push
add
or
jmp
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
loop
add
or
add
jo
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
add
add
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
lea
call
lea
call
testb
movl
je
push
call
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
test
jne
push
call
mov
mov
mov
and
or
add
mov
mov
xor
mov
test
jns
mov
mov
test
jne
test
jne
mov
pop
pop
pop
mov
xor
call
mov
pop
ret
push
call
xor
test
je
mov
orl
jmp
mov
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
testl
jne
mov
lea
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
add
lea
push
push
call
mov
test
jne
test
jne
mov
mov
mov
mov
mov
lea
call
mov
test
jne
test
je
mov
push
call
mov
add
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
lea
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
push
mov
call
cmp
jne
mov
mov
call
test
jne
cmp
jne
mov
lea
push
lea
push
movl
mov
movl
mov
mov
call
mov
mov
mov
push
push
call
mov
test
js
testb
jne
mov
mov
mov
push
push
mov
call
mov
mov
test
jne
test
je
mov
push
call
add
mov
test
js
mov
mov
mov
mov
lea
mov
call
jmp
mov
add
call
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
mov
cmp
mov
je
cmp
jg
mov
cmp
je
mov
cmp
je
cmp
je
mov
cmp
je
cmp
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
call
mov
push
mov
call
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
cmp
je
cmp
je
cmp
je
cmp
jne
addl
jmp
mov
mov
xor
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
jmp
push
mov
andl
push
lea
mov
test
movl
jne
lea
call
mov
call
testb
je
push
call
pop
pop
mov
pop
ret
push
mov
push
push
mov
cmp
je
mov
mov
lea
mov
mov
mov
leave
ret
push
mov
mov
sub
push
xor
test
je
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
call
push
mov
lea
mov
call
mov
cmp
mov
je
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
add
mov
call
mov
push
lea
call
mov
lea
push
push
call
lea
call
lea
call
cmp
je
cmp
je
mov
cmp
je
pushl
mov
call
cmp
je
mov
mov
call
mov
mov
mov
call
cmp
jne
call
mov
lea
call
lea
call
pop
lea
call
lea
call
pop
mov
pop
leave
ret
mov
cmp
je
jmp
add
int3
int3
int3
push
mov
and
push
push
mov
push
push
mov
nop
testb
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
jne
cmpw
je
push
call
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movw
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
cmpw
je
cmp
jne
cmpw
je
cmp
jne
cmpw
jne
mov
push
mov
call
cmp
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
pop
pop
pop
mov
pop
ret
mov
push
push
push
push
push
push
mov
call
jmp
lea
mov
cmp
lea
je
jmp
mov
orl
mov
call
jmp
mov
push
mov
call
jmp
mov
push
push
push
call
jmp
push
mov
push
cmpw
jne
mov
test
je
mov
push
call
mov
test
mov
je
mov
mov
push
pushl
push
push
call
lea
call
xor
leave
ret
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
push
mov
push
push
mov
test
je
mov
push
call
mov
mov
mov
leave
ret
mov
andl
test
je
lea
push
push
push
add
push
call
and
je
andl
test
je
andl
pushl
lea
call
mov
andl
lea
mov
call
mov
test
je
jmp
sub
mov
xor
mov
mov
push
push
mov
push
mov
push
mov
cmpl
je
mov
test
mov
jne
test
jne
lea
push
push
call
lea
mov
mov
mov
mov
lea
lea
xor
push
lea
sar
push
mov
movl
movl
mov
mov
mov
call
mov
mov
push
push
push
call
add
cmp
mov
je
mov
mov
mov
push
call
mov
mov
mov
push
lea
push
push
call
test
lea
js
call
mov
test
jne
test
jne
mov
movl
xor
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
lea
push
push
movl
call
add
test
je
jmp
lea
mov
mov
cmp
jne
call
mov
lea
push
push
call
add
test
jne
pop
pop
ret
int3
int3
int3
int3
int3
push
xor
cmp
push
push
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
call
mov
call
test
jne
xor
mov
mov
mov
mov
lea
mov
mov
cmp
je
push
call
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
lea
push
mov
call
mov
push
lea
call
pop
mov
mov
pop
mov
pop
ret
mov
mov
mov
call
mov
jmp
push
mov
sub
cmpl
je
mov
andl
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
lea
call
mov
mov
mov
leave
ret
mov
test
je
mov
mov
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
lea
test
push
jge
xor
pop
pop
pop
pop
add
ret
mov
mov
mov
lea
xor
mov
mov
mov
lea
mov
mov
push
lea
mov
add
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
cmp
je
push
lea
call
pop
pop
pop
xor
pop
add
ret
mov
ret
movzwl
push
lea
mov
test
je
pop
ret
push
mov
and
sub
mov
andl
andl
andl
andl
lea
push
mov
call
mov
lea
call
test
jne
mov
call
call
test
je
xor
inc
mov
pop
ret
int3
int3
int3
cmpl
push
mov
push
push
mov
jne
cmp
je
xor
cmpl
jne
cmp
je
xor
test
jne
test
jne
cmpl
je
mov
cmpl
je
pop
pop
pop
ret
mov
mov
movl
call
cmpb
jne
test
je
mov
mov
add
cmp
je
cmpl
jne
mov
call
pop
pop
pop
ret
mov
jmp
mov
call
mov
call
pop
pop
pop
ret
movzwl
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
ret
mov
dec
test
jle
cmpw
je
xor
inc
ret
int3
int3
sub
push
mov
mov
test
je
mov
mov
push
push
push
xor
call
cmp
je
lea
push
push
lea
mov
call
mov
lea
lea
push
push
mov
call
mov
push
lea
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
je
mov
push
mov
lea
mov
call
mov
lea
mov
mov
push
push
mov
call
mov
push
mov
call
lea
call
lea
call
lea
call
xor
pop
pop
pop
add
ret
lea
push
lea
movl
movl
movl
call
pusha
push
call
mov
xchg
mov
addb
add
lods
fwait
add
icebp
xchg
data16
aam
lods
xlat
mov
bound
add
push
add
add
pop
add
pop
test
add
add
jbe
bound
add
mov
nop
add
xchg
add
js
add
lret
mov
add
lcall
add
movsb
add
add
pusha
add
add
add
add
add
push
add
leave
mov
add
pop
addb
cwtl
sar
xchg
add
add
mov
fxch
mov
add
add
mov
jb
pop
popa
add
cmpsl
insb
add
mov
bound
cwtl
add
jp
jecxz
add
add
add
add
mov
sar
outsl
imul
push
mov
add
push
push
push
push
call
lahf
movsb
add
fsubrs
add
clc
rcrb
jb
gs
xchg
jo
jl
incb
popa
mov
xlat
iret
loop
out
jecxz
insb
mov
add
mov
add
add
add
mov
xchg
add
xchg
pop
add
add
add
fsubrl
add
add
sahf
push
out
add
sahf
mov
add
roll
add
iret
stos
popf
test
add
int
aam
bound
movl
popl
push
push
push
push
push
lea
push
push
push
lea
push
push
call
xlat
add
add
sahf
add
arpl
les
lods
filds
in
mov
lods
add
add
addr16
add
roll
add
xchg
add
jns
in
ror
imul
popa
mov
add
add
loopne
add
addl
add
mov
fistl
lcall
addr16
push
push
push
lea
push
push
push
push
lea
push
push
push
call
push
mov
fsubp
fiaddl
lods
add
mov
fiadds
les
push
int
insb
shrl
jo
add
outsl
add
xchg
add
add
add
push
stos
lds
xchg
rcrl
pop
out
add
pushf
xchg
sahf
mov
add
add
cmpsl
fldt
push
xchg
stc
mov
pop
push
pushf
add
jp
scas
push
add
mov
mov
lea
pop
push
push
push
push
push
lea
push
push
call
push
add
xchg
fiadds
push
add
add
add
jp
add
add
add
jb
out
add
lcall
mov
add
add
aad
pop
add
add
add
sbb
xchg
cld
add
mov
pusha
xlat
imulb
mov
cwtl
push
add
mov
lea
pop
call
push
push
push
push
push
push
call
in
insb
push
movsb
out
enter
add
xchg
add
mov
out
std
add
add
addb
fildl
mov
add
add
testl
ret
shlb
icebp
xchg
jbe
loope
into
roll
imul
bound
add
add
test
lods
push
movsl
fadds
cmc
jle
add
xchg
cld
mov
mov
xorl
js
cld
lea
pop
call
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
movsb
mov
bnd
test
fcompl
add
add
rolb
repnz
add
imul
mov
mov
scas
fwait
add
jno
stc
xchg
xchg
xchg
aad
rolb
test
add
aam
add
addb
add
add
add
add
add
pop
pop
add
push
mov
lea
pop
push
call
push
lea
push
lea
push
push
push
lea
push
push
call
push
add
add
pop
pop
les
add
mov
data16
outsl
add
mov
fnstsw
add
pusha
jmp
movsb
add
lods
add
add
fsubs
mov
not
stc
add
push
add
popa
js
popf
add
xchg
add
pop
add
loopne
push
add
pop
add
add
fimuls
pop
jmp
push
lea
push
push
push
push
push
push
call
lahf
add
add
add
pop
add
add
jecxz
xchg
test
in
xchg
fwait
add
cli
add
add
out
add
push
insb
outsl
pop
testb
xchg
mov
add
movb
mov
xchg
loopne
add
xchg
addl
cwtl
add
add
jge
add
shlb
loop
add
xchg
jecxz
add
push
filds
add
mov
aad
out
out
aam
bound
ret
push
push
push
call
leave
in
xlat
stos
leave
add
ret
mov
add
add
add
out
push
aam
mov
add
add
imul
add
icebp
mov
insb
icebp
add
add
add
add
outsl
add
add
imul
xchg
stos
hlt
mov
insb
jae
test
add
add
out
aam
gs
add
xchg
jle
popf
add
popa
add
add
mov
mov
lea
pop
mov
mov
add
push
push
call
test
xchg
xchg
mov
movsl
mov
cmc
jo
add
out
int3
add
add
mov
fwait
iret
shrb
jae
add
scas
popa
add
popf
add
lret
scas
add
add
add
imul
roll
add
push
add
add
add
loop
add
in
mov
lea
pop
add
add
push
lea
push
call
add
out
add
add
pop
add
cwtl
in
mov
iret
add
add
rcrl
add
add
add
add
fildl
jecxz
xchg
addl
add
in
add
testl
gs
addr16
mov
add
add
int
test
add
pop
add
add
enter
pop
add
cld
test
add
mov
mov
lea
pop
mov
push
push
push
push
push
call
sahf
add
mov
mov
add
loop
lods
shlb
ret
add
stc
out
push
in
bound
add
pop
add
add
mov
add
add
bound
add
cltd
push
testb
add
add
test
jo
divb
add
faddl
in
push
add
mov
mov
add
add
add
out
ja
mov
lea
pop
xor
push
push
push
push
push
lea
push
call
pop
repnz
mov
add
mov
add
add
lds
loop
add
shrb
jmp
cli
add
add
jnp
iret
mov
mov
mov
add
add
scas
pop
lods
fs
pop
add
mov
jbe
ror
add
push
lret
add
ficompl
mov
lea
pop
add
push
push
push
push
push
push
lea
push
call
add
icebp
add
insb
add
push
faddl
push
add
popa
xchg
add
loop
cmpsl
add
add
in
xlat
xchg
stc
add
add
aam
add
mov
aad
push
movb
mov
outsl
mov
clc
add
lds
add
rol
add
add
mov
pop
add
mov
push
add
add
push
pushf
jl
stc
add
out
scas
pop
fwait
mov
lea
pop
add
call
push
push
call
stos
push
mov
lea
jno
jne
add
xlat
cli
cld
out
enter
add
push
loopne
add
popa
xchg
add
add
add
add
arpl
xlat
stos
out
cld
pop
mov
rol
icebp
add
add
add
roll
add
roll
add
testl
xor
push
push
push
push
pop
add
dec
sub
dec
ror
sub
pop
xor
not
add
add
pop
push
push
push
push
push
lea
push
lea
push
push
call
out
test
hlt
jb
add
nop
imul
popf
jmp
add
add
in
add
popf
cltd
cli
test
add
add
pop
push
push
add
add
add
add
add
stc
test
xlat
sti
add
aad
in
push
mov
xchg
rolb
add
fmull
jne
push
lea
push
lea
push
push
push
call
add
imul
add
add
imul
pop
mov
pushf
add
add
jge
add
popf
add
test
add
lea
add
add
add
add
flds
add
jecxz
rolb
mov
add
cltd
add
jmp
stc
add
jge
pop
add
lods
jne
push
add
add
pop
lea
vpunpckhwd
jmp
arpl
jmp
mov
lea
pop
call
mov
push
push
push
call
fwait
js
jae
mov
add
test
add
rclb
mov
add
add
icebp
push
jmp
sti
pop
add
add
add
mov
cmpsb
add
add
jb
jmp
in
movl
ja
scas
incb
add
ror
data16
xchg
pop
add
jge
add
mov
lea
pop
movl
push
push
push
push
push
lea
push
lea
push
push
call
add
mov
add
add
gs
fcmovne
add
divb
roll
add
add
xchg
jecxz
negb
add
lock
jl
xlat
pop
pop
flds
ficoml
add
add
add
cld
add
addb
out
mov
add
fldenv
lods
add
faddl
gs
add
in
fwait
je
fmull
inc
loopne
push
lea
push
push
push
push
call
imul
cmpsl
mov
lcall
fs
add
jae
add
add
add
add
jne
stos
out
add
push
sbbl
fisttpll
add
ret
mov
add
add
mov
xlat
repnz
cli
int3
add
mov
call
stos
jbe
iret
xchg
add
add
mov
fbld
add
add
lea
pop
pushl
push
push
push
push
lea
push
call
jmp
push
add
add
pop
add
loope
push
add
idiv
add
xchg
hlt
mov
stc
add
mov
add
xchg
push
mov
shll
arpl
add
mov
add
movsb
fdiv
sti
cld
add
mov
add
add
lret
cmpsb
mov
add
lods
subl
cld
out
ret
gs
mov
out
les
add
pop
pushl
call
pushl
push
push
push
push
lea
push
push
push
call
jne
cmpsb
add
shlb
mov
enter
xchg
add
xchg
testb
add
stos
add
les
fnsave
mov
lea
clc
stc
out
stc
out
add
fsts
out
lret
rorl
push
add
add
stos
test
pop
add
add
loop
cmpsl
xchg
cltd
add
cmpsl
lods
scas
roll
mov
xchg
ljmp
cmpsl
mov
lea
pop
pushl
call
push
push
shl
push
sub
add
not
rol
not
sub
xor
pop
xor
lea
shr
pop
push
push
call
popa
push
icebp
xchg
xchg
jne
add
push
add
add
gs
add
add
add
nop
jno
add
add
push
add
add
mov
andb
add
add
add
popa
jle
add
fsubrl
sahf
add
push
lret
add
icebp
add
sti
add
in
lcall
pop
pushl
push
push
push
push
push
lea
push
push
lea
push
call
mov
into
add
addl
add
add
add
fwait
lds
lea
xorb
add
mov
jbe
add
add
add
pusha
arpl
add
mov
movsl
add
rcll
pop
xchg
lret
push
add
test
shll
mov
fnsave
add
mov
add
aad
add
loopne
mov
lea
pop
call
push
push
push
push
push
push
push
call
roll
popa
add
into
into
jb
addl
add
add
xlat
scas
ljmp
repnz
filds
popa
rorb
out
out
add
aam
add
jmp
gs
popf
leave
je
add
add
mov
mov
test
add
jns
add
add
push
orl
addb
sub
dec
push
push
pop
add
inc
lea
sub
not
sub
sub
ror
pop
ror
pop
push
push
push
push
push
push
push
lea
push
call
add
leave
add
xchg
add
add
add
push
cltd
int3
add
imul
add
pusha
add
xchg
add
add
push
int
xlat
add
cli
add
add
push
cmp
sti
mov
idivl
mov
lcall
push
enter
in
add
jge
add
push
push
add
mov
lea
pop
push
call
mov
push
push
push
push
lea
push
push
lea
push
call
cld
push
test
add
xchg
cmpsl
imul
add
neg
out
add
add
jnp
jnp
leave
add
popf
add
add
mov
add
js
add
mov
mov
xchg
loope
nop
add
pop
imul
mov
pop
pusha
add
lahf
add
data16
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
jl
idiv
mov
out
aam
aam
add
mov
lea
les
negb
popl
push
add
mov
mov
mov
jl
jb
popa
add
lea
cwtl
scas
mov
movsl
add
clc
push
js
lods
lods
sar
movsb
push
add
loope
add
into
add
add
ljmp
cld
lea
pop
push
push
lea
push
push
push
lea
push
call
mov
cli
arpl
xchg
ret
movsl
add
sti
cld
loopne
jp
repnz
jl
mov
fistl
add
mov
add
jb
add
addb
cld
movb
push
lahf
add
fbld
add
add
cwtl
add
add
mov
sahf
add
push
mov
rolb
stos
add
cld
lea
pop
mov
push
push
push
push
push
push
push
push
lea
push
push
call
stc
lods
pop
push
pop
add
add
add
jbe
add
jle
add
orl
mov
loope
xchg
push
add
mov
xchg
add
pusha
add
in
lcall
add
jnp
push
xlat
addr16
addl
mov
jns
ljmp
mov
mov
lea
pop
add
add
push
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
add
loopne
loopne
test
mov
add
mov
push
fstps
lret
jb
add
jle
cmpsl
int
jnp
jl
je
add
add
add
lods
pop
out
add
iret
pusha
ja
pusha
add
imul
add
add
mov
xchg
add
arpl
pop
add
mov
push
push
lea
push
call
out
in
add
add
test
pusha
test
jmp
add
mov
add
add
jmp
popa
mov
aad
add
mov
push
mov
cwtl
add
sti
mov
addb
imul
cmc
add
fcomps
xlat
lret
filds
mov
lea
pop
xor
push
push
call
add
pop
mov
aam
jno
jge
sbbl
lods
xchg
imul
out
add
lock
scas
add
lahf
pop
push
movb
repnz
add
int3
add
lret
flds
loope
mov
movsl
add
jge
xchg
add
fadds
pop
fiaddl
fstp
mov
test
add
jmp
shrl
shlb
pop
clc
testl
add
testl
add
add
je
dec
push
lea
push
call
fsts
incb
xlat
cld
mov
add
movsb
lock
jno
mov
push
add
xchg
push
xchg
mov
test
roll
mov
je
add
shll
mov
mov
add
pop
addr16
pop
sahf
rcrl
pusha
aam
fbld
add
add
add
aad
add
add
add
mov
lea
stos
mov
lds
roll
add
xchg
mov
lea
pop
add
push
push
push
lea
push
push
push
lea
push
call
add
sti
cmpsb
add
add
mov
add
aam
mov
fistl
leave
add
scas
leave
mov
add
jge
jmp
add
lods
add
xchg
std
add
add
jae
push
test
mov
loope
add
jne
mov
js
leave
cmpsl
pop
add
roll
hlt
cld
nop
add
sbb
push
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
add
add
cmpsb
cmpsb
jae
jae
xchg
out
add
add
cmc
mov
add
scas
pop
test
loopne
movsl
pop
add
add
mov
lret
mov
movsl
add
add
popl
stc
add
cwtl
jmp
add
shr
add
rcr
jmp
stos
add
orl
xor
add
push
push
push
push
push
lea
push
call
push
add
jae
add
add
scas
pop
popf
ret
iret
stos
aam
mov
mov
add
jae
int
add
addr16
jmp
mov
mov
mov
pop
add
mov
cli
add
ljmp
add
rcrl
popl
add
addb
mov
jle
outsl
mov
lea
pop
pop
push
lea
push
lea
push
push
lea
push
call
stos
add
push
sahf
xchg
mov
mov
add
lret
push
mov
nop
jl
add
add
add
popa
add
pop
add
stos
push
in
add
add
ja
add
aad
xchg
jns
push
shr
add
jmp
pusha
mov
rorb
popf
pusha
scas
add
add
aad
push
imul
aad
fmull
dec
sbb
movsb
shll
xchg
lret
push
push
call
mov
add
add
lods
add
add
cwtl
add
add
xchg
add
add
shr
add
push
add
out
pop
sbb
pop
add
call
pop
add
add
xchg
mov
add
jbe
cmpsl
add
add
add
jmp
xchg
add
add
add
add
mov
mov
lea
pop
xor
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
movsl
shl
add
lea
add
mov
add
add
aam
add
add
aam
jns
push
hlt
mov
jno
push
xchg
js
in
mov
fists
add
js
mov
nop
sti
add
stc
in
movl
clc
add
test
add
cmc
push
add
cmc
testl
int3
lea
pop
add
push
push
lea
push
push
push
push
push
push
push
call
jo
add
mov
push
out
add
cmpsl
rol
add
mov
add
fildl
pusha
mov
jbe
add
js
mov
enter
fwait
pop
xchg
jae
insb
test
add
add
incb
mov
xchg
add
add
add
mov
leave
push
add
add
mov
add
push
add
scas
cli
mov
lcall
mov
lea
pop
push
push
lea
push
push
push
push
push
push
call
mov
jne
movsl
add
xlat
ja
hlt
cmc
popf
mov
add
nop
xchg
add
pop
in
add
add
cwtl
add
add
movsb
add
jnp
mov
stos
stos
arpl
add
add
std
add
cmpsb
aad
add
add
rolb
add
lea
add
stos
push
scas
shlb
mov
pop
add
loope
add
jl
xchg
mov
lea
pop
mov
xor
push
push
lea
push
lea
push
push
push
call
addl
add
add
add
push
in
add
fistpl
in
add
add
fidivrs
add
div
add
add
add
pop
lahf
pop
out
add
add
scas
add
mov
int
add
iret
lret
stos
add
cmpl
cltd
test
jo
mov
pop
stos
lds
add
enter
push
cld
mov
lea
pop
sub
push
push
push
lea
push
push
push
call
mov
xchg
jecxz
push
jns
testl
mov
push
mov
data16
jp
bound
add
add
lcall
mov
icebp
add
add
mov
cld
add
add
add
add
loope
fadds
pop
add
add
add
aam
bound
pop
pop
push
push
lea
push
call
add
mov
add
mov
add
mov
push
pop
test
add
insb
add
call
add
int
nop
popa
clc
mov
je
add
add
jae
add
popa
push
mov
fdiv
loope
jo
xchg
add
add
cwtl
sub
xchg
popf
pushf
popf
push
movsb
clc
add
add
add
mov
lea
pop
rep
pop
mov
push
push
push
push
call
in
movl
add
add
add
pop
add
jo
jmp
leave
add
add
add
xchg
rolb
add
mov
xchg
incb
add
out
add
add
add
int3
lcall
enter
stc
add
fistpll
add
addr16
loope
add
mov
js
jle
std
add
add
add
xchg
je
push
jmp
arpl
pop
add
add
push
lea
push
push
push
lea
push
push
call
jbe
mov
xchg
scas
js
insb
add
mov
add
scas
out
add
xchg
stc
mov
pop
ja
shr
scas
add
fwait
loope
xlat
add
fiadds
loope
leave
rclb
fidivs
add
rcr
xorl
pop
iret
add
int3
jns
add
fbstp
push
add
push
ret
add
mov
data16
ret
add
add
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
int
pop
xchg
mov
add
add
xlat
lret
filds
out
xchg
add
rcll
outsl
add
bound
jle
fistps
add
add
jge
add
push
out
add
call
ja
mov
cltd
bound
loop
scas
faddl
mov
js
ret
iret
ljmp
ljmp
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
push
call
hlt
jne
in
add
xchg
add
cmc
mov
lea
xchg
jecxz
add
mov
push
mov
add
push
scas
add
out
scas
mov
leave
add
imulb
add
jnp
xlat
sarb
scas
pusha
jmp
pop
add
rcrb
les
add
add
icebp
add
add
call
add
add
mov
lea
pop
xor
push
lea
push
push
push
push
push
call
out
add
add
add
add
xchg
jmp
add
add
add
mov
push
jne
leave
pop
jno
add
jp
jbe
out
gs
cli
pop
add
mov
add
add
popl
gs
push
add
add
rolb
push
add
cwtl
stos
in
add
fisubrs
mov
add
scas
add
loope
push
add
loope
int3
lea
pop
add
push
push
call
add
jae
add
add
in
add
add
add
mov
xchg
ret
add
outsl
add
add
loopne
stos
add
add
pusha
xor
out
add
int
test
add
add
out
mov
rorl
cwtl
cmc
int3
jne
rcrb
fcoms
cwtl
pop
add
pop
lcall
add
pop
mov
xor
push
push
push
push
push
push
push
call
fnstenv
pop
cld
movl
jp
fmuls
loop
jns
fildl
faddl
xchg
add
add
jnp
add
pop
loope
into
mov
add
mov
add
ljmp
popl
mov
lods
add
jb
add
add
add
add
add
add
cld
push
lcall
push
add
add
add
data16
mov
push
push
push
push
push
push
push
call
movb
push
call
lret
addl
out
add
je
mov
popl
fists
cmpb
add
icebp
xchg
add
add
fnsave
add
outsl
cld
push
xlat
mov
xchg
add
add
xchg
add
pusha
push
loope
mov
add
jmp
add
fldl
add
push
mov
add
add
sbb
or
push
lea
push
push
lea
push
push
push
push
push
call
std
repnz
add
add
mov
stos
les
push
mov
cltd
add
fsts
add
cltd
add
ret
popl
je
repnz
add
mov
add
loopne
int
push
cltd
mov
pop
add
pop
in
add
adc
push
pop
enter
add
add
add
cmpsl
test
mov
lea
pop
add
add
push
lea
push
lea
push
push
lea
push
push
push
call
stos
add
imulb
add
add
stc
xchg
jns
add
add
add
data16
cmpsb
iret
add
push
bound
mov
je
jmp
mov
mov
add
add
add
in
mov
clc
fwait
out
stc
lods
xchg
add
add
push
mov
sti
fwait
stos
fcmovnu
mov
aam
cld
lea
pop
add
push
pop
mov
push
push
push
sub
add
add
sub
sub
shl
pop
shl
lea
pop
pushl
push
lea
push
push
push
lea
push
call
fucom
lcall
add
testl
ja
imul
hlt
fdivs
add
mov
add
add
mov
mov
movsb
hlt
loopne
cltd
loop
push
xchg
mov
std
add
add
fadd
iret
jnp
fadds
push
iret
mov
addb
movsl
add
mov
push
add
repnz
popa
pusha
xchg
icebp
add
cmpsb
fildl
add
mov
pop
call
push
push
push
shr
add
push
or
inc
add
xor
sub
sub
ror
sub
shr
not
pop
shr
sub
add
pop
push
push
push
lea
push
lea
push
call
lods
mov
lea
add
add
imul
add
add
add
leave
add
js
int3
add
cld
shrb
add
mov
pop
add
add
in
leave
ror
add
lahf
test
call
add
add
add
in
add
mov
add
stc
add
add
adc
push
push
push
push
call
xchg
ficomps
jne
add
iret
pop
add
mov
popa
add
scas
mov
pop
add
add
mov
ljmp
push
push
rcrb
mov
add
add
mov
add
iret
add
mov
leave
faddl
add
mov
mov
add
iret
mov
lea
pop
push
call
mov
push
sub
pop
push
push
shl
ror
add
pop
push
push
push
push
push
call
pushf
outsl
add
cwtl
mov
add
ja
mov
add
mov
filds
out
add
add
pop
arpl
jecxz
nop
add
mov
arpl
mov
mov
in
add
test
add
add
data16
shll
addb
fsubrl
stc
add
mov
xchg
xchg
add
xchg
mov
add
test
ret
add
add
scas
mov
lea
pop
mov
add
push
sub
dec
pop
add
add
push
not
rol
lea
pop
mov
xor
add
push
rol
pop
push
push
lea
push
lea
push
push
push
push
call
add
mov
add
jmp
add
push
add
add
roll
add
test
add
loope
xchg
add
fs
mov
call
add
je
add
add
push
mov
js
fiaddl
repnz
add
clc
add
clc
add
add
pop
mov
jnp
pop
add
lahf
adc
mov
movl
shrb
add
loop
decb
pop
mov
push
push
push
push
call
into
mull
imulb
add
mov
stos
cwtl
add
add
popf
push
add
jmp
push
pop
pop
add
addb
lds
into
cmpsl
ret
add
add
pop
push
std
loopne
xchg
out
clc
mov
pop
pop
lds
clc
add
add
add
shr
into
add
mov
stos
jbe
out
mov
lea
pop
xor
push
push
push
lea
push
lea
push
lea
push
push
call
add
addb
add
add
push
add
rcl
jnp
addr16
pusha
add
sti
scas
icebp
fs
push
addl
outsl
add
add
add
add
mov
add
icebp
add
pusha
add
add
les
xlat
add
mov
jo
mov
outsl
std
in
xchg
add
lea
pop
add
push
sub
inc
sub
pop
add
pop
push
add
shr
pop
mov
push
push
push
push
lea
push
push
call
ljmp
mov
filds
jp
adcb
add
add
cwtl
add
cltd
mov
add
test
jns
add
push
out
std
lcall
xchg
js
jge
incb
pop
test
add
add
add
cmpsb
test
add
lcall
add
loop
mov
loopne
mov
lea
pop
xor
push
push
lea
push
push
push
push
push
call
cmc
movsl
add
add
add
jge
loopne
add
add
add
add
fisttps
lock
add
add
stc
cltd
lahf
add
enter
pop
fldenv
ret
add
add
push
add
pop
xchg
add
pop
fcomp
mov
cld
lahf
movsl
add
je
mov
lea
pop
add
push
push
push
push
push
push
lea
push
lea
push
call
test
adcl
test
add
push
in
add
popf
add
add
mov
add
lea
xchg
add
lods
add
xchg
imul
cmc
lds
add
add
fildl
add
test
add
movsb
out
jnp
mov
lret
cltd
pop
outsl
add
jb
ja
pusha
add
pop
out
add
add
je
add
gs
push
add
add
and
movsb
push
add
ror
pop
mov
push
push
push
lea
push
lea
push
push
call
mov
add
mov
addb
fmuls
jle
add
leave
add
movsl
mov
jge
add
fadds
in
add
fidivrs
add
out
out
ljmp
xchg
jp
add
movsb
xchg
mov
test
add
mov
add
aam
add
aad
rolb
pop
mov
jo
pop
in
add
push
xchg
add
pop
xor
push
push
push
lea
push
push
push
push
push
lea
push
push
call
add
pop
push
fadds
les
pop
add
jno
mov
add
fisttpl
mov
push
push
outsl
int
add
add
pusha
jo
add
jp
add
test
iret
arpl
sahf
add
loopne
push
roll
sahf
jbe
push
pop
add
jns
add
add
loopne
popa
mov
jb
add
mov
sbbl
add
mov
sub
les
add
or
je
push
push
push
call
add
add
fwait
add
jge
mov
jmp
roll
fcom
out
add
jno
ljmp
int
sar
push
push
add
mov
fldl
add
outsl
ret
je
fadds
mov
push
pop
mov
add
mov
stc
add
add
mov
add
jo
mov
outsl
add
add
add
pop
add
add
pop
mov
xor
mov
push
push
lea
push
push
push
push
push
call
int3
add
add
call
fcom
fwait
add
les
jbe
mov
js
fsubl
mov
jns
add
test
jl
add
jae
mov
add
jb
scas
add
mov
jl
add
xchg
cld
pop
add
addr16
lods
xchg
fildl
js
add
add
pop
xor
push
push
push
lea
push
push
push
push
lea
push
push
push
call
clc
cmpsl
mov
jle
aad
sahf
rolb
bnd
mov
xchg
push
out
shrl
add
push
jp
add
mov
add
lds
xchg
mov
push
sarb
faddl
fwait
jmp
lret
push
bound
shlb
mov
jle
in
add
scas
lock
push
movsb
fmul
mov
outsl
test
push
lods
xchg
add
clc
mov
mov
lea
pop
add
push
not
xor
not
pop
add
add
push
add
sub
xor
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
movsb
add
mov
out
xchg
add
iret
add
jno
adcb
add
mov
add
add
mov
movsb
jecxz
fidivrs
in
xchg
add
fwait
add
add
rol
add
addr16
push
add
add
add
std
add
shrb
mov
ror
add
data16
mov
xor
add
push
add
pop
pop
push
shl
ror
not
lea
pop
rep
push
shr
shl
pop
mov
push
push
push
push
lea
push
call
mov
add
jecxz
add
mov
fwait
insb
add
jnp
enter
add
add
add
add
mov
mov
stos
add
test
add
pushf
stc
add
add
add
add
add
out
roll
lcall
bound
divl
add
stos
in
jecxz
in
jmp
pusha
adc
or
push
lea
push
lea
push
push
lea
push
call
xchg
add
add
icebp
add
add
xchg
add
movsb
add
pop
mov
roll
shlb
test
add
mov
add
add
add
jo
enter
mov
add
pop
push
mov
xchg
out
add
outsl
add
ret
add
imul
cmpsl
push
arpl
mov
xchg
fadds
fcoms
lea
pop
add
or
je
push
push
push
push
push
push
call
add
push
add
mov
mov
add
xchg
pop
pop
add
mov
loopne
jl
xchg
ret
int3
test
js
mov
add
jb
jno
jo
in
add
jp
lret
add
ret
add
shr
mov
add
mov
aam
lods
pop
mov
arpl
pop
mov
push
ror
pop
add
add
push
push
push
call
add
add
add
sarl
add
lea
add
scas
add
loop
stos
xchg
mov
add
add
sti
pop
andl
mov
outsl
add
sarb
mov
fiadds
jbe
mov
add
pop
add
pop
xchg
jl
push
mov
lea
pop
rep
push
push
push
push
push
push
call
pop
add
add
jecxz
clc
mov
add
add
lahf
stos
mov
add
js
add
in
add
jbe
lods
nop
pusha
add
mov
cmc
in
nop
add
movsb
lock
mov
mov
push
add
add
mov
test
mov
jns
scas
jp
xlat
add
add
mov
lret
jl
add
test
leave
outsl
test
lock
mov
lea
pop
pop
push
push
xor
sub
push
xor
add
inc
sub
add
sub
pop
add
shl
pop
push
not
inc
pop
pop
push
push
push
call
lods
xchg
add
add
xchg
lcall
add
add
add
cmpsl
ja
add
int3
iret
pop
mov
cli
add
add
pop
add
lcall
scas
lret
std
cli
add
push
add
add
test
mov
stc
enter
movsl
cmc
add
add
add
mov
add
add
popf
out
flds
mov
lea
pop
mov
push
push
lea
push
lea
push
push
push
push
lea
push
call
jno
loope
int
out
add
add
fwait
nop
ret
mov
mov
add
add
add
add
lea
shr
insb
mov
js
add
leave
cld
mov
add
push
aam
scas
xchg
pushf
mov
add
add
add
pushf
cli
aad
push
lods
movsb
add
add
mov
repnz
pop
mov
push
push
push
push
call
add
pop
add
movb
add
jecxz
fiaddl
xchg
add
add
test
add
add
add
out
stc
add
fdivs
add
jb
fdivl
add
jae
arpl
in
lret
add
mov
add
jmp
xchg
movsl
add
mov
add
xchg
in
push
mov
mov
add
mov
lea
pop
mov
jmp
push
lea
push
push
push
lea
push
push
lea
push
call
xchg
xchg
lahf
clc
les
add
add
mov
mov
add
add
add
movsb
add
mov
mov
add
mov
leave
add
aad
add
push
mov
mov
push
add
add
add
push
pusha
mov
repnz
add
mulb
stc
lahf
icebp
add
xchg
jae
nop
add
add
mov
nop
jno
imul
push
mov
add
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
add
add
add
push
add
cli
mov
lods
movsb
add
scas
testl
lods
fwait
test
out
mov
add
outsl
add
mov
lret
xchg
loop
jge
rcrb
mov
push
jl
jno
push
into
aad
add
ret
add
mov
pusha
call
add
add
lea
pop
push
push
push
push
sub
lea
inc
pop
push
mov
pop
push
pop
pop
push
push
push
push
push
call
fiaddl
lock
lret
fcoml
add
hlt
add
add
add
add
shlb
xchg
add
icebp
push
add
pop
add
rolb
add
add
mov
ret
pop
add
fbld
in
addl
add
rcrb
add
add
add
test
fiaddl
jmp
mov
add
popf
negl
mov
lea
pop
pop
pop
push
add
shl
sub
ror
pop
leave
push
pop
ret
push
push
push
lea
push
push
push
lea
push
push
call
xchg
fldl
outsl
mov
add
push
jns
add
xchg
add
fsubrs
add
int
add
lea
pop
addb
aad
add
scas
pop
add
add
roll
addl
push
add
jbe
add
fiaddl
add
scas
add
jne
hlt
ret
clc
out
add
aad
out
mov
pusha
and
mov
add
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
add
add
add
mov
add
mov
xchg
fisubs
out
fbld
jle
add
mov
lds
andl
lea
movsb
add
add
mov
push
rcll
clc
add
gs
ljmp
xchg
lds
pop
push
push
push
push
push
lea
push
push
lea
push
push
push
call
clc
xchg
mov
lcall
mov
nop
sti
les
add
fadds
sahf
fadds
roll
add
xchg
add
add
faddl
xchg
jbe
xchg
add
add
mov
add
add
add
mov
xchg
add
push
add
mov
popa
add
into
add
add
pop
push
imul
cld
lea
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
add
pop
add
add
out
mov
xchg
add
shll
popf
lret
aad
add
pusha
mov
lcall
mov
icebp
mov
add
add
lods
les
add
stc
test
add
test
mov
add
pop
fisubrl
addl
add
clc
iret
iret
mov
stc
movl
jle
jnp
add
add
testl
jle
orb
push
movl
addl
push
push
lea
push
call
add
add
add
out
aad
pop
add
jno
bound
lods
add
add
add
add
jno
jbe
mov
add
mov
add
add
mov
cmpsl
sahf
out
add
add
lret
push
add
bound
add
rolb
clc
add
add
add
mov
jmp
add
mov
les
rorb
mov
not
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
add
xchg
add
ja
mov
add
mov
add
arpl
addl
fsubr
add
test
add
add
add
jl
mov
add
in
add
mov
fldl
add
mov
incb
add
add
add
add
lock
pop
iret
in
cli
roll
add
add
loope
pop
mov
sub
pop
pop
push
dec
ror
pop
pop
leave
push
push
push
lea
push
lea
push
push
call
rolb
ret
faddl
enter
add
lret
hlt
add
mov
aad
mov
add
pop
roll
add
mov
add
in
push
add
lds
add
mov
movb
scas
add
pop
add
jne
jecxz
subb
add
filds
scas
scas
add
xchg
add
idivl
add
add
add
mov
add
hlt
lea
pop
ret
push
push
lea
push
push
push
push
push
push
call
xchg
roll
mov
nop
push
jo
mov
jbe
add
int
add
add
pop
lahf
loopne
in
add
pop
aad
into
mov
pushf
add
loope
add
ja
add
clc
loopne
add
add
jge
add
xchg
add
pusha
add
stc
enter
mov
mov
lea
pop
push
push
lea
push
push
push
push
push
push
call
fiaddl
add
jge
stos
jp
mov
repnz
xchg
pushf
add
mov
add
add
fsubrl
add
add
in
in
mov
mov
xchg
add
push
mov
lret
mov
xchg
mov
add
data16
xchg
add
std
mov
lea
pop
mov
add
push
push
rol
xor
sub
pop
push
push
push
call
mov
push
out
add
int3
add
add
xchg
rolb
loopne
add
add
mov
add
jecxz
jo
loope
add
movsb
add
fiadds
push
pushf
add
je
mov
mov
add
push
subb
pop
enter
add
imul
add
add
mov
lea
pop
push
push
push
push
push
push
push
lea
push
push
push
call
add
push
add
mov
add
mov
aad
fidivl
scas
repnz
add
xorl
pusha
sahf
push
cli
xlat
mov
add
mov
mov
add
filds
roll
fnsave
jp
call
mov
add
stos
shrb
add
xchg
lret
add
add
and
inc
cld
add
add
push
rol
xor
shr
pop
addl
push
xor
sub
inc
pop
push
push
lea
pop
call
mov
pushl
push
add
lea
pop
push
push
dec
dec
pop
push
call
cmpl
jne
push
shl
sub
sub
pop
pop
push
push
push
push
call
xchg
fsts
sti
xacquire
add
add
mov
cli
in
mov
add
movsb
add
add
clc
push
test
mov
popa
addl
jl
popa
add
je
add
jb
add
add
add
push
std
add
orl
add
insb
push
aam
bound
pop
pop
pop
pop
push
push
call
xor
mov
jle
add
jge
add
scas
mov
in
add
enter
add
add
ja
lock
fiadds
xchg
add
add
add
jne
add
add
lret
add
imul
add
add
add
add
shl
mov
pop
mov
add
jmp
jmp
mov
mov
out
add
pop
leave
push
push
push
push
push
push
lea
push
push
push
call
loope
add
repnz
pop
add
add
add
leave
add
add
ror
xchg
add
add
popa
stos
mov
fisttps
fcmove
lea
imul
lcall
mov
imul
add
mov
add
lret
mov
lea
pop
ret
push
xor
sub
xor
sub
pop
push
push
push
push
push
push
push
push
call
movb
add
int3
repnz
add
pushf
addl
add
add
add
push
mov
in
fiaddl
add
leave
call
out
sahf
mov
add
add
jnp
lods
cmpl
add
jae
add
mov
add
cmpsb
xchg
add
aam
xchg
add
sbb
mov
push
lea
push
push
push
push
lea
push
call
test
lods
mov
jno
xchg
add
xlat
add
add
mov
fists
cltd
fadds
add
add
mov
add
lds
test
fwait
ror
test
clc
popa
rolb
add
add
xchg
add
lods
les
add
mov
aam
add
jne
xchg
out
add
icebp
cmpsb
mov
lea
pop
add
push
push
push
push
lea
push
push
push
push
push
call
push
add
add
flds
lods
pushf
pushf
add
add
add
hlt
jp
rclb
add
pop
in
pop
add
imul
add
imul
push
jmp
popa
hlt
out
int3
out
add
add
add
clc
fdivrs
jo
jl
cli
xchg
bound
lahf
mov
filds
xchg
add
mov
lea
pop
push
push
push
not
pop
movl
push
call
push
push
push
push
call
cwtl
int
fabs
shlb
add
lahf
xchg
push
pop
push
add
push
add
add
fiadds
mov
jo
add
cld
ror
add
movl
add
roll
stos
jl
jb
iret
pop
xlat
lahf
cltd
mov
push
cmc
mov
jno
xchg
push
in
mov
push
rolb
add
pop
push
fiaddl
jl
push
add
int
xchg
add
add
add
adc
or
push
lea
push
push
push
push
lea
push
push
call
push
mov
xchg
mov
push
pusha
rolb
mov
fiadds
cltd
add
imulb
mov
pop
jnp
xchg
int
add
test
mov
out
repnz
fld
xchg
mov
iret
add
add
mov
add
add
faddl
push
js
mov
int3
add
pop
call
push
lea
push
lea
push
lea
push
lea
push
push
call
add
lret
out
mov
lods
call
jae
add
lret
pop
mul
test
mov
scas
pop
add
les
ja
xacquire
lcall
lret
testb
add
imul
xchg
enter
xlat
rorb
add
into
add
mov
fldenv
add
cld
lea
pop
subl
push
ror
pop
cmpl
jne
push
push
push
push
call
add
add
add
mov
in
shr
fwait
add
repnz
add
push
repnz
cld
je
add
pop
aam
xchg
add
mov
add
cld
push
mov
arpl
xchg
add
loopne
lcall
js
add
hlt
mov
mov
add
jp
add
mov
mov
rolb
push
jns
add
jno
arpl
xchg
test
add
pop
pop
push
lea
pop
pop
push
push
push
push
push
push
push
push
call
pop
add
mov
add
mov
xchg
pop
scas
stos
mov
jl
pusha
add
add
scas
jmp
mov
add
mov
add
fmul
outsl
add
add
mov
add
clc
add
add
stc
pop
add
push
fildl
add
add
fadds
add
xchg
pop
cmc
mov
mov
jecxz
out
add
pop
pop
pop
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
push
mov
stos
aad
xchg
scas
push
xlat
add
rclb
xchg
add
add
jp
out
test
add
pop
xchg
add
add
lds
add
cltd
lods
add
insb
add
add
add
add
xchg
add
data16
jo
add
push
subb
add
mov
and
push
sub
ror
pop
ret
push
rol
shr
add
pop
push
mov
add
push
push
push
call
add
test
add
add
pop
hlt
lret
add
add
ret
fiaddl
add
add
add
push
add
stos
push
push
add
pop
add
loope
add
ljmp
addb
mov
rcr
add
scas
insb
cmpsb
add
clc
outsl
mov
add
stos
flds
add
add
push
add
cli
je
mov
lea
pop
push
push
push
push
shl
ror
shr
shr
pop
push
mov
push
sub
xor
pop
lea
push
sub
add
dec
pop
sub
push
add
pop
mov
push
add
pop
shr
add
mov
push
inc
pop
mov
add
push
push
push
push
push
push
push
push
push
push
call
add
add
add
shlb
pusha
add
call
ja
mov
mov
stos
add
sub
add
stos
pop
fcmovbe
loopne
add
push
add
mov
add
sahf
jbe
fcomps
lahf
pop
add
add
add
sti
xchg
add
add
add
add
out
jp
in
add
add
sar
in
xchg
pop
add
mov
mov
push
push
push
push
push
push
lea
push
push
call
fiadds
add
add
mov
arpl
imul
add
mov
add
fisttps
std
add
iret
jge
lea
clc
add
add
test
mov
stos
pop
scas
popl
mov
add
jne
popl
push
add
push
data16
pop
pop
test
loope
mov
jp
testb
mov
outsl
aam
movsb
jns
ret
add
mov
lea
pop
cmp
jne
push
inc
pop
cmp
jne
mov
push
sub
not
pop
movl
push
xor
shr
shr
pop
jmp
mov
mov
push
lea
push
push
push
push
push
push
call
add
add
cmc
add
stos
add
outsl
cmpsl
add
mov
add
mov
roll
pop
add
mov
add
add
in
add
add
scas
mov
jne
popa
jo
je
movsb
mov
add
adcl
in
add
out
ja
cmc
add
out
add
add
je
cltd
add
add
mov
aam
bound
sub
jne
mov
movl
push
push
push
lea
push
push
push
call
mov
add
call
mov
push
add
rolb
add
outsl
push
rolb
ret
add
jle
mov
sti
mov
lcall
int
or
add
add
add
movsb
add
add
add
test
add
add
add
cld
imul
mov
loopne
ja
les
xchg
sldt
push
inc
shr
xor
pop
mov
push
shl
pop
mov
push
push
push
call
fstps
scas
nop
add
add
add
popa
mov
lods
xlat
insb
sub
add
add
out
ljmp
popa
pop
outsl
add
out
push
imul
push
pop
pop
add
jbe
jb
lock
mov
lock
mov
add
push
movsl
lock
push
add
loop
mov
lea
pop
cmp
jne
push
push
call
jl
ljmp
fadds
add
add
add
sbbl
mov
stos
shrb
add
add
mov
stos
add
popf
pop
add
add
popf
arpl
lds
outsl
ret
pushf
jmp
mov
add
add
add
pop
add
pop
add
hlt
lea
pop
mov
push
push
push
push
call
je
stos
add
add
push
jp
add
add
fiadds
add
add
xchg
mov
add
add
fimull
xchg
xchg
pushf
add
jle
mov
add
shrl
xlat
insb
test
mov
addl
add
push
fisubrl
lret
add
add
test
jle
add
jge
add
add
pop
movl
jmp
mov
push
push
push
lea
push
push
lea
push
push
push
push
push
call
pushf
add
in
arpl
in
jp
jne
add
jmp
mov
movsl
aad
lcall
xchg
add
add
cwtl
add
stc
popl
add
icebp
add
pop
data16
add
negl
add
scas
into
add
hlt
lea
pop
cmpw
jne
mov
movl
push
sub
pop
jmp
push
push
push
lea
push
push
call
add
add
add
add
stc
add
fadds
ror
andl
enter
mov
loopne
stos
mov
roll
add
add
add
sahf
sahf
add
nop
lret
popa
out
add
leave
mov
mov
push
add
add
test
jl
mov
add
fiadds
add
icebp
add
mov
mov
add
test
fmull
pushl
push
push
push
lea
push
push
lea
push
lea
push
call
insb
push
xchg
add
xchg
add
xchg
cli
fcmovnbe
movsb
jb
mov
add
mov
add
xchg
add
in
add
mov
gs
add
cltd
add
aam
push
jmp
add
pop
ja
xchg
in
add
xchg
int3
test
add
movsl
addb
fmull
push
xor
sub
pop
mov
push
push
push
lea
push
push
lea
push
call
add
xchg
testb
add
add
lods
jae
mov
add
add
pushf
add
push
jne
add
xchg
rolb
push
add
stos
add
loop
mov
mov
mov
mov
pop
rcrb
insb
jns
add
aam
cmc
mov
add
add
add
mov
lcall
test
mov
lea
pop
mov
push
push
push
push
push
push
lea
push
push
push
push
call
mov
fwait
add
std
add
xchg
add
incb
xchg
mov
add
push
ret
xchg
stos
add
xchg
fsub
in
add
ret
mov
add
sahf
fimull
push
mov
add
add
mov
test
push
add
push
stc
add
add
enter
mov
lds
mov
call
lea
pop
mov
push
push
inc
push
xor
add
sub
shl
pop
ror
pop
push
push
lea
push
push
call
xlat
fsub
jl
loopne
add
add
mov
pop
add
add
popl
add
add
jp
mov
rolb
add
mov
xchg
add
add
fwait
jno
jl
out
mov
or
push
xchg
scas
xchg
mov
add
pop
rolb
xorl
add
loop
addr16
add
push
sti
pop
mov
xchg
outsl
hlt
add
add
xchg
jge
aam
bound
pop
push
call
push
lea
push
push
push
lea
push
call
jo
add
add
add
add
call
mov
add
js
js
add
add
add
add
push
lods
aam
mov
push
mov
mov
lret
rclb
push
add
add
in
cwtl
xchg
add
filds
add
leave
add
add
call
xchg
add
cld
lea
pop
cmpl
je
push
push
push
and
add
inc
rol
inc
sub
ror
xor
pop
pop
push
lea
push
push
call
xchg
repnz
mov
add
mov
cmpsl
cmpsl
jecxz
imul
add
mov
icebp
xchg
test
rolb
mov
add
mov
repnz
fcoms
add
rolb
add
fstps
pop
add
stc
add
negb
ljmp
cmc
lret
add
cmpsl
add
int3
iret
lret
add
add
les
iret
add
add
movsl
orl
push
push
shl
dec
shl
sub
pop
call
cmpl
je
push
push
add
not
push
xor
add
add
dec
add
add
sub
shl
pop
lea
pop
push
push
push
call
add
add
add
add
lds
add
add
push
mov
jecxz
lods
mov
jb
pop
shlb
sti
mov
push
xchg
add
jle
add
pop
xchg
les
add
push
push
add
jp
add
out
je
enter
fldenv
in
add
pop
add
scas
add
arpl
mov
lea
pop
push
call
push
not
not
shl
pop
cmpl
je
push
push
rol
rol
shr
push
or
inc
add
rol
xor
rol
sub
inc
sub
pop
shr
pop
push
push
push
push
push
push
push
lea
push
push
call
data16
in
add
pop
mov
mov
mov
add
stos
imulb
add
add
jmp
add
add
add
add
ror
mov
cltd
xchg
add
jbe
mov
add
movsb
cli
out
insb
add
mov
add
mov
out
mov
xchg
pushf
stos
add
pop
call
cmpl
je
push
push
dec
ror
shl
push
xor
add
add
ror
sub
sub
pop
inc
pop
push
sub
lea
not
sub
pop
push
push
not
inc
pop
call
push
sub
pop
cmpl
je
push
push
ror
not
sub
not
push
and
add
shl
sub
add
pop
xor
shl
add
pop
push
lea
push
push
push
push
push
lea
push
call
add
add
cld
add
mov
push
idivl
lods
add
clc
enter
pushf
add
lea
add
add
jl
add
add
mov
aam
mov
jle
add
pop
shl
add
add
cltd
in
clc
shll
roll
cld
int
hlt
lea
pop
push
call
push
sub
lea
dec
pop
cmpl
je
push
push
add
push
push
pop
add
rol
not
ror
add
sub
ror
pop
rol
dec
pop
push
push
pop
call
cmpl
je
push
push
inc
xor
inc
push
push
pop
add
not
sub
shl
add
sub
sub
add
pop
dec
add
shl
sub
pop
push
push
push
push
push
push
push
push
push
call
push
sti
xchg
add
push
nop
mov
popa
add
add
test
add
popf
push
add
rclb
mov
add
add
iret
data16
add
push
push
sahf
add
add
add
in
add
add
stc
scas
outsl
int
movsb
nop
nop
mov
push
add
add
push
add
test
add
add
ja
popl
add
fiadds
xchg
sarl
mov
lea
pop
push
call
cmpl
je
push
push
sub
not
ror
not
push
push
pop
add
xor
add
sub
ror
shr
sub
pop
add
pop
push
sub
pop
push
call
cmpl
je
push
push
sub
push
or
not
add
xor
add
sub
inc
pop
shl
shl
add
sub
pop
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
push
out
push
add
fs
filds
add
mov
add
jbe
xchg
add
add
iret
movsl
mov
nop
out
scas
add
js
add
add
outsl
cli
jmp
add
push
add
nop
add
shrl
add
lods
add
add
add
mov
mov
mov
rcrl
add
pop
mov
add
mov
pusha
sub
call
cmpl
je
push
push
push
sub
add
not
add
add
sub
shl
pop
ror
xor
pop
push
lea
not
pop
push
call
cmpl
je
push
push
xor
sub
xor
push
push
pop
add
lea
sub
add
dec
pop
pop
push
shr
pop
push
push
push
push
push
push
push
push
push
push
lea
push
call
add
xchg
stc
rcrb
add
out
icebp
les
repnz
mov
iret
add
stos
mov
add
jne
pusha
test
gs
idivl
in
into
pop
push
add
add
pop
mov
mov
add
add
jno
les
loope
pop
test
movl
jl
jno
add
bound
mov
jmp
add
add
mov
mov
add
je
lock
int3
lea
pop
call
push
push
lea
push
push
push
push
push
call
add
fildl
add
stos
jb
stc
mov
xchg
outsl
add
roll
add
pop
add
rcll
add
push
add
iret
push
add
roll
leave
notl
mov
add
nop
cld
test
imul
test
add
add
add
test
outsl
add
jae
fldl
add
mov
mov
add
ret
lea
pop
cmpl
je
push
push
sub
add
push
and
add
shr
add
shl
rol
sub
inc
pop
ror
pop
push
push
lea
push
push
push
lea
push
push
call
add
testl
mov
flds
popf
add
push
jge
add
push
add
add
mov
mov
jno
cld
add
mov
add
lret
add
add
add
add
scas
sti
pushf
jl
mov
mov
add
mov
pushf
add
add
mov
stos
add
push
xchg
int3
add
lods
mov
lea
pop
push
push
sub
rol
xor
sub
pop
call
cmpl
jne
push
push
push
push
lea
push
push
push
push
call
xchg
pop
mov
add
popa
push
add
clc
add
rclb
lcall
mov
in
add
xchg
add
push
mov
lock
add
test
add
push
add
add
add
add
pop
ja
pusha
ret
loop
mov
add
shl
mov
add
cmc
add
mov
int3
add
xchg
out
add
pop
mov
movl
jmp
push
push
lea
push
lea
push
lea
push
call
sub
fs
pop
xchg
add
cltd
xchg
mov
pop
cmpsb
add
add
add
xchg
mov
scas
add
addr16
flds
std
push
add
mov
mov
arpl
pop
je
add
nop
pop
notb
mov
in
popa
scas
mov
mov
add
icebp
cmpsb
cli
add
mov
mov
lea
pop
xor
push
dec
sub
pop
pop
push
push
push
push
call
rolb
jmp
jo
jo
add
add
add
add
pop
lahf
loope
repnz
add
fs
gs
lods
add
add
push
push
add
in
push
ret
pushf
add
fisttps
add
insb
mov
xchg
mov
pusha
call
shlb
add
movl
nop
shl
add
add
lcall
add
rolb
popf
mov
pop
pop
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
push
lea
addl
add
imul
loopne
lret
pushf
add
rolb
test
add
xchg
test
lea
mov
add
loope
push
xchg
sar
add
add
add
add
xchg
lcall
add
aam
pop
icebp
add
pop
fcoml
add
and
pop
push
add
add
lea
xor
pop
pop
leave
push
sub
add
inc
rol
pop
ret
push
ror
lea
pop
push
mov
push
add
sub
add
add
pop
add
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
rcr
add
add
add
add
divb
nop
pop
addr16
cmpb
iret
jge
test
add
add
addr16
popa
add
add
repnz
add
bound
in
jb
lahf
add
add
add
mov
xchg
iret
ret
data16
and
cmpl
jne
push
push
ror
push
xor
add
ror
sub
not
pop
add
sub
add
pop
push
push
lea
push
call
push
add
bnd
out
add
mov
loopne
add
add
loope
add
add
add
add
addr16
out
in
test
mov
mov
imul
add
add
add
rcr
out
out
mov
add
add
push
leave
mov
popa
call
cld
add
add
add
out
arpl
testb
pop
jle
mov
lea
pop
pushl
call
push
push
shl
pop
call
push
add
shr
not
add
pop
jmp
push
push
push
call
addr16
add
jbe
andb
icebp
add
stos
pop
add
mov
add
push
data16
addb
add
lods
add
mov
push
add
out
pop
addr16
add
fldl
loopne
int3
je
je
mov
add
add
sarl
jp
xchg
cmpsb
add
cwtl
mov
xchg
add
add
fs
popf
data16
iret
mov
lea
pop
cmpl
je
push
push
lea
push
push
push
lea
push
lea
push
call
in
mov
add
popf
testb
iret
fadd
add
mov
lock
addb
loope
add
clc
add
add
add
imul
pop
add
lcall
sti
js
icebp
add
fwait
addl
jmp
add
add
int3
add
aam
stc
add
fwait
out
mov
rorl
pop
cmpl
jne
push
lea
push
call
out
jno
add
fsubp
push
add
notl
add
add
add
push
js
out
test
add
jne
out
scas
mov
add
imul
push
pop
mov
add
jb
add
add
add
into
jae
js
push
rclb
add
add
push
push
xchg
xacquire
pop
leave
add
pop
push
dec
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
mull
add
pop
sti
add
call
push
fisubl
add
test
xchg
mov
rolb
add
add
lods
int
add
jnp
xchg
add
xchg
add
stos
add
fildl
add
add
push
mov
pusha
sub
push
lea
push
push
lea
push
push
push
push
push
push
call
add
add
pop
cmpsb
pop
push
imul
xchg
lock
add
add
in
icebp
lret
cld
add
scas
pop
xchg
std
les
push
xchg
roll
lahf
roll
ret
add
mov
test
test
rolb
add
push
add
jle
test
testb
enter
addr16
mov
jl
add
ljmp
stos
test
in
mov
lea
pop
pop
leave
push
add
sub
pop
add
push
sub
sub
sub
pop
ret
jmp
cmpl
jne
push
push
not
sub
add
push
and
add
shl
xor
not
sub
sub
add
rol
not
pop
ror
inc
inc
pop
push
push
push
push
lea
push
push
lea
push
call
cmpsb
popl
add
mov
jl
into
mov
test
pop
mov
fisubrs
mul
jge
fimuls
test
add
push
scas
add
add
push
push
pop
add
add
add
out
add
nop
jp
js
fs
mov
jns
addb
add
mov
pop
add
push
clc
clc
mov
orb
pushl
call
push
push
lea
push
push
push
push
push
push
call
nop
fiadds
add
lahf
fldcw
add
add
fnstenv
test
add
loop
bound
idiv
icebp
mov
jbe
fldcw
pop
lret
jp
in
add
add
mov
add
add
add
sbb
js
addl
add
scas
push
add
push
add
lds
add
add
add
add
pop
call
push
lea
push
push
push
push
push
push
call
add
clc
add
add
add
add
mov
fs
les
add
push
pop
ret
cmc
popf
add
les
add
mov
cli
or
mov
add
data16
add
add
cld
add
add
add
add
add
roll
pop
stos
xchg
push
jmp
test
add
loopne
int
add
mov
lea
pop
jmp
push
add
add
shr
pop
cmpl
jne
push
xor
sub
add
add
pop
mov
push
not
pop
mov
push
push
push
push
xor
add
ror
shr
sub
sub
sub
dec
not
pop
sub
pop
push
pop
pushl
push
push
push
push
lea
push
push
push
push
push
call
icebp
lds
push
arpl
jl
xchg
mov
xchg
test
iret
add
xchg
push
loope
outsl
add
add
icebp
add
add
cli
lds
add
mov
add
add
add
test
in
movl
add
add
xchg
rol
add
add
add
lods
pushf
fiaddl
out
mov
mov
mov
cld
lea
pop
call
push
rol
add
dec
shr
pop
call
push
push
rol
add
push
and
add
sub
rol
sub
sub
lea
pop
lea
shl
pop
push
pop
pushl
call
call
push
push
inc
not
dec
push
sub
add
sub
sub
sub
lea
shr
pop
pop
push
lea
push
push
call
mov
jnp
add
add
xchg
rcr
add
jo
add
xchg
add
add
add
subl
add
add
mov
cmc
pop
mov
in
add
add
jbe
fmuls
icebp
jo
mov
cli
test
pop
pop
add
pushf
add
fildl
add
fisubl
std
mov
scas
int
jb
mov
mov
push
into
add
addr16
pushl
call
call
push
push
shr
push
push
pop
add
dec
add
sub
shr
pop
shl
pop
push
push
not
push
sub
add
xor
xor
lea
sub
xor
ror
pop
add
not
sub
sub
pop
push
push
push
push
push
push
push
push
push
push
call
add
jno
popa
pusha
shlb
imul
add
push
shll
add
add
add
mov
pop
out
add
add
je
out
add
rcrb
jno
out
fldl
add
jns
add
xchg
shl
mov
mov
mov
add
add
pop
push
add
stos
jle
add
faddl
add
icebp
mov
ret
add
pop
jp
ficomps
mov
lea
pop
call
pop
dec
jne
push
push
lea
push
push
lea
push
push
lea
push
push
call
in
add
movl
add
int
add
add
stos
mov
mov
add
jns
add
add
push
add
pusha
add
add
imulb
bound
stos
add
ret
pop
stos
jo
fwait
add
int
add
xchg
mov
mov
jo
add
push
push
jmp
add
les
push
or
add
test
add
or
dec
or
xchg
bound
add
xchg
je
add
fadds
hlt
add
lret
call
add
mov
imul
rolb
jne
xchg
pop
xchg
adcb
mov
jb
jo
add
fiaddl
mov
addr16
add
add
add
leave
mov
mov
bound
aad
stos
xchg
shll
cltd
mov
int3
lea
pop
call
push
push
shr
sub
push
or
not
add
lea
sub
sub
add
pop
pop
push
shr
xor
rol
inc
pop
pushl
call
push
sub
shl
pop
push
call
mov
push
push
push
push
push
lea
push
push
call
add
add
add
add
out
add
push
add
mov
push
pusha
add
pop
into
pop
aad
push
gs
jb
int
les
ret
sarl
add
mov
clc
lock
add
add
outsl
jmp
add
pop
add
test
fwait
out
push
jge
lods
pushf
add
add
mov
mov
add
pop
lea
push
push
ror
xor
push
sub
add
shr
sub
sub
pop
add
ror
pop
pushl
push
ror
rol
sub
pop
call
push
call
push
push
sub
add
rol
push
and
add
add
sub
dec
add
ror
pop
rol
pop
push
sub
dec
pop
pushl
push
lea
push
call
push
fcoml
add
test
add
pop
add
mov
ror
pop
out
jns
mov
call
lds
add
lea
push
test
add
cli
add
add
incb
mov
add
add
out
mov
mov
jle
add
add
add
jmp
or
bound
add
rorb
fcomip
sub
pop
lea
push
push
push
push
pop
add
sub
not
shr
sub
inc
shr
sub
pop
not
lea
lea
pop
push
inc
ror
pop
pushl
push
lea
push
lea
push
push
push
lea
push
push
lea
push
push
call
mov
add
add
addb
add
add
add
add
leave
pop
mov
add
lods
ja
enter
int3
add
lret
jmp
add
jne
in
jge
jo
mov
fiaddl
mov
jmp
cld
add
add
mov
add
push
in
mov
leave
add
loop
jae
add
mov
lea
pop
call
lea
push
push
push
push
call
in
pop
mov
add
enter
add
lds
iret
xchg
les
ljmp
lret
add
stos
add
jmp
mov
cmpsb
add
mov
pop
out
clc
outsl
add
xchg
jp
add
flds
add
arpl
popf
jecxz
push
cmpsl
test
jae
add
add
repnz
add
imul
lea
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
sahf
in
add
xchg
xchg
cmc
add
mov
add
pop
jle
pop
add
jle
add
add
mov
out
popa
rol
jo
pop
popf
ljmp
mov
into
add
mov
add
push
lods
add
add
fwait
jl
add
add
iret
add
mov
mov
xchg
add
mov
add
add
mov
mov
lea
pop
push
push
shr
pop
pushl
push
push
rol
add
lea
push
push
pop
add
shr
rol
sub
ror
sub
ror
xor
pop
add
not
lea
pop
push
push
push
call
sarb
push
leave
pusha
push
movsl
xchg
mov
addl
aad
jnp
add
add
xchg
sti
test
int
test
add
jmp
add
hlt
add
fcoms
push
add
add
mov
add
xchg
mov
add
fdivrs
xchg
push
jb
add
ret
hlt
add
pop
lahf
jp
xchg
popa
jge
add
pop
push
call
push
push
rol
dec
push
or
not
add
sub
shr
sub
dec
pop
rol
add
pop
push
push
push
push
call
xchg
loop
add
je
add
add
xchg
add
add
mov
add
add
jmp
add
pop
mov
add
and
pop
jp
add
add
add
xchg
mov
cmc
add
jae
pop
ret
jge
push
add
lods
mov
add
add
pop
pushl
push
lea
push
lea
push
lea
push
push
push
call
xchg
add
mov
add
push
add
fisttpl
jl
add
pusha
add
bound
jl
add
xchg
add
les
add
mov
add
mov
add
add
jmp
lock
push
popf
add
sti
popf
cld
mov
add
add
push
cmc
cli
add
add
fmull
xor
push
push
push
push
push
call
add
int
movsb
add
in
mov
add
js
out
add
xchg
mov
add
lcall
fbstp
add
push
test
push
repnz
mov
add
pop
sti
mov
add
push
xlat
xchg
mov
add
add
fldenv
pushf
cli
addb
add
cltd
add
jmp
add
push
xchg
mov
testb
push
push
lea
push
push
call
pop
jmp
add
movsb
pusha
mov
mov
xchg
adcb
push
add
mov
fists
add
lds
add
addb
mov
stos
rcrl
add
in
add
fiadds
mov
push
add
pop
add
xchg
add
lods
pusha
movsl
cmpsl
mov
lea
pop
call
push
push
add
shr
add
inc
push
or
not
add
ror
ror
rol
sub
rol
pop
lea
lea
lea
pop
push
rol
shl
shl
inc
pop
pushl
push
add
pop
call
call
push
push
push
call
incb
add
add
fists
add
ror
add
add
mov
push
mov
add
add
loopne
fadds
add
popl
rcll
loop
add
pop
into
add
add
push
test
out
imul
add
mov
testb
test
test
add
pop
jmp
push
lea
push
push
lea
push
push
call
lods
addb
add
lret
stc
add
mov
pop
fldcw
fucomi
popf
mov
mov
mov
add
fstpt
aad
out
add
add
mov
add
imul
push
lods
add
xlat
fprem1
add
jb
mov
jge
popa
lea
add
add
enter
iret
mov
lea
pop
pushl
mov
jmp
push
push
sub
lea
push
and
add
dec
not
not
rol
sub
inc
shl
sub
pop
ror
pop
push
sub
pop
pushl
push
push
lea
push
lea
push
push
push
push
call
push
in
add
rcrl
add
clc
shll
ljmp
add
fcomp
cld
call
add
mov
push
add
out
cmpsl
std
fisubrs
cmc
add
int
jno
add
add
jnp
enter
add
mov
add
add
loop
outsl
lods
test
enter
add
mov
mov
pop
call
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
nop
icebp
xchg
xchg
add
loopne
add
add
add
test
jp
loop
mov
add
into
mov
push
fsts
add
add
add
out
add
mov
in
js
add
pop
imul
push
mov
call
stos
xchg
add
add
add
imul
add
sub
add
shrb
push
or
push
add
inc
push
push
pop
add
lea
xor
rol
inc
sub
pop
lea
add
sub
dec
pop
push
lea
push
lea
push
push
push
push
call
insb
add
fiadds
add
cmc
add
frstor
jl
jns
lcall
push
push
lods
rcrb
add
add
mov
mov
add
test
add
mov
add
add
lods
icebp
mov
fidivrl
add
outsl
add
addb
sarb
add
out
add
add
add
mov
lea
pop
pushl
push
sub
rol
pop
call
push
ror
sub
pop
push
push
push
push
call
mov
gs
add
out
add
add
add
fwait
addl
lcall
add
testb
movsb
add
jns
add
ljmp
aam
jno
add
cld
add
jp
cltd
add
jmp
add
ret
add
add
pusha
fs
add
shl
add
testl
add
mov
lea
pop
call
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
add
xchg
fdivrl
lea
add
add
push
add
leave
ret
test
add
push
out
add
add
fiaddl
add
in
add
movsb
rcrl
in
add
stos
outsl
add
outsl
mov
add
jae
jbe
cltd
repnz
cld
fstpl
push
faddl
fsubp
mov
lea
pop
leave
push
xor
not
not
pop
add
pop
push
push
push
push
push
push
lea
push
call
jnp
shlb
out
imul
gs
int
clc
xchg
flds
hlt
nop
int3
add
add
jne
pusha
add
add
add
mov
add
xchg
xchg
add
mov
in
std
xchg
mov
icebp
stos
add
xchg
pushf
xlat
fsubrl
xchg
add
in
add
mov
add
in
mov
lea
pop
pop
push
push
lea
push
push
lea
push
lea
push
push
push
call
jae
add
addr16
add
add
add
loope
jp
out
mov
enter
add
leave
xlat
fstps
stos
add
in
mov
scas
loope
clc
add
aad
add
add
jnp
loopne
mov
add
push
add
roll
add
imul
add
pop
add
add
add
mov
les
push
push
push
push
push
call
xchg
loopne
add
pushf
movb
mov
mov
mov
pop
add
add
std
add
in
add
lods
add
insb
xchg
pop
add
aad
xorb
enter
fisttpll
jl
add
loope
pop
add
out
add
popa
add
cmpsb
adcb
lea
mov
lea
pop
pop
push
xor
pop
leave
add
ret
push
add
shl
pop
leave
push
push
push
push
push
lea
push
push
call
add
add
mov
add
roll
cwtl
popa
add
out
cmpsb
jge
jecxz
add
pop
cmc
add
jnp
mov
add
mov
stc
mov
add
add
sahf
addr16
sahf
filds
lahf
loope
aad
jmp
jo
add
clc
add
mov
add
ljmp
addb
add
add
mov
lea
pop
ret
push
sub
pop
push
push
xor
inc
add
pop
mov
push
ror
sub
sub
pop
cmpl
jne
push
dec
rol
shl
pop
mov
push
lea
xor
not
inc
pop
jmp
mov
and
push
sub
pop
xor
push
dec
not
inc
pop
xor
add
push
push
call
add
mov
add
push
out
add
xchg
push
pop
add
in
shl
mov
gs
cmpsl
add
mov
add
call
mov
pusha
add
mov
loop
stc
cli
lretw
add
mov
jnp
loop
addb
cmpsl
push
fmuls
aad
mov
add
repnz
in
repnz
add
push
add
sti
mov
test
add
mov
lea
pop
xor
push
lea
push
call
add
loope
mov
loopne
add
pop
add
je
out
add
hlt
push
cmpb
mov
into
popa
cltd
add
mov
xchg
mov
pop
add
xchg
xchg
out
lahf
add
add
jne
test
add
andl
repnz
jo
rclb
add
lea
add
push
add
add
jp
insb
pushf
fbld
loope
mov
lea
pop
dec
push
add
pop
sub
push
push
push
lea
push
push
call
ret
addb
stc
cwtl
fadds
jmp
add
add
add
addl
cmpsl
aad
add
scas
stos
fxch
mov
ljmp
mov
xchg
add
fisubrs
mov
roll
loope
lock
push
mov
iret
rolb
scas
mov
xchg
out
add
xchg
pop
jle
add
mov
add
sahf
add
xlat
xchg
enter
mov
lea
pop
jmp
sub
pushl
push
push
call
add
add
add
out
cltd
add
mov
add
xchg
add
add
mov
add
add
pop
mov
add
mov
pop
mov
add
shr
add
add
add
insb
add
add
andl
pop
pop
push
push
push
push
call
push
in
jno
mov
jb
lret
mov
add
add
jne
add
add
fildll
add
add
add
add
lods
jae
add
add
lret
add
add
add
stos
shl
add
js
push
add
add
push
add
cltd
popf
pusha
add
add
iret
imul
mov
testb
loopne
add
mov
lea
pop
sub
push
inc
rol
pop
cmp
jne
mov
push
push
lea
push
lea
push
call
push
add
movsb
add
add
push
lock
out
add
ja
add
add
sti
outsl
add
add
push
mov
scas
add
fisubrl
movsb
add
add
add
neg
add
add
mov
jle
jnp
add
mov
xchg
outsl
jae
add
iret
fsubl
add
lea
pop
lea
push
not
pop
sub
push
push
lea
push
push
push
call
ret
push
add
add
add
mov
stos
mov
into
clc
leave
add
call
lock
mov
mov
jnp
jo
fstl
popa
out
add
mov
add
jge
add
in
xchg
test
add
movsb
fadds
add
add
add
pop
mov
add
pop
mov
push
lea
push
lea
push
push
push
push
push
call
lret
add
in
enter
add
jp
hlt
jnp
pop
arpl
xchg
xchg
leave
add
insb
add
imul
addl
add
add
mov
xchg
test
jle
push
add
add
mov
scas
add
xchg
add
pop
test
add
data16
shr
push
push
push
lea
push
lea
push
push
push
push
call
test
add
add
mov
int3
mov
scas
pusha
lret
mov
stos
ljmp
add
popf
out
fadds
jecxz
outsl
mov
clc
add
add
pop
push
mov
lea
mov
add
add
xchg
test
lock
imul
add
repnz
add
ljmp
add
add
add
add
add
add
add
sahf
fnstcw
pop
add
add
mov
and
enter
push
xor
pop
pushl
pop
push
push
push
push
push
push
call
addr16
add
lahf
add
or
xchg
add
xchg
add
lahf
mov
jne
fldl
push
add
add
ljmp
into
add
mov
shlb
call
out
in
mov
add
jge
add
test
lds
add
add
outsl
jmp
add
add
sar
add
cli
mov
mov
cld
lea
pop
shr
and
push
sub
add
pop
sub
push
lea
pop
cmp
jne
push
dec
add
sub
pop
leave
ret
push
push
push
push
push
push
call
jns
add
add
mov
add
call
jno
add
jnp
add
mov
add
add
push
add
bound
ja
addb
test
add
mov
cltd
add
add
cmpsl
fiadds
mov
imul
out
int3
lds
ja
add
rolb
loope
jne
add
pop
mov
add
push
push
push
push
lea
push
lea
push
push
lea
push
call
push
add
jo
add
popa
outsl
cmpsb
lods
pop
outsw
push
mov
jmp
add
add
add
into
add
mov
ja
hlt
shrl
add
add
add
test
pop
add
call
push
add
pusha
push
add
mov
hlt
add
add
push
jb
add
push
mov
lea
pop
push
push
push
push
dec
shr
shl
pop
push
push
add
pop
mov
lea
sub
push
lea
pop
mov
push
xor
xor
pop
shr
push
push
push
lea
push
push
push
call
popf
add
mov
pop
add
popf
add
add
add
add
arpl
add
scas
loopne
jle
mov
test
xchg
push
test
mov
mov
add
scas
fld
popa
test
fists
add
push
add
mov
add
xchg
shlb
lods
addl
jns
push
add
fld
insb
notb
add
imul
les
sbb
ficoml
test
in
or
push
lea
push
lea
push
call
add
negl
add
add
add
lock
imull
add
xchg
add
lock
jecxz
iret
push
fnstsw
add
add
insb
add
cld
xchg
mov
addb
aam
mov
cltd
add
and
imul
mov
add
pop
mov
push
lea
push
call
lea
add
add
add
lock
test
mov
mov
add
ljmp
lcall
add
adcl
lds
add
add
cmpsl
lock
movl
ror
add
fiaddl
jo
add
fisttpl
pop
add
mov
push
shr
sub
inc
pop
add
xor
mov
push
push
push
push
push
call
add
ja
not
push
add
fldl
lahf
testb
rolb
add
add
fiadds
mov
popa
scas
cltd
jmp
add
mov
push
add
mov
add
add
movl
fcomp
mov
mov
add
in
add
add
jl
les
loopne
call
add
push
lea
push
push
lea
push
push
push
push
push
call
sti
loop
stos
add
xchg
mov
fadds
add
add
mov
xchg
mov
out
jle
insb
add
xchg
add
popf
out
xchg
xchg
ret
add
jle
in
add
ja
add
push
add
imul
addl
add
lret
enter
int
test
add
stos
in
mov
jnp
add
enter
add
cwtl
pop
int
les
inc
or
test
add
add
addr16
in
aam
cli
push
push
push
push
push
push
push
call
xchg
add
add
jp
add
cmpsb
add
fcoml
lea
add
add
mov
jnp
andl
jp
in
add
add
add
mov
lret
fwait
jae
add
add
test
pop
lea
pushf
push
mov
add
fadds
jp
add
add
lahf
insb
loope
cli
in
push
mov
data16
pop
add
cmpl
jne
xor
push
add
inc
pop
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
call
test
add
mov
add
lret
aam
add
add
jle
mov
mov
out
add
mov
loopne
mov
testb
addb
add
add
add
add
mov
popa
xchg
add
add
lods
stos
xlat
jp
cltd
add
rcrb
add
jns
xchg
mov
xchg
add
gs
call
add
add
add
pop
pop
push
shr
not
not
dec
pop
pop
push
rol
shl
pop
pop
pop
push
lea
push
push
call
arpl
push
add
out
ja
jb
mov
add
lcall
jne
add
roll
jns
add
pop
xchg
pop
add
in
mov
add
add
je
pop
pop
add
addr16
xchg
jl
stos
mov
shl
in
push
imul
add
popa
add
jo
add
add
jns
add
add
mov
movsl
in
add
pushf
aad
leave
ror
push
or
leave
ret
mov
push
push
push
lea
push
push
push
lea
push
call
add
mov
stc
add
mov
add
add
in
add
add
jnp
jno
pop
add
add
mov
outsl
add
xchg
jb
add
add
in
jl
cld
add
in
add
insb
add
xchg
push
fcompl
xchg
add
add
loopne
add
add
add
mov
add
pop
add
add
outsl
out
aam
bound
add
push
shr
pop
push
push
push
sub
pop
pop
pop
mov
push
push
push
lea
push
push
lea
push
call
clc
push
fldl
add
sti
xchg
lcall
les
xchg
push
add
add
add
jo
js
mov
aad
shl
add
jle
mov
test
lcall
data16
add
add
lock
std
mov
jno
mov
mov
loopne
fadds
and
mov
add
call
add
out
pop
in
fmull
call
push
push
push
push
push
lea
push
push
push
call
add
icebp
movsl
in
mov
mov
add
add
aad
add
mov
add
jb
out
lcall
add
pusha
cld
mov
out
add
lea
jne
add
add
movl
jl
jne
push
fsubrl
push
addl
mov
hlt
lea
pop
xor
push
inc
add
sub
lea
pop
pop
pop
push
not
pop
pop
push
lea
push
push
push
push
push
call
lods
jb
add
jl
je
out
add
add
mov
out
jo
add
add
outsl
ja
add
add
jmp
hlt
jecxz
call
mov
loope
add
mov
pop
cltd
add
mov
xchg
mov
int3
fildll
add
add
add
jo
add
add
gs
loopne
xchg
mov
lea
pop
pop
pop
push
push
push
push
lea
push
lea
push
push
call
add
jae
shrb
jle
popf
add
jo
data16
mov
mov
mov
jnp
sar
add
lods
add
out
pop
rclb
xchg
jge
int3
int
fldpi
add
add
add
add
add
pop
add
idivb
jle
call
in
jns
add
add
add
mov
add
data16
leave
push
push
lea
push
push
push
push
push
push
call
add
addb
int
clc
fildll
add
add
movsl
add
mov
mov
mov
add
pop
enter
add
add
add
fbstp
add
mov
sub
add
xchg
test
cmpl
mov
sbbb
add
mov
lea
pop
ret
push
mov
push
push
push
call
add
cmc
stos
jb
addr16
mov
add
add
jb
add
mov
jo
xorl
fildl
add
faddl
cmpsb
jge
test
jle
fs
add
les
add
add
add
cli
out
testb
add
jo
add
jb
add
data16
iret
in
add
mov
jmp
add
rolb
shl
add
add
xchg
jmp
xchg
add
pop
add
push
xor
add
pop
push
push
push
push
push
call
lds
sti
jbe
add
add
add
add
subb
outsl
jne
add
jle
add
push
gs
add
movsl
lret
lret
add
add
popf
out
addb
cli
add
mov
pushf
add
add
push
add
add
lcall
shlb
mov
add
movsb
fildl
fisubrl
xchg
jmp
add
pop
mov
sti
fwait
repnz
lea
pop
push
push
lea
push
lea
push
call
mov
push
push
mov
mov
scas
pop
filds
mov
repnz
add
stos
add
fisubs
cmc
fldl
push
mov
add
add
jne
xchg
add
data16
add
pop
jno
rolb
add
popa
add
add
add
in
push
push
push
loopne
add
aam
mov
lea
pop
mov
push
push
push
lea
push
push
push
push
call
shrb
add
add
add
add
flds
add
add
lret
movsb
ror
filds
add
pop
lods
testb
arpl
out
add
lcall
js
pop
xchg
add
hlt
out
movsb
icebp
gs
in
mov
shl
into
add
add
call
add
ffreep
popa
mov
add
add
pop
push
pop
push
push
push
push
lea
push
push
push
push
push
push
call
aam
add
lret
add
mov
mov
add
loop
in
add
add
pop
add
add
add
out
popf
add
add
jle
add
mov
insb
add
lods
xchg
jns
int3
add
scas
repnz
scas
add
stc
mov
add
mov
lea
pop
lea
push
push
push
push
push
push
push
push
lea
push
call
add
test
rcl
mov
add
pop
shl
data16
push
add
xlat
add
add
fistpll
movsb
add
jo
add
fldl
add
add
lea
mov
add
add
add
add
mov
add
iret
bound
mov
imul
scas
loope
add
pop
sub
push
add
shr
ror
pop
mov
push
push
call
add
add
mov
add
cltd
enter
add
add
add
add
lock
sar
clc
mov
jmp
add
push
mov
mov
fbstp
add
fnstsw
nop
add
add
stos
xchg
lea
add
iret
add
add
pop
shr
add
mov
push
inc
inc
inc
inc
pop
add
pushl
popl
push
shr
rol
add
pop
mov
add
push
lea
push
push
push
push
push
call
clc
mov
iret
call
jge
negb
pop
ffreep
test
movl
mov
mov
add
add
xchg
roll
xchg
mov
add
leave
movsb
add
cwtl
imul
add
xchg
jne
add
add
movsl
aam
test
clc
lods
ret
add
xchg
add
add
add
add
add
add
lea
mov
pop
xor
lea
mov
push
sub
dec
dec
rol
pop
add
xor
call
push
push
lea
push
lea
push
lea
push
push
call
add
jne
mov
add
ljmp
add
gs
add
push
into
add
add
add
add
jbe
add
in
mov
mov
stos
add
xchg
lea
mov
xchg
addr16
add
add
add
add
xchg
test
add
xchg
jle
mov
jle
mov
mov
cmpsb
mov
pop
aad
leave
call
pop
xchg
divb
add
mov
lea
pop
add
push
add
pop
nop
nop
push
ror
pop
cmp
je
push
sub
lea
pop
nop
nop
push
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
push
rclb
add
xchg
add
add
mov
fldl
je
add
lds
push
xchg
jp
loopne
jmp
jbe
stos
add
call
add
add
jno
push
add
cld
add
out
mov
push
add
add
roll
add
mov
movl
mov
lea
pop
inc
push
push
push
push
push
lea
push
push
call
adcb
flds
test
lods
add
iret
add
je
bound
mov
lret
jb
fisttps
ja
jno
arpl
add
add
xchg
mov
add
andl
push
mov
data16
jecxz
in
add
add
add
add
pop
add
js
push
add
stos
out
push
mov
divb
bound
nop
push
push
push
push
push
push
lea
push
push
lea
push
call
into
jbe
push
out
cmpsb
in
stos
add
xchg
insb
add
add
add
mov
add
jge
xchg
shll
mov
imul
add
addb
add
jnp
lods
rolb
iret
jl
sarb
in
add
push
add
roll
test
push
jge
add
add
push
rolb
add
mov
lea
pop
nop
cmp
jb
push
lea
pop
xor
push
push
lea
push
push
call
add
mov
add
popa
sahf
add
add
repnz
mov
add
loope
mov
add
add
iret
pop
pusha
add
xchg
js
push
add
add
and
nop
add
fldcw
mov
xchg
mov
mov
jbe
add
pop
add
roll
push
adc
xchg
add
add
loopne
pop
add
movzwl
push
lea
push
call
mov
add
mov
add
clc
flds
mov
mov
out
mov
fld
retw
in
add
add
add
pop
loopne
leave
popa
mov
scas
out
test
add
jl
je
in
add
jns
fisubl
add
fsubr
add
sti
add
aam
bound
pop
mov
add
mov
push
shr
rol
pop
xor
push
lea
push
push
push
lea
push
call
mov
loopne
mov
add
pop
stos
arpl
add
addl
push
add
add
mov
iret
add
add
mov
add
add
out
repnz
add
ret
add
pop
push
subb
push
add
xchg
fldl
jns
test
push
xchg
add
gs
add
add
addr16
push
lock
in
scas
mov
mov
les
stos
mov
lea
pop
xor
push
dec
shl
lea
pop
shl
xor
shl
push
lea
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
jbe
lret
add
cwtl
add
loope
jne
popa
add
mov
jae
rolb
add
enter
pop
add
xchg
add
add
lahf
push
into
gs
faddl
pop
add
add
add
add
add
icebp
add
xchg
add
add
add
add
jp
int3
je
push
push
add
faddl
mov
add
add
add
add
add
push
pop
mov
out
scas
add
cmpsl
xchg
add
lods
add
mov
lea
pop
xor
shl
xor
push
lea
pop
mov
add
push
push
push
lea
push
call
popf
je
jo
add
fs
add
xchg
add
mov
std
mov
push
add
add
jno
add
mov
add
jb
add
jl
add
add
pop
add
jb
add
add
add
pop
jb
hlt
add
aam
xchg
jmp
popf
movsl
cli
add
add
add
fs
push
add
add
add
mov
xchg
out
jp
push
mov
mov
mov
lea
pop
pop
pop
push
push
push
push
lea
push
push
push
call
mov
mov
jbe
add
add
mov
sahf
xchg
mov
add
add
add
add
add
hlt
lock
popf
push
xchg
add
andb
fs
add
pushf
xchg
cmpsl
icebp
in
test
faddl
movsl
imul
xchg
jnp
mov
fucomp
xchg
add
movl
pop
je
stos
popa
outsl
mov
rolb
push
add
add
add
add
pop
pop
pop
push
xor
not
pop
leave
ret
push
push
lea
push
push
push
push
call
js
add
jb
cmpsb
add
add
add
add
mov
mov
lcall
add
je
mulb
push
add
push
loop
add
jl
add
xchg
cld
andl
mov
rolb
add
xchg
add
push
mov
add
add
cli
enter
pushf
imul
add
loope
xchg
mov
xchg
jo
les
in
push
push
push
push
lea
push
lea
push
push
call
lds
mov
xchg
pop
testl
mov
add
add
add
mov
mov
jno
aad
add
add
push
cmpsl
repnz
push
mov
out
lea
shr
stos
add
into
repnz
add
mov
lea
pop
push
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
add
cmc
add
add
add
pop
lods
mov
add
add
add
pop
lods
add
add
lcall
add
clc
mov
movsb
add
jo
ret
add
add
jge
ljmp
jnp
mov
popa
in
add
mov
add
jecxz
filds
mov
cltd
add
popa
jmp
add
mov
mov
int3
lea
pop
push
push
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
call
scas
fcmove
stos
pop
in
add
int3
xchg
lahf
add
data16
cmc
add
add
add
ljmp
loope
mov
pop
add
mul
xchg
popa
add
add
test
add
add
mov
cmpsl
add
xchg
add
push
add
add
divl
cld
lea
pop
mov
push
inc
inc
add
pop
mov
push
push
call
add
scas
icebp
add
push
jl
pop
add
addl
fcoms
incb
add
add
in
add
add
scas
addb
mov
jp
test
add
cwtl
subl
loope
add
sti
add
loopne
add
cwtl
add
add
add
enter
addb
or
rorb
test
or
add
pop
mov
push
push
push
push
lea
push
push
call
xchg
add
icebp
xchg
add
add
mov
add
mov
stos
push
add
push
stos
mov
loope
jl
lea
shll
add
mov
jnp
add
add
icebp
push
into
sarl
cltd
rorb
add
mov
lds
scas
lds
fwait
add
jae
add
imul
lea
pop
test
je
mov
push
push
lea
push
push
push
push
call
add
mov
ljmp
add
rcrb
jmp
ljmp
test
add
lods
cmc
mov
roll
test
xchg
add
jmp
mov
push
lods
add
mov
add
enter
roll
enter
add
add
pop
mov
push
push
lea
push
call
test
bound
cmpsl
int3
mov
stc
arpl
call
add
div
movsb
mov
movsl
push
add
loope
jmp
add
xchg
cld
pop
mov
fs
rcrl
hlt
data16
jle
xchg
out
add
cmc
test
add
icebp
add
jnp
mov
add
xchg
xchg
add
mov
lea
pop
mov
inc
cmp
je
push
shr
not
xor
pop
test
je
push
push
push
call
call
add
imul
mov
ret
jecxz
add
out
add
jnp
mov
add
push
add
repnz
movl
add
mov
add
fwait
push
fbld
arpl
add
mov
mov
push
ljmp
jmp
les
push
inc
push
shr
xor
sub
pop
cmp
je
push
add
ror
pop
test
jne
xor
push
push
push
push
lea
push
lea
push
lea
push
call
add
or
pop
out
fildl
out
add
enter
std
pop
gs
fwait
add
lea
sti
mov
mov
add
push
movsl
add
mov
add
rclb
pop
je
cltd
xchg
xchg
nop
mov
add
mov
add
add
lea
pop
pop
push
push
push
push
call
cmpsl
leave
add
mov
add
movsb
add
ret
mov
sub
add
mov
cmpsl
loop
add
mov
mov
push
add
add
push
add
xchg
xchg
addb
incb
add
add
in
movsl
out
arpl
add
movsb
add
out
ficomps
int3
lea
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
pop
add
lcall
mov
add
movsl
push
shll
add
mov
add
ret
lret
aam
add
jecxz
xchg
imul
push
add
add
test
pop
enter
js
movb
aad
enter
mov
call
data16
rcrl
add
sub
push
push
lea
push
call
mov
loope
add
stos
add
add
shr
add
mov
add
testb
add
mov
shl
cmpsl
sti
add
add
scas
jecxz
add
in
push
mov
int3
add
pop
add
popf
test
in
into
add
jmp
out
pop
fiadds
add
add
shl
jne
mov
mov
lea
pop
pop
leave
ret
push
lea
push
push
push
lea
push
call
xchg
shl
push
hlt
mov
push
test
pop
popl
add
scas
add
ja
shll
add
pop
add
call
pop
jmp
add
mov
add
add
call
idivb
push
fcomip
add
pop
add
add
pop
loopne
add
stos
pop
outsl
cltd
testb
add
add
out
int
add
xchg
add
pop
mov
inc
cmp
jne
push
push
push
push
lea
push
push
call
mov
loop
add
movsl
add
mov
jb
add
add
mov
add
pushf
add
add
xchg
add
cmpsl
add
jne
add
add
test
scas
jne
mov
add
mov
jae
jo
repnz
stos
fld
arpl
xchg
add
mov
jl
mov
lea
pop
lea
mov
push
add
add
lea
pop
test
je
mov
push
not
sub
lea
pop
add
cmp
jne
push
push
push
push
lea
push
push
push
lea
push
push
call
add
pop
add
pop
add
test
enter
pop
rcll
pop
add
add
stos
mov
add
add
jb
fdiv
mov
fiaddl
jne
mov
add
add
lahf
add
imul
cli
cwtl
push
add
add
add
addb
js
add
mov
pop
rcrl
mov
lea
pop
mov
test
je
mov
push
sub
inc
xor
pop
add
cmp
je
jmp
push
lea
push
push
call
fwait
mov
leave
jnp
mov
add
add
gs
lock
cmpsb
jne
jl
cmpsl
lret
scas
scas
test
pop
in
mov
cwtl
add
popf
add
out
jle
add
mov
ljmp
aam
lea
sahf
add
xchg
lock
je
imul
pushf
add
ror
xchg
add
push
jns
filds
add
add
lcall
add
fwait
mov
lea
pop
xor
pop
pop
push
add
shr
lea
pop
pop
push
push
call
cli
faddl
cld
add
add
mov
push
mov
enter
add
add
add
jp
sahf
ftst
out
add
jne
hlt
mov
les
test
xlat
mov
add
cld
add
mov
push
lret
fidivrs
mov
add
add
testl
nop
push
pop
push
push
add
add
xchg
mov
lea
pop
pop
push
pop
leave
ret
push
lea
lea
sub
pop
lea
pop
push
push
push
push
call
call
add
jae
add
pop
add
add
add
add
add
lds
stos
add
jle
add
fdiv
add
mov
jecxz
int3
in
add
addl
std
arpl
push
iret
add
jmp
std
pop
ror
mov
lea
pop
pop
push
push
push
lea
push
call
push
leave
sahf
fiadds
xchg
push
add
mov
scas
pop
add
mov
std
shl
add
lahf
pushf
incb
push
add
mov
in
jns
add
jne
add
xlat
add
mov
add
mov
mov
test
add
add
in
add
add
idivl
add
cld
lea
pop
pop
pop
leave
push
not
lea
ror
shr
pop
ret
mov
pop
push
shr
pop
pop
pop
push
add
pop
pop
leave
push
push
call
add
add
into
leave
add
cwtl
jne
lcall
jl
popf
add
mov
xchg
mov
shlb
imul
sti
add
mov
add
rolb
loop
into
add
mov
jb
mov
add
jmp
add
add
xchg
add
add
stc
aad
jbe
add
mov
mov
add
nop
mov
lea
pop
ret
rol
rol
push
push
lea
push
lea
push
push
call
mov
add
ljmp
add
jae
add
test
xchg
shr
xlat
fadds
rcrl
add
std
xchg
add
out
add
mov
stos
pop
in
mov
jnp
int
add
mov
jne
add
add
push
add
lock
xchg
pop
mov
push
lea
add
add
add
pop
xor
push
shl
add
shr
pop
inc
cmpb
jne
ret
mov
shll
sti
movsb
shll
sti
movsb
shll
sti
movsb
adc
sti
movsb
mov
mov
sti
loop
mov
sti
movsb
sub
sti
sub
mov
add
inc
aaa
ljmp
xor
cmpl
mov
out
lahf
jnp
lea
repnz
pop
mov
in
enter
xor
stc
sub
fdivp
push
dec
ljmp
cmpsl
xor
hlt
mov
mov
fbld
repz
fcmovnbe
aas
dec
xor
mov
mov
bound
in
adc
pop
or
push
je
movsb
imul
push
stos
mov
idivb
cmp
sbb
sbb
scas
cmpsl
pop
in
loop
jl
push
les
je
jl
fcomps
xchg
leave
out
and
add
xor
or
aas
testb
sbb
pop
lods
testb
xor
gs
movsb
sbb
mov
push
cmpsb
adc
or
mov
fs
mov
shlb
xor
ret
mov
push
mov
addr16
stos
pop
jmp
jg
ret
inc
pop
adc
mov
jl
outsb
repnz
inc
push
mov
orps
xchg
das
adc
insb
and
mov
in
mov
int3
imul
mov
jns
inc
cld
mov
sbb
ljmp
hlt
fisttpll
xor
sbb
xor
repnz
rcrl
dec
lret
fisttpl
sahf
sub
push
sbb
addr16
or
fs
loopne
mov
lret
fldt
pop
mov
adc
cmpsb
cmpsl
fcoms
pop
xlat
mov
aas
out
or
das
xchg
and
xor
repz
sub
hlt
cmp
enter
mov
xchg
and
sbb
fldl
rsqrtps
mov
xchg
mov
jl
les
cltd
xchg
push
xchg
ret
and
push
xchg
jno
xchg
rol
jo
inc
ret
jmp
push
mov
adc
inc
dec
dec
jnp
lods
sarl
cltd
test
pop
dec
es
add
mov
dec
mov
insl
add
movsl
jno
adc
pop
pop
and
add
xchg
push
in
cmpsb
test
fisttpl
inc
dec
jle
inc
push
std
xlat
fwait
loopne
aad
loopne
mov
dec
mov
mov
jle
fidivl
adc
and
mov
in
add
push
mov
jmp
sarl
and
push
rolb
test
mov
fistl
ret
adc
loopne
gs
insl
es
jns
addr16
or
xchg
test
push
jb
loopne
and
das
testb
xchg
cltd
sub
loop
push
mov
mov
pop
test
xchg
jae
sti
xlat
pop
adc
sbb
outsb
es
in
lods
jmp
outsl
inc
or
mov
xchg
adc
pusha
add
jmp
xor
mov
push
cmpsl
sub
fimull
push
add
adc
jecxz
and
lret
mov
inc
fidivrl
add
dec
xor
mov
adc
cmpsb
rorb
test
popa
call
mov
xchg
into
aam
cmpb
xchg
adc
inc
sbb
xor
lods
dec
ja
or
iret
and
not
jb
out
lods
cwtl
hlt
mov
mov
dec
or
dec
xchg
xlat
mov
push
mov
lock
dec
xchg
xchg
divl
mov
daa
lea
pop
aad
pop
or
jecxz
jns
inc
sbb
and
pop
mov
mov
push
mov
in
ds
call
dec
cmpsl
push
mov
jmp
inc
shll
insb
cmc
mov
xchg
sbb
scas
jp
inc
loopne
cmp
loopne
mov
xor
jno
imull
xor
fsubrl
mov
push
loope
daa
xchg
inc
cwtl
gs
daa
jmp
jnp
xchg
push
cltd
out
pushf
orb
xor
mov
mov
stos
mov
ja
cltd
pop
xor
or
cmpb
sbb
jb
cwtl
push
mull
push
lcall
and
mov
or
jb
pop
jns
xor
sti
mov
sbb
add
orb
jns
cmp
ds
cmp
xor
cmc
imul
dec
pop
lret
inc
fsubs
aad
roll
add
imul
cmp
mov
inc
pop
mov
flds
inc
mov
out
and
lock
xchg
sub
adc
jp
jmp
or
mov
pop
popa
aad
or
push
shll
sbb
jecxz
push
test
adc
and
push
cmp
cmp
adc
clc
aam
adc
mov
and
hlt
dec
xchg
outsb
mov
iret
hlt
xor
std
les
leave
in
gs
jl
jg
nop
cmp
push
int3
sub
out
divb
js
iret
bound
icebp
xor
movsb
pusha
push
sbb
dec
xor
inc
ret
sub
out
jp
andb
push
pop
rorb
sbb
jmp
movsb
mov
in
mov
in
and
and
popa
inc
movsl
mov
imul
jbe
push
js
jno
xchg
movsb
inc
and
xor
and
adc
or
dec
or
lods
jmp
repnz
test
and
xchg
push
cmp
jp
cwtl
sub
mov
or
orb
xchg
ret
pop
int3
adc
hlt
js
pop
xor
mov
sbb
and
mov
in
jp
test
adc
push
test
sbb
leave
push
aaa
sub
je
mov
daa
cmc
scas
cmpsb
das
push
dec
and
pop
addr16
xor
test
lods
inc
adc
rcrb
sub
and
xchg
xorl
pop
sub
outsb
scas
call
pop
or
push
and
mov
lahf
lahf
inc
out
xor
pop
sub
repz
les
arpl
or
push
outsb
cs
adc
jp
ja
mov
jno
movsl
jbe
pusha
inc
cmc
or
test
mov
lds
fwait
sbb
subb
mov
faddp
adc
out
pop
adc
cmp
push
dec
sub
cmp
inc
jecxz
lock
das
loopne
std
fbstp
cmp
inc
mov
decl
out
subb
push
ret
iret
push
mov
cmp
int3
inc
call
popa
xor
leave
inc
ss
cli
insb
push
add
inc
mov
jae
mov
call
mov
popf
popf
xlat
pop
push
inc
sub
lods
icebp
inc
inc
cwtl
mov
loop
lcall
aam
dec
adc
lea
jo
ds
mov
testb
psubsb
fldl
jae
and
call
imul
cltd
fiaddl
push
out
adc
pop
mov
pushf
jp
pop
lods
sbb
repnz
pop
xor
push
fcmovne
dec
mov
or
rcll
sbb
cmp
ror
jecxz
or
test
jnp
movsl
sahf
in
divb
sbb
shlb
mov
add
fnstenv
pop
dec
mov
xchg
mov
xchg
pop
jmp
test
notl
add
pop
cmc
lock
pop
in
jl
fdivl
pop
cltd
inc
repz
mov
xchg
push
test
sub
adc
loope
xor
sbb
into
mov
fwait
adc
push
pop
mov
stc
test
shlb
adc
fldenv
mov
mov
pop
mov
add
jb
rolb
flds
adc
sbb
add
popa
movsb
ljmp
xchg
clc
cli
je
not
js
fidivs
mov
jmp
sub
test
out
shr
jne
jecxz
jl
lahf
popf
int3
push
fsubrl
outsb
outsb
jnp
xchg
sub
dec
imul
and
push
lods
inc
push
shlb
cmp
inc
mov
rolb
mov
jge
push
sub
jb
jle
scas
dec
movsl
lahf
lea
pop
sbb
lret
sub
fwait
lods
fwait
mov
movsl
sub
push
pushf
or
inc
ret
test
pusha
popa
insb
and
clc
pusha
or
aad
add
in
mov
loope,pn
adc
mov
dec
fwait
push
mov
push
push
inc
and
pushf
or
repz
inc
hlt
jae
mov
or
pop
icebp
pop
xchg
iret
mov
pop
mov
repz
ret
mov
dec
jae
sahf
dec
or
ficompl
or
inc
hlt
inc
mov
movsb
rcrb
pop
xchg
push
adc
push
add
and
sbb
sub
pop
push
xor
je
inc
push
sarl
ja
movsb
in
push
add
xchg
test
pop
jnp
lods
movsl
clc
cwtl
popf
sbb
fucom
jno
fbstp
pusha
mov
jbe
daa
mov
sbbl
les
movsb
xor
out
pop
xchg
adcl
out
in
mov
rorl
inc
adc
add
cmc
pop
pop
rol
enter
call
cs
adc
out
loopne
push
icebp
out
out
out
shll
push
add
icebp
mov
nop
inc
lods
xor
cs
add
clc
scas
push
jo
es
push
cmp
in
cmp
add
ret
pushf
push
adc
mov
add
pop
and
xlat
bound
pop
clc
mov
addb
push
in
aad
out
inc
sub
dec
test
jne
xchg
push
imul
lret
ret
ja
cmova
sub
imul
dec
pop
test
fdivrl
pushl
loopne
jmp
push
push
cwtl
add
and
jle
push
mov
mov
cld
mov
lods
xchg
mov
iret
out
push
jecxz
sbb
insb
ret
dec
sahf
sub
and
out
nop
ds
jne
scas
out
mov
addb
cmc
xchg
or
ss
lahf
sti
push
dec
inc
fimull
movsb
dec
ficoms
insl
add
push
pop
sub
inc
rol
push
loopne
fsubl
jne
pop
or
push
xchg
out
popf
ljmp
push
fldt
stos
imull
ret
aad
xchg
add
sbb
jno
fcomps
dec
jmp
mov
inc
xchg
loop
pop
xchg
dec
data16
ret
call
mov
aam
in
mov
pop
lods
gs
ret
sub
mov
lea
mov
and
adc
or
pop
cltd
pop
stos
or
insl
jp
jno
jp
push
sub
std
inc
xor
popf
xchg
push
sti
mov
icebp
shrb
lcall
xor
hlt
sbb
ljmp
cmc
add
nop
mov
pop
stos
inc
cmp
ret
mov
jo
dec
and
sub
xchg
lahf
daa
lahf
cltd
leave
xor
mov
add
jo
nop
mov
inc
mov
mov
sub
push
sub
cmpsl
subl
mov
pop
lcall
roll
pushf
xchg
mov
lods
and
sti
aad
loope
insb
jbe
sbb
or
lcall
push
out
sbb
shl
or
sarb
test
imul
adc
lcall
and
cmp
aas
clc
xchg
inc
shll
add
push
xor
dec
jge
test
fsubrp
insb
pop
pop
inc
pop
and
dec
and
or
adc
cli
mov
stc
add
js
repz
js
mov
mov
pop
cmpsl
mov
adc
fs
mov
in
pushf
out
mov
std
sbb
mov
popf
mov
fdiv
aaa
cmp
xor
adc
cmp
lods
dec
mov
push
bound
pushl
call
fisttps
jmp
arpl
push
mov
sub
cmp
jl
das
sub
fdiv
mov
jge
sbb
loopne
pop
mov
into
loop
std
jbe
fistpl
xchg
push
hlt
fldl
loopne
dec
or
stos
lock
pop
sbb
ret
aam
mov
adc
les
xchg
cmp
out
xchg
xor
fsubl
call
mov
mov
sbb
dec
sub
sub
inc
fildll
fldt
les
dec
imul
movsl
ret
jle
test
push
cmpsl
les
adc
fildll
inc
cmpsl
cs
mov
and
in
xchg
out
cmp
jecxz
pop
adc
xchg
les
adc
mov
xor
lcall
lret
mov
je
add
lods
xchg
test
xchg
sbb
jne
ljmp
and
push
sbb
or
mov
sahf
sbb
xchg
cmpsb
sbb
in
jb
addb
xchg
cmc
pop
stos
pop
pop
mov
pop
movsl
lret
sti
in
add
and
mov
and
jg
cli
jae
ror
lret
pop
inc
inc
out
ss
sahf
sahf
fisubs
int3
cmp
bound
push
sub
fmuls
ja
mov
out
inc
dec
adc
aas
mov
ret
mov
cld
scas
enter
bound
push
arpl
xor
adc
xlat
aam
fs
retw
test
add
mov
imul
sbb
sti
mov
sub
inc
rcrb
jne
cmp
shrl
lret
arpl
int
add
repnz
mov
xor
xchg
cltd
movsb
scas
jb
clc
mov
leave
cmpsl
lret
jb
dec
dec
cld
int3
push
push
lret
pop
cmp
mov
jge
in
ljmp
and
ja
imul
ja
movsl
pop
sbb
xchg
inc
cltd
enter
mov
or
cmp
call
outsb
xor
lods
imul
in
ja
mov
jmp
sti
scas
mov
mov
test
push
cmp
stos
andb
insb
ljmp
lds
add
push
xor
mov
pop
int
cmpsl
cli
pusha
int3
out
inc
xor
cli
jmp
sbb
jbe
add
negl
mov
push
inc
add
ret
sub
stc
cmp
aas
lcall
jae
xlat
or
arpl
push
pop
lds
loop
pusha
fadds
std
add
cmp
adc
xor
push
inc
test
and
push
out
outsb
push
jl
xchg
mov
push
in
add
dec
jb
jnp
mov
ds
add
cltd
das
mov
and
mov
mov
in
loop
in
add
inc
ret
jmp
sbb
mov
in
mov
cs
stc
mov
adc
xor
int3
push
subb
xchg
mov
add
shrb
arpl
insl
xor
pop
popa
fidivl
add
cmpsb
mov
inc
aas
lock
mov
and
je
out
dec
dec
int3
jne
sbb
cld
shlb
push
dec
in
aad
lcall
outsb
ljmp
in
int
jl
push
aaa
mov
mov
jge
test
lock
and
push
xchg
jge
imul
dec
icebp
adc
pop
push
rcrb
push
jg
insb
jbe
test
mov
stc
aaa
insb
mov
pushl
or
out
outsl
push
rorl
jne
and
bound
cwtl
push
imul
xchg
adc
aaa
xchg
lcall
repnz
insl
or
add
add
push
and
adc
fs
stos
popf
js
mov
das
cmpsb
dec
popf
or
mov
or
outsb
or
cli
sbb
cmp
ja
pop
xchg
inc
mov
dec
scas
lods
and
lods
pusha
stos
sub
cmpsb
addr16
sbb
cli
mov
cmp
jo
repz
shlb
add
lret
sbb
or
stc
fcom
mov
mov
jmp
jmp
push
adc
neg
lahf
or
fcomps
outsb
lods
mov
addr16
das
fsubr
daa
jle
add
jp
ret
xchg
cmp
pop
fdivrp
mov
es
ror
ljmp
add
inc
xchg
data16
and
push
rcll
mov
ja
in
jmp
dec
data16
ret
push
and
mov
dec
adc
push
mov
sarb
or
inc
push
ficoms
pop
jo
sub
rcll
ljmp
stos
adc
fsubrl
mov
jo
push
aad
jb
inc
dec
out
mov
xor
je
jne
or
mov
or
sub
lea
fs
mov
mov
cmp
cli
jle
jo
push
les
xchg
xchg
push
pusha
push
pop
xchg
xchg
pop
lcall
cs
lea
sahf
cs
cmpsb
mov
insb
dec
sub
mov
sbb
in
aas
and
pop
adc
mov
dec
push
pop
outsb
lret
aas
cmp
push
pop
jae
outsb
fisttps
jle
cmpb
push
mov
cli
pop
jne
cltd
adc
in
mov
dec
mov
mov
flds
je
in
inc
sti
cvttps2pi
sbb
jge
aam
cltd
or
jno
dec
imul
fs
pusha
fdivrp
out
popa
mov
mov
orb
aad
sub
xor
lods
shlb
ficompl
loope
lds
mov
fistpl
cmp
aam
test
fldt
ret
add
mov
flds
in
pop
or
daa
mov
movsl
lods
push
ret
shrl
mov
rol
in
cli
scas
mov
cld
out
fimuls
inc
add
testb
loop
and
in
cltd
fildll
push
xor
lea
jb
and
add
or
aam
test
push
sbbl
and
shl
lahf
aas
push
ss
into
sub
dec
lods
add
scas
mov
add
es
fnsave
sub
add
mov
inc
xchg
loope
cmp
push
jno
aaa
push
roll
sahf
mov
lds
ret
dec
jne
loope
movsb
mov
add
inc
dec
cld
xchg
sub
dec
fbld
stc
test
cs
outsl
inc
or
notl
xchg
cwtl
aaa
xchg
mov
lock
cmc
filds
jg
rcl
es
stc
xchg
lock
movsl
xorl
jns
popa
xchg
sbb
xchg
cmp
imul
in
sub
les
cmpsl
add
in
test
fimull
addl
xor
imul
sub
arpl
popa
jp
sub
mov
movsb
loopne
xor
xor
ret
and
shlb
imul
push
adcl
dec
xor
xchg
sbb
sbb
arpl
push
xchg
pop
jp
dec
call
push
test
shlb
sbb
cmpl
xchg
xchg
insl
pop
mov
cs
aaa
pop
push
lret
mov
or
pop
repnz
inc
ss
pop
fimuls
popa
dec
adc
pop
mov
mov
inc
sbb
xchg
push
cmp
repnz
out
imulb
inc
mov
in
inc
fistpll
push
popa
xchg
std
les
sbb
jmp
cmpsl
cmovnp
cmp
jnp
and
imul
xlat
jle
cmp
pop
insb
mov
ja
les
cli
insb
fucom
add
jge
sub
sarl
test
es
in
or
and
sbb
enter
xlat
dec
fcmovbe
ljmp
int
aaa
sub
cmp
loop
sbb
popf
outsl
mov
daa
mov
insl
adc
inc
xor
xor
mov
or
call
scas
sbb
ret
mov
pop
and
dec
xor
andl
cmp
push
data16
fdivs
fstps
pop
mov
sub
repz
or
mov
shl
ljmp
or
repz
push
in
ja
sub
mov
adcb
lock
xchg
xchg
jbe
sbb
add
orb
and
add
in
je
dec
outsl
int
or
jmp
repnz
mov
ret
adc
cmp
scas
cmp
sbb
arpl
push
rorl
add
bound
std
add
inc
hlt
dec
rcll
or
jg
fimuls
cwtl
inc
ret
movsb
dec
iret
pushf
cmp
out
mov
aaa
enter
mov
andb
mov
loopne
fbstp
mov
inc
test
popf
scas
cltd
outsb
mov
lahf
dec
add
mov
scas
out
bound
ror
ficompl
add
add
popf
jp
mov
xchg
cmp
adc
xchg
inc
inc
inc
and
or
dec
ja
add
push
lahf
inc
ja
mov
sbb
and
ret
call
insb
test
les
push
push
enter
xlat
adc
out
xor
repz
mov
jo
inc
std
xchg
pop
cs
jno
xor
sub
into
jp
ret
mov
nop
je
and
lea
leave
shll
mov
lds
mov
ficomps
stos
push
stos
mov
mov
cld
jl
or
mov
cmp
adc
les
adc
lds
jl
mov
sbb
cmp
push
pop
hlt
pop
mov
inc
nop
lcall
inc
xor
pushl
in
xchg
mov
push
pusha
jle
mov
add
and
jmp
addl
mov
or
sbb
fbstp
cld
pop
or
ror
and
mov
ficompl
andb
adc
test
das
mov
es
or
arpl
or
loope
adc
inc
ss
push
jo
adc
andb
xor
push
jge
xorl
lds
xor
push
rolb
fstl
rcll
cmpsb
push
mov
jne
repz
jmp
sub
sti
into
shl
push
sbb
dec
dec
adc
adc
dec
lret
mov
fwait
mov
ja
push
movl
cmp
push
psubsb
ljmp
push
ss
shlb
idivl
xor
je
insl
mov
pop
lea
pop
sbb
adc
xor
mov
pop
movsb
pop
xchg
and
mov
add
xchg
repnz
dec
mov
fiadds
andb
icebp
outsb
sbbl
bound
enter
pop
sbb
popf
inc
mov
jbe
fdivs
adc
std
cmp
lods
movsb
mov
hlt
cmc
mov
scas
movsl
lock
jne
jmp
shll
fimuls
aad
dec
or
jo
xchg
das
rorb
jo
dec
mov
je
shlb
mov
pop
jl
dec
inc
out
pop
out
jns
xor
loopne
mov
sbbl
or
nop
in
shlb
pop
push
cmc
aaa
mov
xor
mov
lods
test
movsl
pop
lock
aaa
mov
mov
loopne
xchg
sti
jo
andl
push
sbb
lods
out
fnstcw
imul
push
ror
das
inc
xchg
adc
dec
es
in
scas
std
ds
stos
mov
loopne
jl
push
enter
and
mov
mov
leave
mov
int3
inc
or
cmpsb
sbb
mov
pushf
ret
fnsave
dec
push
je
sub
inc
and
dec
mov
clc
ja
sub
pop
rclb
pop
mov
mov
test
dec
dec
aam
nop
add
lea
and
popa
mov
or
daa
jl
insl
xchg
cmp
jle
add
jp
enter
cmp
lret
dec
push
dec
mov
or
lcall
out
jle
mov
imul
cs
push
rclb
clc
movsl
fsub
jmp
adc
dec
test
push
clc
pop
cmp
aam
test
lret
xchg
pop
or
test
cltd
xchg
movsl
in
mov
cmp
rcl
fistl
push
xchg
gs
call
repnz
push
out
mov
dec
dec
data16
mov
lods
in
dec
mov
stos
ret
insb
in
mov
es
negb
jae
lahf
cs
pop
cwtl
fldl
dec
rcrb
push
inc
add
out
and
shl
scas
clc
icebp
fdivrp
addr16
cmp
iret
xorl
mulb
cmpsl
mulb
sarb
xchg
push
and
jae
cld
loope
xor
rcl
in
xchg
push
mov
push
aaa
aam
popa
xor
push
mov
mov
or
loopne
sub
mul
mov
mov
fucomi
push
add
push
scas
lret
stos
cmp
outsl
and
jbe
imul
pop
jl
xlat
mov
mov
stc
lods
es
repnz
insl
push
pop
mov
ljmp
jmp
adc
in
das
loopne
xchg
dec
movsb
sub
mov
cs
out
pop
push
andl
adc
leave
aam
mov
sub
and
mov
jbe
repnz
or
insb
nop
ljmp
jg
mov
xchg
addr16
xchg
mov
push
sbb
mov
jp
and
push
scas
mov
add
cltd
sub
sti
clc
xchg
les
cmp
fst
pop
das
mov
mov
data16
pop
push
bound
push
inc
sbb
cmp
ss
mov
lahf
pop
cs
pop
ret
inc
or
scas
inc
and
andb
xor
jno
push
insl
lcall
add
scas
push
sbb
popf
sub
add
push
int
into
xor
testb
aam
xor
cwtl
fidivrs
sti
out
xchg
xor
mov
fisttpll
mov
enter
pop
pop
jae
and
test
in
out
sub
iret
paddw
mov
push
sub
shlb
mov
pusha
faddp
push
je
es
or
add
ss
mov
jae
xchg
mov
pop
fst
aaa
test
xchg
xchg
add
lea
fwait
add
jb
or
cmp
ret
xchg
jg
xor
xor
push
lods
stos
ljmp
repz
jb
push
shlb
pop
jl
dec
pusha
dec
pop
jno
ljmp
ror
add
lods
repnz
call
lret
mov
mov
test
mov
cvtdq2ps
clc
jg
addr16
xchg
lret
jae
mov
jmp
sbb
xchg
mov
and
stc
pop
xchg
int3
pop
icebp
enter
inc
or
shlb
add
mov
jl
rorb
jle
and
movsl
nop
xchg
jae
xor
lods
jle
hlt
sub
shll
sbbl
insl
xchg
mov
pop
pop
loop
iret
das
xchg
mov
lds
lahf
lods
test
mov
roll
neg
cmpb
aaa
mov
loopne
daa
xor
imul
es
mov
mov
cld
inc
rclb
ja
xchg
mov
push
mov
mov
jecxz
adc
dec
jns
int3
das
ret
test
xor
jl
mov
mov
sub
add
dec
nop
inc
pop
repz
jbe
sub
aaa
ret
adc
imul
lock
shlb
sbb
daa
cmp
dec
add
adc
xchg
js
fwait
push
mov
cmp
push
int
fistps
jle
ret
mov
aaa
xor
push
mov
inc
aas
add
mov
cmp
push
fiaddl
in
jbe
inc
pop
popa
js
and
les
xchg
cmp
add
jo
or
sub
dec
jno
cmpsb
xchg
in
xchg
js
int
push
pop
dec
add
push
jl
xchg
jp
sub
xor
ss
aaa
mov
lods
sub
addr16
movsb
cld
sahf
daa
jno
in
aad
test
in
fwait
aaa
hlt
mov
add
sub
mov
xchg
mov
sti
mov
out
jg
in
xchg
push
add
pop
loop
push
faddl
xchg
rolb
stos
insl
mov
in
pop
jbe
jmp
cmp
mov
pop
flds
mov
fisubrl
inc
xchg
pop
and
scas
sbb
jl
jmp
movl
xchg
pop
repnz
cltd
jecxz
dec
pop
xor
fcmove
outsb
mov
test
mov
mov
dec
push
int
popa
rcll
inc
jae
pop
or
and
pop
add
mov
inc
cmp
scas
add
xchg
add
sbb
xchg
pop
lret
add
pop
xchg
adc
sub
out
inc
arpl
xchg
push
fisttpll
and
movsb
imul
push
jno
dec
inc
add
ds
adc
in
cltd
jle
aad
push
push
sbb
pop
scas
push
xlat
or
loop
dec
pushf
popf
mov
mov
test
stos
push
jge
push
insb
mov
cwtl
cmp
out
inc
cltd
dec
or
pop
mov
add
pop
adc
xchg
xchg
mov
int
xor
adc
inc
xor
sbb
xchg
call
mov
ja
clc
jmp
push
repnz
xor
push
ret
add
push
dec
fdivrp
fsubr
jbe
scas
sbbl
mov
scas
jbe
out
push
mov
int
xlat
mov
lahf
dec
sbb
ja
jp
dec
push
mov
popf
jmp
pop
mov
add
xor
popa
sbb
push
mov
mov
cmp
lods
and
push
mov
jge
mov
rcrb
cld
test
in
adcb
push
inc
sub
mov
or
jp
xorb
or
pushf
les
aam
roll
sbb
mov
jp
jp
dec
arpl
mov
enter
jle
mov
sti
in
xlat
mov
and
pop
rorl
jg
popf
push
dec
jmp
dec
mov
dec
mov
outsl
data16
mov
fsts
inc
xchg
fnstsw
sbb
pusha
aas
mov
mov
pop
jp
mov
adc
add
fcomip
mov
cmpsb
das
push
out
std
xchg
lahf
mov
add
ret
jae
cltd
pop
pop
adc
mov
add
xchg
stc
add
lcall
mov
outsb
lcall
or
jmp
xchg
fmull
je
mov
pop
pop
rcrl
es
push
mov
mov
dec
add
mov
sbb
rolb
or
push
jmp
repz
lcall
repnz
call
jne
sbb
fmull
sub
jecxz
or
add
push
pop
jmp
xor
or
stos
popf
movsb
lret
divb
push
je
and
in
lret
sub
lea
pop
mov
mov
inc
pop
cmp
es
dec
pusha
jb
into
je
pop
andb
scas
mov
mov
cs
push
mov
and
sbb
push
jae
test
loopne
cltd
cmp
mov
adc
mov
mov
and
push
fwait
xchg
test
stos
xor
scas
xor
vpcomud
mov
aas
pop
push
add
pop
mov
shrl
inc
adc
into
out
in
mov
stos
in
mov
ljmp
mov
mov
pop
pop
cli
pop
sti
or
jns
mov
cmp
mov
pop
ds
in
mov
bound
xor
sub
push
sub
cmp
add
xor
pop
in
mov
ds
f2xm1
xchg
jo
in
aad
add
test
jo
int
pop
dec
leave
and
sbb
fidivl
xor
mov
adc
or
mov
nop
sbb
or
add
push
cs
pop
hlt
jle
jecxz
shlb
bound
xchg
lahf
aam
add
push
rorl
jg
adc
cmp
jno
dec
iret
jmp
cmc
int
in
add
add
cvttps2pi
movsl
cmp
in
adc
cmp
sahf
pop
jno
sti
lcall
and
mov
or
sbb
jg
scas
xchg
fisubrs
arpl
mov
jle
pop
pushf
jbe
push
pushf
in
call
es
or
das
mov
cmp
imul
dec
outsb
popf
inc
adc
in
enter
xor
pop
ds
sub
cmp
clc
aaa
push
mov
pop
mov
or
mov
fwait
xchg
sbbb
aam
shrb
sar
mov
jo
pop
jbe
mov
lea
sahf
clc
push
adc
or
js
outsl
arpl
fmuls
add
jle
mov
pop
jecxz
push
cmp
and
and
add
repnz
pop
sub
in
imul
repnz
fnstsw
hlt
stos
movsb
pushf
ds
cld
jnp
in
repz
pop
mov
cmp
into
or
dec
adc
das
stos
les
inc
or
out
xchg
xor
fiadds
xchg
sub
inc
test
sub
xchg
adc
and
dec
jne
xor
mov
popf
add
daa
sar
sub
lea
loop
mov
mov
aas
popa
mov
pusha
fidivl
std
dec
cmp
aaa
add
mov
inc
mov
fs
sbb
inc
popa
cs
repnz
sub
cwtl
dec
mov
add
dec
push
dec
cmp
add
add
sub
movsb
pop
bound
xor
in
pop
push
cmp
sarb
xor
loop
xor
dec
or
ljmp
out
mov
inc
mov
stos
sub
ss
push
and
hlt
les
push
clc
icebp
xchg
pop
xor
movsl
cmp
ret
mov
cld
mov
movsl
and
xchg
jecxz
mov
aam
js
mov
in
nop
mov
adc
xchg
int3
int3
cmpsb
mov
add
into
ret
in
cmc
ss
das
rcll
cli
jb
or
mov
cmp
xor
mov
fwait
or
push
les
sub
mov
mov
dec
ds
dec
xchg
out
sub
data16
je
pop
add
mov
cwtl
dec
dec
inc
push
inc
pushf
pusha
fdivs
mov
dec
fcmovne
nop
and
idivl
cli
pop
adc
mov
adc
fnsave
dec
shlb
out
and
push
inc
out
xchg
fs
das
leave
push
outsb
pop
imul
scas
push
mov
xchg
mov
clc
inc
cmp
insb
and
mov
pusha
int3
inc
adcl
sti
int3
bound
xchg
mov
sbb
jecxz
pusha
shlb
lret
jno
add
aaa
roll
mov
push
dec
scas
sub
std
fs
jno
nop
dec
in
mov
adc
push
in
imull
cld
and
rolb
add
in
or
mov
aas
push
aaa
int3
sarl
cmpsb
inc
addb
inc
loop
dec
in
inc
daa
mov
cs
jg
loopne,pt
out
dec
xchg
popf
mov
aas
push
dec
push
aam
sbb
inc
add
jae
add
push
roll
sti
pop
nop
test
scas
loopne
and
sbb
dec
dec
dec
aaa
loopne
push
mov
jg
fsubrs
daa
movsb
popa
jno
xor
loopne
add
add
mov
pop
frstor
add
jp
outsl
pop
int3
aas
shrb
outsb
or
dec
nop
lahf
repz
cmpl
arpl
es
adc
movsb
int
pop
arpl
test
mov
ds
aaa
cmp
loopne
pop
std
fwait
ja
addr16
xor
mov
xchg
or
dec
mov
stos
dec
nop
xlat
push
inc
mov
inc
mov
ret
mov
test
out
scas
sbb
mov
data16
xchg
stos
adc
mov
adc
pop
jne
sbb
sahf
fwait
rcrb
mov
lret
adc
jno
daa
test
push
hlt
xor
inc
xor
in
push
int
and
jecxz
xor
pop
dec
lods
mov
jge
ret
xchg
or
stos
push
inc
dec
in
jl
pop
cmp
add
mov
sbb
leave
push
mov
fidivrs
mov
pop
add
and
xor
pop
es
add
push
jecxz
pop
sub
jns
cs
insl
mov
pop
insb
lea
or
xor
and
cmpsl
out
je
rcrb
push
jmp
test
lret
addr16
xchg
sbbb
jp
add
jns
pop
insb
adc
pop
mov
mov
xor
dec
inc
out
into
es
inc
int
dec
inc
adc
xor
data16
and
jnp
call
fwait
sbb
gs
daa
loopne
mov
in
pop
xor
jo
and
and
popf
pop
sbb
bound
test
testl
add
fbld
icebp
test
loope
xchg
push
lods
adc
mov
inc
outsb
movsl
xor
push
pop
adc
push
mov
mov
sahf
rep
sub
sub
mov
movsb
negl
cmp
push
sbb
sbb
ss
sbbb
cmp
jb
mov
lock
js
inc
mov
hlt
jo
mov
push
popa
push
push
fwait
adc
sti
lahf
jbe
push
dec
test
aam
push
insl
and
mov
insl
mov
dec
repz
push
mov
fs
and
push
or
add
js
push
or
loopne
sub
sub
cmc
shlb
push
scas
pop
inc
jbe
rorb
push
fidivrl
sub
mov
call
xor
lock
cmp
les
mov
jo
rol
xchg
push
mov
xor
xchg
arpl
xor
pop
xlat
shrb
dec
push
push
pop
jg
jo
cwtl
inc
ljmp
outsl
dec
in
and
cli
daa
dec
lock
push
push
mov
cli
xor
jb
push
and
adc
loope
test
mov
gs
rcrl
ds
adc
fistpll
add
pop
movsl
jbe
jne
add
cmp
mov
into
hlt
cmp
jle
xor
push
pop
daa
sub
xchg
push
cmp
add
jg
sti
dec
adc
xchg
out
push
jae
xor
cmp
clc
fidivs
loopne
jb
cltd
out
les
pop
adc
add
adc
cmp
jp
ss
out
ja
lock
and
adc
cmp
mov
subl
pop
lods
dec
rcl
out
js
jp,pt
fists
mov
aas
lret
cmp
inc
mov
out
pop
cmp
xlat
bound
pop
adc
les
inc
sti
test
or
sub
push
fs
mov
jmp
adc
loop
cmp
lea
jle
iret
mov
pop
mov
stos
ljmp
daa
mov
pop
js
ror
or
test
ret
xchg
add
inc
inc
push
dec
or
pop
inc
loopne
pop
mov
mov
mov
adc
clc
lret
vfrczps
aaa
adc
and
aaa
push
xlat
jb
pop
out
sahf
fmul
int
dec
out
and
sbb
push
imul
mov
push
dec
jecxz
fstps
sbb
cs
stc
test
dec
ret
adc
xor
xor
bound
pop
test
push
push
test
stc
jecxz
inc
inc
push
pop
pop
cmc
dec
test
add
xor
dec
call
int3
popf
adc
aas
in
dec
mov
out
or
fsubr
jle
mov
dec
in
add
inc
dec
push
and
popf
sbbb
scas
addl
shll
cmpl
push
mov
loop
fwait
mov
cmp
inc
add
data16
les
push
xlat
mov
adc
rcrb
mov
jle
pop
addb
lcall
dec
out
insl
mov
add
shll
xchg
push
ja
fs
pushf
cld
icebp
jmp
xor
dec
ljmp
shll
mov
cmp
mov
lahf
xchg
or
push
sub
mov
test
mov
xchg
mov
outsb
and
cmp
xchg
test
js
iret
sbb
cmp
pop
mov
mov
mov
repz
xchg
add
mov
jle
ljmp
std
sti
sbb
stc
sbb
xor
inc
mov
daa
stos
aad
jns
mov
sbb
pop
mov
lahf
ja
aam
hlt
cltd
aas
leave
adc
sub
fcomps
xlat
aad
sahf
or
cs
xchg
xchg
lret
in
popa
ret
jb
add
mov
aam
pop
jp
out
dec
cmp
cltd
jae
mull
jo
and
sbb
sub
test
and
push
les
pop
mov
shr
or
pop
mov
pop
xor
lods
outsl
cmp
xor
sub
in
sub
loop
rolb
push
add
or
jnp
ds
xor
gs
aam
outsl
adc
pop
push
aam
push
mov
pop
lds
jae,pn
clc
imul
mov
in
cli
test
enter
imul
mov
shlb
rorl
movsb
daa
stos
dec
xor
insl
lods
pop
inc
cmp
ret
mov
sbb
xlat
cltd
fcomps
fisttpll
aad
sub
icebp
inc
add
test
daa
jmp
xchg
movsb
pop
movsb
push
js
xchg
es
fcmovbe
ss
test
pop
addr16
rcrb
shl
sub
in
push
int
pop
stc
mov
dec
mov
dec
inc
sbb
jno
stos
or
les
nop
cs
fstl
jns
jnp
cltd
cltd
shlb
ja
xchg
pushl
add
sbb
imul
in
test
or
test
fnstenv
outsb
fstps
add
loopne
lret
mulb
xor
jns
test
ss
xor
test
out
stos
xor
lock
scas
icebp
cmp
popa
add
ljmp
xchg
adc
in
rcll
test
movsb
int
loop
into
pop
loope
or
lret
jns
mov
or
mov
adc
negl
loopne
inc
adc
inc
test
cwtl
jg
xchg
push
dec
icebp
outsl
cmpsl
or
fwait
jecxz
das
je
jg
cmp
imul
popf
fisubrl
adc
test
add
dec
dec
or
imul
lods
xor
xor
mov
add
test
aaa
xchg
iret
xor
call
mov
inc
shll
jb
pop
xor
es
mov
aam
mov
and
mov
std
nop
sub
mov
sbb
and
mov
adc
stos
fbld
jecxz
lods
repnz
gs
fnsave
jmp
push
jg
repnz
shll
movsb
rcrl
adc
inc
jecxz
pop
adc
sbb
dec
repnz
aam
scas
jae
loopne
inc
lods
and
cmp
jnp
sbb
mov
sbb
xor
push
add
and
inc
jecxz
mov
adc
dec
divl
cwtl
add
mov
jnp
rcrb
push
sub
xor
cmpb
dec
dec
jmp
stos
dec
add
sti
push
ds
mov
sub
push
adc
in
data16
jns
dec
popf
or
sbb
mov
jmp
mov
ret
popa
popf
cld
add
test
out
xor
ljmp
push
xchg
imulb
pop
xchg
stos
mov
movsl
jmp
out
pop
add
jg
xor
repnz
inc
cmp
jmp
dec
mov
enter
iret
add
add
add
lea
imul
xor
mov
fs
mov
loopne
insb
pop
mov
lahf
pop
dec
mov
int3
out
repnz
popa
add
dec
stc
inc
stos
dec
mov
xchg
mov
lahf
out
pushf
mov
ret
push
and
mov
shlb
jbe
or
push
jp
xchg
mov
jbe
dec
scas
jg
inc
cmpsb
mov
adc
jae
cmc
sub
sti
fwait
inc
jmp
stos
mov
lret
sarb
adc
mov
jno
xor
clc
scas
fidivrl
mov
jecxz
cltd
and
std
jb
jecxz
and
inc
mov
jnp
pop
outsl
ja
pop
jne
xor
repnz
test
mov
repnz
xor
mov
ds
cmp
in
je
jbe
cltd
mov
push
dec
push
cmp
nop
repnz
popf
pushf
lea
dec
push
into
mov
mov
insb
mov
xor
movsb
in
inc
xor
arpl
lcall
fwait
dec
or
and
out
pushf
and
shl
push
fildl
xor
jns
xchg
aaa
cwtl
fidivl
xchg
mov
mov
xchg
hlt
jecxz
sub
enter
pop
mov
loop
mov
sbb
or
lcall
scas
out
aad
ret
mov
mov
sub
ret
rcl
cld
lods
cmp
stos
js
pop
test
and
loope
mov
jmp
movl
xchg
push
sbb
pop
scas
xor
das
xchg
js
es
scas
pop
sbb
gs
icebp
mov
adc
insl
adc
das
dec
lods
int3
and
out
fstpt
je
test
jo
in
jnp
sbb
loope
and
mov
pop
mov
or
mov
and
repz
repnz
fldcw
test
xchg
test
cmp
pop
aas
and
xchg
cmp
iret
fcmove
clc
jnp
jecxz
notl
and
icebp
xchg
mov
pop
lock
mov
mov
stos
iret
sbb
add
mov
xchg
arpl
jge
movsl
xchg
aam
pop
xor
cmp
jecxz
jae
xchg
mulb
adc
adc
and
sbb
scas
xor
ret
or
insl
sbb
jnp
dec
fnstcw
push
mov
les
in
dec
cwtl
add
rcrb
xchg
cwtl
cmp
sbbb
das
cltd
int3
add
xor
adc
push
in
jne
mov
outsl
mov
dec
leave
cmp
push
outsl
xor
jl
mov
xchg
into
and
outsl
or
mov
dec
in
scas
or
pop
mov
mov
int
int3
cmp
mov
push
das
jge
das
sbb
movl
mov
gs
xchg
hlt
push
test
sub
dec
les
push
imul
in
je
imul
push
dec
mov
repz
fcmove
push
shrb
push
imul
push
jecxz
dec
dec
add
push
enter
pop
imul
xchg
jmp
or
test
add
and
xchg
in
adc
cltd
fs
adc
cld
mov
bound
jg
cmp
clc
or
pop
cltd
in
pop
jmp
cmp
int3
insb
loope
out
enter
lret
dec
sbb
mov
repnz
fdivr
aaa
insb
ret
jb
dec
mov
jne
jno
sahf
test
shrb
aas
mov
aas
xchg
outsb
test
hlt
mov
js
pop
mov
loop
xor
cmpl
int3
iret
dec
mov
adc
movsl
adc
adc
imul
loop
outsb
xchg
or
mov
ret
xchg
aaa
push
dec
adc
movsb
lods
js
movsl
or
int3
xchg
jns
js
sbb
fcomps
mov
sarb
out
sub
cs
xchg
mov
xchg
mov
aas
adc
lea
outsl
jp
mov
fcom
gs
popa
int
cwtl
fcoms
stos
and
bound
pop
push
repnz
jb
lcall
add
sub
sbb
mov
into
push
in
xchg
mov
mov
adc
arpl
add
jae
mov
lods
mov
mov
lcall
fs
sub
inc
xlat
push
add
lods
out
and
inc
pop
cwtl
add
popf
test
cld
pusha
int
jecxz
into
push
cltd
push
add
mov
dec
cmp
or
imul
leave
push
mov
ret
aam
dec
inc
pop
dec
lds
xchg
mov
jge
daa
and
jmp
push
and
fstp
adc
iret
sbb
mov
adc
out
cmpsb
mov
enter
cmpsl
adc
lret
sub
idivb
add
pop
call
mov
mov
in
push
inc
mov
int
cmp
and
xor
fwait
js
scas
add
pusha
mov
cmc
push
pop
mov
daa
or
lcall
jmp
lods
out
enter
jl
add
aad
push
pop
out
adc
cmp
xlat
jle
mov
cmp
das
dec
mov
mov
adc
js
adc
lock
dec
ljmp
jbe
adc
fmul
mov
xor
loope
mov
or
mov
xor
into
stc
sbb
repz
push
roll
and
fscale
movsb
add
cmc
popa
cli
in
popf
pop
inc
stos
xchg
sar
xor
stos
fsubrl
adc
loop
data16
jno
dec
addr16
lods
and
mov
out
jg
js
jbe
jmp
ljmp
sbb
or
dec
test
cmc
xchg
adc
push
add
inc
lods
loop
mov
cmp
lds
dec
mov
cmp
sti
adc
jno
and
or
push
int
cmp
mov
out
xchg
js
rcrl
and
lods
cmpsl
je
cmc
cmp
dec
mov
xchg
icebp
cmp
sbb
sub
sbb
adc
rcr
mov
rolb
push
push
leave
sub
xchg
jp
push
mov
cld
xor
dec
insl
jge
xchg
lea
push
xor
pop
movsb
add
mov
mov
add
fisttps
das
mov
in
sti
scas
jl
jb
mov
or
push
lds
mov
sahf
push
and
int
shll
xchg
testl
aam
push
jle
jp
stos
push
aad
imull
inc
mov
std
sub
movsl
mov
imul
andl
xor
xchg
lret
sub
in
mov
push
adc
push
js
xor
sub
arpl
cmp
inc
cwtl
sub
icebp
sub
es
or
sub
jle
arpl
popa
jmp
or
jle
scas
jmp
call
sub
xor
int
sbbl
or
push
sahf
push
inc
aam
inc
leave
fcmovnbe
out
push
pop
mov
push
pop
xor
nop
dec
xchg
leave
test
lock
out
int3
in
hlt
bsf
sbb
and
out
dec
xchg
mov
xor
push
sub
dec
cmpsl
push
insl
and
adc
imul
out
cmpsb
rcrb
push
std
flds
jne
mov
stos
dec
jmp
sbb
stos
pop
es
dec
inc
mov
into
inc
cmp
mov
inc
xchg
push
out
sub
test
loop
mov
loope
xchg
jns
xchg
rcrl
aaa
xor
dec
mov
cmp
sbb
rclb
cli
cmp
jmp
fsubrs
test
shl
test
pop
popf
arpl
xor
icebp
hlt
mov
jns
fldcw
popw
outsb
adc
into
lods
movsl
inc
push
shl
out
pop
call
dec
leave
les
mov
xor
andl
mov
inc
sub
adc
cld
and
push
mov
xchg
setb
or
adc
movsb
lea
ss
mov
cmpsl
insl
adc
push
into
popf
jmp
pop
jns
pop
or
sbb
cmp
pop
pop
arpl
sbb
cmc
pop
std
push
das
fs
xchg
xor
cwtl
test
hlt
mov
xchg
stos
xchg
fmuls
je
addr16
xor
add
popf
enter
push
loop
jecxz
dec
push
jns
mov
popa
stc
sar
jg
and
xor
stc
stc
arpl
scas
int3
aaa
sub
sub
mov
repz
cld
mov
pop
fdiv
sahf
rcrl
data16
fsubl
lds
imul
mov
je
les
fnstcw
movsl
cmp
mov
pop
stos
lds
lea
sub
jae
jae
cld
out
jl
cli
nop
call
in
xor
jo
mov
lcall
sbb
dec
dec
mov
and
dec
pop
jo
jo
insb
ss
icebp
xor
les
adc
dec
adc
std
xor
pop
in
lea
xor
jae,pt
xor
xor
cmpsb
xor
loope
daa
movsb
adc
mov
xor
jne
dec
pop
mov
xor
dec
xchg
push
mov
or
nop
div
lds
mov
adc
int
and
lea
jno
shll
add
outsl
and
scas
mov
imul
in
into
repnz
jae
or
mov
dec
out
and
mov
in
jle
dec
popa
dec
aaa
pop
cltd
test
cmpsb
in
in
mov
call
movl
sbb
cld
and
mov
loop
xor
adc
bound
test
mov
in
cmpsb
popa
in
aad
and
ret
xorl
add
js
push
or
mov
and
cmpsb
mov
pop
inc
and
shr
mov
lods
adc
fdivrl
icebp
dec
sarl
hlt
xchg
movzbl
xchg
mov
xchg
shl
mov
xchg
or
fistpl
aaa
data16
inc
outsb
aas
fdiv
sub
sub
add
into
push
in
orb
into
dec
dec
ret
mov
icebp
lods
push
pop
aam
pop
cmpsl
lret
pop
push
jmp
mov
mov
test
add
das
xchg
icebp
sti
dec
lock
mov
or
hlt
dec
and
mov
inc
popa
fsubrs
scas
xor
adc
repz
scas
cmc
pusha
jge
popa
push
movsb
test
mov
cli
sub
sahf
cmp
jno
push
push
add
fldcw
xor
lcall
leave
dec
push
rcll
xchg
and
xor
lea
pop
ja
icebp
jae
push
cli
sbb
dec
mov
fcoml
push
ficoml
dec
and
loopne
push
iret
ret
sbb
fstpl
mov
sti
sub
xchg
and
lcall
inc
cmp
adc
xchg
cmp
imul
nop
inc
push
xor
fdivs
fldenv
mov
lods
sti
pusha
in
add
jp
dec
subb
inc
xchg
dec
cmp
lock
cwtl
push
ds
mov
mov
lahf
adcl
fldl
enter
jmp
gs
stc
and
movsb
aas
loopne
lahf
pop
int3
ja
and
mov
mov
or
loope
cmp
cmp
dec
cmpsl
ret
or
inc
xor
or
sbb
push
ja
push
xor
cli
sub
fwait
inc
adc
mov
loop
and
adc
mov
ret
mov
mov
das
pop
push
and
xchg
inc
fdivp
in
es
push
mov
mov
aad
push
cwtl
cli
mov
in
das
out
in
stc
cmc
loopne
cwtl
mov
cmp
decb
hlt
xchg
clc
out
out
dec
push
clc
xchg
cs
xchg
arpl
push
subl
sti
inc
loope
jmp
or
pop
cltd
jns
and
xor
xor
pop
inc
lods
addl
and
cltd
or
adc
out
xlat
adc
fidivrl
push
jns
cmpsl
cltd
push
psllq
gs
icebp
lock
dec
out
imul
push
lods
inc
fwait
mov
sbb
xor
pushf
sbb
ficompl
cli
mov
pop
jmp
sub
cs
ficompl
push
aad
rcrb
adc
scas
push
mov
pop
pop
mov
sbb
cmp
mov
jecxz
imul
jns
dec
pop
popf
rcl
rcrl
push
fidivrl
divb
sub
clc
cmp
mov
jl
sbb
hlt
sub
sbb
andl
mov
ss
mov
add
outsl
loope
and
dec
dec
fcomps
mov
cld
mov
mov
in
sbb
inc
jo
sbb
out
rclb
mov
lret
jmp
adc
xchg
orl
repnz
fs
dec
jnp
lods
addr16
imul
adc
mov
mov
jo
push
cmp
lahf
sbb
and
aam
loop
add
mov
leave
addr16
mov
ficompl
push
and
cmpsl
pop
push
push
jbe
ret
jb
mov
lcall
mov
test
shlb
sbb
xor
sub
sub
sbb
jle
cmp
stc
mov
testb
sub
aad
fwait
pop
xor
xchg
jo
add
xchg
cld
test
lods
xor
mov
ret
xor
into
stc
jno
aad
arpl
mov
movsl
aas
cmp
iret
dec
xchg
aad
dec
xor
xchg
bound
adc
pop
stos
sub
mov
inc
sbb
fsubl
mov
faddp
pop
pop
into
pushf
mov
jno
and
rorb
std
sbb
mov
addl
jmp
push
jae
imul
jo
fildll
or
sbb
adc
fwait
or
xchg
push
int
subb
dec
adc
dec
in
adc
loope
repnz
jne
adc
sbb
fndisi(8087
ret
dec
jb
icebp
movsl
push
pop
mov
insl
roll
cmp
out
jge
cmc
shlb
stc
out
jmp
xchg
out
xor
xor
xchg
cmp
pop
pop
pop
test
pop
adc
xchg
in
ret
pop
andl
bound
xor
sbb
jl
dec
lds
dec
lcall
flds
push
push
gs
sub
and
mov
mov
cmpsb
es
and
add
mov
aaa
push
mov
sub
push
jecxz
inc
aam
inc
push
mov
addr16
xchg
imul
imul
test
mov
xchg
push
or
fnstcw
xchg
or
loop
roll
jmp
pop
mov
jns
mov
fsubrs
lods
pop
popf
cwtl
pop
push
jl
xor
jg
in
push
adc
jae
out
dec
inc
mov
ja
add
push
mov
imul
jl
stc
push
out
movsb
scas
addb
sbb
daa
push
loopne
push
les
pop
and
loop
cmp
sti
faddl
mov
mov
cmpsb
in
in
jae
dec
push
pushf
je
shrl
popl
mov
rcrb
ja
mov
lds
jg
jl
sub
lea
in
xor
push
and
sarb
aaa
sbb
fbstp
test
icebp
rcll
mov
push
ud0
and
pop
iret
push
and
adc
mov
push
cwtl
fbstp
lods
or
cmc
cmc
cld
ljmp
cli
addb
mov
mov
movsl
notb
inc
in
ja
or
sbb
inc
push
lock
out
cltd
xor
dec
pop
das
and
and
out
pop
dec
dec
cmp
pop
add
pop
cmp
scas
jno
sbb
mov
xlat
sbb
stc
add
fdivrs
hlt
dec
cmpsb
loope
inc
call
add
cld
jns
xor
inc
mov
jae
adc
mov
or
jmp
adc
push
scas
inc
fisubs
push
sti
loopne
stos
push
mov
and
cmp
stos
inc
stos
testb
fs
loopne
add
insl
loope
iret
movl
gs
adc
sbb
xor
and
push
pop
push
leave
pop
push
mov
push
cmp
jbe
cmp
repz
sub
inc
mov
loop
rolb
inc
inc
and
pop
xor
mov
int
sbb
sbb
add
add
add
cmpsb
les
add
cs
repz
mov
mov
into
cmp
sbb
pop
cli
adc
mov
mov
inc
fstps
sbb
mov
enter
cmp
mov
bound
mov
cwtl
mov
dec
push
out
ljmp
sub
mov
cmc
cmp
and
jno
repnz
shll
xchg
or
adc
inc
push
js
and
add
loope
cltd
cmp
push
and
or
inc
add
repz
clc
mov
jg
xlat
fiadds
sub
fnsave
call
aas
inc
cltd
cmp
fidivrl
xor
stos
mov
lock
mov
popa
xchg
xchg
xor
dec
mov
dec
push
pop
lahf
mov
pop
repnz
mov
mov
ret
push
pop
push
add
fcomps
jmp
xchg
rcr
aad
add
jo
sar
mov
cmpl
adcb
daa
inc
stc
cltd
pop
sbb
hlt
or
sbb
cmp
mov
inc
mov
lcall
jno
add
pop
adc
jo
dec
imul
inc
sub
cmp
add
mov
and
sarl
rorl
adc
shlb
fcmove
jbe
adc
cmp
jno
lea
mov
mov
shrb
stc
ficomps
jge
and
cmpsb
out
pop
pop
push
jo
int
push
xchg
push
cmpsb
int3
sub
notl
pop
pop
sarl
sub
push
scas
mov
mov
lcall
add
mov
jg
push
movsl
push
pop
push
das
cmpsb
loop
jae
xchg
cmp
cmp
or
aam
sbbl
dec
push
mov
addb
ja
dec
imul
mov
sub
xor
ror
loopne
out
cmp
js
or
lods
jbe
nop
push
aam
add
xchg
add
and
adc
notb
push
iret
std
or
call
decl
mov
lea
adc
xchg
stc
cmp
and
jae
int
mov
inc
mov
and
es
in
loop
mov
call
cmp
add
pop
dec
jnp
hlt
je
inc
test
out
xor
imull
nop
nop
and
imul
fidivs
cld
not
repnz
sub
clc
es
or
nop
cltd
pop
jne
mov
iret
push
lds
rolb
xor
nop
mov
lahf
mov
test
imul
xchg
or
nop
idivb
xor
xor
or
out
sbb
push
jns
fisubl
lcall
leave
cs
mov
cwtl
call
lods
notb
inc
xor
inc
movsb
add
pop
dec
xchg
test
andl
mov
jge
sbb
mov
dec
push
adc
or
jno
pop
xor
ljmp
push
xchg
push
mov
mov
and
push
add
testl
cltd
or
imul
cmpsb
loop
push
cmc
cmc
sti
mov
out
es
in
cld
dec
into
int
sub
ret
mov
aas
rolb
sub
popf
je
xlat
cmp
movb
int
pop
imul
cmpsb
out
dec
mov
jl
ds
add
push
movsb
cld
adc
jbe
sub
sbb
push
lret
jp
jb
cmp
push
sti
dec
test
pop
add
lret
add
loope,pt
inc
dec
push
sbb
movsl
pop
adc
daa
sti
mov
pandn
mov
inc
inc
inc
sub
sbb
das
push
arpl
push
scas
jecxz
stc
out
fcoml
and
and
push
push
pop
sarb
cmp
addb
repz
repnz
imul
sub
mov
jnp
and
and
aaa
filds
loopne
mov
cli
rclb
in
js
orl
lds
mov
inc
jmp
xchg
mov
xor
in
aaa
xchg
push
scas
jmp
cmp
xchg
jg
loopne
imul
mov
push
pop
aaa
mov
ds
test
rolb
icebp
mov
xor
add
cs
jecxz
dec
aas
jno
sbb
xchg
data16
mov
outsl
pushf
mov
nop
ficoms
je
push
dec
lock
or
push
xchg
dec
fistl
bnd
loop
mov
sar
shlb
fisubrs
xor
les
add
gs
stos
enter
test
sub
cld
sub
call
cmp
rclb
add
fnstsw
mov
sub
shlb
shlb
add
add
lcall
cwtl
outsl
and
jbe
xchg
dec
movsb
sbb
imul
popf
inc
sub
push
and
adc
push
je
repnz
gs
xor
test
and
add
test
in
movsb
jo
fimull
nop
test
out
push
aas
jbe
xchg
jmp
lods
xchg
sbb
popa
push
movsl
shrb
mov
pushf
cs
cmp
scas
mov
or
sahf
add
xor
mov
fdivrl
fiaddl
testl
dec
call
aad
ret
lods
jecxz
lcall
test
lea
jp
push
mov
mov
jl
rcr
lcall
add
cli
shrl
add
dec
xor
adc
fcoms
or
shlb
aam
mov
hlt
add
cltd
or
stos
xchg
pushf
imulb
sbbl
outsl
cltd
mov
jmp
or
mov
das
arpl
cmp
fdivl
mov
xor
sbb
jnp
pop
ret
imul
mov
add
movsb
movsb
cwtl
and
push
push
inc
dec
hlt
push
inc
push
mov
les
mov
adcb
push
subl
cmp
test
pushf
jl
jno
sbb
xchg
cli
fldl
cld
mov
push
jl
and
in
fsubrs
xchg
cld
cmp
loope
cmpl
lret
push
xchg
cmpsl
daa
add
push
rcrb
scas
les
mov
dec
jnp
addl
mov
push
or
cmp
test
sti
and
pop
jmp
jmp
jmp
cmp
je
pushf
arpl
rolb
hlt
jbe
inc
out
jmp
sbb
lock
and
pusha
mov
pop
push
ret
sub
into
negb
shl
mov
out
sbb
ljmp
fnsave
ljmp
xchg
ret
push
jns
xor
cmc
cmp
lcall
push
xchg
rcrb
test
loopne
aas
pop
je
movsl
pop
jne
sub
mov
dec
ret
cmp
sbb
push
add
js
and
pop
dec
sbb
outsl
push
pop
cmc
loope
leave
subb
mov
lock
lcall
stos
add
xchg
jo
add
mov
cmpsl
mov
xchg
jmp
dec
sarb
repz
xor
pop
js
lea
fisubrl
in
add
out
addl
ds
daa
jns
pop
jmp
mov
aam
push
fsts
ljmp
clc
cmp
cmp
jmp
or
adc
cmc
and
loope
lock
ficoms
cmp
cmp
xchg
inc
or
dec
popl
imul
push
mov
push
adc
rcl
xchg
jl
std
fdivrs
jo
xchg
ljmp
sbb
ficompl
lss
cmc
cwtl
lret
adc
xor
shll
adc
dec
iret
aas
sbb
test
fidivs
push
push
loop
retw
lods
or
cmpsb
js
dec
outsl
sbb
lcall
arpl
pusha
xchg
dec
pop
lahf
test
subl
gs
ffree
test
das
pop
lret
loope
hlt
std
aaa
cmp
lcall
add
push
xor
sbb
sub
das
in
scas
lea
aam
ja
aam
lret
cwtl
hlt
stc
mov
jg
xor
sub
ret
adc
xchg
ret
in
xor
push
cwtl
movl
sub
testl
push
push
test
or
adc
gs
lods
std
cmp
pop
imul
popa
cli
add
fstpt
mov
mov
adc
loop
sti
add
push
scas
dec
lret
out
sbb
rclb
mov
lods
sti
shlb
mov
repz
adc
cs
stos
repz
push
loop
push
shlb
ret
inc
cmp
xor
rorl
jmp
mov
jbe
mov
cmpsl
add
je
sub
adc
outsb
jae
lods
int
fwait
test
xor
pusha
mov
or
lahf
jmp
mov
lahf
inc
mov
loop
subb
and
fidivrl
mov
aad
fsubrl
push
fcompl
lcall
mov
inc
lahf
mov
pop
adc
xchg
push
pop
pusha
push
mov
loop
inc
ret
pop
jno
push
or
mov
pop
enter
or
loopne
out
inc
mov
cltd
popf
mov
inc
fdivl
or
mov
xor
mov
cmp
mov
test
js
ret
mov
adc
fcoms
fistpl
pop
insl
push
scas
mov
sbb
lcall
lods
push
testl
call
cmpl
icebp
mov
and
or
test
ss
jnp
xor
push
hlt
mov
pop
push
sub
jb
rclb
daa
xchg
cmpsb
mov
fs
inc
sub
cld
and
mov
inc
mov
dec
ds
sarl
fs
aas
xorl
push
outsb
inc
or
cld
adc
scas
dec
add
add
movsb
pop
push
or
call
pushf
loope
popa
lods
aam
test
dec
mov
outsb
and
mov
sub
sub
cmpsl
lahf
shrl
sub
xchg
dec
das
gs
inc
pop
in
push
xor
fwait
pop
imul
hlt
dec
and
dec
std
xchg
andb
inc
or
test
loope
and
mov
sub
outsl
hlt
fimull
jge
jb
aad
or
and
adc
int
mov
sub
fwait
pop
divb
int3
lods
jae
sub
lock
or
push
sbb
imul
dec
dec
fmuls
cmp
mov
jmp
cmp
push
mov
xchg
adc
inc
jbe
aas
jmp
adc
stos
int
cltd
stos
mov
xor
fsubl
xor
inc
and
lods
jle
daa
push
adc
and
aas
outsb
pusha
lods
subb
cmp
ja
adc
or
adc
mov
xor
mov
or
out
into
cld
les
pxor
adc
pop
idivl
loop
jns
into
dec
das
subb
cli
aas
enter
sbb
pusha
imul
push
js
outsb
in
outsl
je
mov
es
lret
push
sbb
jg
jo
cmp
lahf
lds
out
push
or
cmpsl
dec
fstl
fldcw
cmp
jnp
movsb
sub
lahf
pop
sbb
sub
inc
loopne
dec
stc
adc
mov
jae
pop
les
mov
jl
popf
adc
das
clc
adc
xor
aaa
imul
sbb
mov
iret
out
mov
les
fidivs
jns
or
push
mov
in
icebp
repz
shlb
sbb
jg
bound
test
sbb
and
sub
push
push
jmp
cmpsl
repz
test
adc
sub
data16
and
jecxz
ret
jge
or
xchg
pop
mov
daa
lcall
sarl
out
icebp
dec
sbb
ds
xchg
shlb
pop
testl
in
dec
in
les
js
dec
sti
cli
jg
inc
lods
push
pushl
enter
lds
repz
add
dec
lods
mov
pop
sub
in
pop
loop
outsb
daa
push
jb
pop
sub
pop
fisubl
rcrb
jle
or
scas
sub
aaa
xor
imull
pushf
movsb
sti
psubq
xchg
add
dec
sub
popa
aas
pop
xor
pop
sbb
dec
ds
mov
pusha
pushf
mov
pop
pop
add
mov
push
mov
int
inc
in
cltd
add
insb
stos
adc
cmpsl
call
repnz
jo
incb
adc
sbb
lea
xchg
mov
enter
cld
into
jge
leave
and
sbbl
insb
and
std
inc
xor
test
xor
sbbb
jae
mov
push
add
aaa
cmp
lret
mov
lret
mov
push
cltd
stos
ret
loopne
mov
push
sbb
jg
and
mov
in
sub
jb
sbb
inc
lods
cmc
xor
or
sbb
cmp
in
or
into
xchg
jge
jmp
and
fbld
mov
fcmove
aam
cmp
add
lods
and
ffreep
enter
xor
scas
sbb
les
and
in
jae
jge
sti
mov
or
and
mov
mov
insl
addr16
push
cmpsl
lret
jmp
xor
sbb
aad
inc
clc
push
push
jmp
dec
sti
mov
mov
test
adc
mov
jae
addl
cmpsl
les
mov
test
in
popf
mov
jmp
xchg
in
popf
pop
arpl
in
lods
xor
sahf
cmp
lods
ljmp
js
int
outsl
int3
mov
adc
jae
inc
mov
mov
scas
dec
popa
adc
sbb
pop
js
jae
pop
lds
sahf
cmpsl
iret
xchg
loope
sub
ljmp
js
dec
aam
shr
fldt
mov
or
sub
fnclex
fbld
jae
out
pusha
shrb
fwait
or
cmp
jb
ds
jle
stos
test
add
and
mov
dec
xchg
cwtl
arpl
cmp
in
mov
inc
divb
iret
movsb
pop
sbb
and
mov
stos
jle
lcall
imul
cmp
cmp
cwtl
jmp
out
add
pop
les
fildl
cli
insb
test
mov
sub
sbb
pop
push
out
mov
cltd
stos
jl
addr16
add
jle
add
push
cmpl
inc
mov
divb
daa
or
sbb
xor
jno
push
arpl
dec
and
out
cmp
sub
repz
rorl
push
inc
sti
pop
dec
lods
sysexit
pop
into
mov
xchg
popa
push
add
xchg
xchg
xor
inc
inc
aam
dec
aaa
or
leave
push
jecxz
lods
cmpsl
iret
mov
push
sar
dec
ja
movb
outsl
arpl
out
push
daa
jmp
sbb
or
sub
jns
mov
add
in
imul
bnd
pushf
out
xchg
jae
inc
das
or
jns
jno
fwait
rcl
lea
push
jmp
xor
push
daa
pop
rcrb
mov
in
cmp
add
mov
cwtl
out
cwtl
fnsave
lods
inc
mov
dec
repz
cld
sub
mov
fistpl
inc
push
int3
addr16
gs
ficoms
or
sti
std
sbbb
or
jo
xor
push
enter
test
in
je
daa
ss
lock
mov
jecxz
push
clc
loope
mov
leave
mov
jne
imul
add
fwait
mov
loop
in
jns
orl
in
push
fldenv
ds
pop
jns
dec
push
lret
and
and
adc
andb
mov
shrl
mov
shrl
aad
in
in
cmovns
inc
and
mov
jae
movsl
push
xlat
sub
rorb
inc
push
popf
loope
pop
lods
jo
fs
popa
dec
fstpl
ror
lahf
fwait
dec
out
or
jle
in
repnz
fwait
dec
sub
xlat
mov
mov
aam
adc
les
sub
push
loope
push
xchg
ret
insb
adc
mov
lahf
xor
mov
jp
dec
std
bound
xor
jns
sarl
sub
clc
stc
jmp
xor
inc
fcomi
mull
inc
adc
ljmp
cmp
push
jecxz
popl
movsb
push
and
pop
xor
pop
pop
cmp
fistps
cmpsb
jo
in
add
pusha
mov
push
sub
bswap
jecxz
cmp
js
mov
adc
cltd
les
rclb
sbb
sbbl
loope
mov
jb
ret
repz
and
lds
adc
and
aad
shll
imul
xchg
cmc
cmp
das
popf
push
xor
jo
or
mov
and
jnp
rcll
movsl
cmpsl
add
int3
lock
leave
dec
popa
loop
call
ret
mov
xchg
push
mov
setp
int
pop
imul
add
sbb
orl
mov
pop
je
add
push
mov
mov
pop
mov
in
imul
lds
lods
and
jne
cmp
imul
add
pusha
jno
les
xor
xchg
stos
lret
sbb
outsl
fwait
inc
jmp
push
sub
pop
xor
add
and
or
xlat
push
out
pop
ss
mov
inc
xor
out
sbb
decb
inc
scas
xlat
xchg
or
or
mov
mov
test
jge
jb
test
jmp
mov
push
add
loope
fyl2x
sti
mov
xchg
ror
dec
int
xor
pop
cmp
rcr
inc
jmp
mov
jb
cmp
jmp
mov
adc
shlb
sbb
xlat
aaa
or
xchg
cmp
cmp
out
lret
sarb
test
pop
loope
in
mov
push
rcr
cmp
add
mov
std
xchg
idivb
fs
mov
mov
push
mov
or
jle
je
out
pushf
xor
packssdw
das
lods
push
hlt
jo
test
or
pop
mov
mov
gs
stc
fstpt
scas
mov
lret
add
out
adc
clc
jno
jno
cmpsb
mov
ja
dec
inc
add
dec
sbb
jnp
out
scas
fwait
dec
xchg
mov
jecxz
adc
das
push
pushw
popa
and
inc
inc
mov
ja
push
repz
arpl
data16
mov
stos
push
adc
jo
mov
jns
jle
push
lahf
aas
ret
es
sbb
fidivrl
lods
sbb
stos
fwait
xchg
pop
pop
mov
inc
sub
xor
cli
aad
inc
sub
pop
fucomi
lods
in
push
mov
mov
les
jmp
clc
lods
decl
mov
repnz
xchg
into
or
popa
mov
xchg
add
stc
push
sub
sub
mov
lahf
adc
imul
push
adc
xor
dec
push
jne
sahf
repnz
sahf
cmp
hlt
cmc
sti
adc
pop
data16
lea
sbb
jo
push
gs
sbb
scas
sbb
insb
popa
cmp
inc
mov
faddl
xor
mov
std
dec
fwait
xchg
mov
icebp
adc
adc
clc
out
rol
in
fcmovnbe
pushf
call
pop
or
mov
inc
addl
xchg
jp
jle
or
pop
pop
addr16
repnz
fistpll
push
pop
aaa
dec
mov
sti
lea
xor
loop
jne
ss
mov
rclb
pop
xorb
lahf
inc
jg
and
mov
shlb
fistps
aas
push
inc
sbb
shlb
inc
push
pop
mov
push
in
sahf
mov
call
pusha
aad
push
mov
or
mov
mov
xor
adc
cmpb
imul
inc
fidivs
ret
bound
xchg
jne
xchg
addr16
cmc
inc
adc
sbb
push
sbb
fisttps
add
sbb
xchg
andl
cmp
xor
sbb
xchg
pop
pop
add
shrl
test
out
aam
push
xchg
test
mov
mov
je
lahf
mov
mov
xchg
push
mov
out
pop
dec
cmp
mov
jp
loope
icebp
mov
jge
mov
movsl
cmc
mov
fstl
push
xor
into
dec
push
jp
test
mov
xchg
cmp
sahf
iret
jmp
sahf
and
fcomps
add
sbb
adc
pop
aas
mov
in
imul
add
add
pushf
jl
not
push
or
stc
sbb
sbb
mov
fs
mov
sub
inc
inc
mov
sbb
cmp
imul
sub
inc
imul
lcall
mov
sub
cmp
dec
mov
mov
mov
mov
cltd
dec
sbb
shr
push
xor
in
pop
jns
sbb
or
sahf
lahf
push
mov
pop
adc
mov
pop
cs
clc
adc
pop
pop
jecxz
or
pop
popf
pusha
jmp
or
lea
in
xchg
mov
fwait
in
push
mov
sub
pop
fdivr
lcall
movsl
pop
lcall
jo
ja
in
add
in
fisttps
or
and
into
lret
rcrl
out
cmp
mov
testl
mov
add
stos
cld
into
mov
jo
sahf
xchg
out
out
mov
je
and
test
push
fiaddl
jg
mov
push
jno
inc
orl
xchg
dec
jbe
and
fcmovne
insl
popa
push
lock
push
add
jg
inc
dec
loopne
sti
das
mov
xor
and
mov
ja,pt
push
fwait
in
stos
cmp
lcall
jae
arpl
push
ljmp
ss
lods
jl
insb
mov
inc
stc
dec
out
lods
fildll
and
lcall
jae
ss
das
dec
pop
dec
or
jge
lock
adc
xor
mov
sbb
pushf
icebp
push
or
hlt
bts
fxch
sbb
insb
adc
sbb
arpl
push
aas
xorb
xor
shl
or
add
ss
pushf
sbbb
pop
in
andb
dec
mov
cmpsl
fwait
cmp
lods
les
test
xor
testb
add
pop
insl
int
inc
aam
jmp
out
out
cs
cld
test
pop
shll
xchg
and
xchg
and
pop
ja
dec
cmp
incb
push
and
push
xchg
orl
jp
or
ja
sbb
add
dec
xor
les
mov
test
mov
out
adcb
cmpsl
pop
and
jne
mov
cmpsb
or
push
popfw
push
shll
inc
dec
push
rcrb
dec
inc
or
sub
lods
jns
or
sub
nop
pop
orl
rorl
sub
mov
xchg
repnz
adc
pop
mov
inc
pop
scas
jbe
inc
out
dec
imul
inc
cmpl
lods
xor
xchg
push
repz
gs
mov
push
jb
pop
cwtl
lods
es
push
orb
or
fdivs
push
imul
mov
cwtl
cwtl
dec
scas
stos
fwait
movsl
inc
xor
stc
dec
jb
push
int3
jecxz
add
adc
push
mov
add
inc
xchg
xchg
jae
das
fimuls
inc
enter
sub
lods
mov
mov
pop
bound
fcmovnb
sbb
adc
cmpsl
mov
sarb
js
imul
add
out
mov
fwait
sbb
xchg
pop
pop
cmpsb
test
push
pop
cli
loope
pushf
lret
test
ret
fwait
insl
mov
ja
mov
jbe
push
test
pop
pop
aaa
mov
pusha
push
xor
mov
mov
adc
int
cmpsl
cli
add
xchg
ljmp
mov
or
sbb
and
push
sbb
je
pop
popa
lods
or
popa
or
aad
addr16
xchg
sbb
cwtl
adc
imul
inc
out
rcrb
xchg
mov
je
inc
lods
mov
and
jmp
cmp
data16
inc
inc
adc
xor
xchg
jnp
mov
adc
popa
pop
out
leave
dec
jecxz
inc
daa
ja
out
dec
ljmp
insl
dec
push
sti
iret
add
int
pop
movsb
shrl
leave
and
outsl
push
cmp
loop
adcb
inc
icebp
mov
xor
jb
into
iret
rorb
rorb
fxch
pushf
sbb
mov
cwtl
mov
cwtl
xor
pop
outsb
jbe
sub
inc
andb
test
push
inc
xchg
xchg
pop
mov
fisubl
fcomip
xor
pusha
add
push
jbe
outsl
adc
mul
sbb
imul
dec
jns
fucomi
dec
add
mov
sbb
outsb
cwtl
xorb
jl
subb
fs
mov
popl
clc
inc
setle
mov
lret
es
mulb
icebp
inc
jb
mov
mov
sarl
inc
call
xchg
lock
cli
or
jnp
push
gs
jo
xchg
jmp
or
js
dec
adc
imul
mov
lahf
lahf
push
negb
mov
or
les
mov
cli
pop
in
jmp
mov
lret
sbb
fimuls
test
imul
int
inc
out
push
or
sub
mov
mov
cld
addl
test
imul
jp
sbb
iret
xchg
add
fisubs
ret
inc
mov
mov
gs
nop
in
ds
push
je
nop
test
out
popf
dec
push
sub
sar
enter
jmp
cmc
and
mov
jns
xlat
inc
and
es
or
enter
pcmpeqw
icebp
mov
mov
xchg
int
pop
push
mov
enter
cmp
mov
cmp
or
pop
dec
stos
in
adc
add
int
xor
call
push
inc
sub
leave
and
sub
add
cmp
int3
inc
and
popf
ds
les
jmp
xor
in
cmp
xor
flds
lds
pop
inc
sub
ret
in
int
icebp
xor
testb
insl
fwait
sub
xor
addr16
insb
daa
dec
rorl
xor
cmp
xchg
test
push
out
lcall
shl
cmp
in
or
out
imul
arpl
in
mov
jne
or
lcall
sbb
pop
cmp
pop
pop
lret
xchg
xor
insb
addr16
dec
jmp
pop
stos
ss
pop
loopne
lods
add
inc
sbb
xor
add
gs
int3
mov
sub
cli
andl
cld
adc
xchg
lds
adc
dec
js
test
movsl
leave
push
repz
sti
inc
mov
jmp
mov
pop
push
push
mov
jbe
xchg
arpl
jle
ja
popa
lods
adc
and
push
out
scas
fwait
or
rorl
popf
pop
xchg
push
sbb
jns
pop
push
inc
pop
sub
mov
push
adc
jmp
adc
insb
test
jns
jg
sub
cmpsb
pop
es
mov
add
ds
outsl
std
sub
test
sahf
mov
in
aam
outsl
adc
mov
aad
fistps
pop
imul
push
lods
jno
inc
cmp
jl
mov
nop
scas
push
adc
test
sbb
or
mov
lods
es
jbe
loope
data16
loope
adc
int
imul
dec
rcrb
stos
jg
repz
rolb
repnz
jnp
bound
xchg
push
xor
adc
jg
mov
cltd
stc
mov
sbb
jno
pop
les
jae
xchg
mov
mov
pushf
cmp
inc
fsubrl
cwtl
dec
movsb
arpl
mov
or
adc
aad
jl
dec
stc
sbb
xchg
xorb
lock
lds
popf
push
jae
jnp
push
sub
xchg
inc
mov
sahf
into
add
mov
dec
xor
jmp
fmul
adc
aam
into
or
jecxz
push
test
iretw
arpl
fneni(8087
test
lock
inc
pop
test
dec
imul
or
mov
mov
or
mov
or
in
add
pop
or
cmp
clc
add
decb
lahf
out
add
adc
cs
testl
mov
in
sub
mov
imul
sub
ret
push
dec
int
mov
pop
mov
std
dec
cmpl
mov
int
stos
adc
push
cmp
xchg
jmp
fdivrl
lods
cmpsb
lret
mov
icebp
sub
adc
push
mov
inc
mov
xor
and
negl
nop
mov
pop
xor
pop
shl
lret
into
aam
or
xor
adc
cmc
insb
mov
test
mov
mov
jo
inc
iret
mov
mov
jge
test
push
popf
lea
loope
jle
repz
loopne
or
jb
lret
mov
or
shrl
adc
mov
xchg
sbb
mov
adc
les
fs
mov
push
jnp
sbb
and
pop
pop
dec
fcomp
sub
popa
lods
cwtl
addr16
seto
mov
clc
sub
lds
sub
addr16
clc
ficompl
arpl
inc
into
pushf
dec
push
dec
and
dec
add
sbb
xor
movsb
leave
repz
gs
sbb
cmp
and
or
mov
sub
jb
adc
dec
lret
sbb
les
jns
cmp
ds
in
jno
cmp
jmp
mov
and
mov
jmp
inc
sbb
mov
data16
push
fwait
mov
inc
hlt
mov
arpl
ret
outsb
fcomi
das
cmp
pusha
icebp
xchg
pop
jmp
popa
adc
jae
test
pop
loope
das
mov
sub
push
jge
daa
jmp
xor
lods
xlat
xor
stos
lcall
dec
ret
test
out
imul
out
cs
push
hlt
aas
std
rolb
push
dec
fsubrs
not
adc
inc
pop
xor
mov
mov
sbb
and
adc
pop
loope
xor
jae
mov
push
pop
movsl
xchg
enter
ss
mov
mov
mov
mov
leave
lahf
das
xor
mov
insb
mov
and
addl
mov
insl
xchg
adcb
sbb
mov
adc
jae
inc
mov
cmpsb
xor
xlat
pop
dec
sbbb
mov
loopne
inc
dec
mov
push
push
pop
out
cli
ret
rol
pop
cmp
sbb
lods
xchg
pop
sub
pop
dec
jmp
repnz
je
insb
jge
bound
sub
dec
std
lahf
dec
pop
fsts
fists
mov
int
shrb
test
xchg
popl
ret
cs
jg
cmp
aas
cld
in
movsb
out
std
jnp
lods
jp
xor
add
lods
pop
flds
and
je
enter
shr
fisubs
into
js
lea
outsl
cs
xchg
push
je
into
mov
outsl
lret
dec
adc
adc
and
nop
xchg
jge
xlat
sub
testb
and
or
aas
mov
aam
call
mov
call
addr16
int
mov
shl
loopne
insl
sbb
push
dec
scas
in
cmpsb
cmpsb
mov
adc
mov
outsb
sbb
push
xor
or
ret
pop
je,pt
jmp
lods
dec
mov
aaa
lret
jecxz
movsb
inc
je
mov
fimuls
jb
mov
xchg
lods
in
mov
scas
push
es
and
dec
jp
mov
or
xchg
movsl
push
lahf
mov
mov
ret
jp
sbb
dec
mov
or
mov
mov
mov
pusha
sbb
out
orl
mov
sub
push
iret
sbb
inc
rcrb
adc
mov
jmp
lret
push
and
ret
xor
cmpsl
push
bts
mov
jle
or
cmpb
pop
mov
push
push
data16
fnsave
jl
pusha
aam
xorl
rcll
xor
sub
pop
push
insl
jbe
repz
and
cld
imul
cltd
in
lods
stos
sub
incb
mov
call
or
sbb
enter
push
repnz
mov
dec
mov
add
xchg
or
mov
iret
jge
call
test
loope
ret
push
in
das
and
fs
push
je
push
imul
cmp
gs
pop
dec
sub
xchg
out
lods
jns
lea
mov
cmpl
test
xchg
mov
loop
rclb
push
cmpsb
in
in
jb
jle
pop
sub
push
pop
mov
adc
push
sahf
inc
movsl
or
adc
and
test
xchg
and
nop
push
jnp
mov
negb
mov
ljmp
pop
mov
aad
jp
mov
dec
iret
lret
icebp
push
push
push
loopne
cmpsb
dec
jmp
sahf
jo
sub
pop
xchg
in
push
dec
xchg
mov
jnp
out
cmp
pop
and
jo
cmp
aad
rcrl
test
pop
add
rclb
xchg
add
popf
jnp
enter
pop
test
xor
inc
stos
aam
pop
mov
daa
xor
loop
addr16
sub
andb
mov
aad
fnstsw
jb
dec
dec
popl
mov
daa
xor
aas
cmp
sub
xlat
mov
lods
ficomps
sbb
xchg
test
push
inc
adc
sbb
or
ja
loopne
dec
nop
fwait
xor
sbb
call
mov
dec
cltd
loopne
sbb
dec
pop
lret
ds
sahf
das
sub
add
in
imul
sbb
pushf
xchg
ret
pop
andl
cmc
bound
imul
lods
test
ja
jg
gs
negl
stos
mov
sub
push
fnstsw
jb
lods
testb
ret
pop
bound
mov
push
inc
ret
gs
cmp
cltd
dec
out
frstor
and
lahf
enter
aaa
test
pop
dec
repnz
imul
outsl
adc
jb
adc
daa
out
xchg
cmp
movsl
xor
clc
cld
pusha
es
inc
mov
xor
xchg
dec
xchg
pop
xchg
jmp
rcll
cmpsb
pop
repnz
or
arpl
lret
leave
stc
movsb
neg
push
sub
jo
dec
jge
insl
imul
insb
inc
setbe
push
es
es
shrb
outsb
push
andb
enter
out
ret
xor
stos
jno
mov
addr16
dec
add
inc
stc
inc
insb
shl
cmp
loop
and
pop
xor
mov
aaa
mov
sub
mov
cli
rolb
pop
movsl
push
test
jns
dec
enter
push
or
rcrb
clc
dec
adc
fxch
cmp
jecxz
pop
pusha
mov
ficompl
ffreep
cmp
push
fs
test
aas
inc
jge
fsubp
jp
add
sub
xchg
inc
or
lahf
lea
sbb
es
iret
mov
cli
and
sub
adc
and
pop
ret
std
cmpsl
aas
out
adc
test
mov
lret
mov
imull
push
sti
sbbb
xchg
movsb
mov
sub
mov
cmp
stos
or
loopne
inc
subl
outsb
sti
cmp
mov
addr16
inc
and
movsb
daa
sbb
int3
pushf
jg
sub
sahf
cltd
adc
rcrb
mov
adc
pusha
inc
fnsave
inc
jno
dec
test
andb
fildll
sbb
push
sub
mov
or
sbb
and
mov
inc
sub
push
xchg
push
mov
aad
mov
dec
ss
push
push
dec
jne
pop
xchg
fistpl
std
sub
xchg
into
cmp
lods
push
mov
jb
outsl
mov
shrl
sub
mov
xor
cmp
imul
and
jle
popa
popa
addb
xchg
jne
rolb
rorl
lret
mov
cmpsb
xor
aad
pushf
sbbl
in
dec
pop
call
daa
inc
in
pop
loope
sub
in
push
stos
jmp
sbb
cmpsb
cld
mov
and
cmp
lods
call
sbb
pop
fsts
lret
sarb
pusha
into
add
mov
nop
pop
je
in
add
sahf
in
sbb
inc
adc
and
inc
xor
xchg
jecxz
sub
cwtl
dec
fdivrs
psubsw
mov
js
inc
fsubrl
push
xlat
cmp
ja
loopne
or
mov
xor
stc
stos
pop
dec
add
in
mov
adc
lret
lock
in
mov
add
xchg
mov
nop
push
movntps
sbb
lods
lcall
dec
xchg
loopne
mov
sub
pop
ja
jb
inc
push
jno
cmpsl
push
and
test
jb
aaa
and
mov
adc
xor
mov
movsb
or
int3
aas
incb
into
xor
or
outsl
add
mov
cltd
vmovq
jo
jno
cmpl
mov
add
test
jge
mov
cmp
lods
imul
add
jns
push
xchg
add
pop
sub
mov
in
mov
bound
ret
sub
das
mov
dec
out
shlb
shl
ss
nop
jle
xchg
mov
mov
popa
dec
lods
or
movb
push
mov
les
mov
sbb
pushf
lods
out
pop
cmp
jno
add
push
daa
js
aaa
fsubl
lcall
idiv
insl
sahf
sbb
cmp
shlb
and
pop
xchg
jle
in
pop
pop
xor
inc
repnz
add
push
xor
push
lock
jno
xor
push
push
repnz
jl
lods
or
lds
lret
xor
ffree
out
hlt
dec
mov
push
movl
xchg
cmpsl
pusha
adc
and
pop
adc
mov
pushf
mov
mov
push
or
mov
xchg
xor
dec
inc
cmc
xchg
lock
and
dec
sub
int3
push
and
in
adc
aad
xchg
sti
aad
cmp
in
sub
sbb
jecxz
fcmovu
test
add
xchg
mov
mov
adc
sub
in
out
cmpsb
hlt
es
jmp
andb
ja
push
xor
insl
scas
sbb
icebp
out
negb
jmp
test
out
xor
fcmovb
jle
and
inc
jge
inc
test
jns
scas
aas
sub
mov
mov
bound
out
and
xlat
lahf
inc
bound
xchg
rorb
pop
cmpsb
xchg
mov
inc
push
dec
test
jecxz
fimull
psrlw
sub
cwtl
xorb
sbb
xor
dec
pusha
xlat
ret
lock
jge
fldt
cmp
stc
sahf
sbb
push
mov
dec
xchg
cmp
sbb
or
adc
cmpsb
sarb
in
pop
dec
push
iret
cmp
dec
idivb
pushf
pop
add
rolb
rorl
dec
jp
or
outsl
gs
sub
or
sar
aas
imul
sub
dec
jnp
mov
adc
inc
and
scas
or
dec
dec
out
mov
popf
inc
cbtw
and
pusha
mov
fimuls
movsb
in
jne
movsl
test
xlat
jno
jno
or
loope
aas
subl
fistpll
out
cmpsl
fisttps
jg
push
mov
mov
push
mov
push
cltd
imul
into
leave
cltd
pop
inc
push
jae
and
mov
in
mov
fildll
rorl
loop
xor
arpl
leave
jp
pop
fldcw
enter
cmp
loope
ret
fbstp
cmpsb
cmp
push
jmp
mov
mov
add
push
or
or
icebp
lahf
sbb
push
xchg
mov
cmp
jns
lcall
inc
mov
jl
pusha
scas
leave
enter
inc
rorb
shlb
or
mov
jle
jae
push
sbb
xchg
jecxz
test
das
int3
and
xchg
pop
stos
repnz
imul
cli
leave
adc
mov
dec
sub
cmp
cmp
mov
xor
inc
mov
test
loopne
sub
dec
cmp
pop
xchg
adc
aam
xor
cmp
loopne
push
dec
cmp
xchg
adc
push
mov
lock
push
inc
clc
sbb
push
jo
out
mov
push
neg
add
stc
jge
in
and
cmp
mov
mov
xlat
lahf
or
dec
loope
ret
ljmp
call
adc
adc
xchg
inc
cmc
cmp
lahf
jbe
mov
add
xchg
insb
ljmp
cmpsl
or
pop
dec
xchg
jo
push
lea
outsb
icebp
jle
ljmp
jnp
andb
mov
cltd
jg
jl
cmp
mov
add
xchg
cmc
push
imul
sbb
pop
bound
pop
sub
push
cwtl
pusha
xor
fdivp
test
pushf
mov
outsl
xchg
push
or
lret
and
insb
nop
and
push
lcall
pop
mov
addr16
jns
aam
enter
and
mov
pop
pop
gs
movsb
fidivs
scas
movsl
mov
cmc
dec
push
test
push
mov
in
sahf
in
mov
cmp
je
mov
cmp
push
or
pusha
mov
push
dec
fs
pusha
push
pop
jge
sti
sbb
iret
mov
xor
enter
jl
push
pop
mov
popa
outsl
pop
out
daa
or
fisttpl
andl
jbe
hlt
xchg
jne
xor
pop
add
loopne
adc
imul
in
inc
mov
push
loopne
mov
lock
arpl
nop
dec
add
iret
clc
add
call
in
notb
mov
fwait
or
lcall
pop
lds
stos
mov
push
cli
adc
xchg
ja
xchg
aam
sub
xchg
xor
mov
xchg
std
stos
sub
pop
jae
inc
mov
push
cmp
in
push
fstpl
dec
xchg
sub
shll
or
inc
push
pop
rcrl
or
lock
sub
dec
xchg
cmpsl
adc
mov
mov
fbld
sbb
movsb
lea
mov
popa
insl
dec
pop
stos
push
decl
mov
add
dec
clc
ret
sbb
and
pop
push
jg
cmp
ds
rcrl
xor
sti
xlat
int3
push
lods
mov
sbb
dec
push
xlat
jno
outsl
icebp
adc
jo
mov
jno
sub
test
hlt
jg
add
jno
mov
int3
mov
and
mov
jmp
call
outsl
sub
sbb
inc
fs
mov
mov
iret
negl
add
jmp
incl
lods
mov
sub
dec
insl
jmp
xchg
mov
imul
fabs
xchg
pop
jne
jge
lret
pop
repnz
push
shl
add
jl
loope
mov
outsb
mov
rclb
xor
lgs
enter
jecxz
fistl
ficoms
or
pop
dec
push
mov
pusha
mov
and
dec
mov
lea
test
mov
not
cltd
push
das
call
jns
dec
inc
std
xor
into
and
push
rcl
push
loop
lret
inc
jns
stos
pop
and
shll
insb
pop
pushf
in
stc
mov
inc
cmp
pop
xchg
and
mov
mov
mov
clc
and
cmpsb
mov
fcompl
mov
cmc
call
fsubl
dec
loop
jg
xchg
sahf
push
punpckhwd
jno
mov
lds
cwtl
xchg
insb
aam
jmp
sbb
out
or
mov
in
lods
adc
aaa
jno
adc
cltd
adc
pop
mov
mov
shll
mul
mov
mov
in
ret
mov
mov
stos
mov
lahf
cltd
jae
inc
out
hlt
roll
sbb
push
xor
or
imul
lahf
push
push
xlat
or
pushf
cwtl
sti
xorl
adc
cmp
call
aad
xchg
dec
in
sub
cmp
ljmp
test
mov
or
and
nop
push
in
mov
ljmp
fidivrl
jb
push
xchg
xchg
out
ja
lea
xchg
mov
es
imul
inc
aas
test
iret
and
clc
pop
adc
mov
cmp
pop
xor
sub
jmp
in
loopne
bound
jg
adc
in
inc
in
add
rcl
imul
cs
or
inc
lds
leave
es
xor
lds
sbbl
lock
dec
cltd
mov
outsb
filds
dec
lods
mov
rcl
ds
sbb
adc
jb
aaa
cwtl
cmp
dec
mov
jne
or
leave
push
gs
fwait
notl
xchg
and
mov
dec
icebp
daa
js
notl
insl
xor
push
mov
ret
mov
out
test
sbb
fs
xchg
jmp
push
mov
xor
cmc
dec
jne
or
xchg
push
mov
mov
into
push
add
pop
cmpsb
lret
cmc
mov
adc
enter
cltd
mov
or
inc
cmpps
and
aam
fistpl
addb
lret
mov
inc
xor
xor
mov
cmp
mov
outsb
mov
xor
ficoms
lcall
lcall
sub
sbb
sub
pop
dec
pusha
leave
cmc
adc
mov
sbb
add
or
imul
cmpb
call
or
cli
xchg
xor
jp
mov
jae
add
dec
adc
mov
jb
push
in
add
add
and
sbbb
push
cmp
test
push
cmp
push
jne
lea
ss
shlb
stos
sbb
repz
push
lea
scas
pop
inc
dec
leave
rcrb
xchg
inc
lock
insl
rcr
imul
xor
test
push
test
xor
cld
jnp
push
xchg
push
adcl
insl
pop
add
mov
push
in
and
lahf
arpl
out
pusha
lea
inc
repz
test
mov
rorl
mov
mov
pop
popf
cmc
mov
pop
or
pop
cmp
test
adc
fisttpl
shrb
andl
xor
inc
int3
fisttps
lea
mov
xor
roll
adc
jle
cmpsb
out
pop
xor
rcrb
cmpsl
sbb
or
push
push
jl
ss
adc
jecxz
cs
jo
test
push
mov
fsubp
push
clc
int3
mov
sti
mov
fdiv
mov
lret
clc
enter
cwtl
lods
add
shlb
rcr
jmp
frstor
scas
in
or
pop
mov
mov
pushf
pop
aaa
mov
sbb
lahf
test
lods
outsl
idivb
testl
or
decl
sbb
out
adc
imul
subb
sbb
mov
sub
lods
iret
gs
mov
bound
jnp
movl
sbb
dec
jle
fisttps
popf
jg
pop
cmpl
mov
stos
xchg
mov
jecxz
shlb
rorl
aaa
add
mov
pop
adc
shl
add
sbb
mov
setnp
fwait
in
mov
jnp
outsb
jns
sub
xchg
mov
sub
or
jmp
mov
add
push
dec
rcrl
insb
dec
imul
sub
jne
push
sbb
pop
push
mov
push
or
inc
inc
jecxz
sti
cwtl
mov
pop
pop
inc
xchg
dec
inc
pop
addr16
stos
pop
xchg
mov
inc
ja
cmp
cmpl
sub
inc
add
sub
cmp
pop
mov
mov
push
sbb
test
shll
in
cmp
fmul
imul
jecxz
push
jle
cmpsl
push
sub
add
xor
in
test
sub
xchg
add
leave
lahf
mov
int3
adcb
pop
pop
sbb
push
roll
xorb
ss
test
call
adc
and
push
jbe
cmp
leave
loopne
stos
cmp
xchg
pop
ss
loope
iret
add
fst
rcrl
shrl
sub
jbe
sbb
jae
mov
jno
incb
imul
lods
or
jbe
lcall
cli
sub
xchg
and
adc
sahf
adc
jecxz
jae
xor
xchg
sub
add
clc
sbb
sub
loopne
or
loope
ljmp
lock
mov
lret
into
mov
ss
mov
xlat
jae
pop
cmpl
adc
rolb
icebp
pop
cmp
pop
stc
cmp
sub
mov
and
xchg
xlat
dec
add
fsub
and
mov
arpl
mov
xchg
repnz
cltd
lret
out
arpl
insb
lock
add
dec
pop
sahf
leave
ja
push
shll
xor
cmp
repz
and
sub
push
aaa
jne
cmp
or
push
sub
and
mov
inc
sarl
add
mov
push
cmpl
cmp
sub
sbb
std
sti
push
and
adcb
jmp
ret
xchg
loopne
jno
pop
pop
test
sub
mov
popf
in
adc
decl
flds
or
jae
aam
arpl
inc
xchg
dec
mov
clc
movsl
inc
mov
test
gs
adc
xchg
jmp
add
in
push
inc
mov
xchg
adc
movsb
add
xchg
push
pop
sarl
mov
xchg
mov
and
push
pop
push
add
mulb
or
rorb
lods
xchg
sbbl
mov
loop
xchg
sbb
mov
add
ja
sub
shrl
into
jno
push
enter
loop
in
add
push
cli
mov
lock
sarb
je
xchg
pop
push
aam
insl
call
adc
insl
and
add
sbb
test
xchg
jnp
push
xchg
sti
xor
aam
fdivrl
push
cwtl
lahf
cmp
scas
outsb
push
jne
xor
loopne
loopne
push
dec
lahf
cltd
mov
push
push
jae
mov
out
push
sbbl
loope
inc
xor
jle
adc
mov
sbb
pop
mov
mov
repz
adc
dec
or
out
inc
adc
es
xchg
pop
movsl
bound
mov
fsub
lock
sbb
movsb
daa
mov
inc
add
add
jno
push
nop
ret
lock
pop
pop
push
cltd
test
rorb
jb
loope
fcomip
dec
divb
int
mov
movhps
popa
movsb
shll
mov
cmpsb
je
mov
mov
stos
imul
jo
add
jle
ja
lods
add
mov
repz
xor
jo
pop
fsubl
lret
jns
scas
jl
outsl
inc
add
ja
pushf
jge
mov
inc
cli
mov
dec
cltd
fs
fnstsw
popl
jmp
xor
jg
sbb
popa
dec
std
cwtl
push
adc
int3
inc
xor
dec
int3
stos
stos
jg
addr16
inc
ss
adc
in
ret
xchg
pushl
pop
cltd
push
cmpsl
xor
loope
xchg
sbb
cld
jl
jp
fistpll
xor
pop
or
insl
or
cmp
mov
movsb
adc
xchg
sbb
test
stos
cwtl
push
in
sbb
cmpsl
sub
and
arpl
pop
sbb
push
or
test
fsubrs
xor
pop
sahf
insl
lods
fcompl
out
test
xchg
add
xor
adc
xor
test
ljmp
push
ds
rolb
or
sti
lret
sahf
stc
push
jb
aam
ficoml
scas
fcmovnu
add
adc
or
mov
dec
xor
mov
jbe
jl
aad
jb
xor
les
mov
fwait
ljmp
int
xchg
aam
sbb
cmp
mov
stos
push
outsb
sub
dec
stos
push
sub
call
nop
sbbb
in
adc
jo
jbe
fcomi
dec
in
cli
push
push
push
cli
mov
sarl
adc
cmc
les
dec
cmp
adc
mull
pop
inc
jns
popl
nop
in
stc
test
dec
enter
sbbl
addr16
out
mov
out
insl
hlt
dec
xchg
ret
inc
xor
mov
ficoms
mov
xchg
push
and
fdivrl
mov
mov
shll
in
cmp
mov
dec
add
lock
movsb
bound
and
cmp
xchg
imul
mov
or
mov
bound
adc
push
cs
sbb
adc
jmp
js
mov
enter
jg
test
test
rclb
jne
xor
push
das
xor
sub
push
cli
mov
push
mov
jns
cwtl
and
rorb
push
jmp
cmp
adc
push
jae,pn
int
std
xor
dec
enter
push
nop
xchg
inc
mov
insb
mov
xchg
add
push
cmp
shll
ds
sbb
call
inc
jecxz
ret
push
sbb
sbb
mov
mov
pusha
pop
cld
cmpsl
mov
mov
fisttps
mov
cmc
mov
leave
pushf
das
cltd
cmp
outsb
scas
loopne
push
cmc
jo
inc
rcr
leave
jle
inc
adc
fidivs
and
aam
les
bound
xchg
push
and
sarb
stos
daa
fs
gs
aas
and
add
nop
inc
imul
adc
aas
int
sub
pop
xchg
movswl
aas
jb
repz
aam
test
jge
jnp
fnsave
lret
jo
out
jmp
and
andb
add
sub
roll
cwtl
xor
shll
mov
out
sbb
inc
aam
repz
cld
and
inc
loop
mov
test
leave
cmp
xchg
ja
lea
scas
push
jl
lock
push
push
pop
adc
imul
aad
dec
imul
jp
cmpsl
in
cmp
mov
cwtl
jecxz
lock
fcmovbe
mov
mov
pushf
les
add
mov
xorb
andl
jmp
and
jmp
xor
leave
push
cwtl
cmp
jmp
test
cmp
fsubrs
popa
in
pavgw
jg
or
jle
pop
arpl
out
xchg
cmp
push
imul
jmp
test
add
icebp
addr16
pop
jge
jle
xor
into
jle
cmp
jle
jne
mov
sbb
sarl
cmpsb
jne
add
das
jbe
inc
stos
mov
or
push
negl
daa
fidivrl
sub
cwtl
ficoms
or
xchg
mov
adc
sub
fildll
adc
sbb
push
ss
cmpsl
js
data16
lods
cmp
and
inc
pop
call
stos
and
cmp
aam
stos
repnz
lock
lret
movsb
fwait
movsb
icebp
jnp
lods
je
xor
test
cmp
pushf
int3
mov
icebp
cltd
inc
jns
pop
loop
push
stos
lods
ja
xor
pop
push
add
cld
mov
inc
fistpl
mov
sbb
ret
pop
jb,pn
add
aaa
test
repz
mov
negl
or
sahf
mov
bound
cwtl
outsb
dec
mov
xchg
adc
lret
clc
adc
pusha
mov
dec
push
repnz
xor
xchg
imul
jb
scas
dec
in
mov
mov
mov
loop
mov
push
and
sbb
xchg
aam
push
int3
repz
xchg
pop
mov
mov
jge
push
inc
cmpsl
jae
add
mov
xor
sahf
push
lcall
jle
mov
mov
xor
xchg
mov
out
pop
sub
testl
nop
inc
dec
push
or
add
mov
test
ffreep
inc
into
mov
sub
xchg
cmpsb
mov
out
fdiv
mov
or
imul
or
adcl
pop
rolb
jp
xor
fs
in
cmp
sbb
hlt
inc
sbb
into
mov
ljmp
call
cmpsl
sbb
ror
push
push
lea
loope,pn
ds
movb
inc
jecxz
insb
outsl
outsl
mov
mov
and
mov
es
shrl
call
fbld
jle
or
xchg
mov
push
cmp
mov
sbb
lahf
ljmp
adc
mov
pop
cmc
cld
scas
dec
and
sub
subb
scas
sub
mov
pop
dec
push
xchg
cmp
or
std
inc
pop
mov
outsl
scas
repz
rcrl
or
sbb
sahf
jne
lahf
jl
mov
repz
and
xchg
loop
mov
cltd
pop
pushf
mov
mov
mov
movsb
mov
lea
loope
sbb
into
sbb
scas
cli
fbstp
lret
stos
sbb
push
lods
inc
hlt
pusha
xor
cld
xchg
add
push
fwait
push
mov
jge
or
adc
insb
sub
shlb
aaa
jns
push
and
test
imul
add
jb
sub
xchg
mov
or
add
mov
out
cltd
lahf
test
ret
pop
cmp
dec
loop
sahf
adc
sbb
outsb
daa
outsb
divb
cmp
shlb
mov
das
repz
popa
mov
jbe
cltd
cltd
int
jle
iret
flds
mov
clc
xchg
xorb
insb
bound
cmp
push
inc
aam
and
add
xor
mov
adc
add
sarb
push
sub
addb
clc
add
xlat
js
mov
mov
movsl
fdivl
pop
adc
bound
adc
je
or
pop
add
xchg
fsub
fnstsw
ror
pushf
jno
cmp
clc
cli
jl
cmpsl
je
sahf
not
add
adc
cmpsb
push
jmp
movsl
sub
pop
adc
xchg
rorb
push
out
xor
dec
push
pop
hlt
scas
fnstcw
int3
fidivrs
outsl
ret
sbb
cmp
push
inc
cmpl
ret
mov
fmull
lods
aaa
push
test
fs
out
stos
mov
insl
cli
leave
ss
cmpsl
jnp
sbbb
lret
push
sbb
sbb
jnp
iret
out
cld
cwtl
lret
xlat
ljmp
loop
lret
mov
int3
aam
ds
mov
jnp
cltd
sbbl
outsl
lcall
gs
pop
jle
outsl
int3
dec
ret
inc
xor
popl
sub
jo
or
mov
mov
xchg
jne
in
and
testl
sub
clc
adc
insb
stos
pop
inc
enter
repz
push
push
add
inc
pop
jmp
out
pop
sub
mov
or
repz
adc
cmc
repnz
adc
jnp
jge,pt
sub
pop
addr16
cmpsl
mov
dec
adc
nop
xchg
jmp
sub
fsts
test
mov
pop
mov
jae
mov
in
out
push
mov
pop
mov
mov
sbb
repz
mov
lock
jb
aam
stc
mov
xchg
sub
jb
out
stos
mov
jmp
mov
insl
insb
out
sub
fwait
mov
std
jg
push
sti
dec
xchg
jne
mov
adc
dec
frstor
dec
push
cmp
mov
mov
inc
inc
data16
adc
and
pop
jle
aas
xchg
rcr
ljmp
and
stos
push
ret
inc
push
mov
lret
push
mov
cmp
insl
push
pop
fstps
push
cli
stos
in
fcmovu
mov
cmc
and
adc
loopne
fstps
dec
mov
lods
inc
push
popl
sub
jnp
inc
sub
in
fimull
aaa
dec
in
testb
cwtl
and
jnp
mov
sarl
inc
add
lods
dec
js
mov
popa
rclb
xchg
lcall
pushf
pushf
lods
mov
add
mov
iret
shl
push
out
es
rol
fldpi
ljmp
int3
sar
cmc
sarl
cmc
fs
pop
mov
fsubl
dec
es
cmp
sbb
inc
lock
in
aaa
push
xor
push
out
dec
cld
inc
cmpsl
adc
xorb
outsl
pop
push
ss
inc
cmp
icebp
push
lret
pop
inc
lahf
cli
push
xlat
les
dec
xchg
pop
cmp
push
and
sub
mov
jo
push
hlt
xor
insl
clc
fbld
pop
pop
mov
lds
cmc
push
jae
fimull
cmp
sub
es
cmpsb
cs
xchg
xor
shrl
inc
fistps
cmc
in
in
stos
xor
pop
push
sti
mov
jbe
adc
jne
lods
sub
xchg
popa
jbe
shl
cli
inc
sub
mov
mov
xchg
inc
scas
jg
cltd
negl
in
cli
ficompl
insl
xor
adcl
or
or
inc
mov
inc
outsb
scas
es
xorl
mov
stos
xchg
test
mov
xor
pop
outsb
inc
aaa
in
dec
fwait
mov
lret
mov
cmp
clc
xchg
leave
idivl
mov
leave
gs
sub
outsb
xchg
mov
pop
lds
sbb
cmp
pop
out
sbb
xor
mov
lods
push
adc
cwtl
and
or
add
jo
cmp
imul
fdivp
aad
mov
cmp
push
mov
add
inc
mov
mov
mov
les
or
pushf
popf
sbb
dec
aam
sub
imul
xor
out
cmp
imul
shrb
rcll
sar
mov
test
and
mov
add
sub
cmpsl
addr16
ds
and
ficoml
loope
xchg
ret
pop
js
cmp
mov
ds
xor
ret
sub
mov
mov
xor
stc
les
sarb
test
dec
inc
mov
leave
lea
test
mov
shlb
adc
enter
jb
inc
xchg
movsb
jl
dec
lea
icebp
test
lcall
es
scas
mov
add
pop
repnz
pop
or
inc
and
dec
repnz
addr16
data16
sysenter
cmp
adc
ss
cmpsl
mov
dec
clc
cltd
xlat
xchg
xor
lds
loopew
mov
dec
std
inc
pop
and
in
xchg
lea
fwait
mov
xchg
mov
or
pop
cs
mov
test
stc
pop
sub
mov
mov
int
push
iret
sahf
jmp
dec
movsl
test
out
in
gs
cmp
test
and
and
mov
ret
mov
shll
addr16
pushf
mov
fdivrl
sti
lret
xor
mov
jl
in
nop
hlt
mov
subb
fmull
in
nop
or
and
mov
inc
in
or
cmp
dec
ss
jge
dec
mov
xchg
call
int3
enter
mov
testl
adc
push
imul
aas
push
xchg
cli
push
push
fdivl
xchg
test
and
mov
lock
pop
push
cmpl
inc
jmp
stos
push
mov
fisttpll
push
fxch
mov
pop
or
sbb
es
imul
rcrl
inc
jecxz
inc
subb
dec
add
mov
stos
arpl
sarl
test
push
cs
inc
ror
jecxz
mov
test
data16
sbb
mov
mov
bound
jle
mov
sti
mov
pop
fiaddl
cmp
test
gs
sti
push
aad
pop
jg
push
stos
mov
out
out
and
idivb
lods
leave
test
lcall
and
fwait
test
sub
test
mov
push
lret
and
xor
mov
mov
pop
jp
jge
or
lcall
xor
dec
push
jge
xlat
jle
cmpsb
addr16
pop
sahf
xor
fwait
es
cli
jp
test
pop
pop
or
lcall
cmpl
notl
push
xor
loopne
in
mov
or
sarb
out
sbb
mov
mov
sub
movsb
push
pop
addb
sbb
push
imul
mov
jmp
xlat
and
xor
jb
enter
pop
test
inc
idivb
cmp
movsl
jns
inc
push
inc
xchg
xchg
or
dec
xrelease
popa
dec
test
repnz
aam
inc
push
or
stos
push
xchg
lcall
pop
or
jnp
ljmp
jne
lret
dec
or
insb
pop
pop
mov
movsl
cmp
push
repnz
ret
notl
ljmp
push
js
loop
cmp
jmp
mov
stos
sbb
jae
pop
inc
mov
and
ret
jle
xchg
mov
std
cmc
shlb
rcrl
out
push
lret
xor
lret
jl
jae
dec
ret
add
adc
cli
sbb
jns
out
ss
pop
enter
adc
scas
add
mov
jne
loopne
and
sbb
xorb
ljmp
push
dec
stc
incb
sti
add
cmp
or
cmp
push
sarb
jp
sub
jne
flds
pop
and
fdivr
adc
pop
mov
dec
cltd
fsub
sub
movsl
stos
cltd
cmp
icebp
in
cmp
ffreep
push
in
mov
lcall
dec
jp
jp
mov
test
lea
ficomps
cmp
mov
mov
cli
fmuls
jne
out
icebp
call
arpl
push
mov
arpl
ljmp
lret
repnz
add
mov
ret
mov
push
ds
test
xchg
or
lods
sub
push
pop
insl
adc
cmp
sub
movsb
pop
lret
fsubrs
insl
cmc
pop
push
or
adc
and
js
cs
stos
negl
or
jp
cmp
arpl
ljmp
pop
repz
js
inc
icebp
mov
push
sahf
push
dec
push
xor
leave
scas
push
xchg
and
sub
loope
outsl
out
in
fldt
inc
mov
nop
pop
lcall
add
sbbb
inc
jb
dec
add
mov
cmpsl
out
dec
daa
jae
and
ljmp
cmp
sbb
imul
sahf
push
jns
mull
mov
xchg
mov
in
push
sub
lods
fldenv
jle
jg
mov
ds
or
pusha
xchg
aas
cmp
inc
xchg
sub
addr16
testl
rorb
into
pushf
add
add
int3
cltd
fld1
mov
sub
inc
add
mov
jns
loope
xor
jae
sub
jl
flds
jne
lret
imul
push
push
xchg
loopne
scas
in
in
and
sub
lahf
xchg
data16
insb
ja
cli
out
pop
cs
xchg
sbb
jnp
pop
jp
lahf
dec
gs
xchg
fistpll
into
inc
sbb
insb
cmp
sahf
xor
push
lods
pop
icebp
xchg
test
inc
jge
jno
mov
lcall
pop
mov
sbb
out
stos
dec
mov
rorl
les
add
scas
ret
jnp
and
scas
fstps
push
shlb
push
jb
dec
xchg
and
push
mov
addl
ret
push
xchg
icebp
repz
mov
insb
push
das
and
xchg
sub
jae
sbb
xchg
hlt
enter
push
sbb
cmp
enter
sbb
xlat
fstpl
or
aam
push
adc
and
movsl
fistpll
testb
cwtl
test
jp
dec
sub
jne
mov
add
or
imul
jae
cltd
negb
cwtl
xchg
xor
adc
xchg
jle
popa
xor
aaa
sbb
test
aad
adc
dec
jno
push
cli
dec
add
sub
and
xchg
lock
repz
popa
dec
adc
adc
dec
and
xor
incl
hlt
leave
jecxz
and
dec
lcall
jp
bound
jl
and
lcall
repnz
mov
mov
mov
mov
addr16
popa
sub
cld
xchg
adc
movsb
dec
jecxz
mov
pop
scas
leave
pop
sub
in
loopne
movsl
add
ss
jmp
sub
in
jbe
lcall
cmp
in
imul
ljmp
xchg
dec
mov
mov
push
stos
pop
push
mov
popa
mov
stos
pop
or
lret
stos
xor
mov
xor
add
popf
push
inc
jo
repnz
loope
cwtl
sbb
dec
ja
push
xchg
outsl
adc
popa
mov
pop
stos
lock
add
push
mov
int3
push
inc
imul
mov
mov
leave
cmpsb
and
dec
insl
push
sbb
push
jg
add
lret
mov
mov
lret
and
sbb
mov
mov
fstpt
mov
stos
add
mov
dec
mov
lods
je
jp
sbbl
mov
push
js
roll
jae
test
shll
push
in
pop
mov
nop
and
adc
cwtl
insl
dec
mov
rcll
mov
test
cmp
dec
mov
fchs
xchg
sbb
lret
and
sbb
jno
je
inc
mov
mov
repz
sub
jb
or
or
jne
xor
pusha
push
outsb
in
loopne
jecxz
jb
pop
int3
mov
icebp
addr16
xor
push
popa
bound
lock
lahf
adc
lods
jge
or
and
cs
cmpsb
push
sahf
mov
iret
cmp
ljmp
call
fdivrs
fistps
rolb
iret
cmpb
mov
push
fs
mov
enter
xchg
int3
aam
mov
xor
hlt
jmp
pop
inc
popf
sbbb
cmp
test
pop
jo
xor
add
lahf
jle
dec
add
push
xor
stos
shll
jb
shll
inc
popa
cmp
mov
arpl
stc
outsl
pusha
sub
lock
adc
test
imul
and
jo
xor
pop
jp
push
pop
or
cld
xchg
xchg
mov
sbb
push
sub
cmpsb
pushf
repz
cmpsl
lds
iret
out
inc
inc
divl
shll
cmc
mov
shl
repnz
mul
sahf
idivb
xlat
pusha
sarl
imul
sbbl
cmp
and
aam
rclb
fsub
imul
mov
mov
pushf
je
lahf
mov
mov
xorb
sub
lcall
in
inc
inc
and
mov
adc
rorb
repnz
mov
and
push
cmp
popf
xchg
ljmp
mov
in
dec
jnp
cmp
jnp
loopne
push
jl
xchg
jno
je
imul
loop
sar
or
pusha
cmpsl
jnp
jo
push
jno
sbb
dec
inc
and
and
dec
push
js
adc
int
pop
fadds
push
mov
add
fsts
jg
rcr
xchg
mov
ret
pop
jecxz
popf
loop
rcll
hlt
xchg
adc
das
sti
mov
outsb
cmpsb
xor
stc
cmp
push
xabort
insl
ficoms
jnp
mov
shrl
pop
es
mov
pop
lahf
xchg
fsubs
int
sub
ficoms
fidivl
xlat
mov
addl
cmp
leave
mov
jg
xchg
mov
jmp
cli
or
mov
xor
xor
stos
lods
loope
ficoms
push
popf
scas
add
and
cmp
fdivs
mov
shll
push
repz
mov
mov
int3
daa
xchg
popf
lcall
jnp
jbe
and
inc
mov
push
jns
pop
lgs
mov
push
bound
xor
sti
push
mov
sub
ret
mov
pop
leave
faddl
addr16
imul
inc
pusha
sub
test
dec
es
sti
dec
jmp
xchg
pop
aad
sahf
push
jge
aaa
cltd
xchg
jmp
xchg
loopne
imul
popf
bound
daa
cltd
push
xchg
push
fimuls
pop
aaa
notb
imul
andb
or
popa
xchg
mov
sti
push
pop
inc
or
fst
aas
outsl
mov
mov
pop
stos
inc
jge
lods
into
sbb
sub
push
leave
pushf
xorb
inc
mov
outsb
imul
addr16
adc
push
cmc
add
aad
cmp
or
andb
inc
fbld
je
pop
or
cmp
mov
call
pushf
cmp
push
outsb
ss
addr16
movb
or
push
sub
out
inc
mov
scas
mov
popa
xchg
stc
push
frstor
scas
data16
mov
loopne
pushl
jmp
rcrb
insl
orl
mov
push
push
adc
xchg
movsb
into
orl
sbbb
inc
cmp
lds
sbb
mov
mov
adc
outsl
mov
pop
dec
mov
jns
pop
xor
fstpl
pop
mov
mov
sub
outsb
movsb
shll
add
lcall
push
insl
shrd
cld
cs
data16
cmp
sub
xor
lret
notb
xchg
int3
mov
cmc
push
add
stc
xor
repnz
pop
mov
jb
and
adc
mov
mov
in
nop
fisubs
aam
out
or
dec
call
fadds
gs
inc
xchg
dec
add
pop
enter
cmp
adc
pop
icebp
sub
popa
cmc
psubsw
incl
xchg
mov
out
fdivl
rcrl
or
test
and
cmp
cmp
test
divl
call
fs
imul
in
push
mov
aas
xor
dec
or
call
clc
xchg
push
cmp
mov
jae
or
adc
jg
mov
cmp
dec
push
mov
mov
arpl
aas
ljmp
aad
les
mov
dec
cli
aam
jg
loop
or
push
mov
cmp
imul
je
inc
aad
inc
insl
push
fdiv
pop
les
mov
movsb
lea
mov
cmp
cs
xchg
push
test
jae
fdivrl
mov
inc
add
mov
jbe
push
clc
mov
pusha
lds
sbb
lret
dec
test
mov
cmpsb
movsl
jno
inc
sbb
jmp
or
arpl
push
fs
and
cmc
in
or
daa
push
outsb
loope
jp
lods
dec
outsl
aam
mov
xchg
push
sahf
mov
jmp
lods
or
jg
mov
mov
movsb
movsb
ss
or
dec
int3
inc
dec
cs
inc
push
mov
jle
sbbb
pop
int
and
adc
add
cmp
fs
or
xchg
das
mov
inc
add
pop
pop
rcrl
insl
pop
punpckhdq
mov
lock
or
mov
ror
movsl
int3
pushf
pop
ffreep
pop
xlat
sbb
stos
out
sub
arpl
mov
lock
popf
or
stos
xchg
pop
es
stos
cs
js
push
std
mov
imulb
add
jg
fadd
dec
mov
pop
movsl
imul
aaa
xchg
ror
rclb
ret
or
mov
pusha
mov
push
push
push
ja
or
je
mov
cmp
pop
jnp
int3
xchg
testl
pop
shlb
ds
cmp
in
jno
pop
or
outsb
mov
sbb
mov
pop
pop
sti
add
sbb
test
inc
dec
dec
int3
lcall
sub
sub
pop
push
test
pop
iret
mov
pop
inc
add
lods
inc
add
out
out
pop
shrl
sub
fsubr
dec
es
dec
mov
lods
cmp
pop
sub
mov
test
pusha
push
std
lahf
xchg
mov
xchg
std
xor
hlt
pop
push
pop
rolb
scas
pop
xchg
ljmp
xlat
xchg
test
fbld
movaps
push
std
pop
mov
mov
shll
adc
dec
and
movsb
and
imul
sub
jg
sti
pop
adc
ljmp
ja
pop
mov
cmp
dec
xor
mov
jns
jecxz
xor
test
flds
hlt
xchg
stos
std
incl
mov
sub
outsb
shr
jno
cli
mov
int3
out
jl
jno
ror
scas
mov
push
xorb
sbb
xorb
lea
xlat
dec
jb
mov
and
fmul
mov
popa
faddp
rcrl
sbb
or
test
fldl2e
push
xchg
lea
enter
repz
push
cmp
pusha
out
jne
outsl
out
lret
push
add
push
loope
pop
inc
xchg
pop
scas
std
jle
ret
ja
mov
xlat
cwtl
fimull
xor
or
add
sahf
xchg
dec
xor
std
xchg
rorb
mov
test
outsb
xor
cltd
ret
pop
dec
inc
fs
in
xacquire
fdivrs
pushf
xchg
or
out
adc
and
movsb
fsubl
icebp
jge
cmp
cmp
and
add
iret
mov
push
jmp
fsubrs
lods
fwait
arpl
cmp
scas
mov
ljmp
rcr
icebp
mov
sti
jecxz
push
or
or
push
or
dec
je
nop
adc
pop
arpl
cmpsb
mov
sub
or
in
cmp
lock
mov
dec
sub
pop
mov
mov
adc
mov
js
cmc
push
stos
pop
mov
push
arpl
pop
jns
jp
int
fnstenv
outsl
xor
jge
int
mov
cwtl
jge
dec
pop
and
test
clc
sti
andb
mov
addl
inc
fldenv
test
testl
adc
imul
jg
orb
shr
cmp
test
lcall
ss
sbb
xchg
jl
mov
pop
push
aaa
rolb
adcl
outsl
test
mov
pop
and
or
cli
pop
mov
xor
push
jle
dec
push
lea
fwait
push
dec
pop
jnp
mov
imul
cltd
pusha
pop
push
push
dec
push
sub
mov
sbb
pop
or
mov
imul
movsb
imul
sub
push
jb
mov
popa
fdivs
push
push
repnz
es
fsub
in
aad
movsl
leave
lret
mov
sbb
fisttpll
pop
push
pop
popa
and
cwtl
stc
xchg
repnz
inc
scas
adc
pop
xor
ljmp
pop
aam
repnz
sub
hlt
fisubrl
push
xchg
or
add
xor
insb
inc
cmp
cld
and
jle
xchg
dec
pop
sti
xchg
push
fstpl
dec
and
push
test
out
or
xchg
das
mov
les
je
xor
or
adc
fimull
roll
dec
out
lods
mov
fimuls
mov
fisttpl
xchg
cs
cmp
addr16
shll
es
mov
adc
cs
out
add
mov
ftst
jecxz
push
ljmp
push
xor
sbb
xor
push
add
cmc
inc
bound
push
mov
mov
into
adc
gs
and
jle
dec
in
push
or
inc
jbe
sti
sbbb
ja
test
mov
movsl
test
or
rorl
aas
out
fcoml
stos
pop
lret
push
add
inc
cmp
scas
lret
pop
or
das
stos
loopne
add
jo
dec
mov
xchg
inc
jmp
mov
jmp
rcrl
les
sbb
into
movsl
sbb
and
sbb
pop
jmp
mov
sub
out
inc
fmul
lea
ret
xor
mov
shll
or
and
sahf
stos
andl
ret
ror
dec
aaa
aaa
cmp
inc
cmp
xlat
icebp
popl
popa
jmp
mov
dec
dec
cmp
xor
mov
lods
fcoml
fstpt
lods
push
mov
mov
jb
fsubr
dec
add
dec
icebp
push
sbb
call
ljmp
mov
and
xor
in
mov
add
fimull
and
stos
push
inc
jle
jbe
and
stos
inc
fcmovbe
push
cmpl
pop
jb
mov
mov
into
inc
aaa
cmp
sbb
aad
pop
add
gs
jecxz
adc
rcrl
mov
inc
shrb
aam
cmpsb
xor
push
sbb
inc
imul
jecxz
lahf
idiv
inc
sub
pop
mov
in
jge
int
xchg
fldl
and
push
cwtl
pusha
mov
xchg
test
cmpsl
out
pop
mov
pop
mov
cmp
add
js
dec
sub
add
fisubrl
mov
mov
push
pop
dec
sbb
or
sbb
ja
cmpsb
push
sbb
jmp
adc
arpl
fnsave
jecxz
inc
mov
aaa
pushl
add
mov
dec
clc
or
bswap
xor
imul
or
icebp
mov
jae
pop
adc
jne
orb
dec
arpl
test
out
fcomp
ja
ja
or
push
lret
bound
cmp
mov
adc
mov
in
pop
jecxz
and
mov
sbb
dec
inc
push
clc
cmpsb
stc
test
mov
sub
mov
inc
inc
adc
push
inc
pushf
je
mov
mov
cmpl
out
orl
or
inc
outsl
jge
fisubrl
lret
mov
sbb
cs
cmpsb
jg
push
movsl
and
lret
mov
jmp
gs
dec
arpl
les
data16
sub
pushf
aad
xchg
mov
addr16
iret
xor
xor
mov
daa
in
xor
fstpt
pop
lahf
fistps
shlb
rorb
xchg
mov
nop
lock
and
jnp
divl
mov
loop
xor
testl
xchg
movsb
xchg
in
imul
mov
push
lret
cld
xchg
aas
sbb
test
popa
shrl
rolb
inc
push
movb
je
jno
add
mov
mov
fistl
jae
sarb
or
mov
mov
popf
or
adc
adc
add
in
xor
mov
adc
fldcw
arpl
xchg
sub
jle
insl
or
dec
gs
ds
pop
int3
jle
adc
jge
les
mov
xor
push
mov
in
jno
xor
frstor
mov
std
ret
mov
addr16
pop
adc
mov
mov
test
rolb
fnstcw
es
js
scas
dec
pop
pop
hlt
decb
or
xor
adc
mov
aas
sahf
rorb
stos
xchg
jb
fistl
xor
adc
xchg
aam
cmp
out
lar
pop
test
or
xor
mov
ss
push
jb
adc
add
shr
lahf
pushf
pop
or
loop
fiadds
xchg
or
leave
fldl
test
out
or
jmp
in
jnp
cmpb
out
adc
cmp
imul
ss
or
inc
inc
inc
adc
sub
mov
popa
out
arpl
stc
push
cmp
mov
adc
sti
adc
add
jnp
push
cmp
jne
test
lcall
mov
dec
xchg
add
into
daa
jle
inc
stos
add
aam
test
xor
ficompl
into
dec
pop
fildll
sub
jge
call
pop
add
adc
lods
and
jae
and
je
adc
jbe
out
jbe
push
dec
jb
adc
pop
sahf
int
cli
mov
test
cmp
shrl
loopne
jb
inc
or
xor
push
mov
lds
add
mov
cmp
adc
cmc
jg
rol
add
or
aaa
xor
jb
enter
popf
xchg
cmc
jnp
inc
pop
sub
fstpl
sub
adc
idivb
sti
and
test
out
insb
mov
subl
xor
adc
xorb
ss
push
scas
adc
je
cltd
pop
mov
ret
inc
icebp
cmp
insb
sub
ffreep
ret
jae
es
hlt
lret
rcll
cmp
popa
mov
pop
addr16
std
std
xchg
stos
push
js
retw
dec
jne
stc
fxch
mov
xchg
out
stos
mov
aad
sub
fistps
mov
ljmp
mov
fcoml
jo
rorl
in
pop
sub
or
lret
mov
insl
addr16
sub
roll
fwait
cmp
scas
lds
xchg
mov
add
ds
add
sahf
test
mov
xor
popf
add
sub
pop
sub
hlt
cwtl
sub
and
cs
mov
je
pop
push
fcoms
jb
les
loope
sahf
std
push
dec
repz
es
pusha
cmp
sbb
lock
xchg
cmp
jl
mov
mov
sahf
fbld
mov
xchg
or
enter
cltd
test
or
jns
pop
popf
push
out
xchg
cwtl
adcb
mov
xor
jg
dec
js
jmp
stos
decl
or
scas
sbb
or
ds
push
adc
push
cli
mov
rclb
mov
xchg
fwait
sbb
dec
data16
dec
js
sub
adc
lock
xchg
sub
ret
pop
daa
mov
inc
loop
xchg
div
std
or
mov
out
movsl
jb
rcll
and
cmpsb
jecxz
xor
sarb
jno
xchg
or
idivb
sbb
adc
push
cmp
mov
stos
jge
jmp
repz
ja
inc
lcall
mov
lret
pop
xor
nop
int3
mov
pusha
push
jae
loop
imul
popa
jns
adc
push
js
stos
and
les
mov
xchg
notl
jae
push
sub
or
pop
outsl
xchg
or
sbb
sarl
sbb
mov
repz
xor
fcoml
sahf
pop
test
es
fsts
ret
and
test
leave
cmp
imul
xor
xor
xor
hlt
mov
cmp
mov
movsl
adc
mov
pop
adc
lock
inc
cmpsl
xlat
aam
hlt
scas
lock
xor
aad
les
xor
repz
mov
cmovo
popf
in
lds
scas
gs
lcall
xchg
pop
out
and
out
add
or
gs
push
sub
shrb
sti
mov
lods
push
pop
fstpt
xor
xlat
jle
mov
enter
orb
outsl
sbb
push
test
xchg
pop
xor
shll
inc
gs
mov
jecxz
outsb
jo
decl
cld
popa
ja
cwtl
pop
and
xchg
xchg
inc
cmp
std
das
test
sub
push
lea
mov
pop
xor
ljmp
mov
xchg
xchg
or
xor
adc
jae
js
pop
and
and
popl
dec
jne
dec
adc
sbb
cli
jns
imul
pop
inc
cli
sarb
jb
cmp
lea
xor
ljmp
aam
mov
fsubrs
in
jns
imul
insb
mov
loop
and
and
sbb
or
xchg
jnp
fwait
cs
push
push
pop
mov
and
sub
add
mov
and
push
test
add
ljmp
testb
sbb
stos
test
jmp
scas
push
xchg
aaa
cmp
andb
cmp
lods
adc
shlb
roll
daa
hlt
in
inc
lcall
inc
jl
pop
cmp
xchg
xchg
xchg
xchg
bound
add
adc
push
mov
negl
imul
mov
ss
and
jg
test
sub
inc
mov
cmp
jmp
loopne
and
and
cwtl
pop
mov
adc
mov
das
loopne
imul
push
dec
clc
and
mov
inc
and
dec
adc
fwait
mov
mov
cmp
fs
push
xchg
ss
lods
dec
ret
je
lock
aaa
sahf
pushf
xchg
or
xchg
fs
fwait
pop
subl
cmc
cltd
mov
nop
mov
mov
xor
xor
pop
shl
lahf
mov
aam
repz
mov
scas
pop
out
pop
inc
mov
mov
in
ret
ret
das
mov
int3
jnp
movsb
pop
movsb
and
inc
and
xchg
movsl
mov
mov
jno
clc
cmc
add
sub
in
sub
lock
add
sbb
xor
test
pop
dec
pusha
outsb
rorl
leave
pusha
and
sahf
rcrl
cmp
mov
outsl
fnsave
inc
test
jmp
loop
and
dec
movsl
and
sbb
out
stos
push
in
or
xchg
lar
into
and
xor
cmpsl
loopne
movsb
cmpsl
ficoms
test
ds
jb
lahf
repnz
insl
cmpsb
orb
mov
inc
cmp
fmuls
cld
in
add
movsl
ss
xorb
push
mov
mov
xlat
stos
in
sbb
adc
jg
adc
dec
mov
out
out
mov
in
cltd
subl
les
loopne
pop
jl
push
push
ret
cmovle
adc
repz
or
test
enter
popl
sbb
sbb
test
xor
outsb
cwtl
jmp
cmpsl
inc
ja
call
inc
push
ret
sbb
enter
sti
cmp
sbb
mov
ljmp
pop
pushf
inc
mov
push
arpl
lods
stc
cmovns
call
mov
outsl
sub
pop
rcrb
icebp
inc
or
rcr
js
inc
leave
xchg
push
sub
push
push
cmp
add
mov
pop
fsubrl
in
and
inc
addr16
xchg
mov
dec
test
fists
mov
xlat
adc
movsl
fisubrs
cmpsl
sahf
dec
pop
mov
ds
cmp
sub
popf
cmp
mov
lahf
test
cmp
pop
dec
rclb
xlat
add
push
adc
push
dec
daa
movsl
bnd
sarl
push
xlat
sub
popa
jae
in
inc
sub
or
fisubs
sub
int3
cmp
push
and
or
push
sbb
arpl
mov
int
shlb
pop
xor
dec
sub
cmp
xchg
lahf
push
pop
hlt
mov
in
sarl
loope
jl
cmp
jb
and
dec
imul
int3
fucomi
lahf
mov
mov
sahf
lods
adc
in
fstps
loopne
xor
fidivrl
mov
push
out
or
mov
fst
push
pusha
int
cmp
jl
fwait
mov
icebp
stos
xchg
mov
add
cltd
daa
dec
jb
push
sbb
iret
jl
mov
popf
pop
jno
push
cmp
push
rcrb
icebp
sbb
int
scas
fcompl
cmp
pop
mov
sub
leave
add
aad
cmp
mov
jl
repnz
and
mov
or
rorb
mov
sub
jno
popf
stc
jmp
cmc
pop
inc
in
fbstp
adc
das
mov
mov
hlt
cwtl
dec
repnz
fs
in
adc
imul
xor
sub
inc
sbb
or
add
sbb
enter
lods
aad
call
ja
jmp
or
mov
lahf
inc
mov
jbe
call
sbb
fsubs
lret
fsubp
jecxz
data16
aaa
shl
in
fcmovbe
add
add
inc
adc
imul
mov
sub
xlat
xor
mov
sahf
imulb
mov
xor
sub
shr
in
leave
cmp
movsl
push
fwait
loope
ds
ret
mov
lahf
jp
dec
or
rol
fwait
int
insb
cmpsl
xlat
sbb
push
xchg
out
inc
repnz
hlt
lock
push
mov
xor
jb
stos
mov
stc
mov
std
outsb
daa
inc
adc
adc
jns
rolb
lea
add
negl
loopne
fnstsw
cmc
cmp
loop
xchg
cmp
shll
aam
inc
cmpsb
insl
inc
lahf
dec
cltd
push
sbb
pop
mov
aam
mov
cmp
push
jb
inc
inc
mov
jb
lods
and
addb
xor
daa
ljmp
sar
stos
in
iret
cld
xchg
in
sub
pop
xlat
fnstsw
out
aad
arpl
jne
outsl
mov
push
dec
lahf
push
cltd
insw
xor
lods
pop
sti
rcrl
dec
test
out
inc
cwtl
jo
fldl
push
roll
lret
and
fidivrl
insb
imul
ret
dec
imul
xchg
sarb
fwait
and
jns
adc
jp
jnp
jae
sbb
lahf
add
lds
hlt
sbb
aaa
xchg
inc
xor
push
ret
pop
sbb
ja
out
int3
and
insb
jge
sub
shrb
dec
cmp
xchg
mov
dec
cwtl
divb
xor
sub
push
lcall
popa
xchg
fidivrs
call
jns
mov
add
sti
xorb
add
sbb
test
sbb
ds
out
mov
mov
sbb
dec
push
lds
and
aaa
ljmp
pop
mov
add
lret
sahf
xor
jno
pop
jle
add
leave
jno
out
jl
push
inc
ret
lock
ss
hlt
sub
and
fs
loopne
and
scas
sbb
pop
sub
sub
fwait
dec
sti
add
push
mov
sub
xlat
pop
imul
mov
sbb
stos
cmp
stos
mov
jae
subb
sbb
stc
repz
bound
dec
pop
and
inc
test
stc
scas
je
cmp
mov
fucom
sub
sub
cld
jbe
adc
stc
arpl
dec
mov
into
sub
rolb
mov
pop
push
sub
jo
xlat
pusha
pop
push
fidivs
sbb
movb
insl
lods
or
sbb
cmpsb
pop
in
aam
push
fsubs
loopne
out
jno
leave
xchg
dec
cld
pop
pop
lods
outsb
ds
mov
test
mov
cmp
inc
cmp
inc
jl
push
mov
mov
outsl
bound
cmp
inc
int3
fstl
loope
mov
add
rcll
dec
test
sub
xchg
sbb
adc
push
fistpll
lds
fucom
stc
lock
cmp
or
jecxz
sbb
aam
in
dec
aad
arpl
ds
gs
dec
sub
ret
repz
pop
lods
xchg
jbe
lret
xor
andb
push
sub
add
jb
test
xchg
hlt
inc
sub
sub
ror
test
pop
iret
mov
add
dec
xchg
cmp
scas
sub
adc
pusha
aas
mov
pop
mov
pushw
lea
jmp
pop
xchg
das
out
std
cmp
push
sub
mov
scas
xchg
mov
xchg
mov
inc
sub
cmp
int
pop
mov
xor
inc
inc
mov
in
stc
in
or
push
fidivl
adc
gs
cmc
hlt
mov
dec
jg
pop
cltd
aas
mov
add
stos
push
ret
hlt
jmp
gs
jns
add
aam
mov
les
or
jg
pusha
sbb
push
xor
aaa
stc
xor
and
mov
divl
sbb
push
lock
sub
pop
inc
jge
dec
sahf
or
push
push
xchg
pusha
and
push
push
call
movsl
in
in
ret
negl
push
cmp
sarb
or
xlat
lahf
mov
pop
jg
out
lahf
mov
jno
es
inc
mov
fucomi
fimuls
and
cmp
les
mov
xchg
mov
icebp
outsb
cmp
pop
insb
daa
lods
jb
mov
roll
sub
filds
and
dec
mov
cwtl
lds
pslld
addb
nop
push
test
cmp
lahf
outsb
xchg
mov
sub
push
lods
and
into
jae
or
lods
cli
dec
cmp
fcoms
mov
mov
or
jp
int3
inc
sbb
xorl
xchg
and
addr16
jne
daa
clc
aam
xchg
pop
adc
pop
sub
addr16
pushf
or
movsb
test
sub
ror
mov
mov
inc
dec
stc
pop
sbb
mov
mov
fistpll
sti
cli
mov
hlt
mov
xor
out
outsb
cmpsl
and
adc
fildl
mov
sarl
fwait
xchg
or
loop
sti
outsl
and
shlb
add
sbb
es
dec
popf
inc
or
sarl
shrl
insb
xchg
int3
cmp
mov
jbe
mov
adc
sbb
clc
adc
add
sub
or
jge
stc
xchg
xchg
push
scas
xchg
jne
cmp
jp
sahf
sub
outsl
in
sub
cmpsl
xchg
and
pop
movl
cli
or
hlt
shl
inc
xchg
cwtl
aad
test
leave
sub
outsl
dec
jmp
gs
pop
mov
stc
sbb
out
scas
cs
test
lds
jne
mov
cmp
dec
push
xchg
sbb
mov
lcall
pop
out
or
mov
pop
ret
mov
ret
into
ds
out
and
push
mov
imul
test
or
or
imul
pandn
int3
pushf
fs
adcl
sub
rorb
inc
jne
popf
jnp
sub
int3
and
jb
mov
popf
arpl
inc
popf
fildll
outsl
fsubl
and
jmp
jecxz
mov
adc
into
xchg
ffreep
test
aaa
push
mov
adc
insl
lret
adc
movl
fcmovb
xchg
push
push
push
mov
xor
stos
push
mov
dec
loope
mov
lods
xor
sbb
cmovl
or
push
roll
scas
inc
mov
push
add
inc
or
test
scas
popa
cld
mov
jo
ret
sbb
mov
or
call
sti
xchg
mov
cli
push
dec
or
mov
mov
or
xor
sbb
ret
mov
dec
push
insl
or
jmp
bound
ss
lods
add
sti
mov
bound
dec
lret
mov
outsl
lahf
mov
and
stos
or
jns
mov
or
xchg
mov
cmc
jns
add
adc
cmp
push
orl
test
fsubrs
push
sahf
outsl
dec
in
pushl
outsl
andl
nop
jge
lds
stos
mov
daa
out
push
shlb
jnp
mov
cwtl
in
mov
xchg
test
xor
jecxz
xchg
jnp
pop
popf
or
mov
mov
sbb
lea
ret
mov
leave
sti
or
and
imul
ret
mov
sbb
push
jb
std
mov
lea
push
shrb
pop
and
dec
mov
popa
inc
pop
sbb
out
into
sub
xor
and
or
fadd
push
cmpsl
xor
leave
aad
push
test
movsb
mov
sub
sbb
adc
pop
mov
xor
mov
push
mov
or
nop
movsl
loope
insb
rcrl
andl
push
cmp
sbb
jg
dec
std
test
lock
add
aad
ret
jbe
call
pop
fucomi
or
lock
fbld
inc
outsl
adc
xchg
or
ror
gs
lods
xchg
xchg
inc
daa
sahf
out
mov
mov
xchg
dec
sub
jmp
xor
mov
punpckldq
pop
push
out
pop
sbb
test
inc
out
jbe
or
sahf
mov
mov
ret
mov
enter
mov
mov
daa
mov
cltd
and
inc
sbb
xlat
jbe,pn
sti
add
fisttpll
call
cmp
test
ja
psrld
ds
and
lahf
sarl
xchg
or
mov
dec
ja
sub
or
lret
xor
jne
push
sbb
mov
mov
sbb
sbb
icebp
push
mov
pop
sqrtps
mov
int
in
cmpsb
mov
push
mov
inc
push
dec
add
in
int3
mov
sbb
or
loope
call
push
push
push
cmpsl
outsb
inc
jl
ss
imul
in
and
mov
inc
in
ja
scas
xchg
inc
push
xchg
lea
or
xchg
gs
xchg
mov
popf
pop
out
fs
mov
sub
fistpll
cmp
repnz
add
jnp
jl
fcmovu
cmp
xor
mov
arpl
aaa
and
or
xor
sti
mov
int
lret
rclb
aad
pop
fwait
lods
push
popf
push
dec
enter
test
jo
outsb
cmpsb
pop
jbe
jg
xor
jae
hlt
sbb
cmp
and
mov
insb
inc
cmpsl
adc
add
adc
aaa
cmpsb
mov
pusha
cmpsl
xor
lret
add
ja
loopne
jnp
shrl
sub
inc
push
mov
push
popf
pop
add
or
mov
out
push
out
jbe
mov
pop
shlb
cmp
pop
pcmpeqw
xchg
insb
xchg
data16
and
jg
pop
nop
bnd
psrad
pop
cmp
cltd
add
and
cmp
movsb
inc
inc
mov
test
cltd
fstps
cltd
sarb
pop
push
ret
out
sub
mov
std
data16
aas
pop
aas
xlat
xorb
sti
out
jne
xor
jns
test
inc
fisttpll
std
popf
and
int3
out
cmp
cmpsb
mov
pop
jmp
scas
es
je
jle
xor
and
sahf
mov
std
in
in
pop
jl
std
jg
mov
dec
ret
sbb
cmova
and
sub
enter
add
dec
xchg
xchg
sub
sysenter
and
xchg
mov
testb
and
hlt
fwait
mov
test
push
into
adc
mov
push
mov
xchg
loop
inc
leave
fwait
popa
add
in
stos
sbb
fldl
dec
xchg
dec
cmpsb
cltd
aam
push
inc
and
sub
pop
int
xor
push
mov
in
into
and
jg
sub
in
fadd
leave
sub
add
mov
outsl
or
enter
fdivrl
push
sbb
shrl
in
dec
in
inc
push
jle
ja
mov
xchg
outsb
push
loop
in
cli
lods
daa
in
push
insl
mov
push
lcall
inc
xchg
adc
inc
cmp
cwtl
popa
pop
jb
sbb
hlt
and
inc
sub
and
pushf
addr16
movsb
popa
sbb
icebp
jge
shl
dec
push
cmc
sbb
scas
and
push
insl
loopne
cwtl
fsubrl
push
add
push
inc
xchg
rcll
insl
push
imul
add
jb,pn
in
and
jp
mov
loop
test
mov
fwait
inc
jbe
push
roll
into
xor
ja
jo
scas
jno
test
jae
mov
lods
and
cmp
inc
mov
push
shlb
sub
cs
jo
mov
fwait
test
je
mov
jno
adc
je
push
leave
lock
in
xor
mov
lods
bnd
lea
mov
es
dec
shrl
fldcw
test
enter
dec
aad
das
gs
ds
lods
movsl
jo
lock
rorl
jo
ffree
ds
out
insb
rolb
jae
inc
xorb
xchg
mov
sub
cmp
xchg
fdivrp
data16
mov
cmc
inc
and
cmp
mov
imul
jp
add
out
mov
into
aas
xchg
mov
or
inc
roll
lds
push
loop
testb
mov
sbb
dec
loop
push
jmp
push
xchg
jae
pop
in
imul
sub
ljmp
xchg
xor
mov
push
jmp
gs
mov
fcmovnbe
mov
jno
push
add
loope
shl
dec
xchg
push
cmp
das
stos
adc
dec
pop
mov
data16
decl
arpl
pop
xchg
lcall
pop
dec
call
stos
jge
inc
sbb
fsubs
subb
repz
cs
pop
mov
cmp
push
push
push
hlt
repz
test
mov
repnz
adc
test
adcb
xor
sbb
gs
add
jecxz
arpl
jmp
popf
arpl
jmp
jle
jae
lret
adc
pushf
pop
push
enter
adc
or
lcall
mov
add
jnp
mov
jmp
sti
jge
cmpsl
aam
xor
or
bound
sub
mov
push
push
sarb
insl
or
pop
shll
and
in
fsubs
or
out
jp
xor
loopne
lret
fsubl
or
xchg
mov
lods
mov
dec
inc
mov
scas
xlat
fbstp
xchg
mov
repz
sbb
dec
loope
xlat
xchg
adc
mov
lods
ds
adc
push
lods
add
mov
aad
lods
insb
punpckhbw
dec
jle
jnp
ss
jae
and
fnclex
inc
inc
cmp
push
mov
dec
cltd
out
popa
jns
mov
push
loopne
loope
cmp
fists
and
roll
scas
mov
dec
push
in
scas
test
add
mov
push
lds
aas
repnz
sbb
cmc
mov
shr
aad
mov
jae
dec
sbb
or
and
out
fwait
inc
in
ror
int
std
int
sub
in
inc
shrb
decb
xchg
cmpsb
mov
int
neg
ret
ret
dec
jp
xchg
pop
pop
loope
sub
xchg
mov
mov
mov
xor
cmp
shl
push
xlat
mov
lret
adc
mov
jg
shlb
mov
jbe
stc
fnstenv
mov
sbb
int3
push
adc
xchg
mov
mov
aad
cld
adc
lret
lret
icebp
xchg
ja
sbb
sub
inc
xchg
lret
sub
jae
inc
or
mov
jge
xchg
scas
xchg
or
jae
ss
imul
clc
push
mov
cmp
popa
insl
cmp
scas
test
push
lcall
movsb
jb
mov
aad
pop
xlat
nop
xchg
lods
aad
push
rcll
insl
mov
xchg
icebp
xchg
into
test
fs
xor
in
sarl
movsl
jecxz
imul
test
pushf
cmpsl
sub
cmpsl
sbb
pop
lret
xor
add
movntps
jbe
test
lock
ja
les
pop
jns
out
mov
and
push
jno
inc
fs
adc
xor
lret
add
push
jmp
in
mov
aam
lods
outsb
fwait
push
adc
lock
leave
repz
cmpsl
add
aas
imul
fimuls
rclb
nop
fld
jae
mov
pop
sbb
pop
mov
js
adc
aaa
sub
stos
out
orb
jbe
testb
dec
das
push
cmp
dec
and
scas
mov
adcl
fadds
or
data16
xor
loope
jns
orb
les
adcb
in
dec
cmpsb
cmp
pop
cmp
push
sbb
xor
and
inc
push
dec
cmp
push
pusha
movsl
arpl
aas
push
ss
aam
sub
adc
cli
inc
adc
inc
ss
jg
repnz
popf
cmp
sub
and
js
push
add
cltd
fwait
jp
lcall
or
jne
fadds
sbb
jp
jo
push
stos
fwait
lock
xchg
repnz
cmp
cmpsb
pop
push
adc
hlt
add
and
lods
jb
mov
or
movsb
sub
sbb
test
sarl
or
push
sub
stc
loopne
cmp
ret
and
xchg
fdivr
jl
aam
daa
and
dec
sti
aad
mov
sbb
hlt
dec
add
push
fwait
pop
loope
sub
push
push
cld
out
jp
cmc
mov
mov
mov
xchg
stos
and
or
cmp
push
push
mov
sbb
insl
dec
jp
js
mov
mov
xor
sbb
jb
jl
rclb
cmp
pop
pop
mov
cld
xor
mov
sbb
leave
jb
mov
jecxz
adc
loope
arpl
cltd
ljmp
xchg
iret
lds
aad
insb
sub
lahf
push
fadds
inc
xchg
push
cmp
lret
shrb
cwtl
iret
popf
loopne
notl
push
and
sbb
sbb
fstps
sub
imul
or
sbb
out
dec
push
and
xchg
lcall
mov
jne
or
fsubrp
push
mov
pop
adc
xchg
or
rorb
popa
pop
js
mov
mov
xchg
testb
inc
adc
iret
scas
js
jg
xchg
pop
cmc
scas
sub
mull
movb
adc
fcomps
adc
rcll
imul
call
mov
push
mov
outsl
inc
scas
fstp
popa
pop
dec
movsb
lret
daa
or
inc
jns
daa
rcrb
sbb
mov
mov
pop
aad
cmp
jp
movsb
je
lock
ficompl
sbb
sbb
inc
hlt
add
aam
pop
push
popa
pushf
cli
xorb
xor
adc
add
pop
xor
scas
cwtl
popf
sbb
clc
adc
mov
test
mov
jo
pop
add
or
jno
imul
xchg
cmp
lds
sarb
dec
lock
ret
aaa
outsl
sbb
icebp
sahf
es
lods
and
fmul
js
jg
frstor
pop
mov
shlb
cmp
into
mov
pushf
mov
mov
cmp
js
fdivs
shl
xchg
lea
sarb
push
and
jae
adc
jle
fs
mov
dec
stc
leave
add
je
repnz
push
mov
push
mov
mov
loopne
inc
ret
jnp
loopne
out
cltd
jl
or
aaa
pop
push
jmp
fldl
cmpb
and
mov
xor
jg
jbe
fs
jmp
fstps
loopne
sbb
xchg
divl
mov
mov
mov
sub
arpl
out
add
in
shl
inc
xchg
mov
arpl
cmp
fdivs
xchg
decb
xchg
sbb
xchg
mov
mov
les
xor
xor
mov
adc
nop
movsb
cmp
lods
lods
xchg
inc
push
std
xchg
cmpsb
adc
push
or
dec
dec
fdivs
cmpsl
sbb
lret
shrl
add
and
nopl
sti
inc
and
cmp
adc
out
xor
outsl
cwtl
or
jb
out
cmp
pop
xchg
les
addb
cmp
lods
les
mov
add
mov
push
mov
add
repnz
mov
int
pusha
mov
pop
and
int3
mov
sub
adc
push
mov
in
and
pop
adc
or
aam
aaa
mov
movsl
push
repz
movb
sub
inc
fistps
pop
arpl
js
mov
push
stos
std
cmp
enter
fs
cwtd
scas
push
pop
rcl
mov
and
pop
movsb
enter
out
movsb
jnp,pn
cmp
les
dec
mov
das
pop
into
xchg
cmpsb
popf
inc
outsl
lock
mov
lds
addr16
aam
or
rclb
push
dec
sbb
mov
int
seto
dec
sbbb
stc
shrl
adc
mov
xor
mov
out
jg
xchg
arpl
cmc
jbe
ljmp
jp
mov
int3
inc
repz
ret
push
pop
xor
loopne
inc
lret
dec
not
jg
repnz
push
mov
shll
and
mov
sbb
adc
pusha
ficompl
mov
test
mov
mov
shll
scas
inc
loop
jae
clc
and
pop
ds
jg
shrb
shl
jge
cmp
lds
jp
adc
dec
mov
mov
sbb
stos
popa
pop
or
dec
cmp
test
scas
sarb
sub
pop
ja
cmp
or
ds
lods
and
fcom
sbb
dec
es
scas
or
xchg
or
stos
add
sub
push
inc
in
sbb
mov
mov
daa
lcall
push
gs
jmp
mov
iret
cmp
jecxz
xchg
push
pop
cmp
cmp
sbb
or
dec
stc
lea
sbb
icebp
inc
dec
enter
sbb
stos
daa
xchg
ret
lds
sbb
idivb
lods
mov
and
loope
jmp
shl
leave
inc
adc
pop
inc
lea
sahf
xchg
and
icebp
xchg
loope
add
push
and
push
sar
and
xchg
pop
cwtl
sarb
ss
pop
sti
and
data16
cmp
pusha
in
imul
inc
stos
mov
xchg
and
sub
je
xlat
gs
repnz
mov
mov
ss
adc
scas
or
jp
frstor
aas
and
mov
out
imul
or
int
sbb
loope
aas
and
lods
iret
xchg
icebp
out
or
lea
sbb
je
jl
xchg
shll
pop
fisubl
rclb
aas
ss
data16
add
cltd
mul
gs
pop
pop
mov
clc
sub
xchg
aas
add
and
das
xchg
gs
psubsb
mov
cwtl
fs
fsubrl
lret
cli
mov
pop
imul
dec
or
jae
jecxz
lods
in
in
sub
dec
rcl
into
mov
and
mov
dec
dec
frstor
fistps
or
pop
pop
mov
es
test
fists
mov
mov
lds
jnp
push
add
int
dec
hlt
pop
push
in
jb
dec
jb
jno
outsl
stos
inc
and
and
int3
mov
cmp
je
push
sbb
dec
fldl
icebp
sub
outsb
push
dec
lret
loop
sbb
pop
adc
iret
fwait
icebp
jo
and
mov
inc
xchg
mov
jmp
sti
xchg
pop
jle
mov
push
cli
test
testl
xor
ss
fmull
fdivr
jnp
lcall
adc
sub
jo
sub
lret
or
sbb
subl
inc
mov
xlat
mov
call
lods
stc
call
mov
mov
imul
jns
mov
push
iret
xchg
in
in
mov
adcb
adc
jno
and
in
sahf
mov
inc
mov
mov
sahf
subl
add
or
dec
push
ja
adc
dec
fisubs
xorl
push
push
dec
adc
dec
mov
aaa
pop
dec
sbb
imull
mov
xchg
aas
and
cwtl
mov
dec
lret
mov
cs
rcll
popa
xlat
mov
jnp
dec
mov
or
ret
popa
test
lds
lods
push
divl
jmp
mov
std
xchg
je
mov
out
and
lret
in
stos
lret
aam
arpl
pusha
push
test
xor
add
pop
sbb
ror
mov
fisttpll
stc
xor
mov
sbb
xor
pop
sub
xor
mov
lea
ja
jb
adc
xchg
pop
std
push
jno
test
outsl
or
push
mov
aam
push
ds
adc
enter
pop
inc
push
cld
lds
mov
cmp
in
cwtl
cmp
mov
inc
dec
mov
mov
andl
in
int3
pushl
adc
and
add
cmc
cld
dec
mov
test
ss
adc
sub
sbb
insl
repz
mov
pop
mov
aaa
mov
daa
shl
lret
repnz
ljmp
dec
in
or
cmpsl
lock
out
mov
imul
sub
out
pop
mov
mov
push
rclb
dec
push
jns
pop
stos
lret
je
insl
mov
mov
shrb
sub
jmp
out
cmc
or
and
in
mov
sti
push
ja
cmp
lret
mov
cmp
mov
call
ljmp
stos
xor
dec
pop
inc
scas
inc
dec
cmp
pop
stc
repz
ds
push
jno
jmp
dec
sbb
lds
jae
out
jg
daa
jmp
movsb
neg
jecxz
jb
enter
jnp
inc
xchg
mov
jo
sub
xchg
adc
add
xor
daa
cmp
aaa
push
ret
lret
aad
inc
jae
add
ljmp
or
lods
dec
jmp
ljmp
or
loopne
add
dec
nop
popa
lods
and
rcrl
pop
movsl
or
ljmp
mov
jmp
mov
xor
scas
dec
and
roll
push
cmp
cli
sbb
cltd
sub
enter
sbb
rclb
fwait
jge
push
popf
xchg
push
into
jmp
dec
xor
test
data16
jno
add
xchg
ret
cmp
jno
sbb
xchg
call
push
mov
inc
sbb
push
adc
test
jl
movl
mov
pop
or
pusha
inc
jne
outsl
or
inc
bsf
add
repnz
jae
mov
popa
pop
or
rcrl
outsl
dec
mov
ja
mov
gs
xchg
int
add
popa
and
out
sbb
vmovupd
mov
ret
lret
jnp
pop
es
ss
push
lea
fisttps
jno
xchg
icebp
mov
inc
cmpsl
test
hlt
sbb
inc
inc
fistps
adc
je
mov
sub
add
aam
in
lods
shrl
cmp
mov
js
dec
xor
and
das
pusha
jmp
xor
ffree
mov
mov
ret
mov
jle
adc
mov
cmp
dec
pop
in
cwtl
or
inc
std
lods
inc
push
mov
shlb
dec
and
fwait
loopne
js
pop
in
fiaddl
adc
or
and
and
xchg
mov
add
or
out
scas
inc
mov
add
lret
pop
insl
jge
mov
ds
or
fimull
dec
mov
ds
jmp
pop
sub
dec
call
cmpsb
in
xchg
or
xor
mov
int3
adcl
fisttpll
push
cltd
sbb
sub
push
sbb
adc
jmp
rcrl
mov
icebp
aam
pusha
xchg
jbe
jle
push
decb
es
cmp
xor
inc
repz
pop
test
mov
clc
xchg
jbe,pt
repz
xchg
add
mov
bound
mov
jno
sub
mov
push
cwtl
adc
push
mov
sub
imul
push
ds
mov
push
shll
lock
cld
dec
lret
jae
lods
and
mov
clc
addr16
pushf
jno
in
cwtl
jns
cmp
call
jecxz
testl
hlt
sub
rorb
hlt
jae
mov
fisttpl
push
cmc
sti
nop
cltd
outsl
rcl
add
fwait
xlat
and
imulb
outsl
in
shlb
dec
cld
int
inc
cmpsl
or
add
jp
mov
push
insb
and
lret
addr16
xchg
aam
fxch
repnz
inc
dec
push
adc
movsb
hlt
push
xchg
add
sbb
loopne
rol
rcrl
fsts
fmull
enter
or
jg
pop
adc
lods
cmp
mov
xchg
push
mov
xor
loopne
xchg
sbb
jp
jg
push
mov
sub
pop
enter
cwtl
xchg
cmp
push
scas
ja
push
cmc
ja
in
dec
jmp
xor
xor
dec
scas
and
mov
mov
jg
movsl
adc
in
mov
iret
inc
push
adc
ds
adc
outsb
mov
pop
popf
push
jmp
adc
xor
inc
loopne
xchg
es
lret
xor
add
xchg
cmc
incl
add
pop
xorl
jecxz
push
xor
movsl
pop
das
lods
int
xor
fnstsw
in
popf
clc
gs
out
scas
cmp
jg
aad
jbe
je
pop
les
pop
push
and
mov
mov
dec
push
test
cs
lcall
shll
ds
jno
fs
inc
mov
pop
mov
cli
inc
in
push
stc
ret
aad
mov
mov
nop
fcom
dec
sbb
test
fldt
mov
mov
pop
popa
iret
enter
lds
lea
shl
jbe
loop
xor
or
jno
dec
pop
fld
jno
sub
dec
cmp
inc
or
jle
xorl
ret
mov
pop
mov
pop
fdivl
imulb
sti
pop
pop
jle
cmp
mov
arpl
xorb
mov
in
dec
or
in
or
or
lahf
aas
and
cmp
pop
push
cltd
push
in
dec
ss
fsubrs
mov
sub
iret
dec
sub
cmc
mov
lgs
adc
inc
into
xlat
pop
xor
mov
fisubrs
repz
mov
and
in
dec
adc
sbb
cmp
rorl
movsl
fs
mov
and
cmp
lret
xchg
shrb
scas
jns
mov
push
pop
and
frstor
cmp
and
cmp
or
ret
daa
push
test
outsb
mov
dec
rcrl
jp
dec
inc
adc
pop
repz
cmp
shl
xchg
jge
xchg
cwtl
push
arpl
inc
push
add
cmp
insb
jge
dec
mov
jns
sbb
pop
mov
repz
ret
inc
je
scas
add
ljmp
sbb
xchg
js
xchg
out
or
mov
xchg
mov
pop
subl
lahf
xor
mov
ss
lahf
loope
cmc
lret
xchg
cli
insl
add
jmp
loope
sub
int
test
pop
cmp
push
inc
dec
rcl
outsl
stos
enter
sub
sub
push
push
enter
aaa
dec
subb
rcl
nop
jp
outsb
js
push
rcr
icebp
or
mov
pop
stos
into
pop
xchg
adc
ds
pop
push
mov
ret
mov
or
ret
jae
push
mov
push
dec
jp
pop
testb
cmc
cli
cmp
sahf
sub
iret
mov
ljmp
jb,pt
test
cli
push
adc
pushf
in
or
dec
stos
and
lock
adc
dec
jge
push
icebp
ds
jns
cmpsb
fs
dec
dec
pop
xchg
ret
jle,pt
add
sti
je
mov
repz
orl
pusha
scas
icebp
fsts
outsb
dec
int
add
enter
pop
lock
frstor
jp
cmpb
into
subl
xor
pop
pushf
mov
fdivr
dec
jmp
pop
mov
movsb
js
xor
out
dec
aas
and
xchg
push
cmp
fisubrl
pop
in
dec
sahf
mov
xchg
outsb
adc
test
nop
and
adc
cs
pop
dec
notl
jb
pusha
lahf
xor
sub
sahf
mov
mov
sbb
xor
mov
cmc
xor
loope
lret
mov
jo
cmp
xor
mov
cmp
sub
pop
es
xor
cwtl
int
cmp
leave
mov
jge
adc
dec
mov
pop
xor
jae
cmc
int3
out
adcl
popa
insb
lahf
aam
popa
arpl
push
mov
jp
mov
lret
ds
xchg
push
je
bound
fmuls
fisubrl
push
mov
ss
or
lahf
iret
pusha
fwait
lahf
dec
push
pop
mov
inc
in
adc
pop
popa
ds
sub
das
jae
stos
frstor
lret
inc
jge
leave
sbb
cmc
mov
out
adc
add
add
cmp
ret
push
js
lods
cmp
stos
rclb
dec
adc
and
push
mov
call
xor
mov
adc
mov
loopne
adc
mov
lret
jno
insb
sbb
pushf
pop
scas
hlt
ror
ljmp
rorb
in
cmpb
xchg
in
mov
xchg
mov
pushf
hlt
mov
call
jb
aaa
les
gs
cmp
add
adc
loop
jnp
or
int
hlt
and
jbe
aas
in
push
mov
adc
sub
in
pop
cli
mov
mov
push
cmpsb
fnstsw
out
inc
adc
dec
dec
das
mov
shll
sbb
out
repz
push
sbb
push
pop
loope
xchg
and
xchg
lock
add
inc
inc
stos
dec
sbb
into
pop
inc
mull
mov
test
cwtl
ljmp
imulb
or
xor
mov
rolb
push
push
add
adc
ret
imul
mov
outsl
cmp
scas
je
mov
push
mov
rorl
test
mov
ret
add
sbb
or
push
shll
xchg
mov
jae
daa
les
pop
dec
aas
jle
push
pop
fidivrl
sbb
pop
rcl
fwait
addr16
pushf
mov
ljmp
sbb
and
sub
test
push
sti
adc
mov
xchg
subl
inc
sub
mov
fxam
lcall
cmp
push
lahf
jne
adc
mov
je
js
dec
dec
xchg
addr16
bound
inc
leave
dec
adc
lret
je
mov
lds
jne
sub
xor
add
repz
mov
ss
mov
add
adc
push
push
pop
jle
fmull
jns
scas
mov
stos
xchg
adc
mov
imul
xor
cmp
fisttpl
mov
pop
scas
aaa
outsl
push
jle
mov
rorl
jmp
push
mov
add
mov
stc
jnp
into
sbb
cmpsl
inc
gs
adc
or
adc
es
gs
imul
mov
out
xlat
shlb
sub
ljmp
repz
jnp
xchg
lahf
stos
aaa
stc
cmp
inc
lret
adc
lods
and
ficoml
push
sub
cmp
test
inc
push
xor
inc
lahf
xchg
test
call
sbb
sub
insb
ds
cmp
mov
mov
jmp
test
cltd
jnp
cld
movsb
gs
mulb
test
lock
xchg
or
inc
in
cmc
mov
in
data16
push
pop
jno
inc
scas
mov
push
sbb
dec
mov
pop
mov
sub
and
mov
in
mov
jmp
call
pop
mov
sub
pop
ret
xor
sub
cwtl
cmpxchg
loopne
cmp
mov
mov
xchg
xor
inc
je
mov
loopne
out
mov
js
movsb
inc
fisubs
add
or
iret
movsl
test
jbe
in
data16
ret
testl
inc
mov
inc
inc
mov
decb
imul
out
cltd
int3
mov
cmp
push
rcll
aaa
add
push
ret
jl
xchg
andl
mov
xchg
inc
cmp
fisttps
fs
popf
int
xor
sub
cmpsl
add
dec
outsl
xchg
das
test
jbe
sahf
mov
pop
loop
push
pop
mov
sub
mov
xor
scas
push
icebp
in
jmp
repnz
push
jne
call
sti
or
or
fldcw
dec
mov
dec
cmp
mov
or
inc
and
xchg
sahf
xor
sbb
aad
cwtl
jle
pop
mov
es
fs
dec
push
and
mov
push
and
decl
add
push
sahf
pop
scas
mov
fmulp
popf
adc
aam
jl
add
add
pusha
pop
inc
fsub
jp
fistps
sub
dec
jnp
adc
ret
or
stc
fwait
jp
pop
push
mov
popl
add
repz
adc
push
in
sub
and
pushf
rolb
xchg
push
add
fxch
hlt
sub
mov
mov
faddl
dec
xchg
std
cmpb
pop
fsubrp
pop
movsl
pop
outsl
sbb
std
fidivl
cs
inc
mov
dec
je
enter
push
test
call
nop
or
push
xor
cmp
lods
in
and
jbe
lock
sub
jo
jle
pop
lock
leave
icebp
fadds
popa
cmp
dec
aas
cmp
frstor
sub
jecxz
ss
mov
jb
scas
push
dec
call
cs
mov
adcb
in
sbb
push
cs
inc
into
xlat
lods
in
cli
loop
lods
adc
inc
icebp
pop
pop
lahf
cmp
inc
outsl
test
jns
and
xor
out
xor
cmp
dec
outsl
xchg
mov
shlb
push
jnp
les
pop
div
mov
out
incl
aad
cmp
cltd
add
sub
cmp
cwtl
dec
xchg
xchg
mov
test
inc
repz
incb
das
mov
movsl
fistl
jmp
xchg
lret
test
cmp
gs
adc
nop
xor
jb
data16
adc
mov
out
xchg
pop
adc
and
pop
hlt
cmpsl
jp
pop
push
call
pop
add
int3
fsubrs
xor
mov
stc
lahf
or
ficomps
add
adc
cltd
xchg
sub
mov
call
and
add
sbb
negb
imul
jmp
arpl
mov
jbe
pushf
es
jmp
lock
inc
mov
cli
push
test
xor
out
insb
enter
dec
imul
ret
sub
das
loope
jo
cmp
jecxz
mov
ljmp
inc
push
adc
int3
pop
xor
mov
jne
stc
imul
sbb
sahf
push
push
mov
scas
add
inc
arpl
mov
adc
enter
insl
out
testb
and
rolb
push
sahf
fcmovbe
dec
cld
push
mov
in
repnz
adc
ds
xor
cmp
into
insb
xlat
pushl
jmp
icebp
dec
fs
push
sbb
dec
outsb
sahf
pop
aaa
lods
dec
pop
bound
pop
faddl
jmp
in
sti
shll
xchg
sub
ja
sub
adc
xor
and
mov
jle
enter
fildll
aad
addr16
cmp
in
mov
repz
nop
or
sbb
in
add
ret
jl
mov
cmp
mov
out
jmp
jecxz
enter
sbb
movsb
int3
out
mov
out
xchg
nop
mov
cmpsb
sub
pop
gs
sbbb
bound
sub
rolw
stc
dec
cmp
and
jle
lret
mov
jge
cld
cmp
or
andl
int3
push
adc
icebp
pushf
inc
lahf
insl
jns
lret
adc
cmp
rclb
popf
jl
sub
mov
sbb
and
insb
pop
xchg
and
dec
jge
ds
test
dec
mov
jo
cmp
adcb
std
lahf
jbe
repz
or
imul
dec
hlt
mov
and
lods
arpl
cwtl
sbbl
cmpl
nop
jmp
call
jecxz
inc
pop
stos
mov
arpl
xchg
popa
leave
sbb
clc
les
xchg
xchg
dec
movsb
fidivl
sub
push
je
arpl
xlat
xor
pop
movsb
push
kortestb
dec
mov
dec
xor
enter
in
addr16
in
js
es
mov
gs
mov
jp
repz
cmpl
add
push
mov
pop
xchg
inc
mov
sub
adc
insl
lret
mov
adc
mov
jg
sbb
push
or
xchg
lret
cmc
dec
sub
nop
out
std
push
loop
push
inc
pop
dec
cld
int3
mov
inc
sti
jne
sub
or
iret
icebp
pop
jae
ret
cld
aaa
push
andb
fcomi
je
sub
fmulp
jmp
repz
mov
jns
inc
xor
pop
mov
cmp
in
add
adc
int
fldcw
dec
mov
mov
mov
pushf
cld
xor
jbe
negb
clc
fs
cmp
fisubs
mov
add
call
sub
movaps
mov
cwtl
subb
and
fildll
loopne
dec
lods
push
dec
aam
push
lcall
sub
mov
adc
call
in
addr16
clc
pop
jle
push
psubb
and
ljmp
dec
mov
pop
push
sbbb
cwtl
lcall
pushl
sti
cmp
int3
stos
jbe
cmpl
lods
sub
mov
cmp
sbb
xchg
xlat
inc
stos
jae
cld
lock
fstps
adc
pop
or
test
sar
lret
filds
fidivs
fwait
in
inc
adc
ss
mov
mov
xchg
xchg
fldt
adcb
lret
mov
sbb
lret
sbb
xor
out
test
jb
sahf
je
or
xor
lock
jg
mov
test
push
hlt
jecxz
data16
and
insb
insl
hlt
mov
in
add
subl
clc
adc
fildll
fildl
push
xor
fsub
push
popa
rorl
repz
test
daa
dec
adc
xchg
cs
inc
inc
jno
sbb
stos
mov
lods
ret
pop
mov
cmp
addr16
lahf
jmp
push
stos
adc
ds
outsl
inc
bound
jnp
xor
aad
movsl
adc
add
scas
in
pop
int
pop
xorb
mov
fsubrl
and
push
psrlq
inc
cmpsb
push
bound
cmp
mov
sub
repnz
inc
mov
sbb
pop
nop
addr16
mov
loop
aas
enter
call
pop
and
inc
push
cld
add
outsl
ja
arpl
mov
or
jb
cwtl
mov
lcall
adc
out
inc
fcoml
xorl
push
mov
add
push
inc
adc
and
jbe
andb
push
mov
movsb
and
leave
nop
mov
adc
imul
pop
mov
mov
addr16
mov
pop
out
adc
out
jecxz
es
or
xor
data16
leave
mov
cmp
int
insb
sbb
lret
sahf
dec
xor
or
cwtl
cwtl
mov
popf
push
lods
jnp
loope
cli
adc
lock
xchg
movsb
adc
jle
into
dec
into
cmp
stos
popf
das
pop
mov
imul
fs
cmp
fimull
pop
and
fmull
repnz
movsb
cwtl
in
xchg
and
push
iret
ret
or
pop
fldenv
ret
jb
nop
out
lcall
insl
xor
hlt
rcl
and
xchg
rclb
sti
xor
push
insl
arpl
nop
in
add
stos
push
cmpb
mov
aad
push
scas
hlt
mov
mov
insb
aam
popa
mov
xor
mov
jl
xorl
dec
cmp
pop
sbb
sbbl
movsl
out
pop
push
test
inc
lret
jge
mov
sub
rorl
nop
test
aas
add
stos
out
inc
mov
in
icebp
jp
push
stos
pop
jge
jae
sub
jnp
mov
sti
xchg
rolb
sahf
jb
sbb
push
ret
cltd
mov
aaa
adc
lret
in
sbb
pop
js
jo
mov
pusha
xchg
rcl
out
push
push
mov
sub
xorl
and
sbb
pop
outsl
loop
jp
sbb
sub
or
cmp
cmp
mov
inc
mov
sbb
aam
ljmp
fcmovnbe
scas
push
stc
inc
push
call
sbb
inc
mov
xchg
dec
fldenv
stos
gs
xchg
inc
sub
arpl
sub
mov
jae
sub
cmp
fwait
neg
and
scas
scas
mov
jno
out
push
arpl
shl
lods
xor
aam
sbb
fchs
int3
jae
mov
sbbb
lcall
sbb
xor
mov
pop
ret
mov
lods
repz
dec
cmpsb
test
push
push
test
rcll
push
mov
mov
add
adc
iret
call
mov
dec
mov
lods
bound
pop
pop
mov
dec
popa
fldenv
cmp
lds
mov
sbbb
stc
fidivrs
lds
mov
pop
jo
movsb
jecxz
dec
xlat
adc
jle
jge
inc
lret
jno
push
movsl
and
mov
jns
out
mov
pop
mov
xor
ss
xchg
and
sub
out
adc
aam
insb
and
push
mov
les
gs
sub
dec
mov
sbb
mov
shll
push
arpl
add
ja
aad
das
mov
adc
mov
mov
inc
jo
mov
jmp
cmpsb
xor
ror
pop
inc
dec
push
imul
loope
pop
lods
je
cwtl
iret
xor
lahf
inc
popf
mov
cmp
jae
sub
sarb
sub
push
sbb
mov
div
adc
inc
or
dec
int
insb
sbb
stos
aas
mov
dec
scas
out
jo
shlb
ret
lret
sbb
mov
imul
imul
or
adc
pop
mov
loope
pop
les
rolb
loop
bswap
shrl
xchg
add
lret
hlt
fiadds
clc
adc
push
shlb
cmpsl
dec
dec
mov
arpl
mov
xchg
or
pop
xchg
enter
cmpsl
and
clc
or
shl
lock
push
test
shl
rolb
dec
data16
out
mov
std
outsb
mov
test
ror
inc
iret
shlb
cmp
sahf
jle
js
icebp
js
pop
out
mov
cmp
movsb
pop
lock
push
add
inc
push
and
sub
push
cmpb
call
add
out
add
ja
mov
loope
movsl
and
and
adc
rcrb
stos
out
adc
gs
cltd
add
in
out
cmp
idiv
cmp
lahf
or
aad
mov
mov
clc
jne
cmp
lods
mov
ret
cmp
jl
and
pushf
mov
mov
jae
testl
pusha
bound
pop
repnz
sbb
jl
xorl
int
dec
jle
push
push
out
and
std
cwtl
cmp
popf
outsl
dec
je
dec
repz
add
fcompl
les
or
lock
add
or
call
jbe
pop
dec
mov
sub
inc
ss
xor
ret
test
mov
add
int
and
sbb
mov
shrb
pop
jp
push
inc
loop
leave
sbb
adc
popa
std
mov
aam
add
mov
or
fistps
add
test
out
inc
lock
dec
mov
and
push
cmp
or
testl
jge
xor
jnp
cmpsl
clc
dec
adc
jae
inc
cmp
hlt
and
pop
sub
xor
cmpsb
adc
adc
pushf
popf
in
daa
testb
and
pop
mov
sub
pop
mov
sbb
push
mov
mov
out
fs
enter
out
mov
push
push
test
gs
in
sti
fiaddl
pop
loop
stos
push
cmp
and
xchg
cli
shl
cli
les
add
xor
and
mov
pop
xchg
imul
mov
xchg
fcmovu
shlb
repnz
popf
cmp
and
or
enter
dec
mov
dec
xor
push
stos
push
ret
inc
hlt
lods
mov
insb
pop
stos
into
aad
add
sbb
xor
lcall
fsts
or
mov
push
pop
dec
or
fidivs
sti
sub
jecxz
pop
add
add
push
fidivs
xor
jge
pop
int
cs
xorl
lds
pop
mov
fmul
popa
rdmsr
adc
sub
mov
cmp
dec
jbe
adc
repz
lcall
out
cmp
or
sub
push
push
imul
rcrb
test
scas
lea
in
icebp
fdivp
cmp
sti
ljmp
push
mov
cmp
sbb
pop
push
adcl
inc
or
sbb
push
jg
ljmp
stos
shlb
xor
dec
xchg
fst
jmp
aaa
lcall
jae
xchg
cltd
dec
int
je
js
arpl
loop
mov
mov
shl
inc
add
cmp
mov
popa
or
movsl
leave
mov
or
jmp
rcll
mov
lret
pushf
iret
jp
mov
xchg
mov
mov
sub
jb
lahf
scas
mov
jle
nop
daa
jo
mov
decl
fwait
inc
lods
dec
push
ljmp
jg
jno
pop
sbb
push
push
std
fidivrl
xor
lock
mov
cmp
xchg
xchg
cmp
repnz
adc
imul
cmp
or
ja
sub
repnz
xchg
sbb
dec
cli
push
jno
movsl
fdivs
loop
cs
push
xchg
push
sub
sbb
aam
lea
mov
jo
pop
push
je
inc
nopl
jl
mov
fwait
insb
sub
mov
xor
sbb
aad
pop
jo
out
daa
sub
loop
rcr
sub
imul
ja
jo
push
lea
xor
ja
arpl
mov
in
call
rorb
mov
dec
adc
adc
pop
push
mov
mov
into
scas
mov
and
repz
idivb
xor
bound
ja
mov
mov
fwait
pop
adc
mov
sti
imul
xor
xchg
imul
jle
sub
sbb
mov
add
pusha
push
test
arpl
dec
jbe
in
adc
stos
popf
push
fisttpll
aam
push
cs
push
ljmp
sub
in
xor
mov
movsb
sarb
sbb
repz
xchg
xchg
cmp
mov
in
daa
inc
add
cmp
adc
adcl
cmp
cld
sar
mov
pop
stc
into
arpl
cmp
sbb
in
sbbl
mov
mov
sahf
dec
in
cltd
pop
jmp
xor
lds
cmp
inc
fidivl
daa
test
aad
cmp
xor
insl
mov
lds
fcoml
nop
inc
pop
cmp
pusha
mov
mov
cltd
or
stc
cmp
clc
push
xlat
xlat
out
fwait
inc
jns
enter
test
mov
jge
xor
mov
scas
into
shrl
add
jb
je
mov
enter
or
dec
dec
cmp
xchg
into
mov
mul
dec
xchg
lahf
iret
aad
testb
daa
int3
andl
cltd
daa
gs
insb
jge
hlt
mov
push
daa
cli
dec
inc
cmp
out
inc
mulb
mov
inc
pop
mov
and
or
sbb
stc
out
xorb
in
xor
daa
xchg
inc
pop
add
xor
mov
cmp
jmp
mov
add
mov
mov
into
std
inc
loop
pop
in
pop
ror
sbb
lret
cld
lods
outsb
push
pop
dec
pop
pop
sub
sub
sub
mov
mov
sti
mov
out
out
fs
sti
dec
loop
dec
es
jle
mov
in
sub
in
push
add
xor
popa
pop
dec
ret
es
subps
push
cmc
push
mov
aas
loop
mov
std
cmp
imul
inc
adc
dec
cmp
lret
lods
push
xor
ficomps
xorl
addr16
adc
inc
iret
inc
mov
or
out
jmp
xlat
nop
and
jo
rol
ds
push
arpl
fdiv
into
pop
push
xchg
rclb
shlb
sbb
mov
or
int3
dec
mov
cmpsb
jmp
sti
je
mov
adc
add
sub
sub
sbb
and
cmp
push
jb
add
push
mov
pop
mov
push
out
sti
mov
jno
xchg
sbb
or
push
out
lods
fnstenv
sbb
ja
loop
mov
sarb
dec
shlb
jp
mov
fs
adc
mov
out
repnz
stc
mov
clc
aam
imul
movsl
push
aas
mov
mov
popf
xchg
push
dec
cmp
pop
or
inc
mov
pop
arpl
clc
xchg
data16
ret
mov
loopne
pop
xchg
add
out
test
adc
mov
pop
mov
and
fsubrs
cmp
mov
getsec
imul
mov
subl
stc
push
out
push
dec
jno
icebp
mulb
xor
pop
int
sarb
mov
daa
mov
jp
xor
icebp
pop
incb
lea
test
ret
pop
popf
aad
ljmp
int3
negb
inc
and
cmp
dec
outsb
inc
pop
inc
inc
outsb
jns
fsubrl
arpl
add
nop
inc
mov
xchg
adc
xchg
test
pop
cmc
push
lock
cmp
pop
adc
bound
push
js
push
xchg
inc
orb
test
pop
cli
lcall
stos
std
jno
movsl
repz
mov
push
daa
add
dec
shr
mov
sbb
callw
pop
inc
flds
es
lret
std
jecxz
ds
adc
jmp
dec
sbb
adc
mov
adc
adc
mov
inc
mov
ret
mov
jp
lods
hlt
fildll
mov
add
loopne
lods
jl
cli
or
inc
cli
or
cmp
rolb
std
fstl
xorb
nop
jmp
mov
cmpsb
int
push
jbe
lcall
push
bound
jp
mov
dec
or
lahf
cmc
and
sti
sbb
in
xchg
adc
jbe
mov
movsl
mov
in
add
sbb
push
jnp
movsl
mov
lahf
sbb
dec
mov
stc
jl
adc
mov
cmp
xor
in
xchg
loopne
mov
dec
push
adc
rcll
gs
inc
sub
test
in
jb
push
mov
mov
sub
in
imul
cmp
or
stc
pop
adc
adc
push
ja
ja
popf
test
mov
sub
movsl
cs
push
mov
jns
inc
cmp
xchg
das
insl
ds
jae
xor
jle
dec
insb
xchg
pop
cmpsb
popf
mov
and
hlt
ret
push
rcrb
mov
cmp
sbb
and
cmp
add
clc
dec
adc
pop
shrb
push
or
or
mov
outsl
ficoml
pop
pop
gs
cwtl
sub
lret
aas
mov
data16
js
adc
repnz
aaa
lret
or
inc
jne
lock
ficompl
mov
int
scas
loopne
jnp
add
leave
ljmp
jmp
jle
mov
jb
sbb
dec
cld
fdiv
xchg
push
inc
aad
push
or
xchg
hlt
ja
gs
xchg
mov
jae
addl
das
push
fxch
in
sbb
inc
mov
scas
test
inc
push
xchg
adc
inc
dec
push
xlat
fcoms
frstor
add
sbb
loop
xchg
stos
movb
jp
and
inc
xchg
adc
sbb
shll
xchg
imul
mov
das
rorb
cmpsb
imul
les
and
ror
push
pop
gs
mov
jb
adc
sbbb
mov
fwait
pop
in
mov
pop
call
shrl
dec
shrl
push
in
jo
addb
jp
sub
inc
inc
test
aad
and
mov
rorl
inc
loop
inc
shlb
cltd
xor
cs
ja
loop
xchg
cmp
testl
add
loop
arpl
dec
mov
int
inc
icebp
in
and
les
xor
xchg
lret
int3
out
in
test
mov
adc
loop
xor
sub
mov
sbb
push
mov
in
push
cmp
mov
push
addb
insl
mov
push
mov
jb
adc
and
jl
xchg
and
sbb
mov
pop
sbb
jge
cli
ss
inc
jle
mov
arpl
and
int
test
mov
dec
mov
adc
imul
sbb
inc
dec
and
outsb
sbb
imul
add
les
mov
mov
push
add
aas
hlt
gs
pop
xor
lret
mov
addr16
daa
shl
pop
mov
jmp
mov
and
xchg
mov
xchg
fbstp
pop
add
scas
lods
test
adc
and
in
stos
dec
or
pop
fnstenv
test
pop
sahf
cmp
or
movsb
ror
in
lea
jbe
pop
sti
out
lret
cli
xchg
outsb
mov
pusha
idivl
sbb
lcall
xchg
lcall
clc
sub
repz
or
inc
mov
stc
mov
das
adc
imul
dec
cli
pop
cmp
sbb
fidivs
test
test
mulb
jno
les
je
jb
or
leave
mov
stos
rcl
dec
imul
pop
xchg
adc
jmp
add
js
call
repz
add
outsb
add
xchg
push
test
xchg
mov
mov
xchg
adc
mov
pushf
jno
fildll
outsb
sub
mov
inc
bound
adc
pop
push
int
sbbl
fisttpll
mov
fsts
iret
and
push
xchg
lret
adcl
in
das
imul
sarl
pop
aad
pop
push
inc
xchg
pop
dec
adc
cmp
mov
mov
jl
lret
mov
pop
xchg
in
out
push
sahf
push
adc
push
push
lret
push
pop
ffreep
movsb
sub
pop
mov
pop
pop
cmp
jae
sbb
test
pop
adc
inc
pop
jmp
adc
adc
out
movsb
daa
dec
inc
in
mov
sub
movsb
adc
test
cmp
cmp
xor
out
loop
pop
xor
mov
or
faddl
or
lods
nop
mov
outsl
bound
xchg
test
adc
bound
sbb
pop
or
fisubrs
mull
xor
mov
lods
repz
pop
jl
repz
xor
icebp
fsubrl
mov
repz
out
jnp
add
mov
sub
fsin
in
sub
movsl
sub
aam
subb
lcall
mov
repz
movsl
xor
cmpsb
and
xlat
sbb
outsl
jle
jb,pn
imul
lea
mov
pop
pop
cli
jecxz
inc
push
and
jmp
ljmp
or
out
mov
mov
inc
ja
dec
mov
out
add
js
inc
and
mov
jo
jg
push
adc
frstor
mov
mov
in
jl
or
call
sahf
mov
or
out
lea
push
push
mov
mov
shll
xchg
aaa
add
cmp
and
jmp
leave
push
aad
aad
dec
insl
popa
adc
xor
add
imul
sub
sbb
add
and
ljmp
lods
out
fbstp
pushf
push
pushf
bound
ficompl
xor
scas
dec
es
ljmp
fiaddl
fwait
sub
pop
mov
mov
xchg
xorl
push
in
sub
or
ss
outsl
dec
faddl
cmc
lds
dec
sbb
lea
xchg
and
jecxz
mov
xor
cmp
inc
loopne
sbb
imul
aas
repz
in
xchg
cmpsb
or
sbb
lock
sub
addl
cmpsl
nop
loope
add
pop
pop
in
fsubrs
xchg
push
mov
fisttpl
xor
push
adc
cmp
adc
or
inc
push
out
inc
jmp
movsb
cld
out
push
mov
aad
or
int
in
js
inc
dec
xchg
aad
out
xor
cmp
xor
push
xor
ret
mov
xchg
mov
sti
test
nop
pop
iret
rcrl
jle
ja
cwtl
jmp
jp
mov
gs
cmpsb
dec
mov
pop
add
lock
fisttps
sbb
scas
scas
jns
insl
inc
or
xchg
js
xor
jge
cmp
push
xchg
add
inc
or
int
pop
adc
in
roll
xchg
and
jmp
mov
in
mov
adc
or
cld
xchg
push
gs
xchg
pop
cld
mov
ret
into
or
xchg
cld
insb
cmpsl
jns
pushf
jbe
xchg
jp
jge
fnstcw
xor
xchg
ficoml
outsb
shr
jns
je
sti
and
push
mov
repnz
shll
adc
dec
dec
push
cwtl
jb
mov
xchg
push
inc
rcrl
pop
mov
mov
or
out
loope
xchg
jb
ss
cmp
pop
xchg
ret
xor
jmp
adc
or
mov
mov
dec
pop
cltd
mov
mov
push
or
xor
jne
fisttps
sbb
es
fwait
shll
fucom
sub
int
das
xchg
ret
inc
jnp
pop
outsb
ljmp
add
in
shlb
xchg
push
xchg
aam
mov
rorl
mov
jbe
and
in
movsb
jne
push
xchg
inc
sbb
xlat
daa
popf
arpl
jno
test
and
pop
mov
pop
enter
mov
push
and
fcmovnu
sub
push
xchg
mov
lods
mov
ljmp
pusha
and
shrl
add
sub
pop
fldcw
ljmp
gs
shrl
sahf
pop
sub
dec
inc
daa
and
add
mov
dec
jmp
mov
out
mov
jbe
cwtl
jbe
cltd
fcom
xor
ret
hlt
lahf
mov
test
sti
push
jmp
xchg
adc
out
push
outsl
xor
movsb
movsl
or
incl
mov
inc
test
insb
lods
or
ss
jg
sarb
jl
fldl
mov
push
into
jl
out
or
cmp
cmp
in
lret
push
in
dec
add
bnd
jl
sbb
mov
idivb
test
mov
mov
fisubrs
and
nop
ss
cmp
stos
out
jnp
mov
cmpsl
lcall
mov
rcrb
sbb
xor
mov
js
mov
mov
scas
fistpl
test
xor
add
fstpt
xchg
jmp
inc
mov
aaa
jle
fidivrs
stc
sbb
insl
and
dec
lock
adc
sbb
in
in
lcall
hlt
xchg
sahf
cmp
in
xchg
push
push
cmp
imul
imul
cmp
es
push
pop
jge
dec
lahf
movsl
cs
cmp
cmp
enter
mov
lret
or
les
ror
xor
or
add
xor
daa
pop
pop
fildl
push
adc
push
mov
xchg
cld
jno
out
pop
in
mov
addl
mov
xchg
js
fbld
inc
mov
das
movsl
stc
xchg
mov
push
sbb
cmp
cld
divl
sbb
mov
jnp
mov
cmpsb
aas
or
sti
xorl
sbb
jno
or
rclb
fwait
adc
cmp
shlb
cmp
mov
mov
movb
mov
cmp
or
cmp
rcl
bound
cld
mov
push
mov
test
push
jl
fistpl
push
pop
jns
push
push
mov
and
mov
call
test
insl
adc
sarb
js
lret
fistps
jnp
lcall
arpl
add
pop
data16
das
ja
add
jno
mov
mov
hlt
addl
scas
divb
out
out
mov
sbb
xor
add
sub
xor
std
pop
xor
negl
ss
pop
rcrl
pusha
dec
imul
shl
push
loope
cs
sbbb
popf
sahf
push
cmp
out
gs
mov
lea
fisubrl
imul
push
pushf
insl
bound
cwtl
jae
out
mov
pop
mov
jcxz
jno
push
shl
out
mov
in
xchg
sub
test
inc
lds
or
popf
sarl
add
dec
pop
lret
jns
call
es
add
mov
dec
lods
adc
sub
je
fwait
ds
xchg
mov
in
sbb
cld
sub
adc
daa
lea
pushf
pop
jmp
and
sahf
inc
push
cli
pop
ds
or
xchg
cmp
loop
das
xor
mov
jno
push
shll
iret
inc
sbbl
outsl
or
ret
notl
icebp
xor
or
dec
repz
popa
xchg
imul
mov
adc
pop
jnp
sub
loop
mov
fistpl
sub
test
mov
ds
jno
jb
stos
pop
dec
pop
mov
sbb
push
ficomps
sbb
mov
fisubl
mov
inc
test
addr16
mov
mov
sbb
xchg
xchg
sti
adc
aam
int
test
mov
mov
ss
push
mov
scas
stc
mov
adc
fstpt
loop
test
xor
xchg
dec
sbb
mov
cld
inc
test
jp
jle
or
mov
in
push
fwait
mov
inc
sub
popf
fimuls
out
mov
lock
cmp
ljmp
push
sti
test
cmp
es
jge
xor
bound
add
scas
rcll
jl
fwait
or
and
add
cwtl
aas
icebp
jb
popf
push
cmp
sub
pusha
out
xchg
xchg
and
lcall
pop
xchg
negb
fcomps
cs
ficoml
adc
cmp
mov
pop
stos
mov
xlat
mov
out
mov
xchg
mov
iret
sub
mov
sbb
pop
jmp
pusha
cmc
sbbl
mov
and
lock
mov
mov
mov
dec
fildll
xchg
sub
dec
aam
pop
adc
jae,pt
adc
dec
or
cltd
jge
pop
dec
popf
or
daa
inc
gs
outsb
ret
mov
ljmp
pop
jl
inc
in
enter
dec
addb
movsb
pusha
sub
and
xchg
mov
inc
clc
cld
adc
sbbl
popa
movsl
xlat
cmp
mov
sub
and
pop
sbb
xchg
pop
sub
sbbl
lret
push
sub
jae
jge
and
pushf
or
aad
jp
lds
xchg
rcrb
pop
out
in
std
movsb
je
push
loopne
cs
lods
xchg
push
je
sub
add
push
jbe
das
add
inc
sub
out
pop
test
std
lret
pushf
xchg
jo
cmp
je
or
sbb
out
sarl
jns
dec
ss
es
pop
lret
xor
pop
cmp
mov
fisubs
pop
pop
insl
clc
or
lea
dec
pushf
sbb
xchg
hlt
and
rorl
xor
lret
or
call
adc
sub
rdmsr
add
adc
aaa
pop
out
fwait
pop
lea
orl
xlat
fwait
inc
movb
test
test
lods
sbb
push
adc
add
and
cmp
jno
lds
adc
scas
iret
ret
std
add
mov
repnz
out
mov
shlb
js
xor
push
hlt
call
clc
cmp
shrl
dec
dec
stos
xchg
lret
cs
andl
push
and
mov
and
ficompl
add
xchg
popf
jbe
adc
and
test
scas
outsb
js
xchg
push
sub
mov
arpl
out
mov
push
cmp
push
adc
mov
push
push
add
mov
mov
nop
clc
or
leave
jmp
rcrb
outsb
aam
mov
fdivrl
inc
mov
cwtl
jle
xchg
bound
jl
cltd
xor
xor
mov
sub
dec
cltd
or
adc
int3
cwtl
pop
icebp
add
push
and
loope
pop
cwtl
or
popa
xor
std
mov
jbe
xchg
jo
sub
mov
stos
and
les
xor
lods
lock
cmpsb
lods
sbb
pop
js
sub
mov
or
aas
orl
repnz
xchg
movsl
or
imul
outsl
dec
popa
jge
shr
pop
insl
xchg
popf
lds
stos
xchg
sub
les
adc
adc
xchg
mov
lahf
dec
stos
xchg
inc
sbb
in
aam
repnz
pop
adc
dec
mov
jle
xor
jp
dec
and
cmpsb
dec
and
sub
sahf
fcomip
movsb
gs
in
sub
sti
adc
scas
push
dec
sub
in
mov
iret
shlb
stos
pop
push
inc
pop
sub
push
mov
negb
jnp
fildll
js
mov
leave
test
movsb
or
xorb
aam
bnd
rcrb
pushw
mov
imul
daa
dec
mov
sub
jle
sbb
jmp
lock
dec
push
add
icebp
test
sti
popf
call
call
or
adcb
cmc
dec
shll
inc
jge
bound
sub
loop
mov
fbld
xlat
adc
insl
cli
cmp
sahf
cmp
pusha
mov
jge
adc
icebp
add
or
inc
dec
push
test
lds
mov
ja
inc
xor
mov
xor
or
dec
push
lahf
lock
inc
push
test
add
popa
jecxz
pop
mov
mov
getsec
inc
cld
mov
lret
and
push
imul
subb
shlb
ret
movsb
or
mov
popa
je
mov
sbb
test
loope
clc
mov
mov
ret
bound
sbb
dec
cmp
adc
add
ret
movsl
mov
lret
mov
xor
pop
push
ficoms
leave
xchg
shr
cwtl
and
push
loop
or
aad
lret
xchg
or
pop
pusha
cmp
and
lcall
or
bound
sub
call
jp
add
jp
mov
push
lods
pop
lock
pop
call
mov
fisttps
out
pop
push
enter
lea
aaa
inc
das
in
and
mov
insb
cmpb
out
dec
xchg
push
lods
cmp
ljmp
enter
mov
and
test
pop
add
jp
in
add
dec
movsb
xchg
pop
mov
in
out
cmc
je
push
sub
rclb
push
test
notl
test
xchg
jae
or
cmp
pop
addr16
out
test
mov
sub
lock
pop
subb
negl
in
pushf
sbb
sbb
xchg
sbb
outsb
data16
sub
outsb
movsb
je
pop
mov
sub
jle
pop
and
xchg
rcrl
pop
inc
lcall
repz
jmp
xchg
ja
xor
adc
movsl
dec
push
lea
test
add
push
sti
mov
movsb
leave
lcall
cmp
inc
cmp
mov
gs
clc
in
adc
jmp
or
pop
in
call
add
and
cli
ljmp
ljmp
dec
cmp
mov
pop
fcomps
pop
xchg
dec
xor
jmp
jbe
add
or
cwtl
fcmovnu
inc
add
in
sti
dec
sti
fisttps
mov
ljmp
gs
cmpsb
dec
outsl
and
lods
mov
push
mulps
xchg
jge
and
mov
jg
pop
push
xchg
imul
aad
lods
add
sahf
mov
mov
jae
xor
add
ds
rcll
push
clc
int
scas
aaa
pop
or
fisubl
xchg
test
jecxz
test
and
imul
adc
in
jns
jo
nop
je
mov
movsl
dec
cmp
xlat
les
mov
dec
mov
xor
xchg
call
add
sahf
push
push
gs
pushf
loope
mov
stc
push
xor
bound
test
add
out
inc
pop
sub
sub
jmp
fiadds
sbbl
inc
xchg
clc
jbe
lock
sbb
and
std
sar
insl
pusha
js
mov
push
sbb
into
mov
xchg
xor
adc
and
jge
mov
sbb
jno
in
pop
xorl
inc
in
sbb
neg
mov
mov
pop
fistl
pop
scas
push
out
scas
adc
pop
inc
repnz
fisubs
das
and
lods
xchg
hlt
sarb
inc
repnz
pop
dec
mov
xor
add
mov
lret
cs
dec
mov
xor
fwait
mov
xor
ds
dec
cmpb
ljmp
add
mov
mov
lahf
dec
push
test
xor
ret
add
mov
test
inc
push
mov
jbe
or
loop
leave
sbb
xchg
xor
mov
mov
cmp
mov
ret
jne
or
test
inc
dec
and
pop
jecxz
jae
negl
mov
inc
mov
sub
inc
push
pop
or
cwtl
push
mov
push
pop
jmp
xchg
and
sbb
pop
push
xorb
and
cld
mov
shl
push
push
popf
loop
mov
lds
mov
pop
push
mov
frstor
cwtl
cli
mov
mov
ret
xor
out
mov
addr16
outsb
dec
sbb
sahf
int
mov
add
cmpsl
jge
inc
inc
or
stos
mov
fildll
dec
pop
aas
jg
ja
rcrb
fstps
jmp
push
jnp
lret
adc
mov
stos
fcompl
repz
pushf
adc
fildl
loope
pop
lock
jle
movsl
jg
ljmp
inc
xchg
add
and
inc
sarb
cltd
out
call
mov
xor
xor
das
sbb
imul
repz
mov
cmp
pop
data16
out
dec
adc
rcl
clc
xchg
and
sub
adc
jns
lcall
xchg
int3
mov
jg
pop
mov
movsl
dec
push
loop
push
cmp
shll
cltd
pop
lods
outsl
scas
mov
xor
push
divb
push
pushl
push
imul
std
add
cmpsb
xchg
xchg
jge
mov
out
or
repz
jl
xor
lods
pusha
in
in
movsl
xchg
test
fldl
out
mov
stos
gs
out
into
xchg
ljmp
cmpsl
call
push
insb
xchg
xchg
jle
cmp
push
inc
lret
out
lahf
ja
dec
es
gs
cmp
fisubs
inc
xchg
jbe
fsubs
mov
jmp
push
inc
pop
add
or
sbb
enter
dec
pop
mov
nop
jmp
sbb
in
or
push
popa
imul
mov
xor
mov
ret
xchg
add
pop
gs
imul
mov
jns
sbb
cltd
fisubrs
inc
adc
stc
inc
repnz
xchg
cmp
cmpsl
inc
insl
fbstp
dec
push
or
jo
xlat
push
aaa
sbb
jno
inc
mov
out
cs
pop
and
pop
stos
mov
push
xor
out
les
and
or
sbb
mov
jns
add
sarb
movl
in
scas
push
sbb
aaa
cmp
sub
mov
dec
pop
ss
adc
in
mov
into
mov
cmc
fisubl
pusha
bound
jmp
rol
test
in
and
dec
jbe,pn
popa
repz
cmp
adc
popa
enter
in
pop
pop
jae
sarb
xor
dec
sarb
push
sub
gs
ret
mov
cmc
fdivl
add
mov
call
scas
out
inc
js
daa
xor
ss
std
jo
pusha
out
fdivrs
fs
stos
mov
movsl
push
mov
dec
inc
jae
iret
sub
sbb
jne
fcoml
xor
ds
lea
cmp
jo
scas
xchg
cwtl
stos
daa
pop
ja
inc
push
es
adc
add
sub
adc
jnp
inc
lcall
mov
daa
loopne
cmp
sbb
cmp
mov
xor
nop
lret
lret
pushf
dec
cltd
mov
xchg
push
mov
bound
cmp
add
cltd
nop
jp
mov
jbe
pop
mov
fsubl
jnp
ja
lods
stos
jno
scas
mov
pushf
ret
notl
and
sti
leave
dec
lea
inc
fisubs
adc
leave
mov
cmp
leave
cmpsb
sarl
imul
pop
push
loop
movsl
imul
repz
xor
jl
pushf
mov
jl
jmp
mov
mov
push
shrl
call
mov
dec
loope
lds
dec
in
mov
rol
insl
mov
push
jp
in
shl
mov
jmp
jne
loopne
movsb
sbb
dec
pusha
rol
stos
sbb
mov
test
lods
pop
pop
popa
aad
push
fcomps
fstpl
mov
nop
and
sbbl
mov
and
fwait
test
mov
sti
mov
les
jns
lret
sti
mov
sarl
stos
cli
outsb
js
push
rcll
jle
rcrb
in
lcall
imul
mov
sub
add
mov
fwait
push
pushf
add
mov
sub
jle
jmp
dec
repz
mov
shrb
leave
jnp
or
xor
out
jnp
dec
mov
popf
mov
mul
ds
stos
add
ja
and
ljmp
add
or
fwait
outsl
mull
movsb
jne
jge
ret
imul
pop
cmc
pusha
push
mov
cmc
nop
test
test
fs
popf
pop
or
pop
jno,pt
out
mov
test
les
sarb
stc
pop
out
or
or
and
cmp
outsb
jno
lret
push
cwtl
or
leave
addr16
push
inc
je
shlb
adc
insb
lret
jle
push
nop
add
pop
xchg
popa
aad
loopne
jne
int3
clc
leave
aad
mov
and
mov
mov
push
xchg
push
stc
js
inc
in
cmp
je
mov
rcll
sub
jge
cltd
fadds
dec
push
xchg
ss
xchg
scas
xchg
push
dec
ret
jmp
mov
lea
out
test
icebp
ror
xor
sub
hlt
int
push
test
push
xor
push
add
add
add
das
sub
cmpsb
adc
push
repnz
movsl
or
test
cmp
dec
leave
xor
rorl
je
das
lods
mov
insb
push
aam
jnp
push
aaa
lcall
jle
in
cmpsl
mov
test
xor
push
addr16
loope
add
jle
lahf
and
jno
mov
out
daa
lds
adc
std
lret
stos
mov
jle
add
push
pop
int
lods
xor
push
jnp
ret
inc
test
int
jo
mov
sti
fwait
push
cmp
and
mov
dec
stos
and
outsl
sub
adc
jnp
xor
mov
out
push
sub
ret
insl
orb
mov
int3
in
arpl
subb
ds
cmp
sbb
mov
js
add
mov
stos
mov
mov
adcb
sahf
pop
in
jo
mov
popa
fcoml
cld
sbb
push
push
push
mov
xchg
mov
lcall
push
cmp
fstpt
push
sar
in
das
pop
data16
add
ja
sub
mov
and
inc
jb
fwait
push
pop
shr
movsb
push
and
fcoms
lret
mov
add
mov
popa
test
popf
jnp
mov
je
into
mov
mov
into
xchg
outsb
popa
imul
cwtl
mov
xor
cmp
add
rorb
test
mov
lock
mov
dec
ret
mov
aad
and
mov
in
push
enter
dec
jnp
decb
sbb
pop
xor
xchg
and
ret
enter
fstps
mov
inc
sub
xchg
shl
pushf
xchg
push
mov
filds
ja
mov
scas
push
cld
mov
mov
mov
dec
lods
das
in
cmpsb
mov
sbb
negl
in
shlb
or
repz
pop
pop
outsb
and
xchg
cmpsl
jmp
or
sbb
cld
mov
test
insb
adc
fists
mov
xchg
lods
mov
pop
mov
cwtl
addr16
sbb
scas
outsb
ljmp
xchg
cwtl
xor
imulb
mov
mov
mov
mov
xchg
test
dec
fwait
dec
fabs
jecxz
cmp
rcll
roll
xchg
scas
jge
in
mov
mov
dec
in
sbbl
je
pusha
jb
adc
adc
jle
in
sub
adc
dec
loop
mov
jae,pt
push
repnz
bound
dec
call
fistpll
mov
mov
pop
lock
cmp
or
in
push
sub
xchg
dec
lcall
mov
add
push
cmpl
lods
sbb
shll
adc
mov
sub
sar
imul
add
cli
jns
outsl
inc
or
cld
adc
add
out
imul
sbb
jb
insb
fisubs
xchg
shlb
adc
out
push
out
push
sbb
mov
popf
lcall
adc
push
sahf
rcll
and
arpl
jb
repz
loope
add
xchg
or
add
test
mov
mov
test
lahf
clc
xor
mov
repnz
jge
push
push
fcmovnu
or
pop
jbe
mov
andb
repnz
popf
mov
insb
cmpsb
xor
dec
add
adc
jo
sbb
lea
arpl
ret
mov
pop
leave
jne
and
mov
and
mov
cwtl
sub
push
jmp
push
jecxz
cmp
cmpsb
outsb
adc
cmpsb
xchg
xlat
xchg
int
bound
push
sti
scas
cmp
xorb
jmp
lret
xchg
dec
sbbb
std
fisttpl
cmp
and
sbb
loope
mov
roll
mov
sbb
divl
or
push
dec
outsb
and
jl
iret
mov
mov
bound
movsb
inc
js
stc
ret
pusha
cwtl
push
lret
aaa
add
clc
mov
sbb
jbe
pusha
jmp
inc
push
add
add
aam
cmpsb
cwtl
pop
pop
jmp
dec
and
pop
sbbl
das
ljmp
int3
or
cld
sbb
cmp
mov
mov
shll
sbb
sub
out
stos
xchg
jge
out
ds
cltd
mov
sub
xchg
stos
pop
jnp
inc
ja
and
mov
inc
test
fcompl
aad
inc
pop
fwait
push
add
movsb
mov
mov
cwtl
push
ja
push
cltd
dec
ja
cmp
je
jo
adcl
scas
stos
test
lods
mov
pop
ds
std
push
hlt
je
pop
pop
fistps
test
gs
mov
call
stos
fisubrl
imul
dec
inc
fbstp
inc
dec
jmp
mov
testl
xchg
or
ret
inc
xchg
fmull
mov
shlb
fsubs
call
mov
xor
sbb
xchg
or
sub
xchg
adc
jge
cmp
xchg
sbb
sarl
popf
bound
xchg
vmwrite
aam
mov
sarb
fsubs
lcall
lock
int
push
nop
orl
mov
sub
cmp
xchg
call
movsl
test
jle
cmp
iret
ds
daa
jnp
sub
outsl
push
add
inc
or
loope
push
adcb
mov
fdivp
ss
cmp
xchg
or
and
cmp
xchg
add
gs
mov
enter
cmp
jge
orb
lods
or
lret
repz
cmpsb
aam
int
enter
or
fldl
or
insb
sub
repnz
outsl
or
stos
inc
lds
pop
rcrl
jle
frstor
dec
mov
leave
out
aad
add
xor
jle
iret
into
inc
mov
scas
cltd
mov
out
out
in
sub
scas
ja
sub
movsb
lea
rolb
pop
pop
jecxz
xchg
xchg
cmp
mov
add
je
dec
lcall
scas
jmp
sbb
addr16
inc
sub
and
fnsave
rorl
mov
xor
pushf
push
xor
rcl
jnp
movsl
adc
push
jae
mov
add
adc
nop
hlt
test
pop
sub
scas
aas
mov
sub
add
add
or
push
nop
mov
loop
and
int3
scas
sbbl
pop
mov
xchg
fwait
pop
xlat
dec
scas
loope
push
movsl
mov
push
pop
fnsave
cmp
or
pop
sbb
ds
daa
mov
out
cltd
or
inc
xor
ds
cmp
pop
xchg
push
sbb
or
mov
in
pushf
fidivs
enter
les
data16
aam
lret
pop
lahf
ficoml
es
jmp
and
lods
shl
add
mov
call
cmp
xor
xor
popf
in
jae
pop
or
cmp
jl
push
inc
fcompp
popa
pop
mov
and
stos
adc
les
xchg
stos
ja
pop
je
adc
xchg
push
aaa
ret
hlt
mov
adc
int
jnp
scas
pop
ret
and
ja
push
test
mov
cmpsl
cmp
jnp
pop
enter
cmpsb
ljmp
call
mov
or
mov
jl,pn
mov
dec
in
lcall
sahf
dec
add
ret
push
repnz
jnp
shrl
les
sbb
in
scas
loopne
pop
ret
mov
vpaddusw
in
pop
xor
xor
dec
stc
lock
mov
dec
int
xchg
out
pusha
jns
sub
std
dec
xor
pop
cmp
xchg
int3
push
and
dec
out
and
pop
lock
sbb
loope
inc
bound
jbe
fs
mov
rorl
stos
ljmp
lods
aam
pop
pusha
lock
call
fistpll
inc
mov
fcompl
push
and
outsl
jno
push
add
movsl
jge
inc
stos
add
js
inc
or
cltd
fs
and
fucomi
inc
enter
dec
test
aaa
push
lock
pop
ret
pop
leave
lds
adc
push
xchg
les
jbe
inc
sbb
or
ds
pop
movsb
int
orl
in
add
xchg
cmp
test
inc
cmp
xchg
sti
xor
cmp
inc
shlb
lds
pop
mov
lock
insb
pop
push
fs
shr
ret
rclb
jmp
mov
xor
xchg
adc
sub
mov
fs
sbb
mov
xor
push
or
es
movsl
xchg
imul
mov
in
sub
ljmp
fwait
mov
push
mov
das
sub
ret
xor
loopne
daa
adc
subb
pop
das
ret
mov
push
mov
fwait
pop
out
das
in
jge
lret
dec
cld
cmp
inc
stos
dec
lcall
sub
mov
dec
cltd
jae
pop
into
stos
popf
mov
mov
cmc
pop
test
insl
add
popf
push
mov
or
xor
xchg
ficoms
pop
lcall
dec
cmp
movsl
pop
push
xor
dec
xchg
adc
adc
xchg
icebp
out
es
jbe
lret
test
fistps
mov
cmp
mov
cmp
adc
and
jecxz
loope
stos
inc
jb
leave
dec
sub
lock
jnp
mov
or
lea
push
push
adc
int3
fs
in
in
sbb
push
mov
shrl
sbb
sbb
dec
cltd
mov
push
xchg
fmuls
in
dec
mov
sub
popa
pushf
mov
or
inc
inc
test
out
cmp
sub
mov
sub
sub
pop
jne
pop
call
jae
sbb
or
push
or
sub
test
inc
daa
dec
pop
or
cmp
sarl
bswap
adc
sub
xor
pop
xchg
pushf
and
push
add
jge
push
push
aaa
mov
mov
hlt
std
ret
aam
xor
insb
sub
xor
sti
arpl
pusha
or
pop
fwait
and
mov
sarb
sbb
test
xchg
xlat
xchg
and
rorb
add
xchg
adc
pop
lods
in
into
mov
xor
stc
pop
rolb
dec
mov
lock
int3
ss
mov
lcall
scas
std
xchg
jp
add
scas
fstpt
ds
sbb
cmp
fisubrl
lods
add
out
jge
lretw
ss
pushf
rolb
out
push
loop
call
dec
mov
add
jecxz
mov
sub
aaa
push
sti
cmp
cltd
lods
out
jle
cmp
pop
mov
or
jb
loopne
mov
mov
and
jnp
pushf
adc
dec
cmp
inc
ret
cmp
mov
leave
xor
aas
out
pop
or
mov
and
sahf
stos
sub
lret
push
pop
cmc
fisubrs
mov
dec
loopne
shrb
mov
inc
nop
icebp
add
sbb
push
and
inc
jae
fstpl
lods
cmp
jnp
mov
test
inc
cmpsl
aaa
aad
ljmp
dec
scas
add
inc
loop
arpl
into
bound
sub
fldt
mov
fdivs
in
dec
inc
and
xchg
insl
pusha
xchg
aas
push
stos
adc
ror
lods
inc
cli
outsl
ljmp
les
jo
jecxz
fldl
inc
gs
jge
xor
jle
mov
aas
push
fstl
jecxz
or
iret
int3
lcall
repnz
and
mov
repz
je
xchg
out
stos
aam
jb,pt
and
cmpsl
rclb
xchg
mov
cld
andl
ja
jecxz
je
loope
je
jbe
adc
dec
push
jae
push
and
jb
pop
pop
imul
cmp
stos
lcall
mov
cmp
xchg
xor
xlat
repnz
push
xor
pop
xor
push
cld
jae
rcrl
push
bndldx
cmp
add
test
add
imulb
mov
fidivrs
pop
mov
mov
pop
shl
xor
push
inc
push
mov
out
push
mov
fidivrs
jmp
leave
inc
add
pop
out
lock
xchg
jg
push
out
mull
insb
movsb
repz
xchg
fucomi
std
leave
sub
mov
jecxz
adc
pop
inc
in
outsl
mov
cs
cmpsl
in
orb
mov
es
mov
jecxz
daa
cmpsl
sbb
mov
icebp
inc
xor
push
shl
hlt
aam
lods
jbe
cmp
ret
xor
cld
icebp
xor
mov
fsub
inc
test
pop
arpl
mov
imull
xor
dec
and
cmp
xchg
sbb
cwtl
xor
ljmp
mov
cmp
mov
stc
lea
cld
dec
and
int
adc
cld
mov
decl
cmp
ljmp
leave
adc
std
cs
jae
pop
addr16
or
out
fs
es
loope
sub
ds
push
push
sbb
or
popf
jb
xchg
incl
test
sub
aad
and
xor
insl
xchg
jbe
push
inc
push
and
rcll
addl
cmp
clc
out
cmpsb
dec
imul
popf
fisttpll
push
lock
add
mov
lahf
push
daa
rcrb
in
pop
dec
movsb
mov
ja
fldenv
adc
push
jmp
jge
mov
mov
out
xchg
jle
mov
mov
aas
xchg
lcall
cwtl
movl
add
sub
xchg
mov
pop
hlt
and
mov
push
and
cmp
sbb
in
cmpsl
fcmovnu
jg
mov
add
xchg
fcomi
jp
xchg
aas
sub
lret
andb
adc
fdivrl
or
push
mov
ret
daa
loop
fcomps
bound
mov
and
ret
xor
sub
test
mov
test
sub
popa
std
push
or
push
sub
jbe
repnz
bnd
pop
add
lcall
mov
cmc
fs
pop
fxam
jmp
push
adc
clc
test
or
mov
xchg
enter
mov
xlat
pop
stos
iret
mov
iret
mov
jb
push
mov
jo
add
add
out
adc
sub
push
mov
sbb
xor
dec
mov
xchg
sbb
and
scas
subb
mov
daa
adc
cmp
pop
cltd
rorb
sbb
cmp
dec
arpl
dec
add
adc
outsb
or
gs
inc
pop
and
popf
inc
dec
popa
add
roll
aam
ret
mov
fs
std
iret
add
lcall
movsb
jns
test
ljmp
ljmp
stc
mov
sub
pop
and
scas
adc
mov
rcrb
mov
fwait
xchg
jae
outsl
notl
scas
xchg
cmp
fs
cmp
ret
push
inc
mov
pop
int
push
negb
out
mov
rol
movsl
add
cld
insl
mov
ss
xchg
sub
jge
icebp
lds
jbe
pop
cmpsb
loopne
mov
inc
mov
jno
pop
pop
cmp
mov
inc
fsub
dec
xor
dec
mov
sbb
imul
in
lahf
mov
sub
popa
inc
stos
ljmp
lret
inc
stc
aaa
cs
std
add
into
adc
scas
rorb
pop
scas
inc
jl
movsl
sbb
dec
insb
ja
or
repnz
shl
cmp
jecxz
adc
iret
pop
mov
adc
pop
xchg
inc
stos
adc
xchg
or
jmp
jne
sbb
dec
shll
add
cmp
mov
mov
test
add
ja
or
pop
fnsave
pop
dec
cmp
jecxz
push
jb
imul
push
jae
add
cmpsl
lods
sbbb
stos
cmp
push
in
mov
jnp
cmp
lds
and
pop
jae
jnp
cmpsl
ljmp
popa
pop
and
cmc
insl
lahf
stos
loop
pop
lods
rclb
push
inc
pusha
scas
mov
or
adc
sbb
mov
push
adc
cwtl
xchg
or
push
push
add
sbb
je
lods
leave
pop
sub
jb
je
pushw
js
cld
adc
pushf
dec
mov
mov
jge
pop
in
cmp
push
and
jns
xor
and
xchg
arpl
in
lcall
insb
cmp
adc
insl
leave
test
adc
cld
stos
mov
add
and
inc
sti
int
ja
outsb
int3
fstps
cmc
or
or
mov
arpl
mov
movzwl
mov
mov
mov
dec
mov
cmp
lahf
add
mov
xchg
inc
and
icebp
mov
push
xor
pop
pop
subl
and
xchg
push
icebp
dec
and
mov
xchg
scas
cmpb
dec
outsl
jg
lahf
pop
mov
sub
daa
adc
xchg
mov
insb
ds
or
mov
out
adc
orps
push
jecxz
and
clc
xchg
hlt
push
pop
push
xor
movsb
jl
orl
jnp
dec
or
int3
add
sbb
out
xchg
subb
dec
loope
nop
xor
pop
aas
inc
out
pop
iret
or
in
cmp
lret
stos
push
int
sbb
hlt
mov
adc
adc
xor
test
push
jmp
sub
jg
aad
adcb
push
enter
cmp
repnz
jno
jae
xor
lods
sub
add
push
xchg
pop
push
fs
jp
insl
ret
push
int
insb
leave
and
in
sub
repnz
inc
outsl
mov
dec
xlat
fwait
jne
int
cwtl
mov
cmpsl
aas
bound
fisubl
scas
stos
and
int3
loop
xor
and
rcl
cmp
cli
imul
aam
mov
aad
adc
das
shlb
movsb
jge
pop
jle
dec
and
pop
out
ret
leave
cmp
pop
cmp
sbb
in
cmp
popa
cld
je
ret
xlat
test
lea
cmp
mov
or
sbb
das
sbb
xlat
iret
add
mov
inc
cli
filds
nop
loopne
les
mov
xor
out
jae
jge
mov
sbb
sbb
mov
aas
sbb
pushf
fildl
add
push
lods
mov
add
sbb
addr16
inc
add
xchg
or
lahf
jg
pop
test
jne
test
sbb
inc
fildl
jge
and
mov
sbb
outsb
mov
mov
mov
js
negl
xor
loop
or
push
or
fcmove
jno
ret
sbb
movsl
leave
pusha
cmc
out
outsl
iret
jge
and
jno
push
outsb
or
in
cmp
loop
mov
pop
push
outsb
jecxz
and
call
test
test
push
mov
jne
cmp
pop
jge
imul
cmp
fstpl
lds
mov
push
sar
aas
pop
mov
or
das
cmpsl
mov
lods
mov
es
inc
popw
dec
les
dec
push
dec
jns
sbb
mov
adc
inc
stos
dec
pop
aaa
sub
in
jge,pt
rcll
lcall
xchg
and
cwtl
mov
aaa
push
popf
mov
sub
test
dec
imulb
jne
sub
mov
fdivs
aad
outsb
out
sub
fdivrl
cmp
into
out
scas
mov
cwtl
cmp
push
in
jo
pop
jge
xchg
mov
cmp
mov
jae
jnp
sahf
add
lods
sub
dec
ret
aas
sub
add
insb
mov
sbb
push
pop
jae
insb
das
sbb
into
insb
pop
icebp
fldenv
js
and
int3
ret
imulb
xor
jle
and
add
sbb
or
xor
jbe
cmpl
dec
mov
lahf
sbb
rcl
xor
inc
sbb
xchg
iret
or
sub
lods
push
hlt
lods
mov
push
fimull
xchg
dec
push
dec
mov
cmp
sbb
icebp
out
cli
mov
jo
out
lock
xor
xchg
mov
push
test
and
push
sahf
sahf
or
xlat
add
pop
stc
inc
insb
aaa
add
shll
js
rol
sbb
push
nop
mov
je
int
mov
push
addr16
loopne
and
pop
addb
data16
sbb
mov
arpl
mov
popf
mov
push
outsb
cmp
leave
pop
sub
rclb
sub
je
mov
leave
inc
or
cmpsb
mov
out
push
jns
mov
dec
and
mov
mov
imul
and
shlb
sbb
dec
mov
sbbl
imul
mov
fsubs
imul
js
cld
jmp
lret
xchg
popf
add
push
add
xchg
aam
jb
rcrb
mov
dec
fs
sti
and
xlat
je
popf
xor
subl
ja
rcll
dec
sub
sub
mov
movsl
sub
insb
xor
outsb
leave
sarb
push
sub
jne
into
sub
cmp
sub
jb
adc
pop
xchg
cmpsl
inc
aam
adc
jb
insl
pop
xlat
cmc
push
jns
mov
push
cld
or
push
lret
xchg
pop
xchg
push
cltd
lods
hlt
inc
xchg
mov
jnp
and
adcb
lcall
jne
jl
sub
fnstcw
jae
fimuls
dec
adc
ljmp
mov
sbb
int3
pop
dec
sbb
xchg
pop
and
stc
out
stos
jb
mov
adc
cmpsl
pop
nop
andb
or
jp
dec
loopne
enter
adc
sahf
adc
adc
in
xchg
test
or
adc
loopne
in
jnp
daa
in
cmpsb
gs
arpl
dec
pop
and
add
rol
insb
xchg
cmp
imul
cmp
pop
jne
add
and
xor
jl
fsubs
imul
leave
cmp
xor
sarb
shlb
mov
sbb
in
and
adc
xor
mov
inc
xlat
pop
les
cwtl
call
sbb
xchg
pusha
xchg
pop
add
lock
jmp
cs
sub
dec
adc
xor
hlt
dec
and
mov
inc
jle
aam
sub
lods
mov
fucomip
mov
sbb
and
pop
loopne
sbb
repnz
add
sub
fwait
repnz
adc
adc
movsb
das
jns
std
mov
inc
cwtl
cli
cmp
cmp
insl
adc
rorb
movl
inc
and
popf
fadds
out
fistpll
test
xor
cmp
test
mov
imul
loope
mov
mov
xor
mov
add
pop
insl
adc
pushf
push
dec
sarb
ret
fcoms
adc
add
mov
stc
cmpl
sbb
das
sbb
adc
mov
adc
ret
insl
mov
cmpsb
mov
cwtl
stos
push
dec
aas
adc
bound
mov
xchg
ljmp
sbb
sahf
sbb
mov
mov
adc
enter
pushw
lret
push
jbe
mov
lahf
xchg
xchg
adc
pop
mov
sub
shrb
jg
mov
fisttpl
mov
jbe
jbe
ds
jp
pop
inc
bound
sbb
mov
test
jg
add
mov
and
jmp
add
cmpl
dec
jecxz
push
ret
ret
xchg
xchg
mov
loop
popa
pop
mov
mov
dec
arpl
pop
dec
add
pop
test
jae
fdiv
mov
aad
std
mov
mov
movsl
roll
mov
into
hlt
nop
mov
imul
dec
and
xor
pop
jmp
sbbb
and
fisttpll
test
dec
mov
dec
inc
in
jg
pushf
dec
movsb
xchg
mov
add
out
mov
jge
scas
mov
fcoms
scas
in
jge
repz
mov
ret
push
cmp
ret
fs
add
lahf
call
div
orl
jbe
lock
divb
fwait
and
sbb
push
sub
mov
shrl
lea
ljmp
leave
push
popf
lret
xchg
nop
inc
and
rolb
push
lods
call
sbb
mov
push
mov
cmc
and
cmp
loopne
rolb
cmc
icebp
ret
and
xchg
aaa
rcrl
in
mov
clc
sub
ret
pop
jle
jl
fsubp
sub
lds
pop
ret
mov
inc
xchg
loope
pusha
lret
test
mov
rol
test
out
cwtl
mov
jbe
jl
loop
cmpsl
clc
push
and
push
imul
pop
in
push
push
adc
cmp
lcall
lds
or
pop
stos
pop
sub
inc
sbb
sub
xchg
push
add
or
and
dec
lods
jns
jle
ja
push
lahf
lds
mov
fnstcw
push
test
addr16
xchg
fcmovb
xchg
add
int
and
aam
into
xor
into
xchg
mov
add
xlat
add
lret
cmp
test
xchg
orb
jno
call
dec
dec
pop
fldenv
fs
sahf
js
sub
imul
or
imul
add
sub
dec
cmp
mov
cs
aad
jnp
mov
mov
cmp
and
data16
test
data16
test
mov
repnz
xor
xor
sbb
mov
or
movsb
popf
int3
pusha
das
or
sbb
push
and
cmp
scas
push
xchg
xchg
jmp
jno
mov
in
fidivs
add
pushf
aas
leave
pop
cld
and
aas
mov
cmp
test
dec
ficompl
es
push
inc
pop
into
loop
xorb
out
xor
out
js
mov
mov
pop
inc
icebp
cs
jp
xor
movsl
sub
xor
jle
cwtl
or
cmp
call
aam
lds
rcl
inc
je
bound
pop
pusha
push
pusha
cld
ret
and
xchg
add
jns
jo
jns
pop
mov
mov
test
jg
xor
xor
and
cmp
mov
jg
xor
push
pop
inc
push
shrl
fsubrl
imul
or
cmp
jne
in
mov
mov
popa
sbb
or
or
mov
in
cmpsl
cld
inc
enter
popa
ja
sbb
pop
push
loopne
mov
add
int
out
ret
cwtl
sub
fisubrs
xchg
shrb
loope
out
out
lods
push
enter
dec
jb
dec
cld
and
inc
jno
lods
lock
adc
fcoms
mov
xlat
loope
jo
loope
push
lea
add
loop
add
jle
mov
inc
jge
dec
faddl
addr16
mov
pop
orb
mov
jns
test
inc
lds
pop
mov
jno
aam
jae
inc
add
cmp
out
xchg
or
mov
xchg
jns
mov
fdiv
subl
and
inc
adc
loop
mov
cld
jae
lds
push
jae
popa
mov
or
leave
mov
outsb
mov
push
and
rcrb
lcall
dec
insl
test
ss
lods
mov
ss
mov
mov
es
mov
test
mov
pop
and
lret
cmp
xchg
sbb
imul
sub
leave
lods
push
pusha
rcrl
inc
sbb
loop
into
mov
cmc
icebp
fistps
adc
popw
cs
sbb
inc
cmp
xor
xor
pop
dec
aad
cmp
nop
movsl
push
and
pop
fs
popa
mov
lahf
fildll
negb
inc
sub
pop
dec
xor
cmpsl
icebp
push
pop
test
in
jns
add
out
leave
fcoms
mov
inc
xor
les
sub
mov
adc
scas
mov
jnp
mov
xor
out
jb
mov
rcr
add
inc
ss
cli
xlat
ds
int3
inc
into
int3
mov
jmp
outsb
mov
xchg
sub
aam
inc
inc
mov
xchg
je
adc
jl
inc
jb
insb
adc
in
ljmp
icebp
repz
and
mov
pop
hlt
imul
pop
xchg
sbbb
push
lea
mov
pop
xor
cmpsb
adc
lods
insl
xchg
push
int
pop
push
inc
fisubrl
cmp
mov
push
sub
xor
add
mov
mov
mov
movl
push
pusha
inc
xchg
push
mov
orb
mov
cmp
out
pushl
jno
and
xchg
movl
mov
inc
mov
xor
rcr
inc
jle
sub
out
or
mov
inc
lods
lahf
jo
mov
push
jge
pop
jmp
mov
xchg
push
xchg
pop
into
xor
xor
stos
outsb
adc
sub
add
adc
xor
rcrb
leave
shrb
sub
aas
rcrl
testl
enter
push
int3
and
mov
cmpsl
bound
cli
xchg
popf
sahf
push
int3
sarl
dec
push
and
fidivrs
loopne
mov
adc
adc
mov
loope
leave
mov
lret
cld
leave
or
cltd
neg
dec
ficomps
cld
mov
sbb
mov
frstor
pop
sahf
sub
pop
xchg
std
xchg
notb
enter
gs
cltd
inc
mov
xor
inc
into
and
xor
and
inc
test
mov
jb
jp
mov
dec
xchg
movsb
insb
mov
cmpsb
ret
into
insl
cmpsb
pop
jg
mov
gs
into
push
sbb
cwtl
dec
xchg
push
outsl
or
and
add
fcomp
xlat
sahf
and
lea
cli
fsts
js
lds
ret
outsl
xchg
std
in
push
push
add
or
mov
inc
inc
popf
pop
mov
mov
and
mov
xchg
and
cmpb
stos
and
sub
orb
mov
xorl
add
mov
loope
push
inc
add
clc
mov
fistl
push
jle
leave
in
mov
push
sbb
mov
or
cs
orb
sbb
clc
das
and
ljmp
push
cmp
mov
lahf
into
mov
pop
enter
outsl
outsb
mov
shlb
xor
cmp
pop
inc
insl
cmp
jl
enter
imul
mov
aam
movsb
test
push
test
or
push
cli
mov
in
dec
aas
pop
out
cs
fs
inc
popf
or
and
gs
outsl
jmp
imul
in
movsl
ffree
cld
in
in
in
dec
lea
push
inc
mov
scas
fdivl
loopne
sub
mov
ja
pop
inc
xchg
inc
cmp
nop
xchg
or
or
fldcw
pusha
mov
cmp
xchg
xor
or
jp
adc
mov
sub
pop
and
sbb
pop
scas
inc
sub
data16
sub
adc
nop
pusha
xchg
sub
ljmp
icebp
jge
mov
clc
int3
adcl
push
repz
sub
in
lahf
vpmulhuw
cmpsb
fbstp
enter
and
fbstp
jle
lcall
push
or
repz
or
lds
mov
sub
xchg
orb
xchg
dec
mov
mov
fdivrl
mov
fcmovnbe
jg
pushf
push
and
push
das
mov
clc
jnp
dec
cmp
jb
call
adc
cmpsb
nop
out
popf
ret
add
sub
jbe
rorb
mov
adc
iret
xor
rorl
and
jns
sub
xchg
jae
outsb
pop
cmc
pop
stos
push
aas
inc
jmp
mov
xor
jl
imul
and
adc
imul
mov
shll
cli
pop
mov
out
sub
mov
or
xor
aaa
dec
or
mov
mov
stc
stos
xchg
mov
lods
std
aad
push
jo
push
addb
mov
outsb
push
inc
inc
dec
or
scas
and
mov
test
aam
mov
negb
in
add
inc
lret
aad
mov
add
pop
repnz
popa
mov
ljmp
inc
and
xor
adcl
jle
pop
fcmovnu
or
sub
jns
or
mov
add
mov
fmull
data16
clc
inc
or
push
out
push
pop
jecxz
filds
push
fs
testl
les
stos
aas
lods
into
int3
rep
mov
cmp
mov
lret
sub
popf
sbb
loopne
mov
push
sti
inc
loopne
mov
ret
mov
fidivrl
inc
dec
scas
xchg
sahf
pop
rcl
cltd
gs
in
mov
adc
inc
sub
push
int3
push
mov
push
loope
std
sub
cmpb
sarb
lcall
and
mov
add
mov
movsl
aam
mov
ffreep
out
clc
pusha
sbb
je
sbbl
ja
pop
int
arpl
cmp
push
push
sbb
cmpsb
jge
xor
push
mov
loope
mov
lds
or
push
rcrl
leave
dec
push
or
and
pop
dec
xor
xor
lock
iret
aam
cmp
dec
hlt
dec
popf
out
pshufw
xor
mov
lcall
xchg
cmpsl
ficomps
out
out
and
fidivrl
pop
pop
jo
and
push
mov
flds
inc
or
jp
std
rol
sub
pop
movsl
sbb
fcomi
aaa
jecxz
mov
sub
xor
std
pop
sub
jge
jmp
lret
mov
das
cmp
fadds
roll
stos
in
shr
and
leave
adcb
dec
jmp
arpl
or
in
sub
jae
test
fnsave
xchg
bnd
out
popa
sbb
arpl
out
dec
cltd
jl
add
es
inc
push
xchg
mov
mov
fisubl
sub
das
xchg
or
outsl
movl
arpl
popa
xorl
scas
jmp
sbb
adc
lods
shl
stos
aad
xor
pop
push
or
pusha
jg
lret
push
lds
pusha
leave
sub
jb
jmp
and
xchg
jecxz
jecxz
mov
jge
into
jnp
sub
test
lock
add
outsl
sti
xorl
mov
decb
call
std
pop
or
popf
lahf
xor
add
loop
or
xor
xchg
mov
mov
adc
cmp
add
jl
pop
pop
test
push
scas
fiaddl
repnz
repnz
sub
mov
adc
xchg
push
add
lahf
daa
aam
test
lods
push
cmp
pop
xor
pop
lret
sbb
mov
or
scas
mov
add
jo
cmpsl
testb
pop
cmpsl
into
rcrb
ret
inc
lahf
fwait
sbb
jl
mov
fdivs
mov
into
pop
xor
pmaxub
aad
mov
adc
fiadds
add
imul
mov
dec
sti
xchg
push
into
cmp
dec
test
imul
push
pop
pop
lahf
mov
rclb
pop
insl
mov
data16
fnstcw
inc
movsb
push
jp
lds
xchg
iret
xor
lods
push
imul
mov
mov
jae
mov
cltd
aas
cmp
push
dec
lahf
out
mov
push
aad
adc
ljmp
xchg
and
test
popa
jl
call
es
les
dec
sbb
mov
pop
inc
mov
add
fldt
jbe
add
xor
cwtl
fst
stc
adc
mov
adc
clc
scas
lods
outsb
test
cltd
add
mov
pop
sub
mov
into
movsl
push
lcall
sarb
cltd
add
and
call
or
xor
mov
add
pop
sbb
stos
das
cmp
sbb
out
fs
idivb
adc
cld
mov
push
pop
push
sub
sub
cmp
sti
sub
jecxz
xor
pop
inc
je
rorl
sub
xor
xchg
lea
push
test
test
in
popa
adc
cmp
sarl
je
in
ficomps
into
mov
or
sub
rcl
add
imul
dec
ficomps
xchg
push
jl
cmp
mov
sub
clc
insl
sub
icebp
js
lahf
lret
xor
shl
stos
xor
mov
mov
sub
xchg
mov
repz
and
add
arpl
scas
out
in
or
out
pop
cld
test
pop
push
test
fwait
sub
jg
cmpsl
mov
daa
addr16
fistps
cmpsl
loopne
shl
cli
jecxz
ss
imul
xchg
and
push
ret
or
or
cli
out
les
lds
int3
test
inc
loop
mov
pop
fnstsw
pop
mov
out
or
or
sbb
sarl
adc
mov
xchg
fildl
leave
sar
dec
addr16
mov
dec
lds
dec
mov
stos
push
int
xor
xlat
cmp
xchg
iret
jg
cmp
fsubl
dec
in
aam
push
test
add
mov
mov
lret
mov
ret
add
stos
das
popf
sub
popf
xchg
add
adc
nop
aam
push
sub
sub
les
clc
movsb
cltd
enter
jecxz
shlb
xchg
fbld
sbb
scas
jg
push
mov
sub
jp
lock
xchg
cmc
push
fs
aas
insl
mov
mov
jnp
in
mov
test
les
daa
and
sub
lods
mov
fwait
hlt
mov
pop
imul
pop
push
pop
xchg
jmp
out
mov
fisubs
jnp
pxor
jbe
test
je
or
cmpsl
ja
call
cmp
mov
cmp
aas
pop
cli
mov
pop
fisttps
add
shr
or
out
xor
outsb
gs
jl
add
mov
push
dec
mov
push
pushf
aas
inc
pop
push
mov
stc
push
and
pop
rcrb
mov
xchg
fbstp
xchg
push
repz
inc
iret
leave
rol
inc
or
sub
inc
mov
sti
enter
sbb
push
ror
sub
icebp
add
fnstsw
stc
movsb
outsl
popl
jns
adc
cmpsb
call
dec
js
adc
es
stc
add
dec
leave
mov
jb
xchg
push
lea
add
mov
mov
add
rorl
test
jno
pop
clc
mov
shl
pop
sahf
push
adc
ud0
push
incb
roll
push
mov
sbb
sub
int
inc
mov
adc
mov
punpcklwd
mov
cwtl
push
cmp
pop
push
or
xchg
push
xor
fistps
out
xor
push
mov
dec
inc
or
pop
cmpsb
pop
xor
lret
add
or
pop
sti
cld
inc
pop
mov
rorb
cs
mov
neg
adc
adcb
mov
ja
lret
into
jno
popf
dec
or
inc
outsl
sbb
sbb
gs
subl
iret
fnsave
shrl
pop
iret
sbb
adc
mov
dec
std
push
mov
lods
popa
push
lahf
sti
daa
xor
jg
push
inc
pop
scas
scas
inc
int
scas
dec
or
mov
xor
sub
mov
subb
in
lret
pop
fstl
bnd
test
test
inc
xchg
adc
movsb
cld
gs
scas
lods
dec
aam
mov
pop
gs
jmp
jb,pt
sub
xlat
stos
add
std
lcall
daa
jg
cwtl
sub
movsl
jle
aaa
rcl
data16
in
inc
xchg
add
in
ds
sub
lahf
push
mov
out
mov
stos
or
mov
movsb
jae
lea
or
iret
xchg
data16
js
cs
popa
subl
icebp
test
outsl
jmp
lret
popa
fists
jno
sbb
ret
nop
or
xchg
idivl
fwait
mov
pop
enter
ja
stc
and
out
mov
adc
mov
in
jmp
mov
lock
movb
test
mov
in
push
xchg
mov
inc
jl
jmp
orl
dec
call
and
lret
fistps
dec
int3
popf
ljmp
test
xchg
mov
fsubl
mov
loope
xchg
add
repnz
adc
inc
jne
sub
ljmp
adc
repz
mov
test
jp
jae
mov
dec
movsl
jge
test
les
push
xchg
jle
lret
int
fmuls
stc
pop
roll
outsb
stos
rcrb
dec
mov
jecxz
jge
cmovnp
jne,pt
int
push
mov
jge
enter
sbb
adc
ja
in
in
aam
push
mov
call
mov
xor
jmp
ret
dec
enter
push
ss
and
add
mov
pop
test
aaa
mov
rorl
cwtl
inc
mov
add
pushf
mov
xor
mov
lea
jb
ds
mov
loope
negl
pop
loopne
testl
mov
sbb
aaa
nop
mov
sbb
rorl
loop
aaa
js
inc
shlb
adc
push
adc
xchg
lods
jnp
fimuls
popf
bound
fwait
push
adc
repz
dec
inc
int
outsl
cld
pop
xor
mov
test
movl
xor
fs
or
mov
aas
sbb
cmpsl
ret
cltd
push
in
xchg
push
ljmp
xchg
push
stc
pop
lret
jecxz
cmpsl
clc
xchg
imul
cs
shlb
mov
or
rorl
repnz
fcoms
jg
out
mov
push
push
push
clc
inc
xchg
in
push
in
mov
dec
pop
lods
mov
inc
xor
movb
sub
cld
loopne
sti
mov
mov
cli
lahf
mov
sti
or
sarb
ja
aaa
popf
cmp
mov
sbb
js
xchg
test
idivb
inc
fnstsw
mov
xchg
lcall
dec
pop
push
pushl
push
cmpsb
cwtl
popa
pusha
jbe
xchg
pop
stc
inc
das
mov
ret
loopne
out
mov
out
xor
iret
movsl
mov
aas
insb
mov
adc
leave
rcll
pushf
adc
xchg
and
out
bound
jl
lock
es
push
xchg
scas
nop
lea
pop
jbe
mov
ljmp
xchg
test
mov
iret
push
mov
xlat
in
aam
jbe
dec
das
test
sub
push
cmp
lcall
lret
cltd
mov
dec
push
push
insl
in
jmp
jmp
add
or
add
shl
cltd
inc
aad
insl
int
repnz
mov
or
inc
mov
mov
lea
popw
test
imul
cmpsl
aad
imull
add
loope
aaa
bound
jno
adc
adc
ret
decl
leave
outsb
cmp
push
lfs
sub
adc
cmc
inc
pop
mov
nop
adc
dec
repnz
imul
mov
jg
or
jbe
call
jge
shll
movsl
repnz
insl
push
insb
stos
imull
sahf
fdivrp
pushf
mov
and
js
pop
xchg
cmpsl
xlat
push
mov
xor
dec
jg
inc
jge
sbb
sub
mov
push
add
cmpsl
xchg
mov
dec
icebp
mov
test
cmp
ret
xchg
mov
pop
or
mov
add
inc
xchg
fdivr
repz
cld
in
cmp
jp
xor
mov
inc
and
mov
imul
bound
jno
or
cli
bound
cmc
xor
add
push
jp
mov
rcrb
loop
cmp
dec
imul
pop
and
sub
xchg
pushfw
or
fwait
shr
cmpsb
inc
filds
imul
scas
les
jmp
iret
or
fildll
dec
pop
add
stc
jmp
mov
bnd
lods
pop
icebp
jae
movsl
add
mov
pop
pop
call
add
leave
fwait
push
jmp
xchg
ja
pop
jge
adc
ja
in
aaa
ss
and
aad
rcll
imul
and
fmuls
cwtl
pop
es
add
jmp
imul
push
mov
arpl
push
push
xchg
push
push
pusha
jno
mov
lea
in
dec
jae
push
cmp
add
sbb
mov
fisubrl
lcall
insl
test
inc
add
xor
lods
gs
pop
mov
xor
inc
lret
pop
out
or
enter
lret
and
loope
sub
or
es
pop
sti
movsl
jo
sub
ret
dec
push
daa
push
jns
mov
pop
jno
dec
sub
nop
int
cs
cmp
neg
insl
test
popa
loop
fdivp
mov
daa
sbb
lcall
or
pop
cld
pusha
daa
pop
or
mov
and
mov
adc
out
jle
lock
repnz
out
mov
ljmp
mov
loopne
test
jo
mov
arpl
pop
pop
jge
cmc
dec
or
cmp
movsb
mov
loope
dec
int3
dec
icebp
mov
inc
mov
ds
cmp
xchg
das
mov
mov
loopne
sti
pop
aaa
inc
hlt
xlat
push
pushf
sub
out
push
mov
mov
and
loop
lret
jle
jmp
mov
jecxz
adc
pop
mov
pusha
sbb
pop
xchg
mov
dec
out
sar
mov
ret
push
lcall
cmpsl
aaa
lds
jne
int
cli
lds
es
cmpsl
sub
xor
push
lret
push
sar
or
sbb
or
dec
dec
cmp
lret
cmp
lock
mov
notl
shll
lret
lock
test
sub
push
lods
xchg
mov
inc
mov
movsb
mov
dec
cmpsl
push
mov
rcll
in
push
cs
pop
push
pop
les
pop
mov
jae
or
mov
loope
mov
shll
dec
mov
push
scas
mov
popf
jge
fistps
enter
ret
jmp
and
xchg
push
mov
and
and
fdivs
mov
addr16
call
mov
adcl
pushf
dec
in
in
push
push
dec
clc
cmp
xchg
push
mov
into
inc
jbe
xor
andb
mov
xor
testb
jbe
add
push
mov
dec
mov
repnz
gs
sub
pop
sbb
test
loop
mov
nop
mov
stc
jle
gs
jmp
inc
cwtl
xor
addr16
cmpsl
arpl
dec
mov
data16
in
pop
addr16
cltd
out
inc
in
sahf
and
mov
xchg
jne
sub
adcl
cmpsb
ds
inc
dec
jg
ret
mov
mov
xchg
in
cltd
add
fdivr
sbb
mov
cmpsl
jle
nop
sub
xchg
and
cltd
pushf
pop
iret
pop
je
mov
into
lds
out
or
or
gs
push
mov
xlat
sub
add
dec
cmp
out
insb
hlt
rcr
jecxz
cmp
imul
mov
adc
push
dec
stos
or
sbb
and
cmc
mov
inc
adc
xor
jg
arpl
fs
mov
jmp
arpl
cmp
jmp
mov
mov
inc
mov
mov
jp
enter
test
shll
lea
jmp
ds
leave
cmp
cmpsl
xor
stos
cmc
xor
leave
roll
add
and
sarl
arpl
scas
push
cmp
addr16
mov
and
cmp
adc
sbb
iret
std
mov
andb
cs
xchg
push
rclb
cmpsl
ss
mov
pop
or
xor
cmp
mov
mov
lods
and
push
cli
push
and
fbld
push
jle
and
inc
not
jno
and
pusha
icebp
adc
add
rcrb
xor
or
mov
scas
add
sbb
lods
push
movaps
insl
push
xchg
dec
dec
jne
ljmp
mov
insl
aas
push
or
mov
sahf
test
xchg
lods
mov
dec
dec
imulb
out
outsl
dec
mov
push
fst
or
nop
sahf
lret
inc
xlat
push
insb
fcomps
cli
les
mov
jge
mov
in
out
sub
sub
lea
loope
jl
fiadds
nop
sbb
mov
mov
mov
dec
adc
js
pop
stc
je
ja
push
xchg
push
ds
mov
loopne
sbbl
es
mov
mov
xor
rclb
mov
mov
mov
add
das
pushf
lds
mov
leave
nop
je
cmc
mov
pop
cmp
call
lcall
mov
insl
fcoms
mov
cmp
dec
das
inc
pop
in
subb
pop
mov
insb
outsl
sub
shl
push
orl
out
ja
pop
and
xchg
mov
mov
mov
test
cltd
ss
mov
jle
call
lcall
and
stos
in
pop
xlat
xchg
sahf
push
jl
add
negb
out
mov
inc
data16
mov
int3
sub
dec
pop
roll
enter
or
inc
or
movsl
in
or
addr16
incb
idivb
loopne
sbb
test
mov
into
mov
lods
fucomi
fcmovnbe
add
icebp
pushf
je
xor
shr
mov
leave
mov
xchg
inc
fs
stc
test
push
movsl
push
fsub
incl
xchg
sub
int
pop
cmp
inc
ret
sarl
push
dec
jge
xchg
pop
fnstenv
imul
loope
mov
mov
xchg
mov
lea
add
jnp
fsub
addl
aaa
xchg
fwait
bnd
xor
dec
mov
jnp
add
adc
out
dec
loopne
nop
movl
in
xor
mov
insl
jp
fisubrl
cld
movl
xchg
adc
int3
fisttps
jge
jnp
mov
pop
or
es
xor
xor
push
adc
idivl
sub
mov
dec
pop
mov
mov
pop
jmp
or
mov
add
mov
rcll
pop
sub
inc
leave
jge
cmpsl
xchg
and
mov
popa
cwtl
test
adc
gs
ret
mov
and
and
pop
push
inc
pop
xchg
jmp
inc
push
sbb
ret
std
lds
pop
int
fidivs
xor
pop
sub
cli
subb
add
mov
mov
mov
aad
add
mov
push
pop
in
push
xor
pop
mov
aam
cmpsl
fcomp
mov
clc
ss
push
orb
pop
inc
fmuls
and
mov
popa
pop
xchg
cmp
add
jne
icebp
insl
or
shlb
cmp
adc
movsb
and
sub
push
out
lret
mov
sub
in
sbb
or
cli
xorb
sbbl
fcoms
ds
out
mov
pop
inc
push
ds
cmp
mov
orb
std
es
jge
ret
mov
loop
mov
lahf
out
jmp
pop
cmp
loope
imul
adc
xor
mov
inc
cli
lcall
add
xor
mov
adc
in
push
fisttpll
ljmp
inc
push
movsb
add
dec
pop
pop
cmc
mov
clc
lcall
faddl
aad
lods
out
xor
jb
pop
dec
adc
lret
mov
aad
push
ljmp
lea
xchg
lret
es
dec
sahf
dec
aad
roll
popf
stos
pop
aas
xchg
dec
int
sti
xchg
std
test
inc
or
or
xchg
sbb
iret
in
or
xor
popa
mov
sbb
das
inc
fistl
jo
lods
push
fnstsw
lock
sub
and
mov
aas
adc
mov
lret
push
in
stc
adc
xchg
mov
sbb
out
jns
push
xchg
dec
daa
divb
scas
subb
mov
test
inc
xor
sub
stc
in
je
lock
fdivrp
sbb
daa
imul
jg
inc
xlat
mulb
test
cmc
dec
orb
pop
xor
ss
aad
fwait
rcr
pop
sbb
int
jne
scas
loop
sub
jge
push
and
fmull
pop
add
nop
lods
sub
sbb
fsubrl
lea
lds
cmpsl
jne
jp
shrl
call
aad
jl
sbb
xchg
xchg
push
push
js
push
in
inc
les
scas
add
or
sub
rorl
jbe
mov
test
aas
jecxz
and
inc
arpl
out
ret
cmp
shll
cmpl
jecxz,pt
gs
inc
je
mov
das
jnp
push
test
mov
inc
cmp
popa
cmp
lods
mov
jmp
test
ret
ret
lret
aad
xor
imul
jo
xor
jl
iret
mov
loop
xchg
mov
add
xchg
jmp
jecxz
jp
fdivrs
test
and
lret
lret
hlt
mov
bound
xchg
sub
daa
jno
lea
jns
mov
cmp
xor
js
into
loop
arpl
aad
adc
xchg
inc
pusha
test
in
or
xchg
sub
or
faddl
pushf
es
dec
sbb
out
sbb
insl
mov
loop
mov
dec
xchg
adc
cltd
vmaxpd
or
mov
inc
clc
sub
js
cwtl
in
mov
lret
int
lods
in
xchg
or
movsl
nop
mov
sub
mov
sub
jmp
sbb
in
add
dec
dec
dec
mov
frstpm(287
cld
xchg
mov
scas
mov
movsb
ja
arpl
dec
sahf
cmc
jbe
xor
pop
add
xor
sub
push
adc
orl
sub
xchg
mov
inc
scas
loope
lahf
jl
cwtl
vmread
popf
mov
mov
or
push
sti
out
and
pop
push
adc
push
aam
icebp
insl
hlt
or
jbe
jbe
push
cltd
inc
ljmp
lea
xlat
mov
punpcklbw
mov
cli
lret
push
in
ficoml
xchg
jo
mov
xchg
cmp
mov
lds
mov
aas
lods
sar
jae
popf
int3
arpl
dec
sbbl
and
cmpsb
dec
push
pusha
hlt
in
out
jecxz
ja
sub
jns
mov
loope
dec
pushf
jle
dec
in
out
ret
push
loopne
inc
xchg
mov
call
ss
scas
inc
jns
jb
popa
jno
popa
adc
cmc
push
insb
dec
add
jl
bound
mov
jge
adc
cmpsb
rcll
sarl
jno
pop
dec
add
xor
pop
loopne
aad
ret
sub
movsl
lds
mov
jecxz
mov
popf
js
push
add
ret
mov
sub
sub
aad
stos
mov
mov
jne
and
fs
or
int3
jp
scas
sahf
mov
xchg
repnz
out
jae
rorl
sarb
imul
or
inc
ja
and
insb
je
pop
push
outsb
xchg
mov
test
aaa
jge
mov
int
and
or
xchg
push
push
ror
std
cmp
jg
mov
test
and
out
stos
mov
jle
pusha
testb
mov
or
jnp
dec
data16
out
pop
pop
pop
mov
leave
les
loope
ljmp
cs
mov
fimull
ds
lret
pop
test
stc
or
mov
pop
inc
mov
mov
je
jmp
fs
add
repnz
cld
push
push
xchg
lods
inc
sbb
repz
cmp
push
or
insl
push
fnstsw
inc
lds
sarb
adc
inc
into
inc
call
lods
xor
mov
das
cmpsb
int
loopne
and
sahf
cwtl
pop
xchg
mov
in
popf
jp
fnstcw
inc
lds
test
mov
push
inc
flds
movsb
clc
cmpsl
jle
xchg
sti
mov
mov
xchg
out
jb
push
stos
and
jmp
fnstsw
shrb
insl
push
add
pop
jmp
inc
inc
ds
xchg
jecxz
inc
cmpsl
sti
mov
lock
aad
icebp
aad
mov
add
push
ret
sbb
cmp
ja
mov
cmp
rclb
jbe
jecxz
in
jne
inc
sub
xlat
int
mov
std
es
mov
sbb
add
mov
mov
aas
mov
inc
mov
adc
outsb
test
jbe
dec
out
sub
inc
insl
dec
cs
xor
jb
mov
in
data16
xchg
push
xchg
js
dec
pop
nop
xchg
xchg
jae
fs
sbb
movsl
mov
push
mov
or
sti
sbb
outsl
adc
mov
test
add
scas
pop
and
add
push
ret
jecxz
imul
mov
mov
mov
ljmp
jns
push
add
rorb
cmp
dec
or
dec
lods
imul
xor
push
mov
into
add
mov
out
xor
mov
pop
jbe
inc
jle
push
pushf
cli
fwait
sbb
out
fidivrl
jecxz
inc
add
test
inc
cmc
and
and
add
mov
sbb
inc
test
shrb
mov
addl
lods
mov
lret
rcrl
jbe
into
int3
js
pop
xchg
sub
fcmovne
enter
in
sub
jecxz
push
jecxz
out
adc
push
xor
test
std
sbb
enter
fisttpl
or
in
repz
ret
mov
sub
or
dec
xchg
mov
lods
ret
scas
xchg
pop
in
iret
jo
mov
data16
pop
fwait
jae
adc
cs
loop
jbe
icebp
push
xor
test
xchg
nop
mov
mul
gs
stos
push
cmp
mov
rorl
inc
jl
push
ds
xchg
xchg
das
icebp
movsl
sub
scas
mov
popa
enter
mov
mov
dec
mov
stc
jbe
mov
inc
push
pop
adc
nop
adc
cmp
call
adc
roll
into
mov
mov
repz
mov
int
inc
cmp
add
popf
popf
data16
leave
sub
jo
jno
ficompl
negl
test
or
xlat
imul
push
lcall
push
incb
sub
jmp
insb
push
pushf
jbe
dec
cltd
mov
pop
lcall
sarb
xchg
mov
jmp
nop
push
xchg
dec
mov
mov
ja
push
lret
lcall
and
or
in
xor
orl
sbb
clc
js
pop
addr16
or
das
in
lock
mov
and
in
jecxz
fwait
int
insl
cmpsb
adc
xchg
insb
insl
sub
mov
xlat
jae
in
mov
fwait
push
xor
arpl
cld
cmp
test
fidivl
dec
add
outsb
pop
fmuls
movsb
mov
or
in
push
xchg
xchg
push
in
add
pop
dec
jb
dec
les
mov
jg
out
push
mov
insl
dec
cli
in
cmp
cld
pop
test
pop
mov
movsl
mov
sar
push
jmp
call
xor
mov
in
imull
std
cmp
lret
xchg
fisubrs
cs
mov
push
jmp
sub
in
inc
jmp
cmpb
test
inc
xchg
stos
xchg
aad
out
adc
and
call
test
rolb
test
add
xchg
pop
js
icebp
mov
jne
mov
data16
push
js
mov
jne
or
pop
mov
and
leave
add
insb
jo
xchg
stos
mov
adc
jl
xchg
dec
push
xor
mov
cwtl
jl
outsl
je
fisttps
or
scas
sub
in
mov
or
dec
add
push
test
nop
cmpsl
mov
divb
ss
inc
call
stos
xchg
push
iret
mov
out
xor
adc
push
or
push
add
fs
mov
or
add
adc
xor
mov
mov
mov
jmp
repz
cmpb
sub
xchg
fildl
jns
mov
jle
adc
testl
cld
movsb
xlat
sub
aad
dec
dec
int
mov
lret
fldenv
jg
scas
pop
and
or
xchg
rcpps
loopne
fdivr
or
insb
xchg
adc
fsubs
clc
je
addr16
pop
js
push
mov
jg
fisubs
stos
mov
push
jae
ljmp
lea
sbb
mov
ljmp
sbb
and
in
outsl
sub
dec
cmp
arpl
test
adc
lretw
adc
rclb
js
pop
xor
out
dec
cmp
test
lret
adc
jge
int
je
int
fstl
aad
xchg
enter
fnsave
lds
mov
push
fcoms
mov
pop
fmulp
js
imul
push
xor
add
xchg
cmp
and
out
mov
cltd
inc
pop
add
inc
sub
arpl
pusha
rcrb
aaa
push
es
int3
fstpl
jge
rcrl
push
mov
dec
sar
es
daa
insl
inc
pop
shrb
mov
inc
icebp
adc
rcl
aas
lods
cwtl
pop
imul
inc
inc
adc
mov
adc
adc
addr16
cmp
repnz
shrl
lods
imul
or
mov
rorb
push
xchg
dec
sub
and
mov
cmp
fwait
lahf
jbe
jp
mov
push
cmc
dec
imul
mov
mov
push
mov
addb
lahf
mov
pop
add
dec
mov
jg
push
pop
fisubrs
leave
testb
dec
inc
xor
mov
fidivl
push
mov
xchg
ret
inc
ret
ss
loope
lods
xchg
inc
and
mov
rclb
dec
cmp
ds
flds
stos
sahf
pop
fstps
imul
sti
fiaddl
or
adc
andl
xchg
mov
sbb
dec
cmp
pop
or
jo
adc
idivl
rclb
mov
mov
popf
int3
fadds
dec
lock
int3
cmp
jecxz
dec
mov
inc
add
scas
sbb
xlat
cmpb
pop
jbe
nop
bnd
stc
shr
movsb
or
test
nop
cmp
cs
movsl
fucomi
and
inc
in
inc
dec
ds
ja
cmc
add
aas
scas
sub
mov
test
mov
stc
test
dec
inc
xchg
sub
mov
mov
add
lcall
mov
std
lcall
xor
aad
dec
out
cmpl
ds
pushf
pop
rolb
int
add
negb
lods
mov
mov
mov
into
mov
mov
mov
and
mov
sbb
mov
mov
pop
inc
pop
mov
mov
clc
sahf
jne
out
lods
loope
pop
addr16
mov
int3
in
loopne
xchg
jp
mov
cmpsl
cmp
cmp
or
xchg
xor
shr
xor
cmp
push
rcrl
fs
lret
xchg
ficomps
mov
add
aaa
lret
pop
lds
iret
dec
pop
ret
jnp
xchg
inc
or
push
cs
enter
outsl
add
sub
out
dec
out
loope
cld
mov
jle
mov
pop
outsb
out
movsb
mov
arpl
lret
xor
jp
mov
sub
xlat
iret
pop
and
jnp
pop
loopne
sbb
cmpsb
into
mov
repz
dec
fcomps
fucomip
and
pop
dec
xchg
sbb
rol
push
sbb
adc
mov
sbb
shlb
les
popl
pop
popf
inc
mov
aam
fnstenv
test
stos
fistpll
xor
push
xchg
repnz
leave
and
popa
pusha
add
loopne
rdpmc
shlb
outsl
mov
mov
in
and
faddl
icebp
outsb
aad
cmp
mov
jno
or
cld
dec
arpl
jle
pop
mov
sub
add
subb
push
adcl
cmp
pop
loop
data16
in
testl
out
ljmp
xor
push
mov
jecxz
xlat
or
jne
mov
lcall
imul
mov
dec
aaa
push
int
mov
fwait
or
mov
xchg
cs
sbb
mov
insl
cmp
js
ss
xchg
jb
cwtl
mov
and
in
in
mov
pop
dec
xchg
lret
and
shll
xor
sbb
repz
dec
je
out
addr16
mov
push
fwait
sub
mov
sbb
pusha
mov
dec
push
xor
jge
mov
dec
jae
incb
push
mov
sti
into
xor
sub
inc
fs
sub
lahf
and
repz
adc
testl
pushf
mov
enter
pop
inc
lods
push
int
xlat
int
sub
xor
and
in
inc
test
and
fwait
scas
xor
cli
xorb
push
fcomip
or
sbb
adc
sbb
push
mov
add
adc
std
fnsave
lahf
int
test
push
lahf
dec
add
scas
fdivrl
sahf
jp
dec
jae
es
loop
lea
push
outsb
popa
fisubs
scas
int3
sub
orl
xchg
subl
jno
push
mov
xchg
lret
and
jle
xor
test
push
mov
adc
jo
loope
jne
dec
inc
xor
in
adc
in
out
push
inc
repnz
out
mov
xchg
push
jp
lods
in
je
mov
movl
push
cmp
push
cltd
mov
push
lahf
aaa
loop
push
lea
in
dec
xchg
aaa
adc
rcl
jp
mov
jne
push
cmp
xchg
xor
es
out
mov
mov
sub
es
and
or
insl
or
icebp
mov
push
test
sbb
jo
int
insb
hlt
lods
mov
cmc
lods
mov
mov
test
cmp
sbb
and
jle
lods
mov
jbe
hlt
ret
push
sub
clc
lock
lock
pop
cmpsb
xor
clc
movsb
pusha
jmp
outsb
movsb
or
adc
fucom
jae
cmp
mov
jae
cli
dec
insb
js
int
repnz
mov
pop
imul
mov
test
adc
sahf
in
add
dec
je
fnsave
cmp
adc
inc
test
xor
mov
and
gs
or
add
pushf
pop
lahf
jne
loop
mov
js
mov
ja
rcll
fidivrl
adc
lods
movsb
or
cmp
add
popf
out
mov
dec
add
and
xchg
inc
xor
or
loop
adc
pop
stc
loopne
adc
push
mov
fs
mov
dec
or
shrb
std
mov
pop
nop
or
aaa
xchg
jmp
pushf
sub
clc
and
nop
adc
stos
or
test
or
pushf
jae
xchg
or
out
icebp
pop
and
and
push
js
nop
int
jo
fwait
mov
mov
int3
sti
scas
inc
pop
and
or
adc
ror
int
push
ss
mov
or
cld
pushf
fs
fldl2e
and
mov
nop
jno
ja
push
mov
and
add
jo
inc
fcoml
mov
sub
hlt
jno
sbb
out
daa
mov
jnp
outsl
iret
xchg
es
pushl
addl
fists
mov
js
sub
push
idivl
shrd
and
and
test
push
decb
es
pop
mov
push
imul
insb
popf
xor
divl
imul
mov
mov
pushf
mov
adc
insl
sbb
and
mov
mov
pusha
orb
pop
push
sbbb
mov
inc
jbe
aaa
mov
iret
push
adc
pop
fisubrs
ja
inc
or
dec
pop
mov
mov
add
ret
push
mov
mov
adc
sub
sbb
pminub
movsb
lret
leave
push
fs
pop
pop
mov
fistl
xchg
sub
or
sbb
mov
nop
mov
xor
rolb
out
imul
add
insb
and
xchg
in
jae
dec
shll
jne
mov
mov
add
lcall
gs
push
inc
mov
adcl
mov
add
sub
cmpl
addb
sete
cli
jns
aas
enter
out
je
sbb
add
daa
loope
pop
clc
mov
aaa
mov
nop
jbe
bound
iret
mov
mov
aam
in
jns
jno
mov
xor
cmp
jp
ud2
push
cs
pop
fs
xlat
data16
in
outsb
sub
xchg
push
sbb
fwait
insl
pop
and
push
jo
fnsave
in
jle
imul
inc
add
push
int
dec
movsb
adc
stos
mov
inc
pop
fwait
lock
sbb
addb
pop
pop
das
data16
outsl
ds
gs
jnp
xor
add
push
int
imul
mov
mov
add
sub
lods
xor
jmp
dec
ljmp
ja
push
cmpsl
push
jae
insl
xchg
push
lahf
jns
inc
and
sti
inc
sub
int
and
mov
int
adc
lods
adc
or
add
or
popa
ljmp
sub
mov
cmpsl
xchg
pusha
stc
lea
fldcw
cs
cmp
adc
xchg
loopne
sub
test
addl
lret
dec
fsubs
sub
push
pushf
push
aaa
lock
test
mov
aam
dec
push
mov
jmp
sbb
outsl
mov
sub
mov
out
cmp
adc
fdivrs
movl
jae
arpl
mov
xlat
jb
adc
jp
in
cmpsl
xchg
mov
and
stos
out
mov
pop
in
test
jne
aam
or
push
leave
add
dec
imul
pop
sbb
push
cmp
and
add
inc
stc
es
cli
sub
cvtdq2ps
imulb
or
dec
or
add
pop
in
add
push
inc
xlat
sbb
ret
and
dec
fsubrs
arpl
xor
dec
cwtl
xorps
jecxz
sub
bound
xor
daa
dec
in
cwtl
cld
les
sbbb
icebp
xchg
xchg
ds
sarb
adc
hlt
fadds
and
lock
cli
dec
and
loopne
loop
pop
and
cmpsb
xorb
mov
sub
mov
push
cs
dec
pop
mov
dec
push
pop
cltd
js
in
popaw
adc
orb
mov
fnstcw
adc
or
dec
repz
add
adcb
xchg
pusha
dec
mov
push
mov
imul
jg
lahf
jns
adc
stos
insb
stos
icebp
loopne
pusha
xor
push
cmp
cld
aam
aaa
or
ljmp
inc
in
push
mov
mov
mov
icebp
mov
das
and
inc
pushf
ljmp
push
push
mov
xchg
dec
out
add
xor
inc
imul
rclb
jg
mov
add
imul
jge
mov
jge
jle
les
dec
clc
inc
jmp
inc
insb
mov
push
jle
icebp
cwtl
pusha
and
icebp
jne
jae
mov
sub
add
pop
inc
and
pop
inc
mov
adc
cltd
pop
inc
or
mov
push
cmp
cli
mov
dec
shr
mov
mov
roll
scas
xchg
insl
cmp
in
dec
das
or
ds
jne
inc
roll
push
jo
shr
jecxz
ja
mov
scas
pop
xor
push
int3
das
aam
and
cmp
xchg
sub
xchg
and
jo
adc
adc
into
and
shll
xchg
daa
sbb
pop
fsubrl
xchg
xchg
fdivl
push
notl
shlb
cmpb
push
add
inc
add
add
and
pop
jmp
xchg
mov
mov
ljmp
in
pop
mov
aam
jbe
incb
stc
sub
roll
or
and
xchg
jns
test
xchg
and
enter
inc
xor
cmp
sub
cmp
xchg
adc
enter
sbb
mov
xchg
test
and
jecxz
jbe
xchg
cwtl
xor
mov
or
jg
hlt
or
sub
add
cmpsl
mov
mov
out
out
add
push
mov
mov
pusha
hlt
mov
and
jne
sbb
sahf
add
aad
vmulps
xchg
ds
ds
cmc
insl
add
sub
aaa
mov
pop
mulb
mov
push
mov
pop
ljmp
push
xor
xchg
scas
mov
in
movsb
pop
pop
sbb
inc
aas
popf
mov
lcall
es
jns
pop
xor
add
mov
mov
sbb
mov
push
xchg
xor
push
push
loop
pop
sbb
out
lea
mov
mov
lods
pop
movsb
imul
jg
iret
data16
cld
push
jl
dec
cmp
data16
loopne
xor
mov
and
or
lea
lcall
mov
test
fisubl
outsl
xchg
jle
and
or
push
xor
test
outsb
mov
dec
scas
jecxz
out
ljmp
stos
inc
cmp
mov
fisubl
loopne
ret
in
sub
mov
les
xchg
lahf
xchg
int3
ret
add
or
pop
inc
xchg
inc
jns
rcrl
push
mov
in
fldenv
push
ss
mov
shl
add
jg
xor
out
subl
jne
mov
je
push
xchg
mov
add
hlt
rcl
sbb
imul
scas
imul
mov
mov
leave
loopne
testl
and
into
xchg
pop
jbe
es
js
mov
dec
stos
fisttpll
outsb
lret
test
push
xchg
in
xchg
add
stos
test
mov
in
ret
sbb
pusha
sub
popf
fildll
cltd
inc
push
cltd
dec
inc
stc
push
adc
sbb
mov
lock
xchg
ret
xchg
push
std
mov
xor
sbb
cmp
sarb
xor
in
xor
mov
add
push
xor
clc
dec
ds
sti
or
cmp
jg
push
push
cmpsb
dec
mov
pop
adc
lcall
out
hlt
pop
adc
int
sbb
cltd
test
jo
jmp
jmp
cmp
daa
dec
lret
xchg
js
loope
or
sbb
mov
popa
xchg
pop
rcll
inc
das
aam
nop
fistl
jo
lret
stos
mov
in
out
add
fucomip
stc
sub
scas
xchg
inc
add
sub
push
adc
jge
fdivs
lcall
jp
je
lods
xchg
fisttps
adc
das
fistpl
pop
loop
cmp
adc
movsb
daa
push
movsb
dec
ja
mov
lock
pop
nop
insb
clc
adc
inc
push
ds
xor
fsubr
rclb
aad
ret
dec
in
push
mov
lods
and
ja
xor
test
or
pusha
in
fidivrs
lahf
add
jbe
pop
enter
sti
inc
xor
jg
imul
loope
add
adc
mov
adc
inc
jl
shlb
daa
in
xor
cmp
push
sub
fildl
insl
outsl
mov
in
pop
stos
fnstenv
mov
pop
sub
dec
and
mov
es
cmpsb
inc
dec
mov
cmp
jne
and
pusha
dec
or
mov
pop
pop
lods
jecxz
dec
adc
in
dec
fwait
cld
scas
repz
negb
jo
inc
add
fs
mov
std
std
fsubs
xor
xor
ss
adc
mov
lods
nop
cwtl
push
mov
and
sub
xchg
and
int3
leave
sahf
dec
pop
sarb
sbb
or
push
jb
xchg
and
mov
lcall
popf
jnp
jae
mov
lahf
xchg
mulb
cmc
pop
inc
ss
sub
loope
cmp
and
roll
mov
mov
jae
imull
adc
sbb
add
inc
push
mov
mov
mov
lock
loopne
or
aam
mov
add
add
scas
int3
cli
jo
jnp
jns
jmp
mov
or
mov
pusha
push
xor
dec
and
cli
mov
cltd
dec
push
add
cli
cmpb
lahf
pop
cmp
sub
pop
ljmp
dec
push
repnz
adc
xor
sbb
dec
sub
mov
test
inc
into
imull
pop
ret
rcrb
ss
xor
test
jge
mov
loop
adc
test
bound
or
fstpt
rcrb
fldl
and
mov
add
dec
dec
pop
mov
push
jbe
mov
xlat
stos
lock
add
jae
test
lret
notl
push
flds
push
ret
je
push
push
lods
mov
fisttpl
notb
push
out
pop
nop
push
popa
jb
call
outsb
add
lods
push
jge
and
gs
xchg
outsb
inc
dec
push
insb
cmp
xor
xchg
inc
ds
or
xchg
lea
push
mov
push
add
or
push
int3
cmc
xor
rcl
push
jb
shl
mov
or
jg
push
jns
sbb
xlat
xchg
lock
xchg
cmpsl
lods
lock
out
test
iret
in
adc
cmp
es
int3
dec
cmp
sub
cmc
mov
in
sub
xchg
jmp
push
int3
jge
add
decb
jp
cmp
push
jmp
lock
dec
inc
insl
dec
movb
cmpsl
inc
lods
movsb
icebp
pop
sub
dec
pop
rcrb
mov
loope
jno
leave
ret
jecxz
aad
or
mov
push
call
jne
pop
pop
js
iret
sub
test
fdivrp
ja
rorl
xor
lahf
push
cmp
test
sub
mov
leave
test
inc
scas
jno
jl
or
aad
inc
sbb
cs
cld
sub
mov
aad
push
ds
ja
test
sarl
push
test
pop
leave
cwtl
mov
popa
cmp
push
jae
xor
test
nop
cli
arpl
mov
lret
push
add
aaa
das
dec
jl
in
add
xor
std
push
mov
hlt
ret
outsb
cmpb
daa
push
fsubp
add
ret
aas
int
cltd
ret
into
and
xor
xor
jo
fsubrl
mov
jns
dec
call
loopne
inc
push
into
repnz
sbb
inc
es
and
fldenv
sub
jmp
aam
std
dec
lods
leave
jae
and
lock
xchg
insl
inc
xchg
cli
xchg
mov
push
push
fnsave
lods
adc
cmp
xchg
test
lods
xchg
jbe
mov
add
ja
or
lock
xor
sbb
or
daa
mov
out
cld
cwtl
notb
inc
jge
les
fstpt
je
push
es
push
sub
sbb
push
outsl
in
test
mov
test
push
add
movsb
xchg
je
cmp
push
adc
outsl
jo
or
jl
or
mov
or
adc
jmp
repz
test
es
idivl
lea
ret
in
add
outsl
inc
mov
out
jbe
inc
pop
pushf
inc
pop
adc
out
mov
popf
add
and
std
inc
lods
push
sub
lds
and
fstl
std
bound
mov
and
rcll
jle
add
mov
push
push
add
push
lods
lcall
xor
test
sub
rolb
stos
aam
outsb
mov
push
add
xor
or
inc
sbb
mov
mov
arpl
in
rol
add
mov
and
aam
dec
sar
js
mov
pop
popa
aam
sub
adc
ss
decb
jne
sbb
xchg
mov
fildll
addr16
xor
adc
in
ret
sahf
roll
lcall
cld
jne
icebp
sub
inc
sbb
cld
adc
loopne
stos
daa
push
inc
sbb
and
fsubl
push
pop
xor
and
mov
scas
or
mov
pop
ss
in
mov
jno
out
sub
aaa
inc
es
dec
jbe
and
imul
addr16
push
shrl
inc
xor
add
fadds
adc
cmpsl
loop
mov
scas
jle
pop
lods
cmc
les
adc
clc
outsb
in
pop
xchg
add
xchg
stos
popf
push
dec
xor
clc
xor
sti
jo
sbb
lret
jmp
insl
inc
inc
mov
xchg
cmp
int
mov
loopew
lahf
cltd
addr16
push
mov
xor
mov
out
push
jmp
xchg
xor
jbe
call
clc
add
push
fiaddl
fcoml
pop
aas
out
pop
inc
mov
adc
rorl
dec
mov
imul
mov
lret
push
dec
add
lahf
out
xor
and
ds
cmp
or
test
loop
adc
inc
lock
dec
jecxz
test
loopne
sub
test
xchg
cld
cmpsl
aaa
push
ss
mov
and
or
push
data16
jb
aad
add
push
test
cs
sbb
aam
push
push
sub
or
and
in
mov
sti
aad
arpl
push
jl
out
daa
out
xchg
adc
push
mov
vmovhps
outsl
inc
daa
mov
jp
and
das
ret
jae
sub
stos
jne
jne
je
lahf
xchg
inc
xchg
int3
ljmp
add
icebp
ret
and
pop
lret
add
out
jae
mov
pop
xchg
repnz
bound
mov
insb
pop
mov
mov
fwait
in
sub
ret
sbb
or
inc
ficoms
repz
cld
inc
and
dec
leave
repnz
rorb
lea
fmuls
das
and
dec
jo
popa
sbb
sbb
sub
test
pop
sbb
cmc
movsb
les
inc
push
aaa
inc
pop
xor
xorb
rolb
xchg
imul
leave
mov
sub
mov
push
or
insb
inc
lret
adcl
xchg
fisttpl
pop
ss
cli
cmp
in
sbb
lods
adc
fcoms
mov
inc
scas
or
inc
fcompl
fldenv
loop
mov
mov
mov
nop
bound
shll
cmpsl
xchg
shll
jl
pop
lret
js
and
test
clc
jbe
cld
insb
push
or
jbe
jge
xchg
mov
dec
testl
inc
cmpl
push
adc
push
fistl
enter
pop
mov
out
adc
stos
pop
ret
insb
sbb
pushf
out
mov
mov
movsb
xchg
inc
addr16
popf
or
shr
adc
repnz
out
imul
push
stc
incl
lods
inc
pop
fcompl
adc
flds
daa
sarb
inc
movsb
ja
push
mov
test
jo
or
xor
xchg
push
xchg
pop
mov
push
xorb
es
adc
ja
hlt
in
mov
mov
lret
fisubl
out
cltd
fsubr
out
sbb
mov
push
aas
push
cltd
xchg
test
aas
stos
arpl
fdivl
mov
cmova
sbb
pop
roll
sbb
mov
cltd
push
mov
mov
test
stos
fs
or
jge
pop
nop
and
xor
ljmp
nop
popf
push
rolb
push
pop
fwait
jns
call
movsb
or
jno
int3
cmp
sbb
imul
sbb
aam
cwtl
xorb
call
xchg
outsb
push
mov
adc
lock
sub
sbbl
inc
fsubp
mov
mov
unpckhps
movsl
testb
je
cmp
nop
shl
pop
xchg
cmp
sar
pop
jg
push
in
out
daa
jbe
repz
inc
mov
in
cwtl
test
adc
inc
aam
hlt
mov
sub
cltd
in
mov
dec
pop
dec
addr16
movsb
adc
iret
mov
fsubs
or
add
mov
push
inc
xlat
out
jl
jge
lret
in
mov
mov
outsb
in
cmp
nopl
fmuls
cmp
pop
push
and
movsb
roll
aas
fisubs
sub
addb
imul
jle
fs
mov
cmp
inc
sub
add
rcl
jmp
sbb
and
dec
mov
clc
push
or
mov
push
mov
dec
pop
mov
fldl
call
xchg
inc
mov
inc
in
add
xor
mov
adc
fidivs
push
lods
lea
hlt
pusha
or
jp
sub
sub
or
mov
in
pop
dec
leave
mov
pop
dec
xchg
push
jno
repz
mov
in
stos
lock
pop
add
jno
int3
add
jl
cltd
sbb
jle
ror
push
add
push
cli
shlb
aas
mov
int
les
in
jmp
pop
sbb
push
xchg
inc
mov
or
int3
jb
pop
scas
pop
sbb
pop
andb
jge
lcall
add
push
pop
mov
jl
test
cs
inc
es
push
insb
jns
xchg
dec
jl
push
lea
je
call
scas
and
je
sub
jp
push
insb
jno
dec
jecxz
call
jnp
je
add
inc
imul
fldenv
or
cmp
cmp
nop
xchg
push
xchg
je
test
lret
lret
stc
aam
in
sub
pusha
addb
pop
aad
inc
mov
pop
je
xchg
sbb
push
fbld
mov
jmp
out
cmp
fsub
pop
inc
jl
dec
notl
sbb
add
lock
pusha
cmp
and
dec
mov
or
xlat
pop
xor
in
jmp
ret
cltd
sub
jp
mov
sub
sub
jne
mov
je
or
cmovno
pop
lea
inc
movsb
cli
out
js
imull
cmp
sub
mov
ss
movsl
pushf
insl
repnz
inc
push
or
sahf
mov
push
jecxz
pop
jl
gs
cmp
fsubs
dec
sbb
roll
faddl
pop
push
movsl
mov
or
aam
jl,pt
push
and
pop
jnp
stos
jp
and
les
sahf
add
call
fwait
inc
mov
in
jl
ja
loopne
cs
and
or
out
and
jns
mov
mov
add
shrb
cmp
adc
dec
test
or
mov
xor
jmp
push
mov
subl
lock
jns
jecxz
into
movsb
xchg
hlt
ljmp
mov
addb
stos
mov
fidivrl
rcl
es
call
scas
sub
pop
push
or
adc
fs
push
pop
pusha
hlt
jle
and
lods
cmpsl
fidivl
adc
movsb
cmp
out
add
test
loop
idivl
cmpsl
lcall
inc
cmp
repnz
jae
mov
dec
scas
into
pop
mov
int
mov
or
sub
int3
mov
cmc
xor
into
dec
popf
push
sahf
mov
pusha
xor
push
ja
stos
lahf
and
mov
jge
mov
mov
dec
fsubrl
adc
call
push
mov
jl
sub
movhps
lock
or
inc
sub
or
int3
pop
push
xor
and
lea
cmc
insb
mov
ficoml
scas
adc
insb
test
insl
push
add
xchg
or
fmull
and
cmpsl
and
addr16
ret
push
mov
mov
push
cmp
scas
mov
and
xor
mov
pop
daa
es
std
cmpsb
fidivl
stos
scas
add
fwait
pop
scas
jb
les
cli
stos
adc
ret
or
sbb
cmp
jnp
sub
cmc
shrb
out
pop
pop
lds
mov
loopne
push
nop
test
mov
jns
sbb
pusha
mov
inc
pop
das
pop
pop
cmp
mov
mov
push
fs
push
repnz
inc
mov
orb
scas
lods
push
or
jecxz
jae
mov
leave
scas
xlat
gs
xchg
repnz
rcrb
mov
cmp
push
pop
int
repz
scas
icebp
add
sbb
mov
in
ret
clc
jle
loop
jb
fcom
aad
cs
imul
adc
jbe
push
fcompl
icebp
into
jae
aas
and
cmp
adcl
arpl
lds
outsl
bound
dec
sbb
imul
fstl
in
xchg
mov
push
lds
cli
icebp
insb
mov
in
mov
xor
mov
popa
dec
or
adcl
push
out
inc
pusha
sub
ds
and
int
xorb
int3
pop
xchg
xchg
imul
in
jns
addr16
and
push
shrl
add
jge
cmpsb
pop
xchg
inc
xchg
bound
fisttpl
movsb
dec
mov
stos
jmp
dec
mov
dec
pop
lcall
sbb
or
pop
push
mov
ss
les
jg
loope
sahf
push
pusha
shll
inc
xchg
pop
mov
or
lret
and
lret
xor
cld
push
mov
fisttps
mov
aas
movsb
aaa
inc
lret
stos
or
repz
xlat
addr16
push
hlt
sti
leave
add
stos
fst
orb
les
or
hlt
pop
data16
jge
inc
pushf
xor
push
dec
mov
add
push
cmc
inc
ret
lcall
xchg
mov
mov
aad
mov
pusha
or
aaa
inc
into
sub
loope
pop
movsl
shr
sub
in
jb
jno
pop
cs
jnp
add
add
pop
sbb
inc
inc
cmc
loope
fmuls
stc
daa
lock
inc
nop
pop
iret
or
es
cmp
dec
mov
sbb
aad
adc
int
bound
pop
movsl
iret
ret
sub
or
mov
fistps
cli
or
xchg
sti
pushf
add
shlb
push
je
inc
mov
dec
cmp
pop
fadds
loop
adc
and
jne
lcall
mov
jecxz
imul
dec
insb
mov
movsl
dec
repnz
pop
loopne
adc
sbb
push
fbstp
aam
mov
add
xor
push
les
jle
sub
mov
xor
and
pushf
cmp
ja
dec
stc
into
pop
push
jecxz
hlt
mov
sahf
inc
jns
dec
out
pop
movb
mov
icebp
and
loope
and
jge
fisubs
outsb
cmp
adc
adc
sbbb
ret
lock
addl
mov
dec
loopne
cmpsb
incl
xchg
and
shlb
dec
ljmp
mov
adc
movsl
stos
lds
pop
push
fcoms
hlt
aad
rolb
and
imul
mov
out
add
mov
iret
outsl
push
inc
stos
sub
pop
pusha
mov
push
jbe
xor
mov
mov
mov
inc
cltd
dec
sbb
push
addb
leave
sub
cmpsl
dec
roll
shlb
cmpsl
mov
testl
in
push
xchg
xor
sbb
in
jecxz
insl
xor
push
sbb
test
mov
in
mov
jb
test
xor
mov
mov
lock
int
jae
mov
cmp
xchg
icebp
lds
stos
inc
outsb
sub
nop
sbb
repz
pop
jp
pop
push
popa
dec
sub
or
cmp
pop
outsb
mov
or
jns
add
sahf
cltd
mov
icebp
mov
jp
test
into
mov
or
repz
push
aad
loopne
adc
andl
sbb
hlt
fmuls
popa
pop
mov
xor
std
hlt
test
shl
pushf
ds
and
add
cmpsl
and
shll
or
xchg
mov
mov
test
sub
mov
pop
jne
jg
subb
fwait
loope
mov
in
sub
xchg
inc
jmp
pop
clc
push
push
push
mov
mov
out
outsb
out
pop
inc
push
cmp
adc
sub
xchg
mov
and
shrb
stos
push
repnz
and
mov
push
cmp
lea
clc
scas
fwait
iret
scas
adc
pop
jb
enter
fs
jns
and
mov
test
mov
icebp
add
and
sbb
cmp
stos
cmc
fmul
adc
leave
fidivrs
xchg
lock
sarl
sbb
rorl
sub
shrb
push
lods
test
sub
stos
lods
sub
add
add
mov
pop
dec
xchg
and
or
movsl
mov
leave
push
or
loop
sub
jp
imulb
out
pop
dec
xor
sub
mov
outsl
in
stc
or
mov
ret
pushf
pop
push
ljmp
sbb
mov
cmp
in
lock
ror
push
dec
adc
ret
das
call
sti
mov
jl
fisttps
mov
adc
scas
mov
popa
mov
cs
aam
adc
cmpsb
fldlg2
addr16
add
pop
and
imul
mov
add
fs
push
jno
xchg
sub
pop
into
mov
push
adc
ficomps
cli
mov
jo
in
pop
out
xchg
pop
xchg
lret
outsl
out
pop
push
sarb
mov
jbe
inc
push
outsl
icebp
mov
je
mov
clc
daa
mov
add
ss
jge
js
es
std
inc
sub
inc
mov
ja
leave
call
fstpl
cmpsl
xchg
movsb
adc
mov
subl
add
in
iret
or
dec
aad
out
jl
mov
test
push
lods
dec
pop
nop
and
jg
cmpsl
and
jne
push
xchg
loope
jp
sbb
xor
sti
aas
jl
pushf
pop
loope
mov
data16
push
into
push
jp
arpl
cmc
aaa
dec
sbb
repz
mov
enter
xor
data16
movsb
add
add
mov
shr
loopne
add
roll
xchg
mov
bound
add
cmpsl
pop
stos
je
in
mov
dec
dec
sub
popa
and
xor
inc
xor
mov
lcall
xchg
xor
mov
jge
jle
cmp
out
clc
dec
inc
dec
mov
sbb
andl
loope
xchg
test
repnz
add
mov
jnp
mov
jmp
cmpsb
sub
fwait
jnp
mov
mov
jnp
or
andl
or
sti
xor
mov
mov
sbb
push
filds
fwait
push
fs
sbb
xor
and
inc
nop
shll
sub
das
leave
out
addr16
add
xor
movb
in
and
pop
enter
mov
rolb
pop
mov
movsl
mov
lea
outsb
hlt
inc
cmp
mov
adcb
stc
sbbl
push
cwtd
pop
mov
out
lods
inc
lea
pop
das
jno
cmp
insb
dec
push
pop
gs
icebp
xor
loop
test
cld
jae
fidivrl
jp
je
mov
pop
incb
xor
pop
mov
lcall
sub
out
sbb
call
pop
aam
cmp
nop
enter
lds
rcrb
add
ficoml
add
add
popl
push
popa
outsb
cwtl
xchg
and
in
adc
int3
jecxz
outsb
mov
mov
push
enter
ljmp
lcall
add
out
push
sub
test
stc
cs
mov
push
pop
cmp
test
nop
ret
leave
pop
jl
es
hlt
ja
add
cli
sahf
add
int
cltd
cmp
mov
hlt
jmp
and
pop
sarb
push
orb
cmpsl
enter
jl
ret
jno
scas
lahf
fistpll
dec
dec
fdivrl
lcall
mov
inc
xchg
xchg
push
fsts
dec
popf
int
aad
std
push
insb
and
mov
sub
repz
mov
push
lods
jne
xlat
mov
cmp
std
mov
aaa
shrl
mov
in
mov
jnp
int
mov
xlat
mov
ja
push
add
xlat
inc
sbb
jle
and
xchg
mov
gs
xor
lock
fidivrl
sub
stos
shll
into
xchg
ja
sub
mov
cs
sbb
push
push
mov
gs
or
gs
mov
enter
arpl
dec
cltd
outsb
ja
and
or
adc
xchg
lods
adc
das
sub
ds
or
dec
gs
testb
pop
mov
mov
cmp
jge
xorl
push
daa
sub
mov
addr16
dec
and
in
fistps
push
int
ja
nop
mov
in
add
insl
test
imul
out
jl
jg
daa
sahf
imul
jns
sahf
push
fdivs
and
cmpsl
es
xor
jae
and
fidivrl
inc
sub
sub
pop
cmpl
pop
mov
fidivl
imul
push
sub
ret
ucomiss
sti
push
jbe
lcall
cmpsl
out
repnz
fcomp
mov
xor
fstpt
adc
cmp
sub
lock
les
xlat
mov
mov
mov
imul
dec
imul
jae
cwtl
ficoml
jmp
rorb
cmp
xor
pop
cmovnp
xchg
dec
je
cltd
and
ret
mov
adc
icebp
stos
lret
cmpsl
roll
push
inc
pop
cmpsb
lret
lds
sub
out
nop
fisttpl
aas
cld
xchg
mov
push
sub
dec
xchg
rolb
imul
adc
xor
xlat
test
adc
sub
imul
jp
test
nop
test
icebp
js
xchg
or
lock
out
inc
mov
jbe
sub
int3
dec
add
push
bnd
insl
lahf
negl
xor
sahf
jno
cmp
addb
ret
xchg
imul
je
mov
rcrb
pop
adc
jg
and
adc
dec
add
fidivrs
xor
inc
outsb
push
mov
jb
sbb
cmpsl
xchg
xor
bnd
pop
jae
jmp
mov
insl
in
into
push
lret
scas
pop
and
js
sti
fnsave
jg
push
add
leave
sti
pop
mov
jle
cltd
and
mov
andb
add
fdiv
shr
shl
pop
or
jp
inc
ja
