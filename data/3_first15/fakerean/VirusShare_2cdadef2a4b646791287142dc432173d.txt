mov
add
add
add
add
add
add
incl
pop
push
add
and
popf
dec
adc
mov
cli
cmc
inc
cli
dec
ja
loopne
inc
ja
pop
ja
or
cmp
aad
mov
or
sub
xor
sar
aam
xorl
push
insb
ljmp
dec
mov
sbb
inc
incl
add
or
scas
repz
mov
cltd
add
add
pop
pop
push
out
inc
mov
ficoms
dec
or
insb
and
ficompl
insl
add
mov
cmpsb
push
push
xorl
inc
orb
aad
addl
fucomp
add
mov
mov
add
lea
cltd
incl
movsl
ds
fldl
ja
testl
lods
ds
add
rcrb
or
lds
xchg
adc
lods
pop
add
inc
inc
jmp
add
mov
mov
lods
mov
or
pop
repnz
sbb
mov
mov
jg
pop
pop
ja
or
mov
mov
dec
pop
adc
add
add
aas
add
sar
jle
cmp
or
add
or
lret
stc
push
mov
add
sub
ja
ret
shld
jbe
adc
mov
push
mov
mov
sar
dec
pop
add
add
test
test
aas
add
pop
insb
sub
xchg
mov
int3
cmp
ja
mov
je
ja
testl
divb
pop
jle
ret
jns
sti
mov
jns
mov
cltd
out
fadd
rcr
lret
ror
cltd
jmp
mov
pushf
mov
mov
loope
xchg
mul
xchg
lcall
rclb
fcmovne
lahf
mov
int
jmp
loop
xchg
jmp
rclb
lock
xchg
mov
mov
stos
les
leave
movb
lret
adc
repnz
mov
notl
adc
xchg
xchg
adc
xchg
xchg
in
rcll
leave
lahf
mov
ret
ror
lcall
rorl
std
in
xchg
xchg
icebp
rorb
mov
mov
icebp
fcmovnbe
movb
rol
rcl
xchg
cmc
out
mov
rol
repz
xchg
ficoms
in
xchg
shlb
adc
mov
rcl
int
rol
mov
ffree
lcall
lret
mov
fld
mov
fcmovbe
aam
fxch
jecxz
int3
lcall
xchg
test
fcmove
mov
fcmove
shl
loope
mov
sbb
fwait
add
rclb
add
into
xchg
add
rcl
stc
fisttpl
mov
fcmove
cltd
mov
xchg
mov
cli
stos
cmc
out
divb
out
cmc
mov
sbb
fsts
loop
sbb
scas
jno
fwait
ret
jle
rcrl
fcoms
enter
cmp
imul
push
dec
sbb
mov
outsb
sub
jbe
or
shll
sti
mov
test
clc
sbb
and
mov
cmp
loope
or
stos
out
cmc
sub
aas
sub
cwtl
cwtl
sub
popf
xchg
icebp
xchg
push
jne
mov
add
je
out
pop
rclb
adc
dec
aam
fxch
fwait
and
loopne
jno
or
jns
shr
mov
jae
popa
call
xchg
adc
insl
jle
push
sub
mov
jmp
jp
cmp
out
in
data16
jbe
xchg
div
sbb
xchg
add
cmp
ljmp
lods
push
mov
cmp
pop
jb
lret
xchg
ljmp
ret
call
mov
cmpsb
mov
cmc
mov
jecxz
mov
jnp
mov
xchg
out
fsts
loopne
xchg
cmc
enter
notb
pop
in
out
cmc
cmpsl
es
ret
pop
popa
push
fdivp
mov
mov
mov
out
pop
lea
pop
shll
mov
dec
rclb
call
xor
imul
and
cmpsb
mov
sbb
push
fs
fistl
and
addr16
xchg
jg
lods
test
fstps
dec
adc
push
stc
pop
pop
push
and
push
push
mov
lret
outsb
sub
jbe
sbb
jle
out
mov
inc
and
shr
pop
inc
outsl
std
dec
out
cmc
mov
mov
cmc
loopne
insl
lock
xchg
jle
loop
cmc
cs
fcomip
mov
fbstp
out
jp
cmp
push
cmpsb
xchg
loope
cmc
xor
xchg
dec
nop
inc
fs
sub
sub
out
push
sub
mov
out
cmpsb
shl
cmc
jecxz
inc
push
mov
imul
mov
outsl
cmpsb
cmp
shl
iret
cmpsb
cli
and
lock
adc
jo
cs
data16
jne
push
sbb
out
jle
mov
jo
subb
mul
lahf
jo
call
jp
cmp
scas
mov
cmc
adc
jle
out
sbb
inc
pop
scas
cmc
mov
arpl
mov
out
clc
jle
cld
clc
jl
cld
sbb
shl
fcomip
and
lcall
loopne
push
mov
out
xor
mov
dec
dec
sbb
lods
jmp
fdiv
lods
pop
in
sub
sbb
lods
jmp
lcall
sbb
jp
mov
fs
xor
jecxz
jmp
lcall
into
je
cmp
data16
add
dec
cmp
push
jno
jno
out
push
shll
jne
out
neg
out
sbb
test
jmp
loop
xor
movsl
cmp
fwait
ret
int
cs
push
xor
and
cmpb
push
test
xchg
call
roll
scas
inc
add
lcall
and
loop
cmp
int
push
inc
adc
mov
out
sbb
lods
jmp
cmpsb
loope
mov
out
imul
shl
loopne
jmp
xchg
jle
jmp
xchg
jbe
out
inc
pop
pop
int
cwtl
rcll
pushf
mov
out
xchg
and
xchg
lods
jmp
xchg
idivb
dec
xchg
cmc
mov
out
jno
xor
jno
xor
ret
mov
jbe
rcr
mov
push
cmp
mov
jl
mov
sbb
out
push
divl
fcompl
cmpsb
jne
xchg
cmc
mov
repnz
arpl
sti
cmp
div
out
repnz
out
outsl
inc
adc
xchg
cmc
mov
sar
xor
sbb
lods
ffreep
or
jle
mov
inc
jno
sbb
fldl
sbb
mov
pop
es
xchg
cmc
iret
out
cmp
mov
aam
jo
ljmp
divl
pop
push
test
push
lcall
pop
lcall
lock
cltd
mov
lds
std
jb
lods
add
in
lcall
fdivrl
repz
mov
mov
aam
jl
lret
inc
hlt
popa
test
pop
imulb
xchg
cmpsb
insb
mull
jb
jne
xor
fsubs
or
insb
lds
sahf
mov
sub
push
aad
pop
fwait
test
pop
popf
loopne
push
xorl
repz
stos
adc
rcrl
mov
out
adc
xchg
xchg
mov
negb
mov
inc
ret
or
imulb
push
cmc
scas
push
icebp
inc
mov
mov
cmp
fcmovnbe
shll
mov
out
enter
add
jne
dec
notb
cwtl
not
rorl
pop
cli
outsb
push
test
mov
jb
repnz
cmp
mov
cs
push
xchg
enter
popf
adc
popa
int
lcall
and
cltd
jno
fidivrl
cs
lahf
jno
int
mov
cmc
jno
stc
mov
in
divb
add
cmc
push
divb
bound
adc
mov
imul
mov
call
int
jne
out
stos
loopne
push
in
lods
fs
lds
sbb
push
fwait
out
cltd
mov
pop
xor
ds
je
outsb
pusha
bnd
cmp
or
sub
insb
pop
jbe
pop
loope
jmp
in
push
scas
cmp
test
nop
xor
mov
stos
es
or
jno
out
add
popf
or
lock
cmpsl
lods
scas
in
dec
repz
ja
and
shl
loopne
xchg
es
roll
jne
sarb
jno
sbb
negl
push
add
push
sbb
mov
test
loopne
nop
mov
sar
mov
ja,pn
or
xor
xchg
out
add
jnp
imul
repz
js
maxps
cmc
popf
xorl
cmp
mov
xor
scas
inc
mov
mov
and
shr
ret
inc
inc
mov
adc
adc
mov
lcall
pop
movsb
cld
dec
adc
in
popf
add
lcall
icebp
lods
sub
loope
stos
call
jle
jecxz
inc
xchg
nop
mulb
repz
pop
cli
xchg
mov
in
adc
loop
lcall
lcall
mov
fiaddl
sbb
sbb
hlt
xlat
cmpsl
sbb
mov
stos
mov
xchg
jne
sbb
repnz
call
adc
pop
testb
test
loop
xor
orb
adc
add
adc
nop
jbe
out
or
in
mov
xor
push
lods
adc
mov
das
scas
mov
daa
xchg
sahf
test
in
mov
in
imul
daa
push
int
int
hlt
adc
lds
cmp
stc
mov
arpl
arpl
out
adc
lcall
jae
out
cmp
or
jbe
xchg
cs
es
push
jo
xchg
bnd
cmpsl
arpl
aad
xchg
hlt
cltd
sub
in
in
adc
and
lahf
lock
clc
test
and
ljmp
sbb
fnsave
inc
fnstsw
pop
popf
mov
jle
push
cmpsl
push
xchg
and
mov
mov
data16
mov
rorl
sbb
nop
std
mov
mov
sti
mov
lds
nop
add
jo
stos
shlb
jle
push
pop
jg
cltd
adc
xchg
stos
jno
cmc
stos
adc
ja
dec
xchg
idivb
mov
idivl
test
not
or
outsb
adc
mov
stc
cmpsl
xchg
cltd
cmc
lds
xlat
mov
jp
mov
sub
testb
int3
lcall
loope
xor
xchg
or
lret
sub
or
dec
mull
mov
mov
pusha
clc
push
jmp
imul
fs
xchg
push
xor
jge
test
clc
movsb
negl
imul
aad
xchg
outsb
ljmp
sub
mov
leave
mov
insl
fcompl
cmpsb
mov
dec
in
mov
jg
in
sbb
repz
mov
mov
mov
xor
enter
clc
push
xchg
popa
subb
dec
mov
repnz
pop
xor
mov
jge
in
adc
add
ret
jl
jno
cli
push
sub
std
das
cmp
jge
xchg
lret
rcrl
mov
xchg
loope
je
adc
xchg
sub
jecxz
out
push
sbb
rcll
ficomps
sbb
xchg
mov
addl
jbe
xor
and
lods
loope
imul
pop
mov
int3
pop
stos
mov
into
ja
pop
xorl
sub
test
and
dec
sbb
mov
repnz
fdivl
or
xor
dec
lods
xor
mov
jle
pop
push
mov
xchg
cmp
stos
mov
lcall
jno
mov
jmp
sub
cli
mov
sbb
test
jle
jle
sub
jno
pusha
adc
das
out
xor
push
add
jb
adc
pop
es
push
adc
push
outsb
call
mov
push
jp
popf
mov
mov
mov
or
xchg
rcrb
cmc
fisubl
jmp
or
sbb
ret
sti
lea
into
loop
sbb
mov
xorb
lret
sub
inc
data16
adc
mov
pop
cmp
push
xchg
dec
daa
test
outsl
push
std
lods
insb
mov
dec
sbb
cmp
xor
idiv
movsl
pop
mov
mov
sarb
and
xchg
test
sbb
sub
jecxz
lds
add
addr16
sbb
sbb
fisubrl
cltd
xchg
sarl
cltd
stc
movl
push
daa
lcall
into
call
mov
test
mov
pop
mov
push
out
jno
sub
xchg
outsb
fisttpll
xor
test
fnstsw
xchg
test
mov
jbe
sahf
outsl
sub
nop
icebp
aaa
mov
loope
cmpsl
in
sbb
fsubs
push
xor
mov
inc
xlat
xlat
xchg
mov
adc
lods
mov
subb
jnp
test
or
jae
cwtl
imul
add
cs
jecxz
cmc
imul
xor
push
adc
dec
notb
dec
icebp
mov
xchg
fidivrs
xor
xchg
pop
jl
pop
in
or
xor
int3
popf
cmp
add
pmuludq
in
mov
int
sbb
add
loop
cmp
shrl
sbb
and
add
xchg
sarl
bound
push
jb
out
sti
orb
mov
outsb
cmpsb
jne
mov
test
xchg
out
popf
dec
cltd
test
pop
sarl
nop
xchg
loope
pop
jge
jno
pop
add
mov
add
inc
mov
adc
popa
cmpsl
repnz
jle
sbbl
test
rcll
test
leave
ret
out
xor
dec
insb
pop
out
mov
pop
mov
push
pop
gs
leave
and
push
popf
lcall
ficoms
mov
mov
stc
mov
insl
movsb
mov
cmpsb
in
sub
incb
mov
js
shl
cmp
push
out
cwtl
push
mov
dec
mov
dec
jbe
or
mov
gs
sbb
cltd
xor
mov
imull
or
sbb
or
int3
and
sbb
push
cmpsl
mov
add
push
sbb
jb
loope
mov
call
mov
sub
outsb
test
jmp
scas
cmp
mov
imul
mov
jno
xor
mov
outsb
pop
imul
addr16
push
into
call
sub
sub
add
mov
ss
mov
notb
jae
and
ret
enter
stos
or
xchg
xchg
jle
mov
rorl
mov
xchg
sbb
loopne
daa
loope
add
enter
rclb
and
bound
adcl
out
xchg
scas
das
mov
add
stos
outsl
adc
ss
icebp
sbb
roll
cli
iret
in
ss
paddq
jp
pop
loope
and
mov
jle
cs
or
add
add
mov
jns
mov
ja
rcrb
push
pop
pop
clc
ret
loope
bound
aas
xchg
cltd
ljmp
leave
cmp
mov
leave
mov
push
and
mov
in
dec
add
mov
ljmp
xor
pop
fnsave
jo
push
imul
mov
mov
inc
adc
incl
js
bts
pop
mov
jmp
ret
xchg
xchg
fwait
roll
push
add
sbb
in
cs
jecxz
out
jo
or
out
int
or
sti
test
sub
jle
or
jno
mov
inc
dec
mov
mov
fcmovnb
pusha
shl
adc
rcll
cmp
inc
jecxz
pop
mov
nop
mov
add
jmp
lret
int
insl
push
in
pop
and
ds
mov
dec
pop
out
insl
inc
adc
das
mov
mov
fisttps
test
data16
jmp
cmc
call
and
add
roll
jb
jmp
cs
add
popf
aad
mov
pop
add
add
lret
cwtl
sub
xor
pop
sbb
push
loopne
iret
push
and
push
shll
jo
jg
in
push
mov
bound
into
mov
leave
sbb
push
sarl
adc
insl
iret
sbb
push
gs
fisubrl
push
sahf
push
test
shll
pop
push
insl
push
mov
out
pusha
fmul
addr16
add
xor
or
jae
in
sar
test
push
sbb
pop
mov
add
jne
fstps
jno
xor
aam
jb
lahf
xlat
sbb
lret
cs
mov
cmpsb
or
popf
int
aam
ret
imul
in
mov
stc
pop
push
outsl
lods
xchg
push
jp
mov
cwtl
push
add
xchg
and
push
orl
loope
inc
cs
fwait
mov
or
jo
repz
sahf
mov
cmc
sbb
loope
out
sbb
push
call
out
xlat
sti
imul
and
imul
and
pop
sbb
dec
imul
add
dec
dec
repnz
jno
sbb
or
cmp
ret
sahf
jae
add
cs
lea
test
aaa
mov
daa
nop
push
xchg
sub
mov
push
lcall
mov
les
xchg
add
pop
jae
cli
jp
cli
xorb
nop
jmp
or
jmp
ss
popf
jnp
mov
inc
clc
add
shl
out
aaa
fcmove
lahf
jmp
out
mov
lds
ret
mov
xchg
xchg
xlat
fidivs
repnz
cmp
sub
lret
add
in
push
jmp
or
add
adc
ja
sub
mov
testl
cs
ret
stos
imul
mov
push
adc
sub
push
hlt
ds
dec
shr
xchg
movsl
mov
xor
mov
nop
js
and
dec
sbb
out
and
dec
xchg
pushf
xchg
repz
lock
cmp
inc
sub
adc
jnp
scas
jl
cmp
loopne
incb
cwtl
cltd
or
mov
in
mov
int3
lea
aad
scas
push
xchg
pop
jae
xchg
push
mov
lahf
jge
and
adc
xchg
cs
in
mov
cmpsb
movsb
mov
fnsave
mov
cli
jmp
data16
push
movsb
pop
cltd
ss
cs
cs
sbb
add
pop
inc
mov
repz
stos
aad
ret
push
mov
jne,pn
repz
lods
add
mov
icebp
mov
mov
adc
popa
dec
mov
jecxz
xchg
mov
mov
add
stos
in
xorb
cmovno
or
scas
add
movb
pop
jne
push
sbb
test
fdivl
out
xchg
add
adc
pop
jp
repnz
pop
stc
xor
pop
loope
inc
shr
dec
sti
mov
mov
xchg
pop
lret
mov
idiv
or
and
mov
jecxz
inc
add
mov
movsb
lret
mov
xchg
test
push
jno
adc
es
inc
fcomi
lods
push
out
xorb
loope
mov
bound
cmc
or
or
cmp
pop
lcall
sti
andl
call
jecxz
pop
and
ds
sar
cwtl
lds
negb
push
mov
sub
ficoms
mov
pop
cmp
les
jp
adc
mov
fwait
lea
stc
in
leave
jnp
sbb
cmpsl
and
cli
test
cltd
push
in
add
push
ret
mov
sub
cmp
sahf
int3
fdivrl
inc
sub
ja
loope,pn
push
ret
cmp
inc
lcall
pop
xor
and
mov
imul
inc
mov
sbb
aas
pop
in
add
mov
ja
push
movsb
dec
sub
push
mov
or
pop
ret
ja
add
add
push
add
shll
lock
and
fdivp
jbe
sbb
pop
nop
sbb
adc
aad
mov
stc
fdiv
jnp
div
pop
lock
xchg
cmp
sahf
std
aam
cmpsb
std
sti
stos
ja
insl
cli
push
lcall
cmp
sbb
xchg
ret
movsl
shlb
add
dec
sahf
add
imul
out
mov
mov
movsl
sbb
jp
bnd
sbb
add
ja
sbbl
jae
jae
jl
es
xchg
mov
push
jbe
lds
sar
ss
out
cli
cmp
cmc
mov
bound
out
orl
dec
push
in
xchg
push
pop
daa
insb
xchg
push
push
int
jns
insl
fldenv
dec
enter
fistpll
pop
sub
add
cmpsl
add
movsl
aaa
push
mov
or
imul
aad
out
imul
mov
stos
enter
outsl
mov
dec
or
xor
adc
mov
dec
scas
fsts
jmp
in
idiv
testl
dec
xchg
imul
jo
dec
es
out
mov
sub
jo
adc
jp
mov
mov
inc
mov
lea
adc
sub
leave
cli
xchg
je
mov
jns
loopne
pop
lret
mov
cmp
sub
push
addr16
xchg
cs
xchg
nop
jno
cmpsl
mov
aaa
cmp
adc
out
sahf
cmc
es
xor
fwait
dec
pop
adc
push
sti
nop
cmpsb
dec
xor
ljmp
stc
hlt
dec
fcoml
iret
cmc
mov
loopne
dec
mov
fcmovnb
cmpsb
jae
cmp
enter
popf
xor
mov
repz
inc
rcr
incl
mov
xchg
xor
es
movsl
leave
test
or
into
adc
mov
test
punpckhdq
loope
das
ret
or
cwtl
push
and
pop
or
or
lods
xchg
mov
lods
or
cmp
xchg
test
push
inc
mov
stc
shll
test
and
rol
out
push
sti
mov
jbe
scas
cwtl
fsub
push
mov
scas
and
pop
outsl
mov
pop
rolb
lock
shll
mov
in
rcrl
scas
ss
mov
adc
jb
shll
push
push
fildll
iret
push
pop
testl
or
add
lret
push
stc
cmp
popa
stc
cld
cmc
sub
or
std
int3
mov
push
mov
pop
or
jl
xchg
cmpsl
jge
not
repnz
push
jb
sbb
cwtl
xchg
cs
insl
add
dec
jns
jge
xchg
lcall
aas
daa
xchg
dec
xorb
mov
jbe
rclb
ljmp
cmc
add
cmpsl
stos
or
cmp
ljmp
sti
adc
imul
pop
adc
fcompl
std
lds
test
nop
lret
out
add
jl
test
aad
dec
int3
xchg
js
mov
adc
adc
loope
sbb
mov
jmp
iret
xchg
mov
rolb
adc
push
iret
out
cmp
jo
add
cmpsb
add
push
shll
scas
push
into
call
ret
inc
push
sbb
test
sbb
xchg
lret
or
das
imul
dec
or
xor
movsl
inc
adc
out
jl
cwtl
fwait
out
loope
xchg
xor
cmp
mov
les
or
pop
or
pushf
icebp
jp
dec
ror
movsb
sub
cli
xchg
cmp
mull
add
sub
shll
pushf
sub
fistl
push
fwait
cli
inc
gs
push
dec
insb
jg
insl
add
cltd
mov
popf
movsb
cwtl
out
lahf
cmp
in
mov
cmp
mov
mov
push
mov
test
gs
mov
xchg
xor
cmp
in
and
pop
dec
push
imul
scas
adc
xlat
push
xor
fdivs
lcall
roll
cs
xchg
pop
adc
jno
cmc
test
cltd
push
pop
lods
divb
cwtl
adcl
pop
stc
pop
xor
sub
imul
adc
sbb
les
push
sub
sbb
pop
jb
insb
sbbl
test
fimull
stc
popf
imulb
or
scas
hlt
sahf
xchg
xor
add
inc
arpl
cmpsl
js
mov
lds
xchg
inc
sbb
push
xchg
mov
lock
xchg
test
xchg
insb
adc
mov
roll
rolb
and
and
test
ja
push
outsl
dec
push
test
fidivs
test
ret
cmp
pop
pop
add
mov
and
or
push
stc
cltd
and
loopne
cmc
fstps
sarb
mov
out
das
cwtl
cs
popf
mov
lds
loope
ja
scas
jp
ds
test
fidivl
inc
inc
shll
and
loope
sub
dec
stc
inc
sub
das
jbe
out
push
or
add
dec
loop
leave
scas
dec
ss
xchg
lret
aad
subb
mov
int
mov
xlat
mov
int
dec
sbb
pop
jge
xchg
fistpll
rcrl
ret
mov
dec
or
sbb
mov
enter
pop
xchg
movsl
fldl
sub
adc
jnp
fisttpl
sbb
ss
add
mov
or
vpmovmskb
out
add
outsl
pop
pop
lds
arpl
stos
mov
xor
mov
movb
stos
shrl
rclb
fcoml
mov
xchg
xchg
jo
cltd
jg
negb
mov
in
movsl
mov
jae
mov
lret
add
stc
dec
jge
push
push
push
sarl
dec
xor
dec
loop
jnp
outsl
addr16
dec
sub
in
aas
and
clc
mov
sub
lods
pop
cmp
mov
fcoml
xchg
orb
sub
in
inc
daa
xchg
sbb
fxch
push
cmpsb
into
sbb
pop
push
out
sarb
xchg
fwait
lret
pop
jns
imul
jno
fimull
xchg
push
mov
test
enter
or
sbb
or
pop
mov
bswap
jecxz
mov
loop
out
in
lea
stos
sub
mov
adc
out
mov
sbb
jmp
push
pop
pushf
xor
mov
loopne
mov
les
lock
ljmp
pop
insl
jb
cmp
inc
int3
imul
lahf
sub
aas
lods
div
mov
push
ret
mov
push
jno
pop
sti
jmp
cld
xor
fadds
mov
push
push
cmp
inc
xchg
mov
ret
outsb
fs
push
jg
scas
popa
popf
pop
mov
pop
jns
and
mov
pop
mov
lock
cltd
ret
outsb
fldt
sahf
in
sbb
call
in
mov
stos
fnstcw
inc
enter
jp
rorl
notb
insl
hlt
mov
push
cmp
or
inc
xchg
stos
push
jnp
add
jo
pop
leave
ret
fnsave
inc
xchg
idivb
mov
mov
call
insl
into
mov
movsl
out
mov
repnz
jnp
sar
dec
lds
pop
xchg
adc
mov
inc
dec
movsl
jno
cmp
int
repnz
scas
jmp
out
jp
cmp
pop
jle
fidivrs
inc
pop
leave
mov
imul
xchg
push
popa
call
add
mov
call
jmp
popf
jecxz
or
movsb
scas
fwait
pop
fndisi(8087
pop
clc
aad
push
mov
ret
sub
lahf
inc
adc
xchg
mov
xchg
gs
cltd
mov
sub
mov
push
adc
cmp
xchg
in
out
ficomps
pop
cwtl
popf
pop
lea
xor
fwait
push
test
scas
jnp
cmp
mov
xchg
call
or
lret
mov
adc
xchg
cmp
lret
je
pop
iret
mov
mov
ds
cli
shll
jmp
cmpsb
adcb
lret
lret
jnp
xchg
and
mov
xorl
and
mov
cs
leave
mov
pop
push
jge
and
popf
aas
int3
add
ret
ficompl
xchg
push
cmp
mov
es
fisubs
xchg
xor
jnp
movsl
mov
gs
inc
dec
inc
sbb
sti
mull
cltd
mov
mov
ja
out
cs
inc
mov
fsubrp
jne
mov
shrb
mov
out
daa
inc
pop
inc
push
cmp
int
fcmovnbe
adc
mov
cmp
mov
cli
dec
lcall
movsl
ljmp
andl
push
push
cld
cld
or
fcmovb
int
lret
adcb
mov
xchg
jp
jns
and
jl
fbld
and
mov
lods
pop
jg
addr16
or
mov
add
xchg
sbb
jae
int3
xchg
sub
mov
xor
ja
loope
pop
lods
push
in
popf
adc
inc
hlt
sbb
xor
fnsave
push
cmpsb
mov
mov
xchg
in
call
cmp
cmc
in
loop
je
out
and
adc
clc
push
gs
mov
jp
lcall
pushf
and
inc
pop
cmp
imul
idivb
hlt
lods
inc
xchg
repnz
ljmp
loope
sbb
mov
call
iret
jne
ret
call
cmp
rcll
cwtl
cmc
ret
mov
adc
mov
cmp
rorb
insl
jecxz,pn
aas
mov
mov
mov
jnp
mov
cwtl
fnstsw
push
jmp
gs
and
mov
aad
cmpsl
mov
xor
ret
dec
push
int3
cmp
xchg
popf
out
out
adc
dec
and
fwait
cmp
shll
arpl
sub
repz
stos
mov
inc
pop
loopne
or
mov
enter
cltd
inc
mov
fstl
mov
lds
xor
in
int
mov
push
jae
into
pusha
jle
js
loope
xor
mov
mov
jae
or
push
out
repz
stos
push
out
sbb
ds
mul
data16
out
sbb
mov
ljmp
call
and
or
imul
ss
testl
andb
add
pop
push
and
pusha
test
mov
jle
rclb
mov
nop
cld
xchg
ss
cmpsb
cmp
into
addr16
pop
xor
in
fldcw
sub
fadd
in
push
cld
les
leave
movsl
sbb
out
int
mov
mov
xlat
mov
pop
sub
cli
enter
js
jo
hlt
mov
dec
xor
sti
push
mov
ja
scas
mov
pop
decl
int
push
mov
jno
pop
lret
aad
xor
xor
xchg
add
cld
iret
pop
shll
jmp
mov
test
mov
xchg
mov
sbb
cmc
or
sahf
pop
push
adc
in
xchg
test
test
and
mov
in
icebp
andl
push
data16
lcall
xor
mov
cmp
mov
xchg
sarb
ret
in
mov
lock
push
into
jb
fstps
xor
sub
mov
mov
andl
mov
insl
out
cli
mov
out
sub
int
xchg
mov
in
mulb
mov
inc
pop
xchg
lock
or
fildll
out
divb
adc
mov
test
scas
scas
sbb
ds
jne
push
add
xor
jg
xchg
ret
xchg
mov
mov
mov
add
aaa
rorb
mov
mov
and
push
add
push
int
stc
repz
cmpsl
add
sar
or
std
outsl
jl
jge
aaa
mov
or
pop
movsl
lock
or
mov
pop
stos
idiv
cmp
and
sub
mov
mov
gs
mov
jmp
push
and
xor
xor
xchg
ss
iret
movsb
mov
sbb
cmp
xchg
jmp
sbb
or
lods
mov
xchg
mov
insl
pusha
pop
xchg
push
in
cmp
xchg
mov
daa
adc
dec
dec
cmp
xchg
inc
mov
repnz
insb
adc
add
fdivs
jge
test
mov
popf
iret
pop
xor
xchg
rclb
aad
add
lods
inc
idivb
mov
xchg
mov
sti
ror
mov
cmp
adc
mov
into
jnp
sbb
mov
test
pop
cltd
shr
ret
push
insl
fists
dec
mov
mov
sbb
push
jne
out
sbb
ret
add
sbb
dec
jb
cmp
and
or
xor
push
push
cmpsl
mov
mov
adc
cmp
les
bound
or
fs
pop
adc
dec
sbb
push
mov
mov
pop
dec
push
and
jle
movsb
mov
adc
push
push
and
subl
jle
gs
xor
and
and
push
mov
mov
push
sbb
add
xchg
fcomps
lret
mov
dec
and
jmp
mov
push
mov
out
pop
invd
clc
test
dec
xlat
fdiv
movsl
repnz
inc
in
out
divps
arpl
inc
dec
mov
jecxz
sbb
loopne
pop
inc
test
ss
adc
mov
add
mov
test
add
pop
ret
ja
xchg
iret
jmp
aam
mov
pop
or
addr16
stos
int
iret
pop
out
adc
mov
popf
mov
ja
xchg
clc
ret
in
imulb
lret
fcomps
aaa
leave
cmp
and
mov
ja
push
adc
jae
int3
in
repz
add
les
xchg
jmp
xor
ret
inc
insb
leave
ret
cmp
dec
cltd
lds
mov
lea
scas
fwait
test
pop
or
push
push
mov
adc
mov
aam
adc
jae
xor
lods
mov
cmp
sahf
or
mov
arpl
int
retw
cmp
mov
jne
pop
scas
push
or
fsubl
pop
dec
sub
lock
or
inc
aas
popf
adc
cld
fchs
dec
aam
pop
dec
test
mov
in
lock
js
fsub
mov
fnstenv
test
fistps
jbe
stos
lea
jne
xor
stc
insl
xor
popf
in
push
xor
leave
leave
adc
jl
push
and
hlt
insl
out
scas
add
fs
cli
daa
lcall
dec
mov
out
dec
jmp
repz
mov
xchg
stc
push
ljmp
mov
out
jmp
stc
and
adc
mov
dec
scas
decb
sub
stos
cmp
jb
rcl
sub
xchg
fistps
lcall
idiv
les
loope
sbb
push
fwait
cmpsl
jle
fstpt
pop
mov
shll
and
pusha
imul
sub
jmp
outsl
adc
cmpsl
mov
icebp
push
push
sbb
dec
xchg
xchg
jnp
sbb
sbb
push
push
jno
mov
stc
push
mov
sbb
and
fsubrp
icebp
dec
adc
inc
or
xchg
ds
xor
xor
ljmp
adcl
les
xchg
adc
and
ds
cs
lcall
add
or
leave
jnp
lock
mov
dec
dec
push
pushf
push
jecxz
adc
not
scas
mov
cmpb
cmp
jl
cli
cmpsb
adc
fimull
ds
sub
cmp
cltd
fisttps
nop
in
mov
push
mov
mov
repz
lahf
mov
mov
jo
outsb
sahf
fcomip
call
dec
push
repnz
lret
outsb
fadds
sub
xchg
daa
pusha
daa
mov
orl
notb
xor
jo
push
xlat
mov
movsl
cwtl
mov
ret
fstl
aas
arpl
jp
div
adc
out
sub
xchg
mov
movsl
dec
sbb
shll
mov
sbb
push
les
das
pushl
mov
pop
cltd
mov
sahf
out
ss
add
shrl
inc
icebp
xor
xchg
insl
mov
cltd
dec
stos
mov
ret
xlat
hlt
sti
mov
sub
push
xchg
or
add
mulb
aam
rcrb
xchg
lret
jo
jmp
mov
ror
mov
fucomp
cltd
mov
push
outsl
fdivrl
sbbb
jl
cmp
mov
in
fucomi
scas
icebp
adc
imul
mov
aam
xchg
mov
icebp
xchg
cmpsl
dec
mov
pop
mov
bound
sub
mov
sub
fadd
mov
push
hlt
sahf
sbb
sarb
sub
iret
daa
and
push
xchg
subl
jp
je
mov
icebp
fistpl
das
or
ja
adc
cltd
jg
push
pop
cmp
adc
jmp
data16
mov
imulb
fsubrs
add
int
push
jbe
mov
cwtl
psubsw
xor
push
lret
fwait
cltd
xchg
shll
mov
adc
inc
cltd
pop
xchg
insb
xlat
div
aad
jge
lods
ss
push
add
cmpsl
adc
nop
pop
sub
test
push
addl
shl
push
xor
pop
jns
pushf
aas
ficoms
xor
cmp
cmp
lods
stos
leave
xchg
cli
xor
mov
cmpsb
neg
cld
aas
xchg
aaa
pop
mov
mov
dec
xchg
in
xchg
enter
test
mov
push
xchg
mov
int3
jnp
inc
leave
outsb
cmp
nop
mov
or
cmpsb
inc
dec
sub
cmp
nop
xchg
adc
adc
inc
imul
mov
mov
xlat
or
push
insl
std
push
and
fidivs
mov
mov
lahf
aaa
ret
cli
loop
cmpsb
scas
inc
loop
add
and
push
sbb
stos
insb
ror
loopne
dec
jle
xchg
outsb
adc
imulb
dec
cmpsl
aas
cmpl
enter
or
adcb
out
xchg
inc
jle
icebp
cli
xor
mov
insb
push
mov
adc
inc
cs
mov
outsb
cmp
push
rcrl
aas
lea
stc
int
scas
push
mov
clc
and
cld
aad
cmp
jecxz
shrb
lea
sub
int3
push
bound
out
pop
adc
call
seto
cmp
aam
or
aam
and
cwtl
iret
dec
sub
mov
stos
lret
les
pop
test
adc
mov
icebp
xor
int
xchg
mov
mov
ret
ficomps
jle
cld
movsb
xor
scas
fs
cwtl
sbb
aam
repz
loopne
lret
loop
sahf
jmp
mov
aas
mov
pop
shll
mov
std
shl
jo
ret
xor
leave
std
movsl
outsl
jo
mov
shlb
xchg
xor
pop
ret
pop
mov
pop
ljmp
aas
sub
add
mov
cmc
scas
stc
lcall
je
mov
sbb
mov
addr16
stos
cltd
loopne
xchg
and
fimull
mov
mov
pop
add
aaa
gs
cmp
cmp
sub
sub
or
flds
fdivr
jl
cli
rclb
push
cs
push
jae
aaa
fcmovnbe
sti
outsb
mov
out
mov
aas
jmp
cmp
lds
aas
mov
mov
insl
push
icebp
push
jns
pop
push
mov
insb
push
pusha
cmpsl
and
stc
or
sbb
jns
cmp
push
insb
mov
mov
in
fsts
lret
xchg
xor
jmp
jecxz
mov
jb
mov
dec
mov
xor
cmpl
cs
cli
cmp
add
add
push
aaa
cmp
or
mov
xchg
in
pop
scas
lret
dec
out
cmp
or
or
add
xchg
in
add
ss
add
lret
aam
mov
aam
lret
or
xor
rorb
into
aam
lock
mov
ja
ss
xchg
cs
insl
fdivrs
cli
push
lock
rorl
dec
pop
sub
cli
mov
xchg
inc
sbb
jecxz
sbb
xor
test
jp
std
decb
jmp
cmc
lock
mov
inc
sbb
fsts
in
dec
cmp
cwtl
sub
lea
pushf
loop
push
adc
mov
les
mov
sbb
loop
sub
data16
lea
in
mov
out
inc
cmpsb
cli
call
in
xchg
lret
fisttpll
and
pusha
ret
mov
repnz
inc
mov
jnp
xchg
fcoms
nop
sti
push
pop
xchg
mov
daa
cltd
mov
sub
adc
negl
mov
sbb
xor
sub
xchg
xchg
sbb
or
fs
sbb
mov
out
or
inc
pop
cmova
pop
in
nop
adc
mov
hlt
xor
insl
bound
mov
inc
ljmp
js
add
mov
mov
out
insl
mov
out
ja
dec
daa
ljmp
xchg
push
loop
data16
aam
in
mov
sarl
or
push
pop
cmp
js
xchg
mov
bt
or
fidivs
or
out
fs
ficoms
jo
adc
and
cmp
jmp
je
xchg
xor
test
popf
shl
push
mov
or
aas
mov
cmp
xchg
jp
mov
add
std
imul
into
nop
jecxz
adc
pop
aaa
mov
fisttps
jecxz
ror
mov
dec
fisttpll
adc
mov
mov
test
testb
enter
in
mov
xchg
and
insl
adc
enter
push
add
push
adc
mov
repz
fs
jl
movsb
jecxz
cmp
insl
test
stos
xor
out
cli
adc
or
aam
fucomi
dec
jno
stc
jb
sub
cld
mul
jmp
inc
fmull
scas
pop
roll
xor
hlt
push
movsb
xchg
in
aaa
ret
ret
shl
mov
xlat
test
icebp
ja
push
add
xor
pop
inc
pop
xchg
icebp
cmp
fsubrl
js
xchg
loopne
mov
fwait
push
das
ret
mov
pop
and
call
daa
in
xor
mov
cmc
into
roll
xchg
addr16
rolb
inc
lret
adc
pop
pop
popf
addb
xchg
and
mov
mov
shrb
and
xchg
or
mov
insl
ret
add
ss
hlt
add
lds
xchg
mov
outsb
roll
in
inc
in
les
out
or
xorb
les
jb
pop
mov
cmpsb
lret
jo
test
push
add
jns
int3
jge
sbb
jle
outsb
or
inc
mov
outsl
mov
leave
sub
pop
jne
fwait
in
push
call
jne
cli
nop
repnz
add
dec
out
adc
jno
in
pop
test
aas
imul
dec
adc
dec
fidivl
xchg
jg
push
cli
xor
mov
repz
xchg
stos
mov
sbb
push
cmpsl
es
in
push
in
push
add
push
push
jno
fsubp
mov
sub
loopne
mov
inc
fadds
cmp
push
cmp
and
push
mov
cmpsl
or
ret
stos
mov
rorb
add
cmc
rcrl
fsubrl
cmp
jmp
mov
mov
and
stos
call
jg
jb
add
xchg
lock
je
push
iret
mov
shlb
cld
ds
cmp
xchg
xor
pop
lods
mov
shlb
sub
lods
nop
stc
add
loopne
jmp
adc
dec
testb
or
sub
push
out
ficoml
pop
push
pop
mov
loope
cmp
jnp
jmp
mov
jo
pop
xor
ret
popf
int
ss
adc
ret
mov
test
inc
push
jmp
jnp
pop
stc
jle
lret
je
sarl
mov
mov
fcomi
push
leave
jmp
adcl
lcall
daa
jne
das
das
lods
fdivrp
jp
adc
xchg
mov
pop
pop
xor
das
xorb
lret
add
ds
mov
fsubl
cmpsb
mov
addr16
xchg
les
call
push
pop
lret
scas
sahf
int
test
lea
lcall
mov
mov
clc
cs
add
mov
ret
mov
xchg
xchg
sub
dec
ss
and
fisubrl
add
mov
out
popf
out
xchg
movl
mov
jl
push
popf
call
sub
adc
aaa
push
sub
sbb
ret
out
std
pushf
repnz
jl
lcall
iret
xor
add
sub
dec
push
sub
push
mov
andl
inc
push
pop
hlt
push
xchg
movsl
ja
stos
sub
xchg
icebp
and
icebp
dec
cs
fwait
int
mov
into
mov
lcall
aas
testl
mov
fcompl
mov
xorl
icebp
xchg
inc
cli
push
andl
out
mov
scas
in
adc
or
or
jnp
icebp
and
es
adc
ja
mov
fdivrl
xchg
hlt
into
mov
push
fistpll
or
bnd
and
lds
xchg
cmp
and
paddsw
inc
mov
cld
insl
add
clc
xchg
std
insb
fcmovu
jmp
mov
scas
hlt
insl
loopne
fbld
ror
ret
mov
stos
sahf
sbb
outsw
jle
xchg
dec
jp
inc
inc
cmpsl
lods
pop
cmp
sub
pop
and
dec
fidivrl
dec
ret
test
push
mov
add
adc
jmp
jno
stc
dec
mov
sbb
test
xchg
aam
sarl
aas
ljmp
shlb
fsub
push
pop
mov
fbstp
xor
push
idivb
popf
adc
inc
clc
mov
xchg
xorb
cmp
ds
inc
mov
enter
cld
xchg
rcrl
or
test
dec
movsb
popa
jl
mov
test
cld
in
or
adc
insl
fsubrl
lret
mov
js
gs
scas
loopne
and
lods
fnstenv
pop
xchg
cld
sar
dec
push
test
mov
je
std
test
je
cmp
lcall
mov
popa
neg
out
repz
aas
add
mov
daa
repz
test
jno
mov
test
dec
hlt
add
test
jg
fs
incl
daa
cmp
ss
lret
jno
push
or
fsubl
data16
and
lds
add
dec
dec
mov
push
mov
out
adc
test
out
mov
lods
cmp
ds
and
into
jnp
int3
cmp
test
mov
pop
xchg
ss
cli
cmp
xor
jne
jbe
ljmp
cwtl
lea
fisubrs
popf
dec
push
mov
or
cmpsl
pop
out
xor
das
jecxz
repz
repnz
lods
cwtl
testl
xchg
cmp
dec
pop
repz
cli
stc
mov
add
pop
mov
rcrl
fxch
push
sbb
jbe
dec
or
inc
cmc
imul
std
mov
pop
fidivl
inc
stos
outsb
xchg
int
cmp
sarl
dec
subl
push
add
insl
and
std
mov
xchg
in
repnz
mov
movsl
decl
clc
jmp
outsb
mov
and
repnz
jae
scas
cmpsb
jae
mov
lds
xchg
lahf
lcall
negb
cmp
cmp
sbb
repnz
fwait
aas
lock
movsl
mov
lods
lods
out
cs
clc
jp
jb
pop
jns
xor
jge
push
cmp
push
bnd
pop
bnd
icebp
push
sub
nop
cltd
xchg
lods
sub
add
add
aad
lea
sarl
out
nop
xchg
mov
sbb
fstpl
mov
fdivs
mov
fmuls
cmp
addr16
loop
cmp
inc
cmp
push
andl
and
cmp
add
or
lock
sbb
loope
scas
sub
int
rorb
into
cld
lea
test
jl
cmp
dec
add
mov
cmp
push
or
sub
adcl
jle
faddp
rclb
pop
mov
cltd
fsubrl
jns
mov
rol
loope
std
xchg
or
cwtl
call
sbb
add
push
jb
jne
outsl
out
sar
xchg
cmc
push
xlat
xchg
sbb
mov
lcall
push
inc
inc
mov
mov
insl
repz
mov
mov
sbb
cmp
mov
pushf
sbb
movsb
aad
int
add
inc
std
pop
lods
xchg
jl
sbb
ret
and
stos
xchg
test
adcl
mov
mov
lret
adc
outsb
and
adcl
scas
jmp
repnz
push
sbbl
add
xchg
jmp
test
dec
push
cltd
mov
outsb
out
jno
aas
stos
mov
ljmp
cwtl
adc
testb
in
inc
sub
jmp
scas
mov
lods
loop
push
xor
icebp
jo
push
dec
mov
fcmovnb
clc
mov
mov
mov
push
mov
wrmsr
mov
lock
call
inc
daa
or
dec
add
cltd
stos
cwtl
inc
fldln2
mov
pop
fistpll
clc
pusha
add
popf
lods
rorb
xlat
into
xchg
icebp
inc
pop
mov
cld
sub
test
or
addps
lret
aaa
in
cmp
test
cmp
mov
shll
cvtps2pi
mov
cltd
pushl
dec
cmp
clc
loope
jb
add
mov
adc
das
mov
cmp
mov
jle
push
dec
or
and
dec
xchg
pop
jle
sarl
jecxz
add
xchg
daa
inc
sub
xchg
jmp
mov
cmp
outsb
push
mov
mov
ja
les
mov
nop
add
mov
and
lret
mull
inc
inc
rorl
mov
jno
mov
cmpsb
lods
js
out
data16
xchg
push
ja
jmp
pushl
mull
loop
push
std
jo
and
out
test
loop
repz
inc
in
into
stos
rclb
xchg
nop
xchg
mov
enter
inc
sti
sbb
out
mov
pop
scas
mov
sbb
cmp
cli
daa
clc
sbb
fwait
stos
scas
js
cmovs
or
xchg
outsl
xor
int
xchg
or
bnd
aam
mov
loope
jecxz
mov
repz
push
mov
xor
stc
add
and
mov
pop
add
outsb
mov
cld
fnstsw
pop
scas
cs
xchg
mov
in
inc
mov
movl
xchg
mov
cltd
insl
daa
out
dec
sbb
mov
mov
xchg
jle
data16
mov
imull
xlat
cld
inc
ljmp
in
lock
out
jle
test
std
inc
xchg
or
jb
gs
jnp
call
sbb
imul
test
fsubrp
out
shlb
xchg
jg
incl
or
mov
cmp
jae
jbe
mov
js
cmpsl
les
jmp
call
inc
xchg
imul
push
stos
sub
scas
or
jnp
jns
push
test
adc
ret
jecxz
adc
adc
lods
bound
fisttpll
leave
outsl
or
jmp
fcomi
sbb
hlt
mov
call
insl
in
inc
jbe
dec
cwtl
jbe
divb
fidivl
push
mov
lcall
xchg
out
ljmp
std
lahf
jo
int3
sbb
mov
push
push
inc
imul
popa
ljmp
sub
stos
xchg
test
mov
popa
mov
push
insl
xchg
cmpsb
sub
cmpsl
mov
sub
jnp
and
ja
jle
xor
lds
or
jmp
push
cli
push
clc
sbb
add
cmpsl
jns
dec
lret
mov
jp
and
add
dec
inc
lcall
jmp
and
or
and
inc
and
std
xorb
and
imul
and
adc
jo
lcall
mov
inc
lods
add
arpl
daa
lahf
mov
in
jnp
xchg
jno
jno
das
test
pop
arpl
and
cli
adc
mov
jecxz
ljmp
stos
push
mov
repnz
xchg
xchg
icebp
out
mov
sub
mov
pop
add
cmp
rcrb
repz
xor
in
xor
xchg
loope
jne
jmp
adc
loope
push
ret
mov
jg
push
pushf
scas
pushf
test
mov
sbb
rcl
dec
stc
inc
dec
imul
in
mov
lcall
cmpsb
cmc
lcall
clc
sbb
jne
movb
call
cmp
pop
mov
sbb
in
rorb
pop
cmpsl
lret
xchg
cli
sbb
mov
nop
mov
pop
or
fdivs
xlat
pop
stc
rol
insl
pop
cmp
jb
ror
mov
ret
hlt
mov
stos
movsl
mov
mov
inc
xor
inc
xor
or
mov
or
or
cmp
test
mov
cwtl
aas
inc
in
jno
std
aas
mov
xor
fidivs
inc
sub
rcll
inc
sar
lods
cwtl
scas
std
cld
pop
addl
loopne
mov
sub
mov
jecxz
mov
pop
aam
pop
mov
xchg
js
cwtl
popl
pushf
mov
rcrl
pop
cmc
xchg
adc
arpl
bound
mov
leave
aam
test
pop
cmpsb
rcr
xlat
sahf
aam
add
sti
in
rcll
jnp
mov
inc
and
pop
fbstp
jbe
bound
rcll
leave
cwtl
push
mov
jnp
push
fistpll
mov
lods
add
jb
push
mov
mov
lret
jb
cmpsl
and
xchg
mov
lds
mov
inc
and
add
mov
or
mov
in
adc
aaa
adc
lock
mov
fisttps
repz
cld
das
xchg
cmp
sub
mov
mov
ret
mov
xor
scas
mov
mov
lods
aam
mov
jp
xlat
inc
mov
stc
push
icebp
jge
scas
xchg
sbb
cltd
add
push
cmp
andl
aas
add
lds
jp
jl
mov
in
in
and
add
xor
dec
stc
add
cld
shrl
jbe
jge
rorl
cmc
nopl
sub
lret
push
ja
mov
or
pop
scas
push
lret
sbb
loope
and
jo
or
imul
jno
push
gs
cmpl
jbe
leave
movsl
adc
imulb
lods
test
xor
lret
sti
mov
fs
jecxz
lret
mov
in
sbb
lock
stos
cli
add
cli
rolb
xchg
lret
shrl
mov
fidivl
sub
nop
mov
jbe
xor
mov
inc
in
outsl
mov
fsubrl
mov
mov
repz
subl
ror
xchg
lea
or
adc
cmp
cmovp
mov
roll
enter
mov
js
dec
push
pushl
add
add
js
cmpsb
xchg
sub
xchg
loope
jmp
mov
out
mov
sbb
in
into
pop
sub
cmpl
mov
lea
scas
jbe
in
outsb
mov
jl
in
ror
jle
adc
insb
or
mov
repnz
addr16
outsl
roll
mov
lcall
xorb
popf
jecxz
and
jge
xor
jno
dec
sbb
adc
dec
mov
aam
ret
notb
dec
sahf
xchg
inc
mov
jb
les
xor
outsl
sbb
popa
sahf
into
pop
jnp
push
mov
jecxz
inc
or
inc
mov
or
xor
nop
mov
and
repnz
loopne
push
jecxz
mov
mov
addr16
lea
pusha
dec
jg
cmp
rcr
sahf
movsb
and
jno
rcll
cmp
inc
dec
out
and
or
out
test
cli
adc
mov
dec
ret
les
negb
mov
in
in
sbb
lock
push
pop
scas
or
in
sbb
mov
inc
or
mov
in
xor
add
outsl
mov
mov
rorl
hlt
push
xchg
aaa
dec
mov
cmp
cbtw
cmovl
mov
add
test
mov
xor
xchg
sbb
lret
outsl
movsb
mov
js
cmovne
xchg
ret
add
stc
lods
movsl
repnz
imul
mov
syscall
sbb
cli
outsb
mov
jmp
push
jecxz
jno
dec
cli
xchg
adc
pop
test
in
dec
jnp
pop
jle
cmp
iret
add
and
shll
mov
popa
roll
xchg
outsl
call
mov
push
mov
sub
cmp
adc
jbe
add
cli
add
das
pusha
mov
lock
sahf
lcall
lods
dec
addb
std
mov
out
mov
add
std
aam
dec
data16
sub
ret
fidivl
fcompl
inc
sbb
adc
cmp
push
repz
ja
jb
jbe
xor
jnp
test
mov
sub
mov
and
repz
adc
repnz
icebp
out
push
cli
out
lcall
dec
pop
das
out
int3
and
mov
les
ror
inc
lahf
ss
ss
stos
cmp
dec
xor
jno
imul
adcl
lds
dec
xor
jnp
mov
push
je
pop
inc
add
mov
mov
xlat
mov
push
arpl
mov
or
sub
clc
fisubl
jp
sub
cmp
dec
pop
out
fwait
out
aaa
imul
add
mov
scas
out
fbld
pop
add
pop
xchg
adc
or
int
movsb
add
mov
cmpsl
lds
nop
shl
scas
push
sti
mov
adc
xchg
mov
dec
add
pop
jecxz
mov
mov
jp
jne
mov
std
aas
adc
out
sahf
sbb
xchg
jnp
mov
mov
sub
je
shrb
lock
aad
mov
fildll
and
ljmp
mov
fnstsw
xchg
je
sbb
les
sahf
cmpsb
pop
and
and
popa
jmp
fstpt
add
xor
call
push
lods
xchg
mov
xor
lods
repz
ret
mov
mov
mov
mov
mov
add
mov
pushf
ret
movsb
movsl
cmp
cmp
repnz
jg
mov
int3
pop
test
out
push
or
dec
movsl
cmc
push
loopne
jmp
into
cld
outsb
cmpsb
push
mov
xor
scas
sub
jl
repnz
inc
jge
call
xchg
insl
dec
xchg
adc
xchg
mov
dec
enter
add
pop
mov
iret
lret
xchg
and
test
filds
or
cmp
imul
decb
lods
sbb
mov
add
adc
sub
mov
sti
mov
xorl
pop
xchg
outsb
popf
cmp
mov
sbb
pop
mov
mov
out
inc
pop
jns
std
dec
cwtl
push
add
sbb
int
or
xor
lock
iret
insb
add
fisubs
pop
jbe
cmpsl
pop
ss
or
sub
mov
cmp
cs
js
inc
cltd
jl
gs
cmc
test
roll
das
mov
mov
ljmp
iret
jmp
jo
fwait
pop
test
pop
clc
add
dec
iret
sbb
push
insb
inc
or
das
pop
jmp
ds
cltd
jmp
lcall
xor
stos
leave
movsl
inc
mov
loope
outsl
stos
lds
jno
or
add
fildll
pop
jmp
enter
outsb
sbb
sub
dec
shrb
pop
iret
jo
xor
iret
and
cwtl
das
stos
nop
mov
sbb
pop
mov
lods
dec
or
cmp
jg
mov
cli
mov
int3
sbb
push
mov
inc
lahf
scas
xchg
not
inc
shlb
rolb
sahf
mov
add
jge
dec
sub
inc
movsb
ficomps
enter
fisubs
add
out
rol
frstor
not
ljmp
jno
mov
inc
lods
jno
mov
xchg
out
imul
nop
lcall
and
add
cwtl
stos
xchg
push
lahf
sbb
mov
xchg
jno
push
andl
fs
aam
lahf
inc
stc
cmp
in
cltd
into
and
out
pop
dec
push
iret
out
push
jle
rclb
pop
mov
std
leave
jmp
mov
cmp
xchg
test
xchg
int
inc
fldt
cmp
out
dec
lods
cmc
mov
cmc
jg
mov
sahf
push
in
pop
lea
adc
ret
dec
mov
pop
int
jnp
pop
fidivs
scas
mov
out
mov
sbb
mov
or
sbb
fdivl
push
adc
xchg
pop
sti
jnp
gs
scas
adc
outsl
xchg
cmpsl
add
adc
je
imul
mov
das
in
in
stos
jmp
idiv
pop
movswl
repnz
lea
and
push
pop
int
xchg
mov
cmp
mov
add
lahf
pop
xchg
jg
sar
std
pop
test
jno
ljmp
push
insl
xlat
scas
sti
in
add
jb
out
or
mov
cs
or
mov
inc
push
jno
inc
pop
mov
sub
sar
cltd
dec
xor
sti
pop
jbe
sti
mov
mov
repnz
lcall
add
cmpl
jns
rcrl
dec
test
sub
or
push
mov
push
data16
sbb
mov
addl
jecxz
mov
sbb
mov
cwtl
aam
add
xchg
sbb
in
push
test
and
dec
repnz
incb
xchg
sub
mov
rclb
adc
mov
mov
jg
mov
adc
add
stc
mov
cltd
adc
movsb
xchg
or
pushf
cmp
hlt
mov
hlt
lcall
cwtl
inc
shll
pop
imul
inc
int
mov
and
icebp
sbb
xor
pop
push
iret
xor
adc
aad
adc
cld
test
mov
lods
pop
hlt
insl
test
pause
outsl
out
addr16
xchg
fcoms
xchg
xchg
jae
adcl
insl
adc
mov
pop
imul
mov
cmpsl
mov
imul
stos
sbb
cmp
loope
lahf
test
fistl
add
mov
jge
ficoms
sahf
cwtl
xor
stc
clc
push
testl
lds
xor
xor
inc
test
jge
sub
mov
outsb
jnp
or
push
call
lods
dec
das
mov
shl
jp
call
mov
js
lods
das
pop
pop
ror
shll
into
mov
movsl
inc
add
cmc
push
and
or
insl
mov
int
or
mov
jg
aaa
fsub
pusha
in
inc
inc
aas
lcall
dec
mov
jne
les
adc
xchg
jg
push
out
adc
popf
inc
ds
pusha
lcall
mov
adc
cld
orl
lock
sub
push
cmp
pop
cli
rcr
adc
enter
lcall
xchg
scas
div
or
add
sbb
pushf
xor
cmp
add
cld
mov
aaa
mov
or
lahf
lods
bound
xchg
fdivr
inc
sbb
ljmp
iret
push
aam
jmp
repz
sbb
mov
push
in
lea
sbb
cli
imul
push
imull
and
into
mov
cmp
call
xor
dec
scas
sub
dec
cmp
fwait
adc
xor
jmp
sub
ds
mov
xor
out
sub
xchg
pop
xrelease
mov
or
int
cmpl
ret
add
mov
add
cmp
out
stc
lret
mov
clc
inc
jge
dec
daa
mov
jae
aam
in
in
test
push
xchg
imul
pop
adc
out
pop
or
lea
mov
cwtl
mov
adc
repz
dec
mov
in
data16
push
sub
ficoml
sbb
mov
mov
cmpsl
inc
testb
addb
ret
jle
push
mov
je
loop
daa
xor
xor
jle
adc
push
std
notb
scas
icebp
mov
dec
sub
imul
imul
lret
pop
pop
push
ja
hlt
outsl
pop
xor
imull
mov
repz
mov
jge
mov
imulb
adc
mov
testl
out
sub
sub
roll
mov
xorl
xchg
mov
test
push
shll
add
adc
adc
ret
pop
add
ja
sbb
lods
cld
inc
test
andl
push
sbb
scas
mov
lret
push
xor
mov
mov
ljmp
rcrl
xor
adc
mov
and
jl
lret
loopne
xor
mov
mov
add
sub
xlat
pmaxub
xchg
push
leave
fiadds
fisttpll
push
xchg
scas
xchg
mov
pop
sti
jecxz
and
repnz
adc
sub
dec
mov
pop
adc
xchg
mov
xor
sahf
pop
mov
pushf
or
bound
pusha
sub
js
stos
rclb
cwtl
mov
cli
sub
cltd
jno
scas
inc
cmp
mov
mov
stos
enter
fcompl
nop
sub
adc
mov
mov
and
push
xchg
jge
mov
scas
stos
jb
les
add
shl
jg
fstpt
cltd
mov
imul
pop
jg
xchg
iret
shl
adc
push
adc
insl
or
xor
cli
shlb
mov
sbb
mov
fnstsw
or
jge
js
lret
or
lahf
xor
add
pop
mov
cltd
xchg
inc
dec
push
rolb
call
clc
xor
cwtl
stc
ret
mov
pop
xor
fwait
repnz
inc
xor
fwait
ret
aas
lods
mov
fwait
rclb
mov
pop
xchg
add
lods
xor
cs
les
add
jmp
daa
into
daa
and
mov
clc
sub
jne
out
imul
cmpl
lods
addb
inc
iret
nop
insl
in
fists
jae
push
int
out
adc
mov
sti
subb
popf
pusha
sub
mov
lods
lcall
stc
or
jno
aad
adc
sbb
fiadds
push
sbb
std
cmp
outsb
push
jnp
xlat
inc
pop
icebp
push
imul
mov
xchg
dec
bnd
fadd
lea
push
hlt
dec
ljmp
mov
jg
xor
pushf
xchg
fidivl
cwtl
arpl
xor
push
clc
jb
xchg
push
dec
insl
dec
push
jbe
scas
ret
jae
rcrl
adc
loop
cmp
outsb
dec
jecxz
out
into
test
mov
mov
into
or
rol
mov
lds
and
enter
pop
xor
rep
xlat
popa
cmpsb
xchg
cmpsb
fwait
inc
shll
in
ljmp
enter
or
jl
stos
xchg
cli
mov
add
data16
or
js
mov
mov
mov
cli
cmp
inc
mov
mov
in
push
adcb
or
fildl
jmp
sub
icebp
ret
sub
loope
test
les
jmp
daa
lea
mov
fiadds
push
int3
imul
pop
lret
mov
test
imul
xor
xchg
pop
jne
out
push
rorb
mov
mov
mov
sub
and
mov
jne
imulb
mov
bnd
cltd
and
mov
hlt
mov
cli
sbb
fstps
pop
mov
sti
jge
call
das
inc
mov
js
cmovp
jns
pusha
mov
addr16
fst
iret
mov
jae
call
insl
mov
xchg
sbb
jl
scas
fidivrl
movsb
inc
pop
ret
cmpsl
mov
adc
push
popf
mov
jg
loopne
jo
jmp
mov
pop
and
sbb
mov
bnd
xor
mov
gs
popf
mov
and
shl
cs
mov
loopne
cmpsb
cmc
test
jl
mov
xchg
cmp
mov
or
adc
push
mov
iret
mov
cmp
pop
jge
rcll
pushf
lods
shl
test
mov
adc
jae
push
popa
test
cmp
mov
scas
push
mov
ss
cmp
enter
xchg
jmp
mov
divl
pushf
aas
js
push
ds
cmpsl
mov
shll
sbb
adc
test
sub
jp
cwtl
scas
jmp
push
popaw
les
rcrl
ds
mov
mov
hlt
jg
mov
fwait
sub
lret
fisubs
jle
xchg
push
push
sbb
cli
mov
cmpsb
and
enter
dec
ja
push
mov
imulb
sbb
mov
dec
xor
cmp
jns
mov
sub
fsubs
jnp
and
xchg
leave
sti
test
call
fsubrp
aad
and
cli
mov
cwtl
gs
or
pop
dec
push
movsl
mov
mov
mov
loopne
pop
sahf
jbe
jae
xchg
out
scas
in
subl
jbe
inc
mov
jl
mov
push
adc
sti
or
fmuls
shlb
shrl
push
call
or
and
cmc
adc
add
sub
test
hlt
bound
inc
jle
xchg
jle
xchg
std
mov
cmc
mov
stc
or
push
out
adc
mov
daa
call
sbb
xchg
push
in
ja
mov
xchg
jp
stos
pop
mov
lock
lods
cmp
ret
fstl
or
sbbl
mov
inc
dec
adc
fsubrs
add
mov
mov
and
iret
mov
sbb
into
pusha
mov
inc
outsl
les
repnz
fdivrl
scas
mov
xchg
lock
jne
jl
test
xchg
test
jecxz
testl
stc
fistl
mov
pop
mov
test
aas
pop
sti
out
pop
add
scas
divb
mov
ret
addl
jl
hlt
jne
mov
sub
push
imul
cltd
fists
mov
push
loop
hlt
jbe
rcrl
jo
pop
add
loopne
or
rorb
mov
push
mov
dec
sbb
mov
enter
mov
push
cmc
mov
push
push
jno
es
cmpb
mov
loop
aaa
roll
js
adc
les
fcmovnb
test
push
inc
adcb
fcompl
or
sub
push
imul
sbb
adc
arpl
mov
push
mov
cmp
fcmovbe
xor
lret
cmp
scas
pop
into
mov
lods
testb
es
or
out
addb
adc
cmc
jae
pop
fwait
mov
xchg
scas
clc
mov
mov
fucom
dec
mull
sub
mov
xor
jmp
lret
mov
fldl
test
lret
stos
cmp
sbb
aaa
xchg
outsb
arpl
xor
popa
or
lds
push
inc
roll
dec
popa
or
ret
je
xrelease
jnp
xchg
leave
push
aaa
shl
stos
push
sahf
cmp
popf
fcomi
jle
mov
pop
xor
ret
or
js
mov
scas
jmp
pushf
add
sbbl
les
fbld
cmp
cmpsb
jae
std
in
xchg
rolb
subl
lret
lods
jnp
lahf
mov
rorl
neg
loope
xor
cmc
lock
push
dec
outsb
out
clc
mov
mov
shr
dec
and
les
stos
push
lcall
scas
xchg
fiadds
add
ja
in
mov
adc
adc
rorb
inc
stos
sbb
add
nop
jae
pop
scas
xor
aad
inc
and
ljmp
inc
fwait
test
adc
sbb
leave
fistpl
jo
dec
sahf
call
call
ret
push
and
notl
push
xchg
cmpsb
add
test
jg
fxch
lahf
loope
mov
cmp
mov
xor
pop
gs
addr16
scas
lock
nop
adc
pushf
xor
gs
cmpsb
mov
jecxz
adc
cmpsl
psubd
lods
cs
adc
hlt
mov
dec
mov
push
xor
lret
shll
shlb
movb
xchg
loope
jo
loopne
xor
outsb
push
subb
mov
cwtl
add
mov
add
imul
adcb
push
out
test
enter
scas
mov
pop
in
inc
xchg
pusha
cmp
sbb
cs
xorl
pop
jnp
pop
lret
sar
push
pop
xlat
sti
pop
pop
and
icebp
pop
mov
mov
jns
lcall
rcrl
ret
inc
js
push
cld
jno
push
xlat
aaa
push
andl
cltd
jmp
adcl
sbb
out
in
loope
aaa
adc
fstpl
notl
into
and
das
jb
xchg
pop
outsl
push
orl
push
lahf
das
lret
lock
outsb
add
notl
cmpl
adc
or
das
xchg
mov
aas
stos
call
into
dec
xchg
insb
add
lcall
sarb
pop
push
push
ficompl
aam
mov
repnz
pop
mov
add
add
hlt
xor
add
stos
bound
and
lods
lahf
rcll
mov
lea
add
cltd
mov
stos
mov
cli
int3
js
pop
or
data16
stos
dec
test
xchg
lds
js
fldt
shr
mov
add
scas
mov
jbe
cmpsl
cs
xor
ret
in
sahf
fistps
movsl
jl
xchg
jle
push
jbe
mov
jl
jmp
icebp
cmp
rolb
jmp
cld
aam
stos
sub
outsb
jb
dec
arpl
rol
cwtl
into
mov
push
mov
mov
bound
jno
mov
in
es
xor
inc
mul
hlt
ret
arpl
push
push
divb
jp
jnp
add
icebp
daa
outsl
cwtl
fs
pop
rol
hlt
scas
outsb
jnp
mov
scas
sbb
pusha
insl
jne
js
push
fwait
loope
call
arpl
xlat
imul
pop
or
xchg
xchg
loop
stc
cmp
out
mov
shlb
xchg
adc
mov
popf
mov
jle
std
sub
sbb
adc
cmp
addr16
shl
jge
cmpsb
stos
and
in
jno
mov
jno
movb
lods
pop
push
mov
sbb
sub
scas
mov
xchg
jno
divl
mov
or
xchg
lock
hlt
adc
fwait
xchg
adc
aad
pop
lea
sub
xchg
and
aad
test
out
loope
cmp
stc
out
mov
push
ja
adc
jecxz
sbb
ret
lods
mov
add
fs
mov
in
stc
adcb
test
jp
arpl
rcll
ljmp
insb
sbb
adc
pop
sbb
cli
xor
ror
mov
cmp
outsl
stc
fisubrs
sbb
cmpsl
in
jno
mov
into
push
xchg
mov
inc
dec
xlat
testb
push
cs
push
pop
fwait
jno
push
mov
cli
adc
mov
shll
loopne
jno
inc
scas
or
lds
pop
aas
xchg
test
les
sahf
pop
push
std
add
rolb
xlat
lods
mov
sarb
jle
repz
mov
jl
icebp
mov
mov
cmc
les
push
jnp
adc
push
push
lahf
mov
xor
sbb
mov
stos
push
cmp
sti
mov
mov
and
nop
dec
ret
sub
shll
icebp
outsb
dec
xor
inc
or
lret
loop
je
dec
shll
js
popf
cli
inc
add
nop
nop
nop
nop
nop
push
nop
nop
nop
nop
nop
push
push
nop
nop
nop
nop
nop
call
nop
nop
nop
nop
call
nop
nop
nop
call
push
nop
nop
nop
nop
call
nop
nop
nop
sub
nop
nop
nop
lea
nop
push
nop
nop
nop
push
nop
nop
nop
nop
nop
push
nop
nop
nop
push
nop
nop
nop
push
nop
nop
nop
nop
call
nop
nop
nop
nop
add
nop
nop
nop
mov
mov
nop
nop
shr
nop
nop
jmp
nop
nop
nop
lods
nop
nop
nop
nop
add
nop
nop
nop
nop
nop
xor
nop
nop
mov
nop
nop
nop
nop
dec
je
nop
nop
nop
jmp
nop
nop
nop
nop
pop
nop
nop
nop
nop
nop
pop
nop
nop
nop
pop
nop
jmp
