push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
push
mov
push
subl
push
subl
mov
inc
mov
call
sub
mov
pop
mov
mov
lea
mov
mov
mov
xor
sbb
sbb
lea
xor
cmp
je
sub
sub
or
sbb
add
mov
pushl
sub
sub
pop
bswap
jmp
xor
mov
nop
call
sub
ret
add
and
fnstenv
xchg
mov
lret
push
int3
inc
fwait
pop
adc
addr16
sub
cltd
sub
and
mov
jp
nop
divl
mov
xchg
mov
scas
push
aaa
mov
scas
in
imul
sbb
xchg
xor
xor
lods
jb
add
pusha
push
mov
sub
push
pushl
pushl
push
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
add
jmp
test
into
shlb
jl
bound
int3
mov
or
xchg
mov
dec
shll
push
jbe
in
sbb
into
bound
int3
cltd
in
lret
bound
test
mov
adc
enter
cmp
popa
mov
rcll
pop
sub
or
fnsave
ja
es
sbb
push
inc
daa
loope
test
scas
orl
mov
or
sahf
dec
dec
adc
inc
in
xor
testb
cmp
pop
fstp
js
adc
stos
out
mov
inc
cmpb
js
inc
lods
sti
and
lea
mov
push
pop
rep
push
push
pop
sub
mov
shl
mov
add
add
xor
add
pop
test
je
push
sub
jl
pop
sbb
ja
jmp
pushl
ret
push
pop
loop
div
pop
fiaddl
dec
inc
mov
pop
repz
mov
out
sbb
pop
pop
ret
aas
icebp
movsb
xor
mov
cld
loopne
inc
mov
lock
push
mov
sub
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
ret
loop
addl
or
mov
or
std
add
cmp
mov
pop
or
dec
pop
aam
lods
add
pop
add
addr16
movb
lods
dec
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
and
in
inc
ret
in
je
and
jmp
adc
push
stc
into
adc
jns
fwait
cli
push
into
out
pop
pop
or
pop
pop
popf
aas
mov
add
dec
pop
imul
push
inc
push
push
pop
icebp
scas
push
js
rol
mov
sub
loop
loopne
pop
lret
pusha
and
xor
in
cmp
aaa
push
pushl
call
add
pop
sub
mov
add
ret
add
test
scas
out
or
fiadds
push
cwtl
add
dec
push
call
xor
imul
int3
outsb
in
test
jmp
jl
xchg
outsb
push
add
jg
xor
cmp
jbe
mov
push
pop
js
adc
fldpi
mov
out
cmpsb
pop
jmp
push
scas
scas
and
in
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
adc
loopne
sub
scas
dec
clc
inc
mov
push
mov
aad
aaa
mov
aas
cld
das
ret
jne
add
mov
leave
mov
jb
sti
cmp
sti
cmpsb
cs
stos
sub
das
ss
out
sub
mov
xor
dec
in
or
mov
cwtl
adc
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
mov
sub
out
test
cld
jnp
push
add
push
push
push
inc
movq
repnz
lods
dec
push
sti
push
mov
xchg
test
cld
and
mov
je
pop
sub
and
adc
ret
data16
mov
je
ficompl
mov
ret
cmp
cli
push
jge
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
les
jmp
ret
jecxz
xor
rep
ds
xor
pop
pop
outsl
or
fcomps
xchg
loopne
mov
jno
pop
lods
sub
pop
mov
push
lock
popf
sub
mulb
sbb
xchg
xchg
fdivl
mov
je
xchg
in
sarb
in
daa
stc
stos
and
mov
xchg
xchg
pop
mov
fcompl
ret
mov
cmpsl
and
add
mov
add
scas
addr16
dec
and
adc
int
lcall
mov
cmp
insb
jecxz
xchg
cmpl
adc
in
fisttpll
test
push
mov
je
xchg
mov
call
sbb
outsb
xor
jmp
xor
jne
xchg
or
loope
jmp
sbb
jmp
or
mov
dec
mov
out
stc
dec
mov
insl
imul
pushf
inc
or
int3
push
nop
lock
mov
adcl
in
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
jb
jb
inc
scas
jno
inc
add
adc
adc
xchg
in
out
dec
fldcw
aam
je
inc
xchg
push
fdivl
xor
pop
sub
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
jnp
adc
and
fs
jno
out
or
divl
push
nop
mov
push
or
bound
lcall
and
sbb
pop
jmp
mov
add
dec
leave
lea
adc
xchg
mov
and
cli
repnz
test
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
push
push
notl
sbb
mov
or
enter
icebp
stos
ja
addr16
xchg
adc
add
hlt
pop
cmp
int3
iret
push
mov
fs
and
mov
push
ret
aaa
loop
pop
and
inc
sbb
icebp
pop
pop
test
xorb
cs
popa
and
push
ret
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
test
mov
pop
xor
sub
call
shrb
adc
loope
test
inc
movl
lahf
cld
or
jle
inc
es
leave
jmpw
ljmp
das
icebp
fucomip
mov
xor
xorl
add
divb
or
in
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
add
scas
sbb
aas
jl
js
in
push
xchg
add
clc
dec
lds
mov
mov
cli
push
jge
sbb
fstpl
and
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
push
repz
mov
cmp
cmp
inc
test
or
push
and
mov
mov
xchg
popl
push
movb
xor
pushf
data16
jbe
int
inc
sbb
icebp
push
xchg
fadds
pop
xor
mov
cld
xchg
bound
rorb
push
mov
sub
push
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
cmc
adc
sbb
and
loopne
cwtl
dec
fucom
jg
pop
imul
mov
mov
sbb
rcll
out
xor
arpl
movsb
jae
inc
adc
stc
xchg
sar
incb
xor
shl
stos
dec
sub
test
mov
sub
in
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
push
mov
sub
push
pushl
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
pusha
mov
pop
xor
int3
bound
pop
and
xchg
ret
cld
dec
and
lmsw
push
adc
inc
adc
xchg
push
pop
xchg
scas
or
pop
jp
popl
enter
lahf
add
cmpsb
loopne
cmc
sbb
mov
imul
cmp
aam
mov
jge
dec
push
mov
dec
lcall
xchg
ss
loop
and
inc
push
mov
pushf
stc
mov
pop
xor
sub
loope
cmp
fdivl
and
sub
jb
loope
mov
cwtl
add
fstl
into
xchg
imul
and
mov
mov
pushf
mov
es
push
iret
lea
pop
jno
int3
or
sbb
lcall
jl
icebp
hlt
inc
add
bound
cld
popa
mov
pop
cmp
jae
push
les
rorl
inc
scas
popaw
inc
inc
xchg
daa
dec
mov
fsubs
mov
test
rcll
ds
js
loop
jg
mov
sub
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
add
in
sub
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
add
dec
das
pop
push
push
push
pop
in
rorl
inc
dec
inc
jbe
mov
xor
mov
sbb
cltd
std
cmp
in
repnz
sbb
aad
sti
outsl
sub
pop
pop
clc
ret
lock
hlt
xchg
push
cs
or
or
sahf
xor
add
sub
pop
mov
or
fs
and
movsl
adc
adc
and
jno
push
in
ds
xchg
sbb
stos
pop
push
pop
in
insl
sub
or
out
pop
bound
push
lock
rclb
mov
lcall
cmp
push
popa
dec
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
rcrl
aad
mov
gs
and
fistpl
data16
test
xor
int
sub
sar
mov
or
mov
pop
outsb
frstor
dec
xchg
notb
and
pop
push
rol
xor
movsb
std
push
and
push
pop
es
adc
pop
jnp
and
frstor
hlt
arpl
mov
mov
in
test
or
xchg
adc
ret
pop
or
pop
jle
movntps
inc
push
fmull
xor
push
dec
mov
sbb
mov
dec
jge
sbb
aaa
mov
enter
push
flds
cli
es
out
out
dec
sbb
jbe
or
or
pop
mov
push
xorb
mov
cwtl
shrb
mov
cwtl
pop
xor
mov
pop
sub
push
cwtl
inc
mov
mov
inc
mov
jne
into
cmpb
mov
or
push
cmp
dec
mov
cli
xlat
gs
sub
imul
fistpl
and
pop
xchg
xorl
xor
movsb
int
mov
scas
mov
pop
cmpsb
mov
ret
inc
mov
aaa
push
idiv
mov
lods
movsl
scas
push
jg
mov
or
cmp
adc
call
mov
xor
jle
adc
mov
shlb
adc
in
mov
adc
outsb
push
push
sti
lahf
pop
pusha
ljmp
out
repz
incb
add
push
add
in
jae
js
inc
xchg
subl
push
ljmp
add
mov
and
stos
xor
lret
jne
adc
push
ja
xchg
inc
jmp
jg
xchg
add
bound
sbb
sbb
testb
mov
or
adc
push
roll
inc
stc
xchg
mov
push
test
add
inc
mov
out
test
xor
out
test
jg
gs
adc
lods
mov
loop
sub
popa
fidivl
stc
dec
push
stos
or
lods
pop
jle
lret
cmp
iret
mov
sub
out
sahf
lret
and
lea
stos
cli
pop
movsb
stc
incb
push
mov
mov
incb
mov
rorb
cmpsl
dec
jno
pop
pop
testb
sbb
sub
divb
and
lret
fldl
sbbb
test
out
data16
icebp
xchg
fisubl
mov
call
inc
in
push
loop
or
out
dec
cmpsb
mov
pop
mov
jl
inc
in
mov
enter
lcall
shl
nop
jno
push
sarl
inc
adc
and
sbb
ljmp
cmp
pop
lea
pop
sarl
pop
sbb
imul
jnp
jb
xchg
xor
push
jge
inc
cmpl
mov
and
frstor
out
jbe
loope
pop
icebp
ss
jecxz
nop
cmpsb
jg
out
sbb
mov
je
pop
call
jnp
cmp
popa
test
inc
icebp
inc
sub
dec
mov
test
push
out
stos
sbb
xchg
imul
loope
imul
lock
gs
scas
fldcw
adc
popf
arpl
or
repz
out
aam
and
xor
fxch
repz
int3
movsl
pop
inc
out
inc
test
pop
outsl
rolb
ja
nop
jno
jo
loope
dec
sahf
sbb
jl
repnz
in
mov
inc
cmp
push
xchg
cmp
daa
das
inc
mov
inc
cmp
sub
shl
pop
mov
pop
cmpsl
mov
nop
ljmp
js
adc
xchg
and
push
mov
jg
out
sbb
out
mov
inc
and
mov
int3
sbb
es
cmpsl
mov
pop
mov
out
push
cmp
fisttps
pop
push
pop
popf
add
out
clc
push
lret
cmpsb
addr16
jb
int3
lea
cmp
in
jb
pop
jno,pt
roll
dec
push
ds
call
inc
add
dec
mov
fnsave
mov
setb
divb
cmpsb
out
fisubrs
xor
into
jecxz
pusha
push
cmp
mov
outsl
fdivl
ja
into
aaa
mov
jo
iret
mov
imul
cmp
fdivs
xchg
out
insb
sbb
stos
pop
insb
inc
pop
daa
and
push
push
jmp
testb
adc
sub
mov
fistpl
sub
out
adc
faddl
cmp
mov
popa
enter
sub
fcompl
arpl
add
xchg
pusha
mov
shll
pushf
sahf
rcll
and
in
dec
fnstsw
cmpsl
ja
push
pop
mov
add
popa
cmpsb
int
imul
pushf
nop
notb
cli
push
cmc
pusha
push
inc
push
mov
jmp
sahf
mov
cltd
cmp
mov
scas
ja
sbb
mov
push
cld
pop
mov
or
push
lock
imul
pop
gs
adc
scas
into
lcall
roll
pop
add
add
cmc
movsb
mov
in
inc
mov
in
inc
test
dec
xor
aad
inc
stc
add
jnp
out
add
das
rclb
mov
push
cs
cwtl
sub
push
inc
xchg
or
fbld
lret
xchg
loop
dec
sub
add
out
rcll
imul
cmp
mov
mov
xchg
into
mov
push
rorb
fdivrs
mov
les
into
ss
cmp
in
mov
sbb
mov
ret
add
push
push
fldenv
cmp
inc
imul
jns
std
ds
mov
mov
jecxz
repnz
pop
inc
mov
and
xchg
pop
or
mov
xchg
sbb
mov
pop
jg
pop
push
fdiv
inc
daa
push
test
insb
mov
push
mov
push
mov
ja
add
js
incb
js
cld
add
push
adc
add
lods
pop
test
jb
dec
mov
test
mov
dec
cmpsl
inc
subl
xchg
xlat
shr
cmp
push
