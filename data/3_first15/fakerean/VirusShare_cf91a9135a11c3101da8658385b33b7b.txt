sbb
add
adc
xor
imul
test
cmp
fsubrl
cwtl
cmp
fistl
pop
mov
es
shll
imul
inc
push
mov
cltd
aad
xor
mov
sub
push
mov
iret
rcr
cmp
repz
push
int3
aaa
pusha
movsb
dec
in
in
cmpsb
cltd
jle
scas
pop
inc
xchg
out
ds
add
dec
xor
dec
andb
pushf
mov
push
rcr
cmp
jae
out
xchg
pop
mov
fisubrl
inc
cli
rcr
pop
dec
xchg
std
push
imul
push
idiv
fildl
out
ret
arpl
sub
data16
stos
adc
inc
fnstenv
test
jmp
xchg
fs
bound
test
addr16
xchg
mov
int3
loopne
mov
and
ret
scas
fdivp
inc
std
test
and
or
push
mov
cmpsl
clc
mov
popa
rcl
jns
test
stc
out
jmp
dec
mov
add
and
loop
bound
dec
rolb
sub
xchg
pop
xor
xor
divl
in
popw
daa
add
imul
dec
mov
adc
fimull
sub
cli
cmpsb
fs
dec
pop
mov
mov
sub
and
popf
jb
mov
pusha
cmp
fistps
movhps
inc
pop
push
cs
ljmp
dec
int3
jp
lret
mov
das
mov
mov
and
push
bound
cmp
sar
sub
add
dec
das
outsb
xorb
movsb
testl
out
sub
and
dec
sbb
mov
adc
and
pusha
es
in
repnz
les
in
or
fdivrs
push
xor
cmp
or
or
fisttpll
imul
filds
out
fdivr
pop
subl
mov
out
in
nop
jle
mov
xchg
pop
xchg
pusha
lea
dec
cmpsb
sub
lcall
mov
sub
leave
inc
push
ret
into
ja
rorl
push
addr16
push
cmp
data16
fmulp
dec
mov
cli
adc
push
jg
test
inc
and
dec
push
mov
adc
loope
mov
loope
xor
rolb
sub
shll
mov
push
aam
in
test
sbb
push
call
or
cmp
jbe
fiadds
pop
mov
fldenv
jo
xlat
aaa
pop
mov
lret
rorl
mov
outsl
cltd
aaa
inc
dec
dec
int
adc
push
stc
dec
jl
inc
leave
pop
enter
push
push
or
int3
cli
and
xor
outsl
cmp
dec
xchg
ss
iret
cmp
out
xchg
pusha
fisubl
movsl
ficoml
push
js
mov
loope
jle
jnp
stc
add
inc
mov
in
imul
aas
cmp
mov
pop
pop
adc
jle
sub
shrl
daa
in
xchg
sbb
push
sub
pop
push
mov
dec
mov
push
and
inc
inc
lds
xchg
pop
pop
std
fwait
loop
sbb
frstor
push
in
in
scas
ja
mov
or
ljmp
movsl
ret
push
cld
lea
mov
add
inc
sbb
lds
xchg
test
pop
enter
sub
mov
test
jecxz
test
sub
and
pop
data16
imul
xchg
das
aam
test
clc
out
adc
pop
dec
nop
loop
hlt
lock
push
mov
dec
sti
inc
enter
orb
pop
test
push
pop
rcrb
xor
cmp
scas
jno
pop
fildl
xchg
adc
add
cld
adc
sub
or
pop
mov
xor
xchg
xor
and
sbb
mov
jnp
or
and
js
dec
inc
jg
xchg
push
or
mov
cld
mov
das
stos
leave
mov
inc
cmc
test
test
sbb
mov
cmp
scas
mov
and
add
mov
xor
int
and
dec
sbb
jge
lock
das
sub
je
inc
jmp
cld
sti
add
pop
fwait
inc
cmp
dec
data16
fdivrs
cmp
or
nop
leave
add
in
push
repnz
ds
inc
cs
add
clc
xchg
int3
and
and
stos
mov
int
lahf
out
push
movsl
xchg
shlb
xorl
enter
sbb
daa
or
xchg
insb
out
and
pop
or
pop
sti
push
jmp
loop
fldcw
and
repz
clc
sbb
repz
and
and
ret
adc
icebp
add
lods
adc
mov
pop
push
jmp
cmpsl
int
lret
and
mov
dec
ret
jnp
fwait
gs
fnstenv
mov
dec
push
push
insl
rcrl
shlb
push
pop
push
scas
sti
movsb
nop
filds
sub
cmpsl
mov
inc
clc
fidivrl
mov
mov
dec
sub
jnp
xchg
and
sbb
mov
stos
sahf
test
popf
xor
push
jbe
dec
lret
rcll
add
pop
mov
lock
mov
add
loopne
jl
inc
cmp
pop
xor
cwtl
repnz
mov
push
jno
inc
adc
mov
lahf
cwtl
push
daa
lret
add
push
cmc
jno
jl
pop
mov
jno
xchg
inc
fcoms
leave
jg
push
xchg
pop
pop
popa
push
adc
mov
ss
bound
lcall
jecxz
lods
aas
ljmp
mov
and
test
pop
ljmp
sbb
and
das
scas
test
imul
nop
clc
jmp
mov
inc
push
mov
or
mov
jbe
jbe
jmp
leave
mov
push
ror
pop
add
scas
stos
and
jmp
lds
dec
stos
dec
jp
stos
jg
jne
xchg
loopne
outsl
push
sbb
xchg
enter
loope
pop
ret
pop
lea
mov
fimuls
inc
add
outsb
pop
sbb
push
jns
cmp
push
or
adc
lcall
mov
div
in
loop
push
fs
xchg
ret
mov
jbe
add
lock
int
jb
xor
jmp
mov
lret
addr16
pushf
lcall
jle
das
fadds
inc
repnz
movsl
dec
out
daa
sub
sub
fcmovu
xlat
pop
outsb
push
mov
and
repnz
inc
nop
outsb
inc
test
adc
push
adc
int3
inc
fsubs
dec
or
int
pop
ja
or
push
jle
test
out
jge
jl
jnp
sbb
push
movsl
add
shll
adcl
mov
bnd
and
inc
repz
sbb
into
imul
adc
jns
adc
lret
popa
dec
inc
test
mov
dec
rclb
and
and
xor
icebp
ret
cs
clc
sti
xor
aam
repz
cmpb
xor
ss
cmp
add
sti
fdivr
mov
mov
push
xor
dec
mov
inc
sub
call
aad
lds
adc
mov
cld
mov
add
out
jae
sbb
xchg
out
mov
outsb
insb
sbb
scas
std
mov
pop
cmp
and
sahf
cmp
jg
xor
push
jecxz
push
mov
cli
aas
fnsave
out
mov
je
fisubrl
or
push
dec
push
xchg
sbb
or
push
je
add
rclb
fs
jmp
mov
jge
je
shrl
cmpsl
addl
je
fstps
out
pop
xor
push
into
cmp
xchg
push
rcl
cmp
shll
lds
pop
cmpsb
xrelease
out
shlb
movsl
add
incl
mov
insb
fisubs
clc
adc
mov
dec
mov
dec
cmpsl
cld
and
incb
lock
dec
dec
nop
ja
rolb
movsb
aam
inc
rcll
int3
pop
lret
mov
pop
ret
movsb
fcompl
jns
in
cwtl
das
ror
shlb
fidivs
or
add
xchg
pop
jmp
xchg
sbb
hlt
bound
popl
jb
mov
pop
loopne
call
pop
insb
pop
lret
cmp
in
lret
mov
and
adc
cmc
xor
push
mov
fsubrp
loopne
xchg
daa
inc
pop
jmp
sbb
jmp
rcrl
ret
push
call
inc
add
push
mov
cmp
add
cmp
outsl
xchg
add
notl
movsl
lret
mov
or
call
fcmovbe
pushl
std
inc
jno
jne
ret
cmp
cs
fisubs
xchg
je
xchg
jl
in
mov
pop
and
dec
mov
fnsave
and
lret
loop
pop
aas
xlat
shrl
xchg
xlat
mov
movsl
and
xorl
adc
stc
ds
cmpsb
and
pop
fsubl
or
subb
and
inc
add
pop
xchg
inc
mov
add
iret
cmp
mov
je
sub
or
pop
dec
aam
lods
push
jnp
inc
aam
movsb
xchg
jo
fwait
mov
out
jne
imul
sbb
xor
jl
leave
andb
and
mov
xchg
xchg
or
mov
fnsave
cltd
and
xchg
popa
dec
push
shrb
mov
out
sbb
push
fdivrp
lret
sub
mov
pop
cmpb
xchg
leave
sbb
test
outsb
jo
adc
fsubl
sbb
mov
into
out
es
fs
out
aad
push
mov
add
loopne
or
pop
or
test
mov
test
push
adc
mov
pop
dec
gs
ss
mov
mov
mov
inc
push
mov
dec
xchg
ret
insb
ret
xor
inc
jle
cmc
pop
int
or
mov
add
outsl
mov
xor
in
stos
xchg
jne
jge
cmp
add
mov
cmp
mov
push
add
mov
mov
pop
fstpl
cmpsb
pusha
sti
mov
test
faddl
fsubrs
lods
cmp
shll
test
mov
lds
movsb
and
or
insl
movsl
sub
jmp
mov
stc
into
and
fwait
das
mov
int3
lahf
test
addr16
fwait
loope
ficompl
popf
pop
ss
addb
add
or
jg
shll
loopne
inc
xor
mov
pop
js
cmp
out
daa
and
fdivp
mov
pop
dec
fisubrl
mov
fldl
cli
push
pop
adc
mov
mov
jg
jo
imul
mov
or
xchg
fidivrs
jo
sbb
mov
inc
iret
test
pop
lahf
adc
std
push
jnp
fs
shrb
divl
popf
lcall
sub
dec
dec
mov
outsb
mov
data16
adc
and
cmp
sbb
mov
pushf
xlat
fwait
sub
cmp
mov
pop
adc
rolb
addr16
enter
pop
stos
and
outsl
negl
test
adc
mov
data16
movsb
cld
pop
fsubrs
pop
fistpll
mov
push
fyl2xp1
push
stos
jp
bound
pop
test
jle
lea
inc
sub
or
xchg
es
push
shrl
xchg
xchg
mov
scas
clc
testb
cmc
aaa
mov
pushl
mov
jecxz
js
test
jg
shl
call
loop
cmpsb
in
fldl
enter
dec
sub
inc
sbb
scas
lahf
adc
and
hlt
jecxz
ja
dec
ljmp
xor
aaa
enter
fldcw
insl
inc
in
or
sub
jmp
aam
push
mov
xchg
lods
mov
mov
gs
jno
jecxz
push
lcall
xor
lret
test
outsb
addr16
push
fadds
mov
ja
inc
mov
cmc
movsl
imul
in
push
jmp
aad
in
adc
clc
aad
in
xor
jmp
jge
xchg
sbbb
mov
xor
or
scas
dec
lea
push
rcll
add
or
iret
and
sbbb
lret
xor
xchg
femms
lds
jmp
mov
adc
cmpl
daa
mov
clc
incl
mov
scas
shlb
rcll
pop
pushf
pop
cld
mov
pop
add
out
xchg
xchg
shll
adc
sub
sbb
and
out
dec
lcall
mov
aam
mov
divb
push
clc
mov
mov
mov
ret
scas
cmp
cmp
cmp
shr
stc
cmp
mov
xchg
lret
or
push
std
clc
xchg
pusha
ja
mov
mov
adc
fsub
inc
add
jb
jnp
sbb
pop
sti
int3
jge
sbb
mov
dec
sub
das
mov
mov
mov
stos
xor
and
jecxz
sub
sbb
in
xchg
jns
in
imul
nop
or
stos
std
pop
mov
imul
push
sbb
mov
sbb
mov
pop
or
addr16
fucomi
pushf
mov
push
push
dec
aam
das
aad
jg
dec
iret
push
insb
pusha
or
inc
nop
in
fwait
std
inc
das
mov
adc
mov
xchg
inc
jle
mov
xor
clc
cmp
fdivrl
jg
insl
testl
mov
cmpsb
subb
add
ja
mov
js
jp
iret
jmp
scas
notb
int
int3
adc
xchg
movl
dec
lret
shlb
les
pop
rclb
bound
mov
sti
mov
test
or
mov
jno
cmpsl
cmpsb
sarl
scas
std
mov
fidivrl
sub
mov
mov
mov
dec
movsb
push
sbb
sbb
mov
hlt
push
adc
push
lret
test
cltd
xchg
rcr
or
faddl
mov
pop
inc
and
mov
inc
sub
cmp
in
test
pop
fnstcw
inc
test
pop
jg
push
xchg
scas
dec
dec
in
test
add
push
pop
fsubr
xor
adc
cmova
cwtl
adc
imul
scas
cmp
cli
adc
mov
shl
aaa
cmpsb
jns
xchg
or
std
jecxz
iret
jp
repz
push
jae
add
mov
mov
dec
or
xor
cmp
mov
arpl
sarb
mov
loope
mov
or
jle
jp
xor
sbb
sbb
mov
stos
lock
aaa
sbb
in
rolb
push
and
dec
fdivl
ficoms
dec
movsb
clc
aad
inc
testl
mov
lahf
sbb
in
cmp
dec
jg
or
ljmp
push
scas
xchg
test
inc
inc
stos
movsb
mov
es
push
dec
cs
xchg
arpl
out
scas
adc
call
or
ss
js
fidivrs
push
cmp
repz
jnp
popf
pop
sarb
repnz
lods
into
fdiv
sub
loop
pop
into
fisttpll
cld
mull
arpl
ffree
cmp
rcrb
mov
rcl
mov
fdivrp
jne
pop
mov
add
int3
push
xchg
ret
jb
xchg
jg
pop
cmp
sbb
shl
mov
mov
lods
stc
loop
inc
rcr
call
enter
xchg
cli
xchg
fmulp
dec
pop
je
jno
push
xor
jbe
jae
outsl
add
inc
repnz
loop
loop
leave
clc
test
enter
cmp
sub
add
sbb
fwait
jecxz
mov
jge
jl
adc
mov
rorb
pushf
mov
addb
shr
idivb
cli
sub
data16
aas
out
xor
mov
and
cld
dec
mov
cmp
insl
adc
into
scas
jmp
push
inc
jo
sbb
push
or
insb
mov
adc
loop
dec
dec
pusha
test
jb
fstps
cltd
sbbl
push
sub
std
sub
addr16
insl
mov
mov
lret
mov
pushf
ret
xchg
sti
popf
jl
lret
shll
ret
clc
gs
mov
push
sub
mov
push
lcall
pop
fdivs
and
loope
mov
sbb
xor
cmp
xchg
and
jbe
fbld
pop
adc
sbb
adc
push
mov
aas
add
js
dec
ret
fdivl
gs
push
leave
mov
xchg
mov
aad
or
test
push
dec
mov
mov
movsb
or
sub
ja
cmp
cmp
fwait
and
mov
lods
jb
jnp
lcall
inc
test
imul
cmp
xlat
pushf
lea
push
inc
test
mov
test
fcomp
dec
jno
mov
cld
or
jp
insl
push
and
sarl
mov
pop
mov
das
in
dec
clc
push
sub
imul
pop
imul
sub
push
inc
jbe
into
pop
outsl
sbb
jge
inc
inc
xchg
adc
fs
dec
dec
in
addr16
sbb
mov
jmp
add
xchg
addb
daa
sbb
sbb
mov
out
adc
or
jmp
stos
imul
mov
add
mov
add
mov
jle
jp
push
cmp
aaa
rolb
sub
jno
mov
test
addr16
pushl
loope
add
xorb
inc
sub
pop
mov
dec
lahf
push
les
add
cwtl
lock
cmc
clc
mov
test
mov
mov
test
jecxz
sub
repnz
mov
test
and
jo
xor
cmp
mov
movsl
pop
mov
or
test
js
faddl
or
cmp
popf
int
into
pop
into
dec
push
adc
cmp
bound
shll
int3
cmpsl
negb
aaa
or
loop
clc
into
mov
cmp
or
inc
in
sub
mov
ja
cmpsl
std
movsl
pop
arpl
mov
pop
and
fsts
adc
and
test
fnsave
leave
and
fidivl
imul
xor
jnp
xor
cmp
mov
add
xor
pop
or
mov
cld
in
test
sbb
mov
inc
jb
fiaddl
lret
push
pop
add
stos
int3
mov
stos
aas
pop
mov
mov
push
mov
jb
jp
jne
dec
pop
xchg
cmp
mov
add
pop
imul
enter
test
outsl
insb
clc
out
shrl
dec
or
pop
sbb
mov
popa
lock
pop
xchg
xlat
insl
and
inc
mov
sub
cmp
push
sub
xchg
lea
out
cltd
sbb
ljmpw
jns
jns
cmpsb
stc
inc
aas
outsb
mov
gs
adc
cld
push
jle
pop
inc
test
mov
mov
popf
mov
xor
mov
sbb
pop
arpl
data16
repnz
pop
pop
push
hlt
fnstsw
jmp
add
ds
in
jbe
dec
mov
prefetcht1
jecxz
adc
ret
xor
jne
and
jl
fwait
push
movsl
mov
push
fwait
add
repnz
inc
inc
lret
fmuls
add
pminub
cmp
das
sahf
mov
inc
push
testb
mov
movsb
fcompl
xchg
arpl
sahf
shll
xor
pop
ss
movl
mov
xchg
test
mov
enter
sub
stos
push
fstpt
jecxz
sub
fidivrs
movsb
ret
sbb
jp
push
adc
mov
mov
iret
push
mov
or
incb
and
mov
adc
push
dec
cmp
insl
outsb
int
inc
into
dec
popf
xchg
pushf
push
stos
push
outsb
icebp
pusha
mov
repnz
divl
xor
lret
aad
xlat
pop
cmpb
mov
inc
insb
cs
int3
mov
icebp
into
lock
loope
or
inc
ret
mov
pop
or
xor
jae
repz
sub
faddl
or
sub
sub
xchg
popa
sbb
add
adc
fucompp
sbb
dec
cld
pop
loop
sub
or
outsb
mov
and
pushf
sahf
cmpsl
xlat
lret
ja
sbb
mov
rdpmc
sti
inc
inc
mov
stc
mov
int
jno
jp
pop
rorb
ret
jge
push
cld
cmpsl
lahf
xchg
rcll
pop
addr16
fidivrs
mov
cmpsb
fwait
outsl
mull
jg
test
xor
add
adc
and
push
jns
fsubs
jae
fdiv
fwait
adc
stos
div
aas
jl
ret
push
jp
cmp
les
adc
rcr
inc
cltd
sub
mov
xlat
jne
mov
outsb
ljmp
popf
push
psrld
sub
aam
std
ret
cld
pop
push
xchg
cwtl
mov
pop
insl
lret
inc
jae
stc
inc
or
sbb
shlb
add
cli
enter
leave
incb
sbb
push
jno
fxch
push
mov
ficomps
icebp
mov
scas
lahf
add
pop
fs
dec
and
xor
ret
fcmovbe
push
lods
dec
lods
sub
or
mov
addr16
jno
push
cmpsl
or
inc
mov
jg
mov
pop
std
popa
jecxz
iret
mov
xor
lock
push
add
xlat
mov
mov
dec
orb
and
lahf
jl
pop
int3
mov
jmp
les
xor
lods
mov
pushf
jp
lea
cwtl
adc
inc
in
jo
rolb
mov
icebp
and
cwtl
outsb
pop
jo
mov
fistl
into
lret
mov
loop
inc
ficoml
cmp
lret
je
lcall
jg
or
or
or
aad
je
roll
cmp
enter
sbb
cwtl
add
lret
jmp
lock
xchg
aad
shll
inc
std
or
pop
out
mov
xor
stc
xchg
loope
roll
test
mov
arpl
stc
lcall
push
mov
daa
jae
xchg
pop
popf
loopne
cmc
push
fisubl
and
sbb
ja
stos
pop
or
pop
jb
imul
int3
add
int
fadds
int3
jl
sbb
aaa
lods
cmpsb
test
inc
dec
mov
outsl
mov
test
push
pusha
cltd
add
pop
cli
lahf
sbb
outsl
adc
rep
faddp
sbbb
jns
js
mov
rep
rcll
daa
adc
sbb
lds
nop
fwait
mov
mov
fidivrs
sahf
lods
inc
pop
iret
outsl
icebp
test
sbb
inc
movsb
sbb
pusha
or
leave
mov
andl
popa
mov
or
jbe
scas
sbb
mov
std
or
cmp
dec
jl
or
ja
in
xor
std
sub
cmp
cmpsl
js
pop
mov
cmpsb
sub
sahf
cmp
sub
jg
mov
cli
arpl
fcoml
mov
mov
cmp
int3
dec
fwait
xchg
inc
add
iret
imulb
pop
add
stos
dec
pop
scas
fcmovnu
xchg
je
jecxz
clc
enter
ss
add
dec
shlb
jo
cltd
mov
sbb
dec
pop
orl
popf
or
les
out
or
mov
sub
data16
add
cmp
mov
sbb
enter
mov
add
fcmovu
movsb
into
rcrb
std
jp
fldenv
dec
xchg
idiv
jnp
sbb
cmc
cmp
push
decl
dec
add
dec
xchg
dec
lret
pop
in
push
xchg
nop
push
push
jbe
js
in
mov
dec
xor
loop
popf
xor
xchg
mov
xchg
or
xchg
and
sub
push
stc
adc
fwait
dec
dec
xor
xchg
fsubp
jnp
jmp
xor
xchg
fcom
dec
clc
adc
push
fsubs
ja
pop
imul
aaa
jle
xchg
clc
mov
jne
cmp
sbb
push
sarb
jb
out
ret
jb
xlat
mov
and
push
xchg
mov
arpl
scas
mov
addr16
add
and
pop
mov
mov
dec
mov
lods
dec
push
sub
pop
in
cmc
xor
dec
ja
loope
mov
push
bound
xorb
mov
sbb
push
jg
or
xlat
jbe
jb
jecxz
sbb
les
cmp
stos
scas
cmp
cmp
popf
mov
ljmp
rep
push
pop
ljmp
ret
and
dec
mov
ret
js
sub
push
xchg
dec
jnp
adc
iret
pop
pop
or
jno
inc
out
xor
mov
cmpsl
mov
dec
cmp
sarb
sbb
push
mov
mov
and
test
in
jo
cwtl
mov
dec
test
pop
hlt
push
push
out
mov
mov
lret
inc
xchg
push
adc
cltd
fisttpll
add
dec
test
pop
outsl
jbe
add
outsl
dec
mov
inc
cmp
repnz
int3
sub
pop
pusha
cli
add
sub
repnz
dec
ljmp
or
xchg
sarb
pop
das
out
xchg
repz
add
stos
sub
cs
cmpsl
xor
xchg
mov
mov
and
cmp
mov
xlat
aad
dec
stc
rorb
fs
mov
fidivl
imul
roll
push
xchg
mov
sub
xor
fists
in
add
imul
xor
pop
dec
insb
ret
test
inc
adc
div
and
shll
and
fsts
flds
in
outsb
inc
mov
lods
fnstcw
mov
fmull
adcb
addr16
jb
cltd
lds
aaa
xlat
mov
add
lods
frstor
ret
push
adc
dec
sub
arpl
nopl
ja
dec
sbb
inc
push
add
enter
and
push
xchg
mov
push
add
jno
xor
mov
push
sub
cmp
arpl
call
sbb
sub
leave
or
dec
push
lods
pop
cmp
mov
aad
xor
cli
leave
inc
and
jnp
push
adc
cmpsb
loop
cli
push
mov
sahf
sbb
loopne
lahf
cmpb
sbb
cmp
stos
daa
cwtl
fwait
mov
dec
cmp
pop
and
rorl
stos
cmp
pop
outsl
xor
mov
xor
mov
mov
and
dec
adc
aam
ret
sbb
stos
data16
add
pusha
int
jo
fdiv
cwtl
jg
divb
mov
xor
lcall
iret
lock
pop
push
pop
stc
pushf
xor
repnz
lods
adc
aas
cmp
adc
adc
pop
fptan
negl
push
push
ljmp
cmc
add
hlt
sub
mov
adc
jl
mov
call
add
xchg
or
dec
xor
cmc
add
xor
or
mov
daa
lret
or
ja
adc
pop
mov
sub
test
cmpl
sbbl
sub
or
jns
lret
fiadds
mov
fsubp
fwait
mov
repnz
xor
sahf
mov
repz
outsb
inc
movsb
add
out
js
dec
sub
cwtl
add
push
push
cmpb
add
pop
daa
rol
rclb
xchg
cmp
sbb
imul
cli
add
divb
push
cli
pop
xor
arpl
out
fld
arpl
and
mov
xor
ds
mov
adc
fidivl
ror
inc
test
lret
dec
xor
les
lret
mov
sub
mov
mov
shlb
pop
cmp
xchg
cmpsl
popf
aaa
popa
cs
mov
add
and
gs
push
xor
mov
cmpsl
inc
xlat
push
dec
nop
push
test
cs
add
ret
ja
rolb
inc
adc
sub
scas
jnp
enter
jmp
adc
inc
sub
cmp
and
xor
out
ds
xor
sbb
aad
inc
mov
out
cwtl
hlt
xor
xor
cwtl
gs
loopne
shr
mov
mov
xchg
mov
ss
aad
testb
jecxz
das
mov
insl
and
pop
xchg
or
add
repnz
pop
push
sbb
push
sbb
mov
or
jns
inc
leave
data16
and
mov
bound
inc
pop
mov
mov
mov
inc
out
shlb
insl
enter
test
fdivrs
stos
xchg
mov
fcom
test
push
cmp
push
xlat
mov
js
jnp
cmc
cmc
or
lahf
mov
fldcw
int
outsl
adc
ret
push
xor
add
mov
push
jns
out
push
testb
cmp
repz
add
or
xlat
mov
xchg
shlb
test
sub
mov
incl
repnz
pop
mov
shlb
repz
aaa
das
ds
push
leave
pop
cmp
popf
jnp
push
dec
push
lock
cli
iret
in
ljmp
xchg
mov
iret
xchg
and
mov
rorb
lods
in
cmc
xor
sti
lods
jmp
xlat
mov
repz
addl
push
pop
inc
cltd
cmp
out
test
xlat
dec
out
pop
nop
clc
xor
adc
popa
xchg
xchg
sbb
cwtl
push
sub
loop
shlb
mov
cli
pop
push
mov
aaa
inc
arpl
jecxz
popa
mov
outsb
fwait
test
ret
cmp
xor
and
sbb
shlb
test
call
sbb
push
mov
mov
test
jecxz
movsl
sti
nop
adc
or
sub
mov
iret
cmp
sbb
mov
xorb
pop
loopne
mov
loop,pn
loopne
push
andl
pop
cmc
xchg
jecxz
int
inc
cli
jmp
mov
shrl
adc
aaa
jne
das
mov
aaa
bound
add
popf
fcmovnbe
negl
cmp
fimuls
xchg
arpl
sbb
push
arpl
into
stos
jno
test
mov
mov
lods
lods
sti
orl
jb
push
mov
mov
mov
adc
sub
jmp
or
mov
inc
and
fsubrs
push
dec
rorl
and
sbb
xchg
cmp
pop
test
adc
and
fnstsw
pop
cmpsb
ja
stos
popa
push
inc
cmp
push
mov
xchg
std
mov
int3
sbb
lret
add
dec
mov
loopne
popf
inc
int
inc
scas
fdiv
mov
jb
or
shll
jnp
mov
inc
lea
jg
xchg
sahf
jne
ret
mov
or
xchg
shlb
stc
pop
sbb
scas
mov
cmp
frstpm(287
dec
mov
mov
int
jne
push
cmp
mov
cmp
jns
dec
add
cmp
leave
mov
cmp
imul
push
lahf
sbb
mov
addr16
sub
cltd
pop
jmp
sbb
arpl
sub
push
adc
sti
ljmp
pushf
bound
inc
loop
sbb
fldcw
dec
arpl
jbe
dec
fidivrl
pushf
pushf
mov
jb
fdiv
cltd
aam
insb
xchg
mov
fwait
rcrb
dec
aad
inc
out
or
mov
stos
data16
rcr
mov
es
ljmp
and
stc
push
orl
xlat
mov
jp
fs
mov
ret
scas
jl
nop
lret
push
push
push
pop
sub
jmp
cld
jmp
arpl
test
adc
mov
loope
mov
mov
jmp
mov
mov
sub
cld
mulb
loope
leave
mov
repnz
dec
hlt
mov
les
push
in
push
jl
shll
push
add
pop
icebp
cmp
inc
xchg
jb
jecxz
cltd
repnz
into
cmp
inc
xor
lea
and
cs
popa
xchg
inc
fcmovnu
mov
mov
jbe
and
mov
jmp
inc
cltd
test
xchg
or
test
rcll
je
mov
dec
rcrb
sbb
inc
in
add
lock
xchg
push
cmpsb
aaa
stos
jl
mov
mov
pop
push
pop
gs
jecxz
scas
lods
ficomps
fnstcw
imull
push
xchg
adc
addr16
cmp
jecxz
mov
hlt
mov
sar
sbb
push
stos
lahf
push
xchg
in
insb
aad
out
xchg
push
fidivs
daa
int3
retw
mov
mov
stos
je
outsb
push
in
ret
jbe
add
pop
xchg
dec
or
jg
cli
jbe
into
push
add
push
push
addr16
gs
dec
dec
shl
xchg
mov
cwtl
or
test
stc
and
subl
lods
shlb
dec
rcll
ret
fs
aas
push
pop
fs
sub
add
outsl
scas
dec
aam
mov
lcall
test
xchg
inc
nop
xor
sbb
lds
out
lcall
out
addl
cmp
idivb
xchg
and
mov
addr16
inc
sahf
imul
shrl
or
xor
adc
jg
mov
inc
mov
ret
test
inc
xchg
sbbl
fsubr
dec
pop
fsubl
dec
mov
ljmp
shlb
add
mov
jno
lahf
lea
xor
faddp
or
loope
mov
xchg
adc
add
lods
data16
mov
sbb
bound
pop
in
ret
and
arpl
je
insb
aas
jae
sbb
leave
dec
push
mov
movsb
ljmp
jg
adc
orl
and
ljmp
lret
inc
movsb
mov
inc
loope
mov
jmp
stos
cmp
stos
je
mov
cmp
popa
bound
adc
pop
les
xchg
mov
jp
mov
movsl
or
sub
cmp
push
xor
fsts
movsl
jnp
data16
test
jne
ds
and
cmp
in
mov
cmp
lods
in
inc
ss
pop
mov
cmp
xchg
cmpsb
lea
into
sub
loope
xchg
xchg
movsb
jbe
test
pop
shll
jo
out
cmp
cmp
repz
fs
push
sbb
dec
jae
cld
jg
repnz
push
das
adc
push
mov
and
cld
lods
loope
arpl
outsl
jb
jno
test
gs
mov
add
out
pop
out
test
sbb
popa
mov
leave
lcall
jl
dec
cmc
insl
rcll
inc
aad
add
xor
iret
xchg
mov
lds
ret
cld
int
jno
xor
push
push
mov
add
or
xchg
lea
fistps
ja
jecxz
xor
pop
adc
sub
dec
mov
jmp
xchg
xchg
pop
cltd
mov
scas
out
adc
flds
jmp
jb
int
sbb
pop
mov
in
mov
add
cwtl
in
mov
cs
xor
movsl
xchg
mov
outsl
or
fnstenv
int
lcall
jecxz
les
call
mov
pop
cwtl
cmp
aad
inc
dec
jp
cld
inc
xchg
mov
or
mov
sbb
cs
jle
xor
icebp
lds
arpl
xlat
mov
clc
aaa
push
mov
or
js
data16
loopne
lock
movsl
mov
leave
mov
je
in
pop
vmovapd
sub
and
ljmp
or
mov
inc
xchg
xchg
jmp
pop
mov
stos
mov
mov
and
lods
mov
ret
pop
daa
dec
mov
jae
into
cmp
jbe
mov
adc
loope
mov
outsb
popa
sub
adc
out
jo
in
pushf
xor
cmpsl
and
and
sub
adc
sbb
stos
ds
jae
adcl
out
adc
mov
jp
icebp
sbb
addb
pop
test
push
nop
into
mov
popf
dec
or
xchg
gs
lea
pop
notl
adc
mov
add
les
jnp
out
orb
in
int3
aaa
pop
jecxz
xchg
addr16
aad
js
test
dec
xor
or
in
adc
fnstcw
enter
inc
xchg
adc
sbb
inc
fimuls
mov
inc
sbb
add
lods
sub
inc
mov
add
mov
pop
in
ds
mov
in
push
lcall
stos
jb
jecxz
jae
inc
addr16
mov
cmpsl
lea
mov
arpl
jno
cltd
ds
mov
in
fcomps
scas
lock
clc
mov
test
mov
test
jl
pushf
pop
lcall
repz
adc
mov
fistl
jbe
pop
and
sarb
jg
jo
rcl
add
adc
add
iret
inc
mov
jle
popf
fistps
xchg
sbb
push
and
scas
xchg
pushf
loopne
aas
mov
ffree
adc
mov
stc
jno,pn
imul
loopne
mov
xorb
ss
fstl
xor
and
inc
lock
cmpsl
test
sub
cmpsl
push
pop
or
inc
add
jns
cmpsl
xorb
push
push
xchg
jns
xor
movsb
and
xchg
pop
mov
and
cmp
jp
jge
idivb
imul
fstpt
loopne
pop
inc
idiv
test
dec
xchg
ds
arpl
popa
push
cmpsb
jmp
sbb
ret
imul
cmpsl
pop
mov
or
cltd
pop
fldl
pop
fwait
stc
dec
dec
in
insl
mov
xchg
jnp
inc
movsl
addr16
sbb
inc
inc
xchg
testb
rorl
mov
mov
sbb
xchg
sbb
mov
mov
and
data16
dec
loopne
sub
cmpsb
sub
nop
ret
pop
out
lds
test
repnz
je
or
cmc
fs
inc
and
sbb
sbb
fs
enter
lahf
dec
mov
cmp
pushf
aaa
jg
sbb
mov
scas
adc
sbb
aam
setge
andb
fcmovu
les
jbe
fldt
pop
shrb
popa
sbb
sarl
out
push
fiaddl
adc
lea
shll
inc
inc
and
std
mov
les
repz
sub
gs
movb
xchg
jge
call
addl
es
imul
sub
jbe
icebp
or
and
mov
in
and
jg
push
imul
lea
mov
std
fbstp
into
jge
xchg
stos
sbb
jb
xchg
cmc
or
sar
in
rcrb
insl
mov
ljmp
cmp
scas
cmpl
add
cmpsl
mov
jl
lock
lea
cli
std
loope
cmp
push
adc
cs
and
cmp
mov
and
inc
mov
pop
dec
push
add
jno
adc
test
pop
pop
cli
xchg
rcr
xor
cmp
mov
test
enter
xor
sbb
fsubl
adc
lahf
fsubr
push
sbb
push
sbb
pushf
sub
jnp
lahf
lret
inc
mov
out
in
jg
decb
sbb
adc
push
or
nop
inc
and
adc
lds
pop
mov
hlt
scas
pop
loope
fsts
repnz
pop
cs
cmp
jo
mov
add
mov
pop
fsubrp
lcall
repz
clc
jmp
pop
leave
bnd
fistpl
test
jbe
cmpsl
mov
cmpsl
dec
mov
outsl
rcl
mov
xchg
jge
scas
icebp
mov
xchg
cmp
xchg
bound
xchg
mov
lods
sti
out
jo
and
sbb
push
les
outsb
in
scas
cltd
sub
xlat
push
mov
loopne
ja
loopne
xchg
fldt
inc
adc
xor
gs
sub
shlb
dec
rcr
int3
fs
das
fs
push
sahf
mov
shll
xor
stc
pusha
testl
insl
pop
mov
mov
dec
pushf
idiv
cs
and
orb
pop
clc
dec
sub
addr16
flds
lret
sub
mov
dec
into
add
imul
std
or
movsb
push
xchg
test
repnz
inc
jle
repnz
je
xor
in
xor
jl
mov
pop
mov
dec
mov
or
ret
sbb
test
mov
jne
cmp
inc
data16
mov
push
push
cwtl
push
fsub
cmp
popf
pusha
pop
aam
iret
test
push
sbb
punpckhwd
rorl
insb
in
lods
dec
fneni(8087
js
roll
in
or
xor
imul
push
xor
imul
xchg
jmp
lods
out
jmp
js
sahf
xchg
xchg
inc
jmp
ret
sti
mov
push
and
cs
and
mov
cmpsb
pushf
fsts
or
mov
das
or
lahf
and
aas
out
inc
cmpsb
jge
in
or
dec
xor
insb
sti
xchg
sbb
sahf
fbld
mov
loope
add
repz
jp
cmpl
mov
sbb
jae
loope
push
imul
sti
mov
insb
push
movsb
enter
je
loope
or
aaa
add
xchg
xlat
mov
repz
movsb
dec
imul
out
daa
cltd
and
push
xor
es
mov
and
ja
out
cmp
jecxz
mov
in
lcall
lds
mov
imul
adc
icebp
int3
out
sbb
sbb
lock
cwtl
data16
aas
icebp
jns
sub
mov
xchg
pushf
lds
push
pop
rol
sbb
dec
add
rorb
cmpb
rclb
mov
add
and
scas
sub
xchg
lret
xchg
sub
add
in
sbb
and
pop
imulb
sbb
jecxz
xchg
inc
ss
jg
xchg
xor
xor
sbb
stos
xchg
push
div
ret
jle
movsl
push
push
out
ficomps
jbe
mov
rclb
mov
ja
inc
sahf
mov
ss
gs
xchg
jbe
mov
jb
mov
mov
lret
fisttpll
popa
inc
mov
out
cmpsb
add
icebp
or
mov
nop
das
leave
xor
sbb
dec
mov
scas
jge
mov
fbstp
ret
dec
notb
xor
jl
inc
jecxz
loope
negb
addr16
lea
add
into
loop
fwait
pop
hlt
cli
xor
mov
or
packsswb
cwtl
pop
mov
scas
daa
adc
pop
adcb
movsb
and
and
inc
in
xor
sarb
dec
xor
clc
outsl
mov
push
sub
or
fwait
lods
xchg
xchg
mov
push
sti
xchg
stos
lcall
adc
je
mov
iret
add
mov
xor
add
test
cmp
cmp
es
rcll
fiaddl
xchg
jge
rolb
lret
sub
lahf
stc
adc
push
sub
adc
sbb
pop
push
mov
xchg
test
addr16
adc
enter
jle
cmp
push
add
inc
push
lret
inc
xor
mov
sbb
fidivs
sar
cmc
fdivrs
mov
or
add
jne
add
add
mov
js
enter
jno
aad
lret
xor
aad
outsb
repz
pop
popa
jl
cmpsl
pop
mov
jae
shll
or
pop
scas
aad
imul
arpl
hlt
test
out
pop
popa
dec
movsl
nop
inc
int
icebp
daa
popa
icebp
gs
clc
fsubs
je
ljmp
in
xchg
out
movsl
inc
das
and
movsl
xchg
jno
add
in
loopne
dec
push
addr16
pop
adc
sbbb
sbb
xchg
repz
pop
inc
lods
sub
and
rcrb
int3
xchg
mov
outsl
adc
fdivl
jge
iret
xor
stos
or
rorl
jg
cld
out
movsl
xor
mov
push
mov
lret
sub
jmp
aam
lahf
into
and
mov
addb
mov
aaa
pop
mov
stos
xor
int
adc
push
in
jp
push
xlat
mov
pop
aad
push
faddl
mov
mov
cld
mov
sti
pop
push
fnstcw
xlat
xlat
xchg
xchg
outsl
fwait
cmp
fstpt
mov
jg
mov
repz
dec
daa
and
dec
and
jle
iret
xchg
mov
adc
sarl
mov
in
pushf
or
mov
mov
push
or
mov
pop
ss
xor
notb
aas
lea
xor
repnz
sub
and
jno
adc
mov
inc
sub
adc
adc
cmpsl
and
jne
std
xor
xchg
jbe
roll
gs
gs
mov
movsl
aas
outsl
xor
cmp
adc
jge
cmp
pop
push
adcl
fsubr
inc
lret
cltd
dec
xorl
jns
xchg
adc
push
add
or
movsb
aaa
xchg
push
fsubrl
cli
ror
ljmp
loop
inc
rcrb
fisubrs
bound
push
pop
push
inc
dec
mov
pop
mov
jecxz
jg
mov
iret
repz
outsl
or
dec
pop
dec
push
ret
cwtl
dec
cwtl
je
mov
divl
iret
mov
adc
mov
pop
xchg
inc
push
jo
stos
mov
shll
fs
push
pop
cmpsb
dec
ljmp
jp
fsubp
mov
xchg
inc
imul
int
je
out
pusha
popf
xchg
lods
in
test
sbb
in
cwtl
lret
push
mov
imul
xor
push
and
jg
adcb
sub
loope
mov
dec
cmp
jmp
xor
push
cmp
push
mov
movsb
cmp
and
sbb
ds
mov
fbld
insb
push
in
mov
imul
loop
rolb
push
call
sbb
leave
lcall
cmp
rcll
ret
sbb
adc
cmp
jae
hlt
inc
mov
pop
sbb
dec
pushf
mov
xor
cmpsb
fstp
sti
jnp
jae
rclb
cmp
ljmp
or
in
clc
jp
sahf
mov
pop
popf
pop
stos
icebp
orl
mov
call
dec
push
pop
jmp
aad
add
repnz
in
scas
and
push
insl
pop
loope
push
dec
cmp
adc
adc
add
fisubl
aas
jae
cmc
jg
hlt
cltd
sarl
inc
pop
push
push
ja
cmp
sub
pop
mov
into
cmpsl
fs
cli
ljmp
adc
mov
add
insl
pop
add
xchg
and
cltd
jo
insl
es
push
pusha
lahf
add
fldl
pop
pop
sbb
loopne
sub
jecxz
ja
adc
decb
mov
int
dec
out
dec
and
adc
scas
cli
test
mov
pop
cmpsl
cltd
sub
shl
jl
pop
mov
decl
pop
inc
in
fs
jne
test
mov
xchg
mov
sbb
dec
iret
xor
mov
out
xor
sub
mov
das
mov
outsb
dec
fwait
adc
mov
cli
cmp
cmp
inc
sbb
xchg
daa
xor
arpl
and
mov
pop
xchg
add
jno
jb
sub
add
xor
inc
aas
shr
jg
mov
mov
fchs
aaa
or
sub
adc
xchg
add
fstl
mov
adc
cmc
and
jp
xchg
gs
clc
daa
adc
jp
push
or
div
xchg
push
aad
lret
pushf
xor
je
xchg
fisubs
xor
xchg
stos
pop
adc
ficompl
and
add
mov
mov
das
imul
ljmp
mov
cld
mov
sbb
or
xchg
xchg
out
push
mov
mov
out
and
dec
imul
movsl
into
repz
ret
jne
pop
or
jno
div
mov
add
lods
imul
mov
mov
cli
int
scas
or
pop
sub
cmp
fdivs
or
jle
mov
divb
xchg
adc
nop
test
xchg
cli
mov
movsl
jne
pop
gs
xchg
push
lret
sbb
and
adc
xor
sarl
shlb
jae
aam
mov
xchg
ficoms
push
jmp
es
dec
adc
ds
rcll
mov
xor
ja
stos
fnsave
ror
pusha
sub
ja
test
popf
dec
jge
les
fcmovbe
mov
repz
dec
mov
loopne
out
fwait
sti
dec
add
jmp
arpl
xchg
jb
es
bndstx
scas
jb
in
mov
adc
sub
imul
into
add
lea
sub
pop
fs
test
jle
push
jecxz
in
or
sti
or
test
addr16
aad
in
cmp
xor
les
mov
aas
js
loopne
sbb
outsl
jno
cmc
outsl
jne
cld
push
in
je
data16
flds
mov
mov
and
cmp
data16
ret
and
mov
rcrl
jecxz
jecxz
imul
pop
mov
call
and
inc
mov
dec
add
ja
and
fdiv
std
fldcw
or
xor
sbb
lcall
lea
dec
fwait
lock
stos
cld
addr16
dec
out
add
loop
sub
cmpb
loopne
sbb
cmp
pop
sbb
rorl
popf
or
sbb
inc
out
mov
sub
mov
jmp
or
aaa
inc
mov
dec
jge
jl
mov
mov
in
push
in
mov
iret
pusha
sti
sbb
cmc
inc
adc
sbb
lahf
movsl
mov
mov
fnstenv
out
cld
negl
stos
in
pop
sub
scas
xor
mov
sub
js
shll
cmp
pop
test
outsb
mov
movsb
xor
push
jo
in
cmpsb
ss
xchg
movsl
insb
insl
shll
cmpsl
out
in
jmp
dec
jle
inc
inc
testl
xchg
or
push
jle
je
mov
je
sahf
rol
jmp
js
xchg
inc
pop
stos
in
lret
add
xchg
shll
cli
dec
or
movsb
dec
cmpsl
scas
push
stos
dec
inc
sub
fwait
leave
mov
testl
repz
stos
outsl
dec
push
mov
lret
adc
push
mov
inc
jnp
push
popa
stc
inc
add
inc
call
pushf
jecxz
pusha
xchg
cwtl
mov
ret
test
mov
mov
cmp
nop
loope
dec
stos
mov
push
imul
mov
xor
jg
cwtl
sub
pop
es
xor
jo
jmp
sar
adc
cs
xlat
cmp
xor
xchg
ds
ljmp
and
sti
negb
xor
ss
jp
and
andl
in
loopne
movsb
mov
aaa
cmp
sbb
pop
sub
and
in
pop
jbe
and
jp
pusha
push
insb
push
loope
pop
xchg
rolb
sub
jno
aaa
inc
xchg
ret
mov
and
addb
jns
xchg
in
mov
or
jae
ror
repz
mov
leave
cwtl
in
je
mov
mov
jae
push
adc
pop
cmp
inc
test
mov
jp
dec
jle
mov
lea
loop
out
push
sbb
xor
cmpsl
xchg
cmpsl
ds
popf
imul
push
popa
mov
fcmovb
sbb
pop
add
pop
adc
sbb
and
rcll
adc
aam
sbb
fistpl
mov
mov
fwait
xchg
nop
call
pop
iret
fwait
loopne
aam
inc
lahf
inc
add
mov
mov
pop
xor
sub
xchg
adc
das
cmp
add
clc
mov
push
inc
mov
mov
mov
pop
lret
add
mov
cmpsl
repz
shll
in
das
inc
shrb
bound
push
aas
or
sub
xchg
cltd
in
push
pop
out
pop
ja
mov
ret
call
pop
jne
arpl
repnz
pop
mov
sbb
jne
into
dec
jno
mov
sub
push
adcb
stc
mov
hlt
pop
add
jne
mov
jne
pop
mov
fmull
sbb
leave
sbb
add
insl
dec
mov
int3
xchg
fwait
lahf
push
add
orb
mov
cmp
loopne
mov
xorl
and
into
sbbb
or
fiaddl
and
push
sahf
out
repz
cmp
mov
mov
mov
jbe
and
xor
insb
push
dec
add
add
popf
jg
stos
xor
fildll
sbb
cmc
rorl
or
icebp
repz
pop
push
imul
dec
xlat
aad
arpl
js
cmpl
cmp
cld
mov
mov
dec
cmp
xchg
fildll
add
and
push
pusha
push
add
xor
je
mov
ret
enter
xchg
insb
xor
xchg
je
lock
clc
mov
outsb
adc
addr16
mov
andl
dec
ds
xor
or
sub
sub
mov
mov
mov
sbb
push
push
push
dec
push
mov
dec
add
lea
icebp
das
pop
cmpsl
movl
dec
xchg
mov
push
hlt
cmp
push
rclb
test
mov
xchg
pop
cli
arpl
push
jns
mov
inc
call
test
mov
jb
clc
pop
and
and
jo
mov
fimuls
pusha
cmovae
and
xchg
or
test
cmc
mov
rclb
pop
pop
mov
das
lds
es
rcll
ret
enter
in
xor
pop
movb
xchg
jnp
pmaxub
shll
fidivrs
arpl
xor
jle
int
aad
add
sub
ffree
movb
pop
and
lods
insl
mov
insb
insb
insl
jecxz
pusha
mov
xchg
test
mov
popa
xchg
add
popf
push
scas
add
test
push
cmp
in
hlt
mov
std
call
add
mov
or
rorw
pop
xchg
fwait
add
outsb
push
push
push
xchg
sbb
xor
xchg
inc
test
loop
xchg
test
testb
cmc
jmp
add
rolb
inc
es
jmp
mov
jns
cmp
cmpsl
in
or
pushf
or
jns
stc
mov
shll
and
push
inc
add
lods
outsb
das
mov
adc
icebp
cmp
or
test
lcall
aas
cltd
mov
jmp
push
loop
push
adc
cmp
or
aad
out
and
daa
adc
scas
jae
or
xor
mov
scas
mov
or
in
rcrl
pop
fucomip
mov
mov
lret
imul
std
xchg
cltd
aaa
adc
imul
scas
add
sahf
mov
and
out
add
cmp
daa
adc
jo
pop
cld
dec
push
out
adc
test
insb
sbbb
daa
sbb
and
ss
or
out
lock
pop
inc
jge
aaa
push
das
cmpsl
clc
jl
mov
fidivl
add
out
sbb
mov
nop
mov
or
adc
xchg
or
aaa
and
jo
push
sbb
and
xor
dec
mov
lds
pop
fisttpl
push
stos
fbstp
xchg
setbe
ss
aas
leave
outsl
and
stos
pop
inc
xor
cli
stc
imul
and
add
test
and
icebp
in
or
adc
jae
imul
int
sub
iret
mov
lock
and
push
in
daa
dec
cmp
mov
cmp
pop
sub
push
call
out
sbb
sub
pusha
push
dec
and
in
fildl
cld
andb
je
sbb
or
jle
jb
push
aaa
shr
lods
arpl
push
or
mov
or
loopne
mov
lcall
push
loope
cltd
mov
pop
jns
inc
fwait
adc
sbb
addr16
xchg
inc
je
inc
cld
xchg
jno
stos
cmp
sub
sti
push
mov
lds
jl
divl
dec
mov
adc
movsb
and
xchg
aaa
stc
push
xor
outsl
fcoml
adc
jae
pop
test
outsb
jecxz
or
and
jbe
rolb
push
rorl
pop
push
cli
mov
adc
je
sti
xor
int3
jmp
fs
fdivrl
imull
insb
hlt
sub
fstpt
cmpsl
push
addr16
lods
jl
dec
xor
push
pop
or
xor
aas
sub
inc
in
inc
pop
push
mov
rolb
outsb
xchg
push
pop
cmp
dec
jge
scas
int3
imul
add
sbb
push
mov
and
add
repz
inc
cmp
pop
or
test
jp
mov
fbstp
mov
xor
lods
jne
push
pop
cwtl
inc
or
or
or
leave
jbe
pop
dec
push
insl
jno
add
iret
pop
push
lea
and
ficoml
xchg
xchg
cmpsl
jns
inc
repnz
sub
dec
dec
mov
jge
jb
pop
cmp
sub
cmp
mov
adc
push
xor
add
jmp
push
dec
shl
fisttps
hlt
sub
clc
mov
hlt
lcall
mov
mov
jge
aaa
xor
or
into
aam
mov
fstps
xchg
adc
cmp
xor
sub
aad
and
dec
xor
ret
jo
inc
dec
ljmp
inc
pop
scas
sbb
shl
jb
lret
lock
add
fdivrs
rorb
fs
or
rcl
sub
sahf
shr
ret
or
sbb
pop
into
aaa
lcall
sti
insl
dec
and
hlt
push
lods
ljmp
inc
rcr
loopne
push
push
pusha
mov
push
mov
mov
adc
shlb
and
adc
cld
xlat
into
mov
fildl
stos
scas
int
dec
inc
repnz
mov
push
rclb
xchg
xchg
ljmp
xchg
popa
sbb
cmpsb
adc
xlat
adc
cwtl
lcall
and
dec
out
dec
cmp
mov
push
es
aaa
jno
push
outsb
scas
sub
aas
pop
icebp
dec
jb
mov
out
sbb
inc
rorb
in
stos
pop
and
sbb
fwait
out
cmpb
or
push
add
in
jecxz
cmp
pop
jae
sarb
outsb
sahf
adc
insb
xchg
add
or
arpl
sti
ret
ds
sub
jnp
inc
in
cwtl
cmp
cltd
push
inc
xchg
mov
xchg
aam
xor
xadd
jp
and
lret
pop
add
mov
mov
std
mov
inc
sub
pop
pop
mov
movsl
outsb
inc
cmp
fidivs
jl
repnz
inc
cmpl
mov
add
push
dec
hlt
in
in
mull
outsl
lock
pop
sbb
aam
insb
enter
or
in
mov
or
int
in
inc
rcrl
loopne
jo
lods
jne
sahf
push
in
pushf
or
inc
movsb
movsl
mov
xchg
cmp
push
nop
mov
adc
add
test
sub
push
icebp
fnstcw
imul
lea
daa
inc
jle
ret
push
sbb
xchg
fwait
pop
loope
jle
inc
or
add
push
cwtl
adc
jmp
add
jmp
in
cmp
pop
adc
outsb
or
pushf
sub
push
loope
je
inc
push
in
mov
xchg
jecxz
inc
pop
insl
mov
sub
dec
test
jns
adc
cld
lcall
stc
inc
adc
nop
pop
dec
lret
stos
andb
mov
sub
pop
xor
add
xor
mov
aam
cmp
mov
nop
shrb
addr16
pop
lret
shll
inc
cmpsl
repnz
hlt
fisttpll
ja
cwtl
pop
fbld
mov
sbb
jno
dec
lods
jne
or
outsl
rcrl
mov
lret
pusha
lds
fwait
cmpsl
dec
shll
leave
insl
push
mov
ret
mov
enter
mov
ficoms
dec
rolb
push
stos
jbe
ret
cld
movsb
push
stos
in
bound
je
sub
jmp
add
int3
dec
push
inc
inc
sbb
xchg
aam
push
mov
mov
push
test
in
mov
xor
pop
push
sub
dec
loopne
sbb
out
and
sbb
cmp
test
mov
pop
call
imul
xor
cmp
sbb
cmp
in
cmpsl
mov
and
adc
shl
movsb
jge
gs
pop
ss
sbb
sbb
pop
aad
push
mov
test
add
push
cmp
xor
sti
inc
sub
cwtl
jne
pop
clc
test
out
mov
push
pop
xchg
pop
jnp
aam
mov
scas
data16
in
push
fisubl
xchg
sbb
enter
popf
jmp
rcl
mov
mov
cmp
xchg
out
push
mov
aad
ret
sub
in
lahf
outsl
fidivs
into
push
jmp
push
dec
cmp
inc
ss
inc
cmpsb
insb
fs
add
pop
lods
bound
inc
mov
push
in
iret
mov
pushl
adc
mov
xor
adc
popa
adc
pop
mov
sbb
mov
mov
les
ret
push
add
and
es
cmp
add
xor
push
xchg
xchg
jo
ljmp
rol
mov
xor
sbb
cmp
sub
flds
sti
cmc
les
daa
add
cmc
mov
xor
pop
pop
popf
adc
lods
mov
cmpsb
in
unpckhps
mov
je
stc
xor
push
aam
addl
or
inc
xchg
insb
je
mov
inc
int
shlb
insl
cmp
xlat
cmp
sbb
cmpl
pop
push
lret
add
mov
movsl
call
sbb
mov
ds
xchg
jecxz
mov
cmc
sub
sbb
jp
sbb
js
jge
mov
arpl
add
mov
out
and
test
dec
push
dec
fwait
or
test
cmp
adc
xor
push
dec
xor
sbb
xor
ds
outsb
inc
out
lds
xchg
je
mov
aas
sti
xchg
movsl
jb
add
cmp
push
and
xchg
je
xchg
xchg
movsl
aas
fisttpll
mov
outsb
imul
sbb
lretw
fistpll
stos
inc
add
notl
sub
xchg
dec
das
fstpl
cwtl
imul
cmpsb
add
ficoms
aas
inc
je
xchg
mov
mov
sbb
cmp
sbbb
mov
jns
xor
mov
insl
popf
pop
stos
lret
fisubs
scas
pop
insl
in
ds
es
loope
pop
fistl
jmp
out
inc
sub
or
sti
xchg
out
cmp
inc
add
sbb
sti
mov
pop
test
aas
mov
aaa
mov
jp
jecxz
xchg
test
mov
cmpsb
push
mov
jecxz
lcall
cmp
or
dec
lds
loope
add
dec
pop
cmc
push
fs
pop
xchg
xor
xchg
pushf
mov
inc
fimuls
mov
andb
sbbl
ret
movsl
jb
int
dec
xor
test
enter
in
jg
outsl
dec
dec
pop
enter
sbb
lret
cmp
jno
addr16
push
aad
add
aaa
adc
or
mov
mov
fst
enter
and
rorb
arpl
and
mov
push
lds
inc
mov
mov
sbb
mov
or
inc
imul
push
shlb
mov
cmp
xchg
pop
xlat
enter
and
inc
adc
fmuls
pop
sbb
push
shrl
fwait
dec
fsubr
in
out
mov
mov
rcr
jmp
mov
shrb
mov
cltd
dec
xchg
repnz
push
iret
push
inc
call
shll
lret
sarb
icebp
in
in
add
ficoms
add
leave
mov
into
or
xchg
test
xor
or
shlb
in
bnd
sub
sbb
stos
and
fcmovb
lahf
pop
cmp
adc
test
aam
push
test
push
sub
cmp
aaa
cld
sub
mov
lret
push
imul
cltd
popa
out
inc
jns
mov
call
mov
ss
popf
jmp
or
sub
inc
inc
jl
lods
jae
jmp
fisubrl
js
mov
addr16
sub
lock
cltd
and
jo
push
popa
cmp
mov
cmp
aaa
cmpsl
mov
rcrb
rcr
sbb
pop
pop
dec
sti
jge
test
cmp
fwait
mov
mov
imulb
dec
fldt
mov
jae
xchg
adc
mov
or
dec
jno
cmp
push
jne
ficompl
scas
push
lret
mov
sub
cld
shrb
push
aad
cmp
iret
rorl
dec
sahf
cmp
pop
cmp
out
cwtl
lds
and
sbb
xchg
ss
in
ja
adc
stos
ret
jl
xchg
adc
and
test
inc
cmp
mov
test
mov
sbb
and
push
cli
cwtl
mov
outsl
adc
es
adc
add
inc
and
and
cli
jl
cmp
dec
jecxz
sbb
sbb
std
mov
loope
pop
icebp
push
jmp
in
inc
call
cmpsb
xchg
rcrb
mov
xchg
insl
out
push
fistpll
movsl
jecxz
into
mov
sbb
pop
pop
xchg
mov
or
cs
push
in
sahf
jmp
sub
pop
adc
xchg
sbb
ss
leave
aaa
xor
add
jle
fldcw
dec
in
into
push
push
ret
xchg
jne
test
loopne
jns
into
push
or
or
add
sbb
popf
jne
xor
mov
jns
rcll
pop
rolb
jmp
add
xor
out
pusha
arpl
adc
mov
out
jne
sbb
jnp
mov
cs
mov
arpl
xchg
pop
push
or
cmc
inc
lds
mov
adc
dec
and
setnp
cmc
outsb
sub
or
fistl
xor
sub
les
scas
jecxz
inc
push
aad
js
stos
das
cmp
inc
push
out
icebp
push
lock
mov
arpl
aaa
add
out
jae
enter
aam
push
into
inc
push
aam
sarb
loopne
pushf
loope
sbb
sbb
imulb
in
cwtl
fists
and
mov
dec
sbb
inc
fcmovne
xor
lahf
mov
lret
in
jp
popl
les
out
rcll
xor
sbb
cmp
or
push
pusha
or
leave
shll
stos
out
xor
jg
xor
inc
hlt
dec
imul
jp
mov
sub
insb
popf
outsl
adc
or
mov
mov
dec
jle
and
js
lea
test
das
test
and
ja
aad
clc
mov
rolb
push
fs
divb
mov
enter
and
mov
in
leave
repnz
pop
sub
xchg
lcall
imulb
aad
lock
outsl
pop
addl
loop
lods
aas
popa
mov
cmpsb
cltd
dec
add
inc
xchg
cltd
or
sub
xorl
ret
xchg
outsb
daa
stos
or
pop
push
and
mov
mov
shlb
xor
out
jl
pop
jo
and
adc
push
mov
dec
mov
aas
xchg
jg
sbb
scas
repnz
jge
int3
fistpl
add
addl
pop
add
roll
lahf
cmpsb
rclb
push
dec
lret
push
lahf
sahf
mov
xor
push
or
inc
mov
test
roll
out
jns
xor
dec
dec
xchg
sub
int3
es
or
mov
stc
mov
je
scas
orb
fsub
xlat
loope
mov
dec
enter
fsubrl
cmp
insl
pop
popa
xor
xor
das
push
pop
pop
jns
push
and
mov
push
test
clts
xchg
xchg
gs
and
push
ja
lret
or
inc
mov
ret
jl
dec
mov
jle
sub
jns
ret
mov
fcompp
mov
lea
push
push
jle
xlat
orl
in
mov
in
push
and
jbe
mov
inc
and
inc
cmp
and
xor
adc
mov
jge
mov
cwtl
subl
fsts
cmp
lret
fldcw
cmp
in
mov
and
push
fistl
cmpsl
adc
jg
pop
inc
std
scas
dec
callw
fisttpl
pop
pop
mov
dec
cmp
sub
xlat
mov
cs
jmp
insb
arpl
push
imul
jno
xchg
imul
lcall
xor
sbb
call
xchg
jl
push
scas
fsts
test
jno
xor
and
es
sbb
xchg
out
sarb
call
push
cmc
lock
cmp
mov
movsl
push
pusha
push
sbb
mov
inc
and
cmpsl
or
hlt
xor
fidivl
pop
dec
call
lods
daa
aaa
sbb
nop
insl
stos
sub
loope
sahf
ja
data16
lret
inc
mov
jl
inc
movsb
push
xchg
les
fidivrl
or
fcmovnu
lds
cld
cs
mov
add
push
mov
mov
add
idivl
xchg
loope
xchg
add
pop
imul
pop
push
lods
mov
push
dec
cwtl
sbbl
xchg
insb
or
rol
mov
in
loope
fisttpll
push
arpl
jb
push
xor
xorl
pop
xchg
insl
loopne
xor
or
andl
aam
mov
add
das
dec
sbb
sbb
cs
lods
push
cmp
mov
add
arpl
mov
in
in
insl
xorb
push
mov
mov
dec
test
add
in
dec
mov
push
test
or
mov
sbb
mov
test
pop
cmc
adc
add
inc
inc
mov
jge
test
rorl
les
and
jne
addr16
nop
jl
cmp
mov
inc
mov
sbb
repnz
sahf
insl
jl
mov
pop
jb
jae
push
fisubrs
call
pusha
pop
sub
cmp
sbb
fs
mov
jg
enter
pop
lea
mov
fisubrs
mov
aad
mov
xor
nop
sbb
adc
cwtl
mov
dec
push
mov
stos
fstps
rclb
mov
mov
push
fcmovnbe
mov
mov
cs
fcmovnbe
xor
mov
iret
pop
sub
mov
mov
dec
or
mov
mov
dec
lret
es
pushf
or
lcall
pop
sub
push
pop
scas
add
push
addr16
das
pop
cltd
sti
xor
fnstenv
sarl
mov
lock
es
and
jl
pop
jo
lret
sbb
and
aas
and
ljmp
in
xchg
outsl
ja
fldl
jge
aad
mov
es
xchg
cmpsl
mov
call
fwait
lods
mov
cmp
jmp
pop
sub
or
popa
and
pop
cwtl
dec
sub
sub
inc
inc
data16
cmp
mov
add
aas
ss
cmpl
lods
jbe
test
or
sbb
xchg
add
jb
cmp
out
dec
and
push
push
sahf
mov
cs
dec
stos
sbb
pop
ret
mov
jg
cmpsb
jne
sti
clc
idivb
and
clc
in
divl
clc
orl
adc
ja
jns
mov
int3
sub
inc
test
enter
daa
dec
xchg
shll
dec
sub
xchg
push
mov
mov
sub
pop
fiadds
xchg
mov
jle
inc
inc
push
test
jbe
pop
pop
jp
aam
mov
fadd
or
pop
mov
cmp
or
aam
testl
out
pop
push
imul
roll
cmpsb
push
icebp
jno
lock
sti
fwait
pusha
loop
cmp
dec
sbb
imul
mov
pop
mov
shrl
arpl
mov
and
cmp
add
adc
add
or
test
repz
cmpsb
pop
fmuls
pusha
nop
push
adc
pop
out
xor
mov
movsb
ds
js
rcll
xor
xchg
pop
call
adc
or
pushf
push
jecxz
aad
sbb
push
pop
in
cmp
std
jecxz
js
scas
fwait
push
sub
lahf
add
pop
and
nop
jge
mov
push
mov
push
adc
or
mov
adc
sub
daa
or
clc
jecxz
icebp
mov
push
ds
mov
add
mov
cmp
shll
mov
pushf
loope
loope
push
jbe
loopne
inc
jg
cmpsb
ss
jbe
sbb
pop
rclb
add
inc
push
outsl
and
cmp
adc
mov
ror
cmpsl
xchg
imul
cld
xorl
and
sub
imul
sti
sbbl
imul
xchg
adc
out
mov
call
jle
xor
pop
test
jg
daa
arpl
pop
sub
mov
shrb
mov
xor
pusha
in
push
frstor
push
xchg
ficoml
and
repnz
jae
push
mov
iret
xor
xlat
xor
adc
pop
push
mov
cmp
xchg
idivb
repnz
std
out
sub
popa
mov
daa
or
mov
cmc
sbb
pop
in
pop
jnp
inc
push
aad
mov
and
mov
filds
jnp
sub
push
push
xchg
push
ja
xchg
dec
pop
or
lcall
idiv
xchg
leave
adc
push
cld
into
rcll
lar
jb
jno
mov
xor
in
test
jne
ficoml
ud1
pop
pop
movsl
push
cli
and
aad
stos
mov
les
pop
in
cmp
adc
pop
push
mov
adc
push
mov
sbb
cmpsb
lea
sub
sub
xlat
mov
int3
addl
mov
xor
repz
sbb
add
aas
scas
inc
or
push
nop
sub
cld
jb
pushf
ds
fidivs
outsl
insl
sbb
xchg
cmp
lcall
xor
test
cmc
push
sub
icebp
lret
push
and
pop
push
adc
outsb
int3
or
jmp
std
push
test
add
adc
fisubrl
stos
rcl
rclb
jbe
or
xor
cmp
jg
shlb
jp
clc
js
cmp
mov
repnz
pop
and
subl
dec
lcall
mov
cmpsb
fs
negb
xchg
jge
jne
xchg
pop
cmp
std
cmp
outsl
pop
mov
nop
movsb
scas
xchg
or
and
mov
pop
in
ret
or
sbbb
sub
mov
rcrb
sub
sbb
xchg
pushf
dec
ret
out
push
dec
fsts
fcom
mov
jbe
int
bound
and
scas
mov
mov
push
inc
daa
mov
jne
sub
fs
sahf
fnsave
scas
cld
mov
iret
dec
iret
xchg
sbb
sbb
popf
xchg
pop
push
sub
test
imul
push
jmp
lods
arpl
jge
inc
aas
outsl
sbb
or
sub
mov
in
shl
pusha
sub
or
rcrl
fcmovb
cmp
jae
mov
repnz
std
and
stos
xchg
pusha
mov
mov
push
addl
jecxz
fwait
mov
pop
repz
inc
iret
dec
mov
ret
lret
popa
push
mov
icebp
xchg
and
inc
mov
bound
mov
dec
sahf
inc
sbbl
fsts
mov
sub
xchg
ja
jne
or
jns
mov
dec
inc
dec
insl
daa
std
icebp
push
adcl
adc
xchg
push
xchg
in
push
inc
mov
mov
into
arpl
xchg
dec
xchg
pop
pop
mov
xor
xlat
push
xchg
sub
xor
fsubr
comiss
or
addr16
int
ret
cmp
inc
lar
push
roll
push
and
dec
clc
jnp
iret
jns
add
lock
cmp
mov
mov
sbb
sbb
icebp
adc
mov
shl
push
mov
jmp
popa
cwtl
fdivrs
loope
xchg
pop
pop
in
push
xchg
jmp
lds
mov
mov
adc
call
jo
jle
pop
arpl
mov
sbb
dec
add
jle
pop
push
mov
cmc
pop
xchg
dec
xchg
mov
inc
cmp
xchg
arpl
mov
popa
ds
imul
or
mov
adc
loopne
mov
mov
cmp
daa
jecxz
cli
imul
mov
lahf
lahf
repnz
sub
outsb
mov
xchg
fildl
and
sarl
pop
ja
jnp
sub
inc
inc
pop
ret
jge
addb
lods
mov
into
jno
insl
mov
lods
scas
fdivr
adc
push
push
dec
ds
cmp
out
push
inc
mov
jl
popf
das
mov
pop
addr16
rolb
push
mov
and
movsl
mov
ret
fsubl
xchg
and
das
or
movsl
xchg
jg
dec
les
out
movsb
outsb
ljmp
push
out
in
jnp
xchg
cmp
push
or
add
jl
and
adc
xlat
add
cmp
sbb
arpl
cmp
inc
mov
mov
aam
dec
cwtl
mov
nop
sub
clc
cwtl
imul
out
adcb
iret
mov
xchg
scas
lcall
jle
in
mov
dec
loop
je
pop
sbb
dec
lret
testb
push
mov
shl
fisttpl
or
pushf
add
cmpl
xor
xor
inc
inc
jmp
rcll
jle
inc
iret
das
pop
xchg
ffree
ss
outsb
sub
pop
adc
xor
out
popl
imul
fs
dec
jge
sti
arpl
stos
xchg
pop
or
inc
mov
jg
xchg
inc
lret
roll
cmc
or
ret
shl
pop
xchg
push
inc
sahf
rcrl
cli
es
mov
add
mov
scas
push
loope
out
push
ja
call
and
pop
add
push
and
shll
arpl
stc
int3
data16
dec
loopne
jnp
pop
ja
test
adc
adc
pop
inc
aaa
imul
pop
or
mov
les
jge
xlat
nop
sub
jnp
push
mov
out
xor
outsb
or
mov
sbb
cmp
data16
sbb
jne
insl
fldenv
fwait
jle
nop
ficompl
pop
mov
adc
out
dec
xor
or
std
cs
out
jmp
mov
cld
pop
xchg
lret
jne
leave
add
xchg
xor
sub
repz
xor
xchg
mov
sub
stc
adc
fiaddl
das
outsl
ret
ja
data16
test
pop
stos
add
call
mov
outsb
xchg
pop
in
sbb
ljmp
and
cltd
adc
jp
add
xor
into
aaa
movsb
mov
jp
pop
sbb
daa
stos
dec
adc
ss
int
jle
mov
mov
sub
adc
ret
xchg
adc
xchg
cmp
rorb
cmp
mov
push
mov
sub
push
int3
pushf
ljmp
xlat
push
xor
jne
fidivs
or
cmc
test
insl
push
or
testl
push
fstpl
adc
dec
fcoms
incb
or
sub
mov
cmpsl
mov
aad
push
push
xor
dec
push
jo
popf
outsb
out
or
js
xchg
push
or
leave
fldt
or
aad
sti
pop
xor
push
dec
xor
and
mov
jl
and
add
xchg
outsl
pop
mov
mov
pop
mov
cwtl
xchg
lret
test
sub
xlat
pop
lock
mov
adc
jbe
pop
cmpsb
mov
rolb
lods
dec
xchg
and
jno
outsl
test
aaa
xchg
add
jg
cs
aam
pop
pushf
pusha
fstl
cltd
pop
xlat
stos
rcrb
imul
js
dec
sbbl
mov
mov
xchg
in
stc
cmp
and
cs
lods
movsb
xor
mov
call
andl
or
pop
rcrb
inc
and
fdivl
inc
cs
loopne
orb
jns
cmpsl
ljmp
sub
fdivrl
sub
ret
cwtl
cmp
mov
push
xor
in
je
mov
scas
pop
in
cli
pop
lcall
jo
and
jp
aaa
in
inc
mov
js
mov
in
and
jbe
mov
fdivrs
jle
jne
mov
int
xchg
mov
cmc
push
fnstcw
push
sbb
jo
xchg
decb
lods
add
pushf
mov
cs
jmp
xorb
dec
data16
aam
push
adcb
cmp
loopne
arpl
push
adc
shr
jle
dec
sub
not
sub
mov
mov
sub
lods
std
dec
sbb
jns
pop
test
or
pusha
xchg
mov
pusha
jl
jbe
mov
mov
adcb
cs
test
push
rclb
out
mov
dec
xor
pusha
repz
push
add
mov
xchg
cld
jne
xchg
sbb
jae
subb
hlt
ficomps
jno
outsb
xchg
pop
jmp
loop
gs
jne
je
mov
jl
mov
into
loopne
rcl
push
ret
sub
inc
lahf
and
push
mov
or
mov
mov
daa
push
aad
or
packssdw
jae
ret
ja
xchg
fsubp
or
xor
and
test
call
out
jne
movsl
mov
inc
or
jge
inc
fnstcw
out
aad
xor
aas
cmc
pop
data16
dec
push
test
in
sub
jmp
mov
popa
push
fcomps
push
lods
mov
inc
insb
dec
out
cmpsb
sub
aad
rcrb
test
jle
out
lock
lret
sarl
or
popa
outsl
lret
das
adc
mov
pop
cli
and
cmp
mov
push
dec
pop
push
cwtl
sub
rolb
inc
xor
movsb
fsubrs
mov
inc
fdivr
sti
cmp
fimull
movsl
push
nop
stc
add
jmp
enter
add
push
push
into
inc
sahf
roll
inc
and
xchg
ss
mov
cs
cmp
lcall
mov
add
and
push
fs
testb
xchg
cmpsl
sbb
stc
mov
mov
mov
lea
test
cmp
add
push
jbe
stos
or
dec
sti
xchg
ret
fmuls
pop
xchg
xchg
daa
shlb
je
aad
scas
jno
xor
gs
mov
xorl
enter
cmp
mov
inc
mov
dec
mov
sahf
es
xchg
mov
cmpsl
hlt
imul
xor
push
rclb
rorl
and
mov
std
xor
cld
jge
mov
dec
adc
mov
ret
cmc
xor
adc
arpl
incb
mov
and
in
sub
cli
in
adc
adc
adc
push
adc
cmpsl
fmuls
push
stos
add
push
xorl
pop
insb
sahf
cs
sub
mov
iret
mov
jb
scas
mov
ljmp
jle
sub
shl
push
cmp
dec
pop
push
dec
dec
out
pop
out
loop
pop
push
daa
test
scas
hlt
mov
xchg
iret
sbb
sbb
sub
in
test
fsts
in
fmulp
push
nop
xor
xchg
out
loopne
dec
ret
call
fiaddl
cmc
pop
or
test
lods
or
jmp
adc
ret
stos
mov
xchg
xchg
or
xchg
pop
inc
xchg
pop
daa
mov
mov
inc
out
movsb
test
push
out
cwtl
add
pop
mov
pop
or
xchg
jae
push
lret
mov
out
std
adc
mov
adc
add
insb
fisubs
stc
dec
sub
xor
push
in
inc
jmp
jecxz
leave
mov
sbb
push
lock
jnp
inc
or
in
scas
xchg
std
mov
xchg
cmp
xchg
xchg
fstpt
fisubrs
xor
sahf
inc
jl
pop
ss
std
test
jae
insb
mov
sub
ljmp
ret
sbb
mov
jge
je
adc
scas
xor
mov
push
push
xor
jp
push
adc
pop
stos
xchg
inc
inc
mov
jns
jbe
popa
xchg
loop
jne
and
fistpl
push
jp
pop
shl
pop
outsb
pop
xchg
into
insb
jl
jge,pt
jle
xor
cmp
xchg
fbld
leave
popf
insb
sbb
add
add
push
sbb
and
pop
add
push
jb
pop
dec
and
repnz
add
mov
notb
sbb
std
out
lock
mov
xor
adc
add
frstor
stos
push
insl
pusha
ja
push
lods
dec
roll
es
fcoms
and
orb
sub
je
cld
cmp
dec
mov
push
pop
mov
and
inc
and
mov
or
add
popl
mov
jo
andb
or
shl
sbb
enter
stos
es
push
push
dec
dec
mov
mov
jecxz
subb
and
mov
je
dec
adc
sub
shrl
ss
gs
push
cvtdq2ps
cmp
inc
es
orb
cmp
out
mov
insb
cld
and
in
jge
leave
and
in
push
insb
jae
mov
pop
out
cmpsb
into
adc
dec
sti
aaa
xor
push
bound
std
push
push
adc
push
sbb
mov
dec
lcall
bnd
push
test
jns
lcall
leave
cmc
mov
xchg
push
jb
dec
data16
or
test
aam
sbbb
cmp
cmpsl
test
mov
mov
repz
mov
pop
addb
sbb
mulb
mov
aaa
push
ret
adc
fwait
outsl
je
pop
jo
out
pop
testb
jmp
loop
out
add
int3
cmp
stc
mov
dec
mov
icebp
test
xor
ret
pop
push
and
out
cld
test
test
insb
push
mov
fdivrs
mov
aad
rcll
or
jno
jo
xor
clc
stos
push
outsb
xcrypt-ofb
cmpsl
test
cs
imul
mov
xchg
cmc
jbe
add
inc
incb
push
test
outsb
dec
fs
pop
push
not
loope
xor
xlat
add
jae
fs
gs
into
mov
add
sti
scas
mov
cmp
cmp
push
lcall
pop
inc
rolb
xchg
dec
cld
add
jp
cwtl
jl
lcall
jno
out
adcb
jecxz
insl
mov
pop
inc
loope
xchg
pop
icebp
int3
or
pslld
add
xchg
and
pop
xchg
and
cltd
ljmp
pop
ds
jo
mov
adc
fildll
scas
dec
sbb
dec
jne
pop
jecxz
xchg
test
sbb
aas
pushf
or
cmp
jle
mov
xor
jg
cmp
fidivrl
sbb
ljmp
leave
mov
sbb
fwait
cmpsl
mov
out
ds
or
push
dec
int
inc
icebp
mov
add
fdivs
notb
cmp
sub
sbb
adc
and
xor
or
cmpl
mov
pop
adc
mov
or
pop
xor
outsb
push
clc
fsubs
cmc
push
pop
push
pusha
jmp
mov
mov
cwtl
adc
jmp
xor
mov
xchg
cmp
inc
cmpsb
jbe
popf
mov
pop
out
cmp
sub
in
in
push
cmpsl
fmul
push
xchg
push
fwait
mov
mov
mov
fisttps
loop
mov
out
shll
adc
mov
rcll
pop
add
mov
pop
in
shl
cmp
mov
lret
pop
push
mov
and
outsb
cmc
cmp
fmull
rcrb
sahf
pop
lret
jb
movsb
mov
call
lods
les
mov
adc
outsb
icebp
test
adc
xchg
xchg
mov
imul
shr
pop
cmpsb
sarl
pop
jmp
sti
mov
aam
int
les
mov
popf
add
sub
inc
push
adc
orl
sbb
in
or
in
imul
mov
jne
sub
ja
je
mov
push
jno
roll
adc
das
fdivrl
jmp
pop
xor
jecxz
mov
fistps
cmpsl
mov
aam
imul
test
daa
pushf
cli
jb
in
adc
insb
dec
fisttpll
popa
aam
imul
jp
das
ret
and
xor
push
or
das
lret
and
scas
out
xchg
sysret
aas
cmp
adc
sti
stos
mov
mov
ret
icebp
in
leave
add
psrlq
jecxz,pt
xchg
cmc
repz
or
inc
mov
jne
push
push
ja
loope
out
inc
adc
sbb
inc
mov
rcl
mov
test
dec
xor
es
jmp
in
or
pusha
or
or
test
pop
xchg
xor
into
cmp
xchg
push
add
add
jmp
ret
out
jge
sub
mov
lds
rclb
sub
sahf
daa
dec
daa
xlat
lret
shrb
aam
dec
adc
xor
xor
inc
iret
mov
jno
imul
mov
jle
jne
pusha
mov
jo
jl
push
xlat
push
sbb
xchg
stc
out
mov
xchg
sub
mov
mov
je
mov
xchg
fisubrl
mov
jbe
sbb
pop
repnz
aaa
xchg
fcomps
test
jecxz
sub
subl
cmp
mov
push
mov
icebp
test
sbbb
in
rclb
xchg
fdivp
fidivl
int
pop
sbb
pop
test
sahf
pop
int
repnz
jecxz
hlt
push
mov
push
mov
xchg
jns
cmp
push
and
insl
out
add
mov
fcoms
out
in
fstl
in
jmp
insl
lods
fwait
out
mov
dec
and
or
subl
fidivrs
jge
cli
mov
in
clc
loop
xor
adc
mov
pop
sar
lcall
dec
repnz
notb
inc
jno
push
push
leave
xor
pop
pop
sbb
bound
repz
cltd
mov
lock
sub
mov
fildl
call
aas
inc
iret
cld
or
fdivrp
imul
scas
stos
ficoml
jae
insl
jle
aam
mov
cmc
popf
mov
test
mov
sub
jle
mov
jne
jmp
dec
mov
pop
pop
movsl
cmpsb
std
mov
pop
clc
sahf
or
sarb
repz
es
xorl
or
inc
sbb
sahf
outsl
sub
add
shll
pop
repnz
scas
popf
sub
popf
mov
add
dec
arpl
or
pop
lods
or
mov
and
jno
subb
mov
mov
rcrb
cmp
cmp
pusha
sarl
or
stos
push
pop
adc
iret
mov
add
adc
sub
loope
sub
daa
mov
push
shrl
inc
addr16
inc
shr
lcall
movsb
sahf
in
andb
pusha
push
mov
mov
xchg
jg
or
sarb
jle
hlt
and
faddl
dec
stos
push
fsubrs
sbb
pop
in
rclb
xchg
int3
scas
cmp
into
mov
lea
and
or
and
cmpsb
aad
loop
cli
add
jl
jb
loope
insb
xchg
shl
testb
pop
add
xor
addr16
sbb
or
push
aas
out
pop
or
bound
in
ds
ja
dec
sbb
mov
and
or
shlb
rcrl
insl
lcall
fwait
pusha
xchg
daa
std
inc
fidivs
sahf
add
or
cld
or
rorb
out
into
loopne
mov
cli
ja
shl
pop
sub
popf
mov
shlb
sbb
ljmp
sub
mov
adc
dec
jb
rorl
xor
mov
nop
loope
nop
sub
fldln2
fmull
popa
movsb
push
mov
jp
loopne
pop
xor
sbb
push
pop
das
movl
dec
fs
pushf
ret
das
pusha
or
fcomps
aad
inc
arpl
fwait
loope
sub
jnp
fbld
xchg
or
and
jbe
jp
add
lock
cmpsl
inc
xor
pop
js
dec
mul
jae
push
jmp
aad
int3
inc
fbld
pop
inc
jb
imul
rorl
stc
mov
jbe
xchg
sbb
pop
sub
jae
mov
cmp
jb
insl
cmp
ss
dec
pop
mov
fs
lret
cld
inc
and
push
stc
inc
jae
push
ss
and
sub
iret
shr
sbb
or
pop
push
and
jp
out
push
dec
inc
xchg
adc
mov
in
adc
pop
adc
inc
cmp
adc
jmp
mov
xor
xchg
aam
aas
mov
arpl
in
jno
cmp
pop
push
inc
mov
stc
pop
sbb
out
or
pop
dec
int3
fidivrs
sub
mov
icebp
jecxz
mov
sub
mov
sub
mov
push
test
jbe
xor
mov
pop
adc
jno
addl
fucomi
cmpsb
lret
nop
and
aad
movsb
movsb
adc
mov
dec
add
mov
inc
xchg
cld
addr16
push
fidivl
cmp
sbb
gs
pop
pop
nop
xor
stos
gs
std
movsb
std
pusha
popa
aaa
add
aam
mov
cmp
dec
mov
adc
push
rcrb
addr16
xchg
xor
sbb
and
adc
jae
push
xor
sti
rcll
rorb
das
or
mov
js
pushf
xor
insl
nop
aaa
pop
or
pusha
pop
lds
hlt
rcrb
leave
cmp
sbb
push
push
xchg
adc
push
mov
cltd
inc
in
sub
cmp
call
xchg
popf
fbstp
out
cltd
loop
xor
je
cmp
int3
jl
call
and
ret
xchg
inc
popa
and
mov
arpl
iret
out
push
dec
cmc
rcr
mov
pop
mov
pop
aas
sbb
shl
mov
js
xorb
cli
and
cmp
dec
inc
cmp
lea
rorb
mov
mov
or
pop
cmp
cmpsb
sbb
cmpsl
addr16
out
arpl
adc
daa
sub
fdivrs
xlat
neg
add
pop
ficoms
push
aaa
inc
ret
test
cmpsl
and
pop
push
popf
pushl
movsl
ljmp
pop
fstps
add
mov
in
jg
push
inc
and
jns
adc
push
loopne
rolb
pop
cmp
je
scas
or
dec
xor
call
addb
and
orl
and
push
add
adc
jno
or
cmpsb
jbe
sbb
lods
adc
mov
in
data16
das
inc
clc
fiaddl
dec
loop
shll
sbb
lret
pop
adc
mov
in
int
pop
dec
dec
jecxz
ds
shl
lea
stos
xor
inc
xchg
mov
loopne
or
ret
insb
inc
pop
sti
je
xor
push
jne
dec
xchg
jne
shrb
jge
jno
mov
mov
mov
aas
sub
aas
incl
jns
popf
sahf
punpcklbw
aam
pop
jno
mov
xchg
stc
aam
pop
push
das
sbb
dec
data16
sub
dec
ret
cmp
and
les
jb
pop
popf
adc
sub
add
fldt
adc
dec
pusha
int
enter
mov
cltd
in
inc
imul
lret
cmp
jle
mov
sub
xchg
out
mov
cmp
rcl
xlat
mov
test
leave
jl
in
sub
mov
movsb
ja
cmp
xorb
outsb
fistl
fnstsw
shr
cld
jmp
dec
in
std
sub
ja
cltd
add
mov
mov
mov
add
adc
lret
sbb
xchg
push
xor
dec
fmuls
aaa
call
enter
or
push
lock
jmp
jge
xchg
loop
lods
jl
sarl
je
mov
jbe
mov
cmc
scas
sub
outsl
lret
sub
push
push
cmp
and
cwtl
roll
mov
jnp
fidivl
cmp
sahf
inc
sbb
das
dec
jnp
lret
mov
or
ss
adc
push
push
pushf
push
sub
and
sahf
add
shl
fs
xor
icebp
fcomp
movsl
aam
jae
jo
cmp
inc
in
or
mov
out
or
pop
les
in
out
ljmp
inc
cmp
fldenv
out
cmp
cld
mov
int
mov
mov
loopne
jmp
repnz
lret
daa
inc
push
andb
adc
xor
jo
jecxz
ds
or
sub
add
ret
into
clc
mov
fsubl
ss
dec
add
mov
loopne
in
int
mov
adc
fwait
mov
lret
fimuls
in
or
inc
sbb
dec
insb
mov
pop
cmc
mov
jns
cmp
mov
push
cmp
and
xchg
mov
les
arpl
jae
jg
mov
xor
repnz
pusha
xlat
loope
mov
mov
xlat
sbb
mov
or
mov
cmc
sbb
jnp
fwait
mov
clc
inc
fcmovnb
daa
mov
push
pop
nop
stc
pop
mov
cmp
dec
sub
inc
nop
movsb
add
aas
mov
les
push
rolb
jl
in
sbb
mov
imul
xchg
and
pop
loop
inc
dec
lods
clc
in
jns
out
jne
aaa
mov
fsubl
mov
out
dec
pop
outsl
adc
scas
push
ret
in
aad
stc
jge
dec
push
mov
mov
stc
push
push
mov
push
push
add
xor
pop
lods
dec
xor
add
jo
and
repnz
sbb
or
jg
addr16
fsts
pushf
jge
xor
xor
add
outsb
lock
mov
push
sub
std
aaa
outsb
jp
sbb
aam
stos
mov
xchg
stc
xor
xchg
cmp
mov
inc
xchg
popf
inc
lret
push
ljmp
or
imul
lods
lods
sub
setb
test
push
pop
test
clc
cmp
cmp
inc
ret
add
jmp
mov
dec
jns
repnz
aad
pop
test
rclb
lods
sbb
outsl
cmp
test
add
add
sahf
jnp
mulb
sbb
cmpsl
adc
xchg
sub
push
shll
enter
jl
int
subb
and
fstl
cmpl
jg
or
shlb
jnp
sub
aaa
dec
stos
rclb
lret
pop
xchg
fisubrl
mov
lea
mov
mov
je
ficomps
add
adc
cs
dec
mov
shr
fnstcw
mov
sub
clc
int
test
cmp
lcall
cmp
pop
mov
mov
pop
xchg
dec
iret
pop
mov
sbb
mov
push
xor
pop
dec
inc
push
inc
inc
mov
mov
mov
in
mov
ret
pop
jg
xchg
int3
dec
push
xchg
push
rol
or
out
loop
lods
mov
cmpsb
jge
in
xor
inc
aam
add
push
dec
sbbl
nop
xchg
push
pop
sti
std
dec
repz
xchg
cwtl
or
sub
data16
ffreep
or
jle
xor
addb
test
inc
mov
xorb
pop
and
cmp
mov
into
je
es
or
or
pop
call
aad
cmp
mov
cmp
int3
mov
loopne
mov
push
test
add
mov
and
test
cmp
cwtl
push
in
ror
imul
pop
and
xchg
sbb
in
flds
push
es
leave
shrl
add
in
dec
mov
pop
test
outsl
mov
je
fsubp
dec
xchg
push
imul
subl
push
arpl
fwait
pop
cld
movsb
dec
jne
jmp
into
es
xor
mov
movsl
jae
lods
leave
adcb
divl
and
jge
and
out
ds
cmpl
inc
inc
jno
xlat
mov
jb
iret
add
pop
adc
leave
pop
jg
push
mov
ljmp
in
add
inc
fistpll
xchg
aad
sarl
adc
das
cmp
out
lahf
and
movsb
out
aad
sub
xor
adc
lret
lods
mov
xchg
addr16
ja
xchg
lcall
les
cwtl
mov
cmp
push
enter
mov
or
pop
adc
ljmp
bound
push
jbe
jbe
out
push
int3
mov
mov
mov
loop
dec
stc
add
scas
ds
cld
cwtl
shrb
leave
xor
fldl
addr16
test
or
xchg
jb
sahf
loope
sbb
dec
insb
jmp
pop
out
cmp
cs
aam
inc
cmp
fdivrp
sbb
ss
lea
shrb
js
xchg
or
and
adc
int3
mov
and
idivl
xchg
es
mov
std
pushf
and
dec
and
iret
mov
mov
rcll
add
adc
pop
scas
fisubrs
push
lcall
push
jb
dec
movsl
xor
or
fcom
sahf
xchg
arpl
push
dec
jl
push
sub
mov
sbb
and
movsl
test
shl
in
jae
pop
dec
call
inc
cmpsl
add
xchg
push
adc
out
xchg
js
jnp
test
cmp
fidivl
lret
out
arpl
cli
orb
lret
lcall
movsl
orb
xor
rorl
clc
mov
js
gs
push
repz
mov
outsb
mov
xor
xchg
xor
lret
in
lea
add
xchg
cs
fcmovnu
iret
stos
notb
mov
paddq
fdivl
cli
iret
loope
fcom
or
cwtl
popf
aad
cmc
je,pn
sti
ret
fcompl
push
and
xor
and
adcl
stos
test
dec
sub
sti
jp
ss
ljmp
gs
pop
or
cmc
push
aad
rolb
sbb
push
pop
arpl
mov
fbstp
repz
inc
subb
ret
incl
and
adc
ds
fwait
mov
fcompl
sub
fldenv
inc
scas
popf
cmc
lcall
mov
in
shlb
stos
push
mov
add
push
fdivl
arpl
popa
fidivl
std
xchg
fs
repnz
mov
js
xchg
jnp
jge
icebp
mov
sub
leave
stos
xchg
push
flds
jnp
inc
sbb
dec
adc
xor
push
dec
mov
into
and
jns
pop
or
cmpsl
mov
subb
movl
jmp
gs
ret
jp
dec
lret
or
loop
sbb
add
cmp
or
daa
arpl
negl
idiv
dec
cwtl
and
outsl
aam
push
pushf
mov
inc
pusha
xor
mov
lds
fcompl
cld
aaa
jo
add
fimull
test
sub
clc
jmp
push
std
cmpsl
iret
rorl
cmp
sbb
cltd
insl
mov
out
or
mov
adc
dec
mov
stc
sahf
dec
sub
push
cmpsl
pop
call
mov
popa
jb
in
jg
mov
test
aad
rcrl
inc
stos
dec
mov
or
sub
loopne
push
fmull
addb
add
mov
pop
sub
mov
xor
fsubl
add
aas
jo
inc
es
xlat
daa
pop
pop
test
mov
scas
sbb
fdivr
sub
aas
inc
cltd
ret
and
aam
sbb
in
adc
push
mov
xchg
push
test
sub
ja
sbb
lods
inc
rclb
xlat
jnp
mov
push
ljmp
sub
aas
pop
test
xor
cs
mov
jmp
push
scas
fiaddl
std
lret
popa
push
addr16
pop
jle
mov
adc
and
or
sbb
leave
shrl
mov
addr16
sub
add
jp
pop
inc
stos
add
aam
and
sbb
lret
movsb
or
daa
push
repz
cld
jge
jmp
fistl
jp
fdivs
or
xchg
mov
push
add
xor
not
insb
inc
jno
mov
add
fwait
ret
jae
fimull
xor
js
or
push
adc
pop
lret
pop
and
out
mov
arpl
imul
lock
js
mov
pop
add
jmp
jnp
cltd
insb
movsl
test
xchg
lods
mov
out
andl
mov
out
jno
rcrb
in
mov
cld
leave
mov
cmpsb
mov
push
mov
fucom
lds
fneni(8087
adc
popa
nop
sub
mov
xchg
pop
xlat
and
ds
push
jo
cmp
or
rcrl
stos
in
mov
cmovnp
mov
add
mov
stos
add
dec
addl
and
imul
test
push
stos
mov
dec
xor
mov
cs
adc
pushf
pop
fsub
xor
adc
add
shlb
mov
out
aam
sarb
out
jl
inc
jo
cli
adc
mov
jns
stc
int3
add
cmp
jecxz
push
add
insl
call
test
add
hlt
xchg
test
mov
testl
dec
mov
es
inc
sub
mov
std
test
cltd
and
lods
and
fdivl
loopne
mov
stc
repnz
jb
mov
into
push
adc
add
cmp
lods
dec
fs
mov
scas
jo
xor
movsl
and
xor
std
dec
xchg
inc
int
or
xchg
inc
imul
pop
add
aam
sub
xchg
dec
cld
push
mov
lcall
xchg
cmp
mov
cs
inc
test
fisubrs
dec
shlb
xchg
cld
jp
fidivrl
push
xchg
mul
insl
pop
or
push
sub
orl
push
sbb
dec
stc
add
xor
sub
push
xchg
xchg
dec
mov
sub
adc
into
scas
je
loop
mulb
jecxz
xor
sub
icebp
fcomps
and
inc
aam
pop
mov
push
xor
out
and
jp
push
mov
push
popl
loop
out
push
adc
mov
dec
cmp
jb
pop
inc
push
inc
out
or
cli
mov
cmc
jns
mov
test
daa
and
cmpsl
mov
ffree
jmp
cld
test
ds
in
adc
cli
cltd
and
or
cli
ljmp
stos
xchg
popa
or
sub
adc
jne
cmp
fldenv
mov
cmp
lods
lret
loopne
shrl
loope
aas
data16
les
enter
mov
add
cwtl
adc
call
pop
inc
in
insb
cld
lods
loopne
loopne
adc
insb
out
pop
xlat
out
pushf
fwait
dec
mov
cmp
dec
mov
pop
in
cmpsb
testl
ja
lock
xchg
dec
cmp
movsl
xchg
or
and
das
cmp
std
les
addb
gs
xchg
hlt
leave
jne
jle
jae
sbb
out
mov
in
mov
imul
test
jae
shrb
mov
jne
pop
aas
xor
pop
jl
lods
pop
mov
mov
popa
loop
sbb
dec
jns
enter
adcl
xchg
out
jno
sbb
add
dec
sbb
xor
cs
xor
cmp
ljmp
xchg
or
lcall
aam
fnstsw
stos
pop
and
les
xlat
imul
fdivr
mov
adc
push
sbb
adc
lds
scas
enter
sub
cmp
ja
fisubrl
loope
push
mov
bound
mov
mov
jg
pusha
jg
subb
fsubrl
mov
mov
pop
int
das
sbb
js
mov
mov
loopne
testl
out
stos
pop
adc
pushl
and
dec
subb
incl
xchg
in
add
in
stc
pop
jb
in
xchg
lods
sub
dec
mov
int3
sbb
test
imul
adc
fxch
push
out
dec
and
mov
xor
notl
xchg
sub
lea
call
subb
or
sub
mov
pop
jecxz
xchg
inc
push
xor
or
mov
dec
sub
das
sub
cld
add
inc
pop
fstps
ds
push
fidivrl
test
rcll
push
cmp
push
push
loop
leave
je
mov
mov
push
pusha
adc
lret
push
popf
add
dec
jne
pop
repnz
lcall
stc
ss
xor
mov
or
xchg
orb
mov
jl
mov
call
lahf
xor
mov
inc
push
add
jmp
outsl
inc
add
loopne
pop
test
je
aam
mov
rcrl
mov
xor
inc
adc
mov
mov
bound
push
out
jp
xor
movzbl
es
xchg
mov
mov
js
jns
xorb
imul
in
cmp
pop
aas
aas
mov
outsl
test
and
fwait
or
xor
push
cmp
xorl
lahf
lock
imul
das
sub
pop
js
or
add
jmp
and
or
sub
lock
stc
mov
aam
or
push
bnd
jge
lods
pop
clc
gs
loop
xor
jae
dec
xlat
out
lahf
ja
outsb
insl
push
or
xorl
bound
repz
sbb
adc
lret
and
cmp
sbb
lahf
push
push
dec
cmp
mov
imul
pop
mov
call
shll
pusha
cmp
in
dec
mov
pop
inc
or
cld
mov
icebp
jp
repnz
ja
mov
scas
fistpl
cmp
pop
mov
outsb
inc
pop
scas
inc
mov
orl
out
xchg
jecxz
inc
iret
rcll
push
rorl
daa
inc
adc
fmul
adc
les
adc
push
inc
mov
sub
fsubr
jmp
cs
in
inc
aad
xchg
sbb
cmp
push
dec
inc
inc
in
ss
mov
pop
aad
jb
ror
popf
jg
mov
lahf
pop
shr
mov
xor
mov
add
jae
addl
test
scas
rclb
insb
out
imul
sbb
int
fimull
aas
fsubr
cld
mov
ja
inc
mov
dec
dec
int
dec
roll
mov
sub
add
pop
test
inc
addr16
dec
loope
add
lret
fstps
xchg
mov
out
inc
out
jecxz
jl
cmp
or
xor
jp
bound
pop
out
mov
nop
repz
and
lcall
push
lret
adc
mul
shlb
unpcklps
lds
sub
repnz
mov
sbb
sub
test
cmpsb
and
and
icebp
mov
mov
xchg
out
mov
aad
shll
int
adc
jle
jns
cmpsl
dec
sahf
dec
in
mov
rolb
addr16
pop
mov
mov
inc
lock
out
int3
je
fabs
pop
shr
lret
pop
imul
hlt
xchg
mov
test
test
dec
int
mov
aaa
xchg
lock
pop
rcr
push
test
and
mov
sub
inc
adc
xor
sbb
mov
jl
aas
std
js
xlat
in
inc
xchg
add
jb
jne
les
jo
jo
jno
out
in
imulw
lods
ret
dec
arpl
repz
push
xor
add
lods
adc
sub
add
push
push
inc
mov
cld
push
adc
push
addr16
cmp
sub
mov
fisubl
pop
jb
rep
or
ja
je
mov
inc
leave
out
fstp
or
xor
push
in
cmpsl
mov
sub
sarl
push
jp
mov
shrb
out
jmp
loope
pusha
dec
in
add
mov
jg
shrl
push
mov
add
pop
rorb
xchg
fstps
pop
and
xor
sub
jmp
sha256msg1
cmp
sub
xchg
xchg
dec
mov
pop
sbbl
xor
popf
nop
out
divb
xchg
adc
cmpsl
adcl
mov
jb
es
sub
adc
pop
divb
mov
hlt
push
mov
scas
std
cmp
adc
sbb
inc
push
pop
cs
test
pop
push
adc
inc
mov
stos
ds
aam
mov
pushf
cmp
sub
jae
loopne
adc
push
xchg
jne
sti
or
into
lahf
fadd
iret
dec
movsb
xchg
cmp
pop
repnz
imul
rorb
sbb
cmpsb
pop
mov
push
push
push
add
mov
mov
iret
or
lret
arpl
push
cmp
mov
lcall
imul
adc
sub
jl
mov
dec
mov
lahf
mov
cltd
pushf
ds
mov
fdivrs
sub
adc
xchg
mov
jge
adc
dec
aaa
cmp
test
cmpl
mov
jne
in
xchg
push
scas
data16
fcom
pop
adc
push
jle
add
xor
sbb
inc
test
and
loope
push
dec
mov
adc
jge
pop
mov
or
inc
mov
je
and
add
dec
mov
mov
stos
adc
mov
jl
and
push
je
sbb
push
movsl
xor
sahf
lahf
add
adc
popa
pop
pop
mov
jge
jecxz
sub
mov
jns
negb
push
lahf
mov
popa
xlat
rcrb
cmp
dec
aad
inc
outsl
sub
mov
rolb
daa
popa
sbb
cmp
cltd
mov
lock
out
cmp
or
cmp
lcall
cmpsl
insb
pop
int3
shrb
hlt
xor
fdivrl
jne
xchg
bound
pop
lods
loopne
push
pushf
sub
sbb
lock
adc
mov
imul
fistpll
dec
sbb
call
int
push
call
xchg
cmpsl
dec
jns
ljmp
xor
cmpsb
pop
cltd
fsubs
mov
xchg
mov
aaa
inc
in
or
or
rolb
sub
xchg
sti
or
imulb
imul
jnp
xchg
jge
sbb
push
fs
ret
cmc
sub
ret
xchg
and
and
push
popa
cld
gs
insl
sbb
add
je
pop
popa
cwtl
xchg
leave
pop
ja
test
sub
sub
dec
mov
pop
mov
dec
lock
xchg
leave
xchg
or
aas
jmp
cmp
in
lods
ror
sbb
jo
dec
pushf
jl
add
daa
test
clc
mov
repnz
rorb
rdpmc
loope
fsubrl
push
dec
lock
test
push
adc
lret
inc
shll
hlt
test
rorl
aam
ja
nop
aaa
ljmp
data16
push
ss
mov
sbb
jae
push
pop
pop
sub
js
in
push
mov
lret
leave
push
inc
arpl
lcall
jge
pop
push
int
in
mov
or
cmp
es
sub
inc
mov
and
mov
fidivs
lods
mov
insl
push
push
mov
sbb
inc
pushf
cmp
jg
hlt
pop
call
ljmp
add
test
aas
pandn
push
movsb
inc
popf
cmc
test
stc
imul
out
pop
adc
fistl
mov
cmp
into
aam
mov
ds
negl
inc
mull
sub
sub
and
sbb
cltd
data16
dec
mov
pop
sub
mov
cmp
cld
push
jno
imul
lods
cmpsb
push
add
enter
add
sub
sub
fsubrs
aas
movsb
sbb
sbbb
paddsb
shrb
or
cmc
xor
mov
mov
sub
inc
fcompl
adc
push
xor
push
mov
ficoms
hlt
inc
xor
xor
mov
stos
loope
repz
jb
cmp
pop
pop
mov
hlt
lret
mov
ljmp
data16
repz
sub
shlb
jbe
adcl
mov
lcall
cmp
lods
mulb
add
and
lds
pusha
gs
push
or
rcrl
ficomps
pop
imulb
push
cmp
es
mov
mov
cli
mov
leave
jae
jns
ss
fisttpl
add
vmread
mov
cmpl
int3
or
les
jae
sbb
dec
or
sub
insb
dec
lret
stos
pop
pop
jp
sbb
fsubrl
sbb
iret
push
sbb
int3
or
jo
sub
lds
int3
pop
out
lods
mov
sub
mov
push
jg
cltd
or
mov
pop
test
ret
mov
inc
pusha
xor
mov
xchg
xor
scas
or
test
inc
adc
sub
mov
les
cltd
xorb
mov
xchg
fiaddl
sub
cmp
aas
jo
push
mov
cmp
comiss
sbb
xor
rolb
xchg
inc
push
outsl
xor
jge
repz
leave
cmp
imul
lahf
lods
lahf
popf
std
pop
xlat
shlb
fsubrl
xor
push
mov
mov
movsb
jnp
dec
mov
in
or
jle
pop
dec
scas
xor
mov
js
movl
int
roll
cmpsl
test
jo
insb
sbb
cmp
inc
pop
push
xchg
mov
inc
mov
dec
adc
jge
sub
mov
pop
push
ja
aam
inc
movsb
sbb
jle
pop
stc
push
xchg
in
push
mov
dec
sub
cmpsb
aas
adc
jbe
add
push
gs
adc
push
aam
das
jp
dec
add
rclb
int
cwtl
jle
add
mov
imul
movsl
mov
pop
sti
and
cwtl
in
fldenv
sbbl
neg
gs
hlt
ret
mov
sub
shrb
bound
loop
lea
push
cld
mov
jle
test
mov
jno
pop
push
mov
jmp
pop
or
xchg
pushf
cmp
jo
ret
mov
xlat
fistpl
add
fisttps
inc
mov
pop
icebp
in
inc
dec
sub
inc
sbb
subl
push
aas
cmp
add
mov
sarl
outsb
fcoms
loop
jb
ljmp
lea
icebp
js
cmp
ficomps
pop
sbb
cltd
ss
jo
lcall
sarb
cltd
jmp
gs
inc
and
lods
inc
dec
push
ss
push
out
and
insb
push
cwtl
js
fs
in
fnstcw
sbb
adc
lds
outsl
ds
sbb
mov
add
insl
push
stc
adc
jl
cs
rclb
lods
cltd
push
pop
add
ljmp
pop
jp
insl
inc
and
mov
mov
inc
sbb
imul
inc
lods
xor
test
shll
xor
pop
lret
pop
mov
jl
hlt
jo
test
bsf
mov
inc
and
dec
and
sti
dec
mov
sub
fdivl
and
movsl
mov
leave
lods
push
stc
aaa
lret
xchg
into
mov
pop
and
xchg
loop
ja
mov
add
aad
mov
mov
call
mov
ss
pop
and
mov
repz
jb
lret
int
notl
insl
sidtl
dec
sub
ss
clc
xor
sbbl
mov
dec
sbb
lds
adc
mov
lock
add
outsl
fcoml
cmp
lahf
add
push
stos
enter
adc
inc
jae
push
or
xchg
test
sbb
rcll
lret
xchg
jbe
xchg
sbb
jmp
stc
ret
aaa
movsb
in
lahf
shr
pusha
adc
xchg
xor
xor
je
add
jp
scas
scas
xchg
dec
mov
adc
loopne
insb
or
xor
xchg
add
out
jns
inc
bound
aad
xor
xchg
gs
ds
inc
add
rcl
mov
jne
outsl
mov
cmp
out
mov
jbe
inc
xchg
push
jnp
es
sbb
and
mov
lret
popf
or
cmp
test
movsb
cld
icebp
sbb
xchg
cltd
mov
and
sub
adc
sbb
lret
inc
lock
mov
clc
push
test
jne
decb
sbb
enter
dec
test
movsb
out
out
enter
jle
fwait
sbb
push
sti
jbe
sub
cmpsl
mov
insb
std
or
dec
repnz
sub
je
mov
test
sti
mov
dec
or
xor
cwtl
xor
xchg
stos
add
in
in
stos
xor
pop
inc
dec
aaa
cwtl
pop
xor
repnz
cld
cmp
mov
sahf
movsb
imull
pop
shrb
mov
or
pop
in
pop
or
adc
cmc
push
arpl
inc
mov
arpl
xor
outsl
mov
mov
cmp
lahf
mov
in
nop
lahf
out
add
xor
cmp
pushf
dec
xor
add
or
mov
ret
mov
loope
imul
sub
mov
push
enter
daa
stos
add
aas
inc
jmp
push
fidivl
mov
sub
pop
inc
subl
jo
jle
mov
add
pop
pop
dec
jo
cltd
dec
cld
hlt
xchg
inc
fnstenv
dec
stc
fdivs
sahf
lds
lret
in
add
cltd
fldenv
int3
dec
bound
adc
les
loopne
aaa
stos
rcl
pop
lds
mov
sbb
cltd
sbb
push
xlat
fmul
pop
jg
or
push
testl
mov
stos
sahf
dec
ret
mov
mov
or
into
or
movsl
out
pop
clc
pop
add
lahf
push
stos
mov
das
sbb
sbb
jb
pop
out
add
pop
xor
xorb
mov
fwait
xchg
scas
cmpsb
mov
mov
daa
popw
test
jl
xor
test
psubusw
mov
push
outsb
push
mov
mov
adc
nop
mov
add
mov
popa
lahf
jns
xor
xchg
fcoml
and
das
sub
ret
cmpsl
ljmp
mov
mov
mov
pop
xchg
add
lret
jb
hlt
nop
loope
and
ss
popf
xchg
sub
adc
fldt
cmp
call
and
out
pop
cld
add
std
mov
mov
pushf
push
popa
mov
mov
mul
repnz
lds
sub
cmpsb
popa
cmpsl
das
movsb
or
add
jo
xor
push
mov
pop
out
pop
mov
outsb
adc
mov
into
mov
push
in
adc
lods
fwait
inc
mov
sti
filds
push
lret
lret
mov
mov
cmpsl
int3
je
xor
outsl
and
mov
mov
lods
lea
loope
push
ret
packuswb
inc
push
sbb
push
push
pop
repz
sbb
sbb
push
push
ljmp
adc
mov
mov
mov
adc
cli
lret
lcall
jmp
jmp
sub
insl
loope
loop
inc
and
and
cld
cmp
in
mov
xchg
imul
popf
data16
or
lcall
xor
mov
lds
negb
push
and
int
inc
lcall
stc
lea
imul
mov
xor
add
mov
xchg
sub
pop
mov
push
dec
pop
insb
push
fcomi
in
flds
repnz
adc
jb
pop
mov
es
btr
cwtl
sub
mov
insl
cli
jbe
adc
popa
fs
sub
inc
inc
mov
shll
cmpsl
repz
xchg
es
aaa
add
mov
sbb
inc
push
cmp
dec
add
sbb
adc
or
push
add
inc
lds
adc
fisubrs
jne
xor
mov
repnz
jnp
cli
fiaddl
pop
push
outsl
mov
jmp
fidivl
add
lea
cmc
fwait
and
cmpsb
pop
loopne
add
jnp
xor
mov
cwtl
inc
insl
adcl
xchg
loopne
js
dec
test
je
jnp
xor
cld
mov
xor
push
enter
sub
inc
or
int3
test
or
jmp
fisubrl
sub
sbb
mov
sbb
dec
je
lret
clc
movb
pop
jnp
gs
call
or
js
lods
imul
inc
jb
mov
mov
lret
mov
lahf
dec
jo
xchg
addr16
repz
bound
inc
arpl
sbb
push
push
fldt
jb
nop
mov
mov
int3
idivl
rcrb
cmp
or
stos
dec
cwtl
pop
ds
add
iret
sub
std
pop
insb
jecxz
loopne
and
scas
and
lcall
shrl
icebp
les
sub
sub
cmp
outsl
scas
sub
push
lods
gs
cmc
stos
repnz
orb
lock
lret
or
int
not
jmp
dec
inc
inc
fisttps
repnz
push
cld
adc
mov
sahf
dec
pop
imul
push
xchg
mov
nop
addb
das
imul
mov
jae
mov
jg
out
add
pusha
inc
push
loopne
enter
addr16
sub
divb
rcl
jmp
out
jo
push
roll
cltd
add
pop
out
or
scas
mov
les
es
inc
popf
cmp
add
loopne
and
xor
lahf
ss
loop
cltd
sub
sbb
fistl
inc
stos
pop
pusha
cli
jge
aam
test
push
movsb
inc
push
ljmp
pop
fildl
test
cmp
rol
mov
adc
xchg
mov
mov
out
mov
jle
push
lret
sarb
test
arpl
loopne
jne
and
inc
cmp
cmp
cmp
dec
pop
mov
lods
jbe
pushf
add
push
sub
sub
iret
and
cltd
out
mov
rorb
stos
flds
pop
xchg
call
mov
in
dec
cmpb
mov
addb
stos
sti
clc
or
push
dec
cltd
aam
inc
in
jge
imul
mov
adcb
xor
nop
add
xor
bound
lock
or
jg
push
roll
sub
lods
adc
inc
push
fcmovne
sbb
rcrl
inc
sbb
cld
loope
int
xchg
imul
les
xchg
les
lret
aaa
xor
dec
cmp
push
or
fisubs
push
mov
test
clc
mov
sarl
dec
movsl
push
jno
aad
std
mov
xchg
jle
inc
mov
shr
cli
push
mov
mov
cmp
out
mov
aaa
pop
insb
mov
fidivrl
mov
sbb
test
mov
mov
mov
clc
out
addr16
insl
pop
scas
jnp
add
lret
rcrb
add
pop
or
rolb
fmull
push
xor
mov
jne
dec
mov
repz
push
out
lahf
adc
lock
bnd
je,pt
sub
jne
fsubs
xor
xlat
gs
and
or
add
jno
pop
mov
xlat
loop
aaa
ss
push
sub
rcl
fs
push
lahf
inc
rolb
scas
mov
loop
pop
or
sbb
fldenv
or
lret
cli
fidivl
xchg
and
xor
rorl
or
outsb
pop
jecxz
dec
insb
mov
cmpsb
lods
inc
into
jge
jb
push
mov
mov
mov
dec
clc
push
xchg
sbb
or
por
ss
mov
in
pop
rorl
insb
fiadds
cmp
test
and
fists
pop
mov
ljmp
xor
add
data16
jbe
in
imul
add
xor
pop
imul
aam
fs
sbb
dec
outsl
push
mov
js
jb
scas
arpl
ljmp
or
jb,pt
sbb
pop
int
jno
daa
jne
insl
rcll
gs
leave
shrl
lea
bound
xchg
or
cmp
je
jmp
mov
sbb
hlt
sub
and
popa
out
lahf
jp
fisttpl
push
mull
dec
aam
mov
jbe
sbb
outsb
lods
xor
fsubrs
pusha
rorb
dec
movb
push
sub
fildl
mov
inc
and
outsl
jbe
sbb
pop
jp
in
jo
push
addr16
ss
out
jne
lock
push
adc
stc
in
lret
aad
xor
pop
sar
pop
ficoms
gs
pop
rolb
mov
dec
sbb
int
jno
in
test
leave
in
sbb
push
loope
dec
cmp
or
in
cmc
mov
popa
fwait
xchg
pop
jae
lret
lret
adc
xor
pop
pop
pushf
clc
dec
lcall
or
mov
cmp
xor
js
sbb
mov
cmpsl
or
xchg
std
stos
adc
fcoml
add
int3
stos
ss
xchg
dec
add
fildll
int3
mov
in
jecxz
movsb
sbb
or
pusha
xor
in
stos
mov
jne
rclb
add
and
jb
lock
jecxz
inc
pop
cmp
or
shrl
or
aam
repz
mov
leave
sub
xchg
push
outsl
xor
add
jle
dec
lock
jae
aam
in
aam
xchg
repnz
insl
jmp
or
adcb
xadd
std
add
in
add
mov
jl
mov
out
inc
ror
xchg
dec
ja
arpl
jecxz
outsl
mov
push
cmc
and
and
add
loope
adc
icebp
out
mov
out
sub
xor
cmp
test
dec
xchg
notl
xor
jp
adc
arpl
and
inc
addr16
mov
ss
inc
repz
mov
mov
call
mov
pop
lods
mov
and
testl
and
iret
dec
es
fadd
add
test
push
ret
pushf
adc
cwtl
movsb
pop
in
loopne
lahf
xchg
xor
pop
cmpsl
divb
jae
ret
cli
jmp
mov
cltd
fildl
mov
ss
and
push
mov
push
out
mov
sbb
mov
xor
push
push
push
add
jmp
ret
jp
test
dec
push
jg
jle
push
movsb
insl
aas
rolb
call
or
cwtl
lods
pop
sbb
push
nopl
mov
fstl
sarl
call
jmp
fwait
cld
outsl
mov
xchg
push
push
je
fistl
movsl
fwait
sbb
lahf
data16
popa
mov
divps
shlb
mov
push
enter
push
xor
clc
sbb
jo
xchg
mov
data16
jne
cmpsl
aad
rcl
scas
popf
mov
loop
lea
addb
adc
add
stos
jne
mov
lea
ret
mov
push
clc
data16
adc
les
imul
jns
or
push
xlat
aam
xchg
mov
push
add
stc
cmp
mov
cmpsl
fcmovnbe
and
rcrl
bound
insb
popf
push
iret
std
sub
dec
pop
or
fisttpll
mov
sub
aas
adc
daa
in
and
out
fmull
ljmp
jns
in
cmp
mov
or
nop
add
or
or
jl
stc
ficoms
mov
xchg
xchg
hlt
sub
mov
pushf
cmp
ds
add
add
push
mov
xor
aas
add
mov
ret
imull
cmpsb
cmc
stc
movsl
stos
or
mov
jecxz
les
aam
dec
je
scas
cs
imul
cmpsb
icebp
rcrb
ljmp
test
xor
pop
push
push
mov
push
push
mov
pop
leave
int
mov
and
sbb
mov
in
xchg
rcl
lock
cmp
dec
push
dec
jg
testl
dec
lods
pop
loope
call
iret
icebp
cmp
div
pop
cmc
push
out
js
lea
lcall
int3
jns
lock
mov
incb
dec
fdivr
movsb
add
nop
jns
push
fiaddl
in
addr16
out
dec
xchg
mov
lahf
shll
data16
rcrl
iret
push
lcall
rol
test
out
cs
shrl
movsl
notb
pop
xchg
in
subb
ficomps
mov
sbb
mov
fisttpl
sahf
fwait
mov
cmp
sbb
xchg
loope
imul
push
cli
xchg
pcmpeqd
cmp
pusha
scas
in
add
test
stos
add
mov
xlat
adc
add
sbb
popa
sub
xchg
push
or
dec
push
inc
xor
mov
xchg
xchg
jb
pop
pop
mov
pop
sbb
mov
adc
int3
rorl
testl
fdivp
jb
lcall
mov
cmpb
fbld
lcall
aam
pop
mov
mov
inc
push
push
jae
jnp
add
test
loopne
or
lret
jg
xor
mov
stc
imul
stos
cwtl
dec
test
std
fdivp
xchg
dec
lcall
or
push
mov
loop
sub
push
xchg
in
mov
dec
xchg
std
xbegin
xchg
adc
test
sub
addr16
push
pop
sbb
popf
xchg
or
ret
jne
ret
adc
out
dec
lcall
orb
fcmovnbe
inc
outsl
and
add
repnz
push
out
ds
inc
cmp
out
movsb
and
inc
xchg
fiaddl
pop
lahf
imul
and
out
adc
leave
and
or
sub
movsl
push
lea
xchg
pop
push
adcw
push
les
jge
jl
xchg
xor
jl
sarb
ret
adc
sub
sbb
mov
pop
fists
ja
mov
inc
mov
out
das
add
push
call
out
sub
hlt
std
scas
xor
fistl
mov
cmp
sahf
adc
mov
ss
insl
sbb
sbb
cmp
cmp
pop
test
shrl
pop
cmp
xor
sbb
mov
and
add
jge
push
pusha
or
mov
pop
mov
into
sahf
xchg
lret
fists
mov
inc
insl
lea
lods
or
cmpl
xchg
clc
shlb
jae
push
pop
mov
std
xor
aad
adc
fiadds
addr16
adc
or
cmpl
mov
and
push
adc
dec
xchg
jle
pushf
mov
mov
out
pop
xchg
push
scas
jbe
imul
inc
sbb
xchg
rclb
addr16
and
lods
jae
loopne
and
test
jecxz
mov
jae
mov
inc
sub
in
mov
loop
pop
mov
stc
sbb
dec
push
ja
add
shll
scas
mov
push
outsb
out
out
movsl
sbbl
ds
xchg
lahf
inc
xchg
in
out
int
xchg
or
dec
sbb
loope
aaa
loop
enter
jle
jecxz
in
cli
sbb
mov
xchg
rorb
pop
add
cmp
mov
jmp
sbb
mov
test
and
xchg
inc
and
dec
ss
nop
roll
mov
or
cmp
jecxz
ds
lods
aaa
mov
jg
fidivrs
ror
stos
pop
mov
cmpsl
dec
push
jg
push
sbb
stos
popf
cmp
mov
jnp
sub
insb
or
out
pop
mov
add
scas
adc
inc
clc
nop
in
out
push
pop
imul
push
sbb
aam
xchg
xchg
cmpsb
mov
popf
loope
or
xchg
popf
cmp
outsb
pusha
rcrb
clc
jo
mov
sahf
jbe
fwait
mov
outsl
inc
cmc
je
fcoml
pop
inc
lcall
cmpb
aas
push
lcall
xchg
cli
or
mov
sbb
or
inc
popa
les
int3
out
jns
sbb
xchg
jg
popa
pop
int
xchg
add
jge
sbb
in
int3
je
stos
test
or
push
jl
es
add
js
pop
sbb
jne
cmc
pusha
mov
ret
lcall
stos
push
mov
push
arpl
push
xchg
cltd
cmp
stos
rcr
mov
sbb
adc
push
pushf
and
fnsave
cs
into
in
cmp
and
insb
xchg
xchg
shlb
push
popa
lea
sbb
xchg
jo
cmpsl
in
pop
push
scas
shrb
cmpsb
mov
js
dec
pop
inc
or
inc
shll
test
icebp
xchg
icebp
test
and
or
push
add
in
xor
stc
xchg
inc
data16
lcall
inc
dec
lods
sub
jle
loope
jnp
push
lahf
arpl
mov
or
xor
cmp
sub
mov
stos
je
or
cmpsb
mov
ljmp
ret
sub
jbe
push
jmp
jle
mov
sub
push
rclb
xchg
jo
leave
or
and
xor
and
rcr
add
mov
test
imul
popa
push
and
mov
inc
sub
aaa
out
adc
pop
pop
aas
push
les
pop
or
push
cwtl
pop
rcl
icebp
cmp
pop
test
and
add
and
es
addb
jp
mov
mov
or
cli
dec
mov
add
aam
push
addr16
jo
cli
push
jecxz,pt
iret
sub
mov
xchg
addb
inc
xlat
std
mov
or
fstpl
push
adc
jb
aas
jmp
data16
and
out
cs
add
fldl
inc
inc
add
mov
jmp
sbb
sbb
fidivl
pop
into
jp
lcall
fcompl
sub
and
ret
imul
cmc
cs
jge
sti
icebp
nop
xchg
mov
cmp
pusha
js,pt
adc
aad
imulb
fidivrs
ss
aaa
push
test
adc
stos
shlb
lock
int
push
push
adc
shl
std
sub
mov
movsb
adc
aaa
inc
xchg
xchg
pop
popf
repnz
gs
ljmp
xor
or
mov
xor
mov
sbb
fs
cld
cltd
mov
xchg
push
jecxz
int3
int
xchg
mov
aad
lcall
lods
xor
cli
inc
sbb
ret
jo
fsqrt
sbb
lods
out
jle
out
xchg
mov
xchg
xor
jb
xchg
dec
shrl
dec
pushf
sbb
aad
aad
lea
xchg
cmp
xchg
imul
xchg
mov
adc
fldcw
popf
dec
adc
mov
mov
sub
jp
mov
cmc
jbe
jo
hlt
sub
pop
ljmp
cmc
fwait
fs
pop
jo
dec
xor
inc
mov
and
fwait
and
lea
pop
xchg
jle
jmp
adc
mov
mov
mov
or
idivb
adcb
outsl
inc
iret
pop
out
inc
inc
xchg
and
insb
mov
jg
adc
fbld
mov
or
js
sub
stos
jmp
notb
into
lahf
rorl
jb
inc
sub
mov
xchg
and
adc
pop
mov
sbb
pop
inc
add
repnz
cmc
jl
inc
out
es
pop
xchg
jae
xor
mov
dec
sub
mov
sarl
rcrl
fadds
mov
xor
mov
jns
imul
or
cmp
jge
mov
sub
fxch
fs
or
mov
cmp
push
das
inc
loope
mov
popa
inc
loop
inc
loopne
pusha
into
and
jl
stos
fwait
stos
cmpsb
jae
mov
cmp
les
stc
lahf
mov
xor
xchg
push
add
xor
mov
xchg
cmpsl
sarl
popf
sub
sbb
fistl
jecxz
push
outsl
cld
xchg
ja
fwait
or
in
dec
and
mov
mov
cld
jl
in
rcll
popa
jo
cmpsl
dec
les
icebp
sub
mov
inc
mov
push
or
andl
loope
adc
mul
roll
lock
into
imul
mov
and
mov
xlat
xchg
push
arpl
mov
adc
mov
scas
xchg
pushf
repz
xchg
clc
jne
rorl
sub
push
aaa
outsl
mov
jg
lcall
cmp
push
repnz
jae
insl
mov
and
lret
lahf
popf
jno
les
dec
pop
cli
cmp
icebp
add
mov
jge
aam
push
les
lcall
cmpsb
js
jge
in
arpl
xchg
cld
mov
mov
dec
mov
stos
lret
inc
in
popf
test
test
in
dec
lret
sub
push
out
xchg
pop
pop
outsl
mov
cmp
add
pop
inc
and
cltd
iret
or
pop
adc
sbb
lcall
mov
adc
adc
pop
dec
in
xchg
push
and
push
sbb
push
inc
js
mov
das
dec
addr16
add
cmp
stc
pop
dec
cmp
in
xlat
or
jl
test
pop
pop
sbb
out
into
pop
jge
jmp
decl
push
std
ficoms
stos
push
orl
movsl
fwait
ja
cmpsl
ret
lcall
jb
adc
sbb
cmp
mov
jmp
sub
negl
push
aam
test
cs
cmp
pop
push
and
mov
cmp
jmp
and
jg
xorb
xor
cmp
out
dec
fmul
nop
xchg
add
es
or
push
popa
fsubrs
xor
sub
pop
lods
cs
add
mov
inc
or
aaa
jl
cmc
js
cli
test
jno
cli
sub
or
sahf
outsb
inc
mov
jle
fucom
cld
xchg
hlt
out
sbb
mov
cmpsl
aaa
movsl
in
add
cmp
mov
lret
cltd
movsb
call
rcrl
js
imul
ljmp
sbb
sub
push
shrl
ja
fsqrt
daa
and
pushl
lods
sbb
fnstsw
sbb
push
sarb
push
lret
xchg
dec
mov
push
push
push
lret
adc
sub
mov
loop
in
insb
mov
add
aaa
jne
cmp
aas
xor
out
hlt
out
xor
sub
iret
adc
cmp
push
push
ljmp
pop
mov
jo
bound
add
pandn
xchg
out
sbb
mov
pop
lcall
sti
mov
call
sbb
mov
push
xchg
ret
and
and
shll
xchg
cmp
add
fiaddl
sbb
cmp
outsb
xchg
lods
sub
sbb
in
inc
add
dec
movsb
mov
gs
adc
push
xor
mov
leave
push
add
stos
push
leave
lret
or
jb
xor
cmp
in
imul
gs
pop
lcall
pop
inc
push
push
dec
add
lods
jecxz
cmc
sbb
fmuls
sub
aaa
adc
or
mov
sbb
mov
movlps
clc
out
in
cld
in
mov
in
aas
repnz
sbbb
jne
popa
mov
hlt
fmull
sarb
inc
and
leave
jl
xor
sti
cli
xchg
sbb
push
adc
or
fwait
adc
push
daa
in
test
and
add
xchg
scas
movl
mov
mov
addl
stc
enter
push
jecxz
aad
out
gs
pop
sti
in
adc
clc
shr
xor
repz
repz
push
sbb
shll
clc
xor
mov
cmp
xchg
mov
push
add
mov
mov
pop
mov
dec
fwait
pop
dec
in
test
and
dec
lret
popf
or
adc
js
out
push
sbb
push
inc
jle
xchg
sbb
cmp
lahf
movsl
test
shrb
inc
lds
inc
xor
ss
mov
cmpsl
jns
mov
js
adcl
paddusb
mov
sbb
mull
nop
ljmp
dec
cwtl
inc
sub
imul
lods
fnstenv
sub
adc
cmp
fnsave
xchg
xor
pop
xchg
test
popa
add
dec
push
add
test
pop
loope
dec
mov
mov
mov
in
cmp
out
out
sub
dec
or
and
xchg
jmp
xlat
ds
jmp
cmpsl
pop
xor
fsubs
cmc
or
je
leave
int
and
and
inc
lea
xchg
cmp
inc
out
xchg
jbe
push
or
loop
xor
fistpll
enter
cmp
jns
in
mov
mov
movsb
loop
int
sbb
fcomip
and
inc
lods
push
mov
cmp
incb
push
sbb
fdivrs
lds
jb
lea
inc
dec
mov
and
testl
dec
push
xor
mov
and
pushl
outsl
xchg
pop
jo
xor
jp
lss
test
cli
movsb
sub
cmp
stos
leave
jecxz
popf
cwtl
and
repz
add
jo
int3
sub
pop
mov
push
jle
in
in
mov
dec
add
and
mov
shr
push
mov
sub
mov
adc
xor
jl
cs
out
fbstp
xchg
push
test
dec
cmp
std
xchg
int3
pusha
cli
adc
jmp
and
xchg
inc
xlat
in
cmp
into
popl
int
fwait
das
addr16
sahf
sahf
adc
lret
dec
repz
cmc
jne
jecxz
lret
fcmovu
shll
and
mov
mov
mov
dec
ja
into
enter
push
stos
sarb
adc
sbb
adc
roll
mov
inc
fsubs
mov
pop
dec
pop
mov
lahf
and
xchg
dec
out
lods
sbb
movsl
popl
and
or
arpl
jp
jle
into
cmc
mov
lea
dec
xor
lcall
inc
mov
lods
arpl
outsl
leave
xor
pop
jae
or
push
popa
aas
adc
pop
lea
xchg
jnp
cwtl
cmc
in
addr16
pop
out
pop
aad
add
push
dec
test
cmp
stc
mov
jmp
mov
pop
scas
lock
fstpl
out
mov
arpl
jmp
and
lock
mov
popf
in
adc
jb
cmc
and
in
jg
mov
outsb
sbb
clc
mov
adc
add
aad
fnstenv
mov
push
mull
int3
test
mov
xchg
cmp
sub
sub
adc
adc
fsts
pop
daa
add
jb
or
mov
jecxz
xchg
adc
std
push
adc
loopne
mov
and
xorb
imul
cmp
push
out
adc
subl
imul
ss
addr16
jp
icebp
mov
ja
cs
dec
sahf
arpl
xor
sub
mov
icebp
pop
insb
jbe
xor
into
xchg
cmp
ja
dec
out
out
pop
insb
test
ror
fstpt
jge
dec
pusha
scas
lods
xor
in
push
and
popa
enter
divb
fisttpll
jmp
orl
mov
fmuls
mov
mov
hlt
mov
cltd
push
mov
mov
std
mov
cld
cmpsl
push
rcl
inc
test
mov
or
sbb
in
aaa
mov
mov
dec
or
sbb
nop
dec
in
cmp
push
mov
mov
lods
adc
adcb
sti
or
pushf
or
jl
xchg
cltd
icebp
pop
stos
pop
aad
xchg
loop
loopne
or
push
xor
or
popa
jbe
sahf
insl
jge
ret
in
js
dec
and
cmovg
push
loop
pop
loop
dec
dec
xor
mov
xor
adc
cwtl
pushf
roll
pop
add
rclb
scas
pop
pop
lods
and
push
xchg
inc
pop
add
add
ds
jno
fs
imul
xchg
push
ss
movhlps
fldcw
sbb
insb
and
cmp
jbe
xlat
int3
dec
int
cmpsb
push
clc
xor
xchg
fldenv
push
inc
xchg
loopne
hlt
pop
pop
push
or
mov
mov
lcall
test
mov
adc
jg
rorb
and
dec
fcoml
mov
shl
fmull
out
adc
fistl
sbbb
mov
mov
pop
sbb
mov
int
jnp
cmp
adc
pop
push
adc
mov
xor
bound
mov
dec
mov
fidivrs
dec
sbb
sbb
cmpsl
and
pop
lds
jmp
jbe
push
cs
fisubrs
fadds
push
stos
dec
push
sahf
jbe
push
hlt
arpl
cmpsl
xor
dec
mov
ja
xchg
jae,pt
lds
push
ljmp
insb
sub
sub
insl
sti
movb
iret
pushf
xlat
ljmp
mov
stc
shl
scas
rorb
fistps
mov
cs
push
cwtl
arpl
xchg
add
fidivrs
adc
lahf
pop
icebp
rorb
rclb
inc
dec
arpl
or
fildll
insb
ret
out
scas
aaa
sub
push
test
je
mov
ja
mov
movsl
cs
lahf
mov
adc
cmpsl
pop
int
int3
rorl
or
gs
loopne
in
mov
jle
adc
push
push
xchg
pop
out
pop
lahf
or
data16
iret
js
fcmovnb
rorb
insb
sbb
inc
add
cmp
cli
mul
jnp
or
sub
mov
xor
mov
ficoms
jne
dec
sbb
mov
fbld
gs
pop
sbb
fidivrs
xchg
daa
and
cmpsl
mov
inc
inc
xchg
xor
test
sub
mov
lahf
push
test
sbb
mov
xchg
ss
jle
pop
fnstsw
rol
sbb
push
lods
ret
adc
push
jmp
out
and
pop
insb
stos
cmc
sbb
adc
dec
pop
xchg
mov
adcb
mov
inc
out
sbb
jnp
inc
cmp
mov
arpl
hlt
rorl
lods
idivl
ss
and
jno
and
ljmp
and
cs
or
int3
test
sub
cmp
or
add
inc
jg
jp
cli
dec
jg
jns
lret
fildl
xchg
mov
sub
dec
fwait
mov
dec
in
cmp
movsl
dec
cmp
data16
mov
add
lret
jmp
jae
pop
in
sub
inc
leave
es
jbe
jbe
outsl
lret
xor
jae
jbe
xlat
cmp
aad
and
int3
pop
fcoml
stos
ss
int3
jb
scas
xor
int3
pusha
arpl
jo
repnz
shrb
xor
mov
cmpsl
fwait
mov
adc
jl
or
and
sub
fs
pushl
dec
ds
pop
add
sbb
mov
and
fcoms
sti
aas
lret
or
idivb
dec
movsb
enter
addl
mov
in
dec
movsb
sti
test
push
inc
inc
addr16
xchg
and
or
mov
lahf
mov
testb
sub
push
ficompl
and
push
in
into
out
cmp
out
jns
push
rcrl
jnp
inc
xchg
mov
es
aas
in
loope
sub
cmpsl
cmpsb
push
or
lea
cli
cmpsb
push
hlt
xor
stos
add
mov
mov
adc
adc
imull
test
in
xchg
lock
in
dec
pop
mov
mov
cltd
xor
jae
push
mov
sub
sub
pop
push
data16
insb
das
scas
scas
inc
jnp
roll
xor
xor
outsb
jl
dec
xor
jno
ret
fwait
stos
mov
ja
fldcw
fidivs
push
or
aas
jo
xor
push
lods
sbb
je
jg
mov
sub
fbstp
push
pop
dec
mov
inc
mov
xor
ficomps
cltd
negb
test
sbb
xor
mov
out
fcoml
pop
pop
rcl
mov
vprotw
cmp
in
out
sbb
dec
imull
sub
inc
cmp
and
add
push
inc
nop
pop
imul
mov
lods
sub
test
pop
mov
es
lods
insl
in
inc
rcrb
imul
sarl
xlat
ja
int3
es
pop
xchg
clc
pop
mov
stc
rolb
sbb
xchg
stos
cmpsb
and
int
push
hlt
and
pushf
pop
scas
xchg
ss
outsl
jge
ret
int3
jnp
in
js
out
out
dec
popa
mov
xor
divl
sarb
dec
sbbl
pusha
ljmp
arpl
out
pushf
cmp
xchg
clc
movsl
push
ja
sbb
sbb
rorl
test
or
push
mov
pop
lds
jmp
outsb
sub
push
adc
xchg
push
push
push
push
repnz
das
loop
mov
jb
lods
sbb
jle
stos
hlt
dec
jmp
pop
mov
popa
addr16
xchg
int
shlb
pop
xchg
cmp
jb
sbb
pop
pop
xor
add
das
and
push
insl
fdivr
mov
enter
sub
cmp
xor
lea
or
mov
sub
sub
and
sub
add
jp
scas
mov
add
adcb
mov
je
aaa
daa
push
fiadds
xchg
cltd
loopne
inc
fmull
mov
rorb
les
mov
pop
sub
push
push
inc
mov
push
pushf
pop
popa
scas
and
test
pop
add
pop
add
outsb
cmp
sahf
outsb
dec
push
iret
ret
sti
rol
xchg
inc
popf
mov
jne
xchg
call
and
shll
adc
arpl
pop
or
jl
jb
dec
jno
lahf
or
xchg
pop
repnz
xor
cmp
adc
sbb
scas
add
mov
jmp
xchg
add
adcl
xor
mov
loopne
xchg
mov
sub
adc
shrl
pop
or
xchg
sbb
testl
sub
fcomip
cli
jecxz
jne
inc
sbb
mov
out
shl
push
add
sub
divb
ja
jbe
movsb
iret
mov
inc
inc
pop
cmp
fsubl
mov
in
jl
jle
adc
jnp
inc
sarl
daa
sub
cmp
inc
jo
mov
lret
shlb
pushf
loopne
and
outsl
pop
lahf
ja
ds
adc
push
push
and
daa
push
hlt
ret
mov
inc
imul
add
repnz
xor
stos
and
jae
inc
mov
lock
fldl
inc
shll
xor
insb
scas
lds
test
sub
scas
cwtl
add
jmp
insb
xor
mov
xchg
push
lock
ljmp
mov
sti
lahf
test
inc
or
movsl
add
lods
xor
mov
xchg
fs
pop
push
and
ds
loope
push
push
add
adc
rclb
cwtl
pop
push
fisubs
scas
cwtl
mov
or
outsb
out
jo
and
add
roll
mov
in
cmpsb
nop
dec
push
dec
sbb
sahf
cmp
mov
mov
test
div
stc
sbb
adc
in
and
bound
cmpsl
repz
pause
push
arpl
subl
xor
pop
out
jne
jle
jbe
inc
jb
dec
repz
clc
repz
and
mov
cmp
out
subb
enter
insl
loop
pop
call
ret
lret
pop
lea
mov
dec
pop
push
sbb
mov
in
dec
push
pushf
or
push
cmpsb
jl
sub
std
fldenv
pop
pop
loope
int3
add
sub
js
addr16
mull
out
xor
outsb
addr16
mov
push
push
mov
mov
push
mov
jbe
fs
in
test
sub
jne
cltd
or
test
jb
and
mov
in
push
bound
cmp
popf
outsb
adc
insl
bound
orl
mov
xchg
leave
insb
repz
mov
mov
popf
xchg
imul
sub
jle
jno
jbe
xchg
inc
sbb
pop
mov
jg
mov
ficoms
scas
bound
scas
mov
push
jle
xor
out
jns
daa
fildl
mov
jnp
jbe
daa
sub
sub
test
cmpsb
es
imul
orl
frstor
sub
fnstenv
push
cmpb
mov
push
in
inc
and
lcall
jo
mov
mov
or
adc
dec
mov
xchg
or
fldt
scas
push
pop
xor
cs
inc
call
xor
push
xchg
imul
xchg
dec
inc
mov
mov
xchg
mov
pop
sbb
mov
jbe
lods
or
sub
ret
rorb
mov
and
es
sbb
mov
mov
mov
in
ret
test
xchg
icebp
js
xor
mov
xor
cmp
sbb
add
nop
sbb
leave
push
mov
inc
push
jae
mov
sbb
lds
inc
aaa
fsts
mov
insl
mov
adc
scas
nop
popf
mov
fcos
adc
pop
test
fnstcw
push
mov
stos
inc
push
mov
sahf
cwtl
or
hlt
sbb
xchg
cmp
pop
std
jns
push
xor
or
popa
jnp
stos
push
cwtl
ljmp
sbb
mov
test
sbb
jb
rcrl
lods
pusha
mov
pop
jg
cmpsb
xchg
inc
outsl
lods
je
mov
pop
mov
xchg
adcl
mov
jns
hlt
in
rol
sbb
mov
std
cmp
jnp
xchg
cmp
lret
mov
mov
mov
xor
rorl
or
sbb
xchg
out
push
xor
data16
int3
mov
movsl
ja
push
jae
push
xorb
cli
fsubp
and
icebp
pop
call
fs
fsubrl
rcrb
loope
sahf
cmpsb
lcall
rcr
fcmove
movb
push
jmp
int3
mov
mov
inc
in
sarl
inc
scas
add
jmp
inc
dec
fsubp
cwtl
push
mulb
mov
sbb
rorl
sti
gs
test
stos
mov
xor
sub
sbb
dec
fcompl
std
add
fwait
jge
dec
scas
jbe
cld
andb
in
jmp
loopne
pusha
cs
push
sub
mov
mov
jge
sub
dec
lds
cmpsl
rcl
out
sub
bound
popf
cltd
dec
bound
push
jne
xor
sub
push
out
and
sbb
dec
inc
jnp
mov
mov
ret
fwait
xorb
sub
stos
out
daa
mov
aas
push
dec
jo
popa
in
cmp
adc
repz
sub
jb
loopne
push
test
cmp
fsubrl
jnp
mov
or
pop
cmpsb
pusha
dec
xor
mulb
xchg
mov
incb
xchg
mov
fsub
inc
jle
or
mov
aaa
fwait
sbb
sub
mov
in
test
xchg
in
fptan
aas
xchg
shl
icebp
jg
bndldx
xchg
cwtl
mov
mov
test
js
mov
push
out
fbstp
lret
rcr
pop
cmp
cmp
or
dec
mov
mov
inc
push
out
insl
das
and
es
cli
mov
or
outsb
inc
pop
and
test
insb
cli
call
push
dec
cmp
popa
test
sub
ret
push
inc
icebp
hlt
mov
ja
pop
rorb
mov
into
nop
ret
stos
iret
orb
sbb
inc
inc
sahf
xchg
push
leave
setle
sbb
rorb
ss
pop
dec
mov
add
and
mov
xor
jmp
sahf
lret
jnp
jo
in
dec
sbbb
nop
inc
jne
push
in
fs
lods
xchg
pop
orb
push
mov
inc
sub
out
loope
adc
in
cmpsl
out
sarb
imul
gs
in
adc
xchg
add
stc
mov
and
mov
out
lods
test
ds
jp
ret
aas
in
inc
std
adc
shrb
pop
mov
cmp
xor
sub
decb
mov
adc
into
add
in
faddl
ffree
lret
mov
push
cmp
jno
mov
stos
xchg
sbb
mov
adc
inc
repz
mov
pop
push
sahf
mov
loope
es
lods
xlat
add
inc
cs
int
dec
idivl
in
aam
or
out
addl
xchg
jnp
xor
jp
ret
add
pop
and
jl
icebp
mov
cltd
mov
stos
jle
xor
fdecstp
mov
cmp
pop
mov
mov
dec
mov
jne
mov
lods
popf
xchg
shll
sub
jns
sub
outsb
loope
and
notl
jo
js
ljmp
sbb
cwtl
scas
out
or
icebp
or
fs
lret
and
dec
outsl
cld
push
mov
dec
cmp
adc
repz
shlb
mov
sbb
loope
js
jge
hlt
push
out
lret
leave
mov
adc
pusha
sbbb
repnz
bound
in
jne
pop
and
out
popf
lods
ljmp
lcall
fstps
nop
cmp
sbb
sti
aaa
bound
lea
and
sub
sbb
lds
pop
dec
jno
fdivl
lret
pop
notl
nop
out
xor
dec
pop
js
pop
sub
mov
cmpsl
mov
dec
and
push
adc
popf
mov
out
out
loopne
dec
jns
cmc
ja
das
addr16
push
adc
sbb
cmc
shrl
mov
shrb
stos
dec
rclb
fdivrs
jge
fildl
fadd
rorb
lds
push
fmulp
and
mov
je
fmul
cld
mov
scas
je
push
addb
jmp
jbe
pop
sub
ror
pop
adc
fsubs
jmp
ret
jecxz
xchg
lahf
icebp
cmpsb
ss
loope
mov
pop
add
repnz
shll
bound
xchg
lods
mov
xlat
lods
sahf
jnp
add
rcrl
fdivs
aaa
roll
cmp
jge
xchg
inc
popa
pop
lret
gs
shrl
xchg
cld
shr
push
mov
and
mov
pushf
aad
mov
fsts
push
stos
mov
mov
mov
cmpsl
sbb
icebp
or
insl
rcrb
xchg
inc
mov
add
insb
dec
movsb
inc
xchg
dec
mov
outsb
mov
in
out
add
mov
sbb
fnsave
in
jg
loopne
add
rcrl
aaa
jg
out
sbb
mov
add
dec
mov
pop
pop
cmpsb
mov
pop
and
mov
add
shl
and
idivl
dec
je
sbb
scas
out
jecxz
mov
add
pop
fstpl
stos
imul
or
cld
xor
andl
adc
push
fisubl
dec
mov
jbe
imulb
jo
sub
ja
push
fcoml
jle
cmc
insb
jno
mov
ret
scas
setns
fdecstp
or
cmpb
inc
mov
jo
mov
mov
push
cmp
mov
jo
icebp
push
ret
int3
add
call
pop
icebp
adc
fsubrl
sub
iret
bound
mov
cld
or
std
xchg
cmp
lahf
adc
lods
xchg
adc
xchg
cmpsb
stc
test
xlat
jl
stc
and
dec
add
aas
enter
jne
out
cmp
dec
jmp
insb
mov
jbe
scas
pop
aad
lock
pop
pxor
dec
mov
lahf
cwtl
add
mov
ret
divl
out
and
sub
mov
mov
add
jecxz
mov
cmpsb
mov
push
xchg
andb
push
cmp
mov
mov
fists
lahf
jnp
clc
rcl
mov
ljmp
sub
jmp
xchg
jnp
aaa
sbb
pop
pop
xchg
int
out
outsb
rcrl
fisubrl
jge
mov
gs
aad
divb
or
insl
jo
inc
aad
cmpsb
stos
fdivl
adc
cld
sub
jae
pop
insl
daa
cmp
nop
mov
sbb
adc
repz
mov
dec
dec
iret
ljmp
xchg
or
fucomp
das
dec
cld
adc
xorl
pushl
dec
test
push
inc
xchg
sti
ljmp
or
push
push
nop
movsb
iret
add
mov
mov
imul
cli
shll
push
dec
dec
push
insl
adcb
aad
and
mov
cmc
cltd
sub
test
xchg
and
mov
test
pushf
nop
inc
addr16
cmp
rcll
jo
movzwl
lret
insb
lcall
mov
arpl
push
sbb
cli
daa
pop
mov
movb
jmp
rcr
xchg
ss
test
es
cli
aaa
ds
cmc
call
int
out
xchg
icebp
insl
frstpm(287
push
lea
pop
jmp
mov
xchg
lret
les
fmull
fcmovnb
mull
adc
pop
sub
ret
cmp
enter
movsl
out
and
xchg
sbbb
mov
sahf
pushf
mov
imul
sub
mov
inc
xchg
mov
pop
inc
xor
decb
push
mov
sti
pop
push
mov
inc
setge
lcall
dec
sbb
pop
jae
mov
rcl
cmp
and
inc
in
sbb
mov
xchg
mov
xchg
repnz
mov
in
or
mov
mov
bound
sbb
ja
mull
repnz
in
jg
sti
add
push
test
jmp
dec
cmp
sbb
inc
clc
and
subl
loope
or
jo
sbb
fiaddl
dec
cmc
mov
out
inc
jae
lods
pushf
mov
xor
jge
pusha
pop
inc
jg
xor
data16
sbb
sbb
je
and
jmp
xchg
lods
mov
cmp
pop
pusha
arpl
adc
lahf
cli
shr
xchg
jp
out
fsubrl
test
mov
out
mov
cmpsb
call
sbb
or
pop
jbe
cmp
into
sub
jecxz
jb
mov
cltd
push
fwait
jbe
lds
jbe
mov
cmp
sbb
lock
mov
inc
sarl
mov
jno
in
mov
data16
rorb
and
sub
repnz
xor
dec
and
jnp
mov
or
xor
sahf
fisubs
inc
dec
mov
fidivrs
cmp
pop
dec
and
inc
popa
aaa
jae
test
pop
and
xlat
test
pop
fs
test
push
push
mov
sahf
mov
std
pop
test
into
xor
orb
fs
jp
cmpsb
and
inc
add
faddp
leave
mov
fwait
push
mov
scas
pop
mov
xchg
stc
sbb
dec
int3
repnz
test
into
stos
and
loope
in
mov
int
das
xor
shll
fwait
lods
jle
pop
jmp
int3
pusha
xlat
xchg
fimull
pop
dec
lock
xchg
pop
dec
mov
jmp
popw
cltd
loope
adc
nop
fsub
add
inc
push
gs
mov
and
xchg
fsubrs
sub
xchg
es
mov
nop
or
int
pop
jmp
test
hlt
out
inc
inc
push
ss
dec
add
in
loop
add
or
xor
sub
in
jb
nop
or
mov
pop
inc
or
subb
pop
or
xchg
cwtl
mov
or
cmp
jne
jo
xchg
inc
ror
testb
jbe
add
gs
xchg
mov
neg
inc
push
and
mov
push
jge
inc
movsb
xchg
sbb
loope
xchg
xchg
inc
je
cmp
call
aas
fidivrs
iret
adc
rcrl
inc
in
mov
iret
cs
mov
add
ss
dec
scas
rcrl
das
ret
pop
cs
jecxz
inc
inc
mov
or
dec
adc
sub
outsb
mov
cmc
mov
xorl
and
xchg
lcall
mov
rcl
adc
cli
imul
negl
push
cltd
stc
sbb
aas
mov
xchg
in
and
push
mov
add
rolb
xchg
ret
mov
lahf
cmc
sbb
lcall
int
mov
adc
sub
ret
pop
dec
dec
jb
xchg
call
movsl
cmp
and
and
dec
or
enter
pop
orl
lahf
add
daa
jecxz
test
shll
pushf
mov
add
shll
repnz
push
sbb
cs
int
adc
out
mov
mov
movl
jne
mov
imul
movl
sbb
stc
xor
mov
jbe
sbb
imul
sub
dec
test
xchg
cltd
mov
lcall
insb
iret
mov
fwait
dec
or
div
mov
sbb
xchg
push
movsb
pusha
mov
cmp
subl
inc
sub
scas
ret
in
xchg
xor
mov
jae
push
ds
subl
shrb
mov
std
fs
punpckldq
dec
sub
xchg
mov
popa
or
inc
xchg
in
aas
jg
xchg
jp
cmp
mov
mov
inc
pop
dec
ljmp
nopl
xchg
adc
fsub
add
imul
fucomp
xchg
pop
adc
aad
sub
or
sbb
les
out
or
mov
mov
mov
aam
scas
mov
roll
pop
andl
popa
movsb
jecxz
jno
sbb
ret
imul
xor
dec
sub
inc
adc
dec
shr
dec
cmp
dec
int
rcll
aad
push
mov
rolb
mov
push
mov
icebp
ds
mov
sbb
aam
xor
aad
xor
push
test
pop
dec
test
aam
sub
pusha
cmp
jbe
dec
xor
test
mov
dec
rdtsc
pop
xor
sti
icebp
lods
or
xor
loopne
jg
mov
aad
jbe
dec
pop
filds
inc
insl
out
leave
dec
sbb
mov
fisubl
std
fistl
dec
mov
mov
fidivrs
adc
mov
and
mov
fidivl
add
mov
test
or
in
fildll
push
lret
mov
cli
sbb
jecxz
xchg
xchg
stos
lds
ret
sarl
mov
adc
aas
mov
jge
es
data16
movsl
popf
mov
add
ja
pop
popf
sub
mov
adc
dec
in
cmpsl
shll
pushw
repz
xor
stos
aas
in
push
add
into
and
xlat
lss
insb
mov
adc
sub
push
mov
cmp
enter
push
xchg
test
outsl
icebp
pop
push
clc
add
inc
push
pop
fcomps
cwtl
popf
sti
mov
dec
sub
lods
sbb
push
sbb
lock
fcomps
adc
and
and
lds
dec
addb
jno
dec
test
stos
out
cld
jno
cwtl
out
cmp
push
push
hlt
jge
lock
add
mov
movsb
rcrb
fistpl
add
xchg
sarl
lods
jbe
shll
loope
dec
bound
cmp
shrl
mov
sub
sbb
sbb
popf
sbb
das
mov
aaa
jge
mov
sub
cmp
mov
mov
inc
in
out
sbb
cs
push
cs
xchg
shll
decb
imul
aaa
in
cltd
lock
stos
cmpsl
xor
push
cltd
std
ja
push
dec
aaa
jae
rolb
repnz
decl
out
sbb
loope
and
add
inc
imul
mov
adc
bound
icebp
push
jp
int3
push
pushf
sti
push
mov
adc
out
mov
in
ja
adc
mov
outsl
jnp
push
test
andb
lea
cld
test
out
inc
fisttpl
cmc
adc
cmp
aam
sbb
enter
imul
jg
jp
loope
pop
add
mov
out
inc
jo
push
out
movsl
pusha
jg
add
fstpt
scas
inc
cmc
jge
inc
pop
cwtl
leave
dec
outsb
andb
movsb
flds
popa
loopne
mov
inc
imul
jae
loopne
scas
stc
sub
lret
push
test
jge
cld
sbb
mov
sahf
cs
inc
and
das
xchg
pusha
push
jns
fcoml
sbb
mov
js
divps
push
mov
mov
jl
cmc
rclb
xor
data16
xor
push
iret
popa
add
jns
je
or
lret
es
sarb
push
cmp
xor
jne
pop
xor
or
push
pop
sbb
add
outsl
xlat
mov
cmp
ficoms
cmp
mov
mov
lods
jae
cmp
inc
jl
lcall
cmp
push
movsl
mov
es
lahf
jge
xchg
icebp
pop
mov
sbb
sahf
rorl
xchg
inc
add
out
stc
out
cmpsb
jns
cld
jb
aaa
jne
pop
mov
aam
xor
sub
into
cmp
xor
adc
ds
xchg
pop
xchg
andb
xchg
or
fisubl
loope
push
cmc
push
push
mov
push
aam
jp
out
daa
dec
mov
dec
fs
inc
pop
xchg
push
das
push
jno
push
sbb
out
sti
push
sarb
out
mov
scas
sbb
out
sub
sbb
inc
leave
xchg
mov
int3
push
imulb
mov
in
jns
popf
aam
mov
jno
add
insb
incb
sub
enter
sahf
add
int
sbb
cld
jne
int3
popf
into
aas
dec
xchg
enter
cmp
cwtl
fistl
mov
scas
lods
and
inc
sbb
pusha
push
xchg
loope
mov
js
xchg
fs
fmul
xchg
in
pop
test
std
movsb
jmp
mov
loope
sub
hlt
pop
xchg
inc
push
ss
scas
inc
xchg
loope
cmp
daa
mov
stos
call
pop
addr16
push
pop
pop
inc
xor
jmp
pop
inc
aad
xor
pushf
hlt
push
test
xchg
popa
and
in
inc
dec
jge
jo
mov
insl
cltd
dec
xchg
pop
xchg
jg
dec
addr16
xlat
sub
xchg
cmp
imul
orl
stos
mov
aas
inc
sbb
dec
push
pop
jne
idivb
adc
dec
pop
fsubl
push
cli
cli
popf
insb
push
sbbb
popf
mov
pusha
xor
xor
add
fsubs
mov
insl
jecxz
dec
mov
dec
fucom
sbb
nop
pushl
xchg
es
xor
js
xchg
lods
nop
or
lods
pop
lods
es
stos
stos
cmp
movsb
push
pop
lods
cs
add
mov
jnp
jno
push
and
stc
sub
dec
adc
push
cmp
into
cld
jmp
ret
pop
ds
mov
out
in
xchg
inc
jl
mov
and
pop
imul
mov
out
sbb
lret
add
adc
fimuls
sub
ljmp
sub
and
pop
sub
mov
or
and
jne
mov
pop
pop
pop
lret
mov
pop
push
pushf
jle
lcall
mov
hlt
fisubs
es
sbb
sub
and
jno
and
ds
jae
push
jle
test
enter
mov
jp
das
pmullw
cli
aad
sbbb
jb
imul
push
rcl
cmp
xchg
push
cltd
push
je
pop
clc
inc
ret
xchg
adc
add
testb
jl
sbb
inc
movsb
mov
mov
cmp
popa
nop
jecxz
or
into
xchg
insl
rol
or
cld
jno
xor
xchg
push
xor
jnp
adc
ret
jno
iret
std
jns
ja
or
pop
lds
ja
in
data16
rclb
aam
in
cmp
push
cld
xor
ljmp
push
fisttpll
inc
hlt
and
mov
mov
add
cs
xor
out
shr
inc
mov
test
sub
fwait
mov
lods
mov
into
das
cmp
rcrb
call
pop
push
inc
dec
test
mov
jle
dec
test
jecxz
inc
pop
jns
std
nop
add
loopne
xchg
xor
das
popf
icebp
incb
cli
jne
shrl
enter
or
adc
aam
jg
pop
inc
movsl
or
fisubrs
dec
push
in
mov
xor
jg
sbb
dec
cs
mov
pop
leave
imul
jp
mov
inc
inc
pusha
ffree
pop
icebp
jo
dec
rolb
mov
ljmp
mov
mov
or
jl
inc
clc
sti
pop
sub
jecxz
cmc
mov
pop
push
test
insl
adc
stc
or
cmp
xchg
or
pop
cmc
xchg
cmpsl
push
fucom
rorl
mov
inc
insb
adc
push
jb
lds
push
bound
jns
pop
dec
inc
test
adc
out
add
jle
sbb
mov
shrb
sbb
mov
jmp
jg
outsl
pushf
in
push
adcb
add
or
xchg
aas
or
jg
mov
mov
mov
jmp
sbb
inc
decb
subl
cmpl
push
add
cltd
mov
in
mov
iret
cmp
vpmovsxwd
cmp
ror
xor
push
inc
sub
jmp
xchg
push
loope
pop
add
mov
in
sarb
lods
imul
push
cwtl
jmp
ja
fs
fcmovb
out
xor
sub
inc
xor
mov
cmp
jne
push
cmp
jmp
xchg
loop
jns
fbld
out
hlt
inc
xchg
std
pop
in
adc
or
jge
ja
rcll
jnp
into
lea
dec
push
mov
pop
shll
divl
out
inc
fisttps
ja
mov
add
les
mov
test
fcmovnbe
adc
repnz
xor
sub
or
repnz
inc
xchg
jbe
jo
mov
inc
jnp
mov
pop
push
mov
mov
js
fmuls
shl
sti
mov
cmc
lret
xchg
sub
or
and
rcrb
or
stc
cmp
cwtl
popl
clc
aam
sbb
lcall
dec
adc
pop
stc
aas
cmp
mov
fcmove
negb
xchg
shll
pushl
hlt
adc
mov
jns
stc
push
push
shlb
sahf
in
pop
push
int
and
jb
adcb
cmpsl
xor
push
popa
stos
add
add
fmull
out
in
sahf
mov
xor
and
jle
imul
lea
sbb
cmp
pop
or
out
mov
lods
enter
dec
les
mov
add
push
stc
mov
rorl
or
adc
in
popf
adc
xchg
or
mov
mov
mov
dec
std
and
insb
mov
adc
mov
in
stos
test
in
cmc
pusha
shll
pop
mov
mov
testb
mov
or
dec
mov
xchg
xchg
cmp
xchg
hlt
add
es
push
lret
jb
adc
gs
xchg
bnd
nop
push
aaa
adc
fcmovu
mov
xchg
mov
inc
xor
mov
lods
fidivrs
push
repz
xchg
jge
or
inc
sub
cmpsb
rolb
cmc
adc
sbb
in
jp
dec
cmp
loopne
mov
movsl
lahf
faddl
andb
sub
jnp
mov
jo
dec
mov
popa
mov
or
or
sbb
mov
aaa
int
adc
or
push
mov
out
rol
fs
lods
mov
or
pop
push
mov
daa
outsb
mov
mov
add
or
or
add
jecxz
inc
xchg
sbb
xor
jle
rorb
fmuls
jne
cmp
sarb
adcb
cmp
pop
xchg
xor
pop
stc
mov
mov
xchg
jg
or
scas
pminsw
mov
fsubrl
test
pop
sbb
xlat
jp
fbld
jmp
adc
das
fisubs
sbb
mov
push
xor
rorb
xchg
pop
mov
insl
push
sbb
xor
sbbb
sub
xor
shrb
fstpt
pop
jmp
lret
push
rcrl
pusha
fistl
js
leave
add
xchg
fstpl
daa
outsb
xchg
add
outsl
push
incl
ds
mov
in
push
sub
cld
fsts
lret
inc
scas
lret
fwait
xor
and
incl
fists
mov
and
lods
fimuls
sub
xlat
push
dec
enter
jle
adcl
repz
popf
mov
jnp
jle
sahf
adc
rol
jle
cmp
sbb
xchg
jbe
scas
fistpl
inc
pop
mov
mov
sti
lock
push
jge
cmp
jecxz
inc
les
cmp
mov
pop
cmp
inc
pop
xchg
leave
xchg
add
mov
inc
clc
mov
repnz
pop
lods
jae
invd
dec
inc
fcomps
lret
add
push
push
addr16
lods
mov
lds
out
xlat
rcll
push
lods
fstps
push
lds
pop
mov
sub
inc
sub
lods
mov
fucomip
or
popl
add
dec
test
jmp
sbbl
xchg
out
insb
xlat
shlb
test
inc
js
lock
cmp
outsb
push
rorb
adc
cli
xor
or
and
scas
dec
push
pop
cmpl
push
sbb
adcl
adc
pop
leave
mov
mov
enter
nop
mov
scas
pop
cmpl
andl
pop
dec
inc
std
pusha
xor
jne
cmp
icebp
inc
call
clc
dec
jg
mov
pop
cmp
xor
mov
jns
notl
out
orb
popf
inc
inc
insb
call
xor
hlt
jnp
ficoml
sub
je
dec
sub
cmpsl
rcrl
inc
mov
cli
dec
bound
in
and
fistpll
insl
cmp
insb
adc
xchg
add
repnz
and
pop
and
shl
stc
mov
add
aas
out
bound
aad
and
add
es
dec
je
mov
adc
mov
call
jnp
int3
call
jmp
sub
jns
xchg
sahf
mov
jno
sbb
out
cmpsb
sbb
mov
xor
jae
cmp
pop
adc
add
addl
and
insb
xchg
fdivl
or
int
jbe
sbb
loope
pop
lock
jb
cld
loope
insl
enter
push
adc
inc
lret
fnsave
push
cmp
push
and
movsb
call
dec
push
mov
test
mov
mov
enter
mov
fs
sbb
xor
lea
rol
jns
out
pop
mov
xchg
inc
test
dec
jmp
mov
scas
mov
jle
or
mov
ficompl
inc
push
push
mov
mov
pop
repz
fucomi
cmpsb
and
and
sub
cmp
jecxz
jmp
les
mov
jno
fstpl
jecxz
loop
lret
cmpsb
ficompl
lcall
sbb
sub
mov
add
mov
repz
into
subl
fwait
cltd
push
pop
ja,pn
aam
sub
int
lcall
adc
imul
sbb
push
dec
pop
jecxz
or
sbb
mov
jle
jmp
ss
cltd
sub
sub
das
adc
push
lret
lods
and
and
in
dec
xor
mov
rcrl
cmpsb
jecxz
inc
imul
pop
cmc
inc
mov
add
decb
mov
pop
mov
out
sbb
jp
leave
mov
cmp
lret
movsl
add
push
push
push
sub
std
movsl
fs
call
xchg
ret
aam
push
shr
pop
and
push
mov
scas
subl
arpl
xchg
pop
jae
popf
mov
inc
sbb
movsl
aam
xor
in
jge
nop
cmp
sbbb
shlb
sbb
int3
dec
cld
cltd
mov
or
pop
add
test
jae
int3
inc
adc
lock
fidivrs
jge
cmc
addr16
inc
iret
pop
fcom
rcll
mov
lock
push
mov
scas
or
mov
cld
xor
fdivrs
bound
imul
mov
sbb
gs
xor
mov
aaa
roll
in
negl
xchg
sarb
loope
sbb
jo
push
popf
xor
xor
xor
sbb
inc
mov
jmp
xchg
jnp
push
mov
aas
xchg
xchg
jno
aam
jo
push
nopl
pop
fmull
outsl
inc
adc
pextrw
js
into
test
mov
stos
aam
in
xchg
pop
or
xchg
dec
and
pop
data16
inc
xor
sbb
push
add
inc
loop
gs
pop
mov
sub
loope
adc
pop
pop
repz
mov
dec
mov
add
adc
pop
or
push
jle
leave
mov
lret
es
popf
loopne
loop
inc
or
fisttpl
stc
mov
mov
enter
mov
push
in
cmp
mov
pushf
test
add
cmp
pop
inc
lds
jl
add
inc
pop
std
mov
pop
in
cmc
inc
fsubr
lock
adc
das
imul
xor
fwait
mov
pop
jae
addl
in
and
jp
push
cli
ljmp
daa
push
mov
aam
lcall
loope
xorb
sub
icebp
or
xlat
cmp
inc
cmovge
cmpl
lcall
ljmp
shll
jae
ret
cwtl
lock
clc
loope
adc
mov
mov
ficoms
cld
int
jle
fsubl
inc
xchg
jno
sar
lea
xor
shlb
inc
movsl
inc
cmp
pop
inc
adc
movsl
bnd
adc
sbb
pop
xor
adc
mov
push
inc
xor
js
push
fsts
dec
jp
js
cli
push
popl
sub
mov
js
or
fcomps
xor
fmuls
imulb
iret
in
filds
jmp
mov
or
movb
int3
pop
inc
repz
push
xor
je
jbe
xchg
cmp
mov
bnd
scas
or
fnstsw
sub
stc
jae
cld
mov
addr16
xchg
cmp
stc
fildl
mov
push
outsl
mov
mov
push
aaa
test
and
adc
stc
push
fisubl
lds
or
movl
mov
xchg
or
push
xrelease
pop
pop
sarl
mov
andl
push
add
inc
je
test
push
into
shr
hlt
arpl
clc
aam
dec
aaa
mov
popf
add
jne
jp
and
jl
push
aam
cmpsb
addl
add
xchg
aad
icebp
in
pop
es
jno
das
bound
or
fs
xchg
cmp
loope
mov
sub
mov
rcrb
fwait
call
pop
dec
sbb
cmpsb
and
adc
lret
into
imul
or
cli
lods
or
test
test
xlat
adc
xor
mov
aam
movl
movsl
or
orl
xlat
movsl
sbb
add
daa
xchg
xchg
mov
shrb
hlt
xchg
mov
push
push
std
scas
xor
enter
call
mov
jp
jb
and
sbb
fdivs
cmp
dec
cmc
pop
sbb
push
and
fmuls
xchg
aaa
iret
and
sub
je
and
pop
loop
lret
add
mov
or
and
frstor
push
push
iret
mov
jae
lock
mov
popa
pop
sub
lret
push
repz
andl
xchg
xor
cmpsb
mov
cmc
sub
rorb
in
lds
int
cmp
lods
jge
mov
cmp
lock
lea
lret
jp
push
in
cmp
jo
out
movsl
jmp
cltd
jg
jno
mov
inc
dec
sarl
in
outsl
push
ss
xchg
ror
dec
stos
fadds
adc
cmp
mov
adc
aas
popa
scas
movsb
test
repz
shrb
enter
and
mov
cwtl
pop
push
enter
sbb
iret
das
addb
jo
xchg
pminsw
mov
inc
cmp
add
xchg
movsl
xchg
inc
jno
out
cmp
adc
add
dec
aaa
repz
call
sarb
out
ret
xchg
fnstenv
xor
rcll
xchg
in
ret
out
int3
mov
mov
movsb
inc
inc
dec
cmp
jo
int
divb
ss
aam
sahf
jb
or
loope
out
jmp
in
push
sbb
push
sbb
fidivs
or
lods
xchg
fdivrl
push
mov
imul
pop
insb
repz
push
and
imul
add
cmp
lds
js
lcall
mov
jne
lods
cmp
outsl
fists
test
cld
in
out
jp
enter
mov
cmp
in
repz
fs
sti
mov
xor
jle
jo
add
add
add
xor
sub
or
add
addr16
push
into
jb
cmp
shll
push
sbb
dec
adc
std
lcall
repz
enter
jg
inc
mov
sub
pop
sbb
mov
push
jg
and
cli
popa
mov
movsl
pop
adc
pop
jecxz
push
xchg
push
arpl
pop
push
mov
push
push
xor
stos
pop
lcall
mov
dec
mov
fs
or
push
hlt
lcall
pop
adc
inc
lds
sub
xchg
xchg
lret
cmp
xchg
sbb
inc
xor
fwait
add
sub
gs
inc
ficoms
dec
adc
aaa
addl
cli
add
fsubrs
lea
sbb
lahf
lret
inc
jmp
loope
repnz
xor
clc
pop
cmpsb
clc
jle
stos
sbb
out
lock
gs
sub
or
add
mov
add
aad
shlb
adc
adcl
mov
jns
sub
or
in
test
lea
cmp
test
mov
test
jbe
fistps
test
idivl
jno
test
xor
fisttpll
int3
clc
cmc
adc
or
xchg
jns
or
adc
inc
sub
pop
fldl
iret
push
inc
ja
xlat
inc
in
sbbl
pop
mov
fsubrl
outsl
ficoms
arpl
rolb
mov
push
pusha
sub
mov
mov
or
mov
cmp
or
sbb
adc
int3
dec
push
into
cmpsl
ficompl
cmp
push
fnstenv
ja
cmc
mov
inc
in
xor
outsl
inc
sahf
mov
mov
mov
add
jno
std
push
loope
jae
xchg
jbe
sbb
or
inc
push
stos
jns
test
testl
add
push
push
pop
push
rcrb
sub
mov
push
xchg
test
jle
out
dec
rol
or
jbe
xchg
or
mov
pop
push
xor
xchg
arpl
and
fisubrs
mov
mov
cmc
xchg
and
cmpsl
and
mov
jmp
dec
sub
fists
popf
outsb
xchg
xchg
ficomps
cmp
or
cmp
stos
incb
push
add
mov
pop
xorl
cmc
outsb
aas
and
fldenv
lcall
test
pop
cld
push
inc
ja
xchg
jmp
ret
xchg
jns
test
enter
dec
push
je
popa
mov
xchg
ficoml
pop
add
push
hlt
in
xchg
shrl
adc
out
pushf
js
dec
push
scas
jne
and
hlt
jmp
hlt
jmp
data16
or
mov
and
mov
push
dec
mov
jo
mov
pop
mov
push
lods
sub
stos
jmp
negb
pusha
mov
and
les
arpl
jmp
mov
out
dec
push
jecxz
mov
adc
and
sahf
ss
fistpll
sti
cmp
mov
fisubs
add
outsl
cltd
push
test
lcall
push
dec
inc
push
std
jge
pop
inc
pop
out
addl
lahf
in
xlat
pop
xchg
sbb
nop
iret
or
lds
sbb
mov
mov
loope
cmp
xchg
inc
or
xor
mov
pop
lock
add
mov
fidivl
jmp
inc
and
lea
daa
in
loopne
mov
test
popf
lds
out
cmp
jmp
lods
jle
rcll
clc
lahf
mov
inc
xor
xor
cmp
hlt
pop
fistpll
call
add
addr16
in
dec
dec
inc
cwtd
pop
cld
dec
cmovp
scas
jg
std
pop
push
dec
cmp
add
fsubrl
enter
pop
not
ss
aam
negb
sub
popl
cli
pop
popa
xor
in
xor
or
sti
push
mov
loop
aas
add
dec
out
repnz
repnz
pop
out
add
js
mov
fadd
dec
test
sub
jp
mov
test
dec
xchg
mov
mov
imul
test
xchg
xchg
sar
sbb
pop
movsl
jns
out
xlat
pushf
in
pusha
inc
xor
sub
and
aad
test
in
in
ljmp
aad
mov
movsl
xchg
out
inc
push
ds
dec
inc
add
xor
aam
andb
add
xlat
sar
xor
cmp
movsb
push
nop
jmp
not
inc
xchg
outsb
mov
adc
inc
mov
insl
mov
fadds
pop
adc
out
imul
cli
icebp
and
out
push
jno
add
imul
inc
ret
test
inc
decb
or
fwait
lret
out
mov
es
fstps
filds
movsb
aas
ljmp
dec
sub
ja
mov
cmp
fwait
add
fsubl
or
push
rcr
jmp
add
mov
in
xchg
aad
stc
pop
imul
or
lahf
repz
out
add
int
dec
cmp
pop
push
sub
cmc
test
xlat
test
movsb
ds
mov
adc
fs
xor
fcoml
ja
xchg
stc
mov
push
mov
cmp
test
xor
ljmp
inc
insb
add
dec
movb
or
stc
dec
dec
int
add
xchg
imul
lds
pop
sbb
jl
cs
fs
inc
dec
enter
call
fldl
cli
hlt
outsl
cltd
lods
push
and
push
int3
imul
imul
sbbl
popl
mov
xor
outsl
push
scas
adc
jmp
mov
adc
insl
sbb
lret
or
mov
jb
xchg
mov
cs
repz
jo
pusha
lahf
xchg
xchg
repz
pop
sbb
inc
in
jno
dec
push
cmp
add
insb
test
repnz
scas
xor
cmp
or
ret
sub
adc
xlat
sbb
jge
sub
test
daa
inc
xchg
leave
dec
mov
out
insb
repz
scas
inc
cltd
adc
inc
cmc
test
xchg
xor
ss
out
adc
sub
jg
jbe
cmp
insb
insb
leave
mov
or
movsl
sbb
dec
scas
mov
and
sbb
loop
mov
mov
mov
jae
or
outsl
add
repz
or
in
bound
xor
test
shl
pop
mov
add
rcll
in
ja
add
adc
mov
in
fisubrs
into
shlb
insl
xchg
sti
xor
mov
scas
cmp
stos
mov
mov
rolb
cmp
jl
testb
lret
push
mov
jae
aas
adc
fwait
lcall
jnp
ret
cmc
push
jmp
push
fs
int3
and
and
outsl
nop
push
xchg
test
jmp
inc
sbb
adc
arpl
cmc
mov
ljmp
lret
shl
mov
aaa
xor
adc
ret
rcrb
std
int3
insb
push
and
mov
cmp
push
out
sbb
pop
inc
jne
cmpsb
or
add
loop
cmp
inc
loopne
in
clc
sub
fildl
in
lcall
push
lods
test
mov
xorl
pop
mov
icebp
xor
fldenv
and
loope
out
outsb
frstpm(287
xchg
jns
push
negb
rcrl
cmp
lahf
xlat
cltd
testb
pop
loope
rcll
jl
pop
aam
cmpb
dec
mov
or
popf
aam
push
cltd
dec
cmpsl
cmp
subb
ret
pop
sbb
mov
popa
and
in
mov
jge
and
jge
push
dec
mov
call
push
cmp
mov
fmuls
cltd
and
or
push
cmpsl
test
lret
push
push
cld
adc
mov
jmp
data16
lods
xor
daa
jle
xchg
lock
push
mov
and
aam
rcrb
xor
mov
dec
cwtl
mov
aaa
pop
test
pop
push
jnp
mov
pop
push
repnz
push
mov
lock
in
dec
and
cltd
test
cmpsb
mov
sbb
push
retw
insb
add
lahf
sti
or
add
mov
imul
or
popf
or
push
icebp
cwtl
test
xchg
lock
mov
xchg
shr
cmc
sub
adcl
mov
push
shlb
cmp
cmpsb
mov
mov
adc
jne
jbe
clc
push
gs
cmp
clc
pop
xchg
fildll
enter
ja
push
fiadds
jmp
cmp
in
jmp
inc
imul
jo
mov
movsb
outsl
jae
arpl
pop
xor
xchg
lahf
cltd
lret
xor
mov
testl
mov
inc
xor
and
aaa
push
out
cld
aas
sbb
jne
jp
sub
pop
js
sbb
pop
enter
xor
sbbl
mov
jo
mov
fstpl
es
mov
sub
jnp
jae
test
or
popa
in
bound
jbe
and
xor
mov
cmc
lods
adc
or
xchg
testl
add
ss
add
dec
je
pop
mov
jne
adc
cmp
sahf
fs
inc
pop
cmp
xchg
fdivrp
test
dec
jle
jmp
xchg
and
mov
cmp
shr
or
sub
jle
pop
jmp
push
pop
push
adc
out
push
xchg
mov
push
xchg
push
adc
repz
dec
leave
cmp
pushf
push
out
inc
cltd
fldl
jge
jae
pop
or
xlat
or
pop
add
cmp
mov
inc
mov
add
out
gs
mov
mov
mov
xor
popf
jae
mov
fsts
pop
add
sbb
aam
mov
js
push
mov
xor
les
aad
xchg
adc
sub
shrl
pushf
sbb
shrb
pop
das
outsb
repnz
mov
lock
pop
mov
mov
loopne
shlb
mov
fisubs
fldenv
test
out
inc
pop
aaa
and
push
jae
test
imul
inc
mov
xlat
push
xor
test
sbb
push
jnp
js
sbbb
rol
gs
pop
div
mov
popf
pop
outsb
push
rclb
gs
cmp
rolb
push
fstp
movsl
ret
lea
rclb
mov
cmc
jg
adc
sbb
and
push
mulb
inc
sub
lret
adc
xor
inc
or
repz
mov
or
aaa
sbb
add
int
mov
cmp
lock
clc
lods
add
cmpsl
jno
daa
mov
shl
scas
popa
stos
sub
je
in
pop
dec
xor
jno
das
inc
xor
mov
xchg
mov
scas
jne
movsl
lods
std
es
decb
aam
aas
push
aad
mov
mov
push
push
sub
scas
subb
xchg
push
xchg
mov
sub
in
int
mov
enter
mov
aam
xor
xchg
std
mov
adc
sub
lock
xor
jbe
push
cli
jne
jae
pop
addr16
jae
pop
jle
imul
stc
cmp
inc
mov
jecxz
push
lret
imul
lea
or
pop
lahf
mov
fisubs
add
testl
fcmovnu
or
fsubs
stos
inc
loop
xchg
xor
test
add
inc
outsl
jle
fwait
add
xor
gs
jbe
push
test
lods
cmpsb
fnstenv
push
call
aam
repnz
cmp
mov
shr
insl
xchg
lods
aad
sbb
cmp
adc
mov
and
dec
push
fsubrl
jne
add
aad
cmp
cmp
scas
add
ljmp
pop
cwtl
stos
inc
test
xchg
mov
pop
mov
push
inc
test
psllw
ja
leave
test
decb
call
or
aas
xor
testl
jl
bound
ljmp
xchg
dec
mov
dec
mov
dec
loop
inc
jae
cmpsl
or
out
lock
in
pop
scas
sahf
ret
sub
push
mov
cmp
ss
ljmp
pusha
shrb
pop
fxch
xchg
mov
addr16
inc
iret
sti
xchg
jecxz
aaa
lods
push
mov
lods
xlat
push
loopne
imul
pusha
inc
shrb
gs
sbbb
daa
pusha
push
dec
mov
fidivs
inc
fwait
add
cmp
xchg
xchg
loop
ljmp
ret
pop
scas
testb
imul
mov
daa
bswap
push
mov
aas
cli
mov
or
pusha
push
inc
mov
shlb
dec
push
cwtl
out
aam
cmp
xchg
dec
pusha
push
dec
mov
push
pop
inc
mov
pushf
inc
in
dec
xchg
jb
dec
and
push
mov
pusha
insb
hlt
pop
inc
pop
dec
lods
outsl
cmc
pop
in
cmp
mov
ftst
sbb
cmpsl
lret
mov
lret
cmpsb
fistl
and
xchg
dec
rorl
mov
shl
jp
lock
in
out
cmp
popl
sub
mov
scas
fisubs
repz
sbb
cmc
out
cmp
scas
int3
out
dec
pusha
push
and
repnz
adc
mov
iret
cmp
cmpsl
jle
inc
iret
inc
cmp
les
inc
in
mov
aas
addl
mov
jbe
out
push
inc
outsb
adcl
push
push
jle
cmc
gs
arpl
mov
sub
cmp
jno
lods
test
dec
aam
sahf
aaa
shrl
inc
mov
and
xchg
add
and
repz
mov
rol
out
xchg
enter
and
jge
stc
dec
pop
sbb
and
inc
sub
in
cmpsl
mov
dec
cmpsl
mov
das
xor
inc
mov
lcall
pop
mov
or
pop
sub
rolb
jecxz
lea
and
mov
out
mov
pop
inc
mov
dec
mov
ds
repnz
inc
adc
xchg
cltd
mov
andl
sahf
push
enter
adc
jae
ss
ret
in
sub
push
orl
inc
idivl
mov
and
mov
jns
in
xor
popf
push
and
dec
push
addr16
cmp
jnp
jle
or
pop
bound
aam
mov
dec
push
movsb
dec
dec
stos
movsl
aam
mov
jge
sarb
iret
dec
xchg
lea
mov
xchg
push
scas
mov
aad
xchg
mov
jns,pn
mov
pop
lcall
jno
sbb
mov
aaa
addr16
leave
inc
into
sbb
mov
mov
shlb
aas
xor
loope
roll
shl
sub
or
mov
mull
addr16
mov
push
push
fs
sub
dec
scas
cmp
push
lock
scas
out
fmull
out
mov
adc
pop
jo
ds
orl
mov
bound
sub
adc
dec
push
ja
push
mov
mov
aaa
pop
and
scas
sub
mov
pop
lea
insb
mov
adc
outsl
mov
and
iret
mov
mov
pop
cmc
lahf
adc
inc
xorl
mov
jae
mov
xor
inc
ret
push
or
out
or
dec
sbb
cld
xor
push
pop
adc
stos
ss
ja
addl
clc
es
icebp
fwait
clc
in
mov
rorl
js
insb
mov
data16
stos
mov
jb
adc
mov
and
add
shll
shll
xor
out
inc
inc
je
in
cmp
movd
mov
outsb
call
push
insl
sub
xorb
and
cltd
pop
inc
add
pusha
insl
sahf
dec
and
jg
outsb
pop
pusha
mov
inc
ret
push
mov
mov
pusha
ljmp
xchg
fwait
std
sti
out
ret
dec
fcoms
arpl
sub
cmc
mov
orl
jmp
mov
or
mov
rcrl
ljmp
pushf
das
pop
loopne
loop
test
xchg
lods
pop
and
sbb
dec
fs
mov
or
orb
jo
sbb
xchg
cwtl
add
fidivl
pop
out
mov
mov
jo
jnp
mov
and
mov
jns
ss
sti
xchg
push
flds
jae
cmc
or
sub
push
pop
mov
pop
jnp
data16
pop
mov
mov
out
inc
mov
add
and
lret
ljmp
hlt
shlb
fucomip
mov
mov
mov
pop
push
jb
xor
xor
cmp
out
mov
mov
loop
add
insl
mov
lret
repz
pop
sub
mov
inc
push
and
push
out
jle
lret
lcall
cmc
enter
inc
imul
dec
mov
fmul
mov
js
adcl
dec
inc
cmp
shll
in
in
pop
pop
cmp
mov
mov
imulb
lcall
sahf
arpl
lea
and
xor
lock
hlt
sbb
pop
je
cmc
inc
fisttps
out
pop
je
lds
in
cmp
call
cmp
daa
xor
mov
jno
out
mov
jne
iret
test
mov
inc
mov
fstpt
jmp
mov
mov
lock
push
dec
mov
rcrb
jl
pusha
inc
dec
fadd
loop
jp
and
or
gs
lods
adc
clc
cmc
adc
ret
mov
pop
push
sub
mov
cltd
sbb
sarb
mov
push
aad
lock
pop
insb
call
push
mov
ret
mov
or
jl
lods
movsb
test
sarl
pop
jb
fidivl
pop
test
jl
lahf
ss
mov
inc
cltd
call
push
mov
adc
ljmp
inc
sub
rolb
xchg
in
and
sub
sbbb
or
push
jbe
xchg
iret
int3
push
push
cmp
shlb
ret
push
arpl
push
ret
stc
xchg
test
jnp
cmpsb
test
mov
mov
sbb
cltd
aad
sub
xor
in
movsb
push
in
and
test
pop
test
dec
fs
test
scas
cmp
jnp
pop
cs
cmp
jns
pop
rcll
jle
and
pop
adc
ret
mov
test
jb
mov
inc
mov
sub
inc
and
add
lock
aaa
pop
dec
mov
in
imul
scas
aad
mov
jmp
mov
je
cs
or
test
je
movsb
imul
mov
adc
pop
inc
icebp
sub
in
sbb
hlt
pop
movsb
stos
add
fnstenv
mov
pop
aad
jae
int3
int3
cmp
daa
lret
jo
cmp
xchg
jo
ficoms
xchg
sbb
xor
xor
mov
xor
in
imul
adcl
shlb
loopne
xor
xor
inc
in
fwait
xchg
mov
dec
pop
jo
add
fcompl
mov
fs
in
adc
and
icebp
cmp
pop
mov
fwait
jb
cmpsl
movsl
dec
or
jno
fisubrs
add
sbb
sub
negb
lret
add
imul
cmp
sbb
loope
aas
sbb
in
jb
bnd
inc
cld
test
xchg
fs
dec
cld
les
or
pusha
dec
pop
ja
mov
push
ja
dec
insl
pop
sti
clc
rorb
add
loope
pop
movsb
out
mov
sbb
xchg
or
cmp
stc
popa
cwtl
jl
addr16
int
add
daa
pushl
pop
fisttpl
jne
scas
mov
pop
or
idivb
mov
ja
je
js
adc
mov
pop
leave
cmp
cwtl
daa
inc
or
clc
inc
add
mov
aam
dec
add
fimull
pusha
sbb
or
dec
aam
sahf
lret
jo
fisubs
movsb
sti
js
jge
or
pop
in
mov
loopne
cmp
dec
pop
adc
icebp
mov
data16
add
dec
out
or
aaa
add
out
loopne
and
adc
pop
add
jnp
or
pop
xchg
ret
mov
sub
cs
mov
adc
popa
testl
dec
movsb
adc
sub
pop
test
push
dec
rclb
inc
ret
fsubp
mov
addl
lret
xor
cmp
insb
test
pop
jg
mov
mov
repnz
push
jle
mov
adc
and
insb
or
test
leave
jo
lret
xchg
aaa
mov
jge
scas
in
shrl
or
sbb
mov
xchg
les
testb
xorl
sbbl
dec
mov
add
mov
lock
cli
jb
adc
imul
jne
sbb
dec
cmp
mov
sarb
fldl
in
jbe
hlt
sbb
cmpsb
test
hlt
push
xor
jl
mov
push
mov
inc
dec
or
cld
adc
xchg
out
xor
insb
adc
shlb
shl
scas
push
ret
pushw
push
lock
sahf
or
cwtl
jl,pt
cmp
in
lods
mov
clc
mov
add
jecxz
jno
sub
inc
subb
ljmp
int3
rolb
pop
leave
pop
xor
shrb
sub
sbb
test
xchg
mov
mov
xchg
ja
lods
test
stos
fnsave
loopne
fcoml
imul
mov
or
mov
fidivrl
add
scas
sbb
adc
xor
and
mov
call
out
ljmp
insl
fucomip
mov
push
cld
and
into
or
cwtl
outsl
sub
imul
js
jge
fnstenv
movsl
sub
pop
cld
test
int3
or
lret
shlb
sahf
lret
or
xor
das
mov
ja
pushf
and
push
mov
sbb
push
xorl
cmp
xchg
dec
aaa
xchg
sbb
int
mov
jae
int
pop
stos
repnz
pop
push
mov
push
cmp
cmp
or
push
xor
std
cmp
jg
pop
lahf
dec
jmp
scas
mov
arpl
xchg
mov
and
maxps
mov
cmp
cmp
aas
add
sub
int
push
pusha
push
outsb
push
je
into
lahf
ret
and
je
in
pop
dec
sub
inc
push
loopne
inc
mov
sub
sti
ds
arpl
cmc
push
mov
ljmp
xchg
adc
pop
sahf
notl
push
icebp
pop
mov
and
mov
inc
out
push
out
sbb
inc
out
lcall
pop
push
dec
icebp
mov
pop
dec
pusha
xor
sub
int
xchg
ret
cwtl
jnp
bound
ljmp
xchg
cmp
or
or
xorl
iret
cld
ljmp
xchg
mov
fwait
cmp
inc
pop
jns
sbb
movsl
dec
push
ret
add
es
cmp
xlat
movsb
adc
sbb
mov
lret
int3
jae
fsubs
mov
dec
sbb
fwait
aam
adc
into
int3
sbb
xor
mov
movsb
push
push
aas
rcrl
icebp
lcall
pop
sbb
mov
movsl
ficompl
inc
lret
test
mov
imull
jmp
sub
or
movsb
xchg
pop
loop
test
xchg
pusha
mov
pop
bound
pusha
jbe
cmp
jae
push
cs
ds
sbb
xchg
pop
mov
in
mov
push
or
sti
insl
xchg
rorl
cmpsb
ret
xchg
adc
dec
pop
fwait
iret
mov
sarl
loope
sub
and
lcall
xor
inc
add
inc
mov
lret
lret
outsb
and
dec
mov
pop
pop
mov
sbb
popf
enter
shrb
lods
xor
fnstenv
rcrl
stos
mov
dec
jecxz
mov
jecxz
adc
or
shll
leave
xchg
mov
aam
fmull
sar
and
push
insb
inc
dec
cmp
jnp
scas
pop
or
dec
pop
cmp
fistps
inc
rolb
xchg
aad
cmp
xchg
mov
add
pop
jb
xor
mov
and
and
push
sbb
std
mov
adc
or
adc
in
or
cmc
out
shll
out
xchg
mov
inc
loope
imul
jno
in
ljmp
fstpl
pop
sbb
sub
mov
jo
jl
fcoms
loope
add
push
popa
ret
pop
and
sbb
lea
jl
cmpsl
inc
xor
pop
shlb
sbb
divl
lret
pop
jp
insl
mov
cmp
cmp
xchg
add
jecxz
or
push
out
out
ret
clc
push
mov
lea
cmc
loope
jmp
cmp
cwtl
lods
push
dec
fnstsw
idivb
sti
repz
test
out
insl
cld
add
rcrb
mov
sbb
mov
or
aas
push
jns
xchg
cld
stos
inc
mov
mov
mov
sbb
add
add
mov
sbb
rorl
repz
ret
jecxz
push
cs
mov
int
xor
cwtl
nop
and
ret
int3
sbb
cmpsb
wbinvd
outsl
or
nop
addb
dec
mov
dec
enter
mov
clc
push
jns
lock
pushf
and
push
mov
fistps
sarl
imul
nop
adc
sahf
loopne
dec
cmp
aaa
ss
test
call
mov
push
dec
jae
inc
nop
popl
xchg
out
cmp
pop
mov
inc
mov
ja
push
dec
mov
adc
sbb
test
fisubl
out
popa
test
mov
sbb
sbb
pop
xchg
mov
pop
or
push
iret
cmpb
mov
push
dec
cmp
jb
popa
rcrb
int
icebp
pop
fidivs
fmull
mov
mov
sbb
inc
frstor
xor
idivb
pop
sbb
add
dec
aaa
insb
arpl
mov
cmp
lods
fldenv
xchg
mov
push
cmpb
and
call
push
mov
mov
and
fildl
lea
xor
mov
ljmp
loopne
aas
xlat
outsl
sbb
mov
xor
test
xchg
mov
subb
insb
mov
leave
fsubl
out
enter
sbb
loop
cli
and
jns
xor
lret
dec
xor
cld
jbe
mov
lods
jmp
out
mov
jle
mov
mov
mov
ja
sbb
addb
cmp
add
add
loop
sbb
mov
addr16
cmp
jae
cltd
cwtl
and
xor
imul
pop
push
add
pop
sub
jecxz
lahf
scas
fnstenv
clc
push
and
mov
ror
mov
lret
sbb
cmc
scas
xlat
arpl
stc
loopne,pn
in
das
mov
and
and
aad
inc
sbb
mov
push
notl
and
call
jbe
xor
jge
popf
pop
enter
jp
inc
out
and
clc
sbb
inc
sbb
aam
mov
cld
sahf
add
out
outsl
mov
inc
pop
or
decl
repnz
mov
xor
out
add
cmc
xchg
sbb
sub
pusha
cmpsl
imul
sbb
pop
addr16
hlt
inc
xchg
mov
enter
mov
xchg
push
lret
push
rclb
lret
mov
jno
pop
cmc
rcrl
mov
ja
mov
mov
leave
fwait
xchg
daa
sbb
out
outsb
shlb
mov
xchg
adc
cmp
pop
sbb
jns
dec
es
pop
dec
and
pusha
or
mov
jecxz
lea
pop
push
scas
scas
mov
rolb
cld
sub
jg
mov
int
jl
gs
xchg
les
adc
or
jp
mov
hlt
mov
sbb
dec
flds
call
xchg
sahf
fdivl
push
push
add
push
sub
or
cmp
rorl
aaa
xor
mov
dec
int3
add
push
xchg
lock
loope
inc
test
or
adc
dec
push
out
sub
inc
out
ds
hlt
mov
sub
lds
adc
inc
in
jnp
repnz
iret
xorl
int3
fcmovnb
cmp
ret
add
cltd
mov
movsl
sub
fs
cmp
pusha
jle
sbb
loope
pop
ja
std
cmp
pop
scas
data16
rcrb
fwait
jg
loop
and
adc
jge
cmp
cmp
insb
jne
xor
test
insb
int3
addr16
lock
fs
jge
lods
jb
fdivl
stos
inc
insb
dec
and
push
inc
insb
fisubrs
add
mov
push
fisttpll
dec
adc
or
mov
cmpsl
out
popf
std
mov
cmp
ret
fsubr
dec
mov
out
push
inc
pop
mov
fisttps
push
outsb
sub
xchg
movl
mov
scas
and
push
push
xor
xor
movsb
add
dec
push
test
xchg
out
jl
int
inc
lret
dec
push
clc
add
je
jg
mov
xor
xchg
add
in
cli
pop
and
or
or
loop
inc
notb
cmc
mov
leave
fldt
or
push
les
div
push
push
pop
je
sub
mov
bnd
jae
repnz
adc
push
outsl
or
add
push
mov
loopne
imul
pop
sub
xchg
xor
xchg
mov
clc
sti
and
fstp
cld
ret
cmp
and
lret
adc
int3
addr16
xor
fnsave
in
inc
and
bound
pusha
inc
sub
sbb
fdivs
sbb
aas
dec
and
mov
mov
jmp
out
xor
cmp
shll
cmp
stc
sbb
push
or
jb
nop
pop
add
jno
int3
fstpl
cmp
sub
or
or
inc
ror
and
roll
fists
cmp
xor
jo
into
push
clc
fst
sahf
or
pop
andl
inc
aad
xor
jle
ja
enter
jge
loopne
sbb
fnsave
daa
ficoml
inc
inc
clc
sbb
mov
orl
adc
mov
add
sbb
mov
xor
loopne
inc
rorb
sub
xchg
adc
in
lock
pop
pop
insb
out
push
dec
in
subb
inc
adc
loop
sbb
jecxz
or
push
cmc
pop
ja
je
iret
pop
daa
arpl
sub
push
int
sub
inc
sbb
and
jb
sub
popf
leave
int3
mov
sub
mov
mov
negl
aaa
sub
cmpsb
repnz
loop
insb
sub
andb
jge
and
test
and
and
pop
dec
cltd
pop
adc
or
jnp
sub
sti
xchg
add
or
add
outsl
pop
enter
mov
clc
xchg
push
ret
std
inc
xor
rorl
adc
adc
cmp
push
or
pop
lret
imul
pop
lret
sub
add
loop
ja
dec
scas
pop
into
mov
decb
pop
repz
push
in
imul
imul
mov
mov
sbb
adc
xchg
mov
jmp
in
jno
hlt
cs
mov
dec
out
mov
pusha
pop
dec
jge
add
jns
pusha
cmpsb
lcall
hlt
push
ret
or
pop
adc
jo
inc
and
aas
popf
mov
je
dec
pushf
lret
fnstsw
repnz
jne
pusha
cltd
fbstp
and
iret
add
dec
sub
enter
lcall
in
or
or
test
orb
out
aaa
lret
inc
test
dec
or
jno
push
mov
aad
pop
mov
pop
cmpsb
add
imul
sti
test
lret
jo
xor
xchg
in
sbb
push
int
add
decl
stos
dec
leave
cmp
adc
and
lret
stos
inc
insb
stos
jecxz
lds
std
adc
add
into
sub
pop
push
fwait
stos
inc
es
pop
pop
icebp
xor
ret
pop
cmpsb
mov
mov
xorb
add
push
lock
aam
add
jae
sub
test
rcrl
outsl
sub
cmp
pop
mov
fs
js
xlat
pusha
pop
rolb
and
dec
out
mov
cltd
or
js
cld
add
lea
inc
or
mov
daa
cmp
nop
rcrl
insl
mov
in
push
push
sbb
sarb
into
pop
mov
addb
xchg
test
gs
xor
clc
in
mov
ret
daa
lcall
mov
lret
sub
sbbb
pop
cmp
iret
pop
inc
lret
add
iret
push
add
call
pop
mov
xorl
popf
jnp
cmp
clc
fdivr
lods
inc
and
add
cwtl
mov
jne
out
pop
or
lea
test
jmp
cmp
nop
scas
cmp
cs
dec
push
and
jae
jo
inc
cmp
rorb
inc
pop
lcall
sbb
mov
lds
jnp
sub
jne
js
inc
lcall
push
push
mov
ss
jp
mov
aaa
mov
bound
jne
fs
ss
neg
clc
test
fdivs
imul
cli
fimuls
inc
add
or
gs
loop
loopne
lea
mov
aas
jae
icebp
rorl
test
insb
pop
lahf
or
jg
cmc
call
cmp
pusha
xchg
std
mov
or
scas
adc
in
out
int
xchg
jp
sub
pop
loop
mov
xor
outsb
pop
dec
and
cmc
mov
adc
insl
fadd
sub
outsl
cld
inc
xor
insb
cld
jge
test
cwtl
inc
pushf
mov
loopne
push
ds
fisttpl
mov
mov
sbb
push
daa
inc
icebp
inc
xor
jp
xor
xchg
shll
lods
and
jb
sahf
mov
fstl
dec
test
inc
inc
dec
test
mov
loope
xor
lcall
dec
rorb
xchg
add
and
cld
mov
dec
lds
aas
stos
je
cmp
mov
jecxz
dec
sub
imul
ja
movswl
insb
enter
pop
sub
cmp
push
add
push
and
rclb
movsb
dec
inc
sub
add
jp
leave
cli
lahf
lods
cwtl
ficompl
xorb
jle
mov
adc
ljmp
test
jns
jmp
and
or
pop
pop
and
pop
lcall
pushf
leave
fwait
xor
cmp
mov
mov
sarb
sub
ljmp
sbb
outsb
adc
xor
mov
sbb
mov
push
jl
cld
hlt
dec
inc
and
loop
jnp
incl
mov
adc
in
mov
xchg
lods
add
mov
xor
pop
sbb
ret
hlt
std
test
stos
fwait
inc
cltd
movsl
sub
dec
push
xlat
clc
fucomp
sub
pop
lods
hlt
jmp
popa
ja
xor
or
movsb
dec
or
jo
pop
stc
ud0
outsl
inc
out
pop
xchg
push
dec
movsb
pop
cmpb
insb
mov
sub
jp
in
lret
fstps
cmp
xor
push
inc
test
ret
pop
aaa
cmp
loope
mov
mov
les
push
sbb
repz
mov
dec
cli
outsl
and
xchg
sub
xchg
or
mov
dec
xor
orb
int3
sub
mov
int3
mov
cmc
pop
inc
or
es
and
xchg
pop
mov
fwait
mov
jo
lods
pop
mov
push
adc
dec
mov
jne
sbb
jne
mov
movsb
js
ss
lret
jne
xchg
push
loop
in
sbb
inc
sbb
and
lahf
inc
rorb
ja
mov
loopne
jl
flds
insb
je
push
mov
mov
push
push
jmp
cs
jnp
pop
inc
loopne
push
dec
sbb
ficompl
in
adc
rcr
mov
and
xchg
jecxz
call
mov
sbb
mov
dec
sar
adc
je
test
out
mov
lock
clc
lahf
xor
popa
or
add
lods
cwtl
xor
loop
sub
js
adc
or
cmp
lds
cmp
andl
push
or
sbbb
je
push
mov
and
imul
xor
js
movsb
inc
jg
int
lret
jb
cmp
pop
jae
xchg
mov
aam
pop
push
mov
outsl
ficoml
das
jl
cmpsl
mov
in
cmp
mov
sub
dec
lret
sub
in
dec
insl
int
mov
or
int
shll
mov
add
mov
mov
das
cmp
add
push
dec
loop
pop
push
jp
outsl
lock
jl
dec
mov
add
inc
xchg
ds
rcrb
fwait
pop
sbb
pop
xchg
push
add
les
movnti
iret
mov
pop
xchg
aas
scas
fisttps
jno
sbb
push
enter
inc
cmp
dec
push
cmp
repz
xchg
stc
roll
aam
ret
fildl
sbb
push
test
icebp
mov
ret
decb
sub
lret
aad
xchg
mov
movb
addr16
mov
mov
xor
out
pop
insl
les
xchg
testl
enter
xlat
mov
dec
xchg
pop
imul
ret
mov
hlt
xor
cmp
dec
cmp
xchg
scas
or
pop
xor
push
mov
sub
xchg
add
mov
add
sub
loopne
mov
xor
and
outsl
pusha
testl
pop
sbb
pop
shlb
hlt
clc
orb
sar
or
jp
pop
das
cwtl
cmp
cmc
and
xor
inc
cmc
out
sub
movsb
push
pop
or
fwait
gs
outsb
sub
mov
sub
sbb
int
add
ffreep
cmp
mov
xchg
pop
adc
push
dec
popf
xor
aaa
sti
fsubrp
and
loopne
jg
into
mov
add
decb
mov
mov
loop
insl
mov
push
jnp
mov
rolb
test
add
cpuid
das
pop
mov
pop
jmp
mov
shrb
jne
gs
icebp
pop
jle
stc
sbb
push
sarl
enter
pop
adc
and
mov
push
dec
imull
pop
sbb
into
mov
addb
clc
mov
adc
js
add
jno
or
adc
out
xchg
adc
mov
imul
adc
jnp
jg
ja
jmp
dec
imul
popf
sarl
mulb
aas
dec
mov
jmp
mov
or
sbb
sbbl
pop
stos
cmc
cmp
mov
out
shrb
repz
call
test
sbb
add
js
leave
test
jle
jo
adc
pop
or
push
xor
dec
pop
inc
test
mov
pop
xorl
pop
adc
xchg
push
and
sub
dec
jecxz
lods
sub
fs
and
add
push
pop
jb
mov
fs
push
stos
xor
push
addl
cmp
js
push
or
ret
mov
icebp
jmp
sub
jns
cmp
pop
pop
fildl
sbb
jne
cmp
and
fdivrs
jnp
add
hlt
stos
stos
cs
fcmovnu
insl
loope
orb
sbb
pop
xchg
in
aas
sbb
and
inc
lea
sbb
mov
push
adc
sbb
mov
mov
and
and
mov
sbb
push
shr
mov
cmpsl
xor
sahf
adc
push
pop
push
and
jns
pop
mov
addl
dec
sbb
jmp
dec
jo
mov
dec
je
jmp
sub
add
sbb
das
cmp
jno
inc
inc
filds
cmp
loopne
out
mov
stc
cltd
jg
add
scas
add
insl
xlat
jb
add
mov
mov
sub
dec
cmpsl
sbb
xor
mov
movsb
adc
push
mov
xor
and
cmpl
cltd
in
mov
mov
inc
push
je
mov
xor
insb
stc
std
adc
fstl
xor
call
je
sub
sbb
aaa
push
push
scas
aam
js
scas
leave
test
data16
pop
out
sub
push
test
rorl
dec
stos
jmp
mov
inc
pusha
out
cmp
jge
adc
jns
dec
mov
mov
jo
sbb
subb
mov
xchg
mov
or
adc
or
dec
aas
adc
inc
fildll
int
dec
divl
sub
or
fwait
jo
lret
ss
addr16
push
pop
pop
sub
mov
cmp
jp
jg
fcmovbe
dec
lret
push
mov
sub
or
pop
xchg
xchg
cld
jne
loopne
push
subb
inc
jo
jle
dec
stc
sti
leave
fistps
sbb
mov
xor
popf
test
inc
sbb
dec
enter
repz
mov
xor
repnz
push
xor
lds
fsubl
imul
mov
enter
sti
popf
shl
push
aad
jbe
mov
mov
xchg
jmp
gs
frstor
enter
xchg
inc
js
out
add
jecxz
ss
cmp
out
rcl
and
into
jns
lods
push
mov
xlat
mov
mov
pop
js
stos
adc
pop
scas
xchg
and
cmp
flds
cmpsb
jge
sbbl
call
lcall
push
dec
repnz
xor
loopne
xchg
jmp
push
lds
ds
mov
mov
mov
negl
lret
das
jg
aaa
inc
fwait
dec
mov
dec
stc
xor
or
jnp
aam
outsb
pop
les
xchg
push
leave
andb
jecxz
adc
jmp
mov
data16
push
pop
cmp
test
mov
int3
stos
sub
mov
dec
jbe
sub
dec
xchg
ss
or
mov
clc
in
fcmovb
call
push
fsubrs
scas
aas
mov
js
orb
pop
cltd
sub
jbe
loopne
mov
inc
push
int3
pop
stc
mov
mov
fiadds
or
adc
sub
in
push
test
stos
sub
mov
lods
mov
push
or
add
adc
xchg
mov
pop
mov
shrl
lret
cmp
cmc
mov
loope
xor
pop
adc
adc
adc
ds
push
ret
std
fcoms
xor
in
pushf
xor
stos
imul
out
sub
loop
shrb
leave
mov
pop
fs
ds
arpl
mov
sub
int3
cmc
dec
ljmp
dec
add
arpl
cld
xor
loopne
cmp
cmp
xor
lcall
data16
sub
out
and
pop
lea
adc
iret
xor
cmp
jb
sbb
ficoml
push
loopne
add
push
jle
andl
or
mov
mov
mov
adc
inc
es
add
lods
ret
out
push
dec
stc
fs
dec
mov
mov
sbbb
scas
jp
and
mov
leave
cmpsb
dec
xor
out
insl
xchg
in
stos
lret
sti
aaa
cmp
cmp
jge
dec
outsb
push
stos
dec
fisubrl
in
push
push
mov
clc
in
jmp
in
and
test
jb
or
dec
lods
and
mov
push
das
jmp
inc
dec
arpl
xchg
loopne
push
dec
sbb
mov
push
inc
shrb
mov
sbb
inc
jecxz
pusha
rcll
mov
mov
repz
sbb
or
es
popa
jl
xchg
xchg
xor
leave
dec
fildll
lods
cmp
mov
jge
into
push
dec
imul
cmpsl
imul
fadds
sbb
jle
test
mov
sub
addb
push
add
pop
pop
and
push
pop
mov
lock
in
pop
jl
insb
lods
arpl
roll
hlt
jmp
pop
push
les
aas
mov
push
cmp
xchg
jae
jb
les
cmp
aas
sbb
test
dec
sub
adc
push
jbe
sbb
adc
push
iret
jbe
xchg
adc
adc
pushf
inc
xchg
insl
sti
mov
mov
push
mov
cmp
mov
xchg
and
jge
movsl
mov
cmpl
lds
dec
stc
push
inc
xor
popa
push
sub
loop
jl
test
pop
loopne
sub
mov
mov
or
mov
pop
mov
mov
mov
jnp
test
push
mov
mov
stos
mov
out
or
mov
jno
xchg
daa
imul
xchg
inc
leave
ret
lret
pop
sbb
mov
push
cmp
jnp
mov
ficoms
push
mov
jle
addl
ljmp
shl
dec
xor
pop
mov
jns
push
push
adc
xchg
and
inc
std
inc
push
pop
fnstcw
popf
out
add
cmova
cmp
pushl
pushf
fadd
in
mov
lods
cwtl
cld
jmp
mov
fs
dec
and
jnp
cs
pop
cli
fidivrs
add
push
in
mov
sbb
fwait
sub
repz
lock
aam
push
jb
fisttpll
repnz
mov
mov
cmp
sbb
in
leave
adc
jne
push
mov
pushf
leave
inc
in
sbb
aam
scas
rcr
inc
jo
sar
rorl
jnp
shrb
jbe
jecxz
lret
pop
jecxz
mov
stos
dec
pop
adc
rcl
fwait
scas
adc
jge
add
push
sbb
mov
mov
jle
adc
loopne
mov
out
xor
loopne
dec
pop
mov
xlat
std
mov
std
lcall
sti
ficoms
call
lods
aas
iret
int3
cmp
inc
push
xchg
sti
xchg
push
std
push
mov
pop
mov
repnz
push
xchg
mov
push
pop
rol
into
std
outsl
sub
pop
cmc
xchg
sub
pop
dec
shl
daa
pop
push
push
ja
shlb
fisubrs
movsb
enter
inc
mov
mov
xorb
test
test
push
movsl
xorl
fldl
pusha
insb
pop
icebp
pop
into
sub
mov
xchg
push
push
adc
pop
fld
movsl
sahf
outsb
cmpsb
and
in
adcl
sub
arpl
mov
ljmp
loop
adc
cli
add
mov
sub
jge
push
shl
pmullw
jg
and
mov
jge
xchg
xchg
pop
mov
sub
out
add
sub
cmc
cmp
stc
roll
xchg
and
mov
mov
xchg
shrl
sti
imul
mov
mov
cmp
sahf
pop
shll
fistpl
shrl
adc
outsl
and
fildll
or
jmp
mov
shlb
clc
fdivl
lret
ja
in
jb
aam
and
movsb
mov
es
nop
icebp
or
inc
test
js
cli
cmp
jp
sbb
sub
lods
ljmp
jmp
or
xor
mov
mov
lcall
mov
dec
std
cmpsl
imul
and
into
dec
xor
mov
push
aaa
and
mov
or
pop
mov
rolb
xchg
dec
mov
into
xor
sub
add
rolb
mov
xchg
and
dec
in
sub
nop
xor
push
xchg
dec
dec
dec
sbb
lret
pop
xchg
inc
xor
mov
dec
push
mov
loopne
xor
outsl
leave
add
daa
adc
mov
mov
ss
lock
and
adc
add
and
jae
fwait
outsb
or
jnp
push
xchg
sub
jmp
int3
jae
adc
sti
dec
mov
movsl
into
push
outsb
jl
sbb
inc
ds
js
mov
adc
imul
stos
or
in
or
pusha
xor
lods
insb
sbb
or
movsl
fwait
jp
mov
fbld
mov
imul
mov
add
dec
fsubl
fadds
out
rclb
les
cld
sub
sub
stc
rep
int
out
add
pop
add
mov
lods
je
rolb
sub
movsl
pop
in
jae
hlt
jbe
cmp
aam
sbb
fwait
inc
shlb
popa
dec
insl
or
or
aas
ret
std
adc
icebp
out
mov
sbb
mov
dec
test
xchg
xor
lods
std
ficompl
adc
imul
or
jecxz
in
mov
push
adc
or
mov
adc
out
xchg
mov
jbe
jb
aad
cld
push
lods
mov
inc
dec
fdivs
test
test
mov
push
xchg
out
scas
adc
dec
out
pop
inc
inc
inc
dec
sub
lods
lahf
mov
pop
js
loop
ficompl
js
stc
rcl
adc
jns
dec
das
xor
pop
jmp
sbb
je
xor
adc
lds
dec
rclb
aam
lds
adc
mov
shl
pop
or
xor
repz
std
movsl
out
je
shr
fadd
xor
movsb
ret
add
pop
outsl
fsubs
or
imul
adc
iret
push
fwait
cli
mov
lahf
lock
dec
cmp
jmp
bnd
mov
xchg
and
and
or
and
in
test
lret
mov
scas
or
in
mov
jo
and
xlat
push
lds
jge
add
mov
cmp
dec
cli
or
imul
loop
or
bound
cld
sahf
hlt
dec
push
outsb
inc
arpl
mov
push
pusha
movl
out
int3
out
lahf
mov
pop
xchg
adc
adc
mov
repnz
mov
cmc
insl
stos
aaa
sbb
jmp
xchg
pop
mov
dec
enter
rclb
cmp
test
add
test
add
or
mov
jbe
sahf
lret
scas
jb
addr16
mull
xchg
cmpsl
sub
dec
pop
stos
xor
aaa
fisttpl
adcb
xchg
sahf
mov
and
jmp
inc
outsl
movaps
or
fmuls
pop
iret
jnp
xor
lods
push
imul
inc
jb
loop
sub
ja
add
sbb
dec
sahf
xchg
adc
jae
roll
hlt
jb
jge
jo
mov
push
sbbl
mov
jno
cmpsl
sub
dec
push
leave
ficoml
and
fxch
fadds
cmp
cmp
pop
fwait
jae
cwtl
out
std
call
adc
and
and
inc
dec
cmp
sbb
pop
ja
clc
push
xor
lds
sub
jge,pn
stos
pusha
mov
adc
popf
jns
xor
xor
push
ds
xorl
iret
xor
test
movsl
clc
xchg
mov
lret
or
push
and
sbb
pusha
mov
mov
push
icebp
adc
inc
inc
xchg
dec
clc
inc
ljmp
subb
mov
adc
mov
push
jg
aad
push
pop
test
in
adc
xchg
add
ja
out
fisttpl
mov
nop
rorb
int
popf
leave
xor
xlat
loopne
jmp
dec
or
insl
sub
inc
fcmovb
pop
xchg
cmp
es
inc
pusha
fisubl
fcomip
lods
mov
fiaddl
push
mov
mov
sbb
ja
sahf
inc
mov
add
hlt
inc
popa
sbb
mov
jmp
orl
jecxz
push
mov
or
cli
push
mov
adc
pop
pop
cmp
insl
push
dec
dec
les
fbstp
xor
ret
pop
data16
push
in
mov
jmp
fmull
adc
push
int3
popf
xor
popf
aas
and
pop
adc
cmp
push
lret
sbb
fistpl
push
stos
fwait
xchg
xchg
loopne
loopne
shr
dec
test
outsl
xchg
dec
wrmsr
shll
push
cmpsb
lret
adc
sub
push
push
mov
mov
dec
ret
daa
sub
or
mov
loope
jp
mov
jne
sbb
mov
leave
imul
arpl
xchg
gs
mov
sub
cld
adc
mov
cld
or
inc
mov
movsl
and
add
cmp
and
dec
jae
mov
mov
mov
dec
jae
insl
std
rcrl
cmp
push
ret
add
out
jecxz
lods
cwtl
or
sub
fdivl
dec
dec
addr16
lods
jbe
outsl
lea
and
pop
cmpsl
cmp
lea
inc
aad
leave
aas
add
dec
setg
jecxz
mov
pop
adc
mov
clc
and
and
leave
add
push
into
hlt
rclb
xor
jecxz
clc
and
mov
cmp
inc
orb
stc
ret
mov
call
mov
mov
call
or
dec
push
xor
nop
ret
add
push
pushf
jae
mov
cmpl
cmc
adc
push
inc
pop
aad
adc
aaa
les
lea
sbb
and
hlt
dec
or
push
xor
mov
add
or
jp
loop
loop
adc
lds
stos
addb
clc
adc
ret
imul
ja
pop
movsl
ljmp
ljmp
mov
sub
lds
jge
fdivrp
ret
fdivp
outsb
std
cmpsl
in
in
hlt
insl
and
call
sub
fimuls
int
icebp
fiaddl
out
loop
lret
fidivrs
insb
inc
and
sub
pop
sub
push
mov
xchg
cmc
pop
xchg
mov
gs
cmp
mov
sbb
dec
sub
push
add
test
xchg
jecxz,pn
leave
fcomps
ss
cmp
scas
and
sarb
sbb
cmpsb
into
jnp
or
outsb
fbstp
cmp
sbb
je
pop
pop
push
xlat
dec
sbb
cmpsb
mov
inc
subl
idivl
and
mov
repnz
add
jecxz
rcl
jg
lahf
mov
mov
imul
mov
cmp
pop
cmc
inc
call
or
pop
jle
push
push
sti
stc
mov
loop
mov
aad
jbe
addb
add
xchg
rorb
adc
in
or
pop
cmp
xor
dec
push
lods
inc
dec
cld
pushf
xchg
jae
loopne
enter
add
xchg
pop
pop
add
in
push
aaa
bound
int3
dec
jo
push
sbb
shrb
fbld
adcb
mov
jle
aad
cmpsb
xor
popa
lock
js
inc
pop
mov
and
aaa
ds
pop
adc
pop
push
loopne
mov
xor
sub
std
push
or
lcall
dec
ja
xor
in
je
mov
sbb
cmp
pop
loope
movl
out
xchg
lock
push
jle
mov
push
push
imul
imull
dec
inc
mov
xor
xchg
shrb
subl
out
adc
inc
push
or
jbe
negb
dec
decb
dec
inc
mov
and
lahf
push
mov
fisubs
inc
test
fadds
incl
push
shlb
dec
ficompl
enter
pop
mov
xchg
jne
ljmp
clc
lret
std
inc
push
add
lcall
lock
fwait
xor
out
push
fldcw
push
fwait
xchg
and
adc
std
add
int3
fcoms
popf
mov
xchg
pop
pop
out
adc
push
jno
adc
lods
repnz
mov
test
xchg
xchg
pop
pop
popa
xlat
pop
pop
or
addr16
dec
das
adc
fnstenv
addr16
or
fnstenv
mov
adc
arpl
rolb
aas
jb
add
xchg
jg
repnz
fldenv
xor
push
push
idiv
mov
pop
stos
fs
das
bound
jno
xor
inc
or
cltd
inc
adc
or
rsqrtps
dec
fadds
pop
or
sbb
xor
cmp
pushf
les
sub
pop
xor
dec
in
and
dec
arpl
push
int3
xchg
cmp
aaa
arpl
xchg
rclb
cmp
daa
lahf
out
outsl
xor
test
mov
mov
fsubrl
add
jg
jmp
cwtl
test
cmp
loope
rorb
jl
aas
mov
ret
cli
sbbl
fwait
das
jns
loopne
mov
pop
push
push
inc
repnz
lea
clc
icebp
and
andb
push
fidivrs
jecxz
in
or
dec
dec
jae
daa
hlt
lods
sub
and
out
mov
das
sbb
and
sub
dec
mov
in
xchg
xchg
inc
cli
inc
mov
xchg
cmpsb
movsl
pop
jl
ljmp
push
mov
sbb
insl
sahf
pop
xor
adc
push
mov
into
jp
ja
dec
lcall
mov
outsb
filds
ja
rorl
adc
and
push
sbb
pop
push
dec
movsl
cmp
pop
inc
movsb
sub
xor
ds
int3
add
pop
dec
out
cmp
cwtl
fdivl
add
mov
ljmp
sub
loope
pop
pop
pop
or
aam
int
mov
xchg
add
xchg
adc
xlat
xchg
stc
repnz
nop
lret
mov
lea
mov
and
out
and
fwait
adcl
fnsetpm(287
lds
jge
push
mov
jno
and
cmp
or
repnz
xchg
adcb
in
push
cld
inc
in
imul
adcl
pop
sbb
cmp
je
bound
fmul
push
xchg
insl
xlat
mov
xchg
sbb
into
pop
clc
sbb
or
xor
and
push
sub
mov
push
xchg
sbb
int
jb
jnp
imul
xchg
fbstp
mov
pop
sbb
pop
push
test
pop
mov
std
pusha
cmpl
cld
icebp
pmuludq
insl
rcrb
fldcw
sub
mov
and
shlb
dec
sti
inc
xchg
pop
pop
iret
cli
mov
shll
xor
adc
add
and
dec
lods
popf
stos
dec
lods
jle
push
mov
gs
icebp
and
cld
cmpsl
mov
push
je
push
mov
push
jge
push
jl
out
leave
mov
sub
fnsave
lds
dec
sbb
cmp
push
mov
in
das
popf
sbb
js
aas
imul
daa
jmp
js
adc
pop
xchg
pushf
xchg
aas
pop
loop
jg
sbb
mov
in
sbb
cmp
or
lods
mov
push
or
push
and
aad
mov
js,pt
sti
loopne
push
jge
mov
out
dec
cwtl
inc
popf
mov
je
iret
cmp
stos
stos
enter
cvtps2pi
test
test
pop
jmp
sbbl
mov
and
push
jb
int3
add
gs
push
push
hlt
mov
loopne
lret
imul
push
shr
outsb
maxps
mov
es
jmp
shll
cmp
adc
into
pop
mov
leave
jg
pop
push
cld
mov
imul
popf
dec
inc
inc
aad
ror
enter
add
jae
inc
imul
mov
mov
jno
and
mov
ret
out
dec
movsl
or
outsl
and
mov
inc
adc
aam
add
fidivs
ds
sbb
push
cmpsl
sbb
mov
xor
aaa
mov
push
or
jg
xchg
insl
clc
or
inc
cmpsl
xchg
pop
jns
mov
into
int
push
cwtl
push
insb
xlat
inc
mov
ja
inc
sbb
push
sahf
mov
cmp
sub
lea
add
cmp
xor
into
xor
scas
icebp
and
subb
inc
pop
push
inc
fildl
repnz
jb
push
mov
jecxz
addr16
mov
jo
in
out
lahf
pop
jg
fists
iret
aas
test
cmp
or
cmp
pop
repnz
inc
xchg
add
popf
movsb
dec
jb
lock
stos
mov
and
call
es
xchg
nop
adc
pop
rcrb
jo
mov
add
arpl
push
cmpsl
and
sbb
adc
mov
ja
movsl
mov
mov
jg
pop
fists
mov
or
dec
mov
loop
icebp
inc
cmpsl
addr16
loopne
mov
mov
scas
test
mov
push
add
or
fistpl
test
inc
sub
add
mov
mov
jecxz
xlat
jge
pop
lea
movsl
add
dec
jbe
push
push
jecxz
push
int3
repz
popa
daa
adc
pop
mov
leave
in
xchg
xor
xchg
insl
sub
jmp
xor
scas
sti
push
inc
in
imul
cmp
or
lcall
lods
mov
sbb
mov
dec
in
cltd
dec
xchg
imul
lret
es
addr16
clc
je
mov
cli
xchg
inc
fdivs
flds
push
jo
sahf
test
cwtl
push
dec
cmc
mov
int3
dec
xchg
adc
sbb
repz
aam
gs
pop
filds
icebp
inc
sub
jnp
mov
mov
rcr
xchg
mov
mov
test
or
or
cli
or
push
sub
xchg
outsb
push
outsb
sbb
data16
gs
push
pop
out
lock
mov
ds
and
movsl
dec
inc
stc
jmp
jnp
pop
mov
adcl
cmp
dec
jno
mov
das
pop
outsl
lea
inc
test
mulps
idivb
int
loop
inc
jo
pushf
js
rolb
push
fs
je
pop
fldt
inc
inc
fadd
push
pushf
or
nop
cmp
sar
testb
dec
xchg
dec
sbb
adc
fildll
push
lcall
push
push
pop
fdivl
leave
iret
xchg
in
ja
mov
cmpsl
jmp
ret
dec
icebp
gs
add
lods
mov
not
mov
movsl
cmpsl
shll
xchg
cmpb
cmc
jo
xor
loopne
add
rdtsc
jb
les
push
ret
pop
sbb
or
xor
inc
adc
xor
dec
inc
pushf
sub
adc
or
mov
cmpsb
mov
decl
nop
sbb
pop
jbe
and
jo
mov
mov
aas
inc
push
aas
mov
popa
push
or
pop
xchg
inc
movsb
popf
inc
xchg
xchg
jl
xchg
push
dec
aad
add
mov
test
push
insb
leave
das
cs
xchg
add
mov
lods
test
and
je
mov
mov
inc
push
lcall
fcmove
sbb
idivl
pop
fdivs
cld
idiv
dec
inc
mov
add
cltd
push
popf
ret
fs
pop
ljmp
push
sub
dec
in
push
push
dec
cltd
int
test
ljmp
jns
pusha
nop
xor
shrl
pop
inc
popa
sub
pop
cld
dec
roll
dec
orb
xchg
mov
rcrb
cltd
mov
fdivrl
hlt
pop
test
jo
mov
and
fidivl
in
shrb
adc
cmp
or
cltd
imul
add
jl
or
pop
pushl
and
dec
idiv
add
pop
insl
inc
ss
les
div
leave
mov
ja
mov
xchg
inc
pop
or
dec
popf
or
add
fstps
popa
int3
jne
pushf
mov
scas
outsb
sub
cli
pop
xchg
adc
lcall
sbb
pop
xor
mov
into
stos
push
icebp
inc
push
into
rclb
push
cmp
lea
cmp
daa
dec
mov
pushf
inc
loope
dec
out
xor
frstor
push
push
pushf
outsl
clc
adc
imul
inc
push
xchg
xlat
mov
sbb
cmpsb
pop
test
xchg
fidivl
add
pushf
add
mov
adc
sbb
jns
js
adc
test
stos
out
cmpsb
pusha
aas
jle
cmp
dec
xorl
outsb
jae
fwait
sbb
mov
jl
dec
loope
aaa
dec
repnz
pmaddwd
lods
arpl
adc
inc
push
into
lods
push
les
lock
lcall
mov
aam
jne
cmp
push
out
pop
xor
push
push
mov
repnz
mov
popf
push
add
lds
push
repz
fs
mov
es
scas
out
dec
or
stc
test
push
push
ljmp
rorl
jl
pushf
pushf
xor
xchg
imul
sub
pushl
repnz
push
mov
int
cmpb
aam
xchg
jno
push
pop
sbb
cs
arpl
and
or
or
adc
aad
mov
inc
jg
and
enter
fmull
jns
aam
push
jp
sub
lahf
cld
or
mov
jb
cmp
lahf
add
inc
loopne
inc
ds
fs
arpl
and
cld
sbb
iret
jl
nop
punpcklbw
push
out
pop
lret
rorb
mov
dec
sub
lret
in
cwtl
dec
jnp
imul
inc
push
jecxz
dec
dec
test
jecxz
dec
fpatan
mov
cwtl
out
ljmp
cmpl
mov
lcall
jb
movsb
dec
fs
popa
les
push
mov
sbb
dec
push
js
mov
hlt
inc
sub
je
in
sbb
ret
mov
sbbl
aam
push
push
inc
jmp
dec
cltd
dec
inc
cmp
mov
aaa
les
cmp
in
xlat
xchg
mov
test
sub
into
fmul
sub
lock
sbb
test
pop
fisttpll
iret
js
jne
lods
cmp
or
xor
dec
popa
lret
pop
push
test
pop
cmp
out
push
push
test
aas
scas
das
dec
in
sti
sahf
mov
dec
pop
and
lods
out
cmovb
ror
adc
mov
jne
and
imul
pushf
pop
inc
dec
inc
mov
push
rcrb
add
repnz
xchg
push
fwait
inc
stos
idivb
mov
jo
fsubrp
stc
push
movsb
pushf
aam
jg
subb
mov
push
mov
lds
stos
push
jne
or
mov
es
jb
mov
or
sbb
push
cs
jle
adc
adc
xchg
dec
imul
shll
xchg
int
fimuls
cmpsl
loop
aad
mov
dec
dec
data16
sub
call
mov
ja
mov
stos
pop
or
mov
xchg
mov
ja
mov
int3
push
pop
pusha
pop
fxch
mov
int3
sub
fistps
sahf
fiadds
mov
xchg
cmpsb
adc
aad
push
inc
test
les
shlb
neg
js
xchg
sti
mov
mov
mov
pop
xchg
pop
ret
inc
imull
fs
lds
fidivs
pop
repz
rcr
pop
hlt
jle
mov
shrb
add
lret
imul
xchg
test
and
out
xor
mov
sahf
xchg
jbe
icebp
adc
aaa
xor
pop
mov
aam
out
sahf
jne
loop
xor
imulb
lds
xor
dec
and
adc
gs
xchg
mov
push
decl
into
repnz
cmpsl
mov
sbb
loope
aam
rcr
and
out
arpl
mov
lock
ds
add
nop
dec
and
jne
mov
xchg
jae
mov
xor
adc
fld
scas
mov
aas
ja
or
or
shl
inc
pushf
and
insb
mov
insl
cmp
loopne
call
js
lret
cmp
add
fildl
cmpb
imul
sbb
sub
mov
fisubrs
and
popf
out
cmp
push
mov
std
fildl
and
out
in
neg
adc
pop
cmpsl
or
mov
shl
sub
popa
fisttpll
pop
push
sub
adc
fisttps
sti
mov
dec
dec
mov
adc
nop
stc
cmp
rolb
cli
lods
push
jnp
jo
dec
cmpsb
sti
pop
cmc
mov
shll
xorb
int3
cltd
mov
push
add
inc
addr16
push
outsb
es
or
test
jae
mov
imul
enter
and
call
lock
js
jno
add
pop
pop
pop
add
mov
pop
and
mov
mov
xor
lods
ljmp
add
mov
lods
into
pop
pop
repz
adc
xor
xchg
xchg
fnclex
std
cltd
inc
rorb
shll
testl
pop
aad
lods
sub
mov
leave
mov
jno
mov
jl
lock
stc
enter
insl
cld
sbb
dec
sub
data16
pop
pop
jno
mov
mov
je
push
in
jnp
and
fwait
dec
in
mov
fmul
pop
hlt
xchg
jo
mov
mov
loop
movsb
cmp
dec
dec
loop
clc
es
rorl
jecxz
scas
adc
sub
push
adc
nop
stos
sbb
sbb
ljmp
cmp
push
pusha
xor
mov
dec
xchg
xchg
scas
cltd
add
das
imul
push
cmc
pop
sbb
andl
mov
mov
popa
xchg
mov
ja
shll
repnz
movsb
or
cmpsb
inc
or
push
fwait
cmpsl
fcomi
add
ss
jbe
fcomps
mov
mov
cmpsb
sbb
out
jae
jge
inc
mov
xor
xor
push
sub
nop
cmp
xor
xchg
xlat
sub
cwtl
pop
das
or
mov
mov
sub
or
cmp
pop
or
movsb
stos
push
enter
pop
xchg
push
dec
xchg
les
dec
cmp
sbb
inc
inc
arpl
sbb
mov
mulb
loope
adc
fwait
fwait
add
pop
jl
or
push
loopne
jecxz
push
call
push
add
mov
idivl
cmp
outsb
ret
xchg
mov
xchg
and
mov
aad
pushf
and
fxch
jnp
hlt
or
sub
mov
outsb
and
inc
xor
test
add
push
fs
leave
sti
std
cmpl
xor
aas
or
das
mov
call
push
pop
sti
sbb
or
adc
or
jno
cmp
lock
daa
cltd
test
cwtl
jmp
scas
dec
imul
mov
pop
jae
push
dec
mov
movsb
inc
stos
mov
leave
hlt
cli
xchg
xchg
mov
pop
jns
xchg
push
in
aam
xchg
sbb
adc
sbb
push
sahf
aas
movsb
and
xor
xchg
push
push
jne
mov
fcmovnu
pop
xlat
and
out
mov
adc
clc
arpl
sti
and
les
jmp
sub
xor
and
std
cmc
outsl
and
adc
cmp
bound
loop
cmp
cmp
mov
popf
inc
clc
or
or
test
mov
popa
mov
adc
testl
clc
aaa
scas
sbbb
xor
fs
les
pop
or
out
pushf
mov
jl
cltd
dec
fdivs
xchg
iret
inc
and
dec
fiadds
sahf
sub
xor
jne
jmp
sub
xchg
adc
sub
jb
sti
das
jae
fiaddl
aam
fiaddl
push
fstl
std
jle
ret
sbb
lret
jo
arpl
js
arpl
fildll
mov
mov
in
adc
ret
ret
cmp
push
std
les
cmc
pop
mov
clc
xlat
or
and
lock
enter
sbb
shlb
jne
jecxz
ficompl
jno
dec
jge
add
in
imul
adc
pop
mov
push
fnstcw
pusha
mov
ds
loope
add
mov
addl
or
push
fcmovnu
scas
mov
cwtl
mov
or
cld
xor
xor
imul
mov
cli
popf
mov
mov
mov
scas
jne
mov
test
inc
pop
scas
jle
xor
fldcw
add
and
mov
adc
les
sarb
arpl
adc
in
sub
mov
add
push
push
push
call
push
lods
sahf
adc
icebp
dec
inc
xchg
or
outsb
or
and
gs
and
inc
mov
stos
adc
cli
inc
fs
mov
xchg
xchg
test
test
sbb
mov
jg
dec
shll
mov
es
out
dec
jns
mov
cmpb
pop
sbb
cmp
test
jb,pt
xor
loopne
scas
in
popa
gs
push
mov
mov
and
add
and
popf
test
jl
sbb
lret
push
imul
lea
mov
testb
iret
add
jmp
fidivl
nop
pavgw
push
sbb
dec
clc
mov
ss
mov
fimuls
je
sub
push
fsubrl
xchg
cmp
mov
dec
mov
jle
fadd
xor
mov
insb
xorl
pusha
xchg
and
xchg
fstpt
aam
sbb
lods
out
jo
pop
stc
sbb
fstpl
arpl
jl
orl
dec
stos
in
or
jge
divb
xchg
lcall
cmp
lret
xor
add
jnp
push
push
pop
loope
jnp
or
xchg
repz
orb
arpl
xor
popf
adc
lds
into
test
and
test
addl
sar
jns
pop
cmp
aaa
inc
icebp
cs
or
fcomi
sbb
cmp
scas
mov
aaa
sbb
repnz
mov
pop
ljmp
into
mov
add
rcll
dec
test
xchg
mov
push
mov
push
call
mov
ror
sub
jmp
or
cmp
inc
jl
movsl
cmp
call
xchg
push
mov
adc
push
inc
ss
jmp
in
fsubrl
mov
shl
add
dec
jns
fsts
dec
js
inc
in
ds
pop
push
cmp
out
push
sub
dec
cmpsb
lcall
mov
stc
or
fstpl
in
pop
sbb
sbb
mov
cld
sahf
les
cs
sub
xchg
scas
ficoms
stc
adc
sahf
inc
fdivs
cmp
push
test
sub
out
arpl
dec
in
sbb
lcall
adc
js
xor
and
mov
pop
mov
cltd
cmp
xchg
mov
imul
dec
jnp
xchg
jle
dec
and
insb
jecxz
sti
addr16
mov
enter
ss
movsl
cs
mov
jno
shl
jl
jmp
in
xchg
push
orb
add
pop
ja
je
cmc
sub
adcl
mov
lods
sarb
ror
iret
ret
movsb
xchg
scas
dec
and
pop
inc
or
stos
mov
adc
adc
or
push
insb
pop
pop
popa
push
push
mov
and
dec
or
pop
fidivs
sbb
aam
incl
mov
in
pop
pusha
cld
inc
pushl
dec
stos
ljmp
adc
mov
add
stos
jb
xor
xchg
cmp
je
push
mov
pushf
mov
xchg
icebp
jmp
mov
jnp
push
lea
in
adc
rorb
jnp
lods
mov
mov
std
and
mov
jp
and
fcmovbe
nop
subb
add
push
xor
and
lods
idivb
sub
mov
xchg
jbe
sub
or
adc
stos
jl
divb
insl
dec
add
arpl
mov
jne
inc
jp
cmc
jno
je
pop
ja
cmpsl
sub
push
fwait
mov
mov
dec
push
adc
pop
jecxz
repz
outsl
inc
add
push
mov
fs
sub
movsl
out
lds
fidivs
mov
stc
mov
and
cltd
std
jne
mov
cwtl
das
xchg
repz
rcr
and
jmp
pop
pop
cli
pop
out
lds
filds
pop
inc
stos
xor
pop
sub
into
repz
sbb
add
push
insl
imul
test
mov
inc
stos
fcmove
ss
aam
sbb
int3
gs
push
popf
mov
inc
mov
add
sub
dec
repnz
add
stc
sub
insb
xchg
aam
inc
les
pop
sub
mov
push
push
xchg
pop
mov
and
das
cld
mov
fst
std
xchg
pop
xchg
popf
cmp
push
and
lahf
or
push
scas
lock
xchg
cmp
and
pop
adc
xlat
or
mov
dec
aam
jns
push
cmp
sbb
int3
js
cmp
inc
sub
out
push
wbinvd
mov
popa
or
add
dec
inc
ja
int
dec
mov
mov
pop
hlt
in
leave
outsl
outsb
mov
dec
movsl
aam
sbb
inc
inc
dec
xchg
repz
lods
test
pop
xchg
xor
mov
xor
inc
sub
rcl
xchg
add
fisubrs
pop
xchg
decb
or
lock
dec
iret
out
mov
cmc
mov
cmpsb
xor
rcrl
adc
sub
dec
jg
in
clc
mov
lcall
sub
sbb
sbb
inc
test
push
or
outsl
sbb
mov
test
cmp
add
or
nop
pop
bound
dec
dec
adc
hlt
dec
mov
push
pushf
push
pop
rep
shrl
popf
dec
sbbb
repz
test
inc
cmp
dec
mov
out
rolb
ljmp
pop
push
add
ret
pushf
inc
xlat
and
dec
xchg
iret
lock
addr16
mov
rcll
in
push
es
pushl
lock
xor
ror
xchg
scas
rorb
cs
push
imul
pop
xlat
sub
daa
mov
das
sbb
jecxz
fwait
shrl
insb
int3
inc
mov
mov
aam
out
icebp
pop
pop
sub
aaa
xlat
dec
lret
xchg
ss
add
daa
out
sbb
daa
lea
pop
fsubl
adcb
pop
pop
pop
std
mov
dec
pop
repnz
or
inc
out
int3
push
inc
push
pop
jae
or
stc
lods
lea
sub
cmp
lret
data16
dec
imul
fldenv
mov
xchg
push
arpl
and
lret
add
lds
add
iret
mov
arpl
inc
jl
jmp
pop
aas
cmp
jmp
es
pop
fld
sbb
repz
dec
negl
call
mulb
xchg
mov
or
mov
dec
pop
rorl
cmp
sub
mov
pop
cmpsb
push
mov
sahf
icebp
inc
sbb
jns
dec
jmp
imul
push
sbb
pop
fcoms
add
xchg
imul
push
notl
inc
imul
or
cmp
mov
jbe
sbb
sub
shl
arpl
rorb
aam
out
jo
rcrl
mov
arpl
pop
lret
sbb
xor
xchg
lock
cli
sti
iret
pop
dec
pop
lahf
push
sbb
aas
pop
aad
dec
xchg
pushl
ss
into
daa
test
dec
fbstp
xchg
pop
push
test
dec
sub
cmp
inc
add
int3
out
mov
push
and
fxam
and
adc
jecxz
daa
pop
out
inc
dec
inc
sub
pusha
sub
xor
in
or
fs
lods
cmp
pop
decl
mov
lahf
ds
aam
cmc
push
inc
mov
push
pop
in
je
xor
in
shrl
dec
sahf
insl
mov
mov
fists
adcb
decb
popf
jbe
push
sub
dec
sub
push
out
sbb
lods
mov
fiadds
xchg
dec
leave
sbb
inc
xchg
add
inc
sub
sar
pop
subl
fiaddl
gs
jnp
push
adc
dec
shlb
mov
or
or
shll
insb
mov
adc
jmp
int3
fsubs
andl
pusha
lahf
xor
sahf
dec
xor
sbb
int3
push
ja
jnp
jge
pop
aam
mov
daa
incl
sbb
mov
outsb
stos
cmc
shll
sbb
cmpsb
icebp
fstps
pop
xor
dec
xchg
dec
add
push
addl
xchg
adc
pushf
jne
arpl
ret
clc
mov
cmp
nop
jp
sarl
stos
xor
inc
pop
aad
adc
sbb
scas
loop
jns
push
das
push
mov
sub
jb
sar
jp
fcmovbe
call
filds
mov
arpl
inc
jmp
push
hlt
data16
insb
aad
icebp
insl
repnz
mov
jbe
inc
repnz
cmp
mov
push
mov
mov
cld
cltd
adc
arpl
nop
jp
and
lcall
cmpsb
dec
ds
push
inc
imul
fists
mov
hlt
inc
in
adc
mov
xchg
xchg
jbe
fists
or
sbb
shrl
cld
sub
add
cwtl
mov
jnp
cmp
in
xor
loopne
pop
jp
leave
adc
dec
push
dec
int3
jne
push
shll
push
cmpb
pushl
jae
jno
xor
into
int3
test
stos
ret
push
out
fidivrl
in
divl
mov
mov
jmp
js
pop
cmp
mov
lcall
mov
idivb
sub
jae
mov
in
xchg
rorl
xchg
cwtl
pop
gs
sub
inc
repz
and
push
lret
je
ja
shlb
lret
imul
aad
outsl
out
movsb
clc
sbb
int
push
adc
je
jno
insl
xchg
outsb
test
xor
dec
xchg
js
jnp
xor
cli
in
jle
jecxz
ret
outsb
jg
xchg
test
mov
push
sahf
leave
fwait
cli
les
repnz
enter
enter
mov
insl
xchg
sub
jne
sub
inc
pop
mov
jl
lea
pop
xchg
xor
cmp
mov
stos
mov
inc
sahf
jne
addr16
fsubrs
adcb
mov
inc
call
xchg
popa
jge
daa
and
stc
je
frstor
test
pushf
repz
fbstp
gs
idiv
cwtl
push
fwait
fs
jecxz
push
or
inc
cmpsl
pop
fcomps
stc
xchg
and
sbb
rcr
cmc
test
pop
inc
jns
jge
adc
xchg
pop
mov
xchg
popa
and
imul
ds
sub
xchg
xchg
jl
add
jo
mov
lret
pop
push
push
adc
cs
dec
push
in
mov
aam
mov
adc
jp
jnp
iret
into
cmpb
repz
in
je
scas
popf
jae
cltd
repz
cmpsb
out
fs
push
addl
cmpsl
xor
and
inc
cmc
push
outsl
dec
jnp
cmp
cltd
mov
sub
xchg
ljmp
jg
xor
or
push
sahf
inc
sub
cli
mov
cmpsb
lret
ret
lcall
in
mov
sub
xor
prefetch
into
nop
push
cld
cmp
in
ficoms
sub
cmp
mov
jo
and
mov
jo
mov
lods
pop
and
mov
cmpsb
shlb
in
call
bound
inc
xchg
xchg
xor
ja
xchg
mov
xchg
out
push
sbb
ja
xchg
inc
fcmovu
mov
daa
mov
repz
pop
ds
mov
add
and
aad
enter
mov
mov
cmp
push
jb
xor
jo
push
sub
stos
in
lret
push
pop
add
pop
movsb
dec
and
es
and
divl
test
push
aas
rcl
xchg
add
xchg
lret
dec
or
pop
cld
outsb
sbb
shll
mov
jge
pop
push
les
loope
jbe
fld
add
dec
fsubrp
add
scas
outsb
dec
and
cmp
mov
movsl
pop
incb
leave
jo
sbb
push
jbe
dec
push
push
xchg
jge
cmp
repnz
test
repz
push
movzwl
inc
mov
pop
cmp
and
in
in
testl
cmp
hlt
pop
cli
pop
cmp
fistps
test
xchg
and
push
nop
bound
jnp
ss
insl
fdivr
jge
lret
push
sbb
test
mov
sbb
xor
inc
mov
push
aaa
jns
ljmp
jmp
jle
lret
enter
adc
out
inc
push
jle
addr16
popf
mov
sbb
cmpb
pop
loop
add
or
lret
fnstsw
fsubrp
push
test
bound
xchg
add
fxch
adc
cmp
ljmp
pop
movsl
and
or
sahf
fcom
test
les
adc
imull
scas
and
stos
sbb
sbb
adc
test
stos
ljmp
push
adc
scas
push
test
shlb
lods
call
notb
push
cmp
or
xchg
in
popf
sbb
and
pop
or
or
jne
ror
aad
sbb
cmpsl
push
cmp
arpl
in
dec
fwait
push
mov
sbb
and
addl
orb
pop
lret
mov
jne
ret
jecxz
ret
mov
add
sahf
iret
movsl
fadds
fnstenv
xchg
hlt
in
pop
add
adc
inc
in
xchg
cmpl
mov
test
repnz
inc
arpl
xchg
into
dec
and
je
mov
test
mov
out
outsl
mov
mov
mov
stc
movsb
xlat
shl
std
adcl
push
add
xchg
pop
dec
fcmovb
shll
mov
in
imul
mov
jo
pop
inc
ljmp
adc
cmpsb
outsb
xor
jle
out
pop
cmp
test
push
test
sbb
rcrl
lods
jle
dec
fcoms
das
adcb
mov
movsl
iret
shl
aaa
and
lahf
jns
enter
clc
cwtl
add
dec
push
sbb
jp
repnz
mov
addr16
mov
les
daa
inc
adc
pop
cltd
push
pop
aaa
or
jecxz
jmp
pusha
popf
popf
shlb
fists
pop
push
int
movsl
cmpsb
sub
mov
adc
out
mov
sub
dec
inc
fcmovnbe
pop
push
jno
xchg
xlat
mov
and
call
push
roll
mov
jmp
in
fmuls
outsl
push
insb
lods
jecxz
test
orb
xchg
repnz
and
jno
loopne
bound
imul
stos
scas
ds
iret
mov
cltd
mov
mov
cld
imul
andl
aaa
rcll
js
in
test
pop
pop
jge
cwtl
test
das
das
das
outsl
adc
pop
pop
xor
mov
loope
gs
ljmp
add
adc
fimull
fwait
jns
push
mov
xor
orb
movl
jecxz
add
cwtl
mov
inc
rol
dec
pop
pop
scas
cmp
push
in
lods
pop
jmp
ss
imul
xor
and
push
pop
cmp
dec
mov
loope
xor
lahf
loop
in
stos
mov
aam
lods
adc
cmpsb
mov
scas
xor
data16
ds
test
popa
ljmp
add
mov
test
rcrb
pop
pop
sub
jae
insb
push
pop
stos
lret
je
mov
cmp
dec
dec
cmp
fimuls
add
jle
pop
int
push
data16
and
push
data16
pop
popf
pop
mov
cmpsb
mov
mov
loope
jl
call
divb
test
push
cs
int
lds
inc
dec
sub
and
adc
ljmp
out
inc
xor
inc
push
int3
pop
xorl
xchg
mov
or
adc
add
leave
sarl
mov
push
inc
push
inc
outsl
pop
clc
cmpsl
push
paddq
mov
sbb
xchg
adc
bnd
jno
cwtl
mov
movzbl
je
xor
rolb
fwait
xchg
pop
mov
or
test
and
push
push
jae
scas
fsub
sub
push
ficomps
call
or
lods
or
insb
out
mov
add
stos
icebp
out
dec
test
mov
adc
mov
pushf
xchg
in
stos
and
add
mov
inc
aaa
pop
or
popa
fidivrl
push
fistpll
int
cmp
lods
ret
cmp
adc
mov
scas
aad
inc
insb
loop
xor
xchg
lods
inc
jns
mov
jne
arpl
in
out
out
mov
stos
std
rcrl
mov
mov
sub
push
cwtl
push
jns
sub
dec
out
test
xlat
into
inc
jo
adc
test
shl
cmc
or
jb
pushf
fmull
sbb
adc
loopne
or
into
and
dec
push
mov
or
lret
adc
mov
dec
insb
xchg
addr16
xor
mov
cmpsl
adc
push
pop
insl
fcmove
cmpsb
jne
sub
fisubs
mov
xor
push
push
aaa
xor
and
adc
and
mov
xor
jnp
mov
pop
js
mov
pusha
jp
call
mov
imul
jne
popa
sub
dec
xlat
out
add
popa
adc
in
ret
lcall
out
mov
sub
cmp
leave
jle
sti
jecxz
mov
dec
or
jae
mov
repz
xor
mov
add
cmp
pop
test
jne
cld
incb
push
xchg
xchg
cmpsb
sub
jecxz
mov
testb
outsl
push
jmp
mov
mov
and
pushf
dec
idivl
xchg
icebp
pop
out
aas
cmp
adcl
faddl
cmp
jo
rcrl
pop
or
movb
jnp
enter
imulb
xor
push
pop
push
sbb
shl
imull
lcall
in
inc
dec
adc
lock
xchg
test
shlb
mov
sti
lock
scas
jp
mov
jg
push
inc
add
in
jo
pop
nop
int3
and
mov
mov
jne
scas
cld
es
fwait
pop
mov
or
hlt
jns
loope
gs
mov
mov
mov
rclb
add
pop
addb
movsl
out
inc
addr16
adc
dec
dec
les
cmp
cs
mov
cmp
and
sub
adc
adc
inc
inc
xor
jge
ljmp
cli
movb
cwtl
stos
aas
dec
in
call
mov
mov
jne
jmp
pop
cmp
rcl
out
adc
das
xchg
mov
imul
push
aas
les
mov
mov
pusha
mov
dec
mov
sub
int
mov
imul
push
cmp
jle
inc
js
aad
dec
lods
or
stos
lds
sub
nop
mov
or
aam
push
mov
repz
cwtl
mov
pop
shrb
lret
xor
cmp
mov
push
and
xchg
pop
adc
call
aad
lahf
sbb
flds
in
outsl
lahf
dec
imul
daa
call
cld
sub
lahf
sbb
mov
mov
push
in
inc
mov
mov
push
xor
xchg
aad
stos
aaa
inc
xlat
in
iret
and
inc
inc
inc
mov
dec
cmp
mov
mov
inc
fadd
cmp
nop
icebp
loopne
sub
insb
pop
ja
xchg
lods
xor
ds
fiaddl
mov
mov
or
fisubrl
les
adc
shll
sbb
mov
jo
in
orl
ljmp
mov
mov
std
aad
pop
addl
push
cld
mov
mov
fsubrl
xchg
sbb
out
pop
mov
outsb
mov
pop
sti
xchg
insl
cmp
insl
cmp
and
jp
enter
pop
idivb
or
fdivr
test
test
or
cmp
dec
or
push
push
jge
sbb
cmc
push
stos
movsl
adc
das
roll
push
call
push
scas
aas
bound
pop
insl
es
notl
sub
mov
cmp
inc
xor
xchg
jae
jb
outsb
adc
xchg
push
orl
xor
ss
push
lret
sar
aas
fwait
out
test
test
repz
clc
adc
test
lock
pop
cmp
dec
int
mov
cltd
pop
push
ret
dec
div
xchg
sbb
scas
cltd
jge
jnp
outsb
gs
and
mov
jge
mov
push
out
xchg
and
or
push
enter
jb
pop
xor
daa
test
jge,pt
int
mov
sbb
stc
mov
pop
inc
jl
xchg
push
mov
lret
fs
mov
jne
pop
shr
sbb
pusha
jge
cmp
imul
jg
sub
idivb
test
inc
int3
mov
pop
jg
xor
mov
cmp
mov
sub
pop
sub
xor
or
addl
push
pop
aas
pop
and
xchg
jbe
add
lret
nopl
sbb
dec
jg
jle
and
arpl
mov
outsl
cmp
cmp
pop
lahf
xor
inc
aaa
cmp
pushf
jp
loope
jle
or
jle
fcmovnu
jb
rcll
mov
mov
sbbl
inc
jns
and
inc
adc
add
and
imul
out
or
pop
cmc
dec
sbb
push
jg,pt
loop
out
and
test
xor
xchg
shrb
aas
cmpsl
sahf
jp
jns
push
sbb
popa
hlt
adc
jl
and
ror
pop
push
dec
fcmovu
je
stos
rcll
mov
sub
sub
push
sbb
test
stos
mov
push
mov
pop
jmp
xor
and
inc
dec
cmp
daa
sbbl
mov
fsubl
imul
popa
movsl
pop
push
shrl
fistpl
hlt
sbb
mov
mov
sahf
cmovl
xchg
pop
aaa
pop
push
xlat
and
add
xchg
iret
cmp
test
sbb
pop
mov
dec
push
out
out
jae
sbb
insl
mov
loope
mov
das
push
mov
fimull
push
movsl
call
xchg
test
pusha
cmp
mul
add
decb
dec
lcall
mov
jecxz
sbb
iret
in
xor
pusha
and
inc
sbb
mov
rolb
pushf
mov
mov
mov
pop
push
or
nop
jge
pop
int3
in
xchg
clc
pop
mov
lea
js
lea
jmp
in
sub
or
push
or
fs
scas
xor
jge
movsb
xchg
mov
mov
stos
out
in
jbe
adc
mov
out
xchg
mov
xchg
or
xchg
in
jae
dec
int3
pop
add
cmp
stos
fsubs
jnp
sbb
mov
lcall
and
cmp
xchg
jb
push
adc
fstps
repz
inc
or
in
adc
sbb
adc
nop
sahf
std
mov
sub
cmc
js
adc
jp
mov
mov
movsl
adc
push
icebp
call
fsubs
filds
jns
loop
lock
std
lret
pop
ss
cltd
outsb
mov
fidivs
rclw
pop
lcall
popf
dec
mov
fisubl
mov
and
cmp
fldenv
mov
jae
dec
leave
ret
bnd
fidivrl
mov
test
in
add
jbe
inc
add
jbe
rorl
push
outsl
xchg
add
jmp
jle
add
stos
cld
sub
sub
loop
and
fdivr
stos
and
jl
dec
mov
mov
xchg
sub
pop
std
xchg
or
loopne
pop
sbb
inc
fcmove
cwtl
mov
mov
cmp
inc
mov
or
add
loopne
fnstsw
pushf
mov
pop
orb
inc
outsl
ret
xchg
lods
sarl
mov
nop
mov
push
pop
bound
mov
mov
movsb
aam
std
das
sub
push
movsl
call
stos
mov
inc
sub
rolb
add
dec
loopne
popf
outsb
jg
push
pop
das
pop
sbb
fistps
jae
push
adc
cmp
out
subl
aaa
jge
pop
daa
test
xor
ret
jecxz
jns
fs
addb
std
mov
xor
cmpsl
jno
fnstenv
pop
out
or
inc
jle
sub
add
daa
shll
sub
rorb
mov
inc
test
ds
xchg
fdivrs
jp
pop
jne
sbb
pop
loope
and
cmpsb
cmpsb
sbb
cmp
pop
sbb
js
clc
lods
je
addb
xchg
or
in
daa
xchg
movsl
mov
adc
and
repnz
in
pushf
or
insl
inc
icebp
cmp
sub
js
ljmp
pop
push
add
mov
jnp
fidivl
out
pop
and
repnz
movsb
divb
mov
bswap
jbe
iret
xchg
push
sbb
and
push
out
negb
mov
pushf
jle
stos
repz
mov
pop
nop
int
jg
in
add
dec
cmp
arpl
nop
in
loope
cmpsl
xchg
int
out
fists
mov
cmp
mov
or
loop
pop
xor
mov
sbb
rorb
cmpsb
fnstcw
lock
ljmp
or
jge,pn
cmp
push
and
dec
mov
and
add
popf
les
popf
add
push
jecxz
push
shrl
jl
inc
insl
add
jae
adc
jb
jb
mov
pop
cs
pop
mov
or
aas
mov
push
out
call
je
mov
rcr
and
pushf
idivb
test
addb
scas
inc
adc
adc
mov
js
and
inc
push
dec
jns
repnz
dec
repz
test
pushf
scas
ds
loop
mov
out
jns
pusha
adc
call
jne
mov
shr
adc
dec
test
xchg
and
test
clc
mov
in
repz
dec
lods
xor
fildl
fstpl
outsl
and
ja
rcll
dec
jg
dec
call
lods
mov
adc
jae
cmpsl
cmp
pop
and
or
jb
lea
push
jbe
sarl
roll
lods
jecxz
mov
lret
cmp
add
mov
xor
leave
imull
int
mov
mov
mov
dec
push
cmp
clc
push
comiss
inc
divb
clc
or
leave
mov
test
xchg
rcr
jnp
jge
adc
pop
jae
pop
adc
mov
repz
mov
and
dec
push
mov
ret
cltd
cld
je
and
aam
dec
jne
insb
jp,pn
mov
dec
mov
mov
imul
clc
aas
add
shrb
pop
cmpsl
xchg
mov
pop
sbb
or
xor
add
or
mov
les
sub
mov
push
bswap
stc
es
scas
icebp
push
mov
mov
rorl
inc
xchg
pop
sti
into
jnp
jecxz
xchg
push
xor
fwait
repz
jmp
mov
enter
stos
mov
mov
pop
xchg
and
lods
sahf
mov
adc
aam
in
fcmovnbe
fnstenv
mov
inc
ret
mov
or
cmp
pop
pop
adc
loop
in
dec
mov
mov
fsubrl
roll
inc
pop
lret
pop
lock
push
or
and
xor
in
sbb
test
inc
cli
lahf
ss
inc
ficompl
inc
lock
and
or
jbe
push
mov
cs
pop
sbb
lods
das
and
xlat
bound
das
aaa
dec
lret
push
or
sbb
ret
daa
movsb
lahf
in
rclb
pusha
add
les
cmc
leave
repz
scas
pop
xor
cld
or
loop
sahf
mov
and
dec
mov
and
mov
jb
sbb
dec
es
push
daa
int
push
push
inc
cli
sbb
push
in
cmc
push
mov
sbb
scas
pop
inc
movsl
fistpll
dec
cwtl
daa
out
inc
cwtl
inc
mov
dec
sbb
xchg
xlat
pop
cmc
scas
add
movsb
mov
mov
sbb
push
jmp
jle
and
cmp
xchg
arpl
jg
push
jg
mov
jl
sub
scas
jne
sbb
push
and
icebp
mov
sbb
shll
cmp
and
mov
mov
adc
inc
cmp
loop
adc
jno
jae
inc
mov
push
dec
ljmp
xchg
cmp
jne
sarl
xchg
or
arpl
push
lcall
dec
ljmp
in
jbe
mov
fsubrl
pop
scas
mov
fst
jle
jbe
xchg
cmc
fidivrs
push
xchg
adc
cmp
fsubl
inc
lock
mov
js
sub
xor
int3
sub
loop
mov
cmp
mov
or
mov
pop
jo
push
popl
ret
mov
mov
adc
fwait
mov
and
arpl
es
cmpsl
xchg
pushf
je
loopne
arpl
je
fidivl
cmpsb
xorb
push
inc
mov
adc
test
mov
xchg
mov
or
aam
popa
adcl
mov
in
dec
pop
jo
notb
inc
std
enter
or
orb
cwtl
dec
aaa
loopne
push
cmpl
movzbl
out
lret
dec
cmp
push
pop
cwtl
adc
test
and
call
adc
push
pop
xor
int3
pop
mov
push
rorl
jae
mov
mov
xorb
aam
lret
out
fldenv
mov
push
or
fsub
mov
jo
or
icebp
add
scas
xchg
in
fidivrs
pop
pop
jecxz
test
out
add
sub
xchg
dec
movsb
out
cmp
jecxz
ficomps
clc
pop
insb
jne
aad
and
dec
dec
ret
shll
outsl
mov
outsb
push
fimuls
xor
ud2
fcmovb
loope
imul
sub
xor
push
mov
dec
push
push
xchg
aam
fs
lcall
dec
xchg
jbe
rcl
mov
and
inc
or
xor
nop
xchg
push
lds
jecxz
jle
pushf
cld
sub
fs
ret
fstps
fnstsw
sbbb
xor
sub
in
es
dec
add
push
sti
jle
push
out
sbb
xchg
xorb
sbb
xor
xchg
pop
mov
sarb
add
xlat
lods
xchg
jb
push
mov
inc
out
or
out
push
lcall
test
js
les
out
xor
adc
pop
mov
repnz
push
shll
outsl
aam
in
out
pop
iret
out
cmpsl
out
mov
push
push
outsb
sti
adc
or
mov
push
cmpsl
adc
push
scas
xchg
dec
fs
shrl
ror
jle
shr
push
rorl
mov
lret
scas
jno
mov
mov
subb
jmp
stos
mov
sub
dec
push
daa
mov
adc
fstps
dec
adc
jg
sub
adc
aam
jl
and
rclb
or
jp
cmp
ja
repnz
mov
xchg
lds
mov
xlat
pop
sub
jmp
mov
push
inc
outsl
lea
mov
in
jle
cmc
fadd
fs
sub
fwait
divl
jo
push
lcall
mov
iret
cwtl
insb
movsb
push
lahf
inc
push
ss
cmpsb
into
jo,pt
mov
xor
faddl
sti
cld
pop
jae
mov
fstps
lcall
jmp
sub
mov
in
push
push
adc
jo
loop
mov
inc
mov
popf
or
enter
xchg
push
jp
jecxz
sbb
fiaddl
cwtl
stos
jle
xor
sbb
mov
cmpsb
jle
inc
ja
scas
cli
imul
fisubl
cwtl
inc
dec
in
push
adc
sti
push
add
cmp
adc
leave
roll
add
repz
fwait
mov
mov
xor
in
repnz
jno
inc
and
ja
push
test
aaa
inc
add
cltd
dec
xor
shrl
repnz
cmp
adcb
push
jmp
xchg
cmp
add
sbb
push
sbb
sbb
sub
jnp
dec
xchg
sahf
test
sbb
enter
xchg
out
push
test
push
nop
fdivrs
push
popf
jne
or
mov
loop
push
mov
push
and
add
leave
fwait
into
push
cmpsl
cmpsl
inc
stc
xchg
mov
push
imul
ds
idivb
in
adcb
rcll
popf
jge
and
scas
jbe
fs
loop
push
aad
test
mov
ljmp
jle
mov
fbstp
sub
push
clc
mov
xchg
int
xchg
add
jp
call
mov
xchg
fdivrs
xchg
mov
js
inc
dec
dec
jge
andb
jns
pop
jmp
pop
xor
adc
fdivr
inc
cwtl
mov
sbb
or
pop
xor
push
push
std
fidivl
jl
shlb
mov
dec
inc
mov
jae
pop
mov
mov
das
aam
iret
xchg
lods
cwtl
outsb
in
pop
dec
ffree
lret
clc
pusha
dec
notb
pop
mov
sub
imul
jl
mov
popf
sti
xor
lock
test
sub
pop
xchg
mov
fiadds
pop
sahf
adc
mov
inc
gs
jmp
scas
ljmp
aam
pusha
adc
pop
daa
pop
lds
cli
dec
fbld
aas
daa
pop
push
cmp
mov
push
xchg
xchg
dec
jecxz
dec
sub
loopne
enter
mov
leave
pop
mov
sub
cmp
aam
adc
jb
and
cmp
or
test
lock
nop
out
call
dec
imul
shll
cmpsl
pusha
aaa
pop
dec
rcr
aad
stos
jge
jne
mov
movsb
sub
call
ljmp
and
dec
cmpsl
mov
push
imul
dec
push
fwait
xor
mov
mov
add
mov
daa
stos
mov
pop
mov
test
pop
ret
jbe,pt
and
imul
adc
add
loope,pt
loope
loopne
mov
fisubrl
subb
data16
jge
mov
pop
fstps
clc
add
sub
ds
imul
sbb
jae
icebp
jae
loopne
dec
and
push
in
stc
mov
sbb
mov
mov
jmp
out
push
mov
pop
ja
mul
pop
pusha
and
xchg
jge
mov
mov
loop
aaa
pop
mov
repnz
and
or
lret
cmpsb
leave
movsb
pop
outsb
fadds
bound
mov
lahf
dec
pop
sti
pop
leave
or
repz
sub
in
sbb
arpl
mov
jl
loopne
repnz
add
sub
fdivp
test
dec
es
out
mov
jecxz
movsl
insb
mov
scas
pop
fcoms
push
and
into
mov
inc
push
dec
scas
dec
add
lret
sbb
push
aas
cmp
add
movsb
jge
push
je
xchg
les
push
sub
cmpb
fdivrl
adc
push
out
xchg
xchg
mov
mov
xchg
fildll
add
mov
scas
inc
jmp
xchg
cli
jnp
add
sbb
or
mov
test
testl
aaa
aas
je
pxor
xchg
push
xor
dec
cmpb
adc
mov
ss
xor
mov
lods
adc
pop
sub
sarb
in
jnp
sub
jmp
ficomps
push
mov
and
xor
pop
dec
ret
jp
xchg
mov
mov
cmp
jno
xchg
gs
sub
mov
ror
and
lock
lret
pop
push
pop
test
in
pop
pusha
xlat
sub
repnz
mov
lret
popl
ss
cld
fs
std
lock
pop
outsb
jle
repnz
out
andb
enter
push
mov
clc
xor
mov
lock
xchg
cmpsl
enter
inc
insl
mov
addr16
jecxz
inc
daa
push
hlt
jb
mov
mov
sarl
rolb
das
addr16
lahf
xchg
or
ficoms
add
mov
push
inc
or
xchg
stos
aaa
push
addr16
jmp
push
lods
mov
data16
mov
xor
xchg
pusha
cmp
fiadds
sub
mov
cmp
cmp
sub
inc
fwait
or
pushf
in
push
dec
xchg
sub
pusha
loope
push
lds
and
add
cld
int3
ret
ss
sub
out
inc
push
cmp
jae
data16
aaa
fnstenv
mov
in
inc
addr16
jg
adc
xchg
in
push
repnz
fnstsw
test
pop
mov
adc
and
data16
repz
popa
out
fmul
mov
xchg
test
andl
sub
scas
sub
or
inc
push
and
stc
mov
xchg
cmp
iret
insl
push
inc
and
test
push
push
inc
cltd
and
xor
sahf
arpl
loop
ss
decl
push
inc
inc
inc
dec
fdivs
and
shrb
push
mov
pushf
imul
inc
push
xlat
inc
test
aaa
mov
lds
cmpsb
pop
je
cmp
cmp
sub
sbb
sub
mov
jg
mov
iret
arpl
fdivl
jns
jno
jmp
shl
lea
push
push
jo
sarl
arpl
mov
or
jle
fsubr
lea
mull
stos
mov
repz
je
cmp
jae
iret
es
mov
pushf
nop
orl
cltd
or
mov
aam
lods
mov
movsl
loopne
add
cltd
iret
jb
test
inc
in
mov
mov
xchg
cmp
cmp
pop
test
or
xchg
mov
xor
cmc
bound
aaa
scas
incb
pop
jns
lea
mov
xchg
lods
inc
outsb
sbb
inc
cmp
mov
paddd
imul
cmp
inc
dec
iret
or
mov
adc
js
pop
jmp
push
cmovle
or
jmp
sub
loop
mov
sub
xchg
sub
fnsave
push
cmp
mov
clc
cmpsl
cltd
lahf
mov
or
mov
jle
inc
mov
adc
add
dec
dec
fildl
outsb
push
mov
arpl
pop
or
mov
push
sbb
int
lods
decb
imul
mov
leave
inc
ja
cli
add
xor
aas
inc
inc
xor
addr16
cs
and
cmp
popf
push
pop
mov
pushf
hlt
notl
or
cmp
push
mov
cmp
cmpsb
pop
lret
enter
jne
pop
sbb
aas
push
mov
stc
and
jo
cmp
shlb
mov
pop
push
nop
xor
enter
sbb
xchg
xchg
cld
dec
mov
jmp
cld
xchg
outsl
sub
cltd
cmp
mov
xor
std
mov
inc
xchg
xchg
shlb
fildl
cmc
incb
fsubs
and
cmp
mov
inc
inc
or
mov
outsl
pop
push
out
je
jge
inc
cmp
int
pop
leave
dec
pop
mov
jl
loopne
stos
jb
mov
sub
lcall
cli
test
subl
lods
mov
jb
adc
add
scas
inc
cld
fistpl
jno
cmp
mov
lea
movsl
pop
out
or
mov
xor
dec
out
repnz
into
push
cmpsb
dec
mov
repnz
xchg
aad
mov
ljmp
into
add
mov
rorl
movsb
insb
cmp
inc
and
mov
rorb
inc
imul
sbb
sub
gs
out
or
out
cld
in
jo
adc
sbb
outsl
mov
enter
and
mov
sub
icebp
testb
push
mov
fdivs
into
pushf
cmc
inc
push
inc
push
push
push
add
adc
jne
adc
je
add
push
xor
int3
xor
mov
rolb
into
xor
dec
sbb
cs
sbb
push
fcmovnu
add
pushf
jecxz
imul
pop
sub
nop
cmp
lods
mov
leave
test
mov
mov
ds
add
test
push
sub
sti
or
cmc
lahf
jno
cmp
int
xchg
xlat
mov
jne,pn
in
lock
inc
iret
dec
xchg
jns
dec
jbe
inc
pop
and
jecxz
loop
jne
fcmovne
jp
jl
clc
lds
jb
inc
mov
sub
pop
adc
int
cmc
cmp
sbbb
out
leave
push
xchg
dec
jne
scas
push
loopne
int3
pop
push
das
push
inc
mov
jne
jle
xor
cli
or
mov
shl
scas
pop
mov
add
lods
xchg
lds
lea
or
loopne
addr16
inc
daa
mov
iret
sub
mov
jb
cs
xchg
in
clc
negl
mov
imul
orl
out
adc
jecxz
add
icebp
lods
sbb
xchg
push
jb
lock
push
pusha
xchg
and
adc
adc
push
sub
xchg
loope
sbb
test
fsubrl
xchg
lods
stos
cmp
jnp
push
out
je
leave
sbb
lock
adc
mov
jmp
sub
jle
roll
dec
xchg
or
stos
addl
jmp
add
xor
lea
add
sti
adc
in
xchg
stc
pop
imul
mov
mov
dec
sub
adc
out
add
out
xor
es
mov
out
mov
daa
and
lret
pusha
cmp
push
adc
inc
mov
mov
and
fldpi
icebp
sub
sbb
dec
aas
test
cld
fldenv
sbb
fldpi
dec
sbb
sub
adc
int
cltd
adc
sbb
mov
mov
sub
adc
push
clc
fwait
fs
cmp
outsb
mov
inc
pop
imul
iret
insb
lea
cmc
scas
xor
inc
and
push
in
loope
xchg
int
xchg
fwait
cld
scas
mov
push
sbb
cld
mov
jmp
pop
add
sub
or
addr16
test
cmp
add
popf
ds
push
xchg
insb
mov
mov
fimuls
dec
popa
xor
mov
xchg
aad
sub
fistl
cmp
lret
sbb
mov
hlt
in
mov
outsl
sbb
ss
rorb
cmp
repz
pushl
mov
cmp
sub
sbb
daa
repnz
fsubp
hlt
cmp
xchg
sbb
test
jno
in
push
xor
inc
mov
cmp
cld
std
test
out
mov
push
jo
jp
cmp
cmpsl
xor
jb
stos
mov
mov
mov
cltd
xchg
shll
in
push
mov
xor
add
xor
jp
pminsw
pushf
iret
jecxz
xchg
outsb
js
out
mov
and
test
test
js
jnp
pop
pop
adc
rcll
inc
mov
lods
or
cmp
int3
iret
or
stos
ss
ljmp
fimull
fnsave
insl
rcrb
xchg
and
call
clc
mov
faddl
lods
fists
rcl
xchg
js
pop
cmp
sarb
stc
lcall
dec
fisubrl
mov
adc
or
push
in
jae
popa
sub
add
lret
pop
jnp
fdivrs
fsubrs
and
bound
jnp
dec
out
xor
and
aam
fidivl
cmc
xchg
pop
popf
lock
inc
dec
push
jae
outsl
xchg
mov
aas
rol
mov
out
sti
dec
inc
xchg
movsl
xor
dec
xor
pop
push
and
jae
xchg
es
adc
stos
mov
sbb
push
xchg
xchg
pop
repnz
pop
scas
int
sbb
inc
dec
loopne
in
sarb
mov
mov
in
dec
push
push
lret
movsb
and
jp
aas
mov
aam
mov
jg
push
dec
incl
dec
inc
enter
shll
ja
adc
das
xchg
out
insb
out
mov
or
sbb
jns
add
xor
jno
andb
jmp
adc
dec
jle
into
out
mov
addr16
jmp
push
cmp
outsb
pop
inc
push
push
add
dec
adc
and
lods
mov
mov
iret
enter
lock
rorl
mov
pop
scas
loope
jns
push
aam
movsl
dec
cmpl
arpl
shl
aad
mov
std
in
push
jnp
hlt
jne
xrelease
pop
sub
sbb
test
fldz
cmp
mov
loop
or
xchg
dec
push
loope
imul
mov
xchg
sub
cs
mov
dec
arpl
cmpsb
ss
jbe
test
clc
test
xor
add
stos
pop
stos
adc
pop
mov
and
mov
stc
mov
mov
lret
jns
pop
sarl
ret
push
inc
jmp
shrb
mov
xlat
fsubl
out
fcom
mov
jo
movsb
js
test
mov
mov
outsl
mov
dec
sub
push
mov
jae
out
incl
or
out
sbb
cs
stc
push
sahf
ds
mov
ss
in
in
mov
dec
orb
push
sbb
sub
sbb
xor
enter
lcall
flds
cwtl
fcmovnb
cltd
mov
dec
cmpsb
enter
add
in
fldt
int3
dec
sbb
mov
dec
and
add
jnp
dec
push
sbb
dec
xchg
mov
int3
inc
in
sub
mov
sti
adc
adc
jns
push
pushf
inc
std
pop
outsl
push
orb
dec
mov
int
add
sbb
ret
out
in
cmc
mov
loopne
jne
dec
rcrl
xchg
loope
mov
in
pushaw
adc
aam
pop
pushf
lret
xor
jnp
scas
mov
nop
cld
mov
dec
or
out
addr16
or
outsb
lds
push
xchg
or
rorb
jl
aad
addr16
aam
idivb
out
push
sub
lret
xor
xor
xor
mov
lds
adc
push
xchg
jnp
pop
add
call
cld
test
fistps
cs
jno
cmp
scas
jle
mov
ljmp
jae
das
aam
mov
push
mov
sbb
sub
into
xor
test
jno
cs
sbb
lcall
xlat
test
jg
cmpsl
cmp
sub
mov
mov
inc
cmpsl
xchg
pop
jg
add
sbb
das
jmp
and
and
in
sub
fimuls
insb
adc
arpl
pop
bound
inc
stos
dec
rcr
dec
inc
jno
out
sub
adc
dec
xor
mov
adc
in
cli
aad
dec
repz
insb
pop
mov
cmpsl
lds
dec
xlat
into
and
pop
xchg
pop
aas
push
inc
int3
inc
mov
lods
push
fmuls
jbe
mov
jo
and
leave
test
or
rcrl
imul
ficomps
lcall
out
icebp
aam
clc
aas
adc
adc
ljmp
fisttpl
lahf
out
fs
sti
cld
inc
test
adc
jo
sbbb
sahf
icebp
jne
imul
stos
jecxz
pop
add
fistpl
mov
jecxz
repnz
aad
xor
das
xor
scas
inc
in
ret
fcoms
pusha
ldmxcsr
mov
out
shrb
int3
push
pop
outsb
xor
in
ljmp
loopne
cmp
inc
sbbl
popa
inc
or
lret
inc
arpl
dec
call
bound
push
push
mov
call
std
cmpsl
mov
push
sbb
mov
fs
mov
push
mov
xchg
pop
or
jmp
test
push
adc
lock
pop
mov
xorl
adc
cmp
insb
in
jp
dec
sbb
add
mov
or
xchg
imul
push
repz
cli
add
mov
jbe
cltd
ds
nop
adc
inc
sbb
cmp
in
testb
pop
dec
fisttps
mov
push
mov
and
pop
fistl
mov
lods
dec
xchg
jl
scas
sub
xchg
rcr
lcall
cmpsb
inc
cmpsl
scas
icebp
mov
cld
push
imul
jno
or
mov
fwait
or
aas
sub
cmp
mov
push
iret
or
jo
xor
jge
ret
sub
lret
fcmovnbe
push
pop
mov
mov
sti
xchg
dec
and
mov
icebp
lds
and
rol
adc
lock
mov
and
sub
iret
xlat
mov
cli
and
ljmp
adc
out
sub
ljmp
popl
dec
adc
rorb
fmuls
mov
jge
or
mov
adc
sarl
iret
orb
jns
fisttpll
and
movsb
loopne
incl
ja
cmpsl
xchg
daa
inc
imul
std
adc
lock
adc
repz
or
std
or
xchg
jl
mov
adc
push
dec
dec
pop
nop
push
outsb
cmpsb
fsts
imul
inc
mov
or
push
push
dec
lret
sbb
out
and
jnp
in
xor
and
repz
sbb
fstpt
cmp
adc
popa
push
int
pop
ja
lea
int3
scas
out
lods
xchg
cltd
sbb
dec
out
pop
jae
push
rclb
cmp
or
imul
fsubl
jne
push
mov
insl
mov
mov
xchg
outsl
push
cs
decb
lods
jo
in
imul
insb
jb
lock
rorb
sbb
sbb
add
andb
cli
cmpsb
jnp
in
jecxz
mov
fs
and
mov
inc
stc
lods
cmp
ficoms
push
loope
repz
cli
stc
mov
std
inc
jle
pop
or
gs
jne
push
outsl
jbe
test
js,pn
mov
mov
or
jge
push
lcall
std
lret
or
stc
leave
xchg
jnp
aas
xchg
out
cmp
aas
sbb
mov
push
inc
cld
addr16
pop
jae
or
add
call
addr16
cmpsb
outsl
pop
or
icebp
inc
sbb
cmp
imulb
ja
sub
enter
add
xor
mov
cmc
sub
and
xchg
aaa
push
inc
sub
inc
or
or
jle
outsl
stos
movl
adc
hlt
insb
nop
jp
cmp
pop
int
mov
inc
lods
fsubrs
movsl
scas
in
arpl
lds
mov
sub
mov
adcl
mov
sbb
mov
jo
sbb
push
mov
add
pop
jbe
nop
daa
push
xor
inc
test
daa
mov
lods
jecxz
cmp
push
shlb
insb
dec
jb
dec
ja
mov
inc
lea
sub
shl
mov
mov
andb
jb
das
jnp
test
jmp
mov
iret
pop
vpcmov
rcl
dec
xor
cmp
pop
stos
enter
jl
push
fisttpl
pop
lea
shll
add
mov
adc
cmpsl
insb
cmc
inc
shrb
popf
sbb
sbb
xchg
xchg
mov
sub
in
test
fsubrs
dec
sahf
sub
fsubrl
add
inc
push
lcall
cli
fdivrs
lret
std
add
nop
jg
cltd
xor
lcall
mov
movlps
xor
mov
rcrb
push
jg
jo
xor
fmul
mov
sbb
add
jb
jg
hlt
xchg
adc
xchg
cmc
scas
cld
fwait
or
fcom
xchg
orl
dec
lret
stc
lcall
dec
sbb
movsb
xor
xchg
add
lds
mov
inc
lea
lods
repz
test
jg
pop
cmc
daa
pop
mov
cli
lods
xchg
aad
arpl
addr16
popf
jg
test
push
leave
and
js
push
fldl
mov
jb
loop
test
mov
mov
xor
cmpsb
insl
jle
adc
je
inc
addr16
jne
mov
hlt
xchg
adc
aas
and
or
jno
test
jo
push
inc
iret
call
imul
jo
pusha
je
inc
or
mov
popa
fucomi
and
inc
mov
pusha
stos
jge
jle
imul
adc
jg
cmpl
cmp
mov
push
sahf
fbstp
idivl
aam
popa
test
sbb
push
ja
stc
pop
and
jmp
sbb
stos
dec
jb
add
fst
jge
mov
dec
clc
sbb
scas
fcomps
or
dec
mov
or
sbb
sbb
call
sub
sub
popf
mov
mov
addr16
push
mov
scas
mov
jg
mov
pushf
mov
js
dec
jns
xor
sub
pop
xchg
imul
ljmp
clc
cmp
lods
jno
int3
sbb
add
shll
mov
xor
lock
in
repz
fiadds
les
sub
push
outsb
push
jbe
daa
stc
leave
add
add
sbb
lret
inc
push
test
dec
sti
sbb
lret
mov
stos
add
xchg
pushf
pop
popa
dec
test
mov
mov
cli
je
xor
mov
repz
popl
stos
icebp
inc
aas
pop
negb
xor
dec
pop
popf
outsl
pop
pop
inc
dec
pusha
inc
pop
push
or
jmp
add
loope
lret
dec
push
mov
int
sahf
inc
adc
dec
lods
cld
or
mov
xor
mov
mov
pop
xor
cmp
xchg
jle
int3
outsb
pop
sahf
sub
out
stos
test
add
mul
xlat
cs
cld
mov
push
stc
cs
pop
into
in
je
das
lret
jp
sbbb
and
inc
add
or
mov
xchg
push
pop
lods
pop
inc
sub
lcall
cmp
add
test
mov
mov
cwtl
mov
push
lret
jnp
dec
fs
daa
daa
and
add
gs
jno
cmp
orl
push
pop
int
nop
insl
and
xchg
addb
jns
add
push
add
inc
sti
lret
xchg
fwait
ja
mov
or
and
sub
int
leave
fsubrs
dec
into
xor
hlt
mov
push
ficompl
sahf
imul
in
pop
loope
and
and
pop
xchg
dec
movsb
pop
xorl
mov
cmpsl
xchg
inc
jecxz
in
push
pop
push
setb
adc
mov
push
push
call
mov
push
jle
out
jae
pop
leave
ljmp
fists
push
movsl
add
or
cmp
xlat
loope
aaa
cmp
pop
adc
mov
fldenv
mov
inc
stos
cltd
ret
inc
cmp
jae
rorl
aaa
push
pop
sbb
push
ret
repnz
int3
inc
mov
jle
or
xlat
cmp
hlt
test
bnd
mov
ficoml
cmc
or
ficompl
xlat
outsl
push
imul
cwtl
push
sub
mov
pusha
cmpsl
cld
jno
idivl
insb
and
mov
nop
cmp
out
hlt
mov
ja
push
cmp
xor
sahf
sub
cmp
sbbl
rcrb
rcr
jg
pop
outsl
cmp
out
lods
lret
rorb
dec
fsts
add
mov
sbb
pop
cs
adc
mov
test
out
loope
pop
pushf
mov
sahf
jo
xchg
mov
sub
mov
adc
shrl
outsb
xchg
push
jno
sub
push
or
or
mov
jbe
mov
leave
pop
cmpsb
push
jae
mov
lcall
leave
jmp
inc
cmp
ja
pop
cmc
mov
out
roll
les
pusha
or
lea
sbb
mov
sbb
dec
lods
je
mov
pop
jp
mov
xor
mov
inc
pusha
jae
arpl
add
sub
subl
inc
pop
and
mov
xor
int
outsl
icebp
cmpsb
xchg
pop
movsb
ds
mov
out
dec
repnz
cmp
nopl
mov
sub
adc
fimuls
mov
cmp
dec
pusha
mov
xchg
xchg
add
xchg
lcall
rcr
aas
icebp
or
lret
ja
mov
add
stos
sbb
jl
cmp
adc
pusha
pop
xchg
pop
aaa
decl
push
sub
popa
jae
and
xlat
and
jp
popa
mov
cli
insb
cs
fidivrs
stos
mov
dec
jge
lea
adc
xchg
add
stos
jno
clc
outsb
dec
adc
sub
or
ret
inc
push
jmp
add
in
jmp
pop
jecxz
lret
cmp
dec
jl
cmp
je
jge
add
push
jb
xchg
xlat
data16
push
fisubrs
inc
mov
in
scas
add
add
xchg
out
les
and
mov
mov
sbb
fisubrl
cwtl
sti
mov
mov
add
mov
sub
fisttpll
push
lods
cmpb
insb
sarl
fildl
push
push
dec
iret
lods
clc
xchg
imul
pushf
jp
dec
ja
shrb
stos
aas
xchg
add
jge
sbb
es
jl
insb
lret
cltd
add
out
ret
pop
jns
or
sahf
pop
xlat
sub
mov
inc
jge
out
or
sti
xchg
outsl
xchg
cmpsl
imul
filds
je
enter
sbb
jp
jae
add
negl
or
and
scas
sahf
out
pushf
das
mov
pusha
xchg
imul
xchg
out
xor
mov
mov
dec
and
stc
lcall
out
and
and
int3
xchg
out
fwait
push
sub
pop
or
push
fisubs
icebp
loop
or
dec
push
dec
dec
popa
fbld
or
int3
mov
imul
into
mov
sbb
ja
add
test
mov
adc
dec
rcrl
stos
inc
dec
cmp
pop
insb
mov
test
clc
inc
lods
sbb
adc
jne
mov
popa
lods
xchg
lods
cmp
push
sti
shr
stos
xchg
or
neg
mov
dec
or
mov
dec
mov
add
out
and
insl
or
notl
sahf
pusha
icebp
outsl
imul
cli
sbb
cld
lret
dec
xor
pop
lods
cmp
das
sub
lods
das
mov
jns
std
sbb
dec
and
sahf
popf
dec
cmp
cmpsb
ficoml
adc
pop
inc
mov
aaa
sbb
movsb
sub
jo
dec
mov
das
xor
popf
dec
mov
jg
aam
mov
stc
popa
jg
push
and
rolb
inc
xor
xchg
lds
pop
cwtl
sub
repz
sub
out
aam
push
pop
out
pop
cmp
mov
out
inc
aaa
push
test
stos
les
jg
pusha
inc
jp
fcompl
jne
ja
pop
inc
pop
js
mov
pop
cmp
push
push
sub
mov
test
push
int
push
xchg
loop
sub
test
enter
pop
ss
leave
dec
aad
clc
add
iret
and
and
cmpsl
nop
inc
mov
push
test
cmpsb
xchg
mov
das
adc
scas
mov
leave
sarl
cmp
mov
andl
pop
int3
jne
les
mov
jne
ja
pop
xor
xchg
mov
mov
out
in
cmp
lea
pop
mov
je
mov
inc
loope
orb
cmpsb
cvtps2pd
std
aam
xor
adcl
jl
push
movsb
push
arpl
in
mov
push
cwtl
pop
fldl
mov
mov
lahf
call
and
mov
push
push
mov
out
jbe
sub
xor
call
out
divb
jns
test
dec
add
js
into
adc
aaa
jge
jb
daa
insl
or
inc
push
sub
dec
call
pushl
pushf
inc
sbb
cmp
jnp
icebp
mov
pop
imull
ffreep
cmpsl
test
mov
shl
rcl
pop
cmc
lds
jge
mov
inc
mov
cmpsl
cli
xor
outsb
andb
test
mov
jp
add
jmp
jbe
xchg
cs
jge
addl
dec
imul
fst
loope
adc
mov
popa
xlat
or
xchg
andl
pop
pop
pusha
fnstcw
ret
xchg
repz
test
pop
cmp
mov
mov
mov
popl
inc
dec
xchg
jns
sarb
mov
cmpb
fistps
xor
scas
jb
sbb
mov
push
shl
cmpsl
aaa
in
clc
jp
mov
ret
lods
inc
push
inc
xor
rcr
inc
xor
dec
flds
mov
sub
xlat
xlat
inc
std
outsl
pop
pushl
add
icebp
dec
push
divl
aam
fcmovne
ljmp
les
fwait
lock
fstl
popf
les
adc
xor
cs
mov
xlat
and
movsl
push
lock
dec
and
sahf
repz
subb
jnp
out
stos
cmpl
data16
decb
xor
pop
mov
sub
fcomps
push
ljmp
dec
jp
orb
int3
fdivr
mov
call
pop
sub
ljmp
gs
cmpsl
fldcw
push
js
outsb
pop
xchg
adc
in
ror
dec
bound
dec
push
filds
addr16
cmp
jae
rclb
mov
int
hlt
adc
or
out
aam
pop
rcrb
inc
jmp
dec
mov
xchg
rorb
add
jbe
inc
lcall
shl
insb
mov
imul
xchg
push
mov
pop
hlt
cltd
push
add
lahf
and
xor
inc
das
outsl
jbe
lds
inc
push
test
int
adc
cmp
mov
jmp
in
xlat
sti
pop
mov
pusha
int3
les
mov
dec
mov
movsb
mov
mov
daa
inc
inc
int3
lcall
out
pop
mov
or
int3
out
es
stc
cli
inc
lahf
add
mov
rcrl
lret
sub
mov
sub
jp
inc
and
fildl
cmp
insl
cmpsl
sub
adc
cmc
loope
mov
mov
pop
push
jb
pop
aad
pusha
adc
pop
mov
jmp
sub
test
int
pop
out
inc
fdivrp
mov
pop
push
out
cmp
outsb
scas
hlt
dec
inc
rcl
mulb
jle
in
xchg
add
mov
and
int
mov
lea
es
mov
mov
mov
sti
test
cmp
xchg
lret
leave
and
das
iret
xchg
inc
aad
scas
aad
push
in
lea
xor
cmp
push
xor
mov
lret
xlat
xchg
fisubl
mov
xchg
int3
bound
sahf
dec
sub
cmpsb
addr16
imul
nop
aaa
movsb
fwait
clc
ficompl
stos
daa
jns
int3
xchg
adc
mov
ja
jns
inc
sub
ficoms
jmp
pop
rdmsr
inc
mov
cwtl
push
lods
stc
xlat
std
push
inc
es
shl
xor
rolb
or
or
or
cltd
sbb
and
adcb
mov
mov
pop
xor
mov
sub
dec
add
dec
mov
mov
add
pop
adc
push
xor
outsl
in
xor
push
inc
and
mov
loope
dec
lcall
inc
inc
mov
cmp
push
add
cmp
mov
ss
cmpsl
bound
push
xor
lock
mov
jbe
push
add
push
dec
mov
cmp
dec
test
mov
add
mov
outsb
imul
outsb
shrl
add
loope
addr16
cwtl
test
daa
cmp
jmp
aaa
mov
add
mulb
mov
xchg
test
xor
mov
fwait
mov
cmpsl
fcomps
push
jnp
xor
cmp
inc
xchg
pop
es
adc
inc
fsts
filds
cmc
imul
fwait
aas
leave
lcall
push
push
push
mov
inc
dec
jo
daa
inc
out
sub
in
jno,pn
mov
mov
pusha
jb
sub
or
mov
and
aam
mov
lret
mov
not
and
jp
orl
dec
jmp
adc
rcrl
stos
mov
cwtl
cli
shll
sub
pop
out
mov
pop
lret
push
sub
jns
sbb
and
inc
cld
jge
dec
xor
nop
jge
ret
pop
adc
rcrb
jp
popa
lahf
push
pop
insb
in
adc
mov
cmpl
sub
mov
stos
xor
mov
inc
call
and
fistps
jbe
mov
mov
pop
xchg
lret
repz
mov
or
bound
push
mov
loop
dec
xchg
iret
mov
in
mov
sti
testl
sahf
xor
sti
rcl
jb
popa
lods
es
in
insl
pop
repnz
jbe
mov
negb
fwait
iret
adc
dec
bound
inc
movsb
imulb
cmpsb
iret
fiadds
popf
sub
shrb
scas
call
test
dec
mov
xor
bound
xor
dec
sub
sub
stos
pop
mov
repnz
jge
mov
mov
or
les
dec
popf
pusha
pop
push
adc
and
and
push
jo
popa
adc
or
insb
add
jb
inc
cmp
jns
test
mov
inc
mov
xor
inc
adc
cmpl
icebp
mov
inc
jmp
shlb
int
mov
or
aas
cmp
or
fwait
xchg
lret
pop
mov
movsl
mov
out
lahf
add
xor
mov
lea
fimull
jne
jge
out
or
mov
arpl
test
and
pop
shll
or
aad
push
add
aad
dec
add
into
add
sbb
mov
xchg
out
fldenv
sahf
push
ljmp
push
cmpsl
iret
adcb
xor
jle
lret
jmp
popf
and
pop
dec
dec
in
mov
sbb
fisubrl
ljmp
les
push
adc
arpl
dec
cmp
roll
shll
sub
testb
inc
inc
lea
jle
pop
stos
and
jno
addr16
jg
sub
mov
adc
lods
and
mov
mov
or
jo
fcoml
pop
mov
insb
fstps
push
jb
sbb
xchg
xchg
adc
add
dec
dec
xlat
fldcw
sbbl
mov
mov
insb
xchg
dec
sbb
frstor
dec
mov
adc
inc
sbb
inc
mov
push
lods
fisubrl
outsb
lcall
ret
cli
mov
pusha
inc
loopne
pop
mov
test
mov
pushf
jl
arpl
addr16
fwait
cmpsl
push
mov
jae
jns
in
xchg
into
mov
xlat
push
call
sbb
pop
sub
in
test
mov
jle
pop
mov
out
daa
xor
andl
cmpb
sub
sub
xor
in
movsb
ret
inc
push
jecxz
xchg
mov
adc
loop
xlat
cld
adc
hlt
test
stc
cwtl
pop
adc
mov
xchg
jl
dec
or
icebp
je
sub
outsl
in
cmpb
cmp
notrack
cmp
pop
add
mov
mov
orl
nopl
daa
sbb
jnp
and
or
js
jl
push
or
icebp
jmp
sbbb
add
and
xchg
lods
push
push
mov
dec
repz
add
push
mov
or
mov
movsb
jl
or
and
cmp
int3
fcmovb
into
das
jb
in
sub
xchg
push
push
lahf
jge
into
xchg
imul
cmp
mov
mov
jne
dec
aaa
xor
test
mov
pop
sub
jnp
movsb
ja
test
ret
sub
filds
pop
inc
enter
and
mov
sbb
shlb
mov
cmpsb
and
nop
dec
cli
stos
out
ret
dec
add
sub
jno
lcall
movsb
inc
adc
test
pop
mov
mov
outsl
jp
pop
jb
rcrb
pop
inc
popf
or
push
notl
sbb
insl
loope
cmp
dec
ja
rcrb
push
jb
sub
mov
sub
sbb
and
imul
arpl
xchg
add
ja
sub
or
dec
sub
cmc
pushf
or
xchg
pop
xchg
data16
push
ja
std
jo
dec
sbb
in
push
add
xor
test
or
loopne
cmp
push
rcrl
pop
xlat
scas
mov
fistps
pop
pop
test
lds
xchg
add
or
push
mov
sub
mov
sub
rcll
inc
outsl
mov
dec
mov
test
fidivl
mov
icebp
stos
popa
mov
sub
push
incl
push
rorl
arpl
inc
fildl
mov
fisubs
push
imulb
cli
hlt
out
pop
sbb
jg
mov
or
xor
insb
mov
add
xor
sub
push
sbb
mov
adc
fidivrl
cmp
arpl
adc
dec
jp
pop
loop
mov
mov
cmp
in
loope,pn
xor
cmp
add
arpl
enter
push
lcall
lods
push
adc
jp
cmp
ljmp
xor
outsl
dec
aas
xchg
jp
mov
inc
shll
mov
addl
adc
ficoml
int3
adc
test
mov
sub
push
pop
xor
in
mov
jmp
movsb
push
jae
xlat
outsl
add
mov
jg
and
xchg
mov
xor
dec
adc
xor
or
ljmp
jge
shlb
pop
push
xchg
insb
inc
jne
scas
xor
add
stc
imul
aam
outsb
int3
ds
lcall
cmc
push
pop
mov
ret
jmp
mov
lds
test
icebp
push
cmp
mov
outsb
repz
addr16
cltd
xchg
dec
push
cmpsl
mov
movsl
dec
add
fidivs
ds
mov
ret
ficoms
mov
xor
lret
daa
pop
jbe
mov
push
pop
ljmp
pop
or
lahf
mov
sub
inc
les
and
xchg
cmp
cmp
pop
cmpsb
dec
loop
in
in
inc
aas
mov
enter
lods
or
or
pop
dec
and
fwait
adc
div
mov
push
inc
popf
inc
sub
dec
and
aad
fcomip
push
pop
pusha
cmp
push
push
imul
adcb
jae
pusha
test
mov
or
popa
js
sbb
clc
test
pop
pop
jo
sub
or
cmp
sahf
leave
sahf
ds
rcrb
aam
in
fldl
sbb
lods
btc
out
jge
adc
push
les
stc
pusha
in
cmc
mov
cmp
cmpsl
lea
pop
sub
push
xor
cmp
jl
mov
sbb
cltd
fs
dec
cmp
out
pop
subb
xchg
cmc
xchg
pop
int
shlb
shlb
daa
stc
add
pop
aad
sub
xchg
xorl
jl
movsb
dec
sarl
inc
sbb
sub
cmp
stos
pop
push
stos
and
stos
dec
mov
mov
dec
jns
icebp
cltd
fwait
xor
xlat
arpl
pushl
mov
or
out
adc
mov
mov
xchg
push
push
cmp
mov
mov
push
aaa
lret
sbb
popa
dec
sbb
xlat
sahf
aas
rcrl
mov
sti
jbe
push
mov
or
sub
hlt
loope
inc
stc
stos
and
repnz
test
iret
rcrl
push
pop
test
lods
scas
hlt
loop
pusha
mov
push
dec
sbb
lcall
ljmp
ja
call
inc
jge
call
cltd
movsb
jne
sbb
rorl
ds
cmp
insb
xor
out
fwait
or
sarb
popf
and
mov
push
fstpt
push
in
jge
xchg
inc
add
inc
pop
jge
scas
fs
or
adc
sbb
decl
push
lahf
mov
stos
mov
add
adc
or
arpl
scas
push
mov
fcompl
add
mov
xchg
push
jl
in
mulb
jp
mov
cs
add
jb
add
mov
pop
pop
cmp
adc
jmp
pusha
xchg
ret
daa
lds
test
push
subl
push
sarb
and
cld
sbb
mov
rorb
lahf
pop
inc
cmp
cmp
repnz
test
pushf
ret
sbb
mov
leave
push
adc
pop
cmc
aaa
pop
lds
lahf
gs
mov
in
adcl
ds
cltd
lock
or
out
xor
dec
push
ret
int
dec
cmp
rclb
mov
lea
gs
xchg
xor
lahf
sub
data16
sub
jo
pop
repnz
mov
xor
test
loope
cmp
xor
sbb
dec
pop
xor
dec
in
pop
je
std
stos
outsb
scas
out
push
pushf
cmp
lock
add
cmp
in
lods
daa
les
xlat
call
mov
inc
sbb
mov
adc
dec
xor
dec
cmpsb
mov
je
in
adc
cmp
in
test
cmp
xor
sub
or
icebp
inc
movw
scas
cmp
jo
fisubs
push
cld
icebp
cmp
adc
daa
mov
adc
imul
aas
test
dec
icebp
ret
int
test
mov
cmc
ljmp
mov
lahf
inc
mov
add
xchg
fdivrl
xlat
sahf
outsl
push
dec
hlt
xlat
movsb
mov
lods
lcall
dec
repz
sbb
mov
jnp
jae
lcall
push
add
stc
arpl
jbe
lret
lea
addl
sarl
cmpsb
and
int3
mov
test
je
popa
lods
repz
xor
xor
fdivrs
test
dec
fistpl
andb
pop
xchg
inc
pcmpeqb
movsl
popa
xchg
pushf
cmpsl
jo
sbbb
xchg
stos
mov
and
jnp
lret
arpl
pop
xor
sbb
mov
dec
lahf
int
ja
pop
pop
jb
dec
dec
negb
push
cli
hlt
sub
adc
or
ja
cwtl
jns
xor
bound
push
adc
aam
in
enter
data16
adc
mul
out
cwtl
xchg
pop
jbe
pushf
lock
lahf
inc
adc
out
test
jae
cmp
hlt
lahf
push
xchg
cwtl
jae
sbb
mov
fiaddl
add
adc
into
repnz
mov
cmp
sbb
dec
shrl
cltd
xchg
lahf
icebp
inc
stc
mov
repz
mov
ss
cmp
push
sti
test
pop
pushf
aam
js
jno
or
mov
and
sarl
mov
cmp
pop
cmp
aam
icebp
test
add
dec
enter
lret
adc
xchg
add
sub
push
das
jmp
mov
out
ja
fs
ret
jle
add
int3
push
and
out
ficomps
and
or
xor
mov
push
aas
in
addr16
jmp
sbb
icebp
clc
mov
nopl
xor
sbb
clc
dec
pop
outsb
gs
cmpsb
int3
xchg
mov
mov
enter
arpl
loopne
adc
push
mov
lock
adc
stos
loop
add
jecxz
or
ja
xor
cmp
shrb
cltd
insb
inc
cwtl
mov
mov
int
clc
nop
lods
imull
sbb
stos
push
pop
dec
rcrl
movsl
les
sahf
insb
push
jmp
or
ja
or
nop
add
inc
out
or
arpl
add
subb
mov
mov
or
jno
mov
jb
sub
addr16
loopne
dec
cmp
jp
xor
mov
sti
jg
test
mov
xchg
out
push
ret
mov
data16
inc
js
pop
in
mov
pusha
pop
outsl
insl
jmp
xchg
insb
push
gs
push
testb
das
mov
inc
xorl
lods
outsb
pcmpgtd
pop
cld
adc
push
pop
insb
xor
mov
lcall
push
push
xlat
mov
cs
lds
adc
sbb
shll
in
cli
mov
jle
loopne
mov
sti
mov
or
ljmp
jl
mov
decl
add
mov
xor
daa
stos
sub
sub
or
cmp
adc
incb
jg
ret
push
pop
inc
adc
insb
sbb
mov
cld
push
xor
or
dec
push
sbb
js
jecxz
test
xor
fildll
and
push
jns
jle
or
ljmp
sub
push
lcall
daa
notl
scas
mov
and
xlat
push
loopne
lds
jl
ds
sbb
mov
sub
aam
jecxz
mov
outsl
adc
mov
idiv
add
mov
imul
loop
gs
in
outsb
push
push
adc
add
xchg
mov
daa
sbbl
std
mov
stos
or
pusha
rclb
push
subb
out
mov
jo
out
pop
sub
mov
xchg
pmullw
test
pop
jb
mov
add
sbb
dec
or
insl
jl
cmp
shl
cmpsb
and
dec
cmpsl
pop
iret
ror
lock
mov
pmaddwd
cmp
js
cld
in
push
mov
push
mov
adc
jbe
jg
mov
dec
jp
mov
lods
gs
test
insl
stos
or
push
push
jne
fwait
stos
add
shrb
add
mov
aad
sbb
sti
push
test
add
mov
push
enter
pop
aad
add
stc
ja
inc
ljmp
pavgb
ljmp
mov
jmp
movl
loope
inc
xchg
movsl
in
mov
push
mov
and
fs
es
xchg
mov
out
insb
movsl
add
mov
cmc
aaa
scas
lret
notl
and
inc
out
test
xchg
inc
leave
and
cmc
mov
ljmp
out
pop
int3
jg
and
pop
insl
lods
jp
ljmp
and
stos
pusha
movl
pop
dec
jnp
mov
xor
je
aad
and
push
loope
lods
dec
push
xor
cli
mov
mov
push
push
and
movsb
xor
jnp
stos
pop
cwtl
adc
test
fdiv
popf
mov
xor
mov
mov
fdivs
stos
fcomps
loope
or
push
fists
lds
sub
scas
push
pop
xchg
xchg
cmp
cmp
out
jp
cmpsl
adc
pop
test
aad
dec
pop
mov
movsl
mov
inc
and
push
xchg
cwtl
movsb
xchg
and
out
jbe
fldl
repz
pop
mov
mov
cmp
mov
xchg
fiaddl
icebp
xlat
pusha
loop
mov
inc
test
push
pop
mov
aad
in
cli
push
sbbb
ljmp
hlt
jno
and
test
pop
repz
in
dec
in
xor
mov
xor
mov
mov
inc
push
push
and
iret
ja
bound
std
adc
sub
push
fildll
push
sub
fldenv
mov
jne
test
xor
mov
or
mov
add
jbe
mov
es
mov
sub
push
adcb
fsubrp
outsb
loop
lock
mov
push
inc
add
cmpsb
mov
pop
dec
cmp
sub
push
gs
ret
jmp
sahf
ljmp
rcrl
addr16
sub
imul
movsl
xchg
add
sub
xor
popa
aam
add
add
xor
out
clc
mov
dec
cwtl
cmpl
xor
out
repnz
shlb
mov
sbb
xor
pop
out
ret
cld
inc
cli
in
leave
lea
adc
sbbl
loopne
jb
sub
out
push
sub
insl
pop
or
inc
push
mov
push
fnstcw
in
jmp
into
loop
ja
into
daa
test
mov
popa
lods
rcrl
mov
insl
push
test
mov
aas
jo
int
jae
mull
sarl
mov
inc
or
cmp
or
movsl
roll
bound
leave
cmp
lea
rclb
mov
or
xchg
sub
xor
dec
jle
inc
cli
test
mov
xchg
and
mov
pop
push
stos
insl
jge
int3
dec
jns
repz
stc
stos
mov
or
bound
or
js
add
or
arpl
cmpsb
jbe
addr16
movsb
xor
imul
xchg
mov
sub
popf
mov
jmp
lock
cmpsb
js
and
push
push
push
jge
lahf
sti
cmp
in
xchg
adc
loope
push
pop
dec
shll
sub
das
jmp
mov
pop
jb
out
ja
xchg
sbbl
popf
hlt
xor
inc
inc
scas
stos
and
fstpt
dec
and
pop
add
cmpsb
test
jns
push
push
push
ret
lods
aam
cli
add
mov
jnp
pop
testl
add
pop
mov
les
movsb
push
cmpsb
cld
xchg
jns
add
mov
pushf
mov
inc
lods
sahf
adc
jp
jecxz
pushf
subl
adc
jae
xchg
xchg
push
pop
and
fucom
cmp
shlb
pop
nop
cpuid
in
pop
cs
enter
pop
dec
sub
mov
es
xlat
sub
lahf
jge
ret
outsb
cmpsb
jp
cmpsl
jp
nop
adcb
xchg
jbe
jg
test
pop
pop
frstor
xchg
ds
lea
mov
lcall
fmul
ljmp
or
mov
arpl
and
negb
lods
rcl
inc
ja
es
loope
scas
mov
mov
ja
sar
ss
sbb
mov
xor
testl
mov
xchg
cli
pusha
je
icebp
in
dec
test
in
sti
cmp
pop
mov
imul
pop
orb
xchg
movsb
clc
cwtl
fsub
dec
and
js
pop
es
cs
mov
lret
push
clc
data16
xchg
push
movsb
mov
jecxz
gs
test
nop
sbb
cmp
rcrl
scas
aam
sti
in
sbb
imul
fldenv
jmp
gs
in
das
sub
in
cmc
push
sbb
cli
mov
rorl
mov
cmp
jge
ficomps
jmp
or
mov
pusha
sti
xchg
push
ljmp
stos
mov
pusha
jl
rorl
or
ljmp
cltd
or
or
inc
and
inc
rorl
pop
insb
mov
add
mov
sbb
std
pop
daa
and
movsl
pusha
pop
xor
dec
pop
insl
cltd
fwait
push
loopne
movsl
mov
dec
sahf
test
mov
xor
mov
jo
insb
push
repnz
jmp
mov
orb
int
jae
lret
xchg
mov
mov
xor
pop
test
clc
and
cmpb
sti
enter
add
testb
xlat
pop
test
lahf
out
jmp
out
in
sbb
or
xchg
and
sub
repnz
outsb
stos
cmp
push
inc
in
inc
adc
push
and
mov
xlat
clc
stos
mov
pop
sub
lock
pop
sub
lea
popa
dec
xchg
xor
dec
mov
popf
rorb
mov
jnp,pn
int
sti
xor
jb
mov
dec
pushf
mov
sbb
nop
imul
fmull
xchg
mov
jno
dec
mov
jg
ret
loope
and
cmp
nop
mov
rorb
lods
mov
mov
hlt
into
push
sub
sbb
dec
pop
cmp
sahf
jo
scas
jne
cmp
lcall
pop
mov
pop
mov
ds
xchg
xchg
cmp
fidivl
test
pop
ja
lret
lea
arpl
or
and
pop
lock
lds
rcrl
int3
sbb
jecxz
jns
insl
and
cs
sbb
mov
push
mov
cmp
add
lods
mov
or
cmp
push
lock
test
sahf
lds
notb
aam
jns
rcr
mov
popa
cmpsb
dec
xchg
or
ds
pop
enter
pop
push
in
inc
xchg
nop
into
pop
cmp
idivl
insb
sbb
push
sbb
xorl
repnz
out
inc
jmp
mov
jnp
fisubl
loop
notb
std
fadd
inc
dec
movsl
cwtl
mov
xchg
test
mov
mov
test
aaa
scas
or
sub
dec
mov
or
xor
cmp
ljmp
es
sbb
loopne
in
cmp
push
fimull
cmpb
mov
sahf
jecxz
mov
ffreep
dec
xorb
lds
add
pop
mov
inc
aas
add
sbb
and
inc
mov
inc
mov
sti
mov
xor
sub
adc
test
lods
add
fists
or
inc
pop
pop
aas
dec
in
xor
shlb
je
mov
sbb
fldt
add
xchg
int
enter
mov
push
negb
push
adc
sbb
rol
mov
fwait
inc
lret
xchg
ds
fdivrl
inc
sbb
jg
sbb
xor
in
xor
and
bndstx
lock
mov
dec
fistps
idivb
dec
mov
ror
outsb
add
imul
sbb
dec
scas
movsb
and
pop
mov
or
xor
ja
push
sub
dec
add
mov
loope
out
pop
aaa
jne
ficoms
dec
pop
mov
and
rclb
mov
nop
je
sbb
mov
adc
jmp
inc
sbb
or
in
xor
dec
pop
sarb
jp
sbb
mov
js
sbb
pop
sbb
mov
loopne
jnp
jmp
dec
mov
roll
dec
mov
inc
insb
push
shl
ficomps
repz
popa
xchg
add
mov
pop
adc
leave
int
jp
jmp
push
mov
repnz
sub
movsb
cmc
jae
sbb
addr16
sarb
jg
gs
notb
and
xchg
xchg
or
shrb
xchg
cmp
xor
dec
mov
ss
adc
aad
arpl
fs
fcomi
mov
fsubrs
adc
popa
sbb
icebp
inc
sub
or
jb
pop
mov
dec
pop
pop
pop
add
sub
rorb
es
incb
out
adc
jbe
mov
jmp
inc
pushf
cltd
dec
aam
mov
mov
pop
loope
push
adc
dec
or
sbb
pop
fwait
xor
out
inc
cmpsl
lret
sbb
jbe
push
mov
aad
int
xchg
out
pusha
fnstenv
dec
filds
and
or
mov
jge
subl
and
cmp
cmp
jae
jbe
in
sti
pop
pop
jle
js
sti
std
pop
sub
mov
mov
push
psadbw
in
mov
sbb
enter
xor
mov
mov
sti
addr16
push
hlt
cmp
jmp
or
aas
stc
mov
mov
sahf
adc
mov
lret
jbe
adc
stos
lods
xchg
or
roll
insl
call
inc
loop
cmp
cmp
inc
sbb
xor
cwtl
mov
xchg
fidivs
xchg
jns
scas
sbb
daa
gs
sub
inc
gs
sbb
ret
push
xlat
or
and
inc
xor
or
ret
out
add
mov
call
dec
call
inc
incb
out
xor
mov
pusha
sub
mov
aaa
add
jmp
jb
cmpsb
push
pop
dec
fisttps
pop
and
adc
add
test
push
xlat
and
lret
fsts
hlt
fbstp
and
push
out
xchg
inc
and
adcb
data16
jmp
insb
sub
mov
xor
mov
sbb
push
fdiv
adc
pop
dec
movsb
mov
sbbl
fistpl
xchg
scas
sub
call
mov
sub
mov
ja
pop
movsb
mov
jecxz
xor
imul
xor
jne
repz
add
fnop
stc
arpl
popa
mov
push
out
mov
xor
cmp
and
pop
ja
mov
out
ret
add
rclb
xor
imul
dec
mov
fs
mov
add
call
cmp
mov
and
dec
jp
jns
insl
les
mov
inc
cltd
pop
or
cmpsl
xchg
push
mov
scas
dec
daa
mov
imul
cli
sbb
fildll
jge
jne
jg
sub
sbb
mov
enter
push
out
mov
jp
push
lods
test
add
fs
mov
fsubr
mov
test
lret
fdivs
sub
mov
sbb
roll
add
ss
pop
sbb
xchg
pop
and
xchg
cmp
dec
js
add
mov
dec
push
shr
loopne
sub
out
sbb
and
test
dec
xchg
inc
shlb
jmp
ljmp
addb
dec
sub
test
sbb
insl
sbb
out
mov
and
stc
sbb
push
inc
xchg
rcr
loope
push
arpl
mov
divl
push
stos
mov
les
sbbb
push
bound
cmp
mov
and
stc
xchg
pop
push
xchg
dec
stc
aad
cmp
xchg
jbe
add
adc
or
inc
pop
out
cmpb
jno
insl
xchg
sub
repnz
leave
fldl
hlt
pop
jo
std
addr16
mov
stos
xor
inc
dec
add
movsl
mov
stos
dec
cwtl
adc
test
or
xorb
fstpl
mov
inc
scas
cmp
and
push
cmpsl
inc
mov
das
adc
adc
call
test
aam
std
sub
mov
mov
add
aaa
xchg
notl
insb
push
mov
ret
add
mov
inc
and
mov
inc
inc
cmp
das
je
xchg
ffree
mov
rorl
and
mov
pop
rolb
cmc
mov
mov
wrmsr
inc
cs
fs
outsb
sti
negl
inc
clc
xor
outsl
mov
nop
push
cmp
push
sbb
xchg
aaa
cltd
mov
in
push
mov
incl
cmc
jmp
aam
ss
xor
out
push
dec
jo
js
aad
fldl
popf
sbb
mov
and
sub
fidivrs
pushl
sbb
dec
cld
adc
fldt
jmp
icebp
adc
or
mov
int3
into
pop
stos
cmp
aaa
out
xchg
cmp
mov
adcl
fwait
mul
sub
mov
into
loop
mov
xor
imull
xchg
jmp
in
data16
fsubr
popa
mov
mov
out
inc
scas
out
mov
pop
clc
lret
rclb
ds
enter
aas
mov
hlt
repz
setne
cmc
js
mov
bound
js
mov
push
pop
mov
aas
dec
sbb
cmp
cmp
add
jno
mov
roll
in
daa
aas
mov
cmp
sub
aaa
repz
call
fwait
mov
pop
lods
inc
sub
or
in
je
sbb
cmp
mov
add
xor
or
push
and
push
loopne
scas
in
xor
pop
std
sub
mov
push
rol
ret
sbbb
pushf
pop
lock
jns
mov
mov
mov
xchg
ja
fdivs
lahf
xor
inc
in
push
jmp
xchg
mov
xchg
mov
lret
dec
sub
out
adc
int3
inc
or
outsl
mov
lcall
pushf
imul
in
clc
xchg
test
pop
imul
pop
ss
xor
inc
in
pop
mov
imul
mov
xchg
jle
cwtl
jge
or
dec
ds
cmp
fistpl
rcll
pop
mov
sbb
xor
sbbl
ljmp
test
lods
mov
xlat
dec
push
cmp
sub
jp
ljmp
stos
repz
sub
mov
xor
into
lods
push
inc
pop
xor
sub
out
or
push
ja
lcall
les
stos
or
xchg
aaa
mov
pop
dec
movsl
xor
daa
push
xlat
and
fs
pusha
cmp
mov
jl
mov
shlb
pop
jbe
inc
loope
push
pop
mov
sbb
mov
mov
js
cmpl
std
and
movsl
mov
cli
xchg
fcmovu
cmpsb
test
and
std
ffree
push
icebp
add
sbb
movsb
cltd
mov
and
addr16
push
mov
adc
cltd
data16
push
push
inc
jge
movsl
pop
lea
push
or
cmpsb
cs
xor
stc
lcall
mov
cmp
jmp
inc
or
incb
mov
ret
pop
ret
cmp
outsb
insb
xchg
pop
rorb
push
mov
call
shlb
lea
mov
sarb
mov
sbb
mov
mov
inc
data16
mov
jle
inc
add
flds
test
in
pop
cld
leave
dec
adc
movsl
add
fistps
out
les
lret
cmp
lret
and
jnp
or
inc
jno
fidivrs
jbe
pop
mov
pop
mov
repnz
push
pop
add
xchg
mov
cwtl
addr16
dec
xchg
jl
in
mov
lret
rcrb
add
pop
test
rorl
pop
dec
lahf
or
push
adc
leave
pop
pop
enter
imul
rol
mov
push
jnp
std
stos
mov
hlt
push
btc
mov
mov
xor
call
test
stos
sub
xor
mov
jno
scas
push
cmc
loop
pushf
mov
aad
xlat
cli
paddusb
push
mov
xor
loope
jne
mov
test
xchg
iret
je
popf
inc
push
stos
es
out
ja
sub
lcall
pop
cwtl
pop
cmp
fcoms
sar
pusha
stos
cmp
mov
inc
jnp
aaa
jb
dec
lods
push
cwtl
movsl
xorl
movsb
push
add
cmp
jno
and
fs
sbb
imul
xor
sbb
sahf
pushf
mov
adc
test
xor
cmp
loop
int3
movsl
add
nop
test
orl
pop
pop
out
dec
push
fmuls
add
xchg
std
imul
dec
xchg
test
inc
lock
mov
pusha
flds
js
or
adcl
addr16
adc
shr
jbe
lcall
add
jne
fisttps
in
and
rorb
jp
lret
cmp
xchg
cld
leave
mov
lahf
sbb
push
enter
inc
hlt
adc
fs
out
xchg
mov
mov
pushf
mov
cs
mov
jns
aam
dec
pop
cmp
jle
push
add
dec
insb
ds
repnz
out
add
dec
pop
stos
insb
hlt
mov
cmp
pushl
jns
stos
and
cmp
mov
xchg
iret
mov
xchg
xlat
pop
add
fs
iret
jmp
pusha
xchg
adc
bound
bound
addr16
cmp
mov
push
arpl
and
or
out
frstor
push
add
xor
int
leave
add
popa
adc
andb
out
push
xor
sbb
sbb
mov
push
sbb
ljmp
repz
and
mov
mov
gs
dec
std
mov
inc
ja
inc
dec
out
sub
jns
jo
and
addl
xchg
mov
cwtl
cld
adc
call
mov
inc
cmp
loop
mov
and
dec
cwtl
add
inc
jl
dec
ss
call
xor
mov
mov
xor
push
adc
and
push
xchg
movsl
subb
cmpsl
mov
cli
ficoml
pop
adc
lcall
cmp
repz
ja
xchg
mov
or
aam
into
mov
lods
decl
pop
in
jl
or
add
ror
jae
out
inc
loopne
push
pop
out
mov
and
pop
sub
inc
lret
sbb
in
stos
xchg
lahf
push
jle
push
xchg
mov
push
mov
and
dec
inc
inc
std
pop
cmp
rcrb
xchg
mov
mov
inc
adc
sbb
int3
push
push
and
stc
cs
sbb
add
mov
cmp
add
jae
push
pop
bound
jge
xor
and
mov
loopne
movsl
sbb
imulb
gs
dec
mov
call
cmpsb
pop
xor
sbbl
dec
mov
out
movsb
shlb
add
mov
push
inc
mov
btc
je
pop
jno
push
xchg
xchg
lods
shll
out
cmp
mulb
xchg
push
scas
add
add
xchg
lock
xchg
xor
daa
pop
mov
jne
repz
shll
int3
bound
out
in
mov
mov
jo
jae
mov
outsl
push
aas
and
jl
or
mov
das
shrb
jo
pop
ljmp
and
out
push
fwait
pusha
cld
out
jno
insb
jae
mov
daa
shll
clc
orl
repz
dec
repnz
pop
or
xor
loope
divb
nop
scas
fwait
aaa
mov
pop
dec
scas
mov
jns
xchg
dec
or
cmpsl
adc
push
imul
enter
jne
xor
adc
inc
inc
out
sub
cld
std
out
mov
aam
mov
in
jle
lret
repz
movsl
dec
xor
scas
mov
xchg
lods
outsl
pop
mov
test
inc
loope
pop
pop
lods
mulb
mov
dec
pushf
xor
dec
add
or
adc
sub
add
and
jl
pop
mov
ds
sub
xorl
enter
jp
inc
xchg
je
xchg
mov
sbb
int
lods
jbe
cmpsb
out
cmp
jg
insb
push
mov
shl
iret
outsb
imul
push
mov
inc
push
dec
sub
in
mov
repz
cli
mov
push
sub
lea
jmp
pushf
inc
scas
and
addr16
push
or
icebp
add
lcall
jo
cmp
shrb
mov
subb
inc
test
dec
xchg
xchg
mov
shll
scas
pop
sti
sbb
push
mov
mov
jb
or
es
call
enter
xchg
movsb
data16
insb
sahf
scas
sub
popa
jne
xor
sub
adc
adc
xor
pushf
dec
in
jo
imul
testb
ljmp
adc
stos
popf
mov
add
repnz
add
addb
xchg
sub
dec
mov
sbb
iret
bound
das
pop
dec
fs
lea
mov
js
insl
mov
and
mov
or
push
jge
dec
addr16
lods
cmp
and
pop
les
push
jnp
out
and
push
in
sub
inc
mov
enter
subl
and
and
xor
adc
pop
inc
bswap
in
adc
xor
fsub
ds
andl
scas
mov
cmp
cmpsb
mov
jno
and
les
insb
cmp
push
popa
punpcklwd
insb
and
or
sahf
std
fisttps
jle
in
sahf
scas
and
iret
pop
ds
cmpl
outsl
lret
mov
daa
shll
rorb
jae
repnz
adc
adc
cmp
bound
fwait
pop
dec
addb
pop
mov
int3
out
xor
mov
inc
or
aad
dec
inc
adc
jno
clc
into
xchg
jge
faddl
in
pop
dec
mov
sbb
jo
popw
cmp
inc
xchg
out
iret
xchg
sbb
and
mov
fwait
add
aas
out
lret
or
les
ja
lods
or
jmp
setb
pop
pop
fcomip
mov
push
pop
aas
mov
test
inc
pop
mov
mov
movsl
addl
cmp
clc
movsl
pop
sbb
push
lahf
cmp
add
adc
adc
pushf
rorb
test
popa
insl
pop
inc
and
in
stos
dec
or
lea
xlat
sbb
fcompl
stos
push
mov
cmp
lcall
push
loopne
jmp
add
sbb
push
xchg
and
add
jns
nop
mov
mov
es
adc
dec
out
pop
enter
xchg
xor
insl
mov
cmp
mov
pop
mov
lret
test
aas
scas
push
xchg
xor
icebp
adcb
dec
push
xchg
imul
gs
cmp
mov
faddp
xor
and
jge
adc
xor
repz
or
leave
and
sub
addr16
dec
jae
and
iret
jnp
dec
inc
mov
aaa
jmp
inc
mov
aas
push
jns
insb
sub
add
aad
pushf
xchg
jl
mov
and
out
js
sbb
lret
pop
lods
dec
divb
sahf
push
add
fcoms
insb
ret
jbe
push
mov
xchg
add
dec
xchg
mov
cwtl
inc
push
mov
lock
mov
test
stos
ljmp
mov
out
frstor
or
dec
ds
gs
scas
mov
xor
aas
call
cmc
pusha
mov
xchg
lcall
popf
fistpl
lods
fldcw
mov
bound
and
ret
mov
insb
rcrl
mov
xlat
mov
into
pop
mov
loope
scas
ds
fistl
push
push
inc
mov
mov
ret
push
insl
enter
addr16
xor
push
aas
add
clc
xor
xchg
jp
jmp
push
mov
icebp
push
sahf
cmpsb
sarl
push
fdiv
jge
push
dec
popa
xor
inc
push
jns
sti
adc
test
aas
inc
cmp
sub
cli
imul
and
lock
mov
jbe
fdivrl
or
jns
dec
hlt
mov
jle
lods
shlb
jecxz
cmp
push
fimull
xor
sti
imul
or
mov
cmovb
cmp
push
nop
cwtl
jecxz
out
scas
mov
notb
inc
cmpsb
loop
cmp
pushf
test
xor
sbb
cli
pop
mov
cs
mov
into
push
add
in
nop
mov
aaa
je
inc
cmp
sbb
sbb
push
or
and
xchg
push
cmc
lret
adc
sbb
adc
adc
mov
push
sub
adc
add
cmp
loop
cmp
jbe
mov
mov
pop
les
dec
nop
daa
fisttps
push
mov
sar
imul
cmpsb
push
lock
rolb
cwtl
push
mov
inc
mov
stc
adc
or
arpl
sub
das
icebp
or
mov
mov
lock
pusha
mov
and
mov
gs
icebp
leave
xchg
mov
mov
popf
mov
fcomps
xchg
test
icebp
addr16
loopne
ret
ja
xchg
fwait
pop
cmpb
dec
ja
pop
or
or
lds
xor
lds
mov
push
int3
lcall
test
pop
je
adc
ja
popf
pushf
cli
mov
xor
lds
neg
add
in
inc
adc
mov
lcall
icebp
nopl
dec
out
cmp
jl
xor
movsl
mov
xchg
rolb
xor
mov
pushf
popf
aam
gs
hlt
xor
sahf
push
add
pop
pusha
mov
and
inc
xchg
xor
xor
repnz
negl
mov
fnstcw
leave
or
shll
mov
mov
das
push
sbb
dec
or
notb
jb
sbb
dec
sbb
jno
sub
pop
loopne
push
mov
fmul
mov
add
mov
outsl
mov
jno
adc
cwtl
rorb
and
rolb
int
iret
and
sbb
test
daa
notb
mov
cld
lret
lods
sbb
pop
outsb
cs
dec
das
fisubrs
enter
in
repnz
jecxz
and
out
sbb
js
sub
out
aad
mov
mov
dec
sub
lret
lock
stos
jg
push
xorb
mov
mov
icebp
fcoml
push
mov
fstpl
pop
enter
mov
scas
in
loope
jne
stos
or
sbb
mov
js
mov
cmp
ret
dec
clc
push
mov
fidivrs
leave
mov
icebp
dec
mov
inc
cs
cmpsl
loope
dec
push
leave
rolb
fsubs
adc
idiv
pop
lret
xor
push
xchg
sbb
pop
sub
in
int
iret
jae
or
gs
pop
repz
add
es
sbb
xchg
bound
cli
outsl
xor
shrl
xlat
pop
pop
or
lcall
xor
idiv
pop
mov
shl
mov
cli
adc
call
movsb
icebp
adc
jno
mov
jbe
out
jno
imul
popf
sub
adc
dec
aas
in
fisttps
dec
or
inc
sub
sarb
add
je
stc
test
sub
lock
sbb
addb
into
sbb
jo
in
push
adc
test
sub
call
push
icebp
outsl
ljmp
push
mov
add
cmpsl
gs
out
movsl
pop
adc
lods
outsl
int
daa
stos
test
mov
mov
ret
cltd
or
aaa
paddusb
and
adc
and
dec
bnd
in
mov
add
jecxz
push
movsl
inc
pop
sti
fwait
sub
mov
jmp
push
xor
hlt
mov
jbe
dec
nop
xchg
call
add
repz
add
mov
int3
movsb
sub
pop
nop
dec
outsb
push
mov
in
fbld
movsb
mov
adc
and
xchg
adc
shlb
cli
push
mov
jns
lods
jns
in
mov
ljmp
dec
ja
add
xor
rcl
adc
in
pushf
or
sub
lds
movsb
cmp
mov
repz
or
rcrl
cmp
shrb
cld
in
mov
ret
sub
sahf
add
or
neg
inc
lds
inc
fdivrl
test
fimuls
in
sub
pop
mov
adc
clc
push
lcall
xchg
fisttpl
mov
aas
mov
mov
insb
incl
mov
lock
insb
ja
and
mov
out
stos
repnz
in
add
sub
and
push
shrb
inc
xor
or
xchg
add
lea
xor
std
sub
push
sbb
push
pop
sbb
ja
mov
add
in
xor
into
aaa
cld
push
xchg
jns
sti
mov
movsb
xchg
mov
cmp
or
js
lret
jno
lret
dec
data16
fnsave
xchg
adc
add
scas
stc
inc
jmp
fisttps
mov
sub
jns
add
loop
lds
lcall
add
jecxz
pop
rcrl
clc
inc
hlt
or
xor
adcb
pop
sbb
test
inc
pushf
sub
and
test
imul
pop
cltd
negl
push
xchg
pop
or
pop
xor
push
js
jmp
adc
push
xchg
shlb
jne,pt
sbb
sbb
ds
mov
daa
and
jns
hlt
dec
into
cmp
popa
inc
adc
test
sub
xor
mov
xlat
xor
stc
jb
mov
push
xchg
lcall
out
or
call
loop
adc
dec
xor
and
or
mov
enter
lcall
dec
fsts
fcoms
pop
ja,pt
shll
add
sub
inc
ss
jmp
dec
xor
xchg
push
dec
movsl
pop
sbbb
fiaddl
lods
mov
ficomps
fsubrs
jbe
mov
insb
pop
lods
push
jmp
mov
int3
cs
loope
in
roll
push
sub
mov
add
bound
jmp
popa
xor
cld
mov
sub
cltd
mov
push
mov
fcomip
or
sti
sbb
out
adc
sbb
cmp
cmp
cwtl
mov
and
fwait
jo
push
mov
push
and
mov
push
fnstsw
and
xorb
xor
mov
rcrb
pop
leave
mov
dec
push
and
mov
or
lahf
sbb
stc
jne
mov
jae
mov
sahf
pop
xchg
fildll
jmp
inc
into
inc
sub
fadds
loope
fnstsw
je
adc
sub
loope
xchg
sub
mov
xor
jl
fistps
jns
pop
xchg
mov
aas
iret
xchg
cmp
push
and
or
adc
out
sbb
add
loop
pop
pop
inc
xor
adc
add
popf
repnz
xor
dec
es
sub
mov
and
dec
adc
outsb
std
imull
fcomps
fsubrl
cmp
loop
xor
mov
hlt
add
jmp
xor
sti
push
mov
addr16
test
xlat
mov
sub
push
jmp
out
push
mov
inc
sub
imul
and
and
xor
insb
mov
scas
pop
stos
push
or
loop
push
sbb
jg
stos
or
jae
sbb
mov
js
mov
inc
adc
and
sbb
mov
adcb
jno
push
jne
inc
inc
and
mov
mov
sahf
out
sti
ret
dec
call
mov
pop
aam
xchg
dec
sub
mov
pop
push
cmp
inc
cmc
add
mov
sub
adc
test
cmpsb
mov
ja
mov
inc
test
jecxz
mov
gs
mov
sbbb
mov
jle
mov
sub
loopne
and
movsb
pop
int
cmc
dec
lods
dec
mov
mov
inc
repz
mov
rclb
mov
out
and
adc
jl
ss
sub
pop
mov
sub
mov
jo
mov
outsl
mov
mov
xchg
xchg
in
in
xor
icebp
xor
leave
xor
into
clc
imul
cld
pop
scas
push
push
mov
aaa
cmp
push
jnp
mov
cwtl
cmc
cli
mov
stos
dec
adc
fdivs
lea
addl
mov
sti
rorb
or
push
ret
jae
popf
sbb
sbb
push
xchg
xchg
jne
and
pop
pop
xchg
cmp
cwtl
jbe
jae
xor
addb
or
fsubl
frstor
ficoml
and
lret
fs
jle
lret
mov
push
jl
cmp
jp
adc
or
jb
mov
shrl
adc
je
mov
rcl
mov
push
call
pop
cmp
and
mulb
push
ja
and
cmp
or
inc
add
enter
int
xor
in
imul
les
jnp
push
xor
rcll
sbb
fwait
rcrb
lds
mov
jl
adc
inc
add
add
out
cli
push
xchg
lods
sti
inc
jbe
push
ja
icebp
leave
and
fisubs
sub
bound
sbb
sub
jae
inc
jne
scas
repnz
call
push
call
imul
add
sub
insl
push
mulb
and
pushf
mov
adc
xchg
jne
psrlq
outsl
dec
push
shrl
xchg
in
or
xchg
jbe
leave
movl
sub
mov
stos
pop
movsl
call
cmp
sbb
add
cmp
test
fidivs
pop
add
sub
fadds
sbbl
pop
rcrb
and
dec
aam
inc
es
loopne
in
into
cld
push
clc
aad
loop
fsts
add
add
fildl
and
movsb
and
xchg
jns
sahf
jge
add
push
lret
sub
iret
stos
fdivrs
cmp
xor
adc
mov
adc
sub
dec
jg
inc
pop
lods
and
fwait
stc
mov
xchg
pop
in
xchg
xchg
mov
ficoms
cmc
jecxz
cmp
jo
loope
mov
jmp
or
nop
jae
sbb
mov
nop
incb
negb
std
clc
xchg
sti
mov
adc
stos
leave
arpl
out
jle
dec
mov
sub
pop
movsl
adc
pushl
xor
je
icebp
fisubrs
sbb
shlb
or
sub
add
lahf
arpl
inc
mov
dec
aas
xchg
pop
pop
rolb
pusha
xchg
mull
fdivl
xchg
lds
lcall
les
imul
cmpsl
insl
hlt
jmp
and
lds
dec
sub
int
cmp
out
subl
dec
sarb
pop
pusha
fwait
lret
int3
imul
loopne
dec
inc
mov
out
lret
fdivr
sar
mov
pop
mov
popf
mov
mov
je
pop
dec
xor
mov
and
and
hlt
daa
inc
xor
fwait
mov
into
pop
add
pop
sub
sbb
inc
lock
fcmovnu
adc
cld
and
cmp
xor
insl
and
sbb
test
and
jno
inc
push
sbb
inc
sbb
and
add
or
cltd
fisttpll
or
xchg
lods
call
push
dec
jnp
sbb
and
ljmp
ficoms
or
out
fidivrs
mov
push
inc
xchg
das
data16
xchg
push
inc
in
inc
repz
jecxz
xor
cmpsl
jecxz
and
add
out
cmc
mov
push
in
aam
sub
stos
jne
mov
mov
inc
cmp
scas
jecxz
loop
ja
mov
popf
cmp
push
jge
jb
push
jmp
es
sbb
xor
mov
fiaddl
inc
out
aad
pop
ljmp
test
xchg
aad
and
xor
adc
shrb
or
sub
lret
jae
inc
xor
ud0
inc
imul
lret
shl
fistl
mov
arpl
xor
mov
test
xchg
leave
movsb
lret
pop
repz
lods
pop
mov
mov
push
gs
in
and
enter
jns
and
cwtl
mov
jp,pt
xchg
adcl
xchg
divb
es
insb
sbb
dec
adc
push
cld
xorb
test
iret
les
push
loopne
mov
sub
lds
push
mov
sub
mov
adc
adc
jo
pop
mov
push
clc
mov
mov
jp
mov
jl
clc
xchg
xor
sbb
and
and
insb
ret
sbb
jbe
call
dec
mov
sarb
fldt
pop
fidivrs
xor
mov
stc
adc
and
inc
in
jnp
xchg
mov
push
cmpsb
adc
ret
gs
push
in
mov
jbe
adc
inc
push
ljmp
arpl
imull
inc
popf
out
je
out
nop
lret
adc
lods
fiadds
mov
jo
or
jle
xor
sub
jmp
in
sub
icebp
int
pop
xlat
sbbb
fsts
xchg
xor
leave
les
xor
mov
sub
jno
sub
mov
fsubrl
pop
shll
ret
xchg
mov
xchg
dec
jns
bound
jle
cmpsb
sub
cmp
and
repz
adc
cmp
lods
aad
or
ljmp
int3
int3
imul
rorb
sahf
adc
and
movsb
enter
add
rcrb
bound
mov
adcl
aad
fisttpll
cmpsb
sbb
icebp
shr
mov
popf
fmulp
xchg
scas
xor
push
inc
sti
jno
lock
and
sub
jge
xor
xchg
or
test
push
iret
mov
ffree
idiv
inc
sbb
cld
out
xor
xchg
xchg
lock
mov
cs
mov
mov
imul
inc
fsubrl
or
add
lret
cmpsl
fisttpll
lods
in
es
inc
mov
inc
mov
jo
andl
je
testb
sti
mov
push
pushf
push
bnd
sub
icebp
pop
idivl
push
aam
arpl
ss
mov
jge
negl
jbe
xchg
hlt
or
jmp
into
aas
cmpsb
lret
jae
loopne
std
hlt
ret
jmp
aad
pusha
and
dec
scas
push
xchg
or
addr16
clc
imul
jns
rcrl
add
cmp
lds
loop
push
aam
mov
fistpl
sub
dec
ljmp
cmp
pop
iret
push
cmp
out
mov
jo
pop
or
push
push
cmpsl
pop
imul
in
call
clc
into
inc
adc
outsb
scas
mov
jge
cmc
jno
sub
dec
jge
jbe
jnp
mov
push
lea
push
fidivrs
stc
mov
cmc
lods
pop
jge
jo
stos
out
sahf
outsb
mov
lds
mov
dec
cmpsb
bound
adc
daa
sub
aad
call
adc
arpl
fnstsw
push
mov
mov
pop
aad
lock
leave
xor
in
in
icebp
dec
lds
dec
call
mov
push
enter
mov
fdivrs
rcrb
out
mov
pop
inc
int
jns
sub
and
insl
jns
out
jecxz
leave
add
inc
clc
mov
sarl
push
inc
pop
lret
pop
dec
ret
push
int3
xchg
add
pop
or
mov
aas
jae
int
push
cli
jle
pop
subb
dec
jb
push
test
aaa
pop
sub
sarb
clc
fwait
xor
sub
fndisi(8087
std
sbb
inc
push
sbb
push
jae
aaa
sqrtps
addr16
push
pushf
push
ljmp
cmp
in
and
filds
lds
daa
and
mov
cmp
cmp
jg
iret
imul
jl
fisttps
jns
ja
mov
push
cmp
inc
scas
mov
jge
outsl
fsubrs
mov
mov
mov
dec
fsubl
pop
incl
cmp
mov
xchg
mov
out
cmpb
push
xchg
mov
rol
ja
repnz
mov
ljmp
mov
aaa
sub
and
adc
cmp
mov
pusha
mov
xor
loopne
js
in
cld
jle
mov
lock
movsl
and
stos
rcrl
lret
mov
or
clc
cwtl
jmp
setp
or
push
out
pop
pop
jge
fisubl
scas
pop
dec
mov
std
test
loope
jl
out
push
sti
inc
mov
or
cmp
mov
pop
fimuls
ficompl
pop
inc
imul
jbe
movsb
push
adc
repz
xor
jns
jno
addl
mov
push
add
dec
pop
mov
xorb
pmulhw
lcall
lea
cld
lea
clc
dec
add
dec
cwtl
imul
mov
rcrb
ja
ljmp
mov
push
jae
mov
jne
fnstsw
insl
add
or
enter
sub
add
clc
lcall
scas
sub
push
pop
lret
fmuls
insb
cmp
mov
lahf
push
add
jmp
mov
jno
xor
rorl
andb
lods
ret
es
push
dec
pushf
inc
pop
pop
flds
lock
mov
cwtl
push
pop
adc
shl
nop
cmp
push
lcall
and
sahf
mov
divl
jb
dec
jno
scas
mov
pop
xor
and
cmp
mov
and
jae
sbb
mov
cmp
add
jg
mov
cs
pushf
negl
sahf
loop
xor
sahf
xchg
rorb
or
popa
sti
fdivrs
pop
xchg
ret
dec
xor
mov
stos
mov
popa
xor
sub
xchg
insb
push
mov
cmp
cmc
pop
gs
sarl
sub
push
push
les
inc
jle
push
mov
pop
push
enter
push
pop
insb
inc
in
and
rcll
sub
push
mov
jb
adc
sbb
jp
sbb
aas
aad
cmp
imulb
incb
pop
in
ficompl
xchg
mov
cmp
aam
mov
mov
xrelease
xlat
xor
gs
inc
out
lock
repz
fwait
je
jnp
dec
or
jge
push
popa
mov
mov
jo
and
xor
mov
mov
inc
xor
sub
aam
or
sub
sbb
mov
dec
sub
es
sub
cli
push
int3
cmp
dec
imul
ret
push
jmp
push
and
or
push
jp
aaa
mov
stos
or
lods
int3
xchg
mov
sbb
inc
fs
ljmp
out
fs
jl
lcall
jmp
jbe
int
or
xor
cmp
icebp
fcoms
sbb
fisttpll
dec
jne
jp
sub
imul
mov
push
and
stc
cmpsl
add
and
cmp
fwait
adc
scas
scas
add
pop
test
jno
jp
or
jo
fisubl
xchg
mov
stos
dec
jne
push
lods
jmp
xor
shrl
mov
mov
adc
addl
cmp
sub
jle
xchg
insl
in
mov
inc
int3
call
cmpsb
pop
mov
mov
sbb
lahf
push
fiaddl
pop
mov
mov
outsl
movsl
ds
fwait
cmp
sub
adc
add
clc
dec
add
push
cmp
lret
mov
or
mov
add
stc
mov
pusha
pop
add
dec
xchg
jne
cmpsl
call
ss
divb
jnp
mov
call
xchg
cmp
ret
adc
out
loope
mov
dec
mov
call
movsb
lahf
mov
inc
sarb
push
ja
test
pop
jecxz
push
fwait
mov
dec
sbb
dec
leave
cmpsl
jne
push
push
adc
mov
push
pop
sbb
fs
fstpl
push
dec
rcrl
inc
sti
sti
xchg
fcoms
or
sbb
push
pop
aam
and
inc
jmp
nop
into
xchg
psubb
imul
inc
xchg
nop
into
adc
add
jl
dec
daa
or
xor
das
xor
roll
cmp
jbe
scas
ljmp
push
popf
daa
sahf
push
adc
mov
ja
mov
cmpsl
xor
jl
adc
jg
or
jle
jae
dec
or
in
mov
mov
cs
and
or
xlat
push
ljmp
lods
cmp
or
rcrl
fcmovnu
outsl
loop
cltd
cmc
and
test
pop
push
mov
inc
pop
sbb
cld
mov
sbbl
sub
sub
jmp
les
pop
push
mov
xor
inc
pop
xchg
jne
push
add
rcrl
dec
inc
fsubrp
movsb
xchg
xorps
insb
std
ror
pop
pushf
test
leave
ret
mov
aaa
adc
sarl
int3
bound
push
cmp
sbb
inc
lods
sbb
cmp
and
es
test
xchg
stos
fidivrs
outsb
mov
mov
xorb
push
das
lea
xor
cmpsb
cs
and
sbb
xchg
ss
sub
pop
icebp
scas
dec
xchg
pop
push
or
lods
fwait
jns
push
shrl
inc
pop
xchg
mov
pop
push
sbb
jbe
fs
inc
fstpl
dec
pop
insl
xor
out
data16
sbb
fcomp
cmp
arpl
es
jno
mov
sub
ret
sub
sub
lret
inc
mov
add
cmp
mov
jmp
add
push
int3
mov
cmp
test
push
call
pop
mov
ss
sub
fisubs
pop
aam
xor
hlt
dec
or
xchg
sbb
mov
add
cmp
dec
lar
xchg
inc
into
inc
imul
jge
out
int3
jp
je
lahf
jmp
cmpsl
ljmp
adc
ret
test
das
das
movsb
dec
popa
dec
shrb
ss
mov
in
ror
and
sbb
ret
mov
sub
mov
jne
insl
sahf
cmc
adc
rorb
ja
lock
lcall
add
pop
lods
lcall
int3
mov
in
jge
cmc
sbb
out
addr16
bound
movsb
inc
push
push
pop
pushf
pop
dec
test
sbb
loopne
or
test
cs
lds
jmp
sbb
pop
cltd
outsl
or
mov
push
xchg
outsb
xor
add
leave
xchg
and
mov
xchg
xchg
sbb
pop
stc
sbbl
jno
stc
hlt
aad
adc
dec
jae
cmpsb
in
mov
mov
cmpsb
rcr
fists
dec
adc
pop
inc
mov
lock
xor
mov
out
data16
inc
dec
xchg
sbbl
subl
xchg
xor
adc
lds
fisubrl
mov
jb
mov
mov
cs
pop
mov
lds
ja
test
scas
in
idivl
mov
into
fwait
and
cmp
fnstcw
sahf
mov
je
push
out
jo
push
mov
sbb
jbe
or
and
inc
movb
addr16
dec
cmp
and
fmul
xlat
inc
sbb
in
movsb
push
popa
inc
xor
aam
fs
cmpsb
and
lcall
lea
popa
or
lahf
lods
sub
lret
pusha
leave
push
movsl
jle
pop
das
aas
fnstsw
imul
mov
out
cmp
in
es
repz
outsb
addl
dec
mov
into
mov
xchg
shll
insb
arpl
pop
xchg
aaa
fcompl
daa
ret
or
je
cli
outsl
push
xchg
js
gs
or
inc
ds
or
or
lds
mov
lret
cmc
clc
adc
and
or
dec
and
inc
fildll
pushf
push
test
jae
xchg
and
lret
icebp
les
and
mov
and
cmp
arpl
lods
or
stos
xchg
inc
lods
mov
daa
adc
xchg
cmpsb
popf
int3
loopne
roll
xor
daa
cmc
dec
pop
cmpb
push
repz
lods
insb
cmp
hlt
mov
add
jecxz
nop
ror
xchg
enter
mov
cmp
out
adc
enter
pop
cli
add
lret
shrb
arpl
icebp
mov
gs
repnz
mov
fs
lods
xor
adc
cld
sti
in
xor
int3
push
dec
jo
mov
pop
push
fsubrl
or
pop
mov
mov
les
sbb
movsb
mov
nop
push
and
icebp
xlat
jns
cwtl
jle
ds
pop
ret
jecxz
subb
mov
pop
sub
jno
sbb
mov
push
cmp
ret
lahf
push
pop
fisubrl
clc
cli
pop
mov
xor
inc
cmpsl
test
jp
or
out
hlt
lahf
xor
outsl
test
push
mov
cmp
imul
jo
out
push
les
jae
and
dec
outsl
inc
imul
pop
jb
cld
js
or
lods
mov
mov
xor
fwait
xor
out
jno
cltd
xchg
pop
ljmp
pop
ret
jge
insl
mov
jle
add
mov
push
sub
mov
in
or
imul
jmp
push
es
xchg
inc
dec
loop
mov
pop
mov
aam
insb
loop
addr16
loopne
jmp
pop
mov
jno
jle
and
push
cmp
add
mov
sbb
inc
movsb
call
add
sub
lods
test
dec
cmp
lea
in
mov
ret
adc
jae
mov
mov
int3
leave
ds
fucom
icebp
popa
adc
into
scas
sub
lcall
test
or
jnp
and
imul
jg
sub
pop
jl
jno
stos
dec
cmp
jmp
mov
add
sub
stos
dec
jle
xchg
adcb
mov
nop
mov
xchg
inc
add
into
pop
jecxz
xchg
sub
jnp
push
or
pop
leave
push
repz
leave
mov
test
rcrb
inc
cmp
daa
xlat
imul
inc
add
in
repz
cmpsl
adc
shlb
fwait
dec
out
mov
push
in
js
test
loopne
rcrb
mov
nop
cli
imul
add
add
and
mov
add
mov
cs
dec
or
call
ret
sub
adc
sbb
pop
pop
add
lret
sbb
cmpl
pop
repz
subl
arpl
sub
adc
aaa
stos
dec
call
inc
lahf
adc
inc
fwait
dec
mov
pop
sub
add
iret
or
inc
cmp
movsb
cld
mov
lret
mov
pushf
clc
into
or
outsl
in
fiaddl
stos
test
cmp
scas
mov
adc
inc
mov
pop
gs
test
stos
or
movsl
inc
test
or
std
jno
ret
inc
mov
enter
jecxz
idiv
push
pop
xchg
cmp
andb
andb
pop
jae
mov
data16
xor
pop
push
lea
sahf
repnz
cmp
es
mov
jbe
mov
sub
jne
sub
fsubrs
mov
sub
in
lret
mov
cmp
clc
and
insb
xchg
pop
gs
pusha
repnz
sub
push
cmp
or
xorl
mov
fiadds
loope
sarl
popf
divl
ja
lds
jge
push
xchg
ret
and
inc
push
sub
pusha
fsubrl
jo,pn
cmp
or
imul
push
lret
add
cmp
shl
rcl
sahf
mov
adc
addl
mov
mov
jl
out
mov
pop
sbb
iret
sahf
jno
int3
xchg
dec
and
lahf
or
mov
push
fnstenv
and
inc
mov
stc
or
mov
lds
mov
mov
lods
cwtl
insb
es
push
inc
cmp
mov
fwait
cwtl
test
or
or
jge
mov
inc
adc
cmp
mov
push
repnz
test
dec
test
ljmp
mov
cld
cmpsb
pop
mov
daa
into
scas
test
xor
insb
or
std
xchg
and
dec
add
pop
dec
aad
fists
pop
dec
dec
inc
pusha
and
pop
jl
or
out
or
push
icebp
clc
or
xlat
jle
xchg
sbb
inc
mov
and
push
mov
mov
insl
push
pop
aam
sbb
lock
mov
subb
pop
divb
xchg
mov
jno
in
mov
lgs
add
sub
mov
xchg
fidivl
enter
mov
mov
fxch
dec
fs
dec
insl
into
nop
xchg
mov
sub
ljmp
in
and
popf
loopne
stos
fwait
mov
test
xchg
sub
jae
dec
retw
inc
ss
lds
push
pusha
jno
mov
fucom
adc
mov
lods
xchg
inc
sbbb
adc
mov
sub
repnz
ss
adc
fimull
inc
mov
mov
sbb
cmpsb
aad
out
aam
sub
pusha
lock
xchg
xchg
push
int
idiv
or
aaa
std
sub
loopne
fisubs
dec
xor
test
enter
sbb
lock
stc
xchg
gs
pop
mov
jge
xor
icebp
pop
mov
lock
out
hlt
add
popa
or
pop
jns
bnd
jp
dec
fsubrs
jno
hlt
test
out
or
jmp
sub
mov
mov
in
xchg
dec
dec
or
add
stos
and
scas
js
mov
cli
cmp
cmp
xchg
std
dec
adc
ja
pusha
push
push
xor
mov
xor
fldcw
fwait
daa
add
jb
movsb
inc
je
cmp
or
jg
mov
sub
cmc
dec
xchg
lret
mov
pop
add
fistl
mov
and
in
ret
mov
into
testb
add
xchg
push
je
test
jmp
push
in
fildl
scas
ljmp
dec
inc
loopne
jmp
rep
push
mov
test
not
sbb
jp
ret
push
xor
or
jbe
cltd
int3
mov
add
push
leave
jbe
push
repnz
jns
popf
repz
sarl
stos
xchg
in
arpl
jae
adcl
inc
jmp
mov
in
and
int3
cld
cmp
sub
stos
data16
pusha
mov
mov
and
jae
cmp
mov
shlb
out
dec
cli
mov
ss
sti
xor
stos
jo
cmp
mov
sbb
loopne
inc
call
push
xor
add
mov
dec
xchg
jmp
push
sbb
jg
outsb
pmullw
iret
in
xchg
mov
mov
in
out
inc
in
add
dec
adc
test
cmpsb
pop
xor
xchg
cmp
sbb
push
testb
mov
or
add
xor
and
ret
xchg
sub
lea
cmpb
mov
push
andl
pop
test
jns
insl
xor
dec
mov
push
stos
mov
lds
mov
arpl
aad
mov
and
sub
movsl
insl
mov
pop
adc
fistps
mov
and
repz
das
gs
dec
sbb
test
add
jae
das
sub
pop
ficoms
sub
mov
popa
lods
lods
cmp
xchg
push
jmp
push
pop
outsb
dec
into
jae
pop
cmp
mov
stos
and
repz
rcl
push
push
add
das
pop
imulb
pop
and
lahf
fstpl
test
and
leave
out
sbb
call
push
mov
lock
mov
or
push
xchg
pop
mov
cmp
cwtl
sbb
aaa
pop
call
icebp
in
jnp
arpl
jb
loope
cmp
rcl
dec
add
add
jo
sub
rorb
hlt
push
or
scas
pusha
test
iret
in
out
shrb
pusha
in
aam
fs
push
or
mov
inc
or
es
je
in
fcoml
clc
xchg
xor
add
mov
pop
dec
clc
mov
pop
push
pop
sarb
cli
lcall
ret
sbb
imul
fstps
jb
jmp
fdivr
add
insb
mov
fcomip
adc
sahf
jnp
in
mov
or
xchg
mov
ret
inc
repnz
stc
ds
mov
fisubrs
scas
xor
decb
insb
xor
dec
sub
jno
filds
jmp
mov
dec
cmp
xchg
xor
jbe
arpl
imul
sub
ret
outsb
imul
mov
scas
dec
dec
jp
mov
inc
dec
jb
sbb
aam
ret
aaa
sub
int
and
sahf
icebp
js
cmp
mov
insl
mov
stos
movsl
xchg
into
aam
inc
push
cwtl
shrb
insl
dec
lret
sti
or
int
pop
call
shrl
or
adc
fisttpll
mov
inc
or
xor
xor
sbb
mov
xchg
and
pop
mov
and
test
ret
lods
add
mov
shll
shll
in
mov
jne
je
dec
sub
pop
mov
repnz
popf
fisubrl
aad
xchg
inc
stos
push
mov
clc
push
rcll
jp
pop
dec
sbb
fisttpl
insb
sbb
or
push
sub
and
in
sahf
mov
inc
adc
cmc
xchg
push
mov
xchg
inc
pop
leave
fnstcw
pop
lea
jecxz
xchg
mov
xchg
sub
popa
or
rorl
icebp
insb
jmp
mov
push
xchg
test
and
cmp
addr16
fwait
rorl
mov
mov
in
cmp
xchg
xchg
mov
add
js
xchg
xchg
xor
pop
and
stc
neg
fwait
add
aad
lcall
sub
stc
movsl
add
xor
push
xor
xor
pop
push
aam
cmp
pop
dec
pop
mov
insb
inc
sbb
inc
test
orl
loopne
out
jns
out
cmpsl
cmp
daa
cmp
popa
stc
adc
pop
pop
aad
jle
mov
fnstcw
mov
jae
jns
test
nop
repnz
test
dec
jae
cmp
and
dec
mov
dec
pop
push
iret
mov
test
loopne
stos
pop
outsb
push
pop
dec
add
xchg
hlt
push
cmp
insl
pop
adc
push
sub
push
imul
add
imul
push
fwait
push
ret
clc
fistpl
aas
dec
lods
jno
push
add
outsl
loop
pop
or
cli
jecxz
adc
icebp
lods
or
icebp
push
pop
mov
cli
dec
in
jns
push
outsl
out
je
gs
and
lods
sub
sub
icebp
mov
out
enter
inc
dec
dec
shrb
xchg
xor
call
lret
loopne
aam
sub
scas
sub
sbb
pop
les
mov
mov
test
ja
mov
cmpb
fcmove
ja
dec
jno
push
push
push
xor
test
add
mov
pop
cltd
test
fwait
push
sbb
dec
push
aad
popf
pop
addr16
inc
popa
jle
pop
loopne
lahf
bound
or
and
cmp
in
and
push
push
aaa
repz
cmp
dec
dec
push
jns
test
fcoml
push
aaa
xor
xchg
fs
into
xchg
hlt
push
pop
xchg
xor
xor
iret
testl
nop
jno
cltd
insb
cmp
test
repz
daa
lods
xor
mov
push
dec
add
enter
pop
inc
int
stos
mov
pushf
call
jmp
ret
xchg
xchg
cltd
or
sti
lret
cltd
or
fldenv
iret
lcall
dec
lret
xor
dec
dec
popf
scas
cmc
nop
ljmp
or
subb
movsl
stos
ljmp
add
mov
push
jo
inc
cltd
lahf
xchg
jnp
dec
pop
insl
sbb
sbb
jge
lahf
jp
lods
jno
jge
xchg
mov
jecxz
or
popw
clc
dec
sub
dec
aas
mov
shl
adc
fistpll
xchg
add
sub
in
sbb
dec
js
xchg
adc
int3
rsm
shlb
mov
dec
sub
sbb
pop
imull
add
fmull
jnp
pop
sub
mov
pop
xor
jmp
push
add
sub
mov
or
xor
adc
inc
xchg
pushl
test
pop
jp
fcoms
fidivrs
xor
imul
push
sbb
sub
mov
lods
movsl
mov
cli
insb
mov
sub
sbb
add
pop
push
insl
bound
cli
lods
push
cld
in
cmc
xor
and
jp
cltd
repnz
lods
sbbb
cmp
jl
in
outsl
pop
icebp
sub
enter
out
movsl
mov
push
fdiv
mov
mov
fstpt
add
or
mov
jns
jno
stc
or
call
orb
and
mov
mov
sub
mov
jno
or
movsl
test
add
jae
addb
repnz
adc
inc
sarl
mov
mov
adc
sbb
xchg
insb
loope
repz
cld
mov
xchg
adc
add
mov
xchg
mov
popf
dec
lret
out
xor
push
movsb
gs
lods
and
pop
cmpsb
dec
mov
arpl
dec
ja
push
pop
and
fiaddl
sub
lock
push
cmpsl
mov
adc
sbb
js
test
jns
repz
and
std
mov
push
sub
mov
aas
loope
push
add
jg
push
mov
add
sub
jno
mov
cmp
dec
or
mov
in
ret
cmp
jmp
and
sbb
pop
mov
or
pop
leave
inc
notb
in
pop
pop
in
repnz
jae
es
frstor
jbe
ret
das
dec
push
add
lods
pop
test
push
lcall
pop
dec
pop
and
cs
add
or
adc
lret
aam
cmp
mov
add
out
fildl
cwtl
and
xchg
jecxz
int3
cmpsl
icebp
add
mov
test
sbb
mov
cwtl
dec
ret
inc
fs
cmc
sbb
jns
adc
ds
inc
or
fcmovne
pop
jbe
mov
sarb
movsl
bswap
in
mov
cmp
and
arpl
mov
mov
mov
mov
xor
mov
fimuls
and
shr
les
mov
nop
mov
sbbb
jbe
sbb
dec
test
cmc
inc
sbb
out
hlt
dec
call
mov
xor
setbe
repnz
das
cmp
aam
clc
mov
out
and
mov
sub
daa
sar
pop
xor
sbb
inc
mov
lea
or
pushf
fiaddl
fiaddl
jp
faddp
movsb
lods
pop
insl
mov
dec
xor
pop
ficomps
mov
pop
fmul
inc
add
or
stos
dec
or
test
adc
pop
push
jecxz
out
es
mov
loope
jno
pushf
mov
sbb
xor
cmpsl
imull
mov
inc
in
xchg
jg
xor
jnp
cwtl
icebp
insl
mov
jle
or
sbb
xlat
jg
mov
adc
incl
jecxz
xor
imul
sub
in
push
hlt
out
mov
subb
sar
mov
mov
into
dec
and
push
inc
dec
sbb
add
cmpsb
add
add
jg
and
rep
rcrb
dec
or
pop
xchg
and
mov
enter
and
add
mov
into
ljmp
fs
mov
ja
je
mov
xor
push
dec
daa
inc
scas
push
push
and
in
sub
cmp
dec
lret
xchg
inc
mov
pop
mov
pop
stos
xor
cmp
sub
fwait
int
mov
jge
sti
jbe
mov
cs
cmp
cli
dec
rcrl
out
inc
jae
mov
pop
mov
mov
pop
negl
pushf
jbe
jg
xor
cmp
jno
pop
xchg
add
mov
fwait
push
mov
and
imul
xchg
repz
jle
xchg
test
push
push
mov
jmp
repnz
arpl
or
push
dec
mov
cltd
rorb
loopne
cli
xor
aas
lds
adc
push
lds
std
mov
pop
stos
dec
imul
mov
add
gs
mov
and
mov
mov
inc
xchg
pop
stos
cld
push
cmc
and
jge
add
ja
push
adc
rclb
jo
aaa
push
data16
ds
mov
sbb
adc
mov
xor
popa
hlt
sar
cli
sbb
pop
rorb
inc
insl
or
or
stos
pushf
sbb
out
scas
rcrb
fmull
decl
inc
inc
add
mov
jmp
cmp
inc
pop
push
push
icebp
mov
sti
iret
test
push
fs
push
fisttpll
aad
jnp
stc
pop
xchg
lods
lock
subl
xchg
pusha
or
lret
push
mov
add
ss
sahf
pop
cmpsl
cli
outsb
jno
push
loopne
push
lea
push
sbb
mov
shrb
mov
push
ss
push
cmp
mov
fwait
sbb
cmp
push
shlb
pop
scas
test
call
das
sbbl
repz
cmp
pop
xchg
popa
call
xor
xchg
repz
inc
mov
lahf
jbe
test
fstpl
mov
mov
ds
add
lods
xchg
cmp
jmp
jecxz
sbb
aas
xor
out
adc
cmp
lds
scas
xor
inc
dec
mov
daa
pop
pop
out
ja
pop
cs
or
inc
jmp
mov
iret
inc
jb
nop
vmovmskpd
cmpsl
jo
or
daa
add
cmp
push
push
mov
test
add
gs
inc
push
mov
popa
sub
dec
mov
mov
adc
xor
sahf
dec
xor
inc
leave
stos
jae
jp
stos
dec
and
sub
push
pop
cmpsl
mov
dec
mov
mov
pop
xchg
pop
insb
popf
ret
mov
push
add
or
fsub
iret
aaa
lds
out
dec
inc
sub
sbb
jl
and
out
mov
sbb
cmp
dec
sub
lahf
or
jl
ja
stc
cmc
fstpt
dec
xor
pop
inc
inc
xchg
inc
dec
add
mov
xor
insb
das
push
push
push
push
sub
inc
xor
jae
repz
lods
cs
outsl
out
sub
hlt
in
ror
mov
fcom
fiaddl
mov
mov
insb
cmpb
dec
and
mov
and
ret
xchg
xchg
in
les
push
jg
cmpl
push
adc
jl
leave
xchg
lea
pop
mov
pop
lret
movsl
cltd
lods
mov
and
int3
scas
push
bound
xor
adc
xor
cmp
push
jl
stc
std
dec
lcall
cmp
data16
movsb
pushf
inc
add
scas
das
loop
xchg
je
mov
xor
xchg
push
stc
lock
in
es
mov
or
dec
or
mov
inc
loopew
xorb
push
cmp
pop
pop
dec
adc
xchg
ja
ret
in
test
outsl
idivb
xor
arpl
or
test
add
mov
pop
lret
scas
scas
fistl
scas
pop
cmp
mov
pop
pop
jg
repz
test
aam
jmp
out
dec
shl
dec
add
cmpsb
dec
jecxz
rcrl
scas
mov
sub
js
mov
inc
loope
imul
inc
rorl
pop
dec
dec
imul
mov
movsl
sahf
jecxz
movsl
cs
dec
lock
add
xor
outsl
pushf
sbb
push
add
and
aad
out
in
add
inc
les
pop
in
lret
or
movsb
icebp
xor
scas
es
jge
out
rol
sub
pop
mov
push
in
aam
lods
push
and
dec
ljmp
insb
dec
scas
std
aaa
cmc
ja
inc
pop
mov
add
jmp
inc
push
outsb
sub
inc
into
push
dec
sbb
dec
add
jo
loop
fnstcw
adc
mov
popf
scas
hlt
xchg
push
lahf
adc
xchg
push
pop
cltd
xchg
lods
dec
mov
sub
insl
push
push
in
orb
and
aaa
or
or
rorl
faddl
sarb
out
sbb
nop
mov
mov
sbb
mov
rcl
lret
adc
pop
outsl
jbe
mov
jl
loop
sub
cmp
icebp
scas
and
xchg
mov
and
add
push
in
xor
pop
adc
inc
and
outsl
pop
and
shll
mov
addr16
sbb
jbe
and
jno
sbb
mov
fbld
xor
in
inc
pop
std
mov
mov
inc
test
dec
int
xchg
lods
mov
addr16
out
jbe
fisttpl
mov
testl
divl
js
mov
xchg
cmp
js
dec
or
insl
jnp,pt
add
pop
ja
xor
pop
das
lods
pop
stos
adc
and
pop
push
sbb
mov
mov
mov
cmpsb
xchg
out
jmp
icebp
data16
aam
lret
jns
scas
cli
nop
jl
fucomi
pop
jns
adc
inc
adc
int
push
ret
insl
mov
sbb
dec
pop
mov
push
bound
and
add
jecxz
ret
fbld
or
dec
fstl
dec
jp
mov
pushf
or
sar
int
pop
inc
into
cmp
xchg
lods
xchg
popf
out
cmp
rcll
inc
jle
jge
push
test
dec
rolb
xchg
push
stos
pusha
and
scas
jns
or
subl
addr16
cmp
sbb
stc
pop
dec
arpl
test
pop
es
xor
add
xchg
adcb
jo
fimull
inc
mov
pop
cmp
test
fcomps
and
test
or
add
cmp
xor
loopne
stos
incl
fwait
push
pop
xchg
xchg
outsb
bnd
repz
sub
cmp
ja
jmp
push
or
jbe
push
in
adc
bts
adc
push
xlat
xlat
enter
sub
jl
setge
cltd
cmp
pop
sbb
dec
icebp
in
add
sub
or
xchg
add
mov
imul
dec
or
push
pop
adc
mov
std
iret
sar
jmp
aam
push
stos
fwait
imul
outsb
test
mov
inc
dec
mov
xrelease
cmp
sbb
push
hlt
shll
int3
loope
push
sub
xor
add
inc
out
dec
fcmovu
call
push
aad
mov
sbb
aam
hlt
ja
xor
out
sub
pop
xlat
sbb
ds
fsubrs
jnp
inc
into
pop
xchg
lock
and
and
mov
ret
push
bound
cld
push
aas
nop
lds
fs
daa
mov
pop
fcomps
pop
and
cltd
inc
jnp
adc
or
negl
or
inc
jmp
xor
fld
sbb
xchg
mov
lds
aad
jnp
inc
js
push
and
xchg
je
pop
mov
in
add
insb
inc
sti
in
and
mov
mov
enter
and
mov
push
mov
mov
fcompl
xorb
add
cli
xor
fcomip
lods
imul
xchg
dec
xor
push
or
mov
xor
fisubl
sub
push
in
push
adc
sti
fdivrp
adc
mov
cmp
rorb
std
test
loop
lcall
push
and
sbb
add
stos
push
mov
adc
xchg
mov
insb
xor
lods
call
ret
xlat
lahf
jle
lods
ret
pop
push
adc
iret
loop
in
loop
out
mov
aam
ja
push
inc
and
jp
push
sarl
mov
les
js
sbb
jmp
pushf
dec
pop
sbb
mov
and
push
dec
or
rorb
sub
int3
int
call
loope
add
jecxz
ficoms
jo
sbb
push
cmpsb
out
aad
cld
mov
orl
jmp
add
add
mov
movsl
inc
std
fwait
outsl
pop
stos
js
mov
data16
xchg
inc
cld
lds
pop
cmp
das
lods
mul
sub
pop
push
imul
adc
pop
sbb
rcr
cmpb
xor
mov
insl
ret
push
sbb
cmp
push
push
in
ja
stos
jg
dec
mov
push
dec
cmp
dec
xchg
inc
sub
out
jb
cmp
hlt
jmp
arpl
xchg
pminsw
push
xor
add
pop
sub
sahf
notl
es
or
xor
je
pop
push
adc
cmp
mov
jae
cwtl
mov
push
xor
popf
cmp
les
mov
movsb
dec
nop
idivb
pusha
or
daa
loop
adc
jge
cmp
fwait
loop
pop
fldenv
add
maskmovq
notl
mov
nop
xor
fistpl
xor
sub
les
cmp
jle
push
cmp
push
fstpt
insb
dec
xchg
or
es
dec
jb
jg
les
and
mov
push
push
cmp
hlt
subb
push
adc
fs
xchg
mov
das
push
and
push
fcoms
mov
jmp
out
stos
test
jge
mov
jmp
xchg
dec
push
ja
sub
inc
fwait
mov
out
js
rcrb
outsl
scas
cmc
add
xchg
shll
pop
mov
jnp
and
jecxz
stos
mov
dec
cmpsl
mov
scas
sbb
adc
pusha
adc
xor
jecxz
mov
cltd
lcall
pop
mov
dec
mov
mov
push
mov
shrb
loopne
call
loopne
imul
add
push
xchg
xor
add
ret
int
sbb
out
and
imul
dec
cld
in
out
mov
pop
dec
mov
jo
add
or
mov
cltd
arpl
jg
mov
icebp
call
push
out
cwtl
dec
push
mov
fildll
mov
pop
push
andb
lods
mov
into
shlb
sbb
pushf
inc
or
mov
fs
adcb
xor
and
jae
arpl
pop
and
movsl
pop
push
inc
push
int
cmpsb
xlat
cmp
adc
push
call
xchg
cli
pop
pop
mov
ret
fdivrs
xchg
subb
bound
ficoms
mov
pusha
pop
mov
cmpl
nop
in
adc
icebp
das
loope
push
or
jl
popa
sub
popa
jns
jl
ret
or
cmpsl
mov
out
dec
dec
xchg
fst
pop
and
mov
sbb
xor
and
fcoms
repnz
rcr
xchg
inc
xor
in
mov
fst
mov
inc
mov
orb
push
in
call
and
adc
popf
pop
fistl
adc
cwtl
adcl
orb
push
xor
test
pop
sub
fisubrs
ret
dec
call
jnp
mov
std
aad
add
mov
and
std
fcom
sub
pop
inc
lahf
sub
fisttpl
sub
jmp
jecxz,pt
push
dec
jp,pt
sub
push
pop
rcrb
scas
cmp
test
and
xor
pop
jnp
imul
roll
insl
jbe
loopne
insl
push
xchg
mov
sbb
or
int
sbb
sub
rorl
xor
cmp
rclb
mov
adc
pop
arpl
and
add
jp
jecxz
cs
mov
fdiv
pop
sarb
mov
cmp
sbb
dec
mov
cmp
fdivrl
adc
ret
movsb
aaa
jae
xchg
out
out
push
pop
daa
negl
mov
xor
iret
gs
adc
add
ds
sti
sbb
in
add
insl
xor
mov
lret
pop
jae
xor
js
inc
rorb
xor
mov
sbb
xor
adc
mov
cmp
lds
xchg
mov
cmpsl
lds
daa
inc
add
adc
fwait
push
or
jbe
add
sti
push
lods
mov
and
movsb
ljmp
in
jmp
cld
data16
inc
imul
jmp
test
pop
pop
push
xor
jb
call
inc
push
xorl
cs
push
push
sbb
addr16
inc
jmp
cmp
je
fwait
pop
cmp
cmp
clc
js
add
mov
add
movsb
lret
sbbb
mull
xchg
pusha
mov
and
test
test
add
xorb
shll
or
add
sub
repz
or
cli
xchg
push
xlat
inc
and
sbb
cmp
fs
adc
cmpsl
sbb
inc
ror
out
push
lret
or
cli
pop
sbb
int3
xchg
lret
jl
in
push
je
jbe
pop
push
push
xchg
pop
in
push
mov
jg
mov
dec
push
sub
roll
mov
stos
push
out
push
mov
stos
loopne
cmp
xor
dec
shll
arpl
sbb
fdivl
imul
call
test
mov
fcmovnu
push
mull
push
sub
xchg
inc
std
ret
outsl
fsubrs
and
mov
xchg
xor
cs
clc
mov
pop
sbb
pop
xor
xor
inc
fsubs
loop
daa
pop
pop
loop
xchg
add
cmp
xchg
or
adc
pop
adc
lahf
push
mov
daa
rorl
pop
jl
sub
sahf
shll
out
mov
jp
push
xor
sub
fdivrl
cmp
insl
and
sbb
push
mov
fisubs
xchg
mov
inc
adc
add
fnstenv
pop
pop
pop
stos
test
mov
mov
pop
xchg
pusha
mov
mov
adc
push
js
and
sarb
emms
in
pushl
push
adc
jno
xchg
aam
pop
es
outsb
fmull
daa
fisubl
mov
jmp
out
les
push
enter
fdivs
push
arpl
loop
enter
lods
cmpl
inc
je
add
out
ljmp
je,pt
push
push
mov
mov
shr
in
repz
out
aas
mov
loopne
xlat
je
pop
ss
mov
mov
leave
cmp
pushf
cmp
test
repnz
ror
or
dec
xor
ja
in
mov
sub
dec
cmp
repz
sarb
int
add
jae,pt
xor
mov
test
jg
jecxz
sub
mov
mov
ror
orl
mov
mov
cli
imul
aad
push
aaa
sbb
mov
leave
fcompl
jle
mov
lock
arpl
inc
out
xchg
test
lods
loope
stos
fsubl
cwtl
mov
not
rorl
cmp
or
cmpb
mov
push
mov
pop
adc
cmp
stc
pop
jbe
sub
push
jae
lea
mov
jecxz
jmp
pop
jge
rolb
sub
jecxz
sbb
or
lock
mov
js
xor
mov
jae
sbb
pop
pop
inc
push
cmpsb
sub
testb
int3
add
icebp
pop
xchg
push
out
lea
repnz
mov
popf
fiadds
ret
dec
lds
xor
fiadds
xor
repz
mov
jg
xor
mov
push
imul
loop
jg
ja
or
push
lcall
xor
faddp
or
aaa
jbe
cmovne
fs
push
inc
or
jb
fbstp
incl
push
dec
pop
adc
dec
leave
pop
insl
pop
jl
rorb
inc
xor
addr16
and
pop
arpl
stos
int3
jae
je
and
add
xor
push
pop
xlat
inc
mov
pop
test
fimuls
es
aaa
push
lret
ljmp
test
lods
into
fldcw
fsubrp
insl
jnp
ds
pop
and
mov
push
inc
xor
lods
and
pushf
cld
loop
inc
hlt
cmp
xchg
or
movsb
mov
jno
sub
mov
and
cmp
add
or
call
mov
pmulhw
outsb
call
jp
sub
xor
lock
mov
cmp
xchg
sbb
call
xchg
sbb
jno
out
pop
popa
gs
dec
sub
cmp
pop
notl
cmp
mov
add
xchg
iret
sub
push
into
push
rcl
ss
cwtl
mov
mov
jae
stos
jmp
enter
push
sub
scas
sub
mov
or
cmp
into
pop
cltd
lcall
outsb
test
xchg
xchg
push
dec
push
sbb
addb
mov
cmp
adc
pop
icebp
pop
in
push
je
xor
mov
addl
mov
adc
mov
xchg
pop
push
lea
hlt
pop
or
mov
and
sbb
adc
sub
jbe
loop
gs
scas
mov
inc
sbb
inc
or
stc
lods
cmp
loop
iret
push
sbb
xchg
lock
ret
push
adc
repz
jo
push
sbb
xchg
xchg
mov
repz
leave
push
test
rolb
lret
enter
pop
out
jg
int
xor
mov
shrl
or
push
fldenv
arpl
rcll
dec
insb
rcrl
mov
cmp
dec
cs
xor
dec
pop
add
movsl
jno
pusha
add
ds
add
xor
adc
cmp
push
cltd
jb
inc
mov
add
sbb
lea
sub
mov
xchg
mov
pop
xchg
lock
shll
into
sbb
insl
das
pusha
xor
xor
mov
cmpl
xor
sbb
hlt
mov
hlt
call
mov
cs
sub
ljmp
push
in
rcl
mov
scas
int
xor
fisttpl
push
fs
mov
stos
jns
xchg
fidivs
fstl
and
insl
imul
jg
outsl
xchg
cmp
clc
orb
jo
lcall
jns
add
cwtl
add
jmp
div
xor
cmpsb
hlt
lods
or
lea
stc
mov
pop
repnz
inc
cltd
inc
add
imul
push
xchg
movsl
sub
lahf
sti
pushf
loopne
js
jbe
cwtl
cwtl
cmp
add
test
fs
loope
dec
mov
pop
popf
out
sub
xchg
pop
out
and
push
stos
jmp
insb
es
int3
ljmp
push
xchg
sahf
jecxz
jle
sbb
mov
sahf
jne
int3
aas
mov
sbb
pushf
hlt
sub
mov
ds
or
neg
or
add
or
push
sbb
mov
mov
out
lret
enter
sbbl
out
jno
adc
mov
sub
inc
lock
fimull
stos
adc
mov
mull
repz
sti
stc
pop
lahf
mov
dec
dec
cld
mov
push
mov
mov
aam
daa
ret
scas
icebp
sbb
mov
enter
jne
sbb
sbb
cmp
fstpl
ret
adc
data16
push
lods
pop
or
push
mov
sbb
clc
cmp
lret
test
cmpsb
xchg
mov
cmpsl
push
mov
scas
movsl
ss
out
cli
xchg
jb
push
pop
js
testl
jg
fnstsw
shlb
sub
push
daa
cli
inc
xchg
in
xchg
mov
push
outsb
aas
aaa
sahf
add
pusha
movsl
inc
xchg
push
cmpsl
add
pop
scas
pop
stos
xchg
mov
cmp
push
icebp
jo
xchg
sub
xchg
iret
dec
add
orl
test
jae
les
sbbb
add
inc
cltd
insl
pop
ret
jp
or
subb
sub
xor
cs
dec
jecxz
sbb
xadd
cmpsl
scas
call
nop
leave
vcvtsd2ss
add
adc
hlt
syscall
push
inc
mov
sub
out
dec
sti
mov
dec
push
daa
ja
xor
dec
adc
jbe
out
daa
data16
jge
andnps
mov
fdivrl
lret
addr16
sub
pop
xchg
jl
jo
or
daa
lcall
pop
cmc
push
jne
or
hlt
call
cmp
mov
mov
push
dec
fbstp
or
insb
clc
xor
loop
xchg
and
cmp
or
jo
leave
jge
fsubl
push
xchg
mov
outsl
in
mov
nop
ljmp
subl
sub
movsb
inc
inc
lcall
imul
push
loop
in
int
daa
sbb
shlb
fnstenv
cmp
lds
ficoml
mov
cmp
mov
cmp
js
dec
cmpsb
lods
or
sbb
adcl
push
xchg
cmp
popa
daa
jl
call
pop
mov
push
push
push
jmp
push
and
sbb
jnp
sbb
jle
lods
mov
std
dec
dec
xor
sbb
adcb
push
sbb
testl
outsl
xor
adc
sub
fnsave
in
adc
adc
or
sub
sub
dec
je
xor
jecxz
in
adc
pop
cmp
insl
imulb
and
mov
xlat
jnp
cmp
xor
xchg
lods
xor
neg
cmp
or
jbe
bound
jno
test
pop
insl
inc
jmp
loop
xchg
insl
mov
into
sbb
cmp
in
jo
mov
xchg
test
js
scas
sbb
dec
in
in
hlt
pop
sbb
and
shr
and
inc
imul
cmp
vcvtps2pd
xlat
xchg
adc
xchg
mov
jae
and
data16
xor
pop
adc
test
dec
lea
insb
jle
pushf
lea
lret
rcl
out
push
or
mov
pop
lahf
stos
adcb
inc
and
sbb
mov
decl
outsl
movsl
mov
pop
insl
sbb
adc
ficoml
scas
lods
or
or
in
sarb
aaa
dec
or
xchg
insb
repz
mov
and
xor
push
and
inc
lock
gs
pop
pop
and
adc
shlb
cwtl
and
decl
aad
and
xchg
or
test
sub
in
cli
sar
jle
in
imul
and
inc
add
jne
cld
jge
pusha
push
push
in
icebp
leave
insl
push
ja
mov
or
inc
jno
dec
jg
mov
stos
xor
jnp
adc
icebp
xlat
inc
jecxz
testl
pop
dec
ss
mov
test
jbe
push
cltd
clc
lea
repz
sahf
bound
data16
dec
sub
les
mov
and
ds
cmp
xchg
pop
icebp
xor
dec
inc
xchg
or
mov
bound
data16
mov
adc
mov
cmp
aas
addr16
ss
ljmp
data16
daa
test
push
les
les
or
idivb
xor
inc
insb
cli
dec
inc
lret
and
mov
fwait
out
add
loopne
fstl
pusha
fstp
lret
xchg
push
faddl
mov
mov
loop
dec
or
enter
mov
pop
rcr
aas
jecxz
fisubrl
jb
add
daa
sbb
jae
arpl
imul
in
mov
adc
rol
mov
lret
inc
lret
aas
mov
fwait
inc
repnz
shlb
cmp
je
jne
add
pop
pop
add
mul
mov
push
sbb
cltd
stos
in
xlat
fisttpll
test
or
sub
mov
leave
pushf
jmp
and
cmp
in
dec
pusha
cld
out
movsb
shl
xorl
mov
pop
cs
xchg
lds
lds
mov
test
mov
adc
fwait
jmp
cli
fmull
jmp
icebp
push
clc
jle
in
std
push
in
cmp
aaa
jg
fcmovnbe
xchg
xor
push
jno
adc
faddl
shlb
push
or
fcomp
and
sahf
sbb
adc
cmc
jnp
push
pop
push
jb
push
jp
test
outsl
mov
shlb
push
mov
inc
nopl
insl
add
pop
aas
cli
iret
insl
cli
xchg
imul
loope
push
std
push
ljmp
or
jmp
mov
hlt
icebp
stc
mov
insb
ret
inc
hlt
adc
test
mov
or
push
or
push
push
arpl
xor
fildl
pop
scas
jmp
lea
and
aad
in
push
sub
out
gs
pop
insb
or
mov
aaa
jae
lods
push
imul
mov
out
sub
mov
jno
int3
jno
sbb
add
jmp
pop
mov
in
mov
out
shufps
in
mov
jmp
ja
xor
mov
mov
enter
adc
jno
sbb
adcl
jne
rclb
sub
xorb
cmp
sbb
in
jb
push
push
aas
sbb
fs
pushf
scas
xchg
pop
add
sub
sub
push
mov
clc
popa
add
xor
push
in
pop
cmc
lds
mov
and
xor
incl
mov
jmp
leave
pop
and
cmpsl
addb
leave
cmp
inc
xchg
popa
ficoml
pop
add
jge
xchg
lock
fstps
jmp
push
movsl
or
xchg
cltd
in
mov
inc
mov
pop
out
push
in
sti
mov
aas
mov
sbb
pop
aas
sub
lret
sub
sub
fisttpll
inc
jmp
lcall
pop
push
cli
pop
call
adc
ss
sti
sub
cmpsb
add
push
jle
cmp
or
sbb
divb
sbb
pop
sti
sbb
inc
inc
jo
rcll
scas
mov
xchg
mov
sub
jne
add
jnp
xchg
les
nop
out
je
imul
mov
xchg
jnp
mov
mov
jnp
inc
sub
daa
push
mov
push
adc
dec
pushf
sbb
popa
sbb
aaa
push
ret
adc
add
lcall
cld
xchg
insb
xchg
enter
push
pop
sub
int3
jp
add
test
insl
imul
std
push
dec
add
leave
sbb
in
push
adc
or
fcom
cmp
dec
push
dec
loop
push
mov
push
push
int
sbb
pop
pushf
dec
cli
dec
fs
leave
pop
inc
or
test
add
mov
adc
push
es
out
les
fdivs
and
mov
cli
inc
in
dec
das
add
push
popa
ja
fisubrs
outsb
fadds
jmp
push
jb
std
adc
mov
add
cmpsb
sbbb
cmpsl
and
jecxz
dec
lods
shll
jne
fsubrp
out
xchg
mov
jl
xor
adc
lret
dec
insl
push
out
cmp
and
inc
jle
xchg
mov
test
outsb
es
rol
out
fucomi
cmp
xchg
xor
cmp
xchg
arpl
jecxz
inc
ficompl
test
sahf
mov
fwait
xchg
sbb
iret
jl
pop
ret
or
fisttpl
cmp
push
pop
sub
jge
inc
cwtl
mov
in
xchg
mov
cmp
movsb
dec
imul
and
in
inc
out
pop
aaa
adcl
sti
shlb
pop
or
dec
mov
xchg
mov
insl
xor
push
icebp
sbb
cmp
add
call
and
cmpsb
add
fldt
mov
pop
jp
test
sub
sahf
jmp
push
or
andb
test
xor
lea
lods
mov
loope
sbb
ret
push
mov
mov
out
cmp
loop
cmp
dec
push
scas
cmp
mov
shrb
in
or
or
dec
sbb
fiaddl
cmpl
jne
mov
xchg
lods
frstor
jnp
aad
scas
lcall
mov
addl
pusha
mov
add
popa
mov
cmp
mov
mov
ficoml
fwait
or
add
push
imul
or
call
add
lcall
test
push
jp
outsl
cmp
out
inc
ljmp
ss
jbe
daa
mov
fildll
gs
xchg
repz
push
xchg
shll
jge
sub
xor
cmp
pop
cmp
push
jnp
movl
mov
lea
fadds
jp
gs
xor
sti
adc
rep
jecxz
add
into
and
rcl
movsl
pop
push
cld
pop
sub
stc
sbb
mov
and
insl
test
pop
hlt
out
in
rolb
aas
idivb
dec
dec
xor
mov
hlt
or
clc
pusha
push
fimull
out
pop
cmp
leave
xchg
call
shrb
or
push
add
or
push
adc
sti
outsb
add
dec
mov
call
push
and
aam
xchg
dec
push
sub
and
aam
out
je
inc
fwait
mov
pop
dec
jb
add
sbb
into
imul
mov
add
dec
inc
mov
repnz
mov
push
dec
mov
jecxz
mov
cmp
and
jns
sub
cmpsb
mov
adc
aam
mov
jp
mov
adc
imul
in
push
sti
mov
inc
mov
movsb
mov
lock
jo
mov
xchg
out
and
int3
mov
clc
aad
adc
cmpb
push
sub
mov
loope
movsl
fiaddl
fcomi
mov
push
push
jb
out
sbb
test
out
in
outsl
push
xor
inc
inc
jp
mov
mov
push
shl
jecxz
or
push
lahf
cmp
jno
mov
mov
add
rcrl
loopne
inc
and
aas
lods
negb
cwtl
js
sbb
or
imul
push
fdivl
stos
decb
push
movsl
pop
sbb
std
mov
aad
lods
lret
cmpsl
sub
sub
daa
int3
pop
fwait
jnp
xor
cmp
aam
sub
jno
and
pop
jno
aas
mov
mov
push
pop
sbb
movsl
mov
sti
lock
mov
mov
dec
loopne
scas
cltd
xor
into
ret
outsb
mov
pop
popa
add
xor
test
cld
cmp
and
xchg
or
out
push
inc
mov
push
scas
movsb
inc
idiv
mov
mov
or
pop
sub
loope
je
or
mul
mov
out
pop
cld
add
xor
adc
movsl
add
pop
or
cs
rcrb
mov
mov
mov
shl
jae
mov
sbb
jns
int
cmc
adc
scas
sub
dec
pop
movb
stc
xchg
sahf
inc
dec
or
outsb
pop
sub
addr16
xchg
shl
insb
cld
jae
mov
cmp
mov
jmp
jno
inc
mov
dec
call
clc
test
ljmp
fstpl
push
sbb
jb
movsb
mov
xlat
mov
lret
jnp
test
add
add
sub
and
and
test
ljmp
fsub
jle
push
push
jp
out
dec
push
scas
lret
jecxz
sbb
mov
adc
add
dec
daa
sub
jecxz
pushf
fidivs
push
into
cs
mov
dec
pop
jmp
push
sbb
stos
out
in
sub
pusha
push
mov
sub
jbe
out
aas
sbb
cmpsl
clc
add
mov
test
xchg
xlat
lods
and
or
pusha
loope
cld
mov
pop
mov
jp
cmp
repz
sbb
out
dec
fcmovbe
push
cmp
sbb
xchg
je
enter
xchg
sbbl
gs
outsb
pop
xor
cwtl
mov
outsb
imul
mov
mov
adc
mov
pop
ja
loopne
lahf
ljmp
sahf
rcrl
stos
push
inc
push
cmp
add
xchg
mov
clc
imull
mov
in
ljmp
sbb
mov
out
cld
sbbl
lret
sbb
adc
ss
adc
loope
xor
sarl
mov
cmpsb
addr16
scas
adc
sti
xchg
jae
xchg
mov
enter
pop
xchg
mov
pop
movsb
mov
cs
sub
nop
aad
enter
pusha
mov
add
in
aam
sub
jl
xor
ljmp
jmp
lock
into
pop
cmpsb
xor
mov
mov
repz
lret
and
cmp
dec
jb
cmp
inc
pushf
out
sbb
mov
sbb
je
and
or
xchg
dec
cmp
frstor
adc
xor
pop
cmp
pop
dec
loope
test
sahf
inc
ljmp
inc
xchg
push
leave
or
add
mov
jo
sbb
mov
stc
sub
iret
in
std
repnz
call
fs
cld
or
mov
mov
sub
pop
add
cli
sbbl
scas
scas
or
stos
fs
push
pop
test
call
mov
out
ja
and
lods
mov
lds
movsb
sbb
js
sub
jnp
xchg
push
add
js
popa
xchg
and
push
fs
xchg
dec
jmp
orb
mov
add
enter
jnp
jle
mov
add
cli
loopne
add
stc
lret
jmp
push
jo
and
scas
js
lds
addr16
js
pop
rcrb
arpl
mov
lds
js
pop
das
dec
scas
mulb
push
and
and
popa
jae
stos
adc
xor
sub
adc
icebp
sbb
mov
mov
dec
imul
pop
mov
mov
popf
loop
mov
test
xchg
push
mov
jno
mov
cmp
shrb
push
inc
mov
and
insb
std
scas
fcomi
bound
xor
xchg
daa
sti
jecxz
and
push
push
mov
mov
pop
loopne
mov
sti
loop
lret
loop
xor
aad
jge
push
cmp
pop
xchg
push
fdivr
pop
mov
loopne
mov
filds
bound
pop
add
shr
cs
fiadds
leave
jne
cmp
cmp
cmpl
and
insl
mov
jnp
cmp
sbb
imul
call
mov
adc
cmc
jp
movnti
cmp
push
and
daa
cmp
xor
insb
ds
out
and
sbb
and
cmpsb
aam
xor
iret
cmp
jle
mov
fidivrs
sahf
lods
fcmovnu
cwtl
cmpsb
push
inc
adc
add
xchg
call
adc
xor
mov
pop
cld
je
mov
cmp
fxch
push
into
lock
scas
insl
xor
clc
add
jnp
push
mov
rorl
or
and
xchg
fcompl
xchg
jno
xchg
stos
sahf
aam
mov
xchg
mov
in
mov
dec
pop
pushf
mov
jo
sbb
cmp
cmp
js
sub
dec
or
dec
repnz
jno
xchg
sub
inc
fistpl
xor
mov
insb
cli
sbb
xchg
inc
sbb
jnp
sub
push
test
dec
xor
add
lahf
stos
add
jmp
aam
push
dec
lods
and
popa
lods
jp
leave
test
xchg
lock
push
dec
scas
jnp
mov
lods
push
dec
xchg
cmp
fwait
aam
xchg
adc
andl
mov
xchg
and
dec
jae
loopne
loop
add
stc
pop
rol
cmp
enter
add
jmp
jmp
ja
or
scas
or
cmp
mov
ret
xor
les
sahf
adcl
cmp
jne
les
hlt
fstl
cmc
adc
and
jge
jl
pushf
icebp
adc
add
add
mov
dec
lods
mov
orb
inc
sbb
adc
arpl
stos
mov
jns
test
cmpsl
mov
shll
or
xor
mov
das
test
arpl
xlat
test
pushf
xlat
mov
lahf
loope
pop
dec
iret
xor
shr
loop
imul
pop
mov
dec
dec
daa
pop
mov
jp
mov
mov
loope
dec
mov
dec
or
dec
nop
subb
or
clc
xchg
mov
repnz
fsubr
dec
dec
add
mov
jmp
push
inc
sub
jp
dec
mov
adc
push
es
mov
aaa
dec
dec
ss
pushf
xor
push
nop
scas
pop
les
jmp
sti
loop,pt
test
push
hlt
or
mov
scas
sbb
xchg
xor
fwait
inc
adc
clc
sbb
mov
dec
and
loop
xchg
fstl
adc
sbbb
xor
fstpt
dec
mov
add
mov
lods
or
adc
sub
sbb
test
movsl
ja
jg
push
gs
jno
idivb
lods
xor
je
sbb
mov
iret
sbb
pop
sahf
aam
ficomps
sbb
mov
and
fmulp
inc
insb
loop
add
pop
xchg
leave
inc
xchg
mov
add
das
mov
xchg
cmpsb
stos
mov
xchg
and
push
repz
aad
jl
clc
xchg
adc
ss
cmp
pushl
leave
xchg
push
mov
xchg
lods
adc
into
pop
popf
test
or
jne
jo
cmp
cmpsl
adc
xchg
inc
leave
stc
addr16
aas
mov
out
push
arpl
in
movsb
loope
imul
cmp
repnz
dec
pop
call
push
mov
sub
subl
jp
aaa
xor
push
int
gs
mov
ljmp
sahf
mov
fs
insb
jmp
and
insl
xor
jo
in
aas
mov
repnz
push
pusha
adc
or
test
xchg
mov
popa
enter
int3
out
jp
out
mov
repnz
mov
push
lods
lds
addr16
xchg
and
mov
inc
cmp
cmp
aad
scas
lahf
push
inc
jmp
mov
sbb
in
add
xlat
enter
or
shr
dec
jmp
out
loopne
and
xor
xchg
xor
jmp
popf
mov
cmpsb
lods
sarb
inc
movsb
idivl
imul
stos
addl
sub
or
xor
jnp
int3
cltd
rcrb
adc
jne
fsubl
and
jae
aad
add
testb
lea
int3
add
mov
les
test
xor
outsl
movsl
inc
mov
xor
movsb
push
sbb
test
xchg
jmp
scas
pusha
push
dec
popa
add
stc
les
inc
out
or
and
pop
cld
dec
push
rcrb
pop
adc
dec
lock
daa
rcrb
dec
aaa
jg
mov
xlat
push
stc
jle
xor
pop
mov
mov
clc
xchg
sti
jae
mov
mov
add
and
xchg
cmp
adc
sbb
fbstp
es
std
dec
int
xor
out
addr16
xor
int3
pop
push
orl
sbb
dec
sub
or
scas
mov
xchg
sbb
call
pop
repnz
mov
lods
lods
fistpl
push
adc
repnz
pop
inc
mov
add
mov
and
push
popf
les
cld
fldt
xor
push
femms
jl
cmpsb
or
xlat
enter
jmp
or
mov
loopne
jle
pop
sub
sbb
test
fdivs
xor
jecxz
in
sub
mov
jmp
leave
fbld
sbb
jb
outsl
shl
and
mov
imul
js
daa
xor
dec
mov
pop
clc
rcrb
mov
fnstenv
sahf
sbb
inc
jmp
ds
rolb
pop
ss
leave
and
scas
mov
push
jne
int
movsb
test
pop
cs
std
pop
and
adc
xchg
adc
inc
cltd
pop
and
xchg
lods
xor
pop
sub
int
mov
adc
xchg
mov
add
lods
out
fsubp
inc
cwtl
popf
xchg
pop
push
ds
in
roll
ret
repnz
sarl
pop
mov
iret
or
outsb
repz
xor
sub
xor
jbe
pop
fnstenv
je
and
enter
es
std
fsubs
in
mov
das
inc
jb
out
in
aam
lret
adc
mov
or
das
dec
fcom
inc
icebp
pop
fsub
cmp
popf
js
mov
aam
cmpsl
mov
xor
dec
dec
pushl
push
imul
cld
xchg
jl
and
addr16
rolb
rolb
test
sub
sbbb
xor
mov
mov
dec
cmp
lret
js
inc
idivb
hlt
cmp
shl
mov
ljmp
ret
arpl
mov
imul
repnz
jb
dec
xchg
and
push
daa
push
mov
clc
lods
mov
push
inc
movsl
xor
xchg
and
xor
pop
mov
inc
sbb
add
sbb
test
repnz
int
loope
pop
xor
xlat
jno
adc
stos
or
or
xor
push
mov
aad
xchg
and
dec
pop
into
dec
jbe
and
push
jmp
cmp
mov
test
push
cmp
push
or
sub
push
or
cwtl
inc
mov
or
inc
pop
mov
rolb
idivl
pop
xchg
es
cmp
stos
push
test
jae
inc
xor
aaa
pushf
inc
dec
push
lea
mov
sbb
out
xchg
lods
inc
xchg
cmp
cmp
in
add
adc
fdivrp
nop
dec
push
test
push
or
int3
jnp
jecxz
xchg
add
test
pop
mov
int3
aaa
xchg
push
sbb
cwtl
inc
testl
mov
scas
inc
lcall
int3
imul
in
hlt
and
dec
hlt
xchg
dec
daa
mov
ds
mov
jns
push
jl
pop
stos
jns
pop
in
lods
inc
mov
or
mov
inc
xlat
sarb
xchg
ret
jbe
stos
fists
xor
inc
out
push
lods
dec
test
out
xlat
je
subl
dec
out
mov
xor
leave
mov
sub
mov
adc
inc
cli
lcall
ss
dec
inc
aaa
jo
aas
dec
dec
imul
or
movb
cld
scas
xchg
aas
cmp
cwtl
mov
sbb
clc
dec
fwait
jb
and
jae
int
dec
pop
pop
add
orb
sub
mov
or
outsl
icebp
mov
scas
jg
dec
out
mov
mov
stos
sub
and
sbb
sti
fs
mov
cmp
xchg
or
sub
jmp
ja
pop
pop
fldl
stos
inc
add
and
popa
pop
lock
loope
lds
mov
sub
hlt
aas
jae
xchg
std
cltd
shl
mov
ljmp
xlat
sbb
mov
xchg
xor
sti
rorb
pushf
shrl
jecxz
pause
xor
lret
push
sub
cli
cmc
pop
sbb
xor
cmpb
shll
jne
mulb
lret
xor
jno
and
jnp
push
dec
adcl
mov
stos
aad
and
jg
rorl
repz
jge
and
inc
mov
decb
pop
mov
sbb
js
cmp
adc
pop
dec
mov
sub
and
pop
hlt
pusha
mov
cltd
push
xor
rcrb
pop
xor
mov
sarl
push
aaa
mov
out
scas
test
jno
mov
das
and
push
into
lock
xchg
inc
shl
sbb
inc
pop
mov
stos
inc
mov
icebp
mov
xlat
push
ret
mov
movsl
int3
pop
fs
or
adc
ret
or
or
and
pop
rcrb
repz
xor
mov
jne
cli
sub
mov
push
sub
pushf
xchg
dec
repnz
mov
xchg
sub
in
xor
test
mov
lock
fst
daa
jno
jbe
aad
mov
aas
push
dec
fs
and
out
jecxz
ret
lds
mov
lea
pop
call
dec
pop
shlb
and
jno
loopne
and
mov
dec
sub
insl
xor
ficompl
fisttps
mov
fbstp
das
jne
xor
mov
leave
xchg
adc
rcll
int
jl
std
inc
cltd
jno
pop
cltd
pop
push
popa
sub
movsl
and
imul
out
stos
fidivs
or
jg
dec
filds
or
bound
mov
jae
cmpsl
cld
jne
xor
or
pop
fldenv
insb
mov
jl
aas
pop
inc
xor
and
sbb
repnz
add
mov
mov
and
jno
sub
cltd
scas
or
ja
pop
in
jno
dec
mov
cltd
xchg
mov
mov
das
jmp
decl
outsb
and
push
mov
cmp
jnp
adc
jno
aaa
and
push
mov
arpl
out
addr16
aad
add
jne
jbe
cli
push
sub
fstps
cmp
sahf
xchg
xor
sub
xor
out
imul
sub
out
fsubl
shl
inc
jmp
cmp
mov
xor
ja
or
je
pushf
mov
push
add
and
popf
mov
xchg
lret
mov
aaa
call
testb
adc
xchg
mov
leave
aas
fnstsw
arpl
adc
add
fisubrl
sub
inc
xor
mov
jae
aam
or
mov
leave
mov
addb
add
insl
xchg
scas
adc
jge
xchg
xchg
aas
lods
adc
lea
imul
sub
insb
out
push
cmp
and
push
mov
lock
pop
xor
inc
rorl
mov
cwtl
or
inc
jecxz
das
jecxz
cs
ljmp
imul
xor
call
cmp
adc
fldlg2
mov
jb
mov
push
pop
inc
cmc
xchg
ret
stos
stos
xchg
dec
add
pop
push
gs
je
iret
js
or
jl
imul
dec
cld
lods
adc
movsb
add
fsts
imul
jle
jl
mov
mov
jecxz
add
mov
dec
jecxz
loopne
nop
mov
or
xor
mov
lods
andb
test
sbb
arpl
lret
mov
jne
jmp
pop
mov
leave
push
hlt
lret
mov
lock
xor
xor
jmp
fildll
jmp
dec
mov
adc
cltd
mov
cmp
lea
stc
ja
inc
cli
xor
jge
adc
lcall
add
cltd
cwtl
mov
fisttpll
sbb
dec
push
push
cmpsb
das
mov
imul
imull
push
repnz
loop
incl
adc
mov
mov
jnp
es
inc
push
pop
jp
jp
push
pop
cmpsl
lods
mov
sub
inc
adc
mov
movsl
cmc
pop
mov
jp
pushf
cmc
pop
xchg
stc
inc
mov
mov
xchg
pop
test
das
mov
add
adc
insl
xchg
push
movsb
neg
fwait
mov
test
stos
fwait
bound
jb
mov
sub
stc
loop
sub
xchg
cmp
sbb
int3
ss
pushf
insb
inc
fcomp
ficoms
xor
nop
pop
inc
sbb
mov
cmpl
mov
pop
pop
cmp
cmp
inc
cmp
inc
xchg
adc
pop
xchg
mov
lret
sbb
adc
or
arpl
cmp
iret
or
cmp
ret
or
pop
je
push
cmc
adc
testb
fwait
xchg
addr16
scas
and
cmp
dec
inc
mov
jg
pop
push
jmp
lret
mov
lret
jae
cltd
adc
js
addb
js
rcl
mov
lret
or
mov
ret
arpl
mov
push
sarb
repnz
fidivl
repnz
add
mov
mov
popf
pop
es
dec
ds
ja
and
lahf
call
mov
dec
pop
sub
pop
movsl
rcll
mov
push
push
add
jle
ljmp
les
pop
add
or
adc
inc
aaa
xchg
sub
mov
xchg
fdivs
inc
pop
shll
sub
jbe
loopne
out
or
cwtl
gs
mov
jno
mov
sahf
enter
push
arpl
sahf
rcl
mov
test
and
lret
xchg
adc
cltd
xlat
hlt
cld
or
adc
xchg
mov
pop
mov
xor
sbb
sub
lea
pop
add
movsb
push
dec
jno
ss
cltd
jp
popf
pop
pushf
xchg
jle
xor
ds
es
mov
inc
cli
mov
shl
cmp
loopne
jmp
mov
jb
push
xchg
sbb
xchg
xlat
inc
xor
pop
ficoms
into
adc
push
xchg
orb
mov
inc
sub
xchg
mov
cmp
loope
sbb
jge
popf
mov
jle
sub
mov
incb
aam
in
and
std
insb
pop
fucomi
stc
mov
clc
and
das
mov
dec
leave
inc
mov
mov
mov
xchg
cmpsb
outsb
jl
outsl
sub
push
push
or
and
mov
ds
cmp
push
xchg
add
xor
xchg
or
sbb
mov
repnz
test
out
add
cmp
sbb
loop
mov
pop
les
fisubrs
ret
outsl
adc
sub
jnp
icebp
lock
in
test
mov
adc
enter
mov
push
movsl
mov
not
fstpt
test
bound
imul
xchg
sbb
mov
push
push
scas
xor
out
mov
jbe
add
mov
aaa
lods
call
add
mov
dec
shl
daa
or
out
imul
scas
dec
ret
out
stos
sti
sbb
mov
mov
sbb
push
or
pop
shll
add
addl
jmp
adc
jmp
xor
cmc
mov
test
sub
sub
lock
xchg
mov
jge
xchg
and
inc
adc
push
cli
icebp
fidivs
sbb
mov
out
shrb
hlt
cmp
sub
sbb
dec
push
push
test
xorb
jecxz
cmp
pop
add
sarb
call
xchg
ret
idivl
jge
add
ja
scas
repnz
es
in
or
push
adc
jns
stc
test
ja
fisubs
inc
call
mov
adc
out
cmp
xor
mov
repz
push
icebp
scas
stos
dec
aaa
dec
pusha
shr
mov
out
dec
lods
sbb
jle
cmp
cmp
dec
ja
outsb
mov
mov
icebp
fildl
mov
pop
cwtl
insb
out
add
inc
mov
push
sub
sbbl
rclb
mov
sub
es
stos
adc
neg
mov
push
inc
jp
jno
push
fistps
cmp
push
loope
jno
sahf
pushf
jo
shl
sar
inc
sbb
mov
je
gs
xchg
and
inc
dec
pusha
sub
popl
inc
fisubrs
dec
mov
out
cli
xor
in
push
cltd
pop
jae
or
jae
xchg
loope
clc
sbb
sbb
inc
push
aad
mov
push
lea
mov
push
arpl
pop
inc
push
lret
and
imulb
xchg
pop
sub
xor
mov
imul
sub
sub
fisubrs
adc
push
cmp
movsb
es
into
imul
aad
and
cmc
lret
mov
mov
sub
adc
icebp
pushw
in
xor
inc
xor
stc
sti
insb
cmpsl
call
add
jge
jne
jnp
dec
popa
fimuls
stos
lods
push
jmp
popa
enter
lea
push
cmc
push
mov
push
aad
pop
push
addr16
jecxz
mov
mov
ss
inc
add
and
xchg
mov
sub
mov
test
pop
mov
sahf
repnz
bound
and
inc
mov
add
jp
cltd
mov
out
imull
loope
xor
sub
mov
aad
push
and
int3
adc
pop
pop
push
loope,pn
mov
inc
imul
xor
leave
lret
jecxz
rep
decb
ja
in
jbe
lret
jb
pop
test
into
mov
push
mov
sbb
xor
pop
and
movsl
inc
xchg
inc
movsl
jno
data16
int3
clc
test
ficoms
test
sbb
adc
push
mov
in
or
fwait
mov
and
iret
add
cltd
fnsave
test
fs
aaa
out
sub
push
push
pop
imul
js
xchg
nop
fcmovu
inc
jg
mov
push
shr
mov
subb
test
cs
jmp
jle
notl
out
dec
dec
push
dec
les
arpl
push
js
adc
loopne
sub
jne
inc
or
loope
add
je
cmpsl
xor
push
ljmp
mov
js
cmpsl
js
subl
sub
and
push
ljmp
out
leave
jo
cmc
fwait
dec
addl
xchg
aam
inc
adc
nop
mov
int3
pop
sub
jbe
out
xchg
jmp
inc
sub
call
into
ret
mov
inc
adc
xchg
faddp
mov
inc
fidivrs
aad
dec
xchg
dec
insl
push
das
xchg
sbb
or
fidivs
add
ljmp
icebp
jg
inc
pop
adcb
xor
push
jo
adcl
aas
sahf
or
cmpsb
add
sbb
sbb
mov
and
and
das
xchg
cmpsl
stos
clc
das
jg
pushf
xor
imul
xchg
xor
rcr
inc
mov
daa
les
jmp
inc
stc
in
in
dec
jge
enter
fcmovbe
cs
insl
or
push
inc
test
sahf
push
jns
into
imul
xchg
imul
mov
push
sub
xor
jnp
ja
lock
jne
lods
xchg
ljmp
bound
test
pop
arpl
mov
mov
adc
mov
lret
inc
clc
ret
dec
int3
jb
int
push
cmpsl
jb
sub
jecxz
fs
fisubrs
pop
rcrl
std
stos
cmp
cmp
dec
cli
sub
int3
jns
cmp
sbb
shlb
push
in
add
test
xchg
cmp
cltd
dec
pop
jl
and
call
mov
loop
jg
fldenv
mov
pop
mov
jg
pop
push
or
sbb
jge
rolb
add
xchg
jecxz
xchg
loope
pop
push
mov
outsb
pop
mov
in
mov
aam
pop
scas
inc
in
pop
faddl
lahf
scas
test
fimull
sbb
outsl
mov
mov
call
lock
adc
ds
in
loope
hlt
mov
pop
imul
and
ret
cmp
inc
fdivs
loope
cmp
sub
in
icebp
movsl
jo
jmpw
daa
cld
shrl
cmp
sbbl
ljmp
das
sub
push
add
test
pop
xchg
xchg
int
in
lret
sarl
js
mov
jne
push
fxam
hlt
ds
sub
clc
fdivs
hlt
adc
mov
je
cmp
push
add
loop
sbb
int
ficomps
or
loopne
or
addr16
lahf
mov
jno
or
fs
dec
inc
add
cmpsl
xchg
xchg
jl
jbe
into
cmp
jbe
mov
scas
mov
aam
or
sbb
cld
xlat
adc
inc
mov
lcall
sahf
push
shlb
cwtl
test
pop
scas
mov
dec
arpl
xor
sbb
pop
insl
incl
jo
push
push
mov
dec
popf
or
xchg
ret
ret
pusha
inc
in
mov
and
cld
or
add
lcall
inc
mov
ds
xchg
clc
mov
add
push
sarb
jmp
push
sub
pop
aas
mov
mov
hlt
ret
push
shr
dec
fs
sub
inc
lock
sbb
sbb
pop
out
sbb
sbb
in
adc
pop
imul
cmpsl
icebp
mov
xchg
popf
icebp
jo
or
mov
inc
sub
and
adc
push
les
jecxz
cmpsl
pop
js
loopne
movsl
push
add
sbb
add
repnz
lods
mov
aas
or
inc
pop
enter
and
push
push
fidivs
sub
jle
adc
in
test
movb
div
sbb
sub
xor
or
fldenv
insl
xor
cmp
jle
rcr
mov
mov
sub
imul
arpl
add
popa
dec
ficoms
enter
push
popa
mov
push
dec
push
cltd
mov
add
jg
test
repnz
lds
iret
lea
int
popf
xlat
in
adc
sbb
in
popa
xchg
dec
mov
int
jnp
or
jbe
cli
scas
pushf
cmpsl
clc
int
rol
fbstp
xor
int
push
jno
lods
in
outsl
pusha
out
and
pop
rcll
push
popf
test
cwtl
sbb
pop
pop
xor
sbb
push
imul
loopne
push
xchg
jmp
adc
enter
jl
mov
enter
xchg
movsl
fistl
adc
inc
sub
add
xchg
repz
mov
mov
aas
mov
or
cli
mov
dec
popa
add
mulb
add
jnp
xor
jle
xchg
fimull
lea
sbb
outsl
inc
push
lahf
cmp
or
adc
sub
pop
leave
xchg
into
rclb
pop
repnz
imulb
xchg
data16
lcall
sub
lahf
jo
aad
jb
dec
push
jg
add
loope
cs
call
jge
faddp
insb
bound
jp
pop
xlat
adc
in
push
or
std
jb
cmp
pop
cmpsb
mov
mov
or
addr16
shll
dec
mov
sbb
pop
sub
add
mov
xor
lods
xchg
dec
mov
mov
daa
andl
mov
mov
outsl
test
dec
add
dec
ljmp
add
sub
pop
repnz
mov
adc
fldenv
mov
lret
pop
test
es
movsl
scas
jns
pop
pop
rorl
dec
in
bnd
and
push
int3
fidivl
aam
je
test
push
in
aaa
jb
push
cli
inc
pop
subb
lret
aas
xor
pop
mov
clc
in
addb
in
pop
push
adc
aad
outsl
roll
mov
pop
bound
int
cmp
test
add
pop
inc
jecxz
in
in
push
push
push
adc
cld
mov
xor
daa
popa
mov
mov
mov
cs
inc
shll
jle
outsb
leave
and
cmpsl
xor
pop
ss
testb
std
inc
and
loope
push
aad
and
ret
adc
sub
fldenv
xchg
les
movsb
jp
or
out
rorb
stos
aas
shrl
out
iret
sub
push
pusha
popf
inc
int
movsl
ret
and
insl
pop
push
popf
mov
outsl
rcr
xchg
repnz
pop
mov
mov
fsubrs
cmp
bound
test
iret
xchg
aas
sbbb
insb
mov
mov
mov
push
in
rcr
dec
fisubrl
jle
fiaddl
inc
adc
xchg
repnz
mov
inc
outsl
mov
adc
xchg
xor
adc
dec
cmp
jae
sarb
int
leave
and
ret
ret
lds
push
push
mov
movhps
es
test
add
dec
jmp
loopne
das
fnstcw
movsl
or
ror
aad
push
addr16
leave
adc
in
add
cmp
adc
pop
add
mulb
outsl
xchg
jp
mov
jle
push
fwait
jno
push
pop
cmc
or
lfs
adc
cwtl
inc
push
test
push
or
outsb
cwtl
mov
xchg
lret
js
xlat
mov
jb
inc
adc
adc
pop
jnp
pop
xorl
lahf
add
or
cmp
ljmp
rorb
jl
ljmp
sbb
adc
enter
jge
lret
mov
pushf
sub
cmpb
jo
cmp
or
dec
ds
adc
mov
cmp
fisubs
sbbl
sbb
adc
and
add
and
sbb
mov
sub
pop
fadds
sub
jne
cmpsb
pushf
add
and
adc
dec
lock
mov
mov
fistps
or
push
push
loopne
and
sbb
stos
mov
add
mov
out
sbb
fadds
sbb
pop
add
out
push
pop
and
dec
movsb
loop
mov
and
daa
in
in
adc
lret
lods
or
dec
dec
inc
xchg
mov
popf
sbb
pop
sub
pmovmskb
lock
mov
jg
mov
scas
jg
hlt
mov
push
in
jbe
je
mov
stc
jl
push
sti
cmpsb
daa
push
jmp
mov
cmp
int3
inc
jp
fcoms
or
sbb
imul
inc
jb
inc
jle
les
cmp
enter
je
or
pop
aaa
outsb
subb
les
pop
mov
or
addl
jbe
insb
in
ret
fwait
push
test
cmp
stos
imul
push
dec
ret
or
jecxz
iret
in
sub
mov
mov
popf
js
dec
jb
ficoml
and
arpl
pop
sub
out
jnp
stos
fdivrp
sbb
ss
or
out
pushf
stc
rclb
cld
aam
fs
shl
imul
loopne
jp
mov
mov
cmp
into
adc
and
insl
mov
lods
icebp
xlat
mov
test
outsl
jne
gs
enter
outsb
xchg
je
int
mov
xchg
adc
jmp
in
fxch
mov
movsb
sub
imul
fcmove
ret
pop
jnp
dec
push
fimuls
push
stc
mov
cli
decb
or
leave
fiadds
mov
xor
gs
push
das
stos
fbstp
movsb
fildl
mov
dec
inc
jne
pop
pop
inc
enter
jno
add
rol
idivl
fld
inc
fisubrs
push
jns
das
mov
nop
out
fs
jo
ds
xor
xchg
pop
adc
push
xchg
int3
inc
loopne
sbb
popa
idivb
aaa
jg
push
std
mov
sub
andb
data16
cld
shll
push
addr16
test
ds
sbb
imul
testb
out
rcr
in
mov
adc
fldcw
outsb
add
jbe
push
dec
mov
push
jp
sbb
sub
add
mov
imul
repnz
in
movsl
mov
jge
imul
adcl
js
mov
or
cmp
leave
ss
xor
mov
out
jmp
pop
sub
fstp
adc
fidivrl
dec
arpl
push
mov
mov
push
jns
into
pushl
out
stos
inc
sbb
push
sbb
cmpsb
pop
fiaddl
and
cmpsb
lret
dec
sti
inc
dec
or
mov
sub
inc
mov
jae
imul
lds
xchg
jae
setb
stos
mov
mov
dec
lds
hlt
cmp
push
rcrl
daa
movb
aas
sahf
or
xchg
inc
sbb
and
jbe
cmp
dec
xor
rorb
lcall
lret
stos
outsb
loope
ljmp
mov
movb
jns
mov
mov
lods
aad
repz
inc
shll
xor
push
icebp
push
push
xchg
mov
test
mov
cmc
jbe
pop
pop
cmp
lock
daa
cmp
ds
fstp
ss
pop
xchg
push
cmp
mov
mov
jns
xor
rolb
repnz
push
ret
mov
xchg
cmpb
scas
cmc
xchg
xchg
pusha
rclb
dec
cmc
into
outsb
shll
or
insl
cvtdq2ps
push
xchg
cwtl
pop
mov
fisubs
mov
adc
imul
jg
sbb
xor
mov
jbe
inc
jecxz
sti
sbb
or
sarl
imul
mov
or
mov
add
xor
sub
xchg
loopne
hlt
xchg
test
outsl
mov
fwait
loop
aam
addb
add
push
or
jmp
lcall
repz
jno
xlat
iret
pop
cld
mov
sbb
cltd
xor
and
pop
rsqrtps
sub
repnz
bswap
sbb
push
mov
in
xchg
call
std
sbb
test
js
fcomip
cli
nop
sub
dec
test
notb
sub
lret
sub
into
mov
sarl
popa
sub
xchg
pop
in
stos
repz
fidivl
in
cmp
xor
xchg
sub
ja
jb
adc
xchg
ds
lods
faddl
loope,pt
into
or
addl
pop
xchg
mov
cld
lcall
in
repz
push
jmp
outsb
mov
insl
mov
xlat
dec
arpl
push
cld
gs
ror
cmc
push
sbb
push
sahf
cmp
sub
cmpsb
icebp
fcmovnb
cmp
inc
call
jno
lea
mov
xchg
outsb
aam
dec
lahf
lcall
adc
xchg
stos
pusha
subl
and
xor
jbe
shll
outsb
mov
pop
sbb
repnz
int3
mov
iret
arpl
xorl
mov
loopne
mov
pop
push
arpl
push
es
mov
movsl
outsl
cwtl
lods
jno
add
push
jnp
shll
movsb
sbb
pop
sub
dec
dec
mov
lds
sahf
add
push
mov
push
cmp
adc
outsb
scas
das
arpl
mov
xor
push
test
rclb
adcb
movb
jp
cmp
out
outsb
stc
sub
lret
stos
out
xchg
xchg
lock
mov
cmp
jl
popa
lret
movsb
or
insb
dec
popa
adc
or
outsb
insb
sub
sub
cmp
stc
inc
mov
mov
inc
cmpsb
mov
into
push
xchg
shll
movlhps
test
outsb
shl
mov
push
pushw
data16
call
xchg
icebp
pop
dec
aad
or
cli
cmp
int3
mov
movsb
imul
adc
rorb
adc
adc
lods
push
cmp
int
loope
xor
std
in
xor
push
mov
xor
popa
or
aaa
adc
in
add
push
shrl
or
dec
es
pop
and
js
adcl
mov
in
ficoml
push
pop
lret
jbe
cli
inc
mov
push
or
cmp
outsb
fbstp
insb
std
adc
scas
cmp
daa
dec
fimull
dec
inc
or
pop
movsl
hlt
push
push
adc
and
jmp
pop
cmpsl
dec
mov
fiaddl
daa
lahf
push
call
mov
mov
ror
mov
ret
xchg
pop
cmpsl
or
xchg
mov
movsb
xchg
pop
mov
flds
into
shrl
jbe
mov
or
cmpsb
inc
pop
in
mov
push
jne
scas
jno
les
das
loope
xor
aad
mov
fcom
mov
icebp
decb
push
mov
stos
cwtl
cld
emms
mov
gs
push
cli
jns
inc
paddw
push
cld
mov
inc
stos
movb
mov
mov
cmp
int
mov
cltd
fnstsw
lahf
frstor
jg
stc
mov
xor
add
ja
enter
xor
cmp
pop
mov
enter
loope
les
fadd
loopne
popl
jnp
sub
int3
dec
fistpl
cli
xor
or
xchg
and
push
adc
inc
jbe
dec
adc
pushf
mov
test
movsb
pop
aad
jmp
aam
jne
jbe
mov
sti
out
cmp
and
loopne
pop
dec
dec
add
scas
sub
insl
or
cmp
sbb
push
lock
stc
cmp
clc
call
sub
mov
push
mov
cmp
push
insl
mov
out
push
mov
movsl
and
nop
loop
mov
sub
push
pushl
fidivs
mov
push
cmp
mov
das
pusha
call
pusha
xchg
enter
sub
pop
jmp
push
dec
dec
inc
and
mov
into
fidivs
lock
xchg
aam
ror
xchg
mov
mov
and
jne
sti
xchg
sbb
cmp
cltd
bound
scas
xchg
mov
mov
das
mov
ds
fs
jae
push
call
loopne
mov
loope
or
stc
cs
pop
das
xchg
xor
hlt
leave
cli
mov
xorl
mov
push
bound
mov
adcb
xor
ja
pop
gs
decb
divb
scas
int
push
mov
dec
mov
jo
insl
sub
shrl
aam
lret
das
stos
inc
pop
std
xchg
lea
or
idiv
push
push
pop
insl
adc
adc
push
ror
hlt
int3
sti
aas
lret
pop
sbb
mov
sub
pop
lds
push
jmp
adc
les
and
lods
test
es
cmp
mov
dec
test
scas
mov
data16
movsl
pop
push
aad
jns
jecxz
call
sbb
jns
cltd
imul
adc
cltd
test
push
jne
lret
and
adc
cmc
mov
inc
in
ret
add
faddl
pop
ret
dec
sti
lds
cmpsb
and
int3
fdivrl
sahf
sub
push
push
adc
adc
lock
push
xchg
push
lret
ja
sub
push
mov
lods
xorb
cmpsb
addr16
and
cmpsl
imul
aas
jl
mov
mov
jno
mov
fidivl
pop
movsb
sbb
mov
inc
loopne
imul
mov
pop
dec
dec
mov
in
xchg
xchg
sub
movb
pop
sbb
jne
lret
les
cmpsl
shr
nop
fldl
pop
mov
jl
shlb
fstl
pop
dec
cmp
cvtpi2ps
lcall
stc
sub
lods
push
inc
jno
nop
pop
lcall
in
push
xchg
nop
dec
dec
sbb
xor
mov
lock
mov
pop
xor
movsl
inc
mov
clc
mov
jbe
cmp
xchg
mov
popf
xchg
rorb
invd
lods
filds
cmp
push
rclb
pop
xchg
inc
mov
cmc
stos
jmp
ret
add
dec
mov
lcall
push
adc
std
or
pop
rcll
cmc
fisttpll
shlb
push
xchg
dec
jno
dec
inc
jns
xchg
mov
in
lea
dec
jae
mov
insb
insb
sub
push
pop
xchg
bndldx
jne
mov
test
xchg
outsl
aad
fisubl
xchg
xlat
cmp
sbb
andl
pop
sti
mov
and
nop
sub
jb
sbb
dec
cmc
les
fwait
xchg
frstor
movsb
sub
stc
int
shl
in
std
test
mov
imul
out
pop
jmp
fisttpll
jmp
dec
mov
test
xchg
decb
xchg
cmp
jp
mov
mov
insl
out
mov
push
mov
jge
fdivrl
jp
frstor
daa
pop
pop
test
adc
mov
mov
lret
xlat
mov
out
mov
imul
xor
mov
pop
xor
or
and
jne
iret
jl
push
add
sarl
mov
inc
sub
lret
push
stos
scas
mov
pusha
addr16
out
push
add
xchg
jbe
xchg
cmp
or
dec
test
cltd
dec
push
pop
iret
dec
jp
aad
adc
adcb
rcrl
add
add
dec
imul
lcall
xor
repz
or
xchg
js
shll
popf
imul
lret
mov
das
add
jno
sbb
jns
pop
and
mov
pop
cmp
dec
jecxz
cmpsb
jl
sbb
lret
jne
je
xchg
loope
mov
pop
aam
fldl
mov
cmp
mov
rolb
inc
dec
mov
je
test
or
add
sti
fldenvs
fwait
add
es
lcall
cmp
mov
lret
movsl
lds
add
ds
data16
xchg
std
popl
pop
lods
add
sub
pushf
lds
mov
negb
or
data16
inc
and
sub
lods
rcrl
sub
sbb
fisubrl
arpl
rolb
test
aam
divl
data16
mov
jne
xor
jmp
iret
cwtl
adc
sbb
mov
push
test
popf
insb
test
daa
enter
loope
lods
sbb
adc
push
xor
xchg
mov
sub
xchg
dec
test
loop
and
rclb
loope
jle
mov
ss
mov
xlat
stc
mov
dec
nop
test
push
rcl
aam
cmp
bound
cltd
xor
fisttpl
jp
out
test
stc
ret
and
add
add
xchg
sub
and
xchg
xchg
xor
inc
outsb
stos
pop
pop
jle
lds
xor
daa
leave
mov
aam
mov
shrb
mov
clc
or
or
pop
dec
scas
mov
pop
and
stos
xchg
dec
popf
sub
pop
popa
xchg
xor
cmp
movsb
mov
pop
in
push
fisttps
dec
inc
jne
mov
dec
lods
mov
shlb
push
in
add
cmc
test
ret
cltd
lcall
add
outsl
fwait
mov
jb
outsb
or
adc
int
insb
jne
mov
in
in
enter
imul
shrl
ds
mov
jmp
paddsb
movsb
pop
xchg
adc
push
mulb
xor
or
jmp
push
mov
pcmpeqd
repz
jg
cmp
dec
cmp
daa
jp
int
lds
or
sbb
outsl
pushf
mov
mov
push
cmp
adc
jns
xchg
dec
mov
mov
pop
sub
pop
push
pop
in
out
les
mov
jmp
frstor
and
testl
lods
pop
xchg
cmp
sub
cs
xor
or
es
ror
pop
pop
addr16
test
xlat
sub
fcmovu
cli
cmpsb
shlb
jge
pop
imul
lahf
roll
dec
popl
adc
test
pop
lcall
sbb
das
aaa
lock
xchg
rcrb
mov
mov
add
int
pop
adc
push
popa
enter
mov
clc
ja
sbb
xchg
pop
cmp
dec
jecxz
mov
inc
in
loope
mov
sbb
mov
pushf
fs
sbb
push
iret
outsl
cmp
lods
imul
stos
or
rcrb
and
and
adc
xor
cmp
cld
jno
arpl
xchg
and
and
mov
adc
in
outsb
pop
pop
mov
ss
int
fwait
sti
sub
and
or
mov
inc
xchg
xchg
out
xchg
insb
inc
movl
je
jecxz
dec
bound
ss
lea
and
sbb
mov
xchg
sbbl
jbe
push
add
push
xchg
aad
adc
push
in
cmp
push
jbe
add
std
sbb
and
xlat
ljmp
push
or
sub
stos
xchg
jmp
xlat
cmp
pop
sarl
mov
push
pop
repz
xchg
pushf
and
adc
repnz
lcall
sbb
lds
push
xlat
cmp
ja
xor
ljmpw
out
add
mov
mov
and
xor
orb
sbb
adc
or
scas
sbb
mov
or
loop
sub
jnp
mull
ds
or
cs
cs
xor
jp
aas
test
adc
roll
icebp
pop
cld
je
mov
cmpsl
and
aam
xchg
jp
enter
dec
pusha
xchg
xorl
jne
pop
inc
inc
ljmp
pop
mov
fnstenv
push
insl
pop
or
jae
and
fmul
add
in
test
pop
sahf
loop
test
and
fmul
inc
movsl
int3
in
ja
push
shll
xor
xchg
push
stos
ds
movsb
xor
xchg
sub
mov
push
cmc
jge
dec
je
xchg
xchg
xor
pavgb
jg
push
inc
sbb
sbb
neg
mov
inc
jmp
aas
jg,pn
mov
cmp
and
enter
addb
out
shll
cmp
inc
xor
xor
mov
adc
leave
dec
popf
sbb
add
loopne
subb
cmc
and
or
icebp
jo
mov
or
dec
repz
lock
sub
out
shrl
and
adcb
rolb
push
jns
xchg
dec
cmp
jbe
scas
mov
test
iret
inc
aam
sub
movsl
fs
cmp
mov
int3
addl
stc
inc
xor
into
out
cmpsb
mov
stos
idivl
call
jp
adc
dec
add
inc
dec
fs
test
mov
fistl
adc
movsb
rclb
adc
orl
dec
ficoml
ficomps
mov
mov
leave
popf
or
pop
aad
jo
sbb
push
mov
scas
pop
hlt
inc
push
cmp
nop
cmp
aas
outsb
push
loopne
stos
xchg
sbb
cli
cltd
in
movsl
sub
shrb
dec
es
ret
jbe
pop
sbb
pop
iret
sbb
jecxz
in
pop
push
daa
popl
jecxz
jno
push
inc
sub
dec
jnp
adc
test
dec
jne
xor
or
pop
xchg
cmc
xchg
inc
mov
add
std
pop
mov
fwait
sbb
sub
sub
cmp
out
sbb
fs
and
pop
pop
das
push
sbb
leave
test
shrb
add
nop
loopne
arpl
dec
jo
ja
clc
fidivrl
lret
cltd
movsb
andl
pop
xor
hlt
and
xchg
inc
and
sbb
mov
es
sbbl
das
mov
push
or
pop
inc
xchg
test
push
enter
xlat
xor
ja
inc
into
add
call
out
popa
js
testl
fdivs
rolb
arpl
in
xor
hlt
mov
jae
sub
es
cmp
addl
pusha
adc
xor
aam
gs
xchg
outsb
test
std
cmp
push
pop
dec
cmp
xchg
jmp
out
rorb
ret
addr16
ficoms
mov
lea
mov
or
aas
iret
xchg
shll
cmp
xchg
xchg
rcrl
push
mov
xchg
pop
inc
and
cwtl
fwait
repnz
mov
or
lds
or
int
xchg
jne
cmp
lods
inc
je
inc
insl
push
and
inc
jbe
and
repnz
popfw
fstl
sub
mov
es
inc
repnz
push
fiadds
test
cltd
xor
xor
mov
xchg
xor
pop
add
das
dec
outsl
jp
push
movsl
inc
mov
fs
xchg
das
push
frndint
std
repz
stos
fsubs
cmp
insl
adc
dec
dec
in
sub
ret
dec
jp
sub
sti
or
insb
andb
cwtl
add
sbb
fsubr
roll
adc
ja
insl
jno
sbb
jbe
pop
cmp
ja
sbb
ret
fwait
mov
leave
aaa
adc
dec
and
xchg
or
int
mov
xchg
cwtl
pop
pop
mov
xchg
repnz
xor
sbb
adc
xor
dec
in
xchg
call
out
stos
orb
push
jnp
rcrl
repnz
enter
lahf
sbb
sbb
mov
lcall
xchg
push
iret
cmc
mov
lods
xor
xchg
test
icebp
cmp
pushf
iret
adc
inc
ja
in
out
stc
lock
cmp
imul
mov
int
insl
pop
inc
ja
pushl
fwait
xor
mov
pop
xchg
pusha
pop
or
inc
js
dec
mov
outsl
push
push
cwtl
jp
in
xchg
jg
rcrl
cmpsb
pop
sbb
or
inc
pop
jmp
aaa
imul
dec
filds
add
popa
jno
push
mov
sbb
inc
icebp
push
test
cmpsb
fmuls
sbb
add
filds
jl
or
loope
fnsetpm(287
test
lock
test
cmpsl
xor
subl
xchg
jae
mov
out
loope
inc
scas
mov
pop
in
xchg
or
mov
dec
sub
and
inc
add
sbb
sub
in
mov
xchg
mov
jno
mov
int3
inc
and
pusha
lock
and
cmpsb
adcb
cli
popf
cmp
inc
in
jmp
jl
xor
pop
mov
push
or
inc
sbb
pop
pop
or
rclb
rep
popa
sub
mov
out
add
into
in
call
ljmp
inc
mulb
and
push
in
cmp
cld
cltd
test
mov
cmp
xor
lahf
add
add
lods
cmpsb
inc
pop
es
jmp
push
add
insl
lret
movsb
or
adc
aaa
dec
rcrl
test
mov
lods
sbb
sbbl
xlat
or
lret
dec
push
dec
jecxz
sub
and
add
lret
mov
fsts
aaa
repz
xor
jecxz
jo
push
cmp
in
xchg
out
sbb
in
sub
cvttps2pi
pop
mov
pop
sub
sub
sub
adc
lods
shlb
int3
push
mov
je
mov
mov
sbb
mul
scas
push
int3
mov
adc
icebp
push
and
shll
cmc
sub
adc
inc
and
adcl
or
rclb
xchg
mov
adc
jae
dec
mov
stos
outsl
mov
cwtl
test
inc
dec
dec
lcall
movsb
lods
jecxz
ret
repz
fmuls
shlb
or
push
mov
jae
outsb
mov
comiss
inc
call
stc
sbb
add
ss
xchg
xchg
loopne
cli
mov
push
sti
mov
aas
mov
push
add
lock
lds
std
imul
in
sub
int3
jge
jbe
outsb
lcall
bound
add
xchg
pop
jb
stos
mov
pop
icebp
or
es
pop
int
ror
maxps
scas
mov
je
aad
xor
or
call
insl
sub
sbb
push
and
jnp
xlat
jne
xchg
cmp
xor
repnz
and
push
clc
sbb
mov
jne
add
push
sub
mov
pop
clc
arpl
lcall
test
movsb
leave
and
int3
popa
mov
mov
in
gs
imul
pop
cmp
inc
std
ja
xor
pop
loope
sub
push
mov
fldt
fbld
in
loope
imul
in
and
mov
pop
out
shll
inc
xorl
xchg
and
imull
in
fcomps
lds
add
loopne
or
gs
jge
push
cmp
jecxz
inc
add
insl
mov
leave
cmc
in
pop
mov
jne
push
dec
inc
test
adc
add
ss
or
jne
sbb
sub
out
out
sbb
dec
jbe
jmp
cmp
fcomip
lret
or
adc
jg
dec
mov
pop
inc
fildll
inc
repz
pop
leave
ds
cmp
stos
push
add
mov
in
inc
into
and
leave
and
jg
xchg
sub
das
cmp
xor
xlat
sti
popf
ljmp
jl
cmp
mov
lods
leave
ds
repnz
mov
aas
fwait
dec
inc
add
and
aaa
dec
xchg
dec
mov
and
mulb
xlat
xchg
sub
aad
sub
xchg
jecxz
data16
call
and
cwtl
mov
xlat
mov
movd
out
sbb
add
jnp
repz
inc
mov
mov
loop
pop
sahf
pop
jmp
cmc
sub
in
dec
and
movsb
mov
mov
gs
lods
mov
cmp
cmc
stos
jne
popa
leave
out
xor
and
adc
ffree
enter
movsb
hlt
xchg
mov
add
inc
or
addb
stos
adc
cld
or
and
incl
out
call
jbe
cmp
or
inc
push
xchg
data16
xchg
in
inc
and
cli
jno
xorb
and
iret
ficoml
sub
leave
xor
jp
shll
dec
lds
adc
inc
pop
push
ja
cltd
add
ficomps
sarl
jecxz
mov
int
sub
mov
inc
adc
sbb
sar
movsl
push
or
pop
call
add
cld
js
cmc
nop
push
lods
xchg
xor
movsl
xchg
daa
push
mov
xor
pop
jmp
push
loop
stos
jmp
or
cmp
inc
adc
lret
xor
aaa
jp
addr16
mov
ss
adcb
ds
xchg
lea
enter
inc
xor
pop
test
add
xor
test
push
mov
int
xor
add
not
add
filds
dec
andl
mov
adc
jno
push
stc
imul
fwait
and
lods
xor
xor
sub
sub
aaa
or
fstpl
mov
jno
xchg
pop
enter
mov
inc
sti
in
xor
out
lock
pop
xchg
pop
xacquire
xchg
mov
sbb
inc
sub
xchg
adcb
sbbb
pop
mov
scas
dec
xchg
mov
pushl
sub
xchg
pop
fldcw
sbb
hlt
or
mov
lea
les
and
jbe
mov
insb
mov
out
push
movswl
imul
jbe
int3
jbe
fisubs
dec
sub
sarb
sbb
es
addl
push
sub
cmp
push
mov
das
mov
jns
jge
addl
mov
add
xchg
mov
imul
popa
sub
push
sub
shlb
xchg
leave
enter
testl
test
hlt
add
lea
lret
cld
sub
enter
cmp
pop
inc
icebp
mov
js
lret
movsl
in
adc
sub
inc
inc
cwtl
push
xor
jecxz
sbb
adc
ror
sub
dec
jns
loope
rcl
jae
mov
aas
adc
jbe
sbbb
lea
mov
push
mov
xchg
into
sub
je
mov
xor
push
mov
pop
sbb
xchg
adc
mov
outsl
sub
in
xor
mov
leave
mov
outsl
int3
int3
push
sub
xchg
lods
daa
mov
mov
imul
sub
lahf
adc
fmuls
push
mov
sbbb
xchg
mov
xchg
pop
inc
xor
sbb
js
jo
add
inc
leave
or
bound
mov
cs
push
jnp
pop
mov
jmp
roll
dec
test
cmpsl
popf
fwait
dec
fstl
mov
cmp
pop
out
push
jnp
push
xchg
add
jecxz
dec
rclb
in
call
push
dec
stos
adc
xchg
sbb
jp
int
in
jb
sbb
pop
xor
adc
in
cltd
push
mov
sub
outsb
sti
test
pop
mov
stos
roll
lcall
pop
sbb
inc
cmp
jo
push
or
push
cmp
pushf
das
insl
std
pop
pop
push
lock
inc
mov
dec
mov
or
and
les
push
xchg
jp
jg
mov
push
stos
stc
js
test
dec
pop
cmp
jb
ljmp
inc
mov
pop
std
sub
add
rclb
iret
push
jg
mov
mov
out
add
vandnps
lea
pushf
test
es
or
lock
lret
jb
push
mov
iret
pop
daa
jo
cmp
lahf
cli
mov
cld
mov
sub
cs
sbb
xchg
pop
pop
test
ret
cltd
lods
push
popa
imul
dec
pop
repz
and
es
bound
jp
outsl
sub
ret
and
xchg
xor
jg
fincstp
clc
stos
movsb
jno
cmp
mov
pop
in
movsb
cmove
xor
stc
fwait
add
mov
ret
fidivl
push
cmc
out
mov
pushf
xor
inc
lret
notl
outsb
jge
rcrl
in
cmp
add
jmp
sbb
outsl
adcl
and
push
outsb
push
add
in
sub
jne
cmp
cmp
shll
pop
in
xor
push
sahf
cwtl
fdivrs
aas
insb
int3
fbld
nop
dec
cs
adc
mov
push
cmp
fldcw
push
inc
lock
add
mov
cmpsl
mov
push
pushaw
test
scas
xor
cmp
push
mov
nop
test
jmp
xor
cmp
sub
dec
dec
xchg
std
sti
xchg
mov
es
mov
fdivrp
push
dec
loop
mov
das
in
imul
cmpsb
xchg
ficoml
fdivl
mov
pushw
jp
addr16
push
notb
jmp
sub
stc
gs
cmpsb
shlb
aad
cld
inc
sub
idivb
adc
push
in
inc
rcll
inc
sbbb
test
ljmp
sub
test
ja
mov
ss
pop
mov
test
sub
mov
push
cmpb
dec
inc
sahf
fmul
andb
mov
das
add
loope
add
cmp
or
sbb
adc
cwtl
aaa
adc
jecxz
lds
pop
cmp
ds
repnz
out
push
outsl
xchg
inc
fwait
cmpsb
mov
push
sbb
lods
dec
aam
dec
adc
lahf
and
jns
mov
mov
cmp
adc
jno
test
cmpsl
add
cmc
fdivr
mov
pop
mov
mov
pop
or
and
ss
inc
mov
mov
popf
aas
push
push
sbb
cwtl
xor
inc
aaa
xchg
ja
testl
dec
cs
mov
mov
jns
mov
sub
adc
orl
xchg
rcrl
jmp
les
movsb
mov
push
sub
push
nop
cld
cld
mov
adc
loop
mov
scas
push
jb
cmc
mov
sti
cld
es
enter
outsb
push
imul
test
sbb
xchg
ret
outsb
out
sbb
cmc
cmp
cltd
sbb
mov
cwtl
jp
jae
sbb
lods
or
fbld
in
rcr
and
cmp
or
mov
sarb
pop
dec
shlb
jns
pop
mov
xor
lods
push
sub
cmp
push
push
jae
add
mov
gs
inc
stos
cmp
push
add
mov
cmp
fidivl
orb
aam
sbbb
jbe
pop
adc
jl
loopne
xor
add
lods
xchg
out
jbe
aad
cwtl
mov
add
jecxz
cs
rcrl
cwtl
pop
sti
add
shl
xor
loope
out
int3
shrb
mov
or
popf
xlat
adc
dec
pushf
or
call
out
mov
jle
es
pop
jae
aaa
fisttpl
dec
mov
jmp
cmc
into
aad
mov
add
push
dec
mov
addb
cmp
rcl
mov
adc
mov
repnz
xlat
xor
fidivs
xchg
push
shll
movl
inc
repnz
pop
dec
loopne
sbb
cmp
ljmp
inc
ds
dec
pop
fmul
mov
mov
jl
mov
mov
mov
gs
inc
mov
mov
mov
lahf
cmc
cltd
dec
mov
sub
int3
pop
mov
cmp
cmpsb
xchg
add
fimull
xor
push
aaa
cs
lods
sub
add
jp
jo
popf
popf
cli
lahf
data16
loopne
jae
pop
push
push
inc
dec
add
sti
pop
and
cli
insl
push
mov
stos
or
js
aas
sbb
repnz
imul
aad
push
cltd
mov
sbb
mov
faddl
xchg
jecxz
sub
inc
cwtl
mov
mov
test
jbe
lock
dec
push
mov
pop
stos
adc
je
jnp
mov
ss
lret
loop
les
int3
gs
push
pop
pop
mov
pop
mov
or
mov
or
fwait
leave
sub
xor
loop
cmpb
test
inc
ja
add
jg
mov
or
xor
inc
xchg
rorl
aad
daa
js
leave
jne
xchg
jno
popf
jecxz
inc
popf
cmpsl
cltd
les
mov
adc
mov
scas
and
sbb
fists
mov
ret
fs
push
mov
ljmp
loopne
push
dec
add
push
lods
enter
jo
das
sbb
mov
and
lock
xchg
repz
mov
out
jb
jns
lock
sbb
adc
sub
xchg
stos
push
jmp
jo
mov
mov
insb
sar
cmp
test
adcl
lock
push
mov
outsl
clc
popf
ljmp
inc
sbb
test
pop
leave
xchg
push
lea
mov
popf
push
jle
adc
cmp
xor
mov
out
jae
repz
inc
addl
daa
sbb
test
clc
or
lea
inc
pcmpgtd
mov
sbb
and
pushf
xchg
pop
xor
mov
in
aaa
test
or
push
fadd
out
or
leave
push
add
movsl
leave
insl
sub
xchg
xchg
movsl
ret
mov
ja
pop
je
inc
dec
add
dec
push
outsb
int
cmp
xchg
cmc
insb
inc
fwait
inc
sub
lods
cmp
push
popf
or
mov
and
scas
fiaddl
divl
out
inc
adc
in
mov
aas
mov
pop
in
dec
or
xor
add
jae
xchg
or
mov
inc
push
push
sbb
shl
inc
test
mov
pusha
mov
jbe
adc
lods
sub
jae
jle
mov
dec
aam
popl
push
iret
lret
mov
shl
sub
repnz
gs
add
push
rcr
ret
fisubrl
mov
cmpsb
xlat
cmpsl
push
into
dec
divl
mov
mov
add
aaa
cmp
pop
test
lea
out
sbb
cmp
jmp
clc
leave
out
test
adc
sub
cmpl
and
mov
cmp
hlt
push
push
ret
xchg
push
insl
rcrl
fidivl
xchg
pop
jmp
or
int3
lds
imul
jbe
lods
inc
pop
xor
or
sub
gs
push
xchg
sbb
xchg
push
mov
mov
or
mov
test
inc
movsb
adc
jno
or
inc
pop
stc
pusha
dec
pusha
inc
fs
cmp
mov
rolb
mov
jp
cld
repnz
cmp
sub
xor
cmp
push
dec
and
xchg
decl
push
stos
popf
sarl
stos
jecxz
lock
out
sarl
mov
out
or
imull
add
stc
rcrl
xchg
pop
in
in
adc
cltd
add
fs
mov
sub
lret
cmpsb
sbb
leave
mov
sbb
pop
jb
int
push
mov
test
sub
mov
lds
subl
and
xchg
fs
jmp
lods
dec
jns
mov
dec
mov
add
cmp
push
dec
fs
adcl
test
sbb
loop
sub
jp
push
cmpsb
popa
fcoml
insb
adc
movsl
cld
leave
sub
pop
pop
into
aam
mov
mov
ret
das
stc
sub
adc
in
push
mov
cmp
mov
aaa
fsubl
dec
pop
rorb
or
sub
ret
xorl
mov
ret
int
mulb
push
push
test
pusha
pop
in
fsubr
sti
mov
inc
into
outsb
sbb
cmp
incl
inc
outsb
dec
test
pop
ljmp
incl
mov
xchg
adc
fimull
lret
jle
pop
dec
jecxz
cmpsb
mov
fsubs
pop
lods
mov
or
adc
into
into
mov
xor
xor
xchg
cli
sbb
cmp
dec
sub
sbb
roll
in
push
inc
loopne
and
insb
xchg
lock
mov
mov
adc
in
cmp
into
inc
or
into
add
push
leave
shl
movsb
mov
or
lcall
daa
aas
arpl
xor
fsubrs
jg
mov
loopne
inc
out
out
jge
sbb
lods
mov
scas
jecxz
lret
xor
dec
sti
mov
pushf
xchg
push
cs
mov
das
jmp
jg
adc
sub
jne
xchg
sbb
jae
ret
in
mov
lods
push
mov
in
in
sbb
xchg
les
push
fcompl
dec
in
pop
and
xchg
mov
sbb
jge
ret
inc
fsts
imull
push
sbb
fldt
and
mov
dec
inc
add
or
in
out
fcomps
inc
ficoms
cmp
xchg
ss
arpl
mov
subb
cs
sbb
pushf
mov
pusha
int3
or
cmp
cs
jecxz
push
cmc
jp
jle
xchg
imul
xchg
pop
sub
push
subl
pop
mov
ss
dec
pop
pop
in
test
push
rcl
push
jle
jl
loopne
mov
xor
int
popf
test
in
sbb
lock
shlb
add
jne
sub
cmp
jbe
out
gs
test
pop
filds
loope
and
mov
call
insl
dec
int3
pop
mov
pop
cmpsl
push
repnz
mov
jecxz
xlat
mov
jge
clc
lea
push
add
mov
rcrl
mov
fidivs
int
pushf
adc
xchg
rolb
dec
xchg
loop
push
sbbb
divl
dec
xchg
daa
and
aas
sbb
cwtl
push
je
xor
rol
mov
add
arpl
in
sub
call
add
xor
dec
cmc
mov
xchg
fisubl
jg
adc
cmp
and
cmp
repnz
pop
lods
imul
out
test
adc
mov
leave
test
flds
and
ljmp
std
add
cmp
lcall
add
push
mov
cld
mov
aaa
shl
mov
out
push
add
ret
sahf
sub
or
fcmovu
add
fldl
faddl
aam
lcall
xchg
daa
fidivrs
push
hlt
mov
inc
adc
xor
push
dec
mov
jbe
aad
push
nop
hlt
bound
mov
mov
lret
pop
inc
popa
dec
stos
mov
cld
or
and
cmpsb
in
pop
mov
fcoml
push
add
mov
movsb
and
mov
arpl
xor
xchg
imul
sbb
in
sete
mov
jle
jmp
cmp
adc
mov
adc
mov
push
and
aad
lcall
pop
add
fsubrs
call
mov
and
fistps
jl
push
mov
inc
sub
cwtl
pop
add
dec
cmpsb
fidivs
or
ds
and
push
sti
test
cmp
cmpsb
pusha
xor
sbb
xchg
lahf
ror
mov
int
out
adc
lock
jnp
movsl
cmp
inc
push
rcll
add
gs
nop
pavgw
subb
mov
iret
shll
cmp
cmp
adc
or
xor
sti
out
sub
xor
cwtl
push
sub
cmpsb
push
add
dec
adcb
adc
mov
into
bsf
std
xchg
adc
jo
mov
add
int3
test
nop
cs
push
sbb
loop
mov
push
bound
cmp
add
fmul
cmc
cmpsl
mov
out
or
pop
dec
imul
add
loop
notl
and
cld
mov
and
cmc
sub
push
push
jb
lret
mov
fcomi
shr
movsb
test
out
pop
mov
push
mov
sbb
mov
ja
cltd
repnz
jb
mov
lea
sti
into
outsl
pop
lahf
push
out
fdivl
mov
push
jge
vrcpps
adc
or
stc
xchg
stc
mov
pop
mull
int3
adc
jnp
cmova
cmp
adc
inc
icebp
xor
dec
push
cmp
mov
out
test
mov
inc
les
int
mov
xchg
cmp
popa
inc
cmp
fisttps
jb
lea
test
cs
mov
repz
pushf
in
mov
cmp
cmpsb
inc
imul
xchg
jp
sub
mov
pop
pop
test
and
cltd
enter
lods
outsb
rol
or
inc
or
sbb
test
mov
mov
push
cwtl
mov
jg
fiaddl
jae
sarb
data16
sbb
data16
jae
stos
iret
push
iret
xor
or
lods
pop
sub
or
loope
lods
addl
test
xorl
rcll
sub
mov
sub
jl
lds
adc
and
aad
mov
mov
jmp
dec
out
cli
into
mov
sub
out
movb
push
pop
add
pop
dec
jno
inc
ja
int3
ficompl
mov
inc
mov
fyl2x
repz
insb
insb
int3
push
insl
xchg
out
les
in
pop
ja
mov
jg
jl
xor
cmpsl
lret
test
adc
mov
into
roll
movsl
in
dec
inc
mov
or
or
inc
loop,pt
or
int
les
enter
xorl
std
sub
imul
sub
adcb
adc
mov
xlat
add
shlb
js
xchg
loopne
jno
fs
push
add
inc
mov
inc
inc
aad
aaa
lods
and
outsl
cmp
dec
jae
stos
mov
adc
jmp
ja
pop
adc
add
ror
xor
fisttps
insl
push
rcl
mov
adc
jb
dec
and
sbb
lret
mov
fidivl
imul
les
jb
push
daa
push
and
add
cmc
lods
adc
fnstsw
loop
into
popa
call
jg
cmp
repnz
lret
out
xchg
add
lahf
adc
daa
scas
xchg
sbb
test
mov
jns
std
pusha
outsb
adc
out
xlat
xchg
pop
je
xor
subb
add
lods
hlt
add
dec
insb
fs
sahf
jns
mov
xchg
in
andl
inc
imul
imul
fbld
rcl
movsl
sti
mov
cltd
enter
out
js
push
scas
pop
cmp
daa
int
jge
xor
jb
inc
adcb
ret
add
mov
xchg
leave
jp
add
pop
mov
or
ss
sti
enter
inc
inc
test
xchg
xchg
mov
loop
and
jns
aam
pop
icebp
notb
outsl
lret
xchg
mov
insl
push
loopne
shrb
or
fcmovne
rclb
icebp
and
lods
sub
xchg
cmc
movq
fwait
and
test
enter
or
gs
fmuls
mov
ljmp
fucom
xchg
stos
or
outsb
mov
sbb
loope
xor
lcall
and
push
andl
data16
pop
adc
add
sbb
cmp
jle
dec
dec
xchg
add
lods
sub
sbbb
mov
aaa
dec
fcomip
data16
ret
cmpsb
lock
mov
bound
xchg
push
dec
repnz
cld
rcrb
mov
in
scas
add
lock
push
filds
push
push
repz
repnz
sub
ja
jns
or
nop
pop
sbb
add
pop
ret
lock
pmulhw
aad
pop
add
mov
mov
insb
loop
fdivs
fildl
das
imul
pop
rcrl
adc
shr
mov
jl
jb
sub
inc
in
adc
in
aad
lods
adcl
mov
sbb
loopne
pop
paddusw
sti
lahf
mov
ret
sub
lods
loopne
sti
clc
dec
dec
xchg
jecxz
pop
or
adc
jbe
cmp
add
inc
xor
testl
test
jge
jp
imul
cmp
dec
ss
ljmp
mov
cmp
and
adc
fs
mov
fwait
xchg
insb
mov
out
scas
outsl
push
aas
jb
and
lcall
push
lea
ror
es
mov
dec
outsl
lret
fs
std
xchg
sub
paddb
pop
pop
fwait
stos
call
xchg
mov
add
in
jno
sub
xchg
in
stos
lds
pop
push
mov
inc
enter
sbb
push
ljmp
sahf
lds
stos
push
jb
sbbl
das
sbb
sti
icebp
xchg
cmpl
push
movb
into
add
fwait
rorl
stos
iret
jae
cmpsb
add
lds
or
and
jecxz
stos
xchg
mov
mov
jecxz
les
lods
loop
add
add
and
push
dec
in
shll
sti
and
cmp
xchg
loop
les
mov
mov
adc
addr16
out
daa
scas
push
movsl
lds
cmpsl
xchg
dec
je
or
jp
js
xor
imul
mov
cwtl
inc
push
out
imul
cmpsl
or
jg
cmp
call
and
jae
add
repz
out
call
lahf
int3
mov
inc
sbb
xor
inc
add
jae
imul
pop
jmp
dec
leave
scas
jmp
enter
dec
mov
decl
pushf
sub
sub
jge
xchg
repz
arpl
lahf
popf
jmp
push
ficomps
cmp
lds
add
pop
xchg
push
jne
out
cltd
adc
xchg
ss
shl
xchg
popa
lcall
jbe
push
insb
sub
lcall
ficomps
jg
xor
mov
scas
ret
pop
int
jb
cwtl
push
sub
xor
inc
cmp
dec
ret
jl
pushf
push
je
dec
fldl
test
adc
adc
sti
jge
sbb
punpckhdq
xlat
stos
xchg
push
push
pushf
ss
inc
push
inc
out
mov
dec
in
jnp
dec
je
pop
scas
sbb
cs
xor
int3
jl
mov
or
xlat
mov
sbb
mov
adc
pushf
adc
cwtl
mov
movsb
add
xchg
fiadds
pop
fdivs
mov
adc
popf
push
jae
inc
sub
jge
xchg
jecxz
dec
sub
lock
and
leave
rcl
mov
int
adc
stc
xchg
mov
or
popf
pop
mov
sarl
stos
pusha
inc
push
fimuls
lea
push
mov
add
jle
dec
decb
stos
jns
sbb
sub
dec
inc
cmp
mov
repz
pop
leave
and
mov
xchg
push
dec
add
add
ljmp
fistl
fidivrs
jno
jle
adc
and
xor
jne
sbb
sar
jg
imul
sti
mov
pop
push
fistps
inc
adc
pop
pop
cli
test
jns
test
in
sbb
push
dec
insb
add
jle
lcall
test
bound
xor
mov
cmpsb
fyl2xp1
jecxz
mov
mov
in
lret
hlt
clc
add
cmpsl
in
or
sarb
into
jae
adc
cmp
popa
cld
cmp
xchg
fs
sarb
xor
adc
rolb
push
mov
into
fistl
lahf
outsb
adc
fsubr
adc
lods
mov
aas
js
cmc
insb
hlt
mov
dec
push
rorl
cmp
dec
xor
cmp
fidivrs
mov
mov
mov
iret
add
xchg
scas
and
fs
lods
add
bound
outsl
ds
loopne
loop
prefetch
or
or
jge
es
and
jg
push
sbb
or
cmp
push
sbb
pushf
frstor
loopne
or
pop
fsubp
in
and
fisubl
inc
add
icebp
faddl
iret
pop
mov
sub
hlt
pop
pop
jecxz
xor
push
jo
gs
in
cld
stos
xor
push
sub
adc
lcall
ja
add
mov
sub
sbbb
or
clc
shl
lret
mov
cmp
pop
jo
aas
mov
jno
dec
ljmp
js
int3
dec
cli
add
andl
mov
cmp
push
or
stos
lea
jmp
push
sbb
imul
dec
adc
push
xsaves
cmp
xlat
fiadds
mov
in
es
movsb
dec
sbb
nop
dec
lret
mov
lret
lret
and
stc
add
cmpsb
ret
xchg
push
pop
cmpsl
cli
sub
push
test
rcll
xchg
sbb
fwait
enter
pop
jle
jl
cmp
leave
in
lds
inc
push
bound
lret
xorb
enter
pop
mov
add
xor
mov
mov
push
and
mov
push
xchg
jp
mov
push
sub
rcl
ss
daa
enter
or
pop
nop
push
arpl
cs
aas
xor
mov
ss
xchg
insl
add
jnp
loopne
or
pop
push
and
mov
hlt
push
adc
lcall
test
push
mov
or
das
sbb
sbb
xor
and
jmp
dec
xchg
cmp
adc
repnz
adc
ficompl
cmpsb
inc
or
in
addb
sahf
adc
bound
mov
adc
pop
aaa
xor
push
int3
mov
jnp
shlb
and
push
stc
pop
mov
faddl
adc
xorb
sar
jl
cltd
insl
adc
mov
and
call
xor
or
lods
lahf
insb
adc
pop
lcall
je
or
jl
mov
and
out
mov
lret
ror
xor
xor
mov
cmp
mov
mov
mov
dec
into
imul
sub
incl
jmp
push
fidivrl
mov
lock
pushf
mov
cwtl
inc
daa
jns
dec
fs
test
push
mov
loop
xorb
aaa
addr16
jp
mov
and
push
xchg
jno
mov
lahf
sahf
dec
sub
loope
addr16
cmp
cmp
ret
setb
je
xchg
sbb
es
and
mov
addl
out
mov
daa
cld
push
in
popa
lahf
push
movsb
jge
push
cmp
out
mov
or
icebp
sbb
xchg
out
lods
aam
mov
jae
imul
pop
add
arpl
inc
sub
mov
out
mov
mov
pop
jl
push
or
mov
xchg
fwait
cmp
int
movsl
fsub
mov
or
push
fsubs
negb
test
out
pop
iret
pop
xchg
push
xchg
out
mov
std
test
es
pminub
jmp
ret
xchg
and
lods
lret
movsb
pop
into
js
pop
xchg
out
jae
adc
shlb
xor
test
loope
xchg
sti
dec
cmp
test
fsubl
in
cmp
mov
jmp
mov
lods
mov
test
pop
xor
leave
mov
xor
xchg
jo
push
push
inc
xlat
pop
in
adc
mov
lock
xchg
scas
cmp
jns
xchg
xor
cwtl
cltd
fbld
cs
imulb
jno
xchg
dec
lret
or
or
jmp
icebp
movsb
repnz
xchg
xchg
jg
jo
ds
jmp
fmull
push
cmp
and
test
dec
insl
mov
iret
push
jmp
jno
incl
testl
das
cli
loop
lea
call
jge
adc
leave
outsb
jge
lea
pop
jmp
push
test
shll
jle
arpl
outsl
icebp
xchg
cld
cmc
loopne
lods
mov
inc
insl
loopne
ja
jnp
fisubrs
ja
or
push
stos
dec
sub
add
insb
mov
adc
inc
lret
movsb
es
xchg
in
jbe
in
int
sahf
mov
imul
cmp
pop
clc
or
ss
add
mov
and
call
mov
out
jb
ljmp
js
lds
sbbl
jnp
enter
mov
inc
outsb
add
jo
inc
das
hlt
xchg
xor
data16
push
bnd
mov
int
inc
fcoms
xor
lret
mov
scas
adc
movsl
out
jnp
and
cli
cmpsb
sub
xchg
and
push
fs
dec
mov
cmp
ficoms
and
rcll
add
pop
into
pop
inc
cwtl
jle
rcl
lret
pop
loope,pn
bound
xchg
gs
jle
lock
cs
lods
mov
mov
pop
xchg
jne
data16
outsb
pop
lds
add
adc
lahf
fisttpll
jo
xchg
outsl
das
push
shlb
mov
adc
inc
push
ds
js
ljmp
mov
sarl
cmc
sbb
iret
mov
rcl
mov
sbb
pushf
cmpsl
sbb
cli
push
subl
push
imul
sub
js
pop
out
mov
out
mov
mov
mov
aaa
mov
dec
or
inc
lahf
jmp
lock
mov
lock
ja
ss
mov
subl
xchg
sub
cltd
sbb
fistps
loopne
cmp
adc
jo
fldenv
je
or
int3
jmp
jmp
iret
xchg
les
add
fsubrl
les
add
xchg
insl
xchg
pop
sub
test
pop
fwait
xchg
cmp
or
out
jle
or
sbb
mov
adc
scas
das
pop
inc
les
sbb
arpl
sti
mov
out
fimull
repz
jb
rolb
test
xchg
xor
adc
dec
imul
inc
lret
jge
bound
leave
sub
mov
hlt
add
aad
xor
jns
xor
xchg
adc
jmp
xlat
adc
jb
add
xchg
add
mov
repz
dec
sub
jge
and
mov
jge
inc
pop
arpl
and
xchg
mov
aaa
mov
cwtl
mov
jle
dec
xchg
ffreep
fisubrl
imul
out
inc
pop
and
ljmp
stos
inc
dec
cmpsb
ror
xor
sbb
xchg
push
sub
je
pop
xchg
fcomps
xchg
test
dec
loop
in
pop
pop
jb
xchg
lods
js
jno
cwtl
lret
push
das
fistpll
sahf
or
xchg
pop
sub
inc
inc
ret
mov
mov
test
repnz
mov
aaa
in
mov
xchg
mov
inc
add
cmp
mov
mov
sbb
ja
sbb
sbb
push
cmp
xor
mov
das
mov
bound
cmp
push
or
hlt
xchg
or
jecxz
or
cmc
push
mov
pusha
mov
std
iret
mov
xor
mov
push
imul
sti
pop
sbb
xchg
push
pop
pop
loopne
inc
mov
inc
test
or
outsl
test
push
sub
std
movsl
push
lea
rolb
aad
jne
pop
popf
loop
test
jbe
cmp
sbb
xor
bound
pop
sbb
push
mov
cmp
mov
mov
or
ljmp
jg
push
sbbb
cmpsb
fnstsw
dec
fidivrl
add
fwait
loop
nop
call
sub
dec
das
sub
mov
fisttpll
adc
lea
adcb
push
lret
fcomp
fidivl
xchg
bound
push
fistps
push
es
mov
fdivr
inc
stos
pop
imul
movsb
push
cmpsl
push
xchg
sbb
aad
pop
test
imul
arpl
pop
out
inc
pusha
pop
push
jl
dec
and
ret
push
xor
cmp
jge
mov
in
mov
bound
pop
xchg
add
pop
pushl
cmpsb
or
in
cli
mov
fwait
xchg
xchg
das
mov
sbbl
or
fldl
pop
es
psubd
notb
add
xchg
dec
movsb
push
mov
mov
sbb
push
subb
push
and
mov
sub
sub
movsb
or
inc
sbbb
cmpsb
ret
lret
ret
push
dec
dec
jo
sub
call
push
stos
push
bound
inc
jl
jne
and
xchg
jbe
fsts
push
out
out
cmp
into
cmp
rcrl
mov
popf
adc
adc
xchg
arpl
inc
out
push
mov
add
lea
bound
mov
mov
mov
xchg
cmp
xor
movsb
shrl
sub
iret
jns
arpl
inc
jp
mov
cmp
xchg
xor
add
insb
enter
xor
or
ja
mov
pusha
fdivrp
fsubrs
ret
adcb
hlt
popa
and
mov
loopne
out
ds
adc
addr16
dec
aas
jae
bound
jg
adcb
nop
cmpl
addr16
push
jbe
inc
pop
ds
cli
and
leave
fwait
sub
ficomps
cmp
add
inc
inc
cmp
push
stos
lock
out
pop
loopne
sahf
test
int
and
in
cmp
jmp
adc
inc
mov
mov
leave
mov
lahf
sbb
sub
shlb
add
mov
mov
pop
lret
mov
jle
mov
fidivs
les
shrl
mov
mov
cmc
cld
cmp
push
jle
push
lods
push
inc
js
pop
lea
movsb
push
shll
mov
push
mov
push
xchg
ja
push
andl
sub
push
in
sbb
dec
das
mov
fisttpl
fsubrl
sbb
aad
push
bound
cs
pop
movsb
xchg
fnstenv
iret
inc
jbe
arpl
pop
fmul
shr
les
mov
jbe
sub
dec
std
inc
adc
inc
mov
adc
ror
jb
inc
das
mov
push
popa
mov
ljmp
adc
lds
dec
sbb
out
cmpb
mov
inc
fs
into
xor
add
gs
xchg
mov
aam
jne
loop
push
not
dec
xchg
rolb
jg
cwtl
in
mov
mov
push
jns
push
mov
sbb
cmpl
push
outsl
xchg
out
enter
cmp
push
sbb
shlb
adc
fst
testb
push
aas
insb
sub
pop
cmp
xchg
sbb
dec
and
sbb
jb
or
std
fsubrl
sbb
outsl
xchg
movsl
xchg
jae
mov
jae
pusha
pop
mov
popf
xor
sbb
data16
pop
and
std
xchg
sub
adc
std
sub
sub
mov
or
sub
xchg
xchg
pushf
push
push
mov
mov
sbb
cs
jns
and
jg
gs
add
enter
stc
dec
mov
orb
je
pop
sub
xchg
iret
mov
jne
adc
inc
incl
movsl
adc
cmpsl
mov
fwait
sahf
imul
cmp
cwtl
jle
pusha
aad
sbb
fcmovb
jae
je
mov
adcl
hlt
mov
lods
xchg
or
inc
jnp
imul
inc
je
jbe
aaa
cmc
loopne
inc
test
and
sub
popa
xchg
xor
mov
outsl
sti
ret
rol
negb
scas
fdivrp
add
or
fs
or
cmp
clc
out
loope
pop
cmp
outsl
sbb
adc
bound
shrl
dec
jmp
xchg
mov
les
leave
fwait
pop
fwait
sbb
bound
cli
xchg
adc
js
shl
shlb
data16
mov
rorl
push
dec
inc
xchg
xchg
nop
aaa
fldl
ror
adc
addr16
cmp
push
dec
in
xchg
or
scas
call
xchg
xchg
inc
cmpsl
mov
aaa
into
aas
dec
adc
movsl
cmpsl
cmpsb
fldl
jp
jne
fistps
js
stos
inc
rorl
ss
stc
gs
pop
cltd
pop
out
dec
stos
xor
or
mov
xchg
xchg
pop
int3
sbb
mov
addr16
ljmp
add
or
fcmovne
loopne
in
inc
sbb
adc
add
int3
shll
mov
mov
enter
or
insb
and
mov
push
pop
test
loopne
mov
or
insb
shr
adcb
shrl
dec
add
icebp
fdivrs
and
aaa
add
adc
cwtl
pushf
and
in
or
repnz
or
xchg
pop
push
ds
gs
mov
icebp
mov
rclb
sti
mov
add
sub
xchg
out
xor
mov
decb
lods
cmp
shlb
push
pop
sbb
dec
out
or
leave
jle
in
lea
repz
pop
inc
and
lods
jecxz
daa
in
push
ljmp
fdivrl
sub
adc
je
sub
and
cli
pop
or
sbb
pop
cmp
cld
insl
lods
sub
lods
stos
and
sub
ret
pop
cmp
push
or
stos
icebp
mov
sub
insb
outsb
test
lods
fsubr
shrb
xchg
nop
cmpsl
negl
cmc
icebp
add
and
lahf
push
out
cmp
mov
lcall
mov
and
sub
not
push
pusha
xchg
lret
subb
and
push
cld
xchg
je
or
popa
add
aam
popa
cmpl
loope
jno
mov
dec
mov
arpl
xor
fadds
mov
sbb
jne
xchg
jno
push
jns
data16
andb
into
pop
pop
fisubl
shll
stos
sub
ffree
cld
insl
enter
fldenv
push
cmpsl
xchg
rcrb
inc
mov
jecxz
rclb
mov
jp
loopne
mov
mull
xchg
loop
mov
iret
or
inc
push
inc
fisttpll
add
aas
stos
or
rolb
push
pop
pushf
or
mov
xchg
adcb
dec
inc
cmp
adcb
push
xchg
mov
sbb
lret
idiv
inc
cmp
cmovne
pop
mov
sub
pusha
xorl
add
and
mov
add
pusha
mov
xor
inc
or
outsl
jg
sbb
jecxz
sbb
in
xor
jp
repz
pop
jl
dec
xor
cmc
cmp
and
ds
add
mov
or
into
adc
fwait
in
pop
add
xchg
or
mov
pavgb
sbb
loope
inc
lcall
inc
pop
sub
mov
mov
shll
pop
lock
gs
cmp
or
xor
pop
mov
cmp
arpl
shll
call
les
call
pop
mov
out
ja
dec
xchg
imul
sbb
aam
jg
xchg
adc
jg
push
dec
xchg
cmp
push
shrl
sbb
push
insb
pop
lea
jbe
or
jl
inc
popa
mov
mov
iret
fucomip
xchg
pushf
mov
add
test
cli
mov
das
stos
in
cli
pusha
repz
nop
or
add
push
sbb
std
aas
lock
pop
xor
xchg
or
push
and
pop
std
jecxz
jmp
cwtl
cmc
pop
jl
in
and
lahf
mul
push
rclb
pop
das
std
fwait
pop
in
push
movsl
push
rorb
aad
add
xlat
iret
int3
add
lock
sbb
add
or
daa
mov
movsb
hlt
enter
fsts
lret
adc
inc
sub
insb
cmp
push
push
std
and
leave
fcomps
cli
pop
push
outsb
cmc
pop
push
push
dec
aam
or
insb
cmp
cmp
sub
out
cltd
and
fbld
addr16
sub
pushf
sti
inc
fs
push
fcoms
iret
lret
adc
test
cwtl
xchg
insl
icebp
sbb
dec
sbb
jnp
jnp
and
cmp
dec
inc
fnsave
cmp
mov
or
jl
add
jle
mov
mov
cmp
pop
fldl
mov
cld
scas
enter
leave
jbe
scas
ds
enter
mov
bound
addr16
push
fidivrl
pop
sub
jno
pop
pop
cmp
cmp
out
cmp
repnz
ret
lret
xor
sti
xchg
out
call
sti
dec
mov
jle
testb
roll
adc
sarb
ljmp
push
and
out
cmp
adc
scas
ds
popa
dec
subl
sbb
cmp
push
inc
adc
lods
mov
addr16
pop
aad
pop
jnp
mov
lcall
push
and
mov
outsl
lea
sbb
or
popa
jno
jp
testl
or
add
or
stos
dec
aaa
popa
stos
adcb
push
push
cmp
pop
dec
sbb
pushw
cmp
sbb
or
lock
mov
inc
mov
inc
cmpb
fs
inc
mov
dec
js
inc
sbb
fistpl
mov
push
dec
fstpl
dec
and
pop
mov
add
popa
leave
and
arpl
sbb
cmp
sbb
addr16
scas
push
xchg
mov
data16
or
or
jle
movsl
je
add
int3
lret
ja
lds
lods
or
mov
sbb
sub
inc
aam
sbb
out
mov
mov
pop
and
mov
push
js
xchg
xchg
push
mov
andl
stos
mov
and
or
mov
push
ljmp
jl
adc
or
mov
clc
mov
push
or
ss
sub
adc
jns
mov
add
jo
cmp
cmp
lods
into
add
popa
jne
dec
fcoml
xchg
test
aaa
jl
and
scas
movsb
aam
lds
inc
gs
pop
out
pop
dec
dec
and
xchg
fisubs
mov
inc
cmp
mov
push
movb
hlt
xor
in
in
cmp
icebp
push
outsl
push
adc
jmp
sbb
fs
pop
and
addr16
jo
or
ds
sub
and
das
mov
sti
cmp
mov
cmpsb
or
mov
scas
pop
lds
ds
or
adc
mov
inc
inc
repz
mov
inc
pusha
dec
add
pop
pop
sbb
xchg
ja
pusha
mov
and
add
pusha
movsl
test
loope
stc
xchg
call
mov
ffreep
inc
jo
xchg
and
aaa
xor
and
lods
repz
xor
icebp
nop
repz
lea
loope
adc
lock
xchg
add
sbb
pop
sub
add
in
jg
xlat
pop
mov
gs
ja
add
add
mov
enter
repnz
mov
into
dec
lods
mov
or
pop
pop
sub
jge
sub
jge
dec
cmpsl
sub
subb
xor
mov
adc
rol
iret
jmp
out
add
mov
inc
mov
jge,pt
xor
inc
cmpsl
and
std
sarl
test
outsb
mov
mov
xlat
mov
dec
imul
jle
add
ret
dec
inc
arpl
cmp
jno
adc
dec
mov
push
mov
inc
loopne,pn
jnp
imul
lahf
pop
jl
xorl
or
out
scas
ds
lahf
cmp
pop
shrb
int
xor
mov
xor
inc
cmp
les
lcall
fldcw
mov
and
in
in
pop
mov
jnp
jg
fisubs
stos
or
in
sahf
and
sub
insl
call
popa
cmpsb
sbb
lahf
hlt
dec
ret
push
js
insb
mov
xor
xchg
or
jno
sarb
hlt
jne
addr16
sub
mov
xor
sbb
sbb
popf
movsb
jecxz
mov
jecxz
sar
mov
mov
ss
jmp
pop
add
dec
sbb
daa
xor
mov
jmp
mov
testl
xor
mov
add
mov
fdiv
and
mov
in
xchg
fsubrl
movsw
inc
into
inc
xor
jae
jge
xchg
clts
push
jb
pop
jno
sbb
mov
inc
fmuls
aas
andl
sub
mov
nop
mov
lahf
scas
adc
jbe
and
dec
outsl
loope
pushf
adc
aas
add
jp
dec
mov
mov
lahf
push
imul
xchg
es
aad
call
jge
movsl
jne
sub
dec
mov
mov
xorb
adc
fmul
cmp
and
dec
dec
or
add
and
rolb
jmp
mov
push
jb
call
fsts
pop
clc
or
xchg
movsl
dec
jns
int3
cwtl
cmpb
mov
ret
insl
icebp
jb
or
jne
mov
cmp
cmpsl
inc
push
ret
gs
js
ss
xchg
mov
cmp
stc
sar
jae
addb
lea
addr16
jecxz
aam
lcall
fistpll
xchg
in
cs
inc
jb
fs
mov
test
xchg
les
aad
and
sbb
mov
sbb
push
push
das
in
xchg
push
clc
xor
push
lea
jl
int
add
pop
sbb
cmp
sbb
add
arpl
dec
cmc
mov
add
add
pop
fnstsw
xchg
push
fnstenv
in
fwait
xor
cmp
push
sarb
cld
js
xor
fidivl
pop
xchg
xchg
pusha
adc
out
movsl
into
xchg
pop
aaa
lret
stos
xchg
ret
jbe
lcall
nop
inc
pop
pop
adcb
pop
xchg
pop
pop
leave
les
xchg
xchg
jle
xor
or
ret
into
push
dec
or
jo
mov
notl
repnz
repnz
lret
jmp
add
jbe
push
loop
mov
and
dec
loopne
stc
insl
call
sbb
pop
test
push
xor
loop
sbb
daa
or
clc
shl
ret
mov
loopne
dec
sbb
mov
fidivrl
jp
or
test
sub
mov
data16
jbe
mov
es
rol
inc
and
shl
xor
dec
das
push
leave
mov
lcall
mov
nop
ret
ss
sub
mov
icebp
ss
dec
int
pop
popl
arpl
scas
cmpsb
mov
cwtl
and
std
pop
ret
mov
cwtl
pop
lods
cmp
sahf
and
rorl
mov
into
jle
xor
rcr
lea
jns
out
cmp
cli
popa
jae
mov
stc
mov
cltd
stos
or
push
lea
repnz
cltd
pop
fs
sub
test
clc
and
inc
or
xchg
xchg
jo
cmp
negb
jle
aam
in
sti
movsl
dec
sub
lods
pop
pop
aam
mov
dec
jae
sub
lds
divl
push
repz
test
mov
mov
enter
and
sbb
sarb
stos
out
repnz
in
outsl
mov
scas
and
sub
inc
pop
lods
pop
idivb
in
shlb
push
and
xor
faddl
mov
ret
sahf
or
or
mov
add
outsl
or
push
xor
mov
push
pop
push
loope
lock
roll
fsubrs
pusha
je
out
mov
test
xchg
arpl
sbb
cmp
rolb
lods
out
lock
cmpsl
mov
sbb
insl
jge
pop
inc
cmc
hlt
ja
shrl
mov
repz
mov
ss
sti
das
je
push
mov
pop
cmc
movsl
or
imul
xor
mull
mov
iret
mov
xor
loopne
pop
cmc
dec
jecxz
fsts
imul
int3
ret
and
mov
call
adc
scas
jg
shr
movsl
mov
mov
mov
in
ds
and
ret
lahf
jle
jae
pop
das
or
xchg
movsl
scas
rcr
insb
xchg
mov
cli
sbb
in
mov
data16
lret
into
mov
js
sbb
add
sbb
or
and
loop
cwtl
sahf
mov
mov
xor
pop
dec
jne
mov
cld
rcrb
sbb
das
in
arpl
dec
sbb
frstor
xor
sbb
mov
lret
xchg
shlb
sub
out
daa
jo
in
mov
mov
mov
insb
pop
mov
push
lcall
dec
bound
sub
inc
repz
mov
insl
icebp
int
mov
push
push
aas
aaa
mov
out
insb
addr16
xchg
add
push
mov
fnsave
dec
stos
mov
xchg
push
dec
add
shlb
jp
jbe
test
push
fs
shlb
and
push
mov
mov
cli
out
sti
test
inc
cwtl
push
ss
shlb
xchg
enter
outsb
mov
xchg
insb
mov
jmp
ret
mov
loopne
or
mov
ds
les
push
bound
mov
lret
push
js
adc
loope
xor
jmp
inc
outsb
shrb
dec
mov
scas
sbb
sbb
sbb
sbb
or
sahf
imul
pop
insb
jle
mov
push
shlb
scas
ja
aam
sbb
and
arpl
jae
or
mov
mov
and
lahf
mov
or
push
cmpb
and
mov
sbb
pop
jle,pt
lret
mov
pop
addb
dec
mov
pop
jo
cltd
sub
cmp
cmp
repz
sub
xchg
pop
nop
lret
or
ret
cmpsl
sti
mov
pop
mov
mov
lock
mov
xchg
sbb
push
mov
push
mov
mov
insl
fisubs
ds
push
push
insl
in
jno
loopne
mov
jecxz
int3
pop
icebp
dec
mov
dec
shl
jno
fbld
pop
out
cmpsb
or
out
lret
test
cmp
loope
mov
test
ja
ljmp
push
notb
shll
insl
mov
cmp
cs
dec
mov
mov
pop
fcmovnu
rcl
arpl
aas
test
mov
arpl
vpsubw
mov
xchg
add
jl
xor
cli
lock
lea
pop
push
mov
data16
sbb
push
xchg
sub
pop
mov
jbe
les
and
xchg
mov
mov
shlb
outsl
mov
fisubrl
jmp
mov
mov
inc
cmp
in
ficompl
ljmp
inc
sbb
popf
jo
or
ljmp
les
call
shl
xor
stc
or
lcall
pop
cmpxchg
mov
dec
push
jo
lods
pushl
bound
mov
dec
addb
clc
arpl
mov
into
into
mov
orb
daa
outsl
xor
push
dec
add
bound
out
push
pop
mov
and
in
and
sub
mov
cmp
rorb
inc
iret
in
sub
notl
mov
or
int
and
xchg
push
fimull
mov
add
fildl
dec
es
lock
jae
mov
inc
xchg
dec
mulb
js
dec
adcl
sbb
xor
pop
pop
or
mov
std
mov
fldl
cmp
mov
xlat
mov
push
mov
pop
leave
loopne
cmpsb
dec
and
lods
sub
and
cmp
jne
xor
mul
cmp
cmp
shl
sahf
lods
mov
xor
fiaddl
pop
lds
stos
sarb
movsb
call
test
sub
xor
fld
sbb
jae
add
mov
xchg
mov
pop
lcall
jns
in
mov
ret
insb
jge
rorl
je
outsl
mov
cli
push
pop
popa
jbe
adc
pop
inc
or
cmp
xchg
mov
popf
leave
jecxz
push
in
mov
cltd
lds
rol
adc
cmpsl
out
xor
xchg
xchg
pop
push
mov
ja
add
mov
adc
xchg
push
xor
push
cmp
pop
mov
xchg
jbe
pop
push
and
je
fldcw
out
jl
xchg
and
cmp
jl
jecxz
fisttpl
loope
push
mov
mov
loopne
ss
mov
jle
and
clc
mov
movsl
bound
rcr
push
test
popa
sub
ficomps
sti
sbb
enter
mov
cs
sti
sbb
push
in
mov
call
lret
fisubl
test
sbb
inc
enter
clc
push
or
dec
outsb
cmc
jne
sbb
mov
or
mov
cmpb
inc
in
jmp
cmp
call
outsb
hlt
mov
lock
adc
test
or
cmpsb
aam
dec
add
movsl
gs
adc
xchg
sub
stos
add
inc
mov
sbb
xor
stos
and
test
je
loopne
mov
lods
jbe
mov
lahf
ljmp
test
sub
movsl
xchg
es
out
adc
adc
nop
ja
pop
jne
pop
sub
push
push
movsb
repnz
sbb
inc
aas
lea
mov
fdiv
fwait
cmc
test
adc
mov
cmp
inc
sub
push
push
sbb
jae
icebp
fs
push
inc
pop
sbb
xchg
xchg
dec
xor
adc
pop
push
push
dec
ds
lock
add
xor
push
cmp
sub
xchg
adc
pop
daa
test
loope
inc
lret
sbb
stc
and
sarl
out
ficoms
mov
xchg
stc
ret
adc
adc
inc
or
dec
popa
push
icebp
bound
movhps
out
dec
ret
cwtl
inc
mov
repz
mov
scas
out
cmc
in
mov
mov
adc
push
test
or
movsb
adc
pusha
mov
pop
shll
loope
repnz
rorl
mov
fdivl
adc
daa
cmpsb
pushf
sbb
sti
jg
inc
stos
jbe
xchg
mov
jne
lahf
mov
dec
dec
lret
xchg
cli
dec
xchg
cltd
xchg
push
popf
rolb
pushl
adc
jb
xlat
sbb
jp
jb
pusha
mov
movsl
mov
out
mov
fcmovu
call
pop
adc
mov
sbb
rcl
or
outsl
pop
rcl
adc
popf
lods
leave
lea
iret
jbe
mov
or
push
ret
sbb
bound
lods
push
test
xor
mov
out
or
out
xchg
push
add
sub
sti
test
or
mov
js
lcall
gs
sub
into
inc
leave
fwait
inc
fs
rcr
int
int
jge
out
les
in
xor
sbb
adc
add
sub
xor
mov
stos
into
mov
stos
icebp
js
xchg
mov
jmp
pop
push
xor
and
jle
ss
push
ficomps
cmp
push
push
mov
push
ds
es
sub
loop
cmp
sbb
jno
mov
incb
dec
cmp
psrlw
push
push
xchg
mov
outsb
rcll
add
jle
lods
int3
repz
repnz
ds
in
mov
sub
cmpsl
je
mov
not
push
and
sub
stc
mov
or
cmc
popa
add
inc
int3
test
mov
mov
mov
mov
mov
sub
mov
jge
xor
sahf
loopne
dec
ficompl
in
std
add
outsb
adc
lock
sub
sub
aad
mov
jp
or
xor
nop
pop
pop
pop
aam
int3
mov
setnp
cltd
mov
sbb
out
jg
shll
xchg
pop
dec
push
sbb
stos
scas
dec
fiadds
xchg
xor
repz
mov
jp
or
mov
movsl
xor
inc
sbb
decb
push
imul
inc
pop
or
push
cli
add
inc
mov
mov
bound
dec
xlat
sbb
repz
loopne
sub
inc
and
lcall
shlb
aad
pop
push
adc
xchg
mov
scas
int
lds
in
insb
mov
rcll
push
loope
inc
mov
push
push
mov
cmp
ficompl
jae
mov
aam
xchg
xor
dec
cli
adc
sbb
mov
add
lcall
dec
jmp
stos
inc
sub
test
mov
jmp
outsl
and
push
insl
mov
mov
enter
outsb
dec
adc
sub
xor
mov
loop
jbe
jecxz
mov
std
test
test
cmpsb
in
stos
xchg
pop
xor
add
pop
cmp
xchg
or
jb
and
iret
mov
dec
cwtl
test
ja
xchg
loop
pop
fidivrl
mov
push
int
pushf
inc
pop
jg
ljmp
xor
es
lock
or
mov
pop
mov
in
xchg
add
cmpsl
xor
push
mov
mov
jecxz
push
pop
dec
jne
les
pop
loope
push
inc
insl
or
test
push
jmp
mov
sti
or
cmpsb
push
test
lret
add
mov
sarb
ljmp
xor
mov
movsl
pop
xchg
xchg
popf
jnp
aad
mov
push
jp
mov
or
mov
dec
jnp
or
mov
adc
cld
jno
sub
dec
cmpsb
add
into
mov
jno
pop
xor
ja
jp
adc
ret
mov
pop
shrb
cltd
xchg
jecxz
stc
das
mov
sub
pop
ja
pop
lahf
insb
or
int
test
mov
mov
test
and
mov
mov
cli
out
push
stos
jb
outsb
jne
in
mov
jbe
adc
mov
sub
mov
mov
cmpsb
fsubrs
stc
mov
hlt
js
xor
push
mov
inc
popf
mov
sti
sub
pop
add
jb
cmp
out
dec
add
enter
mov
and
inc
push
inc
mov
subb
jl
push
call
movsl
cmpsb
inc
sti
mov
mov
and
xor
mov
leave
orb
imul
xchg
scas
mov
out
pop
adcb
jno
sub
fimuls
or
lret
stc
loope
mov
fiadds
cmpsb
sti
lock
xor
inc
pop
movsl
mov
push
stos
js
incb
xor
out
fsubl
imul
dec
xchg
xorb
adc
insl
push
jb
push
lret
xchg
xor
popf
mov
inc
idivl
outsb
clc
sbb
divb
push
shll
push
mov
in
in
imul
imul
ljmp
test
xchg
mov
cmp
jmp
test
mov
test
fidivl
adc
sbb
sub
dec
loope
fsubrs
pop
stos
pop
mov
and
mov
and
movsl
inc
mov
push
sbb
xor
stc
jmp
sbb
imul
inc
roll
mov
jo
push
mov
push
mov
ljmp
push
jne
pop
enter
push
sub
mov
mov
ljmp
stc
bound
xor
fwait
cmpsb
jecxz
jge
pop
out
xor
add
or
lods
lea
push
lret
lods
test
cld
mov
iret
dec
push
add
lret
in
jmp
sub
push
loope
add
call
out
pusha
push
aad
cs
fsub
jnp
cld
ds
sbb
imul
movsb
pop
test
aad
loopne
xor
lcall
enter
push
outsl
or
pop
mov
add
mov
pusha
gs
out
xchg
fidivrs
imul
lds
and
cld
jmp
dec
or
pop
add
ficompl
xor
adc
dec
mov
cmp
out
pop
ror
or
aas
rorl
enter
cmp
xchg
ss
and
cwtl
xchg
push
arpl
arpl
xchg
pushf
cmp
sub
cs
aas
sbbl
or
jbe
pop
xchg
push
xchg
and
repz
push
jge
mov
adc
jne
sub
pop
enter
jecxz
xor
sarb
aad
push
test
xchg
add
cwtl
frstor
push
lcall
cmp
sub
inc
add
aad
push
fiadds
jg
daa
add
xchg
push
mov
dec
repz
jb
stos
pushf
pop
icebp
or
push
cmpsb
push
popf
xchg
fs
or
mov
pop
pop
sbb
fstl
lea
in
mov
mov
push
mov
mov
repnz
into
incb
in
fucom
inc
cmp
fisttpll
inc
xchg
adc
ds
lret
and
sub
cwtl
prefetch
or
mov
adc
or
inc
xor
jle
mov
mov
orb
push
xlat
gs
push
push
adc
imulb
add
iret
clc
rcll
shll
jns
sub
mov
pop
sbb
cltd
enter
or
pop
jmp
adc
dec
push
jl
sbb
mov
lcall
enter
in
xor
lods
jae
mov
popa
pop
enter
fisubs
push
or
loop
pop
push
jae
pop
pop
and
mov
dec
lock
jge
xchg
xchg
jo
adc
dec
cmp
adc
push
test
loopne
or
add
mov
loop
outsl
jmp
cwtl
pop
scas
ret
icebp
push
sbb
push
nop
mov
push
adc
hlt
push
fsubr
pop
nopl
aad
adc
inc
xchg
push
or
enter
adcl
notb
inc
jge
fwait
push
xchg
jl
xor
cli
add
arpl
insb
mov
xchg
push
insl
mov
add
sub
add
xchg
sbb
jae
pop
jo
jne
enter
sub
xor
and
push
arpl
mov
jae
mov
adc
jmp
lret
mov
dec
lds
xor
test
xchg
cmp
and
sahf
xor
add
incl
roll
adc
mov
fdivl
pop
mov
push
leave
push
xor
push
xchg
cmp
mov
into
pop
jne
inc
push
outsb
push
jmp
mov
sub
jne
movsb
cld
int3
fnstsw
aad
jne
ja
pop
push
in
ret
mov
addr16
cld
sahf
xlat
sbb
cmp
jmp
mov
movsb
and
rcrb
xor
loop
dec
dec
adc
pop
icebp
loop
push
xchg
mov
mov
xor
jb
xchg
sub
imul
cmp
jne
lret
data16
push
and
testl
iret
pop
mov
jle
cmpsl
in
repnz
xchg
rcl
jmp
cmc
scas
out
or
mov
fs
push
inc
decl
in
in
fwait
out
push
bound
mov
repnz
dec
push
repz
adc
scas
or
clc
repz
lea
adc
dec
sub
inc
pop
cmpsb
inc
leave
sbb
stc
pop
push
aas
pusha
mov
mov
ret
in
aam
inc
cs
fisttpl
or
imul
pushf
rol
fisubs
push
mov
aas
shrl
rol
jg
aas
out
popf
scas
lsl
ljmp
xor
or
je
lret
mov
dec
lcall
lret
rcrb
dec
outsl
jg
xchg
in
or
in
cmp
sbb
addr16
lret
adc
out
xor
sbb
jg
jbe
mov
bound
scas
or
in
mov
push
jmp
inc
pushf
into
xchg
jecxz
pop
int
mov
push
scas
mov
mov
rcr
mov
in
xchg
push
ffree
mov
xchg
mov
dec
jo
mulb
into
jnp
jmp
xchg
dec
cmp
jnp
lock
mov
aam
nop
push
xor
fmuls
push
fucom
cmp
push
stos
jmp
push
scas
ficoml
and
std
ret
push
push
movsb
jbe
scas
pop
fcmovnu
xchg
and
jne
mov
mov
pop
popa
cmp
lods
test
lea
mov
movsb
imull
call
mov
adc
mov
mov
jl
jno
scas
jle
popa
cmpsb
orl
and
fs
pop
das
and
or
insl
push
data16
sbb
mov
jno
push
jo
test
and
outsl
test
out
mov
std
fcoms
outsl
loope
int
daa
sarl
inc
adc
adc
sahf
sbb
or
mov
push
push
xchg
cmp
int
lret
dec
push
out
xchg
push
sbbb
sub
jno
jmp
es
popf
push
pop
lahf
add
into
or
addl
dec
imul
clc
sbb
insw
pop
push
sub
push
fs
push
mov
cltd
adc
push
mulb
dec
and
sub
add
cmp
sti
repnz
add
sub
stos
add
jl
push
test
stos
scas
adc
jg
out
loope
icebp
out
push
mov
or
cli
scas
outsb
adc
cmpsl
lahf
fists
bound
pop
mov
dec
add
lret
pop
cmp
aam
mov
aad
in
ret
push
aaa
mov
cmp
insl
jnp
mov
test
sahf
leave
test
aam
lods
add
sub
cmc
mov
nop
mov
cmp
pop
orps
cmp
mov
add
jns
lods
popf
add
dec
sbb
jecxz
sub
mov
jae
aam
or
sbb
push
push
jne
vpsubw
fbld
jb
imul
sub
mov
lods
and
mov
and
xor
mov
jg
or
bound
cmpsl
sbb
addr16
mov
xor
test
fistpl
push
rcll
pop
jle
imul
xchg
fwait
push
into
lcall
call
fsubs
mov
cmp
adc
push
mov
lahf
lock
jg
inc
adc
mov
mov
add
cwtl
push
inc
pop
jg
sub
and
jl
ja
or
xor
jbe
push
test
mov
mov
adc
inc
call
jbe
pusha
or
sub
lret
mov
fistps
mov
fsub
out
push
push
lods
and
pop
enter
mov
jl
push
addr16
nop
pop
testl
cmp
test
rcrb
jo
add
clc
mov
sub
fwait
stos
adc
xlat
arpl
stos
mov
roll
push
fwait
push
push
pop
inc
scas
jl
jle
xlat
add
add
push
push
push
aas
add
cmp
enter
lea
lods
jmp
sub
cmp
and
cmpsb
pop
adc
inc
sbb
push
loope
mov
xchg
xor
inc
jmp
sarb
sbb
adc
shrb
stc
fwait
cmp
inc
jne
mov
adc
xor
push
sbb
rcll
mov
jp
into
loopne
cld
lea
repnz
ss
je
cmc
fistps
sub
scas
repnz
cmp
sbb
movsb
jae
jle
imul
mov
cmp
jne
ret
jns
inc
push
aaa
loop
pusha
shrb
sahf
outsl
rorl
std
popf
andl
rclb
popf
push
lods
and
inc
jbe
xor
and
out
outsb
xchg
mov
mov
add
fwait
test
addl
sbb
pop
pop
js
xor
and
push
jns
or
cwtl
clc
rorl
in
call
in
xchg
lock
push
mov
push
ret
fstpt
push
and
jecxz
bound
xchg
sbb
and
push
and
scas
fcmovbe
adc
ficompl
rcll
xchg
imul
daa
xchg
push
cli
fsubr
pop
cli
cmc
or
adc
sbb
mov
mov
dec
adc
add
fdivrs
loope
and
test
mov
pop
pop
pop
mov
and
stos
shlb
outsb
xor
mov
loope
out
lea
mov
or
xor
fidivs
lret
lds
or
inc
repz
adc
and
mov
inc
push
and
movsl
jle
scas
jns
mov
fdivrl
lods
imul
adc
pop
mov
call
out
dec
mulb
xchg
sti
fmull
imul
stos
hlt
jl
push
jmp
xchg
adc
insb
test
push
and
mov
daa
mov
mov
lea
add
flds
mov
aas
in
or
sub
dec
aas
cmp
mov
jbe
pushf
inc
cld
rolb
or
ret
mov
pop
mov
add
imul
inc
fcomip
or
inc
jle
inc
int3
add
sub
jne
dec
lret
sbb
pop
clc
push
jae
imul
jno
sub
dec
in
stc
xor
shlb
mov
shl
push
push
mov
cmp
jno
sub
sub
in
or
jnp
cld
in
adc
mov
das
pop
out
mov
rorl
int
inc
popa
dec
std
rorl
pop
aaa
pop
mov
push
inc
fistpl
pop
aam
cmp
outsb
lret
sbb
imul
adc
push
insb
mov
call
icebp
outsb
test
lods
in
loopne
pop
test
cmp
aam
mov
lahf
mov
js
dec
xor
je
jne
fwait
and
dec
pop
dec
ss
fcoms
mov
test
add
add
adc
dec
add
jae
inc
paddd
mov
ja
jnp
sub
outsl
mov
popf
cmp
and
add
mov
mov
dec
sub
call
pop
xchg
jbe
sar
orl
ret
inc
xchg
xlat
scas
std
rclb
sub
jo
sub
sub
iret
jae
mov
push
test
cmp
and
cmpsl
out
sahf
adc
roll
faddl
dec
xchg
mov
call
dec
xchg
sub
in
into
inc
test
enter
int3
test
push
pop
push
faddl
jg
mov
push
lcall
mov
loop
mov
in
iret
daa
add
cmpl
or
stc
mov
push
imul
loop
pop
roll
lea
nop
xchg
sbb
xchg
fucomip
cmp
jle
int
int
push
bound
shlb
cmp
inc
sbb
aaa
sub
adc
stc
xor
sti
jg
ret
xlat
les
jae
std
fnstenv
or
sub
mov
dec
jle
cli
popa
sbb
daa
dec
pop
inc
repz
outsl
and
sub
mov
cmp
je
pop
and
push
jnp
sbb
ficompl
test
dec
mov
adc
addr16
cmp
pop
cld
jmp
sbb
xor
mov
ss
adc
int3
or
das
fildll
aam
adc
push
popf
push
mov
dec
pushf
lsl
lret
fsubrl
push
outsl
test
lahf
xor
or
mov
add
or
inc
pop
mulb
jae
ja
roll
jl
mov
lods
mov
in
addl
mov
movsl
das
push
xorb
fwait
dec
dec
out
jb
fbstp
stos
test
or
mov
cltd
icebp
cmpsl
and
in
in
jl
or
int3
xor
inc
push
hlt
jmp
mov
pop
adc
dec
mov
testl
pop
iret
fcoml
push
mov
xor
rorb
out
adc
insl
mov
cmpsl
pop
ret
and
jae
adc
pop
popf
jae
dec
jno
outsl
inc
mov
movsb
mov
dec
pop
insb
fwait
pop
popa
push
das
shrb
mov
daa
or
adc
sbbl
rcrl
ljmp
lods
leave
jmp
jge
xor
lea
ljmp
testl
hlt
pop
daa
xchg
xchg
jg
mov
mov
outsl
out
pop
adc
mov
mov
into
loopne
outsb
add
jl
cltd
xchg
rcrl
hlt
pop
or
jb
jno
push
lahf
ljmp
sti
lods
add
push
les
add
adcb
and
mov
jl
fsts
adc
push
cmpsb
ret
mov
fs
xor
repnz
sub
xor
outsl
inc
cmp
pop
push
roll
mov
jns
loope
sbb
adc
xchg
mov
and
sub
sbb
sub
mov
jge
and
call
xor
or
aaa
and
add
inc
or
mov
inc
sbb
sbb
mov
test
inc
pop
mov
in
dec
or
imul
idivb
test
fnsave
in
les
jp
call
rcll
jns
adc
inc
xchg
dec
test
cli
icebp
test
inc
push
pop
push
js
xchg
mov
mov
add
jl
jle
cmp
pushf
inc
lahf
popa
xor
jae
adc
mov
cwtl
jae
dec
mov
iret
mov
loop
das
ja
fcomps
iret
inc
dec
lcall
jo
mov
shlb
push
leave
mov
sub
insb
cltd
imul
enter
pusha
leave
xchg
into
adc
popf
jp
mov
lods
stos
lcall
dec
cltd
scas
jb
jae
ret
loop
pusha
or
mov
mov
inc
jl
mov
cli
sbb
into
shlb
rorl
pop
dec
xchg
movq
outsb
push
enter
mov
xor
add
sahf
cmp
into
sbb
ljmp
push
icebp
xchg
shl
iret
mov
jl
or
in
clc
or
mov
movsl
leave
test
push
xor
pusha
leave
xor
cwtl
mov
rcr
jmp
mov
stos
addr16
xchg
adc
icebp
sbb
ret
fcomps
adc
or
aam
pusha
push
mov
pop
xchg
add
add
inc
js
cmp
fcmove
hlt
insl
and
jg
mov
or
push
jle
iret
pop
bound
call
mov
push
or
xor
rorl
cli
shlb
ja
mov
fwait
mov
xor
in
or
imul
lahf
mov
cs
dec
in
lods
sahf
mov
fsubl
sarb
cli
fs
dec
fbstp
jae
mov
jmp
and
inc
mov
notb
push
cmp
mov
scas
in
lock
repnz
stos
arpl
cmp
dec
mov
fdivrs
inc
arpl
shl
sbb
mov
and
testb
int
lahf
or
inc
inc
adc
aad
or
mov
lret
xor
shr
fistl
jb
inc
cli
icebp
sub
dec
xor
sti
loope
add
repnz
leave
pop
int3
out
aam
jecxz
or
dec
xlat
shl
cmp
jns
in
pop
addr16
sbb
sbb
mov
inc
addr16
in
rcl
test
aas
dec
lods
pop
ljmp
mov
lcall
mov
and
jp
dec
aad
ret
shl
jle
pop
mov
mov
mov
jle
sbb
enter
mov
bound
cmc
sbbb
jmp
sbb
mov
sbb
enter
hlt
sub
mov
movsb
push
fildll
or
mov
mov
call
out
push
jle
mov
push
repz
loopne
mov
dec
dec
push
dec
mov
or
data16
mov
loopne
jmp
xorb
fistpl
mov
xchg
jge
mov
gs
push
sets
add
daa
or
in
mov
mov
pop
mov
add
pop
inc
pop
pop
sub
pop
xlat
insl
jbe
dec
dec
mov
sub
mov
fimull
popa
es
popa
xor
mov
inc
pop
shlb
sbb
enter
xor
ror
into
mov
sub
lock
aas
callw
lret
xchg
nop
inc
dec
out
out
push
repnz
psubq
dec
adc
fcoms
fstpt
test
mov
mov
cltd
ljmp
aas
gs
jns
mov
test
push
jp
movsl
inc
sbb
pop
adc
in
jle
fidivrs
cli
inc
movsl
adc
es
pop
js
divb
mov
jo
daa
insl
mov
push
imul
push
icebp
jae
mov
xor
cmp
cltd
sar
je
loope
test
ljmp
cmp
xchg
mov
push
stc
push
lds
xchg
xchg
cltd
cs
outsl
pop
sbb
adc
fiadds
dec
xchg
mov
test
addr16
js
inc
in
xor
iret
ficoms
push
mov
das
aaa
or
jecxz
arpl
rcrl
subl
imul
in
dec
push
or
xor
pop
insl
pop
push
mov
dec
ljmp
jo
push
mov
ljmp
inc
xchg
jecxz
shlb
mov
cwtl
sub
jnp
mov
mov
sub
mov
imul
jb
call
jecxz
lea
sti
mov
pop
adc
sbb
jmp
xor
mov
xorb
loop
sbb
hlt
mov
dec
sti
mov
xchg
sub
jecxz
int
int3
mov
adcb
hlt
pop
dec
arpl
int3
stc
in
loopne
das
inc
cmpl
xor
xchg
imul
mov
sub
sub
sti
imul
fsubrl
xor
shll
daa
xchg
mov
lock
or
cwtl
pop
pop
inc
subb
insb
jns
xor
mov
mov
fwait
or
mov
icebp
lcall
pop
in
sbb
out
outsb
lret
in
adc
mov
scas
scas
adcb
and
lods
jae
fldenv
lock
in
jbe
push
imul
jae
fisttps
rclb
dec
push
mov
insb
shr
and
in
sti
and
inc
xor
bound
ret
stos
jnp
and
adc
mov
dec
test
pop
je
js
out
or
sub
ja
xchg
pop
cmp
movsl
inc
and
loopne
mov
add
adc
add
in
rclb
test
mov
xor
ret
push
or
xchg
movl
inc
or
into
gs
cmp
cmp
lret
test
orl
cmp
cmp
push
bswap
mov
and
insb
orl
scas
xchg
ret
add
arpl
shrl
lods
rolb
ljmp
mov
pushf
jp
cmp
add
sub
mov
sub
jmp
popf
call
sbb
and
cld
ret
or
push
hlt
popf
lahf
out
or
push
stos
das
ljmp
test
sub
cli
xor
dec
bound
mov
xlat
nop
cmpsl
cmp
cmp
mov
jmp
into
cwtl
movsb
loope
flds
aaa
test
ror
cmpsl
xchg
out
sbb
jecxz
stc
xlat
fidivl
sarl
push
jns
sub
std
and
stc
add
inc
sub
jae
std
pushf
cmp
pop
shll
push
mov
dec
cmc
sub
aad
out
repz
mov
sub
out
mov
lods
sbb
or
aam
xor
not
jl
fisubs
fisubrs
clc
loopne
or
adc
adc
fsubrl
imul
adc
arpl
mov
lock
insb
xchg
fimull
iret
push
ds
inc
mov
movsl
lods
stos
movsl
rcrl
ficoms
ja
pop
sub
add
imul
inc
or
ss
int
push
mov
xor
fs
cwtl
aaa
clc
push
in
stc
lods
cltd
mov
cmp
imul
xchg
iret
inc
dec
popf
jle
mov
scas
insb
arpl
cmc
popf
iret
fbstp
xlat
and
rorb
fistpll
pop
adc
insl
push
ja
fwait
pusha
jecxz
shlb
test
cmp
outsl
sub
int3
jb
push
test
xchg
mov
icebp
repnz
sub
mov
adc
jbe
mov
sti
mov
cmp
inc
push
call
dec
or
hlt
stc
popa
cmp
add
jp
cmp
xchg
sbb
jg
outsb
shr
loopne
dec
push
dec
mov
popf
ljmp
pushf
jecxz
xchg
adc
xchg
cmp
cmp
into
mov
icebp
mov
mov
loop
pushf
repz
or
push
pop
pop
sub
xor
in
dec
dec
mov
icebp
rcrl
or
pop
mov
jmp
mov
gs
cs
imul
dec
lcall
jl
mov
xor
nop
mov
add
shll
or
cmpb
ja
lahf
fisubl
add
rcrb
jle
aad
mov
pop
js
mov
cli
jmp
mov
test
mov
sub
stos
loop
mov
push
push
sbb
out
cmp
mov
pop
sbb
cmp
cmp
cmc
cld
dec
ja
js
hlt
or
and
je
subb
and
pop
inc
shl
fcmovu
stos
mov
js
incb
addr16
add
sbb
leave
jp
out
pop
pop
das
subl
add
cmp
in
mov
jle
sti
cmp
in
lcall
jo
call
insl
in
xchg
or
xchg
sti
lahf
dec
push
adc
xchg
cwtl
subl
cmp
add
insl
aas
jne
or
insb
xchg
ja
xchg
in
mov
and
adc
mov
jl
adc
push
mov
insb
stos
jnp
xchg
movsb
pusha
inc
push
jbe
rcrb
sub
xor
negb
rorb
cs
clc
inc
cmp
mov
scas
mov
sub
sub
pop
push
pop
jmp
and
jl
test
lods
inc
or
mov
ss
test
les
and
dec
adc
test
cmpsb
mov
mov
xlat
data16
inc
imul
pop
push
movhps
jg
pop
in
fidivrl
cmp
mov
mov
aaa
mov
xchg
data16
dec
movsl
inc
adc
or
lock
xor
push
outsb
cmp
adc
or
inc
inc
xor
shrl
sub
pushf
sti
mov
xchg
leave
push
sub
test
scas
dec
inc
aaa
sub
mov
inc
cmc
fcmovu
jmp
adc
xchg
pop
pop
xchg
shl
bnd
dec
push
dec
xchg
rorb
lods
lods
lods
mov
repnz
push
cmp
jl
pop
pop
dec
sub
int3
sub
adc
ss
movsl
sub
data16
cs
in
aad
inc
outsl
sub
xlat
push
mov
outsb
mov
mov
std
and
mov
lret
dec
fsubrs
das
cmp
nop
hlt
mov
and
cmpsb
lret
loopne
pusha
jge
pop
daa
and
scas
ret
cmc
cmp
addr16
lret
jecxz
mov
jne
mov
lret
sub
addb
pop
mov
int3
push
xchg
into
jecxz
xorb
push
cld
xchg
sub
or
adc
cmc
add
pop
jbe
xchg
lret
jo
loope
add
pop
mov
imul
lcall
aaa
sub
jb
add
inc
push
es
mov
mov
insl
dec
pop
gs
xor
hlt
and
addr16
sti
cwtl
mov
aas
in
rcrl
imul
inc
stc
sbb
or
rclb
adc
lea
aas
mov
push
test
xlat
scas
fcomps
push
sbb
add
cltd
test
ljmp
xor
iret
movsb
movsb
ret
fimull
cmp
out
or
push
mul
jne
sbb
xchg
es
aad
orb
mov
add
test
inc
je
orb
sbb
leave
pop
cmp
leave
sbb
jnp
mov
int
lds
in
mov
dec
or
fsts
push
cmp
cld
outsb
pushw
into
scas
dec
jecxz
push
cmpsb
push
rol
xor
mov
jl
fildl
ret
or
cmpsl
mov
mov
fwait
mov
loopne
cmp
push
pop
and
clc
inc
test
cld
mov
fcoml
sahf
cmpsl
orl
fmul
jg
xor
or
sub
inc
cmp
cmp
xchg
daa
nop
stos
xor
mov
inc
loop
mov
xlat
repz
push
push
xchg
pop
stos
mov
sub
pop
push
repz
lcall
jg
sub
mov
and
daa
iret
sub
xor
mov
ficoml
repz
aam
dec
cld
jle
jecxz
sub
push
imull
loopne
dec
repnz
pop
fwait
in
pop
ret
sbb
jne
dec
pop
js
scas
pop
lock
push
fisubs
lods
int
push
lahf
fisubrs
xor
xchg
dec
cltd
mov
push
test
aas
pop
mov
out
xchg
rcl
cltd
loop
in
cmp
decl
sti
nop
dec
and
fisttps
sarl
inc
or
fidivrs
dec
inc
pop
mov
sbb
cs
dec
out
xchg
aaa
lea
add
inc
xor
aas
and
jg
inc
add
xlat
es
xlat
mov
jmp
or
rdpmc
ljmp
lods
and
adc
pop
popa
bound
pop
mov
xor
dec
push
aad
push
mov
sub
int
push
sbb
mov
fs
fisubl
aaa
lea
gs
push
xor
xor
jl
repz
jnp
popl
inc
mov
pop
dec
mov
enter
xchg
cmp
popf
sub
xor
sub
inc
iret
push
icebp
movsb
fstpt
push
adcl
push
popa
out
adc
pop
addl
leave
test
jns
mov
adc
insb
xchg
stos
setge
cmp
fisubs
add
cmp
dec
les
xchg
xchg
mov
xor
aam
nop
lea
out
mov
and
mov
rclb
movsl
mov
popa
inc
pop
cmpl
fmull
addl
pop
and
xchg
inc
nop
daa
adc
or
push
dec
xchg
pop
loope
ret
fiaddl
cmp
dec
scas
mov
jbe
adc
cmp
fmull
enter
lock
jae
push
shlb
ffreep
shrd
pushf
int3
aam
sub
in
movsb
nop
mov
in
mov
cmpsb
aad
ficoms
mov
add
jecxz
pop
cmp
cmp
xor
je
addr16
push
movsl
xchg
jno
mov
push
movsb
sar
movsl
vpsllq
mov
xlat
outsb
lea
and
pop
mov
adcl
frstor
lcall
xchg
insl
jb
push
sub
in
sub
test
cmp
lret
fcom
sub
mov
in
cmp
jno
jecxz
popa
cmp
in
mov
out
daa
push
cmp
jbe
ljmp
and
ljmp
leave
in
out
fucomi
in
jns
ljmp
jp
add
in
sub
xor
adc
lea
ret
mov
mov
enter
jmp
pop
lret
pop
jp
add
push
push
in
lahf
cs
fistl
std
sbb
icebp
add
xor
pop
or
sbb
dec
dec
push
dec
dec
mov
daa
fcom
stos
out
data16
add
sbb
mov
and
mov
lock
daa
or
shll
shrb
mov
cmpsl
std
or
adc
addr16
add
jmp
mov
cmpsb
mov
in
add
adc
xor
stc
mov
mov
int3
arpl
in
adc
xchg
testl
and
or
into
jg
cmpsl
fistl
dec
cwtl
ljmp
jge
movsb
out
call
flds
and
test
dec
sbb
dec
pop
add
ljmp
and
mov
scas
call
mov
mov
cmp
in
cmp
push
mov
shrl
mov
cmp
add
mov
scas
cmpl
push
sti
scas
gs
inc
ret
jmp
jae
xor
cmpsl
add
mov
or
push
cli
xchg
sub
inc
add
scas
add
scas
ljmp
das
ds
push
jb
xor
jle
mov
in
lret
aad
rcrb
dec
inc
dec
mov
adc
lret
push
mov
dec
bound
add
lods
cmpsl
and
adc
lods
cwtl
dec
adc
bound
and
xchg
add
scas
xchg
cld
xchg
mov
mov
andl
lahf
sub
je
test
jmp
popf
dec
movsb
inc
mov
test
fstl
mov
dec
mov
stos
andl
fdiv
xor
lret
or
pushf
sub
xor
inc
int3
aas
addr16
mov
mov
or
loope
imul
xchg
movhps
aam
into
mov
hlt
lcall
mov
inc
lds
scas
mov
push
sub
adc
mov
add
cmpsl
mov
add
lret
clc
dec
xchg
ret
repnz
popa
push
pop
in
jae
pop
push
sahf
outsb
mov
fs
sub
dec
sbb
cs
movsl
test
testl
adc
xchg
or
jo
es
in
jns
cs
pop
dec
insb
je
sub
scas
mov
js
mov
stc
daa
lea
xchg
xor
jbe
loope
mov
xor
mov
lret
int
jae
xchg
mov
mov
mov
loop
rcrl
jns
mov
mov
xchg
lahf
fdivrl
loope
and
add
push
mov
leave
roll
add
pop
pop
and
push
imul
scas
cltd
fsubs
sub
mov
dec
jmp
cli
add
or
mov
mov
push
xor
mov
push
lods
leave
or
push
mov
dec
ja
fwait
dec
jecxz
jno
adc
pop
adc
sbb
stos
mov
dec
jo
ljmp
jae
stos
cmp
push
adc
sahf
addr16
aas
add
inc
push
push
jle
inc
gs
mov
fcoms
mov
and
movsb
mov
sbb
and
inc
aaa
mov
inc
push
cmpb
mov
pop
testl
sbb
scas
push
xor
jb
add
shll
bound
cmp
sub
cmp
cmc
sahf
aad
or
ljmp
stos
insl
cltd
js
rclb
xor
addr16
mov
ficoml
lret
test
sbb
xchg
push
xchg
call
dec
or
jecxz
movsb
popf
mov
mov
das
lds
sar
loope
push
sbb
call
ds
enter
fsts
add
pushf
int3
xor
call
adc
into
mov
aad
xor
stos
ficoml
aaa
ficoms
sbb
icebp
sti
out
loope
ret
subl
ljmp
add
lods
dec
adc
scas
push
pop
push
cmc
push
jp
inc
sbb
arpl
scas
lods
aam
iret
mov
push
in
mov
jb
mov
mov
out
rcrb
test
stos
gs
mov
cmpsb
sbb
aas
xor
sahf
stc
repz
addb
rcrl
out
ja
cmp
jp
outsl
std
loope
jmp
and
cmpb
xchg
and
jmp
cltd
jge
mov
rcl
arpl
mov
cmp
sub
jmp
into
or
or
imul
mov
dec
in
mov
aaa
sbb
lods
orl
cltd
imul
roll
pop
mov
stc
in
or
gs
add
mov
push
xchg
dec
nop
adc
jle
loopne
clc
aad
or
xor
lcall
pop
push
adc
testl
sub
hlt
std
xor
out
sub
ss
ljmp
cmp
sahf
cmp
cmpb
push
setbe
mov
fsubrs
xchg
or
or
xor
push
es
repnz
cmp
sub
in
pop
imul
mov
jge
fimuls
bound
push
xchg
xchg
lahf
push
adcb
pop
inc
or
test
pop
orb
je
push
in
pop
lods
mov
rorl
stos
mov
xchg
push
jg
inc
or
cmp
push
xchg
adc
push
xchg
scas
lods
jl
cmp
cmpsb
pusha
lods
scas
pop
mov
js
push
and
cmc
mov
push
and
push
jae
pop
or
sub
loop
pop
cmp
mov
arpl
xor
fildll
jmp
aad
cwtl
aam
sub
rol
inc
sub
xor
pop
aam
test
jno
clc
frstor
push
mov
mov
shll
push
jns
in
sub
sti
inc
inc
jnp
hlt
push
push
xor
mov
mov
push
call
leave
adc
test
dec
mov
adc
mov
lret
xchg
mov
sbb
cmp
sbb
cmp
lcall
jge
jo
jecxz
rorb
push
mov
mov
jg
out
leave
cmp
fistpll
dec
mov
aam
cmpsl
lock
test
jbe
jbe
dec
int
pop
mov
cmp
mov
xor
or
enter
lods
jnp
movb
shlb
sub
xor
imul
add
cwtl
and
mov
hlt
push
shr
push
lds
pop
mov
jge
xchg
stc
push
imul
loopne
lock
cli
mov
incl
dec
push
inc
sahf
sbb
cmp
fdivp
push
mov
dec
sbb
sbb
jp
hlt
out
leave
jmp
cmp
mov
jmp
sahf
imul
imul
xchg
inc
repnz
dec
cmp
push
mov
rcr
mov
testb
mov
sbb
leave
mulps
movsb
jmp
loop
adc
hlt
cld
mov
mov
mov
lods
rcl
push
or
xorl
xrelease
and
sub
cmp
and
jo
js
mov
and
jmp
inc
add
sar
mov
jne
mov
add
or
xlat
ss
insb
xor
cmp
push
out
xlat
sub
adc
and
sbb
push
fs
cmp
incl
cmpsl
jne
arpl
and
rcll
sbb
divb
loope
cld
xor
and
pop
insl
push
inc
xor
and
jl
pop
sub
daa
out
cmp
or
test
cmc
push
ljmp
push
xchg
out
add
popf
test
pop
pop
data16
std
xchg
in
loop
imul
xchg
xlat
inc
popa
lret
xchg
xor
mov
jbe
cmpsl
inc
roll
jmp
push
pop
or
push
es
sarl
sub
or
ficompl
xchg
sbb
xchg
pushf
je
aad
cmpsb
mov
outsb
and
pop
cmc
jne
mov
das
gs
ss
out
mov
insb
cmpsl
sub
int3
adc
adc
insb
ds
sbbb
sbb
sbb
mov
pop
in
int
fisttps
pusha
push
rorb
stos
lock
iret
in
inc
dec
push
xchg
adcb
xor
orl
sbb
push
in
enter
add
jecxz
sahf
or
xor
push
push
jo
cmpsb
imul
ja
pop
pop
pop
fsts
fwait
mov
mov
push
fmuls
sbb
loopne
mov
outsl
call
nop
mov
add
scas
test
jl
adc
imul
fidivl
stos
outsl
scas
lods
lds
inc
mov
rcr
cli
lahf
iret
mul
lea
and
lcall
fists
pop
mov
pushf
add
cmp
fwait
or
ljmp
pop
nop
clc
dec
shrb
int3
jbe
pop
ja
daa
fdiv
hlt
test
enter
das
out
jns
mov
rorl
cltd
testb
sbb
test
mov
jbe
push
jmp
call
mov
popa
pop
xchg
jmp
int3
shrl
lret
clc
mov
inc
enter
mov
std
jns
fwait
pusha
cmp
rolb
jne
cmp
aad
xchg
mov
pushf
loop
sbb
xor
jo
sub
test
or
in
push
es
cltd
mov
imul
mov
fisttps
les
js
adc
enter
cwtl
or
subl
lahf
stos
and
inc
and
mov
lods
cwtl
push
inc
push
and
sub
call
adc
adc
xor
inc
iret
xlat
fs
out
mov
lret
jle
lods
adc
jb
mov
sub
ficoms
insl
sbb
movsb
test
gs
in
fcompl
mov
bsr
pop
fistl
cmp
icebp
add
pop
or
cmpsl
mov
insl
shlb
jb
int3
es
repnz
jg
and
sub
and
addr16
in
cmpl
xor
cltd
leave
int3
jle
cmp
xor
xchg
pusha
es
xchg
sahf
prefetch
or
xchg
xchg
test
aaa
popa
sub
in
test
mov
jg
frstor
mov
jecxz
sub
push
ja
push
daa
mov
and
out
cmp
dec
jb
test
bnd
add
xchg
mov
pop
in
fsubrs
sub
jbe
push
mov
loop
out
fbstp
push
and
packsswb
mov
inc
iret
jne
sbb
loop
inc
fwait
mov
xor
sub
mov
sarl
and
repz
mov
loope
dec
out
jmp
loope
pop
or
dec
cmp
jge
dec
lods
adc
pop
shlb
fsubp
adc
and
mov
push
push
jecxz
xchg
in
fs
sub
insl
aad
pop
stos
in
mov
insb
ss
fidivrs
xchg
or
or
loop
adc
insl
sbb
pop
jbe
or
push
and
filds
enter
or
mov
aaa
mov
popa
jb
mov
cli
sahf
lds
int3
pop
add
sbb
into
mull
mov
loopne
cmp
push
xchg
adcl
dec
push
or
mov
mov
shll
movsb
sahf
pop
jp
test
ficompl
mov
sbb
repnz
adc
in
xor
ljmp
in
cs
jg
shl
push
sahf
or
sahf
nop
lret
js
cmp
adc
mov
mov
rcr
js
mov
and
mov
lcall
jb
cmpsb
sbb
pop
gs
cmpsl
fwait
std
mov
repz
daa
cmpsl
push
jbe
adc
in
and
mov
xlat
lods
movsl
mov
inc
adc
pop
lods
ficoms
jl
lret
or
addr16
clc
aas
xlat
cwtl
call
and
leave
mov
xor
adc
mov
dec
scas
imul
push
jne
nop
out
mov
mov
push
test
rorb
pop
movsb
xor
and
movsb
test
inc
mov
daa
std
pop
fistl
iret
lds
and
ja
xlat
jae
mov
mov
sub
jl
sbb
mov
outsl
pop
jg
inc
ds
mov
cmp
pop
mov
pop
mov
and
cwtl
test
imul
rol
sbb
sbb
dec
add
sbb
jge
jg
dec
cwtl
shr
inc
dec
aaa
jns
arpl
jp
adc
pop
sub
stos
sbb
xchg
mov
jae
inc
fcomps
push
mov
pop
push
xor
call
cmp
xor
icebp
inc
adc
jo
or
loop
inc
push
or
cmpsb
inc
ret
lret
push
popf
jge
leave
leave
or
stos
nop
cld
loop
test
dec
sti
cmp
arpl
or
adcl
mov
push
arpl
sbb
repz
lahf
cmp
mov
aad
sub
into
test
sub
aad
mov
int
push
fnstsw
repnz
popa
das
outsb
inc
push
in
movsb
in
sub
repnz
shl
lahf
repnz
cmc
jmp
mov
adc
and
sub
cld
pop
or
cs
mov
dec
and
mov
jg
mov
call
mov
or
inc
popl
mov
xchg
insb
les
xchg
int
and
fnstsw
imul
test
out
imul
fildll
clc
shlb
outsb
push
lock
aaa
arpl
and
xchg
adc
fisttpll
sti
add
arpl
imul
jl
stos
imul
mov
xchg
jl
sub
lods
cwtl
leave
cmp
push
mov
or
cmp
insl
pusha
aad
outsl
push
inc
out
std
xor
push
mov
push
adc
add
xchg
push
adc
rolb
jl
in
xchg
add
loop
pop
xchg
pop
mov
rol
push
outsb
imul
mov
stos
dec
scas
push
clc
outsl
data16
cld
inc
mov
faddl
sarl
int3
mov
je
fwait
pop
pop
popf
jl
pop
inc
int3
push
je
cld
xchg
xchg
mov
push
push
cmpsb
push
stc
xchg
and
cmp
adc
and
fidivs
adc
jecxz
add
pop
mov
inc
jge
in
mov
shll
sbb
call
mov
sahf
sub
mov
mov
bound
test
sub
xchg
negl
fnstsw
dec
adc
popf
aaa
jo
addr16
fucom
mov
xchg
pop
addr16
es
and
lahf
adc
idiv
or
imul
stos
xchg
popf
pop
or
push
mov
sbb
out
mov
cmp
inc
mov
push
lea
inc
pop
arpl
jno
dec
stc
push
jge
jl
push
xchg
jmp
arpl
mov
push
aad
fmull
aaa
push
add
push
out
xor
push
push
or
cltd
bound
data16
cmp
mov
xchg
lahf
sbb
inc
repz
jl
mov
fcompl
mov
sub
jb
sahf
lods
xor
inc
xlat
insb
jg
adc
inc
dec
adc
orl
add
rcrb
jg
ljmp
in
scas
mov
dec
cmp
sub
add
pop
sbb
shll
jno
push
pop
mov
jbe
xor
into
sbb
xlat
mov
imul
ljmp
xor
push
dec
es
movsb
mov
xlat
or
std
ss
jae
mov
adc
and
xchg
lcall
mov
jns
pop
adc
adc
lds
out
add
sub
outsb
jnp
pop
repz
loope
sti
aas
push
mov
lods
adc
hlt
outsb
or
push
sub
push
movsb
pop
or
daa
xor
xchg
inc
idivl
inc
mov
ret
push
into
xchg
out
mov
fisttps
testb
mov
dec
mov
lock
xor
add
addr16
mov
in
adc
xchg
nop
pop
and
mov
mov
mov
adc
outsl
lock
jns
mov
adc
shrb
and
call
jecxz
cmp
shlb
in
aas
sub
icebp
in
pop
and
rorl
movsl
pop
clc
int
dec
mov
cmp
push
or
mov
fnstenv
and
jns
arpl
pop
cwtl
in
popf
push
mov
pop
jecxz
lods
test
push
stc
mov
jo
enter
mov
xor
dec
ljmp
or
aaa
testl
jns
and
xchg
push
lds
adc
iret
cltd
push
adc
inc
sarb
nop
cli
imul
mov
js
mov
jb
sub
cmp
jno
xchg
push
dec
inc
scas
mov
jmp
rcr
nop
addl
icebp
sub
ret
popa
pop
dec
cmpsb
push
push
lahf
inc
test
dec
cwtl
mov
outsl
or
pop
ret
sub
loopne
outsb
jns
inc
fs
daa
push
bnd
xlat
enter
mov
lods
aaa
pmaxsw
xchg
xchg
fwait
pop
movsb
jp
xor
outsl
aaa
mov
cmp
inc
fsub
adc
pusha
sbb
push
insl
popa
incl
stc
scas
mov
int
leave
hlt
ja
adc
push
repnz
into
imul
ret
dec
add
sbb
call
mov
pop
cmp
pop
cmc
stos
repz
dec
loop
jmp
pushf
dec
popf
xor
xor
add
fsubrl
and
lods
lahf
or
push
xchg
jo
nop
xlat
mov
mov
mov
push
jle
enter
addr16
std
mov
xchg
imul
cwtl
xor
dec
int3
cmp
std
aas
push
dec
sbb
sub
xorl
inc
sbbb
shll
arpl
adc
adc
aas
inc
int
fwait
mov
cmc
mov
daa
lcall
adcb
xor
cld
xor
or
fstl
or
out
leave
adc
and
xchg
les
sbb
or
and
pop
and
sarb
enter
sbb
les
aad
fcoml
int
cmc
adc
xor
push
lods
mov
ficoms
jle
mov
mov
mov
stos
push
mov
scas
rorl
add
movsl
mov
cltd
ljmp
test
jb
inc
or
repz
push
ret
cmp
push
scas
push
iret
push
cmp
sbb
cmp
cwtl
daa
imulb
dec
push
and
pop
jo
dec
sbb
and
insb
ret
cltd
xchg
popf
loope
pop
stos
add
sbb
mov
in
cld
rcrb
xor
popa
faddp
cmp
mov
pushf
adc
rcrb
rdmsr
data16
mov
decl
filds
insl
mov
push
into
cmp
add
pop
lock
je
ljmp
mov
clc
fsqrt
jp
int
mov
push
repnz
orl
int3
xlat
add
dec
adc
rcrl
inc
dec
repz
and
ljmp
cmp
cmp
xor
pop
push
mov
popf
mov
lret
mov
cmp
add
arpl
ljmp
loopne
out
sahf
push
mov
ja
test
adc
add
cmc
cli
movsb
mov
xor
adc
clc
xchg
adcb
adc
xor
cmp
adc
mov
stos
int3
mov
sti
out
or
or
add
xchg
mov
mov
aaa
insl
ljmp
sti
aad
and
or
cmp
push
testl
jne
cmpb
xor
psllw
pop
into
xchg
mov
and
xchg
test
xor
jmp
xchg
push
pusha
and
shll
icebp
cli
fisubrs
inc
cmpsb
test
add
mov
je
sbbb
mov
es
xor
cmp
clc
dec
out
out
movsl
arpl
mov
out
hlt
adc
pop
xchg
pop
xor
cmp
push
pushf
and
xchg
movb
inc
cmp
cmpsb
shl
lods
loopne
jl
cmp
mov
fs
in
jl
pop
add
push
and
fs
mov
adc
or
jbe
rol
or
repnz
in
pushf
xchg
dec
cltd
push
pop
test
pop
in
dec
sbb
xchg
arpl
cmpb
jo
push
jle
jb
je
pop
push
mov
lret
les
jl
mov
adc
in
popf
fiadds
fisttps
js
popa
mov
or
je
push
xor
and
inc
jmp
xchg
cmp
inc
arpl
out
inc
stos
xor
lock
cwtl
stos
inc
int3
ret
push
lahf
shrb
adc
leave
pop
outsb
dec
xchg
cld
inc
inc
or
mov
mov
lds
call
enter
inc
fdivrs
loop,pt
cltd
mov
iret
mov
fxch
push
jp
into
sub
dec
lds
in
adc
adc
and
bound
and
mov
xchg
push
mov
mov
push
xchg
sti
fstpt
imul
out
das
shr
ds
aas
mov
shlb
test
daa
jle
pushf
ret
sbb
cwtl
dec
mov
xlat
xor
daa
sub
lods
sbb
pop
jno
insl
loop
cmpl
rcrl
dec
jp
lret
decl
or
xchg
pop
xor
lahf
lods
push
call
lds
fwait
mov
outsl
fsubl
push
dec
sub
cld
add
fistpl
or
push
mov
das
out
cmc
sbb
push
push
mov
gs
dec
cmp
mov
cmp
mov
mov
mov
cltd
cmc
fisubl
pop
push
ja
outsl
int3
scas
sub
call
jge
sbb
sti
sbb
call
into
xchg
pop
xlat
pop
and
sbb
lcall
sahf
sar
sbb
dec
inc
xchg
pop
push
pop
scas
idiv
loope
mov
int3
je
cmpsb
or
push
movsl
and
in
icebp
loope
push
cmp
mov
mov
adcl
sub
mov
push
scas
int3
cld
movsb
mov
push
add
out
xchg
lahf
sub
push
push
gs
cli
out
mov
mov
popf
loop
jb
jns
out
cmovb
lock
imul
std
sbb
insl
stos
icebp
inc
jg
or
rcl
mov
popf
movsb
imul
inc
mov
adc
xor
xchg
loopne
setge
loope
pushf
sbb
js
cmpsb
dec
push
or
les
in
lret
mov
cmp
xchg
arpl
sub
fstpt
nop
sti
sbb
aam
shlb
scas
cmp
mov
sbb
in
mov
mov
or
test
mov
pop
xor
fildll
mov
hlt
or
fsubr
gs
fldl
cmp
out
sbb
cli
push
pushf
cs
fs
imul
inc
mov
in
pushf
je
sub
push
rclb
sub
xchg
popl
mov
sbb
fdivl
inc
clc
xchg
aad
out
mov
into
orb
rorl
adc
xchg
movsl
dec
jne
xchg
dec
dec
inc
mov
add
loopne
mov
jl
std
sub
lods
scas
cmp
inc
xor
add
mov
nop
fnstcw
adc
push
sub
ljmp
ret
jl,pn
fs
fdivr
lods
push
cld
inc
dec
mov
je
mov
pusha
xor
repnz
mov
sti
and
test
fldl
dec
scas
inc
add
cld
ret
add
push
jg
xlat
mov
sub
rol
cmp
fidivs
mov
xchg
mov
mov
cmpsb
cmc
lahf
sbb
ja
xchg
loop
hlt
iret
pop
test
lds
cld
mov
out
iret
loopne
jo
jb
pop
sub
mov
mov
pushl
pop
hlt
fincstp
das
clc
loopne
xor
push
dec
xchg
rorb
push
ss
cmc
add
andb
inc
push
and
daa
jp
in
cltd
cmp
push
add
inc
jg
daa
or
test
pop
icebp
or
pop
stos
jecxz
roll
pop
mov
fstps
imul
sub
popf
jge
or
inc
fwait
cwtl
sbb
add
xchg
idiv
cmp
ret
jecxz
jo
shlb
xor
je
fistpl
add
xor
adc
ficoml
adc
pop
adc
aas
mov
fnstsw
xchg
ret
jo
pop
or
and
mov
test
lock
lock
test
shl
cmp
repz
xlat
div
and
mov
add
mov
xchg
ret
sub
sbb
jns
xor
adc
and
incb
xchg
test
ljmp
ss
in
arpl
mov
mov
loope
fstpl
push
xchg
lds
stos
aad
push
roll
adc
pop
stos
xor
mov
idivl
fildll
jl
hlt
mov
rcrl
cmp
push
xchg
scas
adc
and
inc
in
sub
pop
mov
dec
inc
sub
inc
inc
sbb
shrb
movsl
xchg
mov
scas
sbbb
mov
sbb
imul
cmp
lock
js
fsubr
pusha
cmp
dec
outsl
shll
aam
dec
mov
inc
cmp
test
xor
dec
xchg
xor
push
std
sbb
lods
es
cmp
lods
gs
and
pop
movsl
insl
aaa
in
adc
and
fwait
and
inc
ret
xchg
or
int
out
mov
push
adc
test
xchg
or
push
adc
je
mov
cmpb
and
adc
mov
jp
cltd
repnz
imull
push
int3
repz
inc
pop
inc
popa
mov
out
and
outsb
dec
mov
jns
adcb
and
jmp
fadd
sbb
or
adc
xchg
mov
adc
cwtl
fisttpl
pop
mov
ja
and
mov
mov
arpl
fwait
sbb
dec
jmp
mov
xor
fmull
push
sub
imull
mov
int
pop
sti
sbb
push
insb
pop
push
scas
mov
mov
out
dec
jl
out
jp
lcall
stc
lods
lret
push
ljmp
push
jb
fisttpl
or
push
jbe
or
imul
pop
imul
mov
or
lahf
dec
imul
xchg
jb
aaa
xor
add
mov
loope
jp
add
in
je
fdiv
push
pushf
fs
pop
jae
jne
pop
sbb
sbb
adc
imul
fdivrs
fistps
jne
dec
mov
repz
jb
dec
xchg
movb
dec
lahf
rorb
jmp
inc
sub
mov
and
xor
pop
test
mov
in
test
mov
negb
cs
pop
cmp
pusha
mov
dec
xlat
ss
or
jne
out
mov
xor
test
cs
sbb
sar
stos
jle
cwtl
sbb
in
mov
mov
lcall
pusha
nop
jno
iret
pop
push
repnz
sbb
adc
sub
mov
cmp
pop
sub
testb
adc
lods
test
mov
and
jl
ljmp
es
daa
or
xchg
mov
cwtl
cmp
jge
xchg
pop
sub
xor
lret
popa
hlt
mov
shrb
xor
push
mov
gs
jle
stc
pop
mov
pop
mov
rorl
sbb
jb
repz
push
je
mov
std
pop
rclb
loop
jmp
adc
jl
cmp
inc
out
out
loopne
jle
fisttpll
rcll
xchg
in
jecxz
cmpl
aaa
lret
imul
push
xchg
rcrl
aaa
fcomps
mov
jmp
bnd
out
fidivl
inc
daa
or
into
loope
pop
sbb
inc
mov
add
or
and
sbb
add
cld
pop
shll
jo
test
jb
outsl
call
fstp
or
cmp
out
js
in
push
sub
pop
ret
lds
inc
and
cwtl
cmp
xchg
xchg
mov
lahf
inc
dec
mov
in
mov
xchg
cmpsb
stos
mov
ret
xchg
testb
test
cmp
int
imul
sahf
cld
daa
add
sbb
push
dec
xchg
mov
push
mov
add
movsb
out
int
popa
jne
mov
sbb
cmp
pop
and
mov
in
std
or
mov
jns
fstps
cmp
fwait
lcall
scas
sub
adc
sar
addr16
pop
pop
adc
add
add
pop
pushf
iret
icebp
xor
jmp
mov
das
cmpsl
sbb
push
pop
pop
cmp
adc
das
or
mov
cmp
push
fcomp
mov
mov
lods
cs
pop
loopne
dec
pop
shll
in
mov
mov
fisubrl
xchg
mov
out
adc
push
cmc
pop
lea
mov
inc
lds
dec
data16
ficompl
mov
lret
mov
in
push
xor
sub
loopne
cwtl
insl
repnz
std
out
repz
sbb
lret
in
jno
sbb
leave
lret
popf
xor
cmpsb
loop
jle
adc
cs
cli
push
push
cmp
cmp
or
pop
pop
daa
pushf
jmp
stos
mov
push
mov
enter
hlt
sbb
jns
xorps
hlt
cld
pop
cmp
or
int3
orb
movq
movsl
fs
ret
jno
outsb
sbb
ds
shrb
clc
dec
jne
cmp
daa
push
dec
into
pop
nop
cmp
sub
sub
xor
adc
test
xchg
test
adc
sub
data16
negl
xchg
mov
inc
dec
xor
or
addr16
sbb
mov
aad
and
push
negb
add
ss
iret
pop
loop
xor
push
in
or
push
fildll
dec
jp
jmp
les
sbb
dec
pop
fsubrl
and
rep
nop
out
sbb
lods
mov
stos
sbb
scas
notb
stos
mov
repnz
mov
push
mov
mov
xor
jmp
lds
push
jbe
fidivl
and
jno
dec
out
mov
ss
cmc
daa
or
push
loopne
rolb
movsb
push
cltd
jmp
cmp
or
add
scas
cmp
sbb
dec
mov
cmc
push
inc
test
orl
addl
and
lock
mov
lea
or
inc
lea
mov
rcrl
fisubrl
jp
mov
inc
inc
test
lcall
lods
lea
sahf
and
or
cld
mov
outsl
add
popa
push
push
insl
scas
add
rcll
and
xor
sub
jecxz
out
mov
xchg
xor
aad
leave
movsb
push
in
call
dec
lret
sub
push
test
sarl
lds
arpl
loop
leave
rcll
mov
or
shlb
icebp
mov
test
out
ret
pushf
lds
test
arpl
sbbl
cs
bswap
inc
inc
push
jb
lcall
pop
mov
lret
xor
scas
and
repz
icebp
out
leave
cmp
and
das
loopne
xor
mov
cmpsl
cwtl
xchg
pop
cli
and
mov
loop
fwait
inc
test
pop
shlb
mov
cld
std
aad
ret
inc
mov
fnsave
lcall
or
sub
cld
jmp
arpl
or
push
dec
xchg
mov
add
clc
dec
mov
ds
pushf
faddl
leave
cmc
pop
push
jns
fldcw
mov
add
test
jmp
cwtl
add
xor
mov
push
xor
jmp
or
mov
mov
sbb
ljmp
out
adc
jno
ljmp
mov
pop
outsb
push
sub
jmp
cmp
subb
mov
add
lcall
push
out
out
insl
sub
popf
cwtl
pop
mov
into
and
pop
std
push
aas
add
cld
cld
adc
sbb
inc
clc
movsl
inc
dec
dec
stc
and
test
and
imul
in
shlb
insb
inc
popa
fbld
iret
mov
std
push
or
sub
loope
fildl
imul
mov
std
loop
lea
pop
xor
rcll
ss
mov
ret
inc
pop
jecxz
out
aaa
adc
xchg
pop
and
fnstenv
dec
pminsw
adc
sbbb
in
push
mov
sarb
xor
cmpsl
jg
mov
repnz
mov
inc
loopne
dec
mov
sahf
int
nop
inc
pusha
cld
sti
and
xchg
mov
cmp
xlat
push
xchg
sti
jmp
and
cwtl
inc
lods
addb
mov
add
cld
loopne
jmp
and
push
add
dec
cmpl
data16
sbb
cli
out
leave
pop
sub
sub
cmp
orb
inc
mov
jmp
jg
inc
push
stos
dec
inc
movsb
ret
loope
sub
cmp
mov
clc
out
mov
jge
andb
inc
add
jbe
and
dec
bnd
adc
outsb
jbe
jbe
xchg
fistpl
shll
pop
insl
jg
mov
push
dec
mov
sub
mov
cmp
cmpsl
push
adc
pop
xor
xchg
pusha
mull
push
je
xor
icebp
ret
addr16
and
nop
pop
out
xchg
push
and
mov
or
dec
das
iret
cmpsb
mov
aas
jnp
mov
xor
mov
adc
push
bound
das
sbb
push
icebp
xorb
mov
test
fsubl
xor
inc
ret
enter
push
and
dec
outsb
scas
mov
sarb
xchg
sbb
dec
jg
ds
arpl
or
sahf
lock
cmpsb
cmpsb
xlat
into
cmp
lock
push
jecxz
pop
cmp
mov
enter
lock
xchg
mov
inc
and
adc
cmp
insl
dec
xlat
es
je
xchg
or
dec
icebp
ljmp
addb
mov
push
ret
xchg
sbb
adc
add
repz
jp
jb
sub
lahf
outsb
outsl
xor
xchg
and
in
into
test
sbb
bound
packssdw
outsb
jp
enter
fmuls
cmp
jl
xchg
mov
push
sub
mov
dec
es
repz
mov
sub
fdivs
mov
outsb
loop
xchg
cs
mov
adc
ds
aam
pop
loop
xchg
add
jno
jg
mov
fstl
fcmovb
fldcw
add
dec
cmpsb
pusha
pop
dec
das
push
mov
inc
iret
enter
in
push
cmp
sub
insl
hlt
test
gs
sub
leave
inc
div
inc
mov
dec
in
cmpsb
test
test
cmp
mov
lret
cmpsl
rolb
xchg
mov
xchg
stos
lds
loopne
pop
xchg
mov
jl
xchg
xor
pop
jno
cmp
mov
jb
jmp
pop
jns
mov
pop
pop
mov
push
and
test
dec
mov
bound
lods
rcrb
addl
call
data16
inc
jle
ss
push
xor
jle
test
outsb
cld
cld
adc
imul
cmp
dec
ret
cmp
push
loop
ja
or
pop
inc
aad
out
fldl
ret
cs
clc
lds
push
cmc
jo
sbb
jo
push
inc
fs
or
loope
add
fimuls
inc
pop
js
adcb
test
jl
mov
jnp
add
es
hlt
fldenv
insb
push
xor
pmaddwd
imul
fistpll
loope
cmp
sub
je
outsb
mov
sbb
lods
inc
mov
add
adc
iret
das
pop
mov
push
lods
cs
lcall
stc
in
repz
jg
mov
cmp
shll
adcl
std
insb
jne
mov
or
jge
ret
sahf
out
sub
leave
out
aam
imul
stos
inc
icebp
leave
aas
scas
cmp
sbbl
out
loop
inc
sti
mov
xchg
fiaddl
jecxz
xchg
cltd
push
ret
jmp
xchg
ret
push
lret
lock
mov
jl
cmp
inc
push
xchg
xchg
push
rclb
out
addb
test
pop
popa
sbb
into
mov
into
pop
push
sub
lcall
inc
mov
iret
arpl
ret
or
adc
shll
mov
mov
push
cltd
xchg
cli
sub
shl
xlat
fs
inc
es
sub
imul
pop
cmp
and
int
mov
int3
clc
dec
inc
dec
push
mov
in
arpl
adc
aad
cmp
dec
jae
mov
jmp
je
jb
mov
push
mov
ljmp
popf
outsb
mov
jne
push
pop
dec
xchg
sarb
cmp
cmp
or
out
xor
push
pop
in
lds
and
out
hlt
arpl
je
and
and
iret
rorb
sbb
pop
adc
or
inc
and
cmp
ret
imul
lods
push
mov
jno
add
in
pushf
sub
pop
pop
dec
pusha
fmuls
int3
into
mov
push
sbb
mov
fildll
sbb
fmuls
xchg
outsb
icebp
inc
jae
gs
not
lds
lea
ret
cmpsb
ss
add
push
decb
mov
lret
cli
and
jecxz
pop
pop
clc
inc
xor
decb
popa
mov
lock
stos
or
in
cmp
cmp
sti
loopne
mov
stc
fstpl
cs
aaa
jbe
rol
movsl
out
add
jne
xchg
test
mov
jl
xor
addr16
rcrl
out
loopne
cmp
inc
mov
push
or
inc
pop
sbb
ljmp
gs
in
test
jbe
rcrl
loop,pn
jae
push
or
jecxz
pop
cmpsl
cld
cmp
inc
imul
pop
add
cmp
repnz
inc
adc
jae
lcall
cwtl
sbb
dec
repz
aad
xor
aas
popf
pop
les
into
or
adc
lahf
jb
sbb
stos
sar
sub
bound
push
ljmp
addw
xor
stos
cmp
adcl
mov
mov
xchg
mov
ret
hlt
lret
mov
mov
push
imul
push
sub
shl
in
mov
aam
xchg
lods
add
test
mov
pop
cli
or
inc
push
iret
ljmp
add
sub
push
and
lods
lods
push
push
fbstp
jmp
mov
jmp
dec
inc
ss
adc
push
test
mov
enter
bound
fmuls
cmp
cltd
sub
fisubrl
jbe
mov
fs
or
repz
mov
push
or
jno
das
pop
xor
xchg
movsb
jp
stc
rcll
and
jo
sbb
mov
shll
mov
pop
and
mov
adc
or
sbb
aam
mov
dec
ds
ja
inc
movnti
rolb
sub
xchg
sub
pop
pusha
xor
leave
sub
fstp
mov
and
hlt
add
add
or
mov
lds
or
xchg
push
adc
sub
dec
pop
out
and
jnp
rclb
iret
cmpsb
adc
pop
frstor
cli
mov
sbb
fidivrs
pop
jb
hlt
lds
cmp
pop
mov
xor
xchg
push
in
mov
fcomi
jnp
int
inc
fistpll
fisttpll
or
notb
cld
sub
cs
lret
lret
sbb
cmp
nop
ss
fidivrs
popl
aas
xor
mov
pop
out
push
inc
out
movsb
imul
xlat
add
ffree
sbb
in
add
int
fwait
daa
xor
shrb
pop
xchg
fldln2
pop
cmp
mov
adc
lock
shl
pop
xorb
jb
mov
inc
mov
out
fsubrs
jo
inc
dec
mov
add
jg
fisubrl
cwtl
xchg
out
adc
shl
adc
jg
push
mov
ret
ret
mov
lds
mov
jg
popa
sbb
xor
push
hlt
rolb
in
cs
dec
cltd
and
stos
pop
xlat
sbb
xchg
lret
lret
cmp
iret
out
xor
fistpl
inc
xchg
sbb
movsb
shrl
pop
test
lcall
mov
mov
int3
adc
js
or
lret
add
sbb
lahf
and
mov
test
inc
mov
into
add
in
xor
into
jge
xor
mov
movsb
and
push
stos
add
ret
in
sub
in
call
jp
xor
or
add
mov
fldenv
sub
popf
xchg
sbb
orb
pop
add
in
shrl
rcll
mov
pop
xor
outsb
les
and
das
inc
pop
aas
daa
mov
mov
mov
cmc
mov
dec
and
inc
cmpsb
mov
xor
mov
andl
imul
xor
incl
mov
testl
jecxz
cmp
andl
arpl
jo
out
test
xchg
xchg
in
test
lahf
and
nop
stos
adc
shl
cmp
xor
das
fmul
out
or
xor
repz
je
xlat
cmp
std
fbstp
jnp
lods
pop
push
ss
or
test
inc
or
movsb
cwtl
xor
icebp
frstor
jmp
insb
dec
lret
xchg
push
adc
int
inc
stos
test
jno
cmp
jnp
xor
ss
test
adc
ss
mov
mov
sbbb
repz
out
push
pop
pop
rcll
std
cs
push
mov
mov
or
xchg
inc
aas
sahf
sahf
jno
test
je
std
mov
sti
dec
adc
push
and
cmp
psubd
sbb
je
ret
jo
push
imul
pop
dec
scas
enter
in
jge
cmp
dec
sbb
jl
or
jecxz
mov
ret
ficoms
cmp
jle
mov
rorb
cltd
test
fcompl
addr16
push
ss
xor
pop
pop
ss
or
xorb
in
sub
sbb
in
fwait
sarb
sti
fistl
scas
or
jmp
mov
inc
xor
ffreep
add
lret
mov
pop
outsb
cmp
mov
push
lahf
movsl
lahf
mov
mov
xchg
xchg
std
push
roll
cmp
ret
ret
hlt
mov
fisttpl
sbb
int
add
fcoml
into
test
adc
inc
mov
imul
xor
mov
lret
and
lds
jbe
in
addr16
imul
stos
push
push
jle
sbb
push
dec
xor
lock
imul
jge
lea
push
lock
dec
stc
pop
xor
popa
xchg
sub
stc
int3
ret
fiaddl
out
pop
xchg
or
lods
mov
insb
out
cmpsl
shl
cli
sbb
dec
and
mov
adc
rep
out
mov
push
pop
xor
popa
push
sahf
jecxz
rorl
push
scas
sub
outsb
mov
mov
sti
test
pop
sbb
jl
hlt
push
sbb
sub
ljmp
mov
cmc
pop
mov
je
inc
push
xchg
xchg
xor
or
scas
cmc
andl
insb
xchg
inc
call
ss
or
incb
scas
inc
push
rcrb
outsl
cmp
out
jmp
cmp
outsl
and
fcomps
mov
cmp
add
arpl
shl
jl
xor
ljmp
xor
and
cmp
jns
dec
popf
adc
sub
xchg
jnp
movsb
sub
arpl
mov
or
lods
outsb
adcl
lret
xchg
clc
inc
call
pop
mov
mov
dec
ret
pop
bound
sub
pop
xor
pushf
dec
pop
mov
inc
xchg
add
cli
push
jb
fldcw
ret
lock
xchg
push
pop
adc
sub
mov
jp
inc
jg
inc
pop
and
mov
adc
dec
push
dec
dec
add
and
cmp
cmp
lea
pop
ja
repnz
loop
je
push
loopne
mov
mov
imul
popf
xor
adc
arpl
pop
mov
outsb
hlt
adcb
mov
mov
out
and
cli
in
jbe
insb
dec
inc
xchg
arpl
and
cmp
dec
dec
and
outsb
in
ja
sarb
cmp
lods
dec
pop
cmpsb
mov
cli
test
stos
inc
sbbl
scas
xor
or
call
jnp
ds
cmovl
jg
ljmp
rorl
stc
and
add
pop
mov
sbb
jnp
jb
mov
and
adc
iret
mov
or
fnsave
lods
jno
xchg
out
decl
pop
xor
xor
ss
jmp
jno
arpl
jp
addr16
clc
jp
in
or
inc
orl
mov
push
mov
mov
mov
or
call
scas
into
pop
pop
stos
xor
imull
and
pop
in
shlb
aam
stos
outsl
out
outsl
in
fdivl
pop
in
mov
inc
fsubrs
mov
loope
dec
clc
add
int3
adc
cmpsl
or
inc
sub
es
clc
push
push
in
fst
add
inc
sub
dec
lea
dec
inc
mov
pop
cwtl
lods
cmpl
scas
xchg
outsl
ror
pop
in
lahf
add
pop
jmp
out
mov
sbb
mov
arpl
mov
loop
dec
adc
movsb
out
mov
in
and
imul
mov
in
inc
xor
xchg
pop
mov
es
mov
cmpsb
dec
sub
addr16
sbb
mov
pop
test
xchg
add
mov
adc
js
inc
push
stos
add
out
inc
mov
mov
mov
fwait
stc
xchg
std
ret
popa
mov
fnstcw
jmp
push
ret
cmp
cmp
inc
out
cltd
rcr
push
xor
xor
cmp
inc
xor
cmp
and
push
flds
ss
bswap
mov
and
es
aam
imul
nop
inc
test
sub
ret
xchg
jle
xor
pop
dec
cmp
mov
sbb
pop
arpl
pusha
in
addr16
xchg
fldl
cmp
data16
outsb
subb
test
outsb
inc
xor
dec
addr16
xchg
shlb
xor
mov
xchg
jnp
test
or
stc
dec
adc
sar
test
and
xor
lock
addr16
or
xor
mov
test
subl
cmp
sub
in
mov
or
imul
scas
lahf
or
mov
int
divb
cmp
jmp
xchg
iret
in
xchg
lds
mov
inc
push
pop
incb
push
scas
mov
jmp
xor
or
sar
adc
xor
lcall
daa
das
mov
dec
int
pop
push
test
push
daa
loopne
inc
ja
sub
movsb
inc
test
cmp
inc
ret
pop
inc
jp
ss
mov
sahf
mov
cmp
ljmp
imul
jge
mov
popf
push
sahf
add
scas
clc
shl
sbb
dec
xor
inc
pop
aad
idiv
sbb
jae
out
fwait
push
fcmove
pop
scas
adc
pop
orl
pop
jg
and
jp
jg
mov
out
jmp
inc
sub
adc
inc
mov
fmull
hlt
mov
js
xchg
pop
sbb
jl
lahf
xchg
outsb
cmp
jne
adc
in
insb
scas
or
add
popa
and
in
jb
lcall
fwait
cmc
adc
mov
jns
ljmp
pop
cmc
xchg
sbbb
pop
rcrb
xchg
jge
mov
addb
fs
fnsave
mov
stos
or
jae
and
pop
lahf
sbb
jle
mov
cmp
pushf
cmp
imul
mov
fwait
add
jmp
jmp
loopne
lahf
xchg
add
mov
stc
push
idiv
pusha
or
loop
xchg
adc
cmc
fs
mov
mov
outsb
add
dec
jmp
es
filds
cmpsl
iret
cmp
push
imul
pop
pop
sbb
out
mov
imul
fiaddl
movsb
ret
out
xorb
pop
adc
hlt
xchg
stc
jne
and
aad
fdivrl
adc
stc
mov
mov
mov
pop
jg
mov
ljmp
js
loope
insb
xor
mov
das
jmp
mov
mov
rcrb
hlt
jb
xor
cmp
mov
ja
mov
adc
or
xchg
xorb
inc
and
lahf
dec
xlat
inc
cmp
lcall
mov
int3
xor
push
mulb
jmp
call
scas
xor
rolb
dec
mov
fdivs
sbb
add
add
xor
jo
lret
jge
daa
push
jmp
mov
inc
cwtl
sbb
scas
inc
imul
push
lods
mov
das
imul
cmp
mov
jae
int
aas
jge
jl
dec
xor
mov
pop
fidivs
add
scas
xchg
push
dec
iret
cltd
rorl
dec
sbb
sub
orb
lods
movsl
dec
bound
lahf
mov
bound
jmp
jnp
data16
arpl
or
pop
mov
mov
jle
cmp
out
pop
jg
dec
out
xor
loope
icebp
inc
xchg
rol
outsl
pop
stos
out
dec
stc
shl
lock
cmp
dec
sahf
pop
inc
mov
sti
fwait
pop
leave
cld
push
or
call
rorb
cmp
test
aam
and
in
jmp
ret
and
adc
mov
sbb
out
movsl
mov
inc
ljmp
mov
sbb
cmc
fbstp
mov
or
push
jmp
ret
sti
hlt
mov
inc
pop
fiaddl
push
sbb
rorb
pop
movsl
in
mov
xor
fisttpll
cmp
and
pop
and
movsl
gs
mov
mov
jp
pop
icebp
dec
inc
aas
xlat
mov
dec
add
jle
scas
inc
sub
and
pop
repnz
ss
loop
cmp
xlat
inc
ret
mov
sub
aad
xchg
ss
sbb
test
sarb
es
mov
ficoml
jmp
cmp
mov
mov
pop
loope
pop
mov
cmp
imul
mov
add
dec
mov
into
mov
xchg
lea
push
rcrb
sub
popf
dec
jns
ja
push
fstpl
push
mov
jl
mov
dec
sub
imul
add
roll
or
aam
adc
iret
ffree
or
mov
out
lahf
jbe
or
sub
cmc
scas
or
and
bound
mov
fildll
xor
out
dec
fstpl
jnp
and
mov
jne
inc
test
arpl
lods
leave
mov
sub
dec
mov
lret
rolb
rol
cmp
movsl
xor
sbb
clc
ret
arpl
xor
xor
xor
fsub
sbb
les
jns
xchg
insl
sbb
push
xor
push
call
cwtl
jge
cwtl
aad
cmp
gs
mov
cltd
pop
pop
lods
mov
jo
test
jl
cwtl
xor
clc
mov
shll
sub
mov
adc
jge
dec
push
push
aas
int3
lods
in
clc
push
push
cmp
jo
outsb
mov
mov
mov
cmc
push
xchg
outsl
pop
pop
pop
fcomip
movsb
push
xchg
xlat
in
sub
sbb
ljmp
addr16
jmp
inc
iret
xchg
pop
lock
jbe
lahf
mov
and
shrb
aas
in
and
jno
xchg
inc
ret
mov
xadd
dec
and
icebp
stos
mov
add
sbb
xor
jmp
mov
rol
and
pop
xor
int3
call
cli
push
mov
out
shr
testb
enter
sbb
sub
daa
insb
mov
fildll
sbb
sbb
dec
in
and
hlt
dec
cli
ret
mov
dec
xchg
aas
pop
fisubs
or
pusha
roll
out
push
dec
nop
fadds
lea
data16
and
lret
scas
imul
jp
or
jecxz
outsb
lods
xchg
negl
clc
cli
sub
call
imul
or
bound
mov
add
or
jbe
in
cmpsb
push
loopne
or
test
icebp
lret
mov
adc
sub
inc
mov
jo
mov
js
shll
pusha
mov
icebp
js
icebp
dec
nop
pop
iret
mov
cltd
das
dec
loope
lret
xor
xchg
mov
sbb
orb
mov
mov
dec
fldt
sarl
cs
or
mov
aaa
rol
xchg
mov
fistpl
gs
push
insl
aas
xor
mov
movsw
or
sub
and
aas
xor
mov
xchg
mov
push
adc
mov
sbb
jge
cld
sbb
int
or
ds
jnp
lret
int3
fdivs
testb
mov
movsb
mov
in
xor
jo
fldl
push
jecxz
popf
icebp
inc
add
je
outsb
and
mov
lahf
and
push
loop
je
pusha
sbb
cmpsl
pop
push
outsl
sti
in
mov
mov
jmp
jle
mov
outsl
sbb
hlt
xor
mov
nop
addr16
adc
add
loopne
mov
jg
les
adc
and
cli
mov
mov
clc
mov
andl
loope
jmp
test
nop
inc
jne
lret
xor
fldcw
xchg
repz
aad
sbb
sar
cmp
mov
repz
dec
ljmp
dec
call
iret
aaa
or
mov
subb
je
in
xor
mov
nop
andb
cmp
mov
ficoms
icebp
cmc
lock
test
insb
and
ds
stc
arpl
and
jle
jnp
and
fwait
shr
jae
adcb
mov
inc
sbb
daa
and
idiv
jmp
lret
lds
bound
inc
enter
repz
fisttps
inc
cmp
das
push
pop
mov
mov
mov
xor
bound
xor
dec
add
sub
push
dec
test
or
addb
add
dec
jo
inc
iret
in
cmp
roll
jne
outsb
jb
inc
mov
xor
push
test
stc
or
push
or
vpmulhw
pop
lds
scas
shrl
cmp
aaa
mov
add
xor
xchg
movsb
test
mov
dec
movsb
mov
xor
add
int
mov
int3
fisubs
aad
mov
jecxz
gs
loop,pn
cmp
cmpb
movsb
pop
je
mov
sbb
out
roll
aas
sbb
sbb
push
leave
fnstsw
insl
jne
lods
das
fcompl
lds
movsb
push
shlb
mov
stos
xchg
loopne
inc
les
fs
test
push
and
mov
out
out
popf
fdivrs
stc
test
incl
mov
mov
loopne
out
dec
push
xchg
frstor
jge
out
cmpsb
hlt
adc
fbld
loope
sbb
xor
add
mov
jmp
sbb
adc
add
xor
pop
inc
test
out
pop
xor
dec
insb
jbe
fs
mov
or
pop
inc
dec
xchg
scas
in
out
jg
js
dec
ds
call
fildl
xchg
rcll
push
mov
out
xor
sub
mov
fs
sub
pop
sbb
push
dec
inc
xor
and
sbb
mov
aam
imul
cmp
adc
aad
mov
or
mov
addb
lahf
push
in
pop
and
mov
mov
pop
inc
xchg
dec
dec
scas
sub
inc
std
loop
mov
xor
lahf
xchg
daa
arpl
ljmp
xchg
xchg
pop
adc
nop
arpl
mov
fcompl
mov
nop
jle
aas
jne
into
std
xchg
and
add
cmp
cmp
jno
test
popa
adc
fcmovu
add
shrl
push
aam
mov
js
imul
mov
jns
cmc
ret
imul
movsb
mov
jb
lret
mov
push
ja
add
jno
sar
jno
movb
jmp
sub
push
mov
or
or
sbb
mov
push
fnstcw
add
add
out
inc
aas
push
ja
pusha
aas
fisubrl
cld
mov
testb
cmp
adc
mov
mov
sub
adc
fcomp
cmpsb
outsb
test
lret
pmulhw
or
imul
add
movsb
in
imul
cld
sub
adc
xchg
test
mov
sahf
or
cmc
movsb
inc
aam
inc
inc
cmpsb
inc
sbb
sarb
jbe
add
mov
iret
arpl
test
push
sub
cmp
iret
fwait
jno
push
addr16
ret
xchg
js
clc
push
push
mov
fimull
in
test
and
aam
mov
adcl
cltd
push
out
inc
jbe
imul
push
in
mov
push
sbb
mov
jmp
sub
add
mov
or
push
cld
jne
test
push
push
fs
jne
sahf
cmp
sahf
push
call
mov
leave
sub
add
in
out
outsb
mov
and
or
pop
jae
dec
pop
sbb
ret
iret
lds
adc
rolb
inc
mov
hlt
out
pop
sub
call
adc
jno
cwtl
imul
fsubs
shll
jl
popa
mov
xor
sub
mov
sbb
or
jae
sti
outsb
lods
jne
sub
cmp
sbb
fstp
js
hlt
nop
imul
fimull
pusha
lea
or
test
push
ss
test
in
push
leave
push
sbb
int
je
jl
rorl
jl
outsl
pop
push
add
movsl
inc
aad
mov
add
and
jp
mov
and
jl
cltd
pop
loopne
icebp
mov
dec
xor
add
lret
insl
ja
bound
sarb
popa
mull
mov
mov
pop
lea
aaa
imul
test
loope
lahf
imul
xchg
xor
sahf
mov
add
jecxz
out
xchg
sahf
shll
testl
out
push
jmp
sub
jmp
sarl
sub
mov
imul
push
mov
inc
cmpsb
stos
popa
adc
rcr
mov
int3
adc
insl
in
push
nop
aad
int3
ficompl
push
iret
jmp
pop
repz
loop
sti
test
cmp
or
fcoml
iret
cmpsl
sbb
add
ja
repnz
repz
dec
hlt
stos
orl
mov
jb
pushf
xchg
xor
jnp
das
add
testl
ficoms
add
mov
movsl
cltd
mov
push
adc
aaa
pop
out
test
inc
jb
and
xor
jmp
scas
sbb
inc
ja
into
insb
ljmp
rcrb
xchg
mov
aam
inc
mov
xor
fmuls
pop
mov
pop
sbb
lcall
out
sbb
dec
xchg
or
xor
lds
sarl
push
aaa
cld
add
cmp
stos
xor
repnz
cmc
aad
aaa
and
enter
out
pop
std
push
dec
and
imul
sarb
jecxz
pop
cmp
xlat
leave
mov
pop
repnz
cmp
loope
pop
jae
jecxz
pop
pushf
xchg
sbb
inc
cli
jge
push
mov
pop
popf
lods
xor
das
mov
inc
adc
out
jno
adc
sbb
lods
jae
hlt
and
jmp
push
and
jge
mov
jae
imul
jnp
js
add
xlat
adc
adc
sbb
div
icebp
inc
sub
xor
dec
lods
cli
sub
mov
mov
jb
xchg
bnd
jnp
stos
pop
cmp
fcmovnb
outsl
subl
int3
hlt
jecxz
pop
adc
xchg
daa
mov
inc
push
movsb
or
fistpl
int
pop
mov
les
icebp
es
sahf
das
gs
test
push
cwtl
pop
cwtl
xor
push
mov
xor
aas
ss
repnz
and
xchg
inc
les
sarb
js
enter
jns
sbb
xchg
sub
add
cmp
mov
dec
outsl
xor
cmpsl
fildl
out
pushf
hlt
inc
stos
add
inc
jb
sub
cwtl
and
pop
inc
outsl
jae
aas
mov
mov
outsb
sbb
xchg
out
pushf
scas
inc
arpl
push
ret
cltd
faddp
mov
pop
pop
sub
aam
stos
xchg
mov
push
fsubrp
inc
xchg
inc
mov
cltd
cmp
pop
leave
sub
or
mov
mov
loopne
jo
dec
or
sbb
clc
pushf
repz
dec
dec
push
add
int3
pop
push
mov
dec
sbb
inc
into
pop
mov
sbb
int3
ficoms
dec
notb
add
loope
sbb
mov
push
icebp
mov
pop
in
loope
push
mov
and
jp
mov
daa
rcll
inc
dec
mov
outsb
pop
lods
lret
loopne
leave
nop
shl
hlt
pusha
jp
int3
ss
pop
or
mov
data16
stc
je
sbb
mov
sbb
enter
pop
add
nop
loop
dec
cmp
decb
cli
fwait
jl
push
dec
cltd
fadd
mov
push
inc
cmp
xchg
push
stos
or
mov
mov
xor
or
out
test
cwtl
pusha
inc
sub
add
shll
or
add
stc
mov
mov
jmp
and
mov
xor
inc
pop
dec
jecxz
add
repnz
push
mov
mov
jne
enter
jl
aam
sub
mov
into
loope
aad
dec
mov
js
iret
lds
mov
test
outsl
or
lret
mov
add
sbb
je
leave
movsl
and
mov
jge
es
fbstp
xchg
ror
imul
xchg
mov
mov
pop
cmp
dec
inc
xor
pop
in
es
mov
lcall
cmp
lock
xorb
test
mov
rcrl
or
pop
cmp
outsb
outsl
mov
xor
pusha
arpl
test
insb
pop
pop
mov
mov
adc
sar
ss
ljmp
in
andl
xor
jnp
jp
enter
mov
pop
fdivs
arpl
jge
add
inc
pop
pop
pop
loop
movsb
cwtl
and
dec
lret
mov
sub
mov
xchg
push
daa
mov
sbb
push
jmp
je
cltd
ret
add
popa
jmp
xchg
shlb
fadd
dec
push
ficomps
out
adc
mov
imul
sbb
sahf
popf
sub
xchg
mov
jg
mov
mov
adc
mov
fistps
xor
mov
sbb
mov
sub
mov
je
mov
nop
mov
sub
in
mov
mov
or
shlb
sbb
fnstenv
push
leave
lock
mov
ds
mov
inc
sbb
aaa
or
paddq
mov
or
push
pop
movsb
cmpsb
or
clc
es
pop
in
ljmp
add
dec
mov
jle
xor
adc
mov
adc
dec
sbb
imul
ret
mov
jno
jmp
push
sti
out
in
push
cmp
jne
ret
mov
arpl
or
roll
shrl
call
xor
push
cwtl
out
dec
xchg
fcompl
movsl
mov
sahf
mov
push
push
test
outsl
mov
pop
xchg
dec
cmp
popf
repz
mov
jns
xchg
xchg
lods
cwtl
cmp
push
inc
jns
jae
out
in
cwtl
mov
int
loope
dec
mov
jmp
mov
or
cmp
repz
psubusb
ret
lea
dec
aad
mov
add
scas
mov
cmp
adc
ret
adc
out
bound
call
cmpsl
fs
movsb
test
push
test
inc
cmp
into
popf
dec
jle
jle
pushf
dec
movsb
jcxz
mov
clc
mov
cltd
lret
out
insb
jo
mov
jb
out
and
lds
jbe
imull
push
sarb
ja
sbb
or
sbb
xrelease
xor
cmc
scas
push
stos
popa
mov
daa
movb
and
int
sbb
test
shrb
std
in
iret
jecxz
cmc
push
or
or
inc
leave
dec
cli
and
lret
pop
fst
ja
mov
inc
shll
jge
lea
xchg
jl
mov
cmp
fisubs
dec
jmp
jg
pop
pop
cmc
gs
push
je
rcrb
jb
pop
es
imul
xchg
dec
addr16
mov
call
pusha
mov
jecxz
stc
mov
lds
fyl2x
fpatan
arpl
sbb
nop
hlt
pop
ljmp
adc
sub
sahf
cmp
es
rolb
dec
pop
dec
or
test
push
fwait
sub
imul
mov
iret
jae
cmc
in
mov
mov
inc
push
cmp
fwait
jo
out
arpl
pop
testl
xor
xchg
mov
aad
add
adc
adc
add
ret
out
fs
mov
cmp
daa
stc
addr16
pop
mov
mov
sub
add
or
test
cmpsl
shll
sbb
adc
lods
fistl
aaa
add
cmp
out
ret
xlat
pop
test
adc
aam
xor
xor
mov
push
sahf
icebp
dec
fcmovbe
sub
imul
movsl
xor
xorb
xchg
sbb
fxch
inc
lock
movsb
mov
xchg
push
outsb
repz
cld
fbstp
into
jns
aam
sub
push
sbb
clc
adc
orl
std
fiadds
lods
jne
adc
or
mov
xor
call
sqrtps
xor
dec
jne
gs
mov
loope
jmp
stos
add
mov
pop
inc
sti
dec
icebp
pop
sub
sar
repnz
imull
outsl
dec
jno
xor
sbb
pop
sbb
or
sub
cmpsl
sbb
xchg
icebp
cs
insl
sub
xchg
xchg
mov
xadd
mov
or
dec
jp
xchg
add
sub
movsl
xor
inc
daa
xor
insb
inc
imul
adc
dec
in
pop
sub
jae
or
ret
jp
sbb
in
xchg
inc
mov
nop
stos
fs
cld
push
sbb
ret
cld
imul
dec
sbb
xchg
lcall
aam
adc
out
stos
sahf
and
push
lcall
mov
adc
jp
pop
outsl
js
inc
inc
push
adc
psubsw
inc
loope
test
imul
lock
add
fnstsw
pop
fstpl
push
mov
popa
mov
adc
jne
xlat
jnp
and
leave
xchg
push
cmp
shrl
jb
mov
sarb
shlb
pop
iret
call
loope
fidivrl
in
sbb
push
push
inc
cld
shlb
pop
cmpsl
dec
xor
lods
out
int
jns
sti
fmul
xchg
insl
sub
rorb
scas
adc
jnp
in
int3
inc
mov
mov
inc
lret
inc
ret
jecxz
ret
rcrl
cmp
cmp
adc
xchg
test
int
repz
outsb
add
push
mov
leave
negb
dec
push
xor
insb
sbb
mov
ds
push
add
stos
adc
push
sbb
mov
cmp
loopne
in
mov
inc
push
inc
push
dec
arpl
inc
pop
aas
push
imul
adc
std
inc
mov
les
adc
cmp
scas
mov
jbe
loope
jp
pop
xor
mov
xchg
dec
sarl
es
push
adc
out
stc
mov
sti
jl
adc
out
ja
daa
test
lock
jg
test
adc
les
sub
mov
hlt
sub
fisubs
sbb
mov
lret
std
pop
push
or
std
inc
mov
mov
sbb
sub
mov
jmp
mov
popf
popf
nop
adc
mov
sbb
shlb
or
cmpsb
adc
jo
mov
loope
clc
dec
pop
enter
lds
movsb
inc
xchg
or
xchg
rcrl
xchg
cli
push
cmp
lahf
fsubl
ret
dec
out
lods
repz
ret
sbb
mov
dec
cmp
push
adc
pop
idivb
mov
dec
clc
lcall
shlb
rcr
sub
xchg
lods
mov
dec
int
insl
mov
mov
jge
ret
inc
mov
mov
or
xor
call
jmp
cmpsl
push
stos
aad
cltd
inc
mov
or
jo
add
fcoml
fisttpll
std
lcall
aam
xchg
inc
daa
ret
inc
sub
mov
xchg
push
sahf
jmp
jmp
mov
add
jno
vpaddusw
ljmp
and
inc
imul
pop
push
aam
sbb
pop
mov
lock
dec
bound
dec
mov
ud1
cs
cld
les
mov
jnp
jl
jecxz
jg
mov
ja
mov
xor
int3
rclb
loop
dec
out
loopne
nop
inc
push
test
xchg
push
sub
movsl
rcrb
je
sub
push
mov
xor
xchg
roll
cs
push
xchg
jnp
dec
ljmp
outsl
xchg
push
mov
subl
xor
mov
out
xchg
fadd
inc
pop
cmp
push
leave
xor
jmp
mov
push
adc
js
mov
fs
add
insb
scas
sub
ss
mov
cld
inc
jb
sub
dec
jcxz
push
stos
mov
dec
dec
cmp
js
stc
dec
add
xchg
mov
push
enter
idivl
adc
add
cwtl
mov
cmp
mov
out
mov
mov
loopne
and
pop
dec
notb
cltd
sbb
cmp
mov
dec
inc
jae
outsl
cmp
push
stc
jecxz
dec
fimuls
jb
xchg
mov
adc
or
enter
sbb
jp
pop
or
cs
dec
pop
in
jmp
push
jae
into
sub
movsl
rcll
mov
jns
cmpsb
andb
fldenv
jo
pop
sbb
test
inc
dec
gs
cmp
ljmp
ds
add
aas
outsb
roll
push
movsb
jp
inc
and
xor
dec
ljmp
clc
std
pushf
dec
mov
fidivs
sbb
cmp
les
adc
cltd
testb
push
aam
jo
push
xor
loopne
jns
scas
cltd
or
addr16
pop
hlt
lcall
outsb
mov
cmpsl
popa
mov
jae,pn
pop
jnp
les
jl
rcrl
popa
sarl
mov
daa
jae,pn
call
sbb
cmp
pop
xchg
lods
mov
imul
jp
pop
sbbl
xor
dec
je
sarb
roll
push
orb
cli
scas
xor
xor
ljmp
enter
sbb
inc
xchg
or
pop
scas
das
in
mov
mov
inc
cmp
cwtl
mov
jo
outsl
jno
jp
inc
add
pop
int
andl
loop
mov
mov
xor
aad
int3
jbe
ret
jmp
into
jg
lcall
les
jp
into
mov
cmp
jle
movsb
push
das
fisttps
int3
das
pusha
add
int3
pop
rcrb
dec
push
cmp
cli
in
rorl
popa
sbb
sbb
xchg
push
fisubl
out
xchg
sub
mov
lea
rolb
lea
cmp
jle
leave
pop
xor
lahf
xchg
mov
rcrb
jns
add
add
jo
or
mov
outsl
sbb
and
cmpsb
sbbl
clc
nop
rorl
cli
das
movl
sub
popa
andb
xchg
mov
rcrb
sbb
fnstsw
sahf
arpl
ficomps
adc
je
daa
cmpsl
frstor
int
sub
sbb
daa
push
adc
push
xorl
rclb
jle
xor
or
lods
dec
pop
ljmp
imul
mov
mov
cld
loop
stos
stos
cmp
lret
adc
push
inc
sbb
add
stc
xor
lods
mov
or
addr16
mov
xchg
test
pop
hlt
dec
mov
cli
in
xorl
add
scas
inc
dec
inc
mov
arpl
push
roll
aad
test
pop
loop
es
add
mov
fnstsw
gs
nop
jge
testb
repnz
cmpsl
cmpl
mov
lret
shlb
mov
hlt
int3
dec
mov
xor
fdivrp
call
and
add
lods
push
mov
mov
lds
lds
mov
adc
or
and
pop
mov
fsubs
lahf
mov
dec
bound
sub
std
out
mov
pop
cli
jo
xor
sti
xchg
fs
int
lods
jbe
fbstp
repz
jb
mov
dec
lods
sahf
lods
adc
cmpsl
pop
scas
sbb
sub
xchg
mov
xchg
jecxz
fimuls
inc
pop
stos
sbb
xchg
and
dec
fdivrl
ds
stos
xor
inc
add
and
lahf
lds
xchg
aad
ljmp
lret
inc
jle
mov
jecxz
jecxz
mov
inc
hlt
mov
into
stc
mov
or
arpl
and
push
jg
mov
add
cmp
loop
jp
lcall
or
mov
sub
xchg
mov
xchg
movswl
test
lea
rcrb
imul
mov
inc
fwait
jbe
bound
mov
repnz
or
outsl
jo
out
cltd
and
out
mov
sbb
outsb
mov
in
jle
jp
jne
cwtl
xchg
pop
dec
mov
in
inc
aad
sbb
int
sbb
xchg
cmp
adc
pop
outsl
dec
js
add
dec
imul
mov
ds
out
mov
cmp
xchg
jecxz
mov
inc
ficoml
flds
or
test
roll
in
js
daa
mov
and
sti
or
sarb
push
sbb
pop
mov
out
cmp
aam
rcl
mov
ja
cmp
repz
jg
mov
cmp
xchg
add
or
dec
loopne
push
mov
out
and
xlat
inc
or
xor
ffreep
outsb
lea
mov
repz
movsl
cwtl
jecxz,pn
mov
or
out
scas
shlb
cmp
sbb
pop
jb
jae
cltd
in
pop
push
fdivs
mov
adc
mov
or
mov
push
jecxz
cmp
mov
jo
mov
add
mov
xchg
cltd
stos
inc
or
dec
ret
fucomi
add
popa
jl
pop
test
scas
add
lret
js
sbb
jns
and
in
jo
test
js
xor
mov
cld
mov
mov
imul
in
add
xor
test
dec
add
mov
cld
inc
mov
out
dec
mov
sbb
jo
and
inc
cmp
sbb
clc
in
sub
jnp
pop
sub
shrl
outsl
and
cmpb
repnz
aad
xchg
imul
shrl
and
addr16
lret
jp
jecxz
aad
and
aas
fildll
cmc
out
loope
jl
insb
lods
out
pusha
js
negl
shll
sub
nop
mov
loope
cs
push
in
mov
xchg
mov
hlt
jae
add
xchg
in
enter
xchg
adc
mov
int
aam
fistl
shrl
and
or
fcmovnu
jl
xor
movswl
pop
imul
xor
ret
std
lds
daa
xchg
or
loope
dec
out
cltd
pop
clc
mov
mov
inc
inc
cs
mov
mov
adc
sbb
mov
cmp
mov
push
xchg
mov
or
fmuls
gs
xchg
orl
mov
push
fs
ret
test
and
ss
mov
out
add
fistpll
and
push
sbb
ret
inc
shl
fmull
mov
adc
or
inc
rcrb
xchg
mov
fadds
insb
out
fisubs
and
inc
mov
leave
pushf
rorb
xchg
xor
cmc
call
pop
pop
jbe
add
xor
pop
xchg
jne
xchg
shrl
cltd
sbb
lods
mov
loop
bound
mov
lods
xor
push
xlat
jecxz
out
xchg
les
jge
pop
xchg
ret
or
mov
jo
test
lock
test
ret
inc
ret
inc
and
in
cmp
shll
mov
mov
aam
je
push
inc
js
mov
xchg
ret
push
and
mov
icebp
add
scas
clc
pop
push
inc
jae
arpl
cmp
ja
ds
fbld
pop
pop
insb
fcoms
fnsave
stos
daa
and
enter
das
jmp
enter
xor
les
iret
inc
pop
cmc
jne
jnp
mov
inc
cmpsb
xchg
mov
jle
int3
cmp
insl
sbb
push
mov
ljmp
adc
pop
mov
sbb
mov
inc
out
fmull
and
mov
int3
in
mov
push
push
notl
mov
cmp
or
xchg
jle
orb
mov
pushf
mov
pop
test
mov
inc
mov
aad
sbb
lods
sub
adc
push
push
cmpsl
out
mov
int3
xor
fldcw
bound
in
or
push
push
xchg
dec
icebp
mov
cmc
into
add
dec
dec
aam
repz
hlt
cmp
jno
jmp
lods
and
test
mov
xchg
mov
in
add
outsb
add
pop
xchg
xor
cmp
sbb
mov
iret
stos
cmp
pop
insl
das
and
xchg
inc
push
pop
test
mov
nop
sub
andl
pusha
aam
nop
cwtl
sti
bound
out
jmp
lret
sti
addr16
sahf
push
dec
xchg
adc
xor
dec
xor
ja
notb
sub
outsl
pop
fidivrs
cltd
in
repnz
xor
lret
arpl
lahf
sub
testl
mov
in
jmp
stos
inc
and
lds
sbb
cmpsb
aas
jecxz
lods
arpl
cltd
mov
sub
fmuls
inc
or
mov
das
or
leave
popa
xor
insl
sub
jge
aam
add
repz
call
int
hlt
and
xchg
mov
dec
rclb
hlt
rcrl
jb
add
popf
sbb
out
cmp
mov
scas
jo
sar
push
cmc
int3
out
jno
into
out
sub
addr16
aam
test
sarb
sbb
cmpsl
scas
cmp
jmp
je
and
rcrb
mov
outsl
push
nop
call
lea
xlat
int
xchg
push
stc
fsubrs
ss
dec
je
dec
movsb
jp
jle
push
mov
push
std
lret
adc
loopne
imul
and
iret
inc
push
sbb
aad
add
sub
lahf
das
shll
xchg
stos
inc
lods
or
addr16
movsl
add
lahf
cmpsl
pop
movsb
sbb
leave
xchg
mov
dec
pop
dec
fstl
out
or
pop
fidivl
xorb
in
xchg
add
adc
sub
bnd
push
mov
rcr
inc
xor
or
fiaddl
xlat
push
add
xor
leave
inc
cmp
ds
pusha
ret
lods
inc
mov
sub
je
movsb
xchg
mov
push
aam
roll
out
aam
push
adc
push
mov
mov
icebp
out
sub
popl
and
in
ficompl
sub
addr16
xor
ljmp
mov
sbb
js
cmpsb
sti
pop
jp
in
and
std
mov
sbb
cmp
sub
adc
sbb
insl
mov
dec
imull
mov
mov
cmp
iret
fcmove
inc
mov
arpl
inc
pop
dec
sbb
cmp
push
jge
or
dec
push
cmp
dec
clc
push
fnstsw
mov
scas
jl
repz
or
jmp
arpl
lds
lods
inc
clc
pop
into
loope
scas
inc
out
mov
adc
imul
out
rcl
jns
aam
cmc
xchg
and
pop
push
adc
fwait
fs
out
mov
xchg
pop
shlb
in
mov
jl
mov
int
mov
lods
xchg
mov
outsl
jne
adc
jmp
push
adc
xor
sahf
ret
dec
pop
cmpsl
lahf
stc
in
sub
mov
push
pop
mov
rcl
fisubs
xchg
pop
stos
sti
add
cld
or
inc
xsave
sbb
mov
push
and
push
int
ja
push
xor
mov
push
std
or
test
leave
inc
daa
jmp
movsb
jge
push
scas
mov
add
cltd
inc
lods
insb
dec
adc
out
mov
lock
push
shlb
cli
frstpm(287
pop
mov
imul
testl
cmp
or
add
xchg
arpl
inc
mov
sub
out
push
movsb
sub
pop
ret
insb
adc
scas
cmp
aaa
push
icebp
in
fsts
fistl
add
out
push
lock
sbb
dec
leave
push
rclb
jmp
movsl
push
test
cmc
hlt
xor
pushf
lods
fst
cmp
mov
nop
mov
cmp
mov
sub
gs
cwtl
push
push
pop
pop
std
dec
divb
clc
outsl
into
or
dec
cld
and
inc
cmpb
cmp
aas
scas
je
rcrl
xchg
out
jbe
cltd
mov
pop
or
or
xchg
enter
mov
jecxz
out
pop
and
push
sarb
cwtd
jae
shrl
arpl
sub
gs
or
add
cs
xor
sbb
cmpsb
jb
mov
xor
dec
xchg
movups
addr16
stos
push
outsl
mov
xchg
push
xor
arpl
inc
fs
dec
bound
mov
xor
sbb
shr
push
and
out
call
movsb
jg
and
sub
xchg
subl
pop
scas
enter
dec
push
mov
push
xor
jge
xchg
jae
dec
pop
dec
adc
push
fisubl
xchg
test
push
filds
roll
inc
adcl
fdiv
mov
std
mov
push
ljmp
jne
in
ja
jo
adc
inc
movsl
or
test
jle
jl
fmull
xchg
cmpsb
mov
insl
add
mov
xchg
fcoml
loop
loop
or
popa
mov
mov
xor
mov
inc
dec
mov
jge
xchg
ss
xchg
sub
xor
adc
adc
push
pop
mov
jl
cmp
cmp
inc
insb
aam
pop
mov
cmp
call
popf
add
std
clc
xchg
xor
jbe
mov
imul
push
lret
jge
and
sbb
or
sub
out
and
and
in
sub
lcall
xor
pushf
cmp
mov
shll
pop
ljmp
xchg
add
xor
mov
gs
jae
fs
ret
jp
test
sub
mov
inc
rcrb
data16
loopne
aad
ret
in
sbb
mov
pushf
mov
sub
test
mov
insb
test
cltd
lods
jne
cli
movsb
jmp
and
inc
in
out
addr16
pop
lret
jae
push
fwait
jbe
mov
mov
dec
lcall
push
adc
cmp
dec
xchg
xor
jne
fisttpll
mov
push
fcoml
andl
pop
mov
push
or
rsqrtss
frstor
cmp
repz
stos
mov
pop
mov
push
cmc
psubsw
repnz
xchg
mov
dec
das
xor
push
mov
popa
sbb
sbb
ret
std
inc
mov
sbb
and
out
inc
enter
lcall
scas
mov
aaa
xchg
cltd
xchg
stos
mov
xor
scas
dec
cwtl
xchg
es
out
or
sbb
sbb
xor
clc
fbstp
or
pop
and
sub
lea
mov
sti
and
jmp
inc
pop
fcoml
cmp
adc
fstl
sbb
pop
push
adc
xor
mov
ret
lret
aad
inc
in
inc
adc
push
scas
mov
fisubrl
push
fsubr
fldl
mov
xchg
mov
adc
out
cmp
cmc
push
mov
daa
add
test
inc
inc
inc
add
pop
sub
iret
lahf
test
push
fldenv
out
and
leave
add
sub
loopne
dec
orl
mov
xchg
sti
out
sbb
sbb
jg
or
xor
dec
fs
adc
mov
into
sti
mov
fisttpl
test
jb
xchg
push
cmp
inc
iret
repnz
popf
xchg
or
movsl
roll
aad
push
dec
mov
sbb
repz
fwait
addr16
mov
popa
jecxz
jno
es
dec
test
jbe
pop
jno
lret
mov
push
xchg
jge
dec
mov
add
inc
pop
cli
imul
loope
fidivs
fbstp
mov
dec
pop
mov
xchg
in
sti
mov
mov
inc
cmc
and
mov
mov
or
insb
sbb
addl
mov
lea
inc
mov
jns
sbb
push
mov
loop
ss
push
xorl
mov
pop
loope
ds
jg
push
nop
sbb
sbb
sub
mov
push
imul
lock
lods
pop
jmp
mov
sub
sub
inc
daa
cmp
fstps
shr
push
jae
mov
call
lret
inc
imull
js
insb
ds
pop
lds
mov
iret
inc
mov
xor
and
push
out
xchg
ret
lret
icebp
ret
enter
cmpsl
sahf
rorb
mov
enter
jns
pop
popa
add
dec
dec
ret
into
cltd
cmp
xor
or
incb
call
cmp
mov
adc
inc
aaa
arpl
imul
fldt
jl
into
and
imul
push
ret
and
aad
and
xor
call
push
jecxz
jl
scas
cli
adc
dec
ja
movsb
push
mov
cli
jb
sub
jecxz
divb
xor
scas
cmovae
mov
cmpsl
add
push
xchg
jns
sub
and
sub
mov
sub
adc
cmpsl
dec
out
fs
lret
dec
cmpsl
frstor
data16
out
mov
hlt
mov
mov
jo
or
shll
pushf
jae
incl
sub
insl
lods
mov
bnd
and
and
popa
lret
mov
push
jns
mov
test
pop
pop
jmp
leave
pop
cs
adc
adc
xor
add
inc
adc
loope
sbb
ds
jl
cmc
mov
mov
cmpsb
mov
sbb
stos
xlat
lds
push
out
xor
scas
into
call
sub
adc
repnz
cmp
xchg
bnd
mov
test
adc
movsl
lea
mov
lods
mov
leave
andl
inc
clc
clc
push
mov
imul
stos
sub
popa
outsl
sub
sub
inc
cmc
push
inc
xchg
jns
cmp
add
and
out
stos
pop
mov
mov
imul
iret
movsl
sti
push
mov
xchg
xchg
xchg
xchg
xchg
pusha
xchg
adc
add
stc
push
mov
inc
lahf
mov
add
lahf
mov
mov
insl
mov
or
cli
je
sub
daa
ficomps
in
outsb
aam
jle
xchg
or
xor
sbb
fcmovnbe
fs
aaa
push
dec
das
lret
or
add
push
pop
out
and
imul
mov
mov
push
adc
xchg
push
add
jl
sbb
xchg
mov
dec
jnp
data16
fimull
addr16
dec
sarl
sub
adc
sbb
cmp
pop
xor
and
out
insl
stos
push
mov
xchg
fists
sarb
outsb
inc
xchg
fdiv
cmpl
ss
leave
les
shl
in
mov
bound
stc
pop
out
fs
imul
lock
cmc
push
nop
ja
mov
sbb
cmpsb
in
lock
test
int3
cli
fisttps
mov
je
sbb
arpl
inc
xchg
xchg
inc
sbb
inc
out
clc
fidivs
pop
push
rorl
ret
fcoml
aad
rol
mov
mov
repz
mov
sub
adc
cwtl
in
push
fucomi
loop
ret
xchg
fstl
xor
inc
mov
inc
mov
mov
mov
xor
push
and
push
mov
jl
aas
and
mov
mov
sub
mov
ds
or
or
xor
ds
sbb
xor
dec
outsl
call
lahf
ljmp
out
jo
lcall
aad
sub
dec
sub
add
ss
ja
inc
sub
out
mov
stos
lret
cmpsb
jno
daa
dec
push
cmp
cltd
dec
mov
dec
push
mov
and
cmc
movl
and
aas
cmp
out
sub
jmp
arpl
int
lcall
pop
testl
icebp
arpl
out
ret
mov
scas
dec
test
out
mov
imul
and
outsl
push
pop
inc
gs
das
loopne
add
push
out
sbb
repnz
cmp
inc
xor
lods
mov
in
cs
push
cmp
push
fidivs
cld
std
add
mov
jns
enter
imul
repnz
enter
shlb
add
add
sbb
jb
sub
loopne
fnstcw
pop
dec
stos
mov
outsl
pop
push
jecxz
inc
push
mov
rolb
add
mov
jmp
mov
fyl2x
test
cld
pop
and
shlb
repz
mov
sbb
inc
and
xchg
xor
into
test
mov
movsl
sbb
hlt
lcall
lods
iret
mov
pop
pushf
repz
adc
outsl
xor
rorl
add
mov
enter
jl
std
or
dec
xor
and
mov
inc
cmp
in
push
pop
shlb
or
outsl
shrl
ljmp
cli
add
je
and
xchg
stos
out
adc
sar
sub
jae
dec
lds
xchg
icebp
popf
scas
push
fs
or
daa
sub
and
and
mov
insb
insl
sbb
dec
pop
mov
popa
adc
out
cmc
or
rorl
scas
pushf
or
std
fstps
movsb
jno
dec
xchg
inc
xlat
add
std
pop
aaa
dec
cmp
subl
jg
jno
push
or
fists
xor
xchg
dec
in
jno
push
xchg
dec
notl
adc
shl
or
fstpl
orb
push
stos
movsb
int3
shlb
fiadds
adc
loope
and
cmp
and
mov
jmp
cwtl
mov
xchg
mov
jle
insl
mov
pop
cmc
bound
bound
jbe
sahf
cmp
out
mov
push
lds
cmpsl
test
xor
mov
add
lcall
idivb
movsb
ret
lcall
mov
fldpi
pop
mov
cltd
andl
cmp
dec
adc
fs
test
xchg
in
or
iret
mov
mov
imul
fwait
into
fists
xor
jle
fstpl
out
dec
stos
lods
pop
out
cmp
sub
jbe
mov
iret
in
mov
cld
adc
or
ret
ss
inc
stos
or
xchg
fistpll
gs
or
and
ja
call
xchg
js
jp
pop
les
addr16
and
pop
push
test
data16
int3
sbb
xor
cmpsl
stos
mov
jl
inc
sti
jg
and
test
jmp
jmp
cmp
mov
out
xlat
cltd
icebp
loope
into
or
dec
ja
mov
mov
sahf
and
vsqrtsd
shrb
shlb
sbb
adc
fwait
insl
mov
jle
xchg
mov
inc
push
xorl
cmp
cmpsb
fs
arpl
push
in
mov
out
fmuls
aas
repz
xor
stos
cmp
xchg
jns
jbe
iret
sahf
mov
hlt
jge
dec
outsl
inc
shll
pushf
imul
pop
ret
leave
mov
rclb
scas
inc
mov
test
jmp
mov
stos
add
xchg
or
lret
cld
cltd
andl
notb
dec
or
ds
and
mov
ljmp
adc
pop
mov
mov
mov
mov
and
mov
mov
xchg
mov
je
lods
dec
pop
mov
sub
inc
or
insl
and
add
hlt
sub
xor
in
jnp
sar
mov
xor
in
sub
out
lock
and
lret
lahf
leave
mov
adc
jp
movsl
lock
mov
lahf
push
mov
addl
push
sub
inc
add
xchg
movsb
iret
push
jecxz
out
aad
aam
adc
and
push
adc
out
xchg
pop
sti
cwtl
add
mov
andb
fdivs
xchg
xchg
mov
lods
cmp
ljmp
fninit
pop
jmp
xlat
xor
and
sahf
mov
push
insl
lock
lcall
push
mov
pusha
and
sub
fidivl
ja
push
cltd
lock
inc
jb
into
xchg
dec
repnz
test
dec
pusha
sub
xchg
mov
nop
lret
cld
xchg
loop
gs
add
jmp
sub
test
dec
add
test
inc
pop
inc
aaa
sahf
aad
leave
jge
sahf
inc
test
cltd
pop
dec
xor
jno
in
mov
lea
out
push
fs
neg
test
arpl
add
sub
addl
ds
in
nop
out
test
mov
stos
insl
addl
mov
xchg
cmpsl
popf
sub
add
mov
dec
inc
je
fmull
xchg
mov
inc
jae
jg
inc
and
lock
sub
sub
mov
push
mov
or
mov
pop
sbb
sub
add
push
dec
jb
mov
cwtl
inc
inc
std
fidivl
lock
and
jmp
jl
dec
add
outsb
adc
loop
xor
shlb
jbe
loope
rcrl
aad
fdivs
mov
mov
pop
xchg
push
insl
dec
jae
fimuls
in
nop
enter
xor
pop
mov
pop
aam
dec
xlat
cmp
testb
pop
es
ret
jbe
mov
add
dec
jns
dec
inc
lea
fildll
out
ret
clc
sub
mov
outsl
stos
stos
aaa
sub
jl
add
push
data16
pop
push
mov
loopne
bound
dec
lret
and
lock
out
mov
arpl
push
call
data16
lods
add
movl
push
fcomps
daa
addr16
cmp
cmp
mov
pop
dec
outsl
lds
mov
jo
xchg
lcall
pop
ret
mov
cmp
mov
stc
sub
cmp
cmp
unpckhps
insb
add
out
mov
test
mov
out
sub
dec
sbb
push
gs
sub
cmpl
adc
hlt
jg
and
mov
fcoms
stos
mov
dec
dec
xorl
adc
imul
adc
pop
and
aaa
out
dec
add
inc
inc
clc
dec
mov
and
mov
jb
cmpsb
leave
pop
and
xlat
jp
sahf
jmp
xchg
aas
negl
test
mov
ret
mov
cli
stos
xchg
insb
lahf
mov
jle
mov
jo
fdivl
add
cmc
mov
ret
xor
cmp
clc
jecxz
enter
call
lret
ret
xor
lds
mov
inc
or
cmpb
repnz
divb
xchg
es
mov
sub
cmp
mov
loope
sub
dec
mov
lds
fstpl
add
outsb
jae
adc
jecxz
dec
sbb
pmaddwd
xchg
add
cmpsb
push
scas
adcl
popf
mov
imul
cmp
push
inc
inc
mov
pop
push
test
xchg
sub
clc
mov
dec
pop
sbb
mov
in
cli
xor
aad
mulb
or
add
faddl
sub
lds
add
fwait
icebp
repz
xchg
mov
jo
jg
in
mov
cs
add
popa
or
jns
mov
sbb
adc
sub
dec
lret
and
cmp
daa
leave
iret
insb
or
stos
jp
mov
inc
popf
mov
gs
cwtl
insb
pusha
test
xchg
add
scas
std
sub
orl
lahf
cli
mov
add
out
insl
clc
scas
int3
fs
pop
and
xor
add
pop
adc
xor
mov
ret
js
xor
add
das
pop
cmc
xor
pop
ret
fs
push
and
mov
shll
dec
call
popf
stos
xor
jmp
xchg
pop
ret
push
jp
mov
aad
mov
cli
out
divb
insb
xchg
mov
mov
cmp
imul
test
cs
inc
sti
popa
mov
jmp
or
or
pop
aaa
adc
xchg
and
call
and
lods
pop
movsb
fdivrp
clc
jb
scas
icebp
loopne
jp
push
pusha
sbb
mov
aam
enter
jecxz
and
jo
jae
xchg
adc
stos
sub
dec
mov
adc
lods
cmp
sub
clc
bnd
cltd
mov
add
popa
into
cmp
and
lret
lods
bound
sub
outsl
sub
xor
dec
inc
ljmp
arpl
ds
cmp
cmpsl
xor
js
leave
call
not
dec
xchg
outsl
test
sub
adc
out
js
and
inc
xor
loopne
mov
push
ret
mov
inc
ss
lret
inc
int3
sbb
pop
popf
leave
das
add
mov
cmp
das
outsb
aas
inc
insb
sbb
imul
inc
imul
add
mov
adc
push
inc
shl
scas
jbe
fidivl
cmp
xchg
mov
sbb
sbb
repz
mov
sbb
pop
iret
xor
dec
ss
push
xchg
xor
push
jge
idivl
and
pop
add
into
xchg
mov
mov
ret
test
rorb
hlt
sbb
add
cs
jp
pop
test
xchg
scas
iret
shrb
daa
outsl
repz
testb
pop
shl
out
adc
in
fsubs
fs
sub
xchg
mov
fs
ljmp
pushf
sbb
jne
pushf
xor
nop
mov
mov
or
hlt
shll
pop
outsb
dec
push
xchg
or
mov
iret
jne
add
mov
mov
xchg
into
or
xchg
sahf
pop
daa
out
sarl
pushl
test
jae
jae
les
imul
inc
mov
push
cmp
lea
push
push
arpl
adc
xchg
adc
aaa
lahf
dec
adcb
and
or
mov
aam
inc
mov
adc
notl
pop
mov
ljmp
les
add
mov
xor
sub
xor
xchg
in
dec
icebp
mov
aam
dec
sarl
cmp
mov
fstps
mov
scas
mov
xchg
loopne
push
mov
push
sbb
stc
jle
and
mov
xor
and
mov
dec
cmpsb
mov
xchg
mov
cmp
int
pop
int
test
sub
mov
fistps
lds
push
insb
popa
jnp
jl
or
roll
push
pushf
xor
mov
inc
gs
fcoml
inc
xor
out
sub
shlb
jno
sub
sub
aas
sbb
cld
cli
je
icebp
add
in
cmpsl
cmp
sbb
push
loope
or
jo
ret
sub
sub
movaps
add
pop
pop
out
xor
ja
popf
mov
enter
fidivl
lea
imul
fadd
into
jns
jo
inc
dec
out
ja
ficompl
mov
push
push
les
push
test
xor
adc
add
shll
fisubs
adc
je
negl
psubusb
sub
jecxz
adc
mov
jecxz
gs
mov
adc
int
sub
and
pop
mov
test
mov
cmp
cmp
xchg
in
into
fildll
lock
lcall
icebp
out
out
xlat
pop
and
and
or
in
xor
and
cltd
push
sbb
cmp
sub
repz
iret
leave
inc
int
movb
dec
jbe
and
pop
push
mov
cmp
pop
lcall
cmp
repz
test
mov
mov
addb
pusha
mov
mov
or
pop
sarl
xchg
int3
mov
shrl
mov
push
push
mov
push
sub
in
sub
mov
adc
cmp
test
enter
hlt
push
jno
push
scas
inc
mov
imul
sub
dec
and
pop
call
fstpl
sahf
xchg
je
lret
jmp
int
movsl
sbb
add
cmp
and
aad
xchg
aad
xchg
cld
add
sub
mov
jmp
hlt
cmp
jge
sbb
mov
fisubrl
mov
popf
imul
and
mov
daa
jp
cwtl
xor
dec
push
inc
push
into
lds
or
inc
xchg
pop
enter
sbb
xchg
int
mov
push
mov
call
mulb
adc
push
jecxz
movsb
inc
rclb
inc
and
dec
repz
xchg
test
or
mov
negl
cmc
outsb
out
push
sub
dec
imul
cmpsb
push
test
xchg
lcall
jno
mov
inc
pop
ljmp
sub
int3
inc
sbb
dec
mov
js
mov
psrad
test
jo
call
and
mov
jge
out
int3
hlt
jbe
cli
mov
xchg
jo
sub
lock
lahf
inc
clc
loopne
mov
adc
scas
xlat
jns
pusha
cmp
jbe
cmc
sbb
mov
push
scas
in
pushf
stc
push
int3
xchg
push
push
dec
int3
add
loope
cmp
add
pop
aam
cmc
shr
pop
mov
or
ud2
into
test
mov
arpl
inc
sub
push
push
mov
fs
fldcw
mov
or
out
jmp
xchg
inc
and
ret
sbb
xor
negl
mov
dec
pop
gs
loop
mov
pop
je
add
int3
stc
mov
cwtl
pop
daa
adc
outsl
cmp
test
or
jp
lcall
sub
pop
push
pop
push
outsl
je
cmp
fs
popf
stos
std
sbb
pop
sub
push
jb
pop
in
or
inc
pop
test
jge
jae
lcall
add
jmp
jo
shrl
mov
cld
or
add
pop
jge
int
pop
insl
lret
cmpsw
xor
into
jmp
lret
pop
add
mov
fmulp
and
jne
pop
inc
rcl
adc
fwait
mov
pusha
xlat
mov
mov
mov
mov
adcl
sbbb
inc
mov
pop
inc
cmp
or
aad
xchg
mov
mov
js
dec
popf
bnd
cmp
push
fcoml
adc
js
sub
jle
lods
out
repnz
push
sbb
sti
shr
shrl
stc
xchg
or
mov
jns
adc
inc
stos
adc
jp
fs
dec
in
lcall
iret
rcr
mov
hlt
push
mov
sub
cld
mov
cmp
stc
in
inc
cmp
inc
cwtl
fcoms
xchg
ja
jmp
xor
adc
insb
push
adcb
loopne
mov
movsl
and
je
and
lock
sti
dec
add
pusha
lock
cmp
pop
repnz
sbb
xor
lret
jne
sbb
loope
mov
je
or
in
dec
stos
ljmp
popf
out
push
or
rolb
js
nop
lret
sbb
int3
inc
add
cmp
xchg
cmp
aas
sub
jmp
incl
mov
roll
imul
lods
notl
xchg
and
mov
lahf
pop
sub
inc
cld
and
sbb
adc
cmc
repz
je
pop
adc
jecxz
cltd
cli
dec
jp
call
xchg
lods
jmp
dec
mov
inc
ja
and
cmp
mov
js
pop
mov
mul
mov
cmpsl
sub
jle
stos
pusha
daa
mov
mov
xor
pop
fdivl
rcll
stos
mov
pop
xor
dec
das
mov
aad
shrb
mov
pop
dec
leave
inc
into
lahf
shr
adc
sub
mov
insb
and
sub
dec
xor
clc
pop
pop
sbb
clc
dec
jge
or
jne
mov
outsl
popf
jne
nop
sbb
jl
jno
loope
jb
sbb
test
mov
xchg
cmp
aam
push
adc
out
ja
mov
push
outsb
popa
and
pop
jg
xor
ss
out
add
inc
mov
imulb
mov
mov
dec
loope
into
outsl
aad
jnp
mov
mov
adc
sub
adc
pop
xchg
mov
loop
imul
mov
pop
push
aaa
gs
dec
fstps
push
dec
lret
pushf
xchg
outsl
insl
xchg
or
push
pop
jno
xchg
ret
jae
jnp
cmp
push
mov
je
insl
iret
add
adc
sarb
mov
cli
out
ret
lret
mov
das
dec
js
push
cltd
shrb
push
sbb
mov
out
or
ljmp
and
ds
cltd
icebp
cs
sub
outsb
cwtl
aad
imul
test
mov
out
lods
stos
push
or
imul
pop
pop
cmc
test
mov
xchg
movsb
ret
test
rorl
iret
lret
jnp
pop
sbb
loope
pop
dec
jle
es
xchg
stc
loope
fcoms
lret
xchg
int3
shll
cld
cs
inc
inc
jb
sti
lea
cs
push
faddl
jno
mov
add
xchg
cli
repz
repz
loop
xchg
push
pop
or
in
ds
lods
xchg
daa
aam
loopne
dec
mov
lea
rcrl
daa
movsb
aad
jne
les
lahf
xchg
shl
mov
xchg
push
add
arpl
pop
jle
test
pop
and
pop
out
aam
rcrl
in
lret
push
pop
pop
sarl
popf
mov
lods
dec
push
pop
dec
cmpl
sbb
or
xchg
push
or
push
repnz
cld
aam
push
test
leave
inc
aas
inc
mov
push
inc
stos
push
xor
mov
repz
and
jge
xchg
ret
hlt
and
jg
mov
lret
pop
and
fnstcw
sahf
orb
int3
hlt
ljmp
inc
sbb
inc
outsb
sbb
mov
rcl
mov
ret
adc
sbb
mov
int3
jb
sti
cmp
inc
dec
cltd
aas
fists
es
movl
fwait
inc
mov
cltd
iret
mov
fiaddl
jl
cmc
clc
mov
pusha
sub
xor
sbb
mov
or
mov
add
jo
lret
fisttps
pop
jo
stos
jb
xchg
xchg
dec
adc
negb
mov
test
loope
aad
cli
add
and
mov
adc
xor
cmp
or
stos
pop
sbb
add
cmp
neg
frstor
sub
fdivs
add
adc
shl
mov
ljmp
mov
cmp
fisubrl
test
out
or
push
fidivrl
dec
and
push
dec
fadds
pop
out
mov
jg
out
ficomps
dec
pop
xor
ror
fisubs
mov
inc
mov
push
lods
pop
cld
cltd
fnstcw
or
and
xchg
push
das
dec
sbb
inc
pop
sbb
mov
leave
sti
inc
rol
push
sub
mov
pop
pop
dec
in
dec
pop
sahf
popf
sub
arpl
mov
xor
shlb
mov
cmp
rcl
sub
ds
or
inc
enter
stos
in
out
mov
cmpb
xlat
fdivrl
hlt
adc
insl
sbb
mov
dec
lret
lea
fstps
inc
inc
in
or
outsl
pushl
push
test
shrl
lea
mov
insb
mov
sbb
push
jge
test
mov
push
jnp
inc
lods
sbb
mov
jmp
xchg
push
xchg
data16
ja
test
lcall
bound
aaa
dec
cld
dec
pop
dec
test
jne
repz
cmp
xchg
sbb
mov
push
mov
or
lcall
fs
push
jae
pusha
adc
or
mov
xor
pop
js
pop
lret
icebp
mov
mov
sbb
loope
xor
outsb
in
std
inc
mov
idiv
cmc
dec
fadd
sahf
sbbl
push
adc
or
sbb
insb
push
cli
jl
negl
xlat
inc
pop
mov
lret
mov
out
test
popa
pushf
xor
in
mov
insb
movsl
add
sub
push
roll
fistl
arpl
adcb
push
std
mov
pop
xor
pop
fs
lahf
loope
xor
icebp
divb
scas
add
mov
fisubrs
jns
xlat
sti
pushf
mov
mov
sti
mov
repz
outsl
inc
sbb
mov
xchg
rolb
rcrb
sub
cmpsl
adc
leave
insl
adc
inc
popa
cld
ja
or
jns
inc
gs
arpl
stos
mov
fsubl
xchg
cld
adc
out
shll
mov
aad
sbb
push
dec
sub
cmp
das
jb
inc
pushf
dec
mov
adcb
sub
aas
rcll
pusha
mov
xchg
inc
in
cmp
out
inc
sub
arpl
cvttps2pi
test
jle
add
mov
popf
jmp
daa
xchg
mov
jno
fst
adc
push
pop
push
xchg
xor
pop
adc
pop
stos
fdivl
stos
shrl
fstpl
jmp
mov
dec
js
aad
jne
jecxz
dec
sbb
pusha
jno
jnp
ljmp
jl
sub
push
sbb
sub
sbb
xor
bound
push
and
mov
sahf
sbb
cmp
imul
pop
adc
sub
mov
outsb
mov
jp
aam
scas
loopne
jle
push
popa
sub
mov
pop
mov
or
add
in
cltd
xlat
mov
repnz
dec
inc
or
rcll
add
scas
mov
testb
scas
mov
lcall
test
cltd
jecxz
dec
jp
gs
mov
addr16
jb
adc
inc
inc
rcll
insl
imul
icebp
or
push
xlat
cwtl
aam
cmc
mov
inc
push
lret
mov
enter
fcmovnb
addr16
out
test
sub
inc
cld
xor
xlat
sub
sbb
xor
addr16
sub
add
pop
out
jge
adc
std
adc
or
sub
imul
lret
mov
in
cmpsl
add
lds
xchg
mov
cmp
adcl
fdivrl
rep
sbb
or
pop
xlat
rclb
hlt
and
fiadds
xchg
es
aad
mov
cwtl
paddusw
push
test
sbb
adc
mov
fcmovnb
cmc
test
icebp
push
popa
fadds
xchg
loop
inc
sub
std
mov
je
mov
lea
add
push
xor
pop
sub
or
or
clc
outsb
mov
cs
mov
outsl
mov
pop
push
int3
fcom
pop
orb
ret
ja
add
or
pop
xor
inc
sahf
mov
gs
clc
loope
lea
pop
mov
mov
push
incb
icebp
sub
push
movsb
inc
addr16
mov
aas
fnstenv
sub
xlat
pop
pop
push
int
ret
sbb
cmpsl
filds
mov
and
lods
pop
mov
cmpsb
lds
inc
xor
std
jo
mov
pop
and
mov
loope
and
sub
add
dec
pop
jns
pop
daa
aaa
fsubrp
add
fs
sub
es
int
test
add
pop
xor
sub
dec
lahf
jae
mov
add
sub
ret
insl
mov
push
cmpsb
push
xor
pusha
or
sub
dec
jbe
in
push
cs
pushf
jbe
jle
push
mov
mov
das
add
add
or
xchg
xchg
jno
scas
inc
int
jns
into
mov
hlt
and
sbb
scas
xchg
sbb
xlat
ja
mov
lahf
insl
xchg
xchg
cmc
jmp
aad
inc
fldt
pusha
inc
jne
dec
lea
jg
rclb
inc
cltd
hlt
cmp
jmp
jg
dec
sbb
out
push
jbe
mov
pop
inc
mov
lahf
dec
aaa
xor
dec
xor
mov
aam
inc
sub
xchg
inc
fisubrs
xchg
pushf
add
push
add
mov
push
jae
mov
sub
fs
push
mov
add
fadds
mov
das
call
aas
fsubp
pop
dec
lea
imul
subl
xchg
cmpsl
push
scas
dec
imul
jbe
inc
enter
sbb
sbb
arpl
push
xchg
stc
pop
into
mov
push
add
rcl
xchg
int3
sub
dec
ret
sti
cmp
rcr
insl
mov
fisttps
stos
subl
lea
adc
push
ret
dec
sub
cwtl
dec
xor
fldpi
cld
mov
sbb
xchg
out
mov
xchg
cmp
int3
shl
push
mov
lcall
test
in
outsb
cmp
mov
fnstcw
out
adc
in
push
xchg
push
xchg
xchg
sbb
xor
imul
fwait
xor
int3
sar
and
adc
dec
add
inc
sbb
js
or
mov
hlt
mov
das
xchg
stos
push
loopne
aad
push
mov
into
dec
subl
adc
loopne
cmp
test
pop
lock
scas
jae
jl
dec
shrb
xor
push
add
in
adc
mov
push
sbb
sub
cli
mov
xchg
popa
mov
call
add
mov
cltd
imul
xor
fildl
cmp
stos
add
jne
scas
daa
cli
mov
jle
iret
pop
or
gs
movsb
popa
dec
enter
dec
hlt
sub
daa
sbb
mov
sbb
repz
inc
cmpsl
orl
je
sbb
mov
gs
dec
ret
mov
shl
loopne
jg
and
cmp
test
loop
adc
sub
add
mov
ss
xacquire
stc
sub
adc
stc
int3
cmc
inc
scas
leave
xor
gs
out
add
sub
push
scas
cmp
data16
sbb
cli
mov
fwait
dec
fcmovu
mov
nop
into
sbb
popl
sub
push
daa
fmull
cmp
dec
push
mov
pop
pop
in
mov
dec
sbb
inc
pop
jb
int3
and
or
push
jb
nop
in
test
in
scas
sub
iret
mov
cmp
in
mov
jg
sub
cli
stos
jmp
ds
sahf
aad
je
mov
cmp
andl
add
cmp
mov
add
push
xlat
mov
mov
addr16
js
sarb
stc
xor
sub
cs
xorb
addr16
cmp
aaa
nop
mov
inc
sbb
mov
and
sar
lea
and
mov
sbb
and
in
aam
push
pushf
loope
pop
fwait
insb
xor
jo
stos
stc
xor
insl
or
clc
sub
gs
in
lods
xchg
cmpsb
mov
pop
sbb
cli
setg
xchg
ja
dec
push
mov
scas
and
mov
mov
fldenv
loope
mov
and
repz
fld1
xchg
sub
lods
es
cmpsb
into
fstl
jge
mov
mov
idivl
popl
jb
sti
adc
pushf
xor
ja
push
out
pushf
cmc
jns
push
cmp
nop
test
sbb
sbb
push
outsb
adc
fcomps
aam
dec
stc
xor
cmp
add
aad
fists
cmpl
fs
lahf
lock
je
dec
cltd
lods
decb
sub
adc
or
xchg
dec
clc
aaa
aas
or
rcll
pop
nop
outsl
shlb
ja
add
enter
hlt
je
pop
and
inc
add
es
dec
cmpb
mov
fmuls
stos
sbb
jae
ret
sahf
sub
cmpsb
popl
ss
jbe
sahf
pop
dec
out
push
cs
lock
hlt
xor
andb
lods
push
scas
repnz
xorb
loopne
add
dec
ss
sbb
xchg
mov
clc
out
mov
sub
lret
xchg
inc
fdivr
and
mov
rcr
pop
movsb
out
fstl
pop
jbe
popa
jl
push
dec
xchg
std
adc
aaa
mov
addb
and
mov
mov
cmpsl
fldcw
adc
push
xchg
xchg
mov
imul
loopne
insl
mov
cmp
scas
and
add
cmpsb
out
mov
pop
lds
lahf
scas
jbe
and
in
jp
inc
test
adc
inc
sahf
int
fistpll
out
jb
aaa
adc
mov
sbb
ret
out
jecxz
test
inc
cmp
aad
fdivs
int3
sahf
xchg
mov
test
je
pushf
mov
mov
je
jmp
stc
push
lods
hlt
xlat
je
testl
loope
mov
pop
mov
scas
mov
mov
jp
lret
fimuls
or
xchg
rcrl
sub
inc
push
bound
adc
mov
pop
pop
repnz
sub
out
fs
sub
mov
jnp
and
fdivr
popa
push
add
mov
pop
or
lods
out
xor
dec
mov
cmp
sub
sbb
or
das
fiaddl
jae
mov
mov
nop
bound
rcrl
lea
lret
mov
lods
add
adcb
xor
enter
into
jecxz
sub
dec
js
and
xchg
dec
ficompl
lods
loope
les
in
jbe
push
dec
ficomps
sbb
jae
mov
mov
in
movsb
and
cli
daa
and
push
aad
jnp
dec
cmp
ljmp
pop
js
es
or
aas
sub
xor
shrb
mov
inc
ret
lock
xchg
mov
jl
aas
fcmovne
sub
movsb
arpl
cmp
lds
mov
mov
mov
jmp
je
mov
jle
arpl
js
push
xchg
xchg
push
pop
adc
add
push
push
mov
add
mov
xchg
cmp
jge
sahf
aaa
scas
sub
test
loope
xchg
into
or
adc
push
test
adc
inc
add
cmp
out
pop
push
sub
imul
add
fs
xor
loop
push
xchg
js
insb
cmc
push
shl
gs
adc
pop
dec
xchg
adc
popa
movsl
sahf
lcall
push
sub
test
into
mov
fisubrl
repz
std
jb
lods
stc
scas
mov
mov
je
out
loope
decb
xchg
jp
pop
loopne
push
and
xlat
or
sub
rcll
shrb
popf
push
mov
js
mov
mov
out
jp
cmpsl
inc
inc
add
mov
inc
testl
cmp
xchg
insl
adc
sbb
mov
in
and
pop
stc
fcoms
sbb
and
mov
pop
or
roll
fidivrs
or
or
jns
push
xor
inc
mov
insb
pop
sahf
stos
mov
pop
sbb
rol
sub
cmpsl
shll
xor
mov
jnp
sbbb
xlat
xchg
pop
push
outsl
add
aas
bound
adc
ret
lret
test
or
rolb
mov
fiadds
in
lock
cmpsb
dec
jo
cmc
cmp
mov
test
dec
xor
sbb
imul
aas
imul
hlt
mov
jns
mov
cltd
imul
lret
mov
jnp
mov
pop
pop
shll
sub
cmp
sub
lds
out
jne
fsubs
popf
and
xor
loop
into
pop
xchg
cmp
inc
mov
pop
sub
jns
lret
mov
rcr
lret
mov
daa
lods
cmpb
loopne
or
adc
mov
fimuls
ja
pop
mov
push
hlt
jne
push
iret
std
dec
out
add
dec
jne
push
xor
repz
scas
adc
lea
sbb
sub
iret
sub
sub
cwtl
add
into
push
xor
aaa
xor
testl
xor
clc
fldcw
pop
or
clc
mov
sub
sbb
jns
jbe
and
bound
in
or
das
push
jle
jecxz
jnp
mov
call
cmp
arpl
pop
aam
add
cwtl
arpl
xlat
stos
jne
scas
ffreep
pop
mov
cmp
lret
inc
stc
outsb
or
sub
repz
mov
rcll
or
iret
out
aas
sub
hlt
lret
cs
lahf
scas
pop
add
lret
pop
push
cmp
xchg
leave
mov
cmp
pop
push
dec
cmpsb
dec
stos
lods
push
mov
vpaddb
and
inc
sbb
js
sbbl
repz
out
jne
jb
mov
add
push
mov
jp
cwtl
xchg
call
add
mov
jbe
popa
pop
dec
mov
sub
bound
fstp
lods
mov
or
in
mov
jmp
pop
xor
leave
nop
psubb
popa
pop
je
inc
cmpsb
and
ja
jbe
lret
inc
iret
shr
mov
ja
inc
cmc
cmpsl
cmc
dec
sahf
pop
jb
and
ret
jg
test
inc
je
aaa
scas
push
lar
es
and
jo
fsubp
ja
out
pop
adc
sub
or
mov
xchg
out
rep
sbb
xchg
sarl
or
aaa
xchg
ss
mov
add
ret
cmp
jo
xor
clc
adc
jnp
jmp
inc
icebp
jmp
inc
pop
call
xlat
fisttpll
mov
in
dec
cmpsb
jns
cmp
sbb
popl
cmovl
fld
xor
cs
pop
data16
xlat
test
xchg
jg
mov
mov
mov
pop
iret
add
cld
gs
push
mov
adc
push
dec
inc
and
test
lds
outsb
scas
je
faddl
mov
fwait
in
test
lcall
cmp
ror
fs
fwait
icebp
add
pop
jg
aad
int
inc
mov
add
mov
adc
icebp
movsb
dec
cmpsb
sbb
sarl
pop
cs
adc
xor
push
jl
add
sbb
in
pop
enter
jl
dec
push
pusha
pop
loopne
pop
xchg
insb
aam
cmp
sub
out
and
or
lds
push
dec
cmp
inc
loop
push
jmp
pop
mov
push
xor
adcl
cli
inc
movsl
clc
mov
outsl
scas
imul
aam
adc
nop
sbb
jnp
das
xor
inc
jno
loope
lods
add
push
dec
adcb
sub
shrl
movsb
push
insl
mov
std
push
hlt
mov
es
out
mov
sub
addl
in
cltd
inc
ret
je
push
ret
push
xchg
jb
gs
adc
in
xchg
hlt
jno
clc
pusha
jmp
outsb
adc
jl
enter
stc
sub
das
and
or
test
gs
sti
fdivl
movsl
shlb
and
sbb
leave
lret
clc
sbb
mov
adc
ficomps
or
dec
loope
test
add
stos
jp
or
gs
outsb
popf
xchg
pop
push
add
jecxz
int
xor
gs
sbb
cmp
mov
outsb
loopne
pop
gs
hlt
cld
adc
inc
out
pop
jne
loop
adc
jne
shll
arpl
shrl
in
pop
dec
test
inc
pop
xchg
adc
adc
push
test
test
aam
out
mov
pop
ret
or
fiadds
aas
push
rclb
divb
orl
inc
pop
lods
lds
sub
and
sbb
cmpsl
rolb
out
mov
stos
jnp
into
xor
pushw
hlt
movsb
adc
jge
add
pop
sub
sti
mov
rorb
push
out
decl
push
syscall
cwtl
mov
xchg
add
dec
movsb
xchg
cmp
fbld
sbb
cmpsl
ja
inc
inc
aas
lods
dec
mov
stos
ja
lds
jo
jle
sub
aam
xor
leave
shl
das
mov
mov
dec
inc
or
adc
imulb
je
mov
or
iret
and
push
out
mov
or
mov
mov
lret
js
xorb
stos
jnp
adc
sbb
mov
adc
xchg
mov
sub
and
mov
sub
int3
imul
cmp
setnp
xchg
sub
adcl
dec
pop
ds
clc
test
jmp
mov
insl
sbb
cwtl
push
test
dec
jo
imul
push
push
pop
mov
clc
xor
xor
mov
push
test
cld
or
dec
add
loop
roll
cmpsl
lahf
bound
int
push
daa
cwtl
in
nop
mov
les
mov
sbb
fst
loope
aam
lds
popa
jns
in
dec
daa
dec
aaa
je
in
imul
leave
inc
push
jns
adc
fiadds
mov
push
add
sub
adc
lds
bound
mov
sbb
pop
push
pop
mov
sbb
push
mov
lcall
pop
jbe
adc
sub
pop
sbb
ret
insl
or
fwait
jo
test
pop
pop
ljmp
cltd
add
pop
xchg
ret
push
mov
sbb
dec
ds
cld
test
xchg
mov
jne
in
pop
ret
push
add
pop
jnp
pusha
lds
aam
or
insl
sub
sti
popaw
and
dec
pop
ret
add
inc
sarl
lock
jge
fisubl
and
mov
testl
mov
and
addl
xorl
shrb
push
inc
jno
and
cmpsb
lods
incb
mov
jle
dec
test
dec
sahf
mov
xor
leave
in
aam
mov
dec
clc
lods
out
outsl
jg
mov
loopne
pop
add
shlb
popa
enter
xor
cs
mov
mov
or
nop
les
fiaddl
lret
jbe
cmpsb
lret
cmpsb
pusha
clc
js
mov
cmp
loopne
sub
sti
dec
adc
mov
iret
mov
xor
repz
push
jl
xorl
add
sub
mov
mov
push
popa
push
jl
and
mov
inc
cmp
lcall
psubb
popl
or
mov
cld
mov
aas
std
shl
push
or
fwait
push
sub
jae
jnp
mov
incl
scas
adc
inc
imul
sbb
xor
add
sbb
push
xchg
lret
sbb
mov
add
dec
cwtl
sub
adc
xchg
scas
push
push
out
scas
push
adc
insb
xor
mov
jb
pop
add
mov
push
inc
add
add
outsl
push
and
add
arpl
jne
lock
jmp
and
or
nopl
mov
adc
lcall
enter
dec
push
ret
add
lea
mov
push
daa
into
cmp
or
iret
nop
ds
sub
shll
subl
jmp
inc
or
outsb
lahf
shl
rcrl
cmp
loopne
repnz
cmpsl
push
cmpsb
or
cltd
or
movl
cmp
mov
mov
mov
cmp
sti
ret
loopne
outsb
add
pop
and
xchg
in
xchg
je
dec
testl
imulb
lds
mov
xchg
fsubs
lds
mov
cmpsb
add
cwtl
ret
fadd
mov
dec
or
in
add
out
cmp
sub
mov
call
mov
cltd
dec
and
jmp
dec
dec
call
xchg
shll
sub
push
push
inc
sbbb
adc
icebp
fnstenv
pop
pop
int3
or
xchg
push
popf
pop
mov
fwait
shll
faddl
testl
push
and
sub
es
fnstcw
fdiv
shrb
sub
and
into
imul
jnp
xor
jp
push
dec
xchg
ficoms
cmovp
xchg
xchg
or
push
sbb
shlb
add
mov
mov
push
outsl
rcll
je
lods
sbbb
int
cmp
sahf
pop
adc
pop
jle
frstor
popf
xchg
nop
sub
push
inc
adc
push
mov
and
aam
and
xchg
jae
into
sub
cmpsl
into
or
popa
push
pop
loopnew
into
pop
out
in
repz
aaa
ficomps
mov
mov
test
xor
push
pop
jae
mov
mov
lahf
popa
and
pop
add
push
inc
push
je
inc
pop
xor
and
cmp
fidivs
ret
xchg
mov
xor
scas
and
out
mov
xchg
stos
mulb
jle
inc
in
fstp
cmp
add
in
jl
test
das
lock
lods
ret
gs
es
js
sbb
cmp
and
fsubrl
fcoms
cli
cli
or
adc
sarl
imul
icebp
cmpsb
movsl
sub
xchg
push
leave
mov
sub
into
hlt
subl
mov
out
iret
lock
push
push
popf
add
xchg
inc
inc
iret
test
int3
jo
in
adc
sahf
dec
test
lea
mov
adc
inc
daa
cmp
je
jb
enter
dec
js
clc
in
inc
movsl
icebp
push
xor
dec
in
push
xchg
or
jge
ljmp
xlat
mov
mov
fnstenv
inc
push
repz
in
jg
in
rclb
aad
or
pop
xor
testb
push
jmp
aas
inc
inc
inc
aaa
jecxz
mov
dec
fsts
jne
pushf
sub
lods
stos
mov
xlat
fwait
test
inc
fldenv
loop
and
cmp
incl
cmpsb
jb
into
mov
aam
arpl
les
xchg
out
ret
lock
xchg
out
shlb
xor
repz
outsl
mov
out
jecxz
jle
repnz
add
pop
and
adc
adc
sbb
jg
pop
mov
inc
and
dec
daa
in
ljmp
fdivl
fwait
xchg
stos
das
xchg
sbb
mov
movsb
dec
mov
and
cmp
aaa
push
sbb
pop
jo
push
ficomps
test
pop
push
rcll
test
cmp
mov
popf
leave
adc
nop
rcl
mov
cmp
mov
push
sub
subl
push
sub
sub
xchg
jno
js
cmpb
xor
loope
xor
popf
xchg
jge
stos
imul
mov
mov
mov
add
adcl
push
mov
inc
jmp
insb
call
cld
jae
imul
lods
fucomip
test
bound
push
sub
and
aam
nop
out
pushl
push
sub
xor
addr16
ret
loope
pop
pop
push
scas
xchg
testb
mov
xchg
push
rcrb
inc
push
adc
and
repnz
mov
stos
xchg
arpl
push
ret
add
popf
xchg
shl
das
fists
repnz
and
ret
pop
push
xchg
mov
or
push
stc
lahf
in
or
add
or
hlt
fcomps
sub
ret
mov
mov
sbb
gs
test
call
inc
inc
pop
adc
fstpl
pusha
scas
dec
mov
test
fs
mov
jg
or
xor
adc
mov
and
sbb
dec
cmpsl
orl
sub
xor
loope
sbb
mov
pop
aam
outsl
stos
xchg
in
sbb
out
jo
jge
subl
bnd
xlat
pop
mov
mov
pop
and
stos
shl
inc
lcall
inc
pop
push
mov
movsl
sub
sbbl
popa
cmp
jg
push
out
cmc
pop
test
and
xor
mov
imul
lea
mov
imul
dec
mov
test
xor
nop
dec
mov
ljmp
mov
int
shll
pop
fnstsw
xchg
or
pop
daa
es
movsb
sub
arpl
mov
adc
xchg
filds
push
mov
sub
cld
lock
sbb
aam
adc
call
xchg
sub
inc
rolb
popf
and
pop
mov
xor
xchg
xchg
loope
scas
repnz
pusha
movsl
aaa
and
bound
add
inc
aam
pop
in
daa
aaa
imul
xor
repz
cli
sub
inc
mul
fsubr
leave
sbb
jno
dec
enter
scas
loopne
sub
cmc
int
icebp
sti
and
call
add
or
mov
mov
clc
sub
subl
adc
das
fadd
imul
add
dec
mov
fwait
mov
xchg
sbb
add
divb
xchg
inc
sbb
mov
aaa
push
sub
mov
sbb
nop
mov
cld
movsb
jmp
add
sub
push
fisubl
pop
push
fcoms
movsl
cli
fsts
xor
clc
sahf
mov
pop
mov
or
pop
sbb
repnz
cli
fsubl
repnz
in
lret
xor
loopne
imul
addb
push
push
lods
add
push
jno
subl
pop
lods
cmp
lods
add
jg
mov
adc
in
pop
pop
call
adc
sbb
or
insl
test
mov
or
push
xchg
setp
lret
sbb
repnz
pop
cmpl
or
loope
fcomi
push
fsubrl
sbb
js
ja
xor
dec
push
cltd
adc
adc
cmp
jno
das
dec
cmp
mov
or
sbb
cmpsl
sbb
mov
sub
xor
sarb
add
mov
out
mov
jbe
test
push
sbbb
test
sti
inc
lret
jecxz
mov
js
mov
push
insl
pushf
hlt
sbb
mov
mov
scas
int3
test
das
mov
out
push
icebp
daa
ret
cmpsb
dec
es
mov
xor
sbb
xchg
mov
cmp
push
enter
and
test
jns
cmpsb
data16
sbb
enter
popf
cmp
pop
ret
push
dec
pop
xor
dec
out
xchg
jbe
dec
cmp
mov
add
mov
push
jbe
jno
pop
pop
insl
push
lods
scas
add
popa
xchg
and
push
inc
les
pop
ds
jne
jnp
aas
xchg
fmulp
pop
fdivrs
xor
mov
movl
mov
dec
pop
cli
lock
dec
daa
xor
jmp
iret
jmp
push
jo
pushf
xchg
mov
ss
in
mov
jno
xchg
xchg
sub
ret
in
push
gs
insl
cmpsl
dec
pop
mov
scas
sti
call
push
popa
nop
negl
ja
mov
gs
test
and
repz
xchg
shll
xor
outsl
into
mov
sbb
jns
push
mov
cli
jo
and
mov
adcb
jno
pusha
testl
lahf
cmc
push
mov
adc
mov
ss
enter
popa
mov
push
and
mov
push
jbe
lods
jae
push
and
xchg
pushf
sbb
mov
call
add
movsb
mov
cmp
mov
add
xchg
and
jecxz
adc
out
sti
mov
adc
jmp
js
adc
ds
call
pop
sub
cmp
jno
pop
xchg
clc
jbe
adc
ja
sti
mov
scas
jo
adc
mov
popf
lock
inc
mov
int3
mov
cmp
pop
push
test
mov
jns
jne
and
icebp
mov
cli
xchg
stc
mov
adc
notl
inc
pop
cmpsl
or
out
push
fwait
outsb
pop
or
sub
icebp
hlt
adc
out
push
scas
push
movsl
xchg
jecxz
inc
jecxz
cld
out
push
mov
test
iret
add
cwtl
pop
cmp
test
cmp
fistps
es
shrl
jae
cld
dec
dec
lods
mov
in
lods
or
jne
push
dec
add
dec
cmp
add
loopne
test
mov
sbb
pop
loop
cmp
mov
sub
cwtl
cli
xor
out
or
cs
scas
add
je
daa
js
cli
dec
jnp
pop
lock
mov
pop
dec
scas
daa
sarl
and
mov
in
mov
cli
dec
inc
in
sbb
ss
inc
push
cmp
cmp
or
pop
push
shll
and
iret
mov
and
push
jge
insl
sahf
push
xor
faddl
out
in
mov
loope
dec
lock
lahf
push
rorl
xor
insb
push
push
xchg
jmp
stos
jp
mov
test
push
xor
add
add
cs
dec
std
cs
push
xchg
jo
ret
mov
jg
mov
jp
add
jno
ret
mov
push
jbe
hlt
jae
cmpsl
adc
add
add
repnz
rcrb
adc
iret
mov
pop
pop
pop
dec
mov
add
fcomip
mov
adc
stc
and
or
adc
push
das
and
cmc
inc
sub
pusha
subl
sbb
cmc
mov
mov
loopne
inc
out
test
mov
lea
jb
fwait
jbe
insl
cmp
arpl
add
xor
cmp
mov
push
xchg
das
xchg
lods
fwait
pop
mov
xchg
sub
push
cmp
or
sahf
push
pop
lret
pop
rol
lahf
fadd
roll
add
jmp
pop
dec
iret
testb
in
sbb
adc
adc
xor
cmpsb
dec
sub
xor
or
int
sub
shll
push
cmp
cmp
out
scas
jp
or
mov
push
mov
xor
inc
notl
fmull
mov
mov
rcpps
imul
mov
sbb
pop
push
idivl
lds
lods
xchg
pop
movsl
lea
enter
cwtl
lods
icebp
xor
sahf
outsb
mov
inc
movsl
xlat
cmp
ret
pushf
and
mov
pop
fsubrl
shrl
out
test
mov
repz
enter
jbe
mov
sbb
inc
or
pop
movsb
sub
mov
add
rcl
shrl
out
xor
sahf
test
jnp
push
lcall
inc
in
xchg
je
das
cmp
lods
inc
fsubs
lods
push
push
jp
jp
movsl
inc
and
orb
addr16
mov
cvtpi2ps
in
jle
testl
fdecstp
sub
mov
cmpsb
push
js
jb
mov
push
xchg
inc
aaa
xchg
and
sbb
push
mov
scas
enter
adc
sbb
repz
jbe
add
stc
dec
mov
add
int
mov
daa
stos
stc
mov
inc
mov
sbb
fcmovu
xchg
add
xchg
pop
xchg
mov
xchg
cltd
pusha
loop
iret
mov
ret
or
lock
xchg
fdivrl
ss
pop
andb
adc
xlat
cmp
xchg
fs
or
jo
mov
out
cltd
or
lock
mov
and
sub
xor
ret
data16
out
mov
adc
fstl
cmp
negb
dec
mov
dec
xchg
mov
sbb
cs
test
fisttps
lea
or
imulb
enter
outsb
jbe
and
dec
jns
dec
xor
adc
popf
ds
add
insb
and
addr16
movsl
pop
out
pop
std
adc
or
push
mov
fisubl
xchg
lds
jno
mov
pop
lret
daa
insb
mov
nop
arpl
sub
stc
movq
xchg
dec
xor
pcmpeqw
xor
pop
inc
pop
jle
adc
in
inc
mov
repnz
out
adc
pop
jp
push
popf
adc
push
add
cmpsb
dec
ss
or
jae
add
or
lcall
pop
popf
adc
into
mov
dec
popa
and
mov
sarl
bound
jne
push
pop
shl
add
pop
mov
fistps
nop
mov
test
inc
dec
dec
jae
popf
sbbb
testl
sbb
cmc
int
jecxz
pop
in
es
cld
shrl
cltd
add
sub
jns
loop
xchg
cli
fildl
in
dec
push
mov
pop
mov
or
and
jae
adc
iret
jle
adcl
and
add
dec
jg
pop
mov
test
xchg
in
dec
pop
cmpsl
out
mov
aad
int3
jmp
insb
repnz
cli
pop
push
imul
popl
mov
cmp
pusha
jno
mov
cwtl
pop
pop
test
jno
dec
push
stc
mov
ss
inc
loope
push
xchg
pop
sbb
xor
xchg
icebp
mov
xchg
jmp
repnz
mov
lahf
pop
aad
cli
outsb
xchg
and
icebp
adc
mov
pushf
nop
aas
xchg
pop
mov
into
and
push
cld
nop
push
insb
imul
in
and
aas
outsl
into
mov
test
pop
dec
mov
fstpt
stos
pop
and
push
lock
int
fwait
xchg
mov
sub
mov
sbb
sub
cwtl
or
das
add
dec
nop
mov
mov
rcrl
jl
adc
add
imull
ja
outsl
xor
xor
jo
les
out
push
pop
dec
mov
daa
push
test
mov
in
mov
cmpsb
adc
je
sbb
call
test
inc
ret
enter
cmp
out
loopne
iret
push
movsb
sti
mov
hlt
cs
xchg
and
ret
aam
xor
or
or
fidivrs
jbe
inc
mov
or
ljmp
fstps
xchg
ss
mov
xchg
stos
mov
mov
mov
lcall
dec
sbb
push
dec
ftst
aaa
mov
pop
pop
xlat
sahf
inc
mov
cmp
hlt
pop
xorb
add
pop
repnz
notl
mov
fxch
call
aas
adc
into
dec
daa
gs
leave
jecxz
or
push
jno
and
ret
imulb
inc
sub
mov
dec
cmp
mulb
mov
ds
mov
inc
push
push
lds
sub
inc
mov
in
outsl
cmp
adc
fcmovnbe
xchg
sub
mov
sub
lea
mov
mov
jl
xor
insl
mov
jnp
mov
adc
das
inc
xor
test
xchg
jno
lods
pop
adc
xchg
aad
or
or
inc
xchg
or
pop
inc
cmp
xlat
mov
adc
sub
in
push
dec
and
jge
ljmp
sbb
cmp
insl
dec
mov
mov
adc
mov
fimull
shlb
pop
mov
loop
scas
push
icebp
call
cli
movsl
lods
sbb
or
mov
sarb
dec
mov
or
jns
aaa
cmpsb
lods
cmc
les
sti
pop
jo
jae
test
shrb
cmpsb
adc
and
cmpl
cmp
mov
div
dec
xchg
dec
add
or
sub
adc
cmc
jns
movsb
ficoml
add
xor
loop
xchg
inc
push
aam
pop
inc
push
xor
xor
sub
das
divl
push
je
sbb
jne
fcoms
aas
xor
jge
inc
cli
xchg
lea
outsb
push
loop
mov
mov
in
jp
add
decl
lds
outsb
sub
xchg
nop
pop
and
sub
cs
sti
or
mov
add
pop
pop
mov
addr16
ljmp
cmpsb
loopne
test
cmp
push
lret
xorb
repz
inc
outsl
cmp
cmp
jmp
mov
or
ret
out
add
xchg
mov
mov
xor
inc
sbb
aas
cmp
outsb
pop
ds
lods
and
scas
dec
sbb
dec
scas
mov
xor
ds
fs
shrb
dec
adc
fwait
icebp
pop
inc
ror
mov
les
and
lods
pop
cmpsb
and
test
mov
addr16
sub
add
sub
jmp
insl
mov
jecxz
stc
xor
cmp
in
cmpsb
add
xchg
dec
hlt
mov
lods
mov
cmp
xor
and
imul
mov
add
pop
lods
jecxz
sbb
shrb
subl
imull
in
lret
imul
out
leave
lea
ret
aad
out
pop
imul
mov
popa
cld
mov
daa
and
xor
scas
mov
rol
push
fbld
jbe
mov
push
lods
rcrl
gs
idivb
xchg
mov
pop
rcr
cld
enter
lds
cmp
sbb
sbbl
mov
jo
add
fs
xchg
rolb
lods
jecxz
pop
xchg
push
cmp
xchg
and
inc
scas
and
mov
cmp
cmp
mov
mov
in
repnz
sub
push
test
inc
jmp
mov
repnz
mov
add
shr
pop
leave
stos
jmp
es
mov
aam
jo
iret
mov
mov
repz
in
int
cmpl
inc
mov
adc
add
std
sub
sub
inc
clc
adc
je
das
fdivrl
pop
pop
push
movsb
je,pt
cld
pop
jle
and
aad
jo,pt
and
adc
dec
pop
sub
cli
out
cmp
inc
xor
mov
aad
hlt
icebp
aad
leave
jecxz
jae
lret
mov
je
shlb
jmp
sbb
daa
sbb
fs
loop
xchg
insb
and
xchg
js
xor
out
hlt
test
pop
and
add
mov
idiv
movsb
jb
rcrl
mov
pop
jbe
movsl
jbe
and
orb
add
nop
inc
ret
int3
into
add
mov
mov
fisubl
and
pop
aas
fildll
roll
cwtl
pop
inc
mov
ds
xor
cli
mov
cmp
cmpsb
popf
inc
mov
adc
dec
pop
arpl
xor
call
mov
aaa
xadd
pop
jecxz
test
pop
jecxz
jb
sbb
dec
call
mov
in
int3
fst
cmp
mov
fwait
sbb
jae
test
bound
jnp
xor
out
in
xchg
sub
mov
mov
cs
add
jg
cmp
jne
mov
xor
sub
cmp
in
in
and
iret
je
test
fbstp
fistl
arpl
add
push
jmp
js
imul
decb
int
or
mov
ljmp
mov
add
lret
lcall
repz
push
pop
add
and
out
repnz
cmp
adc
aas
jg
pop
adc
pushl
bound
testb
ds
nop
das
insb
scas
jmp
sub
xlat
sub
dec
or
lahf
leave
push
das
dec
vandnps
cmp
xchg
adc
ss
sub
scas
cwtl
and
dec
out
call
loopne
lods
in
xchg
pop
cmp
incb
fisubrs
push
mov
mov
arpl
aam
xchg
jne
das
fisubl
rolb
cmpsb
push
xchg
sbb
inc
imul
xor
dec
ds
sbb
scas
out
mov
imul
repnz
xor
mov
jmp
out
inc
pushf
jb
or
stos
bnd
ja
push
push
xor
popa
gs
sub
lods
or
jg
and
or
mov
xchg
and
ret
jmp
clc
sbb
aam
push
stc
icebp
sub
les
movl
aaa
pop
in
nop
test
jns
dec
sub
xlat
inc
sbb
iret
es
cmp
out
stos
repz
sub
dec
ffreep
push
lea
xchg
push
mov
loope
js
jl
insl
jo
test
mov
flds
sub
loopne
enter
cmpsl
xchg
xchg
cmp
xchg
nop
jnp
leave
imulb
xor
or
mov
mov
sub
daa
std
bound
repnz
cmp
and
add
cmc
jp
add
mov
push
pop
inc
das
jae
inc
lods
adc
lock
xchg
subl
mov
pop
pop
inc
sbb
xor
popa
xchg
push
daa
fst
insl
mov
enter
jmp
or
ds
xchg
das
mov
mov
push
fwait
aad
pop
cli
out
or
push
enter
cmp
mov
les
clc
mov
aam
int
mov
mov
ret
sahf
jnp
call
subl
jo
fnsave
add
xor
mov
jnp
cltd
popa
xorb
test
adc
out
push
or
mov
jge
rcrl
mov
cmp
mov
mov
mov
psllq
movsb
mov
push
hlt
es
mov
add
xchg
popf
incl
xor
ret
icebp
cmc
cmpb
cmc
pop
dec
xlat
push
mov
in
out
sub
push
out
rcrb
cmpsl
or
andb
xor
in
std
mov
loope
rclb
divl
push
popf
icebp
inc
mov
dec
xchg
push
mov
mov
xchg
lods
sub
mov
test
sub
xorl
in
cld
repz
repnz
fsts
cmp
testb
insb
pop
int3
leave
or
xchg
mov
pop
and
inc
xchg
lods
pop
int3
loopne
and
shl
dec
mov
les
jmp
je
lcall
inc
mov
adc
daa
ror
loope
mov
mov
adc
and
add
push
pop
or
adc
loope
cmpl
add
fs
dec
js
xor
sbb
push
pop
cmpsb
cli
js
cmpsl
out
pop
or
sub
push
sbb
mov
push
popf
xchg
xchg
adc
fwait
mov
aad
push
xor
scas
cld
push
sbb
neg
cltd
out
sub
adc
mov
pusha
fisubl
inc
dec
in
roll
and
imul
mov
std
sub
insb
fs
dec
or
jnp
sahf
lds
leave
leave
pop
gs
cmp
mov
mov
sbb
jg
das
sbb
sub
xor
rcrl
pop
repz
add
daa
cli
inc
dec
or
push
and
dec
pop
test
ss
mov
mov
jo
enter
out
ja
das
js
aaa
es
xorl
xchg
scas
clc
roll
shrb
pop
mov
pushf
addr16
int
or
pause
xchg
je
jno
out
xorl
add
xchg
scas
aaa
int
mov
push
and
loope
or
mov
data16
xchg
int
outsb
jp
mov
push
shlb
cmpsb
rorb
mov
test
jbe
add
les
jb
int
push
ret
adcl
aas
inc
ret
push
std
cmpsb
aaa
mov
fprem1
in
cmc
sub
jle
lock
ds
add
mov
cmp
cmpsl
xchg
mov
test
mov
xlat
fld
test
aam
mov
aad
mov
add
mov
and
push
nop
lcall
cmpsl
push
lds
shl
sub
mov
sub
dec
clc
jge
cmpsl
popa
adc
rclb
insb
in
xchg
pop
scas
and
mov
ret
jnp
test
xchg
stc
mov
inc
xchg
test
push
jecxz
mov
jmp
cmp
imul
out
jmp
push
shrb
movsl
notb
ljmp
inc
push
loopne
add
cmp
cld
adc
test
cmc
sbb
fldcw
and
int
daa
addb
mulb
popf
rclb
mov
popf
ss
scas
fcompl
lahf
xchg
mov
jg
sti
dec
es
add
xchg
loop
mov
test
mov
lret
inc
push
rcrl
dec
mov
push
lods
sub
xor
loopne
cmp
jns
clc
xchg
sbb
or
gs
sbb
xor
mov
out
jns
nop
adc
mov
and
or
jge
je
jne
cmpsl
popf
dec
cmc
or
pop
mov
fidivl
add
popa
or
int3
insl
inc
insl
push
mov
push
jp
imul
out
popa
jp
mov
popf
mov
xchg
xor
int3
push
mov
push
push
inc
leave
push
and
mov
xor
and
cwtl
jge
stos
pop
mov
xchg
lods
mov
fdivl
mov
adc
imul
push
mov
mov
shrb
int3
test
fildl
mov
or
xchg
cltd
ror
imul
jb
jnp
mov
int3
xor
mov
xlat
push
xlat
mov
das
arpl
fistl
fistps
mov
mov
or
sahf
iret
ss
push
and
xchg
sbb
cmp
sbb
pop
sub
mov
les
mov
sahf
dec
jbe
cmp
xchg
lret
jge
outsl
lret
or
jb
lcall
lret
inc
in
sbb
into
sub
adc
je
pop
clc
fdivl
shll
jne
loope
xlat
mov
jg
jne
loop
ds
inc
mov
scas
jns
in
inc
mov
jg
xchg
lcall
push
mov
aam
popf
mov
xchg
les
xor
ror
mov
xchg
inc
inc
xchg
jg
pop
test
bnd
dec
push
cmp
ret
xchg
loop
lcall
inc
pop
mov
xchg
push
add
and
call
aaa
xor
mov
cmpsl
aas
cmpl
push
cmpsl
mov
popa
in
dec
lcall
into
stc
daa
in
push
sarl
scas
jbe
mov
sub
or
cwtl
push
or
and
xchg
lret
or
push
sub
lds
cmp
and
movsl
test
loopne
pop
sbb
sarb
xchg
mov
dec
jmp
xor
adc
sub
mov
inc
scas
xor
clc
inc
push
lahf
gs
iret
mov
data16
adc
pop
scas
pop
push
jb
mov
inc
cwtl
jle
and
dec
xchg
pop
outsl
sahf
sti
sbb
xor
test
sub
sbb
test
std
test
loopne
inc
or
xchg
xchg
shrb
mov
sbb
repnz
xchg
insl
add
and
lret
sub
push
aad
and
or
es
jb
jne
xlat
js
xor
rol
xchg
insb
adc
ljmp
mov
inc
dec
out
loop
jmp
cld
clc
setge
rcl
xor
notl
mov
sbb
pop
cmp
mov
test
inc
in
aam
psubsb
scas
notb
pushf
adc
cmp
cli
and
sub
push
enter
push
pop
pop
aaa
dec
and
insl
arpl
in
fisubs
xchg
inc
das
es
inc
sti
iret
divl
sub
lock
cmp
sub
push
mov
aad
pop
push
stos
fnstenv
scas
xor
xchg
mov
cmp
fimull
jne
mov
in
ror
in
jmp
pusha
jne
and
fwait
out
test
std
out
xor
sbbb
call
inc
sub
sbb
pop
dec
fsubs
xor
xchg
push
jg
mov
int
jo
out
add
mov
aaa
xchg
daa
aad
xchg
jp
inc
daa
xchg
test
lahf
inc
filds
stos
out
iret
ss
iret
pop
lret
push
scas
inc
popa
mov
je
je
jnp
add
xchg
dec
adc
dec
xchg
jg
push
cs
fisubrs
das
add
sbb
jl
xor
lret
iret
stos
je
mov
mov
pop
mov
mov
mov
mov
mov
fiaddl
adc
pop
les
iret
ja
or
cmp
cmp
sbb
test
sbb
mov
sbb
ror
hlt
scas
jne
pusha
cmpsb
int
loope
in
pop
fwait
xor
mov
ja
or
cmp
push
in
adc
sbb
jb
fimuls
jge
cmp
movsb
rcll
push
test
pop
dec
js
addr16
or
pop
out
or
push
aad
test
push
loopne
inc
sbb
cli
jp
aam
ds
push
div
loopne
add
jns
lahf
dec
and
test
scas
mov
addb
ja
lahf
adcb
das
adc
jo
or
sbb
xchg
pop
and
sub
sub
shll
sbb
adc
ret
or
pop
fdivp
mov
shlb
pushf
inc
mov
mov
mov
mull
fistpll
rcrb
cmp
stos
outsl
nop
fidivl
cmpsl
push
xchg
cmp
jns
popf
jl
fiaddl
shrl
mov
mov
jnp
test
outsl
fmuls
popa
jae
jnp
in
add
je
pop
sub
hlt
xchg
jae
lret
xchg
test
ss
xchg
divb
ret
bound
pop
ficomps
pop
dec
mov
dec
xchg
xchg
mov
cmp
and
fdivrl
rcl
and
jg
js
clc
cmpsb
pop
mov
mov
and
sub
mov
sub
pop
enter
hlt
out
sbb
push
out
xor
fcmovnbe
sbb
call
vandpd
cli
mov
or
mov
int3
xchg
jne
push
inc
shlb
inc
insb
sub
shll
iret
vfmsubps
movsl
insb
dec
xlat
cmp
pushf
fs
xor
es
mov
mov
out
adc
jg
sub
and
ret
or
mov
shlb
pop
in
push
add
call
xor
lods
movsb
xchg
decb
xchg
cmc
sti
iret
loope
mov
stos
xchg
repz
dec
mov
pop
pop
out
cmc
iret
out
jmp
push
jns
aad
or
sbb
or
lea
popa
jg
mov
movsl
jle
clc
cmp
cmc
out
clc
fists
pop
cld
test
ret
cli
arpl
fs
adc
and
ret
sub
dec
daa
mov
and
cmp
lret
cmpsl
cmp
stc
sahf
call
xchg
mov
aaa
pop
mov
popa
jne
andb
lods
dec
movsl
xchg
iret
cld
aas
cmp
loopne
jmp
pop
mov
fdivl
leave
or
jo
testl
push
jmp
adc
dec
push
pop
inc
mov
xchg
jne
mov
loope
jnp
mov
fs
imul
mov
sbb
xor
xchg
cwtl
cmp
inc
out
mov
dec
ss
es
mov
push
cmp
jae
scas
int3
jnp
xor
xor
lahf
lods
sub
jecxz
test
mov
idivl
mov
iret
in
into
mov
xchg
test
jmp
push
sbb
hlt
mov
ljmp
mov
int
pushf
out
and
pop
push
repz
data16
ret
sub
outsb
jmp
or
aas
cmp
inc
or
das
mov
or
xchg
sub
add
add
sbb
pop
sub
pusha
fwait
cltd
jmp
jecxz
inc
sbb
mov
xchg
lea
int3
pop
pop
add
cmp
int
xor
add
inc
pop
in
inc
in
sbb
aam
inc
rorl
fneni(8087
ljmp
dec
rorb
adc
out
faddl
xchg
sahf
or
lret
dec
lret
xchg
aaa
idivb
sub
imul
pop
pop
pop
fisttpl
push
pop
bsr
push
inc
in
dec
outsb
cs
cmp
out
enter
int3
mov
into
jnp
pusha
mov
or
aam
pop
cmpb
je
pop
hlt
and
fwait
pusha
pop
arpl
fimuls
mov
sahf
loope
xchg
xchg
addr16
mov
inc
jno
adc
stos
mov
inc
int3
or
mov
js
or
fiaddl
test
int
frstor
pushf
frstpm(287
orl
fwait
aaa
add
pop
push
loop
cmp
xchg
pop
pop
shrb
push
imul
add
jae
adc
js
addr16
rolb
jae
xchg
rcrb
int
icebp
loop
pop
jmp
lret
rol
or
pmulhw
xor
fwait
pop
sbb
and
subb
loope
or
jg
push
loopne
pusha
in
cwtl
add
mov
and
pop
xchg
clc
fwait
sbb
data16
movsb
dec
sbb
es
insl
loop
jecxz
or
out
push
sbb
das
lods
ss
jp
add
out
insb
movsl
out
xor
jle
pop
mov
mov
pop
xor
dec
cwtl
frstor
adc
push
mov
std
jge
imul
inc
mov
into
and
ret
jno
gs
movsl
dec
hlt
repnz
inc
inc
rol
andl
les
mov
mov
push
std
in
and
leave
frstor
sbb
xchg
adc
pusha
xor
mov
es
js
push
outsl
push
dec
pop
and
add
push
add
xchg
adc
cmpsb
mov
fldcw
mov
faddl
push
cld
cmp
movsl
mov
arpl
outsb
sbb
lds
stc
or
mov
sbb
or
jae
cmp
xchg
das
xchg
and
sub
shl
jecxz
shll
jb
xchg
nop
push
or
es
push
or
xchg
loopne
xor
and
add
pop
mov
cmp
cs
fnstcw
inc
mov
pusha
in
fadds
notl
punpckhbw
xchg
std
call
mov
lock
sbb
scas
shlb
add
jmp
inc
adcb
rorl
out
or
add
jg
mov
pop
loope
mov
aaa
clc
mov
stc
rcll
or
roll
into
insb
mov
nop
aam
push
xchg
insl
sti
scas
dec
pushf
mov
insl
jne
sbb
stc
xchg
loopne
pusha
lahf
icebp
or
test
add
sbb
lahf
xor
sub
jne
sub
sub
fistl
lock
test
sub
pop
or
xchg
dec
mov
lcall
dec
or
ja
in
mov
call
mov
idivb
int3
or
sbb
add
shl
xchg
xchg
lods
lret
fs
cmp
adc
xor
out
cli
loopne
xor
mov
dec
sbb
xchg
adc
mov
sbb
js
and
inc
add
or
int3
adc
int
cmp
loopne
mov
push
cmpsb
iret
add
dec
clc
cld
sbb
and
pop
out
mov
sub
das
gs
jg
popa
sbb
test
mov
insl
push
xchg
sub
mov
add
push
es
ret
cmc
rorl
pushf
cmc
test
inc
mov
lock
push
jae
xchg
pop
imul
and
or
lret
movsb
clc
scas
adc
cmp
sbb
push
jmp
lahf
aad
mov
mov
insl
into
adc
pop
nop
in
pop
mov
in
lcall
push
inc
xor
inc
loope
jecxz
loopne
test
xor
push
fsts
ss
cmp
adc
add
lahf
fucomp
cs
lock
mov
cmc
adc
cmp
fs
iret
xor
lret
insb
rcl
add
loope
add
xchg
jae
push
jle
or
add
pop
or
adc
in
or
aad
jle
ret
sub
dec
push
pop
mov
stc
cmp
js
jle
cwtl
mov
out
stos
add
cmpl
mov
lods
lcall
fwait
fs
mov
into
jne
pop
aas
into
test
mov
out
arpl
test
sub
out
repnz
push
sbb
je
xor
push
inc
jge
xor
mov
fs
cmp
gs
loop
ds
push
and
lret
addr16
xchg
fs
lret
mov
cmp
xor
popf
add
mov
std
mov
mov
mov
lea
or
fcmovnb
stos
sub
daa
cltd
out
pop
pusha
insl
sbb
rcll
dec
pop
sbb
enter
sub
push
aad
xchg
cmp
pop
repnz
gs
and
das
dec
inc
sub
xchg
jb
daa
pop
dec
lahf
insb
mov
lds
lods
sbb
sahf
in
out
popa
idivl
out
or
push
repz
dec
addr16
cmp
out
adc
std
jo
adc
jno
pop
jl
pushl
push
fcmovne
pop
popf
mov
mov
pop
test
in
adc
nop
mov
out
mov
test
out
push
insb
ss
add
push
inc
cmp
push
add
cltd
xchg
iret
imul
pop
xor
out
adc
aas
jno
into
pop
test
jge
sub
push
jmp
mov
ss
jae
jae
inc
mov
movhps
pop
arpl
mov
cmc
xchg
jge
jno
add
push
pop
mov
mov
outsb
jg
mov
fwait
xor
test
mov
and
fidivrs
jo
cld
pop
push
cmp
movsb
cli
outsb
pusha
inc
jnp
cmp
outsl
ljmp
iret
and
aas
jbe
mov
stos
negb
hlt
or
add
sbbl
fxtract
dec
xchg
sbb
test
pop
push
out
clc
jecxz
repnz
mov
add
lock
dec
dec
mov
stos
les
inc
or
ds
ret
xchg
fbld
daa
cmpsb
scas
or
repnz
xor
push
push
or
in
dec
sbb
shlb
fistl
std
cmc
mov
cmp
ret
adc
mov
push
lods
fnstsw
cmc
or
lock
inc
xchg
xchg
pop
sbb
imul
pop
add
rorl
xor
aad
popf
add
int3
push
mov
out
sarl
mov
out
sbb
cmp
popa
mov
ja
popa
repz
push
subl
pop
jge
dec
lds
dec
cli
mov
outsl
test
jno
arpl
xor
fs
andb
popa
test
popa
xor
or
mov
sub
imul
mov
pop
pop
add
xor
out
xchg
fisubl
inc
lret
add
pop
dec
repnz
orb
pop
scas
ss
push
rolb
dec
jbe
test
cwtl
push
pushf
or
mov
inc
mov
sbbl
cli
inc
xchg
das
mov
adc
or
scas
adc
rorl
sbb
cmp
gs
inc
shll
lds
movsb
in
mov
cmpsl
dec
mov
jns
cmp
or
sub
cmc
mov
xor
sub
mov
dec
mov
cmpsl
xor
push
popf
loopne
adc
std
mov
add
repz
mov
inc
scas
sub
rclb
fldcw
mov
scas
insl
fwait
out
enter
lods
cmpsb
jmp
popf
aaa
lods
mov
mov
cwtl
outsb
aad
pop
inc
pop
dec
dec
push
pop
jnp
cmp
pop
dec
shrl
movsl
push
pop
movsl
xchg
inc
outsl
test
sbb
cli
xor
aaa
push
adc
push
movsb
out
mov
rcll
leave
lods
xor
xchg
dec
and
pushf
jb
hlt
and
mov
or
lods
adc
jmp
repz
cld
push
inc
cmpsl
test
jg
xlat
or
imul
sahf
std
dec
pop
dec
push
jg
idiv
movsl
daa
cmpsl
cmp
and
push
orl
or
js
fmull
pushf
aaa
lea
orb
dec
jg
push
dec
or
push
pop
mov
aaa
in
into
mov
sbb
das
movsb
mov
jnp
int
mov
sub
cltd
cltd
or
out
sub
popf
ljmp
mov
adc
daa
les
es
adc
imul
notl
loopne
dec
xor
pop
xlat
out
clc
mov
aad
mov
inc
arpl
xor
jne
nop
inc
or
aam
cli
mov
cmpsb
les
ficoml
xor
xchg
repnz
inc
dec
outsl
pop
pop
cmp
mov
outsb
cmp
pop
or
dec
jo
cmc
rclb
fidivs
outsb
adc
orl
loope
sub
mov
mov
cmpsl
lret
jnp
dec
xorb
scas
insl
pop
push
in
adc
pusha
push
xor
push
std
xchg
addr16
fldl
and
mov
xchg
jnp
shll
or
adc
lahf
int3
mov
lcall
sub
cli
fcoml
js
adc
pop
subl
fadds
inc
sarb
xor
and
xor
mov
or
dec
pop
cwtl
loop
insl
addr16
mov
jl
inc
add
adc
or
cmc
jmp
cvttps2pi
jae
push
test
and
sub
leave
inc
in
lret
push
and
pop
sahf
mov
jl
inc
jl
cmp
sbb
das
fs
mov
push
pop
push
inc
andb
sbb
sbb
in
call
das
cmp
lea
pop
fcompl
mov
aam
push
lds
xchg
lds
and
loop
mov
int3
movsl
pop
push
pop
adc
arpl
aas
cmp
pop
mov
or
loope
gs
mov
jo
pop
inc
data16
xor
fmulp
mov
add
inc
fwait
jl
test
dec
cmp
movsl
sbb
pop
es
inc
outsl
jns
and
in
mov
js
cmp
push
mov
imul
add
xor
xchg
xor
jmp
jo
jnp
outsl
in
jne
sub
cmp
test
pop
adc
insb
pop
fiaddl
inc
inc
test
incl
fisttps
lods
sti
out
ror
int
ds
mov
mov
test
mov
gs
les
and
std
ss
push
jecxz
das
jge
push
pop
sub
outsb
mov
sbb
sub
mov
push
mov
sub
sbb
cld
out
dec
movsl
inc
xor
jbe
insl
xor
push
lea
dec
movsb
pop
je
insb
js
pop
xlat
sbb
call
pop
mov
imul
ret
jns
cmp
in
imul
push
jns
pop
popa
jo
aaa
pop
xchg
add
xchg
push
into
int3
movsl
add
aam
mov
sysret
xor
inc
adc
imul
adc
and
cmp
fsts
xchg
or
cmp
repnz
loopne
or
sbb
arpl
push
or
out
outsb
sti
out
loopne
jle
popw
push
xchg
xlat
dec
mov
repnz
int3
pop
popa
pop
movsb
pop
and
gs
idivl
mov
xchg
in
mov
rclb
popa
dec
inc
xor
addl
in
mov
mov
pushf
jle
cmp
lcall
add
cwtl
adc
and
dec
clc
daa
lock
mov
xor
rcrl
lret
lahf
aas
stc
lcall
ss
mov
cli
sub
sti
outsl
adc
xor
ljmp
stos
mov
dec
xchg
fdivrl
aaa
add
shr
mov
loopne
test
lahf
adc
or
cmp
and
iret
or
xor
repz
ljmp
je
sbb
addr16
out
xchg
movsb
pop
fnsave
sub
shll
stos
or
jns
insb
lds
xchg
hlt
fmuls
aam
in
sbb
gs
lahf
mov
mov
sar
sub
pop
enter
aad
push
aas
xchg
ret
clc
xor
pop
andb
int
aad
pop
push
inc
and
aam
stos
loope
jo
mov
into
pmulhuw
ss
push
mov
and
jnp
sbb
sub
or
jp
inc
jl
add
ss
or
shll
jp
jl
pop
daa
or
mov
inc
push
xorl
in
ret
jne
in
sub
dec
idivb
pushf
inc
sub
push
lret
inc
bound
lret
mov
inc
push
icebp
out
imul
mov
enter
test
cwtl
pushf
jnp
clc
leave
stos
pushf
xchg
ja
addr16
cltd
inc
mov
bound
lea
and
loop
cmp
adc
ja
dec
or
and
rcrl
sub
push
stos
inc
in
jecxz
lret
add
movsb
pop
lods
pop
fs
rcr
inc
dec
js
cmp
xor
movsl
lock
mov
push
pusha
stos
sbb
das
lret
lds
inc
scas
push
jb
xchg
and
arpl
test
push
mov
lods
xchg
mov
insb
std
push
inc
xor
mov
popa
add
or
cmpsb
adc
pop
lcall
sahf
push
test
xor
rcll
and
and
xor
pop
push
pop
mov
push
shlb
leave
mov
dec
aam
pop
gs
inc
pop
pop
or
push
aas
cltd
jge
mov
sbb
xor
add
add
loopne
and
cmp
repz
or
fldt
std
loope
mov
mov
int
pop
mov
loopne
add
mov
or
add
mov
cmp
ss
mov
jg
fldcw
andl
inc
mov
mov
mov
rcll
pop
xor
mov
lret
in
outsb
inc
out
lret
or
sub
adc
enter
ret
outsl
and
iret
sbb
clc
es
aad
std
adc
addb
hlt
ja
inc
cmpsb
adc
xchg
pop
aad
out
mov
sti
push
imul
jo
call
in
dec
adc
pop
call
arpl
ret
fdivr
scas
sub
mov
adc
popa
out
jp
pop
movsb
les
inc
and
sbb
repnz
cmpsl
add
aad
pop
movsl
testb
add
int3
cld
mov
push
push
mov
sub
fists
sbb
and
cmc
insl
pop
cld
stos
fistps
xor
nop
nop
inc
dec
repz
sbb
xor
jecxz
sbb
rorw
int3
jo
mov
xchg
xchg
mov
ljmp
mov
ret
mov
push
outsb
pop
jb
js
xchg
icebp
js
pop
or
stos
inc
dec
mov
mov
inc
into
jo
or
mov
xchg
in
jg
lods
rorb
and
pop
cli
mov
imul
std
adc
sbbb
pop
mov
cli
dec
out
icebp
mov
push
mov
lcall
add
stos
and
outsb
mov
rcrl
into
iret
mov
push
mov
add
dec
jb
loop
aas
mov
pusha
pushf
iret
adc
dec
cmc
and
or
ljmp
mov
mov
decb
adc
or
dec
pop
lret
das
mov
idiv
push
sub
sub
cld
xor
shll
lret
xor
sub
or
ljmp
adc
mov
cmc
fistps
pop
sbb
arpl
adc
pusha
jb
xchg
push
jle
jo
xchg
add
dec
loopne
test
push
jae
xor
insl
sbb
jp
rcrb
lea
mov
arpl
dec
or
dec
xor
sbb
add
or
push
lcall
pop
repz
pop
cmp
lcall
jno
or
inc
jp
hlt
jecxz
sbb
idivl
lahf
loop
rclb
aas
enter
movsl
mov
loopne
stos
mov
test
push
or
adc
fwait
iret
es
jae
mov
mov
mov
subl
outsl
cmp
loope
ja
cmp
xor
add
imul
mov
xor
aas
xchg
and
inc
and
scas
inc
add
in
push
cmp
bnd
inc
jnp
jmp
inc
push
push
aas
push
jmp
in
mov
mov
sbb
mov
and
int
inc
popa
pop
fmul
or
jmp
fisubs
and
push
push
mov
adc
mov
dec
xor
sbb
js
and
ret
insb
outsl
sbb
fidivl
mov
mov
dec
inc
push
js
out
add
sub
adc
inc
mov
hlt
loop
xchg
arpl
jle
and
mov
sub
lods
fdivl
xchg
ja
sahf
pop
imul
fistpl
dec
push
xchg
mov
test
pushf
leave
scas
clc
jns
add
js
nop
in
cltd
cmpsb
and
pop
std
sahf
push
jecxz
or
call
cmp
insb
ret
xlat
xchg
call
dec
xchg
adcb
enter
push
cltd
das
push
xchg
adc
add
pushf
jns
idivl
push
and
xchg
and
push
fs
inc
jb
cwtl
mov
scas
sbb
insl
aam
push
int3
int3
push
fmul
sbb
fwait
dec
insl
or
inc
movsb
sub
dec
adc
lds
xchg
idivb
inc
jp
repnz
xchg
ljmp
adc
add
mov
xorl
jmp
rcll
imul
rcll
outsb
mov
mov
push
jg
test
sbbb
in
or
mov
mov
stos
sub
clc
stos
das
dec
mov
icebp
in
sbb
jg
adc
into
sbb
xchg
cmpsl
jns
es
inc
sahf
aaa
and
sub
sar
arpl
pop
mov
sub
test
jne
mov
pop
test
stos
push
cmp
add
mov
loope
lret
sarl
jge
andb
add
imul
cmovnp
jp
mov
mov
xchg
jp
add
adc
sbb
mov
sarl
pushf
lcall
pop
ds
mov
dec
xor
add
test
pop
add
xchg
jecxz
or
xor
dec
lret
inc
inc
or
cmp
insl
sub
push
lret
sbb
enter
mov
bound
jecxz
or
repz
idivb
dec
mov
insb
dec
or
sub
push
and
push
cmc
or
dec
mov
sarb
sti
and
dec
adc
cwtl
xchg
sbb
xchg
fs
mov
pop
fstp
mov
mov
xchg
lret
out
into
mov
cmp
test
mov
outsb
pop
jae
out
popf
jecxz
cmp
lret
cld
loopne
lods
aad
and
mov
jb
push
push
pop
out
pop
test
je
mov
mov
inc
push
iret
mov
mov
cmpsl
lods
and
cmp
outsb
movsl
xchg
or
jns
gs
icebp
cltd
push
cli
imul
xchg
incl
inc
sub
into
adc
js
insb
push
sbb
add
imul
inc
icebp
pop
push
cmp
cmc
sub
inc
scas
mov
mov
in
aad
call
mov
cmp
cwtl
sbb
sub
in
in
cs
frstor
insl
fiaddl
cmpb
mov
sbb
ljmp
xor
pop
mov
or
loope
jne
cmp
or
inc
xchg
cmpb
sbb
jbe
je
clc
add
loope
in
sbb
in
rcr
jbe
jl
in
sbb
es
push
sbb
insb
inc
int
lret
dec
mov
insl
dec
sbb
pop
lods
shlb
mov
das
into
ss
or
rolb
push
jmp
mov
lock
jecxz
fistpll
fidivrs
in
inc
add
add
adc
icebp
sti
aam
sub
arpl
push
adc
movsb
add
push
iret
insb
pop
adc
and
jno
xlat
jbe
mov
leave
sbb
lret
dec
jge
cli
sti
int
add
cmpsb
jp,pn
cmp
fnstenv
pop
push
xchg
mov
aad
push
push
pop
jns
data16
xchg
nopl
std
pushf
addr16
mov
fldt
pop
cmp
fiadds
rcrb
jns
adc
sub
mov
subb
sub
jg
fsts
sub
icebp
mov
cmp
shl
jmp
test
js
add
mov
shlb
dec
lcall
ds
pop
fidivs
jmp
mov
jl
lods
pushl
test
add
pop
call
aad
repnz
neg
sbb
test
movsl
mov
mov
loope
pop
clc
fdivrl
subb
out
rorb
sub
jno
mov
and
pop
xlat
pop
and
fwait
stos
push
les
inc
inc
inc
sbb
out
dec
jl
mov
push
push
pop
mov
popa
xchg
mov
cmp
loopne
sbb
lahf
and
les
in
or
mov
stc
scas
bound
loopne
js
cmp
into
inc
inc
push
inc
dec
jmp
mov
pop
dec
mov
mov
ds
insl
xlat
bound
jo
cltd
mov
add
negl
add
cmp
aas
add
insb
mov
les
lret
fdivrs
and
mov
push
bnd
jle
dec
lcall
daa
cmpsl
out
mov
leave
mov
cmp
sbb
loop
std
insl
mov
mov
cmpb
je
fildll
sub
ja
mov
ja
add
jp
shl
mov
jecxz
leave
out
in
xor
push
loopne
rolb
stos
inc
push
sub
sbb
ret
adc
jnp
xchg
dec
fs
fiadds
push
and
push
les
ljmp
hlt
add
pusha
icebp
or
push
inc
mov
clc
pop
in
cmp
imul
popa
repnz
and
arpl
shl
xor
jbe
int
xlat
das
daa
loop
jg
stc
js,pn
lds
pop
push
cli
mull
jecxz
jb
push
ja
ss
or
push
mov
adc
inc
or
imul
sbb
pop
mov
push
ds
xor
pop
loope
xor
mov
addb
loopne
mov
gs
push
pop
sub
bnd
mov
mov
dec
jp
adc
shlb
lods
ficoms
cmp
shr
lock
adc
int3
pop
and
jno
dec
xor
mov
pusha
inc
popl
loope
popa
fisttpll
add
loopne
stc
ret
cmp
loop
sarb
sub
inc
push
fistpll
pop
lret
fidivs
fwait
or
ljmp
arpl
mov
bound
inc
shll
jp
mov
cmp
sbb
cmpl
sarb
pop
pop
mov
lcall
adc
xchg
inc
cmp
mov
sbb
std
adc
jns
in
pop
test
arpl
int3
sub
mov
inc
jmp
insl
hlt
insl
inc
lcall
aad
mov
adc
jecxz
ret
lret
pop
imul
pop
rolb
ret
xor
inc
inc
in
cmp
andl
scas
fstpt
jb
js
gs
and
in
out
lret
cmpsl
lret
popf
outsb
and
mov
push
fcmove
pop
lock
adc
fwait
ljmp
sub
lods
or
adc
jecxz
and
jmp
push
ja
into
jmp
test
out
outsl
jmp
adc
xor
aad
lock
js
bound
popf
sbb
dec
dec
repz
xor
fcmovnb
push
scas
xor
jbe
push
outsl
cmc
pop
or
xorb
in
test
jae
cmc
lret
pop
int
imul
dec
sar
cmpsb
or
test
jl
insl
sub
cltd
aam
lods
movsl
dec
mov
insb
add
add
dec
out
sbb
pop
adc
test
jmp
pop
inc
mov
pop
shl
push
iret
pop
adc
rol
dec
mov
sub
xchg
addr16
lea
repnz
fidivrs
jne
pop
mov
loopne
into
jno
hlt
imul
sbb
negl
call
dec
pop
sbb
orl
ljmp
adc
jb
xor
ret
sbb
push
ret
push
cmp
test
les
add
movl
add
rcl
cmp
push
mov
mov
mov
movsl
ljmp
cmp
iret
sahf
ljmp
cmpsl
loope
out
in
cmp
mov
test
jne
or
insb
push
stc
mov
imul
xchg
rclb
sbb
sbb
and
cmp
hlt
out
addr16
adc
or
add
push
adc
jb
or
inc
mov
mov
push
lock
mov
fwait
jp
xor
adc
aaa
test
push
ret
sbbl
test
and
paddusb
fwait
popa
movsl
add
mov
adc
mov
push
popa
jae
dec
cmp
pushf
inc
xor
cmpb
enter
iret
mov
xor
dec
cli
lret
icebp
xor
fistl
or
push
sub
add
outsl
out
mov
lods
stos
xchg
cmpl
add
xchg
lcall
jnp
push
mov
jg
xor
sbb
sbb
std
and
repz
xor
pop
sti
jecxz
cltd
mov
fmull
sub
stc
or
xlat
lods
dec
jp
xchg
leave
push
sub
popf
dec
leave
adc
outsl
and
in
xchg
jg
xlat
and
jo
out
sarb
mov
ljmp
ret
pushf
mov
data16
xchg
dec
mov
in
push
stc
sbb
lods
mov
dec
mov
lahf
sbb
loopne
cmc
aad
das
das
sub
bound
and
out
push
out
push
inc
cmp
cmp
adc
jbe
jmp
ljmp
inc
psubusb
dec
add
cli
outsb
jg
sbb
jg
and
mov
push
mov
cmpsl
lret
dec
xor
pushf
sbb
mov
pop
aas
pop
lods
scas
pop
sub
ret
or
xor
xor
imul
imul
push
mull
shl
ror
popa
addr16
push
mov
imul
fistpll
nop
sbb
dec
xchg
stos
or
in
adc
out
popl
and
jns
hlt
fbld
cmp
ret
jg
stos
jp
outsb
daa
hlt
add
decb
push
in
hlt
pop
adc
fbld
lea
push
xchg
sub
xchg
bound
icebp
sbb
push
sbb
mov
mov
cmp
fcoml
sub
test
pop
push
mov
mov
mov
push
pusha
daa
pop
xchg
fs
and
pop
loope
fstpl
je
lret
mov
pop
adc
fwait
push
jae
adc
pop
inc
out
push
popf
out
in
jp
mov
mov
mov
dec
pushf
or
movsl
pop
mov
jp
fdivs
loop
gs
pop
dec
push
sbb
jae
out
iret
ljmp
mov
xor
sbb
dec
das
pop
mov
negl
cmp
cli
out
sahf
lods
or
add
and
lret
outsl
mov
cmp
ja
fwait
jnp
or
xchg
bound
jns
mov
imul
loope
push
or
adc
sbb
rolb
loopne
scas
loopne
out
fstpl
pop
xchg
dec
add
scas
dec
cmc
rclb
add
jl
idiv
rcrb
pop
or
clc
fs
pusha
popf
sbb
adc
jbe
jae
jo
lea
nop
add
mov
jl
jl
arpl
sub
cmp
push
into
adc
into
into
js
mov
mov
fstpt
or
inc
arpl
pop
push
ss
push
jg
rcr
aas
sti
sub
cs
es
add
jno
add
stc
pop
dec
pop
pop
jl
inc
dec
lods
inc
fadds
adc
pop
add
loope
pcmpeqb
fwait
cld
ja
movsl
jae
sub
jle
jmp
stos
jb
jne
pop
sarl
mov
push
testb
addr16
dec
mov
or
arpl
stos
dec
mov
fbstp
divl
repz
mov
push
cmp
popf
fmull
sub
dec
or
push
hlt
push
push
sbbb
sbb
in
or
les
xor
jecxz
sub
adc
in
hlt
jo
leave
push
arpl
xchg
mov
add
scas
add
je
fbstp
popf
dec
in
sti
in
sbb
loop
jmp
aaa
mov
inc
pusha
xchg
mov
pushf
xchg
sub
push
mov
mov
sbb
not
icebp
mov
daa
popf
das
jns
pop
sub
imul
mov
mov
mov
leave
sub
jecxz
push
mov
loope
xor
lods
mov
xchg
sahf
fidivrl
push
jb
roll
pop
mov
icebp
test
cmp
movsl
pop
cmp
dec
cmpsl
test
out
shrl
adc
mov
adc
push
pop
stos
inc
sbb
jne
dec
pop
xor
outsl
ljmp
cmovl
cli
outsb
xchg
sub
rcll
hlt
pop
repnz
jmp
adc
fs
mov
int3
scas
jne
dec
aaa
sub
mov
mov
mov
cmc
jecxz
and
mov
mov
sbb
popf
lds
adc
repnz
imul
inc
mov
inc
or
sub
pop
dec
hlt
stc
mov
out
mov
add
dec
call
xchg
mov
test
or
lea
jo
sub
adc
mov
add
out
mov
mov
fnsave
test
subl
mov
test
mov
adc
arpl
push
inc
pushf
adc
movsl
xchg
adc
mov
push
fyl2x
push
cmp
sbb
mov
mov
arpl
pop
jl
fisubs
pop
inc
sbb
bound
repz
jae
lea
inc
negl
inc
mov
inc
push
lret
int3
mov
and
insl
imul
cmp
fsubs
icebp
cmpl
mov
push
out
add
dec
jne
push
dec
mov
repnz
push
xor
outsb
mov
mov
test
int
mov
movsb
movsl
adc
cltd
and
push
std
cmp
jecxz
or
dec
ret
bound
mov
lcall
out
mov
mov
sbb
negl
jmp
out
scas
cmc
pop
in
les
inc
test
fmulp
mov
mov
sti
movsb
insb
adc
bound
sbb
mov
push
or
bound
pop
cmp
xor
dec
push
xchg
mov
mov
lock
mov
fldenv
es
popf
add
ret
gs
cwtl
enter
add
sub
xlat
or
xor
sbb
loope
mov
inc
jmp
mov
cmpsl
mov
imul
test
aaa
jmp
scas
repz
sub
xchg
sub
add
pop
mov
jle
int3
negl
mov
fdivrl
gs
stos
inc
das
es
cli
and
xor
jle
sub
mov
pop
jp
xor
pop
or
stc
jp
mov
in
mov
dec
pop
fdivrl
cltd
and
mov
xchg
xchg
aad
and
pop
outsb
add
mov
arpl
fneni(8087
fdivs
dec
cmpsw
iret
movsb
xchg
cmp
aas
pop
lret
cmp
stos
rorl
cmp
and
mov
xor
out
mov
push
xchg
cwtl
sub
fsubrp
jp
mov
pusha
cmp
cltd
push
or
in
outsl
push
fisubs
sbb
pop
adc
inc
in
cmp
lahf
lods
push
outsb
add
mov
arpl
hlt
mov
sahf
adc
mov
test
sub
adc
push
push
mov
sub
nop
or
fisttpl
iret
sub
cmp
std
inc
mov
sbb
mov
mov
movsb
int3
stc
push
loop
les
and
in
cmp
pusha
shl
data16
in
mov
mov
insl
mov
stos
popa
sbb
test
inc
cmpsb
inc
loopne
cwtl
inc
lret
sti
or
adc
into
adc
je
fdiv
movsl
push
jns
add
pop
mov
mov
arpl
aaa
jg
mov
and
xchg
sbb
faddl
push
je
pop
out
dec
and
imul
mov
lret
ffree
daa
decb
test
xchg
adc
das
or
sub
lods
inc
in
dec
or
mull
mov
into
mov
stos
fld
test
pop
or
cmp
pop
xchg
jno
jnp
popf
sbb
sbb
ret
sub
movsl
xor
sbb
ret
fsubl
mov
test
mov
add
mov
mov
cmp
pop
fistps
or
sbb
movsl
cmpsl
sbb
out
pop
add
xor
jg
adc
add
mov
cmp
lret
add
jo
bound
mov
enter
dec
sub
push
pop
jns
cmp
les
inc
mov
ficompl
lcall
js
loop
inc
call
popf
cmp
gs
jnp
and
mov
shl
leave
imul
and
bound
sbb
sbb
dec
mov
mov
aam
pusha
jg
lahf
jg
pop
out
sub
pop
xor
nop
inc
cmp
jno
inc
and
stc
loop
xlat
lahf
cwtl
sarl
and
orl
ja
mov
push
in
divb
cmpsb
jg
arpl
inc
in
pop
jb
sbb
jno
or
arpl
aam
sahf
cmp
leave
dec
stos
cwtl
ret
sti
enter
fsts
sub
test
and
lods
cwtl
ret
movsl
mov
adc
sub
outsl
xor
cmovbe
call
or
or
in
scas
cmc
xchg
cmp
mov
pop
shll
and
cmp
jl
add
ds
jle
shrl
fwait
or
cmpsb
sbb
outsb
pop
jb
in
insb
xchg
ret
and
adc
notb
cmpsl
xor
inc
repnz
mov
ror
jp
outsb
xchg
fisttpl
test
and
cmp
outsb
aaa
cltd
dec
lods
loop
dec
push
in
cwtl
adc
cltd
test
sub
mov
push
add
in
add
outsl
jg
call
ljmp
fwait
lea
call
cmp
test
aaa
sahf
fnstenv
adc
adc
or
lahf
jl
inc
stos
arpl
ret
cld
mov
movsb
mov
in
subl
je
mov
into
aaa
cmp
pop
xchg
dec
and
sbb
xchg
jne
lret
sbb
rcl
inc
ds
mov
mov
rcll
testb
ret
add
ja
cli
push
mov
in
mov
xor
enter
push
popa
pop
in
inc
hlt
or
in
mov
push
call
in
aam
imul
mov
lret
bound
jbe
xor
loop
aaa
rcr
rcll
in
lods
in
cmpl
imul
cmpsl
pusha
movsl
outsb
scas
sub
add
repnz
sahf
mov
and
iret
call
cmpl
ljmp
and
icebp
lcall
sbb
sbb
test
test
sbb
cmp
insb
mov
int
push
dec
les
mov
popa
dec
jnp
push
add
xor
stos
mov
adc
jnp
pop
or
testb
ljmp
inc
add
popa
fiadds
cmpsl
clc
out
scas
mov
adcb
mov
xchg
lock
xor
add
lret
inc
lods
insb
mov
or
stos
add
adc
out
ficoml
adc
sub
xor
xchg
sub
xor
sti
inc
mov
lret
sub
xor
xor
mov
adc
aad
sbb
sahf
in
mull
or
cltd
cmp
xorl
cmp
ss
adc
insb
sarl
jmp
cmp
sub
cmp
dec
dec
dec
cmp
in
add
jae
inc
xor
jo
in
mov
aad
cwtl
push
mov
fdivp
or
mov
in
mov
mov
inc
pop
or
adcb
fwait
push
add
iret
push
test
aaa
jbe
mov
add
cs
and
out
dec
dec
dec
movb
andl
mov
push
mov
dec
xor
adc
out
xor
ljmp
inc
das
mov
ret
mov
imul
ret
and
sub
xchg
imul
icebp
mov
outsb
and
inc
out
test
insb
in
jae
iret
or
movsb
lcall
xor
dec
popf
push
fadd
adc
ss
pop
push
jecxz
aad
lret
movb
repz
cltd
xorb
or
sub
mov
shlb
pushf
and
in
sbb
repz
mov
lret
adc
lea
into
jo
jp
shll
or
ficompl
into
jns
pusha
push
adc
shll
je
arpl
pop
sbb
icebp
mov
or
or
push
lock
out
shrb
mov
jmp
adc
mov
mov
xchg
and
add
cltd
hlt
lret
test
add
sbb
jg
imull
dec
jmp
cs
pop
pop
cmp
lcall
jle
pop
inc
faddl
dec
ret
movsb
inc
into
es
lahf
cmpsb
movsb
decb
mov
mov
push
sub
mov
adc
lahf
lahf
mov
sbb
cmpsl
imul
test
lea
add
aaa
insb
movsw
mov
cmpsb
enter
cmpsb
mov
insb
sub
addr16
out
out
xchg
mov
inc
icebp
push
push
mov
leave
lcall
add
mov
pop
imul
fs
sbb
push
xor
gs
gs
mov
dec
cmp
mov
push
adc
addr16
pop
mov
rol
mov
and
in
ja
mov
int
sarb
mov
push
femms
rcrl
dec
push
lret
mov
xchg
out
fldcw
repnz
mov
add
cld
xor
pop
push
test
inc
lods
pop
stos
xchg
jg
mov
push
xchg
jbe
push
pusha
rcll
xlat
mov
adc
pop
into
fisubs
xchg
mov
jnp
ficoml
sub
std
lea
out
lcall
inc
push
mov
mov
iret
in
push
incb
inc
jmp
fcmovu
cltd
outsl
cmp
ss
hlt
xchg
push
push
xchg
out
test
pop
dec
adc
loopne
mov
push
dec
bound
sbb
dec
fwait
jge
sbb
inc
mov
je
dec
and
or
or
vpaddsw
repz
mov
inc
jnp
test
pop
dec
mov
mov
mov
pushf
mov
lret
lcall
jne
addr16
pop
aas
fwait
cmpsl
sbb
aam
and
dec
xchg
mov
bnd
or
ret
fucomip
popa
movsb
mov
movsl
std
lea
call
jmp
lret
cmp
sub
mov
les
ljmp
jp
pop
dec
jb
scas
std
dec
jmp
cltd
mov
adc
ljmp
divl
sub
and
div
inc
push
push
pop
mov
lret
mov
test
data16
push
loop
xlat
push
imul
lds
mov
push
push
push
lods
xlat
dec
sahf
sbb
xlat
xchg
decl
idivb
adc
xor
stos
push
cld
clc
push
jae
mov
xchg
xchg
inc
ljmp
iret
or
iret
mov
call
in
adc
add
inc
in
jecxz
xor
mov
xor
sbb
in
push
add
cmc
leave
add
or
pop
insb
ljmp
jmp
add
pop
nop
outsl
fstl
pushf
das
pop
adc
scas
inc
popa
mov
movsl
xchg
adc
out
stos
daa
loope
icebp
adc
or
aam
inc
lds
xchg
mov
xor
daa
inc
scas
xchg
fs
sub
push
rorb
fisubrs
xor
add
inc
imull
cmp
ljmp
sbb
xor
xchg
mov
or
dec
fsub
sbb
adc
push
ljmp
mov
push
sbb
mov
push
ss
ret
out
ja
mov
push
dec
orl
mov
mov
icebp
bound
rclb
dec
sbb
jg
ja
les
loope
pop
hlt
jne
mov
cmp
les
adc
mov
out
and
aam
mov
sub
pop
mov
cmovne
ret
xchg
add
fmuls
sub
xchg
add
fwait
push
pop
stc
jp
and
imul
cmp
push
pop
aas
test
in
xchg
and
aam
xchg
repz
out
adc
ja
lods
out
push
xchg
lods
jmp
sar
jne
outsl
ret
in
push
imul
cmp
clc
icebp
push
and
sbbl
cli
push
inc
repz
add
xchg
jmp
popf
int
pushf
fisttpl
mov
out
faddp
mov
scas
ljmp
cwtl
dec
add
add
cmp
dec
nop
lea
jg
loopne
inc
les
sbb
movsb
fwait
dec
cld
nop
mov
ret
jbe
aaa
ljmp
bound
repnz
loope
mov
adc
mov
ret
push
fs
fidivrl
pop
aaa
cmp
iret
imul
scas
fisubl
cmp
das
es
daa
mov
cmc
decb
inc
inc
mov
and
sub
cs
test
ss
jle
inc
add
sub
out
hlt
ja
mov
jge
or
xor
cltd
lods
sbb
add
mov
fidivrs
rcrb
lods
in
popf
xor
jbe
mov
dec
shlb
xor
shl
and
push
ljmp
mov
or
fmull
add
sub
pop
pop
adc
pop
jl
insb
xchg
inc
push
inc
in
push
cmp
inc
jge
ficomps
popa
ss
lret
and
out
cwtl
ret
ljmp
push
movsb
je
int
jnp
mov
stc
inc
int3
std
xorb
les
inc
lcall
mov
adc
out
mov
mov
xchg
jae
icebp
bound
inc
stc
inc
mov
inc
imul
mov
push
lret
mov
jge
sub
ficomps
ljmp
dec
shr
adc
xchg
jns
ss
lods
push
adc
inc
dec
pop
les
shl
pop
inc
rorl
loop
out
incl
jb
clc
scas
xchg
jns
arpl
push
sub
xor
or
xchg
dec
jae
pop
test
dec
or
and
mov
pop
hlt
push
lret
lahf
pop
sahf
inc
imulb
loope
mov
pusha
pop
sbb
negb
mov
xor
loopne
out
xor
lods
lock
in
ud1
xchg
leave
add
movsl
hlt
inc
jbe
jl
adc
jg
gs
inc
ds
ficomps
xchg
mov
mov
call
xchg
sub
icebp
cmpsl
adc
jecxz
jns
jne
pusha
adc
shll
dec
and
gs
dec
and
mov
sbb
push
xchg
sbb
popa
cmp
add
cmp
cmp
sbb
mov
sbb
std
or
cld
mov
fcmovnu
lods
sbb
dec
dec
mov
pop
hlt
sub
xor
pushf
and
or
int3
inc
pop
shlb
cmp
hlt
mov
pop
stc
push
xor
xchg
test
in
xor
enter
mov
and
mov
out
out
hlt
pop
in
imul
jae
inc
and
cmp
jne
push
mov
stc
cmp
push
addr16
jno
addr16
adc
push
mov
inc
add
xchg
fistl
inc
push
xor
ja
mov
cmp
xor
xchg
and
cmc
push
enter
dec
mov
inc
push
stos
sbb
movsb
imull
pop
or
xchg
mov
outsb
pop
fchs
xchg
or
cmp
adc
adc
xchg
das
sbb
sti
insb
scas
mov
cmp
in
popf
and
mov
inc
aaa
lret
inc
dec
stos
mul
inc
out
lcall
push
sub
popf
jle
mov
aas
in
jl
jp
in
rcll
icebp
or
push
scas
mov
shl
jns
movsl
mov
mov
push
nop
jmp
or
daa
stos
jmp
bound
aam
cmc
enter
fwait
mov
int3
fsts
lods
enter
or
dec
test
sarl
imul
incb
mov
push
sbb
cld
pop
int3
nop
cmp
pop
ret
dec
jb
testb
jl
cmc
movsb
out
or
lods
in
dec
sarl
push
xchg
lock
xlat
lret
and
test
dec
in
stos
xor
push
js
xor
cmp
jge
roll
push
std
xchg
dec
lods
mov
scas
enter
aam
xchg
insl
fldt
mov
scas
adc
cltd
mov
jne
adc
dec
cmpsl
push
nop
jp
cmpsl
and
mov
dec
in
repnz
rorb
dec
test
int3
aaa
jae
xor
xor
cmp
cmc
daa
jmp
mov
flds
lret
mov
divl
stos
adc
dec
mov
into
cwtl
mov
push
xchg
mov
movl
or
ficoms
or
mov
jb
push
andl
sbb
test
inc
cmp
stos
outsl
rolb
mov
xchg
ja
dec
sbb
je
frstor
jle
dec
addr16
add
push
int3
or
in
pop
lods
out
fwait
aam
testl
je
in
mov
lods
sarb
cmc
sti
imul
adc
cmp
cmp
test
pop
push
mov
in
sar
mov
mov
clc
sbb
addl
pop
aad
insl
loop
shll
sbb
lcall
jge
bound
daa
out
mov
push
inc
ret
rorb
int
xor
stos
mov
loope
jmp
xchg
sahf
push
pop
leave
mov
lds
cmp
jl
mov
mov
mov
loop
cld
js
and
inc
int3
in
loop
xor
daa
xchg
push
lock
mov
pushl
lahf
ds
lahf
add
dec
fwait
test
and
adc
aas
ja
sti
xchg
sub
ret
jbe
ds
mov
and
add
ljmp
mov
mov
mov
iret
mul
cmc
inc
dec
fiadds
lods
push
push
cmp
ret
xor
test
push
fstpt
dec
fmull
sbb
nop
push
addr16
lcall
cwtl
mov
lods
dec
gs
inc
mov
sub
mov
shr
add
push
xchg
inc
jae
arpl
paddsb
adc
sub
aaa
fdivr
test
cli
int
cs
cmp
faddp
bt
mov
pop
push
mov
push
enter
cmp
loop
mov
mul
xchg
jle
sahf
outsl
jecxz
cmp
fs
pusha
dec
jmp
ret
xor
imul
mov
adc
pop
in
cmp
pop
call
das
and
imul
shlb
imul
fbld
cmc
filds
dec
pop
inc
dec
jnp
enter
or
dec
cltd
arpl
xor
dec
mov
jl
outsl
or
inc
dec
lahf
cmpsb
in
imul
das
lea
stos
ret
test
add
arpl
pop
xchg
mov
dec
xchg
add
sahf
inc
sub
mov
std
ljmp
pop
mov
jl
push
sub
push
inc
iret
loop
movsl
lcall
pop
push
bnd
jmp
or
xor
mov
adc
xor
inc
ror
loope
fidivl
daa
add
test
insb
xlat
in
sbb
inc
aam
nop
fisttpl
or
pop
lahf
addr16
push
jmp
jecxz
and
mov
xorl
pusha
pushf
mov
adc
jne
pop
testl
ffree
jecxz
int
mov
add
xchg
dec
int
es
imul
push
aaa
daa
or
push
ret
push
aad
mov
in
sub
mov
sub
imul
mov
inc
adc
subb
clc
mov
cmp
jmp
mov
movsb
or
push
mov
fninit
imul
stos
mul
cmp
jge
leave
decl
jg
sub
fsubr
xor
mov
adc
nop
cmp
out
ja
push
xchg
push
jge
push
in
loope
lods
mov
test
stos
dec
mov
sub
pop
in
jp
jg
lret
and
or
inc
inc
call
stc
cmpsl
stos
and
jb
mov
xchg
gs
repz
popf
test
cli
shll
push
repnz
in
aad
jecxz
dec
mov
jo
adc
mov
push
out
pop
dec
out
in
adcl
fidivrl
add
arpl
push
or
adc
enter
int
lods
scas
pushf
dec
mov
pop
lods
xor
jo
cmpsl
enter
xchg
xchg
jmp
lahf
sub
jp
xor
rcrl
or
or
sub
sbb
cmp
dec
pop
mov
sbb
fisttps
js
mov
jno
push
movsl
xchg
faddl
imul
push
mov
add
inc
jne
sbb
add
and
fistps
lahf
push
pushf
cmp
jns
mov
cmp
mov
xchg
popf
mov
out
mov
dec
pusha
add
into
pop
and
lods
jne
enter
ljmp
aaa
mov
enter
xorl
sub
pop
test
mov
es
daa
ljmp
xor
inc
stos
sahf
sbb
fimull
pop
jle
jne
adc
jbe
out
add
mov
fadds
dec
mov
stc
jo
pop
leave
outsl
pop
mov
pusha
fadds
int
push
mov
movsl
not
push
dec
pop
jp
scas
popl
popa
xchg
add
pop
mov
mov
jg
pop
and
in
lahf
lret
loop
dec
cmc
jge
in
jae
push
xchg
stos
mov
add
or
xlat
fsubs
xchg
roll
sbb
stos
mov
or
jb
or
dec
push
orb
jb
aas
jmp
fs
dec
or
mov
fisubs
out
cmpl
and
loopne
jp
loope
in
xchg
add
jp
lahf
lret
or
enter
xorl
mov
mov
repz
xchg
mov
inc
add
sbbb
cmp
int
das
mov
cmp
add
add
cmp
ffree
fsubs
addr16
xchg
inc
cltd
mov
fdivrs
mov
and
call
add
iret
cmp
sub
cmp
out
cmp
fwait
and
pop
fcomi
movsb
fmuls
pop
mov
fninit
addl
in
xor
movsl
bound
sub
mov
fs
lret
hlt
das
inc
in
loopne
push
jb
cmp
jnp
mov
int
inc
lahf
jbe
lret
adcb
rorb
mov
rolb
xchg
mov
pusha
add
lcall
jb
stos
cwtl
xchg
enter
test
sbb
test
lea
inc
xchg
hlt
pop
or
mov
leave
mulb
ljmp
mov
aad
cmp
xchg
push
mov
jl
cli
jmp
jns
repz
iret
mov
sbb
inc
lahf
sub
pop
shrb
cmc
adc
lcall
loop
stos
add
mov
aad
inc
lret
cmc
mov
push
jne
adc
out
stc
sbb
or
add
movsl
sub
xchg
cmp
and
fcompl
inc
jmp
pop
jno
mov
seta
movsl
fdivrs
mov
sbb
mov
lcall
cli
insb
mov
pop
adcl
pop
mov
xchg
nop
mov
sub
adc
fs
push
jb
xor
jecxz
sbb
scas
adc
out
xchg
sti
outsl
add
inc
jnp
shrl
jecxz
sbb
call
cmp
jg
stos
fsubp
into
test
xor
and
or
mov
sarl
mov
lcall
scas
repz
fisubs
xchg
sbbb
add
scas
adc
aam
jbe
xchg
or
bound
xchg
out
fmull
jle
jns
into
das
repnz
es
or
cld
subl
mov
andl
pusha
mov
jecxz
js
int3
sub
in
push
mov
nop
cmp
and
test
fnstenv
inc
faddl
ret
dec
stos
loope
pusha
mov
loopne
pop
push
jbe
pop
xchg
lea
mov
or
enter
jge
pop
add
xor
and
sub
dec
lods
push
aam
jb
jo
jne
mov
fcompl
cmp
movsl
call
setno
xor
jns
cmc
icebp
cltd
gs
push
gs
inc
dec
rcll
xchg
int
sarb
aaa
mov
push
sbb
xchg
bound
loope
sub
lock
test
push
addr16
jle
xor
cmp
mov
xchg
xor
cltd
cs
imul
pop
inc
sahf
inc
rcl
mov
out
data16
or
inc
decl
ss
ficompl
cmp
jb
mov
scas
cmp
jne
rclb
outsl
xor
mov
andb
add
in
test
int
xor
jge
sub
cmp
mov
jns
movsb
push
jle
leave
outsl
fimuls
lods
cli
cwtl
pusha
imul
mov
orb
repnz
xor
loope
sub
fisubs
mov
lods
jne
xorps
enter
adc
lods
dec
test
cmp
ja
out
sbb
push
sarb
xor
lods
adc
jnp
sbb
jbe
test
andb
iret
pop
in
sub
xchg
dec
leave
mov
in
mov
loop
nop
sbb
cwtl
call
xchg
cmp
popa
fnstcw
add
js
addb
fbld
ja
rorl
repnz
fdivs
mov
sahf
mov
sbb
lcall
mov
jae
jge
xchg
data16
jne
pop
xchg
ja
jle
add
repnz
dec
inc
movsb
and
adc
pushf
cltd
fs
test
and
adc
adc
push
fcmovnb
fs
sub
push
dec
loop
dec
push
sbb
das
push
pop
push
popf
inc
add
or
mov
adc
cmc
cmp
xchg
faddl
int
push
mov
dec
ret
data16
in
mov
pop
ja
lods
fbld
mov
fidivl
fwait
inc
js
pop
push
mov
sbb
fld
and
adc
aad
xor
jecxz
inc
pop
adc
fdivrp
mov
ljmp
inc
ljmp
push
pop
add
add
inc
inc
mov
cmp
sub
push
aaa
popf
mov
lahf
dec
pop
roll
mov
or
xchg
jae
cwtl
test
adc
ja
and
lds
jne
mov
add
inc
dec
dec
notb
mov
sbb
add
outsl
mov
xchg
mov
popa
push
stc
movsb
icebp
fld
je
ror
jbe
out
stos
add
xchg
mov
fdiv
cmp
mov
pop
mov
inc
cmp
pop
jp
xor
xchg
and
pop
mov
fs
lret
mov
dec
mov
or
cmpsb
sbb
xchg
jb
mov
test
mov
sbb
test
iret
lret
call
mov
jge
fcompl
iret
inc
enter
mov
test
out
scas
and
out
jnp
popf
mov
jns
out
sti
fbld
icebp
cmp
mov
negl
pusha
adc
mov
jns
jns
in
stos
mov
pop
scas
aaa
je
ja
aam
inc
mov
stos
mov
stc
addr16
mov
inc
std
stos
add
jbe
push
sub
pop
mov
xor
adc
and
pop
push
fsubp
sub
pop
sub
ret
mov
outsl
aaa
xor
fldenv
adc
orb
sbb
ficomps
add
push
mov
out
daa
cwtl
and
js
cmp
imul
das
dec
and
je
push
pop
fs
mov
push
cld
stos
xlat
lret
ret
ds
dec
pushl
rorl
inc
mov
mul
repnz
lret
bndstx
adc
out
sbb
and
mov
push
mov
testb
in
jl
xor
imul
xchg
insb
add
out
push
cmp
xlat
popf
aam
xchg
out
sbb
cmc
push
push
xchg
push
jns
lods
xchg
movb
lods
adc
invd
sub
incl
mov
shl
sub
sbb
pop
mov
pop
cmp
fldt
gs
loope
test
es
mov
fbstp
add
shrb
adc
xchg
xor
push
or
jge
sahf
movsb
dec
cs
in
es
lret
movsb
adc
lods
cmpsb
imul
push
fists
adcb
mulb
lods
xchg
dec
lahf
pop
int
sbb
fbld
and
test
add
xor
mov
and
pop
lcall
jb
cmpsl
pusha
int3
mov
ss
xchg
or
sbb
scas
xchg
ds
loopne
imul
pop
testw
inc
clc
les
mov
ljmp
out
inc
cld
repnz
inc
xchg
cmp
cmp
iret
dec
inc
scas
add
inc
dec
addb
jbe
mov
les
stos
dec
mov
roll
lret
cmp
jns
xor
cwtl
scas
dec
push
xchg
repnz
push
repnz
jae
shrb
mov
shlb
adcb
divl
adc
sub
ljmp
pop
in
scas
mov
filds
cwtl
push
add
fildll
sarl
sub
and
stc
push
in
andl
frstor
out
jb
jecxz
test
addr16
out
jp
ficoml
mov
iret
jp
imul
lret
push
movb
shlb
aam
js,pn
xchg
xchg
cmpl
repnz
fdivr
sahf
inc
cltd
sub
mov
stos
fs
adc
mov
pop
aaa
pop
mov
mov
insb
mov
movsb
jge
divl
shlb
mov
pop
movsb
enter
decb
xchg
dec
adc
loop
mov
jne
and
scas
and
xor
push
neg
fadds
or
mov
push
push
mov
jl
pop
insb
adcb
and
jnp
imul
arpl
push
cmp
lcall
sarl
out
je
inc
insl
icebp
cmpsl
cmp
jae
cmp
jae
cltd
push
cltd
nop
aad
mov
xor
cwtl
andb
push
mov
sbb
mov
or
mov
push
pop
sbb
lret
mov
adcl
xchg
jg
roll
pop
aad
js
push
lret
popa
pusha
mov
das
ret
pushf
pop
call
and
xchg
inc
fisttps
ret
aad
or
std
syscall
push
pop
rolb
ror
mov
cmp
mov
cmp
fldenv
imul
ds
jne
push
and
push
loopne,pn
dec
insb
fistps
iret
dec
adc
xchg
nop
repnz
outsb
cmpsl
adc
add
lock
inc
cli
inc
scas
add
js
lods
add
insb
popf
push
inc
mov
adc
adc
repz
jecxz
daa
xchg
pop
mov
and
fs
pop
sbb
fs
inc
push
bound
lcall
into
add
sbb
out
push
mov
jecxz
lahf
lahf
mov
push
dec
imul
in
inc
fwait
out
das
lods
pop
movsb
mov
outsb
frstor
aam
int
mov
sbb
loope
in
mov
leave
je
adc
mov
scas
popf
out
ja
dec
fidivl
daa
add
pop
xchg
mov
rclb
ror
call
mov
mov
sbb
shr
addr16
cmp
mov
mov
shl
jge
sbbb
push
call
pushf
xchg
ljmp
push
pop
pop
xor
lods
fisubs
inc
stc
lea
push
and
out
mov
loop
iret
mov
aaa
xchg
decb
popf
fs
popa
jl
jge
xlat
mov
sub
fistpll
mov
stos
lcall
ss
mov
mov
fldl
scas
in
inc
in
mov
and
daa
pushf
in
cltd
psadbw
sub
lods
mov
arpl
mov
add
push
mov
xlat
aad
enter
fwait
inc
push
int3
addl
add
mov
jo
icebp
pop
mov
dec
xor
jmp
fldenv
int3
pop
or
sbb
aas
push
rorl
dec
fs
js
sbbb
and
cltd
fsts
outsl
lods
nop
call
sbb
xor
scas
add
jb
xchg
clc
test
outsl
lcall
mov
imul
mov
sub
ds
mov
pop
xchg
push
push
addr16
mov
mov
dec
cs
fimull
xorb
xchg
mov
test
dec
bound
dec
push
fcomps
dec
sub
stos
aad
js
out
and
adc
and
out
mov
mov
in
cmp
fcomps
and
dec
ror
sahf
mov
ljmp
pusha
lret
inc
out
push
decl
cmpsl
inc
mov
inc
rcrl
xor
inc
in
mov
insl
je
out
push
in
and
dec
imul
fwait
into
sub
dec
and
mov
loopne
and
push
dec
inc
nop
lods
jge
cmp
es
cld
cli
loope
int
sub
inc
or
xchg
push
inc
mov
jo
push
pop
imul
sbb
in
call
xchg
lret
mov
mov
cwtl
insb
hlt
pop
xor
pop
movsl
sbb
loope
aas
js
jl
push
push
mov
lds
cmp
inc
imul
lods
fistpl
jbe,pn
xchg
lods
test
movsb
in
mov
mov
daa
pop
test
push
or
arpl
push
sbb
cmp
lret
mov
mov
outsl
scas
jecxz
push
stc
loop
das
je
xor
sub
fwait
iret
inc
or
push
ret
jbe
fwait
push
je
iret
pushl
jne
and
mov
mov
shrb
data16
in
pop
cmpsl
sbb
in
xchg
xor
lds
loope
mov
xchg
call
jg
cld
add
sub
test
pop
cwtl
xor
addl
jo
inc
xchg
rcll
data16
xchg
xor
or
sub
sbbl
push
mov
push
hlt
mov
xchg
fmul
sti
or
lret
scas
xchg
sub
push
into
out
insl
fimuls
in
fnstenv
iret
sub
mov
adc
loopne
scas
dec
nop
popa
pop
repnz
mov
dec
pop
pop
mov
mov
rcrl
inc
pop
and
mov
jle
xor
cmp
dec
lea
adc
je
pop
jns
add
scas
stos
dec
test
rclb
inc
mov
test
jle
or
mov
mov
or
inc
push
les
in
shlb
mov
mov
push
bound
addr16
sarb
inc
or
add
xor
mov
mov
addr16
sbb
lret
mov
xchg
aam
or
xchg
stos
cmpsl
int
in
jb
outsl
hlt
fisubrl
lcall
jl
adc
stc
mov
fbstp
adc
or
int
enter
mov
dec
andl
lock
imul
xor
shrb
mov
aas
mull
lods
sbb
cmp
cmpsb
jbe
pop
pop
mov
add
xchg
fstps
xchg
and
mov
popa
mov
dec
sub
iret
cltd
mov
scas
ds
ljmp
jge
jbe
xchg
scas
xor
hlt
add
sub
orl
orl
and
or
push
adc
jl
adc
push
out
in
imul
sbb
mov
xchg
scas
outsl
dec
ret
push
mov
adc
sbb
xor
nop
fcom
cmpsb
mov
dec
pop
xor
mov
xchg
mov
fdiv
mov
mov
leave
movsl
dec
testb
cs
lcall
inc
jne
add
repnz
fs
xchg
and
and
adc
repnz
cmp
fdivs
fimull
test
fdivrl
mov
dec
sbb
mov
jno
test
aas
inc
rcr
xor
cld
adc
cmp
add
sub
mov
out
or
dec
and
movl
je
fidivrs
adc
in
rorb
mov
mov
jle,pn
xchg
cltd
inc
sbb
xor
test
sub
adc
mov
jp
inc
fcoml
fstl
sar
add
out
shlb
mov
stos
jp
in
push
mov
fstpl
push
bound
jne
push
test
and
lret
mov
fdivr
and
lods
pop
addr16
les
inc
arpl
not
xchg
mov
or
xchg
iret
adc
mov
cwtl
and
mov
mov
dec
lods
mov
dec
in
adc
sahf
test
mov
sub
iret
sub
daa
loopne
icebp
dec
add
es
in
fisubrl
fsub
pop
ret
int
push
insl
sbb
pop
mov
xchg
in
xchg
jge
cmc
jp
jns
xchg
sub
test
jb
xor
and
jle
subl
mov
push
push
loopne
pop
xchg
xor
xchg
cwtd
pusha
out
xor
ss
sti
gs
je
rolb
js
movsl
jg
lret
cmc
aad
stos
das
loope
push
push
and
je
inc
in
sub
movsl
imul
and
dec
in
cli
ds
test
adcb
mov
mov
push
loop
aad
xor
cltd
imul
adc
mov
fsubrs
mov
sti
loope
xor
sub
rcr
inc
mov
xchg
iret
or
in
leave
sub
jne
adc
flds
stc
inc
movsb
inc
jbe
pop
push
inc
push
hlt
mov
imul
adc
push
inc
push
sub
movsb
cltd
sbbl
mov
lahf
cmp
in
rorl
lea
mov
nop
mov
loope
lea
add
add
pop
xchg
arpl
xor
or
dec
dec
jmp
mov
fdivl
mov
out
add
data16
jg
xchg
loope
je
aam
mov
inc
ds
add
fcoml
inc
ja
xchg
dec
iret
dec
rcll
xchg
fstpt
mov
jle
sbb
in
push
sub
les
xchg
pop
mov
and
sbb
xchg
and
mov
gs
std
inc
xchg
outsl
orl
cmp
xchg
push
test
jmp
mov
popa
out
mov
mov
outsl
mov
sbb
dec
mov
pusha
sub
stc
adc
fiadds
push
sub
icebp
cmp
jl
and
adc
int
push
cmpb
sub
mov
lods
cli
fimull
sbb
cmp
lret
es
jno
jl
fucomip
xchg
jbe
stos
lods
adc
daa
cld
xlat
dec
icebp
mov
fcoms
mulb
inc
jge
subb
stos
scas
mov
adc
dec
sub
push
mov
popa
xchg
loope
inc
xchg
and
cmpsb
mov
push
cmpsl
dec
into
pop
sti
pop
dec
sub
sahf
or
stos
push
inc
iret
jbe
sbb
cs
addb
or
jp
dec
mov
sbb
cmp
lock
inc
xorl
inc
xchg
je
ret
sbb
roll
and
push
inc
pop
inc
arpl
and
ds
imul
inc
outsl
and
push
fldt
adc
mov
shll
xchg
aam
outsl
sub
cld
cmp
xor
rep
add
fsubp
ffreep
mov
mov
cmp
cld
mov
dec
fdivr
gs
push
mov
jno
data16
dec
shll
test
adc
inc
inc
or
jmp
or
cld
lahf
xchg
mov
iret
jl
xchg
or
lret
rorl
lock
popf
arpl
or
xchg
and
popf
lret
test
in
push
dec
imul
cmp
ja
dec
jp
jp
sub
or
aam
dec
punpckhdq
mov
ficompl
movhps
or
cmp
xchg
test
roll
jle
sbbb
clc
and
jmp
push
imull
adc
inc
xchg
mov
mov
add
dec
pop
push
mov
adc
fisubrs
arpl
jg
rcr
insl
sub
gs
call
outsb
lret
or
aaa
orl
pop
cmc
test
in
pop
js
lret
loope
push
dec
push
ret
enter
inc
or
outsb
sarl
xchg
out
cmp
lret
dec
das
dec
cs
sbb
push
dec
das
jl
xchg
std
mov
mov
je
scas
mov
lcall
add
or
add
sahf
roll
fidivl
int
mov
shrl
mov
aas
sahf
vsubpd
int
push
fs
push
out
repz
inc
mov
enter
je
jmp
mov
mov
jl
addr16
fcmovnbe
xor
in
jmp
into
fwait
mov
cmpsw
add
xchg
mov
jle
movsl
push
je
inc
mov
pusha
pusha
sbb
int
stos
or
shrb
mov
fdivl
in
sub
lds
mov
sub
outsb
mov
sbb
insl
and
rorl
adcl
push
shrl
cltd
dec
add
scas
and
in
popa
or
mov
daa
push
mov
xor
jns
fstpl
rorb
dec
repz
dec
mov
mov
popa
mov
inc
scas
shlb
sub
ret
mov
jae
js
ljmp
arpl
outsb
mov
cld
cmp
xchg
nop
mov
or
sbb
lret
ret
jmp
push
imul
test
push
adc
dec
dec
sbb
adc
inc
shlb
in
int3
nop
loop
into
adc
push
aaa
outsl
dec
aad
add
cmp
out
in
sbb
sub
xor
mov
popa
fdivrs
out
imull
mov
mov
icebp
jl
arpl
push
xchg
cmp
sahf
fcomps
or
pop
xchg
enter
pusha
jmp
insb
cmp
imul
cmpsl
stc
xchg
dec
fs
repnz
scas
sbb
sbb
xchg
and
imul
fcomi
jb
insb
cmp
jo
xor
mov
inc
add
push
jg
lods
and
negl
add
inc
or
xrelease
rcrb
andl
jge
aaa
loop
mov
xchg
popf
fsubrs
outsl
sahf
lods
es
jnp
and
arpl
rcr
and
rcr
xlat
and
cmp
mov
add
fstps
mov
repz
cli
cmp
orb
addr16
fdivl
dec
adc
adc
jge
pop
cltd
imul
test
xor
mov
aas
repnz
jnp
inc
and
mov
xchg
xor
sbb
jbe
or
pop
push
add
cld
outsb
outsl
jno
fdivr
add
mov
movsb
push
lods
add
sbb
imul
cmc
sub
lea
sub
popf
sbb
mov
roll
lea
xlat
xor
icebp
popa
arpl
sub
jnp
adc
inc
mov
and
xor
xchg
cmpsb
scas
inc
pop
out
in
out
mov
push
add
add
aaa
into
jb
or
jns
jns
int3
int
lcall
int3
lcall
pop
mov
jmp
in
push
je
push
or
adc
jl
in
cmp
daa
movsl
mov
dec
cmpsb
test
imul
lret
mov
lds
repnz
and
push
aaa
push
mov
lock
popf
xor
adc
cmpl
jmp
sub
movsb
xor
into
popa
ja
test
cmpb
lfence
sub
arpl
test
jge
lret
adcb
outsl
daa
and
mov
sti
jae
jl
and
and
in
clc
mov
pop
dec
fisttps
movsb
inc
ss
insb
nop
cmp
dec
push
pop
adc
sub
test
fadds
jecxz
scas
cmp
xor
test
imul
pop
xchg
mov
jne
adc
ss
sarb
aam
cmp
fsubp
scas
dec
lds
jecxz
inc
add
outsb
add
adcb
and
dec
sub
fidivl
xchg
adc
fsubp
cmp
dec
push
cmp
into
aad
in
mov
shlb
scas
mov
fisubrl
mov
mov
std
insb
jae
outsb
fisubrs
sbb
loopne
insl
loop
sub
sbb
push
ret
push
inc
inc
aas
je
mov
xchg
dec
aam
and
push
jmp
cwtl
fmulp
mov
pop
dec
add
dec
movsb
sarb
adc
jne
jae
push
ja
xor
inc
mov
mov
cmp
les
lahf
dec
insb
mov
adc
sbb
repz
push
lret
jnp
sahf
mov
cli
movsb
mov
mov
or
sahf
xchg
andl
mov
dec
inc
mov
sbb
xor
stos
xchg
in
dec
push
insb
sbb
xchg
pusha
xchg
add
add
dec
mov
mov
sub
iret
jbe
sub
push
xchg
push
jns
aaa
mov
js
rcr
add
cmc
jb
xor
add
aad
jne
nop
mov
mov
inc
je
pop
and
jl
int3
push
outsl
push
mov
sbb
sub
mov
and
mov
data16
inc
cld
stc
stos
movsl
ret
adc
adc
imul
mov
dec
pop
stos
scas
scas
cmp
adc
cmp
shll
loope
stos
dec
outsl
xlat
fsts
fcomps
push
push
rorl
mov
push
inc
pop
dec
inc
iret
scas
mov
push
fldt
sbb
inc
pop
inc
mov
lahf
enter
loop
xor
sti
lahf
xor
and
and
sub
lret
inc
mov
jnp
fcoml
mov
xor
jbe
in
inc
fisttpl
fstpt
adc
aam
or
cmc
lods
mov
pop
add
add
addr16
push
loop
jl
xchg
in
shll
add
mov
jle
pushf
inc
xchg
dec
sub
jnp
sahf
cmpsl
cmp
fldl2t
lcall
mov
jge
push
andb
xchg
pop
and
jl
pop
pop
stc
adc
les
and
daa
mov
jge
and
cltd
pusha
fmull
gs
loopne
push
inc
sbb
lahf
testb
adc
les
idivb
orl
xor
mov
gs
clc
adc
push
push
adc
push
or
js
and
rcl
inc
fisubs
mov
insl
sbb
add
es
je
mov
mov
dec
inc
mov
dec
mov
push
popa
push
jp
int
dec
repz
aad
cld
movsl
sbb
pop
or
lods
inc
ficomps
stc
pop
mov
stc
jmp
jmp
fs
xchg
jg
and
mov
xor
add
sub
sbb
cmp
pop
cli
inc
add
cmp
imul
add
xlat
aas
ds
lods
xchg
and
test
js
push
fldenv
add
add
bound
aaa
insl
xchg
sub
shlb
or
push
pop
pop
pop
xor
add
outsl
xor
sub
rorl
roll
bound
mov
loope
adc
popa
push
pushf
mov
xor
fildll
das
dec
fcmovnb
fadd
aam
stos
adc
mov
jnp
ror
jnp
ja
mov
lea
and
dec
pop
outsb
loopne
pop
fs
push
add
mov
aam
test
cltd
out
rcll
dec
cltd
insl
test
aam
add
fistpll
gs
filds
mov
sbb
andl
xor
repnz
into
jns
mov
push
rol
jecxz
out
jns
outsl
lods
scas
push
jge
mov
int3
shlb
jl
lahf
jecxz
fwait
xor
jno
imul
gs
inc
push
fs
loop
add
ja
fiaddl
push
outsb
push
vpsubw
xchg
daa
mov
and
les
mov
leave
fmuls
test
out
mov
repz
push
xor
or
push
mov
adc
mov
in
in
mov
add
ret
jbe
lods
xor
add
xchg
rolb
dec
rcr
ds
cltd
jle
jae
mov
out
int3
dec
dec
inc
out
daa
fiaddl
ss
outsl
imul
js
aad
les
test
push
inc
xchg
push
add
lea
pushf
out
fisttps
cltd
sahf
dec
pop
push
cmp
mov
mov
loop
pop
dec
and
gs
insb
leave
jmp
clc
repz
dec
pop
ds
mov
push
mov
push
stos
pop
shr
or
mov
sahf
mov
push
dec
js
push
popa
lea
mov
inc
ffreep
pushf
sbb
push
je
and
in
and
fisttpl
jne
jle
jno
pop
negl
push
and
aas
push
sub
pop
mov
mov
shrb
cmp
fnstcw
adc
das
iret
cmp
mov
mov
mov
jecxz
fisttpl
adcb
sub
insl
sub
data16
inc
pop
out
mov
es
sbb
and
mov
adc
pop
vpavgb
ror
stos
sbb
mov
jbe
mov
test
test
pop
cs
add
addr16
dec
aam
test
xor
fisubl
jecxz
push
fisubl
jmp
push
jmp
clc
xchg
xlat
xchg
xchg
pop
sub
cld
and
test
xor
loop
mov
int
int3
in
fisubrs
fadd
loop
sub
pop
adc
fisttps
inc
jg
aas
sub
mov
push
mov
cmp
cmpsl
jge
mov
arpl
mov
jmp
vandnpd
daa
les
jle
push
addr16
and
lret
fimull
mov
jp
lds
inc
dec
cmp
iret
mov
cmp
sarb
push
or
and
out
pop
xchg
stc
sub
mov
repz
cld
cli
cmpsl
int
adc
mov
inc
ret
xchg
inc
pop
sbb
out
and
inc
cmp
jg
test
les
mov
mulb
sahf
pop
mov
inc
je
icebp
pop
sub
adc
add
xchg
imul
imul
aam
pop
outsl
xchg
fnstenv
xor
pop
cmp
dec
out
aam
mov
or
sub
inc
cli
push
and
lds
in
pop
js
jp
xlat
xor
dec
or
cld
jb
jnp
je
lea
mov
xor
push
shr
lahf
gs
mov
in
rcr
les
xor
in
mov
cltd
push
mov
sbb
jb
lret
mov
fs
mov
in
fwait
sub
adc
dec
mov
imul
cmp
enter
pop
lds
push
cmp
pushf
repz
rcrl
imul
sub
call
push
ret
push
imul
and
push
jnp
dec
jle
dec
mov
cmp
std
addr16
rcrb
jecxz
ds
xor
sbbl
mov
sub
cmp
mov
fwait
push
shll
pop
jmp
mov
cltd
pop
cmp
lds
loope,pt
fstps
xchg
and
xor
mov
pop
sti
pop
ficompl
in
movsl
inc
pop
inc
js
jl
rolb
mov
fidivl
xor
fdivrs
loope
mov
js
ljmp
add
mov
cwtl
sbb
dec
cmp
popa
das
stc
nop
fldcw
mov
jge
das
add
shl
adc
add
iret
jp
test
mulb
movl
pushf
mov
and
inc
sbb
add
adc
or
or
adc
das
les
push
jo
and
decl
addr16
jbe
jge
ss
xor
enter
pop
mov
xor
or
jae
mov
xchg
std
scas
popa
adc
pop
push
xor
xchg
pop
jae
test
cli
dec
or
out
dec
mov
xor
popa
jns
sbb
cmpsl
and
mov
xchg
add
push
popf
sub
scas
pop
jns,pt
leave
ds
scas
imul
sbb
jmp
add
mov
aad
jne
sbb
lret
call
clc
xchg
mov
xlat
add
addr16
idivl
adc
dec
xor
pcmpeqd
jmp
mov
and
or
dec
xlat
test
sbb
jp
loop
add
inc
push
popa
fadd
in
loop
lcall
cmp
in
adcl
inc
ljmp
lret
pop
gs
jmp
dec
mov
mov
cmp
dec
and
pop
xor
dec
jnp
pop
dec
lock
test
shr
sti
sub
adc
rorl
push
stos
mov
sbb
xor
out
jbe
movsb
xchg
jmp
dec
dec
or
out
int3
stos
push
push
loopne
cmpl
adc
lret
std
fnstsw
fldcw
mov
add
hlt
pop
call
add
repnz
rorl
push
dec
adc
jno
and
push
sub
mov
adc
dec
hlt
scas
push
push
xor
adc
cmpsb
xchg
in
stc
stos
icebp
addr16
leave
cwtl
fcomps
or
and
jecxz
push
in
lods
push
std
out
push
in
push
test
xchg
fmul
icebp
outsb
jb
mov
mov
and
pop
fidivrl
mov
xchg
shrl
test
inc
lods
mov
enterw
out
xor
add
mov
loop
mov
sub
cmpsl
mov
decl
fnstsw
fnstsw
fcmovne
add
arpl
stos
scas
sarl
push
adc
insl
jns
inc
fnstcw
adc
popa
push
call
or
scas
ds
pop
adc
test
fwait
push
push
and
in
xchg
add
test
xor
sub
pusha
adc
mov
out
bnd
or
cmp
sub
clc
push
or
sbb
insl
test
in
arpl
sahf
into
push
inc
cmc
imul
or
and
orl
ljmp
aam
dec
rep
in
in
gs
int
xchg
mov
sbb
pop
dec
roll
ret
dec
xchg
mov
cld
xchg
cmp
push
mov
clc
xor
pop
movsl
ja
pop
xchg
mov
out
xchg
xor
cmp
xchg
jmp
or
and
aam
loopne
ljmp
inc
gs
or
xchg
inc
lods
mov
lea
mov
sbb
pop
movsb
and
dec
jp
imul
mov
xchg
inc
jl
ret
pop
mov
add
sbb
cwtl
mov
fs
jecxz
sbb
xchg
aad
mov
call
addr16
xchg
lret
cmp
cmp
adc
jne
inc
das
mov
cmpb
cld
lods
jmp
or
orl
add
fldl
std
movsb
mov
cmp
js
subb
sbb
ficomps
test
addb
inc
lret
shlb
add
clc
adc
add
jmp
jmp
pop
xchg
mov
sahf
ret
stos
mov
xchg
pop
xor
rolb
pop
push
jge
sti
dec
stos
imull
xlat
cwtl
daa
push
lret
pop
cld
in
cld
push
push
into
movsb
int
rol
pop
stos
aas
mov
cmp
xchg
scas
xchg
sub
push
jmp
xor
add
lret
movsl
jbe
cmp
repnz
cmp
dec
xchg
scas
xor
pop
insb
mov
fisttpll
push
mov
push
fs
insb
mov
mov
cmpsl
cmp
outsb
jle
lods
xchg
push
aas
xchg
in
fistl
movsb
daa
or
test
std
push
inc
inc
mov
rolb
dec
sbb
stc
ds
or
pop
push
cli
and
mov
aaa
jl
mov
mov
add
push
cmpl
xacquire
fs
sahf
dec
jecxz
idivl
out
pop
ret
arpl
jo
mov
fisubrs
iret
dec
mov
cmp
pop
icebp
fldcw
xchg
xor
dec
sbb
into
mov
loopne
daa
rclb
mov
fstps
sub
push
add
dec
jl
push
sbb
cli
das
sbb
sbb
mov
std
jp
or
popf
or
sbbb
fidivrs
inc
dec
dec
mov
mov
clc
mov
and
or
mov
shlb
ficomps
sbb
loop
cmpsl
dec
and
add
cmpsb
mov
mov
jle
push
mov
fdivrl
push
shll
ljmp
sti
pop
mov
sbb
cwtl
in
xchg
cwtl
mov
and
cmpsl
mov
int
lahf
data16
mov
inc
jg
hlt
lods
addb
mov
push
movsl
mov
mov
pop
fistps
sub
mov
in
mov
insl
insb
dec
or
xchg
hlt
cmpsb
jae
and
fwait
out
into
jnp
jp
push
inc
loopne
xor
in
jmp
mov
push
es
jnp
ss
jmp
push
addr16
mov
dec
neg
xchg
pop
inc
out
jmp
jge
inc
adc
sub
xor
inc
idivb
pop
cmpsl
push
dec
dec
push
outsb
or
movsb
jp
add
nop
or
mov
insl
iret
mov
sub
dec
popf
lahf
insb
jmp
sarl
out
movsb
lret
cltd
negl
pop
imul
inc
mov
inc
leave
ds
cmp
sub
ds
cmp
adcl
in
mov
ss
shlb
xchg
xchg
sbb
addl
cmpl
mov
loop
sbb
mov
rorb
xchg
cmp
filds
scas
add
jle
lods
into
pop
or
and
sti
xor
fidivrl
add
seta
jo
loop
cmp
push
addl
lock
or
mov
push
xchg
mov
adc
cli
cmp
daa
notb
cltd
in
je
lods
popf
sbb
adc
mov
mov
mov
adc
in
sub
pop
pop
rcrl
aas
repz
int
or
jne
aad
push
sub
test
push
add
call
mov
loopne
inc
xchg
mov
push
jbe
sbb
pop
jbe
add
pop
add
dec
cmpsl
movsb
clc
sbb
dec
fwait
test
mov
cmp
sub
xlat
fs
push
ds
in
rorl
cmp
inc
mov
dec
mov
in
repz
scas
add
negb
and
add
lret
add
and
lret
mov
push
in
cwtl
mov
mov
adc
mov
mov
mov
outsl
and
push
mov
jl
xor
les
or
xchg
or
push
enter
push
push
and
int
ljmp
int3
imul
xor
push
pop
or
ffree
loop
aam
pop
or
fists
dec
sahf
xor
xchg
addr16
sar
adc
sahf
leave
inc
int
adc
xlat
sbb
fidivs
lea
cmp
enter
cmpsl
xchg
sahf
pop
call
fsubr
adc
pop
lret
popf
lea
iret
jns
xor
ja
out
inc
ds
and
lds
ret
jno
enter
xchg
sub
xor
pop
mov
insb
fildl
fcomps
cmp
decb
inc
or
out
inc
dec
sahf
jmp
fxam
dec
xor
hlt
jp
cwtl
stos
add
stos
jmp
orb
mov
inc
jle
imul
add
movsl
cmp
sbb
adc
daa
cltd
out
ja
add
mov
xor
cwtl
jo
sbb
jae
or
mov
mov
add
fadds
lret
jmp
or
ljmp
jne
pop
mov
rclb
mov
out
xchg
mov
mov
dec
ljmp
jo
std
movsb
add
dec
test
mov
in
loop
lods
mov
rcrb
rol
cmp
mov
cli
int3
jp
jnp
jmp
xchg
and
mov
dec
jbe
nop
icebp
sarb
and
mov
jbe
adc
mov
mov
scas
outsl
cwtl
je
popa
cld
out
insl
jo
in
outsl
add
xchg
lar
pushf
lock
in
pop
inc
insl
pop
inc
iret
lahf
iret
and
sti
int3
cltd
inc
out
cmc
cs
jmp
bnd
rcrl
call
cli
mov
movsb
movsb
mov
push
sub
add
or
pop
xchg
inc
das
cli
lods
mov
jp
jnp
fwait
and
hlt
lods
dec
cmc
sti
sti
or
mov
mov
jnp
stc
cmp
aam
into
push
jp
mov
xchg
lods
cmpl
jae
pop
stc
ret
xor
stos
adc
test
jmp
popf
leave
lahf
loope
mov
arpl
loopne
pop
stos
rcl
in
std
jns
jmp
push
sbb
lret
xor
sbb
ja
std
out
xor
fildll
dec
sarb
sub
ficoml
loope
fs
jp
gs
push
cmpsb
sub
std
dec
adc
aaa
das
jo
mov
je
movsb
pop
sti
lcall
bound
dec
fstp
xchg
sbb
enter
sbb
adc
mov
mov
push
fxam
sahf
repnz
rorl
mov
bound
movsl
and
aam
lcall
ss
roll
xchg
or
cmp
xchg
out
jns
mov
cmc
in
mov
cmpl
jae
xchg
sub
sub
ret
lds
insb
adc
mov
xor
ds
in
imul
jne
inc
mov
lock
xor
scas
add
mov
xorb
bnd
xchg
jg
pop
fidivrl
push
jmp
lods
jns
mov
notb
xorb
fistpl
jl
and
adc
smsw
test
push
sti
pop
fs
pop
mov
lock
mov
lock
ret
mov
cmp
pop
inc
inc
ud1
xchg
dec
inc
pop
push
jne
cs
popf
cmpsl
iret
mov
fs
or
cmp
aad
add
inc
gs
lret
jne
das
icebp
aas
sub
xchg
sarb
and
clc
into
push
jno
push
in
push
sbb
stos
mov
scas
sbb
mov
and
insb
xorl
ljmp
cmpb
xchg
dec
movsl
dec
mov
jno
enter
mov
adc
add
jge
push
andl
notb
lret
dec
mov
sub
inc
or
shr
mov
mov
mov
movsb
xor
push
adc
sub
xchg
pop
nop
es
adc
jae
add
add
lea
jp
std
cmp
shl
dec
lods
add
add
rcl
testl
das
pop
sbb
mov
cmpsl
or
pop
rorb
cwtl
xor
sbb
bndstx
pop
fidivrs
stc
xorl
fsubs
sub
and
cmp
and
or
pushf
xor
jmp
pop
ja
test
pop
pop
nop
jl
or
lret
and
lcall
mov
loopne
aaa
shl
lret
cmc
mov
dec
out
je
test
fisttps
add
sti
inc
int
cmpsb
push
lods
mov
pop
jae
fs
sbb
ficomps
mov
push
dec
scas
inc
cmp
std
fcoml
push
xor
aam
dec
leave
inc
dec
xchg
in
xchg
push
rorl
mov
lret
dec
repnz
movsl
jae
pop
jg
mov
mov
adcl
or
and
sbbb
dec
mov
out
xor
and
in
xchg
sahf
mov
pop
stos
fstpl
push
lods
lret
out
cs
push
movb
data16
jbe
push
movsb
imul
mov
xchg
hlt
ret
pop
xor
dec
jmp
xor
cwtl
cmp
outsl
shll
les
xchg
pop
xchg
arpl
int3
pop
pushf
insb
cmpsl
fcoms
pop
push
test
cmp
sahf
xchg
ja
daa
mov
jg
xchg
aam
xchg
jecxz
cmpsl
add
xor
outsb
or
ds
xchg
sahf
sub
sub
xchg
out
jns
orl
mov
jmp
dec
js
sbb
sbb
insb
insl
sbb
sti
xor
popf
in
dec
jmp
mov
dec
mov
out
aam
jno
push
daa
adc
loopne
leave
ljmp
data16
and
arpl
nop
cmp
imul
adc
pop
int3
pop
xchg
pop
test
repnz
dec
adc
pop
fs
xor
aas
push
pop
and
cmp
xlat
daa
int
jl
push
in
add
sahf
sbb
push
movsb
ds
pop
pop
test
pop
outsb
cmp
add
pop
mov
xor
dec
imul
rorl
dec
jo
mov
xlat
das
call
fidivl
inc
mov
or
stc
lods
cmp
lds
mov
pop
iret
jo
in
rorl
xor
sub
movsb
xor
imul
cwtl
jae
lret
mov
push
test
jns
add
mov
divl
push
push
inc
sub
dec
cmp
adc
xor
push
popf
or
fidivrs
mov
fimull
inc
sub
enter
in
in
xchg
xor
arpl
sbb
adc
push
lcall
mov
sbb
fidivrs
jb
adc
cmp
dec
and
fstps
movsb
outsb
xchg
das
mov
popa
jne
test
adc
cmp
push
or
arpl
fstl
int3
ja
dec
inc
mov
mov
xchg
pop
jle
xchg
mov
pop
or
lret
xchg
clc
outsb
add
adc
sbb
adc
aad
or
mov
mov
push
cltd
mov
adc
lahf
sub
mov
scas
pop
out
sub
mov
jns
adc
pop
ds
repnz
mov
adc
cltd
cmpsb
and
xor
xor
addr16
in
inc
ljmp
push
loop
sbb
cmpsb
dec
je
inc
mov
pop
sub
insl
fwait
xchg
inc
sahf
sub
enter
push
outsb
cmp
rol
mov
xor
xor
mov
mov
sub
push
int3
and
scas
add
push
loopne
inc
jb
xchg
or
inc
pop
mov
xchg
sub
cltd
or
jge
gs
loop
mov
fst
dec
mov
xchg
xchg
inc
jge
adc
pop
repnz
fwait
ljmp
mov
stos
sub
dec
xor
test
inc
push
cld
sub
dec
je
push
inc
imul
stos
add
mov
sub
pop
stc
insl
mov
pop
fdivl
and
xor
pop
cltd
mov
mov
js
scas
iret
xchg
sub
repnz
popa
lahf
cmc
pop
outsb
mov
int3
pop
pushw
addb
cmp
push
cltd
xor
lcall
mov
test
outsb
addr16
inc
repnz
cwtl
mov
xor
xor
nop
es
or
xchg
popf
cmpsl
sahf
push
imul
mov
sbb
out
xchg
fwait
and
jbe
inc
cmp
xchg
adcl
cmp
sahf
or
mov
xchg
inc
shl
push
mov
lock
cmp
gs
mov
dec
mov
mov
out
xor
xor
test
hlt
gs
decb
test
inc
int
mov
sub
cs
mov
into
lock
mov
xchg
clc
xchg
bnd
jne
vmwrite
pusha
pop
fs
push
or
mov
jmp
cltd
inc
push
movsb
es
mov
fstpt
mov
or
mov
insb
gs
and
xchg
stc
movsl
lods
and
sbb
push
inc
stc
test
sbb
cmp
data16
aam
mov
inc
cmp
loope
repnz
or
test
sahf
cmp
leave
xchg
je
mov
xlat
xlat
xchg
mov
inc
stos
jecxz
rorl
test
daa
dec
fdivr
shll
xorb
sbb
clc
loopne
les
mov
xchg
xor
add
xchg
popf
ljmp
jmp
push
pop
out
sti
insb
nop
xchg
jp
sbbb
loopne
imul
mov
mov
cmp
xlat
jo
cmp
fcomip
sbbl
or
sbb
cli
adc
mov
rorl
jmp
jne
in
dec
icebp
jl
push
int3
add
or
sahf
cmp
jmp
sub
adc
xchg
cmpsb
jg
lods
in
push
mov
or
lcall
inc
and
mov
mov
mov
pushf
in
scas
sub
xor
jns
mov
imul
rcll
xorb
out
dec
scas
sti
mov
sub
inc
or
lock
mulb
cmp
ja
fwait
outsb
fisubrl
cmpsb
lds
inc
mov
scas
cmp
jge,pt
popf
jne
push
test
jmp
stos
xchg
mov
sahf
lahf
lods
jg
mov
or
and
mov
xchg
in
stc
movsl
pop
sbb
adc
inc
sbb
andb
and
leave
stc
bound
and
sbb
hlt
mov
push
and
sub
mov
push
mov
add
xchg
mov
lods
ds
inc
movsb
jp
dec
das
lret
rcll
cmpsl
and
imul
pushf
or
jb
xchg
or
xchg
mov
jae
movsl
xor
in
imul
jns
cmp
in
lods
dec
movsl
pop
test
mov
pushf
mov
inc
mov
shrb
aad
int3
dec
js,pn
sub
fisttpll
dec
cmp
loop
add
jbe
arpl
cmp
sbb
ret
fwait
inc
lea
test
lock
gs
cmp
mov
inc
and
sbb
dec
mov
inc
stc
mov
mov
xchg
or
push
adc
pop
sbbb
xchg
adc
fistl
or
popf
fcomip
inc
or
scas
mov
sti
adc
aam
mov
adc
inc
shr
imul
int3
cmp
stos
in
mov
sub
xchg
popa
es
pop
icebp
cmc
arpl
imul
dec
adc
insl
xor
mov
add
nop
inc
mov
or
clc
inc
movsl
push
sbb
stc
mov
sub
addr16
rcrb
stos
js
in
in
inc
or
push
xor
xlat
jg
mov
push
ret
mov
jp
out
xchg
pop
cmp
lods
push
jmp
incb
shll
ljmp
adcb
adc
mov
xchg
sub
lods
xor
xchg
stos
aas
arpl
inc
push
xchg
test
xchg
iret
mov
or
jae
mov
outsl
push
push
jns
outsb
cmp
sbb
out
fildll
lock
lret
test
stos
inc
shrl
mov
inc
mov
ss
mov
pop
aam
push
lret
pop
hlt
sub
mov
bound
mov
adc
cmp
jmp
stc
or
addb
in
imul
xchg
sbb
rclb
std
dec
pop
ret
mov
inc
xchg
pusha
cld
aas
shll
loop
jl
xchg
jmp
divps
jge
std
cmc
xchg
dec
adc
mov
das
inc
xchg
dec
add
lret
outsb
in
movsl
dec
sub
dec
dec
scas
sbb
xchg
inc
mov
jns
aas
popf
enter
les
jge
int
outsb
mov
cmp
lcall
and
testb
movsb
sahf
fdivl
xor
cmp
sti
dec
cwtl
xchg
xchg
sub
addr16
pop
xor
stc
mov
test
mov
stos
rcr
arpl
es
insb
or
icebp
push
push
or
ret
cmc
or
sbb
sub
rcl
cltd
inc
pusha
xor
sbb
in
rorl
enter
daa
sarb
mov
test
inc
inc
cmp
arpl
pop
or
sub
add
adc
mov
jmp
mov
pop
sub
jp
sahf
fnstcw
lods
leave
xor
mov
sti
bound
hlt
xchg
pop
push
test
fwait
xchg
xchg
push
mov
xchg
inc
xchg
mov
shrb
jmp
dec
inc
lcall
add
arpl
ret
in
enter
jne
xlat
test
jnp
push
push
enter
adc
xorb
pop
arpl
lods
inc
add
or
enter
sbb
out
fidivs
cmc
pop
data16
pushw
lods
iret
mov
sub
dec
jnp
jne
xlat
sub
test
cld
daa
out
push
lret
aas
pop
and
enter
shll
nop
and
inc
jle
test
in
dec
sub
inc
fimull
iret
jbe
ja
or
pop
adc
stc
mov
ret
pop
xchg
mov
xchg
mov
sub
cmc
fucomi
cmc
imul
jb
popf
shlb
dec
push
aaa
cwtl
mov
movsb
daa
cmpsl
incl
dec
nopl
into
sbb
inc
mov
adc
xor
push
ret
mov
sub
cmpsl
sahf
and
dec
mov
fnstcw
xor
dec
add
push
fs
nop
and
add
and
pop
hlt
lret
cwtl
stos
repnz
jg
push
or
inc
push
lcall
xchg
adc
lret
cmp
lds
inc
ds
mov
aas
movsb
xchg
inc
in
lret
mov
enter
repz
pop
cwtl
inc
jp
xor
shlb
notb
cmp
out
xchg
adc
cmp
push
xor
adc
pop
xchg
dec
bound
sarl
movsb
inc
gs
dec
icebp
lret
lret
cmp
sub
inc
jl
arpl
add
sub
mov
sbb
sti
stos
cmp
andb
inc
jecxz
xchg
and
xchg
icebp
loop
mov
xchg
aas
insb
hlt
cltd
enter
popf
mov
jo
cmc
mov
adc
mov
mov
xchg
fxch
jmp
mov
xchg
popf
add
jp
test
mov
jbe,pn
push
fdivrl
scas
push
jp
xchg
faddp
ljmp
push
dec
ret
fidivrs
int
sbb
sub
arpl
pop
cmc
cli
xor
mov
loopne
aad
xor
in
insl
fsubrl
or
and
add
negl
insb
xor
and
test
mov
out
mov
push
mov
push
or
adc
frstor
loopne
into
pop
divb
nop
xchg
es
sbb
rcr
movsl
jae
xor
dec
out
mov
test
subl
shll
popf
mov
jne
or
mov
rorb
mov
pop
rcrb
test
mov
lret
push
push
enter
jae
pusha
loop
movsb
test
out
and
dec
dec
cmpsl
insl
mov
rcrb
mov
mov
mov
sbb
xchg
movsb
fsts
add
fcmovu
int3
cltd
jb
daa
es
xchg
pushl
cli
pop
sub
xchg
add
fincstp
iret
dec
aam
ret
dec
ja
aam
jecxz
add
shll
or
push
cld
xor
iret
addr16
add
lds
xchg
icebp
xor
pop
mov
cs
push
add
in
outsb
or
xor
sbb
inc
sub
lods
sti
dec
add
xchg
push
hlt
push
mov
cmpsb
sbb
sbb
push
cmpsl
loopne
xchg
test
popf
js
iret
cmp
add
xor
mov
mov
jge
cmc
add
jle
cmp
push
cmp
rcrb
xor
mov
and
icebp
sbb
lods
cmpsb
fst
cs
mov
sub
in
test
xchg
cmp
pop
mov
test
cli
push
dec
pop
or
imul
loop
scas
adc
scas
and
jge
mov
sbb
jg
mov
imul
stc
or
repz
xor
lock
pop
hlt
xorl
mov
sub
xor
mov
addb
aaa
imul
cmc
push
stos
xor
fcoml
aaa
dec
push
mov
icebp
lcall
inc
hlt
rcll
pushf
rorb
xor
scas
inc
dec
std
mov
pop
pop
imul
jnp
cmp
mov
out
outsl
popf
add
outsb
scas
add
cmp
push
inc
out
mov
pop
xchg
call
jb
sbb
repnz
popa
jns
cld
lds
aad
pop
std
xor
and
mov
mov
mov
ret
fadd
leave
out
pop
nop
inc
fdivrl
xchg
inc
cmpsb
dec
adc
jnp
test
and
sarb
pop
das
fdivrp
ret
imul
mov
fdiv
add
cwtl
push
pop
int
cli
popa
fsts
mov
dec
push
mov
cmp
mov
add
xchg
lahf
or
nop
sub
push
jmp
inc
mov
and
sbb
mov
into
dec
out
movsl
andb
fnstsw
daa
mov
in
mov
mov
push
push
in
mov
out
mov
mov
stos
sbb
call
pop
ret
jmp
jae
rcrl
sbb
and
push
mov
pop
pop
or
mov
sbb
pop
lods
lds
out
push
mov
pop
inc
adc
pushf
pusha
mov
pusha
test
sti
sub
push
or
add
mov
push
inc
pop
inc
cmp
xchg
hlt
inc
add
add
sbb
ja
in
mov
xor
jmp
in
cld
int3
sbb
sub
jnp
fcoml
ja
jb
pop
jb
ficoml
bound
push
jnp
shr
sbb
adc
lret
je
sbb
add
ret
cmp
xchg
int
pop
mov
test
pop
jae
and
sbb
dec
and
scas
xchg
lods
mov
imul
inc
repnz
aas
mov
call
push
cmp
dec
sahf
shl
inc
adc
imul
ljmp
xchg
imul
mov
fwait
popa
sub
test
sub
push
repz
mov
jp
mov
lret
imul
jbe
jnp
mov
cs
sbb
or
fbld
dec
popa
and
rorl
test
mov
shll
hlt
pop
or
loopne
js
xchg
cli
adc
xchg
fisubrs
hlt
sbb
cbtw
or
mov
xchg
sbb
das
into
mov
popa
lods
mov
pop
pop
push
xor
inc
adc
cli
mov
xchg
mov
test
cmpsl
mov
sub
inc
in
mov
ret
nop
sbb
xchg
dec
dec
cmp
insb
roll
pop
fsubp
and
jno
out
xchg
xchg
adc
pop
jns
cmpsb
pop
mov
and
mov
jmp
lret
cmpsl
add
lea
int3
lods
das
xchg
mov
sbb
or
jecxz
dec
xor
cmp
fisttpll
xor
cmc
pop
sbb
jg
add
xchg
rorl
pop
pop
stc
int
jbe
inc
add
je
push
aam
mov
es
xor
push
pop
gs
stc
out
mov
jg
inc
sbb
mov
dec
aaa
push
adc
ret
shl
subb
clc
add
and
dec
push
insb
jecxz
add
mov
cld
stos
or
pop
mov
inc
mov
jbe
mov
repnz
sub
mov
lods
mov
mov
outsb
or
adc
popf
repz
pop
inc
int
sbb
jg
cs
sbb
mov
xor
leave
add
jns
xor
sub
jns
mov
dec
cmp
stc
into
pusha
mov
cmc
fistl
or
nop
cmp
dec
ss
fimull
outsl
cmc
mov
adc
mov
jae
pop
ror
iret
sub
imul
sub
aas
mov
outsb
stos
push
js
les
repz
push
std
adc
fsubrl
mov
xor
push
mov
lock
inc
cltd
xor
xchg
cmpsb
xchg
pop
fldenv
imul
ja
mov
repnz
imul
fs
pop
inc
call
stos
scas
pop
sub
stos
mov
adc
adc
pop
movq
sbb
dec
enter
jle
mov
mov
inc
cmp
cmp
lods
test
mov
mov
nop
and
cmpsb
cmpsl
dec
negl
xor
push
sbb
push
in
cmp
inc
out
gs
fsubs
outsb
mov
cwtl
jns
sub
out
mov
inc
js
inc
sahf
inc
cltd
call
xor
sub
mov
and
daa
iret
xor
jb
dec
idivb
ljmp
cmpl
mov
pop
jle
pavgw
mov
out
cmp
ds
dec
cmp
xchg
adc
adc
shll
add
stos
es
pop
cli
js
push
stc
adc
xchg
in
xchg
fmuls
xabort
mov
add
fcomps
imul
mov
and
movsb
ds
ja
stc
mov
xchg
xor
add
cli
inc
bnd
sahf
fbstp
fstl
cmc
loop
xchg
int3
mov
addr16
pop
cli
in
ja
enter
or
shr
std
movsl
sbb
mov
sbb
mov
dec
mov
sbb
rcrb
imul
mov
addr16
sub
out
mov
sub
adc
push
mov
ja
icebp
insl
mov
dec
xchg
call
fsubl
push
xor
jle
pop
push
insb
in
cmp
xor
xchg
push
clc
push
mov
and
out
into
stos
lock
clc
bound
push
fcmovnbe
push
mov
xor
add
pop
leave
pushf
lods
pop
ja
stos
mov
cwtl
divb
sbb
pop
add
les
dec
jmp
in
lds
nop
stos
pop
icebp
mov
jne
push
dec
mov
cmp
pop
xchg
int
sti
add
inc
xchg
xor
aas
insl
mov
mov
imul
jbe
pop
cmc
out
cmc
pop
sbb
cmpsb
sub
ss
mov
inc
lret
fbld
add
or
xor
les
mov
adc
sarl
lock
mov
xor
and
subl
inc
pop
or
sbbl
add
testb
es
ss
out
das
pop
or
inc
ret
test
pop
addl
out
lcall
test
adc
xor
inc
sbb
inc
fistpl
xchg
add
scas
xorb
cmp
xor
pop
xor
xchg
mov
or
movsb
add
in
adc
inc
incl
push
das
insl
cmp
or
lods
mov
imul
fwait
imul
jecxz
popa
arpl
addr16
std
inc
inc
push
rcrb
ret
add
orl
out
inc
pop
stos
add
jp
pop
push
inc
jl
adc
jb
lahf
das
cwtl
cmpsb
cwtl
and
add
outsb
sbb
pop
xor
movb
nop
xor
std
pop
push
cmp
and
pop
cmp
jle
mov
add
loope
int
mov
mov
das
or
outsb
mov
loopne
jge
cmc
pop
cltd
repz
and
iret
mov
loop
push
sbbb
dec
cmp
mov
shlb
repnz
push
cmp
ds
add
pushf
repz
mov
fistpll
push
xchg
es
iret
and
xor
xchg
jne
xor
adc
stc
dec
stos
sbb
add
mov
fsubs
jns
ret
lea
inc
andb
push
xor
xchg
pop
lcall
xchg
insb
aas
xchg
fisttpll
push
xchg
ljmp
call
jae
jne
enter
sahf
insl
repnz
jno
lods
or
and
out
jbe
pop
pop
scas
cli
inc
dec
das
ret
push
hlt
imul
jmp
inc
insb
pop
aaa
xor
xchg
mov
xor
jae
cwtl
push
lahf
mov
les
xchg
scas
xchg
jge
push
int3
sub
sub
and
dec
cltd
cwtl
jno
test
sub
cmp
adc
in
sahf
add
mov
fs
fs
jbe
add
adc
push
imul
ljmp
fwait
lcall
mov
into
push
repnz
pop
mov
rolb
hlt
pushf
fistps
js
imul
lods
in
push
bound
cmp
xchg
outsl
insl
ljmp
dec
dec
mov
bound
cmp
mov
xchg
cmc
lods
sub
rcr
xorb
mov
jbe
mov
ret
cld
xchg
xchg
mov
imull
xchg
mov
in
xorb
cmp
push
push
xchg
clc
inc
mov
lret
ss
sbb
sub
xor
loopne
test
lds
dec
pop
mov
or
cmp
mov
jae
xchg
daa
cmp
xchg
lret
or
ret
jge
mov
inc
sub
mov
in
dec
fidivrl
xor
xchg
push
sbb
adc
jb
leave
adc
je
stos
hlt
mov
into
pop
ds
pop
or
aam
xchg
test
or
je
enter
mov
and
pop
jmp
pop
addr16
xchg
xor
and
loop
andb
lcall
push
cmp
dec
mov
mov
xchg
push
mov
inc
xchg
mov
jno
out
and
adcb
pop
mov
inc
nop
mov
sbb
dec
jb
rolb
rclb
pop
cmpsl
inc
jp
in
mov
cmp
and
fidivrs
mov
mov
dec
sbb
stos
adc
or
and
xchg
push
jmp
icebp
mov
pcmpeqw
adc
push
and
shll
out
fistps
pop
in
movzwl
aam
lret
ds
aaa
outsl
sbb
clc
mov
push
outsb
cmp
loopne
inc
in
xchg
jbe
repnz
mov
hlt
or
data16
jle
pop
or
add
sti
fiaddl
shll
aam
adc
mov
mov
adc
mov
hlt
mov
aas
push
scas
add
into
push
jne
sbb
sub
xor
inc
pop
mov
aaa
inc
sahf
push
je
push
lock
sar
fdivl
insl
loope
lret
gs
lcall
mov
enter
pusha
sbb
cli
mov
pop
mov
sahf
in
dec
aad
stos
dec
mov
adc
xor
ror
xor
xor
repnz
jb
cmp
mov
nop
imul
loop
pop
push
xchg
xchg
aaa
in
bnd
xchg
js
sbb
jge
int
adc
xor
sbb
pop
adc
dec
mov
lcall
popa
adc
dec
test
cmpsl
aad
pop
notl
pop
xchg
inc
ret
sub
fwait
adc
aam
add
or
mov
lods
add
mov
jp
pop
leave
pop
leave
jae
xlat
sub
jns
ret
adc
lahf
cwtl
loop
mov
cmp
mov
jl
sbb
inc
and
daa
push
int
push
mov
inc
and
divl
shrb
xchg
dec
decl
pop
dec
jnp
xchg
xor
inc
push
inc
cld
push
div
ds
jl
mov
or
pusha
push
repz
popf
push
dec
das
imul
xor
sub
cmp
jns
xor
outsl
ds
popa
push
mov
and
cmp
xchg
xchg
loopne
xchg
lods
push
es
test
imul
cmpsl
sbb
ret
cltd
pop
sbb
sbb
cltd
out
pop
insb
mov
mov
inc
cmp
addb
xor
fstps
int3
jne
ja
add
jmp
lods
xchg
shlb
and
mov
std
add
cwtl
outsl
dec
push
sbb
mov
sbbl
fisttps
popa
lcall
hlt
adc
pop
test
jle
cli
jae
and
mov
and
add
xchg
aaa
cwtl
je
aaa
xor
test
aas
jns
cltd
cmpsb
shlb
insb
inc
sahf
imul
mov
ds
clc
repz
push
jno
mov
mov
or
pop
dec
push
xchg
fildl
xchg
push
xor
jbe
pop
jae
mov
mov
cld
xchg
sbb
mov
aam
sbb
call
icebp
fwait
mov
mov
pmulhw
stc
inc
cwtl
ljmp
gs
inc
inc
sbb
mov
dec
test
out
shrb
loopne
fwait
daa
test
sarb
inc
lea
fimuls
xchg
imulb
sub
insl
mov
in
loop
lock
dec
pop
dec
movsb
mov
xchg
fdivl
iret
mov
aam
sub
cmp
or
aas
xor
and
adc
call
push
pushf
xchg
out
cmpsb
and
movsb
mov
push
adc
pop
mov
mov
ficomps
loope
ss
pop
add
sub
clc
scas
adc
les
jo
shr
mov
out
add
jno
adc
insb
movsb
mov
push
nop
mov
aas
mov
jle
mov
cmp
outsl
push
cmp
loope
out
sub
inc
inc
sub
add
out
fildll
in
popa
js
jge
mov
jp
cltd
mov
cli
in
cmp
adc
cli
out
dec
xor
mov
push
pop
stc
lcall
dec
int3
call
ret
mov
jge
mov
push
or
mov
enter
mov
push
jb
cmp
push
ss
shrb
div
testl
ret
jle
loopne
adc
in
pop
adc
out
loopne
std
or
lock
push
inc
mov
enter
imul
inc
pushf
xchg
xchg
cltd
repnz
dec
je
repz
jbe
sbb
cmpsb
aad
xchg
fsubs
push
and
loopne
les
aad
jp
xchg
ret
xchg
imul
ds
insl
cld
loope
jbe
mov
adc
or
or
add
outsb
loope
inc
repnz
loopne
fstpt
dec
pop
scas
xchg
add
mov
fimuls
sub
adc
jo
mov
out
xor
sbb
std
hlt
int3
push
lret
mov
sub
negb
mov
adc
out
mov
and
out
mov
add
lea
fidivrl
dec
idiv
sarb
int3
push
rorb
iret
pop
mov
jl
out
mov
jge
sarl
cli
std
dec
fdivs
fldcw
xor
push
xor
dec
dec
test
das
mov
ljmp
movsl
xor
ror
add
xor
jae
dec
adc
cmp
pop
jge
mov
xlat
fistl
stos
and
push
das
push
lock
in
push
out
iret
push
movsl
jmp
jno
xor
out
cli
mov
shrb
jae
je
xor
lcall
inc
or
adc
nop
sbb
arpl
push
mov
push
inc
and
cmpsb
loope
cs
loopne
push
pop
push
cmp
pop
data16
xor
adc
sub
xlat
add
mov
push
and
jno
cmp
popf
insl
scas
adc
movsb
dec
loope
jnp
push
inc
fidivrl
pmuludq
neg
push
xlat
das
dec
add
notb
dec
pop
leave
mov
push
xor
pop
movsb
and
popf
lahf
pop
repz
pushf
pop
and
mov
mov
push
cld
dec
xchg
jno
add
xorl
mov
inc
sbb
inc
adc
mov
pushf
les
sbb
cmp
imul
mov
out
mov
xor
fdivs
cltd
push
mov
and
push
and
sbb
shlb
pop
inc
push
pop
jnp
iret
push
push
sti
xchg
xchg
pop
push
jbe
fstpt
jl
mov
out
push
test
ret
push
shlb
push
fldcw
subl
cmp
add
xor
pop
ljmp
leave
xchg
adc
cmp
pop
dec
addr16
mov
adc
xor
adc
dec
or
push
out
or
repz
cs
repz
add
orps
mov
fidivrs
push
rolb
loopne
shrb
add
sub
je
roll
insl
lock
hlt
shl
xchg
and
out
sahf
pop
jb
fbld
xchg
leave
insb
sbb
loopne
and
or
jne
xchg
iret
enter
sbbb
sarl
mov
push
out
mov
cmp
pop
cmpsb
je
sbb
cld
jl
cmp
mov
add
iret
dec
adc
into
push
leave
loope
add
xor
icebp
add
push
or
push
sbb
mov
pop
lods
jge
mov
cmc
cmpb
ds
mov
mov
or
cli
mov
cltd
mov
pop
sbb
lcall
adc
aad
fs
aam
aad
aas
icebp
scas
arpl
dec
scas
cmc
mov
pop
push
daa
jecxz
hlt
push
jb
out
dec
xchg
in
xor
mov
addb
popa
call
data16
pop
fdivl
fsubl
pop
push
into
jecxz
cwtl
sub
mul
push
cmp
mov
cmpsb
scas
aam
xor
inc
jnp
and
cmp
mov
pop
shl
dec
sahf
mov
bound
int3
pop
fs
inc
out
das
mov
xchg
cmc
dec
pop
mov
in
stos
testb
push
data16
mov
xorb
sbb
fisubrl
aas
xchg
or
push
rorb
dec
stos
add
inc
mov
arpl
or
ja
mov
xchg
add
xchg
sbb
jnp
or
lret
ds
jmp
push
adc
sbb
mov
or
push
inc
ss
cld
cs
xchg
mov
gs
aam
insl
out
icebp
mov
mov
leave
xchg
cli
push
push
fisttpl
adc
clc
pop
push
in
insb
lods
loopne
mov
and
mov
insb
push
subb
sub
aam
data16
cld
xchg
sub
sub
pop
test
mov
scas
sbb
repnz
test
lahf
sub
imul
push
and
loope
add
or
push
pop
cmp
repz
ds
cmc
jae
test
mov
mov
and
mov
and
test
nop
pop
and
xchg
dec
sub
and
mov
xchg
roll
rol
adc
cs
fisubs
popa
lea
cmpb
or
mov
ja
cmp
insb
in
insl
stc
ret
pop
push
xor
sbb
pop
cli
xchg
cld
fsubp
ret
jb
add
cltd
and
mov
push
lods
fidivs
insl
faddl
pusha
out
add
and
and
dec
xchg
icebp
mov
lds
idivl
xor
xchg
sbb
pusha
adc
icebp
or
dec
sbb
cli
mull
sub
test
jne
shrb
das
insl
fcmovnu
loopne
push
push
sub
push
mov
mov
pop
outsl
mov
sbb
add
rolb
dec
add
and
mov
shlb
sub
imul
cmpl
sub
loope
xchg
and
mov
gs
out
test
or
sti
add
pop
inc
out
xchg
jmp
cwtl
insb
dec
movsb
jmp
inc
test
push
inc
or
fs
arpl
and
cltd
shll
pushf
dec
sbb
jb
jp
insl
dec
jae
lret
outsl
or
cmp
shll
mov
shlb
mov
pushf
jno
arpl
scas
shlb
mov
lret
xchg
mov
mov
add
push
sub
mov
dec
mov
mov
xlat
or
pop
xor
pop
cmp
ficompl
in
xorb
or
mov
xchg
dec
pop
push
out
jns
clc
inc
ret
adc
hlt
lcall
push
aaa
cwtl
or
and
fiadds
mov
pop
loope
xchg
fsts
sub
fcompl
pusha
divl
add
arpl
fdivrp
out
jne
cmp
es
aam
xorl
dec
ret
inc
jno
arpl
or
push
sub
jo
cwtl
inc
ja
xlat
pop
mov
or
pop
sahf
xchg
add
cmpsb
adc
sti
dec
jmp
jle
xor
xor
shl
movsb
icebp
sbb
rcll
sarb
and
and
jl
mov
pusha
repnz
adc
add
pop
stc
loope
jns
inc
inc
stos
xchg
push
int3
pop
pop
fimull
test
dec
and
sbb
jp
xchg
cmp
and
popa
cmpsl
lods
sbb
sbb
jo
nop
loopne
push
call
mulb
lahf
jno
dec
and
or
mov
imul
add
or
pop
fistpll
or
jmp
push
inc
es
ret
mov
or
inc
mov
gs
pop
lea
shll
mov
push
bound
and
xor
mov
cs
add
mov
adc
mov
outsl
shll
out
iretw
adc
push
popa
lret
cltd
inc
loop
dec
xchg
int3
pop
movsb
dec
mov
add
xor
add
into
enter
xlat
aaa
pop
iret
mov
mov
xor
sbb
pop
or
xlat
cmpsb
xor
rcrb
jmp
mov
mov
cmp
jnp
pop
or
push
pop
out
push
out
mov
mov
dec
sbb
sbb
sub
jbe
push
pusha
shrl
loope
in
push
roll
mov
jae
les
imul
iret
ljmp
aad
aaa
daa
aaa
addr16
out
cmp
pop
dec
lret
cmp
jl
dec
xchg
adcb
es
cmp
ja
mov
xor
popf
adc
cli
cmp
out
mov
push
mov
xchg
cmp
movsl
xorl
xchg
stc
pop
adc
sbb
fucomip
loope
add
insb
dec
stos
sub
iret
stos
and
jle
mov
sti
and
lock
mov
gs
sub
loopne
inc
xor
jns
movsb
mov
fwait
push
nop
xchg
sub
out
inc
subl
xchg
test
setge
add
pop
arpl
mov
push
cli
ret
jne
cmpb
jle
shl
and
insl
or
cli
cmpsl
xchg
imul
xchg
sub
pop
fmuls
push
jg
pop
enter
xor
push
xchg
into
out
iret
popf
frndint
cmc
dec
sub
mov
int3
lods
ret
or
pop
cmpsb
xor
ja
mov
pop
cld
idiv
or
icebp
jl
clc
mov
mov
add
fldenv
sbbl
sbbl
sub
inc
jno
mov
jnp
loope
jecxz
cwtl
aad
jb
fisubs
xor
sub
fisubrs
dec
scas
fisttps
mov
cmp
lret
bound
pop
adc
ror
xchg
mov
adc
mov
out
jne
ffree
mov
inc
js
icebp
push
roll
mov
pop
lds
test
jnp
cmp
out
inc
mov
xor
and
bound
push
mov
leave
mov
lret
inc
push
pop
xor
pop
mov
test
cmpsb
mov
cmp
or
ret
fisubrs
cmpsb
fcomp
sbbb
dec
fsub
add
or
mov
data16
xorl
aas
push
mov
sub
jae
push
sbb
jae
dec
aaa
shll
fwait
addb
cld
pop
vpsubb
cmp
arpl
dec
pusha
lret
adc
imul
dec
jmp
in
or
stc
jl
popf
adc
mulb
or
xor
mov
icebp
dec
int
push
mov
adc
xchg
xor
push
push
cmp
mov
sbb
jno
hlt
in
outsb
mul
adc
or
pop
mov
pop
sub
out
push
loope
xor
push
sahf
sbb
pop
inc
jp
sbb
adc
jmp
shrb
mov
popa
sbb
xorb
scas
xchg
fwait
mov
mov
jns
push
cmp
push
faddl
or
jl
cli
or
mov
cmc
push
cli
lea
mov
mov
or
and
int3
rolb
add
push
adc
add
or
push
sbb
mov
xchg
mov
push
leave
test
add
jbe
mov
dec
popf
mov
push
sbb
pop
mov
hlt
fstpt
sub
adc
roll
loopne
dec
scas
mov
add
in
sub
lret
mov
cs
adc
data16
xchg
sub
mov
clc
test
pop
loope
outsb
inc
pop
xor
mov
adc
jp
das
mov
leave
mov
or
mov
cmp
add
lret
cmpsl
mov
std
lock
mov
loope
mov
and
xchg
mov
push
outsl
lods
xchg
pop
sti
js
mov
or
mov
stc
pop
loop
pop
test
xor
sarb
inc
pusha
sub
loopne
inc
mov
test
xchg
mov
out
mov
push
jmp
into
xchg
mov
push
jo
xor
xchg
out
es
les
aaa
cmc
sbb
out
stos
jp
fisubrs
cli
hlt
shl
cmp
popa
scas
mov
int
mov
add
and
fisttps
imul
scas
test
js
loope
fnstcw
cmpb
add
inc
or
push
imul
packsswb
or
std
lods
and
fs
inc
fldl
lahf
mov
adc
jae
and
or
aaa
pusha
stos
adc
sti
push
shlb
cmpsb
std
mulb
add
adc
jo
movsl
cmp
mov
andl
int3
arpl
lods
jge
cmc
lea
fnstenv
xchg
cmpsb
fidivl
call
js
insl
mov
adc
cmp
jns
fnstenv
imulb
enter
shlb
es
imul
jge
into
les
pusha
movsb
mov
lds
mov
arpl
add
add
ds
and
mov
jp
push
lods
lcall
das
test
mov
mov
rorb
xor
lcall
addr16
adc
and
push
lahf
in
mov
cmpsb
cmp
xchg
sbb
ss
mov
les
adc
ror
call
sbb
push
xor
popa
aam
dec
adc
ret
rcrb
or
jmp
jg
pop
jno
aas
cwtl
outsl
pop
jp
mov
cmp
jnp
int3
int3
cmp
cmp
cltd
pop
mov
ja
cld
jmp
push
sbb
adc
hlt
cmp
mov
imul
shlb
cmpsb
add
or
lods
fidivs
and
in
cmc
dec
fcmovnu
cli
inc
iret
loop
dec
mov
inc
xor
add
sub
std
fsubs
jp
pop
daa
jns
mov
mov
mov
adc
loopne
mov
xor
pushf
cmp
daa
sbb
mov
inc
shrl
push
inc
mov
leave
popl
pop
adc
pop
out
xchg
loope
push
inc
push
sub
add
fsub
test
aad
out
push
mov
xor
inc
sahf
xor
aad
mov
fsubrl
cmp
scas
stos
add
mov
sub
mov
lret
pop
ret
popf
fisubs
sbb
sub
repz
xchg
mov
xorl
mov
jp
rcrb
mov
sub
ja
lea
adc
inc
sbb
add
sub
fwait
sub
inc
cmp
add
roll
xchg
out
loope
dec
mov
gs
jp
ljmp
push
lcall
mov
pop
push
test
fdivp
pop
jecxz
flds
and
aad
in
out
mul
fidivs
push
mov
jge
sti
cmp
inc
jbe
cli
jns
cltd
mov
jns
pop
lahf
cmp
xchg
pop
dec
sbb
push
jp
push
dec
nop
bound
jge
inc
adc
in
les
rol
pushf
mull
pop
repnz
jno
shr
addb
cmpsb
add
mov
fwait
inc
scas
dec
dec
shlb
jl
notl
aaa
sub
data16
or
adc
add
inc
mov
insl
lahf
sbb
fsubl
je
ret
pop
imul
jg
hlt
xor
or
dec
add
add
adc
fwait
mov
sahf
scas
js
repnz
pop
dec
inc
xchg
outsb
scas
dec
adc
pusha
gs
mov
mov
sbb
mov
add
iret
lods
xchg
xor
mov
push
aaa
pop
jno
iret
jae
js
jmp
cmpsl
mov
lods
xchg
leave
popa
adc
pop
shlb
jle
fisttpl
clc
mov
jle
and
test
xor
xchg
pop
xchg
enter
std
xor
aam
rcr
loope
scas
cmc
or
sub
mov
adc
push
sbb
invd
lods
mov
cmp
orl
mov
gs
jo
aad
sbb
mov
dec
cmp
cwtl
in
mov
es
and
push
cli
ljmp
pop
icebp
xor
mov
push
pop
jl
cmpsb
hlt
stos
cmp
ljmp
pop
mov
int
mov
pop
jl
lea
nop
cmpsb
mov
movsl
shrb
stos
je
imul
mov
shll
push
mov
mov
xor
mov
movsb
push
ret
cltd
out
bound
push
sarl
mov
addl
scas
adc
inc
lods
mov
into
add
ret
and
fildll
inc
scas
or
add
pushf
test
sub
and
es
xor
popa
mov
ror
rcrl
call
sub
mov
jp
int
lods
jmp
add
mov
push
xchg
repnz
mov
sti
loopne
std
addr16
xor
test
sbb
in
loop
cltd
lret
push
and
cmpl
lahf
xchg
dec
push
mov
and
fisttpll
arpl
test
sbb
inc
lock
xor
xor
rorb
jge
dec
add
or
mov
push
push
int
xchg
push
and
mov
cmp
push
mov
lahf
in
sub
es
xchg
out
pop
mov
lds
cmp
decl
xchg
xchg
out
inc
mov
jae
cli
push
insb
xchg
lcall
mov
jmp
xchg
adc
jb
loop
inc
pop
jb
jp
aas
mov
jg
pop
das
stc
ja
mov
test
fs
cmc
and
jno
repz
inc
xor
jno
xor
imulb
mov
pusha
mov
dec
ds
xchg
std
mov
adc
outsl
push
adc
push
pop
popf
dec
mov
xchg
inc
jecxz
test
cmpsb
test
xchg
xor
jbe
or
cmp
fsubs
je
rclb
pop
xchg
and
cmpsb
jb
xchg
add
xor
sub
clc
jmp
and
and
sbb
lret
jp
ja
mov
adc
imul
push
lcall
push
icebp
es
das
xor
mov
mov
inc
outsl
and
aad
mov
sahf
sub
out
mov
in
sub
sbb
sub
jo
stos
ret
sub
mov
or
push
movsb
pop
cmp
test
mov
xchg
mov
adc
fs
insl
jecxz
test
pop
leave
mov
nop
and
dec
mov
or
push
in
in
xchg
inc
dec
jns
and
das
or
dec
mov
enter
push
inc
test
and
out
rorl
and
call
lock
js
dec
push
nop
or
stos
xchg
fisttps
insb
stc
jl
mov
daa
mov
enter
notl
daa
xchg
bound
sbb
in
xchg
mov
xlat
dec
adc
jo
loopne
inc
fidivl
shll
lret
mov
dec
cmp
push
popl
xchg
lock
pop
jne
aaa
shlb
in
push
aam
dec
xchg
das
adc
mov
dec
add
imul
pop
mov
cmc
pushf
xlat
sub
or
mov
mov
scas
or
movsl
adc
div
lcall
repnz
icebp
jle
aad
imulb
jnp
xor
sbb
repz
imul
or
mov
rcl
cmp
fistl
imul
lds
push
jbe
int3
movsb
and
push
jmp
lret
or
sti
fcom
in
lret
loope
test
pop
pop
xchg
jae
adc
test
pop
sbb
movb
sub
push
sti
cmpsl
mov
fwait
dec
lret
inc
mov
dec
lret
cmp
mov
clc
psrad
push
add
inc
pop
lods
push
cwtl
pushf
xchg
fmul
jmp
mov
subb
dec
adc
call
jg
jp
in
orb
rcr
adc
cmp
out
ficoml
cmpsb
and
jnp
xor
cmpsl
cli
xorb
lea
jp
cmp
in
cmp
sbb
add
pusha
test
mov
mov
adc
out
test
sub
mov
push
rcll
pop
xchg
jp
testb
add
jno
push
mov
add
mov
sub
outsl
ss
or
or
lods
dec
shlb
inc
jae
xor
and
outsb
push
in
mov
cmp
outsl
xchg
roll
jae
inc
lock
outsb
std
int3
cmc
mov
push
les
jne
push
mov
xchg
fists
icebp
mov
daa
je
mov
push
jmp
inc
fbstp
pop
mov
nop
push
jbe
xchg
pop
and
jo
fisttps
pushf
inc
add
mov
aam
or
inc
pop
push
sub
fchs
jmp
imul
clc
js
sbb
jbe
test
add
insl
outsl
aad
mov
ljmp
scas
das
icebp
mov
bound
cld
cmp
aam
cmpsb
lods
sub
jae
outsb
push
dec
sbb
inc
or
aad
jo
pusha
clc
fisttpll
mov
mov
sbb
mov
dec
adc
es
sbb
rcll
rclb
lahf
cmp
pop
insl
or
ds
pop
mov
mov
mov
pxor
movsb
jge
lret
mov
stos
das
shl
popa
xor
or
inc
mov
jle
stc
adc
xor
sub
mov
sbb
loopne
xchg
dec
mov
sti
xlat
outsb
notb
or
dec
shr
out
shll
cmpsb
es
adc
jp
scas
loop
and
call
pop
fs
inc
mov
dec
pop
or
sbb
mov
or
aad
cmpb
jmp
jno
xor
insl
out
or
fmuls
add
in
ljmp
mov
sbb
mov
call
mov
shlb
popa
imul
jae
stos
push
push
xchg
add
inc
imul
lret
sti
add
in
or
jge
and
stc
mov
insb
or
pop
jmp
mov
adc
sub
sahf
aas
jne
mov
adc
test
push
lret
xchg
pop
mov
fnstcw
mov
pop
jno
stos
jnp
imul
sub
ret
sub
loopne
dec
push
sub
mov
leave
lret
pop
mov
repnz
or
push
movsl
sahf
jo
lret
subb
inc
repnz
pop
fsubrl
scas
mov
sub
test
and
pusha
cmp
outsb
or
insb
fiaddl
mov
sub
fildl
lea
push
inc
pushf
adc
push
sahf
pop
clc
pop
adc
stc
mov
or
sahf
fistps
inc
lea
pop
decb
or
push
sbbl
adc
mov
pop
or
sbb
adc
pop
and
shll
fwait
mov
fiadds
stos
sub
loopne
fs
int
xor
pop
adc
arpl
jb
int3
fistpl
subl
push
jecxz
push
stos
sbb
fldt
push
cmpsl
dec
sbb
out
adc
ret
jmp
rcrb
add
mov
ljmp
and
xchg
inc
outsl
xchg
xchg
adc
dec
and
and
clc
lcall
ds
dec
xchg
aaa
andl
pop
and
lahf
popa
cld
lods
xor
jp
in
test
pop
mov
mov
scas
mov
sbb
fcmovnb
leave
inc
rcll
out
push
adc
sbb
and
sti
and
loop
insl
jno
stc
dec
out
jge
mov
sub
mov
testb
sbb
insl
adc
mov
int
dec
hlt
jp
or
imull
outsl
push
jns
push
fcmovnu
pmuludq
push
mov
jmp
lcall
ret
out
xor
or
in
and
cltd
in
dec
clc
fnstsw
mov
jge
adc
lea
mov
loope
pop
sbb
dec
roll
into
cli
push
xor
sti
dec
popa
outsb
jecxz
test
sbb
call
jnp
mov
fiadds
mov
test
dec
pop
cmpsb
mov
mov
imul
imul
pusha
lods
std
fdivrl
call
adc
push
or
negb
mov
push
or
pop
push
lods
cld
cli
arpl
sub
out
mov
iret
shl
cs
inc
aaa
xor
push
xchg
or
je
mov
outsl
icebp
insb
pop
in
mov
lock
lahf
and
push
push
imul
mov
out
incb
out
jae
insl
stc
adc
jmp
dec
aaa
sbb
movsb
or
fistpll
lret
pop
push
lret
lret
mov
mov
loop
cmp
push
test
dec
mov
or
insl
xchg
hlt
loope
pop
pusha
jno
aad
and
and
xchg
addr16
and
insb
pop
xor
jp
insl
inc
cltd
pop
insb
sbb
stos
mov
mov
push
sub
jge
cmpsb
aas
bound
cmp
xor
inc
out
popf
sbb
and
clc
popf
jno
int
js
mov
clc
push
fcoml
push
dec
data16
scas
inc
fisttpl
mov
mov
mov
pop
leave
mov
je
mov
jne
cltd
mov
rorl
jmp
loopne
mov
insb
jnp
cmpl
test
cmc
pop
pop
pop
dec
xchg
xchg
leave
dec
enter
les
out
sbb
gs
leave
adc
test
xchg
cmc
rorb
testb
cmp
andl
and
cmp
mov
adc
push
adc
icebp
jmp
repnz
sub
test
mov
pop
insl
xchg
imul
fwait
ja
fs
adcl
dec
jecxz
repz
popl
mov
mov
out
jne
push
pop
sarb
test
lret
arpl
sub
inc
sbb
sbb
dec
test
pop
ss
or
jp
sub
das
or
xchg
dec
lea
aaa
pop
dec
popa
xchg
notl
xchg
inc
push
pop
mov
jnp
leave
mov
nop
fists
jnp
sbb
hlt
test
push
jo
sbb
arpl
and
in
pusha
vpmadcsswd
pop
push
es
mov
nop
jno
cmc
jl
lea
push
subl
mov
sbb
fwait
call
repnz
jo
jmp
or
addr16
jmp
test
push
lds
mov
insb
xor
inc
sub
aam
ret
sub
pop
mov
jnp
bound
mov
add
adc
add
inc
mov
add
lret
xchg
push
push
mov
push
in
adc
mov
jnp
inc
arpl
adcb
das
inc
lret
push
or
inc
mov
iret
hlt
pop
idivb
jg
sub
push
push
lea
xor
xchg
hlt
int
add
sub
pop
mov
mov
loopne
sub
outsl
aaa
inc
adc
push
out
and
dec
or
shrl
lcall
mov
hlt
and
dec
aaa
add
pop
imul
call
and
or
jns
push
jae
in
push
and
fmuls
mov
jle
scas
test
xchg
in
or
push
xchg
jo
mov
shlb
js
fs
or
ds
cld
pop
and
fstpl
lods
sub
cmp
adc
inc
xor
sahf
mov
das
mov
jne
sbb
outsb
inc
adc
leave
nop
loope
jecxz
inc
or
call
mov
add
inc
push
xor
mov
cmc
mov
add
shl
fstps
imul
adc
pushf
outsb
test
or
xchg
cmp
xor
dec
int3
sti
add
xchg
rcl
adc
icebp
popa
fs
aaa
add
push
test
xor
cmpsl
sbb
mov
aad
outsl
add
imulb
pop
mov
in
ds
mov
mov
nop
ficomps
stos
push
cmp
js
nop
outsl
mov
outsb
mov
add
push
push
incl
repnz
test
sub
out
pop
inc
shl
xchg
enter
nop
rcl
fists
loope
xchg
mov
in
sub
loopne
push
cmp
leave
sarl
mov
shrl
dec
or
out
mov
xchg
mov
imul
add
pop
xor
sub
data16
adc
inc
jb
test
sbb
add
and
movsb
mov
pushf
xor
fisttpl
xchg
lret
xor
and
jge
repz
push
add
mov
adc
xlat
mov
cvtpi2ps
and
pop
mov
adc
mov
loope
mov
clc
mov
sub
push
call
lret
notb
gs
and
ret
icebp
inc
cli
inc
outsl
and
sbb
push
ret
data16
scas
mov
enter
inc
and
sbb
cmpsb
mov
xchg
mov
fs
inc
xchg
rcl
ret
sbb
stc
inc
or
and
sbb
bound
mov
fistpll
cmpsl
and
int
fldenv
ret
out
adc
test
fxch
and
ficomps
sbbl
div
aad
mov
test
ficompl
cmpl
push
mov
popl
push
xchg
add
sub
inc
xchg
insl
mov
loope
pusha
fwait
cmpsl
dec
jns
pop
iret
sub
js
and
and
scas
sub
push
arpl
idivb
fwait
and
test
dec
roll
popa
cmp
pop
push
out
or
lods
sbbb
push
rcrb
add
inc
fcoml
daa
inc
dec
dec
xchg
outsl
hlt
push
mov
lods
push
push
sub
sbb
aaa
lds
scas
sbb
in
rcrl
cmp
push
sbb
arpl
and
in
sbb
dec
inc
or
add
sti
rcll
lds
negl
shll
inc
push
sub
dec
incl
push
push
fs
loopne
mov
aaa
push
jno
or
push
fdiv
or
addr16
pop
loope
mov
sbb
loop
adc
repnz
pop
loop
sub
icebp
ror
in
pop
loope
icebp
push
out
xchg
repnz
cmp
punpckhdq
shrb
aas
sub
jge
dec
or
movsl
lahf
mov
std
inc
outsl
cs
cld
ja
ss
inc
adc
sar
test
hlt
mov
rorb
jnp
js
ret
inc
xchg
aad
jae
add
xor
and
jg
xor
in
inc
mov
scas
adc
xor
xchg
mov
pop
and
cli
fwait
xchg
adc
push
add
loope
pop
gs
pushf
in
dec
jle
xchg
fdivs
add
rcrb
aaa
in
xor
and
pop
sbb
out
dec
pop
jecxz
mov
ret
gs
dec
pop
pop
jnp
aaa
outsb
std
addr16
push
dec
cmp
mov
add
into
xor
xor
add
pop
aas
xrelease
gs
dec
nop
or
lret
xor
sub
arpl
sub
jbe
popf
iret
int3
sbb
pop
out
mov
xor
xor
and
jae
xor
lock
inc
insl
stc
mov
cmp
add
lods
push
xchg
adc
lret
iret
mov
inc
jmp
cli
pop
pusha
add
xchg
movb
jnp
pop
leave
adc
and
or
in
sarb
rolb
dec
shrl
lret
or
jp
jae
push
pop
int3
jb
ljmp
cmp
out
pushf
push
adc
push
mov
mov
je
jnp
movsb
inc
xor
iret
dec
andl
jge
roll
dec
and
adc
lcall
test
and
faddl
pop
mov
bound
mov
jne
nop
scas
inc
stc
popa
inc
pop
pop
fdivrl
push
pop
shlb
mov
loope
cmp
sahf
gs
lds
movsl
lock
in
jl
adc
jae
sbb
cli
out
test
pop
inc
cmp
int3
pop
adc
call
dec
sbbb
and
sub
mov
subb
push
mov
mov
bound
adc
add
insb
inc
bound
cmp
inc
lock
or
adc
lret
test
repnz
ret
hlt
mov
lea
or
ret
mov
das
mov
scas
or
repnz
xchg
rcr
push
mov
and
add
ljmp
push
push
add
es
inc
mov
inc
sbb
pop
lahf
xor
dec
lea
mov
bound
add
dec
fiadds
inc
xorb
fldcw
aad
sbb
jl
mov
pusha
lcall
dec
dec
push
dec
jb
ret
loop
jecxz
scas
insl
mov
add
xor
mov
inc
pop
cmp
or
es
mov
outsl
aas
lods
ja
andl
rcl
out
adc
push
push
test
icebp
adc
int
dec
repnz
sub
xor
xor
aaa
sub
push
stos
cmp
sbb
or
mov
ret
outsb
faddp
or
lret
mov
push
inc
cs
aam
roll
testl
jnp
imul
and
and
jo
addb
inc
loop
xor
rsm
xchg
cld
pop
out
aaa
xor
scas
dec
pop
out
xchg
ss
and
shll
movb
xor
push
cmp
inc
fs
jno
mov
pop
insw
outsl
mov
repz
cwtl
and
xchg
call
xchg
lods
jno
in
mov
inc
dec
pop
jbe
orl
cmp
repz
ljmp
bound
in
in
test
loop
stos
bound
jmp
cmp
adc
add
lock
std
mov
sti
lahf
popf
inc
dec
xor
mov
mov
dec
or
mov
les
mov
mov
inc
jnp
mov
repnz
scas
test
mov
les
adc
xor
hlt
or
xchg
je
daa
ret
aaa
jns
fiaddl
jge
xlat
out
cld
leave
xlat
int
inc
add
out
ret
add
jl
fdivl
xchg
aaa
adc
imul
repz
fdivrl
subb
add
movsb
sub
fld
jns
clc
into
cli
xchg
lcall
jmp
mov
mov
mov
cmc
xchg
ret
pop
sub
cmovno
cli
and
inc
test
les
inc
popa
cmpsb
ss
jl
test
fidivs
cld
mov
dec
or
add
xchg
aaa
sti
fistpl
insb
xchg
in
and
dec
outsl
mov
ds
cmp
ret
or
sbb
cmp
or
cmp
pop
dec
test
aam
hlt
sub
mov
push
out
dec
call
pop
inc
cmpsb
imul
jp
push
pusha
je
xchg
sub
int
outsl
dec
stc
daa
sbb
dec
lds
mov
cmp
int
stos
add
add
popf
int
or
cmc
add
xorb
inc
lods
enter
dec
sbb
sub
sub
inc
imul
bound
pop
int
jg
ds
loope
imul
cs
inc
inc
nop
gs
push
xchg
cmp
aam
jge
dec
inc
daa
push
fidivs
inc
fwait
push
sbb
and
pop
xchg
mov
lods
scas
hlt
and
lea
out
rcrb
and
ljmp
insb
aas
lcall
repnz
mov
mov
test
jmp
movsb
cld
pop
adcb
jl
adc
xor
xlat
shll
or
xchg
sbb
shlb
xor
cs
dec
fadds
add
or
jno
rcr
xor
sub
ret
xlat
add
nop
pop
xchg
sub
add
cmpl
push
or
repz
mov
clc
fstl
sarl
sbb
mov
sub
cld
insl
adc
std
xor
push
cmp
mov
test
pop
imul
jnp
or
inc
sub
mov
insl
mov
ds
insb
dec
add
xchg
jb
dec
mov
push
addl
cli
xor
push
mov
testl
dec
dec
mov
ja
or
xor
shlb
inc
inc
enter
out
xlat
gs
in
les
sbb
jb
mov
and
out
das
xor
and
pop
das
clc
jmp
sub
fsubl
push
cmp
push
fs
cmc
sbb
jb
add
xchg
xchg
cmp
or
inc
or
movsl
incl
xchg
out
or
ret
mov
adc
and
xlat
negb
cltd
movsl
test
movsl
movsb
and
mov
int
add
mov
cmp
or
xchg
push
into
lods
mov
jbe
addl
iret
cmp
push
sti
std
sbb
xor
or
cmp
xor
clc
popa
lods
out
inc
arpl
shlb
mov
dec
cmp
js
andl
or
xor
mov
dec
pop
push
mov
add
jle
bound
aad
adc
int
xchg
rcr
pusha
sbb
mov
mov
mov
sbb
pop
dec
lds
xor
sti
jl
filds
sbb
cmovnp
jns
lcall
cmp
mov
nop
adc
rcll
push
pop
or
dec
divb
popf
daa
or
add
pop
call
xchg
inc
fisubl
sbb
jg
idivl
icebp
rcrl
cmp
scas
dec
iret
iret
adc
xchg
and
add
cs
gs
sub
xlat
sub
sbb
xchg
xlat
stos
pop
out
jne
popa
push
fwait
int3
jns
jmp
ds
push
or
dec
insb
test
mov
mov
push
test
fst
jb
jp
push
out
pop
sarb
repz
repnz
ja
clc
add
les
cmpl
repz
ret
stc
fcom
mov
addr16
stos
mov
mov
xchg
sub
bound
dec
repnz
and
xor
inc
cmc
stos
mov
neg
xor
mov
in
push
push
jmp
cwtl
pop
lret
sub
or
ljmp
xchg
aam
and
mov
pop
dec
push
push
pop
pop
mov
mov
shll
enter
pop
ret
sbb
mov
dec
push
adc
jp
mov
lahf
inc
sbb
mov
mov
imul
and
repz
ljmp
xchg
mov
jne
insb
add
pop
jae
outsb
push
mov
mov
adc
in
xor
fcmovnu
stos
add
or
mov
outsl
pop
dec
mov
push
mov
stos
cmpsb
mov
dec
add
cwtl
mov
pop
sbb
jno
pushf
and
daa
loope
xor
push
mov
pop
sub
in
adc
cwtl
in
in
ljmp
ss
mov
mov
mov
pop
scas
divl
jg
push
imul
mov
fldcw
mov
mov
icebp
cmp
mov
mov
mov
jns
imul
inc
out
roll
mov
out
fstpl
lcall
in
and
ficomps
sub
sti
jg
ljmp
lea
clc
inc
dec
daa
movsl
or
imul
outsb
out
aad
cltd
xchg
mov
and
lahf
movsb
sub
xchg
addr16
repz
push
arpl
dec
int3
sbb
mov
mov
xchg
fdivr
push
inc
push
mov
shll
aad
jle
nop
clts
mov
and
push
arpl
dec
adc
mov
inc
or
sub
es
push
repnz
icebp
shll
sbb
outsb
ljmp
fildll
enter
ja
in
mov
into
adc
addb
scas
mov
pop
push
popf
xor
out
cli
sbbb
push
mov
pop
push
loop
push
dec
shll
adc
lock
mov
loope
add
popf
jmp
test
cmpsl
pop
movsb
fildl
dec
mov
xor
bound
pop
mov
fs
movsl
adc
sbb
popf
cli
out
xor
test
imul
mov
mov
and
adc
out
jmp
lods
dec
into
scas
dec
pop
sbb
push
cmp
sub
pusha
popf
inc
aad
nop
add
sub
lods
repnz
out
adc
inc
push
ja
sbb
push
dec
jle
mov
outsb
popa
scas
insb
cmp
aad
and
xchg
icebp
bsf
sub
cmc
pop
mov
sbb
sarb
enter
in
or
pop
add
inc
imul
out
or
daa
bound
adc
sbb
or
sbb
push
test
lcall
xchg
add
dec
pop
xor
mov
cmp
cmp
adc
cmp
pop
or
mov
stos
insb
mov
sti
iret
insl
repnz
insb
sbb
fucompp
js
dec
mov
cmp
insb
jno
fidivrs
mov
leave
pop
sbbb
int
adc
movsb
in
xchg
daa
lahf
rorl
push
xchg
test
inc
shlb
pop
push
cld
mov
cmpsl
push
stc
push
jns
repz
jb
mov
xor
out
inc
push
nop
jae
popf
test
pop
or
arpl
xor
cmp
push
and
cmp
push
icebp
fwait
pushf
das
add
in
xchg
mov
in
inc
mov
sub
je
cmp
popf
gs
mov
repnz
outsl
add
push
out
notl
lods
cmc
push
rolb
xchg
ss
mov
dec
xchg
lahf
dec
push
sub
loopne
enter
pop
sbb
push
or
scas
jl
push
les
inc
pusha
dec
out
sbb
popa
arpl
ret
rcll
sub
mov
inc
iret
cwtl
sbbb
push
jb
mov
aas
orl
inc
mov
jb
xchg
out
or
xor
ret
loopne
jnp
stos
fmull
cmp
inc
xchg
mov
call
jl
mov
sbb
lret
outsb
lods
lods
pop
int
cmpsb
jnp
popf
cmp
push
jo
sub
jmp
lea
repz
inc
fnstcw
loopne
leave
sbb
mov
mov
pushf
push
and
cmp
push
push
lcall
dec
lret
lret
mov
fs
rcpps
inc
push
inc
cmp
push
lahf
push
mov
imul
xor
mov
pop
mov
scas
push
cmpsb
mov
rcl
sbb
push
rorl
mov
push
orb
test
jbe
pop
jmp
testb
cmpsb
dec
dec
out
gs
stos
adc
add
lds
hlt
adc
in
lahf
push
pop
mov
and
jl
les
sbb
rcl
fists
jg
ljmp
sbb
cmp
mov
cmpsb
les
aam
jb
movsl
mov
mov
cmp
push
xor
mov
je
adc
imul
mov
and
ja
cmc
in
jne
fnsave
adc
cmpsl
push
adcb
push
lods
ja
icebp
shlb
lods
xchg
lahf
iret
aam
outsl
cld
add
mov
or
cmp
lds
out
sub
push
and
mov
jnp
cmp
fcompl
sbb
push
mov
mov
in
mov
leave
mov
adc
cmp
sbb
mov
data16
enter
mov
sbb
addb
or
xchg
xor
mov
or
cld
push
sahf
cli
sub
xchg
inc
jmp
jg
dec
int3
movsb
int3
or
dec
fsub
je
push
xor
cli
test
inc
aad
arpl
cmp
jl
mov
push
rolb
incl
sub
out
out
cmp
pop
push
int
pop
cmpsl
sub
add
sbb
ja
push
and
mov
pop
jb
inc
pop
gs
aaa
jecxz
push
xor
and
jecxz
sete
decl
into
bound
repz
adc
dec
dec
vrcpps
sbb
xor
add
mov
xlat
pop
test
lret
mov
mov
mov
test
rorl
ss
xor
repnz
mov
fisubrl
sub
mov
and
push
xchg
call
shr
stos
rorl
mov
xor
and
rcrl
icebp
fs
in
or
fwait
jb
dec
into
xor
hlt
add
dec
fldenv
loop
lods
or
pop
xchg
cmpsb
mov
push
inc
je
pop
fst
out
sahf
pop
mov
daa
in
das
fbld
adc
inc
cmc
fstps
fs
xchg
rcll
arpl
adc
pop
cli
daa
or
push
jb
int
mov
ror
dec
ja
push
pop
outsb
decb
sbb
or
jb
lods
gs
icebp
popa
dec
cmp
sbb
dec
adc
insb
pop
jmp
cwtl
mov
pop
les
aaa
jg
sbb
inc
mov
xchg
and
les
inc
sbb
adc
xorl
shrb
add
inc
cmp
mov
jl
push
adc
mov
aam
sub
xchg
daa
dec
cmp
pushf
xchg
lahf
icebp
mov
mov
pop
mov
into
inc
dec
inc
in
adc
jecxz
int
jmp
inc
sti
into
sub
insl
dec
vphaddbq
mov
push
pusha
arpl
cmp
sti
iret
inc
inc
loopne
and
jbe
fs
inc
sub
and
inc
and
into
push
in
or
popf
push
rorb
mull
adc
push
jno
hlt
xor
loopne
mov
adc
jbe
jnp
adc
rclb
pop
enter
cmpsb
out
sbb
cmp
js
cmp
mov
and
movsb
mov
aas
bound
fmul
pop
jecxz
aad
mov
push
sahf
push
pop
bound
ret
gs
clc
mov
cmp
ds
cmp
mov
pop
lahf
pop
cmp
mov
int3
dec
in
cmp
iret
push
dec
pop
daa
pop
stos
loope
sub
test
jle
aam
dec
push
mov
loope
adc
sub
inc
enter
add
in
pusha
ljmp
mov
pop
or
test
test
inc
jp
ja
cld
dec
ljmp
insb
into
rcrl
jnp
add
or
fnstenv
add
xlat
outsl
stos
xchg
xchg
std
loop
test
or
add
call
test
inc
push
inc
sbb
push
and
dec
sub
or
xlat
adc
push
dec
std
or
sbb
jbe
lea
enter
stos
shlb
mov
fucomip
push
cmp
mov
jbe
jmp
roll
pop
inc
mov
sti
adc
jno
or
xchg
xor
fnstsw
pop
inc
adcb
inc
jp
and
jno
lret
sub
mov
dec
xor
pushf
push
mov
pusha
push
je
sahf
pushf
and
out
ficompl
and
sub
jg
lods
popf
or
xchg
int3
sbb
cmp
cmp
sbb
and
pop
call
adc
xchg
add
jno
jnp
rcrl
xchg
or
and
pop
lahf
mov
xor
scas
jb
lods
push
pop
jbe
jmp
adc
push
mov
xor
movsb
and
leave
push
in
int
divb
push
add
jle
loopne
add
test
leave
insb
addl
or
mov
fwait
mov
sahf
push
dec
add
jp
shrl
loopne
loope
jle
add
outsl
sub
stos
out
mov
das
pop
push
imul
cmpsl
and
push
cltd
inc
loop
inc
out
daa
inc
pop
pop
or
adc
outsl
push
and
fcoms
bound
jnp
and
aam
or
push
fwait
and
xchg
and
inc
jp
cmpsl
loopne
or
dec
out
ss
and
xchg
xor
pop
pop
push
in
mov
mov
inc
dec
push
pusha
in
sub
test
mov
jg
neg
call
xor
das
jae
imul
jl
call
inc
arpl
pop
js
lds
push
mov
sub
and
idivl
pusha
mov
iret
std
push
lret
push
shl
xchg
jo
adc
jle
push
mov
mov
cli
xchg
add
rclb
mov
fisttps
mov
push
dec
or
xor
fsub
ret
pushf
inc
int
mov
push
loop
jne
adc
ljmp
dec
jnp
mov
sub
cmp
add
xor
sbb
mov
adc
out
in
dec
inc
xstore-rng
cmpsl
cmp
das
dec
adc
adc
fnstsw
pusha
xchg
xchg
xchg
pop
xor
dec
cmpsl
call
mov
and
enter
loope
fistl
enter
and
scas
xor
cmpsb
mov
std
aad
xchg
cmp
dec
xchg
lds
mov
cmpsw
cwtl
clc
fcmovu
sub
dec
iret
cmp
aam
dec
jmp
mov
cli
cltd
mov
shll
cmpsl
imul
push
mov
sub
shll
xor
into
pop
mulb
out
and
lcall
rcrb
mov
jae
movsb
sbb
and
movsl
pop
sbb
ja
out
leave
addr16
xchg
fwait
scas
loopne
popa
xchg
xor
clc
xchg
flds
test
dec
mov
pop
call
addr16
fsts
ret
fcoml
jnp
pop
sub
mov
out
cmp
jb
mov
pop
cmpsb
ret
cld
movsl
dec
cmpsl
adc
push
das
fistpl
jle
adc
mov
rcr
test
xchg
pop
push
aam
sub
int3
aam
pop
cld
cmpsb
rolb
mov
loop
xor
or
pusha
loop
ljmp
add
mov
test
sti
loope
adc
cwtl
xchg
shll
fimull
sub
loopne
inc
loopne
addr16
fimull
dec
adc
xor
mov
push
jno
sbbl
or
fs
push
shlb
ljmp
out
fldt
fildl
ss
adc
ss
icebp
adc
adc
rolb
mov
imul
jnp
cmp
addr16
ret
or
stos
stos
jae
cld
add
sbb
pop
int3
inc
jg
rclb
pusha
adc
insl
aad
xor
scas
dec
dec
adc
xchg
adc
jb
pushf
mov
mov
push
jns
std
rolb
ret
adc
add
js
xchg
daa
push
fwait
push
inc
push
sub
lahf
pop
cld
out
nop
pop
mov
mov
lds
cmc
dec
rcr
je
push
mov
aam
fdivs
add
pop
in
aas
lds
mov
mov
inc
sti
daa
cmp
sub
sbb
mov
fcomip
cmpb
mulb
rorl
jno
cmp
push
push
pop
jno
daa
sub
dec
or
add
pop
clc
push
mov
lahf
inc
jle
iret
enter
sbb
push
sbb
sbb
rorb
sub
jns
xchg
fists
mov
jge
outsb
inc
xchg
mov
jns
mov
mov
dec
jne
push
iret
xchg
mov
insl
mov
mov
test
xor
nop
cmp
cmp
test
fucomp
data16
jg
movsl
and
xchg
cmpsb
mov
es
iret
mov
inc
sbb
mov
jecxz
mov
push
imul
out
adc
inc
jl
push
icebp
sbbb
movsl
movsb
xchg
mov
mov
xor
inc
pop
lret
sbb
in
cmpl
js
mov
xchg
pop
push
jo
cmp
xor
pop
dec
or
ljmp
shrl
jno
adc
test
jno
rep
pop
bound
mov
outsb
or
and
jnp
inc
sbb
jnp
sub
mov
sbb
aas
hlt
push
push
jo
jge
fldenv
int
push
leave
mov
pop
inc
jmp
cmc
mov
mov
or
ss
push
pop
dec
or
js
push
mov
cmp
pop
shrl
cs
sbb
in
mov
push
jmp
jmp
insb
sub
mov
out
bound
fdivr
and
pop
add
or
cmp
jl
cld
cmc
dec
xlat
rcl
lahf
sahf
xorb
mov
incl
jb
out
xchg
pushf
or
xchg
rcll
lret
jno
mov
loope
jo
xchg
mov
ret
mov
mov
xor
pop
xchg
sub
inc
in
cmc
ds
scas
mov
push
cli
mov
adcl
fbld
cltd
fwait
aad
outsb
push
aas
mov
outsb
pop
fmull
xor
stos
jle
xchg
lea
rcll
sbb
sti
xchg
cmp
daa
aad
ljmp
inc
pop
jle
pushf
mov
test
pop
or
cmp
pusha
test
popl
mov
lea
push
mov
pushf
icebp
adc
pop
cmp
push
ljmp
add
or
jno
adc
test
insb
mov
mov
jo
cmp
daa
mov
push
shrb
cld
mov
adc
enter
xor
pop
inc
pop
in
addr16
lret
jno
push
sub
mov
nop
or
push
pushf
ds
pop
sbb
cmovl
icebp
lret
dec
popf
mov
xchg
inc
fldenv
sub
add
aas
lahf
or
jae
stos
in
das
inc
aad
inc
mov
jl
xchg
jns
loopne
pop
push
lret
and
ret
out
scas
aam
shll
lods
sub
fldenv
loop
insl
lcall
pop
sbb
shlb
sbb
xchg
adc
adc
add
and
stos
insb
and
push
aaa
shrl
sbb
mov
rorb
cmpl
dec
jbe
nop
loope
enter
jnp
imul
dec
int
cli
outsb
imulb
clc
movsl
push
dec
orb
dec
inc
lret
cmpsb
and
lock
and
sbb
cmp
pop
pop
push
fwait
jle
mov
pop
mov
inc
imul
inc
jbe
xchg
pop
xorl
div
adc
loope
out
xchg
add
stos
sahf
cmp
add
fmull
in
or
cltd
cmc
mov
lret
mov
pop
mov
pop
push
sub
fdivrs
push
ljmp
push
loop
push
iret
dec
imul
mov
and
mov
fldt
fsubrl
cmp
sub
dec
test
cmp
or
and
mov
dec
lds
jnp
adc
fidivl
test
cld
dec
hlt
lds
filds
int3
or
jmp
jg
lret
or
xor
jo
sub
jl
int
es
cmpsl
mov
movsl
adc
mov
sbb
mov
jmp
pop
or
dec
jle
outsb
sub
lahf
fstpt
ret
dec
lods
mov
dec
pop
test
call
jle
mov
int3
jmp
cmp
jle
xor
adc
repnz
aam
lods
mov
daa
insl
imul
sbb
int
mov
sti
mov
popf
jge
std
ffree
rcll
adc
pop
xchg
pop
mov
lahf
dec
shrb
ss
mov
mov
dec
dec
pusha
mov
add
or
cmp
je
sub
adc
sub
out
inc
loope
pop
out
dec
mov
scas
push
jmp
scas
xor
fcmovu
push
mov
stos
mov
mov
iret
mov
push
adc
popf
pushf
testb
dec
mov
jl
mul
pusha
popf
xor
inc
push
popl
inc
push
add
fistps
add
cli
sbb
lret
add
mov
hlt
rol
jno
mov
mov
adc
lods
and
or
jbe
popa
inc
or
sbb
dec
or
sbb
add
adc
dec
subl
sbb
dec
leave
pop
aad
xor
cmp
inc
cli
mov
pop
bound
dec
jmp
xor
clc
mov
stc
jb
mov
dec
jg
push
push
jnp
mov
mov
sti
arpl
inc
fdivp
dec
mov
sub
and
incb
das
lret
call
sti
sti
repz
mov
packsswb
sub
lcall
testb
adc
pushf
dec
fwait
call
mov
pop
pop
add
sbb
adc
daa
jl
push
and
sbb
leave
mov
test
jmp
lcall
je
cwtl
mov
imul
or
dec
sbb
fisubs
push
pop
dec
xchg
and
or
inc
push
pop
pop
push
cmp
xchg
push
insl
call
and
sbb
jo
add
ds
sbb
or
shlb
sub
add
and
in
inc
out
or
imul
push
fwait
jae
xor
pop
scas
sub
je
jns
testl
push
dec
lods
arpl
les
sub
mov
dec
push
ficoms
stos
jl
repz
push
stos
push
cltd
cmpsl
loopne
pop
sarb
popf
sub
xlat
in
inc
jg
inc
sbb
push
sahf
fnstenv
pusha
adc
out
insl
bound
lods
or
imul
and
mov
xchg
sub
mov
enter
mov
inc
xor
lea
mov
add
xchg
xchg
int
mov
bound
add
adc
aas
roll
and
cmp
in
in
loope
fisubrs
inc
aas
dec
sub
xchg
cmpsl
dec
sub
fucomp
out
rorb
xchg
xchg
shrb
adc
aas
lret
jb
jge
je
mov
test
popf
cmpsl
imul
ljmp
fidivrs
push
adc
mov
std
adc
sbb
rcr
into
sub
pop
sbb
xorb
cltd
or
aad
bsr
and
or
add
pop
lret
arpl
or
xor
jecxz
std
sarb
sbb
cmp
jbe
pop
cmp
les
mov
fs
cmp
in
js
scas
adc
shl
jge
xor
pop
mov
mov
popf
xchg
jmp
fs
gs
or
das
cmp
addr16
es
sbb
mov
sub
jne
test
jbe
bound
in
test
ret
rcr
dec
xchg
nop
push
incl
jge
jns
mov
je
faddl
outsb
fisttpll
mov
lcall
iret
mov
cmp
mov
les
dec
sbb
in
push
rcrb
cwtl
inc
mov
xor
stos
out
sbb
test
xlat
dec
lahf
fmuls
pushf
push
fadd
bound
mov
inc
xchg
mov
cmp
dec
mov
icebp
popf
adc
imul
rol
or
lods
lods
mov
stos
movsb
or
imul
movsl
int3
call
mov
std
jmp
jge
cli
int
adc
popa
xlat
and
add
push
je
cmpb
loop
outsl
inc
mov
test
add
repnz
sarb
sub
fisubl
mov
and
fsubp
push
mov
test
pop
in
or
xchg
out
push
loope
xchg
stc
push
dec
pop
pop
andl
xchg
sahf
icebp
cmp
leave
je
sub
jle
mov
aam
push
loope
ljmp
mov
pop
pop
cli
inc
xchg
sub
test
or
ljmp
cltd
xor
gs
and
add
xchg
paddb
popa
iret
fisttpl
aad
adc
adc
data16
out
adc
divl
mov
movsl
pop
inc
or
mov
push
movsl
or
jns
xchg
fcmove
jne
lock
or
dec
push
jne
push
xchg
rcll
ret
or
test
or
mov
xor
in
mov
fisubl
test
sti
mov
xchg
push
or
cli
movsl
pop
xor
or
ljmp
sbbb
add
out
jo
adcl
lea
and
sub
fmull
jnp
int
mov
adc
ret
sub
mov
mov
cmpsb
jl
mov
rolb
and
mov
aam
mov
inc
xchg
in
dec
adcb
push
dec
ror
cmpsl
cld
std
cld
push
stc
xchg
and
fisttps
mov
cld
cmp
adc
adc
incb
push
aaa
dec
push
repnz
xor
call
ds
pusha
add
pop
mov
mov
cmc
jbe
loope
fisubrs
xchg
cld
sub
test
lret
test
dec
insb
xor
mov
dec
imul
cmpsb
nop
aam
cmp
imul
gs
adc
data16
mov
cwtl
cmp
pop
or
xchg
pushf
add
pop
sub
ljmp
xor
pop
fimuls
jae
ja
lret
jge
negl
leave
lret
ljmp
addb
mov
lods
aam
cltd
adcl
pop
cmp
inc
push
repz
add
xchg
jecxz
fisubl
adc
cli
sbbb
jp
or
sub
push
in
or
call
push
jno
lock
cwtl
sbb
inc
sub
add
es
fwait
ret
data16
mov
lcall
inc
hlt
add
sub
rclb
xorb
dec
fdivrl
lahf
jp
aaa
xor
mov
mov
dec
adc
scas
cli
test
jo
mov
aas
pop
inc
movsl
cmp
in
js
and
mov
mov
cmp
dec
out
xchg
test
sub
imul
push
cmpsl
test
mov
das
mov
and
mov
inc
je
daa
orb
movsb
fnstsw
dec
outsl
jnp
shll
mov
loopne
xchg
jmp
mov
sti
in
repnz
js
les
loop
pushf
push
push
push
lods
test
add
lds
cs
mov
es
adc
fs
lcall
xchg
pop
adc
mov
inc
insl
mov
or
push
je
shlb
inc
das
out
repz
and
cmp
nop
icebp
cltd
xorl
mov
inc
xlat
dec
outsb
sbb
sub
orl
add
mov
adc
fnop
jecxz
mov
std
gs
mov
xchg
push
jb
pusha
loopne
and
fmull
jl
shrb
or
pop
sbb
pop
mov
fs
lret
out
or
add
fwait
lea
je
stos
xchg
mov
aad
push
jno
daa
jecxz
mov
test
aaa
jnp
cmpsl
aaa
cmp
sub
cmp
add
cmpsl
pop
jmp
lret
in
loopne
sbb
push
cmp
jo
cwtl
xor
pop
adc
jle
mov
ja
test
les
jp
add
test
mov
mov
pop
mov
mov
popf
or
mov
pop
jmp
repz
sbbl
jae
add
mov
xchg
aaa
or
cmp
sub
xor
popw
xchg
movsb
ret
xor
das
incb
sub
jp
shlb
push
pop
sub
cmpsl
inc
das
inc
push
sbb
jns
in
das
fsubr
outsl
das
jp
hlt
mov
rcll
xchg
cmp
psubsb
sarl
icebp
add
and
mov
pop
aam
xchg
cwtl
test
xor
notl
loop
jnp
jno
dec
lock
pop
xchg
testl
mulb
mov
add
xor
insb
pop
jb
cmp
inc
leave
inc
lods
sub
fsubl
popa
pusha
mov
std
and
inc
cli
mov
out
data16
lahf
sub
adc
cwtl
xor
dec
sbb
lods
scas
jp
pushf
decb
jbe
iret
push
lcall
int
in
das
jae
lea
mov
aam
push
stos
leave
ret
cmp
ret
push
leave
xlat
int
sahf
mov
sbb
adc
jg
aad
fistpll
sahf
nop
addr16
loop
fsts
sub
out
xchg
aas
dec
mov
pop
ss
sar
jne
daa
scas
test
mov
push
mov
pop
cmpsl
xor
in
in
stc
sbb
out
xor
add
jp
mov
push
pop
sti
push
inc
andb
add
out
in
sub
or
and
adc
and
jl
or
adc
mov
add
test
sahf
lock
cld
das
push
and
out
mov
jnp
fwait
mov
jbe
movsl
mov
xchg
jge
push
and
ficomps
and
cmc
leave
adc
sub
out
push
mov
jnp
xor
test
ret
cmpb
xchg
jno
adc
jmp
jno
jmp
sbb
movsb
xor
jle
jb
mov
das
or
cmp
fwait
test
jnp
xor
fbstp
dec
loope
push
mov
loope
lods
lods
jno
push
push
pop
mov
add
adc
popa
mov
lahf
and
into
jge
jne
insb
repz
push
sub
gs
jg
into
loop
das
dec
aas
cltd
xchg
fmuls
in
repz
cmp
sub
test
mov
ret
addr16
dec
data16
sub
js
sub
inc
sbb
loope
push
loopne
iret
cmp
cmp
lock
icebp
imul
movsb
pop
cmpsb
insb
cmp
push
lret
fdivrs
inc
fnsave
call
scas
int3
in
es
test
popa
jne
push
jg
push
dec
sbbl
or
add
or
and
pop
pop
adc
pop
xor
and
push
shl
mov
mov
mov
push
cs
pop
adc
out
xchg
repz
nop
sbb
sub
dec
psllq
imul
std
cmp
es
test
inc
pop
xor
scas
paddb
jne
xchg
mov
jmp
jl
xor
cs
repnz
or
dec
lahf
ret
aam
sbb
mov
push
jmp
out
scas
ds
scas
jg
subb
test
jnp
out
xor
and
cmc
ret
push
jge
imull
mov
pop
leave
or
jmp
dec
mov
dec
mov
xchg
cltd
mov
test
inc
pop
xorl
inc
cmp
test
xchg
xchg
popa
sub
mov
sub
in
movsl
cwtl
mov
mov
or
nop
jg
jbe
clc
mov
rcr
sbb
pushf
out
jno
cmp
inc
jnp
or
ds
pop
jb
fstps
add
cmp
push
lret
inc
daa
inc
dec
jg
out
xchg
cmpsl
inc
dec
call
inc
imul
jb
jmp
xchg
decl
mov
push
jmp
lods
sbb
push
mov
int3
dec
adc
and
lods
sti
jnp
fisubs
dec
dec
mov
mov
jg
xor
lods
dec
mov
and
outsb
sbb
adc
xchg
scas
sub
adc
mov
sub
sbb
stos
dec
sub
movsb
clc
sbb
in
mov
sarl
adc
into
dec
adc
insl
leave
xchg
add
mov
cmpsb
pop
pop
and
jmp
xor
loopne
das
and
stos
movsb
sbb
scas
clc
aam
dec
and
push
and
sbb
dec
dec
pop
hlt
out
jae
ja
mov
or
xor
pop
inc
jno
xchg
aaa
mov
mov
in
jno
add
lcall
repz
pop
imulb
test
cli
pop
ret
inc
pop
xor
or
subb
mov
mov
idivl
lods
sub
insl
jno
loopne
push
xchg
in
out
test
fimuls
insl
push
push
cmp
addr16
push
or
mov
das
cmp
scas
mov
gs
or
and
inc
js
push
imulb
rolb
sub
outsl
xchg
ss
mov
cmp
sbb
inc
gs
mov
jmp
pop
test
pushf
enter
into
dec
les
mov
and
lret
leave
shlb
out
repnz
fstpt
jecxz
hlt
cmpsb
sbb
jnp
jne
ss
lock
movsl
jp
dec
repz
inc
push
mov
push
add
scas
mov
aad
or
mov
cs
sbb
ret
dec
orl
std
mov
sbb
inc
sub
or
or
mov
inc
jnp
or
pop
mov
push
lcall
jmp
xor
ljmp
xor
dec
mov
mov
insb
mov
pusha
add
push
push
adcl
sbb
dec
mov
jmp
cli
call
pop
es
sub
pop
in
xor
push
push
lcall
jno
fnstsw
dec
popf
adc
in
sbb
add
push
or
andb
push
mov
push
cmp
ss
in
push
iret
mov
das
push
fcompl
xorl
add
les
bound
sbb
inc
mov
or
or
mov
cmp
dec
cmpsl
sbbl
xchg
adcb
stc
daa
mov
repnz
ret
push
push
imul
bound
inc
pop
mov
cld
enter
mov
jo
out
std
xor
rcrl
xor
rcrb
idivl
mov
dec
pop
fisttps
imulb
aad
daa
or
ja
sub
aas
inc
call
scas
push
dec
loopne
test
imul
jae
lcall
decl
sbb
mov
xor
sbb
pop
fadd
shrl
fimull
sbb
scas
dec
cmp
mov
xchg
cltd
popf
lods
call
test
movsb
lods
inc
leave
and
lock
cmp
int3
xchg
mov
orl
and
mov
pop
push
xor
push
and
mov
frstor
lock
loope
push
xchg
pusha
lods
pop
xor
push
mov
gs
xor
pop
sbb
jb
inc
pop
pop
cmp
lret
insl
xor
dec
sub
cld
sbb
xchg
push
popa
rcr
pop
lret
mov
cmc
xchg
fwait
std
int3
sub
push
and
lods
adc
and
sub
adc
lret
test
imul
adc
cmp
jne
enter
xor
lea
sbb
or
loopne
sbb
loope
mov
xchg
push
repnz
scas
out
mov
pop
scas
notl
movhps
inc
std
fcmove
xchg
mov
jmp
cmpsl
sub
cli
pop
sbb
rcrb
scas
dec
fdivr
adc
loop
pushf
mov
cs
addr16
js
test
lea
cltd
push
in
add
into
lock
push
jo
in
sub
push
pop
sbb
mov
jmp
dec
pop
je
jne
push
push
sbb
xor
sub
pop
in
push
pop
or
cli
lock
adc
push
jp
popa
aas
ss
and
fcos
xor
das
push
arpl
inc
fcoml
sbb
mov
mov
scas
sbb
mov
daa
pop
add
lea
xchg
adc
dec
and
sahf
arpl
arpl
add
in
mov
pusha
test
pop
jnp
leave
push
psubb
lcall
popa
lock
mov
mov
ss
out
orb
mov
sub
jg
aas
jmp
sahf
leave
xor
shlb
imul
das
rorb
fisttps
xchg
sbb
call
push
pop
fdiv
add
aas
inc
mov
pop
loopne
pop
enter
xor
fst
xchg
mulb
imull
mov
test
ds
mov
decb
xchg
stc
lahf
ljmp
xchg
mov
pop
addl
fcompl
dec
mov
xchg
mov
jecxz
xlat
push
mov
mov
mov
or
hlt
shl
jl
and
xchg
xchg
jbe
add
out
xchg
pushf
into
and
lret
jno
sbb
imul
loop
push
ret
sub
insb
sub
pop
imul
cltd
aas
push
cmp
xchg
fxch
in
sub
dec
mov
popa
add
xor
cmp
notb
stos
fucomip
int3
jg
scas
pop
loop
ja
arpl
aas
call
shl
mov
lcall
push
dec
aam
push
jp
pop
mov
test
cmp
mov
mov
js
iret
loope
out
push
xor
push
jmp
lods
mov
fs
loopne
and
jo
scas
js
icebp
clc
mov
adc
jmp
xor
push
push
or
xchg
push
jl
pushf
cld
sub
lods
inc
rcrb
inc
pop
in
xchg
push
inc
stc
xchg
mov
add
fs
int
test
iret
pop
int
int
xor
ljmp
jl
sub
cmp
icebp
test
imul
out
aad
movzwl
lods
pushf
cld
test
cs
pop
adc
jo
inc
adc
dec
push
cmp
push
mov
subb
sahf
out
and
fnstenv
lea
mov
mov
sbb
imul
dec
mov
push
xor
lds
mov
mov
mov
inc
rcr
ret
into
push
jnp
push
adc
jecxz
sahf
loop
xor
or
xor
out
dec
ds
repnz
ljmp
sbb
das
add
xor
call
and
shlb
inc
jnp
inc
pop
jge
dec
loopne
addr16
int3
xchg
test
dec
push
popa
cmp
mulb
orl
das
mov
or
sbb
loop
cltd
pop
repnz
shlb
cmp
enter
cwtl
jns
fists
ficoml
mov
in
fwait
and
rcll
and
popl
pushf
lods
xor
inc
inc
cmp
mov
xor
rcll
mov
pop
ds
js
popf
loop
hlt
cmp
jg
sbbl
sub
mov
ss
xor
add
out
lods
push
testl
xor
imul
pop
imul
jecxz
mov
out
push
mov
fstl
jmp
cmc
fstl
add
pushf
mov
aam
mov
repnz
xor
push
mov
shll
pop
adc
pop
add
sub
add
loope
ss
xchg
aas
arpl
ds
insl
mov
dec
sub
inc
mov
adc
subl
ljmp
or
or
cli
mov
mov
xchg
fwait
push
mov
sbb
mov
dec
rcll
xor
iret
lds
xor
icebp
jl
sahf
add
sub
jmp
shll
push
pop
jecxz
mov
stc
cmpsl
sti
popa
pushf
dec
pop
jp
sahf
pop
cmpb
stc
jmp
punpckldq
lea
mov
push
cmpsb
adc
and
xlat
pop
in
mov
push
add
xor
aam
inc
mov
pop
js
lret
jl
stc
add
sahf
jns
inc
fs
cmp
xor
out
cmpsb
push
cwtl
movsl
movsl
stos
pop
add
rcr
insb
cmp
mov
mov
xchg
push
jge
sbb
pusha
pop
push
sbb
data16
pop
dec
pop
fists
mov
xlat
sahf
fs
fdivp
cmp
pushf
dec
mov
mov
push
and
lods
mov
push
add
mov
xchg
ljmp
aas
test
aam
popa
ljmp
jo
cmpl
lcall
hlt
mov
sbb
in
out
adc
ds
pusha
ficoml
pushf
and
pop
sub
cmp
subl
mov
and
mov
mov
or
push
test
aad
insb
cmp
jno
test
movsl
stc
or
out
dec
or
sahf
ret
paddb
mov
ljmp
mov
std
and
sbb
mov
sbb
iret
pop
mov
shll
pushf
adc
adc
xchg
xlat
pop
and
sti
iret
hlt
std
pusha
or
mov
les
fsubr
fildll
adc
pop
int
jp
mov
or
inc
push
xor
or
pop
xor
insb
call
xor
lret
stos
test
sub
hlt
xchg
xor
cld
cmc
jg
test
sub
xchg
pop
mov
das
lods
fisttpll
in
sbbl
pop
mov
imul
mov
das
call
push
and
cmp
hlt
dec
sub
add
ds
pushf
push
int3
inc
xor
pop
fdivrs
xor
testl
and
mov
and
add
adc
mov
int3
in
loop
enter
mov
inc
fbld
icebp
nop
xor
pop
ja
xchg
mov
daa
jne
rcrl
add
mov
jg,pn
mov
add
lock
lea
lret
mov
adc
shrl
or
js
jmp
mov
push
and
aam
daa
jg
rcll
fadds
xchg
aaa
mov
das
shrl
arpl
aas
add
rclb
gs
add
mov
add
or
sbb
sub
loop
push
jns
sub
stos
xchg
jae
xor
pop
jo
jl
jbe
mov
fstl
in
xchg
pushf
jb
pop
lock
dec
push
loopne
cmp
push
dec
fldl
lret
cltd
outsl
or
and
cmp
and
cmp
add
push
lds
mov
lahf
and
mov
cwtl
and
sbb
push
rcrb
int3
das
loope
pop
xchg
out
jns
imul
or
xchg
jb
jmp
dec
push
subb
test
pop
outsl
inc
xor
sbb
or
push
fcompl
fwait
dec
mov
out
cmp
in
lea
shlb
mov
jns
js
adc
flds
pushf
inc
test
push
int
mov
shrl
inc
jle
dec
jmp
aaa
xchg
add
leave
sbb
xchg
sbb
mov
pop
cmp
xchg
pop
dec
std
and
movsl
mov
je
push
jbe
out
inc
push
mov
pop
pop
xchg
mov
imul
push
lcall
out
cli
jge
jecxz
cmp
ret
cmp
mov
push
xchg
inc
in
push
lods
aad
mulb
and
mov
nop
mov
adc
xchg
nop
das
push
mov
jl
cmp
add
push
inc
ljmp
mov
sbb
push
pop
daa
addr16
fmul
sub
dec
sahf
test
mov
sbb
popa
les
repnz
xor
pop
jp
lcall
test
mov
xorl
andl
in
jo
xrelease
out
xchg
pop
xor
loope
mov
push
mov
mov
xor
bnd
push
jnp
daa
cmp
out
fdivs
and
cltd
lea
mov
out
in
sub
sbb
xor
inc
mov
mov
popw
das
sti
pop
sti
rol
and
cwtl
adc
mov
cmpsl
mov
inc
mov
sti
cmp
in
mov
xchg
int
xchg
mov
xor
das
adc
sub
jle
shll
orb
dec
outsl
push
adc
fs
jbe
or
cmp
rorb
pop
insb
xchg
mov
jle
lret
mov
mov
js
and
mov
xchg
xchg
in
push
xchg
adc
sub
iret
mov
jo
jecxz
enter
in
imul
outsl
add
mov
sub
lret
int
jge
adc
push
jnp
inc
int
fidivl
dec
fadds
xor
imul
cltd
push
mov
lret
push
negb
test
cmc
xor
cld
push
cs
xchg
cmpsb
inc
out
add
sub
mov
sub
mov
ret
xchg
out
pop
popf
xlat
ds
das
iret
mov
jmp
mov
mov
adc
cltd
pop
rcrl
stc
xchg
out
cmp
imul
and
dec
stc
jg
inc
xchg
divb
in
sub
sub
sbb
mov
insb
mov
or
xor
pop
pop
into
pushl
jb
inc
xor
xor
test
mov
cmp
lret
and
divl
movl
lret
jecxz
xchg
or
push
outsl
in
pop
mov
add
pop
or
sub
popa
cmpsb
lock
repz
xchg
or
xorb
ljmp
movsb
lds
and
aam
inc
rorl
xor
mov
ds
xchg
imul
push
mov
gs
mov
enter
sahf
cmp
sti
and
or
mov
xchg
mov
jno
jmp
and
and
lods
xchg
sbb
sub
imul
dec
cmp
out
daa
pop
out
xchg
inc
push
rcl
cmp
out
sub
mull
add
fcompl
stc
sub
mov
out
mov
push
sbb
lock
test
lcall
or
push
push
pop
shl
sub
test
repz
cmp
shll
stos
mov
xchg
out
faddl
arpl
xor
ja
cmp
inc
inc
insl
xchg
push
inc
mov
jmp
cmp
dec
les
clc
inc
dec
test
inc
mov
cs
roll
repz
testl
cmp
dec
push
es
loop
cmp
and
mov
xor
call
stc
mov
fisubrl
dec
mov
cmp
inc
dec
insb
in
pop
aaa
nop
insl
out
jg
xchg
fistpll
cmp
mov
pop
mov
lea
jle
enter
ror
pop
sub
mov
push
or
lods
jno
ret
pop
test
ficompl
sub
xchg
test
and
sub
popf
xchg
data16
movb
xchg
jmp
lds
clc
pushf
jle
push
fsubs
ret
imul
and
icebp
aaa
imul
push
push
loope
sbb
adc
adc
pop
das
jne
test
int3
jbe
fcoms
das
mov
pop
loop
aam
enter
pop
cmp
mov
fmul
lret
push
nop
mov
leave
fists
out
adc
sub
adc
in
popa
ljmp
out
mov
aam
inc
lock
gs
cmpb
imul
lahf
int3
mov
mov
jecxz
sbbb
scas
in
jl
jae
pop
mov
cmpl
mov
test
decl
roll
imul
insl
dec
pop
cmc
mov
stos
ljmp
add
dec
inc
jb
notl
or
sub
mov
lret
jmp
push
mov
in
mov
pop
fs
js
pop
pop
addr16
add
rcrb
dec
sub
push
cwtl
in
adc
sub
mov
mov
popa
loop
adcb
xor
add
mov
repnz
inc
xchg
lahf
dec
add
inc
pop
xor
adc
jle
xor
xchg
push
and
jge
xorl
mov
outsl
xchg
cmp
orb
xchg
xchg
xchg
je
lods
push
into
clc
mov
xchg
and
adc
cltd
push
xlat
push
jg
int3
push
cli
xor
pop
xor
push
push
xor
cli
outsl
push
lea
decb
inc
xchg
mov
mov
imul
lods
mov
rorl
adc
cmpsl
lret
mov
je
imul
mov
pusha
push
push
dec
cld
adc
push
pop
jae
cmp
cmc
rclb
mov
adc
pop
mov
push
adc
xor
decl
sub
jmp
nop
imul
pop
mov
dec
jle
test
pop
popf
out
mov
jne
loop
dec
lahf
sbb
and
pop
pop
sub
sbb
jmp
sbbl
adc
mov
push
add
mov
dec
cmp
mov
mov
cmpsl
push
push
sbb
mov
aas
filds
ss
mov
ds
lods
bound
enter
fstpt
xchg
lret
imul
pop
into
test
sbb
pop
ret
jmp
mov
mov
into
dec
hlt
add
inc
daa
inc
js
mov
xchg
filds
call
bound
dec
adc
sbb
sub
lcall
add
adc
int
add
push
mov
dec
int
pop
add
adc
mov
pop
lock
jns
in
pop
inc
inc
imul
add
add
stc
xor
sub
jb
pop
fstpl
orl
std
imul
inc
push
add
imul
dec
aaa
mov
dec
cmpsb
xchg
cmpsb
sbb
cltd
dec
stos
and
enter
mov
and
add
shrl
mov
sub
incl
add
push
dec
mov
jp
out
lea
pop
inc
hlt
or
sarl
sub
adcb
sbb
cmp
or
fsubrp
enter
and
mov
push
cmp
iret
jo
cmp
out
and
sti
sbb
mov
in
popa
loope
pushf
or
adcl
sti
scas
xor
in
adc
adc
sbb
dec
call
jbe
insl
jge
pop
imul
mov
jmp
jae
into
mov
js
and
dec
dec
mov
and
mov
xchg
pop
cld
inc
nop
dec
in
pop
out
xor
jae
lods
or
int3
rcr
pop
adc
jns
jns
adc
adc
ljmp
mov
je
jge
ficomps
push
jne
pop
testb
icebp
arpl
inc
unpckhps
pop
arpl
sbb
adc
scas
cmp
fdivl
stos
or
cwtl
lock
ss
push
jae
inc
xor
mov
test
dec
jle
je
lea
cltd
ret
mov
mov
jno
cmp
adc
mov
gs
pop
sbb
rorl
push
jb
jne
push
loope
test
mov
dec
outsb
shrb
jae
jno
sub
es
adc
mov
and
mov
pop
aad
in
test
add
fimull
jbe
inc
sub
icebp
aas
push
gs
mov
xchg
xchg
push
mov
jle
stos
push
data16
cli
sbb
and
xor
fidivl
sub
adcb
sub
scas
in
aam
lret
movsl
jno
dec
ret
stos
xchg
mov
ret
mov
sub
fcmove
call
shll
insb
xorl
jg
adc
stc
adc
push
xlat
fdiv
and
xor
mov
xchg
fs
pop
test
lock
popa
pop
adc
cmp
call
sbb
lea
inc
sbb
push
mov
insb
mov
dec
mov
mov
inc
daa
jecxz
and
popf
push
stos
stc
push
shl
ds
dec
fdivrs
pop
lret
fcompl
ljmp
pop
inc
fmuls
enter
jns
ja
inc
jecxz
fstpl
fcoml
nop
cwtl
fimuls
iret
icebp
int
xchg
aaa
loope
adc
jae
pop
xor
xlat
push
cmp
jo
repz
push
mov
add
nop
pop
out
rolb
sbb
js
or
adc
clc
pop
mov
xchg
push
mov
pop
and
fcmovbe
xor
rorl
inc
cwtl
test
rclb
mov
imul
mov
xor
dec
xchg
ret
xchg
or
jno
rorl
or
mov
aaa
xchg
nop
vmovshdup
pop
xchg
xor
pop
push
add
das
dec
and
rclb
sbb
leave
xorb
pop
insl
pop
arpl
xchg
sbb
les
mov
shll
es
ds
movb
jbe
jb
out
adc
sbb
and
xchg
pusha
aaa
mov
int3
xchg
jmp
cmovle
lods
shr
int3
das
mov
repz
into
rcrb
xor
in
add
ss
subb
mov
or
in
mov
pop
lcall
cmp
subb
xchg
aas
mov
jp
inc
mov
cmpsl
pop
xor
ljmp
int3
sti
or
pop
and
sti
xchg
jno
leave
dec
lret
cmpb
push
int
dec
cmp
pop
test
pusha
xchg
xchg
repnz
cmpl
lods
pop
and
jno
shr
fsubrs
sti
xchg
cmc
aaa
cltd
out
dec
repz
add
stos
lods
aad
pusha
cltd
jno
mov
push
cmp
orb
jo
xlat
cmpsl
rcr
repz
jne
cmc
fdivrs
imul
jecxz
fisubrl
aad
adc
outsb
add
pop
push
pop
in
jns
hlt
adc
imul
sbb
sbb
dec
movsl
mov
out
nop
vmread
fwait
dec
mov
lret
mov
vpshlw
sub
test
std
test
rcll
inc
add
xchg
hlt
repz
mov
sub
mov
jmp
or
stos
dec
mov
popf
into
and
mov
sbb
jno
xor
cltd
in
pop
push
add
dec
pop
lock
test
lahf
aad
dec
je
divb
pop
xchg
and
cwtl
or
inc
push
int3
inc
fsub
inc
fadd
movsb
outsl
xor
inc
jp
xchg
push
mov
xchg
addr16
cmpsl
fsubl
and
shll
push
sbb
xchg
out
fwait
adc
test
dec
xor
loopne
aad
xchg
lret
int3
ja
jnp
test
xor
sub
loop
das
dec
jl
jbe
add
call
sarl
je
and
dec
cmp
fs
sbb
out
nop
mov
push
lods
sbb
stos
or
dec
mov
lds
cmp
jb
out
test
iret
ret
jb
xlat
mov
dec
orb
lret
imul
ret
push
pop
inc
lods
ficomps
ljmp
push
les
inc
and
xor
add
loop
sbb
push
int3
and
je
ljmp
rclb
or
mov
cli
daa
dec
mov
cmp
dec
sub
push
or
push
loope
dec
cmp
jb
sbb
rol
push
push
rcll
mov
dec
rolb
fwait
add
aaa
mov
mov
or
popf
mov
xchg
iret
sub
cmp
xchg
sar
fimull
lret
popf
addr16
jp
jmp
cmp
iret
test
dec
sub
adc
or
stc
pop
jle
push
pushf
sbb
call
call
pop
ss
mov
mov
xor
outsb
mov
push
xor
insl
pop
es
sahf
mov
loope
jp
xor
and
xchg
mov
adc
push
push
repnz
jne
lret
sbb
jp
jns
xor
jb
push
lock
fwait
insb
add
nop
insl
inc
cld
sub
dec
inc
push
out
js
mov
iret
inc
dec
xchg
sbb
iret
call
test
aad
je
xor
out
push
shlb
jecxz
into
mov
xor
adc
mov
mov
mov
sti
rcl
dec
cmc
jns
xor
jns
and
filds
out
xor
bound
cs
cmp
pop
ret
and
sti
hlt
movb
rcr
in
add
repnz
jo
mov
imulb
mov
xor
xchg
sbb
push
int
jae
ret
ljmp
fsubrl
push
adc
shlb
shlb
loope
cmp
cmpsb
cmpsl
pop
add
aaa
xchg
enterw
cmpsl
jae
or
test
cwtl
dec
sbb
jmp
jnp
in
adc
push
shll
jecxz
mov
les
test
les
mov
test
cs
jle
test
fnsave
and
inc
loopne
add
dec
add
pop
lahf
mov
les
sbb
add
mov
lock
or
movsb
jo
sub
pop
add
xchg
sbb
adc
jge
jns
and
imul
es
sbb
pop
pop
decb
icebp
pop
pop
addr16
adc
push
inc
mov
pop
cld
sbb
or
call
add
add
sbb
jmp
fsubrs
adc
sub
mov
pop
mov
and
sub
push
loopne
int
ja
cmpsl
rcll
ljmp
stos
xchg
or
sub
or
jo
inc
jecxz
cmc
add
jno
cmp
adc
jmp
enter
pusha
sahf
enter
popf
rorl
xorl
push
sarb
lahf
addr16
les
movsb
dec
clc
in
push
xorb
frstor
stos
lock
cs
or
arpl
ljmp
imul
mov
popf
daa
inc
or
lret
out
sarb
in
loope
mov
pop
xor
jbe
mov
dec
and
sbbl
push
push
aam
mov
xchg
fstpl
cltd
mov
and
cltd
mov
mov
xchg
clc
test
adc
mov
sub
lret
bound
mov
int3
mov
inc
lods
pop
inc
in
lret
stos
adc
enter
sub
adc
push
test
cmp
loop
jmp
xor
sbb
icebp
mov
clc
dec
xor
shll
scas
and
fldenv
jbe
daa
in
or
xchg
jp
mov
idivb
leave
andb
or
out
jns
push
add
scas
shlb
mov
out
mov
in
lock
cltd
lret
imul
mov
jp
adc
daa
aas
jp
cmp
sbb
shll
sbb
jns
repnz
inc
ss
mov
cld
insb
sub
clc
push
sub
mov
mov
jno
iret
push
scas
insl
mov
jle
xchg
push
inc
cmp
mov
cmp
aam
movsb
shrl
lret
xchg
push
popa
cld
lret
pop
sbb
push
pop
push
mov
and
leave
dec
lds
dec
ja
dec
add
push
and
jb
aaa
stos
adc
xchg
lret
popa
inc
sti
popa
cwtl
out
mov
aaa
jecxz
or
pushw
add
testb
notl
sub
sbb
cli
mul
cmp
push
add
decl
stos
fs
testb
pushf
fcmovu
dec
sarl
out
adc
mov
adc
add
daa
pusha
ljmp
data16
pop
adc
xchg
lods
outsb
cmp
dec
jg
xchg
test
stc
pusha
ljmp
es
sti
ss
dec
es
lret
inc
ret
shrl
gs
push
mov
push
xorl
scas
pop
mov
lea
mov
lods
icebp
or
jp
int3
and
lcall
jbe
jmp
lret
loop
sbb
push
cmpl
cli
sbb
fnstsw
sbb
cmp
ret
pop
je
invlpg
clc
lock
sub
pop
repnz
mov
mov
out
and
push
es
mov
xchg
sar
and
daa
loop
jp
test
mov
mov
dec
mov
mov
repnz
push
inc
rcrb
xor
call
cmc
add
or
and
pop
imul
fldcw
pushf
lahf
mov
mov
push
je
adc
addb
jg
xchg
inc
cmp
add
push
adc
fsincos
sub
adc
and
xchg
add
mov
in
ds
cld
ja
dec
cmp
cmp
mov
sar
and
push
jp
mov
outsb
mov
ljmp
aaa
mov
xchg
aaa
jno
and
mov
cmp
js
jg
cmp
jl
pop
lcall
test
loope
test
loopne
adc
fcomip
or
sbb
and
adc
test
shrb
sbb
fisttps
xor
loopne
sub
jbe
daa
scas
add
lea
cwtl
ss
xchg
imul
dec
das
es
mov
pop
xor
aad
cmp
mov
test
adc
pushf
xor
js
inc
pop
ja
dec
pop
or
orb
cmp
or
xchg
fstpl
push
dec
negl
xlat
xchg
mov
adc
enter
jmp
bound
orl
xchg
dec
inc
sbb
cmp
mov
or
rcr
xor
out
addr16
movsl
xchg
mov
lea
test
movsl
or
in
fnsave
lahf
andl
dec
cmp
dec
daa
fs
pop
shll
add
push
les
adc
popa
cmp
push
mov
cmp
add
mov
dec
push
or
push
sar
mov
adc
adcl
xchg
adc
mov
dec
mov
gs
mov
adc
pop
outsl
int3
xchg
sub
insl
inc
divl
jno
dec
hlt
gs
fstps
repz
xchg
std
outsl
iret
ss
int
cli
gs
mov
daa
mov
or
push
cmp
andl
imul
pop
pusha
xchg
test
mov
xor
test
jmp
sahf
iret
pop
dec
arpl
out
pop
cmp
mov
sub
and
movsl
mov
ret
push
or
adc
aaa
ror
andb
cwtl
sub
cld
inc
push
pushl
add
out
mov
in
shr
leave
jae
sbb
xchg
add
loope
sbb
shll
stos
in
out
enter
xchg
mov
in
testl
sar
xchg
and
lods
popf
push
fs
pop
cs
addl
popf
xchg
inc
ss
mov
mov
or
cmp
mov
pop
fnsave
fwait
jbe
loope
mov
imul
test
in
add
add
fisttpl
movsb
stos
shrb
enter
jg
add
movsl
out
negl
icebp
dec
fsts
imul
inc
push
test
and
jae
aas
inc
hlt
cli
cmp
mov
pop
mov
sub
js
dec
mov
push
xchg
or
add
test
fistps
and
stos
cltd
jo
adc
in
nop
cmp
dec
int3
testb
jcxz
mov
xchg
xchg
aad
in
dec
jns
jp
loopne
fstpl
sahf
add
or
scas
inc
mov
fstps
imul
lods
mov
sub
dec
or
scas
dec
mov
stos
and
add
scas
xorl
data16
aad
cmovge
xchg
sub
xor
jp
outsb
adc
mov
pushf
lahf
ss
push
cmc
shrb
or
xchg
pop
fidivrl
insl
enter
dec
imul
test
mov
mov
pop
dec
imul
xchg
dec
push
xchg
insl
mov
test
inc
inc
sti
lret
add
push
xor
inc
andb
loopne
rol
xlat
and
jg
sub
push
jp
imul
divl
imul
call
add
in
jl
test
jnp
ds
push
or
fsubr
shlb
xchg
aam
in
ret
cld
iret
pop
mov
stos
mov
fidivl
and
movsl
subl
mov
ja
aaa
push
fsubl
daa
loopne
xchg
and
mov
inc
xor
gs
pop
pop
cmp
pushaw
inc
mov
mov
es
and
sbb
lods
lret
hlt
iret
jb
add
cmp
pop
xchg
sbb
popf
mov
fcomps
add
mov
je
mov
fcmovu
ret
adc
shl
cs
adc
pop
jae
jmp
mov
addl
lods
clc
sub
push
ret
icebp
mov
iret
cltd
shlb
scas
mov
divl
hlt
xchg
outsb
cmpsb
push
xor
imul
mov
push
pop
cs
xor
aaa
push
in
or
aam
adc
cmp
mov
mov
cmpsb
push
gs
enter
mov
sbbb
hlt
adc
daa
ficoml
in
cmp
jbe
sbb
push
sahf
aam
jb
ja
fbld
out
sti
shll
sub
cwtl
push
scas
imul
pop
push
sub
push
fdivrp
adc
ja
test
xchg
in
cmpl
popf
je
out
cmp
push
mov
xor
push
imul
sub
cmp
mov
mov
popa
sub
mov
inc
sbb
test
cltd
pop
adc
push
leave
pop
xchg
mov
adc
mov
or
xchg
loop
adc
lret
xchg
mov
mov
jo
inc
or
mov
cmp
push
mov
cmp
popf
scas
lcall
mov
shrl
mov
push
jl
insl
stos
ja
popa
insl
jb
jb
mov
outsb
loope
push
and
jae
sub
shrl
ret
test
test
xor
setno
loope
jo
leave
xor
sbb
das
push
or
dec
sub
and
jne
push
mov
enter
jge
and
xor
nop
xchg
lret
dec
cmpsl
pusha
push
cmp
jno
jge
and
icebp
fcoms
test
ucomiss
in
hlt
mov
jnp
and
push
lods
sbb
xchg
mov
push
sysret
fbstp
and
sub
ja
adc
cltd
fildll
mov
push
cmp
jae
and
mov
add
pop
jo
push
dec
in
scas
cs
cmpsl
push
repz
lcall
lret
dec
lahf
int3
mov
subb
mov
and
mov
jb
sub
fwait
mov
mov
leave
mov
fiaddl
lock
push
lods
hlt
mov
mov
xor
clc
xor
imul
lods
call
jg
jmp
sub
fistl
movsb
cmc
fsubrl
arpl
sub
int3
out
xchg
mov
test
xor
fsubr
xchg
fwait
out
pop
jmp
aaa
popf
cli
mov
pop
mov
mov
or
jb
ficoml
push
push
pop
sbb
xlat
mov
loopne
test
mov
jmp
and
dec
add
sbb
push
mov
sarb
fsubrp
fwait
mov
cmpsb
cltd
jo
add
jmp
data16
push
and
sahf
jmp
push
out
cs
test
mov
int
add
test
mov
call
jle
xor
cmp
add
inc
xor
ss
repz
addl
cmp
and
shr
inc
add
cmp
cmpsb
cli
repnz
xlat
lock
push
xchg
in
loope
imul
ds
jecxz
add
cmp
je
adc
cli
xor
mov
cs
dec
or
pop
inc
andl
dec
leave
fdivl
loopne
push
add
mov
scas
inc
shlb
cmpsb
mov
out
subb
push
adc
jmp
xor
push
adc
stos
fstpl
xor
call
cld
into
add
fcomps
adc
cmp
xchg
fsubr
clc
push
pusha
sub
js
sbb
addl
shl
sbb
jbe
sub
or
fists
inc
mul
mov
daa
test
xor
ja
dec
and
ja
out
jge
shlb
ror
stos
mov
scas
adc
rcrl
xchg
popa
inc
gs
push
jp
dec
and
xchg
jnp
adc
pop
sbb
sahf
rcr
shrl
sub
scas
xor
cmp
mov
jns
es
xor
lea
pop
push
mov
rcrl
xorb
cmp
lret
push
stos
jecxz
dec
imul
ss
pop
xor
pextrw
cmp
jge
enter
inc
xor
js
lds
jbe
mov
cmp
mov
adc
adc
or
notl
xor
movsl
testb
insb
dec
movsl
rolb
mov
and
lret
cmpsb
addb
rclb
pop
out
inc
bound
fs
aad
clc
sub
inc
sbb
adcl
mov
sub
les
ss
aas
xchg
xchg
push
add
out
sub
ret
scas
in
mov
int
and
pop
fildl
pop
xor
pushf
mov
mov
or
cltd
into
cs
mov
ret
rcll
mov
mov
inc
sub
xor
clc
sub
mov
inc
sbb
cmc
add
pop
aad
out
out
adc
outsl
mov
xor
hlt
scas
int3
lcall
cmpsb
lea
inc
testb
inc
sti
ljmp
xchg
mov
push
in
xor
jg
addr16
mov
dec
rorl
inc
rolb
adc
insl
lods
or
call
pop
scas
rcl
andl
dec
pop
cmc
sub
sub
adc
add
test
popl
dec
or
jne
dec
pop
xorl
and
cltd
leave
adc
jmp
hlt
sub
lcall
sbb
ret
mov
add
inc
adc
push
icebp
scas
sub
test
push
call
xchg
pop
sub
inc
mov
movsl
lock
idivb
ror
subl
popf
leave
popl
sbb
das
sub
push
add
sti
out
jl
mov
or
jno
loope
fbld
mov
adcl
insl
jp
cs
adc
and
xor
clc
int3
hlt
mov
mov
cli
gs
pop
pop
jns
inc
sti
sahf
dec
add
or
jns
push
fsubrs
cmpsb
xor
pop
loope
scas
xor
iret
cwtl
lahf
int3
jge
mov
stc
lods
add
cs
lds
fstpl
aas
jg
adc
push
lds
add
scas
pop
adc
call
and
rol
dec
mov
cmc
add
dec
lret
mov
fs
mov
cltd
push
sbb
cld
jmp
in
aas
int
or
rorl
push
xchg
mov
jnp
or
or
xor
loopne
jmp
aam
outsl
push
cmp
ds
lcall
imul
ds
push
and
inc
imul
push
aad
or
sbb
pop
jns
sub
xchg
rcrl
lahf
push
lock
flds
loope
test
mov
repnz
cmp
mov
jmp
stc
roll
dec
cmpsb
sbb
xchg
push
push
cmp
cmp
push
cmp
add
push
push
push
dec
ja
and
sbb
and
inc
adc
mov
dec
xchg
adc
cs
test
repz
ret
rcr
scas
addr16
mov
ja
jle
test
ror
mov
aad
or
push
nop
js
jecxz
leave
loopne
or
push
jge
mov
cli
ret
andl
sub
pop
lcall
notl
stos
int3
push
outsb
mov
movsl
test
and
bound
lock
xchg
lock
aaa
push
dec
stos
out
sub
int3
jge
push
mov
jb
jo
jo
sub
push
xchg
ljmp
cmpsb
insb
pushf
mov
ds
xchg
jbe
pop
lretw
inc
loop
insb
mov
jb
jo
sub
test
jp
mov
pop
xor
aam
cmpl
sub
sbb
pop
scas
cmp
mov
sahf
outsb
and
out
sbb
xor
sbb
pushf
sbb
faddl
pop
shll
pop
inc
pop
add
push
stos
inc
mov
pop
out
movsl
cld
inc
jmp
jmp
cwtl
fsubs
je
lods
int3
rcll
pop
and
insb
call
shlb
ja
shlb
jb
outsb
add
je
fmull
test
in
push
cmp
mov
xchg
gs
xchg
das
orb
jb
addl
lret
fcompl
cmp
out
jne
xchg
add
xchg
int3
xor
push
aam
out
gs
jno
aam
adc
std
orl
in
mov
push
inc
outsb
adc
push
lods
sub
push
leave
lahf
jecxz
les
mov
xchg
aam
mov
fwait
dec
push
insb
int3
cltd
in
xchg
xchg
sti
xor
ffree
jmp
push
mov
or
push
stos
repnz
pop
fimuls
ret
aaa
jl
cmp
arpl
cmpl
inc
inc
sbb
pop
inc
outsl
jmp
std
in
cmp
pop
or
jmp
fistpl
sbb
xchg
aaa
in
jb
jg
mov
adc
inc
push
daa
js
outsl
mov
and
mov
sbb
cli
lret
dec
bound
jg
mov
sbb
or
shlb
mulb
repz
inc
dec
sbb
data16
roll
cld
nop
push
mov
xchg
inc
popf
jns
sub
pop
sbb
push
pop
insl
addr16
cmpl
lcall
movsl
xlat
mov
adc
fists
into
adc
pop
je
push
lds
lret
outsl
push
into
cmc
inc
mov
lret
mov
pop
jne
test
sub
sub
inc
in
jns
shrb
stos
stos
add
enter
dec
cmp
popf
std
pop
sbb
pop
es
call
lret
out
push
imul
and
in
adc
jle
push
jge
pop
lods
imull
and
inc
scas
in
push
and
icebp
ret
movsb
inc
mov
shlb
push
cli
nop
stos
xor
jne
repz
addr16
repnz
sbb
gs
adc
and
cmp
jo
pop
loopne
mov
ljmp
adc
mov
repz
cmp
repnz
lock
in
fisubl
clc
xchg
jecxz
sub
aam
repz
cmp
pop
fistps
idivl
jecxz
fdivrl
mov
inc
pop
or
or
push
sbb
iret
scas
push
dec
jp
mov
hlt
jecxz
test
pop
int
adc
gs
movl
cmc
loopne
push
push
pop
pop
outsl
loopne
sbb
aad
leave
subb
insb
push
xor
mov
aad
mov
dec
insb
pushf
xor
xchg
shl
sbb
mov
mov
iret
push
xchg
sti
cmp
cmp
pop
push
cld
and
add
mov
arpl
int
jns
push
and
xchg
add
adc
mov
pop
sti
ds
movsl
pop
mov
adc
das
adc
inc
mov
iret
scas
sub
testl
stos
jge
ret
mov
out
xorl
jo
jne
aam
fwait
test
mov
lcall
jno
out
mov
dec
xor
inc
aam
xor
movsb
sbb
or
jmp
inc
outsl
out
cmp
jp
outsl
movsl
dec
jne
pop
add
push
les
mov
mov
insl
mov
inc
or
push
or
mov
pop
div
cmp
pop
mov
jae
lock
seto
xor
in
xchg
cmpsb
stos
lea
movb
sbb
cli
into
xchg
mov
call
test
out
inc
lret
movups
sub
lds
xor
ficoml
xlat
jnp
ja
dec
sub
in
mov
xchg
push
adc
pop
mov
sbbl
inc
or
dec
test
cld
inc
push
ds
jno
fstps
and
sub
jle
mov
jbe
and
insb
push
out
sti
in
jle
xor
mov
and
pop
push
add
mov
inc
out
imul
enter
jb
and
fst
fcompl
mov
sbb
xchg
insb
jecxz
or
mov
mov
movsb
lea
lea
xor
sbb
rorb
push
mov
test
loop
mov
fisttpll
aad
outsl
and
lahf
jge
fdivrl
lea
jae
add
gs
movsb
xor
and
out
dec
leave
je
dec
ja
xor
xchg
repnz
dec
jg
jp
in
fisubrl
dec
mov
dec
popf
in
fst
lock
cmpsb
or
jbe
test
bound
mov
test
jne
pop
dec
test
insl
mov
or
pop
sub
pop
adc
popf
sahf
push
lods
xchg
pop
loopne
lods
test
mov
jecxz
cld
leave
sahf
sub
and
pusha
lods
std
out
rclb
outsl
push
sub
iret
imul
mov
jbe
imul
es
into
fdivr
cmc
in
jmp
bt
dec
mov
push
std
ret
ret
insb
daa
xchg
push
xchg
xor
or
sbb
scas
mov
inc
in
jbe
sub
mov
arpl
mov
imul
adc
add
sub
add
in
xchg
aad
mov
cmp
and
push
sbb
in
mov
loop
fstpt
and
push
jne
enter
pop
dec
pop
add
xchg
mov
or
dec
and
push
or
mov
dec
and
cmp
sahf
and
cwtl
test
lahf
popa
fcmovnb
add
adc
pop
add
int
stos
loope
mov
push
cld
fmul
sbb
popa
or
fimuls
sub
sbb
ss
push
adc
popf
push
add
imul
fldt
inc
push
cli
add
jmp
adc
lahf
cmc
cld
mov
les
fcomps
rorl
inc
mull
xchg
cwtl
and
enter
loope
sbb
in
and
imul
int
rorb
aam
jmp
mov
dec
mov
add
xor
pusha
out
subb
jmp
aam
mov
lods
arpl
ret
js
rorl
repnz
xor
incl
arpl
ss
inc
inc
and
shrb
fcompl
sub
dec
gs
xchg
cmp
push
dec
cmp
sarb
inc
push
loopne
test
mov
movsl
push
scas
push
ljmp
out
notb
out
push
ja
mov
cli
mov
repnz
sbb
out
dec
jg
call
ficoms
insl
inc
jg
test
sbb
mov
shr
sbb
divl
add
mov
inc
inc
push
jmp
sbb
sub
std
mov
js
sbb
jnp
or
inc
jae
js
mov
aad
shlb
inc
test
aaa
sub
xor
cmp
mov
pusha
mov
mov
cmp
fs
pushf
outsl
dec
and
push
cmp
sbb
mov
sbb
pop
xor
incb
cmpsb
dec
daa
sub
cmp
jbe
mov
pop
aaa
push
rcrb
shll
push
sub
test
xchg
pop
and
xchg
sbb
call
rol
lock
stos
xor
bound
pop
lock
clc
cmp
stc
xchg
mov
repz
rorb
or
int
add
xchg
xor
or
test
mov
fstps
add
add
xor
mov
or
lcall
pop
sbb
sub
shll
imul
dec
mov
xor
mov
icebp
pop
add
arpl
mov
jno
aas
jg
cmpsb
jns
loope,pn
xor
loopne
sub
mov
cmpsl
sub
xchg
sbb
pop
hlt
out
div
sbb
fs
dec
test
sti
adc
andl
xor
add
sarl
sbb
rcrl
fildl
or
sub
ljmp
je
add
adc
fwait
rcr
xor
iret
xchg
cmpsb
add
inc
fcompl
push
test
xlat
and
lods
into
sub
cltd
xlat
jl
sub
fwait
mov
insl
cmp
movsb
sub
pop
pslld
pusha
jg
pop
mov
fisttpll
add
mov
hlt
jb
in
jecxz
jmp
loopne
hlt
pop
aas
jge
in
adc
sti
xchg
pop
fldcw
mov
inc
imul
push
jp
pcmpgtw
or
cmpsl
pop
cwtl
cli
sub
mov
adc
cmpsl
test
sbb
inc
outsb
push
cmp
in
pusha
jp
rcl
pop
aas
and
mov
lret
jo
sbb
pop
xchg
adc
in
inc
icebp
jg
mov
jge
inc
in
pushf
add
es
mov
push
cmp
bound
sbb
pop
scas
movsl
daa
cmp
mov
lcall
imul
inc
sub
in
andl
jle
mov
xchg
cli
push
hlt
or
xor
pop
test
lock
jno
in
popa
push
mov
icebp
add
jp
add
pop
cmp
or
xor
and
fwait
jae
and
jns
lock
daa
rol
pop
movsl
out
add
jae
outsl
push
push
fstps
lret
cmp
lret
cs
imul
jo
pushf
lea
or
xchg
push
fs
iret
and
cwtl
xor
push
fnstsw
orb
pop
gs
inc
andb
pusha
andb
cmp
jne
aad
lcall
sbb
jmp
aad
and
sub
into
hlt
add
test
stos
or
xchg
repz
mov
lea
jecxz
xchg
inc
add
xchg
sbb
pop
jge
movsl
in
push
adc
and
sahf
xchg
ret
aas
outsb
sti
push
stc
subl
dec
sti
pop
mov
cmp
dec
test
clc
inc
jp
in
bts
cltd
jp
addr16
mov
jnp
arpl
pop
scas
lea
pop
push
loope
std
insb
cwtl
adc
sbb
mov
jle
push
fiaddl
std
jecxz
jnp
inc
jnp
add
test
jo
pop
mov
out
lods
or
je
xor
adc
dec
xchg
scas
lret
add
mov
stos
cmp
cmp
dec
xchg
aam
cs
fcoml
xor
adc
mov
cmp
mov
lds
add
adc
or
mov
add
rolb
mov
cmc
xor
ficoms
in
mov
mov
repz
hlt
cmp
adc
fsubrs
xchg
icebp
mov
repnz
movsb
outsb
arpl
mov
xor
mov
cmp
cmp
ret
adc
push
leave
mov
fcoms
xchg
adc
push
mov
adc
jge
mov
out
aad
xchg
jmp
les
sub
add
jp
mov
ret
push
addr16
xor
inc
mov
or
fsts
mov
fisttpl
xchg
dec
adc
lcall
mov
sub
inc
mov
xchg
imul
mov
pop
lods
loopne
lahf
xchg
jmp
add
xchg
jl
xor
jle
push
sbb
sub
sti
je
fwait
push
cmpsl
fisubl
xor
sub
pop
cli
xchg
mov
fcoml
mov
xchg
sub
fisttpl
sbb
mov
mov
aaa
jg
fnstsw
pop
insl
inc
iret
sti
mov
mov
es
sti
xor
out
aam
enter
push
xor
dec
or
xchg
sti
pushf
scas
sti
mov
nop
es
fcmovne
mov
insb
sbb
dec
jle
les
stos
enter
push
ds
scas
inc
cli
bound
or
pop
mov
fcoml
sub
loop
rcl
aad
xchg
xor
adc
dec
add
addl
push
add
jne
dec
subl
sti
or
cmp
dec
loope
jp
pop
cld
and
inc
mov
ret
sahf
push
mov
dec
rcl
pop
fucomip
ja
faddl
dec
pop
sub
insb
loopne
push
loop
xchg
in
mov
imul
xor
scas
iret
lahf
adc
jl
cld
aas
cmp
into
outsl
or
mov
rolb
or
loop
outsl
fucom
xchg
jnp
dec
sti
lods
push
ds
xchg
dec
mov
add
out
mov
ret
push
adc
and
sub
in
mov
adc
inc
cmc
sbb
or
mov
popf
shl
aad
sbb
jge
ds
testl
and
imul
mov
cmp
jae
mov
out
push
jb
xchg
call
lahf
fwait
inc
pusha
fldenv
sbb
dec
dec
and
test
adc
lods
xor
jae
out
loopne
cli
das
mov
sub
xlat
ja
mov
xchg
inc
push
lcall
dec
jae
sbbl
mov
loop
xor
pop
inc
shll
addr16
pop
mov
cmp
jecxz
pop
xor
dec
rclb
sbb
inc
and
or
mov
enter
lcall
mov
outsl
and
sub
pop
addl
aaa
or
test
pop
pop
or
bound
mov
and
push
js
std
adc
lock
filds
mov
add
mov
inc
mov
rolb
adc
jno
xor
xor
mov
incb
out
mov
cltd
sti
pop
adc
jmp
mov
sbb
xchg
mov
pop
pop
or
lds
sti
add
les
pushf
inc
movsb
xlat
xor
js
clc
or
push
lock
adc
movsl
push
pushf
fcomip
or
sub
add
xchg
iret
mov
lea
aam
push
xlat
outsb
fwait
push
pop
fnsave
pop
mov
or
fdivs
push
inc
cltd
cmpsl
adc
and
stos
mul
or
mov
add
sahf
jp
mov
rcl
jecxz
push
pop
shll
push
pusha
bnd
stc
stc
and
sbb
js
jge
adc
or
pop
lahf
cmc
and
sbb
fs
shl
andl
mov
movl
movsb
push
xor
andl
dec
adc
ds
sbbb
xchg
enter
cltd
int
clc
shl
mov
test
pop
int
fidivl
xchg
xchg
add
les
push
sub
pop
gs
xor
insl
rcl
mov
popa
orl
jo
ficompl
leave
cmp
sub
pop
clc
sbb
cmpsl
pusha
in
inc
xor
test
in
inc
push
mov
pop
sub
mov
pop
stc
add
int
xchg
movsl
push
addl
fldt
lea
mov
push
mov
pop
outsl
cwtl
in
je
in
xchg
mov
imull
inc
int
test
xchg
mov
rorb
fsubrl
pop
call
jecxz
ds
add
sarb
daa
clc
push
adc
push
and
sbb
sub
mov
xchg
dec
in
push
gs
cltd
popa
mov
sbb
mov
imul
loope
int
ret
xchg
out
mov
jb
or
rorb
push
xor
sbb
mov
cmp
and
es
in
add
cmp
sqrtps
sub
pcmpgtw
xchg
mov
bnd
push
xlat
sbb
xlat
daa
xchg
icebp
xchg
shrl
loope
in
clc
cld
push
dec
or
add
cmp
push
mov
push
xchg
xor
fistl
xor
adc
imul
out
stos
loopne
movsb
cmp
test
fsubs
movsl
jbe
inc
cli
cmp
push
aaa
mov
data16
out
pop
jae
mov
cwtl
xchg
pop
jmp
push
mov
arpl
mov
sub
push
es
dec
mov
movsl
jb
lahf
cmp
push
add
cmp
sbb
movsl
dec
cltd
loopne
mov
dec
cmp
adc
in
dec
xchg
fstpt
cmp
and
or
std
pusha
ljmp
cmp
cmp
dec
popf
cli
push
pusha
push
ret
leave
cs
arpl
sub
outsb
pop
xor
aad
stos
aaa
fmuls
inc
push
mov
sbb
pop
jp
xor
lock
aam
add
imul
cmp
loopne
andb
popf
cmpsb
popf
xor
xchg
movsb
fwait
inc
out
lret
cwtd
and
pop
mov
leave
jbe
mov
cld
xor
jle
ret
inc
mov
jge
sahf
jg
outsb
std
pop
clc
mov
std
popa
sahf
pop
call
gs
std
cmp
pop
arpl
jo
into
cwtl
lock
popa
add
push
hlt
mov
mov
add
repz
aas
add
imul
add
xchg
push
filds
sarl
lahf
dec
dec
pusha
aas
and
push
xor
stc
out
aam
push
in
xlat
dec
movsl
ror
hlt
call
cmp
pop
rorb
sbb
push
cmpsl
je
lods
pop
jne
outsl
stos
sbb
out
xor
stc
sbb
mov
jns
xchg
push
inc
shrb
xor
in
pushf
sub
mov
insb
sahf
sub
fiadds
adc
lahf
mov
or
cwtl
int
mov
les
push
mov
inc
fst
push
sbb
cltd
mov
or
or
xor
outsb
push
nop
and
je
mov
sub
or
cs
or
pop
icebp
imul
or
cmp
jns
int
xchg
mov
cmpsb
mov
fdecstp
stc
cmp
add
js
scas
and
into
lods
repnz
mov
adc
sahf
xor
out
lret
jns
lds
sbb
xor
push
rorb
xor
insb
inc
lods
xchg
sbb
mov
fdiv
dec
pop
les
xor
mov
lcall
daa
push
mov
or
jle
or
aaa
lret
inc
push
movsb
pushf
stc
out
pop
test
dec
adc
mov
mov
les
jmp
aaa
movsb
and
dec
inc
fwait
cmpl
mov
fs
cmc
ss
sbb
out
dec
pop
dec
into
add
fcmovnb
xor
xor
addl
aad
mov
loope
out
fcoms
mov
idiv
xor
push
aaa
fs
mov
std
fistps
orl
aaa
sub
add
xor
scas
shlb
cmp
jo
scas
pushf
sub
dec
add
mov
or
mov
mov
mov
xchg
daa
dec
out
pop
lds
add
adc
out
jnp
cmc
mov
int
cmp
test
inc
jb
dec
xchg
mov
xchg
mov
jnp
or
aaa
mov
mov
mov
or
adc
push
xchg
pop
or
or
and
dec
daa
sbb
lcall
lahf
sbb
jg
and
es
repz
aas
jbe
inc
adc
aaa
loope
sbb
mov
rcl
pop
cvttps2pi
pop
daa
mov
xor
sahf
mov
loopne,pn
inc
sbb
enter
pop
je
loopne
in
mov
test
clc
mov
pop
lds
and
fwait
mov
pop
push
xchg
ljmp
aas
or
mov
dec
cmc
inc
dec
push
mov
loope
inc
aam
pop
hlt
fiaddl
fistpll
add
jnp
cmc
lcall
or
aaa
mov
fsub
enter
xor
pusha
lea
pop
fs
sarl
jg
pop
mov
loopne
and
pop
or
sub
sub
xchg
subl
pop
and
iret
sbb
mov
test
mov
insl
xchg
jbe
and
subl
ds
cld
sub
add
inc
lahf
dec
mov
fnstsw
out
test
shl
hlt
jmp
aam
sbb
adc
fsubp
cwtl
add
stc
das
jg
cmc
imul
mov
sarb
or
and
or
xchg
mov
aas
push
dec
mov
jne
movsl
mov
test
cli
dec
adcb
and
adc
mov
jbe
and
or
dec
jbe
push
sub
data16
sbb
mov
mov
xor
std
enter
xchg
mov
push
push
dec
push
jmp
mov
rorl
adc
jb
clc
pop
mov
out
push
push
sub
push
or
ret
imul
ljmp
inc
fldl
mov
and
jge
push
mov
inc
fdivs
cmp
mov
mov
fcomip
push
add
lret
jge
cmp
loope
divb
adc
push
enter
jp
mov
sbbb
mov
jo
cltd
rcrl
inc
jecxz
mov
xor
out
lock
sbb
mov
sbb
adc
call
adc
inc
pushf
shrl
popf
or
stos
xchg
das
pop
out
pop
adc
and
dec
pop
inc
xor
out
pop
inc
cmpsl
outsb
adc
daa
mov
xchg
add
or
dec
sbb
mov
das
xchg
sub
mov
dec
popf
mov
add
outsb
mov
xchg
gs
cmp
jg
inc
cwtl
repz
test
jle
xor
aam
cmpsb
stos
negb
or
stc
clc
test
mov
sbb
in
xchg
mov
loope
dec
je
cmp
cmpl
inc
loopne
aam
inc
sub
leave
js
adc
or
push
out
push
or
aas
mov
mov
aad
mov
jno
mov
mov
inc
mov
scas
leave
inc
testl
lahf
andl
push
jne
pop
xor
inc
mov
div
or
pop
push
add
xor
out
and
sbbb
js
dec
jnp
push
inc
lock
pop
sub
gs
or
in
dec
add
stos
xor
sti
pushf
scas
rcrb
insl
ss
inc
mov
push
push
or
sbb
popa
mov
in
repnz
fwait
icebp
pushf
jle
and
mov
dec
sbb
or
out
sub
jle
mov
push
mov
imul
mov
jl
mov
out
mov
pop
mov
fcomps
jmp
cli
sbb
xchg
lods
xor
push
jbe
rcrl
adc
fwait
nop
fdivrl
add
int
in
test
jmp
add
xchg
dec
loopne
inc
add
out
out
sahf
mov
sub
mov
mov
add
inc
inc
insl
push
inc
sbb
cmc
popw
addb
mov
cmc
jbe
cmp
sbb
mov
pop
popf
pop
mov
lods
daa
lds
imul
inc
shll
push
sub
test
push
out
dec
inc
std
ret
cmp
outsl
lret
jo
in
fs
inc
sbb
adc
repz
or
jns
xor
sti
lock
lea
out
sbb
sub
dec
pop
xchg
mov
mov
and
test
in
mov
lcall
xchg
jmp
xlat
or
adc
and
push
cmp
fs
jle
cmpb
jg
fwait
adc
cmpsl
inc
dec
xchg
sub
jl
mov
fmull
adc
mov
adc
psrld
mov
cld
fisttpl
sbb
in
fwait
ja
cmp
and
lods
fcoml
dec
jo
and
and
xor
adc
test
mov
out
push
add
mov
pushf
cltd
dec
mov
xchg
fcmovnbe
ja
fisubs
stc
and
addb
popa
dec
cmp
adc
pusha
test
icebp
xchg
jecxz
dec
pop
cmpsb
xchg
adc
mov
popf
addr16
hlt
xchg
mov
jg
sbb
cltd
sbb
push
test
xchg
mov
mov
aad
mov
out
mov
aad
sub
push
inc
inc
movb
pop
add
mov
and
mov
arpl
xor
mov
push
out
mov
daa
cmpsl
and
push
jecxz
push
jmp
cmpl
sbb
shl
ljmp
scas
mov
aas
mov
or
leave
lock
sbb
add
bound
nop
add
aas
in
stos
xor
les
cmpsl
or
and
xchg
arpl
ss
mov
iret
mov
pop
jb
arpl
hlt
dec
pop
icebp
clc
push
cmpsb
sub
clc
iret
mov
jg
mov
imul
mov
mov
insb
int
add
dec
popf
push
pop
inc
fcmovne
call
icebp
pop
push
in
or
jae,pt
jg
push
push
cmp
addr16
inc
flds
outsl
mov
xlat
mov
mov
jmp
fucomip
data16
pop
cmp
mov
or
ret
xor
nop
push
rcll
pushf
and
jl
imul
dec
daa
enter
xlat
pusha
subb
shrb
mov
fstpt
test
sub
ret
fistps
xchg
out
or
outsb
dec
dec
lods
je
jmp
push
jno
outsl
cwtl
lret
andl
and
fldenv
loop
or
adc
loopne
mov
test
fildll
sub
lods
cltd
lcall
or
divl
mov
movsl
fistpl
fwait
mov
xor
dec
xchg
xchg
fisttpl
adcb
cwtl
jecxz
sbb
ja
push
adc
cmp
mov
lods
stos
and
pushf
mov
hlt
jl
jmp
dec
pop
loope
pop
loopne
add
jne
gs
std
gs
dec
dec
adc
jo
sbb
jae
mov
scas
adc
and
outsl
jecxz
mov
call
dec
pop
jns
hlt
fwait
in
dec
xchg
pop
inc
fdivs
push
add
je
cmp
pop
and
pop
hlt
ret
rclb
mov
ja
add
adc
or
mov
inc
int
idiv
or
inc
ljmp
int
push
fistpl
shl
xor
adc
daa
lcall
fsubrl
dec
or
lea
dec
cmp
mov
loope
cli
pusha
fwait
sub
into
leave
add
ljmp
xchg
push
mov
pop
add
insl
outsl
sbbb
jns
mov
adc
mov
lret
stos
mov
out
rcr
jecxz
adc
push
jo
mov
adc
mov
dec
divb
cld
xor
fildl
and
dec
xchg
imull
mov
mov
sub
clc
xor
rorb
inc
out
mov
cli
dec
cwtl
pop
cmp
add
push
mov
sub
inc
dec
sbb
pop
leave
fnsave
mov
sub
and
bound
std
movsl
roll
data16
mov
jb
cmp
addr16
shr
popa
gs
mov
hlt
mov
mov
xchg
dec
or
adc
jle
adc
adc
and
mov
push
sarb
imul
aas
push
ds
jno,pn
jbe
stc
mov
daa
xor
aad
xor
sbb
dec
xlat
int3
ljmp
inc
lea
and
mov
push
out
ja
mov
xor
loopne
dec
mov
and
jl
aam
adc
push
outsl
ljmp
xor
sbb
mov
in
pop
pop
xchg
jbe
xchg
mov
xchg
jmp
stos
adc
push
sarb
ror
xchg
arpl
je
push
cmp
push
cmpsb
adc
out
pop
and
pop
pusha
mov
je
adc
add
enter
push
adc
mov
test
jp
inc
sbb
xchg
pusha
cli
jb
fs
inc
arpl
dec
inc
ja
cmp
xchg
add
stos
stos
dec
dec
call
push
dec
pop
push
mov
cmp
outsl
mov
cmp
dec
call
xchg
in
imul
dec
in
das
fsubl
mov
mov
sub
imulb
mov
aad
sbb
in
je
jo
test
repnz
mov
bound
xor
and
loopne
rcrl
lock
mov
addr16
pop
loope
out
outsb
mov
jae
gs
push
es
pop
sub
jno
or
sbb
jl
in
mov
arpl
aam
mov
sbb
ret
les
cmp
cli
mov
aas
adc
dec
cmp
pop
push
ss
out
gs
ficompl
jge
dec
xchg
ret
mov
xchg
dec
aad
loope
xchg
adc
mov
lret
mov
xchg
fsubs
xor
dec
arpl
fisubs
sub
jp
fadds
pop
cmp
xor
cmp
mov
mov
imul
test
jae
icebp
lock
xchg
cmp
sub
xchg
inc
add
icebp
push
cmp
rorb
pop
jae
ljmp
ds
mov
mov
dec
inc
cmp
add
cmpb
mov
popf
xor
insl
pop
mov
lods
fcmovnbe
sbb
pop
push
rcl
inc
mov
jns
pushf
push
lahf
add
out
mov
dec
or
loopne
repnz
push
aad
mov
cwtl
pushf
mov
gs
mov
nop
push
faddl
ret
scas
fwait
push
inc
mov
outsb
mov
add
mov
shrb
clc
adc
sahf
les
xor
jns
xchg
jnp
out
push
add
stos
fbld
cwtl
lahf
inc
test
xchg
movl
out
addr16
ljmp
rol
xor
lret
sahf
idivl
ret
les
loop
mov
sti
dec
adc
scas
cld
add
jge
cld
jge
push
mov
cld
inc
roll
scas
cld
cmp
pop
incb
add
iret
sbb
jbe
jbe
test
idivl
pushf
jl
in
shlb
push
jae
bound
cmp
dec
scas
rcrl
inc
adc
xchg
aas
add
adc
sahf
ja
mov
mov
push
mov
mov
repz
enter
dec
xor
loop
lds
xor
dec
jno
cs
imul
pop
cld
dec
inc
repnz
xchg
das
mov
in
fisubs
xchg
movsb
xor
mov
pop
pop
jle
ret
xlat
push
lahf
gs
push
mov
sub
adc
jmp
mov
push
and
mov
xchg
loopne
and
je
jbe
push
int3
mov
sub
mov
aad
mov
jns
cmp
imul
je
lahf
mov
sbb
add
fucomi
push
int3
jp
les
push
fs
or
movsb
das
je
iret
dec
mov
sub
ror
mov
in
repz
subl
insl
or
mov
scas
dec
enter
in
inc
repz
add
clc
add
cmpsl
push
arpl
cltd
or
in
fsub
push
add
push
in
jmp
inc
lret
add
add
sbbl
test
jnp
mov
mov
dec
cs
hlt
xchg
and
lahf
out
rcl
mov
mov
nop
sub
adc
cltd
or
cmpsb
and
rolb
add
leave
dec
xor
xchg
or
jae
cmp
out
addl
mov
jns
pop
push
fiaddl
ja
xchg
lock
ficomps
fnstenv
mov
adc
xor
sbb
sbb
xor
or
pop
push
xor
cld
imul
shrl
aaa
xchg
pop
sbb
ret
push
into
or
xchg
or
ds
stos
les
inc
adc
mov
loope
scas
cmc
cld
inc
in
ret
cmpb
fxch
mov
adc
jmp
into
add
aam
adc
das
fidivl
out
fadds
cmp
pop
pop
lds
pop
push
sub
pop
jae
movsb
mov
cmp
mov
mov
and
and
jns
mov
sbb
mov
mov
xor
cmpsl
iret
es
mov
in
xor
ja
ret
push
into
in
pop
jbe
ret
mov
mov
inc
sbb
jno
les
inc
jge
test
daa
jns
dec
push
xor
adcl
pop
inc
popf
pusha
gs
es
outsl
cmp
inc
outsb
adc
xor
fsubl
xchg
ret
mov
jae
and
movsl
jmp
or
iret
stos
jle
movsl
push
and
add
adcl
sbb
mov
mov
mov
ja
add
insb
sbb
push
mov
pop
dec
xchg
out
sbb
add
xor
aam
test
ret
aaa
dec
xchg
hlt
lods
push
lods
rol
pop
lret
xor
lods
aas
test
sbb
mov
loopne
lods
div
pop
cltd
lret
cltd
push
cmp
xor
hlt
push
mov
inc
or
lret
js
lds
mov
mov
sub
jl
inc
data16
int
mov
mov
jno
fistpl
jg
pushf
push
mov
daa
lret
cmp
xchg
mov
in
xlat
xchg
or
cmp
xchg
mov
and
sub
inc
jmp
mov
insl
adc
outsb
pop
imul
lcall
prefetch
or
nop
cmp
rorb
and
push
leave
add
lret
or
adc
dec
enter
lahf
lret
cmpsl
out
add
or
mov
aas
jns
shll
lods
xchg
add
push
movsb
and
mov
push
in
jae
mov
xor
scas
inc
loope
mov
aas
xlat
ss
sahf
ss
aas
or
sub
mov
mov
test
xor
sub
sti
jns
pop
xchg
mov
adcb
jecxz
mov
sub
mov
jae
fsubs
mov
dec
scas
sarb
inc
xor
movsb
scas
mov
test
iret
repnz
repnz
fnsave
adc
lock
cmp
xchg
add
and
jae
movsb
aas
jge
or
pop
and
ds
fistl
insl
jmp
jno
sahf
push
xchg
inc
loopne
dec
dec
sti
adc
cmpsb
imul
cli
xor
sbb
in
mov
sub
lea
insb
outsl
cltd
sub
mov
cmp
dec
lahf
add
pop
pusha
mov
outsl
mov
mov
mov
loopne
mov
jg
mov
xchg
mov
outsl
iret
xchg
sub
repnz
mov
add
inc
rcrb
inc
xchg
mov
add
sbb
mov
push
stos
or
push
fbld
das
in
xlat
xor
into
orb
ss
ja
and
jle
adc
popf
push
xchg
mov
call
into
cmp
movsb
pop
int
add
xchg
xlat
xchg
cmpb
das
xchg
loop
xor
push
rorb
pop
test
add
in
es
lret
ret
popa
mov
cmp
or
shrl
add
subl
cltd
loope
push
lods
div
jb
push
or
cltd
mov
or
sbb
adc
loop
mov
outsb
and
out
mov
adc
mov
cmp
add
hlt
lds
pop
pop
xchg
pop
in
cmp
iret
mov
push
arpl
mov
pop
lods
fsub
mov
daa
int3
scas
outsl
or
dec
sbb
dec
repnz
fbstp
adc
jbe
push
pop
cmp
rolb
jle
mov
add
xlat
lahf
cmpsb
add
jmp
decb
ds
and
jl
xor
inc
dec
push
aam
mov
add
xchg
adc
into
inc
mov
inc
pushf
mov
aas
pop
sahf
xchg
adc
xor
lods
and
icebp
mov
int
cmp
lea
xor
push
mov
cmc
pop
jo
test
imul
dec
mov
push
or
pushf
mov
loopne
cmp
sub
jle
inc
mov
fcomps
xor
pop
mov
inc
cs
int3
ficomps
sbb
ds
paddb
inc
sub
lcall
or
and
or
out
rcr
sbb
push
pop
lods
fdivrs
and
lods
mov
push
outsb
mov
adc
jecxz
scas
sbb
push
in
lds
jge
jbe
sbb
and
cmp
adc
adc
push
out
sbb
mov
xor
or
xchg
xchg
in
popa
lahf
test
orl
xor
sti
xchg
jge
mov
adc
dec
enter
nop
sbb
sbb
sub
je
pop
mov
test
or
aas
ss
jno
cmp
std
xchg
inc
adc
push
stos
or
divl
mov
mov
std
stos
lret
nop
jbe
add
ficompl
jnp
into
xchg
movsl
mov
mov
or
lahf
loope
dec
xchg
or
mov
or
fiadds
loope
xor
inc
repz
and
jae
das
enter
mov
xchg
jne
xchg
and
test
movsl
add
push
repz
negl
jl
in
or
push
lret
arpl
mov
or
mov
cmp
mov
jb
test
mov
ret
xchg
push
ljmpw
push
add
jnp
mov
dec
mov
call
insb
test
cmp
xchg
and
loop
out
xlat
jecxz
imul
add
jne
out
and
ds
bound
sub
cmp
add
or
rcrl
rorb
scas
mov
mov
sub
outsb
jbe
mov
pop
sbb
sti
pushf
jge
cltd
lret
loop
add
dec
mov
sub
sub
cmp
lock
sub
jne
inc
adcb
push
aas
insl
cwtl
int
mov
mov
sbbl
jnp
js
shl
xchg
sbb
stc
jae
repz
mov
push
fucomp
mov
dec
les
mov
push
mov
lods
xor
iret
repnz
cltd
aad
sub
lcall
aaa
pop
ljmp
lods
cmpsl
add
cld
mov
mov
and
sbb
loope,pn
mov
andl
fistl
sbb
mov
push
movsl
cs
shrb
add
ret
sub
mov
mov
outsb
jae
lds
fcmovnb
sub
jo
xchg
dec
add
or
and
xchg
pop
cmpsb
subl
or
je
cmp
jmp
lret
sbb
fucomi
faddl
or
push
jbe
jecxz
ds
dec
stc
xchg
adc
mov
mov
orb
and
sub
push
into
jbe
pushw
stc
mov
mov
ret
mov
push
cmpsl
in
xor
enter
loope
mov
fidivrs
addr16
movsb
lcall
and
inc
imul
pushf
xchg
fldenv
rcrl
enter
mov
push
inc
inc
movsl
sbb
jns
dec
les
scas
popf
pop
jnp
jns
push
stc
or
jl
jp
pop
mov
test
mov
or
mov
out
mov
push
add
mov
stos
sbb
fcompl
inc
sbb
lahf
xor
xchg
xor
sub
xchg
jp
les
sub
ds
int
pop
fwait
mov
in
and
push
sbb
loop
rclb
call
mov
testl
push
mov
mov
add
stos
ja
or
pop
aas
mov
sub
popf
or
mov
lret
addr16
rcr
xor
cs
in
cltd
dec
and
loop
push
add
subb
aam
and
mov
xor
pop
push
or
stos
loopne
mov
adc
jle
xor
jge
add
jecxz
pop
or
jecxz
cmp
mov
lea
rol
inc
and
inc
repnz
push
ljmp
xor
sahf
cmp
xchg
pop
adc
cmp
xor
add
and
rcrl
aas
retw
xor
sub
out
push
jmp
pop
loope
xchg
add
insl
cli
pusha
jmp
cmp
lahf
add
or
negl
ss
test
jo
adc
lahf
push
cld
push
lret
cld
sub
pop
mov
popw
lods
or
mov
loope
mov
jnp
int3
dec
out
les
popf
xchg
jp
mov
test
mov
fidivrs
xor
push
adc
push
in
ljmp
insb
mov
mov
test
out
inc
dec
cwtl
sbb
das
jo
push
loopne
out
arpl
cmpsb
fwait
cmp
or
lea
adc
xorl
dec
lods
add
jg
sbb
mov
add
jae
loope
xchg
mov
and
dec
add
shlb
jecxz
dec
dec
pop
push
inc
scas
mov
adc
rclb
pop
sbb
insl
jne
adc
cmpsl
add
outsb
into
aad
dec
xor
mov
orb
ljmp
mov
mov
stc
popa
les
sarb
push
ja
xor
cli
mov
push
push
repnz
pop
dec
pextrw
and
lahf
mov
or
push
fiadds
inc
std
xor
and
mov
hlt
shl
stc
cmpsl
mov
jne
stc
popa
ficomps
rcl
negl
add
out
push
js
push
lods
mov
data16
in
imul
push
ret
xchg
test
or
sahf
cmc
jl
dec
ja
and
sbb
add
sbb
cld
add
test
adc
lahf
pop
pop
mov
scas
ja
stc
outsl
inc
cmc
scas
jbe
nop
cli
pop
subl
les
push
pop
add
mov
movsb
cmp
out
xor
iret
mov
getsec
jb
bound
addl
pop
and
or
insl
pop
cmp
xchg
or
cmp
sahf
pop
push
rorb
lods
roll
dec
sbb
pop
jp
mov
inc
dec
loope
mov
mov
pop
jecxz
pop
cmp
shlb
in
popf
pop
subb
xchg
mov
ds
and
lea
jb
xor
jecxz
jnp
pop
and
ret
fwait
push
xchg
adc
xor
inc
mov
es
fistpl
mov
int3
neg
xchg
clc
jae
aam
and
loop
int
fstps
stos
cmp
sub
test
lods
ljmp
lods
daa
andb
lret
mov
iret
sub
xchg
xchg
mov
dec
pop
rcrb
outsl
xchg
xor
xchg
and
jmp
push
jmp
or
leave
jns
mov
lret
xor
mov
rcrb
fidivrl
dec
push
jo
mov
cmp
das
cmpsb
loop
cld
jno
or
in
pop
sarl
dec
in
add
mov
into
subb
jno
lock
sub
jne
outsb
adc
cwtl
jg
out
iret
jecxz
adcb
jns
jb
push
lret
cmpsl
rcll
lret
loopne
mov
xchg
js
loop
push
lods
mov
mov
push
or
mov
add
lds
or
das
jae
popf
pop
mov
xchg
movl
push
test
pop
fidivs
out
xchg
jb
dec
stc
push
leave
out
dec
or
add
dec
cltd
push
movsl
sub
js
std
fidivrs
pop
mov
push
mov
leave
xor
dec
lea
lahf
push
pushf
repnz
push
jp
jb
xchg
fidivrs
or
sub
push
data16
leave
in
in
xor
dec
ret
out
inc
sbb
jns
jns
loope
mov
xor
xchg
lret
push
and
xchg
mov
pop
sbb
icebp
push
loop
jbe
sub
xchg
aad
pop
pop
cmp
pop
adc
pop
sar
nop
lea
jmp
and
add
xchg
adc
movsl
js
push
cmc
sbb
xchg
push
ss
rolb
push
cld
dec
icebp
je
mov
and
mov
ja
dec
call
insb
lock
sub
lds
cmp
inc
ret
pop
ljmp
xchg
or
dec
popf
in
mov
fcmovnbe
gs
mov
and
lds
popf
mov
sbb
mov
adc
mov
test
pop
ds
xlat
fwait
xor
sub
or
sbb
inc
pop
sub
sub
nop
cmp
push
subb
lods
sub
cmp
sub
jge
and
inc
inc
fisubl
mov
pusha
imul
sarb
jg
cmc
arpl
push
inc
les
out
sbb
loop
mov
cmp
jo
mov
loop
shll
and
sbb
push
add
or
fwait
pop
mov
and
pop
cmp
addr16
jg
fadd
and
clc
xor
mov
sbb
jo
rclb
imul
xchg
inc
mov
out
mov
arpl
ja
add
popa
push
jns
test
shll
aad
js
pop
and
jge
mov
fs
xchg
mov
inc
enter
jno
add
test
ret
pop
xchg
jne
sbb
lds
cmp
imul
and
movsb
jne
insl
js
xor
outsb
sub
cltd
in
stc
xchg
mov
mov
mov
out
mov
std
cwtl
adcl
std
mov
mov
rol
out
xchg
int3
mov
push
enter
xchg
ret
or
and
adc
or
in
xchg
fstpt
jbe
pop
sahf
pop
test
dec
cs
fs
sti
test
test
pusha
stc
xchg
repnz
pop
decl
scas
mov
sbb
or
xchg
push
push
and
jb
xchg
push
jnp
aas
lret
hlt
add
mov
mov
in
sarl
or
frstor
notl
jb
jge
sbb
enter
mov
jne
or
jns
int
mov
ror
jae
mov
std
sti
popa
add
xchg
repnz
xlat
pop
daa
int
cmp
adcl
xor
loope
inc
daa
in
and
fistps
cmc
shl
fwait
xor
fmull
push
add
cs
pop
std
ficomps
add
aaa
ds
cmp
adc
add
dec
mov
add
scas
icebp
push
mov
dec
lods
mov
test
fcmovnb
lcall
jmp
inc
mov
xor
jle
in
lahf
jecxz
divl
cmp
mov
xchg
cli
and
fidivrs
add
xchg
rcrl
cmpsl
icebp
andb
pushw
xchg
pop
jle
cmpsb
push
ss
aas
inc
int
aas
aam
pop
cmp
flds
xchg
mov
cwtl
mov
mov
test
lock
dec
imul
sbb
xlat
clc
mov
lcall
movsl
xchg
mov
push
pop
xor
or
push
xchg
xchg
inc
and
sbb
sbb
movsl
mov
sub
imul
cmp
xchg
out
mov
popa
or
dec
dec
and
imul
andb
pop
mov
mov
push
in
pop
push
add
xchg
lcall
cwtl
adc
jbe
xor
out
adc
push
arpl
enter
push
adc
lea
dec
add
fistpll
iret
fcom
enter
jns
cmp
adc
inc
jge
imul
cmpl
mov
and
fidivrl
arpl
loopne
loopne
jecxz
add
sub
mov
out
dec
sub
mov
mov
sahf
test
add
sbb
pop
es
mov
arpl
adc
push
enter
push
cmp
push
cmp
aad
orl
lds
ljmp
add
iret
loopne
xchg
loope
roll
test
xchg
cli
adc
jle
dec
adc
and
insl
lds
andb
jp
rcr
sub
sbb
out
lock
lds
js
ss
addr16
cmpsb
cwtl
out
sbb
jmp
dec
shll
aaa
rcrb
cmp
add
mov
mov
sub
pop
leave
jp
loope
inc
adc
fnsave
pop
xchg
ja
pop
add
lea
dec
mov
leave
pop
sahf
fwait
insl
imul
push
addr16
insb
stos
mov
jbe
stc
rcrb
jg
inc
inc
test
jae
adc
mov
xchg
lcall
sbb
jns
sub
aaa
movsb
xchg
rcrl
nop
sbb
sbb
and
xlat
ret
and
and
or
push
mov
sub
flds
xchg
dec
idivl
push
lret
sti
inc
daa
stos
icebp
je
inc
mov
in
adc
xchg
pop
aad
fisubrs
cmp
mov
scas
mov
dec
out
inc
inc
xor
filds
mov
mov
enter
xor
cmp
fldcw
xchg
inc
cld
mov
adc
outsl
ss
inc
scas
lea
cmpsl
sub
lods
aad
push
push
mov
out
scas
add
mov
and
or
push
cs
push
sub
test
inc
adc
ret
lds
mov
jne
test
fisttpl
mov
loope
mov
gs
flds
inc
movsl
pop
jae
mov
sub
adc
mov
pop
dec
into
adc
clc
mov
das
movsl
pushl
add
ret
mov
ds
cmpsb
les
lds
sarl
insl
mov
ljmp
pop
test
incb
xchg
jne
push
pop
fcoml
or
adc
cld
xchg
or
push
adc
pop
push
xchg
mov
add
jp
inc
push
mov
xor
fidivrl
push
insb
sbb
xor
dec
mov
cltd
bound
inc
add
cmc
leave
shlb
adc
sub
xor
loope
lods
pop
mov
inc
xor
cmp
movsb
cli
popa
outsl
dec
insl
addb
or
dec
ror
adc
mov
mov
pop
mov
hlt
mov
fidivrs
xlat
inc
leave
lea
pop
mov
xchg
add
pusha
xchg
jle
pop
and
xor
sbb
hlt
dec
cmp
lret
ljmp
es
fwait
nop
jg
pushf
fistps
sbb
mov
add
jge
adc
add
loope
aam
xor
js
pushw
sbb
ret
sbb
test
aad
scas
movsl
and
push
fdivr
xchg
stos
cmpsl
js
inc
add
inc
movsb
jl
cwtl
pop
test
jg
dec
js,pn
inc
popf
mov
pop
inc
pushf
pop
cmpsb
int
mov
dec
insl
push
lea
pop
pop
aas
jb
aaa
inc
adc
imulb
push
lret
mov
jl
pushf
popa
sbb
mov
fcomps
hlt
lock
aad
xor
push
xor
jb
movsb
sub
in
dec
xor
jb
stc
mov
jge
pusha
fwait
dec
rcr
lods
pop
mov
loope
hlt
fcomp
pop
sbb
pop
cmpl
cmpsb
add
mov
mov
push
mov
mov
cmc
xchg
lret
mov
mov
or
xchg
clc
add
popf
push
dec
nop
out
scas
xchg
mov
mov
cmp
gs
aas
mov
inc
dec
jbe
stos
adc
inc
stc
leave
in
nop
jb
mov
idiv
test
outsb
dec
bswap
movsl
es
sub
and
push
xchg
and
pop
sti
mov
or
fidivl
or
pop
sbb
xor
pop
xor
cmc
mov
inc
cli
xor
mov
addr16
loop
xlat
int3
std
adcb
mov
pop
shlb
mov
out
jbe
jge
pop
xor
cmp
or
cmp
in
push
cwtl
jae
jnp
and
mov
sub
push
sbb
in
mov
dec
cmp
mov
and
insl
mov
mov
or
pop
sub
mov
add
in
sbb
dec
pop
sbb
mov
push
imul
mov
pop
push
push
rolb
fistpl
sbb
cmp
mov
cmp
lock
cltd
mov
cmp
dec
cmp
roll
aaa
ret
gs
aad
mov
cwtl
add
and
fwait
clc
xchg
ss
push
mov
add
gs
mov
push
nop
xchg
hlt
es
cmp
int
jo
xor
cwtl
sbb
sahf
cmp
shl
and
inc
loop
add
stos
adc
sbb
dec
in
or
mov
arpl
pop
mov
fldt
lock
inc
xchg
outsl
std
rcl
jg
jp
mov
shrl
sub
dec
push
test
ret
pop
cmpsb
pop
rclb
push
sub
adc
lret
test
lret
or
add
aad
mov
jp
sub
stos
insb
lock
inc
iret
push
repnz
iret
jne
out
mov
mov
and
xor
out
lods
lcall
imul
movsl
es
ljmp
mov
mov
pop
iret
lods
mov
xor
mov
xor
popa
test
mov
pop
mov
inc
jno
push
aaa
sbb
and
jge
jg
ja
mov
cmpsb
sbb
mov
subb
aad
scas
cli
fisubs
push
and
out
xchg
icebp
fwait
xchg
sub
fwait
add
jmp
cwtl
shr
movsb
hlt
sbb
add
or
cmp
pushf
aaa
loop
or
jmp
pop
lods
les
or
fs
adc
pop
fbstp
jecxz
mov
cmpsl
sbb
into
jecxz
shl
insl
lret
xor
mov
cmc
es
test
or
clc
push
xor
or
loope
mov
setle
xchg
lahf
scas
mov
cmc
jge
push
adc
and
pop
mov
bound
pushf
and
aam
inc
mov
mov
xchg
sti
pop
or
mov
pushf
testw
dec
aad
cli
cli
imul
fwait
in
jo
cld
mov
fimuls
loop
int3
jne
dec
movl
movsl
mov
gs
mov
pop
push
inc
cmp
pop
push
sbb
out
movsl
movsl
xor
jmp
lock
add
adc
mov
jbe
dec
stos
pop
lahf
icebp
adc
xchg
sub
lods
mov
xor
or
cmp
xchg
loop
xchg
xchg
in
in
adc
mov
into
pop
cmp
das
push
mov
add
dec
inc
test
mov
push
mov
cmpsb
inc
sarb
ljmp
push
sbb
push
popa
cmc
xchg
not
adcl
and
xchg
leave
loopne
mov
mov
out
fiadds
mov
lret
stc
and
pop
test
mov
cmp
out
in
imull
imul
es
dec
jp
dec
popa
sbb
sahf
xor
mov
orl
lock
cmp
cmp
daa
and
cli
inc
outsb
jno
dec
add
xor
and
clc
mov
cmpl
adc
mov
aaa
jmp
adcb
aas
cmp
cmp
outsb
sub
dec
aas
dec
jp
leave
sbb
popf
js
test
sbb
or
mov
arpl
add
in
sbb
inc
repz
iret
add
stc
aad
arpl
xor
inc
push
paddsb
mov
pop
jg
sub
out
scas
adc
insl
pop
xlat
decb
sbb
jl
fdivs
mov
scas
jg
insl
cmp
mov
and
cli
xchg
dec
mov
inc
sbb
cld
nop
fwait
pop
mov
mov
out
mov
or
push
out
call
repz
jno
add
ficoms
pop
push
sub
sbb
cltd
ret
leave
xlat
or
or
mov
dec
xor
jg
or
mov
adc
push
push
je
cmp
stos
cmpsl
push
push
ds
inc
inc
sub
jb
mov
test
rolb
push
js
xlat
stos
lret
popa
jb
or
repnz
ret
mov
push
pop
push
xchg
addr16
shrb
jnp
ja
das
daa
inc
out
sbb
and
fdivr
adc
push
push
push
lods
xor
dec
icebp
leave
stos
cltd
repz
rol
cmp
xchg
dec
xor
pop
mov
addr16
xor
mov
pop
cmpsb
cmp
fs
mov
lcall
mov
push
mov
fstpt
enter
popf
ljmp
xlat
std
push
in
adc
inc
pop
sbb
push
ret
xchg
cmp
jns
jo
das
and
jl
add
lods
sbb
mov
mov
jecxz
dec
loop
dec
or
inc
les
mov
push
lea
cs
lods
add
sbb
cmpsb
mov
push
sub
imul
sub
sub
movsb
mov
les
dec
in
xchg
lret
mov
test
mov
push
fisubrl
dec
cmpl
in
inc
and
loop
pushf
xor
out
lret
ficompl
mov
fldt
cmp
pop
mov
test
dec
fs
pusha
ret
out
imul
fs
sbb
fdivrl
lret
cli
push
fs
cld
jb
loope
push
mov
in
adc
mov
inc
dec
das
mov
sub
test
insb
rcl
cmp
mov
data16
mov
push
movsb
test
pushl
insl
and
rorb
sbb
stos
bound
fildll
cmc
push
fs
imul
loop
adc
aam
ret
rcll
clc
pop
incb
mov
xchg
pop
jp
jg
pop
push
fcom
jl
sbb
cwtl
mov
shlb
mov
pushf
pop
mov
scas
mov
std
pop
loop
push
lock
push
dec
jmp
or
sub
inc
jmp
add
dec
cmc
mov
pop
push
outsb
fstpl
aad
mov
mov
iret
pop
hlt
movsl
mov
xlat
jnp
call
pop
pop
pop
popf
in
jns
lcall
mov
mov
in
sub
aaa
mov
daa
mov
in
xor
mov
test
jl
push
sbb
xchg
push
iret
adc
adc
or
mov
in
push
stc
enter
mov
mov
clc
popa
leave
push
daa
mov
add
and
popl
outsb
jae
int3
hlt
xchg
jmp
adc
jne
in
inc
xor
inc
fnstenv
mov
jne
dec
in
adc
mov
andl
cli
xchg
imul
js
sub
push
js
fdivp
shrb
inc
sarl
push
jno
ja
sub
add
push
adc
or
mov
pop
out
std
cmp
dec
mov
arpl
mov
xor
xchg
test
mov
rol
cwtl
andl
lds
aad
xchg
insl
test
gs
popa
xchg
outsl
out
pop
scas
mov
iret
xor
adc
cmpsl
subl
mov
popa
loopne
stc
ret
aaa
je
lret
mov
mov
sbb
sub
jns
pop
and
les
shl
jmp
mov
dec
stos
xchg
lahf
jno
in
pop
outsl
das
or
lret
ljmp
fwait
jle
das
mov
jns
mov
xlat
aas
test
test
inc
xchg
std
push
cmc
ja
jge
mov
and
movsl
mov
xchg
pop
cmp
xchg
in
clc
push
mov
sub
stos
sbb
iret
cs
stos
rcll
mov
outsl
xchg
mov
cmc
in
mov
je
es
jno
lods
loop
testl
out
add
xor
push
movsl
mov
dec
sbbl
scas
pushf
jne
les
aam
push
out
bound
aaa
xchg
test
fldcw
jle
dec
dec
data16
sbb
call
or
mov
imul
movl
insl
pop
test
fs
push
sahf
pop
fdivl
xchg
adc
xlat
lock
mov
clc
fnstcw
adc
mov
mov
and
test
inc
in
add
mov
in
or
xchg
cwtl
pop
repz
mov
loop
cmp
mov
push
into
dec
cmp
repnz
adcb
in
jbe
dec
push
adc
sbb
inc
xor
pop
push
push
js
push
mov
in
or
sbbb
push
icebp
mov
mov
push
push
mov
int
xor
fisubrs
jne
push
push
insl
push
outsl
into
xchg
lahf
mov
pop
cmp
jno
pop
in
ds
dec
sub
mov
iret
mov
push
fwait
sub
adc
out
xlat
add
pop
aaa
repz
cli
adc
mov
pusha
adc
or
je
mov
or
addr16
loopne
out
stos
int
and
rcr
jnp
sub
pop
pushf
dec
mov
fidivrs
hlt
jo
push
lock
pusha
fxch
xchg
xchg
xchg
movsb
cs
adc
xchg
jno
sub
xorb
or
movsb
mull
out
push
xor
hlt
lock
cld
and
mov
clc
jbe
cmp
movsb
cmp
xchg
adc
inc
ja
xchg
lods
push
or
or
pop
shlb
mov
loope
aaa
inc
sbb
xchg
loop
adcl
in
mov
add
dec
pop
add
mov
adc
mov
mov
inc
adc
fidivrs
mov
cli
arpl
sbb
hlt
mov
adc
cli
xlat
mov
lea
imul
shlb
adc
imul
flds
xchg
repz
mov
or
xchg
pop
sbb
mov
dec
inc
xchg
dec
js
xchg
out
in
shlb
push
cmc
xchg
sbb
mov
fnstsw
xlat
dec
dec
shll
jecxz
mov
push
arpl
stos
hlt
or
pop
mov
cmp
cs
out
ja
scas
adc
aas
or
pop
mov
scas
outsl
cmp
enter
sarl
sub
inc
lods
pushf
push
sub
add
les
popa
fadds
repz
push
pop
test
call
iret
or
sub
pusha
movsl
ja
out
or
xchg
mov
daa
lcall
fmuls
and
push
jnp
out
arpl
cs
and
mov
popf
jb
or
leave
jne
sub
mov
mov
imul
inc
push
push
fldcw
add
inc
test
pop
nop
adc
mov
push
loope
pop
xchg
add
iret
inc
or
xor
mov
rcrl
pop
xchg
ret
or
mov
or
test
daa
cmpsl
mov
push
adc
sti
cli
push
test
ds
test
pop
rorb
sbb
addl
enter
mov
dec
jnp
pushl
addr16
pop
fstpl
sbb
pop
dec
xchg
pop
push
xchg
xchg
inc
add
add
mov
test
insl
into
push
movsl
cmpsl
push
test
sub
sbb
jmp
jnp
fcoms
adc
jl
stc
jg
dec
movsl
or
repnz
push
les
fdiv
xchg
fucomip
nop
jmp
mov
sub
fadd
in
mov
mov
adc
mov
pop
sub
xchg
imul
fucom
roll
jno
andb
cmp
test
pslld
and
arpl
test
mov
notb
dec
or
push
xchg
movl
adc
rorl
xchg
pop
outsl
push
dec
mov
cmp
scas
push
jl
stos
dec
push
outsl
sbb
lea
fidivrl
pop
lods
mov
xchg
dec
add
and
inc
sub
push
cmp
aam
and
rcl
dec
dec
outsl
lret
das
inc
or
sub
into
int3
repz
sub
mov
push
jle
dec
sub
notl
sub
lcall
gs
loope
fcmovu
sbb
mov
and
ficoml
mov
push
mov
mov
rclb
mov
imul
cld
adc
js
adc
mov
lea
mov
mov
scas
dec
jns
jle
cmp
cmp
aam
repz
push
sarb
shll
fdivrp
and
scas
cmp
xchg
pop
aad
mov
jo
inc
roll
push
lret
inc
jg
adc
pop
add
push
add
cld
xchg
lods
jge
dec
xor
lods
in
and
push
xchg
in
mov
push
push
ljmp
push
jbe
jle,pt
in
mov
pusha
xlat
imul
xchg
mov
sbb
ret
add
mov
pusha
popa
or
sbb
sahf
push
jle
xchg
je
mov
pop
mov
mov
jmp
cmp
repnz
jns
mov
daa
and
scas
ret
mov
loope
and
imul
xlat
lcall
push
xchg
xchg
xchg
cmp
xchg
call
adc
out
jne
aas
push
xchg
jns
mov
negb
xchg
xor
mov
push
repz
xor
sbb
push
hlt
jg
mov
faddl
push
add
das
adc
loop
jmp
adc
sbb
jns
pop
push
rcll
mov
inc
inc
mov
je
out
add
icebp
jl
mov
insl
les
sbb
inc
cwtl
adc
mov
rcll
mov
stos
push
xchg
push
fcoml
loope
adc
loope
sbb
loopne
adc
mov
jb
into
fisttpl
mov
and
lock
cmp
xchg
sub
div
cmpsb
add
lea
sub
mov
loope
cwtl
mov
mov
or
fsubs
mov
shr
mov
sub
loopne
mov
sub
mov
out
add
cmp
sar
pop
in
test
push
insl
mov
cli
lcall
movsb
xor
xchg
ss
pop
xor
inc
jl
xchg
cltd
xchg
ror
and
push
sbb
sarl
mov
sbb
sahf
and
pop
xchg
mov
dec
push
mov
cltd
mov
out
add
ss
or
inc
inc
daa
lods
imul
or
js
xchg
push
jne
mov
add
jge
jae
rorb
or
jo
or
cs
sub
fwait
xor
dec
or
mov
dec
testb
jl
adc
pop
mov
lret
es
lcall
jns
xchg
inc
test
popa
aam
pop
and
mov
inc
push
call
int
in
cmp
pop
pop
xsha256
cmpsb
adc
xchg
cld
add
cmp
fst
insb
ret
clc
xchg
in
sub
jbe
not
push
repnz
fildl
sub
dec
shr
cli
and
mov
or
pop
mov
jnp
fs
push
aas
jge
ljmp
mov
push
or
ljmp
adc
dec
lahf
rcrl
enter
mov
leave
out
inc
sbb
push
out
mov
pop
jne
aam
mov
aaa
mov
sbb
push
pop
xor
jecxz
push
test
das
mov
out
add
loop
add
mov
push
icebp
sub
and
mov
hlt
inc
iret
pop
mov
push
cli
inc
negl
lret
dec
sub
ds
stos
stc
cmpsb
xchg
pop
gs
sbb
mov
sar
jg
imul
jmp
xchg
mov
adc
mov
mov
xor
divl
mull
loop
lock
adc
sub
test
push
pop
sub
pop
dec
data16
jg
out
mov
in
mov
lds
adc
movsl
popa
ja
rcll
mov
stos
sbb
push
inc
or
mov
pop
in
roll
jns
into
imul
out
xor
or
xor
gs
add
rep
inc
stos
pusha
fnstcw
jae
push
jmp
dec
fwait
insb
ja
in
pop
push
sub
or
mov
push
xor
cmp
push
mov
pop
sbb
push
popa
shl
mov
addr16
add
leave
sub
jecxz
data16
jne
ficoml
or
cld
jge
mov
movl
mov
xchg
mov
xor
pop
lock
xchg
inc
rolb
rorl
rcrl
xchg
dec
add
out
dec
clc
mov
jp
call
test
adc
mov
mov
adc
js
cmp
jae
jne
ljmp
inc
in
data16
mov
lret
adc
outsl
inc
dec
stos
or
sar
lcall
add
pop
test
sbb
aas
adc
addb
shl
scas
xchg
ja
out
fcoms
popf
rcrl
lock
adc
sbb
mov
rorl
jae
loope
jae
adc
pop
cltd
xor
imul
dec
sbb
push
fnstenv
imul
jae
aam
and
and
sbb
sbb
pushf
jbe
adc
imul
data16
lret
mov
push
mov
je
cmp
imul
sti
ds
sub
imul
notb
pop
xchg
cli
inc
outsb
hlt
pop
xor
out
jge
test
adc
mov
pop
jns
rcll
xor
scas
leave
xchg
jb
mov
dec
or
data16
je
push
and
sub
cmpsl
push
xor
inc
scas
and
rol
dec
ja
inc
std
ljmp
jmp
out
push
jo
inc
imul
lret
aam
or
mov
push
or
rorl
and
pushf
xor
cmp
mov
dec
call
ffree
rcr
push
inc
loopne
test
dec
pop
push
mov
mov
lds
clc
xor
pop
cltd
imul
lcall
or
adc
fwait
stos
push
lods
in
mov
cltd
dec
sub
shl
xlat
or
loope
push
fs
mov
mov
push
cmp
mov
shrl
add
fistl
sbb
jbe
cmp
call
mull
mov
inc
into
jae
fsub
adc
es
push
dec
push
inc
and
cmpsl
pop
add
push
inc
loope
test
push
aas
test
mov
or
pop
stos
jmp
pop
out
mov
adc
push
faddl
clc
sbb
mov
int
lcall
fsts
sub
xor
fstpl
ss
or
pop
popa
push
jnp
outsl
sub
cmpsl
mov
addr16
mov
sub
cli
lret
rorl
jnp
inc
popa
mov
in
popa
pop
push
jmp
push
xchg
outsl
adc
data16
jae
lahf
pop
testb
mov
jp
inc
adc
imull
mov
popf
cmp
mov
outsb
push
nop
arpl
std
mov
mov
inc
pop
mov
sbbb
out
nop
out
shll
mov
flds
fdivrs
in
jbe
int3
inc
mov
jae
dec
sub
push
mov
gs
lds
pusha
test
stc
xor
cmpsb
or
and
jecxz
cwtl
sub
inc
lcall
xchg
xor
pop
inc
stos
jg
mov
dec
inc
dec
hlt
mov
pop
dec
cmp
sbb
mov
imulb
sub
sub
adc
dec
out
adcl
aam
fnsave
mov
lods
shll
add
sub
les
test
and
into
mov
mov
inc
je
cmp
push
pop
fcoml
jmp
arpl
mov
inc
icebp
mov
mov
aam
test
jp
enter
fwait
roll
mov
xchg
xchg
pop
lea
inc
icebp
mov
mov
into
push
xchg
push
lock
mov
and
and
clc
jno
pusha
fsubrs
popa
fisubl
push
push
pop
pop
test
jno
call
jmp
mov
testb
sti
xchg
inc
jp
lret
add
xorl
incb
repnz
inc
cli
adc
add
fcompl
sub
aas
fcmovnbe
hlt
lods
insl
out
push
movsb
xor
in
xor
lods
mov
add
fildll
xchg
fs
mov
jecxz
xor
xor
es
mov
repz
lret
cltd
gs
call
scas
sub
fst
clc
adc
mov
cmp
jmp
inc
test
jo
jp
pop
loope
and
ficompl
jp,pn
out
pop
push
aad
inc
stos
fsubs
or
leave
xchg
popa
inc
adc
jbe
jno
adc
adc
or
cmc
pop
lret
shll
testl
lock
inc
or
arpl
inc
mov
cli
push
dec
daa
sti
fsubl
ja
loope
subb
in
mov
pop
les
add
lods
mov
mov
mov
movsb
pop
nop
jbe
pop
mov
adc
pop
cmp
lret
sbb
adc
mov
jno
gs
sub
sub
add
and
shlb
cmpsl
jle
out
bound
xor
insl
and
dec
div
rclb
ss
push
call
xor
in
add
pop
jbe
and
ljmp
fmuls
jecxz
xor
sub
jns
ret
stos
out
pop
shrb
push
xor
cmpsb
ret
mov
jo
mov
dec
jae
aas
imul
push
pop
xchg
in
mov
icebp
jmp
sti
jns
divb
fdivrp
mov
sub
cld
push
mov
push
push
jg
rorb
lods
std
nop
les
imul
add
xlat
cltd
mov
int
xlat
stos
stos
sub
repz
imul
cmc
push
dec
test
jns
push
jno
mov
pop
jl
mov
jb
dec
inc
inc
push
daa
loop
sarl
imul
icebp
clc
sbb
test
fisubs
fmuls
dec
fdivs
scas
outsb
mov
mov
test
dec
dec
ds
xchg
adc
fldt
xor
insl
push
sub
repnz
ror
popa
pop
and
jge
mov
mov
sahf
xchg
lds
push
xchg
inc
jb
xchg
mov
xchg
lea
es
jae
scas
jo
mov
pop
in
mov
popf
pop
cwtl
dec
rol
clc
imul
jo
jb
cwtl
in
out
icebp
sub
cmp
pusha
icebp
push
xor
lods
inc
xchg
nop
xchg
lret
das
sbb
dec
sub
les
loope
or
js
cmp
popf
xchg
inc
mov
adc
cmpsb
mov
sub
mov
call
rorl
pop
in
xchg
mov
in
or
push
gs
stos
jle
push
fisttpll
cltd
jns
aas
cmp
or
lods
adc
mov
shlb
push
test
fstpt
push
mov
xlat
jo
scas
sbb
lods
adc
aad
xchg
sbb
lcall
cmp
enter
sahf
push
cmpsb
xchg
mov
lahf
dec
insb
adc
insl
mov
je
arpl
jo
sbb
add
mov
mov
push
mov
xor
pop
mov
adc
lcall
push
lock
roll
jne
and
out
pop
mov
lcall
xor
arpl
adc
sbb
sarb
in
aaa
lock
call
jp
or
dec
add
lods
adc
xor
lret
bndstx
cwtl
sbb
ljmp
mov
sub
into
call
decb
jae
mov
xchg
pop
insb
pop
cmovbe
push
mov
stc
rorb
jbe
lods
aas
push
jb
test
jmp
aad
lret
dec
cmp
and
xchg
inc
in
orl
leave
mov
das
iret
jl
cmpsb
push
out
sub
jae
mov
es
push
addr16
pop
or
cmp
mov
pop
loope
or
inc
mov
decl
adc
das
inc
push
addr16
popa
stc
mov
xor
icebp
dec
xchg
je
push
int
cwtl
pop
and
pop
xchg
jno
ret
push
xchg
inc
sub
loop
inc
aaa
stos
cmp
push
cmp
jmp
outsb
movsl
and
pop
mov
repz
adc
nop
jge
sbb
inc
outsl
add
push
xor
pop
rorl
rorl
test
rcl
faddp
xchg
gs
test
in
xchg
sbbb
mov
sub
adc
in
sbb
sub
mov
test
insl
pop
adc
test
mov
and
stos
lahf
das
pop
or
jb
adc
jbe
mov
xor
std
clc
dec
rorl
jb
dec
f2xm1
push
fiaddl
fnstsw
clc
jne
nop
xchg
mov
lret
inc
sti
arpl
push
nop
mov
dec
xorb
push
mov
add
xchg
fdivrs
dec
ljmp
stos
cmc
pushl
mov
inc
stc
insl
push
ds
ficompl
jmp
push
fnsave
std
jbe
push
das
mull
ss
inc
pop
add
mov
xor
std
or
inc
jge
push
jo
xchg
pushf
mov
sub
lahf
jo
adc
mov
mov
sbb
xchg
loopne
pop
push
mov
mov
jbe
nop
insl
jge
and
jg
or
imul
repnz
mov
orb
jge
paddusb
mov
clc
pop
imul
mov
mov
sbb
ljmp
sub
std
dec
pop
xchg
repnz
jmp
mov
fcoml
mov
or
and
cltd
or
aas
jb
jae
xchg
cltd
scas
adc
mov
lds
dec
scas
push
pusha
xchg
xor
or
push
and
loope
cwtl
jmp
int
fmul
mov
cwtl
andl
lcall
pop
adc
mov
inc
stos
jb
mov
sub
nop
lods
cmp
popa
gs
jbe
mov
shl
pusha
inc
adc
dec
outsl
cmp
jns
xchg
or
pop
iret
faddl
fisubl
jg
sub
jge
outsb
dec
jnp
sub
sub
mov
xlat
mov
idivb
mov
dec
sbb
add
fistpll
cmp
fcoml
xor
mov
jno
push
xchg
into
lea
xchg
cmpsl
mov
sbb
leave
dec
hlt
add
icebp
sub
in
mov
jno
insb
push
scas
add
jg
jae
jl
xchg
push
lods
loopne
xchg
fisubs
pop
cld
mov
arpl
mov
jmp
mov
and
jns
into
mov
jnp
jae
xchg
dec
add
hlt
imul
push
pop
adcl
mov
pop
dec
xlat
jge
fisubrl
mov
pop
data16
sbb
in
sub
scas
or
inc
sbb
int
pop
insl
je
roll
push
ljmp
stos
movsl
inc
or
out
hlt
xor
mov
push
xchg
aas
out
cmp
lea
ja
mov
dec
adc
push
ds
imul
fxch
out
jnp
xlat
outsb
sub
movsl
cmp
sbb
jl
fcmovu
xchg
gs
movl
stos
pop
mov
xchg
insb
xchg
shll
out
add
cmp
ficoml
test
pusha
jl
popf
subb
adc
and
push
dec
in
sub
push
push
fdivrp
inc
xchg
pop
out
int3
xlat
lahf
lock
xor
pop
stos
movsb
scas
ljmp
fimuls
xchg
sub
dec
jb
xchg
sub
or
cmpsl
pop
sub
and
xchg
jns
sti
jne
cwtl
imul
clc
ja
sbb
mov
mov
lcall
shlb
pop
push
mov
int
sub
ss
cmp
inc
sbb
add
ror
jg
cld
out
mov
or
stc
and
mov
movsb
and
ja
dec
sarb
std
or
add
jo
lcall
inc
movsl
mov
in
pushf
cs
ret
mov
xchg
mov
out
fldl
cmp
mov
leave
cs
cmp
shrl
pop
lods
dec
xor
sahf
jp
shll
sub
pop
loop
stc
dec
inc
or
movb
sub
jl
lret
mov
insb
mov
out
in
repnz
cli
push
xor
ja
test
pop
pop
dec
adc
or
jecxz
push
inc
push
test
xchg
or
xchg
scas
jg
lret
mov
dec
dec
fwait
push
add
mov
and
lea
or
fs
imul
mov
rorb
dec
sahf
xchg
dec
fmull
icebp
mov
rol
jno
adc
push
ror
pushf
popa
cmp
lret
bound
lret
cltd
or
imul
lods
aas
loope
mov
aas
flds
push
jne
push
out
mov
lods
inc
and
sbb
ljmp
cmc
or
inc
cmp
pop
dec
adc
movsb
jp
cmp
aad
cmp
nop
sub
cmp
mov
xchg
pop
mov
fs
arpl
xchg
cmc
inc
div
xchg
lods
addr16
cmp
cmp
jle
aad
push
mov
xor
sbb
cmpsl
push
xlat
mov
subb
mov
fdivr
loope
jbe
jp
cld
sub
jg
std
mov
lret
das
popa
cltd
or
xchg
xor
mov
dec
mov
push
xchg
rclb
dec
jo
neg
sbb
pop
fmuls
movsl
jg
mov
push
push
iret
jae
push
mov
popl
sbb
push
add
enter
addr16
cmp
dec
sbb
or
mov
fstpl
jns
test
adc
add
inc
sti
repnz
cmp
and
xlat
adc
pop
in
push
in
or
mov
cs
inc
push
cmpsb
rorb
sub
xor
inc
and
push
push
insb
or
in
jecxz
dec
dec
mov
or
into
add
iret
dec
jl
roll
fstpt
shlb
jo
mov
stos
movsl
xlat
or
or
call
push
push
in
push
xor
inc
leave
push
push
scas
xor
jo
int
dec
mulb
cmp
hlt
out
push
mov
and
mov
adc
mov
rcll
loope
mov
fwait
push
pop
jmp
popa
sbb
shll
jnp
inc
es
mov
xor
cmp
fwait
jns
lods
stos
push
mov
pop
movsl
ss
jge
std
and
loopne
pop
xchg
into
loope
pop
and
mov
imul
xorb
jp
in
es
test
out
pop
lahf
xor
fildll
in
adc
lret
adc
ret
or
popa
push
out
mov
ret
or
push
jle
cltd
jg
dec
or
lods
sti
cmp
pop
sti
bound
mov
xchg
lock
loopne
or
xor
pop
stos
push
sub
stos
jecxz
dec
mov
icebp
add
pusha
subb
add
loope
adc
sbb
sti
pop
sahf
push
stos
rcrb
loopne
pusha
movsl
and
insb
aaa
mov
inc
scas
stos
test
jnp
mull
sbb
push
xchg
jle
cltd
mov
call
mov
xchg
push
mov
dec
push
and
xchg
inc
cmp
out
aad
scas
fdivp
dec
in
stos
cmp
loopne
sub
test
cmp
mov
iret
lret
sti
inc
test
stos
and
inc
leave
sub
dec
pop
ret
in
daa
dec
sub
sbb
inc
jno
in
cmp
lods
or
mov
cmpsb
mov
aas
enter
ret
adc
clc
or
mov
int
add
dec
jecxz
mov
stos
mov
bound
out
sbbb
mov
enter
test
fbld
cltd
hlt
mov
mov
movsb
inc
lea
mov
in
sti
pop
enter
aaa
pop
sub
dec
mov
call
repz
xchg
jp
int
inc
mov
lret
sbb
mov
mov
push
xor
pop
pop
inc
adc
jmp
in
jo
or
mov
daa
dec
test
jle
sub
mov
inc
dec
in
push
stos
scas
mov
ret
movsb
or
daa
in
mov
inc
xlat
mov
scas
stos
out
sub
ljmp
push
fimull
out
std
or
int3
adc
xchg
dec
lret
fisubrs
add
jno
rcl
loop
jmp
push
xchg
and
cmp
test
jg
cld
push
shr
cli
mov
mov
arpl
lds
sub
cmp
ficoml
add
es
punpckhbw
testl
filds
ja
js
cmpsb
insl
pop
mov
ds
stos
fwait
stc
movsl
dec
push
bnd
insb
fwait
mov
cmp
jge
dec
sub
push
jae
push
xchg
sbb
sbb
cli
inc
mov
mov
xchg
inc
int3
call
sti
cmpsb
cmp
sar
cmp
mov
cmp
jno
loop
popf
out
push
mov
aad
dec
inc
arpl
and
out
icebp
ffreep
pop
jns
ret
fwait
xchg
xor
push
scas
sub
or
das
jmp
sti
sbb
lock
imul
xor
ret
ja
add
outsb
dec
scas
arpl
sbb
enter
sbb
mov
dec
xor
inc
fucomp
orb
pusha
xor
cmpsb
cmp
es
xchg
mov
fwait
test
mov
lock
mov
and
mov
jbe
into
push
sub
push
jmp
adc
mov
outsl
js
add
xchg
and
mov
lock
rcl
and
xor
je
or
pop
fwait
rcrl
mov
sub
xor
ret
aaa
ljmp
fbld
es
dec
test
lea
push
bound
cs
jns
clc
sbb
imul
mulb
sbb
cld
fs
rcrb
aas
inc
pop
pop
stc
ja
hlt
fsub
stos
popa
mov
rcll
mov
int3
mov
cmp
pop
roll
loop
das
mov
adc
cmpsb
es
cmp
ret
pop
std
pop
jo
test
test
test
push
mov
lods
cmpsl
loop
sti
arpl
push
or
cmp
jno
es
movsb
pop
mov
xchg
int3
insl
daa
inc
in
dec
push
pcmpeqd
stos
pop
xor
rcrl
in
xchg
and
adc
movsb
loopne
mov
frstor
mov
sub
or
out
mov
dec
fwait
mov
idivl
mov
int
jb
xchg
push
mov
mov
cs
sahf
loop
js
int3
inc
nop
jmp
loope
mov
pushf
dec
clc
xchg
cmc
call
sbb
pop
loop
sbb
add
dec
rcr
daa
add
jno
jecxz
mov
pop
mov
movsb
in
xor
xor
mov
sub
sahf
bound
push
and
mov
push
cmp
add
push
inc
xchg
sbb
lahf
movsl
dec
jecxz
daa
fwait
repnz
cmp
gs
jne
mov
sbb
jmp
aad
add
inc
mov
xor
arpl
mov
popa
adc
sub
bound
or
mov
ja
xor
insl
cmc
imul
add
lock
loope
cmc
imull
or
outsl
dec
movsl
imul
test
dec
push
mov
lcall
mov
push
mov
pop
inc
insl
mov
sbb
jae
push
inc
and
imul
faddl
mov
mov
pop
add
aad
pushf
out
cmc
enter
cmp
movsb
or
and
test
jmp
adc
or
lods
repnz
dec
in
call
push
notb
sbb
das
lcall
out
and
xchg
cmpsl
js
xchg
gs
jnp
add
jne
imul
add
and
mov
push
and
pop
loope
cmc
fsubrl
sbbb
inc
inc
pop
arpl
insl
mov
or
fsubrp
jp
popa
jl
mov
and
jae
pop
je
add
add
mov
addb
ret
push
popa
sbb
xor
fs
add
xchg
sbb
int3
mov
lret
cmp
cmp
in
or
lret
mov
and
sbb
xlat
addr16
or
sbbl
leave
fildl
xor
aam
sub
inc
dec
push
in
aad
fsubl
loope
bound
push
ds
push
mov
jg
xchg
aaa
mov
cmc
pop
lahf
movsb
out
shl
lods
mov
repnz
imul
push
sbb
mov
loopne
mov
mov
xor
jmp
mov
push
lahf
dec
cmp
and
or
je
lret
pcmpeqd
insb
jecxz
movsl
sbbl
mov
clc
pop
mov
mull
mov
in
mov
push
pop
xor
iret
aas
sbb
jecxz
pushf
lret
mov
stos
insl
mov
aas
push
mov
mov
and
fs
push
adc
fisttps
decb
jge
push
jecxz
sbbl
decl
fs
das
lret
movsb
adc
lods
fs
out
movsl
out
inc
ds
jns
sub
sub
repnz
popa
fs
in
insl
cmp
out
cld
push
daa
imul
arpl
push
cmpsl
pop
les
inc
add
mov
jns
xchg
sbb
or
xor
aas
xchg
fs
mov
inc
inc
aad
cmc
push
push
and
ret
fimuls
xor
je
and
adc
cmpsb
jge
cli
cmp
ljmp
pusha
pushf
jp
xchg
jle
fisubs
xchg
mov
push
cs
notl
dec
les
add
mov
call
js
fnstenv
flds
call
test
nop
dec
sbb
lahf
cli
clc
jno
inc
out
lret
push
outsb
lds
mov
xor
adc
mov
xlat
mov
shll
and
cs
mov
dec
in
adc
jg
scas
adc
sub
dec
hlt
or
xor
mov
into
mov
movsl
mov
jns
out
out
jg
jg
insb
dec
leave
inc
jo
push
push
and
mov
inc
aaa
adc
sar
aaa
and
pop
jmp
aas
push
mov
push
into
mov
xchg
jbe
insl
push
cmp
cltd
add
push
cmpsl
jo
pop
mov
inc
repz
xchg
cltd
push
shlb
movsb
xchg
dec
adc
lods
fbld
or
test
cli
mov
push
push
sub
add
fs
pop
js
gs
movsl
jg
js
loope
mov
mov
mov
push
inc
pop
and
lods
add
data16
xchg
negb
int3
movsb
adc
loope
and
fucomp
jnp
lret
inc
sbb
xchg
les
pop
gs
aas
push
pop
mov
lea
jb
les
fwait
outsb
js
jne
lds
insb
mov
pop
pop
jmp
scas
push
lea
sbb
push
pop
pushf
sub
mov
inc
xor
test
bound
clc
dec
hlt
hlt
lahf
cmp
stos
mov
and
jb
mov
out
fisubl
mov
je
fxch
sub
fsts
add
dec
in
lahf
ret
inc
or
aas
hlt
push
sbb
int
push
insl
jecxz
in
orb
pop
xchg
inc
sbb
jne
xchg
or
stos
dec
enter
lcall
lds
cmpsb
inc
gs
pusha
dec
xlat
scas
xchg
je
popa
push
cmp
std
jae
add
mov
aam
popf
jnp
into
xchg
stc
push
sbb
push
lock
inc
mov
sbb
push
movq
fdivrl
fidivrl
in
jl
mov
cmp
mov
dec
enter
cmpsb
cmpsb
cli
loope
xchg
out
iret
mov
sbb
subl
fistpll
incb
insb
xorb
out
cltd
jp
mov
sbb
mov
leave
pop
lret
test
mov
loop
outsl
ret
into
pop
adc
mov
test
jl
bnd
adc
jp
xor
push
inc
aas
mov
fisubrl
cmpsb
jns
xor
jp
or
jg
or
lahf
xchg
sti
lock
jbe
dec
outsb
add
stos
inc
popf
ljmp
popf
lea
push
cmp
das
pop
lds
mov
adc
cmpsl
xor
mov
out
hlt
cli
lods
hlt
mov
test
ret
fwait
mov
sub
pop
pop
pusha
daa
dec
mov
fprem
out
hlt
das
popa
sbb
push
adcb
xchg
arpl
or
xchg
scas
in
sha256msg2
cltd
loope
jo
xor
fdivs
mov
jle
fwait
scas
outsb
outsb
jo
je
outsl
std
cmp
fildl
xor
mov
add
lea
xor
cltd
cmpsb
add
or
push
hlt
jb
sbb
xchg
fs
pop
cmc
out
iret
lret
mov
out
push
push
xchg
pop
shll
popa
pop
or
aas
int
xor
inc
scas
loopne,pt
js
mov
or
adc
cmp
stos
out
nop
or
jecxz
cltd
mov
cmp
ljmp
push
nop
aad
mov
bound
mov
jno
fbstp
cmp
mov
cmp
ret
sub
mov
leave
or
or
pop
mov
scas
mov
outsl
aaa
sbb
cmp
andb
mov
gs
jp
mov
xchg
inc
push
lret
out
test
pop
clc
jp
dec
loope
outsb
imulb
jns
and
rorl
push
in
xor
jge
loop
insl
mov
mov
mov
push
nop
mov
push
jno
jl
jecxz
popf
ucomiss
sub
or
pop
test
cld
xchg
scas
cmp
cmp
in
sti
xchg
and
lods
cmp
add
test
mov
cltd
in
push
es
cmp
hlt
test
xorl
insb
in
iret
pop
stc
xor
lea
les
sbb
jo
pop
andb
and
push
mov
outsl
mov
adc
cwtl
mul
or
jne
je
push
ror
and
aas
ror
pop
scas
call
pop
test
outsb
xchg
popf
pop
xor
add
shr
inc
dec
int3
repnz
pushf
pusha
add
dec
mov
lret
popf
mov
mov
insl
movsb
jp
add
xor
popf
pop
mov
in
mov
into
jae
dec
lcall
mov
lret
push
push
mov
shrl
lea
and
adcl
fnstsw
movsb
scas
mov
push
dec
dec
insb
push
xchg
add
lock
lods
movl
sarb
jb
xchg
dec
incb
or
popf
fmull
mov
rorb
sub
arpl
mov
test
lcall
mov
rorb
push
add
ss
movsl
ss
ljmp
mov
push
push
push
aad
cmpsb
jno
mov
rcll
and
push
and
es
jns
cmp
xchg
bound
cmp
loope
in
sbb
icebp
push
mov
push
mov
ja
lcall
add
mov
mov
arpl
add
xchg
sub
icebp
in
and
push
push
push
or
cwtl
outsb
sbb
fldt
repz
push
dec
mov
pause
push
and
stc
mov
lcall
and
stos
or
jecxz
xor
mov
stos
lds
fdivrl
mov
sbb
mov
lcall
movsb
jbe
aaa
in
popf
push
jg
fstps
out
and
and
fidivl
mov
and
stos
add
dec
and
or
sahf
enter
enter
jle
mov
pop
mov
xchg
ret
mov
mov
pop
shll
fcmove
stos
test
out
sub
lret
mov
outsl
repnz
popa
test
lock
push
and
mov
mov
call
fildll
fs
xchg
ds
lcall
push
mov
fs
into
add
jecxz
xchg
std
inc
dec
ret
out
xchg
mov
mov
shlb
scas
aas
dec
icebp
and
jnp
dec
movsb
xor
inc
push
xchg
pop
xchg
mov
nop
lsl
sub
movsb
inc
and
movsl
sub
enter
stc
mov
xlat
and
pop
ljmp
dec
pop
fs
pop
roll
dec
sbb
inc
jnp
popa
cli
cwtl
adc
mov
or
xor
outsl
cwtl
xchg
imul
cmp
inc
rclb
iret
gs
xor
cli
or
fiaddl
add
and
mov
movl
sub
jp
aad
push
add
pop
xchg
cmp
das
popf
fiaddl
mov
pop
or
frstor
adc
sbb
mov
loope
dec
xchg
sub
pop
and
les
jb
adc
fidivl
and
mov
pusha
aaa
sbb
pusha
dec
pop
cmp
ret
fwait
jae
xchg
sub
xor
or
inc
sub
adc
and
jno
in
leave
pushf
aam
inc
in
mov
push
aaa
je
lods
or
jo
shlb
sbbb
pop
add
mov
rorb
sub
lcall
pop
inc
cs
loope
pop
pop
enter
stos
fcompl
xor
aad
mov
movsl
mov
mov
mov
jne
lcall
lds
and
stos
jo
and
cli
popa
movsb
fcmovnbe
push
sbb
adc
imul
fcmovne
cmpl
xor
popf
call
dec
mov
fchs
jbe
and
mov
xchg
pop
out
fsubl
mov
shll
mov
pop
and
stos
jne
xor
mov
sbb
dec
les
push
xor
push
mov
sbb
pop
adc
dec
movsb
cmp
push
ret
pushf
call
fs
cmc
ja
mov
sbb
xchg
or
sti
test
sub
mov
and
xchg
lret
sub
mov
movsb
mov
mov
jbe
sub
rorl
cmp
add
xchg
pop
xlat
xchg
sbb
jb
pop
mov
mov
push
ret
test
xchg
into
popa
addr16
mov
daa
lret
aad
xor
sub
add
and
fildl
push
lods
dec
rolb
mov
add
sbb
fisubl
hlt
inc
imul
jl
pop
int3
sbb
cmp
mov
xor
push
movsl
cld
and
mov
iret
jbe
mov
iret
imul
outsl
lods
lahf
cmp
dec
xor
mov
out
sysenter
inc
push
scas
jmp
cltd
mov
jnp
fadds
pop
gs
fisubrs
shll
xor
out
icebp
out
pop
xlat
jmp
jle
cmp
out
cmc
loopne
and
ret
mov
sbb
ljmp
jle
mov
mov
lea
jge
lock
add
shlb
and
int
rclb
xor
aaa
push
xchg
test
sti
cmp
xor
push
lock
ret
adc
jg
clc
std
outsl
out
cltd
add
jp
dec
pop
dec
subb
mov
or
xchg
mov
andl
outsb
mov
bnd
inc
push
and
je
xchg
pushf
adc
sti
subl
and
and
fs
icebp
xchg
cld
addr16
in
cmpsl
pop
addr16
cmpl
push
imull
dec
push
arpl
jno
pop
sti
mov
enter
mov
or
movsb
movsl
addr16
or
xlat
stos
std
movsl
test
sti
adc
ljmp
lds
lods
cwtl
call
cmp
pop
jo
mov
outsb
mul
loop
xchg
push
dec
push
adc
mov
sub
pop
das
mov
fcompl
imul
jp
loop
in
mov
into
movsl
push
sub
jae
fwait
ret
push
lcall
bound
xor
xchg
mov
pop
in
out
add
pop
push
and
aam
sbb
cmc
push
stos
stc
push
arpl
es
push
mov
adc
cmpsl
imul
js
ss
add
fdivl
xchg
cmp
cmp
gs
out
test
popa
arpl
mov
fcoml
cld
outsl
xchg
jno
mov
out
fisttps
and
fldenv
rclb
scas
inc
sbb
dec
sbb
lods
cli
xlat
lock
addr16
fsubs
sti
fisttpll
lahf
das
add
sbb
inc
sbb
and
push
mov
push
mov
fwait
add
sub
mov
pop
sbb
pop
mov
inc
dec
pop
push
sar
jg
mov
outsl
outsl
in
dec
sub
fs
outsb
pop
pop
imul
pop
xchg
test
lods
jae
out
add
adc
dec
mov
pop
sub
mov
adcl
scas
mov
test
sarb
popa
cmc
adc
pushf
mov
jb
aam
stc
outsl
loop
test
negl
push
ret
xor
and
pop
mov
rcrb
out
mov
mov
fdivl
inc
add
adc
adc
ficompl
in
addr16
mov
sbb
mov
mov
xor
inc
inc
xor
cmpb
adc
or
mov
mov
repz
jmp
mov
dec
mov
mov
pop
pushf
fimull
inc
std
add
fsubr
out
jl
cmp
ret
movsb
bound
xor
stos
movsb
lock
sub
adc
mov
outsl
fwait
rolb
sahf
dec
fcomps
and
arpl
inc
popf
ljmp
clc
adc
leave
adc
pop
adc
dec
dec
add
pusha
add
ret
mov
stos
pop
int3
mov
fisubrl
aas
lcall
inc
inc
out
mov
xor
mov
mov
sub
mov
dec
in
mov
loopne
dec
mov
aas
and
jge
iret
movb
or
and
out
pop
mov
arpl
scas
mov
insl
and
js
push
adc
subb
test
mov
sbb
xorl
xchg
xchg
xchg
dec
icebp
ss
cmpsl
ss
gs
cmpsb
mov
call
ja
mov
ljmp
add
outsb
or
cli
fs
or
xchg
ja
jnp
xchg
xor
sub
mov
nop
mov
outsb
mov
mov
stos
pop
cmpsl
les
inc
xchg
mov
mov
test
jno
jmp
sub
xchg
rorb
mov
out
sub
xchg
mov
fs
xchg
push
inc
sbb
xchg
pushf
in
push
cmpb
sti
jmp
les
pop
dec
js
xlat
scas
xor
les
xchg
add
sti
subl
into
jp
mov
jne
mov
dec
jp
imul
hlt
shlb
cmpsl
dec
out
add
data16
mov
scas
fbld
add
mov
and
cltd
sbb
push
es
cltd
inc
cmp
or
das
ror
push
ja
push
scas
bound
ret
stos
add
mov
loopne
sbb
scas
pop
repnz
mov
dec
add
jp
fnstcw
push
mov
daa
je
ret
lods
jae
adc
jnp
adc
sbbb
repz
je
pop
jmp
inc
rcll
lods
shr
jmp
pusha
outsb
daa
jae
and
inc
incb
dec
outsb
dec
shrb
fwait
outsb
test
popf
ja
mov
es
xor
cmp
out
sub
fists
push
jbe
shrb
fucomip
or
lock
btr
dec
mov
sub
adc
cld
cmp
cli
push
stos
and
mov
push
push
or
pop
xlat
ret
fsts
mov
data16
in
jb
pop
mov
jg
jle
jge
movsb
push
dec
add
cmc
jb
jecxz
jge
add
sbb
arpl
cmc
into
cmp
lcall
out
stos
out
xor
insl
addr16
mov
sub
maskmovq
negl
les
ret
xchg
imul
xchg
loope
inc
add
mov
sarl
adc
outsb
pushf
sbb
int3
addb
push
mov
mov
icebp
mov
xor
cs
das
rorl
mov
popa
enter
xor
hlt
mov
notl
fucomi
push
sbb
cwtl
call
push
and
cmp
pop
xchg
imul
daa
mov
rcr
test
jecxz
mov
sbb
mov
ljmp
jnp
lea
or
mov
gs
inc
ret
push
mov
xor
cmpsl
fwait
xlat
inc
jle
push
nop
js
dec
mov
shlb
fdivr
jl
lds
addb
pop
jbe
and
cld
mov
and
adc
and
adc
lock
aam
xchg
es
or
and
add
cmp
or
leave
push
mov
mov
mov
xlat
mov
adc
stos
mov
xor
shll
jbe
xor
jp
mov
enter
sub
sbb
jecxz
insb
addr16
rcr
sub
cmpsb
sbb
add
cld
test
xchg
in
faddl
dec
ret
insb
les
mov
cmp
ljmp
xchg
mov
outsb
jp
scas
cmpsl
pop
rorb
popf
sub
jno
push
gs
insb
push
aas
arpl
sbb
xor
and
lock
jl
adc
outsb
xchg
shll
inc
bound
mov
les
arpl
hlt
xor
jb
xchg
mov
jae
lahf
and
or
call
add
int
addr16
xchg
ret
mov
test
loope
mov
mov
lods
xchg
xor
xor
mov
jb
aam
repz
push
in
mov
push
xor
push
cmc
or
call
mov
jl
repnz
sbb
pop
lods
xchg
push
ret
mov
and
mov
add
push
outsl
push
jne
cmp
imul
push
adc
add
xlat
pop
dec
mov
or
or
cmp
movsb
sbb
cmpsl
leave
and
xchg
jae
aaa
dec
ret
sbb
scas
mulb
jno
and
push
ret
dec
dec
cltd
xchg
jo
call
aam
addr16
mov
lcall
cmp
pusha
jns
test
decb
dec
in
pusha
cli
cmp
xchg
add
incl
ret
pop
jmp
repnz
push
mov
cli
sahf
add
xor
add
insb
shlb
inc
pushf
push
pop
xchg
fldlg2
xor
xor
loop
ret
movsl
test
sub
pusha
xchg
cmp
pusha
cmp
movl
repnz
and
rolb
sbb
mov
hlt
lds
push
insb
inc
rcrl
xor
fiadds
sahf
movsl
stos
movsb
pusha
insb
dec
mull
or
inc
aad
in
or
orw
cld
mov
xchg
pushf
rcl
jp
mov
sub
sub
push
stc
iret
and
pop
add
es
adc
cmp
jp
popf
inc
dec
mov
outsl
pushf
pop
jmp
fucomp
pushf
cmp
sub
insl
ljmp
outsb
fwait
add
xchg
lcall
fstpt
leave
loopne
nop
mov
and
imul
sbb
decl
fdivrl
mov
adc
fsub
mov
jg
loop
mov
nop
out
out
pushf
subl
imul
pop
nop
jge
testb
ljmp
dec
cmp
les
mov
xor
push
sbb
aam
mov
aaa
inc
loopne
or
gs
pop
and
inc
push
inc
pop
adc
dec
add
push
or
decb
push
pushf
adc
mov
mov
fnsave
push
mov
dec
shr
push
dec
fdivrs
mov
les
cmp
sarl
ja
loopne
sbb
xchg
into
or
stc
mov
cmp
push
sti
aad
into
das
or
jns
sbb
push
cwtl
or
push
test
dec
cmp
roll
jp
lcall
xor
repnz
sbb
cwtl
xor
mov
and
mov
mov
add
test
push
imul
rorl
adc
ficomps
repnz
adc
movsb
mov
add
lret
outsb
pop
enter
lret
mov
jle
lcall
cltd
dec
adc
mov
sbb
inc
adc
shr
ffree
adc
repz
jmp
nop
idivb
mov
bound
out
mov
aad
mov
enter
mov
inc
shl
aas
pop
jne
mov
adc
push
bound
lods
mov
movsl
mov
mov
cs
sahf
repnz
mov
stc
clc
inc
jns
pusha
rorb
push
jb
adc
push
jo
enter
inc
jle
mov
pop
sarb
and
ror
lds
sarl
cmpsl
and
fidivs
iret
repz
ljmp
and
gs
and
add
push
daa
ret
aam
rorb
jl
xor
sub
arpl
jecxz
xchg
cmp
fidivs
movsl
out
jle
mov
mov
aaa
push
pop
in
dec
cmp
xor
push
mov
fldenv
push
and
int
inc
dec
cmovg
xchg
test
ret
cmc
adc
into
lret
cmp
mov
mov
sbb
mov
out
sub
aaa
sbb
punpcklwd
xchg
dec
push
loop
dec
push
mov
mov
outsl
out
mov
jmp
fsub
mov
add
pop
xor
into
push
inc
and
mov
rcrl
lods
dec
adc
jle
pop
cmp
in
mov
push
dec
jbe
or
cmpsl
inc
inc
xorl
mov
or
shrb
notl
negl
mov
cli
shll
imul
adc
dec
sub
xor
jle
mov
pop
sub
add
pop
mov
popf
pop
js
test
jae
and
fwait
mov
int
sbb
insl
push
in
adc
hlt
nop
mov
mov
popa
ret
push
sbb
cmpl
inc
loope
mov
les
sbb
imul
lcall
enter
fisubrl
fs
ret
mov
cmp
inc
into
jbe
insb
jno
mov
popl
mov
dec
and
mov
sub
sub
std
pop
adc
mov
test
movsl
ljmp
sbb
xchg
pushl
inc
leave
cmpsb
jnp
cld
int3
jnp
jo
icebp
cmp
out
test
lea
out
add
inc
xor
jge
ret
scas
jae
xor
sub
bound
shlb
mov
or
lahf
push
sti
out
pop
imul
mov
push
inc
push
push
cmp
ror
fadd
enter
xchg
mov
loop
vcvttps2dq
inc
cmpb
out
loop
sub
aam
out
xchg
int
in
daa
jb
or
dec
cld
imul
push
cmpsl
jae
mov
or
int
fldcw
jmp
fs
cltd
and
subb
dec
push
popf
out
sahf
jno
fs
loopne
pop
in
jecxz
mov
inc
lret
negl
les
jge
out
mov
sbbl
or
mov
nop
cmp
add
aaa
inc
jns
push
cltd
mov
ret
ret
fistpl
inc
push
xor
xor
cltd
mov
xchg
push
scas
add
cli
or
cwtl
ss
lds
sbb
dec
mov
call
ss
rcll
in
flds
sub
ret
mov
inc
push
ss
push
jl
pop
pop
nop
insl
fisttps
dec
inc
dec
dec
or
ja
sub
pop
push
add
movsl
dec
scas
fwait
es
dec
aaa
add
sub
add
ficoml
push
xor
out
mov
push
jne
je
xchg
dec
loopne
push
mov
jns
xchg
gs
in
sti
hlt
xor
mov
data16
or
sbb
adc
sub
mov
loope
adc
mov
lock
sub
loope
ljmp
add
test
test
ficomps
dec
mov
xor
ja
xchg
filds
pop
jno
push
adc
addl
cld
dec
pop
outsl
sub
stc
or
jecxz,pn
push
call
jl
pop
and
lret
adc
pop
inc
and
lea
adc
repz
cwtl
sub
rcll
fisttps
jmp
popa
ret
mov
sbb
cld
shrb
xor
mov
pop
xor
lods
adc
enter
jmp
stos
cltd
rolb
mov
pop
xchg
and
pop
movsb
mov
sti
in
and
testl
add
cmp
lret
out
sub
pop
push
js
lcall
sahf
sbb
mov
dec
xor
pusha
inc
dec
jae
inc
int3
dec
in
imul
dec
fs
add
and
xor
xor
sub
add
cmp
or
loopne
xchg
fnstenv
stc
bound
and
ss
imul
jne
dec
push
imul
sbb
stos
call
arpl
repz
ja
mov
push
xchg
mov
test
nopl
mov
in
test
daa
jo
xorl
lods
mov
ret
pop
mov
mov
fisttpll
and
leave
pop
ljmp
push
mov
mov
sub
xchg
test
pop
jmp
sub
dec
jne
mov
lods
pop
mov
pop
repnz
hlt
ss
and
dec
sbb
sub
and
pop
aad
dec
les
add
outsb
mov
dec
mov
ret
mov
dec
into
push
sbb
mov
mov
jne
sub
adcb
hlt
jno
jbe
pop
pop
jmp
lea
js
cmpsl
outsb
sbb
push
jl
jp
sahf
push
repz
mov
cmpsl
pusha
aad
push
xchg
lret
push
and
cmp
jle
push
into
test
xlat
imul
cmpsl
movsl
ss
rorb
inc
loop
ljmp
test
push
pop
xchg
add
mov
jg
add
dec
out
sub
fidivl
push
lods
cmpsb
inc
mov
in
fldenv
ljmp
push
sbb
mov
and
dec
repz
xchg
xor
push
scas
and
loope
push
test
dec
outsl
and
jno
enter
cmp
jno
popa
out
out
rorb
xor
hlt
nop
xchg
sar
rcr
shrb
pop
push
and
pop
pushf
fdivrs
cwtl
mov
clc
stos
int3
or
cwtl
mov
sbb
das
add
in
imul
aaa
jns
mov
js
xlat
addb
jp
xchg
arpl
mov
pop
ljmp
cmpsb
into
jnp
int
inc
and
stos
sbb
mov
inc
xchg
aam
jle
cld
sub
push
shr
jb
and
test
xchg
fs
inc
cwtl
in
mov
inc
outsb
jbe
push
ret
push
mov
sbb
cmp
mov
je
dec
xlat
pop
out
jecxz
push
inc
xchg
in
fwait
pusha
lods
movsl
cmp
dec
es
add
shlb
jbe
xchg
into
jne
dec
insl
inc
sarl
incb
ja
or
call
push
mov
cld
scas
adc
outsl
or
push
fsubp
aad
fimull
adc
popf
mov
pop
push
xchg
mov
in
lcall
mov
cmp
push
nop
cmp
sub
inc
in
pushf
ficomps
fwait
cmp
sbb
mov
mov
dec
mov
xor
loop
bound
pop
daa
jns
ret
test
je
outsb
jno
and
push
or
lea
mov
sub
in
jmp
add
xlat
cmpsl
push
or
mov
or
or
sub
sbb
xchg
cmc
cmp
adc
push
js
aad
ss
lods
pop
xchg
sub
gs
mov
mov
or
pushf
sahf
mov
loopne
mov
dec
push
inc
in
fisubs
repz
sub
push
jl
push
xchg
sbb
jo
insl
xchg
jecxz
inc
and
mov
iret
push
out
xor
sbb
mov
mov
xor
mov
sbb
push
aam
fs
mov
addr16
or
decb
mov
mov
in
jae
mov
and
dec
fpatan
adc
dec
xchg
jecxz
mov
pushf
xor
cli
push
mov
pop
mov
sub
xchg
ficoms
push
mov
loopne
pop
ss
clc
jo
shll
leave
lock
push
xchg
adc
cld
dec
xor
xor
cmpsb
imul
jg
jae
cmp
andl
push
int
fdivrs
add
movsl
je
cmpb
dec
rcrl
fldl
icebp
aam
hlt
ds
dec
sti
mulb
jb
jp
jne
pop
repz
sub
pop
sub
mov
fisubl
or
pop
fstpl
xchg
jbe
xchg
pop
fsubl
rcrb
cmp
dec
dec
lcall
shlb
int
lods
pop
sub
add
jbe
outsb
fcmovu
sbb
push
testb
mov
nop
sub
ror
mov
push
push
cld
pop
inc
cwtl
mov
loope
in
xor
pop
cli
push
aad
iret
fs
mov
pop
leave
cmpl
jl
hlt
negl
lcall
sub
and
fldl
fiadds
cmp
shl
call
gs
add
mulb
adc
lret
lods
push
mov
fcompl
dec
ds
sbb
inc
mov
jae
test
sbb
and
sarl
xor
shrl
adcb
lcall
addl
icebp
jns
jmp
mov
dec
sub
cmp
inc
in
or
pop
jnp
aam
std
sahf
inc
pop
ficomps
repnz
xor
xor
xchg
in
fwait
mov
jecxz
fs
rep
ret
inc
mov
push
push
inc
inc
cmpsl
aad
mov
addr16
fsubrs
pop
sub
ljmp
pop
xchg
movsb
mov
addl
sub
pop
rorl
jecxz
imul
xchg
es
adc
pop
insb
sub
das
dec
jns
es
dec
mov
fnstsw
inc
gs
fs
idivl
dec
bound
mov
lret
lahf
in
aas
lcall
int3
add
mov
cwtl
xor
dec
repz
mov
out
jae
sbbb
xor
lahf
std
jmp
rcl
fwait
sbb
cmp
insb
inc
dec
mov
push
push
mov
add
nop
pop
in
dec
test
xor
cwtl
sub
sbb
aaa
shrb
jnp
das
mov
andl
jb
jo
addr16
pushf
fwait
pop
loop
cli
sbb
or
mov
je
ret
pop
mov
push
out
mov
aad
imul
and
pop
scas
mov
nop
sub
imul
push
fs
pop
lea
dec
hlt
adc
imull
loope
dec
rcrb
nopl
cli
inc
lock
xor
aad
and
adc
cmpsb
jno
cs
dec
addr16
bnd
push
lds
inc
sti
fmuls
push
jno
xor
movsb
mov
xchg
enter
sbb
add
pop
pop
mov
xchg
dec
cli
jecxz
shl
imul
movsb
mov
mov
dec
mov
dec
outsl
adc
adc
pop
and
sarb
lret
sbb
xchg
jb
std
mov
movsl
mov
inc
adc
jl
movsb
ja
pop
jo
xor
inc
es
cmp
xchg
or
sub
dec
stc
outsl
or
cmc
sbbb
gs
aam
or
adc
mov
arpl
cmp
stos
loope
push
pop
decl
inc
out
loopne
sub
stc
lock
out
pop
bound
pushf
jae
fcompl
add
fcoms
in
in
add
loopne
in
xchg
sub
mov
push
sbb
sahf
in
scas
in
mov
arpl
cs
icebp
fisttps
jmp
leave
cmp
mov
into
push
xchg
mov
andl
jmp
fs
inc
mov
or
xchg
cmpsl
xchg
fwait
sub
cmp
loop
test
add
push
add
jecxz
movsb
xor
xor
cld
adc
scas
mov
loop
bnd
rolb
out
je
popa
aaa
cltd
mov
add
shrb
xchg
lock
push
jb
xchg
fwait
je
loop
adc
jle
mov
mov
pop
xchg
pop
cmp
sbb
in
sbb
sahf
pop
fidivrl
cmp
aaa
test
movl
mov
cli
je
dec
add
inc
sub
stos
jg
imul
xchg
jnp
dec
test
add
push
leave
lahf
loop
adc
and
mov
pop
in
data16
pushf
jno
mov
rorb
aas
push
cmp
push
rcll
cmp
push
repz
rorl
fisubs
jae
add
mov
idivb
insl
imull
xor
lret
mov
scas
or
lret
mov
add
nop
inc
xor
jo
push
push
and
idivl
pop
push
mov
shl
iret
fistpl
repnz
jp
lahf
jno
fstps
sbb
xchg
insl
hlt
mov
mov
movsl
pop
cmp
addr16
mov
outsb
push
loopne
or
adc
std
mov
inc
cwtl
inc
push
in
ds
lods
fbld
jg
jge
sbb
add
int
stc
jne
dec
pop
arpl
sub
int
or
xchg
mov
das
xor
or
xchg
jnp
dec
cli
and
xchg
call
pop
in
pop
mov
cmc
jge
stos
fwait
or
adc
test
or
mov
add
jle
push
jmp
mov
mov
icebp
mov
xor
mov
mov
in
shll
push
call
mov
lock
sub
jnp
mov
sti
cltd
lret
loop
stos
addr16
loopne
push
rcll
pop
shll
inc
xchg
mov
jmp
cmp
cs
pop
fbstp
call
sub
push
mov
cmc
sbb
ficompl
mov
imul
adc
rorl
pop
xchg
xor
and
into
pop
out
ss
aas
pop
cmp
je
inc
test
push
xchg
popa
mov
into
pop
ds
jae
jne
in
outsb
adc
rcl
cltd
loop
lea
daa
sub
sbb
push
orl
mov
sub
cmp
mov
pop
stos
or
pop
fdivr
sbb
push
cmp
add
xchg
xor
or
enter
or
mov
sahf
sub
mov
nop
push
add
jg
mov
mov
dec
inc
mov
or
adc
stc
mov
xor
xor
or
mov
xor
jecxz
pop
enter
out
add
inc
push
pop
lods
sbb
scas
push
push
push
lahf
lret
loope
pop
std
jmp
mov
popf
jb
mov
cld
shll
popf
ret
lock
cmp
outsb
push
xor
into
jb
mov
out
stos
cs
jmp
lds
sbb
test
mov
push
cs
push
ret
ss
sahf
mov
push
and
insl
aaa
leave
dec
ljmp
nop
out
repnz
and
sbb
test
mov
dec
fdivr
rclb
sbb
sarb
dec
nop
mov
sub
mov
push
mov
mov
cwtl
or
ja
and
test
in
pushf
pop
lods
sbb
pop
fldl
jnp
dec
test
aas
stos
sub
mov
into
cltd
ljmp
adc
int3
xor
ja
push
sbb
dec
cmp
roll
mov
cmpsl
and
mov
jmp
imul
mulb
fs
mov
inc
inc
repnz
mov
jmp
adc
pop
mov
dec
adc
sbb
mov
dec
xlat
pop
mov
xchg
or
xchg
daa
sub
xchg
pop
test
push
fsubr
aas
push
mov
test
test
fstpl
inc
add
pop
pop
mov
enter
subb
aad
jbe
xchg
jge
xor
push
push
xchg
or
lret
test
xor
jmp
add
call
fistl
shll
shl
or
data16
push
into
movsb
hlt
and
xor
ljmp
push
test
xor
sub
or
dec
pop
vcmpss
addb
mov
sarl
lret
popa
mov
and
dec
or
repz
inc
shll
repnz
sbb
or
xor
mov
mov
push
jbe
mov
dec
cmpsl
and
fldcw
insl
sub
push
sbb
fcmovu
data16
loope
bound
ss
xor
imul
in
dec
imul
inc
or
mov
fdiv
loop
cmp
and
jp
and
lea
or
xor
movsb
je
shlb
ss
pop
divb
jmp
and
mov
or
jne
ret
add
imul
outsb
dec
cmpsl
bound
mov
nop
xchg
shlb
daa
xor
and
mov
das
jge
mov
jo
lret
into
mov
mov
in
fs
ljmp
fstps
in
cmp
or
jb
xchg
pop
cwtl
add
cmp
jae
push
jno
and
or
pop
add
es
inc
lods
lret
sub
popl
es
ja
les
negb
and
mov
adc
fmuls
lds
daa
mov
js
cmpsb
cmovbe
mov
je
mov
inc
dec
out
jo
inc
dec
xorb
adc
cltd
xor
out
and
ljmp
sarl
fs
adc
in
cwtl
jo
sub
mov
cmpsl
cmc
mov
xchg
cmc
cmp
pop
mov
jp
out
fnsetpm(287
inc
ret
sar
xchg
push
inc
in
les
in
test
in
dec
inc
out
xchg
into
imul
jno
mov
jno
jae
sbbb
das
xor
fs
lock
fstpt
jb
jge
ret
lods
nop
lods
insb
ss
sbb
mov
popa
js
xor
dec
das
jo
cmp
mov
mov
cli
gs
mov
rorl
es
stos
cmp
sarb
test
push
test
pop
and
ss
out
les
xchg
daa
and
rorl
sbb
xor
aas
pop
jbe
mov
and
ret
dec
dec
mov
fiadds
sbb
scas
jns
jne
das
xchg
bound
les
dec
or
mov
xor
gs
fsubrs
rorb
jae
mov
lahf
in
aaa
jg
adc
xlat
jl
aas
fcomps
cwtl
or
xor
cmp
adc
push
push
out
ja
sub
lods
xor
add
stos
add
loopne
pop
xchg
divl
dec
mov
ret
inc
cmpsb
out
in
pop
bound
xchg
jge
je
xchg
lods
mov
dec
jg
cwtl
sbb
and
lret
shr
out
push
mov
pop
shrb
ret
fidivs
das
stos
into
pushf
mov
mov
out
and
out
addr16
inc
rcrb
xlat
or
ret
and
out
sbb
faddp
ljmp
es
sbb
and
cmp
sbb
jge
mov
jg
stc
xchg
adc
jns
and
add
or
sahf
pop
fcoml
int3
pop
cli
mov
mov
cmp
gs
loopne
adc
int
enter
cltd
mov
xchg
push
push
pusha
aam
pop
adcl
jl
cmp
mov
adc
fsts
pop
xor
je
outsb
ficompl
je
add
mov
jl
add
push
add
xor
inc
fisttps
bound
dec
popf
mov
ret
cld
xchg
mov
aam
orb
inc
cmp
adcl
dec
ljmp
out
jg
into
jb
push
int
jge
test
sarl
test
add
andb
mov
mov
divl
push
pop
sbb
cld
push
imul
inc
pop
iret
insl
pop
inc
jnp
pop
sbb
shlb
nop
sbb
popf
adc
xchg
fisubs
and
ja
in
cmp
push
pop
stos
sub
icebp
ja
test
sbb
mov
arpl
adc
outsl
andb
fwait
sti
pop
popf
or
dec
jle
daa
cmp
movsl
mov
push
ret
mov
cltd
aas
cmpxchg
push
jle
sub
int3
inc
hlt
into
and
mov
imul
and
or
pop
jg
cmpsl
inc
shrb
mov
stos
push
fcomps
mov
cmp
pop
mov
fimull
pop
add
ret
sti
adc
call
jecxz
clc
mov
jg
sahf
mov
outsb
mull
js
xchg
fwait
stc
and
je
and
inc
jbe
pop
cwtl
push
lret
clc
bound
add
adc
mov
popf
mov
cmpsl
mov
pop
mov
clc
into
push
les
sbb
xchg
insb
movsb
lock
les
jge
adc
pop
mov
sahf
daa
cmp
test
mov
pop
repz
mov
lret
mov
insb
outsl
and
pusha
hlt
jl
sub
mov
imul
push
add
cltd
mov
mov
aad
incl
cli
pop
pop
imul
jmp
scas
xchg
and
xor
mov
pop
mov
ds
add
inc
pusha
aam
cs
movsl
in
std
or
adc
xchg
loop
and
push
ljmp
add
pop
idivb
xor
mov
gs
push
pusha
pop
mov
xchg
sbb
mov
movsb
out
addr16
mov
mov
push
cmc
lea
es
scas
cmp
dec
cs
or
inc
sbb
sub
dec
and
icebp
aaa
in
das
pop
dec
mov
es
out
sbb
popf
mov
dec
xchg
nopl
mov
mov
shl
or
dec
jnp
test
jb
adc
dec
dec
ja
cmc
mov
dec
jmp
push
xor
int
in
inc
mov
cmp
pop
xchg
mov
xor
cli
shll
mov
and
inc
lcall
sub
lret
in
out
shr
scas
pop
inc
push
add
daa
lods
mov
cli
push
adc
cmpsb
dec
xor
lret
pusha
adc
inc
out
das
push
lods
testb
cmp
mov
lea
loope
psllq
push
add
mov
xchg
or
jno
sbb
jg
jmp
mov
sub
cmc
xor
pop
xchg
pop
bound
cmp
inc
push
sub
cmp
hlt
test
jbe
pop
pushf
lods
popl
inc
dec
sub
cmp
add
mov
inc
fisubrs
ret
mov
pop
nop
and
stc
sub
gs
test
mov
mov
jge
gs
nop
and
xchg
test
ss
push
cmp
out
mov
pop
jecxz
pop
nop
xchg
xchg
and
je
adc
push
mov
pop
in
fidivrl
hlt
push
fdivs
addr16
mov
pop
lock
jno
cmp
neg
mov
pop
adc
sbb
mov
fiaddl
mov
movsb
pop
cli
jno
or
ret
ds
dec
jb
test
sub
push
push
jle
mov
inc
cmp
mov
ja
add
jg
filds
int
cmp
ds
imul
push
pushf
add
imul
fwait
gs
cmp
xchg
mov
je
loope
inc
adc
jne
pop
sbb
jg
jae
hlt
bound
dec
pop
je
or
out
cmp
lea
add
leave
push
mov
sub
mov
mov
push
stos
or
jo
push
popa
call
add
or
movsb
jo
xchg
ret
mov
popf
xchg
test
ljmp
sbb
loop
mov
inc
adc
add
dec
mov
daa
enter
push
and
aaa
pop
cmp
fists
push
mov
push
insb
jnp
dec
push
jno
push
inc
imul
dec
fsts
jns
dec
sub
push
lcall
push
push
out
aad
rorl
fstpt
stos
roll
jnp
push
cmp
pushf
arpl
push
adc
jge
mov
cmp
loopne
repnz
or
inc
lret
repnz
xchg
add
xor
jb
sub
xchg
lds
insl
jecxz
xchg
mov
lods
mov
fwait
adc
mov
pop
mov
cmp
add
es
sbb
repnz
push
stos
and
test
push
subl
shl
and
jns
cmpsl
scas
adc
cmp
adc
and
ret
inc
fs
or
andb
fidivrs
roll
pop
out
adc
pop
aad
xor
fdivp
sbb
and
stos
push
pop
sbb
ja
aad
xadd
out
in
frstor
xor
cmpsl
aam
xorl
dec
adc
lret
cmp
fs
cmp
fadds
push
or
mov
inc
aas
loope
add
push
xor
dec
adc
xchg
in
lods
lock
gs
jp
sbb
jp
add
mov
ret
xchg
test
aaa
fistpl
adc
mov
aam
or
fldl
cmp
lret
test
sbbl
jmp
arpl
xchg
or
out
push
mov
pushf
outsl
test
sub
push
pop
and
jns
ss
popa
lods
test
jl
pop
push
sub
xchg
hlt
int
inc
leave
mov
sbb
out
xchg
mov
or
fstl
mov
fisubl
inc
mov
in
sbbb
adc
pop
xor
enter
imul
mov
shrl
std
mov
mov
adc
in
movsl
dec
imul
arpl
das
mov
call
push
ja
mov
fistpll
fidivrl
test
popa
loop
cmp
aad
jo
xor
fwait
lock
in
outsl
call
inc
xchg
add
and
add
cmp
sub
pop
cld
ss
add
popa
icebp
les
dec
sahf
mov
sahf
inc
jp
out
xor
add
jp,pt
mov
adc
or
push
inc
imul
mov
cmpsl
movsbl
mov
and
push
ficomps
xor
aam
andl
mov
jp
push
lahf
jle
xor
jmp
xchg
or
jecxz
sub
loope
repz
les
jae
jo
daa
cmp
andl
dec
cmpsb
leave
int3
ret
leave
stc
xchg
mov
out
inc
lcall
outsl
pop
push
cmp
cmc
jae
ja
pop
push
inc
mov
js
out
pop
loopne
cli
adc
inc
pop
cwtl
dec
pop
mov
cmc
xor
repz
repz
inc
sub
iret
mov
test
and
insl
shlb
mov
pop
cmp
add
or
ret
and
int3
pop
xchg
fwait
daa
jp
in
push
pop
sub
hlt
mov
fisttpll
push
pusha
lods
jmp
xlat
int3
loope
cmp
and
push
cmp
xchg
cmpsl
sahf
cwtl
and
insl
dec
mov
inc
repnz
insb
xor
test
dec
lds
mov
lock
cmp
push
xor
mov
pop
aad
jno
sti
jb
stos
std
pop
jno
mov
push
dec
jp
jae,pt
sbb
adc
roll
or
out
mov
cmp
sbb
mov
andb
push
cmp
repnz
sub
xor
sub
adc
out
jo
mov
xlat
adc
insl
les
pusha
arpl
stc
cmp
fs
test
shlb
sbb
out
xor
lcall
pop
pop
aam
inc
dec
mov
cld
mov
cmp
cld
aad
dec
or
pop
pushf
aas
dec
mov
xchg
insl
or
jns
aaa
rorl
idivl
jmp
xor
sub
jge
mov
xchg
in
pop
adc
sbb
cltd
insl
stc
jmp
js
sbb
stos
jecxz
inc
popa
mov
jl
add
sti
fs
lret
bound
push
inc
call
add
lea
lods
mov
cwtl
xchg
ret
pop
mov
dec
outsl
mov
add
icebp
adcb
mov
ja
add
in
and
mov
push
mov
jecxz
fcoml
xor
dec
jl
mov
dec
add
int
dec
icebp
inc
aaa
push
pop
imul
insb
or
test
jb
dec
arpl
es
inc
bound
out
out
fdivr
xor
int
sub
add
hlt
inc
mov
cmp
add
mov
shll
cmp
sub
lock
push
mov
jb
mov
inc
jae
aas
add
in
mov
movsb
xor
insb
or
mov
cld
mov
insb
es
pop
xchg
push
and
mov
fidivl
ss
jmp
mov
lods
add
add
stos
sahf
hlt
sbb
or
dec
loopne
dec
inc
mov
sbb
xchg
jg
subb
lea
dec
int3
pop
gs
adc
mov
in
out
xlat
push
fisubrl
mov
cli
inc
mov
jno
push
fwait
repz
cmp
sarl
aaa
test
or
rclb
push
loope
lea
test
cmp
sahf
cmp
loope
xchg
pop
jp
fisttpl
mov
movsl
cmp
call
dec
and
and
test
mov
insb
pop
and
adc
sub
cli
fdivrs
mov
push
sahf
adc
xor
cmp
and
int
jne
inc
idivl
pop
push
dec
fdivrl
pop
cmp
sub
imul
iret
leave
push
loop
and
aam
enter
out
jno
dec
in
xchg
or
fstpt
inc
jg
ret
inc
dec
mov
mov
movl
push
mov
cmpsl
inc
sahf
push
pmulhuw
sub
or
shll
and
push
pop
pop
dec
sti
adc
cmp
outsb
fildl
inc
repnz
scas
add
mov
jo
mov
xor
out
inc
xlat
sbb
jbe
pushf
loope
pop
call
jns
int
push
popf
rolb
cli
add
and
in
mov
add
mov
xlat
jne
jg
and
lret
popf
pop
out
mov
adc
rcrl
sbb
ljmp
fsub
xchg
xor
mov
mov
add
adc
sbb
add
dec
jmp
les
push
pop
enter
arpl
mov
popa
mov
cmp
insb
inc
dec
add
outsb
cmpl
push
cmc
xor
and
adc
or
or
fcoml
jae
nop
lret
sub
mov
mov
inc
scas
or
arpl
stos
test
cmp
cld
mov
cmp
fcom
ja
in
push
imul
div
xchg
lods
pop
repnz
or
xchg
jp
or
cmp
mov
lret
cmpsl
loopne
repnz
fs
fcoml
out
inc
or
shll
jge,pt
orb
pushl
les
pop
std
and
mov
mov
pop
pop
pushf
out
out
lock
std
or
cmp
ss
push
roll
inc
aas
mov
movsb
xor
sbb
popf
repz
push
loop
ror
lret
inc
jns
push
into
sbb
adc
ret
dec
roll
sbb
insb
popa
fisttps
mov
push
mov
mov
pop
xchg
push
sbbl
ficompl
xor
loop
cmc
ja
loopne
push
scas
rorb
scas
pop
push
scas
lods
mov
cmc
shrb
movsb
or
mov
pop
je
icebp
ja
mov
daa
or
sbb
push
dec
inc
lods
mov
lds
push
imul
pop
inc
cmp
add
shl
sub
push
aad
inc
mov
or
cmp
adc
push
in
sub
imul
sub
or
dec
shr
xlat
mov
jecxz
enter
movsb
scas
adc
popl
divl
stos
sti
fdiv
jne
sub
out
or
aam
add
inc
movsl
jb
dec
adc
add
and
mov
xchg
addr16
add
mov
gs
inc
inc
rolb
jo
adc
mov
pop
movsl
xlat
jecxz
and
scas
out
pusha
test
or
test
push
inc
mov
sbb
sti
cwtl
btcl
dec
filds
mov
fcmovnu
push
aas
xor
stc
jmp
fwait
scas
rcrl
aad
pop
lret
popf
cmpsb
lock
sub
xor
movl
mov
xchg
fsubrs
pop
add
xchg
ret
xlat
test
jne
mov
jo
mov
or
push
scas
leave
jg
fs
test
leave
popa
pop
inc
inc
sub
mov
xchg
xchg
mov
in
push
sarl
sarl
int3
dec
jp
xor
imul
fsubp
jo
dec
or
sub
or
sarl
ret
out
sbb
jecxz
jns
decb
jno
push
mov
rcr
inc
ljmp
or
popl
adcb
aaa
cmp
mov
xor
iret
xor
or
idiv
and
stos
mov
addr16
loopne
dec
or
inc
push
jg
adcl
sbb
mov
fldl
dec
xor
push
pop
mov
sbb
jl
loopne
daa
push
mov
int3
lcall
rolb
fnstsw
xchg
imul
jnp
fldcw
ds
xchg
inc
pushf
repz
not
in
loop
cli
xor
inc
xor
and
cwtl
adc
cld
xor
inc
sbb
imul
test
aam
mov
std
sbb
jo
xchg
lahf
mov
orl
push
jg
out
mov
jg
add
push
xor
into
xor
or
jne
jns
add
loope
mov
or
push
sbb
pusha
add
lahf
mov
sbb
fimull
jns
inc
mov
inc
adc
sbb
sub
rclb
jbe
loopne
insb
nop
imul
xchg
add
in
mov
mov
mov
push
adcb
jne
push
xchg
mov
push
fdiv
mov
cmp
ja
adc
push
dec
sti
lock
roll
test
pop
ror
lods
test
imul
fsubrs
add
jge
pop
add
mov
lods
loop
in
and
xor
sbb
jb
cltd
loopne
test
in
jp
mov
jae
jecxz,pn
enter
shl
shrb
mov
test
mov
dec
clc
test
add
mov
imul
mov
lods
xlat
mov
cwtl
mov
ror
add
cli
inc
and
mov
les
div
dec
dec
pop
gs
movsb
or
nop
sbb
pushf
addr16
outsb
sbb
repz
adc
hlt
push
in
cmpsl
data16
inc
loopne
shll
stc
mov
data16
dec
push
lods
inc
lds
cmpsl
stos
jnp
cmpsb
sbb
rcrb
and
test
aam
subl
and
jnp
dec
inc
sbb
or
cmc
hlt
pop
pushf
mov
lret
rcll
movsl
pop
cmp
push
mov
inc
xchg
pop
faddl
mov
xor
in
or
lds
mov
aam
sub
dec
lds
mov
ja
lds
inc
add
pop
jo
test
bound
loope
push
xor
and
rclb
and
lret
jae
sti
sbb
pop
test
inc
jg
and
mov
test
fwait
cwtl
stos
js
mov
jo
and
ret
hlt
jne
ja
xchg
inc
push
xchg
push
adc
js,pt
pop
xor
iret
sbb
inc
mov
shlb
loop
call
lahf
xrelease
jmp
cmp
insb
fs
inc
stc
mov
jg
mov
jnp
data16
inc
mov
cmc
xchg
xor
fbstp
out
adc
sub
jg
cmpsl
jmp
repz
repnz
cmpsb
jmp
in
or
xlat
add
push
stos
dec
mov
pop
icebp
pop
aad
pusha
sub
dec
xor
sub
fs
fadds
outsb
std
mov
fsubrl
sub
andl
in
push
pop
adc
ror
mov
mov
call
scas
ret
cmp
lods
popf
add
xor
mov
xor
aad
pop
jns
outsl
dec
int3
lret
nop
sub
fsubr
lock
inc
dec
in
xchg
lahf
jbe
js
mov
adcl
pop
or
mull
fwait
mov
lahf
je
sbb
xchg
and
fs
mov
pop
dec
dec
ja
lods
add
outsb
mov
jb
fisttps
pop
push
mov
push
cmc
pop
add
in
mov
pushf
push
add
jmp
subl
or
in
xchg
mov
cmp
dec
cmp
xchg
xchg
cmc
inc
or
mov
sbb
push
push
fwait
rolb
incb
pop
xchg
adc
js
stos
lods
cltd
push
rclb
cmc
mov
cwtl
pop
cmp
adc
add
adc
out
pushf
inc
icebp
pop
xor
pop
inc
imul
sub
dec
sbb
lock
shrb
aad
cwtl
mov
inc
aas
inc
mov
push
loope
xor
out
jp
gs
in
insl
or
jmp
sbb
out
mov
xchg
insb
fisttpl
jmp
jne
pop
cmp
mov
mov
movsl
cmp
fwait
sub
pop
sub
lret
xor
jg
inc
or
jb
adc
jge
gs
cmc
pop
int3
testb
cmp
fnstenv
popa
out
stc
sarb
push
xchg
push
or
popa
push
pop
lret
test
xchg
and
pop
xor
ljmp
push
scas
test
pushf
mov
insl
or
dec
jmp
or
or
sub
push
mov
pop
and
scas
adc
sub
or
jle
shrl
mov
js
add
das
stos
cmc
sub
ud2
jmp
sub
test
lret
sahf
std
jmp
xchg
add
pop
and
sbb
daa
rolb
es
mov
push
cmp
sub
rcrl
or
test
xor
mov
shll
popf
ss
es
test
jmp
in
es
xchg
in
cltd
loop
sbb
fsubrl
mov
pop
add
xchg
shll
and
inc
adc
int
xchg
or
mov
cmp
into
fcompl
push
add
dec
and
out
les
cltd
mov
mov
repnz
loope
add
dec
test
dec
mov
out
lret
pop
cwtl
xor
sub
or
mov
lret
ret
ficoml
sbb
jmp
jmp
sbb
jnp
lcall
mov
clc
ret
fsubrl
mov
lahf
add
aaa
push
cmpsl
or
in
je
mov
push
xchg
fdivl
jns
mov
ficoml
adc
data16
mov
adc
adc
push
addr16
out
xchg
xchg
scas
and
leave
ss
pusha
fwait
sti
mov
les
std
mov
roll
aad
cmp
push
in
or
cmc
xchg
and
pop
add
cli
scas
mov
dec
cs
cmpsb
sub
lahf
in
cld
adcl
cmpsb
ret
movsb
mov
mov
xor
xor
mov
jno
xchg
test
sti
cmp
adc
imulb
adc
xor
gs
test
push
ss
pop
rorb
mov
sub
jecxz
pop
cmpsl
adc
push
jno
sbb
dec
sbb
insb
fcoms
xchg
push
in
stc
aad
shrb
int
or
jp
ret
out
lea
inc
cmp
fadds
lods
lods
jns
addr16
dec
jp
push
xor
inc
inc
mov
gs
add
and
shl
test
dec
les
xlat
lock
xchg
mov
in
push
out
in
xor
arpl
xchg
les
js
push
leave
sbb
pop
ss
dec
mov
lahf
outsb
cmp
std
inc
mov
xlat
sbb
jl
shlb
sub
push
sub
cmp
clc
mov
dec
pop
jl
lds
xchg
rcll
mov
imul
in
fimuls
pop
cltd
fdivrs
jecxz
and
or
cmovle
in
in
scas
push
xchg
test
pop
leave
cmp
popf
mov
adc
call
or
and
mov
loop
cmp
in
out
jg
fprem1
fstp
pop
sub
mul
inc
xchg
push
jae
mov
mov
scas
rcrl
and
test
add
sbb
lds
je
adc
xor
jl
xchg
adc
add
cmp
or
cmp
mov
insl
out
sub
aaa
jne
jmp
imul
out
lret
mov
push
scas
inc
inc
adc
test
mov
xor
jns
dec
fimuls
inc
cmp
or
cli
out
add
test
leave
test
sarl
sub
scas
add
xchg
lret
iretw
mov
mov
scas
mov
cltd
xor
and
push
out
jl
jecxz
pop
jl
pop
push
mov
adc
lahf
jecxz
fsubs
mov
cmpxchg
shlb
jb
fwait
pusha
dec
fldcw
outsl
aam
daa
sti
cmp
jecxz
jb
jp
out
sbb
sub
fwait
in
push
and
mov
xchg
scas
stc
fwait
js
loopne
mov
std
add
ds
das
int
lods
loop
cld
lds
push
jg
scas
js
jne
sbb
lahf
insl
inc
je
sub
scas
rcrb
pushf
cmp
add
shrl
popf
cmp
test
push
cld
ljmp
lretw
insl
sub
and
fwait
mov
out
movsb
leave
pop
adc
test
fstl
sbb
sub
mov
xchg
xor
call
pop
adc
jge
inc
sub
pop
dec
rorl
iret
shlb
les
test
test
xchg
pop
sub
mov
in
sti
dec
arpl
ret
xlat
push
mov
mov
sub
jne
je
push
fcmove
pop
movb
cltd
xchg
pushf
fsubrs
dec
nop
xchg
or
cmp
sbb
push
sbb
shrb
adc
int
dec
inc
clc
cmpsl
dec
std
mov
cmpsl
or
into
fldt
arpl
dec
cmc
cltd
mov
jb
in
sub
jmp
xor
pushf
into
or
stos
xchg
sub
lea
add
inc
out
push
test
and
pop
in
test
sti
push
mov
sub
scas
sbb
jmp
and
lock
jle
sar
cmp
icebp
or
in
add
add
jecxz
mov
adc
dec
neg
shlb
xchg
sbb
xchg
and
push
mov
cmpsb
ret
push
push
xor
pop
pop
pop
clc
adc
incl
cmp
inc
lret
andb
push
xchg
or
repz
xlat
clc
adc
shrb
iret
out
notl
jns
jne
mov
call
stos
int3
sub
pushf
xor
mov
dec
xchg
pop
aas
jmp
out
pop
and
xor
add
pusha
dec
shlb
jge
xchg
repz
and
enter
ja
add
sub
jge
sahf
mov
loop
inc
ss
xor
das
loopne
imul
clc
in
pop
xchg
jle
mov
mov
mov
jb
adc
popf
sub
scas
loopne
lock
in
stos
cmp
sar
dec
fwait
mov
pushl
idiv
jmp
dec
call
add
aas
cmp
scas
add
mov
fildl
sbb
arpl
rcrb
rcl
xchg
rcl
jle
filds
nop
std
sbb
fimuls
sti
xchg
rorb
test
xchg
adc
cmp
xchg
mov
jb
jb
stos
and
or
cmpsb
shll
push
dec
cmp
inc
das
movsl
dec
or
ret
inc
mov
dec
ss
gs
jns
xchg
cmpsl
xor
inc
sub
loope
or
mov
pop
das
mov
insb
je
rcll
addr16
mov
adc
loopne
cmp
ljmp
cmp
or
sub
stos
addl
test
xchg
adc
aaa
loop
cmp
sbb
and
inc
in
cmp
popl
into
add
xor
fcoml
cmpsb
arpl
daa
mov
fistpl
sub
enter
vpmacsww
insl
push
pop
mov
mov
xor
sbbl
imul
inc
vmovaps
jp
mov
sbb
lahf
and
sbb
ljmp
mov
leave
adc
aas
arpl
dec
popa
je
mov
jbe
mov
clc
xchg
add
or
aaa
cmp
movsb
pop
sbb
jp
pop
adc
test
data16
hlt
je
jo
lcall
fs
lahf
pop
movsl
mov
xchg
push
cwtl
and
insl
movsl
leave
lock
and
lret
lods
push
cmp
xlat
xchg
out
out
ss
rcrb
std
aaa
pop
push
and
mov
pop
mov
push
mov
rclb
jmp
or
cmp
or
jnp
in
outsl
fdivrs
pusha
jp
jae
imul
xchg
xor
data16
lock
cmpsl
jnp
and
adc
adc
mov
jbe
pushf
cmp
repnz
mov
pushf
div
sub
dec
sahf
in
aas
xor
cmc
push
inc
stos
cmp
adc
sbb
dec
div
hlt
std
test
or
fldcw
mov
mov
pop
jne
push
jmp
jne
adc
pusha
sbb
bound
dec
mov
lock
sbb
bound
lods
add
sub
repnz
jb
fistps
cwtl
cmp
pop
pop
adc
test
adc
ss
ret
jmp
aam
mov
jecxz
hlt
sarl
fiaddl
daa
mov
popa
pop
stc
insl
mov
and
cmpsb
mov
add
mov
daa
mov
pop
mov
stos
in
jl,pt
aas
loopne
insb
dec
sub
jbe
or
xchg
xchg
adc
xchg
pop
push
fldl
cwtl
aam
inc
lods
pop
or
push
jmp
dec
jmp
or
iret
int
aad
ret
mov
mov
xchg
and
pop
dec
jp
jp
mov
mov
jp
ret
outsb
xor
daa
sarb
sbb
and
jg
test
cwtl
mov
mov
clc
mov
push
and
dec
orb
mov
add
mov
xor
in
sbb
jmp
add
mov
jb
lods
pop
jp
nop
push
call
push
test
andl
pop
rcrb
outsb
cs
lcall
neg
adc
inc
out
mov
and
iret
sbb
pop
aas
enter
out
xchg
ficoms
leave
repnz
adc
jmp
pop
push
xor
scas
and
mov
imul
hlt
pushf
xchg
xorl
jns
loopne
int
lds
push
sub
popf
lahf
cmp
aam
jnp
fmul
mov
shlb
cmp
mov
dec
fldt
pop
lds
addr16
add
cwtl
push
mov
xor
xor
sub
push
adcb
movsb
int
in
push
imul
ds
mov
ljmp
scas
inc
cmp
jns
sub
sub
mov
cmpsb
fcoml
lahf
js
and
add
imul
out
lock
push
add
inc
sbb
push
pop
sub
add
cwtl
add
jge
push
repnz
mov
mov
es
in
sbb
push
xor
or
and
or
rorb
jns
jb
nop
das
jge
in
out
jbe
push
pop
jl
lods
sbb
sub
xchg
int
sub
mov
fcompl
pop
fcmovne
xchg
push
test
sahf
dec
inc
lret
mov
out
lcall
mov
sbb
push
xor
or
das
inc
xor
scas
data16
test
sbb
pop
adc
test
addr16
fidivrl
adc
nop
or
rorb
out
lcall
idivl
test
sub
cmp
mov
pusha
jg
scas
mov
push
outsb
jle
iret
xor
stos
xor
mov
in
inc
jb
inc
ret
and
jmp
lea
push
jo
and
sbb
add
imul
clc
cmp
cltd
add
lret
test
inc
imul
les
stos
test
jbe,pt
loop
sub
sti
xor
dec
std
sbb
or
lcall
ret
cmp
stc
dec
shl
push
or
mov
sbb
mov
popa
sbb
aaa
jae
ret
stos
in
push
addr16
jnp
inc
and
mov
and
ficoml
xor
pop
stos
pop
inc
sub
pusha
add
cmp
icebp
jge
rcr
fistl
push
sub
out
mov
push
mov
mov
sbb
adc
arpl
cmpsl
jp
imul
add
stos
aad
int3
inc
push
insb
imul
inc
lcall
outsb
lea
sub
or
jecxz
popa
dec
das
fidivrs
ret
xlat
jge
add
cld
add
ds
sub
lcall
movsb
xchg
mov
mov
pop
popf
fimuls
fsubs
in
mov
mov
or
xchg
pop
insl
inc
rcrl
fsubr
add
and
mov
add
incl
int
ss
hlt
fildll
mov
dec
daa
iret
xor
sbb
cmp
sbbb
xlat
outsl
xor
dec
outsb
test
pop
sub
adc
jecxz
cmp
xchg
mov
cmpsb
shl
pop
adc
notb
xchg
mov
xchg
adc
adc
in
lahf
cld
xchg
mov
add
insl
cld
rcrl
scas
xchg
mov
mov
xorb
notb
gs
xchg
xor
or
mov
imul
scas
push
ret
jbe
xchg
dec
outsb
scas
dec
ret
xorb
leave
inc
fimuls
daa
push
mov
hlt
rorb
and
call
in
loopne
popf
jl
push
nop
jo
and
mov
fistl
test
push
xchg
dec
mov
push
sbb
scas
popf
add
and
pop
int3
repz
mov
jnp
mov
push
scas
stos
jns
sub
testb
inc
lret
sbb
pop
jb
mov
sbb
es
divb
aam
sub
cmp
es
stos
lods
xchg
jbe
jne
aam
test
jl
divl
or
or
insl
movsb
and
xor
sbb
cmp
insl
push
das
pop
sub
pop
outsl
out
dec
popa
pushf
cmp
repz
int
xchg
iret
in
dec
jl
cltd
adc
and
popa
push
mov
mov
push
mov
gs
inc
mov
cmp
pop
mov
addr16
jmp
bound
cmp
dec
cmc
movsb
pushf
add
das
or
mov
js
mov
push
pop
ja
or
aad
ljmp
sbb
lds
test
and
js
cmp
sti
out
mov
mov
ficompl
push
int
test
push
mov
sbb
pop
lods
mov
push
pushf
adc
xor
pop
test
jne
xchg
sub
outsl
leave
cwtl
rolb
add
repnz
add
mov
movsb
iret
fimuls
cli
fucomp
movsl
cltd
imul
lahf
xchg
popa
inc
or
lock
push
mov
xor
cmpsl
movsl
xor
filds
stos
outsb
insb
icebp
sub
loope
int
jle
sub
sbb
jne
mov
lcall
je
mov
push
cli
out
or
and
dec
repnz
mov
adc
mov
inc
dec
or
pop
and
mov
push
gs
push
mov
jp
and
cwtl
xlat
subb
jmp
mov
imul
push
adcl
add
loope
push
imulb
std
int
insl
lcall
nop
outsb
lcall
push
adc
incl
pop
cmp
mov
mov
int3
mov
sbb
mov
pop
popa
mov
lret
xlat
js
pcmpgtw
or
stos
cwtl
jecxz
add
xchg
mov
jnp
push
daa
leave
cmpsl
test
push
into
xor
or
aam
ret
push
ret
jae
jmp
jge
out
cmp
int3
push
lahf
lods
inc
mov
or
and
mov
std
mov
xor
ss
xchg
out
mov
inc
mull
or
ds
cmpb
pop
mov
into
mov
jmp
fistl
inc
sahf
sbb
inc
pop
ret
mov
mov
push
jp
cmpb
xlat
pop
int3
fwait
ret
nop
cmp
push
test
pop
lret
mov
push
int
push
in
xchg
cwtl
push
push
ret
aaa
mov
jae
fwait
out
lahf
mov
xor
sbb
loope
and
and
mov
jge
pusha
mov
leave
stc
sbb
mov
stos
mov
dec
cmpb
cmp
sub
xor
xor
xor
ljmp
push
pop
iret
test
or
xchg
push
test
xchg
xorb
fwait
xchg
inc
mov
call
data16
cmp
xchg
rcrl
mov
mov
out
mov
xor
add
pop
pop
dec
outsl
mov
loop
in
scas
ss
cld
fwait
shr
pushf
pop
pusha
mov
cmpsl
std
xchg
int
jo
scas
mov
enter
cmp
push
enter
adc
mov
int3
fldcw
mov
aad
scas
mov
out
push
xlat
mov
jp
into
pop
popa
fisubrs
cmc
and
xor
out
fisubs
test
in
leave
in
int3
adc
test
addr16
incb
dec
aas
adc
js
jg
repnz
xlat
cmp
mov
push
loope
in
out
push
pop
inc
push
add
sub
ja
pop
imul
ljmp
jae
lods
dec
sahf
push
dec
test
mov
in
sub
shr
xchg
lcall
add
mov
std
popa
ljmp
or
jno
xchg
aas
clc
ret
sahf
insb
lea
mov
jge
xchg
cs
fsubrl
jg
clc
push
repnz
lea
xchg
sbb
mov
jno
out
aad
stc
add
movsb
int
jg
mov
mov
inc
fsubrl
ljmp
jge
adc
sub
mov
or
lahf
ja
jb
push
xor
xor
repnz
outsb
pushl
pop
lds
mov
and
xchg
loopne
jge
sti
pop
inc
sbb
cli
lods
test
pop
mov
mov
xor
sbb
jbe
rclb
fdivrs
adc
pop
cmp
dec
adc
sbb
ja
mov
push
das
lods
jmp
in
mov
and
mov
fstpt
daa
jmp
cs
push
repz
dec
test
inc
in
loope
test
add
sarb
fdivl
orl
xor
movsl
out
pop
inc
and
pop
mulb
lcall
fisubrl
cwtl
lcall
stos
mov
repnz
add
arpl
dec
mov
orl
push
jo
cmp
mov
mov
mov
xchg
fs
jp
xchg
sub
pushf
sub
cld
out
add
popf
or
aas
mov
repz
cltd
add
aam
not
shl
sub
lret
push
push
and
mov
fidivrs
jae
dec
int
pop
and
gs
or
scas
mov
xchg
cld
movzbl
dec
sub
popw
ret
repz
bound
mov
shrl
pop
jmp
mov
cmp
jecxz
repnz
add
xor
inc
mov
mov
out
iret
push
lcall
lea
shrb
push
add
dec
mov
mov
shll
imul
adc
xor
shlb
mov
repnz
or
push
leave
in
and
adc
bound
out
bound
add
leave
cwtl
fucomi
adc
std
cli
dec
xchg
add
out
loope
jb
add
xchg
jp
dec
push
repz
lcall
in
movsb
imul
repz
iret
jnp
push
mov
cmp
ds
pop
cmp
or
das
leave
lcall
inc
xor
insb
lods
sub
cmp
ss
pop
or
or
dec
arpl
mov
repnz
daa
lods
mov
in
arpl
fcmovbe
inc
push
enter
adc
clc
pop
out
test
and
jb
ds
add
xchg
xchg
push
adc
mov
push
jle
jl
and
mov
fsts
mov
es
stc
cmp
aaa
add
loopne
fwait
or
ja
mov
iret
insb
in
test
pop
daa
dec
shrb
addr16
scas
lds
mov
jb
push
sub
mov
roll
pop
mov
pop
jp
sbb
shll
jo
adcl
shrb
or
pop
and
add
add
stos
aad
scas
dec
data16
insb
dec
ss
fidivrs
or
adc
xchg
cmpsl
das
test
lret
aas
cli
lock
mov
mov
fsub
lcall
pop
testb
sbb
lock
or
mov
or
add
xchg
cmp
stos
jl
call
xor
and
scas
pop
fstpl
jecxz
dec
dec
les
and
xchg
cmp
repnz
dec
or
mov
jbe
test
rcll
aaa
in
sub
lock
jae
loop,pt
pusha
or
xchg
dec
adc
out
fsubs
and
push
mov
mov
cmp
rcll
push
sbb
bound
mov
sti
es
aam
jp
addr16
shll
leave
add
cmp
scas
cmp
push
or
stc
cli
xchg
or
sbb
lea
jbe
sbb
mov
mov
pop
jo
mov
iret
shll
adc
jbe
loopne
imul
test
mov
idivb
icebp
scas
ficoms
cltd
dec
int
loope
je
adc
leave
jmp
pop
lods
cmpsb
pop
push
call
mov
bound
sti
ficomps
pop
jbe
fidivs
ljmp
push
dec
jnp
mov
clc
ret
xor
pushf
test
xor
jae
jmp
mov
jne
test
lahf
mov
je
xchg
jns
dec
fiadds
andl
lock
lods
push
ljmp
scas
lret
cmpsb
dec
pmulhuw
int3
sub
mov
dec
stos
popf
popa
inc
fwait
add
and
ret
ret
add
jbe
push
cld
fs
fdivs
test
ljmp
insb
popa
cwtl
xchg
or
scas
ja
imul
sbbb
sbb
mov
or
ljmp
aas
sub
scas
mov
cmp
jmp
fmulp
fsubp
mov
jns
lcall
pop
mov
int
jnp
icebp
fdivrl
xchg
scas
aad
in
iret
aam
test
leave
mov
shll
fisttpll
mov
dec
cmp
sub
and
into
inc
jmp
and
movsl
dec
xor
mov
lods
xor
mov
mov
js
dec
xchg
xchg
jp
fcoml
adc
xor
inc
sbbl
je
das
stos
adc
jp
leave
cmp
ss
ss
push
aam
sbb
cmpsl
cmp
mov
xor
xor
cmp
fucomp
inc
and
enter
mov
mov
imul
inc
mov
add
fistpl
jns
in
aas
xor
cmp
push
xor
mov
mov
out
shll
insl
ja
jns
lret
adc
popa
or
jbe
clc
fsts
pop
push
dec
lcall
mov
adcl
sarb
xchg
sub
ljmp
push
and
push
pop
sbb
xchg
movsl
or
inc
ds
jno
pushf
cld
push
dec
jle
jmp
cld
sbb
mov
jns
mov
lods
int
movsb
test
pop
in
cltd
enter
lock
sub
mov
mov
pop
hlt
or
scas
rcll
and
imul
jne
in
adc
jno
mov
clc
pop
inc
push
leave
movsl
in
fmull
sub
or
std
lahf
fs
push
out
lea
cs
stos
insb
sbb
fbstp
push
test
lret
fs
mov
pop
roll
jge
lfs
pop
sahf
xor
or
int
in
or
pop
jns
nop
mov
fadd
xchg
or
jl
fmull
call
pop
cmp
jne
ret
push
jg
scas
push
ficoms
sahf
adcb
jg
pop
mov
add
jge
in
int
or
imul
jnp
and
cs
lahf
xor
decl
repz
and
iret
loopne
cltd
xchg
jns
pop
ja
or
cmpsl
out
imul
sub
subl
nop
cs
mov
out
lea
das
test
mov
xor
std
dec
cltd
les
and
xchg
pop
mov
scas
push
xorb
pop
sub
xchg
xchg
aaa
jae
and
add
fsubs
pop
jp
jecxz
lods
mov
lcall
inc
sub
adc
daa
cmp
jno
lods
ss
adc
adc
es
cmpsb
add
stos
sub
insl
addl
js
push
test
stos
pop
int
xchg
cmpsl
fnstsw
cmp
mov
repz
xor
outsl
mov
ljmp
jne
test
popa
fs
stos
cmpl
inc
mov
jg
cli
mov
fstl
lods
mov
imul
cmp
sbb
and
in
sbb
sub
or
ljmp
data16
add
and
dec
push
adc
mulb
ds
xchg
clc
rcl
cmpsb
add
lret
rol
inc
adc
scas
sbb
or
cmc
out
pop
pop
cs
adc
cmc
pop
adc
cmp
cmp
jae
inc
xor
push
shlb
shr
sub
mov
fistps
xchg
scas
loop
mov
repz
dec
or
mov
fwait
and
mov
lods
pop
inc
xabort
lds
dec
in
dec
sbb
xor
hlt
test
sbb
movsb
cmp
cmp
inc
inc
mov
and
fcomi
rcr
add
in
and
cld
jmp
jmp
mov
outsl
push
inc
mov
sbb
stc
push
insb
pop
scas
les
aad
mov
adc
stos
mov
sbbb
add
stos
stos
mov
aaa
pop
cli
or
dec
dec
dec
lcall
mov
lods
fstpt
push
popa
out
mov
xorl
dec
push
in
xchg
inc
push
mov
iret
into
and
mov
cmc
adc
pop
in
rcll
lcall
cmpsl
sub
faddp
or
sbb
cli
dec
xor
lahf
or
pop
jbe
cld
and
add
add
jp
push
out
mov
jle
jmp
addb
jg
push
fldl
cmp
je
adc
shl
pop
mov
or
mov
dec
add
mov
sbb
inc
sub
sub
jns
mov
lds
xchg
scas
into
imull
stos
cmc
pop
adc
js
cvtdq2ps
mov
pusha
dec
sbb
out
inc
push
in
mov
pop
nop
mov
cld
insb
xchg
inc
pop
cmp
cmp
idivl
dec
inc
cmp
je
es
popf
out
adc
cmp
inc
hlt
or
lods
inc
and
repz
into
cmc
mov
or
dec
adc
aas
gs
or
insl
and
test
mov
fcmovu
aam
lahf
aam
idivb
mov
scas
ljmp
lock
dec
in
scas
fucom
les
test
add
sbb
jl
pop
loopne
fimull
movsl
push
int3
and
insl
jb
pop
pop
sarb
incw
movsl
xchg
ja
or
cmpsb
or
insl
cltd
sub
inc
addr16
jo
sbb
or
out
cli
testl
iret
pop
insb
out
jbe
ds
fwait
enter
dec
dec
mov
mov
daa
add
lds
pusha
inc
mov
mov
leave
in
in
in
stc
and
pop
xor
fcoml
popf
ficompl
rcrl
jbe
mov
sbb
cs
pop
xchg
sub
js
xlat
xchg
ret
xchg
add
xor
sbbl
fcoms
insl
out
loopne
sbb
insl
imul
arpl
jg
mov
or
and
cmp
mov
loopne
ds
mov
loop
dec
mov
rcr
lock
mov
mov
cmp
cmp
mov
cmp
push
aas
lahf
sbb
inc
add
sbb
jno
and
fwait
push
inc
out
clc
jae
and
dec
xchg
shl
ljmp
add
cmp
mov
cmp
ret
adcb
shrl
rcrl
mov
pop
outsl
fsts
test
sarb
imul
mov
cmp
stc
cwtl
cli
ljmp
pop
addb
xchg
xchg
loopne
repz
dec
mulb
iret
pop
mov
filds
jbe
setno
pop
pop
fs
int
notl
int
push
jmp
xchg
mov
or
imul
pusha
inc
cmp
mov
shlb
push
sbb
int3
and
imul
dec
push
in
inc
fistpll
add
jno
jg
xlat
push
ja
lods
sbb
mov
fists
pop
addr16
mov
cmp
inc
cltd
fimuls
das
cwtl
int3
aaa
test
or
push
out
out
hlt
jmp
cmp
sbb
xchg
leave
loopne
lods
jmp
adcb
mov
sub
insb
xchg
xchg
movsb
inc
dec
xor
adc
xor
xchg
jbe
push
or
int
cmp
mov
cli
mov
push
jge
idivb
imulb
clc
cs
mov
inc
pop
cmp
adc
cmp
add
mov
or
outsb
popf
scas
xor
pop
lret
or
bound
rorb
test
aam
adc
xchg
jb
fs
out
loopne
shl
iret
adc
push
cmp
out
pop
push
mov
out
inc
nop
push
mov
pop
pop
into
iret
xchg
xchg
sti
or
scas
fnsave
xchg
aas
not
pop
cld
test
mov
jo
cmpsl
cmp
jle
mov
cmp
in
xor
loope
push
imul
xchg
aad
roll
lods
inc
sarl
in
and
inc
mull
repz
mov
loope
sbb
stos
push
fwait
push
outsl
stos
call
mov
mov
xchg
mov
loope
fmuls
inc
sbb
int3
imulb
mov
sub
mov
aaa
lock
loope
lods
mov
shll
and
mov
mov
popa
in
testb
and
lret
cmpl
js
js
shr
jl
pop
push
std
je
es
movsb
cmp
jge
scas
mov
xchg
clc
mov
insl
adc
or
scas
mov
in
popf
inc
mov
dec
in
gs
mov
test
popf
js
scas
or
insb
int3
imul
je
push
jecxz
dec
xor
mov
push
and
cmp
or
xor
jp
fldt
add
fsts
imul
stc
je
out
jne
sub
dec
ds
or
lcall
sub
pushf
cmp
xchg
scas
negb
push
fstpl
pop
cmp
push
fidivrl
xor
pusha
in
aad
imul
sbb
push
pop
jb
xchg
and
push
add
push
xchg
xor
cs
in
dec
ljmp
adc
fiadds
pop
daa
outsb
shr
mov
sbb
jle
xlat
xchg
sti
push
cwtl
inc
nop
push
mov
xchg
sti
mov
cmc
js
mov
stos
fs
sub
lods
mov
jne
pop
jns
jge
test
mov
cmpsb
shrl
in
add
inc
adc
cmp
sahf
test
mov
jbe
sub
rorl
jg
cmp
mov
xchg
jge
and
cmp
jg
cs
or
aad
loopne
inc
jmp
jmp
addl
fmulp
mov
mov
push
and
call
xchg
jl
mov
or
add
jno
sbb
mov
jmp
mov
cmp
jmp
cmpb
or
jmp
cmpsl
js
je
pusha
arpl
subb
or
sbb
add
mov
arpl
pusha
mov
insl
imul
imul
and
push
sti
xor
jp
inc
mov
and
adc
or
xchg
push
jns
rcrb
dec
dec
pop
mov
sbb
ret
outsb
lods
pop
push
push
and
mov
sarb
dec
adc
popf
mov
mov
push
fsubr
outsl
test
dec
xor
pop
lock
or
jp
mov
pop
or
repz
lcall
mov
jae
xchg
adc
sbb
inc
cmp
jecxz
push
loope
fimull
jle
pushf
mov
rorb
cwtl
pop
xadd
xchg
add
out
lods
mov
add
xchg
test
dec
inc
rclb
mov
addr16
xor
inc
cmovbe
mov
insb
enter
push
les
and
xchg
push
push
lea
inc
add
sub
mov
mov
fmuls
test
cld
pop
mov
inc
fcmovbe
inc
sar
stos
test
ljmp
mov
jo
push
xchg
cmpsb
aaa
cmp
sub
xchg
sarb
cmc
lods
lcall
jns
nop
mov
inc
xchg
enter
jle
xlat
and
push
adc
add
rcr
mov
stos
push
sub
mov
rcll
dec
scas
push
fdivrs
lods
xor
push
pop
sub
pop
xchg
andb
aas
andl
divb
xchg
sub
inc
pop
mov
ss
stos
xchg
mov
test
dec
pop
stos
push
push
mov
xchg
pop
outsl
jb
add
cli
cmc
xchg
shrb
out
data16
loop
dec
jle
shr
ja
mov
mov
shrl
sar
js
jb
mov
out
leave
mov
nop
aas
cmp
cs
fdivrp
dec
inc
sbb
adc
in
pop
sub
sub
ficomps
sbb
push
or
outsl
jns
cmp
mov
in
gs
sub
fidivs
cld
inc
jp
mov
mov
jne
es
sub
sub
sbbw
add
cmp
lea
mov
mov
lsl
mov
sbb
in
push
repz
jne
imul
push
in
adc
push
push
and
sub
int
stc
cmpsb
mov
and
cld
jmp
or
dec
jl
add
pushfw
cmpsl
jae
dec
lods
test
or
mov
xchg
pop
sub
mov
ret
jecxz
jp
js
inc
cltd
jg
fistpll
push
mov
mov
sahf
gs
cmp
xchg
jmp
addl
bound
add
inc
jne
inc
pop
xor
leave
sti
xor
jp
xor
aas
subl
pop
shrb
loope
call
enter
pop
cltd
std
aaa
hlt
jns
cmc
pcmpeqd
arpl
sbb
out
xchg
add
cmpsb
xor
inc
cmp
pop
lock
sub
jg
bound
push
insl
mov
lahf
add
jge
xchg
add
sbb
movsl
mov
mov
ficoml
jecxz
push
inc
movsl
repnz
rcl
mov
cmc
lods
jg
aas
fnsave
adc
jg
dec
call
leave
inc
xor
inc
idiv
jmp
sub
orb
fsubrl
dec
mov
xor
mov
cmp
jg
push
imul
jbe
push
clc
adc
adc
push
pusha
cmp
adc
jge
jnp
mov
fdivl
add
popa
es
lahf
xor
shlb
pop
loop
scas
cld
mov
jae
push
lods
pop
jg
dec
icebp
or
push
mov
sub
es
xchg
xchg
cmp
sub
jno
mov
jnp
push
adc
shlb
add
cmpb
cmpb
faddl
adc
ja
das
nop
inc
sarl
fimull
clc
ret
inc
testl
scas
lea
xor
lcall
test
cltd
dec
je
xor
das
faddl
jnp
add
mov
and
sarb
imul
pop
test
idivl
push
inc
lds
mov
mov
clc
ds
icebp
mov
jp
fidivrl
add
push
bound
ds
push
cwtl
cld
pop
adcl
jne
pop
psubb
das
cmpl
push
jmp
push
aas
jmp
subl
jecxz
xor
mov
lret
inc
dec
inc
lods
rclb
inc
xor
paddsb
push
mov
ss
rclb
mov
fwait
nop
pop
adc
rorl
jg
or
dec
cmp
movsb
negl
fs
cmp
mov
jp
mov
repz
adc
insb
scas
push
jecxz
dec
dec
mov
scas
out
pop
popf
lret
xchg
int
mov
test
ja
xchg
sub
inc
gs
mov
mov
jnp
outsb
rorb
and
clc
mov
cld
sub
cmpsl
fisttps
test
or
clc
ret
loopne
bound
aad
fucomi
lock
xor
arpl
loope
jmp
mov
xchg
fstl
mov
hlt
jbe
and
scas
in
push
lahf
jl
pop
dec
or
pop
xchg
mov
ss
sbb
loop
push
ret
and
fldl
add
sub
pop
in
rcrl
sub
dec
aaa
inc
imul
sarl
aaa
push
mov
jl
inc
daa
subb
mov
mov
mov
dec
test
sub
rcll
repz
mov
test
scas
mov
cmpsl
scas
or
sub
cwtl
push
xchg
jle
mov
popf
cmc
xor
jbe
adc
cmp
pop
dec
jnp
mov
adc
ffree
shll
jp
push
jmp
pop
les
inc
sbb
cmp
test
cmpsb
xor
outsl
xor
push
mov
xlat
das
cmp
imul
es
lds
ret
fisttpll
negl
rcrb
and
mov
sbbb
in
shl
in
stos
out
adc
cmp
test
push
jmp
test
xchg
js
nop
aam
out
cs
lahf
imul
cld
adcb
dec
mov
fisubrl
or
push
jne
mov
scas
into
test
mov
pushf
popf
sahf
neg
push
mov
jmp
decl
push
push
mov
fimuls
lret
mov
add
out
xchg
mov
mov
jecxz
xchg
aam
movsb
jbe
test
test
pop
jae
in
mov
scas
inc
cmp
sub
cltd
mov
lods
xchg
das
mov
addr16
push
inc
iret
aad
push
std
xchg
in
and
cmpsl
add
mov
sbbl
xchg
out
mov
popa
mov
lcall
inc
mov
mov
mov
out
adc
arpl
lahf
aas
sub
jne
ja
xor
mov
negb
add
sti
jbe
sub
xchg
jae
stc
pop
adc
jp
leave
imul
ss
jne
mov
sarb
dec
dec
dec
jnp
adc
mov
lret
and
mov
mov
int
addb
and
or
or
outsl
sbb
dec
push
push
outsb
mov
mov
mov
in
adc
jmp
iret
xor
cmpsb
loope
jle
std
xor
out
aas
adc
jle
lret
fwait
pop
repnz
pop
mov
imul
push
fsubrp
out
xchg
push
pop
cmp
mov
repz
inc
sarl
mov
stos
add
xchg
out
pop
xor
movsl
xchg
lods
aad
test
jns
xorb
push
dec
das
neg
adc
pushl
test
dec
dec
cmp
pop
fimull
in
das
xchg
push
push
test
xor
out
or
jne
jl
pushf
jbe
fisubs
out
dec
jns
lods
pop
push
mov
shll
add
cmp
ss
ret
add
mov
sbb
sbb
dec
out
andl
stos
sub
clc
leave
in
and
into
in
sbb
das
sub
incb
ret
cmpsb
scas
shll
cmp
gs
cltd
pop
xor
sbb
xor
std
into
dec
lods
pop
ror
ljmp
not
push
repz
push
roll
adcb
push
push
cmp
insb
fdivl
add
test
repnz
mov
test
pushf
xchg
pushl
jb
lds
cmp
out
dec
xor
and
push
dec
mov
imul
leave
xorl
jg
cltd
dec
jno
outsb
in
imul
mov
mov
imul
pop
xor
in
setb
push
cmp
sbb
ss
repnz
jb
inc
iret
xchg
add
icebp
fsubrs
sub
mov
cmc
dec
in
icebp
lcall
sbb
das
ficomps
lea
cmp
mov
es
adc
xor
mov
xchg
or
clc
adc
mov
test
mov
std
jns
adc
mov
lcall
in
in
push
lods
xor
mov
pop
insl
fisttpl
and
mul
jge
or
outsl
push
or
sub
icebp
loopne
sti
out
int
xchg
inc
add
bound
into
adc
pusha
or
loope
in
mov
push
xor
xor
inc
arpl
lcall
cmp
fcomps
jg
and
or
cltd
iret
int3
xlat
xor
cmc
mov
movsl
xchg
xchg
insl
test
lahf
push
lds
hlt
loopne
xchg
sbb
out
push
sub
mov
mov
imul
mov
shll
icebp
sarl
test
mov
lds
pusha
out
repz
pop
xchg
hlt
lea
repnz
hlt
fwait
jp
arpl
mov
mov
jno
xor
adc
pop
lock
mov
icebp
mov
xchg
fstps
mov
sub
jl
pmaxsw
sbb
bound
pop
sub
push
sub
mov
inc
ds
mov
push
aad
jecxz
test
pushf
cmc
or
sub
mov
xor
sbb
sti
sarb
jne
popa
jne
addl
pushf
int3
push
push
adc
mov
lahf
xor
int
cmp
sub
sub
lock
lds
sahf
push
sub
pop
fsts
mov
sarl
idiv
cmp
xor
repz
cmp
cmp
lea
jb
aam
cli
adc
sub
pop
cmp
xchg
shr
sbb
lret
jo
push
fmull
sarl
sub
sbb
repz
push
cmp
pop
loope
pop
pop
push
jno
cmp
ret
jg
mov
out
movsl
imul
aas
sti
mov
sti
lret
inc
push
fdivl
rclb
js
push
sub
lret
jmp
cmp
push
mov
orl
test
or
stos
mov
je
orl
test
adc
inc
andl
push
sbb
mov
and
loope,pt
push
out
adc
out
push
rcrl
sbb
iret
dec
shrb
adc
xchg
testl
mov
divb
cmp
or
movsb
cmp
sbb
cltd
insb
int3
adc
mov
mov
pop
lds
or
xchg
mov
dec
inc
shlb
pop
lret
je
mov
sub
dec
mov
dec
mov
loope
and
aad
jecxz
inc
pop
fwait
mov
xchg
sbb
outsb
sub
icebp
in
hlt
sub
push
and
insl
lds
sub
ja
in
cs
je
ficoms
fildl
sbb
in
pushf
xchg
jne
sahf
rcrb
loop
adc
lret
sbb
popf
mov
or
sub
xor
push
adc
loop
cmp
pop
inc
and
dec
int
cwtl
jo
xor
lret
dec
sbb
or
xchg
lock
pop
or
xchg
aad
sbb
fs
icebp
testl
pop
xchg
fbld
ror
outsl
add
sub
xchg
push
pushf
outsl
fldenv
shlb
xchg
or
popa
xchg
cmpl
inc
cmp
xchg
cmc
fstpt
ss
mov
stos
gs
dec
cmp
sti
inc
and
push
xchg
push
push
shlb
in
ljmp
fwait
push
ret
inc
mov
sti
pushf
vxorps
inc
xor
or
mov
call
sbb
mov
shrl
daa
fistps
adc
aad
in
push
sbb
xor
mov
add
cs
in
and
and
rol
cltd
fcomi
je
fwait
mov
std
add
or
mov
xchg
std
cmp
sub
and
dec
pop
test
insl
notl
stc
aad
mov
shl
popa
add
or
rcrb
out
insb
jns
les
xchg
jge
sbb
lods
mov
sbbl
jbe
push
out
dec
adc
xchg
fwait
adcb
loope
mov
dec
add
sub
lahf
bound
ss
cmp
cli
int
mov
out
inc
push
adc
pop
sbb
dec
jae
cmp
push
jg
or
int3
je
insl
mov
ret
pop
push
mov
jo
cmpsb
into
sub
dec
inc
inc
pusha
pop
rolb
out
or
pushf
insl
shlb
lcall
cmp
add
loope
imulb
mov
jp
xlat
mov
xor
int
lcall
pop
jge
push
in
xchg
xlat
xor
dec
insl
jbe
push
mov
or
dec
add
xor
mov
pop
push
and
js
cmovne
push
pop
ret
and
in
pushaw
sbb
inc
and
push
push
cmp
es
loopne
int
mov
jo
cmp
hlt
or
fimuls
add
insb
jne
jns
cmp
xchg
jbe
pop
test
adc
jecxz
sbb
add
dec
mov
jne
xchg
mov
and
add
mov
filds
mov
jmp
sar
push
int3
daa
mov
cmp
mov
jle
adc
rcr
pop
jb
xchg
out
mov
jb,pt
icebp
aam
rcll
sbb
mov
jae
and
loop
mov
xchg
pop
out
dec
sbb
out
icebp
push
pop
subb
and
xchg
test
ja
aam
inc
jmp
dec
or
jge
or
jl
mov
cmp
adc
mov
enter
mov
gs
mov
cmp
adc
cmp
xchg
int3
mov
sbb
int
nop
lret
sar
es
gs
fcmovne
dec
aaa
pop
add
aam
mov
mov
daa
outsl
and
mov
push
push
jecxz
js
sbb
dec
and
push
gs
fcoms
push
xchg
inc
loop
or
mov
adc
scas
sti
cmp
mov
imul
push
stos
push
sbb
lret
adc
data16
xor
into
iret
hlt
jno
out
or
and
stc
arpl
sahf
dec
xor
sbb
repnz
pop
sub
mov
ja
sub
rcll
pop
pop
mov
push
into
inc
add
test
loop
adc
mov
mov
mov
imul
xchg
ret
insb
add
hlt
imull
push
dec
mov
popa
cmc
cmp
jmp
aaa
cltd
mov
call
outsl
xor
std
gs
sar
inc
sub
sbb
movsl
dec
stos
mov
outsl
pop
or
scas
sub
sub
enter
bound
and
out
loop
jne
fsubs
out
jnp
addl
mov
adc
adc
mov
cmp
cmp
push
sub
clc
pop
lea
mov
leave
xchg
pop
fisubl
push
fcomi
in
add
aas
pop
jnp
inc
lret
test
std
inc
jo
jne
into
sbb
jl
pusha
add
aas
xchg
data16
pop
and
push
jns
lret
aaa
les
fs
scas
stos
jb
imul
dec
xor
in
stos
adc
pop
push
and
push
aad
sbb
insb
push
lods
int3
cs
js
mov
jno
pop
ljmp
jmp
int
cmp
sbb
enter
bound
movsl
sbb
repz
cmp
movsb
sbb
inc
testb
outsl
cmpsl
xchg
subl
addr16
repz
xchg
cmpsl
jno
push
sub
shll
es
jmp
push
fnstenv
pop
daa
xor
pushf
test
pop
dec
test
push
fcmovnb
push
ret
cmpsb
cmp
xor
push
and
sub
in
push
mov
jbe
scas
das
fidivrl
aad
outsb
in
xor
cmp
cmp
aas
sub
aam
leave
ffree
cli
divl
and
add
or
aaa
mov
inc
add
mov
fwait
les
add
push
sbb
sub
out
push
cwtl
not
test
mov
fstl
mov
fstpt
hlt
xor
push
cwtl
in
in
sub
fdivl
mov
push
or
mov
ss
std
push
inc
push
cmc
xlat
int3
mov
mov
inc
shll
xchg
cmc
mov
jmp
or
fs
lret
and
jle
mov
mov
mov
mov
pushf
js
fs
cmp
pop
aaa
jecxz
xchg
cmp
mov
xchg
addl
data16
sub
fwait
xchg
adc
in
lahf
xchg
inc
sti
out
fidivrl
insb
adc
leave
sub
add
loope
lcall
mov
lret
mov
stos
lods
push
nop
and
movsb
xor
jle
call
mov
call
out
pusha
xlat
mov
fwait
loop
mov
pop
xchg
les
adc
cmp
dec
jbe
sub
shlb
push
xchg
cmpsb
xchg
cltd
nop
pop
dec
aam
movsb
cmpsl
aad
lods
sub
mov
sbb
ds
fadds
mov
mov
xchg
mov
jmp
in
fldl
jbe
inc
xor
and
xlat
int3
jp
mov
loop
faddl
mov
mov
push
int
les
mov
jne
pop
push
int3
xor
test
or
stos
fsubs
stos
or
sti
andb
push
fsubrl
lock
js
leave
loopne
sbb
ror
sbb
inc
push
pop
lea
lea
or
fnstsw
rcll
or
jmp
bswap
push
jmp
movsl
loop
cmpsl
pop
shl
fstpl
cli
in
cld
push
adc
stc
push
add
add
dec
dec
andl
sti
xor
int3
aad
add
les
lock
mov
stos
xor
subl
mov
inc
push
add
std
lods
push
mov
sub
pop
dec
push
aad
add
push
insl
sub
cmc
call
pop
inc
xor
cli
daa
xor
xchg
pop
mov
or
pop
outsb
inc
leave
mov
push
lea
pop
adc
mov
lea
mov
lcall
xor
test
pop
fidivl
mov
ja
mov
outsl
sbb
and
dec
mov
mov
xchg
cmpsl
cwtl
mov
stos
xchg
lock
cmp
inc
test
fmull
jge
jbe
push
nop
mov
dec
sub
dec
in
out
fsubr
cmp
jle
hlt
fcomps
loopne
out
mov
pop
sbb
pop
sbb
inc
add
cmpsb
inc
and
ss
out
sbb
fwait
dec
xchg
xlat
jg
sub
loope
jns
xor
xor
sub
inc
pushf
push
push
mov
jo
sub
cmp
pop
push
divl
push
mov
pop
inc
sbb
xchg
cmp
stos
dec
fmuls
popf
pushf
pop
aam
mov
xlat
stos
imulb
cmp
inc
outsb
push
push
mov
mov
sub
fwait
inc
xchg
aad
pop
dec
popa
inc
or
sub
push
in
jbe
ds
sti
or
dec
xchg
xchg
xchg
cs
stos
add
xor
cmc
fsts
fldcw
loop
xchg
mov
sbb
out
pop
xlat
sbb
notl
add
and
xchg
cltd
fs
mov
into
stc
mov
mov
nop
dec
mov
popa
cli
cmp
xor
inc
aas
mov
dec
inc
inc
cli
push
insb
mov
into
mov
arpl
in
decl
mov
xor
shl
jb
cmp
add
jge
imul
inc
or
xor
mov
xchg
fisubl
ret
out
adc
int3
je
push
enter
cmc
dec
ljmp
add
add
mov
cmp
push
mov
push
int
pop
daa
push
adc
adc
jo
in
push
icebp
cli
lret
or
inc
out
push
and
push
push
mulb
or
das
hlt
adc
dec
mov
add
xchg
rorb
fistl
jl
aad
mov
stc
or
inc
mov
in
jns
fidivrl
adc
ret
popa
idivb
fs
cwtl
scas
movsl
pop
pop
dec
jo
inc
inc
addb
pusha
das
mov
sub
mov
daa
xchg
pop
jge
mov
rcr
lcall
lret
loop
rcr
outsl
jmp
sbb
jns
sbb
and
ret
xor
pop
iret
pop
adc
mov
pop
imul
add
fnstcw
loop
orb
adc
jge
mov
enter
push
push
mov
rclb
jbe
sbb
aaa
clc
dec
call
out
and
aaa
repnz
add
insl
outsb
jecxz
nop
imul
das
inc
adc
push
adc
fadd
cltd
add
or
jno
scas
mov
cltd
repnz
int
inc
sbbl
clc
loopne
or
add
je
daa
push
shl
mov
push
cmp
xor
push
into
push
insb
xor
ss
lcall
xchg
ja
mov
cli
lock
shlb
vmovlps
cmpsl
paddq
mov
push
icebp
mov
adc
lock
hlt
rcll
xchg
ds
mov
fistpl
or
in
mov
adc
divl
xchg
jb,pt
push
xchg
add
mov
sbb
adc
or
out
mov
cld
popa
sti
aaa
jle
out
popl
cmp
in
repz
push
dec
lret
aam
shll
sti
and
push
adc
jp,pn
std
inc
mov
and
int3
dec
ret
outsb
je
and
inc
aam
cwtl
add
or
cmp
push
xchg
add
inc
sub
das
fucomp
sahf
out
lcall
in
int3
jb
add
into
push
xchg
in
xchg
mov
iret
push
jae
or
sbb
jmp
cwtl
cli
xchg
movsl
fxch
out
es
sbb
pop
sti
pop
push
cmp
clc
adc
lcall
pushf
das
daa
push
insb
loope
dec
andb
and
rorl
push
jecxz
in
jb
mov
fisttps
mov
lahf
xor
stos
clc
inc
lcall
test
push
sbb
pop
inc
jmp
adc
xor
mov
mov
arpl
xchg
and
sbb
or
addb
movsl
inc
dec
test
push
and
cltd
add
test
pop
jbe
mov
sti
cmc
cmc
pusha
dec
scas
aad
pop
xor
jge
add
push
cmp
or
inc
repz
js
inc
adc
xchg
movsl
dec
jno
les
jge
mov
int
xor
insl
jo
je
xor
inc
sub
ror
ret
adc
rcll
out
sbb
inc
dec
int
aaa
bound
mov
add
pop
dec
mov
push
jb
stos
sbb
les
jg
xchg
sbb
add
ja
sub
lret
je
pop
enter
sub
pop
pop
xchg
adc
sbb
les
sub
adc
xchg
mov
push
mov
xchg
ds
xor
insl
push
push
stc
sti
test
movsl
push
sbb
in
mov
mov
pop
push
mov
pop
movsl
jbe
rorb
add
aaa
ds
push
and
andb
int
mov
xor
sbb
jb
sub
sub
mov
xchg
xchg
bound
jbe
jmp
xchg
push
or
repz
or
loopne
and
hlt
mov
test
ss
das
cmp
mov
mov
jecxz
sub
gs
inc
xor
in
xor
repz
xor
fsubrs
jecxz
sbb
and
mov
jb
push
push
sub
mov
push
addr16
jb
ja
push
cmp
mov
cmp
lret
xchg
inc
repz
mov
xor
out
pop
xchg
pop
mov
roll
pop
popf
icebp
mov
cs
mov
and
jecxz
mov
jle
jle
jae
dec
fsts
dec
call
pop
jp
scas
test
inc
push
pop
rolb
jge
std
dec
xchg
pop
popa
mov
fcmovbe
mov
mov
lret
sarb
add
scas
pop
mov
push
loopne
int3
into
cmp
pop
enter
pop
fstps
jns
into
jnp
lcall
xor
push
xor
ret
int
insb
jo
andl
fisubrl
cmp
addr16
mov
jle
lret
aaa
adc
shrb
jb
aas
sbb
popf
sti
xorb
pop
incb
stc
popf
mov
in
test
xchg
inc
xor
and
xchg
add
sub
pushf
or
push
out
mov
push
nop
and
idivl
enter
lcall
popa
jmp
dec
mov
mov
mov
repz
into
mov
jecxz
cmp
out
xchg
mov
xor
xorl
dec
push
push
out
scas
rclb
loopne
or
fwait
test
sahf
repnz
ret
or
outsl
and
cmp
adc
mov
jl
cli
test
add
dec
dec
in
jns
movsl
test
pop
sahf
sti
int3
nop
add
loopne
push
fldenv
lcall
andb
xchg
adc
out
loop
dec
shr
add
mov
inc
mov
xor
in
dec
dec
or
clc
js
loop
dec
cmp
pop
jp
jge
cli
jnp
jns
sub
int
fwait
test
inc
jo
xor
shrb
jb
push
xor
push
xor
mov
out
test
cmp
fwait
push
aad
hlt
stos
out
sahf
fwait
push
imul
pop
mov
aam
shl
or
push
loopne
cmp
pop
dec
imul
sahf
iret
mov
jbe
loopne
andl
ss
stos
scas
mov
bound
mov
jle
and
adc
repnz
loop
mov
icebp
sbb
cmp
mov
push
movsl
jb
sbb
and
sahf
xor
pop
inc
fidivl
test
notl
jmp
and
dec
stos
mov
mov
sbb
call
or
faddl
fdivrs
mov
lock
lods
call
sub
sbb
sub
xchg
int
sub
and
xchg
mov
inc
mov
or
pop
fistpll
and
add
scas
cli
rorl
pushf
popl
cmc
lcall
dec
lret
mov
popa
das
ret
sub
fsubp
fisttpl
pop
dec
adc
adc
bound
lret
ljmp
lcall
cld
jbe
fisttpl
push
in
cs
sbb
jb
push
arpl
fcomp
sub
push
lods
cli
push
cwtl
pop
ret
shrb
out
insl
adc
stos
out
loop
addr16
negb
mov
cld
cld
mov
pop
jle
cmp
aam
jne
data16
je
cmp
add
leave
pusha
jecxz
adc
push
out
cld
push
pop
andb
ljmp
mov
cmpsb
mov
lcall
orb
sbb
and
mov
xchg
push
outsb
lds
daa
adc
pop
xchg
inc
test
mov
sbb
outsl
fildl
push
jnp
inc
test
jge
cmp
lock
lcall
dec
rcrb
lods
pop
xor
cmp
mov
jle
xchg
cmp
cmpl
push
fs
sbb
dec
fsubrs
out
filds
mov
icebp
imul
xchg
fistpl
ss
loope
or
ss
mov
cmp
add
sub
or
loope
decb
pop
or
mov
and
in
aam
pop
dec
xlat
pop
cmpsl
cmp
and
mov
iret
mov
hlt
in
dec
pop
test
mov
es
inc
cmp
sbbb
xlat
push
ja
in
cmp
cwtl
pop
dec
pop
pop
jmp
fildll
mov
out
push
add
out
pusha
decb
push
adc
inc
int
call
or
sbbl
sbb
push
dec
ficoms
cmpsl
test
loope
mov
aas
mov
loop
repnz
push
pop
shll
jne
scas
repnz
inc
arpl
adc
loope
gs
adc
cmpsb
push
and
fcoms
ret
inc
ja
cmpsb
or
mov
roll
adc
jae,pn
xor
xor
inc
insl
ljmp
or
outsb
jno
notl
mov
fdivl
add
fstpl
scas
push
sbb
adc
arpl
repnz
pop
sub
mov
inc
in
mov
xor
mov
mov
icebp
sbb
nop
cs
sub
jp
xlat
pop
cmp
cmc
xchg
jp
push
mov
imul
insb
cld
and
push
jecxz
inc
or
icebp
add
pop
lret
sub
lcall
xchg
adc
lds
xlat
ret
add
sub
ss
jle
jnp
pop
dec
mov
mov
stos
popa
and
rcll
inc
test
adc
inc
aad
dec
ret
std
dec
pop
aam
pop
pop
sbb
dec
adc
ja
iret
cmp
adc
jecxz
cwtl
mov
xchg
movb
in
ret
out
adc
sub
adc
inc
jno
jo
sbb
bnd
int
sti
mov
push
jbe
add
and
xor
lcall
and
jne
cmpsb
adc
xorl
pop
add
push
or
insl
sti
loope
cwtl
pushl
dec
mov
inc
scas
jmp
cmp
mov
loope
pop
in
popf
cld
into
sub
jmp
sti
cmpsl
cmp
aad
jecxz
jl
jp
sahf
movsl
loope
popa
aas
inc
outsl
add
mov
test
lcall
xor
fnstenv
or
xor
mov
xor
jge
aam
mov
out
jne
sbb
push
lahf
sar
aaa
mov
fsubl
inc
pushf
rclb
repz
sbb
fbstp
mov
inc
mov
adc
cmp
sahf
adc
ret
adc
ret
dec
dec
lret
js
adc
cwtl
mov
push
ljmp
cli
jp
cmp
fnstsw
sbb
sbb
aad
add
push
sbb
push
leave
cmp
mov
loopne
test
scas
sbb
jmp
aad
mov
dec
push
test
insl
mov
imul
mov
lcall
pushl
std
xchg
mov
inc
js
xchg
sbb
fcmovb
ja
fs
ss
das
imul
arpl
ss
ds
add
mov
and
push
andl
inc
xor
in
mov
xchg
or
sub
dec
imul
gs
or
push
xchg
jns
enter
insl
rorb
inc
jno
push
sub
xlat
ret
inc
int3
pop
cmpl
repz
into
sti
mov
fwait
mov
int
mov
and
lods
push
hlt
push
or
fstps
ror
push
popf
cmc
push
es
or
jbe
dec
xchg
pusha
mov
jmp
jno
add
fwait
pop
cmp
ds
dec
dec
sbb
jno
adc
mov
jb
sbb
fnstsw
pop
fstpt
int
adc
or
arpl
mov
inc
xor
aaa
gs
sub
lahf
call
aam
sub
in
je
pop
and
jbe
xlat
cmc
data16
pop
loopne
inc
mov
js
push
idivl
das
xor
int
xchg
test
xor
mov
fcoms
js
inc
add
std
sbb
ror
loope
or
add
ret
jg
add
fsubrl
cltd
lret
inc
adc
jns
adc
mov
mov
cmp
popf
lahf
and
incb
xchg
mov
subl
aad
ret
aam
ljmp
popf
mov
adc
mov
mov
cmp
inc
push
int
push
iret
push
xchg
fwait
loop
ljmp
movsb
or
mov
gs
jo
lock
jl
cmp
adc
jns
cltd
fs
mov
xlat
cld
imulb
loopne
and
sbb
cmpsb
mov
xchg
js
dec
nop
mov
lahf
jmp
sahf
mov
or
pop
or
in
int
xchg
push
mov
js
fs
or
clc
jb
setbe
loop
fildl
adc
dec
loope
xor
sahf
das
movsb
ret
pop
loop
mov
xchg
push
stos
mov
inc
push
and
jne
js
xchg
cmp
inc
fld1
popf
lret
push
push
lock
in
xchg
repz
push
pop
cmpsb
mov
movsl
jl
jae
inc
shrl
mov
lds
sbb
ss
loopne
pusha
xchg
inc
sbb
mov
lahf
iret
jne
imul
lods
sarl
jg
lahf
test
xlat
pop
xchg
pop
mov
enter
add
add
cli
gs
test
and
xchg
pop
lock
mov
shrb
jne
sub
cli
fcmovnu
mov
mov
mov
or
fstpt
mov
mov
stos
out
notb
hlt
dec
or
gs
jge
push
lcall
mov
and
emms
adc
ret
fstl
mov
rorb
outsb
outsb
fmulp
jl
or
pop
mov
sbb
sub
pop
stos
xor
add
jg
dec
lahf
jae
aam
in
fsubl
mov
mov
rcrb
and
sbb
maxps
cmp
sbb
fsubrl
adc
xor
ja
fdivs
ja
hlt
test
inc
jmp
fcmovbe
pcmpeqb
add
fwait
jne
out
adc
push
mov
mov
sub
std
fcmove
or
imul
jecxz
addr16
lea
xchg
inc
jl
push
jnp
aaa
repnz
sub
rcll
and
leave
orb
notb
push
jge
mov
iret
push
ret
hlt
les
and
shl
insb
sbb
and
faddp
jg
arpl
xchg
and
out
add
inc
mov
loop
in
dec
dec
xorb
ret
adc
sbb
add
jmp
mov
fs
or
enter
push
xchg
cmc
jecxz
int3
addb
scas
in
in
rcr
mov
nop
imulb
push
adc
inc
cmp
push
test
leave
fldenv
fs
out
lds
sbb
movsl
pop
das
sbb
xchg
xor
cmpsb
dec
xchg
enter
faddl
iret
cmpsl
test
sub
pop
mov
fstl
js
jae
xor
add
inc
jns
stos
push
and
or
sub
stc
insl
aaa
aas
jge
xchg
jmp
xchg
mov
dec
out
fs
xchg
mov
sub
xchg
in
das
dec
ds
divl
int3
jbe
inc
cmp
sub
pop
mov
gs
std
mov
mov
jl
pop
dec
add
mov
into
scas
clc
or
add
or
cmp
xor
jae
inc
add
scas
push
ss
mov
nop
insl
outsl
ret
je
test
js
movsb
mov
ret
cltd
repnz
xor
mov
cmc
jae
xor
iret
push
sbb
stc
sahf
in
pop
shrl
rcrb
mov
fbld
jbe
in
dec
das
add
inc
mov
lock
leave
sbb
xor
inc
cmp
lds
mov
cmpsb
xchg
pop
movsl
lods
sub
mov
push
jns
int
rorl
inc
sbb
decl
fisubl
push
jmp
xchg
lret
lret
dec
fs
inc
inc
sbb
hlt
insb
push
dec
cmpsl
adc
pop
mov
add
add
pop
out
push
cmp
sub
hlt
mov
xor
imul
xchg
ret
lock
mov
lahf
add
sti
out
and
mov
or
scas
or
cld
das
jge
mov
cmpsb
add
nop
xchg
insl
pop
push
dec
sub
dec
pop
and
mov
sub
or
into
or
adc
xor
into
mov
outsb
int
pop
in
int
lods
dec
es
js
mov
pop
push
fidivrl
inc
in
das
cmp
push
enter
sti
sbb
inc
push
mov
aaa
sbb
sbb
mov
ret
or
sub
pop
adcb
push
scas
sbb
or
std
scas
movsl
fsts
popf
daa
xor
mulb
mov
sub
mov
cmpsb
lods
icebp
je
js
jbe
cmp
pop
fbstp
into
sbb
inc
call
jecxz
sub
mov
add
mov
dec
mov
push
je
addw
jno
leave
lock
int
enter
sbb
ds
out
cmovge
jle
inc
rcl
cmpsl
movsb
in
repz
repnz
xor
adc
rclb
xor
inc
rcrb
fadd
sub
xchg
lds
out
adc
jle
dec
cmpsl
movsl
sbb
sti
pop
test
add
mov
mov
dec
jne
sbb
xchg
push
je
popa
jno
test
push
or
ror
stos
lock
cmp
sbb
xor
jbe
mov
pop
mov
data16
stos
inc
cli
push
jmp
jnp
outsb
cmpb
push
inc
cmp
sub
jno
outsl
xlat
in
push
jp
incl
pop
lds
and
xor
lods
sub
adc
inc
lret
imul
bound
ljmp
cli
jmp
insl
mov
add
addb
js
sbb
jae
mulb
push
xor
rcll
adc
in
sbb
pop
lcall
addr16
outsb
hlt
imul
push
movsb
lahf
or
pop
stos
stc
mov
loopne
xor
clc
add
sbb
add
addl
push
jb
and
mull
fs
inc
mov
outsl
addl
push
push
fdivr
mov
xchg
divb
inc
fs
xchg
stc
out
rcr
aas
ja
pop
stos
sbbl
mov
or
test
clc
inc
cmpb
inc
inc
sbb
stos
jae
ja
xchg
sub
cltd
lods
xchg
mov
cli
xchg
adc
pusha
movsb
stc
icebp
cmp
mov
outsb
add
sbb
call
ja
in
and
daa
and
shll
jle
mov
push
push
pop
bound
xor
aam
mov
and
push
aad
push
ret
popf
dec
fadd
sub
push
in
test
pushf
mov
xchg
inc
jl
sbb
orb
les
push
lds
fisubl
push
test
push
fldt
jecxz
outsb
pop
xor
mov
popa
test
push
mov
or
sti
clc
dec
dec
inc
or
in
sub
mov
in
dec
xchg
lret
push
jns
inc
bound
jo
std
or
popf
pop
mov
mov
out
jbe
mov
inc
loopne
test
push
add
pushf
adc
fsts
push
fisubs
dec
or
mov
dec
nop
clc
mov
aaa
adc
xor
jle
mov
addl
or
in
lcall
dec
mov
mov
mov
and
pop
popf
jb
jns
sahf
imul
mov
dec
or
fldt
enter
cmp
insl
cmpsl
repnz
push
mov
mov
mov
mov
push
xor
dec
xor
call
push
push
pop
lock
ret
aaa
push
mov
ret
sbb
mov
xchg
gs
lret
xor
push
in
fsubrl
shlb
outsl
sti
sti
stos
inc
fsts
xor
js
mov
and
out
daa
les
lds
cli
cwtl
cmpsb
movsl
cmp
sbb
mov
xor
shrb
mov
jb
outsb
xor
ljmp
leave
inc
mov
enter
pop
loopnew
jp
xchg
mov
les
fidivl
mov
and
mov
pop
push
arpl
enter
and
hlt
cs
std
lret
rorl
and
nop
xchg
xchg
lcall
ret
jae
mov
cmpsl
fisubrl
mov
mov
ljmp
jno
fbld
dec
subl
push
push
sub
cld
pusha
sub
int
jne
leave
xchg
push
xor
lcall
mov
sub
in
test
ljmp
mov
aaa
mov
dec
insl
mov
mov
dec
ljmp
clc
cmp
push
xchg
popf
xlat
or
rcll
les
sub
pop
call
in
inc
and
lods
xchg
sbb
popa
vmread
sbb
jne
xchg
push
decb
dec
dec
out
jnp
cmp
imul
add
dec
mov
sbb
rol
ss
mov
jne
mov
xchg
popa
push
cmpb
mov
out
cs
sbb
push
int
lea
pop
aaa
add
sti
dec
dec
mov
pusha
sub
aaa
inc
cwtl
imul
insb
daa
ficoml
mov
lods
stos
inc
push
dec
dec
jo
inc
cmp
aad
pop
fdivs
add
xchg
out
loopne
add
cmpsb
dec
fcmove
jae
fsubrs
xchg
sbb
stos
inc
jg
push
call
jp
and
mov
test
sub
jl
jecxz
fldl2e
out
pusha
fnstenv
fldcw
jmp
div
cli
jmp
xchg
cmc
hlt
ffree
xor
xchg
addr16
mov
mov
inc
xchg
flds
les
mov
inc
stos
mov
mov
jnp
inc
jp
rclb
and
sub
sbb
mov
popf
in
adc
push
jge
icebp
addr16
repnz
in
out
adc
adc
cmpsb
sbb
jmp
jg
fwait
jno
jmp
test
fcoms
push
mov
stos
inc
mov
lahf
addl
adc
incl
cli
mov
sub
sub
movl
jle
nop
in
cmp
in
pop
repz
test
pop
addr16
leave
test
cli
stc
cmp
xor
pop
xchg
push
fxch
stos
mov
popf
jo
push
mov
mov
lret
mov
xchg
lret
push
inc
inc
rclb
in
pusha
fs
xchg
iret
mov
sti
adc
cld
xchg
sbb
push
sti
cmp
xor
add
mov
std
mov
cmp
add
mov
adc
push
lea
sub
cmp
and
stos
jne
sub
lds
mov
jecxz
mov
lahf
mov
cmc
adc
and
inc
push
jno
cli
mov
mov
sbb
imul
fiadds
in
sbb
sbb
inc
imulb
push
mov
add
in
cmp
mov
jp
push
or
ss
pusha
test
jle
iret
notb
mov
dec
lds
or
dec
fidivl
cld
cmp
sbb
jge
in
xchg
inc
shrb
push
xchg
scas
test
fnsave
mov
test
loope
adc
inc
sbb
aam
jl
cmp
jecxz
js
stos
push
push
in
mov
cmp
ja
aad
pop
pusha
out
repnz
add
lret
out
je
mov
push
mov
inc
nop
fcomp
sub
imul
add
cs
pop
enter
les
pop
xlat
push
lret
sahf
in
imul
mov
aad
dec
rcr
push
xchg
sub
adc
xchg
and
clc
dec
clc
adc
push
mov
sbb
ja
es
sbb
addr16
lds
xor
rep
out
push
sub
push
insb
test
insl
inc
lea
js
sub
mov
adc
repz
roll
xchg
pushf
inc
fmul
mov
mov
xor
mov
rclb
mov
rcrb
push
cmp
movsl
fwait
cltd
push
pop
ss
jecxz
adc
pushf
mov
negl
outsb
dec
and
xor
call
xor
or
sub
outsb
and
sub
lret
xchg
sbb
std
push
xchg
adc
and
test
dec
aaa
leave
insl
mov
dec
ret
mov
jnp
adc
adcb
cs
adc
jl
sub
mov
pop
insl
mov
shr
lret
or
and
adc
lds
arpl
mov
stos
mov
sub
dec
mov
lock
sahf
into
scas
and
mov
sbb
cld
shr
sar
push
add
and
cmpsb
fistpl
or
adc
add
mov
dec
fdivrs
aad
inc
and
imul
or
test
cmp
xor
cmp
or
or
add
inc
in
clc
ret
sahf
sub
and
push
xor
daa
inc
and
cmpsl
xchg
jg
push
mov
ja
lahf
sub
push
lods
cmpsl
out
jns
fsubr
lret
test
lods
xchg
dec
loopne
fmull
mov
lret
xor
aam
inc
mov
shrb
rolb
es
adc
enter
mov
fimull
and
int3
xchg
mov
dec
arpl
out
mov
push
rclb
or
int
pusha
add
or
push
xchg
jno
repnz
adc
push
adc
dec
repnz
jecxz
lds
mov
mov
mov
loope
movsl
mov
stc
into
add
movsl
xchg
xchg
mov
gs
push
imul
ljmp
mov
adc
fdivs
mov
fdivs
cmp
icebp
in
cmpsb
dec
pusha
xor
ja
adc
pushf
in
jae
hlt
adc
movsl
gs
push
jns
pop
clc
push
cli
dec
pop
xchg
sub
push
add
mov
add
cmp
sbb
divl
imul
ja
hlt
std
push
ja
push
in
sbb
xor
push
jl
xchg
push
add
jae
add
cmp
mov
mov
mov
inc
jbe
push
sbb
scas
pop
pop
xor
mov
adc
jo
inc
je
pop
push
repz
mov
and
loop
cmp
stc
pop
subl
pop
enter
jle
and
or
sbb
jg
insb
fbstp
movsb
mov
adc
pusha
xor
mov
mov
adc
xchg
xor
xor
repnz
lods
je
loope
sub
sbb
mov
cmp
fistl
lret
cmp
idiv
push
push
mov
sbb
push
dec
mov
and
fsubl
das
push
gs
or
stc
adc
arpl
mov
sub
fisttps
mov
loop
pop
push
xchg
inc
and
push
cmp
mov
push
cmpsb
push
out
bound
mov
dec
jnp
jne
out
fwait
shl
mov
ljmp
movsb
lods
mov
lods
outsl
cmp
das
xchg
imul
aas
into
sti
pop
lahf
or
loopne
xchg
addr16
leave
test
jge
mov
insb
fidivs
inc
out
sbb
in
test
inc
out
movsb
push
int
pop
loope
lock
ds
mov
sub
cs
pop
maxps
and
aaa
push
sub
stos
pop
notb
leave
cli
into
mov
adc
gs
icebp
mov
pop
mov
iret
add
and
pop
das
adc
into
in
popf
int3
ds
jno
jmp
in
rorl
mov
ret
xchg
pop
push
pop
jae
and
imul
add
add
lcall
xchg
lock
out
lcall
xor
or
push
lock
mov
adcl
sbb
fldenv
lods
add
imul
aaa
mov
xchg
jbe
pop
es
dec
adcl
call
loopne
fimull
ret
and
dec
cltd
pop
outsl
pop
jle,pn
lock
dec
insl
mov
pop
jns
loop
rolb
int
sub
bound
sbb
faddl
loopne
into
lahf
or
sub
push
mov
sti
stc
dec
pop
fidivs
sbb
xchg
jno
js
into
mov
out
sub
adc
lahf
mov
lds
call
rolb
and
cmp
test
mov
aam
adc
jae
out
bound
test
into
jge
imul
adc
out
xor
lahf
or
leave
shl
and
add
pop
mov
cmp
mov
sub
test
jecxz
ds
cmp
xchg
pop
dec
add
fucomi
cmp
subl
leave
adc
xchg
stos
xchg
cmp
xchg
aas
adc
add
push
imul
mov
cmp
rcll
mov
or
jno
cld
dec
aaa
leave
shll
bound
pop
dec
filds
loopne
sub
xor
cld
adc
inc
les
lahf
sarl
je
inc
sbb
pusha
or
call
or
sarb
dec
pop
cs
lock
inc
les
lods
out
cmpsl
mov
adc
add
xchg
add
adc
cmp
add
pop
inc
push
pushf
xchg
pop
mov
lea
pop
fdivl
dec
add
in
adc
add
pop
test
push
leave
aaa
js
repnz
xchg
mov
and
sub
and
popf
sbb
test
pop
faddl
aad
sbb
sub
xabort
fwait
popf
iret
cmpsb
inc
rcl
orl
cmp
pop
pop
std
cmp
and
lahf
pop
mov
int
dec
test
dec
sub
insb
iret
ljmp
push
and
jp
hlt
lret
jmp
or
cmpsb
push
inc
outsl
adc
bound
adc
jbe
test
adc
cltd
ficoms
pop
sub
notb
adc
movsl
lock
xor
cmc
scas
popf
add
icebp
bound
movl
jmp
fsubp
lcall
mov
or
js
lods
mov
mov
sub
aaa
imul
xor
icebp
loop
cmp
mov
repnz
mov
pusha
out
mov
xor
gs
ljmp
push
pop
dec
das
sarb
mov
into
inc
scas
lods
cmp
dec
bnd
rcrb
out
sti
dec
adc
hlt
rcrl
jns
ret
dec
fidivs
mov
inc
ret
repnz
or
test
fdivr
cmpsl
add
sti
pop
add
pop
and
mov
cwtl
pop
or
add
cmpsb
mov
jno
loop
mov
add
fstp
mov
add
push
or
pop
scas
stos
sbb
fmull
iret
xchg
out
sbb
pushl
xor
fnstenv
mov
fwait
popa
hlt
push
or
sbb
test
lods
dec
incb
push
dec
test
outsl
push
stos
add
jbe
and
test
hlt
dec
push
jle
push
pop
dec
adc
xor
mov
xor
into
dec
imull
inc
lret
xchg
inc
or
popf
push
xchg
mov
pop
enter
inc
inc
add
mov
call
xchg
out
mov
into
imul
ret
dec
jb
jbe
loopne
popa
incl
loop
es
outsb
mov
lcall
lcall
subl
enter
sub
sbb
mov
js
xor
out
repz
mov
stos
jo
jnp
test
sub
push
or
inc
insl
lods
icebp
mov
add
shr
adc
loope
push
sub
xor
dec
popf
cmpl
pop
nop
test
xchg
outsl
dec
test
ds
and
mov
sub
adc
bound
inc
mov
adc
pusha
das
mov
xchg
mov
mov
pop
push
pop
mov
in
inc
jl
jbe
shrl
js
dec
push
adc
ja
or
and
dec
jg
jmp
iret
sbb
cmp
mov
cli
pop
aas
xor
clc
xor
mov
add
mov
push
stos
or
fistps
fsts
cltd
add
adcb
int
lcall
addr16
xchg
pushf
jo
mov
dec
js
push
inc
lret
jnp
loope
out
mov
sbb
call
jo
mov
clc
push
insl
xor
aaa
push
dec
inc
outsl
mov
out
and
nop
inc
push
push
loop
adc
mov
sub
nop
leave
and
sub
xchg
aad
and
aad
fnsave
mov
aam
cmpsb
fldenv
pop
les
lcall
cmpsb
sub
mov
and
outsl
xchg
iret
mov
jno
mov
call
iret
iret
xor
lea
pop
pop
fildl
push
mov
cmc
int3
jae
push
dec
jae
push
jmp
fstp
stos
adc
inc
les
and
jne
movsl
mov
sbb
mov
dec
inc
mov
add
push
cmp
sub
movsl
xlat
mov
cli
add
mov
mov
out
cmc
sub
stc
in
cmp
loopne
popa
sub
push
sbb
hlt
ss
dec
push
cwtl
test
mov
push
mov
push
xor
out
jb
inc
add
lods
cmpsl
mov
stos
jmp
fs
daa
jl
roll
iret
pop
outsl
inc
test
jns
dec
nop
xchg
mov
mov
ss
faddl
jge
jnp
xchg
or
stc
adc
jecxz
fwait
scas
loop
mov
push
js
in
mov
adc
push
fcoml
cmp
cmp
pop
jns
stos
lea
jl
cmpsl
popf
cmpsl
scas
cmc
inc
int3
xchg
lahf
adc
or
in
mov
std
cmp
dec
out
les
repz
scas
lret
xorb
mov
or
gs
scas
mov
pop
jno
dec
inc
repz
jp
cmp
enter
xor
xor
repnz
adc
push
jnp
pop
push
or
test
ja
lock
or
testl
jno
cli
orl
xor
mov
add
testb
ret
and
and
mov
push
or
je
push
fsubp
movsb
jecxz
inc
imul
hlt
mov
cmp
insb
fldcw
add
insl
dec
xor
pop
inc
jo
ret
int
xchg
mov
inc
xchg
jge
fstl
pop
cmp
push
fmull
fst
lods
pop
je
mov
cli
pop
and
insb
sahf
imul
mov
testb
int
inc
lods
hlt
push
jp
pop
and
leave
lret
loope
loope
cs
mov
cmp
ljmp
mov
jg
add
adc
push
repnz
stos
shlb
add
in
int3
adc
inc
jae
adc
cmpsb
fcomi
mov
adc
add
fsubrl
pusha
mov
xor
and
pop
xchg
sub
std
push
out
daa
es
add
mov
or
pusha
dec
pop
mov
and
jb
inc
and
sbb
and
mov
dec
inc
xchg
cmpsl
xchg
xchg
xor
mov
ds
test
fnstsw
loopne
jp
sub
out
inc
push
push
lret
cmc
push
mov
xor
insl
lcall
xor
repnz
inc
mov
nop
pop
subb
and
sbb
add
push
xchg
into
xor
xchg
inc
dec
call
sub
mov
movsb
ret
pop
loopne
pop
or
fdivrl
sub
mov
jge
mov
xchg
outsl
repnz
sub
xchg
rcrl
mov
pop
inc
mov
xchg
rolb
lcall
test
mov
cmp
mov
push
ss
mov
repz
push
repnz
mov
gs
mov
inc
xor
ja
dec
push
push
sub
xchg
mov
dec
mov
movsb
dec
jmp
leave
shl
xorb
int3
ljmp
insb
sub
jbe
adc
rol
test
outsb
addb
add
int3
dec
push
mov
stos
add
outsb
xchg
inc
xor
sbb
popl
insb
jne
daa
aas
dec
sarb
add
jo
push
aas
mov
mov
xchg
fnstenv
jl
pop
outsl
cmpsb
lock
jmp
imul
lods
dec
cmp
inc
lcall
xchg
mov
push
mov
aaa
dec
jae
mov
lods
scas
fs
jmp
sti
or
loopne
loopne
jecxz
push
lret
mov
xchg
ret
push
add
inc
xlat
jg
sbb
xchg
mov
cmp
mov
mov
or
stc
test
mov
popl
aad
movsl
xor
xchg
jnp
mov
jbe
sti
and
mov
bound
mov
rorl
loope
out
negb
mov
xor
aaa
imul
fdivs
add
sub
in
fstpl
sahf
xchg
test
sub
lcall
sbb
xor
repnz
mov
int3
jne
xor
push
jge
addr16
stc
or
fsubp
shll
mov
jmp
insl
mov
push
inc
inc
add
jle
lea
loop
mov
mul
xchg
mov
test
sbb
pop
sbb
fcomps
fs
push
popa
stc
xchg
jp
cli
jl
cmp
mov
dec
sbb
cld
inc
aas
ret
lret
dec
movsb
popa
inc
push
js
int
cmpsb
sub
sub
push
nop
push
loope
les
lret
or
dec
cltd
push
push
es
adc
orb
inc
lahf
mov
lahf
or
rcrb
mov
cmp
pop
jp
jno
mov
les
movw
mov
or
xchg
mov
std
push
imul
mov
cld
aam
and
std
scas
xchg
push
test
adc
fstpt
mov
pavgw
bound
sub
mov
pop
addl
jne
test
fcom
xor
test
dec
dec
movsb
lods
repnz
cmc
cmp
gs
xor
or
cmp
sti
rcl
stos
sbb
int3
clc
inc
sub
orl
and
add
mov
cltd
and
add
and
repz
sbb
push
sub
inc
xchg
dec
addr16
and
aad
stos
insl
mov
pop
sub
fwait
clc
stc
xlat
addr16
push
adc
mov
jns
imul
cmpsl
sti
aaa
add
lock
jmp
jle
mov
lahf
add
test
xchg
inc
cmp
cld
add
adc
das
arpl
push
inc
xchg
xchg
test
add
sub
push
imul
xor
repz
sbb
les
ret
push
sbb
adcl
mov
lret
out
xor
and
pop
popf
repnz
pop
rcl
out
sbb
fs
mov
outsl
sti
int3
enter
mov
jge
dec
mov
adc
sbb
leave
inc
cmp
pop
lahf
push
outsb
mov
daa
ljmp
sub
adc
call
and
fwait
arpl
rcl
push
dec
mov
inc
jmp
nop
inc
sub
jg
fidivs
add
jnp
adc
lahf
and
push
mov
xorps
cli
into
jecxz
jmp
inc
movsl
clc
adc
jg
sub
sbb
loopne
add
popa
insl
shlb
sbb
jbe
or
adc
sub
sbb
clc
push
mov
adcb
imul
pop
and
jno
and
ror
test
enter
xchg
cmp
je
dec
dec
inc
pop
xor
add
call
sbb
or
ret
ret
dec
or
xchg
cli
shrl
xor
jg
scas
jl
xchg
mov
sub
mov
fidivs
cmp
xchg
cmp
je
bound
sbb
adc
cmpsl
dec
jecxz
jne
add
jl
ja
pop
sar
lock
jne
imul
and
mov
movsl
gs
mov
in
mov
or
stc
xchg
mov
clc
imul
add
dec
mov
adc
mov
cmp
stos
add
iret
loope
mov
fisttps
lea
arpl
notw
and
pop
mov
xchg
inc
add
xor
pop
push
jl
push
shlb
xor
data16
xor
inc
mov
call
repnz
sbb
mov
imul
sub
in
adc
fwait
pop
or
add
dec
sbb
mov
mov
enter
leave
ds
sub
stos
push
jno
mov
xor
mov
stos
test
mov
mov
and
sub
push
pop
mov
or
lods
mov
gs
pushl
jne
out
test
lret
adc
adc
scas
dec
mov
test
scas
pop
repz
sbb
and
cmp
loopne
shrl
mov
and
stc
mov
shl
mul
dec
fimull
mov
and
imul
vmaxps
fsubl
dec
pop
insb
test
test
mov
out
pop
and
or
xchg
in
insb
mov
fcoms
shlb
outsl
stos
and
loope
leave
sub
repz
mov
xchg
jb
out
pop
mov
mov
fs
xchg
enter
mov
cltd
fimuls
push
jb
mov
mov
aaa
decb
mov
adc
mov
int
xchg
fistps
mov
inc
cmp
sbb
lods
pop
mov
into
lcall
mov
dec
xor
jae
pop
and
call
stos
lahf
lret
jecxz
and
addr16
xchg
rcrb
hlt
mov
adc
push
mov
gs
inc
fdivrl
fwait
adc
pop
hlt
and
and
aad
push
inc
adc
sarl
loop
mov
and
fidivrs
movsb
fwait
sti
ds
or
lret
sbb
or
dec
je
or
xchg
lods
mov
mov
fstps
push
or
ss
push
pop
push
test
mov
iret
faddl
pop
sub
ret
xchg
sub
mov
mov
mov
xchg
or
adc
ljmp
cwtl
fcoml
ret
xchg
lret
test
xor
test
adc
ret
fwait
cmc
out
scas
ret
inc
inc
dec
fsts
xor
adc
jb
fidivrl
out
lock
inc
inc
ja
lds
mov
adc
inc
ja
mov
add
push
mov
mov
mov
mov
arpl
mov
push
xchg
mov
push
jmp
in
outsb
pop
adc
les
cmp
lahf
mov
cli
clc
dec
test
dec
hlt
push
mov
or
fidivrl
mov
inc
cltd
jl
mov
xor
jo
gs
dec
clc
xor
push
ss
loope
jg
mov
jno
and
std
ja
adc
push
pop
xchg
js
mov
mov
cmpsl
call
aaa
push
fwait
dec
mov
mov
sbb
sub
push
loope
cwtl
ja
mov
gs
fdivs
sbb
pop
call
sahf
insb
fbld
nop
sbb
add
loop
or
int3
cmp
xchg
cld
lret
jns
into
jmp
sub
xchg
and
or
hlt
cltd
jge
adc
xchg
and
out
push
jg
push
push
jo
xor
lcall
inc
out
pushf
movsb
movsl
jmp
ret
xchg
rorb
pop
mov
cmpsl
out
je
push
xor
pop
aaa
test
divb
repz
insb
pop
fsubrs
out
jnp
or
rclb
clc
call
push
xchg
inc
sbb
stos
or
and
aaa
xor
lea
sbb
pop
mov
push
outsl
mov
jnp
lret
in
xor
adc
dec
adc
cltd
jecxz
push
sub
test
mov
add
insb
daa
and
jecxz
xchg
mov
outsb
stos
test
dec
jo
adc
insb
sbb
xchg
fwait
jl
imul
out
xor
or
mov
pop
xchg
xor
call
dec
adc
les
les
sbb
dec
shr
sub
shlb
popf
dec
jo
aas
xchg
xlat
cltd
xor
jg
xchg
mov
popa
mov
roll
mov
das
add
mov
insl
cmp
mov
jmp
jo
jg
scas
lret
xchg
mov
rcll
movsl
mov
mov
jo
xchg
aad
lcall
mov
mov
dec
jmp
jne
out
cmp
iret
mov
mov
mov
adc
ds
inc
ljmp
lret
add
or
or
pop
loope
xor
mov
mov
jl
pop
xor
cmp
pop
lret
test
mov
lods
jg
lods
mov
dec
repz
cltd
jnp
rorb
xor
push
mov
pop
xor
push
pop
sbb
push
jp
int3
mov
js
jge
sahf
imul
int
pop
sbb
ret
icebp
xchg
popf
mov
dec
inc
dec
jle
jmp
sub
scas
loope
push
cmpsb
cmpsl
cmp
xchg
sahf
push
pop
sahf
sbb
ffree
xor
aas
pextrw
cwtl
jge
or
fildll
mov
inc
jp
out
popa
pushf
and
fsubrs
fildll
bswap
and
cwtl
pusha
adc
cmc
shlb
hlt
xchg
fwait
pop
sbb
decb
out
stos
mov
dec
addr16
mov
rorl
mov
mov
sub
insb
sbb
jecxz
clc
pop
mov
sub
ljmp
cmpsl
mov
mov
sub
mov
test
xchg
push
adc
pop
jne
std
movq
enter
ja
ja
and
dec
jae
add
shrl
add
imul
sbb
xchg
dec
or
push
cli
lret
mov
testl
pushf
pop
pop
sub
repnz
sahf
rclb
pop
enter
inc
add
ret
int3
in
popf
lods
outsl
incb
repz
iret
mov
into
lods
lods
cli
adc
mov
pop
add
dec
sbb
addr16
lahf
insb
stc
js
cmp
mov
xor
push
cmp
jnp
inc
mov
adc
test
int
xchg
xor
dec
jno
movsl
mov
dec
loope
adc
cltd
pusha
and
pop
xor
repz
repz
cmp
pop
adc
mov
rcrb
faddl
dec
fdivl
popa
lea
inc
adc
pop
mov
sub
testl
jge
clc
fsubrl
inc
push
push
dec
inc
scas
std
adc
in
push
cmp
xor
pop
jnp
cmp
insb
jbe
xchg
jg
sbb
or
shl
pop
and
mov
idivb
jge
enter
ljmp
sti
or
push
jne
dec
inc
push
fwait
ss
add
shlb
or
sub
xchg
xchg
xlat
lahf
add
scas
mov
outsl
jne
and
cld
or
imul
push
push
jnp
jecxz
insl
cs
int3
pop
push
sbb
xor
stos
out
sarl
mov
sub
pop
cmpsb
xor
mov
cltd
lcall
addb
jp
push
pushf
ffree
andl
filds
fnclex
mov
out
clc
jo
adc
mov
lahf
out
sbb
mov
int3
xchg
mov
in
clc
push
popl
push
cld
dec
push
jno
mov
mov
jne
xlat
in
in
sarb
out
mov
sti
lds
xchg
cmp
cmc
push
lcall
push
or
cmp
pop
call
xchg
hlt
xor
mov
jae
ret
enter
dec
divb
out
insl
mov
inc
aam
fbstp
mov
out
mov
mov
sub
ds
inc
mov
mov
popa
mov
bound
mov
inc
cld
rorb
inc
insl
pop
pop
fistps
lods
cmc
shlb
ret
cmc
mov
rorl
sbb
jge
inc
call
or
cmp
xor
in
push
mulb
call
hlt
test
mov
xchg
repnz
inc
call
mov
xor
outsl
ficompl
lock
xchg
orl
mov
pop
sub
shl
mov
call
pop
stc
xchg
adc
xor
cmp
xor
xchg
clc
insl
fs
push
inc
or
cmc
push
outsl
sar
mov
pop
push
das
dec
add
enter
push
jne
loop
in
sti
mov
push
mov
adc
loope
gs
sbb
ss
mov
xor
cmp
lock
mov
pop
pop
sub
arpl
sbb
ja
pusha
sub
stos
pop
pushf
or
jle
hlt
mov
dec
push
popf
scas
shlb
xor
aad
icebp
sbb
mov
adc
addr16
test
ja
shlb
into
aas
mov
pop
std
sti
ret
cmp
repnz
scas
lret
loopne
in
dec
cwtl
jbe
call
mov
inc
shl
call
gs
cmpsb
ss
imul
addr16
xchg
fidivs
add
into
jge
cmpsb
rcr
cmp
dec
mov
stos
mov
dec
xor
add
pop
std
cmpl
loope
clc
pop
pextrw
mov
cli
es
add
adc
mov
std
outsb
mov
jnp
lods
adc
sub
arpl
mov
fldl
icebp
pop
or
push
xchg
sarl
push
stos
incl
xchg
xor
in
decl
xchg
rorl
out
cmp
insl
mov
adc
sub
mov
sarb
fs
das
flds
sahf
sub
into
sti
in
push
xor
out
shl
rcr
cmp
inc
mov
mov
or
mov
gs
cmp
loope
inc
or
cmp
inc
pop
neg
push
std
in
aas
ds
or
int
xchg
jl
sbb
cmp
pushf
and
and
test
loop
in
and
push
mov
jecxz
iret
mov
xchg
mov
xchg
mov
push
dec
mov
adc
dec
jmp
sub
out
sbb
in
in
ja
xchg
xor
xor
bound
jmp
lret
ret
pop
sbb
clc
test
lods
jno
push
sub
xchg
js
fsubs
icebp
push
add
pushl
or
push
push
sub
mov
jb
ficoms
mov
out
sbb
dec
cmpsb
jg
out
xchg
mov
std
data16
loopne
or
imul
in
lds
push
dec
mov
add
adc
push
dec
cmp
mov
xchg
ja
sbb
decb
xchg
mov
push
xor
sbb
inc
xchg
mov
push
cltd
pop
sbb
mov
mov
and
jecxz
repz
sub
out
pusha
jno
div
fstpt
cmpsb
loopne
or
adc
push
mov
data16
jo
mov
xchg
test
push
fwait
cs
das
mov
les
jle
dec
js
arpl
adc
push
cmp
lahf
inc
jnp
sbb
mov
fisubl
outsb
pop
mov
and
nop
adc
push
xchg
jle
loopne
repz
cli
cmp
imull
push
sbb
dec
clc
ret
or
sbb
out
sbb
lods
nop
std
loopne
xchg
int
mov
pop
ret
stos
or
mov
inc
add
daa
sbb
out
cmpsl
loop
mov
mov
fstpt
jecxz
xchg
mov
cmpsl
andl
aam
pop
xchg
int
sub
pop
mov
mov
xor
jecxz
xchg
frstor
sub
test
and
add
movsb
or
lods
cli
xchg
subb
fnsave
cmp
lods
push
push
mov
cwtl
insb
pop
mov
cwtl
jbe
dec
cld
je
hlt
sbb
rcll
xchg
popf
adc
lret
jae
ret
outsb
lods
inc
mov
and
xor
mov
add
xchg
xor
dec
and
jbe
cbtw
dec
jge
js
jmp
imul
and
jo
xor
or
or
mov
or
or
test
daa
popa
or
pop
xchg
jnp
ret
adc
and
add
dec
inc
es
dec
outsb
lahf
test
ss
loop
inc
jge
sbb
rcl
cmc
xor
pop
gs
into
and
pop
jmp
rcr
rol
aam
lods
insl
ret
and
inc
cmp
add
inc
jno
xor
fcomp
sbb
jno
or
mov
ret
xchg
fs
das
or
fisubrl
addr16
cmp
xchg
sbb
cmc
loop
mov
scas
sub
mov
jo
mov
push
xchg
jmp
ret
pop
pop
inc
mov
inc
gs
sbbb
mov
push
pop
jae
push
xchg
iret
ret
xchg
cs
lret
lret
push
cmp
insb
syscall
js
or
mov
pop
lcall
and
cmp
adc
insl
sbb
push
jecxz
call
jecxz
jno
xor
inc
adc
push
ret
and
dec
rcrb
xchg
mov
and
or
xchg
jl
xchg
cwtl
cmp
sbb
ss
adc
jnp
or
clc
in
out
mov
test
pop
and
scas
aad
test
jns
adc
test
mov
mov
lahf
mov
ficompl
xchg
xor
jo
outsb
pop
cld
xor
inc
xchg
fstpl
dec
test
lret
loop
sti
push
push
mov
ja
mulb
inc
or
jae
cmp
lods
mov
add
scas
lds
shl
scas
cmp
test
mov
mov
in
xlat
fldt
pop
ret
pop
fadds
aad
sbb
nop
mov
push
cmp
sarl
test
mov
xchg
rcrb
mov
jecxz
and
fimuls
icebp
sbb
lods
push
out
add
icebp
mov
lret
adc
fisttps
xorl
and
push
jg
sub
cmp
cmp
mov
or
pop
in
xor
xchg
inc
pushf
popa
shl
adc
add
sub
push
or
in
and
int3
mov
sahf
adc
sbb
scas
push
arpl
jmp
pusha
popa
mov
xchg
adc
fbstp
xor
lock
lahf
stos
pop
lds
or
xchg
jge
cmp
pop
aaa
test
pop
jg
out
js
pushf
inc
mov
aaa
push
dec
faddl
sbb
nop
repz
das
mull
es
cmc
mov
addb
movsl
std
push
in
iret
mov
cmc
xchg
jae
pop
shr
adc
inc
mov
lds
dec
stc
inc
cwtl
sub
rcrb
or
pop
adc
divl
pop
sbb
lahf
cmp
add
inc
lods
sar
aad
mov
jb
iret
jne
sub
in
cmp
mov
adc
adc
repz
inc
clc
shll
add
or
xor
xchg
jg
dec
ja
js
jns
push
mov
aam
cmpb
insb
das
and
lock
stc
jl
jo
mov
inc
jg
mov
movsb
mov
fdivs
push
push
decb
rcll
negb
inc
xor
push
inc
movsl
in
aas
adc
mov
jg
xchg
pop
andb
sub
sahf
mov
add
inc
add
pop
or
cwtl
mov
insb
dec
rcrb
insl
ljmp
sbb
or
pusha
or
xlat
imul
sahf
mov
test
dec
jge
mov
push
fidivs
jmp
dec
scas
imul
sbb
mov
repnz
mov
in
inc
mov
xor
jmp
in
pop
addr16
je
inc
cs
mov
sbb
scas
lahf
ret
push
addr16
mov
in
out
xchg
sub
add
mov
push
repz
jg
stos
jge
cmp
ret
int
das
jge
pop
cmpsl
ja
push
lret
hlt
bound
pop
jbe
inc
dec
push
pusha
push
inc
adc
arpl
cli
stc
clc
and
sarl
mov
xchg
mov
sbb
int
xor
lcall
lahf
jno
jge
shrb
aaa
and
in
incb
imul
cmp
js
outsl
nop
jg
mov
ret
shrl
push
pop
sbb
pop
and
push
test
sarl
xchg
mov
ljmp
icebp
fwait
in
popf
outsb
push
cmp
cmp
movsl
jae
adc
or
in
jmp
stc
inc
mov
scas
add
lods
int3
jne
out
je
test
loopne
push
ret
jecxz
std
mov
add
cmp
in
pushf
add
sub
xor
jecxz
insb
adc
xor
and
or
sub
and
repz
ljmp
mov
sbb
sahf
pop
popa
mov
lcall
aad
cmp
jle
mov
int3
scas
ss
fwait
andb
fidivl
out
pop
movsb
add
test
test
push
inc
jle
ret
or
movzwl
jno
iret
cmp
cld
mov
loopne
inc
nop
int3
and
dec
and
jb
push
popf
into
xchg
repnz
jnp
imul
or
fsubr
jbe
sbb
push
sub
ja
push
or
test
xchg
sub
push
dec
add
xchg
sub
scas
mov
loop
jb
divb
pop
mov
imul
push
sub
popa
test
sub
sub
push
push
stos
test
and
jecxz
stos
in
xor
in
and
and
sub
xorb
jecxz
addr16
aam
cmp
sbb
inc
ss
sub
dec
insb
clc
xchg
mov
fidivrs
mov
fnstcw
dec
push
sub
loopne
lret
dec
and
dec
mov
mov
popf
and
cmp
dec
sarl
orl
dec
inc
fsubp
mov
cld
mov
outsb
xor
ret
nop
dec
sahf
mov
pop
push
sti
ret
fcom
inc
jg
mov
mov
dec
enter
mov
mov
mov
and
cmp
stc
setge
pop
cmp
mov
sub
loope
xchg
jg
hlt
cmpsb
mov
or
mov
ret
sbb
jmp
cmpl
dec
sub
addl
pop
xchg
stos
cli
jae
and
mov
addr16
sub
cwtl
stos
xchg
jl
addr16
ss
jnp
lret
mov
cs
fsubrl
mov
arpl
or
repnz
lods
loopne
mov
mov
aaa
aad
fsts
lret
mov
int3
push
xor
jp
ljmp
and
and
loopne
xor
sub
pop
mov
enter
xchg
sub
pop
inc
mov
xchg
add
dec
pcmpgtd
fdivs
lret
jg
cmp
jmp
push
inc
sub
cmc
imul
inc
mov
adc
xor
jne
mov
mov
cld
or
cld
adc
pop
xchg
movsb
pushf
out
aad
mov
xchg
xchg
fidivs
and
gs
fwait
xor
outsl
jmp
or
int
in
fisttpll
jle
fistps
in
sahf
insl
imul
orb
ja
mov
cli
mov
dec
mov
xor
xor
push
xchg
or
out
mov
out
popa
cmp
pop
mov
lea
dec
xor
repnz
stc
popf
pushf
dec
xor
fwait
lcall
int
push
push
or
repz
and
cmpsl
jnp
jecxz
stos
inc
mov
leave
pop
fidivrl
enter
pop
pop
xchg
push
mov
insb
mov
lods
sub
leave
pop
and
lods
in
cwtl
add
cmp
push
jecxz
dec
fnsave
int3
pop
stos
xor
dec
test
jbe
leave
adc
adc
das
test
idiv
mov
stos
or
jmp
gs
or
sarb
sbb
lcall
repz
pop
or
andl
push
fucomp
test
aaa
js
adc
jecxz
subl
mov
repz
fwait
xor
loope
gs
movsb
sarb
subl
outsl
push
fwait
daa
add
push
sbb
xor
mov
cwtl
repz
push
outsb
sarl
pop
inc
cmp
jo
cli
xchg
push
mov
jmp
mov
mov
js
nop
hlt
imul
mull
sbb
xor
cmpsl
jno
pop
fcmovbe
jnp
lcall
mov
mov
jbe
sub
jne
xor
sti
cmp
lret
mov
mov
sbb
inc
les
inc
test
push
int3
mov
mov
dec
mov
fsubrs
xor
movsl
push
inc
lds
inc
mov
push
mov
fcoms
ret
fdivl
lret
push
shlb
pop
popa
mov
fucomp
lret
sub
push
es
xor
mov
je
pop
in
fistpll
jg
xchg
jns
fbstp
lods
cmp
sub
test
inc
xor
or
repnz
int3
cmp
call
push
pop
addr16
hlt
insb
ret
out
or
mov
mov
pop
popa
pop
rcrl
aaa
mov
add
add
push
adc
cmp
loop
pop
cmp
neg
or
ret
push
jmp
inc
cs
cmpsb
adc
sub
cmpsb
popa
setbe
cmpsl
and
aas
dec
aad
mov
push
inc
cmpsb
call
add
xchg
lds
pop
inc
mov
je
jo
test
iret
je
add
dec
mov
scas
mov
dec
mov
ss
and
fcomps
mov
lcall
mov
push
jb
adc
mov
push
lahf
icebp
xlat
outsl
push
pminub
add
fdivrp
pop
aaa
push
mov
movsl
gs
test
dec
test
push
mov
pusha
mov
xchg
xchg
repz
xor
shrl
cltd
sub
div
or
cmc
inc
cmc
call
inc
jbe
xchg
mov
cmp
aas
incb
stc
lock
pop
lret
sub
roll
mov
or
ljmp
clc
mov
push
xchg
xlat
out
shl
mov
or
sbb
in
xchg
out
xchg
iret
in
sbb
pop
and
sub
out
daa
std
nop
dec
stc
xchg
push
cltd
inc
mov
push
mov
push
xchg
sbb
sahf
push
mov
lds
mov
xchg
xor
in
and
pop
sbb
pop
lds
pop
out
imul
bound
cs
lret
xchg
add
cmpsl
fnstcw
std
lahf
stos
xor
dec
push
push
testb
cmp
adc
in
stos
mov
and
jge
cmp
push
out
mov
inc
int3
mov
test
inc
mov
cmp
cmp
add
scas
cltd
outsb
cs
pop
in
inc
xor
insl
sarb
cmp
es
jp
inc
xchg
mov
shlb
adc
int
or
sti
lahf
jmp
sbb
and
push
jg
xchg
jmp
fucomi
or
adc
ds
stos
mov
loope
cwtl
fucomp
add
or
cmp
mov
mov
fisubl
and
sub
pop
aaa
in
sbb
inc
loope
push
or
or
lds
mov
loop
int3
or
popa
pop
inc
dec
sbb
aas
sbb
scas
push
arpl
test
outsb
dec
jge
int3
test
mov
fisttpll
add
fadds
stc
andb
movsl
clc
mov
dec
pusha
and
cmc
stos
cmp
mov
jae
pop
pusha
dec
dec
push
cmpl
push
aad
pop
jns
das
xor
lcall
xchg
sahf
in
sti
mov
xor
hlt
sahf
pop
lods
and
ds
mov
cmpl
add
stos
mov
mov
pusha
jae
pop
jge
and
push
rcrb
add
and
dec
movsb
imulb
xchg
sahf
ret
enter
jne
daa
adc
pushf
out
lock
mov
and
xor
cmp
les
pop
shlb
lret
sbb
pop
dec
jo
sahf
out
push
fnstsw
dec
cmp
popa
push
lcall
loop
pop
repnz
mov
xor
jmp
aam
push
out
addr16
scas
icebp
inc
inc
mov
rolb
push
test
sub
rcll
rorb
sbb
sbb
cmc
jae,pn
xor
jp
sbb
stc
mov
dec
loopne
push
inc
ljmp
dec
fsts
stos
ljmp
xor
sbbl
push
xchg
ljmp
popf
orl
out
xor
xchg
ds
pop
pop
data16
xor
mov
shlb
xchg
jns
and
xor
push
stos
std
fnstsw
sbb
sub
mov
pusha
cltd
xchg
ss
jmp
and
or
fsubr
out
outsl
enter
cli
pop
and
dec
sub
test
in
sbb
sbb
lock
test
imul
dec
xchg
dec
loopne
add
test
ss
sbb
dec
mov
sarl
cmpl
add
push
into
mov
add
ja
in
lods
int3
push
notl
sbb
sub
es
aaa
cmp
cs
cli
stos
mov
add
cs
adc
fwait
ret
sbb
jns
and
rcrb
and
sub
lock
fadds
or
rcll
xor
fildll
fimull
inc
nop
add
lods
cmc
adc
jo
cmp
out
xchg
repnz
in
xchg
dec
loop
push
insl
mov
fstpl
mov
adc
cli
cwtl
out
stos
inc
pop
inc
loope
adc
addb
adc
xchg
cli
arpl
lods
cltd
popa
push
repnz
push
sub
mov
inc
into
loopne
xor
cld
pushf
mov
cmc
pop
jnp
xchg
push
pop
mov
notl
mov
jo
fbld
ret
and
stos
and
leave
and
xor
push
or
pop
jbe
fiadds
sub
fs
sbb
clc
or
mov
es
xchg
inc
mov
cmp
sti
push
movsl
mov
stos
jae
jmp
sbb
enter
fbld
jl
fisubs
dec
mov
xchg
dec
stos
xchg
push
stc
and
ljmp
pop
frstor
adc
xor
add
inc
cs
icebp
xchg
fsub
js
arpl
ret
leave
out
dec
int3
mov
aad
mov
xchg
into
pop
inc
pushf
insl
cmp
scas
jp
jle
es
in
xor
call
dec
fcoml
test
into
push
adc
mov
out
mov
mov
and
xchg
jo
mov
add
add
sub
sub
cwtl
push
lock
jnp
ret
or
xor
push
sbb
push
jp
xor
push
sbb
mov
icebp
add
mov
or
testb
dec
out
data16
fnstsw
in
enter
jl
das
inc
cli
pop
data16
out
and
pushf
jle
mov
cwtl
mov
sbb
mov
sbb
jno
mov
and
xor
sbb
add
fnstenv
jne
neg
push
bound
lods
jle
sahf
aas
lahf
or
ss
xchg
ja
cmp
pop
or
in
jp
adc
push
xor
leave
jae
pop
aas
rorl
test
lar
inc
clc
sbb
shr
jne
cltd
bound
mov
mov
pop
mov
push
xchg
sub
xor
xchg
mov
cmp
fldt
xor
cmp
fsts
sub
adc
inc
std
dec
cmp
rolb
dec
cmp
add
sub
cmc
inc
jmp
fcmovne
mov
fidivl
mov
aad
cs
imul
cli
cmpsl
lods
mov
scas
imul
ljmp
mov
rorl
call
fs
mov
xchg
pop
xchg
jecxz
test
dec
or
adc
cmp
ljmp
inc
cmpsb
sbb
and
pop
cmp
jge
push
mov
xorl
adc
repnz
xor
jbe
leave
add
and
lods
lret
stos
inc
test
jmp
cmc
test
jns
out
jge
call
out
mov
stos
push
insl
repnz
pop
push
xchg
outsb
shll
leave
jmp
sub
clc
leave
sbb
xchg
stos
dec
sub
push
ss
or
sbb
mov
sub
in
and
mov
pop
loope
mov
jle
out
pop
cmp
pop
xlat
addr16
mov
xor
pusha
nop
xor
jecxz
outsb
mov
shll
xchg
xor
jmp
push
dec
into
inc
dec
mov
or
jmp
push
sti
int
push
adc
jge
test
shrl
sub
mov
sub
fimull
xor
mov
insb
fnstenv
dec
dec
adc
aad
sbbl
mov
xchg
sub
xchg
or
addl
cmc
jne
mov
into
in
in
rdpmc
lahf
xchg
les
nop
dec
xchg
push
stc
call
sahf
insl
enter
stc
das
in
cmp
or
lods
mov
ret
push
leave
mov
mov
nop
and
leave
and
push
push
adc
sahf
loop
sarl
xchg
adc
jmp
mov
xor
sbb
lea
out
add
pop
in
push
adc
out
dec
mov
out
inc
dec
fidivrl
mov
sub
fnstsw
lods
ret
int
push
gs
xor
rol
lret
push
shll
add
jno
sbb
mov
push
cmc
js
jae
int
jns
jo
mov
cmp
wbinvd
push
shl
inc
scas
jbe
jae
fiaddl
and
pushf
xchg
pop
dec
inc
adcb
andl
mov
or
mov
dec
ljmp
inc
xor
data16
stos
test
add
mov
stos
mov
push
lahf
pop
push
adc
jle
lds
jo
or
movsl
mov
pop
mov
xor
mov
test
dec
orl
xlat
push
adc
shll
dec
mov
pop
push
sarb
pop
fsub
sub
lahf
clc
dec
fldl
jno
mov
jbe
into
pop
lret
out
out
fidivl
xor
testl
xor
and
movsb
push
rclb
xchg
lret
stos
scas
mov
sti
mov
mov
adc
inc
or
jo
mov
and
pop
jp
out
mov
frstor
ds
into
fs
andl
add
movsb
cli
push
jle
push
cmp
xchg
test
cs
outsl
pop
std
sahf
pop
mov
adc
leave
cmpsl
out
clc
dec
pop
pop
les
and
and
fs
in
stos
imull
pushf
adc
in
lret
push
mov
push
mov
into
aam
inc
sbb
loopne
outsl
inc
gs
cmp
cmp
int3
ss
std
mov
and
rcll
enter
insb
xorb
and
sti
test
shl
jge
clc
or
fwait
dec
movsb
repnz
loope
repz
push
daa
dec
inc
cmp
mov
sub
js
mov
xor
movsb
sahf
rorl
dec
insb
xor
mov
popl
jns
adc
or
mov
inc
ficoml
and
lods
insb
leave
fcompl
rclb
cwtl
cltd
mov
dec
sub
aaa
mull
testb
aam
pop
ja
adc
imull
push
ficomps
push
fs
and
aam
or
out
addr16
and
aam
aas
adc
shlb
pusha
jecxz
xor
mov
scas
pop
fistpll
mov
cmpsl
push
daa
lcall
push
xchg
in
xlat
cmc
addr16
das
ret
mov
sbbl
ljmp
jnp
test
cwtl
or
jge
js
pop
push
push
dec
or
adc
arpl
loop
jecxz
push
dec
outsl
pop
cmpsl
add
mov
outsl
ja
enter
jno
jns
mov
ss
pop
sub
adc
fsubrl
add
outsb
adc
jg
pop
rolb
popf
fidivrl
repnz
xor
xchg
pop
add
jnp
in
lods
mov
test
movsb
daa
or
lcall
loop
shrb
push
xchg
scas
sub
rep
insb
xchg
xor
push
xchg
jg
aas
xchg
dec
xor
and
in
scas
lock
mulb
adc
repz
mov
fst
cli
in
push
jo
addr16
es
xor
mov
cmp
in
sbb
xchg
jo
mov
mov
or
jp
data16
lahf
punpcklwd
pop
inc
mov
enter
cs
adc
mov
mov
lahf
ret
dec
sub
lods
stos
das
jle
jae
inc
out
sub
popa
jb
aam
out
loop
or
lcall
test
add
pushf
jle
rcrl
mov
sti
sbb
pop
pop
cmpsl
jno
sbb
test
xchg
mov
sbb
lods
dec
push
aam
test
mov
inc
lock
pop
or
outsl
sbb
xor
pusha
jo
out
dec
dec
lock
mov
sbb
jle,pt
push
popa
mov
mov
mov
jp
mov
sbb
dec
in
sti
mov
jp
imul
out
jg
xchg
adc
fstpt
xorb
repz
or
std
ret
pop
push
outsl
hlt
and
lret
xor
push
stc
push
cmpl
sbbb
cmp
mov
add
aad
jle
cs
pop
mov
dec
or
jo
xor
jp
loopne
xor
stos
sub
sbb
ss
idivb
xor
mov
hlt
pop
pop
mov
outsb
les
inc
ja
outsl
data16
int3
dec
in
loope
ds
outsb
pop
pop
mov
int
or
jmp
nop
daa
daa
pop
dec
pushf
in
shll
sarb
add
add
pushf
dec
lds
jg
jle
subb
push
sub
mov
pushf
int3
gs
loope
psrlw
scas
lods
sbb
jle
shl
int3
inc
mov
andb
data16
clc
and
add
jp
movsb
jecxz
arpl
push
cmp
pop
mov
dec
mov
test
lret
jno
cld
push
mov
ficomps
daa
popf
sbb
mov
pop
or
xor
sub
push
addl
mov
jmp
cmp
insl
ja
fisttpl
imul
mov
xchg
call
xchg
pop
insb
icebp
mov
lods
mov
loope
add
ss
call
xchg
mov
in
or
mov
mov
adc
fcoms
fwait
add
out
dec
in
and
cltd
bound
clc
inc
test
add
mov
mov
in
lcall
enter
pavgb
lretw
pop
cli
mov
loope
inc
xlat
fstps
icebp
inc
push
and
inc
push
ret
test
push
lock
sub
cmp
adc
pop
inc
lock
js
es
cmpsb
or
in
repnz
orb
xchg
in
add
popa
xchg
push
inc
imul
popf
ss
mov
ficoms
xor
dec
lea
push
and
dec
or
enter
add
or
aad
aam
fucom
lret
fadd
jecxz
xchg
adc
cmp
jo
xchg
call
fisubrs
push
or
add
lods
ret
push
je
mov
mov
movsl
mul
push
jp
out
jno
sub
push
imul
or
pop
fidivl
stc
adc
cmp
call
mov
inc
sbb
loop
clc
insl
fisttpll
mov
sub
push
lds
add
dec
dec
out
fiadds
add
inc
or
dec
mov
mov
mov
adc
bound
and
or
lret
push
or
xchg
jbe
dec
das
xchg
jle
pop
lock
mov
sbb
lret
lods
rcl
setnp
mov
popf
mov
push
incl
jne
push
mov
cmp
xchg
sub
test
fists
jmp
push
jae
dec
pcmpgtd
stos
xchg
cmpsb
jge
dec
sub
ret
outsl
lcall
ror
inc
ds
imul
and
js
pushf
movsb
cmpsl
mov
xor
in
mov
pop
cli
inc
je
mov
jge
inc
cmp
or
push
dec
insl
mov
dec
cmp
mov
mov
inc
sub
iret
fdecstp
jmp
or
sub
iret
out
pop
sub
jp
pop
jg
mov
call
xchg
pop
mov
adc
adc
adc
out
and
jb
pop
mov
or
mov
scas
jbe
shl
roll
sarb
jns
scas
and
ljmp
xchg
xchg
sub
fstl
aad
sbb
fldenv
test
jb
pop
test
shll
je
inc
enter
lret
add
rcrb
jp
mov
pop
jmp
out
sub
mov
push
jae
push
ja
or
ja
or
mov
mov
inc
cs
in
mov
xchg
pop
mov
filds
shr
sub
adc
xor
fdivl
xor
xchg
dec
sub
rcrb
nop
cmpsl
and
xchg
imul
movsb
jmp
lods
adc
int
lahf
shrb
xorl
das
insl
pusha
imul
inc
aas
js,pt
mov
scas
jecxz
mov
adc
test
out
push
sbb
lods
aaa
ss
je
xchg
shlb
test
adc
pop
and
rcrl
push
js
xlat
push
mov
pop
push
aad
lea
pushf
lods
leave
dec
cs
testl
mov
sub
push
pop
std
jae
cli
loop
adc
aaa
xchg
in
js
mov
add
icebp
mov
push
pop
imulb
out
into
mov
sarl
xchg
dec
sub
imul
mov
dec
cmp
sub
sub
adc
cmc
fstl
cwtl
sub
inc
xor
mov
sbb
mov
jecxz
fistl
jno
and
xor
sbb
sar
loope
xlat
sbb
xlat
popa
or
push
mov
push
cmp
lock
push
bound
and
cmpsb
enter
mov
arpl
cli
mov
cmc
add
arpl
jo
aas
repz
aad
stos
loopne
xchg
mov
ljmp
cmovno
push
test
imul
jb
inc
dec
mov
pop
fcmovnb
xor
xrelease
mov
lods
mov
call
sub
cmp
dec
inc
sub
jg
push
negl
cwtl
cld
jecxz
xor
shlb
mov
rclb
pop
cmc
mov
pop
orl
mov
test
fmuls
je,pn
mov
xor
add
adc
jo
mov
fs
inc
jne
lret
mov
xor
inc
ret
gs
cmpsl
or
or
lock
sub
adc
pushf
xor
xor
aam
dec
andb
ljmp
sti
nop
fidivs
mov
mov
cmc
popa
xchg
mov
int
das
loope
outsl
fwait
pop
fstpl
xchg
mov
frstor
aad
je
ret
pop
dec
mov
xchg
fisubs
lret
jns
sub
sahf
ss
mov
outsl
enter
je
cmp
imul
lret
mov
dec
addr16
int3
dec
scas
xchg
xchg
mov
jne
pop
sbb
pop
dec
fmul
pop
mov
cli
xor
mulb
mov
fisubrs
add
add
push
xchg
hlt
fsubs
jge
das
cmc
sbb
push
ret
mov
jp
aas
or
mov
adc
filds
mov
int
add
icebp
mov
dec
incl
and
mov
int3
fsubrl
lcall
add
jmp
mov
sub
push
mov
xor
sbb
sub
repz
idivl
leave
mov
dec
mov
xor
fdivrl
fs
dec
insb
scas
fmulp
aad
mov
sub
push
pop
enter
mov
jecxz
rcrb
fldenv
cmc
sbb
out
push
jmp
push
pop
xchg
xchg
int3
int
test
mov
jge
mov
jmp
pop
push
push
aad
sbb
inc
push
stos
cmc
add
push
out
mov
insl
outsb
aam
adc
jle
and
sbb
lea
mov
loop
ss
loope
fsubrl
or
sbb
arpl
and
push
in
lock
mov
aam
cmp
je
add
lods
xchg
mov
shlb
jl
sbb
enter
jns
adc
pop
cmp
pop
gs
xor
aaa
inc
cli
dec
fwait
movsl
test
xor
and
sbbl
push
add
sub
insb
xor
ljmp
cmp
inc
mov
aad
call
out
push
jl
pop
ljmp
jge
push
jns
dec
dec
and
xlat
popa
pop
sub
pushf
pushf
sbb
inc
sub
shrl
call
cmp
add
popa
mov
stos
mov
xchg
push
mov
gs
mov
daa
push
imull
stos
push
scas
sbbb
scas
shll
jge
and
icebp
scas
sub
sub
bnd
jmp
inc
movsl
cmp
movsl
bound
enter
dec
imul
xlat
jl
sub
test
and
data16
arpl
and
arpl
repz
push
mov
ja
pop
shl
pop
fdivrs
adc
imul
pop
fdivl
sub
mov
popf
mov
xchg
and
xor
xchg
mov
or
shlb
push
arpl
sub
std
sbb
xchg
pusha
mov
fs
fbstp
cmp
int3
out
ds
xlat
mov
push
mov
addl
mov
mov
xor
inc
cmc
sub
loop
and
nop
in
sub
mov
mov
pop
aad
lcall
imul
jns
out
sub
xor
cli
test
popf
cld
mov
in
push
xchg
xchg
dec
insl
and
ljmp
push
mov
push
movsl
call
aam
push
push
repnz
lret
lret
aam
inc
xor
or
mov
inc
pop
popf
xchg
popf
mov
arpl
mov
ficoms
jbe
pop
mov
xchg
and
cmp
mov
sub
aas
or
add
ret
sub
mov
mov
loopne
int3
mov
call
xor
fsubrl
mov
rolb
or
dec
sub
scas
mov
pop
adc
out
ret
dec
xchg
xor
jecxz
mov
lods
ret
in
mov
lea
aaa
pop
push
ja
lret
leave
mov
sarb
imul
sar
push
cmp
mov
sbb
fldlg2
je
insb
xchg
xor
nop
cmpsl
pusha
mov
pop
pop
push
call
push
sahf
je
lcall
sub
in
arpl
notb
pop
andb
jmp
lods
inc
fists
outsb
jl
jbe
clc
movsl
jo
sar
insb
adc
fisubl
inc
test
push
jle
fmuls
jmp
or
je
cwtl
sbb
pop
sub
pop
sahf
and
or
nop
aaa
jo
stc
pushf
push
test
int3
inc
inc
and
es
pop
and
add
mov
pop
scas
out
jp
bound
clc
mov
aas
mov
dec
mov
jb
imul
lods
cld
cmpsb
add
mov
pop
push
xchg
repnz
aam
jp
jge
xor
mov
hlt
sub
or
xchg
or
cli
mov
popa
sbb
dec
sbb
rolb
sub
add
xchg
cmpsb
shl
test
aas
addr16
into
scas
jg
inc
sbb
lods
sub
dec
cmp
imul
inc
fldcw
mov
sub
testb
mov
shrb
push
jnp
push
sbb
ds
adc
and
pop
sub
dec
mov
lock
add
jge
mov
int3
push
adc
mov
jp
jle
cmp
xor
mov
das
push
adc
dec
or
daa
push
push
loopne
pop
in
mov
leave
pop
adc
call
adc
dec
leave
jbe
sub
pmaddwd
sahf
daa
out
fmuls
dec
or
test
fistpl
cmp
outsl
pop
dec
mov
mov
mov
xchg
ljmp
mov
jp
es
mov
pop
jmp
cmp
or
call
add
inc
mov
out
add
shlb
inc
call
es
adc
xchg
xor
fwait
test
mov
test
xor
andl
add
stc
jp
pop
mov
mov
mov
inc
test
arpl
add
pop
sub
pusha
imul
xor
or
ja
loopne
mov
mov
lret
int
popl
ljmp
popl
sub
pop
rclb
jnp,pn
sti
xchg
mov
sahf
xor
pop
mov
cmp
mov
pop
pop
and
jmp
push
or
sbb
mov
ljmp
movsb
gs
popa
adc
pop
and
loop
hlt
push
stc
xor
mov
and
nop
sbb
sub
or
mov
dec
in
je
ret
out
testl
inc
out
fcmovne
popa
inc
negb
fidivrs
loop
fistl
cmp
test
mov
or
js
push
test
icebp
out
in
cli
mov
jne
jmp
ds
dec
sub
or
fisttpl
push
cli
data16
stos
add
cmpsb
std
outsb
adc
dec
mov
aaa
pop
es
int
inc
mov
addr16
push
fcoml
push
adcl
fld
je
popa
sub
xor
sbb
xchg
jp
lods
add
gs
sbb
mov
fwait
call
test
jns
xlat
pop
cmpsl
xor
xor
lods
pop
mov
pop
xorb
jbe
mov
icebp
mov
sbb
cmp
mov
inc
xor
mov
push
std
test
cltd
mov
fcmovne
mov
icebp
in
jne
es
ja
mov
mov
lea
inc
rcll
or
movsb
movsl
lods
xor
pop
leave
add
out
xlat
test
push
mov
and
je
mov
push
jnp
popa
call
loop
sub
mov
andb
or
sbb
inc
xor
push
fildll
sarb
daa
fldl
mov
mov
and
pushf
inc
call
mov
sbb
fs
jnp
or
inc
mov
xchg
mov
std
mov
jl
inc
bound
cmpsb
pop
sahf
arpl
sbb
addr16
mov
jb
inc
popf
rorb
xchg
dec
lret
aaa
icebp
mov
jae
cmc
sbb
lret
pop
addr16
jg
cltd
sbb
sbb
aas
xchg
mov
sbb
inc
fidivrs
imul
cwtl
ljmp
dec
adc
push
xorl
inc
sbb
int
mov
mov
lret
sub
cmp
hlt
mov
inc
loope
test
das
push
dec
notb
pushf
mov
inc
fisubl
sbb
mov
xchg
inc
or
xchg
test
xchg
jne
and
das
gs
xor
decl
jnp
fsts
mov
xchg
add
retw
xor
shlb
std
hlt
fdivrs
bound
jae
or
mov
push
fnstsw
xor
test
faddl
push
ret
fdivrs
ss
jb
mov
add
fs
sub
popa
cmp
cmp
push
cmpsb
insl
xor
and
mov
cmpb
dec
inc
mov
pop
popl
outsl
push
pop
pop
xchg
les
pop
cmp
std
fnsave
dec
xlat
xor
jp
and
adcl
inc
jg
in
sbb
mov
jnp
pop
mov
mov
cmpsb
jge
rol
mov
push
loope
fwait
mov
or
xor
lds
jno
pop
pop
dec
ret
insb
dec
ret
andb
aaa
add
test
movsl
daa
mov
loop
mov
pop
es
or
pop
adc
xchg
xchg
negb
or
cmp
push
and
fidivl
push
cmp
push
nopl
adcb
outsl
mov
xor
mov
sbb
inc
push
sub
es
mov
out
jle
sbb
sti
push
jae
arpl
fnstsw
clc
mov
push
dec
cmp
bound
or
fwait
jb
lahf
push
cld
mov
inc
arpl
and
loope
arpl
out
test
out
mov
add
pushf
jae
sti
dec
je
or
cmp
fdivs
jnp
xchg
jnp
mov
sbb
hlt
fldl2e
fs
out
dec
mov
jecxz
enter
addb
push
fisttpll
bound
test
mull
inc
adc
jmp
out
xchg
jp
sub
mov
call
fstpl
fldcw
or
pop
mov
jl
xchg
push
mov
jbe
inc
fs
add
movsl
jno
xchg
adc
mov
into
cld
int
ljmp
mov
dec
loopne
js
cmpsb
jl
mov
cmp
popf
pop
fcomps
add
xchg
and
outsb
xchg
jno
push
iret
mov
int
bound
call
loope
xchg
int
xchg
jno
popa
jo
outsb
adc
lret
cmpsb
jbe
pop
push
les
lcall
leave
repz
inc
ljmp
fwait
lods
xchg
ds
mov
push
int3
pop
inc
mov
mov
pop
out
sbb
mov
add
scas
inc
jns
xor
mov
stos
xchg
out
cmp
lret
stc
sbb
pop
adc
mov
enter
push
add
lret
xor
dec
scas
icebp
mov
and
notb
insb
adc
push
mov
cli
push
jle
xor
in
mov
rolb
or
fsubrl
push
jo
paddusw
inc
mov
in
lahf
pop
cmp
push
lret
je
cmpsl
mov
dec
mull
adc
aad
lds
movsl
popf
test
popa
fisttpll
cmp
pushf
pop
fs
push
mov
jo
sbb
outsb
ret
aam
je
xchg
movsb
adc
or
dec
sbb
or
xlat
aaa
push
jl
and
sub
inc
imul
cmpsl
sub
pop
inc
xchg
jno
sti
aam
in
xor
mov
ret
jmp
ds
mov
inc
out
xor
imul
shrb
inc
stos
mov
mov
xor
flds
fstpt
mov
cmp
xor
mov
mov
shl
lods
mov
scas
jge
mov
and
std
inc
jg
xchg
xchg
mov
adc
xchg
scas
ret
inc
sub
pop
neg
sti
andl
cmc
daa
mov
pop
cli
or
outsl
inc
repz
push
pop
xchg
stos
mov
scas
push
repnz
adc
test
pop
mov
xchg
call
pop
sarb
add
sti
lret
dec
mov
push
jno
stos
outsl
pushf
inc
imulb
out
addr16
add
mov
gs
mov
ds
fisubs
mov
jge
sbb
das
add
mov
loop
or
add
dec
js
push
shr
adc
pushf
xlat
sub
cmp
sbb
add
xor
or
dec
iret
pushf
lret
jmp
das
xor
daa
sub
pusha
lock
cmp
adc
fwait
out
pop
xor
jg
dec
outsb
sbb
lods
sub
lret
adc
pop
inc
mov
shlb
pop
ljmp
xchg
inc
movsb
jne
imul
stc
adc
pop
jns
into
shl
mov
push
stc
inc
cs
mov
add
call
push
sbb
cmp
and
mov
adc
and
cli
add
lcall
and
addl
ss
pusha
push
lcall
cltd
insb
xchg
iret
das
call
in
imul
and
xlat
cltd
mov
xchg
notl
mov
movsl
rorl
je
and
jl
add
pop
data16
mov
iret
mov
xchg
sbb
ret
adcb
xchg
aam
sbb
stc
clc
jne
dec
or
push
xor
jb
push
sbb
dec
es
add
das
lret
jae
xchg
pop
pop
pop
mov
pop
mov
pusha
cs
adc
jecxz
test
add
lret
push
inc
pop
add
popf
shl
lret
mov
push
roll
stc
add
ret
jg
fnstcw
fisubs
xchg
jp
or
std
mov
in
inc
mov
jbe
and
dec
icebp
cwtl
inc
cmc
push
rorl
movsb
cmc
fs
xor
adc
sbb
or
ret
out
cmp
push
ss
jecxz
dec
or
pop
shlb
hlt
cmp
mov
sub
ss
dec
icebp
outsb
xor
call
ret
or
andl
scas
or
dec
inc
xor
shrl
test
mov
push
aad
xor
mov
or
push
jne
cmp
pop
imul
pop
adc
out
inc
into
lea
sbb
mov
and
pop
loopne
sbb
xchg
sub
pushf
pushf
adc
sbb
jo
sub
inc
jecxz
mov
ret
rolb
pop
xor
ror
xchg
pop
adc
adc
in
std
fnstsw
sbb
and
jp
xlat
loopne
daa
adc
mov
fs
jbe
insb
push
call
rcrb
sub
mul
and
mov
cmpsb
dec
lods
xor
jge
jns
pusha
inc
popa
jmp
popa
inc
fs
test
pop
repnz
pop
sub
ret
orl
adc
call
or
xchg
decb
dec
xor
xor
add
sub
test
push
out
cld
push
add
cmp
mov
pop
sti
xor
push
inc
sbb
inc
sti
shll
push
sub
jns
repnz
js
outsb
sub
xchg
mov
jle
daa
sahf
push
mov
mov
mov
call
popa
scas
push
xchg
nop
jne
mov
je
ficomps
cwtl
int3
ja
not
mov
cli
jp
mov
jecxz
jb
ret
jne
pop
enter
test
pop
call
jne
dec
fsqrt
gs
pop
xor
unpcklps
cwtl
mov
in
or
shlb
jge
xlat
xor
in
mov
cmp
dec
cli
pop
cld
fisubl
fucomip
inc
out
stos
cmc
insl
cmc
or
jo
push
jo
sub
dec
lea
mov
outsb
stos
mov
adc
xchg
das
js
xchg
imul
mov
inc
rol
jmp
loop
lcall
adc
scas
mov
cmpsl
pop
mov
push
ss
sbb
setns
les
jb
mov
sbb
push
jnp
lahf
cmp
mov
sbb
adc
adc
test
test
inc
fadd
ret
mov
loope
cltd
xor
arpl
xlat
adc
sbbl
add
dec
jg
pushf
mov
mov
push
pushf
enter
orb
dec
movsl
cs
sub
lods
icebp
inc
cld
dec
fdivrs
into
mov
in
movsl
or
out
insb
int3
scas
in
jp
mov
pusha
jo
or
gs
ja
jae
pop
mov
in
inc
cmp
int
ja
jmp
or
in
xchg
out
pop
add
jno
fmull
inc
or
in
mov
int3
dec
sub
sbb
add
pop
cmovnp
pop
inc
xchg
xor
in
push
inc
pop
daa
movntps
mov
int3
push
clc
sbb
add
and
mov
xchg
test
cmpl
xchg
adc
ret
out
and
shr
in
cld
xor
ds
int3
xchg
cltd
das
rolb
test
and
inc
nop
mov
xor
push
in
arpl
mov
or
pop
leave
add
pop
or
push
adc
inc
fnstsw
push
fstpl
aaa
hlt
jb
lock
in
pop
cli
xlat
roll
inc
push
lret
push
jl
test
or
dec
sbb
dec
popa
jp
sub
push
sub
sbb
mov
addl
out
cwtl
or
pop
gs
pushf
loop
mov
aam
push
enter
mov
and
movsb
stos
xchg
fiaddl
sbb
arpl
lods
scas
into
mov
inc
pop
enter
mov
mov
lea
xchg
mov
aam
stos
shrb
mov
cmpsb
stc
andb
jle
loopne
pop
dec
dec
in
lea
divl
xchg
xchg
enter
mov
hlt
aas
xchg
or
xchg
sub
out
icebp
std
movsb
sbb
insl
mov
ja
or
lcall
adc
std
in
pop
fbld
cmp
and
ds
out
popa
xor
and
fs
repz
xchg
lods
addr16
leave
insl
inc
cmp
ret
xor
das
adc
jl
out
xchg
pop
mov
loop
scas
sbb
imul
xchg
mov
movsb
subb
jp
jl
jne
rolb
jle
fisttpl
ud2
faddl
xchg
ljmp
in
sub
cwtl
out
scas
mov
fildl
out
fadd
pusha
or
bound
inc
das
ficoml
mov
dec
fwait
mov
cmpsl
and
inc
mov
cltd
aaa
insb
push
cld
fwait
lock
mov
shrb
mov
lods
mov
mov
xchg
loopne
test
and
push
mov
cmp
and
and
pop
pop
outsb
adc
call
stc
mov
lds
sbb
popa
jle
sbb
sub
xchg
push
inc
mov
loopne
jb
sti
and
pop
mov
popf
sub
in
xor
mov
shlb
ret
add
faddl
call
cmp
arpl
mov
pop
out
mov
cld
outsb
imul
cmp
movsl
mov
lcall
shrl
add
clc
and
sbb
fadds
push
scas
inc
sbb
pop
mov
in
aam
dec
inc
aaa
jmp
mov
and
push
outsl
adc
movsl
fs
fsubp
icebp
cmpsb
push
ret
or
ds
int
in
int3
lods
lds
xchg
add
xchg
jo
jae
sub
adcb
loop
lahf
ja
pop
push
cwtl
xor
loop
mov
mov
dec
dec
insb
add
add
jp
inc
sbb
adc
jmp
jns
mov
inc
les
das
inc
jmp
mov
jge
sub
mov
stos
or
jg
rclb
mov
arpl
mov
stos
pop
mov
and
xchg
adcb
and
ret
mov
ds
jecxz
xchg
sub
jmp
in
mov
add
js
mov
out
cli
dec
sti
push
mov
jnp
ret
pop
mov
sbb
fildl
dec
addr16
bnd
cmp
mov
aam
int3
xchg
iret
cmp
inc
insb
notl
imul
mov
repz
pop
push
in
xlat
lea
or
dec
xor
lea
gs
jmp
dec
or
pop
inc
scas
div
push
je
push
int3
pushf
and
xchg
pop
fwait
pop
xrelease
pusha
not
imul
or
mov
inc
in
ljmp
inc
mov
jg
mov
inc
xchg
pop
xor
push
cmc
sbb
jb
pop
repnz
sbb
xchg
mov
inc
xor
push
pop
ret
jne
test
xlat
dec
bound
movl
addr16
movsl
lds
call
or
js
mov
bnd
insb
imul
arpl
imul
mov
xor
subb
cmp
push
nop
mov
xor
pusha
pusha
mov
ret
inc
test
pop
and
mov
and
pop
mov
stos
test
sub
ja
int
out
pop
fisubrl
ja
push
or
dec
hlt
fistl
mov
fsubrs
xor
xor
fnstcw
push
dec
in
pop
push
ds
dec
sub
sbb
and
and
pop
add
jle
iret
gs
testb
daa
jb
jae
cmpsl
push
push
xchg
leave
fs
imul
mov
std
int
xchg
mov
push
and
into
push
mov
scas
arpl
pop
add
lds
xchg
rolb
test
adc
in
inc
jne
sub
or
js
les
out
pop
pushf
mov
jg
aaa
push
pop
or
mov
sub
stc
pop
push
adc
out
jbe
mov
sbb
sub
ja
stc
cli
push
jns
dec
push
mov
ss
das
cli
imul
xor
fsubrl
inc
push
dec
mov
fwait
mov
sub
or
sub
jo
dec
repz
nop
xor
pop
xor
sbb
in
lret
mov
fs
xchg
xchg
cwtl
xchg
shll
je
xor
mov
or
or
adc
add
inc
inc
push
out
mov
popf
rorl
insb
nop
dec
cmpsl
push
pop
xor
inc
pop
imul
sahf
shrb
stos
mov
jmp
mov
call
mov
jbe
cmpsb
sbb
and
divb
mov
xor
jecxz
sbb
sbb
cmp
xor
out
aad
lret
add
test
in
test
dec
sub
mov
mov
sbb
arpl
add
mov
jae
test
aaa
inc
xor
enter
push
sbb
inc
inc
sahf
out
xchg
mov
xor
pop
xor
int
aaa
adc
enter
sub
ss
sub
push
test
dec
lea
or
and
jmp
inc
nop
jno
push
push
adc
push
pop
dec
xchg
push
sbbl
bound
jo
adc
mov
lods
mov
pop
and
out
mov
adc
iret
arpl
pop
jbe
popa
lahf
cmp
cld
xor
jo
in
cmp
data16
or
rolb
or
mov
pop
flds
pushf
jns
push
xor
lret
ss
mov
push
arpl
sub
sub
outsl
and
cmpsl
stos
jns
mov
mov
xor
scas
in
cwtl
pop
mov
out
push
mov
scas
fldenv
sbb
jae
fdivr
ficoms
ljmp
clc
test
mov
in
cmp
outsl
lret
xchg
outsl
lds
or
imul
sub
sub
xchg
or
mov
addr16
mov
es
cmp
xchg
fld
movsb
addr16
out
stos
or
in
and
mov
push
test
jb
mov
add
test
xorl
cmp
sub
or
in
mov
dec
lret
das
int
fwait
jecxz
repz
bound
nop
adc
cmp
notb
and
ret
cmp
rcrb
sub
pop
push
add
mov
dec
pop
dec
les
pop
sub
xchg
push
xor
inc
adc
cmpsb
cmp
push
add
xor
rcr
jmp
push
add
movsl
mov
adc
test
aad
test
jo
cltd
inc
roll
mov
cmp
xchg
fstl
test
addr16
push
scas
pop
mov
jmp
pushf
dec
jae
xor
sub
fisubs
jecxz
pushf
stos
xchg
jmp
pop
frstor
add
rcrb
iret
andl
xchg
mov
hlt
les
js
cmpsb
mov
sbbb
int
pushl
and
jne
and
popf
jne
xor
in
jnp
cmp
fistpll
sbb
orl
jb
and
iret
xorb
ror
movsb
add
pop
sbb
in
rcl
sub
cwtl
lcall
pop
js
add
sub
iret
push
pop
inc
xlat
aam
inc
lcall
sahf
sbb
inc
mov
incb
xor
js
pop
cmpb
mov
adc
xor
rcll
jnp
pop
shr
int3
cwtl
fldln2
mov
ja
lret
popf
movsb
je
add
jne
pop
or
movsl
sub
aad
lds
scas
popa
fdivrl
or
jmp
mov
lret
test
fcmove
mov
and
fwait
outsl
das
and
sbb
xor
hlt
and
dec
insb
or
fildll
lock
std
bound
mov
adc
cmp
ljmp
out
xor
sbb
addl
add
sbb
outsb
aam
aam
ja
xchg
out
add
push
mov
out
xchg
xlat
pop
pop
fidivl
and
or
loopne
cld
push
in
mov
jecxz
cmp
push
adc
je
mov
inc
push
and
inc
rclb
rol
adc
fdivr
aam
and
ljmp
push
jp
dec
sbb
int
add
sbb
xor
gs
das
add
push
adc
jp
ja
out
and
fisttpll
in
and
int3
add
fnstcw
movsl
push
jle
shrb
icebp
insl
lock
adc
push
fld
arpl
adc
mov
int
std
mov
not
rcrl
jg
adc
mov
fwait
insl
in
dec
push
jge
nop
sbb
sar
inc
sub
jecxz
jp
adc
bound
xchg
add
xor
lds
mov
pop
and
jno
out
das
loope
punpcklbw
jle
fbstp
adc
pop
scas
ficoms
mov
push
mov
pop
push
mov
jb
pop
adc
jge
enter
sub
sbb
jge
icebp
inc
add
cmp
ja
mov
fistps
scas
xor
mov
aaa
mov
mull
mov
push
cs
jge
mov
ss
dec
fstps
sbb
mov
cltd
mov
inc
int
jo
psubq
outsl
mov
cmp
jecxz
mov
cmp
mov
insb
sub
lret
pop
lea
and
sbb
push
fsubr
out
lods
jne
mov
daa
outsl
frstor
movsl
in
popa
imul
scas
inc
rorb
bound
dec
jg
loope
jecxz
adc
out
dec
aaa
clc
movq
fs
sub
dec
test
push
xchg
xchg
in
jnp
aaa
ret
movsl
repnz
in
dec
jae
dec
sbb
shr
gs
pusha
mov
adc
lret
jbe
insb
bound
arpl
jmp
cmp
cmp
adc
jl
cli
push
xor
bound
mov
cmpsl
pop
mov
push
jns
or
bound
test
or
iret
mov
push
call
push
outsb
cli
sbb
jnp
xor
push
jbe
mov
push
scas
push
icebp
nop
mov
adc
fists
xor
sub
scas
out
fnstcw
into
sub
sub
les
andb
jbe
inc
loop
add
sub
jmp
xor
sbb
pop
aam
pop
mov
sub
aaa
cmpsl
xchg
loope
sub
mov
pop
mov
pop
mov
mov
xlat
inc
cwtl
jle
inc
or
sub
test
test
add
pop
mov
add
pop
cmp
sbb
aad
cmpsl
mov
dec
fcomps
sti
push
movsl
jp
das
add
es
arpl
sub
or
add
mov
cmp
cmp
xchg
stos
rol
sub
arpl
add
mov
cli
pop
jbe
cmp
sbb
jl
jg
roll
and
test
dec
sbb
and
pusha
xorl
mov
fnstsw
iret
mov
gs
sbb
arpl
push
xor
popf
mov
push
and
fisubrs
xor
mov
cmpsb
gs
sar
bound
rcr
jae
cmp
icebp
loop
sbb
mov
and
push
mov
mov
gs
loope
lock
je
mov
in
pusha
pop
aam
sbb
fiaddl
mov
cwtl
fstl
inc
popa
hlt
mov
adc
mov
sub
rorl
icebp
mov
dec
das
jp
pop
fdivl
mov
enter
inc
mov
imul
aad
ja
addl
jns
mov
lods
jb
push
flds
xchg
add
aas
cmp
and
lea
dec
in
pushf
mov
dec
test
lret
icebp
jg
sahf
in
rcll
and
mov
mov
jl
outsl
mov
loope
gs
adc
movsl
mov
stos
fs
stos
lcall
cmpsb
pop
push
adcl
lret
pushf
lods
enter
inc
int3
xchg
xchg
mov
pushf
mov
xor
negb
adc
and
mov
sbb
adc
add
in
stos
jg
loope
lock
inc
cmpsb
mov
mov
sbb
xchg
mov
xchg
add
out
add
fdivp
ljmp
mov
mov
mov
cmp
inc
imul
shlb
xor
inc
xor
sub
insb
out
aas
inc
inc
int
push
nop
and
adc
sub
or
call
mov
rclb
outsl
mov
orl
mov
dec
jbe
ds
jmp
pop
mov
jno
cmc
mov
fcoms
mov
push
icebp
scas
push
aad
jns
lods
cltd
ss
or
inc
mov
call
fildll
dec
sbb
jle
add
xor
cmp
mov
push
push
out
test
mov
or
shlb
xchg
in
cmp
testb
std
subps
push
cmpsb
xchg
mov
outsb
xchg
cmpsb
xchg
in
inc
clc
out
xor
mov
insb
std
xor
test
nop
pmullw
es
xor
pop
pop
pop
fstpl
jge
dec
push
cmc
adc
pop
inc
mov
pop
jbe
dec
xchg
jne
aas
lock
and
or
fmull
std
jbe
insl
jnp
pop
int
lds
mov
push
mov
sbb
loop
pop
bound
push
fildll
stos
fwait
push
and
cmp
nop
push
das
mov
mov
sbb
icebp
sbb
xchg
pop
push
in
insl
xchg
pushf
fdivl
pop
outsl
notl
mov
mov
test
cltd
pusha
lret
out
neg
mov
dec
jns
sub
out
aaa
jge
enter
adc
test
cmpl
cmp
cmp
and
out
lods
repnz
cmp
addb
adc
adc
iret
add
mov
jne
xchg
xchg
xchg
jecxz
sbb
fcoms
rolb
outsl
mov
daa
adc
push
mov
aad
insb
mov
fadd
fnstenv
dec
push
push
stos
cmpsb
fdivl
ljmp
mov
push
rolb
subb
push
dec
into
and
pop
jne
cmc
lahf
dec
inc
jg
cmc
pop
leave
pop
fwait
push
pop
lret
push
inc
adc
ss
scas
adc
add
sbb
mov
repz
stos
xor
sub
and
mov
xlat
xor
std
rorl
test
mov
inc
add
or
jmp
fidivrs
cli
arpl
mov
mov
xchg
int
int
mov
cmp
aas
push
lea
in
add
push
mov
mov
popa
sbbl
jb
dec
dec
xlat
xchg
orl
cltd
push
inc
nop
sub
sarl
fbld
push
inc
int
or
add
aam
dec
mov
shll
cmpsl
jno
fdivrl
jle
shl
or
adc
js
jbe
repz
es
subb
into
pop
jmp
adc
pop
xorb
xor
imul
addr16
dec
fistps
pop
or
or
xor
push
outsl
sbb
movsl
call
xchg
les
jne
xchg
push
dec
sub
loopne
fdivl
frstor
push
sub
xchg
sbb
cltd
xchg
popa
cmp
jmp
jecxz
fisttpl
push
outsl
lret
loop
mov
in
ljmp
cmp
fcomip
stos
loop
sub
push
push
xchg
dec
cmp
sbb
lods
dec
xchg
dec
sub
adc
icebp
dec
leave
inc
aaa
push
lret
lods
shrl
dec
or
ljmp
xorb
mov
cmpsb
mov
dec
es
sbb
mov
enter
sarl
jbe
mov
jne
in
adc
dec
adcl
sti
add
loopne
fisttpl
fcompl
ja
sbb
inc
mov
jae
dec
les
adc
sbb
lcall
loopne
mov
or
nopl
in
cmpsb
cwtl
jns
adc
leave
cmp
xor
ret
hlt
lret
sbb
or
addl
loop
or
sar
aas
adc
mov
mov
cltd
aam
popl
and
faddp
mov
jecxz
and
jmp
sbb
inc
into
xchg
jns
pushf
test
mov
inc
cmp
aam
jne
in
sub
cmp
cmp
shrb
fisttpll
out
rcll
les
jmp
xor
shrl
jmp
imul
data16
dec
mov
and
dec
in
mov
fwait
popa
dec
inc
push
push
rorl
adc
ss
aad
sub
jg,pn
nop
jae
shrb
ret
sbb
cld
lds
in
into
js
sbb
ja
lahf
sub
filds
testl
and
sahf
and
das
int
mov
hlt
fistpll
sti
mov
std
add
aam
les
push
xlat
arpl
fsubr
mov
call
push
jne
std
adc
adc
add
imulb
mov
mov
add
mov
inc
mov
cs
xor
repnz
out
dec
iret
jb
movsb
outsl
stos
inc
cmc
rol
fildl
inc
xchg
mov
xchg
insb
out
cmp
in
or
out
add
mov
inc
cwtl
icebp
mov
or
rcrb
pusha
inc
sub
mov
mov
mov
sti
jbe
jnp
lds
fdivs
add
bnd
lea
fildl
dec
sbb
sbb
shrd
add
cmp
mov
mov
adc
cmp
jp
ret
out
sarl
sub
leave
in
insl
imul
scas
and
mov
shl
pushl
mov
jns
nop
mov
gs
fnstsw
iret
pop
repz
jp
test
lret
sub
mov
push
xor
std
mov
and
fwait
pusha
iret
fwait
cli
int3
in
movsb
jmp
and
clc
xor
loope
dec
pop
xor
sbb
and
fsts
lret
fldl
scas
imul
loopne
dec
dec
pusha
test
sti
movsl
roll
fisttpll
ja
sarl
push
mov
mov
outsb
inc
dec
movsb
and
jbe
fs
paddd
clts
shll
jmp
inc
pop
cmp
repz
dec
push
icebp
pushf
cli
pop
inc
imul
mov
movsl
inc
lea
lahf
push
push
sub
inc
sbb
stos
lock
mov
in
mov
inc
sub
jmp
orl
call
adc
scas
cmpsl
test
test
ret
aam
mov
mov
sub
rorl
and
shlb
int3
cmpsb
push
xchg
jge
jg
cmp
aam
inc
push
aas
lcall
push
fcomi
add
leave
testb
mov
cmp
mov
mov
sti
pop
cmpsb
in
xchg
xchg
jns
mov
mov
sbb
scas
das
mov
repz
loopne
pop
or
inc
popf
pop
jp
xchg
rcrb
stos
xchg
sbb
add
mov
xor
cltd
scas
push
xchg
pop
clc
es
scas
and
dec
nop
xchg
out
jo
mov
addl
scas
out
and
sub
and
mov
jmp
out
mov
adc
test
ficompl
bound
fisttpll
xchg
orl
or
aaa
cmp
or
jne
into
js
xlat
pop
je
outsb
mov
out
mov
ficoms
ds
cltd
nop
mov
stos
sbb
inc
ljmp
cmp
dec
push
fwait
inc
cmp
adc
dec
jge
mov
sbb
sahf
cmp
ret
shrl
enter
xchg
dec
lds
inc
lahf
push
cltd
push
setge
cmp
add
push
and
jns
into
sbb
out
std
adc
cmc
lods
jle
fnstenv
loop
lea
dec
cmp
sbb
pop
outsl
pop
cmc
jmp
mov
aas
mov
sbb
inc
aad
sub
fs
ss
sbb
xchg
mov
adc
inc
mov
in
pop
cmp
nop
jp
mov
int
cmc
adc
orl
mov
out
jne
mov
inc
cmpsl
dec
mov
mov
mov
enter
jl
rcr
insl
inc
pop
xlat
es
pusha
popf
xchg
inc
mov
xor
fdivrs
adc
jle
jnp
pop
repz
aam
pop
and
psrlq
andl
dec
aas
mov
lods
push
cmp
movntq
out
jle
shlb
adc
scas
mov
nop
adc
sbb
iret
subl
mov
mov
jp
call
cmp
mov
inc
xchg
adc
and
pop
pop
or
jl
lsl
inc
dec
fsubp
xor
fdiv
sbb
inc
mov
addr16
sub
sbb
int3
xor
xchg
mov
xchg
test
mov
add
push
test
xchg
out
pop
pop
pop
cmpsl
jge
mov
adc
fldt
pop
fbstp
xchg
jno
sbb
scas
cmp
repnz
jns
sbb
fiadds
mov
or
cmc
xor
outsl
jmp
int3
pop
dec
aad
clc
clc
mov
or
adc
push
jge
xchg
push
adc
or
inc
cmp
imull
mov
addr16
xchg
xor
fimull
notl
lret
add
mov
mov
pop
sbb
into
inc
xor
mov
test
loope
jae
lret
push
add
jb
pop
imul
sub
sbb
sub
arpl
lock
insl
arpl
ret
or
loope
pop
adc
testl
push
xchg
shr
repnz
xchg
lret
push
dec
push
nop
call
loope
ds
adc
mov
outsb
or
push
cli
loopne
lods
adc
mov
inc
or
out
pushf
xor
adc
add
inc
or
push
loop
add
pop
loope
fdivl
jb
inc
or
push
lret
mov
and
jb
inc
mov
and
enter
aas
icebp
stos
inc
and
mov
ror
inc
bound
mov
or
pop
mov
pop
repnz
pop
fmuls
xchg
sti
mov
mov
pop
out
sbb
jbe
clc
call
pop
test
movq
pop
cmp
in
bound
push
insb
outsl
out
movsb
jp
push
mov
cltd
dec
mov
mov
arpl
out
mov
in
scas
mov
rcrb
ret
dec
call
push
xchg
sbbl
or
ljmp
pop
adc
mov
gs
fsubl
cli
mov
pusha
mov
rcll
test
data16
loop
jne
repz
mov
loop
xor
adc
xchg
add
lret
add
mov
mov
xchg
fbstp
fnsave
test
or
sbb
ljmp
adc
push
pop
ljmp
es
xor
xor
or
cwtl
cmp
int3
xchg
xchg
add
aas
repz
out
mov
pop
inc
cli
loopne
or
xchg
pop
pop
xor
bound
jns
jecxz
mov
enter
inc
cmc
sub
jg
in
insb
add
mov
cmp
cmp
dec
icebp
cmpsl
mov
loopne
xorl
or
shl
add
mov
shr
dec
enter
cli
jecxz
or
aad
mov
cmp
jl
enter
fisubl
mov
cwtl
dec
mov
fisubrs
adc
push
gs
cli
cmp
pop
jo
push
aas
or
lcall
adcl
sarb
mov
mov
fildll
mov
lcall
xor
sub
push
add
add
cmp
xchg
pop
xchg
cmp
ret
mov
nop
cmp
inc
popl
aaa
jb
jns
mov
shlb
push
mov
add
fildll
mov
movsb
add
jp
cmc
imul
addl
inc
leave
or
enter
stos
push
xchg
lret
outsl
push
sahf
cltd
cmp
dec
sub
sbb
les
jg
dec
pop
dec
jnp
jg
xchg
fidivrs
lcall
dec
dec
inc
das
and
dec
jno
or
repz
mov
inc
xor
mov
mov
sub
inc
sub
inc
fwait
je
mov
xchg
test
sbb
lahf
xchg
xchg
jb
call
xor
aaa
push
repnz
repz
lock
add
outsb
outsb
mov
mov
lods
inc
xchg
fildll
in
push
arpl
cltd
jge
adc
sbb
ror
dec
jne
add
cltd
das
xchg
daa
pop
or
mov
jno
je
and
add
push
je
mov
cmp
andl
cmpsl
shrb
stc
add
ja
jno
fs
in
fadd
mov
or
push
inc
rep
lods
icebp
or
jno
lcall
xlat
dec
push
jmp
mov
pop
leave
xchg
adc
call
shlb
rclb
call
inc
lea
push
mov
xchg
xchg
pop
sub
cs
lods
sbb
jg
push
das
fstp
movsb
fcmove
mov
leave
ss
sbb
push
cld
or
movsb
inc
fmull
push
ljmp
xor
rorl
jp
jg
pop
in
stos
jge
sub
mov
push
push
insl
jmp
mov
add
lock
mov
nop
adc
pop
jle
and
cld
stos
hlt
rolb
js
mov
subl
cs
and
mov
scas
cltd
add
push
aaa
and
movsl
push
or
sti
adc
xchg
addl
pop
shll
jg
mov
pusha
mov
push
adc
test
orb
out
pop
fldcw
lcall
cwtl
jo
push
mov
ljmp
cmpsb
mov
push
xchg
stc
jo
loope
sbb
and
in
xor
jne
pop
je
scas
lods
ret
pop
mov
jge
pop
mov
je
test
fcoml
imul
fwait
or
dec
lds
mov
xchg
lds
testb
divb
jae
cli
aad
adc
rcrb
and
stos
es
dec
enter
sub
cmc
and
sbb
adc
mov
incb
mulb
icebp
mov
cmp
jmp
lock
repz
mov
mov
nop
push
aaa
mov
sub
loope
mov
sti
lds
and
or
jo
insl
mov
dec
jno
push
and
lret
adc
cmp
sub
mov
jnp
push
sbb
inc
nop
lahf
jmp
inc
add
nop
jbe
int
or
jl
shlb
popa
and
decb
imul
std
nop
push
out
adc
mov
rorb
lcall
or
xor
pop
movsl
movsb
das
popa
mov
movsb
mov
mov
pushf
outsb
movsl
imul
pop
daa
pop
pop
adc
mov
cmp
mov
or
out
and
or
cld
pusha
bound
adc
mov
push
ficompl
cmp
sbb
enter
pushf
sub
fwait
sub
mov
test
in
xchg
sbb
jg
loope
ja
bound
jae
pusha
xchg
mov
adc
push
call
adc
lods
sbb
repnz
xor
cwtl
cwtl
stos
shll
xor
mov
das
xchg
enter
orb
repnz
inc
sub
movsb
adc
xor
pushf
test
dec
and
fimuls
mov
sub
mov
fmuls
xchg
mov
adc
fimuls
pop
push
leave
int3
sbb
pop
jnp
je
lds
mov
cli
fists
cmp
ret
lret
cmpl
xchg
in
xchg
sbb
bound
inc
dec
xchg
push
adc
mov
sahf
pop
pop
mov
jge
and
cmpsb
xor
aas
inc
ret
arpl
mov
inc
mov
sbb
mov
repz
sahf
repz
pop
aas
inc
filds
cld
dec
and
and
xchg
cmpsb
test
mov
mov
mov
add
push
test
xchg
adc
xchg
push
mov
test
cmpsl
fwait
sub
int
inc
jbe
mov
call
and
mov
jae
add
test
jne
xchg
cmp
sbb
cmc
in
mov
cmp
xor
push
ljmp
inc
or
or
sbb
loope
mov
sbb
xchg
pop
sti
dec
push
mov
enter
test
andl
sub
and
inc
cltd
or
jnp
jae
mov
sahf
xchg
add
xchg
add
sub
popf
mov
add
or
jno
ljmp
mov
mov
ficompl
xor
pop
daa
xchg
mov
push
lahf
enter
into
into
aas
mov
jl
bound
xlat
arpl
fwait
and
or
sahf
jbe
aad
and
fmull
and
adc
mov
mov
sbb
in
lahf
pop
leave
scas
sub
cmp
dec
pushf
add
adc
inc
push
sbb
dec
lret
mov
mov
mov
sbb
icebp
jbe
fistpll
mov
jb
sbbl
xchg
xor
mov
icebp
push
jae
pop
enter
dec
sbb
sti
jnp
cmp
cltd
insb
cmp
fdivs
dec
and
cwtl
cmp
and
mov
xchg
fsubl
subl
add
push
mov
mov
lcall
cmp
sbb
adc
inc
xchg
cltd
push
ffreep
testb
mov
push
xchg
adc
dec
mov
fstl
and
in
daa
mov
xchg
push
or
xchg
push
adc
sub
mov
and
pop
pop
stos
sub
mov
mov
fcmovnu
repz
das
sub
adc
cmpsb
inc
dec
cli
push
jae
dec
push
sub
out
push
mov
ret
xchg
sti
or
xchg
pushf
loopne
pop
push
sahf
xchg
insb
sbb
fwait
dec
inc
stc
aam
outsl
fs
addb
fadds
int
jp
push
or
jb
out
testl
int3
push
jne
sbb
push
jmp
mov
das
cwtl
fcoms
cmp
js
int
movsb
out
pop
cli
rorb
pop
fsub
add
lea
jp
testl
add
ret
mulb
sbbl
out
loop
inc
jecxz
mov
mov
cmp
out
mov
je
aam
loopne
scas
loopne
inc
scas
jp
rcrb
lret
pop
xor
clc
push
pop
mov
mov
and
fwait
je
mov
jne
sub
mov
jnp
pop
xorl
fimuls
mov
xchg
or
cld
jge
mov
inc
ss
sub
inc
fcmovb
dec
mov
andl
fs
movsb
loop
add
lret
into
jo
mov
xchg
pop
push
stos
mov
arpl
and
pmaddwd
mov
cmpsb
adc
mov
inc
pop
movsl
outsl
lods
shlb
mov
pop
aam
and
stc
mov
lock
rolb
mov
aaa
or
push
lds
jmp
xchg
inc
cli
icebp
pop
dec
adc
push
jge
arpl
lcall
xchg
sahf
fisttpll
push
es
jbe
loope
mov
pop
repnz
jg
add
fcoms
les
or
in
pop
out
jl
imul
insb
push
xor
push
les
scas
mov
daa
fsubrs
data16
sbb
inc
loopne
inc
aaa
fs
and
gs
pushf
icebp
xor
lods
jno
fstl
fsubrl
out
insb
in
xor
iret
and
pop
ret
pop
es
and
add
and
push
push
ret
mov
sub
lock
pop
fs
add
adc
and
data16
jne
add
data16
push
mov
jns
push
lea
sahf
sub
scas
jnp
xor
cmp
ficoms
aam
mov
shll
cmp
mov
mov
xchg
jg
aas
data16
fbstp
mov
sbb
in
orl
xor
mov
sbbl
push
or
sub
in
enter
mov
sbbb
out
sub
mov
adc
mov
jo
aad
push
xorl
stos
xchg
jge
arpl
mov
data16
lret
mov
mov
push
mov
out
jecxz
movsb
mov
ja
inc
cmp
int
or
dec
or
dec
xor
cltd
outsb
popa
sub
add
sub
pop
mov
popf
ret
mov
jns
lods
mov
scas
jnp
iret
jnp
fmulp
cmp
aam
mov
lret
xchg
cmp
mov
jno
push
repz
jae
sarl
sahf
stc
cmp
fdivrl
out
fisttps
dec
scas
xchg
jo
dec
pop
cmp
add
push
sub
pop
cmc
scas
rol
pop
cld
xlat
jne
dec
cli
xor
inc
orb
sahf
int
or
pop
or
lds
pop
jmp
ljmp
adc
imul
add
mov
mov
xchg
mov
push
mov
cmp
add
test
jmp
lret
mov
ljmp
jl
or
out
out
rolb
or
sbb
loop
sti
cltd
enter
inc
xchg
cld
fcom
enter
mov
test
push
adc
pop
mov
bound
fisttpl
cmpb
inc
insl
pop
aaa
and
dec
stos
and
imul
adc
jmp
mov
inc
test
dec
repz
xchg
out
mov
lods
jl
mov
nop
mov
cmp
repz
orb
in
scas
sbb
inc
xor
adc
push
or
adc
dec
icebp
sub
cmp
sub
scas
shll
cli
into
jp
fstpt
out
dec
mov
mov
xlat
xchg
je
xchg
pusha
dec
dec
adc
outsb
clc
mov
imul
pop
push
dec
jecxz
mov
hlt
xchg
mov
dec
sti
push
nop
xor
lock
mov
inc
aad
and
clc
adc
sub
xchg
mov
mov
jecxz
xchg
jecxz
xchg
mov
lods
sub
xchg
mov
xor
push
stos
shlb
fistps
cwtl
adc
nop
cs
pop
dec
mov
sbb
ret
cmp
jnp
dec
not
pop
test
mov
incl
adc
adc
fs
push
jl
jecxz
push
ret
cmpsb
push
in
nop
lahf
arpl
mov
mov
in
out
add
call
in
scas
icebp
push
inc
and
adc
or
or
lock
scas
gs
fwait
or
sub
cmp
sbbl
pop
push
xchg
arpl
cmp
jle
mov
mov
and
es
mov
in
sbb
xchg
push
lock
mov
mov
test
movsb
add
xchg
stc
or
sub
mov
mov
dec
cmpsl
lcall
stc
imul
dec
insb
adc
lahf
cmp
ja
ret
movsb
cmp
add
pop
or
test
js
cmc
add
ret
mov
es
xchg
pop
cmc
mov
jl
push
sahf
sahf
pop
outsl
mov
repz
jno
xor
push
loope
stos
loop
pop
icebp
dec
out
loop
test
rcrb
adc
fidivl
sbb
test
pushf
insl
cmp
aad
pop
add
cwtl
fwait
push
out
dec
stos
add
fadd
lret
jno
and
push
mov
cmovns
insl
leave
add
sti
pop
jle
ss
mov
aam
jns
outsl
rcr
dec
idiv
sbb
jl
mov
xlat
loop
jnp
notb
xor
mov
lods
sbbl
adc
shrb
shll
fimull
test
loopne
sbb
adc
clc
in
out
aaa
push
lret
adc
enter
js
ret
fxch
push
cltd
xchg
adc
adc
in
and
lret
sbb
movsb
adc
insb
loop
jbe
jb
shll
test
jae
pop
dec
and
frstor
pop
cld
testb
clc
adc
daa
cmp
inc
xchg
subb
push
in
jne
daa
shlb
in
sbb
fdivp
mov
mov
add
xchg
call
icebp
jnp
dec
and
inc
adc
repnz
stos
and
popf
lret
ret
bound
sbb
sbb
or
loope
sbb
jo
sub
xor
mov
jnp
in
push
repnz
push
popf
mov
jl
mov
pop
aam
sbb
add
jecxz
add
stos
lahf
cmovs
mov
xchg
xchg
mov
cmp
dec
idiv
inc
mov
mov
fnstenv
cli
je
cmp
sub
pop
and
pop
jecxz
mov
jg
and
pusha
es
and
sbb
jno
sti
adc
and
push
lods
fists
bound
lock
jmp
cli
push
xchg
repz
aaa
popa
cmp
ljmp
cltd
sbb
movsl
and
and
or
and
jnp
lcall
mov
insl
fwait
les
fdivs
cmp
movsl
mov
sbb
iret
xor
xor
cmp
lods
adc
jle
rolb
stc
add
lret
cmc
rorl
sbb
push
cmpsb
imul
fs
cmp
cld
sub
out
xorl
mov
cmpsb
scas
jne
ret
sti
mov
mov
inc
enter
pop
xor
jne
mov
jmp
popf
cmp
fistl
mov
mov
cmp
jnp
and
frstor
pop
jno
mov
mov
imul
pushf
fnstenvs
and
fs
jge
xor
lods
push
cmp
pop
jo
mov
sub
mov
mov
dec
jae
mov
lcall
and
cli
ds
scas
nop
xchg
cmp
push
jno
xor
out
inc
xchg
inc
fcompl
push
cmp
lret
push
subb
sahf
mov
hlt
ljmp
or
filds
push
or
or
sbb
test
or
stos
sub
mov
mov
xor
stc
sub
cmp
pop
jae
test
lods
push
and
test
or
inc
push
xor
mov
test
fcomps
jp
sahf
push
stc
pop
jns
js
insb
xchg
sbb
pop
cwtl
sub
cli
pop
jge
xor
add
test
jne
outsl
sbb
cmpsl
test
aad
cli
loop
xor
adcl
mov
jns
cli
outsb
adc
test
jno
push
lcall
xor
xchg
dec
pop
movsl
mov
cmp
movsl
mov
scas
push
lret
xchg
xlat
cld
int
aas
cmp
add
sbb
xchg
data16
mov
mov
add
aam
data16
push
rcll
xlat
notb
cmp
arpl
mov
outsb
int
pop
hlt
xchg
lods
rolb
add
push
outsb
cmpsb
les
push
jge
outsl
out
je
stos
xor
sub
or
cmp
sbb
mov
lods
mov
into
jne
aas
or
jns
cmpsl
loop
mov
xlat
icebp
loope
scas
adc
mov
cli
popa
repz
inc
roll
mov
imul
movsb
mov
addr16
loope,pn
hlt
xor
dec
in
cmp
jnp
and
mov
fstpl
dec
call
adc
mov
mov
adc
sbb
jmp
cltd
addr16
jmp
pop
jae
xor
rol
int3
xor
out
arpl
mov
xorl
xor
idivl
jae
les
xor
jbe
fisubrl
popf
mov
dec
sahf
loop
mov
inc
test
push
outsb
fdivp
adc
filds
addr16
fstl
mov
push
xchg
in
pop
pop
lods
pop
fwait
dec
lods
pusha
mov
or
fmull
loop
push
les
dec
mov
mov
pop
ret
es
decl
jge
in
data16
fwait
incl
sbb
aad
jns
mov
js
add
outsl
shll
inc
sub
pop
out
fcmovu
pop
mov
clc
push
adc
imul
fmul
or
fmuls
cmc
pop
dec
out
outsb
sbb
stc
add
or
icebp
jnp
mov
out
dec
cmp
mov
xchg
mov
cmp
push
cli
push
mov
or
nop
pop
dec
jmp
fcoml
in
adc
lret
xchg
int3
jg
fidivs
les
fcmovne
jmp
shll
dec
add
xlat
xchg
xchg
mov
sbb
cltd
mov
mov
dec
dec
or
push
shll
and
dec
cmp
shlb
mov
idivb
jge
mov
aam
sub
or
pop
adc
push
adc
std
repz
mov
testl
js
push
pop
xchg
repnz
push
mov
dec
adcb
nop
mov
dec
mov
inc
ja
sbb
xchg
fs
push
xchg
stos
data16
mov
inc
dec
popf
pextrw
push
sbb
push
push
and
inc
adc
add
cmp
lods
xor
mov
mov
pop
pusha
inc
shr
in
subl
xchg
cmp
pop
jno
fistps
xlat
lock
call
xchg
sbb
fnstcw
pushf
test
outsl
cld
loopne
xchg
jge
add
or
or
imulb
mov
dec
and
push
stc
pushf
dec
mov
inc
push
xor
cmp
mov
add
out
cld
mov
mov
pop
stos
dec
std
cmc
fwait
mov
shrb
loop
xor
push
sti
hlt
setnp
cld
pushf
outsb
sub
ficoml
mov
cmpsl
push
pop
or
ds
ljmp
add
adc
out
mov
movsl
cltd
push
jp
adc
mov
push
scas
adc
ds
stc
orb
jecxz
fdivp
pop
rcrl
inc
gs
test
in
fimull
mov
dec
mov
inc
out
es
xor
jecxz
pop
fbstp
jmp
lea
stc
jb
ret
inc
and
iret
andl
pushf
mov
sarb
repz
jae
push
cltd
or
cmp
mov
hlt
push
inc
and
shll
lret
fcomi
mov
sti
ds
cmpsl
push
push
add
mov
int3
movsl
jecxz
xchg
in
fprem
repnz
adc
dec
mov
pop
push
jae
sub
bound
push
test
sbb
push
jns
ja
ret
pop
adc
mov
push
mov
cld
sub
jl
and
das
sbb
cmpsl
xchg
icebp
mov
loop
jecxz
or
popf
adc
inc
cmp
lcall
rorb
fsub
push
inc
push
data16
xor
inc
fcmove
insb
and
cli
out
mov
test
mov
xchg
jae
jmp
stc
xchg
cmp
imul
mov
or
add
out
addr16
push
fwait
push
and
andl
push
data16
pop
loopne
aad
das
stos
pop
icebp
dec
scas
popa
pop
jbe
lcall
loopne
mov
pushf
mov
ljmp
inc
je
push
cld
xchg
mov
jnp
fnstcw
sub
les
add
out
xor
mov
inc
xor
or
sahf
adc
sbb
filds
jns
fcmovu
rcrl
js
mov
sub
mov
cmpsl
push
mov
inc
adc
les
xchg
jne
ret
inc
clc
aas
push
test
sub
jecxz
mov
push
jae
sbb
push
sub
xchg
out
ffree
insb
push
ds
repnz
cmp
mov
xor
nop
xor
push
xchg
sub
cltd
jmp
sahf
loope
in
add
cmp
lcall
cs
ja
scas
in
or
inc
cmpsl
shll
cmp
sub
lret
sar
jp
mov
mov
gs
and
add
iret
out
into
pop
mov
sti
pop
dec
ds
jae
xchg
sbb
xor
hlt
out
stc
mov
lds
inc
lret
jmp
daa
in
mov
cmp
lea
faddl
mov
call
xchg
ss
scas
jecxz
sbb
push
xchg
out
pop
sub
pop
int
add
mov
inc
fcmovu
mov
lcall
lods
inc
xor
push
cmc
xchg
push
jp
ss
jnp
mov
in
adc
fdivl
fstpt
sbb
cmc
es
jp
push
dec
and
daa
iret
mov
repz
scas
jne
bound
mov
jge
into
je
xor
mov
dec
mov
xchg
stc
mov
mov
xchg
mov
aad
cwtl
dec
sbb
mov
adc
stc
push
pop
or
negl
push
imul
lods
push
std
test
aas
xor
test
jnp
sub
cmp
lea
fcoms
adc
xchg
scas
add
mov
mov
inc
pop
clc
sbb
rorl
in
faddl
add
xchg
jecxz
out
xchg
pop
nop
fcoms
and
pop
bound
loope
popa
jmp
js
leave
es
rcll
mov
push
push
jp
inc
stos
lds
jbe
sbb
fildl
xor
mov
in
sahf
rcrb
cmp
jmp
jmp
pusha
mov
loopne
xchg
fs
or
fstpl
sub
nop
cmp
gs
xchg
cld
and
call
call
push
push
orb
sbb
xor
cmp
xor
mov
mov
or
bound
test
adc
cs
cmp
mov
xchg
sbb
or
push
cld
mov
cwtl
pop
test
sbb
adcl
imul
sub
lds
jmp
mov
jno
sbb
pop
sbb
notl
mov
lock
cmp
popf
cmp
mov
mov
mov
pop
inc
out
add
dec
mov
stc
jg
in
les
sahf
adc
mov
push
xchg
pop
sub
push
sub
xchg
bsr
test
mov
and
inc
bound
sbb
adc
arpl
pop
jp
imul
decb
dec
cmp
add
mov
lahf
sub
pusha
mov
fstps
add
add
mull
fisttpll
in
mov
xchg
mov
fld
mov
ss
pop
filds
pop
outsl
rolb
push
push
rcll
imul
inc
std
push
repnz
enter
stc
icebp
scas
sub
mov
jg
xor
xchg
sbb
sbb
cli
dec
xbegin
int
pushf
cltd
xor
and
pop
and
sbb
int
xor
lahf
lea
inc
jge
add
cmp
adc
insl
xor
leave
loope
adc
cmpsb
add
mov
outsl
lds
cmp
xor
push
pop
fcmovu
cs
mov
ret
or
adc
jb
inc
outsb
clc
sahf
cmp
pop
and
dec
mov
push
negl
cmp
lahf
push
outsl
in
mov
imul
rcll
mov
push
push
in
inc
ja
les
add
dec
cmp
pop
pop
pop
cmp
clc
mov
in
add
push
stc
xchg
repz
pop
hlt
subl
xor
test
call
xchg
xchg
xor
sub
ja
fldcw
cmpsb
adc
call
fisttps
fists
ja
and
or
test
adc
pop
xor
pop
xlat
repz
xor
mov
mov
stc
xchg
data16
pop
adc
mov
push
xchg
ret
loop
fcompl
push
int3
icebp
push
sbb
movsl
dec
je
and
dec
cmpsb
sbb
lods
adc
inc
xchg
je
movl
jmp
mov
cmp
rclb
and
mov
addr16
pop
or
stos
push
sub
dec
lods
es
push
rcrb
inc
imul
in
sbb
mov
cmp
pop
mov
jb
arpl
pusha
dec
imul
js
adc
test
cmc
addr16
sarl
push
test
add
xchg
and
dec
xchg
xchg
xchg
push
jb
cmpsl
push
mov
mov
lock
std
mov
jecxz
sub
inc
jns
pop
imul
loop
inc
pop
fwait
outsb
pop
jbe
enter
jb
sub
jle
inc
aam
ljmp
and
sbb
rorb
mov
je
mull
fstpl
lock
add
lds
stos
and
and
pop
inc
pop
mov
mov
mov
or
push
loope
xchg
cs
rolb
fimuls
xchg
push
fmulp
out
push
dec
test
adc
shrb
sbb
mov
clc
push
jp
rorl
movsb
pop
cmp
pop
or
loopne
into
in
mov
adc
jns
add
lea
adc
ficomps
xor
xchg
or
jae
arpl
imul
jno
call
dec
in
mov
out
ljmp
or
test
lahf
mov
fisttps
add
in
push
and
rolb
andl
jmp
aas
lods
cmp
jle
addr16
fldcw
cmpsb
add
add
jle
sahf
add
testb
or
sar
mov
push
imul
fisttps
mov
mov
jnp
sbb
adc
les
jo
dec
mov
jne
in
mov
push
push
cmpsl
mov
mov
cld
iret
mov
das
aas
sbb
lret
sub
mov
stos
gs
xchg
add
ds
pop
cmp
mov
cli
sahf
nop
jl
sbb
pop
lcall
xchg
ret
outsb
js
jae
adc
sub
push
inc
insl
cmp
add
jl
aad
out
pop
pop
mov
push
aas
inc
pop
mov
push
lock
sti
mov
sti
lods
dec
jl
cmp
sub
sbb
xchg
in
sbb
sub
mov
lahf
sub
stos
or
test
cmpsb
xchg
jnp
add
mov
mov
mov
sbb
or
rcl
fisubrs
mov
inc
inc
or
or
lcall
pop
pop
sub
test
ljmp
and
and
mov
jo
orb
clc
jmp
aad
cmp
inc
cmp
outsb
test
dec
std
cmp
inc
cmpl
xchg
dec
adc
pop
test
popa
and
fisubl
repz
jle
mov
fildl
outsb
sarl
rclb
inc
xor
stc
dec
push
jnp
pop
popf
addr16
push
inc
adc
int3
pop
cltd
and
std
xor
int
adc
shlb
push
inc
xor
xchg
cs
popa
outsb
pop
pop
ret
or
popl
cs
roll
aas
lcall
loopne
jg
test
stc
mov
xor
enter
mov
add
sub
push
jle
adc
nop
mov
push
pop
lcall
lcall
scas
xchg
out
push
aaa
ret
xchg
mov
push
jl
cmp
cwtl
popl
rcrl
add
mov
shlb
rcr
jge
into
sub
push
aad
jae
xchg
dec
into
jb
insl
cmpsb
jp
jp
ficoms
mov
xchg
adc
pop
insl
add
lcall
xor
stos
adc
inc
enter
push
cmp
ret
call
decb
notl
repz
nop
insb
arpl
insl
jns
inc
ljmp
push
or
or
inc
stos
jecxz
pop
aam
jnp
adc
stc
and
add
sub
pop
loopne
int
mov
jne
push
mov
lock
dec
std
push
out
cmp
jl
fsubrs
sahf
adc
cli
xchg
and
iret
js
cmp
xchg
inc
pop
mov
hlt
repnz
mov
lahf
xchg
flds
xchg
imul
add
inc
daa
mov
test
mov
mov
mov
sub
sub
dec
xor
inc
cmp
push
jmp
inc
inc
fdivrl
sbb
loopne
loopne
sbb
stos
inc
stc
inc
jae
icebp
push
inc
xchg
shlb
ret
sbb
shll
sbb
ret
inc
adc
and
xlat
scas
jecxz
nop
jne
dec
xchg
push
inc
mov
or
sub
push
and
jae
adc
push
dec
cmpsl
std
pop
and
push
rorb
out
repnz
test
lret
mov
pop
or
repz
das
les
aad
cmp
ljmp
clc
inc
sub
add
std
in
mov
dec
stc
push
scas
gs
adc
push
imul
inc
sub
xlat
and
and
push
clc
lock
aaa
popa
loope
mov
aam
js
cmp
sub
test
cmpsb
mov
or
sti
jp
out
cs
jno
shlb
int
mov
repnz
aaa
clc
dec
fistps
aam
xchg
loope
loop
repnz
es
fmuls
pop
sbb
add
cmpsb
dec
xchg
pop
pop
jge
out
pop
xor
fisubl
push
mov
imul
test
jg
aaa
pop
loop
pop
inc
sub
push
jnp
lds
cmp
xchg
pop
mov
shrb
and
sbb
popf
push
adc
cmp
mov
inc
cmc
add
icebp
xor
mov
and
call
rolb
push
push
jno
cmpl
cmp
cmp
sti
and
int3
push
dec
test
add
stos
or
jge
jecxz
dec
jle
outsb
es
fs
enter
jecxz
cmp
in
sbb
mov
jns
fnstcw
sub
adc
dec
mov
push
out
outsb
rcr
fldt
jno
cmpsl
cmp
jge
sbb
push
into
pop
in
out
dec
test
cmpsl
inc
dec
jge
repz
sub
inc
ret
add
cmp
fcmovnb
into
jnp
mov
or
pusha
rcr
movsl
pop
rclb
enter
lds
inc
pop
mov
dec
inc
inc
leave
dec
loopne
xchg
push
aam
add
sub
mov
movsb
add
cld
lcall
idivl
pop
ss
fdivrp
addl
sbb
xchg
push
sub
dec
fs
sti
xor
jmp
sbb
mov
lret
out
loope
scas
shlb
setnp
outsb
mov
add
loopne
into
clc
ja
aaa
add
rcll
pop
push
mov
dec
das
in
lret
hlt
outsb
jmp
inc
and
call
xlat
xchg
mov
int3
lret
sub
pop
sbb
add
sbb
dec
cwtl
stos
push
std
inc
jb
jne
mov
add
sub
lret
push
push
fxch
es
sub
cld
xor
pop
adc
mov
int
jg
or
fcmove
stos
adc
pop
mov
pop
frndint
jle
jne
push
imul
push
cmp
mov
sbb
xchg
stos
dec
sub
jb
dec
push
and
lds
pop
inc
sub
and
int3
inc
fldlg2
test
lahf
jb
neg
mov
mov
cmp
push
sbb
jns
push
sub
les
dec
sbb
cmp
out
rcll
rcrb
loope
fwait
shlb
xchg
dec
mov
push
pushf
stc
adc
dec
xchg
fists
adc
loopne
pop
leave
or
xor
mov
push
dec
test
jno
cmc
lods
orb
jo
shrl
add
outsl
loope
addr16
dec
sbb
sbbb
push
in
out
jmp
push
mov
or
cmpsb
rcrl
push
inc
pop
jnp
and
testb
iret
xchg
xor
xchg
ljmp
or
mov
cltd
ja
xor
pop
sbb
cmpsl
pop
push
out
roll
cmpb
push
mov
adc
rorl
mov
mov
lock
jnp
jns
cmp
xor
xor
out
sbb
xchg
add
xor
dec
in
das
daa
stc
push
adc
add
adc
mov
clc
fistpll
loope
mov
inc
cwtl
fdivl
sbb
out
mov
repnz
cmp
jbe
cmp
mov
fldl
cmpsl
mov
jo
enter
sar
inc
scas
pop
pop
inc
ljmp
cmpsb
pop
jmp
rcrl
jnp
and
fld
xchg
mov
mov
xor
or
sbb
fdivrs
pop
iret
lret
pop
in
adc
lods
sti
push
aam
dec
xor
inc
pop
xchg
push
pusha
cmpsb
add
inc
mov
gs
je
xchg
rolb
push
jecxz
jmp
mov
mov
jl
into
ljmp
fsubr
inc
jbe
out
push
push
inc
and
push
dec
gs
mov
push
or
sub
push
mov
nop
jle
push
mov
out
cmp
out
and
push
push
lods
addl
out
insb
dec
adc
fistps
in
cmp
inc
in
insl
es
push
cmp
mov
pop
shrl
orb
or
cmpsb
or
xor
loop
int
add
sub
mov
xchg
mov
mov
dec
int
adc
imul
outsl
aaa
mov
dec
out
inc
loop
or
push
popf
outsl
cmp
xchg
or
sarb
xor
mov
nop
in
insl
mov
or
xor
adc
xchg
add
out
movsl
cmp
fdivrs
sub
into
push
cld
call
add
lods
push
pop
insl
sbb
push
mov
loopne
mov
sahf
xor
dec
mov
push
sahf
add
scas
std
out
in
xor
in
jg
mov
scas
pop
insl
dec
adc
jnp
mov
aam
jecxz
imul
mov
cmp
loope
pusha
pop
imulb
notb
dec
sbb
ds
bound
movsb
sub
lcall
dec
imul
pop
add
xchg
sbb
shr
aas
mov
hlt
xlat
pop
setle
lock
scas
sub
jge
mov
lret
jb
icebp
xor
cmp
andl
dec
and
fnstsw
in
xorl
hlt
loop
in
lods
xchg
lea
sar
dec
lods
mov
dec
clc
mov
stos
or
test
or
mov
scas
incb
mov
dec
pop
insb
mov
or
test
and
loopne
or
roll
xchg
sahf
imul
lahf
mov
and
cvtps2pd
jno
pop
jp
sub
test
mov
mov
jbe
loope
sbb
out
lret
gs
lock
or
js
xchg
mov
clc
push
enter
sub
or
out
out
lods
js
jbe
inc
call
jmp
sbb
ljmp
sub
popa
popa
movsl
out
mov
mov
int
jl
iret
subl
mulb
xor
loope
and
pop
call
add
pop
or
jg
mov
jle
sub
sti
aam
in
sbb
sub
mov
stos
inc
jns
in
enter
imul
sbb
jnp
fcoml
jecxz
div
pop
dec
jb
add
adc
ret
insb
cmp
sbb
adc
xor
add
pop
cmp
add
pusha
test
pop
jge
aad
adc
ret
sti
int
aad
cwtd
rep
lds
push
or
std
int3
pushf
jg
add
insb
scas
xor
nop
lret
imulb
xchg
popa
clc
lds
test
ss
dec
movsl
ret
inc
mov
jmp
lea
popf
cli
movsl
jne
fstps
cmc
lds
test
xor
pushf
int
in
push
scas
mov
cs
push
call
cld
pop
in
ds
dec
push
and
mov
sahf
mov
sub
add
out
outsl
fdivp
mov
mov
andb
sbb
jl
out
or
or
xor
inc
or
rolb
push
mov
pop
inc
jmp
and
outsb
xor
out
sub
ret
aad
add
mov
cltd
pop
shll
add
jbe
mov
in
inc
xor
sbb
jle
mov
int
movsb
lret
movsb
fildl
mov
inc
pop
das
lret
jmp
xchg
pop
inc
shlb
and
mov
imul
and
xlat
loopne
mull
test
cli
push
sub
fisttpll
pop
out
sti
xor
add
fwait
or
rcrl
mov
aaa
adcb
jl
andb
fcoms
sub
mov
ja
scas
hlt
cmpsl
ds
aam
dec
and
xchg
mov
mov
push
cmpsb
es
pop
jns
mov
and
ds
mov
test
pop
into
popa
jecxz
dec
fidivl
ficoml
xorl
mov
lret
mov
out
pop
xchg
in
in
pushf
or
clc
stos
mov
push
xor
call
cmp
adc
lock
cs
rorb
mov
pmulhuw
push
imul
add
dec
mov
es
mov
ja
xchg
mov
iret
push
add
pop
shrb
lock
pop
sbb
mov
dec
push
fcompl
rorl
adc
daa
aam
icebp
clc
add
push
mov
cmp
xchg
pop
mov
filds
jbe
in
fisubs
les
movsb
idivb
mov
jecxz
lahf
sub
movsl
xor
mov
das
aas
pop
ds
imul
cli
mov
sbb
mov
mov
adcl
sub
adc
popa
cwtl
push
xchg
jge
fs
adc
mov
mov
cmp
and
or
sbb
and
orl
loop
gs
out
lahf
push
inc
setg
loopne
pop
icebp
inc
lea
sub
daa
mov
cmp
push
xchg
shll
pop
sbb
add
inc
aaa
pushf
adc
outsb
cmp
dec
jp
das
push
setne
loop
movsb
test
stc
fcomps
iret
fidivrl
jno
push
pop
pop
jecxz
push
out
add
arpl
xor
xor
aad
pop
or
fs
repz
pop
int
adc
dec
sub
or
push
pop
sub
push
add
and
sub
jl
dec
jmp
jecxz
sub
xor
xchg
inc
mov
leave
jae
outsl
inc
sbb
push
jecxz
adc
inc
or
imul
loop
mov
loope
outsl
test
jae
fbstp
xchg
xchg
xor
clc
cmp
idivl
mov
movsl
cmp
outsl
jmp
flds
mov
mov
jo
push
jne
jne
nop
add
int
add
adc
ja
and
jle
sbb
and
xor
sbb
mov
dec
mov
mov
daa
inc
lods
mov
jmp
mov
shlb
fsts
cmp
push
push
into
in
xchg
lds
mov
repnz
push
loopne
call
adc
repnz
cmp
xorb
mov
out
je
dec
jecxz
aaa
cltd
dec
sub
mov
mov
inc
sub
std
stc
inc
and
jnp
test
mov
fiaddl
and
maskmovq
negl
jbe
add
adc
push
nop
xor
mov
mov
push
cmpsb
jg
lea
frstor
mov
in
jl
leave
fdivr
mov
das
sahf
jmp
mov
mov
test
jmp
xor
sub
xor
or
je
ss
pop
popa
xchg
sub
add
mov
ret
inc
daa
xchg
mov
fisubrl
fnstsw
and
outsb
lret
or
inc
je
mov
test
fisubrs
jle
lret
subl
adc
inc
xchg
xchg
mov
push
daa
pop
and
sbb
mov
adc
jb
push
pop
push
repz
clc
push
xchg
push
mov
push
cmp
test
lret
dec
jg
jecxz
pop
add
daa
push
mov
mov
pushf
movsb
add
outsl
inc
lret
pop
jb
sub
fidivrs
or
dec
scas
fbld
movsl
mov
inc
stc
and
adc
adc
dec
or
std
push
xor
push
cmc
shlb
mov
pop
int3
sbb
cmc
arpl
inc
inc
pop
dec
adc
lock
inc
xchg
xchg
adc
xchg
sub
push
jae
popa
mov
or
loop
xchg
leave
dec
xchg
dec
push
in
lods
inc
inc
push
imul
mov
ljmp
ficomps
paddb
in
outsb
add
and
outsb
xchg
mov
shl
and
push
inc
int3
cmp
mov
iret
push
cmp
int
push
pushl
movsb
test
cmp
or
hlt
fs
aad
icebp
movsb
xchg
out
je
mov
dec
fstpl
and
cmpsl
fcoms
mov
mov
pop
cld
or
jle
ja
js
pop
subb
pop
int3
add
mov
sbbb
leave
test
aas
xlat
cmpsb
xorl
loopne
inc
adc
int
loope
leave
insl
cs
add
cmp
pop
or
sub
int
jle
push
and
xchg
jb
xchg
cltd
xchg
or
ljmp
inc
dec
pusha
lea
lock
mov
sub
ja
mov
push
dec
inc
shl
shll
scas
mov
xchg
test
cmp
push
movsb
fdivrs
sub
call
das
lahf
push
repz
std
faddl
es
adc
jl
mov
jbe
pop
or
adc
leave
jnp
sbbl
xorl
pop
jp
insl
in
repnz
ljmp
outsl
outsl
std
addr16
icebp
adc
xchg
fbstp
or
test
sbb
ja
outsb
xchg
cli
jp
adc
ja
mulb
mov
jecxz
push
jno
dec
mov
addr16
je
jns
sub
and
lret
ret
push
rolb
ret
bound
inc
cmp
cmpsb
aaa
loope
movsb
outsl
stos
mov
xor
roll
popa
sub
movsb
lea
imul
leave
xchg
pop
cmpsb
aaa
outsl
cmpl
aad
jle
ret
push
sti
add
iret
mov
test
aad
sbb
dec
in
es
and
cmp
jmp
mov
int
sbb
jecxz,pt
dec
mov
add
sbb
addr16
test
cmp
addb
jnp
stos
mov
rorl
leave
ds
aaa
ljmp
shll
int
adc
ss
mov
push
xchg
add
out
and
mov
mov
mov
rorl
pop
adc
stc
add
aas
mov
xor
mov
or
sub
and
dec
or
js
nop
mov
pop
cmp
mov
add
stos
cmpsb
adc
inc
xor
loope
sbb
repnz
js
sarb
xor
lods
adc
jecxz
sub
into
sbb
loopne
pushf
adc
mov
add
add
jnp
in
rorb
dec
push
jne
or
sbb
mov
inc
jle
out
cmc
cs
int
fistl
int3
out
push
xchg
in
mov
sti
adc
dec
loopne
jne
push
and
add
cmp
mov
mov
jne
push
out
pop
cs
test
cmc
mov
test
adc
aad
jge
mov
pop
stos
lret
mov
jl
xor
addl
inc
int3
out
cmp
pop
pop
inc
sbb
rolb
add
mov
cmp
test
ds
aas
leave
mov
jg
aad
rclb
jno
notl
and
outsl
dec
xchg
or
stos
stos
mov
ss
fs
decb
push
xor
int3
mov
lret
cli
dec
mov
mov
lods
jle
xchg
inc
fistpl
pop
adc
dec
xchg
sbb
pop
sub
dec
andb
ljmp
push
xor
cltd
roll
mov
ss
mov
pusha
inc
inc
jle
push
in
fwait
dec
push
mov
xor
mov
inc
pop
pop
outsb
jmp
cmp
fists
bound
popf
inc
mov
adc
mov
adc
call
lods
mov
int
aam
jne
test
inc
and
enter
in
lret
xor
adc
push
mov
adc
cmp
xor
out
mov
add
rcrb
enter
push
pop
sub
sub
insl
pop
fcomps
out
leave
sbb
or
mov
push
loopne
mov
shlb
xchg
jmp
mov
mov
sbb
sbb
jmp
xchg
popf
inc
ja
pop
addr16
xlat
aad
daa
gs
mov
dec
lret
gs
fisubs
in
jb
push
dec
ret
sub
mov
xchg
adc
sbbb
mov
mov
fwait
pop
lahf
xor
or
call
push
fbstp
clc
dec
sbbl
out
shl
xor
dec
jecxz
stos
add
pop
repnz
cli
lods
aam
push
adc
xchg
jne
testl
std
xor
int
ds
cmp
aad
in
into
push
addr16
mov
or
pop
jl
in
mov
adc
in
movb
add
mov
xor
roll
sbb
out
push
sbb
imul
push
out
pop
inc
ficomps
pop
adc
scas
push
add
xlat
andb
cwtl
ja
ds
movsl
into
pop
in
adc
outsb
mov
mov
mov
jne
fsubl
jo
push
aas
xchg
lods
sub
sub
add
outsl
or
rorl
call
fs
cli
out
outsl
xor
pop
subl
fldcw
addr16
add
out
movsl
loope
xchg
sub
xor
adc
fst
cli
and
cld
and
mov
cwtl
inc
lret
fisubrl
xorb
push
pop
test
sub
mov
jbe
ljmp
sbb
cmp
aaa
imul
enter
cmpsb
cwtl
sub
int
cltd
push
divb
xchg
jbe
xorb
cmp
ret
pushf
or
jnp
pop
fs
mov
dec
subb
syscall
dec
adc
das
lcall
jp
stos
adc
ss
push
std
and
dec
xchg
lods
or
repz
pop
add
fisubrl
stos
popf
cmp
aaa
fcoml
fsts
xchg
xor
adcb
xchg
pushf
cltd
xchg
ja
jle
arpl
rol
jb
es
lods
mov
lret
sub
fstpl
out
fistpl
test
push
out
mov
leave
movsl
push
fists
mov
lea
out
and
push
push
int3
add
jae
sbb
es
adc
jp
dec
push
push
mov
shlb
test
lods
add
ret
mov
xchg
adc
or
mov
data16
cld
xor
pop
loop
inc
test
and
cmp
lds
inc
mov
inc
or
and
push
in
xchg
adc
int
dec
shll
lock
jmp
cmpsb
lock
jg
popf
int
mov
test
popa
jae
lea
jl
mov
and
pusha
cli
cmpsl
repz
adc
push
sub
push
leave
pop
dec
sti
subl
push
xchg
sub
into
out
jp
sbb
lret
fisttps
pop
add
pushf
ljmp
pop
enter
cld
xchg
out
shlb
xchg
sbb
daa
sti
push
mov
dec
sub
push
repnz
lret
daa
sub
je
fdivl
scas
in
inc
test
in
hlt
add
jne
jnp
icebp
xchg
mov
xor
mov
dec
dec
lea
lea
pop
sub
jl
inc
int3
insb
mov
loope
pop
mov
popf
inc
loope
fdivrl
mov
mov
sub
in
fs
std
mov
or
fisubs
jne
test
push
xchg
sbb
pop
inc
js
mov
cmp
sbb
sbb
aam
daa
ds
and
mov
cmp
xor
scas
out
fstpl
jne
push
adc
test
sbb
inc
sahf
inc
fstpl
or
and
adc
push
ljmp
punpckhdq
cmp
cltd
loope
or
stos
inc
xchg
in
std
into
out
mov
into
call
iret
stos
xor
sahf
out
in
cld
out
test
cli
pop
dec
pop
rol
mov
mov
cmpsb
cmp
jmp
loope
mov
adc
cs
movl
lock
loop
loopne
xchg
aam
jp
push
insl
popa
sahf
and
bound
ret
inc
insl
repnz
data16
in
idivb
loop
mov
or
pop
inc
neg
mov
arpl
adc
das
sub
mov
sbb
cmp
push
lret
ret
aas
in
xchg
sbb
mov
testl
arpl
das
mov
leave
cmp
add
pop
sub
repz
jae
repnz
jns
mov
fwait
jbe
mov
mov
jp
push
scas
rcll
xor
sbb
add
cmp
int3
xchg
mov
loop
mov
das
sub
hlt
mov
dec
or
jne
clc
jge
mov
mov
or
jecxz
push
js
lds
in
sbb
mov
jmp
rcll
sub
imul
out
xor
sub
les
pop
loopne,pt
or
ja
add
dec
xor
jbe
es
xor
fidivrs
cmpsl
test
xchg
jecxz
repz
loope
xchg
stos
inc
int3
test
cmp
repnz
inc
inc
and
sti
sub
jnp
mov
dec
lds
pop
inc
mov
dec
mov
push
pop
pop
je
cmc
jp
mov
xchg
lock
loope
in
pop
cld
push
les
sbb
fdivl
iret
pslld
leave
hlt
in
jle
ja
xchg
aad
jne
pushf
jne
or
scas
adc
cwtl
mov
loop
add
test
pop
data16
orl
cmpsl
mov
enter
pop
rcrb
jbe
mov
ja
cld
jmp
fdiv
aad
add
mov
enter
jb
ret
or
jo
insl
pop
test
cli
loopne
xor
inc
inc
stos
xor
mull
or
add
mov
and
sahf
dec
cmp
imul
pop
in
xchg
out
sbb
hlt
add
leave
call
arpl
dec
mov
aad
xchg
leave
sbb
xchg
sar
lea
fsubrs
and
in
add
hlt
mov
movsl
mov
cmpsl
test
popa
mov
mov
enter
gs
data16
shrd
nop
es
sub
lret
sti
dec
cmp
mov
xchg
pusha
xchg
int3
ds
insl
inc
sti
ljmp
lods
mov
pop
movl
xchg
shrl
dec
push
sbb
aaa
repz
inc
mov
mov
push
xor
lret
add
pushf
mov
fimull
mov
icebp
cli
faddl
int3
sti
jecxz
std
mov
rorb
dec
mov
fisubl
adc
cmp
icebp
mov
cmpsb
xor
fucomp
loope
push
insl
mov
dec
add
add
adc
xor
addl
mov
cli
scas
mov
jne
pop
lret
movsb
mov
je
xchg
lcall
daa
cmp
out
das
add
push
pop
add
xchg
sbb
out
cmp
xchg
out
out
les
pop
icebp
inc
mov
cmc
push
pusha
inc
gs
xor
mov
sub
lock
lods
xchg
cwtl
push
jns
ds
mov
ror
add
dec
outsb
add
addr16
cmpsb
test
jmp
pop
pop
loop
roll
xor
jl
cvtps2pi
leave
stc
inc
loop
sahf
pusha
push
xorb
push
lret
adc
add
rcll
cmp
add
stos
mov
cmpsb
stos
or
and
lcall
mov
insb
push
mov
mov
pop
adc
add
mov
or
sbb
mov
in
jne
lods
iret
frstor
scas
and
jbe
xchg
or
out
iret
or
xchg
or
mov
cmp
add
and
pop
cltd
bound
cs
imul
int
enter
cmp
cmpl
scas
dec
aam
aam
mov
cs
mov
adc
mov
jl
adc
xor
fisubrs
outsb
jbe
or
pop
aas
add
out
jecxz
push
mov
and
mov
push
ljmp
xor
data16
mov
and
xorl
jo
jle
inc
pop
sbb
inc
fistpll
or
ljmp
jb
sarb
pop
fcoms
add
stos
jnp
lahf
enter
lea
insb
fs
dec
inc
ret
cmpsb
fdiv
pop
adc
mulb
cmpsl
push
mov
jo
push
loop
ljmp
clc
and
mov
push
stc
mov
jle
js
iret
aam
mov
jg
psllq
lock
cmpsl
int
sub
repnz
dec
cwtl
mov
sub
xor
jp
inc
mov
sahf
and
pop
scas
das
mov
out
inc
adc
pop
xor
repnz
jmp
jae
mov
ljmp
cmp
out
fldt
xlat
mov
cmp
leave
iret
lcall
scas
js
push
fmul
imul
cld
adc
out
sub
dec
scas
popa
pop
lods
repz
jb
dec
mov
push
int
lcall
movsl
mov
out
xchg
xlat
xrelease
sbb
sbb
and
adcl
mov
mov
js
cmp
je
mov
dec
xlat
les
dec
xchg
add
add
add
ja
sarl
mov
cmpsl
sbb
inc
jp
adc
clc
and
les
mov
mov
pop
cmpsl
pop
push
dec
inc
fnstcw
aad
iret
jae
clc
lsl
sahf
insl
mov
je
cmpb
dec
je
mov
popf
sarl
pop
mov
fwait
outsb
int3
jo
int3
cli
xor
pusha
roll
mov
mov
out
xchg
stos
jbe
xchg
shl
neg
ret
xchg
sbb
add
jb
fsubr
push
cli
cwtl
jnp
inc
and
stos
sub
jmp
out
jnp
mov
adc
xor
jae
gs
sahf
jb
pop
add
pop
hlt
xor
mov
cs
cmp
arpl
adc
cwtl
fs
mov
pop
nop
daa
xor
cmpl
popa
cmp
fcoms
loopne
jl
xchg
or
dec
lret
mov
lds
xor
add
out
inc
dec
mov
mov
xor
pop
fnstcw
mov
jb
cmc
jns
adc
jae
and
imul
mov
cmp
dec
mov
push
cmp
jbe
xor
mov
dec
cmp
xor
cmc
dec
push
pop
imul
xchg
inc
xchg
push
xorps
sbb
shlb
sub
fcmovnb
cli
dec
pop
xchg
lock
stc
push
xchg
call
fnsave
pop
or
and
fs
lea
js
jge
xchg
push
jne
gs
psllw
mov
dec
fsub
xchg
lods
sahf
add
ret
push
adc
fidivrl
hlt
pop
sarb
jne
shl
pop
adc
xchg
outsb
fisttpl
jmp
mov
aad
imul
xor
pop
ret
jnp
pop
add
add
mov
lahf
jno
inc
push
outsb
add
insl
popa
adc
xchg
mov
or
pop
popl
add
fcomi
gs
xchg
lods
into
jg
sub
andl
jmp
jb
test
sub
cli
adc
in
imul
shlb
insl
lods
adc
lock
add
pop
lahf
mov
roll
mov
cli
test
std
pop
addr16
js
xchg
sbb
test
jb
repz
cli
daa
fiaddl
bound
sahf
out
xchg
mov
xchg
cmp
cmc
xor
jns
mov
push
jle
or
popa
xor
xor
popf
out
pop
loope
cmp
inc
cmp
stos
imul
pop
outsl
out
mov
xor
sub
lods
inc
gs
data16
in
push
arpl
jb
stos
mov
xor
jo
in
jno
stos
sbb
jno
xor
daa
inc
filds
sbb
xchg
mov
xor
out
les
cmp
push
cmpsb
addl
jae
test
xchg
and
mulb
imul
push
sub
dec
test
push
fidivl
int
push
inc
fidivl
outsb
fidivl
inc
xchg
jnp
dec
jecxz
in
sbbb
push
outsl
and
push
push
mov
add
pusha
cwtl
shl
shlb
mov
repz
push
push
lahf
xchg
add
int3
pop
mov
bound
shlb
jl
sbb
mov
xor
bnd
mov
fcomps
xchg
xor
loop
es
aad
sbb
repnz
js
outsl
dec
pop
mov
push
or
jae
inc
jnp
xlat
cmp
inc
sub
and
pop
lock
sub
negl
push
sub
shlb
out
notl
sbb
enter
outsb
inc
arpl
push
dec
and
mov
loopne
cmp
mov
stos
pop
lcall
ljmp
into
daa
jmp
xor
cmp
pop
xor
or
sub
jl
andl
cltd
add
cmp
call
jae
cs
addr16
and
icebp
fcompl
mov
sub
lods
mov
push
pop
cmc
xor
clc
sub
xor
and
stos
divps
pop
out
lahf
cmc
inc
pop
xchg
dec
pop
xchg
jne
and
insl
in
cmp
add
dec
lds
xchg
dec
cmc
mov
int
inc
out
movsl
or
cmpl
adc
sub
mov
xor
mov
jns
and
mov
sub
push
sub
mov
inc
aaa
cmp
mov
and
push
sahf
test
scas
loope
outsb
pop
mov
lahf
and
adc
push
enter
mov
mov
cmpsl
stc
es
jns
jns
mov
xchg
fidivrl
pop
iret
and
nop
sbb
sub
xor
xchg
mov
lret
test
inc
jnp
and
mov
nop
cmpsl
inc
push
pop
add
mov
sub
test
or
sar
xor
lahf
mov
in
js
sbb
add
fisubrs
das
mov
mov
es
cmpsb
inc
and
out
xor
cmp
push
daa
or
pop
fcoms
push
shr
cmp
imul
insl
je
jne
aad
inc
push
lock
and
pop
push
mov
sub
cmp
cli
inc
cmp
xor
rcl
icebp
inc
mov
jg
dec
das
cmpsl
daa
in
xor
jnp
xor
call
mov
in
in
mov
sub
xor
sbb
mov
movsl
inc
fisubrl
jnp
cmp
mov
into
popa
rcll
cs
orl
cmp
popf
js
rorl
adc
adc
outsl
xchg
out
pop
inc
addr16
inc
xchg
mov
sub
lock
lock
fdivrp
call
inc
fsubrl
inc
dec
je
sub
ds
or
ret
in
icebp
dec
fisubrl
out
fnstcw
jmp
adc
lret
stos
jns
sbb
pushf
mov
int3
rcrl
inc
lea
inc
sbb
xchg
scas
into
or
test
mov
or
es
cmp
or
jecxz
cmc
bound
stos
or
mov
adc
push
sub
mov
mov
cli
cmpl
nop
outsl
movsl
data16
mov
cmp
inc
lea
pop
fwait
sub
out
or
mov
sub
add
out
les
stos
repz
jmp
leave
jns
gs
add
jl
inc
stos
xor
outsl
and
jp
movsb
sbb
fimull
call
inc
push
add
leave
or
and
stos
out
dec
sbb
cmp
sti
cmp
sbb
or
pop
push
or
enter
pop
test
arpl
push
xor
xchg
dec
sbb
sbbb
clc
push
xchg
or
add
movsl
mov
sub
pop
pop
and
lcall
mov
pop
stos
dec
mov
mov
sahf
cmp
imulb
movsb
push
pop
jp
push
imul
mov
jmp
push
sbb
inc
popw
es
mov
ficoml
cmpsl
add
dec
mov
stos
cmp
inc
add
leave
aad
in
es
iret
js
push
lea
shlb
mov
das
testl
inc
push
in
rcrl
int3
cmp
rcr
fcoms
pop
aas
pop
imul
mov
mov
test
test
sub
cli
mov
push
push
lods
loop
xchg
adc
fsubs
subb
frstor
jno
jbe
aas
ret
cmpsl
call
cmp
outsb
in
dec
icebp
jmp
add
cmp
shlb
enter
scas
push
loopne
adc
inc
icebp
adcb
cmpsl
scas
fists
addr16
aaa
sub
adc
mov
repnz
sub
and
mov
dec
mov
aaa
xor
test
lock
jmp
stc
add
dec
jmp
xlat
and
dec
popf
lahf
shll
cmpb
mov
sbb
dec
sbb
insl
mov
icebp
cltd
or
mov
ret
xor
fildll
int3
rclb
aaa
cmc
mov
outsb
ljmp
std
ss
out
add
sub
inc
jecxz
pop
das
dec
push
lods
lret
inc
add
data16
mov
sahf
dec
popa
mov
mov
mov
fs
cmp
xchg
sbb
jmp
subl
fisttps
xlat
pop
cmpb
iret
test
add
cmpsb
movsb
mov
loopne
mov
insb
popa
hlt
out
sub
cmp
or
fadds
shlb
jl
scas
mov
out
mov
fstl
ljmp
sub
pusha
fs
dec
push
jg
out
xchg
jo
mov
jns
jl
js
sub
sarl
mov
scas
jle
sbb
jmp
popf
lahf
pop
mov
int3
fnstsw
out
repnz
ret
mov
push
das
inc
jmp
pop
jbe
into
push
out
js
andl
dec
insl
xlat
jecxz
fsubs
int
ds
and
mov
imul
inc
shr
pop
pop
stc
xor
mov
jp
sahf
lret
loop
popf
xor
popa
aam
sub
or
lods
sub
stos
pop
and
inc
int3
out
cmp
aaa
in
sub
xchg
inc
stos
mov
cltd
inc
cmp
push
test
or
pop
mov
mov
in
add
mov
xchg
pop
cmp
lret
jg
leave
pop
jp
jg
repnz
movsl
stos
or
cwtl
adc
loopne
int3
inc
jne
popa
fdivs
mov
adc
jp
dec
or
or
cmp
not
push
pop
xchg
pushf
add
orb
or
inc
ljmpw
out
sbb
lret
lret
jne
xchg
cmp
adc
xchg
je
addb
imul
mov
push
inc
in
loop
rorl
hlt
or
mov
lock
inc
ror
shl
add
dec
push
arpl
jo
and
dec
push
inc
ret
psrlq
pop
or
shl
xor
bound
xor
jp
notb
xchg
xchg
in
icebp
xchg
adc
fs
pop
sar
cmp
mov
pop
icebp
icebp
mov
inc
or
lods
je
xchg
mov
add
into
add
mov
xlat
sahf
vpminsw
mov
mov
and
push
mov
adc
xchg
cmp
jg
jl
gs
in
or
xchg
leave
inc
xchg
adc
jno
xchg
iret
mov
outsb
ret
cmpsb
scas
rcrl
mov
xchg
mov
out
sub
popf
push
sbb
repz
aaa
xchg
stos
movsl
add
sar
pop
movsl
sbb
push
rolb
sbb
inc
je
pop
jbe
gs
ficoms
loop
adc
lcall
push
xchg
cmc
loope
pop
daa
cmp
ficoml
std
shlb
push
stc
xchg
fbstp
sub
scas
mov
jl
scas
adc
into
cltd
iret
xor
mov
sub
rcr
divl
cmp
push
xchg
and
push
aas
push
mov
mov
pop
lahf
push
push
inc
pop
dec
cmpl
cmp
das
push
pop
notb
inc
ret
mov
xor
lods
sti
push
lahf
cmp
stc
dec
mov
stos
lea
mov
xchg
icebp
fisubrs
sar
mov
lock
mov
or
add
xchg
imul
fsubl
xor
cmp
mov
mov
lahf
ljmp
out
pop
repnz
int3
mov
sub
scas
push
push
test
ret
lock
fstps
into
xchg
jno
sbb
cli
push
jl
jo
sbb
cmp
mov
loope
scas
ss
outsb
add
das
iret
mov
ds
cwtl
mov
test
mov
sub
jne
xchg
mov
mov
mov
mov
or
adc
out
inc
lods
adcl
mov
ljmp
enter
ss
fildll
or
cmp
loopne
jp
imul
movsl
sbb
inc
adc
add
test
daa
mov
bound
xlat
push
fwait
ret
lods
jb
rolb
pop
mov
pop
call
addr16
out
cs
jle
test
jno
inc
cmpb
dec
push
push
xchg
lcall
jne
add
lods
xor
and
mov
push
dec
mov
pop
cli
xor
fstpl
adc
jbe
fnstenv
pop
icebp
mov
fsubrl
adc
loopne
in
pop
xchg
dec
mov
in
cmp
subl
jbe
xor
xor
mov
int
outsl
dec
adc
mov
pop
pop
loop
add
xor
jo
insl
mov
add
inc
mov
icebp
xchg
daa
test
dec
mov
push
popf
mov
or
dec
dec
and
sbb
mov
xchg
sti
push
jo
xlat
mov
bound
jnp
jne
sbb
sbb
add
xchg
lds
inc
mov
sbb
orb
adc
cmpsb
adc
or
xchg
ljmp
test
clc
and
orb
jns
add
xor
scas
test
dec
push
add
lret
sub
stos
shrb
dec
mov
out
mov
lahf
jno
or
test
cmp
sub
ficomps
jge
and
add
jnp
call
divb
mov
cmc
jle
testb
cmp
push
repnz
das
bound
pop
cmc
shrl
mov
pop
scas
xchg
inc
int3
pop
ja
aam
addr16
flds
push
sub
test
mov
addr16
push
pop
adc
fcomps
mov
std
insb
repz
pop
pop
mov
xchg
fcoms
mov
mov
jmp
lahf
push
outsl
jmp
pop
inc
jp
xor
clc
js
or
sbb
cwtl
subl
push
enter
lock
mov
popf
inc
hlt
loop
xchg
and
push
sbb
pop
cltd
mov
pop
sub
add
xor
insl
fnstcw
dec
inc
and
pop
cmp
mov
outsl
push
adc
mov
sbb
call
lret
sbb
or
pop
jne
push
sbb
rolb
lahf
push
enter
dec
pusha
jp
in
sbb
adc
mov
xor
ret
insl
jmp
jnp
cld
ss
out
push
lahf
inc
hlt
mov
hlt
sub
jne
dec
cmp
cmp
fwait
sbb
aaa
sub
sahf
lea
bound
dec
mov
push
push
push
cmp
test
pop
lods
cs
mov
sub
inc
jle
stc
cltd
push
faddl
mov
push
insl
cmpl
jnp
jl
test
aas
sbb
mov
nop
xor
roll
mov
mov
jge
mov
jns
xchg
imul
fnstenv
xchg
jle
fcmovnu
test
fxch
sub
nop
test
push
enter
loop
adc
dec
imul
aas
aas
mov
cmpsb
test
sub
into
push
dec
mov
pop
int
xor
les
sbb
dec
loop
dec
xor
xchg
mov
sbb
push
xor
mull
out
loopne
mov
pushf
xchg
cmp
ret
addr16
addl
xor
jge
xchg
sbb
dec
jbe
and
daa
test
sbb
add
addr16
sahf
inc
add
dec
xor
xchg
pop
in
xor
xchg
mov
jmp
dec
or
mov
cmp
jae
push
add
fsubrs
xor
adc
and
out
lret
in
dec
jb
bound
fisubl
or
jmp
add
sub
inc
xchg
or
repz
cmpsl
mov
jge
sbb
and
sub
scas
cmpb
sub
adcb
into
dec
pop
add
aam
inc
pop
mov
js
clc
test
sbb
add
adc
xchg
cmp
push
push
xchg
hlt
mov
dec
add
xlat
push
lret
xchg
adc
dec
sub
fcompl
add
push
popa
stos
adc
nop
sub
loopne
fcoml
xchg
addr16
dec
or
mov
movsb
jo
ja
or
add
sti
sub
mov
outsl
pop
or
in
ret
and
jb
movsb
pop
jl
xchg
mov
jns
xor
sbb
sbb
add
loop
lcall
lret
or
out
push
sub
es
jl
pop
insl
rol
ss
cwtl
jp
xor
mov
ret
jns
divb
jo
ds
inc
adc
hlt
xchg
sbb
clc
lret
mov
fwait
out
loop
mov
and
data16
mov
vmovups
xorl
imul
imul
jo
cli
or
sbb
inc
xchg
dec
adc
sarl
gs
cmp
gs
stc
cmp
divb
cmc
pop
nop
jo
add
sbb
nop
out
lods
clc
jmp
cmc
scas
xchg
test
mov
out
adc
inc
push
fwait
andb
int
outsb
dec
lea
dec
iret
cmp
mov
jmp
repnz
jp
movsb
hlt
jmp
jnp
sub
mov
xchg
lahf
jno
or
js
push
pop
insl
jae
negl
xlat
in
sahf
jbe
cs
xchg
sbb
mov
outsb
fidivl
or
daa
into
mov
add
push
mov
xchg
add
int3
test
inc
add
jbe
mov
inc
jp
sbb
xor
pushf
aaa
pop
lcall
lods
jp
pop
daa
js
push
lahf
sarb
inc
push
js
cltd
pop
repnz
sub
test
cmc
jae
push
sub
dec
jecxz
push
pop
push
out
mov
hlt
mov
ss
lcall
and
push
push
sahf
xchg
lods
jg
push
daa
test
rolb
sbbl
cmp
repnz
adc
push
pop
repnz
mov
fmulp
hlt
mov
push
adc
pop
inc
xor
out
xor
push
out
mov
cmp
cld
mov
pop
in
dec
mov
rolb
lds
stc
lea
je
dec
ds
jae
xor
push
inc
mov
inc
jae
imul
cmc
das
lret
adc
or
cmp
aas
lahf
and
dec
sbb
subb
mov
loopne
xorl
xor
xchg
jle
cmpsl
daa
gs
lds
add
mov
es
pop
inc
mov
sub
scas
add
mov
ret
dec
in
jecxz
sub
jmp
mov
adc
lret
iret
out
mov
stc
cld
sahf
push
shll
ljmp
and
addr16
cmpsl
sub
cwtl
mov
shr
ret
sub
lret
test
or
jp
aas
add
test
fadd
adc
aam
js
subb
mov
cmp
xchg
stc
in
test
mov
sbb
std
pop
jg
sbbl
loopne
jecxz
test
out
aam
in
push
insb
jne
jmp
arpl
push
adc
xchg
loope
imul
jmp
and
and
std
rcr
gs
jecxz
scas
jae
cmp
int
lret
pop
jns
stc
int
xor
pop
or
jo
das
jns
call
ljmp
xor
or
ret
movsl
mov
or
loop
jl
push
scas
shll
movsl
or
lret
sub
int3
fcmovu
pop
in
popa
pop
out
xchg
loop
and
nop
jne
mov
inc
pop
sahf
shl
xor
mov
subb
fs
fnstenv
leave
enter
mov
and
adc
das
das
loope
xchg
test
scas
bound
push
jg
imul
mov
and
mov
add
jb
out
and
fadds
xor
loopne
inc
jbe
mov
pushf
jb
mov
out
jo
aad
jecxz
fldl
and
pop
movsb
mov
and
dec
mov
outsl
push
leave
xchg
cwtl
mov
clc
inc
jg
scas
cmp
mov
imul
enter
xchg
lods
aad
stos
sub
leave
dec
shlb
dec
pop
inc
dec
inc
push
sahf
out
dec
cmp
push
testb
and
bound
add
test
in
jbe
ret
int3
stos
pop
xchg
adc
mov
xchg
xor
pop
stos
hlt
dec
loope
sbb
inc
cli
adcl
mov
adc
test
xchg
or
lods
or
xchg
enter
loopnew
sbb
xor
and
cmc
lea
lods
cwtl
push
pop
xchg
into
sbb
and
nop
imul
cmp
fsubr
inc
popa
int3
jle
scas
or
sbb
aas
sub
fidivrl
xchg
push
jno
iret
pop
lock
ds
jb
call
dec
dec
in
jb
pop
leave
fnstcw
dec
loopne
lods
push
mov
lds
xchg
sbb
inc
cwtl
mov
sub
test
pusha
sub
push
inc
xadd
and
pop
cmpsl
jbe
sub
daa
test
leave
adcl
dec
fiaddl
loope
adc
hlt
inc
dec
mov
inc
iret
inc
popa
mov
pop
shll
jp
out
pushf
cli
dec
fcmovbe
xchg
push
inc
in
jne
fdivrs
ret
fsubs
xchg
inc
movl
das
add
test
add
mov
mov
xchg
outsl
enter
cmc
jo
cmp
push
sub
out
cld
adc
mov
cmpsl
jmp
js
pop
in
fnsave
xor
stc
repz
lcall
or
repz
ds
mov
xor
sbb
dec
sub
cwtl
push
mov
pusha
cmp
rorb
pop
incb
shlb
add
mov
push
lahf
mov
and
in
mov
mov
mov
mov
fdivrs
fbstp
cltd
push
or
je
mov
outsl
mov
jge
in
inc
aam
sbb
jg
mov
xbegin
jne
out
adc
out
dec
in
cs
inc
add
pushf
sbb
dec
fstpl
pop
pop
scas
push
mov
dec
xor
push
ja
jmp
in
enter
ljmp
or
imul
scas
jmp
or
test
ror
jae
sub
cwtl
inc
mov
mov
cmp
mov
inc
out
push
pop
ja
pop
loope
adc
mov
sbb
cmp
sub
mov
inc
add
ficompl
mov
sbb
inc
leave
insb
inc
out
adc
xchg
adc
and
inc
in
or
test
imul
sbb
xor
ja
add
int3
ret
inc
data16
xchg
push
or
cltd
push
cmp
or
mov
mov
ss
jle
jecxz
push
fidivrs
inc
shrb
sub
fimull
push
push
pop
pop
leave
outsb
or
inc
jbe
jb
mov
lret
dec
xor
push
jle
inc
xchg
pop
xor
mov
and
fildl
jmpw
scas
fcom
add
stos
lds
dec
and
pop
and
ss
add
cmpsl
repz
jne
mov
outsl
push
out
mov
mov
call
xor
jle
jl
lods
aas
jns
inc
lcall
lods
or
xlat
scas
fisubrl
lcall
cmp
addr16
icebp
mov
push
dec
dec
insl
insb
dec
add
stc
add
and
loopne
xor
mov
je
adc
add
push
lock
fxch
mov
jae
and
sti
rcrl
jno
jo
mov
imul
bound
or
push
sbb
dec
lock
mov
sbb
out
xchg
into
inc
push
xchg
jbe
stc
lcall
sbb
lcall
sub
push
add
or
inc
pop
dec
sar
cmpsl
in
jecxz
mov
cs
add
rcrb
add
pushf
pusha
xchg
repnz
sbb
sbb
dec
ss
cltd
adc
scas
iret
mov
and
jge
jbe
push
mov
add
lods
cmpsl
cmpsb
add
lods
test
wbinvd
bound
addl
sub
inc
push
fmul
xchg
xchg
mov
xorl
push
fsubr
push
pop
mov
add
call
dec
data16
shr
shr
lock
xlat
mov
movsl
bound
sub
push
mov
cmpb
pop
sub
into
xor
negb
push
sub
pop
cld
and
lret
int3
jno
push
imul
mov
xor
rol
push
mov
adc
lahf
xchg
sarl
lds
or
jecxz
lea
pop
xor
ret
sub
mov
mov
pushf
aas
mov
xchg
roll
dec
mov
jne
arpl
mov
int3
sbb
xor
push
inc
ss
in
xor
dec
add
cld
sahf
fdiv
mov
sbb
or
fwait
fwait
xchg
pop
clc
imul
sub
fdivrl
dec
nop
les
jle
inc
addl
jno
stos
cmp
dec
pop
lock
arpl
stc
jo
push
sbb
xchg
sbbl
mov
fadds
adc
sbb
in
ret
or
gs
lret
sbbl
jb
scas
mov
aad
xor
mov
cli
cs
ds
sub
test
jns
std
pusha
xor
jg
sbb
cli
xor
rclb
scas
lret
cmpsb
adc
cmp
addr16
mov
fnsave
cld
mov
inc
bound
or
pop
sbbb
in
sbb
enter
ret
inc
xchg
stos
scas
pop
adc
jge
add
fadds
std
fs
pop
fnsave
cltd
addl
mov
enter
mov
adc
cld
loop
daa
sbb
dec
sub
inc
mov
leave
shrl
jne
adc
adc
or
sbb
sbb
lret
roll
push
or
pushf
pop
push
add
test
xchg
mov
aas
sbb
cmp
jo
dec
push
loopne,pt
push
mov
daa
sub
xchg
cmc
jae
negb
sti
rorb
lods
inc
pop
stos
pushf
loope
xor
movsb
or
fisubs
outsl
push
push
cmp
sub
in
movsl
bound
inc
xchg
fwait
inc
in
xor
and
fisttps
mov
out
adc
jne
les
rolb
fistps
mov
adc
or
pushf
xchg
and
mov
rcl
add
je
add
cmc
enter
push
and
inc
xchg
mov
jnp
notb
mov
and
ljmp
cld
inc
xor
pop
mull
push
and
dec
xor
mov
int3
arpl
sbb
xlat
arpl
fldt
add
mov
or
fmuls
lret
or
out
test
js
and
mov
sub
cmpsl
sub
xchg
xor
fiadds
push
cs
push
lea
insb
gs
xchg
aam
adc
aam
add
out
roll
or
inc
sbbl
jno
adc
test
xchg
pop
repnz
adc
repnz
into
je
mov
pop
mov
xchg
add
arpl
outsl
or
cmp
push
cmc
jb
mov
mov
lret
es
pop
addr16
sbb
xor
add
pop
pop
mov
daa
xorl
cmovb
jb
setl
adc
dec
sbb
fcmovbe
mov
arpl
lds
popa
jo
push
shrl
xor
cld
mov
xchg
fidivrl
push
adc
cmp
sub
movsb
mov
mov
cli
add
jg
jp
or
push
mov
ljmp
adc
rorl
js
mov
push
xor
adc
aam
adc
mov
jne
jl
push
push
dec
mov
les
scas
push
jecxz
cmc
inc
pop
out
repnz
lock
fsubrp
lcall
ficoml
xor
out
lcall
inc
or
into
add
cmp
jno
sbb
rcrb
inc
add
test
shlb
sub
jae
ja
jnp
popa
or
rolb
push
push
dec
adc
jae
mov
out
outsl
int3
xor
or
xor
das
aaa
adc
jns
add
push
arpl
repnz
dec
mov
outsb
inc
jmp
mov
enter
sbb
add
fldcw
sbb
cmc
cmp
and
lds
fnsave
jl
mov
jbe
jecxz
stos
fiaddl
sub
lret
jl
pop
pop
cmp
xchg
adc
arpl
dec
jno
xor
mov
sbb
xchg
pop
sbb
addb
sub
push
cmp
push
or
mov
jno
imul
lret
call
ret
sbb
lahf
push
es
mov
cmp
loop
cwtl
xor
enter
gs
sarb
je
adc
xorb
aam
insl
sub
into
mov
insl
mov
push
inc
mov
setno
pop
xor
std
adc
or
test
inc
std
xlat
mov
fstpt
scas
cmp
cmp
cmc
sbb
int
popf
sti
and
je
lea
inc
sub
fcomps
dec
sbb
mov
cwtl
bswap
cmpl
aam
lock
fs
or
add
inc
mov
leave
int3
adc
fwait
inc
cmc
mov
sub
xchg
sbb
punpckhbw
and
nop
bound
mov
testb
ffree
nop
in
xchg
push
xor
rcll
scas
fs
jno
les
pushl
mov
and
mov
jge
int3
cltd
divb
pushf
aad
test
ja
xor
xor
sbb
pusha
inc
movsb
cmpb
and
fwait
pusha
ret
inc
arpl
mov
add
mov
call
jb
jmp
rolb
add
in
xor
sub
cmpsb
inc
xor
push
repz
stos
jge
mov
sub
inc
mov
pop
xchg
xchg
add
mov
xchg
pop
pop
jmp
add
jecxz
mov
out
push
mov
js
movsl
jl
ljmp
daa
idiv
xor
aad
lret
xchg
mov
sahf
mov
and
mov
mov
jl
cmp
dec
mov
push
or
add
jl
mov
push
ds
loopne
sbb
je
push
out
outsl
cltd
leave
andb
inc
ret
mov
dec
xchg
or
sarl
cmp
out
xor
scas
sub
fwait
mov
xor
hlt
andl
mov
sbb
fucomp
test
out
cs
shll
mov
sbb
lods
ret
push
jae
popf
sbb
std
or
lcall
sbb
outsl
adc
test
add
ja
mov
xchg
cmp
das
add
mov
mov
inc
jae
mov
ret
imul
sub
mov
and
mov
inc
xchg
pop
sub
mov
jecxz
in
test
push
cltd
les
aas
mov
sub
sbb
imul
mov
lret
ljmp
mov
xchg
pop
and
lret
sahf
xorl
xchg
jbe
jne
jno
sub
repz
jge
or
es
sub
push
jecxz
xor
push
in
repz
divb
enter
mov
addr16
cmp
out
fdivrl
or
out
xchg
add
or
arpl
sbb
or
dec
les
iret
aam
xor
in
iret
popf
adc
scas
lahf
into
mov
jp
mov
pop
pop
mov
jne
push
lret
cmp
in
xor
adc
push
mov
mov
dec
pop
inc
insl
int
sub
mov
mov
test
aam
enter
cmp
sbb
xchg
pop
mov
and
dec
push
mov
sbb
push
rorl
push
mov
jo
push
mov
push
mov
pop
mov
push
ret
lods
and
loopne
xchg
jne
in
mov
imul
xchg
lea
pop
mov
adc
iret
call
enter
sub
push
in
mov
mov
fsts
mov
cmp
jge
das
pop
lock
xchg
popa
jle
dec
sbb
cwtl
mov
rorb
repnz
sub
jecxz
insl
in
ret
outsl
mov
scas
push
bound
loopne
push
in
mov
sarl
mov
mov
push
cwtl
ficompl
inc
lcall
repnz
in
dec
inc
cs
leave
dec
sub
and
and
xor
mov
xchg
les
jle
mov
jnp
out
nop
jb
addr16
es
mov
xchg
stc
jmp
div
js
cmp
lret
fisubrl
mov
inc
test
sti
repnz
andb
add
dec
aaa
push
popa
sarb
sbb
in
in
pop
push
push
jle
pop
divb
inc
insl
cmp
dec
xchg
andb
and
xor
push
das
dec
je
dec
mov
fs
hlt
scas
in
popf
in
ret
xor
xchg
mov
sub
xor
testb
ja
push
insb
adc
sbb
xor
dec
pop
scas
outsl
mov
push
sti
xchg
push
test
cltd
scas
or
and
push
mov
outsl
int
jecxz
jns
sub
sbb
jne
fst
mov
out
ds
cmc
mov
call
jb
stc
xchg
jae
fadd
add
lcall
pop
out
cld
dec
cli
test
mov
mov
lret
cltd
push
pop
mov
scas
int
test
cs
vucomisd
fld
mov
cmc
jnp
int3
aaa
pusha
in
push
push
inc
push
mov
inc
sbb
and
cmpb
fs
cs
xor
xor
gs
mov
int
dec
cmp
jge
in
scas
lret
rolb
hlt
out
iret
in
cmp
push
enter
stos
lds
jle
cmpsl
cmp
and
lret
insl
push
xchg
xchg
xchg
sti
push
int3
cmp
dec
and
into
daa
and
sub
sub
mov
sub
xchg
push
pop
movsb
sbb
xchg
mov
inc
adc
lock
dec
pop
jle
ficoms
ja
repz
imul
repz
mov
and
xchg
mov
dec
adc
adc
pop
lock
in
sub
xchg
scas
push
lea
dec
or
pop
ret
add
jbe
add
popa
pusha
movsl
push
inc
stc
dec
gs
sbb
lretw
aam
mov
out
cmpsl
clc
adc
mov
and
repnz
xchg
pop
rcrb
pop
push
mov
adc
mov
leave
adc
int3
xor
out
cli
pop
push
inc
ficoms
shrb
ret
pusha
mov
addr16
push
rcrb
ffree
outsl
setbe
and
lds
sbb
mov
sarb
inc
and
and
hlt
aam
es
cli
push
and
pop
xlat
insl
fbstp
aaa
rcr
sbb
inc
lods
rorb
andl
outsb
addb
jns
xchg
mov
outsl
pop
jmp
mov
enter
lock
fimuls
sub
sub
ss
jne
jae
dec
mov
or
xor
in
scas
pop
jp
jp
mov
imul
inc
enter
cmc
add
xchg
push
mov
mov
push
movsb
out
adc
pop
mov
and
out
add
mov
xor
inc
and
cmp
loop
xchg
cmpsl
mov
stos
test
and
dec
sub
sbbl
mov
fidivs
and
mov
cmpsb
push
push
mov
mov
stc
das
loope
shl
mov
sub
sbb
les
pop
xchg
call
pusha
and
stos
lret
nop
mov
mov
nop
pop
subb
shll
jp
daa
lods
adcl
jne
stos
sbb
mov
or
imul
stos
out
fstpt
fisttpl
mov
repz
imul
fwait
dec
lret
loope
rcll
xlat
fcompl
inc
mov
add
xlat
popf
jb
jno
add
cmp
je
je
daa
aaa
sbb
sti
sbb
cld
pop
lods
scas
xor
call
jns
adc
dec
das
loop
inc
cmp
cwtl
push
mov
stos
dec
cmp
or
push
in
push
sub
mov
andl
pop
subl
popf
add
xor
jp
mov
aas
xchg
jecxz
stos
add
mov
repnz
mov
xchg
jns
jge
mov
popa
loope
into
notl
insb
jecxz
xchg
add
arpl
faddl
mov
fldenv
push
xchg
mov
popa
jnp
cmc
push
fbstp
adc
stos
sub
out
sub
imul
push
inc
jae
mov
jo
pop
jl
data16
aad
cli
mov
mov
dec
and
stc
into
adc
repnz
add
lods
into
adc
mov
es
sbb
fnstsw
push
cmc
gs
sbb
or
popl
fistl
or
or
stos
cld
adc
gs
mov
insb
inc
pop
mov
movsb
cld
je
or
mov
pop
ja
shll
and
gs
mov
repz
adc
imul
jecxz
data16
aad
adc
mov
jecxz
adc
jnp
mov
add
dec
int
pop
leave
dec
shrl
push
inc
sub
dec
or
and
lods
ljmp
scas
ret
mov
in
sbbb
int3
push
pop
adc
xchg
adc
push
dec
fs
out
dec
test
lds
mov
test
mov
and
stos
aam
stos
mov
pop
mov
in
stos
sub
std
dec
mov
pop
js
fsubl
adc
aas
xorl
jnp
ljmp
mov
ja
scas
sub
js
mov
mov
cmp
insl
jge
int
dec
arpl
inc
sub
shl
sub
out
xlat
ficoml
dec
sar
push
mov
inc
shll
inc
jle
mov
and
push
xor
adc
repnz
movsb
xor
shr
stc
jl
mov
mov
lock
nop
xchg
jl
cmc
dec
jecxz
lods
lods
cmpsl
push
in
mov
cmp
sbb
or
mov
aaa
fs
mov
mov
mov
push
and
sbb
into
and
in
and
fldenv
mov
push
into
dec
fwait
push
movsb
ljmp
shll
fucomip
dec
mov
loopne
loope
mov
pop
int
jp
mov
jmp
mov
pusha
jne
repnz
jae
mov
mov
arpl
add
out
ljmp
push
push
jp
pushl
mov
pop
mov
data16
push
push
jmp
pop
xlat
or
adcl
inc
loopne
inc
leave
sahf
jge
push
dec
mov
or
xorl
jo
adc
xchg
or
push
or
fidivrl
xor
addr16
insb
cmpsl
js
add
ds
jmp
jb
fbld
jl
mov
pop
push
jmp
mov
ficomps
nop
repnz
cmp
push
fildll
hlt
fcoms
mov
dec
xor
fsubrl
lods
xchg
pop
push
xchg
bound
sbb
mov
xchg
lret
ret
jb
xor
aam
shlb
adc
popa
fildll
push
sub
into
nop
orl
arpl
mov
fstpt
js
je
cltd
inc
xchg
outsl
out
mov
dec
scas
imul
std
dec
and
push
icebp
mov
adcb
adc
inc
insl
and
call
mov
xchg
loop
mov
mov
pushf
sbb
mov
aas
fisubs
in
mov
pop
and
dec
sbb
cmp
sub
shrl
insb
xor
fcmovu
sub
pop
add
aad
mov
aad
cltd
sbb
gs
sbb
sbb
stos
int3
cmp
je
das
add
fiadds
jo
mov
mov
dec
xor
imulb
addr16
pop
fistpll
data16
rclb
and
sti
sub
adc
adc
fisttps
push
xchg
popa
mov
pop
movsb
test
ljmp
insb
out
mov
mov
fistl
stos
mov
in
popa
xor
mov
jae
sbb
lret
push
cltd
mov
jns
mov
pushf
data16
mov
fs
lds
mov
cmp
sub
adc
fdivs
in
or
out
fs
aad
push
add
sbb
pop
insb
cmp
fstpl
sbb
mov
push
mov
mov
stos
rorl
cmp
xor
mov
cmpsb
lea
and
cli
roll
subl
lahf
cmp
rcll
fwait
mov
jge
popa
andl
pop
lahf
nop
or
incl
jnp
jne
mov
push
aad
pop
decb
xchg
add
dec
and
xchg
out
push
xor
cmp
test
xchg
sbb
xor
add
es
mov
scas
iret
xor
push
pop
dec
pop
cmp
and
push
jae
jns
xlat
fstp
xchg
cmpsb
iret
jae
not
cwtl
or
pop
dec
sbb
add
lods
imul
jns
push
push
iret
out
and
and
movsb
add
enter
xor
push
imul
adc
push
cmp
mov
dec
add
jge
andl
mov
inc
in
outsb
cli
fistl
shrb
adc
push
push
jbe
inc
adc
test
ss
cmpsl
mov
imul
mov
jae
mov
jmp
je
ffree
pop
push
ret
mov
int
sub
bound
pop
push
dec
fstps
push
sub
fs
mov
insb
push
mov
lds
leave
sbb
shlb
out
jle
jbe
test
ds
sbb
add
sub
mov
add
lea
repnz
call
outsb
mov
cmp
jo
insb
xchg
stc
pushf
sbb
cmc
nop
js
je
xchg
out
jnp
test
roll
mov
add
xchg
jb
mov
pop
sti
nop
imul
mov
mov
addb
test
fst
mov
mov
push
jmp
cmc
jecxz
or
xchg
jno
pop
jp
cli
jo
mov
mov
adc
add
or
push
ds
pop
pop
dec
pop
mov
or
inc
filds
pop
xchg
jp
loopne
cmp
sbb
jnp
std
aad
fcomip
or
xor
pusha
add
mov
fisubs
aam
fildll
xchg
xor
and
loope
mov
sub
push
mov
aas
jge
in
sub
inc
pop
xchg
mov
xchg
inc
loope
xchg
clc
sti
xchg
sbb
sarb
int
xlat
adc
negl
jnp
jns
insb
lock
in
test
push
cmp
xchg
dec
lods
in
fadd
aaa
sahf
sub
lea
rcl
gs
inc
je
rol
xchg
add
outsl
sti
sti
push
mov
nop
cmpsl
xor
mov
rcr
xchg
out
leave
in
loope
in
in
jbe
and
or
arpl
adc
adc
xor
arpl
aas
mov
in
movsl
adc
loop
xor
add
mov
adc
clc
sub
leave
mov
sahf
jne
shlb
scas
sbb
mov
jne
sub
jp
mov
jns
push
jg
out
into
xor
jge
mov
aas
and
push
scas
lds
loopne
sar
shlb
js
xchg
dec
sbb
cmp
and
imulb
hlt
xchg
aad
mov
dec
ret
xor
cwtl
das
sti
dec
iret
into
jp
lahf
es
fbstp
jp
fsubl
fs
jl
or
sub
xchg
xor
xor
test
in
ds
xchg
jbe
adc
or
mov
jnp
adc
push
sub
repz
dec
mul
shlb
inc
outsl
ja
add
jno
jo
push
adc
lcall
mov
daa
gs
jecxz
dec
js
repz
mov
xor
or
mov
popa
lock
and
clc
mov
mov
and
xchg
push
pop
test
bound
push
outsl
xorb
cwtl
sub
mov
add
xchg
cwtl
pop
pop
addb
mov
mov
jno
inc
push
or
leave
cmp
push
adc
stc
out
enter
xchg
lock
into
scas
test
mov
inc
mov
push
adc
pop
push
out
dec
mov
ret
hlt
fcomps
mov
jmp
divb
loop
jg
pop
inc
mov
decl
mov
sbb
xchg
pminub
inc
int3
and
cmp
push
leave
outsb
sub
pop
mov
jne
or
dec
inc
sub
out
nop
sti
adc
xor
push
inc
shlb
sbbl
pop
stc
push
test
push
ret
inc
nop
ljmp
out
push
rorb
cmpb
int3
fsubs
pushf
jne
arpl
scas
add
scas
push
shrb
jne
or
cld
scas
rclb
stos
stos
jbe
iret
adc
int
scas
sarl
fadds
dec
sbb
es
mov
lods
add
fnstsw
pop
sbb
dec
sub
jae
mov
testl
scas
inc
xor
stos
dec
xchg
jge
cmp
lcall
and
std
call
adc
orb
mov
adc
test
faddl
push
jne
pushf
nop
sub
xor
nop
pop
lods
pop
fsubs
sbb
in
call
loopne
insb
hlt
and
jb
js
jne
fisubrl
int3
shl
add
rcl
xchg
xor
add
stc
push
mov
out
ljmp
mov
pop
pop
mov
push
fldl
testl
add
mov
clc
sbb
fisubrs
leave
inc
push
lods
jge
push
xlat
pop
lret
inc
lret
sbb
sarl
fcompl
lods
or
adcb
outsb
lret
lret
pushf
mov
inc
cmpsb
pop
pop
in
jno
ficompl
test
ljmp
nop
sub
pusha
sub
shrb
sub
pushf
fstps
daa
int3
cpuid
imul
inc
fscale
lret
aad
jbe
fistl
test
stc
cmpsb
cmpsl
aad
xlat
repnz
cmpsb
push
mov
nop
sbb
xor
gs
insl
ss
mov
movsb
jp
lahf
jmp
adc
in
jg
xchg
sub
stos
push
lcall
pop
int
ret
clc
rclb
sub
mov
lret
fimull
mov
les
aaa
or
xchg
std
imul
sbb
dec
cmp
push
insl
mov
push
leave
fldt
pop
scas
pop
sub
pop
xchg
xor
pop
pop
jle
out
loopne
es
push
test
mov
lods
inc
mov
sbb
fadd
xor
cmpsl
cld
clc
inc
adc
add
repz
xlat
lret
mov
fadd
lret
add
cmp
cmc
rcrl
xor
push
xchg
jecxz
jp
stc
into
lret
dec
sub
cmc
xor
xchg
jae
push
push
testl
subl
int3
adc
or
test
dec
sub
out
aas
add
push
int
lcall
negb
sub
sbb
mov
addr16
hlt
cmpsl
fistl
movsb
hlt
mov
insb
sbb
mov
adcl
out
mov
fs
add
sbb
adc
xchg
sbb
ja
lods
scas
mov
or
imul
mov
out
lods
sbb
and
jg
subl
std
insl
dec
sub
dec
add
out
sub
inc
jmp
ljmp
mov
jl
pop
in
out
xor
inc
femms
mov
filds
ds
loopne
sbb
xchg
mov
xlat
add
ret
loope
lock
sbb
aas
mov
dec
push
in
push
xchg
fs
xor
cmp
mov
and
xchg
imul
mov
jmp
xchg
dec
negb
mov
dec
add
push
lods
outsb
lret
cmp
es
sub
shr
inc
ret
inc
dec
mov
ret
shr
or
xchg
mov
idivb
jb
mov
jmp
add
pop
xchg
xchg
pop
jo
es
jne
dec
sub
pop
mov
xchg
jbe
pop
dec
mov
push
hlt
aaa
je
push
rorl
lahf
xchg
scas
and
xchg
adc
jle
ds
mov
cmc
sbb
adc
aaa
daa
stos
inc
fldl
fs
push
pop
nop
xor
outsb
pop
xor
ja
les
mov
pop
inc
jmp
mov
das
xchg
sarb
sub
loope
aam
adc
cmp
mov
das
test
inc
push
fisubs
cltd
fsubrs
pop
add
daa
ljmp
ss
mov
xor
jnp
cld
out
sub
cli
cmc
pop
popf
xchg
inc
test
into
jns
ret
sbb
lds
repz
adc
data16
and
or
sbb
dec
dec
pusha
adc
mov
js
rcr
scas
lahf
nop
hlt
aad
adc
push
outsl
cmp
movsl
cmc
sub
push
jg
dec
lret
push
stc
mov
xor
sbb
mov
ja
scas
cmp
mov
pop
mov
jne
out
ret
or
mov
rcrl
xor
push
mov
shl
and
ljmp
mov
add
scas
out
pop
cmp
pop
fistpll
in
add
mov
stc
data16
dec
mov
ss
pop
shlb
stos
mov
add
ror
and
add
pop
gs
pop
mov
dec
sahf
xor
dec
mov
outsl
dec
int3
pusha
stos
mov
and
icebp
aas
jp
push
mov
mov
xchg
insb
xor
pusha
mov
loope
cmpsb
cmpsl
loop
mov
jbe
cmp
add
rorl
inc
and
rol
test
xlat
push
in
sbb
arpl
outsl
faddl
ljmp
adc
clc
push
outsb
inc
aas
cltd
mov
ljmp
mov
sbb
lret
inc
in
dec
adc
daa
push
mov
sub
dec
cmpb
push
int
push
or
sbb
loopne
add
leave
push
outsb
es
loope
push
es
cltd
pop
xchg
jl
add
adcb
cmpsl
stos
or
bnd
sbb
sarb
jle
sub
ljmp
cwtl
or
and
loopne
data16
sub
sub
cltd
mov
lds
in
lret
fdivrs
pop
negb
jbe
and
push
cmp
pop
sbb
sub
lea
pop
xor
jp
dec
outsb
fwait
lds
cmp
mov
addr16
test
push
inc
or
and
cwtl
xchg
mov
loope
call
popa
add
and
mov
fdivrs
and
shrb
sub
mov
push
pop
add
sahf
pop
imul
jns
mov
cmp
ret
scas
or
arpl
mov
lret
mov
push
xor
mov
lcall
out
sub
data16
inc
ja
imul
cltd
jecxz
scas
popf
scas
mov
sub
push
les
cwtl
insl
or
stos
pop
jne
call
mov
jno
mov
xchg
pop
and
icebp
gs
jae
and
nop
insl
aad
push
pop
pop
fsubp
jns
lcall
sbb
out
out
jnp
icebp
jnp
lea
fildl
repz
and
add
push
int
aaa
hlt
cmp
jp
pop
aam
xchg
fsts
sbb
push
mov
jb
jne
jae
mov
xor
scas
push
mov
push
xchg
fldt
dec
xchg
mov
out
call
into
loopne
jo
dec
pushf
arpl
sarl
insl
mov
jae
dec
adc
out
mov
lcall
sarl
and
flds
jmp
outsb
xchg
sub
daa
pop
ret
mov
pop
ret
dec
stos
xchg
out
enter
dec
xor
repz
int
and
roll
mov
xchg
rclb
xlat
imul
cmc
sbb
sbb
sbb
and
push
arpl
aaa
popa
adc
fists
pop
jg
jecxz
push
push
std
xchg
mov
or
daa
ljmp
lds
push
lods
or
push
lret
mov
push
dec
or
add
dec
iret
push
jmp
xchg
jp
cs
xchg
sahf
rcll
mov
movsb
or
mull
cmp
jnp
sbb
xchg
outsl
mov
cmp
jle
test
jb
mov
lds
jmp
sbb
xor
test
arpl
mov
dec
inc
loop
sti
dec
inc
das
mov
mov
imul
cld
adc
loope
add
inc
gs
notl
inc
cltd
ljmp
mov
add
cmovbe
loopne
push
in
insb
cmp
xchg
shll
cmpsb
and
pushf
shl
les
push
cmp
lds
jg
outsl
roll
iret
stos
xchg
inc
pop
inc
jns
test
sbb
sub
add
aaa
fbld
lcall
mov
dec
and
xor
es
pop
jl
or
sti
movsl
pop
or
or
xor
push
add
push
ja
mov
addb
mov
jbe
int
pop
dec
mov
xchg
bnd
mov
repz
jnp
jle
jecxz
xchg
push
cmc
mov
cmpsl
loopne
adc
mov
pop
insl
imul
xchg
cmpsb
dec
xor
pop
jmp
dec
aaa
push
and
fistpl
rclb
aam
xor
xor
mov
pushf
scas
fbstp
sub
sbb
insl
jno
mov
lods
stc
dec
adc
cld
in
andb
xchg
xchg
dec
push
sbb
insl
jecxz
in
xchg
inc
and
push
into
aad
jno
pop
pop
xchg
pop
jecxz
xchg
imul
pop
bound
sub
inc
dec
mov
into
repz
or
lret
cld
test
shrl
push
dec
or
dec
in
les
out
pusha
mulb
push
or
cli
js
call
or
sbb
cltd
cmp
fcompp
addl
gs
jae
inc
fwait
xor
push
pop
dec
mov
dec
inc
in
in
xor
mov
or
cmpsl
or
adc
or
push
movsb
sub
popa
leave
fidivl
repz
cmp
fidivrs
mov
shlb
dec
dec
xchg
lret
scas
jmp
or
sbb
inc
mov
imul
cltd
ja
mov
dec
inc
call
xchg
push
adc
push
xchg
adc
test
adc
mov
inc
jle
imul
mov
pop
repz
jne
xchg
jae
pop
je
xor
xor
fwait
adc
loopne
fiadds
sbb
jge
mov
push
and
loope
mov
jne
sub
mov
out
add
add
dec
push
sbb
mov
pop
inc
mov
ret
xchg
mov
nop
jo
scas
cltd
mov
rolb
clc
repnz
scas
inc
cmp
clc
jmp
aad
sbb
cmpb
push
repnz
fidivs
add
cmp
add
and
pop
and
addb
pusha
aaa
lret
iret
inc
fs
push
in
bound
nop
jno
inc
sub
xchg
loop
outsb
dec
mov
mov
aaa
scas
in
adc
lock
push
push
das
pop
xor
pusha
adc
sbb
ret
push
mov
ffree
in
inc
adc
xchg
jmp
js
les
and
jae
mov
es
scas
lahf
ret
sub
sbb
add
jb
add
sub
icebp
icebp
sbb
fistpll
mov
adc
js
xchg
clc
inc
push
push
mov
mov
jno
inc
pop
scas
sbb
insb
imul
pusha
into
in
add
imulb
adc
mov
and
jae
push
jecxz
jmp
cmp
mov
lret
test
adc
hlt
inc
les
mov
pop
int3
cltd
jl
orl
sub
xchg
fs
lds
imul
sub
pop
mov
clc
shrl
add
inc
jnp
fnsave
xchg
mov
mov
fmuls
add
sub
aam
sti
insl
xor
shlb
sahf
inc
mov
lcall
sbb
cmp
mov
jns
pusha
das
pop
ljmp
mov
dec
mov
popf
sub
push
pop
into
xor
sub
pop
out
andl
ret
popa
cmpsb
xchg
pop
fs
or
jg
test
mov
mov
sub
ja
mov
xrelease
push
xor
sbb
push
out
push
lret
pushf
outsb
imul
and
call
sub
into
stc
movsl
adc
and
inc
adc
ret
xchg
std
jmp
jecxz
gs
mov
dec
sub
xor
loope
mov
dec
xchg
rorb
rcrl
xorb
inc
mov
fsubl
nop
testl
lcall
cmp
dec
in
ret
pop
loopne
cmp
leave
xchg
stc
int
jb
cmp
xchg
fistpl
cmpxchg8b
jp
fistpl
lods
lock
clc
fs
push
mov
mov
mov
or
in
dec
stos
and
outsl
xor
add
andl
shlb
cli
pop
mov
inc
or
xchg
aam
ljmp
dec
jg
and
mov
ret
xchg
jl
dec
into
out
mov
sbb
aaa
jb
fs
sbb
loop
pop
inc
jge
cs
mov
push
jp
jmp
push
adc
mov
pop
outsl
ss
add
dec
mov
or
shl
ja
xchg
cmp
leave
mov
out
pop
jmp
jge
rcrl
lahf
sti
mov
rorb
push
cli
shrb
push
jne
clc
mov
jo
add
push
aaa
test
test
int
les
imul
adc
mov
and
mov
in
mov
lahf
xor
cli
dec
mov
mov
inc
shrl
fwait
adc
adc
fdiv
lret
pop
add
dec
add
inc
jmp
jnp
dec
push
mov
pop
cld
adc
push
jae
cltd
bound
mov
cwtl
push
or
sub
sbb
cmpsb
daa
mov
add
ljmp
mov
dec
test
imul
dec
fsubrp
mov
xchg
lds
movsl
push
divl
movsb
negl
cmpsl
mov
stos
daa
adcb
adc
mov
xlat
in
inc
xor
mov
lea
push
inc
push
and
dec
sub
dec
in
bswap
mov
dec
dec
outsb
dec
add
aad
popf
lahf
add
insl
ficoml
leave
push
cmc
les
xlat
jnp
aas
push
shll
mov
or
sub
push
imul
adc
sbb
insl
push
dec
push
inc
cs
int
nop
test
rcrb
inc
jg
callw
mov
xchg
cmp
and
test
or
or
fsts
cmp
adc
mov
int
stos
js
icebp
mov
pop
nop
inc
aam
sahf
repz
sbb
mov
jl
aam
cmp
cmp
sub
arpl
test
push
push
addl
push
loopne
dec
movsb
dec
test
lahf
push
js
jnp
fcompl
outsl
mov
push
arpl
jl
stos
aaa
cmpl
push
cli
jbe
scas
mov
sub
mov
push
cmp
sarb
push
push
adcb
or
outsl
push
jl
sub
inc
in
cmpsb
xor
lret
aaa
test
sbb
stos
insl
lret
xchg
or
je
push
test
inc
popa
movsl
ret
insb
sbb
jl
outsl
mov
mov
pop
ret
insl
loop
push
popa
add
sbb
pop
fisubrl
add
xor
les
fs
stc
movsb
sub
in
xchg
or
test
mov
cli
pop
adc
test
sbb
mov
repnz
sub
icebp
pop
rcrl
nop
sbb
push
xchg
clc
inc
jno
adc
test
psubb
dec
dec
fldl
addr16
jl
mov
pop
test
and
in
mov
sbb
add
fs
sbbl
sbb
mov
pop
jb
sbb
and
pop
arpl
sub
divb
leave
xchg
in
xchg
mov
imul
add
mov
adc
mov
add
fcompl
call
rolb
es
in
ret
movsb
lods
daa
cld
mov
movsb
jne
pop
movsb
pusha
sub
jb
cmpsb
jp
adc
or
negl
das
call
sbb
or
iret
movsb
sbb
cmpsb
inc
lock
ljmp
mov
scas
shrl
cmpsl
adc
or
js
mov
xchg
scas
cltd
mov
dec
jae
inc
fsubrl
in
cld
push
sub
in
les
bound
aad
repz
fsubs
and
inc
mov
sub
pushf
push
pop
adc
mov
and
insl
sbb
in
or
scas
push
daa
mov
adc
loop
lea
scas
pusha
mov
mov
es
push
jo
or
push
sub
push
clc
or
lret
or
pusha
cmpl
push
clc
push
rorl
cli
fsubs
icebp
adc
mulb
inc
mov
jb
push
in
outsl
sub
iret
in
aam
pop
xchg
mov
into
lret
in
test
mov
xor
add
lds
inc
jb
mov
test
addr16
and
fstl
sbb
test
xlat
test
repnz
add
jmp
repnz
rorl
or
jbe
sbb
xchg
push
jo
cmp
not
xchg
sub
dec
inc
cmp
xorb
je
inc
jmp
push
pop
test
mov
lahf
mov
adc
and
cmpsb
push
movsb
lcall
aam
rcll
push
int3
mov
add
sub
jl
push
int
xor
pusha
jo
outsb
pop
sbb
mov
push
cmp
xor
ja
imul
jmp
in
mov
or
enter
or
loope
push
xchg
psubusb
pop
dec
iret
pushf
in
lahf
insb
nop
pop
mov
repz
adc
divb
jg
sbb
push
push
push
mov
sarl
push
fldenv
xchg
or
xchg
clc
mov
xchg
jge
xchg
js
fsubrl
clc
sub
std
jmp
cld
push
out
aad
sbb
dec
jno
jl
mov
inc
add
ficoms
dec
or
jmp
adc
lea
sub
loop
jbe
xor
dec
inc
fmul
ficoms
aaa
mov
mov
cld
adc
or
mov
rol
ret
cmp
mov
inc
mov
mov
cmpsb
std
loope
mov
add
fs
jmp
in
das
stos
jecxz
imul
fucom
mov
jne
arpl
mov
popa
and
adc
mov
lods
stos
test
fstp
mov
cltd
das
std
push
shlb
mov
outsl
xchg
cmp
call
loop
mov
add
inc
jb
jb
out
sahf
scas
shll
sbb
scas
inc
lretw
pop
lock
pop
aad
inc
mov
loopne
xchg
mov
icebp
leave
push
std
and
dec
leave
lret
and
mov
or
jp
push
loop
dec
adc
test
pop
stc
leave
sub
cld
clc
pop
sbb
sbb
imul
ret
and
sub
lock
pop
adcl
cmp
insb
push
jb
inc
in
push
xor
cld
imul
xchg
mov
mov
mov
xchg
mov
push
test
shlb
cmp
decl
pop
fistps
push
daa
dec
cwtl
jns
lahf
push
mov
repnz
xchg
or
jo
das
pop
adc
jp
daa
dec
push
ret
dec
fwait
adc
cmp
sub
lret
lods
rcrb
xchg
pushf
add
push
push
mov
lock
stos
daa
stos
add
pcmpgtb
loope
jmp
inc
repnz
and
fwait
and
test
push
pop
imul
inc
cli
or
xchg
jne
jno
push
outsl
and
sub
insl
jmp
jecxz
pop
mov
xchg
adcb
add
add
mov
mov
es
dec
ljmp
ffree
xorb
mov
test
fistps
out
and
cli
sbb
dec
dec
dec
dec
pop
lea
insl
inc
pop
adc
pop
push
insb
mov
inc
dec
mov
aaa
nop
hlt
pop
inc
roll
in
aaa
shl
pop
and
or
pop
mov
mov
aam
cmpsb
cmp
shll
ja
fimull
dec
pushf
daa
pop
and
adcb
cmp
fs
ja
mov
popf
jbe
mov
pop
lea
lret
jno
out
inc
fisubrs
and
popa
inc
mov
push
mov
icebp
pop
mov
jns
in
stc
clc
pop
leave
pop
sub
or
xor
dec
dec
mov
adc
popf
stos
sbb
jne
jne
in
mov
xchg
das
dec
inc
and
cmp
mov
scas
dec
mov
jnp
jg
xor
xchg
movsb
jge
enter
mov
ljmp
mov
dec
cmp
pop
test
out
inc
push
mulb
dec
out
addr16
cmp
loope
mov
push
addr16
pop
nop
and
and
aaa
jg
xor
fisttpll
jno
lret
fs
mov
imul
mov
cld
sub
add
or
jnp
aas
push
ljmp
jo
pop
sbb
and
movsb
xchg
jecxz
mov
inc
and
mov
fdivs
movsl
roll
jmp
mov
mov
sbb
vsqrtss
push
push
or
stos
inc
cmc
popa
xor
jmp
mov
stc
push
les
jae
push
push
outsb
sbb
std
scas
jo
mov
or
adc
adc
popf
xchg
nop
icebp
sti
out
xchg
push
addr16
hlt
dec
jo
sub
and
test
mov
inc
push
jp
pop
sub
mov
rclb
mov
sub
push
mov
cwtl
pop
clc
inc
insl
jo
icebp
xchg
jb
sbb
jb
movsl
jmp
gs
seta
aad
push
mov
mov
in
add
xor
push
in
sbb
in
pusha
or
jecxz
test
push
xchg
pop
jb
icebp
pop
test
add
xor
or
rclb
fldt
les
push
sahf
mov
daa
imul
loopne
iret
je
ret
scas
cli
add
int
or
push
lcall
andl
stc
cwtl
shll
stos
int3
loop
push
pop
pop
test
pop
push
andl
jl
dec
loop
and
pop
loope
aam
jne
cmc
add
jnp
adc
hlt
pop
cld
xchg
in
fwait
inc
push
xlat
mov
js
pop
cmp
or
mov
pusha
repz
orb
inc
mov
jnp
ja
jl
jl
flds
lret
mov
ja
sahf
stc
mov
test
aas
cmp
jb
pop
mov
sbb
dec
in
cli
imul
xor
shr
stc
dec
jmp
mov
cmp
inc
popf
out
loop
mov
cmp
out
gs
arpl
xchg
push
js
test
sub
test
mov
jo
in
sbb
out
movsb
insl
push
sub
add
mov
pop
pop
or
add
or
xor
mov
int
loop
lret
mov
cmp
push
and
lods
insl
mov
imul
cmpsb
inc
adc
ret
rorl
pusha
sarl
sub
shl
cltd
jp
xlat
mov
movsl
outsb
and
push
ret
insb
push
inc
std
fs
and
popa
dec
sti
push
mov
lods
pop
sub
sahf
add
cli
cmp
lods
xor
inc
mov
mov
and
cmp
inc
push
les
cwtl
jecxz
mov
jmp
and
lahf
push
sbb
sub
push
ds
aam
les
jmp
btc
mov
pop
ret
push
mov
aam
outsb
pop
insb
xchg
inc
lea
mov
sub
pop
inc
mov
aad
repnz
pop
mov
repnz
mov
pop
je
and
sub
cmp
in
pop
and
cs
jns
lret
sbb
dec
fisubrl
jne
daa
sti
insb
mov
mov
loopne
nop
dec
jo
inc
cltd
xchg
xchg
fdivrl
mov
gs
sub
lods
mov
pop
dec
mov
mov
push
pop
inc
push
sbb
mov
push
insl
mov
sbb
inc
inc
xchg
mov
lret
dec
movsb
lods
jnp
daa
les
pop
int3
ret
sbb
xlat
arpl
mov
lea
dec
or
imul
bound
cld
adc
push
jmp
pop
sub
pop
mov
sub
push
jno
pop
fs
pop
outsl
jbe
mov
loopne
addr16
xor
add
pop
and
mov
push
jb
mov
std
cltd
pop
jnp
std
push
sbb
mov
out
pop
cmc
ret
icebp
mov
cmpsb
rolb
push
or
dec
adc
cwtl
ret
test
dec
les
pushf
and
ss
fsts
ffree
mov
ja
mov
loop
adc
cs
nop
psubusb
ds
je
cltd
sub
cmp
popa
pop
sbb
xor
mov
pop
in
pusha
adc
dec
pushf
inc
in
pusha
mov
mov
lds
outsl
loope
inc
lahf
cmc
and
fbstp
adc
fld
xor
fstpt
sub
scas
lods
pushf
inc
fs
mov
pop
cld
cltd
xor
add
pop
or
inc
adc
lods
push
jg
pop
mov
dec
jne
das
fcmove
arpl
lds
cmp
dec
out
adc
scas
lcall
add
ret
xlat
repz
imul
je
xchg
rolb
fdiv
imull
xor
shll
fsubrp
or
cmc
mov
push
in
adc
inc
adc
test
fsubrs
xlat
mov
xorb
pushf
cmp
pop
test
cmp
pop
jbe
mov
inc
icebp
xchg
repnz
shll
sub
jae
out
addr16
cmpb
xor
cld
lret
mov
xor
shrb
popw
lods
popa
mov
add
xchg
loopne
gs
mov
sub
jnp
mov
inc
mov
in
fmull
clc
clc
pop
or
dec
into
push
xor
sub
int3
loopne
xchg
fdiv
aam
fiaddl
inc
iret
push
out
mov
adc
mov
dec
imul
and
popa
popa
nop
stos
mov
test
fiaddl
cwtl
rol
or
and
adc
jo
lcall
insl
lcall
add
outsl
xchg
xorb
imul
fistl
mov
lcall
js
jl
popa
imulb
jnp
add
aad
idivb
ret
movl
ds
fmull
lea
xor
jne
fmull
fdivrs
push
arpl
mov
into
mov
lds
pop
sti
adc
popf
and
mov
mov
jge
sbb
add
sub
shrb
scas
aaa
std
xchg
xorb
and
outsb
or
or
scas
cmp
or
in
push
mov
push
push
mov
cmc
ret
pop
dec
push
push
dec
inc
cs
jo
dec
lcall
dec
lods
jae
subb
inc
jo
push
arpl
mov
xchg
adc
pop
imul
aam
jns
test
scas
movaps
jbe
fnstenv
mov
sub
xchg
push
lahf
mov
add
loope
lret
sbb
adc
arpl
jl
dec
popf
outsb
cmp
das
sar
out
jg
inc
pop
scas
addr16
int
push
lods
sahf
push
loope
lcall
mov
sbb
xchg
cld
clc
sahf
sub
lcall
sbb
insb
xchg
movsb
fsts
adc
dec
sbb
fistpl
mov
xchg
pusha
pop
les
enter
jne
loopne
lcall
or
and
or
add
data16
xchg
pop
push
outsl
pushl
xchg
std
pop
iret
pop
dec
stos
mov
jo
mov
popa
js
cltd
in
fcmovnb
xor
out
cmp
gs
push
push
jmp
in
push
mov
mov
into
mov
movsl
jbe
cmp
inc
ja
xchg
pop
sub
cmpsl
imul
stos
push
inc
mov
mov
and
into
mov
inc
push
sti
in
cli
in
add
or
ja
repnz
int3
jecxz
mov
mov
xchg
ljmp
dec
and
sahf
jb
jnp
in
mov
inc
imul
jge
mov
push
fwait
xchg
cmc
scas
cmpsb
into
pop
js
adc
mov
ljmp
or
lock
mov
inc
push
fsubs
or
xor
lret
cld
push
push
or
mov
testw
mov
cmpsl
pop
int
mov
cmpps
pop
xchg
int3
jbe
xchg
pop
cmp
sbb
cmp
ljmp
cmpsl
jbe
jne
and
out
add
loopne
call
sub
mov
jb
ret
pop
mov
or
push
xor
xchg
ljmp
repz
movsl
ss
sbb
xor
inc
dec
addl
pop
and
ret
inc
aam
mov
fld
dec
scas
fildl
push
pop
mov
mov
cld
sub
xchg
pop
repnz
xlat
sbb
out
push
adc
rcr
adcb
push
gs
insl
push
lods
pop
sub
dec
push
jnp
xchg
mov
mull
pop
addr16
fbld
in
inc
push
andl
push
sub
dec
pop
cli
rorb
lock
les
pop
ret
divl
cltd
sub
cli
cmp
fadds
xchg
imul
sti
mov
ret
adc
xchg
fs
sbb
insb
cmpsl
daa
sahf
pop
leave
loop
add
rcll
cmc
add
rclb
fisttpl
cmp
imul
femms
xor
xor
jmp
mov
lret
mov
cmpsl
push
push
mov
sub
pop
lret
int
jle
iret
or
mov
test
ss
pop
pop
push
push
xchg
pop
dec
pusha
jns
ljmp
sbb
mov
iret
adc
xor
xor
leave
clc
sub
jno
iret
and
jg
call
mov
rolb
or
and
and
mov
ret
jmp
idiv
mov
imul
push
fcmovne
movsl
sbb
mov
sub
inc
inc
imul
aas
aad
fisubl
pop
movzwl
lea
jg
sub
std
mov
adc
xchg
stc
push
fbld
xchg
xor
push
pusha
sub
cmp
cwtl
xchg
ret
xchg
push
jg
das
popa
popa
add
xchg
imul
mov
add
sar
mov
repz
mov
push
out
or
int
pop
out
pop
cli
mov
fwait
mov
pop
cmpb
or
fistl
aad
sub
inc
pop
xchg
cmp
sub
sbb
push
sbb
mov
add
filds
adc
cwtl
iret
pop
xchg
jmp
pop
cmpsl
sbb
adc
mov
aad
ss
dec
gs
adcl
push
adc
std
xchg
pop
and
mov
jl
popa
lea
jge
sub
outsl
jne
cmpsl
lds
push
jae
dec
jle
xchg
ja
xor
xchg
pop
nop
fs
pop
cmp
adc
sbb
mov
sbb
jmp
mov
loope
push
cmp
jl
add
xchg
les
lea
mov
jno
rcrl
testl
cld
lcall
mov
mov
daa
dec
ljmp
xor
and
clc
pop
sbb
dec
push
add
fbstp
popf
movsl
cmpsb
test
dec
jmp
mov
sbb
sub
mov
ret
and
mov
xlat
addr16
mov
lock
mov
fmuls
mov
insl
les
imul
or
or
pop
outsb
imul
mov
pop
push
xchg
jbe
das
and
enter
orb
dec
sahf
loop
adc
jecxz
filds
rcll
outsb
dec
add
fsubrl
bound
lds
jmp
and
mov
or
repnz
std
clc
fucom
and
scas
jb
xor
jl
mov
push
in
cli
mov
push
ljmp
loop
mov
pop
and
int
movsl
ret
xor
lds
cmc
jmp
stos
xor
inc
and
fucomi
mov
inc
push
jno
push
lgs
in
lea
cmp
adc
jbe
mov
loop
je
xchg
aam
test
pop
lret
mov
inc
lods
mov
and
sar
jno
dec
push
lods
lahf
stos
repnz
fidivs
call
xchg
xchg
jmp
imul
mov
out
pushf
clc
add
jae
xlat
leave
or
sub
mov
or
popf
mov
xchg
sub
xchg
adc
pop
xchg
fwait
jmp
or
pop
movsl
jnp
sahf
push
mov
popa
ret
cwtl
mov
ds
rolb
fmuls
scas
xchg
mov
dec
mov
sub
ficoml
clc
push
jbe
sbb
mov
mov
ret
fs
xorl
jnp
lcall
fildl
rcrb
mov
cmp
jecxz
mov
sub
stc
fwait
jb
mov
mov
pop
aas
outsl
jb
mov
fdivr
mov
sub
fsubrp
mov
cmp
addr16
push
or
mov
mov
into
fstps
aas
pop
cmpsl
mov
inc
insl
mov
enter
js
fwait
push
push
xor
cmc
aam
push
mov
cmp
ret
out
call
adc
mov
outsl
push
sub
rcrl
lods
or
sbb
push
push
jle
mov
invd
fcompl
arpl
fildll
push
jb
test
test
and
mov
dec
jl
cmp
rorl
adc
bnd
jbe
pop
arpl
dec
sub
in
pop
mov
or
push
xchg
cmp
or
inc
dec
adc
mov
xor
negb
rcll
cs
test
push
sbb
leave
push
je
and
xchg
xor
jo
or
mov
icebp
je
dec
push
shlb
lret
loop
fs
lds
pop
test
inc
inc
leave
jo
sahf
mov
dec
das
mov
pop
cmpsb
adc
int
jle
push
xchg
decb
mov
test
cmp
and
mov
dec
and
and
push
outsb
pop
xchg
mov
fldl
fwait
adc
pop
xchg
jl
popf
sub
repz
pop
retw
jge
mov
or
sbb
or
enter
adc
mov
mov
and
push
std
nop
sub
loop
jg
jl
fs
lods
sti
jns
or
xchg
xchg
out
mov
out
jge
lock
mov
jnp
addr16
push
out
mov
imul
and
gs
out
mov
pusha
data16
xchg
and
xchg
repnz
sahf
sbb
stc
test
dec
filds
loope
cmp
add
mov
jl
pop
mov
mov
dec
inc
in
rcl
das
fstpl
stos
ret
mov
in
push
gs
fcoms
push
mov
inc
dec
pop
out
popf
sahf
push
das
nop
inc
lcall
xchg
popa
dec
ja
test
and
in
outsb
bound
scas
xor
aam
inc
mov
rcr
add
pushl
out
cmp
fdivs
add
cmp
lods
outsb
push
xor
inc
movsb
mov
in
xor
pop
sub
dec
dec
movsl
gs
and
cwtl
imulb
setne
xchg
jle
cmc
xchg
dec
clc
xchg
mov
scas
mov
jns
push
fucomi
cmpsl
frstor
bound
dec
testb
mov
or
clc
out
int3
or
popa
cltd
daa
xor
mov
mov
lock
jns
inc
inc
xlat
repz
cs
mov
fwait
jmp
and
push
adc
dec
pop
mov
mov
setae
xchg
xchg
xchg
or
mov
rclb
and
das
jne
push
loop
xchg
sbb
fcmovbe
mov
enter
jg
push
leave
mov
push
test
mov
out
scas
out
add
lcall
stos
add
ror
pop
jmp
mov
test
lods
or
push
push
cmp
out
cmc
mov
dec
dec
jnp
adc
sub
jnp
push
adc
movsl
jp
mov
adc
dec
xchg
or
sub
shll
mov
sarb
je
xchg
mov
mov
mov
movsl
jle
test
mov
xchg
push
adc
and
std
push
sbb
call
lret
xlat
inc
xchg
shr
pushf
ret
cmpsl
sub
ret
dec
shlb
push
in
arpl
mov
and
inc
insl
out
imul
jae
xchg
cmp
les
jmpw
lock
mov
sbb
popf
dec
data16
mov
sub
add
xchg
dec
pop
push
cmp
sub
pusha
aas
mov
std
lahf
test
repz
sub
and
or
xor
jg
fidivl
mov
push
fcmovnbe
popf
push
inc
mov
push
xor
jle
adc
push
xchg
and
mov
std
sub
push
push
lret
cmp
mov
jecxz
cmpsl
insb
jg
mov
arpl
inc
jle
or
mov
cmc
movsl
addr16
in
imul
xchg
repnz
mov
xchg
push
repnz
lahf
xchg
push
push
lods
cli
subl
adc
mov
inc
jnp
push
cmp
mov
mov
push
add
fwait
sub
loope
xchg
mov
scas
jb
fiadds
ret
nop
sub
jmp
mov
fwait
sub
dec
or
lods
in
dec
jl
or
arpl
in
mov
xchg
push
jp
outsl
hlt
jbe
das
and
sub
mov
shlb
xor
xor
sahf
add
mov
or
sub
dec
dec
mov
adc
daa
pusha
mov
push
xchg
in
mov
adc
imul
lds
sub
xorl
lock
lods
xor
out
mov
add
inc
dec
xchg
js
or
jg
insl
imul
mov
lock
cmp
inc
fcomps
jg
sub
mov
jbe
adc
mov
push
int
inc
mov
add
push
jbe
out
and
int3
sbbl
les
jg
push
sub
inc
push
xor
sub
hlt
mov
or
je
shlb
xor
jl
test
cmp
xchg
mov
add
and
insb
call
jmp
das
xlat
data16
cmc
dec
jecxz
dec
out
jmp
subl
addr16
pop
addr16
scas
fs
in
or
scas
or
dec
pop
xchg
jne
pop
mov
xor
lods
jb
mov
inc
fs
test
push
cmp
sub
dec
sub
popf
sti
xchg
negl
je
mov
add
data16
movsl
sbb
shr
push
not
in
xor
fwait
sbb
test
push
sbb
lcall
inc
mov
mov
lret
mov
sbb
rcl
sub
test
std
sub
hlt
mov
pushl
gs
mov
and
adc
test
js
cmc
inc
jl
pop
mov
or
mov
mov
mov
ret
cmp
pop
jne
add
insl
xchg
pop
mov
pop
jns
mov
mov
dec
add
dec
push
clc
pop
gs
or
fwait
push
dec
sbb
pop
lret
mov
mov
xchg
jo
scas
popa
jae
push
jge
in
mov
cwtl
outsb
push
cltd
push
cmovnp
mov
xor
and
loope
dec
lods
ror
adc
mov
mov
test
dec
inc
mov
xchg
jecxz
pushf
mov
mov
dec
or
push
push
in
inc
and
insb
jg
mov
jbe
insb
add
sub
xchg
ljmp
jo,pt
and
shlb
cmp
mov
je
sbb
addr16
pop
xor
mov
seta
ss
in
xor
clc
int
mov
inc
jo
dec
aas
dec
nop
push
push
or
add
cltd
ss
jge
popf
test
rcll
inc
sub
popa
imull
and
mov
sbb
xor
mov
out
test
xlat
mov
out
sbb
mov
xchg
pop
hlt
fdivp
and
mov
push
xchg
add
jns
call
lahf
fsts
fsubrp
mov
pop
xor
and
outsb
nop
ret
or
fwait
cmp
cmp
in
inc
jne
jecxz
leave
cmp
test
jno
nop
and
daa
in
sub
inc
xchg
push
lahf
push
push
dec
sbb
dec
add
in
aad
or
pop
push
jbe
jns
stc
fcmovne
adc
test
cmp
cld
inc
sub
and
xorb
jecxz
int
imul
xchg
and
aam
dec
jno
fxch
hlt
sbb
pop
sbb
adc
jno
int3
inc
mov
ds
mov
jmp
fwait
in
mov
sti
ds
jb
addr16
es
jle
lret
inc
xor
push
mov
cmpsl
xchg
cs
pusha
mov
pushf
pavgb
push
orl
xor
push
xlat
mov
lock
repz
mov
lods
dec
jb
mov
arpl
das
clc
popa
or
sub
pusha
push
mov
adc
addr16
insb
insb
push
popf
mov
clc
push
popa
cli
xor
decb
xchg
cmp
push
mov
xchg
push
pop
int3
outsl
jmp
sub
jmp
lods
inc
mov
mov
xchg
xlat
inc
jl
sub
std
jg
mov
mov
pop
repnz
xchg
mov
insb
add
sarb
sub
cld
js
pop
push
ja
mov
movsl
shlb
mov
or
xor
sbbb
lods
sbb
cltd
push
xor
mov
cs
bound
imul
ja
sbb
pop
jae
insb
sbb
outsb
ljmp
sub
mov
and
xchg
in
add
icebp
adc
and
mov
lods
insl
mov
jbe
pop
xchg
xchg
dec
cmpl
into
push
ljmp
push
cli
fsubr
test
inc
pop
mov
pop
dec
adcl
pop
cmpb
add
xchg
cmp
adc
cwtl
mov
cli
xor
pop
push
notb
nop
or
mov
xlat
inc
aaa
lea
clc
xchg
lods
pop
mov
xlat
push
fmull
stc
adc
repnz
stos
cld
icebp
add
lods
sbb
scas
push
sbb
mov
cmp
push
dec
loop
aad
dec
inc
xchg
aam
mov
sbb
add
adc
and
mov
outsl
shr
cmp
daa
aas
push
stc
pop
lods
xor
dec
pusha
bound
aad
xor
ss
pop
jns
xor
adc
adc
rclb
xor
adc
lahf
sahf
roll
xor
add
or
xchg
mov
data16
sti
mov
adcb
pop
xor
arpl
jle
lret
cmp
mov
in
sub
mov
repz
push
popa
add
cmpsl
xor
mov
push
insl
dec
dec
loope
das
sub
lods
push
inc
pop
int3
out
adc
inc
inc
fisttps
add
insl
xchg
dec
movsb
or
pop
outsb
or
push
lret
jg
popf
test
outsb
popa
cmpsb
mov
cmp
jecxz
rclb
jnp
decl
dec
shl
jne
sti
outsl
imul
pop
or
cmp
add
xor
mov
push
cmpsb
adc
sbb
push
sub
shrb
das
sub
dec
movsl
jno
or
into
rclb
lret
movsl
mov
add
mov
mov
dec
clc
fcoms
rorb
pop
and
sbb
enter
jg
cmc
mov
push
ja
scas
icebp
jl
mov
loope
xorb
sub
push
mov
in
nop
pusha
call
and
jge
sti
sub
push
xchg
mov
cmpsb
enter
mov
lret
xor
stos
or
pop
outsl
loop
sub
jmp
call
push
pusha
and
add
in
adc
sub
cmpsl
mov
leave
in
fwait
test
mov
ret
cmpsb
push
cli
mov
or
inc
icebp
dec
inc
insl
jno
lcall
push
sti
cmp
or
xchg
jns
testl
mov
cmp
mov
mov
jp
or
into
jbe
jp
push
ljmp
rcll
mov
in
inc
negb
mov
mov
dec
int3
std
cmpsb
jle
jbe
xchg
mov
jecxz
sbb
icebp
test
das
testl
pop
add
sbb
cmp
scas
adc
mov
dec
in
pop
dec
dec
pop
inc
add
popf
frstor
js
xchg
call
inc
and
insl
daa
out
cmp
mov
mov
push
mov
jg
imul
ds
adc
rcrl
mov
addb
icebp
cmpb
sahf
dec
dec
add
cmp
mov
in
scas
mov
xor
stos
jle
fxch
js
xchg
xlat
icebp
loope
xor
push
dec
sarb
fimuls
loop
in
hlt
push
xchg
sbb
push
xchg
cmp
in
push
push
fldcw
fwait
xor
xorb
fidivrl
in
adc
cs
mov
dec
loop
xchg
sub
dec
push
jmp
inc
in
lret
rclb
lcall
mov
scas
int
rclb
sbb
dec
dec
out
lds
mov
cmp
enter
cmp
sbb
and
jp
push
mov
sbb
pop
bnd
lret
sbb
test
xor
jge
out
shll
and
xchg
cld
mov
adc
jge
xor
mov
into
out
mov
jle
leave
add
jp
loop
or
imul
pop
ret
jbe
and
inc
sbb
xchg
loop
test
sub
cmp
sub
cld
xor
dec
sbb
gs
cmp
lds
outsb
add
jb
jp
jns
adc
jg
je
jo
fldcw
subb
jbe
in
or
pop
cld
mov
jp
mov
rcrb
outsl
imul
and
roll
mov
mov
xor
sub
mov
lock
mov
push
xchg
mov
sbb
mov
sarb
int3
test
rolb
lods
lock
std
pop
xor
inc
pushf
mov
rolb
stos
and
mov
aaa
mov
or
scas
inc
or
push
loopne
push
rclb
mov
es
jo
add
xchg
mov
push
stos
add
lds
xor
push
aas
or
mov
daa
cmp
inc
push
cli
leave
jmp
mov
dec
sub
scas
mov
cmp
hlt
mov
fidivrs
sub
mov
leave
pop
xchg
addb
cld
mov
jp
inc
pushf
fcomps
cmc
mov
test
outsb
shll
arpl
test
xor
clc
and
loopne
shlb
fnsave
jmp
mov
js
lcall
shll
test
outsl
call
test
cmpsl
xchg
xor
add
cmc
sub
jne
sub
cmc
cmpsb
jns
pop
jnp
cmp
sub
xor
jle
mov
push
sub
mov
movsb
mov
orb
or
repnz
inc
imul
hlt
in
repnz
mov
push
leave
sub
or
mov
and
cltd
push
sub
mov
mov
movsl
and
xchg
lea
or
xor
adc
dec
js
fs
mov
outsb
add
xchg
and
push
data16
fadds
aas
mov
lcall
sbb
insb
int3
add
out
or
sub
out
or
inc
jle
movsb
sub
int
insl
jbe
pop
mov
scas
enter
gs
adc
xor
sub
xor
pop
movsl
cs
jbe
mov
pop
mov
mov
movl
je
icebp
pop
mov
push
push
dec
rorb
sti
sub
mov
inc
pop
pop
inc
ds
xchg
in
lret
and
out
sbb
repnz
icebp
jmp
outsb
cwtl
sti
js
jns
test
jg
xor
or
and
dec
fisttpl
popf
or
jns
jge
test
lods
out
mov
adc
enter
pop
jno
xor
adc
or
pop
mov
push
sar
out
int
gs
fcoms
adc
popa
jo
int3
in
and
pop
es
xor
popa
jp
insl
mov
sti
shr
popa
inc
arpl
and
dec
repnz
fs
xchg
pop
and
cmp
pop
jmp
mov
jecxz
mov
mov
mov
push
dec
mov
adc
mov
ja
adc
ret
pushf
pop
add
pop
popf
lock
fisttpll
les
sbb
lret
mov
mov
cmc
jle
mov
jecxz
aam
pop
lock
in
ret
inc
or
jno
xchg
add
xchg
xor
push
jmp
add
js
mov
aaa
mov
push
push
cwtl
dec
xlat
jo
inc
and
test
push
ljmp
lea
inc
push
mov
xchg
dec
jge
pusha
fildl
aaa
xchg
int3
pop
mov
rcll
push
sub
aad
jns
cmp
mov
fadds
and
rol
mov
rcrl
mov
js
ss
aas
lods
in
jns
jo
imul
sbbl
repz
sub
insb
jmp
cwtl
pop
inc
and
fwait
xchg
xor
jle
cmpsb
xchg
test
js
fstpt
sub
push
inc
adc
jnp
data16
sbb
adc
jbe
pop
mov
sub
repnz
pop
cmp
and
outsl
rclb
or
mov
lods
sbbl
je
or
imul
sub
arpl
and
nop
negb
fldenv
push
mov
xor
daa
insl
xor
inc
clc
xchg
fwait
xor
mov
sbb
inc
cld
sub
jg
loopne
and
loop
test
adc
add
inc
mov
sti
dec
or
ljmp
pop
cmp
div
subl
jg
inc
out
jne
adc
pushf
dec
add
xor
dec
imul
dec
mov
pop
jge
ss
adc
call
inc
cmp
add
pop
mov
aas
inc
sub
mov
mov
fcompl
mov
test
mov
aaa
xchg
incb
enter
addl
or
popf
and
adc
cmpsl
lds
sbb
push
add
xchg
mov
loop
pop
and
lds
push
ficomps
ror
aaa
or
sbb
imull
jns
jmp
fucom
out
inc
add
xor
cmpsl
lahf
lret
imul
enter
dec
xor
jmp
cmpsb
push
fistpl
imul
or
xchg
jnp
lock
sahf
rorl
xorb
mov
or
int
mov
and
nop
mov
pop
sub
and
add
add
xor
adc
and
aaa
xchg
cltd
sbb
and
call
ja
data16
cmpl
movsb
mov
sti
sbb
and
mov
mov
xchg
mov
inc
test
xor
aaa
xlat
mov
iret
or
sub
mov
inc
fwait
mov
xchg
or
cmp
xor
shll
shlb
mov
andb
mov
sub
imul
jae
xor
movsl
adc
add
loop
cli
dec
sahf
lret
inc
adc
dec
add
popf
outsb
sbb
subl
lahf
adcb
add
sub
loop
xchg
mov
pop
es
xlat
push
lods
jle
loop
aaa
cmc
jecxz
push
movb
jae
fidivl
dec
mov
jg
aas
dec
adc
icebp
and
subb
fldl
jmp
icebp
or
cli
repz
jo
icebp
ficompl
mov
or
jmp
js
push
mov
lret
movsb
inc
jmp
insl
jno
xlat
cmp
add
outsl
and
dec
lret
and
pushf
ror
adc
dec
in
loopne
xchg
test
js
push
mov
repnz
outsb
mov
sub
mov
cmpl
sti
mov
inc
mov
dec
adc
inc
pop
cltd
jb
pop
jbe
sub
jbe
dec
pop
lcall
in
pop
mov
jg
jecxz
in
out
cmp
pushf
adc
mov
cs
test
add
movsb
dec
sub
xchg
xchg
fdivr
popf
ja
xchg
jb
lock
into
cmpsl
mov
je
andb
and
enter
mov
jne
sub
das
adc
outsb
lods
pop
cmp
mov
xor
jmp
mov
lahf
test
dec
add
sub
addr16
int3
out
xchg
xor
push
nop
out
mov
mov
xchg
fiadds
outsb
mov
cmp
fadd
inc
adc
inc
sti
adc
adc
mov
in
lods
sti
std
add
popf
sahf
xor
test
in
movsb
sahf
addb
pop
lcall
mov
in
jo
cmp
ret
mov
repnz
mov
es
test
add
mov
push
xor
int
mov
lahf
push
adc
adc
sahf
push
and
dec
xchg
bound
jns
jo
mov
inc
xlat
fwait
movsl
pop
jbe
sahf
outsb
ret
inc
loope
jecxz
fstpt
rcl
jle
mov
fs
jns
jecxz,pn
push
mov
out
sub
dec
pop
cwtl
push
sbb
xchg
mov
jb
rcr
adc
mov
ss
dec
xlat
mov
ja
add
cmp
cmpsb
in
div
dec
fistps
fwait
mov
ljmp
mov
push
adc
mov
inc
imul
popa
cld
movsl
call
stc
cltd
popf
ljmp
push
test
addr16
enter
push
pop
mov
push
inc
mov
imul
es
scas
data16
gs
and
dec
cmp
and
fnstcw
inc
adc
push
into
add
into
xor
insl
mov
in
mov
fcmovb
sbb
mov
popa
or
rorl
incb
aas
jns
xchg
dec
icebp
jl
jo
xchg
add
mov
mov
insl
cwtl
jp
jp
or
sub
movsb
ret
enter
push
movsl
divl
mov
xchg
enter
mov
fs
sbb
push
cmp
sub
sbb
mov
xor
mov
mov
jp
je
arpl
and
inc
mov
aaa
aad
stos
or
in
and
dec
loope
adc
push
mov
inc
cltd
push
pop
xchg
addl
xchg
jnp
push
pop
inc
test
adc
xor
outsl
sub
mov
xor
aaa
push
sbb
mov
je
bound
faddl
adc
mov
cmp
adc
xchg
or
dec
icebp
xor
insl
xor
xor
mov
jns
xchg
dec
mov
or
stc
jb
lahf
xchg
shr
inc
iret
je
inc
cwtl
push
shr
int3
pop
imul
into
arpl
icebp
loop
jmp
pop
addb
cwtl
add
fstl
or
inc
xchg
sbb
cmpsb
jge
push
pop
sbb
stos
pop
xor
sbb
dec
xor
and
das
and
ret
repz
xor
std
push
into
xor
xlat
lcall
leave
xor
stos
dec
mov
movsl
inc
nop
jecxz
ljmp
popa
rclb
add
dec
hlt
xor
xchg
adc
lcall
repnz
push
stos
dec
dec
mov
mov
jbe
dec
mov
rolb
adc
mov
jo
adc
in
jecxz
cmp
push
std
or
push
add
pop
mov
push
and
xchg
jecxz
out
scas
and
out
push
sbb
mov
push
pop
jmp
inc
loop
sbbb
dec
add
leave
and
jb
popa
insb
xchg
ret
pop
mov
push
xor
daa
sbb
sbb
xor
and
sub
lds
in
lods
or
jp
pop
push
push
xor
jns
stos
cmp
cmp
imulb
xor
inc
and
repz
adc
add
mov
outsl
inc
xor
jmp
jnp
nop
xchg
cmpsb
xorb
jae
xchg
pop
dec
subb
mov
enter
ja
mov
in
pusha
dec
xchg
imul
ret
cs
lods
dec
bound
and
mov
push
inc
jo
mov
add
cmp
mov
loopne
sbb
lock
add
xor
jae
aaa
add
icebp
dec
xlat
add
dec
mov
loope
mov
das
cwtl
xchg
mov
dec
movl
push
clc
add
xor
popf
sbb
scas
pop
cli
inc
mov
xor
pop
sub
push
adc
xchg
xchg
push
js
pop
jb
outsl
rcll
push
or
sbb
fsts
xor
inc
adc
mov
add
pop
addr16
jmp
xchg
inc
and
or
sbb
out
test
sbb
inc
cmp
push
call
mov
stos
inc
sbb
pop
push
adc
inc
lds
fidivl
hlt
mov
sbb
out
movsl
fs
and
int3
in
mov
mov
inc
sub
aad
stos
aad
scas
sub
pop
sbb
repnz
dec
mov
add
mov
cmp
cmpl
jno
and
cltd
xor
loopne
outsb
out
pop
insb
adc
dec
lods
jno
pop
cmc
mov
xlat
push
push
sbb
rol
push
pop
pop
push
mov
push
insl
pop
insl
mov
sbb
inc
roll
add
mov
mov
push
push
mov
pusha
leave
lds
hlt
inc
add
incb
enter
mov
insl
test
sar
popf
pop
nop
inc
xorb
sub
push
fwait
lods
cmp
or
push
jp
xchg
bound
iret
rclb
xstore-rng
cmpsl
or
ss
lcall
bound
xlat
lahf
les
sub
ja
cmpsb
cmpsb
push
cmpb
inc
cs
pop
addl
push
clc
sbb
jno
mov
and
pop
out
lahf
add
inc
enter
rcrb
push
lret
jo
lods
mov
mov
inc
lret
cltd
push
fisubl
negb
jns
push
xchg
push
popf
cmp
insb
hlt
mov
dec
mov
scas
out
in
push
jg
aaa
pop
pop
cmp
add
lahf
mov
hlt
decl
and
jge
roll
jae
inc
dec
sub
sbb
and
jle
pop
mov
mov
leave
mov
jecxz
clc
addr16
add
sbb
dec
mov
ljmp
add
es
into
lock
popa
popf
or
and
or
ret
lcall
int3
and
stc
mov
lods
or
mov
mov
lock
shlb
stc
pop
pop
mov
mov
stc
das
shlb
addl
xor
das
ret
mov
test
cli
fimull
or
mov
in
scas
mov
jb
inc
mov
cld
cmp
mov
mov
mov
in
mov
cmp
cmpb
cmp
lods
loope
aad
sahf
inc
in
imul
or
mov
shr
add
dec
mov
rcll
push
cmpb
xchg
shll
aas
xchg
lea
xlat
cmpsb
je
push
push
dec
mov
test
mov
out
repnz
test
xor
mov
and
push
mov
dec
add
test
xchg
add
inc
ret
mov
adcb
push
inc
fdivrp
iret
pavgw
cmp
sbb
hlt
pop
mov
das
cmc
iret
mov
hlt
push
inc
jb
adc
out
inc
jg
outsl
mov
jno
lcall
sbb
mov
or
ret
mov
and
test
stos
fcomi
lahf
lcall
jg
cmp
movsl
jb
jno
je
and
int
cmpl
mov
int3
leave
adc
icebp
pushf
out
ret
xchg
adc
sbb
mov
std
cld
mov
andl
je
jb
push
imul
mov
gs
and
xor
cmpb
mov
pushl
seto
insb
hlt
mov
dec
mov
push
push
pop
jl
cmp
dec
dec
mov
ret
gs
sbb
cmp
xor
mov
mov
mov
negb
movsb
iret
shrl
nop
ljmp
stos
enter
push
cmp
shll
pop
push
and
jbe
or
loopne
pusha
dec
repnz
stos
xor
mov
test
popa
add
lds
lods
xlat
out
aaa
fsubl
popa
dec
test
push
lods
cmp
and
adc
xor
xchg
push
and
jae
sbb
es
scas
mov
xchg
inc
popa
testb
xchg
imul
or
popa
pop
cmp
movsl
daa
inc
repz
push
jb
cmc
mov
jl
fsubl
test
push
xlat
pushf
aas
lods
sub
orl
xor
mov
sub
jno
pop
aad
insl
push
xchg
shrb
cmp
imul
jmp
xor
dec
xchg
mov
filds
xor
push
ljmp
cli
loop
dec
bound
cld
ljmp
sub
inc
fstps
cmp
ja
cmp
mov
lods
mov
add
repz
cmp
mov
cmpb
xor
das
in
and
jg
cmc
ret
push
inc
xlat
arpl
cmp
shrb
pop
aad
icebp
inc
xor
inc
mov
mov
sbb
jge
jge,pt
jo
sub
and
adc
xchg
sub
mov
mov
pop
add
insl
std
popf
sub
rcl
jb
or
mov
xchg
jp
mov
push
xor
dec
xor
imulb
sbb
sbb
xor
xor
and
insb
imul
xchg
add
xchg
xor
cmp
mov
repz
stos
loop
mov
jno
mov
add
out
sbb
add
or
mov
sub
dec
push
outsb
ret
dec
mov
notl
mov
adc
jae
dec
xor
pusha
mov
orb
sub
sbb
pop
cmp
roll
mov
lock
mov
sub
ret
fsubr
pop
cli
scas
xchg
jp
dec
push
or
loop
inc
lods
mov
mov
aam
fildl
dec
rolb
in
adc
mov
push
fiaddl
lahf
mov
cmp
sub
outsb
jb
mov
cmpsb
sub
and
aaa
cs
out
gs
push
outsl
mov
leave
inc
or
bound
mov
and
imul
lcall
sub
dec
or
int3
and
test
scas
subb
and
pop
cli
ret
stc
adc
pop
cld
js
test
arpl
jns
iret
std
out
addr16
and
push
lock
and
sub
ror
add
inc
xchg
popa
xchg
fs
mov
xchg
push
roll
iret
test
mov
pop
popf
lock
cld
push
push
pop
pusha
jecxz
jp
xor
lds
jbe
dec
pusha
lds
jns
xchg
mov
testb
shrb
testl
push
test
jmp
popf
aam
mov
popa
addr16
mov
xchg
dec
shrl
mov
test
mov
xor
sbb
js
push
in
mov
testb
hlt
hlt
push
ret
cmovae
lcall
in
mov
xor
xorl
in
test
outsl
pop
imul
xchg
xor
xchg
clc
dec
sbb
push
cmp
test
lcall
cs
sarb
dec
aam
pop
lock
jno
iret
adc
jge
stos
mov
and
jl
stc
and
mov
into
pop
mov
outsb
daa
dec
sub
add
lret
sbb
shlb
shl
push
and
cmp
rolb
clc
jns
cli
mov
cmp
pop
push
dec
sbb
xchg
pop
in
out
push
pop
or
scas
adc
inc
and
mov
or
cmc
jmp
es
xchg
outsb
in
test
mov
mov
enter
out
mov
push
pop
out
mov
rcpps
stos
or
sub
xchg
and
mull
sbbl
sahf
add
repz
daa
sbb
cmp
fsubrs
mov
outsb
adc
sbb
shlb
in
dec
pop
mov
jns
cmc
fmulp
sbb
sti
pop
insl
lds
jbe
ljmp
push
sbb
lahf
leave
test
mov
xchg
fs
cmove
mov
jp
aam
add
dec
stc
cmpsb
push
mov
sbb
push
pop
or
shlb
adc
ret
and
cmp
aaa
xor
lahf
subb
add
lea
out
int
scas
add
dec
fs
lock
inc
pusha
jb
ret
gs
cmc
push
cmp
ss
scas
incl
mov
test
sub
jge
fisttps
out
out
lret
icebp
dec
iret
fcomps
sbb
scas
xchg
mov
sub
inc
sbb
mov
daa
lods
fdivs
int
jg
jl
sub
cld
popa
mov
or
shrl
mov
sub
mov
testl
inc
push
enter
jle
out
adc
fldl
fwait
pop
lock
loopne
sub
fwait
pop
and
push
cwtl
pop
add
push
andb
rcrl
and
add
inc
cmc
sub
cltd
jmp
pop
cmc
daa
cmp
mov
sahf
cmp
fwait
sub
hlt
mov
in
cmp
cmpl
and
jne
xchg
stos
pop
popa
lret
les
jp
test
ljmp
mov
mov
test
sub
dec
lahf
ljmp
lret
mov
sub
xchg
xor
jne
dec
jne
jo
xchg
dec
cmpb
fiaddl
push
jle
xlat
aam
scas
mov
lret
fnstcw
lret
sub
cmp
fisttpll
sbb
scas
out
xorb
jge
outsb
and
mov
and
dec
rorb
aas
loop
pusha
dec
bound
fcomi
push
cltd
lods
push
jle
scas
push
xchg
insb
insb
add
lahf
add
xchg
or
repz
adc
movsl
fisubl
push
test
clc
cmp
sub
and
push
dec
mov
xchg
subb
and
xchg
in
sub
das
jl
cmp
dec
jbe
mov
cmp
or
fdivr
dec
add
sahf
lret
mov
sbb
mov
or
xor
mov
and
mov
movsb
imul
std
mov
lret
xor
add
mov
adc
inc
xchg
fsub
jecxz
dec
pop
push
clc
cmpsb
dec
inc
and
adc
xchg
push
test
cmp
daa
adc
dec
mov
rolb
mov
in
push
leave
rolb
iret
iret
aas
pop
movsb
popf
out
add
xchg
fistpl
es
jae
adc
or
insb
out
sbb
rcrl
mov
es
mov
push
aas
adc
scas
and
sub
mov
add
rcrb
movsb
or
or
rorb
outsb
inc
inc
int
nop
jnp
xchg
enter
outsb
inc
ficomps
push
dec
and
xor
mov
fdivrs
je
pushf
aas
addl
ret
inc
and
out
sbb
pushf
mov
ret
hlt
push
shll
xlat
iret
lods
das
repz
xor
lea
dec
hlt
icebp
mov
out
mov
add
or
into
push
int3
aad
pushf
mov
xor
mov
fbstp
mov
cmp
sbb
dec
popf
mov
mov
cli
pop
mov
dec
test
sti
aaa
sub
ret
sbb
sub
lahf
sti
in
mov
test
inc
jnp
hlt
dec
cmp
inc
sub
sub
cmp
sub
adc
andb
leave
clc
push
sub
into
repnz
or
or
push
add
cmp
orl
jle
dec
sbb
cmp
push
packuswb
jge
sbbl
iret
outsl
jl
xchg
cmpsl
cmc
loopne
rorb
test
addb
dec
pop
dec
mov
cmp
push
sub
and
dec
xchg
test
mov
push
aad
xlat
pusha
shll
shll
nop
lods
rclb
jb
and
ret
jge
aas
mov
inc
push
rorl
xor
scas
popf
dec
xchg
iret
repnz
pusha
cwtl
inc
and
movl
in
jns
dec
xchg
mov
cmp
pusha
stos
into
jno
shr
sbb
mov
mov
ss
fwait
outsb
pop
push
aam
mov
adc
mov
frstor
andl
cmp
pop
push
adc
mov
in
outsb
mov
pushf
lds
rcrl
pop
adc
adc
rcrl
fwait
or
insb
jl
test
fcom
cmpsb
ljmp
mov
pop
mov
jae
push
cmp
negb
ljmp
dec
mov
mov
push
pop
and
jmp
or
loope
pusha
mov
mov
xor
daa
add
push
pop
push
into
xcrypt-cbc
cmpsl
push
loop
leave
cli
movsb
addr16
js
mov
out
lret
mov
shl
mov
imul
insl
mov
push
sub
movsl
jno
repz
test
in
xchg
pop
xor
push
jno
xor
cmp
sub
popf
in
cmp
filds
sbb
mov
jae
pop
mov
push
call
mov
xlat
and
adc
aas
add
cmp
stc
pop
fistps
ret
mov
jne
mov
insb
and
repnz
in
xor
inc
das
fsubl
daa
and
leavew
xor
push
adc
add
bound
inc
sub
and
pushf
test
addb
lcall
ds
inc
aaa
ss
les
mov
in
xchg
jp
jbe
rcrb
test
pop
std
aaa
clc
or
dec
stos
and
mov
push
ret
out
dec
in
mov
leave
arpl
gs
push
xchg
xchg
aas
pop
sub
pop
sbb
and
cmp
stos
inc
and
mov
cmp
push
jmp
lcall
es
addl
shl
push
ljmp
hlt
out
dec
mov
pop
out
add
sbb
sar
fcomp
mov
jnp
imul
shlb
flds
push
jb
sub
mov
dec
xchg
sbb
aas
or
pop
push
adc
inc
fsubs
pusha
lret
mov
pop
outsb
inc
push
and
adc
sbb
jge
mov
lea
test
cli
adc
lahf
stc
inc
divb
dec
add
pop
cltd
or
into
scas
sub
ljmp
negl
push
pop
jno
sbb
mov
in
dec
push
or
mov
sbb
xor
push
sub
xchg
clc
mov
lret
inc
sub
jmp
aaa
dec
mov
xchg
mov
es
xchg
js
fwait
ret
iret
mov
mov
rcll
dec
mov
mov
pusha
das
pop
mov
sub
das
xchg
popa
fstps
jle
pop
push
dec
jmp
call
inc
call
scas
pop
pusha
jmp
fwait
mov
sahf
adc
repz
sub
incb
out
adc
push
mov
shrl
push
jne
jno
jo
or
mov
mov
shll
sbb
mov
push
and
jecxz
mov
push
mov
mov
nop
dec
sub
push
mov
cmpsb
pop
enter
add
pop
jle
or
ljmp
icebp
pop
mov
stos
mov
bound
push
rcrb
lods
push
mov
daa
stos
inc
mov
cmc
and
dec
imul
jbe
test
jmp
pop
pop
cmpsl
cmp
mov
xchg
pop
sbb
rcl
jmp
call
popf
ds
add
sub
comiss
sub
out
push
adc
and
jge
push
adc
inc
xor
jg
push
subl
std
jp
xlat
loopne
add
dec
pop
out
sbb
sbb
and
stc
cmp
test
mov
in
mov
test
inc
jno
pop
sbbb
push
mov
or
xor
in
leave
mov
xchg
aaa
aam
dec
mov
inc
clc
cmp
std
loope
lahf
mov
outsb
outsl
decb
loop
ljmp
push
mov
mov
cli
xchg
sbb
cmp
fistps
les
enter
scas
sbb
stos
push
jnp
stc
in
jnp
mov
jge
push
jnp
xchg
pop
xchg
bound
sbb
dec
adc
mov
insl
inc
in
mov
in
loopne
sbb
or
in
repnz
jns
adc
sahf
stos
mov
outsl
mov
and
or
mov
push
lea
inc
adc
daa
cmpsb
mov
outsl
mov
inc
int
pop
adc
pusha
fs
aas
mov
shl
cmpsb
mov
pusha
loop
dec
xchg
push
sub
and
sub
push
push
lret
cwtl
push
test
xchg
lahf
sub
lds
pop
sbb
jg,pt
push
fists
xchg
movsb
mov
or
lahf
add
adc
jbe
xchg
or
out
ret
les
add
xchg
ret
inc
pop
fisttpl
lret
pop
adc
dec
scas
cltd
and
fistl
sub
inc
pop
mov
sub
fadds
lea
cmpsb
repnz
lret
adc
popa
and
xchg
aam
mov
or
dec
mov
xchg
arpl
sbb
dec
or
xchg
jl
jbe
loop
cmp
shrb
mov
int3
hlt
lret
add
aas
mov
ss
js
xchg
sub
ljmp
add
xor
jns
inc
sub
or
sub
xchg
pop
mov
cmp
icebp
jns
pop
nop
xchg
sbbb
call
push
sti
xchg
sbb
lods
push
dec
popf
ljmp
xchg
jae
dec
xchg
sub
jle
aam
sbb
pusha
sub
int3
std
aas
lds
mov
cmp
aas
pop
int3
cmp
dec
and
sub
inc
mov
pop
sub
adc
or
mov
adc
xchg
push
push
and
mov
imul
add
xor
scas
jp
fwait
mov
add
jp
add
push
sub
cmpsb
cmp
iret
sbb
imul
jge
cmp
mov
leave
lret
ret
into
test
pop
add
je
repz
jecxz
enter
movsl
shll
fists
pop
jge
les
out
pop
cs
shrd
adc
pop
pop
repnz
cmc
out
mov
cmp
dec
mov
popf
aam
mov
push
mov
jp
out
movsl
add
adc
push
cltd
bound
xor
lods
mov
fwait
outsb
in
out
xor
xchg
jne
ss
stos
loope
mov
hlt
push
jl
outsb
xchg
fs
push
jns
jb
test
and
lcall
loope
sub
xor
lret
jl
and
add
test
out
into
adc
icebp
xchg
mov
cmpsb
sub
fwait
out
pop
jmp
pop
mov
sti
push
jle
addr16
cwtl
xor
sub
int
jg
mov
xor
repz
arpl
out
fwait
ds
bound
movsl
shlb
frstor
into
pop
mov
popa
push
sbbb
lea
xor
test
mov
jns
in
icebp
push
mov
xchg
add
scas
popa
jmp
sbb
or
and
mov
lods
ds
cwtl
mov
inc
sub
xchg
cmpsl
xor
sti
mov
jbe
imul
push
sbb
stos
xor
subb
pop
xchg
repz
repz
sub
inc
repz
mov
jno
in
sub
add
test
fcoms
into
sub
push
push
cld
cld
cmp
pop
and
arpl
lods
push
adc
mov
aas
paddsb
inc
enter
test
xchg
mov
stos
mov
movsb
sbb
cmpsl
aaa
or
push
out
loope
loop
lods
mov
cmp
and
push
mov
adc
dec
mov
popf
lret
in
daa
pop
cmp
incl
or
cltd
shr
scas
pushf
cmp
sbb
jb
orb
rorl
xchg
mov
pop
in
sbb
jo
fidivl
or
fists
pop
push
popf
xor
inc
es
out
pop
pusha
mov
and
mov
xorl
ja
add
jp
pmuludq
mov
shrb
or
jb
add
pop
cmp
cmp
dec
dec
jno
popa
cmpsl
cmp
sahf
xor
mov
gs
fisttps
scas
loope
cmp
push
pop
scas
ret
mov
aam
mov
dec
push
insb
push
leave
add
test
mov
pop
insb
sbb
and
ljmp
cmp
mov
push
bound
bound
fprem1
jnp
add
fistpl
and
lcall
fiadds
dec
mov
lret
pop
imul
insb
movsb
push
xor
add
adc
dec
inc
xchg
fcompl
jbe
push
push
mov
mov
bound
dec
xor
iret
jg
inc
sar
jns
push
add
jge
add
cmp
add
nop
xlat
scas
mov
imul
xchg
add
push
sub
mov
add
mov
push
xchg
into
pop
xchg
ss
es
aaa
xor
aaa
dec
pop
pop
addr16
repnz
test
iret
jmp
cwtl
adc
mov
aaa
iret
xor
dec
pop
inc
pop
test
sarb
loop
add
mov
inc
push
loopne
ss
cltd
pop
push
aam
xchg
stos
and
xor
scas
or
test
out
lods
shrl
lcall
mov
dec
loope
inc
mov
loope
sub
repz
outsb
sub
sub
mov
ret
stos
inc
imul
cltd
push
add
ja
inc
push
data16
popa
push
sbb
push
pop
test
and
gs
hlt
in
addr16
fs
cmp
mov
xchg
cltd
dec
pop
pop
mov
pop
call
incl
xchg
cmp
in
jns,pt
clc
adc
mov
inc
movsb
fwait
mov
lret
iret
or
cli
gs
pop
and
loopne
loop
test
push
mov
in
xchg
push
sub
dec
rcl
lret
idivb
leave
dec
cmp
out
data16
repnz
mov
pop
cmc
xor
dec
inc
mov
testl
roll
sbb
repz
imul
cwtd
aad
or
xchg
out
popf
arpl
xor
and
arpl
push
and
out
dec
leave
or
jp
repz
mov
lret
xchg
push
xor
idivb
in
mov
mov
insl
jnp
dec
cmpsl
sub
lret
jge
in
mov
scas
bts
mov
or
xchg
mov
xor
fidivrs
pusha
gs
fdivl
xlat
movsl
test
hlt
xlat
pusha
ds
mov
into
mov
push
cli
xor
and
data16
mov
addr16
or
outsl
ret
outsl
sbb
pop
lret
adc
dec
xor
lds
jg
fwait
jle
test
mov
sub
pop
jle
jle
insl
dec
mov
mov
js
push
lea
cmp
negl
pop
xor
mov
nop
fists
xor
rcrl
clc
jle
add
cmpsb
inc
insb
adcb
nop
aad
fucompp
pop
add
das
inc
movsb
mov
enter
test
aam
mov
mov
push
jmp
in
mov
lret
insl
fldt
mov
xchg
xchg
std
mov
stos
dec
into
dec
gs
lods
fdivrl
push
out
adc
mov
jmp
cmp
stos
adc
ds
xor
lds
add
les
or
cmp
mov
sarb
lret
rcrb
divl
push
xchg
pusha
mov
mov
push
cmp
fnstsw
sub
insb
sub
mov
aas
mov
push
fnstenv
sbb
stos
jo
xor
mov
mov
mov
out
ja
xor
sub
in
hlt
dec
cmpxchg
popl
arpl
data16
outsl
repz
mov
in
lock
push
arpl
mov
es
in
movsb
mov
push
lret
pushf
sub
pop
sub
mov
xorl
pop
movsb
lods
dec
pop
and
ds
adc
mov
mov
mov
scas
daa
inc
xchg
ja
dec
adc
jb
dec
push
sub
cltd
inc
inc
int3
ret
jne
cld
mov
out
in
inc
and
cltd
adc
and
mov
dec
test
xchg
popa
out
lods
push
lea
dec
jno
pop
and
xor
jne
xchg
push
gs
jl
imul
mov
mov
dec
test
cli
cld
cmpsl
in
pop
mov
and
cld
popl
push
stos
cmp
repnz
mov
ret
add
int3
pusha
mov
fwait
inc
mov
pushf
clc
push
mov
mov
divb
test
aad
jo
loop
daa
shll
lahf
div
sbb
call
jge
inc
xchg
cli
dec
loopne
aad
pop
fucomi
movsl
in
flds
mov
and
cltd
jmp
insb
sbbl
insb
pop
hlt
mov
loopne
push
cltd
and
and
pop
stos
adc
pop
aad
ds
pop
jb
in
xor
add
sbb
dec
rolb
repz
in
nop
sahf
mov
ss
mov
mov
fs
mov
rclb
xor
xorb
pop
in
int
gs
sahf
popa
xchg
enter
or
lds
cmp
test
pop
outsb
or
jns
xor
cmp
fwait
lds
mov
andb
cld
fcmovb
xchg
push
xlat
iret
pop
xlat
xlat
sbb
call
out
iret
sub
and
mov
cmp
pop
test
jge
insb
pop
dec
jmp
inc
inc
pop
dec
fimull
add
adc
xor
sub
xor
rcrl
fists
outsl
mov
out
hlt
fiadds
push
ja
push
or
push
push
scas
mov
icebp
loop
mov
lret
subl
scas
sar
andb
arpl
pop
and
xchg
pop
or
stos
in
arpl
jecxz
mov
push
adc
adc
add
iret
sbb
jl
testl
dec
push
shr
filds
aam
hlt
pop
sbb
xchg
pop
orl
es
mov
stos
inc
or
iret
into
mov
test
push
jns
add
enter
mov
mov
movsl
aad
movsb
inc
iret
xchg
mov
and
clc
hlt
icebp
pop
and
stos
xlat
addb
sti
leave
fidivrl
adc
ss
sbb
inc
call
insb
xor
jb
adc
adc
aaa
add
mov
mov
loope
inc
roll
jecxz
xchg
lret
jno
add
ja
inc
sub
cmp
cmc
out
je
int3
mov
roll
jbe
cli
mov
mov
dec
fwait
and
mov
popw
mov
mov
pop
adc
out
imul
cmp
int3
jmp
cmp
rclb
data16
mov
in
mov
inc
imul
xchg
adc
ss
sbb
cwtl
push
and
mov
fistpll
or
push
adc
add
cmp
or
mov
adc
jbe
or
mov
cmpsb
xor
dec
mov
adc
stos
into
adc
add
jmp
lret
mov
adc
ret
sub
fnstcw
sbb
mov
push
test
lahf
movsb
mov
sbb
out
mov
lcall
stos
cmc
or
and
es
scas
test
pushl
push
cmp
pop
push
mov
movsl
add
pushf
notb
dec
xchg
adc
jp
pop
mov
gs
or
test
insl
mov
lret
cli
stos
mov
inc
jecxz
lock
push
xchg
rorb
std
and
dec
in
adc
or
pop
in
stos
jl
sbb
fdivrs
test
inc
imul
jle
popa
dec
sahf
and
arpl
cltd
xor
push
or
sahf
adc
adc
stc
scas
stos
test
add
cmc
inc
cmc
xchg
test
js
shl
inc
aas
lods
shrb
xor
xor
lods
inc
fidivrs
scas
adc
cli
movsw
cmp
xor
jne
mov
inc
pop
mov
ret
xlat
pop
xchg
xor
ja
pop
nop
adc
arpl
andb
or
jns
test
sub
mov
es
sub
mov
add
lods
and
add
xor
pop
sti
lods
js
jp
in
test
push
xchg
std
inc
sub
xchg
cmp
push
and
mov
cmp
mov
push
xor
adc
adc
mov
and
fmuls
subl
add
in
xor
loope
outsb
sub
or
mov
jge,pn
push
cmpsb
pop
out
sarb
add
out
add
push
mov
js
add
mov
jmp
or
cwtl
xor
lea
repz
adc
lds
xor
sub
and
popa
inc
call
int3
rol
mov
sub
mov
xchg
faddl
adc
jb
mov
out
xlat
icebp
sub
aad
and
mov
mov
mov
pop
stc
scas
sahf
aam
pop
xchg
sub
pusha
or
outsl
cltd
icebp
add
daa
popa
int
jno
lahf
pop
repnz
icebp
stc
xchg
rcrl
insb
mov
pop
xchg
pop
push
adc
lock
int
mov
mov
add
jecxz
daa
push
decl
cmp
jle
mov
mov
mov
es
xor
mov
mov
lods
test
ljmp
xor
call
xor
jo
lea
push
dec
add
jecxz
lahf
fsubl
jl
icebp
pop
mov
and
or
sub
testl
addl
push
lds
jg
sbb
jl
cli
test
aad
lret
pop
inc
pop
pop
inc
and
jmp
mov
add
nop
adc
mov
cmp
xor
shr
dec
or
rorb
in
jle
rolb
xor
dec
xchg
jno
adc
dec
lcall
jmp
sahf
aad
fidivrl
dec
test
mov
das
cmpsl
loope
fisubs
jnp
add
cs
xchg
cmc
test
push
aas
movsl
fidivrs
mov
outsb
push
jb
lahf
ret
push
test
cmp
orb
pushf
cmp
out
out
sbb
xchg
cmp
mov
mov
xor
ljmp
in
outsb
shl
dec
inc
pop
or
jbe
addr16
aam
sbbl
sbb
call
push
jg
enter
jg
ds
sbb
jne
inc
cwtl
test
add
test
jge
sub
aaa
sbb
adc
sub
ret
jmp
cld
xchg
and
cmpsb
fwait
push
addr16
lods
sub
insb
ljmp
xor
mov
xor
mov
push
mov
nop
mov
out
xor
cmp
inc
jbe
test
rcrl
fdivrs
ljmp
leave
fadds
sub
in
pop
xor
xchg
imul
aas
jnp
dec
sub
pushf
je
xlat
fiadds
std
insb
divl
sub
pop
iret
cmc
arpl
adc
sahf
bound
aad
scas
pop
test
and
jno
dec
iret
popa
xchg
clc
ret
pop
cmp
add
mov
sub
pusha
loope
cmp
lcall
es
clc
idiv
test
cmp
mov
jo
call
rorb
jg
insb
add
test
movsl
and
inc
dec
mov
inc
mov
xor
mov
inc
ret
pop
not
sub
packssdw
ljmp
mov
adc
mov
xor
jno
aaa
cli
stos
popf
push
sub
push
push
mov
ljmp
dec
mov
subb
pop
fisubl
int
aam
cwtl
fwait
popl
pop
and
sub
fisubl
lock
add
or
or
mov
std
jle
outsb
inc
sarb
sbb
test
lar
mov
clc
cmp
jno
adc
jns
cltd
sbb
pop
push
cwtl
pop
test
mov
icebp
mov
push
sbb
mov
and
push
bnd
int3
fmuls
adc
xchg
mov
adc
jecxz
cli
flds
and
aas
cmpsb
subl
jno
imul
jecxz
dec
test
loopne
adcl
mov
mov
add
js
nop
xchg
or
into
lock
pop
add
int
sbb
push
aam
sub
lahf
das
xor
lret
sub
stos
pop
adc
pop
nop
jecxz
inc
adc
and
rolb
or
pop
outsl
fildl
mov
mov
jle
insl
cmp
and
and
sub
push
repz
lahf
xor
nop
sub
in
sbb
icebp
mov
pop
or
insb
fcoms
insb
js
dec
out
enter
or
mov
sbb
mov
call
or
or
jp
xor
arpl
jmp
ret
hlt
call
xchg
popa
or
mov
add
test
add
jge
push
jns
jnp
cmp
sbb
nop
mov
cld
cmp
testb
fcoms
push
xor
jg
out
les
jmp
jp
sub
loop
out
stos
test
or
lds
sub
dec
in
imul
sbbl
leave
inc
sbb
xorw
repnz
push
or
mov
add
movsb
adc
inc
inc
arpl
jns
xchg
rorl
jg
lcall
mov
in
xchg
mov
pop
or
xor
xchg
movsb
xchg
xchg
dec
int3
or
fidivl
push
mov
test
ret
shlb
std
or
push
sbb
mov
in
sub
pop
sbb
xor
sub
dec
or
enter
xor
sub
pop
movsl
mov
outsb
push
cmp
push
xor
push
jecxz
and
push
mov
jl
int
adc
mov
jmp
sbb
inc
dec
aam
dec
xchg
testb
insb
cmc
pop
or
add
pop
shl
lcall
adc
push
cmp
repnz
inc
stos
mov
push
rcrb
ds
dec
adcb
rorl
add
mov
or
lea
test
roll
pop
and
or
add
mov
lods
movsl
mov
adc
scas
les
test
dec
sub
push
dec
leave
sahf
cwtl
mov
outsb
in
and
xchg
lret
into
imull
rorl
xlat
mov
lods
cwtl
cmp
jle
test
xor
dec
push
nop
add
or
orb
mov
fidivl
push
lds
inc
mov
outsl
nop
out
mull
outsb
pop
mov
icebp
jae
lret
test
cltd
bound
dec
flds
mov
pop
adc
cmpsl
aad
sbb
pop
inc
xchg
xor
mov
jo
push
test
xor
into
shr
test
fnstsw
ss
es
mov
scas
shl
mov
mov
clc
push
push
xchg
push
add
lock
in
les
push
mov
dec
mov
dec
test
and
insl
loop
xchg
xchg
mov
cmp
or
inc
das
fcomi
jae
lods
pop
jb,pt
xor
cmovns
std
cmp
pusha
outsl
enter
popf
xor
jge
jno
cmp
inc
sahf
into
cmp
or
andl
cmpsl
imul
cmp
inc
lret
mov
mov
dec
imul
out
fidivrl
add
das
leave
cmp
stos
xor
data16
movsl
popf
in
insb
hlt
dec
into
shrb
je
ss
mov
mov
dec
mov
mov
lods
push
push
xor
sti
jae
pop
xor
scas
int3
or
pop
mov
xchg
orl
in
pop
jne
out
scas
sub
imulb
popa
adc
imul
sbb
call
push
push
lock
mov
popa
or
clc
shrl
and
sub
lret
jp
hlt
outsl
cmp
jmp
cmp
lahf
outsb
int3
adc
repz
pop
dec
pop
std
xchg
ret
lods
pop
loopne
daa
cmp
stos
mov
fisubl
into
or
mov
cmp
pushf
cwtl
int
adc
dec
adc
stos
sarb
fisubrs
sbb
inc
add
mov
ja
dec
mov
jo
xor
mov
pop
dec
mov
fwait
mov
les
mov
xchg
cmpsb
mov
icebp
jg
loop
cmp
mov
cli
fcompl
popf
sbb
cmp
ljmp
push
push
fwait
cmp
out
xor
jno
dec
pop
sub
cmp
jae
xchg
icebp
fists
cmp
lret
stos
pop
mov
xchg
sbb
mov
ret
daa
repnz
xchg
lods
pop
inc
cmp
cmp
mov
xchg
mov
cli
cvtps2pd
pop
xor
out
jmp
jmp
jbe,pt
mov
xchg
mov
inc
aam
clc
sti
adc
movntps
mov
pop
shrl
sub
jns
icebp
mov
mov
test
and
xchg
inc
in
imul
dec
adc
lret
push
ffree
ret
mov
test
lock
xchg
test
push
push
or
push
out
xchg
pop
pop
xchg
ficoml
dec
stc
jb
pop
scas
cli
sbb
shl
pop
mov
idivb
sahf
in
add
repz
mov
or
daa
jb
testl
push
mov
and
pusha
insl
jae
or
inc
inc
loope
pop
sbb
repz
push
mov
sahf
jnp
cmpsb
mov
sub
lret
sbb
mov
dec
stc
mov
mov
mov
stos
pop
fs
cmpsl
fsubrs
add
and
fidivrl
addr16
xchg
stos
sbb
sub
pop
shlb
xlat
jl
lods
mov
mov
jmp
xor
add
fstpt
push
pop
mov
es
jae
dec
les
call
push
cmp
cmp
outsb
andl
bound
cmp
add
in
roll
xor
in
mov
add
daa
pop
fsubr
ja
sbb
pop
lret
mov
mov
imul
stc
pop
mov
cmpsl
inc
mov
jbe
subl
loop
iret
inc
push
jnp
adcl
pop
add
mov
scas
mov
pop
mov
sbb
mov
sub
xor
sub
inc
jle
outsl
pusha
mov
lds
or
or
rcrb
les
sub
push
or
jp
mov
sub
sahf
negb
sub
adc
inc
mov
call
mov
or
jbe
sub
call
jp
movsl
outsl
ret
mov
mov
cmp
repnz
add
outsb
inc
pop
movsl
xchg
mov
cmp
mov
mov
ljmp
cmp
ljmp
mov
inc
pop
pop
cmp
loopne
rol
inc
fsub
sub
sub
cmp
cmc
or
jp
mov
fstpl
or
mov
mov
add
inc
dec
mov
int3
jno
adc
scas
push
cli
in
lea
mov
push
insl
and
lcall
inc
insl
mov
pop
out
mov
pop
scas
or
lea
inc
xchg
loope
cmpsl
or
sub
xchg
scas
jbe
stos
push
push
out
sbb
dec
clc
lret
int3
sub
les
sbb
dec
stc
mov
or
jbe
mov
out
inc
xlat
push
frstor
adc
jbe
mulb
pop
stc
sub
pushf
xor
and
cmp
sbb
adc
add
dec
lret
sarl
xchg
push
insl
inc
push
xchg
mov
pushf
lcall
out
in
mov
loope
out
lret
into
leave
xor
sbb
mov
adc
les
dec
test
sbb
or
outsb
in
fcomip
mov
cmc
imul
and
mov
insb
adc
lcall
sub
pop
in
notb
push
pop
test
jnp
push
mov
cmp
cmp
mov
cmpsb
sbb
cmpsl
scas
push
fidivrl
inc
cmp
icebp
hlt
out
aaa
dec
addl
xchg
addr16
cmp
cmp
fdivrl
decb
mov
data16
sub
aas
enter
mov
mov
aam
push
add
adc
bound
add
mov
stc
cmp
lcall
cmp
pop
and
lret
adc
xor
fbstp
andl
dec
add
cli
popf
cmp
lods
sub
mov
repz
xor
add
sub
loopne
cli
cmp
or
cli
shrl
adc
dec
mov
lret
dec
shlb
loopne
cmpsb
add
imul
adc
lods
movsb
fidivrl
add
sub
shl
add
outsl
sub
adc
scas
mov
into
out
pop
push
pop
cltd
pop
inc
sbb
inc
test
ljmp
adc
jle
xlat
mov
out
push
lcall
xchg
ds
fistpll
int
sbb
pop
jns
mov
pop
xchg
hlt
sub
cwtl
sbb
in
cltd
inc
fsubl
out
xor
inc
push
sub
cmpsl
jbe
jge
jo
inc
inc
add
fisubl
lcall
orb
or
lcall
aad
push
push
adc
sbb
sbb
icebp
les
xor
mov
inc
lret
cmp
repz
inc
out
outsl
and
in
mov
mov
xor
mov
fstpl
dec
add
icebp
es
test
and
jp
mov
push
rcll
icebp
insl
dec
lea
push
mov
out
jmp
add
adc
or
or
mov
icebp
ss
mov
push
xchg
jle
cmp
mov
mov
mov
sub
bound
in
mov
pop
shlb
mov
mov
add
cltd
in
loope
jg
pop
push
jns
int
xor
adcl
call
dec
addl
orb
lcall
adc
dec
lods
adc
adc
scas
jmp
adc
adc
pop
out
jbe
or
mov
pop
and
or
sub
dec
scas
pop
movsb
clc
sarl
in
fwait
loop
cld
or
push
mov
sub
xor
jecxz
mov
mov
insb
xchg
fwait
into
daa
setp
inc
fs
xchg
in
sbb
andb
stos
ror
mulb
out
push
push
inc
aas
pop
mov
or
xor
mov
mov
in
and
test
in
xchg
lock
lods
mov
sbb
mov
aam
inc
xor
adc
mov
push
loope
push
pop
cltd
pop
xor
cmp
push
andb
sub
aad
inc
adc
xchg
jp
cld
jnp
add
push
sub
fcomps
test
leave
pop
std
sub
push
dec
xor
lcall
lret
dec
lock
push
loopne
je
test
xlat
popa
into
inc
dec
repnz
clc
loopne
cltd
inc
popf
sub
adc
dec
dec
stos
mov
movsl
fwait
push
sti
call
push
xor
rolb
mov
in
sub
xchg
ret
adc
pop
cmpsb
xor
jb
mov
mov
repz
push
jo
jo
repz
scas
out
mov
mov
ret
hlt
call
xor
mov
sub
test
cmc
aam
sub
adc
xchg
out
xchg
cs
sbb
and
pop
inc
movsl
xchg
pop
lcall
mov
ret
jnp
push
fsubrs
inc
push
dec
orl
jle
push
ret
mov
pop
js
loop
jecxz
lret
cmp
xchg
pop
call
sub
or
jbe
lret
in
scas
push
jno
push
test
pop
mov
aaa
sbb
repnz
shl
sub
insl
add
sbb
aaa
out
test
cmp
sbb
push
iret
mov
xor
fidivrl
test
arpl
sbb
fistpl
adc
jmp
dec
dec
xor
and
and
and
jmp
lcall
lret
mov
adc
push
pop
test
mov
movsb
xchg
or
int
sti
shl
lods
push
lret
mov
push
pop
out
pop
sbb
inc
aas
push
mov
mov
push
lea
mov
or
sbb
stos
rolb
les
jbe
push
mov
fs
mov
imul
dec
testb
push
in
xchg
sub
push
insl
adc
mov
and
mov
aaa
cld
outsb
lea
movsb
or
pushf
movsb
rol
adc
add
xchg
dec
popf
push
rcrb
hlt
sbb
dec
fisttps
inc
lds
ljmp
mov
mov
adc
pop
mov
lret
and
lds
iret
xchg
shlb
mov
lods
push
int
roll
mov
and
adc
sbb
rcl
xor
addr16
dec
clc
fmull
push
mov
orb
adcb
iret
in
and
loopne
cmpsl
insl
push
repnz
mov
dec
sbbl
jno
mov
xchg
mov
add
repz
sbb
pop
inc
mov
xchg
cmp
xchg
jno
dec
imul
stos
xchg
mov
stos
pop
inc
cli
insw
adc
mov
stos
and
scas
cmp
xchg
push
rcrl
jno
mov
cs
insb
rclb
loop
lcall
or
into
cwtl
into
mov
mov
aaa
inc
xor
push
push
dec
jnp
xchg
mov
in
fmul
push
repnz
dec
xor
push
rcrl
mov
lock
movsb
pop
popf
adc
inc
pop
mov
push
inc
mov
filds
inc
add
ret
sub
scas
jb
add
dec
cmp
jb
popa
loope
sbb
mov
sarb
test
push
sbb
xor
popa
mov
cmp
mov
imul
add
inc
xchg
rcll
mov
stos
mov
adc
aam
adc
out
lds
xchg
lret
xor
jne
adc
xchg
push
inc
mov
insl
add
stc
adc
dec
call
cld
cmp
shll
jbe
jno
iret
ret
cmc
or
push
or
mov
leave
adc
faddp
xchg
stos
lcall
ljmp
lds
and
dec
sbb
push
jle
jbe
cmp
mov
or
ds
out
ret
cmp
lret
jae
sub
pop
dec
dec
jl
addr16
fisttps
out
mov
insb
sahf
and
cmpsb
mov
push
inc
mov
dec
in
mov
cmpsl
mov
add
subb
inc
lods
ret
mov
pop
dec
jb
loope
and
sub
xor
cmp
lahf
mov
and
adc
adc
xchg
or
ljmp
imul
mov
ror
sbb
mov
sub
mov
xor
sub
push
stc
jb
mov
jp
pop
insl
aas
outsb
sub
insb
imul
jae
lds
mov
jge
mov
add
mov
bound
mov
sub
push
rorl
sbb
or
or
jnp
popa
jbe,pt
and
and
testl
shrl
xchg
dec
push
outsl
loop
mov
scas
cmp
inc
ret
push
sbb
sub
jns
das
mov
xor
mov
pop
cmc
js
xchg
push
out
test
pop
aad
cltd
and
aas
mov
nop
das
insb
insb
adc
cmovs
mov
mov
or
add
xor
mov
mov
and
aaa
les
pop
sub
adc
and
and
ret
in
sbb
aad
sub
inc
test
loopne
mov
loop
mov
xchg
mov
adc
sub
mov
sbb
and
sbb
jg,pn
or
daa
inc
xchg
js
push
test
hlt
jp
enter
mov
push
jbe
ret
push
loope
sub
jecxz
cli
mov
jmp
lret
mov
mov
jae
ret
imul
stos
incb
mov
jmp
xchg
fldt
fmull
cmp
stc
push
outsl
jmp
mov
pushf
hlt
aad
pushf
xchg
dec
test
or
arpl
push
testl
call
and
das
sub
std
out
mov
mov
out
sbb
xchg
push
push
test
push
mov
fs
js
ret
jno
jae
adc
fstl
lcall
jle
dec
in
pop
bound
mov
dec
push
pop
data16
subl
lods
sub
xorl
cltd
fisubl
dec
pop
cmpsl
iret
dec
movsl
mov
int3
daa
repnz
loop
and
ret
lds
jecxz
int3
cmp
xor
in
jb
test
jbe
mov
xchg
adc
jecxz
test
mov
add
push
test
cmp
dec
inc
mov
addr16
push
jp
add
add
fstl
leave
icebp
xchg
js
push
push
or
das
jl
or
hlt
sbb
testl
testb
xor
fucomip
sub
cmp
sti
ucomiss
mov
mov
cli
stos
push
add
dec
and
arpl
ljmp
dec
or
negl
xchg
mov
push
imul
inc
loopne
imul
nop
inc
sub
pop
dec
mov
mov
and
sbb
mov
mov
enter
gs
push
in
es
stc
stc
inc
add
lds
pop
pop
adc
fisubs
mov
call
aam
add
roll
jmp
aam
inc
jmp
in
sti
in
test
cmc
cmc
cmp
enter
or
and
dec
sarb
pop
loope
mov
imul
adc
ficompl
add
pop
or
xchg
std
add
jae
xchg
push
mov
push
xlat
lds
mov
mov
xchg
jecxz
push
into
in
mov
jno
fwait
lahf
adc
jnp
loopne
insl
jp
jbe
or
insl
inc
lea
popf
push
scas
pop
lock
fnstcw
call
aas
sub
das
and
and
adc
icebp
int
mov
inc
rcl
cwtl
push
or
insb
pop
popa
cmp
xor
adc
js
pushf
xor
cmp
insb
mov
cli
sbb
mov
sub
pusha
outsb
xlat
mov
imul
cmp
xchg
je
cwtl
push
fstl
mov
ds
sub
or
roll
mov
adc
je
and
imul
imul
xor
jl
out
fdivrs
out
sti
jl
push
push
xchg
and
lret
xchg
lea
lret
mov
shlb
daa
or
popa
jne
js
adc
gs
bound
out
out
scas
sbb
ret
frstor
fdivrs
std
or
hlt
push
xor
mov
imul
rorl
ret
rolb
pop
test
daa
push
xchg
push
push
sub
add
pop
test
cmp
push
jg
push
xchg
mov
rorb
gs
inc
inc
hlt
adc
and
mov
inc
test
xor
fldcw
in
dec
push
cs
in
in
sub
call
add
adc
pusha
leave
aas
adc
jne
push
in
sub
aaa
and
lods
fbld
addr16
mov
gs
lods
js
rorl
cltd
sub
lea
push
into
je
mov
sbb
mov
jns
or
pop
inc
enter
popa
and
pop
sub
mov
jns
in
cltd
xchg
xlat
leave
leave
insb
popa
cmp
cmp
in
cld
jnp
mov
aaa
lcall
pop
outsb
fcoml
jp
xchg
inc
leave
ret
mov
dec
movsl
add
movl
pusha
dec
scas
mov
clc
leave
int3
and
test
xchg
pop
int3
out
sti
adc
ljmp
fldl
inc
in
adcb
cmpl
pop
shll
inc
inc
outsl
jp
mov
hlt
ljmp
jge
inc
dec
xlat
cmp
adc
mov
fdivl
cmpb
dec
jmp
incb
mov
jb
jnp
sbb
into
sub
sarb
fisubrs
cwtl
fisttpll
stc
pusha
pop
dec
push
es
gs
cmp
xchg
xchg
cmp
aad
push
push
and
jg
stos
sbb
loopne
test
bound
mov
ss
addr16
xchg
aas
test
mov
pop
or
jle
and
jb
or
sub
mov
cmpsb
leave
mov
sbb
sub
loopne
mov
push
dec
icebp
movsb
xor
mov
ret
lods
adc
jg
sbb
iret
mov
push
inc
jns
andl
push
adc
inc
add
fsubrl
pop
ljmp
jg
mov
icebp
and
sbb
cs
cwtl
pop
ljmp
daa
adcb
dec
jecxz
mov
insb
push
out
notb
mov
mov
js
into
data16
xor
adc
xor
jnp
icebp
orb
sub
in
stc
sub
inc
stos
or
dec
mov
inc
daa
cmpsb
jnp
adc
sbb
aad
fadds
lahf
dec
jb
leave
sbb
loopne
pop
ss
push
loope
movsb
movsl
std
iret
add
shlb
jle
push
xor
cld
push
xchg
clc
mov
inc
xchg
push
add
cmpsl
dec
mov
add
mov
adc
pop
jb
sbb
std
jae
and
imul
aas
test
push
mov
adc
mov
daa
mov
dec
es
mov
into
loop
subl
in
lods
in
lds
sbb
jl
jne
xchg
or
jle
leave
call
js
jle
push
out
fcmovne
insl
clc
ja
test
loopne
add
stos
std
fwait
cld
push
rcll
sub
mov
inc
icebp
adc
es
std
xor
testb
or
imul
aas
sub
fdivrl
loopne
out
and
xchg
loope
cwtl
jg
mov
xor
jo
cmp
push
xlat
dec
jecxz
push
dec
outsb
jle
sbb
adc
gs
fistpl
shlb
cmpsl
ds
test
dec
and
and
decb
lds
xor
sub
sbb
push
jb
fsubrl
dec
insl
out
pop
dec
in
popf
add
pop
adcl
popf
mov
mov
andb
xor
dec
jno
fisubs
dec
cli
mov
into
mov
ret
pop
inc
mov
or
sub
inc
sub
lock
cmpsb
cmpsl
fnstcw
or
mov
shrb
add
cmpb
push
mov
xchg
jmp
pop
in
and
mov
ja
in
fldl
mov
dec
or
inc
sbb
push
mov
jnp
inc
push
push
xchg
inc
mov
popa
jl
mov
gs
push
dec
push
inc
jl
pop
flds
xor
push
xchg
cmp
popa
ret
adc
je
push
mov
cmovl
xor
or
mov
imul
xchg
lds
repnz
sub
jp
xlat
test
js
mov
das
js
cmp
cwtl
out
and
adc
inc
inc
sub
jnp
je
fwait
push
hlt
dec
push
xor
fs
mov
lret
jmp
into
push
test
adc
fdivrl
adc
pusha
imul
out
inc
pushf
pop
push
push
or
nop
lcall
aas
out
adc
fwait
in
push
es
jb
xchg
outsl
cmp
ja
das
mov
and
enter
popa
sbb
fsubrl
add
out
lcall
ret
add
mov
push
div
fcoml
test
pop
cs
std
pop
push
cmc
mov
pop
or
jmp
loopne
adcb
outsl
in
cmp
pop
pusha
xor
dec
icebp
mov
dec
jo
jp
fidivrs
in
pop
and
mov
mov
adcb
cmp
ret
out
add
sub
in
imul
out
mov
sub
mov
clc
shll
aad
cmp
pop
cmp
call
adc
xchg
ds
dec
sub
jno
inc
jno
ror
stc
adc
cmp
fcmovne
adc
or
mov
xor
mov
inc
or
add
push
in
rorl
icebp
cltd
mov
pop
sbb
adc
xor
les
push
aaa
cmp
in
and
adc
push
push
sub
mov
aaa
lcall
mov
mov
mov
insb
jmp
ds
push
repz
sahf
cli
push
lret
std
mov
adc
ret
mov
xor
mov
adc
popa
dec
stos
inc
mov
outsb
and
imul
lock
adc
and
stos
sub
lahf
loope
xchg
lahf
xor
mov
cmpsl
scas
scas
dec
in
ret
or
jg
xchg
push
mov
test
xor
jmp
xchg
sarl
out
lods
in
mov
mov
insl
ficoml
fisubl
jbe
cmc
bound
sub
in
rcl
jns
and
out
jl
in
inc
rorb
in
loopne
pop
cli
push
mov
sub
sbb
scas
mov
ret
or
and
sub
mov
push
push
and
loope
in
outsb
sbb
fsubrl
mov
push
xchg
sbb
mov
fcomp
stos
dec
xchg
and
jb
les
add
std
scas
mov
dec
cmp
or
testb
mov
or
imul
mov
jg
aas
push
push
pop
xor
fwait
or
sub
mov
shll
stc
cmp
pop
sbb
scas
leave
js
mov
daa
sub
ja
and
in
lret
js
push
jge
pop
inc
xor
and
outsb
xchg
cld
pushf
stc
pop
cmp
outsl
sbbl
pop
xor
testb
movsb
pop
push
pop
mov
dec
push
mov
loop
loop
or
lds
out
jmp
sbb
mov
push
or
sbb
push
or
js
and
rcll
stos
push
call
sbb
test
inc
push
cmp
xor
push
mov
push
lods
mulb
sbb
jmp
fists
sub
cmpsl
ss
dec
inc
sbb
out
inc
pusha
mov
out
push
cmpsb
jmp
cwtl
in
insl
or
or
jg
push
aam
je
into
lea
dec
inc
lods
icebp
adc
push
dec
shrb
aas
sub
pop
adc
arpl
sti
bound
out
je
loopne
cmpsb
cwtl
inc
mov
addl
mov
daa
add
pop
out
cwtl
aaa
mov
cmp
xor
push
jle
daa
dec
scas
adcb
aad
jg
inc
or
sbb
add
adc
call
scas
fstpt
mov
adc
pop
les
mov
insl
jno
mov
jp
int3
dec
popa
xlat
mov
mov
cwtl
inc
mov
dec
inc
jmp
repz
sub
push
icebp
dec
mov
je
mov
or
jne
sbb
jnp
sti
cmpsb
sbb
insb
ds
dec
inc
mov
ljmp
lea
call
or
and
int3
je
out
dec
sbb
bound
mov
shlb
or
push
push
sub
repnz
lods
push
lahf
jl
push
and
testl
in
push
adc
mov
or
cmc
arpl
xchg
addr16
xchg
jmp
xchg
and
sbbb
fldenv
dec
dec
cmc
xor
inc
sub
jmp
mov
or
lahf
mov
int3
mov
movsb
push
ljmp
in
push
lcall
pusha
dec
pop
xor
fstps
or
sub
leave
sbb
mov
push
mov
stos
cmc
ret
ss
dec
adc
dec
push
stc
rcl
mov
out
or
sarb
in
push
sti
scas
dec
add
pop
pop
adc
or
push
jb
mov
adc
dec
pop
adc
pop
fiaddl
push
or
mov
mov
std
out
adc
sub
push
fs
pushf
fs
icebp
movsb
inc
jae
arpl
mov
shll
add
cltd
insl
loopne
lods
inc
and
mov
xchg
mov
lods
aaa
adc
cmp
pop
int3
push
cmpsl
pmuludq
xor
mov
inc
pop
call
sbb
aad
popa
lods
fidivrl
es
inc
dec
and
sbb
push
mov
fcoml
movsl
insb
pop
push
in
cmpsl
mov
cmp
cltd
insb
jo
sub
pop
add
jb
fbld
sarl
xchg
mov
stos
int3
adc
dec
push
jp
and
push
push
aam
add
enter
and
add
pop
lahf
jno
leave
fcmovu
mov
fwait
mov
cmp
cli
aad
fstl
cmp
mov
jge
cli
mov
cmp
add
sub
into
sub
mov
and
in
add
fs
mov
cmpsb
and
xchg
mov
mov
fbstp
sub
cmp
xlat
popa
xchg
mov
push
jl
or
cmpb
inc
inc
sub
mov
push
ret
rcrb
test
pop
pop
jecxz
aad
popa
repz
jge
push
or
push
shlb
adc
imul
sub
mov
mov
call
cmp
sub
jno
xchg
sub
inc
cld
lods
and
orb
pop
jge
jle
jae
sahf
mov
pop
ja
shr
add
loope
jne
movsb
sbb
xchg
ret
inc
test
lret
fadds
mov
out
insl
jne
mov
dec
push
dec
add
lahf
push
lcall
push
add
outsl
jmp
xchg
push
add
scas
dec
push
icebp
roll
jle
xchg
and
lahf
mov
pop
out
sub
add
pop
loop
or
and
mov
ja
lea
movsl
push
dec
loope
adc
xchg
stos
sub
mov
cwtl
into
ja
cmp
jge
and
movsb
ja
ja
pop
or
lahf
int
imul
and
mov
bswap
sub
fldcw
inc
mov
adc
adc
sub
mov
xchg
xchg
mov
call
cmp
mov
out
and
mov
cld
insl
xchg
fisubrl
test
rcll
and
xlat
inc
cwtl
jb
jb
ss
out
push
int
les
imul
and
aas
pop
ret
jp
lods
repz
xchg
movsl
fmul
jl
add
mov
adc
frstpm(287
add
loopne
cmp
jnp
movsb
jo
insl
add
xchg
sbb
int
out
push
insl
push
mov
mov
sbb
mov
push
push
mov
lea
mov
adc
scas
mov
addl
xchg
repnz
xlat
mov
mov
add
icebp
cmp
divl
cwtl
popa
stc
cmp
push
fldenv
mov
push
xabort
cmp
popf
jp
mov
jge
loopne
mov
xchg
mov
clc
stc
loope
cmp
aad
addl
insb
add
mov
scas
repnz
xor
int3
in
xlat
scas
pop
cmp
push
mov
ss
xor
or
pop
adc
cltd
inc
push
iret
pop
sbb
and
repz
scas
add
mov
mov
pop
data16
add
imul
insl
adc
call
mov
ljmp
sti
imul
sarl
xor
rorl
sub
xchg
popf
and
sub
sub
daa
cld
inc
sub
neg
les
and
xor
mov
and
add
mov
das
adc
in
mov
dec
pusha
hlt
movsl
jno
pusha
icebp
sub
seto
pop
inc
test
cld
outsb
inc
cmp
out
insl
cmpsb
push
sub
jae
sub
pop
pop
lock
push
and
mov
and
iret
and
dec
ret
or
sub
fdivr
cmc
repnz
jbe
out
xchg
and
pop
in
ja
adc
out
mov
mov
and
test
inc
int
pushf
shlb
mov
je
rolb
loope
push
mov
adc
pop
ds
jl
sarl
sub
aad
mov
les
sar
mov
mov
nop
idivb
data16
mov
sbb
inc
xlat
adc
cmpsb
clc
cmc
call
inc
or
jno
shlb
outsl
shll
out
sbb
std
inc
popa
scas
and
or
xor
mov
jne
dec
xor
dec
xor
sbb
int
adcl
mov
push
inc
mov
outsl
insb
cmpb
iret
push
xchg
in
fwait
repnz
push
std
push
dec
pop
lods
pop
stc
cmp
lea
mov
stos
int
sbb
mov
mov
adc
lods
lahf
ds
shlb
dec
lods
sub
xchg
lock
test
dec
or
and
dec
adc
sub
stos
cmp
scas
ret
idivb
mov
call
scas
inc
and
jb
push
add
xchg
je
in
in
jecxz
lods
sub
je
mov
sub
call
divl
or
pop
decl
in
pop
into
mov
and
mov
jo
cmpsl
inc
cld
push
pop
sbb
cmp
in
push
rorl
lds
in
ljmp
out
mov
xchg
add
enter
lds
xlat
inc
aaa
add
fsubrl
dec
push
cmpsw
mov
xorb
cmp
in
adc
arpl
loopne
mov
daa
jnp
ret
pop
sub
aam
cli
jae
pusha
in
in
xor
push
dec
mov
push
and
cltd
sub
out
mov
xchg
aas
mov
mov
sbb
test
inc
rcl
test
and
jle
mov
dec
xchg
mov
xchg
fiaddl
cmp
inc
cmp
test
divl
clc
mov
cmp
add
cmpsl
jae
je
cmp
push
mov
ss
xchg
xchg
jb
test
xor
es
imul
out
pop
out
push
mov
push
mov
stos
mov
and
popa
sbb
add
push
mov
jg
repz
or
cmp
pop
imul
and
rorl
cmpsb
iret
mov
in
aad
add
xor
mov
pushf
popf
setb
fisubrl
daa
sub
jbe
dec
lret
loope
jp
xchg
adc
push
mov
shl
xor
xor
out
movsb
mov
lahf
imul
movsb
imul
nop
lds
in
mov
in
xchg
jnp
out
jne
loop
lahf
insl
jecxz
push
pop
mov
push
mov
dec
sub
cld
mov
js
enter
mov
cld
xchg
push
stos
pop
dec
cmpsb
in
lahf
shlb
lods
cmp
push
pop
xor
std
jo
loopne
lock
cld
test
jb
adc
lret
cmp
sbb
test
imul
push
sbb
mov
cltd
out
push
mov
icebp
sub
xchg
je
and
fidivrl
mov
adcb
dec
cmp
inc
test
pop
loope
mov
push
aaa
outsb
mov
fidivrl
jp
pop
mov
stos
add
shlb
xor
insl
jne
clc
and
add
dec
pop
aam
int3
push
inc
push
outsb
pop
iret
push
mov
cmp
jnp
test
push
sbb
mov
pop
iret
jge
roll
mov
fisubrl
faddl
ret
shlb
ljmp
pop
dec
mov
inc
hlt
sbb
les
dec
xor
mov
jno
mov
popa
stos
jp
cmp
or
dec
pop
mov
ffree
or
pop
imul
pop
add
cwtl
jmp
xchg
pop
mov
pop
cmpsl
lret
jns
rcr
sti
ret
jnp
adc
sub
arpl
pop
sbb
mov
aaa
xor
aas
or
sbb
jo
or
jbe
inc
mov
jle
cmp
mov
jae
cmc
loopne
fbld
insb
test
mov
inc
cmp
mov
jmp
or
pusha
arpl
movsb
cmp
xor
or
jg
popf
and
loope
or
lea
and
jnp
ja
xor
stos
cwtl
dec
jl
inc
dec
out
jecxz
ss
jmp
sarb
ret
pop
adc
stos
scas
push
sbb
in
mov
sub
movq
cld
adc
adc
jle
mov
mov
adc
scas
and
inc
mov
dec
xor
cmc
bound
test
out
ss
sbb
mov
dec
mov
xor
ffreep
icebp
es
enter
ja
sub
loop
sarb
adc
push
rcll
loopne
repz
dec
js
xchg
sbb
add
shrb
lock
es
mov
cmp
cmp
mov
loopne
sahf
pop
jbe
sub
aad
push
mov
mov
xor
inc
or
fsubr
xchg
orb
cmp
xor
cmp
inc
int3
xor
mov
sub
out
mov
or
mov
cmp
clc
push
jmp
add
mov
jge
cmc
imul
cmp
outsb
xchg
mov
and
fstl
adc
xchg
inc
xor
repnz
jl
xchg
sahf
mov
ret
inc
add
adc
or
cmp
jb
int
ficoms
jmp
pushf
and
inc
mov
cmp
mov
test
cltd
gs
mov
addr16
roll
repnz
sbb
repnz
and
repz
mov
jns
dec
sbb
jns
enter
lahf
hlt
inc
mov
js
mov
sub
outsb
fwait
pop
xchg
xor
jle
cli
and
lcall
rcll
fs
cmpsl
mov
rcl
mov
aam
test
repz
pushf
cwtl
js
cmp
jle
or
mov
repz
push
bound
or
inc
sbb
clc
inc
xchg
cmpsb
fnsave
adc
js
xor
or
js
jge
lcall
nop
mov
dec
push
test
push
adc
dec
mov
sub
cmpl
inc
shll
das
pop
cli
lods
movsb
in
lret
cmp
dec
mov
or
mov
jp
lea
cltd
mov
inc
adc
jge
sbbl
imul
pop
negl
push
jmp
test
and
cli
ja
cld
pop
xorb
mov
and
insl
add
pop
push
sbb
leave
je
mov
fisttpll
add
scas
ja
cmpsl
out
mov
inc
jbe
jne
mov
push
mov
sarb
mov
cmp
mov
inc
fadds
sbb
rorb
push
jnp
sbb
mov
inc
mov
mov
push
add
ja
sbb
xchg
ret
pop
fwait
enter
call
repz
dec
lcall
xor
and
add
scas
xchg
lods
push
dec
stos
fcomps
and
loopew
xchg
mov
push
dec
xlat
push
xor
add
or
adcb
push
clc
ret
ja
add
lock
mov
adc
sbb
rorb
xchg
or
jl
shl
dec
push
lcall
test
pop
in
mov
pop
inc
pop
jne
mov
shlb
stos
je
and
test
sub
mov
test
call
roll
push
xchg
mov
shll
mov
xor
iret
imul
insb
imul
lret
test
sbb
rcl
add
jae
xor
sbb
cmp
popf
clc
mov
dec
sbb
pushf
xor
mov
dec
cmc
pushf
add
sub
adc
xor
sbb
or
add
and
les
and
xor
sarl
xchg
adc
aaa
jns
adc
sub
out
mov
sub
xor
divb
xchg
cmp
nop
ja
push
outsl
adc
cmp
mov
xchg
mov
push
push
push
inc
add
xchg
cwtl
cli
add
jo
pop
ss
push
inc
mov
xlat
mov
push
and
fisttpl
je
xchg
insb
imull
sbb
or
popf
or
in
into
inc
or
int
pop
test
aam
icebp
pusha
mov
call
je
movsl
test
xlat
sub
jmp
adc
clc
dec
jne
jg
negl
jo
adc
xchg
mov
int
adc
fs
and
push
add
push
adc
jmp
clc
xchg
xchg
xchg
or
gs
xchg
dec
sbb
cmp
pop
dec
mov
mov
in
arpl
push
dec
add
test
out
call
xor
mov
roll
sbb
add
xchg
movsl
ja
orl
add
stc
int3
aas
jg
mov
push
sarb
fmuls
test
cmp
mov
cmc
shll
mov
out
and
out
adc
mov
popa
cmpsl
movsl
jp
xor
dec
jo
fs
mov
lcall
mov
pop
sbb
enter
dec
adc
jl
add
sarb
movsl
mov
mov
mov
sti
scas
fdivs
cmpsb
sub
mov
add
cs
imul
and
popf
aam
mov
mov
popa
stos
ss
test
in
mov
inc
lods
push
stc
sbb
fcomps
int3
push
and
sti
fwait
sub
out
out
ds
enter
sarl
jg
cmpsl
xor
cmpsl
rdmsr
in
in
cmp
xor
loopne
push
mov
mov
in
mov
and
jmp
addr16
addr16
jle
stos
out
push
ljmp
lods
aam
into
xor
int3
mov
aaa
hlt
ret
inc
xchg
in
cmp
inc
cli
insl
dec
xor
add
ja
inc
subl
int
gs
push
addl
pop
mov
loope
pop
sti
push
repz
shr
pop
cmp
pop
sbb
es
psubsw
adc
dec
xchg
in
adc
data16
sub
sub
pop
xor
cs
xorl
mov
or
cmpsl
stos
leave
mov
fnstenv
and
stos
mov
mov
xchg
incw
jp
andb
xchg
mov
rorl
xor
push
inc
int3
sub
int
adc
xchg
cld
sub
xor
daa
jne
pushaw
std
aam
xchg
call
hlt
imulb
inc
jge
cmp
mov
imul
fwait
insb
and
mov
outsl
stos
pop
cmc
mov
dec
sbb
lret
pop
push
jle
cmc
jle
lea
jp
leave
lods
lret
cmp
call
mov
jns
xor
cmp
jae
loop
lock
cmp
pushf
jno
dec
mov
xor
out
dec
pop
add
sbb
jp
xor
push
and
or
mov
notb
shr
stos
lds
and
pushf
mov
repnz
push
adc
not
jecxz
xchg
test
shrl
shlb
test
leave
jno
cmpsb
mov
jmp
mov
pop
or
push
fnsave
pop
rorb
cltd
shlb
addr16
xor
dec
icebp
mov
loope
or
sahf
shlb
les
pop
mov
scas
mov
add
incl
fwait
pop
adc
dec
xor
pop
mov
lds
repz
orl
or
outsl
cs
movsb
repnz
lds
jbe
addr16
inc
repnz
pop
movsb
jnp
fwait
cld
or
jg
pop
fldcw
sbb
add
xor
mov
testl
repnz
iret
das
mov
cmp
sub
pop
call
mov
jnp
xchg
xchg
adc
adc
mov
gs
lret
adc
mov
push
ja
sub
cli
cmpsl
mov
fists
lret
repnz
fnsave
je
and
cmc
out
pushf
es
arpl
stos
and
cmp
inc
filds
stos
dec
lahf
add
or
rol
daa
sbb
pop
sbb
adc
lea
iret
cli
cmp
push
in
jle
fsubl
lret
adc
divl
pop
clc
fmuls
or
lods
lea
xchg
or
ja
nop
shrl
movsl
xor
arpl
push
ds
aad
dec
fidivl
dec
out
inc
push
cmpsb
mov
mov
outsb
inc
mov
pop
jge
cs
xchg
xchg
pop
fwait
arpl
and
fdivrs
ja
mov
pushf
jecxz
gs
inc
bound
mov
movsb
xchg
xchg
fwait
push
fs
pushf
rcrl
pusha
sbb
fstl
fidivrs
inc
mov
xchg
shll
pop
mulb
icebp
test
iret
xor
imul
sbb
mov
adc
xlat
mov
adc
jecxz,pn
mov
push
push
mov
and
adc
lods
jns
pop
inc
sub
cmp
nop
mov
dec
repnz
shll
mov
out
out
fldcw
xchg
aas
push
xor
shlb
aas
dec
mov
hlt
inc
arpl
push
movsb
call
fsubrs
rclb
inc
mov
mov
inc
mov
push
nop
cmc
into
sub
mov
cmp
les
jns
sbb
inc
movsl
add
or
xor
mov
mov
lock
loope
filds
jae
xlat
ja
into
rcll
add
in
aam
les
sbb
imul
mov
inc
lret
xchg
sbb
inc
in
jle
data16
xchg
push
dec
out
dec
sti
jns
sbb
jecxz
inc
or
fcoms
cltd
fwait
cltd
stos
and
mov
outsl
mov
ljmp
pushf
and
mov
subl
fbstp
and
inc
sti
movsb
mov
test
js
in
add
dec
nop
mov
xor
repnz
sbb
inc
jno
xchg
ffree
dec
jmp
xchg
out
inc
add
dec
sahf
hlt
sti
out
stos
jmp
loop
sahf
and
insb
sub
test
lahf
mov
or
jg
xor
push
rorb
mov
not
rcrb
adc
add
cltd
xchg
rorl
add
inc
adc
inc
shrl
in
outsl
aas
xchg
pop
mov
sarl
push
push
sub
pusha
loopne
xor
data16
mov
clc
or
jb
sbb
push
cs
ss
jge
jnp
in
rorl
mov
and
jno
das
or
cmp
out
testb
test
lods
sbb
nop
shr
and
enter
xor
or
movsb
das
add
inc
jo
pusha
pushf
nop
and
sub
jle
mov
adc
lahf
jecxz
mov
push
ds
xor
rcr
mov
hlt
enter
mov
ffree
les
into
inc
xor
xor
frstor
xchg
adc
jbe
sti
push
je
rcll
aaa
dec
xchg
test
or
lahf
jl
inc
and
pop
jmp
cmc
enter
mov
adc
mov
adc
in
xchg
lret
dec
shrl
sbb
movsb
ljmp
loope
testb
and
xor
mov
jl
xor
rorl
push
jbe
orb
cmp
pop
test
push
sbb
call
jecxz
lods
mov
aad
adcb
dec
movsb
loop
adc
push
fwait
out
inc
xchg
sti
pop
sti
or
mov
jnp
fscale
mov
xchg
xchg
call
and
pop
std
xor
out
ljmp
jnp
cmp
or
push
notl
dec
pop
repz
mov
dec
call
popf
cmpsl
idivl
cmovge
jecxz
test
jo
mov
xor
movsb
ret
sbb
adc
daa
adc
fistps
repz
inc
test
in
or
inc
sub
in
cltd
fisubl
les
dec
icebp
or
sub
push
adc
mov
jge
or
test
xor
jo
xor
xor
cmp
or
js
rcrl
bound
loopne
jg
iret
pop
ret
popf
scas
out
and
out
andb
jb
sub
mov
push
mov
je
iret
add
dec
inc
mov
push
popf
mov
cltd
adc
jbe
out
pop
push
mov
fs
cmp
cmp
dec
mov
sbb
dec
jge
sub
mov
int
fstpt
pushf
aas
in
mov
adc
hlt
cmp
std
or
sub
pop
push
jb
in
xchg
mov
cmpsb
sub
std
and
add
jle
repnz
adc
xchg
fbstp
lods
sub
scas
mov
ret
mov
jmp
adc
xchg
xchg
add
sbb
and
jge
clc
xchg
jmp
cwtl
lret
inc
xor
add
or
repnz
jo
subl
mov
scas
nopl
int3
mov
jb
loop
xor
mov
popa
dec
ds
push
in
ret
iret
push
pop
negb
mov
mov
es
adc
mov
dec
dec
fwait
shlb
mov
push
popf
lods
xchg
jns
or
fimuls
jae
fs
or
imul
xor
nop
test
rorb
cmp
pop
in
pop
add
xchg
hlt
mov
mov
push
dec
xchg
pop
mov
add
lret
xchg
shll
jl
rolb
sbb
ljmp
fisttpll
xor
xor
sbb
dec
sub
lcall
cwtl
jne
mov
push
fsubrl
mov
gs
shll
fs
jbe
and
xor
inc
in
dec
inc
sub
and
rolb
hlt
sub
sub
lods
cmp
mov
mov
xchg
and
lds
or
loopne
idivb
jg
popf
pop
popa
push
div
shl
cmp
cmc
jno
xchg
dec
cmp
test
jo
mov
fistpl
mov
test
mov
test
loopne
pop
data16
movsb
rclb
aaa
pop
and
mov
nop
adc
and
shrl
cmp
mov
ret
lods
xor
cli
andb
or
das
daa
and
in
shll
jns
or
xchg
push
jne
or
inc
lea
dec
dec
push
jne
jl
cwtl
mov
mov
sbb
arpl
and
lret
ret
lea
insb
lea
in
jb
mov
jnp
stos
adc
sbb
xchg
xchg
and
stos
dec
shr
push
adc
inc
mov
pop
aas
pop
or
stos
scas
aam
stos
push
out
rcrb
xlat
xchg
sub
sub
repz
pop
cmpb
add
fisubl
add
es
lcall
push
mov
jae
imul
loop
data16
push
mov
int
test
cld
out
or
mov
and
sbb
int
and
dec
jbe
mov
xchg
adc
cmp
insl
sub
bound
ljmp
pop
mov
push
leave
aaa
cmc
outsb
push
mov
xchg
rclb
jae
cmp
aad
adc
jmp
pop
notl
cmc
or
cmc
mov
jns
movsb
dec
cltd
inc
ss
dec
fwait
int
sbb
mov
cmp
xchg
mov
jns
call
push
in
mov
dec
xchg
xchg
pusha
or
out
lock
int3
sub
dec
enter
ds
rcrb
inc
sub
push
cli
iret
mov
cmpsl
pusha
ret
xor
shll
mov
sub
mov
aad
push
sbb
mov
mov
pop
pop
popa
inc
pop
movsb
xchg
test
dec
rcrl
or
jo
je
outsl
cltd
inc
negl
into
push
cs
mov
jns
dec
incl
add
mov
cmp
mov
xchg
sbb
sbb
sbb
popw
xchg
and
xchg
xor
sbb
iret
mov
xor
mov
sarb
and
pop
and
push
aas
ficoml
mov
lods
sub
mov
pop
mov
jnp
mov
pop
add
push
pop
mov
mov
in
sbbl
push
or
xor
loope
and
pop
inc
faddl
push
push
dec
jg
sub
pop
cs
fwait
rorb
mov
xorl
lods
jbe
adc
push
loopne
insb
pop
sub
mov
xchg
stc
fnstenv
adc
and
mov
test
jle
add
push
outsl
push
xchg
and
mov
or
movsl
repnz
jbe
sahf
addb
and
std
inc
and
lea
test
sbb
mov
cmp
jne
daa
sbb
cmpsl
inc
pop
aad
rorl
out
cltd
ss
aaa
add
cli
jb
jecxz
xchg
imul
adc
jmp
jmp
lret
stc
movsl
in
sub
shrb
mov
jo
loop
insl
aaa
and
daa
mov
inc
leave
cmp
push
pop
sbb
and
add
pop
and
bound
pop
lret
sahf
ret
bswap
inc
in
push
push
fcomp
sub
pop
outsl
sbb
dec
fdivrs
jno
fwait
cmp
fistpll
pop
loope
mov
inc
rcrb
adc
out
mov
adc
mov
adcb
push
dec
insb
inc
leave
out
or
cld
leave
sub
pop
mov
add
xacquire
ficoms
add
inc
dec
mov
jl
xor
popf
es
sub
lcall
add
pop
out
xchg
je
cltd
sbb
shrb
movsl
gs
xchg
push
nop
sbb
pop
lcall
pop
iret
mov
jg
xchg
push
xchg
fsubs
dec
lahf
div
nop
sub
stos
mov
push
or
loopne
lds
adc
push
outsb
pop
cmpsb
adc
cld
mov
jle
ljmp
addl
inc
aaa
push
mov
and
cs
imul
jg
fiadds
push
mov
sub
testl
xchg
adc
std
and
sbb
ljmp
mull
test
push
cmp
dec
outsl
loope
sbb
outsb
lods
fadds
das
jae
or
lods
push
rolb
in
add
fwait
sbb
mov
and
sbb
pop
loope,pn
ljmp
dec
pop
xchg
dec
decl
lds
adc
xor
movsl
push
lret
xchg
loop
mov
pop
jle
insl
push
pop
test
adc
addr16
sbb
mov
aas
pop
pop
stc
mov
adc
xchg
aas
push
outsl
scas
pop
iret
cmp
rcrl
and
mov
ss
pop
mov
mov
cltd
movsl
test
lcall
pusha
jg
push
adc
popf
ljmp
sti
mov
mov
loop
into
dec
mov
xor
es
cs
mov
xchg
pop
dec
shll
insl
loopne
push
iret
inc
nop
jne
icebp
and
outsb
stos
mov
jo
push
xor
repz
ja
jle
clc
negl
pop
mov
arpl
or
repnz
les
aad
or
adc
les
cmp
dec
stc
mov
mov
imul
pop
cmp
jae
repz
cld
mov
stos
xchg
mov
or
sub
mov
cmp
aas
sti
dec
adcl
pop
jp
lcall
dec
es
xchg
adc
ss
sub
popf
jle
cmp
push
xchg
fnstenv
push
pop
add
cltd
cmpsb
mov
stc
add
push
faddl
inc
loop
stos
sbb
in
push
adc
cltd
ret
pushf
stos
mov
sbb
cmpl
les
jl
loop
mov
push
sub
in
lds
dec
cmp
push
lock
pop
mov
cmpsb
stos
sub
push
push
pop
push
mov
mul
arpl
cmp
sti
or
mov
bound
addr16
hlt
mov
cs
dec
hlt
jge
cmc
pop
fwait
in
inc
and
add
adc
bound
call
imul
cmpb
clc
test
imul
sub
push
adc
dec
sub
pushf
stos
xchg
dec
or
mov
shrl
cmp
jb
mov
scas
mov
shlb
cmpsl
ror
ret
mov
jae
sub
out
sbb
mov
jl
repnz
push
out
cmp
jae
add
mov
je
dec
mov
std
fs
xchg
clc
loop
sti
fstpl
pusha
in
ret
loop
in
test
lahf
or
ljmp
push
leave
dec
loop
sti
test
xchg
xchg
inc
cwtl
xor
inc
xor
repnz
out
into
mov
adc
aam
xchg
popa
and
pop
out
js
add
jmp
mov
sub
add
stc
mov
mov
sub
jecxz
jne
stos
cmp
mov
mov
push
inc
notl
cmp
out
mov
in
sbb
inc
fcoms
addl
popa
and
fisttps
xchg
xlat
jo
lds
push
sbb
loopne
mov
into
mov
cmpsl
push
mov
shlb
sbb
and
loope
mov
mov
shll
sbb
test
shlb
hlt
sbbl
js
dec
clc
adc
cmp
scas
fimuls
and
shlb
pop
imul
cmp
cli
add
out
lret
xor
out
pop
loop
or
int3
stc
dec
jnp
test
or
popl
out
add
leave
stos
repz
jo
in
out
or
test
pop
std
cli
sbb
xor
pop
scas
sarb
mov
jnp
notl
mov
repz
mov
pusha
mov
jne
and
pusha
sub
adc
dec
int3
cmp
pop
adc
xchg
jnp
cli
outsl
xchg
data16
in
aam
lret
shlb
push
mov
or
hlt
stos
mov
scas
andl
arpl
push
rclb
rcr
in
je
shll
push
pop
mov
xchg
push
dec
sub
push
mov
xorb
fsubl
cmpsb
scas
and
adc
out
lahf
and
jp
jmp
push
push
mov
stos
out
popf
push
movsl
scas
push
xor
sub
inc
and
pop
pop
xchg
cmp
lret
ficoml
sbb
test
rclb
test
fisttps
jbe
cli
mov
and
inc
sbbl
mov
nop
aaa
pop
fmulp
cmp
mov
jnp
inc
and
sbb
xlat
jne
movsb
div
mov
adcb
cmc
or
int
push
mov
stc
outsl
push
sub
jecxz
adc
sti
ficomps
pop
pop
js
mov
subl
mov
insl
push
and
out
aaa
adc
arpl
ljmp
fcoml
ret
jo
roll
cwtl
sub
lea
add
cmpl
fcomps
movsb
ds
push
cwtl
mov
mov
in
jge
bound
cli
mov
and
dec
into
aad
pop
out
inc
in
ret
ss
inc
cmp
and
sub
cmp
jae
xchg
push
lcall
jnp
lret
aaa
lahf
jno
mov
iret
sub
sub
jg
jnp
arpl
fldt
or
imul
test
enter
jg
mov
xlat
loope
aad
adc
add
stc
add
out
mov
xchg
push
rolb
lahf
lock
cs
orl
push
xchg
lret
sahf
sub
lds
lea
push
push
sub
insl
or
add
dec
xlat
jmp
mov
aaa
adc
mov
sbb
inc
test
cmp
movsb
mov
aaa
outsl
out
enter
sbb
pop
xor
loop
cld
adc
jmp
shlb
aas
mov
sub
int
inc
cld
movsl
pop
nop
ss
scas
xchg
pop
aaa
call
xor
xlat
mov
xchg
imul
mov
and
fidivl
adc
and
xchg
outsb
xchg
mov
inc
xchg
mov
test
imull
sub
add
xor
shrb
fsubrp
pusha
rorb
insl
in
push
push
imul
clc
mov
mov
sub
sbb
imul
loope
mov
enter
mov
imul
rcrb
cmpb
push
add
dec
push
loope
add
mov
ficoml
xor
sub
int
in
dec
inc
dec
lods
sub
jb
mov
jecxz,pn
push
js
and
movsl
inc
pop
icebp
cmp
iret
test
xor
mov
cmpsl
push
js
gs
ficompl
pop
stc
or
out
push
inc
call
sub
add
inc
mov
ret
lret
add
xor
inc
inc
test
push
arpl
or
loop
push
ja
xor
pop
xor
dec
pop
sbb
xchg
jecxz
xorb
cli
jle
jle
sbb
jg
nop
shrb
movsl
jns
ds
call
jge
dec
pop
outsl
inc
pop
mov
dec
les
and
add
jge
pushf
fwait
jge
cmpsl
scas
xchg
pop
push
in
inc
dec
pop
or
push
dec
dec
push
imul
push
cmpsb
aaa
rolb
mov
and
mov
cmp
pop
mov
sbb
sbb
inc
jecxz
push
aas
movsb
imul
jae
fistps
xor
in
jb
pusha
cmp
bnd
lea
insb
sbb
test
out
mov
ds
cwtl
fstpl
sub
das
mov
mulb
fdivs
inc
ss
stos
imul
xchg
adc
inc
rcrl
lods
repz
stc
cmp
lret
sti
push
in
sbb
js
in
add
xchg
mov
jae
icebp
jbe
stc
xor
cmpb
sti
js
xchg
lret
push
adc
out
xchg
fs
shrl
jl
popa
mov
cmc
cs
in
int
mov
sbb
lret
pusha
mov
movntq
out
adc
cwtl
insl
aaa
addr16
test
xchg
sub
sbb
jmp
adc
adc
cwtl
dec
out
lods
sti
mov
fistpll
mov
dec
jg
or
bound
jmp
xor
dec
aas
pop
lret
subb
inc
mov
clc
push
pusha
in
mov
divl
mov
shl
call
cmp
xchg
push
fildl
adc
sti
repz
jae
add
leave
inc
faddl
js
movsl
hlt
push
call
push
rcl
xor
loope
pop
enter
pop
sbb
mov
xor
mov
aam
movsb
test
sub
lret
aaa
lcall
out
addr16
fs
pop
rcrb
push
mov
push
fsubr
scas
pop
xor
imul
mov
out
outsb
sbb
scas
clc
enter
lock
pop
aam
shll
xchg
push
es
mov
xchg
xchg
mov
push
or
jle
daa
xor
ret
cwtl
rcr
adc
add
mov
mov
mov
lods
jg
rclb
xchg
mov
aad
jne
test
and
fcomip
push
imul
test
lods
xchg
std
std
sub
mov
idivb
push
stos
or
lret
es
lret
shrl
sbbl
jnp
add
pop
sti
ret
mov
cmp
mov
add
ljmp
or
fcoms
bound
jae,pn
repnz
and
mov
xchg
lahf
cli
push
adc
push
jnp
clc
xchg
mov
addr16
mov
cmp
xor
ds
or
lcall
cs
mov
sub
out
push
xor
aaa
popa
inc
hlt
inc
arpl
aas
adc
fwait
in
adc
movsb
movsl
mov
inc
mov
push
push
out
outsl
inc
mov
add
das
dec
add
mov
or
out
fstl
sbb
pop
ret
or
pop
push
push
out
cmp
xchg
dec
pushf
fistpl
repnz
or
es
ret
or
in
test
ljmp
sbb
mov
dec
push
dec
cltd
jmp
jns
push
ret
fnstenv
push
mov
adc
test
xchg
mov
cmp
lods
sbb
fdivr
cwtl
hlt
into
in
mov
test
mov
xchg
sahf
cmp
dec
andl
pushf
inc
xchg
test
adc
sbb
cmp
jge
inc
mov
leave
sub
jmp
xlat
pop
pop
cwtl
inc
std
das
pop
nop
test
lahf
into
and
aaa
jl
daa
fstp
mov
popf
and
sub
mov
mov
mov
shlb
insl
icebp
leave
leave
xor
int3
sahf
pop
cli
add
mov
and
ljmp
inc
fsubrs
iret
movsl
test
rclb
cmc
add
test
inc
ret
push
les
mov
loop
xchg
pop
pop
jg
adc
mov
cmp
movsb
adc
add
or
sarb
dec
cwtl
mov
jb
ja
lcall
pop
or
shrb
test
rcrb
outsl
out
push
xchg
ficompl
dec
sub
pop
sbb
shlb
xor
sbb
cs
in
or
das
sbb
js
sub
lahf
pusha
ljmp
popa
icebp
pop
out
xlat
add
sub
ret
push
scas
mov
push
fcompl
das
dec
push
jmp
dec
adc
push
push
or
hlt
les
hlt
enter
inc
xchg
sbb
in
dec
cmpsl
test
in
dec
mov
rcrb
outsb
ror
fmull
dec
sbb
aaa
xlat
lds
js
movsl
mov
mov
and
lock
repz
dec
es
mov
jl
clc
sbb
sbb
divb
iret
cmc
cmp
sbb
lock
adc
xchg
stos
roll
test
mov
cltd
push
aas
stos
daa
test
pop
mov
inc
cwtl
xor
or
rcrb
push
inc
cmpsl
or
leave
push
mov
sti
dec
mov
jg
stos
dec
cmp
push
out
sbb
lahf
mov
test
test
leave
mov
jp
jecxz
xlat
adc
pop
mov
or
cmc
rclb
mov
xchg
add
nop
or
and
shlb
mov
and
movsb
mov
sbb
xor
repz
and
push
pop
rorb
cmp
cmp
loope
cmpsb
rorl
lds
mov
adc
js
mov
jp
cmp
pop
cli
test
leave
cs
jnp
lcall
add
andnps
push
mov
push
lods
in
or
ret
jmp
sbb
cwtl
je
pop
xor
xor
jl
add
xor
repnz
add
push
fldenv
addr16
mov
xchg
test
rorb
shl
ret
out
ljmp
cwtl
ret
lcall
or
pop
arpl
mov
jno
pop
mov
inc
dec
dec
or
rol
jmp
mov
inc
imul
jg
test
cmp
inc
xlat
sbb
lods
mov
test
sub
stc
push
daa
xchg
int
push
jne
test
jb
pop
mov
lahf
mov
mov
mov
in
add
clc
sub
xchg
xchg
adc
fisttpll
sbb
divb
push
push
sub
mov
push
mov
xchg
xor
pop
cmp
sub
xorb
pusha
stc
addl
neg
in
dec
sbb
lcall
and
cmp
sbb
stc
xchg
jg
testl
inc
xchg
out
fcomp
adc
lods
and
movsb
int
icebp
and
ja
stos
aaa
in
out
lods
or
sub
mov
rcll
or
dec
or
shll
jge
mov
je
test
push
fmul
cmpsb
add
scas
mov
int3
nop
dec
mov
mov
jg
rolb
push
xchg
mov
popf
in
push
mov
xchg
pop
shll
inc
xor
rcll
and
xor
pushf
insb
cmp
out
mov
sub
jns
pop
mov
imul
push
jo
movsl
dec
cmp
xchg
add
sahf
stc
sti
imul
dec
inc
jl
sub
or
das
cmpb
dec
mov
mov
pop
lods
stos
mov
pop
pop
adc
and
xchg
sbb
es
xchg
cmpl
mov
xor
cwtl
pushf
popa
in
es
shlb
sub
xchg
dec
sbb
fsubr
adc
push
test
sub
xchg
sbb
cmp
cs
loopne
scas
fcomps
pusha
mov
addr16
fucomip
adc
repnz
jnp
xor
pop
xchg
neg
cmpsb
hlt
mov
inc
mov
mov
bnd
gs
or
popa
cmp
aas
sbb
rcll
in
and
jge
pusha
aam
shll
adc
div
fwait
push
enter
fstpl
faddp
sub
xchg
lods
icebp
fldenv
sub
sbb
ja
iret
ja
xor
mov
fmuls
loope
loopne
ja
stos
cmp
cmp
das
rorl
xor
pop
test
loope
mov
popf
cmp
sub
in
loopne
sub
popf
dec
fimull
cmp
pop
xchg
std
dec
mov
add
enter
or
adc
push
daa
out
xorb
pop
out
lods
xchg
test
call
and
in
lods
cmp
insl
jmp
das
xlat
fcompl
sub
lock
mov
sar
cmp
mov
test
mov
push
aad
cmp
jg
add
test
inc
xor
mov
out
xor
mov
fldt
cltd
cmp
jp
notl
rol
loopne
dec
dec
test
mov
leave
add
repnz
dec
imul
movb
mov
or
mov
sbb
sbb
cmp
aam
decl
test
sub
dec
mov
imul
loop
hlt
iret
xchg
jecxz
and
sti
pop
dec
pusha
rdmsr
lea
scas
and
push
mov
ljmp
push
inc
ret
lahf
sbbb
and
xor
out
jmp
scas
pop
xchg
inc
inc
int
test
js
xchg
loop
loopne
or
shrb
mov
lods
lahf
int3
jne
das
dec
mov
jae
es
repz
pop
sbb
out
mov
test
pop
push
and
mov
lods
jge
addr16
mov
popf
inc
and
sbb
jbe
jae
push
mov
jl
je
jns
data16
add
jle
inc
cld
out
popf
fisttpl
enter
cmp
or
jmp
sarb
push
jb
xchg
lcall
scas
mov
cmp
push
push
daa
xchg
xor
xor
push
add
cwtl
mov
pop
xor
xorl
push
jae
adc
mov
in
adc
je
mov
sbb
sbb
sti
lcall
jo
lds
adc
lcall
outsb
hlt
jb
repz
dec
insb
pushf
clc
adc
out
fs
mov
or
jnp
mov
shr
mov
push
in
jns
jb
outsb
push
xor
xor
and
movsb
insb
inc
push
arpl
mov
push
clc
cwtl
scas
or
mov
lahf
loope
adc
es
pop
or
imul
ret
dec
aad
adc
scas
add
sbb
jle
mov
adc
xchg
push
xor
leave
push
mov
mov
in
movsl
aas
sarb
push
sub
and
add
push
stc
shrb
sbb
mov
fdivr
pop
xchg
fisttpl
shl
dec
xor
les
inc
push
int3
dec
dec
aaa
pop
push
fsubrl
sbb
add
adc
xor
bound
mov
adc
add
mov
sahf
sub
jb
pushf
or
test
vpmacsswd
cmp
std
xor
decb
jo
cli
and
inc
jno
lock
roll
cmp
push
jle
sbb
out
nop
ja
into
sbb
sbb
jae
xor
or
fistpll
inc
pop
pop
out
rol
arpl
sbb
pop
sbb
mov
loop
and
test
stos
test
ret
div
loopne
or
or
mov
and
out
rolb
pop
popa
mov
sbb
or
pop
insb
pushf
test
test
xor
add
aad
xchg
aam
out
imul
push
dec
mov
out
add
lea
adc
mov
ret
lods
or
sub
lock
adc
mov
or
fnstsw
mov
cmp
call
jns
negl
pop
and
out
mov
xchg
dec
nop
xchg
jp
les
popf
or
les
out
push
xor
jle
popf
cmpsl
pop
lea
push
notl
inc
rcrb
xchg
dec
fnstsw
jae
sbb
fnsave
or
int3
sub
nop
fcomps
add
dec
xchg
stos
mov
and
pop
cmp
jp
mov
int3
lahf
fsts
in
push
inc
aaa
jl
xchg
or
xor
pop
jbe
cli
fwait
jmp
test
xchg
dec
aas
fcom
push
push
xchg
dec
or
ljmp
adc
dec
adc
adcb
add
lcall
inc
and
imull
in
adc
push
out
xchg
mov
xor
cs
xor
stos
cmp
jg
sbb
subb
push
dec
out
sbb
test
in
addr16
fwait
pusha
cld
adc
in
dec
fdivrs
cltd
mov
pusha
filds
add
inc
popf
mov
pop
xchg
xor
lea
or
cli
cmp
mov
pop
xchg
lods
push
pop
jg
pop
imulb
push
mov
and
scas
or
sub
add
aad
cld
cmp
and
jbe
dec
lahf
push
aaa
add
push
loopne
and
ss
es
cwtl
ret
cmp
pop
fsts
add
cld
in
je
lahf
push
out
popa
das
sbb
scas
loope
mov
rorl
adc
cmp
mov
popf
cld
jg
mov
dec
lret
push
fsubs
jns
jecxz
dec
dec
out
jg
cmp
jb
idivb
shl
fwait
clc
scas
inc
movsl
sarb
hlt
and
mov
inc
jnp
out
mov
aam
call
add
dec
nop
xor
fbstp
test
pusha
into
xor
insb
mov
loop
int
in
dec
ret
jae
ljmp
gs
mov
sahf
cmc
add
pop
in
fimull
lret
popa
cwtl
sbb
nop
inc
int
push
fwait
xchg
mov
xchg
rcl
andl
adc
inc
insb
pop
jae
mov
scas
mov
xchg
in
movsb
ds
scas
add
imul
negl
lcall
jl
and
int3
and
mov
mov
xchg
inc
pushf
lds
pop
pop
push
mov
xchg
cmp
add
sbb
jp
aaa
cmc
jl
jge
inc
or
add
sub
cmp
stc
inc
test
sbb
in
push
inc
bound
ja
inc
mov
xchg
jne
int3
adc
scas
adc
adc
jne
and
sti
pushl
scas
pop
cmp
cmpsb
rol
add
mov
pop
add
xchg
sub
push
mov
add
ud0
repz
push
mov
sub
pop
fs
ja
fldt
jl
mov
and
cmp
inc
jnp
cmpl
insl
movsl
or
add
adc
in
cld
inc
repnz
push
insb
cmp
rcl
pop
sbb
sub
clc
test
and
pop
push
scas
mov
dec
or
fdivrs
ja
add
loop
nop
addr16
loopne
mov
mov
fdiv
xchg
pop
xchg
add
fbld
mov
popf
xchg
sub
adc
dec
cltd
mov
jb
sbb
scas
testl
dec
fwait
push
test
lods
rorl
adc
pusha
out
mov
jmp
xor
call
aas
out
and
sub
sbb
cmp
ret
test
inc
daa
movl
into
lds
das
adc
jnp
cltd
test
jns
int
jmp
pop
repnz
mov
add
or
mov
fcmovnu
lret
fnsave
int3
cli
add
sub
cwtl
mov
dec
push
sar
or
fnsave
jae
mov
mov
pop
incl
push
xchg
mov
push
jnp
pop
mov
jno
add
push
rorb
es
andl
jge
lods
adc
roll
leave
cmp
ret
push
dec
stos
mov
mov
push
and
xor
decb
push
movsl
push
mov
pop
push
mov
scas
fsts
mov
cli
cld
sbb
mov
or
or
mov
rcll
rorb
lods
test
dec
sbb
adc
xor
mov
pop
adc
sarl
or
jp
xor
push
push
adc
sbb
out
adc
in
scas
dec
xchg
incb
sbb
in
pop
repnz
iret
jl
clc
mov
ss
push
pop
loopne
aaa
adc
sbb
test
push
mov
or
outsl
js
mov
or
pop
adc
sbb
test
in
push
xchg
ds
jge
mov
xchg
loop
mov
clc
out
lret
sub
xchg
ljmp
mov
dec
mov
or
adc
xor
call
or
push
xor
push
cmp
int3
fucomip
fwait
or
out
push
inc
cmp
mov
xchg
clc
sbb
jecxz
and
jnp
bnd
faddl
stos
cs
ss
sbb
data16
pushf
insb
loop
mov
rcr
push
pop
push
push
popa
push
mov
or
pop
js
or
fstps
les
int3
in
rorl
aas
mov
or
xchg
fsubl
shr
sub
push
pop
mov
cmp
pmaddwd
lods
stos
lcall
out
cmp
dec
jns
int3
leave
jle
stos
and
testb
fbstp
xchg
adc
out
adc
xchg
repz
inc
aad
push
fisttpl
ret
filds
push
repz
sbb
aas
icebp
jae
mov
mov
cltd
adc
mov
mov
pop
pop
lds
and
lret
xchg
scas
out
es
mov
into
push
sub
or
adc
jp
xchg
inc
sub
push
adc
out
mov
cmp
jne
push
add
notl
fimuls
mov
sub
cmpsb
call
and
mov
dec
lods
mov
ffree
pop
scas
insb
and
es
flds
push
jns
andl
add
cmc
pop
int3
xor
xor
jg
xchg
mov
sbb
pop
mov
std
repnz
adc
xlat
testb
test
dec
stc
loop
arpl
hlt
iret
adc
out
xor
out
jb
push
mov
jne
leave
jg
loop
adcl
fildl
and
das
jle
mov
sbb
out
xchg
lret
mov
inc
and
and
pop
add
adcb
daa
fistps
addr16
xlat
rcl
out
xor
mov
stos
xlat
mov
pop
hlt
pusha
pusha
xchg
aaa
jae
inc
ss
pop
outsl
mov
scas
pushf
sbb
dec
leave
sub
mov
iret
loope
lret
ss
js
dec
mov
jge
stos
lret
loope
repnz
sti
clc
in
mov
xchg
jns
les
es
sbb
or
fst
out
cmp
cld
movsb
inc
in
mov
mov
bnd
ror
mov
mull
xchg
fisttpll
mov
sbb
mov
inc
mov
jg
lock
stc
shrb
jns
jae
scas
fwait
sbb
divl
gs
das
dec
sub
cs
cli
jne
mull
dec
add
ret
pop
stc
jb
das
stc
jle
clc
add
mov
out
adc
sub
movsb
adc
pop
add
test
sbbl
adc
pop
lahf
ret
int
add
sbb
add
stos
lret
das
fmuls
push
negl
shlb
xor
in
push
inc
jg
mov
jnp
lods
mov
xchg
mov
das
xor
fdivrl
test
inc
in
sub
add
dec
dec
mov
xchg
repz
sbb
mov
iret
sbb
lcall
xchg
dec
cwtl
incb
mov
xor
test
mov
cmp
ficompl
jns
adc
mov
stc
or
lcall
movsl
or
aas
cld
mov
loopne
js
fisttpll
out
pusha
sahf
mov
push
cmp
jp
fdivl
divl
or
push
test
insb
pop
pop
mov
add
jecxz
adc
dec
lea
popf
dec
cs
movl
movsl
add
cmp
ror
aas
arpl
adc
subl
pop
out
lea
inc
inc
pop
andb
pop
push
push
rcll
inc
mov
repnz
icebp
push
nop
sub
test
or
jo
pop
sbbb
in
icebp
adcl
pop
ja
push
hlt
out
out
movsl
or
adc
iret
mov
add
dec
or
pop
and
inc
pop
fwait
cmpsb
dec
or
mov
push
fldt
push
sub
mov
cli
sub
push
cltd
xlat
adc
insb
jge
ja
xchg
or
jle
std
mov
sar
sbb
xlat
mov
jle
rcrb
sbb
ss
std
jge
sbb
jno
push
cli
or
and
mov
fimull
subb
sub
aas
and
cmp
adc
inc
mov
pushf
and
mov
jp
push
fistpll
outsl
cmp
xor
insb
and
push
fiaddl
fdivl
add
sbb
sub
in
pop
shrl
mov
js
push
sbb
xor
push
inc
in
pop
jno
popa
jbe
inc
dec
insb
stc
fsubrp
inc
mov
sarl
in
add
sbb
int
push
push
enter
dec
ret
jns
pop
dec
adc
insl
jle
sub
xchg
sub
sub
or
fisttps
jle
cltd
out
and
lret
lea
inc
scas
sbb
and
rcll
sbbb
leave
add
fstps
jne
fisttpll
dec
pushf
add
bound
insl
fwait
jae
adc
mov
xlat
pusha
mov
dec
mov
mov
das
jge
in
adc
rcl
push
loope
sbb
mov
inc
push
lret
cltd
cmp
sarl
jb
cmp
xor
aaa
das
icebp
in
adc
xor
aas
aam
daa
sub
jge
and
and
sub
in
mov
xchg
inc
pop
sub
sub
repnz
pop
push
inc
ja
insl
sub
lret
mov
jnp
pusha
sub
hlt
add
mov
adc
notb
mov
shlb
iret
pop
mov
cmpsl
mov
adc
mov
sbb
xor
loopne
inc
nop
loope
int
and
or
dec
mov
call
scas
add
cld
aas
aaa
lret
test
fwait
xchg
mov
insl
jecxz
adc
pushf
insb
dec
loope
or
int
js
arpl
lods
add
xchg
mov
add
push
mov
pop
mov
ss
and
inc
sub
retw
cmpsb
fdiv
clc
ret
mov
loope
sub
arpl
shll
sbb
cli
inc
jp
popa
mov
pop
push
inc
adc
push
lret
nop
sub
mov
stc
ret
ret
xor
and
test
fisubs
fsubs
movsb
lret
jae
enter
and
bnd
cmpb
mov
jle
call
in
adc
cmp
jb
jecxz
xchg
aaa
add
cmp
in
ja,pt
jecxz
xchg
fadds
shlb
movsb
scas
mov
sub
rep
jmp
push
sbb
pop
ret
lret
cld
adc
sbb
inc
stos
push
sub
cmc
adc
leave
xchg
lea
fs
faddl
cs
or
mov
inc
ficompl
imul
mov
adc
fs
or
ja
cmpl
mov
or
outsl
pop
push
mov
imul
call
add
dec
or
cmp
aaa
lahf
push
inc
aaa
lods
daa
cmpsl
add
add
stos
hlt
xchg
mov
jae
mov
outsb
int3
adc
dec
out
ja,pt
ja
shll
mov
rcl
cmpsb
jmp
mov
loope
push
fdivp
push
pop
or
push
int3
js
daa
icebp
or
dec
shrb
pop
push
insl
inc
cmpsb
dec
insb
jle
fcmovnb
out
bound
ds
jp
jle
scas
xor
call
cmp
jl
push
push
mov
shll
adc
aaa
mov
scas
inc
cmc
add
mov
cmpsb
pop
inc
in
pop
aam
pusha
in
jns
adc
inc
in
adc
or
sub
andb
sub
adc
lods
aad
test
cmp
or
out
popa
in
int
insb
in
or
xor
lods
mov
mov
jae
loopne
sub
mov
enter
cmpsb
shl
mov
fcom
sbb
mov
or
outsb
mov
adc
in
adc
pop
pop
mov
call
mov
js
lock
lock
repz
xchg
cmpsl
inc
lret
inc
les
jecxz
stos
dec
jbe
ficomps
mulb
cli
or
xlat
lods
mov
test
daa
ror
fisubrl
ds
sbb
mov
dec
cs
mov
arpl
aas
or
int3
push
mov
or
cwtl
lods
add
fcoml
dec
negl
jno
mov
mov
cmp
sub
es
nop
jb
js
aaa
add
jl
mov
movsb
inc
push
or
cmc
in
mov
test
mov
and
les
mov
mov
iret
lock
call
lgs
in
pusha
xchg
cs
jp
push
inc
and
iret
jle
fldcw
aam
stc
in
inc
arpl
aas
mov
pop
test
mov
inc
cmp
inc
mov
jecxz
cmp
mov
outsb
mov
dec
add
adc
stc
dec
jae
ss
push
jle
jl
fsubs
gs
mov
cwtl
std
popa
dec
pop
inc
arpl
dec
lods
addl
dec
xor
jge
mov
and
dec
and
sub
pop
je
inc
and
mov
ss
mov
icebp
jnp
inc
aad
jne
cmp
mov
test
xchg
or
adc
mov
jne
inc
daa
icebp
mov
fcomps
push
jecxz
nop
std
lret
and
dec
cmp
push
stos
pop
lods
arpl
jnp
mov
bound
imul
sub
xor
adc
andb
popf
pop
sar
cld
pop
mov
pop
les
mov
adc
imul
mov
loope
push
xchg
loopne
test
sub
lret
jae
xor
cmpb
inc
pop
subb
test
stos
scas
add
jbe
rolb
les
bound
mov
rorl
shrb
mov
mov
inc
repz
dec
sbbb
adc
jnp
andb
out
mov
leave
sbb
cmpsl
mov
push
pop
in
xorl
sub
jmp
mov
fidivrs
faddp
lahf
ficoms
repz
adc
daa
out
ret
jb
cmp
pop
mov
or
scas
and
andl
push
or
cmp
cmp
mov
lods
daa
jl
mov
add
add
mov
hlt
push
test
or
shll
add
xor
call
jnp
pop
xor
in
mov
pop
push
fmulp
adc
mov
maxps
scas
cmp
mov
cltd
hlt
jns
cmp
pop
into
xchg
ror
cwtl
daa
mov
int3
adc
cli
pop
xlat
and
mov
mov
push
and
adc
loopne
loop
dec
and
lcall
push
dec
dec
call
xchg
clc
insl
shrl
fimull
repnz
or
rorl
dec
mov
cmp
mov
dec
cmp
cli
mov
push
lds
stos
iret
lcall
or
mov
cmp
movl
xchg
dec
xlat
mov
xchg
loope
mov
sbb
iret
out
mov
stos
or
dec
popa
aaa
add
rorb
imull
imul
aas
sbb
xor
shrl
xor
inc
push
cmpsb
mov
push
mov
add
xchg
fisubrs
and
enter
push
mov
mov
mull
fwait
into
pop
imul
mov
push
jb
add
jb
orl
js
ljmp
add
sbb
inc
dec
pop
xchg
xchg
add
sbb
xor
sub
adc
lea
mul
gs
stc
in
shrl
scas
push
cmpsb
mov
push
and
inc
xor
rep
in
popa
dec
rcll
orl
stos
pop
mov
cmpsb
cmpsl
inc
mov
pushf
aas
sub
insb
int
insl
decw
jns
stos
mov
movsl
rorl
xor
pushf
cs
mov
mov
mov
add
nop
movsb
in
xor
ss
mov
cmp
stos
imull
adc
ss
das
xchg
imul
and
pop
push
in
jbe
pop
lods
add
mov
mov
or
cs
ja
stos
sarl
stc
pop
xor
sbb
mov
dec
cmp
pop
out
push
icebp
cmpsl
and
mov
data16
outsl
mov
mov
and
ss
jmp
mov
lock
fdivr
jmp
push
fadd
out
in
cli
mov
aam
out
jmp
idivb
sub
stc
add
into
pop
repz
inc
mov
lock
xor
std
adc
jae
sub
testb
call
sbb
mov
inc
mov
xor
sub
push
lret
cmp
cmc
push
outsb
cmp
mov
adc
mov
pop
movsl
dec
fldt
js
call
xchg
pop
aam
push
sub
jns
test
sbbl
mov
icebp
pop
and
stos
aaa
xor
adc
cmpsb
dec
into
jecxz
mov
aaa
testb
dec
test
jno
filds
out
icebp
push
sbb
in
outsl
mov
andl
ss
push
cmp
cld
mov
rcll
adc
xor
jl
sahf
iret
jmp
pop
pop
mov
xor
xlat
dec
lret
pop
into
mov
and
mov
xor
mov
jns
mov
aad
cmp
subb
xor
inc
lahf
adcb
fildll
dec
mov
notb
xorl
popa
push
addb
fimuls
movsb
dec
dec
dec
std
sub
mov
mov
movsl
push
sub
cli
pop
push
sub
mov
ja
jp
std
cmp
cmc
dec
pop
jns
or
in
leave
imul
divb
sub
dec
mov
rol
outsb
jle
sbb
pop
dec
sub
out
xchg
rcrl
dec
repnz
pop
cld
out
sti
in
out
mov
dec
cmpsb
iret
mov
xchg
ret
movb
add
xchg
cmp
xor
test
dec
xchg
ud1
int
or
jo
inc
lcall
dec
xlat
mov
jmp
inc
ds
insb
jne
jmp
in
clc
inc
out
js
andb
cmc
fucomp
mov
sub
xchg
xlat
jo
imul
sub
jns
imulb
cmp
xor
insl
xchg
adc
and
loopne
sub
or
icebp
cld
xor
dec
mov
jns
stc
pop
or
xor
xor
cltd
pop
xchg
sbbb
adc
sahf
pop
mov
sbb
in
ss
std
lods
neg
data16
shll
mov
add
jno
mov
mov
pop
mov
into
mov
sbb
sub
pop
jae
sub
je
out
pop
leave
lret
jecxz
xchg
fnsave
mov
sbb
push
add
cwtl
inc
mov
jb
dec
lcall
cmp
leave
dec
push
clc
lcall
fmull
dec
push
adc
pop
xchg
test
mov
sbb
dec
dec
add
int3
pop
aad
jae
addr16
inc
add
pusha
in
loope
cs
insb
cli
pop
pushl
shrl
adc
xor
in
jp
xor
insb
sub
dec
ja
test
sub
pop
or
arpl
pause
movsb
and
test
js
and
fwait
dec
or
jg
sub
pop
add
icebp
enter
and
sub
stos
cmc
divb
rcl
inc
cmp
loopne
jbe
jl
clc
shlb
add
hlt
aad
aaa
push
xchg
add
lods
push
cmp
subb
rorb
pop
clc
jle
sti
adc
add
lret
in
mov
addr16
mov
loope
xchg
push
out
pop
mov
adc
pushf
movl
mov
out
mov
outsb
sub
loop
or
sub
mov
jb
xchg
jno
mov
mov
pusha
incb
mov
adc
dec
mov
jge
jb
jmp
lea
les
fdivrl
movsb
cmp
repz
cmp
push
mov
push
mov
or
enter
cmp
cmpl
insl
add
into
push
leave
adc
xchg
cmpsb
mov
loope
xchg
fisttpll
fsubr
mov
int
adc
imul
aad
pop
fmuls
sbb
les
into
sub
sbb
bswap
xor
and
enter
push
daa
and
inc
fistpll
add
jge
fstps
fldcw
mul
mov
cli
mov
testl
add
dec
jge
sahf
sub
adc
in
mov
popf
in
push
aam
xor
xchg
stos
mov
lcall
mov
call
mov
shlb
sbb
or
mov
mov
pusha
mov
andl
jns
sub
sub
stos
xor
jns
arpl
aas
mov
push
out
leave
in
es
js
adc
pop
test
call
pusha
pop
dec
xchg
popf
mov
sarb
cmp
pop
fiaddl
mov
jo
sbb
mov
cmp
out
subb
das
outsb
jmp
pop
loopne
daa
xchg
out
mov
arpl
sti
outsl
inc
mov
jp
lret
ljmp
cmp
xor
lods
push
ljmp
inc
dec
ds
or
mov
inc
pop
inc
pop
sbb
mov
jg
fsub
or
pop
mov
sbb
mov
repz
cmova
push
sbb
jle
mov
inc
bound
mov
into
repz
adc
aas
fsub
xchg
dec
pop
push
xor
xor
lock
lock
jns
xor
pop
and
adc
pop
cmp
pop
jne
xchg
xchg
insb
push
dec
push
outsl
aas
dec
cli
xchg
jb
sbb
sbb
mov
dec
and
test
jb
shl
adc
cld
xchg
mov
pop
ljmp
cmc
jb
add
adc
pop
pop
push
test
inc
fs
and
mov
fidivs
dec
mov
mov
push
scas
out
pop
sub
fbld
xchg
mov
cmpsb
inc
cmp
push
cmc
jae
int
std
jge
cli
lds
stc
pop
sbb
inc
clc
mov
shl
jns
flds
in
xor
inc
mov
cmp
inc
pop
push
and
arpl
test
sbb
mov
std
in
out
xchg
mov
lahf
imul
rcl
and
enter
lds
or
jmp
jmp
fidivrs
icebp
sbb
adc
js
out
cmp
xchg
loopne
and
push
ja
test
sub
sbb
jecxz
hlt
xchg
std
ja
je
pop
dec
outsb
add
rorl
data16
sti
jecxz
or
and
fs
push
arpl
mov
jmp
aam
sbb
and
pop
push
imul
push
add
mov
rclb
scas
push
xchg
cmc
sbb
iret
sub
push
push
es
and
or
clc
inc
add
xchg
repz
sar
sbb
jle
fwait
ljmp
cld
fadds
mov
mov
push
inc
jge
cmpsl
cmp
arpl
aas
push
mov
xor
mov
lcall
rcl
push
jo,pn
stos
add
mov
push
cli
dec
inc
add
mov
das
push
cmp
adc
dec
xchg
sub
pop
mov
lock
repz
cmpsl
cltd
jle
je
inc
iret
fucom
cld
add
int3
arpl
inc
leave
push
push
lods
test
aaa
pop
iret
ja
mov
xor
mov
mov
cs
dec
push
xchg
xchg
xchg
sub
jns
fistps
fwait
repz
dec
test
lods
jg
movsl
test
enter
lcall
add
ret
mov
shrl
xchg
pop
xchg
or
pmulhuw
and
std
lret
sbb
sub
add
inc
mov
sbb
dec
ljmp
mov
xchg
pop
xchg
mov
xchg
lds
sub
push
outsl
jne
test
out
push
rcrl
sti
cmpsb
popa
add
shl
leave
mov
jno
into
mov
add
mov
ljmp
repnz
sub
mov
sbb
add
adc
mov
push
mov
roll
or
outsb
cmp
out
lock
adc
cwtl
outsl
std
fstpl
test
mov
or
dec
sbbb
cmp
mov
out
inc
pushf
ss
test
mov
dec
subb
fwait
test
nop
mov
shrb
lret
frstor
push
xchg
pop
aam
in
mov
mov
into
out
push
xor
adcl
sbb
sbb
movsb
aam
fiadds
cmp
out
nop
jno
lahf
add
insb
inc
loopne
xor
mov
imul
jnp
jb
ljmp
xor
jl
mov
dec
imul
push
push
fisttpll
jb
arpl
lcall
movsl
in
fldcw
imul
cli
daa
out
insl
and
and
push
repnz
imul
insl
adc
mov
in
ljmp
lock
mov
hlt
cmp
mov
aad
stos
nop
dec
dec
aaa
push
sub
adc
push
inc
jle
mov
xchg
cmp
fst
ljmp
cs
popf
mov
adc
shrb
outsb
aas
lock
cmp
movsl
out
pusha
xlat
repz
ss
dec
mov
dec
sbb
cld
xchg
das
lods
je
dec
dec
mov
cwtl
sbb
fcom
cmpl
cmpsl
int
int3
ficompl
pusha
out
in
aas
fcmovnu
pop
xor
mov
jg
sbb
xor
sbb
push
jmp
lods
out
jns
loop
int
push
cs
mov
enter
leave
xchg
pop
jle
adc
jg
push
ret
xchg
call
mov
inc
outsb
xchg
pop
scas
xor
test
in
xor
or
xchg
loope
adc
mov
cmp
jns
dec
fmul
cmc
aam
or
mov
xchg
sbb
insl
mov
nop
filds
loopne
mov
cs
cmp
xchg
xchg
cmp
cmp
aad
aas
cwtl
sbb
cmc
lahf
mov
lcall
xchg
xchg
pop
movsb
arpl
test
shll
scas
pop
andb
cmp
pop
pusha
push
xchg
jecxz
outsl
add
call
xor
sub
ret
stos
test
dec
std
xor
hlt
sub
xor
cmp
inc
dec
dec
cli
psrlq
arpl
mov
xchg
out
shl
push
push
pushf
xchg
xor
icebp
xor
out
push
push
ret
xchg
or
mov
mov
pop
inc
pop
xor
test
jno
cld
mov
mov
or
daa
and
test
cmc
lods
loop
xchg
incl
inc
dec
jns
mov
in
xor
scas
mov
push
push
xlat
xor
or
mov
ret
fstl
cwtl
mov
repz
sti
mov
rorb
es
adc
cmp
int3
ja
inc
ficomps
nop
push
outsl
lds
push
mov
popf
rcll
dec
add
sub
sbbl
sbb
stos
sbb
mov
add
movsb
inc
in
push
jmp
jl
shrb
test
mov
pop
das
add
xchg
mov
aam
xor
mov
and
movsb
jns
inc
and
push
mov
pop
cli
push
and
lock
idivb
add
stos
loopne
adc
mov
xor
jp
xchg
add
mov
xchg
inc
fsubs
pop
cwtl
inc
loope
fcomp
testb
mov
pop
sbb
sub
repnz
ss
gs
insb
push
jb
enter
sub
pushf
push
lahf
mov
jnp
cli
bound
ljmp
das
mov
repnz
mov
sbb
pop
push
mov
mov
or
lret
mov
and
and
hlt
or
pop
sub
sti
jbe
xor
pop
fs
sarb
scas
xchg
rcll
fistpll
frstor
ss
test
fisttpll
push
mov
cmpb
sti
xchg
ljmp
mov
lock
cmc
xchg
cmpl
cmc
or
xor
cwtl
pop
in
sbb
fcmovnu
sub
lods
lods
mov
pcmpgtw
popf
insb
dec
jmp
scas
pop
mov
and
aas
mov
daa
and
in
je
daa
add
sahf
ja
popf
aam
mov
jecxz
xchg
movsl
dec
loop
insb
sbb
adc
cmpl
cli
int
push
int
xlat
push
add
scas
test
jno
sbb
fistpll
mov
insb
in
jl
or
sbb
adc
dec
iret
sub
dec
hlt
sbb
fmuls
add
pop
sub
aas
lock
pop
idivl
cmc
into
test
cmovbe
addr16
frstor
pusha
leave
inc
enter
imul
push
add
dec
cli
popa
scas
mov
push
adc
decb
out
sub
repnz
dec
ds
add
mov
sub
sarl
test
jmp
ja
arpl
loop
mov
ret
dec
mov
in
push
movsb
jle
mov
xor
add
jmp
push
inc
jge
mov
insb
mov
testl
jb
rcrl
and
mov
repnz
dec
repnz
mov
insl
std
mov
cmp
cwtl
hlt
pop
cmpsl
xchg
lahf
addr16
jo
adc
mov
pushf
or
adc
lea
in
pusha
js
inc
pop
iret
mov
jg
movsb
sub
sub
inc
mov
and
daa
xor
mov
or
shrb
out
sbb
dec
pop
into
dec
mov
mov
xchg
mov
jbe
aas
cltd
rcr
ret
pop
mov
orl
addr16
push
xchg
pushl
mov
nop
cmp
xchg
jne
sbb
cmp
addl
or
lret
pop
sbb
mov
sbb
add
test
push
sar
insb
rcrb
mov
call
add
mov
dec
push
xchg
push
lods
xor
ret
test
pop
repz
pop
push
repnz
jle
jmp
mov
lock
ljmp
iret
cld
cltd
stos
dec
cltd
lret
xchg
and
std
enter
das
cmp
scas
pop
ljmp
cmpsb
data16
xchg
movsb
xor
push
sub
pop
xor
and
inc
test
sti
mov
outsb
sub
js
rcrb
fstl
mov
or
cmp
mulb
lods
xchg
and
lea
sub
mov
xchg
pusha
xor
cwtl
adc
add
lds
movsl
divl
fstps
pop
push
mov
pop
ljmp
mov
cmpsl
inc
cmp
addl
lods
scas
fadds
adc
lahf
fnsave
mov
sub
inc
cs
in
cwtl
cmp
jp
add
or
lahf
popa
divl
mov
enter
push
cmp
push
sub
loop
aas
cmpsb
cmp
and
testb
cltd
xor
xor
jb
aaa
sub
mov
mov
add
push
bound
data16
imul
mov
imulb
mov
sbb
fcomi
in
imul
daa
call
and
xchg
arpl
xchg
pop
mov
sbb
rolb
dec
adc
and
negl
mov
cmp
dec
mov
jno
fcompp
ljmp
dec
cwtl
lahf
out
push
push
add
fsubl
inc
jle
arpl
fdivrs
xchg
xchg
jae
sub
sbb
lock
sbb
xlat
jo
mov
fistps
rcrl
xchg
or
mov
add
xchg
mov
or
cmp
push
inc
popa
xchg
adc
xacquire
jbe
sahf
jecxz
mov
pand
out
lret
das
xor
jg
rcr
adc
icebp
aam
jnp
out
pop
lret
bswap
pop
push
dec
pop
sub
iret
stos
andl
loopne
pushfw
lahf
mov
xchg
mull
jns
push
lahf
in
imul
stos
std
add
fimull
mov
mov
scas
push
dec
and
mov
and
pop
ret
adc
inc
add
rcrb
cld
dec
fsubrl
mov
xor
sbb
stos
dec
xor
in
arpl
pop
adc
sub
adc
stc
loop
and
add
xchg
mov
add
xor
loop
push
jno
dec
push
jg
xchg
ds
aad
jp
jecxz
hlt
or
sbb
inc
pushf
jp
ds
cli
cli
mov
inc
pop
inc
cmp
lcall
fsubl
jae
shl
mov
pop
popf
dec
es
mov
dec
sub
jecxz
repz
std
pop
dec
add
testl
pop
sub
test
and
jmp
cmp
dec
adc
dec
dec
xsha256
cmpsb
xchg
mov
les
mov
push
sub
lea
mov
mov
sti
dec
les
xchg
adc
cmp
data16
xchg
cs
add
dec
pop
xchg
mov
mov
cltd
jb
sub
add
in
inc
ss
mov
test
or
aaa
or
cmc
imul
xchg
push
inc
daa
ret
push
dec
out
lret
clc
int3
lcall
outsb
mov
lods
mov
fs
sbb
lcall
jp
test
jno
jns
iret
adc
sub
lret
add
test
mov
adc
aaa
stc
push
pushf
xor
mov
mov
daa
imul
out
cld
cmp
pop
dec
xor
fcoml
in
loope
adc
adc
stc
orl
adc
fcmovbe
fisttpl
or
call
lcall
mov
fsubrl
push
std
test
pushf
inc
pop
cmp
mov
daa
jle
and
push
sub
pop
fisubs
loopne
xor
shll
pop
pop
dec
cli
movsl
cld
loope
or
adc
fnstcw
lods
mov
xchg
mov
ds
fsubl
sbb
out
dec
bound
mov
mov
lock
mov
fcompl
les
adc
lcall
sub
cmpsl
into
pop
mov
xchg
ja
fistps
test
cmp
push
mov
test
mul
flds
fwait
sub
jno
mov
iret
out
cmp
dec
jmp
sti
mov
xchg
fcoml
xlat
dec
ja
push
push
fstpl
test
jp
lea
in
daa
push
arpl
dec
fsubrs
mov
into
subb
cmp
andb
push
mov
push
stc
xchg
idivb
mov
mov
cmc
clc
and
cmp
mov
mov
add
and
xchg
mov
mov
inc
cmp
pop
sbb
mov
mov
adc
jg
cmp
pop
xchg
pop
movsl
sub
mov
jnp
cs
pop
jns
sub
jecxz
dec
or
mov
push
push
push
or
repz
repz
mov
cmc
scas
and
cmpsb
mov
popf
sub
mov
fistpll
test
adcl
iret
or
addr16
sbb
aaa
aam
rorl
jg
and
mov
ret
scas
int3
mov
ret
pusha
nop
jns
add
push
or
scas
fisubl
fmull
sub
lods
pop
call
inc
sub
roll
jmp
cmp
es
ja
sub
adc
pop
jno
pop
sarl
add
js
test
jg
fisttpl
sub
mov
push
dec
pop
cltd
mov
aas
or
rcrl
sub
xchg
sbb
adc
lcall
rorl
add
mov
in
outsl
addl
xchg
dec
movsb
pop
add
movsb
push
dec
fdivrp
subb
popf
lods
jns
popf
xor
xchg
mov
mov
jle
pop
rcrb
add
into
xlat
cs
ficoml
cld
xchg
add
or
inc
fimuls
inc
pop
cld
and
mov
test
inc
push
imul
movsb
into
hlt
lock
cltd
movb
xor
or
test
jecxz
lds
xor
mov
mov
movsl
sarl
mov
jno
jns
pop
lcall
push
jle
loope
push
pop
hlt
cmp
fwait
je
ljmp
je
jbe
pop
ja
test
ret
imul
adc
cmp
aad
mov
sti
sbb
jnp
pop
adc
sbb
bsf
ret
xchg
push
faddl
xor
and
into
ja
adc
xor
mov
xor
loopne
leave
sbb
mov
xchg
imul
insl
std
leave
mov
mov
add
dec
mov
dec
sbb
push
inc
pop
mov
jecxz
pop
sub
loopne
mov
sti
in
shlb
jno
shrl
andl
push
outsb
jecxz
inc
inc
stos
jne
mov
or
insb
cltd
push
add
mov
repz
inc
adc
dec
dec
and
loopne
lcall
movsb
mov
fcomps
lret
je
loop
inc
jmp
sub
mov
lahf
mov
mov
out
push
inc
pop
dec
mov
push
sbb
mov
adc
xchg
or
push
jl
pop
mov
cmp
repz
enter
pusha
or
xor
and
push
movl
mov
jp
jmp
dec
lock
shr
cmpxchg
sarb
add
pop
stc
push
pop
cltd
sahf
in
leave
adc
lret
sub
in
push
aaa
xchg
mov
fcompp
stc
xchg
mov
orl
mov
int3
je
cmc
adc
ja
sub
fidivs
sbb
lahf
or
gs
pop
mov
jns
stos
mov
jl
lea
pop
inc
add
pusha
or
add
ds
mov
inc
mov
dec
push
jge
arpl
nop
fcmovb
test
mov
inc
cmp
jns
inc
fwait
or
cs
push
push
lods
jle
out
push
lret
dec
out
sub
cli
leave
mov
into
jmp
lret
jge
pop
je
cmp
les
repz
arpl
adc
dec
int3
sub
inc
lahf
lds
out
sbb
mov
stc
inc
sbb
mov
pop
pop
test
in
dec
stc
scas
jp
sbb
lret
adc
movsl
loope
push
push
je
adc
in
xchg
lods
cmp
pop
mov
shr
lds
mov
out
cmpsb
or
mov
mov
fmull
shr
mov
pop
fdivrl
outsl
adc
or
jne
mov
xchg
mov
les
mov
dec
out
push
xchg
xchg
jno
jno
stos
movhps
bound
jmp
ret
movsb
push
jbe
mov
pop
out
push
adc
mov
pusha
and
xchg
sbb
les
lahf
adc
idivl
inc
cld
or
cmpb
les
sbb
mov
push
daa
dec
push
jns
js
xor
cwtl
test
xchg
les
les
addb
add
in
mov
arpl
push
in
or
aam
and
js
pop
cmp
shlb
std
cli
push
stc
add
sahf
lahf
sbb
fwait
sbb
push
call
je
cld
into
mov
clc
xchg
jle
stc
or
jl
std
mov
and
add
test
adc
push
mov
pop
mov
and
inc
es
int3
pop
cmp
mov
and
mov
std
popf
cmpsl
lea
cmp
js
ficompl
xor
outsb
out
orb
sub
pop
cltd
ficoml
adcb
in
ss
test
pop
sub
fstps
mov
pop
js
push
dec
mov
jmp
jb
popf
subb
mov
lods
test
repnz
int
cmp
stc
lock
push
hlt
mov
xchg
adc
push
insb
mov
shll
sahf
and
and
cltd
rol
push
push
add
ret
int3
repz
xor
mov
movsl
outsl
mov
push
icebp
xlat
dec
movsb
dec
in
movsb
fildl
loope
and
fcmove
sbb
xchg
inc
inc
pop
das
fidivl
add
je
aad
andb
fwait
or
mov
mov
in
ds
aas
or
aaa
cwtl
mov
sub
neg
cmp
inc
stc
cld
or
mov
sub
pop
mov
testb
inc
mov
lret
mov
test
add
lret
sbb
aas
cmc
mov
popa
cmpsb
cmpsl
sbb
jb
mov
push
daa
adc
or
faddp
sub
dec
out
mov
mov
imull
mov
jo
in
cs
or
mov
jmp
xchg
push
aaa
xchg
lcall
push
jmp
or
xchg
jmp
out
jle
and
adc
outsl
sbb
fisubrl
cmp
test
push
daa
sbb
cld
inc
xchg
pop
push
stc
adc
es
insl
adc
mov
xchg
fisttps
dec
xor
jns
inc
cmpsb
xchg
int3
mov
out
ja
shll
out
shlb
sub
pop
out
mov
cld
jb
sti
stos
and
inc
jge
cld
push
outsl
xchg
pop
sahf
test
add
or
cld
jae
lds
sbb
jbe
push
iret
pop
sarb
mov
cmp
aam
inc
cmp
adc
enter
mov
sbb
movsb
pop
ss
test
repz
rcll
push
and
sbb
push
sahf
xchg
fwait
and
cmp
int
cmp
sarb
xor
inc
push
data16
mov
inc
jne
mov
stos
out
jo
fistpll
cmpsb
mov
rcl
mov
cmpsb
add
aad
push
sbb
mov
in
cmp
lret
cld
aam
cli
out
or
lret
addw
mov
aaa
pop
insb
mov
insl
inc
scas
xchg
pop
mov
rorb
xchg
out
xlat
cltd
js
xchg
mov
xchg
movsl
cwtl
jnp
and
subl
pop
push
dec
ljmp
mov
push
aad
sbb
xchg
in
ljmp
add
cltd
push
incl
xchg
mov
stc
psubd
adc
cwtl
inc
fbld
sub
pop
or
enter
or
loopne
fdivrl
inc
pop
or
int3
dec
push
mov
pop
xor
dec
push
in
pop
mov
mov
pop
popf
adc
push
dec
ret
aaa
dec
sti
jge
push
insl
test
fstpt
aam
sbb
cmp
js
add
popf
mov
mov
pop
jbe
ljmp
xlat
dec
mov
adc
mull
cld
pushf
push
ljmp
inc
int
xchg
adc
mov
sbb
mov
pop
imulb
xchg
adc
push
imul
sub
mov
mov
xor
xchg
or
sub
pop
push
dec
leave
inc
movb
mov
mov
test
or
cmp
add
ljmp
jle
sbb
bound
adc
adc
in
dec
aas
scas
fs
test
out
test
push
jecxz,pn
outsl
sbb
fwait
cli
push
inc
imul
mov
xlat
out
into
and
and
aaa
inc
jmp
iret
repnz
stos
xor
push
mov
xchg
cmp
mov
popa
jo
mov
gs
scas
je
std
decl
or
fsubr
mov
and
fdivl
cwtl
xchg
out
jno
and
or
dec
dec
pop
push
popa
mov
punpckhbw
push
pop
dec
fs
sbb
xor
add
dec
xchg
lods
mov
ret
insb
sbb
pusha
pop
or
cli
roll
add
loope
repnz
out
mov
nop
fdivrl
subb
aas
mov
sbb
subb
in
dec
adc
dec
test
xchg
out
sahf
sub
inc
mov
xchg
push
out
jecxz
popf
or
cld
aas
int
mov
ljmp
aaa
xchg
shrb
clc
fs
lret
negl
adcl
sub
xor
out
fnstcw
repz
loopne
orl
outsb
lcall
in
and
pop
cmp
cwtl
divb
lret
mov
leave
fwait
or
enter
inc
out
xchg
or
cmp
push
cmpsl
push
or
in
js
int
jg
cltd
scas
arpl
cli
outsl
lds
mov
jp
flds
ficoms
ret
in
jbe
fwait
mov
test
aaa
clc
notl
in
mov
call
ljmp
cmp
cmp
dec
sbb
push
mov
fildl
data16
push
mov
out
faddl
cs
or
lods
adc
push
cmp
test
and
xor
sbb
push
fsts
rorl
and
add
mull
sub
test
xchg
adc
in
inc
lea
xchg
xchg
sarl
scas
dec
jno
dec
mov
aam
in
mov
je
or
add
mov
je
aad
mov
hlt
ss
adc
jbe
and
test
mov
and
out
jg
jmp
mov
lea
insl
arpl
sub
xchg
mov
xchg
lret
push
out
sbb
push
test
aaa
ret
data16
lcall
test
stos
push
ljmp
mov
sbb
lods
pop
cltd
xor
das
out
ret
or
sarb
push
sub
pusha
jb
loope
fwait
movsl
xchg
xchg
jo
push
or
sub
mov
add
cmpsb
lcall
jmp
sbb
mov
pop
dec
jge
xchg
cmp
xlat
dec
pop
test
mov
sub
out
mov
shrb
ss
sbbl
jae
sub
lret
or
add
in
rclb
add
repz
push
movsb
mov
jecxz
stos
fstpl
adc
mov
cmp
xor
movsl
loop
xchg
hlt
push
xchg
sarb
sbb
inc
xchg
jnp
dec
lds
sbb
adc
cmp
dec
lods
jecxz
out
imul
shlb
clc
pop
jae
push
cld
dec
xchg
loope
sub
inc
daa
xchg
repz
lock
pop
ret
cmc
sub
les
test
stos
jns
dec
cmpsb
jp
push
sahf
aaa
xor
dec
xchg
xor
adc
imul
nop
stos
sbbl
ss
mov
ljmp
out
dec
or
outsb
sbb
outsl
scas
push
shlb
loope
mov
and
sub
in
lahf
jmp
enter
and
sbb
lods
outsl
jp
arpl
push
imull
je
scas
test
idivb
add
pop
pop
std
lods
bound
inc
ror
jl
shr
je
mov
mov
mov
sub
loope
mov
xchg
xchg
outsl
mov
ljmp
jge
jns
push
aas
in
jp
mov
ljmp
sub
inc
adc
hlt
push
ja
pop
mov
pop
adc
mov
es
int3
andl
addb
test
mov
or
aaa
fadds
adc
adc
jnp
insl
aaa
or
pop
cmp
cmpsl
pop
sbb
jmp
pop
js
std
jo
push
bound
fdivs
loopne
xchg
xlat
pushf
cmp
rcrb
mov
push
inc
stos
or
inc
aad
popf
lea
mov
enter
and
mov
pop
das
ds
dec
jmp
mov
inc
jns
iret
xorb
add
gs
xchg
arpl
jnp
mov
orl
and
adc
and
xor
aas
mov
idivb
into
pop
mov
adc
stos
sbb
pop
cmpsb
push
out
or
mov
sbb
pop
sub
aas
fidivl
dec
pop
push
mov
jge
cmp
test
jne
sbb
loopne
ja
negl
fnstenv
pop
pusha
fistpll
xchg
aas
mov
rep
notl
clc
lods
movsb
psllq
subb
xor
lods
lds
inc
iret
cmpsb
out
inc
out
lods
bound
xchg
add
push
testb
repnz
jg
test
lods
jp
mov
notl
add
xchg
andl
lods
rcrb
fs
leave
xor
je
dec
test
adc
int3
jnp
xchg
adc
sbb
jp
dec
out
cmc
fsts
clc
xor
xor
in
in
mov
mov
movsl
and
insb
ds
mov
test
popa
jo
sti
xor
mov
insb
xchg
out
stos
adc
adc
jbe
enter
mov
test
mov
in
or
add
div
xchg
add
shr
xchg
inc
mov
jno
mov
xor
dec
testb
push
and
subl
sub
sbb
xor
mov
ss
dec
jb
out
mov
jle
leave
push
sbb
imul
xchg
hlt
adc
add
lahf
fistps
movsl
xor
cmpsl
rorl
mov
sub
cs
add
push
lock
sub
pop
add
mov
rolb
sub
and
rcll
pop
mov
dec
pop
fcmovb
adc
xor
rcll
add
outsl
lds
push
lahf
hlt
sbbl
adc
mov
dec
xor
fisttpl
mov
xchg
sub
or
lret
sub
fmull
sbb
pop
pop
lahf
insb
mov
test
mov
mov
lret
out
mov
das
mov
cmc
rcrb
mov
mov
movsl
outsb
gs
or
xchg
xlat
or
mov
inc
ss
jne
or
adc
dec
movsb
push
mov
push
add
jle
cwtl
sbb
xor
push
push
notb
imul
jbe
adcl
dec
mov
rclb
out
jg
ljmp
leave
loop
scas
aam
scas
xchg
dec
subl
adc
and
sti
push
xor
dec
imul
mov
cwtl
pop
inc
js
test
add
out
pop
jno
sbb
jae
mov
jmp
dec
jo
bnd
pusha
ret
out
jl
lods
or
and
xor
sub
fsts
outsl
les
pop
fbstp
movb
push
scas
jge
xchg
lret
nopl
sbb
je
or
cmp
push
push
in
idivb
sahf
out
repz
and
mov
xchg
loop
lds
ds
push
std
loopne
mov
mov
adc
cmp
pushf
pop
xchg
sbb
xor
sbb
mov
lods
imul
cmp
mov
std
add
mov
fdivs
xor
or
cli
rolb
out
out
sub
push
mov
dec
mov
mov
adc
adc
fidivrs
or
int
and
jle
cld
mov
ss
outsl
lods
mov
dec
imulb
ret
fnstsw
fnstsw
push
subb
jnp
icebp
xchg
arpl
pusha
xor
fwait
je
addr16
mov
shll
lock
adc
jg
sbb
sub
push
xor
ss
jmp
js
pop
and
scas
mov
mov
or
inc
lock
mov
outsb
mov
push
mov
mov
pop
push
pop
inc
movsb
push
and
mov
cmp
sbb
push
push
or
xor
roll
pop
icebp
mov
lcall
lods
clc
push
sub
mov
fdivl
cmpl
or
rorl
xchg
mov
lahf
push
test
aas
push
push
inc
insb
and
sbbl
fs
popl
leave
in
sbb
mov
aas
outsl
fists
jno
jmp
adcl
jbe
mov
pop
jne
sbb
adc
jb
jne
ret
jl
mov
lea
jnp
inc
sbb
push
push
fstpl
mov
push
sub
adc
lods
dec
xor
sub
cwtl
fildll
out
bound
push
lea
push
loopne
cmp
out
daa
dec
dec
mov
fucom
out
jb
sbb
dec
in
mov
repz
add
fs
jns
aam
xchg
mov
cld
cmp
jne
outsb
shr
shlb
cltd
loope
daa
push
rclb
xchg
xchg
rclb
loopne
movsb
sbb
sub
fwait
rorb
dec
mov
aam
push
sbb
mov
push
push
pop
jno
mov
mov
add
mov
add
test
aam
sahf
out
test
push
data16
cmpsb
xor
pop
sbb
or
xchg
pop
std
lea
dec
cmp
push
notb
mov
inc
inc
js
sbbl
jp
mov
jno
and
leave
xchg
sti
bound
jmp
fldt
jge
xchg
fs
or
test
outsb
int
popf
sub
xchg
out
xchg
sbb
sarl
and
mov
movsb
push
jo
push
add
mov
push
fisubrs
lods
push
adc
mov
and
mov
sub
jecxz
or
pop
cmp
into
jno
pop
or
cmp
cld
cltd
xor
cmp
pusha
pop
rclb
mov
mov
inc
mov
out
inc
in
daa
cmpsb
and
stos
pop
xchg
mov
fs
cltd
into
lods
mov
arpl
test
test
xchg
cld
faddp
sub
pop
push
cmpsb
in
repz
sbb
push
cmpsb
cltd
cmp
sub
sub
xchg
out
push
stos
icebp
jae
mov
inc
and
jmp
in
test
xchg
sub
dec
xor
scas
jmp
sub
push
out
sub
das
shll
cld
pop
ja
sbb
aas
adc
andb
dec
push
dec
ret
movsl
imul
cmp
sub
imul
sahf
icebp
mov
aad
and
fldt
dec
bound
popa
and
movsl
add
xor
lods
scas
xchg
fstpl
enter
in
push
push
push
decb
xchg
call
subb
or
sub
js
cmp
jge
setl
add
scas
arpl
sbb
push
popa
sub
shll
jae
lahf
out
ljmp
pop
push
inc
mov
ficompl
cs
adc
xor
js
or
mov
jl
ljmp
daa
fchs
gs
dec
sahf
sahf
das
repnz
lds
adc
and
pop
add
aas
sbb
dec
cmp
inc
cmpsb
in
and
xchg
ds
lret
sbb
sbb
aas
cmp
xor
jge
ret
cmp
push
or
je
scas
cmp
outsb
sub
pop
adc
sbb
jle
into
lret
loopne
xlat
gs
push
rorl
pop
leave
mov
leave
push
dec
push
push
in
sub
dec
mov
mov
ljmp
mov
cmp
cmp
movups
xchg
mov
mov
cltd
adc
jmp
inc
xchg
push
or
add
add
setle
ret
pop
push
fldt
ret
and
daa
jge
dec
xchg
in
sub
bound
aad
fcmove
cmc
jb
jle
mov
std
dec
xlat
mov
mov
mov
mov
aam
std
pop
cmp
mull
jno
lahf
stc
shlb
cmp
jns
repnz
mov
inc
jne
imul
xchg
adcl
mov
jecxz
cmp
loop
fimuls
call
sbb
xchg
clc
jbe
std
and
fidivl
sbb
pusha
lcall
push
cmp
push
xchg
adc
movsl
ret
daa
lcall
nop
mov
sub
in
rcrl
in
hlt
push
sub
mov
ret
scas
adc
push
inc
inc
cmp
nop
inc
pusha
mov
and
stc
jb
xchg
inc
push
outsl
imulb
fbstp
loop
mov
out
push
rolb
test
mov
jno
push
enter
iret
inc
enter
hlt
test
jp
jp
es
and
dec
mov
dec
imul
fwait
mov
outsl
xchg
hlt
jle
or
mov
lret
js
add
jno
cmp
shll
dec
push
les
leave
adc
movsl
rcll
testl
mov
xchg
mov
cmpsl
int
push
es
jns
int3
push
sbb
stc
clc
imul
inc
outsl
mov
aaa
mov
sbb
rcll
test
and
jne
into
mov
xorl
adc
add
ljmp
xchg
sbb
push
inc
sahf
aad
fisubl
push
jl
sbb
bound
jno
test
rcl
jp
pop
repz
aaa
mov
scas
sti
jmp
push
pop
dec
in
leave
jb
test
inc
xchg
dec
cmp
jno
idivl
xchg
mov
inc
aad
xor
jle
xchg
out
sti
aaa
fdivrl
rorl
xchg
fucomip
xchg
in
movsb
dec
jne
int
enter
aas
les
cmp
lods
popf
fs
cmpsl
andb
pop
pop
xchg
shrb
lret
xchg
das
push
repnz
ja
cmp
aam
jmp
insb
lahf
into
jmp
jbe
and
ret
adc
push
add
or
sub
cmpsb
or
int
xchg
shlb
push
xchg
lea
adc
mov
cmpsl
jge
lea
iret
cmc
aas
out
test
test
dec
ret
fistpl
cmpsb
je
xchg
push
push
jmp
ss
fwait
dec
sbb
aam
sti
sub
in
ds
push
loopne
je
ljmp
dec
push
pop
imul
std
jno
mov
and
rclb
arpl
ss
repnz
xor
and
cmp
insb
fcomp
sahf
pop
mov
xchg
test
mov
pop
pop
sbb
inc
jns
nop
aad
aad
movsb
shlb
sub
push
or
or
fisttpl
shlb
or
out
inc
repz
rcrb
sbb
jmp
ja
push
push
jae
jbe
int3
inc
dec
pop
fildll
mov
xchg
adc
adc
sbb
lock
aaa
mov
lahf
sub
or
cmp
mov
movntps
popf
xchg
pop
push
flds
adc
xchg
xchg
mov
push
xchg
adc
insb
imul
adcb
and
inc
lods
xor
xchg
das
add
sbb
shrw
xor
cmp
xlat
mov
inc
dec
and
pop
pop
pop
push
dec
ss
test
lahf
dec
inc
nop
dec
mov
mov
rcl
push
daa
mov
es
inc
cmp
mov
and
iret
jno
xchg
mov
cwtl
mov
jbe
mov
fwait
popa
cmc
in
sub
addl
sub
mov
jno
add
insl
les
stc
pop
imul
fistpl
push
es
fdivs
or
xchg
or
sbb
out
loope
sbb
dec
xor
mov
stos
and
xchg
pop
xor
js
outsl
jbe
adc
lahf
fs
and
aam
js
cli
mov
adcb
jnp
jae
cmp
pop
flds
mov
arpl
mov
push
jne
bound
sub
aaa
pusha
lds
fstl
aad
add
pop
pop
dec
pusha
mov
adc
outsl
aaa
movsb
shlb
cmp
fsubl
loopne
fidivl
cli
dec
cmp
into
inc
push
in
push
adc
and
fs
sbb
sbb
bound
cmp
aad
popf
fidivl
addl
mov
outsb
jne
jne
lods
orl
xchg
outsl
mov
cmc
jbe
lock
shrb
sub
aam
fdivrp
je
nop
les
sub
popf
or
ja
adc
sbb
cwtl
sbb
popa
or
test
pop
jle
test
aas
mov
push
sub
dec
fs
cltd
jne
outsl
adc
lcall
aaa
push
lods
lahf
inc
fisttpll
pop
in
dec
in
iret
clc
mov
add
lret
pop
sub
aas
pop
shl
jo
subl
out
stos
mov
popa
sub
xor
sahf
scas
xchg
adc
cwtl
int
andb
add
xchg
in
cmpl
pop
out
andl
and
stos
inc
sbb
sub
pop
lcall
gs
dec
jmp
or
aaa
pop
inc
sub
inc
enter
sti
lcall
arpl
dec
adc
mov
aas
cmp
pop
push
shll
dec
inc
mov
xchg
fbld
hlt
xor
push
inc
dec
lods
xchg
mov
mov
sbb
adc
repz
mov
or
adc
dec
roll
into
inc
jo
xchg
push
adc
sub
xor
dec
and
aam
mov
jb
jmp
cmpsb
stc
dec
out
popa
mov
pop
jno
pop
mov
lret
fwait
xlat
mov
mov
pop
and
outsb
stc
cwtl
mov
mov
popaw
jne
jecxz
cmp
sub
js
mov
dec
sub
in
sub
push
ja
imul
xchg
mulb
sub
xchg
cmp
pop
mov
inc
movsb
jns
pmaxub
imul
out
cwtl
push
mov
xchg
rol
mov
insb
pusha
sahf
and
jmp
dec
ljmp
xchg
cmpl
or
xchg
pushf
or
jns
fists
mov
or
inc
mov
pop
mov
pop
shrd
aam
in
push
dec
fs
movsl
xor
imull
dec
pop
pushf
dec
sub
jb
aad
mov
insb
bound
jae
mov
rcl
stos
aas
mov
sarl
pop
or
pop
test
movsb
dec
pop
cmpb
jne
jns
hlt
cmc
jnp
pop
enter
dec
and
push
in
mov
cmp
subb
xchg
xchg
js
adc
std
sub
pop
xchg
sbbb
xchg
and
mov
jnp
xchg
add
out
cli
jl
jle
or
pop
mov
test
mov
std
inc
mov
push
insl
andb
push
sbb
add
ficompl
sub
test
loopne
inc
mov
add
shlb
scas
dec
push
outsb
push
aaa
and
aad
out
jge
xchg
inc
push
rcll
outsl
cwtl
xor
dec
jo
insl
nop
fisubs
or
popf
or
imul
inc
fucomip
call
xchg
repnz
hlt
imul
mov
push
idiv
jecxz
movsl
sbb
push
cmc
inc
jne
xchg
shlb
sub
pop
arpl
push
xlat
sbb
xlat
popf
or
and
shl
aam
xchg
lods
int
sbb
dec
xchg
or
mov
clc
in
outsl
iret
mov
push
outsb
out
std
inc
dec
add
adc
mov
cmp
movsb
ret
ljmp
add
or
pop
popf
mov
iret
daa
ror
adcb
push
test
in
insb
loope
or
dec
sarl
mov
call
dec
clc
push
aad
xor
mov
sbb
ss
rcll
aam
ret
push
lea
pushf
sub
int3
cmpsl
loop
cmpsl
repz
add
cmp
push
dec
inc
adc
fisttpl
aad
in
shlb
jb
outsb
fwait
jp
dec
xchg
sub
pop
shrl
cmp
movsb
ret
stos
out
jmp
or
mov
pop
into
into
ss
cli
lds
or
mov
push
jecxz
mov
inc
mov
jg
cmpsl
sahf
or
dec
shrb
push
out
mov
in
push
cmpl
push
dec
scas
adc
cmp
xchg
in
push
loopne
mov
sbb
xchg
xor
je
xchg
pop
xchg
lahf
movsb
fmul
icebp
jl
rep
std
or
xchg
or
out
jp
or
rorb
jno
cmp
data16
jecxz,pt
call
aam
ret
addr16
stos
push
cmp
lea
movsl
jae
imul
mov
mov
popf
or
shll
fisttps
sbbb
or
scas
xor
lcall
or
cli
call
pop
dec
jb
mov
mulb
pop
mov
scas
xor
mov
addl
inc
icebp
fstps
xchg
jno
sbb
std
int3
push
cmp
hlt
jns
loop
mov
sarb
xchg
out
gs
and
or
pop
lcall
lret
sub
ret
inc
sub
inc
paddw
mov
xchg
cmc
js
jp
mov
test
inc
outsl
arpl
lock
jecxz
lahf
cmp
mov
and
test
jae
repnz
cmp
pop
mov
int3
sti
lods
add
shr
xor
dec
test
idivb
sti
out
adc
int3
xchg
lods
mov
es
dec
and
push
fcmovb
sti
mov
adc
gs
fdivs
stc
imul
sbb
sbb
lahf
xchg
xlat
mov
pop
jne
imul
push
cli
push
es
test
inc
out
lea
test
sub
daa
dec
dec
aam
in
repz
mov
lods
sub
lods
loope
adc
inc
into
out
mov
icebp
add
or
and
or
jno
pushf
outsl
push
xchg
sarb
adc
jo
popa
rorl
mov
dec
cmpsb
pop
pop
cld
movsb
and
test
mov
in
int
test
sub
push
xor
andb
loope
test
push
add
mov
mov
jnp
into
repz
test
bound
fidivrl
je
push
adc
aas
pop
lret
fistps
sub
pop
inc
sbb
stos
mov
pop
bound
add
fld
pushf
jp
hlt
dec
aas
jnp
inc
push
push
sbb
push
leave
push
aas
faddl
ss
stc
lret
xlat
divb
xor
test
or
jp
fstps
jne
imul
out
mov
ret
jecxz
aam
pop
gs
inc
faddl
push
cwtl
pop
push
dec
push
dec
inc
xor
pop
int3
fadds
lock
test
out
sbb
pop
adc
add
imul
inc
pushf
sub
arpl
mov
stos
loopne
or
or
mov
dec
pop
xchg
test
push
or
out
jno
testl
and
fwait
fwait
lret
pop
decl
sti
aam
lret
jmp
add
shl
gs
adc
rolb
cmp
je
popf
adc
bound
pushf
lret
inc
or
pop
sub
push
mov
adc
jae
cltd
mov
sahf
aad
push
fbld
mov
inc
pushf
inc
int
out
or
out
and
add
adc
pop
adc
sub
pop
jmp
push
in
pop
mov
xor
das
add
pop
jbe
cmpsb
mov
aaa
idivl
inc
xchg
jle
jg
ret
jbe
adc
cmp
outsl
sub
add
adc
push
mov
ficompl
jo
outsb
clc
jle
mov
ftst
mov
sub
sbb
xor
ljmp
or
mov
cmp
nop
in
aas
jbe
sarb
cmc
out
loop
data16
mov
push
mov
arpl
mov
outsl
in
das
cmc
mov
inc
jle
push
mov
pop
les
leave
test
incb
call
aad
or
out
push
pop
dec
push
int
loope
inc
dec
and
insb
cmp
test
sub
pop
inc
cli
or
icebp
mov
or
fs
inc
xlat
mov
xor
fdivr
popf
or
mov
xchg
or
and
scas
pop
scas
mul
in
out
add
dec
and
lret
push
loopne
or
jg
fnstenv
inc
cmpsl
popf
hlt
or
fsts
push
cltd
ret
mov
inc
pop
stos
cmp
lcall
mov
dec
shlb
pop
adc
std
lods
dec
scas
fadds
mov
cmp
andl
in
popa
cmp
pusha
rorl
daa
pop
aam
test
xor
sbb
scas
ffree
lret
add
jg
out
push
dec
mov
mov
jnp
es
mov
add
xchg
push
jne
inc
repz
inc
icebp
push
xor
scas
add
icebp
in
dec
gs
in
push
pop
addr16
into
add
aas
fisubs
sahf
xor
jg
mov
roll
xchg
testl
daa
int
push
inc
outsl
sarl
mov
in
cmp
jne
lods
pop
pcmpeqb
dec
fwait
in
xchg
or
push
jnp
icebp
popf
xchg
mov
dec
inc
fstl
push
add
mov
inc
pop
mov
fptan
and
jecxz
mov
mov
or
and
shrb
push
test
fcoml
add
arpl
mov
cli
mov
cmp
and
outsl
sbb
mov
lock
loop
test
ficoms
add
out
sti
shlb
and
sar
sbb
jbe
fidivrl
push
ljmp
cltd
pop
cli
pusha
filds
insb
les
cld
popf
jmp
mov
xor
mov
negb
sub
sbb
nop
ret
outsb
mov
dec
or
and
mov
mov
test
and
xchg
in
sahf
sbb
iret
mov
ja
fldl
pop
jmp
addr16
pop
mov
loopne
sub
lret
idivb
add
outsl
out
scas
push
mov
jbe
out
push
push
pop
or
mov
lret
and
cmpsl
fsubl
inc
rorl
fdivl
cmp
mov
mov
fbld
rcr
fisubs
mov
jle
mov
cli
jecxz
jl
lea
and
mov
mov
and
cmpsb
lret
jg
cld
scas
xor
or
stos
enter
sti
addr16
mov
adc
lock
sbb
insb
aam
andb
popa
daa
mov
inc
loopne
rcr
mov
btc
mov
adc
test
and
cmp
ret
jmp
fadd
jns
cltd
shrb
dec
and
sbb
in
mov
stos
mov
xchg
pop
sub
popa
cs
in
movsl
mov
stos
sbb
cltd
outsb
test
mov
shl
xchg
fwait
push
cld
mov
xor
jns
test
popa
clc
ret
jne
fmull
jae
fwait
push
lea
push
outsl
lods
rcrl
test
pop
xor
push
daa
add
dec
data16
dec
pop
xchg
dec
mov
cs
je
stc
sub
mov
cwtl
test
mov
xor
cltd
and
adc
lcall
stos
out
and
loopne
rcr
lahf
adc
lahf
add
adc
push
lcall
movsb
bound
xchg
sub
cmp
and
sub
idivl
aaa
enter
in
push
ljmp
push
in
or
mov
push
enter
push
mov
push
les
jb
push
aas
in
cmp
ret
xor
dec
loop
pop
mov
lret
pop
mov
mov
in
mov
push
daa
or
lcall
cli
adc
fstps
mov
sub
inc
pop
jne
out
call
shl
scas
and
into
pop
call
cmpsl
cmp
call
mov
out
imul
or
jnp
and
loop
jmp
hlt
in
pop
and
push
popa
jbe
mov
inc
fs
movsl
adc
inc
movb
movsb
in
addr16
jmp
aam
std
mov
das
or
mov
dec
jecxz
pop
inc
pop
sahf
inc
and
ljmp
jmp
out
je
test
lea
out
cmp
jp,pt
lock
or
loope
jl
es
mov
adc
stc
xchg
cltd
cltd
push
xchg
add
jne
popf
pop
ss
jno
out
into
pop
ret
int3
dec
mov
cmp
iret
cmp
test
mov
mov
sub
push
xchg
jo
ret
add
inc
dec
adc
dec
ficomps
sbb
jle
pop
lea
xor
fnstsw
inc
adc
push
out
mov
mov
fadds
add
cmc
pop
or
sbb
xchg
daa
xor
mov
sti
or
lods
xchg
mov
lcall
xchg
mov
in
mov
dec
inc
out
sbb
insb
daa
jmp
lock
jge
popa
cmpl
lods
sub
cmpsl
cmpsl
ret
ds
insb
std
pop
add
and
lahf
fwait
mov
mov
mov
shll
aad
loopne
dec
in
cmp
sahf
lcall
adc
adc
push
add
scas
dec
aaa
mov
ss
jl
scas
addb
int3
and
ret
shll
pop
xchg
les
push
mov
sbb
and
rol
adc
jbe
mov
movsl
push
scas
mov
cs
aas
pop
test
loope
les
add
stos
xchg
arpl
push
fidivs
mov
jp
outsb
ret
dec
adc
fwait
pop
adc
ja
insb
mull
add
mov
adc
push
push
hlt
ja
mov
lret
sbb
inc
mov
jle
int
xor
aaa
pop
scas
mov
cmp
or
hlt
daa
push
jecxz
fs
in
orl
xor
stc
xorl
mov
add
xchg
nop
pushf
inc
dec
hlt
xchg
inc
sbb
jns
mov
sbb
mov
add
negl
addr16
xchg
cwtl
push
rcrl
jge
popa
test
jno
pop
pop
idivb
inc
in
jg
dec
adc
dec
js
addb
lret
fcmovb
mov
push
push
loope
fsts
out
addr16
cltd
cmp
xchg
pop
imul
into
lcall
cwtl
js
scas
aam
mov
cmp
mov
mov
pop
insb
rorb
mov
mov
lods
data16
dec
subl
xchg
sbb
mov
adc
pop
mov
sub
lods
and
jae
xchg
mov
or
dec
mov
sbb
inc
and
push
mov
daa
pop
loopne
nop
lods
adc
xor
stc
pop
xchg
mov
or
dec
sti
imul
inc
xor
lret
push
pop
adc
icebp
fldenv
jmp
dec
adc
shlb
add
test
daa
dec
loope
out
pop
push
jbe
sub
dec
lods
xchg
mov
gs
in
mov
mov
lret
call
mov
cmpb
sbb
sub
sbb
cmp
fimull
in
push
loop
cmp
ret
in
pop
cmp
dec
jge
sti
and
push
jnp
jns
push
dec
lcall
add
outsl
sbb
mov
push
jmp
or
push
adc
fisubrs
adc
ret
pop
push
lea
dec
popf
cmp
cltd
aad
jne
out
int
into
mov
loopne
subb
lcall
cmp
sbb
jmp
xor
adc
lret
jno
testb
push
test
add
lds
inc
aas
mov
leave
subl
cmpsl
lock
xor
or
dec
in
fwait
movsb
test
jle
cmp
cmp
pop
push
xchg
inc
xor
push
in
inc
mov
test
repz
xchg
sub
sub
ret
sbb
push
test
push
mov
orb
pop
cmp
xchg
or
repz
out
xchg
push
or
jns
push
push
xor
lahf
sarl
mov
ss
dec
lods
add
jecxz
xchg
andb
add
stc
add
xchg
dec
cmp
lahf
push
mov
cmc
mov
pusha
and
push
or
adc
nop
sbb
sti
and
xor
in
cltd
jmp
mov
test
loop
test
inc
hlt
add
stc
fidivrs
fiaddl
shrl
lret
clc
sbb
in
aad
or
shll
stos
jecxz
push
into
fisttpl
decb
jl
int3
dec
scas
sarb
gs
inc
push
lods
mov
pushf
ds
aas
dec
jb
outsb
push
sub
imul
and
fidivs
sbb
aas
cli
push
inc
sbb
or
test
mov
cmp
inc
xchg
arpl
out
arpl
push
inc
sbb
test
cmp
movsl
mov
sti
ret
inc
fidivrs
aad
inc
pop
dec
lods
dec
jmp
mov
packssdw
dec
xchg
test
ljmp
mov
xchg
ret
push
les
lcall
cmpsl
in
fs
jl
jno
add
loopne
cmp
add
shr
stc
xor
popa
mov
fisubrl
jle
lcall
inc
or
inc
sahf
repnz
push
xchg
outsb
cwtl
shll
test
in
scas
jp
xlat
push
imul
add
dec
fidivrs
shlb
pop
push
inc
std
xor
je
cmp
icebp
fsubs
inc
jno
sbb
mov
lock
mov
xchg
lock
outsb
ret
inc
push
sbb
lods
out
push
add
xchg
xchg
lea
xchg
outsb
lret
push
dec
test
out
mov
sbb
testl
leave
adc
dec
bound
cwtl
mov
cmp
push
pop
push
pop
pushf
cmp
ret
std
fsubrs
or
movsl
mov
sbb
mov
loope
mov
jg
sahf
sbb
rcll
push
xlat
pusha
jmp
les
inc
pusha
outsl
xor
push
div
fstpl
inc
shlb
sub
lahf
outsb
sbb
into
jmp
xchg
int3
push
nop
call
mov
repnz
add
dec
pushf
adc
loopne
sbb
arpl
insl
mov
mov
xchg
imul
sub
push
enter
and
sti
popf
pop
aas
add
xchg
inc
xchg
adc
das
mov
adc
shlb
leave
sub
push
jb
inc
cli
shrb
insb
adc
in
jle
mov
and
stos
daa
std
mov
sbb
mov
cs
mov
adc
scas
out
rclb
fdivs
rcll
or
xchg
push
sbb
push
push
insb
xor
je
sar
cmp
fisubrl
inc
push
aaa
dec
int
ja
jnp
push
cmc
pop
xchg
jb
sti
mov
fmul
test
push
aad
mov
adc
adc
cmp
jno
ja
mov
xchg
sbb
leave
lds
movsl
mov
sbb
in
dec
cmpsb
aad
daa
jg
nop
punpckhbw
imul
lret
ss
mov
xchg
and
add
or
dec
mov
out
mov
push
fcoms
sti
push
int
inc
gs
loopne
mov
stos
cmp
insl
ds
or
insl
add
adc
out
imulb
out
jno
imul
cmp
push
imul
mov
or
subb
mov
sbb
inc
ljmp
pop
cwtl
add
or
pushf
cld
cmpsl
mov
mov
out
sbb
fmuls
out
cmc
xchg
aaa
sbb
in
add
lods
out
xchg
mov
mov
fnstcw
mov
pop
out
adc
addr16
arpl
cmp
cmp
pushf
sub
jns
out
loop
xchg
xchg
mov
or
mov
js
cmp
pop
add
inc
adcl
loope
lret
cld
adc
fcomps
pop
xchg
es
fsubl
sbb
stc
fnstenv
push
xchg
mov
cmp
push
add
insb
mov
fcoms
pusha
adc
aam
mov
pushf
or
arpl
or
xor
pop
jmp
dec
pop
and
xlat
xchg
pushf
pop
inc
mov
dec
push
popa
mov
in
aad
movsl
mov
mov
sub
out
pop
cmp
dec
push
jmp
add
popa
out
lock
sahf
inc
movsb
xchg
mov
dec
rep
lods
inc
add
mov
fs
and
in
pop
dec
mov
inc
push
adc
loopne
or
jmp
mov
leave
pop
cmpb
jecxz
in
fs
pop
adc
imul
xchg
sub
aam
adc
inc
sub
xorb
shl
cmpsl
repz
add
xchg
add
adc
test
jge
or
dec
cmpsl
add
cmc
jle
dec
fcmovne
xchg
ds
pop
push
inc
je
stos
dec
fs
sbb
cwtl
outsl
push
mov
into
rcl
stos
sbb
inc
subl
jb
mov
mov
add
lods
fidivrl
mov
jge
and
add
or
repnz
dec
mov
push
imul
mov
lcall
fldt
fiaddl
xchg
mov
mov
and
mov
cld
lahf
xlat
mov
scas
xchg
shl
push
ljmp
xchg
xchg
pushf
orl
sbb
or
clc
mov
loopne
jp
mov
jecxz
imul
mov
and
pusha
inc
lea
xor
es
mov
mov
add
insb
push
add
in
mov
mov
leave
push
rcll
adc
sub
sbb
mov
stos
sub
rorb
syscall
fcompl
divl
loope
jne
fadd
fsubrl
mov
iret
or
das
pop
xchg
fstpt
in
mov
ja
or
adc
xor
aad
dec
xchg
mov
xchg
mov
icebp
cli
and
and
repnz
xor
xor
fdivl
sti
sub
sub
xchg
xchg
pushf
rorb
out
lods
mov
jl
aas
cmp
push
sub
jle
repz
mov
adc
mov
pop
xor
jp
and
fstpt
rcr
out
ret
cwtl
cmp
cli
cmp
and
js
push
out
aad
clc
inc
xor
clc
je
mov
dec
sub
dec
stc
pop
dec
sub
sub
fadd
repz
fisubs
add
mov
xchg
test
sahf
pop
jno
cmp
mov
lods
xor
lds
ja
addr16
loopne
mov
lahf
mov
dec
cmp
mov
repnz
sbb
test
hlt
xchg
in
and
sub
loopne
popf
mov
into
cmpsb
imul
test
fmul
testw
pop
pop
movsl
lock
jnp
push
jno
mov
shr
lret
jl
fwait
lock
pop
mov
stc
flds
mov
int3
push
or
jp
inc
nop
mov
sbb
repnz
jg
adc
cmp
call
cld
push
push
add
dec
xchg
out
sbb
jno
mov
dec
push
das
adc
push
add
adc
cmc
sbb
mov
xor
adc
pop
repnz
xchg
fs
cltd
and
in
fcompp
dec
and
movsb
inc
subl
stos
jl
cmp
mov
xor
mov
roll
enter
lods
push
push
mov
out
push
pop
or
sub
sbb
imul
scas
lahf
sub
in
call
xchg
js
or
flds
xchg
loop
cmp
pop
xlat
mov
int
ljmp
mov
and
cmp
fists
adc
inc
inc
popl
xlat
sarb
cmp
imul
repnz
scas
and
mov
mov
cmpsl
jns
inc
inc
movsl
sub
jbe
inc
xor
push
dec
out
aaa
rclb
aam
and
lcall
mov
mov
push
sub
es
add
je
sub
xor
inc
mov
movl
test
insl
data16
popf
inc
aaa
sbb
and
mov
std
lods
insb
add
bound
icebp
outsl
cmpsl
jge
mov
adc
dec
and
cmpsl
test
cmp
dec
call
es
push
mov
cmc
adc
dec
push
adc
and
xor
bound
cmc
inc
cmp
idivb
mov
lods
testb
cmpsb
mov
test
out
jns
enter
cmc
mov
lahf
jmp
lahf
cmp
cld
frstor
mov
mov
outsl
cmp
les
pushf
and
pop
fs
cltd
mov
fsts
popf
mov
insb
pop
or
fcmovnu
loope
pop
dec
fwait
outsl
repnz
xor
pushf
adc
adc
inc
xchg
jecxz
mov
mov
ljmp
adc
sbbb
psubusb
sub
or
arpl
cwtl
daa
jae
adc
aam
scas
xor
pusha
xchg
add
shl
pop
mov
loope
mov
dec
mov
aaa
dec
es
call
test
ljmp
dec
xor
mov
xor
lock
inc
ret
lock
ss
mov
mov
loop
pop
jno
xor
or
adc
sub
jb
lea
nop
mov
scas
sub
mov
cmp
sub
pop
das
loope
jb
fistps
mov
jp
lcall
movsb
adc
loope
nop
int
jmp
test
inc
jg
bound
sbbl
lea
addb
repnz
mov
push
dec
lds
and
movsb
jnp
shrl
mov
xorb
inc
fwait
jecxz
test
in
mov
jecxz
mov
cmpsb
stc
cmpsl
arpl
sbb
int
fmulp
call
push
ret
push
lret
sub
popf
mov
sbb
add
xchg
mov
mov
xor
inc
sbb
adc
mov
enter
jne
shll
sub
pop
xchg
sbb
xchg
fwait
pop
dec
test
mov
and
je
jmp
lea
iret
rorl
movsb
jne
cmp
or
std
clc
aas
mov
mov
out
jecxz
aam
ds
insb
dec
mov
and
push
int3
cs
and
addr16
loope
jge
push
aam
cmpsb
mov
lret
cmpsb
push
jl
stc
pop
push
xchg
sub
jge
ja
pop
pop
jae
pop
and
ret
dec
aad
int
arpl
xchg
inc
inc
and
mov
adc
outsb
insl
cld
dec
xor
stc
mov
in
pop
hlt
out
mov
or
mov
in
fcomip
movsb
outsb
ss
pop
xor
push
xchg
mov
popf
test
popf
add
hlt
cmp
pop
lock
jbe
bt
push
orb
add
xor
sti
inc
dec
cmp
sbb
mov
cwtl
pop
cld
lea
popa
scas
andl
adc
icebp
movsb
dec
loopne
sub
fmuls
std
fisubrs
pop
sbbb
icebp
stos
mov
cmp
xor
cwtl
push
and
cmp
mov
mov
lret
mov
xchg
dec
sub
fbstp
jge
cli
pushf
int3
cmpsb
dec
mov
mov
roll
ficompl
xor
data16
in
sub
adc
into
mov
in
jnp
sub
sar
das
popa
insb
popa
mov
addr16
sbb
xor
pop
and
cmp
cmp
mov
out
xor
or
in
fwait
cmp
divb
stc
js
add
push
xor
mov
les
aad
fldenv
les
loopne
arpl
mov
cmpb
inc
jnp
bound
cld
push
sub
ror
mov
mov
or
xor
mov
cmp
push
icebp
sar
repnz
pop
insb
into
inc
mov
pop
pop
mov
popf
loope
xchg
je
inc
dec
xchg
inc
icebp
test
popf
les
mov
mov
and
mov
dec
jle
xor
popl
les
or
aas
lods
out
lods
bnd
scas
cmpsl
cmpsl
xor
adc
adc
sahf
dec
xchg
das
js
mov
cli
xchg
scas
sarb
in
lret
push
xor
jl
adc
push
and
mov
mov
xchg
jp
test
cmc
movsl
push
or
sbb
pop
push
dec
ss
dec
mov
xor
mov
mov
push
stc
pop
cmc
jae
push
inc
adc
sti
dec
loope
loop
leave
leave
pop
pop
ds
mov
lds
and
adc
pop
stc
pushf
aad
insb
mov
outsb
or
rol
bound
adc
decb
mov
aas
xor
fmull
fwait
jl
xchg
mov
dec
xchg
lods
dec
xchg
lds
in
jl
sti
fisubrs
pop
lea
xchg
lods
pop
outsl
out
les
cld
sub
inc
and
mov
enter
cmp
jecxz
inc
mov
in
shlb
sbb
mov
out
add
movsb
inc
push
repnz
xchg
push
pop
das
jle
cmp
add
imul
xchg
and
cmc
inc
popa
cmpsl
shlb
repnz
jne
push
xor
sar
imul
push
sub
xor
pop
insl
lods
repz
xor
jnp
arpl
jb
loope
dec
mov
fs
adc
std
and
mov
sbb
inc
scas
and
iret
dec
nop
and
xchg
xor
add
imul
aaa
loop
ficompl
mov
jb
popf
pop
mov
nop
cmp
dec
push
fs
mov
sbb
xchg
jp
xchg
mov
sub
push
mov
xchg
cs
xchg
xor
jne
dec
in
lea
xchg
imul
mov
xchg
dec
xchg
or
pop
sub
adc
push
dec
xor
mov
cld
es
arpl
inc
inc
mov
push
cmp
arpl
dec
mov
fisubs
xchg
cmc
fcoms
fs
inc
or
cmp
push
and
mov
popa
test
enter
pusha
mov
fcomi
mov
push
pusha
lods
ja
sti
xor
pop
push
and
subl
xor
lods
mulb
pop
and
ret
mov
mov
xor
xchg
and
inc
lea
and
add
sub
inc
out
loop
jb
jne
repnz
addr16
sbb
mov
add
mov
cmp
adc
xchg
add
mov
and
popf
xrelease
lea
inc
xchg
jae
xchg
or
hlt
pop
inc
dec
add
sbb
test
test
jg
sub
int
adc
xchg
shr
aad
xor
or
aad
fucomip
ret
mov
inc
adcb
jnp
mov
xchg
xor
or
es
pusha
cltd
movsb
adc
aam
lds
adc
sbbl
mov
xor
sbb
rorl
hlt
loop
ror
movsb
and
mov
fld
pop
jno
aam
dec
repnz
mov
cs
iret
nop
testl
emms
test
push
js
aas
add
add
jl
sahf
loope
data16
pop
cmc
sbb
push
stc
adc
adcl
jno
adc
repz
ret
test
adc
and
xchg
enter
icebp
cbtw
dec
sarl
sub
push
xor
mov
push
jbe
jg
cmp
sti
xor
mov
pop
adc
or
mov
outsl
iret
sbbl
inc
out
sti
mov
pop
cmp
les
repz
into
xor
xor
mov
and
adc
roll
xchg
mov
cmp
cmp
loopne
adc
cli
int
jp
xor
pop
addr16
fwait
adc
aas
pop
or
inc
cmc
xchg
jmp
movsb
int3
jns
mov
mov
jnp
test
das
lock
arpl
mov
and
inc
hlt
cmp
mov
pop
fcmovnbe
orb
xor
pop
lods
push
leave
cli
push
cmp
push
das
cli
bound
fldenv
cmp
shl
aam
add
int3
jno
mov
aas
push
mov
pop
or
mov
fidivrl
stos
scas
cmp
movsl
and
pop
shlb
dec
shll
sti
gs
sub
xchg
mov
mov
cmp
sub
and
js
sbb
cltd
int
xor
xchg
in
ljmp
es
mov
inc
mov
mov
jae
mov
cltd
push
cmp
decl
jae
pop
jg
in
dec
jbe
fisttps
jmp
mov
cmp
mov
scas
or
cmpsb
repnz
lock
outsb
pop
notl
das
or
mov
mov
mov
addr16
hlt
mov
mov
inc
adc
fs
lds
pop
sub
mov
mov
int3
loop
fsub
jnp
lahf
fisubs
and
cmp
or
pop
out
lods
test
pop
loopne
sbb
push
push
loopne
arpl
popf
or
dec
inc
sub
cld
in
push
xchg
mov
push
sahf
jl
lret
sub
rcr
insl
or
mov
fmull
pop
in
push
cmp
push
push
aas
and
jg
add
mov
jp
dec
jmp
xor
lods
cmp
pop
sbb
rorb
lock
nop
enter
gs
cmp
lock
call
std
pop
pop
pop
push
adc
orl
scas
adc
cmpsb
xchg
xchg
xchg
ret
orl
arpl
test
jecxz
jo
aas
xor
cmpsl
fcoms
iret
in
push
arpl
dec
mov
sti
sub
cmp
test
scas
or
pop
or
push
and
mov
xlat
lret
or
dec
dec
dec
insb
rsqrtps
push
fs
clc
pop
dec
xchg
dec
hlt
mov
enter
lock
adc
movsb
jle
xchg
inc
adc
mov
sub
idivl
push
addr16
std
cvtps2pi
xchg
fcoml
imul
pop
mov
test
imulb
aam
push
xchg
mov
fs
cmpsl
notl
test
int3
mov
adc
cmp
test
sub
iret
sahf
sub
les
mov
stc
shlb
jb
lret
add
jbe
xchg
add
incl
cmp
dec
loopne
ljmp
inc
mov
mov
xor
bnd
daa
lods
cmp
cmp
mov
gs
inc
fs
dec
iret
fs
in
aaa
cli
or
sbb
add
sti
idivl
jns
pop
push
movsl
add
sub
cli
dec
in
mov
inc
jnp
stos
test
ljmp
or
jecxz
add
dec
out
ret
mov
and
arpl
addl
in
dec
icebp
insl
sub
or
enter
leave
jg
dec
fidivrl
and
cmp
bnd
in
negl
mov
xchg
add
xor
xchg
jnp
pop
movsb
sbb
and
rol
inc
rcr
aad
jnp
repz
jns
outsb
adc
xchg
lret
insb
and
fidivrl
cmp
mov
addl
push
inc
roll
cmp
aad
pusha
dec
popf
mov
pop
sbb
dec
test
or
and
and
or
adc
data16
aam
inc
and
mull
sbb
pop
enter
xchg
xor
std
cmp
sub
mov
mov
loope
sbb
call
lods
clc
nop
cld
js
lock
or
sub
imul
pop
and
mov
cmpsl
stos
xor
aaa
das
aam
ret
addl
mov
mov
fidivrs
lret
mov
jns
mov
iret
push
stc
movsb
jns
repnz
add
inc
mov
push
dec
mov
fidivrl
or
cmpsl
test
xor
or
popa
xor
jo
sub
mov
aad
xor
and
cli
in
lret
lds
push
push
addr16
inc
mov
clc
xchg
std
repnz
call
adc
shl
push
out
dec
dec
fimull
xor
push
jno
pop
sub
incl
xor
icebp
push
rcrb
cmp
icebp
mov
xchg
xchg
xchg
mov
in
xor
push
dec
mov
xchg
mov
jne
xchg
pop
pop
pop
pop
adc
fdivrs
xchg
cltd
ret
dec
rcl
add
out
sub
movups
scas
cmp
add
mov
mov
subl
or
lock
mov
pop
jo
jae
adc
push
mov
xor
jg
insb
daa
out
pushf
or
pop
out
cmp
shlb
ret
sbb
inc
xchg
fistpl
pop
and
cwtl
mov
je
aas
jns
xlat
jno
sbb
cmp
insl
inc
les
sub
inc
adc
mov
mov
shrl
jecxz
lock
and
popf
aam
movsl
jno
test
mov
push
stos
mov
xchg
push
fistl
lcall
jne
lods
inc
out
push
fcoml
fstl
pop
mov
sar
xor
out
sbb
std
lods
in
xchg
repz
mov
stc
out
cltd
mov
sub
cmpsl
notb
ss
add
add
dec
lods
fidivrl
clc
cmpsb
and
in
shlb
addr16
dec
inc
sbb
lods
cmp
clc
jo
scas
jne
sub
mov
nop
lret
scas
mov
loop
inc
jbe
ret
fbld
pop
xor
das
or
add
sub
or
loopne
dec
lods
xor
jmp
aad
sub
mov
int
adc
xor
dec
aaa
mov
jge
pop
in
mov
and
dec
repnz
push
fcmove
in
pop
flds
sti
cmp
push
in
cmp
and
iret
lret
pushf
rclb
sbb
popf
addb
xchg
cmc
sti
sbb
pop
out
stos
dec
mov
out
adcb
dec
aaa
cmp
pop
cltd
xor
xchg
mov
fnstenv
pop
jnp
fstl
inc
mov
lret
into
or
push
pop
pop
mov
push
int
mov
inc
cmp
mov
fwait
ss
xchg
cltd
popf
out
dec
pop
ljmp
je
inc
in
test
add
js
adc
iret
sbb
mov
outsb
sbb
and
xchg
std
inc
pop
adc
enter
arpl
into
lret
sub
mov
out
adcl
sbb
aam
xlat
neg
scas
push
or
jne
ret
repz
dec
fildll
mov
mov
inc
es
mov
ds
imul
jbe
test
ret
jno
sub
xchg
xchg
stos
jmp
inc
push
imul
push
enter
dec
or
pop
xor
push
and
pushf
out
mov
jnp
outsl
xchg
std
mov
ret
xchg
mov
movsl
add
test
mov
out
popa
jno
dec
dec
jge
mov
das
add
cli
inc
adc
stos
lods
rorl
sbb
outsl
ficomps
jbe
rcrb
inc
loop
scas
ficomps
cmc
scas
ja
pushf
sub
adc
xchg
addr16
dec
enter
test
shlb
test
inc
xor
sbb
or
sub
inc
push
lret
sbb
mov
add
bound
shlb
mov
dec
loope
mov
in
pop
push
lds
test
imul
call
and
pop
mov
mov
jns
scas
dec
repz
outsl
mov
mov
divb
icebp
cmp
leave
enter
aaa
nop
mov
inc
xchg
xchg
or
mov
std
push
jge
add
mov
fdiv
test
cmp
jbe
pop
cld
push
sarb
movsl
movsb
cmpsb
outsl
das
outsb
sbb
jb
ds
sub
icebp
mov
fcoms
fsubr
jp
sub
pop
aaa
mov
fsts
stc
outsb
or
pop
sti
pop
outsl
fucom
push
mov
ss
mov
dec
cltd
lods
inc
outsl
xor
pop
fbstp
xor
les
imul
or
loop
das
lahf
sub
imul
add
inc
or
out
push
xchg
fsubrp
mov
frstor
xchg
add
addl
mov
aaa
cmpsl
push
jnp
loop
push
mov
or
rol
jb
cltd
or
ja
xchg
repz
lods
icebp
pop
insb
aaa
movsb
ds
iret
gs
or
inc
xchg
jecxz
sub
in
jg
mov
cltd
jl
icebp
les
lock
stos
jno
mov
mov
nop
and
outsb
push
sbb
orl
push
mov
stos
and
arpl
push
out
mov
cmpsl
cmp
add
xchg
sbb
jle
jo
mov
roll
mov
loopne
dec
add
dec
adc
jmp
jns
popf
orl
dec
adc
mov
int
sbb
hlt
cltd
adc
push
bound
iret
mov
lods
test
dec
je
or
aad
sub
xor
xchg
fwait
or
loop
fnstenv
dec
push
repz
xlat
nop
mov
in
inc
push
jmp
cmpsl
inc
pop
pop
mov
repz
add
xchg
inc
into
std
fistpl
push
inc
mov
lods
mov
lds
xor
mov
stos
and
push
mov
push
mov
lret
sub
mov
je
out
mov
in
out
fidivrl
xor
mov
jne
in
push
mov
popf
test
fsubrp
data16
fisubrl
arpl
hlt
push
popf
scas
push
sbb
lahf
into
jmp
and
push
and
push
xchg
fisubs
xlat
cmp
cld
pop
js
xchg
and
jge
xchg
xchg
aas
or
pop
imull
add
xchg
push
shrb
pop
mov
mov
mov
or
inc
sahf
cmp
xor
pop
push
and
pushf
mov
inc
sub
shl
in
iret
out
cmp
cmp
loop
test
pop
sub
fldl2e
mov
ja
xor
popa
jbe
popf
push
ficoml
enter
insl
sysenter
push
mov
and
es
adc
cs
aaa
mov
pop
push
movsb
lods
icebp
movsb
inc
sbb
addr16
pop
fisubl
push
mov
jb
fisubrl
inc
jle
cmp
test
xchg
xor
lock
lods
out
fists
mov
cmpsl
cmp
inc
in
sbb
jns
popf
and
mov
je
sub
mov
and
enter
mov
mov
filds
inc
aad
imul
shl
hlt
jmp
movsb
adc
loopne
mov
cs
sub
in
es
sub
mov
outsb
inc
bound
lods
inc
sub
cmpsb
fisubrl
pop
nop
sbb
push
rcrb
jmp
lea
inc
popa
mov
sub
push
xchg
outsl
mov
vmovq
jecxz
xor
and
nop
sar
leave
mov
pushf
std
aaa
jo
cmp
mov
clc
test
mov
mov
out
notb
ret
pop
dec
int3
cltd
fs
mov
je
push
xor
lret
imul
ljmp
add
fucomi
imul
ja
jnp
adc
cmp
mov
mov
xchg
int
inc
mov
mov
int
loope
lods
jae
int3
das
leave
cmpl
outsb
mov
shr
ftst
cwtl
mov
in
jno
sbb
arpl
jg
adc
aad
xchg
cmp
xchg
test
jg
sbb
xor
jmp
jnp
mov
cwtl
adc
lock
scas
mov
rolb
add
pop
pop
dec
jle
shll
xlat
loopne
mov
addr16
and
push
xor
inc
cmpsl
call
mulb
add
sbb
jg
mov
dec
sbb
call
pop
insl
mov
test
je
insb
mov
mov
out
dec
clc
stos
enter
test
xor
push
int3
mov
lret
test
push
sbb
bound
add
nopl
scas
cmc
or
mov
jmp
push
cmp
sbb
pop
dec
lret
or
jmp
out
mov
mov
test
jae
or
outsl
mov
sub
xor
in
fisubl
repnz
xor
dec
mov
jg
jp
fwait
pushf
or
fildl
and
jmp
mov
push
dec
mov
jecxz
mov
lea
cld
mov
and
mov
out
ss
sarl
push
inc
outsb
push
xlat
into
jl
scas
sub
or
inc
shll
loop
and
push
push
fs
lahf
mov
jge
bswap
loopne
xchg
jae
inc
push
aaa
cli
bound
pusha
pusha
sub
xlat
lcall
cld
js
add
insb
scas
jne
scas
out
data16
insb
std
lret
shll
xor
add
outsl
dec
dec
jnp
fucomp
mov
aas
aad
sbb
jb
insl
lret
mov
nop
pop
mov
cli
mov
repnz
dec
dec
divl
jmp
in
adc
movsl
fcomp
pop
leave
push
rol
adc
jne
or
leave
cmpsb
add
adc
popf
inc
rorl
insl
xor
lahf
or
clc
lods
mov
add
insb
jg
sbb
mov
ret
add
or
fistl
bndstx
dec
inc
cs
gs
sub
in
data16
fadd
push
pop
fldenv
or
fldl
cmp
in
mov
and
into
sbb
das
adc
cwtl
ret
xchg
out
xor
xor
cld
or
cmpsl
jae
xor
mov
add
enter
inc
or
sbb
fisubrl
mov
xlat
jb
in
stos
das
out
into
cwtl
out
iret
jb
or
jns
dec
inc
out
sub
pop
or
lret
popa
and
jae
xor
mov
adc
test
push
add
shrb
mov
ficoml
add
in
loope
pop
nop
outsb
pushf
cli
sub
test
loop
jo
sbb
loope
std
xchg
in
mov
inc
mov
xor
sbb
pop
repz
outsb
sub
in
lret
jl
xchg
icebp
out
add
aad
dec
mov
fwait
mov
mov
xor
jge
call
xor
aam
dec
mov
mov
cmp
mov
nop
rorl
loop
data16
lds
push
icebp
pop
and
pop
sub
repz
enter
mov
inc
xor
mov
inc
pop
jp
mov
fidivrl
roll
faddl
pop
pusha
ret
add
out
jg
xchg
mov
iret
inc
imul
aam
inc
push
loop
jl
std
sti
dec
pop
push
rcll
add
inc
adc
mov
pop
add
in
daa
adc
add
into
not
sub
jb
rclb
jl
mov
adc
js
xor
jg
dec
mov
iret
pop
mov
aas
jo
lret
lcall
add
cli
add
sbb
pop
std
cld
fwait
cltd
cmp
repz
add
int3
cld
in
addr16
roll
sbb
xchg
adc
test
push
mov
jb
dec
or
add
std
dec
or
push
pop
jecxz
sti
xchg
push
mov
ja
push
rol
cld
int3
push
inc
cmp
push
iret
lods
xor
faddl
leave
mov
xor
mov
add
test
sub
mov
adc
inc
push
loope
repz
xor
pop
mov
out
inc
pop
data16
push
clc
daa
test
mov
inc
mov
and
jmp
pop
xchg
pop
ret
fiadds
dec
push
mov
int3
pop
test
cmp
ss
inc
xchg
into
mov
rolb
xor
mov
mov
movsb
adc
hlt
pop
jb
and
lods
shlb
mov
popl
mov
jnp
mov
cmp
inc
clc
mov
stc
xlat
push
fldenv
cwtl
cs
xchg
xor
sbb
fs
cs
push
jge
pop
xchg
or
mov
dec
cmp
fstl
fiaddl
push
cmp
and
sbb
mov
in
cwtl
loope
mov
cmp
in
cld
sub
stos
and
mov
inc
jns
cs
push
mov
push
cltd
daa
aas
and
inc
xor
ljmp
pusha
pop
inc
scas
in
xchg
jl
pop
jnp
nop
jb
adc
and
and
gs
das
arpl
test
jmp
pop
push
fstl
push
mov
fsubs
ds
push
pop
jmp
cmp
xorl
and
movsb
sbb
orb
xchg
les
pop
add
jp
push
xor
add
jg
lods
es
sar
mov
imul
xorl
xor
mov
js
jns
push
push
mov
sbb
arpl
leave
xchg
lahf
cmp
cmpsl
scas
mov
rcrl
std
lds
subb
xchg
mov
fcompl
inc
scas
lcall
lret
sub
push
xor
mov
pop
lcall
aam
adc
add
std
and
dec
mov
scas
jg
dec
and
stos
out
push
imul
shl
repnz
or
cmc
sbb
loope
repz
in
push
jl
ljmp
or
in
stc
jne
jmp
pop
xchg
movsb
fs
sub
and
das
cmp
cmpsl
push
xchg
mov
jmp
arpl
sbb
repz
fiaddl
add
xor
test
fucom
adc
roll
insb
mov
in
scas
sub
push
cli
sub
outsl
push
popf
shl
push
push
repnz
scas
jg
cs
in
in
xlat
pop
push
jecxz
mov
xchg
mov
push
ficomps
inc
das
bnd
das
pop
loope
sub
sub
dec
dec
insb
imul
int3
push
adc
mov
jb
sbb
xlat
cld
adc
and
fsubrl
das
pop
xchg
and
push
dec
loop
ja
insb
cmpsl
xchg
imul
xchg
outsl
insb
xor
mov
push
scas
lahf
sbb
stc
sub
inc
pop
ficoml
pop
push
jb
add
adc
incl
test
lret
in
inc
pop
fisttpl
add
loopne
pushf
rcrl
xor
mov
xchg
xchg
in
dec
cmp
mov
jmp
das
mov
data16
out
aas
mov
sbb
jp
mov
xlat
test
ret
call
insb
stc
aas
out
into
imul
mov
mov
mov
rcl
fcoms
jecxz
clc
xor
adc
cwtl
dec
ret
xor
xchg
mov
stos
sub
mov
daa
fisttpl
pop
scas
lods
aas
movsb
rorl
adc
aam
pop
adc
popf
sub
mov
testl
adc
imul
dec
xor
adcb
pop
incb
stos
xlat
mov
sub
rcr
popf
add
jp
enter
clc
imul
xchg
cli
pop
pop
mov
mov
mov
cbtw
add
or
jle
out
ret
fcoml
shll
sbbl
in
push
insl
nop
test
popa
adc
in
es
xchg
inc
aad
ja
pop
cltd
lret
dec
fsubrp
cs
insl
pusha
popa
sub
mov
push
jp
sbb
cmp
popf
xchg
inc
dec
push
stc
or
ss
push
dec
push
push
aad
xchg
jbe
stos
sbb
cmp
out
fildll
pop
mov
jmp
fsubrs
clc
sbb
dec
or
mov
add
sbb
inc
xor
lcall
mov
faddl
into
and
jno
fbstp
and
notl
stos
cli
cmpl
cmpb
push
xchg
fwait
cld
adc
scas
aas
stc
mov
jno
es
mov
movsl
xchg
push
or
gs
daa
jecxz
andb
push
xlat
jns
js
scas
mov
push
gs
xchg
xchg
pushf
out
pop
and
and
icebp
mov
rcl
fcoms
ret
cmp
pop
mov
mov
cmc
repz
mov
imul
dec
jae
arpl
or
push
cmp
mov
cld
out
cltd
pushf
xchg
jns
pop
push
xlat
push
inc
adc
push
sbb
jge
fistl
lock
cmpsl
sbb
rclb
dec
xchg
mov
add
jp
jmp
push
imul
pop
imul
lods
lods
lock
mov
and
ret
sbb
mov
push
into
xchg
mov
mov
les
jbe
cmp
xchg
popa
int3
popa
imul
and
and
bound
lcall
shll
lahf
adc
jbe
mov
clc
xchg
cmc
lds
je
mov
test
rorl
dec
adc
mov
fs
add
and
pop
mov
add
push
cmp
sti
or
xor
mov
jecxz
bound
dec
push
sub
cmp
or
addr16
loop
stc
jl
int3
xlat
push
dec
cld
mov
pop
stos
sub
cmp
push
mov
pop
rclb
add
in
dec
popf
sub
rolb
xchg
and
cmp
mov
push
in
sbb
mov
and
xor
jbe
cli
inc
push
sbbl
or
ss
popf
cltd
stos
icebp
or
cltd
lods
adc
dec
test
test
icebp
xor
mov
cmp
test
dec
je
xor
xchg
mov
cwtl
out
and
sbb
int3
lods
into
iret
adc
cltd
add
or
repz
or
scas
cs
enter
cli
cmp
gs
cltd
leave
or
jbe
and
mov
stos
outsl
aam
data16
fidivrl
xchg
add
shr
stos
lods
sub
adc
or
cli
insb
lds
inc
dec
mov
cwtl
scas
jo
jno
add
mov
fstps
push
arpl
dec
mov
into
daa
rcrb
rol
aaa
std
popf
xor
push
sub
cmp
xchg
dec
xor
call
sub
jmp
ret
sbb
xor
inc
aad
mov
cmpsb
lea
mov
leave
fisubrl
iret
jb
pop
adc
add
add
lea
xchg
mov
dec
inc
jecxz
filds
add
xor
adc
and
fs
jb
push
jg
cld
gs
jle
xchg
lahf
lds
fwait
test
mov
lock
and
repz
push
enter
cld
xor
mov
push
add
sarb
ljmp
push
js
xchg
repnz
stc
rcrb
cwtl
std
push
push
je
push
je
push
mov
add
enter
xor
sbb
or
in
pop
fldenv
lahf
jb
adc
mov
les
jp
sti
loop
sbb
sarl
sub
lcall
imul
or
sti
mov
pop
push
in
hlt
push
mov
push
scas
es
out
aam
add
mov
mov
insl
and
leave
outsl
xchg
stos
mov
rcll
pushw
or
rolb
add
imul
aad
cmp
inc
aam
dec
mov
sbb
cmp
mov
in
cli
pusha
xor
xlat
jns
sbb
popa
or
mov
lods
imul
xchg
and
pop
mov
pop
mov
nop
fwait
sub
setp
push
lret
call
outsl
cmpsl
or
enter
subb
push
xlat
out
sbb
into
mov
fwait
mov
pop
push
adc
cltd
incb
and
mov
fcmovnbe
fs
xor
mov
cld
jmp
dec
pop
jno
push
cmp
mov
pop
adc
add
dec
dec
pop
mov
or
pop
rorb
rcrl
push
aaa
nop
jo
loopne
xor
inc
jo
cmp
scas
enter
xor
lret
je
stos
or
adc
push
cltd
mov
pop
cmpsl
insb
xchg
inc
das
sbb
jmp
ret
lods
mov
popf
cmpsl
stos
pop
add
mov
cmpb
enter
and
fsubrs
inc
ret
cmp
pop
fistps
in
adc
mov
inc
sarb
jo
jecxz
outsb
push
jnp
mov
out
out
fwait
arpl
ja
jmp
into
push
fdivp
in
pcmpgtb
mov
push
push
add
js
adc
mov
jecxz
jnp
pop
dec
xor
test
cmp
lds
cmp
int3
fdivl
stc
xlat
jp
cmp
xchg
push
push
pop
and
sarb
mov
into
mov
inc
loope
mov
mov
cmp
cli
enter
lret
xchg
push
fdivr
jo
xchg
and
in
and
call
cmc
push
jg
mov
jg
inc
mov
adc
mov
cmp
mov
push
enter
push
and
dec
stos
adc
pop
inc
sbb
out
stos
dec
mov
into
rorl
arpl
and
mov
sahf
fstpt
pushf
adcl
xchg
sub
inc
invd
arpl
xchg
insl
and
mov
iret
loopne
adc
in
fisttpll
in
pusha
fcomps
push
xchg
dec
cltd
cld
sub
jle
jecxz
lahf
inc
decl
leave
imul
jge
mov
xchg
das
and
pop
xor
sbbb
arpl
clc
mov
rcrb
pop
loopne
or
cwtl
add
ja
test
lcall
lods
data16
negb
ss
mov
push
outsl
mov
dec
arpl
sarl
and
mov
loop
and
stos
adc
aaa
mov
in
push
int3
idivl
xchg
jns
out
clc
out
jecxz
out
in
push
sub
je
enter
fwait
or
add
or
xchg
xchg
lcall
mov
sub
pop
xor
push
aam
test
xchg
cwtl
and
arpl
adc
cmpb
jg
roll
push
daa
jp
inc
les
pop
sub
sbb
stc
pop
std
test
dec
pop
sbb
ljmp
dec
js
es
in
ja
jo
push
add
dec
xor
ret
in
xchg
push
mov
mov
js
sbb
sub
sub
nop
outsl
xor
loope
outsb
inc
negb
or
mov
add
push
pop
cmp
mov
sub
push
into
xchg
mov
sahf
mov
test
stos
in
repnz
imul
divb
pop
icebp
mov
sbb
pop
mov
cmpsb
jno
mov
sahf
jmp
xor
jl
adc
push
and
push
mov
in
lods
aas
adc
and
lock
sbb
data16
sti
push
out
push
hlt
leave
lock
aas
add
push
jmp
inc
ss
mov
push
and
fiaddl
cwtl
out
fnstsw
xor
rcrl
stos
cwtl
je
pop
mov
sahf
mov
lds
dec
xchg
xchg
xor
lss
push
xor
repnz
dec
inc
jl
mov
mov
and
dec
fwait
dec
repz
add
xchg
sahf
mov
mov
pop
je
sahf
cmpb
fwait
jns
xchg
mov
or
jge
push
mov
es
inc
rcrb
lods
sub
fsubl
adc
sbb
ja
xchg
jl
push
pop
shlb
repz
and
inc
das
ss
inc
shrb
enter
test
jno
mov
cmc
ljmp
insl
xor
faddp
or
dec
jo
mov
cmpsb
sub
imul
mov
mov
fnsave
hlt
call
cmp
aaa
movsb
mov
pop
pop
mov
mov
dec
bound
inc
xchg
popf
mov
jae
adc
sbb
in
mov
adc
dec
xlat
ss
push
jns
ss
xchg
popa
insl
push
cmpsb
in
lcall
xchg
gs
std
and
mov
pushf
pop
mov
cmpb
imul
push
mov
cmpsb
xchg
cli
call
scas
ss
cmpsb
pop
dec
dec
cli
shlb
inc
sahf
sub
lods
adc
ja
and
push
sbb
add
int
inc
call
mov
and
jno
push
push
mov
jp
aas
add
and
push
jbe
mov
cmp
push
fstl
cmp
adc
rcrl
xchg
shll
push
add
sbb
clc
cmpsb
xor
outsb
lret
mull
std
test
dec
mov
push
inc
dec
and
sarl
imul
sbb
inc
arpl
push
dec
repz
dec
test
sub
sbb
stc
hlt
mov
dec
cltd
jns
fcmovnu
xchg
add
or
testb
pop
arpl
je
cmp
sbb
aaa
and
sahf
mov
dec
adc
sub
push
popl
add
ljmp
jbe
cltd
push
daa
notl
or
movsl
sahf
lods
imul
push
mov
jmp
scas
testb
test
sbb
push
mulb
xorl
cmp
push
out
rorb
sub
adc
pop
repnz
cli
mov
jmp
inc
mov
sub
dec
sbb
sub
lods
andb
add
pcmpgtd
mov
jne
push
mov
iret
lock
icebp
add
lods
push
dec
addl
sbb
jae
insl
pusha
mov
movsl
pop
push
movsl
int3
pop
scas
adcb
sub
addb
inc
mov
pop
fwait
jmp
cmp
lds
jp
xchg
out
pusha
inc
stos
push
mov
xchg
sub
imul
shlb
jl
mov
rcl
cmp
and
cmp
lods
jnp
and
sbb
xlat
push
jmp
pop
or
push
jle
mov
and
cmpsb
repnz
imul
das
and
aad
les
jecxz
inc
xor
ljmp
xchg
inc
arpl
jnp
icebp
jp
nop
inc
out
adc
rorl
mov
jno
fadds
sub
xor
scas
outsl
das
dec
or
clc
lock
or
lahf
stos
inc
imul
ja
cmp
nop
xor
mov
movb
xchg
cwtl
addr16
mov
divl
adc
mov
pop
jbe
mov
leave
or
add
mov
jl
pop
loope
jl
ljmp
std
hlt
sbb
push
adc
clc
mov
sarl
je
rcrl
jle
test
push
adc
fnstenv
jbe
roll
testb
add
cltd
xchg
cmp
and
mov
jp
out
mov
or
pop
mov
dec
jg
out
daa
dec
pop
fcmovnbe
add
adc
cmpsb
jae
push
sbb
insl
movsb
inc
insl
mov
mov
jecxz
ret
aas
fwait
cmp
inc
push
jp
push
push
aaa
push
adc
mov
cmp
cmp
add
in
push
stos
std
cwtl
or
pusha
xor
out
sub
mov
popa
xor
push
out
jbe
jns
data16
mov
cmp
and
cmpsl
pop
mov
sub
xor
ficoml
mov
sub
push
sbb
fsincos
or
lahf
sbb
adc
int3
leave
in
adc
lret
sub
aad
pop
popa
loop
test
sti
sub
inc
jge
jecxz
xor
mov
loopne
jns
push
orb
mov
mov
arpl
rcll
mov
ja
ljmp
jnp
lods
into
rcl
test
aas
repz
jp
in
pop
dec
sahf
pop
push
gs
sbb
outsl
into
das
xor
inc
xorl
jnp
mov
push
dec
mov
push
sbb
pop
pop
add
dec
add
or
jnp
loopne
pop
iret
shl
jg,pn
mov
fucomi
movsb
xor
inc
fcompl
addl
add
fistpll
sbb
xor
fadds
dec
cmp
mov
loope
sbb
jp
cmpsl
push
push
in
prefetch
movsl
dec
scas
enter
cmp
orb
lahf
jmp
sbb
into
cli
insb
jbe
push
add
cmc
aad
adc
inc
dec
outsb
je
addr16
or
arpl
insl
test
popf
lcall
repz
ret
mov
andps
cmp
sarl
inc
xlat
repz
add
fwait
aam
rorb
xor
dec
mov
lret
pop
lahf
cmp
inc
cmc
mov
jae
xchg
adc
ret
jl
lods
inc
mov
pusha
and
push
int
cmpsb
add
cli
xchg
nop
pop
dec
daa
insl
cwtl
pop
test
cli
or
fnsave
inc
pop
sti
shr
pop
lahf
repnz
int
mov
hlt
aad
push
mull
jmp
mov
cmp
jg
inc
inc
insl
mov
jno
mov
mov
adc
leave
push
ret
test
push
iret
pop
daa
jge
sub
ss
pop
fcom
mov
pop
mov
sbb
push
adc
rcrl
arpl
stc
stos
mov
jl
int
stc
add
fnstsw
inc
pop
mov
sbb
push
jp
outsl
xchg
mov
xchg
cltd
xchg
cmp
insb
cmp
out
inc
fcoml
xor
push
jl
das
jmp
sub
idiv
daa
mov
or
imul
push
test
mov
movsl
out
lret
push
ss
mov
xor
sub
fisttpll
fisubs
cmp
mov
jne
mov
inc
js
dec
mov
or
insb
pop
cwtl
jg
inc
iret
mov
inc
mov
cmp
or
cmp
inc
imul
test
pushf
clc
or
roll
repz
fstp
test
bnd
in
daa
out
xchg
bound
jb
jle
dec
gs
aaa
xchg
dec
mov
push
repnz
xchg
loope
cmpsl
mov
cli
mov
das
adc
push
ret
cld
sub
cltd
jp
loop
aad
adc
sub
fistpl
cmp
int
or
and
jne
std
or
mov
fwait
sbb
movsb
test
mov
adc
pop
push
xchg
cmp
pop
add
pop
addr16
add
movl
sub
js
jbe
jae
into
and
mov
movsb
push
ret
sub
scas
sbb
iret
push
jo
inc
xchg
push
push
mov
or
pop
cmp
mov
scas
jg
js
cltd
sarb
mov
mov
mov
fistl
fs
cwtl
fwait
mov
mov
jge
ss
dec
lea
sbb
jge
mov
popf
bound
jno
ret
enter
fists
push
pop
in
adc
add
jle
inc
lods
icebp
mov
add
xchg
enter
dec
imull
gs
leave
push
stos
sub
lea
adc
xchg
inc
jns,pn
inc
out
mov
cmp
mov
ficompl
lds
sahf
loopne
push
mov
jecxz,pt
outsl
xor
arpl
cmpsb
lds
or
in
xchg
mov
sub
add
dec
sub
mov
mov
shlb
mov
out
std
loopne
mov
int3
decb
shrb
cmpsl
mov
lret
ret
adc
inc
ret
and
sbb
dec
cmpsb
decb
stos
sti
add
push
mov
mov
dec
and
cmp
xchg
push
das
out
daa
or
jnp
dec
repz
rcl
or
aas
xor
inc
in
fsubp
and
dec
push
fstpl
out
pusha
xchg
cmp
ljmp
dec
inc
mov
es
ret
jp
loope
add
and
call
inc
cltd
pop
xchg
out
xor
in
clc
lea
sub
inc
xchg
movsl
cmpl
ret
insb
cmp
xchg
push
xlat
stos
loop
aas
add
jecxz
loop
clc
arpl
scas
mov
loope
insb
repz
movsb
div
or
push
mov
jp
icebp
cmpsl
cmp
repz
out
sahf
shr
loop
add
xchg
imul
test
pop
dec
ljmp
xchg
pusha
nop
outsl
cltd
sbb
xlat
xor
inc
fdivr
jp
cmpsb
scas
or
dec
jle
clc
imul
loopw
cmp
xchg
cmpsb
hlt
mov
popf
imul
or
aad
aas
sbb
test
pop
loope
es
test
xchg
movsb
repz
jmp
xlat
cltd
call
mov
mov
cmp
stos
push
xchg
push
dec
scas
xlat
mov
push
inc
outsb
mov
inc
sarb
je
and
mov
pop
clc
movsl
cltd
add
fdivrl
filds
xchg
jp
popa
jecxz
in
cmp
cmp
sbb
in
sti
lahf
xchg
imul
mov
movsb
jl
push
mov
jmp
and
fistps
ret
push
scas
call
cmp
rolb
jge
push
jge
push
adc
lods
sbb
cmp
fwait
popa
loop
push
inc
pop
mov
sub
rclb
out
les
out
push
pop
jns
es
add
stos
sub
les
call
add
mov
loope
aam
mov
pop
imul
cmpxchg
or
data16
cmpsl
xchg
sbb
jbe
sbb
lret
or
or
xchg
push
add
lods
add
fwait
movsl
push
add
je
inc
cld
mov
movsb
cmp
loopne
jnp
loope
and
dec
call
sub
pop
das
mov
xor
push
jnp
rclb
xor
outsb
in
aad
loope
lods
repnz
add
cli
mov
lret
mov
mov
sbb
and
ret
les
negl
jno
xchg
insb
sub
mov
shl
xchg
add
pusha
jo
dec
fwait
xchg
sub
mov
outsb
ss
sbb
adc
call
jb
sahf
les
je
inc
ret
jle
je
inc
fs
repnz
inc
inc
jmp
in
cmp
mov
xchg
nop
sahf
xchg
enter
inc
mov
sub
rol
cmpsl
inc
sahf
inc
mulb
or
into
js
xchg
stos
xchg
std
aad
inc
cld
leave
cltd
imul
cld
sub
or
mov
mov
jl
das
sbbb
negl
add
push
and
sub
dec
mov
stc
xlat
aad
fistl
ljmp
push
or
push
loop
xor
jnp
inc
lea
inc
mov
and
inc
int3
dec
adc
ja
mov
shlb
ds
sub
aaa
pop
dec
leave
jo
sbb
shl
decb
add
nop
pop
inc
scas
loopne
ja
daa
fwait
push
xor
push
push
int3
cli
ror
pop
ret
sub
xchg
lret
xor
xchg
rcll
mov
stc
pop
ret
in
dec
call
mov
ror
sub
adc
rorb
filds
fwait
call
xchg
int
mov
lock
add
nop
push
out
jge
adc
push
mov
adc
cmp
pop
je
aam
push
pushf
movsb
outsb
xchg
fs
jg
sbb
sub
cmpb
std
xor
adc
aas
js
cmp
add
xchg
push
xchg
fmul
test
pop
ljmp
sbb
push
pop
inc
pop
inc
int3
pop
xchg
sbb
cmc
aam
iret
test
xor
leave
add
pop
adc
sbb
cld
int
cmp
icebp
divl
add
sahf
push
push
out
dec
fistpl
push
call
jecxz
or
jg
mov
popa
pop
jne
inc
insl
xor
mov
popf
push
or
pop
roll
int
pop
xchg
mov
mov
or
orl
jl
imulb
jmp
or
xchg
push
sub
xor
out
pop
mov
xlat
test
lret
cmp
mov
lods
ljmp
into
cmc
add
cwtl
orps
out
push
push
loope
xlat
insl
push
shll
std
or
testl
cmp
loop
jge
and
jle
ret
out
cmpsl
test
in
or
lods
ja
stos
mov
sbb
enter
mov
add
insl
fisubl
jmp
shll
xor
mov
aad
sbb
push
or
mov
sub
fwait
je
pop
xchg
adc
xchg
sub
daa
push
in
les
push
xchg
sarl
mov
movsl
sbb
jns
pop
sbb
sbb
push
das
inc
sahf
ljmp
cmc
jno
xor
pop
cmp
dec
lcall
pusha
lret
ja
sub
movsl
pop
int
adc
cmp
je
mov
int3
fadds
int
jns
sbb
ja
ja
sbb
add
leave
decb
inc
xchg
sub
or
popf
and
pop
cmp
push
adc
inc
xor
pop
add
loop
xor
es
sahf
shrb
stc
jns
shrb
pop
mov
inc
popf
ss
pop
cmp
xchg
adc
mov
stos
and
dec
fcmovb
xlat
dec
or
cs
movsl
cmpsb
mov
aam
mov
mov
push
dec
ficoml
inc
inc
leave
sub
stos
testl
cmp
sbbb
mov
pop
or
mov
push
movsb
push
popw
xor
fmul
mov
pop
jg
mov
data16
mov
mov
imul
xor
xlat
add
adc
inc
jecxz
popa
test
lcall
mov
inc
clc
mov
es
mov
mov
call
push
inc
jp
push
fwait
clc
mov
subb
adc
sbb
jb
xor
je
clc
fimull
jle
out
or
inc
xor
jno
mov
in
mov
call
adc
rcrl
mov
rolb
pop
addr16
jns
cmp
movsl
les
cmp
popf
mov
mov
pop
dec
pop
cmc
add
mov
aaa
cmp
xchg
and
cmpsb
cmp
nopl
test
push
xchg
ficomps
push
push
add
lret
jmp
aam
insl
cli
pop
adc
pop
pop
xchg
js
jno
mov
dec
call
insb
test
cmp
testb
js
add
fs
and
mov
pop
mov
jb,pt
jb
shrb
js
rep
pop
dec
and
adc
loop
adc
pusha
sbbb
lods
push
pop
cld
in
lods
ret
dec
jne
and
insl
fstpl
adc
jle
mov
dec
jb
xchg
adc
mov
mov
gs
leave
lds
inc
mov
mov
jb
adc
ss
fsubrl
jb
lock
ret
add
jnp
loopne
out
inc
cmpsl
fcomip
sahf
test
inc
mov
pop
xchg
mov
dec
dec
add
mov
jp
jge
mov
jp
xchg
adc
dec
mov
ss
fwait
je
cwtl
sbb
pusha
mov
mov
out
das
lods
inc
mov
les
xor
bnd
scas
stc
aas
inc
push
lds
out
jbe
movsl
inc
pop
jae
dec
es
jne
daa
or
inc
cmp
notl
negb
rcl
pop
cmp
cs
sub
push
xchg
add
pop
je
in
cmp
pop
icebp
mull
mov
lods
cmp
mov
iret
addr16
or
aam
fs
lahf
lds
and
cld
adc
pop
stos
bound
inc
add
sete
lds
mov
adc
int3
sub
fs
loop
xchg
pop
pusha
pop
dec
pusha
std
imul
into
xchg
cli
and
mov
fstps
les
in
mov
shll
sub
dec
xor
or
push
lea
std
jnp
daa
lahf
in
adc
push
lcall
inc
les
sbb
adc
arpl
cltd
mov
jl
loop
jl
jmp
lods
cmpsb
cmpsl
movsl
outsb
xor
mov
xchg
and
aaa
dec
push
ret
imul
mov
lods
sarl
adc
dec
push
hlt
sti
test
lds
pusha
xlat
ja
daa
stos
stos
push
sbb
sbb
cmpsb
outsl
icebp
mov
mov
add
push
aam
nop
mov
add
lods
mov
pop
mov
jo
lcall
xor
pop
jg
sbb
push
fwait
jne
push
push
xchg
jno
insb
shr
xchg
enter
fidivrl
leave
dec
loope
xchg
lcall
xchg
call
ficompl
loop
fwait
icebp
push
pop
fdivrl
dec
mull
xchg
xor
pop
xor
clc
repnz
pushf
dec
loopne
leave
daa
icebp
lahf
jle
les
cmp
dec
fcomp
inc
mov
push
push
mov
je
cmp
dec
and
loope
or
jle
sub
cmp
xchg
xchg
lret
cmp
mov
testb
xchg
mov
ret
add
push
mov
jae
xchg
dec
sub
mov
cli
inc
out
mov
sbb
push
inc
rcrl
fimuls
lret
mov
cmp
imul
shl
add
cmc
cmp
add
enter
mov
call
dec
push
mov
lahf
add
leave
or
into
es
aaa
mov
jb
mov
sbb
xchg
icebp
test
pop
lret
pop
mov
lcall
adc
movsl
adc
into
fsubp
pop
pop
sarb
push
into
add
sbb
loopne
pop
enter
pop
lods
call
mov
mov
out
cmp
fnstenv
inc
xchg
pop
dec
jns
mov
inc
out
adc
cmp
aam
inc
lds
add
xchg
adc
sub
cmp
pop
rcr
outsb
repz
out
hlt
mov
sahf
aad
repz
mov
xchg
and
push
xchg
and
or
rorb
insb
adc
in
push
sub
in
push
cmpsl
cltd
aad
stos
push
mov
sbb
pop
mov
sahf
sbb
xor
cwtl
mov
out
cmp
push
adc
fisubrs
and
jae
cmp
sbb
mov
aam
in
lea
lret
es
push
mull
sbb
mov
inc
outsl
cmpsb
sarl
into
sub
sub
jge
lahf
xchg
pop
cmp
dec
pop
subl
xchg
sub
ret
sub
nop
dec
inc
inc
push
fstpt
cmp
mov
hlt
xor
and
add
adc
popf
outsb
ret
outsb
lret
xor
push
outsl
test
gs
ds
xchg
fdivs
pop
mov
sahf
jns
divb
mov
cmpl
add
xchg
mov
add
scas
or
aaa
sbb
dec
mov
imul
loop
sbb
and
sbb
das
xchg
inc
push
jg
imul
bound
fdivp
loope
inc
xlat
arpl
popa
pushf
cltd
popf
xchg
leave
out
scas
xchg
loop
add
fs
jae
push
shl
pushl
mov
sbbl
inc
adc
jecxz
fwait
inc
out
cs
lret
data16
mov
jl
mov
dec
filds
ds
jle
push
jle
shrl
push
mov
insb
jno
jg
push
xchg
fldl
mov
xchg
mov
push
mov
mov
cwtl
stos
fisttps
adc
fs
es
xor
test
push
les
test
repz
adc
adc
jle
jno
adc
jb
add
xchg
xlat
dec
pusha
and
and
outsl
or
lods
jmp
pop
sub
xchg
mov
adc
mov
mov
sub
push
mov
fmulp
mov
adc
jno
sub
and
insb
stc
aaa
mov
testl
pop
ja
hlt
pop
xor
jg
cmp
adc
xchg
mov
push
daa
popf
xchg
push
mov
xchg
pop
cmpsl
pop
ds
or
pop
mov
movsl
stos
jmp
shr
jns
popa
js
push
push
dec
mull
inc
mov
pop
dec
les
mov
dec
nop
xor
lds
mov
or
adc
aam
cmp
sbb
int
pop
mov
push
xchg
aad
imul
roll
jne
in
fdivrs
adc
int3
rolb
dec
xchg
ljmp
nop
repnz
jo
int
insb
ljmp
jne
cmp
mov
sub
je
lea
dec
fisttps
inc
dec
test
pushf
push
loope
fdivrs
push
inc
mov
data16
dec
mov
fidivrl
std
pusha
mov
dec
adc
popf
movsl
mov
and
imul
dec
in
xchg
or
aas
cmp
call
fnsave
data16
push
pushf
xchg
pop
inc
pop
cmpsl
leave
xchg
add
lea
notl
inc
push
or
outsb
adc
mov
lret
add
jle
clc
sbb
insb
pop
test
loope
test
out
js
or
outsl
stos
das
insb
mov
xor
insb
scas
sti
cli
test
or
mov
push
pop
mov
pop
lea
cmp
mov
cmp
dec
mov
sub
fs
dec
cli
and
outsl
fnsave
hlt
mov
mov
xchg
add
leave
mov
sub
and
sub
xor
cmpl
mov
fdivrs
sub
es
stos
adc
pop
hlt
add
scas
dec
cmp
pop
mov
icebp
push
mov
loop
pushf
mov
fdivrs
add
call
push
outsb
cmp
scas
push
scas
cmp
xor
stc
jb
adcl
xor
lret
lcall
or
cmpsb
push
fstl
dec
pop
push
cmc
stc
jp
sub
jmp
orl
mov
pop
leave
sbb
cltd
cmc
add
je
int3
aas
imulb
pop
fisubs
sbb
out
sbb
stos
cs
and
mov
rcll
ss
fdivl
mov
mov
sti
sub
or
shl
push
xchg
push
rcll
pushf
push
xor
add
call
push
add
dec
shll
addr16
popa
cmp
push
pop
jns
repnz
sub
adcl
push
push
xorb
movsb
in
or
adc
aad
mov
sub
jae
repz
test
fwait
aas
out
pop
aad
mov
xor
das
ljmp
out
jno
mov
in
adc
mov
cmc
orl
movsl
arpl
lcall
cli
push
ja
xchg
mov
mov
push
enter
jae
jmp
stos
outsl
sub
pop
jne
rcrl
filds
add
jae
mov
mov
pop
in
popl
ret
add
fisubrl
out
js
dec
dec
push
aaa
lods
xor
testb
and
popf
add
dec
leave
lret
mov
sbb
in
push
flds
dec
in
lret
clc
xchg
sarb
aad
iret
and
das
dec
lret
popl
jns
arpl
mov
psllq
pushf
jns
lock
or
mov
add
icebp
rcll
loope
jl
xor
mov
push
dec
jle
pop
jge
fidivrs
xchg
jno
and
cmpsb
mov
outsl
cmp
add
cmp
mov
out
das
popa
test
dec
insl
aad
and
mov
scas
sbb
or
and
push
stc
mov
jno
mul
stos
push
xor
into
int3
das
pop
pop
lahf
aad
sbb
cmp
add
mov
push
cwtl
dec
je
mov
or
pushf
inc
jp
push
dec
sbb
jne
sbb
jo
sbbb
and
or
stos
mov
jo
mov
adc
xor
jno
pop
push
xlat
adcl
inc
lret
fidivrl
or
ljmp
dec
idivb
mov
mov
int
dec
xchg
add
mov
mov
shll
push
lcall
cmpsb
fwait
pop
sbb
push
negb
cli
into
mov
stc
push
nop
push
xlat
mov
and
mov
test
or
not
js
rorl
cmp
fs
adc
test
mov
dec
or
roll
jge
or
stos
movsl
dec
jae
out
insb
push
xchg
mov
cmp
out
aas
push
outsb
into
pusha
adc
rcr
ds
ljmp
push
scas
roll
mov
lret
fildl
push
cwtl
jle
icebp
pop
adc
mov
cmpsl
cmp
scas
mov
in
test
sub
inc
dec
pop
xchg
lret
movsb
aam
xchg
sarb
xlat
mov
cltd
adc
cltd
sahf
xchg
hlt
add
xchg
fimull
pop
mov
int3
jb
dec
mov
jecxz
jae
fwait
adc
jo
push
cmp
in
pop
xchg
inc
sahf
movsl
jno
sub
xor
pop
dec
das
pusha
pop
cld
lea
outsl
pop
add
enter
shll
adc
sub
inc
and
push
test
frstor
xor
test
mov
insl
and
or
loop
mov
and
test
mov
loopne
ds
xlat
or
mov
test
add
xchg
push
fdivrs
int3
pop
test
mov
jae
adc
cmp
cmp
and
and
fstl
dec
movb
pop
je
mov
fnstcw
sbb
cltd
addl
aam
in
mov
ficoml
test
adcb
fdivrs
cltd
add
cmc
repz
nop
sbb
test
push
hlt
dec
cld
mov
jo
pop
mov
jae
imul
sub
xchg
subb
mov
jge
dec
mov
clc
test
pop
lea
xor
jae
mov
lds
out
push
sub
rcl
shlb
mov
loope
add
add
sahf
inc
stc
sbb
ds
push
lcall
xchg
jle
adc
add
out
je
mov
and
cmp
into
sub
sub
iret
or
stos
adc
subl
out
cmp
and
loop
jl
popf
sbb
sti
cli
xor
fsts
lds
xchg
xor
push
mov
arpl
repnz
jno
inc
inc
dec
push
cmpl
jno
and
cmp
dec
imul
popa
je
int
leave
fxch
enter
and
jp
jecxz
xchg
mov
xor
push
fwait
push
xorl
loope
lret
lcall
adc
jl
stc
fdivr
imul
push
adc
lods
cmp
add
jo
dec
adc
dec
stc
sub
push
pop
push
es
enter
ret
push
addb
adc
pop
repnz
scas
ficoml
adc
or
loope
lcall
or
ja
sbb
xchg
js
pop
fiaddl
mov
adc
mov
xorl
adc
outsb
adc
sub
dec
push
dec
iret
sahf
ret
jle
xor
or
sbb
and
es
xchg
sub
repnz
or
in
dec
loop
sar
lcall
push
mov
cmc
clc
subb
and
not
cmc
or
adc
push
jmp
dec
mov
push
xchg
shll
arpl
imul
and
rcl
leave
xchg
dec
jle
cmp
stc
dec
clc
xor
and
xor
dec
xor
rcrb
stos
out
pop
jbe
pushf
mov
cs
xchg
cmpsb
loope
clc
dec
mov
add
jbe
jne
mov
test
xchg
int3
fdivrl
int
ret
xor
sbb
into
dec
sbb
xchg
xchg
shll
inc
aad
sbb
out
loopne
inc
call
cmp
dec
jmp
clc
test
shlb
enter
cld
jecxz
and
push
jp
jl
in
addr16
inc
lret
jp
cmp
xchg
lods
xor
aad
jno
imul
cmp
or
xlat
inc
pop
leave
cltd
leave
jl
lahf
pusha
cmpsb
xchg
gs
adc
mov
sahf
mov
sbb
mov
mov
cmpsl
or
cmpl
mov
lret
xor
nop
mov
fildll
inc
cltd
inc
dec
push
or
sub
stos
inc
stos
fwait
lods
repnz
lea
lock
adc
scas
dec
lea
inc
cmpsb
pushw
push
mov
mov
popf
adc
in
adc
pshufw
push
add
dec
into
or
add
push
imul
cmpsl
cmp
xchg
push
sbb
sbb
call
cmp
int3
or
jnp
adc
xchg
rclb
mov
jns
outsb
mov
movsl
sbb
je
or
cmc
or
dec
ret
xor
sbb
xor
inc
cli
mulb
inc
mov
scas
outsl
mov
fisubl
inc
inc
call
adcl
ror
rorb
sub
iret
leave
mov
scas
in
lods
inc
aaa
cmp
ret
addr16
mov
inc
pop
je
jg
insl
mov
notb
adc
jno
inc
xor
lock
pop
jg
xchg
jp
adc
nop
or
xor
push
xchg
iret
or
pop
mov
add
ja
pop
in
addr16
addr16
and
fmull
in
add
test
lahf
pop
iret
mov
inc
cmp
or
fstps
add
cld
addb
in
push
cmpsl
mov
out
cli
push
divb
inc
or
dec
jmp
mov
jl
out
and
sub
jbe
sbb
out
cmp
mov
sti
and
jns
or
int
cs
adc
add
in
adc
adc
add
xchg
cmp
ja
rorl
mov
jmp
mov
jbe
sub
adc
mov
or
mov
into
mov
add
jmp
insb
lret
scas
and
pop
push
stos
sub
sub
out
insl
add
sub
and
push
lods
dec
repz
aad
ss
enter
dec
lods
das
sbb
sub
inc
popa
fistps
jbe
test
lds
mov
xor
repnz
cmc
aad
or
ja
subl
pusha
ljmp
psllq
fldl
xchg
pop
prefetch
sub
lahf
sub
mov
push
mov
xor
ret
es
insb
fimuls
inc
jg
pop
cmp
dec
sbb
adcb
inc
add
test
pusha
pop
or
call
test
mov
adc
test
lahf
mov
stos
imul
jge
dec
inc
out
lret
inc
jo
push
lods
adc
cmc
fnstenv
in
loope
popf
xchg
shll
fimuls
shrl
flds
mov
pop
and
jmp
dec
pop
movsb
mov
pop
push
push
test
mov
mov
jno
sbb
push
ljmp
enter
sti
clc
push
mov
inc
mov
or
push
lock
push
orl
leave
xor
sahf
push
pop
mov
xor
xlat
jle
xchg
adc
divps
xor
subl
cmpl
inc
mov
sbb
jmp
dec
loop
push
adc
xchg
pushf
cmp
xchg
pop
push
das
add
leave
cmp
xor
jge
adc
sub
sti
repz
imul
test
push
mov
popa
inc
jge
cmp
lcall
and
in
pushf
fcmovu
inc
mov
rcl
jne
dec
xorl
addl
xchg
push
fisubs
and
insl
sbb
cwtl
xchg
push
xor
fcmovne
xchg
mov
cmp
aad
unpcklps
xor
jecxz
stc
sbb
test
popa
ret
shlb
push
leave
aaa
ret
or
sbb
inc
lds
pop
xlat
pop
xor
and
cmp
pop
mov
jnp
xchg
movsb
stos
out
cmp
es
push
adc
lcall
sbb
and
cld
gs
sub
mov
mov
push
test
test
sbb
mov
pop
arpl
jmp
and
add
xor
cmp
out
std
int
and
and
loopnew
pop
jmp
stos
jg
fucomip
movsb
inc
imul
pop
in
aam
dec
sub
addr16
jge
faddp
inc
or
sti
in
xor
dec
mov
popa
mov
inc
or
add
loopne
sbb
add
push
js
ret
rcll
pop
sbb
lds
inc
iret
pop
xchg
lcall
sub
loop
inc
xorl
repnz
dec
aad
push
pop
cmp
pop
test
push
xor
adc
sbb
push
push
mov
std
out
ljmp
aad
add
fsubr
adc
in
lock
inc
dec
nop
mov
clc
ja
sti
sbb
jl
scas
xchg
xorl
dec
jle
push
push
mov
out
out
in
xor
push
pop
pop
xchg
cmp
adc
ss
iret
jg
test
jg
mov
sbb
sub
data16
or
lcall
mov
cli
fisttpll
into
or
loop
pop
mov
dec
in
test
rorb
push
fnstsw
push
xchg
sbb
ja
adc
call
jae
add
mov
test
xor
mov
das
in
cmpsb
and
jb
adc
mov
repnz
xor
decb
clc
test
sbb
or
push
das
adc
jl
mov
mov
sbb
adc
sbb
stos
and
mov
xor
pop
dec
mov
push
loop
cli
pop
sub
je
adc
call
mov
xchg
push
clc
mov
lea
mov
cmp
jns
outsl
sub
inc
mov
xorl
or
jle
jmp
pusha
sub
test
push
jns
inc
daa
add
ss
out
lahf
mov
jnp
test
out
sbb
ret
pop
cmpsl
push
push
ss
aas
sub
shl
mov
test
pushf
inc
lods
pop
jo
inc
lods
lcall
fdivp
sub
mov
jmp
mov
out
enter
lret
outsl
arpl
cmp
out
xor
xchg
push
push
gs
jne
scas
sbb
movsl
jno
mov
push
xchg
cmp
sub
fstps
add
mov
fsubrs
bound
or
in
outsl
xor
mov
jno
popa
clc
fldt
jo
sub
sbb
push
jne
mov
xchg
lret
fwait
les
stos
jno
loop
cs
rcrl
adc
jne
rclb
sbb
into
iret
hlt
pushf
add
xchg
orb
dec
leave
mov
add
cmp
sbb
xchg
mov
mov
bound
cmpsb
xchg
xor
out
mov
lods
mov
dec
fucomp
cmp
mov
add
loope
sbb
xchg
mov
dec
lahf
fsubrp
shrl
imul
pop
inc
mov
fs
dec
pop
int
mov
xchg
or
adc
js
inc
stos
pop
js
sbb
inc
inc
mov
in
jg
inc
jb
mov
pop
dec
inc
sahf
scas
out
stc
cs
push
aas
imul
inc
push
xchg
outsl
nop
repz
sbb
shlb
scas
xchg
int3
pushf
push
or
adc
cmpl
test
adc
or
imul
pushf
leave
and
dec
into
add
sahf
dec
jbe
add
xchg
sbb
push
jno
adc
push
and
and
ret
sub
xchg
sbb
sub
in
sbb
inc
mov
sti
loopne
mov
xchg
ret
lea
and
pushf
dec
arpl
mov
xchg
jmp
xchg
es
mov
xchg
xchg
stos
adc
or
xchg
lods
mov
fistpll
das
add
das
lods
xor
aam
xchg
dec
add
mov
sub
or
cwtl
jnp
sbb
insl
pop
adc
lret
inc
cmpsb
bound
cmp
push
xchg
sub
jb
das
mov
xchg
or
stos
les
adc
xor
pop
iret
fcmovnbe
mov
sub
sbb
sub
add
xor
test
mov
roll
ljmp
in
cmc
push
pushf
mov
fnstsw
jp
dec
js
insb
inc
mov
out
push
dec
or
pop
add
inc
cmc
sbb
push
iret
dec
cmp
inc
scas
mov
xor
lea
mov
jae
and
rclb
movsb
sub
fsubrs
xor
sbb
out
addb
fwait
nop
pop
ljmp
inc
add
fcompl
jns
out
imul
mov
ficoml
xor
cltd
xlat
lods
aam
mov
adc
mov
popf
ja
sahf
xchg
push
jno
sbb
leave
jecxz
mov
lods
ja
mov
cmp
bts
lret
sbb
push
jle
pop
popa
push
out
imul
lds
xchg
lahf
adc
lock
lds
sbb
xchg
fisttps
cli
mov
fwait
mov
cmp
fidivs
mov
popa
mull
and
mov
and
int
cltd
subb
adc
pushf
jge
dec
inc
push
cmp
xchg
xor
mov
ret
sbb
xchg
loop
sbb
jae
xchg
pop
push
or
xor
push
mov
xchg
cmp
rolb
mov
fisubrl
add
mov
xor
js
cmp
lods
or
sub
mov
std
fcompp
outsb
mov
mov
cmp
add
lea
test
jb
push
xchg
xor
mov
jmp
and
roll
add
cmp
adc
and
gs
adc
jnp
inc
adcb
and
and
push
add
lret
int
shl
test
ret
pop
dec
sbb
dec
and
pop
and
xchg
cwtl
mov
mov
mov
fdivrs
ja
lret
push
mov
inc
dec
inc
mov
sbb
aas
ss
sbb
mov
mov
pop
test
or
negb
pop
or
xchg
movsl
lfs
sahf
loopne
xchg
push
add
push
ja
lea
clc
movsb
dec
dec
leave
sub
or
dec
push
out
dec
cmp
cmpsb
adc
fildll
cmp
sub
adc
fs
dec
and
mov
mov
jl
iret
ds
pushf
lcall
fists
dec
ficompl
mov
mov
sub
jge
bound
pop
inc
or
push
inc
lods
push
lahf
jecxz
dec
aaa
dec
sahf
xchg
jmp
mov
jge
fistpll
mov
add
add
sbb
cmc
pop
or
lods
lods
pop
pop
loop
cmp
or
sub
scas
dec
inc
push
pop
pop
aas
adc
and
mov
sbb
int
inc
jl
fcmovu
hlt
push
xorb
xor
pop
mov
test
lcall
gs
sub
inc
out
fs
rclb
jmp
xorl
aad
adc
in
fsubrp
lea
movsb
jae,pn
lea
outsb
pop
div
ja
push
jnp
xchg
dec
jle
cmp
lods
or
or
cli
cmp
lds
sbb
in
gs
or
adc
testb
mov
mov
dec
bnd
add
enter
std
push
lds
mov
orb
inc
aaa
mov
sbb
xlat
or
push
ljmp
movsl
xchg
call
mov
bound
fldcw
xchg
xchg
pop
or
cmp
lea
jmp
inc
dec
enter
push
mov
and
mov
imul
jle
jns
cmpl
dec
push
fisubs
mov
push
mov
or
fs
lret
into
hlt
xchg
mov
divb
adc
je
xor
dec
or
push
mov
push
mov
pushf
pop
dec
mov
xor
inc
inc
sbb
and
push
inc
ja
ficomps
es
inc
pop
jg
js
push
add
loopne
jg
jg
clc
daa
inc
popf
add
dec
jle
lods
pop
mov
stos
xor
mov
mov
xchg
shrb
jp
inc
pop
pop
push
push
dec
adc
adc
lret
in
mov
and
faddl
bound
cmp
sti
cmp
dec
sbb
arpl
std
in
cmpsl
cld
xor
filds
adc
jns
shlb
pop
sahf
xlat
mov
or
arpl
xor
jns
fmul
in
in
js
loope
dec
cmp
add
mov
cld
pop
mov
xchg
clc
lret
int3
xchg
test
fwait
jmp
cltd
int3
cmp
cmp
and
push
jge
mov
fcmovbe
sbb
and
lret
add
bound
lods
sbb
stc
fnstcw
imul
mov
gs
sbb
lret
aaa
cmp
mov
cmp
push
jle
add
movsl
mov
fwait
xor
jae
cmpsl
out
jno
scas
add
ds
test
mov
inc
add
lods
and
fiadds
push
hlt
jno
sbb
jne
dec
clc
sbb
loopnew
pop
test
jo
jge
jbe
xor
stos
out
cld
aaa
clc
sub
cmp
inc
sub
cli
or
or
rcrb
lret
pusha
and
jns
rcrl
aad
fldl
jmp
jo
mov
stos
adc
enter
dec
aaa
xor
daa
and
mov
fcompl
mov
rol
push
int3
sbb
pop
add
cmp
dec
cmp
pop
nop
mov
pushf
pusha
imul
jge
xchg
jnp
nop
pop
aad
or
dec
fidivl
inc
jnp
push
mov
ss
hlt
loopne
inc
movl
mov
cld
imull
xchg
flds
lret
xchg
push
mov
cltd
pop
bound
add
mov
ret
xor
pushf
mov
ret
int
inc
xchg
sbb
adcl
pushf
in
push
mov
aam
les
icebp
fs
scas
jg
test
xlat
mov
movsl
mov
clc
test
and
out
xor
mov
sbb
mov
movsl
inc
dec
pushf
push
sbb
and
add
leave
shlb
in
mov
sub
cmp
jae
pop
add
jl
cmpsb
into
aaa
pushf
cmp
cmp
xorl
sub
in
push
jge
adc
out
dec
int
pushf
out
or
outsb
fcomp
repnz
adc
mov
pusha
and
cltd
mov
add
jne
push
imul
jl
fs
daa
int
subl
jmp
ror
and
leave
fstpt
cwtl
ss
or
and
loop
xchg
incl
loopne
cwtl
aaa
and
cld
lods
and
js
xor
inc
std
jecxz
mov
insb
push
jno
xor
or
lret
xor
xchg
outsl
jbe
lahf
shrl
notb
adc
jmp
push
inc
sbb
fdivr
xchg
jl
insl
pushf
fimull
cmp
popl
adc
out
jb
pusha
loopne
push
inc
jbe
call
pop
arpl
sbb
jns
push
fidivrs
sub
mov
popf
pop
shrb
xor
inc
pop
jb
cmp
or
inc
rcll
rorb
mov
jno
test
jl
repz
jg
mov
lahf
fcoms
jmp
jbe
dec
xchg
out
add
adc
inc
sub
sti
adc
dec
popa
or
xlat
dec
dec
sub
cli
fwait
sbb
sub
jo
inc
hlt
rcr
xchg
jnp
mov
jmp
test
mov
sti
enter
adc
cld
pop
mov
pop
cmp
fsubs
mov
mulb
jae
aad
push
push
push
push
jbe,pt
aas
or
or
loopne
imul
cmp
jl
out
enter
mov
mov
sub
arpl
sbb
repz
pop
cmpsb
sarl
jecxz
test
mov
add
mov
sbb
xchg
jno
in
xchg
rclb
push
sbb
sbb
mov
ja
sbb
pop
cld
fbld
mov
and
ret
xchg
loope
cmp
bound
push
ficoms
mov
ss
aad
jge
fsubrs
int3
aas
add
call
out
push
xchg
movsl
jmp
xor
jp
inc
rorb
jl
cli
in
iret
lock
inc
jnp
sar
out
jns
mov
shlb
xchg
jp
inc
mov
repz
enter
mov
add
adc
shlb
mov
sub
out
pushw
inc
movsb
ljmp
and
and
cmp
bound
dec
ret
imul
shlb
mov
es
lods
dec
movsb
fbstp
xor
adc
cltd
sbb
add
mov
cmp
ja
adc
cli
sbb
xor
sub
push
xchg
les
sbb
out
xor
mov
jne
pop
push
shlb
push
hlt
jno
mov
jmp
xorps
and
push
or
inc
push
out
mov
cltd
sub
arpl
cli
inc
out
xchg
or
dec
arpl
jge
fwait
sbbb
dec
pop
or
or
and
pusha
adc
dec
stc
out
leave
daa
ret
mov
lds
sub
and
mov
repnz
ret
dec
enter
mov
lds
add
clc
cmp
lea
and
pop
xchg
mov
lods
adc
mov
add
inc
dec
and
and
cmpsl
jp
sub
inc
cltd
mov
dec
mov
and
in
mov
push
inc
add
outsb
xchg
sbb
mov
jl
mov
cmpl
in
adc
shrl
mov
in
test
jbe
imul
push
enter
pop
ss
or
pushf
mov
mov
enter
imull
enter
leave
cmp
sbb
lods
mov
xorl
dec
dec
cmp
inc
add
add
in
inc
out
pop
insl
int
ljmp
xlat
scas
xor
cmpsb
jns
in
pop
adc
scas
pop
aam
mov
mov
xchg
push
es
pop
dec
aam
cmp
xchg
xchg
mov
inc
mov
pop
fdivrs
mov
out
or
pop
aam
dec
loopne
cmp
cmp
mov
xor
mov
sarb
push
and
ffree
roll
jne
hlt
je
dec
imul
out
loopne
daa
jmp
sub
pusha
imul
and
dec
mov
aaa
mov
test
insl
pop
rcrb
sub
repz
repnz
xchg
and
daa
cmp
cmpsl
pop
fxam
jp
mov
mov
adc
in
int3
mov
and
ja
add
jo
jl
iret
sbb
cmp
ljmp
lret
decb
sub
jle
rol
adc
into
stos
ret
ds
daa
mov
xchg
hlt
dec
dec
push
or
xor
mov
pop
leave
rcrl
adc
inc
pop
inc
xchg
fcomps
loop
std
mov
iret
je
loop
cwtl
push
push
dec
aam
leave
pushf
hlt
loop
inc
or
orl
lcall
out
arpl
xchg
loope
cwtl
dec
mov
xchg
ret
in
pop
and
dec
push
cmp
pop
test
hlt
jp
sub
push
mov
insb
dec
pop
js
push
mov
fwait
popa
sbb
fwait
mov
int
cld
sub
push
arpl
jno
add
leave
add
and
fiaddl
cli
pushf
cmp
jne
sbbb
enter
mov
jbe
iret
jmp
adc
inc
mov
cmpsb
mov
dec
adc
adc
push
lret
mov
pop
movsl
rcrb
pusha
jno
dec
das
mov
inc
dec
arpl
sbb
mov
mov
and
or
jbe
pop
pop
bound
out
inc
xchg
loopne
fadds
insl
mov
xchg
pop
sbb
test
sub
dec
popa
or
std
and
push
mov
mov
xchg
test
mov
mov
push
xchg
jbe
scas
push
lret
xchg
push
mov
repz
sarb
in
jp
jle
lcall
xchg
jl
sbb
xlat
aaa
addl
stc
jl
pop
sbb
mov
sub
cwtl
mov
lea
dec
aas
mov
scas
out
dec
ljmp
and
out
aam
roll
mov
loop
les
dec
mov
cmp
sub
pop
adc
dec
pmaxub
dec
pop
xor
jne
cmpsl
and
cld
add
xor
jbe
pop
pop
arpl
clc
lods
or
push
faddp
pop
push
fldcw
fldenv
push
cmp
fs
push
lock
cmp
jle
shl
and
fs
jp
push
divb
xchg
sub
mov
xor
dec
mov
or
dec
shlb
xchg
movsb
push
add
adc
jno
fistpl
pop
jecxz
aam
sarl
adc
pop
xchg
fs
pop
popf
xchg
shl
lret
lcall
mov
sahf
add
popf
xchg
push
pushf
pusha
xlat
shll
mov
lea
arpl
in
call
in
loop
insb
in
adc
outsb
sarl
popf
cwtl
in
adc
mov
and
int
pop
add
adc
xor
mov
push
adc
aas
fsubp
lcall
rclb
mov
lea
push
insl
fwait
xchg
lods
repz
add
mov
test
aaa
ja
inc
or
aam
inc
stos
add
xor
xchg
icebp
jle
jns
cmp
mov
xchg
out
test
dec
decl
imull
clc
ds
sbb
sti
jp
xchg
sbb
mov
mov
push
test
outsl
in
sbb
loopne
or
data16
decl
or
cmova
push
cmp
or
dec
inc
daa
pop
push
out
cld
dec
seta
pop
call
inc
mov
push
or
dec
frstor
sahf
aas
js
inc
cmp
or
mov
mov
add
jge
scas
xchg
imul
dec
inc
dec
and
cli
mov
tzmsk
cld
popf
jno
lcall
or
daa
push
scas
sbb
repnz
mov
and
lret
movsl
dec
das
pop
adc
mov
cmp
and
mov
mov
loop
test
outsl
xorl
int
mov
pop
out
xor
test
dec
repnz
test
sub
sub
sub
add
negl
movsb
push
loope
pop
jmp
pop
roll
push
dec
jno
mov
movsb
loop
daa
xor
inc
inc
pop
out
rcl
xor
jb
mov
push
test
rclb
pop
or
stos
pop
xchg
xor
xchg
pop
mov
push
in
loop
pop
out
ret
or
xchg
ljmp
insb
repz
xchg
call
out
mov
add
addb
repnz
in
xor
in
cltd
jp
xorb
pop
js
jmp
fcom
cltd
adc
sub
sahf
sbbl
gs
jg
pop
inc
insl
daa
dec
das
dec
pop
rorb
jl
and
hlt
lods
sbb
jge
cmpsl
push
jns
ret
dec
repz
into
fistpl
xchg
in
jnp
xchg
rolb
dec
jge
aad
fisubs
jb
mov
add
pop
mov
push
mov
mov
push
xor
jbe
popa
xor
lods
imul
mov
das
popa
fcomip
gs
mov
mov
xchg
lcall
sub
pop
test
jne
imul
rorl
loope
lods
shll
cld
push
xchg
dec
gs
cmc
push
jl
sub
add
cli
out
fidivl
mov
cmpsb
fs
insb
xor
pop
dec
cmp
add
out
adc
les
std
xor
or
inc
jecxz
jecxz
jnp
inc
push
stc
movsb
dec
popa
rorb
test
std
jp
and
inc
fiaddl
enter
lret
lret
imull
add
inc
pop
mov
pop
lock
cmp
mov
cs
push
repnz
push
adc
push
adc
addr16
add
int
movsl
pop
lcall
pop
iret
outsl
in
and
iret
pop
xor
mov
mov
pusha
outsb
inc
pop
inc
add
dec
lds
add
mov
repz
ja
movsl
in
mov
dec
test
insb
cmpsl
mov
push
mov
sub
inc
cmp
jp
rcrl
popf
and
addr16
in
frstor
push
push
inc
mov
hlt
adc
jge
scas
sbb
or
jmp
push
outsb
sbb
loop
sbb
das
inc
xchg
mov
out
sbb
cmp
pop
xor
cmp
ds
std
insl
std
arpl
push
outsl
enter
mov
aad
lret
pop
sahf
ret
or
or
adc
dec
sub
lahf
repz
lock
pushf
addr16
mov
sbb
push
lock
nop
mov
mov
rorl
repz
sbb
cmp
cmp
sub
xor
dec
fstl
flds
js
stos
fnsave
or
xchg
dec
icebp
inc
inc
xorl
pop
xor
int3
imul
sub
stos
test
xchg
imul
adc
xchg
div
movsl
jmp
dec
add
and
adc
jno
jmp
es
or
lea
xor
jle
cli
test
popa
sbb
inc
mov
mov
xchg
or
dec
push
cmp
add
pop
rcrb
data16
es
ret
aas
lea
repnz
gs
push
push
add
xor
aam
xor
stos
rcrl
dec
mov
out
out
jo
and
lock
cli
pop
aaa
fs
cmp
xchg
jmp
xchg
stos
pop
loope
scas
sbb
cltd
xchg
rorb
test
push
lock
mov
mov
jecxz
mov
xor
pop
xor
fistpl
and
cmp
cmp
jo
std
sub
adc
add
xlat
aas
fidivs
loop
idiv
cli
std
in
fwait
jle
mov
or
and
push
test
es
fs
xchg
dec
cmp
pop
cmp
pop
sti
sub
cltd
sbb
repnz
inc
adc
nop
fldl
scas
les
and
jo
cmc
stos
jbe
mov
loopne
popf
jl
adc
lds
das
pop
mov
jecxz
sub
fsubr
lea
jno
ret
xchg
int
test
pop
out
xor
push
cltd
in
or
or
shll
adc
xorl
fisubrs
lcall
scas
pushf
push
cwtl
mov
andb
mov
dec
sub
mov
jmp
movsb
in
mov
out
popl
jbe
repz
pop
shr
jns
mov
jp
popf
pop
mov
xchg
jnp
fistpl
lds
cmp
in
cmp
inc
sar
push
push
ficoml
lret
mov
cmp
sub
pop
sbb
xor
das
adcb
ljmp
cmp
mov
orl
xchg
cmp
insb
pop
mov
mov
push
sbb
out
lock
scas
add
pop
arpl
adc
push
add
xchg
mov
lea
test
jno
adc
ret
push
movb
ret
lods
fmul
out
xchg
xor
or
jmp
mov
xor
mov
stos
loop
xchg
pop
fsub
pusha
shlb
arpl
aad
pop
inc
ljmp
jge
fcmovnb
lods
add
pop
shl
clc
mov
add
adc
mov
xchg
js
xchg
fs
mov
sbb
aaa
inc
mov
jge
dec
jecxz
mov
out
les
sbb
ds
ljmp
push
ftst
push
cli
test
adc
mov
sbb
cmpl
push
mov
jo
lret
push
leave
xchg
pushf
mov
sbb
jo
mov
and
fisubs
cmc
cmp
add
mov
fmul
stos
cli
jl
rorl
inc
mov
pushf
jno
js
jae
int3
dec
mov
fcmovbe
rolb
into
pop
popf
test
inc
mov
inc
dec
inc
add
inc
cmp
mov
cld
sbb
jge
stc
xchg
xchg
xchg
stos
aad
ret
testb
cmp
adc
aas
mov
rorl
sbb
arpl
fildl
lods
out
and
dec
mov
pop
pop
pop
adc
ds
mov
sub
ss
pop
aad
sahf
cmpsb
std
call
mov
aam
push
sub
sub
repnz
fildl
sub
es
daa
xlat
pusha
mov
andb
dec
ljmp
bound
xor
xchg
sub
fildll
pop
push
lock
add
pop
xorb
lcall
jns
push
adc
movsl
mov
test
jmp
scas
mov
test
dec
ljmp
mov
movsb
inc
cmp
adc
mov
xchg
js
pop
adc
xchg
leave
loop
mov
sbb
loop
add
mov
insl
repz
cmp
in
or
xchg
jns
clc
xchg
fistpl
add
cmp
nop
xchg
mov
dec
paddb
pop
inc
cltd
pop
hlt
inc
xchg
lea
or
jno
fistpll
or
push
add
push
or
inc
push
cmpsl
adc
mov
dec
jno
jp
sbb
mov
push
dec
in
in
push
aas
clc
in
add
adc
btcl
push
fimuls
push
xchg
out
push
je
push
bound
adc
jbe
cs
xorl
adc
popf
or
mov
callw
jle
sub
dec
sub
push
mov
dec
xchg
add
enter
xor
sarl
pop
mov
out
fcoml
movsl
addr16
add
adc
movsl
push
das
in
test
fmuls
fs
fidivrs
mov
icebp
nop
paddb
mov
or
dec
mov
cmp
leave
mov
imul
xchg
in
ss
mov
adc
pop
icebp
dec
mov
scas
lds
inc
std
pop
shll
in
loop
cmpl
pop
push
cmp
cwtl
sub
cmp
ss
call
or
sbbb
sti
lock
mov
cmp
cmc
cmp
mov
fbstp
test
xor
push
leave
daa
adc
fwait
scas
fwait
push
out
adc
adc
and
call
add
and
pop
pop
cmc
sbb
loope
pop
cltd
pop
outsl
sub
dec
jb
arpl
xchg
xor
mov
sub
mov
or
int3
lret
cltd
jmp
arpl
fs
ds
movsb
lea
daa
fisttpl
int
insl
and
jmp
xor
outsb
mov
cmpsl
jp
and
notb
jl
add
lods
mov
xchg
out
ja
aad
cmp
push
mov
mov
test
mov
pop
scas
xor
lea
inc
mov
mov
testb
xor
or
dec
mov
int
push
out
fmull
loop
test
icebp
add
cltd
push
mov
mov
lods
imul
data16
sub
cmp
push
in
jmp
inc
mov
mov
xchg
inc
mov
push
je
xor
ja
pinsrw
push
or
mov
mov
js
loope
fbstp
lahf
push
jo
inc
mov
cld
and
shlb
mov
lods
test
jne
scas
dec
and
call
mov
sub
repz
cld
imul
jge
lds
movswl
jns
lret
and
insl
jl
movsl
push
adc
cmpsl
or
outsl
arpl
lods
scas
mov
addr16
mov
call
mov
inc
push
sub
mov
add
push
ror
or
cmpb
test
movsb
xor
test
add
cmpsl
fstl
rolb
icebp
cld
cltd
and
ret
pushaw
dec
add
shlb
ror
add
clc
cmp
bound
lods
enter
mov
movsb
adcb
fdivrl
in
inc
add
mov
ja
cmp
es
test
xchg
cmp
inc
xor
mov
mov
jo,pn
repz
adcl
orl
pushf
mov
push
lret
enter
jle
lods
and
push
and
gs
or
pushf
adc
jns
outsl
jo
sub
iret
cmp
jns
bound
cmc
cmc
dec
outsb
dec
imull
fsubrl
fs
mov
push
lods
out
repnz
subb
pop
or
xor
repnz
push
pop
subb
das
shlb
enter
add
ds
repnz
pop
mov
push
cmp
test
cmpsl
xchg
mov
scas
pop
add
pop
cmp
xor
sub
jb
es
cmpsb
sahf
punpckhbw
test
mov
sti
sbb
enter
ret
lea
out
mov
push
rcl
insb
xchg
nop
lods
sub
cmpsb
fcoms
push
aaa
out
test
shl
subl
andl
and
gs
rcrb
pop
subl
iret
xchg
dec
jge
js
sbb
in
mov
jge
inc
dec
inc
xchg
mov
jb
imul
incb
sbb
dec
fdivrs
bound
cmp
sub
iret
mov
lds
mov
mov
mov
jmp
dec
adc
rcrb
cmp
stos
push
mov
fisttpl
cld
call
pop
mov
push
adc
xor
lock
and
cld
add
mov
pop
pop
imul
push
repz
adc
lret
add
out
sub
in
push
or
mov
mov
add
arpl
push
bound
mov
cbtw
sahf
inc
outsb
xor
sub
push
psubb
aam
xor
inc
subb
mov
in
pop
push
rolb
fstl
jge
cmc
fwait
mov
sbb
fwait
or
mov
fneni(8087
outsl
push
xlat
lds
dec
inc
mov
sub
out
cltd
repz
dec
sbb
aas
pop
dec
push
cwtl
sub
cli
pop
sbb
add
aaa
mov
lea
jb
mov
jae
mov
sub
outsb
xchg
cmp
lcall
or
push
inc
and
or
lds
mov
or
mov
cmc
int
xchg
int3
mov
fildll
xor
popa
aaa
cld
hlt
int
sub
xchg
xor
push
gs
xchg
add
adc
arpl
fstcw
ret
mov
mov
add
pop
fldcw
sub
lock
push
cmpsl
add
cli
mov
pushf
lock
lock
add
adc
fisttps
mov
stos
jnp
lods
mov
mov
insb
in
aam
cmp
fcoml
pop
and
pushf
test
cmp
ret
mov
roll
insb
ss
aaa
jmp
fwait
lea
subl
negb
stos
out
inc
adc
sbb
aam
xor
jo
pop
mov
ret
lods
mov
mov
push
mov
jno
inc
lods
and
mov
push
and
sub
lret
mov
iret
testb
imul
daa
fdivrs
pop
cmp
insl
je
mov
sub
xchg
add
ljmp
fidivrs
rcrb
xor
stos
cwtl
xor
push
xor
add
xchg
incb
call
insb
mov
sahf
sbb
repnz
sbb
aad
leave
push
outsl
add
cltd
inc
mov
in
cmpsl
push
pop
sbb
aad
sahf
rcrb
pop
sub
xchg
mov
push
dec
test
sahf
cmpsl
pop
pop
ret
jg,pn
jecxz
hlt
mov
inc
jg
fwait
sub
cmp
rcll
cmp
jge,pn
stos
jle
jnp
mov
lea
fisttpll
scas
jnp
rcr
add
inc
nop
push
pop
inc
std
xor
dec
jge
or
sbb
xchg
adc
cmpsb
jns
int
iret
mov
jo
sub
push
lahf
or
inc
jl
sub
or
stos
pop
popa
push
addr16
xor
mov
or
bound
and
in
aas
pop
dec
jae
jbe
jle
jmp
sbb
adc
dec
rcr
jl
mov
mov
inc
xorl
add
ret
jns
or
cmp
xchg
testl
popl
dec
es
dec
std
stos
stc
fstps
jp
daa
pusha
cmp
mov
pop
movsb
jno,pn
mov
and
and
cmp
push
movl
addr16
ds
ja
xlat
dec
mov
pop
idivb
lock
xlat
xchg
fsub
sub
mov
pop
xchg
push
scas
movsl
xchg
cmc
aas
dec
loopnew
icebp
xor
lret
sahf
or
pop
sub
les
dec
and
xor
mov
dec
push
fwait
xor
leave
push
add
add
jnp
mov
pop
push
sub
push
ret
mov
mov
hlt
pop
inc
add
sub
mov
daa
clc
add
push
shrb
mov
testb
pusha
dec
sub
inc
cmc
mov
hlt
rorb
pop
dec
cs
ficoms
test
arpl
sub
iret
dec
daa
cmp
jmp
or
rcll
mov
stos
dec
mov
jp
clc
inc
xor
mov
out
xor
loopne
add
or
loope
jb
or
mov
hlt
jle
mov
test
xor
cwtl
pop
inc
xchg
mov
ds
pop
hlt
push
cmp
lcall
mov
cmp
ret
mov
pop
fidivrs
js
sahf
pop
inc
or
jmp
cmp
lock
pop
int3
mov
adcb
xor
addr16
pusha
jp
xor
push
rcrl
hlt
mov
hlt
data16
mov
es
nop
cmp
cmp
inc
mov
push
movsb
ret
inc
ss
bound
jnp
pop
sbb
inc
std
stos
mov
pop
int3
inc
mov
or
leave
or
outsb
xchg
shr
fnstcw
dec
cmp
mov
subps
test
push
or
push
mov
xlat
mov
add
dec
in
sub
mov
enter
mov
xor
idivb
xchg
mov
mov
jb
les
imul
jge
inc
lods
mov
dec
inc
dec
ljmp
jge
and
mov
test
lahf
rolb
rcrl
in
adc
inc
dec
xchg
inc
inc
xchg
icebp
and
ret
pop
imul
and
lods
or
decl
in
sbb
addb
cmp
cmp
adc
mov
jbe
std
ret
test
into
mov
jg
pop
fmul
jge
imul
into
xlat
push
ja
sbb
adc
fs
in
jne
inc
inc
leave
xor
dec
les
insb
loope
jge
add
pop
mov
xchg
repz
pop
scas
scas
repz
hlt
cs
loop
lods
inc
mov
xchg
scas
jp
call
hlt
and
scas
jne
or
subl
add
daa
out
popf
adc
icebp
cwtl
or
jmp
inc
mov
bound
movl
pushl
sarb
push
fwait
adc
and
popf
dec
jo
out
or
orb
or
jmp
jle
std
test
jle
dec
pusha
cmp
inc
inc
push
cmp
incb
push
pop
data16
lahf
lods
addr16
cltd
test
orl
add
out
mov
dec
fxch
sbb
lock
inc
fstps
js
push
rorb
outsb
js
sub
cmpl
push
adc
or
mov
push
and
mov
add
negl
sub
fs
dec
sub
insl
into
jg
jmp
cmp
xorb
insb
sbb
mov
xor
pushf
daa
insl
pop
into
pushf
loopne
fiaddl
pop
stos
mov
js
adc
push
sbb
icebp
aam
sbb
fdivs
adc
cltd
out
jg
adc
dec
mov
je
fdivrs
in
pop
rcrb
les
mov
inc
or
ds
mov
sub
out
test
xor
sbb
mov
cmpsl
in
decb
pushf
or
jae
push
enter
call
push
iret
jp
fildll
add
dec
push
jmp
icebp
sti
arpl
es
or
cmc
lock
mov
loopne
cmpsb
in
push
scas
rolb
sbb
jp
mov
insb
xchg
insl
pushf
push
dec
fldcw
jnp
lods
cmp
dec
mov
add
cmp
jb
ss
add
cwtl
lock
add
pusha
cmp
sub
mov
xor
cmpsb
add
sbb
add
sbb
sti
and
lcall
std
inc
scas
out
xor
mov
rcr
inc
lret
pop
les
mov
lea
dec
fucom
mov
sti
setb
and
nop
jae
inc
ja
inc
roll
sbb
dec
ljmp
push
adc
lods
pop
out
fsubp
cmp
pusha
popa
sbb
jle
sbb
aas
pop
gs
andb
push
out
insb
call
loopne
cmovbe
mov
in
xchg
aam
mov
jo
pop
dec
pop
ljmp
aaa
movsb
adc
mov
xor
inc
dec
mov
cltd
and
xchg
aam
gs
cmp
push
or
aaa
fidivrl
popf
data16
orl
add
stc
ret
xor
es
cs
xor
mov
and
hlt
in
out
mov
cmp
cmc
adc
arpl
push
push
and
mov
and
insb
adc
out
and
daa
in
lds
cmc
call
out
lods
mov
clc
dec
mov
jecxz
dec
fistps
into
mov
daa
add
aas
pop
icebp
cmp
lret
add
lcall
adc
adc
adc
or
arpl
ljmp
ffree
clc
inc
insb
and
xor
sub
mov
mov
jae
jae
sar
lret
cmpl
and
mov
fnstenv
addr16
stos
push
sbb
mov
mov
jecxz
stc
repnz
inc
and
in
cmp
pushf
mulb
mov
movsl
lcall
or
clc
xchg
es
movsl
out
subb
sbb
jno,pn
mov
xor
sub
add
mov
adc
cli
inc
pop
sbb
push
or
add
adc
bnd
pop
into
les
movsb
into
push
pop
adc
mov
in
pop
xchg
push
out
mov
inc
jge
cld
adc
adcl
jbe
sub
stos
sahf
cmpsb
mov
ret
loope
int
add
int
inc
iret
lcall
mov
and
dec
pusha
ficompl
loopne
jle
jmp
mov
ljmp
or
test
mov
cmp
pusha
aaa
out
sub
scas
or
lcall
mov
aad
mov
push
pop
cmp
sub
test
sti
out
mov
cwtl
cmpsb
and
leave
mov
scas
mov
fdivrs
in
xchg
fistpll
repnz
sahf
clc
sub
push
mov
lds
sbb
dec
or
test
cbtw
cmc
out
insl
and
xchg
jae
inc
xchg
lret
lds
fcmovne
fwait
add
mov
add
xor
aas
push
popw
call
pop
sbb
lods
mov
bndldx
ficomps
lods
sub
les
adc
fnstcw
sub
bound
add
pop
rcrb
pop
rolb
add
inc
popa
sarl
adc
push
xchg
xor
aaa
cld
or
push
les
mov
xchg
aas
arpl
lods
jns
xchg
aas
aam
mov
inc
push
and
gs
xchg
iret
mov
insb
or
push
mov
cmp
lahf
adc
push
cmp
cmp
fwait
xor
sbb
fcomps
pop
sti
jae
lock
xor
mov
or
sub
ret
adc
and
aaa
ds
jle
push
aas
shll
popa
cmp
fisubs
hlt
dec
xchg
and
pop
mov
push
out
jbe
mov
out
clc
mov
jle
cmp
out
jnp
mov
cwtl
push
lret
ror
add
adcl
pop
jle
xor
xchg
in
ficompl
fidivrl
ljmp
lods
and
data16
and
dec
popa
pop
pop
cmp
ret
addr16
loopne
out
push
xlat
lock
popa
push
lock
cld
sbb
int3
lock
adc
sub
sarb
xchg
mov
rol
mov
out
add
xor
jne
andb
loopne
lds
mov
dec
fstl
mov
jecxz
cwtl
pop
and
arpl
ja
cmp
call
mov
sbb
rolb
mov
stos
sarl
into
gs
movsl
into
add
fcompl
insl
ds
xorb
pop
stos
lea
sbb
inc
stc
jecxz
pop
xchg
mov
fists
sbb
mov
push
inc
fldenv
aad
mov
inc
adc
dec
pop
xor
pop
incb
fmuls
pop
pop
repz
daa
in
stc
popa
adc
mov
lcall
cmpsl
repnz
mov
out
pop
sarl
fs
or
imul
andl
out
out
sarl
push
push
imul
xchg
aad
mov
push
dec
test
out
ja
popa
loopne
add
inc
fwait
mov
pop
and
pop
mov
movsb
or
int3
pop
imul
push
out
jne
pop
fwait
jl
mov
jae
hlt
push
cli
pop
pop
rorb
aad
and
bound
rcr
arpl
lock
pop
mov
dec
push
mov
pop
pop
mov
mov
jg
fimuls
or
xchg
pop
pop
push
cli
xor
cmp
xor
push
loopne
sub
setnp
popf
cmp
add
dec
dec
inc
inc
cwtl
sti
or
andb
add
or
arpl
jb
cli
rorb
out
into
rcll
adc
sbb
inc
ss
and
lret
into
sbb
test
add
xchg
push
push
int
inc
stos
lret
movsb
loopne
cmp
cmp
dec
dec
pop
mov
inc
cmpsb
adc
pop
xor
and
inc
out
cwtl
dec
int3
leave
dec
xchg
sub
nop
mov
jg
adc
pushf
push
sbb
pop
or
addl
cmc
inc
repz
stos
pop
repnz
cmpsl
fcom
shlb
cmp
cmc
dec
mov
xchg
insb
in
mov
xchg
sti
cmpsb
test
fisttpll
inc
iret
nop
adc
mov
cmc
out
sahf
mov
pop
adc
adc
outsl
mov
paddd
push
dec
loop
arpl
dec
dec
out
dec
repz
movsl
xor
jno
mov
xchg
lea
jle
repnz
mov
out
ret
loope
cmp
sub
out
mov
xlat
pop
stos
push
jno
jne
add
pop
mov
lock
cmpsl
subl
js,pn
mov
push
sahf
pop
fldt
push
fists
dec
cmpsb
rcl
hlt
stc
in
into
jo
in
pop
mov
xor
mov
push
xchg
mov
add
jg
pop
dec
cmp
fidivs
mov
and
xrelease
loopne
mov
lret
fsubr
aas
cmp
stos
pop
push
mov
add
mov
jbe
push
jl
dec
push
hlt
push
and
pop
das
push
mov
pop
mov
xchg
leave
es
and
push
inc
scas
cmpsl
push
loop
dec
dec
rorl
fiadds
xor
out
sbb
pop
cmp
into
adc
daa
cmpsl
or
jno
jbe
inc
pop
loope
push
mov
mov
jmp
cs
or
add
sub
push
mov
rolb
or
inc
sahf
add
cli
inc
mov
fisubl
shlb
push
jnp
mov
or
jg
shrb
ret
add
dec
and
rolb
or
in
in
jnp
cld
sarl
movsb
aad
xchg
outsl
or
arpl
popf
pop
pop
ret
test
add
out
es
in
fwait
das
fmull
mov
loope
inc
xor
fmull
sbb
and
xor
push
mov
mov
outsb
call
cmp
stc
or
addl
es
dec
cmpsl
jecxz
sbb
movd
idivl
add
daa
pop
dec
shrl
rcll
cwtl
mov
mov
std
mov
inc
fimuls
jg
cmp
xorl
nop
jb
dec
adc
sub
das
push
xor
pop
lahf
pop
mov
sti
dec
or
push
sbb
pop
mov
sub
mov
mov
js
xlat
xor
dec
mov
xor
addr16
jb
push
sub
testl
pop
jl
dec
stos
jg
mov
fistpl
push
scas
icebp
jle
aad
inc
dec
test
jbe
push
add
cmpsb
adc
sbb
push
fdivrl
jle
daa
ss
outsb
lods
cmp
mov
and
pusha
push
adc
aam
xchg
adc
or
movl
clc
insl
pop
lahf
addb
clc
test
dec
insl
fdivrl
pop
lds
sahf
stos
push
and
mov
sub
in
mov
cltd
inc
test
repz
in
sub
icebp
xchg
jno
cmp
or
adc
add
add
sub
test
insl
mov
mov
into
aas
sub
mov
inc
notl
pusha
shll
clc
sub
or
push
out
cmp
jp
cltd
aad
or
jno
sub
and
sub
imul
mov
lcall
cld
or
pop
popf
cmpsl
or
roll
push
aad
ret
popf
pop
jae
or
lret
cltd
pop
jmp
jns
push
int3
dec
or
ds
outsb
or
inc
jae
push
movsl
xchg
and
pop
pop
sbb
pusha
cmc
inc
imul
add
inc
mov
xchg
repz
mov
fstpt
dec
add
jae
mov
push
mov
scas
mov
cli
lahf
mov
xchg
lret
jp
ret
pop
sub
int3
fdivrs
dec
inc
aaa
cmp
push
ret
push
mov
jge
mov
mov
outsb
fs
and
out
mov
scas
idivb
icebp
inc
and
scas
mov
cmpsl
fdivrs
test
rdmsr
sbb
mov
mov
gs
or
movsb
push
ret
addr16
test
push
xor
sbb
sti
les
in
insl
mov
jno
dec
and
sub
sbb
sub
pop
jmp
std
and
sub
inc
fdiv
jl
out
dec
das
sub
sbb
out
int
pusha
loope
pusha
sbb
iret
xchg
out
int3
xor
insl
aam
lea
fst
mov
stc
enter
lret
mov
or
pop
dec
jl
cmc
loop
mov
scas
sbb
or
mull
xchg
pop
int
shlb
shll
frstor
out
push
popf
pusha
lcall
and
ret
xchg
popa
insb
xor
out
cmp
cmp
pop
add
aaa
gs
cmpsl
loopne
imul
xchg
js
rol
jmp
add
mov
mov
test
je
ret
loope
les
sub
mov
insl
xor
fisubs
xchg
xchg
fiadds
addr16
adc
jnp
jae
enter
lods
outsl
sbb
dec
out
jns
cld
pop
inc
flds
pop
popa
push
adc
divb
daa
dec
hlt
insb
lret
cltd
sub
cmc
stc
sub
das
sets
xlat
insl
pushl
repz
lret
leave
aas
int3
iret
sti
dec
out
xor
pop
pushf
int
js
or
cwtl
push
lret
movsl
add
mov
inc
jmp
inc
lods
test
ucomiss
out
int
scas
in
fists
std
adc
popa
mov
addr16
rorl
sahf
movsl
mov
pop
adc
adc
nop
lret
out
aam
sbb
repz
push
shlb
out
push
daa
shlb
cmp
jp
ret
fstpl
orb
int
sahf
iret
add
push
cmp
jne
or
aaa
les
jmp
mov
out
jae
cmp
neg
adc
mov
add
sarl
xor
fstpt
adc
js
mov
inc
mov
jnp
pop
push
lcall
push
loop
gs
lock
pop
fidivs
dec
aaa
or
ss
add
ficomps
cmp
loopne
xor
jl
push
sub
cmp
sub
testb
push
pop
mov
andl
dec
lods
mov
adc
mov
jle
movsb
cmpl
mov
arpl
inc
or
mov
mov
stos
sbb
stos
lcall
data16
or
ljmp
test
pop
popa
int3
mov
xchg
aas
jne
test
xchg
mov
jecxz
outsb
shrl
insl
pop
imul
std
adc
adc
dec
fcoml
pusha
fildll
inc
mov
or
pmaddwd
jne
lret
iret
add
fucomi
mov
mov
pop
dec
jo
or
jns
int
movsl
dec
daa
add
lods
les
jae
adc
stos
push
cmp
add
push
daa
pop
push
cmpl
xchg
push
sbb
pop
stos
ret
push
xor
sbb
repnz
mov
xor
pop
nop
mov
out
inc
rcpps
push
aas
js
cmp
insb
add
dec
aad
mov
es
rorl
jbe
pop
test
imul
pop
test
jl
test
sahf
in
mov
push
ret
repz
lds
lahf
je
out
aas
test
shll
out
pop
cmp
mov
cmp
mull
and
mov
ljmp
mov
sbb
lret
lahf
cmp
clc
push
sub
ja
xchg
scas
dec
add
scas
test
mov
outsb
mov
fwait
push
xchg
jo
out
dec
shrb
sti
sbb
aas
push
lds
inc
shll
out
aas
shr
xor
xor
sarb
sub
rcrb
add
fs
xchg
out
sbbb
mov
sti
fwait
push
dec
jp
mov
dec
inc
orb
inc
jg
lods
test
mov
push
mov
out
pusha
sub
mov
pop
stc
mov
adc
jmp
iret
lock
fstpt
imul
and
test
jp
cltd
idivl
clc
repz
jl
arpl
jmp
dec
add
lret
pop
icebp
push
push
imul
leave
lahf
sti
data16
jecxz
hlt
pushf
arpl
hlt
jle
fnstenv
test
mov
test
or
stc
xchg
ret
jae
je
in
lret
lock
insl
test
cmp
xchg
addr16
in
sbb
adcl
and
mov
xchg
cmp
mov
pop
mov
jge
in
xchg
push
xorl
jns
cli
sub
jmp
fisubl
popf
mov
rcrl
xor
sbb
sbb
dec
out
insl
test
jnp
cmp
fdivr
inc
sub
xor
push
rcl
add
push
pop
push
mov
cs
xchg
push
cltd
leave
mov
cmp
mov
fadds
shrl
sub
clc
add
xchg
add
mov
insb
add
cmp
hlt
nop
push
test
xlat
fidivrs
into
jbe
cmc
negb
ja
andb
lcall
cmp
js
lcall
xchg
mov
mov
xor
inc
mov
cld
jae
push
in
cmp
idiv
fbld
mov
fsub
sbb
inc
jl
in
jne
mov
push
out
in
mov
in
pop
mov
in
sub
cmp
xor
sub
aaa
add
pop
sti
sbb
push
mov
ljmp
fwait
push
hlt
roll
imul
lods
loopne
subb
scas
add
out
sbb
fdivrp
aad
mov
in
xlat
xchg
dec
jg
stos
cmp
aas
mov
xchg
lret
adc
leave
lret
ja,pt
cwtl
mov
dec
pop
scas
add
aad
mov
pop
scas
popa
or
jns
out
pop
ds
lea
adc
mov
ret
nop
xor
push
cmp
jb
fbld
js
jg
jo
xor
cmpsb
inc
dec
enter
fistpll
xchg
inc
arpl
lahf
stos
cmpsl
lods
mov
inc
fstl
push
sub
daa
mov
sbb
fs
sbb
or
dec
insl
inc
pop
pop
adc
sbb
lahf
push
mov
sub
movsb
add
xor
jge
adc
xchg
jmp
and
ror
pop
in
aaa
push
roll
outsl
sub
xor
into
lock
imul
pop
leave
adc
pop
cmpsl
push
scas
imul
les
xchg
nop
xchg
inc
xchg
ss
mov
lret
sbb
dec
push
mov
notb
pop
mov
fists
in
jmp
pop
and
push
jne
add
imul
push
aam
push
sub
jmp
mov
not
pop
sbb
and
aad
pop
mov
js
inc
popf
inc
pushf
cmp
mov
dec
xchg
fnstsw
or
insb
fwait
test
sbb
pop
test
jbe
repnz
orb
pop
mov
pop
pop
aam
cmpsb
jne
or
clc
push
mov
stc
mov
mov
mov
xchg
in
add
mov
testl
jne
imulb
xchg
cmp
add
loop
bound
add
fisubl
push
pop
int
imul
call
adc
je
fists
or
fdivl
mov
push
call
pushf
stc
imul
es
test
call
in
xor
clc
je
nop
inc
mov
out
lahf
js
jns
xor
sbb
cmc
lahf
cmp
repz
jno
mov
pushf
jb
ds
shll
push
xchg
popf
inc
pop
dec
inc
arpl
and
lret
and
pushf
in
stos
es
mov
into
dec
adc
pop
les
jns
pop
icebp
add
in
repz
pop
test
jns
cli
mov
rclb
test
in
roll
sahf
mov
mov
loope
adc
loop
std
push
fsts
arpl
lcall
and
mov
sbb
mov
push
ret
pop
scas
jne
push
sahf
push
leave
or
lahf
and
lret
push
mov
xchg
adc
xor
imul
mov
dec
jno
sub
adc
dec
js
push
xor
jb
mov
mov
cli
cs
fxam
mov
inc
imul
stc
mov
clc
int
sbb
inc
fbstp
fistl
leave
mov
pop
jae
add
mov
into
sub
xchg
lahf
ds
clc
xchg
loope,pt
sub
xchg
rcll
adc
outsb
and
sahf
dec
push
loope
jp
fistps
xchg
sub
jp
lret
pop
rcll
sahf
pop
repnz
mov
jle
cld
push
add
pop
lahf
scas
call
pop
pop
aam
cmp
xor
pushf
xchg
rolb
bound
mov
and
mov
push
inc
ret
add
cmpb
lret
arpl
cmp
aaa
adc
js
or
pop
test
negb
and
jmp
push
push
les
movsb
xchg
dec
outsl
jb
and
xlat
lods
jl
nop
mov
rcrb
in
out
insb
lds
je
jnp
add
xchg
and
lret
cmc
adc
xor
shl
rcl
das
jl
adc
rcrb
jno
ret
dec
jb
outsb
adc
fisubl
xchg
leave
mov
add
clc
sub
pop
mov
jge
or
out
jecxz
jmp
mov
in
inc
jg
movsl
mov
js
xor
xor
dec
add
rclb
scas
or
add
or
mov
lods
into
push
cmp
add
xor
mov
mov
lock
push
sbb
cmp
gs
xor
and
xchg
inc
fs
xchg
dec
scas
loop
jg
push
xor
fnstcw
fmull
jae
and
lods
hlt
clc
ret
jbe
and
push
sbb
lods
imul
mov
mov
dec
cmpsl
push
dec
xchg
mov
jge
loope
cmp
lock
xor
aam
sbb
fcomps
scas
into
mov
jmp
test
xchg
mov
rcrb
idivb
inc
cmpsl
pop
in
rcrb
lock
scas
rol
cmpsl
and
aad
inc
jmp
jb
subl
std
push
dec
in
sbb
enter
cltd
rcrb
fldl
inc
mov
out
inc
dec
ss
push
cmp
mov
xlat
lea
mov
insb
int
pusha
out
mov
xchg
bound
sarb
mov
mov
imul
in
sub
inc
imul
aas
test
stos
mov
into
ja
data16
add
pop
stos
jg
mov
dec
cmp
loopne
scas
adc
lods
repz
cmpsb
mov
ja
or
addr16
insb
es
test
das
test
aam
jo
or
pop
push
inc
mov
mov
dec
sub
and
fiadds
mov
adc
dec
sbb
ror
jmp
cmpsl
add
xchg
inc
fwait
mov
mov
push
mov
xor
sbb
cmp
push
insb
jbe
dec
and
or
lcall
in
cmp
jae
mov
push
frstor
jle
pop
lret
jge
mov
mov
lods
lahf
and
jecxz
cmc
lods
lret
pop
push
imul
xchg
inc
push
test
dec
xchg
mov
xchg
out
inc
mov
xor
mov
mov
fs
pushf
xchg
and
fistpll
cmp
sahf
test
add
cli
jbe
int3
cmc
ret
xlat
xor
ljmp
fistpll
pushf
lods
inc
in
movsl
lea
fistl
fwait
jb
mov
jb
and
aam
xor
push
adc
mov
dec
mov
fcoml
sub
or
inc
jne
pop
add
xor
push
out
inc
sbb
out
inc
or
clc
es
js
xlat
jg
movsl
nop
popf
jb
pusha
daa
lret
sti
jmp
lahf
stc
jns
test
push
pop
sbb
xchg
mov
fldenv
mov
repz
sarl
les
leave
and
mov
pop
adc
jecxz
jg
into
aam
adc
push
gs
stc
inc
mov
xor
jae
shll
adc
rcrb
mov
loopew
inc
xchg
mov
and
lahf
jle
pop
imul
mov
mov
pop
icebp
push
jae
cmp
dec
mov
es
pop
cmp
es
sbb
fs
xor
sub
test
cld
mov
inc
popf
mov
pop
popa
xchg
aam
inc
sbb
xchg
dec
mov
xchg
lods
lret
clc
cmpsl
mov
movsb
popf
jmp
cltd
xchg
or
sbb
adc
jae
test
inc
mov
stos
in
cmp
push
icebp
adc
push
sbb
vpaddd
sbb
inc
xchg
ret
jne
vmread
add
out
repnz
mov
add
or
dec
arpl
pusha
test
je
push
mov
jp
outsl
mov
stc
in
pusha
cmp
ljmp
inc
jmp
mov
sti
inc
cli
pop
js
jno
pop
push
into
mov
push
fcomps
dec
mov
add
scas
pushf
mov
aam
push
mov
sarb
push
jge
sbb
stos
mov
pop
and
push
xor
inc
mov
xchg
arpl
sbb
movsl
push
enter
outsl
dec
jo
adc
cmp
mov
mov
sbb
mov
pop
movsb
cmp
mov
je
insb
xchg
push
shll
pop
jmp
push
popf
cmc
jmp
mov
loopne
sti
jns
je
fnsave
loope
fistpll
insl
add
sub
sti
pop
mov
and
hlt
xchg
fisubrl
mov
imul
popa
roll
fnstcw
add
pop
ljmp
lds
fwait
test
ds
add
pop
adc
adc
in
xor
mov
xor
bound
or
push
dec
adc
dec
fisubl
add
jne
sub
jge
cmp
sti
ss
mov
ja
mov
and
bound
dec
jb
dec
adc
pop
cmp
and
or
in
fs
inc
jae
rcrl
adc
pop
xlat
outsb
popf
das
dec
push
test
pop
bound
mov
mov
sbb
adc
jmp
rol
es
fsub
and
inc
ficoms
sub
fs
lds
push
cmp
das
mov
sbb
flds
pop
xchg
mov
jmp
xchg
sbb
mov
inc
fstps
jbe
ja
rolb
push
cltd
mov
pop
mov
lahf
cmp
gs
pop
mov
and
and
push
xchg
enter
sub
mov
xchg
push
fmuls
cmc
mov
test
xchg
and
or
inc
or
ja
incl
lods
dec
mov
pushf
repnz
sbb
popf
sarb
aas
mov
hlt
cmc
sbb
bound
repnz
xchg
or
xchg
insb
inc
repz
shll
adc
inc
mov
sbbl
ljmp
mov
das
mov
in
push
pop
jae
mov
ljmp
pop
aaa
sub
pop
jg
bound
push
mov
or
mov
mov
sbbl
xchg
jae
push
and
pop
stos
and
xchg
mov
lods
cld
ljmp
test
ss
pop
lods
mulb
xchg
mov
rclb
es
push
cwtl
add
pop
jne
in
cld
mov
out
sti
sub
adc
xor
enter
test
ds
roll
mov
clc
or
jmp
bound
cltd
cmc
sbb
mov
lea
cld
push
xchg
mov
fidivs
iret
jmp
push
jbe
or
cmp
xchg
out
cltd
imul
add
push
dec
cld
aaa
mov
cmp
jge
fwait
sbbl
ret
push
sub
out
repz
jnp
fidivs
jmp
xchg
test
add
loopne
aam
mov
pop
es
or
cmp
insl
dec
cli
jbe
dec
push
sahf
and
pusha
je
dec
daa
mov
push
decb
cmc
ret
fistl
sahf
out
inc
fstpl
jo
push
cs
pop
sbbb
push
cmc
mov
jns
add
push
cmp
or
popa
or
shl
adcl
mov
jno
std
push
decb
stc
hlt
push
push
mov
inc
push
lods
loope
adc
or
in
das
push
jecxz
cld
sahf
lods
add
inc
addr16
xchg
adc
fcoms
xchg
mov
and
mov
out
out
or
outsb
pop
sub
mov
cmp
cmp
pop
lea
and
mov
mov
imul
push
xor
hlt
jle
lret
add
push
mov
lock
jp
push
pusha
inc
sub
je
sbb
movsl
add
je
stos
adc
stc
cltd
mov
lcall
xlat
mov
insb
dec
sub
xor
cs
fadd
mov
push
add
adc
adc
sbb
and
in
aam
out
hlt
clc
lock
inc
std
xchg
mov
and
dec
stos
sarb
sub
push
mov
pop
popa
adc
push
cmp
lods
repz
cmp
jb
mov
testl
and
mov
xor
lods
xchg
pop
fldt
jmp
push
xchg
sahf
or
pop
or
push
xchg
out
xchg
sbb
dec
pop
cmp
or
test
cmp
push
push
inc
shrl
jo
imul
add
mov
mov
iret
jmp
push
out
adc
mov
aam
movsl
sahf
xchg
nop
mov
mov
loope
popa
pop
and
sbb
rolb
push
mov
xor
std
sbb
sbb
jnp
jg
add
ss
in
pop
ss
dec
mov
dec
arpl
decb
inc
push
je
mov
shll
xchg
daa
call
movl
lcall
adc
mov
pusha
push
imul
clc
mov
fsub
imul
sbb
and
js
jb
mov
xor
add
jns
mov
add
sbb
xchg
fnstenv
in
or
fadds
dec
push
lods
repnz
adc
inc
jge
xchg
loop
xor
push
adc
jle
mov
sub
jmp
iret
pop
into
test
bound
ljmp
gs
ljmp
in
stc
insl
repz
aas
cmp
scas
jmp
push
divl
cmpsl
add
pop
dec
push
jle
repnz
lea
or
xchg
std
inc
insl
arpl
xchg
es
pushf
jl
xor
lods
cmp
or
leave
cmp
sub
jb
cmp
mull
gs
scas
pop
inc
into
push
inc
daa
stc
jae
scas
fcoms
cmpsb
popa
jl
les
mov
cmpsb
pop
xor
adc
fnsetpm(287
jns
popa
push
dec
in
push
jnp
cmp
push
sahf
jo
dec
or
add
sbb
cmpsb
mov
inc
push
outsb
dec
lea
mul
pop
sub
loop
sub
scas
push
dec
andb
push
cmc
fidivs
rol
mov
xchg
rcll
and
cwtl
sub
imul
jns
shlb
sahf
rcl
cli
pusha
mov
fimuls
out
xchg
ss
pop
push
sbb
add
xchg
clc
stc
mov
cmp
or
aaa
into
outsl
mov
loop
mov
and
mov
shll
push
cltd
lods
outsl
pop
pop
mov
mov
cmp
push
jmp
insb
mov
fs
pop
xlat
xchg
mov
inc
aas
and
or
fstpl
orl
aam
popf
mov
outsb
lret
push
cmp
ud2
dec
sub
sub
cmp
adc
or
les
jl
dec
int3
dec
leave
mov
mov
jecxz
insb
mov
and
iret
push
push
mov
mov
insb
ds
push
or
shrb
cmp
outsb
aad
xchg
das
xchg
insl
sbb
pop
sarl
lcall
lds
xchg
fidivl
fsubs
popf
out
or
mov
xor
or
int
and
testb
shrl
push
add
repnz
jno
mov
mov
pop
out
pop
fistl
push
ror
mulb
test
dec
add
mov
into
popa
inc
out
inc
adc
mov
cmp
test
sub
sbb
filds
push
lcall
ljmp
add
inc
lret
jmp
cmp
push
pop
gs
fs
jp
aaa
and
enter
jp
ds
mov
je
mov
cmp
les
js
fsubp
ficoml
jle
jecxz
push
in
cmp
mov
aaa
in
fdivrs
mov
fsubs
lods
jno
test
push
notl
xchg
inc
dec
pop
fcmovu
mov
ret
stc
mov
ljmp
pop
insl
je
jecxz
inc
movsb
xchg
xchg
addr16
push
sbb
mov
xchg
xchg
or
test
test
adc
cmpsb
stc
pop
ficoml
add
lods
jmp
pusha
xchg
adc
adc
mov
add
pop
mov
xchg
sub
add
cmpsl
gs
mov
lret
mov
mov
shl
xor
jecxz
mov
and
xlat
mov
test
sbb
in
jmp
dec
or
cs
stc
pop
icebp
imul
jl
sbb
add
jno
pop
pop
aam
cmp
aas
arpl
xor
or
push
xchg
stos
mov
es
movsl
enter
push
mov
mov
ja
out
xorb
loop
sbb
ret
sub
push
sub
test
fdivs
lcall
mov
and
pop
cli
inc
inc
sahf
sti
fs
mov
mov
clc
cltd
out
mov
xor
mov
sti
out
mov
hlt
int
in
out
jle
dec
pop
pop
sahf
jmp
cs
fmuls
mov
cmpsb
negl
dec
mov
lcall
and
sub
xor
add
js
cwtl
icebp
lods
imul
inc
int
jbe
cmp
push
dec
mov
mov
mov
jge
lea
sub
inc
insb
movl
xchg
add
sub
dec
js
or
dec
xchg
int3
xchg
test
dec
pop
jae
jge
ljmp
jg
sub
fstps
adc
pop
add
sub
outsb
pop
xchg
mov
movsl
inc
jbe
inc
popa
mov
inc
xor
sarb
or
mov
rcrb
add
cmp
xor
out
les
int
dec
push
outsl
divb
lret
clc
xlat
cmp
stc
imul
dec
and
ret
arpl
decl
xor
fcom
or
loop
jmp
popf
jbe
add
cs
les
mov
jle
pop
mov
stos
and
jb
inc
push
pop
jle
and
cld
xor
out
mov
das
addl
sbb
add
int
mov
rcll
adc
jp
test
out
cltd
push
movsb
repnz
shrl
repz
das
and
test
jne
adcl
je
cmpsl
mov
push
in
je
ret
arpl
push
inc
dec
es
pushf
mov
sar
and
test
insl
sbbb
inc
popa
cs
push
mov
dec
or
adc
sub
repz
setne
fidivl
aam
insl
xchg
mov
xor
and
pop
shr
inc
sbb
repnz
mov
insb
ja
andl
dec
aas
push
imul
jmp
ja
push
mov
mov
push
in
and
imulb
lahf
pop
jmp
stos
ljmp
jecxz
jecxz
push
aaa
push
cmp
das
shlb
mov
das
leave
xchg
addl
inc
scas
in
outsb
and
push
xor
out
or
into
push
fs
dec
into
cmc
adc
in
mov
sbb
fisubl
cmp
popa
lods
pop
jae
jo
dec
hlt
jne
aam
mov
pushf
sbb
out
adc
fdiv
and
and
cmpsl
mov
inc
push
movsl
mov
mov
fimull
pop
sbb
jp
repnz
jge
pop
sub
mov
sub
jle
or
negb
pop
add
dec
xor
pop
xlat
xchg
pushf
clc
insl
test
push
sub
cwtl
lods
stc
xor
les
and
mov
push
pop
adc
in
mov
bswap
in
xor
jge
mov
cmp
nop
pop
sub
out
xchg
popf
dec
sub
jle
mov
mov
xchg
into
mov
fnstenv
inc
mov
test
rcr
jge
shr
aas
push
cltd
iret
data16
dec
xchg
push
push
or
hlt
loopne
int
sub
mov
faddl
ret
scas
inc
mov
in
nop
jne
lahf
mov
mov
xchg
outsb
out
sub
mov
pusha
xor
push
or
rolb
mov
sbbb
mov
mov
cmpsl
dec
test
xchg
in
jae
fistps
jne
notb
in
mov
es
pop
outsb
xchg
sub
sbb
lock
les
inc
icebp
leave
sahf
frndint
ffree
and
test
mov
orb
lock
enter
test
aas
lds
enter
mov
stos
out
adcb
and
test
sub
mov
movsb
cltd
push
std
mov
stos
and
in
ja
in
sti
jl
cmp
aad
aaa
scas
inc
repnz
jo
lahf
push
fnstenv
lock
imul
sbb
xor
xor
call
call
cmpsb
lret
jno
out
pop
mov
mov
jle
nop
aad
mov
into
into
pop
stc
cmp
ss
pop
data16
addr16
loope
pop
movsl
push
and
and
or
mov
hlt
es
mov
fldt
xor
and
js
jmp
jecxz
cld
out
adc
cs
orl
cmp
das
aas
inc
push
scas
push
sub
daa
rcll
jle
outsb
ljmp
cmpl
cmp
cwtl
xchg
daa
xchg
hlt
xor
ds
sub
add
test
jb
lods
ds
push
push
repz
lcall
mov
flds
inc
sub
xchg
sub
call
inc
mov
and
xorl
mov
das
xchg
cmpsl
add
and
outsl
das
xlat
or
fidivrs
out
ret
popf
mov
mov
mov
jbe
imul
mov
jl
les
aam
movl
ss
pop
pusha
add
sub
adc
cmp
in
mov
push
jg
mov
mov
je
and
mov
sub
lea
dec
insb
in
loopne
aas
cli
mov
into
mov
pop
push
sbb
pop
andnps
pop
scas
cmp
inc
adc
cmp
and
aam
push
data16
movhps
push
shrl
int
idivb
lcall
cli
jb
cmp
pop
add
sub
and
iret
fdivrs
jg
xchg
pop
fimull
push
sub
pushf
cltd
jecxz
add
xchg
dec
push
stc
mov
mov
or
dec
sbb
or
jmp
add
popf
insl
stos
mov
mov
mov
or
outsl
adc
jns
cmp
loop
cs
xor
mov
sbb
jnp
mov
mov
cmpsl
imul
into
mov
popf
mov
pop
cmp
jg
lret
jne
loop
or
outsl
imul
pop
ss
lds
nop
inc
xchg
popf
or
popf
imul
lods
sbb
les
jne
xchg
mov
and
aaa
cmc
das
test
mulb
push
lret
addr16
cmp
and
xor
sbb
in
push
int
stos
xorb
xor
cwtl
push
rolb
xchg
cs
pop
lret
rclb
mov
out
sti
inc
scas
insb
mov
out
xor
popf
ljmp
push
xchg
cmc
insl
aad
fmulp
aas
les
pop
sti
pop
bnd
push
cmc
jl
cmpb
inc
fwait
push
adc
stos
mov
nop
or
cmp
push
adc
and
enter
jmp
mov
mov
out
xchg
fldl
in
mov
xchg
mov
test
mov
sub
xchg
pop
sub
adc
clc
in
jo
adc
xchg
sbb
imul
mov
movsb
ficoml
int3
js
mov
stos
sbb
cmpsb
aad
pop
pop
adc
mov
clc
mov
test
in
mov
arpl
xchg
xor
push
int3
mov
into
mov
lret
in
arpl
cli
pop
sub
mov
xor
push
xchg
rcll
pop
xor
mov
out
popa
adc
dec
push
xlat
push
xchg
fstpl
das
mov
xlat
push
loope
fstl
ss
push
fistl
xchg
addr16
flds
mov
js
xor
and
push
jo
sbb
push
ret
and
ret
rol
loopne
test
loop
mov
inc
test
adc
cltd
or
push
lcall
jge
lods
in
ret
xchg
xchg
or
shrl
rolb
clc
outsb
test
push
inc
faddl
add
jne
or
addr16
mov
adc
cli
mov
xchg
jns
mov
push
push
pop
add
test
sbb
pusha
ljmp
xor
cmp
xor
sbb
daa
push
scas
fisttpl
mov
popf
fisubrl
pop
mov
xchg
or
imul
addb
jne
fidivl
std
mov
and
add
sub
sbb
insb
js
add
or
cmc
push
inc
mov
rcrl
movl
idiv
aaa
cltd
outsl
fwait
xor
pop
and
cltd
int3
dec
scas
pop
xchg
dec
push
cmpsb
ss
jnp
js
lods
aas
daa
push
outsl
lods
lock
nop
jmp
das
mov
jmp
jge
das
cmc
jecxz
dec
sbb
and
push
pop
mov
pop
into
add
pusha
jns
jbe
add
nop
xor
das
push
popl
imul
xor
inc
jmp
ljmp
pusha
xor
aas
movsb
push
popf
cs
lcall
shlb
or
and
cmp
fstl
daa
je
sub
jae
sbb
xor
aad
in
into
pop
fdivs
mov
sub
sbb
outsb
mov
pop
or
test
hlt
adc
adc
in
das
xchg
lds
fisttpl
outsb
dec
lret
nop
lret
inc
stc
ds
popf
mov
mov
loop
inc
jcxz
aam
inc
add
ret
loopne
pop
sarl
lods
xor
xor
xor
pop
adc
add
jmp
or
xor
out
in
mov
jg
inc
repnz
addr16
dec
dec
jbe
stc
inc
sub
push
push
jl
push
pop
lret
jnp
jl
jns
xchg
daa
xchg
and
cmp
sbb
add
in
ds
fdivrp
and
stos
adc
xchg
ja
cs
fiaddl
lahf
into
call
dec
aad
cmp
pop
sbb
add
dec
sahf
pop
mov
into
sbb
imul
cmp
mov
add
cltd
ljmp
sahf
adc
push
popa
mov
sub
xchg
clc
sub
icebp
jp
dec
stos
or
sub
gs
pop
mov
cli
mov
mov
and
xchg
xchg
fbld
xor
shrl
pop
fchs
push
sbbl
dec
inc
pusha
adc
fdivs
filds
mov
nop
and
push
cld
es
pushl
add
dec
and
movq
sbb
push
adc
and
addr16
adc
adc
mov
idivl
pop
hlt
das
jecxz
mov
sub
cmp
sbb
and
add
ds
or
fdivrs
lahf
cld
dec
add
out
mov
test
push
jle
outsb
movsl
cmp
xchg
test
mov
xchg
sar
lcall
int3
dec
divb
shlb
add
stos
insb
out
imul
mov
adc
aas
arpl
xor
mov
or
xchg
xchg
sub
addl
sarl
bound
inc
es
icebp
xchg
mov
inc
dec
push
scas
jne
jmp
out
mov
jp
test
outsl
pop
cmp
aas
push
jns
mov
popa
cmpl
int
cmp
xor
inc
ds
xor
xor
push
pop
inc
scas
push
bound
imul
das
cmp
mov
sub
adc
call
cmp
mov
xchg
jae
in
mov
adc
lea
xchg
xchg
das
jns
iret
mov
xchg
movsb
or
icebp
sub
mov
mov
mov
mov
mov
insl
adc
or
imul
lds
xchg
xor
jl
mov
nop
sub
rorb
sub
fxch
in
jae
jns
cld
je
mov
ret
cld
push
add
test
push
sbbl
xchg
pop
fndisi(8087
int3
add
inc
lret
jle
shl
xchg
push
cmp
dec
aaa
dec
das
mov
sti
add
pop
in
fildll
sbb
dec
cmp
sbb
push
lds
aam
push
and
fcmovu
sbbb
and
ja
xchg
cmp
test
pop
pop
loop
imulb
les
inc
cmp
xchg
mov
into
sub
lods
pop
iret
pop
jl
push
jns
cmp
out
bound
cmp
push
sbb
icebp
lret
and
xor
lock
aam
rcl
call
test
push
sub
jne
sub
jb
jg
call
pop
mov
push
push
movl
test
lret
arpl
es
push
mov
mov
in
jge
mov
mov
fcom
xchg
inc
aaa
sub
pop
sub
pop
cmpsb
test
inc
inc
mov
test
xor
mov
rcll
loop
rcrl
cmp
adc
cmp
out
js
or
xor
or
sbb
dec
movsl
enter
test
mov
jmp
jo
imul
xor
add
or
sbb
adc
cmc
inc
sarl
leave
fcmove
repz
ljmp
andb
sub
add
neg
lcall
mov
inc
les
ficoml
push
ja
jb
or
pop
adc
popf
xchg
mov
repnz
adc
xchg
xchg
sbb
clc
daa
mov
loope
xor
loope
and
clc
lods
xchg
scas
lahf
dec
push
mov
add
bound
repz
xor
pop
inc
dec
movsl
and
adc
daa
scas
fwait
mov
dec
movsl
nop
jno
xor
fisttpll
rcll
pop
addps
cmp
aas
cmp
pop
nopl
test
insb
xchg
and
jmp
stos
enter
popa
pop
dec
rcll
push
sbb
outsb
stos
out
inc
add
cli
sub
mov
mov
adc
loope
dec
fidivl
bswap
in
lods
and
push
pop
in
lods
jmp
outsb
pop
adc
mov
fsubl
shl
xchg
sbb
or
vpaddd
pop
push
call
ret
xchg
push
out
fidivrs
pop
adc
sbb
pop
inc
loop
adc
pop
adc
call
cmp
ret
in
dec
push
mov
mov
pop
bound
inc
and
push
mov
sub
and
fmuls
add
pop
adc
movsl
push
push
push
gs
xchg
cmpsl
fisubs
movsb
xchg
adc
fstl
mov
xorl
mov
push
shl
dec
fwait
pushf
xchg
cwtl
inc
add
imul
fisubs
mov
popf
ja
inc
add
ficompl
mov
sbb
cld
adc
pop
shrl
add
sub
mov
test
mov
xchg
adcb
aam
popa
sub
mov
insl
insl
and
dec
push
ljmp
les
mov
add
out
mov
ds
insl
xor
or
jecxz
jmp
jo
lods
std
push
inc
in
mov
jbe
cmpsb
call
jno
dec
imul
ret
fs
mov
cli
mov
jecxz
pop
pushf
ret
std
int
push
das
inc
push
jecxz
dec
xchg
icebp
mov
outsl
or
and
stos
cmp
adc
lock
xchg
mov
and
xchg
bound
shll
subb
push
test
dec
gs
test
ror
in
movb
cli
xchg
iret
test
fwait
inc
lods
dec
ss
pop
lret
mov
and
mov
into
cwtl
test
mov
mov
mov
loopne
out
xor
inc
mov
daa
rol
sub
xchg
stos
shr
cltd
mov
sub
out
adc
xor
or
push
inc
stc
pop
mov
sar
xor
xchg
jge
scas
nop
sbb
test
jmp
pop
push
repz
stos
add
xchg
fdivs
sti
aad
es
and
jecxz
pop
jne
sub
mov
mov
push
lcall
xlat
lret
jmp
sub
jne
xor
mov
rol
xchg
mov
add
xchg
sti
pop
je
sbb
scas
mov
push
rorb
mov
add
inc
sbb
arpl
js
in
add
cmp
in
insl
in
pop
xlat
pop
dec
push
out
mov
mov
xchg
cld
aaa
cmc
shlb
and
imul
fldcw
xor
xor
int3
adc
daa
mov
pop
adc
stc
dec
ljmp
loop
les
lea
mov
jns
cmpb
jmp
scas
stc
add
out
shl
js
mov
das
xchg
cmp
ret
roll
sarl
and
pushf
mov
cmp
push
xchg
ss
or
add
xchg
jo
rcr
adc
xchg
mov
pop
loopne
add
mov
test
lahf
je
icebp
xchg
push
ljmp
cmpsl
xlat
xchg
fs
adc
mov
fdiv
sti
out
cmp
mov
xchg
test
jo
sti
outsb
shlb
test
iret
push
mov
adc
sbb
dec
movsl
dec
dec
lret
inc
xor
pop
mov
icebp
push
sbb
popf
mov
pop
xor
enter
pop
movsb
test
and
jns
inc
cmp
jl
mov
idivb
push
pop
pop
push
pusha
and
mov
sarb
pop
lcall
xchg
cmp
repz
lods
sahf
push
xor
jae
mov
shrl
and
adc
lea
xor
jle
outsb
daa
mov
hlt
cmpl
insl
std
mov
pop
insb
push
xchg
jne
lret
adc
mov
lret
cmpsl
and
cmp
mov
jmp
adc
lea
mov
pop
movsl
test
data16
jecxz
iret
out
sti
xchg
xorps
sbb
shlb
inc
add
cs
sub
mov
outsb
cwtl
jle
pusha
mov
mov
mov
lods
scas
xchg
movsl
xor
xchg
sbb
cmp
mov
jmp
cmp
inc
add
xchg
mov
dec
pop
adc
xchg
jno
into
xchg
push
pop
mov
hlt
and
cmp
mov
sbb
jecxz
cwtl
sub
ss
sbb
arpl
jge
popf
sub
push
and
push
mov
in
pop
fs
lret
xchg
xchg
mov
iret
xchg
test
fcomps
xchg
addr16
loopne
mov
jne
sarl
inc
mov
xchg
stos
pusha
movsb
or
ja
xchg
pop
sub
xchg
popf
adc
jns
fisubl
pop
loop
rclb
hlt
xor
jmp
jne
fldenv
in
cmp
nop
pushf
sbb
pop
and
push
and
adc
sub
fsubs
rcrb
mov
cmp
lods
jne
sbb
lahf
mov
and
fisttps
pop
fcomps
fs
dec
jge
sbb
icebp
dec
mov
sbb
push
je
fs
notl
lods
dec
jl
fwait
sub
sbb
and
sbb
and
xchg
lods
gs
into
nop
ret
push
xor
scas
cmpsb
pusha
mov
icebp
les
loope
in
leave
xchg
mov
stos
sub
push
xor
ljmp
call
or
cmp
iret
mov
adc
xlat
in
and
pop
jae
daa
sbb
call
jecxz
lahf
xchg
dec
aaa
cld
jle
sub
add
push
xchg
sarb
pushf
add
pushl
imul
sub
pop
dec
cltd
loop
in
lret
mov
add
cltd
mov
lods
xchg
into
mov
xchg
push
mov
out
lcall
and
out
lods
popf
into
cmp
imul
inc
mov
xor
mov
mov
fisubrl
shrl
jno
aad
mov
pop
sti
or
cli
mov
pushf
sbb
lcall
inc
xor
mov
inc
insl
lds
loopne
loop
jo
sub
jecxz
push
mov
sub
test
inc
ss
cmp
mov
fucomip
test
movsl
sbbl
push
sub
lock
stc
in
out
loop
jle
ljmp
pop
pushf
pushf
call
dec
popf
inc
sbb
stos
xchg
dec
mov
jle
mov
inc
mov
and
pop
or
pop
cmpsl
imul
cmp
or
clc
lahf
sub
cmp
sub
xlat
movsb
sbb
subb
cs
rcll
mov
sub
dec
stc
rolb
dec
and
dec
sub
or
repz
das
cmp
sub
pop
imul
dec
mov
xor
stc
adc
repz
cld
aaa
movsl
mov
pop
inc
dec
or
bound
scas
cmp
pop
mov
cmpsl
mov
push
not
sbb
out
mov
mov
je
pop
xor
add
nop
ljmp
mov
pop
aas
cmp
rcrl
inc
inc
xchg
insl
inc
pop
sarl
test
jle
dec
repz
insb
inc
pop
xorb
cmpsl
pop
cmp
xchg
xchg
push
push
adc
add
mov
cwtl
jg
dec
and
xchg
push
leave
test
and
fsubrs
mov
hlt
xor
xor
movsb
mov
xchg
push
mov
roll
ljmp
in
sbb
outsb
mov
lahf
stos
mov
cmp
mov
mov
addr16
loopne
sarl
adc
arpl
insl
jnp
cvttps2pi
dec
shll
movsb
jp
nop
xor
mov
add
cmp
je
insb
aaa
aad
mov
push
lahf
sbb
rorb
jp
int
cs
lea
pop
bound
outsb
imul
fbstp
loop
test
push
cmp
insb
orb
adc
stos
push
in
jne
pop
sbb
cld
pop
mov
je
mov
movsb
cmc
pop
jbe
stc
cmp
mov
cmpw
mov
push
out
lcall
je
sbb
add
pop
mov
in
mov
lods
out
adcb
sub
sar
jmp
movsb
mov
xor
push
xchg
loopne
dec
outsl
fnstsw
sub
aas
js
adcb
in
cwtl
fcmovnb
adc
aad
adc
sbb
mov
iret
jbe
pushf
int3
imul
test
push
lods
and
test
adc
or
aaa
repz
ret
roll
int
out
inc
dec
std
push
and
out
bound
jns
call
adc
flds
pop
pop
dec
adc
xor
loope
sbb
mov
testl
aad
xchg
sub
xor
in
add
into
add
adc
mov
jbe
popf
jle
add
incb
jae
ret
jl
push
cmp
mov
addb
imul
das
sbb
pop
lahf
aaa
sti
je
cmp
inc
into
and
mov
dec
mul
pop
pop
fisubl
or
test
jo
sub
fisttpl
push
mov
in
ret
je
lret
int3
sbb
loop
push
cmpsb
sbb
cmpsb
subl
sub
test
setbe
cs
dec
pop
hlt
cmp
xchg
dec
add
and
in
frstor
jnp
jo
in
pop
popa
mov
add
xchg
in
lea
lock
push
push
xor
nop
dec
mov
sub
inc
cmp
jne
pop
or
add
xchg
fwait
jbe
outsb
mov
jo
mulb
xor
cmp
sbb
mov
or
mov
imul
test
sub
inc
jo
std
aad
test
bound
stc
std
xchg
sbb
cli
sbb
rclb
sbb
fbstp
daa
lods
cmpsb
push
test
dec
fs
xor
push
daa
int
test
inc
test
jns
rcll
sar
add
aam
bound
xchg
fsub
nop
xchg
popa
sub
fisubrl
sub
or
lods
cmp
sbb
test
dec
addr16
loop
in
lods
adc
mov
and
fstp
not
lret
xchg
adcb
stos
push
cmpsl
out
lret
or
into
test
daa
ljmp
scas
xchg
aaa
lds
int
sub
nop
pop
push
dec
and
ret
addr16
inc
pop
repnz
das
xor
ljmp
sub
mov
popa
mov
leave
adc
mov
cmc
fwait
mov
dec
jmp
sub
mov
xchg
ljmp
cmp
push
adc
mov
jbe
in
or
mov
xor
pop
out
fs
in
pop
rorb
or
scas
call
shl
jge
mov
jno
test
pop
mov
sub
adc
outsb
movsb
repnz
nop
dec
cmpsl
xchg
sti
sbb
aad
shlb
jecxz
mov
out
movl
mov
xlat
or
test
mov
sbb
aam
xchg
out
rcrl
dec
jecxz
cli
adc
push
std
push
xchg
cmp
stc
out
adc
add
jno
outsb
cltd
ja
lods
jecxz
clc
push
jb
je
cmc
or
daa
ret
mov
push
rolb
repnz
jb
mov
enter
pop
in
nop
jmp
and
mov
xor
jns
mov
cmp
add
adc
fcmove
lahf
jle
adc
cmpsl
cvtdq2ps
fstpt
push
in
dec
push
test
fmul
lods
sub
movsb
push
mov
cmp
jl
sbbb
adc
jmp
lret
xor
test
mov
out
mov
sub
mov
lock
xchg
jne
mov
cmp
int
and
cltd
cmp
pop
test
enter
nop
pusha
push
enter
fstl
push
lods
iret
ds
in
jb,pn
jl
pop
lods
data16
jae
jbe
xor
cli
mov
icebp
xchg
popf
cltd
xor
xchg
inc
in
push
xlat
lcall
inc
adc
and
in
outsb
push
jnp
sbb
jae
dec
add
inc
xchg
out
jno
cmp
popf
mov
fnstcw
inc
sbb
sahf
out
fsubrl
mov
jmp
in
cmp
fisubrs
lahf
adc
dec
lret
mov
dec
pop
push
daa
inc
decb
mov
mov
xchg
push
xchg
pop
dec
mov
and
xchg
lock
std
mov
jmp
insl
sbb
and
subl
cmpsl
int3
adc
gs
xorb
cmp
jno
int
repz
xchg
xchg
lds
aad
jmp
bound
cs
sbbb
and
int3
arpl
test
repnz
inc
std
out
xchg
imul
mov
inc
stc
mov
add
enter
sub
xchg
mov
lds
ja
push
add
aam
mov
out
stos
or
xchg
cs
ljmp
xchg
push
adc
jg
cmpsb
mov
mov
xlat
es
xchg
bound
clc
notb
xor
cli
cmp
push
push
insb
mov
dec
aam
fs
dec
test
fnsave
daa
dec
das
push
adc
ljmp
xchg
in
leave
int
orb
sbb
sbb
ds
pop
add
mov
stos
cmp
subb
sahf
xor
dec
add
jge
insl
add
jle
imul
sbb
popa
rcl
push
loop
fisttpl
cmp
test
loopne
ret
into
inc
xchg
or
pop
add
lea
and
xor
sub
cmp
pop
into
sub
imul
fisubrs
dec
cmp
mov
push
imul
mov
popa
popf
inc
cs
insb
lods
test
pop
cmp
outsb
or
inc
push
adc
negl
fisubs
lods
out
imul
inc
mov
les
mov
mov
ja
jle
dec
sahf
and
jbe
out
movsl
aaa
nop
dec
sbb
sub
addr16
les
hlt
cmp
mov
or
aam
sub
movsb
mov
inc
and
add
xlat
add
loope
push
movsl
out
cld
mov
mov
push
mov
pushf
xchg
jmp
jae
cmc
jbe
mov
mov
mov
daa
mov
xchg
sub
in
and
outsb
aad
testl
popf
and
mov
pop
sub
sti
push
data16
pop
push
ss
push
cs
in
rorb
ds
xchg
mov
jp
mov
shrb
lods
jle
pop
sub
outsl
pop
add
xchg
push
xor
push
or
hlt
ss
test
pusha
dec
sti
int3
aaa
adc
sub
mov
push
insl
xor
xchg
pop
jge
shll
fistl
arpl
imul
mov
sub
cmpsb
and
cld
mov
add
mov
lret
in
int3
addb
cmp
mov
pop
xor
inc
and
loope
dec
sbb
mov
mov
cltd
mul
lea
sub
fwait
add
int3
pusha
inc
dec
sub
sub
mov
in
lret
testb
jle
sub
bound
scas
sub
cmp
sub
push
int3
mov
gs
mov
add
std
sub
fists
cmp
cmc
mov
mov
shlb
in
jl
leave
xor
adc
ret
movsb
jae
test
paddq
mov
push
push
xchg
test
iret
int3
imul
jl
dec
jno
dec
es
ljmp
xchg
ljmp
test
jp
inc
xchg
cwtl
or
dec
cmpsb
adc
adc
js
and
mov
icebp
inc
dec
mov
clc
dec
mov
fwait
jb
mov
push
sbb
lret
mov
incb
push
in
pop
in
loop
xor
xor
cli
push
push
xchg
pop
mov
mov
js
repz
cmc
mov
jmp
add
dec
fcompl
sub
mov
and
xchg
mov
out
jmp
pop
out
aas
xchg
into
pushf
push
mov
call
lea
xor
push
scas
ljmp
cmpsl
dec
pop
inc
mov
movhps
push
call
leave
add
pop
and
jb
bnd
push
xor
bound
cmpsl
jmp
push
jg
lret
mov
ret
ficoms
pop
inc
fadd
inc
dec
mov
test
dec
int3
lods
icebp
mov
ljmp
shrb
out
mov
or
lds
dec
xor
mov
jo
call
nopl
push
pushf
mov
int
mov
mov
test
adc
sbb
fldenv
jge
test
inc
fcoms
xchg
adc
xchg
aad
or
cmp
jne
sbb
test
adc
adc
dec
mov
shl
lods
fcmovu
negb
mov
cmp
mov
loope
rcl
mov
pop
es
test
sbb
cmp
jno
mov
push
out
sub
ja
mov
xchg
lret
les
rcr
xor
adcl
push
fcompp
repz
mov
xchg
mov
hlt
aas
inc
shl
ljmp
test
mov
jp
dec
or
int3
jb
pop
popa
adc
adc
lds
mov
dec
sbb
cmpsb
cltd
ljmp
or
sub
sub
add
lock
push
pusha
cli
lcall
das
mov
pop
ljmp
hlt
out
dec
push
mov
mov
or
pushf
shlb
fadd
insl
pop
lret
out
addr16
fdiv
inc
mov
insb
mov
lret
sti
shll
mov
mov
imul
clc
jmp
dec
aam
lea
xchg
fimull
sahf
or
inc
rcrl
jne
or
jp
rcrb
loopne
enter
sbb
mov
test
push
xchg
dec
jle
add
xchg
dec
pop
or
in
inc
enter
jbe
adc
imul
add
push
cmp
and
imul
cmpl
loopne
test
int3
push
sub
fbld
sbb
pop
dec
add
imul
push
out
add
push
sub
cli
fdivr
test
cld
adc
adc
jmp
fwait
cltd
xorl
stos
push
lahf
repnz
ret
je
xchg
mov
outsb
xchg
cmp
sti
or
and
mov
jg
cs
mov
jbe
mov
test
std
push
or
cmpl
fs
jno
push
das
sti
das
pop
das
movsb
outsb
pop
mov
jp
add
in
imul
out
icebp
lret
pop
out
leave
adc
cld
mov
scas
mov
jo
push
shll
dec
inc
aam
jl
cwtl
je
add
shll
sbb
jp
jl
bound
ja
jmp
cmc
xor
out
inc
std
insb
aas
leave
mov
sbb
push
sbb
xchg
push
and
jbe
push
jp
insl
out
jle
lret
pop
xor
pop
add
out
test
and
sbb
cmpsb
frstor
ds
or
xchg
xchg
sub
cmp
xor
dec
xor
arpl
jmp
roll
ret
or
mov
divb
stos
or
adc
pop
cmp
jecxz
mov
xorl
cmp
call
mov
mov
mov
lcall
cmp
pop
pop
xor
xchg
cmpsl
popf
pop
mov
cs
push
mov
imul
xchg
out
pop
adc
shl
insb
loop
xchg
cld
imul
call
ror
ss
jno
jae
mov
mov
mov
mov
push
or
mov
lods
repz
test
rcr
cmpsl
jmp
rcrl
sbb
mov
push
add
nop
je
pop
outsb
in
lock
subb
adc
into
insl
iret
aad
daa
mov
out
pop
in
mov
mov
aaa
inc
mov
pop
loop
add
cwtl
sub
fidivs
or
and
js
sbb
inc
pop
cmp
sbb
push
xchg
pop
and
add
pop
jge
int
in
dec
xchg
mov
lds
mov
test
repnz
mov
ret
xor
stc
mov
cmp
mov
inc
adc
pop
pop
jne
imul
pop
lds
test
xchg
inc
dec
jns
notl
jmp
insb
mov
ret
divl
insb
lcall
js
xchg
mov
jo
js
movsl
sbb
popf
mov
mov
inc
outsl
adc
xchg
dec
dec
adc
jnp
js
xor
mov
cmpsl
in
mov
sbb
push
repz
xor
shlb
ja
loope
popa
rcl
ret
pop
xor
ljmp
and
push
xchg
fbld
aaa
ret
scas
and
loopne
sub
ret
dec
testb
mov
dec
add
into
popa
pop
out
mov
push
nop
jg
pop
push
pop
jmp
repnz
icebp
mov
xlat
xor
mov
int3
lret
aas
stc
mov
cmpsb
or
add
mov
push
aam
pop
das
jbe
jmp
xchg
loope
cmp
jle
pop
pop
lds
sub
stc
call
outsb
stc
je
scas
nop
cmp
inc
rorb
dec
mov
or
adc
into
xchg
or
cmpsb
ja
pop
aad
cltd
jo
pop
mov
out
inc
and
xor
cltd
xor
cld
mov
icebp
lcall
mov
and
test
lahf
adc
lds
or
mov
xchg
into
lock
jno
jae
popl
gs
mov
fs
sbb
call
add
adc
pop
out
add
mov
fwait
clc
push
repnz
jne
aaa
mov
scas
mov
in
jb
loope
scas
mov
popf
jle
mov
ljmp
jge
or
fdivrp
loope
addr16
out
add
icebp
xor
jle
daa
xchg
lods
in
repz
cmpsb
cmpsb
xchg
mov
pop
xor
sub
cmpsb
scas
sub
and
imul
mov
push
mov
insl
add
xchg
jbe
cs
xchg
in
cmp
inc
xor
inc
shl
dec
lret
pop
dec
add
pop
jge
lret
and
cmp
fdivrl
leave
in
and
into
ja
bound
lret
adc
sahf
pop
in
shll
imul
or
iret
adc
fcmovnu
add
lret
adc
cld
cltd
inc
fdivl
fisttpll
xor
pop
mov
add
imul
pop
mov
pop
inc
mov
push
lcall
xor
cmp
jbe
arpl
addr16
push
xlat
and
sbb
or
lea
sbb
rorb
das
cltd
push
or
cmp
aam
movsl
and
jmp
pop
inc
dec
pop
loope
push
mov
or
sbb
xchg
fcompl
aas
out
inc
jnp
outsl
iret
fcompl
cld
outsl
mov
jmp
mov
divb
aaa
addb
clc
popa
movsb
idivb
imul
cmpsb
adc
or
fmull
fdivrl
bound
jmp
xchg
test
push
loope
fs
ds
jecxz
jge
stos
xlat
pop
pusha
and
jnp
out
mov
push
xchg
mov
jmp
push
gs
jle
ljmp
pushf
cmp
xor
movsl
hlt
ljmp
mov
xchg
insb
ss
jp
add
dec
scas
outsl
jmp
mov
mov
jnp
or
xor
inc
lahf
jo
into
fisttpll
xor
xor
bound
push
ret
cli
push
mov
mov
push
mov
sti
mov
sub
loop
adc
jb
or
clc
cs
pop
sbb
sbb
push
pmulhw
test
jl
mov
insl
add
push
push
imul
stc
mov
sti
lods
rol
movsb
cmp
xor
cmp
jge
jle
pop
and
xor
mov
inc
sbb
inc
sub
addr16
mov
xchg
in
xchg
repnz
mov
xchg
arpl
push
cmp
mov
popa
cltd
lahf
inc
push
jae
xor
fimull
mov
mov
int
and
or
divb
lcall
and
push
push
mov
jbe
das
inc
jns
dec
testl
test
cs
cld
sbb
push
sub
sbb
out
jns
mov
into
push
aas
out
sub
in
cmc
or
popf
xchg
aam
or
mov
xchg
repnz
push
movsl
fnstcw
inc
insb
dec
negb
lret
ss
mov
xor
mov
js
mov
jne
mov
loop
das
sub
out
dec
fwait
mov
mov
jmp
cltd
mov
movsb
sti
sub
lods
in
js
pop
inc
gs
sub
aas
adc
bound
xchg
fdivs
xor
and
negl
adc
xor
popa
xor
incb
js
movsb
shrb
xchg
adc
ret
loopne
xchg
mov
push
push
jg,pn
outsl
jo
inc
jge
inc
or
fcompl
hlt
fs
lea
outsl
push
mov
or
xchg
aam
jg
mov
sbb
push
insl
repz
insl
popa
sbb
push
fiadds
fs
push
lock
mov
xchg
jp
push
adc
imul
arpl
add
inc
cwtl
mov
pop
lds
mov
and
mov
jmp
adc
outsl
outsb
inc
dec
rcrb
and
xchg
push
mov
or
jb
lock
push
push
push
repnz
jecxz
adc
mov
jmp
sbb
sub
jecxz
mov
addr16
in
and
or
pop
lods
cwtl
fistl
dec
mov
mov
lahf
adc
lods
xor
add
fs
mov
insb
imul
aad
popa
cmp
pop
inc
ja
lods
enter
popa
outsl
ficoms
pop
inc
nop
movsb
pop
mov
or
xchg
imul
pop
xchg
push
sarl
mov
push
loopne
scas
outsl
xchg
lock
jb
cmc
xor
jmp
mov
fs
inc
add
mov
mov
repz
mov
sub
xor
add
push
jns
xchg
mov
or
cmp
sahf
pop
jge
dec
fidivs
cmp
daa
aad
xor
inc
int3
out
pop
sti
xchg
dec
xchg
movsl
sar
jmp
andl
shrl
scas
pop
testb
jnp
pop
pop
stc
or
in
push
jg
das
mov
fidivs
inc
add
dec
add
addl
xchg
inc
mov
jno
sub
js
xchg
xorb
add
mov
mov
pop
or
aas
push
shl
add
scas
movsl
bound
leave
in
fists
or
lahf
mov
int
shrb
push
adc
jnp
inc
mov
das
incl
push
mov
outsl
sub
add
imul
xchg
je
test
movsl
icebp
ds
xchg
adc
imul
je
js
sti
dec
sbb
out
or
cmp
imul
sbb
ljmp
dec
je
fldcw
sti
aaa
loopne
sbb
loopne
pop
in
mov
test
test
shll
enter
movsl
xchg
dec
notl
jo
enter
push
adc
mov
testb
shr
dec
jo
imulb
cmpsb
mov
std
or
push
inc
cld
add
inc
test
data16
scas
lods
outsl
leave
pop
shl
adcl
lcall
mov
ss
push
ljmp
xchg
test
pusha
cmpl
inc
aam
xchg
popf
std
xlat
inc
test
xchg
sbb
stc
sahf
and
adc
push
fimull
repnz
roll
and
or
push
mov
clc
je
movsl
or
faddl
popf
jp
enter
out
sbb
mov
iret
loopne
add
mov
fidivl
fucom
mov
leave
xor
cmp
pop
in
mov
xchg
ss
adc
jp
ljmp
xchg
add
jae
shl
inc
xchg
sahf
and
pop
mov
scas
jge
xor
test
lods
jle
cmp
in
xchg
pop
lret
shll
mov
pop
subl
std
xchg
out
push
and
jbe
push
dec
adc
cwtl
icebp
stos
or
jbe
push
jns
js
mov
adc
inc
cmpsb
cmp
jo
push
addl
mov
xchg
pop
mov
les
cli
mov
xchg
push
inc
into
xchg
or
mov
pusha
xchg
into
push
lods
and
push
clc
mov
bound
or
mov
pop
mov
pop
test
or
sbb
jge
and
adc
pushf
lret
mov
push
dec
push
lahf
rolb
dec
inc
and
add
inc
sbb
cltd
bound
inc
icebp
insl
mov
lea
call
repz
sbb
dec
bound
push
std
push
mov
xchg
dec
push
sarl
cwtl
jge
xchg
inc
xor
dec
out
jb
xor
ret
push
lret
jae
cmp
lea
xchg
fimuls
movsb
and
loopne
leave
and
sbb
mov
fdivl
repnz
cwtl
ss
lea
push
mov
movsb
repz
push
mov
mov
sahf
ret
sub
pop
insb
push
push
popa
push
rcr
mov
push
or
inc
scas
adc
outsb
mov
adc
aam
sub
mov
xchg
js
pop
adc
cmp
mov
mov
jb
sub
in
adc
fsubl
xchg
in
les
adc
mov
and
or
sarb
xlat
lea
sbb
adc
jmp
mov
shrb
mov
js
ljmp
adc
pop
loop
sub
pop
and
jmp
inc
out
les
in
inc
sub
pcmpeqb
je
mov
and
dec
mov
jnp
mov
mov
hlt
xchg
push
adc
dec
lret
sahf
into
adc
mov
frstor
push
lret
adc
push
push
pop
mov
sarl
subl
addr16
inc
sub
clc
out
std
cmc
or
add
repnz
xchg
fcoml
mov
mull
cltd
fistpll
mov
test
push
jb
adc
push
ret
xchg
subl
xchg
aaa
jae
es
cmp
cmp
adc
sub
ds
ret
add
je
testb
lahf
roll
mov
jnp
out
lcall
xor
or
pop
rol
xor
xor
or
ficoms
push
dec
mov
push
mov
and
pop
lcall
mov
inc
and
mov
orb
cwtl
mov
mov
icebp
imul
mov
or
dec
popa
jmp
mov
and
es
insb
addr16
adc
push
sbb
and
mov
xor
dec
xor
lock
fwait
mov
repnz
out
mov
lds
mov
mov
test
ljmp
ds
enter
aad
xchg
cmc
push
cmp
push
inc
js
jnp
add
jnp
mov
adc
push
ds
aad
adc
cmp
adc
into
hlt
lea
fisttps
mov
lret
cmp
in
popa
push
loopne
sub
adc
icebp
mov
cmp
sub
inc
jge
mov
incb
add
sub
push
js
arpl
std
movsb
or
mov
pushf
arpl
in
sbb
sub
jns
shlb
sbb
aas
leave
jnp
mov
lods
and
out
gs
cltd
push
push
enter
lds
xchg
mov
adc
sub
aas
jo
jecxz
pop
xchg
je
pop
jp
mov
stc
addb
mov
loope
mov
sub
mov
daa
std
jno
mov
mov
cltd
or
cli
jp
pop
scas
sbb
ss
fsts
xor
or
dec
imul
cmp
cwtl
push
sbb
xor
call
out
push
cmp
fwait
sbb
mov
xor
in
fbstp
push
gs
or
mov
adc
adc
popa
insb
insb
xchg
mov
popa
mov
cli
iret
mov
out
movsl
sub
pop
arpl
repz
es
lret
cli
adc
fcomps
pop
or
lods
xor
mov
cmpb
test
popf
inc
and
shlb
cmp
push
in
into
pop
mov
rorl
hlt
andl
mov
fnstsw
lods
popa
fdivs
xchg
data16
add
add
lcall
bound
or
jge
or
aam
subb
loop
xor
sbb
orl
loopne
nop
es
and
jp
jg
xchg
xchg
iret
inc
xor
adc
jb
insb
and
and
xchg
ficoml
into
sub
arpl
nop
jne
arpl
scas
repz
pop
push
andl
pop
fstpl
or
mov
mov
pop
out
dec
push
xchg
lock
test
cmp
sub
jecxz
sbb
xor
adc
hlt
hlt
fs
call
fidivrs
sub
mov
jnp
sub
popf
loopne
adc
and
pop
xchg
inc
sbb
std
push
xchg
jno
dec
and
or
test
into
imulb
adc
movsl
jle
dec
pusha
sbb
bnd
cmpsb
and
inc
aad
fidivs
mov
test
jnp
adc
jmp
leave
cli
loope
cmpl
ljmp
sub
xlat
mov
or
pop
inc
clc
enter
and
cmpsb
sbb
popf
jb
and
push
in
dec
ret
out
mov
jns
mov
xor
loope
rcrb
inc
hlt
lahf
je
inc
ret
insl
sub
mov
outsb
pop
push
sbb
imul
out
in
out
insl
movsb
das
pop
sub
daa
popa
icebp
outsb
popa
mov
mov
inc
xor
hlt
cmpsl
adc
cs
cmp
lods
push
jg
adc
popf
jecxz
fs
mov
add
iret
xchg
mov
outsl
leave
add
mov
push
aam
fnstsw
push
or
inc
aam
neg
xor
imul
xor
addr16
cmp
fwait
scas
fnsave
out
xor
fld
push
xor
sar
cmpsb
fabs
movl
neg
mov
sahf
mov
scas
mov
repz
ds
test
std
mov
xor
jb
fsubr
ret
out
jb
test
and
ss
mov
into
ljmp
and
lret
jns
mov
jp
jmp
imul
mov
pop
xor
mov
add
sub
mov
enter
pop
push
mov
clc
aaa
mov
das
push
fiaddl
outsl
out
pop
xchg
jns
dec
sarb
lcall
pop
into
lea
out
aam
outsl
stos
test
inc
std
in
push
sbbl
data16
xchg
mov
mov
mov
out
test
sbb
add
bsf
jne
sti
sub
mov
lahf
shrl
sub
iret
dec
dec
jle
pop
add
es
sbb
cmp
dec
or
cmpsb
ds
xchg
xor
and
cmp
out
lock
xlat
push
fdivs
in
cs
icebp
std
pop
fcmovne
push
add
test
sarl
cltd
push
xchg
test
imul
call
fcompl
sbb
ret
mov
xchg
cwtl
adc
int3
pop
test
xlat
cli
filds
stc
xor
mov
push
pop
dec
faddl
movsb
xor
ud2
pushf
dec
lret
dec
mov
mov
push
nop
std
shrl
push
shl
xchg
fistpll
push
cmp
leave
test
xchg
xor
sub
xor
sti
push
arpl
fwait
push
xlat
out
xchg
clc
mov
mov
incl
mov
dec
mov
bound
loope
icebp
andb
subb
cmc
xchg
pop
dec
sbb
arpl
fisubl
or
popa
jecxz
imul
arpl
fsts
or
aad
sub
xor
push
cmovo
cltd
lods
scas
repz
or
inc
sti
inc
xlat
dec
out
ficompl
pop
popf
stos
cs
loopne
das
push
push
test
sbb
jbe
and
fsubrs
mov
adc
fwait
add
jle
dec
leave
cmp
xchg
push
test
push
mov
xlat
push
push
addb
addl
es
mov
cld
movsb
cli
mov
jecxz
cmp
call
push
out
mov
enter
mov
das
jle
xor
rclb
pop
sub
rcl
negb
imull
lods
shrl
sti
repz
stos
mov
push
in
out
out
push
das
pop
stos
je
clc
jg
popa
adc
pop
mov
jns
xor
dec
jmp
push
mov
pop
sub
and
loope
ja
dec
iret
xor
lods
xchg
dec
pop
mov
les
cmpsb
movsb
iret
pushf
xchg
insb
test
into
or
scas
or
rcrb
pop
rcl
dec
test
outsl
sahf
push
stos
jns
movsw
inc
fstp
xchg
test
add
xor
add
jl
insl
mulps
push
mov
pop
iret
jb
gs
mov
pop
jb
jge
pop
pushf
mov
add
into
ds
jae
repnz
ds
mov
push
push
push
adc
scas
outsb
mov
arpl
aad
cmc
mov
leave
mov
and
mov
cmpsb
stos
mov
push
xor
add
xchg
or
scas
jp
mov
lret
scas
dec
bound
in
mov
imul
inc
inc
push
in
pop
movsl
cld
ja
push
test
clc
push
je
push
lods
or
stos
loope
xchg
push
mov
scas
test
xlat
mov
xchg
and
clc
adc
adc
sbb
imul
inc
nop
mov
lock
cmpsl
jle
push
dec
enter
cmp
push
into
inc
inc
scas
leave
pop
arpl
push
lcall
es
lods
mov
pop
arpl
aaa
lret
bound
xor
push
sub
loope
mov
sbb
mov
cmpb
pop
ret
inc
lea
test
pop
repnz
faddl
and
mov
cmp
pop
mov
aas
js
pop
es
push
scas
cmc
mov
inc
lahf
insb
and
andl
nop
sbb
jae
nop
bound
push
inc
pop
insb
sub
dec
sub
inc
xchg
dec
pop
pop
mov
mov
cli
push
dec
stos
pusha
mov
sub
jmp
mov
imul
repz
jbe
je
sub
or
sbb
add
std
in
mov
mov
clc
jb
add
das
xchg
pop
das
mov
dec
pop
xchg
jae
sub
fisubs
stc
cmp
js
and
sub
cmpb
mov
in
pop
test
imul
jl
ret
fcomp
add
jecxz
into
push
lahf
ljmp
push
outsl
xchg
jno
jle
adc
mov
mov
jge
jg
out
fcoml
imull
cmpsl
add
adc
cld
loop
jp
dec
rcrb
dec
jbe
out
aad
movsb
outsb
sub
and
fwait
cmp
lcall
faddl
cmp
dec
in
push
fsubrp
hlt
cs
loop
xchg
sbbb
sub
stos
add
add
mov
jmp
fisubrs
dec
popl
hlt
sar
pop
push
imulb
pusha
outsb
insb
mov
out
cmp
pop
pop
roll
adc
fistpl
jno
or
or
sbb
inc
push
std
pop
fdivl
pop
cwtl
push
hlt
cmc
xchg
inc
das
aad
mov
jge
fucom
imul
pop
insl
loope
fistpll
pop
mov
call
das
or
xchg
dec
ret
int3
xor
jne
subps
sbb
cmpsb
sahf
xchg
jne
xor
xchg
mov
icebp
fisttpl
push
mov
mov
shlb
jecxz
adc
adc
mov
cmpsb
jp
xchg
push
imul
cmp
es
push
bound
iret
add
scas
divb
lds
fwait
movsl
scas
push
dec
mov
lret
lods
adc
insl
inc
lcall
mov
rcrb
shll
pop
mov
iret
js
aaa
inc
movsl
cmp
mov
out
and
fistpll
fildl
mov
fiaddl
lds
mov
adc
sahf
scas
and
jb
aaa
xchg
lret
lcall
pushf
cmpsl
mov
and
ljmp
dec
jp
add
cltd
xchg
and
andl
popf
ss
sbb
xor
cmpsb
sahf
xlat
xchg
xor
add
scas
test
lret
aad
enter
daa
sbb
aad
in
bound
add
fiaddl
add
mov
les
js
fstpl
sub
jo
xchg
dec
add
mov
xor
xchg
cmp
push
icebp
lods
fcmovnu
test
and
pop
xchg
mov
add
push
xchg
movsl
test
xor
xor
push
stos
mov
sbb
fldcw
fs
pusha
or
pop
dec
test
daa
inc
insb
lret
mov
jle
fucomp
adc
mov
jne
or
testl
jno
stos
pop
jnp
or
pop
xor
adc
xor
repz
jge
imul
in
icebp
or
lds
lahf
in
lock
in
and
aaa
cwtl
or
adcl
mov
or
loope
je
imul
mov
fdiv
sub
mov
mov
add
sarb
shll
out
pop
dec
lcall
dec
jno
lahf
inc
cmp
mov
in
int3
mov
leave
sti
cwtl
shrb
je
or
mov
shll
jne
xchg
rorb
sub
call
lcall
pop
xor
add
fistps
loope
pop
or
std
push
jnp
test
insb
cmp
xchg
cmpsb
mov
ret
cmc
and
imul
repz
mov
xor
cmpsl
xchg
test
fildll
mov
sbb
ss
xlat
stc
leave
lods
dec
sbb
push
inc
pushf
lods
sub
cmp
loopnew
sqrtps
je
hlt
inc
xchg
mov
leave
insl
fsubrl
stos
and
ret
imul
mov
inc
and
cmc
cltd
mov
mov
cs
sete
movsb
lret
cmp
hlt
test
movsb
mov
add
outsl
inc
mov
lret
push
je
dec
pop
ljmp
out
cmpsl
int3
inc
jbe
xlat
ss
aam
fcomps
and
add
cmp
icebp
out
fiaddl
inc
lret
ss
sub
ljmp
shl
or
cmp
gs
cmp
lods
push
xchg
push
push
in
in
inc
jmp
mov
in
outsb
or
sar
sub
mov
arpl
cli
fdivs
sub
ljmp
ljmp
xor
push
pop
xorl
fidivrs
push
xchg
mov
fnstcw
adc
popa
and
lea
xchg
jmp
movsl
jnp
icebp
mov
add
jae,pt
ss
jno
push
out
out
mov
xchg
xor
lods
add
icebp
insb
and
mov
add
xor
mov
inc
ret
lea
mov
enter
push
std
xchg
push
mov
imul
mov
dec
and
add
aam
adc
inc
pop
sub
and
push
cmp
in
fwait
xchg
cmp
fsubrs
lret
and
cwtl
je
outsl
sbb
lahf
jmp
and
aad
mov
jb
sbb
mov
popf
lock
sarb
mov
and
mov
rorb
lret
jge
mov
test
or
subl
int
cmpsl
or
mov
push
cmp
ljmp
cmp
std
es
mov
add
jo
add
outsl
pop
sub
fstpt
mov
dec
pop
jnp
enter
pop
xlat
dec
jbe
inc
jno
jle
push
mov
mov
and
jae
pop
into
mov
mov
testb
add
fsubl
test
into
or
and
insb
cltd
xchg
insb
in
jmp
adc
mov
jmp
subps
jmp
fwait
push
aam
push
lret
mov
lret
pop
mov
sbb
adc
dec
out
iret
lods
bound
sbb
leavew
call
iret
or
xchg
out
and
sub
sub
jae
ss
mov
daa
ljmp
int
sbb
sbb
lret
ret
mov
and
nop
dec
sbb
loope
jle
js
jge
mov
fcomps
insl
fbld
lret
jb
dec
push
pop
or
cmpl
imul
inc
bound
out
sbbl
ret
xchg
jne
mov
mov
fcmove
sarl
gs
in
xor
dec
pop
dec
shrb
push
jmp
and
jae
pop
push
mov
testl
mov
adc
mov
pop
out
test
jle
inc
cmp
clc
sbb
mov
inc
pop
lcall
xchg
out
sbb
or
dec
add
icebp
xor
push
or
repnz
pop
stc
int
stc
xchg
jecxz
push
jle
push
xchg
mov
insb
data16
test
jnp
sbb
popa
lcall
lcall
in
fsubs
clc
loop
mov
out
adc
add
xlat
test
popa
jg
fists
adc
sets
mov
dec
sub
ja
add
xchg
jp
cmp
push
mov
jae
enter
ficomps
lods
je
adc
mov
cld
mov
in
rdpkru
arpl
das
notl
sub
jbe
pop
sub
imul
shl
xor
xchg
popf
push
inc
test
test
cld
inc
add
cmp
add
adc
pop
push
mov
or
cmp
add
in
cmp
fstp
xchg
movsb
mov
push
mov
dec
js
or
and
imul
test
add
idivb
pop
cs
mov
sbb
push
jecxz
or
ret
add
cmpb
push
pop
insb
push
add
add
movsb
mov
outsl
mov
ror
lcall
notb
outsb
pop
jge
repnz
mov
int
push
dec
push
xor
adc
rcll
idiv
rclb
xchg
es
add
testl
xor
fucom
add
xor
jns
adc
pop
rcll
adc
jns
in
dec
or
repnz
mov
je
clc
jo
stc
dec
out
or
adc
lcall
fldenv
cmp
adc
add
in
jg
aad
lods
xchg
mov
dec
adc
call
pop
dec
enter
dec
out
scas
jo
pop
mov
pop
mov
test
icebp
cmp
xchg
lock
test
mov
and
mov
mov
cmpsb
in
add
les
xchg
movsl
jno
mov
push
mov
jg
fisttpll
cltd
imul
lret
mov
push
mov
sbb
jp
test
xchg
lcall
add
cmp
arpl
out
aas
aas
jno
cmp
pop
push
xor
out
test
mov
adc
outsl
sub
jo
jns
into
rorl
jg
shrb
dec
mov
sbb
out
pop
xchg
jecxz
outsb
xchg
test
ljmp
out
push
outsb
ds
pop
jae
fnsave
iret
mov
push
add
testb
inc
fnsave
dec
loopne
add
in
les
xor
fmuls
xchg
cld
rclb
cltd
push
es
stos
xchg
fs
mov
add
mov
jmp
arpl
mov
push
add
push
xor
pusha
mov
mov
push
imul
jg
inc
mov
loop
rolb
sbb
aaa
sbb
enter
push
mov
fadd
jb
andb
xchg
push
inc
ja
sub
lahf
inc
hlt
addr16
sub
adc
mov
mov
inc
pop
jns
mov
rcrb
xchg
xor
mov
xor
out
fstpt
out
pop
jecxz
les
jae
cli
push
clc
into
push
leave
pushf
daa
das
outsb
jg
in
dec
dec
push
mov
push
add
push
jg
and
push
fcmovnu
mov
neg
push
cltd
lahf
mov
rcrb
mov
hlt
adc
shl
inc
ret
adc
pop
into
cmp
lock
les
int3
js
sbb
mov
inc
out
mov
push
stos
fldz
loope
sub
xchg
fbld
outsl
sub
dec
gs
insl
fcom
roll
or
xorb
and
shlb
inc
adc
sub
pop
les
cmc
leave
xor
xchg
fwait
inc
xchg
jge
in
arpl
add
or
ret
movsb
cmp
loopne
loope
pop
ljmp
mov
mov
jae
mov
lds
aam
rolb
notb
test
cmp
out
push
in
xor
or
ss
bound
sbb
into
out
inc
and
cmpsb
shr
add
in
call
adc
xchg
mov
gs
fimull
test
jmp
ja
test
loop
mov
mov
mov
pop
adc
mov
ljmp
call
mov
mov
mov
xchg
xchg
adc
xor
mov
add
pop
in
stc
xchg
mov
lret
stos
arpl
fwait
dec
mov
lea
fcompl
jbe
je
in
pop
inc
cld
xchg
clc
cmpsb
jmp
shrb
jge
hlt
in
dec
mov
addr16
stos
cwtl
cmp
gs
out
lods
insl
push
jo
push
in
pcmpgtw
adc
test
jnp
and
aad
arpl
cmp
push
adc
xlat
subl
repnz
add
xchg
popa
adc
insl
hlt
sub
scas
lahf
cmpsb
cld
lds
pop
shr
fisubrl
gs
mov
xor
mov
fcomp
pushf
divb
cld
div
dec
sahf
cmp
popf
cld
mov
pop
and
jle
lahf
inc
dec
mov
negl
or
into
in
cli
je
call
enter
js
cltd
pop
inc
push
mov
xorb
int3
adc
sub
jmp
sub
mov
pop
mov
or
jp
jmp
hlt
pop
xor
push
clc
sub
int3
cmp
jnp
cmpsb
push
jecxz
jle
ja
stos
int
sub
xchg
addl
ret
in
test
xor
inc
cs
fsubrp
jle
loope
cmpb
pushf
fsubl
adc
leave
addr16
outsb
fdivl
mov
popa
or
fldl
jo
xchg
fdivr
pushf
sub
das
cmpsl
xchg
flds
ret
repz
cmp
sub
in
inc
xor
mov
lahf
rep
xchg
and
inc
test
lcall
push
fbstp
dec
mulb
out
popl
jns
and
lret
dec
jecxz
shlb
pop
xor
or
nop
or
scas
mov
daa
mov
loopne
cmp
cmp
mov
outsl
cmp
outsl
sub
or
testl
mov
mov
into
ja
imul
pusha
int
in
push
js
cmpsb
fs
pop
fldl
push
insb
ljmp
pushf
imul
fidivrl
mov
and
jecxz
jbe
repnz
loop
sbb
inc
jge
cmp
inc
orl
or
cmp
roll
jne
ja
das
sub
cmc
in
mov
gs
fiaddl
and
lds
mov
xchg
clc
xor
pop
je
icebp
and
lea
loopne
push
mov
pop
adc
xor
jns
popf
inc
test
dec
daa
cmp
xor
add
out
xor
scas
jg
inc
pop
mov
out
or
mov
xchg
mov
lret
dec
es
mov
adc
mov
cmp
aam
in
sub
jns
pushf
sti
adc
fdivl
cmp
xlat
outsl
das
push
je
dec
or
shl
push
push
repnz
add
pop
pop
mov
je
dec
outsb
std
jae
xor
lea
shr
fstpl
push
push
popf
mov
add
outsb
mov
mov
xor
jmp
or
mov
sbb
mov
pcmpgtb
jo
scas
int3
ss
mov
loop
inc
jbe
xchg
adc
lea
mov
pop
rol
cld
sbb
sbb
mulb
cmpsl
jns
hlt
or
inc
mov
fsubrp
and
cs
sbb
loope
js
mov
lahf
add
xchg
stos
lcall
loop
xchg
fisttpll
jae
or
push
adc
cmp
mov
enter
clc
pop
out
sub
pushf
mov
es
cli
xor
and
fisubrl
sbbl
or
mov
imul
in
or
mov
push
ret
jg
mov
cmp
mov
jbe
push
outsb
ftst
xlat
mov
fsubs
inc
inc
into
stos
jbe
or
out
out
enter
sbb
sbb
shl
int3
insl
enter
mov
sbb
pop
inc
out
ss
mov
pusha
imul
mov
cwtl
int
jno
dec
out
cmp
xchg
and
mov
cmp
pop
mov
or
inc
xor
sub
leave
jo
icebp
sahf
mov
cmpsl
test
jne
mov
aaa
lock
sub
cld
jne
notl
or
cltd
xor
mov
adc
inc
hlt
stos
loope
add
adc
std
cmp
sarl
stos
inc
stos
nop
mov
sub
jb
add
adcl
clc
mov
call
sbb
rolb
outsl
jo
pop
enter
mov
mov
sbb
clc
cld
rol
xor
out
cmpsb
or
jno
lods
push
rcll
pop
pop
jg
insb
or
aad
mov
jl
mov
xor
push
or
repz
lds
sub
mov
pop
dec
sbb
push
lahf
push
cs
push
jge
and
test
jl
das
hlt
push
adcl
gs
jnp
mov
cwtl
mov
push
inc
cmp
or
jo
push
fdivp
xchg
ljmp
mov
xchg
cmp
inc
xor
sub
pop
sbb
jl
and
push
push
and
mov
mov
sub
int3
dec
adc
in
or
int3
lcall
inc
sub
gs
enter
xor
pop
pop
popf
mov
outsl
arpl
mov
loop
inc
repnz
mov
into
or
mov
pushf
f2xm1
mov
sbb
add
jnp
inc
lea
mov
cmp
out
or
mov
or
scas
dec
lea
xor
sarl
xchg
inc
mov
call
fdivl
adc
dec
aam
push
and
pop
adc
into
lds
stos
ljmp
xlat
je
mov
push
cmp
mov
pop
stos
and
or
out
fistps
pushf
pop
jecxz
xor
mov
cwtl
lret
and
or
mov
xor
les
mov
fidivrl
xor
shlb
mov
fs
cmp
mov
in
mov
cmp
out
pop
mov
das
lahf
cmp
add
and
cmc
test
mov
mov
lock
dec
mov
fdivrs
and
inc
sbb
pop
add
int3
mov
sbb
mov
xchg
sbb
cmp
js
stc
or
out
xchg
and
fsubr
fdivs
xlat
xchg
pop
pop
dec
mov
push
push
les
sub
and
inc
dec
nop
adc
pop
jge
aad
xor
xchg
adc
in
insb
sbb
imul
fistl
clc
sbb
das
jb
jecxz
and
mov
xorl
push
cmp
mov
shlb
mov
dec
and
mov
add
scas
addr16
push
aas
mov
test
sarb
push
ret
jmp
adc
cmp
or
xlat
dec
imull
cld
jle
jns
fstpl
outsl
fldcw
mov
nop
mov
or
fstpl
fyl2x
pop
popa
mov
and
push
adc
mov
lock
cwtl
lcall
cmp
and
dec
aam
gs
pop
icebp
xchg
mov
mov
loop
push
fistps
xor
mov
cmpl
sbb
div
push
or
rdpmc
jle
sbb
adc
jbe
mov
push
out
loop
xchg
test
scas
mov
mov
xchg
sub
mov
lret
mov
jg,pn
nop
cmpsb
xor
dec
cli
mov
movsl
xor
icebp
mov
fsubrl
test
pusha
loop
pop
mov
add
cwtl
mov
mov
add
cmp
xlat
mov
dec
cmpsb
cmp
xor
jecxz
dec
mov
scas
adc
xchg
push
mov
mov
pop
scas
enter
fstpl
sbb
and
insb
cmp
mov
jl
inc
shll
dec
mov
xor
mov
call
mov
mov
and
leave
sub
jg
out
fldenv
sti
xchg
sbb
test
stos
negl
xor
mov
xor
mov
jno
aaa
ss
push
add
push
jp
pop
dec
sbb
push
orb
adc
cmc
or
enter
fisttps
scas
push
mov
cmp
sub
jno
stc
jno
inc
xchg
mov
fstl
dec
inc
fmuls
mov
aas
aad
xchg
jne
clc
cmpsl
popa
ljmp
inc
aaa
inc
out
xchg
aas
sti
sbb
imul
sub
add
mov
dec
data16
inc
mov
int3
in
jb
inc
daa
fistl
leave
push
mov
loopne
xchg
pop
out
test
jmp
fisttpl
inc
pop
mov
sub
popf
cmp
cmp
and
pop
jne
lret
dec
xchg
scas
xor
or
and
in
in
pop
jmp
inc
jge
inc
cs
jecxz
push
in
sar
jmp
leave
inc
dec
sbb
aam
daa
aad
enter
je
mov
pop
pop
lahf
stos
inc
push
scas
dec
and
xchg
loop
shr
push
test
in
adc
test
xchg
js
xchg
cwtl
mov
sbb
adc
adc
test
fcomip
xchg
pop
add
stc
and
call
inc
les
stc
int3
cwtl
ljmp
mov
mov
lcall
lock
imul
sarl
xchg
ja
sahf
inc
inc
dec
add
xchg
out
sbb
nop
inc
aam
pop
out
in
jne
insl
add
jle
andl
pop
xor
out
leave
inc
fxtract
mov
xor
xor
inc
cmpsb
xor
lahf
leave
add
mov
bndldx
dec
push
ja
sub
cmp
or
pop
shl
sub
push
shlb
pop
mov
daa
xor
out
int3
pop
fists
xor
pop
add
aaa
dec
test
cmpsl
xchg
mov
or
jnp
adc
cmpsl
xchg
xorb
push
ret
or
aaa
aaa
lcall
push
xor
icebp
pop
testl
sbb
xchg
fsubrl
aam
lods
in
out
into
dec
mov
add
sahf
bound
iret
dec
stos
xchg
push
inc
and
out
adc
mov
mov
das
cmp
xlat
dec
jecxz
cmpl
call
jb
lods
mov
jo
fsubr
mov
sub
int
mov
fcmove
cld
sub
jno
aad
sahf
xchg
mov
pop
dec
lods
push
pop
std
iret
and
sbb
adc
push
popa
mov
scas
sub
int3
das
nop
sbb
mov
in
push
movsl
jne
sbb
in
fisubs
fs
dec
mov
subl
add
imul
adc
cmp
mov
jge
xchg
mov
add
es
cmp
mov
adc
dec
fbstp
jg
adc
imulb
loop
les
stos
add
jecxz
insl
nop
xor
xchg
es
aaa
push
cmc
loopne
incb
stc
sub
dec
push
fdiv
mov
inc
xchg
jns
loop
clc
inc
push
aas
xchg
mov
ss
xchg
cmpl
inc
add
mov
rcll
int3
fimull
das
xchg
inc
dec
push
cmp
dec
mov
mov
cld
dec
jl
mov
pop
mov
or
aad
shlb
aaa
arpl
and
pop
pop
cmpsb
sub
and
or
ret
bound
inc
add
icebp
test
enter
jns
jae
outsl
jbe
or
imul
mov
scas
mov
and
sbb
jg
mov
push
cwtl
fs
fmuls
cltd
dec
insb
les
sub
insl
dec
push
push
pop
push
and
mov
add
pop
jmp
int3
daa
or
xchg
xor
inc
and
mov
jge
repz
outsl
lret
cmp
arpl
jae
cmp
pop
ss
jo
in
pusha
jnp
pop
call
rolb
aas
inc
les
pop
fistpll
push
adc
test
inc
adc
out
push
sbb
adc
das
cmp
mov
mov
aam
sub
sbb
mov
adc
imul
lock
into
fidivrl
in
push
push
call
adc
inc
pop
mov
inc
dec
cmp
pop
gs
icebp
push
ss
pop
sti
imul
cmp
fnstcw
repnz
fdivs
shlb
sahf
xchg
ja
repnz
and
outsb
pop
repnz
idivl
or
mov
adc
xchg
inc
addr16
orl
in
jb
adc
pushf
lods
test
mov
jge
imul
cmp
mov
sub
pusha
sbb
pop
push
sub
xchg
insb
mov
push
add
xor
mov
jns
cmp
sub
add
push
xlat
rclb
stc
pop
push
inc
sarb
loope
les
in
addr16
adc
int
mov
jp
sti
ds
mov
mov
ss
push
add
scas
mov
ja
js
outsl
mov
inc
mov
mov
fsubrl
mov
xchg
fdivs
pop
roll
xor
pop
or
pop
icebp
repz
sahf
stc
xchg
daa
aas
and
popa
es
xor
lret
ret
sub
mov
push
imul
xchg
mov
inc
testl
and
addr16
out
sub
cmp
rcll
jecxz
mov
ds
pusha
shll
pop
sarb
mov
sub
add
pop
inc
repz
dec
mov
das
je
leave
sbb
ret
dec
sub
ret
pop
inc
jne
std
and
test
ja
inc
inc
push
mov
test
fs
xchg
xor
cmp
dec
cmp
iret
cmc
xor
adc
sub
mov
mov
xchg
sub
das
lock
cmpsl
imul
xlat
cltd
mov
lcall
test
and
xchg
gs
or
push
xchg
xor
mov
scas
out
inc
adc
and
fistps
or
sti
aaa
cld
and
push
push
leave
scas
negb
mov
mov
jecxz
sub
sti
scas
jns
cld
jg
and
jge
and
cmp
sbb
push
lds
pop
jge
es
insb
pushf
xchg
std
pop
cmp
fsubrp
or
dec
sub
dec
rorl
xchg
loope
mov
inc
test
int3
add
dec
and
xchg
cmp
cmp
stos
fisubrs
or
dec
add
bound
bound
jl
pop
nop
sbb
sub
mov
or
xchg
imul
xchg
mov
scas
ret
pop
cmp
jmp
jo
sarb
jno
lods
xor
push
mov
rcrl
mov
mov
add
fisttpll
jns
lds
popa
jns
cmp
push
add
xchg
sti
mov
pop
lahf
adc
push
push
call
mov
cmpsb
pop
xor
aam
insl
jl
adc
mov
inc
adcb
cmpsb
popf
into
lods
lock
outsb
push
cwtl
pop
push
ret
shl
movsl
and
adc
or
in
jl
pop
push
repnz
dec
mov
inc
shrb
into
pop
sbb
scas
inc
jne
mov
cmp
pop
shrl
xchg
cwtl
enter
xchg
lods
fidivrl
movsb
call
jb
pop
add
jnp
lock
shlb
dec
inc
mov
ds
pop
mov
aam
gs
jl
push
sbb
inc
incb
sti
ljmp
jmp
test
mov
jae
jp
sbb
mov
imul
ret
xchg
fnsave
test
cli
pop
mov
jl
scas
xchg
mov
stos
sbb
pop
dec
or
push
mov
js
mov
mov
les
inc
and
push
push
in
daa
or
cwtl
push
insb
aad
insl
nop
xor
push
jmp
xor
test
call
dec
adc
mov
bound
clc
mov
adc
sbb
sbb
and
repnz
jl
mov
ss
int3
sbb
dec
pop
into
iret
je
dec
xlat
jb
out
dec
mov
jo
ja
aas
lods
mov
call
lods
scas
in
pop
aas
push
push
xor
ja
shll
cmp
and
lods
add
std
pop
mov
faddl
sarb
shlb
pop
rcl
mov
imul
inc
cmpsb
sbb
push
and
data16
aad
push
dec
inc
fists
scas
adc
mov
fcompl
pop
fidivrs
das
rorw
and
test
mov
dec
mov
jnp
leave
mov
jns
sub
mov
xor
xor
mov
push
fidivs
sub
es
in
jmp
add
insl
daa
and
leave
pushf
push
std
mov
mov
jg
sbb
mov
xchg
rcr
ljmp
loopne
ss
outsl
or
in
cmp
int
and
nop
xor
int3
jecxz
shr
and
push
xor
sbb
mov
push
xchg
xchg
xor
leave
data16
shr
sub
mov
adc
xchg
cmc
inc
dec
mov
popa
dec
xor
sub
xor
push
stc
mov
jns
fs
out
lret
pushf
and
icebp
lock
mov
notb
inc
rclb
pop
inc
xchg
arpl
jmp
or
xchg
out
xchg
sahf
pushf
int3
cmp
cmp
lods
test
sahf
cltd
stos
test
mov
insb
xor
out
push
push
or
add
gs
dec
aad
test
push
cmp
and
std
cmp
mov
fistpl
xchg
icebp
cmpsb
es
jg
jp
add
scas
pop
popa
pop
and
fcoml
out
mov
add
jno
mov
sub
jmp
mov
scas
push
mov
int3
ss
dec
or
inc
jne
lret
imul
fadds
les
movsl
jbe
ds
pusha
sti
push
mov
lret
or
aad
stos
xor
and
enter
lret
xor
fistpll
xlat
loope
or
inc
or
int3
jl
int
pop
mov
adc
dec
cmp
add
xor
or
or
ret
push
jle
mov
mov
xchg
arpl
adc
and
cmp
xor
ja
add
sbb
xchg
testl
and
push
sbb
fildl
arpl
cwtl
or
sti
xlat
sub
mov
out
in
iret
ss
mov
rcl
inc
push
xorl
dec
popf
mov
pop
and
es
sbb
sbb
adc
or
in
test
push
inc
jecxz
adc
lret
daa
fwait
cld
cmpsb
test
and
fsubrp
jmp
lods
inc
cs
repnz
test
mov
nop
xchg
add
jns
and
repnz
call
addr16
jmp
loop
and
or
enter
mov
aad
int
inc
shl
xor
push
rorl
push
mov
dec
std
cltd
xchg
inc
cmpsw
pop
pop
lret
jae
lock
add
out
add
and
inc
cli
sbb
scas
push
idiv
call
lods
sub
sbb
jmp
out
jp
add
xchg
lcall
push
dec
in
hlt
xlat
fcomps
xor
xchg
fdivrp
popf
cmp
adc
and
cmpsb
stos
je
ja
mov
hlt
mov
or
push
add
xchg
into
pop
add
mov
pop
insl
or
cs
rcll
inc
and
and
pmaxub
cld
and
dec
hlt
popa
dec
mov
outsb
add
in
loope
shll
movsb
call
mov
lcall
mov
mov
in
dec
inc
popa
mov
fxch
add
cmp
dec
mov
dec
inc
pop
mov
push
ret
jecxz
inc
inc
lods
cld
xchg
test
cmp
mov
mov
push
mov
pop
insl
out
ljmp
loope
popf
movsl
jno
pop
dec
stc
and
adc
inc
aad
push
stos
js
push
bound
cmpsb
ret
push
jae
mov
cmpsl
jmp
adc
sub
test
dec
loop
and
cltd
std
into
cwtl
sbb
or
add
bound
push
jae
jae
out
sub
aad
icebp
cmp
sub
sbb
jns
jmp
lds
xchg
std
push
jb
xor
nop
in
cmp
daa
jp
int
xor
movsb
insb
test
notb
lahf
sbb
daa
inc
adc
jns
mov
or
cmp
mov
fidivrl
in
rclb
xchg
pusha
orl
loopne
mov
int
mov
out
test
or
rcl
cmpsl
mov
insb
xor
mov
stos
pop
fs
lret
push
inc
add
adc
mov
popf
mov
dec
xchg
popa
lods
mov
xadd
sbb
sbb
cmp
push
hlt
rcll
test
cltd
mov
jns
inc
rcrl
test
popa
xor
fisubrl
fxch
iret
xor
mov
int3
jns
out
push
add
ffree
adc
add
pop
daa
hlt
inc
cmp
cs
pop
jmp
push
adc
in
xchg
xchg
in
xchg
test
les
push
lods
lret
std
in
xlat
cwtl
xor
or
mov
jbe
test
int3
jmp
mov
jbe
adc
out
cmp
push
data16
jmp
and
xchg
and
std
pop
inc
shll
and
push
fmul
sub
addb
lods
arpl
out
pop
pop
and
in
cwtl
aaa
xchg
mov
inc
repz
clc
jp
sbb
mov
lret
fisubs
cltd
neg
out
and
ljmp
fldcw
pop
and
xchg
inc
dec
pop
scas
dec
dec
xor
push
adc
rcr
je
imul
mov
lret
lret
mov
sub
fsubl
xchg
adc
xor
lock
and
push
fwait
sub
dec
sbb
shll
loopne
push
dec
adc
sbb
adc
dec
popf
vpshld
subl
xchg
fwait
or
insl
cmp
ja
xlat
mov
mov
ret
push
mov
aam
or
addb
xchg
incb
iret
jmp
push
loop
fxch
inc
and
cmp
pop
and
pop
cmp
mov
pop
out
mov
adc
mov
adc
test
mov
mov
cld
testl
andl
mov
jnp
pop
sbb
mov
shlb
inc
sti
stc
mov
aas
icebp
fisubrs
out
or
scas
cmc
add
sbb
push
out
xchg
pop
btc
loope
mov
pop
push
imul
stos
out
lahf
fldl
lods
add
pusha
dec
call
pop
ret
popf
rclb
xacquire
push
fldcw
out
rcl
mov
dec
xor
in
mov
into
sub
lret
inc
mov
ja
imul
inc
sub
xchg
aas
lods
lcall
add
ljmp
in
pop
pop
repnz
fld
fcomps
dec
jge
push
inc
hlt
mov
ret
imul
aam
cmc
jmp
mov
dec
xlat
repz
pop
fcmovnbe
cmp
loopne
nop
or
jnp
add
cmp
lds
sbb
test
mov
rcl
movsb
mov
add
lret
xchg
stos
imul
shlb
adc
adc
or
sti
test
inc
cmp
or
cmpl
push
cwtl
jmp
lret
scas
mov
test
loopne
push
jmp
push
out
or
mov
mov
mov
fisttps
lret
fadds
mov
inc
xchg
xlat
mov
movsl
sub
lcall
pop
scas
mov
in
mov
adc
xchg
or
mov
out
mov
out
imul
xchg
cmp
out
and
ja
push
addb
imul
xchg
std
cmpsb
add
scas
out
and
cmpb
in
mov
push
sahf
mov
out
inc
out
outsl
dec
xor
mov
iret
stos
cmp
jmp
out
or
addr16
pop
inc
pop
or
addr16
mov
sub
pop
xchg
std
sub
les
js
div
fucomp
mov
repnz
mov
subb
scas
dec
out
xor
xchg
fisubl
scas
xor
mov
cwtl
mov
je
and
inc
jbe
jns
dec
or
jo
cli
mov
in
xchg
sbb
mov
or
test
sbb
mov
or
fwait
mov
aad
outsl
push
inc
test
dec
pop
out
rcr
pop
mov
push
add
rclb
aas
ds
cmp
push
mov
inc
sub
or
jl
sahf
fidivl
test
inc
lds
inc
pusha
ret
cmp
mov
or
fdivrs
adc
fwait
imul
xchg
mov
xlat
rorb
xor
and
pop
scas
mov
inc
inc
mov
jno
lea
inc
mov
xor
cmpsl
jnp
lcall
in
cltd
sbb
mov
ret
adc
xchg
arpl
pusha
sub
mov
mov
xor
inc
push
or
ds
fldl
sbbl
out
out
sarb
xor
cld
add
rcrl
sbb
ja
addb
inc
lea
sahf
stos
mov
push
mov
daa
jb
out
pushf
adc
nop
xor
ret
int
rcll
push
mov
js
addr16
adc
xlat
ficompl
data16
push
add
or
pushf
lds
mov
dec
dec
shrl
dec
mov
cmc
je
xor
cmpl
sarb
and
sbb
cmp
aaa
sahf
mull
xchg
leave
fdivp
sub
adc
xchg
pop
xor
push
xchg
aad
xor
pop
fnstenv
push
add
aam
jo
and
cmp
inc
pop
sti
sub
rcrl
or
sbb
inc
fsubl
xor
sbb
add
js
hlt
or
cwtl
pop
xlat
dec
enter
scas
ds
outsl
sub
jl
shrb
outsl
test
lret
cmp
popa
sub
cmp
lods
jae
sahf
stos
sbb
ret
pop
jecxz
mov
push
addr16
sahf
nop
ror
or
loope
push
fcoml
rorb
iret
xchg
fidivrs
adc
xor
pusha
scas
lds
clc
cmp
pop
or
mov
fwait
mov
repnz
icebp
sub
out
push
inc
daa
mov
pop
dec
ficompl
stos
add
daa
sbb
js
popa
gs
and
lcall
loope
idiv
mov
lret
lret
cmp
jne
loope
dec
jo
push
inc
inc
mov
test
xchg
aas
mov
pop
dec
pop
aad
mov
mov
ja
push
jno
cmp
addr16
or
add
int
repnz
pop
xor
sar
cli
mov
test
pop
popa
ljmp
or
push
mov
daa
sub
fcmovnu
add
leave
js
pushf
xchg
and
mov
cld
xchg
insb
loopne
mov
dec
mov
in
jmp
inc
scas
fcoms
std
dec
cmpsb
mov
mov
mov
movsw
lahf
adc
pusha
pop
hlt
pop
fidivs
lcall
push
andl
fsubrs
dec
mov
in
imul
mov
mov
jae
enter
jne
notl
ret
cmpsl
icebp
push
negl
repnz
jge
xchg
xor
adc
and
addr16
fistps
mov
decb
mov
sbb
repnz
xrelease
or
aas
fldt
out
lods
mov
jno
pop
fcmovu
jbe
sarb
add
add
mov
jae
test
mov
mov
xor
movsb
inc
pop
mulb
cmp
lods
daa
sub
fwait
sub
int3
ja
dec
aad
push
mov
mov
add
mov
movsb
dec
mov
pop
lahf
ds
rol
xchg
jns
xor
movsb
mov
cmp
leave
ljmp
leave
adc
repz
inc
push
movl
mov
push
js
dec
imul
ror
cld
test
and
and
decl
dec
ja
dec
inc
pop
jl
cmp
nop
nop
push
push
fptan
cmc
mov
out
repnz
push
je
int
inc
mov
movsl
sbb
and
mulb
test
add
push
fsubrl
mov
cmp
lcall
lea
xor
jl
or
js
in
clc
and
cwtl
adc
fs
sbb
das
adc
mov
add
mov
fs
pop
push
loop
stc
inc
jb
dec
cmp
shrl
pop
outsb
push
rcll
repz
lock
mov
fsubrs
test
cmp
divl
clc
clc
inc
stos
nop
cwtl
and
ret
ficomps
mov
aam
dec
push
lods
sub
or
sub
lea
mov
xor
ss
jnp
dec
and
rolb
stos
mov
add
bound
sti
dec
out
pop
mov
dec
popf
sub
mov
pop
sub
mov
mov
fabs
movb
mov
lret
movsb
jns
fs
adc
pop
divb
repz
vcvtsi2sdl
in
ja
sub
sarl
into
out
rep
add
subb
cmpsb
out
mov
mov
push
add
in
roll
xor
push
gs
sub
sbb
inc
loop
mov
outsl
movsl
aas
cmp
sub
je
xchg
popa
jmp
fisttps
jle
mull
lahf
fwait
std
icebp
aad
outsb
je
sbbb
sub
sub
jecxz
cmpsl
mov
cmp
ss
in
popfw
xchg
loop
jo
adc
arpl
js
mov
out
icebp
movsl
in
xchg
loope
or
loopne
xchg
cmp
dec
and
outsb
ret
mov
shlb
dec
mov
pop
fwait
dec
pushw
inc
fsubrs
scas
scas
xchg
lods
adc
adc
jno
out
ljmp
bound
cmc
jae
xlat
xor
in
testl
roll
outsb
mov
inc
xor
mov
fisubs
xchg
mov
test
fst
mov
mov
and
gs
or
jnp
mov
add
xchg
lcall
xor
pop
xlat
jmp
repnz
jne
inc
in
mov
push
out
inc
sbb
mov
shrl
repz
pop
push
or
jl
and
jmp
scas
sbb
adc
les
fcoml
mov
lods
ret
repnz
push
or
adc
movsb
or
sub
pop
cmpl
sub
test
in
sub
clc
xor
cmp
add
xchg
push
xor
xchg
clc
push
sbb
dec
and
or
xlat
push
mov
aaa
int
add
jle
sub
cmp
mov
fidivs
mov
xchg
cltd
in
jle
out
mov
pop
mov
jg
lods
pop
xchg
push
sub
je
fisubl
mov
jl
mov
sub
jo
dec
loopne
cvtps2pi
cmp
ja
sbb
int
jne
or
fcoms
push
dec
mov
insb
jno
mov
outsl
scas
adc
dec
test
mov
push
es
cmp
push
lea
iret
mov
or
fcompl
pop
and
ret
cmp
mov
sbb
push
adc
dec
push
clc
andl
mov
negb
iret
inc
xchg
sub
xor
lock
test
cwtl
xchg
int3
dec
hlt
xchg
enter
adc
mov
fisubrl
inc
lahf
xor
jge
lahf
cmp
lock
pop
mov
mov
out
and
lahf
andb
fmul
or
popf
xor
mov
mov
jle
mov
xlat
fadd
lcall
hlt
inc
and
or
addr16
jmp
or
lahf
cs
xchg
sbb
xor
mov
mov
daa
jo
test
jmp
add
dec
add
inc
mov
leave
xchg
gs
pop
xor
shll
jle
push
bound
sbb
ss
push
jae
les
ret
dec
dec
xchg
inc
mov
adc
insl
mov
pop
sub
mov
sub
gs
xor
lock
cmpsl
xchg
lock
pop
mov
loope
mov
aad
pushf
mov
push
filds
push
imul
xchg
ja
test
loop
lret
out
movsb
or
pushf
fbstp
add
in
outsl
xlat
outsl
add
jb
pop
lods
rcrl
jl
movsl
nop
jo
push
push
popa
jl
std
test
fldcw
pushf
cmp
mov
and
jmp
aas
icebp
mov
pop
nop
mov
loop
aad
mov
mov
inc
push
arpl
popf
inc
xchg
cmp
cld
js
cwtl
jg
ficomps
ja
fstpt
mov
mov
inc
lods
push
std
push
stos
jno
add
pushf
xchg
xchg
ficomps
inc
inc
push
or
add
pandn
mov
enter
lret
repnz
mov
push
bound
addb
and
mov
fidivrs
xchg
jge
mov
mov
xchg
shll
movzwl
and
sti
sub
dec
stc
jnp
jo
add
xlat
cwtl
in
mov
pop
iret
test
jns
jge
xchg
mov
mov
mov
or
xchg
outsl
pop
dec
in
pushf
int3
sbb
adc
xchg
pop
mov
mov
xchg
sarb
fstpt
out
xor
mov
dec
nop
push
test
cmp
dec
in
or
push
lock
lret
test
or
inc
or
jecxz
push
jb
jb
int
or
test
push
pop
or
push
dec
push
add
loopne
push
imul
test
rcrb
scas
ds
mov
mov
loope
jno
lock
mov
and
lock
loop
hlt
push
in
and
mov
repnz
loop
add
pusha
mov
pop
and
mov
subb
rcll
sub
insb
pushf
jg
testl
jecxz
add
pop
ljmp
daa
jo
insb
das
push
sub
push
jno
pusha
loope
call
push
in
aas
mov
cmp
xchg
es
jb
push
mov
imul
ret
arpl
adc
out
and
inc
lock
mov
cmp
movsb
xor
adc
or
pop
mov
mov
jno
adc
mov
out
adc
lea
cwtl
movsb
cmp
pusha
scas
dec
jae
xor
out
inc
lret
enter
mov
xchg
mov
push
stc
sarb
mov
xchg
or
and
xor
jge
orl
std
int3
roll
jmp
mov
fcmovb
ss
mov
mov
mov
fisubrl
jns
mov
shrb
mov
mov
dec
mov
sbb
scas
pop
jns
mov
lcall
int
mov
sub
mov
sbb
popf
push
and
stos
mov
pop
xchg
xchg
cmp
mov
test
or
stos
je
ret
adc
add
push
fs
and
inc
arpl
mov
add
insb
sbb
rolb
mov
shlb
lret
mov
jg
mov
loope
fadds
fmul
repnz
movsl
mov
pop
std
loope
in
mov
inc
repnz
mov
mov
lods
xlat
fisttpl
outsb
lahf
sub
cs
dec
jl
mov
mov
jbe
mov
xor
or
xchg
dec
xor
hlt
dec
cmp
cld
ret
stc
in
sahf
mov
ret
test
lods
jo
inc
jo
xchg
jle
jg,pt
repnz
sbb
div
lret
popa
repnz
shll
nop
cmpsb
cli
sub
mov
adc
shr
in
push
fnsave
push
lret
push
data16
xor
inc
out
in
pop
mov
pop
incl
and
in
pop
sub
mov
int3
sub
jmp
cmpsb
test
les
add
scas
rorb
sbb
xor
sbb
mov
out
cs
xchg
xchg
imul
mov
sbb
test
add
mov
add
mov
pushf
rorl
in
pop
cmp
out
mov
cmp
lods
dec
popa
inc
xchg
fiaddl
mov
xor
repz
test
subb
inc
add
or
into
lods
mov
add
push
mov
mov
mov
mov
push
add
lret
je
jmp
sbb
jecxz
dec
pop
or
sbb
pushf
dec
lods
jmp
lret
shl
mov
xor
sbb
insb
push
lret
outsb
insl
aas
add
jns
jno
add
stos
rcr
cmp
xchg
shrl
sbb
jnp
rol
inc
leave
iret
jmp
dec
cld
inc
jg
fisubs
xchg
ficoml
pop
iret
rcr
ja
xor
dec
xor
shl
cltd
push
sbb
xchg
daa
stc
cltd
push
mov
je
outsl
jmp
mov
and
fidivrl
push
setg
sar
pop
pop
addr16
inc
jbe
jne
push
rol
pushf
push
stc
call
lret
loopne
jne,pt
das
pop
mov
test
std
fdivrp
mov
das
xchg
fidivrl
aam
je
addr16
imul
add
mov
or
es
into
xchg
push
or
testb
lea
sub
dec
push
push
int3
insl
pop
push
mov
add
lret
sub
mov
in
jg
push
mov
int
mov
adc
sbb
lahf
cmpsb
inc
cli
scas
sub
pop
jge
push
cmp
adc
icebp
fsubl
cmp
mov
mov
add
jns
lods
sbb
dec
dec
mov
data16
add
xchg
xchg
jns
jle
adc
dec
mov
loope
mov
out
shll
iret
mov
lock
mov
mov
mov
scas
mov
les
movsl
or
jbe
int
lahf
pop
ja
xchg
inc
dec
orb
lcall
xor
lcall
push
fsubl
mov
cmpsl
mov
lret
sub
js
mov
and
mov
rcrl
xchg
inc
xchg
pusha
dec
out
push
or
xor
mov
adc
add
movsb
shlb
mov
icebp
push
mov
xor
rcrb
mul
in
lea
mov
push
jp
sub
jae
es
roll
mov
add
mov
cmc
mov
mov
mov
sbb
xchg
adc
repz
lods
stc
es
xchg
jmp
xor
insl
imul
sti
xor
test
insb
ss
cltd
or
pop
ss
inc
movsb
push
sarb
dec
and
sahf
flds
outsl
or
rcr
in
ror
mov
push
enter
push
mov
dec
mov
loope
push
icebp
xor
icebp
inc
sbb
xchg
push
mov
scas
sub
cmpsl
pop
add
mov
gs
jg
and
mov
or
cli
rorb
mov
xchg
xchg
push
inc
imul
mov
lea
aad
ret
loopne
fwait
das
stc
icebp
pop
push
push
cmp
sbb
daa
pop
mov
fwait
pusha
cwtl
inc
cmp
inc
add
dec
push
jnp
loop
nop
stos
lds
insl
movsl
shr
call
movsb
mov
inc
dec
pusha
cmpsb
adc
xchg
xorl
fwait
mov
adc
push
or
jp
pushf
aaa
shl
in
pop
repz
mov
hlt
push
dec
mov
sub
out
ss
mov
xor
xchg
mov
cmp
adc
jge
lds
dec
sub
adc
pop
ret
mov
push
lds
cmpsl
inc
mov
testl
shlb
mov
shrb
sbb
xor
jo
and
out
xchg
divl
jo
popl
mov
jge
jl
clc
cmp
jle
xchg
add
and
or
fs
and
sarb
pop
aad
das
loopne
out
pop
mov
sub
dec
outsl
sbb
sahf
cmpsl
pop
adc
dec
fst
int
xchg
push
ss
cmc
push
jnp
stos
sbb
cmc
xchg
aad
sti
mov
pushf
jle
frstor
pushf
xchg
inc
add
in
popa
xor
xor
dec
mov
ret
pushf
or
xchg
ja,pt
cmp
stc
in
std
std
fsubl
mov
cmp
jmp
out
jne
push
pop
cmp
sti
mov
lret
push
enter
stos
lock
dec
adc
or
pop
push
aaa
mov
hlt
nop
jno
and
test
popf
sbb
mov
lea
inc
fwait
mov
in
xchg
in
ds
adc
es
outsb
mov
cld
cli
ret
clc
aam
jl
jae
xchg
push
mov
testb
jp
pop
cmp
bound
cld
jge
adc
out
cmp
push
xchg
push
mov
push
mov
xchg
sti
in
pop
pop
xchg
test
aas
xor
or
xchg
aaa
std
xchg
inc
add
mov
stc
push
or
pop
sub
push
add
xor
loop
bound
dec
popf
fcoml
rorl
notb
movsl
daa
inc
push
or
data16
or
shlb
sbb
inc
dec
adc
mov
testl
cmp
xchg
sub
push
cmp
popa
mov
xor
lret
pop
scas
inc
add
daa
dec
dec
lea
stc
inc
adc
icebp
or
scas
mov
xchg
mov
sti
sub
sarl
pop
jge
xchg
sub
mov
in
and
rcll
xorl
xor
xorb
cmp
dec
enter
aas
rcl
insb
xlat
in
mov
xchg
pop
jno
ds
lods
xchg
scas
and
ss
frstor
ss
pop
ds
push
cwtl
pop
rcrb
adc
sbb
out
pop
repnz
punpckhwd
mov
mov
imul
jge
mov
pop
mov
mov
pop
lcall
mov
jg
mov
pop
push
inc
and
testl
jbe
xor
jg
push
push
xchg
int
dec
dec
sahf
js
adc
xchg
imul
mov
jge
repz
jne
mov
mov
stc
pop
sbb
mov
lcall
imulb
push
imul
sbb
xchg
cmp
jl
xor
xchg
xchg
and
push
or
push
mov
lods
das
sub
or
push
mov
bound
cs
jecxz
cmp
jg
repnz
jo
pop
adc
stos
push
scas
aad
xor
aaa
add
add
pop
les
and
pop
adc
or
pop
lods
lret
je
es
xor
leave
adcl
repz
repz
pushf
and
jmp
sub
inc
jl
lods
test
rorb
push
jl
push
inc
sbb
daa
xchg
jo
movsb
xchg
ret
push
and
mov
dec
push
fstpt
sbb
out
js
lret
lret
pusha
lret
rorb
lahf
inc
sbb
nop
je
in
pusha
adc
inc
test
mov
mov
push
nop
lods
mov
pop
fstpl
xor
es
mov
les
xor
pop
dec
repnz
stos
adc
imul
jnp
loopne
mov
cs
popa
imul
xor
aaa
sub
inc
sti
imul
xchg
mov
pop
je
ljmp
roll
cmp
in
xchg
sahf
sbb
mov
pop
lea
hlt
scas
in
jno
push
cld
pop
add
cmp
xor
fsubl
fdivs
sahf
xor
lret
test
divps
lea
push
cmp
add
sti
in
jp
dec
dec
add
xlat
mov
dec
int
push
sub
imul
ss
mov
nop
movsb
pushf
pop
add
mov
xchg
push
or
loope
push
scas
cld
fwait
dec
cmp
mulb
pop
pusha
push
jne
cwtl
lods
dec
fmull
inc
enter
jmp
pusha
mov
and
mov
pop
sub
pop
mov
jmp
jno
in
fcomip
push
setp
cmp
dec
dec
das
int
into
or
xor
loope
in
das
cmp
inc
cs
xor
mov
hlt
lcall
loop
movsb
cwtl
adc
or
ss
aad
scas
mov
dec
dec
push
insb
mov
mov
add
adc
pop
xlat
out
sbb
test
adc
movsb
cmp
jp
lock
sub
out
shll
adc
leave
pop
mov
stos
aad
pop
and
test
lock
jmp
lcall
pop
inc
mov
cmp
les
orl
xlat
jp
bswap
push
pushf
test
add
jg
mov
or
sbb
fucomp
push
xlat
pop
push
inc
rcrl
jmp
icebp
xchg
repz
pop
loop
mov
push
cmp
xchg
inc
sub
fidivs
cmpsl
pop
mov
call
pop
pop
lret
loope
xor
sti
mov
add
sub
daa
xchg
popa
sti
pop
add
lret
dec
adc
push
sarl
sbb
inc
cmp
or
lock
fucomp
push
ss
in
out
xor
sbb
out
mov
test
push
pushf
pop
mov
jbe
or
fs
xchg
fisttpl
gs
and
arpl
sub
sbb
out
adcl
ljmp
xor
pop
inc
dec
scas
scas
leave
inc
clc
and
sub
inc
inc
jecxz
jne
sti
hlt
mov
std
pop
in
leave
test
loope
negb
adc
push
xchg
nop
dec
into
cmp
or
cmp
sti
xor
dec
jns
or
mov
lods
fimull
ret
pop
inc
je
jmp
stos
lahf
clc
ret
scas
and
ljmp
lahf
or
xchg
xchg
loop
fidivrl
negl
dec
pop
push
mov
js
sti
adc
cmpl
adc
inc
push
push
lret
iret
or
inc
lret
scas
imul
pop
test
je
xlat
lds
out
or
cmp
jecxz
dec
iret
pusha
mulb
in
mov
andl
cwtl
cmp
out
bound
lods
cwtl
orl
and
xchg
xor
jae
dec
xor
insl
lret
pushf
xlat
xor
jmp
enter
inc
pop
push
mov
push
loopne
iret
and
push
or
scas
cltd
loopne
xor
rorl
sbb
lds
sbb
sbb
jmp
dec
lods
and
jbe
push
add
inc
es
jbe
nop
popf
sub
call
mov
sub
fstpl
xchg
cmp
jmp
sahf
int
mov
inc
mov
pop
int3
fdivs
stos
pop
subl
enter
sbb
xchg
pusha
sub
add
sarl
mov
mov
mov
xchg
pushf
and
mov
fildll
stc
cmp
jecxz
cmpsb
add
pop
xchg
imul
cwtl
xchg
sub
adc
outsl
push
and
dec
dec
inc
mov
adc
neg
enter
or
idiv
mov
out
pop
sbb
mov
push
jle
adc
inc
lea
jnp,pn
icebp
jne
pop
je
xchg
push
cmp
outsb
mov
or
mov
stos
aam
ljmp
lahf
pusha
add
ds
push
addr16
add
int
data16
mov
and
test
xor
jp
dec
lcall
push
out
push
fisubrs
movsl
mov
push
or
ret
sbb
jmp
inc
jmp
out
repnz
pop
add
jns
dec
adc
pop
ficomps
imul
sub
mov
jbe
cltd
outsl
fs
outsb
lahf
push
or
into
ds
mov
lahf
ds
fs
fstpt
dec
mov
adc
mov
inc
and
xchg
cmp
push
sbb
mov
pop
arpl
out
mov
out
mov
mov
push
and
imul
jge
inc
jnp
mov
add
jp
out
outsl
cmp
mov
sbb
push
pop
jno
imul
xchg
add
ja
das
adc
ljmp
das
and
jne
xor
outsb
bound
icebp
ret
sub
movsl
stc
sahf
and
jo
inc
xor
and
bound
lahf
shlb
inc
mov
mov
mov
loop
imul
movsb
push
lds
and
cmp
sbb
or
int3
test
lods
jp
data16
cmpl
rcrb
add
ror
insb
fdiv
ds
psubq
dec
roll
adc
mov
adc
jge
test
mov
add
sub
and
adc
jle
push
sahf
push
or
bound
ds
int
inc
fstpt
sti
ljmp
pop
mulb
test
pop
pushl
jle
std
mov
sub
mov
xor
cltd
cmc
subb
and
and
push
mov
fcomp
shlb
mov
push
fstps
das
and
rolb
jmp
or
jb
gs
cli
dec
cs
aas
xchg
pop
sub
jp
mov
int3
sbb
fnsave
pop
xchg
cltd
jns
insb
out
out
scas
roll
jne
pusha
mov
arpl
sbb
or
xor
or
pop
adc
addb
xor
inc
jmp
dec
xchg
adc
sbb
jae
pushf
cmp
push
push
iret
xchg
cmp
pop
xchg
mov
xchg
pop
dec
adc
pop
sahf
jl
sbb
jle
inc
adc
jl
sbb
inc
mov
fsubs
xchg
sarl
mov
nop
mov
iret
mov
test
mov
push
mov
and
out
sbb
int3
jle
cmp
xchg
xchg
je
loop
outsl
mov
dec
mov
rcll
test
lods
pop
push
adc
dec
js
jle
mov
adc
loope
push
jg
pop
adc
add
xor
mov
int
sbb
daa
pop
mov
jno
imul
movsl
lock
rcr
mov
nop
adc
inc
mov
pop
cmc
popa
pop
aas
ficoml
nop
cwtl
jae
sub
in
dec
pop
and
xor
xchg
xor
push
push
js
mov
and
sbb
test
mov
dec
push
sub
inc
inc
push
clc
push
xor
pop
add
xchg
pushf
sbb
push
cs
scas
cmc
in
mov
sahf
les
js
or
aam
je
add
int3
jbe
fwait
mov
dec
jo
mov
adc
fwait
sbb
jnp
iret
ss
jns
or
sbbb
push
adcb
hlt
or
call
in
repz
sahf
adc
cltd
xchg
push
xor
pop
hlt
icebp
iret
stc
xlat
jb
ret
xor
mov
mov
jnp
je
movswl
in
arpl
and
add
repz
xor
mov
std
fs
sub
pop
cmp
loopne
jae
fsin
pusha
fs
in
push
push
sarl
mov
cmc
cmp
xchg
in
into
loopne
xchg
negl
stc
or
stos
fbstp
and
add
insb
mov
pop
mov
xchg
rcll
call
je
mov
mov
pushf
cmc
jb
imul
mov
scas
test
pop
stos
les
mov
push
xchg
jmp
adc
mov
icebp
jmp
in
push
add
gs
std
test
cmp
out
add
mov
push
jb
push
je
and
and
adcl
fdivrl
out
adc
jae
std
nop
inc
popa
outsl
ss
mov
push
mov
outsb
mov
jns
int3
out
push
jb
and
xor
or
rcrb
dec
lret
popa
hlt
outsl
fildll
sub
das
cmp
jge
std
out
push
out
rclb
ret
test
lahf
mov
sbb
movsl
pop
int
aas
and
jo
xchg
vpmacssdqh
aam
cmp
push
and
sub
cmc
jecxz
cld
add
out
scas
lock
xlat
push
mov
ret
cmp
loop
mov
or
pop
lods
out
sbb
xlat
or
mov
push
mov
cmp
popf
lock
sbb
dec
mov
xchg
and
dec
jnp
push
push
push
jnp
cs
in
xchg
mov
inc
dec
rorb
or
outsb
sub
in
movntq
out
sub
nop
or
popf
xor
jl
cs
scas
cmp
testl
add
in
xor
mov
inc
xor
sti
hlt
lock
test
les
sub
aas
lret
cmp
add
push
or
je
xlat
std
negb
and
fists
cmp
pushf
out
lock
ficompl
xor
pcmpgtd
xlat
pop
and
decl
sub
cmp
test
fimuls
dec
lods
sub
mov
mov
push
adc
push
decb
jbe
arpl
sbb
dec
repnz
lea
cmp
into
push
gs
mov
xchg
cs
inc
xchg
jne
lahf
loope
cwtl
push
movb
xchg
aas
mov
daa
mov
nop
outsb
clc
push
enter
inc
outsb
cmpsl
aad
rorb
mov
fbstp
pop
push
mov
jmp
mov
test
leave
pop
testl
int
push
sbb
repz
lcall
or
gs
lea
cmp
insb
push
mov
imulb
adc
mov
mov
pop
pop
cltd
xor
jecxz
cmpl
pop
out
push
std
lock
push
mov
and
les
or
sbb
aas
movsb
jns
test
hlt
pop
fwait
addb
mov
inc
dec
xor
xor
jnp
repz
jno
xor
into
mov
lret
xchg
dec
xor
sub
sub
icebp
mov
shrl
pop
sbb
cwtl
xor
dec
lret
fdivs
insl
out
cwtl
cwtl
daa
aam
mov
ret
push
lods
fisubl
sbb
sti
push
xor
sbb
imul
cmp
lret
pop
movl
cmp
nop
movsl
vpminub
pop
xor
ret
fidivrs
clc
dec
jns
out
es
push
leave
sub
ja
push
cmc
daa
sub
or
rolb
js
and
jae
fcmovbe
xchg
ror
lahf
cmp
shrl
ljmp
lods
in
xchg
pop
stos
ret
xor
mov
subb
ret
and
cmc
push
dec
pop
add
push
jecxz
jae
aaa
dec
call
push
insl
psubusw
stos
pop
pop
or
add
cmp
out
xchg
adc
inc
push
in
xlat
push
out
int
mov
fs
dec
sub
push
push
jg
jp
int
xor
pop
dec
sub
in
ja
sbb
inc
fdivp
cmp
dec
out
ficomps
popa
mov
pop
loopne
aaa
mov
jnp
mov
fcoms
fcoms
pop
mov
mov
cld
xor
jno
mov
pop
mov
or
jne
push
insb
gs
call
in
xchg
stos
xor
dec
mov
ret
fisttpll
jns
mov
sbb
push
divb
movsb
ja
xor
mov
cltd
jne
add
xchg
sbb
jns
jp
js
ss
ret
add
sub
mov
mov
popa
test
test
and
jg
test
pop
mov
leave
int3
jns
iret
ss
push
pop
stos
cmovbe
inc
das
or
loopne
sub
addr16
or
mov
iret
cmp
scas
stc
movsl
sbb
jno
xlat
push
test
jmp
out
pop
mov
aaa
mov
pop
jae
call
dec
jno
mov
jge
aaa
sti
or
cltd
jne
sub
jae
movsb
dec
cmc
mov
ret
idivb
std
xchg
push
rcrb
test
xchg
das
ret
andb
out
jg
and
push
popf
das
insb
push
and
sbb
and
adc
xor
xchg
pop
sub
mov
enter
mov
in
in
stos
iret
pop
std
movb
push
cmp
inc
and
or
dec
mov
push
pushf
add
cmp
pusha
xchg
xchg
sbb
mov
insb
cmp
in
scas
pop
sub
movsl
mov
bound
loop
cmp
test
and
jae
push
dec
jmp
out
sbb
repnz
push
out
mov
xor
and
in
sbb
mov
or
clc
cwtl
sub
xor
jecxz
ds
ss
mov
stc
int3
jae
push
inc
xlat
imul
xor
sbb
push
jae
pop
gs
inc
cli
fsubrl
push
adc
mov
sbb
jmp
sub
bound
scas
xchg
sarb
mov
push
mov
mov
inc
iret
loop
mov
out
push
pop
jnp
xchg
rorl
mov
outsl
xchg
loope
jl
sub
cltd
add
adc
dec
push
mov
adc
dec
call
iret
sti
roll
std
xchg
sbb
jbe
cmp
adc
push
add
mov
mov
stos
bound
aaa
xorl
push
push
add
pusha
dec
or
mov
inc
into
out
jb
push
or
movsb
repnz
mov
xor
out
push
pushl
jmp
mov
stos
jnp
fwait
inc
ss
push
xor
mov
movl
mov
dec
mov
loopne
add
mov
test
xlat
das
call
sti
inc
data16
dec
loope
imul
jmp
jmp
mov
dec
shll
and
mov
ljmp
fsubrs
nop
or
xor
cmpsl
fistpl
mov
data16
scas
add
cltd
adc
pop
in
imul
loop
mov
js
mov
cmp
push
into
inc
gs
pusha
mov
mov
cmp
into
daa
leave
push
xor
stos
push
ret
xchg
fcompl
popa
push
mov
shl
shlb
jo
and
xor
out
push
jne
xchg
and
cmp
idivl
or
stc
or
xchg
mov
push
lret
dec
lods
pop
push
xchg
xchg
test
jg
xchg
push
mov
jns
push
sub
repz
sub
fwait
insb
cmpb
loop
scas
outsl
scas
adc
adc
push
inc
fnstcw
sbb
add
adc
movsl
xchg
scas
pop
adc
jno
adc
aaa
js
fidivl
mov
into
pop
cmp
sahf
mov
sub
push
push
call
inc
leave
sbb
pushf
cmp
repz
js
cmpsl
sbb
push
xor
enter
adc
xor
mov
pop
inc
sbbb
popl
sbb
sub
push
pop
lock
ljmp
sahf
xlat
das
add
js
pusha
cmpsb
pop
pop
mov
int
xchg
out
pop
or
dec
jg
adc
imul
adc
iret
mov
lock
or
into
push
sahf
xchg
sahf
mov
add
sub
sbb
in
repz
mov
mov
data16
pop
icebp
adc
xchg
inc
out
jge
addb
ret
xchg
shl
xor
adc
stos
mov
test
jl
scas
add
cmc
out
jo
daa
sahf
xchg
pusha
mov
mov
sub
setp
pop
lcall
mov
lret
dec
in
mov
inc
shl
mov
ljmp
out
and
daa
jae
arpl
imul
jle
inc
sbb
xor
cmp
iret
jae
dec
leave
or
arpl
mov
gs
je
jne
decb
cmp
je
pop
dec
mov
push
mov
dec
pushf
mov
out
xor
jo
std
xchg
add
pushf
jle
inc
mov
ljmp
lock
lods
push
sbb
test
cli
push
scas
jne,pt
push
cmp
lea
fwait
xchg
jmp
push
jb
cmpl
subl
pop
inc
loopne
push
insb
mov
and
imul
roll
and
mov
and
pushf
push
in
add
mov
clc
mov
mov
cmpsb
and
fimull
arpl
adc
sti
paddd
push
icebp
jne
push
mov
mov
out
add
outsl
loopw
xor
sub
ffreep
add
push
adc
fs
repnz
in
mov
in
mov
les
push
jecxz
push
mov
scas
cmp
jo
insb
inc
nop
xchg
imull
jo
push
imul
and
call
js
jge
or
shrb
dec
pop
and
mov
in
sub
xchg
mov
fstpt
in
bound
cmpsb
insl
sub
out
aas
cli
ret
push
repnz
dec
cmpsb
test
mov
push
sti
sbb
mov
mov
cmp
push
jle
jno
int
mov
jne
shll
fdivs
dec
xlat
jne
call
mov
sahf
adc
cmpsb
jle
adc
lods
test
lods
lret
test
jp
jmp
xchg
int3
sub
outsb
dec
popa
sub
inc
into
push
add
cmpsl
or
notb
int3
adc
ds
fwait
aas
mov
int
fsubl
stos
sti
xchg
sbb
push
sqrtps
xchg
fcoml
mov
xchg
lea
out
cmc
frstor
jns
push
in
xchg
push
sbb
jnp
xchg
adc
mov
cmpsb
lret
sub
gs
xchg
loope
fmulp
pop
icebp
insb
hlt
sub
inc
lods
daa
mov
xchg
outsb
and
dec
fsubs
xchg
leave
dec
test
mov
mov
adc
mov
push
jp
and
into
add
test
jl
mov
adc
fisttps
stc
xchg
xor
cwtl
pop
movl
insb
sbb
push
mov
scas
iret
insb
pop
movl
ss
sti
cwtl
jp
test
scas
sub
mov
push
jno
push
bound
cmpsb
mov
pop
adc
lods
test
push
lds
insl
test
jnp
mov
xorb
rorl
sbb
data16
pop
push
fdivrp
test
push
divb
incl
and
push
xor
cmpsl
lods
inc
mov
mov
lods
jle
pop
mov
mov
in
jb
sbb
mov
cmp
xchg
sti
inc
mov
add
daa
cmp
test
jo
add
mov
cmp
pop
xor
jle
xor
cmp
imul
js
int3
test
dec
ret
ljmp
fwait
in
adc
mov
xchg
inc
sarb
dec
mov
fidivs
pushf
adc
inc
inc
add
ret
jo
aad
sbb
push
mov
leave
insl
out
mov
pop
in
push
xchg
or
adc
pop
pop
imul
imul
push
popf
bound
xchg
loop
adc
mov
or
test
ds
jbe
loope
add
mov
xchg
cmpb
popf
push
sub
add
js
test
fnsave
mov
imul
mov
inc
mov
pop
lahf
pop
add
in
inc
inc
sub
pop
test
pop
push
repz
repnz
pusha
inc
aad
aad
int3
sbb
fsubl
std
push
lahf
push
jge
in
cltd
xor
pushf
pushl
or
ret
mov
lcall
xchg
xor
cmp
cmp
call
negl
adc
sub
xor
das
cmp
sbb
lret
pushf
in
add
outsb
xchg
fwait
sub
mov
dec
pop
filds
jge
xor
sbb
sbb
push
test
popf
lds
and
dec
outsb
sub
mov
loop
mov
push
test
daa
mov
push
hlt
push
push
and
jb
push
call
iret
adc
xchg
into
push
mov
and
test
scas
adc
xor
pop
or
and
jbe
xchg
insb
ret
adc
cwtl
cs
pop
loope
dec
loopne
sti
sahf
sub
fstpl
sahf
cmp
and
dec
jp
int3
cmp
lds
in
mov
jl
mov
ror
and
mov
loope
rolb
bound
pop
mov
shrl
xor
stc
daa
cmc
lcall
cmpsb
cmp
aas
lea
es
jb
mov
fsub
outsl
jg
inc
sub
push
cmp
je
mov
jb
xchg
sbb
cmp
and
mov
or
push
repz
imul
or
mov
jg
dec
fmul
cld
lods
ret
cmp
push
icebp
addb
ds
inc
mov
insl
add
push
aad
jmp
pop
push
xchg
dec
sub
ret
push
cmp
pop
in
les
nop
int3
adc
outsl
and
repz
cli
sahf
popl
aas
ja
popa
sub
ret
cmpsl
xor
inc
pop
or
inc
cli
pushf
pusha
mov
adc
fwait
cli
out
data16
push
dec
jne
push
cmp
xlat
test
out
mov
movsl
enter
scas
test
mov
fadds
mov
push
inc
jge
test
leave
add
bound
mov
xlat
push
scas
int3
jns
fdivl
sar
insl
sahf
ljmp
jae
leave
cmpsb
sub
stc
adc
ss
leave
add
lret
addr16
xchg
and
outsb
mov
loope
add
xorb
inc
pop
test
or
xchg
pop
fbstp
mov
jmp
mov
mov
xchg
push
sub
jp
adc
or
jl
arpl
cmp
jle
xchg
jl
xor
pop
dec
fcom
dec
sahf
adc
andl
popf
jae
js
aas
out
xchg
stos
add
clc
stos
push
lcall
idivl
xchg
mov
repnz
pop
ds
pop
loope
inc
mov
jecxz
or
and
pop
out
aad
sbb
testb
xor
cmp
repnz
mov
insl
dec
mov
fnstsw
push
out
xchg
or
ljmp
lret
sub
mov
int3
ja
stos
dec
rcll
jne
subl
and
push
inc
adc
sub
push
leave
lock
into
clc
sbb
pop
cmp
sub
test
push
jne
subb
repnz
pusha
leave
mov
loope
add
sbb
negl
lahf
jno
or
inc
mov
sarl
stc
cltd
in
push
xor
cmp
das
add
cmp
rcrl
fwait
inc
je
mov
mov
mov
mov
sbb
fisttpl
or
into
bound
cwtl
add
adc
ret
iret
push
push
xlat
mov
in
mov
push
scas
lret
addb
loop
jns
mov
fwait
jns
jo
loopne
rcll
test
imul
inc
jle
mov
imul
cmpsb
dec
inc
mov
jmp
pop
cmp
cmpl
stc
out
xorb
sub
mov
jle
cwtl
adc
adc
xor
int
movsb
and
add
add
lock
mov
jle
cltd
mov
dec
add
ret
dec
sub
shll
xor
jne
inc
lods
inc
jl
dec
out
popf
dec
jnp
mov
xchg
push
xor
aam
adc
pop
pusha
loope
xor
pop
adc
lret
jb
loope
sarb
ja
adc
nop
pop
out
cmpsl
stos
pop
push
ret
adc
and
mov
push
mov
pusha
pop
inc
arpl
sbb
js
adc
sub
in
inc
adc
jp
mov
aaa
insl
inc
fidivs
add
jnp
xchg
inc
lds
pop
mov
insb
pop
mov
lock
jno
cli
adc
mov
xchg
in
out
adc
repz
js
jae
fldenv
leave
enter
and
mov
cmp
mov
push
cmpsb
sub
add
cs
mov
repz
jno
push
inc
aad
into
clc
popf
xchg
imul
pop
test
out
or
mov
insl
ret
hlt
pop
popf
adc
sub
sti
dec
cli
sbb
cmp
sbb
in
dec
cmp
push
push
arpl
cmp
cmp
cmp
lret
jmp
cmp
lea
mov
out
or
sub
cmpsl
pop
sahf
fbstp
addr16
dec
clc
cmpsb
jmp
or
xchg
adc
fildl
adc
and
pusha
pop
aam
adc
sub
jle
push
loope
xchg
lods
mov
ss
call
out
nop
movsb
xchg
daa
es
cmp
and
jo
leave
mov
repz
shrl
pop
xor
sbb
aas
out
inc
jno
dec
enter
popa
es
xchg
push
cltd
rcrl
aad
mov
iret
mov
stc
cmp
push
sar
cmp
stos
adc
dec
cs
pop
out
into
in
mov
xlat
xlat
into
xchg
mov
roll
sbb
and
cmp
push
fildl
fs
les
mov
jne
fwait
adc
nop
push
iret
bound
push
je
sbb
mov
adc
jp
or
lahf
adc
scas
mov
loop
sbb
add
mov
mov
inc
pop
and
inc
addr16
cmp
add
sti
repz
add
pop
cmc
popa
jge
mov
lds
xchg
mov
jg
push
test
lcall
mov
xchg
jo
outsb
sub
ljmp
and
sti
in
mov
adc
js
iret
xchg
repz
ja
aas
and
sbb
jmp
sbb
arpl
adc
pop
jns
fwait
in
rcl
jmp
push
decb
lock
loope
add
call
jns
pop
je
sub
jp
vrcpss
testl
in
stc
fiadds
out
xchg
add
xchg
ficoms
lret
loopne
repnz
iret
pop
pop
out
dec
push
jbe
sbb
js
insl
xor
mov
dec
cmpsb
push
and
push
add
ret
ret
rorl
fbstp
sub
insb
addr16
aam
xchg
jle
repnz
sahf
fisubrs
out
das
mov
xchg
fbstp
or
push
in
inc
nop
lcall
mov
outsb
fldenv
insb
pusha
mov
add
mov
xchg
les
adc
inc
xchg
out
out
add
and
out
pop
mov
repz
push
xor
sub
inc
in
fcomip
ret
mov
dec
sar
hlt
in
hlt
mov
jecxz
push
mov
or
js
lcall
es
cltd
mov
imul
lds
hlt
aad
pop
addb
out
sub
ja
insl
push
fs
mov
test
pop
mov
iret
cwtl
xchg
rol
mov
or
cs
aad
pop
dec
sbb
int3
pop
shr
es
es
out
cmp
dec
mov
jnp
fnstsw
sbb
icebp
lods
mov
sahf
cli
jg
into
jecxz
mov
lret
das
push
inc
in
sti
and
push
adc
mov
testb
jle
mov
jl
lret
add
inc
ret
dec
ficomps
loopne
imul
or
inc
jno
or
aaa
cld
and
sbb
pop
mov
cmpb
xlat
mov
jno
cmpsl
jae
repnz
in
stos
xchg
call
sarl
xlat
addr16
or
adc
jp
cmp
mov
push
xlat
dec
orl
movsl
fsubrs
into
roll
into
lret
notb
stos
push
lods
hlt
loop
ds
test
or
xchg
push
js
sahf
add
mov
mov
mov
jl
test
adc
mov
dec
outsl
and
sti
and
psrlq
ja,pn
aam
pop
fldl
aad
fs
or
add
jae
mov
je
pop
pop
sbb
ret
test
dec
lret
cmovb
adc
pop
cmpsb
ficompl
test
add
pop
pop
shll
or
mov
js
mov
xchg
int3
rol
xchg
mov
inc
insl
push
push
jo
dec
aas
or
bound
das
inc
xchg
lcall
sar
and
sti
test
pop
cmpsb
hlt
pop
loop
jb
fwait
les
push
push
inc
sub
xchg
push
push
and
pop
sub
in
mov
push
jl
sbb
and
shlb
fs
xchg
push
cmp
push
iret
popa
xlat
enter
cmp
repnz
nop
enter
xchg
mov
ret
add
push
outsl
je
sub
mov
xchg
fdiv
insl
ds
dec
lcall
mov
mov
faddp
cltd
bound
lcall
pop
inc
inc
ds
sub
ljmp
jne
fdivr
sbb
jge
jmp
insb
sahf
xchg
or
scas
cmpsl
xor
sub
fildll
stos
add
inc
pop
lds
xchg
add
loop
lret
cli
fdivl
pop
or
aad
jg
mov
bound
loop
adc
into
loopne
push
jnp
push
repnz
sub
xchg
rcl
leave
mov
inc
adc
jns
push
shl
mov
inc
cmp
test
shll
aas
xor
imul
xor
and
push
mov
mov
push
cmp
push
adc
dec
addr16
outsb
mov
mov
loope
cli
mov
loopne
insl
mov
fidivl
xor
mov
add
loopne
push
pusha
je
sub
xor
ret
testl
mov
iret
xchg
lds
jae
scas
stos
insl
and
jp
sbb
imul
cmpsl
mov
mov
stos
pop
pop
inc
push
xor
dec
cmp
lea
dec
jl
out
pushf
js
dec
and
lds
add
enter
adc
hlt
mov
in
jno
add
or
iret
std
push
mov
inc
ret
or
or
cmp
adc
fwait
mov
push
push
wrmsr
jmp
jg
lret
dec
pop
mov
push
sbb
xlat
pop
inc
mov
add
mov
leave
adc
inc
jg
daa
mov
sub
out
dec
jge
repz
pop
mov
cmc
test
je
imul
in
mov
orl
sub
mov
push
jbe
mov
lahf
out
dec
sub
adc
fsts
mov
sbb
add
and
pop
pushf
adc
push
stos
dec
mov
and
add
addr16
push
or
outsb
test
sub
xchg
into
mov
das
fists
pushl
push
ret
sbb
enter
and
push
nop
fildll
mov
inc
mov
nop
push
cli
in
mov
data16
and
outsb
aas
out
icebp
pop
push
pop
push
add
mov
lret
and
xor
data16
ret
lahf
sub
jno
jg
ficomps
jp
push
fwait
test
push
leave
push
cs
cltd
cmp
sub
add
test
outsb
frstor
push
xchg
sub
jg
xor
jno
push
ficomps
movb
shl
dec
jno
scas
adc
sub
cltd
cltd
movl
jb
scas
and
stos
mov
stos
iret
lcall
xor
and
sti
outsb
mov
orb
xchg
or
mov
loopne
sti
lcall
jo
btcl
gs
sbb
movsl
jecxz
es
jle
rorb
xor
pop
adc
pop
call
lods
add
sti
jmp
adc
jae
mov
adc
cs
sti
mov
pop
orl
aam
push
or
lock
or
sbb
push
cmpsb
xor
inc
and
je
subb
cmp
mov
dec
xchg
mov
mov
pop
mov
xor
cltd
and
pop
mov
cwtl
xor
mov
in
adc
mov
iret
jp
je
loop
inc
sti
xchg
scas
sbb
jne
push
cwtl
movsb
pop
cmp
les
rcrb
jg
inc
pop
sbb
gs
sbb
lret
cmc
cmp
dec
ret
dec
pop
pop
popf
mov
mov
in
push
pop
xor
mov
int3
inc
imulb
cld
push
push
mov
in
fildl
push
incl
mov
outsl
pop
negb
xchg
mov
insl
or
insb
loope
add
pop
mov
cmp
push
mov
adc
sbb
sbb
xor
in
out
popf
daa
or
hlt
jmp
jb
dec
inc
dec
mov
and
dec
loop
jno
cltd
pop
add
xchg
cli
outsl
adc
rcl
jo
lods
pop
add
outsl
push
sbb
mov
in
cmpsb
pop
scas
loope
sahf
push
je
shl
aaa
pop
inc
cmc
movsl
push
jl
outsb
or
cmp
sbb
leave
sbb
adc
push
jb
insl
or
fildl
dec
test
arpl
and
cmovne
pop
cmp
push
jb
gs
jl
int3
xlat
jge
outsb
sub
cmp
inc
lods
out
stos
push
sub
pushf
sub
mov
jae
inc
rcr
fidivrs
into
loop
push
pop
subb
or
jle
int3
sbb
sub
cltd
test
rcrl
cmp
fs
mov
jae
inc
mov
sub
xor
test
inc
xchg
sbb
jmp
add
mov
inc
ret
stos
or
jns
ret
sti
inc
pop
mov
ret
push
push
cmp
test
ljmp
adc
andb
jp
mov
bound
mov
pushf
push
push
push
and
jp
sbb
fisttpll
jle
adc
mov
cmp
jl
stc
out
mov
push
sbb
cmp
fdivl
push
bound
pop
in
loop
leave
in
dec
dec
lods
pop
es
stc
imulb
jae
cmpsl
push
shll
xchg
mov
xchg
and
scas
xchg
or
cmp
into
rcll
mov
or
add
mov
pop
push
das
and
stos
or
xlat
xchg
hlt
out
pop
loope
xor
out
mov
mov
icebp
stos
add
js
in
cmp
mov
dec
or
sbb
jle
mov
pop
mov
popa
mov
aas
add
fwait
addl
imul
push
fwait
jg
add
test
test
xchg
or
loopne
pop
cmpl
push
pop
std
pmovmskb
sub
jl
subb
and
adc
ss
push
jns
imul
insl
add
outsb
cmp
add
shll
std
out
mov
sub
lret
mov
ja
or
and
repz
inc
icebp
mov
cmpb
stos
jne
nop
sbb
stos
pop
in
mov
enter
out
mov
dec
scas
in
pop
mov
dec
mov
bound
or
xor
jo
lds
aas
mov
rcr
mov
int3
inc
nop
jae
pop
call
ja
gs
int3
popa
adc
jle
loopne
daa
xchg
ljmp
flds
cmp
push
ja
int
pop
cmpsb
addr16
lahf
stos
xchg
dec
pop
scas
fiadds
sbb
jo
sub
out
xor
ds
arpl
cmpl
or
out
push
add
gs
cmp
jns
shll
jg
mov
mov
dec
sahf
lea
movsb
cmp
scas
cmp
cmp
push
shr
lds
loopne
leave
dec
fsub
pop
xchg
jle
arpl
and
xchg
jo
pop
cmc
sbb
xor
out
jmp
movsl
push
bound
repz
push
pop
jne
or
test
cltd
xchg
gs
ret
aad
xlat
mov
or
ljmp
test
lret
xor
arpl
test
pop
dec
mov
jecxz
and
fsubrs
xor
or
cmp
rorl
mov
ds
les
stos
mov
dec
mov
adc
mov
mov
xchg
lahf
out
popa
push
mov
fwait
popa
ljmp
push
sbb
push
adc
leave
jbe
sub
xor
inc
call
into
stos
jne
sahf
call
jg
aas
mov
xchg
insb
and
out
lahf
jbe
xor
add
xor
insb
sub
je
and
xchg
jno
out
inc
sbb
ret
imul
jp
js
mov
iret
mov
cmp
lret
push
push
jae
xchg
inc
pushf
mov
xor
or
fmuls
sbb
jne
test
aas
stc
int3
ret
sub
loope
sbb
into
lcall
ja
mov
pop
stos
xorb
mov
bound
or
pop
push
push
cmpsb
jbe
mov
adc
lret
addl
mov
adc
test
pop
test
fs
cmpsb
mov
sub
xchg
mov
call
xchg
push
jno
add
fsubr
loopne
xlat
and
fisubs
xchg
xchg
mov
sbb
xor
shlb
dec
jp
sbb
out
dec
outsl
mov
mov
rolb
call
jo
mov
cmp
add
aam
es
outsb
mov
mov
stc
push
fcoml
jmp
mov
and
fdiv
addr16
push
jle
add
xor
fs
jb
jno
es
jnp
fmul
cltd
lds
aas
cmc
adc
push
scas
test
inc
pop
dec
das
je
mov
out
aad
jle
cli
lods
inc
sti
mov
add
decl
test
aaa
cmc
bound
leave
pop
das
lods
lret
or
lods
add
aas
and
or
jo
test
sub
aam
ljmp
jmp
and
push
in
clc
int
mov
int
push
mov
cwtl
jmp
stos
dec
mov
mov
cmp
test
dec
decb
jo
pop
ret
les
loop
cltd
xchg
xchg
sarb
push
cmp
sub
gs
leave
pop
fdivp
xchg
clc
mov
cmp
fsubrl
test
and
roll
xor
pop
nop
adc
jnp
mov
add
jnp
lds
jmp
les
jnp
outsb
dec
ret
scas
loopne
jp
mov
fsts
loop
and
xor
pop
pop
scas
test
sbb
sahf
mov
je
dec
in
mov
or
sbb
addl
adcl
les
pop
sub
xor
adc
jg
or
inc
adc
gs
jg
adc
dec
jle
sub
leave
jp
ss
pop
mov
insb
dec
cld
in
sub
and
mov
repz
lock
jmp
add
xchg
sbb
sub
or
xlat
jbe
subb
mov
test
test
push
dec
popa
sbb
cwtl
ja
mov
xor
das
mov
gs
xor
mov
cmp
and
js
xchg
arpl
jp
cmp
loopw
ljmp
testl
sub
mov
xor
pop
add
jnp
sub
mov
stc
and
xor
lcall
jnp
mov
subb
stc
mov
idivl
pop
dec
mov
adcb
pop
leave
mov
mov
ljmp
data16
xchg
sub
dec
xchg
popf
fcmovu
andl
imul
and
jecxz
rcrb
popa
mov
pop
ds
test
fdivr
loopne
add
pushf
testl
mov
mov
mov
fisubs
xchg
cmpsl
push
xchg
sub
cwtl
add
pushf
inc
bound
pop
pop
adc
push
into
inc
imul
pop
out
ret
rorb
rclb
loopne
and
popa
idivl
outsb
mov
js
fstl
xorl
pop
xchg
adc
clc
cmpsl
sahf
jmp
mov
call
xchg
xchg
mov
add
stc
clc
jmp
popa
jne
mov
or
mov
fcomp
mov
insl
insl
mov
insb
mulb
and
adc
and
fisttpll
lods
fsubrp
pop
ficomps
xchg
cmpsl
mov
and
xor
inc
mov
ja
in
inc
xchg
aam
sbb
xchg
shll
loopne
mov
jle
jmp
lea
ds
jb
cwtl
hlt
loop
jecxz
sub
jle
mov
leave
andb
aad
cmp
or
scas
mov
aam
inc
js
adc
adc
dec
mov
sbb
inc
inc
gs
test
pop
mov
fs
push
push
fstl
xlat
pop
xacquire
add
cmp
dec
xchg
xor
push
shll
sub
push
or
adc
clts
popl
repnz
mov
repz
jnp
xor
xchg
shll
mov
testb
fsub
and
adc
xchg
stc
cmp
sarb
sbb
inc
cmp
out
jb
nop
sbb
mov
mov
sbb
scas
add
mov
mov
cwtl
sbb
xchg
adc
faddl
ja
movl
movsb
test
fsubs
ljmp
aad
mov
cli
movsl
and
add
or
pusha
outsl
jle
xchg
arpl
xchg
and
in
int3
mov
and
cwtl
out
cs
xchg
repnz
mov
icebp
xor
shll
push
xor
add
pop
nop
push
mov
fwait
lods
lds
pop
imul
fbstp
jg
or
push
clc
repnz
cwtl
pop
cmp
fstp
roll
mov
jecxz
dec
mov
inc
xor
leave
clc
pop
jg
lods
push
xor
outsl
dec
addl
sbb
popa
push
rcr
and
shll
and
ss
jmp
and
jle
cmp
arpl
pop
daa
imul
iret
js
xor
mov
out
sub
lret
sbb
pop
jns
and
sbb
xchg
outsb
jno
adc
nop
subl
xor
js
dec
adc
mov
jge
xchg
pusha
cmpsl
xchg
in
scas
and
leave
lret
iret
jns
repnz
mov
mov
lds
push
ds
je
test
push
add
leave
test
cmp
int
inc
and
adc
sub
test
xor
dec
cmp
add
ljmp
sub
test
scas
push
inc
into
fwait
inc
jb
iret
mov
mov
xchg
mov
xchg
popf
sbb
orb
adc
loop
push
mov
repz
imul
mov
pushw
push
icebp
divps
int3
stc
mov
push
xor
test
popa
add
pushf
xor
adc
stc
movsl
arpl
xor
mov
cmc
jb
iret
daa
cmp
dec
ljmp
sbb
dec
fidivs
outsb
jl
imul
adcb
and
dec
rcll
inc
mov
pop
pop
lcall
mov
and
mov
mov
lret
mov
adc
rorb
popa
jno
cmp
in
cmp
std
out
jecxz
pop
clc
je
int3
int3
mov
data16
rclb
ret
sti
mov
mov
jae
daa
fisubrl
ret
les
ret
mov
in
dec
and
ljmp
mov
mov
ds
fists
dec
outsl
outsb
mov
test
divb
mov
cmp
mov
call
imul
cmp
ficoml
es
mov
jne
push
test
sti
es
mov
loope
bound
sbb
push
mov
in
push
xor
mov
xchg
sub
je
mov
mov
lea
int
push
lcall
scas
gs
hlt
aad
nop
decl
mov
pop
cltd
inc
fisttps
jns
std
sbb
cmp
push
jne
cmp
shlb
loopne
mull
out
or
outsb
add
clc
jle
js
add
aam
mov
pop
jno
mov
jg
data16
sub
jle
rcrb
mov
movsl
enter
fsubrs
add
sahf
lods
mov
pop
in
repnz
in
ja
icebp
insl
movsb
cli
into
lea
inc
stos
fs
adc
mov
jge
dec
add
xchg
aaa
dec
jmp
ret
lahf
mov
mov
mov
out
lds
mov
sbb
cltd
inc
pop
xor
pop
sub
sbbl
dec
cmp
movsl
into
mov
cltd
mov
out
lret
xchg
call
repz
push
mov
push
ret
jne
and
pusha
out
jge
add
mov
jg
inc
inc
adc
repz
dec
in
xor
hlt
xchg
mov
loope
jg
outsb
xchg
inc
adc
cmp
mov
es
jecxz
inc
jo
pusha
aas
repnz
imul
ljmp
pop
xor
imul
incl
cltd
dec
cmc
iret
out
mov
and
sbb
xor
xchg
or
test
ds
xchg
fbstp
sti
pushf
sbb
jbe
cmp
mov
lods
in
mov
push
pop
jb
fs
cmp
mov
xchg
pop
inc
jb
jp
jecxz
adc
adc
xchg
pop
mov
jae
pop
lret
mov
cli
push
into
mov
aas
adc
lods
cmp
data16
aam
jg
shlb
xlat
movsb
jp
out
xchg
rorb
arpl
xchg
add
sarb
push
std
mov
clc
push
add
les
dec
or
iret
push
sub
loopne
push
jno
cmp
xor
and
mov
mov
mov
adc
dec
jl
push
movsl
movsb
addr16
mov
rorb
or
cmp
mov
inc
inc
cmp
pop
sbb
mov
and
mov
xchg
or
stos
and
inc
jb
jbe
shrb
ficoms
mov
xchg
and
jo
dec
xor
testl
and
push
fcmovb
into
fmuls
inc
rorb
mov
aam
ljmp
sbb
dec
jl
shlb
data16
loop
mov
sbb
sub
ret
popa
dec
inc
push
cmp
test
dec
movsb
push
mov
jle
je
icebp
inc
shl
push
xor
out
test
push
push
add
maxps
gs
iret
adc
lods
lods
cwtl
xchg
pop
ss
xchg
jns
pop
int
inc
enter
pop
mov
sbb
xlat
xchg
movsb
jnp
push
mov
mov
pop
and
and
push
loopne
xchg
outsl
mov
sub
mov
not
cmpb
stc
es
pushf
into
cmp
xorb
jge
jno
movsl
mov
ja
jnp
int
pop
or
cld
xor
jne
xor
ljmpw
xor
adc
subl
push
xor
or
mov
shlb
sbb
push
adc
std
push
jo
in
jecxz
nop
scas
jmp
push
dec
fsubs
xor
jl
inc
add
cmp
or
out
rorb
in
add
mov
imul
aas
movsb
sahf
cmp
mul
push
test
jae
xchg
or
cs
mov
xchg
cs
xchg
push
cmc
sub
cmp
ds
call
js
cmpsl
mov
or
aam
xor
rcl
inc
sbb
mov
test
jp
loope
sbb
xchg
jl
push
dec
in
xchg
inc
movsl
mov
adcl
push
out
movsb
jb
pusha
mov
subb
jg
cmpsb
js
aad
cmp
xlat
outsb
pop
xor
mov
fldl
mov
cltd
lods
sahf
jecxz
inc
stos
mov
pop
shll
ss
xchg
adc
outsb
mov
push
orl
jnp
mov
mov
push
add
pushf
add
xchg
pusha
mul
xor
cmp
xchg
adc
pop
lods
pop
mov
xchg
pop
fcmovb
sbb
jne
movsl
inc
cmpsb
pop
push
push
adc
push
daa
pop
xor
jl
and
inc
lcall
pop
popa
je
sahf
ja
daa
xor
add
xor
cmp
arpl
mov
push
xor
xor
pop
inc
cmpsb
cld
js
mov
jo
subps
mov
xor
add
jo
stos
fs
shr
incl
inc
nop
push
push
repnz
movsl
stc
mov
pop
in
lret
stos
mov
rcr
dec
mov
movsl
cmpsb
xor
pop
or
fildl
insw
pop
adc
dec
push
cmp
daa
ret
fdiv
mov
or
add
sarb
stos
sub
out
jg
les
xchg
mov
lret
dec
test
pop
frstor
push
daa
scas
add
adc
imul
adc
mov
or
mov
dec
ljmp
inc
dec
mov
pop
cmp
lds
lahf
push
lahf
nop
gs
loope
dec
mov
outsl
pop
jmp
and
adc
hlt
loope
inc
pop
push
iret
jo
pusha
cli
add
ficoml
mov
daa
xor
mov
aaa
cmc
das
loopne
mov
xor
sbbb
xchg
push
mov
adc
js
and
mov
outsl
cmpsl
imul
push
mov
insb
outsb
jl
into
fldcw
add
leave
jle
psllq
jnp
xor
popf
inc
cmpsl
fsts
fcoml
mov
mov
cmc
pop
mov
dec
lret
rolb
ja
inc
aaa
scas
mov
call
mov
dec
xchg
mov
cld
push
pop
pop
test
scas
stc
leave
or
mov
dec
stos
jbe
jle
nop
xchg
jnp
outsb
pop
jl
xlat
into
mov
stos
jbe
out
fisubrs
xchg
arpl
test
rol
mov
xor
sahf
popf
xor
xchg
push
je
pop
nop
or
in
inc
hlt
mov
inc
jae
cmp
je
into
stos
mov
mov
roll
rolb
gs
dec
lahf
mov
push
test
cmp
xchg
lahf
jns
cmp
cmp
push
dec
xchg
scas
dec
add
xor
subb
mov
dec
fwait
in
push
push
loope
push
mov
aas
mov
jo
shrl
out
in
inc
and
sbb
mov
into
and
sbb
aas
jno
daa
cmp
jne
dec
xchg
insb
mov
sarl
mov
stos
adc
outsl
mov
xor
and
sub
adc
pop
fmull
cwtl
xlat
loop
and
leave
roll
test
dec
xor
bound
sbb
push
daa
xchg
aad
mov
or
das
addr16
int
sbb
notl
ror
xchg
dec
mov
ret
mov
pop
cld
mov
daa
loope
or
dec
and
sbb
call
addr16
into
cltd
scas
add
pop
stc
ficoms
mov
cmpsl
dec
xor
fnstcw
and
lahf
cmpsl
int3
pop
lods
pop
stos
outsl
loope
cli
imul
daa
xor
ret
into
leave
dec
mov
mov
aaa
lods
mov
cmp
and
mov
pop
shrb
fsts
pop
test
rclb
jmp
out
call
mov
mov
or
pop
test
push
xchg
outsl
mov
add
int
ljmp
out
scas
cs
mov
leave
mov
mov
ror
scas
or
lret
lods
mov
dec
mov
into
xor
je,pt
add
mov
arpl
sub
cmp
lret
iret
lock
inc
pop
sbb
lret
adcb
movsl
inc
movsb
les
mov
shll
xchg
cmpsl
inc
push
inc
pop
adc
push
mov
lcall
cwtl
xchg
cli
cmp
clc
dec
lods
lret
sub
sbb
pusha
inc
cmp
mov
pusha
sar
mov
push
movsb
aas
inc
jb
sahf
mulb
jge
stos
dec
ljmp
lea
jno
or
push
stos
add
cmp
fs
pop
mov
rcll
cmp
out
iret
test
push
fsubrl
addr16
sub
scas
ret
add
in
mov
test
cmpsl
xchg
sbb
loope
test
push
or
pand
push
cmpsb
xchg
imul
cmc
aas
in
js
arpl
cmp
jecxz
sbb
inc
xorl
mov
leave
sbb
jge
scas
into
ds
test
sub
add
or
xchg
mov
daa
fnsave
and
inc
mov
inc
sbb
cmp
mov
movsb
xor
or
or
ds
movsb
int
xchg
cld
add
push
call
pop
cmp
push
sub
mov
add
movsl
rolb
in
adc
push
test
orl
out
add
push
scas
imul
pop
in
push
sbb
sahf
js
cmp
inc
in
sti
jle
imul
adc
ds
imul
adc
and
inc
cmp
mov
pop
popa
bound
mov
andl
adc
adc
cmpsb
or
sbb
lods
add
sbb
jecxz
inc
push
adc
bound
test
ss
lret
sub
inc
mov
dec
outsl
xchg
mov
ret
adc
lcall
es
fists
daa
sbb
sub
test
xchg
jo
orl
fs
into
ret
sub
push
aam
inc
push
imul
jb
add
push
jae
sub
sbb
icebp
std
jns
dec
ljmp
in
pop
insb
sbb
movsl
nop
sbb
mov
push
lret
xchg
inc
inc
fwait
and
mov
sub
mov
dec
pop
adc
pusha
popf
std
cltd
mov
cmp
lods
cmp
and
or
add
push
test
dec
inc
dec
bound
pop
pop
sbb
cli
or
xor
in
and
inc
scas
sub
out
and
or
mov
fisttpll
rclb
add
pop
xor
jecxz
ret
pop
clc
das
stc
sti
mov
xlat
add
or
out
and
push
mov
dec
inc
and
scas
adc
fwait
inc
push
movsl
mov
mov
lcall
ror
dec
repz
xor
testl
adc
dec
or
pop
jno
fistpl
sti
nop
sarl
rcll
cmpsb
out
sbb
push
call
ret
pop
loopne
fstl
push
mov
push
popa
jecxz
fwait
call
lds
adc
jno
rcrb
lods
sarb
inc
push
jmp
push
mov
mov
push
add
mov
enter
sbb
push
orl
add
movsl
xchg
pop
scas
sbb
sbb
jnp
cltd
ret
pop
lea
push
jnp
fiaddl
out
in
push
xor
jnp
ret
js
xor
cmp
sub
mov
test
mov
test
xchg
mov
in
dec
fisttpll
and
bound
pop
or
dec
sbbb
inc
mov
cmc
leave
push
data16
test
pop
pusha
xorb
sbb
cmp
and
shll
loopne
mov
pop
test
ss
push
in
mov
and
test
cld
cmpsl
fisttpl
sub
iret
lds
inc
outsl
scas
nop
sbbb
movsl
xchg
insb
cwtl
adc
aam
popa
lea
es
push
dec
std
xor
imul
leave
xchg
xor
inc
ss
lret
mov
int
int
dec
jo
push
fsubrp
cmp
or
icebp
and
cmp
sub
push
xchg
push
fnstsw
fidivrs
inc
push
pause
aas
ds
lock
fiaddl
leave
jnp
pop
test
cwtl
add
scas
inc
xor
dec
pop
jae
movsb
dec
push
add
jge
scas
ja
ja
push
outsl
data16
and
lea
dec
out
adc
dec
jle
ret
mov
or
xchg
dec
clc
scas
es
test
cmp
aam
xchg
adc
call
sub
aad
cld
stc
sbb
int3
stc
fstpl
jmp
add
fdivs
or
rcll
jo
push
dec
inc
fwait
jle
test
lcall
shlb
test
push
cmpsb
mov
jg
ds
push
loopne
push
mov
dec
shll
mov
add
pop
mov
cli
xlat
popf
jg
adc
push
adc
mov
lcall
mov
fldt
sub
test
sbb
xor
mov
xchg
icebp
fwait
adc
dec
mov
jns
sbb
ffree
scas
xor
pusha
popa
push
and
lcall
js
into
inc
jns
pop
push
dec
shr
mov
sar
jge
mov
fsubs
rcr
sti
inc
mov
je
push
fistpll
sub
clc
lret
mov
xchg
scas
es
imul
jo
pop
mov
movsl
add
xchg
loop
mov
inc
fadds
popa
movsl
push
fnstcw
fstl
jns
jns
mov
cmp
and
jle
jb
fs
movsl
xchg
stos
or
cmp
adc
sub
or
or
incb
imul
add
and
cmpsb
cmpsb
dec
xor
jns
xor
ja
mov
es
es
inc
andl
cmp
mov
in
mov
add
add
cmp
arpl
adc
jge
mov
sarb
or
in
inc
sub
mov
daa
adc
xor
ret
mov
fcmovnu
leave
jo
bound
icebp
xchg
sub
cmpsl
inc
and
daa
cmp
and
add
icebp
pop
and
mov
mov
or
lea
out
lcall
nop
loope
sbb
andb
sahf
mov
sub
mov
dec
dec
or
or
dec
and
cmp
cmp
push
les
mov
add
fdiv
inc
xor
out
xchg
loop
loopne
stos
dec
jp
cmp
sbb
push
aad
ljmp
inc
test
stos
in
add
mov
push
loope
sbb
or
loop
cmp
roll
mov
leave
or
push
sbb
push
push
fnstenv
push
test
stc
loopne
jecxz
push
scas
mov
sub
testl
insl
mov
fsubrs
or
insl
pop
cli
or
addr16
jmp
gs
jnp
mov
pop
lcall
mov
leave
fsubrl
imul
dec
stos
adc
xor
hlt
or
mov
ja
faddp
addr16
push
scas
cld
mov
shlb
shlb
aas
mov
jo
add
das
fwait
cmpsl
cmp
sub
fisttpl
sub
jae
pop
xor
mov
in
push
xor
repz
lock
pop
adc
jno
adc
xchg
aad
push
leave
das
fsubrs
add
push
adc
into
or
sti
adc
loope
fwait
and
sbb
sbb
into
insl
out
sub
sub
push
or
or
pop
stos
pop
in
xchg
pop
or
sub
cwtl
pop
nop
in
push
loop
mov
sti
in
in
add
add
mov
loopne
call
les
adc
mov
repnz
inc
push
add
into
fsqrt
xor
ficomps
mov
push
imul
fwait
push
shl
cmpsl
xor
push
lret
std
push
test
out
cmpsl
sbb
push
das
push
and
mov
fcoms
mov
mov
daa
cmp
les
call
mov
cwtl
stos
repnz
xchg
inc
lahf
pop
push
stc
lret
cli
rorb
testb
dec
shr
cwtl
in
cmp
lods
xorb
or
mov
cltd
jmp
add
and
cmp
xor
mov
imul
ja
or
add
jno,pt
dec
pop
and
pop
mov
nopl
jp
jno
sbb
push
or
insl
repnz
dec
push
lods
push
fcom
imul
lret
pushf
pop
xchg
xor
aas
stc
pop
inc
mov
pop
or
cwtl
pop
test
lret
mov
adc
in
popf
pop
xor
incl
xlat
test
xor
dec
pushf
mov
jg
scas
data16
adc
pop
add
lahf
imul
cmp
mov
fisubrl
inc
fdivl
xchg
mov
test
sub
lret
divb
dec
mov
in
inc
push
movsb
insb
icebp
sub
or
test
hlt
pushf
stos
nop
hlt
inc
add
test
mov
loopne
inc
jge
gs
push
push
shlb
mov
xchg
pop
mov
mov
cltd
mov
popa
add
test
outsb
movsl
pop
sahf
and
dec
push
cmp
dec
fsubrs
cld
movsb
inc
xlat
mov
fidivs
hlt
or
adc
roll
dec
mov
nop
cld
es
dec
std
push
xchg
test
sbb
sub
flds
aaa
ds
lret
leave
sub
daa
jmp
xor
shr
inc
cmp
push
dec
xorb
and
pop
xchg
loope
cmc
add
fbld
bound
ljmp
imul
sbb
pop
into
je
xchg
xchg
faddl
lcall
jl
iret
jb
sbb
pusha
xchg
push
sbb
fmuls
mov
enter
rorb
sbb
cli
dec
cmp
xchg
clc
and
adc
sub
loope
mov
push
popa
fistps
and
in
lcall
lret
xchg
imul
xchg
rol
dec
adc
shrb
push
ficoms
cmc
mov
movsb
fisubs
mov
jae
iret
ds
inc
outsb
inc
je
int
lods
imul
xor
test
cwtl
data16
out
negl
jns
icebp
pop
mov
mov
sarl
cmpsl
mov
rorb
dec
sti
xor
arpl
andb
je
dec
push
subl
fsubl
das
aam
xchg
arpl
mov
pop
xchg
xchg
stos
push
mov
cld
jae
jae
inc
xchg
cmpsb
orl
aas
imul
sbb
ja
mov
je
pop
jge
cmc
sbb
mov
mov
cwtl
xchg
aas
add
and
loopne
js
push
movsl
je
dec
pop
and
cmp
fmul
xchg
dec
in
test
cwtl
push
addr16
mov
iret
jns
loopne
inc
loopne
andl
xchg
cmp
out
negb
test
xor
sbb
pop
addl
push
mov
sub
xlat
fwait
dec
xor
mov
das
ljmp
lock
mov
out
js
sbbb
lods
lcall
mov
js
mov
jb
push
stos
cmp
out
or
rolb
js
sbb
in
mov
mov
outsl
mull
sbb
dec
jnp
clc
mov
and
adc
lret
pop
jnp
or
add
adc
sub
imul
test
push
lds
mov
push
pop
clc
add
addl
decb
icebp
negb
ret
decl
idivb
ret
mov
aam
lret
mulb
pop
lea
ud2
mov
pop
or
out
inc
mov
xchg
negb
jge
mov
test
xchg
lea
call
call
mov
clc
mov
lcall
out
xchg
aam
xor
aas
xor
sbb
mov
movd
push
mov
orb
popf
xchg
xchg
sub
cmc
and
cltd
rclb
or
mov
xchg
incb
repz
fstps
push
or
pop
sub
ds
inc
repnz
or
cwtl
push
fldl
mov
push
jnp
mov
clc
ljmp
sbb
jne
xor
mov
mov
loopne
fisubrs
outsl
push
dec
insl
les
pop
fsubrl
jg
sub
cmpsl
mov
rclb
negb
sbb
push
test
sar
fwait
sbb
in
inc
jae
aad
or
inc
jns
jl
leave
adc
mov
test
xchg
bound
movsl
jg
movsb
in
pop
inc
setge
in
push
mov
popf
adc
loopne
lahf
int
sbb
pushf
adc
push
das
repz
or
pop
les
je
xchg
fdivs
dec
ds
xor
add
cmpsb
mov
ss
jbe
and
clc
push
clc
sub
xchg
adc
sahf
cmp
xchg
ret
fs
out
lret
add
fstpt
jle
xchg
imul
lahf
decb
or
mov
aad
fsubs
out
adc
xchg
aas
mov
gs
in
andb
lcall
in
outsl
sbb
mov
mov
scas
ss
mov
fcomps
std
add
sbb
sub
in
pop
fwait
mov
cltd
rcll
push
sbb
dec
sahf
jmp
pop
cli
cmp
scas
mov
and
mov
ret
loope
aam
nop
aam
add
ret
xchg
in
enter
jecxz
fistps
inc
jecxz
pop
jno
addb
xor
add
enter
sbb
push
pop
movsb
push
mov
jnp
insl
dec
fcomps
push
lcall
push
pop
add
repz
lock
mov
mov
lcall
inc
mov
leave
into
lea
or
dec
jle
mov
push
mov
jbe
mov
xchg
std
fimuls
inc
movsl
xorb
xor
daa
ja
ja
jno
mov
fs
adc
pop
push
out
jno
and
dec
mov
inc
test
xchg
sub
lcall
push
or
add
pusha
mov
jp
je
dec
adc
sub
loop
dec
cmp
lret
repnz
add
mov
in
pop
es
add
fildll
bound
repnz
cmp
ss
mov
mov
or
mov
jne
inc
enter
ja
mov
sbb
fidivl
dec
xchg
add
and
mov
dec
mov
rol
inc
addr16
aaa
mov
mov
out
hlt
xchg
sub
dec
sub
jo
push
push
sbb
mov
lds
push
enter
or
xchg
scas
mov
cmpsl
lahf
push
cmc
ds
in
pop
add
mov
test
inc
xchg
int3
adc
stos
push
out
sbb
pop
xor
lret
ret
pusha
mov
adc
sub
dec
and
dec
movsb
mov
insl
call
fbld
ds
mov
xchg
mov
jnp
sbb
ficompl
fsubs
nop
hlt
loope
dec
fs
pop
cwtl
pop
add
cmp
dec
mov
leave
mov
fs
lcall
lods
pop
dec
inc
inc
imulb
pop
pusha
dec
mov
movsl
and
cmp
shll
sub
push
pop
xchg
loop
or
xchg
arpl
test
push
mov
inc
lahf
xchg
cs
and
lds
adc
mov
aad
push
je
pop
adc
adc
test
xchg
stos
out
rcrl
pusha
jns
adc
xor
into
mov
fildll
jno
xchg
inc
data16
add
fwait
aam
cli
lods
rcr
imul
and
cli
xchg
add
xchg
repz
stos
shr
jbe
mov
das
adc
push
sub
and
sub
loope
or
psubsb
pop
das
jmp
dec
pop
cmp
cmc
mov
hlt
outsl
pop
pop
shrb
dec
pushf
pop
mov
dec
jle
ret
out
mov
jmp
adc
gs
mov
lahf
test
mov
inc
push
int3
mov
push
mov
jne
lcall
and
mov
adc
or
lea
adc
pushf
unpcklps
push
xor
sub
outsl
pushf
lods
stos
inc
jle
or
add
out
fwait
jg
movsl
push
xor
scas
ror
and
xchg
pusha
mov
add
inc
sti
pusha
test
sbb
loop
jno
pop
xchg
fidivrs
mov
fwait
xchg
cmp
jne
or
jne
popa
push
fninit
mov
mov
into
inc
sub
in
xor
mov
and
jge
cwtl
sub
jg
gs
and
pop
fnop
repnz
push
in
fdivrl
pushf
xor
cmp
hlt
mov
out
sub
sbb
stos
and
mov
inc
out
les
jecxz
out
outsl
sti
loope
shrb
push
xor
and
lret
sbb
dec
sbb
adc
add
leave
xchg
lods
daa
nop
subl
pop
fnstsw
push
vxorpd
in
add
adc
lds
jo
sbb
stos
aaa
out
inc
sbb
mov
je
int3
arpl
pop
pop
jns
xchg
je
out
test
faddp
insl
out
gs
insl
adc
rcrl
outsl
pop
out
sbb
out
fwait
data16
push
lods
mov
js
dec
test
imul
lahf
lock
jns
mov
push
mov
mov
mov
push
test
xorb
mov
scas
ds
dec
dec
sti
sub
scas
and
aad
cmp
popf
in
sbb
sub
cs
out
mov
adc
frstor
out
inc
mov
data16
push
add
pop
aad
jge
loop
mov
arpl
sbb
pop
cmp
mov
and
faddl
xor
jno
xlat
adc
xor
scas
hlt
fsubrl
and
pop
out
sbbl
xchg
mov
mov
int
cmpb
push
inc
test
add
repz
bound
sbb
xchg
sbb
pop
hlt
sub
cwtl
call
jmp
sub
mov
jmp
pop
gs
pop
out
fimull
aad
addl
test
loop
popf
nop
in
or
push
mov
inc
xor
fcomps
xchg
loope
bound
mov
add
push
jmp
addl
aad
jne
in
dec
add
inc
pop
add
pop
add
subb
and
jne
imul
pop
mov
xlat
jge
sbb
movsl
add
xorps
jge
sbb
push
mov
data16
mov
mov
or
sti
clc
test
mov
loop
sti
inc
and
loopne
mulb
ret
mov
loope
mov
mov
lock
out
aas
pop
mov
mov
sbb
mov
mov
aas
mull
dec
sbb
mov
sbb
mov
js
mov
lds
or
or
sbb
cmc
mov
sbb
add
push
mov
popf
lret
test
aaa
ja
sbb
cld
add
mov
jbe
pmaddwd
ljmp
mov
ffree
mov
dec
xchg
sbb
shrl
sub
xchg
fs
and
sbb
and
jae
cmpsb
xchg
xchg
das
daa
in
stc
in
fldl
fidivs
fs
push
pop
cltd
divb
shl
inc
movsb
stos
dec
adc
sbb
outsl
mov
push
inc
movl
or
aam
mov
cmp
stos
xchg
add
sti
push
jno
mov
pushf
out
lods
pop
lahf
es
mov
add
js
jle
cli
dec
mov
int3
dec
inc
scas
dec
rcrl
fbstp
mov
pop
fwait
into
pop
ret
lea
in
ss
in
xor
cwtl
cmp
ss
fcom
dec
pop
arpl
shl
scas
or
mov
push
cltd
and
xor
push
jmp
pop
inc
dec
in
lahf
divb
sub
and
fcmovb
inc
sti
and
mov
or
in
mov
mov
roll
xchg
adc
dec
jno
lret
sbb
ja
xchg
dec
mov
movb
pop
fs
outsb
sbb
dec
lods
outsb
jno
out
xchg
adc
outsb
mov
ds
daa
repz
add
sub
push
xchg
mov
repnz
pop
push
test
test
rclb
icebp
dec
scas
add
mov
xor
pop
inc
lret
inc
mov
jp
mov
sbb
fdivrs
rorl
rcl
lea
inc
cwtl
bound
xor
into
push
les
dec
xor
jp
sahf
mov
cmp
aaa
add
jmp
cmp
cmp
add
mov
shrb
shlb
in
push
movsb
lods
push
cwtl
std
imul
sbb
arpl
xor
sahf
xchg
xor
lret
fldenv
jno
clc
add
subb
jle
xchg
xor
push
and
xchg
push
mov
xor
enter
loop
add
aad
or
jb
xor
inc
inc
daa
aaa
push
push
xor
jb
leave
pop
fcomip
lahf
andb
jl
gs
fists
sub
inc
fstpt
push
loopne
mov
es
add
popa
add
mov
push
inc
inc
enter
test
mov
sbb
inc
mov
xor
insl
shlb
or
and
cmpsl
rol
mov
dec
test
adc
rcll
cmp
push
in
xor
push
push
sub
mov
cmp
in
inc
pop
dec
jmp
ljmp
xor
jno
div
lods
ficoms
dec
es
idivb
add
sub
cmc
aam
jge
mov
xchg
push
int3
outsb
inc
sbb
sub
scas
gs
int
mov
sub
jp
xchg
push
xor
jmp
add
scas
mov
push
movsb
ljmp
mov
dec
ret
stos
inc
mov
mov
sbbb
cli
mov
int
push
push
push
ret
loope
fisttpll
test
mov
pop
xor
sbb
pop
sbb
or
stc
add
jb
out
addr16
xor
cli
into
jecxz
fildll
dec
mov
call
icebp
cmp
adc
jle
stos
fisttpll
mov
lea
mov
xor
pop
xchg
ret
cmp
mov
sub
xchg
sbb
cli
mov
mov
scas
mov
sbb
lahf
inc
mov
dec
xor
sbbl
aad
imul
cmp
jo
jb
push
push
adc
fnstenv
sub
pop
cmpsb
cmpsb
pop
jbe
pop
popfw
push
fisttps
ret
arpl
mov
dec
lock
test
dec
add
pop
or
testl
arpl
jg
add
or
cmp
imul
mov
pop
or
inc
repz
xchg
aam
test
or
faddl
push
leave
icebp
jo
inc
rcrl
test
adcl
outsl
scas
test
cmc
popf
out
sub
xchg
xchg
gs
addb
pop
leave
push
gs
mov
nopl
mov
movsb
pop
mov
xchg
jg,pt
sbb
xor
xlat
add
leave
push
adc
or
push
pusha
push
sbb
lea
aam
push
mov
inc
xor
push
xchg
pop
nop
js
pop
aad
pop
faddl
gs
cmp
cli
cmpsl
fs
int
fsubl
sahf
pop
sbb
push
outsb
mov
popl
push
in
paddsw
push
test
clc
cli
and
lds
inc
mov
add
arpl
mov
pushf
cmp
adc
sub
lcall
mov
iret
and
add
sahf
aaa
mov
mov
lret
sbb
inc
cmp
popa
js
mov
aas
jmp
lds
mov
jnp
or
fidivs
mov
jp
push
push
mov
ror
lods
push
dec
rcr
fs
aam
mov
mov
xchg
mov
movntq
bswap
test
dec
cmp
lret
sub
adc
test
out
xchg
pop
xor
xchg
jo
shll
mov
push
jae
ret
loope
enter
push
in
scas
dec
cltd
mov
adc
repnz
negb
shll
lret
out
movsl
sub
sahf
popf
jl
jmp
aaa
es
inc
ret
lods
roll
loope
imul
dec
jl
mov
repz
dec
aam
out
or
pop
ret
call
scas
lahf
aaa
lea
pop
fwait
push
sub
sub
mov
gs
mov
jne
call
repz
xchg
lds
clc
pop
in
ffree
mov
in
adc
incl
or
mov
add
adcl
fsubrs
mov
jae
xchg
push
data16
loopne
cmpsb
testl
mov
rcrl
adc
jl
add
shl
insb
in
cmpsl
jmp
sarb
sbb
pop
xor
out
repz
pop
inc
lock
adc
mov
int3
push
shll
push
in
inc
xor
dec
add
mov
inc
inc
or
xchg
lahf
cmp
repnz
cmp
sub
jg
lcall
in
decl
mov
jo
dec
push
subb
rolb
lcall
inc
or
movb
add
ret
or
inc
in
ss
lods
and
outsl
stos
scas
push
mov
sti
stc
hlt
xor
cmp
adc
xchg
inc
adc
sbb
aas
sahf
addr16
hlt
cwtl
popa
jle
mov
inc
pop
mov
dec
push
inc
movsl
aad
pop
pop
mov
popa
movsb
movsb
or
push
jb
fwait
cmp
hlt
push
rcrb
cmp
mov
cltd
xor
testb
fbld
cli
xor
mov
mov
lret
adc
and
mov
ljmp
push
fwait
inc
jne
mov
loopne
adc
jb
test
jl
sub
or
jns
xchg
mov
cmp
mov
ret
jle
mov
lods
shll
mov
lahf
in
push
push
shr
sub
ja
daa
and
popl
pop
and
xchg
push
mov
clc
adc
ss
pop
dec
cmp
pop
mov
lret
test
jno
inc
lea
xor
gs
xchg
mov
pop
outsl
arpl
mul
xchg
sbb
rorl
frstor
xchg
hlt
or
repz
mov
mov
push
out
lahf
out
mov
fcoml
cli
imul
loopne
mov
sti
aas
mov
mov
ds
lret
mov
insb
push
push
mov
cmp
dec
mov
lds
push
mov
ret
sahf
fcos
inc
in
mov
and
jle
jle
shlb
mov
out
lods
mov
bound
cld
dec
mov
or
pop
jle
cmpb
and
push
dec
xor
outsb
cltd
or
add
jno
cli
push
adc
add
lret
in
loope
lods
push
mov
pop
sub
dec
mov
das
out
adc
gs
outsb
bound
or
xchg
bound
aad
dec
sub
jg
push
xor
fnstenv
jge
stos
paddw
sti
mov
das
xor
rcrl
push
fmul
xchg
pusha
jbe
daa
or
jle
add
fistl
cmc
into
scas
std
xor
or
pop
cmp
pusha
or
insl
roll
cmp
mov
out
xor
jle
out
stc
stos
adc
sti
stos
mov
lcall
or
cwtl
fistpl
inc
mov
daa
int
mov
add
sub
xchg
jmp
mov
jge
xchg
fwait
sub
and
mov
mov
jo
mov
lods
loopne
movsl
push
or
data16
orl
xor
inc
out
sbb
dec
inc
fcoml
pop
lcall
push
lods
mov
jle
xchg
xchg
fwait
mov
and
sub
mov
pop
hlt
lock
sub
add
imul
loop
push
scas
xchg
aam
push
hlt
fs
xor
jge
sbb
push
orl
mov
test
fstpl
xor
push
sub
lods
rcl
roll
inc
pop
sub
mov
shlb
out
xchg
das
mov
jno
mov
pop
adc
mov
das
mov
sub
bnd
fidivrl
in
sub
shl
jne
icebp
xor
lods
mov
sti
cmp
push
jo
jne
mov
testl
inc
xchg
lods
in
jle
fadds
sbb
cmc
adc
adc
jecxz
and
sti
add
xchg
aas
rcrl
mov
xchg
stc
mov
lock
cmpsb
jp
test
mov
in
xchg
add
cmpsb
mov
jp
ret
cs
shlb
in
adc
mov
cmp
out
enter
adc
scas
aam
push
add
cmp
je
movsl
stc
mov
push
inc
popa
sbb
fisubs
dec
inc
movsb
movsl
mov
inc
xor
cmpsb
out
loope
lcall
dec
mov
enter
mov
daa
mov
loopne
cld
lods
dec
and
mov
cld
xchg
iret
mov
inc
out
push
inc
stos
push
mov
clc
test
iret
jl
mov
movb
mov
leave
repnz
xchg
inc
pop
sbb
inc
inc
cmp
xchg
outsl
push
or
inc
sbb
jmp
addr16
lds
or
adc
push
sbb
mov
or
out
push
adc
cmp
dec
loope
les
pusha
pop
test
dec
mov
mov
lret
mov
sbb
add
lds
data16
ret
inc
push
movsb
data16
sti
arpl
repz
xor
inc
mov
mov
xor
mov
fdivrs
push
mov
add
inc
in
pop
pop
push
push
mov
jne
xor
outsl
aas
idivl
lods
dec
sub
pop
sbb
adc
lock
ds
cmp
ds
lock
mov
lock
iret
push
or
pop
data16
push
or
pop
mov
imul
lock
mov
pop
sub
xchg
xchg
mov
jp
inc
pop
add
fwait
arpl
sub
outsl
inc
mov
add
aaa
ljmp
dec
ljmp
jg
mov
sbb
lock
mov
fs
outsb
mov
test
jns
out
pop
xchg
pop
popf
mov
int
in
mov
and
jg
ja
pop
gs
jle
mov
jae
mov
mov
cmp
fabs
int
xchg
incb
sbb
add
cmc
movsl
hlt
movsl
sub
add
insl
aaa
enter
clc
fbld
fimull
pop
cmp
jmp
mov
push
or
cmp
add
cmpl
xor
jnp
push
cmpsb
hlt
push
push
jl
or
imul
scas
lods
mov
call
movsb
xchg
or
sbb
loopne
push
test
fcoms
aad
cmpsl
mov
les
and
mov
mov
dec
sti
lea
or
and
ss
push
sub
lock
cmc
mov
imulb
out
inc
sub
repnz
mov
loop
adc
mov
scas
movsl
sub
sbb
add
adc
gs
sub
bound
loop
xor
aam
and
mov
mov
mov
and
push
jmp
fwait
adc
cmc
xchg
movsl
loopne
stos
xchg
pushf
push
jnp
incl
shlb
in
test
mov
or
fcompl
inc
or
test
aas
not
int3
cli
inc
js
xchg
lds
hlt
mov
jle
push
psubb
lret
push
push
cmp
lret
popf
adc
les
popf
nop
xchg
mov
xor
xlat
sub
jmp
sbb
dec
mov
cmp
cmpsl
stos
jno
inc
test
jns
sub
lods
fiaddl
lea
repnz
outsb
mull
push
push
pop
sbb
inc
mov
ja
movsb
cmp
add
push
dec
dec
in
jno
xchg
addr16
pop
mov
test
jg
repnz
sub
cmp
push
push
mov
enter
cmp
jg
movl
xchg
loop
hlt
nop
cmp
cwtl
mov
xchg
cwtl
ret
cmp
clc
popa
pop
mov
flds
sub
out
aam
outsb
jae
dec
aam
dec
les
xchg
add
adcl
cwtl
test
jae
lods
sub
imul
dec
sbb
outsb
test
mov
push
movsl
and
push
aam
rorb
test
stos
push
xchg
xor
mov
cmp
push
cmp
out
xchg
add
cmp
cltd
adc
mov
cmp
inc
cmp
and
jb
or
out
shl
xor
fidivrs
ja
mov
mov
inc
call
popf
sahf
stos
xchg
leave
fldenv
jae
dec
jns
fs
mov
mov
pop
jmp
push
pusha
lock
out
rcrl
daa
adc
push
pop
xchg
pop
lret
pop
pop
cmp
stc
inc
and
mov
push
les
mov
inc
leave
mov
dec
jl
gs
arpl
jne
adcl
cs
stos
inc
xchg
push
and
mov
cmp
icebp
push
xor
push
pop
dec
in
and
je
fiaddl
push
cld
popf
or
mov
cmp
in
mov
fcmovbe
inc
sub
jmp
cmp
call
data16
fmull
pop
test
in
sar
call
dec
cwtl
dec
push
cld
jno
pushf
sar
cmp
faddp
mov
addb
aaa
arpl
js
jg
into
xchg
pop
push
xor
clc
xchg
cmpl
or
sbb
pop
arpl
jmp
sub
pop
mov
ret
and
pushf
inc
jne
bound
sub
mov
testl
popf
sub
mov
mov
rclb
std
adcb
mov
jge
fsubrl
stos
sbb
cmp
movsl
inc
dec
inc
popa
sbb
lds
xchg
in
cmpsl
push
bound
push
rcr
dec
mov
ds
lahf
les
mov
cmp
jo
cwtl
push
iret
test
cmc
inc
adc
clc
ja
fwait
rorb
lahf
in
cli
dec
sbb
movsb
nop
cmc
aam
push
repz
mov
nop
push
xchg
std
popa
stos
xor
mov
pop
insb
test
andl
add
filds
loop
leave
js
or
push
mov
xchg
xor
ljmp
aam
mov
movaps
push
test
mov
rep
sbb
or
mov
sbb
xchg
fidivs
aad
jle
mov
xchg
mov
and
adc
fwait
aam
icebp
in
mov
mov
adc
inc
repnz
jp
loop
mov
pop
pop
js
sbb
clc
cli
in
mov
js
sbb
xor
frstor
push
xchg
jno
lods
inc
test
test
add
shll
divl
cltd
mov
pushl
fstl
jl
cwtl
es
mov
lock
cmpsb
push
cld
fstl
adc
mov
or
ds
mov
imul
stc
sti
bound
add
pop
add
mov
in
pop
ret
pop
inc
add
lea
ds
std
rol
movsl
cltd
imul
iret
mov
ja
xor
push
or
stc
pop
cmpsl
push
out
sbb
fwait
icebp
ljmp
imul
xor
push
pop
repnz
bound
adc
adc
je
dec
test
out
add
jmp
out
data16
arpl
nop
lock
and
jle
fnstcw
adc
inc
out
push
aaa
es
inc
out
and
pusha
inc
fists
lock
add
lods
fwait
add
ljmp
push
xor
data16
sahf
cld
imul
fcmovnbe
push
insl
dec
push
mov
loope
add
or
test
andl
sbb
xchg
cmp
mov
mov
or
lock
add
aaa
dec
mov
loopne
mov
lock
push
and
les
das
jb
inc
xor
inc
iret
push
pop
fwait
bound
xchg
shl
dec
mov
lods
cwtl
inc
dec
push
add
push
or
cltd
std
pushf
pop
pop
pop
push
fsub
repz
into
mov
jecxz
cmp
call
xor
mov
jbe
and
mov
push
mov
fsubrs
ffreep
pop
mov
add
je
test
leave
push
push
and
stc
add
push
fidivl
mov
mov
in
add
xor
jg
xor
es
jmp
out
dec
aaa
or
push
mov
push
fdivrp
aad
dec
cli
cld
call
dec
push
cwtl
mov
mov
xchg
lock
les
jae
xor
sbb
xchg
inc
mov
ljmp
adc
loopew
jnp
sbb
xor
cltd
and
cltd
pop
ret
stos
jae
pop
xchg
dec
dec
fisttpl
sbb
push
adc
push
jno
lahf
dec
cmp
mov
xchg
cmp
test
cmpsb
ljmp
outsb
pop
and
adc
sub
js
ljmp
sarb
sbb
xor
pop
icebp
jo
sbb
mov
cld
jo
sbb
mov
mov
outsb
mov
dec
sub
sti
pop
or
dec
or
outsl
cmp
paddusb
andb
or
loopne
add
pop
fsubs
repz
mov
call
push
out
mov
sbb
repz
sub
lods
clc
jmp
in
inc
mov
sti
rcll
xlat
push
lods
xchg
jo
dec
jmp
mov
mov
sar
xchg
ja
ljmp
and
inc
sub
jns
mul
inc
dec
cmp
adc
xor
enter
xor
sub
pusha
pop
ljmp
jne
add
mov
xor
dec
push
aad
fsubl
sub
aaa
pop
scas
bt
xor
cmp
pop
int
addr16
cmp
inc
pop
cltd
sarb
mov
pop
movb
adc
push
xchg
jge
fistpl
dec
pop
aaa
cmp
and
inc
es
ss
ret
in
mov
inc
lret
sbb
jo
sbb
mov
adc
icebp
std
inc
les
fmul
cli
xor
push
lods
sti
inc
or
mov
imulb
out
movb
adc
inc
add
outsb
call
sub
dec
xor
in
dec
cmpb
js
or
xor
invd
adc
push
cld
les
mov
cwtl
xchg
mov
in
cwtl
mov
sub
stos
push
mov
pop
mov
adc
aas
ja
mov
or
add
pop
adc
popa
leave
fildll
jle
add
push
or
call
aaa
or
roll
jae
jmp
dec
pop
jae
scas
jne
mov
mov
mov
mov
out
adc
ss
std
into
xor
cmp
xor
daa
add
loope
pop
push
or
stc
push
idiv
idivl
pop
jg
sbb
inc
and
shlb
fisubrs
mov
aad
imul
cli
mov
pop
ss
lods
cmp
test
aad
mov
stos
cli
dec
call
in
xor
xor
mov
and
mov
ljmp
movsl
shll
es
jg
stos
ss
lock
dec
js
es
pop
jmp
xchg
ret
rclb
xchg
adc
xor
and
mov
push
inc
fisubrl
stos
push
nop
add
sbb
and
aam
sub
stos
sbb
imul
or
add
push
cmp
mov
outsl
mov
or
sahf
aam
xlat
dec
cwtl
ficoms
ss
jae
push
cli
shll
sahf
sysenter
or
push
sbb
push
dec
sbb
adcl
repz
sbb
ret
mov
hlt
lods
sahf
sti
xchg
xor
add
out
mov
xlat
stc
in
xlat
loop
add
addr16
sub
xor
xor
cld
push
inc
xor
ret
and
pop
stc
cmpsl
sbb
pmaxub
sub
pop
popa
cld
cmp
or
add
and
pop
mov
test
push
popf
aad
ss
sar
insl
fidivs
ret
in
sub
xor
mov
js
roll
add
out
cs
stc
cmpsl
enter
sub
jae
sahf
data16
jle
xchg
subb
icebp
mov
pop
inc
in
scas
mov
icebp
mov
xor
cmc
pushl
fdivrs
pusha
aam
jecxz
test
popf
mov
enter
lods
cmp
repnz
cs
call
pop
jmp
insl
jae
jge
add
and
mov
adc
pop
xchg
inc
and
js
sbb
xchg
mov
mov
inc
test
pop
push
sbb
or
or
inc
fisubs
xor
cs
adc
mov
jmp
or
xchg
dec
shufps
call
mov
pop
mov
or
test
std
pop
xchg
dec
pop
lods
cmp
sbb
mov
push
xchg
pop
mov
adc
xchg
lds
popf
arpl
xchg
enter
test
aaa
loope
xchg
int
and
mov
add
pop
sbb
pushf
lods
sub
inc
mov
xchg
pusha
push
mov
sub
cli
cvtdq2ps
push
add
fnstcw
mov
orl
mov
push
loop
xor
pusha
pop
outsl
daa
addr16
lret
lods
mov
pop
pop
cmp
pop
pop
xor
js
mov
dec
mov
or
sarb
bnd
xlat
push
cmpsl
push
xchg
ljmp
lods
cmp
sbb
jl
add
bound
lret
iret
push
imul
popa
imul
lods
mov
jnp
push
out
popa
or
loop
imul
shlb
mov
dec
je
push
jo
jmp
or
lock
jmp
into
pop
sub
add
in
jnp
dec
sub
int3
cmp
ret
sti
or
jmp
push
fstpt
dec
insb
dec
fwait
push
push
aas
jb
mov
mov
push
and
cltd
add
pop
cmp
ss
das
adc
adc
push
iret
test
dec
dec
sub
rclb
leave
or
push
rcl
or
dec
lods
inc
popf
add
enter
pop
lahf
inc
sbb
cld
pushf
or
out
adc
jno
inc
fcoms
cmc
mov
in
inc
add
mov
mov
push
into
and
mov
andl
pushf
sbb
sbb
pop
adc
test
in
clc
cld
xor
push
lods
call
mov
dec
and
pop
dec
jb
out
call
leave
fsubrl
aam
test
push
jle
xchg
jg
mov
ljmp
and
or
lcall
cmpsb
and
sub
lds
repz
fs
ljmp
ret
adc
icebp
movsb
mov
aas
fsincos
xor
or
test
icebp
bnd
int
stc
pop
mov
mov
je
jb
or
adc
insl
dec
pop
enter
dec
ja
ja
xchg
scas
es
jmp
xchg
hlt
mov
iret
push
fs
jae
fwait
jbe
ja
jmp
hlt
add
fists
lret
mov
dec
loope
dec
add
icebp
dec
push
mov
or
cmpsb
and
out
shl
ljmp
xlat
and
and
call
enter
pusha
mov
fistps
add
sbb
add
xor
aad
cmp
sub
push
adc
sbb
cmp
push
pop
cmp
and
xchg
movsl
push
jb
jmp
push
jle
popf
test
push
mov
xchg
insl
repz
lds
and
pop
in
pop
int
imul
inc
loopne
sbb
or
loope
icebp
clc
shrl
ds
lret
xchg
cmpsl
dec
or
mov
pop
cmpsb
dec
xchg
or
or
mov
fcoms
xlat
push
fs
cmc
and
out
and
cmpsb
enter
psllw
dec
lods
push
addr16
aaa
jno
ret
scas
dec
mov
sub
jg
mov
inc
addr16
push
out
inc
pop
int3
int
mov
mov
rcrl
sub
jb
push
cld
xlat
xor
jl
cmp
cld
xlat
loop
shrl
pop
inc
pop
jge
dec
fldenv
lret
mov
mov
xor
cmp
out
mov
ficompl
movb
scas
add
xchg
pushf
pop
or
rcrl
cmp
sbb
pop
cmpsl
jbe
sbb
mov
insl
adc
dec
pushf
inc
mov
daa
ret
xchg
cli
push
cmpsl
rcrl
scas
jne
fwait
iret
cli
mov
push
xchg
scas
scas
inc
push
call
clc
xchg
mov
lret
ret
hlt
idivb
dec
hlt
jae
daa
sbb
dec
pop
jge
mov
data16
lcall
ret
hlt
adc
pop
adc
and
or
repnz
xor
dec
movsb
cmpsl
sbb
and
xlat
push
test
insl
push
sbb
sub
xor
mov
shll
inc
pop
inc
lret
jne
mov
or
fdivrl
push
mov
push
lods
ss
mov
in
or
out
dec
push
out
shll
jne
sub
lcall
ret
xor
pop
das
ret
movsb
cmc
enter
cmpsb
pop
xchg
or
test
xchg
clc
test
jo
mov
cld
sub
das
mov
mov
mov
ret
loope
jns
pusha
jns
addb
and
fdivrl
imul
popa
jno
add
mov
in
jnp
xchg
mov
mov
and
jnp
add
and
mov
aas
outsb
lret
lea
test
push
sbb
jp
inc
daa
es
pop
inc
stc
adc
aad
scas
imul
mov
push
addr16
sub
dec
mov
sbb
pusha
lds
outsl
flds
lret
sti
test
push
xor
sbb
ljmp
mov
pop
sbb
out
jb
xchg
cmpl
and
and
test
das
ds
test
negb
pop
sbb
aam
shll
xchg
into
mov
mov
push
push
decb
mov
shll
ret
xchg
and
scas
and
call
xchg
jns
add
mov
sahf
cwtl
outsb
add
pop
lock
lret
das
notb
les
dec
add
add
test
mov
push
pop
gs
cmp
sar
push
dec
sub
icebp
popa
pushf
sbb
jns
sbb
or
sti
sub
enter
jle
fsubrs
xor
insl
mov
mov
push
mov
pop
jnp
les
popa
mov
xor
into
push
mov
out
je
test
lods
mov
std
inc
sbb
mov
cmpb
fsubrl
imul
adc
shll
jns
mov
cmova
addr16
insl
inc
and
fimull
or
in
push
call
and
push
cmp
shl
pushf
sti
out
cmp
icebp
jmp
and
jno
xchg
jle
cmpsl
xchg
stc
and
int
out
jo
dec
inc
xorl
adcb
ret
jl
and
pmulhuw
imul
xchg
shl
sub
dec
and
imul
jmp
xchg
outsl
cmp
sbb
mov
jo
dec
shll
mov
into
imul
mov
daa
jp
gs
in
mov
je
insb
lret
mov
push
in
add
test
popa
sub
js
mov
scas
xchg
lahf
lods
and
lret
pop
sahf
sub
add
pop
pop
mov
insl
jecxz
loope
fnstenv
sbb
jns
adc
mov
int3
loop
test
fnstenv
pop
mov
add
mov
pusha
aam
jp
rcr
notl
push
xchg
push
in
adc
add
sbb
add
or
arpl
sub
pop
and
repnz
dec
test
test
push
mov
mov
iret
loopne
mov
jo
inc
sbb
inc
add
add
out
cmp
dec
cmp
sbb
xchg
inc
mov
call
jno
idivl
inc
fwait
mov
fstpt
fidivs
ret
push
ljmp
pop
insb
mov
out
inc
in
mov
out
fidivrs
mov
cmpsb
and
outsl
fcoms
push
sbb
xchg
lahf
sbb
out
xchg
nop
mov
and
fiadds
dec
bound
push
pop
jo
fcoms
jle
xchg
mov
jecxz
jl
dec
jo
loop
pop
jo
mov
cmpsb
test
add
or
dec
lahf
enter
jecxz
test
insb
xchg
test
int3
fdiv
add
cmp
leave
push
dec
jb
pop
and
out
pusha
mov
add
pop
push
rcrb
jge
fld1
frstor
xchg
cmp
inc
dec
mov
ret
mov
pop
pop
or
je
lds
iret
scas
mov
call
sub
push
loop
pop
test
shll
mov
pop
or
mov
or
mov
pop
push
shrb
jne
jno
mov
and
insl
mov
call
rcrb
ds
test
mov
xor
lret
mov
out
add
xor
int3
jnp
mov
call
or
hlt
jl
mov
arpl
sbb
in
jno
into
int
xchg
or
cmp
inc
sub
xor
adc
outsl
std
jp
or
inc
mov
and
clc
hlt
inc
cs
repnz
mov
add
jmp
outsl
xchg
sti
ss
sub
insb
mov
jnp
fsubl
xor
adc
shrl
shl
stos
ljmp
loope
push
ficoms
lock
jle
pop
lahf
stc
mov
mov
aad
insb
xchg
fcmovne
out
push
in
fsubl
or
imul
cmp
mov
clc
sbb
pop
cmc
adc
mov
into
push
add
pusha
and
sbb
jge
fldt
adc
push
push
out
push
fsubrs
pop
mov
in
je
push
mov
ljmp
xor
fwait
pop
xchg
adc
retw
xchg
and
pop
movsl
mov
js
jmp
jnp
adc
mov
aam
pop
mov
jnp
cltd
push
nop
popf
lods
adc
pusha
icebp
int3
lret
xchg
push
shrb
jbe
sub
nop
sbb
rcrl
mov
cmp
jle
and
lea
ss
jp
sbb
fwait
mull
leave
mov
sbb
xchg
add
dec
jb
jg
jmp
dec
mov
adc
lds
imull
and
test
andb
testb
addr16
js
shrl
sahf
sbbb
xorb
loop
jp
inc
pop
js
mov
negl
mov
sbb
pop
popa
cmpsl
pusha
xor
sub
icebp
jmp
jge
or
xlat
jecxz
ret
adc
cmp
sbb
inc
rorb
pop
dec
cltd
pusha
stos
and
xor
inc
push
add
add
pop
or
hlt
pop
mov
push
xor
leave
or
xor
or
pushf
cwtl
retw
sbb
dec
mov
aad
out
cmp
add
fcoml
cld
repnz
cmp
jno
xor
and
push
jae
sar
subl
mov
inc
test
mov
icebp
mov
ret
movb
cmpsb
inc
pushf
movsl
push
daa
xor
xchg
std
xchg
ret
fdivrl
imul
mov
mov
jns
or
xchg
imul
aam
aaa
test
in
fwait
les
ds
inc
fs
sbb
das
jecxz
leave
leave
and
sbb
ret
xchg
sbbl
fidivl
inc
jno
imul
pop
pop
fistpll
mov
clc
inc
pop
stos
lock
sarl
push
addr16
add
rolb
rcll
hlt
ret
adc
rcl
pop
xchg
or
xchg
es
dec
xchg
shr
dec
xchg
jno
imul
ffreep
lods
jne
repz
cmc
jl
sbb
or
add
mov
add
mov
sub
fdivrl
into
add
mov
add
ret
lret
xor
movsl
xor
xor
pop
icebp
cld
pop
movsb
fs
jnp
adc
add
cltd
pop
ret
icebp
cld
jno
js
das
jo
test
ljmp
icebp
fimull
cs
dec
int
fildl
rolb
pop
shll
add
mov
jmp
mov
movsl
inc
or
add
scas
addr16
add
adc
jg
popa
outsl
mov
jae
add
push
in
push
out
jmp
imul
pushf
push
and
adc
lret
xor
mov
adc
mov
subb
push
xchg
testl
cltd
xor
shlb
sub
push
jnp
pusha
mov
aam
fcoml
sub
adc
pop
sarb
je
faddl
cwtl
and
shrb
push
inc
and
hlt
sti
and
adc
push
cwtl
addr16
jb
test
iret
or
insl
push
jp
loopne
and
in
outsl
fistps
and
xor
inc
subl
inc
movsl
or
mov
adc
or
jmp
mov
xchg
mov
mov
dec
mov
stos
xor
sub
jp
xchg
ds
out
fsubrs
hlt
nop
and
sub
outsl
add
aaa
and
stos
shr
cli
rclb
jb
mov
or
sub
mov
ljmp
cmpsb
aam
sub
sub
mov
or
or
pop
push
into
jge
add
or
fimuls
ret
test
popf
sbb
test
push
ljmp
pop
mov
andl
jnp
jge
sbb
ss
push
repz
lea
addr16
mov
jb
add
cmpsl
mov
fisubs
stos
adcb
cmc
push
sbb
invd
test
fbld
cwtl
out
jns
ja
xor
mov
push
dec
dec
push
adc
cmpsb
aam
sub
in
sbb
lock
pop
es
inc
and
out
sbb
gs
mov
cmpl
ret
mov
push
mov
and
jp
mov
mov
jns
jb
inc
mov
inc
cmpsl
bound
cmpsl
sub
ljmp
mov
andl
cli
sti
mov
daa
mov
dec
push
jecxz
bound
inc
xor
ret
push
enter
cmp
cmpxchg
add
inc
fcoms
mov
adc
cmp
aad
mov
shlb
dec
ss
aam
mov
dec
imul
sbb
mov
xchg
cmpsl
xchg
loopne
inc
push
lret
pop
jae
jo
sub
mov
negb
mov
in
js
mov
mul
rcrb
cmc
jo
test
mov
bound
pop
xchg
push
mov
xor
leave
push
mov
push
push
ss
push
ror
xchg
push
mov
in
ja
movsb
lods
xchg
mov
cmpsl
xchg
sub
or
ret
jne
mov
inc
add
mov
mov
out
pop
mov
cmc
out
xchg
xchg
btl
lret
data16
aaa
jp
xor
push
lods
das
mov
test
xor
int
cmp
loopne
test
outsb
sub
mov
incb
lret
push
xor
loopne
stos
test
jns
popf
xlat
mov
and
lahf
fiaddl
ja
inc
in
rolb
stos
fnsave
mov
out
out
mov
mov
imul
dec
pop
cmpsb
rolb
std
in
mov
cmpb
jnp
mov
push
lods
dec
pop
inc
or
mov
ds
in
shlb
jle
cli
inc
sbb
mov
loop
dec
addr16
inc
shll
and
leave
aad
out
loope
inc
imul
mov
xchg
sbb
mov
sub
mov
xchg
adc
jne
scas
cmp
pop
je
adc
std
lret
sbb
ret
loop
loope
push
adc
jecxz
sbb
xor
bound
aad
jne
addr16
mov
mov
aam
aad
fidivl
out
mov
pop
rcrb
repz
cmpsb
repnz
cmp
mov
jb
push
or
fistl
lcall
in
sbb
data16
hlt
mov
cmp
out
ds
pop
icebp
mov
pusha
test
cmp
repz
out
outsb
dec
cmpsl
mov
js
dec
jno
pop
jmp
cwtl
negb
imul
xor
push
scas
pop
pop
xchg
js
push
in
xchg
mov
jl
adc
cli
dec
adc
lods
daa
dec
add
outsb
cmpsl
push
int3
xchg
movsl
lock
push
sti
adc
cmp
jl
int
adc
fcompl
cmpsb
call
sbb
cltd
cmp
out
loope
mov
cmp
mov
xchg
mov
push
sti
xor
cli
loop
push
sbb
scas
popa
push
loop
mov
movsb
xchg
mov
bound
push
push
inc
jbe
lock
ficoml
test
repz
and
mov
in
xor
jl
jl
adc
mov
mov
jae
sbb
fwait
mov
fmuls
sbb
mov
xchg
enter
xchg
sub
lret
out
add
pop
movsb
shufps
xchg
sahf
int
and
or
mov
mov
mov
dec
add
adc
inc
mov
lds
leave
dec
stc
addl
outsl
mov
cmp
or
mov
test
fldt
xchg
xchg
js
fs
nop
movsb
lea
mov
fwait
repz
pop
ja
mov
xchg
jge
rcrl
adc
or
push
pop
cs
mov
stos
sbb
and
ret
andb
push
scas
sbb
jnp
xchg
sbb
inc
jo
dec
daa
xchg
mov
mov
jno
inc
int3
out
jecxz
push
imul
sbb
push
adc
je
add
push
jl
jp
loopne
or
in
int3
mov
pop
out
addr16
pop
sub
sbb
in
std
xor
add
pop
or
mov
dec
je
inc
xor
xor
aas
fiaddl
std
pop
sub
adc
fidivl
fst
jae
test
or
cmp
insb
gs
fdivp
negb
popf
pushf
js
jnp
dec
rcll
addr16
aam
cmp
enter
repnz
xchg
jg
test
jge
repz
imul
test
cmp
cs
mov
aaa
cli
mov
inc
jbe
mov
dec
mov
mov
mov
or
mov
dec
adc
adc
pop
mov
add
js
aam
xchg
jnp
inc
bound
jae
mov
mov
sub
arpl
pop
repnz
cmp
push
xor
shlb
clc
ficompl
setnp
adc
js
orl
xchg
fbld
push
xor
add
jno
insl
imul
sub
jmp
push
cmp
cltd
jge
mov
inc
aaa
jp
out
pushl
push
push
jge
dec
aad
lahf
dec
pop
push
push
outsl
mov
cmpsl
add
mov
jnp
mov
mov
or
add
aam
pop
inc
mov
adcl
pop
adc
sub
lods
das
sub
aam
int3
sub
or
imul
xor
lock
sub
or
or
cs
fmull
sub
jl
out
or
jl
mov
jecxz
and
imul
or
cs
jnp
fisttps
divb
adc
sub
add
outsb
sbb
jno
inc
jbe
insl
push
stc
stos
mov
mov
mov
aas
dec
jae
or
push
lret
mov
jae
das
mov
or
push
jo
add
mov
lcall
pop
pop
jno
les
and
inc
enter
dec
xor
lea
jge
push
mov
pop
ja
mov
lock
fists
orl
sbb
test
cltd
jns
sbb
jb
nop
pushf
push
and
out
std
dec
or
jecxz
fs
fsub
lret
push
inc
mov
fdivrs
rcrl
push
xor
xor
jge
enter
stos
test
push
mov
test
sub
pop
sar
pop
movsb
xchg
add
mov
mov
ljmp
test
push
mov
ljmp
mov
jnp
fsubrs
pop
daa
and
and
jl
call
cltd
repz
and
push
pop
mov
jp
adc
mov
aam
adc
push
cmpsb
fistps
adc
xchg
push
xchg
repz
pop
movsl
outsb
daa
out
scas
cli
stos
push
push
pop
addr16
out
aam
addr16
xor
dec
xchg
dec
xchg
enter
ret
jecxz
and
insl
mov
shrb
lock
shlb
and
pop
jecxz
fwait
cmpsl
xor
mov
nop
scas
ret
mov
pop
mov
mov
mov
and
mov
ja
xchg
dec
mov
adc
outsl
push
add
mov
aad
sahf
dec
add
stos
invd
push
or
xor
push
cltd
dec
gs
js
daa
aam
addl
aas
push
push
neg
add
in
pusha
push
insb
pusha
lret
jno
cmpsl
mov
test
adc
dec
inc
cmp
sbb
sahf
mov
jl
cmc
rolb
or
pop
lret
dec
addb
push
insb
dec
xchg
xor
aas
jg
or
sti
jne
dec
adc
mov
xchg
nop
ss
les
or
cmp
push
xlat
jae
jb
pushf
scas
or
pop
lds
popa
sti
lcall
mov
push
mov
sbbl
nop
mov
repz
xchg
ret
or
and
add
mov
shll
ljmp
fcmovnbe
test
add
push
xlat
mov
jl
push
add
adc
xor
add
mov
xchg
iret
adc
icebp
add
mov
sbb
inc
insb
sub
mov
cmp
push
mov
cmpl
mov
cli
pop
or
push
popa
and
inc
lea
dec
stc
or
mov
mov
int
push
mov
mov
or
xor
enter
dec
nop
clc
rorl
jle
pushf
fwait
lahf
xchg
lods
stos
repz
and
xor
insl
cmc
xor
loopne
mov
cs
push
cmpb
enter
in
mov
ficompl
jge
sbb
jl
cmp
rcrb
not
push
cmpsl
ret
ret
sti
out
iret
cmp
inc
or
icebp
test
clc
jns
push
xor
mov
out
jge
js
cmp
mov
mov
mov
mov
inc
and
clc
inc
or
js
inc
xor
mov
mov
fcoms
lea
push
dec
out
sub
add
mov
adc
scas
shlb
xchg
rcr
jno
in
inc
movsl
adc
pop
inc
repnz
outsb
mov
mov
out
lods
out
loop
push
push
fnsave
sbb
fwait
loop
push
and
mov
js
outsl
push
arpl
pop
stc
fstl
fsubl
cltd
shr
pusha
leave
cld
flds
cmpsb
ret
cmp
cmc
cmc
xor
mov
push
xchg
ret
add
and
pop
sub
jl
add
loopne
or
mov
adc
inc
mov
insb
xchg
sub
sahf
jo
insb
lds
jecxz
push
add
xor
pop
filds
repz
mov
pop
xchg
call
rolb
add
int
out
mov
inc
addr16
pop
shlb
enter
loop
adc
scas
mov
dec
outsb
cmp
dec
in
add
shrl
inc
testb
push
jg
outsb
aam
outsl
xor
or
mov
push
pop
fs
cmpsl
cmpsl
aaa
mov
std
pop
jle
jne
push
fcomp
xor
out
stos
mov
in
xchg
mov
ljmp
rol
or
movsl
insb
pop
popa
xor
aas
cld
jb
and
xor
xor
mov
aad
fsubl
pop
cmp
aas
mov
mov
lcall
jno
xor
cmpsb
cmp
mov
ljmp
sarb
push
push
icebp
test
scas
push
sub
addr16
loopne
push
iret
icebp
clc
repnz
loopne
mov
pop
lods
jmp
dec
scas
arpl
ds
stos
scas
jae
and
bound
push
mov
imulb
xchg
fisubs
decl
lea
shrb
lea
sub
repz
mov
xor
sbb
push
pop
cld
imul
das
std
inc
mov
push
cmp
push
cmp
add
stos
jnp
push
rcr
dec
mov
pop
mov
sbb
insl
inc
xchg
sbb
mov
rorl
out
addr16
adc
test
jecxz
mov
lock
in
push
cmp
aaa
mov
mov
xchg
adc
inc
mov
jno
push
lret
mov
aam
gs
add
and
mov
out
ret
xor
leave
jecxz
pop
test
imul
mov
inc
iret
adc
xchg
cmpsb
jnp
scas
mov
cs
loope
sbb
sub
pop
insb
fidivl
icebp
loop
push
test
push
bound
adc
xor
jmp
dec
in
or
jo
or
inc
dec
pop
pop
cmc
cmp
aas
test
push
scas
in
movsb
pop
movsl
dec
mov
xchg
in
enter
je
popa
bts
out
push
dec
and
aad
sti
insl
out
aaa
aaa
sub
pop
dec
mov
push
lret
sbb
mov
hlt
icebp
jnp
mov
pop
and
in
rcr
dec
xor
xchg
jbe
insb
mov
dec
jno
mov
inc
dec
sub
push
sbb
xor
cmpsb
sub
lcall
dec
roll
jecxz
sbb
adc
lock
ret
or
jo
pop
mull
cmc
inc
arpl
mov
mov
push
std
pop
hlt
leave
jb
cmc
dec
leave
cli
xchg
ret
cli
jns
fisttps
sub
sahf
dec
mov
mov
pop
jnp
push
arpl
int
push
out
lds
ss
pop
mov
dec
and
loope
mov
pop
inc
add
add
jbe
pop
cmp
pop
xchg
push
xorb
fs
in
pop
daa
sbb
push
adc
popl
mov
mov
ficomps
mov
popf
icebp
push
ret
shlb
rclb
dec
dec
int3
push
push
in
in
shl
pop
dec
iret
cmp
sbb
sahf
dec
cmp
push
sbb
loopne
cmp
jmp
arpl
add
cmp
into
mov
pushf
rolb
pop
push
mov
add
mov
adc
jg
cmp
icebp
adc
pop
adc
sbb
jmp
cmp
or
jge
xchg
and
xchg
sbbl
xchg
push
push
cmp
mov
sbb
mov
fstps
movsl
data16
pusha
std
outsb
xlat
aam
add
xchg
into
mov
arpl
xchg
mov
aad
ret
in
xchg
lock
or
xchg
mov
test
pop
out
jl
inc
pop
and
or
in
sbb
mov
jae
ficoms
jmp
jmp
xchg
call
andb
hlt
jl
dec
pop
sbb
inc
scas
ss
fsubl
or
mov
lds
inc
fdivrs
iret
push
mov
popa
gs
rcl
push
test
imul
stos
inc
aaa
cmpsb
sub
pop
push
add
into
in
jne
out
adc
addr16
outsb
imul
and
mov
and
fcoms
sbb
pop
fs
push
jp
mov
insl
fiadds
test
movsb
data16
mov
jmp
lahf
dec
mov
xlat
rcrl
stos
and
sub
imul
mov
std
cmc
aaa
xchg
loope
popa
test
inc
mov
loopne
dec
add
adc
icebp
mov
push
mov
or
cmp
xor
cmp
call
adc
cmp
sub
xchg
clc
std
mov
pop
jnp
pop
bound
sbb
mov
in
int3
aas
mov
scas
jg
ja
fisubs
or
xchg
insl
mov
getsec
addr16
mov
jmp
scas
dec
dec
pop
addr16
cmp
add
xchg
push
push
out
iret
jno
mov
aas
sbb
loop
inc
out
jnp
addr16
ss
incb
mov
loope
sub
pop
dec
xchg
dec
dec
movsl
stos
add
in
pop
cli
fnstenv
xchg
jno
mov
repz
insl
sub
ss
fisubs
xor
mov
pop
mov
xchg
xchg
mov
addb
jb
jns
insb
in
lret
xor
xchg
test
sbb
jle
fs
add
fidivrl
sub
xchg
mov
lea
ds
mov
sbb
push
cwtl
bound
cmp
xchg
sub
mov
insl
mov
cmp
xor
pusha
mov
sub
insb
or
inc
xchg
xchg
mov
ss
fldcw
add
popf
sub
adc
jae
push
jne
fisttps
int3
push
mov
je
inc
ret
lock
sub
jle
inc
pop
push
jns
or
or
gs
pop
dec
xchg
xchg
das
jae
out
dec
jge
jecxz
pop
fimuls
nop
pushf
ss
cld
pop
inc
jp
pop
repz
loopne
inc
daa
and
xor
mov
in
mov
in
inc
lock
popa
mov
sbb
cmpsb
mov
mov
inc
sbb
and
pop
clc
ds
add
push
rolb
pushf
lods
sbb
sub
data16
jl
mov
das
jle
mov
negb
iret
mov
pop
cld
jmp
mov
aaa
les
xchg
xlat
mov
enter
addr16
jge
push
mov
lret
test
fnsave
loopne
in
and
sbb
js
rclb
mov
and
and
pop
push
fwait
xchg
rclb
xor
xchg
lds
push
lds
rcrl
and
sbb
ficompl
shrb
stos
stos
push
pop
repz
cltd
bound
sub
ljmp
mov
mov
add
add
pop
jl
sahf
fidivs
and
adc
sbb
cmpsl
sbb
inc
dec
mov
push
cmp
sbb
lcall
arpl
xor
mov
cli
imul
cltd
sbb
sub
and
pop
aam
stos
bound
aas
cmp
or
es
and
sbb
and
lods
movsb
push
or
xchg
inc
lock
push
cmc
inc
ss
test
xchg
or
jmp
xchg
sbb
xchg
jg
fadd
pop
nop
ljmp
add
mov
enter
shlb
lcall
inc
push
lea
cmp
in
inc
mov
add
lea
andl
insl
paddusb
and
jmp
push
and
mov
fbld
loope
xor
mov
lret
inc
pop
sbb
test
cmp
push
mov
add
je
pop
inc
sub
test
pusha
pop
imul
das
rcr
mov
xchg
dec
or
jg
xchg
pop
mov
mov
lea
xor
xchg
jbe
mov
xlat
mov
popa
iret
mov
adc
subb
rcr
mov
push
mov
lods
dec
jg
sahf
and
xchg
dec
xchg
mov
xchg
add
imul
insl
nop
jp
and
dec
out
jno
insb
aaa
sbb
in
andl
rorl
or
add
adc
add
fisttpl
push
movsl
cmp
mov
loopne
addr16
mov
popf
scas
sub
pop
andb
xor
add
movsb
or
pop
insl
sbb
pop
xchg
loopne
push
mov
jl
push
into
push
movsb
add
pop
lds
sbb
in
xchg
aaa
dec
sub
cmp
xchg
xchg
jb
cmpsb
pop
mov
xchg
sub
sub
nop
arpl
in
into
in
lahf
std
dec
xchg
xor
push
fldenv
outsb
test
stos
mov
shlb
ja
push
lds
mov
in
inc
add
mov
test
stos
sbb
xor
sub
lcall
repnz
add
jle
enter
push
push
jl
dec
sahf
sub
cmp
add
aad
mov
mov
sbb
pusha
imul
mov
shll
or
xchg
clc
int
adc
mov
push
ret
out
into
xor
pop
and
xchg
out
mov
mov
leave
loope
sub
dec
mov
sbb
sbb
ret
jne
lahf
jp
fisubs
lods
scas
or
and
sbb
inc
movsl
je
push
sub
adc
imul
shll
movsl
jne
movsb
ficomps
aas
lret
fdivrs
insl
outsb
data16
mov
cmpb
incl
cmp
mov
inc
xor
mov
xchg
es
sub
stc
pop
shlb
es
xchg
hlt
adc
jle
sub
sub
mov
dec
aad
sarl
mov
idivb
push
pop
jecxz
lret
push
imul
sarl
xor
xchg
xchg
sub
dec
clc
in
jbe
dec
mov
test
fwait
mov
inc
pop
fs
and
mov
adc
mov
movl
cwtl
xchg
adc
or
dec
mov
sub
fimull
jae
xchg
mov
clc
push
pop
sbb
or
xchg
jns
iret
xchg
cmpsl
out
imul
icebp
pop
mov
jl
mov
push
dec
ret
pop
repnz
movsb
sub
not
adc
cmp
add
stc
push
add
leave
movsl
mov
rcrb
scas
xor
shrb
stos
or
push
je
add
or
xchg
fisubl
push
jns
inc
mov
test
xlat
mov
fcmove
jp
lods
jb
stc
cs
xor
nop
mov
pop
movsl
inc
cmp
test
add
fs
aad
push
pop
mov
add
mov
les
leave
test
sub
xchg
test
mov
loopne
btl
adc
dec
mov
aas
orl
mov
jnp
and
sbb
xchg
cmpsb
rolb
inc
int3
lea
popf
mov
sbb
xor
imul
imul
imul
cmp
adc
cmp
sbb
inc
je
cmpsb
add
sti
mov
pop
into
sub
and
xchg
hlt
call
xor
inc
loop
add
xlat
dec
xor
rcr
cmpsw
jle
jecxz,pt
adc
mov
sub
add
pop
sbb
cmc
mov
add
jno
cmpsl
add
lahf
fadds
xlat
pop
push
bound
push
pop
das
push
nop
sbb
jb
ss
out
rcr
cmp
sub
push
fmul
sahf
sbb
xchg
lea
repnz
jb
pop
inc
fiadds
pop
nop
and
and
pop
adc
xchg
push
repz
mov
and
sahf
in
xor
push
icebp
outsb
fstpl
push
jmp
stos
or
push
cwtl
sbb
push
dec
je
jae
in
mov
xchg
int3
or
sti
into
gs
mov
pusha
dec
sbb
jo
jp
ds
divl
jno
mov
mov
push
push
jne
stos
loopne
xchg
lahf
inc
sbb
push
jbe
sbb
cmpsb
shrb
data16
std
loopne
rcl
rolb
mov
mov
es
into
jp
rol
sbb
sub
or
dec
mov
es
and
xchg
inc
add
dec
cmpsb
rsm
sahf
xchg
imul
ds
mov
lcall
lods
pop
sub
jle
jnp
insl
pop
es
arpl
scas
lea
test
aam
dec
mov
int3
add
or
sbbl
push
fiadds
pop
icebp
mov
mov
fsubrl
fwait
mov
js
lahf
xchg
lea
inc
nop
fwait
sti
mov
fisubrl
sbb
push
push
andl
callw
inc
mov
mov
sarb
or
sub
and
in
mov
xchg
push
adc
das
and
lcall
sub
movsb
lds
fwait
dec
sahf
sbb
mov
jmp
or
mov
lret
xchg
push
add
aam
mov
cmp
mov
nop
js
mov
xchg
inc
fcoml
repz
inc
fnstcw
fdivrs
out
scas
mov
popl
pop
pop
pop
push
call
cltd
insb
lret
mov
and
pop
add
xchg
fdivrl
and
pop
pop
adc
adc
lds
mov
cmp
lea
test
popa
rep
in
data16
outsl
and
test
fisubrs
pop
addb
mov
fistl
dec
cld
push
sbb
pop
push
ficomps
push
cmc
pop
push
push
mov
jno
xchg
leave
data16
pop
jne
lods
faddl
out
pop
scas
push
clc
adc
test
pusha
xchg
cmp
adc
scas
out
push
adc
stc
add
dec
mov
xor
mov
and
dec
pop
xchg
outsb
xor
and
push
cmp
in
inc
int
fcomps
pop
ret
dec
jl
loop
adc
mov
js
inc
jno
hlt
dec
cmpb
into
xor
icebp
jecxz
xor
hlt
sti
jbe
xor
push
hlt
subl
daa
mov
out
cltd
or
push
movsb
or
and
push
lahf
pop
mov
lds
imul
insl
cs
leave
lock
adc
js
adc
int
xchg
jl
ss
icebp
nop
repnz
cmp
mov
into
stos
in
pop
shlb
in
icebp
xchg
or
mov
dec
dec
fsubs
ffree
xor
rcrl
pop
push
or
fldt
and
add
sub
les
xor
mov
sub
mov
xchg
inc
cmp
lods
sar
aas
cmp
in
rcl
in
cwtl
pusha
cmp
in
insl
sub
xor
test
jge
inc
cli
aad
push
in
fucomi
rcrl
xchg
mov
inc
adc
rcll
mov
add
aas
xor
xchg
and
mov
adc
cmpsb
es
roll
cmp
add
xchg
add
push
mov
and
dec
xor
push
enter
xchg
mov
pop
pop
jo
fsubrl
pop
mov
xor
lods
fcoms
rcrl
movsl
mov
jg
xchg
aas
push
lds
sub
test
xchg
mov
jb
mov
mov
int
andl
sub
push
inc
or
test
pop
and
xchg
xchg
lods
jmp
lods
mov
add
pop
insl
stc
aas
outsb
repnz
sbb
loop
pop
es
aam
inc
js
lea
in
add
jno
insb
add
aas
std
arpl
stc
ljmp
daa
fldenv
jbe
jg
jmp
cmp
dec
jbe
sub
adc
setg
jb
xlat
cmpsl
out
insl
or
push
call
and
lea
xlat
cwtl
orl
xchg
pop
sbb
ret
push
sub
nop
bound
mov
incl
and
jmp
test
sti
cmp
pop
pop
out
pop
mov
scas
outsl
push
stc
push
pop
pop
lea
add
sub
pop
pushf
sbb
daa
hlt
pop
insl
jecxz
mov
jmp
or
lods
les
sub
mov
mov
mov
pop
xchg
negb
sub
push
enter
imul
push
xchg
out
pop
xor
push
sbbl
clc
inc
push
cmp
add
out
push
int3
inc
dec
loop
adc
in
popa
jb
in
sbb
inc
xor
cld
and
loope
adc
sbb
mov
inc
add
and
or
leave
popa
cs
stos
adc
outsb
fnstcw
adc
mov
push
xchg
mulb
clc
fildl
cmpsl
adc
lret
aaa
sarl
inc
mov
mov
arpl
cmp
jge
test
outsl
push
mov
add
rcll
add
push
pusha
xchg
mov
xchg
mov
gs
pavgb
and
in
dec
aad
inc
mov
in
jbe
xlat
sub
cmp
pop
mov
mov
idivb
popa
jne
cld
loopne
mov
mov
out
mov
jecxz
add
pusha
mov
mov
cli
pop
push
jp
push
movl
jmp
lds
popf
xor
push
icebp
mov
mov
iret
mov
push
daa
cltd
je
sbbl
xchg
inc
jp
aad
cmp
sbb
xor
sub
mov
movsb
add
mov
pop
pusha
jecxz
or
mov
add
mov
daa
dec
daa
cwtl
push
push
or
test
je
cmp
lret
cmp
xlat
mov
cmp
jne
stos
sub
fdivp
fimuls
incl
int3
aad
push
aas
inc
jne
aad
in
aam
in
or
jmp
lret
xchg
mov
cli
pushf
sub
mov
adcl
in
pusha
mov
out
into
push
or
sbb
outsb
sahf
aam
movsl
mov
pop
xchg
daa
stc
or
inc
sbb
pop
pop
sti
les
and
ret
push
mov
fcompl
jmp
push
ret
dec
sub
or
xor
xor
mov
jg
mov
popf
mov
insl
daa
mov
dec
and
call
sub
gs
or
ds
sbb
and
or
cvttps2pi
jecxz
ret
or
lret
mov
dec
scas
pop
jle
dec
pop
movb
cli
xlat
pop
test
not
sub
xchg
mov
fstpl
push
mov
xchg
pushf
jb
insl
push
loop
jp
imul
jne
dec
sbb
sbb
or
mov
aad
and
push
sub
cmpsl
mov
test
and
mov
lds
mov
inc
mov
inc
stc
mov
idivl
popf
cmpsl
pop
xchg
int
fildl
xor
mov
dec
out
xchg
add
mov
shrb
jbe
mov
ds
inc
movsb
jne
movsb
cmpsl
sub
enter
pop
aam
cwtl
xorb
lock
xor
xchg
cwtl
idivb
inc
andb
adc
mov
xchg
adc
push
push
fs
inc
push
shlb
sub
orl
cmp
sub
mov
or
out
call
cld
arpl
xlat
inc
push
xchg
aad
or
adc
inc
sub
pop
iret
inc
mov
fiadds
pop
hlt
push
cmp
jg,pt
mov
jmp
nop
jb
div
push
sub
lock
lea
xchg
sub
adc
in
and
out
inc
outsb
insb
cli
mov
out
roll
push
push
jno
xor
sub
pushf
mov
fnsave
xor
fcmovb
adc
jmp
arpl
xchg
sub
repnz
ljmp
and
dec
adcb
and
pop
loop
cmpsl
mov
mov
pushf
mov
jnp
iret
mov
inc
testl
cmp
xchg
imul
into
mov
fildll
inc
mov
adc
lods
popa
fwait
in
scas
and
dec
movsl
fdivrl
scas
aas
push
jbe
sub
or
pop
push
sbb
push
push
loopne
pushf
mov
fs
mov
lods
push
cli
out
push
jno
and
mov
lock
movsb
rcll
out
outsl
movsb
sbb
pop
out
jns
sar
mov
and
movsb
cwtl
mov
xor
pop
dec
adc
insl
inc
outsl
jle
mov
cwtl
mov
mov
sub
push
mov
cmpsb
or
inc
int
cwtl
adc
dec
shrl
mov
jnp
mov
in
push
mov
test
test
cmp
jg
sbb
cli
cltd
xor
incb
dec
ljmp
punpcklbw
mov
xchg
jmpw
xor
sbb
ffreep
cli
fistpl
data16
stc
rorb
pop
inc
lods
push
loop
dec
imul
jp
xchg
push
icebp
ror
popa
cmp
sub
dec
out
push
fdivl
mov
cmp
dec
jne
insb
outsb
cs
sub
sub
rolb
jl
lods
xor
jle
mov
enter
pop
or
jbe
mov
jno
incb
addl
push
pop
jns
jmp
fnstcw
cwtl
xlat
fidivs
leave
testl
aas
stc
insl
sahf
push
push
cmpsl
cmpsl
loopne
push
mov
filds
mov
jmp
std
sbb
adc
lds
dec
das
insb
add
jbe
pop
pop
das
in
js
in
rol
push
push
divl
iret
jl
notl
mov
xchg
fists
mov
das
mov
sti
mov
and
sub
xchg
aam
push
mov
aad
data16
pop
mov
nop
lea
pusha
in
out
out
bound
xchg
cmpl
xchg
inc
jle
lods
das
or
popa
pop
loopne
pop
xchg
aaa
xor
fnstenv
mov
cmpsl
jg
jae
pop
int
sub
data16
mov
dec
aad
in
xchg
cmp
dec
pop
mov
cmc
rcrl
aad
xchg
movsb
xchg
or
inc
dec
lret
inc
neg
fadd
pushf
ss
mov
shrb
sbb
pop
out
out
in
adc
or
xchg
mov
fdivs
adc
daa
xchg
leave
mov
xchg
hlt
mov
push
cli
inc
test
out
test
loopne
pop
dec
dec
or
jns
movsl
jns
push
fldenv
adc
xchg
mov
roll
into
lods
mov
arpl
jb
xchg
cltd
bound
cmp
ret
lret
fdivrs
cmpsb
mov
adc
adc
lret
xchg
or
test
push
cwtl
inc
cld
and
lds
sahf
cmp
cmpb
clc
inc
daa
or
push
push
decb
xchg
adc
lods
adc
popf
jb
andl
mov
das
lods
cmpsb
andb
cwtl
fwait
sbb
aad
test
xlat
loop
pop
clc
push
pop
jge
lock
pop
repz
sbb
and
and
imul
dec
dec
call
in
jbe
loope
xchg
inc
push
push
repnz
xchg
cmovo
mov
das
push
lret
ret
fwait
cmp
or
add
inc
cmp
cmpsb
or
mov
xchg
dec
loope
jle
dec
lods
orb
mov
jle
jne
xchg
ja
rcrb
xchg
mov
aam
lcall
cmp
cmp
mov
iret
mov
jp
cmp
fisubrs
ja
test
or
pop
dec
fs
pop
cld
jl
jl
and
popf
lds
adc
outsl
jg
mov
dec
jl
cld
mov
mov
cs
mov
sbb
fistps
cmc
push
jne
mov
push
and
scas
mov
or
ds
das
jp
xchg
or
insb
iret
test
pop
pop
cmpb
int
pop
mov
adc
rep
popa
sbb
jle
jnp
ret
imul
cltd
mov
jnp
shrl
int3
jle
cltd
mov
ss
outsb
lock
mov
or
in
mov
jne
jb
adc
pop
in
pop
mov
fistpll
cmc
repz
push
repz
jno
in
xor
push
ds
leave
fsubrl
pop
push
push
pop
popa
leave
je
push
xlat
ror
inc
cmp
inc
ja
xchg
pop
jns
xor
mov
jmp
rol
add
rcrl
cmpsl
push
das
mov
sub
shlb
inc
mov
leave
popl
movsb
aam
fldt
or
insb
mov
aam
mov
adcb
hlt
imul
lret
lahf
xchg
aam
or
stc
push
xor
dec
xchg
xor
sbb
in
sub
push
sbbl
fdivrp
sub
clc
jmp
add
aad
enter
and
and
cmp
in
or
repnz
xor
dec
pushf
sbb
inc
cmp
push
mov
push
cwtl
mov
and
icebp
ljmp
lcall
sbb
inc
gs
addr16
push
adc
lret
xchg
lds
jo
stos
jp
xchg
mov
dec
sbb
jne
or
mov
outsb
inc
cmp
push
and
inc
pop
mov
std
insb
sub
lcall
mov
pop
xor
jae
cli
loope
mov
sub
mov
add
ret
xchg
lods
mov
dec
pop
ljmp
cltd
insl
cmp
cltd
sbbl
dec
mulb
flds
xchg
mov
jo
mov
push
mov
xor
nop
and
xchg
lock
div
xchg
jecxz
nop
mov
mov
xchg
imul
pop
loope
out
std
test
and
xor
add
in
xchg
jb
cmp
dec
popa
adc
test
push
iret
ljmp
addr16
jns
aaa
cmp
daa
orb
xor
sub
push
sub
mov
or
movsl
or
and
xchg
scas
iret
icebp
cmpsl
int
les
add
fwait
mov
jle
mov
pop
jbe
sbb
das
cwtl
add
adc
repz
and
mov
or
loop
mov
ret
xchg
iret
xor
lretw
adc
in
fs
js
xchg
sbb
or
inc
sti
mov
dec
repnz
gs
inc
xor
cld
jno
mov
cmp
aaa
enter
mov
push
mov
mov
pop
sub
in
mov
dec
jns
jae
cmpsb
xor
mov
stos
scas
mov
xchg
lods
cmp
xor
test
ja
add
int3
xchg
and
ja
lret
sub
outsl
sub
mov
ret
scas
lahf
into
sbb
sub
push
mov
adc
dec
inc
jne
dec
xchg
mov
or
jb
popa
mov
and
in
pop
adc
sbb
pop
xor
mov
mov
xor
inc
mov
icebp
gs
push
ljmp
push
imul
xor
dec
out
jbe
mov
xchg
add
mov
dec
jl
shr
xchg
jnp
jno
push
xchg
push
outsb
iret
jle
xlat
pop
jae
mov
mov
inc
pop
mov
enter
in
mov
out
mov
jbe,pt
rolb
lcall
or
inc
je
inc
adc
and
lods
inc
insb
in
scas
xchg
inc
mov
rolb
sub
fmull
jae
lcall
mov
mov
stos
push
cmp
pop
push
lcall
fnstcw
enter
push
jl
ds
add
and
xchg
jbe
jmp
rclb
xchg
adc
xor
insl
daa
mov
add
out
mov
push
adc
sub
cmpsb
inc
jle
jp
leave
imul
jg
lods
popf
shl
sbbl
add
push
mov
jne
imul
sbb
cmpsl
mov
insl
test
dec
lret
lods
ja
cs
inc
mov
xchg
loopne
cmp
in
jle
inc
jmp
hlt
data16
add
pop
pushf
jp
imul
loope
leave
nop
in
popf
jge
into
int3
sti
jmp
pop
mov
cmp
xchg
push
movsl
mov
mov
jmp
or
jl
xchg
sbb
sub
inc
les
mov
pop
adc
rcr
out
pop
cmc
push
clc
pop
sub
shld
pop
jmp
jle
out
cmc
repnz
xchg
negb
fcomps
iret
adc
push
cwtl
push
int
lret
dec
sbb
sbb
lods
jno
outsb
aam
out
add
mov
stos
loope
adc
mov
sub
pop
adc
or
sbb
dec
push
push
into
icebp
mov
pop
or
add
and
mulb
add
adc
adc
mov
inc
add
imul
insl
out
add
sbb
pop
rcrb
fwait
add
scas
adc
sub
jle
mov
ss
inc
insl
insl
pop
aam
paddsw
xchg
mov
pop
xchg
int3
out
inc
and
fdivrs
fisubrl
and
pop
cmp
and
mov
push
bound
loopne
popf
mov
in
push
loop
and
popa
mov
xchg
ja
or
mov
and
popf
mov
test
popa
mov
div
or
jp
or
lods
mov
and
or
inc
fs
addr16
cmpsb
cmp
movb
ret
in
outsb
in
sub
sbbl
decl
ja
or
pop
sbb
pop
mov
mov
cmp
mov
add
pop
mov
adc
rcrl
mov
or
lahf
int
pop
mov
pop
fnstenv
aam
jge
add
mov
jnp
add
mov
adc
in
mov
add
shlb
mov
xchg
lahf
popa
mov
aas
fadd
das
adc
ret
insb
loope
outsl
cmc
ja
push
jo
or
xchg
jne
inc
push
jl
daa
xchg
add
test
add
mov
loope
ss
fldcw
mov
jbe
arpl
in
add
popf
scas
add
pop
adc
sahf
xor
out
sbb
cmc
jg
cli
xchg
iret
aaa
lods
dec
outsb
cmp
sub
repz
sahf
aam
dec
inc
fimull
shrb
dec
adc
xor
test
mov
inc
pop
lret
lret
lock
lods
incb
iret
and
jp
dec
gs
or
ja
pop
cli
mov
out
stos
aad
mov
push
cmp
xchg
and
push
mov
pop
mov
in
cmp
mov
xchg
repnz
pushf
pop
scas
test
pop
shrl
rdmsr
cmp
sti
push
fldenv
je
inc
mov
jne
push
jb
dec
adc
or
nop
and
mov
sbb
gs
andl
mov
bound
imul
scas
loopne
sbb
outsl
pop
rclb
test
js
fistl
ja
push
lret
loopne
dec
mov
inc
aam
pusha
int3
cmp
sub
mov
push
add
in
insl
insb
outsl
mulb
in
adc
clc
notb
shld
pop
outsb
mov
imul
aad
aas
mov
mov
pop
add
push
push
je
mov
jno
lea
std
xchg
fistpll
xorl
add
dec
daa
lcall
mov
lahf
push
movsb
loopne
insb
inc
dec
leave
jle
or
dec
pop
pop
pop
iret
dec
jae
sub
push
aaa
fcmovnu
push
cld
xor
jne
cmp
push
cmp
dec
jne
shl
cmpsl
out
inc
mov
xchg
hlt
xchg
clc
cmpsl
imul
ss
std
sub
aaa
mov
fsts
ficomps
loope
cld
or
xchg
sub
sub
shl
iret
and
cmpsb
and
test
xlat
and
ljmp
outsb
enter
inc
xchg
cs
mov
push
jb
stos
xor
mov
clc
pusha
popa
in
sti
pop
fsubrp
mov
xor
mov
dec
and
fstl
jl
jno
out
xchg
int3
or
insb
mov
mov
mov
out
adcb
mov
jg
mov
adc
idiv
and
xchg
pop
mov
bound
or
and
xchg
cmp
sbbl
mov
daa
add
repz
daa
bswap
pop
sub
popf
inc
scas
sbb
std
ss
aad
xchg
pop
sarb
mov
ljmp
addb
hlt
test
loope
add
in
or
adc
add
rol
fwait
add
dec
fs
jmp
mov
xchg
adc
jmp
add
pop
cmp
adc
iret
movsb
sub
jae
lret
jno
shr
dec
jge
add
lods
or
mov
enter
mov
sbb
or
mov
lcall
push
ret
pop
ret
fadds
xchg
and
xor
sbbl
movsl
inc
addr16
imul
out
repnz
rorb
inc
pop
outsb
mov
adc
mov
xchg
jne
clc
int
xchg
dec
mov
cltd
mov
out
jle
mov
or
gs
add
rcl
jno
test
jecxz
dec
xor
divl
idivl
pop
std
adc
movsb
xchg
push
jge
add
push
jns
cltd
push
sub
imul
insl
sub
testl
imul
fadd
cld
hlt
ret
pop
cmp
ficoml
jbe
cmp
fldcw
ret
aad
mov
pop
in
adc
cltd
mov
mov
std
cs
es
pop
and
inc
or
ds
dec
cmpsb
rcl
pop
lcall
xchg
mov
loopne
mov
pop
in
push
loopne
jmp
push
ss
icebp
loopne
into
stos
sti
sub
inc
pop
xlat
aad
loop
mov
jae
sub
in
stos
aam
pop
xchg
mov
jge
ret
ret
jge
scas
out
and
scas
mov
xlat
sub
pop
arpl
imul
loopne
test
sarb
jl
das
aas
out
jns
bound
xor
mov
and
cmp
mov
imul
std
lods
inc
ror
sahf
or
movsb
and
inc
ja
test
loop
outsb
insl
lret
jge
push
push
mov
cltd
lcall
insl
movsb
loop
lea
pusha
fpatan
inc
xchg
adc
jne
mov
mov
push
jp
orl
add
inc
push
sbb
scas
and
dec
aaa
inc
and
ss
dec
outsb
cmp
sub
or
rclb
aam
jmp
bound
inc
add
das
dec
into
sbb
cs
nop
adc
pop
lds
jo
add
test
adc
or
je
add
jmp
cmp
pop
divb
pushf
mov
loope
pop
pop
int
test
cmpsl
mov
stos
shlb
mov
test
add
mov
dec
sbb
cwtl
mov
adc
dec
rorl
mull
ds
inc
loopne
or
leave
imul
push
arpl
repnz
xchg
jmp
bound
fdivrs
aaa
jp
cmpsb
fs
cmc
cmp
jne
add
test
xchg
loope
cmc
or
add
dec
and
mov
sbb
loop
dec
lds
clc
fmuls
mov
jo
dec
xchg
dec
fnstcw
rclb
jmp
jne
or
rorb
ret
add
aaa
and
cmp
dec
sub
in
dec
leave
mov
out
sbb
pop
aaa
and
jns
ret
mov
jbe
outsb
ret
imul
and
stc
mov
sub
and
sti
movsb
cmc
push
enter
mov
dec
sbb
fwait
cmpsl
fisttpll
fstpt
lcall
pushw
jb
leave
or
das
iret
clc
jle
pushf
pop
scas
and
aam
sti
lods
sbb
in
pop
je
mov
int
leave
enter
lcall
pop
lret
cli
outsb
xor
scas
pop
cli
popf
jl
mov
shrl
sarl
or
cmp
xchg
jg
cltd
sub
outsb
mov
frstor
mov
leave
push
mov
sub
cmp
push
sar
pop
rcll
hlt
adc
loop
sbb
fistl
mov
fwait
push
jno
dec
sub
add
dec
dec
jl
and
int
jmp
ror
ret
cmp
daa
pop
mov
sub
add
sbb
rcrl
mov
fildl
test
jo
sbb
mov
or
aad
sbb
lret
sbb
mov
scas
movsb
and
dec
and
inc
je
cmp
mov
loopne
cli
stc
lret
pop
clc
fadds
insl
pop
popf
push
sahf
xchg
pop
les
xchg
mov
add
mov
jecxz
ficoml
mov
push
jl
sub
lea
clc
rorb
fidivl
sbb
cmp
adc
aaa
inc
cmp
repz
xchg
xchg
dec
out
lods
lds
cmc
fnsave
xchg
stos
cmp
jb
das
push
adc
dec
cmpsl
xchg
outsl
sbb
shlb
mov
jne
aaa
negl
dec
ret
push
pop
push
inc
shrl
add
inc
rcll
pusha
loop
scas
out
popa
sbbb
jmp
lcall
jecxz
jmp
or
aas
out
sub
mov
cmp
scas
mov
lds
mov
sbb
sbb
jns
pushf
mov
sub
mov
pop
mov
fsts
mov
cmpl
mov
fbstp
popf
nop
add
mov
popa
mov
js
enter
xchg
addr16
xor
push
mov
jno
cmp
out
pop
int3
xchg
sub
xchg
and
popf
xor
out
adc
outsl
xlat
scas
loopne
mov
hlt
add
mov
fsubs
cmp
xor
or
lods
xor
fildll
je
fsubl
pushf
mov
ds
inc
pop
repz
sti
push
jl
mul
push
aad
cmp
sub
ja
lret
xchg
loopne
lahf
test
adc
insl
mov
xchg
pop
mov
cltd
int
sti
hlt
dec
mov
sub
out
pop
movsb
and
pop
hlt
xorl
push
dec
ret
sbb
jle
fdivr
test
lock
pop
je
rolb
jg
and
ret
dec
arpl
in
pop
push
pop
addb
jo
jg
in
xchg
daa
pop
dec
jecxz
fs
popf
in
in
dec
dec
and
insb
pop
xor
lahf
les
enter
xor
data16
dec
repz
pusha
dec
sbb
mov
add
push
mov
stos
fisubrs
add
std
aas
shr
push
inc
nop
out
inc
inc
or
mov
pop
arpl
fstps
sub
gs
rolb
test
rcl
icebp
cmp
cmp
bound
mov
and
xor
sbbl
xor
jmp
add
jge
xlat
cmp
pop
lahf
xor
mov
mov
in
insb
fisubrl
jns
mov
scas
mov
subb
aad
xor
iret
dec
int
mov
pop
pop
push
pop
out
push
inc
xchg
gs
dec
mov
test
mov
or
push
push
sarb
and
jo
scas
lock
inc
xchg
movsl
or
ja
xorb
shll
inc
cmp
jno
cmp
psubusw
jg
insb
inc
cmpsb
xor
ss
sub
or
ljmp
lahf
dec
shll
fdivrl
cltd
fs
sub
es
inc
data16
inc
testl
adcl
cs
sti
std
pop
push
pop
aaa
mov
adc
outsl
scas
push
pop
movsl
cld
icebp
lret
mov
pop
dec
rol
std
push
pushf
adc
pop
push
stos
mov
cmp
mov
push
xlat
hlt
call
imulb
dec
movsb
xor
loope
bound
sub
enter
push
enter
insb
je
push
stos
out
imul
int3
cmpsb
iret
mov
jo
or
outsb
sub
fs
stos
flds
fstl
jo
in
push
fmull
mov
sub
cmpsb
cld
addr16
mov
mov
sbb
repz
add
mov
xchg
push
push
mov
inc
mov
stos
bound
mov
test
xor
ret
add
push
das
xchg
data16
addr16
insl
inc
jns
xchg
inc
test
sub
sub
and
and
mov
sti
mov
xchg
sbb
jb
insb
pushf
rorb
ficoml
push
sti
jp
sub
pusha
inc
ret
sbb
aas
dec
mov
dec
in
jno
es
aam
je
push
repnz
xchg
mov
imulb
push
nop
xor
test
xlat
pop
add
mov
stc
jp
stos
fwait
cmpsl
fs
loopne
cmc
pop
mov
sbb
dec
pop
inc
mov
or
jle
sti
adc
cs
rorb
aas
mov
mov
ljmp
mov
pop
mov
rcrb
lds
shr
mov
xchg
mov
xor
lock
pushf
jnp
adc
lcall
repz
pop
pushf
adc
popa
scas
repz
jns
pop
xor
mov
je
or
in
add
out
shll
sub
push
clc
and
je
jbe
cmp
cmc
fs
shrb
scas
mov
mov
inc
pop
insb
gs
jno
aas
cmp
pusha
insl
dec
add
pushf
cmc
xor
dec
dec
mov
sub
push
push
pop
lock
xor
inc
and
jns
or
inc
fcompl
lds
xchg
fcomp
mov
push
clc
sbb
loop
inc
sbb
jns
mov
cli
mov
sub
out
in
push
call
mov
xchg
mov
jne
dec
dec
lods
dec
mov
adc
test
pop
add
inc
sub
dec
inc
int
mov
cli
lahf
rol
push
add
cmpsl
inc
in
adc
pop
arpl
repnz
add
sbb
mov
or
adc
cmp
popa
add
lock
jp
leave
dec
es
testl
cmc
sbb
add
enter
adc
bound
cmp
mov
icebp
cltd
test
add
mov
ja
stos
push
out
ds
inc
xchg
or
jno,pn
fnstsw
not
inc
jp
or
jmp
xor
dec
out
cmp
jae
sub
lahf
mov
cs
dec
imul
jns
inc
xor
adc
sbb
in
sbb
and
movl
test
in
pop
mov
inc
mov
and
push
add
fsubl
int3
sub
add
leave
stos
dec
pop
cmpsl
cmp
lea
sbb
sbbb
ss
aas
xchg
out
je
cmc
inc
sbb
ss
sbb
add
xchg
and
notl
inc
dec
or
je
dec
ja
popa
rcr
rorb
iret
fisubrs
data16
movsb
xchg
shll
mov
xor
cmp
scas
mov
xchg
je
inc
mov
loop
jmp
pop
cmp
mov
or
mov
mov
imul
aad
pushf
inc
mov
adc
push
cld
dec
or
sbb
push
add
jl
xchg
mov
push
xchg
ret
lds
rcll
cs
push
mov
push
xchg
lock
dec
jne
ja
ret
dec
pop
fsts
jb
call
fsubl
xchg
jb
addr16
push
add
cmp
sub
or
pop
rcll
or
stc
inc
bound
jnp
jecxz
push
dec
or
in
and
push
xor
test
loop
test
dec
jo
test
xor
push
pop
mov
xchg
jmp
push
mov
push
cli
mov
add
imull
sbb
mov
mov
roll
dec
aas
pop
int3
mov
sub
inc
mov
dec
rcrb
andl
fdivrp
setp
add
inc
enter
lock
shlb
pop
icebp
test
js
lahf
sbb
sbb
and
testl
js
xchg
push
pushf
fwait
dec
and
mov
int
lock
addb
adc
aam
cmp
pop
mov
std
repz
cmp
push
fst
aam
jl
adc
insl
je
inc
cli
sahf
sbb
adc
shlb
mov
or
daa
jmp
jo
test
or
fsub
jp
loopne
cwtl
sub
sbb
sbb
adc
sbb
push
cmp
outsl
lcall
sti
jb
xchg
mov
inc
loope
add
mov
ret
pushf
out
xchg
jg
push
mov
jne
icebp
mov
imul
jbe
mov
pop
xor
stos
jl,pt
pop
icebp
pop
fdivs
pop
inc
call
outsb
mov
push
shrb
adc
pop
mov
insl
outsl
loopne
ficomps
or
adc
mov
push
lock
loopne
xor
cs
fistpl
sbb
out
inc
stc
adc
add
and
mov
inc
or
pop
pop
mov
dec
xor
jp
cmp
mov
jg
fildl
sub
rolb
or
push
in
les
ljmp
fstps
in
ret
xchg
jnp
push
in
dec
cmp
ljmp
in
jmp
popa
mov
fwait
shlb
add
cltd
jp
inc
addr16
out
cli
add
ss
mov
icebp
divl
xor
sub
outsb
jecxz
call
fcoms
sub
mov
xchg
mov
xchg
rcrl
inc
insb
pushf
sbb
pop
push
xor
and
outsb
leave
xor
movsb
addl
js
out
pop
pop
outsb
cmp
inc
repnz
ret
mov
jge
mov
xor
pop
daa
cmc
xchg
xchg
and
cmp
iret
jle
ljmp
jno
cltd
ror
mov
pop
sub
xor
add
sarb
imul
ljmp
enter
lock
and
mov
xchg
test
repz
out
fadds
lock
pop
and
cwtl
sub
sbb
xor
icebp
xor
test
jnp
les
fs
insb
call
pop
je
pop
popa
stos
mov
pop
or
in
aad
adc
clc
cmp
sub
pop
ret
inc
into
push
push
dec
xchg
mov
lds
mov
pusha
push
xchg
pop
lret
lahf
xor
xor
and
dec
daa
test
out
add
mov
popa
fwait
pop
dec
xchg
ret
int
jbe
push
mov
pushf
pop
dec
stc
mov
pusha
jp
lds
cwtl
loopne
vsubsd
mov
cs
cmp
lds
int3
stos
fstpl
or
mov
and
jae
imul
out
adc
in
push
into
sbb
lret
dec
adc
push
adc
mov
orb
xchg
adc
pop
insl
mov
mov
jle
mov
outsb
and
scas
leave
push
mov
sbb
movsl
rcrb
lret
shll
and
xor
add
sbb
push
cmp
fisttps
push
roll
dec
mov
push
fistpll
dec
dec
ffree
stos
in
cmc
pop
sub
adc
add
sarb
jl
sbb
sarl
pop
dec
jl
loop
in
mov
movsl
mov
cli
popa
movsb
cmpsb
ror
jo
into
mov
push
cmp
and
sarb
insb
jl
dec
push
lods
inc
mov
mov
sub
add
shr
ss
mov
lds
push
pop
push
jmp
mov
adcb
ja
push
in
cmp
int
out
ds
push
fwait
cwtl
repz
ret
inc
pop
pop
lods
push
sub
addr16
xor
dec
leave
sub
push
or
xor
mov
or
pop
idiv
outsb
fdivr
cld
das
stos
and
push
fiadds
insb
mull
mov
mov
out
jmp
push
pop
jge
inc
lret
mov
xchg
jnp
es
mov
push
cmp
faddl
adc
xchg
fwait
rorb
cmc
xor
jmp
scas
mov
or
inc
gs
push
dec
out
mov
xchg
xchg
jp
push
es
leave
inc
push
push
sub
push
out
sbb
hlt
inc
aam
xchg
xchg
sti
push
jo
movsl
push
sbb
sub
ljmp
jmp
add
es
leave
arpl
push
xchg
fsubrs
rcrl
jb
lds
int3
jno
negb
xorb
dec
jmp
xchg
pop
in
xor
adcl
mov
aad
in
in
cmp
mov
pop
shrb
aam
mov
add
mov
gs
sbb
cwtl
dec
in
pop
das
fdivrs
add
aaa
in
mov
int3
call
xor
mov
sbb
push
ficomps
neg
lahf
mov
fldt
fsubrl
cs
adc
mov
shlb
pop
dec
sub
and
adc
ret
or
test
movsb
arpl
in
loope
push
insl
icebp
iret
or
loope
insl
dec
cmpsl
dec
test
add
or
mov
cmc
ds
cli
test
stos
adc
fs
pop
mov
cmp
dec
int
sub
dec
pushf
jl
aad
adc
out
sub
hlt
leave
pop
in
loopne
je
stc
push
hlt
inc
mov
inc
aaa
cmpsl
mov
push
stos
std
sbb
mov
adc
fbld
xlat
jns
loopne
jbe
out
movsl
test
test
dec
adc
inc
inc
out
ljmp
xorl
xchg
inc
pop
loope
pop
lods
adc
push
mov
stc
loop
popf
jle
xlat
mov
cwtl
inc
test
cwtl
lods
into
xchg
pop
imul
mov
adc
daa
and
clc
shll
sub
stc
adc
out
shll
jecxz
icebp
sub
or
outsl
mov
mov
sub
imul
xor
sub
int3
jmp
shll
push
pop
sub
jnp
mov
je
mov
xor
nop
cmp
int3
fsts
cltd
pop
jg
stos
sarl
inc
call
insl
decb
test
xchg
nop
push
ret
mov
adc
xchg
in
aam
sbb
xchg
mov
neg
scas
xor
sbb
xchg
add
fnsave
outsl
sub
pop
fldenv
or
lock
sahf
je
js
insl
push
popa
mov
and
jmp
cmp
mov
rol
out
iret
push
push
mov
popf
movsb
out
in
iret
dec
bound
call
ror
sarb
repz
mov
outsl
mov
jp
pop
push
mov
and
mov
cmp
jo
push
pushf
inc
int
pop
ret
xchg
and
pop
and
sub
jb
push
xchg
ror
imull
bound
hlt
mov
xor
sbb
aas
xor
mov
jmp
or
sbb
mov
stc
push
test
adc
stc
dec
jg
add
mov
jle
outsl
addr16
lcall
lds
pop
sbbb
cmp
add
xchg
and
jo
nop
loope
cmpsb
stos
sub
lds
jae
or
pusha
cwtl
decl
outsb
imul
jecxz
dec
fcomp
ret
jo
pusha
dec
xchg
lods
push
bound
fistl
xchg
jmp
pushf
or
cmp
clc
pusha
sbb
mov
dec
xchg
or
adc
ss
adc
cs
out
adc
sbb
or
sub
dec
pusha
sti
jb
jle
int3
aam
mov
inc
jb
or
lea
or
and
out
hlt
mov
fcomps
add
ret
stos
cmp
test
xor
inc
faddl
cmpsl
leave
mov
xchg
or
subl
lret
lahf
sahf
push
mov
icebp
int3
scas
ret
xchg
aaa
mov
and
pop
push
pop
and
mov
imul
mov
aas
cmp
stos
dec
lahf
jge
mov
lea
ja
sbb
adc
jb
add
push
push
jmp
jo
lret
push
mov
ret
cmp
movsb
xor
push
in
sbb
and
inc
movsl
mov
fsubr
dec
xchg
sub
sub
lahf
push
in
mov
sbb
adc
xchg
xchg
or
ljmp
arpl
les
xchg
mov
xchg
jge
and
or
sub
movsb
ret
mov
pop
loop
lea
stc
icebp
pop
loope
scas
int
lds
dec
cmpsl
push
jge
adc
inc
fnstsw
aam
cmp
lret
mull
inc
clc
mov
imul
inc
ss
loope
jecxz
fsubrl
pushf
fcomip
dec
repz
lcall
or
rcr
mov
pushl
leave
push
inc
jle
sub
lret
fwait
jg
add
ljmp
lahf
push
inc
movsl
xor
push
dec
dec
mov
sbbl
enter
and
push
pop
cmpsl
cmp
nop
inc
add
jp
jo
mov
mov
add
mov
imul
test
jle
cmc
lods
xchg
addb
in
mov
inc
ja
mov
inc
arpl
sub
mov
aam
outsl
dec
mov
cmp
inc
popa
test
inc
jns
cmc
push
xchg
gs
adc
xor
push
mov
lahf
sahf
jg
mov
xor
ret
shr
sub
xchg
loop
sbb
sub
xor
stos
mov
in
pop
dec
cmp
outsb
push
and
rolb
xchg
repz
aam
cmpxchg8b
scas
call
das
pop
mov
xchg
push
rorb
mov
add
sub
inc
bound
jb
push
mov
decb
cmovge
inc
cwtl
pop
sbb
iret
lcall
testb
mov
lret
std
rorb
sti
std
jmp
stos
lcall
xchg
in
aam
mov
and
lea
xlat
lahf
hlt
test
aaa
xchg
cli
xchg
lea
pop
in
xlat
pop
dec
mov
idiv
inc
test
sbb
dec
cmc
jnp
dec
rcrl
cmp
mov
shr
aas
jecxz
xchg
sar
cmp
mov
dec
xor
pop
xchg
xchg
les
add
cld
scas
divl
ret
mov
addr16
jnp,pt
movzbl
xor
pop
rolb
int
xchg
stos
sbb
pop
fisttpl
iret
fisubrl
xchg
stos
stos
pop
imul
pushf
cltd
jle
add
sub
cs
sbb
aam
aaa
arpl
xor
clc
push
add
sbb
mov
cmp
jae
call
adc
push
cltd
push
jb
out
mov
mov
adc
mov
dec
mov
out
adc
fdiv
push
xchg
leave
ljmp
lahf
mov
loop
mov
pop
jo
dec
hlt
pop
in
mov
int3
pop
imul
cmp
ret
nop
call
out
js
cmp
xchg
int
push
stos
sub
in
fsubr
shl
fcoml
jae
mov
mov
sub
ja
jmp
movsl
in
sub
xchg
sbbl
mov
pushf
out
pushf
loope
loopne
jb
enter
pop
std
xchg
sbb
pop
sub
dec
inc
jbe
dec
push
xchg
mov
adc
jno
test
pop
popf
ret
loopne
mov
call
bound
pusha
inc
outsb
iret
jge
and
andl
push
sbb
jne
shll
xor
mov
and
push
mov
cmpl
inc
adc
jo
xor
jmp
fcom
cmp
test
push
pop
test
mov
arpl
mov
int3
sub
xor
rclb
inc
insb
stos
int
mov
pop
inc
lret
pop
sbb
pop
push
inc
into
fdivp
in
out
push
out
pop
out
mov
xlat
in
cli
mov
out
push
out
lcall
shlb
inc
ret
es
rcrb
and
xchg
cwtl
stos
or
add
cmp
and
mov
dec
mov
jb
pop
push
xlat
mov
jge
js
fnstcw
shrb
pop
sbb
popf
ss
test
in
iret
push
fwait
stc
xchg
adc
jne
into
fwait
roll
xor
lods
mov
jmp
pop
outsb
sahf
outsl
movsl
bound
xchg
sbb
hlt
adc
int
mov
in
les
call
repnz
aaa
mov
cmc
lret
jne
inc
jle
sbb
mov
outsl
or
pop
jl
jge
push
imull
jge
pusha
ljmpw
sbb
jae
jmp
xchg
jo
inc
data16
out
ficoms
movsl
rcrl
cmp
pusha
fadds
pop
mov
out
adc
add
cmp
rclb
inc
jb
xchg
inc
push
push
lret
call
mov
pop
lods
or
fcmovnu
adc
arpl
out
in
fdivrp
mov
stos
add
adc
jae
enter
test
test
jae
daa
pushf
xor
sub
pop
punpcklwd
adc
mov
ds
into
shrl
ret
lds
cmp
rcrb
pop
and
into
arpl
push
jp
add
shrb
outsl
vpmacssww
repnz
aas
and
imul
ret
outsl
xchg
stos
xchg
jns
mov
mov
mov
mov
inc
mov
cmpsb
fdivrl
push
scas
sub
cmp
add
inc
pop
xchg
inc
push
sbb
jns
push
ss
adc
sahf
jl
pushl
repnz
sbb
jbe
dec
inc
add
lods
bound
push
movsl
lcall
cmp
mov
push
fldenv
sub
aaa
stc
or
enter
movsb
jp,pn
adc
daa
mov
add
fwait
push
jg
mov
testb
loop
cmp
sub
mov
adc
sbb
nop
jmp
arpl
gs
loope
adc
cs
aam
sub
enter
or
xor
add
or
repz
sub
inc
and
mov
push
stc
je
popa
aad
sbbl
or
sub
lea
dec
push
lahf
cmpsl
ja
cli
jecxz
sub
add
push
test
hlt
lods
pop
aad
bound
dec
cmp
push
pop
inc
push
idivl
mov
outsl
in
pop
jle
loop
cmp
flds
mov
dec
divb
sahf
sti
mov
push
xor
rclb
mov
cmp
arpl
js
push
mov
cltd
movsb
dec
in
loop
cmc
mulb
into
pop
loope
sub
push
adc
aam
std
jno
into
in
test
add
scas
cwtl
lret
jae
cmc
imul
xor
fwait
dec
insb
cmc
out
adc
inc
jbe
xchg
xor
lcall
mov
dec
repnz
pop
pop
leave
or
inc
in
inc
or
jl
mov
aas
sbb
stos
stos
int3
push
mov
mov
sbb
push
sub
out
mov
mov
nop
stos
mov
test
jo
cmp
jo
adc
xor
jb
or
mov
lret
insl
int3
aas
mov
int3
arpl
subb
jno
xchg
sti
adc
sbb
lods
rclb
xchg
ror
lahf
xchg
mov
fistps
xchg
pop
or
inc
xchg
insb
jns
cmpsl
shll
ret
jno
out
xchg
cltd
adc
push
adc
jge
inc
pop
test
roll
mov
adcb
and
aaa
cltd
cmpsb
stc
dec
mov
ja
jmp
push
fwait
sbb
aam
xchg
scas
jno
mov
dec
mov
jge
and
push
dec
cmpsl
testb
jl
cmc
sbb
daa
mov
xchg
jmp
sahf
add
cmp
inc
sbb
mov
mov
dec
push
cmc
pop
adc
fistl
leave
incb
and
push
push
movsl
push
push
sbb
or
test
andl
push
orl
popf
push
xor
adc
mov
out
nop
cltd
clc
jl
subl
cli
adc
pop
andnps
lret
enter
jb
fstps
rcrb
push
jno
bnd
mov
shll
jl
and
or
add
int
pop
out
lahf
das
cmpsl
and
inc
cmpsl
push
lcall
xchg
push
js
push
rolb
xchg
inc
mov
push
pop
jae
fstl
and
push
loop
jg
cmpsl
or
in
mov
icebp
hlt
inc
arpl
iret
xchg
mov
insl
cmp
movsl
jbe
jae
push
out
xor
mov
loop
sbb
xchg
out
push
popf
jp,pn
mov
arpl
ds
push
fucomi
imul
sahf
lcall
dec
lods
sub
jno
fcmovnbe
add
movl
mov
lahf
inc
adc
je
in
mov
and
mov
or
xor
movsb
and
movsl
cmp
std
inc
sbb
adc
pop
jle
mov
sbb
sub
cmp
adc
sub
lret
mov
repnz
push
fcmovnbe
jg
lret
fildll
push
sub
and
subb
cmp
mov
jmp
inc
ret
lret
popf
cmpsb
xchg
xor
mov
dec
and
nop
filds
pusha
add
sbb
add
push
push
push
sbb
sti
jb
mov
push
pusha
inc
push
ret
mov
add
ss
or
sub
mov
fnstsw
scas
cmp
jno
xchg
bound
push
sti
mov
lret
mov
inc
stos
mov
jnp
or
xor
loopne
aad
cli
mov
add
cmp
fldcw
inc
pop
mov
negl
xor
scas
dec
call
bound
in
popa
adc
mov
pop
stc
sub
push
and
xchg
sub
mov
std
fnsave
dec
jo
xchg
add
lret
and
es
test
and
xor
lret
cli
jns
stos
dec
les
popf
sub
push
scas
stos
or
jmp
dec
pop
imul
mov
outsb
mov
mov
xchg
mov
fdivrl
jns
andl
or
lods
lea
push
jae
and
shl
push
cmp
orb
xchg
stos
ret
cmp
lods
lods
fs
mov
js
inc
ss
xor
xor
bound
xor
dec
lahf
pop
sub
cmp
repz
dec
sub
xor
cmp
imul
push
test
mov
xchg
pop
test
rcrb
mov
int3
test
pop
clc
sbb
movb
mull
jmp
and
shl
out
ds
outsb
fists
ljmp
loopne
adc
mov
outsb
dec
dec
mov
out
xor
mov
jb
cmpsl
mov
fstl
jae
cmp
mov
jae
in
push
xchg
sbb
or
xchg
decl
mov
push
test
in
adc
ret
jbe
dec
cmp
aas
cmpsb
enter
mov
enter
lret
les
push
inc
mov
cmpsb
das
dec
js
jl
xchg
shll
rcrl
sahf
cld
mov
inc
mov
or
adc
add
and
sub
dec
jmp
add
outsl
xchg
adc
adc
xchg
es
xchg
lcall
adc
push
or
stc
and
push
sub
mov
adc
or
jno
sub
aas
pop
lods
dec
cmp
push
imul
or
push
and
push
inc
push
jle
lods
das
sbb
xor
pushf
lods
in
adc
pop
sti
push
xor
or
jbe
pop
sti
fimull
add
add
fimuls
inc
and
divb
int
pop
jo
lods
or
or
jmp
push
hlt
arpl
test
movq
jmp
cmpsl
jo
sub
ret
loopne
sbb
arpl
sbb
pop
out
dec
mov
sub
jne
inc
test
stos
push
pop
call
adc
scas
add
fidivs
inc
inc
loop
mov
mov
and
sbb
in
addl
outsl
adc
addr16
arpl
mov
dec
xor
sbb
aad
ficoml
pop
sub
adc
lods
push
ror
pop
inc
adc
arpl
fsubr
xor
loopne
jl
cwtl
mov
and
imul
or
cwtl
mov
ds
lods
or
aas
add
sahf
sub
movsl
sarb
sahf
mov
imul
jnp
aad
jo
iret
jo
or
arpl
sub
sub
xor
std
mov
jmp
int
in
sbb
je
in
enter
ret
out
nop
rolb
mov
ja
stos
lods
roll
sub
sbb
adc
aaa
sbb
lcall
pop
jmp
clc
inc
in
mov
or
adc
sub
iret
push
mov
add
scas
in
fdivrs
mov
mov
sahf
insb
lahf
xor
clc
xlat
fsubrs
shlb
add
mov
ret
or
sub
inc
enter
pop
dec
sub
inc
in
xchg
jg
add
out
cmpsb
lret
sbb
push
inc
fsqrt
pop
mov
adc
mov
jns
sub
jb
outsb
push
or
jns
shlb
cmp
pushf
jae
xor
rcl
test
push
pop
adc
or
cmpsb
jmp
xor
js
cmc
lcall
add
pop
fisubrs
mov
ds
hlt
out
jb
mov
push
lret
xlat
sbb
fmull
enter
push
fcmovnb
and
push
inc
adc
dec
push
xor
pop
ds
jg
jmp
out
paddusw
sbb
data16
jbe
pusha
in
ret
and
inc
or
and
arpl
push
psubq
daa
pop
sbb
test
mov
bsr
dec
idivl
cmpsl
out
repz
xor
lcall
mov
mov
daa
sahf
pop
rorl
xor
xor
mov
movsb
shrb
xor
dec
cmp
dec
fcomip
ret
ds
mov
xchg
lock
pop
or
jo
decl
pop
pop
sub
pop
mov
add
mov
jle
lds
or
xor
test
rcrb
ja
addr16
add
repz
cmp
fucomi
push
mov
and
sbb
stos
adc
inc
imul
in
enter
mov
pop
rclb
stc
bound
inc
push
dec
out
incl
jno
add
mov
sarl
cld
out
xchg
dec
in
shlb
pushf
test
fcompl
nop
mov
jns
jl
icebp
push
and
pop
rolb
cmp
sbb
testl
stc
lock
pop
lret
dec
dec
and
pop
sub
add
cmp
push
cmp
mov
and
mov
pop
xchg
dec
cmc
daa
test
test
sub
mov
outsb
push
mov
imul
mov
add
xor
loopne
mov
push
inc
out
bnd
outsl
inc
or
cmc
cmp
rcrb
loopne
dec
mov
mov
cmp
pop
int3
aam
nop
dec
dec
and
dec
jne
pop
push
mov
dec
into
leave
or
pop
repz
cmpb
test
loopne
mov
ss
dec
push
lods
jb
mov
add
or
addb
into
outsl
sbb
push
xchg
sahf
pop
sbb
and
dec
stc
in
sbb
fcomps
call
cltd
jbe
sbb
ljmp
xor
mov
daa
dec
push
scas
push
nop
inc
cltd
cmp
lea
int
fisubrs
mov
mov
jb
mov
mov
das
out
insb
xor
stos
adc
sub
gs
mov
neg
push
inc
and
sub
lea
leave
std
jns
cwtl
je
scas
xchg
cld
mov
cmp
imul
fs
mov
lahf
addr16
cmp
push
cmp
add
push
sti
mov
mov
mov
push
insb
bound
mov
and
sbb
fwait
or
mov
out
imul
ret
jp
nop
insl
popf
aaa
cmovns
popf
fcoms
and
int3
and
push
sub
lret
sbb
negb
test
pop
pop
push
subb
mov
mov
jl
xchg
or
int3
jno
mov
sbb
pop
ret
xchg
lods
add
in
lods
pop
add
cmp
pop
adc
push
mov
dec
rolb
ss
call
pop
push
push
adc
in
xor
pop
loopne
enter
test
bound
out
scas
or
lret
movsl
out
xor
jb
lea
push
fcomip
push
jge
mov
in
subl
jge
and
lret
in
xchg
xor
dec
jb
mov
sbb
or
jl
or
in
rol
xchg
inc
sub
call
xor
loop
and
leave
dec
sbbb
mov
adc
mov
jp
inc
aaa
and
mov
leave
pop
pop
out
popa
pop
push
sbb
or
sti
test
xchg
das
scas
mov
imul
jo
xor
scas
lea
jne
jae
sub
repz
mov
inc
mov
loopne
pop
fdivs
outsl
cmp
es
out
mov
out
sbb
xchg
add
outsb
push
adc
addr16
addl
mov
stos
inc
inc
inc
fidivrl
sbb
push
push
fsubs
jne
pop
lds
mov
jno
push
xor
scas
mov
mov
cmpsl
leave
popa
sub
push
out
jle
test
mov
vpmovuswb
loop
fwait
jns
push
imul
aas
mov
and
cmpsl
xlat
xor
cli
push
fwait
xchg
nop
pop
lcall
ds
inc
subl
lahf
stos
notb
xchg
mov
cmpsl
push
ljmp
pop
popf
push
popa
xor
add
sub
or
or
sub
dec
mov
add
xchg
iret
mov
or
fstps
sbb
fstps
jp
lret
cmc
es
mov
push
imul
sahf
popf
xorl
dec
mov
outsb
sti
mov
mov
sbb
sbb
jbe
fsubrl
pop
and
clc
stos
cmp
scas
xor
xor
mov
idiv
fimuls
add
iret
ret
popa
and
imull
sub
out
shll
push
push
dec
leave
lea
clc
aad
cmpsb
aad
pop
test
enter
in
mov
cmpsb
mov
in
rcrb
mov
bound
out
mov
movsb
lcall
ficoms
inc
fistpl
sub
inc
dec
arpl
ret
test
out
mov
push
mov
cmpsl
lret
mov
push
repnz
hlt
xor
xor
fcoml
or
mov
inc
and
adc
xor
cmp
test
jmp
hlt
inc
add
pusha
dec
sti
jecxz
adc
repnz
lods
js
pushf
mov
jg
cmp
add
nop
jge
dec
cmp
sbb
or
push
lds
mov
jnp
sti
lods
cmc
fnstsw
ds
fistpll
mov
fwait
push
or
sbb
jns
ja
idivb
add
stos
das
enter
dec
cmp
addr16
jecxz
fimull
mov
in
jns
filds
call
cmp
pop
mov
cmp
mull
push
rorl
jno
push
add
push
and
dec
inc
inc
ljmp
cli
mov
out
jnp
shll
xor
mov
sub
test
mov
adc
xor
sbb
insl
mov
pop
loop
sar
rcl
lods
ja
lock
xchg
jae
imulb
lret
push
je
add
mov
in
sahf
jl
cmp
lods
jmp
clc
xchg
shlb
xchg
and
inc
add
inc
mov
outsb
fidivs
test
bound
imul
lds
jg
sbb
or
mov
dec
push
test
xchg
das
dec
fnsave
call
jecxz
and
push
xor
aaa
jno
cmpsb
repnz
and
mov
inc
sbb
lea
and
dec
into
jno
adc
popf
daa
lcall
aad
cmp
fistl
mov
test
mov
shr
dec
scas
int
push
popa
fisttpll
jns
add
cs
mov
fistps
inc
mov
mov
add
es
lret
mov
test
not
andnps
lahf
fwait
mov
push
push
seta
jae
in
mov
xchg
sbb
ret
dec
inc
bound
in
push
call
imul
inc
insb
iret
ja
fildll
in
xchg
insb
push
adc
inc
insb
dec
frstor
mov
mov
push
mov
pop
push
xchg
cli
rolb
sbb
sbb
repnz
mov
and
out
sti
lret
jno
and
pop
stos
gs
pop
sub
mov
js
repz
cli
mov
push
push
and
mov
ljmp
or
xor
fldenv
scas
in
into
xchg
push
pop
mov
push
or
arpl
test
movsl
mov
movsl
add
adc
in
push
sbb
movsb
xor
shr
jns,pn
and
xchg
sub
dec
inc
dec
mov
dec
das
pusha
and
loope
lcall
push
lds
test
fdivr
ja
lahf
in
bound
sub
jb
leave
push
and
pop
push
jnp
ljmp
test
pushf
sub
pop
cmpsb
inc
sub
leave
hlt
adc
lods
in
or
cmp
ds
sub
les
sti
movsb
out
out
test
and
sub
gs
cmp
cmc
mov
lods
push
fsts
push
mov
fxch
mov
adc
mov
aaa
jno
std
cmpsl
mov
push
ds
mov
cmpsb
jle
mov
push
push
loop
rclb
in
popf
sbb
out
push
cmp
cmp
adc
pop
jns
sub
fwait
mov
andl
mov
xchg
mov
popf
and
icebp
cltd
mov
mov
pop
dec
aad
rolb
cmp
sahf
cmp
inc
or
mov
js
cli
rcrb
mov
sub
scas
mov
jae
cmp
les
mov
mov
dec
clc
loopne
push
into
push
nop
imul
ja
mov
cli
hlt
int
fmul
jmp
or
and
jp
repz
adc
es
mov
cmp
jne
sbb
push
outsb
jle
lret
mov
loope
ficoml
mov
add
sub
out
cmp
andl
dec
inc
pop
fldenv
shl
or
in
sahf
dec
push
mov
push
in
lret
push
cmp
mov
test
addl
bound
shlb
call
inc
mov
in
mov
aas
ja
cli
sahf
and
nop/reserved
push
push
push
iret
pop
or
aad
out
rcr
lahf
dec
or
mov
cmp
cmpsb
clc
mov
sbb
cmp
js
icebp
xlat
shrl
int
jnp
mov
popa
and
sarb
inc
or
das
int3
or
movsl
adc
xchg
xchg
sahf
or
aad
adc
push
push
aad
lods
jecxz
rcl
sbbl
movsl
es
pop
push
pusha
mov
outsb
jns
iretw
pop
xchg
adc
adc
inc
test
mov
shlb
jbe
mov
push
xchg
mov
bound
jo
lea
popa
test
imul
cmp
and
mov
inc
jb
cltd
lret
stc
aad
ja
fdivr
pop
ja
cmpsb
into
inc
dec
mov
cmpsl
insl
xchg
mov
jbe
fnsave
out
xchg
push
or
xor
ss
ficoml
sbb
mov
movsb
movsl
mov
scas
mov
dec
cmp
xor
shrb
xchg
fwait
data16
js
fisubl
mov
cwtl
cmp
cmp
daa
loop
pushf
and
outsl
dec
add
xchg
scas
divb
repz
push
mov
add
adc
and
pop
out
mov
dec
imulb
xchg
mov
dec
rorb
push
leave
pop
mov
mov
cld
out
and
inc
and
pop
sbb
int3
call
dec
and
jmp
outsb
dec
movsl
ret
sub
fwait
mov
mov
mov
jnp
mul
pop
lret
insb
cld
push
sub
pop
push
mov
jnp
xor
aas
adc
cmc
jg
and
mov
dec
pop
xor
sub
nop
xor
jmp
sti
ljmp
scas
data16
cmpsb
popl
xchg
cmp
daa
lock
mov
shrl
ljmp
or
mov
fisubrl
jge
cmp
add
and
out
cmp
add
xchg
stc
add
ds
push
lds
dec
xor
and
or
push
cmp
mov
pop
jo
xor
iret
nop
loopne
scas
mov
inc
inc
fcomps
xor
jae
scas
cmp
imul
cmp
int
call
hlt
jne
pushf
jne
mov
dec
inc
add
ret
push
cmpsl
inc
clc
aas
bound
jnp
mov
sub
cmp
in
mov
jb
imul
jle
cmp
jge
xor
or
mov
adc
inc
test
outsl
fwait
pusha
stc
enter
mov
cmp
sub
or
sub
fldl
cmp
imul
lods
out
pmaddwd
fidivrl
enter
movsb
dec
dec
and
add
pushf
cmp
iret
arpl
cmp
iret
test
inc
js
dec
inc
adc
cmp
add
inc
xchg
jbe
pop
fs
repz
out
xor
popa
xchg
rolb
gs
push
dec
in
push
push
xor
mov
sub
jae
adc
cli
mov
adc
out
imul
mov
iret
and
shl
loopne
cmp
loop
cld
daa
std
inc
ljmp
and
enter
mov
test
mov
call
mov
inc
rolb
adc
das
repz
jle
mov
pop
mov
and
popf
movsb
xor
mov
out
adc
mov
adc
iret
jae
dec
ja
ljmp
inc
imull
cmpsl
adc
scas
je
xchg
cwtl
mov
dec
push
stc
xchg
push
pop
ja
xchg
movsl
mov
mov
or
lea
and
xlat
xor
sbbb
pop
daa
out
and
shl
push
cmp
mov
mov
jmp
mov
and
fists
push
inc
sbb
cmpsl
gs
xchg
pushf
add
lds
lds
sbb
cmpsb
mov
lea
pop
cmp
fildl
inc
jp
stos
scas
sarl
test
lods
sub
sub
flds
sbb
out
and
push
pop
gs
fwait
js
lock
inc
addr16
lret
jb
popf
ficoms
push
loop
sbb
cld
mov
adcb
ss
daa
push
mov
jmp
jo
cmp
loope
dec
cld
cli
mov
xchg
imul
adc
and
dec
into
cli
sbb
xor
in
push
test
inc
push
scas
jmp
dec
loop
ljmp
jb
pushf
jg
fucomip
sbbb
dec
and
xchg
jge
adc
in
or
and
push
out
and
pop
xor
in
adc
mov
sub
mov
jl
stc
repz
adc
push
or
xor
mov
add
pop
out
mov
fs
pop
mov
push
sub
std
dec
jg
scas
push
jbe,pn
dec
iret
sub
ljmp
push
xor
leave
or
jp
out
je
subb
repnz
pop
pop
push
push
iret
adc
inc
cli
in
mov
hlt
push
sub
outsl
jle
jmp
ljmp
inc
mov
add
repnz
jno
add
call
adc
jge
cltd
xlat
cli
sub
leave
lods
sub
jle
inc
sub
loope
and
xor
xor
mov
mov
push
or
sahf
incl
cltd
mov
mov
test
mov
adc
fs
push
test
mov
repz
rcrb
pop
ret
mov
add
pop
adc
adc
icebp
iret
movsl
loopne
xor
loopne
pop
add
sub
dec
cs
cmpsl
jle
or
xor
and
xchg
sub
aas
test
dec
or
ror
ret
jp
scas
push
dec
xor
mov
dec
push
lcall
enter
adc
jg
and
adc
in
test
sbb
xlat
outsb
loop
aaa
popa
push
xchg
cmp
push
aaa
mov
rol
ss
ret
sub
ret
inc
pop
sbb
push
sbb
jae
dec
xchg
ja
imul
xor
dec
mov
fwait
shlb
and
mov
addr16
dec
test
and
inc
push
daa
xor
cltd
loopne
mov
fdivrl
cmp
adc
test
pop
arpl
or
in
divl
out
lock
sub
sti
mov
in
mov
lret
ss
adc
xchg
pop
adc
jbe
sub
sbb
out
ds
sub
jno
mov
repz
inc
cmp
and
stc
test
xchg
jmp
rcll
shlb
mov
popf
add
and
xchg
sub
andb
scas
dec
sbb
add
jmp
mov
cmp
xchg
push
push
xchg
mov
fldenv
lret
dec
hlt
sub
in
jnp
into
xchg
or
push
push
mov
cld
lock
mov
push
adc
lea
mov
test
sti
pop
xor
and
mov
je
mov
pop
sbbb
inc
cs
pop
push
sbb
pop
stc
mov
jmp
rclb
jno
or
out
push
mov
sub
mov
subb
or
mov
xor
lcall
jae
push
adc
hlt
inc
arpl
add
sub
subl
lret
pop
jnp
cwtl
jmp
inc
inc
stos
lock
sbb
dec
mov
jp
push
jg
andb
dec
out
cld
sahf
int
mov
inc
push
and
xorb
fistps
xchg
add
arpl
repz
mov
cmp
push
adc
push
sbb
xor
pop
mov
iret
aaa
cmp
test
in
pop
aad
xor
pop
inc
push
push
fnstcw
lock
lods
mov
mov
incb
or
aaa
pop
xor
cmp
cwtl
mov
loopne
out
and
cmp
imul
inc
mov
cmp
jecxz
or
mov
mov
mov
rol
imul
jmp
push
mov
push
pop
or
insl
out
sbb
lret
int
add
aad
cmp
arpl
cmp
sbb
jae
jae
pop
pusha
dec
sbb
mov
ret
and
jne
pop
sarl
jae
leave
push
inc
ljmp
inc
jl
sbb
push
loopne
mov
in
es
das
aad
sub
xor
cmpsb
xchg
cmpsl
jge
imul
push
mov
je
mov
xchg
push
movsb
xcrypt-ofb
cmpsl
stos
andb
test
pusha
push
fs
cmp
xchg
mov
inc
pop
lods
jge
ljmp
mov
inc
sbb
pop
mov
xor
inc
lods
divl
inc
jns
lcall
addr16
add
inc
and
cmp
push
push
push
or
sub
fldl
xchg
and
cmpsb
shrl
xchg
sbb
push
fcomi
cmp
test
and
repnz
xchg
add
jb
jo
sbb
mov
popa
sahf
lea
test
add
and
cs
push
push
xchg
dec
fldcw
mov
addr16
mov
shrb
mov
sbb
dec
cmpsb
or
cmc
test
mov
imul
fs
xchg
xlat
add
orl
mov
repnz
jecxz
mov
and
jl
xchg
adc
js
out
loop
inc
pusha
xor
aam
mov
andb
pop
popf
mov
mov
push
imul
div
add
inc
cld
sahf
aaa
xchg
pop
dec
xor
lret
pop
and
in
sahf
xchg
pop
xchg
lret
jno
fdivs
pop
xlat
inc
lret
sbbl
xlat
popf
cmpsb
pusha
sbb
inc
sbb
dec
mov
add
mov
dec
scas
and
arpl
leave
jmp
xchg
icebp
mov
testb
lods
ds
xor
adcl
inc
xor
outsl
add
popf
stc
pop
sahf
ss
xchg
test
imul
jmp
adc
mov
jb
les
sbb
dec
fucomi
sbbl
lcall
mov
decb
mov
and
xor
sub
jmp
jb
iret
push
and
shrb
scas
dec
dec
and
jmp
and
shll
mov
in
int
nop
sbb
scas
jne
and
xchg
out
aad
insl
dec
dec
pop
into
sub
test
imul
push
and
jg
arpl
daa
lods
scas
cmp
mov
pop
clc
mov
sbb
cmp
gs
dec
and
int3
lods
lret
cmpsb
sbb
xor
inc
jg
push
nop
jle
or
rclb
cmpsb
mov
mov
mov
jmp
pop
xchg
or
fisubl
mov
adc
sbb
add
ret
xchg
ja
xchg
fimull
mov
mov
lret
fisttps
dec
not
in
ret
movsb
rorb
int
stos
push
test
divb
xchg
mov
cmp
stos
addr16
mov
cld
enter
dec
loopne
lret
sbb
pop
or
jnp
adc
outsl
lods
enter
and
or
cmpsl
aad
sbb
and
mov
push
dec
adc
pop
out
adc
rol
aad
lret
shr
cmp
je
adc
push
sahf
test
cmp
rdtsc
ret
mov
pushw
jno
add
les
mov
xor
and
cld
test
xchg
out
sbb
mov
pop
inc
lcall
mov
int
mov
in
ret
add
movsb
adc
sbb
shlb
sbb
dec
std
xor
insl
xchg
test
mov
out
stos
sub
xchg
negb
lock
test
ret
shll
add
mov
jne
popa
jl
cmc
sub
das
mov
jecxz
repnz
lods
inc
aaa
into
xchg
dec
jbe
adc
clc
mov
push
sub
inc
mov
rcrl
jno
xchg
mov
add
or
sarb
mov
dec
push
pop
inc
xchg
mov
nop
mov
mov
sub
add
jg
inc
jp
mov
add
and
adc
add
jmp
inc
adc
xor
imul
mov
js
push
mov
hlt
lea
repnz
test
push
int3
movsb
and
mov
or
push
repz
dec
shlb
in
aad
out
xchg
xchg
dec
adc
jmp
mov
cmp
adc
jns
jo
cs
iret
jp
or
inc
jns
rcrb
adc
in
xchg
push
pop
xlat
mov
adc
fwait
mov
xchg
test
mov
insl
push
notb
in
dec
pop
sub
sbb
jp
push
fdivr
push
decl
mov
mov
stos
ret
lds
sahf
sub
sahf
test
mov
xchg
pop
out
xchg
push
lea
mov
mulb
xlat
insl
mov
loope
dec
insb
test
mov
daa
movsb
xor
adc
ret
mov
sar
or
xor
outsl
jo
jae
loope
lret
es
movsb
xchg
fdivl
fwait
mov
imul
mov
or
xor
out
pop
fidivs
ds
imul
es
lds
insl
pop
xor
repnz
xor
cmc
cld
add
push
mov
sbb
fisubrl
cmp
jne
ret
leave
mov
arpl
push
cmp
mov
xor
scas
jg
sarb
push
pop
shlb
pop
std
fiaddl
in
mov
or
lret
out
or
ficoms
test
stos
cmp
lods
sbb
stos
xchg
jp
adc
sub
sub
cmp
mov
xchg
or
cld
cltd
mov
ljmp
xor
sub
mov
ljmp
daa
ficoml
add
mov
mov
add
fwait
pop
in
lcall
mov
sbb
enter
cmc
int
cmpsb
mov
inc
leave
sahf
aad
inc
pushf
jb
mov
and
stos
adc
and
sbb
pop
mov
cmp
dec
or
and
xchg
dec
cmp
jg
jo
rcrl
adc
or
int
ss
hlt
loop
test
mov
sub
shll
lds
push
arpl
or
mov
xorl
test
dec
sbb
add
das
mov
xchg
or
mov
mov
sbb
cmp
xchg
fs
in
and
inc
shl
aas
push
loop
jg
addl
pop
aad
mov
add
ficompl
jb
loop
rcrb
ljmp
xchg
sbb
andl
pop
mov
or
fwait
int3
push
movsb
stos
push
inc
jecxz
mov
into
outsb
cli
outsl
xor
jg
ss
push
movsl
jmp
repnz
lods
aaa
push
dec
jnp
mov
fildl
cmp
popf
mov
cmp
sbb
test
mov
cltd
mov
ss
xchg
movsl
jge
sub
insl
enter
push
push
push
rcrb
hlt
test
mov
nop
std
cld
loopne
loope
sbb
insl
xchg
aad
out
loop
sub
jb
mull
cli
and
dec
fwait
int
out
faddl
sbb
cmpsl
and
stos
cmpsl
push
mov
and
sbb
add
test
negb
dec
pop
and
dec
mov
mov
jb
insb
inc
push
xor
cli
push
leave
pop
jo
push
icebp
ja
repz
and
push
fidivrl
mov
cwtl
jne
adc
aas
sahf
aaa
cwtl
ret
lock
aam
sub
xchg
sub
arpl
add
in
aam
pop
loopne
clc
sub
ficompl
jl
add
fldenv
or
mov
outsl
lcall
dec
xor
mov
dec
fcos
add
inc
push
das
je
decb
inc
pop
fscale
in
mov
dec
scas
and
lret
xchg
and
jp
sbb
push
int
pusha
insb
mov
stos
add
daa
icebp
shrl
or
fildl
test
movsb
cwtl
add
mov
dec
cmp
popa
xchg
dec
adc
mov
jle
scas
pop
sub
gs
jmp
and
cmpsl
pop
push
dec
out
adc
push
stc
mov
jbe
nop
xchg
imul
rorb
jbe
adc
stos
xchg
or
sub
sub
sti
fnstsw
xchg
cmpsb
cltd
scas
pushf
sbb
mov
dec
jb
xchg
mov
jbe
daa
scas
or
jno
inc
bound
clc
or
xchg
add
pop
mov
mov
and
int3
scas
ja
ret
mov
imul
dec
mov
fnstenv
or
cmpsb
push
push
lea
xlat
popa
imul
jns
fucomp
pop
js
js
es
icebp
or
dec
cmp
mov
cmpsb
adc
push
inc
and
ja
add
call
inc
es
dec
stos
cmp
pop
dec
cmpsl
inc
scas
insl
cmpsl
sub
sub
fwait
mov
pop
mov
or
repz
jno
mov
push
xor
dec
addr16
jecxz
push
stos
movsl
adc
aas
xor
pop
andl
ds
and
fisubs
mov
mov
push
jl
push
mov
mov
sbb
push
clc
mov
pop
mov
jne
mov
jno
pushf
loop
in
and
mov
jae
inc
lods
cmp
out
in
fstpt
dec
push
xor
sbb
mov
pop
pop
testl
xchg
int
lods
cmpsb
mov
test
xor
add
jmp
push
popa
mov
jecxz
shrl
aad
mov
xchg
dec
ja
sub
push
cmp
scas
sbb
scas
lcall
insl
add
and
ss
mov
mov
push
dec
cli
pop
movsl
cld
pop
mov
xor
ret
clc
inc
loopne
add
scas
xor
push
scas
scas
push
jbe
testl
adc
inc
or
jo
or
pushf
pop
fstpl
shlb
mov
rcrl
rorb
or
cmpsl
pop
imul
add
lea
jns
jne,pn
and
lea
jb
add
shll
loopne
pop
imul
and
and
jb
fiadds
inc
fnstsw
cmp
fs
leave
inc
nop
mov
mov
dec
sbb
sbb
sub
jnp
out
lea
mov
jb
jae
or
cmp
mov
pop
bound
jge
andl
mov
pop
dec
js
mov
arpl
inc
sbb
pusha
scas
fnstcw
sbb
imul
loopne
jg
ja
je
outsb
push
aad
jle
fisubrs
lods
sub
cltd
rcrb
test
adc
rcrb
cmp
jo
sbb
pop
cmp
dec
adc
mov
je
dec
sbb
and
fcomi
dec
ss
roll
nop
sub
sbb
add
mov
ret
cs
and
shrl
cmc
enter
int
xor
mov
enter
xchg
orl
out
insb
push
cmp
push
add
and
inc
out
in
pop
mov
ret
outsl
dec
aad
popa
mov
movsl
jns
in
std
repz
cmp
jne
daa
xchg
std
mov
jno
cmp
sti
in
jnp
and
jno
sub
movsb
cmpsl
shll
pop
mov
jmp
and
es
stos
sbb
and
jmp
das
jge
jb
jg
sti
and
hlt
out
cmp
mov
inc
outsb
mov
cmp
or
push
cli
rcrl
iret
jmp
sbb
push
mov
and
mov
sub
not
je
add
ret
adc
mov
in
mov
push
inc
test
icebp
rolb
mov
enter
cli
stos
push
or
lcall
fistpll
rorl
test
xchg
loop
bnd
hlt
das
imul
test
ret
sub
fnsave
or
mov
fmuls
nop
jge
push
ljmp
loope
cmc
sub
sub
and
sbb
xor
cmp
xor
out
aaa
sbb
sar
setns
mov
fstpl
pop
std
outsl
or
inc
data16
or
lods
mov
or
cmc
sti
mov
sti
jno
fisubrl
mov
insl
movsl
jno
pop
test
pop
xchg
lds
ret
aas
scas
cmp
out
scas
sub
iret
jl
jl
out
pop
loope
push
or
sbb
push
sbb
adc
es
mov
xchg
pop
mov
int
inc
cmp
add
out
leave
add
ss
add
xor
xchg
adc
lahf
pop
add
loopne
rcrl
adc
ret
scas
je
icebp
sbb
xor
hlt
ud0
sub
data16
dec
popf
mov
test
xchg
inc
mov
and
mov
outsl
lcall
in
push
add
ljmp
push
sub
cmpsb
test
movl
mov
or
outsl
mov
mov
popf
call
mov
xor
bound
inc
ds
shrl
sub
sarl
dec
fimuls
fwait
push
mov
ret
adc
fcmovu
dec
jg
cmpsl
mov
cmpl
test
or
jne
clc
bound
outsl
cmp
and
mov
adc
test
loopne
mov
jae,pn
daa
push
fxch
or
sarl
inc
mov
pop
adc
mov
mov
xor
or
mov
divl
mov
mov
icebp
xchg
adcl
dec
xchg
inc
or
cmpsl
mov
push
adc
mov
pushf
into
and
sub
dec
insl
fistl
pop
gs
adc
test
fwait
pop
into
xchg
mov
or
and
sub
cmpsl
inc
fs
push
sbb
adc
pushf
cmp
fisubl
push
add
das
pop
fldcw
xchg
xchg
sbb
mov
int3
loop
jle
push
lcall
cmp
adc
mov
sbb
fcoms
decl
mov
dec
pusha
adc
in
mov
xchg
fnstcw
hlt
mov
lds
test
and
shrb
popf
add
mov
add
lods
int3
dec
cmp
jnp
xchg
fimull
iret
xchg
xchg
enter
das
push
sbb
popa
fwait
mov
gs
dec
jae
in
std
mov
mov
mov
ljmp
pop
xchg
mov
push
and
add
xor
mov
xlat
add
mov
push
jge
cmpsl
ret
or
jno
or
adc
nop
adcl
lds
adc
les
mov
sub
pop
mov
sbb
add
push
notl
adc
add
inc
sbb
rorb
call
shrb
cld
clc
push
test
icebp
cmp
test
or
push
push
adc
push
call
fisubl
je
cld
in
mov
inc
inc
mov
push
sarl
jne
inc
repnz
adcb
add
outsl
push
in
add
xlat
sbb
mov
xchg
xchg
mov
sbbb
addb
mov
insb
adc
push
pop
adc
dec
stos
adc
pushf
in
sbb
cs
hlt
ja
push
push
mov
dec
jl
scas
and
push
in
dec
into
sub
or
sub
add
pop
out
adc
xchg
sbb
or
aas
mov
inc
sub
dec
pop
and
xchg
jbe
and
ret
lock
js
imul
data16
mov
punpcklbw
jge
adc
and
test
adc
pop
push
stos
daa
insl
aas
out
std
xchg
pop
ljmp
leave
pop
push
enter
ds
jp
or
push
ffreep
mov
cmpsl
and
fs
inc
push
mov
scas
xor
loopne
jne
xchg
cmpsl
mov
xchg
mov
nop
adc
test
inc
jecxz
pop
pop
xchg
mov
leave
jecxz
fs
mov
xlat
push
imul
pop
fistpl
cmp
or
pop
xor
lods
or
sarl
inc
incb
add
cmp
dec
loopne
out
mov
xchg
sbb
dec
push
clc
push
pop
ss
inc
sahf
pusha
bound
jmp
das
std
mov
andl
popa
aas
loop
lahf
mov
lahf
cli
jne
in
or
je
ja
pop
and
js
fldt
lcall
cwtl
ficompl
or
push
dec
or
mov
lea
mov
push
push
cmc
outsl
push
jo
pop
sub
ror
jle
lds
mov
lock
aas
pop
repz
sbb
pop
data16
mov
scas
clc
mov
mov
stos
ret
imul
adc
shrd
out
ljmp
je
leave
mov
lcall
sbbl
sub
adc
sub
int
dec
dec
inc
adc
push
xchg
int3
nop
push
mov
in
pop
mov
pop
mov
inc
cmpsb
and
xchg
cmp
pop
jge
fbld
xor
in
mov
leave
ja
jns
cltd
and
add
push
nop
adc
push
inc
push
pop
int3
js
cld
std
jecxz
jecxz
lds
adc
aad
mov
or
stos
and
jecxz
xchg
fdivrp
test
push
loope
sti
shll
xor
addl
scas
ud2
cmpsb
mov
daa
loopne
lcall
imul
ljmp
stos
mov
aam
iret
arpl
jo
push
mov
jo
shlb
scas
dec
idivb
mov
jmp
inc
adc
ror
idiv
aam
gs
dec
in
jecxz
inc
mov
push
cli
sub
stc
jo
leave
aaa
push
jb
ret
stos
cwtl
movsl
imul
mov
call
jns
sbb
pop
and
or
dec
inc
sbb
mov
pop
inc
mov
mov
inc
cmpsl
jae
dec
stos
ret
lret
std
js
push
fsts
mov
rcr
jae
mov
dec
movsl
or
xor
nop
loopne
fistps
cmp
xor
adc
stc
mov
cmc
cltd
hlt
js
sbb
mov
inc
or
shl
in
push
adc
cmp
cmpsl
mov
enter
fdiv
adcb
addr16
or
ljmp
pop
test
jnp
mov
rorb
push
dec
mov
dec
add
xor
pop
mov
popf
roll
push
test
daa
insl
cltd
jns
lock
movl
and
mov
in
cmp
mov
add
adc
jle
leave
movsb
rclb
xchg
and
mov
sub
scas
lret
outsl
jae
mov
mov
xlat
stos
ds
dec
cmp
push
sub
stos
roll
ljmp
push
inc
adc
or
mov
cmp
cmpsl
movsb
xchg
mov
adc
ja
dec
and
aam
adc
popa
adc
incl
xchg
add
add
push
mov
rcrb
test
cmpsl
sub
push
add
cmp
mov
sti
jb
mov
sub
push
xchg
mov
int
push
popf
sbb
fs
mov
xor
push
lock
sub
mov
sub
shlb
arpl
lret
cmp
cmc
dec
or
xor
sub
in
fwait
xchg
xchg
push
cmp
imul
rcr
add
loopne
pop
pop
lret
fsubrs
jmp
xor
mov
mov
js
imul
mov
test
sub
push
mov
dec
jp
insb
popa
cmp
iret
cmpsl
push
and
cmpsb
int
cmpsl
adc
bound
sub
shr
outsb
xchg
and
jbe
insb
and
cmp
sub
popa
jl
repz
out
mov
mov
in
in
push
test
push
cmc
jo
pop
pop
xchg
popa
scas
fisubs
dec
cmp
pop
xor
mov
addl
dec
jl
in
repz
jp
add
in
push
pop
mov
mov
negb
xor
push
jo
pop
ret
mov
in
ss
aaa
push
mov
sarl
icebp
lods
pushf
mov
jb
pushf
test
and
je
rolb
cmp
ss
out
or
insb
orl
rclb
inc
jne
loope
jb
lret
aam
sbb
adc
and
push
in
repz
lret
or
cli
clc
addr16
pushf
dec
mov
mov
out
dec
cmp
or
stc
sub
ja
xor
iret
mov
je
mov
cmpsb
sub
xchg
xchg
push
subb
mov
lods
shrl
popf
test
jmp
mov
pop
popa
cmp
leave
mov
movsb
movsl
xor
and
call
jge
mov
movsb
outsb
out
jb
jecxz
inc
jp
lods
sub
mov
aad
cmp
add
jp
adc
pop
mov
icebp
sbbb
inc
aas
loope
popf
rcrb
cmp
or
cmpsl
rcrb
mov
out
pop
out
mov
das
pop
jb
mov
cmpsb
push
add
es
xor
inc
mov
push
add
cmp
or
push
push
pushf
pop
test
repnz
inc
cwtl
inc
sbb
mov
insb
mov
push
pop
test
stc
aaa
lret
push
fisubrl
jno
stc
lea
dec
mov
test
loop
subl
xor
mov
or
adc
dec
xor
dec
dec
cmp
aaa
sahf
mov
test
data16
call
cwtl
and
ret
inc
push
cmp
jg
push
cmp
mov
xor
bswap
aad
sarb
cld
jecxz
or
pop
adc
jnp
fsubp
orb
pop
popa
lock
int
jg
adc
shl
add
cli
mov
pop
push
lahf
aam
add
rclb
mov
and
mov
in
sahf
mov
adc
push
mov
arpl
sbb
inc
sarb
pop
repz
sbb
jb
cmp
add
jne
push
divl
or
sbb
call
out
mov
jge
andl
mov
dec
and
loopne
insb
mov
aam
int
or
insb
push
push
xchg
enter
cld
cli
dec
sarl
push
test
pop
in
movsl
nop
sahf
out
test
js
ret
or
push
add
sub
jl
sub
mov
cmc
scas
pusha
lock
fwait
sbb
sub
jnp
call
and
cmpsl
shr
clc
jns
push
xchg
or
mov
ds
inc
aaa
adc
lock
push
pop
sbb
cli
in
sbb
mov
fistpl
bound
jle
adc
in
pusha
fprem
cmp
je
popf
dec
push
popa
mov
test
cmpsb
dec
in
xchg
push
das
or
sti
cwtl
sub
cmp
aad
jnp
call
push
arpl
adc
repz
js
jb
clc
sti
mov
cld
cltd
repz
lcall
dec
hlt
ss
loope
nop
mov
out
das
mov
scas
cltd
mov
adc
or
in
pop
jg
or
loopne
les
mov
pop
add
xchg
fld
sbb
xchg
mov
dec
pop
push
mov
test
mov
or
out
fmull
and
push
data16
dec
mov
stos
or
push
popf
pop
mov
dec
repnz
jo
test
jo
cltd
mov
or
sbb
xor
sahf
lcall
xor
push
adc
xchg
scas
dec
sbb
cwtl
fidivrl
mov
comiss
ds
fisttps
repnz
push
pop
inc
lods
inc
xor
or
and
dec
lds
add
sahf
bound
push
lods
mov
jmp
fcompl
xchg
mov
out
lea
pop
mov
or
jecxz
sub
shlb
sbb
leave
cmp
test
push
and
sub
mov
or
jmp
stos
js
xchg
sbb
pop
xchg
scas
jne
and
sbb
jno
adc
scas
jbe
mov
lock
in
xchg
dec
insb
xor
lcall
test
data16
movsb
xchg
sahf
cmp
mov
sbb
jae
push
lret
jb
sbb
cmp
jb
loope
sbbb
add
das
fadd
or
jg
jp
mov
out
cmpsb
daa
sub
pushf
and
cmp
das
mov
ficomps
pop
hlt
inc
addl
repz
movsb
pusha
jge
xchg
mov
jbe
dec
fisubrs
mov
pop
push
hlt
in
jbe
decb
xor
insb
xchg
adc
and
subb
pop
pop
div
dec
fstpt
push
fwait
push
lret
push
jb
loopne
shr
sbb
enter
int3
sub
adc
cmp
xchg
nop
out
xchg
mov
pop
cmp
cmp
sub
mov
aaa
mov
jl
test
add
fwait
mov
push
inc
adc
adc
xor
mov
cs
jnp
mov
adc
or
fnstsw
rcr
cld
inc
arpl
jg
js
shrb
add
pop
push
jns
aaa
sarb
test
jae
insl
xor
mov
xor
jne
mov
insb
stos
dec
cmpsl
sub
pop
and
cmp
xorb
mov
mov
add
and
out
xor
popf
adc
xchg
dec
leave
cmp
je
out
adc
or
or
ljmp
jg
sbbb
int
insb
dec
cli
stos
addr16
imul
inc
pop
popa
stc
xor
and
ret
mov
les
daa
test
int
call
push
xor
and
pop
sbb
nop
aaa
pop
movsl
ja
jp
test
inc
jmp
mov
cs
cmc
lahf
cwtl
outsb
test
loop
push
fildll
xor
jb
jae
push
dec
sbbb
es
in
unpcklps
aad
les
push
int
xchg
je
xchg
push
lds
push
test
ja
xchg
jmp
xor
lret
jecxz
inc
out
inc
inc
cltd
loope
cmp
pop
mov
sub
sbb
ljmp
pop
outsb
aaa
in
int3
mov
stos
rcrl
out
int3
fbstp
cli
cmp
adc
jle
push
dec
cmp
lcall
jns
and
xchg
mov
stc
push
les
fsubs
push
or
aaa
ficoml
sub
loopne
sbb
in
adc
hlt
scas
pop
cmp
lahf
test
pop
jecxz
cmpsl
pop
and
divl
int3
cmp
fwait
mov
add
in
lcall
insl
cwtl
jbe
dec
mov
mov
arpl
jno
sbb
mov
rorl
mov
addb
mov
push
call
pop
xor
aas
xor
jmp
cwtl
pushf
jecxz
adc
cld
mov
push
push
dec
les
lds
xor
xor
or
inc
movzwl
inc
sti
sbb
inc
lahf
fdivrl
mov
mov
ss
imul
jmp
jae
sti
jns
test
stos
pop
imul
push
mov
pushf
ret
stc
or
out
pop
clc
out
div
xor
les
jg
push
ss
push
sub
repz
mov
mov
and
outsl
sbb
fcmovnbe
cmp
mov
push
cltd
mov
ror
and
out
fwait
enter
data16
jb
ss
popa
lcall
adc
dec
and
mov
sbb
gs
mov
in
mov
aaa
lret
add
ret
out
mov
sbb
lcall
outsl
test
inc
test
hlt
add
int
pushf
add
mov
mov
out
push
fsubrl
push
xor
es
out
add
dec
inc
sti
stos
cmp
or
imul
pop
ljmp
inc
imulb
jbe
dec
fiadds
inc
push
inc
or
imul
int3
out
pop
lcall
andps
fimull
lods
loope
idivb
cmc
out
push
mov
xor
ja
dec
sub
inc
fstps
fsubrl
aam
push
insb
js
xchg
adcl
xchg
lahf
sub
clc
test
sub
in
sub
inc
jae
cli
ljmp
std
xor
scas
ret
pop
cmp
xor
mov
mov
nop
cwtl
inc
std
jecxz
mov
lock
mov
mov
frstor
scas
pop
cmp
adc
je
mov
arpl
test
out
or
xor
popf
test
into
mov
adc
and
lahf
cmpsl
mov
dec
mov
sub
inc
cli
mov
addb
bndstx
shlb
jg
subb
push
jno
sbb
imul
jle
and
xor
add
rorb
sub
add
mov
test
cmp
mov
sub
mov
inc
sbb
xor
xor
stos
add
icebp
pusha
mov
push
push
mov
jnp
pop
and
movb
or
mov
dec
jbe
movsl
add
xor
sub
pop
jae
scas
jo
cmp
inc
adcl
loop
iret
push
icebp
add
xor
and
jecxz
vpaddb
sub
test
nop
mov
cmc
andnps
xchg
mov
outsb
bound
repnz
mov
mov
sub
jge
and
xchg
inc
subl
into
movsl
dec
pop
push
int
shl
in
pop
pop
push
outsl
mov
outsb
mull
scas
daa
test
aam
dec
fbstp
int
pop
push
mov
sbb
es
sub
leave
aad
jo
sub
and
push
sbb
insl
int3
outsl
sub
out
mov
mov
push
lea
xchg
adc
mov
jno
adc
jae
sub
cmp
pop
mov
add
pop
out
test
inc
or
inc
lcall
gs
pop
loope
mov
cwtl
aaa
cs
push
in
xchg
pop
std
xchg
and
stos
clc
hlt
push
inc
mov
int3
sub
cmpsb
xchg
push
insb
mov
mov
sub
fimuls
fcoms
mov
fst
call
iret
repz
or
add
push
fsubrl
je
sub
out
push
jp
mov
push
outsb
pop
lahf
int3
hlt
and
jb
orb
stos
and
inc
and
push
mov
dec
jecxz
mov
aaa
mov
js
push
fsts
int
fmul
ror
mov
rcr
push
rolb
mov
scas
adc
nop
cli
int3
insl
xchg
pop
pop
loope
mov
xchg
inc
movsl
test
mov
sbb
adc
xchg
add
gs
add
xchg
pop
add
js
test
mov
mov
std
std
ficoml
jecxz
push
lods
xor
sub
push
fidivl
out
mov
adc
test
pop
mov
xlat
xorb
cwtl
addr16
inc
jmp
ljmp
imul
push
ss
and
decb
pop
mov
pop
clc
xor
andl
out
lret
or
add
mov
mov
cltd
xor
push
test
mov
push
ret
scas
push
pop
nop
test
sbb
outsl
inc
jecxz
xor
arpl
sahf
lock
shr
jmp
ja
scas
mov
shlb
fs
mov
mov
movsl
out
ret
push
push
int
push
mov
jnp
or
xor
mov
std
stc
xchg
aas
pop
mov
imul
das
or
push
negb
scas
dec
je
sub
inc
pop
lea
jle
mov
xlat
add
in
imul
jle
xchg
fbld
loopne
xchg
inc
int3
roll
dec
mov
push
xor
dec
sub
aaa
mov
inc
add
lretw
andb
shlb
inc
test
xor
mov
xor
clc
pop
jb
add
out
xchg
leave
jne
dec
lods
cmc
int
test
outsb
mov
decl
push
jnp
jns
mov
aad
ss
cltd
call
cltd
shl
cmp
hlt
or
ja
sbb
adc
out
test
inc
cli
inc
je
scas
lods
cmp
pop
in
xchg
loopne
fnstcw
jns
cli
dec
outsb
pop
add
in
pop
inc
insb
in
idiv
push
aad
insl
adc
cmp
push
push
test
cmp
add
test
cmp
test
mov
sub
fwait
repz
inc
pushf
mov
cmp
popf
js
dec
mov
cmpsb
xor
pop
pop
outsb
in
aaa
xor
stos
push
mov
xor
mov
fmull
mov
loope
cwtl
lahf
cli
rcll
pusha
popa
lds
push
xchg
push
fsubrl
lods
rcrl
dec
das
cltd
sbb
scas
mov
ja
inc
lahf
mov
stc
push
and
jg
jne
mov
xchg
and
mov
pop
inc
adc
and
jbe
sbb
push
sub
jno
sbb
sti
insb
movsl
mov
enter
sub
sbb
sub
mov
pop
inc
sahf
mov
dec
shll
xlat
movsl
push
xchg
push
cmpb
in
int
xor
dec
rcrl
imul
push
popa
vmovntps
adc
popa
pop
mov
xor
jb
adc
daa
das
mov
fsubs
push
pop
loop
outsb
lahf
or
xchg
sub
push
add
cmp
inc
inc
push
and
mov
in
and
mov
or
cmp
std
fistl
ss
ss
out
jl
mov
ficoms
popf
pcmpeqb
xchg
fwait
mov
inc
cli
add
rcl
daa
insb
in
mov
lahf
andb
add
cmp
sub
aaa
in
push
or
push
dec
mov
jae
xchg
out
mov
shlb
jbe
in
fs
test
jnp
mov
andb
clc
loopne
shl
and
mov
add
movsl
sbb
jnp
lds
sub
mov
mov
ss
rolb
fwait
jo
mov
lcall
cmpsl
ljmp
mov
xor
in
xor
jo
insl
imul
fwait
into
lock
jge
shlb
scas
data16
add
mov
mov
mov
dec
dec
jns
lret
rclb
insb
adc
dec
xor
jg
sub
ret
mov
iret
sahf
mov
xchg
jmp
lahf
cmc
sbbl
pop
aas
push
cltd
jnp
inc
push
gs
int3
sub
cmp
dec
jnp
or
dec
int
or
ret
cmp
aas
jle
lret
mov
pop
dec
cmpb
mov
in
push
xchg
jg
outsl
fimuls
enter
mov
scas
aaa
jmp
push
xchg
movb
movsl
jns
cmp
in
gs
dec
test
jbe
inc
aad
imul
jl
pop
rol
movsb
in
and
or
lds
cwtl
jbe
xchg
out
or
sub
mov
cld
scas
pop
dec
andl
cli
popa
das
rcl
sub
mov
aam
movsb
lock
mov
in
xchg
out
data16
insb
scas
js
pop
ja
mov
pop
lret
fstpl
fmul
xchg
in
aas
jnp
test
fwait
ss
mov
xchg
ret
ja
dec
cld
adc
adc
sub
sti
xor
mov
lret
and
pop
js
cmp
fldenv
pop
repnz
adc
loope
inc
pop
lcall
aas
cltd
pushf
aas
lods
repnz
out
mov
es
xchg
xor
dec
ljmp
ljmp
addr16
mov
pop
mov
or
pop
or
pop
sub
xor
mov
or
adc
inc
xor
or
rcll
mov
movsl
sbb
sahf
xchg
cmp
cwtl
xor
jge
fnstcw
inc
ds
adc
push
hlt
rcll
sub
mov
mov
xchg
jge
xor
in
cmp
inc
mov
adc
jb
subb
dec
mov
mov
xorb
push
aaa
pop
punpckhbw
imul
jno
not
cmp
cld
jb
pop
jno
cmp
fbld
fmul
scas
rcll
insb
fidivl
jg
imul
mov
std
das
ret
add
icebp
jns
lahf
insl
cmp
pop
mov
dec
aaa
das
mov
mov
push
data16
mov
mov
xchg
mov
push
ja
add
shrb
mov
push
les
insl
into
gs
mov
in
test
ljmp
scas
mov
mov
daa
lret
push
jg
sti
cmp
or
and
in
les
push
push
pop
push
clc
cmp
das
cmp
and
adc
or
clc
dec
je
push
mov
jl
mull
and
push
jae
cmp
wrmsr
mov
cmp
imul
nop
insb
lret
sti
xchg
dec
inc
sbb
in
in
mov
fsubrl
ret
shlb
or
insb
ja
fnop
andb
and
xchg
testb
jbe
cmp
outsb
nop
mov
rcll
sub
or
pop
sbb
es
add
fnsave
inc
divb
gs
xor
daa
stc
stos
push
jmp
and
iret
je
mov
dec
cmp
in
push
jne
cwtl
stos
jns
les
movsl
scas
ret
imul
daa
std
in
xchg
jns
add
loopne
outsb
jmp
test
cmp
in
or
inc
jns
jns
aad
mov
cld
xchg
adc
pop
stos
jbe
pop
mov
pop
mov
cmp
push
das
jmp
shrb
xchg
out
adc
hlt
lahf
mov
xorl
enter
cli
push
pop
cli
inc
ret
jge
je
xchg
fsubr
push
fldcw
lahf
imul
lods
das
mov
cmp
les
xor
repnz
xor
xchg
push
inc
xchg
mov
movsb
in
mov
pushf
shll
dec
icebp
fdivs
jne
sarl
scas
popf
insl
adc
negl
mov
push
dec
cmp
gs
mov
jne
lock
xchg
pusha
fwait
push
popa
xchg
jne
loopne
loop
mov
ret
into
jmp
sbb
xchg
aas
jmp
sti
sbb
or
push
sub
andl
ucomiss
inc
in
pop
mov
push
push
mov
mov
test
insl
push
jecxz
lds
sbb
pushf
ja
lods
aad
jne
add
mov
lcall
add
repz
adc
xchg
jo
addr16
out
cmp
gs
push
fwait
jmp
jle
pop
clc
adc
mov
jle
in
xor
jl
pop
sbbb
inc
and
and
inc
mov
sbb
and
cwtl
pop
lock
xor
ficoms
out
jns
arpl
fdivrl
clc
pop
pop
inc
sub
shll
push
xor
outsl
scas
repz
inc
add
leave
lahf
pop
push
dec
stos
pop
in
rorb
xor
aam
or
cwtl
fnstenv
nop
fldt
std
aaa
js
adc
gs
inc
push
ret
adc
jge
out
or
lret
add
cwtl
lock
jp
mov
add
subb
gs
sub
pusha
aas
sbb
add
mov
xor
jp
or
pop
in
inc
jo
int3
es
xchg
mov
fs
or
std
jno
imull
pop
movsb
pop
in
stc
outsb
popa
cmp
xlat
push
push
pop
mov
insl
or
sahf
in
xchg
stos
int
into
push
add
test
jl
xor
and
mov
sti
mov
call
stc
xchg
imul
cltd
cld
cmpsb
push
push
push
jbe
andb
sbb
dec
jle
leave
push
pop
sti
sbb
inc
ja
loop
jne
icebp
repz
out
add
push
inc
repz
pop
jmp
nop
dec
push
inc
inc
test
inc
lea
ljmp
jg
decb
add
lock
cmp
inc
mov
cmp
scas
sub
cltd
incl
sahf
mov
int3
outsl
lock
push
jge
mov
scas
in
sub
mov
mov
cmpsl
stc
jp
mov
pop
mov
or
dec
mov
push
test
mov
addr16
cmp
lret
cli
lock
adc
or
test
sbb
out
imul
push
or
jl
push
cmp
mov
adc
leave
fisubrl
in
loop
add
pop
repnz
dec
lods
pop
push
pop
jns
addr16
jnp
lods
xor
push
stos
std
lret
sbb
mull
hlt
test
mov
and
mov
sbb
test
fs
dec
mov
xchg
or
jecxz
xor
rcll
pop
dec
psraw
outsl
cmp
subb
dec
push
roll
jecxz
enter
inc
inc
mov
sbb
lock
aad
fs
fcompl
daa
aam
hlt
mov
mov
filds
mov
iret
mov
sarl
outsl
das
into
out
xor
scas
lock
sti
clc
adc
std
mov
rcr
out
stc
rcrl
and
rcrl
pop
jne
popa
inc
xor
imul
repnz
push
push
lahf
push
cwtl
mulb
lods
inc
enter
adc
andb
pop
mov
leave
mov
lock
mov
sbb
test
adc
xor
push
std
dec
lds
mov
mov
cmp
negb
mulb
sbb
mov
mov
shr
push
gs
xchg
dec
movsb
mov
sbb
fdivr
roll
stos
les
sarl
mov
or
cmp
stc
xchg
jmp
mov
out
adc
and
outsb
test
icebp
ror
jmp
enter
mov
xor
and
push
inc
insl
cli
inc
and
or
out
add
mov
xor
pop
or
jg
fisttpl
enter
fcmovbe
push
ret
jb
fwait
mov
xchg
jg
test
or
nop
push
or
rcrl
push
xor
sbb
dec
pop
leave
outsl
out
adc
add
xor
aam
dec
or
cmp
sbb
enter
push
jge
sub
repz
dec
repnz
sbb
xor
push
sbb
mov
xlat
add
int3
clc
cmp
movsl
loopne
fnstcw
bound
rcll
sub
pushf
cmp
hlt
stos
pusha
push
dec
sahf
clc
ds
std
lcall
cmp
sbb
mov
jge
imul
cli
sub
enter
mov
ss
add
xor
and
sbb
cmpsl
loop
mov
push
or
dec
jl
pop
aaa
mov
test
fwait
inc
push
mov
xor
jno
data16
out
outsb
ss
je
fsubs
cmp
das
add
xor
push
ljmp
xchg
mov
inc
dec
mov
into
rcl
sub
inc
addr16
jge
mov
mov
adc
mov
lods
repnz
mov
push
mov
mov
cwtl
fcoms
cld
and
roll
mov
fistl
adc
mov
xor
xchg
add
fdivl
call
mov
xchg
sub
nop
cmp
mov
loope
cmp
jmp
adc
pop
xchg
and
icebp
push
or
add
mov
in
pop
add
pushl
std
add
insl
jecxz
dec
xchg
sub
mov
xchg
lods
and
insb
mov
in
stos
fstl
insb
xchg
or
pop
mov
push
and
push
pop
mov
pop
and
jge
ret
out
sti
mov
subb
bound
cltd
ja
nop
rorl
sbb
mov
push
call
addr16
outsb
loope
aad
push
addl
sbb
loopne
xor
loopne
cltd
xchg
dec
sbb
gs
xchg
xlat
or
stc
sub
push
add
mov
sbb
mov
or
dec
jnp
cltd
cmp
and
pop
mov
xchg
lret
cmpsb
out
mov
mov
sbb
and
loop
hlt
pop
pop
sub
and
cld
pop
inc
scas
addps
add
addr16
sbb
and
cs
sbb
mov
pop
push
mov
and
stc
xor
and
lret
push
js
and
call
xor
add
mov
mov
sti
insb
xor
jbe
out
in
icebp
hlt
cwtl
repz
scas
jo
mov
imul
or
or
mov
fidivs
xor
lea
enter
mov
mov
and
fmull
pop
xor
and
repz
adc
mov
jp
out
popa
pop
jle
and
adc
pop
and
or
mov
jl
pop
adc
push
push
sbb
lret
jns
sub
frstpm(287
mov
lahf
pop
and
lods
lret
jnp
and
dec
data16
mov
push
rclb
mov
int
pop
jmp
xor
pop
jno
jge
jmp
xlat
les
cli
popa
xchg
xchg
pop
cmp
leave
lods
xor
in
and
push
aaa
mov
pop
xor
xor
ja
jg
daa
ret
js
ljmp
enter
test
cmpsl
mov
mov
stos
xor
adc
mov
cmp
leave
jecxz
insb
fsubs
push
pop
ret
inc
and
push
inc
fmull
mov
push
add
jmp
jnp
jb
lods
add
fimuls
push
iretw
addr16
scas
addr16
scas
xlat
sbb
or
jp
fucomi
scas
lret
push
jbe
sbb
or
jns
mov
mov
out
add
add
data16
insl
sub
cmp
in
jae
adc
jne
std
fs
rcll
sbb
cmp
xchg
inc
mov
and
pop
cli
divl
int3
push
pop
out
push
popf
cltd
pop
aam
enter
dec
xor
sbb
repnz
stos
dec
jnp
mov
mov
xchg
and
aaa
adc
push
repnz
testb
cmc
jp
fsubr
lcall
inc
mov
jne
dec
nop
aam
mov
nop
repz
xchg
jle
out
mov
cmc
in
push
and
test
mov
jmp
mov
sub
sub
jbe
push
loopne
sbb
jp
and
fsubrl
mov
loop
cltd
rolb
pop
mull
xor
std
cmp
inc
inc
clc
enter
ret
sbb
xchg
bound
cltd
pusha
shrl
xchg
fisubrl
xchg
xor
punpckhwd
sarl
sbb
inc
movsl
out
jae
cmp
fwait
inc
jb
mov
and
cli
push
mov
int3
xor
inc
inc
push
ret
mov
outsl
adc
ds
xchg
dec
arpl
lret
ret
fs
add
or
sbb
sub
xchg
stc
repnz
jnp
sbb
fdivrs
in
inc
and
nop
icebp
lret
xlat
clc
call
into
adc
mov
dec
aam
mov
jecxz
std
cmpl
pop
pop
lcall
or
cltd
js
std
sahf
and
xor
out
mov
jb
fwait
dec
scas
or
or
mov
xchg
insb
cltd
sbb
sub
push
pop
in
fsubrp
or
pop
jge
das
movsl
xor
andl
aad
clc
cmp
ficoms
mov
xchg
adc
js
cwtl
out
or
sub
sbb
xchg
push
aaa
cmp
jne
jno
mov
in
jge
and
cmp
fsubs
or
rcrb
leave
and
jecxz
pushf
push
imull
pop
jmp
cmp
cmp
sbb
data16
sbbl
mul
pop
xchg
clc
jle
add
in
out
xor
aaa
pop
fldl
enter
lcall
mov
insb
pop
adc
pop
cmp
and
pop
es
dec
jns
inc
mov
dec
in
in
sub
sub
lds
loope
leave
sbb
cli
jg
cwtl
adc
xchg
push
pop
sbb
insl
add
in
or
dec
mov
ret
pop
loope
jns
xlat
xor
push
dec
data16
fsts
mov
mov
or
adc
and
cmpsb
mov
mov
imul
fadds
lds
push
mov
ja
sub
out
mov
sbb
ljmp
push
popa
rcrb
or
stc
mov
out
aam
dec
xor
imul
dec
ret
dec
jbe
xor
cmc
inc
xchg
jns
mov
sub
sub
dec
sti
cmp
pop
repz
mov
sbb
in
addr16
aam
add
aaa
sub
mov
or
in
scas
add
pop
popa
mov
jmp
movsl
push
cmpsl
jae
or
aas
iret
jnp
daa
cmc
in
cmp
cwtl
add
jbe
nop
fsubrp
orl
dec
sahf
in
adc
ja
imul
das
scas
xor
aad
out
mov
es
int3
dec
movsl
inc
jmp
inc
xlat
gs
xchg
cli
test
xor
and
pop
add
or
lahf
hlt
xor
pop
pop
movsb
sbb
orl
xor
fmulp
push
call
push
pushf
xchg
or
cmp
daa
jg
cli
mov
push
sub
mov
psubusw
and
and
push
mov
mov
mov
loop
push
adc
pop
mov
or
jge
insl
mov
and
xor
or
mov
add
xchg
lea
cmc
mov
mov
in
inc
add
xchg
xchg
add
inc
shr
popa
inc
call
arpl
je
ljmp
lret
or
hlt
fsubr
fldt
mov
cwtl
jo
fwait
jo
inc
and
or
cld
jne
dec
pushf
mov
in
add
mov
jb
push
lcall
inc
addr16
addr16
xchg
and
fs
in
fs
mov
sbb
mov
popf
jp
incl
insl
adc
ds
inc
scas
mov
mov
out
add
jl
andb
fcompl
adc
pushf
in
sub
xor
mov
or
jmp
lret
fwait
pop
jno
fldenv
loopne
sahf
in
xchg
ret
fs
cmp
mov
jl
jmp
rcr
es
jo
imul
jns
pop
mov
mov
popa
pop
xchg
mov
xchg
push
cld
mov
lret
in
jbe
dec
add
xchg
aad
iret
xor
mov
mov
inc
push
cmc
cmp
and
push
pop
push
add
fwait
clc
xchg
jmp
call
inc
fisttps
jns
mov
mov
xchg
jl
xchg
gs
cmp
adc
xor
scas
ret
cmpsb
add
dec
jnp
xor
pop
les
xchg
mov
pop
sbb
insb
cmp
lret
inc
jge
sub
pop
dec
jno
test
lcall
jae
mov
push
and
cli
jmp
ss
xchg
fsubr
lods
inc
and
mov
inc
stos
mov
pop
sub
jg
jle
push
loopne
mov
xchg
flds
jl
movsb
imul
mov
outsl
xchg
sbb
fcomip
ja
jle
lods
pop
cmpsl
in
push
mov
cmp
push
fstpt
clc
xor
jne
mov
pop
xchg
adc
frstor
cld
idivl
daa
or
cmp
push
pop
sub
dec
pop
adc
mov
scas
fwait
icebp
xchg
push
jbe
push
mov
repz
repnz
mov
cmp
into
hlt
xor
xchg
pop
cmc
out
mov
push
addr16
sub
enter
jecxz
inc
dec
inc
std
push
into
mov
fsubr
jecxz
fucomi
mov
aas
dec
mov
push
jnp
dec
mov
sbb
fcmovb
push
gs
punpcklwd
bound
sub
icebp
stos
inc
mov
mov
pushw
sbb
jp
dec
dec
into
jnp
mull
outsl
add
clc
xor
add
outsb
adc
test
xor
push
adc
in
jne
jbe
sub
pop
fadd
fisttpll
jle
in
or
pop
inc
or
sub
lret
add
inc
cmpsb
bsr
cwtl
jne
decb
jno
inc
pop
pop
sbb
es
pop
clc
dec
mov
dec
jecxz
pop
pop
orl
pop
pop
or
mulb
xchg
jmp
rcl
fwait
jge
popf
jno
pop
dec
cmpl
ret
push
cmpsl
in
cs
inc
test
jge
fnstenv
mov
sahf
sahf
ljmp
inc
in
idiv
dec
sbb
dec
xchg
test
imul
incb
pusha
rorb
adc
xor
mov
arpl
mov
nop
xchg
rcll
dec
testb
mov
adc
out
scas
ret
sbb
push
push
idivl
inc
xchg
pop
pop
fs
pop
mov
jns
inc
dec
sbb
outsb
mov
inc
mov
dec
out
rcrb
aad
test
mov
lods
mov
inc
jbe
js
rcrb
and
gs
dec
lret
xor
data16
jne
inc
pop
jno
imul
les
cmp
or
cmp
mov
sbb
xchg
mov
out
fwait
out
jae
or
cmp
ja
jno
add
fcom
repz
pop
mov
lods
add
mov
outsb
xorl
cli
fsubrs
jl
test
out
inc
and
or
popf
inc
push
imul
shll
jo
daa
pop
mov
pop
xor
xchg
cmpsl
xorl
mov
cmpl
mov
mov
jb
frstor
mov
loope
repz
sub
out
dec
andb
in
cmp
adc
les
mov
and
push
insb
cltd
test
jno
push
push
push
xorb
sub
iret
jmp
test
push
pop
push
out
dec
adc
jnp
xor
xchg
popa
dec
cmp
sub
mov
pop
aad
fs
sbb
stc
pop
aam
ret
std
push
out
sub
cmpsl
jb
and
dec
in
mov
xchg
and
icebp
sub
xor
daa
hlt
pushl
pop
jp
push
push
mov
iret
inc
xchg
stos
arpl
xchg
inc
sbb
and
adc
clc
shlb
mov
out
sub
jbe
fwait
hlt
lea
add
push
add
and
mov
add
outsl
les
add
mov
pop
movsb
shrl
aad
cmp
les
xchg
aaa
pop
nop
cli
jae
push
xor
push
mov
loopne
fdiv
jnp
dec
pop
sti
loope
in
adc
sbb
mov
sub
pop
in
mov
pusha
rcl
cmp
jl
adc
je
mov
mov
invd
mov
sarb
add
jns
push
xchg
push
pop
mov
lahf
mov
pop
lock
xor
cmpsb
dec
cmpsb
nop
ret
incb
sbb
mov
push
nop
gs
ret
inc
mov
push
dec
nop
pop
loope
inc
or
sbb
stos
or
pushf
in
popa
jo
cmp
aaa
jne
mov
pop
and
fdivrp
jge
stc
jae
xchg
je
aam
aam
shrl
jne
xchg
adc
mov
aam
and
enter
ss
jl
imul
fwait
xchg
fcomip
jns
pop
mov
jnp
xchg
and
dec
mov
arpl
fcoml
lock
mov
clc
cltd
test
and
jmp
xor
outsb
arpl
mov
gs
dec
movsb
lods
and
mov
lret
push
push
outsl
adc
jg
lods
adc
fistpll
mov
mov
or
dec
xor
and
int
das
sti
push
roll
jns
xchg
mov
push
insl
adc
mov
ss
jo
imul
or
out
inc
push
clc
sahf
mov
jge
imull
jp
inc
stc
imul
xor
jae
sti
es
lods
sbb
xor
int
lds
mov
out
fxch
into
adc
dec
test
and
sbb
mov
mov
ljmp
mov
inc
xchg
je
sbb
or
pop
test
inc
jbe
jb
jmp
sub
xchg
ljmp
xor
push
aam
js
insl
ds
mov
jbe
and
jnp
aaa
sub
mov
cwtl
dec
jle
mov
adc
loope
add
in
lea
in
ret
clc
adc
rolb
das
sub
xchg
scas
call
pop
dec
mov
mov
jl
push
xchg
data16
pop
mov
dec
dec
lret
ret
aaa
cmp
cwtl
mov
jo
push
or
fildll
jecxz
jnp
rcrb
mov
mov
cmp
lret
aas
sbb
inc
mov
xchg
call
pushf
xor
nop
icebp
pop
cmp
inc
clc
sub
sti
or
ret
xchg
sbb
sarl
call
stos
lds
jp
pop
fwait
mov
add
mov
sbb
xchg
aam
aam
shll
cmp
daa
fimuls
jl
cmp
or
ljmp
mov
rcrb
push
ds
pop
ficompl
mov
in
xchg
xor
xchg
hlt
push
xor
mov
inc
cs
sub
iret
lds
pop
shl
ljmp
ljmp
mov
sub
jb
test
xchg
dec
pop
fcmovb
push
scas
decl
and
xchg
add
adc
mov
call
add
leave
pusha
sbb
dec
xor
add
push
out
and
fisubrs
dec
outsl
pop
mov
mov
cld
and
mov
mov
lret
cmpb
lods
sbb
sub
inc
pop
lret
push
rcl
es
insb
dec
add
stos
and
mov
sub
cmp
mov
out
jmp
cmpsb
mov
mov
daa
pop
mov
cmp
sti
jl
pop
xor
inc
ljmp
push
hlt
ret
insb
in
adc
pop
jge
sub
out
add
push
or
inc
arpl
es
dec
out
je
inc
int
lea
in
mov
mov
jne
pop
mov
lcall
outsb
add
es
xor
aad
imul
dec
push
jno
outsb
mov
mov
cld
in
cmp
sub
int3
test
sbb
shr
mov
jmp
jge
data16
ds
cmc
jno
sub
ret
mov
push
add
jmp
cmp
es
in
aam
aad
pmaxub
aaa
or
mov
mov
mov
adc
test
jno
dec
add
aad
cmc
or
stos
push
xchg
sub
jl
inc
lcall
inc
cmp
inc
adc
xorl
jmp
sbb
cwtl
jecxz
xor
fs
aad
inc
ror
push
cwtl
sbb
cld
fldenv
mov
hlt
and
iret
or
in
jge
adc
sbb
xchg
jo
negb
mov
adc
outsl
pop
add
into
out
adc
push
sarl
inc
dec
stos
adc
sti
mov
in
cmp
ljmp
pop
mov
les
sub
inc
gs
mov
and
loopne
das
and
push
mov
mov
mov
dec
xchg
jle
mov
arpl
sbb
movsl
mov
in
mov
or
xchg
sbb
aad
lods
mov
dec
mov
dec
fwait
push
dec
mov
rcr
dec
in
lcall
adc
cwtl
mov
pop
xchg
scas
fcomps
in
jl
es
cwtl
push
flds
jle
xor
data16
andl
inc
repz
pop
cmp
mov
rclb
sub
lret
xchg
mov
inc
out
mov
mov
mov
les
dec
xor
mov
xchg
cmp
mov
dec
cwtl
addr16
sub
xchg
xchg
mov
push
push
sbb
pop
dec
aaa
fidivrl
inc
or
std
jae
mov
jns
mov
pushl
fiaddl
lea
cli
sub
nop
xchg
xchg
iret
mov
jns
inc
fisubrl
xor
fwait
ret
cmp
mov
lcall
lret
aas
mov
fidivs
hlt
bound
adc
xchg
or
cld
cmp
loope
dec
mov
rolb
mov
mov
jo
test
cmpsl
dec
icebp
negb
push
in
pop
jns
sahf
mov
adc
mov
xchg
aas
mov
push
add
popf
not
or
int3
jae,pn
or
repnz
cmp
sub
out
cmp
adc
daa
test
push
inc
sbb
mov
stc
cmc
pop
push
lret
jmp
dec
jge
xor
int3
out
push
add
out
xchg
lcall
add
outsb
int
add
ljmp
fimull
xchg
shlb
into
xlat
add
repz
test
cmp
or
cmp
repz
int3
scas
jns
faddl
adc
imul
add
hlt
lods
xorl
adc
and
and
loope
leave
scas
dec
lock
push
mov
cli
cmp
bound
aam
enter
loopne
shr
lahf
xor
inc
ss
xchg
addl
sbb
mov
inc
es
sub
jp
add
dec
cmp
je
repz
imul
mov
int
or
adcb
adc
loopne
push
stos
xchg
mov
mov
sub
mov
dec
movsb
mov
mov
int3
or
and
enter
lds
jp
or
add
ret
jmp
xor
jbe
sbb
adcb
dec
out
add
imul
pop
jl
or
lcall
int3
test
arpl
es
popa
mov
mov
jo
repz
push
pop
loopne
mov
test
sbb
mov
xchg
push
stos
nop
cmp
and
xchg
int
dec
push
adc
movsb
mov
push
or
push
pushl
lret
lret
cmpsl
imul
movl
ficompl
call
xorb
mov
loop
push
out
cmp
movsb
call
mov
arpl
addr16
add
add
out
call
xchg
sub
out
push
pop
into
lds
jo
pop
outsb
add
lret
inc
pop
sub
dec
roll
les
vpmadcsswd
sti
mov
pop
cmpsl
xor
cmpl
cmp
pop
inc
push
lds
xchg
xchg
mov
add
pop
lret
bound
sub
fdiv
loop
push
fmul
adc
cltd
ljmp
cmc
mov
loop
cli
mov
push
mov
std
pop
add
aaa
inc
cmpsl
daa
jp
int3
gs
lret
adc
mov
inc
jp
ja
push
ja
xor
mov
ss
sub
into
fstpt
mov
jns
fistps
in
jp
test
repz
cmp
add
sub
push
aam
pop
in
add
js
inc
js
sub
cmp
sbb
out
sbb
mov
add
test
outsl
mov
add
xchg
pop
xlat
daa
pop
nop
and
mov
xchg
cmp
sbb
lock
pop
aaa
cs
test
mov
xor
xor
push
movsl
jbe
sub
stos
mov
es
push
in
adcb
push
xor
ja
arpl
mov
call
loope
data16
shrb
das
test
cmp
loope
mov
mov
and
gs
jg
xchg
mov
insl
push
popf
imul
sbb
dec
mov
sbb
lods
push
mov
sbb
mov
mov
aad
xlat
test
mov
push
dec
push
push
dec
cmpsl
in
insl
cmp
aam
and
mov
es
sbb
in
pusha
lock
mov
xor
lahf
imul
and
cmpsl
in
inc
ja
aam
inc
in
push
push
outsb
fstps
jp
xchg
push
shl
mov
mov
sahf
shl
lock
and
stos
xor
add
imul
push
insb
cmp
enter
sbb
pop
jb
stos
xchg
mov
mov
adc
fstl
outsb
cli
mov
insl
adc
or
and
dec
lahf
aaa
loop
outsb
ljmp
cld
sbb
xor
dec
scas
jg
mov
add
cmp
fstps
push
mov
inc
test
fsubrp
stos
test
xchg
out
pop
pop
jns
push
lds
das
push
ret
sbb
mov
adc
lret
pop
cmp
mov
and
mov
jae
cmp
iret
pop
mov
out
jbe
push
cltd
sbb
popa
dec
lret
inc
add
into
jo
cmpsb
or
and
addr16
lahf
aas
rorb
lret
jl
mov
push
pop
xchg
in
sti
xchg
dec
xlat
mov
ret
enter
add
aad
data16
repz
aam
adc
push
add
daa
es
mov
nop
shll
es
mov
test
lods
mov
sahf
stc
mov
mov
add
fildl
rcll
leave
mov
cmp
mov
sbb
and
fsts
leave
inc
cltd
xchg
movb
jmp
mov
xor
mov
or
jne
xchg
push
jl
fdivs
cs
inc
push
cmpsl
rcll
enter
jmp
mov
sbb
adc
imul
mov
jge
es
repz
or
pop
enter
lock
orl
jbe
and
xchg
jae,pt
and
or
inc
mov
adc
mov
lahf
insb
mov
aas
cmp
push
mov
xchg
cltd
aad
mov
add
xor
xor
loop
call
mov
test
push
xchg
push
in
sbbb
bnd
jbe
stc
ds
pop
add
addr16
cltd
push
add
movsb
add
js
cwtl
and
adc
pusha
pop
imul
mov
push
cmc
or
negl
sub
add
out
mov
imul
xchg
push
loopne
in
inc
hlt
outsl
add
js
rcll
jno
or
adcl
shrb
addr16
in
paddq
fdivrl
rclb
mov
pop
scas
mov
push
call
fcomps
popf
pop
movsl
aad
xchg
push
jns
inc
addb
add
and
cmpsb
mov
aaa
cmp
cmp
popa
in
mov
lock
cmp
clc
sub
cmpl
daa
daa
xor
mov
imul
mov
ss
or
mov
sbb
push
adcb
loop
mov
adc
push
xchg
xchg
imul
and
mov
sbb
ret
out
jbe
int3
mov
fldl
pop
mov
mov
imul
pop
repnz
stos
jns
cmp
sbb
push
or
dec
cwtl
adc
pop
or
mov
xchg
mov
cwtl
fmul
test
ljmp
scas
push
mov
push
sti
test
scas
mov
inc
add
cmp
ret
dec
sbb
mov
jns
mov
es
sbb
es
adc
push
stc
fistl
notb
or
sub
in
lret
scas
dec
pop
imull
lret
lcall
les
outsb
dec
mov
test
add
orl
and
jb
jle
in
mov
fidivl
sub
aaa
faddp
mov
sub
sahf
orb
fwait
xorl
ret
pop
syscall
mov
stos
xor
rcll
mov
gs
add
jns
cmpsb
cmp
scas
outsl
jmp
mov
or
lea
adc
mov
mov
repz
or
pop
mov
out
mov
push
jbe
mov
loop
insl
xchg
lahf
jge
inc
push
cwtl
cmp
pop
adc
jmp
leave
pop
aas
loopne
lcall
leave
adc
cmp
or
dec
movsl
rcrl
adc
stc
int
rcr
cld
orps
sub
cli
lods
sub
push
cmp
cmp
fdivl
push
dec
and
icebp
cmp
int
mov
movsb
in
add
jl
test
pop
int3
incl
les
pop
xchg
popf
pop
cmove
movsl
pop
cmp
sbb
add
push
push
jne
pop
mov
lds
data16
jmp
addl
stos
or
and
inc
add
xchg
adc
fildll
mov
arpl
cli
rcr
test
in
addl
dec
popa
out
sbb
fldenv
pop
lcall
jle
insb
aam
pushf
call
sahf
outsl
repz
lret
std
sub
jle
scas
lret
out
mov
xchg
and
int
arpl
stos
jno
loopne
xchg
push
out
dec
ret
ja
movl
mov
bswap
inc
cmc
xchg
repz
sbb
sbb
daa
or
popf
movaps
cmc
push
pushfw
popl
push
insl
xor
mov
sbb
lea
add
mov
movsb
adc
cwtl
aas
add
loop
inc
fs
sti
mov
dec
mov
jecxz
data16
mov
or
fisttpl
fiadds
mov
imul
cmp
enter
insb
stos
xchg
dec
mov
xchg
js
mov
adc
sbb
dec
and
rclb
push
rorl
test
scas
and
adc
outsb
inc
sbb
pop
ret
jg
ljmp
test
sbb
mov
cli
stos
scas
and
out
cmc
add
cmp
flds
es
imul
js
dec
nop
pop
and
push
mov
stc
xchg
scas
dec
mov
jnp
add
test
enter
adc
adc
scas
dec
movsb
xor
inc
xchg
rep
cmp
mov
sbbl
lock
cmpl
std
push
jb
xor
movl
inc
mov
adc
push
cmpsl
test
ds
push
dec
pop
add
sbb
xchg
mov
xchg
dec
mov
mov
sub
nop
pop
lcall
pand
aas
fsubr
cli
outsl
rcrb
loope
xor
lds
mov
push
jne
or
dec
xlat
repnz
rorl
shl
and
jbe
pop
lea
aam
push
test
into
js
mov
or
xor
and
lahf
adc
out
mov
push
sbbl
movsl
aas
mov
pop
stos
and
mov
ds
divl
pop
fisubrs
jge
scas
sahf
fwait
sti
pop
int
jno
test
dec
addr16
push
xchg
adc
push
xlat
das
leave
pop
test
sar
inc
in
stos
out
xchg
cmp
mov
push
das
mov
xchg
xor
add
xchg
sub
sbb
and
lock
int3
cli
in
loop
mov
mov
in
adc
cmp
inc
jne
xor
into
das
xchg
cli
leave
adc
jno
lea
popf
dec
sahf
jnp
aas
sbb
cwtl
pop
fs
inc
inc
fcmovu
sub
sbb
mov
je
push
popa
jmp
dec
sbb
xor
push
and
and
adc
push
xchg
jle
fildll
orb
lock
mov
out
mov
test
shll
rorb
test
dec
inc
xchg
mov
in
mov
inc
lock
mov
xchg
icebp
in
test
pop
into
jbe
mov
jno
lahf
popf
mov
call
mov
imul
js
lods
test
mov
mov
icebp
out
test
or
bound
pop
mov
push
popf
imul
adc
and
xchg
popl
mov
jg
or
pop
lret
and
mov
dec
mov
mov
inc
mov
rorl
and
adc
mov
cmp
fsubrl
loope
icebp
mov
fdivrl
sub
mov
mov
inc
jg
mov
jg
dec
dec
lahf
mov
imul
aaa
stos
add
insl
int
das
inc
dec
popf
mov
lahf
dec
cltd
jp
clc
idivl
or
cwtl
rcll
xlat
xchg
pop
fs
jp
cltd
mov
cwtl
or
test
insb
add
or
or
vcvtss2sd
shrb
mov
dec
ret
or
fnstcw
loope
inc
push
int3
mov
int
test
jmp
add
addb
mov
inc
lahf
xchg
inc
cs
outsb
fadd
ret
add
lcall
dec
xor
sub
sub
inc
cmp
push
jno
jb
fwait
clc
jae
dec
imul
sub
mov
mov
pop
int3
inc
divb
test
in
xchg
mov
mov
jge
test
sub
sarl
mov
and
div
int
into
iret
pop
sub
shrb
xchg
mov
pop
shrl
in
pop
test
shll
aad
pop
add
scas
ljmp
xchg
mov
lret
shlb
fcoms
push
sub
jbe
lock
sbb
add
xlat
jge
adc
inc
jb
xor
sbb
inc
xchg
lods
jb
cmp
bound
inc
sub
ss
addr16
in
imul
lock
push
pop
and
pop
mov
jp
jb
mov
loopne
xor
loopne
mov
jno
mov
xchg
outsl
and
pusha
xor
mov
xchg
mov
xchg
popf
xor
ss
jae
mov
and
mov
repz
cwtl
sub
out
dec
ficoms
sbb
dec
push
aaa
or
test
xchg
ltr
nop
test
imul
iret
mov
in
jecxz
sbb
mov
or
loopne
jg
and
xchg
shrb
jo
cltd
mov
test
out
popa
roll
xor
inc
pop
out
andl
int3
movsb
sub
xor
cli
mov
or
adc
fcomps
sub
push
es
cmp
pop
fdivrs
sub
mov
jge
mov
mov
cltd
xlat
add
cmp
jl
pop
inc
or
and
and
xor
lahf
popa
lock
fstps
fiaddl
aam
lret
leave
xorl
xchg
mov
jl
leave
lret
ffree
mov
sub
js
out
icebp
lods
cmpsl
xchg
fisubs
cmp
pusha
and
and
rcr
aam
add
imul
std
xchg
pop
out
pop
jo
pop
adc
mov
in
xchg
xchg
add
rolb
mov
xor
lds
dec
pop
call
gs
push
loopne
push
and
push
xchg
div
fisubrl
cmp
mov
loop
xor
imull
repz
mov
jl
jecxz
lcall
cmp
shr
std
out
arpl
xor
mov
jp
mov
sub
test
and
jp
xor
and
shll
and
jno
sbb
cmp
iret
dec
subl
aad
xchg
in
fnstsw
pop
loop
int3
fst
push
xchg
imul
stos
adc
sub
xchg
loopne
pop
jmp
mov
stos
iret
ja
aad
jne
sbb
pop
iret
push
push
adc
in
push
xchg
jge
mov
or
lret
xchg
sbbb
or
sbb
imul
dec
stc
test
mov
loopne
push
push
into
imul
xchg
xor
mov
lcall
xor
adc
push
int
int
jbe
je
ja
jmp
fisubrs
lret
mov
xchg
jb
push
adc
test
or
mov
xchg
fisubrl
add
leave
mov
sub
mov
mov
das
cmc
fnstsw
push
xlat
inc
xchg
fldl
and
call
stc
repz
pop
sbb
lret
bound
int
dec
or
fidivrl
das
popa
or
mov
rolb
push
icebp
mov
outsb
sbb
push
push
ds
jns
clc
jo
pop
inc
and
add
mov
arpl
les
pusha
repnz
cltd
je,pt
push
cmp
xchg
cwtl
pusha
in
loopne
outsb
ja
fstp
adc
sub
sti
shll
ret
out
xorl
push
popf
jb
sbb
pop
jns
adc
jge
add
jle
mov
in
mov
or
sbb
popa
mov
mov
cs
pop
fisubrl
lock
inc
gs
xchg
test
lcall
mov
jae
jb
and
rorb
arpl
jnp
andb
inc
into
lock
sub
ljmp
jle
fstpl
add
in
mov
mov
frstor
fidivl
sub
repnz
mov
enter
rcl
or
push
cmc
pushf
les
jmp
subl
int3
cmpsb
mov
or
xor
loopne
adc
das
jb
mov
pop
or
gs
fisttps
jne
das
bnd
into
mov
jl
mov
pop
xorl
clc
cmp
mov
adc
enter
mov
movsb
das
loopne
pop
jp
pop
fwait
xlat
dec
gs
and
out
daa
stc
mov
add
stos
mov
into
iret
out
jmp
cmp
mov
sub
outsl
mov
js
sub
push
fldl
js
insl
add
xchg
fcomi
pop
mov
mov
xor
fsts
push
inc
lcall
mov
xchg
fistpl
jae
test
add
leave
mov
test
sahf
mov
pop
dec
adc
sbbb
test
cmpsl
popa
pop
jnp
test
adc
dec
mov
dec
push
xchg
push
adc
jb
in
push
jb
mov
adc
pusha
pusha
jae
jae
test
lock
push
lahf
mov
pop
loop
inc
movsl
loope
jnp
pop
mov
popf
stc
ret
lcall
icebp
xor
fs
aas
pop
cwtl
xchg
pop
sub
pop
pop
jns
or
ss
inc
add
push
mov
pop
xor
jle
pop
cmpsl
adc
dec
dec
lcall
adc
mov
cmpsb
pop
inc
arpl
shll
pop
inc
fxch
jl
jp
testl
mov
cmpsb
sub
sub
mov
lcall
fisttpl
lds
rcrl
scas
jmp
and
and
rol
pop
mov
adc
sbb
adc
xor
jecxz
push
add
dec
js
sub
mov
fisubl
test
jns
push
shlb
push
loopne
inc
pop
test
faddl
inc
aas
cmp
je
pop
test
gs
and
mov
or
insb
add
loope
adc
icebp
add
jle
sbb
aad
aaa
nop
and
pop
js
rcl
adc
sbb
sbb
xchg
fadd
imul
or
js
stos
xchg
aam
lds
lds
shrb
dec
out
dec
jmp
or
dec
sub
push
dec
sub
jae
push
les
out
in
pop
or
out
orb
out
dec
lea
lea
adc
add
out
test
ds
ljmp
push
jbe
dec
pop
mov
test
and
clc
xchg
push
retw
incb
test
dec
rol
mov
stos
lea
mov
mov
pop
jg
mov
enter
or
out
repz
and
ds
cmp
xchg
shll
int3
sbb
in
ja
jmp
comiss
in
stc
dec
gs
mov
sbb
lea
adc
repnz
push
out
sub
rcl
bnd
push
xchg
push
mov
inc
enter
or
inc
mov
and
and
jg
popf
test
dec
es
mov
ret
outsl
inc
leave
shll
adc
and
stos
mov
push
sub
push
xor
sub
sahf
les
dec
push
dec
fimull
pop
test
sbb
shl
xchg
jno
cmp
mov
cmp
fwait
ret
mov
roll
out
cltd
and
or
sbb
ficoms
popf
sub
scas
out
popfw
cld
ds
add
xor
adc
sarb
repz
mov
test
leave
adc
gs
inc
mov
add
sub
leave
fsubl
aad
popf
xchg
or
xchg
repnz
pop
ret
push
gs
pop
sahf
stos
jp
lock
cmovbe
fists
mov
mov
jo
imul
xchg
fidivrs
adcl
mov
cmp
filds
arpl
jno
sti
daa
or
das
jb
xor
cwtl
scas
push
adc
ret
pop
inc
outsb
xchg
sbb
aaa
call
or
int3
mov
psllw
in
jg
lret
stos
in
mov
dec
das
mov
mov
clc
fsubrs
pminub
lcall
cmp
popf
loop
push
pop
push
rcll
jmp
cmp
enter
test
pop
in
pop
xchg
xor
or
lock
or
mov
popa
mov
pop
nop
add
sub
jmp
and
push
inc
sub
adc
cmc
ja
bound
sub
sbb
fsubr
mov
push
push
repz
into
mov
mov
sub
or
cmc
lcall
aad
cli
lret
dec
dec
insb
dec
jl
nop
mov
cmp
ss
push
pushf
dec
push
subb
jp
sub
cld
mov
or
xchg
inc
cld
xchg
insl
stos
bound
mov
in
mov
divl
insb
pop
dec
popf
gs
sahf
jp
mov
fwait
cmp
add
cwtl
push
cmc
lods
test
pushf
adc
add
cwtl
pop
dec
push
fs
not
mov
push
lods
jmp
out
or
mov
out
mov
cmp
lds
stc
mov
adc
cmpsb
xor
add
ss
adc
adc
inc
test
mov
sub
bound
xchg
push
and
shl
mov
cmpsb
jbe
adc
pop
mov
mov
dec
cs
add
or
mov
inc
das
sbb
scas
mov
lret
mov
lock
les
loop
test
insb
or
pushf
push
imul
cld
and
pop
cld
in
pop
push
into
int3
mov
push
movsl
mov
push
xchg
mov
movsl
push
subb
arpl
push
mov
add
cmp
mov
test
adc
and
mov
popf
fiaddl
mov
sub
fldcw
push
testl
test
dec
shrl
loop
outsl
mov
mov
divb
in
xor
sbb
sbb
enter
testl
dec
out
loopne
fdiv
sub
cmp
out
ljmp
sahf
imul
aad
dec
jle
pop
cmpsl
push
or
pop
in
fildll
xor
pop
mov
mov
imul
test
mov
push
lods
mov
stos
into
cmc
scas
je
test
add
xor
or
inc
sahf
cmc
jge
loop
jne
pushl
push
mov
fwait
xchg
out
push
pop
mov
mov
shl
call
pop
pop
mov
inc
cmp
lahf
lret
mov
inc
hlt
in
sub
dec
mov
sub
jg
je
dec
jne
push
adc
mov
sbb
iret
xor
fisubl
pop
into
test
pop
shrl
cli
mov
lea
pushl
adc
sbb
ljmp
sarl
test
xchg
inc
xchg
cltd
arpl
les
pop
fildll
pop
ljmp
mov
ret
dec
inc
xchg
in
test
inc
dec
data16
xor
es
nop
std
scas
inc
inc
fs
aaa
mov
arpl
mov
outsl
divb
xchg
and
xchg
ficomps
pop
xchg
gs
inc
xor
jae
and
cld
xchg
aam
sub
or
lret
leave
mov
pop
mov
sub
jne
add
outsb
arpl
mov
xchg
pop
jle
adc
imul
ja
jno
lcall
jmp
sbb
push
lret
cs
out
push
loopne
xor
jecxz
pop
adc
shrl
loopne
imul
aas
or
vmovddup
mov
dec
or
fldenv
sahf
shr
cmpsb
lcall
lods
pop
ror
mov
jp
shld
cwtl
popa
dec
xor
push
mov
sahf
pop
arpl
jnp
imul
jg
ret
pop
pop
in
fmuls
cs
je
jl
push
mov
or
shlb
addr16
pop
adc
mov
hlt
mov
inc
fidivrs
jle
mov
in
mov
push
jo
mov
push
inc
mov
mov
push
mov
push
pop
movsb
lock
xor
pop
push
sbbb
mov
jb
pop
es
mov
adc
pushf
arpl
fdivrl
adc
fimuls
shrl
out
aas
in
mov
fildl
outsl
xchg
ljmp
rcrl
sub
jnp
cmpsl
adc
rcll
and
dec
inc
inc
xor
and
jo
push
fisttpl
pop
jle
testb
out
jb
jnp
mov
or
mov
sbb
or
je
inc
lret
pushf
insl
xor
aam
out
sbb
xchg
loopne
push
es
shrl
into
cmp
fisttpll
or
fsts
adc
fsubrl
or
pop
fcmovu
scas
push
mov
lods
rorl
loope
mov
cmpl
push
aas
out
xchg
lods
xchg
das
fwait
xor
test
lods
cmpl
mov
add
aad
out
stos
scas
icebp
cwtl
lcall
icebp
and
adc
test
addl
in
mov
sarb
dec
stc
push
pop
mov
insb
sub
mov
test
or
xchg
loopne
and
movsb
jl
mov
sbb
sbb
sbb
js
jp
rorl
pop
dec
jo
call
sbb
pop
lock
cltd
lret
jae
movsl
xchg
pop
sub
rcl
jne
ret
fisubs
push
and
and
lods
fs
inc
popl
test
jl
cmp
sahf
jl
jg
loopne
mov
decl
mov
lds
mov
inc
jp
pop
jns
cli
nop
cmp
clc
dec
sbb
stos
subl
in
rorb
in
cmpsb
pop
sub
cltd
enter
adcl
mov
cmp
mov
movsl
fwait
mov
mov
test
xor
and
pop
arpl
loope
add
jp
cmpl
fdiv
aaa
push
mov
and
mov
jle
dec
dec
out
arpl
jg
xlat
loopne
xor
jecxz
aaa
ljmp
mov
or
mov
scas
pop
sarl
sub
and
xor
inc
jle
push
mov
cmpl
push
loop
movsl
in
mov
push
push
cmc
or
pop
hlt
scas
iret
loop
mov
or
pop
sbb
aas
subb
test
inc
nop
pop
mov
dec
js
add
int3
sub
sbb
adc
mov
ja
and
add
dec
pop
mov
mov
imul
mov
jne
mov
pushf
mov
enter
fcomp
hlt
mov
mov
adc
cltd
lock
sbb
push
dec
xchg
imul
dec
pop
cmp
insb
xor
or
js
fnstsw
adc
scas
cmp
outsb
lods
dec
mov
pop
add
out
or
sbbb
dec
out
inc
cmpb
out
dec
push
cmp
jbe
aad
xchg
dec
pop
ljmp
cmp
insl
fisttps
mov
fs
pushf
xor
popf
and
loop
mov
add
int3
mov
paddq
cwtl
inc
push
adc
in
mov
mov
dec
jo
outsl
adc
mov
es
mov
push
sub
add
jl
scas
nop
sub
loope
jnp
mov
outsb
cmp
add
fwait
xchg
mov
mov
loope
sub
outsl
fsubr
inc
and
sbb
addr16
pop
push
inc
xor
dec
test
sbb
sub
jnp
cmc
jge
adc
ret
mov
insl
push
int
pop
mov
mov
xchg
int
je
mov
jge
or
jle
mov
lock
mov
repz
push
push
xor
and
inc
clc
inc
lcall
popa
mov
cmpsl
addl
mov
sbb
mov
insb
add
sbb
test
rorl
das
mov
dec
clc
imul
dec
inc
mov
dec
cmp
dec
je
adc
shlb
mov
lea
and
fdivrs
stc
mov
mov
inc
inc
ss
inc
jg
xor
fdivs
mov
xor
fcoml
hlt
movsl
xor
rclb
jle
push
jp
shll
cmc
xchg
lock
out
dec
mov
shr
mov
notb
stos
mov
fpatan
js
push
xchg
dec
push
jnp
into
push
pop
mov
mov
mov
cmpsl
add
mov
inc
ljmp
jge
or
out
jecxz
adcb
int3
dec
jp
and
aas
pushl
sarl
hlt
pop
negb
lods
dec
sbb
sub
dec
int
sbb
xchg
rorl
jae
xor
inc
aaa
xor
imul
fnstsw
fcmove
data16
rcl
sbb
insb
lods
xchg
pop
cltd
test
push
mov
adc
adc
lods
add
pop
fsubl
ret
and
jle
stos
jnp
sbb
push
mov
mov
lcall
and
mov
scas
mov
mov
cmp
aaa
pop
jno
or
push
fcomp
push
dec
jbe
outsl
fbstp
or
push
lea
mov
mov
push
leave
movsb
lahf
aaa
mov
push
in
and
stc
cltd
in
mov
popf
xlat
int3
das
jo
into
inc
sbb
adc
jo
jp
lods
mov
xchg
dec
inc
or
das
outsl
icebp
sbb
out
mov
icebp
inc
push
push
or
pop
daa
add
mov
xor
push
adcb
rorl
lods
in
and
and
test
fsubrs
into
es
inc
mov
and
push
pop
dec
lcall
dec
jo
inc
cmpsl
push
aaa
lock
test
mov
and
jle
xchg
movsb
outsb
hlt
fmuls
xchg
scas
hlt
hlt
mov
jnp
push
clc
sbb
dec
popa
sarb
xchg
pop
mov
mov
jb
sbb
push
xor
inc
sti
cmpsb
aaa
mov
mov
mov
loop
in
mov
xchg
shll
pop
jo
imul
std
sbb
and
je
test
xchg
pop
lret
aaa
cmp
stos
or
cs
push
cld
cmpsb
push
jecxz
shr
adc
push
sbb
pop
push
inc
cmp
add
mov
lea
add
xchg
xchg
pand
pop
ljmp
mov
shrl
push
xor
jbe
add
mov
rorl
gs
ljmp
ret
js
mov
and
mov
shll
aad
out
jnp
cmp
xor
mov
iret
cltd
sub
inc
dec
movsl
add
fistl
cmp
xor
pop
loopne
in
adc
jl
pop
mov
lcall
mov
scas
cwtl
jb
mov
stc
mov
pop
data16
orb
push
mov
dec
bound
leave
dec
ljmp
arpl
rorb
loopne
dec
mov
pop
rcll
xor
int
insl
pop
mov
mov
rcll
push
or
mov
mov
repz
mov
fistl
add
lret
hlt
sbb
es
mov
repnz
out
fdivs
or
dec
call
sub
pop
faddl
ja
adc
and
adc
push
mov
mov
mov
pop
inc
cmp
jle
or
dec
cli
stos
adc
mov
mov
mov
ljmpw
push
aaa
stos
sub
aam
jbe
fiadds
inc
popa
and
sub
imul
mov
in
dec
loop
insl
movsb
cld
cmp
cmc
rcrl
xchg
and
sub
mov
stc
jg
pop
xor
jo
repnz
movsb
dec
test
inc
mov
push
and
push
fidivrl
jne
pop
pop
mov
push
cld
ss
sbb
sbb
dec
jg
repz
movsb
mov
dec
fistps
bound
or
mov
daa
mov
push
cmpsl
cmc
mov
adc
cmpsl
xor
pop
repz
cmpsb
jmp
aad
mov
xor
cltd
jne
push
lret
and
sub
ficompl
test
insb
in
in
lahf
gs
or
in
scas
adc
insl
mov
and
mov
mov
insb
lds
inc
jo
jnp
in
stc
lock
in
divl
mov
lahf
and
in
pop
std
xchg
jle
sbb
xchg
dec
gs
mov
inc
xor
lret
cmp
loopne
jmp
and
inc
mov
jae
sub
mov
add
cmpsl
test
mov
jae
outsb
inc
mov
shld
ret
scas
add
jnp
jl
repz
mov
push
movsl
xor
sub
jge
nop
fldcw
mov
mov
lret
dec
jecxz
xchg
cld
mov
xchg
cmp
jb
scas
pop
or
mov
movl
or
sahf
inc
andl
mov
call
add
push
jno
jne
mov
fstl
dec
mov
scas
orl
jecxz
incb
mov
out
daa
rorb
fisttps
pop
dec
xchg
arpl
addl
cmp
cmpb
or
push
mov
mov
lds
and
dec
xchg
sbb
or
inc
mov
add
enter
sub
add
xchg
mov
adc
leave
cwtl
jbe
movl
dec
in
in
sahf
mov
ret
sahf
jp
mov
push
and
xor
arpl
jne
jbe
xor
sub
call
mov
cmp
mov
adc
mov
mov
mov
mov
mov
jl
hlt
adc
sarb
sti
dec
ja
and
mov
out
cmp
into
push
xor
xor
jbe
cwtl
mulb
cmp
stos
jp
jne
push
outsb
dec
sub
imul
es
lret
sbb
loopne
sub
inc
stos
jmp
mov
sub
in
pop
rclb
sti
sub
loop
sub
mov
pop
loopne
test
cmp
test
add
mov
inc
iret
inc
push
lret
xchg
mov
jno
cmp
cwtl
dec
jns
lods
or
call
pop
dec
adc
test
push
and
hlt
jnp
sbb
lahf
push
mov
xchg
adc
xchg
mov
inc
pusha
adc
inc
cmp
fsts
push
lods
dec
pushf
fbld
adc
imul
xchg
das
fildll
idivl
dec
inc
lret
jp
inc
shrb
mov
lock
out
or
jp
pop
jmp
dec
test
jecxz
repz
xor
jbe
cmpsl
mov
lods
xchg
add
mov
sbb
mov
adc
ss
mov
dec
pop
mov
adc
jp
fst
add
out
jnp
pop
int3
sub
out
pop
fnstsw
mov
leave
fisubrs
stos
cmc
fsubrs
loope
sub
insl
cmovle
pop
pop
cmp
pop
xchg
fidivrs
push
mov
mov
inc
divl
out
in
sub
mov
xchg
xchg
sub
mov
jp
fs
or
dec
in
jnp
mov
pop
jl
insb
ror
fisubl
jb
pop
mov
testb
inc
ljmp
xor
inc
fisubs
popf
dec
push
imull
pop
movsb
mov
aas
push
xchg
add
out
adc
movsl
shl
insl
dec
mov
test
add
repz
mov
icebp
imul
push
arpl
sbbb
arpl
pop
daa
outsb
insb
out
in
pop
xor
daa
dec
or
jae
add
out
inc
insb
frstpm(287
divl
pop
sahf
roll
pop
or
push
cmpb
push
lock
fcomps
cli
mov
sub
adc
xchg
inc
pop
xchg
dec
inc
dec
inc
and
push
inc
sub
into
jmp
dec
push
adc
dec
push
xor
addr16
add
jae
pop
xor
lock
repnz
jbe
push
outsl
fadds
cwtl
push
pop
or
fdivr
mov
ljmp
mov
mov
rcll
dec
or
jecxz
and
push
dec
fisubs
pop
mov
out
mov
fisubrl
and
lds
insb
cwtl
data16
mov
push
mov
ds
mov
adc
into
arpl
cmpsl
sbb
rclb
mov
fdiv
and
add
lret
or
loopne
sub
xor
adc
lods
pop
fwait
in
cltd
test
out
jecxz
mov
enter
and
test
or
mov
or
xor
adc
dec
jno
cmp
sbb
shrb
icebp
ja
test
testl
xor
dec
push
xchg
pop
call
repnz
ficompl
int
inc
daa
pop
xlat
inc
pop
shlb
or
push
insb
imulb
test
stos
or
and
inc
add
and
outsb
stc
jp
mov
push
cld
lahf
xor
iret
scas
aad
dec
pop
mov
es
sub
and
mov
mov
int
lods
inc
jnp
add
ret
aaa
movsl
test
and
ds
mov
sti
add
gs
push
sbb
js
in
cli
aas
add
mov
push
xchg
rcrb
insl
aam
add
test
test
dec
mov
fs
mov
cmp
xchg
ret
scas
xor
divl
je
xchg
or
mov
add
mov
lea
mov
mov
ret
xor
notl
movsl
outsl
fisubrs
push
loopne
hlt
or
rclb
idivl
aam
cmp
arpl
xor
inc
fsubs
mov
in
add
push
mov
cs
in
mov
xor
sub
adc
addb
nop
test
nop
sbb
xchg
jne
jg
mov
clc
loopne
jns
dec
mov
sti
cmp
sarl
xor
xor
jb
mov
loopne
int3
dec
cmp
xor
or
test
gs
or
mov
loop
sub
push
mov
sub
jle
jno
adc
pushl
dec
notl
xchg
ja
xor
out
mov
mov
xchg
lahf
push
cmpsl
and
negl
sub
loop
mov
dec
jle
pop
outsl
xchg
inc
mov
dec
rorb
inc
push
sbb
push
stos
xchg
fs
aam
scas
test
leave
shl
stc
test
pop
push
stos
aad
xchg
idiv
sub
xlat
outsl
ret
icebp
or
xchg
jbe
fiaddl
mov
repz
cmpsl
jg
xchg
fcomip
repz
or
sbb
push
inc
loopne
daa
jb
sahf
push
mov
dec
pop
push
xor
popa
fwait
int
jg
pop
das
hlt
mov
flds
stos
call
popa
mov
outsb
insb
cltd
ljmp
aas
jl
ret
mov
xor
int
sbb
inc
fnstsw
in
imul
xchg
insl
inc
pushf
out
mov
xor
inc
xor
in
sahf
cmp
shrl
dec
adc
dec
imul
lea
jne
pop
es
stc
dec
sbb
inc
clc
dec
push
mov
mov
xchg
int
jg
clc
or
sbbl
int3
stc
push
pop
xchg
cltd
sbb
mov
seta
adc
mov
outsb
cmp
shll
inc
test
pop
fimuls
cmpb
pop
pop
xorl
shlb
pop
xor
mov
lods
add
scas
and
testl
imul
lea
daa
jbe
pop
je
and
mov
popf
fst
mov
enter
std
repz
and
test
xchg
divl
das
fdivrp
cli
xchg
sub
daa
inc
xchg
pop
jmp
hlt
xor
lret
adc
movl
jne
fstps
cmp
pusha
push
add
lods
clc
jae
pop
les
sub
xchg
rep
mov
mov
int
and
out
push
sbb
add
cli
jmp
mov
mov
aam
scas
test
cmp
ret
cmp
sub
xor
jge
pop
jne
dec
std
jbe
xchg
fdiv
cmp
aad
push
xor
aas
push
outsb
cltd
or
lods
and
inc
sbb
xchg
jo
mov
cld
push
jns
mov
aad
es
inc
xor
add
jb
stos
jg
lret
sub
cmp
loopne
and
outsl
cvttps2pi
insb
int3
mov
mov
jo
js
cmp
push
arpl
jecxz
rclb
jo
xchg
sahf
arpl
or
pop
or
int3
dec
push
inc
jg
push
cmp
jno
adc
pop
pop
mov
or
push
mov
pop
addr16
int3
jnp
mov
adc
jns
and
je
cmp
pop
nop
std
mov
add
mov
rcrl
xor
cmpl
addr16
mov
push
mov
xlat
fisubrs
insl
add
mov
hlt
mov
into
fistl
or
daa
lahf
adc
loope
xchg
outsl
adc
fcmovb
inc
imul
mov
push
clc
cmp
addl
sbb
sub
icebp
dec
pop
out
jo
imulb
test
add
shrl
add
mov
mov
addr16
andb
int
negl
aad
out
adcb
mov
xor
loope
leave
loopne
jb
and
dec
cmp
mov
test
sub
or
out
mov
pop
inc
push
cmpsb
pop
test
and
out
fdivr
mov
jns
pop
xor
test
dec
or
adc
mov
or
sahf
cmc
int
mov
es
pop
ds
pop
mov
xchg
int
inc
icebp
stc
sbb
or
xchg
ficoml
shrl
stos
mov
stc
lea
lahf
xor
jbe
jbe
adc
sbb
and
fsubrl
jns
aaa
loopne
sbb
popa
pop
and
outsb
subl
and
jbe,pt
decb
lret
add
push
push
movsb
and
cmp
fwait
dec
out
out
push
cmp
jb
addr16
dec
orb
sbb
inc
push
add
mov
scas
fldl
stos
andl
xchg
in
loop
mov
adc
mov
es
sbb
pop
data16
xor
cmovb
add
sub
roll
jno
fistps
adc
mov
pop
push
stos
dec
mov
jne
xorb
cmp
mov
fdivrl
enter
xor
addr16
nop
pop
std
out
and
mov
mov
in
bound
push
inc
roll
orl
sbb
daa
ficoml
mov
fadds
xchg
xchg
imul
mov
dec
aad
mov
dec
cmpsl
js
mov
push
addl
sub
ret
sub
stc
xchg
jbe
mov
dec
lahf
jle
ja
ljmp
dec
add
and
int
imul
mov
insl
cmp
cltd
imul
sub
inc
stos
rcrb
cmp
or
mov
push
lret
jp
fisubs
les
shll
adc
xchg
jne
popa
jecxz
push
nop
sti
sbb
adc
sub
hlt
dec
push
inc
mov
mov
sti
mov
icebp
mov
cld
pop
fstp
jae
mov
xchg
jnp
sbb
aas
cmp
sti
xchg
and
inc
stos
sub
loopne
mov
mov
jno
xorl
or
cmp
or
sub
adc
pop
mov
mov
mul
jns
icebp
sbb
adc
jb
inc
shlb
repnz
mov
inc
inc
imul
jmp
mov
out
adc
mov
cltd
jae
fisubrs
outsb
mov
pop
adc
mov
popa
mov
inc
scas
loop
inc
out
push
lcall
add
in
outsl
sahf
fld
and
icebp
or
je
mov
sbb
pop
and
and
bound
test
jecxz
stc
cmp
xor
cmp
lret
xor
sti
pop
mov
cmpsl
mov
sti
test
xor
sbb
lea
jno
hlt
jb
add
subb
pop
pop
cmp
mov
imull
lahf
js
cmp
scas
in
mov
dec
mov
leave
fs
aam
xor
into
mov
in
aad
xlat
lret
out
into
mov
jne
lds
rorl
and
and
or
or
lahf
xor
push
std
xorb
repz
shrb
push
test
bound
mov
mov
sbbl
xchg
fucomi
pop
push
mov
fdivs
or
or
mov
mov
xorb
scas
xchg
sub
cmp
push
jae
jmp
mov
cmpsb
pop
loope
mov
and
je
sub
inc
call
inc
ja
jae
cmpl
mov
in
jecxz
cli
push
add
mov
push
pop
push
xor
xor
inc
fisttps
pop
scas
shl
xor
mov
sbb
rcl
or
mov
push
mov
fwait
mov
push
pop
scas
jg
mov
or
push
cmp
dec
lds
dec
addr16
jmp
idivb
nop
sbb
lea
adc
inc
arpl
negl
into
jnp
test
cmp
push
push
xchg
jge
mov
aad
push
shl
std
add
adc
jbe
pop
int
arpl
fstl
lods
push
cmc
lods
sti
pop
cli
pop
pop
and
inc
inc
xor
in
scas
addl
cs
inc
mov
inc
or
fimuls
mov
stc
dec
xlat
mov
or
inc
mov
andb
jecxz
outsb
cmp
std
mov
test
les
xorl
xor
int
outsl
clc
jne
sbbb
xchg
mov
arpl
cmp
ljmp
pop
idivl
pop
inc
nop
adc
les
mov
in
xchg
insl
xchg
and
dec
shld
outsb
test
lahf
lds
shl
lods
xorl
and
out
mov
jno
ret
jb
lret
in
jnp
push
fwait
jne
mov
and
jecxz
imul
popa
dec
jns
jne
push
inc
test
fs
xlat
or
repz
adc
pop
add
pop
xchg
xchg
pop
loop
je
push
cmp
mov
test
adc
pop
and
inc
sub
ss
xchg
jle
arpl
push
lret
cltd
add
lahf
xchg
sbb
pop
fcomp
jae
inc
stos
in
xchg
popf
push
into
stos
rcrl
xchg
out
cltd
cmc
sti
xor
inc
jb
mov
pop
loop
ud0
fs
push
xchg
mov
sbb
or
mov
or
lods
enter
in
sub
dec
xchg
cmpsb
das
adc
insb
pop
or
mov
sbb
pop
sub
push
or
jmp
call
jl
xor
mov
lds
mov
jno
jne
aas
or
movsl
hlt
push
out
mov
int
loope
sub
sbb
pop
push
xchg
shrb
inc
pusha
aam
mov
sub
add
cmpsl
push
out
fnstenv
test
xlat
mov
out
pop
repz
jmp
inc
idiv
into
add
sahf
xchg
loope
in
stos
jmp
xchg
cmp
pop
mov
lods
xor
inc
stc
dec
shlb
cltd
popf
aad
xor
cltd
aas
xor
ret
jecxz
cs
rcr
std
or
push
pop
inc
cltd
jecxz
adc
test
or
adcl
pusha
add
or
fistps
cmp
mov
xchg
pop
out
cmpsl
outsb
outsb
icebp
dec
lods
add
stos
outsb
push
jo
js
sbb
or
mov
jne
inc
xchg
sbb
loope
pop
das
ds
mov
cltd
dec
jmp
mov
and
in
lcall
add
and
mov
push
add
sti
out
sti
xor
xchg
jb
jno
int
insb
adc
xor
push
jg
xor
gs
mov
movsb
test
aam
out
mov
cmp
mov
or
add
loop
rdpmc
cwtl
insb
mul
pushf
or
pop
test
jne
push
and
lods
adc
dec
mov
pusha
nop
imul
lret
fs
inc
repz
push
pop
push
push
cli
mov
call
cmp
imul
sub
in
das
jo
mov
cmp
and
or
or
repz
fisttpll
sbb
pushf
dec
dec
daa
push
shrb
rcrl
dec
push
ret
scas
ror
daa
addr16
jbe
dec
nop
adc
xchg
test
call
cltd
xlat
dec
sbb
insb
iret
adc
and
sahf
inc
popa
cmp
hlt
insl
or
mov
mov
aad
pop
jmp
add
jecxz
mov
mov
fsts
and
add
adc
xchg
pushf
in
jnp
xchg
cltd
adc
jg
ljmp
stc
mov
in
xlat
mov
and
lret
int3
fisubl
rcrl
push
inc
sub
inc
rcrl
icebp
fcmovbe
sub
or
push
dec
push
push
pusha
mov
mov
xchg
mov
jecxz
ljmp
jae
dec
lea
mov
int3
fcmovnu
add
jo
negl
jp
addr16
and
push
data16
sub
push
add
mov
xchg
dec
loope
xor
pop
sbb
cmp
add
repnz
ds
inc
add
scas
mov
xor
and
mov
jl
xchg
dec
mov
lods
pop
sbb
bound
faddp
jne
pop
sbb
pop
and
movsb
cmp
xor
jg
gs
adc
xor
jnp
cmp
xchg
aad
in
pop
sbbb
xor
sub
dec
push
into
pop
mov
push
push
bnd
and
shlb
int3
daa
xchg
xchg
mov
mov
xor
enter
dec
and
jb
cltd
mov
lret
adcl
dec
stc
jno
fldl2e
je
loop
inc
jbe
mov
xorb
sub
idivl
ret
sbb
push
cmc
pop
test
and
dec
cwtl
add
insb
ja
lods
add
mov
shll
pushf
ss
rcll
push
mov
ds
cmpsb
and
adc
or
add
call
and
or
andl
cwtl
stos
in
pusha
sbb
int3
pop
xchg
cwtl
sub
xor
test
sub
addr16
mov
sub
sar
inc
rorl
cwtl
inc
xor
clc
mov
cmp
push
ret
inc
pop
push
mov
adc
dec
jbe
cmp
bound
mov
xor
cmpsl
lahf
xor
jle
lret
inc
inc
sti
pop
mov
push
mov
dec
jae
adc
push
aaa
insl
push
loopne
xchg
cltd
mov
stc
jmp
xlat
mov
ds
cli
jge
pop
lcall
inc
sahf
test
inc
orl
in
test
or
pop
jg
fs
inc
and
test
jo
adc
xor
mov
mov
or
push
fdivrl
dec
shrb
xor
out
pop
xchg
mov
jae
jmp
mov
incb
sbbb
mov
int
fisttpll
mov
sbb
cmc
decb
push
pop
mov
nop
push
mov
fsubl
mov
out
pop
add
push
adc
shl
js
jl
sbb
mov
cmpsl
insb
lret
add
mov
in
xchg
dec
sbb
jns
sti
pop
pop
cli
repnz
fistpl
out
mov
dec
movsl
cmp
fstpt
pop
push
sbbb
add
mov
outsl
cmpb
fnstenv
jl
cli
repz
repnz
and
dec
idivl
sbb
in
and
lds
mov
stos
cs
jg
or
sub
or
inc
mov
fmull
cmp
jl
int3
cmp
or
ret
xor
insl
dec
xchg
pop
addr16
push
imul
testl
es
int
push
gs
xchg
aad
push
in
call
add
mov
sbb
out
inc
cwtl
adcb
cmp
dec
ret
das
test
into
dec
repnz
das
sub
jno
out
mov
and
jl
xchg
stos
fistps
mov
push
push
fisubl
pop
or
sbb
mov
mov
jo
sbb
add
out
insl
push
mov
fidivrs
push
icebp
xchg
aaa
sub
add
sti
cmp
pop
xor
gs
rclb
jae
int
sbb
mov
xchg
mov
call
xchg
mov
out
repnz
mov
loop
aad
aas
mov
sahf
aaa
std
xchg
out
add
in
divb
fdivl
push
out
sbb
jb
mov
insb
inc
adc
test
scas
aas
js
outsb
xchg
pop
xchg
adc
in
mov
sar
pop
daa
xchg
sbb
pushf
adc
mov
lods
xchg
shrb
loope
sbb
test
scas
pop
sbb
mov
mov
arpl
pop
insb
pop
jle
push
or
daa
jno
mov
or
ds
jo
jle
add
insl
mov
idiv
or
push
imul
mov
cwtl
fisubs
bound
outsl
popf
mov
pop
sbb
ljmp
ss
stos
mov
jne
mov
add
jbe
lea
add
sub
dec
pusha
test
cwtl
out
stos
mov
cmp
gs
push
inc
pmulhw
add
sub
clc
xchg
or
pop
cli
stos
or
pop
scas
add
out
aaa
cmc
inc
cmpsb
dec
cli
pop
jp
cmp
jno
cmp
pop
sub
push
pop
cmc
mov
addr16
mov
std
or
push
test
insb
mov
jb
shr
pop
scas
in
push
inc
addr16
mov
aad
mov
ffree
bound
and
inc
push
popf
jno
out
in
jge
aam
pop
sbb
lods
jbe
mov
lock
sub
push
dec
and
push
js
iret
dec
test
mov
push
cmp
outsl
sub
add
mov
mov
inc
aam
jg
outsl
sub
push
ja
cmp
movl
out
out
jge
lods
push
adc
xlat
ds
icebp
lea
imul
pop
fidivrl
dec
stos
xor
dec
adcl
pop
ret
mov
lods
sub
push
mov
jb
sub
cmpsl
push
jnp
and
cmp
mov
out
jno
xlat
ret
into
mov
mov
lret
add
mov
adcb
mov
lock
push
repz
mov
push
ljmp
cmp
jg
jmp
data16
and
add
sbb
xchg
mov
ss
mov
ret
rorb
mul
xor
mov
jno
dec
mov
ror
sub
mov
insl
pusha
cmp
sub
lds
push
lcall
shll
loope
xchg
push
cmpsl
stos
xor
mov
cmp
inc
sar
das
push
inc
cltd
lock
es
seto
mov
inc
loopne
inc
jg
pop
sarl
out
push
sbb
fcomps
xor
enter
mov
sbb
inc
pop
add
aas
test
fbstp
jp
call
lods
inc
inc
xor
or
xchg
repnz
xor
sub
or
dec
insl
xor
sub
scas
and
data16
sti
mov
or
lea
jmp
adc
imul
ret
insl
mov
bound
push
push
cld
ret
sbb
cs
push
sahf
mov
loop
fidivl
mov
outsl
cmp
cmpsl
icebp
cmp
xlat
call
sub
fs
sbb
xchg
lea
leave
sbb
sub
and
ret
xor
xor
push
xchg
inc
xchg
nop
lcall
cmc
cmc
adc
add
push
mov
lret
lods
jns
negl
cmpsb
jmp
xchg
push
mov
aam
and
leave
jl
enter
in
push
mov
pop
fistpl
shlb
push
aad
in
icebp
pop
les
fcoms
test
test
fdivp
xor
aam
mov
rcrl
or
push
xor
std
divb
adc
data16
or
ficomps
or
jg
pop
fisubrl
lds
packssdw
jp
pop
or
stos
pop
inc
adc
rol
js
jp
cmp
call
sub
mov
std
in
xlat
mov
daa
cltd
jmp
scas
jmp
pop
fdivl
clc
repz
dec
or
adc
enter
repz
jmp
adc
or
cwtl
fdivs
mov
lahf
push
loopne
out
lret
add
or
jnp
xchg
outsl
sub
mov
cwtl
lcall
cmp
mov
mov
test
ret
mov
in
or
sub
mov
jb
mov
jecxz
jmp
stos
mov
mov
lcall
or
add
mov
add
dec
push
xchg
mov
cmp
xchg
inc
pop
xlat
and
sub
in
inc
les
testl
add
insl
cmp
fwait
mov
aas
pop
or
repnz
mov
fnsave
incl
pop
lahf
clc
mov
dec
fisubrs
and
mov
sbb
jno
aad
dec
xor
sub
sbb
jmp
mov
mov
bnd
push
xor
and
das
rcrl
stos
sbb
scas
cmpsb
fisubrs
js
push
fs
out
pop
sahf
sbb
pop
add
iret
xlat
loop
cld
test
aas
pop
xchg
movsl
jae
std
leave
mov
leave
xchg
push
out
jmp
sub
lahf
fsubrl
cmp
inc
addb
push
divb
dec
cmp
arpl
mov
adc
mov
dec
nop
xchg
scas
adc
loope
inc
sbb
nop
dec
push
daa
cld
call
sbb
test
pop
push
cmpsl
fcoml
jg
jae
adc
cmc
iret
mov
jecxz
mov
js
cmp
dec
mov
sbb
cmp
mov
cmp
movsl
and
lock
push
inc
imul
push
pushf
mov
jl
xor
inc
pop
mov
pop
push
in
shrb
push
sbb
dec
sahf
adc
les
jp
jle
lods
mov
or
sahf
fwait
xchg
jmp
cli
out
push
pop
stos
add
ret
aas
push
dec
jl
insl
js
sub
rcll
xor
pop
popa
cmpb
dec
lahf
jb
fildl
inc
shll
push
cmp
out
dec
pop
inc
scas
test
stc
mov
adc
lret
xchg
shl
push
sub
push
stos
out
mov
add
pop
adc
mov
cmpsl
repz
jb
cli
fimuls
scas
stc
pop
test
ja
xor
fnstsw
lods
aaa
lahf
out
sbb
cmp
dec
sub
in
test
data16
jns
sub
hlt
adc
adc
loopne
rorl
or
mov
push
js
imul
int
cwtl
and
mov
dec
loopne
jne
and
bound
sbb
lcall
fwait
push
rcl
xlat
stos
enter
mov
lret
mov
cmp
adc
pop
xchg
notl
jmp
out
str
test
push
sbb
sub
adc
enter
out
or
nop
adc
into
xor
cltd
aaa
jb
mov
and
icebp
mov
and
inc
jne
xor
daa
testb
cs
xchg
test
pop
inc
idiv
sub
call
xchg
mov
aad
int3
test
add
mov
xchg
cmc
insb
cltd
xor
fdivrs
inc
sbb
jge
leave
stos
mov
sbb
call
fmuls
push
push
inc
in
mov
ret
cmp
and
xchg
test
pusha
mov
xor
cld
mov
add
add
jo
mov
enter
popf
jmp
cmp
adc
scas
loop
pushf
inc
je
idivl
cmpsl
sbb
scas
lahf
mov
outsb
das
sbb
rclb
arpl
sub
lret
ds
gs
mov
addr16
aad
jo
lock
mov
call
push
mov
xor
fadd
lahf
jb
imul
add
dec
pop
aam
mov
jge
js
adc
js
imull
outsl
daa
push
cmp
roll
fisttpll
mov
jle
xor
xchg
jmp
pop
and
inc
lret
pop
mov
and
call
das
arpl
jns
mov
int
daa
mov
inc
nop
fisubs
sub
pop
sub
adc
cmpsb
int3
sbbb
dec
in
sub
out
pop
xchg
and
push
xchg
jb
sbb
out
xchg
cwtl
lret
addr16
push
jge
je
addl
adc
sbb
fdivr
cmp
inc
fs
dec
mov
test
adc
aaa
insl
add
xor
and
mov
test
mov
add
enter
lods
call
mov
pop
dec
push
clc
lahf
mov
mov
bound
jp
lods
loop
cmpsb
xor
fwait
lret
mov
adc
call
aad
cmp
insb
lret
jle
jmp
iret
push
mov
and
dec
pop
out
adc
inc
in
or
xlat
add
movsl
out
notb
xlat
inc
and
lea
add
andl
movsb
push
jp
cmc
sti
popa
jns
lock
push
rolb
xchg
and
out
sbb
push
scas
mov
ljmp
mov
adc
inc
jg
sbb
push
pusha
aaa
cltd
sbb
jne
cmp
mov
out
test
inc
mov
jp
mov
push
popa
xor
push
dec
push
mov
pushl
lods
mov
hlt
sub
lds
push
cld
ljmp
dec
inc
or
lret
pop
imul
out
push
aaa
adc
arpl
lret
mov
sbbb
sub
out
xchg
enter
xchg
lahf
sbb
int3
mov
out
mov
cmp
outsb
mov
gs
inc
out
stos
fwait
add
roll
loopne
ret
mov
push
sti
inc
imul
lret
addr16
inc
xchg
jecxz
mov
insb
rcrb
test
sub
cs
scas
fcmovbe
loope
jae
int
mov
std
adc
sub
je
cmp
cmpsl
outsl
lret
loop
or
mov
and
sub
mov
pushf
and
jmp
mov
or
push
add
mov
pop
cmp
orb
sub
sbb
aaa
jmp
clc
sbb
pop
and
mov
out
xchg
and
mov
xorb
ret
loop
lcall
xor
cmp
add
or
jo
into
or
scas
inc
inc
sbb
sbb
inc
out
push
or
lret
sub
lock
outsb
push
and
stos
pop
icebp
push
js
lods
in
in
sahf
dec
stc
lds
dec
sbb
dec
lds
push
pop
add
mov
jp
insl
lods
lds
jle
jbe
ret
fistpl
mov
arpl
inc
fwait
jo
repnz
out
sbb
imul
or
icebp
xchg
out
not
out
insl
push
lds
jbe
and
push
mov
sahf
cs
xchg
repnz
stc
add
dec
mov
jns
dec
int
cmpb
xchg
daa
fldcw
jmp
enter
sub
mov
testl
dec
mov
ficoml
jge
dec
adc
mov
hlt
in
mov
push
ret
inc
add
fwait
jb
fwait
sub
call
cld
mov
mov
movsl
outsb
in
lahf
loop
xchg
xor
cli
fsub
stos
icebp
xor
sub
lcall
arpl
leave
xor
xor
sub
xor
or
xchg
adc
or
jne
push
sub
push
lods
jnp
jl
xchg
or
lock
fsubrl
mov
out
into
lret
mov
add
icebp
push
sbb
test
xchg
mov
imul
jo
sub
dec
test
dec
mov
pop
pop
cmc
sbb
dec
fwait
std
xor
in
or
add
lds
shl
shll
movsl
sti
mov
pop
mov
sbb
dec
mov
pop
xchg
lock
dec
punpcklwd
xor
in
add
hlt
sbb
adc
add
mov
sbb
dec
mov
sbb
mov
mov
orl
daa
push
adc
and
repz
fsts
mov
jl
ljmp
jbe
rcll
or
outsl
testb
daa
ret
xchg
mov
dec
lahf
sub
xchg
pop
mov
pop
cmpsl
mov
fcomp
inc
fxch
mov
in
lahf
pop
jp
in
sub
popf
xchg
mov
mov
jbe
push
rorl
movsb
sub
adc
push
and
dec
inc
lret
loope
inc
push
push
add
inc
cwtl
iret
dec
arpl
cmpsl
jge
fistps
fdivr
sub
add
pop
sub
dec
xchg
push
movb
mov
std
push
xchg
jnp
gs
sbb
or
cmp
mov
arpl
cmp
xchg
imul
push
and
mov
js
sbb
and
xor
sti
cmp
xchg
test
xchg
insb
ds
loop
add
push
mov
mov
jns
fucomip
jae
push
jecxz
pop
pop
into
loop
test
jg
adc
outsb
into
push
mov
icebp
cli
fwait
testb
aad
cli
add
icebp
jmp
xor
loopne
mov
jl
les
data16
mov
xchg
test
push
aad
imul
into
pop
or
xor
xchg
push
lcall
sbbl
xlat
mov
inc
cmpsl
xor
adc
cmp
add
jnp
mov
and
arpl
inc
sbb
mov
aad
push
imulb
int3
call
in
addr16
mov
nop
dec
cmpl
das
outsb
mov
repnz
sub
dec
push
fcoms
ljmp
daa
stc
sbb
adc
aaa
sbb
push
inc
popl
dec
es
mov
icebp
clc
mov
shlb
sbb
sub
sti
rolb
into
lds
out
cmp
push
das
xor
inc
sub
mov
js
pop
syscall
sub
sbb
icebp
sahf
inc
mov
in
sahf
mov
and
fiaddl
mov
js
icebp
outsb
xor
fstl
push
stos
test
pushf
or
sub
mov
sbb
mov
xchg
test
out
push
test
pop
idivb
fs
test
clc
add
xchg
inc
cli
into
aaa
aas
mov
sub
cmp
cwtl
ja
adc
scas
pop
xchg
inc
mov
rolb
or
xchg
jae
xchg
je
in
mov
pop
daa
aam
sbb
dec
xchg
cmp
cld
stos
adc
and
aam
scas
mov
popf
inc
pop
inc
or
inc
in
mov
add
mov
push
ret
mul
pop
jb
clc
scas
push
pushf
bnd
ss
insl
std
outsb
inc
add
mov
in
cmp
xor
jge
xor
mov
cmp
repz
push
and
push
ljmp
mov
out
mov
pushf
pop
adc
mov
sahf
pusha
lds
cmp
sub
les
data16
push
adc
push
mov
dec
push
jmp
enter
sahf
add
jbe
movb
imul
add
xchg
xor
jg
cld
or
loopne
adc
mov
jne
gs
divl
push
xlat
push
lds
fidivrs
gs
fmuls
mov
push
inc
mov
ret
je
mov
leave
and
fcmovnb
imul
lock
dec
lret
outsb
enter
sbb
fsts
addl
inc
out
rclb
xor
push
inc
and
test
popa
dec
aad
adc
stc
xchg
mov
add
sahf
push
pop
or
bound
adc
mov
test
push
jne
in
push
or
xchg
outsl
mov
mov
in
shll
adc
jb
loop
and
addr16
das
sbb
scas
inc
popf
adc
xchg
lods
adc
sbb
push
pushf
mov
loope
inc
aam
cmp
aaa
sub
add
sbb
icebp
pop
mov
mov
ljmp
mov
in
jb
add
enter
mov
sub
int
lahf
in
cmp
lds
popa
scas
arpl
je,pt
lret
mov
xchg
js
call
scas
mov
jecxz
and
sub
pop
inc
pushf
jae
pushf
call
sbb
inc
lea
repz
xchg
nop
sbb
aas
pop
inc
mov
cmp
mov
iret
orb
fisubrl
repnz
mov
icebp
insl
lock
ret
leave
sbb
loop
enter
lret
sbb
cltd
leave
fisttps
add
adc
mov
push
das
pop
fisubl
test
inc
popa
int
loopne
mul
rol
leave
repz
jle
sub
sub
adc
fdivrs
add
xlat
cld
dec
add
mov
in
movsb
int
sub
ljmp
inc
sahf
cwtl
mov
movsl
lea
test
lock
mov
xor
in
pop
daa
sub
and
inc
lret
insl
or
mov
cmp
shlb
xor
stc
sub
popa
in
cmp
mov
mov
add
cltd
xchg
addr16
cmp
sub
aam
jp
mov
cwtl
pop
inc
add
fisubl
or
dec
sbb
pop
mov
arpl
aam
scas
inc
mov
fucomi
mov
pop
mov
add
pop
and
adc
insb
jae
xor
dec
pop
jo
mull
repz
fsubrp
scas
stos
lods
bound
mov
ljmp
xchg
sbb
popa
pop
mov
ljmp
dec
cltd
cmpsl
cld
bound
arpl
imul
hlt
imul
push
inc
fiadds
ret
jns
fcompl
sbb
cmp
lret
cmp
cmpsl
and
push
inc
pop
inc
fs
xchg
ret
jl
xorb
lcall
fidivrs
mov
sbb
jl
xor
stc
cmpsl
or
scas
es
adc
mov
arpl
lea
rcrb
int3
mov
data16
mov
adc
ljmp
sbb
push
insb
inc
jbe
mov
and
dec
lods
inc
fidivl
out
frstor
ret
pop
addr16
and
hlt
push
push
fs
or
insb
mov
divb
ja
inc
mov
jge
test
fs
dec
push
popa
mov
shl
jns
mov
pop
push
rorb
test
cmp
pop
mov
pop
imul
xlat
mov
pop
int3
pop
sub
jae
jb
jg
jmp
cltd
push
scas
sub
add
dec
cmpl
mov
or
xor
xor
icebp
xchg
mov
test
shrb
xor
pop
push
mov
btr
pop
push
ja
or
int
xor
push
je
push
jle
out
sbb
mov
add
mov
mov
enter
lock
in
xor
mov
dec
inc
cmp
in
clc
fimull
daa
xchg
jno
sub
push
push
rorb
jp
pop
data16
xor
cltd
lcall
mov
pop
sarl
push
rolb
xadd
push
ret
dec
pop
dec
dec
les
loop
mov
stos
out
and
jge
cmp
push
outsl
test
fimull
nop
lods
push
mov
rorb
inc
push
dec
std
fmuls
or
xor
dec
inc
stos
adc
mov
xor
jae
call
adc
sbbb
inc
jp
adcl
push
repz
xchg
jb
xchg
leave
and
fstps
xchg
adc
xor
push
mov
js
push
mov
and
mov
call
inc
es
data16
xchg
inc
jb
adc
or
push
popl
or
mov
mov
cli
add
out
rol
cmove
ljmp
or
jmp
push
xor
es
inc
mov
jmp
xchg
in
loope
sti
mov
xchg
mov
arpl
add
push
dec
pop
in
mov
roll
mov
inc
inc
dec
sbb
mov
push
pop
add
mov
jae
push
pop
sub
rcrl
pop
ljmp
cmp
fildl
cli
lods
daa
jne
push
enter
push
add
cmp
mov
outsl
orl
in
jl
in
xchg
dec
cmp
stc
roll
add
inc
jmp
pop
scas
stos
repz
lret
out
outsb
loope
or
sub
stos
sub
lret
dec
or
and
popf
cmp
outsl
lret
mov
iret
push
scas
mov
and
push
repz
gs
scas
xlat
jmp
loopne
mov
cmp
mov
adc
sar
rcll
das
jl
push
fistl
push
xor
ljmp
imul
xlat
mov
dec
inc
jp
xor
push
test
movsb
pop
push
and
inc
cmpsb
call
aad
testb
test
sbb
jl
lret
dec
cmpsb
dec
xor
out
repnz
fcomps
mov
push
inc
dec
or
loope
push
xor
aaa
adc
in
inc
dec
pop
nop
loop
test
pop
lock
scas
add
cmc
out
enter
cmp
mov
enter
aaa
push
pop
inc
cltd
in
imul
aad
movsb
lods
stos
insb
or
fildl
xchg
jp
or
rolb
lods
sbb
cwtl
pop
push
jle
in
insl
loop
sub
xor
mov
push
mov
imul
lock
adc
xchg
test
ljmp
lds
xchg
and
adc
adc
lds
cld
pop
pushf
js
ficomps
sbb
push
dec
js
xor
sbb
js
jle
xor
fcmove
sti
push
pop
jo
mov
movsl
dec
fdivrl
xchg
sub
in
push
mov
fsubp
dec
push
dec
dec
push
mov
adc
cmp
loope
mov
lods
std
pop
jne
add
or
fnsave
nop
sub
dec
leave
add
and
movsl
inc
inc
or
test
push
mov
push
mov
ss
in
test
pop
adc
into
push
test
cmp
push
jecxz
scas
xor
dec
clc
jge
push
mov
test
aam
aas
cltd
out
cltd
xor
js
int3
mov
add
push
pop
ret
andb
cs
and
mov
jno
sahf
popf
ret
push
sub
into
das
adc
lret
lods
incb
roll
or
in
ret
push
sbb
mov
inc
sub
xchg
push
outsl
into
enter
push
cltd
movsl
into
xor
ljmp
dec
pop
repz
outsb
xorl
pushf
in
add
leave
repz
in
inc
mov
les
bound
push
mov
insl
sub
daa
cltd
rolb
pop
shrb
lret
lret
icebp
xor
jnp
mov
dec
std
loopne
xor
sbb
jne
mov
jae
mov
fnstsw
or
sahf
xchg
fdivrl
adc
jno
dec
ror
jns
jl
fs
push
movsb
or
je
pop
imul
jnp
push
mov
push
pop
mov
add
and
cmova
inc
sahf
cmpsb
push
pop
add
mov
jmp
sbb
out
ss
pop
mov
pop
mov
push
lea
inc
mov
push
fidivrs
mov
jo
idivl
neg
mov
mov
popa
nop
std
popa
mov
xchg
inc
sahf
bound
and
inc
idivw
inc
sub
ror
ds
cs
mov
mov
add
cld
push
cltd
mov
mov
fisttps
test
push
andl
jmp
sub
inc
dec
les
pop
es
mov
lret
stos
iret
dec
and
lret
cmc
lods
fcoml
dec
movsb
sub
out
les
pop
mov
xchg
pushf
pop
sbb
scas
pop
sbb
stc
adc
pop
xchg
pop
dec
xor
inc
inc
xor
pushf
fdivl
mov
stc
xchg
ret
scas
fsubrs
in
cmp
in
xchg
cltd
mov
sub
out
push
push
out
mov
fs
xchg
pop
fs
pop
adc
sbb
mov
mov
push
cli
das
add
dec
cwtl
mov
add
cmp
fwait
cmp
ficoml
data16
mov
gs
lea
pop
aad
loope
sub
js
lds
mov
adc
push
mov
mov
repz
dec
pusha
cmp
fists
mov
cli
dec
cs
lods
push
int
mov
adc
push
jmp
loop
pop
aam
test
add
cld
jne
data16
loope
ljmp
aas
push
jg
sahf
insl
push
mov
sub
cmpsl
push
lcall
aad
inc
fnstsw
push
aad
hlt
inc
pushf
lds
mov
sbb
mov
lahf
push
cltd
ja
ljmp
sbb
cltd
je
inc
fiadds
adc
fwait
mov
cli
rorl
in
mov
lret
daa
adc
jae
cld
mov
outsl
loopew
ror
lret
loope
repz
mov
in
xor
dec
ret
aaa
fcmovb
call
addr16
jmp
sub
mov
daa
adc
leave
stos
lea
mov
pop
rorb
pop
sarl
mov
adc
mov
je
decl
lret
movsb
adc
loop
cmp
push
rcrb
xor
push
rcrl
jae
pop
sbb
pop
or
xchg
xchg
shrb
jo
sti
mov
ds
xchg
jg
jecxz
aam
outsl
and
lret
ret
mov
loopne
push
fs
mov
cs
out
cld
out
arpl
adc
mov
jp
jo
pop
push
push
mov
sbb
sar
xchg
xor
dec
lods
out
test
mov
sbb
movsl
stos
cwtl
scas
push
xorb
inc
cmpl
movb
dec
xor
or
movsl
push
pop
jnp
nop
imul
cld
mov
mov
or
clc
stos
mov
and
stos
repnz
mov
pushf
sbb
aas
cmpsb
push
out
dec
pop
mov
out
pop
or
jmp
pop
orb
and
xchg
int3
ret
pop
push
mov
push
stc
xorl
dec
jp
cwtl
xchg
or
es
mov
scas
ja
sub
in
js
mov
mov
jne
mov
pop
sbbl
negl
cmc
pop
jae
xchg
cmc
test
jle
mov
adc
mov
push
dec
std
aad
ret
lds
or
rcll
mov
jo
insb
cwtl
lahf
pop
jo
xorl
sti
loop
pop
sbb
mov
fildl
xchg
inc
cmpsb
dec
or
sub
icebp
daa
mov
aas
pop
fstpl
bound
cmpsl
xchg
les
jl
or
scas
mov
push
pop
adc
into
popa
mov
and
and
pop
adcl
scas
scas
mov
lods
js
xchg
pushf
addr16
dec
mov
cmp
sbb
mov
imul
pop
cmp
dec
jg
mov
xchg
and
adc
cmpsb
rolb
out
pop
mov
cld
out
loop
jle
xor
fiadds
scas
aam
lcall
hlt
gs
lret
inc
ja
add
sub
fs
mov
fbld
mov
mov
adc
jo
repz
test
jecxz
rcrb
out
cmpl
adc
adc
jecxz
test
or
lcall
xchg
sub
mov
gs
mov
adc
stos
lahf
or
pop
inc
and
xchg
into
stos
ret
int3
enter
adc
pusha
inc
pop
es
mov
adc
inc
int
sti
pop
push
ja
jg
dec
mov
rorl
push
lret
or
xchg
lret
xlat
popa
in
mov
icebp
jae
ja
and
push
pop
outsl
insb
mov
rcl
add
mov
jmp
cmp
pop
loope
lods
leave
sti
leave
aas
loopne
in
loop
jl
enter
xchg
hlt
inc
bound
sub
das
lds
mov
or
rcr
add
pop
mov
pusha
scas
cmpsb
fisubl
adc
mov
jge
aas
mov
inc
mov
out
pop
sub
loopne
jae
arpl
ret
imul
lret
fildl
cmc
jp
lret
mov
dec
mov
jb
jae
pop
sub
mov
jmp
add
imul
cmovnp
call
mov
xor
pop
lahf
shl
jnp
and
das
in
imul
stc
es
imul
sub
imul
mov
xchg
cmp
and
push
push
sub
sub
shl
int
push
fiaddl
addl
lods
jecxz
cwtl
iret
xor
rcpps
rol
popa
or
fisttpl
repz
push
popa
or
ret
pop
add
aas
cmp
mov
pop
shlb
icebp
les
mov
inc
fstpt
out
push
data16
and
adc
cmp
mov
or
dec
cmp
cmpb
outsl
lret
test
jbe
imul
add
shlb
psrlq
jne
push
test
out
iret
pop
inc
sub
aad
dec
leave
mov
mov
jne
add
mov
dec
les
sub
add
push
push
daa
xor
or
aam
sbb
dec
adc
xchg
cli
movsl
cmp
jge
cmc
testb
inc
sahf
sbb
pop
xchg
mov
subb
jnp
fcomps
enter
mov
sub
mov
push
or
aam
inc
int3
xchg
jge
mov
jg
in
addl
adc
repz
adc
fwait
xchg
ret
cmp
sub
add
xlat
into
dec
and
emms
mov
cmp
xchg
cmpsb
aaa
mov
xor
daa
repnz
inc
loop
ftst
sahf
xchg
xchg
daa
in
jl
std
jp
mov
pop
pop
dec
xchg
jl
xchg
pop
push
jns
das
ja
int
es
cmpsl
push
jl
out
movsl
popa
outsb
mov
dec
and
scas
push
pop
clflush
lods
test
shll
jg
and
jmp
mov
in
cmp
dec
es
jge
lret
xchg
sub
jno
mov
out
outsl
shrl
pop
jne
iret
mov
test
ss
push
es
sbb
push
imul
int3
clc
mov
xor
sbb
loope
pop
push
aas
loopne
sbb
push
sub
test
pop
loop
fsts
mov
cmp
pop
lea
dec
mov
mov
sub
sbb
mov
leave
int
rorl
ffree
int
adc
xor
movsl
test
sub
lret
lahf
fidivs
cmpsb
mov
mov
or
push
mov
sbb
fstps
add
jg
or
add
mov
repz
inc
push
or
pop
int
int3
xor
aaa
dec
fnstcw
stos
mov
xlat
test
or
imul
jmp
mov
inc
add
mov
jb
pop
adc
lea
push
push
in
mov
mov
out
scas
imull
push
inc
test
loope
mov
pop
mov
lods
and
outsl
mov
cmpsb
jne
in
aad
cwtl
loope
stos
inc
lods
sub
or
and
popa
inc
sti
cmp
mov
in
push
sbb
movsl
popa
pop
andb
mov
in
stc
adc
in
wbinvd
movsb
nop
repnz
xor
adc
adc
lock
aaa
mul
pop
push
ds
jns
insb
cmp
mov
hlt
jge
xor
ret
nop
inc
repnz
mov
test
std
xor
adc
sbb
mov
dec
fdivr
clc
push
cmp
xchg
fadds
and
pop
or
jg
adc
popf
dec
cmp
mov
push
jmp
shr
cmp
inc
adc
loop
imul
push
test
push
imul
rorb
cmpsl
cmp
mov
enter
in
hlt
jecxz
cmp
ficoms
pusha
jb
out
call
mov
push
jo
fimuls
adc
mov
fs
les
xor
mov
les
pop
cli
adc
lcall
aad
loop
dec
divl
loopne
mov
inc
xor
push
xor
jp
pop
adcb
xchg
xor
mov
mov
movsb
jmp
mov
push
cwtl
cld
pop
insb
jae
in
xchg
gs
inc
out
add
add
xlat
lds
scas
push
adc
cmp
xchg
jge
js
adc
xchg
inc
out
cmpsb
lods
mov
rcrl
fisttpl
jmp
sti
repnz
adc
jg
int
insl
push
vphaddbd
jae
xchg
dec
and
loopne
and
cli
loopne
jo
cltd
pop
loop
xchg
jo
push
subl
or
sarb
rclb
shrb
rorl
movsl
xchg
cmp
mov
in
das
mov
fidivl
test
jl
jae
cmp
jo
out
mov
inc
pop
test
or
mov
push
addl
adc
dec
out
push
aam
ja
mov
icebp
and
lds
and
inc
jne
cli
and
xchg
popa
int
bound
js
push
inc
pusha
jae
addr16
xchg
push
in
and
stc
inc
cltd
fistpl
push
and
add
inc
in
inc
rcrb
lahf
in
cld
dec
es
into
outsl
cmpsl
xor
jns
add
pop
sbb
xor
cmp
mov
xor
imul
shlb
inc
repnz
mov
xorl
pusha
and
dec
sub
mov
mov
or
nop
std
outsb
xchg
mov
das
aaa
jg
jbe
mov
mov
das
sub
enter
lahf
and
rorb
mov
out
cltd
jp
movsb
jle
rcll
out
lret
or
mov
lock
sti
adc
lret
leave
in
dec
test
or
mov
mov
mov
mov
fs
addl
xlat
lods
es
xor
sbb
int
sub
push
scas
stos
and
xlat
dec
pop
arpl
test
dec
call
push
aas
mov
xor
jg
ret
push
xor
jae
sbb
pushf
int
js
add
xchg
pop
lods
add
movb
sub
cli
jl
xchg
and
fs
sbb
mov
insb
inc
mov
jmp
xor
dec
sub
jnp
sub
xor
mov
cmp
test
ds
call
add
lods
cmp
push
fwait
scas
subb
arpl
xchg
pop
repnz
rorb
sbb
sahf
call
add
fs
mov
jbe
aam
imul
mov
movsl
loop
scas
sub
jle
push
mov
dec
jno
imul
mov
mov
cmpsl
das
dec
aad
movsb
cmpsl
fwait
jno
dec
fdivp
es
xor
mov
rcrb
adc
ja
cmp
lahf
scas
xor
inc
push
mov
loopne
into
mov
pop
inc
mulb
inc
dec
fsubs
call
dec
pop
fwait
xor
leave
dec
xchg
adc
sbb
jl
cmpsl
aaa
xchg
and
adc
pop
cld
and
js
adc
jecxz
ss
inc
jne
add
mov
mov
dec
cmpsl
cmc
push
mov
daa
pop
xchg
or
mov
cmp
xor
test
xor
dec
cmp
hlt
fdivs
fnstcw
ljmp
lret
mov
xor
pop
xchg
xor
sbb
mov
inc
out
and
mov
shll
jmp
push
pop
out
cli
or
mov
clc
les
jmp
xor
jmp
shlb
jecxz
imul
dec
jp
hlt
mov
xchg
add
loopne
fsubr
movsl
jg
inc
sbb
jb
imul
dec
lods
insb
jo
loopne
pusha
js
test
mov
cli
stos
add
adc
cmp
dec
xor
pop
sbb
mov
sub
inc
lret
add
or
dec
sti
nop
insl
xchg
ss
pop
mov
fldl
or
inc
mov
jnp
push
jmp
mov
and
out
enter
mov
call
sarb
xor
call
mov
mov
shll
inc
sbb
pushf
mov
cmp
inc
xor
loop
mov
push
or
jecxz
jae
xor
lods
mov
popf
adc
scas
aas
cmp
jge
insl
out
add
mov
and
inc
mov
or
out
and
and
cld
xlat
mov
in
jne
mov
mov
cmp
mov
add
in
jno
fdivl
insl
and
insb
jae
mov
pop
mov
mov
add
mov
xchg
icebp
jl
sbb
fiadds
push
gs
adc
jb
lahf
adc
add
jle
add
test
pop
pop
shll
nop
mov
xor
std
mov
stos
inc
lods
movsl
out
in
fidivrl
push
mov
pop
fldt
arpl
push
mov
inc
icebp
sbb
mov
or
pop
cmpsl
inc
cmp
sbb
mov
jne
cltd
loopne
rcrb
xchg
lds
xor
in
push
in
pushf
push
mov
xchg
dec
xor
imull
mov
push
in
mov
add
cmpsl
in
xorb
rorb
rolb
rcrb
add
add
mov
dec
xchg
and
lods
push
inc
in
stc
int
and
mov
xlat
test
push
jae
lea
and
call
sub
or
pop
ret
leave
xchg
jbe
add
mov
inc
or
or
ret
mov
es
xchg
bnd
sbb
int3
jnp
es
or
inc
ds
xchg
sub
xchg
es
mov
sahf
mov
insb
mov
fiadds
in
adc
lret
mov
mov
lods
mov
pop
in
jae
xchg
mov
loop
add
fdivrp
dec
fisubl
pushf
pusha
mov
push
ljmp
mov
outsl
repnz
ret
out
mov
inc
je
sbb
lock
inc
mov
push
cs
or
scas
test
call
xlat
nop
mov
push
inc
aaa
aam
movsl
and
or
lret
jne
stos
icebp
out
mov
adc
loop
loope
out
sub
inc
sbb
shlb
sbb
jno
push
jnp
gs
shrl
inc
jle
scas
lahf
adc
cwtl
scas
fstps
das
popf
mov
mov
adc
mov
rcr
pop
xchg
mov
dec
das
sub
mov
test
or
jns
sbbb
xlat
pop
cmpsb
gs
or
mov
adc
cmp
insl
popf
movsb
insb
rolb
loope
icebp
xchg
test
pop
add
push
cld
sub
xor
aad
push
jge
mov
out
insl
divb
and
movsl
mov
enter
mov
mov
roll
sub
dec
iret
aam
push
out
xor
stc
test
push
dec
lcall
cltd
fnsave
scas
fldl
ja
imul
mov
popa
repz
adc
dec
repnz
and
mov
pop
lret
lret
xor
dec
mov
pop
loop
jge
adc
js
jnp
and
sbb
jbe
jnp
aaa
in
mov
lar
pop
ret
push
out
movsl
cmp
bound
repz
scas
mov
adc
js
cmp
ss
cmp
pop
orb
stos
jno
mov
cli
loopne
arpl
jmp
push
inc
cmpsl
outsb
notl
dec
adc
pop
dec
push
pushw
lea
and
and
dec
mov
jmp
out
rcll
ss
jbe
xor
mov
popa
movsl
push
leave
xchg
out
lds
int3
xor
scas
xor
pop
clc
xor
int
xlat
cli
mov
cld
int3
push
mov
sbb
sti
sbb
and
pushf
outsl
add
testb
daa
jl
mov
es
repz
int3
mov
sbb
sub
out
xchg
sub
fcoms
dec
dec
dec
jb
outsl
ret
dec
adc
adc
cmp
adc
sub
sbb
movsb
scas
and
std
hlt
shl
lds
icebp
fs
xor
jne
in
mov
leave
stc
inc
xchg
lea
ja
mov
int
mov
sbb
dec
jmp
faddl
xchg
addr16
dec
cmp
aas
dec
sti
mov
test
push
sub
pop
dec
js
xor
and
mov
int3
leave
imul
cmpsl
cmc
mov
das
imul
jmp
shrl
push
test
lock
fidivrs
arpl
das
imul
push
test
cmpsb
xor
mov
sbb
dec
sbb
sub
rclb
insl
lcall
push
pop
add
mov
es
out
mov
mov
test
imul
sar
fnsave
fidivrl
sub
insl
es
shr
push
pop
xor
pop
and
cwtl
mov
inc
mov
das
adc
push
jb
sbb
mov
in
aad
inc
and
pushf
push
icebp
push
shl
xor
mov
and
dec
sub
pop
sub
inc
xchg
cmp
adc
push
js
lods
sbbb
loopne
mov
inc
arpl
cwtl
jnp
dec
adc
in
add
jp
notb
int3
pop
adc
cmp
test
pop
mov
sub
cmovg
ret
xor
roll
cmp
lods
rcrb
pop
mov
pop
xor
pop
mov
cmp
add
scas
inc
mov
mov
cmp
subl
mov
jmp
cmc
das
test
sbb
ret
push
inc
dec
aas
dec
jb
sub
mov
jmp
popf
add
hlt
das
sub
fisttpll
dec
mov
fisttpll
push
pop
mov
jae
popf
mov
sbb
outsb
mov
mov
mov
cltd
enter
loopne
push
hlt
pushf
lahf
fstpl
gs
aas
add
dec
pop
mov
lock
into
mov
sub
nop
lcall
add
orl
leave
mov
gs
out
pop
rcrl
imul
idivl
xchg
push
je
icebp
or
add
andb
dec
dec
leave
jecxz
add
inc
pop
shll
add
in
inc
lcall
test
inc
pushf
shll
adc
divb
sbb
xor
pop
nop
mov
shrl
call
or
cmp
movsl
in
js,pt
aad
in
jo
mov
push
xchg
cmpsb
mulb
push
movsl
jns
lea
push
in
cmp
jmp
imul
dec
pop
nop
pop
xchg
sti
adc
leave
in
jno
xorb
dec
cmpl
fwait
mov
adc
sbb
arpl
fwait
push
adc
and
outsl
mov
pop
cmp
pop
icebp
stos
mov
scas
mov
mov
cli
sub
pop
mov
int
xchg
mov
mov
out
pop
int3
push
shlb
mov
imul
xor
mov
test
sbb
sbb
cmpsb
cmp
xchg
mov
icebp
out
out
shll
push
sbb
loope
mov
jbe
aam
push
stos
fs
sahf
push
jmp
inc
cmp
dec
add
testl
cmp
rcrb
sub
jge
push
popa
enter
dec
out
mov
mov
pop
add
loope
movsl
cmpsb
jns
pusha
daa
div
mov
xor
js
cmp
push
lods
ljmp
dec
mov
leave
sahf
sub
pop
dec
cs
loopne
xchg
pop
in
jmp
fsubrs
hlt
xchg
inc
fisubrl
repnz
pushf
mov
xchg
inc
loopne
enter
xor
sahf
nop
sbb
jbe
add
and
push
test
mov
ret
js
stos
mov
sbbl
and
aaa
mov
pop
dec
lea
shll
roll
xchg
and
jg
inc
xchg
popf
xchg
mov
or
xchg
addr16
inc
pop
cmpsl
sbb
popa
mov
ficoml
cs
test
inc
xchg
mov
xor
lret
sti
dec
rcrb
test
repnz
mov
mov
adc
inc
or
stos
insb
int3
xchg
add
xchg
js
mov
icebp
dec
sbb
push
xor
xchg
pop
mov
push
mov
out
lock
ss
xchg
lods
and
jnp
jns,pn
pusha
xchg
cmp
stos
int
xor
xchg
incl
and
daa
addb
lret
repz
popf
xchg
mov
sbb
add
xor
adc
shrb
bound
mov
js
movsl
push
in
inc
or
pop
jg
repnz
rolb
mull
pop
xchg
in
jge
pop
mov
xchg
imul
hlt
sbb
push
dec
xchg
pop
ss
les
push
sbb
icebp
dec
xor
dec
adc
add
and
sahf
cmp
rorl
or
out
movsl
jnp
subb
mov
or
pusha
in
push
mov
mov
jp
sbb
mov
sti
push
add
push
insb
adc
push
faddl
in
rolb
lcall
mov
xchg
fwait
mov
or
adcl
dec
loop
enter
sbb
inc
insl
pop
sbb
mov
addl
fiaddl
lea
sub
push
xchg
dec
fistl
repnz
shl
xchg
sub
lock
lock
clc
xchg
aaa
dec
xor
sbb
xchg
arpl
ret
pop
add
outsb
hlt
jmp
out
aam
push
cmpsl
clc
push
loope
lret
iret
xor
int
jno
out
pop
mov
mov
cmpsl
add
mov
jne
pop
inc
xor
shl
aaa
in
cmpsl
push
lods
leave
test
dec
jns
jnp
clc
aaa
cs
xchg
jbe
jbe
jl
mov
inc
js
mov
ficomps
adc
pop
aad
cltd
lcall
testb
aaa
jmp
andb
movsl
xor
outsb
movsl
flds
dec
stos
out
fstpl
jnp
mov
push
jle
push
push
jb
notl
mov
xorl
iret
push
repnz
adc
add
jl
jle
mov
mov
dec
test
cmp
int
repnz
jp
ja
add
sub
das
jmp
inc
cmpsl
pop
xor
push
and
and
mov
outsl
mov
or
push
dec
jo
pusha
mov
fs
mov
bound
cmc
and
in
test
mov
xchg
adc
ficoms
sub
ljmp
xor
cmp
inc
mov
dec
mov
sub
ljmp
mov
mov
jge
js
xchg
clc
icebp
test
sbb
xchg
aas
pop
adc
xor
push
adc
imul
mov
xchg
or
add
adc
popa
stos
out
pop
lret
push
push
add
lea
fucomip
xchg
xlat
popf
rcrl
mov
loope
xor
push
std
test
add
jp
xchg
sahf
fimuls
pop
cltd
loope
aas
cld
dec
or
pop
int
mov
daa
fnstsw
dec
xchg
sahf
adc
or
pop
mov
imul
cld
push
lea
mov
push
adcl
sub
int3
stos
inc
mov
jp
iret
cmp
into
push
push
rorb
std
imul
mov
clc
pop
shl
fldt
pop
out
and
push
scas
add
bound
dec
insl
es
or
add
and
push
aam
cwtl
shll
lret
adc
aam
lea
movb
std
push
xchg
addr16
mov
roll
mov
or
push
mov
dec
xchg
pop
xchg
inc
mov
addl
pop
test
lcall
xor
fadds
fidivl
ljmp
pushf
imulb
in
lock
ja
outsb
add
repnz
rclb
jecxz
push
xchg
rcrb
cmp
jae
jmp
loope
xor
hlt
negl
inc
lea
adc
pop
jge
push
mov
rorb
jo
mov
scas
std
iret
mov
pop
int3
mov
stos
inc
pop
push
outsb
out
xchg
popa
fiadds
cmp
or
pop
fdivp
push
sti
jae
insb
xchg
sahf
mov
pop
jns
jae
jnp
shlb
cmpsl
aam
int
aas
testb
jecxz
fsub
dec
cmc
pop
inc
in
dec
ret
jmp
in
fwait
addr16
lea
gs
insl
mov
sbb
push
dec
imul
sub
insb
pop
popf
jbe
add
iret
mov
mov
cmc
inc
jns
push
pop
inc
mov
mov
mov
rcr
lods
andb
mov
mov
mov
dec
fldt
cmp
mov
lods
push
fcom
jg
push
ret
xlat
negb
xchg
lret
jecxz
addr16
pop
xor
mov
xlat
pop
dec
jbe
mov
nop
sub
ss
insb
popa
dec
cmp
push
cmpsl
enter
fs
fdivl
fwait
push
pusha
dec
in
fdivs
lods
sti
loope
xor
mov
fdiv
stos
je
mov
lcall
lods
cmp
add
ds
gs
jecxz
pop
xchg
push
sub
loope
dec
jl
sbb
and
pop
mov
rcrb
pop
rcl
fmuls
jge
xor
gs
pop
xchg
jns
sub
cltd
ss
add
dec
mov
pop
sti
add
mov
imulb
xor
les
in
outsb
sbb
push
imul
or
adc
adc
negb
rolb
aam
fisttps
clc
adc
lea
testl
jno
push
out
stos
mov
dec
dec
push
adcl
repz
test
outsb
xchg
add
das
inc
xchg
and
sti
pop
and
xor
es
push
xor
mov
mov
cmp
mov
hlt
xor
leave
jl
mov
pop
mov
mov
mov
lret
mov
adc
dec
adc
mov
mov
lds
mov
int
pop
arpl
lods
inc
or
xor
jge
mov
data16
mov
repz
shll
repnz
pop
jnp
mov
or
cli
rol
pop
cmpb
mov
mov
pop
outsl
in
arpl
push
ficoml
movsb
loope
iret
repnz
gs
sahf
mov
mov
scas
mov
outsb
rclb
mov
lods
js
or
mov
adc
dec
mov
inc
pop
aam
negl
cmpsb
push
jl
pusha
mov
out
mov
dec
and
scas
ss
add
pop
mov
fldt
je
dec
sar
jbe
pop
xor
fs
mov
roll
rclb
jp
mov
scas
rolb
dec
and
cld
scas
mov
mov
mov
loopne
pop
idiv
cmp
cmp
mov
test
call
push
stos
inc
daa
mov
sbb
es
cmp
cmpl
test
dec
roll
pushf
gs
mov
mov
xchg
fucomi
cs
sbb
fwait
rorb
mov
pop
add
push
mov
sub
roll
test
sub
bnd
jg
mov
adc
add
das
xchg
int3
sbb
das
cmp
cmp
mov
mov
adc
lock
inc
cmp
push
out
xor
mov
repz
js
xor
faddp
shl
adc
mov
test
lods
xchg
iret
push
lcall
xchg
cltd
xchg
mov
or
dec
sti
lods
jns
das
addr16
mov
leave
sub
and
leave
sbb
fwait
cmpsl
cld
pop
fdiv
in
in
out
push
inc
enter
sub
inc
shrb
lret
shl
and
jbe
imul
ja
jecxz
cltd
subb
cli
mov
pusha
xor
shll
fdivp
or
fs
push
popl
push
jbe
fsubrl
sti
xchg
jne
mov
fsubp
jo
mov
push
jno
repnz
fs
lods
ret
sbb
mov
sbb
lea
add
push
push
add
push
rcrl
add
cmp
mov
mov
push
fwait
push
fnstsw
cmpsb
fcom
sub
cmp
dec
mov
sub
and
mov
push
out
dec
sbb
enter
xchg
and
adc
rorl
or
mov
cmp
shlb
jl
loop
andl
push
push
dec
into
cmp
daa
dec
addr16
xor
test
outsb
aaa
sbb
in
xchg
push
mov
add
adc
in
jge
pcmpeqd
xchg
sahf
shll
add
pushf
and
loopne
enter
xlat
test
adc
push
out
rclb
and
cmpsb
mov
sarb
stc
test
jmp
aaa
das
arpl
mov
add
dec
scas
jmp
jno
sub
out
dec
imul
mov
and
mov
cmc
sub
add
sub
andb
add
pop
dec
popa
test
jbe
inc
je
push
add
pop
push
mov
imull
sbb
inc
adc
lea
xlat
popf
testl
mov
dec
inc
imul
xchg
addb
push
orb
fs
pop
mov
addr16
out
pop
fidivs
add
fisubrs
dec
jae
test
lahf
dec
test
xor
and
dec
xchg
or
imul
lahf
push
sub
ds
repz
loopne
xchg
pop
jae
je
nop
cmpsl
push
cmp
adc
xor
push
xchg
nop
es
jno
mov
sbb
mov
ljmp
lea
jl
scas
stos
fwait
jmp
dec
incb
jo
xor
cltd
es
mov
sub
pop
adc
decl
movsb
addr16
clc
add
and
sub
adc
mov
cmp
hlt
psubw
xchg
out
xchg
inc
lods
xchg
and
mov
cltd
neg
js
imul
or
jle
cmpsb
roll
repnz
rcrl
inc
inc
push
push
pop
jge
shll
les
testb
js
call
icebp
xor
cmp
or
add
and
filds
mov
push
test
push
lods
int3
pop
dec
mov
xor
loope
imul
inc
sub
cmp
add
scas
dec
test
sahf
xchg
xor
pop
sub
jecxz
xchg
adc
push
rcr
in
mov
and
dec
imul
push
fcmovnb
loope
sbb
push
jl
push
pop
lods
aas
add
xchg
call
pusha
or
stos
movsl
or
mov
repnz
mov
push
fidivrl
cld
leave
out
mov
arpl
int
iret
inc
arpl
cmp
sbb
pop
ret
jae
jge
mov
mov
sub
push
mov
frstor
mov
mov
jno
mov
adc
inc
negl
lods
sbb
cs
f2xm1
mov
aaa
push
pushf
inc
ds
sarb
daa
ljmp
mov
cwtl
fsubrp
and
cmp
enter
movsl
fstps
add
mov
lods
popa
sub
addb
cmp
jmp
or
or
rclb
dec
xchg
bound
inc
dec
pop
ljmp
icebp
inc
call
jecxz
imul
inc
adc
adc
ret
adc
pop
and
or
stos
jecxz
xchg
lahf
addr16
mov
dec
in
aam
cmp
xor
cmc
or
lcall
push
cmpsl
fsts
jno
mov
mov
dec
sbb
rol
les
dec
daa
mov
pop
js
jno
insb
int
sbb
jne
or
lds
fisubrl
ja
lds
int
lods
movsl
aad
shrl
xchg
push
pop
xchg
push
aas
decb
dec
pop
mov
jg
repnz
sahf
mov
push
jae
sub
test
dec
adc
das
stos
test
cmp
dec
pop
adc
outsb
push
cmp
cltd
xor
push
ljmp
jecxz
mov
dec
lock
jo
test
outsb
in
xor
mov
fcompl
leave
inc
call
add
or
mov
lods
dec
pusha
jnp
cltd
cmp
shl
pop
subl
fistps
and
cmp
outsb
fstps
cmove
push
add
shlb
andl
sub
jp
in
and
icebp
inc
and
inc
sbb
pop
dec
push
mov
sub
loope
mov
test
mov
mov
ljmp
cwtl
enter
repnz
or
lret
dec
inc
mov
or
inc
outsb
adc
xor
xchg
rclb
adc
sti
loop
inc
lret
xor
dec
out
inc
inc
xchg
or
pop
sbb
pop
jne
sbb
out
mov
dec
out
dec
xor
scas
fisttps
fwait
add
mov
arpl
xor
xchg
dec
jns
mov
or
clc
lods
mov
mov
insl
shl
inc
lahf
push
push
dec
notl
gs
popf
lods
push
push
scas
push
imul
fs
add
cli
cld
cmpb
push
in
xchg
adc
xchg
add
ret
sbb
fcoms
jl
or
xchg
test
sub
movsl
xchg
xchg
push
xchg
test
adc
pop
popf
add
inc
ss
and
aaa
inc
sar
jnp
mov
jbe
mov
cmp
rorl
sub
jmp
repz
dec
lahf
sbb
sub
pop
mov
add
pusha
inc
mov
clc
cltd
xchg
clc
les
fwait
xchg
sub
lock
mov
or
gs
mov
pop
push
jnp
cmc
push
insl
roll
mov
xorb
xor
fwait
es
pop
mov
pop
hlt
mov
mov
jne
cwtl
sub
lret
xor
orb
adc
sbb
push
cwtl
lods
btl
je
adc
rolb
mov
pop
lds
xchg
pop
xchg
hlt
jns
or
mov
sbb
sbb
xor
mov
lds
outsb
mov
dec
xor
jecxz
inc
jnp
imul
xchg
sbb
add
stos
cmp
std
fs
loop
push
lahf
lds
out
add
lds
push
pop
aad
out
iret
rclb
xchg
jp
push
mov
std
mov
int3
cmpsl
in
mov
and
movsl
mov
cmpsb
adcl
sbb
scas
in
jp
mov
mov
hlt
leave
in
xor
push
shll
pop
in
mov
fisttps
lcall
fstpl
push
pop
dec
movsb
or
cld
add
xor
cmc
scas
out
fldt
lahf
add
adc
lret
jb
xchg
out
jae
xchg
mov
push
je
inc
mov
sbb
popa
mov
cmp
clc
sti
xchg
into
or
enter
jg
push
jne
out
fisttpll
or
jns
jno
xchg
push
lret
test
pop
pusha
mov
mov
lds
jp
sub
loope
sub
pop
in
mov
outsl
mov
push
jge
call
xor
out
jmp
pop
xchg
sti
popf
movsb
pop
adc
dec
pushf
pop
ljmp
jne
out
mov
adc
push
inc
fistl
mov
mov
clc
addr16
je
sbb
bound
pop
and
js
pop
loope
aas
xor
loopne
add
cmp
pop
out
xchg
orl
jne
cli
push
xchg
shll
dec
xchg
lds
xchg
pop
adc
fnsave
mov
inc
add
nop
fwait
and
ljmp
xchg
add
cmpsb
je
push
ljmp
es
aas
push
sub
orl
mov
jle
jns
popf
nop
jo
push
into
push
rcr
push
pushf
out
sar
ret
jbe
mov
xor
sarb
jmp
addr16
je
into
and
scas
adc
and
mov
mov
mov
adc
movsl
inc
pop
rcrb
bound
push
pop
fcom
push
and
test
sbb
xchg
add
insb
jae
test
stc
sbb
xchg
scas
rclb
adc
and
mov
iret
mov
mov
call
cmp
dec
pusha
jmp
cmpsb
out
rcrb
aam
push
lcall
leave
lret
inc
fmull
outsl
adc
pop
stos
lcall
arpl
mov
cmp
loop
mov
or
jp
andl
pop
mov
cmpsl
test
loopne
cmp
imul
into
mov
iret
int3
ret
shrl
dec
and
push
mov
sub
or
inc
shlb
or
outsl
add
mov
adc
scas
mov
jne
dec
sbb
jns
out
and
rcrl
fidivrl
adc
out
inc
fisttpl
rol
aas
push
movsl
or
cmp
ret
pop
mov
fsubrl
push
int
cmp
or
xchg
sbbl
and
jle
jmp
jmp
fimuls
cltd
jge
xor
lret
les
sub
pop
in
test
pop
jecxz
cmp
mov
leave
lods
pop
insb
scas
jo
xor
push
push
sub
mov
and
cs
dec
scas
push
inc
test
ret
pop
insb
xor
in
mov
in
cmp
pop
lock
fwait
mov
push
push
pop
jns
inc
mov
leave
pop
jne
inc
inc
and
call
in
mov
sahf
cmc
xlat
sub
xor
outsl
xchg
mov
mov
ds
lods
cmpsb
pop
inc
dec
dec
or
xor
pop
enter
aas
push
xchg
xchg
aad
mov
mov
movsl
or
fwait
hlt
repz
jns
sahf
rcl
and
orb
add
pop
bound
movsl
mov
subb
out
mov
push
js
mov
movsl
jo
add
stos
test
sub
adc
pop
sub
sub
sbbl
into
sub
mov
push
scas
adc
call
popf
lods
xor
inc
stos
popf
bound
sbb
dec
icebp
jnp
ja
inc
mov
jb
mov
xchg
dec
mov
adc
data16
or
cmpsb
mov
roll
mov
and
pusha
insb
sti
jge
pop
lret
mov
sub
inc
mov
xor
push
repz
cmp
mov
aaa
mov
pop
jg
sarb
sbb
jp
mov
mull
jae
push
ds
aad
out
dec
pusha
je
cmp
lods
push
add
mov
outsl
pop
pushf
repz
and
sbb
sbb
sub
gs
jno
xorb
std
add
push
clc
notl
in
stos
call
je
cmp
insb
mull
or
push
dec
out
xchg
inc
and
xchg
mov
inc
push
notl
aam
jmp
ror
xlat
xchg
mov
dec
xlat
inc
loopne
loope
push
mov
orl
fildl
es
sahf
enter
jmp
rcrl
jecxz
or
xchg
xchg
push
and
adc
sub
pop
icebp
int3
xor
sub
and
jge
mov
addr16
ret
stc
sbb
pop
sti
xchg
jp
push
cmpsl
testb
sub
test
and
adcb
call
xor
std
adc
in
ds
iret
mov
fstps
or
push
pop
es
dec
push
js
add
push
lods
mov
cs
stos
inc
insb
jg
fidivrl
mov
inc
rorb
xchg
lods
test
mov
sbb
sub
adc
dec
sub
mov
sahf
ljmp
in
cwtl
add
mov
dec
mov
rorl
push
lock
dec
and
pop
jns
call
xchg
push
jnp
nop
mov
int
cmp
ljmp
adc
fsts
sub
or
xor
and
xchg
outsb
and
mov
std
mov
sbb
pop
das
xor
dec
xchg
dec
mov
dec
push
imul
push
aam
shrl
negl
je
jp
fnstenv
insl
and
jl
pop
mov
fwait
popf
fsubp
jg
xor
stos
iret
pushf
ljmp
inc
lret
mov
in
mov
ficomps
fadds
cmpsl
fs
jns
test
aam
call
cwtl
call
mov
mov
or
mov
outsb
adc
mov
dec
es
cmp
data16
inc
arpl
pusha
out
fsubrs
pop
dec
push
cmp
cmp
mov
and
aaa
stc
push
or
jnp
dec
xchg
ja
xchg
aam
faddp
mov
aad
lret
jbe
rol
sub
popf
add
pusha
xchg
pop
mov
outsl
mov
adc
xchg
es
xchg
jbe
or
mov
or
cmpsl
adc
mov
dec
cli
mov
std
and
pop
out
clc
shlb
mov
dec
and
call
push
andb
stos
dec
test
and
fdivrs
jae
pusha
mov
mov
roll
loope
cld
adc
adc
lock
cmc
jb
mov
pop
psubq
dec
iret
sub
adc
icebp
xchg
mov
adc
xor
pop
fsts
cmp
aaa
shrb
inc
outsl
repnz
roll
repnz
test
pop
xor
xor
sub
test
out
lahf
mov
add
fwait
jl
in
adcl
mov
decl
sbb
adc
add
cltd
sub
mov
mov
ja
dec
mov
xor
in
lret
fcoms
sbb
cltd
std
outsl
test
xor
push
aad
xchg
fiaddl
in
xchg
xchg
ljmp
mov
sbb
pop
and
xchg
pop
push
aas
jnp
xor
sbb
cld
test
push
xchg
or
orl
and
jne
out
fstp
push
ret
pop
pop
sub
sbb
cmp
ret
sub
mov
sbb
mov
mov
push
test
cwtl
fisubrl
xor
sbb
sub
out
mov
outsb
sbb
out
xor
out
sarb
scas
sub
jg
clc
hlt
in
mov
loop
pop
unpckhps
icebp
add
add
push
jb
xchg
call
jl
cmp
jnp
cmp
lahf
sub
lret
cld
pop
bnd
scas
and
sbb
mov
mov
dec
daa
and
or
mov
pusha
test
inc
inc
flds
repnz
sbb
and
out
inc
pop
adc
frstor
out
fwait
repz
mov
stc
adc
xor
cli
add
or
cmp
daa
add
out
imul
pushf
pop
mov
lock
out
cltd
pop
mov
imul
push
push
in
xor
pop
lret
sub
repz
aam
push
rolb
icebp
pop
mov
test
loopne
fists
stos
das
mov
inc
scas
mov
pop
mov
aad
mov
rclb
mov
push
mov
mov
xchg
dec
mov
mov
sbb
push
out
sbbb
sahf
lcall
xchg
sub
loope
out
sbb
add
inc
ja
data16
jbe
jno
stos
add
outsl
dec
mov
mov
cmc
xor
hlt
sahf
enter
neg
das
rorl
and
mov
shl
push
pop
sbb
lods
mov
fisubrl
push
mov
mov
mov
sub
in
mov
jns
xchg
inc
fincstp
inc
xor
inc
cmc
adc
adc
xchg
push
xchg
sub
mov
mov
jl
dec
adc
cmp
les
sbbl
fsts
cmp
inc
shrb
outsb
and
fnstsw
lcall
add
jg
in
enter
lds
jne
inc
add
mov
hlt
or
loop
add
mov
mov
jno
adc
add
pop
cmpsl
sbbl
orl
jbe
loop
xorl
and
mov
idivb
push
push
leave
mov
inc
in
inc
pop
or
ret
nop
mov
mov
loop
add
test
pop
nop
rclb
ret
loope
hlt
jo
sub
clc
arpl
mov
or
aad
or
movsl
mov
and
test
insb
rol
mov
lods
xchg
adc
arpl
and
jmp
jl
sahf
adc
aaa
int3
mov
fcom
sub
ja
and
dec
xchg
dec
push
outsl
mov
out
mov
cmp
mov
xorl
movsb
mov
mov
sbb
aad
hlt
aaa
lds
cmove
push
popa
xchg
data16
sbb
test
mov
bnd
inc
push
stos
cmp
push
and
scas
ret
fsubr
sahf
pslld
outsl
sbb
push
push
call
pop
lods
and
enter
sub
cmp
out
imul
lcall
aaa
and
xchg
xor
mov
in
xor
scas
mov
mov
mov
inc
pushf
rorl
mov
cmpsl
jge
lret
shl
popa
mov
inc
mov
mov
aad
dec
daa
cmp
mov
and
pop
push
loop
das
scas
repz
orb
dec
nop
push
push
ret
pop
jmp
xor
out
mov
mov
xor
subb
neg
hlt
gs
pop
dec
pop
add
out
loope
ja
push
pop
imulb
dec
in
dec
mov
cmpsb
mov
jbe
fsubl
push
xlat
pop
add
mov
mov
xor
mov
std
aam
test
cmc
mov
aaa
gs
je
lahf
pop
xchg
sbb
jbe
mov
jp
pushl
fs
sbb
movsl
fildll
dec
out
stos
sbb
mov
inc
ret
jbe
mov
test
jns
jp
xchg
lods
jle
xor
cli
push
add
cmp
jmp
xor
inc
lock
mov
icebp
ds
jns
mov
popa
jp
jae
movsl
subl
sarb
jns
jno
ljmp
push
or
mov
fbstp
loop
pop
mov
lahf
popa
sbb
mov
andb
lds
mov
push
jle
push
and
xchg
aaa
mov
jb
mov
enter
mov
out
pop
jecxz
mov
loop
push
cmp
adc
sti
fwait
jecxz
inc
push
test
sbb
cmpsl
cld
popa
movq
cmp
mov
out
sub
daa
add
xlat
inc
addr16
cltd
int3
xor
mov
add
hlt
push
fs
scas
ljmp
jb
xchg
ds
aam
es
pop
pusha
mov
dec
fwait
mov
fcoms
jg
ja,pn
inc
dec
stos
in
lcall
pushf
xor
mov
imul
jp
mov
pop
inc
inc
xchg
jo
mov
mov
pusha
dec
or
lds
leave
mov
cmp
and
sbb
pusha
das
dec
sbb
add
pop
leave
pop
jecxz
shll
ficomps
add
ficompl
jp
mov
out
cmp
and
xchg
dec
aam
fdivrl
lcall
fildll
mov
rclb
jmp
imul
jg
xor
mov
and
cmp
push
movl
std
jecxz
dec
pop
pop
pop
mov
cmp
or
imul
jno
popf
cmp
lods
popa
bound
mov
cwtl
in
dec
dec
jge
addr16
lcall
push
gs
inc
das
imul
sbb
lods
rclb
loopne
adc
cs
sub
mov
cmp
mov
idivl
ret
pusha
mov
sbb
pop
fwait
setg
xor
xchg
lcall
xor
cwtl
add
mov
mov
loope
sahf
stc
daa
push
and
stos
rorl
inc
xchg
adc
ss
pop
jne
add
inc
sbb
mov
test
sbb
shlb
pop
mov
cli
sti
stos
pop
sub
lods
mov
or
scas
jecxz
les
add
mov
repz
call
jmp
jae
loopne
and
stos
sahf
clc
out
mov
ret
jno
pushf
xor
add
mov
jno
sub
lods
sbb
int
xor
cmc
mov
mov
xor
cli
push
mov
sub
notb
xor
std
xor
push
mov
sub
pop
push
iret
hlt
je
push
jg
jge
or
daa
ret
sbb
xor
mov
gs
fmull
lds
mov
scas
das
jge
push
xchg
sub
cmpsb
pop
lods
pushf
mov
mov
test
jcxz
cmp
mov
sub
cwtl
pusha
sub
arpl
xchg
jmp
and
lods
mov
adc
test
lods
cmpsl
cmp
adc
mov
inc
inc
mov
cmp
popf
aas
out
inc
cmp
dec
sbb
dec
pop
ljmp
mov
mov
jae
stos
pop
push
repnz
mov
jl
mov
gs
addr16
cmpsb
cmp
sbb
imul
inc
sbb
xor
iret
popf
lret
scas
cmp
out
push
stos
cmpsb
aaa
dec
push
push
xchg
iret
icebp
lods
pop
dec
das
cmc
nop
insb
lahf
add
cmp
push
ret
cmp
inc
push
fst
mov
or
stos
and
daa
jmp
cmc
or
dec
lods
cld
mov
add
jle
xchg
in
or
sarl
xchg
fidivl
ret
mov
gs
cmp
mov
mov
adc
sbb
mov
scas
ja
cmp
mov
scas
lahf
cmpsb
push
xlat
xor
sub
and
sub
outsl
jmp
xor
inc
dec
mov
jb
push
out
sbb
xor
mov
addr16
pushf
stos
add
adc
insl
std
icebp
sub
mov
lds
sahf
mov
mov
mov
inc
lret
push
push
and
xor
xor
mov
jb
pop
xor
fsincos
pop
popl
jg
je
rol
icebp
cwtl
test
adc
xor
and
xchg
inc
shl
bound
cwtl
sub
mov
test
pop
mov
sub
sbb
js
cmpps
mov
loope
sbb
je
outsb
push
cmp
mov
hlt
sub
xor
sbb
mov
imul
ret
sarb
cmp
sub
repnz
jl
popf
and
cmpb
xor
or
cmp
xor
sbb
je,pn
jge,pt
sbb
cmp
sahf
sbb
xor
jb
mov
cmp
fisubrs
pop
ljmp
in
insb
add
mov
sbb
pop
pop
lea
pop
loop
and
sbb
adc
xor
mov
lret
mov
lahf
std
xlat
xchg
daa
icebp
push
inc
dec
daa
ja
lds
xor
adc
xchg
inc
sti
adc
and
push
jmp
stos
xchg
push
test
push
and
sub
dec
inc
push
lcall
adc
ss
sbb
sarb
sti
dec
rorl
adc
xchg
sbb
nop
cmc
push
loopne
shr
incl
mov
arpl
es
mov
add
scas
jae
outsb
push
aam
stos
adc
pop
mov
mov
and
pop
aaa
sub
imul
mov
out
mov
push
mov
ss
lea
xlat
mov
scas
lcall
mov
push
fucomp
sub
add
lods
or
xchg
pop
or
scas
mov
sub
mov
mov
cltd
sahf
mov
icebp
arpl
scas
jbe
adc
pop
mov
out
ret
cld
xchg
addr16
jno
in
repz
mov
fsub
fwait
pop
iret
call
cli
xchg
stc
xchg
xor
add
data16
cmpsb
cmc
mov
enter
adc
dec
nop
push
das
cmp
loopne
cmc
iret
decb
insb
mov
mov
jnp
xchg
add
mov
lret
fisubs
cmp
cli
or
rcll
mov
jae
mov
push
push
pop
cmc
cltd
js
dec
hlt
mov
push
cmp
sbb
loope
push
in
add
jno
aaa
xor
pop
inc
sbb
sub
pop
xlat
pusha
or
push
sbb
cltd
mov
or
loope
mov
dec
adc
dec
inc
out
mov
or
mov
in
call
xchg
xorw
jbe
out
mov
imul
repz
jg
mov
aas
jbe
sbb
pop
push
scas
xchg
dec
jl
sti
mov
dec
jnp
cmpsl
xchg
cmp
mov
js
jp
xor
jnp
jmp
and
mov
lcall
xchg
add
inc
fs
mov
inc
stos
jmp
mov
int3
loopne
addr16
jbe
mov
inc
mov
outsb
rcrl
loop
loope
or
mov
xchg
jg
sbb
push
aas
rcrl
mov
lods
jp
cwtl
cmp
test
insl
mov
cmp
sahf
outsl
mov
xor
xchg
inc
mov
push
rclb
out
cmp
push
pop
pushf
dec
je
test
jle
shll
mov
inc
xchg
mov
rcll
add
testl
push
push
mov
cmp
stc
sti
lods
aaa
stc
mov
xorl
pop
lahf
push
stc
mov
cli
in
add
mov
xchg
lcall
jecxz
mov
popa
hlt
sahf
jne
arpl
pop
outsl
jmp
ljmp
sysexit
in
inc
mov
push
test
add
mov
cld
or
pop
sbb
xor
adc
inc
jbe
test
cld
bound
mov
mov
cwtl
sahf
lock
iret
and
add
es
dec
call
jnp
mov
add
cmp
cli
adc
jne
shll
int
out
ljmp
mov
xor
push
in
adc
insl
inc
movsl
cmp
out
mov
ret
cld
lds
dec
gs
sbb
cmpsl
ljmp
cmp
sub
fs
mov
and
jp
jo
sbb
xor
dec
ds
lcall
inc
addb
sub
pop
pop
push
and
cmp
and
push
xor
lahf
add
mov
sub
pop
mov
movsb
sbb
dec
jl
cli
mov
adc
outsb
movsb
addr16
pop
jmp
mov
shrl
mov
jb
inc
sbb
outsb
incb
scas
jne
lahf
iret
mov
ret
lea
cmp
jg
lock
xor
ljmp
les
sbb
push
add
popf
clc
xor
xor
pop
lods
lret
lret
aad
pop
mov
adc
lock
cmpsl
and
cmpsb
sub
mov
mov
in
adc
clc
push
sub
or
cmp
sub
cmp
mov
int3
cs
xlat
loope
not
iret
mov
mov
call
ret
arpl
cmp
inc
sub
imul
mov
xchg
test
dec
pop
cltd
lods
lahf
vpmacsww
sbb
mov
adc
jae
outsb
jb
and
lock
inc
xor
dec
sarb
adc
and
test
push
pop
push
push
mov
in
mov
or
or
xchg
lahf
xchg
push
add
cmpl
inc
mov
movsb
xchg
js
adc
lods
or
mov
popf
xchg
int
sbb
or
cs
loop
or
cmp
test
and
popf
nop
inc
jbe
js
dec
loope
sub
mov
enter
add
inc
push
or
mov
movsb
push
dec
divb
jmp
xchg
jmp
and
xchg
sbb
jecxz
rorl
jbe
sub
ret
sbb
clc
dec
test
fmul
loop
mov
shlb
push
pop
lahf
ja
gs
inc
shlb
test
sub
aaa
fisubs
dec
sbb
addr16
mov
addr16
aad
pop
adc
or
sub
cmp
lock
cmp
push
sbb
mov
push
sbb
orb
xchg
lret
push
xchg
sahf
lret
aaa
jl
pusha
push
popa
bound
cmpsl
xchg
ret
xor
out
push
xor
into
test
cmp
jecxz
dec
pop
jo
stos
stc
pop
mov
inc
mov
fsubl
shrl
adc
popf
lds
jle
sbb
jae
jno
dec
add
and
cmp
mov
cmc
jns
stos
cmp
push
xor
push
pop
jg
xor
in
flds
dec
pop
lds
pop
xchg
int
cs
in
stos
jg
mov
sbb
idivl
dec
mov
xor
sub
repz
mov
clc
sbb
leave
mov
jecxz
idivb
xor
mov
in
sub
imul
pop
mov
inc
pop
es
loop
sub
stos
scas
mov
dec
shrb
dec
out
and
and
mov
fcomps
cmp
outsl
aam
and
sti
movsl
and
mov
lods
inc
mov
xor
add
shrl
icebp
pop
mov
cmp
mov
or
inc
repz
sub
xchg
aaa
test
test
into
mov
sub
stos
insb
jp
xchg
iret
mov
outsl
aaa
sub
ficoms
push
add
setnp
lock
sub
pop
pop
mov
clc
mov
jae
stos
sbb
fcomi
stc
flds
sub
mov
push
call
inc
rcr
out
xor
ret
pop
cmp
push
stos
adc
stos
pop
test
lods
clc
mov
sahf
adc
cmc
push
adc
movb
dec
mov
sbb
push
dec
sub
mov
sbb
fnsave
inc
dec
xchg
or
and
push
sub
xchg
lret
dec
cmpsb
inc
bound
test
lret
ljmp
fdivl
mov
cmpsl
dec
sub
xor
test
stos
aam
cmp
pop
stos
dec
xor
jns
gs
cmc
push
filds
mov
xorb
xchg
sub
cmp
idivl
ss
jbe
pop
das
push
jnp
vmovmskps
mov
xchg
loopne
cmpsb
xorb
mov
cmp
and
pushl
imul
data16
xchg
and
das
negb
ret
mov
cs
movsl
adc
sti
fsts
adcb
xor
push
mov
push
adc
xor
sub
jmp
pop
or
aaa
add
in
pop
sub
jecxz
in
daa
push
sub
push
or
sbb
jmp
xor
and
inc
mov
adc
rclb
fistl
repnz
ficoml
leave
int3
subb
pop
mov
js
sbbl
adcb
mov
jbe
loop
xor
cmp
mov
cmp
jb
movsl
jmp
aas
jae
imul
jns
fdivs
cwtl
mov
sbb
es
fndisi(8087
add
jle
mov
adcl
jae
fst
popa
sub
movsb
mov
xchg
sarl
insb
xor
enter
add
in
fisttpl
je
outsb
out
rcrl
mov
xchg
mov
push
add
shll
or
outsl
iret
les
sub
jne
xorl
leave
xor
test
int3
and
lcall
aas
pusha
loop
xchg
xor
cmp
ljmp
mov
add
lds
ret
cmp
cmp
jne
movsb
cmp
mov
repz
test
jo
fxam
lea
jns
mov
sti
xlat
orl
push
lea
in
dec
inc
sti
mov
je
cld
mov
arpl
pushf
loope
arpl
sbb
addr16
or
pop
fildl
in
mov
xchg
inc
mov
or
pop
mov
xor
and
das
pop
xor
test
adc
dec
and
lea
xor
lret
mov
lahf
in
std
xor
mov
aaa
pop
pop
lds
pop
test
xor
pop
add
or
mov
or
shl
das
adc
aaa
mov
dec
test
adc
pop
lea
fmulp
dec
xor
sete
add
fwait
mov
mov
arpl
jmp
int3
or
xchg
mov
jns
sbb
test
xchg
mov
sub
jecxz
lret
sahf
daa
mov
sarb
pop
push
mov
lcall
xchg
fildl
jae
inc
adc
jo
cmpl
push
pop
ret
sub
cmp
jns
sub
out
fnstenv
lods
daa
push
scas
inc
sub
call
sar
pushf
stos
mov
mov
xchg
daa
enter
lods
mov
aad
pop
or
and
pusha
sub
rcl
add
mov
pusha
inc
in
aad
xorl
ljmp
add
pop
jnp
dec
push
push
ret
mov
sbb
sti
mov
sbbb
test
or
and
jnp
jle
cld
fldcw
notb
fisubl
push
test
cmp
adc
xor
sbb
repnz
ds
std
pusha
push
fildll
sbb
movsl
adc
sub
in
xor
jns
aam
add
inc
jecxz
insl
push
leave
clc
xchg
xchg
and
fsubp
mov
add
xchg
sbb
jae
stc
stos
imul
lahf
ret
stos
and
mov
test
adc
pop
xlat
adc
inc
cmp
cmp
sbb
enter
or
cltd
push
adc
int
mov
mov
dec
loopne
faddl
mov
push
lds
cs
add
shlb
mov
mov
add
adc
iret
cli
xor
or
mov
inc
cltd
lock
push
adc
gs
rorl
scas
mov
sub
jmp
inc
pop
mov
jbe
mov
loope
mov
sti
mov
and
sbb
lock
pop
pusha
test
sti
dec
jmp
sub
shlb
mov
scas
cld
xor
xor
lods
sbb
xchg
sti
dec
insl
outsb
mov
ss
cli
adc
adc
xor
mov
lods
not
rcr
mov
or
sub
test
and
push
adcl
push
mov
sub
mov
test
sbb
sbb
cs
push
mov
popf
mov
daa
jl
fisubs
sarl
xlat
iret
aas
cltd
sub
inc
pop
mov
mov
xor
dec
dec
lret
push
sub
jle
cmp
jmp
mov
stos
in
test
leave
repnz
scas
cmp
daa
jae
cmp
aaa
ret
push
xchg
lock
pop
adc
pop
cmc
push
in
xor
push
sub
out
iret
inc
stos
ds
xchg
sub
pop
add
jp
fsubrs
or
dec
sbb
in
subb
pop
pop
adc
xor
sbb
lock
push
cltd
or
sub
add
mov
sbb
pushf
add
rcr
add
dec
sub
stos
mov
sub
cmpsl
loopne
sbb
or
jmp
xor
je
sbb
xor
aaa
je
mov
add
push
sbb
push
stos
add
ja
repnz
les
sub
test
out
mov
lret
in
xchg
mov
pop
hlt
adc
lds
jge
insl
subb
fs
inc
pop
arpl
dec
jns
xor
popa
test
pop
out
int
add
dec
movsl
movsl
xor
lods
add
mov
adc
inc
aam
inc
in
mov
enter
or
iret
or
ds
call
xlat
fisttpl
jb
repnz
lods
out
sub
scas
sub
fmull
add
push
scas
and
pop
pop
es
inc
popa
iret
inc
iret
jp
subl
test
test
jmp
push
push
xor
dec
or
sub
dec
sub
popa
ss
inc
push
sti
pop
int
and
xor
push
and
mov
nop
sub
jle
pushf
fxch
add
adc
orb
pop
in
insb
jge
gs
mov
push
xorl
test
inc
jo
ja
ficoml
test
jbe
hlt
or
sub
adc
sub
push
fistpll
shll
in
outsl
dec
ds
repnz
sti
xlat
inc
or
or
add
cmpsb
and
ficoml
aad
in
arpl
aam
or
sahf
adc
clc
pop
adc
mov
cld
shll
aad
cmc
insb
push
jl
out
fbld
jg
cltd
imul
iret
pop
add
jmp
push
lahf
and
pusha
hlt
mov
iret
std
mov
xlat
xlat
and
push
aaa
mov
dec
sub
out
add
outsl
stos
sbbl
nop
lods
sbb
test
ret
jecxz
or
mov
mov
out
lods
mov
mov
mulb
inc
mov
das
mov
adc
lcall
adc
pushf
sub
mov
enter
stos
mov
dec
mov
push
or
lock
cmp
lcall
and
ss
adc
and
inc
imul
mov
lret
or
repnz
pushf
xor
mov
dec
pop
lret
iret
pop
test
xor
push
ror
insb
inc
jge
jae
pop
aad
jp
mov
jb
in
xchg
les
sub
aam
daa
xor
icebp
aam
jmp
movsb
aam
fsub
mov
fcoms
cmpsl
add
or
dec
sub
enter
or
xchg
pop
pop
pop
fbstp
fidivl
sub
pop
aas
mov
inc
sbb
adc
lcall
aaa
not
daa
and
push
cld
lds
xor
jne
sbb
and
nop
test
adc
push
sbb
sub
popf
and
and
pop
add
stos
adc
push
and
xor
sbb
int3
sbb
sub
push
mov
popf
mov
shrl
icebp
pop
sbb
sub
rclb
or
inc
ja
ficomps
pop
iret
mov
inc
and
enter
and
jmp
out
lea
push
je
lcall
cmp
daa
push
xchg
or
xchg
push
sarl
sysenter
or
cmp
adc
inc
xchg
mov
xlat
sbb
repnz
add
jge
mov
dec
mov
xor
jno
mov
pusha
dec
add
dec
leave
mov
and
lahf
cmpl
push
dec
xchg
mov
out
lock
cmc
mov
fisubrs
or
or
cmp
add
aas
inc
iret
adc
jb
in
jecxz
jge
dec
push
fdivs
mov
xor
out
shlb
das
scas
jge
mov
sub
int3
scas
insl
push
mov
jl
inc
insl
int3
inc
inc
add
insb
push
jo
loop
aad
add
icebp
xor
add
lods
arpl
push
add
ljmp
xchg
xor
mov
fs
mov
inc
sub
sahf
inc
jno
and
sahf
add
les
das
inc
mov
mov
test
repz
jp
addr16
jns,pt
mov
jmp
dec
and
adc
icebp
cmp
fs
in
inc
xor
sbb
pop
push
jb
pusha
cmc
lds
cmpsl
dec
insb
lcall
movsl
jge
repz
fldl
mov
out
rcrl
push
scas
jns
lds
and
xchg
in
dec
dec
test
hlt
xchg
sub
sub
lcall
adc
xor
icebp
pop
lods
aaa
roll
dec
stos
mov
push
xchg
aaa
mov
arpl
cmpsl
iret
dec
dec
add
push
sbb
inc
in
lret
loopne
and
in
mov
leave
fsubrp
push
daa
push
enter
cwtl
ret
or
inc
sbb
sarl
jmp
fistpll
cmp
or
subb
stos
and
dec
into
add
push
aam
mov
xchg
dec
pop
es
lahf
mov
repz
xor
imul
out
or
pushf
push
jmp
or
mov
push
xor
inc
pop
out
addr16
push
mov
rcll
sarl
mov
ret
xor
jmp
pop
pop
xor
xchg
mov
das
fcoml
stos
imul
jo
shlb
add
xchg
inc
push
pop
jbe
adc
out
lahf
aas
lods
mov
or
cmp
fcmovu
out
mov
push
jno
mov
cltd
nop
loop
aaa
lret
insb
sbb
les
loopne
cmp
imul
mov
movsl
call
cmovno
sbb
mov
movsb
es
fildll
in
lods
int
mov
mull
insb
iret
inc
cltd
inc
or
pop
lret
inc
or
xor
push
add
mov
imul
jecxz
pop
fbld
jne
gs
shrl
sbb
outsl
outsl
out
fbld
inc
dec
lea
addr16
add
in
or
cwtl
inc
xor
adc
out
add
arpl
out
fwait
pop
jl
movl
test
hlt
add
sub
cwtl
jl
xchg
sub
dec
and
fcmovbe
sbb
cmp
in
sub
fldcw
adc
ljmp
in
jle
idivb
insl
mov
push
test
jb
mov
in
dec
sub
fisttpll
inc
es
push
popa
aam
loop
sti
stos
outsl
xchg
lahf
cmp
dec
fs
test
iret
push
daa
outsl
inc
rorb
push
pop
push
cmp
pop
lahf
loopne
in
pop
dec
xor
adcb
gs
add
shl
adc
lock
mov
add
inc
add
mov
jne
xchg
add
cmp
dec
sti
push
fucomp
push
sbb
test
ljmp
sbb
mov
roll
pop
test
mov
js
imul
gs
and
cmp
hlt
sti
jge
ss
inc
pop
push
popf
scas
mov
ss
pushf
int3
out
push
xor
arpl
fs
jnp
add
adc
nop
cmp
sar
sbb
push
lea
dec
movsb
pop
jae
pop
fxch
adc
bnd
pusha
inc
sahf
mov
loop
lahf
adcb
lcall
jnp
fisttpl
sbb
xchg
mov
fistps
stos
addl
mov
std
jge
mov
repnz
sub
inc
push
aas
xchg
fdivrp
xchg
push
idivl
aas
and
inc
cmp
lea
sbb
pop
pushf
jg
pop
filds
push
push
jb
add
sti
jmp
xchg
jns
push
sahf
xchg
hlt
out
sahf
dec
movsl
repnz
clc
out
inc
bound
add
pusha
lods
orb
inc
or
sbb
mov
sub
movsl
push
add
insl
lods
inc
mov
fcoml
jns
andb
mov
nop
jmp
push
in
out
push
xor
xchg
sbb
out
jae
jp
into
xor
pop
dec
add
in
mov
insl
out
jg
filds
incb
jmp
jg
popf
mov
or
imul
in
inc
and
cmp
push
pusha
jo
sbb
cmp
iret
test
cltd
pop
dec
and
and
push
dec
test
or
pop
xchg
stc
jns
fwait
clc
aam
push
mov
addr16
cmp
imul
add
xor
xor
and
push
push
jne
xor
les
jo
fldt
in
cmp
xor
rcrl
jne
sbb
and
pop
negb
inc
addr16
cs
fadds
dec
orb
shlb
aaa
mov
fcoms
jp
jp
out
jns
xchg
mov
aad
push
sub
mov
mov
mulb
sti
xor
mov
int3
cs
aaa
adc
out
mov
push
es
rcrl
pop
xchg
mov
and
dec
sub
outsl
js
enter
push
daa
scas
sub
fimull
int
ret
loopne
mov
test
bound
fldl
rorb
cld
push
sbb
ficoms
and
sbb
outsl
push
add
cld
inc
push
out
push
addr16
mov
cmp
ds
mul
jmp
inc
sub
push
das
mov
sub
daa
fldenv
iret
xchg
mov
push
jp
test
mov
jne
and
filds
sbb
mov
jp
jb
push
in
jg
pop
sub
pop
xchg
jp
scas
sub
mov
pop
dec
mov
in
xchg
pop
xor
mov
sbb
div
sahf
sti
fs
test
lea
popa
add
out
dec
js
push
inc
add
lds
mov
adc
sbb
imul
pusha
loop
push
jle
mov
int3
jmp
cmp
jmp
jmpw
out
push
mov
sti
dec
lods
add
push
repz
ret
adc
stos
cli
test
std
mov
test
cld
pop
pop
adc
leave
pop
jl
xchg
inc
fldlg2
dec
les
hlt
jo
push
inc
insl
sarb
rorl
or
lds
lock
lret
into
inc
push
scas
add
insb
in
rcrb
ret
mov
inc
cmp
subb
and
xchg
adcb
in
inc
lods
bound
pop
fsts
out
pop
fdivrl
test
xlat
lcall
sub
fwait
and
sarb
lret
dec
sub
popa
add
hlt
xor
dec
repz
leave
or
push
and
cmpsl
push
in
jbe
add
ljmp
mov
jecxz
insb
jg
inc
lock
andl
dec
les
insb
xor
mov
fadds
jge
aad
jg
call
sbb
outsl
rorb
out
nop
test
adc
inc
lods
jo
mov
push
xor
push
ret
sbb
cmp
cmp
cmp
jmp
repnz
in
insb
jns
movl
sarb
and
stc
xor
std
jge
mov
lret
ficoms
clc
push
lock
test
lret
pop
mov
out
jno
daa
sub
push
cmp
or
das
outsb
jg
jl
adc
gs
or
int3
test
rol
inc
into
inc
fsubrs
xchg
nop
dec
ja
stos
cs
ljmp
leave
dec
in
dec
cmp
dec
test
imul
outsl
add
pop
leave
call
mov
adc
nop
ficoml
call
mov
repz
sti
and
mov
rcrb
add
mov
pcmpgtw
mov
or
aam
adc
mov
xor
lcall
inc
dec
adc
in
add
mov
notl
and
std
aad
aad
rcll
inc
and
mov
mov
popf
pop
test
cli
push
pop
xchg
sbb
cmp
int3
xor
addr16
xor
cld
daa
or
leave
dec
adc
inc
sub
jmp
arpl
and
hlt
lock
xchg
jae
iret
add
popl
into
mov
cmp
jecxz
mov
cmp
andl
mov
jb
adcb
inc
arpl
mov
push
ficoms
sub
mov
cltd
mov
jle
into
adc
mov
lret
nop
mov
mov
mov
shrb
adc
push
jle
jl
movsb
pushf
test
pusha
cs
outsl
jecxz
imul
cmp
fnsave
std
scas
jb
iret
or
xor
bound
inc
scas
xchg
pop
push
mov
mov
lahf
out
mov
sub
add
clc
cmc
movsl
subb
push
mov
xor
fstpl
jp
popf
adc
lret
mov
orb
push
and
ss
insl
pop
dec
popl
dec
fisubl
xlat
xchg
lret
shlb
cmpsl
movsl
inc
rcr
daa
dec
add
sub
and
xor
mov
flds
pop
push
pop
stc
xor
cwtl
popa
cmpsb
adc
aam
jecxz
xor
mov
dec
xchg
ficomps
adcb
mov
stos
adc
mov
mov
mov
repz
add
lret
push
hlt
icebp
sbb
sub
xchg
loop
sub
sub
imull
adc
into
loopne
scas
or
inc
inc
ret
inc
int
sub
pusha
into
inc
fmull
scas
das
ret
pop
cmp
pop
add
push
xchg
jno
xchg
cmp
jmp
rorb
ja
mov
jnp
or
data16
jbe
lahf
xchg
in
xchg
add
mov
jge
dec
xchg
push
mov
cmp
or
mov
push
aad
xchg
loopne
or
mov
test
dec
inc
cmp
test
rorb
and
call
stos
sub
sti
gs
xchg
jle
jmp
aam
add
or
enter
xchg
test
cmp
cs
push
arpl
int3
xchg
sbb
jns
push
xchg
psllw
or
push
cmp
shrb
les
xchg
pop
out
into
repz
dec
lock
out
push
inc
sahf
shlb
pop
mov
out
and
cmpsb
xchg
pop
int3
adc
push
insl
cltd
jno
cs
mov
adc
mov
inc
in
add
aaa
push
insb
sbb
adc
dec
cmp
in
xchg
mov
xchg
repz
ja
mov
shlb
insb
popl
inc
xchg
out
or
outsl
and
inc
jg
cli
push
xor
fisttps
inc
lea
inc
add
add
dec
xchg
fwait
mov
and
xor
imul
nop
dec
out
ja
aam
xchg
sub
mov
movsb
sbb
jno
repnz
aad
mov
rclb
sarb
rcrb
sbb
lret
xchg
iret
pusha
movl
daa
mov
xchg
out
xchg
dec
dec
mov
imul
cli
dec
pop
mov
ret
sub
push
xor
call
and
jge
sti
ficomps
mov
pop
fsts
fs
jp
dec
repnz
hlt
jmp
imul
xchg
iret
je
cwtl
mov
test
test
sub
punpckhbw
hlt
sub
cwtl
lret
mov
or
xchg
popa
xor
aaa
and
cmp
lret
cmp
clc
push
dec
and
ss
lret
dec
add
sbb
xor
cmp
leave
jae
push
xor
add
add
push
inc
dec
lret
icebp
leave
xchg
xor
and
cmp
mov
int3
mov
daa
cmpl
jae
jg
adc
mov
xchg
and
xchg
js
out
xchg
inc
push
dec
movsb
mov
mov
into
xchg
arpl
push
rorl
inc
out
out
sbb
jnp
cmp
cli
xchg
sar
insb
aas
xchg
int3
fimuls
test
and
das
cmp
int
pop
cmc
cmp
sbb
push
or
cmp
or
mov
jle
sub
pop
sub
sbb
out
push
xchg
adc
outsb
dec
mov
movsl
adc
pop
je
inc
or
mov
sbb
jecxz
imul
rcrl
mov
mov
xchg
mov
push
or
jge
jge
push
mov
sbb
jb
sbb
call
jae
inc
dec
cli
jge
xchg
jne
cmp
imul
xor
inc
cmp
xor
je
into
and
or
shrb
or
xor
aad
es
pop
popf
lcall
cmpsb
push
cmp
insb
fsubr
adc
lds
xchg
popf
fisubrs
subb
in
push
mov
inc
mov
insb
popf
dec
sbb
movsb
mov
fcomps
jne
in
sbb
xor
leave
pop
mov
and
xchg
jl
push
loopne
mov
sub
imul
push
insl
xorl
in
xchg
xchg
and
lock
xchg
mov
sub
mov
movups
imul
inc
dec
mov
or
icebp
mov
pop
add
pop
mov
mov
stos
outsl
xor
shl
ss
loopne
jle
mov
xorl
aas
das
cld
mov
into
sahf
dec
int3
fisttpl
popa
mov
leave
jb
sbb
jo
push
adc
cmpsl
lcall
test
testb
daa
adc
xor
xlat
subl
pop
das
jmp
dec
hlt
mov
je
hlt
mov
nop
popa
out
sbb
lds
add
xchg
jecxz
orl
mov
xor
shl
out
ret
cmp
mov
shlb
or
inc
gs
xlat
xchg
inc
fidivrl
push
sahf
xchg
mov
jmp
jmp
insb
xchg
loope
xchg
je
pop
enter
dec
or
xor
dec
dec
add
and
daa
cld
cmpb
push
pop
mov
sub
orb
loope
mov
lds
imul
lret
in
lret
jecxz
cmp
loop
jl
xchg
popf
nop
aad
sbb
xchg
sti
mov
cwtl
or
ljmp
xor
cmpsb
and
repnz
sub
xor
cmp
xchg
mov
stos
insb
fcoml
mov
or
jne
push
maxps
int
jno
dec
enter
mov
or
in
std
stc
inc
sbb
or
mov
pop
mov
xchg
pusha
pushf
xor
add
inc
push
lret
ret
adc
cli
das
adc
push
cmp
mov
mov
repnz
mov
xchg
arpl
xchg
add
insb
and
cmpsb
push
cmp
mov
pop
subl
stc
scas
mov
xorl
inc
push
pusha
repnz
and
or
out
pop
aaa
jne
push
mov
ljmp
mov
and
icebp
outsl
mov
jge
bound
jno
cmp
cmpsb
sbb
xor
push
repz
movsl
nop
lds
enter
fs
test
loope
fiaddl
test
mov
mov
push
adc
je
inc
pop
adc
inc
jle
jne
mov
sub
xlat
loop
scas
pop
and
jne
fisubrs
sub
and
push
or
and
fmuls
sbb
cmpsl
fwait
sbb
or
andl
push
rcrl
pushf
adc
xor
push
pop
mov
push
inc
imul
xor
jp
cmpsl
pop
in
sub
stos
insb
push
xchg
cli
seta
cmpsb
test
repnz
int
sbb
repnz
inc
mov
pop
hlt
in
icebp
movsb
rcrl
add
and
faddl
cld
outsb
pop
xor
int
sbb
insl
sub
add
cmp
aad
psrld
sub
sbb
int
lret
pushf
std
dec
movsb
out
jmp
mov
xchg
inc
dec
pop
aaa
incl
fcomps
xor
push
pop
aam
fwait
add
test
adc
loop
sahf
mov
jmp
dec
call
mov
xor
out
xor
xchg
mov
push
cs
sbb
data16
xorl
daa
fimuls
mov
fisubl
subl
sahf
js
or
lock
dec
outsl
call
ret
iret
std
movsb
xor
mov
or
push
mov
scas
pop
jecxz
cmp
xchg
push
xor
hlt
cmp
pop
nop
imul
jg
jns
mov
mov
mov
xadd
repz
daa
pop
jp
mov
cltd
test
inc
shrl
push
jb
cwtl
mov
lahf
jb
and
mov
fcomp
cltd
jmp
fidivl
and
adc
and
add
cmp
sbb
sbb
jg
test
das
lds
shl
test
sbb
dec
dec
and
cld
outsl
mov
adc
and
imull
repz
cld
pop
pop
jg
stos
repnz
sub
or
mov
cmp
cmp
stos
push
popa
pop
mov
sub
pop
push
pop
add
in
and
loop
fmul
mov
adc
add
roll
cltd
pop
jl
addl
sqrtps
mov
inc
nop
mov
xor
inc
inc
or
xor
sbb
movsl
je
fistl
push
sbb
push
icebp
jl
or
mov
lahf
fcoml
sub
or
jge
in
mov
sub
or
cwtl
out
aam
cmp
xchg
push
adc
daa
lret
cld
stc
aaa
loop
test
adc
rorb
adc
adc
out
xchg
inc
cltd
ljmp
in
aas
je
lahf
decb
pop
dec
mov
sbb
pop
out
and
arpl
cli
mov
adc
loope
inc
stos
lcall
xor
add
enter
pop
dec
jge
stos
or
sub
jg
sbb
pop
push
das
div
adc
add
fwait
js
test
cmp
pop
pop
cmp
inc
or
mov
or
sub
cld
add
xor
jmp
cmp
push
push
cmpb
inc
push
jne
mov
jae
or
sub
jae
ret
pop
test
stos
jecxz
xchg
push
incl
mov
fstps
lcall
add
add
mov
inc
das
jb
pop
ss
pushf
or
push
xchg
jp
adcb
inc
clc
imul
xchg
test
outsw
inc
and
pop
mov
in
decl
stos
adc
push
adc
stos
leave
test
out
arpl
shlb
mov
xchg
mov
jmp
or
insl
jno
pushf
mov
xchg
scas
loope
fwait
mov
shlb
sub
fildl
sub
xor
out
sbb
fiaddl
mov
sub
mov
fdivr
repnz
inc
test
mov
sarb
outsb
fdivl
ja
jl
lret
fdivl
in
shr
and
cmp
mov
popl
dec
test
aas
cmp
in
call
pusha
fsubl
and
mov
cmp
imull
mov
ja
jge
add
pop
jg
sahf
imul
test
lahf
xor
loopne
cwtl
inc
jg
in
inc
dec
inc
cmpsb
imul
xchg
scas
rorl
jle
mov
jmp
mov
mov
sbb
das
cwtl
cmp
ficoms
xlat
sub
ss
icebp
rclb
mov
and
xchg
jne
pop
mov
aam
and
stc
add
lret
sub
pop
mov
mov
popf
call
xorl
or
pushf
lea
push
stos
popa
dec
mov
lods
mov
xor
lret
inc
push
xor
test
add
sti
shrl
sbb
fisubs
aas
sub
mov
out
ror
xor
sbb
clc
lcall
popf
ds
sub
movsl
dec
loope
sar
and
cwtl
pop
mov
sbb
aad
jl
icebp
mov
cmp
pop
pop
pop
adc
out
jo
loope
push
add
mov
sbb
mov
push
sub
ljmp
lahf
jg
lret
loope
es
mov
mov
sub
insl
jecxz
jmp
ljmp
fdiv
lods
dec
pop
and
pop
and
mov
scas
mov
mov
pop
cmovne
inc
adc
and
leave
mov
insb
cmc
xor
inc
aad
mov
sub
jo
pusha
jmp
fidivs
xor
jne
repnz
push
mov
dec
pushf
pop
xor
stos
in
jns
cmp
in
mov
je
mov
je
inc
pop
inc
xchg
inc
jle
andl
and
inc
std
jno
dec
out
xor
dec
dec
popa
xor
xor
sub
gs
add
jp
mov
fs
add
sub
bound
aad
lods
test
pop
pusha
inc
push
mov
enter
leave
ds
mov
in
ficomps
add
inc
bound
icebp
or
jnp
cltd
sbb
and
adc
mov
mov
cmpsb
jns
cld
cmp
lret
push
inc
mov
pop
mov
sbbl
sahf
fmul
push
in
pusha
imul
sbb
dec
jnp
das
jbe
nop
jle
loop
cmp
dec
pop
and
push
sbb
xchg
push
leave
ljmp
call
int3
fs
inc
loope
call
jb
lea
pop
mov
negb
inc
call
pop
scas
fnsave
mov
pop
call
pop
jecxz
test
mov
mov
js
jb
push
add
out
mov
dec
mov
xor
sbb
je
push
loopne
clc
jno
jg
icebp
mov
aas
arpl
pop
je
pusha
lret
rcrb
pop
push
stc
inc
jge
jne
sbbb
cmc
fdivs
js
mov
out
scas
daa
mov
jno
mov
sub
inc
mov
mov
mov
jle
pushf
cmp
sbb
aam
push
lock
outsb
jmp
mov
xor
enter
cmp
lods
xlat
and
pop
gs
mov
cmp
adc
mov
mov
inc
fidivl
sbb
jns
outsl
aaa
xor
jb
int
addl
cwtl
jbe
mov
insb
popf
ljmp
adc
fsubs
sbb
rcl
mov
imul
pop
jns
jo
orl
int3
pop
subl
jno
jnp
push
pop
lods
loopne
loop
addl
shlb
fsubl
cmp
inc
push
add
ds
dec
roll
add
mull
je
add
stos
fstl
lock
adc
pop
and
insb
mov
icebp
inc
fdivs
mov
mov
pop
xor
mov
repnz
jge
pop
icebp
int
lock
lock
daa
adc
testl
push
sahf
loopne
ljmp
cs
cld
push
sbb
lret
jb
cmp
lods
push
sbb
or
jne
testl
sbb
inc
int3
pop
icebp
leave
fmulp
and
adcb
sahf
movsl
popfw
adc
push
adc
jl
xor
divb
jns
ficompl
lods
jns
mov
cmovns
daa
out
sub
cmp
xchg
adc
sub
inc
loopne
mov
cmc
mov
stos
and
sbb
or
xchg
rorl
mov
cmp
or
xlat
sbb
mov
out
cmp
mov
mov
dec
cmpsb
fildll
and
push
into
dec
xlat
mov
fstps
insb
arpl
lods
or
xchg
add
dec
sahf
push
mov
jmp
sub
xchg
les
lds
jge
or
mov
bound
mov
add
ds
icebp
adc
mov
ret
cmp
shlb
adc
mov
loop
cltd
jbe
mov
push
xor
mov
xor
loopne
inc
add
sbb
sub
mov
jecxz
push
xor
mov
mov
rorb
pop
fwait
stos
pushf
rorl
mov
mov
and
dec
fisttpl
mov
lods
xchg
xorb
fdivrs
test
sub
std
in
clc
je
mov
shld
inc
out
inc
fs
xor
add
leave
sbb
jle
int3
leave
test
add
imul
test
xchg
mov
mov
aas
mov
push
es
sub
je
add
ret
das
mov
lahf
in
cmp
lods
shl
int
jno
sub
clc
xor
or
mov
pop
mov
dec
jg
cmp
addr16
mov
inc
insb
insb
xor
cld
popa
xchg
inc
mov
int3
in
push
adc
sarb
xchg
scas
dec
push
and
pop
jbe
mov
fwait
stos
xchg
xchg
mov
out
mov
fs
mov
lods
imul
aam
xchg
xchg
cli
aad
lcall
ja
fdivrl
insb
ss
in
jl
popf
ja
movsl
xchg
je
leave
inc
aaa
adc
push
cmc
or
ret
test
pop
hlt
hlt
test
adcl
loop
push
pusha
or
loope
push
das
adc
push
fildl
shl
out
and
outsl
sbb
test
ret
mov
cs
jae
push
imul
scas
ret
sbb
lcall
enter
rcrb
add
cmpsl
mov
sub
sub
loope
addr16
sub
or
sbb
and
fstp
popl
push
xlat
push
inc
adc
shlb
sub
and
in
xchg
orl
in
lret
in
mov
mov
sub
xchg
push
into
rcrb
push
sbb
movsl
mov
hlt
inc
jmp
push
jecxz
lret
in
rcrb
and
shrl
push
adc
add
sti
popf
dec
pop
fs
es
mov
insb
stos
arpl
call
lds
ret
lret
lea
data16
out
cmc
idivb
lahf
dec
mov
sahf
int3
or
fnsave
add
dec
mov
stc
jne
aad
sub
enter
mov
push
jae
mov
shl
and
push
pop
push
add
inc
mov
pop
fwait
das
mov
fiaddl
stc
cmp
push
xchg
js
pushf
in
xchg
dec
mov
xchg
xchg
jge
xchg
bound
jge
sub
mov
outsb
pop
xor
imull
inc
sbb
int
aas
fdivrs
pop
inc
mov
out
lock
clc
push
and
jb
inc
or
cwtl
cmp
jns
test
and
sbb
ret
dec
push
das
cmp
insb
rcrb
jbe
clc
push
mov
je
divb
push
push
push
das
out
mov
mov
hlt
int
xor
aam
pushf
js
sub
sbb
aam
mov
stc
outsb
cmpsb
push
push
ret
daa
int3
bound
pop
inc
jo
pop
sub
push
mov
and
mov
xchg
aaa
test
ret
js
pop
pusha
fsubl
fs
mov
adcb
sbb
xchg
cmpsl
cmpsl
xor
pop
cld
cmp
cmp
cwtl
rclb
sub
sbb
decb
invd
ss
arpl
ret
cmpsb
lcall
sub
sarl
inc
and
loop
jo
cmp
out
insb
rcrl
movsb
int3
fadds
fiaddl
pop
call
and
mov
into
sub
inc
daa
lds
loop
lea
mov
xor
xor
fists
jge
pop
pop
divb
dec
pop
pop
into
mov
fcmovnbe
addr16
test
push
xor
inc
or
pusha
xor
inc
sahf
test
jne
sbb
cmpsl
repz
lods
cltd
sub
sub
inc
xor
push
xchg
adc
dec
fisubl
add
dec
sbb
adc
xor
lods
repz
mov
or
mov
mov
sti
xor
scas
xor
shll
mov
pop
scas
or
ja
xor
inc
shlb
push
pop
sub
test
pop
fld
mov
mov
lock
stos
repz
fdivs
jnp
adc
enter
xchg
lods
lds
push
ficompl
shll
rorl
loope
jle
jl
mov
iret
addb
xor
sbb
fsubrs
ds
leave
mov
lock
lahf
add
test
pop
mov
ds
xor
outsl
cmc
iret
pextrw
add
sti
out
into
sub
inc
popa
xchg
cli
pusha
push
dec
adc
push
leave
dec
jnp
jns
add
inc
test
stos
shrl
subb
pusha
stos
and
and
mov
or
xchg
jp
add
hlt
sub
sub
addl
mov
ficomps
dec
xor
ss
in
jecxz
cmp
es
dec
inc
mov
sub
mov
mov
push
cli
mov
cmp
mov
xchg
call
pop
sub
iret
add
loop
cmp
popf
aam
mov
cmpsl
mov
pop
aas
jne
iret
cmp
inc
imul
hlt
sub
mov
pop
mov
sub
jg
in
loop
jne
fstps
jae
cmp
fbstp
jg
lods
pusha
xor
push
test
xchg
push
lods
enter
cmpsl
std
mov
jg
in
scas
out
lds
stos
cmpsl
mov
sub
lds
jnp
mov
pusha
sbb
sti
cltd
hlt
sbbl
or
pop
add
aas
jge
cwtl
je
ljmp
fdivl
dec
xchg
lret
popf
xchg
push
movsl
test
mov
jnp
imul
pop
add
leave
add
push
out
dec
mov
roll
in
int
pop
lahf
fnsave
pop
into
addr16
push
push
xor
in
add
ljmp
cmpl
jno
bound
aas
and
adc
pop
insl
xorl
lahf
setbe
out
mov
cmpl
jp
rolb
fcmovnbe
push
pop
mov
gs
leave
push
out
cmp
push
and
sar
shll
call
addb
push
mov
push
scas
aad
or
fstps
adc
fstl
push
mov
xlat
xor
jno
sub
push
mov
sbb
pop
inc
inc
dec
mov
mov
xchg
xchg
stos
push
les
add
jle
mov
add
bnd
shlb
add
outsb
dec
aad
icebp
jnp
inc
call
pop
mov
sbb
push
in
scas
or
sbb
cwtl
add
stos
mov
ja
stos
clc
inc
dec
bound
pushw
jg
lret
aam
jmp
mov
inc
repz
faddl
in
xchg
inc
movsl
cmpsl
pop
inc
loope
cmp
gs
data16
jb
shll
mov
lea
repz
inc
lea
inc
adc
mov
ret
loope
rcll
fcomip
cmp
mov
jne
das
push
and
mov
stc
and
mov
mov
mov
cmc
cmc
adc
push
leave
push
or
int
dec
insb
jbe
sbb
incb
push
mov
ja
aaa
das
bound
jnp
push
clc
jp
adc
xor
out
enter
mov
shrb
mov
cmc
jae
pop
stos
ds
lods
push
leave
pop
jecxz
pop
je
fcompl
or
popa
enter
xor
divb
fs
jnp
loope
lods
lcall
inc
or
mov
rorl
test
shll
out
scas
add
jmp
mov
sub
das
or
mov
lds
popa
push
inc
in
push
ja
addb
lods
je
popf
insb
stc
add
or
jae
jns
test
leave
sub
nop
or
lahf
ret
adc
pop
sbb
pop
je
notl
mov
sub
push
mov
flds
fadds
in
cwtl
in
sbb
orl
mov
ljmp
scas
stos
imulb
pop
lds
sub
cmp
scas
and
imull
sti
insb
shrb
arpl
or
gs
sub
add
pop
enter
lahf
insb
and
jbe
test
cmpsb
aaa
movsl
mov
hlt
repnz
jmp
sbb
iret
jmp
inc
ficompl
and
out
testb
cmp
add
and
pop
mov
sub
mov
out
cs
popf
or
push
notb
dec
add
cwtl
jae
daa
mov
divl
into
add
mov
inc
popa
mov
jmp
push
push
and
push
dec
xor
push
mov
pushf
mov
dec
mov
movsb
movsb
pop
mov
stc
test
cmp
mov
loop
loopne
dec
inc
sbb
pop
cmp
and
sub
and
dec
pushf
pop
inc
pop
xor
subb
xchg
insl
icebp
push
cmp
xor
pushf
test
fidivrl
insl
jmp
sbb
push
aaa
out
jo
mov
lods
ja
pop
xorl
push
adc
pop
aad
ret
push
pushf
jle
xchg
cmp
jmp
push
pop
add
mov
pushl
pop
mov
xchg
orl
insb
enter
imul
sti
sub
jle
mov
shll
inc
dec
imul
inc
loopne
movaps
aas
push
nop
xchg
nop
mov
loope
out
imul
xor
cmp
imul
divl
cmp
lock
test
ds
test
add
je
nop
int
shrb
or
repz
pop
sti
ret
sub
cli
pop
mov
in
sub
add
cli
js
in
imul
lret
lret
test
mov
jge
lods
push
and
pop
dec
jl
dec
sarb
test
inc
push
aam
pop
loop
lahf
jp
addb
aad
mov
adc
sahf
aam
mov
in
cmp
cwtl
pop
mov
mov
mov
mov
leave
cmp
pop
cmp
cmp
sahf
fcmovnb
xor
leave
mov
xchg
dec
leave
ljmp
inc
test
jo
mov
loopne
fistl
xchg
outsb
or
shr
push
jp
test
subl
mov
mov
or
inc
mov
xchg
inc
mov
xor
and
inc
fisubrl
ret
fdiv
in
sahf
shll
inc
idivl
mov
mov
push
insl
lea
add
push
jne
clc
mov
gs
xor
mov
and
sahf
or
jb
add
les
mov
cmp
mov
sbb
insl
mov
jmp
jae
xorl
xor
out
imul
cmp
xchg
bound
int
adc
test
bound
cmp
jb
cmpsb
filds
lock
mov
adcb
mov
fstpl
fldl
or
ret
sbb
imul
pop
xchg
or
mov
mov
shrl
mov
movsl
mov
subl
icebp
imul
ds
jmp
sub
fbstp
or
push
sub
fs
xor
dec
dec
xlat
push
je
inc
out
fldenv
aas
fwait
mov
cmpsb
sub
sub
fdivs
dec
or
mov
and
mov
loopne
rol
add
cwtl
jbe
xchg
and
jecxz
je
dec
fbld
fisubrs
ret
dec
ror
add
and
or
and
or
sub
dec
call
and
push
lret
popa
outsb
ret
mov
xor
xlat
adc
ds
pop
push
in
mov
pop
inc
in
imul
das
sbb
test
sub
mov
jmp
mov
scas
sbb
inc
mov
sbb
rclb
mov
lods
stos
loope
add
mov
pop
scas
scas
cld
imul
lret
in
push
sbb
xchg
dec
fiaddl
fisubrl
test
test
inc
pop
xor
xchg
dec
ret
xchg
inc
xchg
xor
mov
stos
dec
and
test
lods
lods
jns
or
orl
push
cld
sar
fmull
out
lds
sub
fwait
out
rorb
mov
es
push
js
sarb
or
mov
fnstsw
sarb
mov
pop
in
cld
xor
cmp
sbb
sti
xor
xor
jmp
cmp
jae
int
or
pushf
xor
js
insb
dec
adc
sub
sbb
xor
mov
sbb
xlat
sbb
pop
inc
icebp
in
and
xor
mov
inc
pop
out
mov
jle
pop
xor
gs
lret
dec
pop
rolb
test
xchg
ret
sub
test
ss
aad
jg
mov
fcomps
ret
fidivl
sub
lods
pushl
mov
sub
cwtl
or
jmp
push
fcoms
mov
push
movsl
mov
push
sub
push
mov
pop
and
in
addr16
pop
inc
add
xchg
xlat
ljmp
pop
outsb
rol
xor
push
into
cmpsl
sti
addr16
push
fnstenv
push
jns
stc
cs
je
arpl
cmp
push
notl
pop
es
cmp
and
pushf
xor
inc
pop
xchg
cmp
fs
cmp
sbb
fcoms
sbb
xchg
xor
xchg
pop
nop
mov
cmpsl
jb
rcl
lods
cmp
movsb
adc
mov
leave
sub
push
push
cmc
mov
jns
nop
mov
nop
add
and
mov
or
and
cmpsl
and
pop
jmp
test
lret
xor
cmp
dec
idivl
pushf
jle
clc
xor
mov
pop
clc
jg
sub
or
out
loope
mov
sub
insb
sbb
xor
or
in
mov
lods
out
fiadds
xchg
das
ss
adc
lock
in
shlb
push
pop
adc
fwait
sbb
push
addr16
rcrb
add
dec
and
add
cli
sub
xor
jge
mov
mov
jg
adc
rol
ds
aad
xorl
hlt
shrl
cmp
adc
shll
fs
xchg
push
push
imul
or
rol
mov
pop
rorb
stc
ja
int
ljmp
pop
std
popf
and
add
sub
mov
push
push
arpl
adc
pop
sub
mov
pop
pop
stc
hlt
sarb
dec
shr
out
cmp
mov
arpl
jle
lahf
mov
sbb
loopne
leave
sbb
imul
scas
sarb
mov
pop
outsl
rol
jmp
pop
pop
mov
mov
cmp
mov
ret
ja
test
aad
push
jns
xchg
mov
in
loope
cltd
jmp
lcall
mov
push
mov
sbb
jns
xchg
lea
daa
jp
adc
or
ss
mov
mov
repnz
dec
pop
xor
push
gs
rcr
pop
dec
js
divl
cwtl
shll
and
mov
inc
jg
push
mov
mov
lods
clc
inc
rorb
enter
test
stc
dec
and
add
pop
jg
int3
pop
jecxz
dec
sub
add
push
xchg
or
and
sbb
mov
daa
clc
subb
xchg
mov
dec
mov
data16
sahf
repz
push
jo
cmp
shll
and
inc
jne
mov
sub
jnp
jne
and
xlat
mov
sarb
lock
mov
aam
pop
dec
push
cmp
mov
sub
cmpsl
popa
pop
loope
push
lcall
stos
add
or
aad
jge
cmpsb
add
ret
rcrl
cs
or
pop
lahf
push
dec
lret
cmpsb
test
jp
dec
insb
xchg
int
fwait
cwtl
out
int
jle
fistpl
out
lods
and
jbe
gs
mov
stos
ss
jnp
mov
stos
jmp
jno
flds
popf
nop
xchg
stos
jno
push
pop
jl
movsl
and
xlat
mov
std
nop
fs
or
jns
aam
xchg
sbb
out
outsb
clc
mov
cmp
sbb
push
lret
jg
enter
sub
push
jg
and
push
out
mov
cwtl
ss
lahf
sbb
push
and
cld
arpl
data16
xchg
jne
xor
pop
jge
mov
sbb
inc
xchg
adc
aad
cmpsb
sbb
mov
fs
rorb
subl
add
and
bound
or
daa
push
push
ret
fcomi
jae
pop
int3
mov
pop
cltd
inc
arpl
xchg
jmp
xor
cmpb
mov
jae
les
and
add
sub
jge
mov
imul
in
pushf
sub
rorb
cli
sub
push
push
add
je
mov
push
or
cmpsl
mov
dec
lcall
ss
pop
push
ds
js
dec
out
jecxz
data16
popf
jge
jae
inc
jmp
and
push
shl
sbb
stos
mov
jge
jne
jg
push
fwait
mov
push
dec
sub
add
mov
jnp
mov
das
mov
adcb
adc
sbb
lcall
mov
jmp
leave
jle
sbb
xchg
cmpl
cwtl
out
cmp
sub
out
je
dec
push
inc
sbb
andl
stos
fcomp
aad
mov
lcall
test
mov
sub
lret
mov
call
cmpsb
add
dec
push
push
fwait
repz
mov
repnz
js
notb
out
aad
movsbl
std
repnz
cmpsb
inc
insb
and
jb
data16
aas
xchg
shr
fcmovu
ror
clc
xor
xchg
inc
adc
stos
shr
movsl
fstps
pop
addb
pop
in
fimuls
jg
mov
lds
ret
pop
xchg
dec
inc
xor
js
daa
clc
test
pop
pop
clc
das
jo
and
cmpsl
mov
popf
add
jecxz
jmp
in
xor
jne
outsl
std
loope
jo
cmpsb
dec
rcrb
in
js
jno
fwait
sub
daa
je
sub
les
or
jecxz
sarl
sbb
stc
addr16
pusha
lcall
push
out
fstps
aad
or
fs
outsl
cmp
ficoms
or
jg
inc
xchg
mov
mov
push
loopne
adcl
andl
or
dec
daa
ljmp
andb
jne
mov
mov
repnz
arpl
imul
hlt
push
sub
cmp
out
mov
jb
sbb
xlat
je
inc
jg
test
cmp
xor
xchg
ss
and
jb
pushf
ljmp
jl
mov
xchg
fdivs
mov
xor
mov
fistps
inc
inc
scas
stc
out
inc
jle
lahf
test
pinsrw
pusha
adc
lods
imul
and
out
pushf
sub
hlt
into
fcoms
fcmovne
scas
addr16
fsubrl
repnz
lock
adc
inc
lods
aam
jmp
sub
dec
and
mov
ss
scas
push
push
subl
inc
inc
dec
sub
xchg
int
popf
fldcw
ret
sub
dec
cwtl
jecxz
xchg
xor
mov
out
cld
ficoms
int3
fsubl
jae
adc
dec
test
adc
mov
icebp
sahf
das
xchg
lock
out
movsl
cmp
shlb
lret
pushf
ss
fstl
jae
and
js
addr16
aaa
mov
into
movl
mov
xor
adc
aad
push
lock
or
out
pop
sub
cmpsl
pusha
sti
add
xlat
pushf
fcompp
sbb
jg
sub
inc
xchg
mov
int
movsl
fdivp
outsb
pop
sub
inc
mov
cmp
or
scas
sbb
push
push
inc
in
fadds
push
xchg
pusha
test
adc
xor
out
loopne
jg
xor
pop
xchg
or
movsb
in
xchg
out
and
ret
add
cmp
insb
movb
xchg
jge
addr16
sar
movsl
jb
in
push
push
pop
leave
in
aad
int3
push
lea
aam
inc
mov
pop
fistpll
fucom
in
mov
fistpll
dec
and
sub
mov
dec
mov
and
adc
cmp
xchg
test
in
rorl
mov
shl
jne
mov
dec
fwait
mov
add
sub
xor
push
into
push
aaa
pop
repnz
pop
mov
xchg
or
outsb
xlat
stos
mov
test
iret
imul
sbb
mov
shll
scas
inc
jp
sbb
popa
inc
das
add
pop
pop
mov
inc
xor
pop
and
mov
lea
mov
mov
flds
cmp
dec
imul
sbb
dec
mov
or
adc
dec
das
cltd
add
scas
int3
lret
test
cmpsl
out
fistl
leave
fldt
ljmp
adc
mov
inc
inc
jge,pt
fdivl
mov
iret
ret
dec
pop
idivl
pop
call
lret
test
dec
cwtl
jne
add
xlat
in
shlb
mov
pop
stc
or
insb
icebp
into
lods
sub
shlb
jg
adc
lods
test
inc
mov
fidivrl
aas
popf
xor
jmp
popa
ljmp
sub
dec
repz
inc
fs
shlb
loop
stos
loop
cmp
scas
movsl
int
sysexit
xor
sbb
pop
fmul
dec
sbb
call
test
les
pop
fildll
mov
mov
and
mov
das
mov
decl
adc
mov
push
add
fstpt
negl
cmp
jecxz
jne
test
adc
push
xor
ret
xorl
in
jle
nop
and
sahf
popa
cld
repz
les
ret
sahf
xor
add
dec
cs
pop
cmp
pop
jmp
jle
or
cld
mov
rcl
rorl
movsl
fs
xor
adc
or
inc
or
xchg
sub
add
fidivs
lret
int3
cmp
or
bound
mov
push
add
dec
test
imul
adc
push
xor
jp
cmp
movzbl
out
dec
mov
mov
mov
lods
cmp
xor
cltd
xor
sbb
and
movsl
jb
mov
arpl
into
mov
sub
sub
and
xchg
pop
out
adc
cmc
lret
out
repnz
out
imul
cmc
xchg
adc
fwait
mov
clc
test
cltd
xchg
cs
cmpsb
arpl
mov
rcrl
insl
and
xchg
sbb
jl
xchg
adc
dec
sbb
out
ds
rclb
call
orl
dec
cld
sbb
outsl
outsl
lea
jae
lods
push
add
sub
roll
mov
ret
jne
or
xchg
push
in
xor
or
mov
loop
rorb
dec
push
mov
cmp
xchg
out
mov
mov
mov
es
ja
call
sub
mov
cmp
add
jecxz
ds
cmp
inc
gs
sub
in
add
mov
mov
jg
mov
adc
pop
pop
sub
inc
pop
out
loop
in
adc
push
popf
fstpt
sbb
inc
mov
jp
jge
or
rcrb
add
inc
lret
xlat
shr
and
movsb
jne
aas
xchg
push
dec
or
rol
out
mov
mov
pusha
imul
dec
jo
into
dec
or
dec
js
in
test
xchg
inc
and
jp
add
repnz
sub
jno
and
pop
mov
jp
adc
inc
int
push
cmp
mov
add
cwtl
xchg
jge
repz
mov
sbb
jno
pushf
insb
sbb
sti
int3
dec
and
push
ficomps
iret
mov
fisubs
and
mov
mov
mov
lcall
add
jbe
fwait
addr16
jg
inc
cmc
inc
loopne
out
pop
in
rorl
hlt
inc
mov
sub
insl
popa
or
shr
imul
add
push
mov
stc
das
and
jmp
in
pop
sub
sub
xchg
pop
fmulp
sub
push
outsb
pop
cltd
gs
mov
lcall
out
mulb
jecxz
cwtl
ja
rorl
sub
mov
leave
dec
mov
sbbb
mov
add
ljmp
adc
or
jg
dec
jbe
aad
push
xor
or
leave
jne
push
adc
inc
mov
dec
sti
add
xor
fwait
inc
pop
in
jle
jns
addr16
xor
jns
mov
sbb
sub
pop
imul
iret
or
sbb
or
daa
sub
lahf
pop
aam
fwait
insl
mov
fs
movsb
and
jne
and
movsl
bound
mov
popf
lret
cli
mov
js
push
push
ljmp
sbb
js
or
mov
and
push
inc
data16
pop
pop
xor
mov
ret
mov
into
and
rcrb
dec
sarb
js
cmp
jnp
out
sub
sbb
sbb
xor
rorl
add
or
ror
jmp
add
shrl
mov
cmp
js
rclb
or
or
jbe
jne
jno
jo
mov
mov
jno
ljmp
lcall
fs
ret
sbb
sbb
leave
xchg
in
cmp
mov
push
add
push
and
enter
add
push
push
nop
inc
ja
les
js
inc
ljmp
xor
push
rclb
aas
inc
pushf
aas
cmp
jp
aas
in
xlat
mov
add
jns
dec
out
loope
insb
in
mov
inc
stc
push
add
lret
test
outsl
leave
stos
mov
push
gs
test
imul
pop
mov
in
pop
xchg
mov
addb
stos
outsl
cmpsb
shrl
std
sbb
pop
xchg
jp
lcall
jo
push
ret
mov
mov
cmc
jge
push
cmp
inc
dec
lret
cmp
lret
xchg
fwait
xor
sahf
mov
arpl
jb
sbb
ss
mov
lahf
imul
lods
jg
adc
mull
mov
in
data16
pop
adc
lcall
add
mov
push
inc
cwtl
repz
mov
in
adc
and
jl
loopne
adc
mov
dec
push
mov
sub
pop
sub
orb
mov
sbb
add
shl
test
nop
cmp
sub
dec
int
das
and
repz
pusha
inc
sbb
lret
xchg
pop
pop
lea
push
shlb
outsb
sbb
jo
xchg
fs
test
shl
stos
cmp
mov
adc
mov
and
cmp
aam
jno
in
pcmpeqd
sbb
jo
arpl
adc
or
xchg
sub
push
lea
sub
into
pop
jmp
das
arpl
sub
arpl
mov
or
outsb
push
cmpsl
jns
mov
and
scas
es
fisttps
pop
push
xor
test
aaa
lods
mov
mov
cmpsb
mov
mov
jge
mov
mov
mov
daa
je
jg
add
adc
push
ja
jmp
adcb
sti
int
xor
xor
mov
xchg
inc
outsb
cmp
jnp
rcrl
pop
or
test
outsl
dec
xchg
cmp
jg
rcr
xor
adc
movsb
xor
mov
dec
fisubl
sub
jp
mov
sahf
mov
xor
lret
pop
dec
aam
inc
movsb
stos
fwait
or
movsl
dec
pushf
xor
or
fwait
leave
add
push
mov
lods
jl
mov
and
xchg
mov
notl
bound
movsl
or
jns
lods
pop
iret
dec
pop
aam
daa
sbb
int
test
stos
and
push
scas
cmp
and
add
pop
dec
adc
mov
inc
jmp
inc
leave
inc
jg
fdivrp
xchg
scas
pop
xchg
lea
clc
mov
or
repz
mov
int
pcmpgtw
and
adc
inc
adc
out
jg
push
imul
xor
and
push
stc
push
mov
mov
leave
subb
sbb
loopne
jo
dec
lret
lock
push
test
or
fnstenv
pop
fsts
gs
test
mov
cmp
dec
mov
inc
insl
dec
shl
jmp
push
ljmp
xor
jbe
fsub
inc
mov
outsb
sahf
or
out
or
sbb
inc
jo
cmc
mov
xor
cwtl
add
xchg
mov
xchg
int
mov
orl
mov
inc
inc
cmp
test
mulb
ret
pop
setnp
out
iret
cmpsl
xchg
pop
stos
gs
mov
cmc
shl
xor
sbb
and
addr16
jbe
fwait
in
pop
mov
sbb
call
imul
inc
ljmp
js
in
inc
cmc
fldcw
enter
repnz
gs
iret
jge
xor
jge
xchg
in
jle
adcl
mov
mov
jb
mov
dec
mov
push
fsubrl
xchg
jmp
adc
lcall
std
jns
leave
pop
in
add
push
cmp
dec
loopne
add
lcall
imul
adcl
aam
add
shl
mov
cmp
adc
sbb
push
mov
jl
mov
push
push
popf
add
cld
lea
xchg
ret
mov
cltd
mov
repz
adc
int3
add
icebp
push
in
and
pop
pop
nop
pop
jns
xchg
cmc
rcr
mov
test
lret
rol
imul
push
lahf
add
loopne
sahf
dec
sbb
mov
outsb
push
xchg
lcall
adc
ja
out
out
dec
add
cmp
jle
push
mov
push
loope
jb
popa
sbb
inc
or
cmp
lock
sbb
iret
scas
cwtl
mov
aam
sub
push
mov
imul
movb
outsl
scas
clc
cwtl
stos
fsave
sbb
or
and
sahf
sub
daa
ret
lods
sbb
stos
cmp
lret
es
repnz
outsb
dec
popf
iret
sbb
cld
int3
xchg
push
inc
int
pushf
pop
dec
pop
push
pop
sub
idiv
xchg
and
loope
rolb
insb
mov
popa
and
xor
aad
jecxz
popf
insl
punpcklwd
sub
sbb
inc
push
nop
xchg
hlt
es
dec
sbbb
mov
xor
cmp
daa
mov
pop
cld
pop
mov
jge
sub
push
pop
cwtl
jbe
jmp
mov
xor
dec
pop
dec
mov
pop
push
aad
mov
mov
or
out
xchg
inc
sub
cmpb
cmp
inc
add
push
frstor
inc
xchg
sahf
sub
leave
imul
cmp
es
in
jecxz
in
mov
xchg
mov
sub
out
out
ljmp
xchg
movsb
mov
mov
sub
push
adc
loop
pop
sbb
iret
pushf
notb
mov
xchg
mov
addb
adc
insb
push
enter
nop
je
fildl
cmc
jne
dec
jnp
bound
xorb
xchg
loopne
cltd
pop
das
push
pop
add
loopne
clc
inc
fstps
sub
mov
xchg
and
imul
pop
leave
mov
or
icebp
cmp
xchg
ja
pop
jmp
dec
fs
sub
pop
xor
aaa
out
push
neg
xor
stos
cmp
cmp
xor
fadd
out
loope
mov
adc
xor
sarb
mov
insb
push
mov
or
push
in
mov
mov
pop
mov
movsl
ret
jo
mov
xor
xlat
mov
pop
xor
out
lahf
adc
inc
lret
cwtl
test
xchg
xchg
out
ljmp
and
push
mov
movsl
inc
adc
sbb
mov
in
sbb
call
pop
mov
aam
stc
ds
fcoms
sbb
add
in
rcrb
mov
adc
lds
cmp
stos
push
rcll
nop
dec
lahf
push
add
js
outsl
mov
xor
mov
call
lods
xor
cmp
mov
ljmp
mov
add
pop
cltd
insb
rolb
adc
mov
cmc
mov
rolb
mov
cmp
aam
cld
lcall
jbe
mov
call
cltd
adc
jp
add
sbbl
jbe
shll
add
sbb
inc
xchg
mov
mov
mov
imul
mulb
hlt
push
dec
mov
enter
jnp
add
pushf
cli
popf
xchg
push
push
sub
imul
push
inc
dec
add
aad
rep
xchg
cld
test
xor
push
or
mov
je
iret
jnp
pop
jno
hlt
mov
lods
rcl
fisttps
aas
aad
and
out
mov
repnz
lahf
mov
mov
int3
inc
pop
adc
jae
and
pop
std
mov
negb
repnz
jp
or
jg
add
subb
icebp
cmp
sub
fwait
into
rorb
pop
or
sahf
test
inc
sbbb
mov
sbb
xchg
inc
and
out
jmp
cli
jge
or
xchg
xchg
ret
dec
movsb
loop
push
lds
mov
ja
mov
fcmovbe
pop
push
jae
out
xchg
mov
lds
mov
or
push
lods
aad
pop
and
es
pop
mov
jge
pop
mov
incb
cmp
call
mov
xchg
call
loopne
in
mov
sub
out
lock
out
incl
and
jae
mov
cmp
or
cli
imul
push
test
dec
mov
push
cld
popf
add
aas
xor
nop
and
pop
push
mov
xchg
popf
aad
lahf
dec
xchg
mov
mov
in
lods
jo
adc
dec
jae
add
xchg
out
pop
adc
push
shll
cltd
mov
lock
adc
outsl
mov
and
pop
ret
divb
outsb
mov
lret
add
dec
cmp
int3
es
push
sub
ja
xor
pop
push
nop
mov
ret
setae
test
jb
xchg
adc
mov
jl
add
leave
mov
push
out
das
sbb
clc
jl
cmp
jge
cwtl
adc
inc
inc
es
loopne
or
data16
mov
jo
test
inc
mov
scas
sahf
xlat
xor
ljmp
dec
mov
loope
add
lds
pushf
aaa
dec
lea
mov
jle
inc
xchg
iret
fstl
cwtl
icebp
jecxz
loop
cmp
mov
sbb
inc
in
in
idivl
add
inc
jle
mov
or
mov
xchg
inc
cmpsb
popa
xchg
pop
cmp
dec
xchg
insl
insl
sti
xchg
inc
add
dec
inc
or
and
test
cmp
cmpsl
xchg
shl
out
pop
jg
fists
mov
aaa
mov
out
push
add
inc
mov
xor
push
or
leave
sub
jno
push
push
push
test
sbb
mov
jb
push
repz
test
pop
xor
xor
inc
out
sbb
jle
insb
into
cmp
xor
add
sub
mov
out
clc
leave
mov
addr16
push
mull
je
in
stos
mulb
fbstp
and
leave
sbb
cmp
push
cwtl
inc
outsb
dec
mov
xchg
fcoms
aas
ss
pop
inc
testb
sbb
inc
insb
push
sbb
mov
mov
mov
jp
imul
mov
pop
and
cs
xor
xlat
scas
pop
stos
push
shll
jo
js
je
add
cmp
into
ss
push
lea
dec
push
xor
out
pop
xchg
adc
and
or
lahf
hlt
pop
and
lahf
or
push
shll
xor
or
or
cmc
cmp
lret
stos
in
pop
xchg
cltd
xchg
xchg
xor
js
mov
xchg
int3
fsubrs
adc
inc
mov
insb
mov
enter
lcall
jo
and
adc
mov
cmp
dec
mov
sub
cltd
cmp
mov
subl
shrb
aad
mov
movsl
je
adc
and
and
mov
lahf
push
js
xor
sub
ljmp
int3
push
push
jae
ljmp
mov
dec
fnstenv
loopne
pop
lods
mov
scas
or
mov
push
xlat
and
inc
push
nop
int3
add
loop
jnp
jecxz
popf
jg
scas
jle
xchg
mov
cmp
pop
out
lret
into
ret
stos
sub
imul
dec
not
loope
sub
push
jae
fsubl
scas
incl
aad
pushf
sbb
mov
es
push
mov
lcall
lea
mov
push
dec
leave
shll
cmp
mov
lods
dec
ljmp
in
xor
and
in
push
jp
movsl
cmp
cmpl
sbb
inc
cltd
imul
jp
jmp
mov
popf
jb
outsb
sub
ljmp
push
pop
iret
mov
jle
loop
xor
push
or
inc
rcll
lods
and
mov
pop
xlat
leave
lret
sbb
xchg
mov
leave
in
push
sub
pop
mov
std
data16
sbb
add
mov
cmp
std
sub
std
addb
dec
rolb
mov
ss
aad
dec
sbb
push
js
add
inc
xor
xor
iret
rol
cmp
cwtl
movsl
dec
inc
repnz
lods
mov
add
lods
movsb
leave
shrl
jg
inc
jns
mov
sbb
push
test
popa
push
push
cwtl
jne
test
lock
pop
push
jne
jp
jl
dec
cli
mov
fadd
push
and
xor
subps
loop
mov
mov
js
cmp
cmc
jnp
inc
sbbb
hlt
call
stc
pop
xor
add
data16
enter
fcomip
rorb
aam
icebp
push
scas
aad
mov
add
rcr
inc
imul
jnp
inc
mov
ret
cmp
adc
push
add
mov
or
leave
in
hlt
int
lods
iret
sub
frstor
pop
push
xor
add
nop
pop
sub
and
lock
xor
xor
in
jb
or
dec
mov
mov
inc
jbe
rcrl
add
test
out
or
lods
push
fdivs
and
out
and
mov
cwtl
or
outsb
cmp
cmpsl
les
pop
mov
push
fcoml
push
shlb
sbb
cmp
fistpll
inc
ret
ja
negl
and
pop
addl
movsl
inc
movsb
mov
xchg
fcomp
loope
pop
inc
aaa
movsl
pop
cmp
push
add
fisttpll
add
arpl
nop
xlat
test
fnstenv
add
lret
cmp
cmp
xchg
movl
push
mov
dec
inc
xchg
lahf
dec
andl
or
push
mov
clc
xor
xchg
hlt
movsb
loop
dec
das
mov
clc
pop
lret
lcall
pop
or
pop
dec
push
lret
push
jge
push
lret
insb
inc
push
mulb
xchg
ja
dec
pinsrw
enter
int
cmc
xorl
pop
dec
push
mulb
imul
jo
xchg
xchg
in
mov
mov
push
scas
inc
push
cmp
pop
inc
sti
fdivrs
lods
mov
inc
adc
push
push
hlt
mov
ja
pop
push
aaa
push
out
aaa
sahf
lods
cmp
aaa
pop
add
iret
stos
pop
es
mov
mov
pop
push
push
add
cmp
fistl
cmp
mov
jmp
lds
aad
or
dec
popf
push
popf
mov
push
mov
sti
dec
push
int3
push
cmp
adc
divb
testb
sub
ljmp
incb
in
loope
push
adc
testb
xchg
test
adc
xchg
loope
lret
out
aaa
pop
pop
out
xchg
mov
adc
xchg
mov
xchg
mov
in
jo
pop
cmp
dec
add
push
insb
jns
sarb
mov
imulb
add
enter
pop
sbb
scas
clc
sbb
xor
loope
repz
daa
and
fistpl
pop
mov
ficompl
sbb
dec
push
shrl
inc
mov
movsb
pop
add
stos
or
movsb
roll
push
and
xchg
pop
jmp
jnp
rcrl
in
xchg
sub
outsl
dec
cltd
push
mov
daa
sbb
or
cli
lods
sbb
jae
cld
cmpsb
out
cmp
lods
or
stc
jns
std
daa
aam
lcall
loopne
dec
jmp
and
push
jl
cmp
or
jmp
lcall
mov
xchg
mov
xor
data16
dec
push
mov
push
cmc
adc
stos
stos
push
dec
mov
add
adc
sbb
not
lods
lahf
test
lret
cmp
xor
lret
mov
scas
std
in
repz
out
mov
cmp
or
test
mov
ss
fmull
push
hlt
cli
adc
negl
int
lock
cli
jle
mov
icebp
jb
fsubl
adc
dec
push
stos
jno
push
xchg
jne
mov
gs
add
and
inc
push
adc
movsl
aaa
in
cwtl
mov
mov
jbe
cwtl
pusha
ror
pop
and
pop
jecxz
or
in
mov
adc
shll
lods
inc
outsb
mov
ret
push
cmp
fdivl
mov
dec
inc
out
arpl
loop
leave
iret
rclb
loop
aad
test
stos
in
in
imul
pop
pop
lret
push
and
imul
orl
popf
sti
xor
pop
mov
fisttps
repnz
popf
outsl
aas
push
sbbl
andb
mov
mov
repz
mov
ljmp
outsl
mov
cmpsl
fidivs
cli
and
ss
push
lock
pop
cmpsb
push
movsl
and
lea
daa
inc
es
scas
mov
xor
insb
mov
scas
nop
add
adc
iret
xchg
lahf
rorb
rcrb
xchg
push
sarl
lods
cld
scas
pop
dec
ss
push
add
dec
loop
mov
jb
ds
iret
aas
out
sub
cli
push
and
aad
cmp
jno
push
js
cmpsl
mov
mov
icebp
inc
or
or
aas
repz
xor
int3
ffreep
push
sub
adc
inc
mov
add
or
mov
sbb
push
cli
xlat
xchg
add
xchg
fdivl
push
pop
ds
xor
sarb
pop
mov
pop
jle
sbb
in
cld
or
andb
push
sbb
stos
jp
sbb
iret
lock
push
jns
jl
lea
repnz
add
mov
andb
sbb
mov
das
and
sbb
sub
ret
push
pop
repnz
pop
loopne
pop
dec
jno
mov
sahf
fwait
shll
mov
sbb
bound
jmp
orb
jne
sbb
add
mov
cmpb
add
lock
es
xchg
je
xchg
cmp
xchg
jbe
push
cmp
ret
aad
jle
adc
les
fcomip
push
pop
adc
inc
int
and
push
xchg
loope
or
je
imul
les
ficoms
push
sbb
nop
lahf
lahf
call
lcall
in
cmpsb
push
adc
cmp
scas
pop
mov
test
repz
lds
or
lods
adc
add
fwait
aad
xchg
and
fldl
add
or
jl
and
push
mov
xchg
inc
cltd
sub
push
sbb
jbe
and
in
mov
pop
mov
cwtl
jbe
push
movsl
cmpsl
xor
and
mov
sub
xchg
nop
inc
xor
les
lock
mov
dec
inc
cmpsl
popa
addr16
sbb
jle
sub
data16
pop
addr16
mov
push
test
ja
jecxz
je
mov
insb
jb
lret
dec
xlat
movsb
and
push
mov
aad
pop
outsb
inc
jl
ja
test
mov
arpl
sbb
out
insl
outsb
mov
jmp
xchg
inc
sbb
out
or
arpl
adc
int3
pop
or
mov
xor
lcall
out
mov
ss
or
div
mov
xor
add
mov
mov
out
popf
mov
mov
pop
push
cmpsb
out
out
mov
cmc
aaa
shr
xor
adc
repz
dec
ret
mov
mov
add
into
addr16
xor
and
scas
nop
nop
aaa
inc
in
pop
lret
pop
cwtl
jns
and
cwtl
cwtl
mov
bound
cs
lock
fnstcw
cmpsl
cli
sar
mov
push
xor
push
scas
clc
stos
pop
rcll
add
cmp
fwait
and
or
pusha
js
xchg
and
dec
jp
dec
jns
repz
fldt
fldl
repz
arpl
mov
mov
mov
cmp
and
sub
shrb
inc
aas
adc
adc
xor
inc
xor
cli
mov
sti
push
into
dec
mov
jo
ret
scas
lods
xchg
test
out
cmp
je
icebp
dec
mov
and
flds
rorb
std
adc
cmp
xchg
or
stos
mov
mov
icebp
shlb
mov
iret
xchg
and
inc
aad
popa
inc
addr16
or
popl
in
xor
sti
jg
jo
mov
and
imul
arpl
xor
jg
sub
jmp
jecxz
xchg
je
jecxz
orl
push
ret
in
lcall
repnz
and
fsubp
sarb
xchg
mov
iret
les
roll
dec
jo
out
mov
in
pop
pop
push
and
aas
loop
xlat
and
fsubr
outsl
sub
fdivrs
sbb
xchg
dec
adc
rcrl
out
rorl
push
int3
inc
mov
aam
decb
inc
sahf
aad
push
inc
xlat
adc
fs
shll
jns
and
xchg
push
test
mov
shll
or
not
xor
add
dec
andb
jecxz
mov
enter
and
cmovb
out
test
jae
cmpb
test
cmp
shrl
push
sub
or
cmp
jge
fisubs
jle
cs
mov
out
aad
adc
sbb
xchg
bound
js
mov
lods
jnp
mov
loope
lods
xchg
ret
arpl
nop
out
or
mov
outsl
dec
sbb
jl
jge
frstpm(287
jge
mov
add
dec
je
mov
mov
hlt
pop
outsb
and
pop
or
jmp
stos
imul
or
lret
in
movsl
fnstsw
inc
push
sub
pop
add
sbb
pop
jp
sbb
popa
dec
gs
in
aas
rolb
dec
pop
inc
adcb
stc
cmp
mov
jne
jecxz
inc
into
push
mov
pop
jge
cmp
lcall
sbb
int
hlt
lds
push
mov
outsb
test
xor
icebp
xor
rcl
in
outsl
mov
dec
in
add
cli
std
out
cltd
cmp
cmp
dec
into
mov
adc
aaa
mov
mov
mov
add
pop
mov
mov
je
xchg
sbb
into
jo
add
dec
cmc
sbb
cli
mov
push
push
loop
mov
scas
ljmp
pushf
mov
imul
inc
inc
insb
lea
and
je
and
sti
dec
mov
mov
cmpsb
mul
test
jo
dec
push
je
add
mov
push
xor
mov
mov
xchg
cmpb
sbb
loop
ss
std
jbe
les
jp,pn
popf
cmp
pop
mov
movsl
ficompl
aas
mov
rcr
lods
clc
in
rorl
mov
imul
cbtw
icebp
push
mov
cmp
sub
mov
nop
bound
cmp
sub
lcall
mov
or
push
mov
push
jg
dec
into
cmp
into
jne
push
dec
push
std
sbb
test
lret
push
mov
push
jmp
hlt
popa
mov
cmp
bound
in
mov
push
pushf
loopne
int
or
leave
jg
cmpsb
lret
in
add
pop
jg
lods
cwtl
test
jecxz
adc
adc
cmp
or
ret
cmp
push
cltd
add
in
adc
xor
int
negl
pop
push
bound
sti
cmp
and
xchg
pop
mov
xor
dec
jp
cmp
scas
jecxz
iret
or
outsb
mov
inc
shlb
jl
adc
test
pop
xchg
fidivl
in
outsb
pop
testl
push
and
or
stc
into
mov
arpl
mul
arpl
pushf
sahf
sub
jo
aaa
push
xchg
orl
clc
cmc
push
push
inc
imul
fiadds
pop
popf
sub
push
mov
pop
clc
or
pop
dec
test
cld
movsb
pop
sarb
cmp
xchg
pop
cmc
das
cmpsb
xchg
rcll
fwait
movsl
push
dec
xchg
ljmp
mov
jg
sbb
jle
and
popf
lea
jnp
jmp
cmp
lea
loopne
sub
add
fdivl
push
inc
addr16
sub
ret
scas
cmp
jmp
sbb
dec
push
imul
cmp
ficomps
outsl
repnz
xchg
enter
stos
testl
fimuls
out
ss
mov
outsb
mov
ja
add
mov
hlt
lret
push
dec
mov
mov
sahf
insb
pop
cltd
inc
jp
out
enter
mov
push
and
cmp
std
dec
cli
mov
scas
and
jo
push
lock
xor
lahf
inc
fs
cltd
fists
jns
sbb
add
and
dec
pushf
push
shl
sbb
scas
js
jo
mov
test
sti
pop
mov
cmp
mov
insb
mov
outsl
fisubs
ret
xlat
jge
gs
fs
enter
das
jle
xchg
fwait
mov
push
outsl
jg
xlat
push
inc
outsb
jo
xor
rorb
mov
mov
cmpsl
mov
cli
fsubr
adc
int
pop
mov
or
das
dec
les
lock
std
test
dec
ret
mov
ljmp
xor
or
in
lcall
loope
stc
jmp
iret
mov
xor
mov
es
ds
pop
inc
out
inc
sbb
jo
pop
idiv
inc
sub
jg
iret
ss
aaa
enter
sub
imul
out
call
sahf
cli
push
inc
decl
lods
stc
call
mov
mov
push
pushf
ret
push
mov
test
sbb
inc
lods
jmp
sbb
ja
jle
test
sbb
pop
nop
jbe
xor
dec
sbb
push
sbb
enter
ds
xchg
insb
aam
mov
pop
out
orl
jo
mov
sub
iret
pop
xor
dec
aam
fwait
cltd
dec
fwait
cld
pop
mov
fsub
inc
xchg
mov
pop
test
dec
imul
add
cs
sub
jp
cmp
mov
mov
jb
pop
mov
stos
loop
inc
pop
dec
add
cmp
push
mov
mov
adc
pop
das
mov
pop
sar
stc
lret
out
sub
xchg
icebp
jmp
jecxz
jnp
and
sahf
jno
ljmp
movsb
cld
and
push
mov
pop
xchg
jns
clc
addr16
faddl
call
and
xor
out
dec
or
inc
daa
cmp
pop
xor
addr16
aaa
jne
dec
sahf
mov
insb
fcmovnb
xorb
jne
jb
dec
aaa
out
add
nop
add
je
popa
addr16
or
xchg
leave
outsl
imul
dec
and
in
jge
mov
inc
notl
cmp
out
popf
pop
push
pushf
repnz
leave
repnz
adc
test
pushf
cltd
enter
std
push
mov
inc
clc
outsl
fidivrl
mov
pop
stos
mov
add
pop
jle
fwait
and
addr16
mov
jae
mov
pop
jnp
and
push
xchg
test
push
loope
push
xor
sub
mov
fs
dec
scas
in
aaa
fldenv
inc
cs
or
sub
adc
in
mov
in
dec
sahf
out
pop
ret
sbb
jae
mov
lods
cs
add
sarb
mov
aas
fsubrs
scas
pop
dec
sbb
lock
sbb
and
pop
add
mov
mov
mov
and
dec
push
jg
lods
inc
inc
push
or
jb
and
mov
jl
sbbb
sub
dec
inc
sbb
ds
dec
sbb
push
fmulp
loope
lods
lock
xchg
or
mov
sbb
jp
stos
nop
xor
insb
jns
js
outsb
imul
push
xorl
push
outsb
test
add
xor
sbb
add
pop
in
leave
pop
pop
outsl
push
or
clc
inc
pop
mov
sbb
push
iret
sbb
push
xchg
and
xchg
sub
pop
lods
cmp
add
das
shll
add
stos
lcall
xor
divb
inc
dec
iret
psubsb
lahf
outsb
insl
mov
jo
je
cld
pop
cmp
add
sbb
ffree
mov
in
xchg
out
add
popf
adc
jae
jns
cmp
vdivsd
imul
mov
push
sbb
call
adc
aaa
push
adc
jl
shlb
cld
mov
mov
push
in
insb
and
xor
dec
shrl
int3
cmpsb
jno
ret
add
add
daa
jle
in
dec
out
inc
adcl
fadds
xor
cmpl
add
mov
dec
leavew
cmp
mov
je
xor
lock
adc
push
mov
push
mov
mov
aad
mov
enter
hlt
mov
hlt
imul
iret
mov
and
mov
insl
aad
inc
rorb
jp
xor
push
jecxz
pop
nop
sbb
mov
lds
mov
subb
ja
cmp
sbb
mov
push
sbb
or
mov
lock
ret
fadd
mov
add
jb
xchg
in
sbb
repnz
fwait
sub
sti
fld1
cmpsl
jb
insb
push
ljmp
push
jae
jmp
sub
inc
movsl
dec
cmp
shrl
sbb
divb
jg
sbb
test
dec
dec
ret
inc
inc
fdivrs
adc
fidivrl
xchg
fs
arpl
adc
mov
test
ficoml
xor
lcall
push
int3
push
jp
cmp
into
loop
or
loope
adc
ror
inc
dec
push
stos
pushf
scas
jo
shrl
cmpsb
hlt
mov
inc
adc
adc
mov
cmc
mov
cmp
mov
sub
lcall
sub
inc
stos
adc
cmp
xor
push
xor
add
xlat
mov
pushf
jle
inc
ja
sbb
fwait
adc
pusha
push
movsl
outsl
mov
mov
inc
pop
lahf
adc
and
pop
pop
stc
shl
out
mov
outsl
dec
and
jg
call
test
in
or
pop
fcmovb
iret
iret
inc
xor
shll
lcall
or
pusha
xchg
jmp
or
out
mov
mov
scas
incl
xchg
repnz
sub
out
mov
mov
jp
fwait
ds
dec
cwtl
jg
add
mov
add
or
mov
mov
test
cmp
aad
jg
push
lret
dec
shl
mov
es
test
movsb
mov
lods
push
inc
push
outsb
lret
push
inc
inc
jg
or
pshufw
xor
sbb
adc
lock
and
aaa
stos
into
adc
mov
sub
mov
ljmp
dec
shl
mov
ret
pop
js
test
cs
andl
and
nop
sbb
ds
pop
das
lret
pop
cmpsl
mov
ljmp
or
xor
aaa
ss
cwtl
inc
lret
add
mov
les
lcall
rcrb
xlat
add
ret
pop
add
dec
cmp
inc
lods
mov
jp
or
push
mov
aam
push
pop
shlb
sub
push
or
and
push
fsubrl
cmpsl
mov
add
sbb
add
popa
cmp
aam
pop
cmp
inc
daa
insb
test
test
push
inc
gs
adc
scas
jnp
add
mov
sub
dec
dec
orb
mov
ds
ret
push
jo
mov
add
mov
in
adc
fldln2
and
mov
stos
mov
cmp
fcoml
adc
shrb
loopne
xchg
or
lock
mov
xchg
xor
jecxz
or
xchg
dec
push
adc
dec
rcr
mov
ss
ret
int
inc
cmpsb
movsl
mov
mov
mov
pop
loop
pop
dec
xchg
sub
out
cmc
popa
push
movzwl
lds
lods
xchg
adc
pusha
loopne
stc
push
mov
or
or
adc
xor
or
addr16
cmp
movsl
out
fildl
aam
js
lock
psrld
inc
inc
sub
insb
mov
cmp
xor
sbb
in
mov
mov
cmp
and
or
xor
inc
xor
fdivrp
push
cmpsb
adcl
pushf
clc
loop
sub
adc
sbb
push
add
mov
ljmp
cmp
xor
pusha
dec
scas
cmp
int3
mov
stos
inc
lret
mull
inc
push
inc
mov
mov
int
jecxz
cmp
daa
pop
sub
aaa
mov
jo
lods
xor
lds
sahf
lret
loopne
stc
sub
test
lods
aam
jns
push
push
jne
mov
jecxz
inc
ret
inc
jae
jg
jo
sub
into
ret
jae
ljmp
mov
mov
xchg
lea
inc
mov
push
insb
rcr
les
and
int
enter
pop
pop
dec
pop
xchg
mov
sbb
fidivrl
sbb
filds
pop
mov
cmpsl
xchg
rcll
sahf
inc
out
mov
stc
push
cltd
lcall
and
lods
sub
push
dec
xor
jo
jle
mov
out
xor
mov
lcall
shl
lods
or
stos
into
xor
je
scas
mov
jns
loope
in
jg
mov
xchg
and
incl
adc
xchg
cltd
psrld
adc
and
in
rolb
sub
popa
je
pop
mov
flds
cmp
or
cmovg
cwtl
ret
div
cmp
push
inc
js
xchg
in
or
xchg
imul
shrl
push
in
inc
imul
xchg
and
inc
iret
rorl
not
inc
je
aaa
jae
add
scas
add
scas
insl
mov
lret
adc
mov
xor
iret
push
cmc
pusha
inc
add
test
pop
xor
add
pop
adc
cmp
rep
insl
pop
push
shrl
sbbl
add
sub
cmc
insl
stos
cmpl
dec
push
clc
js
pop
pop
sub
jns
add
mov
rcrb
jp
xchg
xchg
lods
in
mov
dec
ss
dec
pop
mov
daa
pop
std
add
push
inc
or
or
xor
je
sbb
movsl
test
mov
lds
insb
adc
pop
xor
aam
popf
xor
jnp
clc
pop
sbb
cmp
jle
out
xchg
adc
push
int3
mov
daa
rclb
call
dec
or
mov
adc
push
push
sub
mov
dec
xorb
xlat
adc
add
fstl
push
mov
imulb
fs
add
ret
pop
movsl
pop
push
adc
in
and
rorl
push
xor
clc
push
cld
pop
push
mov
mov
cs
scas
fld
mov
push
sahf
add
imul
add
insl
or
inc
cmpl
aam
movsl
lea
lret
sub
cwtl
movsb
shll
mov
pop
lahf
jbe
in
adc
cltd
dec
stos
fmull
in
and
imul
aas
xchg
jmp
and
inc
push
fucomip
cld
push
or
mov
xor
xchg
fwait
aam
ljmp
adc
and
hlt
xor
outsl
fcmovnu
rep
mov
lret
mov
out
stos
add
mov
lea
es
in
mov
jnp
dec
mov
push
xchg
pop
aaa
cmp
push
push
cmpsb
push
xchg
imul
jl
insl
ret
mov
clc
or
aaa
das
jg
iret
push
pusha
and
ret
cwtl
mov
xor
push
push
fistpll
jl
add
inc
cmp
in
enter
mov
add
adc
adc
daa
cmp
xor
push
leave
mov
rcrb
adc
dec
push
shrb
sarb
movsb
lahf
pop
sub
rcrl
sarb
jns
xorl
push
out
ret
mov
push
mov
call
mov
bound
les
aas
das
mov
cmpsb
jnp
cmp
mov
mov
pop
sarb
repz
push
push
sti
adcb
pop
and
lods
inc
lods
lock
or
sub
ror
movl
adc
mov
imul
sarb
jg
in
mov
dec
pop
in
stos
lods
addr16
xchg
dec
cmp
sub
shl
scas
rorb
lea
nop
bound
ret
and
sbb
cli
dec
insb
notb
hlt
adc
cmp
and
int3
test
mov
lea
mov
jg
and
repnz
cmpsl
sbb
icebp
cld
movsb
mov
cmc
add
insb
add
iret
cmp
sbb
aam
in
cmp
xor
sub
stos
in
sahf
mov
cli
pop
inc
xchg
data16
inc
inc
pusha
outsb
lock
pop
mov
fs
adc
mov
aam
sbb
in
sbb
out
or
add
push
xor
inc
fnstcw
inc
sbb
shlb
daa
xor
stos
inc
sub
outsl
int3
and
and
inc
dec
popa
nop
xor
mov
jbe
or
out
sbb
lods
les
sbb
and
je
in
jle
mov
push
or
sti
or
rol
gs
in
test
pop
arpl
mov
stc
mov
sub
out
mov
push
movsb
xchg
push
movsl
xor
fisubrs
push
movd
sar
int3
mov
jae
push
lcall
dec
sbb
jno
je
xchg
cwtl
in
ljmp
adc
test
imul
push
lret
mov
in
test
bound
ficompl
insl
sbb
pop
out
repnz
pusha
lods
vpminsw
into
js
or
push
ficoms
pusha
into
add
jecxz
dec
rolb
leave
add
loopne
jnp
push
jl
cli
ficompl
adc
insl
outsb
push
and
test
jp
stc
pop
pop
loopne
jl
bound
rclb
or
sub
jle
stc
xchg
sub
mov
orl
ud1
adc
test
out
inc
jae
or
inc
test
aad
rorl
out
js
push
sbb
aaa
pushf
inc
pop
mov
cmpl
jg
mov
loope
adc
or
dec
pop
sti
fwait
jae,pt
and
inc
jns
or
mov
push
push
and
cmp
pop
ljmp
imul
fnsave
push
jp
push
dec
push
out
mov
les
xchg
mov
adc
movsl
mov
adc
mov
les
dec
mov
les
in
lcall
sub
pop
imul
xchg
mov
sti
test
push
fisubrs
and
les
xor
ret
clc
jecxz
lods
cmpsb
pop
cmp
int
cmp
fsubrs
pop
dec
icebp
push
fmuls
jo
or
mov
out
mov
lahf
out
int
pop
imul
mov
pop
hlt
imul
mov
add
mov
ret
xchg
sub
out
dec
jl
sbb
xchg
hlt
and
iret
xor
jne
outsl
cld
gs
aam
push
or
xor
jg
mov
lods
out
sti
bound
sbb
jno
dec
popa
pop
lea
adc
ja
sub
test
test
add
inc
shll
push
push
into
pop
lret
fucomi
mov
mov
or
add
sbb
aam
mov
inc
bound
jmp
pusha
es
dec
and
adc
cmp
adc
mov
sahf
mov
out
test
dec
divb
pop
aas
xor
lock
stos
loope
clc
outsb
outsl
js
and
fmuls
das
and
iret
pushf
mov
or
pusha
arpl
iret
xor
dec
add
xchg
add
gs
or
and
fistps
insl
xor
jbe
js
or
cmp
shlb
dec
mov
in
cmp
mov
pop
das
nop
mull
mov
adc
inc
inc
lahf
lahf
mov
test
add
sbb
inc
xchg
dec
repnz
dec
adc
int
cmp
outsl
jbe
mov
jns
shlb
mov
adc
addr16
inc
or
stos
push
mov
repnz
sub
mov
fidivrs
jb
add
pop
xchg
out
addr16
add
jle
arpl
adc
push
xchg
insl
nop
lods
popf
fisttpl
adc
push
arpl
push
or
lds
aas
dec
pinsrw
mov
out
mov
adc
gs
push
adc
sti
cmp
mov
push
fistl
jae
mov
fsubs
fimuls
push
cmpsb
push
dec
jle
pop
loope
ret
sbb
pop
cmpsl
fsts
lods
push
mov
add
sbb
mov
mov
out
dec
hlt
mov
push
sti
neg
sub
sub
shrl
add
jbe
mov
xchg
and
sbb
dec
outsb
adc
arpl
jno
mov
movsl
aam
jnp
sub
cmpsb
das
outsb
in
jl
scas
les
cld
pusha
pop
into
or
fmuls
aaa
adc
clc
or
dec
xor
pop
hlt
xchg
imulb
aam
les
pop
jb
imul
mov
enter
fcmovu
in
jl
mov
cmp
sub
out
ret
xchg
xchg
cld
push
loop
int
stmxcsr
hlt
ret
ror
daa
cmp
push
lahf
movsb
xor
cs
ret
xor
imul
test
sbb
sbb
push
stos
pop
sub
sub
rorb
mov
icebp
pop
push
push
mov
inc
inc
sti
push
jo
cmp
or
push
clc
mov
mov
fdivr
in
out
movsl
lods
fcoms
in
pop
sti
mov
dec
or
insl
popa
daa
adc
notb
inc
cs
pop
sbbb
push
mov
jmp
movsb
mov
js
lahf
ficomps
xor
push
cli
xor
or
add
lods
dec
jmp
out
fs
push
adc
popf
sbb
jae
add
add
pop
sarl
les
mov
push
dec
daa
fisttps
call
adc
andl
dec
movsb
ss
in
repz
adc
adc
lds
test
dec
sub
dec
pop
inc
mov
lret
add
xlat
mov
repz
negb
xchg
add
shll
or
adc
and
xchg
jl
fstps
sbb
shl
fdivs
enter
loop
aas
xor
push
sub
add
xchg
shll
stos
roll
xor
mov
mov
loopne
stos
xor
fsubl
fildll
mov
sti
setno
pop
pop
insb
or
mov
mov
out
mov
pop
negb
lods
pop
and
push
mov
fisubl
scas
xchg
mov
xlat
xchg
aas
sti
shl
inc
pop
dec
in
les
inc
shrl
jl
xchg
jge
inc
lods
pop
or
cmpsl
inc
cmc
leave
push
hlt
jp
sbb
push
and
sub
mov
into
int
xchg
pop
flds
adcl
mov
jmp
stos
fs
sbb
das
sub
clc
gs
insb
insb
test
and
andl
jl
xlat
lods
inc
xchg
mov
test
dec
or
punpcklwd
loope
adc
dec
roll
rol
testb
or
xchg
out
push
adc
xor
and
push
jne
ror
xor
pop
mov
mov
into
dec
pop
cs
xchg
add
daa
mov
aaa
jae
adc
movsb
mov
daa
mov
cmc
sbb
mov
mov
pop
popa
flds
popf
mov
aad
jae
dec
pop
aaa
lret
pop
sahf
jb
cwtl
dec
lds
mov
jmp
jp
outsl
bound
inc
jmp
insl
push
test
push
cmp
mov
mov
or
sub
sub
mov
movsl
pop
lea
mov
les
shll
ja
xor
gs
lahf
and
sbb
loop
add
imul
mov
ja
mov
repnz
repz
mov
ljmp
jb
or
and
ret
movsb
mov
jmp
ljmp
enter
xchg
mov
loopne
ret
std
jns
or
xor
mov
sbb
rolb
xlat
jne
jl
dec
addr16
fcmovne
jnp
into
sti
arpl
inc
mov
test
lock
test
and
cmp
cmp
dec
loope
mov
test
fdivrl
ss
cmc
pop
mov
pusha
xchg
xor
or
sbb
out
xor
test
or
fisubl
mov
cltd
rclb
sbb
pop
call
aas
sub
sbb
or
mov
add
test
xor
mov
int
or
and
dec
jbe
mov
cmpsw
icebp
jnp
adc
movsl
imul
xchg
dec
mov
pushf
mov
xchg
addl
add
iret
popf
into
push
sub
pop
sub
addr16
pop
aam
pop
and
jnp
xor
fwait
mov
add
jb
mov
enter
inc
mov
mov
faddp
push
pop
sbb
mul
popf
ljmp
mov
dec
xchg
fnstsw
nop
loope
pop
bound
xchg
or
mov
jae
inc
lret
xchg
mov
mov
xor
jbe
mov
in
cmc
inc
daa
rcr
lock
jbe
ficompl
out
subl
add
cmp
dec
fstpl
mov
xor
xchg
aaa
fsubs
leave
xchg
test
sub
sbbl
sbb
shl
ja
cli
movsb
insb
dec
sbb
rol
dec
int
fs
iret
mov
out
pop
fcmovne
mov
mov
aaa
or
addl
inc
push
mov
sbbb
jg
int
les
rcrl
out
push
mov
adc
fwait
dec
push
dec
cli
dec
dec
cmp
push
hlt
or
sbb
stos
cmp
sub
lods
pop
addl
xor
xchg
push
sub
push
aam
bound
push
daa
arpl
mov
js
dec
adc
cmc
mov
cwtl
push
inc
dec
dec
sbb
add
mov
shll
dec
cmc
mull
pop
push
adcl
repnz
lods
sti
adc
sbb
lret
js
kortestb
mov
insl
and
pop
cmp
xor
jle
push
xchg
pop
cmp
movsb
and
mov
fbstp
sbb
rcrb
pusha
cmc
jne
jle
ljmp
and
mov
pop
aas
jp
sahf
cmpsb
push
jl
mov
jne
lcall
mov
rorb
add
shrl
mov
inc
adc
jg
sbb
inc
ljmp
xlat
mov
mov
or
insl
aas
mov
jne
cmpsb
adc
fsts
lds
and
or
popl
jb
notl
xorl
mov
mov
xor
jmp
mov
mov
mov
in
out
cmpsb
push
push
scas
into
lods
dec
mov
sub
ficompl
imul
push
xor
inc
lock
inc
ficomps
dec
sub
addl
decb
push
ret
mov
mov
or
insb
mov
out
add
mov
enter
mov
lret
dec
mov
enter
mov
adc
in
lcall
add
pop
push
test
repz
mov
int
cltd
mov
jns
sub
mov
push
mov
push
dec
dec
pusha
movsl
hlt
fnstenv
dec
pop
icebp
xchg
psadbw
add
xchg
mov
loope
sti
or
je
adc
add
xchg
insl
xchg
pop
sub
bound
dec
lock
ret
jo
orl
mov
jmp
pop
or
lret
jg
arpl
jno
mov
adc
mov
scas
xor
xor
inc
pusha
sbb
cltd
loop
add
dec
dec
adc
mov
adc
clc
repnz
icebp
xchg
subb
inc
lcall
clc
pop
mov
adc
mov
js
mov
scas
shlb
nop
hlt
shrb
adc
xchg
call
push
dec
jge
cltd
or
lret
lods
lahf
and
mov
and
adcb
mov
or
in
mov
add
repnz
insb
or
pop
add
mov
adc
clc
adc
jecxz
add
xchg
jg
push
or
sbb
sbb
mov
test
jle
pop
out
inc
or
lea
cmpb
sti
fistl
shr
shlb
imull
cli
subw
cltd
xchg
loope
leave
inc
or
sarl
pop
xor
jmp
enter
lock
pop
cwtl
repz
push
fs
jne
imul
fwait
xor
cmpsb
push
mov
cltd
sbb
je
push
mov
and
out
lods
and
push
in
or
jl
jge
xorl
jmp
xor
insl
xor
lret
xor
sub
insb
fsubrs
jecxz
mov
inc
or
xchg
int
or
fisubrl
mov
adc
mov
std
test
xchg
cmpsb
inc
shr
jge
pusha
and
mov
loop
mov
mov
pop
insb
cmpl
pop
pop
mov
mov
jb
lahf
inc
ret
testl
es
ss
lcall
in
jg
push
pop
lahf
enter
loopne
push
dec
imul
add
scas
jbe
and
xchg
or
je
sahf
and
adc
mov
pop
dec
mov
sub
insl
stc
fists
cwtl
jecxz
pushf
xor
pop
pop
and
xchg
jmp
in
push
int3
xor
shlb
lds
iret
imul
aas
bound
ss
mov
and
sbb
mov
hlt
leave
sahf
pop
lock
out
mov
dec
push
bound
and
xchg
aam
sahf
loope
cli
jne
add
imul
mov
mov
cmp
dec
in
enter
adc
mov
jmp
lds
fcom
sub
xor
lahf
inc
arpl
mov
push
pop
add
jne
jl
add
fwait
mov
pop
icebp
mov
push
push
cli
pusha
cmc
xchg
push
sub
add
neg
or
aas
std
pop
cli
jb
mov
je
cmp
cmpsl
xchg
pop
imul
mov
repz
adc
mov
mov
push
adc
clc
push
insb
fimuls
xchg
push
fwait
sub
ret
cmp
xchg
mov
mov
xor
mov
ret
mov
divb
cmc
fcompl
test
mov
push
js
mul
fsubl
push
pop
mov
lods
inc
mov
std
outsl
cmp
mov
cmpsl
cmp
cld
fidivrs
test
test
xchg
mov
push
mov
mov
and
pushl
fwait
jle
test
sahf
mov
ror
mov
out
push
push
mov
fsubs
pop
mov
repz
cmpsl
clc
aam
mov
push
cwtl
dec
test
scas
add
jns
sub
jle
sbb
push
mov
sbb
inc
cmp
arpl
xchg
gs
add
aad
inc
xchg
mov
testb
mov
push
outsl
icebp
lea
mov
fbld
mov
cmpb
test
je
adc
sub
pop
xor
ss
jp
dec
pop
mov
out
insb
test
sub
pop
data16
or
jl
hlt
shll
stos
inc
and
add
dec
xor
mov
cmp
imul
dec
icebp
adc
data16
out
pusha
adc
das
pop
daa
icebp
sbb
sbb
shll
dec
dec
aad
cmp
stc
icebp
adc
je
mov
sub
jge
adc
sub
das
fdivs
mov
or
push
ja
call
decl
cmpl
sbb
movsl
lret
adc
add
mov
fwait
daa
stos
imul
add
pop
jb
add
cmp
xor
add
or
lahf
inc
test
in
js
pop
or
fisubl
mov
sbb
push
fldenv
pop
push
cmp
mov
mov
dec
cmc
insl
movsl
mov
jae
pop
push
mov
pushf
imul
mov
xchg
repnz
aas
pop
mov
clc
mov
daa
loope
mov
in
xchg
ja
sub
dec
sti
outsb
popf
fwait
pop
in
pop
lds
icebp
sbb
clc
mov
mov
gs
sbb
push
cwtl
jmp
fstpl
daa
pop
sub
rcrl
stos
jo
ja
repnz
and
push
jge
loope
out
ret
push
js
mov
fildl
mov
and
adc
push
inc
dec
test
adc
sub
adc
sbb
pmaxsw
and
add
mov
test
add
cmp
mov
mov
andb
cmp
addl
dec
sbb
cwtl
imul
xchg
les
movw
adc
jl
test
xchg
sbb
jmp
insl
jg
mov
jbe
aam
jle
mov
push
mov
popf
js
adcl
mov
lods
aaa
test
xchg
cli
xchg
xor
mov
mov
outsl
cltd
adc
cmp
or
adc
fs
arpl
lea
jmp
mov
mov
shr
notl
sbb
nop
dec
jbe
out
mov
cmp
ja
ficompl
inc
rep
lret
imul
push
ljmp
mov
pushf
sbb
xchg
adc
mov
mov
cmpsb
aad
sub
lcall
fmuls
mov
push
cli
popf
xchg
push
mov
jns
xor
sub
cmpsb
fdivp
test
pushf
daa
jnp
adc
and
or
or
ret
inc
loopne
ljmp
aaa
xchg
jecxz
mov
cmpsb
mov
push
add
xor
mov
cwtl
data16
test
enter
dec
mov
dec
sar
pop
and
idiv
lock
xchg
movsl
outsb
pop
adc
or
leave
and
adc
lock
pop
dec
fwait
xchg
push
es
cli
negb
push
xor
fucomi
sbb
pop
xchg
xor
clc
and
into
inc
pop
bound
cltd
mov
push
adc
xor
and
data16
jb
push
xchg
cmp
cmp
push
jne
into
ss
xchg
cwtl
push
popf
imull
cli
sub
stos
in
outsl
and
pop
pop
ret
jecxz
mov
sub
leave
dec
push
ret
imul
mov
jp
mov
and
jge
xchg
inc
mov
aad
insb
cltd
lahf
call
pop
or
xor
pushf
cmp
jne
inc
loopne
addr16
movsb
add
mov
or
ds
addr16
or
scas
adc
incl
scas
jp
inc
xlat
aad
push
out
ret
add
js
xrelease
bswap
ret
inc
jo
jno
sub
test
jmp
sbb
js
aas
lock
scas
dec
mov
or
xchg
mov
push
push
test
sbb
sub
das
cmp
xchg
mov
jmp
jl
pop
movsb
xor
and
shrb
pop
dec
and
pop
stos
jb
clc
pop
push
enter
sub
cmp
mov
sbb
mov
lret
adc
loope
dec
push
lret
cmpsb
fcoms
and
xchg
scas
mov
inc
int3
xchg
jg
jne
jmp
mov
rcll
call
xchg
rorl
or
lods
adc
lods
out
sub
aad
and
inc
rorl
imul
les
cltd
repz
repz
sbb
hlt
mov
mov
mov
or
sti
lea
and
test
cmp
mull
jg
add
data16
xchg
insb
xchg
in
scas
lret
adc
xchg
fs
cltd
ret
xchg
sbb
scas
xor
dec
mov
push
push
xchg
aam
push
pop
fdiv
and
adc
jmp
push
cli
es
xchg
popf
inc
call
jb
and
add
and
add
fsubs
xor
or
insb
imul
inc
idivb
mov
stc
sahf
mov
xor
shlb
add
inc
adc
stc
mov
int
loopne
fcmovbe
sub
mov
mov
fs
mov
push
adc
push
ds
add
test
enter
xlat
sbb
or
movsb
xchg
and
mov
leave
into
faddl
cli
inc
in
jae
pop
mov
outsb
ljmp
scas
pop
cmp
fwait
ss
sbb
jl
std
pop
jne
or
insb
bound
pushf
xor
push
lds
push
fldenv
jg
popa
popf
xor
out
adc
popf
rcrb
popa
xchg
mov
push
mov
mov
cwtl
fwait
icebp
xchg
jbe
xor
push
rcll
mov
lods
mov
shr
xchg
push
jecxz
lods
cmp
pop
pop
pop
addb
dec
test
mov
jge
sub
pop
jbe
xchg
sahf
inc
test
cmp
movsl
jb
fidivrs
push
aaa
or
adc
inc
cmp
ds
lret
cmc
cs
and
mov
imul
cli
mov
pop
mov
inc
cmp
sbb
xor
pop
mov
push
adc
inc
aaa
movsl
add
cli
jne
test
in
jge
fildl
pop
pop
rcll
cmp
icebp
push
clc
mov
cmpsb
pop
outsb
loop
fimull
sbbb
pop
sbb
push
ss
lea
pop
sub
out
jns
xor
mov
push
bound
sub
pop
stos
mov
aam
cwtl
dec
cltd
ja
rcrl
shlb
int
xchg
pop
jnp
adc
imul
inc
mov
and
lret
add
and
xor
adc
pop
pop
cmp
stos
lea
push
sub
push
xchg
dec
jne
sub
test
psrlw
add
xchg
jne
add
push
sub
in
push
aad
repnz
adc
mov
dec
jecxz
rcll
fisttps
arpl
dec
xor
test
pop
in
std
aad
popl
sti
test
mov
mov
add
xorb
fcoml
fimuls
test
sub
push
sub
inc
sub
cld
jns
nop
push
dec
sbb
sub
mov
incb
xchg
repz
fstp
aas
xchg
inc
jle
xor
fimuls
cmp
jo
shr
adc
inc
inc
xchg
cmpsb
stos
xor
mov
sbb
sub
dec
cmpsl
ret
fld
loopne
fwait
lea
mov
outsl
push
mov
movsb
sub
cmpsb
mov
jae
adc
sahf
cltd
scas
aaa
pushf
xor
jmp
lret
pusha
cmpsb
lea
adc
pop
in
hlt
lock
icebp
test
ljmp
js
nop
inc
sub
jp
lret
lods
jnp
out
leave
fmul
hlt
daa
adc
ss
jb
mov
call
icebp
push
mov
sbb
or
mov
sub
sar
or
adc
sbb
mov
lret
lock
out
dec
pop
daa
adc
mov
mov
in
pop
fwait
mov
jle
sti
loopne
repnz
mov
xor
mov
push
xchg
pop
add
xchg
jl
add
adc
sub
adc
shl
add
into
shl
outsb
pop
and
or
lock
mov
sti
nop
rorb
out
hlt
aad
push
or
jge
push
xchg
mov
aaa
cltd
stos
mov
clc
dec
and
js
sbb
sbb
sub
push
out
or
or
or
mov
jnp
in
sbb
jns,pt
mov
repz
das
daa
jb
push
shr
and
clc
loop
or
push
in
cmp
push
out
and
sbb
jmp
inc
pop
and
out
repz
or
inc
pushf
xor
xchg
dec
and
push
jl
xor
movsb
mov
push
movsb
xchg
xor
mov
mov
in
je
call
es
scas
push
orb
insl
lock
dec
jae
in
jge
fimull
or
mov
lods
cmpsb
adc
inc
cld
ss
cmpsl
and
pop
gs
shl
rcl
xchg
lahf
shrl
pop
pusha
xor
pop
xlat
subb
sahf
lods
out
sarb
mov
adc
mov
jge
xor
testl
dec
in
cmp
push
mov
das
fsubrl
mov
pusha
js
sbb
mov
stc
dec
lods
fcomi
jle
xadd
pushf
aad
mov
jmp
pop
insl
ret
and
andb
repnz
jbe
jns
enter
ljmp
mov
inc
in
nop
imul
fldenv
jmp
js
subb
lcall
loopne
pop
push
dec
ja
cwtl
dec
sbb
pushf
add
data16
mov
add
xor
je
fists
cmp
insl
mov
adc
rolb
das
fcmovbe
pop
stos
mov
repz
inc
rcll
dec
jae
mov
mov
stos
mov
and
inc
jbe
mov
cs
mov
push
mov
rcll
mov
in
jne
std
adc
leave
mov
lock
adc
add
dec
movl
xchg
lods
aad
pop
mov
dec
push
lds
das
adc
dec
lret
pop
jo
pop
or
mov
sub
sub
adc
pop
and
popf
pusha
sub
adc
fiaddl
sub
bound
aaa
push
add
rorb
icebp
in
aam
and
mov
push
jns
fcoms
std
xchg
call
mov
popa
adc
ret
loop
pop
in
fsubs
pminub
push
sub
xchg
pop
inc
dec
push
push
shll
mov
xor
add
ss
cmp
sbb
inc
push
cmc
fbld
sbb
push
adc
xchg
add
shlb
fs
orl
xchg
lods
cmp
inc
mov
mov
or
sbb
sti
pop
cmp
sub
add
fnstenv
rorl
xchg
mov
push
mov
movsb
jge
bound
dec
jns
std
xor
ss
xlat
jbe
lret
push
xchg
xlat
pop
test
mov
rclb
punpckldq
push
fistpl
imul
std
rcl
insl
jae
mov
xchg
ja
xlat
cmc
js
xor
notb
jnp
mov
adc
icebp
adc
decl
jae
call
mov
jp
mov
jno
adc
push
int
sarb
test
movsl
pop
movsb
mov
out
push
or
ffree
mov
xchg
mov
add
data16
cld
push
jbe
jge
aaa
jp
outsl
test
les
mov
or
jl
pusha
cmp
andl
mov
js
dec
push
mov
int3
inc
int3
jae
sbb
push
mov
pop
adc
sub
mov
ljmp
loopne
sub
mov
into
mov
test
lock
lahf
cmp
lock
wrmsr
lahf
inc
cmp
loop
mov
test
fadds
pushf
ret
push
sub
cmp
push
data16
jg
mov
push
sbb
jnp
daa
sahf
mov
pop
pushw
ficoms
andnps
mov
adc
jae
aad
lret
enter
and
xor
push
ss
aas
sbb
or
mov
jbe
inc
adc
cmp
sbb
addr16
or
adc
push
bound
jg
insl
and
mov
fadd
aam
loop
in
ficoms
rcrb
pop
inc
xchg
popf
adcl
fimull
dec
les
and
stc
subb
rcll
daa
xchg
jo
adc
mov
call
xchg
pop
jo
insl
in
jl
xchg
aad
push
push
addb
dec
das
insb
pop
inc
insl
lods
cltd
mov
pop
mov
push
xor
adc
mov
and
sub
fdivrl
adc
outsb
je
sub
das
lods
xor
push
sub
jne
fdivrs
repnz
jo
mov
sbb
lods
pop
mov
jge
pop
adc
push
xchg
xchg
lcall
ja
out
popf
pop
cltd
popf
ficomps
adc
cmp
call
sub
mov
iret
cmp
fwait
popl
in
inc
out
pop
mov
sbb
bound
sub
inc
push
push
stos
scas
jmp
out
cli
outsb
inc
add
in
add
xchg
and
das
lods
fildll
scas
stos
add
insl
data16
repnz
inc
pushf
and
stos
mov
and
mov
cmpsb
scas
cmp
hlt
mov
dec
fimull
and
xor
out
fistpl
leave
pop
sub
bound
xchg
mov
or
movsl
ja
pop
mov
xor
paddw
jno
ret
adc
rcrb
mov
xchg
cmp
outsl
sahf
mov
fstpt
add
nopl
lods
pop
xchg
push
lea
or
jl
and
adcb
nop
mov
push
xor
xchg
hlt
fisubrl
push
inc
ds
ds
xchg
stc
mov
cmc
jecxz
faddp
movsl
inc
push
loop
sbb
xor
stc
sub
aad
add
fiaddl
dec
call
imul
frstor
jo
sarl
scas
mov
and
xchg
xchg
mov
out
orb
pop
stos
jmp
xchg
jle
inc
dec
mov
movsl
aas
popa
mov
sbb
fadd
lret
sub
sahf
repnz
mov
mov
das
fstl
loopne
call
mov
pushf
inc
imul
sbb
xor
scas
rclb
and
sub
xchg
pop
pop
mov
vpcomw
scas
cmpsb
cmp
xchg
jae
mov
xor
loop
mov
cli
call
cs
clc
testb
pop
nop
jmp
add
xor
popf
cmp
sbbl
pop
sbb
call
mov
dec
fisubs
sub
push
and
outsb
les
pop
cli
stos
dec
pop
xor
fcmovu
cmp
jb
push
pop
clc
push
push
cld
sbb
stos
jo
cmp
addr16
ret
into
jnp
jne
jo
arpl
fcom
call
int
out
outsl
dec
mov
fs
fdivl
cmpsl
cmc
xchg
push
adc
sbb
loopne
jo
iret
or
cmpl
rcll
in
mov
xor
loope
nop
sub
pop
mov
cmp
push
leave
jo
outsb
repnz
sub
cli
lahf
fmull
pop
mov
mov
lods
ret
inc
xchg
adc
clc
lret
add
divl
sub
stc
cltd
inc
mov
and
lods
movsb
and
mov
popf
stos
in
mov
and
stc
cld
jp
add
xor
call
sarl
sbb
shll
xchg
sbb
sub
mov
push
fs
pop
push
pusha
mov
lahf
inc
les
mov
cmp
out
nop
xchg
into
xchg
and
cld
or
arpl
outsb
jg
add
jp
xchg
mov
test
inc
repnz
ja
mov
xchg
cmovns
mov
fstps
xchg
es
decl
inc
jg
sbb
lea
xchg
hlt
leave
fwait
enter
clc
fstpl
mov
ret
mov
mov
pop
mov
int
out
repnz
imul
cmp
and
jbe
jo
mov
cmpsl
jle
adc
fnstsw
mov
nop
mov
hlt
xor
mov
lahf
adc
inc
or
cli
mov
dec
iret
sahf
sbb
pop
movb
dec
inc
stos
mov
inc
or
aas
pop
shll
pop
inc
sub
mov
lahf
movsb
adc
decl
inc
stos
pushf
cmp
das
std
pop
and
cmp
mov
mov
pop
dec
xchg
shl
fcmovne
jnp
and
call
mov
or
leave
push
and
xchg
fsubrl
mov
mov
outsl
sub
jl
pop
icebp
nop
adc
stos
push
jg
push
xchg
gs
pop
out
stos
mov
sbb
fnsave
cmp
sub
lock
iret
scas
xchg
nop
sub
sub
xchg
cmp
mov
adc
jmp
adc
or
jmp
daa
pusha
mov
mov
and
out
dec
imul
cmp
or
inc
inc
pop
and
rcrl
pushf
out
out
bound
dec
pushf
in
cmpsl
cmp
andb
int
pop
filds
jp
jmp
jp
shrb
je
lret
push
or
inc
out
dec
xchg
sti
jne
aam
mov
outsl
sub
pop
mov
sbb
fldt
test
cmc
and
fdivs
insb
sarb
divl
mov
enter
jecxz
jne
imul
mov
lea
ficomps
sbb
ss
flds
cmp
fdivr
lods
fsub
xchg
cmc
jns
and
jl
jno
int
test
outsl
lods
ja
jmp
mov
lods
push
insl
adc
jl
inc
push
sti
dec
cmp
mov
sti
lods
add
leave
pusha
test
sub
mov
push
incb
les
les
and
fwait
dec
jmp
sbb
rclb
or
sub
xchg
cmp
add
inc
pop
shlb
popa
inc
loopne
adc
or
xchg
push
inc
inc
push
les
imul
ljmp
out
fs
xor
push
pop
mov
sub
jle
cmpsl
pop
mov
mov
stc
lret
scas
xchg
je
cmp
dec
test
sbb
inc
sbb
stc
and
mov
sti
dec
add
jb
movsl
lock
adc
mov
arpl
dec
xor
cmp
jmp
jae
mov
jl
adc
push
adc
jae
or
jb
and
imul
add
pop
mov
sbb
jae
push
xlat
adc
divb
mov
xchg
cmpsb
lods
or
adc
nop
pop
mov
mov
js
jnp
sbb
xchg
popf
mull
lods
jns
int
test
xchg
subl
outsl
sbb
cmpsl
mov
jns
mov
xchg
movsb
or
popa
mov
cwtl
add
rcll
sub
push
repz
cmc
mov
adcb
in
fisttpl
loopne
adc
xor
inc
imul
out
mov
inc
dec
pop
dec
cwtl
cmpsl
jns
outsb
js
pushf
xor
dec
testb
xchg
pushf
in
and
adc
dec
xchg
add
sbb
lret
jg
les
cltd
or
pusha
add
pop
mov
xchg
arpl
xadd
into
popa
bound
adc
mov
dec
add
scas
cs
add
jae
ljmp
xchg
cmpsb
outsl
out
ss
js
mov
addr16
ja
mov
sbb
loop
movb
dec
sub
ja
xorl
mov
into
mov
xchg
dec
shlb
ljmp
pop
push
test
sbbl
sub
inc
out
or
adc
pop
clc
sbb
lock
outsb
sbb
vunpckhps
fwait
jb
int3
lea
fwait
and
pop
fistpl
add
dec
push
push
inc
outsb
or
mulb
push
pop
daa
ja
cmpsl
push
stc
cmp
sbb
jecxz
mov
push
sbb
jge
gs
pop
inc
lods
xchg
pop
dec
cmp
imul
imul
rolb
ja
inc
dec
ficoml
lods
mov
ss
int
inc
push
push
insl
xchg
push
stos
pop
adc
xchg
pop
and
jnp
fs
sahf
inc
sti
lods
fsubl
subl
push
incl
inc
sbb
ror
dec
xor
mov
cmp
adc
shlb
dec
test
mov
push
jecxz
cmp
in
test
or
push
enter
and
add
js
xor
mov
pop
cmp
loop
filds
sub
mov
out
mov
cmp
sti
pop
cwtl
popl
cmp
outsl
std
pop
and
push
pop
mov
in
add
cmpsl
inc
outsl
scas
push
inc
test
shll
cmp
sarl
xchg
insl
dec
xorl
jg
dec
cmpb
out
push
cmp
mov
jo
call
mov
ss
sti
or
xor
stos
dec
pop
sub
mov
std
testb
ja
cmp
lods
divl
jmp
dec
out
cmp
fisubl
push
jbe
idivb
adc
dec
push
inc
iret
les
loop
gs
insl
or
rcl
xor
dec
pusha
fimull
push
shll
pop
pop
jle
mov
lret
jne
jge
pop
mulb
push
add
iret
daa
cltd
mov
xor
insb
mov
jbe
jecxz
inc
rorl
jo
icebp
hlt
push
jle
lahf
js
push
int
adc
or
test
xchg
mov
aaa
mov
fs
gs
repnz
gs
mov
cmp
lods
test
lcall
fwait
popf
hlt
mov
mov
test
mov
add
cld
pusha
enter
inc
jns
cwtl
nop
xchg
jle
and
mov
sbb
in
mov
pushf
lret
dec
cmpsb
sbb
data16
aad
jbe
in
movsb
push
push
in
xor
jb
aaa
xor
cltd
aad
add
dec
and
sbb
push
xchg
jno
cmp
push
lods
sbb
xor
adc
mov
out
addr16
call
aaa
xchg
add
cmc
sti
movsl
clc
inc
jge
mov
testb
shrl
sub
loopne
jl
hlt
cmp
or
lret
ds
cmpl
lret
fwait
mov
outsb
stc
mov
aas
jbe
sub
mov
xchg
aas
lcall
inc
cmp
fwait
mov
mov
repz
mov
test
lock
push
cmp
std
push
cmp
sub
push
cmp
mov
rcll
out
jge
insb
jae
ds
fiaddl
jge
inc
testb
popf
mov
jmp
add
movsb
push
daa
js
mov
mov
aaa
frstor
fs
shll
ljmp
aas
cmp
push
out
les
test
fwait
stc
or
insb
shll
loop
sub
cmpb
xor
lods
xor
fdivrs
call
sub
inc
xchg
and
in
jge
xor
orl
notb
daa
sub
and
loope
inc
dec
pop
pushl
dec
rcl
push
mov
pop
mov
add
icebp
add
mov
jecxz
adc
shrb
outsl
insb
push
fistl
ss
aas
cmp
dec
and
gs
outsl
xchg
in
cwtl
in
inc
mov
lret
mov
outsb
addr16
imul
pop
sub
pop
add
ss
push
mov
cmpsl
xchg
js
mov
in
mov
call
lea
push
cs
push
rorb
jnp
fwait
dec
inc
ret
nop
add
pop
and
jle
and
jg
mov
add
data16
cs
shlb
rolb
xchg
push
mov
adc
mov
xchg
insl
mov
sub
aas
test
push
adc
popa
add
sbb
xor
xchg
xor
dec
int
or
inc
xchg
cmp
jecxz
cmc
jb
outsb
clc
cs
shll
jae
mov
jae
push
push
lock
dec
movsb
jns
jae
xchg
int3
aad
adc
leave
pop
outsb
pop
jae
xchg
xor
add
or
sbb
movsl
jp
add
stc
sbb
push
add
mov
push
pop
inc
and
scas
jbe
cli
int3
jmp
cmp
push
inc
nop
and
ret
scas
cmpsb
mov
data16
outsl
jle
xchg
mov
sbb
lea
mov
mov
mov
pop
mov
popa
mov
divl
push
mulb
jge
lea
call
and
inc
push
mov
mov
fisubl
sub
cmp
negb
adc
jae
lret
adc
push
test
mov
js
sub
xchg
mov
xchg
hlt
fistps
xchg
out
cs
pop
fldz
cmc
mov
xchg
add
mov
in
jae
push
insl
pop
lods
add
dec
dec
add
out
cmp
sbb
repz
sahf
pusha
push
movups
xchg
or
inc
scas
out
push
stos
popa
mov
mov
cmp
inc
add
fldcw
outsb
sub
dec
cmp
adc
lcall
stos
sbb
in
test
into
xor
rcll
push
hlt
jmp
jnp
lea
mov
fdivr
inc
out
mov
clc
mov
scas
test
fwait
movsl
int
cmpsb
es
aas
movsb
pushf
push
sub
push
adc
ja
mov
and
loop
out
ds
loop
add
ljmp
adc
test
sbb
pop
adc
xchg
inc
xor
jb
lock
sbb
and
and
xchg
adc
nop
jnp
cmp
popa
or
inc
arpl
adc
sub
pushf
and
pusha
push
mov
dec
pop
mov
xor
rcll
pop
add
loopne
jmp
fsubl
sub
shlb
je
jl
lahf
jle
pop
xchg
mov
jnp
repz
bound
rcr
add
xchg
popa
pmullw
adc
clc
negl
and
mov
inc
fwait
mov
out
mov
test
xor
pop
in
call
sahf
sbb
xlat
cmp
push
lds
mov
jno
inc
ds
mov
jne
fnstenv
stc
movsb
cmc
add
mov
faddl
push
jnp
sbb
mov
cmp
icebp
jne
stc
jmp
lods
push
jns
in
int
mov
in
push
add
loope
jl
push
dec
inc
aas
push
mov
iret
popa
adc
add
mov
jle
push
cld
lret
es
loope
pop
hlt
push
fcmovu
mov
mov
sbb
push
add
cltd
sub
xchg
fwait
cmpsl
int3
shr
push
xchg
stc
fcomps
sub
sbb
subl
pop
mov
sarb
push
xor
sbb
popl
clc
shll
mov
jmp
fidivl
js
push
mov
cmpsl
xor
fmulp
icebp
ret
and
dec
or
jge
and
and
mov
adc
cltd
daa
mov
cmp
subps
cmc
mov
adc
aam
sbb
sub
cmp
shlb
clc
iret
xchg
sti
mov
setle
loopne
mov
push
dec
mov
out
jge
xchg
fldt
addr16
push
pop
inc
les
int3
icebp
jb
jb
test
mov
sbb
and
dec
push
mov
push
outsl
pop
push
out
lret
test
pop
inc
push
adc
dec
pop
repnz
pop
sbb
cmp
orl
bnd
mov
out
cmp
add
pop
arpl
test
pop
test
cmp
push
outsl
adc
xor
mov
not
popa
push
in
lock
pop
dec
ret
lret
shll
adc
lcall
sbb
test
in
xchg
fsubrl
call
sbb
push
imul
push
subl
fnsave
adc
stc
mov
jge
js
outsl
adc
out
pause
mov
aas
pop
imul
cmp
mov
inc
mov
cmpsl
xor
sahf
gs
pop
movsl
stos
cs
adc
aam
lods
mov
jns
add
fisubl
nop
sub
sbb
xchg
cmp
inc
cmpsb
sbb
std
push
andl
dec
hlt
push
in
orl
cmp
and
inc
or
cmp
cs
push
push
popf
sub
mov
cli
orl
ljmp
inc
inc
jmp
test
rclb
stos
sub
sbb
sbb
pop
mov
push
jg
jne
mov
scas
das
mov
mov
jge
jl
dec
cmc
data16
push
cmc
je
imul
push
das
mov
jmp
push
pop
mov
add
xchg
mov
push
hlt
pop
add
jbe
jb
adc
mov
fisubrs
in
push
insb
nop
insb
push
push
rorb
push
dec
sbb
mov
xorl
test
push
cs
xchg
mov
jmp
add
insb
sub
lret
loope
rcr
mov
ja
int
mov
fcoms
inc
loop
jb
xchg
xorl
int3
pop
frstor
pop
movsl
sahf
enter
and
ret
pusha
push
test
xchg
pushf
fs
nop
push
out
sti
stos
es
add
sbb
mov
insl
jns
icebp
xor
fistpll
arpl
inc
xor
movsb
mov
pop
std
mov
cmp
sbb
clc
and
cmp
movsl
pushf
outsb
push
cwtl
xor
lcall
xchg
fcmovb
fistps
es
sub
add
adc
mov
pop
int3
outsl
outsb
or
pop
add
fbstp
lret
xchg
loopne
push
mov
cmp
add
stos
dec
or
mov
sub
pop
adc
lret
fwait
add
mov
aad
xor
pop
es
lcall
xchg
lcall
xchg
jb
test
add
jmp
insl
adc
ss
out
shll
idivb
andl
in
testl
xchg
outsb
cmp
imul
movzwl
xor
sahf
mov
cltd
scas
push
lds
test
arpl
sub
mov
pop
or
loop
data16
std
aaa
sub
xchg
gs
incl
sahf
jp
add
jp
jnp
lods
add
jl
jb
sub
xor
cmp
mov
adc
jno
daa
push
test
push
pusha
call
xchg
add
loope
scas
iret
add
pushf
xor
fmull
sbb
ljmp
mov
in
sub
loope
jno
fmuls
pop
in
cli
out
mov
lahf
jp
pop
and
int
jl
lcall
test
mov
in
sbb
inc
and
int
mov
mov
xchg
addl
lods
dec
inc
sub
mov
jg
aad
push
adc
cmc
add
jg
mov
leave
aam
jg
in
add
mov
scas
fldcw
xor
push
mov
sarl
gs
faddl
int3
sub
mov
aaa
aas
out
jno
and
and
leave
insl
push
dec
nop
mov
sahf
or
pop
daa
testb
mov
xchg
mov
xchg
adc
xchg
jg
mov
fcompl
push
lcall
fsubl
adc
inc
movsb
hlt
inc
adc
lock
pushf
jp
fcompl
xor
sahf
xchg
cmp
pop
pushf
xchg
push
push
arpl
js
push
or
aam
xor
inc
or
push
clc
pop
dec
xchg
shrb
std
sub
inc
xor
les
fmuls
mov
jmp
push
cmpb
cltd
sub
jnp
push
and
xchg
sbb
nop
mov
scas
hlt
jmp
sahf
std
inc
push
mov
popa
stos
fidivrs
aad
inc
stos
test
loop
jb
dec
movsb
and
mov
mov
jl
jnp
insl
cmp
insb
test
shrl
inc
lock
repnz
xor
mov
outsl
pusha
mov
xchg
popf
add
xor
xor
mov
xchg
stc
pop
mov
arpl
in
in
mov
in
scas
cpuid
into
scas
dec
movb
adc
shr
xor
fisttps
jb
mov
insb
loopne
pop
dec
fimuls
rep
cmp
sbb
mov
sbb
xchg
arpl
and
sbb
cmc
stc
sbb
pop
inc
outsl
bound
pop
mov
pop
pushf
cs
mov
not
jmp
xor
xor
pop
movsl
shll
cmp
fcoms
inc
xchg
repz
cmp
and
sbbl
mov
lahf
xchg
cmpsb
dec
ss
lea
test
xchg
aas
cmp
out
daa
adc
add
sbb
jl
mov
lods
shl
ss
inc
cmp
hlt
movsb
das
xchg
jl
jmp
sub
aam
popf
mov
push
ficomps
dec
sub
outsb
rcpps
movsb
mov
pop
inc
mov
cmp
or
cmp
ja
subl
adc
dec
and
es
dec
xor
dec
xchg
dec
testb
mov
push
std
xor
or
in
sbb
dec
xchg
pop
call
sbb
test
push
aas
lea
loope
jg
popa
push
ret
lret
jno
xchg
movaps
jbe
std
insl
das
daa
adc
push
test
sti
addr16
and
push
fbstp
mov
imull
add
sbb
in
sub
pop
das
out
mov
lcall
push
mov
push
les
adc
pushf
push
dec
aam
lcall
jae
ljmp
out
inc
ficoml
sub
hlt
std
outsl
jno
mov
aam
in
push
ss
les
imull
mov
xlat
pop
mov
dec
pusha
pop
inc
pop
xchg
mov
stc
mov
or
jo
mov
outsl
mov
ss
into
hlt
shlb
lods
cmp
adc
shr
daa
xor
fcmovb
add
cmpsb
add
std
aam
icebp
rclb
lcall
mov
aaa
popa
inc
fs
fcmove
push
arpl
xchg
jns
stc
jl
inc
cmc
mov
outsl
adc
xor
xchg
xor
pop
str
mov
xor
fstl
int3
imul
stos
test
fisubrl
faddl
out
pop
add
inc
sub
adc
je
jnp
pop
popf
xchg
xchg
xor
imul
xchg
int3
and
stos
popa
and
or
xchg
jge
sub
xchg
subb
gs
loope
idivl
movsl
das
or
or
mov
xchg
and
cmpsb
int
xchg
andl
fnstenv
fcomps
stos
xchg
ret
dec
mov
fwait
or
cmp
lahf
jno
movsl
sub
pop
test
or
dec
sahf
mov
sbb
or
pop
jecxz
inc
in
mov
xchg
mov
push
xchg
outsl
cmp
lret
cltd
fcmovbe
pop
enter
loope
mov
ss
pusha
sub
dec
ret
out
adc
outsl
mov
inc
in
addr16
enter
mov
lea
adc
cmp
dec
add
pop
inc
add
pop
rcl
pusha
add
scas
cmp
mov
fsubr
idivl
inc
outsb
adc
or
aaa
rol
aad
sbb
out
outsl
mov
roll
cmp
or
icebp
xchg
inc
int3
mov
popf
mov
lods
mov
gs
jae
pop
add
and
adcb
arpl
push
pop
or
shl
nop
mov
sahf
mov
aas
adc
lock
xor
lock
sub
mov
cmpsl
outsb
xchg
xchg
aad
jbe
pop
xor
cmpsl
pop
pop
pop
jp
loop
scas
fisttpll
or
sub
mov
xchg
pop
pushf
setl
mov
test
push
adc
mov
int3
or
int
clc
xchg
mov
imul
pop
es
les
jns
push
frstor
mov
dec
mov
fistpl
mov
sub
mov
mov
flds
push
sarl
jo
sbb
mov
rolb
sub
mov
shrb
dec
push
or
mov
imul
out
and
mov
and
je
movsb
and
or
mov
sbb
daa
addb
es
push
mov
sbb
jl
stos
dec
pop
out
push
cld
je
dec
ret
xchg
in
cmpsb
clc
xlat
jmp
cli
sbb
xor
sub
and
inc
cmpsb
push
shrl
and
repnz
and
dec
fisttpll
mov
repnz
mov
xorb
inc
inc
imul
or
and
xchg
cltd
rcrl
mov
sar
cmp
lds
pop
fcmovne
cmp
push
aad
call
sub
popf
xor
stc
pop
stos
popf
outsl
repnz
mov
loope
pop
push
test
addr16
loop
gs
cs
adc
mov
out
inc
pop
jno
mov
sub
std
daa
aas
inc
int
or
imul
and
repnz
testb
mov
mov
scas
cmp
pop
add
jle
fidivrs
push
sub
test
mov
ljmp
and
pop
push
sbb
stos
cmc
mov
bound
es
out
pushf
mov
cmp
cmp
pop
push
and
sbb
xchg
pop
ret
jbe
ds
loope
xchg
mov
sub
and
in
mov
ja
divb
mov
ss
icebp
xchg
sub
cmp
rcr
icebp
mov
and
inc
mov
movsl
mov
cli
push
pop
movsb
adc
out
push
mov
xlat
dec
and
aas
and
cmp
jp
push
imul
in
mov
cwtl
inc
lea
loope
mov
dec
sahf
ljmp
fucom
inc
loope
je
repz
fwait
inc
outsb
shrb
push
mov
pop
pop
ja
aas
daa
mov
xchg
out
imul
push
stc
sub
mov
jno
xchg
in
pop
ret
add
mov
inc
xor
dec
loope
mov
push
out
sbb
andb
and
imul
das
dec
cmp
or
xchg
cmp
xchg
adc
sbb
sarl
jnp
adc
repnz
add
pop
cmc
mov
jle
les
xor
xchg
cltd
int3
pop
cmpsl
js
dec
aam
cld
lcall
ljmp
mov
xor
and
inc
xlat
cmpsb
out
push
jl
sarb
out
ss
stos
adc
and
xor
es
test
iret
and
fnstcw
pushf
adc
cs
out
xor
inc
and
aam
sub
fdiv
imul
rdpmc
mov
xchg
jo
movsl
in
sbb
or
pop
out
fs
xlat
push
cmpl
fnstsw
push
cmp
jb
rcrb
fstp
push
jle
loop
jno
jmp
inc
jo
negl
push
testw
outsl
pop
sahf
dec
arpl
mov
cmpb
push
insb
cmp
add
push
xchg
pop
mov
roll
das
xchg
in
add
adc
adc
bound
out
pop
pop
mov
fs
lea
std
cmp
repz
aam
mov
dec
clc
bound
aam
push
loop
pop
lret
lret
fcoml
int
cmp
xchg
lds
xchg
fstpt
test
adc
popf
push
push
push
test
sahf
sub
insb
stos
das
rorl
push
ja
fwait
andb
push
pop
adc
lcall
test
jge
lret
pop
pop
sbb
int
push
add
push
add
pop
mov
data16
mov
sbb
xor
lret
xlat
rcr
jle
cmc
cwtl
jg
icebp
loope
testl
or
fcoms
add
js
add
jb
add
cld
call
mov
fistl
push
jo
cld
les
loopne
arpl
in
dec
and
fwait
stos
mov
sbb
adc
sti
in
sahf
sbb
mov
push
add
jg
pop
push
cld
push
sbb
mov
lods
cmp
jge
dec
fsubrl
jno
outsl
dec
dec
xlat
icebp
inc
jecxz
jne
test
cmc
sub
adc
imul
neg
repnz
cmp
xchg
aaa
pop
mull
mov
cs
ja
aad
xor
cltd
or
lods
stc
cs
std
cmp
ss
data16
cltd
jle
sbb
orl
add
out
and
pushf
pop
dec
and
movsb
sbb
pop
pop
adc
jbe
xor
cli
jecxz
daa
clc
mov
xor
dec
and
es
xchg
jae
test
mov
jmp
push
outsb
mov
cs
shrl
fucomip
in
insl
and
xchg
xlat
adc
es
aad
mov
out
xchg
xor
icebp
xor
mov
pop
inc
lret
andl
mov
dec
hlt
xor
inc
std
push
mov
ret
and
inc
js
into
push
xlat
and
sbb
or
fmull
xchg
insb
and
in
jle
adc
xor
pop
sub
mov
std
cmp
sbb
sub
test
jmp
mov
in
aas
rcrl
cli
mov
jb
js
test
in
dec
rcrb
test
pop
fisttpl
insb
insl
cmc
lcall
dec
add
or
cmpsb
movsb
je
fbld
dec
mov
fisttpll
mov
loopne
enter
push
pop
ljmp
push
push
sub
pop
addr16
mov
sub
and
mov
insb
and
shl
scas
jnp
ret
scas
jg
iret
ds
mov
lret
mov
xor
adc
cs
jbe
dec
push
jg
dec
mov
aaa
imul
mov
inc
push
sbb
repz
mov
and
and
dec
xchg
jb
repz
pop
in
insb
xor
lea
stc
sbb
aaa
pop
sbb
lock
push
dec
mov
leave
sub
sub
fnstcw
dec
mov
in
das
insb
cmp
or
nop
cltd
mov
lds
mov
incb
or
or
jle
mov
pop
jge
mov
mov
jae
add
sub
pop
out
les
enter
inc
das
vaddsd
adc
cmp
movsb
aaa
push
mov
in
cli
lock
pusha
aaa
pushf
lods
stos
cmp
push
mov
xor
mov
pop
push
test
dec
adc
jne
mov
popf
fwait
cmp
movsl
push
push
cmp
or
cmc
outsl
pop
xor
fs
cmp
jbe
sti
mov
out
sub
and
mov
inc
ror
clc
add
fisubrl
test
dec
push
cmp
loopne
or
int
xchg
stos
sub
repnz
mov
lods
jecxz
inc
hlt
dec
das
and
pop
subb
dec
cld
xor
and
mov
xor
push
jae
push
leave
jge
aad
inc
clc
fists
pop
inc
nop
jg
inc
jno
push
inc
mov
jns
jecxz
push
jo
aaa
push
or
adc
jns
rolb
jl
mov
in
and
mov
lahf
mov
push
loope
or
popa
xchg
pop
inc
outsb
and
mov
lcall
push
mov
jo
inc
jmp
repz
cmc
mov
add
jmp
push
popa
mov
test
add
add
testb
lock
and
stos
adc
pop
movsb
out
dec
dec
cmp
cmpsl
lods
rorl
lods
fndisi(8087
imul
xchg
adc
xor
sar
outsl
pop
sbb
sbb
scas
aad
cmp
or
test
pop
sbb
hlt
cmpsb
mov
lods
je
ja
jp
jp
cltd
xor
pop
mov
inc
lret
cli
jg
pop
and
imul
lea
testl
jbe
mov
sub
adc
loopne
aam
movsb
out
int3
call
fxch
dec
aas
lods
inc
fimull
cmp
pop
pusha
push
or
and
xchg
std
jns
adc
lods
dec
ss
or
insl
sbb
subl
and
push
out
das
sbb
push
es
test
sub
pop
sbb
mov
das
jno
xor
xlat
cld
push
clc
dec
shl
rorb
cmp
lds
pushf
lea
mov
or
iret
out
dec
jl
dec
push
pusha
test
cwtl
mov
iret
ret
out
movsl
pop
andl
jo
aad
push
cmpsl
std
aam
repnz
sahf
gs
sbb
mov
jp
sub
or
adc
push
mov
rcr
iret
leave
pop
sbb
lods
push
shll
test
jae
divl
jne
shrb
push
repz
out
adc
jnp
xor
loop
inc
sbb
pop
mov
into
jne
stc
push
lret
ja
gs
test
mov
cmp
in
lods
js
nop
push
jo
cwtl
and
adc
shrb
push
sub
push
out
mov
icebp
stc
jo
sub
sub
jns
sbb
add
les
or
xchg
pop
sbb
inc
sbb
fistl
sub
push
jp
sub
aam
and
mov
lahf
insl
andb
neg
shl
adc
in
iret
sub
xor
cmp
in
pop
xchg
cltd
dec
shlb
jb
jnp
jns
enter
daa
mov
stos
in
leave
mov
movsb
es
mov
mov
push
pop
in
or
dec
inc
mov
xchg
test
int
pop
das
and
mov
enter
and
movsl
jne
test
push
test
dec
test
add
adc
fisttpll
movsl
pushf
les
xchg
and
fbstp
loop
stos
call
mov
push
test
ss
stc
cld
xchg
js
movsl
test
and
int3
and
mov
cmpsl
ret
mov
mov
loop
dec
cmp
adc
test
add
mov
movsl
pop
pop
lahf
loope
test
adc
imul
adcb
test
fstl
jecxz
add
ss
stc
jle
jnp
test
adc
inc
ss
addr16
xchg
lcall
inc
and
jg
nop
fsts
jg
cmpsl
adc
mov
test
cltd
loop
popf
fisubl
insl
push
cmp
pop
add
mov
aad
out
fsubs
pop
in
arpl
popa
sub
sbb
mov
bound
fadd
ljmp
movsb
loop
fstps
stos
aas
mov
test
pop
or
xchg
mov
inc
add
movsb
icebp
dec
sub
sbb
cmp
xor
and
cld
movsb
mov
aaa
sub
mov
clc
jp
adc
or
ljmp
mov
push
and
mov
jb
imul
push
scas
leave
mov
dec
jle
mov
pop
call
inc
test
inc
mov
jne
mov
mov
outsb
push
data16
fs
mov
aas
in
cmc
add
and
stos
jle
xchg
sbb
shr
scas
inc
or
lret
outsb
or
in
sarl
dec
shrl
jmp
sub
pop
cmpsb
xor
pop
test
es
jmp
lods
ret
shll
sub
jae
in
jno
into
pop
or
stos
and
lahf
push
sarb
dec
into
lret
stc
out
cli
cmpsl
push
icebp
loop
movsl
pop
inc
cmp
inc
xor
sbb
cmp
sbb
popa
mov
push
std
cmp
les
imul
sahf
insl
aas
sub
sbb
jb
data16
push
movsb
jl
mov
ljmp
pop
nop
mov
mov
loopne
popa
push
xor
inc
lret
gs
cmp
jl
lds
shll
call
adc
sbb
cmc
jle
pop
inc
nop
jle
out
cli
clc
xchg
scas
dec
pop
dec
cltd
or
fnstsw
int
sahf
insl
mov
mov
subb
insl
mov
enter
add
outsb
xor
movsl
cmp
das
popf
aas
lret
je
hlt
adc
in
jnp
jl
lret
mov
lret
dec
mov
pop
icebp
xor
mov
out
cmp
fcoms
hlt
ds
xchg
insb
inc
rcr
call
cwtl
or
mov
mov
jp
mov
xchg
xchg
lret
test
ret
push
bnd
loop
fiaddl
cs
pop
jg
idiv
rolb
bswap
or
pop
inc
jp
fnstenv
repnz
jb
push
inc
or
test
pop
add
out
hlt
mov
mov
jnp
and
pop
xchg
mov
or
xchg
pop
lods
rolb
dec
cli
addr16
insl
flds
ret
xor
and
and
call
or
xchg
mov
lret
imul
pusha
push
xchg
je
movsb
dec
cmp
shrb
cmp
jg
and
test
xchg
bound
shll
cmpsb
push
xchg
ja
sbb
xor
imul
push
cmc
je
add
andl
cmpsb
jle
sahf
cmpsb
into
xchg
adc
adc
decl
popa
lods
test
lods
sahf
pushf
mov
mov
int
fisttps
ljmp
xchg
in
add
scas
aaa
loope
push
ret
dec
fsubrl
sbb
idivl
sbb
divb
xchg
sbb
xchg
mov
mov
adc
inc
sub
xchg
xchg
push
xor
jbe
and
cmp
mul
or
cmpsb
rolb
jns
add
and
in
lds
icebp
shll
sub
xchg
dec
je
popa
and
inc
movsw
mov
scas
jno
xchg
fcom
imul
push
xchg
jl
clc
sbb
mov
vaddsubps
icebp
dec
sbb
push
push
test
ja
loopne
or
dec
inc
inc
push
dec
in
cmp
cltd
popf
loop
or
inc
add
and
mov
insl
add
xchg
repnz
rorb
cmpsl
jmp
pop
pop
cmpl
mov
cmc
lcall
sub
adcb
sub
in
repz
divl
jnp
pusha
repz
outsb
fdivl
lahf
std
jb
lds
mov
sub
mov
lea
xchg
ret
loopne
arpl
leave
rcrl
cmpsl
enter
dec
xor
inc
test
push
aas
or
insl
dec
dec
pop
lahf
addr16
sbb
inc
sub
out
out
fwait
pop
jbe
jbe
jle
data16
inc
inc
xchg
xorl
pop
cmp
xlat
test
mov
jmp
xchg
add
sarl
jmp
mov
or
pusha
rcr
push
fnsave
shlb
inc
xchg
sahf
dec
stos
and
fisttps
adc
dec
dec
cmp
pop
sarl
push
popf
cwtl
cmpsl
lods
cld
push
xor
or
push
daa
dec
mov
aam
js
adc
inc
mov
loop
or
enter
cmc
sbb
fildll
xor
or
xor
dec
dec
dec
dec
rcrb
jns
das
dec
mov
dec
cmpb
pop
sti
sti
faddl
fxam
inc
ds
shr
or
arpl
sahf
mov
jae
cmpl
test
subl
xchg
or
mov
aam
pop
xor
sbb
sbb
arpl
roll
in
mov
hlt
jecxz
jno
stc
jge
cmpsl
dec
sbb
add
pushf
or
sub
push
cmp
ss
inc
ds
push
out
inc
xchg
stos
lret
femms
mov
inc
sbb
shlb
or
fcoml
cmp
dec
or
inc
aam
inc
jmp
adc
or
adc
imul
add
mov
stos
xorl
lods
push
xchg
jecxz
xor
jge
jb
mov
mov
lods
pop
loope
into
sbb
cmp
stc
pop
mov
and
sbb
xchg
fwait
cmp
scas
jnp
add
cmp
xchg
out
mov
cwtl
jmp
mov
mov
jg
lcall
inc
dec
or
clc
cli
xlat
adc
jmp
xchg
cmpsl
pop
pop
out
imul
inc
aaa
and
inc
add
iret
repz
das
lea
jo
mov
xor
inc
push
insl
das
dec
pop
pop
imul
lcall
imul
scas
sub
push
sub
adc
xchg
fldenv
out
xor
pop
jns
jbe
jle
aas
ret
mov
scas
into
lock
adc
jbe
aam
cwtl
add
jg
in
sbb
fs
and
xor
push
mov
fldcw
lds
out
repz
mov
cwtl
add
shlb
in
xor
and
sbb
jno
sub
in
or
sub
mov
push
inc
lret
push
sub
or
mov
add
xor
dec
loopne
add
jecxz
lea
or
icebp
pop
lods
imul
xor
mov
es
xor
loopne
inc
pop
jmp
jns
lods
pop
dec
nop
dec
and
dec
ljmp
outsb
jg
fistl
rcl
es
insb
mul
mov
and
pop
rol
or
and
xchg
lret
push
adc
sub
popa
sub
sub
push
push
ret
xchg
cmc
lcall
fmul
push
cmpsl
jo
je
mov
mov
nop
icebp
add
or
pop
mov
mov
pop
stos
jmp
xchg
es
pop
repz
push
ljmp
jo
add
xchg
pop
push
jmp
pop
roll
mov
orl
mov
test
and
in
pop
jns
mov
adc
and
xchg
loope
push
mov
push
fstpl
insb
enter
shll
ja
in
nop
and
dec
popa
jmp
lods
sub
adc
daa
mov
sub
mov
mov
pop
lds
ficoml
cmpsl
and
lock
cmp
inc
repz
mov
fwait
mov
pop
in
jno
mov
ret
je
call
or
iret
add
je
hlt
mov
loopne
mov
sbb
and
je
mov
mov
cltd
rcll
and
pushf
movsb
repz
pop
rorb
push
push
cmc
dec
push
adc
cld
movsl
fdivrl
pop
xor
out
popf
pop
inc
sub
dec
mov
sbb
scas
ds
and
dec
and
mov
pusha
and
inc
dec
mov
divb
test
xchg
mov
mov
sti
ficomps
lods
dec
movsl
adc
lret
adc
test
mov
int3
mov
cmp
cltd
xchg
jbe
test
icebp
sbbb
xchg
and
inc
das
inc
mov
adc
lock
dec
mov
xor
out
mull
ror
iret
sti
bound
test
dec
xchg
shll
jl
sbb
sub
xor
push
andb
lret
push
mov
pop
xchg
pushf
idivb
mov
lcall
filds
mov
and
jmpw
add
mov
in
stos
fsubrl
movsl
lcall
rcll
push
movsb
sub
fisttps
pushf
ljmp
jp
into
or
jne
push
and
sub
jg,pt
outsb
add
push
inc
ror
lods
popf
test
xor
sub
cmpsl
adc
fsubrs
cmc
pusha
cs
mov
into
jmp
lods
in
sahf
mov
cmp
stc
inc
out
mov
lods
das
sbb
or
mov
jbe
pop
and
fs
fildl
pop
std
aad
inc
hlt
clc
es
leave
mov
or
gs
and
cmp
imul
push
add
into
add
icebp
popf
jb
popf
lods
in
adc
incl
leave
sub
dec
fucomi
push
cmpsl
xchg
iret
clc
out
rolb
cli
and
xor
subl
add
shlb
pop
movsb
lahf
outsl
mov
dec
xchg
pop
xchg
aad
gs
jg
inc
mov
aaa
push
in
sahf
cmp
sub
and
in
xor
cmp
mov
xchg
push
loop
push
xor
cwtl
cmp
jno
popa
ret
into
inc
lret
das
inc
sbb
pop
jns
lea
divb
sbb
lods
xchg
les
mov
call
mulb
scas
sarb
gs
fistpll
pusha
std
lret
sbb
test
and
and
fnstcw
adc
jmp
sbb
mov
dec
pop
xlat
add
icebp
es
lods
dec
or
enter
jmp
sti
cmpsl
and
sbb
in
cmp
nop
add
jmp
fcoms
mov
dec
aam
mov
jns
add
lds
pop
pushf
adc
aaa
fwait
ja
sub
dec
cmp
jbe
pop
sbb
call
aaa
xchg
xchg
popa
notb
pop
aam
std
stc
mov
pusha
sbb
jbe
rcrl
pop
cmpsl
dec
mov
in
and
movd
pop
in
xchg
jb
rolb
mov
pop
out
imul
enter
inc
cmp
jecxz
imul
out
adcl
imul
jle
add
inc
stos
int3
enter
inc
pop
sub
xchg
inc
pop
decb
xor
in
sub
pop
jg
nop
push
out
xchg
imul
sbb
xor
xorb
pop
pop
das
movsb
xchg
scas
outsb
or
lods
inc
pop
shlb
test
aad
inc
or
jo
fsubr
jge
aas
imul
mov
and
xchg
add
mov
dec
inc
jns
scas
xchg
mov
scas
imul
xor
cmpsl
cmp
test
inc
or
mov
push
and
shrb
out
jae
sub
sbb
jnp
ljmp
fwait
repnz
adc
xchg
xchg
dec
pusha
sbb
sbb
loope
movsl
testb
pop
leave
pop
cli
ret
in
inc
ljmp
dec
test
enter
sti
jecxz
je
test
fcmovnu
inc
push
lods
push
inc
mov
mov
test
test
xor
fmul
sub
test
jge
cwtl
push
imul
jno
stos
jecxz
or
and
jnp
mov
mov
aaa
sub
xchg
test
mov
pop
sub
pop
sbb
sub
jecxz
cs
shrl
mov
leave
iret
mov
test
inc
lahf
dec
bound
stos
xchg
jl
aad
scas
in
pop
lea
iret
out
aad
xchg
test
cltd
shlb
fsincos
dec
pop
call
dec
fistl
jmp
pop
loopne
bsr
pop
ret
ljmp
mov
push
flds
mov
mov
xchg
sub
aaa
pop
lds
sub
cmc
repnz
cmpsb
sub
cmp
out
dec
test
inc
add
mov
into
mov
xor
popf
push
insl
dec
mov
jl
inc
push
test
pop
test
xchg
test
inc
ljmp
shll
push
lds
sub
ret
mov
and
lds
lea
nop
sbb
cmpsl
mov
cmpsb
pop
dec
push
in
jo
sahf
sbb
jecxz
divl
pop
pushf
ret
sbb
iret
in
decl
and
cmpsl
push
add
ficompl
lock
in
or
std
in
mov
lret
jbe
mov
sahf
shlb
loopne
repnz
inc
sbb
jnp
outsb
dec
lea
jp
inc
or
or
add
jnp
lods
adc
outsl
or
stos
fildl
dec
add
pushf
jp
gs
test
add
pusha
fsubrl
jns
fsubs
mov
inc
adc
add
push
icebp
mov
jns
mov
sbb
int3
mov
jmp
mov
push
inc
sbb
add
je
jae
outsb
and
sbbb
fsubl
cli
or
add
pop
cmp
dec
push
sti
fldcw
adc
adc
xor
insw
aad
inc
lock
gs
pop
sbb
mov
mov
jne
mov
lcall
sub
and
inc
and
lret
lock
dec
pop
lock
cmp
mov
mov
dec
mov
inc
cmp
mov
jge
or
stos
push
pusha
arpl
and
mov
sbbb
sub
or
imul
jb
out
pop
addr16
loope
pop
ds
or
cmp
das
jb
popf
sbb
orb
xor
jle
pop
insl
or
ror
fucom
pop
repnz
pushf
jp
xor
cmp
in
xlat
or
div
std
adc
icebp
jle
ficomps
sbb
ss
fdivrp
push
test
mov
push
mov
lds
jmp
jae
gs
mov
lret
xor
daa
aam
push
pop
push
ljmp
iret
cmp
rorb
add
js
pop
jnp
push
jo
mov
mov
mov
scas
jg
mov
inc
dec
outsb
xor
inc
jo
outsb
add
mov
jnp
leave
sti
cmp
xchg
xor
jae
outsl
leave
rorl
or
mov
rorl
test
les
push
loopne
in
dec
clc
int3
notb
pop
mov
sub
add
inc
shrl
push
lret
aas
inc
mov
cmp
roll
cmc
mov
aas
jg
xor
loope
test
inc
jmp
imul
jo
test
jb
ret
iret
mov
push
test
inc
pop
add
in
jecxz
mov
daa
outsb
faddl
mov
std
cmc
jecxz
lret
or
mov
and
mov
jmp
dec
pushf
pop
cmp
into
or
stos
inc
jmp
add
add
fisttpll
and
into
jno
sub
bound
xchg
sub
aad
mov
pop
popa
fnop
push
push
sub
sar
shll
and
dec
popl
in
call
dec
hlt
push
test
mov
stos
jecxz
repnz
pop
in
jns
inc
and
xchg
outsb
mov
fisttpl
mov
testl
das
cmpsb
fcomp
aaa
dec
push
cmp
inc
icebp
jle
fisttpll
sti
ficomps
or
leave
lea
jl
data16
sub
int3
add
add
std
jo
idivb
sti
mov
add
lock
sbb
imul
add
xor
mov
inc
aas
adc
sahf
ret
pop
sub
andb
or
sbb
test
fucomip
decb
jb
push
cltd
cmp
mov
out
push
lcall
movsl
mov
dec
dec
rcll
incb
cmp
mov
sti
call
xchg
inc
outsb
jae
xor
ret
enter
push
insb
adc
pop
js
xor
fsubrs
xchg
sub
into
ja
hlt
pop
jp
and
scas
sub
ror
cmp
sub
icebp
in
xchg
repz
notl
xor
xchg
cmp
test
into
pop
insl
xor
nop
pop
jno
xor
fisubrs
int3
inc
mov
xchg
push
sarb
add
adc
mov
arpl
jb
lret
stc
mov
rcl
es
xchg
mov
in
lret
pop
bound
jne
mov
or
and
lret
xchg
roll
insb
cmpsl
cmp
insb
sub
enter
push
imul
dec
mov
das
add
inc
dec
into
pop
dec
push
push
add
mov
adc
push
mov
aad
in
pop
insl
or
sub
in
mov
dec
mov
xchg
sub
cmp
xchg
addl
jle
nop
mov
xchg
aad
outsb
inc
ja
dec
cmp
sub
les
mov
cltd
cmp
jmp
popa
lds
or
fcomp
mov
flds
dec
xchg
mov
popa
lods
or
scas
adc
call
mov
mov
pusha
xor
decb
sub
lret
sahf
pop
jo
test
cs
adc
push
mov
mov
ljmp
xchg
push
adc
stos
pop
pop
mov
jns
mov
inc
xchg
fdivr
cmpb
push
fcoms
mov
mov
dec
dec
mov
gs
cmpsb
inc
jb
sbb
aad
jno
js
cmp
addr16
xor
outsl
rolb
mov
and
rcpps
or
or
js
push
sbb
fiaddl
xchg
adc
addl
mov
cltd
fwait
inc
test
and
pop
jp
adc
aaa
mov
pop
fs
insl
imul
dec
ljmp
mov
idivb
cmc
iret
jns
aam
cmpl
fnstenv
outsb
in
stc
mov
or
lods
shll
adc
hlt
pop
shll
call
dec
push
lods
pusha
fdivl
pop
xor
dec
sbb
inc
es
aam
push
flds
pop
sahf
sbb
imul
in
adc
imul
sub
popf
sub
xlat
fldcw
jl
xor
pop
sbb
stos
mov
push
or
icebp
js
lret
shrb
cmp
aaa
mov
and
cmpsb
mov
pop
sti
or
lea
stos
cltd
outsb
rcr
jge
or
add
xchg
jmp
and
xor
btc
jnp
out
outsb
sub
xor
orl
loopne
mov
cmpsb
cmc
jle
dec
cmp
rcrl
fwait
stc
in
mov
inc
and
or
push
xchg
pop
add
fcomp
nop
xchg
ret
inc
test
ljmp
out
xor
hlt
sti
fst
lahf
mov
pop
lods
jg
bound
orl
in
xchg
test
mov
push
xchg
imul
xor
cmp
lock
inc
sub
int3
int
push
loop
pop
dec
mov
sbb
ja
pop
sub
inc
arpl
and
inc
sbb
ja
cs
repnz
fs
shl
sbb
in
push
add
inc
shll
push
out
and
js
xchg
aad
lods
sub
jecxz
loope
int
lcall
mov
je
addb
lret
les
ret
int3
je
les
mov
inc
xor
cmc
pop
cmpsb
push
imul
adc
lods
xchg
loop
inc
les
xlat
jo
dec
cltd
mov
fistl
jp
inc
adc
add
jge
sbb
push
out
or
pop
mov
lcall
mov
mov
jae
mov
jle
stos
jp
mov
and
push
fcmovbe
push
dec
loope
fildl
fsubrl
inc
popa
outsb
bswap
ss
mov
add
mov
or
lret
and
xchg
ficomps
xchg
out
mov
fst
xchg
sbb
rolb
ljmp
cwtl
sbb
mov
mov
pop
cmp
xor
movsl
pop
jno
shll
outsb
mov
rcr
sti
popa
or
aas
mov
in
out
enter
xchg
add
movsb
push
or
or
rolb
jl
or
adc
cld
leave
outsb
mov
in
mov
inc
mov
aam
inc
stc
out
push
adc
cmpsb
adc
mov
mov
shl
dec
ljmp
mov
jp
and
nop
jae
xchg
jbe
fidivrs
sbb
sbb
mov
add
enter
cmovae
stos
jns
sub
add
fcmove
lcall
testb
fld
add
lock
call
imul
xor
and
inc
andl
push
lds
fimull
pushw
pop
not
hlt
mov
clc
fisttpll
sahf
es
test
les
jae
mov
mov
mov
aas
fbld
stos
stos
aad
cli
nop
shlb
xor
lret
push
mov
lods
jmp
jp
pop
xchg
into
jmp
mov
dec
aad
test
mov
push
adc
insl
mov
push
mov
adc
cmpsl
adc
cmpsl
testl
iret
xorb
sbb
out
jecxz
mov
idivb
push
mov
enter
mov
sub
outsl
and
sti
or
jp
jmp
dec
fnstsw
and
xor
pop
mov
mov
stos
lea
and
adc
dec
pop
mov
out
ds
test
fcomps
dec
pushf
popf
mov
inc
sbb
fs
dec
cmpl
pop
pop
scas
nop
push
or
lea
clc
sub
jl
mov
aam
imul
rcl
icebp
xor
bswap
and
mov
add
clc
shl
mov
inc
xchg
mov
xchg
pop
adc
sub
fnstcw
mov
mov
in
frstor
push
std
add
push
jne
and
dec
push
rcl
xor
fdivrl
fs
arpl
adc
xchg
dec
aam
add
fnstsw
ss
sbb
jae
mov
dec
inc
int
dec
pop
ss
xchg
icebp
or
xor
mov
test
mov
add
cmp
or
mov
adc
leave
xchg
xlat
inc
dec
in
push
mov
or
scas
imul
pop
loope
mov
xchg
clc
dec
gs
dec
out
push
mov
inc
add
andl
and
stos
xchg
mov
mov
jle
cmp
jne
xchg
iret
adc
push
push
mov
shll
mov
mov
aam
aas
fistps
int
mov
sbb
adc
loopne
push
mov
jno
cmp
pop
inc
add
inc
mov
sbb
cli
sarb
xor
leave
add
pop
push
leave
cmp
adc
cli
adc
mov
outsl
push
push
ja
lret
add
adc
xchg
push
push
pop
rcll
jg
add
scas
push
push
inc
repz
inc
xchg
insl
add
rcrl
pop
push
jecxz
lea
mov
pop
insl
sub
sahf
frndint
testl
mov
jnp
or
outsb
dec
lcall
pop
scas
dec
xchg
mov
push
jmp
push
and
adc
and
lahf
adc
in
cwtl
outsl
and
inc
and
add
pop
adc
decl
decb
ret
sbb
ds
sub
mov
icebp
int
push
sbb
adc
stos
jae
mov
adc
xor
fiaddl
mov
test
adc
into
mov
orb
pop
lcall
daa
inc
sarb
mov
loopne
dec
sub
ffree
jp
test
aad
loopne
aaa
in
outsl
ret
int
jg
push
stc
xlat
pop
sbb
xchg
mov
xor
push
adc
mov
or
aas
inc
rcll
mov
dec
xchg
cmp
addr16
cmp
outsb
add
add
test
dec
ret
notb
sbb
daa
ret
xor
orb
je
ja
scas
xchg
or
leave
sub
cmc
pop
inc
cs
or
daa
aam
inc
addr16
mov
adc
jne
fs
sbb
cmpb
mov
push
fistpll
lcall
dec
or
lds
in
sbb
and
sub
xor
repz
addl
adc
pop
pop
lods
sub
and
and
js
arpl
add
push
imul
push
je
and
sub
mov
repnz
std
call
push
adc
out
fnstsw
ss
pop
cmp
aaa
lods
outsb
test
enter
sbb
push
jmp
stc
cs
scas
add
icebp
fld
mov
nop
mov
jne
mov
cli
add
sti
xchg
cld
jnp
dec
stc
out
pop
ds
das
lahf
add
sub
sub
xor
cmp
outsb
mov
rolb
out
sbb
inc
cmp
push
xchg
mov
xorps
stos
push
fs
ret
leave
pop
mov
xor
mov
xchg
jmp
add
sub
stos
push
ficomps
testl
jecxz
adc
scas
cli
xchg
push
in
imul
adc
push
or
movsl
lods
fisttpll
dec
xlat
push
jmp
mov
xchg
rcrb
js
test
add
adc
in
lcall
sbb
dec
and
adc
sub
xor
ljmp
sub
dec
jmp
fdecstp
cmp
rsqrtps
repnz
cltd
test
jo
push
sub
xlat
popf
popl
pop
jmp
cmp
orl
push
mov
dec
push
fs
outsl
and
mov
xchg
mov
imul
or
daa
call
addr16
xchg
dec
daa
ret
or
xor
sub
sbb
and
push
sbb
pop
sub
sarb
push
mov
loopne
inc
icebp
inc
out
adc
insl
pop
fists
push
fadd
adc
dec
xlat
ret
dec
mov
inc
pop
js
lahf
or
pop
icebp
sbb
cmp
jbe
ljmp
inc
lret
add
mov
jp
push
or
mov
cld
jno
sbb
pop
mov
mov
inc
pop
xchg
hlt
shrb
xchg
ret
negb
mov
outsb
adc
jns
pusha
icebp
pop
gs
push
xchg
xchg
scas
fcoms
push
mov
dec
movb
cli
sub
xor
das
or
in
pop
inc
es
and
add
ror
mov
push
clc
fwait
int
icebp
pop
cs
test
jp
popf
jmp
cmp
adc
mov
pop
inc
cmc
lea
mov
mulb
fmull
cmc
push
bnd
pop
or
mov
dec
rcr
scas
pop
ret
enter
adc
imul
aas
scas
sarl
push
pop
test
or
mov
jge
adc
xchg
out
cmpsb
adc
add
gs
push
pop
icebp
xor
cmp
jl
in
iret
adc
xor
inc
loopne
cmp
into
inc
bound
cltd
popa
xor
dec
mov
out
push
sahf
aas
xor
mov
inc
dec
adc
insb
or
call
xchg
push
pop
rcrb
gs
cmp
jno
or
pop
xor
int3
les
dec
movsl
dec
jns
movsb
push
sbb
lods
fildll
mov
push
pop
mov
fcoml
add
nop
into
lret
and
inc
push
or
leave
dec
icebp
fwait
sub
and
xchg
ret
hlt
cmp
data16
icebp
pop
pop
pop
nop
clc
repz
outsl
movsb
cmp
shr
fldl
in
bound
mov
jno
mov
lea
ret
xor
jg
mov
cmp
ja
mov
push
jecxz
emms
lds
xchg
xor
add
imul
push
roll
sti
jl
xchg
cmp
lods
sti
and
sbb
fisttps
push
iret
sbb
dec
test
aaa
xor
jmp
mov
movsl
in
xchg
jbe
inc
mov
ljmp
adc
xor
mov
mov
addb
push
jns
add
mov
ffreep
sbb
and
jns
fidivl
bound
pusha
mov
cwtl
push
fstpl
fstpt
pop
push
inc
dec
pop
stos
in
xor
rol
sub
idivl
sahf
mov
negl
or
testl
rorb
test
mov
cwtl
xchg
outsl
imul
aam
push
clc
sbb
jmp
mov
sbb
imul
inc
fistl
mov
sbb
dec
fdivr
inc
inc
push
icebp
or
jns
pop
cmpsl
sbb
push
inc
jb
pop
aam
loope
loopne
movsl
fstl
out
jle
and
jb
add
je
bound
sub
sub
nop
xchg
sbb
jp
cmp
ss
icebp
rcrb
mov
roll
rcl
cld
jle
pop
xor
sub
mov
jbe
push
sub
cmp
pop
aaa
jmp
and
ljmp
nop
mov
inc
push
dec
fildl
and
dec
hlt
fidivrs
repz
inc
xchg
push
fcompl
xchg
add
add
cmp
aad
jnp
adc
push
xchg
pushf
stos
adc
xchg
aad
rol
pop
mov
dec
popa
sarb
inc
add
ljmp
cmp
mov
push
mov
stos
cmpsl
scas
xchg
or
pop
nop
test
inc
aam
iret
fs
sahf
aam
iret
pop
add
rdtsc
fsubp
cltd
xor
outsl
or
adcb
jle
adc
shlb
fisttpl
adc
filds
push
dec
arpl
adc
push
sub
jns
jb
inc
mov
stos
jle
push
jmp
das
xchg
adc
mov
or
div
fldt
or
nop
or
pushf
negl
sub
and
inc
jle
int3
xchg
sbb
xchg
inc
mov
dec
xchg
popl
dec
stc
dec
add
push
add
xchg
adc
fisubrl
movsb
push
fs
stos
fcomp
mov
and
push
add
push
xchg
lahf
addr16
jbe
shrb
adc
movsb
dec
int3
cli
pop
lea
fmuls
cs
por
inc
lds
xor
fidivrl
fildl
call
inc
dec
aaa
sbb
sub
cmp
inc
and
mov
adc
inc
pop
imul
bound
mov
pop
jecxz
jb
xchg
adc
enter
dec
rol
repz
test
pushf
inc
sahf
in
push
xchg
dec
aam
orl
mov
or
lret
in
shrl
and
and
xlat
outsb
fisttpl
jnp
or
push
sti
push
in
shrl
xchg
sub
jecxz
sub
push
xchg
cmp
gs
in
pop
std
shll
mov
loopne
push
lret
and
sbb
outsb
imul
dec
xor
sbb
add
cs
pop
enter
cltd
and
inc
pusha
and
pop
add
orb
mov
xchg
adc
imul
test
aad
pop
enter
xchg
mov
add
sahf
jmp
dec
mov
test
sub
xchg
les
sahf
insb
mov
push
je
rolb
xor
xchg
test
xchg
push
insl
inc
jb
pop
adc
and
out
in
roll
mov
push
mov
pop
icebp
mov
dec
adc
dec
and
xchg
in
fwait
push
scas
subl
ljmp
jmp
cmp
dec
xchg
inc
mov
lods
add
pop
sbb
movsl
ss
call
dec
and
or
mov
xor
dec
movsb
aaa
out
sbb
push
mov
pop
push
pop
pop
inc
nop
int3
out
sbb
add
shl
push
ret
sbb
sub
ret
ds
jo
in
hlt
mov
repnz
xorl
mov
leavew
lret
ret
and
jnp
les
int3
cs
mov
sbb
ret
int3
push
push
xor
xchg
xor
pop
xor
hlt
fmull
push
push
jg
xor
dec
hlt
jmp
inc
sti
imul
cmc
fisttpl
xlat
xor
sti
arpl
cmpsl
push
jmp
jle
cmp
lods
jp
adc
in
xchg
pop
nop
push
bound
cli
xchg
lods
dec
lock
cmp
sahf
pop
imul
mov
mov
sbb
loop
movsl
cli
push
inc
xor
into
adc
iret
scas
jno
movsb
in
or
cli
call
sbb
orb
jmp
into
jbe
js
fsubrl
fsub
lret
jp
in
push
loopne
mov
adc
pop
icebp
popf
stos
push
pushf
stc
sub
or
mov
jmp
int3
push
addr16
xlat
das
out
adc
add
push
cltd
fwait
inc
sub
inc
and
jb
movsb
xor
inc
shll
shrl
inc
int
xchg
mov
push
repz
fwait
shr
mov
mov
enter
aad
push
aas
dec
mov
cmp
mov
sahf
mov
cmp
inc
mov
cwtl
stos
mov
leave
divl
and
test
addr16
push
ret
xor
test
mov
xchg
test
xchg
outsl
aad
add
xchg
test
add
ljmp
push
aad
nop
fimull
iret
gs
lea
mov
cmp
and
in
jg
pop
sub
imul
cmp
int3
pushf
pop
scas
cli
mov
sbb
and
int3
or
inc
mov
cmp
shl
aam
ret
and
dec
mov
test
inc
xor
daa
inc
es
shlb
cwtl
xor
or
jge
ljmp
mov
decb
add
fs
out
push
sub
in
repnz
adc
dec
pop
xor
es
mov
cmc
nop
call
rorl
cmp
or
out
dec
xchg
and
dec
pop
sbb
pop
inc
pop
shll
xchg
in
and
pop
dec
or
xchg
mov
sbb
imul
or
test
stos
fisubl
cltd
cli
dec
bound
cmp
out
cmp
inc
push
jle
fsubl
pop
sub
cmp
in
ja
aaa
lods
shll
test
xchg
sbb
imul
jg
cmp
push
push
xchg
sub
fistpll
add
cmp
add
mov
iret
sub
shrb
fwait
es
fistpl
pushl
mov
mov
sbb
and
or
xor
xor
cli
js
les
xchg
push
int3
cmpb
int
enter
rorb
aad
mov
rcrl
push
in
inc
rcll
pop
movsl
adc
sahf
int
mov
ds
imul
je
cmc
jno
test
dec
and
mov
sti
repnz
dec
out
pop
js
cmp
or
mov
dec
dec
stc
sub
add
cmp
jmp
jl
or
lret
negl
repnz
fs
dec
repnz
xchg
sarl
push
ds
aam
pop
iret
mov
imul
test
frstor
lods
dec
int3
js
xor
mov
mov
or
pop
loop
das
mov
xchg
add
jge
pushf
call
add
iret
jecxz
lcall
mov
mov
lret
adc
icebp
ret
pushf
ret
leave
rcl
mov
js
div
mov
pop
inc
je
jbe
xor
iret
clc
rolb
ret
jo
add
jns
imul
repnz
test
fsubrl
mov
push
sub
push
imul
mull
loope
mov
mov
or
jl
cmp
fildl
call
xlat
xchg
jle
jo
mov
shr
push
inc
mov
jbe
or
inc
call
mov
dec
testb
jg
lea
nop
push
andl
xor
ret
sub
sub
mov
xor
nop
aaa
pop
jmp
shl
daa
loope
clc
fnstenv
leave
scas
leave
add
pop
push
std
pop
sti
pop
lcall
cld
outsl
lock
ds
imul
add
jecxz
or
mov
xor
imul
xchg
and
mov
es
inc
mov
push
cmp
repz
roll
clc
fwait
stos
test
lea
sub
test
push
and
sbb
shr
addb
and
repz
test
pop
jnp
imul
or
test
xor
in
xor
sbb
popf
or
and
por
insb
adc
outsl
sub
testb
addr16
dec
xchg
repnz
inc
cmp
sbb
jle
sbb
push
pusha
jae
pop
decl
dec
lods
bound
stos
loopne
push
push
daa
xchg
in
fnclex
clc
aad
imul
fsts
aam
jmp
cvtps2pi
dec
adc
addr16
in
pusha
outsl
je
inc
jge
call
mov
xchg
adc
leave
int3
add
jns
shrb
push
loop
push
pop
and
pop
mov
and
pop
inc
jb
aad
mov
jb
je
stos
insl
mov
rcl
test
scas
xchg
cmc
js
les
push
mov
push
lock
push
popa
jge
je
xor
sbb
das
fdivrl
adc
in
iret
and
adc
ret
imull
lods
out
arpl
mov
jne
sbb
aad
jp
xor
orl
std
xor
jp
stos
out
sub
push
xchg
jge
inc
cltd
xchg
mov
mov
das
sbb
cmp
aas
ljmp
jmp
mov
fldenv
arpl
pop
cld
lahf
mov
push
insl
adc
pop
sahf
ljmp
lret
push
and
and
and
cmp
pop
pop
les
data16
into
ret
jecxz
mov
and
clc
outsl
lret
pop
jbe
adc
int3
mov
movb
xchg
jbe
ljmp
dec
sbb
in
pushf
fstl
inc
sub
mov
test
psubb
xor
inc
inc
loope
dec
and
ljmp
mov
and
or
mov
pop
adc
push
add
loope
imul
call
mov
mov
push
mov
inc
bound
jne
lret
repnz
mov
mov
outsl
or
jbe
sbb
jo
or
adc
cmp
and
lock
inc
in
pop
xorb
and
sub
out
call
sti
jb
jge
mov
pop
xorl
dec
sub
or
inc
loop
fcmovne
lock
movb
cmp
dec
jne
data16
test
sub
sbb
lock
inc
push
pop
pop
adc
xor
mov
xorl
outsb
mov
arpl
stos
pop
fs
daa
outsl
test
dec
xchg
or
mov
out
es
pop
dec
aas
add
inc
cmp
jns
xchg
mov
inc
les
cmc
dec
pop
pop
pusha
adc
xchg
cmp
stos
pop
ljmp
sbb
mov
push
in
pop
add
push
sub
inc
adc
ljmp
je
ds
in
cs
push
push
dec
dec
jno
ret
inc
or
dec
jp
imul
or
inc
add
into
push
mov
adc
and
pop
mov
ss
jp
mov
cmp
cli
push
jbe
inc
repz
test
cmp
xor
into
dec
es
rorl
cld
cli
dec
sub
shlb
sbb
insl
adc
hlt
jmp
push
shll
call
clc
push
repz
mov
push
sbb
push
shll
dec
xchg
jb
sub
inc
or
and
push
mov
dec
mov
jl
pushf
xor
add
stos
mov
add
xchg
ret
sub
mov
lcall
mov
sbb
movsl
out
xchg
dec
dec
pop
mov
out
push
fldt
mov
push
stos
jno
pusha
stc
mov
das
mov
ss
add
or
lret
lods
jb
fisubs
aam
fstpl
mov
out
xlat
dec
leave
sub
xchg
jmp
loope
fldl
rclb
hlt
inc
xchg
jmp
lahf
push
mov
andb
xchg
add
cld
jmp
pop
and
cs
aad
movsb
ss
fcomps
fidivrs
mov
mov
andb
cmpsl
cmp
cli
ss
cmpsl
out
cs
xor
add
sbb
or
xchg
filds
outsl
inc
enter
addb
stc
jl
cmpsl
shrb
fdivrl
sub
iret
arpl
pop
lcall
xchg
loop
xchg
test
int3
bound
and
dec
inc
pop
lea
mov
jecxz
add
mov
sahf
iret
and
and
push
cs
cltd
orl
rolb
addr16
push
mov
add
data16
fwait
sub
add
aaa
mov
cmc
add
jnp
into
addr16
orl
adc
jecxz
pop
testl
sub
mov
lds
pop
loope
negb
push
orl
push
shl
or
movsb
iret
xor
mov
lods
jge
jo
adc
sti
and
xchg
xchg
leave
add
sbbb
jg
cmp
push
call
sahf
je
xchg
and
push
in
xchg
mov
mov
and
testl
pop
movsb
gs
ds
xor
stos
cmp
mov
dec
mov
dec
icebp
fucomip
jbe
adc
addr16
inc
call
je
sbb
xchg
scas
pop
add
outsb
push
pop
mov
das
arpl
js
testl
mov
sti
ljmp
in
mov
dec
in
mov
mov
cwtl
xchg
and
enter
and
sbb
inc
lods
adc
dec
dec
push
incb
sbb
add
or
add
aam
mov
vmread
inc
pop
adc
notl
sub
push
adc
sbb
xchg
xor
jle
fcmovne
mov
push
and
mov
cmp
mov
adcl
xor
out
and
adc
aad
jae
loop
jo
lock
adc
in
add
mov
and
lds
push
cltd
dec
add
jnp
mov
mov
cmp
out
xor
daa
dec
cmc
push
pop
mov
div
idivb
prefetcht1
sub
and
or
insl
call
imul
xchg
add
mov
cld
pop
lcall
cmp
int
mov
test
mov
sarb
rcll
mov
daa
or
jl
pop
xor
jb
add
scas
nop
fisubrs
mov
test
hlt
jo
ja
loop
jge
cmp
stc
pop
add
fidivl
out
cmpsl
and
jno
mov
daa
and
loop
cs
jb
or
jl
movsl
mov
addr16
push
pop
in
stos
lods
sbb
out
stc
pop
arpl
stc
dec
into
xor
push
int
repnz
and
arpl
adc
mov
push
mov
mov
xchg
and
xchg
fidivrs
jl
cltd
fwait
jae
sbb
shlb
mov
daa
mov
ja
shr
rol
adc
jnp
ja
add
pop
sub
jno
das
mov
imul
or
dec
inc
sub
popf
cmpb
ret
push
hlt
addps
cmp
rolb
iret
into
insl
xor
adc
or
dec
cmp
and
add
cs
inc
mov
fs
jo
sbb
cld
in
ror
pop
bound
les
lea
inc
mov
out
mov
pop
xchg
add
hlt
call
cltd
test
push
push
lret
pop
pop
push
cld
xchg
mov
xor
add
andl
adc
subl
add
rep
cmp
iret
outsl
or
insb
out
and
lods
adc
insl
jp
fcomps
lret
cld
mov
enter
in
mov
out
push
pop
push
sub
hlt
loope
add
jb
sub
pop
ror
rorl
push
sbb
xor
mov
aad
push
ret
xchg
dec
cmc
push
daa
loop
dec
pop
jnp
gs
xchg
jg
add
xchg
and
mov
cmpsb
xor
in
sbb
cmc
adc
cmp
add
popf
int
push
push
adc
not
jb
cwtl
cli
adc
mov
test
push
inc
lea
adc
mov
in
add
cwtl
dec
lds
inc
pop
jp
pop
inc
lret
mov
sbb
sub
pushl
int
test
jecxz
lahf
pop
lahf
mov
stos
cmp
cmc
fsubs
stos
outsb
mov
jnp
repnz
mov
sahf
mov
mov
mov
in
pop
ret
lret
fisttps
cmp
mov
xchg
sbb
push
ficompl
dec
cmpsl
mov
sbb
pushf
pop
hlt
outsb
push
fwait
lods
sub
adcb
sbb
cmp
fiadds
fwait
out
push
jnp
xchg
aas
cmc
aam
outsl
jp
push
xor
mov
jge
cmp
sbb
inc
sbb
data16
xor
and
xchg
popa
rorb
mov
add
push
lods
and
fisttpl
inc
add
fmulp
lods
popf
sbb
and
push
sub
xlat
xchg
loopne
cld
cmp
rclb
adc
arpl
sbb
push
push
sub
addr16
adcl
pop
jnp
sbb
or
jg
inc
fs
cmpl
mov
adc
dec
push
fwait
mov
dec
test
aad
sahf
fnstsw
pop
nop
dec
add
push
sub
xchg
fldcw
cmpsl
pusha
lock
jle
fisubrs
lods
clc
iret
jge
dec
mov
mov
and
in
js
test
mov
test
dec
push
in
xor
out
hlt
fs
sbb
loopne
bound
xor
xor
clc
scas
cmp
jae
add
lret
ret
sbb
jmp
pushf
fimuls
fwait
pushf
cwtl
dec
outsb
in
ret
cmp
dec
ds
mov
dec
loope
inc
popa
xor
mov
pop
mov
xor
aam
xchg
arpl
sti
jmp
es
xchg
loopne
dec
scas
call
mov
ja
cmc
push
mov
jae
cs
xchg
mov
push
jnp
mov
enter
push
cmp
pop
cmpsl
movsb
stos
aad
push
cmpsw
imul
pop
and
lret
inc
cmpsl
lods
cmovp
dec
adc
loope
lret
mov
mov
xchg
popa
and
or
test
push
int
adc
dec
jnp
mov
or
jg
push
xchg
popf
scas
fcmove
fistps
lcall
and
popa
mov
jno
sarl
imul
mov
xchg
sarb
cli
xchg
cmp
repz
adc
or
and
push
mov
mov
stos
jnp
lods
mov
loopne
test
push
push
cmpsl
jge
push
pop
iret
fcos
adc
sbb
in
insb
pop
fmull
push
mov
and
adc
mov
lcall
ficoml
mov
inc
add
call
daa
mov
xor
jnp
inc
adc
stos
add
xchg
xchg
aas
sub
cmp
imul
inc
rcll
push
bound
enter
xchg
scas
xchg
aaa
mov
iret
outsb
addr16
je
icebp
pop
popf
repnz
pop
cmp
std
out
call
jmp
adc
ljmp
cmp
cmp
out
xlat
outsl
fistl
cli
dec
push
cld
or
cs
push
in
loope
fnsetpm(287
rclb
addl
push
bound
adc
cmpsb
iret
cmp
cs
andl
out
pop
sbb
add
mov
sub
sbb
xchg
addr16
repnz
dec
fnstenv
aaa
sub
add
fnstcw
sti
scas
inc
cmpsl
into
mov
and
sub
negl
cmc
xchg
xor
aas
sbb
pop
push
adc
shrb
fcoml
jae
leave
das
mov
cmp
sbbb
cltd
pop
sbb
cltd
test
aas
push
pop
in
xchg
insb
adc
outsb
mov
aas
shlb
push
shll
inc
push
lods
xor
cwtl
or
mov
daa
test
or
mov
test
pop
adc
add
mov
sub
enter
inc
test
sbb
imul
pop
inc
mov
dec
or
sti
out
jl
insl
data16
cmp
outsl
jnp
repz
sbb
mov
mov
out
cmp
rolb
je
pop
xor
lahf
leave
in
or
imul
daa
rorb
fcoms
iret
rolb
imull
sahf
pop
jb
add
adc
mov
xor
fdivr
cmp
dec
adc
inc
or
sbbl
push
add
cwtd
cli
cld
jno
xor
mov
jo
nop
sub
jmp
testl
lds
fidivrl
faddl
daa
stc
mov
adc
dec
jbe
lcall
jl
subl
cwtl
xor
xor
imul
dec
fxch
jge
into
sbb
push
xlat
cmc
mov
push
icebp
add
or
addr16
sub
mov
aam
outsl
add
test
fisubl
mov
push
mov
inc
or
imul
xor
insl
push
mov
adc
movsl
add
mov
pop
mov
sub
leave
lods
xor
ss
scas
popw
mov
lcall
add
js
into
lods
pop
lahf
push
dec
inc
push
enter
pop
std
dec
xchg
xlat
sub
inc
rclb
mov
repz
jo
ds
and
jp
add
es
mov
push
int3
das
adc
iret
adc
push
scas
push
sbb
pop
sub
add
lahf
push
jns
outsl
cmpsb
adc
xchg
sub
jbe
arpl
adc
pop
jbe
popa
push
fidivl
or
xchg
push
pop
jmp
add
and
scas
mov
and
fimuls
adc
lea
loop
mov
pop
out
push
subb
lods
pop
push
popa
popa
cmc
test
mov
cld
testb
mov
rcll
mov
icebp
push
cld
jecxz
jns
ja
xchg
aad
or
data16
fcoms
in
push
pop
inc
jmp
stc
or
insb
out
jnp
or
popf
xor
cld
in
dec
movsl
lods
mov
cmp
ja
imul
sqrtps
loope
sbb
dec
out
sub
fdiv
dec
nop
jno
lahf
xlat
jbe
xchg
sbb
mov
test
aas
hlt
popa
push
push
lcall
popf
lods
inc
push
lods
push
push
decl
dec
es
imul
mov
and
call
jge
loopne
pop
or
vsqrtps
adc
mov
or
add
imulb
icebp
jo
mov
cmp
xlat
cltd
icebp
ja
das
js
inc
mov
jnp
test
or
fsubr
jae
adc
lcall
fs
lea
clc
outsb
addb
rcrb
and
lret
push
aad
jbe
cmp
cld
dec
or
popf
cli
adcb
dec
das
inc
arpl
ja
cmp
stos
mov
mov
loope
push
enter
aad
pushf
ja
sbb
lods
and
xlat
scas
scas
adc
mov
sub
icebp
outsl
lcall
out
mov
and
popf
negb
cmp
shr
imul
sarl
sub
in
lcall
push
js
push
jl
ss
sbb
test
repnz
clc
aam
or
cmp
mov
or
lods
or
sbb
dec
adc
scas
ror
es
xchg
cmp
xchg
mov
mov
leave
fisubrs
mov
icebp
aaa
pop
pop
push
pop
call
dec
xor
mov
outsl
xchg
cmc
xchg
xchg
addr16
lcall
hlt
ja
xor
rcrb
mov
fldl
jmp
call
dec
pop
push
stos
stos
add
sbb
enter
popa
mov
dec
pushf
dec
or
nop
and
repnz
outsb
sbb
push
lcall
aad
out
clc
arpl
and
sbb
and
shlb
cmp
sbb
or
xchg
fs
push
int
in
fsts
jae
loop
sbb
adc
jne
andb
cmpsb
test
repnz
mov
and
fs
xor
popf
cmp
pop
sbb
inc
subb
mov
lret
nop
sub
mov
cli
jo
push
mov
jae
hlt
inc
adc
mov
dec
push
xchg
out
inc
aam
add
int
pop
adc
ds
popf
dec
loop
inc
mov
adc
jle
sub
or
jmp
loope
xchg
cld
inc
push
cmp
testb
mov
ret
xor
dec
ficoml
fnstenv
mov
mov
gs
out
or
outsb
hlt
dec
lods
das
faddl
sbb
mov
stos
loope
daa
mov
add
sub
leave
aam
clc
stos
cmp
lock
pop
add
xor
xlat
or
jle
movsb
mov
lods
andb
xchg
add
insl
cs
cmp
stc
push
jnp
fidivs
sub
adc
mov
sbb
into
ret
push
out
push
jne
mulb
repnz
and
fists
push
hlt
cmc
insb
jo
ss
jmp
push
xor
cltd
clc
imul
xor
mov
sbb
mov
movsl
cmp
mov
adcl
scas
or
ljmp
xchg
loop
mov
adc
cmp
cltd
icebp
xchg
mov
imul
mov
mov
daa
leave
les
aad
mov
xchg
mov
int
shrb
inc
and
sar
js
jge
jge
xchg
fsubp
mov
mov
sbb
dec
imul
inc
push
push
push
lds
int3
fisubl
sbb
sahf
fstpl
orl
jp
std
pop
mov
sbb
add
pop
cmp
dec
int
lret
jge
push
into
cmp
mov
and
pushf
mov
imul
clc
mov
or
into
test
pushf
fnsave
cmpsl
lret
dec
les
jns
mov
jecxz
mov
inc
aaa
mov
dec
pop
dec
dec
ss
xor
pusha
pop
xor
aas
jecxz
aaa
mov
dec
xchg
mov
scas
adc
push
pop
push
nop
in
pop
scas
add
add
lock
adcl
inc
sbb
mov
and
xchg
mov
jg
loopne
movb
pop
sub
add
inc
sbb
sbb
push
clc
and
pop
mov
cmpsb
and
inc
loop
push
xor
inc
or
addb
in
lds
jnp
mov
stc
push
aas
inc
push
xchg
jecxz
sti
ret
dec
adcl
and
rcrl
imul
rolb
js
sbb
cmp
repnz
cmp
and
xchg
ret
in
outsl
scas
into
hlt
ficomps
stos
dec
mov
lods
fs
xchg
dec
leave
ss
mov
test
mov
pop
imul
ret
aam
cmc
cltd
sub
pop
cld
pop
sbb
int
or
sub
jmp
mov
clc
notl
pop
push
or
icebp
pusha
scas
in
nop
in
mov
jmp
fwait
dec
jle
lock
push
cltd
addr16
mov
xorl
ja
scas
test
sbb
bound
or
adc
shrl
and
dec
pop
cwtl
mov
leave
loopne
imul
lret
mov
jp
add
cmpl
pop
mov
sub
sub
pop
insb
pop
dec
ret
xor
mov
nop
aam
scas
out
sbb
dec
jge
push
cmp
inc
in
aaa
xchg
enter
or
adc
pop
add
aad
pushf
sbb
pop
flds
push
cld
mov
lock
shrb
adc
push
out
repz
xor
jl
leave
leave
add
mov
and
sbb
aaa
jl
shrb
adc
xchg
mov
insl
sarb
sbb
push
insb
add
mov
clc
cli
jns
pusha
add
loope
add
arpl
mov
rcrb
or
sahf
cld
cld
mov
push
jno
mov
or
pop
fcom
jecxz
pop
andl
inc
fs
fcompl
mov
add
gs
xchg
mov
scas
jmp
push
mov
xchg
ret
lea
xchg
cmpsb
icebp
dec
fstpt
or
sbb
xor
inc
dec
sub
test
std
ds
or
je
test
xor
insl
fstpt
js
mov
cltd
fdivs
sbbl
mov
cmp
sbb
inc
fwait
mov
loope
and
add
cmc
lds
bound
outsb
hlt
subl
sub
lods
jns
iret
mov
cmp
sbb
in
jnp
repz
lods
decb
int
insl
push
cmp
in
popa
jl
jbe
movsl
addr16
mov
jns
sar
add
insb
testl
into
or
out
int
dec
in
jmp
jecxz
pop
data16
and
mov
sbb
dec
movsb
popf
dec
xchg
push
aaa
add
fs
mov
fldl
pop
mov
mov
lods
cwtl
je
movl
xchg
notl
sub
cmpsb
jmp
sti
mov
lock
sub
sub
out
bound
sbb
rcr
lods
leave
bound
sbb
push
jbe
and
add
pop
enter
inc
jmp
sbb
shlb
icebp
scas
sub
pop
push
pop
pop
mov
mul
clc
jo
icebp
pop
xorl
stos
fucomip
mov
inc
or
imul
shrb
sub
xchg
adc
mov
roll
push
mov
addl
jns
cltd
inc
addr16
jae
xchg
insb
cmp
or
sub
out
scas
test
adc
cmc
repnz
jnp
je
and
jp
ret
out
push
aam
fiaddl
mov
push
cld
push
test
imul
lahf
icebp
cld
and
mov
shrb
sub
repnz
dec
dec
jmp
push
mov
mov
cmp
out
mov
mov
popf
lea
pop
popa
sbb
loope
lock
movsl
jne
pop
push
pop
inc
push
out
insb
mov
ret
cltd
mov
in
data16
adc
mov
paddsw
mov
dec
sarl
xchg
dec
jmp
repnz
xor
gs
xor
fldt
dec
insl
and
xchg
fs
jmp
fisubrs
loope
or
cs
add
pop
popf
movsl
cs
jns
sti
mov
movsl
and
jne
out
ret
dec
sbb
dec
insl
iret
scas
xor
pop
psrld
sbb
popf
push
xchg
jnp
out
int
mov
push
stos
sbb
inc
adc
into
mov
push
adc
mov
in
cmp
aam
xor
dec
icebp
jmp
lds
xchg
outsb
push
mov
movsl
mov
ljmp
fs
loope
fildl
loope
mov
add
sub
add
sahf
std
shrl
sbbl
push
jmp
lea
jne
nop
pop
sbb
sti
xchg
test
daa
gs
addr16
add
daa
fdivrp
sub
cmp
rclb
xchg
js
add
jo
lea
mov
jns
cmp
ja
mov
ret
xchg
cmp
jae
dec
int3
fisttps
mov
scas
xchg
sub
push
jnp
mov
inc
add
dec
movsb
ret
fwait
push
push
stos
jnp
inc
add
mov
es
mov
jl
test
scas
lret
push
jg
sub
icebp
dec
pop
pop
lret
mov
jno
push
dec
es
cmc
lret
sarb
das
adc
jmp
xor
inc
std
and
mov
mov
das
outsb
movsl
dec
mov
movsl
xchg
mov
push
xor
das
adc
repz
xor
fisubrs
outsb
neg
icebp
and
ret
test
cmpl
inc
repz
dec
cld
cld
fwait
dec
mov
add
dec
sub
xchg
xor
out
mov
adc
aam
loopne
xchg
mov
jecxz
shlb
out
jp
int3
sub
jno
push
push
mov
and
into
mov
mov
jecxz
inc
jge
push
fcom
clc
xchg
sbb
jnp
xchg
sub
stc
in
and
add
xor
mov
clc
mov
xchg
adc
sbb
or
jo
xor
mov
cld
fwait
push
adc
dec
jb
dec
mov
addb
shll
pop
rorl
xor
xlat
push
ret
jle
icebp
dec
pop
bound
out
add
cmp
rol
mov
ds
icebp
icebp
gs
in
out
add
sarl
or
loop
inc
popa
dec
push
mov
sbb
dec
jnp
jp
sub
add
in
fstpt
or
sarl
lret
xchg
jge
add
sbb
mov
dec
xorb
cmp
sahf
mov
lea
shrb
call
int3
cmp
cwtl
jno
iret
repnz
or
roll
ss
push
mov
cs
xor
pop
scas
fisubrl
stc
xchg
ficompl
inc
mov
mov
mov
mov
ja
loop
daa
jle
mov
lcall
mov
das
out
adc
pop
test
fcomp
mov
movl
pop
dec
fldt
je
pusha
loope
insl
divl
mov
pop
mov
jb
jecxz
mov
push
testb
enter
and
jae
inc
xchg
and
pop
mov
jnp
popa
scas
mov
test
mov
push
lret
adc
pop
je
into
xchg
mov
jbe
push
rorl
lods
addr16
push
movsb
mov
xchg
mov
push
mov
inc
jb
adc
ficompl
out
dec
lcall
iret
test
sub
jg
in
pop
xor
rcll
lret
dec
mov
xor
je
cmp
scas
xchg
lret
sbbb
daa
flds
sub
mov
mov
xor
xor
push
dec
sub
test
pextrw
data16
subb
int3
ss
fnsave
xchg
cmp
into
jecxz
pop
push
jae
and
in
cmpsb
inc
adc
rcll
arpl
fs
xchg
cwtl
cmpsb
pop
adc
pop
mov
push
cwtl
xor
movsb
mov
mov
mov
mov
lds
jle
sub
orb
push
and
popf
and
fcomps
xor
pop
nopl
nop
loop
repz
es
inc
jb
pop
pop
out
insb
mov
imul
or
jecxz
nop
pop
and
in
popa
adc
push
adc
arpl
ds
lret
mov
call
xor
jns
dec
dec
dec
add
cs
sbb
dec
pusha
mov
or
mov
push
xchg
mov
divl
stos
cmp
lods
test
xlat
xor
sub
push
jl
inc
xor
cli
push
mov
cli
jo
daa
loopne
mov
xchg
cmpsb
fwait
jo
shll
mov
dec
xor
xor
scas
ret
sbb
test
inc
mov
mov
xchg
stos
mov
sbb
inc
cmp
movsbl
cmp
xchg
adc
jo
out
movsb
arpl
das
insl
mov
dec
adc
mov
add
nop
idivb
xchg
jo
cmc
lock
cmp
in
mov
lds
xor
push
push
mov
incl
shrb
loope
pop
cmpsl
lahf
fdivs
gs
cmp
incl
leave
push
in
enter
out
andb
and
nop
lcall
xor
jl
dec
fs
xchg
mov
addr16
leave
sbb
jnp
jmp
dec
popf
mov
adc
pop
fimull
mov
xchg
lds
std
dec
jecxz
push
inc
sub
shrl
adc
ficompl
sub
pop
scas
lods
int
pop
sub
add
xor
add
xchg
and
cmpsl
lret
lock
lret
dec
in
aad
fimull
pop
push
imul
jnp
or
sbb
cmc
fcmovu
mov
jp
jno
adc
cmpsl
jmp
movsb
call
mov
inc
jb
dec
leave
fyl2x
push
in
arpl
mov
inc
jbe
into
insb
push
jge
mov
dec
mov
out
ds
lock
lcall
addb
mov
xor
movntps
adc
cmpsl
fmul
xchg
mov
stos
pop
adc
in
mov
pop
mov
stos
dec
mov
cli
loop
into
sbb
fstpl
aam
sbb
sar
dec
sarb
idiv
fcompl
cli
mov
mov
out
jbe
imull
repnz
add
mov
push
popf
lods
clc
cmp
les
js
femms
repz
xor
lret
fistl
dec
jo
adc
cmp
push
out
jno
clc
dec
jmp
aad
or
or
fs
lods
push
loopne
stc
jmp
mov
jecxz
out
das
rorb
lods
xchg
xor
mov
arpl
sub
cmp
pop
jg
in
loopne
mov
ror
xlat
dec
mov
mov
push
mov
fs
inc
sbb
xor
xor
scas
pop
or
xchg
lods
in
xor
push
mov
fsubl
dec
addr16
and
insl
mov
pinsrw
mov
jo
ss
jle
stc
dec
pop
add
mov
or
and
out
das
xlat
cld
mov
into
mov
int
push
jg
ds
sbb
js
pushf
mov
push
cmp
leave
sub
push
dec
ja
inc
push
and
stos
adc
leave
jbe
mov
jge
pop
cmpsb
sub
and
mov
ds
jle
fistps
push
push
stos
push
rcrl
daa
pop
aas
jmp
and
lock
lret
ds
and
or
cmp
xchg
out
pushf
daa
popf
cs
adc
mov
xchg
aad
hlt
dec
sbb
inc
insb
or
je
icebp
mov
das
lcall
cli
jbe
ds
pop
ret
push
cmp
lret
scas
lods
or
frstor
and
cmove
xchg
faddp
out
pop
pop
jae
mov
test
in
sub
push
clc
cmp
scas
fs
dec
pop
fidivs
jo
out
sbb
ja
cmc
sub
jmp
rcll
insb
nop
andl
push
repnz
adc
js
jmp
outsb
lcall
js
repz
lods
cwtl
js
shrb
mov
xchg
sahf
inc
int
and
cmpsl
int3
aas
inc
mov
icebp
push
call
fidivrl
ret
stos
gs
mov
push
dec
xor
cmp
lock
adc
mov
lea
cli
cmp
cmp
out
mov
adc
fs
adc
jne
loop
adc
mov
shlb
call
push
jbe
ficomps
jnp
inc
jo
popf
mov
mov
popf
jae
xchg
pop
mov
jmp
dec
das
fwait
inc
sub
xchg
insb
mov
mov
cmpsl
or
lret
out
fs
xchg
cltd
out
fbstp
stc
outsl
in
cmpsl
cmp
cmp
testb
mov
imul
into
insb
pop
mov
sti
mov
xchg
pushf
or
xchg
loop
cmp
sbb
sbb
cmovns
jno
roll
sub
cmc
sub
xor
mov
popa
xor
arpl
mov
subl
outsb
xchg
imull
adc
ret
cwtl
add
inc
loop
cli
push
xor
dec
jno
push
cmp
popa
addl
jl
mov
mov
xchg
lds
and
push
inc
in
xchg
aam
std
or
loop
lret
in
pop
movsl
addr16
and
outsl
pop
negb
out
push
mov
in
clc
mov
cmpl
push
icebp
inc
out
clc
jecxz
cmovae
cmp
loopne
dec
push
loope
dec
hlt
lret
adc
leave
xchg
aad
daa
je
mov
fldenv
push
fiadds
lret
int3
mov
inc
xchg
xchg
pop
bound
fbld
inc
rep
or
and
sub
test
xchg
lods
repz
jno
xchg
inc
inc
and
jmp
in
ss
mov
fstl
je
inc
xor
adc
sbb
clc
imul
jo
loope
in
or
mov
dec
fdivl
nop
push
push
mov
repz
ret
mov
inc
aad
or
mov
sub
out
cmp
dec
and
fiaddl
aad
cmp
idivl
cmp
sbbl
shll
or
enter
mov
mov
dec
das
in
addr16
add
in
xchg
pop
or
movsl
lock
imul
or
clc
jae
sub
lea
test
shll
das
imul
push
or
into
repz
jmp
xchg
ret
cld
inc
pop
mov
mov
ret
jbe
cmp
loope
sbb
popf
jecxz
sub
lret
jo
in
leave
into
mov
inc
lods
xchg
outsb
adc
movsb
and
pop
arpl
mov
xchg
ds
call
jmp
fnstenv
addr16
jbe
in
and
add
sub
or
loop
xlat
test
fs
inc
mov
push
jg
int3
int
jne
dec
inc
jl
xor
mov
pop
fildll
repz
cli
xchg
jno
dec
cmp
in
stos
iret
and
xor
inc
and
inc
fisttpll
movb
add
dec
cmpsb
imul
mov
adc
test
xor
cltd
xchg
sbb
dec
int
mov
dec
pop
add
push
in
stos
test
xor
lea
jo,pn
bound
adc
int3
jbe
insb
push
cli
push
add
jnp
pop
jb
cld
xchg
ss
and
sbbb
jno
inc
push
clc
or
mov
cld
sub
and
push
mov
out
jne
ret
or
clc
adc
mov
cli
inc
shlb
or
push
adc
clc
mov
push
inc
ljmp
lds
pop
push
mov
lret
xor
pop
mov
and
fisttpll
push
push
lods
frstor
dec
dec
mov
jnp
and
xor
ja
je
test
sbb
repnz
pushf
sbb
ret
mov
sub
cld
pop
pop
sbb
xchg
fisubrl
xchg
enter
push
xor
push
jb
mov
aas
and
mov
sbb
in
jmp
fsincos
jge
jmp
fsts
enter
xchg
mov
mov
aaa
and
jb
push
lds
jge
movsl
aad
xlat
ss
and
mov
pop
xor
bound
or
movsb
or
adc
or
push
popfw
jmp
sub
loopne
in
loopne
stc
cmp
mov
fsubs
sbb
aad
into
push
or
in
and
jmp
cwtl
rol
jmp
mov
or
pop
cmpsb
sub
xchg
dec
fcomi
sbb
and
add
add
pop
fs
sbb
jmp
mov
mov
loop
pop
cmp
and
enter
movsb
push
dec
push
out
push
jno
cmp
xor
mov
js
rolb
js
in
xor
adc
cmpsb
ljmp
dec
jbe
mov
mov
add
push
inc
in
out
push
leave
clc
arpl
dec
adc
add
fmull
mov
les
shrl
push
xor
ss
inc
repz
mov
imul
in
std
mov
mull
cmpsb
lods
and
add
sbb
dec
jecxz
fildll
and
rcrl
mov
mov
adc
sbb
cmp
inc
jecxz
push
adc
inc
in
pop
inc
ret
inc
insb
sti
addr16
fsub
lahf
or
and
mov
fcom
cmc
mov
mov
daa
push
pop
mov
mov
xor
imul
ret
ret
jbe
fcomip
fwait
or
cmp
rcll
movsb
xor
sbb
mov
in
int3
jno
or
push
imul
pop
inc
lods
les
pop
pop
dec
es
in
and
mov
insb
dec
and
lods
mov
jecxz
mov
pop
mov
movsl
mov
jl
xchg
out
fs
mov
hlt
mov
sub
pop
fcomps
pop
addr16
push
jmp
mov
mov
dec
xchg
sub
or
js
lcall
inc
lret
in
ja
or
rorl
sub
adc
es
pop
jmp
fcmovu
adc
movlps
into
mov
add
jge
inc
leave
sbb
stos
aaa
into
stos
sub
ljmp
sbbb
icebp
dec
mov
dec
sub
push
rolb
fnsave
pop
lock
xlat
adc
loope
repz
iret
sahf
and
or
adc
ret
add
fisubrl
fmull
sbb
dec
inc
push
es
jmp
in
fimuls
xchg
les
sbb
and
jmp
push
movsl
pop
mov
xor
in
mov
insl
push
enter
cmpsb
orl
cmp
add
pop
xor
mov
cs
int
lahf
push
repnz
iret
and
sahf
rcl
test
inc
in
ja
or
lods
push
xor
test
fwait
push
rol
jb
xchg
mov
xchg
mov
push
cmp
sub
in
fdivs
mov
mov
add
sub
pop
xchg
fucomp
inc
dec
mov
aas
sub
add
pop
js
adc
sbbw
or
imul
out
add
push
adc
jne
jns
dec
sbb
or
adc
cwtl
pop
adc
xchg
mov
cmpsb
addr16
leave
popf
mov
xor
dec
pop
shll
xchg
ja
and
outsl
xchg
jnp
push
xchg
add
mov
jb
pop
sbb
xor
popa
loopne
pop
dec
xchg
subl
cmp
mov
and
xchg
stos
xor
inc
mov
out
mov
js
movsb
out
lcall
in
cwtl
dec
mov
movsb
mov
lods
dec
aaa
scas
mov
inc
outsb
mov
je
insb
fwait
push
adcl
push
cwtl
dec
sarb
mov
inc
aas
cmp
lock
mov
mov
xor
inc
mov
ss
jp
imul
and
data16
jg
leave
imul
mov
ss
addr16
enter
and
mov
lcall
bound
sbb
lret
jae
clc
repnz
clc
pop
jecxz
dec
rorb
and
inc
ret
mov
jbe
fst
aad
or
adc
push
xor
dec
push
adc
sub
loope
nop
sbb
add
ror
ds
dec
jmp
icebp
push
jnp
cmp
sub
test
shlb
or
add
xchg
aas
add
sub
mov
cld
pop
mull
jp
mov
inc
jmp
cmp
movsb
xor
repz
shl
push
in
mov
aaa
lret
arpl
jb
scas
leave
in
push
and
fwait
shll
stos
xor
test
mov
ds
out
cmp
and
sbb
push
cmp
mov
and
in
out
inc
push
xchg
adc
mov
and
add
mov
int
ss
add
sub
adc
sbb
out
jl
jbe
stos
and
data16
mov
lret
lea
divl
les
dec
sbb
sahf
data16
out
jae
fimuls
into
pushf
mov
lcall
pushf
bound
xchg
popa
scas
xchg
pop
andb
or
or
fsubl
ror
inc
pop
pushf
popa
sbb
mov
repz
adc
dec
sahf
cmp
mov
cmp
sbb
pop
cwtl
das
push
testb
cmp
sbb
lret
lret
mov
inc
pop
rcrl
xchg
loopne
dec
pusha
or
push
push
addb
inc
aam
nop
out
sub
inc
les
cmc
push
pop
stos
cmp
sahf
movsb
mov
das
repz
mov
dec
shll
add
inc
cli
xor
adc
mov
jb
pop
subl
iret
mov
stos
lds
shrl
adc
or
adc
pop
jne
mov
test
cs
lret
in
mov
popa
xor
cmp
call
pop
inc
jae
dec
push
push
scas
icebp
aad
shrb
sarb
int3
mov
stc
mov
sbb
cmc
int
ficoml
sarb
sub
cmp
shlb
jae
push
cltd
pop
aad
gs
in
inc
lods
inc
int3
xor
lea
pusha
sub
lods
pop
xchg
dec
mov
mov
and
push
or
xchg
ljmp
add
jb
adc
fidivrs
lock
and
inc
adc
push
sub
xchg
hlt
add
out
sti
fnstsw
ljmp
jp
xor
insl
push
pop
mov
dec
lahf
dec
push
ret
sbb
ret
xchg
test
jno
mov
jle
adc
xchg
mov
jns
iret
add
sub
or
icebp
iret
test
fwait
insb
out
inc
lret
int
push
out
mov
cmc
mov
xchg
test
cli
mov
aad
iret
xor
xchg
sbb
shll
mov
testl
repz
lock
fsubs
lds
mov
dec
imul
jg
lds
add
add
cmp
mov
sti
outsl
pusha
fs
test
add
aam
pop
or
mov
push
test
jno
dec
or
ljmp
jge
sbb
fsubrl
enter
inc
insb
sbb
std
pusha
adc
mov
out
jmp
or
sbb
jl
sub
dec
adc
xor
in
arpl
sbb
sub
std
adc
cmpsl
mov
jle
inc
jbe
jmp
jle
cmp
cmp
insb
imul
nop
fstps
test
add
mov
push
jg
fmull
xor
add
loope
mov
inc
inc
inc
iret
mov
sti
adc
mov
test
jle
lods
xor
pop
lret
mov
das
push
popf
xchg
jecxz
pop
jmp
jns
ret
mov
lea
cmp
xor
imul
pusha
push
and
fs
movsl
mov
fstpl
scas
test
inc
fstpt
jecxz
dec
mov
adc
add
andb
stos
sub
data16
or
fdivrp
jmp
sti
in
frstor
mov
out
pop
es
fists
mov
aam
mov
mov
nop
inc
jb
sub
addr16
mov
sub
xchg
jge
enter
push
lahf
adc
mov
dec
mov
pop
push
cwtl
lods
adc
and
sbb
out
adc
nop
dec
outsl
mov
mov
fsubp
loope
adc
sbb
sahf
loop
dec
add
shll
mov
add
xor
movsb
rcrb
stos
mov
xchg
nop
push
push
test
sub
xchg
xlat
jns
inc
mov
add
or
mov
fdivrl
inc
adcb
addl
ja
std
xor
mov
arpl
outsb
or
lea
repz
cmp
pop
fldcw
pusha
jbe
jo
pop
fldt
div
cmp
bound
push
pushf
enter
orl
xchg
mov
jno
mov
out
dec
and
push
jecxz
cmp
rolb
xor
jo
mov
push
adc
arpl
or
pop
jb
imul
add
push
jmp
stc
mov
outsl
mov
pop
mov
rorb
jno
cmp
adc
into
xchg
xor
xlat
pop
scas
test
and
dec
push
push
xor
mov
ficoml
and
aam
push
sub
test
push
push
lret
fldenv
jnp
cwtl
lods
adc
adc
mov
add
pop
adc
push
call
bound
adc
mov
rclb
pop
popl
xchg
arpl
cld
add
ret
adc
add
add
outsb
cmp
vunpckhpd
adc
andl
mov
je
xor
push
lret
pop
loopne
sub
xchg
out
in
cmp
inc
ja
icebp
in
or
mov
and
inc
arpl
pusha
push
arpl
insl
dec
imul
std
cltd
leave
repz
pop
mov
jo
dec
scas
adc
movsb
shlb
les
adc
jno
mov
dec
fcmovnb
xchg
pop
cltd
xor
sub
xchg
adcb
mov
sub
aas
mov
pop
inc
mov
jp
scas
lods
push
addr16
ja
nop
imulb
test
jo
xchg
inc
out
mov
movsl
jmp
daa
in
test
dec
addr16
sbb
xchg
push
or
xchg
sub
jne
cltd
mov
and
sub
movsb
cmp
loope
xor
push
xchg
jmp
add
sbb
pop
stos
outsl
std
and
xchg
mov
xchg
cld
out
fcoml
push
in
inc
dec
jbe
pop
jp
lret
dec
jl
dec
push
cmp
int3
into
stos
inc
inc
push
cmpsl
or
mov
push
pop
inc
rorl
pop
pop
mov
push
sahf
jb
repnz
and
sbb
fs
in
in
add
mov
ret
jl
add
sbb
cmp
pop
pop
sarb
imul
push
cmpb
xchg
sbbl
cli
les
add
sbb
sbb
xor
loopne
cmpsb
sub
sbb
jp
push
out
jecxz
call
inc
mov
pop
cmp
cmp
outsb
mov
and
mov
xchg
outsl
cmp
add
mov
pop
loopne
in
nop
pop
add
outsl
test
shll
repz
dec
out
sbb
lret
imul
xchg
xchg
jne
mov
pop
push
es
leave
sub
iret
xor
jg
addl
ljmp
add
and
sub
jbe
adc
xchg
cwtl
stos
ret
popl
lret
mov
mov
pusha
imul
xor
push
cmp
test
xor
xor
dec
int
dec
movsb
jle
add
test
out
outsb
inc
test
push
out
rorb
adc
mov
xlat
pop
jnp
xorl
mov
iret
or
push
mov
xchg
enter
sbb
aam
imul
sub
repz
jne
adc
xchg
inc
dec
mov
adc
xchg
clc
mov
pop
test
dec
ss
test
jp
dec
dec
or
bnd
mov
out
je
fadds
repz
call
lods
mov
sub
xchg
repz
jne
rcr
repnz
and
and
mov
pop
enter
sbbb
rcrb
std
fwait
push
rcrb
jle
loopne
inc
mov
sahf
out
and
jge
arpl
inc
shl
lods
rcll
lods
push
cmp
pop
jae
dec
lods
andl
mov
lods
xchg
ja
adc
cmpb
jge
jecxz
test
inc
jns
loop
inc
mov
dec
mov
add
das
mov
mov
sbb
repnz
cmpsb
add
fcmove
mov
addl
push
push
jnp
push
stc
mov
and
stos
pop
stc
pop
stos
cmpsl
sub
ret
js
dec
or
sbb
mov
inc
inc
daa
mov
in
repnz
out
lret
mov
jbe
adc
not
sahf
xor
mov
push
pushf
fists
jns
or
xor
ja
and
inc
or
mov
aas
mov
sub
jp
pop
je
mov
and
sbb
popa
cmp
jbe
fcompl
test
push
loope
roll
in
pop
sar
mov
jg
mov
jl
scas
jo
and
dec
daa
jne
sub
dec
push
mov
xchg
cs
add
xchg
pop
test
cmp
xor
popf
sbbl
mov
sahf
in
lret
cmp
test
rcr
mov
dec
aam
and
mov
xor
cmpb
int3
iret
pop
pop
jae
jle
daa
jp
iret
in
or
jnp
add
xchg
fistpl
outsb
stos
add
inc
icebp
std
adc
jne
adc
cmc
stos
mov
in
inc
and
add
pop
xchg
imul
jle
sbbl
pop
push
add
jge
incl
xor
addr16
push
pop
sbb
popa
ljmp
out
dec
subl
and
in
lods
adcb
xor
icebp
pop
mov
mov
adc
rcrl
inc
enter
dec
cmpsb
mov
les
fldcw
lock
cmpsl
in
adc
outsl
dec
imulb
inc
xor
cwtl
loope
faddp
mov
pop
dec
jle
bound
lahf
sub
lods
repz
dec
cmp
push
out
lret
push
xchg
or
fisubs
pushf
lock
icebp
add
mov
mov
in
out
cmp
sbb
inc
mov
in
mov
out
ficoms
icebp
scas
dec
jmp
push
mov
pop
fidivl
sub
dec
push
fwait
ljmp
out
jg
loopne
js
mov
int
push
add
ret
fucomi
sahf
adc
xchg
adc
lret
repnz
lret
dec
lret
mov
push
push
xchg
aas
jno
sbb
lock
dec
inc
jmp
add
into
sub
push
test
out
sbb
lock
jp
in
sbb
jle
jle
fstpl
add
mov
enter
hlt
or
gs
stos
std
fcmovnb
mov
mov
icebp
out
nop
push
mov
ds
xchg
sbb
nop
gs
push
jp
out
mov
jl
mov
or
adc
popf
cmp
inc
aam
sub
and
mov
xchg
lea
adc
out
out
add
jnp
lods
std
add
insb
cld
xorb
nop
xchg
cmp
mov
inc
repz
icebp
add
pop
gs
xchg
jmp
xchg
sub
or
movb
inc
xor
jne
ds
push
xchg
jbe
icebp
xor
aad
out
nop
xchg
loope
cmp
aas
jb
push
lret
ss
cmpsl
or
sti
lods
sub
push
test
sbb
gs
cs
cwtl
sbb
jl
mov
addr16
hlt
or
out
add
aad
cltd
insl
push
je
inc
lret
stos
sbb
and
lods
jb
fidivl
shrb
pop
dec
lods
push
fcmove
mov
adc
iret
mov
test
xor
mov
push
inc
int
lea
cli
popa
xchg
mov
xchg
mov
cli
lret
lea
pop
fdivs
mov
test
in
mov
or
imul
jbe
cmpsl
mov
mov
cmp
mov
inc
mov
pop
and
mov
cmc
cmp
fmull
sbb
nop
ret
dec
scas
mov
bound
xchg
loopne
mov
fisubl
jle
es
mov
xor
ja
dec
dec
stc
jecxz
cli
movsl
aas
pop
sub
jbe
aam
test
inc
div
sbb
dec
adc
int3
fiadds
cld
inc
out
jno
adcl
pop
jbe
js
orb
rorb
fsub
sti
stos
push
and
imul
xlat
xor
loop
sub
and
in
pushf
stos
dec
cmc
xchg
mov
push
and
xchg
pop
lret
or
and
xlat
sbb
fwait
outsl
mov
push
out
jne
loope
sti
in
push
stc
movsl
lea
arpl
cli
iret
sarl
arpl
dec
and
cvtpi2ps
add
cmp
jmp
lret
pop
inc
leave
sub
xor
sbb
imul
fs
outsl
into
push
lahf
das
inc
dec
push
test
mov
mov
pop
mov
pusha
jl
pop
cld
and
mov
inc
insl
push
xchg
dec
jbe
jo
cld
xchg
push
or
jmp
add
sbb
push
ret
xchg
enter
cmpsb
pop
fdivrp
mov
push
mov
lret
pop
and
sbb
cmp
or
push
shll
mov
push
call
push
scas
arpl
jo
mov
xor
xor
jmp
pop
aad
jg
repz
mov
adc
into
out
repnz
pop
es
sbbl
mov
pop
out
or
pop
leave
xor
loope
cmp
inc
popa
fnsave
inc
lret
aaa
aam
out
mov
push
lds
xor
mov
and
pop
push
je
mov
lods
or
push
lock
mov
dec
fwait
inc
jmp
cli
sub
and
xor
sub
movsb
ret
dec
incb
fnsave
or
jp
xchg
insl
adc
jecxz
ds
cwtl
stc
in
xor
pushf
mov
and
stos
cmp
mov
cmp
mov
xor
pop
dec
int3
or
or
jl
imul
sub
std
sbb
xor
andl
aas
in
jecxz
dec
jnp
cmp
or
push
in
or
and
pop
mov
icebp
repnz
mov
sub
xor
mov
push
jmp
ds
idivl
out
call
iret
mov
loope
and
in
mov
mov
push
in
xchg
out
mov
mov
sbb
mov
shrl
in
jnp
xchg
or
clc
or
lea
add
xchg
jmp
mov
test
lock
inc
dec
and
movsl
add
mov
and
xchg
out
cwtl
inc
push
cs
add
hlt
mov
jns
popa
es
int3
mov
pop
pop
lock
sti
ret
cld
sub
mov
xchg
shl
xchg
mov
and
mov
jne
and
fsubl
fnsave
push
sbb
xchg
cmpsl
inc
std
or
xor
or
and
dec
inc
arpl
xor
mov
in
out
pop
mov
jg
xchg
movsb
jbe
lea
repnz
lock
sbb
repnz
cmpl
loope
sar
arpl
mov
mov
xchg
cli
jo
and
inc
inc
and
xor
jns
decl
dec
xchg
test
pop
pop
or
mov
xor
scas
cmp
add
xchg
xchg
dec
add
add
ds
xor
pop
push
push
cmpsl
mov
or
or
out
xchg
sar
sbb
aam
sarb
pop
cmp
add
lret
inc
push
fistpll
je
or
add
mov
call
dec
into
sbb
sub
cmpsl
sti
cmp
add
mov
jo
jp
les
outsl
aam
push
cs
jo
mov
add
cmp
repnz
sub
dec
dec
sbb
dec
sub
repz
mov
fnsave
rcrl
push
adc
int3
dec
jp
adc
adcl
cmc
cmp
lods
in
ljmp
lock
cmc
and
mov
adc
loop
mov
pop
into
xchg
mov
call
mov
enter
loopne
and
mov
cli
sbb
adc
jb
das
ss
or
stos
scas
add
insb
rcrl
mov
cmp
dec
in
add
mov
inc
adc
mov
and
cmp
out
shll
ljmp
xchg
orl
sbb
rcll
and
xchg
mov
cmp
das
xchg
icebp
cmp
fildll
dec
push
shlb
add
aaa
jne
xchg
push
mov
call
jo
dec
mov
xor
add
cs
in
xor
dec
out
mov
pop
push
inc
adc
xlat
push
cwtl
push
rcr
or
push
add
pop
jle
jp
das
loop
mov
pop
dec
fsubp
sti
test
repz
mov
xchg
int3
stos
and
add
xor
add
dec
pushf
ret
sub
notb
shl
shl
inc
loop
cli
int3
mov
jnp
jmp
int3
in
out
add
das
and
pop
std
clc
stc
push
dec
sbbb
sbb
cmp
pop
lds
cmp
xlat
or
outsl
sbb
lahf
inc
sbb
mov
cld
jnp
popa
es
sub
mov
and
inc
stos
inc
test
cmpb
loop
clc
shrl
add
mov
test
jnp
mov
jne
mov
bound
js
iret
testl
mov
push
xchg
xor
lea
decl
les
jae
jb
pop
aam
sbb
xchg
decb
mov
jle
mov
pop
bnd
gs
je
jo
lahf
lret
sarb
cli
fidivrl
mov
jl
mov
scas
popf
mov
add
add
bound
pop
shrb
es
pop
inc
je
and
sub
addb
loop
imul
out
cmp
insb
and
loop
fiaddl
jle
cwtl
xchg
decl
orl
jecxz
dec
jmp
movsb
lea
xchg
sub
push
adc
pop
aam
int
mov
pop
in
inc
inc
and
pop
sub
pop
pushf
pushf
jne
mov
pusha
mov
mov
mov
add
pop
dec
xor
pop
stos
jge
clc
dec
scas
std
testl
pop
mov
pop
pop
notl
push
or
sub
mov
jg
push
mov
jae
clc
xor
add
add
in
xchg
cwtl
mov
dec
pop
mov
xchg
mov
and
push
imul
subl
ljmp
sbb
sub
inc
push
outsl
fidivrl
jmp
jne
sti
fs
cltd
inc
push
filds
pop
out
loop
or
sbb
popf
cli
adc
cmp
sub
jg
ret
cmpb
and
sbb
test
orl
xor
cmp
jb
xchg
divb
adc
in
pop
sub
jge
shrb
jg
pop
cmp
dec
insl
sti
ret
adc
push
addr16
lock
push
pop
ret
push
sub
clc
dec
data16
push
call
int3
push
test
dec
mov
pop
test
inc
dec
test
out
mov
inc
jae
sbb
pop
jge
mov
xor
fldenv
mov
jae
xlat
mov
leave
jnp
clc
xor
push
repnz
in
lock
or
push
xchg
in
cld
mov
sub
js
gs
sbb
xchg
ret
pop
ds
in
or
push
pop
scas
call
fsubrp
outsb
xchg
ffreep
scas
mov
jecxz
or
mov
sub
push
aaa
sbb
movl
jl
inc
lret
lret
iret
jmp
pop
js
sub
nop
or
pushf
mov
xlat
out
and
cmovbe
jmp
jae
out
cmpsb
xor
push
std
in
fimuls
fs
xor
adc
and
add
fstp
sub
leave
mov
mov
push
mov
insl
fdivrl
add
jl
jne
inc
test
jnp
mov
movl
daa
sbbb
and
xchg
add
mov
mov
fdivrp
sub
xchg
stos
mov
test
sub
pop
bound
pop
in
jl
mov
dec
fdivrp
pop
xor
push
xchg
push
gs
pop
push
sbb
adc
js
sub
icebp
in
xchg
fisubrs
cmp
sbb
arpl
cld
push
pushf
imul
into
or
and
mov
jmp
jae
loope
xor
les
fdiv
xor
maxps
fisttpll
stos
lds
mov
mov
jae
sub
ja
insl
mov
push
sbbb
add
xor
jge
fcoml
mov
push
adcl
jb
xchg
iret
jo
stos
inc
aaa
ljmp
mov
jne
imul
pop
roll
xchg
ret
out
jne
inc
adc
outsl
and
inc
cmp
mov
or
mov
movsl
fdivl
jmp
jae
add
insl
lcall
cmpsb
ds
lret
ficoms
xchg
mov
int
mov
enter
and
imul
and
pop
out
mov
pop
into
pop
lahf
pusha
jb
jne
xor
jle
les
lret
jo
outsl
cmpsl
imul
sub
sub
sbb
fstpl
loopne
pop
push
pop
and
mov
ss
ficompl
push
push
mov
lods
out
xchg
adc
lods
enter
cs
outsb
mov
ret
sbb
out
imull
push
mov
xchg
imul
dec
cvttps2pi
nop
dec
test
sub
add
inc
jge
fistpll
pop
xchg
imul
stc
or
sbb
push
int
bound
aas
jns
out
ficompl
cwtl
jl
adc
xor
rcr
sub
inc
dec
cmp
test
xchg
iret
cmpsb
cltd
xor
out
das
xor
out
or
mov
and
sti
stc
xor
inc
dec
adc
das
pop
aad
cmc
stos
sarb
inc
movsl
pop
daa
mov
push
arpl
xor
test
mov
inc
mov
js
mov
sahf
adc
les
cmovge
sub
out
out
gs
pushf
aad
pop
cld
xchg
mov
fwait
cmp
jl
daa
lock
jbe
sub
shlb
sub
iret
sbb
xchg
cld
cwtl
xor
add
sbb
xchg
sub
inc
out
sahf
mov
int
in
cpuid
pop
mov
mov
in
push
fdivl
test
sub
enter
sbb
aad
xor
cltd
dec
push
hlt
inc
pop
push
add
push
ljmp
repz
insb
inc
enter
jmp
sub
xchg
inc
pop
sahf
sti
adc
fwait
mov
sub
pop
pop
in
cltd
lds
sbbl
add
xor
mov
lret
add
ss
bound
push
ss
fstps
sahf
xchg
movsb
nop
and
lods
jne
or
movsb
ret
dec
and
dec
lea
cmp
stc
xchg
test
addr16
adc
add
gs
adc
sbb
add
mov
cmc
lret
imul
sub
loopne
inc
and
mov
pop
push
pop
enter
lods
dec
movsb
daa
lods
mov
or
dec
jnp
int3
cmp
cmp
lods
push
dec
or
mov
clc
jns
in
add
xchg
lret
sbb
mov
and
xchg
mov
int
push
lret
pop
mov
movsb
mov
cmp
movsb
dec
sub
mov
scas
xor
out
sbb
es
fs
das
std
insl
es
fwait
push
mov
pmaxsw
sahf
fiadds
les
add
inc
out
push
mov
xor
int3
fsts
add
jnp
xor
sti
add
mov
inc
mov
lret
jecxz
jp
mov
out
mov
lea
inc
adc
aam
pop
mov
xor
and
mov
les
xor
js
movsl
or
mov
sub
aad
mov
xchg
dec
gs
stc
into
imul
cmpb
adc
sar
notb
cmp
adc
ljmp
addr16
mov
test
cli
mov
test
shll
frstor
lcall
fdivl
stos
jb
and
mov
jge
sbb
enter
push
gs
outsl
cmp
pop
insl
pop
testb
cltd
mov
sbb
out
rclb
or
push
xchg
aaa
xor
pop
shrb
data16
call
es
mov
je
mov
adc
es
fsubrl
and
cmp
addr16
in
sub
cmp
movsl
and
lcall
inc
fs
xor
les
add
pop
mov
xchg
inc
addr16
mov
es
fldt
pop
sbb
push
dec
xor
dec
aad
std
pop
movsb
jl
fidivl
push
dec
sbb
add
int3
sti
sub
push
mov
outsb
push
inc
ja
out
lret
adc
dec
insl
sub
iret
sub
push
mov
xlat
adc
enter
fwait
lods
and
imul
push
into
sub
push
xchg
mov
mov
addr16
jecxz
aad
xchg
arpl
jg
pop
sbb
fisubl
pop
out
stos
sbb
xor
sahf
fst
lcall
lret
sbb
xor
xchg
rorb
sub
add
mov
pop
in
mov
scas
mov
pusha
shrb
xchg
loop
jb
fisttpl
mov
or
cwtl
inc
xchg
sub
and
enter
scas
sub
outsl
dec
popf
rcr
lods
cld
and
xchg
add
cmpsb
cs
insl
addl
sbb
outsb
xor
aam
lock
push
nop
fxam
or
test
add
xlat
push
dec
inc
lods
pop
xchg
push
dec
movsb
dec
xor
or
pop
cs
ret
int3
push
dec
lahf
jmp
cltd
outsb
push
test
mov
je
repnz
jno
out
das
push
xchg
dec
inc
sbb
cmpsb
rcll
test
pop
pop
push
mov
add
in
int
ficoms
test
rcll
xchg
lods
add
inc
dec
jns,pt
and
dec
lahf
sbb
ret
lock
ret
lahf
test
jmp
push
or
and
xor
mov
sbb
mov
repnz
push
das
fisttpll
aas
mov
jb
rcl
jo
xchg
insl
lret
xchg
push
push
push
addl
call
mov
loope
inc
push
or
pusha
mov
call
pop
pop
in
fs
mov
pop
xchg
out
xchg
sbb
hlt
mov
push
divl
fsubl
or
inc
mov
inc
ss
loopne
fs
jno
imul
loop
xor
cmp
inc
or
jle
fmulp
jne
in
cmc
jno
ret
adc
insb
testb
xorl
dec
gs
dec
mov
icebp
adc
lret
push
push
leave
lods
pop
repz
aas
mov
aaa
fwait
loopne
cmc
cmp
dec
lahf
cltd
push
inc
jnp
es
movsl
xor
loopne
sbb
test
icebp
sbb
sub
out
int
rcrb
movb
pushf
cltd
cmp
pusha
add
out
les
mov
ljmp
mov
popa
pop
iret
fldenv
pop
stos
add
es
mov
dec
inc
mov
mov
add
shlb
into
sbb
imul
sahf
inc
scas
fnstsw
fsubrl
cmp
jnp
jecxz
sbb
mov
pop
lds
sub
push
aas
scas
dec
and
std
sbb
lcall
cmp
test
in
mov
repnz
int3
lea
jnp
mov
in
push
cmp
pop
add
inc
ljmp
pop
mov
push
lock
pop
repz
dec
fs
lds
bound
adc
xor
adc
or
aam
inc
shr
mov
movsl
pushf
inc
icebp
stos
dec
shll
fimuls
mov
dec
rcll
inc
shlb
inc
sti
adc
aaa
jo
aas
gs
mov
es
dec
stc
inc
pop
out
inc
sub
jo
mov
add
mov
push
jmp
jmp
sub
pop
inc
lds
xchg
or
xor
dec
xor
cmp
iret
jge
out
or
in
cwtl
out
cmp
into
sub
popf
sti
inc
adc
mov
mov
fdivrl
add
popf
cmp
sbb
test
lods
fnstcw
cs
add
jb
maxps
cmpsl
mov
ljmp
mov
insb
insb
fistpl
add
xchg
lods
adc
fwait
jo
das
dec
jbe,pt
int
lahf
cli
data16
lea
cli
xchg
push
mov
loop
sub
lock
ret
sub
lods
mov
adc
sbb
inc
inc
shrb
shlb
pop
mov
push
je
popf
cmp
movsl
push
dec
push
dec
sar
cli
mov
pusha
pop
shrb
dec
mov
je
and
iret
cld
mov
daa
mov
sarl
scas
hlt
push
xchg
jge
pop
ljmp
out
hlt
cmp
mov
or
push
ret
pop
lods
cltd
mov
into
mov
stc
data16
sub
icebp
push
add
int
cltd
sti
inc
push
xor
lods
mov
xchg
movsb
inc
xchg
lock
lret
pop
inc
jmp
insl
repz
repz
or
in
dec
push
leave
outsb
mov
jae
add
dec
mov
cltd
pop
jbe
scas
mov
mov
push
ljmp
stc
pop
sbb
or
cltd
and
jb
inc
rolb
mov
sub
faddl
shrb
dec
mov
mov
dec
nop
out
adc
push
shrb
out
aam
pop
hlt
pop
incb
lret
mov
sbb
lcall
mov
popf
sahf
lahf
gs
lods
enter
or
dec
shl
stc
gs
and
movsb
and
clc
std
fwait
lods
cmpb
ljmp
in
jae
xchg
sbb
insb
jbe
call
jecxz
mov
outsb
or
push
ds
test
add
jno
lods
movsb
sbb
inc
inc
in
sahf
dec
aad
add
sbb
mov
mov
adc
mov
xor
mov
stc
idivl
mov
iret
jno
insl
dec
lods
dec
mov
dec
jecxz
jnp
test
cwtl
movsl
cmp
lret
pop
mov
dec
sbb
lcall
clc
fcomps
and
and
or
pusha
daa
mov
rclb
xchg
idivl
out
inc
cmpsb
add
inc
into
xor
sub
rcrl
pop
xchg
pusha
sub
ret
fsubrs
push
movsl
jmp
mov
scas
or
mov
jl
sarb
clc
bound
ficoml
or
jb
into
aaa
sub
jae
rcll
das
dec
adc
add
sahf
dec
ret
dec
aas
sbb
arpl
dec
jno
rolb
sbbl
pusha
push
sar
or
mov
push
mov
in
xchg
jle
xlat
sub
out
push
xchg
xor
call
jg
cmp
es
js
mov
jmp
scas
mov
dec
cmp
add
dec
arpl
dec
cltd
lret
mov
aad
cs
push
inc
xchg
inc
mov
call
mov
pop
mov
fisubs
mov
lods
add
scas
push
push
pop
and
and
iret
adc
and
gs
inc
pop
jnp
outsl
lea
bound
jns
pxor
test
fisubrs
repz
and
push
mov
sbb
cld
push
dec
stc
int
add
mov
push
sub
lcall
mov
sub
js
and
jmp
orl
mov
cs
aaa
test
jmp
mov
imul
fs
gs
call
mov
into
sahf
ja
popa
jo
lcall
in
test
pusha
lret
inc
add
mov
push
dec
push
cmp
loope
out
sub
testl
xchg
in
add
loopne
xchg
xor
movsb
mov
cltd
pop
ss
pop
mov
mov
loopne
mov
mov
jb
rcrb
sarb
loope
jg
les
or
popa
out
jbe
repz
cmp
orl
adc
cwtl
bound
cld
pop
jb
jmp
push
pop
in
es
jnp
inc
js
pop
or
adc
push
cmp
es
push
shl
les
cmp
aas
mov
outsb
inc
cmp
or
fdivrs
adc
sbbl
repz
add
mov
insl
mov
mov
movsl
mov
outsb
ja
pop
stos
popl
mov
roll
push
xchg
mov
sbb
cmp
push
mov
iret
and
xor
lret
cwtl
pop
rolb
je
sahf
test
data16
sbb
sti
jne
dec
pminsw
stos
xchg
push
xchg
jg
loopne
out
and
aad
adc
mov
mov
jp
ret
mov
push
clc
and
jg
lock
hlt
int3
imul
jge
xchg
in
movsl
jmp
scas
inc
inc
call
and
loopne
mov
cwtl
xchg
dec
insl
sbb
mov
add
or
testl
movsb
cmp
inc
pop
mov
pop
jae
or
int
jmp
ret
data16
cmpsl
test
xchg
inc
dec
into
mov
in
test
sti
pop
test
divb
xor
stc
ret
dec
call
dec
pusha
push
outsb
sbb
dec
in
out
aam
xor
subl
and
xor
adc
xchg
lcall
mov
js
cmp
sti
dec
jno
int3
xchg
popa
int
and
jg
pop
mov
and
in
sti
fsubl
add
xchg
repnz
and
test
xor
daa
xchg
ja
lret
rolb
ret
dec
or
mov
xchg
cmp
or
addr16
stos
test
pushf
dec
lods
mov
ret
insl
xor
jns
out
cmp
xchg
jl
cmpsl
scas
sbb
sti
sub
add
ds
mov
lea
out
lods
pop
cmp
push
movsl
jecxz
adc
mov
bound
sbbb
imul
mov
mov
jno
xlat
cmc
aam
popf
pusha
bound
push
xchg
xor
xor
fdivl
mov
test
and
fldenv
es
adc
inc
mov
cmp
sub
aaa
lods
mov
adcb
xor
xor
mov
pop
and
jecxz
mov
fcomp
into
jg
repz
mov
or
dec
mov
in
outsb
inc
or
add
hlt
mov
add
ja
inc
inc
leave
std
inc
fsubl
dec
mov
iret
dec
in
fcomps
or
xchg
rcr
cwtl
add
or
jl
mov
pusha
inc
imul
daa
jb
inc
out
mov
in
push
jl
lds
jne
sub
add
pop
cmp
dec
psubsb
adc
mov
test
sub
lods
lods
leave
adc
and
dec
mov
xor
mov
mov
xor
mov
inc
adc
xor
mov
fsts
push
das
or
xchg
sub
scas
fsub
pop
xchg
sbb
mov
add
jne
loopne
faddp
test
cmp
mov
loope
jmp
xor
jecxz
push
pop
imul
mov
outsl
shll
jns
jmp
mov
cmp
pop
sbb
stos
push
cs
mov
mov
mov
add
mov
call
xor
mov
xlat
sub
jb
push
insb
test
ficoms
fisubl
popa
dec
pushl
jb
push
lock
pop
or
jecxz
fmulp
dec
adc
lods
cmpsb
jno
je
mov
sbb
cmpsb
push
repnz
sub
sub
add
mov
iret
push
in
adc
loop
pop
popa
out
push
daa
lret
mov
in
popa
jno
and
xchg
lods
sbb
inc
inc
or
pop
fadds
dec
enter
mov
test
xor
pop
arpl
mov
decb
mov
out
test
cli
not
mov
lcall
dec
mov
jbe
ljmp
adc
mov
dec
dec
push
pop
mov
mov
adc
cld
das
jg
rorb
les
push
aad
fldcw
push
xchg
subl
jmp
bound
push
and
adc
lds
rcrl
cmp
loope
mov
out
rcll
and
mov
sub
or
mov
insl
cmp
xchg
xchg
cmp
test
stc
xchg
das
mov
mov
jo
call
adc
jle
cmp
pop
std
hlt
in
push
inc
enter
scas
pop
xchg
jns
outsb
popf
scas
push
and
repnz
xor
fst
aad
mov
testl
div
pop
fnstenv
mov
movsb
dec
mov
push
cmp
pop
jne
pop
xlat
iret
inc
repz
adc
xchg
jmp
lock
xchg
scas
sub
out
ds
popa
loope
rcrl
dec
pop
jl
rorb
inc
lds
inc
sub
mov
mov
xchg
les
test
psrld
inc
push
push
loope
push
je
stos
mov
addr16
rorl
mov
loope
insb
repz
mov
adc
nop
cld
mov
mov
mov
lret
jle
ret
into
aam
jae
fmul
scas
and
mul
sbb
test
addb
aam
push
repnz
mov
mov
fucom
addr16
jl
sbb
jecxz
in
das
mov
adc
adc
add
ret
insb
rorl
and
dec
push
jle
popf
dec
insb
test
aad
int
and
jmp
int3
call
in
adc
movsl
enter
fcmove
loopne
push
pop
jge
popf
mov
and
fdivrl
loop
xorl
sbb
shl
cmp
push
movsb
push
jp
cmp
test
fwait
adc
fistl
cmp
jbe
pop
insl
sub
out
push
inc
mov
addb
push
inc
sub
xor
les
jno
mov
pop
gs
insl
mov
mov
sbb
out
jmp
xor
lret
loopne
cmp
pop
loop
lahf
mov
mov
lahf
mov
jb
pusha
ret
in
xchg
pop
mov
jne
mov
enter
lea
mov
add
nop
xor
xor
test
pop
adc
push
push
xor
jle
sbb
popf
aas
loopne
lea
out
daa
leave
adc
add
cmp
push
stos
mov
fbstp
pop
jmp
mov
adc
xchg
push
int
and
jae
out
xchg
xor
push
jmp
xlat
xor
pop
cmpsb
out
dec
jle
sub
adc
lret
ficompl
std
sub
cmc
pop
cli
and
cmpsl
push
cwtl
inc
cmp
int3
subb
sbb
stos
sbb
jge
shr
in
add
mov
push
loope
push
sar
or
movsb
xchg
shlb
sahf
in
or
loop
push
test
in
mov
cmp
dec
dec
mov
pop
sbb
leave
aam
pop
xchg
das
xlat
add
nop
insb
push
dec
adc
repz
or
mov
aam
jecxz
inc
mov
xor
jge
call
inc
and
mov
ret
pop
and
jne
pop
dec
shlb
out
pop
cmp
test
and
jmp
mov
inc
xchg
out
push
dec
add
loop
out
sbb
idiv
dec
nop
ja
je
mov
fbld
mov
xor
enter
xor
scas
sub
scas
stc
fs
dec
xor
push
pop
cmp
lock
loope
push
out
sbb
ds
pop
scas
add
mov
in
pushf
daa
cs
push
mov
inc
xor
andb
movsl
xchg
inc
into
dec
dec
loop
roll
pop
mov
adc
aam
sub
dec
mov
ja,pn
les
mov
jmp
ja
cli
xor
outsl
fnsave
push
jb
inc
in
xchg
fdivl
jp
cld
xchg
ljmp
hlt
push
sbb
or
repnz
into
mov
cmc
add
mov
jnp
xorb
addr16
pop
pop
sti
lcall
outsl
dec
sub
shr
or
enter
inc
pop
testl
pop
idivl
imulb
mov
out
xor
sahf
pushl
in
pop
push
int
cpuid
test
push
cmp
cs
outsl
aaa
cli
rcr
xorb
jg
jne
mov
fisubrs
sub
cmp
cmc
movsb
imul
loopne
xchg
inc
inc
lds
movsl
pop
andl
dec
mov
or
jmp
mov
jecxz
in
out
idivl
outsl
sbb
xor
test
jbe
out
mov
fisubs
scas
xchg
pop
or
xchg
xchg
xchg
cwtl
aaa
mov
push
adcl
out
inc
test
jno
int
mov
push
repz
pop
popf
adc
inc
sub
adc
fcmovb
push
cmp
push
outsl
ljmp
and
lock
cmp
cmp
jne
push
jecxz
push
and
jbe
inc
push
ljmp
pop
cmp
mov
rorl
mov
add
popa
call
sub
sbb
cmp
stc
cli
out
xchg
imul
and
and
fldt
rorl
sub
dec
clc
mov
mov
and
sub
jns
sbbl
xchg
mov
push
shll
mov
mov
and
ss
addr16
rcrl
test
imul
out
mov
imul
mov
je
orb
mov
hlt
lret
daa
dec
add
push
cltd
cmp
lods
add
adc
fmull
andl
out
out
jg
aaa
rolb
outsb
cmp
cmpsb
sbb
stc
dec
repz
cmp
xor
push
add
jge
inc
mov
adc
inc
xorb
mov
sub
test
insb
clc
sbb
fnstsw
inc
mov
test
loope
cmpsl
or
scas
popf
jl
sbb
in
and
sbb
test
adc
mov
cmp
push
cs
sub
cmpsl
lahf
in
idiv
mov
mov
pop
sbb
push
stc
addr16
xchg
movsb
mov
testl
cmpsl
adc
sti
loope
movsl
xchg
mov
sbb
push
das
mov
sbb
sub
test
pop
das
xchg
cmpl
faddl
movsb
outsb
out
add
sub
cmc
mov
outsl
pop
pop
outsl
lcall
inc
mov
mov
mov
push
stos
aas
in
enter
jne
fbld
int
xor
icebp
xor
jge
int
dec
int3
cli
sbbl
sti
test
cmp
push
das
addr16
pop
sbb
jns
mov
and
pop
add
jecxz
add
mov
pop
and
int
sbb
mov
cmpsb
or
xchg
push
cli
xchg
mov
call
imul
imul
fsubs
into
pop
and
sbb
sbb
inc
mov
into
outsl
or
add
dec
pop
or
into
mov
inc
call
push
cmp
mov
cld
sbb
aaa
bnd
dec
call
out
insl
cwtl
dec
or
dec
incl
mov
or
dec
movsl
push
dec
mov
jno
aam
in
ja
hlt
jnp
mov
push
push
loope
pop
fninit
push
jnp
sti
cwtl
xor
dec
mov
aam
cmp
pop
arpl
out
dec
add
xchg
enter
cld
fbld
out
std
ds
mov
xchg
jmp
dec
cmp
iret
rclb
xorl
pop
fbld
xor
addb
imul
adcb
shrb
movsb
mov
mov
es
nop
adc
pop
arpl
arpl
jne
inc
and
push
ds
or
inc
jne
filds
es
mov
rcrb
lods
sti
push
int3
dec
call
cmp
cmp
fcomi
test
jbe
popa
fmulp
int3
pop
in
lahf
negb
repz
mov
xchg
aad
js
popa
push
inc
movsb
jecxz
adc
rclb
adc
not
jg
mov
push
fcomps
pop
insl
mov
jl
lock
repz
mov
negb
xchg
pop
int3
jge
mov
add
push
xor
out
jns
push
in
in
insb
pop
push
cmp
xor
sbbl
jns
lret
mov
mov
dec
xchg
adc
imul
xchg
imul
jl
popa
mov
mov
push
dec
dec
push
and
pop
cmpsb
arpl
xor
cmp
mov
jae
adc
popf
xchg
stc
dec
adc
and
shrb
mov
add
cmp
cmp
rcrb
sbb
pop
cmp
outsb
mov
stos
adc
fldt
mov
push
xchg
push
aad
pop
or
sti
shlb
aad
mov
imul
adc
xor
in
rol
in
jno
rclb
mov
push
jg
and
xchg
pusha
inc
xchg
xchg
subb
icebp
repz
jmp
pop
in
dec
push
cli
ficoms
sahf
pop
jge
in
xor
sub
adc
mov
sub
movsl
out
je
mov
inc
jecxz
pop
jo
in
in
incb
adc
and
mov
sub
test
cmp
in
jno
fstl
imull
push
pop
pop
scas
mov
xor
aad
pop
sti
mov
push
jno
rcll
popf
pushf
sbb
adc
call
in
fistps
mov
and
ss
ret
and
lea
fisttpll
jp
or
mov
pop
cmp
loope
movsl
std
sbb
sahf
ja
dec
call
mov
sbb
cs
ja
mov
lods
clc
xchg
add
add
js
pop
lret
xchg
sub
sub
cld
cmp
add
and
or
mov
stos
test
sbb
fldenv
sahf
adc
lods
rcr
mov
popa
push
sub
sub
xchg
mov
loope
test
inc
xorb
stc
adc
sbb
aaa
lret
hlt
mov
push
adc
movsb
push
test
pop
sbb
xor
cli
pop
push
fmuls
popa
cmp
ljmp
lock
mov
sub
lods
push
aas
jge
sarl
loope
in
sbb
cwtl
in
push
mov
pop
pop
out
cmp
sahf
ljmp
scas
pop
cmp
jnp
mov
jb
push
je
mov
and
xchg
test
push
popf
mov
sbb
stc
jl
jg
ret
adcb
stc
mov
enter
pop
fistpll
aad
jle
and
decb
pop
pop
dec
inc
push
test
push
add
subl
push
adc
popf
repz
jl
pop
mov
inc
pop
ret
pop
sahf
int
cs
aas
aaa
js
in
out
pushw
and
xchg
inc
addr16
lcall
mov
cmc
inc
sbb
das
ja
and
mov
cmp
insl
inc
cmp
das
adc
test
repz
loope
movsb
add
fistl
pop
push
mov
icebp
push
xor
jnp
fwait
push
add
push
xchg
cmpsb
ja
fcmovbe
mov
pop
jg
xchg
aam
sbb
mov
jecxz
or
movb
xchg
outsl
dec
sub
push
insl
movl
push
insb
push
stos
mov
bound
cmp
add
sbb
scas
xlat
sbb
xchg
movq
int3
mov
inc
int3
push
sarl
int3
imul
adc
loop
lret
xor
lods
sub
mov
push
xchg
jmp
mov
call
inc
push
aas
loop
lods
dec
loopne
sti
xchg
aas
insb
arpl
pushl
sub
cwtl
inc
lcall
outsl
adc
jns
loope
clc
add
pop
or
xchg
xor
es
push
xchg
sbb
test
loope
pop
dec
fdivl
cmp
xchg
inc
popa
test
and
arpl
push
mov
pop
push
jmp
stos
out
in
leave
fidivrs
dec
cmpsl
mov
and
popf
orb
out
cmpsl
bound
outsl
mov
mov
jmp
jb
hlt
gs
lds
xchg
push
adc
lcall
scas
pop
orl
or
stc
int3
mov
shll
ja
incl
push
gs
cltd
imul
imul
push
xchg
or
mov
fldenv
pop
enter
negb
xchg
jle
push
shl
mov
in
sbb
push
shl
loopne
xchg
aaa
daa
in
in
incb
adc
pusha
fwait
enter
inc
cmc
rcrb
pop
cmc
push
into
mov
shrl
ficomps
pop
arpl
xchg
dec
leave
xor
or
pop
cmp
mov
push
mov
xchg
lods
sar
jl
cmp
xchg
pop
stos
dec
sub
jbe
xchg
pop
mov
xor
or
mov
adc
call
pushf
scas
imul
mov
outsl
cmp
mov
xor
xor
cltd
loop
aam
movsl
or
jle
imul
cmp
mov
mov
mov
cld
sub
adcb
sub
dec
movsb
repz
daa
lods
mul
popa
xlat
aad
pushf
ret
fs
and
sbb
ja
in
repz
ds
stos
loope
insb
add
pop
ret
in
jo
xchg
movsb
and
or
add
lret
dec
jb
shrb
add
mov
rcrl
sar
or
int
adc
adc
clc
not
std
xor
repnz
frstor
cmp
nop
test
stc
lea
push
addl
xchg
jnp
and
mov
repnz
iret
push
cwtl
xor
lock
push
sahf
cld
pop
push
inc
stos
mov
push
stos
add
pop
paddd
or
adc
adc
cmp
icebp
adc
jl
rcll
push
xlat
fs
jecxz
mov
xchg
sbbl
test
xor
pop
jp
movsl
inc
inc
push
or
out
dec
inc
rcl
lahf
mov
sbb
das
std
xor
pop
lods
aam
xchg
cmp
mov
ljmp
pop
in
or
pop
and
mov
xchg
hlt
fmuls
push
in
sub
loopne
push
test
cld
dec
lock
pop
dec
sub
jmp
xchg
mov
ds
mov
or
movsb
jns
pop
testb
aad
xchg
xchg
insb
and
add
decb
cmpsl
cltd
mov
cmp
fisubl
cmpsb
dec
lcall
sahf
shll
jmp
stos
dec
out
lret
sbb
push
pop
mov
ds
out
xor
movsl
das
imul
es
jo
shlb
xor
cmpsb
fs
iret
jbe
push
fisttpl
leave
das
testb
daa
pop
es
shrl
sbb
jns
push
les
andb
movsb
out
enter
hlt
int3
push
enter
mov
adc
push
scas
aam
gs
xchg
icebp
orl
sarl
mov
outsl
sub
inc
or
push
addr16
adc
loopne
push
and
and
jns
xchg
xchg
mov
sub
jns
je
stos
and
daa
call
jle
sbb
rcrl
sub
ds
add
push
sub
dec
test
dec
mov
clc
adc
jecxz
jmp
lock
cmp
or
mov
mov
cmp
mov
dec
add
cwtl
stc
test
xlat
rorb
stos
insb
or
xlat
or
out
fsubrs
aas
mov
jae
ret
xor
test
out
sub
pop
inc
test
mov
sub
and
mov
jb
push
int
fsubrl
push
mov
ret
cmp
fnstsw
fisttps
adc
push
mov
push
xlat
daa
adc
jbe
mov
call
jg
aam
xchg
lcall
adc
push
sbb
mov
push
fwait
xor
mov
popf
loope
or
inc
das
fs
mov
iret
loopne
pop
into
sti
mov
movsb
xchg
and
loop
push
add
fidivrs
repnz
test
ljmp
mov
pop
push
inc
nop
icebp
out
fiaddl
sub
mov
and
sub
xor
lcall
or
sub
and
xor
clc
fildl
pusha
cld
adc
mov
in
pop
mov
lcall
pop
icebp
pop
xor
xor
add
inc
xor
popf
out
out
sbb
cmpsb
sbb
dec
mov
inc
adc
add
dec
push
add
ja
dec
cs
jp
sub
pop
jo
leave
xchg
inc
jo
push
or
fs
adc
cmp
dec
pop
adc
or
sub
add
scas
shlb
lods
addl
pop
cmp
or
das
out
call
cld
imul
push
adc
mov
test
and
movb
adc
pop
mov
push
loop
call
test
jecxz
cmp
push
aad
cltd
adc
pop
les
add
push
mov
pusha
ja
sbb
cwtl
push
orl
add
insl
xchg
mov
arpl
xchg
xchg
jne
call
mov
add
add
jge
or
lret
fistl
mov
jb
xchg
in
push
insb
inc
out
in
xor
pop
jne
mov
ljmp
push
das
aam
test
inc
out
sbb
nop
push
jae
and
sbb
push
dec
and
fmuls
jbe
push
cmp
cld
fstl
in
xchg
or
adc
clc
mov
mov
mov
mov
in
rcll
cmp
xchg
xchg
aad
dec
adc
arpl
addr16
pop
dec
sbb
mov
mov
jno
xchg
das
iret
bound
add
jge
fsubl
lret
dec
mov
popf
push
lahf
sub
mov
adc
mov
pushf
push
xorb
into
andl
sbb
lods
push
addb
push
lock
dec
dec
push
insb
mov
push
push
gs
cmpsb
xor
int3
rol
jo
push
arpl
les
in
fdivl
push
jae
mov
pop
pop
mov
loop
test
fildll
clc
or
imul
cmpsl
jnp
ret
lods
sbb
dec
in
xor
adc
repz
pushf
push
nop
lahf
add
push
ret
iret
dec
rcll
ds
push
aaa
mov
ds
mov
cmc
jg
push
push
std
push
data16
lahf
pop
sub
adc
pop
mov
jle
ds
xchg
inc
mov
mov
cmpsl
sub
cmpb
pusha
fidivl
xor
push
es
nop
jnp
aas
fisttps
mov
fsubl
xchg
pop
mov
lea
test
loopne
imul
movsl
loope
pusha
ljmp
call
out
xor
jns
imul
or
imul
jecxz
cmpsl
push
push
fcoms
mulb
sbb
notl
jmp
int
clc
dec
sub
popa
rcr
and
mov
sbb
lods
rorb
and
mov
jae
sub
ss
pop
push
and
adc
mov
sahf
jl
rolb
jg
scas
insb
mov
mov
jns
mov
jne
outsb
rcrb
lahf
mov
imul
jns
sub
stc
leave
prefetch
and
ss
sbb
mov
jle
or
sub
cwtl
push
pop
outsb
mov
xchg
inc
pop
sub
stc
repz
faddl
mov
in
jp
mov
pop
lahf
popa
lret
stos
add
sub
fsub
cmp
je
mov
dec
cmp
and
call
pushf
test
pop
daa
cwtl
btc
in
stc
push
mov
xchg
jmp
test
sbbb
fmull
or
inc
mov
and
inc
lods
cmc
faddl
dec
jns
stc
dec
cwtl
inc
out
sti
fnstcw
mov
out
fimuls
sar
imulb
inc
out
mov
mov
push
aas
sbb
int
je
xor
adc
push
mov
push
mov
adc
jmp
leave
scas
add
out
cs
inc
pop
pop
into
in
sub
aaa
sarl
jmp
and
loope
call
mov
cmpsl
fisubl
rclb
xor
or
repz
js
and
out
imul
push
jbe
jp
lds
add
push
idivl
and
cmpsb
mov
adc
jo
push
fs
mov
adcb
popa
xchg
fimuls
arpl
push
not
aaa
push
jbe
dec
lods
int3
movsl
out
jo
xor
add
mov
xor
popa
rorb
fcomps
mov
push
popa
sbb
sahf
popf
push
push
xchg
cmpsl
je
lcall
sbb
adc
jns
inc
jle
pop
lods
cmp
pop
add
loopne
push
jb
xorl
cmp
jo
jne
or
xlat
jb
adc
jle
aad
xchg
test
or
rcrl
mov
jmp
jmp
push
adc
gs
sbb
adcl
jb
pop
pop
xor
and
and
lcall
xor
popa
xchg
mov
adc
lds
popf
out
out
mov
adcb
dec
in
and
sub
dec
sbb
xlat
jbe
pop
jecxz
inc
pop
mov
lret
cmp
and
or
call
pop
movsb
ljmp
pop
adc
insb
pop
shrb
sub
aas
mov
lods
imul
shrl
mov
sub
jl
jae
sbb
fs
js
int3
or
sahf
mov
lods
repz
add
mov
inc
std
ficoml
sub
cmpsl
mov
xor
push
and
aas
out
movsb
sti
cmp
jns
pop
aad
jmp
add
pusha
lods
mov
dec
aad
ror
loop
mov
jp
adc
or
shll
inc
add
mov
rcrl
orl
mov
xchg
adc
jae
fldt
and
jns
mov
int3
nop
jg
push
xor
jle
out
shll
xchg
push
shr
pop
cmp
mov
ljmp
xor
repnz
push
mov
cmp
leave
xor
sbbl
in
push
cmp
sub
cltd
cld
jo
sbb
jp
aad
push
push
test
adc
lcall
aad
test
inc
add
cmp
into
cmpsl
std
jecxz
push
add
loope
ret
push
enter
lock
sbb
mov
and
ljmp
int3
pop
insb
rcll
inc
ret
pop
sar
sbb
cwtl
data16
mov
jns
outsb
cmp
push
les
dec
pop
pop
enter
push
and
outsl
cmp
lcall
out
popf
inc
xchg
test
inc
xor
std
mov
mov
push
scas
inc
pop
cmp
idivb
orl
dec
aad
cltd
push
mov
in
movsb
std
aas
sub
jno
aad
outsl
add
in
inc
xor
adc
inc
stc
pop
lret
mov
push
lahf
mov
les
pushf
in
repnz
add
mov
jbe
pop
into
xchg
movsl
daa
shlb
mov
inc
mov
cmp
shll
aaa
push
pop
imul
cmpsb
mov
jns
cwtl
jg
ret
in
cmc
push
push
push
arpl
sub
and
pop
imul
cli
adc
test
push
mov
sbb
fwait
and
adc
lods
addr16
cmp
and
dec
add
adc
lock
enter
mov
pop
xorl
xor
jmp
pop
cs
out
dec
xchg
and
push
mov
push
sbbl
mov
xchg
dec
xorb
fidivs
xchg
in
sub
jg
loope
mov
aad
pop
arpl
mov
stc
test
push
push
pop
test
aas
int3
shl
aaa
and
mov
js
mov
and
inc
push
mov
arpl
fcoml
lods
pop
clc
mov
pop
and
outsb
mov
xchg
aaa
mov
in
lret
aam
push
fcoms
and
dec
rolb
je
and
and
lds
lret
jp
in
enter
dec
out
insb
dec
movsl
pop
ja
bound
sarl
test
ss
push
sub
mov
adc
add
or
inc
jp
mov
cs
loope
push
xor
test
or
dec
lods
xorb
repnz
test
aad
lahf
push
mov
iret
add
mov
dec
jae
push
les
icebp
aas
mov
out
add
sbb
adc
mov
aaa
add
scas
push
cmp
push
push
imul
dec
insb
jl
leave
stc
mov
mov
cltd
imul
dec
mov
pop
mov
xchg
lds
insb
jbe
inc
cmp
xchg
popa
test
mov
int3
icebp
and
scas
inc
loope
das
sti
mov
sbb
enter
enter
lea
xchg
in
inc
jmp
fcomps
pop
in
lretw
shl
adc
mov
pop
dec
push
jns
sahf
jb,pn
jl
pop
outsl
test
push
and
out
adc
jp
lcall
lahf
pusha
mov
ja
add
push
in
popa
pop
push
shr
ficoms
push
xchg
add
testl
in
es
mov
in
adc
iret
mov
cmp
and
add
addb
les
cli
loop
test
imul
jmp
push
jl
int3
jnp
mov
add
jp
lea
push
jle
lods
jne
mov
mov
notl
xchg
mov
dec
jle
sbb
inc
xor
aaa
mov
jb
adc
clc
mov
inc
sbb
enter
dec
and
fs
xor
sub
sub
out
fildll
and
or
loop
ret
push
jmp
sti
pop
fists
inc
mov
jmp
lds
lods
sbb
dec
xchg
push
clc
aad
lcall
fsubl
adc
lea
add
xor
mov
cwtl
test
dec
pop
mov
lcall
lods
and
decb
loope
adc
shll
sbb
mov
rcr
mov
mov
loope
xchg
arpl
test
inc
pushf
cmp
mov
mov
adc
mov
and
xchg
or
les
inc
nop
or
push
add
ljmp
xor
push
cwtl
sarl
movsl
insb
or
xchg
pop
xchg
orl
sti
test
mov
les
jnp
stos
shll
lret
xlat
and
add
jp
bnd
cli
sbb
pop
popa
cmp
sahf
xchg
push
xchg
orl
out
jns
loopne
popf
loope
jno
cld
sbb
mov
mov
mov
sarl
into
or
mov
pop
mov
icebp
pop
cmp
dec
inc
dec
xchg
fsub
or
add
iret
movsl
sub
out
xor
je
leave
lods
add
fisubl
test
add
or
neg
call
les
push
int3
sub
dec
dec
in
dec
dec
dec
dec
lcall
aaa
addl
call
fcmovu
ret
lods
cmp
nop
pop
inc
adc
cmp
popa
pop
dec
bnd
daa
shll
in
lret
pop
out
fst
sbb
adc
jae
push
xlat
movl
inc
cmp
and
addr16
adc
ss
out
pop
inc
mov
fsubr
mov
cs
in
fidivrs
jmp
xchg
push
dec
les
xor
adc
xor
aaa
mov
inc
and
mov
mov
add
in
loop
jbe
push
and
dec
enter
sub
mov
aas
push
pushl
inc
inc
push
mov
pop
push
es
push
mov
sub
dec
adc
and
stos
push
xlat
into
or
adc
es
sub
roll
cmp
inc
aad
clc
loopne
adc
adc
cmc
mov
lds
push
sub
sbb
xchg
mov
in
outsb
sbb
mov
iret
or
mov
icebp
jg
ljmp
ljmp
arpl
fisubs
add
loop
xchg
sub
pop
iret
adc
popa
fstpl
mov
xor
mov
cmc
inc
je
in
jb
pop
push
mov
dec
shll
lahf
es
push
loopne
mov
sbb
adc
push
xor
test
shrb
mov
aam
sbb
lea
sub
mov
xor
cmp
cwtl
fmuls
pop
outsl
lods
inc
into
or
jns
scas
cld
push
in
adc
cmp
sub
adc
push
adc
fstpt
xor
mov
scas
pop
mov
pop
gs
stos
mov
xchg
cmp
or
cmp
sarb
jge
mov
sbb
iret
stos
les
mov
sbb
or
pop
icebp
aaa
and
aas
aas
jg
jno
xchg
adc
cmp
adc
loop
mov
mov
xor
gs
jg
arpl
pop
insl
push
push
mov
add
jmp
idivb
mov
sbb
push
fimull
std
fdivrl
adc
sbb
imul
out
sub
out
xor
cld
push
outsb
lahf
push
movsl
cs
jo
sti
movsl
pop
cmp
xlat
into
push
adc
loope
shll
testb
pop
fcmovnb
imul
in
fwait
mov
pop
pop
outsb
xor
stos
cmp
mov
mov
sar
sub
xor
ret
jne
int
scas
adc
mov
mov
out
notl
popa
mov
lcall
xchg
xor
fsub
rcr
cmovge
jecxz
repnz
mov
lret
dec
sbb
pop
mov
inc
push
aaa
push
popa
in
pop
scas
aam
sub
enter
mov
orb
xor
cmpb
push
add
inc
xor
or
cmp
imul
leave
dec
ret
inc
cmp
orb
xor
outsl
mov
mov
cld
inc
pop
or
lods
dec
std
xchg
mov
push
fdivrs
lret
cmp
inc
mov
rorl
adc
mov
xchg
and
ds
or
and
push
fucomp
lret
add
add
pop
popf
aas
hlt
and
int
xor
mov
scas
cld
sub
test
push
aad
ret
fistpll
rclb
negb
pop
or
cmp
xchg
cltd
mov
insb
lahf
ss
inc
les
mov
sub
jb
lea
bsf
dec
xchg
in
add
fists
lea
das
inc
rorb
ret
jne
sbb
stos
or
sbb
pop
out
sbb
sbb
adc
mov
std
adc
pop
les
sbb
mov
add
cs
imul
cmp
popa
mov
iret
fimull
jno
ja
and
fldl
movsl
dec
rolb
out
pop
dec
add
js
and
mov
out
mov
aaa
or
push
push
mov
aaa
cmpsb
push
dec
inc
lahf
jno
dec
imul
pusha
xchg
clc
loop
and
rcrb
test
mov
adc
out
push
mov
push
ret
sbb
push
cmc
lcall
mov
jg
sub
jp
push
dec
mov
sbb
pop
push
inc
arpl
es
outsb
mov
mov
mov
xor
lods
cmp
fsts
insl
pop
es
cmp
mov
sbbb
mov
xchg
gs
outsb
pop
pop
and
xchg
mov
outsl
adc
sti
dec
loope
pop
and
jns
and
ja
cmp
pop
xchg
cmp
mov
mov
repnz
mov
jbe
mov
jno
sahf
jbe
fcmovbe
sbb
adc
adc
pop
ja
pop
lret
add
bound
add
mov
test
es
addr16
xor
jbe
sbb
lea
jp
mov
adc
cmp
pop
cld
fnsave
jne
int3
popf
mov
or
jmp
daa
push
add
jnp
rorb
sahf
sub
pop
add
bound
or
pop
out
icebp
jp
sbb
xor
sarl
hlt
js
mov
je
xchg
cmp
clc
aam
testl
add
imul
ret
shrl
jae
sti
and
stos
icebp
or
or
ss
movsl
enter
es
mov
xorb
jo
je
inc
mov
or
add
imulb
repz
mov
call
adc
jl
push
push
push
xlat
fbld
aaa
pop
jo
push
nop
cli
test
call
cmpsl
mov
and
cmpl
lds
movsl
xchg
fadds
fs
pop
cld
pop
test
sub
jg
inc
add
sub
test
ret
jmp
js
push
inc
and
enter
and
mov
enter
jne
arpl
faddp
mov
sbb
push
movsb
xchg
pushf
js
mov
hlt
add
out
inc
cmp
test
mov
cmp
add
xor
push
ret
xchg
jb
adc
xchg
adc
out
lahf
mov
stos
shlb
loop
call
js
adc
cmovs
or
pop
ljmp
lahf
pop
xor
xlat
mov
jns
rorl
cltd
enter
xchg
lahf
inc
fildll
fiaddl
mov
xchg
jge
lret
add
and
popl
shr
xlat
mov
inc
push
fmuls
pop
jo
mov
in
xchg
xlat
push
mov
shl
fsubs
sbb
cmpsl
cmp
inc
and
roll
mov
cmp
push
sbb
outsl
mov
inc
mov
adc
daa
popf
pop
in
pushf
arpl
out
adc
lods
lret
cmp
pop
inc
sbb
mov
mov
push
jp
sub
add
test
lods
mov
into
dec
inc
adc
scas
push
mov
xchg
incl
mov
or
jbe
mov
add
xor
mov
pop
jbe
notb
inc
mov
push
adc
scas
xchg
lds
popa
ljmp
pop
mov
ss
mov
lret
cmp
inc
add
in
das
mov
lret
cmp
pusha
test
cmp
in
push
popf
and
sti
lahf
push
mov
cmp
or
or
push
jo
stos
repz
xchg
js
loope
fistpll
daa
dec
sub
rol
push
mov
out
lret
push
push
mov
addr16
jecxz
add
test
mov
mov
mov
stc
mov
sbb
xchg
inc
xor
jnp
bnd
cmp
popa
pop
out
cmp
fstpt
inc
adc
sbb
xor
cmp
in
dec
jmp
cmpsb
pushl
ljmp
add
xor
sbb
out
arpl
cmp
mov
sub
jmp
cli
and
add
js
inc
xchg
in
fiadds
aad
push
pop
repnz
enter
mov
xor
inc
push
mov
inc
ds
inc
lret
xor
and
inc
pusha
jnp
inc
mov
imul
pop
sub
and
imulb
data16
clc
dec
andb
and
pop
aam
dec
cmp
aam
pusha
or
fidivs
fcoms
jno
cmp
ljmp
sahf
loop
sti
idiv
daa
stc
aas
dec
call
xor
fs
std
jb
push
pop
test
xchg
cltd
dec
std
fdivr
pop
out
and
inc
mov
icebp
inc
std
sub
lcall
lret
jnp
cmp
jbe
mov
jb
jge
push
mov
sub
xchg
push
icebp
fldl
dec
mov
jle
cs
cmp
sbb
lahf
xchg
jnp
test
sub
fwait
pcmpgtb
and
mov
xchg
mov
add
lret
mov
pusha
or
gs
ret
int
xor
xor
jg
push
xor
mov
and
into
cltd
loop
je
loop
sbb
jbe
xor
push
adc
outsb
scas
faddl
xchg
mov
aas
xor
pusha
pop
pop
add
cli
xlat
ret
push
or
xchg
inc
inc
aas
lock
xchg
mov
inc
clc
insb
sub
pusha
sub
stc
push
jle
mov
add
and
imul
cltd
mov
push
popa
inc
jno
cmp
xchg
cmc
jecxz
cmc
push
mov
repnz
ret
rclb
xchg
fwait
dec
sbb
lock
leave
mov
xor
cmp
lret
push
fnstsw
neg
adc
aam
jbe
leave
test
outsb
push
sahf
sbb
outsb
inc
xor
mov
cwtl
mov
movsl
jne
aam
std
jle
jle
sub
mov
cmp
xchg
xor
cwtl
je
mov
sbb
push
cmp
das
ret
pop
or
sbb
xchg
pop
stc
sarl
into
push
je
call
lahf
sub
inc
inc
jl
mov
popa
cmp
rcll
call
cmpsl
jmp
scas
inc
shrl
add
enter
addl
dec
adc
outsb
inc
call
lods
ja
mov
push
xchg
dec
cltd
movsb
sbb
lret
test
inc
lahf
test
mov
mov
in
jbe
ljmp
push
lret
js
xchg
dec
and
mov
push
sbb
jp
xchg
dec
test
sub
gs
in
ja
add
lahf
fidivrs
mov
pop
mov
sub
loopne
ret
push
aaa
mov
sbb
jmp
divl
stos
paddsw
icebp
orl
cmc
notb
xchg
daa
mov
int3
orb
aas
iret
nop
push
call
scas
movsb
inc
jg
pop
mov
jns
pusha
pop
pop
xchg
in
mov
xchg
sbb
push
xchg
cmp
int
fldcw
repnz
rcll
or
insl
xchg
sbb
fists
addr16
push
loopne
nop
push
sub
jns
mov
mov
fwait
out
mov
adc
fdiv
ret
je
fisttps
pop
adc
mov
ret
test
pop
jnp
push
adc
sbb
pop
sub
mov
ss
ds
cmpsb
enter
incl
sahf
into
jo
das
push
xor
std
ja
jb
cmp
push
mov
fildl
pop
push
or
jb
ss
dec
mov
je
pop
clc
xor
in
fildl
data16
mull
adc
int
lods
data16
xchg
add
sbb
sub
jne
jnp
mov
inc
outsl
xchg
addr16
fcmovbe
es
jbe
int
and
cmp
scas
lcall
lret
mov
pop
lock
mov
test
nop
clc
cmp
mov
push
into
lcall
mov
jp
or
sar
sbb
inc
mov
push
jle
mov
pushf
mov
cmp
sub
xor
add
aaa
push
lret
sbb
and
jmp
sbb
mov
pop
popf
pop
movl
jp
add
jb
dec
ficomps
xchg
add
sub
movb
pop
sub
jg
stc
hlt
fyl2xp1
aaa
push
call
mov
call
stc
aam
mov
fildll
js
add
aad
push
mov
xchg
inc
mov
xchg
nop
sahf
pop
mov
inc
es
jmp
scas
int
xchg
stc
and
sbb
xor
pop
and
int
int3
or
rolb
sbbl
pop
xchg
iret
in
shrl
aad
sbb
in
es
and
jno
push
sub
jg
insl
mov
and
imul
xor
push
les
in
loope
inc
shlb
cltd
push
mov
dec
jb
mov
adc
pop
mov
jl
add
pop
jae
sub
adc
pusha
notb
sub
sub
or
cmp
mov
push
and
jae
aas
add
andl
mov
in
out
mov
mov
push
dec
push
je
fs
xchg
lahf
jecxz
cmp
cmp
cmpsb
inc
test
ret
lcall
test
mov
cwtl
and
hlt
fistpl
rorl
testb
dec
call
in
jmp
data16
fimull
xor
pop
xor
or
add
mov
push
sub
out
xor
mov
sbb
fidivs
adc
mov
mov
mov
jecxz
loopne
push
add
push
ljmp
add
mov
rclb
lcall
pushf
xchg
xchg
insb
dec
gs
mov
mulb
testl
pop
insl
movsl
jo
add
fwait
mov
add
call
push
pop
scas
sti
js
in
loop
stos
or
stc
lods
and
xor
cltd
sbb
sub
jmp
aaa
lahf
cmp
xlat
mov
adc
or
xchg
lcall
xor
push
mov
push
push
repnz
ja
or
fwait
leave
decb
jl
dec
xchg
push
xor
and
fs
scas
dec
mov
cmp
pop
mov
sbb
adc
shll
andl
sub
inc
push
or
lret
jne
cmpsb
sahf
jnp
adc
xor
int3
inc
fcomip
cmp
movb
push
cmp
ret
scas
mov
aas
xorb
pushf
pop
cwtl
adc
bound
add
jle
iret
jne
into
loopne
addl
clc
mov
aad
xchg
ljmp
pop
and
aam
jp
push
jbe
cltd
mov
rol
xorl
push
repnz
imul
push
in
stc
inc
sbb
adc
inc
ja
jp
repz
stc
xlat
add
push
out
push
test
adc
inc
pusha
sub
scas
or
in
and
dec
mov
add
and
pop
sahf
leave
fmuls
test
xchg
add
andb
jg
dec
lds
mov
shll
dec
mov
adc
loop
cmpsb
or
out
icebp
rorl
push
out
inc
aas
inc
jo
lock
testl
aaa
inc
arpl
out
imul
repz
pop
and
jnp
pop
xchg
cmpsl
test
fistpll
mov
and
ret
rolb
xchg
loope
jecxz
popa
jns
sub
test
push
inc
add
insl
out
xchg
fwait
add
rcrl
cmp
in
das
pop
dec
add
mov
mov
jmp
push
aad
adc
mov
push
jb
out
cwtl
xchg
adcb
int3
xorl
aaa
movsb
stos
ficoms
sbb
call
pop
mov
mov
repnz
push
and
test
lock
pop
adc
stc
push
push
test
sbb
sbb
or
sub
sub
in
adc
fs
sbb
jmp
and
or
loope
xor
mov
jl
mov
jge
pop
in
xchg
adc
seto
push
cmp
or
ds
cmc
pop
lds
xor
ja
xchg
mov
adcl
inc
sbb
inc
and
xor
lahf
jmp
push
aaa
outsl
fimuls
imul
lret
popf
rcrl
dec
test
pushf
dec
cmp
and
mov
jnp
adc
ficoms
lahf
iret
jmp
push
xlat
adc
dec
mov
xchg
ficoms
sbb
mov
add
mov
scas
or
sub
fisttpll
out
fwait
insb
pusha
hlt
popf
sbb
or
jo
dec
dec
cmpsl
adc
jecxz
adc
aas
and
jne
jbe
int3
add
in
push
sbb
and
mov
test
mov
das
add
or
mov
jge
test
hlt
sbb
shlb
leave
in
negb
pop
jb
inc
or
mov
setno
pop
dec
jae
shr
rorl
or
scas
aas
lret
jnp
pushf
sbb
dec
mov
test
fmull
jmp
push
inc
ret
addr16
lcall
dec
add
xchg
mov
inc
sub
pop
cmc
sbb
cmp
dec
loope
or
mov
cmp
push
ja
jle
loope
cli
stos
movsl
sub
xchg
aam
xchg
push
call
outsl
fidivrl
ja
bound
rcll
mov
inc
xorb
xor
xchg
jnp
adc
cli
xchg
inc
pop
add
pop
push
jp
lea
jecxz
push
cmpsl
in
xor
add
add
mov
adc
int3
clc
out
and
es
xchg
dec
mov
mov
pushf
or
mov
call
rclb
push
cli
lret
faddl
inc
stos
cmp
mov
shll
jno
cmp
stos
mov
xor
mov
cmp
fwait
test
lret
shll
and
daa
pop
jmp
mov
shlb
fsubl
es
mov
mov
dec
sub
and
rcrb
cmpsl
push
cmpsb
mov
fcomip
ss
xlat
sbb
das
ret
mov
adc
dec
repnz
push
pusha
adc
add
adc
sbb
and
jl
fdivr
loopne
mov
cmpsl
test
addr16
sbb
pop
ret
pop
divl
cli
ljmp
sbb
repnz
cmp
push
sub
xor
or
jmp
cmp
jg
jae
inc
cli
push
jae
enter
mov
test
sbb
mov
xor
cmp
arpl
jo
sub
inc
ret
jge
sub
sub
xchg
mov
cmp
fisubl
xchg
and
rclb
lcall
mov
hlt
flds
int
insl
push
xchg
arpl
push
out
and
pop
inc
lock
sbb
in
rcrl
pop
mov
add
mov
xorl
adcl
and
ret
push
sub
adc
sarl
out
orb
mov
push
add
sub
std
inc
vpminsw
pop
adc
push
mov
cmp
sub
and
mov
hlt
mov
mov
stos
scas
xchg
sti
pop
mov
pop
pushf
push
dec
shl
mov
adcb
push
sbb
cmp
es
mov
sbb
cs
xorb
xor
adc
cmpsl
shll
adc
push
movsl
ja
fldenv
daa
mov
dec
loop
sbb
push
loop
mov
inc
jne
and
inc
fistl
rep
push
scas
fwait
iret
movsl
and
adc
ret
ljmp
inc
or
lcall
dec
inc
pop
mov
sbb
in
and
mull
push
pop
mov
add
out
mov
std
mov
lahf
addr16
jno
push
sub
nop
pop
sub
fchs
xor
std
push
leave
jmp
jbe
jl
mov
mov
jo
mov
popf
popf
mov
jo
push
stos
mov
scas
es
adc
mov
stos
mov
mov
xlat
pop
sbb
mov
dec
cli
in
fnsetpm(287
into
flds
loop
int3
or
movsb
dec
mov
add
inc
cmc
rcr
pushl
aad
mov
or
add
pop
sub
stc
fdivr
push
pop
and
nop
mov
pop
ficomps
add
dec
xchg
adc
loopw
and
and
dec
std
xlat
dec
stos
mov
lahf
jge
jo
mov
mov
cli
insb
imulb
inc
sbb
cpuid
std
in
xchg
dec
pop
out
mov
out
mov
push
jb
cld
push
cmp
insl
jnp
sbb
pushf
push
jecxz
sbb
cmp
dec
xchg
jmp
xchg
sahf
stc
or
xchg
xor
test
cmpsb
xchg
xor
inc
jno
ds
sbbb
xchg
adc
inc
mov
push
sub
int3
out
call
jnp
mov
xor
incl
js
jae
jp
xor
cmp
mov
pushf
xchg
popa
popa
dec
add
sbb
popf
inc
std
pop
addr16
lods
and
xor
mov
mov
arpl
jl
addl
movsb
and
push
test
ret
mov
cmpsb
cmp
stos
mov
push
loopne
jl
xor
mov
loop
das
cmp
jg
out
shrl
lods
arpl
xchg
les
inc
xchg
or
push
test
mov
dec
stc
sbb
add
es
shll
mov
push
xchg
mov
int3
adc
sahf
xchg
jno
or
dec
mov
fs
adc
xor
gs
inc
addl
sbb
inc
jmp
fsub
iret
in
mov
fs
into
inc
in
loop
cmp
gs
xchg
mov
cmpsb
xchg
sbb
cmp
ss
scas
inc
xchg
into
fiaddl
cmc
adc
mov
jmp
sub
iret
xor
adc
mov
push
fcmove
notb
mov
jns
push
dec
filds
pusha
ret
mov
pusha
ljmp
mov
mov
test
in
iret
and
notl
mov
jg
call
adc
ret
or
xchg
xor
push
clc
call
xor
jnp
iret
pop
mov
add
outsl
andl
xor
ds
add
and
add
mov
cmovg
scas
gs
pop
cs
jecxz
lods
xchg
pop
mov
dec
push
repz
xchg
jbe
seto
dec
ljmp
mov
mov
ja
pop
popf
or
jecxz
mov
out
push
pop
or
insb
mov
push
iret
mov
xchg
mov
clc
push
inc
into
fdivs
push
cli
dec
pop
jno
jo
pop
icebp
and
stos
xlat
fistpll
pop
test
fdivrs
jl
xor
cmpsl
push
movsl
or
push
mov
lods
fcompl
cltd
xor
lds
stc
andb
mov
andb
popa
push
pop
cltd
push
push
sbb
in
adc
in
cmpsl
ds
or
mov
scas
sti
and
mov
dec
xchg
push
lcall
loopne
rolb
xchg
bound
aaa
or
add
pop
adc
cmpsl
pop
jbe
mov
or
sub
pop
jo
pop
ret
jl
mov
cmpsl
into
fldenv
leave
je
xchg
scas
cmp
dec
push
mov
pop
add
test
fists
int
xlat
int
xor
cmp
ds
cmp
cmpsl
and
sbb
push
pop
call
dec
fs
mov
pop
icebp
pop
in
mov
sbb
rcl
lret
insb
push
or
push
xchg
xlat
sbb
dec
ss
jge
in
rol
add
jge
pop
mov
add
mov
dec
or
ljmp
add
loopne
sub
jne
clc
cmpsb
call
inc
clc
push
cld
mov
add
insb
dec
sub
xchg
ss
es
push
ret
imul
sub
push
jl
mov
call
sub
mov
gs
jg
jbe
into
and
sub
adc
pusha
mov
ret
inc
adc
add
mov
and
push
jmp
or
shll
inc
sbb
sbb
addr16
jae
dec
fsubp
mov
adc
mov
lock
mov
xchg
sbb
dec
fists
push
ret
test
jl
cs
and
clc
pop
aad
test
adc
pop
cmpsl
dec
cwtl
adc
mov
sbb
mov
out
xchg
lret
stos
inc
cltd
dec
cvtps2pi
aad
xor
out
mov
nop
sub
mov
mov
lahf
mov
and
dec
ficoms
fnstsw
mov
xor
dec
js
mov
pop
adc
push
cmp
adc
jecxz
xor
inc
loope
out
int3
scas
mov
jne
popa
dec
xchg
dec
sbb
daa
dec
out
mov
out
push
loopne
xor
push
pop
cmp
push
fnstenv
dec
push
xchg
inc
scas
cltd
jp
imul
int3
repnz
xor
lcall
sarl
insl
add
test
and
scas
add
out
stos
jnp
adc
dec
dec
jle
add
dec
xchg
add
cs
push
dec
mov
movsl
in
push
mov
jb,pn
sub
imul
inc
je
mov
inc
xor
pop
inc
xor
or
cltd
std
xchg
dec
adc
fwait
jp
nop
ret
fsubrl
and
dec
mull
cmp
dec
enter
addr16
loop
jmp
test
lds
mov
pop
mov
mov
cmpb
and
jae
mov
nop
mov
pop
hlt
add
and
mov
test
bound
inc
dec
xor
lret
test
sbb
decl
sbb
sti
sbbb
mov
xor
push
and
push
pop
test
xor
inc
dec
stc
push
xchg
lret
dec
rcrb
leave
xchg
jmp
out
cmpsb
or
adc
inc
dec
dec
push
aad
ja
lret
aas
add
cli
inc
xor
cmp
mov
cmp
aas
scas
movsl
jo
les
cmc
shlb
inc
insl
in
std
dec
loope
test
lahf
inc
inc
mov
ljmp
stos
fsubs
and
cwtl
pop
push
jnp
mov
jp
in
pop
leave
sbb
cmpsb
fwait
adc
push
out
pop
or
pushf
mov
cmpsb
jo
or
cmp
mov
add
stos
jno
sahf
xor
mov
jo
dec
pusha
in
gs
daa
lea
mov
pop
mov
aam
dec
mov
xor
js
xorl
add
jp
or
shll
xor
pop
mov
lahf
sti
pop
stos
mov
cmc
sbb
mov
pop
mov
pop
movsl
mov
sti
dec
xchg
pop
adc
fsubr
data16
mov
lock
mov
xchg
adc
leave
push
jmp
testb
in
sahf
or
daa
lock
gs
aad
push
add
out
cmp
insb
ljmp
fisttps
pop
jbe
lahf
adc
add
pop
idivb
jp
and
in
and
std
pop
ret
shlb
jg
popf
pop
mov
xor
jne
sub
sbb
jecxz
mov
mov
mov
out
mov
xchg
stos
or
jbe
lock
ds
pop
push
pop
inc
ret
add
jmp
sbb
cmp
lock
clc
pop
inc
popa
ss
and
push
pop
jge
in
xchg
xchg
mov
jg
mov
or
mov
jp
lahf
sti
or
addr16
cmp
push
popf
les
mov
insl
xor
sub
inc
jmp
and
sti
push
mov
push
cwtl
fiaddl
xlat
decb
mov
scas
imul
out
pop
pop
stc
pushf
adcb
jae
sbb
sub
subb
pop
fldl
ja
aaa
fmuls
lahf
aam
sub
lock
shl
stc
orl
pop
sti
fstl
ja
sub
fsubl
xchg
sbb
cmp
loopne
stos
push
test
fs
call
je
and
jge
cmp
jne
arpl
or
adc
mov
cmp
xor
lods
mov
pop
mov
je
jo
adc
ljmp
stc
loope
negb
ds
push
and
xor
xor
das
and
ja
int
mov
stc
adc
ss
je
adc
pop
ja
jmp
pop
sti
xlat
cmp
test
and
pop
stos
enter
inc
iret
scas
movsl
rcrb
jns
sbb
movsb
add
inc
stos
mov
in
scas
sub
jge
sbb
rcrl
cmpsl
hlt
aaa
dec
and
test
adc
insl
push
shlb
jne
sub
or
xor
inc
subb
pop
fsubrs
add
inc
sub
cltd
loope
jo
out
lret
scas
stos
mov
xor
cmp
sbb
pop
std
jle
push
retw
ss
notl
jecxz
mov
pusha
inc
adc
out
lods
push
incl
adc
xor
fwait
pop
push
add
in
test
lea
jmp
ss
push
neg
je
cld
aas
mov
jge
push
adcb
xor
movsb
pop
inc
add
shll
mov
lret
xor
ss
jns
rorb
out
aaa
xor
cmpsl
jae
mov
sbb
push
sbb
mov
dec
mov
je
add
push
cmpb
jae
ljmp
mov
dec
sbb
dec
cmp
mov
or
aam
int3
adc
cld
in
xor
and
leave
xchg
xchg
in
mov
mov
mov
outsl
xchg
and
ret
or
aaa
cmc
iret
iret
push
xor
adc
sub
ja
mov
lods
aaa
xchg
cltd
mov
inc
shlb
sbb
in
loope
jno
out
add
cmpsb
push
fsubp
inc
push
pop
jbe
out
leave
and
cwtl
aam
mov
fistpl
mov
jmp
dec
jbe
mov
xchg
push
jecxz
mov
data16
testb
pop
loop
push
mov
and
dec
add
inc
mov
add
cmp
push
movsb
and
mov
ss
inc
js
add
cltd
mov
cwtl
sarb
pusha
lcall
adc
lds
inc
pop
out
ja
js
mov
hlt
out
add
clc
stos
andb
pop
adc
lcall
adcb
and
xor
test
pop
mov
das
lret
outsb
push
pop
jno
jo
int
sbbb
cmpsb
aaa
sub
mov
fbstp
imul
ds
subl
push
mov
int
dec
push
icebp
hlt
repnz
sbb
out
mov
xchg
push
aaa
lds
adc
and
sub
roll
jno
fwait
xchg
rol
xor
cmpsb
out
movsl
mov
add
mov
rorb
std
rclb
das
or
sti
xchg
cld
jmp
fbld
dec
jnp
dec
inc
mov
sbb
sub
in
scas
dec
dec
pop
add
fstl
scas
inc
imul
cmpsb
cmp
sbbb
sahf
aaa
in
push
repnz
jns
push
popa
shrl
push
cmp
bound
sbbl
mov
imull
or
out
add
lahf
mov
shlb
jl
inc
sub
inc
aad
jp
inc
lret
and
fldcw
mov
add
es
add
adc
lret
fwait
mov
ss
loopne
ret
cmp
inc
or
push
cmpb
sbb
or
xchg
or
mov
xchg
jae
ret
xlat
cmp
pop
mov
cmp
and
mov
adc
jno
inc
pusha
xlat
movl
pop
mov
loopne
stc
std
jb
outsl
push
sbb
pop
lret
jg
ds
xor
rcrl
add
jl
push
sbb
jle
jno
lea
in
popa
push
or
lret
scas
mov
xlat
mov
or
insb
cmc
bound
call
add
sysenter
aam
pop
pop
inc
repnz
mov
xchg
aad
push
loope
add
leave
add
mov
int3
scas
sti
sti
inc
insb
push
adcb
mov
out
add
pop
std
arpl
mov
movl
jg
push
mov
nop
sbbl
inc
movb
xchg
xor
add
pop
mov
das
jno
in
mov
dec
cmp
ljmp
push
or
data16
int
inc
out
test
add
cmp
mov
daa
sarl
pusha
push
or
lods
call
test
fsubrl
dec
cli
jp
mov
fimull
add
ljmp
adc
lods
in
insb
inc
std
fs
push
je
repz
jno
in
jne
bswap
xchg
mov
jns
push
mov
pop
sahf
rolb
lods
ret
xchg
scas
fs
mulb
push
xor
out
test
fs
test
outsb
pop
sub
push
xor
aad
jl
outsb
jmp
or
inc
in
jo
sar
inc
pop
movsb
push
aad
cmp
pop
cmp
lret
sarl
xchg
popa
mov
cmpsl
or
mov
push
mov
in
test
xchg
push
in
mov
in
dec
daa
xor
repnz
jl
outsl
mov
sub
xchg
test
push
dec
sbb
dec
xchg
imul
or
lret
fwait
loop
mov
out
mov
imul
adc
or
cld
adc
or
sub
sub
clc
fdiv
xchg
mov
movsl
sub
jp
mull
adc
mov
into
das
xchg
pusha
push
mov
pop
test
cmp
dec
pop
push
inc
mov
cli
pushf
aad
inc
add
push
call
cli
fldcw
dec
scas
scas
jle
push
xlat
fstpt
and
inc
popa
repz
mov
ss
inc
cwtl
xchg
xchg
cmp
lret
ret
sbb
je
dec
pushf
add
vfrczsd
in
xchg
mov
lds
mull
add
mov
jb
jmp
sbbl
jb
cli
adc
mov
jne
cltd
neg
imul
test
mov
loope
jo
lds
jo
push
les
push
sti
add
andl
repnz
insl
out
pop
adc
mov
adc
cmp
lds
das
lods
scas
lcall
xchg
xlat
insl
rcr
adc
pop
xorl
pop
sub
in
cmp
dec
inc
push
adc
mov
xor
mov
stc
sub
shr
cltd
dec
or
stos
lock
adc
xor
cld
pop
outsb
je
les
cmovae
movsl
ds
adc
shlb
jmp
decl
popf
icebp
andl
imull
sbb
loop
out
mov
leave
or
push
mov
pop
ficoms
mov
mov
add
js
aas
mov
pop
push
mov
add
test
cli
mov
imul
jno
adc
dec
and
xchg
dec
fdivl
xchg
xor
jae
cmc
scas
js
mov
dec
mov
fdivr
fwait
xchg
push
lret
pop
pushf
push
lock
inc
mov
repnz
inc
in
push
mov
and
cltd
pop
cwtl
xchg
popa
mov
cwtl
test
cwtl
cmp
aas
mov
xchg
push
ss
adc
mov
data16
inc
loop
popf
and
arpl
mov
dec
dec
add
xchg
dec
cmp
out
std
xchg
hlt
xor
mull
rol
and
inc
mov
aas
nop
adc
dec
fcmovu
push
xchg
push
add
movsb
adc
adc
xchg
and
jno
push
pop
aam
jmp
test
pop
mov
loop
push
cmp
jg
test
cmpsl
or
pushf
fildl
lret
decl
cmp
pop
data16
and
pusha
mov
loopne
movsl
scas
iret
enter
jb
mov
mov
inc
cmpsb
dec
push
add
sbb
cmpsl
mov
test
push
jmp
adc
push
dec
mov
pop
jno
and
ret
jno
jno
and
xor
outsl
adcl
lods
pushf
int3
ljmp
mov
lahf
loope
call
out
dec
mov
movsl
ja
inc
arpl
out
sbb
mov
arpl
inc
inc
lahf
and
mov
aas
into
shl
xor
or
sub
push
rcrb
insb
dec
test
inc
shr
sub
and
add
or
inc
adc
divl
mov
loop
lret
pop
notl
xor
fucomi
inc
cmp
idiv
mov
mov
in
idiv
fwait
lock
sahf
repz
shrl
pop
jle
sti
sti
inc
mov
stc
imul
inc
in
pop
sarb
mov
adc
push
xor
out
bound
or
push
xchg
jbe
jp
leave
pop
cmc
or
xor
xchg
inc
xchg
cmp
cmp
cwtl
out
insb
inc
fisubl
in
jmp
or
test
xlat
pop
ret
jb
outsb
and
xor
xchg
or
lcall
add
pusha
loop
aaa
lahf
std
push
in
les
aad
pop
pcmpeqd
mov
bound
popf
inc
sub
mov
and
sarb
mov
xchg
lods
pop
js
adc
fs
jo
jg
pop
stc
test
push
or
pop
cs
dec
movl
sub
pop
addr16
lahf
icebp
andb
jge
xor
test
mov
scas
adc
stc
ficompl
inc
or
mov
loope
mov
push
repz
movsb
or
mov
mov
idivb
stc
dec
adc
imul
push
pop
push
imul
xchg
cltd
fwait
enter
mov
fstpl
inc
xchg
imul
js
stos
out
dec
sbb
mov
lock
lcall
decb
or
das
loop
rcl
xor
pop
std
fmuls
pop
pop
in
imul
push
bound
pusha
or
inc
push
in
lock
adc
rol
bound
cs
sub
cwtl
sbb
sub
dec
mov
dec
pop
std
mov
subl
and
aas
push
lds
cmp
mov
clc
cmp
mov
jae
jmp
test
push
push
jo
inc
sbb
adc
cmp
sahf
push
lds
fldenv
lods
or
mov
add
loop
or
push
push
test
xor
dec
call
pop
and
pop
jnp
ror
xchg
jno
cld
xchg
shrb
rclb
push
cmc
leave
loope
mov
inc
rolb
mov
insl
push
sub
jp
and
add
cmc
in
mov
jg
negb
testb
aam
arpl
xlat
dec
mov
inc
mov
shlb
adc
mov
fisttpll
add
jp
cmp
inc
jne
and
sbb
push
roll
push
fxch
in
mov
popa
jmp
loopne
loopne
push
mov
daa
ret
pop
dec
inc
xor
xlat
jb
mov
fisttpll
std
pop
insb
outsb
sarl
shrb
fisubs
iret
jmp
xor
aas
sub
cltd
clc
push
cmp
mov
test
add
pop
sub
xchg
cmp
mov
clc
cmpsb
xchg
xchg
add
je
fucom
xchg
orb
rcrl
sti
hlt
cmp
bound
push
xchg
sub
scas
and
test
add
add
mov
push
int3
mov
test
or
aaa
scas
push
cmpsl
mov
add
femms
shufps
cmpsb
inc
cmpsb
cmp
cmpsl
in
fiadds
cs
jmp
xchg
gs
aad
mov
xlat
gs
mov
mov
cs
sbb
mov
dec
ds
xchg
lods
or
jno
jle
push
xchg
add
adcw
popa
dec
movsl
inc
adc
shl
dec
cld
aaa
cmpl
inc
dec
sbbl
adcl
ficoml
shr
ficoml
cmpsl
jp
daa
rcll
mov
push
sar
pusha
enter
pop
dec
push
sbb
jne
andl
mov
repnz
mov
aas
adc
andb
les
xchg
jne
sub
out
fsubrl
outsb
push
mov
aam
push
mov
imul
adc
cmp
and
adc
xor
scas
or
pop
leave
stc
roll
mov
adc
adc
adc
jnp
push
pop
inc
jle
xor
test
into
sahf
outsb
sub
lcall
arpl
je
inc
jo
addr16
insl
lret
je
cmp
ret
sarl
mov
inc
call
fists
ljmp
mov
adc
jl
push
mov
mov
fnstenv
jno
ljmp
sub
mov
dec
xchg
push
rorl
and
mov
push
imul
push
shr
sub
pusha
jbe
cld
cmp
das
dec
adc
inc
in
sahf
outsl
dec
ljmp
inc
dec
arpl
loop
dec
ja
mull
and
loope
mov
rcrb
addr16
pop
xchg
lock
loopne
jge
addr16
sub
ds
not
sub
dec
inc
mov
aas
test
imul
popa
xchg
aas
enter
jno
leave
pop
aaa
cmpsl
xchg
addl
mov
and
cmpsl
sub
clc
mov
sbb
push
cld
or
adc
add
test
addr16
jmp
rcr
push
je
adcb
pusha
sti
lret
loope
in
int3
or
int
in
ret
adc
nop
cmp
arpl
xor
and
les
cmpb
pop
mov
jae
fldcw
shrl
ret
ret
sti
insl
add
enter
or
add
cmpsb
pop
movsl
mov
insb
xchg
jne
adcb
sub
cmp
jg
stc
lods
xlat
jmp
fdivrs
jns
cmpsl
push
sbb
cwtl
and
out
push
mov
add
lahf
sti
mov
inc
mov
cmp
scas
mov
sub
ror
jge
push
fs
mov
sbb
jnp
clc
aad
push
cs
out
js
ljmp
insb
outsb
stos
pop
clc
xchg
sbb
xchg
mov
mov
adc
add
ret
enter
adc
push
pushf
mov
pushf
push
push
sub
rcll
cmpsl
and
adc
ja
pop
push
push
push
push
test
mov
das
lods
mov
addb
adc
and
psubusw
and
jne
and
inc
inc
jb
cmpsl
stos
mov
or
je
fldt
ds
mov
lods
xor
out
imul
lahf
push
push
push
mov
cmp
push
fdivl
addb
in
out
add
adc
cmp
insl
sarl
sub
addb
std
jl
pop
outsl
je
idiv
outsl
pop
sti
pop
fstl
cli
mov
cmp
std
sub
push
add
bound
or
or
popa
lret
mov
loope
les
in
mov
sub
cmp
loop
ret
ret
jae
insb
out
sbb
mov
test
jecxz
ja
or
xchg
idiv
div
outsb
aaa
mov
test
or
fwait
shlb
orb
fwait
mov
sbb
mov
push
inc
jne
mov
sbb
pop
and
insb
dec
andl
es
fidivl
lds
mov
std
std
mov
cmp
xor
sbb
cmp
mov
inc
or
jmp
mov
leave
les
outsb
fwait
lds
mov
stos
sbb
mov
fisubs
mov
out
data16
fimull
pop
mov
jp
rcr
pop
sbb
jecxz
lret
jo
and
in
jmp
arpl
add
lods
jbe
cltd
mov
push
mov
sbb
xor
movsb
lcall
jecxz
popa
push
stos
mov
pop
jb
imul
sub
gs
dec
inc
out
outsl
out
inc
repz
outsb
mov
push
ret
sbb
ljmp
xor
and
add
sahf
and
in
sub
inc
mov
add
cld
xor
jmp
jmp
sti
or
addr16
xchg
xor
xchg
shufps
fsubr
dec
sub
outsl
push
fidivrl
push
mov
add
lcall
jecxz
mov
jo
call
cmpsb
pop
or
loop
sbb
and
neg
cmc
ret
pop
cmpl
pop
mov
lds
sti
cmp
fimull
adc
sbb
js
and
pop
sub
pop
mov
mov
xchg
push
fildll
sub
pop
add
mov
call
add
std
mov
lret
sub
ja
rcrb
xorb
pop
daa
outsb
jg
adc
jmp
testl
pop
push
sub
and
fs
jg
lret
out
xchg
lods
xorb
xor
dec
jle
rclb
in
scas
sbb
add
adc
dec
dec
sahf
out
stos
out
inc
mov
movsl
std
cli
in
loopne
and
dec
push
mov
mov
fxch
loop
xchg
add
sbb
dec
loopne
sbb
dec
push
inc
nop
cld
jecxz
jns
sub
push
sbb
push
sub
and
outsb
daa
mov
clc
wbinvd
aas
xor
fmull
sub
imul
shrb
bnd
aam
das
mov
jle
filds
inc
and
das
xor
cs
cli
rol
and
and
and
mov
aas
insl
filds
aas
int
jb
mov
inc
repz
fs
or
or
sub
cmp
out
xchg
and
sub
push
std
push
mov
push
cld
stc
mov
or
jbe
mov
xor
test
or
sbb
in
mov
mov
mov
jbe
hlt
scas
mov
mov
pop
add
jne
inc
aas
dec
fisubs
stos
mov
pop
cmpsb
sbb
cs
mov
adc
dec
js
adc
sbb
insb
xchg
aam
jge
pop
popf
push
mov
rorb
push
inc
mov
mov
push
sbb
add
xor
int3
cmpsb
xor
add
add
movl
xchg
push
std
mov
cmp
pop
shlb
sub
stc
test
and
push
mov
mov
sub
mov
out
jae
xchg
and
mov
add
data16
sbb
push
fsts
and
cmp
insl
push
loope
add
add
jmp
add
fcoms
enter
addr16
sbb
imul
shrb
ss
pushf
rclb
mov
inc
jno
cwtl
frstor
jle
mov
add
sbb
jb
mov
and
sar
jp
and
pop
insl
mov
inc
iret
xchg
sbb
mov
nop
pop
lret
insl
jns
push
adc
push
fnstsw
xchg
pop
movb
roll
mov
sbb
sub
cmp
mov
fildll
and
xchg
push
pop
inc
loope
roll
sbb
mov
out
cmp
inc
adcl
in
mov
bound
dec
mov
gs
cmp
je
stos
jo
xchg
ret
mov
addr16
cmpsl
popf
notl
icebp
mov
cld
inc
and
pop
test
repnz
inc
arpl
adc
mov
dec
lret
arpl
in
push
push
push
les
rolb
aas
sti
push
inc
inc
pop
cmp
test
das
loope
mov
iret
ficomps
aam
and
or
sbb
fistl
mov
lret
sbb
xchg
clc
fs
mov
mov
jae
shrl
push
mov
lret
in
xorl
mov
jnp
repnz
cltd
lahf
iret
fprem1
pusha
xchg
mov
inc
and
fdivs
loop
and
cmpsb
xor
mov
ficoms
outsl
scas
call
sub
cs
cmpsb
lock
push
loop
sbb
inc
mov
mov
jmp
xor
int3
mov
or
out
jb
jecxz
inc
mov
jbe
shll
lahf
mov
and
idivb
mov
jbe
mov
adc
xchg
out
mov
out
sbb
mov
adc
mov
xor
pop
mov
cmp
add
mov
or
push
mov
ficoms
cmp
es
mov
ret
das
cmpsb
dec
push
shll
mov
rdtsc
insb
outsl
adc
aad
xchg
jmp
sti
fwait
mov
loopne
push
mov
jl
mov
in
xchg
or
jne
cmpsl
stos
aam
inc
push
mov
jno
sub
pop
out
insb
adc
cmp
xchg
xchg
sub
inc
push
jno
and
hlt
cmpsb
test
or
sbb
ret
dec
out
mov
hlt
mov
sbb
imul
cmp
ja
sub
clc
iret
gs
pop
jle
das
cmp
rcrl
out
or
mov
ret
jmp
push
repnz
lds
sarb
enter
pusha
icebp
in
ret
stos
insb
fsubs
dec
adc
sbb
aaa
call
jle
dec
push
outsb
les
adc
mov
loopne
add
and
mov
cld
mov
lea
fwait
pop
sub
rcrl
les
inc
js
ficompl
pop
push
or
mov
inc
add
sahf
sbb
sbb
in
mov
sbb
xor
xor
fadd
push
xchg
pushf
add
orb
sbb
mov
xchg
gs
dec
aaa
inc
subl
mov
xchg
movsb
mov
stos
jbe
andb
and
test
xchg
test
pop
sarb
aam
shrl
pop
or
scas
std
and
enter
jb
add
cwtl
lcall
nop
mov
inc
repnz
stos
xorl
mov
cs
add
leave
sub
loope
jbe
jnp
mov
push
adc
xlat
mov
scas
inc
xor
push
push
adc
sahf
iret
test
mov
gs
cmp
push
pop
and
xor
nop
push
pop
loop
pop
insl
mov
mov
ret
icebp
pop
push
enter
pop
mulb
adc
negb
jge
mov
sbb
or
mov
mov
jae
xor
push
pop
ss
out
jbe
sbb
jge
xchg
xchg
std
ficoms
test
or
mov
dec
in
push
repnz
out
cmp
push
lret
xchg
inc
insl
cmpsb
mov
or
rcrl
hlt
mov
push
adc
mov
stos
mov
or
jb
xor
lea
adc
aam
loop
cmp
xor
push
ret
mov
pop
xor
loopne
xchg
daa
xorps
add
sbb
push
and
fists
mov
pop
inc
icebp
sub
add
mov
inc
push
fwait
adc
xchg
mov
test
cltd
fdivr
inc
cmp
mov
dec
or
jmp
xor
gs
fistl
adc
push
push
icebp
sbb
loopne
rol
into
imul
dec
enter
mov
mov
inc
enter
cmp
mov
jg
and
out
imul
jg
and
notb
pop
loope
cltd
ficoms
fcmovnbe
pop
aam
test
sbb
icebp
clc
mov
cmpb
push
test
sub
mov
outsl
jnp
sbb
cltd
sub
je
mov
jge
mov
daa
movsl
dec
addr16
lea
pop
aaa
ret
pop
lods
cmp
ja
and
ss
daa
xchg
sub
inc
push
in
lea
mov
jp
push
add
shlb
adc
addr16
aas
addr16
jae
sbb
xchg
std
mov
xchg
lds
dec
les
sbb
lods
mov
push
stc
adc
or
mov
mov
test
lahf
gs
push
movsl
leave
or
mov
jg
jle
jb
movl
pop
pop
inc
push
xlat
stc
out
push
adc
dec
inc
and
adc
push
push
arpl
out
and
push
daa
leave
jae
aas
call
popa
fs
xlat
repnz
mov
jmp
clc
and
push
pushf
adc
sub
cmpsb
aaa
or
out
add
scas
jg
mov
sarb
sbb
mov
cwtl
clc
fistpl
mov
and
jne
cmpsb
jne
xchg
sbbl
and
test
in
jl
sbbl
jns
sub
negl
inc
jg
mov
cli
push
loop
cltd
cmp
jae
fldcw
lcall
adc
jle
jno
imul
xchg
sub
mov
pop
ss
fsubrp
xorl
shrb
loop
push
xchg
push
push
cld
daa
jecxz
inc
aad
mov
inc
outsb
aas
inc
dec
sub
xor
lret
test
xchg
adc
orb
decl
mov
pushf
inc
mov
and
jle
mov
in
les
cmp
icebp
mov
push
subl
xorl
cmp
add
cmp
fnstcw
cmpsb
cmpsb
push
push
and
insl
xchg
lret
fidivs
mov
lcall
push
cmp
lcall
outsl
push
out
add
imull
sbbb
lock
lds
add
or
std
xlat
and
test
pop
add
out
inc
add
jle
or
lahf
pop
jge
or
enter
mov
ljmp
push
js
roll
leave
xor
mov
inc
test
jmp
ljmp
and
shll
dec
push
cltd
pusha
pop
dec
lea
cmp
jecxz
mov
or
or
mov
mov
shl
jecxz
pop
xchg
sahf
add
cmp
cmc
push
mov
loop
aad
aaa
scas
test
loop
cmpsl
add
nop
xor
fcmovb
ljmp
je
in
mov
in
xchg
adc
xor
mov
xor
ss
push
outsb
enter
je
push
mov
pop
into
cli
jmp
stc
adc
lods
push
fimull
dec
rclb
stc
cmp
icebp
shl
shl
in
mov
pushf
daa
fisubl
mov
leave
ret
jb
sub
push
out
pop
sub
cltd
and
jp
sti
pop
repnz
or
jg
ljmp
or
cld
out
cltd
sbb
xor
test
mov
pop
fmuls
cmp
mov
sarb
push
mov
dec
bnd
cmp
inc
imul
mov
neg
xchg
aas
and
mov
jl
push
dec
addr16
bound
outsl
and
test
dec
out
mov
push
add
subl
mov
jbe
lods
stos
push
jb
cmp
cld
incl
xchg
jns
dec
not
xor
add
pusha
xchg
repnz
fsubrp
mov
lds
xor
movsb
daa
sbb
fs
ror
xchg
push
mull
bound
mov
lods
and
mov
stos
sbb
or
jg
mov
sbb
mov
push
add
hlt
pop
and
loope
and
sbb
ds
das
push
arpl
cmpsl
aad
push
xchg
lcall
push
movsb
adc
dec
sub
push
pop
sbb
test
ss
cmp
les
sbb
or
or
mov
neg
ret
and
adc
xor
mov
cmp
aaa
inc
adc
ret
scas
loope
cmp
mov
vcvtsd2ss
rclb
mov
cwtl
or
cwtl
pop
lea
hlt
add
push
imul
out
ss
lock
std
dec
outsl
dec
jno
jb
mov
mov
movsb
lcall
dec
into
inc
sti
in
dec
push
insb
xlat
negb
dec
sub
lods
mov
xchg
std
sbb
sub
adc
in
pop
adcb
fs
cmp
or
mov
cmp
sbb
sub
cltd
pop
loope
xchg
mov
ss
cmc
ss
mov
dec
imul
push
out
xchg
testl
push
mov
jmp
xlat
mov
ja
popf
pop
xchg
lea
mov
mov
dec
mov
mov
mov
das
call
fisttpl
or
cmp
scas
aam
mov
in
push
hlt
cld
loop
cmp
ret
mov
stos
dec
sub
jmp
cmc
mov
xchg
mov
push
sub
xchg
sbb
out
push
ret
xchg
cmpl
dec
test
xchg
bndldx
sbb
dec
stos
bound
out
inc
jne
pop
inc
ret
adc
push
jmp
inc
mov
sub
and
sbb
jns
mov
stos
pop
or
lret
rcr
mov
insb
inc
insb
mov
xor
aad
dec
lcall
or
cmp
into
ret
adcl
push
mov
cld
add
sbb
xor
das
les
into
pop
sub
sbb
sbb
xor
clc
je
mov
mov
jae
mov
pushf
stos
pusha
sar
dec
xchg
or
jnp
pop
mov
add
mov
push
jle
imul
mov
push
xor
or
cmp
ljmp
and
xor
or
incl
sbb
mov
sub
xchg
ja
mov
and
lret
mov
js
ret
sub
add
pop
sar
push
xor
mov
sti
outsl
mov
add
ljmp
testl
mov
dec
movsl
push
sbb
cmp
pop
es
aad
imul
xchg
in
data16
gs
jbe
sub
clc
adc
jns
adc
fnstsw
stc
adc
jge
xchg
arpl
call
mov
enter
cltd
sub
inc
mov
pop
mov
cld
fdivrl
xchg
cwtl
and
fisttpll
pop
andb
sub
inc
lock
jmp
add
xor
bound
out
pop
gs
lret
movb
iret
dec
jno
out
mov
pop
iret
in
movsb
je
mov
test
mov
jle
aaa
mov
stos
and
jg
ja
popa
xor
mov
iret
sar
pop
xchg
ljmp
xchg
jo
inc
jecxz
loop
lahf
lret
pop
daa
lods
push
adc
mov
cmp
xor
lahf
cmpps
mov
push
scas
enter
mov
pushf
rcrb
jbe
test
jb
cmc
jns
pop
mov
fsubl
lock
xchg
or
jnp
or
xchg
or
or
and
shll
cmp
std
xchg
push
scas
bound
xor
add
ss
lret
out
dec
pop
in
cmpsb
into
fwait
mov
ficomps
das
xlat
push
xor
add
sub
mov
pop
addr16
clc
out
cmp
jne
insl
scas
int3
ljmp
cmp
nop
ud0
xor
hlt
scas
cmp
xor
xor
adc
sarl
bnd
pop
fwait
xchg
aaa
xlat
pop
pop
jp
pop
jns
gs
and
jge
loopne
lcall
int
push
decb
nop
add
sbb
insb
or
in
mov
mov
mov
les
sbb
popf
jbe
pushf
mov
jb
mov
test
push
cmp
mov
adc
les
jo
jns
nop
mov
dec
and
adc
sti
add
add
mov
jmp
ja
jecxz
xchg
stc
jne
pop
mov
mov
dec
xchg
mov
mov
popf
bnd
sub
mov
mov
and
sub
test
adc
ss
test
popa
mov
test
dec
mov
mov
add
loope
imul
inc
insb
add
mov
int
xchg
dec
dec
outsl
lcall
mov
lahf
pushf
add
outsl
rcl
insl
fld
xchg
and
fistl
adc
sub
dec
aaa
xchg
mov
mov
pop
ds
mov
gs
push
lret
pop
and
shlb
pushl
pop
adc
mov
les
dec
inc
lret
outsl
and
pushf
and
orb
js
les
pop
dec
jnp
outsl
fisubs
test
and
jle
mov
lock
jmp
int3
push
mov
add
bnd
xor
or
pop
aas
aas
push
cmp
mov
loope
sbb
popf
sbb
popa
mov
push
jge
sarb
pushf
ja
js
loope
lods
jo
dec
smsw
aas
xor
mov
mov
jno
movsb
xchg
mov
dec
mov
xor
sub
xchg
outsb
dec
adc
push
inc
mov
stos
repnz
fwait
cmp
sbb
jmp
xchg
repnz
cmpsb
ret
push
push
xor
sub
andl
cld
push
jbe
xchg
sarl
mov
je
and
mov
add
inc
xchg
xchg
test
xchg
inc
xchg
dec
addl
ds
ret
pop
mov
push
repnz
and
mov
mov
xor
jne
cmp
push
and
mov
jnp
xor
xchg
lret
adc
push
mov
add
pop
je
insl
push
push
push
cltd
out
jo
loope
lods
btl
mov
xchg
sbb
fildll
cli
sbb
nop
sbb
shrl
adc
pop
pop
mov
adc
arpl
dec
pop
pop
push
xchg
stos
loopne
fisubrs
int
lods
xchg
outsl
pop
xchg
mov
shrb
dec
xor
sub
andl
mov
out
mov
xor
fistpl
mov
lahf
jno
sub
push
pop
inc
push
xor
adc
xchg
pop
ds
dec
add
cmp
repnz
xor
mov
sbb
pop
aaa
jne
jg
sahf
roll
lea
or
negb
and
pop
sub
xor
sbb
loope
fldt
imul
cmp
mov
xchg
es
or
in
push
mov
in
adc
lea
cltd
sub
sti
and
adc
scas
stos
rcl
push
test
popf
mov
out
mov
cwtl
push
adc
stos
movsl
and
fdivrs
push
cltd
dec
leave
mov
and
aam
and
ljmp
stc
in
pop
fcomps
jmp
push
xchg
dec
int
aaa
pop
cmp
in
mov
in
xor
mov
cmpsl
sub
incl
enter
xor
insl
lea
or
xchg
inc
test
mov
push
movsl
aam
push
ffreep
jae
aas
and
lock
scas
testb
inc
xchg
fnstcw
sbb
or
stc
xor
dec
sub
push
popa
mov
sbb
mov
cmp
cs
mov
sbb
out
stos
in
gs
push
cld
popa
xor
sub
outsb
fdivl
or
mov
hlt
sti
adc
icebp
push
nop
aas
dec
cmpsl
stos
mov
shlb
inc
imul
aam
xchg
in
add
mov
cmp
and
loop
mov
push
mov
lret
shll
mov
xchg
mov
movsl
sbb
push
jmp
movsb
outsl
cmp
dec
loope
inc
inc
iret
pushf
jne
jmp
push
mov
pcmpgtw
and
ljmp
rorl
inc
ja
xchg
in
test
pop
push
mov
pusha
cs
and
sahf
xchg
cld
subl
outsl
mov
sub
xor
adc
jbe
divl
xor
cmpsl
mov
leave
jb
loop
cli
getsec
cld
sub
xchg
outsl
ret
mov
sbb
inc
jmp
pop
leave
xor
mov
popf
test
push
pop
leave
aas
and
loopne
xchg
add
repz
pop
jecxz
adc
addl
test
aam
ds
sub
xchg
shlb
pop
mov
add
add
data16
mov
mov
test
out
mov
cli
mov
lods
cmp
adc
push
cmp
or
clc
scas
and
push
mov
mov
add
lahf
cmc
pop
int3
xor
cld
mov
call
or
push
dec
mov
dec
mov
ror
aas
popf
xchg
or
mov
fcomps
or
roll
aam
lahf
pushf
sbb
insb
call
in
sbb
iret
sti
out
mov
outsl
scas
test
pop
cmp
xchg
stos
lods
or
jmp
pusha
stos
lods
mov
fcmovnb
pop
push
sbb
in
jnp
mov
leave
xor
or
jmp
cmp
test
xchg
jo
xchg
and
jb
jl
ror
sbb
sti
incb
sub
mov
mov
idivb
lret
fldcw
xchg
adc
iret
mov
js
lahf
cmc
jno
imul
data16
fnstsw
cmpsl
int
scas
push
sub
hlt
sbb
pop
ja
xchg
sbb
adc
and
imul
mov
cmpsl
mov
add
int3
jle
jl
or
xchg
dec
mov
adcb
mov
push
iret
push
scas
hlt
lds
repnz
lods
cmpsb
push
pop
xchg
mov
out
loop
sbb
sti
lret
rorl
test
xchg
cwtl
in
xor
sahf
and
inc
lds
and
or
test
sbb
adc
fwait
sbb
inc
xchg
scas
mov
pop
sub
pop
add
dec
fstpt
leave
inc
test
and
call
mov
subb
pop
cmp
push
ret
outsb
aad
pop
xor
das
lods
sti
insl
daa
sarb
sub
push
imul
xchg
jno
add
jmp
call
sbb
add
in
nop
pop
mov
pop
xchg
jbe
cs
sub
mov
sub
sbb
mov
in
jg
mov
xor
cwtl
rclb
xchg
outsl
fcoms
adc
jns
xlat
test
aam
mov
mov
pusha
or
jge
adc
bound
jnp
push
or
sbb
push
xor
pop
jne
jne
xchg
sbb
cld
or
mov
jp
fwait
jecxz
fiadds
gs
out
cli
and
mov
jp
ljmp
out
clc
in
sub
cmc
hlt
add
fs
es
incl
cmp
fwait
or
mov
cld
lret
push
add
mov
inc
je
roll
ljmp
out
test
mov
push
cs
inc
pop
or
aad
bound
scas
mov
cmp
mov
jb
out
push
and
push
sub
adcl
sbb
pop
daa
insl
or
dec
mov
xor
mov
pushf
cmp
and
xchg
outsl
movl
rol
mov
and
push
jg
xchg
fisttpll
mov
push
in
ljmp
je
and
pusha
lock
scas
loope
pop
pop
cmp
inc
test
hlt
iret
or
and
lods
bound
cmp
add
sub
movsb
test
ret
add
mov
shrb
jb
pop
loope
fisubs
jo
stc
jle
xchg
xchg
add
lret
push
out
in
scas
or
push
xchg
mov
pop
inc
es
push
call
sbb
cmp
sahf
push
std
jmp
pop
fsubl
inc
or
pop
mov
push
scas
insb
jo
mov
pop
cmp
adc
xchg
xchg
scas
sti
add
adc
mov
jbe
fidivs
fistl
pop
sub
das
sbbl
das
cmp
add
outsb
push
mov
in
int
fstps
nop
test
test
push
adc
pop
mov
mov
adc
adc
jb
sbb
cmpsb
jmp
fldenv
jp
cwtl
sbb
cmpsb
xor
lcall
data16
hlt
jbe
jno
gs
mov
icebp
je
inc
in
cmpsb
lds
in
jl
flds
pushf
mov
jb
mov
dec
out
dec
and
inc
shrl
popl
iret
pop
bound
jmp
loopne
int3
cli
adc
dec
dec
cmp
lahf
sub
in
pop
das
mov
cmp
inc
sti
mov
lea
outsl
and
fnsave
punpckhwd
arpl
jb
out
daa
and
test
jmp
xchg
sbb
aam
cmpsl
cmp
push
rorb
push
iret
stc
aam
pop
rcrl
push
jge
std
sbb
insl
cmp
inc
sub
rol
mov
and
push
pushf
mov
push
xor
mov
adc
cs
loop
in
ret
inc
ljmp
scas
repnz
data16
outsb
pop
ror
pop
mov
movsl
mov
int3
xchg
xchg
jle
pop
cli
push
push
test
sbb
mov
mov
push
xchg
push
nop
cmp
fisttpl
push
hlt
mov
jp
sbb
adc
popl
pusha
das
int3
xchg
sub
mov
rorb
add
mov
mov
cli
dec
mov
xlat
adc
sbb
rclb
push
jmp
stos
lea
adc
add
jg
and
or
aaa
jmp
mov
push
mov
mov
enter
mov
cmpsl
push
xchg
test
loopne
test
cmp
mov
cmp
jb
les
lret
jb
add
inc
test
xor
mov
xor
das
scas
and
test
or
out
das
aaa
or
fisubrl
loopne
leave
pop
xor
imul
popa
imul
mov
jno
nop
xor
fstpt
push
pop
test
mov
pop
push
pop
push
adc
jb
lods
add
and
xor
inc
data16
xchg
out
fincstp
lds
xchg
add
lods
fwait
lea
iret
pusha
fiaddl
mov
sub
mov
xchg
inc
test
dec
jle
push
out
scas
in
xchg
sub
arpl
xchg
aaa
mov
mov
xchg
jae
mov
or
fcmovne
inc
mov
or
dec
sub
lahf
jmp
add
jae
mov
and
mov
and
xor
dec
pusha
ret
cmp
xchg
cmp
jne
adc
enter
outsl
adc
dec
repz
push
pop
or
popf
insl
adc
mov
das
inc
rorl
fnstcw
rolb
je
pusha
cmpsl
mov
pop
shll
jno
repz
rep
incb
sti
xchg
adc
ret
popf
jl
or
pop
ss
sub
inc
xchg
aam
cmp
out
inc
cmpsl
fmuls
movsl
sahf
popf
or
mov
pop
mov
fwait
jnp
in
ficomps
inc
mov
xchg
lcall
and
xchg
repz
pop
mov
mov
daa
xor
pop
push
icebp
scas
stos
inc
and
dec
cmpsl
pop
sbb
jnp
push
cmc
pop
jge
cmp
cmp
mov
sbb
aad
aam
mov
subl
nop
xchg
pop
adc
cwtl
and
out
movsl
jle
fwait
dec
mov
loope
and
scas
and
loopne
jle
push
jns
cmp
out
sti
incl
test
js
sbb
xor
inc
pop
jge
mov
and
mov
adc
icebp
loope
jnp
cmp
xchg
mov
mov
frstpm(287
test
sub
test
add
dec
xchg
mov
scas
inc
loopne
shll
push
pop
mov
mov
icebp
sub
sbb
leave
pusha
mov
mov
and
in
repnz
negl
sbb
rcll
jno
hlt
mov
pop
pushw
mov
xchg
daa
scas
test
movsl
xorb
or
sbb
aam
clc
out
sbb
jg
mov
sub
jp
sbb
jge
fildl
fimuls
mov
lods
lahf
push
loopne
mov
lahf
push
mov
add
into
mov
mov
imulb
and
add
cmpsb
loope
aaa
pop
loop
push
and
xchg
call
sub
pusha
jmp
outsb
pushf
xor
bound
xor
insb
and
sub
push
mov
rcrb
inc
cmc
pop
cmp
lahf
add
jb
insl
or
das
stos
lods
push
push
nop
flds
jmp
mov
outsl
mov
lahf
push
int
push
add
jno
xor
stos
test
call
or
inc
stos
mov
dec
sbb
push
cmpsb
push
and
les
or
add
jae
cltd
stc
pop
aas
fcmovb
add
jl
fldcw
jns
adc
aas
xchg
lods
xchg
xlat
negb
xlat
or
cmpb
lahf
xchg
in
movhps
leave
mov
test
pop
mov
and
mov
les
push
adc
pop
mov
push
test
rcr
sbb
inc
xor
pop
leave
add
cmpsb
pop
rol
dec
add
mov
lret
test
sahf
pop
push
inc
and
push
out
pop
and
push
pop
dec
sub
or
out
pop
or
cmp
inc
jne
cli
adc
xor
shl
out
push
paddsb
push
adc
cmp
rolb
shrl
daa
push
mov
in
sbb
fwait
and
imul
add
aad
idivb
loope
movsl
dec
add
cmpsl
jp
inc
pusha
push
cltd
dec
mov
lods
sbbb
insb
jae
push
dec
cs
ret
pop
sub
push
fsubl
dec
inc
fbld
mov
gs
mov
adc
xchg
xorb
xchg
inc
jmp
dec
push
loope
push
test
scas
lcall
es
pushf
adc
in
or
push
or
xchg
sub
test
inc
fs
hlt
testb
loop
mov
mov
adc
int
mov
xchg
ficomps
adc
repz
rcl
mov
mov
sahf
mov
repz
push
movsl
hlt
js
cmp
loopne,pt
jb
fsubl
xorb
lea
int
push
pop
adc
stos
inc
popa
cltd
add
bound
int
push
pop
lods
sub
and
pop
cmp
adc
xchg
dec
fwait
xor
pslld
cli
mov
out
mov
cwtl
jp
ljmp
outsb
in
int3
sub
lahf
pushf
xchg
add
es
xor
call
pop
xchg
loope
sbb
cltd
sub
cmpsl
adcl
fiadds
icebp
addps
mov
aaa
jecxz
sub
in
addb
out
clc
xor
cmp
jb
xchg
mov
inc
fwait
or
xlat
mov
aam
push
int
clc
jns
push
push
dec
pop
mov
inc
incb
push
cli
adc
mov
jl
sub
push
ficoml
sarl
dec
in
pop
mov
mov
xor
fsts
add
inc
daa
scas
sbb
lret
aaa
movsb
cmp
aad
xor
pushf
jecxz
sbb
pushf
adc
aad
sahf
cmp
adc
push
and
pop
xchg
outsl
xchg
push
sahf
adcb
cld
add
mov
mov
shl
or
cmpsb
insb
cmp
dec
lods
sub
shll
cli
jp
xchg
imul
mov
pop
jg
sbb
mov
mov
adc
sub
fmuls
lods
xor
dec
cli
and
int3
adc
add
movsl
sarb
add
fwait
mov
inc
mov
shrl
adc
lret
loope
idivl
xchg
lcall
jae
into
pop
xchg
xor
cmp
ja
hlt
out
sub
in
imul
jecxz
ljmp
ss
lds
lret
js
imul
in
ret
jge
fwait
and
sub
jb
ljmp
push
cld
sbb
sub
jp
xchg
lock
inc
shlb
loopne
sbb
adc
sub
lds
aas
pop
and
lds
pop
scas
sub
movb
dec
roll
lret
push
inc
hlt
imul
dec
cltd
cmp
mov
xchg
lea
sub
repnz
cmp
test
movsl
adc
inc
push
sub
pop
or
mov
jo
or
jnp
into
and
jns
dec
pop
xchg
mov
sahf
sti
loope
fwait
xor
cmpsl
push
adc
gs
mov
loopne
scas
and
mov
sub
in
lock
call
fsubs
out
push
and
mov
or
sti
fwait
into
mov
mov
rclb
jnp
mov
pop
mov
dec
lahf
xchg
ljmp
das
jle
sahf
xlat
jns
in
sbb
add
sbb
pop
xchg
test
test
add
sar
and
out
pop
add
push
arpl
andl
jle
sub
xor
push
jmp
outsb
cmpsl
ljmp
pop
data16
pop
ret
adc
sbb
xchg
enter
insl
movl
inc
aam
pop
xlat
or
ficoml
add
xchg
out
sahf
loope
fcompl
sbb
loopne
hlt
scas
push
scas
sar
and
xlat
inc
ret
mov
xchg
in
cmpl
outsl
repz
je
jl
icebp
outsb
mov
adc
or
jno
mov
cmp
cmp
mov
iret
jl
aaa
ja
fincstp
dec
xchg
dec
jl
jmp
hlt
dec
into
dec
dec
les
in
popf
loopne
mov
sub
push
cmp
lcall
dec
aaa
or
lcall
push
insb
cli
fldenv
sbb
lds
insb
enter
into
add
cmp
inc
adcl
inc
test
or
dec
out
aam
or
push
or
push
xchg
subb
jne
mov
pushf
xchg
mov
call
out
ret
ds
std
inc
imul
ret
shll
cmpsb
xor
lret
sahf
outsl
adc
jae
ret
cli
popa
add
lods
mov
xchg
aam
push
es
inc
pop
out
dec
or
aas
adc
sub
test
sub
xor
xor
sbb
stos
fldt
pop
or
divl
sub
sbb
add
pop
sub
pop
aaa
in
clc
ffree
movsb
push
push
push
jbe
xor
sub
add
clc
lcall
icebp
shrl
push
ss
cmp
lret
mov
bndstx
cs
mov
je
mov
adc
inc
lcall
adc
mov
jnp
add
mov
outsl
fisubrl
push
push
or
push
leave
loop
sub
jl
addps
in
in
mov
push
xchg
rcll
inc
add
sbb
jg
push
inc
mov
stc
jmp
push
sub
lret
lcall
testl
xor
xor
ret
xrelease
aad
and
xchg
test
mov
push
sbb
bound
aas
je
mov
cli
outsl
mov
jle
wbinvd
cmp
into
out
lahf
inc
mov
mov
test
sub
jns
rcr
testl
jg
mov
pop
ds
imul
ret
or
sbb
out
insb
push
mov
ret
in
cmpsl
jae
xchg
adc
add
xlat
ret
repz
nop
loope
aad
mov
fdivl
ret
lret
in
nop
xor
in
or
jecxz
pusha
add
mov
inc
pop
adc
add
mov
in
mov
shrl
pop
bnd
or
xchg
fimuls
xchg
in
xor
insb
and
adc
in
in
push
mov
or
mov
inc
pushf
mov
test
add
dec
jbe
ss
insl
cmp
and
cli
jl
aas
xchg
ja
lods
sbb
stos
adcl
pop
or
fsubs
daa
pop
idivb
imul
imul
imul
shlb
pop
cmc
cld
dec
and
into
mov
into
nop
mov
loopne
push
push
push
add
inc
int
adc
xchg
pop
sbb
mov
add
add
loop
aad
xor
mov
es
lea
xor
arpl
icebp
cmc
lret
stos
jge
inc
jbe
jo
rcl
dec
push
fistps
sbb
imul
inc
data16
push
sub
lcall
imul
mov
xchg
fcomp
jo
add
mov
sub
cmp
enter
push
xor
mov
es
cmc
int
xchg
push
pushfw
mov
jmp
add
mov
dec
movsl
scas
mov
in
xchg
mov
andl
sub
pop
sbb
shrb
pop
in
out
shl
mov
stos
xchg
pop
pop
xlat
pop
pusha
mov
aam
or
nop
mov
or
lcallw
mov
arpl
dec
adc
push
jnp
inc
or
and
sbb
call
stos
mov
icebp
adc
movsb
out
add
pushf
repnz
out
mov
jae
add
sbbb
fsubs
out
xchg
cmp
push
pop
push
cmp
je
clc
mov
mov
movb
fidivrs
add
push
add
gs
jae
adc
mov
inc
push
mov
jecxz
aaa
xor
dec
loop
testb
adc
push
rorl
or
lret
dec
adcb
dec
jge
push
push
cwtl
add
lds
lcall
adc
or
pop
dec
sub
mov
fs
jbe
fisubl
popf
jno
jmp
push
xchg
in
mov
out
mov
imul
and
adc
in
loop
sub
aaa
popf
sub
push
jns
stos
jo
arpl
sti
loope
loop
rol
or
sbb
dec
out
test
lea
incb
add
push
xchg
mov
sub
mov
out
xchg
fcoml
xor
ja
pushf
adc
in
xor
mov
imul
sarb
push
in
outsb
jne
sar
ret
fxtract
sub
repnz
push
out
push
mov
in
fnstsw
popa
pop
xchg
test
cmp
pop
in
push
cmp
cwtl
add
sub
test
nop
mov
mov
mov
and
fsin
incl
fimuls
push
scas
cmpsl
xchg
cwtl
mov
ja
jo
pop
sbb
lahf
scas
push
jbe
addr16
inc
out
jp
cwtl
subb
xor
mov
mov
incb
mov
in
es
sub
in
test
cmp
or
sbb
std
hlt
cmpsb
les
and
outsl
jbe
jg
lock
jl
inc
xchg
adc
aas
push
cmp
mov
sub
mov
imul
mov
jmp
popa
adc
call
and
arpl
jecxz
enter
fidivl
mov
and
jnp,pn
fnstsw
test
mov
sahf
shlb
sbb
mov
fwait
mov
in
or
dec
arpl
test
out
out
push
mov
xor
pop
xlat
jmp
sbb
xchg
ljmp
mov
sbb
mov
jbe
fdivs
popf
sbb
push
jmp
xchg
pop
mov
and
pop
cmp
in
adc
stos
outsb
fisttpll
cmp
jp
pop
cmp
stos
mov
xchg
dec
popl
fs
fstpl
cmpsb
out
pop
and
hlt
push
or
lods
xchg
inc
or
xor
xor
sti
call
sbb
mov
mov
or
stc
daa
pop
gs
js
ds
or
and
xchg
std
pop
mov
xchg
aaa
es
mov
cmc
mov
out
aam
icebp
inc
xor
les
dec
or
xor
in
push
mov
xchg
enter
jb
stos
cmpsl
pop
popf
adc
dec
test
xchg
in
pop
dec
xchg
aas
jmp
mov
and
mov
hlt
addl
das
jge
mov
jns
lds
dec
xchg
fnsave
mov
push
xor
jl
cmp
aam
clc
jb
cld
inc
cltd
and
or
gs
jne
sub
ret
cmp
popa
push
dec
das
bound
push
cs
xor
lcall
cmp
lock
out
dec
cltd
push
das
aaa
pop
and
pop
sbb
inc
dec
les
cmp
dec
add
xchg
int3
mov
inc
popa
xchg
or
xor
out
mov
ds
push
sti
add
push
sub
in
mov
loop
outsl
lds
pop
loopne
femms
fsubrs
push
and
leave
testb
jecxz
mov
movsl
mov
cwtl
push
add
pop
cmp
pop
ficoml
je
loopne
scas
inc
inc
lods
dec
inc
push
add
icebp
pop
add
or
pusha
cmp
push
dec
aas
je
or
add
cmp
jmp
inc
js
fbld
sbb
das
jg
fnstcw
shr
int
push
mov
xor
and
push
jmp
fnstenv
push
pusha
inc
icebp
push
add
add
or
data16
cmp
jae
mov
and
cmp
scas
aaa
mov
inc
xorb
fwait
aam
adc
mov
sbb
xchg
add
or
cwtl
imulb
cmpsb
push
xor
hlt
and
bound
xor
dec
push
xor
mov
in
jmp
mov
clc
imul
sub
pop
sub
mov
dec
mov
popa
das
pop
cmp
ljmp
adc
loopne
mov
outsb
ja
gs
xchg
cmc
mov
es
lret
xchg
repz
jne
cmpsl
jmp
cmp
nop
movsl
rcl
fldl
test
mov
pop
jns
aas
sbb
xchg
mov
pop
cmp
lds
jo
dec
sbb
aam
sbb
stos
mov
out
jecxz
xchg
lock
inc
or
dec
cmpsb
lods
aas
out
sub
add
or
and
cmpsl
popl
inc
scas
in
mov
test
ret
dec
pop
cmpsl
ss
iret
xchg
pop
gs
mov
mov
popa
sbb
jne
xor
pop
aaa
cli
lea
cmp
mov
mov
insb
push
mov
sub
into
arpl
popf
xchg
test
and
lods
sbb
pop
movsl
jecxz
xor
add
cmpsb
fmuls
cli
push
xchg
add
adc
arpl
aam
pusha
sbb
inc
adc
mov
dec
aaa
mov
mov
rcll
lds
dec
shr
iret
and
xchg
fcmovnbe
jns,pt
adc
lret
push
xor
cwtl
push
popf
add
pop
orb
cltd
imul
xchg
dec
test
pop
test
sbbl
inc
jnp
out
cs
xchg
cltd
mov
stos
inc
push
out
adc
insb
mov
add
xchg
lds
insb
xor
xchg
out
in
push
repz
stos
sbb
fwait
scas
push
xchg
inc
pop
cli
jp
or
xor
lahf
out
sub
popa
ss
loop
je
stos
test
adc
mov
addr16
dec
sahf
js
test
cli
pop
inc
imulb
xor
and
jne
sbb
fidivrs
inc
mov
lcall
imul
cltd
sbb
ljmp
add
push
push
or
inc
fucomi
pushf
xor
xchg
arpl
addr16
dec
cs
in
xor
pop
jle
jae
fcompl
aam
das
vpaddd
arpl
mov
int3
lock
daa
and
and
movsl
aam
xchg
in
cltd
push
or
push
dec
mov
sub
inc
pop
mov
fsubl
loopne
and
sub
sti
add
mov
inc
imul
xor
ret
and
jl
inc
fwait
in
and
insb
inc
xchg
ret
xchg
and
outsb
pop
mov
xchg
dec
add
mov
lcall
dec
dec
outsb
rorb
std
or
aam
xorb
ja
dec
mov
and
jge
popf
cli
xchg
int
push
add
ret
and
sub
mov
in
and
loop
adc
sti
icebp
adcb
shll
adc
pop
jle
pop
jecxz
sbb
jmp
adc
pushf
ss
repnz
ss
dec
loope
or
das
ret
pop
fs
fistpl
hlt
mov
sbb
push
popf
cmp
stos
and
sub
std
loop
pop
push
dec
aad
pop
jge
popa
ja
lret
std
and
jle
ficompl
push
test
inc
ljmp
test
sbb
loop
push
jmp
lods
mov
inc
sbb
cmp
cmpsl
shlb
jmp
lahf
test
or
and
xchg
and
mov
fldl
push
mov
loopne
xchg
cld
test
test
sar
jle
mov
add
adc
lea
pop
fcomps
lods
xchg
inc
inc
xchg
jmp
cmp
xorb
pop
xchg
push
pop
fxtract
rcl
adc
aas
pop
xlat
push
dec
enter
mov
cmpsb
mov
mov
mov
inc
or
mov
sub
add
dec
hlt
mov
mov
aaa
pusha
mov
jg
out
insl
aam
add
cmp
orl
cmc
pop
cwtl
push
inc
xchg
jns
push
fisubl
inc
mov
push
daa
push
stc
or
xchg
cmp
data16
mov
mov
inc
pusha
in
cltd
or
mov
fwait
inc
rolb
and
pop
push
cmc
cmp
jae
cwtl
pusha
rclb
cmpsb
aam
les
ss
and
fldt
aad
lock
xchg
pushf
cmp
fimuls
inc
int
xor
scas
loop
or
mov
sub
mov
imul
stc
out
sbbl
mov
hlt
sbb
jnp
lahf
dec
iret
std
sub
je
ljmp
jecxz
push
mov
cmpb
xor
xchg
pushf
mov
lea
dec
mov
aad
or
push
add
add
jns
rcrl
xchg
cli
push
cmp
popa
inc
cltd
push
inc
cmp
dec
or
sbb
ss
pop
add
popf
imul
out
inc
jns
icebp
jne
out
daa
ret
and
int3
mov
push
jb
inc
jne
imul
jmp
mov
lods
cltd
jge
lret
xchg
xlat
inc
lcall
jmp
mov
repnz
or
lcall
loop
jb
or
int3
mov
mov
push
xchg
mov
push
mov
mov
or
cmp
and
test
jno
idiv
imul
sti
mov
and
jle
push
jge
sbb
adcb
pop
inc
add
dec
xorb
lret
or
adc
adc
shrl
adc
int
out
push
mov
cmp
punpcklbw
xor
pop
je
xchg
in
push
enter
inc
sarl
mov
fiaddl
les
stos
xchg
push
fisubs
inc
mulb
sub
in
popa
aam
adc
push
mov
adcb
push
push
scas
lds
out
dec
pop
mov
insb
idivl
out
insb
shlb
jg
mov
data16
data16
push
mov
xor
mov
fiadds
jnp
vmovsd
inc
dec
mov
mov
divl
mov
hlt
sbb
cmp
mov
cwtl
mov
ret
mov
imul
inc
shrb
sti
mov
xlat
add
xchg
rorl
push
call
movsl
cmp
xchg
push
movsb
fildl
sub
mov
cmc
ljmp
push
dec
or
in
add
movsl
int
jnp
or
nop
dec
xchg
dec
cmc
xorl
rdmsr
cmp
dec
or
mov
inc
push
movsl
xchg
std
loop,pt
pop
push
jnp
dec
out
repz
xchg
fwait
popf
mov
and
jbe
dec
mov
lods
xchg
dec
and
inc
dec
push
test
popa
mov
xlat
add
mov
lea
loop
add
sub
call
int
add
mov
xchg
jmp
mov
fnstsw
scas
mov
out
push
push
aam
in
fdivs
or
sub
xor
fldl
fldpi
sub
push
iret
xor
inc
push
inc
lods
jmp
jbe
cmp
sahf
push
mov
push
and
iret
mov
push
mov
aam
add
sbb
iret
cmpsl
stc
jmp
mov
pusha
add
mov
pop
movsl
cltd
or
lea
in
lods
in
mov
jo
pop
dec
mov
push
dec
mov
dec
xor
and
sbb
jne
pusha
sub
mov
aad
inc
pop
mov
sbb
inc
xor
aad
inc
jae
iret
mov
pushf
in
ljmp
cs
ss
in
es
in
cs
push
or
jno
insb
fildl
inc
mov
dec
mov
inc
pop
push
xchg
arpl
pop
into
cmp
mov
jno
xor
in
test
inc
imul
out
jp
adc
cmc
andl
movsl
lahf
clc
test
ljmp
clc
pop
cltd
adc
fistpll
add
xchg
xor
push
stc
mov
jno
add
jo
and
mov
sub
popa
cmc
loope
ljmp
scas
or
cmpsl
push
data16
push
pushf
xor
dec
or
and
cmp
lods
and
xor
jp
jg
lahf
xor
and
bnd
js
push
or
out
or
pop
fldt
jbe
push
icebp
pop
insl
adc
idivl
popf
jge
cltd
pop
lds
popf
jge
rorl
dec
mov
hlt
add
idiv
push
inc
insl
mov
popa
ljmp
out
mov
inc
inc
xchg
push
mov
pop
mov
cmp
fs
cli
stos
mov
mov
jno
mov
cltd
push
push
repnz
cld
negl
mov
xor
pop
inc
movsb
sbb
dec
nop
sub
inc
ret
mov
sbb
xchg
rclb
sbb
and
out
shlb
cli
cld
mov
sti
fstps
bound
xchg
lret
aad
push
xor
push
int3
push
adc
into
mov
sbb
sbb
jae
adc
lock
in
sub
mov
add
adc
and
or
sbb
data16
jle
mov
xchg
mov
roll
xchg
mov
mov
xchg
jb
into
cmpsl
push
insl
icebp
jmp
inc
stc
cmp
and
cmpsl
cld
enter
add
push
insl
cmp
sbb
lock
or
xchg
cmp
stos
sub
and
push
cmp
adc
cmpsl
les
gs
adc
js
into
sub
dec
shl
or
loopne
pop
aas
notb
adc
icebp
mov
mov
lea
inc
fisttpll
and
xchg
add
sub
cmpsl
gs
cmp
lret
sub
mov
xchg
decb
inc
out
dec
or
ljmp
add
sbbl
jnp
out
add
adc
es
pop
pop
out
orb
repnz
inc
jnp
cmp
push
adc
leave
sub
sbb
pushf
sbb
lret
mov
hlt
enter
movsl
push
mov
sbb
jle
lret
ret
or
jno
xchg
loope
push
mov
repnz
sarl
push
mov
push
call
adc
cmp
mov
xor
pop
outsb
adcb
dec
sbb
shr
aaa
mov
test
je
mov
icebp
out
sbb
test
into
mov
mov
stos
push
inc
sub
jae
leave
ds
mov
mov
dec
sub
das
adc
cltd
jg
push
fiadds
sbb
xchg
xchg
fsubs
inc
in
lock
add
pop
lret
aad
push
add
lcall
dec
clc
or
popf
addr16
in
add
jbe
ret
sub
mov
into
inc
xchg
adc
pop
mov
and
rorl
adc
fsts
into
push
scas
cltd
loopne
orl
push
nop
rclb
cmpsb
pshufw
sbb
into
in
lahf
fwait
sbb
arpl
mov
inc
push
stos
ret
jge
les
sub
dec
je
cli
xor
fistpl
mov
mov
je
in
nop
imul
xchg
or
jecxz
sub
roll
push
mov
push
orl
imull
dec
cld
mov
pop
decl
pop
sub
in
rclb
dec
adc
mov
push
jge
icebp
insl
sbb
in
clc
and
fdivrl
imul
clc
mov
aas
and
and
push
in
dec
mov
sbb
sbb
sub
popf
fnstenv
mov
loope
out
and
mov
test
mov
xor
fbstp
jl
pop
call
loopne
adc
addr16
and
int
inc
push
test
in
fimull
xchg
fcom
lret
and
mov
int3
jmp
inc
popf
adc
outsl
xchg
pop
mov
rcll
bound
xchg
subl
jne
jmp
xchg
mov
sub
mov
enter
lcall
mov
push
call
stos
fsub
inc
jecxz
loope
dec
andb
fwait
loop
add
insl
cmc
ret
jl
pop
aaa
insb
add
xor
into
mov
cmc
sbb
fisubrs
jmp
scas
pop
outsl
scas
stos
dec
stos
xchg
jge
inc
lret
xchg
push
inc
mov
insl
cmp
loop
testb
inc
inc
sub
adc
loopne
ljmp
push
xchg
jg
int3
adc
pop
cmp
dec
mov
daa
xchg
aas
and
insb
pop
jo
xor
sub
and
xor
fildl
xlat
or
test
jl
inc
cmp
cmp
outsl
jns
pop
mov
call
ja
jne
inc
daa
jl
lods
bound
cltd
ja
sub
jecxz
xchg
sub
shrb
dec
push
cmp
mov
mov
xor
lods
push
insb
rolb
sub
scas
push
sbb
or
call
sub
jb
xchg
add
jnp
pop
sub
adc
in
enter
pop
stos
pop
mov
inc
or
lcall
jecxz
sbb
and
adc
dec
in
in
mov
imul
jge
fadds
mov
sahf
pop
repz
cli
mull
dec
mov
or
sarb
enter
loope
push
jb
xchg
mov
call
push
inc
es
mov
inc
lods
mov
fwait
push
popf
adc
or
imul
ljmp
xor
insb
addr16
sbb
loope
dec
mov
push
mov
xchg
lcall
xchg
dec
push
mov
mov
sbb
jo
and
push
cmc
daa
cmpsl
pop
and
daa
dec
ljmp
mov
or
mov
jae
and
inc
int3
out
xchg
aam
xor
xor
adc
pop
mov
clc
xor
dec
pop
stos
hlt
jp
pushf
push
jb
pop
xor
cli
scas
xchg
sbb
fldenv
cltd
xchg
aas
mov
mov
es
xor
ljmp
xchg
inc
cmpb
popa
xchg
call
bound
add
xor
sub
fnstcw
pop
mov
icebp
movlps
xchg
add
cs
fcomip
lret
stos
jmp
dec
lods
arpl
daa
rcr
dec
mov
scas
jno
repz
mov
out
stos
push
cltd
shlb
hlt
and
ss
cmp
jmp
fsts
orb
sub
inc
or
shl
dec
and
or
sbb
push
xorl
fstl
adcb
push
test
dec
in
adc
and
insb
pop
leave
bound
inc
sti
mov
mov
push
fcompl
push
andl
xor
cmpsb
cmp
ds
inc
mov
mov
out
jge
or
int3
jbe
fstpl
repnz
jecxz
lods
popf
dec
jo
popa
sbb
add
or
xor
mov
enter
ret
sub
movsb
mov
loop
mov
mov
jns
insl
push
std
stos
gs
fwait
xchg
sarl
ljmp
loop
nop
cltd
cmpsl
test
mov
loopne
lahf
aad
pop
inc
dec
out
loopne
sti
sub
je
sub
xor
rorb
mov
mov
jge
sub
stos
into
sbb
stc
cmc
mov
sbb
dec
lahf
xor
cmp
push
jo
lret
sub
cmp
out
icebp
out
dec
dec
lcall
mov
pop
mov
cmp
sarb
repnz
sbb
mov
cmp
xor
loopne
xchg
test
xchg
lds
stos
imulb
test
xlat
push
je
shl
decl
stos
sub
cltd
es
das
insb
sbb
test
pop
lods
mov
mov
sub
out
pop
mov
add
or
sbb
ljmp
stc
in
inc
hlt
sub
mov
hlt
xchg
into
je
sbbb
movsb
mov
enter
jns
inc
or
imul
ja
jns
cltd
mov
lcall
leave
add
push
loopne
add
fisubl
les
xor
scas
xchg
inc
push
sarl
movsb
adc
shll
sub
inc
sarb
push
add
adc
aaa
ret
jo
jmp
mov
dec
cmp
mov
cmc
gs
rcrl
mov
test
popa
mov
ja
inc
fcoml
xchg
mov
add
xchg
hlt
iret
mov
lds
sbb
cmp
xor
das
movhps
push
dec
cmp
outsb
rcrl
jne
dec
cld
lock
iret
adc
fsubl
sub
sti
adc
outsl
cmp
je
das
inc
jg
mov
ja
loopne
ret
imul
xchg
nop
jo
dec
int3
jno
xor
rcll
test
scas
pusha
xchg
mov
pushf
xor
enter
outsb
xor
or
lret
scas
push
in
jb
push
cwtl
mov
test
mov
mov
out
or
mov
shlb
aas
daa
and
pop
scas
cmp
or
sbb
pushf
mov
push
nop
add
mov
fwait
jle
outsl
sbb
xlat
dec
adc
jb
mov
add
xchg
add
sbb
cltd
dec
mov
sbb
ficoml
inc
jge
pusha
sbb
mov
fcompl
or
mov
inc
mov
pop
incl
inc
jecxz
test
pop
jge
test
popa
mov
sub
iret
popa
iret
push
stc
xchg
ja
mov
out
adc
test
lcall
jae
jae
adc
pop
cmp
outsb
out
push
rorb
mov
daa
inc
cmp
push
ret
inc
mov
mov
loopne
mov
gs
xchg
arpl
fistps
mov
je
stos
inc
jb
test
push
ud1
pop
xchg
fildll
mov
mov
popa
hlt
out
jle
jl
add
clc
je
inc
emms
das
mov
or
lret
bound
fldt
push
dec
inc
dec
enter
and
sarl
insb
dec
movsb
xor
adc
xor
ss
mov
outsb
iret
adc
dec
mov
mov
add
or
popf
fwait
jl
jae
or
xor
fidivrs
mov
dec
lahf
dec
movsl
pop
jge
fs
xor
push
and
in
or
ja
insb
rorb
push
fsubrs
and
inc
call
cmp
cmp
clc
ja
add
pop
rorl
dec
jmp
inc
lods
lds
pmaxsw
xchg
addb
in
or
inc
mov
loopne
dec
xchg
mov
mov
dec
ljmp
inc
stos
jbe
shlb
and
fisubs
xchg
pop
cmc
outsl
mov
popf
ljmp
adc
imul
jle
xor
mov
sub
scas
cs
inc
inc
addr16
movsl
push
push
cmp
inc
or
fstpt
sarb
or
xchg
jle
pop
lret
xorb
dec
js
or
lcall
push
pushf
jnp
mov
hlt
pop
out
pop
ja
into
mov
repz
mov
pop
push
js
mov
arpl
stos
mov
aaa
nop
cmp
cmc
and
ljmp
ret
roll
and
scas
mov
mov
scas
jp
sbb
mov
dec
xor
xchg
dec
sti
cmp
ja
popa
iret
push
inc
lock
mov
ds
push
subl
sbb
shrb
mov
mov
pop
jo
fdivr
mov
jne
adc
adc
xchg
ret
andl
je
push
jl
mov
adc
enter
insl
or
fcompl
jmp
sbb
int
mov
mov
cmp
inc
cltd
inc
mov
push
mov
and
lods
sbb
pop
add
jecxz
pop
scas
xlat
shrb
mov
dec
and
xchg
fidivrl
sub
out
xor
dec
xchg
out
inc
adc
jmp
jno
mov
icebp
data16
std
add
jp
ja
mov
ja
mov
cmp
adc
dec
in
out
mov
loop
mov
dec
adc
aaa
cmp
dec
adc
lret
stos
jp
sbb
fcoml
arpl
add
movsl
pop
dec
fst
dec
es
popf
sub
mov
icebp
mov
insb
cmp
pop
mov
test
push
fs
adc
outsb
lods
std
dec
mov
mov
mov
pop
scas
scas
dec
mov
jmp
test
xlat
aad
xor
fidivs
xor
sub
fcmovnbe
lds
in
pop
movsl
std
out
sbb
pop
mov
sbb
pop
mov
sub
outsl
jo
jmp
pushf
test
addr16
data16
sti
xchg
or
or
filds
push
jb
pop
inc
sub
sbb
sbb
sbb
hlt
dec
add
pop
das
das
cs
xor
xor
in
push
test
int3
shl
pushl
push
sbb
loop
jl
lea
std
sub
shrb
dec
jae
ss
or
or
jo
jp
mov
adc
push
push
cmp
std
shr
jne
mov
jno
loope
jmp
xor
push
adc
xchg
cmp
ja
or
pop
sarb
mul
addr16
sub
pushf
jecxz
mov
adcb
mov
inc
sbb
mov
mov
out
arpl
call
lds
shlb
xor
mov
out
jns
test
lock
add
jb
xchg
jne
push
int3
leavew
add
add
test
or
xor
mov
and
scas
push
jmp
cmpsb
mov
repz
pop
xchg
mov
sub
pop
enter
std
out
mov
stc
test
shr
packuswb
adc
and
adc
fstpl
and
push
stos
sub
mov
pop
aad
clc
loopne
jl
mov
adc
xchg
dec
mov
pop
cmpsb
pop
aam
or
dec
mov
jae
cmc
and
pop
shlb
sbb
pop
sub
test
mov
xchg
lock
xchg
movsl
jbe
lahf
addl
jo
push
xchg
inc
xor
aas
nop
bound
int3
mov
inc
cli
push
sti
das
jno
push
and
sub
imul
insb
nop
fisubrl
das
cmp
outsb
mov
dec
mov
enter
stc
out
mov
add
jnp
jb
test
mov
repz
xor
mov
std
jb
gs
push
jecxz
int
push
cmp
in
aam
inc
cmp
mov
aad
inc
aaa
stos
jle
addr16
push
test
test
pop
push
sarl
ss
aaa
sahf
mov
mov
pop
mov
mov
adc
cmp
inc
mov
cmpsb
or
jmp
mov
cmc
roll
stc
push
push
or
add
inc
lock
decb
xchg
push
xchg
insl
jne
outsl
mov
mov
sub
in
sbbb
in
sub
adc
mov
sub
lret
or
inc
out
sbb
xor
xor
fs
outsl
movsb
imul
das
inc
fnstenv
cld
fidivs
pop
mov
sub
mov
inc
jbe
xchg
sub
add
cmpsb
inc
jmp
sbb
jmp
les
or
mov
add
pushf
sub
nop
aaa
push
add
sbb
jbe
mov
mov
inc
orl
xor
fisttps
adc
push
mov
and
push
xorl
xchg
pop
jnp
push
movsb
xchg
cs
jle
lock
or
inc
cmp
jne
cmpsl
xlat
pop
mov
lods
sub
mov
fdivs
sub
adcl
mov
adc
clc
mov
or
pop
and
or
lods
push
fisubrs
mov
addb
mov
or
add
xchg
fstl
xchg
clc
jge
ret
ljmp
pusha
pop
movsb
inc
mov
pop
push
push
scas
test
test
mov
mov
andl
in
repz
out
rcrb
xor
mov
sbb
popf
pop
ret
call
xchg
lods
mov
or
out
dec
dec
fldenv
jno
out
inc
inc
fcmovb
cmpb
fdivr
adc
add
call
push
xchg
outsl
mov
pop
movsb
cmpsb
mov
in
aad
cmp
xor
pop
rcrl
mulb
push
xor
or
insb
cs
lds
push
mov
jl
es
ret
sbb
loopne
mov
cmp
or
test
cmpsl
cs
jbe
mov
scas
or
dec
pop
ret
push
add
incl
jae
fxch
and
in
mov
adc
mov
cmove
push
clc
fstps
adc
push
outsb
push
sbb
push
and
fiaddl
rcl
in
inc
jle
faddl
mov
faddl
lret
sub
push
pop
push
addr16
push
xchg
sbb
pop
movsb
xor
loopne
mov
jbe
add
nop
mov
jne
in
subl
mov
scas
cmp
cltd
or
jo
inc
inc
cld
jns
jle
fadds
jbe
mov
jae
add
subb
xchg
dec
mov
ss
inc
inc
mov
cmpsl
movsb
loop
mov
js
pop
sahf
outsl
jb
mov
pop
imul
aam
dec
xlat
sbb
ror
ljmp
arpl
stos
testb
mov
jae
add
jnp
aad
push
lahf
mov
xchg
popf
inc
cltd
iret
mov
repz
testl
add
cwtl
mov
mov
xchg
sti
test
ds
push
gs
mov
adc
xor
push
inc
cmc
insl
xor
jbe
scas
loop
inc
jbe
jo
adc
mov
int3
andl
jne
fisttpl
fucomi
jb
fbstp
into
cmp
movsl
push
mov
sbb
icebp
lcall
sbb
mov
dec
adc
sti
mov
aas
sahf
scas
inc
cs
and
pop
mov
fdivrl
xor
sub
imul
int
int3
mov
inc
and
andl
lods
xlat
push
rcrb
sti
add
dec
xor
push
cmp
orb
dec
inc
fwait
sub
pop
fldcw
dec
push
mov
rcrl
cmpsl
sbb
pop
adc
mov
jle
xchg
aad
push
and
pop
cli
inc
lahf
daa
je
jle
sbbl
iret
pop
ret
mov
sub
pop
test
fwait
loop
push
call
xor
arpl
in
dec
in
inc
dec
adc
mov
sub
xor
in
dec
fsubrs
xchg
cmpsb
jmp
adcb
jns
ficomps
or
std
add
sub
iret
out
fwait
xchg
shlb
jmp
mov
arpl
and
mov
or
jne
cwtl
cmp
jl
pop
imul
mov
inc
fstpt
lea
scas
or
mov
pushf
xor
adc
out
mov
or
jns
gs
leave
xor
or
aam
mov
lock
jl
ja
aaa
mov
pop
cld
jmp
in
and
es
mov
jmp
leave
mov
sub
fcmovne
or
orb
popa
inc
jmp
js
pop
push
ja
ljmp
inc
jg
cmpsb
dec
sbb
fistpl
and
lods
mov
jno
fistps
mov
sbb
jg
add
test
push
fcmovne
test
push
mov
into
adc
push
mov
std
cmp
mov
mov
xchg
sar
ss
adc
xchg
dec
pmulhuw
subb
add
and
adc
pop
lahf
inc
dec
hlt
insb
je
or
lcall
loop
push
sbb
xchg
add
jmp
cmpsl
mov
mov
adc
mulb
xor
push
adc
fldl
jmp
push
das
adc
mov
idivb
pop
mov
mov
nop
push
cltd
mov
stos
add
xchg
jmp
ljmp
andb
sub
fmull
add
daa
sbb
lahf
lock
fs
add
fadds
out
cltd
insl
repnz
mov
dec
xchg
sbb
inc
push
clc
in
in
aad
cmp
sti
pop
mov
popf
inc
call
subl
sbb
adc
push
push
mov
outsb
sarb
pop
ljmp
daa
ja,pn
sbb
jle
loop
into
jmp
push
push
cmc
lret
shlb
fwait
ja
addr16
pop
and
jmp
push
sbb
iret
divb
mov
hlt
add
or
int3
xor
and
hlt
cmp
xchg
loop
sbb
cmp
push
out
jle
mov
enter
fcoms
jecxz
jmp
movsl
sbb
js
ss
xchg
xchg
out
mov
sub
mov
add
lret
loop
lea
je
frstor
rcl
xchg
cmp
ljmp
aaa
sbb
cli
xchg
mov
add
shrl
insl
sub
popf
lahf
imul
cmp
inc
jmp
scas
inc
clc
std
jg
dec
inc
jmp
lcall
cmpsl
flds
out
and
inc
xor
jge
pop
rcl
cld
add
cmc
mov
scas
jo
push
jb
loop
dec
add
xor
push
ficomps
movsb
scas
clc
insl
clc
and
pop
mov
adc
das
pop
mov
fs
into
sbb
ror
dec
jno
ss
rcrb
cltd
loopne
int
jns
dec
movsb
xchg
mov
test
popf
je
mov
pop
cmp
and
inc
in
out
rcr
out
push
jnp
cli
jnp
ds
inc
cmp
inc
int3
movsl
flds
mov
arpl
cltd
mov
fldcw
mov
aam
and
fidivrl
dec
mov
mov
pop
cmp
fcoml
push
pop
sti
cs
clc
xor
jge
adc
xchg
fistpll
fcoms
mov
stos
xchg
or
int3
out
sub
dec
cmc
sahf
sub
sbb
cmp
jecxz
nop
or
fistl
clc
mov
repz
sub
movsl
or
push
ss
icebp
scas
pop
xlat
adcl
fisttpll
cs
fldl
incb
sbb
mov
and
movsb
inc
int
rorb
xor
popf
mov
insb
jmp
mov
xor
jbe
fmuls
insl
and
pushf
or
or
xor
aaa
adc
xchg
sbb
adc
repnz
xor
adc
adc
repnz
jecxz
push
cs
cmpsb
pushf
in
xchg
iret
inc
lahf
cld
imul
in
out
cmp
jg
fidivl
adc
dec
std
mov
and
push
mov
dec
test
shlb
mov
xor
hlt
or
jb
cld
sbb
fnstcw
inc
dec
jns
jecxz
sbb
not
xor
scas
adc
and
pop
cmp
push
pop
adc
es
insb
push
adc
stc
mov
leave
dec
pop
cmp
mov
inc
sub
jl
je
or
ror
sbb
cmp
pop
xor
mov
lods
gs
ds
and
mov
je
imul
aam
sub
outsl
jmp
inc
les
dec
jne
and
aas
dec
std
cmp
out
jecxz
jne
xchg
rorb
stos
xchg
out
fnstcw
sarl
sahf
sub
cmpsb
mov
test
popf
sbb
shl
insb
inc
int
ffreep
xchg
add
mov
insb
popf
jb
mov
test
test
add
pop
imul
inc
jb
dec
mov
xlat
push
enter
inc
fwait
pop
hlt
xor
jmp
cltd
jo
jnp
enter
popa
es
test
adc
in
lret
mov
leave
imul
sbb
mov
cli
mov
xor
imul
jo
aad
jg
fmul
sub
cmpb
pop
adc
mov
gs
cmp
cmp
mov
cmp
push
mov
bound
in
push
je
mov
test
and
cs
add
push
xor
mov
push
test
jmp
pop
dec
mov
lahf
lds
sub
insb
and
lods
test
mov
and
lods
cmp
icebp
test
shll
imul
dec
rorl
or
jno
fistps
fnsave
scas
xchg
mov
push
shrb
dec
fisttpl
push
test
popf
mov
cld
mov
pop
sbb
iret
testl
iret
adc
jmp
pop
popa
fs
aam
jge
jmp
xchg
jb
in
and
shrl
or
lret
mov
xchg
mov
test
add
loope
sub
pop
xlat
shrl
cmp
andl
out
pop
ror
das
std
pop
or
insl
loopne
test
lods
jo
std
insl
xchg
test
push
jp
cmp
mov
inc
jl
in
out
mov
mov
mov
cmpsb
loop
movsb
xchg
jno
adc
add
stos
fdiv
test
add
jno
mov
mov
inc
les
in
outsl
sub
sbb
sub
stc
push
jecxz
in
sbb
jmp
xchg
jle
dec
sub
popf
cmovg
out
mov
push
fidivl
sub
ret
pop
sub
cmc
mov
addps
in
lcall
ja
jns
inc
movsl
cli
add
or
mov
mov
cltd
xor
pop
cwtl
mov
sbb
out
sbb
clc
scas
imull
sbb
pop
xchg
push
bound
xchg
mov
call
icebp
loop
xlat
in
push
and
aaa
jbe
pusha
pop
jno
dec
pop
cmpsl
jmp
jecxz
imul
mov
or
fucomp
mov
pop
lods
or
ret
xchg
xor
das
in
loopne
inc
sbb
sbb
mov
popa
roll
stos
enter
fimuls
enter
xorl
sub
xchg
xor
inc
inc
cwtl
test
mov
in
ds
repnz
jo
sub
mov
sahf
adc
mov
cmpsl
andl
push
xchg
pop
idivb
pop
fmuls
jmp
rcrb
sub
sbb
bnd
add
aad
sahf
cs
cmp
pushf
call
cmpsb
mov
adc
sahf
mov
inc
ss
bound
jmp
xchg
inc
xor
sbb
push
xor
out
shrl
sti
jne
add
push
jne
push
xchg
enter
mov
dec
and
mov
addr16
in
aad
add
aas
mov
sbb
fisttpll
cmp
mov
or
push
cmp
xor
push
push
mov
sbb
pop
mov
jnp
les
pop
pop
loope
sbb
or
rolb
push
cmpsb
popa
stos
sahf
or
or
xor
sbb
sub
or
add
jge
int3
xchg
ror
shlb
or
or
repnz
out
xor
cmp
insl
shlb
dec
mov
or
pop
push
jb
add
sub
fs
data16
push
bnd
jl
xchg
mov
xchg
and
popa
das
int3
cmc
andb
out
sar
std
sbb
test
loopne
mov
pop
int3
daa
xlat
and
les
movsl
lret
push
push
mov
lahf
or
scas
inc
cmc
and
or
fisubrs
fwait
aaa
cltd
aas
add
push
or
hlt
test
push
movsl
stos
jmp
aas
push
jg
das
jno
cmpsl
in
adc
sarl
dec
ds
dec
lcall
and
pop
push
fnstenv
sub
or
in
mov
push
out
sti
mov
lods
adc
inc
jae
in
sub
loope
push
cmp
lret
mov
add
aas
and
push
mov
xchg
outsb
jbe
not
std
inc
xor
movsl
or
hlt
mov
and
inc
lds
arpl
int
and
xchg
dec
out
mov
fcompl
xchg
cmp
jmp
inc
or
mov
cmpsb
daa
int
mov
std
mov
mov
daa
sub
sar
mov
leave
push
mov
ds
xor
lock
or
les
add
xor
mov
xorb
in
jmp
stos
loopne
push
insl
dec
pop
push
mov
push
adc
jge
mov
lds
int3
notb
test
inc
ljmp
stos
imul
xchg
scas
clc
inc
sbb
sbb
lods
and
ja
pop
mov
adc
mov
cmp
or
and
cmc
push
or
clc
mov
mov
daa
push
dec
sbb
ja
mov
ja
mov
mov
inc
mov
pop
and
flds
xor
dec
int3
xchg
fisubrs
lret
mov
ret
mov
nop
xor
or
push
dec
inc
mov
repnz
inc
sbb
aam
in
loop
xor
pop
popf
adcb
rcr
push
adc
shufps
test
bound
sarl
cmpsl
mov
push
push
sahf
xlat
mull
push
ja
jb
mov
mov
loop
inc
dec
mov
aas
pusha
mov
cmc
outsb
fisttps
jmp
fisubrl
push
xor
mov
sub
xchg
data16
outsl
aam
adc
sbb
cmpsb
dec
push
addr16
dec
add
sbb
cmpsl
add
hlt
hlt
gs
test
jae
rep
addr16
or
popf
iret
dec
frstor
rclb
jnp
adc
jecxz
mov
lock
cmpsb
mov
testb
shll
in
out
outsb
and
pop
aas
lahf
sub
jmp
aaa
mov
popa
sahf
jl
adc
popa
sar
xchg
daa
sbb
int3
lret
mov
and
call
jmp
mov
test
arpl
sbb
cmpsl
mov
jae
test
mov
jp
lds
pop
xchg
push
or
aaa
mov
sbb
mov
in
mov
sbb
mov
mov
inc
addb
loope
je
dec
push
mov
push
pop
test
mov
pop
vdivpd
pop
fs
ds
lods
pop
int3
cmp
jg
js
sbbl
push
push
les
mov
xchg
xchg
xchg
mov
addb
in
int
adc
push
test
pop
jle
int3
and
sbb
xlat
in
adc
xor
or
shrb
add
and
pop
lahf
in
xchg
cwtl
jl
enter
addr16
fidivl
daa
aam
mov
gs
js
daa
xor
inc
xor
inc
mov
jp
mov
inc
pop
mov
inc
xchg
movl
mov
filds
arpl
loop
and
and
dec
fdivl
mov
xlat
mov
cmp
not
fdivrl
sub
data16
jno
aad
scas
stc
adc
cltd
add
or
xor
fsubp
jne
mov
outsb
sub
push
pop
xor
mov
pop
dec
or
data16
mov
mov
adc
xor
xor
and
inc
mov
rcl
negb
leave
sti
addl
add
adc
adc
jno
mov
repnz
inc
push
add
ffreep
mov
lahf
or
and
pop
arpl
dec
outsb
mov
mov
push
lods
push
cltd
cmp
and
xor
add
push
sub
arpl
mov
loope
adc
inc
and
shl
adc
sub
dec
dec
sbb
cltd
push
sbb
rorl
loop
cmp
ljmp
add
cmp
imul
pop
sbb
gs
dec
int
and
inc
xchg
popa
or
bound
push
adc
push
int
adc
and
inc
ljmp
or
xchg
test
jno
sbb
push
mov
int3
lcall
mov
and
js
insb
mov
pop
movsb
das
push
insl
or
sbb
mov
xorps
test
repnz
out
or
call
aas
jno
add
inc
xchg
mov
loopne
jecxz
dec
push
cltd
xor
testl
pusha
jl
jl
insb
push
xchg
and
notb
fdivr
jbe
orl
or
popf
ficomps
cmp
sbb
lods
mov
lahf
or
fstps
and
add
inc
pop
adc
cmp
cmp
sarl
xchg
nop
mov
mov
ret
pop
push
adc
mov
inc
sbb
cwtl
test
jo
and
fimuls
lret
pop
push
iret
test
xor
aad
dec
add
dec
clc
movsb
int3
sbb
and
dec
iret
out
inc
roll
idiv
mov
inc
or
mov
jp
cmpsl
pusha
fcmove
mov
shlb
pushf
xchg
push
gs
xorl
adc
out
xor
sub
das
fcompl
add
xor
mov
lock
jo
nop
push
rcl
jmp
out
cmp
cmp
mov
xchg
imul
jmp
fmull
pop
cli
inc
gs
punpckldq
sbb
jmp
bound
pop
outsb
dec
sbb
sbb
call
mov
mov
sub
sahf
fwait
or
in
leave
je
aas
fdivrp
stos
inc
lcall
mov
fdivl
sbb
jne
hlt
cld
jp
dec
jno
push
push
arpl
and
adc
ret
inc
fistps
xor
repnz
gs
or
addl
adc
arpl
dec
gs
ds
nop
mov
and
fdivrp
fstl
pop
or
testl
in
xchg
xchg
fadds
jmp
shlb
lcall
cmp
cmc
out
mov
add
inc
jbe
dec
daa
cli
jae
inc
pop
cmp
adc
daa
decl
inc
adc
in
mov
inc
or
xchg
pop
mov
dec
repnz
fstps
xchg
or
mov
push
hlt
add
jo
sub
in
jp
cmp
movl
pop
mov
nop
pop
mov
cltd
js
aas
subb
xor
jno
sub
mul
push
aas
cli
lea
ret
xor
push
shl
sub
loop
or
xor
sub
push
pop
fmull
push
or
mov
scas
clc
gs
ret
cmp
arpl
dec
push
jae
imul
dec
cwtl
push
mov
adc
jecxz
rcll
xchg
adc
sub
sub
pop
xor
mov
mov
icebp
add
push
fwait
and
out
sbb
mov
pop
xchg
mov
lods
sete
dec
frstor
xchg
out
xor
mov
inc
mov
jno
call
cmp
mov
daa
mov
outsb
adc
xchg
cmp
xchg
pop
fcomi
dec
mov
test
lods
pop
push
inc
or
push
cmc
lods
loop
push
sti
add
mov
sbb
jg
icebp
lock
loope
lahf
aas
mov
pop
mov
mov
mov
adc
push
add
push
outsl
add
dec
stos
and
xchg
adc
ja
icebp
cmc
mov
in
ret
call
test
pop
movsl
pop
sub
repz
jecxz
test
pop
push
ljmp
dec
lods
inc
xchg
dec
lahf
lret
lods
sbb
jp
mov
or
inc
adc
mov
adc
adc
stc
pop
out
insb
fidivl
or
arpl
inc
cmp
mulb
nop
int
inc
push
shr
add
cmp
add
sti
add
fadds
test
lcall
inc
loop
int3
inc
xchg
add
out
cmpsl
push
repnz
jae
repz
sbb
outsb
mov
aaa
out
sub
xor
lds
bt
insl
in
or
lods
test
lock
in
lcall
mov
push
out
sbb
push
mov
decb
mov
aad
sub
mov
loop
lock
rcrb
or
dec
dec
push
ds
cli
sub
push
and
dec
push
pop
loop
xchg
cwtl
mov
or
imul
mov
fiadds
xor
arpl
xchg
fstps
xor
add
add
xchg
data16
sbb
push
mov
push
fiaddl
sbb
mov
aas
addb
dec
or
mov
es
out
out
push
scas
adc
pop
adc
insb
mov
pop
movsb
out
dec
lea
mov
sub
sub
cmp
sbb
adc
loope
push
es
jns
and
jl
jae
jge
roll
jne
sub
das
pushf
js
fidivrs
push
inc
in
sbb
es
jnp
adc
and
mov
jge
pop
gs
xchg
pop
popf
and
or
pop
ret
inc
push
std
pop
fidivl
in
rorb
mov
jne
sbb
iret
xor
test
add
fsubr
aad
mov
repz
imul
ss
cli
adc
xor
or
lock
gs
idivl
gs
ja
fwait
and
push
mov
inc
inc
pop
outsb
sbb
clc
shll
xor
in
mov
dec
stos
pusha
aam
xchg
fisubl
jl
pop
andb
dec
sbb
ss
stc
jns
mov
cwtl
jp
sub
sbb
aas
xor
pop
inc
pushf
xchg
mov
pop
sbb
leave
sbb
jns
adc
scas
mov
mov
sahf
push
and
not
scas
loopne
push
dec
sub
cmpsl
fadds
mov
shll
test
or
in
xchg
lret
and
fs
stc
inc
jae
fisubs
push
int3
lds
jne,pt
popf
mov
hlt
add
pop
cmp
repnz
sbb
shll
test
pop
or
test
cld
push
in
icebp
or
scas
leave
mov
mov
mov
insb
fdivrs
fdivs
ret
mov
data16
mov
push
outsl
jno
jno
test
lods
sbb
sub
and
and
jne
fs
add
fwait
repz
fs
pop
xchg
into
lret
ja
add
mov
mov
stc
and
loop
add
sbb
out
mov
jecxz
add
subb
mov
add
andl
cmp
das
ret
fcmovne
fwait
cltd
popf
stc
aam
xchg
cli
jl
fdivrl
adc
dec
test
sub
je
push
jl
fwait
mov
ja
push
sbb
and
ljmp
loope
in
mov
scas
fsts
aam
push
and
sub
cmpsb
sub
jg
jge
cmp
add
pop
or
arpl
mov
cmp
jnp
or
movsb
push
mov
cltd
pop
lahf
cs
push
in
push
xor
mov
push
fisubrl
jbe
push
out
les
add
adc
push
test
mov
ret
xlat
mov
pop
in
or
mov
mov
pop
mov
iret
or
test
mov
mov
pop
cmp
sub
ffree
and
pop
pop
int3
fstl
and
mov
je
mov
jmp
sub
xor
pusha
dec
adc
popf
rcrb
bound
imul
adc
lea
mov
or
nop
jns
test
psadbw
cmpsl
lods
lock
xchg
push
or
aaa
movl
bound
xchg
rcrb
pop
jb
cli
mov
or
sub
lret
cmp
mov
cwtl
inc
insl
inc
test
jg
mov
std
lds
and
inc
icebp
inc
sti
mov
stc
mov
cltd
int
lds
faddl
and
adc
or
stc
sbb
xor
mov
push
out
add
cmpsb
inc
jge
or
adc
aaa
cs
subb
roll
mov
andb
rclb
and
mov
xor
push
cmp
test
mov
mov
push
popa
xchg
or
mov
pop
ret
pop
imul
popa
cmp
mov
mov
inc
loop
cltd
ret
dec
adc
inc
push
aaa
xchg
cmp
mov
cmpsl
jl
cmp
nop
aam
adc
xchg
adc
call
push
inc
xor
ljmp
dec
lret
push
test
mov
fs
jmp
push
cwtl
cmpsl
icebp
adc
arpl
lds
iret
lock
int
push
mov
enter
icebp
into
adc
jp
ror
xor
cli
pop
jmp
mov
orl
or
aaa
stc
xor
adc
icebp
or
sub
imul
mov
add
ficoms
dec
and
and
and
cmp
in
add
dec
test
fidivrl
xor
out
in
cs
dec
fimull
add
jmp
lcall
rolb
mov
push
lea
in
mov
mov
dec
mov
stos
jae
sbb
mov
and
out
lcall
mov
iret
shll
fcoml
into
mov
repz
imul
or
push
in
int
cwtl
adc
add
xor
mov
add
cs
rcr
and
fmull
mov
lret
sub
test
scas
mov
pop
outsb
punpcklbw
dec
or
insb
test
mov
or
les
orb
fwait
fwait
into
popf
pop
xchg
adc
fstpl
mov
ficoml
cltd
daa
cmp
push
int3
stos
mov
daa
das
inc
nop
dec
loopne
aaa
incb
cli
cltd
leave
repz
inc
negb
inc
and
rclb
dec
loopne
cmpsl
or
shll
ficoms
cmc
mov
mov
cli
push
xchg
push
test
adc
mov
lods
mov
jl
sbb
or
pushf
xor
jo
divb
out
inc
setno
push
pop
subb
mov
cmp
loopne
push
cld
clc
in
jo
add
scas
or
shr
pop
lcall
popa
dec
cwtl
cltd
push
icebp
das
xchg
shll
xchg
outsl
lahf
cmp
ret
pop
or
lahf
push
inc
mov
inc
inc
xchg
andl
fsts
add
addr16
mov
xor
push
mov
cmpsl
mov
mov
sbb
xchg
xlat
fisubs
mov
jo
dec
fistps
in
xlat
and
adc
repz
out
stos
xor
fwait
cs
rcr
loop
sbb
pop
lds
insl
or
lods
call
jb
jnp
cmpl
cmpsb
pop
mov
add
inc
cmp
inc
test
fs
ret
xlat
aam
scas
inc
inc
sbbb
adc
pop
add
stc
xor
outsb
pop
fsubrl
cmp
jg
stos
cmp
mov
cmp
sub
das
ret
ljmp
ficomps
ret
stc
pop
into
out
inc
push
xor
inc
jns
add
adc
adc
out
jnp
movlhps
sahf
adc
pmuludq
mov
hlt
push
aaa
and
sbb
sbb
push
movsb
inc
sub
pop
sub
insl
mov
cltd
mov
insl
mov
mov
sbb
cmp
push
mov
shr
insb
cmp
cli
or
xor
add
repnz
cmp
or
sbb
inc
add
repz
xchg
out
mov
cmpsb
neg
xor
cmp
lret
adc
cmp
sbb
call
adc
add
sub
inc
lods
mov
shrl
inc
jae
ret
and
dec
fs
fadds
aaa
xchg
jge
mov
xor
cmp
sbb
add
out
mov
adc
dec
xchg
lods
sbb
cli
out
cltd
or
jae
rorl
insb
subb
jbe
clc
lret
aam
fwait
call
inc
cs
mov
sub
lcall
or
dec
xchg
and
jge
test
jl
fimuls
mov
movsl
mov
sub
mov
and
scas
test
xor
mov
les
popa
mov
jecxz
movsb
push
insb
in
inc
push
dec
cmp
sbb
adc
xchg
and
push
inc
mov
out
pop
arpl
popa
pusha
or
int3
jmp
sbb
stc
es
rcrb
sub
adc
ds
jmp
aas
imul
dec
popa
pop
loope
loopne
xchg
cmpsl
loope
sub
ret
jp
xchg
dec
jg
xchg
ficoms
jmp
test
mov
stos
sub
stos
push
fcmovne
in
inc
aam
adc
jne
cmp
hlt
ret
inc
es
xchg
in
and
dec
lods
adc
in
lret
jbe
gs
test
aas
sub
and
lods
add
enter
rcl
loop
outsl
sub
cltd
imul
inc
or
and
pop
mov
pop
cmc
aam
outsl
cmc
push
push
dec
xchg
shlb
cmpl
divb
mov
mov
mov
lea
clc
call
sahf
bound
push
inc
and
jbe
icebp
sbb
andb
ficoml
iret
out
shll
sbb
add
add
imull
in
or
mov
data16
dec
loop
add
add
pop
into
add
pop
test
ja
mov
adc
mulb
xor
add
jbe
les
insl
or
fnstenv
dec
in
popa
scas
call
or
mov
scas
jbe
mov
out
mov
pop
mov
adc
dec
outsl
ret
jns
jns
inc
fistl
aas
mov
mov
call
aad
cmp
out
imul
mov
jo
xchg
inc
test
dec
mov
cli
insb
int
xor
mov
mov
and
xor
loop
pop
jge
cmpsl
dec
mov
les
push
pop
mov
pop
lea
test
mov
sti
sbbl
jg
mov
test
jae
fisttps
imul
es
insl
or
adc
inc
or
movsb
inc
mov
inc
lods
into
call
pop
push
cltd
int3
ljmp
lea
rcl
mov
jl
js
push
or
insb
mov
jmp
leave
pop
or
dec
or
add
pushw
sub
jnp
jns
xchg
add
lds
rorb
cmp
subb
cmp
inc
push
aas
push
mov
push
mov
dec
sub
hlt
rclb
jns
andl
xor
orl
or
arpl
out
cmpb
adc
sub
mov
lea
adc
scas
test
push
mov
xor
push
jp
inc
jbe
mov
push
jne
fcoml
jg
adc
xor
jl
mov
inc
and
or
jge
mov
les
es
testl
sub
adc
outsl
aaa
add
and
inc
nop
jo
adc
push
xchg
les
dec
dec
je
sbb
adc
inc
cmp
test
sub
xchg
add
push
int3
sbb
xor
loop
jmp
and
rcll
jae
out
xchg
ss
sub
or
mov
jecxz
xchg
mov
cmp
inc
jne
test
adc
sbb
cli
int3
adc
dec
mov
jno
mov
push
cmpsl
aam
xchg
dec
mov
nop
mov
sub
mov
in
mov
fstpt
jne
sbb
xchg
jno
daa
scas
dec
test
push
test
adc
fidivl
dec
mov
iret
loop
xchg
test
and
repnz
jl
mov
add
repnz
mov
stos
add
cwtl
fsubl
fsubl
cmpsb
roll
add
cmp
and
push
cld
and
jns
repz
jmp
xchg
test
cli
or
sbb
flds
and
lds
add
xor
outsl
cmpsl
add
cmpb
aaa
adc
mov
cmp
adc
mov
push
lds
test
fmull
cmp
xchg
test
mov
jle
push
pop
in
pop
push
jecxz
pop
and
mov
pop
xchg
xchg
repz
fbld
fwait
inc
jnp
pop
push
sti
pop
push
xchg
in
scas
sub
mov
pushf
popa
mov
cmpl
and
inc
cmp
or
andb
xor
cli
jmp
push
add
aad
mov
xor
mov
in
shll
es
cmpl
jae
xor
jmp
repnz
outsl
cmp
jge
cmp
daa
scas
xlat
shl
outsb
popf
movsl
sbb
mov
popl
cltd
xchg
pop
mov
sub
jbe
xlat
add
pop
stos
lods
out
or
std
push
into
lcall
cld
cmc
aaa
inc
push
push
mov
push
mov
cmp
js
repz
pusha
imul
dec
or
pop
bound
rclb
sbb
inc
xchg
leave
jbe
aam
pop
and
test
imul
fstps
jg
ss
xchg
cmp
out
repz
jecxz
cmp
jecxz
push
jbe
mov
outsb
sahf
inc
outsb
jmp
pop
cli
insb
loop
movsb
stos
pushf
xor
mov
nop
int
pushf
das
cmpsl
mov
aam
sbb
jg
imul
add
or
cmp
pop
rorl
or
xor
rorb
sbb
cmp
testb
sbb
xchg
or
sahf
imul
and
es
and
dec
push
fcomps
add
add
bound
inc
jno
scas
jbe
mov
mov
mov
cmpsl
shl
or
jo
xchg
out
loopne
push
add
jge
int3
dec
add
xchg
xchg
cltd
lods
pushf
and
cmp
ds
inc
and
add
shll
xchg
in
or
mov
xor
andl
cmpsl
ja
dec
add
pop
ja
push
rol
mov
or
pop
lds
loopne
rcrb
mov
xchg
gs
push
pop
jae
rcrl
testb
inc
push
scas
lods
into
push
jo
mov
in
mov
sbb
das
sbb
or
push
sbb
add
cmp
popf
ds
cmpsl
add
inc
sbb
negb
jb
loop
mov
xor
dec
roll
pop
xchg
mov
addr16
ret
xor
jbe
inc
stos
out
out
or
add
jbe
addr16
or
sub
loope
jno
out
cmp
sbb
jecxz
xchg
fimuls
jbe
nop
mov
leave
add
repz
dec
shll
and
lcall
icebp
mov
test
ret
mov
xor
inc
gs
add
in
sbb
add
xchg
out
and
jns
leave
lahf
rcll
mov
cwtl
out
jb
sbb
cmc
push
jnp
sti
das
jnp
inc
out
mov
adc
dec
js
cmpsb
ja
insb
scas
das
das
xchg
push
inc
cmp
mov
mov
pop
in
adc
mov
inc
push
fnstenv
roll
fcmovne
inc
fs
jno
pop
ljmp
mov
stos
lds
inc
add
adc
mov
dec
and
cmp
xchg
fidivs
jb
mov
daa
sub
and
aam
stc
cmp
sahf
aad
pop
adc
je
stc
mov
mov
inc
ja
inc
inc
xchg
cld
dec
out
mov
leave
xchg
push
notl
outsl
je
mov
cs
lahf
mov
fdivrp
ror
fwait
stos
idivl
int
inc
outsl
rcrb
cltd
pop
push
cmp
in
add
adc
or
mov
push
jne
in
inc
xchg
dec
mov
repz
mov
mov
xchg
and
jns
repz
adc
lods
je
mov
pop
xor
ja
inc
pop
add
out
movsl
sti
push
repnz
dec
sbb
adcl
pop
icebp
lret
jle
sbb
sub
mov
mov
cwtl
jns
into
mov
add
add
gs
enter
mov
sti
xchg
add
mov
outsl
std
pusha
dec
popf
fildl
movups
cmpsl
out
dec
sub
in
xor
stc
push
lods
dec
loop
cmp
cmp
shlb
mov
mov
xor
shlb
jecxz
jmp
lock
int
test
in
cmp
pop
sub
or
test
sahf
cwtl
daa
sbb
push
mov
dec
mov
int3
bound
push
hlt
pushf
xor
dec
test
cwtl
shll
and
daa
adc
loop
pushf
fsubrp
popa
fnstenv
jae
push
lahf
cli
sbb
cmp
jl
mov
cwtl
sbb
xchg
jge
repnz
jno
rcrb
inc
loop
cld
shrl
sbb
adc
in
jo
push
pop
ljmp
pop
inc
and
sub
movsl
pushf
inc
mov
sbb
mov
repz
fidivrl
push
je
mov
mov
push
mov
and
inc
pop
pop
inc
outsl
popa
push
out
test
jmp
cmpsl
inc
out
fsubrl
mov
in
std
sub
aad
pop
push
jb
pusha
in
imulb
test
scas
or
pop
aam
sub
aad
fiadds
push
mov
add
dec
int
mov
mov
pop
loop
dec
jno
loope
mov
or
push
in
fldt
inc
stos
mov
loope
repnz
cmpb
icebp
add
cmp
decb
dec
sahf
and
and
xchg
enter
xor
jg
inc
fcomp
push
std
rorl
mov
adc
xor
aam
pop
pop
enter
sub
pop
adc
push
push
add
mov
imul
in
push
dec
and
loopne
popa
mov
in
sbb
push
sahf
fcomp
dec
and
iret
mov
das
or
test
inc
std
scas
lods
jmp
xor
push
in
ficompl
add
inc
imul
das
in
adc
and
pop
lds
mov
push
int3
or
es
push
aas
sbb
popa
sti
lret
movsb
push
xor
testl
jmp
aam
jecxz
adc
outsl
sbb
cmp
int
jne
push
mov
push
stos
data16
lret
jmp
and
dec
adc
or
push
mov
popf
icebp
jle
dec
cld
insl
in
pop
xchg
out
adc
fstps
jg
clc
addr16
popf
test
ja
iret
dec
push
adc
lds
fcmovnu
push
rcrb
aam
jle
enter
jecxz
in
movsb
pop
cmp
lods
adc
mov
cmp
inc
sbb
mov
or
repz
dec
mov
adc
leave
or
sbb
or
push
nop
aad
adc
sub
gs
roll
nop
out
mov
or
ss
fs
in
lds
push
mov
outsb
cmp
cwtl
idiv
sarb
cwtl
lds
icebp
sub
dec
mov
ljmp
fs
rorb
je
mov
adc
into
sbb
repz
jno
sbb
inc
xor
insl
jae
push
cmp
out
out
and
cwtl
pop
add
sub
decb
jb
push
cltd
and
lret
adc
push
iret
dec
mov
test
mov
dec
lods
dec
inc
dec
jge
or
push
mov
aam
xchg
leave
out
loope
inc
add
mov
mov
dec
pop
aam
es
inc
xor
fstps
push
xchg
mov
int3
stos
push
jo
sub
add
loop
xsave
mov
cmp
popf
fstpt
shlb
in
in
mov
inc
scas
dec
sbb
add
std
fistl
sbb
jae
sbb
xchg
movsb
push
inc
lea
mov
inc
out
xchg
and
fwait
mov
mov
push
in
xor
sbb
mov
or
and
push
push
xchg
out
jbe
sti
test
popa
xchg
out
imul
xor
jns
mov
sub
fsubp
mov
idivl
leave
inc
std
mov
adc
in
insb
lret
push
enter
dec
mov
fisttpl
cmpsl
mov
cmpsl
fst
and
jle
add
xchg
push
fst
ret
scas
dec
inc
jae
cmp
sahf
testb
fld
mov
es
mov
sub
dec
mov
lea
cmp
xchg
test
push
inc
pop
mov
pop
xorl
mov
sbb
xor
inc
sbb
or
inc
push
rcrl
rep
pushf
pop
stos
or
cltd
sbb
adc
push
sbb
sub
cmp
aam
rcrl
ret
adc
lods
push
xor
std
inc
orb
fucomp
jnp
xor
sarl
dec
adc
push
aam
shlb
push
cmp
jno
jg
mov
pushf
das
jge
xchg
push
jmp
nop
cmp
lret
push
lods
sbb
xor
and
xchg
fldl
jp
lock
dec
fcomp
dec
jge
daa
xchg
gs
ret
push
jge
mov
cmp
push
or
adc
inc
mov
mov
dec
mov
cmp
sub
adc
mov
ljmp
divb
fwait
mov
fisubs
pop
sti
add
add
aam
das
sbb
fwait
or
adc
arpl
mov
pop
rclb
mov
cmp
cmpsb
fucomip
dec
stos
pop
jmp
mov
push
je
pop
loop
aaa
scas
pop
cmp
daa
sub
inc
cmp
mov
out
cli
jns
bswap
sbb
push
cmp
adc
sub
imul
shlb
push
jg
xlat
sbb
mov
sbb
pop
pop
pop
adc
or
pop
icebp
pop
and
dec
mul
aaa
shrl
repnz
loopne
jo
inc
mov
sbb
push
xor
insl
xor
mov
push
jmp
enter
mov
sbb
aaa
sub
xchg
cmpsl
xor
enter
loop
push
sub
inc
mov
stc
in
decl
cs
imul
imul
in
scas
lret
jbe
rcll
loope
jmp
test
loopne
and
rclb
orl
int
les
mov
adc
int3
mov
inc
sbb
imul
cs
in
inc
jmp
add
sub
aas
mov
loop
or
push
int
je
mov
jmp
dec
xorl
cmp
mov
jno
cwtl
pop
shll
mov
cmp
js
sbb
push
pop
call
popf
loopne
cmp
addr16
sub
adc
mov
cld
call
outsl
test
dec
ret
dec
mov
add
data16
dec
xchg
sbb
cmpsb
xor
push
test
add
dec
fistpll
ss
pop
dec
sbb
fs
ljmp
gs
or
leave
sti
iret
sub
loope
in
ret
or
cmp
mov
fwait
sbb
js
js
push
xor
sbb
sbb
repz
scas
push
xchg
mov
loopne
sbb
dec
jle
sbb
xchg
sub
in
push
lods
push
scas
mov
shl
pop
xor
pop
inc
mov
mov
dec
mov
lds
mov
xor
cmpsl
cld
ficoml
pop
out
mov
js
adc
mov
and
test
sub
mov
ret
bound
jle
lret
int3
or
push
cmp
sbb
push
les
or
es
inc
adc
jle
aad
jmp
jecxz
cmpsb
nop
and
push
mov
mov
mov
cmp
into
scas
push
adc
les
inc
mov
or
or
shrl
fstp
mov
jg
pop
push
mov
xchg
shl
jno
cmc
cmpsl
xlat
stos
rcr
pop
push
inc
lods
cmp
jge
das
mov
out
test
xchg
push
mov
push
pop
mov
rclb
call
add
aad
lds
je
insb
dec
imul
fwait
insl
addr16
xor
outsb
jmp
jb
mov
or
lret
fcmovnbe
jecxz
mov
daa
inc
lret
arpl
push
adc
scas
hlt
adc
test
mov
incb
in
loope
push
jecxz
push
rcl
lds
mov
jecxz
mov
dec
sbb
mov
js
mov
outsl
das
into
jecxz
jnp
mov
dec
stos
lahf
lods
inc
inc
dec
in
mov
push
push
scas
outsb
cmp
cmp
mov
push
push
cmp
loope
xor
mov
pop
push
dec
add
test
pop
xor
cmpsl
ss
addr16
inc
jl
call
not
inc
inc
sbb
xor
push
inc
hlt
dec
arpl
popa
ret
in
cmp
jb
pop
cmpsl
sar
outsl
fildll
mov
dec
add
sub
dec
sub
mov
icebp
adc
bound
or
push
scas
mov
in
mov
outsl
jl
shr
sub
jge
mov
mov
jo
mov
mov
outsb
inc
in
cmp
mov
std
cmp
mov
xchg
mov
popf
sbb
cwtl
mov
arpl
dec
imull
ret
test
test
arpl
xchg
stos
sbb
pop
jmp
adc
or
jg
in
cmp
push
outsb
mov
xchg
lea
sub
jl
das
dec
mov
and
aad
sbb
jl
inc
push
fnstenv
add
sbb
sub
mov
cld
jp
mov
xorl
xor
inc
or
sbb
push
mov
or
inc
sub
dec
mul
test
or
daa
add
dec
push
out
sub
add
in
lcall
xchg
jecxz
push
rcrb
fists
xlat
dec
xchg
jne
adc
mov
push
sub
ja
push
fcomp
aaa
loop
pop
stos
fdivr
or
xor
pop
arpl
pushfw
sub
fimuls
and
cltd
iret
shl
lahf
adc
pop
mov
cmp
xchg
push
je
xchg
ja
mov
xchg
arpl
mov
and
cmp
imul
cmp
incb
scas
pop
test
addb
test
inc
jle
hlt
sbb
push
mov
inc
xchg
xor
xor
mov
xlat
xchg
addr16
negb
or
sub
call
dec
fists
lret
xor
fisttpll
add
imul
cmp
or
add
mov
inc
jmp
out
sub
and
dec
add
mov
fistpl
xor
in
std
in
incb
loopne
aad
push
shlb
push
push
sub
test
xor
add
shlb
push
mov
xor
xor
pop
push
popf
push
jp
xor
bound
and
jmp
xchg
mov
mov
and
ds
add
out
mov
mov
sbb
orb
negb
sbb
lcall
and
and
dec
aam
loop
mov
mov
scas
mov
in
movsl
push
xor
leave
mov
nop
pop
add
sbb
inc
jbe
mov
sbb
outsb
les
push
push
and
idivl
push
lods
pop
mov
mov
cmp
inc
mov
shlb
cmp
data16
and
pop
or
jge
out
xchg
stos
cmp
enter
fcompl
mov
pop
imul
adc
add
outsb
je
enter
xor
arpl
push
divl
sti
adc
jns
jb
scas
testl
sub
inc
and
fdivr
js
aad
mov
xor
out
adc
xor
sbb
icebp
add
stc
sub
int3
mov
mov
add
xchg
loop
js
inc
mov
faddp
cmp
mov
push
int3
mov
ljmp
jbe
mov
mov
jno
and
jne
loope
pop
pop
jns
lods
mov
ret
dec
pop
dec
mov
imul
cmp
mov
mov
cmp
add
push
loopne
jmp
lahf
jp
pushf
pop
lods
jg
fdiv
fsubl
xchg
xchg
pusha
jnp
imul
add
sbb
aad
sub
dec
mov
shrb
mov
orl
push
ljmp
pop
dec
mov
mov
pushf
cwtl
mov
adc
or
stc
scas
das
cmc
pop
cwtl
push
mov
inc
dec
inc
inc
jae
sar
jge
pop
mov
out
cs
loope
ss
call
and
insb
mov
iret
jmp
fwait
xchg
mov
mov
push
mov
push
ret
inc
jge
pop
push
push
fld
out
dec
push
push
ret
or
jbe
xor
negl
xor
mov
sbb
insl
cmp
icebp
cmp
cltd
fdiv
push
and
lea
nop
jns
pop
faddl
out
aam
and
mov
sbb
ret
sub
inc
outsb
sbb
int
arpl
fdivs
pop
push
ficoml
daa
dec
or
sub
jecxz
jno
sbb
dec
int3
and
scas
push
cmp
lea
inc
jg
int
mov
outsb
xor
xchg
negb
xchg
mov
and
and
adcl
lds
loopne
cwtl
cmp
cmp
xor
sub
xor
adc
lods
mov
pop
xchg
cmp
pop
sbb
mov
sar
repnz
lret
or
xchg
mov
sub
mov
push
cmp
add
ljmp
sub
mov
and
rorb
in
or
adc
andl
rcrl
inc
test
mov
jl
pop
cwtl
add
pop
and
out
jb
push
roll
cmp
sub
or
cs
addr16
imul
mov
ret
je
sbbb
and
addr16
mov
test
das
mov
mov
jns,pt
lret
xchg
adc
adc
sahf
idivb
push
loopne
push
sbb
jle
ds
jl
mov
cmp
int
lret
push
add
pop
pusha
popa
pop
push
cmpb
jbe
pop
arpl
outsb
adc
insl
pop
cmpsl
jmp
mov
pop
imul
sti
in
push
in
mov
lock
out
add
jns
and
scas
je
xchg
stos
pop
rclb
add
sub
int
popf
fldl
cmpsb
loopne
mov
sub
cli
sub
sub
inc
push
pop
imul
xchg
mov
mov
lret
enter
mov
mov
mov
sahf
shrb
or
mov
fisttpl
sbb
ficoms
out
lret
add
pop
ret
mov
ds
or
sub
sub
adc
jb
sbb
sti
pop
mov
int3
sbb
mov
push
cmp
add
nop/reserved
lds
lret
cmp
adc
or
mov
fs
mov
fildll
out
rcr
push
mov
bsr
or
add
imul
or
pop
fnstcw
bswap
lea
xor
iret
in
mov
lahf
push
sub
push
xor
mov
adc
mov
fsubrp
push
jbe
xchg
scas
cs
ljmp
or
jmp
stos
xor
popf
adc
ret
pushf
or
jmp
mov
repnz
in
mov
ss
xchg
in
mov
mov
adc
or
aad
stos
mov
mov
fdivrs
mov
aam
fdivl
hlt
cmpsl
inc
in
mov
or
mov
pop
imul
or
shrb
mov
pop
mov
jp
xchg
std
cmpsb
and
outsb
mov
mov
sub
lret
and
pop
inc
ja
aaa
loope
or
lea
nop
je
sub
inc
ret
ds
sub
imulb
outsl
fdivrl
mov
sub
mov
std
inc
ficoml
lods
sbb
and
das
insl
add
mov
mov
hlt
jle
push
sahf
clc
test
adc
cmp
fwait
xor
adc
adc
jae
insb
inc
rcll
xchg
inc
jle
loopne
les
mov
sub
sub
pop
xchg
push
pop
cmpsl
jno
test
imul
rcr
add
je
outsl
loop
and
and
mov
sti
imul
push
xor
xchg
jp
xor
lret
sbb
sbb
xor
xor
xor
jecxz
ljmp
and
test
push
into
das
int
rcrb
push
icebp
jb
test
cmp
inc
push
inc
arpl
push
fisttpl
push
jmp
jae
mov
xchg
iret
sub
adc
mov
push
mov
add
push
in
push
clc
je
mov
ret
xor
dec
inc
int
mov
cmpsb
mov
fisubs
lods
clc
sbb
std
push
jno
xlat
cmc
mov
cmp
lea
lods
mov
dec
jb
dec
fwait
lds
cmpsb
push
xchg
adc
call
repz
insl
mov
test
dec
je
bndstx
xor
addb
sub
int
cmp
pushf
mov
mov
popf
ficoml
pop
mov
jo
lock
jecxz
xor
mov
cld
pop
bound
or
ss
add
repnz
ljmp
mov
outsb
inc
mov
mov
ljmp
icebp
lahf
outsl
aad
mov
movsl
xchg
lea
mov
sub
sub
pop
faddl
into
pop
xor
lret
addr16
cld
add
sbb
jle
and
cmp
push
imul
xchg
js
popf
adc
push
pop
pop
xchg
jnp
scas
arpl
or
fmull
into
cmp
xchg
enter
jg
clc
pop
imul
jl
jg
xor
outsl
push
dec
dec
sahf
xchg
mul
in
adc
add
push
ja
add
int
or
pop
popf
pop
sub
scas
fsqrt
sub
hlt
outsb
loope
shrl
je
sti
nop
pop
bound
std
stos
jb
xor
outsl
cs
outsb
add
add
sbb
mov
sub
sbb
xor
outsl
xchg
sub
mov
aad
mov
cmc
mov
add
sbb
cmp
inc
loop
sti
and
xchg
int3
and
add
sub
mov
popa
je
mov
jl
ljmp
ret
fisttps
bound
xor
lahf
mov
mov
xchg
sub
movsl
loopne
inc
mov
jecxz
push
jecxz
jns
fstpl
je
mov
mov
decl
arpl
xchg
xor
lret
test
and
leave
jae
jmp
scas
sbb
enter
push
outsl
pop
cs
mov
ljmp
les
test
subb
dec
and
in
add
xchg
out
popa
gs
and
mov
stc
xor
xor
jns
nop
jecxz
rol
and
mov
sahf
adc
lock
sbb
push
movsb
push
cmpsb
adc
ficoml
fimull
int3
jecxz
adc
xchg
jp
popf
and
dec
cld
and
cmp
or
sbb
cwtl
or
and
mov
mov
pusha
out
fldt
cmpsb
inc
imul
enter
test
push
enter
out
dec
cmpsl
outsl
sbb
mov
jno
pop
lods
push
mov
mov
sub
mov
jge
add
pop
or
jne
or
xchg
inc
fiadds
call
cmp
out
iret
addl
fs
adc
aad
push
xor
add
and
out
enter
xchg
mov
cmp
mov
jecxz
lret
jg
jmp
inc
ljmp
ja
sbb
test
xchg
inc
mov
inc
push
mov
inc
fs
fs
sub
mov
ret
xlat
pop
inc
sub
fwait
and
jne
pop
cmp
pop
in
cmp
test
xchg
in
aas
out
inc
add
shll
inc
fldl
push
fwait
mov
xor
jl
jl
xchg
xchg
mov
shr
lods
xchg
sub
fs
inc
in
sub
push
mov
imul
inc
mov
or
dec
pop
arpl
inc
add
testl
push
jecxz
mov
adc
loopne
sub
sub
mov
inc
and
add
mov
cli
test
and
or
jp
cmp
dec
scas
inc
jl
lcall
xorb
test
out
jbe
je
loopne
cmp
mov
leave
negb
addl
inc
fwait
xor
cmpsb
into
push
stos
hlt
in
mov
popf
push
movsl
sbb
lahf
inc
cwtl
jg
push
stos
jnp
aaa
pop
lret
sub
push
pop
repnz
cwtl
dec
xor
jl
dec
xchg
adc
pop
inc
sarl
fwait
xor
push
sub
mov
mov
js
insb
xchg
and
inc
psadbw
mov
pop
fstpl
rorl
mov
gs
ljmp
icebp
adc
bound
popf
out
fisubrl
jmp
jmp
cld
jb
cs
xchg
mov
inc
jns
lods
repnz
jne
push
imul
cwtl
mov
scas
orl
mov
adc
nop
rcrl
jns
dec
mov
repnz
pop
fisubrl
lret
add
add
test
mov
mov
shl
stos
cmpsb
xchg
jns
int3
out
fisttpll
fcmovnbe
subb
incb
mov
icebp
mov
loop
fcoms
push
hlt
dec
inc
push
dec
push
push
mov
loopne
popf
xor
xchg
repz
cmpsl
xor
bound
xchg
ljmp
loopne
and
add
mov
test
dec
xchg
popf
jp
xchg
in
das
dec
jp
aam
mov
pop
mov
sbb
push
push
scas
pusha
orl
inc
xlat
int3
hlt
pop
or
add
jnp
sahf
je
or
push
sbb
ret
lahf
and
movsb
xchg
popa
sbbb
or
sbb
sbb
xchg
sbb
cltd
pop
ret
dec
or
mov
and
int3
xor
mov
addr16
es
pop
and
movsb
enter
push
mov
dec
stos
pop
jb
gs
mov
adc
fidivl
inc
sbb
sub
out
sub
out
push
adc
adc
sahf
dec
sub
cltd
dec
insb
and
adc
sub
popf
insl
lods
incb
ficomps
sub
jge
dec
xor
testl
lds
add
or
sub
lahf
test
cmp
daa
mov
leave
sub
adc
jae
sub
mov
scas
lods
pop
pop
repnz
and
sbb
movsl
jo
or
pop
mov
loope
cltd
xor
dec
js
push
jmp
fs
push
push
gs
pop
scas
sbb
cli
outsl
arpl
sbbb
lcall
rorb
bound
cmp
adc
adc
push
mov
sub
mov
push
inc
pop
mov
adc
xor
fdivr
and
add
insb
cmpb
leave
int
sub
dec
dec
loopnew
in
sbb
outsb
push
push
arpl
aas
xchg
jne
popf
adc
in
iret
test
in
xchg
in
cmpsl
xchg
pop
in
sbb
jbe
xor
les
lret
test
mov
inc
adc
push
xorps
inc
insl
jle
stc
dec
outsb
mov
lret
jle
imul
std
jo
cmc
push
adc
aad
shrl
xor
mov
ja
sbb
add
pop
mov
adc
out
iret
jecxz,pn
out
jns
out
outsl
jp
je
inc
xor
xchg
mov
sbb
dec
push
cmc
pop
stos
shrl
push
rorl
pushf
into
or
int
cmpsb
test
fstps
lret
fs
mov
xor
dec
mov
ljmp
outsb
mov
xor
mov
dec
push
jle
rorl
dec
outsl
mov
mov
cmpsl
jo
rcrb
mov
pop
ja
mov
mov
dec
mov
cs
rolb
test
dec
ffree
ficoms
mov
and
xor
scas
dec
data16
add
imul
dec
add
xchg
mov
push
cmpsl
lcall
pop
outsb
popf
push
mov
xchg
jecxz
or
adc
xlat
xor
ficoms
mov
mov
stos
cmpsb
sbb
jmp
cmpsb
rcrl
ss
pop
cmc
add
sub
xchg
movsl
rol
push
mov
inc
fmuls
sarb
lds
insb
adc
add
orl
test
and
mov
cmp
mov
jbe
add
pop
jno
flds
push
jns
or
mov
inc
and
movsb
test
inc
in
cld
sbb
clc
xchg
dec
push
test
into
loopne
xor
insl
or
jae
es
iret
idivl
inc
xchg
out
mov
jne
es
inc
jnp
cmp
cmc
or
xor
inc
add
cltd
stos
jecxz
sub
imul
dec
pop
dec
mov
dec
jae
insl
std
jns
loope
sub
xchg
and
jo
mov
cmp
xchg
cmp
mov
push
out
lret
xchg
xchg
outsl
pop
pop
clc
xor
mov
loope
jno
cmpsl
stc
cwtl
xchg
ficompl
repnz
rcrb
mov
sahf
jb
mov
inc
inc
mov
ret
je
int
loop
cmp
xchg
cmp
inc
push
inc
or
pusha
jge
mov
push
ds
pop
jle
add
xchg
push
mov
jae
scas
mov
fildl
stc
dec
repz
sub
outsl
rcrb
mov
jbe
pop
sarb
push
jmp
xchg
sub
xor
pop
test
stc
punpcklwd
stos
push
call
out
arpl
sbb
fsubp
xor
and
and
dec
sub
fidivrl
rcrl
jo
xor
loopne
scas
jbe
lods
mov
sub
and
lret
arpl
imul
pop
fcoml
icebp
xlat
lret
jge
fidivl
sbb
sub
dec
add
and
scas
cmp
lock
sbb
push
mov
sbb
fs
aas
out
in
testb
jns
or
fstps
sahf
pop
xor
lret
or
push
add
fwait
sbb
sbb
sub
lret
pop
push
fisttpll
mov
inc
inc
out
mov
iret
inc
pop
sbb
call
inc
mov
mov
pop
out
push
int3
mov
sti
dec
fisubrs
and
flds
sub
dec
inc
int3
fbld
xlat
sub
ja
cmp
stc
lcall
scas
jmp
test
outsl
or
sbb
insb
mov
fisubrl
mov
push
mov
adc
ficoms
stos
xchg
into
sub
adc
sbb
mov
subb
fdivrs
std
cmp
mov
pop
dec
into
pop
mov
aad
jp
add
mov
int
adc
int
push
add
sbb
ffree
out
lds
mov
mov
pusha
sub
rol
dec
cmp
aas
add
lahf
adc
jmp
fsubrl
adc
inc
rcrb
add
mov
sub
mov
and
add
aaa
lods
mov
mov
mov
fbstp
dec
shr
pop
jl
jne
and
xlat
mov
sbb
imul
daa
dec
call
shll
imul
das
pop
mov
sbb
in
add
lcall
pop
outsb
hlt
lds
psrad
cmp
jl
hlt
stc
mov
xor
pusha
mov
int3
sub
fs
roll
inc
add
mov
xor
es
out
pop
pusha
inc
mov
push
xlat
ljmp
ret
imul
add
inc
inc
jmp
add
jae
dec
or
pop
ret
mov
inc
stc
mov
cmp
push
or
fnstenv
cmp
xor
call
movsl
loopne
inc
scas
dec
cld
push
hlt
pop
scas
mov
adcl
push
inc
popa
adc
or
int
and
cld
stos
pop
sbb
wrmsr
cmp
cmp
shll
inc
push
rorl
divps
lods
cwtl
xchg
mov
jp
imul
data16
stc
shll
lret
bound
jl
xchg
movsl
or
mov
out
push
push
lret
push
and
lods
xchg
cld
pop
incb
loope
inc
or
xorb
sbb
jnp
imul
pop
dec
jmp
push
in
cmp
dec
pusha
test
add
repz
ret
lods
dec
scas
lahf
jb
and
fdivrl
mov
sub
and
outsb
pop
mov
sbbl
pop
mov
lea
jae
cs
pop
cmp
fsts
fdivr
lret
js
inc
test
jns
jle
inc
jl
or
push
jbe
xchg
insl
pop
iret
pop
imul
cwtl
lds
les
xchg
and
lods
inc
cmpl
mov
out
rcl
xchg
movsb
pusha
sbb
loopne
pop
and
arpl
loope
inc
cmp
pop
push
jle
stos
cmp
cld
daa
xor
out
jecxz,pn
xor
mov
es
mov
add
xchg
mov
bound
imul
push
imul
add
out
sbb
add
mov
fidivs
xchg
xor
mov
pop
outsb
pop
ljmp
jg
cmpsb
cmp
mov
sub
inc
add
jns
inc
dec
popf
xchg
dec
imul
sub
fwait
test
push
sti
pop
clc
je
push
push
in
xchg
xor
jo
add
cmp
xchg
add
add
loopne
cmp
test
jl
push
mov
adc
add
add
pop
dec
popf
xchg
loop
mov
jnp
leave
scas
inc
mov
mov
cmpsb
mov
test
loopne
leave
ret
dec
jne
jb
ret
insb
mov
out
adc
leave
dec
sbb
sbb
add
jg
jge
adc
dec
mov
into
dec
or
addr16
push
aad
xchg
ret
and
mov
loop
cmp
xlat
inc
bound
xchg
xchg
push
jmp
xlat
fidivs
adc
mov
insb
mov
mov
js
push
loop
jecxz
push
nop
fcompl
lcall
cld
push
xchg
lea
adc
lds
mov
cmp
inc
in
sbb
aam
adc
lret
or
pusha
ja
push
enter
aaa
jns
or
or
dec
xor
in
adc
loope
xchg
dec
fucom
dec
movsb
mov
orb
cmpsb
push
test
daa
lds
vmulss
jecxz
sub
stos
xchg
push
jle
aam
out
dec
pusha
sbb
or
mov
mov
insl
sub
mov
mov
ss
push
das
jno
jg
dec
jge
ljmp
fisttps
push
lea
pop
daa
sbb
and
sbb
mov
sbb
sarb
sti
jecxz
push
and
bound
and
xor
xchg
jecxz
lock
sar
out
cmpsb
movsl
pushf
inc
imul
in
ss
xor
fbstp
js
in
adc
xchg
mov
insl
aad
dec
mov
xor
iret
push
fisttpl
xchg
inc
dec
lret
dec
lret
outsb
mov
sbb
vunpckhps
push
dec
sbb
loopw
mov
add
enter
lds
xchg
lods
lea
cmp
pop
fisttpl
ljmp
out
mov
jl,pn
jl
ss
js
adc
popf
cmp
in
pop
add
mov
or
lds
scas
iret
sbb
mov
cmp
jl
cmp
cmpsl
push
sbb
pop
lahf
ss
arpl
add
xchg
adc
mov
stos
jbe
sub
cld
popf
xchg
mov
add
xlat
cmp
mov
push
sbb
test
movsl
jae
sub
mov
cltd
hlt
in
out
rolb
push
mov
test
ja
and
mov
push
nop
and
push
xchg
dec
inc
sub
dec
sbb
cmp
sub
divb
sbb
jnp
pop
sahf
scas
cmp
hlt
popa
rorl
pop
idivl
insl
jmp
or
and
mov
jb
mov
test
repnz
jecxz
loopne
mov
ja
push
lock
inc
test
xchg
icebp
push
and
clc
cmpsb
cmp
pushf
subl
xor
mov
scas
int3
popf
lcall
nop
jge
cmp
in
xchg
jnp
icebp
loop
mov
imul
cmp
cwtl
leave
sbb
sti
jns
mov
add
mov
das
icebp
xchg
movsb
popa
das
rcrb
add
shlb
pop
and
sub
pop
aad
and
pop
retw
movsl
xor
lock
push
mov
hlt
xor
xchg
push
movsl
mov
sub
jmp
out
gs
mov
scas
inc
arpl
xlat
mov
aaa
mov
frstor
stc
dec
push
jns
mov
push
lcall
pop
and
xchg
jecxz
and
cmc
pushf
ja
fldl
push
or
jae
mov
ss
mov
out
inc
mov
inc
fnstsw
shrb
xchg
ds
push
call
sub
push
cwtl
and
lds
fmuls
inc
fcom
mov
ja
out
and
mov
mov
lds
pop
test
je
fldenv
mov
mov
and
add
dec
mov
inc
jbe
add
xor
sbb
xorl
adc
xchg
cmpsl
jns
lahf
mov
arpl
adc
cmpsl
push
ficoml
stos
loop
xchg
xchg
sahf
xchg
ss
mov
hlt
xchg
fisttpl
sbb
mov
cld
mov
pop
in
pop
mov
xor
std
add
dec
jl
imul
cld
cmp
les
loope
sub
aad
in
shll
leave
sub
mov
jo
ljmp
stos
add
dec
push
pop
or
lahf
cmp
xchg
arpl
mov
dec
mov
outsl
arpl
in
out
mov
jae
xchg
cmc
scas
mulb
ret
aam
jne
outsb
lret
test
inc
push
outsl
cmp
out
cld
jle
pop
outsb
add
sub
pop
call
push
addb
xchg
les
mov
mov
pop
pop
jnp
pop
dec
fs
mov
mov
pop
vmovaps
lret
sub
cmc
add
int
test
testb
add
fadds
out
jb
fwait
or
dec
ret
or
mov
gs
jmp
xor
xor
mov
scas
inc
fprem1
leave
inc
dec
adc
jl
mov
sbb
mov
cli
xchg
pop
ja
insb
in
mov
pop
dec
lcall
addr16
jge
push
aam
in
dec
mov
outsl
push
nop
mov
push
nop
mov
xchg
std
stos
ds
aas
adc
mov
pop
dec
mov
push
add
xor
xchg
les
shrb
stos
cmp
pop
push
xchg
stc
icebp
ficompl
jae
and
repz
aaa
std
xchg
in
stc
add
cmp
pop
and
aaa
mov
aas
pop
and
lods
mov
mov
push
add
pop
jmp
jno
push
jns
sub
mov
incl
shll
mov
pop
jp
xchg
push
frstor
and
les
popa
out
loope
cltd
testl
sbb
in
fistps
and
inc
lods
gs
push
cwtl
push
push
int
ja
mov
jp
in
mov
pushf
fsts
je
jecxz
scas
out
push
daa
stos
mov
dec
sahf
push
jns
push
iret
dec
fists
mov
nop
add
sub
loopne
xchg
inc
xchg
jne
dec
jnp
xchg
push
mov
inc
daa
push
jle
or
aaa
mov
int3
adcl
pusha
cli
sub
and
add
cmc
es
out
xorb
dec
mov
sbb
or
pop
cmp
cmp
data16
arpl
push
pop
loope
in
mov
leave
mov
pop
and
mov
dec
gs
inc
add
shlb
push
dec
and
pop
sub
popf
push
pop
scas
mov
insb
xchg
mov
add
or
mov
dec
in
aas
mov
int3
lret
sub
out
cmp
add
mov
dec
rcrl
ret
in
lods
int
push
aaa
jbe
out
test
int3
inc
sarb
jle
sub
dec
addr16
out
cmpsl
pusha
adc
push
pop
pop
mov
inc
divl
rolb
inc
ret
or
nop
imul
popa
inc
lods
push
xor
lahf
jne
ss
fisubrl
jae
scas
mov
mov
push
mov
pop
lea
ss
ds
pop
aad
and
dec
or
sbb
es
mov
jb
pushf
or
and
dec
xor
add
mov
add
sub
aam
aaa
sbb
add
aam
xchg
jle
push
xchg
adcl
jns
fldlg2
mov
lods
enter
fnsave
add
inc
clc
dec
push
idiv
jl
mov
popf
inc
imul
and
pop
cmp
or
das
cmp
inc
or
iret
repnz
lret
push
mov
rcl
cmp
and
movsl
inc
out
lret
pop
incl
ljmp
stc
int3
test
and
or
xchg
or
sub
outsb
mov
add
lahf
movsb
jecxz
mov
add
pop
adc
gs
jg
in
int3
jno
incb
xchg
repz
jno
mov
nop
dec
push
divl
insb
test
add
pop
aaa
daa
adc
push
lcall
mov
push
mov
stos
push
push
jg
out
dec
scas
out
sub
jmp
sub
and
jp
sarb
jmp
repnz
jl
mov
xor
aaa
lods
dec
inc
dec
mov
cltd
test
jecxz
out
test
xchg
jb
sub
pop
inc
push
add
mov
sahf
rolb
fldenv
addr16
lret
shlb
pop
int
scas
stc
sbb
ja
cmp
mov
lods
ss
push
pop
imul
push
repnz
sti
xchg
push
xor
sarb
stc
sub
jno
shr
sbb
lcall
shl
mov
inc
popf
push
dec
in
subl
adc
mov
push
pop
cmpsb
cltd
roll
xlat
jno
rorb
mov
outsl
pop
jnp
mov
data16
cmpsl
or
sarl
pushf
xchg
fcmovne
test
jae
pushf
mov
xor
and
decl
fcmovnb
xor
lock
pushf
cmp
push
loop
jae
and
addl
cmp
add
lret
call
lods
jno
dec
cmp
shrb
sub
int3
dec
sbbb
rol
mov
jp
pop
leave
jne
or
xor
sbb
imul
fucomp
sbb
pop
add
test
out
dec
shl
mov
pop
stc
fbstp
cmp
lcall
jno
jmp
add
clc
in
cmp
mov
sbb
inc
mov
movsl
enter
fbld
rcr
mov
loop
sbb
jno
dec
sarb
movnti
mov
dec
call
pop
sbb
aam
mov
sub
mov
inc
push
add
in
cld
fmul
adc
outsb
jg
dec
cs
addr16
out
mov
inc
pop
js
sbb
in
and
or
lret
mov
ret
pop
and
cmc
dec
lods
loopne
fisubs
ljmp
mov
mov
not
pop
fwait
xor
fistpl
push
pop
sbb
addl
jg
sti
std
inc
xchg
push
sbb
jge
aas
popa
icebp
aad
add
stc
stos
xor
cwtl
and
fildl
push
sub
sub
and
push
imul
out
xor
fldcw
jecxz
insb
loope
mov
sbb
out
add
out
popf
lcall
adc
xchg
loopne
jns
arpl
jmp
push
xchg
sbb
inc
gs
cmpsl
and
push
dec
rorl
cmp
stos
jo
rorl
lcall
dec
cmp
dec
lret
outsb
push
lods
dec
xor
clc
cmp
pop
inc
and
loopne
mov
or
clc
adc
cmp
and
sub
stc
jb
mov
mov
rcrl
in
fs
adc
andb
mov
inc
sub
addr16
lea
fxch
in
add
mov
clc
aad
push
cltd
xor
rolb
mov
xchg
mov
pop
sbb
mov
std
add
pop
sbb
cmp
adc
mov
popf
sbb
inc
aam
pop
je
stos
cli
out
and
dec
fdivrl
aam
mov
mov
clc
jne
mov
das
loopne
lret
nop
jmp
sbb
or
out
or
jle
pop
lea
dec
fldl
aad
cmp
add
in
js
cmc
lods
mov
cwtl
fists
mov
inc
adc
lret
sbbb
shrl
insl
pushf
xchg
popa
cltd
mov
pop
jns
inc
mov
add
xlat
jmp
jmp
test
lds
mov
jae
dec
and
iret
mov
add
mov
rcll
stos
mov
popa
repnz
popa
shll
cmp
adc
mov
stos
dec
scas
mov
add
daa
rorb
dec
ficompl
lahf
and
push
dec
push
sbb
fisttps
or
sti
push
rorl
xchg
hlt
mov
xchg
jmp
pop
mov
or
pusha
fs
inc
xor
pusha
inc
mov
dec
xchg
mov
loop
in
adc
insb
jl
mov
jne
inc
ss
pop
jg
call
jmp
xor
lret
lock
dec
out
push
mov
jg
bound
mov
jbe
cmp
out
xor
mov
cld
xchg
inc
jae
sbb
ds
movsb
in
mov
data16
xchg
mov
pop
subl
push
or
jge
push
add
jl
mov
shll
cmp
bound
mov
mov
mov
sbb
sub
mov
mov
push
jge
leave
rcll
stos
mov
pop
es
cmp
std
mov
sub
pop
mov
mov
sbb
fsubrl
mov
movsb
loop
inc
add
test
cmp
fwait
mov
out
fnstsw
sbb
mov
pop
inc
push
outsl
cs
es
jle
mov
out
stos
jnp
cmpl
testb
ffreep
mov
or
movsl
stos
cmp
add
mov
jns
pop
out
js
loope
pop
rol
out
pop
push
pop
cld
cmpb
repnz
aad
xchg
inc
mov
shlb
in
mov
sub
xchg
mov
or
inc
movb
out
test
mov
aam
mov
mov
or
push
xor
shl
aam
rcl
imul
mov
and
mov
xchg
jle
pusha
sbb
shrb
sbb
or
inc
mov
pop
mov
ja
adc
mov
push
ficoms
bound
and
inc
push
sbb
cmp
lea
push
faddl
sti
iret
sbb
push
ret
jle
fdivl
jmp
popf
pop
dec
sub
or
cmp
movq
out
in
jo
mov
xor
mov
pop
in
testb
into
pop
pop
lahf
loopne
jmp
in
mov
sbb
shll
sar
jp
lcall
pop
scas
loope
movsl
in
mov
pop
mov
adc
xchg
pop
test
xchg
sbb
sbb
push
leave
xchg
adc
jb
call
xchg
xchg
ljmp
fidivrl
sar
sbb
push
lods
adc
mov
rcl
pusha
pop
or
or
bound
das
test
call
xor
fisttpll
inc
imul
sub
cwtl
pop
mov
jo
xlat
or
scas
les
pushf
int3
test
push
push
adc
push
loop
data16
or
addps
add
jae
popa
xchg
in
pop
xchg
and
mov
jno
mov
bound
mov
xchg
ret
or
jmp
imul
jno
addr16
and
push
xor
fcomps
jmp
mov
and
loopne
stos
mov
cmp
inc
mov
sahf
ljmp
pusha
sbb
mov
add
fdivrl
adc
out
dec
sub
inc
loope
lcall
xchg
xor
adc
out
roll
push
push
mov
sub
cmp
jecxz
mov
jmp
fstp
inc
ds
jno
in
push
and
jb
add
frndint
xor
out
test
sbb
cmc
and
jnp
adc
rol
jmp
push
push
int3
jl
cmovle
stos
and
fwait
ret
and
push
addr16
stos
xor
mov
sbb
mov
js
lcall
test
jmp
mov
and
fisttps
sub
jns
scas
arpl
push
decl
outsl
push
or
push
xchg
push
dec
mov
xor
sub
xchg
cmp
lahf
std
cwtl
inc
inc
scas
push
pop
xor
nop
dec
mov
adc
pop
and
inc
jmp
pop
lahf
pop
je
xor
cmpl
jbe
pop
sarb
jnp
ret
jne
inc
or
dec
push
xchg
mov
sub
jns
pop
jp
dec
dec
rcrl
dec
inc
mov
lds
sbb
fs
mov
dec
fs
das
imul
xor
inc
pop
enter
fcmovbe
std
outsb
and
or
dec
lods
mov
mov
xor
push
sub
cmp
aaa
sbb
fldcw
rclb
dec
adc
movsb
push
dec
sub
leave
out
nop
push
aam
scas
sbb
int
adc
mov
cs
sub
lds
addb
stc
add
iret
xor
in
int3
jp
and
fcompp
sub
adc
xor
add
push
jcxz
jnp
insb
jl
mov
int
jle
sahf
nop
fwait
push
sbb
sbb
sbb
mov
mov
jp
test
inc
xchg
mov
dec
mov
sub
imul
fwait
push
das
mov
push
cmp
fidivs
data16
push
mov
shll
lcall
sahf
shrb
ja
cmp
cltd
ja
test
fincstp
cmp
dec
mov
lods
and
push
push
mov
add
pushf
test
and
test
mov
sbb
cs
inc
push
pop
mov
mov
pop
jecxz
push
sbb
ja
sbbl
or
fisubrs
xor
dec
je
jle
stc
rorb
add
sti
push
jae
xor
test
push
cmpsl
mov
outsb
aaa
jp
push
add
xchg
jle
push
fimuls
pop
loop
jo
xchg
pop
pushf
and
outsb
lahf
stos
ljmp
and
dec
fildll
movsb
pop
dec
mov
cld
sbb
sbbl
push
rcrl
sarb
addb
imulb
sbb
and
adc
fsubl
xor
mov
or
stos
mov
ret
sbb
loope
pop
mov
lea
push
cmpsb
test
cs
sahf
imul
and
repnz
test
pop
or
insb
or
fwait
cwtl
pusha
ret
jo
je
stc
jmp
push
add
and
add
aas
out
icebp
xchg
dec
aas
fsubrs
sub
enter
andb
adc
aad
aaa
int
jnp
cltd
ja
xor
jg
sbb
adc
jecxz
addr16
ljmp
daa
addr16
mov
jne
shrl
imul
stc
imul
out
push
or
inc
out
cmp
rorb
cltd
xchg
mov
int3
aaa
fsts
dec
out
int3
jo
in
cmp
push
lods
lret
add
pop
xchg
add
dec
repz
sub
xchg
mov
pop
push
je
cmpsb
dec
lret
outsb
and
push
inc
sub
mov
mov
int3
fwait
leave
cmp
fldcw
hlt
clc
cs
jne
xchg
test
push
push
sbb
jae
inc
ljmp
xchg
jmp
leave
xor
sub
sbb
pop
mov
rcr
rorl
in
jbe
je
daa
loope
pop
inc
repz
adc
mov
in
push
lock
cltd
mov
jg
nop
mov
jmp
push
add
cmp
add
sarl
mov
out
or
loop
and
outsl
push
es
daa
pop
inc
mov
in
rcl
xchg
mov
ja
lods
jnp
aam
mov
adc
shrl
mov
imul
pop
mov
lahf
adc
testb
sarl
mov
pop
scas
div
cmpb
mov
in
int
mov
jnp
jmp
in
inc
fucomip
adc
je
jge
xchg
xchg
faddl
iret
add
test
daa
stc
orl
xor
xchg
aaa
pop
movsl
and
cli
popa
adc
cmp
popa
decb
xchg
pushf
out
sub
out
jg
jge
jle
out
shl
lret
nop
out
pop
jae
pop
xchg
jo
pop
mov
inc
dec
mov
cwtl
sub
scas
jge
xchg
sbb
adc
shrb
mov
rcl
xor
xchg
sub
lret
mov
hlt
mov
aas
adc
aas
stos
out
and
xchg
sub
inc
pop
lret
hlt
dec
dec
sbb
jbe
in
lds
lret
bound
call
cmp
mov
leave
cmpb
push
movsl
stc
cwtl
adc
cmp
aaa
jb
ret
mov
or
imul
mov
push
jmp
in
lods
mov
inc
fs
xor
push
mov
mov
add
cmp
cmpsl
dec
sahf
int
add
test
add
cmp
es
in
out
adc
jne
movsl
aam
imul
pop
cmp
lret
xchg
mov
jno
repz
insb
mov
dec
insb
clc
add
loopne
xorl
mov
daa
popa
repz
sub
roll
jecxz
sub
addr16
pop
sbb
shrb
fwait
mov
lods
pop
mov
sub
adc
mov
push
push
shr
or
sbb
inc
outsb
aam
push
hlt
cmp
les
ss
mov
test
cmp
mov
dec
insl
xchg
push
push
out
lcall
jno
hlt
ret
out
out
into
mov
pusha
loop
mov
scas
movsb
lods
or
cmp
jns
into
fdivl
sub
out
push
add
mov
mov
shll
cmc
inc
pop
in
je
inc
xchg
andl
mov
sbb
sub
loop
daa
xor
std
imul
fmuls
ret
shlb
lahf
or
shl
test
inc
xor
mov
jge
mov
loop
loopne
jae
aas
fisttpl
stc
xchg
cli
nop
inc
shll
call
bound
pop
pusha
in
mov
lea
icebp
cwtl
dec
repz
cmpl
push
cmp
cmp
sahf
add
pop
scas
xlat
mov
mov
mov
jp
xor
jbe
mov
push
or
cltd
mov
push
cmp
std
inc
repnz
jp
jo
push
or
arpl
add
aas
sub
test
mov
insb
pop
movsl
add
or
fidivrl
ljmp
sahf
loope
sbb
test
rorb
sub
imul
cmp
stc
push
ret
out
sbb
adc
lret
xchg
inc
mov
sub
lds
cmp
insb
inc
insb
sub
dec
add
negb
mov
addr16
mov
xchg
fldenv
cmpl
lahf
stos
scas
addr16
sahf
jle
jbe
jg
mov
stos
inc
cmpsl
xchg
lcall
inc
stos
outsb
push
jns
out
mov
sbb
dec
loop
xor
fnstsw
and
loop
adc
cmpsl
push
cs
cwtl
lock
popf
xor
and
jb
inc
cmp
stos
aad
add
mov
inc
mov
lods
jge
hlt
fidivl
pop
lods
dec
cmp
push
test
enterw
jbe
daa
jbe
mov
cmpsb
sub
idivb
cwtl
lods
cmpsl
push
in
cmp
ret
push
lods
cmp
jmp
scas
inc
or
out
shlb
lret
inc
test
mov
movsl
dec
mov
or
mov
xor
push
or
dec
push
out
fcompl
push
pusha
stos
out
cmp
sbb
sti
sub
mov
lcall
data16
inc
out
push
mov
cs
jns
and
pop
int
ja
jne
lods
stos
jle
mov
jmp
sbb
js
sbb
mov
test
adcl
insb
pop
dec
mov
std
cmp
scas
rcll
in
daa
out
sub
sbb
fisubs
and
ljmp
ja
stos
jmp
adc
pop
sub
mov
int
mov
popa
xor
jge
or
aas
xor
cmpsb
das
xlat
je
cmp
andb
adc
or
inc
mov
cld
adc
sub
cli
je
adc
popf
and
and
lea
std
into
pop
push
push
sub
cmpsl
mov
shl
imul
jbe
into
or
or
repnz
bound
adc
stos
jmp
pop
jecxz
jl
or
mov
or
jns
lahf
push
sahf
push
jno
jmp
aad
movb
stc
xchg
sub
negb
sub
adc
dec
cmp
push
fbld
jg
jo
scas
sub
xchg
sahf
sahf
dec
xor
outsl
xchg
push
pop
rcll
fstpl
dec
mov
sahf
int
pop
icebp
cmp
pushl
ss
ret
mov
sbb
mov
insl
pop
les
fsubs
fcoml
adc
scas
cwtl
pop
popf
add
into
pop
pusha
pop
nop
mov
outsl
jae
dec
jae
dec
outsl
dec
stos
pop
shr
daa
pop
sar
xor
adc
clc
ja
xor
ja
stos
push
mov
lea
repz
pop
lods
mov
sbb
xchg
jg
dec
loope
sbbl
lret
ss
xor
cmp
fdivr
scas
test
cmp
sub
leave
loope
mov
iret
pop
sarl
cld
sbb
stos
pop
not
les
adc
add
mov
xorb
mov
hlt
dec
arpl
cltd
inc
xchg
std
and
outsl
das
aam
jg
movsb
cwtl
mov
cld
scas
pusha
mov
cmpsb
loop
popf
rcll
stc
rcl
pop
pushf
dec
sarl
je
loopne
popa
test
scas
inc
jp
xchg
xor
in
bound
loopne
insb
pop
ljmp
stos
xchg
rcrl
mov
sbb
and
jo
adc
add
xchg
or
int
jg
sbb
dec
jle
sub
or
or
push
push
sbbb
inc
stos
xorl
repnz
push
hlt
jmp
dec
jno
mov
fidivrl
scas
int
lcall
in
and
mov
fs
dec
cmp
fimull
pop
dec
jo
in
jg
insl
mov
and
inc
fwait
and
fiadds
bound
iret
inc
cs
popa
mov
fcoml
push
in
add
pop
or
xchg
pop
push
push
insl
inc
xchg
pop
bound
inc
faddp
jno
push
imul
repz
incl
pushf
leave
add
loop
sub
imul
xchg
stc
sub
popa
push
and
adc
mov
push
and
arpl
pop
outsb
and
add
dec
loope
aas
call
dec
lret
imul
mov
pop
sbb
into
xor
mov
popf
lcall
pop
jmp
lea
enter
cmpsb
or
ja
xchg
mov
ljmp
scas
or
sub
fwait
jb
cld
loope
enter
les
inc
jmp
lock
or
mov
cmp
pop
ljmp
cli
out
pop
cmp
js
outsl
ja
pop
push
andb
pop
mov
mov
sub
xor
mov
sub
cwtl
int
cmp
out
add
add
popa
aas
repz
push
xchg
mov
dec
push
push
scas
scas
fwait
pop
movsb
shr
js
xchg
std
leave
cmp
pusha
cmp
xchg
iret
inc
inc
adc
decb
negl
mov
pop
aas
mov
shrl
imul
sbbl
pop
loop
scas
push
or
jbe
dec
sub
xor
xchg
in
leave
mov
lahf
xor
sub
mov
fwait
or
jne
and
pop
lods
mov
repnz
adc
mov
fsubrp
push
jle
mov
cltd
jnp
inc
sbb
in
fdivs
pop
into
jmp
insb
mov
mov
in
stos
loopne
dec
fs
popa
loope
push
pop
push
xchg
push
addr16
adc
and
es
daa
cs
xchg
loope
andl
cld
or
and
add
fs
aad
imul
pop
daa
pop
in
das
push
xchg
shlb
pushf
cmp
popa
leave
mov
or
dec
sub
lds
mov
rolb
movsb
loopne
ljmp
cld
fnstcw
popf
stc
je
out
cwtl
add
bnd
lret
pop
stc
mov
insl
cmovle
xchg
or
pop
push
das
fcmovne
shlb
add
push
popa
and
aaa
or
popf
neg
scas
mov
and
jne
dec
inc
pop
sub
sar
lret
xchg
nop
mov
add
sub
inc
scas
int
arpl
loop
or
adc
lods
add
or
xchg
test
pop
mov
adc
inc
sbb
adc
sub
push
sbb
movsl
or
cli
pop
dec
push
mov
mov
push
lcall
fdivr
push
jge,pn
xchg
fwait
cltd
fcom
in
sti
push
pop
sub
jmp
pop
push
cmpsl
jl
and
pop
sub
xor
sti
mov
jl
out
jge
mov
xchg
hlt
adc
and
or
mov
std
cmpsb
sub
fistpll
xor
push
ret
aas
dec
mov
sbb
mov
mov
lock
movb
rolb
decl
fsubs
xchg
rcrl
cmc
sahf
cli
dec
mov
cmp
mov
adc
in
leave
jp
push
popl
and
or
xor
jle
jg
ret
out
mov
sub
leave
xor
mov
arpl
test
negb
mov
add
notl
imul
clc
sbb
adc
jne
call
xchg
punpckhbw
mov
fwait
lea
addr16
call
dec
in
in
in
aaa
xor
js
sub
fildl
and
xchg
mov
faddl
int3
push
cmp
xlat
jge
ficompl
jecxz
setg
jb
repz
push
mov
popf
fildll
mov
jp
mov
mov
les
xlat
mov
jns
mov
aaa
mov
ret
sub
ret
sub
pop
adc
pop
scas
lds
dec
cmp
dec
cltd
repz
xor
mov
rolb
jno
shr
and
aaa
mov
xor
pop
sbb
lret
testl
pop
or
notb
clc
fwait
iret
in
out
fcmovu
jmp
dec
cs
adc
xchg
jno
int
sbb
in
loope
inc
lret
push
aas
pushf
mov
push
sub
outsb
dec
mov
hlt
ret
sbb
adc
in
jmp
out
popa
cmp
jmp
sub
out
lcall
imul
jmp
jp
imul
xchg
mov
adc
movsl
sbb
adc
dec
sub
inc
ret
testb
mov
cli
push
inc
push
lods
inc
test
jecxz
cmp
fwait
add
add
daa
mov
cli
and
push
xor
fcompl
pop
pushf
or
in
out
add
xchg
cmpsl
and
jbe
clc
sar
xchg
jmp
inc
mov
mov
push
sub
jnp
les
push
mov
push
daa
add
in
jmp
sub
sbb
push
bound
pop
fldt
push
xor
sbbl
icebp
imul
insl
mov
jecxz
lds
or
jmp
mov
fs
ficoml
jp
movsb
mov
lret
test
test
add
and
inc
outsl
repz
int
inc
les
sbb
fdivrl
adc
pushf
scas
addr16
jnp
fsubrl
cmp
test
pop
jb
xchg
sub
test
je
jle
outsb
mov
jge
mov
pop
inc
adc
bound
int
or
out
sbbb
xor
push
pop
in
or
mov
cmp
mov
inc
cmc
mov
sub
sbb
mov
mov
clc
lea
cmp
sbb
enter
icebp
divb
mov
sub
sahf
xor
cli
clc
mov
rolb
ss
add
add
jae
push
xor
repnz
push
dec
jg
cmc
dec
inc
fcoml
sub
cli
imull
mov
pop
fwait
pusha
mov
dec
jg
mov
loop
xchg
jnp
inc
sub
lcall
sub
pop
or
in
xchg
addl
imul
push
fcmovne
pushf
call
enter
pop
cwtl
or
mov
pushf
and
loop
insb
push
and
mov
fwait
loop
arpl
push
imul
cmp
jno
xor
pop
out
jns
add
shr
xor
mov
fdivrl
cmpsb
dec
stos
cs
lds
fnstsw
and
aas
in
cmp
mov
jmp
and
xchg
jecxz
sbb
mov
clc
adc
mov
pop
adc
int3
jne
add
add
jge
xchg
add
xchg
or
dec
pop
aad
shl
xchg
sub
lods
xor
jge
imul
call
fcoml
shr
jnp
sbb
xchg
ret
repnz
cmpsl
xchg
mov
add
inc
xchg
stos
mov
mov
jp
and
insb
jno
fiadds
sub
scas
jbe
loopne
hlt
or
mov
xchg
in
je
clc
cmpsb
test
pop
popa
popf
xor
int3
mov
pop
fdivrl
insb
mov
xchg
scas
mov
repz
and
and
ja
jns
push
jno
lcall
cltd
cmp
out
cmc
outsb
addb
ds
int
push
push
dec
jae
add
xchg
pop
jecxz
mov
shll
dec
sti
xor
pusha
xlat
in
jo
test
or
cmp
dec
inc
imul
aad
fstpl
fwait
xchg
adc
sub
lcall
addr16
pop
es
test
sub
push
mov
test
scas
shll
push
add
sub
mov
or
sub
lret
enter
adc
xchg
cmp
inc
outsl
jle
pop
call
clc
push
cmp
out
pusha
inc
xchg
int
xchg
mov
mov
dec
sbb
adc
andb
xchg
sub
cli
xor
dec
outsb
les
xchg
adcb
jo
mov
scas
cs
add
adc
xor
int3
lcall
jne
push
sti
les
in
mov
ljmp
cmp
xchg
mov
sti
xchg
push
mov
ss
std
mov
mov
cli
lret
data16
lahf
mov
push
sbb
push
test
jnp
push
jo
jg
mov
cmp
repz
and
adc
and
nop
daa
jnp
movsb
push
mov
or
add
xorl
scas
cmp
stos
or
cmp
push
adc
jg
and
sahf
sarl
and
popa
data16
cmp
je
daa
push
and
push
dec
fwait
and
psubsw
push
mov
xlat
fucomip
inc
cli
loope
cmp
adc
int
mov
je
add
xor
wrmsr
hlt
xchg
jbe
and
ret
or
es
xor
repnz
clc
popa
lods
lock
movsl
gs
pop
sub
shrb
mov
mov
or
aas
jo
mov
rorb
aam
mov
mov
push
enter
inc
xor
cmc
dec
cmp
dec
jnp
or
repz
test
testl
mov
mov
mov
js
out
daa
insl
shrl
mov
adc
and
sarl
dec
xor
into
test
sbb
aad
out
and
mov
sub
add
imul
mov
in
call
dec
test
mov
sub
pop
iret
cmp
fadd
adc
jmp
fildll
inc
loop
repz
pop
test
movsl
daa
rcl
or
stos
pop
ret
add
add
xor
test
fs
das
shlb
add
xor
push
stos
call
sub
pop
shll
mov
fnstenv
sbb
sub
pop
jg
jp
jp
cmpsb
pop
out
dec
fisubl
push
scas
lods
sbb
lret
mov
push
inc
jbe
ljmp
sbb
xchg
cmp
xchg
pop
dec
insl
inc
jp
cmpsl
xlat
xchg
pop
mov
and
fistpl
mov
test
pop
dec
cmpb
mov
aaa
les
mov
jmp
mov
jp
mov
sub
daa
nop
inc
and
push
mov
testb
mov
lods
xchg
and
mov
scas
rorb
and
cltd
xor
jne
ror
mov
je
xchg
into
jp
mov
pusha
insb
add
jo
mov
lcall
pop
movsb
out
jo
shll
inc
mov
dec
sti
push
or
imul
adc
popa
sub
add
add
icebp
push
pop
xchg
jae
cmpsb
call
pop
cmp
das
movsb
out
jmp
iret
sub
or
xchg
out
mov
std
int
jg
jg
jns
clc
in
and
dec
loop
mov
sbb
mov
or
pop
scas
mov
jb
inc
es
faddl
jle
or
adc
jge
or
jmp
xchg
fldl
aam
inc
gs
add
inc
leave
in
movsb
pop
and
pop
pop
divl
mov
into
cli
jmp
rorb
and
clc
hlt
out
xor
dec
in
fbld
lock
xor
lds
mov
inc
push
xchg
xlat
mov
push
lods
sarb
into
test
repz
cli
stos
xchg
subb
jnp
pop
shr
mov
scas
xchg
xor
ljmp
mov
dec
dec
movl
inc
testl
mov
into
inc
aas
and
lahf
fs
sub
mov
sbb
dec
mov
jne
xor
pop
jb
fs
aas
sbb
jecxz
test
push
jbe
js
loop
pusha
out
or
int
pop
push
mov
repz
or
xchg
cmp
xor
movsb
jle
mov
pop
push
mov
inc
mov
push
lods
jle
movsb
pop
mov
js
mov
nop
adc
and
add
mov
test
dec
sub
movsl
mov
mov
adc
push
jge
insl
mov
or
cmc
pop
inc
mov
xchg
or
and
fwait
mov
or
shrb
cmp
jg
nop
mov
xor
xchg
inc
adc
pusha
jecxz
push
in
pop
addr16
into
sub
inc
dec
mov
dec
daa
shr
adc
push
out
jo
pop
inc
outsb
je
cwtl
dec
sbb
push
movl
mov
pop
stos
jbe
popa
push
inc
push
addr16
jecxz
mov
fiadds
test
mov
xor
int
jb
insb
insw
cltd
push
push
mov
inc
in
dec
mov
xchg
jae
test
ret
push
call
and
jmp
aad
testb
jge
in
adc
test
adc
mov
call
fstl
cmpsb
xlat
movsl
and
cmp
mov
cmp
inc
rolb
jle
lret
fisubs
jo
xor
dec
mov
mov
xchg
dec
add
test
in
mov
fwait
dec
sub
sarl
sbb
add
out
cmp
arpl
adcl
shrb
dec
sbbb
repz
and
jle
xor
sti
ret
inc
lret
sbb
mov
mov
push
stc
jg
jo
insl
jg
mov
inc
in
gs
fimull
sub
rolb
cmp
dec
bound
and
jl
cli
pusha
pop
movsb
aaa
cmc
or
stc
std
push
pop
xor
jg
add
pop
stc
sbb
pop
rclb
js
pop
cltd
psadbw
jmp
jns
iret
idivb
scas
xorb
sub
addr16
movsl
dec
test
pop
mov
dec
ds
divb
int
popf
pop
ud2
pop
scas
add
or
cmp
jne
loopne
add
mov
jecxz
xchg
sub
jo
popf
adc
mov
xchg
or
sbb
fwait
jns
adc
cltd
insb
sbb
jb
xor
jecxz
mov
sub
push
jecxz
fmulp
mov
shrl
add
lret
data16
testb
jne
orl
dec
scas
xchg
nop
xchg
inc
lods
cmp
lcall
lret
pushf
ficoms
xchg
bound
int3
mov
shrl
xchg
popf
rclb
push
ja
push
add
in
push
int
fstpl
adc
hlt
bound
jl
or
rorl
and
shll
adcl
popf
jno
adc
lea
mov
and
push
rclb
outsl
pop
xchg
mov
daa
enter
sub
inc
xchg
cmpsb
int3
jge
out
rolb
mov
pop
pusha
xchg
pusha
andb
push
lods
ret
push
jp
cmpsb
rolb
mov
xchg
pop
out
arpl
push
push
es
test
roll
pop
rclb
push
sbb
dec
push
mov
lret
jecxz
mov
es
jp
push
lahf
xchg
neg
pushf
mov
cld
push
cmp
lcall
cmp
insl
lahf
mov
insb
xlat
ja
mov
push
sub
xchg
je
lods
fwait
into
call
inc
xor
adc
mov
mov
jb
punpckhbw
in
mov
mov
pop
mov
mov
arpl
xchg
xchg
xchg
add
sbb
xor
xor
jns
xor
fdivs
data16
mov
outsb
loope
std
or
jns
es
push
popf
lret
cmp
in
and
out
xor
cmp
aam
mov
push
lods
les
test
pop
fldl
xor
cmp
pop
and
test
and
out
lcall
push
fstl
xchg
mov
pop
and
pop
cmpsl
xchg
pop
mov
xor
jns
sbb
lea
fadd
les
inc
scas
jbe
int
adc
jns
int3
je
pop
jnp
lea
push
add
lea
adc
dec
cmpl
in
lock
sarb
aas
pop
and
dec
mov
pop
inc
cmp
int
jno
lret
int
out
cmpsl
and
cmp
iret
inc
imul
xchg
add
lcall
fcmovne
data16
mov
jbe
popf
xor
stos
stc
subl
fs
subb
addb
push
fcoml
xor
loope
ja
mov
or
sarb
stos
xchg
adc
outsl
jp
ds
gs
rorb
and
mov
mov
and
es
jae
out
aam
lahf
sar
stc
je
dec
pop
pop
mov
in
sub
jp
mov
mull
adcb
push
sbb
pop
jl
push
xor
sbb
inc
enter
inc
jno
cmp
test
jae
out
and
lcall
test
mov
jbe
fdivp
fadd
arpl
stos
mov
lret
mov
pop
test
sti
incl
mov
sbb
mov
push
in
mov
int3
scas
sbb
sub
jmp
adc
cmp
iret
fnstcw
les
jle
sub
jl
pop
sbb
test
cmp
loopne
ds
ret
sti
and
and
imul
xor
icebp
call
and
shlb
jno
sbb
cld
out
outsl
mov
pop
in
jge
repz
push
jae
shrl
xchg
jg
or
pop
mov
xlat
pushl
mov
cwtl
cli
out
mov
hlt
fists
xchg
scas
and
test
jne
and
xor
push
push
gs
and
cltd
jg
loope
loop
and
lret
testl
xchg
sbb
jle
mov
ljmp
cmp
or
sahf
dec
pop
mov
lea
std
cs
sti
xor
and
xchg
dec
mov
sahf
sahf
shll
mov
sub
cmp
pop
int
mov
adc
cs
notl
inc
leave
gs
movsb
xchg
and
dec
sub
fs
mov
fnstcw
shlb
mov
fidivrs
icebp
int3
cs
loope
pop
xchg
in
adc
mov
dec
and
cmpsl
mov
xchg
aad
repz
imull
pop
adc
dec
scas
mov
xchg
mov
sbb
fadd
scas
mov
test
mov
pop
ds
sbb
sbb
adc
mov
inc
add
cwtl
sub
sub
cmp
fsub
cmpsl
leave
push
ficoml
fs
leave
pop
iret
daa
mov
jge
mulb
push
xor
btr
insl
cmp
das
xchg
shlb
mov
xchg
pushf
addb
fstp
and
push
shlb
xor
dec
push
and
sti
cmp
push
fstpl
mov
das
bound
jbe
sti
push
push
dec
popa
pop
push
fildl
inc
jbe
inc
push
loopne
icebp
test
push
lret
addr16
dec
lods
lahf
cs
sbb
stos
imul
sub
pop
cmpsl
mov
mov
hlt
xor
outsl
inc
into
out
popf
add
push
cmp
rorb
je
mov
pop
sub
cmp
sub
pop
ljmp
das
and
fldenv
jns
sub
test
ss
je
mov
test
push
mov
sbb
xchg
xor
stos
pop
xlat
stos
xor
pop
cwtl
sub
cmc
sub
inc
or
stc
dec
cwtl
mov
test
mov
add
clc
stos
aam
mov
imul
pop
xor
mov
push
add
adc
ljmp
add
xor
aaa
pop
btl
mov
sub
push
test
mov
icebp
push
sbb
dec
in
insb
cmp
pop
int
sarl
mov
inc
pop
mov
pop
icebp
jl
sarl
scas
jl
or
ret
les
inc
jns
mov
inc
xor
lea
jo
mov
ljmp
inc
sar
dec
jle
lahf
imul
xlat
fldt
mov
int
popf
mov
jmp
fisttps
loopne
and
inc
iret
push
arpl
sbb
aam
int
xor
aaa
add
insb
mov
mov
pop
dec
xchg
add
mov
push
cmpsb
xorl
sbb
shlb
int
adc
xchg
jns
adc
push
cmp
iret
sub
mov
cwtl
or
int3
call
lahf
hlt
dec
hlt
je
push
adc
clc
push
sti
or
outsl
adc
rcr
clc
xchg
cli
pop
xchg
xchg
xchg
push
sub
xchg
decl
mov
dec
and
and
or
xorb
cltd
pop
push
xchg
je
pusha
inc
or
mov
adc
mov
imul
push
or
inc
ds
xor
mov
fnstcw
mov
mov
mov
scas
pop
cs
inc
push
jb
test
push
push
jnp
fidivl
les
add
iret
popa
jns
push
mov
in
and
fmuls
pop
sub
adc
shll
cmp
lret
ljmp
dec
test
add
dec
pop
lret
pop
push
pop
fsts
xor
mov
or
sti
jb
subl
lock
lock
pop
dec
lahf
adc
mov
jecxz
arpl
mov
mov
shll
pusha
mov
push
adc
repz
out
mulb
adc
hlt
mov
add
ret
xor
nop
pushf
jae
imulb
xchg
pop
mov
mov
sub
xor
cmp
add
pop
xchg
sbb
stos
das
or
pop
in
xchg
cmp
sbb
adc
fcomps
xor
pop
pushf
sbb
add
lds
jecxz
into
fists
sub
enter
roll
mov
dec
ljmp
into
pop
xchg
xchg
cmp
adc
jbe
out
inc
mov
gs
std
push
sbb
mov
mov
fldt
cmp
jecxz
xchg
mov
sti
and
movsl
push
push
cmp
pop
mov
mov
mov
sarb
into
jne
movsl
cld
inc
mov
pusha
xchg
ror
je
repz
loope
xchg
out
daa
pop
add
out
int
iret
ffreep
push
xor
inc
mov
pop
fcmove
call
rol
cmp
sbb
insl
adc
stc
in
lahf
xchg
jb
sub
or
jno
das
sub
sbb
jle
and
push
dec
mov
sar
xor
fildll
pop
pop
pushf
pop
sub
cmp
sbb
dec
or
or
adc
jmp
into
fsubr
addb
in
push
insl
push
mov
notb
add
rcll
ja
aam
push
out
loope
dec
push
pop
dec
cmc
ret
outsl
or
sti
xchg
or
mov
or
add
testl
sub
add
pop
cmpsb
or
mov
or
sbb
mov
sahf
lock
std
jg
cmpb
mov
rcl
movl
les
dec
test
test
xchg
jbe
xchg
inc
stc
repz
add
ret
push
pushf
orl
xor
andb
into
out
jnp
test
js
xchg
mov
mov
sbb
nop
push
cltd
sub
jnp
sti
in
sahf
lock
push
lahf
and
or
push
and
cld
pop
pop
nop
mov
in
leave
xchg
into
sub
lret
push
stos
sub
mov
dec
repnz
mov
ljmp
mov
gs
popf
ds
in
pop
push
in
notb
lods
nop
push
ss
dec
lahf
cmpb
loopw
or
and
addr16
aaa
push
push
and
cli
mov
mov
aad
and
xchg
dec
ds
push
cmp
mov
lock
inc
pop
mov
xor
iret
mov
pusha
push
xchg
popf
and
ffreep
sub
xchg
lock
or
rcl
sbb
dec
adc
cmpsb
mov
push
test
jbe
jnp
lock
clc
call
js
pop
insl
push
aas
xor
scas
dec
jge
pop
flds
je
jl
mov
sbb
in
or
pushf
test
fcomps
dec
push
or
mov
mov
jle
dec
in
jg
test
pusha
call
pop
les
jg
push
dec
inc
lods
popa
bound
in
es
fs
fisttps
cmpsb
setnp
sbb
in
sub
mov
xor
ds
stos
dec
and
xchg
xor
repnz
pop
dec
lret
push
cmpsb
lods
js
mov
cmpsl
push
xor
add
imul
dec
adc
icebp
sub
jge
out
and
jne
or
shll
add
xchg
stos
nop
jb
cmpsb
pop
cs
in
adc
scas
testl
je
mov
mov
dec
mov
sub
cli
lcall
int
imul
or
dec
mov
push
es
mov
dec
lcall
es
fadd
loop
orps
mov
push
dec
mov
lds
lcall
jle
test
or
cltd
or
and
fbld
stos
push
out
adcl
add
sbb
test
aad
stos
jne
jle
dec
jne
cs
and
or
scas
pop
push
xchg
pop
in
mov
fidivl
pop
mov
or
mov
xchg
cmc
testl
mov
sti
aam
jecxz
mov
mov
stc
push
add
out
loop
sub
ljmp
lds
or
xchg
aam
aad
and
ss
inc
in
or
xchg
outsl
bound
ret
insb
jo
jae
mov
aam
pop
dec
sahf
ret
or
es
dec
push
sbb
push
xchg
popa
xlat
inc
ficoms
adc
clc
sti
hlt
arpl
pop
xor
movl
cs
push
sbb
loopne
arpl
and
push
inc
adc
push
testl
icebp
inc
inc
push
pop
sbb
mov
mov
inc
mov
fstpl
add
idivl
and
insl
ret
outsb
sti
shl
and
insb
add
in
pusha
jbe
cmpsb
shll
enter
mov
leave
mov
ret
inc
fnsave
sbb
mov
cwtl
test
xchg
push
adc
rcrb
push
mov
scas
xchg
in
jmp
mov
mov
movsl
jo
jge
daa
cs
xchg
or
xchg
loop
pop
imul
sbb
mov
mov
enter
pop
popa
or
pop
add
adc
int
and
ss
mov
rcll
sub
sarl
cmc
aad
cmpsl
clc
push
adc
mov
clc
dec
int
cmp
or
sub
mov
stos
jne
pop
jle
push
xchg
push
lret
cmc
xchg
cmpsl
mov
cli
test
add
and
sbb
pop
sub
fucom
mov
loope
aas
popa
fstl
dec
sbb
ret
std
aas
cwtl
jae
ret
cld
push
ss
add
adc
scas
pop
mov
popf
fldt
push
add
arpl
adc
cwtl
mov
sbb
xchg
ret
sysexit
cmpsl
cwtl
sbb
jmp
addr16
add
dec
dec
push
dec
cmc
sti
mov
mov
add
pop
adcb
subb
mov
movsl
jl
sbb
fcomi
popf
mov
push
jnp
ds
movsb
sbbl
out
adc
mov
mov
mov
fadd
rcll
jae
inc
aad
ljmp
push
push
in
lock
mov
add
push
lock
sbb
arpl
outsb
xchg
dec
dec
xchg
clc
rcrb
test
add
insl
movsl
mov
cmpsl
dec
adc
sub
dec
nop
shlb
outsb
insb
adc
mov
decl
cmp
mov
xchg
pushf
ret
nop
lcall
cmp
fnstcw
jae
leave
es
xor
insl
mov
lret
fistpl
cmpsl
push
mov
push
stos
dec
ret
mov
mov
popa
add
in
in
test
push
xchg
cs
movsl
jno
jb
push
jmp
arpl
adc
lods
les
or
rclb
sbb
addr16
arpl
jp
mov
jns
lds
push
fnstenv
cli
rcrb
cmp
fidivrl
sti
movsb
leave
mov
mov
push
loopne
stc
cmp
jmp
xor
repz
pushf
dec
jle
sbb
or
incl
movsb
mov
sbb
lods
pop
fs
leave
call
push
push
fldt
pop
rcrl
stc
js
shrb
dec
sti
lea
ja
add
je
inc
andl
xchg
out
mov
lds
adc
pop
jge
mov
imul
jmp
sbb
ljmp
in
jmp
aam
push
pushf
add
add
popa
add
add
es
ljmp
sbb
ja
or
rep
or
imul
lods
ss
rorb
mov
cmp
in
inc
es
inc
ljmp
xchg
inc
ret
xchg
dec
mov
aad
pop
sub
xchg
fcoml
test
stos
or
xchg
jne
idiv
sbb
or
sbb
pop
lods
mov
js
adc
stos
movsb
sbb
inc
xor
je
and
aaa
in
fmuls
push
jno
pop
stos
pop
popa
or
in
call
mov
stc
idivl
add
nop
imul
cmp
cwtl
outsl
add
stos
pop
mov
jecxz
sub
imul
iret
ret
out
inc
pop
aaa
xchg
lret
mov
dec
xorb
lcall
je
and
rclb
movsl
imul
xor
inc
cwtl
pop
push
and
mov
mov
push
pop
test
fucomip
leave
test
xor
xchg
negb
jnp
push
jnp
pop
es
aam
pushf
pop
ss
in
jmp
jl
dec
and
aam
fimuls
add
gs
mov
fbstp
clc
and
dec
repnz
xlat
mov
sub
sbb
das
lcall
je
stos
lahf
movaps
mov
add
sub
jmp
int
fcomp
fcompl
pop
test
dec
cwtl
and
stos
lods
arpl
dec
stc
lea
inc
mov
enter
cmp
pop
pop
in
pop
and
lahf
cmc
sbbb
lret
outsl
jnp
or
imulb
or
hlt
push
cmp
cmovb
push
jo
ror
or
mov
pop
sbb
cmp
call
shl
movsb
sub
adc
add
push
sbb
add
bswap
ja
jmp
cltd
in
mov
nop
and
jnp
adc
insl
jmp
ja
inc
enter
lcall
scas
cmpsl
in
push
das
stos
push
xor
sbb
mov
jge
mov
cwtl
movsl
sbbb
cmp
clc
sub
pushf
and
lock
and
xchg
xor
arpl
xchg
aaa
fbld
cmp
cli
das
and
fdivl
and
popa
jmp
lahf
add
sbb
xor
inc
and
mov
pop
push
arpl
mov
push
cmp
adcb
lods
repnz
inc
pop
mov
iret
dec
fsubrl
add
sub
or
xchg
lcall
inc
mov
sub
mov
mov
sarl
sbb
mov
push
cld
cmpsb
icebp
enter
inc
cmp
shl
mov
push
dec
xchg
loop,pn
loope
xchg
jbe
inc
inc
nop
and
loop
cld
xor
sub
add
ret
sbb
in
jbe
or
test
push
pop
push
jp
insl
mov
dec
push
addb
lock
xchg
xchg
pop
jge
mov
jecxz
js
ret
int
or
fldenv
lahf
fwait
cmp
test
lret
cmpsb
adc
icebp
iret
inc
fcmovnbe
jns
and
rcll
push
cmpsb
sbb
lcall
lds
lods
and
aas
push
leave
fs
sbb
or
hlt
push
jmp
jbe
inc
lea
mov
push
push
lahf
and
push
cld
clc
sbbb
jp
or
mov
cmp
mov
jns
lret
jno
mov
dec
test
mov
jg
push
pop
js
cwtl
mov
mov
sub
lret
mulb
shll
shrb
dec
adc
push
xchg
add
gs
xlat
insb
mov
jecxz
jge
mov
pop
fidivrl
leave
adc
push
dec
es
jae
fucom
outsb
aas
js
adc
lea
inc
or
mov
inc
adc
sub
mov
adc
fs
fmul
shrb
loop
ljmp
sub
or
add
icebp
pusha
pop
cmp
mov
std
sub
cmp
adc
dec
lret
mov
mov
subl
jecxz
push
push
adc
iret
movsl
popf
adc
leave
in
and
and
pop
jle
dec
push
sahf
fs
nop
mov
stos
pushf
shrb
mov
test
inc
subb
imul
in
mov
adc
mov
jmp
test
pop
test
arpl
push
cmpsl
sub
cwtl
xchg
leave
jnp
popa
rcrb
cmpsl
push
jmp
xchg
pop
mov
mov
jno
add
ret
lods
jno
arpl
mov
cltd
lret
cmp
jl
call
pushf
jnp
in
add
lahf
mov
inc
icebp
rcl
and
jns
pop
mov
aad
or
repz
sti
add
cmpb
mov
fnstsw
shrl
test
add
std
push
test
loop
inc
pusha
push
jmp
push
add
aam
cmp
pop
mov
xor
lods
das
insb
cmp
cmp
cli
pop
mov
lret
mov
stos
jp
lahf
out
pop
sbb
push
adc
cmp
cmpsb
add
enter
fwait
out
rcll
inc
xchg
push
stc
ljmp
sub
push
sub
not
sub
jo
inc
push
in
incl
pop
push
xchg
mov
mov
test
and
pop
jp
dec
jmp
cmp
add
push
mov
fwait
jnp
jb
push
pop
or
jno
mov
loopne
add
xor
pusha
std
push
mov
fwait
push
lea
cmpsl
fistl
push
int
dec
test
inc
subl
dec
in
jp
pushf
bnd
xchg
je
push
pusha
sbb
push
int
xchg
fidivrs
fstp
adc
dec
sti
or
inc
je
fucomp
int
shrb
xor
inc
lret
jle
mov
push
add
pop
aas
jle
push
jbe
or
and
sbb
lahf
or
add
xchg
push
or
loop
scas
mov
in
or
push
mov
out
mov
cli
shl
loopne
hlt
mov
pop
cld
push
xchg
add
dec
xlat
loopne
sahf
mov
les
jnp
add
imul
pusha
fsubrs
and
shlb
in
repz
xor
push
rep
shlb
lahf
fcmove
movsb
hlt
mov
inc
inc
pop
pop
or
mov
aas
out
push
jl
aaa
add
push
mov
mov
fimull
jno
movsb
fstps
dec
nop
sub
sub
pop
pop
mov
pop
pop
adc
xchg
xor
cli
nop
adc
stc
mov
mov
jns
cmp
dec
pop
sub
push
push
inc
out
std
fistpll
aas
and
xor
imul
pusha
push
sbb
repz
pop
inc
and
dec
sub
call
push
out
xchg
sub
clc
ja
in
or
cmp
xchg
cmp
push
mov
call
insb
add
je
cwtl
cmc
test
in
jmp
xchg
in
clc
sub
xchg
aam
dec
std
test
push
xchg
pushf
pusha
outsl
sub
mov
inc
mov
jl
ret
xchg
shrl
std
loop
pusha
nop
hlt
inc
arpl
sahf
aas
fucomip
adc
fs
cmpb
cmp
nop
xchg
fwait
les
push
and
orb
mov
mov
aas
and
sub
dec
aad
xor
lret
test
cmp
in
push
xor
xor
cmp
lret
arpl
mov
test
pushf
cmp
lahf
notb
fs
rol
mov
xor
mov
loopne
xor
dec
inc
sub
mov
dec
fs
ja
and
sub
lea
xchg
xor
mov
ds
jg
lret
out
lcall
mov
cmp
stc
and
or
jae
dec
and
jb
sarb
sbb
daa
xor
push
mov
or
jmp
loop
pusha
filds
xchg
jp
fcompl
push
sbb
jp
fwait
xchg
in
cld
dec
pop
lret
xchg
jecxz
cmp
pop
into
adc
dec
int3
jl
loope
std
inc
jmp
ljmp
bound
pop
mov
sarl
push
scas
mov
xchg
cmpsb
xchg
aam
fwait
adc
or
jmp
jge
add
jnp
adc
lock
test
pop
shr
and
mov
xchg
in
nop
mov
scas
pop
add
arpl
xchg
bnd
sub
aas
enter
jno
push
dec
mov
and
sub
mov
fildl
mov
and
imul
push
frstor
add
dec
push
push
loop
push
dec
dec
and
movsb
mov
pop
stos
xchg
daa
pop
dec
and
outsb
xchg
cmpsb
inc
push
add
jg
mul
push
fiaddl
enter
pusha
mov
inc
orb
call
jl
mov
jl
sbb
into
mov
mov
scas
scas
lahf
outsl
cmc
dec
cmp
xchg
xchg
leave
push
adc
dec
mov
adc
pop
xor
sbb
or
fcomps
dec
in
imul
cmpl
bswap
dec
inc
out
test
popf
xchg
pop
jecxz
lds
dec
fcmovne
js
lret
imul
push
push
xchg
loopne
jbe
sahf
movsb
cltd
pop
addb
jae
lods
sub
xchg
fs
xchg
mov
lock
sahf
jnp
scas
push
push
into
or
inc
xlat
scas
mov
aas
push
jo
and
or
popl
pushf
sti
push
subb
aaa
je
adc
shlb
shrb
pop
in
loope
push
popf
adc
pop
pop
inc
std
jae
mov
popf
fisttps
fiadds
daa
sub
inc
xlat
repz
mov
xor
mov
cmp
push
inc
std
jno
fisttpl
mov
xor
cwtl
iret
mov
xchg
icebp
movsb
fcomp
call
ds
out
je
inc
or
mov
cmp
lcall
ss
adc
cmp
dec
xchg
mov
and
stos
scas
add
pop
or
rorb
inc
lods
cmpsl
mov
sahf
sti
shlb
icebp
mov
mov
test
les
push
cwtl
cmpsb
dec
adc
imul
ret
cltd
sbb
nop
mov
nop
sbb
pusha
sub
dec
push
test
add
pop
dec
mov
inc
jp
or
adc
pop
lds
sbb
scas
es
lods
sbb
dec
mov
jmp
sarb
xor
mov
repnz
dec
test
in
mov
pop
into
enter
pusha
dec
sub
jecxz
push
xor
movsl
enter
cmp
adc
mov
dec
loope
and
jg
pushf
test
add
outsl
cmpsb
push
insb
sbb
mov
cmp
jns
adc
dec
shlb
xor
out
or
mov
xchg
xor
pop
sbb
cld
lock
jno
mov
dec
push
pop
ret
jge
stos
xchg
sub
xchg
lahf
pusha
sub
cmp
fstpl
dec
gs
pop
imul
jne
inc
cmp
in
jbe
sub
mov
and
adc
mov
xchg
icebp
cmp
mov
jl
sbbb
jle
popf
aaa
lahf
aaa
in
push
jno
shlb
jnp
or
lock
mov
in
xlat
ljmp
pop
xor
mov
dec
pop
push
pop
sub
push
cmp
push
mov
test
inc
loopne
jo
stos
repnz
stos
loope
cmp
std
mov
jp
mov
shlb
daa
or
jbe
cmpsl
xlat
loopne
xchg
loopne
jns
adc
mov
movsb
jnp
jl
push
mov
cmp
ja
flds
dec
out
pop
stos
andb
push
fidivrl
dec
test
popa
mov
in
movsl
inc
push
leave
sbb
in
push
aad
cmp
pop
dec
xor
push
loope
sub
mov
mov
lods
leave
fwait
imul
cs
add
cmp
decb
mov
hlt
lds
jo
jecxz,pt
ret
push
aad
outsl
push
roll
in
mov
jg
testl
les
out
pop
sbb
push
repz
fidivrl
outsl
xchg
js
daa
dec
addr16
jb
mov
stos
and
outsl
inc
and
jns
popa
sbb
and
pusha
push
aas
mov
ds
lret
loop
inc
mov
pop
lock
dec
and
addr16
mov
pop
xor
xchg
ljmp
sbb
mov
jnp
cld
in
jecxz
adc
xchg
pop
pop
jg
popf
cmp
call
dec
jmp
sar
aad
cmp
xchg
clc
mov
add
iret
and
les
xchg
into
inc
ljmp
aas
out
cltd
outsb
pop
sub
push
nop
std
mov
xchg
inc
pop
push
js
iret
out
mov
loopne
ret
push
in
jg
cwtl
adc
jmp
test
add
out
sub
sbb
inc
adc
xor
in
add
ret
mov
hlt
aam
mul
pushf
pop
inc
shl
loopne
lret
lods
add
jns
add
xchg
sub
jns
xchg
in
mov
outsl
test
inc
fsubs
pusha
add
inc
scas
sub
fists
outsb
adc
loopne
pop
xor
jmp
xlat
mov
aas
jae
pushf
addr16
xchg
sub
or
mov
fadd
test
fimuls
xchg
xchg
das
lods
add
inc
test
mov
jge
fdivl
cmpsb
jle
in
ret
and
mov
stos
shlb
sub
pop
cmp
iret
sti
fistps
pop
mov
icebp
insl
mov
dec
push
xor
mov
loope
stos
mov
add
jb
mov
sub
or
nop
pushf
popf
stc
fildll
mov
mov
mov
aas
jo
xor
loop
aaa
fidivrl
scas
push
lds
mov
adc
cmp
cmp
iret
mov
push
ss
lret
mov
scas
cmp
fimull
fmuls
push
push
jge
rolb
pop
lret
shll
xchg
std
sub
hlt
sti
fildll
shl
lds
mov
sbb
adc
dec
icebp
mov
xchg
fiaddl
push
outsl
cmpsl
xchg
mov
pop
adc
test
lcall
nop
dec
cltd
cmp
mov
fdivr
arpl
cmpsl
or
js
fimull
test
fs
sbb
repz
cmp
jecxz
sarb
lods
push
mov
dec
ficomps
and
bound
sub
inc
loop
mov
or
cmp
in
movsb
push
mov
clc
mov
fidivrl
js
lods
mov
sti
xchg
aad
mov
loopne
lods
pop
test
push
jmp
fnsave
mov
sub
loopne
mov
lret
mov
out
inc
addr16
or
out
in
or
and
mov
jmp
cmp
or
test
push
mov
daa
mov
fwait
cmpsb
jecxz
xchg
fidivrs
inc
jmp
aad
movsb
insl
cli
cmpl
inc
mov
fdivrs
inc
pusha
ja
sbb
jmp
ret
clc
inc
pop
into
lods
cmp
lahf
adc
pop
imul
shlb
in
pop
cmp
fucomip
imul
pop
mov
jns
push
sbb
pop
xlat
push
pop
sub
and
int3
pop
pop
iret
dec
shll
jl
sub
insb
test
gs
xor
dec
cmp
mov
and
sub
fildll
sub
icebp
and
fadds
push
sub
in
jae
xchg
orl
loopne
push
push
jmp
aam
push
imul
leave
add
jnp
cltd
push
icebp
ljmp
test
loop
leave
dec
outsl
pusha
subl
jmp
xlat
cmpsl
test
and
lret
shll
pop
add
leave
les
lock
lds
mov
test
popf
mull
std
fbstp
movsb
cld
cld
popf
movsl
pop
add
cmpsl
idivl
iret
dec
jo
or
mov
dec
daa
stos
add
repz
lods
cmp
mov
mov
xchg
xor
sti
and
cmp
pop
and
ret
jns
adc
mov
or
mov
in
negb
adc
inc
or
mov
and
xor
in
adc
lret
in
shl
xor
dec
test
rcrl
add
xlat
into
daa
sbb
cmpsb
test
jp
mov
or
in
sub
mov
xchg
enter
pop
daa
and
sbb
adc
push
dec
shrl
mov
push
mov
inc
mov
inc
jno
dec
add
dec
cmpsb
popa
jl
mov
mov
push
test
cmpsl
sbb
jnp
mov
les
rclb
cltd
jmp
and
cmpsb
push
int3
data16
int3
or
scas
cmpsl
push
or
and
inc
clc
sbb
mov
pop
add
cmp
or
mov
rcrl
cmp
fdivrs
shrb
stos
jne
dec
push
cld
mov
icebp
rorb
jne
adc
call
push
mov
loop
cld
mov
lods
insl
test
mov
int
in
mov
lock
mov
pop
das
xor
scas
sbb
aas
or
js
xor
mov
xchg
inc
fmull
cwtl
inc
cmp
fstps
mov
mov
xor
scas
daa
inc
and
test
or
je
and
enter
call
xchg
jns
adc
adc
clc
shll
or
jle
mov
xor
mov
pop
or
lods
dec
das
xlat
cmp
hlt
or
ret
dec
aas
mov
jl
push
arpl
ja
clc
shll
jne
or
xchg
xchg
push
push
cli
adc
test
in
push
dec
test
adc
aas
jns
popa
push
lods
imul
mov
leave
daa
xor
and
cmpsl
frstor
xchg
clc
je
out
pop
cli
es
cmp
mov
mov
mov
into
inc
pop
mov
movsl
push
pushf
sub
es
es
xchg
sbb
lcall
mov
lock
push
fsub
cmp
add
insb
sub
stos
fiadds
aas
inc
popa
in
test
xchg
xchg
mov
or
shrl
xchg
notl
sbb
push
inc
add
or
inc
sbbl
repz
mov
sti
std
cli
cltd
lods
lea
fdiv
and
xchg
sbb
sti
inc
out
mov
push
xor
mov
stos
jecxz
fdiv
mov
mov
sub
loope
sub
das
jg
inc
jb
xor
pop
cmp
xor
out
mov
cli
ja
cmpsl
das
or
pop
lods
repz
int3
mov
xchg
data16
lods
adc
test
xchg
sbb
stos
pop
sbb
popf
pop
xchg
or
push
sub
pop
inc
dec
inc
or
jae
and
decb
psubd
pop
lods
data16
add
push
movsl
cmp
aas
dec
lcall
jae
jbe
test
jne
lds
sti
test
sbb
hlt
out
inc
sbb
xchg
and
dec
cmp
jbe
push
sbb
sbb
stos
je
imul
adc
cli
and
popa
aam
lea
xor
mov
pop
daa
inc
repnz
xor
mov
aas
push
dec
into
mov
pop
push
and
push
or
call
adc
and
push
popa
sub
sub
push
add
mov
sti
dec
xchg
and
mov
or
into
and
das
in
aaa
push
dec
pusha
addr16
in
inc
test
std
dec
push
or
mov
sbb
sahf
fucomi
xchg
mov
sahf
push
sub
test
icebp
jl
inc
jle,pt
pop
shrb
jg
in
cli
push
dec
inc
jno
ds
xor
jae
mov
mov
repnz
movsb
xchg
xchg
push
mov
pop
test
sti
cld
inc
mov
jns
shlb
cmp
dec
and
jmp
and
push
fucomi
aad
pushf
push
hlt
cmp
in
mov
repz
pop
xchg
repz
in
sub
js
and
mov
nop
xchg
pop
adc
inc
lds
js
shlb
int
sub
dec
insl
lret
test
ret
jnp
test
cmc
das
sbb
ss
add
ds
loopne
fidivrl
cmc
stos
loope
xor
dec
insl
and
aas
test
fidivrs
mov
cmp
cmp
movsl
cmp
stos
mov
fstpl
repnz
xchg
mov
push
mov
ss
pminsw
fidivs
leave
mov
aad
fldl
jbe
xchg
inc
jo
fdivr
xchg
pop
sub
subb
xor
ja
xor
seto
jns
pop
orb
loope
mov
xlat
sub
mov
outsl
shl
dec
lcall
mov
ret
sti
scas
adc
mov
pop
fwait
push
loop
push
outsb
js
fisttpl
ss
rcrl
not
mov
outsb
or
adcb
mov
dec
rcrb
xchg
sub
or
test
andb
adc
mov
dec
fsts
ljmp
push
mov
sti
call
adc
movsb
fildll
xor
aad
sub
icebp
mov
push
dec
out
popf
lcall
mov
pop
pop
add
cwtl
and
push
xchg
mov
mov
adc
dec
pop
cmp
mov
push
dec
pop
sub
jmp
dec
je
repz
outsl
mov
loope
test
pushf
pop
pop
imulb
inc
out
aam
pop
cmp
imul
lock
nop
pushf
mov
mov
repz
insb
xchg
sub
cmp
push
xor
push
push
aam
and
out
lret
insl
pusha
out
gs
inc
sti
xchg
xor
pop
inc
rcrb
stos
dec
out
inc
xor
push
push
insl
fstl
push
mov
into
das
xchg
xchg
adc
xor
push
push
ljmp
clc
lret
pop
nop
loop
lds
aam
inc
ljmp
or
lods
fisubs
inc
xchg
lcall
aad
and
xchg
push
xchg
in
cwtl
js
rcr
add
adc
bound
xchg
cwtl
dec
in
test
inc
xor
shll
cld
cmc
xchg
dec
loop
inc
push
loopne
lods
out
dec
dec
mov
popa
popf
push
lret
test
cmp
push
loopne
xor
inc
mov
xchg
xchg
xor
popa
cmp
xchg
add
fildl
aam
iret
int3
inc
sbb
xchg
or
push
jg
xor
aad
xorb
lods
push
mov
inc
push
inc
les
enter
pop
stc
jo
mov
mov
push
push
bound
hlt
hlt
xor
cmc
cli
and
add
jns
js
imul
test
dec
test
push
stc
pop
incb
dec
push
inc
mov
xchg
sti
js
xchg
dec
shrl
movsl
test
adc
inc
dec
add
cwtl
sbb
mov
cli
or
in
frstor
shrl
push
fstps
xor
aaa
nop
mov
mov
test
faddl
sbb
bound
add
daa
pop
mov
mov
dec
jp
mov
sub
cmpl
stc
push
shrl
sbb
mov
paddusb
pushf
sbb
sub
cld
mov
xchg
cltd
pop
mov
dec
out
loop
push
push
sbb
in
notb
jne
xor
ret
xchg
and
jo
adc
xor
cwtl
movsl
adc
or
in
stos
lcall
lods
jb
push
xchg
cmpsl
mov
jo
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
pop
adc
cwtl
shr
mov
in
mov
push
xor
fmul
rorl
and
jg
xor
push
xor
cmpsb
sbb
ret
adc
ss
dec
loopne
vzeroall
loopne
sbb
out
leave
mov
in
out
jbe
ja
cmp
fwait
xor
test
sbb
stc
ljmp
outsl
add
adc
test
mov
or
xor
push
and
aas
push
dec
lock
push
std
cmp
sub
inc
adcb
add
inc
repnz
ret
jb
gs
out
fldcw
xor
or
inc
pop
cvtps2pd
xchg
push
xor
xor
imul
push
cmp
mov
jle
cwtl
sbb
lods
push
out
xor
push
sub
cmp
scas
lret
arpl
jmp
rcr
jae
lds
fcmovb
dec
mov
lods
cs
fisttpl
xor
pop
push
or
loop
pop
push
fucomi
inc
and
nop
fstps
adc
lea
xchg
mov
dec
fsubrl
push
mov
enter
scas
lods
nop
int3
pop
lock
adc
push
jmp
and
stc
addr16
dec
lea
in
call
outsl
movsb
gs
mov
mov
jae
cmp
mov
push
iret
mov
aaa
inc
ljmp
mov
rcrl
push
test
add
ss
push
cmp
inc
and
mov
cmc
pop
popa
pop
ljmp
pop
fisttps
adc
xchg
mov
sti
fwait
in
mov
or
ss
push
sub
fbstp
test
les
imul
ss
in
imul
mov
and
cwtl
call
fwait
mov
gs
xchg
out
repz
ds
lcall
sbb
pop
dec
pop
insb
clc
outsl
jle
sar
mov
cmp
push
sub
je
call
jg
sbbb
xchg
data16
add
xchg
sahf
push
in
mov
lds
ljmp
out
jl
imul
pusha
jno
add
scas
fldt
pop
sahf
adc
lret
cmp
cmp
jae
out
mov
mov
sar
inc
dec
negl
js
arpl
data16
fcomi
dec
fs
decb
out
xchg
sbb
lods
fnsave
dec
int
adc
mov
sti
sub
jo
les
mov
shlb
ja
mov
pop
movsb
sub
mov
icebp
loopne
pusha
mov
and
ljmp
cmpsl
cs
push
insl
adc
adc
cmp
jg
fcom
loopne
push
mov
mov
and
or
movsl
lret
jb
fbld
jae
mov
pop
xchg
lods
imul
lret
ds
pop
pop
adc
xchg
jmp
adc
imul
xor
test
jg
cmp
outsl
test
pop
dec
mov
mov
es
pop
jae
adc
shl
verr
xchg
in
cmp
push
xor
daa
sub
mov
cmp
sbb
adc
pop
pusha
ret
cwtl
call
inc
adc
xor
lret
cli
add
pop
and
hlt
test
es
xor
or
mov
mov
mull
addl
xor
jl
dec
sarb
xlat
pop
inc
mov
cmp
cmpsb
cmp
sub
push
in
aam
inc
mov
into
sbbb
sbb
mov
into
ja
ret
lea
int
out
mov
in
cmp
sbb
sbbl
repz
sub
shll
mov
sub
test
mov
pop
into
xchg
shrb
xor
sub
push
xor
mov
push
sub
addl
cmp
jne
loopne
popa
jmp
lods
cmpsb
shlb
jae
add
inc
pop
push
pop
loop
mov
testl
xor
cmpsb
push
xchg
cmp
cli
sarb
dec
and
sbb
sbbl
nop
fwait
js
ret
sbbl
xchg
in
mov
push
adc
or
aam
push
sti
out
shlb
lahf
sub
lcall
lock
movsb
mov
inc
leave
int3
movsl
in
scas
stos
addr16
mov
in
push
adc
int3
loopne
mov
je
push
mov
sub
jge
xor
mov
push
gs
mov
push
dec
scas
call
into
push
jno
jmp
fsts
sbb
mov
push
pop
inc
icebp
jmp
mov
out
cwtd
mov
js
mov
cmp
lea
push
cmp
or
mov
das
xchg
sahf
loop
lods
les
iret
cmpsl
push
inc
iret
pop
mov
enter
insl
cs
iret
mov
in
leave
lret
inc
and
rclb
fs
stos
sbb
dec
xlat
cli
sbb
mov
jecxz
mov
aaa
mov
lods
inc
pop
or
cmp
lock
cmp
push
or
jmp
push
inc
ret
subl
in
mov
imul
lods
mov
iret
sub
loopne
fisttps
adc
ret
loope
adc
jnp
es
repnz
pop
lcall
popf
jne
test
sbb
xor
out
mov
or
mov
test
das
shll
pop
add
pop
mov
xor
or
cmp
aad
push
cmpl
cltd
adc
inc
fisttps
ja
ret
mov
mov
add
pop
pop
add
push
ret
mov
imul
xor
jae
shl
into
js
enter
iret
into
inc
push
xchg
mov
sbb
mov
insl
shll
adcl
rolb
fs
loopne
sub
lods
mov
clc
push
jp
inc
xchg
ljmp
jmp
insl
aam
fldl
mov
adc
cld
pminsw
inc
dec
loopne
adc
fidivs
shll
and
mov
lods
in
mov
sub
pop
mov
mov
fldcw
int
push
testb
xor
cld
xor
enter
das
outsb
push
in
cmp
mov
cltd
lcall
or
dec
lds
leave
test
sar
inc
scas
pushf
xor
mov
cmp
add
leave
inc
mov
adc
mov
outsl
cmc
sub
mov
inc
repnz
jbe
xchg
pusha
fiadds
sbb
shll
ret
out
arpl
movl
into
push
scas
xchg
orl
pusha
inc
int3
push
adc
mov
aam
mov
lds
xchg
mov
add
add
cmpsb
pop
cs
inc
shlb
cmp
mov
es
pushf
cmpsb
mov
or
cmp
inc
sahf
xchg
or
inc
enter
cmp
mov
rclb
loopne
xchg
ljmp
xchg
mov
pop
in
jnp
inc
fyl2x
jmp
mov
cwtl
push
lahf
xchg
xchg
sbb
pop
inc
sub
mov
sbb
pop
les
cli
mov
lahf
aas
fs
stc
and
popa
lret
xor
out
cs
bound
adc
repz
add
cltd
push
lods
iret
lds
add
sub
and
filds
cwtl
repz
and
stc
fstl
inc
sub
dec
fsubrs
sar
movsl
jg
pop
mov
jae
add
int
out
mov
xor
add
pop
sub
push
cmc
fidivrs
sti
adc
push
xchg
rolb
cmp
dec
sahf
js
jl
pop
aas
adc
sti
jo
pop
fwait
or
mov
sub
movsb
imul
icebp
adc
mov
leave
cli
mov
mov
roll
mov
pop
or
xchg
dec
or
jns
mov
lahf
lds
sar
roll
xorb
adc
neg
scas
sbb
adc
ret
nop
mov
pop
jp
popf
jnp
push
mov
inc
nop
imul
push
lret
inc
popa
fsubp
addr16
cmpsl
jp
push
or
push
dec
jnp
sub
cmp
mov
enter
push
ja
or
fidivrl
std
repz
inc
das
push
push
add
out
push
adc
popf
add
das
loop
ror
jl
push
push
or
loop
lock
lods
insl
test
or
jle
lods
mov
inc
xchg
inc
pusha
lds
sub
and
add
push
push
cmc
fnstcw
push
mov
mov
and
xchg
in
and
xchg
popf
fsts
xchg
loop
push
push
add
push
sahf
dec
pop
shlb
inc
ds
shl
das
xor
mov
addr16
or
mov
aaa
and
popa
sub
int
dec
fsubs
fisttps
inc
push
in
cwtl
add
in
mov
xor
jle
jg
add
dec
das
pop
and
cmp
xchg
dec
jge
mov
inc
adc
cmp
and
outsl
mov
push
jae
push
int
imul
in
ds
cltd
mov
cmp
clc
mov
insb
adc
pop
and
push
push
arpl
iret
ja
lods
imul
xor
js
outsb
mov
fisubrl
movsb
cmp
sbb
sbb
inc
push
ds
lret
rclb
xchg
mov
xchg
sbb
decb
fidivrl
sub
add
or
push
clc
cmpsl
xchg
sub
lcall
stos
loop
rolb
add
cmc
stc
add
push
lret
loopne
ljmp
dec
inc
aam
popf
push
aaa
adc
mov
pusha
inc
jae
xor
inc
rolb
sahf
pop
sbb
pushf
xchg
push
enter
outsl
loopne
or
call
lods
jnp
cmp
and
pop
xor
jmp
jl
test
loop
xchg
dec
or
mov
dec
dec
xchg
cli
aaa
aad
ss
sahf
mov
out
inc
cld
pop
popf
imul
filds
cmp
roll
sbb
add
stos
xchg
cs
aaa
loop
inc
adc
mov
popf
push
push
or
mov
jl
mov
mov
inc
mov
jge
cs
shrl
and
lahf
dec
push
push
cmp
popa
cltd
and
ror
sbb
int3
daa
xchg
cltd
enter
pop
gs
subl
and
pop
push
aad
aas
xchg
jp
mov
scas
dec
mov
sub
rcrb
or
ret
mov
sub
push
jg
sbb
scas
in
or
mov
in
out
xor
adcl
add
adc
loop
dec
fcoms
fs
jb
out
into
outsb
dec
mov
cmp
cmc
xchg
sub
sub
add
xchg
inc
stos
sarb
fadd
sbb
popf
add
aam
std
addr16
mov
dec
pop
fisubrs
mov
mov
push
dec
cwtl
pop
testl
std
imul
aaa
lds
or
int
mov
mov
jge
xchg
dec
mov
mov
cmp
mov
mov
sbb
rcr
into
sbbl
std
push
outsb
sahf
fistl
adc
sbb
arpl
jnp
test
push
cld
jmp
imul
inc
aaa
inc
mov
xor
jl
roll
mov
mov
iret
sahf
fcmovnu
jge
jns
andb
mov
cli
or
mov
cmp
mov
scas
jne
arpl
mov
mov
je
cltd
out
and
mov
je
jo
sahf
push
or
mov
jecxz
les
mov
mov
mov
aas
shll
enter
sub
jp
mov
push
leave
lock
daa
sarb
enter
cmp
sub
fs
pop
push
pop
push
push
fisttpll
jmp
jns
jecxz
push
add
or
mov
adc
pop
cltd
inc
lods
sub
pushf
ljmp
push
xchg
rcrb
inc
call
fldcw
inc
add
push
or
mov
filds
repnz
jne
or
loope
xor
sbb
pop
sub
ret
pop
dec
jno
mov
mov
std
sbb
mov
adc
imul
push
cvtdq2ps
pop
ds
pop
add
in
dec
dec
push
sbb
sub
aam
mov
pop
and
cs
addb
push
out
xchg
xor
pop
sahf
sbb
xor
aaa
aaa
pop
popf
insl
push
mov
je
cmp
sub
test
mov
sub
dec
jns
xor
fldl
dec
stos
add
jno
inc
jo
popf
or
xorb
jnp
add
cmp
push
xchg
push
mov
mov
mov
mov
mov
pop
jnp
xor
adc
xor
stos
sbb
jns
push
push
sub
into
mov
mov
fldcw
sub
cmp
push
out
jge
pop
std
xlat
push
fs
daa
testl
enter
jg
jmp
adc
add
out
in
stc
aas
mov
leave
add
scas
push
lcall
sarl
fimull
loope
cmp
sarb
enter
lcall
xchg
sbbb
enter
jno
xchg
jne
and
loope
mov
push
mov
testl
nop
shr
mov
add
test
call
pop
mov
addl
cmp
dec
mov
xor
aas
mov
flds
pop
push
mov
rcrl
out
push
stos
lcall
movsb
xchg
dec
addl
inc
mov
pop
shrb
mov
adcl
inc
pop
repz
mov
pop
and
cli
adc
jl
pop
xchg
clc
and
fdivrs
std
insl
out
inc
add
adc
sub
dec
mov
push
xor
xchg
xor
aas
mov
addl
imul
mov
fsubl
lahf
adc
ja
scas
imul
dec
mov
pushf
jns
mov
in
dec
test
inc
cmc
mov
mov
adc
outsb
mov
or
scas
cmpsl
mov
xchg
xchg
cmpsl
xchg
test
das
aad
add
inc
in
xchg
rorb
insb
jb
mov
push
hlt
xor
lea
gs
in
push
xchg
daa
xor
lcall
ljmp
ds
fldt
sub
enter
pusha
in
pop
xor
ret
push
lods
and
mov
scas
add
jo
lahf
sahf
sahf
jo
ret
scas
push
popf
clc
outsb
fstl
xchg
mov
aas
add
jmp
pop
xor
btr
xchg
mov
imul
out
or
mov
xor
leave
push
lds
cli
inc
mov
sub
out
int3
call
aam
cli
and
xchg
hlt
ds
pop
mov
jnp
jmp
loope
xor
imul
or
dec
test
repz
pushf
insl
mov
fcomi
pop
mov
jne
jmp
push
xchg
sbb
mov
push
fs
les
aam
scas
pop
ret
subl
subps
dec
jmp
jb
mov
xchg
jecxz
cmp
mull
dec
sub
xor
out
daa
xor
daa
cmp
jg
lods
mov
mov
shr
mov
mov
test
ljmp
inc
xor
cmc
push
xor
sub
movsl
shlb
aas
cmp
fnstsw
cld
push
sbb
mov
lea
fsubl
adc
sahf
enter
push
loopne
pop
mov
pop
xrelease
jae
pop
mov
push
mov
js
js
out
mov
outsl
xor
mov
dec
arpl
mov
pop
sbb
cmp
fldcw
pop
mov
int
xchg
cmp
cmc
imul
fiaddl
and
sti
gs
pusha
mov
fcomi
imul
aaa
pop
push
mov
and
enter
scas
mov
pop
mov
mov
insb
or
pop
flds
and
cmp
push
mov
and
cmp
repnz
or
xor
sbb
or
jmp
repnz
pop
std
pop
out
ja
cmpsl
mov
shlb
mov
sbb
cmp
push
mov
hlt
or
jbe
lret
aas
push
imul
cmpsl
push
sbb
sbb
push
mov
or
adc
cmp
cmp
outsl
ja
aad
loopne
sub
and
sbb
jp
and
scas
mov
and
dec
ja
xchg
pop
clc
out
jno
or
jne
sbb
and
push
pop
dec
or
xor
aad
mov
in
pop
iret
or
lock
inc
pop
test
xchg
in
mov
loope
mov
insl
adc
xor
mov
mov
mov
cmp
xchg
xor
jne
sub
bnd
and
outsl
aaa
mov
lds
pop
add
mov
fwait
jno
mov
pop
aad
outsb
jge
inc
push
xchg
xchg
jmp
insl
adc
mov
inc
xor
push
adc
xchg
popf
addr16
push
lret
jae
stos
push
mov
in
sbb
movups
mov
pop
and
sub
mul
xchg
call
push
xchg
fwait
rolb
ror
push
xorl
inc
insl
test
jnp
inc
cmpsl
in
lret
and
push
lds
rorb
dec
mov
mov
test
mov
mov
ljmp
rcrb
jns
adc
xor
stos
cmpl
xor
out
xor
out
pushf
mov
jmp
cmc
mov
jg
dec
jbe
sti
push
jg
fwait
jne
cmp
push
das
hlt
int
test
pop
aad
ret
lea
int3
xor
stc
dec
pop
add
sahf
pop
adcb
jbe
adc
insb
push
mov
push
fadds
pusha
shlb
divl
mov
test
adc
les
lock
adc
xlat
fimuls
mov
mov
icebp
xor
loop
std
mov
mov
fprem
mov
or
int3
sub
loopew
dec
lods
lods
or
mov
mov
mov
cmp
dec
shrb
imull
jle
mov
out
adc
test
xor
jnp
out
icebp
lds
mov
cmp
outsl
mov
sti
push
lret
roll
data16
mov
fdivrl
push
sub
fnstsw
in
out
lahf
jle
jns
sub
dec
ret
rorb
aas
mov
sbb
mov
sbb
test
or
pop
add
sbb
shll
cli
fwait
mov
or
stos
ljmp
lcall
test
loope
jne
les
lock
xchg
ds
test
cmpsb
mov
lahf
aad
jecxz
xlat
out
clc
pop
ret
loop
add
aad
ret
and
jae
jo
shll
add
adc
xorl
sbb
inc
push
or
push
sahf
sahf
lods
hlt
xchg
mov
push
jne
dec
xor
inc
pop
adc
push
mov
fwait
dec
jg
jne
cltd
xlat
ret
sbb
inc
and
stc
add
data16
cmpsb
mov
jns
dec
xchg
xlat
or
push
inc
ret
add
mov
sub
xchg
lahf
enter
fwait
jge
dec
mov
fsubl
pop
jns
out
jo
sbb
push
and
sbb
adc
ret
cli
and
sub
ficoms
ror
hlt
in
cli
sub
sbb
rcl
in
lock
in
das
adc
movntq
pop
mov
dec
sahf
outsb
jo
add
or
sub
aad
adc
mov
not
clc
adc
cmp
insl
les
xor
into
cmc
in
xchg
or
ljmp
scas
rcl
jge
cltd
roll
clc
lret
les
pop
mov
int3
mov
clc
push
pop
xchg
bound
rol
je
decb
ret
mov
jecxz
ss
mov
sti
cmp
andl
popf
nop
pusha
add
clc
movsb
xchg
dec
or
addr16
adc
cmp
hlt
cmp
mov
mov
xchg
ficoml
hlt
nop
filds
popf
out
iret
xchg
mov
push
mov
lcall
nop
xor
cltd
xchg
sub
dec
pop
add
pop
add
dec
and
mov
icebp
inc
js
sbb
sbb
cmp
js
cmpsl
xchg
faddp
scas
inc
popa
pop
sbb
out
shl
mov
add
ss
and
sbb
out
aad
call
cmp
jl
outsb
lcall
stc
leave
test
sbb
jae
daa
xor
js
cmp
repz
push
out
sahf
ja
int3
add
sbb
test
cmp
pop
leave
stos
out
sbb
mov
push
jno
js
jge
mov
add
jp
shrb
sub
mov
aas
or
pop
inc
pop
pop
jge
call
das
or
mov
mov
lds
outsb
mov
arpl
aam
cmpsl
sub
ret
mov
fdivrs
and
jl
pop
mov
adc
lock
ljmp
sbb
pop
pop
dec
ds
add
shll
cmpsb
push
pusha
das
push
or
insb
std
jno
popa
xlat
enter
sti
adc
cwtl
xor
jg
adc
mov
in
popf
xchg
xor
mov
xor
shrl
mov
jae
daa
lock
or
pop
dec
test
mov
sbb
mov
mov
mov
pop
pop
cltd
xchg
outsl
rcrl
or
sub
inc
loop
pop
clc
inc
inc
pop
test
xor
in
shl
stc
adc
and
outsb
jl
mov
shll
xor
popf
mov
push
test
adc
daa
mov
cs
ret
adc
mov
arpl
cltd
jle
fdivr
lcall
xor
mov
mov
cmp
cmp
jne
insl
ret
fsubs
xor
xor
jnp
cltd
or
out
jle
scas
inc
mov
lds
cmpsl
mov
xor
lock
dec
popf
lcall
imul
mov
add
andl
je
shrb
addr16
movsb
icebp
cmp
jbe
dec
das
cli
push
cmpsl
jecxz
fnstcw
cmp
imul
jno
roll
lcall
clc
ss
pop
daa
mov
shrl
mov
add
sbb
rorl
mov
sbb
add
andb
push
icebp
mov
mov
cmpsb
jg
jbe
fbld
dec
xor
cmpsl
sbbb
idiv
adc
insb
pop
rcrl
ljmp
xlat
test
loopne
jb
adc
jecxz
mov
sysexit
aaa
movsb
in
stc
test
mov
and
sbb
jae
das
js
dec
aad
pop
rolb
pop
movsb
imul
pop
mov
adc
pop
or
in
sbb
pop
mov
aad
push
sbb
in
insl
sbb
call
ss
and
jge
jge
addr16
popf
and
jle
aad
movsb
jo
and
js
mov
mov
fsubs
cmp
mov
adc
dec
pop
and
mov
outsb
insb
cmp
cmpsb
pop
lock
fwait
and
cld
sar
fcoml
or
shrb
leave
insl
ds
movsb
lcall
imul
sbb
daa
in
loope
int
int
jae
pushf
add
jb
mov
cmp
and
xor
push
and
shll
fistpll
push
push
jecxz
stc
addl
push
or
and
repnz
cmpsl
cli
jg
pop
mov
dec
sbbb
mov
fistpl
std
bound
pop
inc
test
repz
pushf
xorl
cmpl
mov
scas
fisubrl
mov
ds
mov
dec
or
sub
rcll
pop
xor
lods
mov
mov
dec
out
jns
jbe
or
and
sub
inc
lret
dec
inc
xchg
fstpl
cs
xchg
sub
mov
or
and
pop
fs
mov
sbb
mov
loope
adc
push
sub
pop
push
xchg
test
dec
popa
jecxz
push
repnz
mov
in
jmp
jne
jnp
dec
mov
sub
pop
ret
mov
gs
cmp
mov
lods
xor
sub
sub
jbe
jno
arpl
enter
pushf
and
test
pop
push
xchg
xchg
jmp
nop
pusha
xchg
decl
stc
decb
shlb
xchg
mov
jmp
fs
xlat
sub
pushf
stos
sub
jle
shlb
int3
xchg
arpl
sub
add
jp
add
push
lret
and
adc
add
mov
mov
jg
repz
jp
and
loopne
incb
in
jns
lock
das
xchg
jmp
movsb
iret
inc
inc
hlt
ret
cs
ljmp
hlt
jne
cmp
sub
push
xchg
inc
add
cmp
ja
push
and
cli
jno
jmp
int
ds
cmp
andb
loopne
xlat
out
test
cmp
sbb
fs
push
data16
adc
xchg
repz
push
mov
inc
inc
sub
dec
aas
push
xor
out
adc
call
int
mov
inc
sbb
into
aad
dec
lcall
imul
mov
sub
leave
jno
mov
push
adc
or
xchg
ljmp
inc
fadd
push
out
int3
mov
xor
pop
fcmovbe
je
test
lret
mov
mov
ficoml
pop
mov
cs
sbb
out
mov
out
cmp
jne
fwait
repz
mov
scas
ret
sub
repz
mov
xor
fs
adc
push
lret
xchg
push
mov
add
or
clc
mov
pop
or
push
adc
or
out
sbb
lock
cwtl
mov
mov
fwait
push
sbb
add
rorb
jge
add
xchg
mov
xchg
std
xchg
fs
movsb
or
imul
aas
jns
pop
lcall
dec
sub
fcoml
push
movsb
mov
rorl
cmp
shlb
mov
cli
scas
in
push
fwait
mov
daa
add
pop
jne,pn
adc
and
mov
out
movl
ss
xor
sbb
repz
jmp
movsl
cmc
sub
sbb
mov
xchg
push
push
repz
jno
mov
cld
mov
add
jg
arpl
dec
test
mov
loop
fcoml
nop
sbb
pop
mov
push
xchg
mov
push
inc
test
and
cltd
fcomi
pop
js
imull
popf
ljmp
outsb
shll
out
cmp
mov
mov
mov
in
or
sahf
cmpsl
lret
sbb
maskmovq
notl
push
dec
scas
mov
stos
push
mov
jmp
int3
sub
popa
or
pop
xor
or
jno
mov
sbb
jl
imul
addr16
sub
stc
mov
cmp
xor
insb
add
pop
inc
xchg
shrb
push
testb
popa
mov
jecxz
jg
inc
mov
mov
leave
jbe
xchg
je
jmp
sbb
dec
and
jno
jnp
xlat
ja
rclb
sbb
sarb
push
sub
out
in
stos
sbb
rcl
scas
in
push
mov
les
subb
push
enter
jp
inc
sub
adc
icebp
dec
insl
xorl
inc
inc
sbb
add
icebp
outsl
pop
or
mov
push
inc
or
call
into
sahf
popf
negl
pop
notl
mov
ret
clc
ljmp
sbb
ret
mov
mov
jl
jle
pop
xchg
pop
xlat
or
imul
mov
jle
mov
pop
xor
mov
icebp
cltd
push
push
test
dec
sbb
pop
orb
xor
inc
or
sub
dec
or
sbb
in
cmp
xchg
xchg
nop
outsl
idivl
in
sub
xor
jle
stc
movsl
or
push
imul
xorl
and
and
mov
ja
out
in
push
scas
fiaddl
icebp
xlat
movsl
mov
call
sbb
xor
or
adc
jecxz
rol
adc
mov
push
mov
scas
sub
mov
xlat
adc
popa
push
das
out
mov
out
sub
pop
sbb
lods
jmp
divl
push
jmp
shrb
insl
or
test
fdivrs
inc
jb
int
sub
and
sbb
ss
dec
jns
push
lods
mov
pop
popa
sbb
cmp
sub
pop
test
repnz
cltd
out
lds
jp,pt
jne
mov
pusha
ret
mov
sbb
xchg
clc
pop
jecxz
adc
jecxz
push
out
sbb
in
hlt
mulb
pusha
dec
fistpll
scas
inc
test
cwtl
cld
cld
repz
push
mov
fucomp
mov
inc
lret
mov
pop
xchg
dec
fs
jb
mov
mov
addl
das
jne
and
inc
or
data16
adc
cmp
or
sub
or
stos
or
fldenv
mov
pushf
mov
push
mov
sbbb
mov
movsb
xchg
sar
cmpsb
mov
or
cmc
cmp
push
scas
icebp
sbb
xchg
insl
mov
outsb
push
popa
loope
pop
lds
lret
adc
fs
push
outsb
sbbl
jmp
loope
cmp
lds
mov
jo
sub
je
or
or
inc
jne
mov
jne
mov
dec
adc
push
pop
jle
std
push
nop
movsb
les
sahf
imul
rcrb
adc
popf
adc
mov
std
mov
jns
xor
jno
push
dec
or
int
sti
adc
test
cs
dec
cmpsb
cwtl
sahf
iret
pop
js
gs
jg
xor
in
push
mulb
mov
inc
xchg
sbb
pushf
jno
mov
xchg
test
cmp
or
pushf
sahf
cmc
and
ss
movsb
add
lret
jg
lcall
aad
pop
xor
xlat
mov
jne
sbb
mov
add
mov
popf
cmp
in
test
divb
sbb
sysret
mov
sub
push
imul
in
into
nop
mov
dec
cmp
jbe
add
mov
sbb
lahf
les
out
push
push
pop
jbe
mov
sbb
repz
mov
je
scas
xchg
pusha
in
mov
sbb
imul
adc
add
ficoml
cmp
pusha
out
push
adc
sbb
int
xchg
loop
enter
mov
test
scas
and
repz
faddl
mov
test
sbb
jecxz
loop
daa
lret
test
repnz
xor
mov
xor
fst
pop
push
jae
mov
cld
push
add
lret
inc
nop
std
lods
pop
xchg
xchg
xchg
fmuls
sar
inc
pop
scas
sbb
test
aad
test
js
mov
mov
or
add
adc
pop
push
dec
xor
push
rol
mov
out
in
add
inc
aad
rolb
jne
jl
rol
mov
xor
imul
xor
ds
rclb
fcompl
ja
roll
inc
shll
out
jnp
mov
ja
adc
mov
addr16
jge
repz
inc
adc
fwait
gs
or
movsb
inc
push
test
sbb
xchg
fldz
ljmp
add
or
andb
add
loope
inc
into
mov
jb
mov
push
dec
xchg
cmp
mov
push
test
sti
inc
les
push
add
sub
mov
xchg
mov
in
dec
cmc
pop
mov
dec
or
pop
out
pop
mov
dec
mov
adc
inc
cli
movsb
in
adc
sub
js
jno
mov
or
sub
and
ficoms
or
jo
fs
cwtl
xchg
mov
cltd
jmp
mov
adc
jg
mov
clc
adc
dec
push
testl
or
fimuls
seta
push
pop
jle
movsl
mov
jne
or
or
shrl
jg
aas
lcall
outsb
pop
or
xor
and
inc
cmp
push
fisubrs
cmpsl
cwtl
call
mov
sti
mov
adc
dec
roll
and
adc
add
mov
push
adc
sub
dec
ja
sbb
lods
push
imul
mov
clc
xchg
adcl
ficomps
and
mov
push
int
sub
xor
jne
inc
fists
dec
jae
mov
in
jmp
pop
clc
orb
pop
mov
mov
ss
push
js
fstp
dec
aas
and
pop
popw
pop
cmp
mov
push
rorb
jns
mov
out
and
inc
jne
cmp
sbb
out
fstpl
jne
jne
jo
je
and
ss
in
add
jae
jns
lahf
int3
call
aas
mov
in
sti
insl
lahf
xchg
in
adc
mov
addr16
mov
fsubp
popa
outsl
xorl
xchg
test
or
or
mov
stos
fldenv
adc
and
idiv
jge
mov
repz
cmp
jne
mov
adc
stos
lcall
mov
push
cld
in
mov
aam
das
jno
xchg
jmp
xchg
jno
inc
addr16
sahf
imul
inc
data16
adc
stos
pop
push
inc
pop
orl
push
fisttpll
movsb
int
pop
sbb
in
jl
movsb
fnstsw
add
xor
lods
mov
sbb
lret
pop
cmp
cwtl
cltd
stc
ss
fs
add
mov
xorb
dec
inc
sub
stos
lock
leave
stos
jmp
jle
add
ds
inc
pop
jg
scas
movsb
dec
inc
lock
pop
xor
xor
shrl
sbb
cmpb
sub
or
daa
jg
cmp
pop
ja
mov
push
lcall
sub
sub
sahf
and
sbb
fstps
mov
inc
sbbb
inc
out
inc
pop
mov
inc
mov
cli
ds
and
rclb
cs
js
lahf
or
insl
iret
insl
push
sub
dec
int
xchg
mov
push
xacquire
inc
je
mov
or
into
dec
mov
pop
and
repnz
pop
adc
aas
stc
jbe
jl
test
sub
xorb
aas
scas
or
cs
pop
lods
in
adc
jo
mov
pop
push
nop
cmp
aaa
xor
sbb
cmp
pop
ja
out
inc
xor
roll
cmp
jp
xchg
stos
pop
repnz
adc
stos
mov
cmp
fcomi
shrl
fcoms
xor
pop
mov
jmp
outsl
mov
xor
xchg
add
cmp
pop
jne
clc
sahf
jae
jne
xorl
sub
pop
dec
bound
or
shl
xchg
jnp
icebp
mov
into
cmp
not
pusha
dec
xchg
sub
into
dec
or
leave
cmp
jge
mov
or
dec
push
icebp
inc
std
aas
in
sub
lcall
push
inc
fisttps
out
jmp
in
fidivl
decb
ljmp
cmc
cmp
xor
sub
mov
xchg
cld
jo
dec
pop
fst
jb
call
sahf
loope
mov
cmpsl
cmp
or
rolb
mov
push
add
nop
fcoms
adc
push
loop
ja
inc
pop
dec
out
fldenv
cmp
and
pop
lds
jno
leave
sbb
mov
gs
mov
pop
sbb
add
gs
pop
fidivrl
fdivl
push
adc
lea
call
sbb
inc
mov
cmpsl
sbb
insb
ds
ret
aas
lahf
dec
fbld
test
dec
ja
pop
insb
adc
fistpl
fsubs
add
jns
sbb
dec
adc
fmuls
hlt
fld
lods
outsb
js
sub
mov
aaa
cmpb
mov
or
pop
shr
mov
int
add
insl
rol
mov
cmp
jg
imul
or
and
sbb
mov
mov
sbb
sbb
inc
nop
push
and
jle
or
jmp
cwtl
enter
xchg
shll
xor
sub
inc
jge
mov
scas
loopne
in
repz
je
pop
sub
sub
js
or
jle
leave
cltd
or
cmp
fldl
rolb
and
mov
dec
xor
bound
sbb
enter
sarb
dec
ret
sbb
fldl
push
mov
aaa
or
outsl
daa
enter
mov
mov
push
das
sub
sbb
sbb
out
or
sbb
std
mov
lcall
push
pop
sbb
jne
or
hlt
sbb
sub
or
call
push
popf
xor
and
fisubrl
jecxz
pop
push
push
sub
jns
test
in
aad
fcomps
sbb
mov
or
std
jno
xor
divl
mov
in
ja
jae
es
xchg
cmpsb
lret
dec
pop
je
in
iret
add
adc
mov
movsb
and
dec
push
ret
jno
adcl
shll
andb
fcompp
push
aad
xchg
aam
fstl
mov
aam
repnz
clc
mov
or
mov
mov
loopne
enter
dec
scas
pop
aam
iret
mov
cs
sar
test
lahf
mov
add
sbb
jno
call
pop
dec
test
mov
or
mov
or
pop
lock
mov
pushf
lahf
daa
xor
add
push
dec
les
hlt
scas
or
lods
push
push
fsubs
data16
mov
int3
clc
xor
daa
cmp
loope
fwait
loope
in
lcall
cmp
aas
dec
pop
das
jbe
mov
scas
pop
outsl
and
jno
xor
sti
leave
cmp
mov
and
nop
aam
xor
xcrypt-cbc
cmpsl
push
cmp
pop
push
test
fisubs
out
ja
mov
sbb
jb
add
lods
or
pop
mov
sub
bound
xchg
jns
loopne
dec
push
inc
xlat
pop
fdiv
inc
pop
sahf
mov
add
dec
rorl
sub
pop
aam
fidivl
imul
ret
mov
dec
xchg
arpl
aas
push
pusha
cld
and
pop
out
sbb
push
insl
add
sub
outsl
ja
les
pop
test
adc
cmp
push
mov
pop
push
sbb
call
push
lods
push
adc
add
mov
not
addr16
scas
jne
adcb
subb
ds
dec
fistl
pop
push
push
ds
dec
cmp
add
and
sub
mov
xchg
ret
mov
push
sarl
fcomps
and
jae
movsb
fidivs
insb
loope
lods
inc
scas
popf
rcrb
mov
pop
xchg
jnp
mov
xor
jg
sub
xor
add
dec
inc
leave
push
frstor
adc
or
sbb
orb
roll
xchg
subl
lock
aam
js
jno
out
stc
cmc
test
mov
iret
push
fwait
push
lcall
inc
into
mov
inc
sub
fistpl
push
jnp
or
pop
cmpsl
or
repz
fstpt
or
ja
mov
dec
push
xor
cmpsl
sahf
jecxz
mov
out
filds
cmp
add
add
pop
fmull
lahf
movsl
dec
lea
adc
add
int
push
imul
xchg
movl
in
inc
ljmp
out
loop
sbb
mov
dec
cmpxchg
push
xchg
lahf
gs
push
pop
dec
repz
popf
inc
or
mov
xchg
sub
pusha
or
lock
sbb
jmp
mov
add
aam
jle
repz
push
das
xor
cmpsb
jnp
je
xchg
mov
xor
push
pusha
les
cmp
add
dec
js
sbb
pop
add
es
movsl
out
sbb
js
add
idivl
sub
jp
pop
aaa
movsl
jae
loopne
mov
out
xchg
jge
xchg
scas
inc
pop
add
loop
pop
jle
mov
xor
and
sete
or
out
mov
jb
and
mov
inc
pop
sub
cmp
fcmovnb
or
fwait
cmp
mov
add
adc
movb
and
mov
jae
lea
cmp
adc
sbb
popf
in
pop
mov
inc
pop
cltd
out
jo
leave
in
xorb
movl
cmc
nop
sub
out
cmpsl
pop
xor
js
dec
mov
push
movsl
cwtl
sbb
push
xchg
push
or
movsl
xchg
aam
jno
xchg
inc
push
pop
mov
clc
dec
popf
fsub
and
bound
xor
add
push
inc
test
inc
out
jmp
sub
stos
icebp
in
fwait
sub
hlt
or
or
pop
cmp
jl
stos
cmp
filds
jbe
inc
fistpl
fwait
ds
jecxz
xchg
push
insl
fsub
sbb
lea
mov
sbb
sub
lret
les
pop
sub
push
mov
arpl
pop
and
push
pop
outsb
cld
stos
pop
jle
jno
and
mov
xchg
scas
les
push
fiaddl
into
lods
lods
sti
loope
addl
fimuls
push
adc
mov
in
sti
rcrl
jge
inc
loop
ss
and
and
and
xchg
clc
repz
add
cmp
and
xor
pop
test
cmp
lods
mov
in
mov
dec
xchg
mov
movsl
push
pusha
addr16
fldt
call
pop
jnp
jp
clc
adc
cld
adc
mov
pop
push
scas
sti
std
outsb
or
cli
bound
add
cwtl
and
out
sti
popf
rorb
push
inc
aas
popw
sbb
sub
and
dec
call
lea
mov
stos
push
mov
das
ss
jp
sbb
repnz
push
in
xchg
pop
sub
popa
and
add
and
stos
xor
ret
mov
out
xchg
cmp
mov
inc
jns
jle
bswap
add
pushf
sbb
mov
aas
or
std
sub
push
mov
jl
jae
dec
jecxz
lret
push
repz
imul
mov
pusha
inc
test
pop
aaa
and
xor
call
ret
stos
cmp
push
test
jnp
add
jg
xor
sbb
xchg
adc
in
test
lods
mov
fmuls
push
and
xchg
cs
je
mov
lds
ja
out
xor
inc
shrl
add
ljmp
mov
mov
lcall
or
nop
sbb
mov
push
dec
push
or
lods
push
push
and
test
jae
xchg
cmp
inc
xor
pop
inc
ds
in
add
jle
jae
jae
xchg
into
adc
xor
popa
push
cmp
pop
push
mov
icebp
mov
dec
orb
stos
test
jp
jnp
push
sub
xor
or
sub
mov
and
shll
ret
push
lahf
xchg
pop
mov
xchg
xchg
xor
pop
nop
fwait
sbb
mov
cmp
cmp
je
hlt
and
fcmovu
jns
xchg
dec
test
sarb
mov
jno
xchg
out
jmp
shrd
in
add
loopne
and
mull
mov
ficoms
mov
xchg
push
mov
movsb
addr16
push
mov
add
in
and
mov
sbbl
fwait
mov
jae
repz
jmp
adc
dec
jne
xchg
and
xor
mov
clc
insl
jle
jbe
popa
push
sub
rcrl
lods
test
and
out
pop
jge
mov
cmpsl
xor
cld
arpl
stc
dec
adc
and
mov
repz
out
enter
dec
mov
in
add
ret
inc
sbb
mov
push
and
and
mov
cs
imull
adc
inc
dec
mov
pusha
push
dec
sarl
or
mov
push
fisubs
cmp
mov
mov
cmc
push
lret
cli
movsb
fimull
fs
pushf
xchg
pop
push
call
sub
add
add
pop
mov
jnp
jno
inc
or
push
out
mov
fcmovbe
xchg
insb
xchg
inc
add
push
push
pop
push
xor
scas
mov
mov
cs
cmp
lods
bound
repz
mov
mov
lret
sbb
movsb
scas
ljmp
sub
inc
test
mov
jne
mov
nop
into
xchg
dec
fildll
decl
leave
add
and
sahf
cmp
xchg
mov
fists
or
scas
popa
cltd
insl
dec
clc
inc
adc
mov
dec
mov
mov
out
jl
push
mov
dec
sub
inc
pop
iret
mov
push
fists
cmpsb
fsubp
daa
add
add
add
filds
cmp
xlat
lods
sub
push
xor
imul
jmp
adc
ficompl
push
icebp
xchg
mov
lods
sti
sti
into
push
mov
xchg
movsbl
movsb
out
imul
xor
and
movsb
xor
xchg
out
addl
adc
mulb
inc
test
negb
and
mov
dec
mov
jg
pop
scas
out
push
aaa
fildl
movsb
in
cmp
arpl
mov
cmpsb
and
or
xor
add
lret
scas
rorl
stc
mov
jecxz
or
jecxz
push
cmp
add
imul
jmp
aaa
insl
xchg
inc
loope
clc
rcrb
sti
and
mov
jno
jno
mov
push
mov
jle
cld
js
es
stc
data16
dec
leave
popa
cld
cmpsb
ficoml
adc
stos
stos
arpl
dec
push
and
push
sbb
leave
xchg
jp
or
sub
jno
xchg
mov
je
std
mov
dec
sub
xchg
sti
adc
mov
imul
mov
mov
dec
pop
sbb
dec
divl
jne
js
mov
cmc
mov
scas
loopne
scas
push
mov
mov
cmp
imul
movsb
popf
fsubs
jge
leave
mov
dec
jge
push
cmp
or
xchg
jbe
cli
inc
or
test
and
add
fwait
adc
xor
lods
cmp
dec
jb
cmpl
cs
jns
fdivl
cmpsl
test
xor
test
sub
add
mov
xor
push
mov
inc
std
lahf
push
mov
dec
jo
movsl
xchg
or
enter
cmpsb
lahf
das
push
arpl
xchg
push
in
adc
adc
mov
adc
mov
subb
push
hlt
daa
add
mov
pop
pop
cmpb
cmp
mov
insb
and
test
push
out
je
in
lods
mov
xchg
adcb
ds
bnd
outsb
test
pusha
xchg
inc
xchg
push
rcl
mov
ds
je
push
sti
ret
jne
repnz
in
subb
ss
mov
sbb
scas
dec
stc
add
pusha
mov
mov
fisubs
das
xchg
lods
push
setno
in
mov
jg
add
loope
fildll
cmp
add
jecxz
fisubrl
mov
call
lods
aam
push
pop
inc
std
call
loopne
stos
mov
adc
sub
cmp
sub
push
aam
inc
out
and
push
or
ds
inc
pusha
mov
pop
xor
ret
test
or
sbb
jns
xor
loope
pushl
jnp
iret
mov
outsb
mov
adc
in
imul
mov
dec
mov
fwait
insb
aam
aaa
loop
pushf
push
out
adc
inc
leave
test
xor
or
inc
add
test
sbb
lret
jne
aad
cmp
push
stc
inc
fdiv
xorl
lds
lds
mov
bound
push
lcall
cmp
sbb
xchg
or
cmp
lret
fcomip
loopne
jne
addr16
fsubrl
cmp
insl
sbb
fsubrl
fldl
add
xchg
jb
dec
loope
jae
inc
in
lcall
mov
test
sub
add
mov
sub
xor
out
inc
adc
fisubl
inc
pushl
mov
cmpb
dec
adc
outsl
jg
stos
mov
mov
lods
and
addr16
mov
inc
xor
xchg
sbb
adc
enter
jae
out
xor
fcmovne
dec
leave
xor
leave
or
fisttps
ljmp
cli
stos
jle
push
out
push
scas
sub
inc
cld
test
in
or
mov
test
sub
int3
and
les
popa
movsb
arpl
push
inc
call
loopne
mov
icebp
out
insb
and
dec
pop
xlat
add
mov
and
ja
push
jns
scas
adc
xor
int3
or
dec
in
lahf
lods
clc
mov
mov
loop
inc
aam
jno
dec
out
shl
mov
xor
xchg
cmp
mov
pop
add
pop
cltd
and
mov
movsl
push
mov
lcall
mov
repnz
popa
stos
push
in
pushf
inc
sub
dec
sub
and
in
mov
out
adc
add
push
xor
mov
fwait
sbb
push
ret
sbb
mov
in
testb
mov
xor
insl
pop
in
mov
xor
jmp
rclb
call
and
sub
gs
add
imul
push
lds
icebp
xchg
xchg
test
sahf
test
xor
pop
pusha
cmp
std
in
das
jb
iret
sbb
insb
faddl
imul
test
mov
rorl
inc
dec
mov
adc
adc
ror
push
pop
add
movsl
dec
xor
pop
xor
xor
aaa
jl,pt
insl
and
jmp
push
out
sbb
dec
es
rclb
pop
adc
xchg
inc
mov
xchg
fwait
scas
cld
pop
mov
cmp
clc
dec
sub
mov
and
fs
cs
fstp
pop
bound
xlat
push
mov
popf
sar
cwtl
mov
or
std
push
ljmp
mov
addr16
add
lahf
ljmp
testb
icebp
clc
inc
push
jl
mov
scas
imul
inc
mov
jnp
aam
repnz
sysenter
adc
out
fcomps
add
pop
add
popa
iret
faddl
or
outsb
std
jp
jecxz
dec
and
mov
inc
dec
adc
mov
xchg
nop
pusha
scas
lahf
repz
lret
xchg
xchg
sti
and
aad
sar
lods
or
mov
sub
jns
sbb
outsl
fidivs
fisubs
cmp
sub
icebp
stos
out
push
fnstsw
push
sbb
xor
xlat
push
cmpsl
ljmp
pop
enter
sub
and
or
js
mov
add
int3
jge
or
and
lret
test
pop
inc
movsb
ds
push
pop
aaa
fs
push
scas
sub
in
xchg
lret
and
idivl
loop
cld
xor
cs
out
aaa
dec
bound
push
dec
dec
es
xchg
call
push
outsl
mov
fdiv
cmp
dec
add
int
in
into
mov
mov
mov
sbb
jnp
jae
mov
icebp
lea
mov
push
mov
push
add
divl
inc
inc
pop
pop
cmp
sbbb
fisttps
dec
mov
mov
imul
push
roll
inc
xchg
lds
jmp
xor
lahf
and
shll
mov
popa
fisubrs
loop
or
push
xorl
sbb
lret
gs
arpl
pop
out
cmp
sbb
int
cmpsb
je
cmp
pop
dec
mov
testb
outsl
mov
ret
idivl
xor
xchg
jae
pushf
sti
mov
bound
sti
pop
lea
mov
popa
addr16
fdivp
mov
mov
pop
jl
cltd
jl
clc
fs
xchg
jecxz
decb
inc
pop
hlt
stc
fidivs
mov
pop
inc
push
xlat
lahf
jne
mov
mov
adc
push
and
je
mov
adc
scas
inc
addr16
xor
mov
ja
or
xchg
fisubl
jno
adc
in
or
jns
mov
iret
movsl
mov
push
in
dec
add
lahf
and
stos
into
dec
inc
and
inc
mov
inc
pop
es
iret
bound
fistl
xchg
lds
mov
mov
fsubs
xchg
push
push
fisubs
clc
sub
sbb
sbb
push
rcr
inc
mov
push
bnd
repz
sub
xchg
outsb
leave
adc
mov
out
sbb
int3
leave
dec
fwait
call
fwait
ds
movsb
jl
and
sbbb
pop
cwtl
dec
scas
dec
xchg
es
xchg
icebp
ljmp
pusha
pop
xchg
xor
push
cmp
cltd
pop
push
mov
xchg
stos
aam
es
sbb
cli
inc
cmpsb
sbb
test
fistpll
push
cmpsb
dec
repnz
xchg
ss
repnz
dec
cltd
fidivrl
jne
adcl
lahf
fsubs
xlat
and
mov
jl
pop
mov
scas
and
inc
cmp
and
lahf
fstpt
sub
jl
out
call
rorl
iret
pop
sbb
fsubl
cmp
push
arpl
and
enter
fwait
je
sbb
and
pushf
inc
std
rorb
sbb
daa
jo
lods
divl
mov
mov
enter
pop
arpl
sbb
xchg
xor
dec
in
push
inc
sbb
arpl
xor
imul
xchg
add
gs
push
leave
lahf
jno
lods
arpl
jmp
pushf
cli
int
std
cmp
pop
test
mov
cmc
jne
jg
rclb
mov
faddl
sub
aad
dec
and
repnz
stos
sarb
ljmp
stos
mov
out
insb
mov
sahf
cs
pusha
fimull
inc
pop
out
shl
jb
push
movsl
cltd
in
xchg
inc
pop
add
lock
icebp
jnp
stc
mov
and
jo
ret
into
cmp
loopne
insl
and
cmc
loop
adc
inc
adc
hlt
xchg
lret
lret
insl
push
fldenv
sbb
xlat
add
ret
add
cmpsb
cmp
scas
mov
outsl
adc
add
leave
mov
and
mov
dec
jns
add
ret
and
sbb
stos
out
ds
sbb
out
dec
sbb
push
loope
lahf
or
xchg
mov
sub
cmpsb
lea
test
pop
std
pop
stos
push
insl
cmp
fisubrl
cwtl
mov
fucom
aaa
or
xchg
mov
pop
sbb
int3
ds
std
jmp
and
xor
pop
xor
adc
push
xor
loopne
andb
cmpxchg
jnp
sbb
stc
jecxz
sub
in
fimuls
dec
push
pop
ss
rcll
push
push
adcb
loop
mov
xlat
inc
lcall
fbld
dec
repnz
jo
loop
xor
inc
popa
xchg
out
push
mov
arpl
push
ja
mov
cli
sarl
push
mov
xor
fcoml
call
lret
roll
in
dec
stos
dec
mov
lods
nop
ds
cmc
adc
out
dec
pop
jne
sub
fcompp
mov
or
sub
fstps
mov
sbb
adc
es
xchg
inc
jmp
movsl
scas
rcrl
jns
loop
aad
and
pop
and
sub
xchg
sahf
inc
push
aaa
je
leave
out
push
push
pop
inc
push
test
fstpl
test
xchg
ss
xchg
mov
and
mov
cmp
push
cmc
fldcw
push
mov
ja
jg
mov
jle
lret
fistpll
mov
lds
push
out
push
jb
nop
sbb
add
daa
xchg
push
xchg
mov
dec
push
push
push
or
test
jns
jl
hlt
test
xor
sbb
dec
out
in
push
repnz
shll
jle
pop
jbe
addr16
andl
and
daa
pop
mov
aaa
push
gs
cmc
sub
cld
fidivrl
mov
lcall
mov
add
scas
sti
adc
jecxz
out
lret
in
sbb
cmp
dec
jns
add
out
add
fimuls
jae
test
push
cmp
in
sbb
mov
lds
rcrl
adcb
stos
push
aaa
daa
push
ljmp
test
adc
and
data16
inc
jge
push
inc
adc
ret
stos
cli
fs
dec
mov
dec
stos
cmpsb
pop
inc
scas
sbb
mov
cwtl
xor
xchg
fcoms
imull
clc
ret
add
insl
ror
int3
rclb
lcall
inc
cmp
clc
shll
dec
leave
adc
pop
iret
mov
ret
push
pop
sahf
pop
push
sbb
xchg
sub
inc
das
add
xchg
in
mov
mov
arpl
sbb
dec
int3
push
mov
mov
jecxz
popa
xor
sub
mul
paddsb
ss
fld
ficompl
cmp
lmsw
test
aas
or
mov
aaa
sub
outsl
sub
mov
xchg
imul
sarb
mov
pop
subb
sbb
mov
cmc
sbb
adc
out
inc
pushf
mov
jl
testb
sbb
mov
mov
push
pop
imul
dec
das
push
mov
cmp
movsb
lea
inc
loopne
js
bound
inc
sbb
xchg
out
and
jne
sbb
sub
lods
sub
loope
xchg
pop
dec
sbb
int3
call
adc
adc
dec
or
push
adc
jmp
jle
xchg
ret
cmc
daa
push
push
mov
fistpl
les
aam
jp
inc
push
or
adcb
shlb
iret
aad
add
ja
or
movsb
repz
pusha
je
in
out
sub
mov
pusha
jb
fcomps
scas
pop
add
stc
lret
xchg
inc
ljmp
loope
mov
xor
sbb
test
nop
dec
cs
push
push
loope
adc
rsm
push
cmp
adc
out
test
adc
add
aas
sub
daa
das
mov
sub
sub
pop
mov
or
cmp
or
test
sarb
or
std
ds
mov
push
xlat
rorl
mov
rcrl
divl
dec
inc
and
xor
movsl
cmp
inc
enter
addr16
jo
inc
cmp
cmp
in
ja
and
aaa
clc
pop
aad
aad
cli
and
mov
mov
adc
mov
or
bound
call
out
add
scas
imul
out
xor
push
addr16
jle
and
pop
pop
and
mov
fisubs
outsl
stc
das
xchg
or
pop
in
xchg
cmp
ljmp
xchg
and
scas
enter
test
aam
cmp
mov
in
adc
fmulp
add
add
and
rol
mov
inc
sahf
bound
cmp
pop
push
insl
pop
daa
mov
icebp
push
mov
jmp
xchg
mov
pop
inc
xchg
lret
clc
jmp
in
dec
out
pusha
shlb
inc
jnp
jmp
mov
mov
mov
inc
inc
jmp
sub
jecxz
aas
es
mov
cs
subb
dec
movb
int
test
cwtl
inc
aas
push
addr16
dec
adcl
cld
fistpl
ret
pop
cmp
adc
adc
stos
leave
xor
scas
lods
fstpl
push
mov
and
std
mov
and
add
scas
mov
add
repz
dec
mov
lcall
popf
dec
and
fucomp
mov
outsl
shll
into
mov
popa
mov
sti
fs
shl
in
ror
lock
movsl
ret
inc
data16
xchg
jnp
pop
cmp
arpl
mov
mov
dec
mov
and
pop
sbb
jo
xor
mov
or
mov
loopne
repz
jo
hlt
ret
push
mov
xor
dec
imul
mov
pop
lret
jl
mov
add
pop
das
add
add
test
sbb
fildll
push
mov
jnp
mov
testl
lret
jg
mov
sub
inc
push
in
xor
mov
sub
cs
nop
sub
add
mov
loope
imul
xchg
xchg
push
rcll
inc
adc
jns
mov
loopne
or
test
jno
lahf
push
adc
sbb
mov
std
sbb
lods
mov
pop
jge
jmp
scas
pop
jp
fldenv
cmp
rorl
mov
push
jecxz
dec
fsubrl
call
and
mov
xlat
scas
inc
enter
xchg
or
cmc
push
mov
pop
inc
push
mov
in
jg
outsl
loope
adc
push
ds
xchg
dec
or
lea
xchg
insl
and
out
or
divb
adc
cmp
mov
movsb
repnz
lret
or
mov
mov
ljmp
mov
pushf
pop
dec
lret
std
dec
pop
push
sbb
fcomp
jg
cltd
testb
imul
jo
add
dec
mov
jecxz
xchg
mov
addr16
lds
stos
insl
dec
add
ss
in
imul
sub
jns
fsubr
cld
test
out
inc
inc
bound
out
fwait
loopne
xchg
cli
xor
mov
fsub
lahf
inc
add
mov
cmp
ljmp
push
mov
xchg
psrad
pop
in
sbb
xchg
pop
cli
stos
dec
mov
xchg
mov
adc
pop
iret
inc
jae
shl
or
push
and
nop
loope
cmpsb
sahf
mov
sbb
cs
jae
dec
xchg
pop
popf
hlt
lock
sti
sub
pop
dec
push
lea
pushf
adc
adc
pushf
xor
pop
mov
je
push
mov
inc
jge
outsl
lock
movsl
or
push
inc
pushl
lds
xchg
and
lods
pop
hlt
xor
pop
mov
jl
cwtl
jne
adc
jecxz
andb
mov
test
roll
imul
ffree
xchg
adc
or
in
sub
fldl
icebp
push
sbb
cmp
arpl
imul
mov
mov
dec
cmp
sub
sbb
fs
lods
loope
cmp
pop
xchg
jno
jb
std
push
fistl
sahf
arpl
inc
pop
dec
mov
xor
stos
lods
or
cmpsl
mov
call
lods
cli
pop
sub
mov
jne
lods
dec
ret
cmpsl
int
cmp
xchg
cs
outsb
xchg
cs
pop
mov
lea
mov
mov
hlt
adc
ret
jg
fisubrl
adc
scas
xor
mov
cmp
dec
jg
es
in
lods
or
inc
sub
sbb
xorb
loope
popf
and
sub
lret
xor
xchg
pop
mov
in
add
or
cmp
shll
jp
imull
test
das
sbb
outsb
sbb
fisttpll
mov
test
gs
test
jge
in
adc
jae
test
enter
jo
adc
pop
imul
sahf
daa
pop
jbe
cltd
test
cmp
inc
rcrb
inc
pop
movsl
int
in
mov
push
and
sub
loopne
inc
nop
int
xchg
xchg
sub
das
add
pusha
pop
test
mov
loope
mov
cmpsb
xchg
aam
pop
fsubrl
pusha
sbb
jecxz
iret
cmp
mov
pop
fsubr
hlt
ror
mov
stc
dec
push
sub
stos
outsb
in
add
pusha
loopne
pop
pop
mov
jg
pushl
clc
mov
push
xchg
or
out
xchg
xor
out
outsl
js
xlat
sbb
pop
mov
sbb
lods
leave
inc
sub
mov
cli
sahf
jno
pop
inc
in
iret
out
stos
fs
add
and
sub
xor
and
movsb
sbbb
movsb
sar
adc
mov
cmp
lret
xorb
mov
push
dec
cmpsb
jno
sti
xor
imul
pop
leave
pop
fdivs
mov
andl
mov
push
inc
das
inc
loopne
sub
jge
push
or
imul
data16
mov
shlb
mov
dec
call
xchg
sbb
sbb
dec
sub
pop
and
mov
and
add
in
inc
push
addr16
cld
movsl
xchg
pop
jne
stos
push
pop
sbb
xchg
enter
lds
jae
jns
ficoms
add
popf
mov
out
mov
sbb
ja
add
add
xchg
inc
in
xchg
jnp
nop
sbb
faddp
pop
sbb
in
pop
inc
aam
cmpb
cmp
ret
jno
addr16
push
cld
jmp
rep
adc
jecxz
xor
ja
in
xchg
dec
call
xchg
out
or
push
movsb
out
push
or
addr16
add
mov
adc
jae
nop
nop
cmc
inc
outsl
mul
sub
jecxz
lret
sahf
sub
push
jno
clc
adc
sub
jo
ss
push
into
imul
clc
mov
stos
repz
mov
sti
jmp
sub
aad
repnz
sti
jp
dec
add
inc
inc
popf
xchg
sahf
sbb
push
aas
ret
divl
scas
inc
lcall
adc
lret
pushf
mov
lret
addr16
cmp
daa
xor
popl
pop
add
cmp
jle
popa
mov
pop
adc
je
pop
inc
in
mov
mov
adc
dec
add
xor
mov
insb
jmp
mov
aad
adc
push
cmp
ds
dec
jne
sbb
lea
in
mov
xchg
sbb
popf
or
jbe
cs
xchg
push
sbbl
ss
xchg
repz
xlat
in
hlt
xchg
lret
rolb
in
popa
outsb
xchg
lret
rolb
shll
mov
push
pop
push
cmc
les
int
and
push
xor
inc
fdivrs
clc
jb
imul
insb
sbb
mov
insl
pop
lahf
sbb
call
adcl
fsubp
fmul
ds
push
and
loope
dec
icebp
push
xchg
xchg
mov
fisubrl
push
push
dec
and
subb
jno
sti
mov
arpl
rcll
pop
mov
jbe
mov
in
cmpsl
sub
mov
sub
add
cmp
test
mov
int
inc
rclb
push
push
push
adc
xchg
scas
mov
dec
pop
mov
xorl
cmp
and
pop
cli
xlat
sub
jns
xorl
loopne
cmc
xor
or
pop
in
xchg
ljmp
scas
inc
insl
cmpl
test
les
das
data16
and
les
mov
mov
xchg
jae
ret
aad
or
daa
mov
test
lret
aam
imul
imul
imul
jmp
push
fs
lret
lds
and
push
ret
ret
push
mov
and
push
js
dec
push
shl
lcall
adc
shlb
push
jl
fsubs
pop
js
sbbb
xor
shl
ja
mov
add
loopne
pop
jp
sub
aaa
icebp
inc
int
movsb
int
adc
cltd
mov
push
mov
inc
sbb
xor
dec
outsb
out
pop
jne
ljmp
stc
test
mov
pop
std
jb
adc
insb
sub
int
stc
mov
push
fisubs
stc
dec
pop
inc
shr
ds
fsub
or
mov
inc
sub
and
jl
mov
and
lret
loopne
into
call
stos
inc
pushl
mov
inc
insb
out
jo
js
loopne
and
arpl
mov
jno
mov
jae
dec
adc
das
lods
daa
or
xchg
add
mov
push
cld
insl
jns
jne
or
cltd
xchg
sahf
ds
sar
dec
roll
mov
mov
push
xor
mov
cmp
or
or
pop
xlat
scas
movsl
inc
pushf
inc
popa
out
inc
inc
out
in
insl
loope
adc
cmc
jne
in
out
enter
in
cmp
incb
sub
imul
pop
lret
xchg
jecxz
out
push
dec
or
dec
push
js
fwait
mov
jg
push
aam
mov
xor
insl
daa
mov
xchg
pop
cwtl
stos
add
cli
aad
jg
xchg
jne
and
jge
mov
jo
cltd
in
ljmp
int3
repz
mov
jb
xchg
shl
aaa
jb
cmp
sbb
scas
loop
and
add
idiv
xchg
pop
lea
and
enter
jmp
in
cmp
leave
or
cmp
mov
cltd
pushf
sbb
movsb
lcall
xchg
lret
sbbb
fdiv
dec
iret
or
cmp
popa
roll
pusha
outsl
popf
push
jnp
ret
ja
movsb
rorb
mov
mov
lea
push
push
xor
jmp
push
xchg
test
push
fimuls
or
mov
in
les
mov
and
pop
mov
mov
dec
lods
inc
in
jnp
in
add
fmull
imul
addr16
push
scas
je
enter
aam
nop
lds
cmpl
dec
ds
or
es
jp
addr16
or
pop
pop
or
pop
arpl
gs
jl
fcomi
scas
xor
sub
cmpsl
inc
fstps
je
cmp
or
in
repz
lahf
gs
fisttpl
or
sar
pushf
test
sub
mov
lock
push
cli
cs
imul
sbb
push
sub
adc
aam
sbb
inc
scas
push
mov
repnz
shlb
sbb
jge
dec
aaa
jle
dec
shrb
jge
mov
adc
adc
popf
into
sbb
push
out
push
fidivs
stos
jae
cld
popa
das
aad
mov
pop
imul
fstps
cli
xor
out
mov
or
adc
xor
xchg
cwtl
lds
mov
ss
push
and
inc
mov
lds
shrb
aam
inc
inc
ja
inc
xor
push
mov
inc
adc
out
adc
mov
fsubl
das
add
mov
rcrb
cmc
jg
ret
mov
shr
mov
jae
xchg
sbb
std
mov
cmp
pushf
add
data16
pushf
dec
imul
mov
stc
out
pop
mov
ficomps
and
insl
jae
fs
nop
and
call
popf
inc
sub
popa
dec
jge,pn
stos
add
cmpsl
hlt
sbb
fwait
cmpsb
push
into
cs
pusha
das
iret
dec
mov
push
rorb
fstpl
jb
dec
pop
in
pop
xchg
cmpl
outsb
push
cmp
cmp
pop
das
stos
push
sbb
sub
xchg
pop
loop
inc
ret
cmp
mov
mov
pop
adcb
pop
out
dec
adc
add
ja
mov
movsl
jne
jp
rep
icebp
repz
lret
add
mov
nop
shrb
xchg
mov
cltd
es
dec
mov
dec
pop
dec
je
sub
stos
js
ss
mov
jmp
lret
in
push
and
ja
fnstsw
jb
sub
ss
repz
clc
xor
xchg
inc
ret
popa
add
movsl
mov
pop
add
inc
push
add
ficoml
or
nop
push
xor
subl
inc
shrb
rolb
xorb
movsl
loop
test
into
je
cmp
notl
mov
stos
adc
mov
cwtl
sbb
jnp
or
jb
outsl
mov
lret
nop
ret
into
out
add
js
push
jmp
sbb
adc
jbe
push
ss
pop
leave
inc
or
test
mov
jp
outsl
jae
insb
adc
mov
or
les
jbe
shrl
cmp
je
sub
data16
jecxz
add
xor
dec
jmp
lods
sbb
adc
push
adc
into
pushf
and
js
pop
dec
mov
outsb
xor
ss
lret
outsl
aad
xchg
inc
ficoms
pusha
test
daa
dec
std
jo
in
stc
xchg
jmp
sbb
cmc
mov
adc
aam
add
scas
fwait
enter
adc
xchg
mov
inc
add
dec
pushf
add
adc
insl
jp
imul
scas
or
adc
cmp
fwait
es
leave
fidivl
jle,pn
js
test
stc
xchg
sub
out
xchg
pop
jns
movsl
movsb
pop
mov
cmpsl
cmovns
adc
cmpsb
add
insl
mov
les
mov
jb,pt
add
adc
dec
xor
loop
inc
pop
out
movsl
pop
fs
aad
add
or
mov
xchg
lock
jae
mov
dec
pop
sub
ss
lret
addr16
sbb
sub
icebp
mov
popf
fwait
cwtl
adc
inc
repz
ja,pn
mov
stc
xchg
lods
aaa
lahf
insl
fucomp
int
dec
mov
popa
inc
stos
cmp
mov
sub
in
mov
movsl
jecxz
sbb
aaa
xchg
jbe
hlt
mov
lret
shl
cmpsl
xlat
sub
sbb
xchg
and
popa
mov
adc
add
xchg
pop
mov
test
test
mov
rorl
push
std
cld
and
and
roll
push
das
jns
test
das
mov
into
inc
inc
mov
movsb
cmpsb
test
test
adc
repnz
xchg
mov
mov
outsl
mov
mov
and
aas
cld
comiss
outsb
mov
pushf
lret
lock
pop
xchg
mov
xchg
sarl
inc
xchg
jecxz
mov
jg
cwtl
push
ljmp
mov
pop
lret
add
inc
mov
add
jns
in
dec
dec
addb
mov
test
nop
mov
in
scas
sti
push
xchg
xchg
aad
in
clc
sub
add
mov
sarb
jae
jbe
rcrl
icebp
fdivrl
pop
dec
jne
outsb
pusha
fsubs
mov
test
adc
and
and
xor
out
lret
stos
xlat
in
jl
sbb
out
mov
lret
jle,pn
or
arpl
inc
push
pusha
out
sahf
test
cltd
fsubrp
filds
jg
test
mov
jecxz
adc
xchg
push
int
jmp
idivl
fwait
in
movsl
cmp
pop
fildl
adc
xchg
xorb
icebp
int
out
inc
mov
cld
incb
stc
and
iret
sub
push
mov
mov
jne
jmp
add
lods
push
push
mov
push
add
inc
out
inc
imul
mov
iret
sbb
dec
pop
or
mov
and
sub
mov
fs
xor
and
leave
icebp
cmpsb
sub
mov
push
add
rcll
loope
or
sub
fldcw
push
popa
pushf
sbb
in
xor
shll
sub
addb
xor
aas
mov
fstp
dec
aas
jmp
fisubrl
test
incl
mov
push
xchg
rcrb
lods
cmc
push
mov
arpl
or
int
loope
xor
fsubrs
push
xchg
aaa
stos
scas
arpl
clc
rcrb
insb
outsl
daa
xchg
test
insl
data16
lods
xor
mov
jmp
dec
sub
inc
adc
in
pop
xor
test
xchg
scas
lea
mov
stos
repz
and
lret
xchg
pop
mov
pop
popf
mov
inc
mov
or
and
sub
leave
sub
inc
into
loop
xchg
insl
mov
fcmovne
cmp
sbb
scas
jnp
scas
and
mov
insl
mov
pop
jmp
add
cmp
adc
cmp
or
xchg
and
jno
loop
jg
mov
jae
or
sbb
dec
pusha
push
ljmp
or
lcall
cmovle
adc
pop
fdivr
out
hlt
xor
mov
cmp
decl
data16
mov
movsl
call
addr16
ret
sbb
add
xchg
jae
xor
mov
cs
sbb
mov
test
adc
sbb
pop
dec
mov
aaa
push
fisubrl
lcall
mov
sub
push
push
daa
insl
add
lods
mov
adcl
xor
rorb
in
imul
dec
ss
lcall
lods
decw
pop
testl
clc
pop
fiaddl
push
mul
repz
mov
mov
adc
xchg
pop
pop
lock
xchg
push
movb
lock
call
call
add
adc
adc
movsb
notl
pop
js
push
mov
les
inc
pop
mov
jmp
adc
mov
nop
adc
sbbb
shl
jbe
shrl
inc
cmp
data16
xor
stos
icebp
jp
dec
fldt
lahf
pop
scas
and
adc
dec
push
iret
xchg
gs
lcall
ja
push
sbb
lahf
fdiv
pop
popa
jbe
inc
test
imul
lcall
xchg
out
or
movsl
sbb
add
das
ja
xchg
outsl
sahf
subl
test
lea
cmpsb
inc
push
nop
sub
inc
int3
fadds
lahf
ror
adc
xchg
int3
mov
jmp
loopne
mov
ss
xchg
adc
mov
iret
add
dec
sahf
push
xchg
xorl
jne
xchg
or
iret
das
push
scas
jb
pop
es
inc
xor
movsb
pop
xchg
inc
adc
es
rolb
push
xor
dec
push
pop
ret
xor
cs
or
imull
mov
xorb
leave
mov
insb
lods
pop
test
add
fstpl
mov
icebp
fmuls
jo
lret
push
hlt
jbe,pn
add
mov
mov
pop
movsb
add
popf
sub
fldenv
xor
popf
fsts
push
mov
cltd
cmp
jnp
jge
and
dec
mov
lods
ret
sahf
js
and
add
lods
mov
ds
dec
sbb
fs
jne
mov
movsl
xchg
mov
mov
xchg
mov
out
iret
testl
scas
aad
scas
outsb
enter
xor
out
mov
inc
jl
pop
xchg
out
test
or
clc
and
xor
sub
mov
add
adc
ljmp
xchg
rol
adc
out
js
negl
adc
sub
dec
jmp
sub
xchg
sbb
jle
adc
repz
mov
sbb
cmp
out
xor
popf
cmc
lahf
jp
movsb
push
push
pushf
mov
gs
or
stos
nop
mov
sbb
xchg
inc
lcall
fwait
mov
imul
xchg
xchg
ja
in
fld
or
push
mov
mov
push
mov
stos
jl
jo
push
push
sub
jno
xchg
mov
gs
shrl
dec
repnz
jmp
lds
outsb
cmpsb
add
neg
push
repz
xchg
loope
or
push
ss
jns
loope
out
and
push
aas
imul
sbb
sahf
das
push
push
movsb
sub
cmp
std
pushf
aad
int3
mov
sub
scas
hlt
inc
addr16
pop
aam
mov
cmovbe
push
xchg
xchg
aam
cmpxchg
mov
pop
ja
andl
and
enter
push
or
xor
stos
jl
sbb
xor
stos
arpl
push
cmp
lcall
xchg
xor
push
addr16
and
dec
sbb
mov
mov
or
jl
mov
jle
add
push
stos
sub
jecxz
scas
lds
push
rdpmc
in
idiv
xor
pop
adc
xor
ucomiss
sub
mov
lods
push
adcb
testl
and
cmpsl
sub
mov
in
or
jle
addr16
sub
out
fnsetpm(287
dec
push
and
aas
insb
inc
adc
jae
xchg
and
lods
test
sbb
in
jns
xchg
ds
mov
hlt
dec
adc
adc
ljmp
in
sti
imul
inc
or
jle
scas
inc
push
push
add
rcr
shrl
insl
jmp
int
addr16
enter
je
xchg
jb
xchg
jno
add
pop
test
popaw
insl
in
in
jns
sbb
std
add
pop
mov
inc
fwait
les
mov
xchg
sbb
pop
xchg
mov
cli
add
mull
cmpl
mov
sarb
addr16
int
mov
cs
cwtl
push
sahf
pop
mov
stos
jns
xor
inc
jge
enter
scas
movsb
ret
out
inc
or
lret
and
rol
xchg
adc
mov
sarb
mov
pop
imul
cmp
rcll
mov
xor
and
call
fwait
pop
xor
inc
je
mov
dec
icebp
add
cmp
mov
push
out
jns
push
ss
push
rcr
sahf
mov
insb
push
out
push
sub
and
fisubl
out
push
das
cmp
ret
mov
push
pop
cmpsb
push
scas
push
nop
ss
mov
movsl
loopne
aas
xor
test
lea
fmull
sub
pusha
dec
pop
mov
lea
stos
xlat
mov
jns
inc
adc
xchg
adc
xchg
or
cmp
lcall
mov
push
sub
clc
mov
mov
jbe
mov
mov
mov
aam
les
and
jne
adc
sbb
imul
dec
roll
mov
clc
mov
lret
cmp
jle
add
and
sub
aaa
xor
cmp
out
rcll
xchg
out
jbe
daa
sub
push
into
cmpsl
js
out
orl
cs
push
push
adc
enter
aaa
sarb
je
push
sti
sub
fcmovne
sahf
adc
or
scas
fistl
xchg
sbb
lcall
mov
pop
jb
aas
stc
mov
movsb
outsb
cltd
pushf
push
jle
xchg
iret
jecxz
mov
sbbl
or
rclb
out
sarb
sub
xor
xor
dec
xchg
shrb
add
movsl
sbb
fiaddl
cli
dec
push
insb
iret
js
mov
mov
or
sub
jne
fcmove
popf
inc
mov
scas
jg
or
enter
jbe
sub
pop
movsl
mov
js
sbb
cltd
jbe
mov
shl
jbe
mov
arpl
mov
adc
push
or
test
or
orb
pushl
cmc
push
mov
sub
clc
cmc
add
sbb
adc
xchg
lods
lret
repnz
add
gs
and
les
and
sarl
and
mov
dec
cmp
jge
sbb
frstor
data16
out
push
dec
xor
je
mov
push
daa
cld
les
pop
lret
inc
xor
xchg
or
cmpsb
xchg
and
js
sub
cmp
mov
add
jnp
mov
test
insb
movsb
sbb
aam
push
xor
jge
icebp
adc
and
jmp
lahf
test
js
mov
pop
sar
mov
outsl
jno
repnz
scas
push
jns
les
mov
fistl
mov
pop
push
push
pop
push
clc
fndisi(8087
inc
movsl
iret
gs
dec
fdivr
push
shll
mov
je
mov
andb
ljmp
mov
mov
jbe
cwtl
fdivs
inc
in
dec
sub
cmpsb
jnp
mov
clc
bound
jae
mov
xchg
lds
fiadds
mov
xor
adc
sub
std
mov
jmp
pusha
inc
xchg
sti
jns
cmp
inc
push
out
inc
jecxz
fisttps
repnz
mov
adc
or
jns
mov
dec
cmpsl
push
ljmp
jl
enter
xor
pushf
shl
js
sub
and
add
cmpsb
mov
inc
or
pop
cwtl
push
test
in
je
add
popa
bound
mov
and
lock
in
fstps
std
pop
mov
nop
cmp
pop
sbb
les
lahf
add
fwait
jecxz
insb
sbb
fadds
xor
inc
push
bound
jg
les
pop
scas
add
pop
and
push
mov
jl
sti
adc
cmp
je
dec
or
jle
pop
lret
add
jnp
fistpl
xchg
inc
mov
in
mov
and
ds
sbb
int3
adc
jmp
adc
dec
jp
std
jp
lret
rcr
xor
xor
jbe
push
insl
nop
inc
popa
mov
cli
enter
into
pusha
inc
in
push
shlb
test
ss
jge
xor
js
xchg
mov
dec
adc
push
xor
mov
dec
fimuls
sub
push
fdivr
xchg
leave
sbb
inc
add
out
cmc
adc
mov
fcoml
adc
lods
dec
cmp
imul
test
mov
mov
ss
outsl
mov
and
xchg
xchg
lcall
jbe
into
sub
ljmp
mov
push
aad
ja
adcl
mov
pop
das
or
iret
or
inc
loope
jns
sbb
jns
adcl
test
popf
stos
in
popl
call
pop
and
aas
cmpsl
push
icebp
cs
jae
outsb
test
jb
dec
bound
ds
shl
sub
fcomip
mov
inc
lahf
mov
adc
pop
or
insl
cld
shrl
dec
sti
testl
nopl
mov
jb
fsubs
pop
push
not
sub
xor
int3
mov
popf
fwait
lret
into
out
mov
jl
xchg
shrb
or
or
call
and
or
enter
jmp
adc
or
mov
insl
neg
loop
sbb
stc
cli
inc
shrb
cmc
imul
rcl
hlt
mov
addr16
leave
add
rcrb
push
jle
or
cmp
fs
mov
sub
xor
inc
pop
imul
jle
adc
push
cmpsb
mov
mov
out
jae
std
pop
adc
sbbb
inc
dec
sub
rcll
loopne
popf
sub
aam
mov
out
cmp
pop
mov
xor
dec
stos
sub
xchg
pop
ds
adc
cwtl
mov
out
mov
sub
aaa
hlt
adc
mov
fistps
rorl
pop
lea
push
cmp
scas
movsl
adc
sub
adc
jns
in
dec
mov
dec
sahf
dec
or
push
pop
ret
jno
xchg
mov
push
sub
mov
shll
mov
repz
insl
cmp
inc
enter
jle
dec
cmpsb
test
out
and
cmp
cwtl
inc
sub
adc
scas
movsl
aas
or
cld
data16
cmp
test
imul
pop
add
pop
lret
pop
out
jl
insl
fs
lea
gs
icebp
lods
int3
movsl
es
loop
scas
xchg
jge
int3
cmp
int
nop
lret
cld
popf
xchg
fiaddl
sbb
mov
adc
icebp
inc
stos
fcoml
insl
sbb
nop
sahf
sub
add
xor
or
lods
push
fwait
xchg
dec
pusha
xchg
fadds
jge
xchg
pop
pop
sub
ret
jp
pop
sbb
adc
or
popa
xchg
in
jle
je
sub
lret
stos
jle
cmp
mov
repz
test
or
std
cmp
cmp
lret
daa
out
aas
xor
mov
add
and
sub
ret
stc
push
and
push
insb
repnz
mov
fucom
fnsave
imul
and
lcall
int3
test
xchg
int
pmaxsw
cmp
add
pop
pop
mov
sbb
fdivrl
mov
mov
cmp
arpl
xchg
jg
push
jns
js
sbb
adc
push
mov
aad
sbb
in
outsl
xlat
mov
sub
sbb
mov
cmp
mov
xor
dec
xchg
ret
aam
and
movsl
out
jmp
int
jbe
or
leave
sub
roll
xor
imul
jo
addl
lcall
shlb
adc
stc
out
ljmp
and
shrl
lret
sbb
arpl
jge
pop
rcrl
bound
addr16
mov
enter
out
sti
and
subb
cmp
mov
jge
mov
loop
dec
int3
and
adc
sbb
xchg
jecxz
test
sub
jo
jbe
sahf
pusha
rorb
adc
jg
or
cs
dec
push
inc
popf
scas
in
mov
popf
lock
jnp
pushf
xchg
imul
test
aaa
adc
fistl
xchg
cmp
dec
insl
jle
push
cmpsl
lock
jbe
pop
mov
dec
mov
inc
shlb
leave
lahf
dec
stc
mov
mov
jb
sub
aas
lods
outsl
cs
adc
pop
xorb
jae
insl
mov
test
cwtl
or
sbb
xor
sbb
out
scas
inc
push
inc
xchg
divl
cltd
xchg
push
inc
mov
mov
lods
add
mov
movsl
dec
push
imul
pop
adc
lahf
mov
arpl
sarl
stos
data16
test
cmp
into
or
cmpsb
mov
lock
out
ja
cmp
shr
mov
lods
cmc
xchg
xor
outsl
add
dec
push
or
data16
lock
clc
adc
push
ret
xchg
lods
pop
cmp
cmpsb
mov
imul
jo
addr16
rorl
out
mov
pop
test
addr16
inc
dec
mov
jmp
shl
mov
add
in
cmp
js
sbb
push
mov
std
cld
mov
pushf
mov
xchg
or
sahf
nop
arpl
lahf
mov
stos
dec
std
sub
pop
adc
xor
mov
add
mov
shrb
push
lea
test
scas
jb
nop
xor
push
test
mov
fidivl
mov
mov
adc
test
dec
xchg
add
xor
push
push
push
lock
lea
sbb
dec
sub
flds
scas
sub
hlt
xchg
and
push
xchg
xor
xor
ljmp
sub
dec
xor
mov
adc
inc
int
sbb
xor
shl
and
mov
addr16
addl
js
popa
sub
pop
cs
pusha
add
fsub
aam
popw
xchg
xchg
sbb
cli
fs
lods
jmp
and
fiadds
pop
cmpsb
xchg
dec
adc
inc
lret
dec
mov
shr
cmp
sbb
js
nop
ret
movsb
pop
arpl
add
xor
sbb
mov
imul
xor
lahf
cmp
dec
mov
or
imul
mov
lds
jno
pushl
dec
pop
mov
shrb
inc
xchg
cli
arpl
cmc
jnp
mov
inc
jge
fnstenv
xchg
cmp
sub
xor
out
mov
cmp
les
jge
mov
out
aas
cwtd
leave
insl
adc
mov
mov
cld
cmp
and
ss
inc
ss
popa
bound
jns
mov
and
jne
xor
jns
xchg
sub
mov
sbb
mov
imul
outsb
fwait
or
push
jle
pop
sti
loop
mov
lret
push
jmp
test
mov
xchg
push
sbb
push
fmull
push
pop
mov
sub
out
cltd
mov
jnp
mulb
or
in
xor
outsl
cld
mov
mov
les
mov
ret
lcall
dec
dec
movsl
xchg
adc
mov
mov
pop
pop
push
and
mov
pop
xchg
jae
in
leave
cmpsl
inc
add
imul
jne
push
xchg
cmp
aaa
inc
aad
mov
iret
ja
sahf
xchg
inc
jp
arpl
inc
lods
fldl
lods
testb
imul
add
cmpsb
and
lahf
out
cmpsb
leave
xchg
cmpb
fs
push
fldt
push
rcrb
xlat
imul
bound
lock
dec
push
cmp
fwait
ret
sub
mov
pop
jle
fsub
cmp
mov
pop
mov
repnz
pop
mov
cs
mov
sbb
mov
mov
push
call
nop
divb
fimull
or
sbbb
test
or
fimuls
adc
or
lret
movsb
aaa
je
adc
out
dec
out
movsl
mov
clc
xchg
xchg
push
cmp
imulb
cli
jle
or
pop
adc
mov
sbb
dec
pop
add
lods
push
arpl
rclb
cmp
mov
inc
pop
dec
and
push
imul
fiadds
push
clc
lock
mov
push
cmp
mov
jge
jle
pop
mov
pop
cmp
cmp
cmp
mov
mov
nop
xor
and
sbb
add
imul
jmp
pop
sarb
sbb
movsb
mov
sub
aam
adc
inc
inc
int3
ret
faddl
adc
movsb
lods
sub
xor
gs
cmpsb
push
pop
nop
lds
and
rcr
aas
mov
jne
add
out
orb
push
sbb
push
pop
outsl
loopne
sub
or
loop
flds
mov
insl
icebp
inc
xchg
ret
pushf
dec
add
sbb
mov
jp
push
sub
sub
and
sub
mov
cmc
push
jae
jge
scas
cmp
leave
mov
add
sub
or
out
cmpl
das
stos
cmp
jae
pop
in
mov
out
xchg
out
hlt
jecxz
in
push
arpl
push
and
ljmp
mov
and
icebp
adc
push
and
clc
sbb
flds
push
cmpsb
push
xchg
or
outsl
jbe
jae
nop
xchg
fstpl
std
stc
add
clc
popa
lock
dec
mov
mov
out
push
sub
lds
or
xorl
lcall
fadds
imul
lahf
mov
mov
shll
adc
mulb
adc
testl
or
cmp
sbbb
or
and
mov
fdivr
pushf
outsl
mov
outsb
dec
jbe
sub
push
out
pop
xor
inc
xor
insb
mov
fldcw
and
lret
fs
pop
stos
dec
adc
jmp
fnstenv
aas
enter
jg
xor
repnz
int3
popa
jb
cld
scas
mov
jecxz
daa
xchg
stc
popa
jle
sbb
dec
mov
pop
fs
movsb
rorb
mov
sub
pop
sbb
adc
jbe
and
fwait
jne
xchg
rcr
movsl
adc
jmp
or
jno
and
rcll
xor
jns
in
imul
aas
push
or
jg
int
and
arpl
mov
push
mov
test
popa
fadd
fdivs
rorb
cmp
mov
popf
addl
push
int3
test
cli
daa
pusha
mov
and
notb
dec
icebp
pop
add
orl
mov
xor
add
add
and
arpl
sahf
and
or
push
cmpsb
jp
out
sbb
lods
adc
out
fldt
mov
pushf
cmpb
or
or
mov
sbb
push
pop
xlat
sbb
pop
daa
dec
push
lret
cmp
int
shlb
stos
pop
sbb
jb
sub
jns
xchg
or
mov
test
mov
sub
repz
mov
pop
jg
fs
loop
pushf
in
inc
ljmp
sbb
mov
pop
add
std
lock
int
mov
xor
mov
aaa
dec
int
xor
stc
idivl
xor
cmp
jbe
adc
jb
jl
mov
testl
push
cmp
xor
add
nop
adc
push
fdivrs
pop
dec
push
sarb
lock
dec
push
divb
push
sub
imul
mov
test
xchg
inc
mov
cmp
xchg
stc
loopne
repz
sahf
fs
movsb
movsb
add
insl
sub
pop
scas
ret
mov
mov
in
jmp
clc
inc
clc
xor
dec
fidivrs
add
mov
xor
fnsave
mov
bnd
in
arpl
push
cmpsl
dec
sarb
adc
or
push
enter
or
sti
mov
int3
fld
or
sub
adc
insb
jnp
cmpsb
lcall
popf
jle
xor
iret
dec
lods
adc
push
or
lret
push
ds
dec
das
lods
pop
insb
data16
out
cmp
adc
int3
push
int3
and
mov
scas
xchg
mov
sub
nop
aas
es
rorb
mov
fmuls
add
ja
pushf
xlat
inc
popf
dec
pop
aaa
mov
popa
pop
int3
sbb
push
in
mov
and
test
out
add
aad
inc
dec
gs
jne
sub
in
mov
adc
mov
sbb
ds
mov
cmovbe
in
or
in
xchg
dec
int3
dec
andl
stc
sub
loope
mov
mov
in
xor
popw
ja
pop
js
cmp
loopne
outsl
in
push
pop
and
push
push
push
mov
cmp
hlt
jecxz
sub
fldl
sub
mov
lgs
inc
jp
jne
mov
push
stc
sub
and
xchg
mov
jmp
sub
rcll
or
xor
incl
test
add
push
repz
dec
cmp
ljmp
insl
out
mov
test
cs
sub
mov
push
xchg
imul
rcr
icebp
clc
ja
insb
push
sbb
jle
into
adc
pop
negb
shl
lods
outsb
sub
xchg
ficomps
mov
sbb
dec
jno
xor
or
inc
inc
ja
popf
cld
lods
mov
push
aas
lods
push
repnz
call
outsl
in
inc
out
sar
lea
xchg
lds
mov
sahf
ss
and
cmp
leave
lret
push
cmpsl
push
sbb
xor
imul
or
jle
ss
fists
xor
aad
and
js
xchg
cld
andb
aas
mov
cmp
je
xor
ljmp
jb
and
xor
cmp
call
sub
test
xchg
mov
xchg
inc
pop
xorl
adc
sar
adc
aam
xchg
dec
gs
test
inc
and
out
dec
and
lods
xchg
addr16
xor
dec
outsl
xor
and
cmp
lcall
rolb
xor
pop
out
dec
lcall
pop
cld
shr
fbld
ret
dec
lods
push
inc
sub
mov
test
dec
xchg
mov
pop
call
outsb
out
jne,pn
fcmovu
or
into
mov
loop
add
addr16
xchg
sbb
cmpsl
pop
mov
nop
and
ret
sub
jge
pop
inc
mov
xchg
mov
sbb
xor
hlt
inc
fidivrl
xor
repnz
mov
cmp
jle
cmc
hlt
cmc
jns
dec
cmpsb
in
dec
test
lods
add
adc
ss
lods
fbstp
enter
addl
xchg
cmp
call
repz
dec
push
pusha
clc
push
xor
adc
sbb
or
xor
lea
mov
mov
out
jp
adc
iret
mov
jae
lods
and
adc
popa
std
in
jbe
inc
xchg
cwtl
mov
movsl
in
inc
lods
push
hlt
lahf
mov
decb
or
mov
push
lea
mov
mov
mov
xor
test
push
in
cmp
lock
in
mov
xchg
xor
sub
jo
cmpsl
mov
pop
std
xor
into
outsb
lret
push
push
dec
shrl
imul
inc
cmp
pop
jbe
mov
xchg
andb
loopne
add
mov
insl
lcall
addr16
ljmp
out
clc
cs
jns
mov
iret
loop
or
cs
jo
push
out
dec
push
pop
dec
arpl
arpl
int3
cmpsb
inc
fwait
fs
aas
in
jb
inc
xchg
negb
xchg
aad
jnp
pop
add
cmp
es
movsl
sarb
cmp
icebp
stc
pop
lds
mov
arpl
cltd
sbb
add
cmp
xchg
jo
das
adc
sbb
push
adc
mov
add
mov
push
pushl
fdivrs
mov
scas
cmpsb
mov
or
loop
inc
xor
bound
pop
dec
cmpsl
arpl
aaa
es
and
mov
mov
jg
sti
shlb
cmp
rorl
mov
mov
jae
cmpsl
pop
xor
loopne
mov
sub
fidivrs
xchg
jecxz,pn
push
xor
xchg
in
mov
jbe
hlt
stos
lret
cmp
push
or
mov
sbb
mov
mov
inc
xor
rolb
rcrb
rcrb
arpl
cli
push
idivl
popa
pop
dec
rorl
jg
lods
ss
aam
rorl
loopne
loope
leave
adc
lock
mov
test
ret
push
call
dec
mov
dec
dec
mov
stos
cmp
adc
inc
call
aad
sarb
inc
xchg
mov
xchg
in
movsl
pop
cli
inc
movsb
in
insl
sub
sub
fxam
jnp
shll
enter
add
les
and
lcall
fsubrl
adc
xchg
hlt
push
push
pop
mov
dec
sub
dec
leave
pop
call
cmpsb
sbb
adc
popa
leave
pop
lret
jne
and
movb
stos
or
mov
pop
ret
mov
rcl
std
es
inc
mov
jge
lea
icebp
loop
cmpl
loop
pusha
cmp
lret
sti
imul
nop
insb
cmp
jmp
pop
pop
mov
loope
mov
call
les
cwtl
jg
pop
daa
shll
flds
push
in
cmpsb
jle
scas
fwait
hlt
sbb
jecxz
popf
fxch
mov
in
fwait
inc
push
dec
dec
jecxz
mov
push
mov
jno
push
xor
stos
ss
frstor
fnstsw
icebp
and
sub
or
sbb
out
test
iret
fs
pop
cmp
pop
or
xchg
cmp
sub
mov
push
sbb
jb
lret
cli
sbb
scas
stos
mov
dec
pop
cmp
fsubrs
or
push
lods
push
mov
je
fistpll
pushf
ja
dec
adc
jno
mov
xchg
cmpsb
mov
mov
or
fsubl
mov
jb
movsl
add
or
xchg
sub
mov
movl
movsl
xor
cmc
insl
scas
idiv
aad
iret
es
adc
adc
pop
mov
lea
push
jp
into
jle
imul
call
cmpsb
dec
push
pop
aaa
ja
inc
test
insb
mov
rol
insl
sub
test
data16
aaa
mov
adc
lcall
aas
xlat
aaa
popa
add
cwtl
aad
jmp
dec
xchg
testb
cmpsb
inc
shlb
push
loop
imul
add
mov
push
popa
dec
jno
negl
gs
movsb
mov
push
aam
notb
lea
add
push
xor
xor
cwtl
orl
dec
rcrb
cmp
stos
mov
cmpsl
or
loopne
sub
push
mov
sahf
lret
ljmp
mov
jp
out
inc
cmp
out
cs
lahf
imul
fcmovnbe
gs
mov
sbb
adc
jb
sub
loop
mov
mov
ffreep
cs
mov
dec
inc
lods
jb
mov
hlt
test
test
clc
pop
popa
or
jns
sub
ror
xchg
cltd
lahf
adc
mov
addb
gs
xchg
fs
fidivl
ret
inc
rcrl
pop
fcmovnbe
adc
std
repz
sbb
je
mov
jp
lods
stos
xor
lahf
mov
mov
push
jge
test
sub
icebp
cld
mov
inc
sbb
sub
cwtl
test
rcrb
jns
xor
push
clc
inc
fdivrs
mov
cld
xor
mov
outsb
jnp
jnp
mov
jecxz
add
hlt
cmpsb
add
jg
lods
lock
xor
addr16
fisttpll
movsl
mov
clc
jge
cwtl
out
xchg
add
mov
mov
push
js
outsl
xchg
add
div
stos
jp
flds
fsubr
cld
add
addr16
jnp
mov
and
test
outsb
mov
lods
call
jb
mov
lahf
dec
jne
pop
shrl
sarb
jle
lret
pop
push
out
pusha
lods
insl
ds
inc
pop
add
xor
mov
jbe
push
in
fsubs
pop
add
fs
adc
pop
fld1
ja
sub
scas
add
insb
xlat
xor
xor
push
pop
xchg
rcr
mov
push
fwait
roll
push
repz
test
sub
sub
cmp
fldcw
lock
xchg
cs
negb
popf
popa
cmp
pop
andb
loope
jmp
fcmove
cmp
sub
inc
out
push
dec
sahf
pop
inc
or
jmp
jae
shr
dec
out
xor
push
cmp
push
xchg
xchg
shl
hlt
add
push
and
pop
sub
aas
js
iret
out
arpl
jb
and
cmpb
scas
add
cli
push
or
insl
or
cmp
xor
out
inc
cld
sub
inc
xor
push
and
outsl
sbb
in
mov
adc
push
test
jp
add
fisubs
dec
movsb
iret
dec
repnz
repnz
fdivrl
leave
std
pop
push
in
data16
cmc
add
mov
add
push
fsubs
pop
inc
pop
xor
xor
xchg
imul
notl
pop
cltd
mov
rcll
add
neg
or
jmp
jle
data16
outsl
imul
fcoms
and
xchg
sub
push
mov
lock
dec
rorl
shlb
jle
lods
scas
rcr
ret
sbb
shlb
push
test
mov
push
ror
sub
inc
fs
mov
push
mov
leave
jne
xor
test
insb
jb
call
xor
add
mov
jns
push
cmp
mov
cmp
ljmp
sub
es
adc
jl
push
test
cmp
mov
dec
sbb
xchg
push
movl
mov
jge
adc
push
or
or
popf
xchg
inc
add
push
outsb
icebp
adcl
movsb
inc
loopne
and
loope
out
pop
pop
or
push
out
push
jnp
cmp
mov
cmp
dec
ret
clc
std
adc
inc
ret
or
adc
push
js
insb
lcall
add
out
jg
or
loopne
mov
add
push
mov
cmc
xorl
dec
or
loopne
cmovg
fldcw
inc
out
stos
push
xchg
loope
in
pop
cmp
mov
stos
dec
pop
in
push
nop
movsb
dec
push
xlat
ljmp
in
mov
outsl
adc
push
jecxz
adc
loope
dec
fbstp
jmp
subb
mov
arpl
sub
inc
cwtl
outsl
jge
pusha
lahf
test
leave
mov
out
push
fcomi
movsb
repnz
cmpl
clc
sbb
jmp
jbe
dec
inc
js
movsb
mov
ds
rolb
pop
adc
mov
inc
std
push
push
sbb
scas
outsb
ret
fists
popa
inc
addr16
cwtl
stc
xor
sti
add
or
xchg
clc
subb
adc
clc
popa
push
in
loopne
xor
enter
cmc
repz
enter
jbe
pop
cs
adc
pop
mov
mov
inc
shrl
sub
or
xlat
mov
shlb
mov
jb
cmp
leave
inc
cmpsb
cmp
mov
or
mov
in
cmc
rorl
or
shll
jmp
pop
in
sahf
test
mov
pop
sbb
es
faddl
lock
mov
mov
xor
orb
inc
adc
sub
sbb
fsts
xor
aam
adc
stc
mov
leave
int
xchg
push
seta
dec
daa
ret
and
xor
fimull
pop
sbb
inc
ja
mov
insl
fistl
add
mov
nop
xchg
fiaddl
mov
sbbl
std
push
cltd
jle
mov
clc
mov
and
mov
movsl
arpl
sbb
mov
sbb
in
cmp
jne
data16
pop
stos
mov
push
nop
inc
dec
or
mov
lock
popf
lret
jne
or
push
movsl
lods
dec
and
cmp
xor
push
jb
mov
mov
mov
mov
imul
out
pop
sbb
jno
pop
movsl
fisubrl
lds
mov
fwait
out
ret
test
popf
aaa
je
mov
inc
xchg
cmp
scas
xchg
int3
push
std
decb
push
push
lods
inc
mov
stc
xor
shll
xchg
pop
sarb
pop
sbb
mov
mov
icebp
test
lea
bound
mov
cmpsb
pusha
test
jns
repnz
sub
rcll
jnp
add
jge
jmp
or
sub
test
add
push
out
out
loop
pop
negb
pop
aad
sarb
call
cwtl
mov
jge
sti
ss
mov
xchg
xor
outsl
ljmp
and
xorb
and
sbb
outsl
mov
xor
push
cmp
mov
cmpsb
inc
dec
out
adc
add
in
mov
negl
cmp
shlb
push
cmp
push
mov
xor
pop
jecxz
cmp
into
pop
adc
jno
mov
addl
outsl
in
int3
cwtl
lock
mov
lret
arpl
test
je
cmpsb
dec
xor
jae
andb
mov
inc
push
mov
leave
inc
aas
push
movsl
enter
jecxz
int
ret
cld
xlat
xchg
fiadds
addr16
pusha
std
or
fistps
adc
xchg
cmp
iret
mov
inc
mov
roll
stos
push
in
and
ret
mov
cmpsb
cmp
daa
and
and
adc
pop
leave
add
fisubl
iret
decl
test
mov
push
adc
xchg
negb
mov
lds
leave
push
aaa
cmp
cmp
dec
lahf
stc
mov
push
dec
fldenv
shr
in
in
mov
adc
je
add
xchg
pop
lcall
lahf
shlb
adc
or
sahf
push
mov
cli
add
sti
sub
xor
sti
aaa
enter
inc
mov
js
xor
mov
out
cs
xor
movsl
sbb
aas
and
jge
jle
ss
pop
movsb
loope
push
popl
lds
pushf
push
shl
mov
sti
xchg
pop
or
aad
sbb
jno
lcall
lahf
aad
orb
or
dec
cmc
cmp
clc
int3
adc
clc
sti
imul
ljmp
shll
jecxz
call
lods
stos
test
jb
push
adc
jae
lcall
stos
pop
int3
lret
std
dec
xor
aaa
cmc
daa
in
sub
mov
loopne
pop
jecxz
push
ljmp
sub
and
adc
repnz
xchg
cmp
in
insb
adc
push
sub
xor
mov
test
jmp
sub
int
xor
mov
loopne
inc
lock
fisttpll
loope
sbb
sub
ljmp
or
pusha
adc
enter
ret
rep
gs
scas
lret
cmc
push
push
pop
popa
push
inc
aas
mov
pop
stos
fsubrs
in
push
ds
loope
jnp
xchg
int
mov
and
fcomi
rcll
xchg
enter
lcall
add
in
faddl
mov
xor
pop
adc
or
xchg
fs
ja
pop
orb
cmpsl
jmp
mov
test
xor
inc
and
pop
sbb
fldt
aad
xchg
loope
dec
pop
mov
and
add
dec
decb
fbld
pop
bound
pushf
pop
xchg
movsl
jle
push
pop
popf
xchg
or
idiv
in
pop
cmpl
rcr
mov
int3
mov
dec
mov
sbb
mov
jecxz
mov
jg
lahf
xor
ss
hlt
push
and
in
imul
lea
in
or
mov
cwtl
mov
mov
add
icebp
adc
sub
mov
add
out
imulb
outsb
pop
pusha
fucomip
loopne
mov
mov
call
xchg
pop
data16
or
je
mov
pop
jg
and
pop
repz
icebp
lahf
mov
adcb
inc
and
mov
xchg
sarb
es
mov
mov
push
daa
push
push
les
imul
sub
lahf
add
jle
test
sub
push
sbb
push
add
xlat
js
pop
mov
xor
js
sbb
ds
stc
rcll
gs
lock
mov
add
push
call
aas
cmc
and
mov
mov
arpl
adc
stos
jl
push
pop
mov
sbb
mov
fisubrs
xchg
adc
or
enter
lea
mov
pop
jcxz
mov
push
and
sbb
mov
sub
leave
mov
xchg
and
push
loope
outsb
ret
dec
jge
hlt
and
add
fsubs
sbb
dec
aas
es
sar
push
mov
jp
mov
repz
pop
arpl
push
pop
mov
mov
xchg
sub
imul
loopne
stc
mov
mov
inc
pop
into
cmp
cmp
xor
dec
sub
cmp
sub
data16
add
loope
mov
xchg
add
push
or
insl
jmp
outsb
jnp
insl
lds
leave
mov
and
mov
jo
xchg
cmp
lea
popf
jnp
in
ret
mov
adc
popf
jp
sbb
loop
mov
mov
xchg
cld
call
insl
xlat
fiaddl
pop
aas
inc
mov
clc
cld
loop
xchg
popf
fs
lcall
scas
adc
xchg
or
and
or
call
adc
xor
push
push
jne
int
xchg
sub
dec
sbb
mov
jb
and
adc
daa
imul
repnz
sub
sbb
subb
mov
popa
inc
stos
inc
pushf
and
sbb
push
sub
shll
in
cmpsl
inc
ja
test
out
push
ret
test
fnsave
les
lods
das
push
ret
in
mov
imul
cmpsb
addl
ret
or
insb
stos
pop
sti
mov
mov
mov
add
or
loope
js
test
daa
adc
xchg
cmp
aad
sbb
jp
sub
daa
inc
movsb
std
xor
in
outsl
add
cwtl
gs
aam
lods
inc
addr16
jae
mov
pop
loopne
cmc
daa
fists
pop
sbb
xchg
adc
ljmp
mov
into
fstpl
sbb
lret
gs
xor
es
fidivrl
jecxz
adc
addb
lret
lret
int
rcl
adc
les
movsl
jge
add
repz
add
adc
pop
xchg
shrl
repnz
pop
addb
sbbb
add
mov
cltd
mov
mov
xchg
in
lahf
dec
mov
and
in
aaa
jecxz
int3
das
push
aad
gs
pop
cmp
dec
xchg
cltd
lahf
popf
pop
mov
add
inc
mov
pusha
ret
jle
int
js
out
lret
xor
mov
aad
dec
and
js
icebp
sub
sbb
into
in
pushf
xor
push
stos
sahf
in
xor
pusha
jae
movsb
sbb
sub
icebp
call
in
and
into
sbb
sti
sub
out
or
fstpl
mov
test
into
ret
mov
ja
dec
push
das
sbb
aad
jns
test
test
inc
push
out
mov
icebp
lcall
pop
das
cmp
jg
subl
ret
dec
pop
repz
test
mov
jno
loope
pop
adc
pop
aad
push
sub
lret
pop
stos
xor
inc
push
call
sbb
adc
lods
fwait
push
jae
leave
cmc
ljmp
xor
movsl
inc
sahf
mov
out
dec
icebp
cmp
icebp
pushf
xchg
jb
out
outsl
push
in
test
sub
xchg
jb
test
mov
mov
xchg
mov
add
xor
and
setp
dec
pop
nop
and
jmp
lret
adc
mov
neg
xchg
outsl
popl
mov
sar
cltd
aas
xor
sbb
fisttpl
mov
inc
inc
lahf
in
aas
ret
pop
jge
fsts
xor
push
insb
or
jne
adc
mov
inc
pop
imul
repz
cmpsl
xlat
inc
orb
pop
popl
addr16
sub
loop
and
icebp
sub
mov
mov
fcoml
sub
xor
call
shl
outsb
mov
ljmp
in
pop
aaa
mov
shr
jns
das
cltd
repnz
xor
sub
sahf
pushf
inc
mov
call
and
dec
ret
sub
ret
and
mulb
push
xor
arpl
mov
jle
jno
jl
xor
daa
mov
pop
mov
lret
rclb
jo
out
popa
mov
ss
fs
pop
in
xchg
rcrb
mov
dec
insl
mov
jl
dec
jmp
push
jle
aad
cmp
sub
dec
pop
xchg
pop
lahf
mov
xchg
cmp
sub
xchg
cli
test
sti
jno
lds
lret
pushf
push
cmc
lock
cmpsl
test
lcall
sti
sahf
inc
jno
mov
push
and
inc
inc
dec
int
mov
or
mov
sub
ljmp
mov
les
fnsave
lret
and
rol
pop
jmp
leave
lock
cld
fs
adc
xchg
cld
jo
mov
mov
repnz
jo
imul
push
iret
sbbl
bound
shlb
and
test
pop
cmpsb
dec
repz
sub
cltd
ljmp
lods
mov
jmp
cmpsb
jo
fisttpl
mov
mov
clc
clc
aam
adc
je
test
hlt
lret
cmp
movl
xchg
faddl
xor
dec
push
cmp
lds
outsb
xor
flds
push
out
sbb
cmp
or
mov
and
sahf
mov
jb
sub
xchg
test
ja
popa
adc
sbb
cwtl
shll
pusha
mov
sub
jno
leave
cltd
inc
fcompl
in
sti
mov
xchg
dec
inc
or
mov
repz
xchg
sbb
lds
jne
rcl
out
test
sbb
add
into
lcall
mov
or
sbb
fs
loopne
add
sub
xchg
pop
in
push
inc
mov
adc
mov
outsl
rolb
in
push
out
gs
adc
cli
lcall
mov
leave
push
mov
popa
add
xchg
ss
fiadds
sub
sub
or
fldl
push
add
repnz
cmp
jmp
stc
jno
lahf
cmpl
adc
xchg
lock
std
mov
movsb
or
sbb
lock
loopne
ret
pushf
xlat
xlat
and
or
fsubrs
dec
inc
inc
lahf
push
mov
fwait
jecxz
mov
mov
mov
and
popf
int
ja
xor
mov
test
xor
mov
punpckhbw
adc
lods
mov
xor
ss
cmp
xchg
mov
and
in
jb
mov
push
ret
xbegin
in
dec
add
adc
xchg
stc
push
lock
adc
iret
sahf
cmp
ret
sbb
xchg
mov
mov
repz
test
push
rcr
and
mov
fiaddl
iret
jo
xchg
test
sub
in
fildll
aad
push
push
sub
clc
cli
imulb
lds
ret
and
mov
xchg
xchg
inc
repnz
jno
pop
push
imul
out
addr16
fs
dec
or
fiadds
inc
stc
cmp
xchg
mov
pop
lock
pop
mov
mov
dec
pop
movsb
push
jbe
and
sti
jmp
push
bound
cwtl
call
inc
jo
mov
fimuls
cmpsl
push
loope
lea
dec
pop
mulb
xchg
add
stos
pop
jg
pop
xchg
sbb
push
pushfw
and
and
mov
adc
jge
out
test
andb
fnsave
pop
xchg
xor
insb
mov
lods
mov
mov
gs
jmp
xor
gs
cmp
pop
icebp
fbstp
jb
fiadds
ficoms
jbe
adc
jbe
fsubs
insb
rcr
shrl
iret
xor
xor
lcall
sbb
stc
mov
push
inc
in
dec
push
outsl
sub
clc
fsubl
nop
lahf
cmp
ret
sub
std
je
out
std
inc
shrb
push
mov
neg
std
enter
test
mov
xor
scas
sub
divl
outsb
mov
jg
ret
jmp
std
addr16
scas
inc
add
lea
xor
inc
es
mov
sahf
jl
sti
repnz
or
mov
fmull
or
add
mov
push
outsl
mov
imul
jl
cmp
mov
sarl
mov
aad
fisttpl
mov
mov
sti
inc
popf
bound
adc
mov
jno
adc
dec
sub
push
push
cmp
push
push
jg
fwait
sbb
inc
mov
sahf
push
stc
xchg
cmpsl
hlt
ss
pusha
dec
push
out
xchg
rcl
fbld
mov
stos
pusha
jo
xchg
scas
cmp
pop
outsl
push
push
sub
mov
aam
add
jg
jne
pop
mov
mov
or
add
inc
pop
jmp
adc
lcall
or
je
test
ret
repnz
rcr
loop
xor
push
jl
jb
std
add
or
and
repz
push
test
cmpsb
je
dec
rolb
stc
addr16
fldcw
mov
lods
sbb
loope
dec
test
hlt
cmpsb
mov
mov
aaa
xchg
out
and
int3
mov
jb
loopne
inc
xor
ljmp
cwtl
xor
hlt
fdivrl
out
shll
movsb
push
scas
insl
push
xchg
xchg
jbe
loopne
mov
push
lret
xchg
data16
aad
cmpsb
mov
xor
cmp
jl
rcll
push
sti
mov
pop
fwait
into
dec
scas
cmc
add
add
and
jmp
jle
and
xor
aam
fdivrs
fstps
popa
daa
add
inc
stos
fdivp
iret
cmp
clc
fmulp
jge
xor
pop
repnz
mov
pop
inc
mov
jo
out
jnp
adc
ret
mov
pop
cmp
lret
sbb
and
pop
adc
jne
outsb
cli
jmp
imul
lahf
and
and
sahf
add
fcmovnu
or
lret
jl
fcoms
pop
fsubrs
ficomps
ret
cs
or
add
scas
mov
cmp
xchg
or
xor
arpl
sti
dec
pop
test
aad
sub
inc
xchg
pop
mov
repnz
and
addr16
jnp
ja
lahf
stos
icebp
inc
cmpb
inc
orb
divb
mov
jno
xor
arpl
gs
pop
scas
add
rclb
mov
sbb
hlt
sbb
xchg
cmp
mov
push
sahf
out
add
mov
sahf
xor
sub
cld
subb
notb
insl
mov
sub
insl
ss
pushl
into
cmc
sarb
cmp
test
lahf
pop
mov
or
jnp
fwait
xor
xor
fisubl
mov
cli
mov
mov
push
sbb
sbb
sub
mov
adc
inc
dec
push
xlat
inc
mov
xor
mov
das
mov
mov
sti
mov
andnps
jno
popa
add
out
test
mov
push
or
arpl
cmpsl
pop
loopne
mov
cmp
xor
fnstsw
outsb
leave
lret
sahf
stos
lahf
aad
and
loope
cld
mov
repnz
lock
aaa
mov
ret
std
sbb
dec
pop
inc
push
sub
pusha
fwait
into
or
push
mov
inc
out
cmp
shrl
movsb
jae
movsb
in
add
dec
push
sub
cmpsb
xlat
fisttps
pop
pushf
cmp
push
cmp
repz
jb
pop
das
sahf
pop
pop
sbb
jbe
bound
ljmp
sub
cmp
xor
out
jmp
stos
fnsave
add
mov
jnp
xchg
shll
test
jns
es
or
xor
push
pop
mov
les
push
lahf
inc
ret
push
cwtl
loopne
xchg
jae
push
mov
jo
jb
inc
push
orb
xchg
inc
or
in
aas
repz
scas
fildl
daa
mov
in
jge
jae
in
dec
scas
jle
sbb
int3
jb
out
idivb
stc
jge
add
cwtl
lcall
stos
mov
mov
push
sbb
sar
loop
adcl
jbe
stos
inc
and
lret
dec
inc
das
xor
ljmp
cli
data16
mov
adc
fdivp
dec
aaa
mov
jmp
and
outsl
ret
mov
jns
push
push
jnp
push
mov
push
sarb
arpl
pusha
into
inc
xlat
xor
and
mov
xchg
ret
ljmp
cmpsl
icebp
mov
popa
daa
xorl
call
mov
mov
les
push
jbe
dec
and
jnp
arpl
jp
and
cmp
dec
incb
mov
xchg
mov
daa
mov
pop
dec
jb
js
add
xchg
push
ljmp
popf
fs
mov
and
icebp
sar
sbb
movsl
xchg
push
hlt
or
lahf
imul
jbe
adc
stos
scas
mov
dec
inc
das
mov
and
aaa
stos
pop
xchg
aaa
mov
push
mov
cwtl
test
jmp
cmp
test
enter
and
leave
ja
stc
lods
addr16
or
ror
jns
mov
test
in
mov
and
lods
int3
pop
lret
popf
xchg
mov
les
arpl
out
cmp
lds
inc
loope
add
push
out
push
push
mov
jg
sbb
fildl
lahf
dec
stos
std
push
sub
ss
adc
add
sub
mov
orb
mov
daa
mov
js
push
sub
fnsave
xor
addr16
add
testl
int3
mov
push
jmp
ret
push
je
jl
add
sub
lock
loope
insb
inc
repnz
pop
aas
iret
das
adc
cmpsl
dec
and
jno
push
int
push
pop
fistps
pusha
lods
cwtl
xchg
inc
push
mov
sarb
inc
fstps
enter
in
xchg
into
movsl
scas
int
sahf
adc
cld
icebp
pop
pusha
xorl
lds
dec
xchg
and
add
je
unpckhps
popf
mov
pop
jae,pt
fsubs
lcall
in
into
call
cmp
rclb
push
lret
dec
push
jo
cmpsl
negb
sbb
fmul
push
sbb
bound
xor
test
mov
xor
mov
cmpl
xlat
es
cli
add
and
arpl
fs
or
and
daa
pop
filds
mov
arpl
mov
sahf
xchg
sarl
call
sarl
dec
mov
xor
push
push
int
push
bound
call
mov
aaa
pcmpgtw
jg
lcall
cmp
inc
data16
xchg
popf
cmpsb
out
arpl
jecxz
mov
mov
pop
jns
jno
dec
pushf
mov
xchg
lods
xor
test
push
ds
mov
sub
jg
mov
test
pop
fcomps
mov
pop
aaa
or
inc
fucomip
popf
sbb
mov
mov
cmp
outsl
bnd
syscall
push
cmpsl
dec
jmp
jg
cmpsl
out
jne
push
bound
jge
inc
stos
int
icebp
mov
mov
inc
jmp
lods
and
xor
dec
lds
test
and
inc
cmpsl
dec
nop
pusha
pop
jno
pop
out
sub
xor
cltd
in
adc
data16
jae
xchg
jb
xchg
and
ret
xchg
push
pushf
cmp
ds
mov
mov
gs
push
mov
pop
je
push
jmp
push
xor
cmp
sbb
jb
fldt
lea
add
shlb
sbb
cltd
mov
mov
sbbb
and
push
inc
push
enter
cmpsl
jg
aam
stc
stc
xchg
das
sub
out
dec
mov
out
push
mov
mov
fwait
jl
je
dec
push
inc
xor
sub
inc
push
cmp
clc
and
and
sbb
xor
pop
shlb
mov
jns
or
and
and
imul
or
mov
ret
jbe
jo
xchg
test
js
or
jb
fmulp
daa
pop
nop
aas
adc
sub
imul
mov
push
push
imul
iret
cwtl
add
xchg
cmc
jae
pop
add
jno
lret
push
and
dec
inc
mov
mov
jecxz
dec
ffree
push
jne
mov
pop
sub
and
jb
ret
adc
xor
shll
cmpsb
inc
nop
xchg
or
sub
mov
adc
pop
xchg
cmpl
xchg
repnz
xor
mov
push
cmp
ret
testb
stos
stos
or
imul
xor
and
stos
pop
push
clc
and
add
rcl
lret
jecxz
xchg
fimull
arpl
xchg
pop
arpl
das
xor
in
fwait
sbb
xor
pop
cmp
addr16
sbb
scas
es
fisubrl
fs
xchg
les
and
cmpsl
idivb
fmuls
cli
aas
cmp
mov
jne
orl
js
stc
jle
xor
sub
pop
in
mov
loope
mov
mov
dec
jge
testl
ss
into
loope
mov
xor
mov
std
jge
pop
add
push
das
mov
sti
mov
jl
loope
cmp
jno
scas
xlat
mov
push
jno
dec
ret
mov
test
xor
mov
out
adc
adc
sbb
dec
dec
popf
cmp
push
dec
or
movsb
pop
out
out
stos
lds
test
or
xor
mov
out
subb
pushf
andb
lods
sbb
jecxz
fiadds
pop
fs
test
inc
pop
add
mov
mov
sub
hlt
and
pusha
imul
inc
pop
repz
adc
mov
jge
mov
lret
xor
cmpsl
sub
inc
dec
lods
cmc
xchg
add
out
fs
pop
sbb
clc
sub
cmp
repz
sub
xor
call
pushf
sar
pop
dec
mov
sub
adc
cmc
sub
dec
push
outsb
repz
iret
push
lret
int3
cmp
loope
mov
outsl
ja
adc
dec
push
adc
out
cmpb
jne
push
daa
jae
pop
int
ret
mov
gs
cmpsl
vcvtss2si
jbe
bound
inc
and
pop
pop
xor
loop
xor
scas
insb
js
inc
sbb
pop
popf
mov
dec
jno
fadd
test
andl
loopne
mov
push
fs
mov
dec
aas
mov
mov
pop
stos
js
push
cli
int
int
idivl
arpl
iret
sub
inc
pop
xchg
movsb
jnp
xorl
push
test
insl
sar
mov
test
sbb
xchg
inc
pop
pop
mov
bound
outsb
imul
pop
dec
sbb
lret
pop
dec
les
pop
ja
inc
pop
mov
arpl
xchg
call
test
es
mov
ret
pop
xchg
out
xchg
jg
add
xor
dec
clc
fisttpll
cwtl
and
sti
mov
push
cmpsb
lcall
mov
and
xor
roll
and
mov
mov
call
out
add
sub
das
inc
add
or
mov
push
ss
sub
ret
jge
loopne
pusha
sub
mov
nop
and
mov
out
lea
jae
mov
pop
jl
inc
sahf
mov
xchg
xchg
andb
ja
adc
inc
cwtl
enter
pop
push
jb
sbb
mov
mov
mov
cmp
push
push
lds
lar
mov
xor
jmp
pop
inc
adc
sbb
jbe
lret
jns
push
imull
sti
cmpsl
lcall
bound
cmp
adc
insl
vpminsw
clc
mov
fwait
gs
push
movsb
adc
add
fbstp
lcall
faddl
sbb
xor
jg
push
int
jne
pop
inc
enter
movsl
stc
test
test
cmp
xchg
dec
push
int3
std
or
jmp
jmp
call
cmp
cltd
bound
inc
pushf
add
or
movl
sbb
movsb
jge
out
lcall
jne
xchg
cmpsb
mov
inc
mov
leave
stos
or
push
dec
or
iret
shll
mov
loopne
mov
sub
and
dec
outsl
inc
lcall
lret
cmp
loopne
dec
jp
adc
movsb
loope
or
adcl
mov
cli
stos
ss
adc
jmp
mov
jae
mov
dec
stc
sub
subl
mov
mov
pop
jmp
push
adc
js
and
in
ljmp
xor
cli
xor
inc
add
cmpsl
mov
sbb
lods
stos
dec
mov
sbb
ss
lock
jmp
out
xor
sub
insb
mov
out
inc
bound
ss
loope
push
lret
out
pop
out
cmc
into
and
mov
cmp
jmp
icebp
dec
push
inc
lods
and
mov
aas
push
cwtl
inc
std
cwtl
mov
or
pop
mov
push
mov
jae
jnp
cmp
xor
ljmp
pop
icebp
mov
push
stc
in
test
mov
ljmp
insl
inc
out
fsubrl
sbb
sbb
push
jnp
cmpsl
push
push
mov
in
jae
mov
nop
rorb
std
pop
test
call
aad
jge
sti
pop
jl
aad
iret
xchg
das
jae
jge
ret
imul
pop
jns
xchg
mov
icebp
mov
mov
xlat
loope
jnp
inc
add
xchg
jno
push
es
push
pushf
mov
clc
mov
lods
loopne
vpsrlw
fmuls
jno
add
lret
dec
sub
fsubrl
sub
outsb
jmp
push
inc
or
int3
adc
cwtl
or
or
lret
inc
mov
divb
ret
gs
jl
leave
and
scas
push
out
ljmp
xor
cmpl
ficoms
arpl
jbe
scas
lret
fcmovbe
mov
xlat
mov
stos
sbb
xchg
add
mov
mov
movsb
inc
sub
lcall
imul
fldt
jge
sahf
mov
enter
rorl
loope
push
adc
rclb
mov
inc
push
sub
inc
jb
test
scas
test
inc
and
add
testl
mov
mov
cmpsl
outsb
sbb
test
lret
daa
rcl
call
cltd
pop
in
in
adc
sbb
loopew
xchg
jo
fcmovb
lcall
inc
call
imul
mov
sub
out
repnz
sarb
imul
sub
push
push
pop
mov
ret
mov
rcrb
sub
sbb
scas
mov
andl
shrl
jno
movsb
rorl
cmpsb
in
test
ja
inc
mov
add
xchg
rolb
push
and
jns
in
loop
subb
mov
test
dec
and
js
das
sub
dec
xor
cwtl
mov
pop
movsb
or
jnp
dec
mov
jp
cmpsb
dec
das
inc
cmp
or
add
out
mov
sub
mov
int
fiaddl
push
cld
lret
sub
push
jle
addl
mov
aas
lcall
push
xor
or
pop
hlt
lahf
mov
inc
adc
jp
mov
in
dec
mov
push
cltd
cmpb
jp
xor
jb
add
and
ret
fsubrp
loope
adc
lock
pop
mov
push
jge
jl
lds
jno
fcmovne
mov
fmull
add
pop
cmpsb
sub
lcall
cld
mov
pusha
push
pop
leave
jbe
add
aam
add
in
jns
aas
fs
jge
rolb
xor
adc
sbb
pop
push
jp
je
popf
jl
add
pusha
jne
outsb
or
push
nop
cmp
sbb
push
mov
imul
sarb
in
rclb
bound
adc
rcr
xchg
pop
addr16
jno
xor
mov
addr16
dec
insb
repz
in
aas
jae
jp
test
cwtl
aad
mov
cmp
das
xor
inc
pop
push
adc
jns
les
mov
test
xor
mov
ja
add
out
cmpsl
pusha
pop
push
test
xchg
push
sub
jbe
sub
stc
mov
mov
fst
in
pushf
insl
pop
jp
daa
inc
push
les
cmp
pusha
loop
inc
das
popf
push
xchg
and
fidivrs
push
xor
inc
xor
sbb
fildll
in
cld
sarl
enter
int
out
xchg
mov
mov
mov
xchg
push
mov
cli
add
dec
cld
sub
lods
ret
fdivrs
je
mov
and
mov
js
sbb
idiv
inc
mov
rcrl
ret
lret
jbe
cld
repnz
mov
cmp
lock
repnz
es
xchg
dec
hlt
in
push
jmp
xchg
les
loope
or
or
xchg
cmp
cs
mov
in
jnp
sub
cmp
out
jmp
fimull
test
movsl
add
lret
ficompl
movsb
rcrl
shlb
push
lret
fidivrs
xchg
and
ljmp
cli
xlat
mov
loop
jb
das
lret
mov
daa
push
mov
jbe
lods
pop
adc
bound
bound
mov
mov
lods
sub
clc
aaa
mov
repz
xchg
sub
xchg
xchg
push
sti
push
pop
pop
fisubrl
aad
adc
or
add
pop
std
add
ja
mov
or
sbb
paddb
mov
ret
mov
jae
imul
push
dec
pop
adc
ret
sbb
adc
je
jle
scas
push
scas
out
test
inc
mov
out
leave
cs
xchg
test
ret
pushf
pop
push
fcoms
aaa
and
aad
adc
test
fwait
insl
push
lods
int
clc
jmp
jae
xor
cli
dec
in
int
nop
test
mov
fdivs
xchg
aas
movb
xchg
push
mov
pminub
sbb
pop
sarl
ss
pop
stos
push
mov
pusha
loopne
xchg
std
push
in
icebp
mov
test
xchg
ss
daa
xchg
lods
mov
bound
mov
nop
popf
xchg
das
xchg
pop
pop
jp
test
test
adc
pop
std
popl
xor
icebp
pop
out
jae
test
stos
fdiv
pop
mov
insl
xchg
pop
cmp
movsb
in
jno
mov
push
sub
out
push
mov
cli
push
mov
clc
adc
addb
lcall
adc
outsl
ljmp
aas
add
inc
push
xchg
mov
dec
push
fbld
jne
sbb
mov
cltd
adc
pop
notb
out
jl
pop
mov
mov
mov
pop
sub
cwtl
outsb
fisubrs
inc
and
pop
mov
push
bnd
pop
gs
and
lret
icebp
dec
inc
inc
ja
inc
mov
enter
in
aas
and
xchg
enter
cmp
jp
fs
lea
out
sbb
nop
push
fsubs
mov
movsl
xchg
xor
cmpsl
inc
pusha
xchg
fcompl
mov
ret
pop
test
adc
xchg
in
mov
loop
and
insb
inc
dec
enter
sbb
inc
outsb
rol
out
fwait
xor
jle
stos
jnp
xchg
into
lock
outsl
jg
lret
iret
add
and
hlt
or
outsl
dec
shll
cltd
push
int
aaa
insb
cmc
jns
aam
int3
ret
xchg
mov
into
add
and
test
xor
call
or
inc
sbb
js
fcmovnu
fdivs
jnp
sahf
mov
subl
in
sbb
repz
cltd
mov
jle
mov
data16
ffreep
dec
mov
sub
call
cmp
enter
dec
xor
pop
test
ret
mov
psrlw
add
pop
add
fisubrs
fldenv
enter
mov
fidivrl
call
sarl
jmp
dec
or
repz
roll
xor
push
rcrl
sbb
mov
lods
arpl
movsb
mov
das
rclb
xor
add
out
int3
pushf
sbb
or
jno
roll
nop
aad
ja
out
loopne
gs
jnp
in
out
push
cmpsl
sub
lret
jo
lret
and
pop
xchg
shrb
call
mov
fwait
fwait
psubq
ds
jecxz
mov
fbstp
stos
aaa
cmp
fucomi
mov
mov
jp
sbbl
and
cwtl
dec
push
mov
sbb
adc
cmpsl
cmpsb
mov
call
jge
inc
pop
xchg
mov
test
gs
jl
mov
lcall
mov
sahf
dec
stos
add
mov
loop
jp
into
or
out
sarl
xchg
pushf
mov
xchg
aam
int
dec
xchg
mov
sub
ds
dec
aaa
cmp
dec
in
in
adc
cmp
adc
mov
repz
cwtl
sti
dec
xchg
rorb
pop
lds
adc
jl
subl
dec
cmpsb
cld
popa
fnstcw
call
cld
or
les
sbb
xchg
inc
mov
fdivrp
dec
sub
int
pop
cmp
leave
or
aaa
out
gs
inc
orb
sub
orl
loop
sub
xor
ja
xchg
cs
mov
pushf
ss
xchg
add
mov
int
idiv
pop
mov
pop
sub
inc
sub
cmpsl
gs
cli
fcomi
hlt
jne
cmpsl
xchg
imul
cld
jg
test
in
push
push
mov
in
or
out
xlat
insl
fldt
repnz
sub
mov
lods
dec
out
or
push
add
jg
fdiv
xchg
loop
mov
xchg
xchg
mov
outsl
mov
popa
sub
push
or
mov
mov
rcr
in
pop
and
bound
cwtl
xor
push
push
pushl
lahf
mov
pop
sub
pop
icebp
data16
pop
add
outsb
dec
cmp
lds
and
scas
mov
fisubrl
lods
and
push
jle
lret
and
ss
jl
lds
adc
pop
movups
sarl
popf
clc
cmp
adc
inc
leave
mov
das
pop
sub
and
and
rolb
sub
scas
gs
adc
repnz
lods
inc
addl
mov
lds
mov
or
xor
ror
mov
cmp
fistpl
push
jp
xchg
mov
popa
out
cmp
jg
mov
cmp
clc
inc
jecxz
fldenv
fstps
mov
cld
aad
add
lods
xor
mov
faddl
mov
test
mov
adc
sbb
jg
ljmp
ficomps
loope
in
sub
mov
mov
inc
pop
push
jge
repz
es
andb
or
lahf
aas
bound
movsb
pushf
push
inc
pop
insb
sbb
sbb
dec
mov
stos
pop
or
cmpsl
pusha
mov
rclb
int3
fwait
push
mov
dec
insl
shll
pop
mov
in
lods
inc
push
lock
push
sbb
mov
jge
sub
adc
ret
ja
lock
cmp
shrl
inc
push
test
xchg
sbb
daa
cmp
xchg
cmp
push
and
push
mov
mov
xchg
insb
fucomi
sub
mov
pushf
jae
js
dec
xchg
mov
addr16
dec
pop
and
in
dec
mov
pop
mov
pop
xor
pop
fcmovnu
gs
pop
add
rorl
or
or
rorb
inc
xchg
call
rcrl
adc
test
shrl
add
mov
scas
dec
cmp
testl
in
mov
lcall
xor
mov
xor
nop
cmp
cmp
jl
push
sbb
fidivrl
inc
sarb
lahf
push
pop
cmp
xchg
pop
aas
out
lcall
xchg
xchg
mov
dec
mov
test
dec
bound
inc
dec
or
jmp
bound
jae
daa
shlb
and
pop
cmp
pop
xchg
in
outsb
inc
shl
push
xor
or
push
mov
and
std
jg
dec
sub
enter
stos
jb
push
into
sub
and
xchg
adc
mov
movsb
mov
lds
test
aaa
sub
arpl
fldt
sub
jge
jl
js
pop
pop
in
jp
cwtl
add
stos
enter
mov
insl
and
dec
xlat
mov
add
sbb
movb
stos
push
pop
inc
push
iret
les
icebp
ljmp
xlat
movsl
cltd
inc
shl
aam
and
sbb
add
mov
lret
inc
stc
repz
mov
sti
mov
sbb
in
call
pushf
hlt
jmp
xchg
gs
xor
lahf
scas
mov
pop
mov
add
cwtl
add
repz
sub
arpl
in
test
pop
sbb
cs
and
fmull
out
or
or
cmp
andl
lcall
jl
mov
stos
sub
cmp
in
fisubrl
dec
orl
int3
add
inc
mov
pop
pop
enter
push
xor
popf
xchg
andb
inc
ljmp
cmpsl
in
push
ficomps
xchg
notb
mov
adc
xchg
xchg
and
xchg
sbb
dec
push
pop
and
leave
aaa
push
shlb
sbb
cltd
push
hlt
je
mov
loopne
xchg
in
rcrl
lret
out
dec
sbb
sbb
in
push
mov
xlat
jge
or
inc
loopne
lcall
inc
in
push
repnz
sub
outsb
pop
movl
leave
out
out
movsl
aam
scas
sbb
dec
daa
push
xor
iret
push
and
and
xor
repz
sbb
fwait
inc
cmpsl
aad
pop
decl
lahf
mov
sub
stos
aas
out
mov
aam
mov
in
leave
ret
out
jnp
fsubrp
and
inc
jb
pop
cmp
popa
sub
mov
enter
mov
pop
fldt
repnz
mov
xchg
xorl
push
or
or
and
cmp
clc
or
pop
outsl
mov
xor
rcl
mov
dec
and
cmp
push
imul
in
mov
add
add
add
leave
jmp
fcoml
inc
jmp
daa
and
sub
sbb
dec
or
ret
in
and
sti
or
mov
pop
push
mov
loop
xor
jecxz
xlat
lret
pop
cld
mov
inc
push
cs
ret
ret
movl
mov
and
lret
or
pop
jmp
pop
repz
and
outsl
and
jbe
aas
jg
push
pop
push
out
loope
stc
xor
ret
mov
sub
inc
sub
popa
push
mov
mov
sub
cmp
push
xchg
fdivrl
cmc
pop
lcall
les
jns
mov
mov
jns
jno
push
add
outsl
cltd
and
int
aad
push
xor
ljmp
movsl
movb
xor
dec
into
mov
xchg
inc
jle
in
out
xchg
dec
int
push
imul
repz
cmp
or
ja
and
addr16
rol
add
push
jno
call
lock
pop
daa
sbb
std
xor
push
adc
cmpsb
fucomp
pop
xlat
lcall
xlat
sub
aam
in
inc
dec
test
pop
cltd
ss
pop
adcb
adc
aam
sbb
gs
es
fwait
jp
movl
addr16
shlb
lods
sbb
out
out
xor
lcall
mov
int
rclb
cmovge
in
add
ret
in
adc
cltd
mov
sbb
mov
mov
nop
push
lcall
cli
pop
iret
bound
cmp
push
fcomps
into
push
outsb
movsl
push
ss
dec
pop
stc
dec
iret
pop
jno
add
push
jnp
mov
cli
and
outsb
fucomi
in
xor
les
ss
shlb
js
pop
fdivrs
jbe
add
push
adc
rol
and
in
mov
jae
dec
jl
aas
ds
lods
inc
lods
dec
sbb
cmpsl
sub
xchg
push
dec
lret
pop
fldt
xchg
hlt
xor
xchg
aam
ss
ret
scas
mov
sub
popa
mov
nop
and
shrb
fistpl
dec
dec
mov
mov
mov
sar
addr16
push
ret
cmp
dec
cmc
stc
jae
adc
jmp
pop
push
jnp
mov
lret
inc
inc
xor
popa
fsts
pop
popa
std
sbb
pop
xor
rclb
decb
mov
fwait
out
and
out
sarb
and
daa
iret
ret
cmp
xchg
inc
popf
shlb
jg
xlat
pop
in
fiadds
xchg
fucomi
xchg
mov
dec
fstp
outsl
ljmp
cs
mov
cwtl
pop
sbb
jmp
inc
cli
and
pop
mov
xchg
fsubs
adc
xchg
jb
mov
negb
and
mov
pop
add
sub
popa
aaa
cmp
mov
jl
int3
sbb
int3
in
jbe
das
push
mov
pop
lea
aas
out
cmp
int
xor
sarb
pop
ds
sub
add
mov
xchg
hlt
leave
pop
xor
pop
frstor
popa
push
aas
cmp
scas
jl
pop
je
fcmovnbe
xor
enter
ret
loopne
fs
leave
sahf
rclb
adc
xor
aaa
xlat
and
ds
imul
iret
ds
cwtl
js
xchg
stc
adc
ds
pop
scas
mov
dec
loop
push
jmp
clc
pop
xchg
add
das
push
in
sub
loop
lret
aas
leave
scas
push
or
or
movsb
arpl
push
add
pop
adc
cmp
stc
out
xchg
adc
out
clc
push
push
and
mov
data16
or
js
cs
push
repz
adc
jo
lods
sbb
mov
pop
push
orl
jne
arpl
mov
fmul
mov
pop
and
sub
outsl
imul
filds
push
jg
mov
int3
xchg
mov
xor
xor
out
outsl
fdivrl
dec
xchg
out
cmp
hlt
add
add
push
call
inc
push
jg
xchg
mov
mov
rcr
outsb
int
cmp
inc
or
in
outsb
in
jnp
xchg
fxch
ret
ror
fldl
push
add
sysenter
cmp
push
adc
les
loop
fs
mov
ds
jmp
lcall
cs
roll
jmp
cmpsl
mov
or
stos
mov
mov
aad
andl
call
popf
mov
push
mov
add
cmp
add
das
test
mov
int3
xlat
push
lcall
pop
dec
into
mov
repz
es
jle
pop
mov
repnz
mov
mov
sub
mov
rolb
cmp
into
sbb
ret
pop
jge
popf
mov
hlt
cmp
cmc
dec
and
fnstsw
cmc
mov
mov
jb
xchg
cs
cs
sub
dec
rorl
es
out
mov
mov
dec
aas
push
and
out
mov
data16
inc
add
test
adc
mov
lcall
in
or
push
faddp
lods
xor
and
push
pusha
hlt
data16
inc
push
movsl
leave
scas
xchg
mov
mov
lret
cmp
les
scas
sbb
addl
xorl
aas
mov
cli
mov
insb
xor
adc
sub
push
jns
lods
pop
fiaddl
jne
mov
imul
mov
fcoms
cld
insl
pushf
rclb
push
hlt
jl,pn
jns
jno
pop
test
adc
mov
cld
loope
lahf
sub
rcr
dec
xlat
mov
lcall
rcll
jbe
cmp
std
and
cmpsb
lods
push
into
mov
lea
sbb
push
andl
cmpsb
cli
inc
das
jmp
mov
cmpsl
sub
ljmp
push
data16
xchg
push
outsb
cltd
xlat
out
call
or
pushf
jp
pop
sub
xchg
test
pop
in
xor
mov
repz
aam
por
xchg
or
sub
sub
sarb
lahf
ret
mov
add
jle
cwtl
push
dec
in
iret
xor
jecxz
mov
shll
sbb
fsubrl
dec
xchg
mov
jecxz
pop
shll
xor
adc
xchg
in
push
add
adc
stos
fs
xchg
xchg
cmpsb
add
ret
pop
movsl
icebp
or
out
cmc
dec
mov
adc
into
push
jnp
mov
jmp
mov
cmpsb
xchg
xchg
imul
add
jmp
or
mov
pop
cmp
ljmp
mov
div
fsts
sbb
rorb
jb
testb
pusha
mov
mov
pop
in
mov
mov
inc
fdivs
cld
stc
sar
stc
mov
push
lret
loop
stc
test
mov
jl
lcall
adc
scas
test
and
cltd
jl
in
sbb
pushl
test
test
mov
lret
mov
in
jbe
dec
push
push
clc
mov
fs
pop
dec
outsw
pusha
scas
cmc
nop
jle
xchg
js
cmpsb
repnz
sub
sub
pop
and
mov
mov
sbb
adc
jp
sti
rorb
mov
es
add
push
or
lds
int3
call
sbb
rcrb
jmp
inc
inc
mov
and
mov
and
dec
mov
jmp
cmp
icebp
mov
push
in
mov
cmp
dec
vmwrite
ds
mov
cmpsl
push
rcrl
mov
inc
xchg
and
ret
mov
outsl
push
and
fisttpl
mov
sbb
fisubl
rclb
sub
flds
jo
dec
ljmp
pushf
shlb
outsl
cwtl
ljmp
adc
mov
lret
rcrb
inc
cmp
mov
nop
cmp
mov
call
shl
scas
mov
dec
test
jo
sbb
push
movsb
dec
inc
xor
popf
dec
out
imull
or
dec
int
js
cltd
sbb
push
mov
mov
inc
hlt
mov
cmpsb
adcl
adc
sub
cmp
std
cs
push
xchg
arpl
and
movsb
sbb
jo
loope
sar
jae
stc
gs
mov
xor
inc
pushf
push
or
push
iret
mov
push
mov
jecxz
and
ficoml
adc
nop
inc
fidivrs
xchg
int3
mov
dec
test
stos
leave
mov
dec
cmc
sub
xchg
jmp
or
cld
xorl
mov
mov
inc
rcrl
lcall
pop
bound
test
imul
inc
sbb
js
mov
sub
sub
popf
dec
adc
dec
je
das
pop
cmp
in
pop
xorb
ljmp
aad
test
xchg
mov
in
xchg
pop
popa
scas
mov
jecxz
testb
into
pop
enter
test
cmp
pushf
adcl
push
adc
jnp
in
int3
js
mov
stos
mov
lret
mov
xor
sarl
adc
insb
lahf
xor
popa
les
fstps
push
dec
in
mov
mulb
sti
pop
inc
leave
inc
jae
dec
mov
sbb
cmp
and
jecxz
mov
jb
je
sub
aaa
push
loopne
das
mov
push
stos
cmp
xchg
stos
test
hlt
outsb
aad
sub
push
pop
out
and
idivl
xchg
in
aad
xor
xor
xor
into
out
lds
push
fisubrl
jbe
mov
sti
enter
inc
movsl
xor
adc
movsb
xchg
mov
sub
pop
xchg
push
addb
lret
daa
pop
adc
lcall
sarb
repnz
cli
or
sub
repz
mov
push
pop
adc
jno
std
add
and
mov
inc
mov
mov
loopne
push
ds
xchg
shll
fnstcw
clc
pushf
jb
icebp
lods
out
out
xchg
fsubl
and
lcall
jbe
daa
out
cmp
inc
cmpb
insl
scas
out
mov
xor
shlb
mov
sub
xchg
jns
sub
stos
cmpsb
data16
cmp
jge
scas
inc
arpl
inc
cld
flds
mov
shr
stos
mov
ss
daa
sbb
shlb
xchg
out
lods
addr16
repz
dec
xchg
dec
cmp
stos
jp
mov
and
jne
cmp
cmp
fidivl
jo
andb
mov
mov
loope
scas
fcompl
or
push
inc
cld
and
jae
popf
sub
push
cmp
push
pop
xchg
jne
loope
pop
test
loope
jbe
loopne
mov
aaa
mov
mov
fs
dec
xor
or
mov
outsb
cmp
int3
popa
ret
aas
mov
pop
inc
idivb
in
cltd
or
or
mov
sti
inc
mov
cmpl
push
add
xor
rcl
notb
ds
enter
sti
incl
inc
stos
xchg
sub
jbe
lcall
lret
stos
mov
mov
lods
lods
mov
adc
add
xorl
jecxz
xlat
add
mov
mov
pop
sbbb
test
ds
mov
es
in
addr16
push
mov
xchg
call
mov
ret
cmp
aas
jae
cwtl
push
in
call
fstp
sbb
sbb
repz
stc
xchg
int3
fdivrl
dec
cmp
mov
mov
pop
lds
xchg
xor
dec
mov
sbb
jbe
sahf
lea
lock
jnp
adc
loopne
cmp
pop
sub
enter
adc
add
dec
in
xor
repnz
mov
xchg
movsl
shl
call
sbb
inc
jae
enter
add
jns
fistl
in
inc
sahf
sbb
lds
mov
cmc
jecxz
jns
push
pop
mov
pop
std
lds
andl
shrb
pop
sbb
pusha
mov
in
gs
cs
push
mov
fsubs
shll
xchg
out
dec
lret
ss
sub
in
loope
or
adc
push
jb
xchg
out
loopne
lock
gs
cmp
inc
dec
pop
es
fs
iret
mov
rol
aaa
std
daa
inc
clc
leave
jecxz
mov
mov
out
ds
stos
outsl
mov
enter
hlt
bound
add
adc
jp
jp
mov
mov
int3
xor
in
fucomi
stos
adc
insl
sti
cs
imul
pop
push
and
sahf
or
add
nop
in
in
mov
arpl
add
lods
fidivrl
stc
add
js
mov
push
fcmovbe
sarb
rorl
or
imul
arpl
fsts
std
addr16
jle
push
mov
xlat
jns
inc
push
wbinvd
xchg
add
sti
mov
mov
repnz
xor
add
cld
inc
out
lock
lcall
mov
lds
stc
dec
mov
push
xchg
add
bswap
or
repz
push
jge
inc
sbb
mov
mov
push
loope
in
out
nop
push
cltd
test
add
jecxz
jle
pop
dec
inc
and
fwait
movsl
sbb
and
cwtl
add
rorl
sbb
dec
sbb
pop
cs
xchg
stos
adc
lods
jmp
inc
ljmp
insb
les
repz
mov
repnz
xor
shr
jg
nop
mov
movsl
sbbb
xchg
aad
sub
insl
aas
adc
jne
xchg
popf
imul
imul
mov
int3
push
lret
sbbl
scas
sbb
sub
mov
aas
xor
test
cmpsb
leave
test
push
lods
pop
lret
or
pop
push
imul
fwait
jge
jnp
jae
scas
lods
dec
dec
pop
push
and
adc
xchg
ss
movsl
pop
bnd
xchg
ss
lds
bound
xor
fstpt
jno
js
into
test
int3
mov
psubq
in
sub
jecxz
jo
jnp
bound
fistpl
daa
jmp
mov
push
sub
call
xchg
in
daa
data16
sbb
insl
add
js
pop
or
xchg
jmp
scas
dec
ret
xlat
mov
fwait
mov
xor
cli
out
dec
imul
cli
into
mov
dec
fidivl
mov
mov
popl
popf
mov
jecxz
fistl
sti
dec
int
sbb
fnstcw
dec
xchg
jle
lods
gs
movsl
inc
mov
decb
fistpll
pushf
movl
pop
insl
mov
inc
inc
cmp
lret
push
into
lcall
cli
fistpll
dec
mov
sbb
fdivl
rolb
adc
popf
xchg
sub
mov
sahf
jae
push
lret
cmp
shll
in
xchg
insb
add
mov
pop
inc
or
push
pop
push
sub
inc
mov
dec
xchg
mov
cmp
mov
push
ljmp
pop
push
push
fs
arpl
xor
jle
xchg
aam
loope
xor
push
inc
inc
lret
jle
popf
mov
orb
sbb
ljmp
cmp
mov
jns
sub
mov
fst
cmpsb
clc
and
jo
dec
push
mov
ja
das
inc
sub
xchg
adc
jo
in
jecxz
fcoml
out
mov
sbb
pop
mov
ss
dec
ss
mov
into
aas
push
fwait
call
sbbb
fcoml
add
push
mov
adc
push
pop
pop
iret
or
out
mov
add
and
or
arpl
xchg
add
jno
add
add
xchg
push
hlt
mov
mov
rolb
ss
mov
inc
scas
scas
cmpsb
mov
cld
enter
popf
xchg
xchg
xlat
and
sbb
in
and
pop
mov
mov
adc
pop
xchg
xchg
mov
pop
adc
adc
cmp
in
xor
push
andl
inc
es
mov
jl
adc
testl
sub
pop
xor
add
xchg
xchg
test
nop
jle
xor
cmp
and
imul
out
out
popa
fcoml
test
lcall
pop
jne
mov
cmp
loop
std
jle
fbld
gs
mov
cltd
sbb
add
enter
subl
fistpll
ficomps
push
xchg
data16
lret
aad
inc
jp
repnz
sahf
xor
mov
push
jmp
push
lods
inc
cmpsl
dec
add
jae
xchg
or
xor
fsub
cld
lods
mov
rcr
test
out
mov
cltd
sbb
xchg
pop
inc
pop
sbb
push
xchg
inc
sbb
jb
call
sub
adc
sbb
jo
xchg
shl
stos
pop
mov
repnz
gs
enter
out
push
das
add
enter
das
stos
scas
ret
aas
insb
fimull
cmpsl
push
jge
push
cli
popf
cs
loope
pop
mov
jno
shll
aaa
gs
xor
jp
xchg
subl
cmp
and
shrl
xchg
or
push
fwait
adc
testb
mov
stos
or
cmpsb
cmpl
inc
imul
xor
aam
lea
mov
es
push
mov
in
shll
jo
or
sarb
cmp
sbb
cwtl
loopne
jae
and
jbe
sub
or
testl
jge
mov
int3
inc
addr16
adc
xlat
movsl
cs
repz
fidivl
loopne
adc
dec
imull
dec
rcll
jle
cwtl
xchg
pop
adc
fdivrl
das
stos
jp
push
cli
mov
bound
js
lcall
mov
lds
cmp
push
cli
cmp
sub
adc
mov
push
fucomip
rcrl
pop
jge
push
xchg
mov
or
or
dec
xor
adc
xchg
mov
mov
xchg
popf
and
jge
lret
push
mov
jle
ret
ret
call
or
scas
inc
aam
mov
sub
aaa
test
and
idivb
sbb
cltd
pushw
cmp
fbld
pop
enter
adc
out
gs
pop
iret
movsl
cwtl
js
jns
movl
and
call
test
or
jmp
add
in
fs
arpl
in
es
int
mov
push
xor
xor
cs
sbb
out
adc
or
mov
leavew
in
cltd
loopne
cmp
dec
jbe
inc
xchg
pop
jle
pop
leave
pop
incb
outsb
add
fmull
push
dec
mov
fcmovu
movsb
fidivs
sahf
or
je
pop
pop
adc
adc
repz
loopne
ss
add
js
jge
dec
call
enter
xor
xchg
dec
jns
mov
call
adc
cli
jle
sbb
sbb
pop
iret
dec
cmp
push
hlt
sbb
sub
fsubs
outsb
je
daa
lret
insl
testl
daa
mov
sub
and
adc
fidivl
xor
popa
inc
sbb
adc
cmpsb
std
lods
stos
hlt
cs
aaa
sti
lret
clc
xchg
cmpsl
ror
xor
popa
sbb
cmc
fsubr
dec
add
pop
lods
xchg
jl
mov
sbb
test
sarb
jge
aad
das
leave
xor
out
jnp
push
es
insb
data16
fdivs
sbb
add
shll
xor
cltd
jecxz
rolb
mov
sbb
xchg
push
sbb
clc
cmp
sub
dec
inc
push
adc
push
test
out
insl
in
xor
pop
jb
gs
mov
add
cmp
pop
xor
sub
xchg
repz
ret
pop
adc
and
inc
or
ljmp
fs
or
popf
push
lahf
into
push
jp
add
daa
sub
jo
js
fisttpl
enter
das
out
fisubrs
imul
jne
mov
daa
sarb
sub
fidivl
pop
out
sti
fwait
add
mov
push
xchg
leave
ss
jp
fstps
dec
cld
xor
out
lods
sbb
jl
jg
xor
mov
int
movsb
pop
mov
pop
adc
mov
cmp
or
sbb
enter
aas
cmp
pop
sub
cmove
fistl
out
dec
fimuls
jnp
fistl
mov
xchg
popf
rorl
rcr
int3
dec
movsb
adc
inc
ficoml
pop
adc
stos
mov
in
adc
jmp
jle
or
shlb
in
cli
pop
adc
jg
add
scas
stc
dec
insb
push
adc
and
cli
or
dec
lcall
mov
mov
jae
in
xor
nop
and
or
cmp
aaa
mov
ljmp
scas
and
sbb
and
sbb
lcall
test
sbb
adc
pop
mov
xor
orb
sti
cmp
adc
imulb
imul
and
sahf
cs
xchg
sbb
push
mov
jg
dec
pop
adc
imul
and
into
les
out
push
repnz
ja
shll
sbb
loopne
fimuls
adc
ss
ret
loope
pop
add
out
out
mov
push
push
xor
int
or
in
and
cmpl
or
ja
cltd
jb
xor
ds
push
xchg
pop
adc
sub
jp
gs
aas
iret
call
pusha
out
sub
pop
pop
ss
push
das
sub
add
and
addl
xchg
clc
jne
icebp
loop
cmp
pop
pop
mov
out
jb
inc
dec
jno
ficompl
xchg
sub
mov
xchg
push
je
cmp
xchg
popf
push
push
loop
pusha
inc
jno
aaa
loope
push
and
cld
mov
in
pop
sbb
imul
xchg
mov
dec
pop
mov
xchg
icebp
xor
scas
stos
mov
xchg
addr16
jnp
lock
sub
xchg
pop
leave
insb
popa
xor
mov
lahf
scas
repz
xchg
pop
add
insl
sbb
push
dec
imul
les
bound
addr16
loope
aas
push
cmpsb
cmpsb
scas
dec
shrl
lds
inc
and
jle
jmp
push
mov
leave
jb
sbb
xchg
insb
loope
jge
in
mov
xchg
and
pushf
aas
popf
mov
loopne
rcr
mov
neg
cmp
xor
ret
and
or
cmp
negb
or
movsb
in
daa
push
push
jb
adc
or
push
or
ljmp
loopne
or
lret
xor
pop
dec
mov
dec
dec
out
inc
scas
ss
mov
mov
push
mov
jl
scas
and
leave
push
cwtl
pop
xchg
push
cmp
lods
sub
decb
int
and
ret
or
out
mov
jo
arpl
das
nop
clc
lret
or
sahf
ljmp
aad
pop
fsubs
sbb
insl
syscall
or
inc
arpl
xor
mov
jo
pushf
mov
femms
xor
xor
insb
lahf
cmp
scas
inc
imul
cmp
fwait
sbb
mov
das
mov
int
stos
jle
or
out
das
push
scas
cmp
pop
mov
adc
add
repnz
inc
iret
jg
and
xor
adc
in
shr
lcall
imul
cli
lds
xchg
jp
iret
aaa
jns
pop
aad
jecxz
dec
xor
les
int3
inc
shll
push
push
insb
cmp
mov
or
and
lock
jmp
push
mov
mulb
push
aas
cmp
gs
add
aad
mov
stos
loopne
out
loopne
pop
inc
es
cmp
xchg
xchg
pop
lcall
dec
pop
decl
pop
fnstcw
pop
cmp
repnz
mov
int3
xor
xchg
sbb
jmp
mov
cmc
lods
in
sbb
inc
stos
xlat
rcrb
pop
add
scas
shrl
repnz
stc
xchg
icebp
jne
scas
shll
lahf
or
sub
sbbl
jnp
push
enter
fcomps
fucom
popa
dec
dec
add
test
adc
je
pop
xchg
cmp
jnp
dec
xor
ret
dec
daa
mov
inc
repz
in
rcrl
xor
je
mov
cltd
and
mov
popl
sahf
xchg
cmpsb
mov
mov
rcll
mov
jne
aad
xor
jecxz
lret
nop
shrb
int
cmpsb
mulb
dec
adc
pushf
aad
testl
sub
insb
pusha
ds
std
fnsave
dec
ret
jle
or
push
leave
mov
mov
and
or
add
outsl
lea
inc
daa
int3
aas
xchg
notb
fidivrl
inc
fldt
push
out
push
jae
adcb
jecxz
jo
jbe
push
mov
push
out
adc
jno
push
sbbl
sub
js
mov
sbbb
dec
jg
aam
inc
icebp
fs
jp
movsb
int
inc
shrb
mov
add
ss
mov
and
add
jge
cwtl
hlt
sub
test
gs
test
push
sub
dec
lock
sarl
pop
movsl
repz
cmp
cmp
outsb
fmuls
and
sarb
mov
iret
adc
int3
add
dec
sub
mov
cmp
fwait
or
cmp
sbb
fdivs
sub
fidivrs
nop
out
cmp
mov
sbb
xor
xor
sbb
clc
les
mov
jg
fwait
scas
push
adcl
adc
jno
pop
xchg
loop
loopne
jo
adc
or
jae
dec
pusha
nop
loope
or
fistpll
scas
daa
jb
cmp
add
push
ret
mov
rcrl
mov
push
and
mov
out
repz
test
pop
movsb
call
mov
insl
pop
or
or
pop
in
pop
mov
cmpsb
das
mov
inc
nop
rsqrtps
cmp
insb
add
loope
jge
hlt
aas
lock
ss
jae
sbb
lcall
adc
repz
clc
outsl
lret
xor
mov
mov
mov
sbb
rcl
mov
mov
mov
adc
jp
idivl
ss
dec
fildll
xchg
pusha
rolb
sub
lret
dec
pmullw
jb
mov
xor
mov
rorb
cmp
stc
sub
mov
lret
ficompl
fsub
in
push
cmp
cmp
outsb
fcmovnb
hlt
mov
add
xchg
das
push
ret
in
or
imul
aam
lret
lret
cmpsb
pop
pushf
xchg
aam
sti
out
jmp
out
mov
xor
mov
push
pop
pop
mov
cmp
cmpl
xchg
push
mov
push
jae
ret
test
dec
call
inc
notb
into
jb
fdivrs
into
ljmp
aaa
loope
add
dec
inc
jmp
inc
outsb
and
cwtl
mov
jmp
mov
hlt
add
jne
mov
push
mov
cwtl
mov
jb
jnp
aas
jp
xchg
pop
cmp
mov
in
loope
mov
test
inc
pop
inc
pop
out
sbb
xchg
sub
and
dec
out
sahf
aad
addb
and
insl
popf
fcompl
call
stos
in
xorl
and
addr16
mov
push
loopne
sti
dec
sti
adc
xor
dec
push
sbbb
iret
lods
jno
xor
loope
cld
or
lods
jo
int3
adc
jnp
or
mov
testb
lock
jp
or
or
jle
bound
stos
sub
and
mov
or
pop
jmp
xchg
arpl
add
enter
clc
or
arpl
vmread
ds
add
fbld
mov
out
xor
lea
inc
ret
lret
insl
sub
mov
scas
lcall
sub
clc
das
pop
mov
xchg
das
jno
loopne
pop
push
cmp
cmpsl
adc
int3
mov
sub
movsb
insl
sbb
sahf
sbb
xchg
sbb
scas
mov
jg
movsl
xlat
fsubs
mov
nop
je
jl
nop
pop
movsb
dec
add
or
jg
push
mov
push
inc
xchg
dec
sbb
jns
mov
sti
lds
xor
inc
stc
std
cmp
sub
mov
mov
jmp
dec
push
mov
mov
inc
out
push
inc
xlat
hlt
cmpsb
push
mov
xor
dec
ja
adcb
jbe
fmull
mov
jns
lahf
in
xor
sub
cmp
popa
out
call
push
pop
jnp
mov
pop
lock
addl
inc
lea
scas
outsb
xor
pop
dec
fs
xchg
jge
insb
dec
jmp
outsl
xchg
sahf
jo
inc
ret
cmpsb
std
sub
shlb
mov
aam
xchg
add
lods
push
adc
dec
inc
or
adc
lahf
movsl
icebp
mov
adc
or
jae
sub
mov
lret
mov
xor
mov
outsl
jecxz
add
cmpsb
add
gs
sub
mov
dec
mov
mov
xor
add
jg
leave
xchg
das
ret
pop
xor
jmp
outsl
lea
stc
lds
inc
mov
imul
mov
xor
inc
loope
mov
pushf
inc
andb
out
mov
mov
cmp
movd
xchg
sub
addr16
std
mov
inc
leave
orl
outsb
mov
cmp
fstps
sub
jne
push
or
aad
adc
push
mov
and
popl
xchg
in
xor
add
jbe
jo
push
rol
movsb
adc
in
push
lcall
add
sbb
std
xor
out
int3
pop
mov
popa
addr16
push
out
rorl
push
das
negl
cmp
sub
dec
lea
cmp
jnp
jle
lret
ret
jae
roll
cmp
jecxz
push
loopne
or
nop
sbb
pop
sbb
ds
and
and
enter
jp
cmp
popa
inc
lret
inc
popa
fisubl
test
cmp
popa
inc
je
add
sbbl
and
in
xchg
mov
dec
ja
push
ss
pop
cmp
and
sbb
dec
insl
fmulp
xor
jnp
mov
leave
aad
pop
sub
insl
xor
jg
aas
mov
std
clc
inc
movsl
sub
mov
jb
add
add
dec
sub
add
testb
std
mov
xor
fdivrl
icebp
hlt
shl
je
or
daa
ret
jle
inc
repnz
jp
push
jno
movsb
mov
fisubrl
inc
or
jecxz
insl
ljmp
pop
mov
scas
push
pop
pop
adc
jno
out
out
pop
in
inc
sbb
jecxz
insb
arpl
outsl
mov
dec
lds
lea
pop
cs
into
je
push
mov
pop
adc
push
cs
daa
jno
and
add
mov
das
mov
xor
xlat
rcll
out
and
inc
ds
xor
loope
enter
in
dec
or
iret
mov
add
xor
mov
call
out
imul
inc
xchg
je
cmpsb
inc
jmp
xor
into
pop
gs
mov
or
xchg
cmpsb
xor
sub
dec
xor
popa
sbb
inc
out
push
negb
fs
dec
add
xor
push
add
int3
sti
xchg
adcl
or
and
mov
push
mov
and
jg
sbb
int
scas
pop
ja,pn
out
mov
dec
jne
cmp
jae
icebp
inc
stos
cs
stc
cmc
in
mov
xchg
pop
mov
shll
in
fmul
pop
mov
rclb
mov
cmp
addr16
mov
sbb
pop
pusha
test
test
test
je
push
add
icebp
std
test
mov
xor
cltd
rclb
lahf
fiaddl
mull
sahf
jno
lock
arpl
xchg
into
loopne
push
addr16
lods
repnz
mov
into
xchg
xchg
cmp
mov
pop
je
jae
jnp
push
jnp
adcb
iret
cmp
adc
xor
addr16
test
or
iret
popf
rclb
dec
insb
cwtl
aam
jo
imul
mov
jns
pop
lret
mov
jle
adc
mov
sbb
fildll
adc
shl
movsl
adc
inc
sub
insb
lock
out
test
test
insb
aam
mov
adc
sub
test
mov
jmp
aad
mov
jg
jl
cmp
push
movsb
adc
scas
das
in
push
loopne
vpaddq
out
test
das
lahf
jmp
in
lahf
xorl
mov
mov
cmpsb
sahf
mov
shr
out
dec
xor
xor
xor
mov
hlt
mov
dec
mov
out
mov
std
aas
shld
lea
sub
jae
push
and
mov
push
mov
cmpsl
cwtl
testb
dec
adc
dec
xchg
xor
or
cld
add
adc
ja
jle
scas
sti
sbb
aad
movsl
cmp
das
inc
inc
add
aad
jecxz
aaa
fucomi
mov
lcall
mov
or
lods
pop
dec
cmp
les
popf
stc
insb
cmp
fwait
imul
popf
jbe
xchg
pusha
sahf
mov
sub
cmpsb
and
test
inc
push
inc
fcmovbe
dec
imul
aaa
xchg
sub
repnz
pop
cmpsl
out
push
test
dec
icebp
int
jecxz
stos
cmp
mov
fsts
push
dec
sub
scas
add
pop
loope
loop
inc
cmp
cs
jae
jle
iret
dec
loope
inc
xchg
push
add
or
push
je
xlat
pop
sub
stc
adc
lahf
gs
or
cmp
cmp
or
mov
dec
in
js
fidivrl
cmpl
jp
imul
sub
cmpsb
jns
cltd
push
push
outsl
faddl
gs
xchg
insb
aaa
sub
lds
out
xor
clc
dec
pop
loop
std
mov
mov
mov
in
add
mov
xchg
movsb
lret
lods
mov
sti
int
sub
sub
notl
add
add
addr16
bound
xchg
int
pop
test
add
xor
xor
pushf
pop
pop
repnz
cmp
or
rcll
sbb
loopne
lods
ret
xchg
push
push
lahf
xor
je
pushf
int3
push
push
mov
insb
pop
xchg
cmp
sahf
and
in
adc
dec
outsl
xlat
or
adc
out
xchg
jno
xchg
divl
jmp
jg
leave
mov
enter
inc
inc
ror
in
cmp
aas
xor
xor
movsl
and
xchg
jbe
jne
cwtl
xor
pop
cmpsb
xor
lcallw
data16
jp
ja
arpl
repnz
mov
mov
jne
add
fisubrs
xchg
sub
xchg
mov
cmpsl
xchg
dec
jmp
or
inc
int3
mov
mov
into
fsubrs
test
int
cmp
sub
xchg
out
das
aam
or
pop
sub
xlat
scas
inc
popf
stc
icebp
loope
adc
dec
test
bound
xchg
xchg
xchg
mov
or
mov
cmpsb
iret
mov
jb
pop
inc
ja
push
out
hlt
aas
ds
loopne
cmc
dec
hlt
ret
mull
push
mov
stc
ss
call
pop
mov
and
daa
out
fisttpl
icebp
fwait
dec
adc
and
sbb
cmp
stc
lea
jecxz
not
divl
mov
fdivrs
xorb
sbb
inc
repz
daa
inc
mov
mov
push
cld
push
shrb
pop
sub
leave
push
add
aas
shrl
adc
pop
dec
cld
inc
cmc
in
xchg
pop
lds
test
out
adc
push
cltd
adc
jp
add
movsb
movsb
xchg
push
mov
dec
mov
sbb
pop
into
mov
sub
push
pop
js
dec
pop
stc
nop
sbb
stc
jmp
ljmp
jmp
or
add
add
dec
testb
bound
insl
jl
insb
int
scas
or
repnz
inc
mov
dec
stos
push
int
outsl
pop
and
addb
add
call
push
data16
cmp
ds
stos
pop
js
mov
shlb
imul
pop
cld
arpl
shlb
in
lock
jle
ret
idiv
fwait
mov
or
mov
insb
dec
push
push
inc
xchg
into
lds
mov
je
pop
inc
mov
negl
fld
sub
adc
lds
adc
dec
jle
aas
ds
cmp
xor
pop
ljmp
mov
int
mov
dec
or
xchg
std
dec
out
push
clc
dec
push
jno
or
pop
mov
mov
imul
jle
xor
mov
sbb
mov
jecxz
ljmp
loopne
mov
jns
mov
mov
sbb
dec
fimuls
rcrb
fdivrs
sub
ret
inc
stc
stc
addl
loop
sub
mov
aas
aam
xchg
cmp
out
xor
jno
pop
pushf
ud1
inc
xor
aad
push
jge
jge
pop
or
and
outsl
xchg
jle
mov
or
pop
lahf
pop
sub
clc
imul
push
popf
mov
push
punpcklwd
jl
shlb
jecxz
loop
ja
sahf
sahf
xchg
pop
inc
sbbl
push
scas
rclb
mov
aaa
lahf
aas
jae
std
xchg
fsubl
rcr
les
arpl
pop
pushf
cmp
gs
jb
sub
in
jbe
les
mov
into
jmp
add
jge
fnsave
ja
ljmp
std
inc
cld
push
arpl
pusha
rcrb
je
lock
lods
mov
inc
shlb
fidivrs
repz
ss
mov
int3
int
pop
add
jne
dec
icebp
add
inc
cmp
or
mov
sarl
loopne
mov
fcom
gs
xchg
daa
lock
lret
adc
test
mov
push
decl
mov
adc
aaa
cmp
mov
mov
inc
lods
int
pop
es
cwtl
xchg
loop
mov
cmp
xchg
pop
xorb
mov
lock
xor
daa
jno
dec
sbbl
dec
mov
adc
stc
jmp
incb
nop
pushf
cmp
fnstcw
and
pop
xlat
push
cltd
test
fwait
adc
sarl
es
inc
cli
dec
sub
pop
out
cmpsl
adc
pop
jge
dec
push
popa
shll
add
xchg
mov
inc
in
fwait
jae
leave
in
aam
mov
lods
movsl
imul
cmp
scas
mov
stos
mov
sbb
mov
push
lahf
ja
adc
xorb
cmp
mov
stos
mov
cld
push
and
je
ret
push
fstl
roll
xchg
mov
dec
out
lcall
lcall
in
iret
in
push
ret
ss
and
fistl
push
gs
or
fldenv
xchg
data16
and
out
sarl
jmp
popa
xor
ljmp
sarb
mov
scas
push
stc
pushf
mov
ja
inc
mov
inc
shrb
push
mov
mov
mov
sbb
and
pop
pop
pusha
mov
xor
jne
jg
das
loop
outsl
push
mov
adc
xchg
nop
leave
lcall
dec
jecxz
test
sbb
repz
jle
nop
pop
mov
push
and
add
es
cli
dec
jo
xor
ja
push
imul
cmp
lock
mov
cmp
and
loopne
mov
push
cmp
roll
or
in
aaa
and
jno
imul
imul
lea
in
jp
or
mov
js
jecxz
pop
or
int
cmp
mov
repnz
sub
lods
mov
sbb
sub
into
popf
cli
leave
adc
int
jb
call
mov
enter
xchg
fxam
mov
pop
mov
enter
pushf
sub
push
adc
sub
and
or
xchg
rolb
fstpt
xchg
add
mov
rcrl
and
pop
sub
push
mov
mov
scas
or
add
fcmovne
xchg
xor
frstor
mov
jl
les
jo
lods
xor
addb
sahf
ret
inc
add
stos
std
icebp
ret
lret
roll
and
xor
jl
and
lea
jo
lds
sub
pop
sub
pop
inc
pop
push
ja
in
mov
jecxz
das
out
push
ss
cmp
dec
ret
mov
add
outsb
jp
pop
push
mov
in
sub
lahf
fnsave
aaa
out
ficoms
cmp
int
cmp
mov
jmp
je
les
mov
xchg
lahf
aaa
leave
xchg
cmp
mov
xchg
push
pop
jmp
pop
js
cmc
test
xchg
lods
jmp
sbb
or
pushl
xor
mov
cwtl
aam
and
dec
in
in
aam
dec
cltd
xor
sub
jns
nop
fbld
dec
inc
pop
xor
test
inc
mov
mov
and
fdivl
push
ret
mov
bound
and
icebp
data16
das
adc
mov
fmul
mov
and
and
xchg
sahf
pushf
push
mov
mov
imul
lock
sbb
sub
jbe
pop
cld
jge
jmp
mov
shrb
ja
aaa
popf
leave
or
test
lcall
nop
fstl
and
mov
jo
lcall
imul
bnd
inc
pop
lret
in
arpl
jge
popa
push
rclb
mov
mov
out
testl
fistpll
cmpl
iret
outsl
dec
cmpsb
xchg
inc
xor
in
out
xchg
inc
lods
outsb
cmp
add
rcll
inc
pop
push
and
xor
popf
fiaddl
mov
daa
shll
push
call
sbb
xchg
hlt
jnp
pop
cmc
adc
popa
adc
inc
xchg
lods
je
dec
fwait
stc
pop
aad
add
jbe
test
lahf
cmp
outsl
inc
cmp
clc
ss
daa
inc
dec
sub
lods
mov
and
divl
ret
mov
call
push
scas
std
imul
push
sub
sub
cmp
repz
or
xchg
sbb
pop
mov
mov
xor
ret
sub
jmp
popf
rorl
push
xor
std
aad
imul
fdivl
iret
xor
cli
aad
loope
cld
call
cmp
idivl
adc
popa
cmp
push
shl
js
loopne
or
sarb
jbe
lods
push
pop
std
jg
inc
pop
or
icebp
jbe
popf
sbb
sbb
sbb
inc
dec
gs
js
sub
jmp
push
pop
ljmp
sbb
fistpl
cmp
ja
dec
adc
adc
jmp
add
loop
and
sbb
pop
les
xor
sbb
cli
pop
cld
xchg
xorl
ss
in
repz
xchg
pop
imul
xchg
movsl
pop
xor
mov
insb
sub
push
add
dec
xlat
push
sar
rorl
and
push
push
test
cmpsl
and
cwtl
cmp
rcrb
mov
leave
mov
lret
out
and
xchg
das
es
mov
xchg
out
test
push
pop
pushf
ret
ret
or
inc
inc
or
sbb
cmc
xchg
mov
repz
cmp
mov
ja
daa
push
in
mov
mov
mov
sub
fbstp
and
and
popa
xor
pusha
sti
fildll
mov
adc
add
adc
rcr
jb
mov
sarl
enter
int
mov
inc
dec
mov
test
dec
mov
shll
mov
call
sub
and
ss
leave
popl
cmpsl
inc
mov
aaa
imul
lret
and
dec
test
repnz
shlb
pop
xchg
xchg
daa
mov
ljmp
fdiv
fucom
xlat
hlt
sub
dec
popl
fistpl
inc
loopne
call
cmc
adcl
jae
xchg
popa
push
les
mov
cmp
push
mov
pop
aad
test
rolb
test
out
mov
pop
lods
nop
in
cs
jecxz
flds
xor
out
lods
mov
gs
mov
adc
lret
adc
or
ja,pn
add
xchg
lock
dec
daa
imul
jo
dec
mov
and
std
lret
cmc
lahf
push
xor
aas
lds
ret
in
jb
ja
repz
nop
imul
cmp
push
aaa
inc
lret
sub
xchg
or
dec
xchg
xor
and
pop
pop
jo
std
iret
lcall
sbbb
cwtl
mov
loope
sbb
lods
aaa
jmp
sub
and
sub
and
rcl
popf
fstps
sub
xlat
enter
mov
sub
inc
icebp
inc
mov
xor
and
test
adc
fldcw
stos
fsts
icebp
nop
or
adcl
and
dec
ret
inc
push
fcomps
scas
xchg
jae
arpl
jmp
mov
cmpsb
test
and
scas
inc
aam
pop
pop
rcr
icebp
mov
dec
mov
and
cmp
icebp
shr
insb
cmp
sbb
test
ficomps
xchg
rcrb
xor
repz
adc
pop
pop
int
mov
fwait
adc
sbb
sub
out
add
jbe
cmp
hlt
mov
xchg
sub
cli
mov
ret
cli
add
les
jns
stos
mov
fcomi
inc
in
inc
lea
adc
rclb
movsb
mov
ja,pt
inc
int3
repnz
imul
or
idivl
ja
cmpsl
dec
sahf
or
daa
add
inc
mov
mov
dec
fs
fsubr
dec
pop
xor
push
scas
jmp
jmp
ret
rorb
dec
mov
andl
out
mov
cwtl
sbb
leave
jns
mov
xchg
cltd
rolb
ror
adc
xlat
jnp
mov
lea
cld
push
sti
pop
pusha
add
dec
dec
fcomi
dec
clc
mov
mov
addr16
sub
rolb
sti
repnz
pop
mov
and
cmp
mov
je
sbb
inc
pusha
sbb
mov
jns
inc
jge
pop
idivl
scas
bnd
scas
pop
fimuls
fstpl
add
jae
lcall
loop
imul
test
leave
movsl
pop
enter
shl
adc
lods
mov
mov
insl
sbb
jle
jne
xchg
inc
mov
and
jmp
cli
lea
inc
pop
dec
or
je
movsb
xchg
pop
push
jne
jo
fimull
fisubrs
pushf
jge,pt
dec
sub
xchg
xor
jmp
or
popa
jb
rcll
xor
mov
add
leave
add
jge
add
stc
xor
add
imul
sbb
out
lods
mov
sahf
fimull
xchg
ljmp
dec
push
sub
mov
xchg
out
jns
fcomps
mov
or
int
mov
mov
xorl
xchg
aam
cmp
add
add
out
or
sbb
jp
xor
cmpsb
das
lahf
shlb
dec
shrl
xchg
in
les
mov
pop
adc
in
lea
out
sbb
pop
add
push
dec
or
pusha
push
aas
pusha
std
add
adc
data16
popa
adc
lea
das
mov
pop
and
test
mov
adc
jl
ljmp
hlt
xchg
leave
ja
stc
sbb
dec
xchg
or
repnz
cmp
lret
fsubrl
and
repnz
js
pusha
pop
or
pop
xlat
test
lds
mov
repnz
or
add
ljmp
or
popa
int
shrb
in
pop
sub
fwait
pop
sti
popa
pop
lods
xor
fldcw
mov
pop
insb
pop
xor
sub
ret
push
ja
clc
leave
clc
outsl
movsb
lods
inc
xlat
addr16
inc
out
adc
mov
movsl
sub
push
shll
and
sub
xor
sbb
or
es
sti
shrb
shrl
mov
mov
cwtl
pop
sarl
and
jle
push
cmovo
or
and
adc
aad
dec
xor
scas
lret
jne
imul
fs
and
and
or
test
pop
fsubrs
fnsave
jne
bound
test
cmc
cmp
out
das
int
sbb
test
cwtl
insl
addr16
mov
adc
inc
cmp
dec
pop
cmpsb
call
cltd
adc
adc
jb
repz
orl
xchg
pop
inc
insb
arpl
loopne
or
jno
xlat
cltd
ss
xchg
cmpsl
inc
gs
notl
push
sbb
leave
leave
mov
std
jne
mov
sbb
aas
std
out
mov
insl
mov
scas
cli
inc
imul
cmp
stc
aas
adc
cmp
and
popa
movsb
ret
push
je
dec
loop
or
andl
imul
pop
mov
pop
in
sbb
add
pop
out
repnz
xor
xor
or
mov
je
adc
out
ret
outsl
insl
das
out
push
xor
lret
sbb
xchg
add
cmp
andb
xor
lods
or
mov
out
lret
mov
pop
sbb
xchg
pusha
into
adc
or
xlat
mov
out
add
fld1
xchg
loopne
xor
fucomi
xchg
jb
xchg
mov
sub
in
adc
pop
aas
imull
outsl
mov
mov
mov
pop
push
rorb
outsb
enter
cltd
test
aam
cmpsb
jl
or
lea
pop
pop
fwait
ljmp
fdivl
push
jle
mov
clc
fildll
pop
lret
addr16
and
push
and
data16
mov
inc
jg
cmp
cmp
into
movl
lock
shlb
sbb
xor
mov
pushf
addr16
arpl
xlat
hlt
mov
adc
rorl
iret
fldenv
jb
sarb
call
repnz
inc
shrl
add
out
and
mov
lock
int
popl
in
cmp
mov
or
mov
pop
sub
cmc
or
adc
addr16
insb
out
push
push
mulb
jo
cmp
leave
xor
and
mov
inc
js
stc
or
daa
adc
lcall
or
insl
jmp
pop
inc
into
es
aad
std
pop
sub
jne
loope
fsubl
and
fistpll
push
aad
rorl
cli
xchg
test
xchg
int
pop
aas
and
pusha
sub
ret
mov
adc
mov
and
mov
adcl
push
addps
pushf
loop
lret
adc
xlat
xor
mov
outsl
push
mov
xchg
and
loopne
pop
andl
or
inc
mov
sarb
mov
inc
rcr
fst
adc
dec
mov
sbb
xchg
inc
add
clc
sbb
scas
or
xchg
lock
negb
or
test
dec
mov
mov
inc
push
pop
add
xor
adc
inc
jo
ret
jmp
fldl
cmp
lret
cli
aaa
xlat
shrb
push
cmp
or
xor
xlat
fs
daa
adc
loope
out
xor
out
mov
fs
inc
dec
push
sarb
adc
test
imul
push
fldenv
inc
xchg
sahf
fsubrl
cltd
insb
mov
dec
mov
jmp
fwait
test
jge
lea
loop
or
loop
xor
push
scas
outsb
test
mov
push
and
jge
js
xchg
dec
push
cmp
ret
insl
jae
sub
movsl
or
xchg
pop
leave
dec
or
xchg
repz
in
test
ret
pop
ds
fs
aam
push
jge
xor
jb
cmc
dec
push
push
xor
push
jbe
xor
es
ficoml
xor
out
ljmp
xor
jo
pop
xlat
inc
lret
jle
loope
adc
test
adc
and
mov
push
inc
mov
pop
cmp
jns
xlat
push
mov
inc
hlt
jbe
enter
sbb
jle
mov
inc
lea
orl
mov
or
outsb
imul
test
cmp
add
lahf
cld
fs
push
cli
push
mov
mov
pop
and
inc
pop
inc
mov
dec
sahf
push
jno
ljmp
push
pusha
xor
xor
xchg
popf
mov
mov
xchg
je
popf
loop
arpl
mov
sbb
jnp
sub
lds
fsubl
inc
mov
int
xchg
repz
sub
xchg
enter
and
pop
bound
into
nop
mov
fbld
sub
jo
mov
lret
or
test
push
mov
mov
sbb
mov
sbb
and
fadds
icebp
jb
in
jecxz
inc
jo
or
jl
mov
iret
gs
pop
push
mov
or
lret
ds
xchg
loope
ds
push
cmp
insl
inc
cmp
inc
imul
inc
scas
lahf
lret
add
or
jmp
push
xchg
int3
fcmovbe
inc
add
mov
xchg
dec
movsb
int3
inc
rclb
xchg
xchg
push
lock
mov
daa
mov
mov
scas
sbb
pop
int
sub
jecxz
adc
push
and
inc
adc
arpl
cmc
jge
insl
into
pop
mov
mull
or
dec
pop
mov
push
repnz
mov
repnz
lock
inc
rcl
in
and
rcll
adc
add
dec
mov
jno
daa
jmp
dec
jmp
push
sub
sahf
jmp
push
aaa
pop
and
push
add
inc
mov
je
fidivs
in
lea
adc
repz
push
jmp
adc
repnz
aas
in
mov
jb
xchg
mov
add
insl
cld
and
out
sbb
push
cld
push
xchg
xchg
out
adc
or
popa
movsb
mov
sub
xchg
sub
out
pop
mov
pop
sbb
pop
adc
data16
dec
cld
dec
jno
mov
lock
xor
cmp
mov
int
mov
scas
jae
mov
cmpsb
mov
pop
mov
into
sub
fwait
fwait
cmp
int
loope
lods
ret
fistpll
leave
xor
or
mov
jmp
fcmovbe
pop
jo
push
ss
aad
jno
pop
stos
lods
mov
mov
jmp
pop
cmp
outsl
or
mov
push
inc
int3
cmp
pop
cltd
pop
and
shlb
jmp
xor
add
adc
push
sbb
inc
dec
push
sub
mov
les
mov
ror
hlt
mov
sub
mov
inc
int
cmpsb
sarb
insb
sub
cmpsl
rcr
mov
dec
and
mov
xor
outsb
loopne
stos
lahf
add
imul
jg
push
sahf
and
jnp
out
inc
ret
pop
int
inc
mov
add
leave
xchg
jl
sub
rol
movsb
imul
lds
xchg
sbb
ffreep
pop
pop
dec
ljmp
icebp
out
icebp
xchg
pop
jo
cmp
out
addr16
int
dec
popa
lret
inc
sti
sbb
jnp
sub
push
sbb
adc
cltd
out
insl
push
rorb
push
aaa
pop
xchg
les
or
sub
jge
mov
dec
ret
sub
lret
cli
or
imul
mov
fdivrp
daa
pop
jl
jecxz
xchg
sub
xchg
dec
out
int3
cmp
mov
jmp
mov
idiv
scas
push
jp
cmp
sbbl
in
and
and
daa
and
outsl
pop
in
neg
xor
and
push
dec
repz
test
cltd
cmp
push
lods
jge
push
popf
xchg
lock
mov
xchg
inc
gs
adcl
clc
repnz
xchg
push
in
xor
daa
mov
sub
mov
ret
mov
xchg
xchg
sbbb
sbb
mov
dec
jl
shrb
push
dec
test
xchg
dec
mov
jecxz
push
xchg
mov
popf
loop
decb
xchg
mov
and
leave
jne
ret
or
add
mov
scas
pushf
xchg
xchg
sub
dec
sbb
pusha
push
adc
les
das
mov
stos
lock
mov
or
cmp
movsl
dec
repnz
add
or
ljmp
cld
mov
loope
out
hlt
mov
xchg
out
pop
adc
dec
dec
push
repnz
xchg
enter
outsl
cld
pop
inc
ljmp
mov
cs
or
pushf
push
sub
xchg
mov
das
add
inc
and
or
pop
lods
adc
sub
or
xor
pop
test
cmp
cli
gs
xchg
rclb
mov
mov
inc
pop
jecxz
pop
nop
lret
cmp
sbb
leave
adc
das
shrl
popf
call
sbb
adc
sti
xor
int3
xchg
pusha
push
int
cmp
mov
js
adc
sub
jo
fsubp
mov
sbb
and
pop
inc
mov
mov
mov
jns
mov
imul
sub
mov
add
lock
arpl
adc
mov
and
repz
clc
and
mov
and
test
xchg
shrl
push
decb
repz
jp
out
mov
dec
mov
sar
sub
scas
enter
jl
repnz
negb
arpl
lods
mov
sbb
rorl
mov
pop
cmpsl
pop
fisttps
in
cmp
lret
aaa
pop
inc
sub
mov
daa
mov
pop
arpl
rcrl
jno
ret
pop
add
xlat
testb
std
mov
stos
xchg
adc
mov
mov
gs
and
adc
movb
inc
pushf
in
jo
add
jnp
cmp
sub
lods
lods
jecxz
lock
adc
mov
add
orl
pop
inc
repnz
js
or
movsb
pop
sti
push
add
sbb
xchg
mov
mov
loop
or
lret
cmp
pop
imulb
rcll
out
lret
pusha
sti
or
and
cmp
data16
add
call
in
aam
test
sti
or
mov
mov
ror
adc
and
or
mull
adc
jmp
jecxz
fdiv
cmpsl
jmp
mov
adc
pop
push
push
fcomip
lds
inc
dec
push
push
stos
cli
test
shl
xlat
scas
mov
outsb
int3
xchg
sub
aas
fldl
pop
jno
inc
call
sbb
sbb
and
mov
pop
pop
es
loope
mov
mov
out
sbb
or
mov
push
jmp
jmp
mov
pop
vmovdqa
es
push
jb
outsl
and
jecxz
and
mov
xchg
sbb
pusha
arpl
sbb
pop
rcrb
xchg
dec
pop
sbb
std
push
adc
mov
sub
xchg
add
pop
lods
add
repnz
mov
add
dec
sbb
jecxz
call
xchg
cmp
lock
xor
or
adc
scas
dec
xchg
fdivrs
sbb
out
icebp
jle
pushf
sahf
add
pop
test
clc
out
stos
sub
fistps
mov
nop
cli
xchg
incb
inc
adc
cmp
cmp
aaa
dec
mov
lods
outsb
fmuls
inc
adc
cld
out
pop
xor
int
xor
arpl
call
mov
fldl2t
push
dec
pop
jo
jns
cmp
sahf
pop
lret
mov
popa
mov
xchg
mov
adc
clc
push
loope
pop
insl
out
pop
bound
inc
test
bound
xor
call
sub
movsb
push
sbb
xchg
jno
adc
dec
push
mov
dec
jo
cmpsl
mov
xor
inc
push
mov
lret
stos
push
adc
xchg
aad
push
dec
out
pop
stos
mov
pop
scas
fcoms
sbb
imul
push
xchg
and
stos
xor
shlb
dec
pop
int
hlt
pop
fs
jbe
das
popa
nop
sbb
pop
adc
shlb
loopne
mov
pop
shrl
ds
cmp
or
jp
nop
push
sub
xchg
lds
data16
lret
adc
mov
cmp
add
and
pop
clc
add
and
pop
popf
das
pop
rorb
add
subl
pop
call
into
jno
shl
aam
sarl
mov
icebp
xor
mov
test
jmp
jo
xchg
popa
or
jle
fdiv
add
cmpsb
mov
sbb
inc
push
test
int3
cld
mov
push
mov
fnstcw
decl
int
movsb
lods
into
incl
divl
or
out
jecxz
std
aad
enter
leave
push
cmp
sbb
xor
pop
mov
and
scas
cld
mov
pop
pop
dec
ss
fildll
pop
into
leave
std
test
arpl
out
lock
subb
and
or
mov
adc
in
cmp
push
fldcw
mov
add
sbb
in
xor
xchg
test
sub
xor
gs
outsb
push
das
xchg
add
daa
cmp
xchg
mov
imul
shl
mov
push
test
or
mov
daa
inc
mov
jp,pn
ljmp
pop
add
inc
test
mov
outsb
jmp
mov
hlt
ljmp
jne
sbb
testl
into
mov
mov
loopne
insl
lcall
repnz
lods
int
dec
dec
push
xchg
inc
popf
xchg
scas
xor
fnstenv
stos
addr16
into
lret
ds
xchg
xor
and
loop
loope
cmp
loop
cmpsb
inc
pop
mov
mov
jmp
add
aam
mov
sbb
mov
sti
mov
rorb
scas
pop
repnz
push
sbb
inc
mov
ret
mov
or
clc
mov
cmpsl
dec
inc
or
push
cmp
and
push
hlt
scas
inc
ror
cmp
popf
aas
stos
icebp
aas
xor
xchg
adc
loopne
jno
out
or
jecxz
xor
pop
in
adc
ret
adc
je,pn
jl
ds
mov
cmpb
mov
dec
inc
jo
push
jne
mov
adc
push
xchg
sbb
inc
ljmp
in
subl
movsb
int
scas
subl
ja
mov
jbe
or
into
mov
int3
dec
adc
xor
mov
add
sbbl
js
movsl
xor
adc
push
test
xchg
pop
inc
and
push
jno
sub
repz
mov
xor
out
loopne
mov
les
adc
outsl
xchg
mov
jo
push
js
pushl
lea
aad
hlt
mov
cltd
bound
add
movsl
sub
or
mov
insb
sbb
cmp
or
loopne
mov
mov
lods
mov
dec
mov
inc
mov
sub
lret
sub
jmp
enter
ret
adc
leave
xor
xor
lret
psrad
shrb
adc
enter
inc
adc
add
iret
into
fidivrl
into
and
sbbb
jmp
xchg
jbe
pop
ds
and
adc
jg
sbb
pop
xchg
push
mov
lret
adc
inc
out
ret
jns
mov
stos
and
clc
outsl
or
test
ret
jmp
int3
fldt
xchg
mov
ljmp
mov
mov
xchg
push
push
cmp
xchg
push
fdivrp
lock
sbb
and
inc
xor
push
jmp
jmp
push
mov
mov
in
imul
sub
sub
je
sti
and
ds
mov
mov
aam
dec
and
and
sub
and
ljmp
ret
clc
mov
popf
jg
inc
pop
inc
mov
aad
push
enter
inc
inc
gs
mov
and
fwait
mov
add
rclb
mov
mov
pushf
andl
movsl
dec
pmaxub
mov
stc
jb
sbbb
and
cmc
pushf
mov
ja
inc
jmp
jno
ret
mov
sti
push
cmpsb
outsb
sub
mov
mov
lret
jp
cmp
rorl
adc
dec
push
dec
lods
pop
push
loop
push
js
mov
fcmovne
test
jnp
jg
sbb
outsb
push
adc
cli
mov
jae
sahf
fwait
push
push
add
sbb
and
mov
rcl
push
xchg
push
xchg
pop
jmp
adc
std
mov
add
sub
push
and
das
jg
pop
fxch
add
xor
jle
rcrl
cmp
xchg
mov
mov
jg
cmpsl
mov
adc
cmp
stos
dec
add
addb
test
jno
fisttpl
xchg
popf
fs
shlb
xor
xor
lock
or
inc
lds
imul
es
pop
ljmp
or
dec
inc
cli
fiadds
cmp
pop
lods
pop
call
mov
inc
mov
sarl
rcrb
pop
mov
dec
andl
sbb
addr16
aam
sub
negb
lock
das
xchg
std
jo
das
repnz
lods
cwtl
stc
call
jle
cmp
push
jno
dec
push
push
xchg
sub
aad
adc
scas
jbe
push
dec
dec
testl
int3
lods
lock
ljmp
xchg
sbb
cld
jns
movsl
dec
clc
pop
pop
mov
adc
rorl
mov
jge
clc
mov
sub
int3
adc
lret
sub
das
les
out
xor
repnz
test
xor
or
int3
sbb
mov
lds
mov
xor
insb
std
lods
jge
xlat
fcmovbe
push
jno
xlat
sysenter
xor
aad
sub
or
pop
and
int
jp
xchg
fwait
jnp
xor
inc
in
leave
mov
iret
push
inc
adc
clc
loope
ret
push
cmp
stc
xchg
lcall
stos
repnz
add
jae
lock
push
test
mov
push
add
jae
add
imul
stc
test
mov
sbb
mov
cmp
fdivr
arpl
out
into
sbb
push
ljmp
into
inc
rol
out
cmc
insl
fimull
ret
jl
aam
pusha
js
mov
add
loop
jg
push
mov
in
icebp
aam
adc
ret
sub
lahf
xor
push
mov
ja
rol
sub
adc
out
mov
inc
ss
lea
dec
dec
pop
in
xchg
jmp
add
xor
mov
mov
lods
pop
xchg
adc
xor
stos
aas
repz
mov
xchg
fxch
test
arpl
push
or
mov
add
inc
shll
xor
push
mov
push
mov
pop
shl
push
int
inc
rcrl
or
sbb
shlb
sub
xchg
xor
scas
jnp
xor
aad
sbb
mov
xor
adc
xchg
adc
add
jmp
insl
pop
push
sub
stos
xor
xor
test
xchg
and
inc
fmull
mov
mov
mov
inc
inc
fstps
testb
jnp
pop
xor
loopne
mov
in
movsb
jb
or
cmp
xor
mov
push
adc
jl
mov
mov
xchg
aam
mov
add
sarb
mov
adc
mov
pcmpeqd
scas
push
pop
dec
jle
cmp
cmp
push
jmp
loop
mov
or
call
dec
insl
test
push
mov
mov
sub
pop
lcall
ds
mov
insl
sub
xchg
test
mov
or
stos
or
or
inc
mov
pop
sub
cmp
pop
xchg
shlb
mov
daa
pop
add
push
les
mov
mov
lcall
mov
push
in
movsb
mov
mov
das
shrb
stos
hlt
pop
les
outsb
popf
repz
xchg
shr
outsl
shl
pushl
cltd
jl
cmp
jmp
repnz
adcb
lods
adc
inc
fistpll
test
arpl
dec
dec
adc
and
icebp
js
and
lds
xchg
mov
repnz
mov
xor
ja
add
enter
arpl
or
pusha
pop
popf
adc
sarl
lahf
xchg
je
testb
scas
cmp
push
ds
cmp
add
jo
mov
sub
dec
xchg
cwtl
in
fsubrs
das
lods
and
test
mov
nop
sub
roll
std
and
pop
push
scas
mov
push
cmp
sbb
cmp
xchg
rcrl
xor
push
in
loope
pop
cld
add
add
inc
sti
xor
inc
pop
lock
lock
das
mov
push
or
sbb
cmpsb
or
into
pop
test
pop
test
mov
adc
mov
pop
mov
xor
mov
cmp
out
adcb
dec
xor
mov
aad
sub
dec
pop
cs
and
pop
xor
test
xlat
mov
repnz
nop
push
and
add
outsb
fisttps
lret
push
xchg
xchg
jl
add
test
lret
push
fadd
pop
inc
ja
jecxz
arpl
addr16
mov
inc
push
xor
xor
xorl
inc
xor
cmp
jo
add
pushf
dec
dec
adc
fisubl
ret
pusha
add
or
out
repz
std
push
adc
xor
out
sbb
loop
mov
push
pop
push
xchg
push
jns
sbb
nop
push
jne
das
inc
movsb
pop
cld
push
es
data16
mov
push
dec
aad
sbb
push
add
cld
shll
xchg
pop
pop
dec
cmp
xchg
stos
icebp
mov
mov
xchg
mov
loope
fmuls
pushf
xchg
sub
test
fistps
sub
ret
popf
movsl
xlat
or
fld
jo
lahf
and
les
fld
shll
xor
pop
shll
inc
jmp
xchg
or
idivb
outsl
les
cwtl
aam
scas
popa
fbstp
jecxz
int3
xchg
cmpsl
dec
mov
arpl
sahf
xor
movsb
aaa
pop
int
sbb
outsb
sub
mov
test
out
cmp
mov
mov
cmp
cmpsb
sti
pop
mov
mov
or
push
jb
leave
cmp
lods
insb
popa
jecxz
sarb
adc
sbb
jno
sub
test
lret
pop
push
aas
xchg
daa
jecxz
push
pop
mov
dec
xor
adc
inc
arpl
push
lret
imul
jnp
mov
neg
lock
jg,pt
mov
and
cmp
stc
into
shll
xchg
dec
test
mov
lock
mov
adc
ds
xchg
jns
jg
sbbb
sub
pop
xchg
shlb
hlt
lret
mov
lods
ja
inc
call
pop
sbb
vmwrite
jbe
test
and
arpl
mov
mov
out
nop
pusha
xor
push
cmc
mov
rolb
mov
sbb
in
dec
loopne
int
scas
xchg
add
inc
adc
pop
lea
and
leave
push
ljmp
rcr
dec
fimuls
hlt
jp
mov
fisubl
jne
dec
push
mov
or
out
loope
adc
cltd
cmpxchg
cmp
sarb
inc
add
nop
sub
pusha
repnz
cmp
loope,pn
nop
cmp
push
add
loopne
push
hlt
mov
and
in
dec
pop
jl
stc
adc
push
cltd
dec
add
add
insl
cwtl
imul
mov
pop
xchg
and
inc
cmpsl
test
out
xchg
ds
and
into
push
leave
sub
inc
cmp
int3
add
mov
adc
popf
in
orl
xor
repnz
adc
je
loopne
mov
enter
testb
and
mov
adcb
sub
pop
popa
fstpl
push
imull
adc
cmp
mov
lds
cmc
fwait
mov
outsb
mov
dec
daa
iret
or
or
sub
fimull
sbb
xchg
pop
hlt
fld
lahf
push
mov
lods
movsl
bound
adcb
push
fisttps
add
aas
sar
int3
mov
cmpsb
adc
rcl
rcr
inc
dec
data16
dec
mov
cmpsl
in
cmpsb
leave
pop
pop
xor
loop
adc
rclb
mov
mov
out
jae
call
jge
and
cmp
movsl
arpl
adc
scas
movsb
mov
push
popa
adc
in
fisubl
and
mov
or
pop
rol
push
cld
rol
sub
pop
mov
inc
outsb
add
rcll
sahf
les
adc
jmp
testl
adc
in
outsb
lock
mov
xchg
cmp
adc
dec
insb
repnz
cltd
mov
mov
fldt
pop
sub
and
dec
cmp
mov
std
dec
scas
cli
ret
or
imulb
pop
and
gs
shl
inc
aas
inc
adc
inc
rolb
daa
lds
sahf
pop
and
dec
in
sbb
fisubrl
push
xor
xchg
push
pop
je
sti
and
ret
cmp
ja
imul
add
inc
jl
xor
mov
ret
imul
shl
xor
aaa
ret
add
imul
pop
push
xchg
mov
or
adcl
adc
call
jne
cmp
stos
ret
ret
inc
inc
out
rolb
unpckhps
mov
adc
jno
cmp
lock
mov
cwtl
cmpsb
inc
sahf
popf
inc
pop
je
ficoms
in
and
push
xchg
aad
xchg
sbb
in
cld
sbb
adc
out
xor
dec
cmc
dec
rol
mov
mov
pop
dec
lahf
push
ja
std
lds
test
jno
pop
xchg
cmp
or
jns
rcrl
fidivs
sbb
dec
jae
je
jg
jmp
stos
and
hlt
lret
sub
xchg
dec
jbe
push
ja
mov
in
inc
xadd
jg
in
ret
xchg
and
js
jne
pop
push
call
mov
fisubrs
sbb
mov
inc
hlt
lahf
lock
scas
adc
lret
aam
out
incl
or
pop
out
repz
aas
mov
xchg
nop
inc
pop
mov
repz
loopne
lock
insb
mov
inc
scas
dec
sub
cld
repnz
ret
out
cmpsb
jne
popf
cmp
clc
repnz
lahf
jmp
mov
imul
mov
mov
int3
or
mov
push
adc
loope
enter
push
and
push
in
mov
mov
clc
insl
dec
call
pop
stos
mov
popf
arpl
pop
fisttpll
pop
mov
roll
dec
xchg
add
jge
cmp
cltd
pushl
aad
jge
cmpsl
ja
inc
jb
inc
movl
jo
push
xchg
push
loop
adc
icebp
ds
shrl
out
outsl
xchg
or
jnp
push
cmpsb
mov
add
cmp
push
ja
ds
cmpsb
inc
jle
lahf
lock
imull
subb
cltd
dec
pusha
in
jle
push
lcall
dec
add
fisubrs
pop
jp
bound
daa
dec
cmp
decl
imull
mov
xchg
push
outsb
clc
and
shlb
xor
adc
pop
out
mov
xor
xor
push
inc
mov
das
mov
outsb
test
adc
inc
adcb
loopne
pop
mov
push
lock
cmc
cmpsl
mov
dec
mov
cli
pop
pop
push
int3
sub
push
clc
xor
jle
sti
xor
jge
jae
mov
mov
shr
pop
pop
adc
mov
mov
cmp
jmp
data16
in
dec
adc
addl
notl
dec
enter
cwtl
mov
mov
addl
cmc
push
sbb
mov
dec
jns
add
dec
sub
lods
scas
inc
xor
clc
int3
stc
xchg
push
jecxz
rorl
dec
mulb
sub
pop
pop
std
les
adc
insb
sub
mov
or
std
inc
out
lods
clc
jl
add
lahf
es
xlat
xor
outsb
cmpsb
clc
test
dec
aas
xchg
leave
push
outsl
pushf
and
lahf
daa
inc
mov
jle
mov
sub
icebp
mov
pop
or
adc
mov
pop
mov
inc
adc
inc
fwait
mov
es
fdivs
add
mov
xchg
dec
mov
or
mov
mov
rcll
jo
xchg
ret
and
sbb
cmc
inc
mov
dec
sbb
out
rol
push
inc
imul
xor
movsb
mov
lds
mov
mov
mov
cltd
movsl
sbb
ljmp
xchg
and
mov
les
jl
sahf
mov
popa
aad
push
jae
rorl
mov
mov
jno
les
pop
push
add
xor
xor
icebp
sar
xchg
sbb
in
ja
dec
mov
mov
nop
out
mov
stc
mov
sub
ret
jnp
add
jecxz
inc
in
aaa
lahf
cmp
shll
cld
and
stos
test
stc
mov
push
ss
fnstcw
mov
sar
outsl
or
or
pop
lods
mov
ja
xlat
cmpsb
scas
mov
jb
shl
out
jl
lods
test
xor
outsb
mov
sahf
push
cli
xchg
mov
add
cmp
loope
test
pop
adc
xchg
mov
xchg
or
mov
jge
sub
addr16
shl
imul
in
inc
jmp
into
pop
pop
iret
loop
mov
mov
cmc
fbld
pushf
into
std
lret
or
pop
call
mov
xorb
push
push
fcomi
push
lods
fwait
mov
shrl
mov
jge
aaa
sub
aad
sub
sbbl
inc
cmp
or
inc
jecxz
les
sub
and
fmulp
inc
push
xlat
jge
cmp
xor
ficoms
cld
pop
outsl
dec
push
inc
cmp
popf
inc
data16
pop
and
lret
popf
xchg
mov
sub
lahf
pop
xchg
mov
sbb
mov
dec
popf
push
subl
and
inc
fdivrs
pop
mov
jp
jg
rorl
pusha
mov
pop
xor
lret
push
lds
mov
pop
ss
in
adc
cmp
jnp
add
push
shrb
ret
push
clc
ja
sub
cli
mov
std
cmp
mov
imul
mov
push
dec
imul
js
push
daa
xchg
inc
fists
das
sub
repz
add
inc
in
adc
shrl
or
mov
inc
outsl
and
xchg
dec
mov
sub
jp
and
xor
pop
mov
pop
jl
insb
andl
popa
jae
sub
imul
loope
gs
push
mov
ficomps
mov
lods
in
jae
adc
dec
add
lock
sbb
div
lea
mov
inc
aam
push
insb
sbb
or
mov
subb
cmp
ds
inc
pop
jge
lret
js
and
and
push
pop
loopne
add
adc
adc
shlb
add
pop
out
push
out
mov
std
das
and
xchg
xor
xor
scas
cwtl
mov
adc
and
lods
jle
mov
xor
cld
testb
adc
mov
notb
mov
push
fs
xchg
push
loop
mov
sbb
jns
sbb
jmp
leave
lods
lcall
lods
adc
cmpsb
scas
fldcw
cmp
mov
lods
pushf
aad
out
cmpsl
in
adc
dec
fwait
mov
dec
sbb
ljmp
scas
push
sub
loopne
sub
idivl
jg
stos
dec
or
repz
xchg
shlb
lcall
imul
push
jno
inc
and
rcrl
adc
inc
or
enter
or
out
sub
fisttpl
mov
pop
and
or
and
les
jbe
mov
daa
stos
push
sub
mov
or
ret
or
rcrl
aaa
mov
insl
in
pop
pop
cmpsl
dec
pop
sub
shlb
pop
pop
lods
jl
add
xchg
into
test
lea
das
mov
test
add
cwtl
pop
mov
cmp
aas
enter
sub
dec
data16
pushf
adc
pop
call
pop
xchg
push
fcmovnu
jmp
xchg
cmpsb
in
adc
and
inc
pop
xor
dec
scas
or
push
push
pop
and
ror
insb
inc
jg
dec
imul
inc
out
push
add
cs
xchg
jmp
mov
aad
aas
inc
bound
jo
loopne
mov
push
cmpsb
push
lods
mov
xlat
loopne
fldt
popf
sbb
mov
xchg
mov
cmp
in
movsb
leave
cmp
das
in
mov
pop
cmpsb
lock
mov
and
stc
mov
bound
fldl
roll
xchg
pop
cmp
lahf
rcrl
jecxz
test
loop
xlat
mov
cmpsl
js
lods
pop
test
lods
mov
fs
pop
imul
jno
cmp
xor
addr16
add
xorl
and
push
pusha
insl
ret
jo
out
and
add
mov
icebp
add
sahf
mov
lahf
ja
inc
or
fsubs
fwait
lahf
xor
cmpsb
repz
jl
pop
pop
sti
jnp
inc
enter
fwait
mov
or
xchg
xchg
call
ja
shrb
mov
fcoms
xchg
out
dec
dec
lods
fisubrl
test
dec
ret
cli
call
sar
push
mov
push
repnz
fisttpll
push
sub
lahf
dec
dec
mov
out
imul
add
daa
std
adc
lahf
int
out
sbbb
push
push
das
mov
mov
and
mov
sbb
adc
rcll
out
jle
fistl
mov
cmc
mov
jo
ret
sbb
lods
push
adc
lds
daa
adc
in
and
pushf
cmp
rcrb
mov
cvtpi2ps
or
mov
push
pop
fwait
xor
sbb
sbbb
jae
mov
inc
pop
lds
jno
andl
adc
repz
mov
ja
dec
lahf
in
dec
icebp
push
out
xor
aas
mov
movsl
in
fists
add
add
add
jmp
js
cmp
pop
mov
daa
jecxz
pusha
rcrl
jae
jns
cmp
jbe
lahf
pop
mov
xor
cmp
push
jbe
mov
push
js
inc
or
jne
aam
add
cmp
aaa
sbb
sbb
xor
inc
push
cmp
aas
lods
std
push
inc
mov
inc
popa
aaa
cld
xchg
mov
js
and
fidivs
jno
lods
jp
icebp
je
popa
ljmp
pop
mov
ss
inc
or
push
push
mov
xchg
test
add
xlat
into
xchg
jnp
repz
mov
mov
insb
inc
jae
pop
inc
rcrl
mov
add
fsubr
fsubr
shll
lods
in
in
and
mov
mov
insb
adc
sub
das
cmpsb
or
jns
lcall
into
hlt
andl
in
xor
push
sub
sub
fisttpll
dec
aas
dec
arpl
fstps
and
xlat
adcb
mov
clc
sub
xor
fwait
pop
xor
hlt
cmp
aad
lods
mov
xor
icebp
mov
cwtl
popf
test
mov
jb
cld
mov
jne
sbb
dec
xchg
mov
jae
push
jp
in
mov
aam
dec
and
loope
fsin
xchg
sti
and
sub
rolb
cmp
sbb
push
and
jb
pusha
mov
inc
fdivl
push
imul
aaa
mov
dec
mov
and
mov
mov
mov
cmp
inc
movsb
inc
pop
out
sbb
rcl
insb
rclb
cmc
shlb
mov
repz
test
mov
cld
ror
fwait
cmc
push
sbb
mov
xchg
jl
sarl
sub
mov
cwtl
sbb
jb
loopne
push
mov
mov
jnp
int
jp
dec
fwait
jmp
jns
shlb
sub
in
in
add
mov
pop
dec
cmp
jno
mov
out
sub
stos
sbb
xchg
lods
push
into
add
mov
lret
or
scas
pop
std
pop
jl
call
lock
mov
neg
adc
je
xor
mov
or
ficoml
arpl
xor
aas
push
adc
sahf
repnz
push
popf
sarb
cmc
jns
les
out
shlb
lods
cmp
xchg
adc
dec
lea
add
dec
shrl
ja
bound
sub
xchg
adc
push
cmpsb
ret
lcall
cld
sub
ds
loop
cs
ds
fidivl
xchg
mov
mov
in
mov
cli
addr16
and
sbb
fdivrs
cmp
mov
sbb
cs
shlb
loope
sub
xchg
xchg
inc
imul
loope
jae
ret
mov
hlt
push
cmp
xor
cmp
stc
inc
or
divl
pop
sub
dec
mov
cli
adc
xor
sarl
pop
cs
test
xlat
inc
repnz
jge
mov
cmp
iret
lcall
or
sbbl
or
sbb
nop
sub
xorl
jns
push
jg
cmp
xor
sbb
testb
lock
mov
out
call
cmp
hlt
jo
and
or
or
adc
jge
push
in
xchg
push
dec
andb
insl
inc
inc
stos
das
repz
lahf
dec
dec
test
insl
daa
and
out
inc
popa
or
inc
pop
sub
and
mov
or
ds
jg
call
mov
lret
pop
add
bound
push
sbb
mov
ss
mov
in
sbb
hlt
subb
fs
mov
jnp
jl
mov
push
mov
pop
test
add
and
adc
sub
push
or
or
cli
cld
or
lret
cmp
xchg
iret
stos
rolb
cmpsb
mov
stos
xorl
sub
rcr
clc
imul
out
mov
lock
nop
ja
imul
sbb
fsubl
mov
sub
mov
jns
addr16
outsb
pop
cld
inc
loope
xlat
jnp
xchg
int
mov
dec
jo
mov
aas
data16
and
cmp
test
xchg
and
imul
pushf
lods
mov
imul
test
pop
sbb
orb
arpl
inc
les
in
mov
scas
sbb
or
data16
add
xor
iret
ja
enter
js
sahf
loopne
lods
sti
dec
sbb
pop
jl
dec
sbb
pop
xchg
shrl
jecxz
in
inc
xlat
icebp
and
inc
in
shlb
fidivrs
les
jo
test
loope
sub
sub
test
xchg
shll
adc
fcmovbe
dec
jnp
in
add
sahf
in
cmp
sbb
lret
fcom
loop
sahf
jge
fdivrl
pop
lods
ret
lret
sbb
jns
sub
push
pop
sti
aad
lcall
test
jmp
push
push
test
jne
scas
or
popf
sbb
test
mov
mov
in
js
inc
adc
lock
daa
push
push
xor
mov
aaa
xor
mov
bound
lahf
shrb
aam
nop
mov
sahf
popl
or
xchg
daa
in
or
push
int
fisttps
sar
add
popf
jg
addr16
cwtl
js
inc
and
push
dec
ja
scas
xchg
sahf
pushf
mov
adc
mov
pop
mov
cli
and
lock
push
call
xor
pop
mov
cli
sbbl
adc
or
int
mov
divps
sbb
loope
adc
sbb
or
cmpsl
imul
cld
je
sti
xchg
sbb
cmp
sbb
push
pop
mov
es
cli
out
fists
js
sub
shll
mov
lock
sbb
std
xchg
add
cmp
leave
add
out
pop
sbb
or
sub
loop
mov
sbb
adc
sbb
inc
lahf
leave
stos
pop
push
ss
jp
dec
inc
popa
mov
fcoml
mov
push
das
stos
mov
movsb
enter
lock
mov
fwait
stc
popa
mov
loopne
add
pop
sub
sub
ljmp
cmp
mov
aaa
mov
outsl
cmpsb
hlt
scas
int3
mov
out
lahf
cs
dec
ja
mov
jb
mov
mov
jle
popa
filds
xor
jnp
call
dec
fiaddl
int3
jo
mov
and
dec
mov
xchg
imul
xor
and
jb
ja
jnp
jge
and
jns
adc
dec
pushf
jb
push
sub
decl
xor
mov
mov
jne
dec
adc
mov
jg
cmp
or
loope
adc
dec
int3
push
inc
or
pushf
loop
repz
mov
in
jno
addr16
mov
xchg
cmp
or
loope
std
popa
inc
mov
sbb
dec
sti
mov
addr16
and
inc
mov
and
bound
mov
aam
lcall
rolb
punpcklwd
roll
cmpl
iret
daa
and
lds
lcall
pop
pop
pop
test
inc
push
and
test
jns
add
mov
xchg
cmp
push
sub
pop
cmp
aas
fnsave
mov
push
add
lods
pop
mov
jo
xchg
jmp
fidivrs
pop
fidivrl
sbb
out
bound
adc
or
fwait
dec
and
fmuls
movsl
add
dec
incl
pop
cmp
test
add
adc
jb
ret
loope
or
sbb
mov
or
test
faddl
xor
jl
mov
loope
pop
imul
sbb
xor
jp
sub
sub
lock
and
arpl
and
subl
in
push
mov
pop
cpuid
lret
lods
in
sub
push
dec
sysret
xor
xor
insl
lret
sahf
iret
movsl
shl
call
sbb
xor
push
mov
jae
and
inc
and
aam
inc
add
int3
cmp
or
sub
call
mov
add
sub
cld
aaa
iret
aas
jle
adc
xchg
jg
push
test
aaa
and
pushw
ds
ja
std
adc
rcl
xor
adc
mov
ret
call
loop
push
cvtps2pd
pushf
popf
or
daa
lea
js
sbb
jbe
bound
in
inc
loop
xchg
jg
es
mov
iret
lcall
mov
adc
in
push
andl
pop
loop
or
loopne
pop
addr16
mov
enter
lar
dec
xchg
ss
jb
sti
jle
mov
mov
sub
pop
ret
jb
fmull
lret
fsubs
mov
pop
cmp
dec
sbb
inc
sub
xchg
pushf
mov
loope
or
mov
mov
popa
leave
mov
lret
pop
in
dec
popf
cld
inc
mov
jmp
sarb
movsb
jne
cmpsl
push
inc
scas
dec
subl
adc
rcr
and
call
jns
cmp
loop,pt
pop
pusha
sbbb
push
das
movsl
movsb
sbb
dec
or
inc
pop
mov
fcoml
aaa
hlt
jae
or
aaa
add
xchg
rcl
lahf
xchg
fadds
cmc
jne
xor
fs
dec
mov
dec
outsb
lahf
jbe
adc
test
in
nop
push
jno
sub
jl
arpl
xor
addr16
push
rcrb
imul
or
scas
mov
out
repnz
xchg
test
dec
and
jge
iret
imul
or
inc
mov
dec
imul
ret
inc
test
xchg
fisubs
or
xchg
sbb
jne
cld
and
mov
push
imul
pop
aas
and
push
std
inc
jmp
cmp
in
and
scas
dec
cmpsl
mov
bound
dec
out
mov
mov
push
out
jle
iret
pop
jl
cmc
nop
sti
push
mov
jecxz
or
movsb
xchg
and
dec
stc
lods
mov
push
and
in
pop
jmp
inc
adc
test
pop
mov
out
outsb
xor
dec
dec
mov
cmp
mov
adc
loop
xchg
test
xchg
xor
cwtl
dec
push
dec
arpl
in
sbb
cmp
call
icebp
aas
movsl
rclb
jl
push
mov
in
int
jecxz
inc
push
nop
stos
fbld
lds
adc
movsl
push
dec
out
out
aas
inc
sbb
fildl
cmp
jne
push
xchg
leave
int3
or
call
push
in
pop
xchg
push
sub
mov
cld
jno
jle
insl
pop
cld
sbb
cmp
lock
jmp
in
xchg
push
aad
pop
mov
cld
mov
mov
lea
subb
in
sar
insb
adc
lcall
scas
mov
xor
cmp
add
pushf
push
stc
pop
test
test
insb
adc
insb
mov
cmp
sub
in
pushf
sbb
fdivrs
ds
out
stos
dec
hlt
and
push
jae
xchg
idivl
ja
das
pop
daa
jl
outsl
mov
fisttps
lret
fwait
pop
in
cmp
pushf
mov
xor
fimull
cli
pusha
mov
jl
fiadds
mov
test
lcall
xchg
lds
fwait
push
arpl
fldenv
xchg
ss
xchg
jbe
pop
sub
or
push
mov
sub
pop
mov
adcl
idivb
xor
fidivl
daa
cs
jbe
in
ret
push
daa
mov
xor
in
in
mov
sub
mov
xchg
push
xchg
cmp
rclb
sbb
xchg
cmc
out
mov
shll
jge
mov
dec
nop
movsb
scas
add
test
add
dec
rcll
shll
mov
or
fisttps
mov
outsl
push
cs
iret
cld
paddusb
pop
dec
cltd
fcomps
int
pop
mov
or
test
dec
xor
sbb
in
ds
xchg
aas
ja
imul
rcr
push
mov
sarl
pop
mov
fidivrs
adc
into
addr16
or
in
xor
dec
xor
sbb
mov
adc
rolb
dec
push
mov
je
fdivl
xor
jo
stc
dec
lret
mov
adc
pop
es
inc
cmp
jae,pt
cmpsb
fwait
iret
cmp
daa
ss
dec
mov
stc
movsl
not
and
dec
sti
repz
adc
sbb
mov
cmp
mov
push
mov
aad
aad
shlb
pop
es
inc
mov
rol
mov
push
dec
lock
dec
mov
push
xor
mov
rcr
adc
or
mov
lock
stos
pushl
scas
push
inc
xchg
sahf
sbb
jmp
popa
jo
ret
cld
pop
sbb
lcall
call
lahf
mov
out
mov
movsb
xchg
iret
popa
sub
and
ret
ljmp
test
mov
jp
dec
or
in
punpckldq
js
cltd
xor
dec
jl
sub
int3
scas
sub
sub
mov
negl
lahf
mov
repz
dec
mov
imul
fsubrs
in
and
mov
pop
mov
rclb
jle
push
test
push
lock
out
pop
cmc
jb
mov
scas
insl
and
jae
cmp
loopne
sub
mov
dec
daa
push
and
lea
or
or
mov
xor
stos
inc
or
jecxz
insl
jmp
push
sub
pop
fwait
push
push
mov
or
ret
and
cmp
ss
dec
xchg
shrl
add
push
push
das
int3
jns
add
aas
inc
sub
push
cli
sub
mov
push
lods
iret
xor
out
aaa
popa
xchg
dec
mov
and
mov
pop
jle
and
fstpt
push
dec
cmpsl
cmc
into
shrb
das
and
sub
and
mov
pop
dec
adc
sahf
mov
pop
xchg
lea
cltd
arpl
and
mov
jno
lds
cmc
mov
pop
aad
in
dec
xchg
movsl
sbb
pop
jb
aas
inc
mov
movntq
in
mov
sti
lcall
rorl
adc
push
jl
outsl
jno
and
jnp
cmp
cmp
aad
outsb
fisttps
sub
scas
aam
or
xor
mov
fdiv
push
insb
mov
sub
adc
sub
out
insl
jno
js
mov
xchg
loop
gs
mov
movsb
jmp
inc
mov
sbb
xchg
shl
sbb
stc
jno
cmc
arpl
adc
arpl
jl
insl
jns
xor
div
sbb
ljmp
cmpl
jno
sbb
push
movsb
repz
in
dec
xchg
or
cmpsl
inc
das
out
mov
test
jne
mov
fimuls
mov
mov
sub
scas
cmp
jns
push
cmpsb
xchg
jbe
fldt
sub
aas
cwtl
jno
sub
and
xchg
jg
mov
shr
and
jge
popl
mulb
clc
js
daa
dec
dec
fs
xchg
pop
jl
andl
pop
adc
aas
fwait
mov
or
shrb
rclb
out
mov
cli
gs
and
jnp
lea
xchg
xchg
loopne
inc
mov
push
xlat
mov
push
fdiv
ffree
dec
aam
test
xchg
inc
mov
mov
rcll
popa
mov
jmp
jp
insb
add
pop
test
bound
pop
xchg
out
or
cmp
pop
dec
push
pop
loop
mov
std
xor
aaa
leave
pop
adc
aas
pop
int3
and
pop
pushf
jne
pusha
jae
pop
push
lods
push
bound
pop
jbe
mov
mov
inc
push
popf
jns
mov
mov
ljmp
mov
pusha
into
cmp
lret
jl
mov
ja
and
fcoml
dec
out
movsl
sbbb
ljmp
or
mov
add
sbb
pop
sub
jns
outsl
js
sbb
mov
sub
or
and
sahf
imul
cmp
xor
sbb
sbb
inc
shrl
out
cmpsl
cmpsl
add
bound
scas
add
sub
sbb
jb
aas
insb
cmp
rorb
sti
sub
lds
lods
xor
inc
jle,pn
adc
xchg
and
pop
pop
aaa
pop
adc
jmp
pop
jne
cmc
pop
inc
daa
int
push
loop
xchg
or
rcl
in
stos
sub
std
scas
sarl
xchg
rolb
add
sarb
pop
pop
imul
test
mov
stos
dec
add
jnp
xlat
jle
adc
inc
lods
inc
popf
cmp
jmp
or
mov
imul
lret
jbe
iret
pop
aas
cwtl
shlb
mov
fs
ret
out
test
sbb
xor
add
ret
pop
adc
cld
sahf
scas
and
inc
jp
inc
mov
push
xchg
fimull
xchg
cmp
cmpsb
push
mov
fbstp
xchg
push
cmp
cli
out
ret
imul
movsb
inc
add
dec
ja
std
xchg
cltd
orl
in
pop
and
dec
sub
in
mov
sub
cli
pop
push
sbb
xor
push
mov
test
jmp
fwait
or
mov
push
cli
outsb
xor
and
xchg
lret
mov
mov
gs
mov
jae
jge
push
rolb
test
xchg
xchg
out
inc
or
popa
mov
popa
xor
int3
sub
mov
shrb
dec
add
movsb
sbb
shlw
roll
or
ret
xchg
insl
or
js
jae
pop
cwtl
bnd
or
push
adc
adc
loop
outsl
pop
mov
ds
lahf
push
push
push
lods
jns
xchg
sahf
and
repnz
dec
push
jnp
int3
arpl
mov
das
cmpsl
mov
mov
mov
int
sbb
dec
xchg
aad
jae
fwait
movsl
jl
fildll
test
out
cmp
cld
inc
jp
pop
mov
outsl
lods
es
jo
or
testb
hlt
call
sbb
jge
pop
lahf
add
ljmp
stc
pop
stos
cmp
dec
andl
sub
gs
jg
fsubl
cmpsl
sbbb
jns
mov
movsl
inc
cmpsb
les
test
and
shlb
inc
xor
dec
pop
aam
cmp
xlat
lcall
popf
pushf
loopne
sub
push
fnstcw
dec
flds
push
test
pop
jnp
xor
ficompl
or
flds
dec
xorl
pop
shll
push
xor
mov
aaa
pop
xor
cmpsl
sbb
pop
scas
push
mov
ds
jp
addl
jae
cmp
mov
adc
cwtl
out
arpl
jnp
neg
mov
jns
imul
jp
mov
call
mov
inc
mov
aaa
mov
pop
lds
and
and
cmp
or
dec
sbb
mov
xchg
outsb
and
sub
aad
pop
popa
popa
jle
jnp
test
dec
xor
popl
lock
sti
clc
dec
repz
sub
pop
mov
mov
jno
jl
pusha
mov
push
mov
adc
ljmp
ss
les
daa
nop
dec
cmp
popf
lds
das
shlb
pop
xor
cmc
test
cmp
mov
int
cmp
leave
jb
stos
cmp
jl
jmp
hlt
stos
int3
dec
push
aam
mov
mov
js
jo
adc
add
or
movsb
inc
cmp
mov
lret
cmpsb
jge
inc
inc
or
xchg
stos
adc
cwtl
in
mov
xor
fstl
xchg
mov
mov
movsl
dec
es
lret
jmp
add
xchg
jmp
enter
mov
cmc
sub
insb
insb
ds
in
cmp
aas
mov
push
xor
scas
mov
lret
xchg
pop
mov
adcl
xchg
lahf
pop
shrl
aad
mov
sub
push
hlt
adc
les
rorb
js
pop
lea
test
cmp
and
daa
ss
test
fisttps
xor
lahf
adc
inc
popa
add
mov
mov
sbb
fildl
adc
xor
out
outsl
push
dec
jp
loop
loopne
or
mov
mov
scas
xchg
and
sarl
mov
cmp
dec
gs
loopne
adc
xchg
or
add
and
lods
gs
aas
push
and
mov
insl
sbb
jbe
popf
xchg
jmp
fsubrl
dec
test
add
popf
mov
or
popf
pop
xor
repnz
arpl
mov
dec
shl
stos
ret
addl
int
mov
pop
imulb
jno
lss
or
es
popa
insl
stos
and
sub
in
hlt
scas
and
aas
mov
and
cli
push
xchg
lock
add
outsb
ret
sub
call
xor
mov
or
mov
test
jle
test
popa
mov
xlat
xchg
js
test
aad
lds
aam
and
jo
mov
rorl
out
push
sbb
dec
sub
mov
aaa
addr16
leave
jmp
jne
jno
outsb
outsb
and
imul
sub
and
roll
ds
add
cmp
sub
repz
std
dec
fstpt
scas
add
in
mov
cli
jae
fwait
mov
std
sub
sahf
in
pop
into
arpl
or
in
out
popa
push
adc
into
adc
arpl
adc
cwtl
out
or
dec
fidivrs
fidivl
std
pop
fucomip
pop
mov
loope
adc
into
pop
push
adc
jns
aam
sarl
and
xor
add
addr16
and
add
add
jmp
push
popa
ja
xor
and
int
dec
aam
insl
mov
push
imul
cmc
jge
mov
aam
adc
and
xchg
test
scas
mov
and
lods
lods
xchg
dec
push
pop
in
icebp
adc
and
out
sub
cmc
mov
fldlg2
imul
outsl
into
das
sbb
loope
iret
adc
in
outsw
out
fidivs
aam
jns
lods
and
lahf
cmpb
and
negb
xchg
jmp
mov
sub
cmpsb
xor
add
arpl
mov
pop
pop
and
push
pop
rcrb
jmp
lcall
mov
mov
add
sahf
mov
addr16
movsl
addr16
add
xchg
adc
cmp
test
scas
andl
jns
push
fcomip
jecxz
xchg
dec
xchg
and
jae
movsl
adc
or
shlb
dec
out
stos
or
push
or
xorb
pop
aad
push
movsl
xchg
call
xchg
test
jle
xor
enter
dec
nopl
imul
cmpsl
push
pushl
nop
xchg
mov
scas
xchg
lahf
sub
scas
lods
cmc
jg
int
mov
subb
sbb
cmp
jae
sbb
jle
jno
xor
push
xchg
pushf
lds
enter
mov
dec
loopne
fdivrl
in
sbb
ror
xor
aam
imul
stos
mov
dec
in
xchg
adcl
xchg
or
ds
fldl
cmpb
nop
ffreep
jl
js
adc
leave
call
aam
repnz
mov
mov
sbb
mov
cmc
loope
outsl
aam
and
test
ror
sub
sar
pusha
adc
mov
je
pop
imul
in
stos
or
inc
andl
pusha
aas
outsb
and
out
mov
cmp
call
into
mov
jnp
ljmp
dec
add
dec
shrb
cmp
sahf
leave
sub
pop
inc
push
pop
cmp
xchg
jb
loopne
pop
dec
push
inc
test
fistpll
adc
push
mov
inc
pop
call
or
sub
adc
xchg
adc
enter
fsubl
mov
cmp
inc
stc
push
mov
out
test
mov
push
jge
inc
out
and
rcrl
scas
jp
lret
xor
and
mov
sahf
lret
mov
inc
dec
in
pushf
pop
fwait
lret
lcall
sbbl
imul
mov
shl
enter
imul
cltd
aas
ds
inc
push
jne
dec
cmp
scas
adc
cmp
sbb
push
iret
xchg
out
dec
iret
xchg
mov
adc
pop
sbb
repz
jp
popa
mov
sbb
or
sub
xor
adc
inc
fidivl
cli
push
xchg
mov
dec
add
cld
stc
lds
cwtl
sahf
repz
in
lahf
scas
xor
lock
adc
add
cbtw
cwtl
clc
jmp
mov
mov
out
inc
je
dec
mov
int3
xchg
nop
mov
arpl
and
pop
dec
inc
movb
sbb
mov
mov
orl
iret
arpl
bnd
incl
adc
xor
cmp
add
outsl
adc
jno
popa
pop
cmpsb
mov
loope
aas
mov
push
xchg
mov
add
mov
xchg
mov
mov
scas
repz
xor
sbb
inc
pop
jo
add
clc
and
ds
sub
cmp
adc
pop
xor
jo
pop
dec
inc
hlt
xchg
int
cli
pop
mov
ja
pop
stos
adc
dec
push
lods
fidivl
push
jp
dec
mov
or
and
adc
pop
xchg
ficomps
movsl
adc
push
or
mov
pop
mov
addb
mov
jecxz
inc
addb
insb
cmpb
lcall
sub
mov
lods
adc
cmc
or
daa
cld
mov
mov
sub
orb
inc
pop
lret
rcrb
or
add
pop
or
add
das
aaa
mov
pop
add
push
sub
mov
bound
and
mulb
test
cmc
jbe
cmp
sub
ss
insl
imul
ljmp
sbb
xlat
int3
out
sar
cmpsl
leave
shl
xchg
sub
xor
mov
and
adc
loope
std
xor
insl
leave
cmp
inc
testl
mov
movsb
lahf
sbb
loopne
imul
pop
inc
jns
aas
push
and
mov
mov
mov
cmp
in
les
int
xchg
sti
sbb
cmc
pop
mov
mov
pop
push
mov
push
and
inc
xor
push
mov
pop
jns
cmp
orl
js
push
or
clc
cmp
adc
fsubrs
fnstenv
jno
dec
xchg
test
out
xchg
push
sub
dec
or
call
insl
sub
jmp
sub
pop
push
dec
jp
inc
inc
ljmp
popf
inc
ret
mov
ror
subb
pop
mov
subb
xor
xchg
inc
jae
jecxz
ret
dec
sbb
negb
pop
xchg
mov
or
mov
jl
or
dec
mov
jnp
sub
push
cmc
popf
ret
leave
pop
pop
sbb
xlat
fisubl
jb
ret
jns
inc
shlb
enter
fs
jo
clc
out
xor
push
push
out
mov
dec
adc
mov
mov
pop
repz
xchg
sbb
adc
popf
lret
out
mov
or
inc
cs
cmp
loopne
dec
adc
inc
test
pop
mov
sub
addr16
push
xchg
les
outsl
push
push
mov
in
insb
cmp
hlt
pusha
sbb
xchg
bound
jbe
out
sbb
fs
dec
mov
inc
je
or
push
xchg
outsb
pushf
insl
cld
fcoml
jp
ljmp
inc
push
dec
adc
jne
shrl
sub
add
jg
cmp
ja
setno
mov
jno
std
popf
sub
sub
cmp
adc
jo
and
lods
fstpl
jmp
pop
inc
shll
das
push
inc
in
push
insb
sub
popa
xor
ljmp
xor
in
inc
mov
movsb
paddsw
cmp
mov
jle
jg
jnp
mov
or
mov
rcll
adc
rolb
push
cmpsb
dec
lock
mov
mov
or
jl
cld
jns
pop
jg
or
fdivrs
data16
fiadds
fadd
scas
in
xchg
pop
and
fnstsw
push
pop
cmp
rcll
cmpsl
dec
mov
push
sbb
in
and
stc
push
xor
and
cmpsb
outsb
lds
popf
jns
into
dec
popf
rcr
sub
pop
xor
out
fisubs
les
fdivrl
sub
mov
fstl
mov
outsb
gs
adc
add
adc
js
lcall
push
stos
ficoml
das
mov
filds
ds
lds
and
cmp
ja
push
adc
inc
fstpl
bound
leave
sbb
repnz
cld
xchg
shl
test
mov
lret
lea
sub
cmpsb
dec
fucom
ret
fst
out
jmp
fmull
rorl
in
jmp
and
subl
in
aad
fldl
jnp
sub
ret
xchg
mov
jae
arpl
fmull
xchg
pop
xchg
les
jl
sbb
jmp
ljmp
pop
push
pop
int
inc
or
pop
in
rcl
outsl
stc
jns
xor
xchg
call
jns
xchg
mov
or
imul
mov
pop
dec
je
mov
pushf
mov
std
push
adc
in
stos
loope
testb
jno
and
sub
cmc
jno
mov
xchg
stos
cmc
xor
adc
cmp
sub
shrb
jl
sbb
xchg
cmp
and
loop
clc
call
adc
mov
out
cmp
fwait
xor
push
ljmp
mov
fs
nop
pop
lea
push
and
shrl
fcmovbe
out
pop
das
xor
push
inc
mov
rorl
aaa
fstpt
jo
inc
cwtl
jb
and
jne
or
insb
stc
or
mov
sbb
fidivs
cmpsl
in
cmpb
test
hlt
sub
out
mov
inc
jne
dec
scas
js
test
fimuls
xchg
lds
mov
or
int
pop
and
pop
mul
imul
and
lcall
jb
rclb
jne
xor
daa
adc
lds
mov
or
shlb
outsb
js
xor
xchg
lock
push
mov
cmc
les
cmp
mov
pop
fistpll
pop
stos
and
iret
mov
add
loopne
fdivrs
pop
sti
jl
or
push
ds
rorb
insb
dec
movsb
add
mov
dec
mov
push
jb
mov
aad
rol
fdivrl
push
nop
dec
mov
push
jbe
pop
out
add
enter
or
in
mov
cmp
inc
push
jbe
cmp
cwtl
arpl
rol
repnz
stos
pop
fbstp
adc
test
dec
cld
xor
addr16
fstl
enter
lret
push
mov
jp
cmc
lods
xchg
arpl
add
push
adc
cwtl
pop
mov
lods
jge
push
xchg
mov
lret
and
aas
fidivrs
ljmp
xor
xchg
hlt
pop
cmp
jnp
xchg
mov
jg
xchg
and
adc
mov
xlat
sbb
or
pop
mov
mov
das
adc
in
call
cwtl
ja
rcl
imul
aas
jp
daa
add
xchg
push
sub
popa
std
fs
fs
ficoml
pushf
dec
scas
push
popa
and
xor
jno
push
mov
ja
mov
pop
popf
pop
cmp
add
iret
in
fimuls
and
pop
jb
leave
lods
and
lahf
sub
push
inc
push
dec
bound
insl
jbe
pop
inc
lock
sbb
int3
inc
sbb
add
mov
jns
lahf
lods
adc
sbb
aas
scas
pop
pushf
aad
arpl
aad
cmp
adc
dec
rol
aaa
cmp
fisubrl
in
cmp
or
sbb
hlt
shlb
mov
and
bound
scas
mov
xchg
mov
enter
xchg
pop
xadd
jne
push
adc
outsl
dec
sub
imul
sbb
xchg
test
scas
ret
xchg
add
mov
xchg
inc
and
imul
nop
mov
push
and
loopne
stos
lock
or
sub
pushf
sub
aad
stos
pop
mov
divl
ljmp
sbb
pop
inc
test
scas
mov
rol
xchg
ss
or
mov
fstpl
xchg
insb
les
aad
inc
das
xchg
dec
push
mov
xor
xchg
call
cmp
fldt
out
int3
inc
adc
jmp
movsb
push
mov
mov
push
mov
lret
pop
lods
ja
mov
cmp
inc
mov
mov
test
or
jns
jo
stc
ja
test
add
incl
addl
xor
aaa
js
pop
sub
lahf
sbb
xor
sbb
orl
aam
add
mov
pop
push
adc
imul
cld
lcall
stos
push
pop
stos
cltd
mov
jae
push
mov
cmp
insl
jge
mov
cwtl
popf
jne
rcl
push
sbb
test
or
nop
cmpsb
out
or
jnp
inc
inc
cmp
and
lods
not
mov
ror
rcll
push
and
lock
loope
fs
fsubr
cmpl
mov
sub
test
test
sbb
cs
xchg
jecxz
sbb
pop
pop
icebp
stc
mov
add
push
mov
arpl
arpl
xchg
jnp
mov
sub
push
pop
sbb
jecxz
mov
and
sub
push
xchg
insl
push
and
enter
jle
fisubl
lahf
adc
ret
cmpb
test
dec
cmp
pop
gs
fs
jl
pop
xchg
es
pop
aaa
fiadds
sub
cmp
push
add
sub
add
pop
jnp
xor
std
jmp
lods
js
adc
lahf
sbb
push
fs
sbb
icebp
adc
adc
je
jo
lods
lahf
lods
xor
test
in
cmp
mov
ds
sub
loopne
shlb
das
adc
jno
into
jne
test
push
cs
mov
sahf
mov
xor
xor
or
orb
xchg
pop
jp
arpl
lret
sbb
xlat
insb
loope
cmp
loope
cmpsl
mov
sub
in
mov
in
jmp
mov
pop
pop
xor
jne
pushf
push
sti
andl
aas
ja
pop
inc
and
cmp
sub
call
ljmp
vphaddubd
sahf
ljmp
and
pusha
fistpl
lahf
or
pop
sar
sub
mov
dec
fldenv
push
adc
fwait
in
outsl
dec
lock
enter
jnp
pushf
dec
icebp
push
push
jecxz
xor
add
mov
ret
mov
sub
lods
fsubrl
lret
sarb
pushf
xor
or
pop
push
inc
cli
add
shlb
sub
ficoml
mov
sub
mov
push
js
jmp
dec
add
xor
inc
jle
mov
subl
sti
push
mov
jecxz
cli
ret
xchg
shll
inc
rclb
inc
adc
xchg
lahf
out
pop
sub
jge
and
mov
push
cmp
adc
jb
icebp
out
jecxz
rclb
pop
pop
lods
pop
cmpsb
ret
pushf
out
mov
inc
inc
pop
push
mov
cmp
xchg
or
cmp
lahf
xchg
mov
xchg
push
loopne
push
xchg
push
lahf
and
adcl
xor
repnz
and
jmp
lock
cmp
out
push
dec
clc
inc
or
outsb
cmp
pushf
push
or
std
fildll
jge
movsl
imul
lds
js
mov
out
push
and
rcl
inc
loop
mov
cwtl
leave
stc
mov
aas
jb
mov
xor
push
jge
xor
out
jge
test
sti
cmp
pushf
mov
push
xor
sub
cmp
mov
pop
dec
lock
test
loopne
xchg
or
adc
adc
fwait
lcall
divb
lret
add
mov
orb
aam
clc
js
sbb
xor
mov
push
orb
aad
dec
adc
mov
mov
jae
pushf
sub
jmp
inc
push
inc
or
jno
jno
jo
jle
push
adc
ret
ljmp
imul
loopne
push
and
adc
add
or
testl
scas
rorl
fwait
ret
mov
aas
imul
bound
decb
dec
cld
or
jne
mov
jnp
jecxz
outsl
int
stos
stos
jl
in
lock
dec
int
mov
int
adc
xor
loope
and
adc
pushf
xor
stos
dec
fidivl
movsb
fidivrs
mov
repnz
push
fimuls
push
cmc
es
push
mov
in
sbb
and
popf
js
push
popf
inc
dec
jge
fildll
push
mov
inc
jno
cmp
mov
dec
gs
push
mov
mov
and
imul
cs
sti
push
stos
xlat
aaa
mov
sahf
push
insl
sahf
out
ds
arpl
mov
in
cmp
adc
xlat
and
out
add
mov
lea
leave
popa
xchg
jl
add
and
fisttpll
andl
testb
cmc
jb
rcll
and
mov
popf
and
lret
or
pop
inc
fnsave
xchg
loope
mov
cmp
decl
sbb
and
sub
ficoml
and
pop
fbstp
pushf
test
enter
or
ret
idivl
sbb
mov
lahf
outsl
push
pusha
xchg
push
pop
pop
pop
pop
fldl
xlat
divl
add
push
aam
scas
push
or
push
push
cmp
aad
sub
fdivs
dec
addl
inc
repz
pop
mov
aam
out
mov
push
inc
sbb
mov
jo
faddp
es
pop
sarl
lock
iret
push
add
or
aam
pop
shll
adc
push
ljmp
insb
mov
inc
fists
scas
mov
mov
mov
cmpl
sub
sub
adc
pop
lret
hlt
aad
jae
lret
sub
xor
sarb
adc
push
aad
dec
sub
aad
or
mov
mov
and
rolb
mov
testw
mov
mov
xchg
and
add
leave
mov
sub
pop
aaa
pop
xor
and
and
mov
sub
sbb
dec
xchg
sub
xchg
fs
adc
mov
or
pop
mov
pop
repnz
inc
out
cmp
mov
adc
fsubrs
or
jbe
sbb
sbb
xor
inc
pop
jle
jg
cmp
popf
ficompl
in
int
dec
popa
dec
xor
stc
push
pop
inc
adc
shlb
ret
sbb
push
mov
rorl
push
loopne
cltd
in
pop
xor
cmpsl
out
movsb
sbb
aas
cmp
mov
ljmp
mov
push
sub
popa
scas
pop
bound
xchg
inc
cmc
fwait
ret
mov
mov
lock
xor
jmp
mov
jns
arpl
cld
mov
insb
cmp
mov
pop
add
mov
lretw
or
bound
add
sahf
pushf
cmpsb
imul
popa
jecxz
cli
sub
xchg
popa
sbb
cmpsl
push
mov
add
push
mov
repz
bound
scas
out
sbb
mov
std
dec
idivl
inc
into
xor
mov
pop
into
push
and
xlat
pushf
loop
adc
sarl
les
outsb
insb
popa
xchg
sub
mov
mov
sub
pop
push
adc
cmpsb
cmp
mov
popf
jp
xchg
cli
loop
test
aaa
outsb
xchg
aas
ljmp
pop
xchg
mov
mov
xchg
outsb
or
movsl
rol
imul
mov
ret
idivl
add
addr16
lock
mov
sub
dec
aad
xchg
popa
cmovg
add
pop
adc
xor
mov
inc
mov
js
insb
sbb
push
mov
call
nop
xchg
bnd
sbb
jg
adc
jo
out
test
outsl
negb
je
add
push
dec
aaa
imul
jns
lret
js
add
scas
hlt
outsl
and
mov
mov
out
mov
in
mov
ret
jae
in
push
jno
mov
pushf
pop
jecxz
scas
repz
cmp
cmc
sbb
mov
sub
stos
fstpl
sti
mov
ds
imulb
xchg
adc
mov
push
inc
std
out
andb
repz
mov
out
sbb
adc
rclb
fwait
imul
lahf
adc
or
xchg
xor
push
add
jl
out
or
or
sbb
cs
dec
cmpsl
mov
jl
inc
fs
stc
cmpl
out
es
sub
mov
test
add
push
leave
and
mov
test
mov
hlt
xchg
in
and
jnp
nop
fwait
jne
mov
stos
int3
lea
push
mov
push
jge
and
cmp
rcrl
loop
int
jecxz
jae
pop
in
outsl
out
sub
insl
in
jno
mov
xor
int3
mov
call
xchg
das
cmp
fidivs
movsb
jmp
pushl
jns
or
add
ss
pop
dec
scas
lods
xchg
and
rolb
cmc
js
adcb
pop
mov
add
jecxz
add
add
mov
sbb
mov
bound
lds
jg
out
iret
test
mov
lret
xchg
pop
repz
js
inc
xor
fstp
out
fs
iret
cli
jge
mov
sbb
lret
dec
add
jl
test
mov
repnz
add
je
ss
adc
jle
fmull
mov
das
lods
and
cs
aas
inc
pusha
lods
popa
fcom
movsb
ret
adc
or
cs
jl
sub
stos
mov
fisttpll
mov
jns
daa
sbb
gs
rcl
icebp
xchg
jecxz
jecxz
dec
mov
and
add
sbb
mov
dec
or
dec
ror
pop
sbb
in
movsb
movsb
fwait
lahf
out
movsl
jmp
orl
inc
push
imul
aad
add
outsb
xchg
xchg
scas
cmc
and
mov
xchg
stc
mov
cltd
pop
sub
adc
add
flds
popf
fcoml
out
fisttps
fwait
daa
pushf
mov
sbb
repz
movl
adc
arpl
loope
repnz
jae
test
pop
frstor
in
cmp
mov
addr16
inc
sbb
sub
add
inc
cld
add
int3
cmp
outsl
mov
fstl
jecxz
mov
pop
and
or
cmp
jp
fbstp
sbb
adc
jnp
inc
and
mov
pop
mov
mov
mov
add
fldcw
push
arpl
push
scas
and
testl
push
incb
jg
xchg
xchg
clc
in
ds
outsl
push
sbb
cld
ficoms
int3
daa
insb
clc
add
mov
dec
inc
mull
shll
push
or
popa
mov
push
dec
inc
xlat
and
fcoms
mov
cmp
insl
sti
jge
movsl
mov
add
jge
jp
call
xchg
push
xchg
dec
mov
xchg
data16
leave
add
popf
push
lods
mov
push
loopne
stos
adc
xor
in
dec
dec
xchg
pop
push
int3
push
fidivl
bound
test
xor
jge
fs
sub
lods
test
imul
mov
jle
nop
pop
pop
pop
mov
sbb
pushf
dec
push
lret
xchg
sub
cmc
dec
daa
ss
lahf
cmpsl
insl
shr
cmp
jb
jns
mov
xchg
fadds
insb
mov
test
sbb
mov
mov
out
mul
in
push
or
into
mov
add
cmp
loop
xorl
cmp
push
pop
mov
leave
or
and
aas
gs
mov
out
cs
test
out
mov
inc
and
fidivl
mov
jmp
xor
dec
cld
je
pop
add
pop
xchg
xor
mov
arpl
jns
xor
iret
bound
xchg
lahf
and
lds
ds
jno
and
dec
decl
loopne
loope
mov
call
adc
adc
fwait
leave
out
int3
mov
dec
test
lock
push
mov
xor
jge
jns
dec
push
jae
fcmove
cmp
xor
pop
pop
xor
rorl
push
mov
test
mov
add
sub
jnp
js
dec
jno
repnz
or
subl
orb
in
mov
jne
adc
mov
and
arpl
mov
sbb
idivb
hlt
and
ret
mov
adc
addb
sub
cmc
adc
loop
xor
jbe
and
popf
xchg
movsl
sub
fdivs
pop
popa
lods
and
jo
mov
inc
mov
inc
test
bound
jbe
mov
sub
mov
fisubs
pop
jl
jecxz
pop
inc
mov
addr16
inc
out
and
xchg
daa
and
xor
xchg
mov
pop
outsb
or
mov
cmpsb
push
lret
mov
je
ss
in
add
cmp
fst
mov
je
mov
pop
sbbb
jne
pusha
xlat
cld
scas
ds
bnd
xlat
sub
mov
push
pop
stos
sbb
ja
and
std
pusha
ljmp
push
push
sbb
sahf
in
lock
sub
add
xchg
in
inc
pop
xor
push
aaa
jnp
xchg
fsubrl
lods
adcl
imul
mov
add
insb
or
ret
push
inc
push
sbb
xlat
pop
lods
sbbb
fnstcw
rcrb
sahf
shr
push
lea
shrb
add
pusha
es
std
inc
leavew
jecxz
das
inc
sahf
ja
and
dec
xchg
xor
jecxz
add
inc
jl
cmp
mov
gs
jns
int
leave
mov
xchg
fists
xchg
push
dec
jbe
enter
push
jmp
sub
push
arpl
or
mov
aas
rolb
push
inc
cmp
cs
and
aad
pop
jle
imul
nop
lds
loopne
pop
cmp
adc
repz
aam
xor
repnz
xchg
sub
mov
xchg
scas
incl
loope
mov
lods
shrb
and
xor
push
add
imul
scas
stc
add
in
into
movsl
fs
pop
insl
jo
push
andl
push
jg
scas
das
cmpsl
test
rclb
enter
mov
or
jmp
rolb
data16
adc
cmpsl
adc
mov
sub
aas
outsb
mov
ljmp
inc
scas
pop
jno
and
lock
test
clc
imul
dec
add
sbb
loope
xchg
inc
pushf
fstpt
sbbb
lods
ljmp
xchg
jge
data16
imul
pop
hlt
nop
shll
cmpsl
jp
std
pop
jg
enter
in
bound
cmp
pop
loope
mov
pop
jmp
xchg
add
xor
and
leave
cmp
lret
jmp
mov
imul
sarl
mov
inc
mov
fnsave
int
aaa
jns
lods
neg
movsb
xchg
mov
in
or
in
loope
pop
jnp
pop
dec
mov
es
jmp
or
fdivl
pop
sub
js
std
mov
ss
sub
inc
daa
push
fstps
add
add
mov
lahf
popf
jbe
pop
cmp
clc
add
packsswb
and
push
sbb
les
imul
jns
enter
in
inc
mov
push
jo
push
addr16
test
ret
adc
test
stos
jo
adc
xchg
jb
mov
shl
jecxz
inc
sahf
lret
and
mov
repnz
mov
cmp
adc
mov
cmpsl
sub
jmp
cmp
dec
push
sbb
lds
movsl
mov
push
and
pop
int
inc
xor
mov
adc
int3
mov
test
xchg
loop
ror
lods
dec
add
fcoml
adc
mov
adc
dec
xtest
push
mov
rcrb
imul
enter
and
fcompl
jge
fcomip
xchg
sbb
arpl
adc
mov
hlt
add
adc
mov
xchg
xchg
jae
int
loope
fisubrl
clc
xchg
mov
mov
sahf
fldt
adc
mov
sbb
es
adc
pushf
out
in
sub
sub
pop
cmp
shlb
xchg
ljmp
cmc
mov
push
jb
lret
mov
mov
or
shlb
xchg
mov
xor
int3
iret
push
push
in
rcrb
loope
insl
in
push
inc
roll
stos
jns
je
int
push
scas
dec
jo
mov
outsb
aam
sub
lret
adc
shl
mov
mov
int3
jg
lret
loopne
push
pavgw
mov
insl
cld
cmp
and
cli
lods
mov
xchg
pop
int
int3
or
pop
add
addr16
testl
xor
pop
daa
lods
adcl
out
nop
xchg
lods
lock
stos
mov
mov
cmp
cld
pusha
jno
movsb
xchg
mov
inc
std
into
jmp
cmp
ja
sahf
lods
mov
add
sbb
das
sahf
mov
push
sub
addb
and
and
mov
and
sbb
adc
aam
sub
lods
ret
test
ss
sub
icebp
mov
mov
xor
push
jo
repz
adc
ljmp
adc
inc
js
jp
jl
imul
push
gs
or
mov
aaa
mov
mov
add
outsl
cmpsb
jns
xchg
push
adc
inc
in
or
insl
sbb
dec
xor
lcall
lret
or
cmc
les
stos
mov
jl
and
andl
push
push
movsb
mov
sbb
inc
cs
cmp
mov
stos
pop
arpl
push
out
pop
into
lds
test
mov
jl
xchg
pop
loopne
xor
movsb
dec
dec
mov
mov
cwtl
sarl
scas
lret
xor
mov
andb
sbb
and
push
inc
mov
mov
lahf
sbb
push
jne
ror
addr16
cmp
dec
dec
dec
cli
std
out
loope
rcrl
add
sbb
sbb
mov
or
pop
repz
and
inc
dec
in
xchg
add
outsl
stos
jg
adc
std
pop
pshufw
loope
ljmp
fsubrs
mov
cmp
jno
mov
sbb
pop
sarl
sbb
jp
sbb
xchg
mov
sub
pop
xchg
call
sub
or
imul
in
repnz
mov
pop
loopne
pop
dec
mov
cmpsl
pop
das
lret
inc
loop
xchg
call
test
and
jle
sbb
mov
cmp
add
in
jp
insb
inc
lds
pop
push
icebp
or
movsb
imul
push
iret
mov
pop
jl
sbb
pop
imul
lahf
out
enter
movsl
jl
pop
push
push
push
mov
in
adc
mov
adc
and
push
pop
clc
scas
repz
lcall
pop
jae
shl
pop
sub
outsl
loop
stos
push
test
push
xor
inc
sub
xor
fs
push
mov
and
jge
fsubr
es
cwtl
mov
pop
xchg
clc
jb
loopne
imul
dec
nop
stos
ret
outsb
dec
movsb
fs
pop
push
fstps
test
jnp
fidivrs
cltd
inc
mov
push
jl
repz
and
xchg
mov
jbe
sub
adc
jo
outsl
sbb
sahf
xchg
mov
rcrl
mov
jp
and
pusha
xchg
xlat
in
cmp
xlat
out
test
sub
shr
stos
in
pop
test
arpl
mov
cmpsl
pop
inc
inc
and
ret
mov
and
xchg
jnp
xor
mov
mov
mov
cmp
mov
jae
mov
arpl
imul
das
leave
dec
mov
xor
xor
xor
fwait
stos
mov
jno
pop
add
sub
arpl
cmpsl
ud1
bound
inc
push
lds
inc
cmpsl
push
xchg
fwait
and
in
ret
xchg
cmc
xor
dec
dec
fisubl
sub
repnz
and
mov
cmc
cmp
xchg
fdivrs
sbb
scas
sti
packuswb
inc
and
cmp
push
xor
sub
xchg
cltd
inc
sub
pop
movsb
cmp
sbb
mov
cmpsb
out
int
add
add
and
test
fldcw
add
mov
loopne
and
xchg
clc
aam
add
dec
mov
mov
mov
test
int
or
gs
sub
push
bound
insb
mov
adc
iret
jnp
xor
test
inc
arpl
push
fadds
push
cmpsl
jb
or
js
jl
xchg
and
dec
lcall
mov
int
and
testl
dec
out
mov
andb
scas
imulb
or
sbb
sbb
testb
push
adc
in
fwait
cmp
cwtl
loopne
ljmp
adcb
movsb
cli
mov
decb
fs
pop
into
scas
out
testl
mov
daa
and
scas
sub
mov
mov
lods
jmp
adc
dec
lahf
pop
mov
inc
and
xchg
imul
xchg
mov
lret
movsb
mov
imul
fistl
and
push
aaa
mov
xchg
jl
nop
std
aad
pop
iret
dec
cld
or
lock
push
pusha
icebp
mov
jne
sub
mov
scas
outsl
fistps
xchg
icebp
fdivrl
lea
test
and
sbb
mov
ljmp
test
iret
xor
imul
stos
dec
pop
adc
or
cmp
aam
pop
inc
and
sub
sub
in
pop
test
movsb
test
sub
imul
adc
cs
dec
lahf
push
ror
popf
lret
mov
sub
xchg
pop
and
add
sahf
or
std
mov
out
jns
test
pop
sbb
mov
mov
fistl
mov
cld
mov
xor
test
mov
shlb
mov
sbb
es
add
js
aad
cmpsb
pop
and
lret
iret
cmp
imulb
push
jle
call
and
out
mov
sub
imul
lods
test
sti
sub
and
into
out
add
in
mov
inc
movsl
popl
and
aam
jmp
cmp
cmp
sub
out
jmp
inc
adc
popa
mov
push
pop
mov
addr16
mov
xchg
or
mov
cmpsb
push
mov
pop
cmpsb
repnz
push
loope
mov
or
mov
fsubl
and
push
nop
pop
cmp
push
mov
in
iret
cmp
fistpl
jle
pusha
cs
fisttpll
sub
push
mov
insb
sahf
sub
pushf
loopne
cmp
imul
call
and
aaa
push
push
movsl
int
pop
cmp
pop
and
mov
popa
mov
cmpsb
or
clc
jbe
inc
xchg
dec
pop
ljmp
xchg
sti
inc
xchg
push
dec
aam
sub
das
pop
push
mov
lea
add
sub
push
xchg
push
jle
sub
adc
subl
sub
pop
js
add
aam
xor
daa
push
mov
mov
push
mov
sbb
pop
sahf
adcb
xchg
addb
mov
dec
add
aad
imul
xchg
fwait
push
cld
push
rclb
inc
xchg
inc
repnz
dec
jl
leave
mov
clc
idivb
xchg
andb
mov
rol
inc
mov
xchg
jmp
mov
loope
insb
popa
adc
pop
xor
add
iret
or
xchg
mov
shlb
dec
add
dec
je
pushw
cmp
mov
xchg
mov
push
ds
ret
ffreep
rcll
scas
in
mov
addl
int3
jle
lret
leave
xchg
into
xor
jl
sub
xchg
dec
cltd
fmull
jmp
dec
push
and
iret
popf
repz
aaa
js
cmp
into
cltd
in
hlt
out
lock
push
out
jmp
or
xchg
ret
xchg
adc
mov
inc
loop
adc
push
lods
push
out
movzwl
pop
and
adc
test
mov
jo
outsl
ja
mov
in
mov
dec
movsl
rep
outsl
mov
cwtl
or
ljmp
mov
cmp
and
mov
xor
in
pushf
shlb
or
stc
out
mov
or
and
addps
dec
or
sbb
fwait
in
scas
sarb
insl
in
dec
rolb
xorl
inc
pushf
arpl
pushf
push
out
xor
xchg
jbe
out
adc
ret
jns
jb
flds
or
mov
sub
icebp
clc
dec
cmp
push
pop
test
stos
push
iret
dec
into
push
outsb
push
daa
lret
loope
xchg
aaa
repz
dec
mov
mov
add
addr16
inc
dec
inc
jns
xlat
iret
mov
lcall
orl
pop
mov
mov
stos
adc
dec
call
push
cs
aaa
cmp
cmp
es
mov
aas
xchg
fildll
add
sbb
pop
es
hlt
add
mov
in
aam
mov
out
sarb
sbb
fildl
cmp
loopne
pop
les
cmc
and
cld
xlat
jl
mov
data16
sub
pop
push
mov
stc
jmp
loop
mov
rcll
or
add
mov
add
ds
stos
xor
cmp
cmpl
addr16
setl
xor
arpl
popa
cmp
int3
movsb
pop
mull
clc
inc
mov
fnstsw
dec
or
mov
mov
inc
xor
ror
stos
mov
or
daa
cmp
cmp
movsl
in
mov
lock
or
sub
or
or
lcall
aaa
test
or
mov
jmp
fcoml
and
inc
xor
pushf
scas
mov
cltd
cmp
pop
xor
lret
clc
sub
inc
cmp
inc
jns
push
lret
push
mov
shlb
lods
sbb
sbb
scas
loop
rcrl
jp
lods
jns
repz
inc
inc
mov
loope
scas
fimuls
addr16
popa
dec
aas
inc
out
push
adc
push
sub
out
pop
xlat
push
fsubr
cmp
or
imul
inc
inc
leave
loop
xchg
sahf
sub
cltd
divb
js
test
and
cmpsl
inc
mov
idivb
test
and
mov
test
add
mov
lea
repnz
adc
mov
cmp
or
je
filds
add
and
xchg
mov
add
repnz
xchg
inc
xor
iret
movsb
xor
dec
xchg
bound
dec
pop
dec
add
fwait
scas
es
mov
lcall
adc
jecxz
lods
inc
pop
shll
mov
cmpsb
movsb
clc
mov
dec
enter
dec
adc
xchg
repnz
mov
pop
mov
popa
mov
addr16
pop
inc
dec
shrl
or
shll
or
dec
mov
add
xchg
movsl
cmp
mov
jo
mov
imul
sti
xchg
cs
or
in
adc
push
dec
pop
sub
mov
mov
mov
pop
push
push
mov
std
mov
lret
fimull
dec
pop
inc
and
xchg
lcall
lods
std
cmp
sub
sti
scas
cmp
int
mov
addb
sub
mov
ja
mov
mov
hlt
add
not
outsb
out
or
mov
mov
orb
insb
mov
sub
and
out
lock
mov
jne
pop
leave
daa
sbb
xor
jno
rolb
mov
pop
mov
or
pusha
mov
call
push
outsl
sub
push
add
inc
out
pushaw
lret
dec
dec
cmp
aas
dec
xor
jae
xor
scas
out
cmc
add
or
in
fsubrl
mov
mov
jb
shll
xlat
sub
jo
fdivrs
sbb
cmpsb
dec
cmp
add
dec
pop
sub
inc
jo
movsl
xchg
std
add
mov
out
test
aaa
movsl
std
idivb
mov
popa
xorb
fwait
push
sbb
leave
fcmovnu
mov
cmp
xor
rcrb
jle
std
pop
adc
mov
jecxz
mov
clc
xor
imul
stos
mov
mov
pop
std
sub
bound
fiadds
andb
xor
call
dec
mov
mov
sub
or
mov
jnp
int3
dec
xor
cmp
rclb
mov
rcrb
lock
push
mov
pop
lret
out
pop
push
jo
lock
subl
or
xor
xor
shrb
imul
imul
scas
repnz
fs
cmc
sub
cld
loopne
mov
xor
popf
add
push
aaa
push
and
shr
rcrl
sti
adc
lods
pop
mov
adc
je
adc
pop
jb
adc
lea
add
push
mov
pop
jo
mov
pusha
inc
sbb
call
ds
lea
repz
lahf
mov
push
inc
leave
inc
xchg
imul
scas
adc
mov
adc
inc
in
cmp
loope
popf
cmp
xchg
iret
jae
les
add
mov
xor
in
xchg
mov
mov
out
pop
dec
xchg
pop
xchg
in
cmpsb
mov
out
push
fwait
mov
xor
mov
fwait
outsl
out
pop
mov
popf
cmp
push
loope
aad
jbe
xchg
dec
inc
inc
cmp
jmp
sub
daa
rcll
pusha
sbb
fcmovnb
rorb
out
insl
arpl
and
jne
mov
sbb
adc
std
inc
ljmp
jns
sti
add
mov
movsl
xor
pop
adc
push
jle
add
imul
pop
sbb
pop
sub
jl
sarl
divl
xchg
mov
ret
pop
movsl
xor
or
sar
repz
mov
push
in
sbb
and
lret
push
ret
fcomps
mov
or
push
sub
rcrl
mov
mov
es
cmpsb
xor
add
jae
mov
adc
leave
inc
js
test
sub
mov
imul
or
jl
nop
lret
sub
pop
repz
insb
push
dec
dec
fmull
lock
test
stos
dec
mov
repnz
pop
sub
add
pop
mov
push
mov
cli
sahf
int
mov
roll
das
push
jge
cwtl
cwtl
add
icebp
idivb
xchg
xor
fs
insb
enter
cmp
std
gs
inc
shufps
std
push
loop
jbe
stc
data16
push
fmuls
movsb
cmp
sub
inc
mov
test
and
dec
ret
sub
setge
sbbl
mov
std
out
pop
out
imul
push
sti
mov
adc
int
mov
mov
addr16
push
jg
dec
lods
jle
fimuls
bnd
lds
inc
stc
sbb
inc
pop
shlb
int
cmp
xchg
cmp
xor
mov
jl
dec
jbe,pn
sbb
sahf
mov
lahf
cmp
test
aad
push
call
push
nop
push
mov
dec
or
inc
xchg
dec
inc
popa
lock
add
add
xor
into
cmc
dec
out
jbe
clc
or
lahf
xor
iret
add
cmp
ret
mov
add
and
ret
push
jmp
shll
pop
adc
cmp
jge
push
lahf
lahf
xchg
mov
repnz
insb
out
in
or
loop
jl
ret
daa
mov
jb
jmp
mov
lret
test
cmp
in
jnp
shll
pop
add
andl
repz
sbb
adc
mov
pop
and
sbb
aad
iret
add
sbbb
stc
addr16
ds
xor
popa
sbb
push
jg
sahf
xor
and
cmpsb
adc
cmp
bound
sahf
test
stos
xchg
xor
push
addr16
jmp
push
sbb
sub
mov
inc
sub
sub
dec
iret
ja
jge
rclb
mov
mov
pop
cmpsb
mov
in
sbb
xchg
adc
mov
jne
push
ds
call
push
mov
pushf
or
andb
push
sub
loop
jle
jbe
mov
lods
ja
jecxz
inc
adc
mov
fs
and
jo
pop
aam
inc
rorb
xchg
in
lea
push
pop
cs
xchg
gs
dec
popa
dec
test
lret
push
xchg
mov
jo
pop
mov
xchg
sub
ljmp
and
or
cmp
xor
lahf
mov
outsb
fwait
bound
mov
mov
sti
js
shrl
or
cmp
push
adc
or
xor
nop
pop
sarl
and
inc
pop
adc
adc
in
jl
in
call
inc
sbb
stos
jb
iret
imul
fisttpll
lahf
lcall
sub
xor
cmp
lcall
cmp
mov
adc
lret
ret
lret
jne
in
add
xor
shl
aad
insw
imul
ljmp
cmpsl
fsubr
mov
adc
add
ret
xchg
fidivrs
mov
add
in
clc
mov
jae
scas
cmc
lret
adc
scas
xchg
xor
les
leave
dec
insb
dec
pop
aad
mov
inc
not
adc
or
inc
adc
subb
stos
cmp
lea
ret
xchg
pop
xor
cmpsb
int3
int3
add
arpl
int
sub
sbb
lret
mov
mov
stos
repz
pop
pop
xor
icebp
jns
mov
mov
icebp
cmovnp
rcl
mov
cs
and
pop
sub
les
in
xchg
lcall
leave
je
rorl
out
dec
push
push
inc
xor
imul
daa
sbb
lahf
into
xchg
mov
lcall
jl
sub
lahf
popf
cld
xor
xor
in
sbb
pop
ss
mov
ja
xchg
ss
lds
and
pushl
dec
ret
push
dec
fldenv
dec
cmp
stos
xor
fcoml
fs
loop
push
lcall
fwait
out
in
mov
jb
jecxz
scas
ficoms
out
sub
and
imul
lods
cmp
nop
xchg
mov
pop
inc
arpl
sarl
sti
mov
pop
mov
xor
mov
add
dec
fwait
in
push
push
or
mov
adc
mov
mov
and
jg
lret
fistpll
data16
jecxz
outsb
leave
pushf
daa
jns
jno
loope
dec
stos
xor
mov
push
mov
std
xchg
mov
rcr
mov
mov
mov
mov
into
pop
jo
fbld
lods
data16
push
inc
bound
mov
push
sub
cwtl
cmpsl
mov
test
sbb
sub
mov
cmp
and
jg
cwtl
sbb
ss
jg
cmpsb
jae
and
fcmovbe
test
lods
cmpsl
xor
imulb
mov
cmp
push
repz
inc
mov
or
subl
or
pushf
fsts
xor
sti
mov
dec
mov
int
mov
stc
popa
inc
int3
daa
mov
push
push
call
test
jmp
dec
dec
ffreep
outsl
in
inc
idivb
out
mulb
cmc
mov
ret
cmp
loopne
aam
add
setb
popa
push
push
test
mov
nop
fwait
rorl
sti
mov
or
mov
or
add
iret
mov
cli
jmp
pop
or
es
pop
xlat
sub
clc
fwait
sbb
rorl
lods
decb
or
xchg
xor
sbb
sbb
nop
popa
xor
pop
aam
insl
in
dec
popa
push
adc
jne
jno
cmpsl
popf
dec
fldcw
jb
sub
and
test
or
outsb
out
mov
leave
jmp
loope
or
aas
rorb
push
mov
pushf
decl
pop
add
dec
arpl
popa
cmpsl
scas
mov
les
sub
stc
ret
in
out
movsb
push
ret
inc
jmp
mov
mov
inc
mov
and
sub
dec
push
les
inc
insb
xchg
jl,pn
xchg
adc
lahf
cmpsb
test
ss
sub
pusha
mov
jecxz
pop
and
push
fwait
shl
add
fdiv
adc
lock
sub
xlat
fucomi
sbb
cmp
jmp
pop
cmp
aas
scas
adcb
jmp
xor
arpl
adc
xlat
and
pop
dec
mov
imull
mov
into
push
inc
add
roll
iret
fxch
and
pop
test
xor
call
decb
cmp
push
cmp
and
arpl
adc
jb
mov
pop
cli
lods
outsl
or
pusha
mov
dec
or
pop
push
mov
mov
std
dec
xchg
xor
cmc
imul
in
mov
sbb
imul
ss
xor
lahf
push
xor
mov
pop
das
push
imul
pop
imul
push
xor
movl
fwait
test
out
scas
pop
dec
rolb
les
inc
pop
jp
jae
roll
xor
les
and
test
ds
stos
push
or
push
divl
imul
inc
add
sub
repnz
frstpm(287
rcll
jno
sub
inc
mov
or
dec
or
outsb
pop
imul
ss
inc
in
das
mov
and
mov
fcoms
mov
mov
jb
test
outsb
adc
out
add
cli
in
and
add
ljmp
cld
call
push
int3
jle
xor
orb
fildll
scas
call
out
mov
or
fstps
fs
aas
mov
add
mov
rol
sbb
add
fcomip
push
dec
jnp
insb
dec
fidivrl
jge
fildll
std
in
int
cli
xchg
hlt
arpl
fsubs
imul
xor
jne
xchg
xchg
ljmp
cmpsb
xchg
jns
lods
out
or
pop
inc
lea
jns
xor
xlat
addb
insb
jmp
out
addl
pop
jae
xchg
and
sbb
loope
lret
jle
mov
mov
pop
pusha
adc
mov
out
dec
xor
lock
cpuid
leave
mov
and
repz
and
mov
mov
inc
dec
popf
fs
outsl
stos
lret
adc
loop
ficomps
dec
bndldx
cmp
test
push
out
ja
xchg
lds
or
adc
fdivs
sbb
fnsave
mov
cmpl
cltd
sub
adc
and
push
and
or
xor
in
push
sub
lret
ss
dec
xchg
mov
jno
mov
xor
mov
jae
aas
clc
adc
in
pop
aaa
aam
shr
cmpsl
inc
addr16
mul
pop
in
lahf
adc
pop
ss
cli
push
cs
pushl
mov
movsl
xor
cltd
rorl
inc
leave
mov
negl
cltd
push
cld
jo
dec
push
in
rcrb
addr16
adc
and
push
hlt
dec
out
jno
shlb
pusha
imul
cmp
jae
and
imul
test
add
std
and
mov
sub
outsl
stc
or
mov
inc
xor
aas
clc
movsb
and
lahf
or
sbb
inc
mov
inc
cmp
xor
xchg
clc
js
out
mov
faddl
ds
leave
lock
in
push
loope
jge
les
xchg
add
push
fldenv
lds
ss
push
mov
jae
orb
and
jns
mov
das
cld
bnd
sub
or
jmp
ds
pop
xor
data16
movsl
lea
mov
cmp
movb
mov
lret
scas
dec
arpl
shll
and
and
in
movsb
cmp
pop
repz
pop
cwtl
xor
inc
int
sub
call
pop
add
inc
jle
sbb
add
push
fnstenv
lods
push
fstps
xchg
xchg
sahf
mov
jbe
loop
ds
adc
inc
into
xchg
loopne
jle
pop
add
in
push
mov
jp
or
add
mov
cmpsl
push
arpl
cmpl
jl
outsl
xor
cwtl
stos
mov
repz
movsb
and
xchg
cwtl
cmpsb
shll
pop
inc
int
adc
adc
sbbl
xor
mov
inc
jge
lock
push
jb
sub
push
or
insb
mov
lea
sbb
mov
mov
stos
mov
fisubrs
jnp
pop
and
sbb
cmpsb
xchg
andl
sbb
nop
inc
cld
es
out
mov
and
xchg
stos
mov
sbbl
insl
or
cs
enter
fcoms
test
pop
and
push
xchg
aas
adc
push
push
cmpsl
pop
jo
fsubr
and
call
rolb
add
fistl
xchg
mov
cmp
xorl
inc
nop
push
push
mov
mov
lock
push
add
outsb
xor
sbb
pop
sbb
dec
ja
adc
ljmp
jmp
sub
mov
add
call
enter
insb
hlt
cmp
bound
mov
fwait
cli
add
adc
pop
jo
mov
jb
dec
xchg
arpl
mov
inc
sbb
xor
pop
clc
shll
imul
std
jle
int3
mulb
loopne
add
jns
insb
or
adc
btsl
in
popf
xor
mov
dec
xchg
fcomps
ret
cwtd
push
push
rol
popa
mov
adc
or
enter
bnd
mov
xchg
enter
and
ret
cmp
pop
cld
arpl
popa
pop
insb
or
add
mov
shlb
add
das
push
cmpsb
aad
mov
and
call
mov
call
sbbb
sub
cli
sub
xor
aam
jno
das
nop
ficoms
dec
cwtl
dec
aas
nop
dec
orl
cli
mov
mov
popf
sti
mov
sub
xchg
lock
pop
xchg
int3
imull
mov
aas
popa
sbb
fs
scas
pop
repz
cmpsb
mov
sub
stos
xlat
fwait
out
lcall
shr
js
xchg
in
faddp
dec
ret
push
pop
or
rcll
or
test
pop
sti
mov
mov
ja
mov
sarl
pop
xchg
das
movsb
int3
xchg
cmp
xor
xchg
sti
fsubs
dec
fisubl
cmpb
ljmp
stc
sbb
enter
fsubrl
mov
dec
repnz
dec
fptan
sub
xchg
mov
out
xchg
mov
push
scas
and
mov
addr16
insb
jecxz,pn
sbb
or
scas
sub
int
jg
in
std
and
mov
pop
mov
ds
cmp
lret
sarl
int3
adcl
cmpsl
inc
andb
arpl
add
roll
out
movsl
loopne
shrb
rclb
cmp
faddl
or
pop
lahf
fwait
out
xor
sub
push
push
jns
dec
lods
xchg
cltd
cmp
sub
xor
enter
push
mov
adc
mov
pop
daa
icebp
push
xchg
cmp
test
test
xor
mov
fidivl
incb
ret
aad
fildl
cltd
cmpb
sbb
in
cmp
fs
jl
lret
outsl
cmp
insb
pusha
push
pop
repnz
or
xchg
lods
jno
rcrb
cli
pop
stos
mov
pop
call
cmp
xchg
sahf
pop
xor
or
push
jo
push
repz
push
jno
cli
or
sbbl
lods
mov
mov
jmp
sbb
and
hlt
xlat
pop
dec
sti
pop
test
jo
in
jnp
in
and
xchg
popf
enter
out
clc
outsb
mov
or
cmp
mov
adc
out
xor
aas
daa
add
imul
hlt
push
push
rol
cld
fs
fs
negl
ficomps
jl
pop
inc
fwait
out
out
sti
icebp
call
inc
fdivl
pop
mov
sub
cmpsb
add
mov
inc
leave
and
rcrb
shll
in
cld
ret
jo
or
push
hlt
inc
sahf
fldenv
mov
pop
dec
xchg
xor
shl
icebp
and
mov
mov
cmpsb
add
shl
sub
or
mov
mov
in
mov
sahf
das
roll
or
jmp
ja
pop
das
or
cmpsb
pop
inc
xor
cltd
daa
in
xchg
pop
mov
cmp
cmp
adc
adc
xchg
lods
sub
and
mov
shrl
inc
test
and
pop
xor
mov
lock
add
xchg
icebp
mov
fisubrl
cmc
icebp
push
lcall
leave
push
jo
mov
fstpl
mov
cmp
movsl
sub
das
cmpsb
fwait
in
lret
cmp
mov
push
xchg
cltd
mov
inc
aas
xchg
and
out
sbb
sbb
pusha
shl
daa
inc
push
jle
push
adc
xchg
or
sub
pop
sub
sti
outsl
das
jb
sub
test
pop
inc
bound
or
or
dec
jmp
fisttpll
inc
dec
outsl
seta
sbbb
cltd
mov
push
inc
adc
mov
jnp
add
push
es
mov
adc
aas
loop
xor
cmp
fwait
imul
out
lods
pop
or
lret
adc
cmp
lret
lock
push
fildll
xchg
jg
cmc
dec
les
xchg
adc
ret
in
mov
les
mov
xchg
fmulp
xchg
cmc
stos
cmpsl
sub
bound
xchg
lock
filds
or
pop
subl
rolb
test
dec
xor
jae
push
xchg
dec
xchg
xchg
pop
out
fcoml
idivb
int3
and
dec
cmpsl
test
pop
aas
mov
and
mov
push
aam
rclb
in
xchg
orl
les
sbbl
xor
and
or
scas
filds
xchg
and
pop
sbb
sbb
sub
mov
loopne
push
je
into
xchg
push
xchg
push
lock
add
mov
fadds
add
mov
daa
mov
sbb
cmp
or
arpl
push
movsl
sbb
inc
push
and
cli
cmp
or
mov
icebp
inc
mov
test
dec
lock
sbb
mov
or
push
mov
stos
leave
cmp
mov
jg
in
ret
xchg
sbb
cltd
inc
movsb
adc
xchg
dec
adc
dec
dec
call
and
fmuls
negb
pop
xor
orb
jb
testb
inc
adc
cmp
pop
mov
insb
arpl
sub
pop
jnp
lahf
sub
iret
xor
mov
mov
sub
sub
imul
mov
ret
sub
sub
dec
inc
clc
subl
xchg
out
loop
lahf
sub
lea
imul
dec
nop
cmp
jae
add
mov
cmpsb
enter
sub
sub
jbe
cli
mov
jbe
sbb
repz
insb
cwtl
in
push
push
jno
cmp
sub
adc
push
out
jmp
and
adc
and
scas
mov
movsl
xchg
insl
ret
call
ljmp
test
in
andb
imul
push
mov
test
shll
cmp
pop
inc
jno
sub
ljmp
mov
out
cs
es
mov
fwait
iret
inc
loop
pop
pop
jp
mov
or
cmp
hlt
bound
leave
scas
mov
xchg
nop
mov
dec
and
inc
lret
dec
sbb
daa
mov
push
push
and
mov
dec
jg
pop
mov
inc
shrb
cmp
mov
and
out
rorb
jg
jmp
mov
jge
sbb
xchg
pop
hlt
fwait
repnz
rcll
in
mov
and
jns
adc
xlat
push
stos
push
daa
mov
mov
gs
dec
push
aas
inc
int
cmp
hlt
pop
xchg
notl
cmp
test
or
js
push
add
pop
adc
sbb
insl
movsb
pusha
into
lea
cltd
fdivrl
xor
mov
int
ja
fs
js
xor
push
inc
jae
mov
pop
push
mov
adc
xor
sbb
xor
clc
ja
repz
out
in
jecxz
outsl
xor
stc
xor
sub
das
jge
jns
lods
push
pop
pusha
adc
repnz
cmp
mov
test
jns
pusha
test
push
mov
push
shrl
negl
shll
insl
imul
inc
sbb
dec
jle
add
pop
xchg
lcall
repnz
xchg
xchg
jb
int3
pusha
dec
dec
inc
call
sarb
cmp
inc
push
pop
ja
shrb
lret
mov
pop
imul
mov
mov
sbbl
sti
xor
iret
data16
daa
and
and
aam
and
xor
outsl
pop
ror
mov
scas
mov
add
jle
jecxz
loopne
pop
mov
lea
es
cld
cmp
jnp
das
cwtl
cmp
addb
and
aas
cmp
and
sbb
mov
fs
in
loope
fcoml
push
xor
pop
mov
xchg
sbb
or
loop
mov
push
fidivrl
push
or
jae
pop
pop
mov
jl
pop
and
inc
outsb
cs
and
xor
push
andl
lods
adc
jno
in
bound
fcompl
add
inc
sub
cmc
movsl
sti
push
xor
lods
dec
shlb
ja
mov
stc
cmpsl
lods
imulb
add
push
aad
addl
adc
imul
subl
ficomps
mov
cs
leave
add
inc
movsb
clc
ficompl
cmp
pop
sub
insb
in
addl
outsb
imul
push
cmp
inc
or
push
jmp
sub
push
xor
xor
sbb
mov
mov
add
mov
out
scas
ss
or
adc
shrb
inc
mov
sbb
insl
loope
xor
in
sbb
mov
mov
out
jnp
loope
mov
pop
aas
out
stc
adc
insb
jg
xor
fucom
iret
sbb
xor
xchg
cli
js
rorb
jnp
sub
xchg
inc
das
sub
cmpsl
fst
dec
outsl
fidivrl
jmp
jne
sbb
add
push
jb
cwtl
int3
sub
or
hlt
fdivr
xor
xor
xlat
sub
and
mov
imul
lods
pop
mov
nop
mov
sbb
and
cmp
xor
aaa
mov
sub
xchg
cmp
pop
sti
repz
sub
pop
mov
mov
subb
jbe
xchg
sub
cltd
pop
and
sahf
mov
mov
adc
push
out
or
sti
addl
stc
dec
push
push
js
xor
outsb
xchg
lcall
les
jbe
fidivrs
fwait
lods
adc
jecxz
lock
in
call
cmpsb
push
jb
fs
xchg
addl
js
lods
dec
ret
sub
inc
mov
and
jns
pop
sub
pop
sbb
lea
jmp
in
push
ljmp
mov
negb
les
ds
jl
mov
arpl
push
in
push
mov
sti
mov
push
ss
mov
cld
enter
sahf
dec
sahf
stc
je
push
fsts
pop
adc
out
ss
jo
dec
ja
sahf
cmp
sbb
cs
dec
jns
cltd
xor
mov
mov
in
nop
pop
fidivl
adc
outsl
mov
jb
xchg
mov
inc
sbb
mov
mov
cltd
push
jo
jp
hlt
rorb
xor
jl
arpl
pop
mov
sub
ror
dec
mov
jle
mov
pushf
inc
cwtl
xchg
inc
call
and
decl
jns
pusha
cltd
jp
jns
push
mov
in
and
xchg
aam
out
mov
push
inc
testl
into
jo
jl
jno
iret
mov
roll
and
and
xchg
mov
inc
dec
xor
lock
aad
pop
inc
and
sub
jmp
jle
int3
xchg
bnd
repnz
lock
mov
xchg
lret
push
ss
testb
mov
mov
mov
rol
cltd
adc
pop
jnp
mov
mov
sbb
jns
xlat
pop
imul
cmp
inc
sub
gs
push
mov
fnstcw
call
stos
inc
inc
lahf
cmpsl
je
push
repnz
xchg
mov
sub
jmp
ss
and
nop
rorb
dec
sub
xchg
inc
outsl
and
fisubl
iret
and
inc
adc
ficoms
cmp
ret
or
mov
cmc
orl
pop
icebp
cmc
mul
dec
mov
mov
cmp
mov
push
aas
stc
jns
adc
mov
xchg
andb
jae
jno
out
or
mov
bound
push
push
inc
pop
mov
push
mov
fadd
shl
cmp
jmp
jo
dec
sbb
cmc
adc
ret
and
mov
xchg
inc
lea
clc
jl
push
fsubs
pop
mov
cmp
xor
iret
sti
ds
mov
out
mov
mov
or
xchg
or
gs
mov
sub
xchg
cli
add
lods
jno
push
jnp
dec
outsb
scas
jo
push
aad
scas
push
pop
lods
cmp
fsub
fisttpll
sbb
mov
pop
fistpl
andb
dec
add
aas
ljmp
sbb
sub
stos
out
mov
or
pushf
jle
ret
xchg
sub
mov
outsl
mov
leave
fsubs
mov
shl
ljmp
bound
add
fistl
lods
std
lea
clc
les
cmp
fwait
mov
push
test
pushf
lods
subb
ja
jp
sbb
push
mov
and
nop
cmp
sbb
mov
add
scas
iret
mov
outsl
scas
xchg
adc
out
in
pop
push
dec
pop
and
dec
pushf
je
mov
out
jae
sbb
pop
loope
xlat
loopne
and
repnz
mov
je
fs
addl
sub
lret
adc
stos
test
mov
push
shlb
sbb
int3
fisttpl
icebp
or
dec
xor
std
pop
into
sbb
mov
sbb
mov
stos
adc
lret
subb
lret
cwtl
leave
jmp
cmp
xchg
in
xchg
js
push
sbb
push
cmp
mov
push
push
fmull
mov
inc
repz
xchg
mov
sub
adc
cmp
mov
sysexit
arpl
lret
lds
cmp
and
pop
gs
daa
and
popa
pop
pop
push
xchg
lock
ret
test
and
push
fcmovnb
out
hlt
iret
dec
dec
ljmp
out
mov
push
pop
pop
lds
jmp
dec
push
push
gs
pop
mov
loopne
pop
in
mov
icebp
pop
movsb
cmp
xchg
cmp
psadbw
cmp
xor
lock
push
cwtl
adc
mov
jp
xor
arpl
jbe
pop
cli
inc
adc
add
cmp
ss
cmp
outsl
pop
pop
imul
cs
outsl
add
pushf
cmp
dec
notl
inc
cwtl
xchg
je
fdivl
lret
push
mov
addl
xor
ja
push
movsb
adc
lea
jmp
cmp
sahf
fsubs
cld
shll
aaa
scas
icebp
jbe
loope
xor
inc
add
mov
ja
lcallw
adc
sbb
push
jl
mov
or
nop
or
leave
mov
lea
rolb
in
insb
jne
adc
and
or
sbb
xor
gs
inc
fcmovnb
jo
sub
cltd
add
hlt
mov
call
lods
inc
cmpb
xor
inc
stos
jmp
lock
sbb
std
mov
dec
mov
rorb
fidivrs
in
mull
sbb
dec
jae
jmp
add
fisttpl
push
imul
cmp
nop
ror
out
rclb
aad
sbb
lock
test
nop
push
jg
mov
push
or
dec
test
sbb
adc
sbb
test
jbe
cli
pusha
sar
jo
mov
mov
repnz
pop
int
dec
insl
xor
movsb
movl
mov
lret
pop
xchg
in
repz
and
lret
push
fwait
pop
cwtl
iret
in
push
out
pop
cmpsl
add
or
outsb
icebp
shlb
push
out
mov
mov
outsb
xchg
xchg
rorl
out
testl
test
leave
sbb
insb
mov
rcrl
loop
sarl
mov
loope
xchg
xor
pop
arpl
loopne
mov
clc
adc
lcall
jle
add
sbb
adc
sbb
enter
dec
lods
arpl
loop
test
dec
and
out
jp
sub
pusha
sahf
and
mov
mov
mov
and
inc
lods
jno
or
test
js
mov
roll
push
mov
sbb
pop
inc
jns
orl
xchg
push
xlat
test
sbb
cmp
mov
mov
or
pop
fstps
and
push
and
ja
ret
jle
xlat
out
cmp
sbb
imul
pusha
fbstp
int3
sbb
push
bound
and
pusha
jbe
mov
jb
gs
push
stc
jbe
lods
inc
mov
inc
sbb
xlat
jmp
rorb
mov
jge
and
sub
pop
push
or
cltd
sub
pop
add
insb
insb
jmp
movsb
in
mov
mov
pop
jo
jmp
ja
psllw
fistl
frstor
shrb
ja
pop
out
jp
adc
inc
cmp
les
push
in
jmp
sbb
xlat
mov
mov
pop
push
shl
xchg
lods
inc
lahf
inc
cs
and
and
popf
jg
imul
adc
jmp
divl
add
adc
adc
sub
jp
xlat
sahf
jae
and
hlt
les
lock
lds
loop
repz
loop
mov
adc
xor
sub
test
lods
adc
mov
cld
and
add
in
xchg
pop
push
stos
sbb
rcl
sbb
icebp
mov
cmp
addl
ficoml
push
cltd
in
sub
cmc
sub
mov
enter
cli
inc
test
xchg
rcll
cltd
mov
out
or
arpl
mov
mov
add
pop
jle
aam
fbstp
inc
ja
jmp
mov
loope
jbe
jnp
dec
sbb
xor
ret
pop
mov
aas
js
dec
adc
cmp
stos
pop
iret
dec
add
insl
mov
in
mov
inc
loope
mov
pop
push
dec
movsl
adc
test
subb
pop
cs
cmc
pop
pop
stc
cmp
mov
imul
add
mov
jno
test
mov
xlat
mov
jmp
dec
lea
xor
xchg
cmp
clc
in
js
rcrb
mov
mov
hlt
cmp
add
pop
mov
lods
stc
out
mov
icebp
pop
lods
int
lcall
cmc
jne
xchg
add
cmpsb
push
cmpsb
into
ficompl
push
test
mov
mov
lea
test
outsb
cli
in
xchg
cmpsl
sub
negb
test
jecxz
jp
mov
xchg
xchg
dec
push
dec
jo
jnp
push
scas
dec
adc
cmp
int
pop
jecxz
sub
jecxz
int
popa
sbb
test
add
mov
outsl
popf
jmp
mov
inc
xor
sbb
jge
cmp
pop
and
mov
iret
sub
and
sub
out
adc
xchg
sub
xor
insl
add
je
jmp
mov
cmp
pop
cmpsb
hlt
mov
push
mov
dec
mulb
mov
pushf
scas
repz
fisttpl
dec
in
scas
enter
imul
fdivs
lcall
inc
cwtl
mov
pop
dec
pop
or
xor
movsl
cwtl
inc
adc
cwtl
jmp
insl
jnp
sub
xor
and
jns
push
sbb
cli
std
sarb
sbb
cli
push
cli
fldt
inc
icebp
push
sbb
dec
shrb
int3
push
in
ja
jge
adc
test
and
lret
push
out
nop
int3
push
ljmp
dec
mov
jg
lret
mov
scas
or
inc
xor
cltd
mov
mov
or
fidivrl
imul
cmpb
lahf
push
lods
icebp
dec
in
scas
jne
mov
cmp
push
xor
sbb
neg
inc
or
ss
mov
or
ficoms
pop
subl
jle
hlt
adc
mov
sbb
cmc
adc
xchg
adc
push
push
mov
dec
sub
lds
add
xor
imul
repnz
add
dec
and
jp
or
jle
mov
repnz
cmc
or
xlat
mov
jg
test
xchg
loop
cmp
jne
std
fisubl
adc
pop
sub
xchg
cmp
movsb
jmp
cmp
cli
scas
dec
sub
movsb
pop
sti
pushf
sub
jmp
cld
pop
jns
fldln2
and
xchg
leave
clc
xor
lea
pop
int
test
inc
cmp
cmp
pop
add
dec
mov
ret
jmp
pop
mov
lds
leave
jmp
mov
idivl
nop
lahf
cmp
out
jle
jmp
add
pop
cmp
adc
or
cs
mov
dec
mov
add
or
add
pop
push
movsb
fs
out
dec
cmp
je
add
push
sub
dec
shlb
or
das
xor
addb
sub
pop
pusha
adc
push
movsb
cltd
mov
lret
mov
add
adc
ret
cmp
push
xchg
xchg
aaa
in
pusha
cmp
mov
xchg
adc
jns
and
mov
je
and
int
or
icebp
leave
jecxz
test
lea
imul
xor
ror
cltd
jmp
add
adc
divb
aaa
enter
jg
add
push
les
fidivrs
out
outsl
fnsave
shl
insl
mov
sbb
ja
mov
mov
mov
xchg
inc
imul
sbb
mov
add
aaa
test
sbb
push
push
je
mov
mov
mov
jbe
sub
sbb
cwtl
ficompl
sub
dec
xchg
and
js
sub
je,pt
std
out
aad
pop
cmpsl
mov
repnz
insl
mov
sbb
imul
dec
shrb
mov
inc
jl
mov
insl
sbb
or
int3
subl
adc
sub
hlt
mov
std
enter
adcl
push
push
mov
in
mov
mov
push
adc
cmc
sub
ja
daa
clc
inc
inc
inc
and
ret
cwtl
dec
hlt
rcl
jecxz
pop
inc
mov
icebp
adc
lahf
ret
pop
jb
addl
fcmovnb
clc
lods
popa
inc
mov
lret
test
jns
leave
and
es
pushf
test
cs
jle
or
pushf
fwait
lds
dec
mov
pop
or
jae
out
adc
inc
jnp
push
push
cmp
repz
js
xor
mov
adc
paddw
out
outsb
push
inc
mov
fucom
cld
imull
or
stos
into
jmp
xorb
pop
jl
pop
jge
scas
leave
cmp
add
mov
or
shll
jle
cltd
and
call
xor
mov
jge
add
xor
fstpt
jae
mov
xor
pop
aad
out
ficomps
inc
repnz
and
sbb
call
scas
outsl
mov
mov
les
lret
sub
jb
bound
pop
or
sarb
lret
sub
mov
inc
dec
ret
loop
push
sbb
push
dec
stc
push
mov
xor
and
fstpl
xchg
test
rclb
xchg
jns
es
sub
into
loope
mov
cmp
mov
and
popf
int3
and
xor
daa
add
loopne
test
ret
inc
sub
cmp
or
fldenv
fwait
scas
jle
aaa
cwtl
loope
fdivrl
arpl
lret
arpl
movsl
jmp
add
loope
cmp
pop
add
adc
loopne
ret
inc
xor
add
cmp
inc
adc
and
or
enter
mov
adc
out
or
push
mov
ja
push
adc
dec
dec
ljmp
pushl
popf
jnp
aas
cs
sar
pop
adc
movl
test
cmp
jmp
and
or
xchg
call
push
adc
nop
arpl
push
or
insl
mov
add
outsl
mov
sbb
andl
dec
mov
mov
jae
rclb
leave
pushf
adc
inc
and
jle
imul
loop
dec
pushf
je
adc
mov
jo
aam
lock
push
out
cmp
dec
aad
push
sahf
jnp
or
xlat
mov
cmpsb
shll
mov
ss
sarl
push
add
or
loope
push
insb
mov
das
lods
popa
cltd
test
cmp
push
push
popf
sub
das
inc
les
aam
movsl
inc
loop
jne
cltd
sub
inc
sub
mov
adc
pop
dec
jmp
add
rolb
rcl
leave
or
and
in
fistpl
xchg
insl
xchg
addb
jo
popa
mov
aas
sbb
mov
lret
addb
insb
enter
push
test
mov
xchg
es
stos
inc
push
mov
clc
sbb
int3
movsl
xchg
popa
mov
mov
in
adc
adc
cli
stc
out
cmpsb
or
cmp
mov
fcmovnbe
jl
xchg
movsb
xchg
scas
dec
inc
lock
add
adc
jns
hlt
sbb
test
adc
negl
repz
cld
test
cmp
and
add
xchg
loop,pn
add
xlat
imul
enter
or
into
test
add
je
sbb
daa
jle
push
mov
rorb
shr
out
mov
loopne
jae
mov
sbb
cmp
dec
cmc
jno
add
xchg
push
stos
cmp
icebp
shrl
js
shl
popaw
adc
mov
btc
daa
ja
jno
and
pop
xorl
jp
jmp
sub
dec
fisttps
enter
and
mov
jle
mov
jnp
pop
push
cmp
mov
outsl
aam
addr16
add
movsb
sbb
or
dec
cmp
cmpsl
mov
mov
imul
mov
mov
out
das
mov
adc
xchg
jno
fcmovnbe
js
test
shr
xchg
inc
fadds
scas
push
cmp
dec
sbbl
ds
fsubp
and
repnz
movsl
mov
pop
test
lret
subb
ret
test
js
push
ret
clc
shlb
jb
cmp
add
gs
ffree
ret
iret
cmp
jmp
idivl
jbe
adc
mov
pop
insb
std
mov
mov
inc
repz
mov
push
loopne
out
xor
sbb
aam
psrld
stos
inc
sar
inc
mov
or
jns
lret
mov
scas
jle
jae
movsl
icebp
cmp
call
push
imul
ret
rcl
icebp
out
test
add
xchg
data16
stos
in
adcl
mov
popa
push
mov
jge
sub
movsb
sbb
int3
and
pop
xor
gs
jge
jo
sub
cmp
dec
movb
mov
aaa
cmp
add
inc
sub
movsl
cmp
testb
rol
pop
sbb
and
loopne
dec
lock
mov
pop
gs
shll
in
jno
pop
dec
dec
push
repnz
cmc
or
int
and
push
cmpl
sbb
clc
mov
or
clc
cmp
scas
or
fs
pushf
test
mov
repnz
addr16
mov
dec
push
pop
shll
fimull
sbb
inc
dec
repnz
repnz
daa
addr16
push
cmp
ret
pushf
mov
or
imul
lret
and
in
push
aas
or
popa
cltd
lock
inc
bound
mov
or
out
outsl
xchg
jecxz
pop
mov
mov
add
inc
jle
mov
fnstcw
lock
mov
mov
and
cli
int
lret
out
call
dec
jecxz
and
enter
xchg
push
xor
inc
sub
pushl
jbe
lret
dec
dec
mov
mov
jl
mov
xor
test
add
xchg
dec
jbe
lea
bound
lcall
repnz
popa
or
or
sub
fs
jb
pop
sbb
aad
xlat
add
lcall
out
dec
movsl
inc
jbe
push
pushl
sub
sub
add
fadds
jo
js
int
inc
push
adc
andl
sbb
std
stos
cwtl
mov
fdivrp
adc
fnstenv
pop
in
aad
clc
aas
xchg
adc
xor
sub
in
pop
es
xchg
in
in
sbb
imul
clc
les
pop
cmpsb
lret
push
jae
adc
pop
daa
js
sub
inc
les
scas
pop
push
xchg
mov
or
mov
xor
sub
dec
sahf
or
add
int
jle
jo
mov
cmp
cmc
pop
add
pop
mov
mov
lahf
xor
fcomps
fdivl
loopne
loop
imul
xor
or
shlb
sbbl
pop
sbb
shl
jl
xchg
push
mov
push
scas
sbb
ffreep
inc
in
mov
add
mov
aaa
shl
icebp
pop
cmc
jl
push
mov
xor
jne
cmp
lods
into
sti
lcall
ret
jae
or
dec
sbb
xchg
mov
loop
call
xor
icebp
and
cld
das
pop
imul
xchg
nop
gs
fidivrl
gs
int
pop
xor
jnp
dec
add
xchg
sahf
out
insb
xchg
lahf
scas
fcomp
or
sbb
roll
add
testb
xchg
aaa
loop
bound
jb
cld
push
mov
xchg
stc
rcll
pop
daa
inc
sbb
in
cs
aas
or
xchg
xchg
xor
or
cmp
outsl
aad
movsl
mov
fsubrl
pop
pop
rcl
and
js
es
in
ficoms
sub
lock
test
or
jae
mov
fbstp
jnp
sub
pop
dec
mov
into
lods
inc
movsl
cmpsb
or
sbbl
lock
pop
and
adc
lods
fdivs
inc
mov
rorb
dec
pop
sbb
mov
test
fcompl
cmp
andb
std
pop
aas
popf
push
pop
mov
pop
scas
gs
add
adc
aas
mov
outsb
or
push
test
jae
add
push
ret
or
jno
and
or
test
inc
aad
addr16
daa
mov
push
stos
lea
rcrl
aad
pushf
push
jp
jg
shlb
adc
shlb
jns
jmp
add
dec
xchg
mov
push
jnp
out
mov
push
jne
xor
xchg
dec
bound
jnp
jl
pushf
mov
loop
sub
jne
or
pop
in
push
pusha
xchg
gs
lds
clc
mov
sbb
lcall
cmpsl
xchg
scas
into
fwait
movsl
repnz
jp
cmp
test
es
cli
mov
into
adc
clc
lcall
ss
jmp
and
in
lret
clc
cltd
cmp
push
mov
test
xor
mov
adc
int
out
and
adc
sti
int
lret
jno
mov
mov
cld
xchg
pusha
add
pushf
sub
inc
popf
lods
repz
or
ja
cmp
sbb
inc
nop
sub
jp
pop
andb
push
into
and
dec
push
punpckhbw
les
cmp
jg
dec
sbb
jmp
mov
shr
mov
xor
adc
fs
mov
lods
inc
lds
jno
outsb
stos
imul
jo
je
imul
stos
in
rol
add
lock
popf
mov
sbb
mov
fistpl
sbb
mov
or
icebp
mov
lods
call
fwait
mov
xchg
push
imul
lods
jnp
pop
mov
add
imul
jmp
outsl
mov
aaa
jns
insb
adc
aam
icebp
push
and
out
fdivs
push
or
lds
xor
mov
int3
jbe
mov
sub
sub
push
push
inc
mov
divl
and
aaa
insl
push
xchg
adc
rclb
out
test
xchg
mov
ljmp
pop
sub
push
dec
push
cmp
mov
cmp
adc
xorb
out
adc
stos
adc
pop
fldl
idivb
aam
cwtl
lahf
and
mov
idivl
lret
sub
gs
jb
jns
xor
cmpsl
pop
pusha
add
adc
stos
iret
sahf
enter
aas
lret
inc
sub
pop
sbb
cwtl
nop
lea
stos
dec
cmp
out
adc
dec
andb
lods
orl
adc
pop
bound
add
sti
mov
jnp
daa
daa
mov
dec
xchg
testb
or
lcall
adc
pop
mov
test
mov
push
sub
bnd
test
mov
dec
sbb
lcall
ja
sbbb
mov
jecxz
jbe
jb
and
xchg
inc
jo
dec
ds
jnp
sbb
pop
adc
xchg
scas
xchg
xchg
les
iret
adc
shll
dec
testb
add
dec
and
stos
and
inc
test
dec
xchg
mov
inc
mov
int
mov
xchg
cmp
push
int3
sbb
movsb
sub
cwtl
jo
inc
adc
xchg
pop
xor
pop
add
add
mov
pop
addr16
outsl
inc
sahf
in
mov
adc
add
xor
bound
or
ss
and
ss
hlt
mov
dec
sbb
mov
enter
icebp
cmp
in
mov
fisttpll
xor
sbb
ret
add
aas
push
push
dec
sbb
sub
xor
push
ss
mov
sbb
jo
inc
daa
mov
mov
inc
sti
jmp
fsubs
fwait
in
lahf
fisubl
mov
jbe
ds
xor
and
mov
rorb
sub
cmp
ret
bound
and
xor
or
and
mov
lds
mov
pop
rolb
aaa
jno
or
out
cmp
xchg
inc
call
in
inc
mov
inc
cmp
popw
xlat
cltd
sbb
mov
pop
and
out
mov
dec
std
movsl
loop
frstor
fs
incl
mov
idivb
mov
movsl
and
cs
mov
aas
sbbl
dec
fwait
pop
push
push
add
pop
lret
aad
push
inc
cmp
mov
imul
sti
and
je
jns
test
iret
xor
push
outsl
gs
push
mov
jns
jmp
lock
fcmovb
stos
xchg
cltd
movsl
xchg
stos
sub
xchg
jecxz
jl
inc
loope
xchg
in
mov
mov
or
pop
push
outsl
push
sbb
push
getsec
out
mov
cmp
add
dec
imul
cmpsl
dec
lods
pop
loope
in
ret
int3
xlat
pop
das
xor
leave
add
movsb
pop
lods
sbb
mov
inc
sbb
jns
das
or
andl
lcall
push
in
mov
dec
and
jo
mov
outsl
fstpt
mov
andl
into
xor
les
gs
movsl
add
mov
bswap
out
in
push
addr16
bound
scas
fdivrs
imul
sbb
mov
sub
ret
mov
sub
sbb
mov
mov
push
cwtl
clc
cmp
xor
lret
fiaddl
sub
fnsave
xchg
inc
cld
mov
sbb
sti
test
jmp
test
sar
shlb
xor
sub
decl
pushf
xchg
shl
push
es
jns
xor
push
pusha
dec
sbb
mov
outsl
les
and
js
std
adc
and
test
fucomi
mov
mov
sti
ret
mov
adc
xlat
int3
push
fidivrs
xor
cwtl
scas
ret
pop
hlt
pop
fwait
mov
xor
loop
and
sub
fildll
cs
mov
jae
nop
cmp
adc
je
ret
call
xchg
enter
add
mov
pushf
cwtl
mov
sub
and
cs
mov
leave
push
sbb
pop
mov
shrb
popa
enter
inc
sbb
cld
sbb
jl
xchg
dec
cmp
and
sahf
inc
shll
into
outsl
and
inc
cmp
mov
notl
test
arpl
inc
cmpsb
mov
call
jge
movsw
stos
and
adc
jo
out
ret
adc
popf
sub
pop
in
xchg
movsb
clc
mov
stc
xor
les
xchg
sbb
add
ret
xchg
jp
adc
dec
jns
mov
nop
jecxz
xor
lods
fucomi
sarl
rcr
xchg
xchg
lahf
xor
inc
insl
pop
mov
in
mov
and
jno
iret
js
xor
test
jge
or
or
scas
sbb
sbbl
pushf
mov
aad
adc
push
sub
sbb
xchg
push
lds
lock
cmpsb
aas
or
nop
xchg
icebp
xchg
jle
xchg
mov
aam
jo
ja
imull
es
movsl
mov
mov
push
sub
aad
mov
popf
mov
adc
pop
jmp
mov
pop
mov
mov
push
mov
mov
add
addr16
mov
movsb
lods
mov
mov
rcr
lods
or
nop
mov
fisttpll
and
lret
jo
push
lock
aaa
cs
ret
insb
push
sub
das
mov
fstpt
icebp
pop
fs
adc
imul
negl
aam
imul
addr16
jnp
int
pop
test
mov
push
pop
mov
push
push
lret
jecxz
stos
test
xchg
in
icebp
jp
pop
aas
add
or
pop
fbld
push
shrb
in
xchg
fldcw
pop
andl
dec
xchg
mov
ja
xor
xchg
cmpsl
test
pop
andl
push
inc
fsubs
adc
inc
inc
stc
push
jecxz
insb
xor
jp
push
pusha
pop
ja
mov
dec
mov
leave
mov
lock
bnd
movl
int3
mov
pop
pop
dec
cltd
jno
ja
enter
add
mov
call
movsl
pop
sbb
add
inc
fldcw
jbe
out
jg
cmc
setl
mov
pushf
cmp
pop
test
out
mov
inc
lods
xor
inc
fcmovne
enter
repz
mov
mov
mov
fcom
into
xor
mov
test
insl
insl
sbb
gs
jne
hlt
lcall
fcoml
rcll
pop
bnd
or
inc
dec
push
sbb
les
cmp
pop
push
mov
inc
xor
idivl
mov
inc
push
sarb
push
pop
xchg
xchg
lret
push
jne
scas
push
adc
fwait
inc
subl
jae
add
mov
cli
add
inc
adcl
jo
out
test
lahf
xor
stos
arpl
pop
inc
mov
mov
cmpsb
sub
xor
cmp
mov
sbb
push
stos
out
out
add
adc
or
cmpsb
inc
push
adc
insb
insb
sbb
insl
mov
sub
jno
jne
enter
pop
adc
out
dec
lcall
sbb
and
jge
rcrl
sub
push
pop
cmp
xor
in
lods
subb
add
and
sbb
pop
and
cmp
dec
das
jb
lock
dec
scas
aaa
and
popf
sbb
clc
push
sub
in
sbb
cmc
int3
jne
jns
push
mov
insb
xchg
cmpsb
mov
push
fcmovu
lahf
ret
out
mov
loopew
xor
add
stos
mov
push
sub
jp
mov
lods
inc
and
out
push
out
je
or
mov
sbb
add
mov
push
loop
lret
sarl
jbe
push
ds
pop
or
or
scas
das
push
movsb
xor
hlt
xchg
test
push
sub
xchg
push
lods
jno
mov
ss
pop
popa
loop
sub
xor
adcl
push
cld
xor
shll
cltd
lcall
addl
jb
adc
xchg
xchg
lret
inc
scas
inc
leave
jp
jae
adcb
xchg
mov
test
xchg
adc
mov
ja
dec
pop
cld
dec
mov
test
sbb
cld
xchg
and
push
lock
arpl
inc
es
sahf
ja
cld
add
dec
inc
wbinvd
ret
sbb
in
dec
cmp
fisubl
out
inc
mov
cmpsb
or
mov
lret
lds
mov
in
lods
mov
stos
pop
xchg
mov
test
xchg
and
iret
cmp
pop
in
repnz
aad
xlat
fstl
imul
xor
les
sbb
popf
xlat
cmp
fnstsw
cmp
movsl
or
ficomps
xor
cmc
mov
jecxz
daa
inc
adc
inc
data16
call
rorb
jecxz
dec
scas
popf
mov
test
mov
mov
imul
data16
jl
rorb
test
lods
xchg
insb
loope
sub
cmpsl
xchg
cld
ss
xor
pop
xchg
rorb
lods
nop
pop
gs
pop
push
or
into
pop
aad
pop
jo
inc
dec
mov
or
sub
pushf
xchg
mov
push
sub
insl
xchg
mov
add
ljmp
xor
lret
xor
mov
imul
mov
scas
gs
shlb
notb
icebp
repz
scas
adc
dec
loop
nop
dec
mov
fldenv
mov
int3
sub
lret
adc
test
bound
in
xchg
js
jmp
lret
sbb
arpl
inc
clc
pushf
push
stc
inc
mov
jne
mov
adc
sub
int3
iret
xchg
test
inc
movsb
or
fldenv
sbb
dec
cld
sahf
popf
cmp
aas
and
push
pop
test
mov
rcll
fldenv
incl
stos
cmpsl
dec
movsb
push
das
outsl
mov
cld
push
lret
popa
inc
and
addr16
aaa
xchg
and
cmp
push
outsb
fidivrs
insb
in
bound
ss
xor
cmpsb
mov
lret
mov
mov
lret
daa
adc
sub
inc
dec
sbb
pushf
sub
adc
cmp
popf
fwait
add
std
inc
xchg
mov
fisubs
inc
aaa
lods
and
dec
out
rclb
mov
inc
sub
rcrb
popa
ss
out
sub
push
mov
mov
jmp
cmp
push
dec
ljmp
mov
jb
mov
ret
ret
cmp
inc
cs
and
enter
filds
xor
cmp
cmp
imul
sti
leave
lahf
arpl
xchg
out
push
lock
cmp
mov
xchg
xchg
jae
sbb
jae
xor
fsubrp
xchg
push
test
inc
mov
icebp
jl
cld
add
sti
mov
data16
fistl
jae
shll
rolb
mov
rcrb
or
dec
jp
lcall
mov
into
jp
jmp
loope
ret
xchg
ret
push
xor
aam
enter
test
dec
inc
fsubrl
xchg
popl
xlat
and
test
mov
sub
jle
add
jecxz
pcmpgtb
mov
imul
jbe
loopne
out
es
pop
pop
pop
pusha
andl
mov
push
mov
jg
sti
mov
cltd
pop
outsb
nop
cmpb
inc
cmp
and
pop
add
mov
cmpsl
lods
cmp
dec
scas
in
enter
xor
aas
mov
in
jmp
or
std
jmp
push
mov
push
int
fsubp
sbb
mov
push
adc
mov
test
in
mov
movsl
sub
aaa
mov
xlat
ja
cmp
lcall
jb
sar
adc
into
stos
jmp
inc
je,pn
xchg
stos
movsl
call
sub
shrl
dec
dec
cmc
pop
xor
cmpsb
jmp
dec
negb
imul
adc
mov
mov
adc
stos
cmp
jno
outsb
add
inc
pop
cmp
add
xchg
mov
aaa
cmp
and
nop
mov
mov
ds
xchg
scas
xchg
roll
nop
dec
mov
jbe
or
push
mov
push
dec
dec
icebp
cld
and
fstp
dec
xchg
pop
int3
inc
jne
pop
cwtl
sahf
popf
adcb
into
scas
push
mov
aaa
add
in
cmp
popf
jnp
ds
mov
shrl
sbb
mov
test
pop
in
jns
jmp
jl
bound
push
push
imull
or
aaa
sub
arpl
push
div
out
mov
adc
int
lods
ja
mov
fwait
xchg
and
xor
mov
dec
and
xchg
mov
sbb
gs
inc
jb
int
pop
repnz
loop
pop
dec
aam
scas
xchg
popa
and
inc
je
jle
jns
das
mov
jg
add
mov
xchg
mov
testl
inc
or
mov
cmp
mov
jns
inc
pop
xor
in
pop
loop
add
rorb
adc
mov
sub
je
sbb
in
lahf
adc
nop
mov
repnz
xchg
fdivrp
enter
push
into
and
lahf
lahf
xchg
mov
bound
jge
notl
jl
adc
ret
out
movsl
imul
aaa
mov
add
cmc
popa
pusha
test
into
dec
sbb
enter
pop
inc
push
or
jae
xor
lock
aad
divb
mov
adc
movsb
int3
pop
sbb
xchg
pop
bound
int3
adc
shlb
cs
testb
push
sarb
or
in
stc
fstps
cli
imul
roll
mov
cld
fnsave
movsl
cmc
dec
div
push
mov
movsl
mov
pop
lock
pushf
test
sub
daa
jp
mov
mov
inc
imul
cmp
hlt
fdivp
push
mov
hlt
jge
cmp
xchg
imul
cmp
dec
rcrb
fisubl
xchg
pop
sbb
out
jecxz
push
inc
ljmp
sbb
nop
sub
jmp
push
xchg
xor
pop
movsl
test
mov
sbb
sbb
xor
or
pop
jle
pop
mov
inc
subb
cs
out
aad
nop
ljmp
fsubr
data16
xchg
add
enter
mov
insb
or
or
pop
cmpb
incb
pop
xor
cmp
xchg
xor
pop
cltd
daa
jo
in
cmc
aam
imul
loopne
andl
push
push
frstor
inc
shll
or
push
adc
lock
jmp
mov
pusha
arpl
xlat
dec
jne
add
jge
gs
sahf
and
mov
sub
adc
push
mov
das
movsb
test
inc
mov
int
and
adc
rclb
mov
mov
lock
and
clc
jmp
sub
add
imul
mov
dec
fmull
push
xlat
imul
sub
mov
sahf
std
ret
sbb
outsb
jmp
xchg
and
insb
mov
jno
fldz
subb
repz
leave
xchg
mov
push
xchg
pop
push
cli
sbb
in
push
sti
fisubrl
add
jae
bound
cmp
and
iret
imul
mov
pop
mov
sub
mov
cmp
popf
xchg
sub
cmpb
stos
xchg
xchg
xor
in
mov
stos
mov
scas
in
ds
jne
inc
aam
push
das
push
loop
lahf
sbb
pop
add
xor
or
jecxz
mov
ljmp
fs
outsl
out
mov
popa
jno
pop
insl
mov
negl
sbb
jne
mov
push
hlt
pop
shr
inc
sbb
and
pop
dec
dec
xchg
cmp
movsb
lahf
add
out
cmpsl
add
mov
and
xlat
xor
inc
sbb
rcr
xor
pop
loopne
nop
sbb
test
inc
movsl
jns
pusha
or
int3
dec
repz
mov
xchg
sub
ja
fsts
jno
jo
xchg
push
sbb
sarl
repnz
sub
cld
add
test
mov
insb
ret
cmp
push
sbbl
cmp
inc
jg
sahf
test
enter
aaa
adc
incb
iret
cld
inc
shlb
jae
inc
jnp
fisubrs
jne
xchg
jnp
in
xor
dec
addr16
lock
cs
adc
dec
aaa
cltd
sbb
sub
sbbl
into
fidivrl
jbe
loopne
cltd
loopne
cmp
scas
ds
shrl
fstp
test
sbbl
mov
and
push
ret
mov
pop
fbld
jnp
and
inc
dec
mov
out
lock
mov
adcl
loopne
sub
out
rorl
faddp
bound
lret
int
add
jb
push
fmull
mov
xorl
cmp
fstpt
add
mov
jnp
stc
sub
pop
inc
notl
andb
lds
inc
in
mov
cmp
and
imul
lock
cmp
mov
pop
int
jg
lods
cmp
xchg
pop
inc
mov
push
push
mov
sbb
add
or
loop
sub
insl
add
sbb
testb
xchg
lock
dec
insl
or
push
sub
mov
jmp
sbb
inc
lahf
lock
cs
pop
mov
add
test
cltd
in
in
hlt
cmp
mov
mov
or
pop
cmpsb
enter
ss
ret
xor
movsb
mov
inc
fsubrp
push
adc
dec
cmp
cmp
aaa
pop
mov
cmpsl
enter
add
jg
daa
test
mov
jp
rorl
sarb
add
add
int
sub
pop
outsl
jno
ljmp
imul
sarl
inc
push
shlb
ret
mov
mov
xor
enter
sbb
sub
scas
fdivs
mov
ficompl
clc
out
or
jl
popf
pop
add
inc
repz
gs
lahf
xchg
cltd
lods
dec
scas
andb
addb
push
jb
jae
jle
or
leave
lahf
push
sub
cmc
cld
sbb
dec
out
cmc
fs
ror
test
test
push
scas
sbb
xlat
mov
or
lock
dec
cmp
arpl
mov
jecxz
mov
imul
xchg
pop
shlb
cmpb
fwait
sbb
xlat
mov
not
cmp
test
mov
jle
jmp
jl
sti
sub
out
pop
bound
mov
out
cwtl
int3
mov
mov
pop
jb
jae
sbb
pushf
dec
stc
pop
sbb
leave
das
mov
lcall
mov
sbb
dec
outsl
or
std
div
pop
xor
lret
jp
sarb
xor
gs
mov
xchg
fs
and
adc
pop
and
mov
lds
rcll
and
xchg
stos
outsb
cmp
addr16
rclb
aaa
shrb
popa
js
mov
stc
jbe
inc
in
iret
mov
fimull
mov
adcl
mov
jne
mov
call
inc
dec
push
lahf
cltd
cmc
sbb
pop
inc
shld
sub
fcompl
out
xchg
jge
cltd
xor
loopne
xchg
fdivrs
cmp
lock
jns
or
data16
xor
das
ja
add
xchg
fimuls
fisttpl
sahf
sub
xchg
jnp
loopne
mov
add
push
loopne
xchg
sub
mov
ficoml
fstps
jbe
cmpsl
mov
cmp
cld
stos
inc
add
movsb
push
jmp
cmp
mov
mov
dec
or
pop
push
push
sti
jo
xchg
or
mov
push
mov
out
jo
add
lods
out
jmp
in
sbb
push
ja
shrb
cmp
sahf
popa
inc
xlat
sbb
xchg
pop
inc
test
push
scas
mov
sub
cld
shl
mov
and
lods
and
push
insb
cmpsb
aas
sti
jne
lea
adc
sbb
inc
xor
push
in
outsb
jl
dec
frstor
arpl
sahf
arpl
jle
mov
cmpsl
repnz
cmp
push
dec
stos
filds
pop
xor
dec
mov
cltd
pop
add
push
cmpb
adc
idivb
lret
sub
enter
cmp
mov
push
jg
xor
adc
std
xchg
lods
lcall
cmp
cmp
movsl
pop
sub
scas
movsb
xor
cmpsb
popf
out
mov
movsb
dec
inc
push
lods
arpl
sarb
mov
dec
repz
add
arpl
sub
sti
into
xor
pop
fsubp
into
jge
imul
mov
inc
push
sub
pop
pop
dec
or
outsb
test
stos
aas
ficoml
sub
push
ret
jb
outsl
sub
jg
cmp
into
pop
pop
lret
fsubrp
in
in
in
push
das
stc
cmc
cwtl
int
xor
jns
in
into
sbb
ss
jge
insb
ss
div
jb
imul
lret
rcrl
mov
push
push
dec
lret
jns
and
dec
leave
nop
mov
sbb
add
push
outsl
fs
xchg
in
jb
iret
sub
push
xchg
mov
sbb
cmc
xchg
cmp
insb
jno
call
jg
out
cli
sbbb
rclb
lahf
and
fsubr
adc
cmp
xchg
mov
pusha
jns
jo
pop
int
mov
psubw
mov
enter
shrl
test
mov
int
out
push
lock
scas
dec
or
fstl
cmp
cmovb
cs
sbb
adc
xchg
inc
sub
push
test
std
iret
sbb
push
iret
dec
inc
loope
mov
inc
push
fldcw
int3
xchg
dec
add
mov
lret
punpcklwd
bswap
push
sahf
jnp
out
insl
mov
fnop
push
add
loope
adc
push
mov
or
pusha
sub
mov
lea
jo
pop
hlt
data16
cmpsl
inc
push
or
movsl
jns
cmp
cmc
movsb
jo
mov
pushf
inc
aaa
jb
nop
mov
dec
aas
add
and
jns
jle
xor
cmpsb
insl
add
mov
add
push
lock
push
adc
xchg
ljmp
out
push
cwtl
cmpsb
or
mov
imul
ja
fdiv
stc
rorl
push
or
inc
sahf
add
sbb
jle
bound
out
dec
add
cld
test
fsubr
icebp
cmp
addr16
pop
out
xor
push
push
xchg
sbb
cmp
rcrb
outsl
or
in
inc
add
andb
mov
sbb
or
out
insb
push
mov
jmp
push
fnstenv
and
xor
ret
push
push
jo
mov
test
in
loopne
js
mov
sbb
and
mov
mov
push
testl
or
loopew
mov
pusha
xor
insl
lret
jne
add
xchg
ljmp
inc
dec
fcoml
insl
pop
push
mov
shrl
in
out
push
inc
inc
adc
cmc
pop
lea
and
mov
outsb
test
iret
mov
gs
push
or
xor
mov
pop
ljmp
js
ljmp
aad
mov
popa
jecxz
test
add
cmpsl
adc
ljmp
pop
mov
xor
lcall
adc
arpl
cmc
stc
dec
push
mov
cli
icebp
cmc
pop
xor
cmp
das
and
popa
pcmpeqw
dec
aas
or
or
incb
and
lret
das
or
push
popa
cltd
add
call
adc
fimuls
out
fists
xchg
jbe
adc
jg
out
les
or
test
dec
sbb
mov
jg
shll
shlb
loope
int
lods
jb
cli
fwait
mov
cmp
loope
nop
mov
mov
shl
inc
cmp
outsb
add
gs
into
sub
out
fnstenv
lds
addr16
iret
or
adc
insl
push
mov
lds
adc
in
add
cmpl
mov
jmp
jge
imul
aaa
inc
in
mov
or
lahf
jle
shll
subb
inc
mov
sbb
push
push
sbb
test
inc
int3
rcll
psubusw
sub
rcl
push
mov
les
stos
les
lock
sbb
sub
cmc
xchg
jno
cmpsb
daa
sbb
jge
ja
fwait
movsb
push
xor
mov
movsl
jns
mov
movsl
dec
cmpps
cmp
es
cmpsb
cmp
stos
mov
int3
inc
clc
xchg
mov
lahf
int3
loop
out
inc
aaa
push
adc
push
add
add
leave
cwtl
push
pop
aad
imul
lret
mov
mov
sbb
add
sbb
jb
or
cli
inc
pop
aaa
call
xchg
scas
cmp
xchg
mov
jo
mov
aam
add
sbb
ss
or
jecxz
int
sub
push
mov
imul
js
and
and
hlt
dec
fadd
mov
arpl
js
lret
gs
push
je
ret
mov
mov
jge
mov
subb
loop
in
movsl
popf
aad
sub
mov
push
push
decb
test
jo
pop
adc
jb
aas
adc
imul
push
and
and
sti
jmp
mov
gs
dec
adc
out
push
mov
mov
out
jb
push
lea
and
add
mov
xor
fidivl
cwtl
adc
cld
push
sahf
or
xor
in
test
loope
arpl
cmp
and
icebp
jb
fs
push
and
xchg
js
cmp
call
or
mov
inc
jae
testb
hlt
decb
jmp
push
add
in
lret
and
iret
ss
repz
repz
push
or
jno
fisttps
or
js
adc
mov
xlat
cmp
pushf
shlb
arpl
imul
idivl
inc
aad
push
and
out
hlt
dec
aas
fwait
aad
mov
or
and
fdivp
xchg
ja
inc
lret
jp
rcrl
stc
test
ljmp
rclb
pand
xchg
movsl
xchg
mov
mov
mov
subl
lods
mov
adc
loopne
ljmp
addr16
inc
cmpsl
enter
dec
jno
xchg
loope
dec
sarb
mov
lea
ret
xchg
adc
add
test
mov
ret
mov
xor
fsts
cmp
test
jge
cmp
xlat
ret
mov
in
sbb
nop
enter
mov
mov
push
fnstcw
enter
insl
divl
enter
fcomip
add
xor
movsb
push
adc
cs
mov
fbstp
cli
xchg
jl
adc
cs
mov
and
std
cmp
jne
mov
sarb
pop
and
inc
xchg
outsl
in
ret
popf
stos
fs
enter
repz
pusha
mov
mov
pop
ss
jb
inc
xor
leave
mov
loop
pop
or
std
incl
pushl
ja
test
mov
push
test
mov
aaa
data16
dec
jae
fnop
int3
stos
repnz
adc
ret
insb
aad
and
int
shufps
mov
push
sti
popa
push
push
mov
lret
push
and
aaa
add
loope
pushf
jb
cmpsl
pop
or
fbstp
rcrb
lcall
scas
stos
jl
jle
fwait
cmp
repz
mov
loop
out
shll
and
mov
dec
push
ds
sbb
mov
xchg
jbe
xchg
jnp
xor
ret
out
xor
add
out
data16
fists
in
xchg
repz
and
movsb
inc
mov
mov
push
adc
iret
cwtl
cmpsb
xchg
gs
rcrb
mov
imull
aas
xchg
or
clc
add
or
push
xchg
insb
call
dec
pop
lret
lcall
shlb
xchg
jae
int3
pop
dec
dec
call
in
or
pushf
data16
xchg
cmp
or
xchg
leave
lahf
stc
push
xchg
jnp
dec
stos
sarb
sbb
mov
fisubl
arpl
xchg
push
pop
mov
add
fldenv
or
jle
pushf
mull
movsl
aad
mov
add
mov
mov
lcall
cmp
jmp
inc
push
xadd
dec
hlt
fisubrl
lcall
cmp
and
out
imul
dec
lcall
fstpl
inc
outsb
out
sbb
scas
xor
repz
xchg
sub
push
push
out
push
sahf
mov
mov
xor
ss
sbb
nopl
into
daa
and
cmp
inc
repnz
ss
adc
and
das
push
xchg
sub
fisubs
jp
xchg
pop
pushl
shl
mov
sbb
mov
cs
shlb
int3
dec
test
clc
leave
pop
and
ret
push
jge
pop
dec
lret
xor
adc
cmp
dec
jg
inc
push
mov
out
jno
cld
xor
or
fiaddl
push
adc
faddl
scas
ds
cltd
pop
out
xchg
push
cld
mov
pop
vfnmadd132ps
out
pushf
std
lods
aad
repz
push
push
or
mov
dec
push
mov
je
inc
pop
vmovaps
lahf
cld
push
xchg
pop
insl
cmp
adc
popf
push
push
push
sub
inc
push
les
lcall
imul
pop
dec
pusha
xchg
mov
and
jg
icebp
lahf
std
pop
mov
daa
mov
outsl
idivl
xchg
sbb
fmuls
cld
xchg
je
push
aas
push
mov
xor
jns
mov
aam
in
cmp
mulb
cld
xlat
iret
push
stos
cmp
or
jbe
inc
add
inc
int
lods
jg
mov
mov
cmpsl
popa
imul
jbe
push
scas
movsl
and
cmp
dec
mov
pop
xchg
lds
pop
nop
je
jle
int3
jl
hlt
add
mov
test
mov
push
jno
cmp
bound
mov
int3
sahf
jne
pop
call
dec
mov
ss
imul
ret
cltd
jecxz
push
scas
ja
out
imul
jb
nop
push
xchg
test
iret
dec
hlt
test
inc
lock
arpl
dec
cltd
js
push
aaa
add
adc
pop
pop
jge
lahf
cmp
repnz
push
jb
and
add
jecxz
out
jmp
pop
add
insb
mov
pusha
push
mov
push
jae
push
cli
push
jae
js
outsb
pop
sti
dec
lea
enter
add
popa
inc
jnp
xchg
inc
outsb
jne
push
popa
cmc
out
cmpsl
test
dec
ss
mov
mov
pop
lahf
add
stos
fstpt
rep
sub
out
cmp
lock
xor
aam
pusha
push
add
mov
xchg
or
mov
fwait
mov
sub
jne
ds
jbe
stc
push
push
or
lcall
jae
push
pop
or
add
orb
xchg
fimuls
push
xchg
sbb
xchg
icebp
sbb
loop
ja,pn
fldt
test
mov
or
imul
push
fwait
pop
cmpsb
call
in
hlt
out
sub
jecxz
fnstcw
ret
out
std
cld
iret
xlat
xchg
sahf
je
add
pop
scas
jns
inc
and
cmp
insl
sub
lcall
push
insb
std
in
fiadds
push
cmc
icebp
lods
outsl
mov
hlt
mulb
xchg
icebp
rcrb
dec
fcomps
xorb
pop
in
std
leave
pusha
mov
in
int3
stc
mov
mov
in
dec
out
shl
roll
mov
fldenv
aaa
nop
in
push
jne
cmc
stos
mov
xchg
and
pop
add
test
mov
inc
fimull
sub
test
fmuls
jb
pop
push
fucomip
cld
push
adcb
movsb
xchg
fsts
xchg
inc
mov
add
fists
stos
add
mov
inc
iret
and
mov
add
out
popa
and
inc
in
adc
cs
test
jmp
testl
inc
scas
insl
es
sar
out
popa
push
jno
inc
xchg
xchg
push
push
and
ret
jmp
pop
imul
pop
pop
cmp
jle
lock
jp
push
mov
mov
insl
xchg
add
push
xchg
fisubrs
mov
mov
push
sarl
push
adc
es
pop
popa
xchg
mov
inc
mov
or
pushf
cwtl
xchg
aaa
sbb
pop
aad
cld
rcrl
test
pop
mov
sub
lret
imul
mov
das
orb
aam
cmp
pushf
movsb
aas
int3
and
adc
call
jl
or
xor
push
cmc
daa
cmc
dec
push
aad
int3
enter
imul
mov
rclb
mov
and
sub
stc
mov
inc
dec
divb
cmc
ret
push
mov
or
cmp
leave
clc
pop
imul
vmptrld
mov
es
mov
enter
add
scas
mov
std
sub
outsl
xchg
xor
and
out
mov
push
lcall
mov
cmc
imul
in
cmpsl
aas
xchg
out
repz
inc
repnz
cs
xchg
add
or
call
lods
mov
pop
int
jns
xor
adc
ja
xchg
inc
mov
lock
pop
movsl
sbb
mov
cmp
divb
inc
je
push
hlt
jb
and
adc
movsl
jns
cltd
test
mov
dec
xor
push
sub
jnp
push
sahf
loopne
mov
jo
push
or
test
outsl
push
and
adc
in
lret
dec
push
popf
jmp
mov
cmp
icebp
mov
or
gs
std
pop
into
xchg
mov
lret
pop
sbb
push
sub
in
test
dec
add
pop
cmp
dec
xchg
fdivl
into
and
mov
mov
add
xorl
adc
xor
push
out
mov
sahf
stos
lahf
sti
sub
loopne
andb
mov
inc
mov
push
xor
xchg
adc
in
add
xchg
outsl
push
in
out
add
les
lret
aam
or
cmp
xor
aaa
mov
xchg
push
xor
popa
sti
shl
fisubrl
iret
push
push
xor
dec
sbb
mov
fisubrs
adc
mov
sbb
xorl
xchg
jno
jl
cld
mov
in
test
cltd
lret
aam
outsb
and
pusha
dec
and
sub
xlat
mov
aas
out
or
mov
and
leave
adc
lods
cmp
mov
cmpsl
jg
out
push
ja
sti
add
inc
in
stos
mull
mov
lods
sahf
xor
and
in
shl
cs
mov
ljmp
mov
cli
aam
mov
cli
rcr
lods
ljmp
nop
xchg
or
popa
sub
dec
je
pop
aad
jbe
inc
add
jmp
xchg
xor
jmp
in
mov
and
shr
mov
cmp
jmp
and
sbb
lcall
mov
xchg
jo
outsl
popa
je
fwait
lods
xchg
mov
mov
push
loop
sbb
mov
imul
jnp
or
out
sub
inc
js
adc
andb
xchg
lcall
sbb
mov
call
rcrl
or
icebp
and
cmp
mov
xchg
fadd
insb
and
out
test
or
imul
adc
leave
xor
loop
cmp
pop
sbb
dec
mov
ret
and
hlt
scas
mov
loop
hlt
dec
aaa
lea
cmp
mov
fucom
jb
jo
pusha
mov
sbb
jne
dec
mov
jmp
pop
sahf
add
xchg
or
dec
mov
insl
loopne
in
jmp
cmp
out
dec
ss
inc
in
ljmp
sti
std
insb
std
lds
or
std
pop
rorb
out
fstpl
pop
push
enter
xchg
xchg
mov
fcmovne
mov
adc
add
test
jae
or
sbb
add
push
inc
mov
push
sub
ret
rclb
adc
clc
adc
xor
jle
mov
or
js
cmp
outsl
fisubs
or
mov
adc
pushf
and
adc
mov
xchg
cli
and
jge
mov
jb
jp
xchg
pop
mov
iret
push
call
mov
cs
push
lahf
inc
lock
nop
shll
push
stos
data16
loop
imul
cmp
out
jecxz
mov
push
mov
rcrl
shll
test
jmp
inc
lret
sub
add
cld
imulb
jbe
ljmp
xor
out
jne
dec
addr16
adc
pop
add
es
adc
or
std
cmp
call
sarl
xchg
inc
push
sub
int
adc
mov
pop
jbe
mov
jle
adc
mov
jnp
cmpsl
mov
mov
push
call
add
imul
and
inc
cmc
ja
bound
test
imul
mov
inc
push
popl
lret
pop
pop
adc
fdivrs
dec
jge
test
sbb
mov
movsl
je
roll
push
xor
xchg
mov
xor
andl
js
or
daa
mov
adc
xor
inc
orl
inc
sarb
mov
push
pop
test
and
and
or
insl
outsl
inc
add
popf
cmpsb
jne
xchg
add
sbb
lahf
pop
mov
mov
insl
and
xchg
std
xchg
mov
add
imul
stos
cld
xor
out
jg
pop
loopne
loope
mov
data16
ja
int3
hlt
stos
pop
bound
hlt
adc
cmpsb
xchg
push
xor
sbb
stc
lds
jle
notb
lea
cmovl
in
aam
add
hlt
push
sub
fldl
dec
xor
push
cmpsl
push
sti
mov
pop
jbe
inc
mov
les
cld
out
and
popf
sbb
or
adc
xor
ficoml
and
cwtl
mov
stos
add
mov
sub
int
xchg
sub
test
loop
xchg
int
push
loop
mov
sub
jne
les
movsl
mov
sub
sub
imull
hlt
clc
stos
aam
mov
scas
adc
outsl
inc
sbb
xorb
mov
jl
fwait
stos
faddl
sbb
and
adc
sbb
dec
or
insb
push
xor
sub
xchg
xchg
repz
sub
push
je
push
cld
sbb
pushf
in
sbb
pop
lcall
sbb
sub
popf
imul
aas
leave
lret
shlb
add
and
ficompl
and
cmp
arpl
pop
int3
mov
add
mov
nop
call
mov
push
xchg
jmp
mov
test
pop
sub
jp
stc
iret
mov
sahf
and
nop
mov
xor
sub
ret
icebp
pop
push
ffreep
shlb
xor
or
jmp
sti
push
push
sar
sbb
orl
fidivrl
stc
jge
sub
pop
test
jnp
dec
jmp
std
pop
pop
jecxz
mov
pop
scas
data16
push
add
fcoms
mov
add
div
out
push
sbb
ficoml
sbb
in
test
shlb
push
mov
jge
push
ja
or
mov
pop
outsl
add
add
inc
arpl
pop
movsl
push
ud2
sbb
or
fdivr
lock
and
push
leave
gs
jle
push
cli
inc
out
xchg
stc
sbb
mov
test
lods
xor
movsb
and
sub
insl
jp
and
and
adc
mov
pushl
jle
or
sbb
mov
stc
inc
mov
mov
pop
sbb
sbb
mov
cmp
and
and
push
int3
pop
je
xor
push
cmp
outsl
mov
in
adc
mov
out
int
dec
push
pop
mov
jl
fidivrs
je
or
pop
lahf
sub
sar
cmpsl
push
jbe
xorl
mov
lds
adc
jno
xor
enter
xchg
mov
call
or
pop
and
or
pop
push
mov
fbstp
push
jmp
loopne
fistl
enter
add
xor
sti
lret
aad
les
stos
out
js
mov
push
jb
and
mov
cmp
or
inc
test
sbbl
insl
xlat
sbb
and
lds
ja
push
lcall
dec
sti
in
mov
cmp
mov
js
sbbb
shlb
inc
cmp
xor
stc
jns
cmpsb
incb
pop
mov
data16
addb
sbb
mov
or
rolb
sbb
test
incb
cmc
int
cmp
xchg
sub
mov
mov
cmp
or
cmp
or
adc
and
xor
fmul
out
mov
insl
inc
cmc
inc
inc
adc
fildll
push
fisttpl
sub
mov
sbb
dec
push
fisubrl
sbb
jge
enter
das
data16
imulb
dec
sub
fisttpl
or
and
sub
xor
out
adc
daa
imul
jg
lock
cmp
and
lret
scas
int3
xor
fneni(8087
outsb
imul
cmp
mov
test
mov
cmpsb
jae
std
mov
and
sbb
repz
imulb
aam
pop
data16
rcrb
mov
push
lods
dec
int
sahf
popa
sub
dec
sbb
cs
xchg
ret
mov
sbb
mov
mov
imul
lods
mov
inc
mov
dec
inc
outsl
cmp
jne
lret
jb
pop
ja
dec
shrl
in
or
fldcw
or
das
cmp
cwtl
movsb
pop
out
sbb
jg
jno
flds
mov
push
frstor
adc
xchg
mov
imul
jbe
mov
cli
pop
or
cmpsl
and
xchg
fisubs
icebp
and
push
mov
xor
lods
cmc
adc
out
mov
jmp
or
jecxz
or
fcomps
xor
and
daa
jle
into
in
mov
dec
pop
test
cmp
clc
push
pop
out
decl
cmp
mov
in
jns
xor
cwtl
xchg
inc
out
xchg
inc
or
sbb
push
xchg
out
fldcw
cli
adc
xor
in
xchg
call
xor
push
jo
mov
xlat
pop
lds
outsl
jle
mov
lcall
loope
xchg
pop
nop
xor
pop
and
xchg
mov
and
inc
lock
and
dec
fistps
mov
jns
inc
fadd
jl
and
imul
loop
movl
dec
sub
pop
jbe
lea
inc
sub
shlb
mov
inc
inc
jno
cmpsb
and
cs
std
gs
iret
pop
lret
and
in
daa
jmp
push
rcrl
xor
test
repz
inc
or
orb
add
cmp
push
push
push
jmp
insb
push
pop
push
imul
sub
mov
add
notl
jns
push
cmc
mov
push
scas
mov
mov
xor
scas
add
out
sbb
data16
cmpsl
push
fdivr
mov
xor
and
mov
jae
ret
loopne
mov
dec
pusha
xchg
adc
mov
lods
lock
cmp
mov
inc
xor
mov
jmp
mov
fstpl
int
dec
push
xchg
rcr
jp
leave
frstor
loopne
sbb
cmp
nop
enter
nop
nop
xchg
test
jbe
movsb
sbb
xchg
inc
mov
dec
mov
and
movsb
popf
mov
js
adc
push
add
jno
xor
pop
xlat
hlt
test
js
enter
rorl
inc
cmp
nop
imul
push
cli
and
imul
lcall
mov
sti
orb
mov
cs
es
test
jmp
xchg
aaa
cmp
shrb
push
lock
bnd
insl
out
and
fucomi
mov
push
mov
pop
cli
jl
mov
sub
rolb
pusha
ret
mov
fdivr
push
push
cmp
fidivs
fisubl
mov
cld
mov
xor
mov
scas
sbb
and
add
sbb
sbb
dec
jmp
mov
faddl
jecxz
je
adc
and
fsubs
outsb
add
and
xlat
addb
cmp
movd
scas
gs
pop
jne
sub
out
xchg
popa
int3
xlat
mov
jae
dec
jo
xor
mov
loope
outsl
out
movsl
add
or
pop
fdivrl
leave
test
mov
out
add
cmp
bound
xchg
inc
and
fisttpl
in
jb,pt
cmpl
daa
js
rorl
dec
mov
and
sar
addr16
addb
jg
fwait
adc
hlt
push
sbb
jb
jle
cld
daa
fisubl
xchg
inc
mov
add
xor
addr16
pushw
mov
movsb
sub
xchg
adc
inc
dec
mov
das
stc
aas
inc
mov
sbb
or
aas
mov
dec
inc
mov
push
pop
add
inc
insb
cld
add
mov
lods
mov
iret
mov
add
and
jae
mov
jmp
push
adc
push
insl
pop
mov
movsb
mov
push
out
mov
adc
notb
xor
push
mov
mov
xor
push
and
cli
and
push
mov
xor
inc
mov
jno
out
jno
adc
mov
mov
mov
mov
shll
fs
popf
les
dec
cmc
adc
mov
test
xchg
movnti
xchg
shll
lea
mov
mov
dec
fwait
ljmp
inc
fmull
ja
mov
xor
into
fsubl
insb
or
pop
fimull
rcrl
ja
jle
or
lcall
xchg
sbb
aam
and
dec
jge
jnp
mov
inc
loop,pn
hlt
cmp
jns
inc
fs
push
js
mov
dec
std
gs
test
mov
mov
add
pop
xchg
xchg
lahf
hlt
mov
pop
pop
or
push
inc
mov
stos
or
push
push
cli
xor
sbb
dec
cmp
sahf
adc
inc
les
sbb
outsl
lock
inc
sbb
pop
cmp
insl
fiaddl
lret
bound
push
aam
mov
mov
ret
scas
pcmpeqb
jno
into
add
and
adc
push
sbb
iret
mov
push
dec
jnp
test
mulb
gs
into
fmuls
dec
mov
stos
mov
sti
stos
jg
cmp
push
pop
daa
imull
push
pop
push
push
loope
dec
andb
arpl
cmp
lods
ret
mov
ret
std
lahf
repz
dec
mov
pop
mov
and
jne
xchg
movsl
sti
mov
push
test
or
fsub
dec
or
xor
xor
mov
push
pop
dec
nop
jp
mov
hlt
dec
adc
xchg
sub
sub
loop
mov
out
inc
test
je
or
mov
popa
or
popa
popa
sti
idivl
xor
sbb
jbe
sub
add
pop
faddl
push
mov
das
cmp
inc
pushf
jnp
outsl
push
push
xchg
and
ret
add
or
cltd
jbe
push
ret
mov
test
das
xor
jbe
pop
push
inc
stos
pop
psllw
jno
sti
push
xchg
lock
push
into
jle
push
xchg
cmp
xor
push
std
mov
inc
mov
mov
shlb
pop
sub
mov
mov
mov
popa
mov
adc
jns
pushf
jge
aad
fwait
sarl
sub
arpl
js
sub
pop
dec
cmp
mov
enter
iret
mov
dec
xchg
pop
adc
jnp
lds
clc
icebp
push
clc
pusha
leave
inc
cli
jl
add
pusha
stos
ret
xorb
adc
mov
stos
sub
xor
dec
sub
xchg
add
push
sub
shlb
lcall
dec
mov
or
cmc
loope
xlat
popf
inc
call
icebp
inc
lods
bound
sub
sti
movsb
arpl
inc
or
xchg
test
xor
dec
inc
jecxz
pushf
lret
push
jae
adcl
sbb
mov
inc
lods
ss
cmc
jae
push
mov
movsb
add
data16
jnp
sbb
js
adc
paddusw
int3
mov
or
out
insb
jne
xchg
inc
sub
shrl
fwait
jecxz
sarb
adc
loop
inc
mov
cmp
mov
jl
mov
cmpl
in
pop
gs
push
jle
filds
cwtl
push
test
sbb
ret
and
dec
jl
aas
mov
nop
lods
outsb
cmp
add
stos
arpl
out
sahf
mov
movsb
add
inc
pop
hlt
jbe
es
cmp
inc
xchg
add
add
sub
inc
adc
imul
mov
mov
stc
and
jmp
adc
fsts
int
movsl
mov
les
ljmp
jne
add
pop
inc
icebp
repz
dec
cwtl
sub
mov
cmp
inc
call
adc
scas
daa
int
dec
iret
repnz
mov
cmpsl
nop
popf
adc
mov
ja
into
or
out
push
xor
mov
in
jo
pop
outsl
fwait
xor
loopne
outsl
push
dec
call
dec
outsl
pop
repz
out
lret
add
ljmp
jnp
xor
push
sbb
mov
loop
inc
cmpsb
and
mov
and
dec
arpl
adc
cmp
fiadds
mov
jmp
ljmp
sti
adc
xchg
xchg
jmp
vandnps
push
push
movsb
xor
jno
ja
mov
sbb
inc
pop
jne
popa
sub
in
mov
lods
imull
and
imul
repz
div
inc
pop
jecxz
xor
lods
or
repnz
inc
or
movsl
xchg
adc
cwtl
movsl
mov
xchg
stos
sbb
lock
inc
push
sti
das
or
sub
hlt
hlt
pop
or
inc
or
xchg
int3
test
lods
orl
pusha
test
xor
jno
push
fstl
mov
icebp
mov
jno
dec
addr16
pop
iret
pop
arpl
mov
add
stos
push
push
push
cmpsl
mov
xchg
cmp
inc
inc
push
fmull
insl
pop
lea
idivl
pushl
pop
sbb
test
xor
add
mov
cmp
dec
or
popa
adc
enter
nop
aad
inc
xchg
xor
cmpb
push
and
jb
adc
in
pusha
notb
loop
pop
call
add
pop
ds
mov
sub
sub
fs
dec
ret
and
and
adc
mov
out
ja
inc
dec
std
or
jecxz
inc
adc
pusha
xchg
or
mov
imul
in
test
lahf
push
cmpsb
das
dec
int3
fldl
mov
push
out
fwait
mov
add
adc
test
outsl
ja
inc
lds
in
sbb
cmc
lea
pop
cmp
inc
push
stos
xchg
scas
and
or
pop
js
xor
bnd
add
mov
mov
std
shll
clc
xor
pop
cmp
loop
xchg
adc
cld
popa
lods
lock
pop
and
loope
icebp
jne
test
mov
shll
mov
fmull
insb
clc
cmp
jae
adcl
mov
in
or
push
sbb
rcrl
and
dec
dec
push
cld
dec
call
xchg
sub
lods
or
js
adc
pop
je
das
cmp
sub
sbbb
or
hlt
outsb
aas
hlt
out
lods
fs
mov
sbb
outsb
not
xor
mov
adc
loopne
repz
aaa
js
test
adc
outsl
fidivs
js
pop
adc
mov
lret
out
mov
or
jp
loopne
or
cmp
or
aaa
jl
aam
sbb
xor
xor
nop
dec
dec
movsl
les
adc
xchg
add
fidivrs
and
pop
dec
out
pop
or
adc
adc
in
xor
add
aad
test
dec
lahf
dec
bound
enter
xorb
mov
mov
loopne
rolb
addr16
xchg
out
mov
les
pop
loopne
mov
popa
lods
add
rcrb
and
dec
jle
sub
ds
fadd
bound
lcall
xor
jo
dec
inc
insl
jbe
and
mov
jge
aaa
inc
add
add
push
ljmp
xor
dec
cmp
xor
dec
cmpsb
pop
mov
imul
and
shlb
lea
in
add
jmp
pop
and
cs
test
dec
push
jae
xchg
jb
push
into
cmp
jl
sbb
mov
mov
cmpsl
pop
cmp
scas
add
mov
adc
cld
pop
push
inc
and
ret
sub
cmp
jmp
jne
xor
pop
jno
scas
mov
test
adc
xchg
adc
aaa
leave
jne
push
push
jnp
in
push
mov
mov
test
mov
or
movsb
mov
sbbb
inc
pop
push
popf
push
xchg
outsb
inc
jns
mov
stos
mov
out
sbb
or
jl
jo
nop
jae
inc
mov
dec
daa
adc
push
sbb
pop
push
jns
jae
jp
testl
dec
lret
sbb
fadds
aam
in
dec
fwait
cmp
leave
mov
adc
aad
cmp
or
cs
aad
cli
or
dec
sub
push
sub
test
add
test
les
ffree
mov
movsb
cmp
sbb
push
push
push
test
xlat
sub
popa
dec
xor
imul
xlat
xchg
loope
dec
dec
insl
mov
decb
pop
fidivrs
add
out
in
pop
sub
sbb
mov
test
pusha
dec
inc
data16
aas
pop
into
fs
stc
mov
xchg
jge
push
insl
add
lods
sub
pop
ss
cmp
les
xor
test
lahf
lea
not
push
mov
je
mov
cld
bound
pusha
repz
out
fldl
push
enter
and
inc
gs
add
andb
push
std
in
sbb
fsub
cmp
cmpsb
cmpsb
cmp
sbb
fwait
jge
lcall
jbe
in
add
inc
add
cmpsb
mov
jmp
iret
dec
push
stc
test
nop
iret
filds
push
cmpl
push
pop
int3
sub
pop
ljmp
pop
mov
sti
loope
push
jp
sbb
jp
mov
imul
push
in
adc
outsl
lods
mov
dec
xchg
mov
adc
movsb
mov
push
xor
xor
dec
push
cwtl
push
sarb
fistpl
out
lods
jge
mov
insl
aaa
dec
push
sbb
loopne
mov
mov
leave
xchg
fst
push
sbb
xlat
pop
xchg
and
adc
lock
test
push
nop
and
enter
jl
mov
test
nop
test
insl
mov
adc
jae
fdiv
repz
jecxz
cltd
js
inc
xor
and
inc
fdivl
sbb
insb
fnstsw
and
xor
cwtl
inc
aaa
fs
dec
pop
lcall
xchg
mov
push
mov
cmpsl
lea
sahf
and
adc
pusha
stos
sbb
lock
and
fst
cmp
leave
pop
outsl
mov
outsl
mov
jp
ja
scas
or
cs
xchg
call
xor
fcmovnu
push
cmpb
pop
out
inc
mov
pop
adc
movsb
jbe
mov
les
sar
lods
dec
pop
mov
pop
push
sub
sbb
ret
add
adc
lcall
sahf
push
sbb
shrl
sbb
imul
sub
push
mov
cmpsl
sub
push
cs
jbe
mov
ja
xor
mulps
push
push
leave
or
mov
mov
adc
jp
jno
adc
pop
push
pop
pop
adc
testb
cmpl
xchg
and
mov
mov
js
add
lret
push
mov
bound
jno
and
divl
pop
repnz
add
sub
add
roll
mov
ret
aad
sub
cmp
lahf
in
sarl
sar
mov
pop
lock
out
psubd
outsl
cmpsb
imul
into
fisubrs
mov
sub
addr16
es
pop
leave
push
test
add
adc
sti
mov
push
cmc
add
or
lods
aad
ss
mov
jge
push
popf
test
xchg
stos
mov
pop
addl
in
xor
je
or
aad
inc
xchg
cmp
cmp
inc
sarb
in
fdivs
fisubs
and
pop
loop
xchg
out
testl
imul
cmp
and
cmpsl
mov
test
add
cmp
dec
sbb
add
jmp
mov
adc
fbstp
xchg
in
xchg
inc
sbb
inc
mov
dec
movsl
popf
sub
and
mov
cli
daa
or
cmpsl
insb
repz
cmpsl
lods
sbb
mov
es
adc
cld
xor
aad
mov
dec
xchg
sub
repz
mov
mov
aaa
or
pop
mov
stc
mov
push
pop
pop
xchg
jp
sub
insb
pop
ds
andl
out
inc
inc
shl
lcall
mov
mov
loope
hlt
mov
fs
sub
imul
mov
and
push
add
mov
cmp
loop
sub
in
push
mov
aam
out
loop
jo
lahf
aam
sbb
in
adc
lds
inc
iret
lock
or
mov
sbb
pusha
mov
jo
sahf
sbb
mov
jne
data16
jne
dec
lret
movl
inc
sbb
jb
jp
orb
rcr
lret
fistpll
in
in
and
bound
push
jmp
mov
popf
xchg
sub
dec
or
aas
lds
jmp
mov
xor
cltd
jo
loop
gs
pop
lock
lret
imull
mov
mov
insb
mov
adc
add
test
xchg
aad
inc
cwtl
out
js
shll
mov
cmp
pop
pop
out
dec
scas
pushf
mov
das
xchg
nop
jmp
and
imul
adc
cwtl
out
lods
cld
adc
jecxz
mov
mov
dec
aaa
aad
pop
pop
push
scas
popa
xor
ret
bound
mov
insl
xchg
mov
mov
push
cmp
cwtl
sbb
sahf
mov
push
das
pop
inc
jnp
xor
rep
cmp
mov
in
xchg
shlb
cli
dec
bound
lods
in
xchg
mov
aaa
jecxz
add
cltd
jns
lret
pop
adcl
mov
xor
pop
lods
scas
orl
adc
add
mov
in
cmp
hlt
bound
shlb
ljmp
mov
mov
mov
or
push
inc
int3
imul
mov
or
outsb
loope
aas
adc
adc
cli
fstpt
stc
lea
cmp
inc
subb
test
dec
dec
push
xchg
adc
xchg
shl
je
mov
or
xchg
pop
mov
bound
cs
dec
sbb
jae
int
scas
mov
or
jl
in
mov
test
paddw
dec
call
jae
xchg
movsb
rol
ret
ret
cli
xchg
adcl
add
shrl
pop
adc
into
mov
jbe
dec
cmp
nop
and
fidivl
adcb
pop
stc
leave
fadds
mov
retw
jge
out
outsb
call
mov
cmc
and
lret
out
pop
sbb
mov
jmp
outsl
push
mov
inc
daa
mov
lock
das
push
pop
mov
xor
sub
jae
inc
adc
out
ja
mov
cmp
leave
add
outsl
push
lea
sub
lea
mov
xchg
or
pop
cmpsb
lea
std
jle
jg
outsb
xchg
and
clc
dec
and
inc
sub
mov
pop
mov
or
or
aas
out
xlat
testl
outsb
xchg
jl
test
sbb
mov
mov
ss
dec
nop
out
fdivrs
pop
or
lock
lds
popa
dec
aam
aas
pop
jg
dec
andl
adc
mov
jge
push
sub
call
push
adc
jns
ret
fcomi
sbb
sarl
adc
repz
mov
ja
call
imul
sub
hlt
inc
xor
insl
in
and
decb
pop
negb
sub
xchg
mov
es
cmp
mov
push
xchg
xor
jne
mov
pop
pop
and
dec
mov
je
jo
test
dec
popa
popa
fldcw
or
jp
jle
xor
push
out
pop
cmp
inc
adc
dec
fwait
pushf
add
jns
sahf
je
pop
mov
lds
std
or
push
aam
data16
lods
aam
adc
ret
loopne
rdpmc
push
iret
mov
nop
jo
out
lods
addb
out
repnz
adc
dec
popf
call
or
imul
push
mov
popa
mov
imul
das
out
mov
leave
stos
push
out
mov
cmp
jns
adc
addr16
loop
pop
and
movsb
mov
and
arpl
cmp
mov
cli
xor
rorl
adc
mov
xchg
sarl
fs
idivb
into
out
movsl
outsb
arpl
cltd
pop
jbe
test
sub
out
jns
test
ret
outsl
push
push
or
cld
mov
lock
jle
repz
sysexit
or
and
mov
cmp
pop
popa
rorl
shlb
or
in
fmul
out
cmp
fistl
lret
movsb
gs
mov
cmp
and
test
push
mov
xor
ds
xchg
ret
loop
dec
mov
leave
adc
cmp
push
mov
mov
cmpsb
or
cs
mov
push
int
ret
test
je
scas
or
dec
movsl
aam
fiadds
inc
xlat
lret
ja
or
sub
lcall
inc
push
lods
clc
sub
sbb
xor
mov
add
in
std
dec
addb
inc
or
push
push
fimuls
push
testb
jns
adc
popa
test
dec
or
or
pop
jbe
mov
iret
mov
test
popf
mov
cs
sub
xchg
pop
jb
cmpsb
mov
jl
mov
xchg
dec
insl
cmp
push
es
push
imul
sub
push
out
pop
sahf
pop
mov
leave
subl
jns
inc
dec
dec
fidivrs
mov
and
std
loope
jl
ljmp
inc
inc
test
sub
fstpt
adc
push
or
je
xor
mov
or
imul
fcoms
inc
fimuls
and
inc
aam
jns
cwtl
cmp
fabs
pop
jb
mov
loop
lcall
aam
negl
adc
ds
int
jecxz
in
lds
inc
sbb
pop
xchg
adc
jl
and
in
mov
push
adc
inc
cwtl
pop
fstpt
or
or
jns
adcl
mov
mov
xchg
ja
nop
gs
pusha
movsb
lcall
push
fildll
or
idiv
cmp
push
xchg
push
xor
fstpl
lea
movsb
adc
adc
pusha
or
or
cmp
in
shr
js
loope
notl
mov
test
jo
pop
enter
loopne
pop
push
shlb
push
std
in
mov
jmp
or
xchg
rcrb
push
sub
xchg
scas
jle
bound
pop
stc
cmpsl
mov
mov
or
jae
out
loop
fcoml
hlt
pop
pop
rolb
std
lods
jle
lock
and
call
cs
and
int3
cmp
cltd
cmp
mov
push
xchg
shrb
hlt
dec
cmp
jb
pop
insl
lcall
stc
jmp
inc
sub
jo
mov
jge
jb
fwait
jo
cmp
mov
mov
jl
lock
sbb
lods
aam
and
int3
pop
add
or
rcrb
jo
jae
jg
enter
or
dec
mov
es
add
inc
inc
loopne
cmp
addr16
mov
jl
mov
fs
hlt
mov
xchg
mov
lcall
adc
push
inc
std
js
or
xor
lock
cmpsl
aaa
fildll
inc
shl
inc
aad
mov
inc
xor
in
gs
mov
sub
aas
fidivl
das
loope
mov
sbb
bound
add
mov
push
sahf
push
cmc
mov
shlb
loop
cli
mov
push
mov
xor
jbe
gs
mov
adcb
push
es
fisubrl
out
lds
out
inc
cmp
fs
adc
mov
cmpsb
jmp
lds
adc
test
rcl
fcoml
inc
adc
dec
test
or
lods
jnp
iret
push
xor
icebp
out
fstpl
push
sub
gs
xchg
das
push
jge
into
xor
arpl
jns
push
das
movsb
inc
and
test
add
cmpsb
aam
push
xchg
je
testl
das
cli
mov
daa
dec
jecxz
pushf
cmp
push
aas
fmuls
jmp
cld
loopne
cld
in
aad
andl
loope
dec
sti
in
pushf
nop
or
ss
mov
mov
das
nop
stos
dec
popa
arpl
mov
adc
jp
pop
fincstp
fisttpll
imul
sub
in
cmp
cmc
aas
and
into
negb
lea
pop
imul
lods
xor
xchg
loope
mov
ja
mov
and
sbb
sub
or
test
push
loop
int
xor
incb
push
and
add
push
leave
stc
cmp
sub
push
mov
jno
rcrl
clc
xchg
cmp
mov
mov
push
sti
push
jne
cmp
imul
in
sbb
push
inc
int3
jo
pop
add
pop
repnz
or
pop
outsb
cmp
cmpsl
ljmp
mov
mov
mov
rclb
movsl
iret
pop
movsb
cmp
lock
xor
mov
mov
stos
std
imul
push
cmp
and
sbb
mov
or
insl
repz
dec
dec
pop
loope
iret
sbb
ja
xchg
push
sub
out
repnz
loop
mov
dec
push
sub
xchg
mov
fildll
in
pop
jne
mov
arpl
mov
js
pop
mov
leave
sbb
fistpl
fcoms
push
lahf
cld
adc
jno
imul
pop
cmp
aad
je
mov
orb
fstl
bswap
or
xor
sub
and
sahf
mov
lock
xchg
add
mov
and
scas
add
gs
inc
push
xchg
ds
ss
sub
stc
rol
fnstcw
ds
call
mov
cmp
and
jbe
push
pop
cwtl
loop
xchg
jge
sbbl
aam
adc
in
daa
gs
xchg
fabs
or
push
sub
nop
xchg
cld
jle
xchg
cmp
pop
and
fnstcw
jae
pusha
pop
pop
sub
xorl
int3
imul
mov
pop
fprem1
sub
inc
outsb
shrb
cmp
stos
fcompl
in
mov
leave
jmp
push
mov
mov
inc
pushf
stc
outsb
addr16
scas
mov
dec
int3
sbb
and
jae
in
ret
adc
xchg
das
push
dec
dec
lcall
fmull
mov
jle
pop
dec
cs
mov
cmp
scas
test
int3
mov
adc
jno
jecxz
enter
inc
or
xchg
sbb
sub
and
jle
sub
jno
inc
mov
push
xlat
cmpsb
pop
mov
or
xchg
fadds
lds
jo
adc
inc
push
sub
xchg
fidivrs
test
push
js
mov
mov
rol
rclw
pop
inc
aaa
push
aad
dec
push
aaa
jg
inc
icebp
inc
sbb
and
ja
daa
into
jne
sahf
jecxz
cmc
push
jge
and
or
mov
cmp
jecxz
mov
mov
push
xor
lods
loop
rolb
sub
sub
adcb
movsb
shlb
fimuls
pop
and
into
int3
out
mov
in
push
into
rcrl
loopne
repnz
outsl
fsubr
fistps
mov
sub
iret
mov
stos
mov
mov
mov
dec
aad
incl
std
or
adcb
dec
icebp
pusha
adc
fidivrs
or
loope
repz
sub
mov
mov
js
dec
or
int3
add
and
xchg
cmp
add
insl
mov
fists
cmp
jnp
xchg
adc
lret
in
mov
push
loop
inc
ja
mov
mov
cmpsl
cmp
lock
dec
pushl
test
inc
mov
lret
or
push
fwait
inc
inc
add
adcb
nop
fcmovu
ds
sbbl
in
and
mov
sbb
xlat
xchg
sbb
lret
shll
movsb
cmpsb
push
mov
jmp
fcmove
adc
xchg
jae
dec
jle
fiadds
pop
fcmovu
dec
stc
negb
lret
dec
sub
fisubs
dec
outsl
fdivp
dec
mov
push
mov
ja
mov
imul
gs
inc
mov
fs
popa
sbb
push
addb
popf
aam
jl
cld
addr16
mov
cld
sub
lret
dec
lods
fdivr
pop
fiaddl
sub
test
fdivl
push
pop
cltd
pop
lahf
dec
ret
pop
adc
push
push
decb
dec
pop
das
cltd
out
call
filds
fdivr
cs
push
outsb
pop
lcall
sbb
sub
cmp
dec
outsb
mov
pusha
xor
push
adc
test
adc
push
ja
push
dec
add
cmpsb
fstp
hlt
push
jo
imul
adc
pop
fs
ret
and
pop
mov
ljmp
scas
mov
std
aad
pusha
les
pusha
mov
cmp
jb
xchg
jnp
orl
gs
ret
insl
add
jg
fwait
xchg
stc
sbbl
insb
lods
sbb
popa
aam
dec
or
out
loop
pop
mov
pusha
xor
aaa
xchg
out
xchg
pop
jne
addr16
out
mov
pusha
xchg
and
lcall
and
gs
inc
punpcklwd
xor
fdivrs
sbb
aas
mov
data16
inc
inc
adc
inc
cmp
inc
ljmp
sub
mov
cmp
adc
sbb
shl
jge
cmc
repz
fldl
out
leave
int
data16
pusha
and
pushf
out
sbb
pop
sbb
mov
cmp
mov
mov
out
cmp
sub
xchg
stc
inc
dec
ret
or
repz
dec
jmp
add
cmp
loop
loop
jae
lret
and
imul
mov
roll
outsb
push
push
lahf
inc
push
sbb
sub
mov
and
stos
arpl
outsb
mov
xor
inc
adc
pop
fwait
or
cmp
sub
ret
ret
push
push
mov
outsb
dec
sahf
mov
loop
and
ret
adc
loop
and
daa
xor
icebp
sub
hlt
fidivrl
cwtl
mov
aad
jmp
mov
cmp
and
clc
fucomp
xchg
add
or
and
adc
mov
push
push
pop
notb
mov
inc
loop
cltd
loop
fsubrp
xchg
pop
shrl
mov
pop
in
lcall
pop
imul
icebp
and
adc
cmp
xor
mov
sti
sbb
and
stos
xchg
xor
inc
stc
dec
fists
loop
jmp
mov
aaa
adc
sub
out
movsb
shll
in
mov
xchg
xor
push
aad
adc
stos
into
stc
fldl
adc
mov
inc
faddl
sbb
mov
sbb
rorl
jae
mov
enter
pop
out
or
test
mov
ss
sbb
jp
cmp
pop
push
sbb
dec
jmp
cmpsl
pop
stos
test
adc
mov
ljmp
pop
jno
and
insb
inc
daa
pop
xor
mov
cld
inc
ret
mov
jnp
lret
push
mov
enter
cmp
inc
popa
int
js
iret
cmpsl
mov
not
add
xor
inc
pop
sub
mov
negl
xchg
pop
arpl
sbb
movb
lea
pop
push
outsb
inc
mov
std
leave
inc
and
push
gs
jbe
push
testb
xor
mov
adc
out
in
lock
xchg
aam
es
adc
pop
dec
daa
cmc
mov
mov
icebp
add
adc
sbb
pop
movsb
sub
inc
cs
es
stos
loop
pop
ds
and
adc
in
das
cmp
pop
cmp
mov
enter
test
jb
xchg
loopne
lock
lret
movsl
jne
arpl
mov
aas
popa
and
and
test
jb,pt
mov
xchg
aas
mov
int
mov
movsb
jmp
jne
dec
cmp
aam
jo
sbb
movsb
xchg
xor
and
icebp
jo
lahf
nop
shrl
adc
jne
mov
cs
cmpsb
leave
mov
out
in
fcmovb
pop
or
mov
cmc
jge
jmp
ret
or
insb
dec
dec
push
push
xchg
push
je
shll
jmp
addr16
cwtl
repnz
push
bswap
movsl
cs
lods
fs
sbb
clc
daa
and
inc
cmp
mov
and
adc
les
je
push
lret
pop
and
std
fwait
stc
daa
aaa
pop
in
pusha
or
ljmp
pushf
mov
mov
fisubs
dec
sub
dec
mov
add
test
shrd
dec
inc
sbb
mov
cmp
mov
pop
in
sbb
pushf
iret
dec
adc
loop
movsl
fs
int
xor
std
out
push
add
gs
add
inc
adc
dec
lea
xor
sub
sti
cltd
test
imul
xor
mov
dec
cmpsl
repnz
adc
ror
lcall
ds
adc
mov
jmp
sbb
movsb
push
mov
outsl
cld
test
in
or
fdivl
jecxz
add
mull
mov
hlt
mov
cmpb
xor
xor
mov
adc
ja
sbb
in
push
sub
push
ja
fs
pop
repnz
xor
xchg
in
jnp
jecxz
shl
imul
lahf
sbb
pushf
xor
jns
adc
mov
sbb
stc
add
xor
test
mov
dec
outsb
scas
cmp
dec
lods
lahf
mov
les
adc
jl
movsb
shlb
pop
sti
cwtl
push
sbb
test
bswap
xor
ljmp
mov
lcall
xchg
xor
xchg
pop
sub
add
sbb
jae
cmp
pop
movsl
push
push
cmp
fadd
mov
in
jp
cmp
adc
push
mov
dec
cmc
jmp
cmp
sub
outsl
jns
enter
pushf
test
push
jno
sub
xchg
lahf
test
jo
js
dec
adc
pop
loopne
mov
cld
and
bound
jns
jg
lds
pop
dec
jno
loop
clc
cmp
add
movsl
and
add
aas
enter
std
inc
mov
and
xor
push
dec
or
lret
sti
fisttpll
mov
add
loopne
lods
mov
sub
xor
ret
fmul
push
jmp
lea
xchg
cmc
mov
out
insb
loop
mov
notb
pop
sub
cmp
pop
push
daa
ret
icebp
sti
lcall
pop
test
pop
loopne
push
jno
inc
js
dec
stc
mov
enter
pop
shr
or
and
mov
shrl
test
pop
cli
in
cmp
loopne
jne
insb
mov
or
xchg
mov
std
rorl
sub
cmp
lret
pop
cmpl
addr16
mov
mov
mov
adc
inc
insb
sahf
dec
ljmp
jl
dec
aaa
outsl
std
mov
pop
js
cld
inc
jl
adc
fmuls
xchg
sub
and
js
lock
cwtl
xchg
enter
xor
gs
mov
pop
imul
jecxz
and
cmp
dec
pushf
pop
cmp
sbb
cmp
dec
xchg
lahf
ds
arpl
sbb
pop
in
ja
fistps
xchg
pop
mov
add
pop
sub
das
ss
rcll
roll
sub
xchg
loope
pop
dec
add
ret
xchg
xchg
scas
jne
and
add
das
sbb
push
xchg
loop
test
pop
ss
cmp
dec
sub
mov
das
loop
push
cmpsb
lods
sub
ds
mov
imul
cwtl
push
xor
mov
dec
fists
mov
cmp
cmp
xor
or
sbb
rcl
fcom
mov
ret
inc
mov
call
pop
outsb
jae
sbb
pop
idivl
pop
mov
sbb
test
subl
insl
cmpsb
push
mov
jecxz
fsubs
or
sbb
push
mov
dec
dec
push
in
adc
ficomps
inc
cmpsl
sbb
shlb
in
cmp
dec
ret
lahf
mov
push
inc
dec
mov
xchg
outsl
insl
test
scas
vmread
add
push
add
xchg
andl
cld
out
fnstsw
movsl
std
xchg
or
cmpsl
or
in
push
push
fisubrl
and
dec
or
aaa
das
enter
push
cmpsl
pusha
mov
xchg
out
cs
or
into
hlt
xor
mov
xchg
in
cmp
cmp
dec
sahf
push
mov
push
cmp
test
out
or
add
subl
xor
mov
push
inc
out
notb
rclb
pop
stos
adc
sub
cmpsl
add
addr16
xchg
daa
or
loope
shlb
ja
repz
adc
push
in
jmp
jmp
sarl
dec
andb
mov
dec
dec
pop
mov
sub
hlt
stos
loop
xor
inc
fimull
mov
subb
pop
sbb
mov
inc
in
pop
push
adc
lods
outsl
out
mov
pop
icebp
lret
adc
fmull
pop
jecxz
xchg
xchg
je
lods
pop
jecxz
inc
jmp
push
pop
mov
jns
push
mov
rcrb
mul
jle
daa
or
mov
cmp
cwtl
pop
pop
add
jmp
cmp
icebp
cmp
mov
sahf
jle
push
gs
aas
xchg
imul
sahf
mov
popa
jae
push
jl
sub
test
inc
xchg
roll
dec
adc
dec
push
push
in
sti
and
jg
and
rcrb
fwait
pop
pusha
inc
cld
mov
clc
frstor
push
dec
lret
frstor
push
andl
mov
ret
push
pop
in
adc
pop
repz
rol
inc
mov
out
lahf
push
jae
sub
xor
jne
into
and
mov
nop
dec
repz
xchg
dec
sar
out
roll
orb
cmpsl
adc
xchg
arpl
iret
scas
and
filds
inc
imul
cmpsb
movsl
stos
sub
lret
in
loopne
test
lock
jecxz
push
fisubrl
lods
int
nop
sbb
test
scas
push
enter
aaa
fmuls
int
mov
addl
mov
jb
rcrb
je
add
add
test
and
popf
push
cmp
cmp
sbb
push
imul
jbe
ljmp
push
or
inc
xchg
insb
ds
out
push
inc
test
xor
jecxz
rclb
or
push
ljmp
fsubrl
xor
fnstsw
lds
je
arpl
mov
sti
addr16
out
imull
ret
pop
jnp
push
pop
cmp
js
push
xchg
pop
mov
fmuls
sub
xor
cmpsl
cld
pop
pop
pop
push
fwait
cmpsl
cltd
lret
sub
outsl
jle
cmc
add
lcall
pop
pop
push
mov
rolb
cmp
daa
and
lds
dec
addr16
es
inc
push
push
mov
cmpsb
or
lret
push
mov
pusha
cltd
imul
shlb
and
and
pop
jge
push
aam
pop
cmc
in
rol
lds
sub
jb
xchg
or
sbb
push
push
cmp
adc
or
stc
imul
mov
mov
push
adc
xchg
pop
and
test
push
mov
xchg
stc
mov
aas
out
mov
sub
cmp
les
mov
daa
int3
scas
int
mov
push
das
test
pop
sbb
leave
xchg
lret
aad
movsb
pop
repnz
std
jle
ror
sbb
push
or
adc
jno
lods
ret
ds
mov
out
in
pop
aaa
fildl
js
jge
fistpl
movsb
sub
xchg
outsl
mov
push
loopne
xchg
inc
data16
inc
sub
mov
inc
ret
or
pusha
jnp
xor
das
lock
repz
fcmovnb
jns
mov
cmc
lea
dec
arpl
cmp
aad
cmp
sbb
xor
out
ss
dec
xchg
sbb
loopne
cmp
xlat
stos
pop
push
or
inc
pop
rol
cltd
cmpsb
mov
jae
jae
add
rorl
dec
repz
and
push
add
mov
clc
or
stos
sub
mov
cs
jmp
push
jo
and
dec
mov
xchg
lea
mov
fimuls
xchg
push
pop
or
stos
out
cmp
mov
jo
cwtl
inc
push
cmp
pop
fisttpll
pusha
negb
cld
xor
test
cld
ret
add
jbe
sbb
scas
dec
mov
scas
sub
pop
ljmp
cmp
mov
jp
addb
dec
into
cmp
popa
inc
mov
cmp
mov
xor
adc
mov
mov
jae
jae
pop
and
aaa
dec
mov
add
mov
adcl
sbb
ret
cwtl
inc
mov
adc
xchg
int3
rcrb
or
pop
ret
scas
fmul
imul
jg
shrl
movsb
xchg
repz
pop
mov
sub
ja
push
and
sbb
fsubrs
stc
mov
cmpsl
jo
dec
xchg
add
cmp
gs
loope
repnz
test
je
mov
jg
out
dec
in
mov
fsubrs
mov
daa
lret
push
aam
mov
mov
stos
js
pusha
fstpt
enter
fcomps
xor
push
and
ret
mov
leave
ret
fisubl
stc
rclb
xchg
out
cs
mov
mov
dec
jp
das
lds
cmovnp
mov
negl
mov
mov
xchg
imul
test
je
cli
ret
mov
sbb
xchg
in
mov
push
lahf
jo
lds
es
push
add
loop
xor
jae
mov
scas
cmp
add
lock
sub
rcll
push
maxps
and
pop
xor
push
lret
movsl
push
cmp
lahf
xchg
test
cmc
xchg
lret
sub
dec
icebp
clc
cwtl
dec
pop
pop
stos
gs
rorl
js
mov
movsb
repnz
add
lock
clc
mov
dec
iret
and
int
or
push
loope
xchg
aaa
push
push
pop
hlt
sub
cmc
push
and
inc
xchg
add
inc
fcoms
xchg
lcall
jmp
pop
inc
mov
mov
sbb
pop
jbe
test
insb
push
insb
lock
push
jb
loopne
cmpsl
pop
sbb
push
lock
jmp
std
and
nop
jl
lods
ss
stos
sbb
iret
sub
lcall
call
sub
rcrl
out
jg
movsl
push
mov
repnz
movsb
ror
push
enter
notb
call
stos
sbb
insb
mov
mov
push
mov
xchg
sbb
fwait
dec
js
mov
leave
int
cmp
pop
add
and
outsb
pop
fmuls
and
jbe
inc
jg
and
adc
xchg
pushl
pop
pop
dec
icebp
fcompl
dec
repnz
cmpb
sub
xchg
push
mov
movsb
mov
lret
sub
xlat
mov
int
shl
inc
or
inc
daa
mov
ljmp
mov
dec
pop
sbb
sbb
sbb
jg
pushf
jbe
clc
and
pop
xlat
dec
jae
jecxz
nop
mov
adc
and
mov
mov
sub
push
jge
outsb
popa
icebp
push
int3
dec
pop
jb
inc
clc
clc
xor
add
inc
lcall
fs
add
adc
decb
inc
jno
ret
push
leave
std
cltd
sub
fcompl
dec
xchg
or
movsl
addl
jle
in
or
jne
icebp
mov
cmpsl
xchg
aas
xchg
mov
mov
out
leave
fwait
pop
xorb
push
and
lea
pop
fwait
add
aam
add
ljmp
mov
fbld
pop
inc
dec
inc
mov
inc
and
cltd
pop
pop
add
fidivl
and
dec
push
inc
push
jmp
stc
das
mov
xor
cli
mov
enter
push
mov
dec
lcall
xchg
icebp
xor
sbb
add
cs
int
in
and
test
jp
test
sub
stos
mov
shrl
mov
addl
popf
les
mov
int
pop
dec
decb
addl
mov
ret
int
bndldx
scas
xor
fstl
push
dec
scas
addl
mov
or
add
mov
push
cltd
fnsave
jmp
sub
das
das
push
shrl
mov
pop
lea
shrb
cwtl
push
and
or
scas
cwtl
gs
xchg
icebp
add
xchg
xchg
in
js
aas
scas
sbb
add
xlat
sbb
stos
push
in
enter
les
cmp
clc
cld
mov
lds
sbb
int
xor
inc
popf
mov
xchg
testb
jmp
dec
sahf
es
enter
in
lret
sti
outsb
sbb
adc
sbb
loopne
stos
lock
test
sbb
dec
sbb
jg
mov
jne
nop
jecxz
xor
xor
inc
push
cmp
jle
sbb
aaa
mov
cmc
mov
push
pop
cmp
xor
mov
push
jl
or
rorl
inc
aaa
pop
jle
xchg
push
mov
sub
bnd
xchg
lods
mov
test
mov
mov
dec
cmpl
mov
sub
sbb
aaa
sbb
mov
hlt
mov
pop
sbb
mov
ficoms
das
popa
aad
lcall
sub
test
inc
push
adc
out
jbe
mov
loopne
and
dec
stc
test
cmpsl
jo
jae
jp
mov
das
cmp
sbb
dec
sub
mov
ss
pusha
js
mov
popf
add
xchg
pop
popl
ljmp
pop
mov
lds
test
daa
loop,pn
push
pop
cltd
push
cmp
xchg
fdivrs
inc
es
lcall
mov
pusha
dec
pop
call
scas
outsb
hlt
push
cmp
repnz
inc
rcrl
or
dec
jle
fistl
sti
xor
xchg
jl
jns
imull
pop
testb
cbtw
xor
pop
popf
jno
aad
jo
mov
mov
movb
sbb
lahf
pusha
pusha
pop
xchg
jae
push
push
or
add
adc
aad
pop
dec
aas
cmp
or
adc
rolb
lcall
pop
mov
push
cmpsb
jmp
jecxz
push
xor
lds
push
dec
cmp
jns
ja
test
gs
nop
add
mov
daa
and
jne
cmpb
call
adc
add
inc
popa
mov
nop
xor
mov
add
mov
mov
lahf
mov
enter
sahf
scas
pop
mov
in
inc
jbe
mov
ret
or
jo
inc
pop
inc
jge
stc
mov
dec
in
inc
sbb
sbb
jle
sub
xor
add
push
xchg
test
dec
punpckhdq
test
es
movsb
inc
xchg
pop
inc
fcmovbe
add
loopne
jmp
lds
mov
jp
cmc
sub
jle,pt
cmp
fmull
pop
push
add
ds
push
iret
mov
fwait
add
cltd
fmull
hlt
loop
data16
push
in
adc
fmuls
cwtl
dec
mov
jg
and
mov
fcoml
dec
cli
test
sbb
int
test
ljmp
mov
jecxz
test
lods
outsb
dec
jecxz
dec
xor
add
cmpsb
imul
dec
push
jge
loop
lods
jl
out
out
out
cmp
sub
lret
in
and
push
sub
cmp
push
out
pop
or
fnsave
cmp
mov
dec
js
jae
nop
push
push
inc
push
mov
and
cmp
scas
sbb
lret
stos
bound
sbb
out
xchg
scas
in
mov
pop
bound
pop
mov
jg
cmp
push
ret
je
ret
ljmp
push
inc
insl
dec
and
repnz
sub
in
mov
and
fsubrs
inc
pop
lcall
adc
add
jo
iret
jbe
inc
ljmp
icebp
mov
push
pop
test
imul
call
ficompl
fcmovne
cmp
bound
cmp
adc
and
or
cltd
jo
aam
mov
icebp
cmpl
mov
or
or
pop
das
cmp
or
push
orb
jle
fdivrl
and
push
adc
xchg
mov
pop
xchg
adc
inc
cmp
jno
pop
pop
sbb
loope
add
sub
push
in
xchg
arpl
adc
sbb
mov
pop
mov
jns
push
lret
enter
inc
les
sahf
adc
mov
xor
daa
jecxz
ds
inc
dec
repnz
faddp
and
push
xor
jp
cmp
clc
cwtl
repnz
daa
add
outsb
cmp
jo
mov
mov
aaa
jne
or
in
lods
lret
mov
out
cmp
jmp
repz
push
out
xchg
loop
iret
pop
xchg
inc
jecxz
mov
cmp
icebp
sub
jne
pop
pushf
stos
and
mov
out
aam
inc
stos
push
push
vmread
movsb
mov
adc
jb
lret
mov
aas
push
in
mov
push
pop
test
mov
popf
sbb
in
in
sbb
xchg
test
ret
test
sub
push
xor
stc
mov
inc
inc
scas
ss
or
sbb
push
lock
add
fnstcw
std
cmp
rclb
into
sti
ja
sub
sub
pop
push
outsl
leave
test
pop
jae
xchg
test
aam
ds
mov
or
and
test
setae
or
add
and
stc
xor
cmp
sahf
aaa
inc
mov
mov
mov
stos
mov
loop
mov
xchg
inc
insb
mov
pop
mov
cmpsl
out
cmpsl
pop
or
inc
jae
xchg
inc
mov
mov
push
fstpl
out
jae
inc
fxch
gs
and
xchg
push
cmp
jg
push
sbb
mov
jp
pop
dec
fwait
test
mov
push
pusha
out
icebp
icebp
fwait
adc
sbb
roll
icebp
mov
std
xchg
rcll
sbb
jmp
pusha
mov
mov
or
pop
imul
xor
mov
sub
sahf
es
cmp
xchg
jne
aam
jle
sahf
in
jns
ret
jae
std
jmp
cmp
jmp
sub
inc
pop
lcall
int3
pop
pop
mov
pop
mov
mov
lock
js
lds
pop
std
pop
sbb
push
dec
out
xlat
push
mov
cmp
lods
cltd
and
sahf
or
fwait
addr16
pop
test
mov
xchg
add
roll
mov
test
lahf
cmp
enter
dec
cld
lahf
mulps
lods
ret
pop
xchg
mov
loope
enter
cli
mov
inc
mov
cwtl
lock
rcr
jl
imull
mov
dec
ret
mov
outsl
and
movsl
push
jmp
enter
or
push
imul
adc
adc
mov
icebp
test
cmp
cli
and
in
push
outsb
iret
mov
jne
dec
mov
ss
loope
pusha
sbb
cs
jno
pop
hlt
or
push
lods
aam
jg
ja
dec
mov
mov
pop
add
xor
outsb
gs
iret
mov
stos
sub
dec
add
mov
push
ljmp
mov
and
adcl
dec
pop
hlt
test
xlat
fcmovb
aad
lret
lcall
out
dec
xor
inc
cmp
rorl
test
xor
cli
cwtl
xor
push
call
jecxz
in
add
lahf
cmpsl
mov
std
jo
ss
idivl
xchg
mov
xor
lret
cmp
lods
lea
inc
inc
arpl
out
enter
ds
filds
pop
and
or
popf
ficoml
stc
test
lret
and
and
scas
mov
scas
shr
cmp
mov
sbbl
repnz
ret
fs
and
inc
adc
mov
lret
insb
out
xchg
xor
mov
in
call
inc
or
adc
add
rclb
insb
fldcw
jo
pop
mov
jle
fistl
cmp
cmpsl
or
adc
mov
ljmp
dec
mov
fbld
dec
addb
ret
pop
js
sbb
xchg
das
or
mov
int3
mull
xor
lds
mov
call
mov
mov
stos
sub
push
out
call
mov
cmpb
hlt
jno
xchg
arpl
add
sub
jge
or
out
dec
test
rcrl
sbb
shll
test
pop
out
adc
mov
jecxz
mov
mov
jae
ds
mov
jle
and
or
shl
sub
xchg
push
rorl
insb
rorb
dec
insb
mov
xchg
xor
push
ret
icebp
xchg
das
mov
andl
pop
das
scas
sbb
xor
fucom
push
xchg
into
and
mov
dec
lds
imull
push
sub
mov
push
daa
clc
cwtl
add
mov
sbb
push
dec
or
add
das
xor
dec
push
jl
jno
mov
test
daa
aaa
daa
rorb
adc
pop
push
sbb
adc
push
add
adc
dec
sbb
fisttpl
jp
and
scas
add
movb
jge
pusha
mov
sbb
test
jmp
xchg
mov
dec
rol
inc
fistpl
insl
pushf
xchg
pusha
inc
pop
push
sbbl
sbb
lods
adc
mov
test
test
jns
pop
ds
in
and
xor
std
iret
ljmp
sbb
and
xchg
jne
out
cmpsb
lea
inc
std
bound
jns
icebp
mov
cmpsl
sbb
pop
cli
leave
pusha
xchg
adc
sbb
push
daa
inc
fwait
adc
scas
out
xchg
fstpl
and
push
je
mov
imul
cmpsb
mov
jb
bound
test
aad
pushf
pop
lock
jnp
dec
add
out
mov
leave
or
ficoms
pusha
mov
sti
cmp
jb
mov
loope
xchg
adc
mov
xchg
push
mov
sub
icebp
push
pop
mov
mov
push
adc
sub
leave
add
in
xor
adcl
cmpsl
and
push
iret
out
into
pop
lock
push
enter
inc
push
sbb
pop
fucomp
bound
scas
mov
push
xor
jl
jle
call
clc
xchg
jge
movsl
in
fwait
jecxz
add
jns
mov
inc
jae
cltd
cmp
add
in
ljmp
jnp
mov
dec
xchg
jge
pop
fisttpll
jg
test
lods
and
movsb
lods
aad
rcl
pusha
inc
loop
popa
scas
push
lcall
cmpsb
jmp
add
pop
xchg
popf
or
movl
scas
xor
sub
cli
es
ds
in
mov
mov
or
and
hlt
shrl
test
insb
lds
add
adc
dec
fisubl
push
mov
pop
leave
push
fnstsw
push
imulb
or
mov
cmp
ss
pop
in
jge
jp
enter
mov
in
push
movlps
pop
loope
adc
das
stos
das
push
sub
out
mov
rorb
push
dec
sahf
stos
xchg
jg
pusha
ret
add
jmp
rcrl
fsubp
pop
mov
arpl
clc
rcrb
shll
test
cltd
adc
jmp
xchg
imul
mov
push
test
or
sub
in
ret
std
ficoml
arpl
dec
hlt
push
cmp
jl
cld
mov
mov
cmp
or
mov
movsl
jbe
cs
pop
xchg
cwtl
stos
push
mov
xchg
xor
add
fmul
mov
ja
inc
push
dec
xor
ret
insb
ss
push
or
lcall
mov
sbb
scas
add
adc
xchg
mov
jns
rcrl
stos
ss
push
into
lahf
stos
add
push
sarb
mov
or
push
push
mov
scas
inc
rcrb
int3
pop
sbb
loopne
dec
mov
aam
pushf
add
or
dec
test
lret
inc
mov
mov
xchg
jp
lret
cltd
fisubl
fwait
cwtl
leave
adc
pop
fwait
jb
and
fldl
dec
stos
push
aad
arpl
loopne
int3
push
test
test
push
fmull
cmp
xchg
add
mov
inc
scas
clc
nop
or
mov
fisttpll
push
push
cs
pop
and
sti
ret
pop
add
mov
mov
outsl
mov
adc
notl
xlat
xchg
sbb
in
jl
cli
lds
pop
into
push
mov
push
loope
mov
lock
or
arpl
and
mov
ret
aaa
fs
push
ss
sub
mov
sub
mov
fisubrl
sahf
out
pop
pushf
stos
std
pop
add
adc
jb
movsb
jno
push
xchg
icebp
imul
dec
sub
clc
adc
jg
push
sbbb
out
clc
jo
dec
fs
stos
std
and
into
xor
xchg
and
pusha
fnstenv
cld
or
mov
ror
cmp
cmpb
add
or
jle
test
inc
pop
pop
shr
jo
fs
shrl
xor
mov
daa
push
std
lea
push
jno
mov
cmpsl
lds
adcb
lds
jecxz
fisttpl
mov
jo
fnstcw
or
fdivrs
daa
inc
movsb
mov
std
mov
hlt
pop
jmp
cltd
lea
cld
cld
pusha
fcomps
psraw
xlat
dec
in
scas
lea
call
mov
jb
pop
mov
insl
mov
out
js
stc
adc
cmp
adc
lcall
in
repnz
xorl
imul
mov
inc
jae
aaa
movsl
push
cmp
xchg
xchg
xchg
decb
cmp
adc
push
inc
push
int3
xor
and
rclb
mov
stos
lcall
int3
and
int3
pop
lock
pop
decb
lea
sti
ja
mov
in
jb
add
pop
push
sbb
lret
add
stc
sub
sahf
orb
adc
movsl
into
dec
aad
and
mov
add
xchg
insl
ret
cmp
sarb
shll
cmpsl
and
dec
inc
loop
jae
sbb
jno
call
adc
push
lea
ljmpw
xchg
hlt
sub
cs
pop
fdivrs
mov
xchg
sub
and
sbb
mov
jo
inc
rcll
jg
fwait
popa
pop
mov
daa
push
adc
pop
das
out
mov
pop
add
addr16
icebp
sti
not
lret
jmp
and
xlat
sbb
rorb
lock
inc
test
iret
cmp
jnp
aam
mulb
scas
addb
add
mov
in
cmpsl
lea
mov
xor
shl
dec
pushf
push
sarl
stos
cli
sti
push
call
lcall
dec
sub
das
cmp
push
xchg
adc
jmp
popa
push
shll
enter
push
jo
cli
xchg
dec
lods
or
pusha
adc
lods
push
out
shll
push
pop
push
pop
jae
nop
pop
aaa
pop
aad
std
and
pop
pop
push
sub
sbb
cld
cli
mov
xor
dec
in
cmp
stos
fwait
inc
sub
mov
jne
mov
repz
and
std
int3
sbb
xlat
lea
pop
and
ficoms
shll
add
pop
enter
cmpsb
out
mov
icebp
js
nop
clc
daa
cmpsb
sbb
mov
xchg
pop
add
add
sub
adc
mov
into
dec
sbb
cmpsb
jecxz
cmp
sbb
sub
test
dec
shlb
lret
loope
shlb
popl
push
jno
jmp
sub
sub
xor
push
or
into
jns
int3
ret
adc
cmp
jne
jg
test
lods
dec
xchg
dec
in
bound
outsl
cli
xchg
push
gs
mov
push
ret
in
add
ljmp
mov
int3
adc
jp
xchg
dec
idiv
mov
mov
rcrb
ds
pop
in
stos
sub
nop
inc
fisubs
xor
arpl
push
fsubl
int
pop
dec
dec
popa
sbb
xor
jp
mov
adc
jl
jp
dec
pop
stos
div
adc
sbb
adc
out
mov
and
test
sbb
iret
mov
dec
ja
pushf
les
and
shll
pushw
ret
orb
push
push
adc
enter
leave
push
out
nop
test
adc
and
pop
lahf
and
ds
rcll
hlt
pop
mov
jne
ljmp
adc
out
mov
mov
mov
add
stos
adc
shll
adc
jp
sbb
cs
aam
mov
in
push
adc
xchg
fstl
lret
and
test
push
mov
scas
push
ss
sub
adc
ja
stc
dec
enter
pop
push
mov
pop
inc
jmp
jo
push
popa
pop
fisttps
mov
mov
push
and
push
jmp
adc
test
test
je
add
inc
loope
jmp
push
and
fstl
pop
sbb
pop
stos
mov
aam
and
xchg
or
mov
jbe
ljmp
hlt
movsb
pop
or
push
add
xor
xchg
fldz
je
arpl
jbe
movsl
arpl
xchg
addb
jmp
dec
test
inc
mov
fists
mov
and
stc
in
sub
imul
push
adcb
mov
cltd
test
and
push
cmpsl
popa
and
jle
inc
sub
pop
sahf
rclb
ret
popa
pop
dec
hlt
mov
pop
aad
jo
ss
mov
mull
adc
fcmovnb
loop
outsl
inc
or
dec
xor
nop
sub
mov
idivl
sbb
and
xlat
stos
mov
or
mov
cmpsb
jecxz
jg
xor
lcall
cmp
sahf
out
mov
push
xchg
jp
add
test
lds
fsts
cmc
adc
sub
and
add
sub
arpl
add
insl
ds
cli
nop
in
wrmsr
pop
mov
or
and
jl
call
pop
sub
jecxz
mov
mov
mov
push
pop
clc
pop
loope
mov
inc
pop
shl
and
sub
loope
ds
int
and
fnstenv
movsl
pusha
jp
push
in
xchg
or
lock
lods
add
or
mov
aam
ljmp
ret
jmp
adcl
push
in
lock
and
inc
dec
bnd
rorb
pop
into
xchg
jp
incl
or
xor
arpl
inc
andb
leave
out
cld
push
sub
push
orb
outsb
jle
mov
push
clc
pop
xchg
bound
icebp
mov
cmpl
lret
pop
xchg
imul
xlat
pop
in
sub
data16
push
movsb
inc
imulb
lret
andl
cmp
mov
mov
test
jmp
daa
loope
inc
mov
subb
repz
add
fdivrs
popa
idiv
stos
add
adc
mov
lock
cwtl
inc
notb
mov
data16
add
mov
cli
repz
sbb
mov
aaa
je
or
xchg
repnz
adc
ds
adc
cli
aas
mov
cli
lea
enter
aam
pop
pop
push
inc
aam
mov
push
mov
inc
loope
lahf
or
movsl
in
sti
sbb
dec
repz
push
add
insb
aam
loope
dec
stos
lods
inc
out
add
rcl
inc
xor
mov
leave
fwait
sahf
sub
pop
in
mov
or
imul
pop
dec
call
push
mov
pop
out
mov
mov
xor
jae
outsl
add
cmpsb
pop
lcall
xchg
subb
sub
mov
xchg
add
jl
arpl
test
xchg
mov
push
xor
fidivrl
inc
mov
lods
mov
aaa
xor
out
lock
push
fiaddl
or
mov
rclb
idivb
stos
pop
mov
adc
jb
cltd
dec
shll
clc
les
aas
out
xor
add
xor
icebp
push
cmp
inc
mov
pushf
lret
jo
pop
mov
cmp
popf
jnp
clc
add
pop
or
int
xlat
and
repnz
dec
imul
arpl
mov
ds
fmuls
scas
cli
add
add
cmp
push
dec
push
mov
in
adc
and
sbb
mov
push
adc
dec
and
leave
je
fldcw
sbb
add
jae
sub
push
mov
inc
push
shlb
xchg
sbb
jb
xlat
clc
and
mov
pop
stos
or
sub
out
pop
ljmp
push
xlat
arpl
jg
ljmp
aas
push
xor
cmp
test
mov
int
xchg
stc
and
push
mov
push
lea
jae
lea
dec
push
xchg
test
xchg
rolb
mov
pop
ret
jno
sub
push
inc
push
cwtl
jl
jle
adc
push
addr16
movsl
test
mov
cmpsl
in
sub
jno
mov
and
iret
adc
mov
xlat
in
cmpsb
pop
jl
lcall
popf
pushf
cwtl
fsts
add
sarb
cmp
push
xchg
in
sbb
xlat
fisubrs
in
sub
sbb
movsb
inc
or
adc
pop
aam
push
aas
movb
frstor
fst
and
int
xchg
mov
adcb
test
cltd
cld
in
dec
cwtl
rcrl
lahf
sub
int
notb
bound
inc
jnp
push
adc
es
cmp
dec
sbb
mull
or
clc
and
fbstp
nop
pop
jg
gs
pop
loopne
mov
imul
inc
fsubrs
xor
adc
jno
adc
jae
into
lss
jg
cmp
jb
inc
cmp
pop
mov
push
mov
cmp
mov
cmp
ret
push
cmc
pushf
movsb
mov
imul
push
and
int3
or
adc
dec
ljmp
loopne
xchg
shll
jl
mov
in
div
mov
mov
cs
insb
enter
test
jns
rolb
lds
aaa
into
shlb
mov
es
and
in
sub
or
test
xchg
aam
mov
cmp
push
cli
jl
inc
out
cwtl
imul
sti
pop
adc
fimuls
pop
data16
adc
add
cmp
shlb
rcll
xchg
repnz
aaa
xchg
stc
insb
gs
scas
repz
pushf
mov
sahf
xor
imul
aas
jnp
sub
cs
cmp
fwait
mov
mov
subl
rolb
and
dec
ret
xchg
and
xchg
cld
aaa
dec
out
mov
ss
arpl
pushf
inc
ds
cmp
repnz
mov
push
xor
cwtl
hlt
sarl
stos
push
repnz
fcomi
cmpsb
add
lock
in
shrl
shl
loop
pop
test
insb
ret
cli
out
ds
shrb
mov
pop
push
popa
dec
int3
push
jp
pusha
push
or
callw
jmp
shll
push
jae
mov
xchg
pushf
int3
insb
inc
jge
xchg
and
sub
mov
mov
dec
dec
xchg
pop
das
add
mov
xchg
cli
clc
cli
push
mov
xor
lods
je
daa
enter
pop
fs
mov
stos
popf
leave
addr16
int3
enter
dec
cmpsb
call
lahf
fcomi
cmc
sub
lds
mov
jp
mov
push
loopne,pn
aam
xchg
loop
mov
andb
adc
push
pop
in
fmul
pop
clc
jle
fs
mov
cwtl
cmp
lret
jnp
inc
in
std
jno
and
jecxz
mov
mov
or
add
adcl
and
pop
and
or
pop
shrb
push
jns
jecxz
adc
loopne
into
push
out
iret
movsb
dec
fbstp
xchg
lcall
icebp
sbb
xlat
repnz
ficomps
in
mov
test
lea
sub
pop
mov
jmp
sbb
jecxz
iret
dec
cmc
clc
cmp
pushf
adc
leave
inc
adc
mov
push
lds
and
inc
xchg
sub
cmp
jg
ss
dec
pop
push
xlat
cmp
leave
inc
popf
add
mov
fdivrp
xor
or
lret
push
std
add
cmc
cmp
fisttpll
call
out
xor
lea
pop
mov
ret
cmp
inc
jb
inc
push
mov
jg
mov
pop
and
jae
adc
das
mov
clc
adc
lahf
push
lret
xchg
shlb
popf
std
inc
xchg
pop
sbb
test
divl
aaa
lea
push
sbbb
icebp
or
aad
outsl
push
mov
les
jnp
mov
inc
cmpl
out
xchg
mov
sbb
lds
out
xchg
into
rclb
cmp
mov
les
sub
inc
pop
outsb
jbe
pop
pop
adc
sahf
and
fsubr
cltd
mov
fldt
sbb
idiv
ja
int3
aas
sbb
jmp
ffree
and
jg
jo
or
stos
rcll
push
jbe
sbb
mov
and
out
fsts
dec
in
ljmp
enter
mov
adcl
inc
flds
mov
ljmp
mov
lods
enter
cwtl
scas
xchg
jb
pop
lock
sub
add
rcl
outsl
das
xchg
cmp
pusha
mov
cmp
testl
mov
mov
subl
cs
popf
aad
push
mov
imul
jl
aaa
cmp
xchg
daa
lret
aas
loope
int
in
ljmp
pop
mov
xor
xchg
dec
add
sub
leave
icebp
ja
mov
mov
pop
pop
or
stos
test
outsl
ret
xor
mov
into
xchg
mov
jbe
xchg
int
pop
or
shrl
mov
cwtl
adc
jecxz
shrl
sbb
lods
pop
outsl
lret
push
pop
mov
adc
xchg
in
and
mov
ja
int3
cwtl
scas
repz
pop
add
cmpsb
test
push
fwait
push
in
test
in
sbb
dec
xor
xchg
sti
lret
shlb
cmp
and
sbbl
int
ss
inc
dec
into
ss
and
jbe
in
and
testb
sbb
cltd
mov
inc
aas
push
pop
push
add
or
or
sahf
mov
inc
sub
aaa
cmpsl
push
pushf
adc
lods
inc
push
in
adc
les
icebp
push
leave
rol
lahf
sub
sub
movsl
stc
arpl
out
inc
push
hlt
xorl
sbb
mov
insl
inc
adc
mov
pop
ds
push
sub
in
xor
int
mov
les
loop
lret
xchg
inc
jns
sub
repnz
mov
inc
shlb
andb
mov
xchg
ret
pop
push
fldenv
sbb
cwtl
mov
mov
fisttpl
pushf
jno
enter
xor
xor
push
aaa
vpackssdw
jnp
or
dec
in
jae
xor
mov
insb
sub
int
out
aas
pop
dec
pusha
out
push
ljmp
std
and
xchg
and
mov
in
xchg
je
sub
mov
scas
out
cmc
outsb
mov
icebp
push
test
addr16
rclb
mov
ret
movl
adc
mov
sarb
punpcklbw
sub
xlat
clc
and
sub
loop
xchg
and
stc
das
popf
movb
decl
fildl
pusha
mov
mov
int
mov
xor
cld
loope
out
xor
mov
adc
mov
arpl
loop
pop
in
cmpl
jns
vpaddusb
cmpsb
cmp
movsb
mov
fdivr
loopne
mov
rorl
insb
add
xor
sbb
in
cld
dec
popa
pop
bound
test
jp
cld
push
dec
inc
lret
loopne
adc
dec
inc
outsb
and
cs
pusha
rcll
fwait
aam
clc
scas
rcrl
push
push
daa
ljmp
loop
aaa
mov
jmp
int
push
cmp
sbb
lahf
and
sub
adc
lods
or
test
mov
xchg
std
xchg
dec
lcall
leave
adc
or
ss
mov
mov
arpl
jae
lret
jge
loope
pop
daa
enter
pop
xor
gs
jb
mov
mov
in
std
mov
sub
test
push
movsl
mov
addb
add
rorl
lret
jbe
xchg
jne
and
pop
pop
gs
test
and
mov
rorl
jecxz
dec
mov
push
cmp
dec
xor
pop
addr16
out
mov
movsb
pushf
in
cmp
hlt
xchg
aam
xchg
and
mov
das
adc
pop
mov
or
sbb
js
dec
jnp
aam
sarl
xchg
into
jnp
jecxz,pn
jno
push
cltd
or
mov
mov
push
out
pushf
mov
pop
pop
sbb
mul
mov
test
jl
push
push
icebp
sti
stos
imul
cld
shrb
call
subb
test
push
or
inc
pop
cmc
pop
ss
mov
cmpsl
ret
sbb
cmpsl
and
iret
push
mov
int
arpl
arpl
sub
xor
lods
sub
cmp
mulb
std
sbb
rcrl
stos
ss
xor
push
mov
or
dec
dec
inc
loop
xchg
pop
adc
out
mov
xchg
shrb
pushf
dec
sub
mov
das
push
fwait
dec
repz
daa
imul
js
mov
decb
add
dec
xchg
sub
inc
stos
jle
inc
inc
jno
inc
addr16
jbe
bound
out
fisttpl
add
adc
cli
into
dec
mov
cmp
aas
pop
inc
enter
mov
cmp
cltd
dec
xor
std
mov
ret
push
jg
adc
push
nop
fadds
and
fistl
fistpl
cmpsb
lea
das
xor
mov
pop
ret
pushf
xchg
sub
dec
cmp
outsl
or
gs
inc
daa
sub
divb
push
pop
xlat
sti
and
fimuls
cmp
lods
sbb
je
pop
push
inc
sar
lret
test
ss
sub
xchg
xchg
testl
jmp
bound
mov
lret
sbb
sbb
dec
push
and
pop
sahf
js
push
or
lods
insb
leave
xchg
jae,pn
fs
add
test
test
xor
mov
cmp
or
and
fisubs
jo
scas
adc
mov
cmpsb
and
jns,pt
loopne
lods
mov
pusha
popa
mov
xchg
ds
sbb
push
jne
ss
mov
mov
hlt
push
rol
push
dec
movsl
xchg
xor
test
fidivl
sub
xlat
jne
push
fistpll
insb
xor
mov
add
xchg
xor
sbb
add
das
add
mov
leave
sbb
stos
sbb
stos
inc
lds
pop
lods
mov
or
test
push
jne
imul
or
fsub
sub
ljmp
xor
shrb
fs
cmp
loopne
flds
xor
and
pusha
call
cld
shrb
cmpl
outsb
fists
scas
inc
cmp
add
ds
lcall
les
fwait
test
sub
aad
mov
mov
push
pushf
sbb
jae
outsb
inc
mov
add
fsubl
pop
mov
xorl
push
mov
int3
out
and
scas
mov
jg
call
sbb
xchg
mov
push
out
scas
dec
add
dec
cmp
xchg
insb
mov
sbb
mov
push
jp
hlt
outsb
sub
mov
test
mov
cmc
and
out
shrb
inc
addb
push
xchg
fwait
pop
adc
fmul
outsl
pop
xchg
int
cmp
outsb
xchg
movsb
imul
adc
dec
hlt
xlat
and
jg
shl
aad
cld
sub
push
lds
outsb
pop
xchg
sbb
cmp
adc
xor
mov
lahf
fsts
inc
pop
lds
mov
fisubrl
pop
mov
mov
rolb
mov
out
push
ds
sbb
ret
cmpsl
jne
cmp
and
imul
jmp
movsl
xor
adc
xlat
push
stos
sbb
adc
loopne
add
dec
fadds
test
fs
mov
or
jp,pt
lock
es
arpl
clc
xchg
jle
dec
inc
push
cltd
mov
iret
pop
ret
sub
scas
lods
inc
fbld
add
fdivrl
fidivrl
divl
xor
repz
and
popf
push
push
daa
popa
mov
and
stos
hlt
movsb
loopne
dec
adc
js
jae
jae
mov
cmp
aam
data16
push
sbb
jae
sub
ffree
out
test
mov
cmp
add
jo
pop
insl
push
mov
push
cmp
dec
test
imul
in
fadds
mov
sub
lods
out
mov
cltd
shrl
insb
mov
mov
cli
cmp
pop
jp
ret
sub
pop
subl
test
adc
sub
mov
nop
in
fxch
mov
xchg
mov
scas
sbb
call
fistpl
aam
xchg
orl
jge
imul
test
sub
and
or
arpl
sbb
xchg
int3
cmp
sbb
nop
pop
mov
mov
fucom
aas
xchg
lds
jo
xor
dec
in
lea
clc
dec
insb
pop
inc
bound
fbstp
and
sub
rclb
shl
les
push
into
dec
dec
ss
pop
repz
daa
sub
jle
stc
dec
idivl
add
test
faddl
repz
add
std
movsl
mov
fs
lahf
and
nop
jns
movsb
adcl
scas
xor
cmp
imul
jg
in
push
pusha
or
cmpsb
cld
add
lea
je
push
adcb
dec
lods
push
cmp
in
insb
loop
ret
loop
out
dec
sub
cli
jne
fwait
xchg
addr16
jecxz
insl
cltd
cs
leave
pusha
mov
and
fdivl
imulb
sub
ficoml
dec
divb
mov
pop
push
call
in
xchg
test
lret
mov
lods
gs
shl
dec
jl
dec
jo
xchg
sub
pop
ret
ret
pop
out
inc
orl
fildl
mov
inc
pusha
rorb
jns
ds
sub
rorb
push
jbe
jecxz
push
pop
in
popf
lret
mov
jmp
mov
and
dec
js
cmpsl
cli
mov
lahf
out
jns
push
sbb
pop
shlb
jnp
out
cwtl
ret
mov
sbb
dec
je
sub
cmp
mov
jmp
int3
insb
cmp
ja
loope
or
out
mov
push
orb
mov
push
sarb
jne
arpl
fnstcw
pop
mov
hlt
dec
mov
pop
adc
xor
push
jne
xchg
xorb
cmp
mov
mov
xchg
outsl
daa
subb
inc
fldt
mov
data16
push
cmc
faddl
or
push
popf
aaa
jmp
mov
xor
in
cmpsb
adc
test
loope
pop
das
sub
sbb
mov
cltd
xor
fisubs
push
sub
jmp
test
lock
pusha
stc
stos
pop
dec
or
push
xchg
enter
lahf
inc
jo
xchg
mov
mov
xchg
mov
ss
xchg
data16
stos
idivb
fidivl
mov
sub
mov
out
mov
xchg
xchg
fsubrl
shll
mov
and
aam
mov
clc
scas
jl
test
mov
aad
in
es
fisttpll
nop
sub
or
loopne
les
and
out
sbb
jbe
jnp
fnstsw
call
nop
pop
ja
mov
stos
int3
jmp
test
pop
jmp
dec
pop
jecxz
outsl
data16
lea
fsubr
jbe
sub
inc
adc
mov
bound
lds
mov
and
and
xchg
lea
inc
jo
imul
out
lahf
sahf
inc
dec
stos
xlat
sub
ret
rorb
adc
add
mov
xor
or
cmpb
shlb
stos
loop
int
push
out
inc
pop
lock
mov
adc
cmp
testb
and
mov
sbb
mov
push
adc
das
add
mov
xchg
movsl
mov
jbe
fwait
xchg
imul
add
fistps
jle
cmpsl
adc
jo
fdivrp
inc
gs
lret
jnp
mov
das
in
cmp
xchg
push
sti
pushf
ret
lods
xchg
bnd
and
jle
dec
xchg
hlt
pop
mov
stc
push
cld
adc
and
cmp
mov
mov
sbb
notb
xor
popa
psubusb
ret
inc
or
ds
inc
lret
orl
in
hlt
sub
or
mov
xor
dec
pop
mov
std
lret
inc
mov
stos
pop
and
inc
inc
in
push
cmp
jge
jbe
inc
sub
jns
push
jl
xor
sub
sbb
stos
daa
test
into
push
jo,pn
mov
pop
test
mov
into
test
sbb
into
mov
mov
dec
sbb
xchg
push
enter
add
int3
test
push
movswl
push
jl
pop
movsl
add
sub
add
mov
mov
mov
sbb
sbbl
push
push
push
icebp
mov
arpl
or
je
shrd
pop
cld
imul
jmp
lahf
ret
mov
add
sbb
push
and
aas
sbb
push
jns
jp
aad
jl
test
test
cli
pop
popa
push
shrl
insl
cmpsl
mov
scas
mov
daa
divl
inc
and
mov
pop
xchg
rcl
xor
mov
cmc
les
aam
addr16
xchg
push
aam
sub
jae
sub
lock
xor
ficoms
lds
adc
into
dec
dec
cltd
out
lcall
mov
fisubs
hlt
push
or
in
cwtl
and
int3
movsl
addl
int
arpl
das
lahf
ss
out
adc
fsubrl
lds
mov
dec
sub
dec
mov
pop
add
pop
jle
xor
sbb
push
pop
dec
fisttpll
sbb
divb
inc
jbe
sbbb
bound
data16
pop
pop
push
fcmovnbe
fcomp
xor
jbe
jns
daa
fisubl
inc
sub
andl
mov
ret
rcr
jle
jecxz
cs
test
xor
dec
dec
fdivl
neg
shll
gs
push
or
cmp
test
test
sbb
jmp
daa
aaa
clc
inc
lcall
insb
cs
fdivrl
out
and
aam
std
push
xor
jecxz
fimuls
and
loope
jb
inc
faddl
fistps
xchg
xor
mov
roll
dec
lcall
mov
cmpsb
or
xorb
adc
and
cld
mov
repnz
decl
cmpsl
mov
aad
jp
lahf
adc
inc
adc
mov
fwait
cld
out
or
mov
cwtl
idivl
pop
adc
xchg
data16
mov
mov
lcall
pop
inc
js
cmp
jmp
jb
arpl
sub
add
pop
cltd
enter
cmp
inc
cmp
cmpsb
sub
gs
div
lret
pop
scas
add
andb
negl
stos
scas
push
lahf
push
sub
lods
mov
inc
mov
xchg
pop
mov
push
push
js
jo
out
fstl
fmull
aam
push
xor
scas
mov
clc
jecxz
dec
test
xor
jecxz
push
stc
pop
lds
lret
jo
call
sub
loop
mov
test
mov
xchg
jno
mov
sahf
push
inc
fidivs
filds
repnz
movd
cmc
test
xlat
or
jnp
and
jae
fidivrl
dec
pop
fistpl
cmp
xor
push
rorl
jno
or
or
and
or
push
fdivr
ret
int
xchg
clc
jb
sbb
jne
xchg
add
test
movsb
or
lock
pop
cmp
mov
in
gs
add
pop
roll
daa
popa
int
in
mov
mov
scas
or
pop
in
jns
or
jbe
and
jo
inc
outsb
dec
outsb
mov
sbb
inc
xor
push
adc
mov
pop
add
ret
jge
jg
inc
and
pop
es
cld
shll
das
sub
mov
or
mull
xchg
sub
mov
mov
dec
push
cmp
inc
and
imul
inc
sub
mov
mov
lcall
call
dec
jae
fstl
mov
je
dec
pop
push
ret
aad
ss
add
ret
outsb
decb
fbld
add
push
lods
fdivs
jp
mov
je
jp
inc
or
call
mov
pop
push
cmp
push
and
lock
dec
cmp
mov
xchg
jecxz
inc
outsl
pop
or
push
in
lock
das
jb
or
xlat
loopne
imul
outsb
cli
imul
add
aaa
push
jmp
push
add
or
add
or
dec
aam
imul
imul
loop
in
mov
or
out
and
dec
pop
jl
or
test
bound
outsl
jne
and
xchg
popf
loop
in
xor
call
rclb
scas
loop
mov
lret
or
xor
imul
adc
out
push
fsub
sahf
hlt
inc
lods
out
in
out
out
sub
and
ja
arpl
xchg
jbe
jnp
ror
and
dec
std
mov
xchg
pop
rorl
cld
dec
in
fs
mov
cwtl
sarb
inc
rorb
sbb
xor
test
shlb
imul
movsl
and
aad
or
fcom
push
and
dec
out
shlb
movsb
sub
mov
repnz
lahf
dec
and
mov
aad
lods
cmp
addr16
cld
test
mov
out
outsb
bound
lret
dec
mov
jo
dec
mov
and
scas
aas
add
push
in
xchg
addr16
in
jnp
jnp
popa
sub
pop
or
shrb
or
out
or
and
push
adc
cmp
inc
inc
sub
in
lds
pop
and
ja
cmc
js
or
cli
jmp
push
sbb
mov
mov
xchg
es
and
push
xor
pop
jae
adc
lea
sbb
push
cmp
ret
clc
adc
repz
cmp
jle
out
push
xchg
jp
xchg
out
and
xchg
pop
mov
out
in
inc
loope
pushf
shll
cmc
mov
addr16
mov
stos
or
mov
clc
and
dec
xor
das
inc
xchg
and
push
in
sub
sub
pop
dec
and
jbe
inc
das
sbb
pop
add
in
push
fildl
stos
sub
lods
xchg
notb
mov
jo
iret
push
outsl
nop
cmp
xchg
stc
pop
out
ret
adc
xchg
mov
and
jae
pop
ss
fsub
lahf
push
std
push
jne
fldcw
lahf
adc
stc
pop
mov
testl
push
gs
lea
test
mov
mov
sbb
lods
push
iret
aas
mov
jne
lret
sti
mov
add
push
cmpsb
adc
aaa
xchg
fcoml
loop
test
mov
addl
and
ss
test
cltd
test
mov
mov
inc
push
xchg
jbe
and
rcll
jae
mov
daa
aam
insl
sub
fidivl
cmp
incb
push
cli
cmpsl
ss
sub
daa
insl
sarb
mov
and
scas
jns
pop
mov
int
pushf
pop
pop
mov
lcall
jle
test
adc
insl
push
out
pop
lea
mov
lcall
fs
cmp
jbe
xor
mov
sub
pop
pop
cld
sti
out
rcrb
in
dec
es
fstpl
mov
dec
stos
xor
rol
cs
out
imul
mov
lods
sahf
cld
dec
or
cmp
ja
or
mov
lds
test
xchg
mov
xchg
dec
jae
mov
or
mov
lea
js
mov
push
mov
fldenv
jbe
jae
sub
pop
jbe
mov
inc
dec
es
scas
pop
xor
int
sbb
and
push
cli
jmp
ljmp
push
push
sub
pusha
call
push
cwtl
pop
lds
sbbb
push
mov
cmp
insb
lock
and
rorb
cmp
out
rcll
pop
aas
mov
push
pop
lods
jb
fcomp
movsl
dec
fwait
out
jno
adc
hlt
mov
out
test
mov
and
fimuls
jbe,pn
jg
test
rolb
std
pop
jmp
addr16
sub
and
test
pop
sub
sbb
mov
loop
xor
daa
jg
cmp
imul
mov
out
ficompl
xor
push
xchg
sbb
fcompl
sti
cmp
inc
sar
icebp
stos
mov
and
jne
mov
jne
lret
repz
cwtl
xchg
ret
sbbl
cmp
push
mov
addb
add
jo
pop
leave
ja
cmp
stos
cmpsb
out
and
pop
pop
push
dec
mov
cli
mov
lret
popa
stos
mov
mov
xlat
repnz
inc
push
sbb
cltd
lock
mov
pop
inc
es
outsl
shr
je
inc
popa
pop
cmp
ffreep
sub
out
mov
movsb
arpl
jg
push
mov
insl
adc
and
push
shlb
stos
cmpsb
inc
add
ja
push
fs
lcall
pop
mov
loopne
cmc
sahf
rorb
insb
mov
sbb
inc
fsubrl
dec
and
test
mov
adc
mov
push
sbb
mov
sbb
mov
lahf
lea
nop
mov
sub
lods
je
shrl
sbb
imul
hlt
push
out
or
bound
popa
arpl
jp
mov
mov
cltd
fldlg2
lret
ret
sahf
xchg
les
xchg
dec
dec
ljmp
stc
xor
sbb
push
leave
add
fwait
lods
orb
pop
xlat
adc
mov
or
push
push
sub
decl
sysenter
je
mov
test
std
xchg
lret
jge
hlt
stc
inc
add
pop
stos
sarb
xchg
out
cmp
es
jo
xlat
mov
xlat
imul
sub
outsb
cmp
mov
mov
stos
or
pop
xchg
jbe
add
or
or
aas
ja
xlat
jmp
xor
jne
adc
mov
test
loope
pop
les
and
lret
cmpsb
out
dec
repz
and
jle
lret
and
out
ret
test
hlt
add
mov
and
inc
data16
mov
repnz
sub
or
pop
sbb
popf
sub
popf
push
pusha
repnz
mov
cmp
pop
pop
push
pushfw
ds
mov
push
stos
lods
sbb
out
jg
xor
dec
sub
loope
push
idivl
sub
ss
mov
arpl
sub
add
inc
pop
in
mov
inc
jecxz
sarb
stc
insb
xor
fisttpl
jno
cli
pop
imulb
mov
lcall
jmp
jg
cwtl
out
mov
out
loopne
hlt
js
fwait
mov
cmp
imul
sub
ds
push
cwtl
cmp
addl
rorl
sub
add
pushf
rcrb
arpl
mov
pop
popf
cli
test
fisubrl
push
mov
pop
fbld
es
push
sbb
test
inc
mov
hlt
mov
push
and
jno
scas
xchg
jmp
cld
pop
jecxz
adc
jae
sbb
add
lcall
cmp
aad
jnp
sbb
sub
cmp
sub
std
addr16
cmpsl
dec
or
lods
loopne
scas
gs
and
int
adc
cmp
test
pop
mov
iret
aaa
adc
add
sbbl
xor
jecxz
push
sub
out
orb
iret
xor
mov
loop
dec
movsl
dec
xor
jns
out
jg
call
test
sbb
rorb
jl
out
add
stc
jp
ret
outsl
js
or
sub
mov
in
bound
jae
sub
das
push
push
mov
addl
mov
dec
cld
jmp
adc
inc
fisubrl
outsb
rcl
push
push
xchg
les
ret
adc
jge
orl
ficompl
jns
outsb
xlat
fs
xor
mov
sbb
and
and
psrad
or
and
sbb
jmp
mov
lods
mov
lahf
jb
aam
pop
or
add
xchg
loop
enter
mov
pop
jb
popf
inc
jbe
jno
pop
xchg
push
or
or
dec
int3
cmc
dec
sub
icebp
ret
jl
pop
jge
mov
jns
arpl
imul
insl
je
mov
iret
loop
ret
and
mov
rcr
cmp
cmpb
int
fwait
adc
add
adc
stos
iret
aam
jmp
daa
bnd
in
icebp
lds
xchg
negl
cmp
out
pop
mov
jge
nop
mov
cwtl
movsb
sbb
std
xor
loop
test
hlt
repz
ret
fwait
adc
mov
ss
stos
push
pop
mov
fisubl
fwait
pop
mov
push
push
mov
push
ljmp
cmpb
sarl
mov
jp
and
sub
mov
into
mov
inc
mov
inc
mov
scas
andb
add
cld
push
in
xchg
jb
add
jno
cmp
push
sub
cmpsb
xchg
lock
add
jbe
cmc
lcall
out
ret
out
pop
sub
clc
daa
fwait
mov
xlat
test
mov
lcall
dec
fnstcw
lods
jbe
add
bound
in
lahf
xchg
mov
notb
mov
lock
stos
add
imul
mov
mov
xchg
sub
nop
test
mov
pop
push
push
xchg
call
in
popf
or
or
or
xchg
and
adc
adc
xchg
jbe
lea
pushf
cmp
mov
mov
addb
daa
mov
xor
notl
mov
or
push
jp
or
jmp
cmpsl
pop
cmp
je
test
ljmp
and
pop
and
push
shrl
jecxz
cmpl
jae
lods
adc
lahf
jl
or
daa
sub
sub
adc
jp
pop
outsl
shr
sub
pop
mov
mov
and
cwtl
push
jo
ljmp
dec
filds
repnz
scas
scas
insl
sub
fmuls
nop
xchg
fadd
dec
iret
aas
popa
ds
inc
cmc
and
adc
xor
movsb
pop
or
push
xchg
adc
repnz
in
cmp
xchg
rorb
popf
push
sahf
stos
stc
lock
repnz
std
lods
push
fcoms
jno
add
shrb
lcall
and
push
outsb
movsb
sbbb
repnz
sbb
jo
sbb
jnp
dec
mov
fwait
xchg
xchg
jne
arpl
inc
leave
inc
lea
imul
or
dec
mov
cld
mov
in
and
xchg
loopne
lods
mov
push
aas
rcl
pop
cltd
dec
mov
popa
stc
ret
stos
and
add
inc
popa
fstl
pop
lcall
xchg
test
mov
nop
mov
ffree
in
or
cmp
inc
mov
sub
dec
dec
pop
int3
lods
imul
adc
inc
out
push
aaa
dec
shlb
scas
sahf
aad
scas
pusha
mov
leave
xchg
push
repz
cmp
icebp
jg
add
icebp
lcall
mov
inc
and
mov
jne
popa
push
dec
bound
fmull
sub
int3
push
jp
jecxz
cltd
lret
mov
iret
push
pusha
or
mov
pushf
iret
lea
mov
mov
dec
outsb
cltd
cmp
and
xchg
aaa
inc
rcrl
pop
push
cwtl
xchg
in
xchg
inc
fucom
mov
adcb
in
cld
mov
jae
mov
into
verr
xor
fisubl
js
jp
fwait
sbb
cld
loop
inc
inc
aam
mov
imul
pusha
pop
ja
aas
xchg
rol
test
out
cli
add
jo
dec
mov
jns
fbstp
jle
fiadds
scas
cli
lods
mov
push
push
push
jg
push
mov
mov
push
loop
in
aaa
imul
cltd
pushf
inc
mov
mov
imul
adc
adc
jbe
xchg
jle
iret
jo
in
jo
outsb
div
lds
hlt
ds
mov
arpl
push
in
cmp
add
out
or
testl
cmp
dec
mov
xchg
and
repz
and
jecxz
fidivl
add
mov
xchg
inc
popf
pop
pop
ja
and
push
xchg
mov
sbb
xchg
enter
imul
sbb
xor
mov
aam
lods
pusha
lds
inc
mov
dec
nop
dec
or
movsb
cltd
sub
sbb
lods
nop
sub
repnz
fisubrl
ret
mov
aad
outsl
out
pop
mov
sub
ss
enter
outsb
mov
in
push
xor
insb
or
add
adc
ret
and
movsb
dec
enter
push
xchg
fcomp
inc
outsb
ret
les
xor
xchg
dec
ret
jp
add
cmpsl
xchg
adc
or
lock
push
les
and
loopne
pushf
ret
pop
fstl
js
pop
test
hlt
int
andb
sub
adc
pop
xchg
push
xor
xchg
fucomp
mov
ja
and
pop
jle
inc
xor
aas
gs
imul
test
stos
inc
shlb
sub
je
mov
push
lcall
inc
inc
les
pop
and
rolb
mov
pop
and
pop
xor
xchg
push
fsubrs
notb
bound
sbb
sub
insb
add
adcb
cs
repnz
cmpsl
dec
ljmp
cmp
mov
jno
nop
es
popa
sub
sub
adc
sub
test
addr16
repz
jns
es
sub
xchg
enter
lea
sub
mov
adc
sbb
movsb
xor
push
sub
push
push
dec
jae
mov
jbe
adc
aam
call
in
dec
insl
mov
push
lock
gs
dec
cmp
cltd
movsl
aam
aas
pusha
xchg
cmp
xchg
add
out
inc
test
pop
out
inc
das
rcrb
out
stos
arpl
cmpsl
adc
jo
jno
mov
ss
and
fcoml
shrl
clc
gs
incl
or
test
sarl
inc
js
cwtl
pushf
sarl
jmp
aad
add
add
mov
or
adc
adc
fists
fldt
clc
lods
movsl
jl
stos
cld
stos
loope
cwtl
pop
push
cmp
sub
cmpsb
cmc
jnp,pn
sbb
test
sbb
sahf
mov
pop
loope,pn
repz
lods
mov
mov
cwtl
out
mov
js
shrb
add
repnz
xchg
mov
fidivl
mov
fs
orl
imul
sbb
pop
movsl
inc
push
test
sub
dec
les
mov
jb
movsb
inc
dec
out
repz
loop
fwait
add
ss
cmpsb
jmp
lea
rolb
mov
mov
push
nop
lods
or
sbb
add
data16
xchg
jp
scas
rcl
sbb
stos
loope
cld
enter
xlat
sbb
dec
repnz
xor
mov
setp
out
loope
xor
and
push
push
xchg
imul
outsb
or
jecxz
dec
dec
loope
xchg
sbb
xchg
imul
es
and
stos
sub
ret
mov
mov
fcompl
stc
imul
mov
mov
cmp
xor
lret
das
inc
mov
addl
outsb
clc
add
jnp
mov
or
jecxz
movsb
test
movsl
cmp
add
adc
imul
push
mov
call
and
mov
data16
outsl
and
or
scas
incb
inc
insl
daa
out
inc
js
push
int3
dec
lcall
mov
push
scas
out
and
pop
mov
stc
ret
adc
and
push
mov
jg
push
test
cmp
stos
ss
shrl
stc
mov
ss
xor
sbb
fisttpl
xchg
sbb
shrl
jmp
xchg
stos
jecxz
rdtsc
frstor
jbe
inc
sbb
inc
fisttpl
sub
into
mov
mull
xor
cmpsl
mov
push
iret
mov
fsts
sbb
mov
sub
xchg
adc
xor
push
outsl
out
test
mov
adc
push
repz
push
lods
aam
mov
sub
xlat
jne
sub
or
in
jle
rcrb
mov
aam
cltd
jnp
aas
pop
xchg
adc
scas
xor
xchg
push
cmc
xchg
rcr
cmp
insb
sahf
sub
pop
loope
ljmp
mov
mov
add
adc
xchg
adc
adc
push
add
xchg
lahf
sub
pop
imul
pop
jnp
dec
movq
sbb
imul
nop
in
mov
or
dec
and
dec
mov
data16
js
mov
fld
add
xchg
test
adcb
xor
std
bound
push
movl
test
imul
bound
cmp
lods
sub
test
and
push
xor
insl
leave
movsb
data16
lea
cmpsb
js
or
and
cmp
fstl
mov
daa
and
pushf
lahf
inc
outsb
ret
xor
jle
xor
xchg
pop
sub
jo
test
push
fbstp
cltd
push
mov
xchg
jb
dec
dec
lods
dec
roll
mov
push
mov
push
jl
adc
hlt
loopne
cmp
add
movsb
js
icebp
cmp
mov
inc
test
mov
and
cmpsb
popf
cmpl
jmp
pop
out
mov
add
inc
orl
xchg
jmp
dec
push
iret
push
arpl
jecxz
mov
rorb
add
add
push
cmpl
jg
cmp
aaa
nop
out
cmp
mov
stos
out
and
jl
xchg
in
add
jbe
sti
aaa
stc
ljmp
icebp
movsl
xchg
in
js
outsb
push
dec
sub
or
fsts
aad
mov
push
aaa
pop
iret
xor
mov
pop
cmc
leave
xchg
fistl
into
xor
hlt
dec
xchg
cmp
shl
dec
jns
rcrb
fiaddl
jb
fmuls
movsb
incb
dec
mulb
sarb
and
rorb
loope
xchg
sub
leave
xor
jns
mov
loope
sbb
addr16
subl
scas
dec
scas
mov
mov
mov
orl
xor
sbb
xchg
std
cld
xchg
jnp
adc
xchg
cmp
lds
pop
sbb
cwtl
adc
mov
aad
das
cmpsl
je
loop
pop
cli
mov
cmp
xlat
fwait
jo
outsb
pop
pop
fwait
in
and
add
xlat
out
nop
outsl
cmp
and
push
cmp
mov
daa
pop
jne
xchg
or
mov
test
divb
add
and
pop
inc
jbe
push
rol
test
repnz
xchg
insb
inc
aam
andb
xchg
xchg
std
movsb
out
outsb
ljmp
pop
cmpsb
and
add
shlb
bound
in
rcl
sbb
enter
dec
jo
lahf
dec
sbbb
or
insl
fimull
pop
lret
movsb
and
push
insl
or
inc
sub
cmp
lahf
mov
cs
sti
xor
push
lahf
pop
or
data16
fmuls
ds
gs
or
pop
fiaddl
fmuls
mov
and
mov
addr16
add
pushf
loop
cwtl
sub
cltd
clc
dec
sbb
into
ret
jg
cmc
sub
xchg
push
mov
stos
aas
adc
sub
jg
lea
pop
xorb
cld
push
or
mov
mov
mov
aam
stc
mov
in
cld
mov
fldpi
cmpsb
repnz
ret
push
inc
dec
dec
mov
sbbb
addb
cmp
pop
mov
pop
and
mov
adc
dec
popa
dec
jmp
xor
stos
out
aam
cmp
push
movb
push
cld
push
or
sbb
push
jb
mov
add
lods
lea
xchg
int
mov
sbb
icebp
and
xchg
xchg
fidivl
adc
fistpl
lods
clc
ret
add
imul
out
fs
mov
adc
out
out
lds
jmp
shl
outsl
out
push
inc
mov
xchg
in
lcall
xchg
outsl
sahf
dec
jb
icebp
mov
insb
jl
jmp
or
aaa
dec
std
fldcw
xchg
inc
mov
push
insb
pop
ljmp
cmp
push
pop
cltd
inc
inc
loop
cmp
mov
imulb
or
xchg
push
mov
pop
fwait
inc
cltd
roll
pop
add
mulb
repnz
std
mov
mov
cmp
cld
pop
divl
mov
fstp
ss
dec
aaa
enter
xchg
jmp
push
sbbl
sbb
loopne
mov
insb
ret
or
lcall
loop
fimuls
aas
or
mov
pop
call
mov
fmulp
mov
mov
je
mov
insl
outsl
leave
mov
iret
loop
push
mov
xchg
loop
or
mov
sbb
mov
mov
hlt
push
cmp
cs
pop
stos
hlt
adc
xor
xchg
incl
imul
call
push
fcompl
sub
pop
orb
ret
xchg
iret
ja
fidivs
imul
cmp
shl
imul
rorb
ret
into
loop
sarl
xchg
jp
xchg
dec
dec
inc
rcll
test
pushl
cli
outsb
int
adc
mov
mov
rol
in
cmpsb
imul
out
jae
imul
jns
out
movsl
out
pop
pop
jb
punpcklbw
pop
inc
std
notb
subb
mov
jbe
mov
adc
jp
push
add
movsb
inc
mov
scas
daa
mov
fmull
rcrb
outsb
bound
ds
xchg
loope
inc
push
sbb
xor
shll
inc
push
and
sub
adc
lds
pop
sub
mov
dec
sub
aaa
cmp
pop
push
aad
add
sahf
xchg
imul
dec
scas
cmc
dec
sbb
out
mov
cwtl
jg
cmp
js
mov
ret
push
sub
cltd
les
cmp
jecxz
lods
ljmp
mov
and
shlb
inc
mov
mov
inc
mov
dec
loopne
aas
dec
cli
push
lds
repnz
mov
xor
mov
scas
inc
call
push
and
fs
cmp
aas
jmp
jbe
lods
jmp
mov
dec
mov
dec
jbe
or
frstor
push
sbb
loop
xchg
mov
rorl
push
fwait
xchg
sbb
mov
mov
data16
pop
outsb
sbb
push
inc
insb
adc
jae
cmp
jb
out
dec
sub
jl
jb
lret
fs
insl
xchg
inc
sub
test
into
mov
xchg
inc
mov
std
icebp
xchg
jae
cmp
mov
shrb
mov
in
inc
pusha
fwait
repz
mov
adc
idiv
jp
pop
inc
or
or
inc
xor
fistps
pusha
call
mov
lahf
adc
mov
mov
xchg
pop
jnp
add
or
sub
and
sbb
cmc
addr16
ss
adc
cmp
inc
sub
in
stos
ljmp
mov
dec
mov
pusha
mov
and
mov
or
popf
mov
pop
cli
test
xlat
nop
inc
inc
xor
mov
xchg
mov
out
push
out
cmpsb
arpl
xchg
adcl
out
pop
pop
push
or
aam
xchg
jno
lahf
push
add
cmp
sti
ficompl
fmuls
dec
sbb
loopne
ss
mov
push
cwtl
inc
cmpsb
jmp
xchg
jge
adc
push
daa
cmp
outsb
dec
add
dec
jns
fstpl
push
gs
sub
loopne
mov
jmp
push
push
mov
xor
inc
in
fldpi
pop
sti
inc
es
aad
or
jns
push
rorl
adc
jge
stos
sahf
jns
sbb
les
mov
xchg
ds
cli
sbb
jl
test
push
sbb
cwtl
std
or
inc
pusha
shll
xor
sahf
je
mov
iret
lret
rcrb
cltd
sbb
shll
dec
popa
push
lods
and
pop
push
aad
lods
jecxz
cltd
stos
ret
das
mov
jge
or
fdivrs
xor
push
push
outsl
mov
xchg
sbb
stos
cmp
out
out
xchg
dec
xchg
xchg
js
aaa
jg
sar
cmp
in
fs
xchg
dec
out
movsb
jecxz
fisubrs
in
in
je
fidivs
push
mov
cld
inc
in
adc
push
sbb
andb
loop
pop
in
jg
xor
jnp
add
in
and
inc
xchg
fimuls
lcall
push
sahf
xlat
adc
clc
dec
dec
ljmp
push
sbb
mov
and
push
mov
xor
pop
adc
jbe
sub
mov
ret
adc
inc
inc
adc
mov
cmp
js
dec
sbb
daa
xor
add
shrl
bound
mov
add
aaa
repnz
movsl
push
add
movsl
ljmp
clc
ss
bound
lods
and
mov
mov
das
popa
inc
repnz
pushf
push
clc
xchg
and
jmp
mov
movsl
cmp
decb
test
xor
pop
movsl
mov
repz
insl
pop
xchg
or
in
out
and
int
and
xor
mov
xor
lock
and
ja
pop
loope
stos
dec
mov
scas
scas
or
adc
out
sahf
xchg
sbb
pop
pop
fs
xchg
in
sbb
ret
adc
call
jnp
cmp
call
out
sub
jo
xchg
mov
cli
test
fcom
adc
jle
jge
movsl
dec
repz
or
or
incb
sub
test
in
jo
mov
into
popf
sbb
movsl
push
jnp
mov
arpl
cmpsl
mov
sti
jno
js
and
adcb
pop
mov
and
adc
sub
sbb
sbb
jns
call
dec
xlat
jbe
mov
loop
cmp
and
dec
insl
cld
jb
adc
stos
addl
ljmp
push
mov
jns
jae
xor
jmp
mov
xor
push
aad
mov
iret
fs
sbb
dec
mov
and
popa
in
gs
jle
mov
and
xorb
adc
clc
cli
aas
and
mov
jb
sahf
fiadds
fldcw
les
push
in
push
cmp
das
outsb
adc
in
lds
sub
jbe
stc
in
and
aam
out
jge
pop
xchg
mov
vmread
into
sarb
mov
or
cmpsl
or
add
daa
es
cmc
mov
mov
fsubr
loopne
outsl
jb
mov
cmpsb
dec
pop
sti
xlat
enter
mov
mov
je
xor
and
jae,pn
test
mov
xor
jmp
pop
mov
add
and
mov
rorb
cmp
nop
add
mov
rcll
push
xlat
push
daa
pop
fdivl
push
ljmp
mov
push
mov
pop
sbb
xlat
and
mov
and
xchg
push
cmpsl
int3
test
mov
jge
addr16
jg
fmull
or
cmp
push
sti
cmp
cmp
push
xor
mov
adc
rcll
xchg
lcall
call
pop
cmp
mov
or
inc
rcrl
jg
out
shrl
and
imul
adc
push
xor
xor
mov
jo
jle
fimull
inc
dec
aas
pop
add
xor
cmp
fcomps
push
shll
daa
fistps
xor
movsl
inc
iret
lods
test
cld
shll
sub
lcall
js
into
mov
add
data16
mov
jp
dec
mov
sbb
int
mov
jmp
aam
daa
pushf
dec
and
dec
jmp
mov
out
xor
add
les
dec
sub
jp
in
inc
cmp
adc
in
les
adc
dec
sbbb
jg
xor
ljmp
sub
int3
inc
push
in
neg
sub
insl
inc
sahf
cltd
sub
xor
aam
leave
mov
mov
cmpsl
lahf
mov
xchg
nop
out
mov
push
push
ja
jl
sti
jae
push
das
push
nop
add
loopne
jae
gs
and
imul
mov
jge
xchg
out
iret
insb
push
in
aam
mov
xadd
sti
jmp
mov
mov
xor
fldt
addb
sub
dec
xchg
jecxz
mov
popa
sahf
cmp
inc
int
xor
sbb
int3
sbb
pop
mov
std
je
fildl
ret
jo
or
outsl
mov
rcrb
cld
outsb
js
hlt
xchg
lcall
xchg
mov
in
lcall
into
mov
jno
inc
pop
sahf
sub
sub
fucomi
sbb
dec
dec
int
cmpsb
xor
push
aad
shll
adc
mov
dec
dec
hlt
shlb
jge
cmp
call
or
xchg
fwait
test
fdivrl
cmp
pop
pusha
stos
pop
enter
xlat
add
mov
xchg
ds
and
jp
in
popf
lret
or
cmpsl
cmovle
dec
jmp
jge
sub
ds
test
sub
aaa
cmp
aad
adc
push
mov
xor
inc
mov
enter
rolb
lahf
jl
repz
mov
push
out
ljmp
xor
stos
jl
inc
mov
xchg
jge
push
sub
neg
push
ret
js
dec
pop
inc
push
and
std
sarl
cli
mov
inc
and
dec
or
adc
add
mov
test
popa
clc
shll
push
ss
dec
pushf
sub
pop
das
imul
mov
test
test
push
lods
cmpsl
pop
xor
add
jg
cmp
mov
mov
mov
cmpsl
testl
aas
cmpsb
int
pop
cld
addr16
adc
ljmp
xor
movsl
insl
nop
cmp
sbb
imul
dec
fmuls
and
pushf
mov
icebp
jp
lret
sub
add
loop
sub
pop
and
jg
xor
mov
mov
mov
ja
pop
cmpsl
xor
cltd
xchg
cltd
insl
jecxz
jp
lods
test
xchg
add
lods
and
push
test
sub
fs
adc
into
pop
ja
into
aam
push
adc
lret
jo
lahf
outsl
cmp
cld
cmc
hlt
loope
xchg
adc
push
fwait
xor
cmc
repnz
adc
xchg
sbb
hlt
out
push
scas
data16
filds
mov
sbb
jecxz
xorb
out
cmpsb
jl
and
les
pop
fbld
pop
push
jbe
push
push
adc
jne
in
xor
clc
mov
adc
aam
push
inc
or
mov
cltd
or
xor
xchg
imul
and
outsb
arpl
mov
inc
push
pushf
and
lea
inc
dec
sub
cwtl
xor
pushf
and
cs
jp
je
mov
aam
mov
subl
pop
cmp
repz
dec
test
push
ja
mov
sbb
cwtl
push
addl
fstp
popf
rcr
xor
adc
mov
insl
outsb
xor
lock
sti
insl
lock
push
jmp
fisubs
bound
and
push
testb
repnz
mov
rcr
xor
cmp
cmp
mov
call
mov
dec
jmp
cmpsl
test
or
mov
jo
arpl
inc
loop
sbb
std
pushf
testb
mov
in
es
push
pop
ja
xchg
popf
jne
mov
cmp
add
sub
dec
cs
repz
cmp
jbe
imul
mov
mov
pop
mov
or
js
mov
int
sub
out
xchg
adc
int3
inc
ljmp
or
cmpsb
hlt
ljmp
xchg
mov
test
sti
movb
idivl
xor
adc
xor
enter
nop
sub
jo
shrl
pop
sbb
push
xchg
notl
cs
daa
shrl
js
push
fs
fistl
mov
xlat
sub
inc
adc
negl
sbb
inc
dec
add
push
xor
add
xchg
js
and
loopne
cli
bound
sbb
repz
cwtl
sub
insb
add
jp
xor
mov
dec
jo
inc
mov
int
xchg
add
jge
inc
dec
dec
test
or
std
repz
mov
sti
lods
jp
mov
test
notl
and
and
push
xor
push
sbb
cmpsl
nop
xor
dec
inc
xor
mov
pop
cmp
cmp
adc
call
cmpsl
mov
lret
cmpsl
stos
jne
bound
adc
mov
rcr
call
and
test
or
cld
cmp
cmp
pop
test
pop
adc
or
mov
xor
add
sub
imull
push
pop
xor
dec
xor
ljmp
push
pop
stos
ret
cmp
movsb
test
add
jnp
insb
inc
jnp
push
cltd
lcall
das
inc
sarl
lock
aas
in
jp
and
daa
sarb
jge
push
fsub
ljmp
inc
or
fwait
dec
lcall
mov
push
lcall
cwtl
jl
in
fbstp
jb
arpl
lock
clc
push
js
jnp
jb
jge
xor
ficompl
cmc
push
xor
call
add
xor
stos
lea
aam
roll
add
mov
sbb
sbb
mov
pusha
fnstcw
cmp
fldlg2
jge
mov
fs
jecxz
adcb
pop
or
pop
fisubl
cld
ret
inc
aaa
pop
stos
ljmp
dec
and
xchg
add
mov
lret
or
sub
stos
lcall
xor
outsb
pop
and
add
xorl
dec
jae
leave
inc
lock
nop
pop
sub
xchg
dec
jnp
sahf
mov
xchg
movsl
mov
loope
inc
dec
xchg
cmpsb
fadds
pop
dec
add
sub
mov
jle
or
pop
repz
fsts
lods
dec
cmpsl
dec
cmp
cmpsl
aam
stos
push
push
out
in
ja
rcrl
outsb
add
andb
in
mov
pop
mov
dec
leave
ljmp
add
jns
aaa
push
mov
push
neg
and
pop
out
imul
inc
sbb
inc
add
int3
mov
std
push
cmp
adc
cmpsl
jbe
arpl
int3
fisubl
in
add
mov
cmpsl
sub
push
int
push
dec
jp
gs
xchg
out
mov
push
mov
cmc
mov
xor
in
lret
das
int
fdiv
cmp
mov
xchg
jne
cwtl
dec
orl
fcmovnu
mov
pop
and
push
lret
mov
cmpsl
stos
test
lea
mov
pushf
sti
in
cltd
jbe
int
cmpl
push
cmpsb
das
pop
repnz
push
sbb
mov
inc
ret
or
in
rorb
sub
test
xchg
out
ljmp
jmp
rclb
jp
push
add
mov
sbb
fldcw
and
imulb
xor
push
jnp
inc
into
or
ja
mov
daa
movsb
adc
ja
daa
cld
arpl
repz
or
mov
out
int
add
outsb
or
xchg
push
in
dec
test
mov
or
iret
pop
lods
dec
and
sbb
mov
das
fptan
inc
inc
xlat
jae
outsl
aas
pop
mov
adc
sub
sbb
cmp
xchg
cs
inc
mov
mov
adc
addr16
lock
aas
sti
icebp
mov
pop
xchg
jne
jb
fidivl
inc
hlt
xchg
loope
dec
movsl
cmc
sbb
jge
cs
mov
divl
and
xchg
ja
lahf
dec
mov
daa
addb
in
sar
sbb
scas
lds
addr16
cmpl
lds
push
cmp
jne
repz
std
test
mov
sahf
fscale
xchg
sbb
mov
sub
fwait
fs
mov
pop
mov
xchg
dec
stos
pop
adc
mov
add
sahf
call
push
popa
adc
push
sub
xchg
into
int3
fs
sub
fimuls
adc
ret
sub
sub
and
loope
mov
dec
mov
add
imul
sbb
xchg
mulb
aam
xchg
leave
roll
fimuls
outsl
jle
icebp
sub
mov
jno
and
mov
push
xchg
imul
aaa
cld
negb
mov
testl
rol
dec
call
icebp
add
jbe
xor
dec
cwtl
repz
arpl
sbb
cmp
addr16
mov
in
in
adc
mov
sub
mov
insb
jmp
cltd
cmc
and
add
fisubrs
cld
out
insl
cmp
dec
das
ret
mov
pusha
adc
mov
xlat
imul
mov
mov
fs
push
cwtl
stos
arpl
test
ret
sahf
cmc
xchg
jb
dec
out
mull
dec
js
out
adc
inc
maxps
mov
fwait
lret
inc
and
sub
mov
jge
je
adc
jno
aad
pop
aad
sub
sbb
lahf
jno
arpl
jg
hlt
mov
cltd
pop
std
sarl
divb
pop
push
ljmp
loop
dec
lock
aad
push
inc
jge
inc
stos
xchg
subb
jbe
pop
clc
in
sti
lcall
mov
sahf
test
xchg
and
inc
jo
stos
arpl
test
cmp
or
push
or
push
stc
sbb
stc
and
out
cwtl
out
mov
inc
jp
xchg
scas
or
xchg
in
ret
inc
mov
cwtl
pop
test
sub
xor
jae
sbb
imulb
or
clc
stc
out
push
push
loop
inc
pop
pushf
mov
mov
out
xor
adc
xlat
sbb
fidivrl
xchg
ret
jb
mov
cltd
inc
mov
sub
or
mov
ds
sti
add
xchg
adc
fisttps
cmp
rolb
ret
mov
mov
lahf
dec
mov
mov
lret
fildll
jno
shlb
push
xchg
xchg
arpl
arpl
dec
pushw
repnz
imul
xchg
dec
xchg
jo
lret
pop
add
cmp
stos
out
xor
insb
xchg
lcall
add
cmp
sbb
and
sbb
iret
or
xor
pop
jbe
rclb
push
sbb
idiv
lods
jmp
out
pop
adc
jecxz
movsl
ror
push
mov
mov
fsubrs
push
jo
push
pop
stc
loope
mov
les
xchg
movsl
xchg
push
subb
jmp
mov
mov
outsl
xchg
loop
andb
arpl
mov
dec
jne
lds
ja
push
scas
or
mov
mov
insl
js
add
adc
fsubrl
cmp
add
ja
dec
orl
add
fs
push
push
nop
jmp
sbb
jmp
out
cmpb
pop
mov
cwtl
sbb
imul
orb
setle
jae
call
sbb
outsl
pop
push
js
mov
in
mov
or
insl
mov
sahf
lret
dec
pop
loop
xor
xor
mov
rorl
pop
fists
aam
roll
adc
scas
test
push
ficomps
cmpb
mov
das
dec
daa
xchg
rclb
nop
out
out
ljmp
push
out
cs
dec
adc
cld
add
inc
mov
outsb
cmp
test
mov
pop
pop
and
call
add
push
ret
dec
gs
inc
arpl
dec
loop
cli
push
out
or
pop
ja
mov
mov
push
jge
mov
rcl
test
and
mov
xor
pop
dec
rcll
ret
fwait
add
test
jnp
ljmp
mov
push
stos
adc
cmp
jmp
mov
jle
mov
xor
add
outsl
add
out
xor
add
xor
add
fdivl
aad
loopne
dec
sub
jns
rclb
mov
lods
and
lods
xchg
cmp
xchg
or
cmp
mov
sahf
jmp
iret
movsb
cwtl
or
sub
test
xchg
xor
dec
cmp
call
test
xchg
repz
dec
mov
gs
inc
repnz
sbb
adc
push
xchg
mov
addr16
pushf
dec
xchg
dec
mov
push
xchg
push
or
push
xchg
insl
insb
sub
jb
mov
je
ret
cmpb
mov
pop
adc
push
call
test
addb
movsl
popa
pop
repz
inc
pop
ret
xor
pop
fcomps
or
icebp
test
cmp
xchg
ss
pushf
inc
pusha
test
mov
mov
imul
popa
mov
loopne
or
insb
in
mov
js
jno
les
pop
gs
jns
movsl
sub
leave
in
aas
int
and
icebp
pop
mov
in
jmp
jnp
iret
pop
cltd
jmp
cmc
addr16
jg
fs
xlat
cmpsb
adc
and
pop
pop
cmp
out
dec
mov
into
push
push
scas
into
fwait
push
aam
les
mov
mov
cmp
or
push
mov
nop
data16
das
sbb
mov
push
inc
mov
sti
push
js
xchg
lret
aam
sbb
add
push
adc
jbe
mov
enter
movsb
mov
dec
add
pop
mov
pushf
insl
in
sbb
outsl
into
xchg
mov
xor
lock
sbbl
in
push
repz
cs
mov
mov
adc
or
scas
test
jmp
jp
in
repnz
fstps
push
push
sahf
jecxz
insb
jb
pushl
cmp
in
xchg
pop
pop
push
add
ljmp
adc
rclb
push
cmp
or
repnz
pop
iret
ljmp
aam
int3
mov
sub
xchg
or
dec
outsl
mov
pusha
outsb
xor
mov
aam
mov
push
divb
rolb
dec
push
adcb
sub
jb
xchg
dec
push
ret
int
lcall
mov
gs
jb
lea
cmc
xchg
jo
js
outsb
push
sbb
cmp
sbb
jne
es
jb
or
or
mov
inc
mov
lret
dec
xor
jecxz
gs
pop
fisubrl
insl
outsl
add
jl
fldl
xor
add
movsb
jmp
pop
outsl
pop
lods
push
jl
dec
inc
dec
jg
insb
adc
loopne
cmp
cmp
movsl
aaa
addr16
insb
and
mov
push
mov
cli
mov
jge
xchg
xor
jmp
ja
mov
scas
jecxz
test
xor
push
jg
and
xor
pop
cmp
and
sbb
out
mov
cmp
repnz
stc
arpl
xor
out
ljmp
es
and
pop
mov
mov
add
ljmp
inc
ss
cmp
mov
cmc
cltd
ret
das
or
sub
out
mov
loopne
fistps
outsb
dec
fisubrs
leave
mov
lahf
out
rorl
mov
popf
aaa
movsb
push
leave
jg
in
mov
jne
sbb
push
in
xchg
js
mov
in
repz
imull
dec
out
mov
shll
sub
test
inc
pop
testl
or
push
mov
out
cmp
gs
popa
sbb
inc
jl
icebp
rolb
hlt
jge
mov
in
call
push
sbbl
push
sbb
test
mov
je
scas
sub
imul
ds
enter
popf
push
loopne
out
sub
imul
popa
dec
add
inc
movsl
mov
cltd
es
subb
xchg
enter
dec
loopne
icebp
mov
movsl
int3
xor
add
or
mov
cwtl
xor
repnz
in
xor
cmp
mov
shll
arpl
mov
mov
lahf
mov
in
jmp
loop
mov
sarl
mov
popf
push
push
cwtl
inc
mov
in
sbb
pop
xchg
lea
or
cmpsl
sub
sar
xchg
popf
adc
aam
andl
stc
test
rcll
mov
push
outsl
xchg
lods
das
push
ljmp
shl
in
dec
into
aas
pop
and
mov
sarb
jno
sbb
cltd
jae
mov
int
jecxz
push
mov
jbe
add
and
shl
xchg
aam
pusha
ret
xchg
fcomp
les
mov
cli
lret
mov
xchg
leave
iret
pop
js
stos
imulb
fmull
daa
or
inc
or
lahf
and
xchg
push
or
push
jge
inc
sarl
dec
push
sub
aam
popa
mov
mov
outsl
stos
outsb
ljmp
add
movsb
mov
and
ret
inc
xchg
mov
in
add
stos
stos
push
add
stos
stos
js
loop
pop
rcrb
mov
testb
flds
mov
sub
aaa
fisubrl
into
xchg
cmp
mov
adc
inc
jbe
xor
mov
mov
xchg
popa
add
push
xchg
push
sub
jge
jge
arpl
fiaddl
scas
jne
or
and
stos
sahf
jmp
nop
mov
lods
adc
aad
je
jnp
rolb
mov
jg
or
inc
xchg
mov
mov
lcall
ss
lcall
and
in
mov
xchg
subb
or
mov
inc
and
and
mov
fidivrl
lds
in
push
arpl
arpl
mov
mov
pop
and
cmovne
dec
in
stos
push
sbb
cmpsb
roll
cld
aad
pop
push
sbb
sbb
jg
cmp
mov
adc
mov
stc
jb
push
hlt
cs
stc
aas
cmpsl
xlat
jl
push
cld
out
sub
mov
rolb
in
inc
inc
popa
test
sub
mov
jb
sbb
xor
pop
push
xchg
lea
jns
aaa
movsl
insb
enter
imul
out
lea
repnz
shll
lods
sbbb
mov
in
or
jne
in
scas
mov
movsl
mov
mov
mov
test
lret
sub
mov
cmpsl
stos
xor
fimuls
add
sbbl
idivl
mov
mov
imul
mov
dec
lahf
in
add
push
mov
xlat
rcll
cmp
fdivrs
push
or
aad
mov
sbb
adc
aaa
sub
das
iret
ret
test
add
push
dec
cmp
mov
adc
xchg
push
push
loop
and
adcb
pop
ja
jno
lcall
xchg
mov
and
pop
loopne
sub
aaa
jg
mov
lods
cmpsl
or
lcall
pop
add
sti
and
lret
and
push
arpl
fs
repnz
jge
sub
mov
dec
cmpsl
lret
loopne
inc
in
mov
jb
adc
xor
xor
add
mov
mov
std
xor
gs
shll
xlat
mov
sarl
cmpsb
pop
xor
mov
dec
push
mov
add
add
cwtl
add
scas
cmpb
mov
fs
ret
sbb
dec
test
sub
or
addr16
xchg
inc
in
icebp
ja
xchg
inc
cmp
mov
pop
lods
xorl
aas
mov
and
inc
aaa
dec
int
lea
lcall
jmp
popa
inc
add
pop
sti
sub
data16
or
add
xor
pop
jne
stos
leave
mov
insl
pop
repz
rcl
sarb
subb
aas
popa
mov
mov
imul
push
adc
bnd
insl
mov
adc
mov
adc
xchg
lcall
mull
adc
pop
pop
adc
jbe
add
enter
or
out
int
pop
sub
mov
mov
mov
sub
push
pop
cmpsl
lcall
sbb
aaa
insb
push
orl
cmp
repnz
lret
dec
sub
testb
xchg
js
arpl
dec
loop
and
jbe
add
rorl
jae
xor
jne
vmovupd
popa
lods
rcrb
cs
mov
enter
jno
mov
fstl
mov
gs
fbld
inc
dec
cmp
mov
pop
push
stc
mov
cmp
xor
ret
test
cmp
aam
outsl
mov
ret
bound
push
mov
pop
cwtl
and
jb
mov
jns
xchg
dec
psubusb
jb
daa
sub
jbe
movsl
mov
jle
jmp
cmp
sbb
push
aam
cltd
movsl
popf
sub
xor
mov
aas
pop
stc
repnz
jb
pop
mov
nop
daa
push
loop
or
lret
out
icebp
cmp
fwait
mov
xchg
push
pop
inc
arpl
sbb
add
and
cmc
adc
mov
or
sub
mov
mov
rcl
repz
or
jmp
add
int3
fdivs
push
cmp
pop
add
add
fldenv
mov
outsl
into
sbb
repz
jg
jno
outsl
daa
jp
mov
add
cli
cld
ds
loope
lds
add
jnp
data16
adc
pop
push
ret
les
sbb
cmpsl
call
push
add
ret
gs
ja
mov
pop
iret
xchg
add
cmp
fcmovb
pop
cwtl
test
dec
xchg
movsb
add
xor
fcomip
xchg
mov
push
cmc
mov
jb
mov
aad
dec
sbb
xchg
inc
lret
fiadds
push
cmpsl
outsb
inc
dec
pop
xchg
bound
mov
mov
or
sbb
xchg
arpl
push
xor
add
push
dec
in
lods
loope
cmc
pop
shll
cltd
cs
ror
jno
sbb
xchg
lock
or
arpl
rcrb
add
sbb
cmp
xor
inc
or
cmp
add
sahf
std
jle
dec
xchg
fidivl
push
jp
sub
shlb
adc
iret
push
loopne
adc
xchg
popa
sti
mov
sbb
out
push
aas
push
cmpsb
lahf
dec
fcom
push
mov
cmpsb
sbb
popa
dec
mov
push
xchg
push
mov
jbe
mov
faddl
das
adc
sub
pop
mov
testl
mov
fsubl
or
mov
lock
inc
ret
push
dec
or
mov
pop
fmulp
inc
jecxz
sub
xor
cs
sbb
cwtd
mull
call
test
out
repz
jb
imul
push
test
jmp
repz
pop
pop
notb
addb
mov
mov
mov
fnstenv
fs
popa
jp
loop
ss
ret
sti
lea
jne
insl
dec
pop
xchg
xlat
fcompl
pop
xorl
jg
fs
or
dec
je
roll
xchg
add
jae
sub
out
mov
insb
mov
int
pushf
dec
xchg
add
in
data16
mov
xchg
loopne
shrb
mov
gs
cmc
mov
xchg
jne
or
loop
sub
cld
xor
lds
cmp
lods
jmp
sti
int
sbb
ret
out
iret
jae
mov
sub
stos
sbb
cmpsb
icebp
push
cmp
scas
out
jmp
cmp
xchg
push
call
into
int
add
ret
imul
in
dec
xorl
daa
add
sub
andl
sub
or
and
push
or
bound
sbb
sbb
out
pop
clc
fistpl
push
dec
xchg
mov
ret
sub
insb
sbb
pop
jmp
push
test
push
mov
add
mov
cltd
outsb
stos
push
sbb
loope
ja
in
mov
std
popa
cld
mov
cli
push
adc
dec
add
xorb
add
push
cmpsl
push
push
sbb
adc
scas
xlat
icebp
stos
pop
test
lahf
mov
jb
pop
jbe
cmc
xor
outsb
mov
pop
shrb
outsb
gs
test
insb
imul
fs
push
mov
sti
bound
push
mov
push
mov
sbb
inc
adc
sbb
or
lods
push
sub
cmpsl
shrl
xorb
outsb
mov
push
sbb
mov
xchg
fstpl
dec
lea
fs
inc
push
push
icebp
inc
dec
pop
fs
mov
mov
adc
out
mov
mov
das
adc
jge
scas
xchg
hlt
cld
fsts
clc
cmp
and
lret
pop
mov
dec
les
jge
xchg
and
inc
jmp
sub
sbb
dec
add
cs
arpl
sbb
dec
test
push
jno
in
popf
ficoms
jo
add
adc
sub
jnp
enter
loope
mov
cmp
sub
mov
int3
cmp
mov
pop
or
jae
xchg
out
cs
xchg
sbb
pop
fwait
or
jl
or
xchg
sbb
mov
or
fst
fistps
lods
adc
sbb
movsl
es
std
pop
sar
mov
push
fcomps
lret
orb
mov
pop
ljmp
mov
movsl
jg
cmp
push
ret
aam
out
out
lret
push
out
lea
inc
test
cmp
outsl
push
lods
popa
fbld
push
test
inc
or
fcoml
data16
sti
jae
push
jns
out
inc
xchg
test
dec
shll
sbb
in
xchg
loopne
ss
icebp
and
push
jp
xor
sbb
fisubrl
icebp
dec
mov
mov
mov
lods
dec
lret
movsb
repnz
call
insb
cld
test
inc
lea
iret
push
fistps
stos
cwtl
or
ljmp
add
push
rorb
mov
jno
jb
in
hlt
sub
sub
mov
test
fcompl
mov
push
enter
orb
add
cli
jbe
xor
xor
daa
and
pop
ljmp
data16
sub
dec
es
and
lods
xchg
stc
adc
call
jmp
popl
and
popf
add
inc
xchg
dec
aad
push
push
rcll
adc
mov
pop
sub
sarb
or
mov
jl
mov
repnz
xchg
dec
into
dec
jmp
and
shll
notl
popf
fcomps
aaa
cmpsb
xchg
sbb
jns
cmp
jge
cmp
cld
xchg
jg
adc
inc
xchg
inc
pop
ret
jo
push
loop
mov
sub
orl
shrb
cmp
or
jmp
push
in
outsb
and
pop
pop
fcmovnu
dec
je
mov
pop
fdivl
daa
cmc
out
jno
jae
dec
int
xlat
cmp
jne
xor
jg
lock
jp
lods
imul
lahf
mov
cmp
sub
fsts
mov
icebp
fisttps
mov
xchg
leave
aaa
rolb
hlt
sbb
xchg
leave
cltd
add
addl
divb
aaa
sub
test
cmp
push
cld
sbb
leave
push
or
subl
hlt
inc
cli
loopne
mov
add
filds
push
xor
lods
stos
pop
sbb
rol
test
loop
xchg
stos
or
lahf
jnp
lret
pop
push
mov
das
xchg
subb
aas
popf
fistps
mov
mov
in
rorb
ja
popa
out
mov
or
mov
mov
iret
push
and
imul
dec
lods
adc
mov
std
or
sub
xchg
jnp
movsb
jmp
enter
sbb
sbb
mov
or
adcl
fs
in
mov
out
leave
lds
lahf
inc
jle
adc
mov
dec
lock
nop
dec
sbb
js
or
movsb
orb
mov
mov
nop
hlt
or
mov
mov
pop
ljmp
nop
lds
aam
daa
daa
pop
repnz
shr
sub
popf
mov
xchg
inc
dec
outsl
cld
dec
mov
sub
push
sub
mov
das
fwait
pop
jle
sub
in
outsl
insl
inc
sub
int3
jp
sti
push
jmp
jnp
je
xor
in
ds
fldt
fs
xchg
fistpl
pop
ss
gs
cmc
je
cmp
data16
bound
cmpb
mov
and
dec
mov
mov
outsl
push
cmp
xchg
loopne
lock
ds
call
rorl
push
repnz
out
pop
mov
negl
movsl
fbld
js
lods
mov
in
loop
je
and
push
loop
or
hlt
add
stos
into
mov
jmp
scas
jae
xor
jb
mov
idivl
fs
dec
iret
pop
test
psrad
or
and
and
shl
stos
frstor
mov
sub
les
std
aam
xor
mov
orb
dec
addb
mov
or
inc
decb
inc
mov
push
cmc
std
jo
call
mov
pop
inc
rcr
dec
jno
aaa
cmp
dec
test
push
jl
push
sub
inc
je
add
test
push
xchg
dec
sub
cmovge
bnd
adc
roll
dec
aam
inc
icebp
in
mov
les
lods
or
xor
mov
cli
lods
xor
mov
rol
rolb
std
cmp
mov
jae
push
pop
cmp
xchg
std
stc
fidivs
mov
hlt
outsb
imul
dec
imul
mov
cmp
xor
jl
ja
fidivs
loope
sbb
inc
xor
loopne
rolb
fwait
out
shll
mov
add
lds
cmp
xchg
scas
jns
adc
hlt
xor
cmpsb
iret
mov
mov
adc
mov
add
xor
dec
icebp
cmpl
pop
jecxz
jb
push
cli
dec
fprem1
mov
pushf
sbb
mov
fstpt
pop
and
dec
std
idivb
and
cmpl
jb
sbb
push
repnz
lret
or
inc
std
sub
dec
loopne
arpl
sbb
pop
nop
mov
subb
ret
movsl
jb
adc
in
cmp
cmpsb
dec
dec
dec
add
mov
cmp
push
mov
fdivl
nop
jl
cmovge
ffreep
stos
pop
ljmp
sub
sti
mov
cmp
out
sub
dec
push
dec
arpl
lods
ds
jns
shlb
lret
mov
mov
ss
enter
or
pop
leave
stos
sahf
or
push
test
or
cltd
sub
jns
nop
nop
test
sahf
sti
and
lock
xor
or
cmp
sbb
or
shll
sti
loope
dec
xchg
lret
test
aas
sbb
mov
inc
call
push
dec
jbe
and
mov
jge
subl
dec
mov
test
dec
cmovnp
push
and
aas
das
int3
shrb
xor
lock
ds
cmp
and
xchg
mov
xor
mov
mov
out
inc
lret
out
inc
pop
cmp
icebp
push
push
add
movb
jnp
jae
xchg
out
loopne
mov
iret
mov
int3
lods
mov
repz
je
clc
lds
add
loop
xor
sbb
cli
test
cmp
xchg
ljmp
pop
les
jl
adc
xchg
cmpsl
push
mov
shr
out
loopne
arpl
add
loop
pop
sbb
scas
push
jp
xchg
inc
add
popa
lcall
es
sub
movsl
cmp
outsb
jecxz
popf
xchg
and
rorb
dec
int3
cmpsb
cltd
in
and
lods
jns
popf
aad
ret
rcll
add
fisubl
cmp
loope
push
cld
sbb
pop
pop
jno
cmp
mov
mov
mov
sti
loopne
add
std
loope
xor
push
fnstenv
jns
ret
les
iret
mov
or
jno
pop
lcall
jmp
cltd
cltd
push
loope
call
mov
call
sub
push
cmp
shlb
mov
push
movl
out
nop
inc
xchg
or
loop
in
mov
shr
pop
mov
jle
iret
and
je
lods
sbb
mov
mov
enter
sub
mov
mov
add
adc
cli
sbb
jp
push
or
insb
std
lret
fisubrs
and
cmpsb
jne
sti
add
pcmpeqd
in
movsb
xchg
scas
inc
cltd
and
scas
pop
movb
push
mov
and
push
mov
xchg
sbb
test
sbb
pop
cmpsl
mov
cmpsl
xchg
mov
jp
dec
pusha
lahf
in
pop
leave
in
shrb
jle
mov
fs
push
filds
inc
inc
movlps
inc
mov
movsl
and
mov
adc
add
in
push
lret
roll
je
xchg
hlt
xor
lret
popa
adc
or
leave
cld
mov
adc
cmp
mov
inc
aaa
dec
imul
xor
pop
out
out
iret
push
push
popf
lcall
cmc
push
daa
dec
shll
rcrl
repnz
sbb
sub
enter
push
xchg
push
mov
and
gs
adc
cmpsb
mov
lret
sub
xor
or
pop
cli
inc
mov
sbb
xchg
push
jbe
enter
dec
jnp
add
push
xlat
jg
xlat
testl
insl
add
insb
dec
shlb
jmp
and
jge
loopne
sub
test
push
stos
pop
pop
xor
sub
push
sub
cli
inc
scas
cwtl
mov
adc
ljmp
dec
add
imul
lods
mov
test
push
mov
int
insl
cmc
jge
aaa
jbe
icebp
sbb
mov
mov
lds
sub
and
mov
icebp
dec
je
mov
xor
popa
mov
adc
pop
mov
ds
add
sbb
das
aaa
lock
loop
scas
or
mov
sub
imul
call
dec
adc
movsl
aas
add
inc
arpl
cmp
incb
sub
lcall
and
pop
xchg
flds
xor
movups
adc
pop
repz
das
xchg
cmp
add
push
mov
mov
insb
and
mov
lahf
imul
sbb
dec
xchg
test
add
mov
mov
cmp
test
or
shr
test
push
lock
std
mov
xchg
jecxz
rorb
adc
fcompl
mov
xchg
fmull
cmpsb
fidivs
addr16
arpl
into
out
nop
xor
sub
sub
push
jae
insb
add
test
enter
or
push
hlt
mov
and
xor
sahf
iret
lahf
mov
push
leave
movsl
les
orl
pushf
jno
jno
add
xchg
int
rcrl
jno
xor
negb
adc
pop
pusha
rorl
ret
leave
cltd
loope
jg
movsl
cmpsl
pop
je
fsubr
push
loopne
mov
mov
test
and
cmpl
jl
mov
leave
xchg
mov
loopne
xor
imul
aam
sarl
xchg
fwait
xor
sub
pop
repz
js
outsl
imulb
xor
push
sbb
pop
loope
xchg
or
jp
out
mov
out
incb
push
jae
stos
jg
stc
cmp
popf
ret
dec
into
xchg
mov
out
sbb
jge
xor
mov
add
add
push
sbb
iret
cli
stos
adc
imul
and
jl
stos
mov
mov
cltd
mov
inc
and
shlb
sub
jle
int
in
fidivrl
jge
push
push
inc
cmp
repnz
dec
add
and
sub
leave
fcompl
xchg
push
mov
repnz
popl
cmpsl
iret
lcall
or
lods
push
in
push
enter
sub
outsl
iret
xchg
dec
xor
aaa
negl
repz
enter
pop
xchg
mov
push
inc
inc
loope
cmc
xchg
jge
insl
ljmp
in
sbb
xor
xor
ljmp
jnp
or
sub
scas
xor
cwtl
mov
push
mov
inc
loope
xor
or
jb
shll
jae
int3
xor
orl
fisubl
js
mov
fs
sub
subb
imul
pop
mov
sbb
mov
lcall
in
mov
bound
movsb
xor
jb
cmp
add
jne
out
and
mov
int
dec
and
or
mov
cmp
add
mov
cmp
sbb
jo
fsubrs
fwait
cmp
fistpll
cmp
js
dec
mov
push
and
iret
lea
mov
pop
pop
mov
lea
xchg
imul
mov
and
test
orl
push
and
stos
dec
pushf
mov
jmp
ja
in
mov
flds
cmovns
adc
pusha
jecxz
rcrl
cmp
cmc
repz
and
fdivs
dec
mov
xchg
in
popf
or
push
xchg
cmp
aas
out
pop
repz
incb
xor
incl
push
shrb
cmp
hlt
das
xchg
cmp
jo
movsl
push
cltd
lock
dec
push
pusha
sbb
ja
xchg
loop
jecxz
jp
mov
ljmp
xor
inc
cmp
lret
sub
jne
lcall
rclb
jb
shlb
sbb
xor
pop
filds
push
repz
lock
sub
xor
and
sub
repz
ljmp
pop
les
imul
xor
mov
leave
stos
xchg
jbe
into
push
pop
adc
cmp
and
out
jbe
pop
mov
mov
lods
inc
fistps
out
mov
push
and
out
jle
int
scas
outsl
sbb
cmp
mov
into
jl
inc
jno
cmpsb
push
gs
jmp
cli
leave
fwait
out
mov
sub
rolb
scas
cmp
pop
xchg
push
xchg
cld
lods
mov
mov
hlt
lock
mov
out
mov
ds
ret
addr16
mov
mov
xchg
ds
movsl
or
sbb
jle
jae
cld
out
lds
cltd
inc
adc
gs
xchg
out
stos
push
xor
and
jecxz
push
inc
push
mov
sbb
cld
jne
push
adc
addr16
sub
sbb
jbe
mov
push
push
hlt
lds
sbb
add
sbb
mov
repnz
xchg
and
int
push
pusha
xchg
shl
push
jae
fwait
movsl
test
add
sub
jne
pop
or
aad
aad
inc
push
jge
jmp
aad
push
out
rsqrtps
sub
lock
icebp
and
cmp
mov
cmp
push
dec
jl
leave
mov
test
lea
movsl
jg
aas
adc
pop
test
inc
push
push
into
xchg
and
imul
insb
and
dec
mov
hlt
hlt
loope
scas
inc
or
xchg
mov
push
pop
mov
out
cmp
push
aam
in
ljmp
add
sub
rclb
xor
les
cmp
ljmp
cs
ljmp
cmp
push
mov
cmp
push
aad
mov
push
pushl
xor
mov
dec
add
negb
push
sbb
jg
mov
pop
lods
fs
sbb
es
lret
or
cwtl
outsl
andl
lods
leave
into
dec
repz
ja
jb
push
pushf
scas
cmp
inc
mov
ss
pushf
test
lahf
or
xchg
mov
leave
jb
lahf
fadds
fsubl
pushf
push
inc
fnstenv
push
push
popa
mov
inc
adc
js
or
sahf
cli
enter
inc
jmp
js
xor
aas
mov
and
out
into
aad
int3
sbb
data16
mov
daa
mov
data16
jg
adc
push
sbb
fnstcw
loope
test
cli
or
insl
mov
shlb
loopne
in
sub
pop
push
orl
pop
add
sahf
dec
bound
mov
sub
cltd
jmp
js
pushf
sbb
mov
outsb
test
in
loope
rorb
loopne
mov
outsl
mov
aaa
jmp
inc
push
jb
ss
decl
push
pop
add
pop
xor
leave
xor
pop
lret
negb
popa
sbb
mov
insl
fdivl
xor
jle
cs
outsl
jle
mov
movsb
sbb
cwtl
std
push
mov
dec
arpl
aaa
fcmovbe
adc
aad
fiaddl
push
stos
ljmp
ret
mov
inc
and
andb
js
inc
push
dec
fsts
mov
inc
xchg
inc
and
hlt
adc
test
xchg
mov
inc
mov
loop
es
dec
xchg
cmpsl
fisubs
leave
roll
mov
push
mov
jno
dec
add
jae
inc
adc
xor
icebp
ret
add
or
into
arpl
into
xchg
jo
sbbb
movb
fs
adc
cmpb
in
aaa
es
pop
mov
int3
out
int3
mov
push
shrl
je
or
imul
add
daa
adc
jnp
cmp
ret
outsl
lret
imul
popf
dec
jno
mov
push
mov
sbb
mov
or
dec
dec
aaa
dec
imul
ja
rcll
xor
aam
jle
sub
cltd
ds
sbb
jmp
daa
cli
fdivrs
pop
imul
xchg
out
xor
mov
es
imul
xchg
mov
sbb
sub
push
js
repnz
insb
pop
test
sar
aam
inc
add
data16
mov
je
xchg
inc
orl
stc
in
push
sub
popa
sub
fidivrl
push
push
inc
out
mov
ret
pop
leave
xor
data16
mov
nop
jnp
fcmovbe
aas
popf
xchg
fwait
js
ljmp
nop
je
lea
imul
subb
les
insl
push
cmpsb
sub
lret
cmp
dec
clc
mov
ss
movsb
pop
push
mov
xor
pop
aas
cmp
std
sar
clc
xor
push
or
pop
adc
fmull
jl
lcall
gs
data16
mov
pop
lods
pop
mov
pop
mov
fwait
das
into
cs
jo
mov
enter
jnp
sub
mov
enter
mov
outsl
hlt
shrl
mov
jns
jp
and
cmpsb
mov
insl
psllq
pushl
pop
mov
pop
rclb
outsl
idivl
negb
pop
out
test
js
add
out
ljmpw
xchg
ja
xlat
test
dec
pop
std
or
mov
sti
xchg
je
in
or
jne
sub
test
aad
cwtl
add
test
cmp
aad
add
rorl
mov
dec
fdivl
nop
out
inc
inc
inc
push
pop
sub
or
xchg
out
fstpt
jne
aas
sub
mov
out
sub
cmp
in
lcall
ret
and
or
pop
or
push
adc
ja
jne
les
subl
inc
mov
adc
push
sbb
inc
or
push
xor
out
dec
pop
or
imul
repnz
sub
lea
cmp
std
rclb
ret
jne
ljmp
adc
dec
fs
scas
or
in
jmp
push
push
add
hlt
mov
jae
ret
and
outsl
divl
or
call
cmpsb
mov
js,pt
repnz
int
xchg
xchg
jle
in
shrb
arpl
inc
and
mov
aas
or
mov
sbb
pusha
adc
inc
inc
add
add
leave
xchg
data16
xchg
mov
xchg
popf
pop
lods
fs
imul
test
scas
adc
adc
or
jg
mov
dec
cmp
das
test
pop
pushf
iret
clc
pop
push
xor
lahf
pop
xor
in
pop
cmp
xchg
sti
push
sub
cmp
lea
inc
dec
mov
adc
pshufw
std
inc
inc
outsl
xorl
ss
xor
and
push
mov
sti
add
imulb
in
jo
pop
xchg
das
lds
js
pusha
aad
fst
jo
ret
inc
sub
jb
jo
sbb
jb
cmp
cmp
das
in
cmp
pop
imul
fisttps
cwtl
in
pop
mov
std
out
or
jb
stos
xchg
push
into
inc
mov
rcrb
and
and
sub
mov
ja
add
imul
jp
jae
jle
pop
das
sub
mov
push
aad
or
jo
outsb
xchg
rcrb
pop
add
subl
or
xchg
into
andl
jae
cli
adc
ja
mov
jo
sbb
pushw
jmp
push
js
enter
pop
out
sbb
es
outsb
jp
outsl
lret
mov
ds
mov
subl
inc
popa
enter
test
mov
fldt
bound
cmpsb
jge
add
sbb
mov
add
leave
sbb
push
in
aaa
jl
inc
es
inc
sbb
dec
mov
popa
insb
xchg
aaa
int
fistpl
jae
test
push
lods
push
mov
scas
jge
stos
mov
insb
push
fwait
mov
gs
inc
jbe
and
sbb
push
in
enter
sbb
loopne
jecxz
or
sbb
add
cwtl
add
ds
loope
fcmovbe
push
push
push
cmpsb
in
sub
jl
pop
cld
and
pushl
and
jb
stos
mov
ret
jge
sbb
aam
inc
cmp
cs
inc
and
push
outsb
jb
in
sbb
add
icebp
or
jae
mov
int3
xchg
lock
add
xor
ljmp
cmpl
sub
inc
cld
dec
add
inc
mov
ret
pop
jne
pop
mov
pop
pop
push
psllq
scas
ret
inc
into
mov
adc
xchg
outsl
testl
push
fmul
movsb
or
iret
sarb
fs
into
cmp
mov
jb
dec
lret
add
mov
push
dec
jg
push
lret
test
loop
test
ljmp
enter
xchg
adc
outsl
push
je
mov
pop
aaa
push
cli
cmp
das
and
mov
jbe
out
addr16
mov
inc
aaa
or
and
aaa
into
jae
inc
jne
adc
ret
sti
inc
sub
xchg
push
lret
jecxz
sbb
or
jle
leave
scas
test
cmp
mov
cltd
les
sub
sbb
adc
fs
push
sbb
push
push
inc
or
lea
rolb
lods
cmp
cld
rcrb
mov
rorb
in
push
pop
pop
adc
je
stos
pop
mov
adcb
push
xchg
std
fisubrl
popf
xor
inc
xor
lret
dec
scas
push
sbb
pop
dec
ret
shlb
sbb
push
xchg
jae
push
enter
icebp
xchg
mov
cltd
les
and
mov
push
xchg
sbb
mov
popa
xchg
jne
icebp
in
sbb
loope
scas
mov
clc
sub
lret
mov
cmp
out
mov
push
jne
imul
out
dec
ja
or
nop
push
pop
adc
pop
fwait
cmp
adcl
mov
push
dec
jno
int
mov
pop
add
std
pop
mov
rcll
mov
leave
loope
ljmp
push
adc
setnp
fisubl
pop
xchg
lahf
cmp
decl
lea
cmp
xchg
imul
adc
mov
push
decb
jl
cltd
xchg
pop
test
jge
rcrl
fcmovu
sbb
or
jp
mov
int3
xchg
mov
arpl
stos
pop
xchg
inc
add
cmpsb
and
mov
rorl
xchg
or
xor
iret
mov
mov
sbb
push
mov
push
pop
mov
bound
xor
orb
xchg
imul
xchg
clc
xor
call
popa
aaa
mov
adc
sbb
push
jbe
clc
pop
xor
std
pop
push
mov
test
mov
add
xchg
jns
xchg
xchg
xchg
inc
loope
sti
and
mov
cmp
out
pop
mov
test
mov
insb
daa
lea
movsb
sub
ja
sbb
mov
adc
or
aas
xchg
mov
jge
into
xor
inc
pop
push
xor
add
movsb
fadds
jnp
out
pop
lret
outsl
mov
cmpsb
popf
sub
xor
aad
movsl
push
jbe
fucomip
int3
and
aam
or
out
scas
mov
xchg
add
or
lods
mov
lods
fsubs
sbb
addr16
pop
out
xchg
pop
jae
jnp
mov
add
cld
sub
pop
popa
pop
inc
push
cmpsb
add
cli
push
mov
in
in
sub
rclb
fmuls
js
into
test
icebp
xlat
dec
insb
xchg
pushf
sti
jmp
clc
add
scas
jnp
ljmp
inc
out
dec
rcl
sub
jbe
cmp
cli
push
out
inc
incb
xor
stos
rcrb
jbe
mov
push
jae
insl
xor
mov
sbb
mov
push
push
jae
inc
std
ret
pop
adc
insb
stos
test
and
adc
or
aas
push
cmp
frstor
inc
push
rorb
jp
loopne
mov
aaa
rsqrtps
and
mov
adc
lods
cli
jns
jae
in
movsb
or
sbb
mov
or
mov
inc
xor
in
in
xchg
adc
fisubrl
push
xchg
sub
es
push
xchg
je
lods
subb
loope
hlt
loope
mov
aad
mov
leave
stos
mov
mov
pop
stos
jae
sub
data16
add
cmc
mov
gs
mov
xchg
in
push
mov
in
mov
add
sar
xlat
negl
stos
inc
pop
iret
stos
fstpl
jnp
sub
ljmp
push
cmpsb
xchg
jb
ror
out
push
mov
adc
cwtl
sub
js
mov
ficompl
adc
jb
addr16
bound
inc
adc
xor
out
jmp
mov
push
sbb
mov
xchg
stos
sbb
add
xchg
sub
add
lahf
outsb
pusha
or
add
fdivrl
pop
jbe
iret
jnp
test
sbb
mov
adc
lods
sbb
mov
inc
dec
mov
inc
clc
push
mov
push
and
imul
cmp
push
sub
sbb
outsl
out
jge
fsts
adc
pusha
jno
sahf
sahf
inc
iret
lds
lret
fcmovnb
pop
cmp
popa
mov
cmpsl
pop
push
stos
mov
and
fwait
jae
enter
repnz
das
ret
cmp
cmp
jnp
cmp
inc
pop
and
into
mov
jl
nop
push
insb
xlat
xlat
dec
jl
fwait
jge
inc
xchg
inc
les
outsl
xchg
mov
dec
mov
adc
xchg
cmpsb
test
out
cmp
xchg
xchg
adc
adc
xor
jmp
inc
in
sahf
mov
mov
fstpt
lds
adc
sub
jns
bound
dec
aam
fstl
jb
mov
shr
out
mov
dec
push
or
xchg
fidivs
out
mov
leave
mov
es
loopne
jns
jns
repz
es
add
sar
xlat
int3
test
sbb
popa
xchg
jge
test
or
idiv
sbb
pop
inc
aas
loopne
adc
cmpsl
jmp
pop
mov
push
lock
xlat
repz
lcall
imul
ret
mov
or
repnz
gs
cwtl
cwtl
ss
test
or
mov
call
out
adc
dec
mov
imul
outsl
push
and
sbb
adc
cli
fistpll
push
mov
sbb
pop
add
sbb
lock
and
es
es
pop
in
je
mov
test
in
mov
insb
sub
push
xchg
mov
lock
mov
lods
lea
cmpsb
insb
insb
sub
and
das
cmpsl
jp
in
xchg
js
aaa
ja
mov
jge
call
add
inc
call
in
mov
stc
push
orl
jns
xor
xchg
pop
sbb
repz
mov
inc
mov
and
adc
hlt
or
test
jmp
jb
daa
jge
sbb
mov
push
andb
movsb
jnp
sbb
cmp
enter
bound
jno
cmp
cmpsb
sub
cs
lock
or
xchg
and
add
pusha
sub
lret
add
and
xor
popa
rcrl
sub
fsubrs
push
mov
inc
cli
outsb
subl
enter
fnstsw
je
cs
rep
mov
jnp,pt
enter
pop
fnstsw
mov
xchg
xchg
lods
sbb
lret
add
or
cli
and
dec
jne
fisubs
xchg
imul
out
xor
pop
loope
jae
ds
xorb
inc
ret
jmp
mov
repnz
jl
lea
rorl
loope
and
fistps
movsb
sti
dec
icebp
in
lahf
imul
scas
mov
xchg
movsl
mov
xor
fwait
roll
add
out
sar
sub
mov
jmp
sbb
jbe
xor
pop
dec
push
xor
lods
xorl
out
lret
ljmp
fcomp
push
ja
cmp
push
rcl
aad
aad
into
cltd
test
int3
xchg
and
dec
cmp
dec
push
inc
push
push
lcall
ja
push
and
sub
mov
stc
shlb
push
imul
in
fs
jmp
roll
mov
enter
mov
push
pusha
movsb
rorl
dec
cmc
and
in
xchg
push
lret
sub
inc
les
sbb
lock
and
push
out
xchg
jb
add
jno
jno
mov
outsl
dec
popf
test
imul
mov
enter
xchg
xchg
decb
jmp
ret
xchg
dec
mov
inc
cli
mov
jle
or
jae
inc
or
pushl
gs
or
or
imul
pop
or
xchg
fwait
pusha
mov
movsb
inc
add
icebp
out
sbb
cmpsl
dec
mov
pusha
ret
ljmp
add
test
push
fsts
repnz
fs
xchg
xchg
dec
fimull
pop
pop
stos
arpl
push
inc
cli
or
es
xor
sti
outsl
ds
cwtl
stos
xchg
cmpsl
push
fisttpl
jbe
adc
in
cmp
push
mov
sub
cmp
pop
and
cld
mov
pop
sahf
inc
mov
adc
push
repnz
dec
out
out
sarl
iret
cwtl
mov
xor
stc
adc
push
stos
push
adc
incb
mov
insl
xorl
adc
out
mov
jae
push
push
dec
sbb
les
or
adc
cmc
lret
test
xchg
std
fiaddl
jo
lock
sbbl
clc
roll
dec
shr
jns
iret
jmp
loopne
shrw
clc
fnstsw
or
sbb
jo
shrb
xor
pop
sub
and
push
addr16
and
xchg
and
push
adc
in
or
sbb
out
sahf
lea
insb
jbe
push
ja
push
cltd
divb
cmpsl
sbb
push
lock
add
rcrb
test
cs
xchg
cs
dec
jge
fists
xor
stc
xacquire
inc
jnp
out
cmp
scas
test
push
out
out
shl
int
gs
inc
inc
repnz
sahf
in
or
clc
das
shll
mul
into
push
mov
sbb
nop
int
mov
int
lds
lahf
sub
aaa
nop
mov
pop
cld
mov
mov
jno
or
rorb
popl
pop
dec
lds
push
movsb
icebp
repnz
mov
decb
adc
or
addr16
outsb
mov
xor
pop
xchg
lea
sub
and
jl
andps
outsb
push
jae
mov
nop
dec
xchg
daa
aaa
pop
adc
sub
jno
mov
lret
es
mov
inc
sti
jb
js
mov
pop
pop
xchg
add
dec
in
jno
mov
hlt
dec
add
xchg
add
setne
rclb
in
jne
dec
sti
popf
dec
stc
jle,pn
pop
cmp
xlat
sbb
fsubs
mov
jbe
adc
push
jno
loop
sahf
shlb
sub
dec
imul
push
test
roll
imul
push
mov
sbb
imul
jo
xor
lods
lds
incl
int3
int
in
movsl
inc
pop
jae
in
andb
cmp
inc
jbe
and
sbb
jne
aaa
sbb
sbb
mov
addl
or
push
jno,pt
aad
loopne
ret
or
gs
xor
mov
jne
sub
mov
bound
gs
pop
mov
aad
mov
mov
test
int
or
xor
in
mov
dec
aaa
cmc
adc
inc
call
push
cwtl
arpl
add
addl
in
push
rolb
pop
shrl
insb
inc
sub
mov
jg
push
mov
jl
dec
sbb
and
into
push
shl
into
sti
xchg
or
jb
sbb
push
cmp
inc
jecxz
xor
stc
push
daa
in
lcall
push
or
push
push
cld
push
iret
push
push
cmc
jp
lahf
orl
jle
fs
mov
push
mov
xchg
jmp
jmp
xor
sub
dec
mov
and
nopl
arpl
orb
out
mov
shll
pop
or
lcall
outsb
sub
leave
outsl
mov
movsb
xor
fsubrp
ja
fs
xchg
pop
in
push
jg
ss
enter
je
adc
mov
and
lods
mov
daa
pop
jns
xchg
shr
mov
fnstsw
adc
adc
ljmp
test
adc
js
ret
js
push
clc
xor
in
mov
pop
and
push
mov
aad
icebp
mov
sysexit
std
pusha
fistpl
fimull
sbb
aam
lret
sbb
push
sbb
popf
push
dec
lret
mov
jl
mov
loop
add
and
fistps
pop
pop
or
pop
jae
mov
inc
cmc
mov
outsb
popf
cs
in
stc
sahf
lcall
xchg
cmp
mov
dec
rcr
loopne
das
inc
and
iret
pop
mov
ljmp
in
jmp
enter
loop
repz
cmp
mov
push
fistpl
xchg
sahf
aam
inc
jge
mov
mov
adc
fnsave
mov
adc
scas
mov
seta
mov
arpl
inc
and
or
and
push
mov
out
xchg
scas
push
addl
xchg
pop
sahf
jmp
adc
movsb
xchg
jo
js
pop
xchg
cmc
dec
and
stos
ljmp
pop
adc
jg
mov
xchg
fstpt
dec
push
mov
jo
sbb
dec
sub
jp
insl
popf
hlt
sarl
xchg
jge
jl
dec
xchg
xchg
xchg
xchg
and
add
adcw
sub
inc
mov
pusha
dec
rcrl
lods
int
fstpl
inc
hlt
fld
dec
pop
ds
repz
pushf
mov
ss
dec
fiaddl
cmp
data16
sub
cmp
scas
lock
popf
sbb
in
sbb
pop
lret
fisubs
inc
sub
pop
out
mov
pop
add
insl
cwtl
adc
dec
jmp
ret
enter
jnp
inc
hlt
push
sbb
out
add
out
js
cmp
outsb
push
in
dec
cwtl
sub
mov
and
leave
xor
sbb
xchg
stos
jae
lret
pop
aad
enter
or
cmp
jne
cmp
imul
lock
add
jb
jb
loope
aaa
test
test
imul
movsl
add
mov
jb
push
out
cmp
jb
js
xlat
or
rorl
sub
or
rclb
lret
daa
jle
adc
sub
andl
mov
xor
fidivrl
push
data16
push
xchg
jmp
pop
sub
xchg
loopne
and
adc
lods
icebp
addl
daa
cmc
jmp
jno
jae
sbb
add
pop
inc
pop
rcrb
add
es
jbe
and
loope
ret
in
pushf
lods
and
inc
loop
ja
pop
xlat
loop
inc
pusha
jne
jo
mov
movsb
pop
cltd
repnz
in
loopne
fcompl
fucomip
xor
push
jns
nop
es
mov
jge
push
add
out
cmp
adc
adc
xchg
sub
mov
pop
add
fdivr
and
bound
xchg
or
jns
jl
movsl
jp
jns
ljmp
popa
lods
sub
sbb
jae
jne
int
loopne
idivb
and
or
pushf
insl
adc
cwtl
repnz
loope
jge
push
arpl
push
mov
aaa
xor
sbb
sub
jno
lahf
or
sbb
popl
jecxz
cmp
out
call
nop
push
push
sbb
lea
jmp
outsl
in
cltd
push
decb
loopne
cmc
into
lret
jmp
inc
adc
xchg
and
cs
imul
movsl
or
and
mov
out
aam
into
aam
scas
repz
sbb
shrb
pop
out
push
aas
leave
jno
pop
pop
jbe
and
sar
mov
jge
adc
adc
popf
mov
cmp
xlat
and
xchg
mov
int3
sti
mov
inc
dec
fwait
push
mov
lret
mov
mov
sbb
ljmp
inc
inc
sti
or
jecxz
pushf
cli
or
mov
in
stc
jge
pop
in
aam
jns
inc
push
mov
mov
mov
inc
ds
pop
add
xchg
sub
jl
cmp
lcall
cltd
pop
mov
aad
mov
insl
dec
mov
cmpsl
jg
cmp
cmp
je
loop
divl
cmp
fcomp
inc
sub
popa
adc
data16
mov
and
push
inc
jo
mov
idivl
push
add
lcall
out
cmp
dec
into
je
outsl
std
xchg
xlat
or
gs
daa
pop
popa
paddsw
and
fiadds
cltd
dec
enter
mov
mov
mov
outsb
fsubs
icebp
in
adcb
pop
test
cwtl
imul
adcb
aaa
aam
sub
imul
mov
pop
pop
aaa
ret
andb
sub
fmull
out
mov
loopne
cmpsb
je
into
mov
sbbb
insl
addr16
lods
imul
push
jnp
mov
ljmp
sbb
aas
add
insb
insl
dec
in
cmp
inc
lahf
sub
pop
int3
hlt
xor
daa
push
jg
inc
add
adc
adc
mov
and
ljmp
call
iret
pop
cmp
push
mov
ret
and
call
adc
jae
jbe
out
fcoms
data16
dec
sub
stos
ret
or
je
xchg
mov
lods
addr16
and
aaa
mov
fs
repnz
test
pop
dec
orl
out
xchg
pop
xchg
or
adcb
mov
into
fwait
push
popf
cmpsl
sub
sub
popf
in
or
push
push
add
das
add
push
fistpl
xchg
leave
aaa
in
xchg
adc
cmpsl
jno
pop
dec
test
jg
sbb
imul
ja
jne
mov
push
sub
inc
sub
mov
dec
ds
negb
imul
enter
cli
fmuls
outsl
inc
clc
mov
sub
push
sbb
clc
cmp
mov
sti
push
or
mov
cs
xor
in
add
lahf
pop
inc
inc
adc
jnp
andb
loope
incb
popf
lret
roll
dec
mov
jne
sub
ds
dec
loop
nop
pushf
mov
fdivrp
rcr
and
xchg
pop
out
mov
pusha
in
xchg
pop
repnz
test
into
dec
mov
leave
pop
mov
imul
in
push
jae
mov
and
sti
sub
jb
in
jne
shlb
cmp
xchg
mov
push
in
fldenv
add
gs
push
daa
js
insl
mov
xchg
xor
pop
adc
jb
aaa
iret
pop
push
and
mov
pop
push
or
bound
inc
sahf
lahf
fstpl
dec
xlat
mov
push
mov
rol
jle
jae
push
jae
add
les
jmp
jl
and
add
icebp
arpl
adcl
mov
cmpsb
cmpsb
dec
movsl
loopne
sub
add
rclb
cs
cmc
outsl
cmpsl
sbb
push
push
lret
shll
xor
push
loopne
popf
jne
xor
movsl
mulb
fwait
mov
mov
stc
dec
xchg
or
movsl
rcl
push
dec
std
hlt
das
and
or
fidivs
out
push
mov
adc
aam
cmc
adc
lods
adc
test
test
jne
push
add
mov
loop
and
add
dec
mov
sbb
lcall
mov
sbb
mov
cmpsl
fwait
popa
and
pop
sbb
ljmp
dec
add
enter
xchg
sub
cmp
rcll
mov
enter
jmp
inc
dec
xchg
bound
pop
rclb
fwait
xchg
test
push
jns
push
and
cmpsl
repz
jp
imul
sbb
xor
and
add
pop
pop
call
add
loopne
add
sti
mov
adc
pop
scas
pop
cld
lods
ja
ud0
dec
repnz
mov
xchg
or
xchg
sub
outsl
cli
or
imul
inc
imul
stc
adc
lds
enter
or
and
fcompl
pop
mov
mov
cmpsb
ret
jmp
mov
xchg
adc
mov
subb
or
jmp
push
push
jg
xor
in
xchg
addr16
jne
lcall
mov
mov
pop
mov
lcall
jb
push
push
fdivrs
repnz
mov
repz
js
mov
dec
loope
sub
loope
es
xlat
hlt
mov
xchg
inc
and
add
pop
push
mov
jge
shll
cwtl
out
outsl
stc
ret
cmp
cltd
stc
les
and
sub
xchg
test
fwait
mov
pop
dec
lds
sbb
pop
sahf
outsl
rcll
xchg
sbb
adc
mov
sub
pop
mov
loop
xchg
mov
or
push
sub
adc
lret
enter
out
inc
lret
sub
mov
sub
into
or
shlb
nop
xchg
adc
mov
loopne
ret
xor
lcall
mov
pop
pushf
out
or
popf
aam
cs
sbb
test
fcomi
xchg
adc
ffreep
mov
sub
jmp
dec
inc
ss
lahf
xchg
xor
fldenv
sub
mov
out
sub
mov
mov
cmp
clc
ret
sbb
jmp
roll
mov
jnp
lock
fisubrs
dec
mov
outsb
subb
mov
mov
or
rclb
jb
pop
addr16
pop
inc
mov
fildl
ss
inc
fwait
mov
ds
ja
or
cmpsl
imul
icebp
arpl
lds
add
mov
cs
call
cmp
addl
push
inc
in
movsl
or
or
xchg
pop
jae
ds
mov
out
enter
in
jmp
sarl
dec
ret
jge
fidivrs
repnz
mov
xor
es
inc
out
sub
pop
in
or
clc
sarb
add
int
push
cli
xchg
and
xlat
adc
xor
scas
pop
fs
cltd
inc
pop
dec
cmp
pop
outsl
lods
in
mov
sub
clc
je
adcb
jne
arpl
jmp
stc
iret
inc
stos
cmp
push
mov
push
push
rclb
lods
fildll
jns
push
lcall
gs
aas
jno
imul
and
daa
push
leave
push
mov
and
in
add
xor
jno
mov
call
mov
pop
out
int3
xor
popf
cmc
adc
leave
xlat
jl
jp
pushf
mov
test
mov
dec
ss
jo
inc
xchg
nop
dec
push
push
mov
int3
xor
cmp
jl
push
out
xchg
or
out
dec
push
xchg
xchg
mov
or
icebp
adc
mov
loopne
dec
pop
inc
push
or
xor
mov
xlat
and
jp
pop
repz
in
or
jno
jb
jo
cmp
add
dec
inc
pop
test
mov
xchg
fsubrs
ret
adc
inc
sub
rorb
add
push
xchg
cmpsl
addb
mov
or
pushf
jne
bound
cmp
mov
jns,pt
mov
pop
sbb
in
cli
jns
or
mov
ljmp
xlat
pop
or
xor
mov
jmp
cli
xor
out
clc
jne
lcall
xor
repz
mov
inc
cmp
in
jecxz
mov
cwtl
rclb
fbstp
hlt
xor
int3
shl
imull
ficoml
push
call
jne
das
test
das
aas
out
insb
push
out
sub
push
mov
lcall
mov
fwait
stc
sbb
sub
nop
sub
sub
lods
xchg
jo
lds
inc
pop
sub
sub
xchg
mov
mov
push
mov
mov
inc
cmp
out
loopne
pop
push
add
mov
sub
rol
push
dec
pop
stos
je
shll
rcl
cmp
mov
mov
out
mov
pop
pushf
loope
push
xor
dec
negb
and
inc
adc
mov
dec
imul
ret
or
jle
and
push
cmp
lea
mov
insl
mov
sub
xor
testb
pop
fadd
int3
push
push
stc
cvtpi2ps
pop
jnp
lods
sbbl
jle
and
ljmp
push
and
addb
ljmp
mov
jno
add
sbb
sbb
sub
xchg
sbbl
aas
cwtl
adc
out
mov
or
mov
out
mov
sub
fstpl
je
aas
dec
inc
stc
push
xchg
xlat
mov
add
jae
daa
js
adc
mov
sub
push
xchg
jnp
lahf
pop
pop
loop
sub
jns
push
dec
push
xchg
fs
sbb
adc
outsb
xchg
inc
pop
cmp
sbb
mov
cmc
push
aaa
jns
pop
xchg
stos
adc
jp
aam
sbb
gs
aam
dec
outsl
xchg
xchg
jae
pop
inc
push
and
popa
and
pop
mov
mov
mov
fimull
cmp
movsl
xorl
in
fwait
jle
sti
pop
mov
dec
mov
push
lret
and
outsb
outsl
sti
stos
aaa
test
pop
sub
nop
bound
aam
fisubs
xor
aaa
xor
pop
cmp
outsl
sub
xchg
and
inc
scas
std
mov
test
pop
mov
inc
cmp
sbb
jo
pop
repnz
arpl
xchg
jp
in
lds
popa
add
lret
jnp
loope
dec
mull
cmc
mov
stos
sub
ret
dec
loopne
sahf
rcr
sub
xor
nop
xor
rorb
movsb
std
mov
xchg
ja
movsl
mov
mov
in
xor
je
dec
sub
das
in
ret
cmp
sbb
pop
ja
mov
out
test
test
or
aam
leave
shrl
sub
cmpsl
lret
int3
sti
adc
stos
and
into
xchg
ss
inc
jae
xchg
subb
or
mov
pushf
lods
pop
and
cmpb
outsb
sarl
push
sub
dec
xor
sbb
into
mov
cmp
xor
cld
in
leave
cmc
sbb
cmp
incl
in
inc
jmp
add
or
ss
repnz
xlat
fbstp
pop
imul
and
xchg
jne
xchg
jns
test
jno
inc
mov
mov
test
cltd
cmp
jne
mov
adc
dec
pop
mov
negb
mov
sbb
ja
and
mov
dec
out
mov
lret
xchg
jae
inc
loope
mov
pop
sbb
loope
popl
lahf
jno
mov
xchg
imul
xor
cwtl
sub
jb
outsl
mov
push
fisttps
ret
clc
fisttps
pop
jp
jnp
pop
xor
push
sbb
sub
jbe
dec
mov
mov
xchg
out
icebp
into
in
fldt
cwtl
push
xchg
scas
int
mov
into
xchg
jo
shll
in
fists
scas
xor
daa
inc
push
mov
mov
jg
aaa
cmp
enter
mov
sub
fdivrl
jae
fistpll
pop
int3
roll
jno
aad
dec
jl
shlb
xchg
pop
dec
scas
and
mov
pop
push
xchg
pop
sbb
add
addl
test
movsb
leave
push
repz
pmuludq
push
jne
clc
es
repnz
push
lcall
cmpsl
rorb
jae
xor
fs
jg
mov
in
daa
pop
or
adc
xor
pusha
adc
inc
fisubs
mov
dec
in
mov
popf
sbb
lock
mov
notb
cmpl
out
add
mov
clc
and
arpl
cmpsl
ret
loope
test
pop
mov
jge
mov
adc
cmp
movsb
repz
sbb
fdivrs
inc
mov
and
and
int
cli
cmp
aad
std
dec
xchg
insb
mov
sbb
cmpsb
jge
add
adc
jbe
mov
cmc
cmp
sbb
outsl
or
shlb
in
loop
js
repnz
mov
adc
fwait
mov
xor
push
pusha
inc
mov
shll
into
inc
pop
push
sub
andb
adc
cmp
outsb
push
pop
ds
in
test
cmp
push
lret
adc
pop
inc
clc
movsb
ret
or
loop
jmp
adc
cld
stos
or
xchg
push
jbe
mov
add
pop
or
sarl
jmp
xlat
jae
inc
dec
xchg
add
adc
push
xchg
ss
out
mov
push
cwtl
mov
xlat
xor
inc
roll
lret
outsb
push
push
jnp
pop
mov
adc
and
pop
mov
mov
int3
loope
lods
inc
dec
push
jo
enter
sub
call
movsl
btc
movsb
mov
movb
cwtl
hlt
cld
enter
pushf
mov
mov
femms
aad
sbb
imul
lods
push
push
and
out
iret
iret
ja
repnz
test
sbb
pop
mov
test
and
and
add
xor
mov
jp
mov
lds
mov
lods
pop
pop
rcrl
push
sub
push
mov
lock
stc
popa
inc
mov
and
mov
cmp
mov
rorl
pop
push
push
andl
in
push
aad
sub
jo
addr16
int
xor
loop
sub
enter
push
or
push
pop
dec
les
mov
mov
add
inc
ret
fsubp
jo
jmp
xchg
cwtl
xorb
jbe
or
or
popf
adc
or
or
fwait
push
mov
rol
addb
data16
add
sub
adc
jl
sbb
test
add
pop
lahf
ss
out
aas
dec
pop
cmp
jnp
loop
sbb
mov
mov
popl
pop
xor
push
jnp
lea
push
push
stc
lods
ds
insl
or
lcall
pop
out
sub
das
lahf
or
fucomp
adc
adc
scas
ds
mov
stos
sub
dec
lock
inc
add
cli
pop
out
cmp
sti
mov
stc
movsl
ret
in
sahf
xlat
adcl
adc
sub
push
dec
inc
in
pop
mov
out
cmpsb
adc
shl
fs
jmp
jp
xor
loope
cmpsl
sbb
outsb
mov
add
cmp
mov
lods
inc
ret
jecxz
push
stos
push
xchg
jge
call
in
shll
ret
imul
mov
pushf
lods
or
jo
push
lcall
push
inc
cltd
sub
xchg
or
inc
test
sahf
push
and
dec
ret
scas
sbb
xchg
pop
scas
out
ja
pop
cmpsl
add
sub
sub
cwtl
add
inc
js
bswap
mov
leave
xchg
push
mov
adc
pop
or
push
jecxz
or
inc
jge
in
push
std
into
pop
loopne
data16
pusha
fnsave
sbb
jecxz
sub
mov
popl
hlt
data16
mov
mov
hlt
daa
cmp
pop
pop
lret
and
sub
int
int
stc
dec
das
negb
mov
mov
add
test
dec
or
in
and
xchg
into
cmp
lods
mov
jecxz
cmp
xchg
enter
cmp
loop
outsb
popa
lock
mov
iret
sbb
lods
mov
xchg
push
or
sub
pop
movsb
mov
nop
jg
repz
pop
scas
xor
sbb
mov
mov
scas
cs
in
aas
adc
xor
mov
push
mov
jae
dec
mov
inc
outsl
and
inc
mov
stos
and
out
lock
jns
imul
shll
test
cwtl
out
mov
in
rep
in
mov
pop
daa
sub
sbb
lret
add
mov
stos
mov
shrl
setne
cli
cmc
and
mov
popl
cli
movsb
enter
inc
jp
mov
cld
pop
data16
pop
addr16
lds
push
push
stc
sti
rol
dec
and
mulb
in
adc
sbb
insb
mov
push
mov
mov
test
icebp
inc
shl
mov
push
sbb
jne
jl
roll
in
aas
xor
jae
insl
test
iret
mov
xlat
jbe
add
jo
aad
jno
adc
jno
sub
sbb
inc
movsl
add
xor
pop
cmc
addr16
int3
lea
call
std
das
aas
scas
jne
aam
cmpsb
pop
mov
frstor
mov
xor
out
jb
fs
add
add
andb
fdivrl
pop
jge
lods
mov
rorb
daa
jmp
repz
fwait
icebp
xchg
cli
push
daa
adc
in
enter
mov
js
cmp
subl
rcrl
sbb
arpl
xor
je
lcall
pop
outsl
test
fwait
push
jmp
pop
push
xor
jo
jge
pop
or
mov
and
add
lcall
sub
roll
mov
sbb
scas
xorb
jle
mov
sbb
stos
daa
jnp
insl
pop
mov
lcall
inc
jbe
lret
outsb
je
std
add
jp
push
stos
and
loopne
cs
fwait
cmp
stc
fcmovnb
nop
sub
je
stc
cmp
sbb
out
pop
xchg
sub
shrl
xchg
cli
jecxz
adc
mov
cmp
popf
sub
out
mov
pop
fisubl
ss
das
popa
lret
cmp
push
mov
stos
std
popf
jns
inc
in
adc
jmp
mov
std
xchg
bound
mov
jno
sbb
jns
ret
sbb
in
pop
pop
push
mov
mov
rcrl
cmp
adc
pop
in
nop
and
hlt
mov
jns
sub
xor
and
xchg
insl
cmp
sbb
testb
jl
xor
dec
add
cmpsl
movsb
lods
pop
testb
out
xor
in
push
gs
and
mov
mov
xorb
lahf
add
in
xor
mov
jg
push
cmc
insb
mov
fildll
fmuls
cmp
push
dec
dec
fsubl
repnz
or
in
xor
jp
jl
adc
pop
or
stos
fwait
cli
mov
jo
xor
xchg
xor
xchg
movsl
ret
mov
jne
or
mov
xor
mov
ret
jmp
push
repnz
rclb
sti
xchg
hlt
fwait
cli
mov
addr16
and
test
scas
in
insl
insb
mov
jno
pop
imul
sahf
gs
insl
out
sbb
popf
xchg
mov
mov
xchg
and
loopne
loopne
idivb
push
lret
gs
not
mov
bound
inc
cmpsb
cld
pop
pop
cmp
xor
shlb
cmpl
push
cmc
pop
add
push
jnp
and
add
jge
loopne
dec
xchg
sarb
push
xchg
and
das
imul
imul
rcll
rol
pop
pushf
xchg
in
cmpsl
adc
dec
scas
iret
test
lods
jmp
xchg
and
cmpsb
cld
insb
rcll
test
push
cmp
and
jno
inc
popa
pop
aad
sti
adc
jle,pt
xor
mov
stos
sub
xor
ret
std
push
arpl
and
jb
pop
pop
btr
lret
add
dec
push
cs
cmp
or
inc
daa
movsb
jl
in
xchg
cmpsb
adc
daa
sub
addr16
ljmp
xchg
popf
push
or
sbb
mov
xchg
add
adc
shlb
ljmp
mov
decb
cld
push
inc
add
or
popf
cmpsl
out
movb
jmp
pushf
adc
xor
adc
adc
xchg
mov
push
shlb
mov
adc
shlb
fpatan
mov
ss
push
popa
in
test
movsl
leave
lods
fwait
andb
sub
and
std
jns
mov
xlat
push
pop
es
sbbb
cmp
inc
jmp
out
clc
adc
pushf
outsb
lods
and
inc
and
fisttps
hlt
inc
and
xchg
pushf
ss
mov
in
scas
dec
add
andb
fildl
in
fbld
and
jge
imul
sub
xchg
add
into
dec
xchg
jp
or
mov
cwtl
addr16
shrb
sub
call
fwait
mov
xchg
iret
lea
or
mov
js
fnstcw
lock
pop
js
sar
cmp
mov
sub
hlt
and
subb
ffreep
mov
mov
jb
push
clc
xor
sub
lahf
add
stos
add
xchg
fstp
loopne
das
scas
or
scas
dec
mov
jl
push
lret
call
imulb
inc
dec
jl
add
daa
pop
jmp
jp
shrl
inc
mov
arpl
lods
lock
nop
out
dec
fdiv
push
jge
pop
dec
adcb
aam
mov
jg
out
jno
cmpsl
in
jbe
mov
adc
cmpsl
popa
cwtl
add
test
pusha
jp
es
hlt
dec
int
lods
stos
loop
adc
pop
out
into
xor
and
imul
clc
out
inc
pusha
sahf
test
push
addr16
aaa
call
jno
loop
test
sub
shrl
fistpll
push
lret
loop
leave
stos
lods
push
imul
pop
mov
testl
or
mov
mov
push
mov
test
add
pop
cmp
push
dec
add
mov
ljmp
aad
jno
stos
sub
test
lret
dec
rcrl
pop
xchg
mov
pop
adc
mov
add
fcompl
mov
fimuls
cmpsl
aaa
movsl
test
xchg
insl
outsl
scas
mov
add
pop
jcxz
mov
add
dec
adc
insb
dec
bound
xchg
in
inc
push
dec
test
sarl
cmpsb
dec
mov
loope
in
stc
adc
gs
jle
and
push
mov
aam
fbld
push
cmp
pop
fsts
subl
iret
adc
arpl
imul
sub
pop
and
pop
push
xchg
pop
gs
xor
out
or
lcall
cmp
sbb
pop
sub
out
dec
push
mov
push
jmp
mov
or
xchg
nop
mov
insl
xchg
mov
push
clc
xor
jmp
adcl
dec
std
sbb
pop
pop
sub
jno
bound
mov
les
out
in
mov
and
hlt
mov
and
out
bound
add
cwtl
adc
fnsave
mov
mov
ret
pop
data16
scas
jns
fmul
cmp
jne
sub
sahf
add
adc
jno
daa
xchg
bnd
int3
repz
pop
jns
jmp
out
xlat
pushf
test
repz
lods
lcall
adc
stc
pop
pop
sti
adc
lods
rcrb
cmp
nop
sbb
mov
scas
jmp
test
push
xchg
mov
xor
test
mov
cmp
pop
cwtl
adcb
pop
mov
into
add
rcrl
xchg
cli
or
sti
jmp
ret
gs
fs
jns
jae
scas
fwait
mov
pop
int3
cs
lock
push
dec
xlat
inc
cmp
mov
in
pushf
add
icebp
outsl
jmp
loope
ret
fnstcw
jl
mov
sub
xchg
out
lock
cmp
inc
sarl
add
bound
out
loop
mov
ljmp
jbe
push
mov
clc
jmp
push
and
fsubp
fidivl
cs
push
lds
and
xor
sbb
cmpsb
outsl
addr16
clc
pop
cmp
push
scas
add
xchg
inc
dec
rcr
cs
mov
mov
in
ret
push
xchg
imul
and
adc
add
sarb
jge
stc
push
dec
mov
mov
jmp
sub
stc
xchg
dec
push
imul
pushl
pop
adc
inc
fidivrs
daa
rorl
out
cmpsb
lock
aas
js
jp
lods
and
aaa
jp
lock
das
ret
xchg
ljmp
sbb
jae
pop
outsb
les
cmp
test
add
lods
lds
ds
icebp
in
jmp
sbb
adc
jp
mov
mov
pushl
fnstsw
push
push
int
ja
mov
addr16
fldcw
test
cmp
or
jmp
insl
cmp
pushf
push
mov
inc
add
in
jb
lcall
outsl
cs
push
jg
cmpsb
lods
push
or
loopne
mov
aam
or
lret
mov
ja
imul
pop
mov
push
lea
fcoml
mov
scas
cli
jg
lods
lea
js
lret
add
mov
xchg
xchg
cmp
daa
pop
dec
ljmp
xor
loopne
jno
repz
loop
jno
cmp
jbe
cmpsb
popa
icebp
mov
popf
ja
mov
mov
lods
and
jns
mov
int
lods
lods
rorb
dec
xchg
cmp
test
shrl
ret
mov
push
imul
sbb
push
aam
push
rdmsr
icebp
mov
cmp
and
mov
xchg
inc
mov
and
push
dec
push
in
jg
sbb
inc
pop
test
pop
xchg
jbe
js
pop
stc
ljmp
xor
xor
pop
pop
push
or
jns
cld
lret
mov
and
add
bound
push
sarl
fwait
bound
loope
arpl
mov
jg
or
into
cmp
sarb
frstor
xlat
pop
int3
lods
mov
sub
and
adc
pop
cli
cmp
cwtl
out
mov
ret
je
fistl
xchg
pop
mov
jnp
imull
out
subl
pop
in
into
mov
sub
outsb
sub
outsb
imul
or
dec
sub
mov
xchg
lret
ret
iret
jle
sbb
in
sbb
sub
push
add
or
into
fsts
shr
out
mov
pop
ret
in
outsb
fsubr
sbb
jb
fimuls
push
sti
push
ja
adc
dec
jl
jns
adc
sub
aam
adc
shll
push
inc
jle
mov
mov
pop
cmpsl
ss
std
test
mov
sub
or
inc
in
lret
adc
test
add
lods
arpl
lahf
pop
icebp
sbb
out
fimuls
mov
stc
dec
js
sti
mov
icebp
jp
sub
and
mov
inc
stos
mov
xchg
pop
mov
pop
lds
pop
dec
xchg
cmp
inc
mov
pushf
test
or
cmp
and
adc
xchg
sti
jbe
sbb
jle
adc
push
jns
pop
and
ret
pop
ror
xchg
push
sub
insb
mov
adc
xchg
outsl
dec
pop
clc
cmp
add
outsl
loopne
test
pop
sbb
std
push
or
inc
mov
push
sahf
fdivs
adc
push
cmp
cs
dec
xlat
movsb
jns
adc
lret
mov
iret
jne
xchg
les
shl
lahf
scas
sub
in
sbb
iret
push
or
mov
enter
and
lods
loope
adc
jb
xlat
int3
add
push
iret
ficompl
push
out
inc
jg
push
insl
xchg
lods
out
loop
lcall
add
es
fwait
mov
dec
mov
xchg
cmp
inc
sarl
stos
sub
push
jo
icebp
dec
mov
adc
xor
jle
je
pop
mov
jnp
enter
popf
push
cs
sub
add
ss
cmp
pop
in
out
fsts
xor
add
push
cld
pop
sahf
fmull
ljmp
out
adc
and
or
mov
loope
sub
pop
cmp
or
aas
in
pop
add
ljmp
scas
movzbl
pop
lds
cmp
rorb
mov
pop
nop
data16
fsub
das
cld
lcall
dec
pop
inc
movsl
sbb
push
sub
dec
cmpb
sbb
add
or
inc
insb
lds
icebp
and
sti
sbb
add
sbb
addl
aas
sbb
sub
insl
enter
mov
mov
add
xor
or
push
mov
jmp
je
loope
fiaddl
or
lea
rclb
scas
xorl
cmp
scas
cld
call
cltd
in
fwait
pop
lcall
test
push
sbb
add
adc
mov
ret
nop
mov
add
cld
mov
push
addr16
bsr
incl
scas
imul
cmp
movsl
call
lea
aas
inc
or
and
aam
dec
out
aaa
cs
xchg
pop
jno
lea
xor
or
jnp
lds
jnp
arpl
les
jge
outsb
sub
push
icebp
push
dec
cmp
cmp
mov
subb
inc
jbe
cmp
cmpb
xlat
mov
leave
add
repnz
out
and
cltd
mov
and
mov
jnp
push
add
xor
mov
pop
pop
sti
sti
lcall
mov
arpl
ret
dec
call
xor
mov
flds
add
sbb
inc
imul
iret
push
mov
into
pop
stc
push
imul
testl
jmp
sarl
sub
jnp
push
dec
sub
mov
inc
xor
std
scas
lcall
aas
gs
dec
push
repnz
jb
out
lret
push
icebp
mov
aad
not
pop
pop
sub
leave
add
xchg
push
jmp
gs
sub
test
sbbl
dec
mov
jne
cmp
xchg
push
and
int3
dec
cwtl
lods
jns
pop
xchg
sbb
loop
bound
adc
inc
test
in
jge
sti
push
push
ss
insb
ss
mov
push
cwtl
mov
add
push
sub
jle
in
xchg
sub
mov
sub
enter
iret
add
cmp
and
repnz
mov
aaa
pop
add
cwtl
stc
inc
jecxz
xor
mov
add
push
xor
imul
xlat
dec
xor
mov
jo
add
or
shrl
repnz
es
jbe
inc
aaa
cmp
mov
adc
or
rol
lcall
dec
ljmp
adc
push
cmpsl
pop
repz
imul
xchg
loope
int3
pop
mov
jmp
mov
mov
xchg
arpl
push
xor
sub
sbb
dec
push
dec
dec
push
out
or
jmp
push
mov
fimuls
inc
movsb
and
cli
or
push
add
int
xchg
sub
lock
push
call
outsl
in
mov
lock
out
xor
mulb
repnz
push
lret
insl
xor
test
mov
cli
addr16
int3
sub
outsb
mov
jge
ret
fs
cmp
mov
dec
push
or
outsl
fimull
std
rclb
mov
inc
stc
fsub
nop
pop
sub
mov
fldcw
xchg
mov
xor
xlat
lods
in
es
daa
movl
rcrl
cwtl
inc
loope
mov
test
xchg
mov
lcall
ret
inc
movsl
aaa
xchg
push
xor
pop
mov
mov
mov
fnstcw
pop
xchg
push
pop
outsb
sbb
daa
test
and
pop
std
cmpl
cmp
push
sahf
lea
mov
jae
lahf
in
movl
loope
dec
cld
and
pop
push
xor
cmc
xchg
es
mov
adc
pop
ja
xorl
dec
fildll
imul
pop
lahf
pusha
add
pop
mov
ret
xor
mov
inc
xchg
mov
mov
ds
mov
outsb
mov
xor
lret
jo
sbb
loopne
jno
jg
neg
negb
inc
dec
xor
inc
jne
push
cmp
les
ljmp
jb,pn
loop
or
std
push
mov
pop
xchg
dec
mov
mov
dec
sub
fmull
ficomps
fiaddl
aam
inc
pop
sbb
xchg
loop
int3
iret
sbb
popa
orb
cli
ja
enter
jmp
sbb
sbb
lods
cld
loop,pn
test
jge
cwtl
cmp
and
sbb
movsb
adcb
cmc
or
fs
jne
js
rcll
jo
iret
icebp
rol
mov
push
sbb
insl
rcll
mov
xor
push
sahf
jne
push
adc
sti
test
cmp
push
jecxz
jno
and
sbb
add
mov
mov
xchg
xchg
jecxz
and
out
adc
add
popf
push
jo
icebp
out
mov
out
and
int
imul
fwait
dec
inc
popf
adc
cmp
push
incb
push
cld
nop
icebp
cmpsl
jmp
daa
movsb
icebp
jae
loopne
add
icebp
xlat
adc
push
movsl
and
and
sti
xchg
movsl
and
mov
in
jg
mov
push
iret
jl
jge
adc
fnstcw
das
mov
pop
int
fnstenv
arpl
adc
out
mov
into
mov
fidivrl
mov
fists
lds
ss
test
leave
mov
pop
mov
inc
aaa
dec
or
mov
movsb
sarb
lds
andb
filds
jb
cs
pusha
jne
test
pop
adc
jge
or
cmp
cmp
push
xlat
cmpsb
fs
cmc
pop
push
popa
pop
aad
nop
mov
mov
push
mov
pop
lods
cs
call
xor
xor
int
fisttps
imulb
jb
add
scas
test
pop
mov
xlat
nop
push
inc
xchg
stos
outsb
add
lds
cli
dec
cwtl
lret
adc
pushl
fistl
xchg
fiadds
pop
and
add
bound
inc
add
es
push
cmpl
mov
push
xor
jl
shl
push
das
scas
andl
rolb
push
pop
cmpsl
xor
xchg
popf
mov
mov
xchg
mov
dec
jnp
std
fistl
testb
pop
jae
fwait
div
xchg
aam
xor
add
rcrl
mov
test
out
pop
testb
adc
xchg
les
jmp
out
mov
arpl
mov
mov
out
mov
mov
add
lds
mov
outsb
scas
or
inc
add
popf
xor
les
jo
mov
inc
dec
and
stc
pop
jbe
sbb
out
add
mov
jbe
sbb
cli
into
pop
dec
lods
mov
xor
lods
mov
mov
adc
ficomps
pop
sbb
sbb
mov
xchg
add
pushf
cmp
jecxz
mov
leave
xlat
dec
loop
jmp
mov
popf
mov
imul
movsl
loopne
lahf
lcall
cmp
insl
fs
mov
sbb
js
adc
sub
sbb
inc
xchg
notl
pop
aas
mov
add
movsl
pop
push
scas
cltd
arpl
sbbb
jb
cmc
fcmovnu
inc
lahf
push
int3
outsb
jp
jp
imul
ljmp
stos
adc
cli
outsl
jns
or
dec
sub
mov
push
xchg
das
stc
dec
mov
jmp
rcrl
insl
dec
mov
jne
cmp
dec
jmp
mov
les
push
insl
mov
pop
push
movsl
imul
inc
int3
jnp
cmp
aad
xchg
cmp
adc
leave
lcall
fcmovu
sub
sbb
inc
jmp
xchg
in
aaa
ror
cld
ss
dec
loopne
mov
out
cmpsl
push
mov
outsl
push
loopne
ret
cmp
mov
sub
shll
pop
adc
lea
ds
shlb
or
sti
xor
push
dec
add
push
lret
jp
gs
test
es
ja
mov
cmpsb
cmp
das
lea
or
sbb
jne
push
or
aad
lea
jbe
mov
adc
cli
mov
xor
pmaddwd
fcompl
cmpsl
cmp
xchg
cmpsb
mov
mov
in
fbld
sbb
adc
and
cmp
jno
stc
pop
in
mov
outsb
mov
aas
xchg
pop
lods
jl
dec
mov
ja
adc
mov
lahf
testb
lods
xlat
insl
jl
adc
sub
int
pop
cmp
movsb
push
outsb
movsb
dec
imul
jp
pop
das
xchg
mov
popa
and
and
push
add
out
pusha
loop
add
cmp
dec
fildl
test
jnp
scas
les
int
enter
sbb
aaa
insb
pop
and
mov
xor
in
inc
mulb
es
enter
pop
cmp
fistl
mov
aas
jns
sarb
mov
add
sub
or
test
mov
mov
sub
add
out
aaa
jp
jmp
and
xchg
leave
movsb
add
xor
mov
cmp
pop
xchg
gs
test
jns
sbb
push
sbb
imul
fadds
cli
cs
sbb
iret
xchg
das
or
and
adc
cmpsb
outsl
dec
je
sub
fidivrs
and
test
xchg
xor
imul
pop
fsubs
jmp
sbb
xchg
inc
test
jp
adc
or
aam
ffree
xchg
cmp
cwtl
pop
lods
into
sahf
mov
pop
movl
push
cld
add
pop
hlt
add
in
jle
sbb
enter
push
jmp
addr16
pop
rcrl
mov
sbb
sub
cmp
or
adc
lods
sbb
cli
cmpl
xlat
adc
pop
and
cs
sbb
cmp
and
aas
rorb
repz
jbe
mov
mov
rorb
xchg
mov
inc
insb
and
xchg
sbb
mov
dec
jge
push
inc
inc
or
inc
push
insb
insl
icebp
popa
xlat
sbb
pusha
bound
mov
push
das
dec
or
and
into
push
fists
sbb
popf
lock
clc
jp
sub
jbe
jo
fdivrs
jne
imul
push
push
inc
mov
or
ss
inc
loop
test
negb
sbb
push
pop
push
shlb
jbe
inc
cmpsb
jnp
push
test
pop
dec
sub
mov
push
xchg
xchg
dec
aad
pop
test
fucomp
clc
mov
or
aaa
rorl
xchg
dec
lret
jl
adc
sar
mov
lds
jl
daa
dec
mov
push
cmpl
mov
fiadds
push
pop
cmp
lods
cli
imul
mov
cmpsb
xor
ret
mov
mov
pop
scas
inc
push
shr
adc
lret
mov
sbb
jmp
insb
or
sbb
fwait
push
pop
mov
test
xor
insl
xchg
sarl
lock
cmpsb
pushf
shlb
mov
xor
mov
cmp
mov
loope
sbb
int3
mov
enter
ds
add
cs
xor
xchg
jo
les
pop
outsl
jnp
mov
cld
repz
xor
scas
cmp
sahf
bound
test
cmp
out
rcll
dec
scas
xor
dec
fstps
pusha
mul
xchg
sahf
sub
fwait
dec
xchg
pop
fwait
insb
sbb
cmpsl
sbb
in
adc
jmp
jae
inc
xor
ja
scas
jne
loopne
inc
ds
inc
pop
and
mov
in
xor
jp
sbb
scas
movsb
lods
pop
xor
pop
lcall
inc
fisttps
add
or
and
push
pop
movsl
adc
cmpl
jbe
stos
xchg
int3
mov
mov
sub
push
jbe
test
jecxz
cmpsl
out
add
je
mov
or
pop
enter
add
cltd
sub
jl
adc
pop
add
inc
subb
add
cmc
out
movsl
aas
mov
std
fnstsw
das
cld
lock
xchg
insb
cmp
in
test
sub
std
xor
adc
pop
idivb
rcr
rcrb
jmp
cld
sbb
dec
mov
repz
pushf
pop
frndint
or
push
test
pop
mov
push
pop
adc
dec
leave
jno
add
and
cwtl
xchg
in
repz
push
ds
jbe
mov
add
jbe
loop
or
inc
lret
ja
add
inc
pop
dec
stc
pusha
dec
sbb
jb
mov
mov
lods
imull
popa
cmc
mov
xor
bound
cmpsb
inc
xor
push
mov
mov
xchg
push
dec
ds
xchg
push
mov
es
into
and
dec
int
sti
pushf
dec
pop
or
test
push
call
jle
adc
inc
loope
mov
enter
mov
out
fstl
mov
fsubrl
loopne
adc
and
scas
pop
adc
jle
jns
adc
cmp
imul
adc
fcomp
jg
inc
pop
jmp
or
jb
fnsave
xchg
fbld
and
ljmp
inc
out
push
inc
subl
sarl
sbb
pop
mov
lds
mov
incl
lea
pushf
adc
mov
icebp
pop
insb
ficoml
mov
inc
xchg
push
js
fnstenv
push
std
xchg
xor
outsl
fsubl
mov
push
in
mov
das
clc
adc
cli
mov
sub
aas
fiaddl
jae
dec
idiv
sbb
stos
dec
push
xor
mov
mov
cmp
push
fnstcw
insl
jecxz
mov
inc
lods
clc
mov
loope
pop
push
movsb
mov
call
clc
cmpsb
xor
jne
jp
js
jne
add
test
jle
inc
rorl
add
shll
lcall
shll
fiaddl
mov
enter
lahf
fistps
xor
cmp
popa
outsl
loop
push
inc
ds
lret
push
outsl
mov
mov
cmp
mov
push
mov
shlb
push
rclb
add
test
dec
test
xor
mov
les
in
jbe
outsb
js
enter
daa
cmp
rep
aam
test
dec
add
gs
repz
arpl
pop
xchg
test
xor
push
stos
mov
scas
and
outsl
sbb
add
jp
add
stc
adc
mov
repnz
fdivp
les
mov
add
xlat
addr16
jmp
dec
sbbl
push
mov
into
leave
push
and
ror
inc
fnstsw
mov
jmp
sub
sbb
fistpl
mov
jo
popf
pusha
sbb
inc
cmp
dec
repnz
scas
and
aaa
addb
mov
lret
pop
aas
loope
ljmp
scas
mov
into
pop
or
push
mov
sahf
cld
mov
dec
xor
mov
cli
adc
push
mov
imull
lahf
fdivs
dec
je
mov
shrl
loope
in
cs
sub
popf
inc
movsb
sbb
adc
sti
push
fwait
jle
or
pop
push
jbe
xor
stc
cmp
push
ja
outsb
insl
mov
or
adc
stos
call
mov
sub
and
mov
ret
imul
and
lods
xor
or
jmp
nop
ret
mov
push
scas
push
xchg
aas
jmp
adc
data16
mov
lods
xchg
xchg
cmpsl
ret
stc
jle
sub
or
push
popa
mov
sbb
xchg
xchg
sub
mov
push
mov
leave
or
mov
mul
push
pusha
xchg
mov
and
scas
sub
fbld
repz
sbb
dec
push
repnz
jl
sbb
pop
popf
ret
repnz
ds
push
mov
pop
jle
repz
loopne
adc
mov
test
pop
jge
mov
push
cmc
jb
or
inc
dec
ror
pop
cwtl
jecxz
add
dec
scas
movsb
icebp
add
test
pop
pop
cmp
xor
inc
mov
cs
es
sub
int3
insb
imul
shll
imul
mov
data16
js
pop
and
loopne
int3
fcmovnb
jge
push
pop
test
cmc
and
mov
enter
xor
push
aaa
mov
inc
inc
sub
xchg
jns
push
sti
cmp
or
inc
aam
not
dec
mov
sahf
or
sub
pop
mov
fistpll
sub
shl
scas
add
inc
test
fdivl
jno
mul
xor
or
or
sbb
ljmp
and
jmp
in
mov
mov
push
dec
add
movsb
mov
scas
adc
in
cmp
ret
xor
sub
mov
sub
mov
mov
adc
lods
mov
mov
or
andb
outsl
push
cwtl
ret
add
bound
pop
push
jl
push
scas
mov
jle
scas
mov
test
jl
test
pushf
and
sbb
fldenv
xor
sbb
pop
sub
aam
leave
bound
sub
insl
in
test
jnp
mov
xchg
movsl
pop
jg
imul
push
insl
push
std
mov
outsb
dec
inc
sbbb
mov
bound
mov
imul
mov
mov
scas
push
adc
sub
jne
stc
push
es
lret
lcall
out
insl
and
sahf
ret
lods
mov
pop
inc
dec
mov
stc
in
pop
mov
xchg
mov
repz
mov
mov
xor
sbb
shll
inc
jle
xchg
xchg
call
enterw
or
mov
movsl
jecxz
int3
pop
lds
pop
cli
in
jb
pop
lds
sbb
or
push
inc
mov
sbb
mov
nop
cltd
test
pop
pop
dec
cmpsl
adc
sub
imul
adc
out
and
fsubl
je
repz
mov
js
das
xor
dec
outsb
gs
or
and
divl
add
incb
pop
imul
add
inc
sbb
hlt
fwait
fwait
jno
dec
mov
daa
out
int3
add
fiadds
hlt
mov
inc
and
pop
add
shl
sub
push
xchg
cmp
pop
fstpt
aas
leave
call
aaa
mov
gs
faddp
insl
add
sbb
push
in
xor
fwait
inc
add
fsubrl
addr16
pusha
and
inc
insb
sbb
addb
inc
scas
int
sub
xor
add
lods
je
das
daa
jae
test
fnstcw
enter
inc
add
fisubl
jmp
fsubs
mov
sahf
loope
jg
insl
xchg
fildl
in
rorl
nop
push
mov
add
movsl
movsb
mov
popf
xor
lods
pop
mov
inc
aad
dec
jae
adc
dec
jge
movsl
xchg
pop
jmp
loop
aas
mov
into
mov
cli
subb
in
cs
jae
push
lock
adcl
jp
imul
bound
lcall
mov
aad
fstps
in
gs
das
mov
je
jne
jb
cmp
aam
gs
and
pusha
and
push
jg
xchg
pop
into
mov
dec
xchg
movsl
dec
filds
ffree
xchg
adc
je
es
cltd
push
sbb
adc
pusha
scas
mov
adcl
pop
ljmp
and
test
leave
cmp
jp
loope
adc
sub
loope
cld
stc
or
pop
or
popf
inc
and
jecxz
pop
mov
fcmovne
popf
or
arpl
ds
sbbb
icebp
lea
push
pop
mov
dec
push
dec
bound
lds
jb
inc
xor
cmp
iret
bound
sahf
jo
sti
test
mov
xchg
adc
inc
test
cwtl
cld
pushf
aad
inc
ficoms
adc
pop
sub
outsb
mov
cli
test
insl
pop
shlb
cmc
lret
xchg
inc
mov
adc
sti
fwait
lret
push
add
mov
sahf
push
fdivl
mov
pop
in
and
cmp
mov
dec
inc
jecxz
or
inc
ds
stos
or
or
push
pushf
bound
js
cmp
cld
lock
fsubr
in
pop
or
ljmp
scas
push
sub
ljmp
inc
mov
in
jno
sub
pop
lods
pop
cwtl
push
and
xor
push
mov
and
in
dec
push
mov
clc
fmul
jg
xchg
dec
mov
sub
or
out
shr
ret
adc
sub
rorb
pusha
mov
mov
mov
pop
gs
mov
cmpsl
xlat
push
xchg
mov
and
js
pop
mov
insb
fimuls
shl
pop
mov
cmp
shll
push
push
adc
add
mov
fs
or
add
or
std
in
push
idivl
scas
mov
inc
mov
movsb
adc
and
jmp
mov
and
xor
inc
cs
lods
ds
jle
add
mov
xchg
cmp
mov
xor
je
test
mov
push
add
cli
push
push
dec
call
push
xor
out
icebp
into
out
push
or
hlt
cmp
lods
gs
cmp
movsb
pop
adc
adc
push
repnz
ds
out
scas
ret
add
sbb
dec
cmp
je
xchg
cmp
fwait
sbb
push
test
and
sbb
add
dec
xchg
jbe
stos
jl
lahf
mov
dec
es
mov
push
into
lahf
pop
fmul
notb
fistpl
add
mov
sbb
int
arpl
push
cld
adc
test
lcall
jb
pop
mov
lods
lea
movsb
cmp
aas
push
sub
in
les
mov
in
stos
or
sub
leave
mov
dec
fisttps
imul
push
data16
arpl
pop
in
pushf
ficoms
and
or
lahf
sbb
loopne
shlb
cmp
movsl
mov
push
test
xor
aaa
mov
jecxz
add
sbb
lods
xor
sbb
xor
adc
mov
sti
push
cvttps2pi
inc
cmp
inc
fcompl
mov
cmpsb
arpl
stos
mov
mov
std
push
mov
xchg
jo
out
addb
imul
dec
out
ret
sbb
cmp
test
pop
xor
cmp
pop
scas
mov
mov
fildl
jo
ja
xor
inc
mov
dec
hlt
das
andl
jp
dec
aad
sahf
mov
and
dec
outsb
inc
mov
sub
push
pushf
icebp
cli
pop
dec
push
add
call
jl
test
jns
test
dec
mov
and
popf
cmp
cli
mov
and
jl
push
loope
pushf
inc
sub
push
or
push
daa
cwtl
subl
mov
lods
loop
iret
mov
aaa
mov
mov
sti
lock
jnp
inc
je
add
push
jg
mov
jb
cmp
in
push
test
mov
nop
aad
dec
mov
sub
fs
sbb
fisubl
dec
loope
aam
pop
int
push
scas
shlb
aam
test
push
outsl
xor
inc
inc
jl
fcoml
fs
adc
fistps
push
push
fcomps
fstpt
mov
test
inc
jns
movsb
sbbl
mov
enter
mov
push
ss
sbb
sbb
in
das
xchg
cmpsb
push
mov
inc
negb
mov
add
jae
xchg
sbb
add
jbe
lods
jo
inc
and
lahf
gs
xor
es
lcall
fwait
mov
in
mov
sbb
scas
mov
push
call
sub
divb
hlt
xor
cmpsb
stc
rcll
or
aas
fcomps
shll
pushf
mov
addl
sbb
rcll
mov
lea
jnp
lock
fdivl
xor
sarl
adc
lds
xchg
es
jne
insb
push
movsb
mov
pop
xchg
inc
cmp
xchg
jmp
cmp
inc
pop
pop
pusha
out
adcb
hlt
loopne
insb
stos
pop
cmpsb
pop
fistpll
xchg
loope
scas
push
mov
or
out
inc
cld
pop
and
mov
testb
mov
add
loop
inc
ljmp
xchg
mov
outsl
mov
pop
dec
xor
push
lahf
cmp
mov
fisubl
xchg
inc
jo
xchg
xchg
repnz
insb
lods
pushf
jg
push
and
aaa
or
sarb
out
pop
sbb
xchg
shlb
cmpsb
mov
std
add
cmpsl
pop
popf
cmc
cmp
dec
dec
das
fcmovnu
enter
pop
outsb
lods
jmp
sub
scas
imul
push
in
lds
lret
outsl
stos
or
xchg
pusha
bound
mov
out
sub
inc
inc
push
cs
cmp
pop
add
jbe
push
lahf
push
inc
pop
cli
insb
ss
xchg
inc
dec
and
mov
cli
jne
mov
fwait
jecxz
ljmp
insl
int3
out
jp
xor
sub
repnz
lahf
push
mov
mov
mov
sysret
xor
scas
in
jmp
rcl
push
xchg
pop
sub
mov
pop
push
pop
pop
inc
cmp
stos
dec
sub
push
adc
fs
push
push
shl
sub
fwait
push
ljmp
add
xchg
lea
in
mov
bound
int3
nop
pop
xlat
xchg
insl
mov
sbbl
inc
xchg
dec
and
xorb
bound
sub
sbb
jge
jbe
lods
cmp
fisubs
add
xor
clc
xor
or
mov
and
xor
inc
stos
cmp
mov
popa
lahf
mov
mov
call
dec
sub
cmp
enter
daa
mov
shrb
jecxz
or
sbb
inc
stc
add
stos
mov
movsl
push
daa
dec
xchg
lcall
out
jb
mov
xor
test
jg
sti
push
adc
fists
fsub
sub
outsl
test
mov
sbb
and
shl
or
cwtl
and
sahf
xrelease
jns
sbb
adc
sub
loope
jmp
mov
cmc
push
push
sbb
mov
cltd
aad
bound
stos
shll
cs
jno
add
aaa
mov
fnsave
cmp
adc
cmp
enter
imul
pop
sub
aam
push
pop
cli
pop
js
out
dec
sub
push
mov
mov
push
push
into
jmp
popf
sub
les
mov
cs
in
data16
ret
dec
xorb
adc
fwait
jb
rcr
sarb
jl
rcrb
add
lods
lock
xor
sbb
inc
rorl
jns
in
lods
inc
mov
aaa
mov
jecxz
in
mov
mov
cmp
jl
pop
xchg
xchg
stc
out
cltd
jmp
repnz
in
mov
dec
stos
out
xchg
sub
fs
sti
jno
jbe
pop
push
test
cmpsb
insl
jecxz
sti
fld
test
adc
fbld
jl
sahf
jne
lret
sar
rcl
and
movb
mov
inc
pop
push
and
mov
fucom
xorl
shrb
push
mov
xor
cwtl
push
ja
in
xchg
daa
mov
xlat
xor
adc
mov
lret
and
lods
cmpsb
idivl
gs
add
pop
adc
push
sahf
pop
test
adcl
xchg
push
mov
mov
cmp
mov
cmp
cmp
adc
mov
inc
add
inc
shr
add
push
pop
leave
sbb
cmc
addr16
rcrb
lret
pop
mov
jle
cmp
std
push
pop
pop
lcall
int
int3
das
pusha
xchg
mov
lds
cmp
mov
adc
in
xchg
jo
int
dec
xchg
adc
iret
inc
cld
in
cltd
loopne
mov
pop
push
mov
enter
fsubrs
stc
jle
popa
mov
mov
movsl
mov
fistpl
push
xchg
into
mov
or
push
std
push
adc
mov
inc
inc
rorb
mov
mov
and
dec
gs
sbb
inc
cmpsl
pop
int
or
jmp
arpl
fsubrp
aam
mov
pop
adc
xchg
movsb
add
pop
test
aas
orl
das
adc
pop
mov
cmpsb
jecxz
in
push
dec
test
rcr
adcb
xchg
mov
retw
dec
mov
push
imul
mov
jbe
inc
outsb
mov
es
mov
dec
push
fdivr
mov
dec
dec
lcall
cmpsl
mov
cmp
int
mov
dec
cmc
popa
xor
lcall
fidivs
push
outsl
sbb
or
jp
add
pop
ljmp
xchg
mov
lahf
push
mov
enter
in
rcrb
add
test
push
inc
mov
cmpb
popf
ret
or
les
lret
ds
iret
cmp
out
push
icebp
jns
mov
cs
icebp
sub
daa
or
repnz
iret
dec
dec
icebp
clc
test
js
mov
xchg
mov
cmp
shlb
addr16
adc
sub
mov
xlat
inc
mov
pop
xor
xchg
xor
cmc
fdivp
pop
cld
xchg
sti
das
push
mov
int
push
jge
xor
std
xor
inc
fdivs
or
cltd
sbb
add
mov
sahf
or
aas
imul
adc
xor
pop
rcrl
je
cmp
rcrb
test
fsubrl
pop
inc
in
std
pop
inc
lret
call
inc
aas
loopne
pop
es
push
sub
arpl
xchg
in
dec
mov
fs
and
sub
xor
jl
jp
js
cmp
out
ret
imul
and
push
loop
fsts
out
pop
adc
stos
mov
stc
in
popa
out
push
adc
daa
test
les
mov
out
mov
cwtl
fstpl
scas
xchg
lahf
push
subb
mov
mov
lahf
cmp
push
popf
iret
and
sahf
popa
cli
push
xor
lods
sub
sbb
cld
xchg
jnp
xor
pushf
inc
push
mov
inc
fucomi
in
sbb
cmpb
in
scas
ret
out
dec
imul
adc
xlat
cltd
sti
and
xchg
adc
or
jge
mov
xchg
shlb
lods
sbb
push
pop
shrb
pusha
or
or
cmp
lock
icebp
imul
sub
loop
adc
idivl
flds
mov
fcomp
test
fwait
sub
mov
in
and
adc
mov
lahf
int3
jmp
ret
jnp
sub
aaa
cmp
ss
inc
pop
pop
das
aad
cli
fldl
dec
aad
jb
lcall
push
cwtl
icebp
out
mov
insb
daa
dec
lea
stc
fidivrs
mov
hlt
xor
shl
jnp
mov
mov
push
mov
mov
jp
test
fs
jecxz
ds
xor
cwtl
jp
jmp
call
mov
pop
daa
lret
cmp
xchg
xchg
sbbl
adc
in
dec
dec
and
andb
push
rcrl
push
dec
cltd
xor
add
out
and
jl
xlat
dec
ret
jmp
test
sub
push
int3
iret
lahf
mov
mov
mov
imul
imul
xchg
pop
mov
lcall
fsubs
notb
xor
inc
inc
rclb
inc
arpl
rolb
frstor
sbb
mov
out
push
cmp
scas
bound
xor
push
mov
pop
in
in
leave
cltd
or
dec
jge
lods
add
ret
pusha
es
pop
gs
sub
inc
outsb
xor
xor
mov
jp
dec
negw
aad
fnstcw
mov
and
xchg
add
dec
gs
cs
aaa
cwtl
mov
daa
mov
movsb
insl
add
gs
aam
sub
mov
mov
mov
sbb
andb
pop
ret
scas
dec
inc
mov
rcrl
clc
push
xchg
xor
rorb
cwtl
out
sbb
inc
mov
jecxz
in
aas
pop
jo
faddl
fistl
or
jbe
mov
mov
in
jle
inc
addr16
negl
rorb
test
fwait
add
fistps
cmc
and
and
aam
jb
mov
mov
scas
sub
in
pop
lock
mov
das
fsubl
mov
lret
fsubs
aad
xor
xchg
nop
mov
mov
cwtl
jne
rolb
dec
sarl
mov
mov
sahf
jmp
push
iret
adc
push
xor
jge
xor
pop
pop
and
addr16
or
adcb
int
addr16
lret
pop
xorb
xor
jo
dec
mov
dec
sbbb
and
je
mov
dec
dec
stc
dec
lock
stos
mov
repnz
mov
push
xchg
rcrb
push
arpl
inc
mov
aam
push
cmp
stc
dec
imul
in
mov
and
in
dec
and
lret
dec
add
fwait
mov
out
jge
xor
push
test
fimull
in
fidivrs
xchg
bound
push
mov
jmp
mov
inc
sub
sub
int
fbld
pusha
out
aaa
and
inc
fldt
mov
scas
mov
lock
sub
rcrb
ja
mov
adc
xchg
xor
lcall
cs
sbb
aaa
pushf
inc
mov
mov
mov
test
xchg
sbb
mov
cld
pop
mov
pop
daa
test
movl
sahf
adc
out
lcall
xor
mov
cmp
stos
scas
pop
xchg
mov
and
or
mov
jo
ljmp
push
pushf
mov
mov
sub
in
fptan
jl
jle
lock
add
mov
test
fwait
inc
mov
icebp
test
adc
or
stos
add
xor
xor
cmpb
add
cmpsl
or
adc
es
pop
out
int
fadds
shll
and
or
stc
in
adc
je
fsubr
dec
xchg
or
mov
push
and
sub
adc
fiadds
int
xchg
cwtl
das
cltd
cli
fadd
outsl
fsubrl
lcall
mov
xor
lock
jo
inc
push
fs
xorps
hlt
cltd
movsl
pusha
inc
into
iret
xor
jg
jge
imul
test
cmp
stos
repz
stos
push
xchg
call
mov
sbb
ss
addl
push
jg
inc
mov
inc
mov
push
lds
imul
jmp
pushf
mov
mov
les
inc
or
aad
hlt
adc
out
mov
jle
push
mov
cld
cld
rol
mov
hlt
out
push
dec
xchg
sbbl
push
ficompl
pop
leave
lds
loopne
xchg
rcl
mov
adc
js
out
cmpsl
push
int
pop
lahf
pushw
or
shl
add
or
sbb
sbb
movsb
scas
insb
int
jge
push
or
sbb
jbe
adcb
xchg
adc
inc
adc
pop
pushf
inc
lcall
daa
lret
in
add
adc
mov
xorb
xchg
idiv
sbbb
mov
adc
lcall
sub
jbe
mov
aas
fwait
test
in
pusha
mov
cltd
dec
xorb
insl
or
inc
mov
mov
out
loopne
cld
mov
or
ret
test
fs
mov
adc
in
cwtl
dec
ja
mov
stos
stos
mov
cwtl
shrl
pop
inc
call
pop
loopne
rcr
scas
jns
sub
cmc
lret
lds
jno
decl
es
cmp
jns
fst
lahf
xchg
cmp
mov
jo
mov
mov
jne
sub
add
dec
es
scas
out
cmpsl
jmp
dec
sbb
shlb
xchg
imul
mov
xlat
mov
mov
inc
int3
insl
push
cmpsl
icebp
or
pop
adc
inc
push
fs
fistl
loopne
push
in
fwait
push
jmp
lds
incb
cmp
int
jae
mov
mov
dec
push
mov
cmp
nop
leave
out
movsb
das
xor
cmpsl
stos
clc
mov
cmp
adc
aad
sub
xchg
das
mov
pop
mov
out
loopne
pusha
out
xchg
mov
cmp
pusha
jmp
hlt
repnz
xchg
int3
fldt
adc
cli
mov
outsl
out
loop
iret
sbb
scas
push
xchg
xor
sahf
leave
push
pop
fdivrp
jle
push
das
test
xchg
jge
add
pop
popa
jb
mov
push
iret
push
mov
sub
shl
lods
iret
fidivs
push
dec
lds
sbb
ja
mov
pop
push
adc
mov
mov
stos
inc
imul
lds
push
stc
sub
loopnew
sbb
xor
mov
fs
divb
mov
or
aad
lcall
sub
xor
mov
call
adc
mov
sub
cmp
cmp
shrb
jg
les
fstps
fistpll
dec
cmc
iret
repz
fldcw
pop
cmp
fmulp
pop
xchg
sub
mov
inc
inc
jb
data16
xchg
jmp
jle
jmpw
rcll
and
fldcw
sbb
inc
mov
sub
psubw
inc
adc
std
xor
or
dec
lods
dec
sub
fnstsw
jg
sbb
jg
add
jb
iret
cmpsb
cmp
jno
dec
in
jne
repz
cmp
aad
inc
pop
jno
xchg
dec
cmc
sbb
mov
mov
int3
xorl
xor
dec
imul
test
xor
sub
stos
rol
pop
int3
popa
popa
lret
push
dec
mov
adc
test
inc
cmpsb
jo
or
push
push
mov
add
jnp
js
sarb
dec
mov
mov
xor
and
pop
out
inc
push
or
cs
jns
or
seto
and
xchg
cmpl
or
or
xor
xchg
mov
mov
push
lret
xlat
dec
rcrb
aad
pop
cmpsl
jb
icebp
dec
jb
out
push
vmovsd
adc
push
xor
in
push
sub
pop
adc
lret
inc
xchg
add
push
nop
dec
mov
lret
mov
add
mov
out
movsl
mov
dec
out
adc
push
pop
setns
cmc
xor
pop
jmp
push
inc
cmovno
loope
popf
xchg
stc
aad
aaa
and
jae
aas
repz
ret
and
addb
jb
sbb
test
dec
cltd
enter
lock
add
mov
dec
sbb
pushaw
mov
mov
or
sahf
xor
gs
sub
pop
push
xchg
cs
pop
add
popa
mov
and
dec
repz
xor
stc
mov
mov
and
inc
jmp
mov
fstpt
sbb
cmpsl
mov
cmp
in
sbb
inc
mov
ss
xchg
outsb
cwtl
movsl
popf
inc
or
rcll
test
call
xor
test
scas
push
push
inc
arpl
je
movsl
fnstsw
aad
dec
imul
pop
test
frstor
adc
push
insb
mov
cltd
push
mov
test
dec
lret
pop
inc
mov
xchg
jno
lret
or
fildll
or
push
xlat
xor
ret
popa
jns
jecxz
lahf
cmp
enter
fstps
iret
mov
add
mov
dec
pop
push
rclb
xor
arpl
jb
cld
shll
pop
mov
lcall
test
sub
or
sbb
mov
sbb
and
shl
push
and
out
clc
xor
and
inc
call
jnp
jnp
adc
ret
sub
ljmp
stc
cmp
ficomps
pushf
je
lock
xchg
adc
and
add
jno
out
sub
rorl
push
aam
hlt
data16
or
add
mov
add
loopne
sub
insl
jb
adc
test
or
mov
push
dec
loopne
into
das
dec
and
or
outsb
daa
out
pop
ret
mov
pop
sete
inc
push
nop
les
push
jb
xchg
sub
and
cmp
test
call
pop
mov
iret
sub
ret
pop
push
or
pop
out
add
scas
fwait
popa
cmp
sub
sbbl
xor
hlt
iret
jnp
push
std
outsb
rcr
and
and
fildl
mov
jp
loop
dec
cli
test
sahf
out
xor
cmp
mov
subb
subb
stos
mov
rolb
rorl
add
push
pop
and
stos
jl
pop
mov
pop
adc
fildll
and
bswap
ss
test
jo
xor
mov
fldenv
inc
inc
inc
jne
outsb
outsb
test
aam
push
mov
outsl
or
rcrb
imul
jmp
jne
and
jb
cmp
repnz
cld
sahf
adc
mov
or
notb
xlat
popa
dec
and
mov
mov
aas
lcall
add
cmpb
cmp
cld
dec
pushl
cmp
out
xchg
dec
fs
sbb
pop
xorw
push
fisubrs
adc
jg
mov
scas
xchg
mov
pusha
sub
les
loope
shl
jmp
xor
cmp
in
xor
and
dec
sub
outsl
test
dec
cltd
pop
cmc
or
push
mov
xchg
cwtl
jge
or
arpl
add
mov
dec
icebp
subb
int
mov
pop
push
in
cmp
inc
inc
ret
lea
pop
xlat
mov
popf
inc
add
mov
jmp
sarb
pop
xor
adc
addb
aam
mov
xor
ja
sarb
or
es
lods
insb
push
testb
jae
cmpsl
fs
maskmovq
testl
in
stos
cmp
insb
dec
add
scas
test
sbb
shrb
inc
loopne
lcall
jge
push
pusha
jne
outsb
out
test
adc
jmp
cmp
outsb
lret
pop
jno
stos
sbb
jmp
sub
lock
in
push
xor
xchg
aaa
jno
jmp
xor
int
add
pop
jecxz
cli
mov
int3
xor
loop
cs
or
sbb
mov
adc
pop
jae
cmp
mov
cmp
jno
sub
add
xchg
mov
jmp
call
test
inc
aas
pop
fs
fdivrl
pop
add
repz
call
mov
aaa
mov
jo
adc
cwtl
shlb
adc
mov
fcoms
jmp
sti
mov
in
pop
int
sub
into
cmp
add
fldcw
push
adc
xchg
add
ds
sub
mov
cmc
lds
insb
xchg
scas
sti
ljmp
cmp
popa
loope
fsubrs
enter
sar
pusha
hlt
or
cltd
xchg
sahf
enter
push
roll
pushf
sbb
mov
cwtl
clc
movsb
cmpsb
test
pop
sub
jp
in
test
jl
negl
inc
mov
mov
cmp
pop
cmp
or
mov
sahf
adc
daa
mov
add
sbb
cmp
loope
adc
iret
fidivrl
pop
and
aas
in
mov
lahf
fs
test
or
or
xchg
mov
push
lret
mov
neg
push
lds
dec
dec
lahf
scas
cs
sbb
xchg
xchg
mov
mov
jg
and
loope
lahf
or
test
fdivrl
mov
xor
scas
call
lds
xchg
cmpsl
and
adc
es
nop
sub
jo
xor
sub
ret
lret
data16
aas
enter
push
push
mov
or
add
push
hlt
and
push
xlat
movsl
cmpsl
inc
mov
sahf
pop
jmp
jge
cmp
test
mov
jo
std
fs
cmp
add
dec
or
cmc
stos
jecxz
test
push
imul
int3
jns
cmpsb
ret
loop
add
sbb
fwait
push
jp
movsl
pusha
aad
gs
push
dec
popf
mov
xor
jnp
xor
pop
or
pop
insl
iret
icebp
push
mov
or
mov
incb
orl
adc
xchg
cmp
xchg
mov
popa
mov
and
xchg
ljmp
cmp
setbe
and
icebp
gs
or
or
xchg
shll
inc
cmpl
mov
in
jnp
push
jae
stc
add
aad
jge
fisubs
inc
test
mov
adc
xchg
jae
push
xchg
daa
aaa
jb
adcb
adc
xchg
cmp
jmp
dec
daa
push
and
lret
mov
inc
mov
mov
jbe
xchg
flds
pushf
in
xchg
add
push
inc
mov
push
add
jb
rcrb
imul
fildl
mov
shlb
sbb
std
cmpb
gs
aam
add
arpl
mov
dec
xchg
pusha
mov
gs
lret
jp
enter
ljmp
mov
or
repnz
mov
add
std
xor
mov
scas
iret
push
sub
sub
push
pushl
mov
outsb
mov
adc
xor
xchg
ljmp
mov
jo
enter
insb
fs
rcll
or
add
push
testb
adc
pop
pop
mov
clc
ficoms
jmp
popa
inc
mov
cmp
push
je
stc
mov
sarl
out
mov
adc
xor
xor
cmp
hlt
addl
sarb
inc
into
ficoms
les
ds
mov
popf
mov
sarl
mov
pop
pop
sbb
jns
sub
push
sti
shrl
repnz
pop
nop
aas
in
insb
xor
mov
mov
lahf
add
sub
test
fimuls
lret
mov
jecxz
popf
test
ss
pop
adc
aaa
pop
imul
mov
jbe
loopne
xchg
stos
adc
mov
fstpt
pop
mov
mov
push
je
stos
jne
shrb
add
lahf
repnz
jae
aad
sub
xor
adc
xchg
scas
lret
test
xchg
addb
cld
in
aad
test
jo
sarl
ja
imul
out
push
orb
orb
gs
pushl
push
sar
mov
inc
ret
je
jb
jecxz
jle
add
pop
int
mov
fistps
pop
leave
xor
xor
leave
in
push
insl
stc
fdivp
lret
cmp
xchg
or
lcall
mov
push
dec
adcb
test
mov
and
lret
fdiv
mov
hlt
inc
shlb
inc
stos
hlt
scas
and
mov
sbb
outsb
inc
xlat
and
popf
mov
je
sbb
call
add
jmp
xchg
in
dec
sub
add
sub
push
sub
arpl
out
dec
sbb
je
push
jg
jo
fcoml
pop
sbb
sub
adc
mov
in
sbb
and
cltd
es
mov
mov
rolb
push
mov
cmp
rol
adc
lret
lcall
mov
data16
jle
sub
repnz
mov
push
push
or
stos
movb
mov
movsb
jnp
pop
stos
push
sahf
push
jo
mov
les
mov
cmpsb
pop
mov
cmp
iret
cmp
xlat
pop
leave
mov
fs
cmpsl
pop
mov
jmp
outsl
pop
dec
arpl
aas
or
xor
mov
mov
jb
add
clc
sbb
sbb
mov
dec
ljmp
xor
and
stos
push
dec
xchg
test
test
popf
lahf
xor
addr16
out
sub
fisubl
sub
int3
inc
fcmovu
je
xor
mov
adc
popf
and
mov
lret
jg
and
add
sahf
mov
jle
test
inc
sahf
imul
pop
dec
cmp
push
rcll
push
pop
scas
xchg
mov
adc
fisubl
ficoms
neg
cld
push
push
mov
push
imul
cmpsb
cltd
popf
std
jnp
mov
repz
adcb
fnclex
mov
outsb
mov
cld
icebp
xor
jbe
add
push
sbb
inc
push
and
mov
dec
mov
adc
lret
xor
jl
mov
iret
into
dec
movsb
out
mov
hlt
movsb
ret
repnz
insb
mov
xchg
mov
push
mov
cmp
insl
push
aaa
std
sbb
xchg
cmpsl
push
ret
or
stos
out
jecxz
mov
dec
addr16
sbb
sub
or
sbb
cli
dec
mov
lods
sub
inc
jae
scas
and
cmovno
mov
leave
push
int
ss
lods
imul
int
shrb
or
xchg
mov
inc
movl
xchg
movsl
stc
loop
loopne
mov
mov
out
mov
mov
je
xchg
stos
or
sti
cli
aam
inc
scas
je
push
jb
ja
pop
and
mov
ficoml
pop
or
pop
int
repz
and
pop
shlb
pop
pop
jns
cmp
addr16
xchg
mov
or
cmpsb
add
and
adc
aas
pop
pushl
in
mov
popf
mov
ds
ds
gs
jne
xor
iret
add
paddsw
pop
xchg
pop
inc
ret
sbb
sbb
jns
push
outsl
clc
add
jmp
inc
or
cmpsb
dec
xchg
adc
jnp
dec
movl
int
loop
out
adc
add
dec
or
lds
movb
adc
cld
dec
mov
sub
dec
cmp
adc
mov
push
inc
pop
mov
inc
adc
adc
xchg
test
push
sub
mov
inc
push
lock
test
arpl
sahf
scas
jge
pop
test
test
cli
sub
leave
gs
loop
adc
inc
mov
dec
cmpsl
sbb
xor
fsubs
cmp
rcrb
sub
jl
jg
add
push
sub
adc
movsb
inc
scas
repnz
add
scas
fldt
clc
fs
lea
pop
jno
xchg
popa
dec
ss
arpl
popf
cld
stos
mov
jb
cs
jb
ret
outsl
cmp
inc
ljmp
inc
test
fsts
loopne
pop
test
enter
xchg
out
cmp
out
add
adc
ljmp
add
add
clc
adc
repnz
fsts
cmp
jnp
sbb
xor
out
adc
jns
jbe
push
out
adc
lods
fcomps
mov
subl
mov
addr16
gs
or
fldt
mov
adc
push
pop
xor
loopne
lahf
repz
jg
out
adc
and
mov
dec
xor
push
aad
cltd
jnp
mov
mov
sbb
shl
xchg
sub
iret
pop
aam
in
and
bsf
mov
xchg
mov
into
or
inc
push
and
sbb
shl
daa
test
push
aas
xchg
arpl
hlt
xchg
sub
pop
stc
adc
mov
lcall
xor
sub
cmp
std
lcall
push
sbb
dec
inc
xlat
pop
cmp
inc
sub
je
or
add
xorb
iret
sarl
subb
pop
ja
and
fsubrs
into
or
lret
ret
pop
cld
cmp
jge
add
and
jae
pop
xlat
inc
xor
add
sub
sub
inc
fld
inc
ret
and
gs
imul
sub
adc
push
lahf
sbb
and
push
js
adc
movsl
add
loope
daa
stos
movsl
push
jae
sbb
cmp
sahf
mull
push
dec
je
adc
pop
xor
xor
mov
or
loop
les
xor
dec
ret
dec
mov
inc
aaa
xlat
cmp
lcall
aam
add
push
jns
jmp
mov
cmpsb
sub
cmc
cmp
cmp
jge
mov
std
push
push
and
mov
push
cmp
cmp
dec
insb
daa
jae
add
in
scas
or
mov
incb
pop
idivb
sub
jb
inc
orb
pop
fistpl
jae
jbe
fs
stos
sbb
cmpsl
pop
movsb
jp
nop
xorb
cmp
rcll
xchg
mov
hlt
sub
xor
cld
cmc
cmp
into
or
push
cltd
mov
cmp
xchg
dec
pop
cmpsb
jecxz
mov
imul
cmp
push
sub
push
mov
addb
adc
mov
jnp
je
pop
neg
pop
dec
cmp
sbbl
out
loopne
jmp
push
stos
push
push
cmp
fcmovnbe
mov
sub
jbe
mov
std
outsl
jns
push
repz
lret
shrl
mov
stos
or
lret
rclb
fcmovnu
mov
stos
sub
sbb
lods
xchg
mov
pop
pop
sub
rep
je
enter
test
cmp
vpmuludq
inc
das
nop
lods
imul
sbb
pop
sub
add
aaa
pop
push
jmp
pop
or
sub
xchg
or
push
jns
mov
lods
push
sbb
or
mulb
inc
decb
inc
fisttps
sub
ljmp
cmp
jmp
jmp
out
xchg
cmp
jbe
cmp
jge
hlt
mov
ds
shll
dec
mov
ret
pusha
add
out
adc
push
stos
xchg
popf
adc
pop
shl
cwtl
dec
lods
jnp
cld
ljmp
dec
mov
inc
mov
mov
pop
pop
lret
jge
ds
aas
jge
mov
mov
sub
bound
pop
icebp
cmp
lock
imul
cmp
dec
cltd
inc
lret
mov
add
sub
or
sub
sub
pop
or
in
jp
js
pop
cmp
outsl
aas
cmp
into
push
dec
xchg
repz
xor
push
sbb
jns
dec
stos
xchg
imul
mov
popf
lret
sbb
jb
stos
imul
ds
or
vphsubwd
lahf
jbe
cltd
in
adc
dec
scas
rcll
adc
fistps
mov
sahf
aaa
lret
addr16
aam
repz
sub
cmc
cltd
or
mov
and
jbe
popa
dec
cmp
mov
jb
jnp
aad
and
jp
ss
mov
adc
into
out
je
adc
test
insl
xchg
addb
leave
and
int3
and
imul
fimull
push
stos
jmp
dec
jl
mov
movsb
xor
and
aad
test
push
inc
and
add
xchg
mov
inc
repz
xor
pushf
bound
jl
lret
pop
xlat
push
scas
adc
call
jle
outsb
jne
and
divb
out
pop
xor
and
pop
mov
gs
rcrb
xchg
sub
inc
mov
in
cmp
or
icebp
xchg
fcomps
icebp
int3
loopne
and
adc
adc
hlt
push
dec
sbb
xchg
push
dec
imul
or
pop
mov
inc
pop
les
push
cmp
dec
mov
into
pop
addr16
fxch
push
mov
adc
fimuls
xor
jnp
jne
mov
int3
inc
ret
push
repz
js
sub
inc
icebp
push
add
sub
jge
test
lock
jge
setg
jg
xor
or
inc
jnp
xrelease
shll
pop
aad
mov
and
mov
xor
jnp
pop
sbb
enter
push
pop
test
fistpll
xchg
cmpsl
shll
lret
and
xor
or
lods
push
cmc
inc
sub
ss
inc
stc
inc
das
andb
adc
xchg
stos
ljmp
cmp
stos
sbb
lahf
push
mov
add
xor
pop
sub
adc
dec
mov
loope
pop
stos
jno
icebp
loop
adc
out
cmpsl
inc
out
dec
xchg
xchg
lret
fstps
inc
jl
test
enter
into
sub
mov
xor
call
fisubs
cmp
das
xorb
mov
divl
and
imul
mov
jl
xor
loop
out
les
int
ds
adc
sahf
divl
lahf
rorb
loope
test
sub
aad
clc
mov
movsb
sub
cmpb
mov
insl
push
popa
pop
xchg
mov
mov
call
mov
test
add
cmc
lret
sub
cmp
out
inc
sub
sbb
mov
adc
xor
adc
inc
imul
pop
loopne
mov
rorl
jg
pop
jg
lea
push
mov
mov
pop
iret
fstps
xor
loop
repz
cmp
aaa
fmuls
aam
jnp
lock
mov
inc
push
icebp
sub
shlb
or
lret
mov
cmp
addr16
das
add
lret
mov
lods
jecxz
lcall
jne
push
loope
and
mov
push
mov
xchg
addr16
lret
pop
adc
in
dec
mov
dec
mov
stos
jp
jne
jae
aam
xchg
mov
jp
push
fidivs
pop
std
or
leave
push
jmp
test
mov
and
fstpt
mov
push
std
xchg
je
pop
and
mov
sub
loopne
cmp
mov
xor
gs
xor
out
sub
cmp
fstpt
xchg
pop
insl
ja
bound
in
sarl
aaa
out
popa
insb
push
cmp
pop
xchg
or
xchg
sbb
dec
mov
push
jge
push
fwait
imul
cltd
fdivrs
stc
push
and
nop
push
ds
das
fistpll
icebp
les
inc
and
or
push
ss
jo
cmp
bswap
hlt
adc
repz
adc
jbe
cmpsb
jns
jmp
or
aaa
in
test
jl
sub
dec
push
add
mov
hlt
mov
or
xor
push
rol
insb
dec
and
jg
jnp
dec
ja
dec
cmp
fnsave
jno
pop
imul
push
pop
loopne
ja
jno
data16
push
sbb
xchg
xor
xor
push
dec
loop
cmp
fistps
mov
jbe
outsb
dec
sbb
jmp
int3
cmp
pop
cmp
sbb
inc
dec
cli
or
push
xor
in
mov
js
pop
and
adc
add
jge
push
leave
and
lods
mov
xor
aad
dec
test
in
push
push
pop
dec
mov
lcall
pop
out
addl
sti
movsb
push
push
stc
jg
cwtl
mov
gs
sbb
mov
into
aam
imul
xor
fwait
and
repz
mov
sub
aam
lcall
out
imul
fstps
leave
rcll
mov
pop
loopne
cmp
in
loop
arpl
jmp
stc
or
stc
data16
sub
aaa
sarb
dec
das
jne
mov
adc
dec
pop
fucom
jo
pop
push
std
cmp
and
sub
mov
ljmp
call
jecxz
mov
bound
mov
out
mov
mov
mov
inc
adc
lahf
or
lret
movb
data16
xchg
in
ljmp
sub
xchg
subb
pop
in
fcompl
std
dec
xor
cmp
lods
inc
rcrl
inc
or
adc
jmp
sub
jns
in
lock
rolb
sbb
cmp
ficomps
inc
lret
lcall
aad
jmp
int
es
dec
ja
repz
cmpsl
and
repnz
add
pcmpeqw
dec
push
mov
leave
fwait
mov
mov
pop
jecxz
ret
cs
mov
sub
mov
inc
rcr
inc
sub
push
or
jp
mov
gs
es
ljmp
sub
mov
out
test
inc
sub
or
jns
filds
fs
or
mov
mov
push
addr16
fcmovbe
jmp
jle
int
in
ss
in
jno
test
cmp
xor
xor
jge
jo
ss
jmp
xchg
inc
sbb
pop
insl
jne
jle
insl
xor
fcmovne
or
outsb
sbb
adc
aam
fs
jl
inc
cmp
shr
cmp
jge
and
push
jl
in
out
xchg
mov
pop
inc
sbb
sti
push
mov
fcom
mov
push
out
cli
sbb
jbe
pushf
xlat
cmpsb
nop
adc
adc
fisubl
and
popf
dec
shlb
sub
adc
add
add
cmpsl
int
and
gs
sub
popf
pop
mov
outsl
out
movsl
in
sbb
ds
sbb
sar
repnz
mov
sbb
mov
xor
addr16
ret
and
fimull
mov
pop
push
test
cmp
mov
inc
outsb
lcall
daa
push
sub
sbb
mov
adc
and
or
pop
pop
xchg
lods
fisubs
stc
mov
cld
lcall
mov
cmc
jl
sbb
fld
inc
jb
lret
icebp
test
test
jmp
sbb
add
pop
cld
in
cwtl
push
xchg
leave
adc
hlt
shrb
popf
push
pminsw
je
aam
ret
inc
cwtl
in
pop
in
nop
test
xor
das
add
out
int3
arpl
sti
mov
mov
xlat
not
inc
xchg
jnp
jns
inc
insl
std
incb
mov
add
into
in
cmp
jne,pn
mov
ljmp
call
inc
and
push
mov
cs
fadds
dec
shrl
xor
mov
xchg
sub
or
sbb
lcall
loope
outsl
xchg
int3
sbb
cmp
and
repz
arpl
out
stc
add
sub
and
test
ss
pop
pop
outsl
xor
jno
xor
les
mov
lds
pop
mov
cmpsb
sbb
fstps
cmp
das
hlt
pop
fisubrs
int
add
dec
popa
inc
ds
jg
xor
ret
cmpsb
mov
flds
fldcw
xor
add
jnp
insb
xor
popf
mov
xor
jmp
idivb
loopne
push
pop
hlt
stos
nop
test
gs
and
fwait
inc
cltd
out
xchg
adc
cmp
std
xor
jge
pop
outsl
popa
sahf
test
outsl
or
movsb
mov
dec
scas
lahf
mov
dec
jmp
xchg
jbe
add
mov
cmp
add
aam
lea
dec
xchg
or
jnp
and
shrb
hlt
cmp
test
out
mov
push
push
xchg
xor
ret
cmp
dec
mov
mov
insl
pop
js
inc
mov
mov
fildl
jns
leave
dec
lds
jo
insl
hlt
sti
dec
mov
or
jmp
mov
lods
imul
xor
jno
sub
iret
dec
xchg
sub
xor
jb
xchg
push
xchg
pop
outsl
mov
in
push
and
jne
xor
mov
pop
pop
jae
mov
fwait
pop
scas
adc
ret
pop
push
testl
fnstcw
adc
push
popa
or
push
xchg
inc
push
sti
pop
leave
aaa
mov
mov
push
stos
sbb
or
lods
sub
mov
jecxz
xor
mov
mov
hlt
subl
mov
xor
popf
outsl
or
loopne
lods
push
outsl
hlt
idivb
lcall
stos
popa
dec
push
push
ds
movb
popf
xor
outsl
stos
inc
jmp
sti
push
cli
inc
into
pop
or
push
inc
adc
inc
imul
mov
testl
sub
sbb
subb
imul
fimuls
jge
les
popf
dec
hlt
cmp
xchg
xchg
lods
push
cltd
dec
mov
fnstcw
xchg
sub
cs
loopne
fwait
hlt
les
jg
lret
lret
push
pop
adc
ljmp
xor
test
pusha
in
xor
jg
jmp
mov
mov
js
aad
jmp
mov
add
scas
arpl
xor
and
jo
lret
mov
and
andl
pop
test
in
in
das
pop
push
idivl
mov
push
or
cmp
mov
and
add
imul
mov
pop
mov
dec
rolb
xchg
push
sbb
sbb
xchg
xchg
jno
sbb
inc
pop
cmp
xchg
xchg
in
inc
movsb
jbe
pop
iret
xor
stc
and
and
aad
cmp
dec
dec
in
out
pop
out
jge
aam
sub
dec
adc
sub
test
pop
push
stos
add
cmp
fmull
das
loope
mov
jo
cs
jb
fmulp
stos
pushf
stos
into
out
loopne
in
cmp
gs
shrb
movsl
push
add
ja
aam
icebp
out
inc
mov
jp
stos
push
jno
out
insl
inc
pushf
or
test
sub
ss
cmp
jbe
or
test
push
lods
insl
repz
popa
dec
scas
andl
test
hlt
dec
sub
mov
outsl
mov
sbb
dec
adc
pop
nop
and
xlat
xchg
push
inc
jnp
es
jbe
lret
testl
test
mov
mov
add
aas
cltd
xchg
fdivs
mov
cmp
vmovaps
imul
cmp
popa
popf
ljmp
jle
xlat
leave
adc
rcl
or
xlat
ret
push
add
sbb
cld
fidivrl
out
daa
or
xor
js
jp
xchg
enter
pushf
or
decl
sub
inc
ljmp
jle
or
cmpsl
pusha
add
cmp
out
or
pop
leave
outsb
stc
pop
dec
dec
out
das
mov
mov
or
or
xchg
ljmp
movsl
mov
inc
popa
jge
pop
int3
test
jg
data16
xor
jb
inc
rolb
add
push
or
mov
xor
or
pop
xchg
mov
mov
mov
fwait
ljmp
dec
std
lret
cmpsl
push
in
dec
pop
inc
jmp
xchg
jmp
loop
jnp
insl
test
stos
into
push
mov
mov
dec
mov
push
mov
cwtl
jbe
jae
inc
pushf
push
mov
sub
pop
xor
fnstcw
js
scas
scas
adc
mov
xor
jbe
ret
movsb
adc
adc
inc
pop
sbb
pop
mov
sub
add
and
xor
pop
out
mov
xchg
or
add
adc
rclb
push
in
aam
mov
repnz
ror
insb
mov
loope
and
pop
lahf
lret
cltd
sub
sahf
or
pop
mov
stos
mov
insl
cmp
out
movsb
sub
mov
or
iret
jne
push
mov
lea
jae
lods
mov
jo
fimuls
jae
xor
adc
loope
fadds
fstps
mov
out
ds
inc
int3
je
aam
push
cmp
js
xchg
ds
push
inc
shl
in
rclb
jae
rcll
cmp
pop
out
cmova
sbb
sub
aaa
lret
ret
mov
popa
fwait
jl
inc
call
inc
sbb
mov
sbb
dec
xor
ss
mov
popa
rolb
call
or
jle
or
mov
mov
bound
imul
mov
xor
sub
les
and
jb
loopne
scas
bnd
add
in
fucom
lret
push
cmc
push
das
xlat
imulb
rorb
into
dec
mov
and
ds
and
daa
mov
ficompl
loopne
xchg
addl
out
shrl
scas
imul
mov
mov
out
push
dec
out
xchg
add
push
out
pop
mov
fistpl
inc
add
mov
jl
outsb
pop
sub
cmp
inc
loope
fnsave
xor
nop
sub
loop
insb
xor
inc
hlt
mov
shlb
push
imul
pusha
pop
and
mov
pop
sbb
jmp
js
fucomp
out
adc
mov
inc
addr16
cmp
cmp
cmp
pushf
push
ret
xor
dec
dec
and
add
lret
or
xor
aas
adc
stos
dec
cmp
mov
sub
pop
stos
les
adc
push
int
subl
outsl
pop
push
sbb
sbb
cmc
dec
xor
mov
cltd
and
imul
jne
cld
xor
outsl
jae
mov
or
sub
xchg
pop
push
outsl
js
aad
shlb
cmp
fcmovb
popf
xor
cmc
mov
repz
jns
int
out
pop
jecxz
cmpsl
xor
lds
mov
dec
lahf
fcoms
sbb
cmp
or
sbb
insb
pop
enter
shl
ret
in
sub
test
fdivrl
xchg
mov
adc
cmp
and
loope
inc
and
cmp
sbb
roll
pop
mov
cmp
mov
and
insb
adc
sbb
xlat
fwait
sarb
jl
jecxz
pop
scas
mov
inc
xlat
es
inc
cmp
hlt
jg
imul
or
mov
ja
lds
sub
roll
push
inc
add
jo
lea
test
dec
notl
int3
outsb
aam
int3
adc
adc
out
sub
daa
mov
add
cs
mov
push
and
iret
bound
fisubs
inc
enter
sbb
push
add
xlat
or
imul
imul
pop
std
mov
or
mov
std
pop
test
push
into
mov
mov
mov
stc
add
mov
test
jle
fiadds
xchg
mov
jno
mov
xchg
scas
push
mov
jnp
xchg
jnp
stos
add
sub
adc
pop
ds
sbb
sub
loope
mov
aas
subb
jb
cltd
aam
out
ja
jb
cltd
or
or
mov
push
xor
or
mov
fildl
test
jb
nop
dec
lret
mov
cwtl
mov
sub
mov
cmc
repz
push
addr16
cli
mov
outsb
dec
lret
dec
lods
imull
insl
rorl
xchg
sub
aas
add
mov
or
ds
aas
mov
xor
lods
scas
xor
inc
push
dec
push
fstps
stc
scas
test
mov
mov
mov
cmp
xchg
add
fildll
jmp
cmp
out
and
and
sbb
mov
and
pop
stos
imul
aad
aad
lods
mov
clc
adc
mov
gs
dec
xchg
inc
add
lock
js
inc
pop
movsb
notb
xchg
arpl
add
inc
nop
es
jbe
mov
inc
or
popa
test
jbe
ss
jo
xchg
adc
inc
adc
int
sub
ss
mov
shll
sub
push
int
add
fwait
mov
fisttpll
aad
inc
sub
int3
adc
jb
and
adc
and
push
ja
lds
mov
andb
add
push
scas
jnp
jo
insl
into
cmp
mov
pusha
imul
fsubs
dec
mov
cmp
add
ret
sub
int
ss
push
mov
in
mov
lahf
xor
movsb
sbb
pop
call
mov
xlat
xchg
mov
andb
repnz
das
std
push
stos
push
adc
or
cwtl
sbb
cmp
push
outsl
mov
repz
inc
mov
lock
cmpsl
in
aaa
into
inc
in
push
inc
cmp
out
cltd
xchg
sbb
and
sub
dec
xlat
rcrl
imul
cltd
lock
cld
fs
jns
jns
insb
push
push
and
xchg
add
inc
or
add
dec
mov
aad
dec
je
xchg
inc
stos
je
push
sub
push
pop
ret
pop
mov
and
push
out
cmp
fmull
cmpsb
call
stos
aas
insl
movsl
sub
fldt
mov
popf
and
mov
jecxz
jle
fnstcw
stos
jg
jbe
loopne
pusha
mov
pop
dec
mov
sbb
mov
dec
xor
push
inc
jg
add
inc
scas
mov
daa
je
and
test
inc
stos
cltd
push
mov
mov
outsl
lcall
test
push
fwait
adc
stc
lcall
rcrb
in
push
mov
sahf
jbe
xchg
cwtl
cltd
cmpb
outsb
fistps
pop
dec
imul
or
adc
sub
std
push
cmpsl
pop
out
sahf
push
imul
in
insb
xor
mov
mov
aad
push
insb
dec
es
fs
divl
ret
push
dec
xor
and
dec
lea
cmpsb
es
adc
add
xchg
mov
dec
sub
aaa
test
mov
jne
jge
push
and
inc
or
fs
push
xlat
lahf
inc
mov
dec
push
mov
out
test
sarb
hlt
pop
lods
in
and
sub
sbb
popf
xorl
shlb
xor
negl
xchg
iret
xchg
sti
push
and
pop
in
mov
xchg
es
stc
dec
mov
and
dec
mov
jbe
je
mov
scas
push
dec
cmpsl
and
mov
in
ficoms
push
aad
repz
lods
add
xchg
xchg
addr16
cmp
cmp
sub
mov
lods
inc
sub
aad
in
shrb
ja
push
dec
push
jns
push
jge
mov
clc
int
in
shlb
shrb
dec
addb
mov
enter
and
xor
ja
sbb
stos
lahf
repz
push
or
js
mov
fsubrl
lods
shrb
jge
mov
jns
sti
js
aas
mov
jno
xor
pop
fimull
insl
or
loopne
jo
jle
and
out
sbb
inc
mov
mulb
pop
in
add
dec
jae
push
mov
sbb
mov
push
mov
fcomp
sbb
mov
adc
inc
or
dec
sub
dec
sbb
sbb
pushf
xor
adc
cmp
xor
dec
xchg
lea
mov
jecxz
xchg
jno
and
cmp
xchg
adc
xor
push
lock
mov
fadd
in
movsl
jo
adc
je
push
pop
shll
lret
adc
adc
cmp
xor
daa
adc
pushf
dec
rclb
jae
es
enter
mov
or
cmp
pop
aad
push
aad
pop
pushf
cmp
xchg
fmuls
cmp
cli
je
call
not
lock
jl
mov
out
or
data16
fadds
sahf
popf
sbb
jns
outsb
mov
insb
scas
es
push
sbb
push
jg
xor
shrb
inc
push
push
dec
stos
mov
mov
sar
dec
mov
movsl
fwait
mov
sahf
leave
pop
mov
shlb
mov
add
pop
into
xchg
cltd
dec
faddp
lods
test
jne
fdivrl
pop
insl
lret
inc
cmp
add
xchg
cli
call
cld
jecxz
cmp
jo
cmpsb
xor
mov
ja
sbb
jmp
sbb
outsb
lcall
inc
push
push
or
mov
pop
mov
test
rolb
stc
das
jge
imul
sbb
lods
cmp
adc
ret
enter
clc
xor
in
jbe
sub
dec
addr16
popf
jmp
add
fsts
inc
xorb
stos
pop
orb
mov
xor
test
sar
xchg
mov
imul
mov
dec
fidivrs
cmp
insl
outsl
int
loope
jl
sbb
enter
push
aaa
mov
mov
mov
jne
add
pusha
or
insl
jns
call
cmp
or
push
adc
pushl
mov
xlat
imul
mov
jmp
pusha
xchg
sahf
enter
mov
imul
lock
nop
sti
fcmovbe
les
sub
fmul
pop
test
sub
notl
push
notb
jbe
xor
mov
ss
jb
jmp
lret
and
mov
adc
dec
sbb
idivl
stos
daa
add
push
dec
adc
mov
mov
inc
cmp
mov
cvtdq2ps
pop
inc
cmp
fiadds
stc
test
adc
xor
fs
icebp
add
or
in
sahf
cltd
imul
push
lods
pop
pusha
pop
cli
cs
push
add
and
aam
in
xchg
mov
cmpsl
sub
mov
jns
pop
mulb
mov
in
adc
leave
push
insl
leave
arpl
icebp
rcl
orl
sbb
roll
cmp
loopne
enter
clts
out
push
mov
jnp
data16
sub
mov
push
adc
pushf
xchg
std
cmpl
jns
cltd
pop
xor
imul
sar
movsl
pop
and
add
pop
shll
or
mov
daa
std
test
outsb
inc
xchg
pop
sti
in
cmp
jb
imul
adc
push
mov
stos
in
mov
xchg
pop
mov
fcmovu
popa
es
or
push
repnz
into
aaa
mov
or
ret
push
outsl
pop
fs
cld
popa
sbb
les
push
mov
test
jne
daa
sub
push
xor
sbb
aaa
out
dec
xchg
lods
add
sbb
cmc
clc
js
ret
scas
lock
sub
xchg
mov
xchg
or
mov
fwait
push
push
roll
loope
lock
lret
dec
mov
rcrl
jne
testl
sbb
or
xchg
shl
mov
movsb
sub
out
push
lret
xor
xor
mov
pop
insb
jb
arpl
xor
sub
fdivl
cmc
jnp
scas
or
jo
int3
aad
addr16
lds
cmp
pop
push
outsl
rcl
add
mov
sub
push
add
insb
test
movsb
outsl
stc
mov
and
adc
or
inc
mov
add
pop
pop
mov
mov
mov
cmp
or
pushf
ds
das
jb
mov
rcr
div
xor
jae
mov
insb
cmp
pop
inc
adc
ss
mov
jo
inc
movsb
push
pushf
sbb
add
test
js
repnz
js
adc
cs
lods
add
add
lods
jle
pop
sub
dec
sbb
pop
and
scas
add
and
cwtl
into
popa
mov
scas
xor
pusha
and
das
mov
pushf
or
out
dec
cmp
fs
sti
cltd
test
insb
dec
test
in
lret
mov
imulb
xlat
jo
insb
ret
mov
xor
fmul
scas
cmp
dec
arpl
add
mov
pop
push
sub
pop
bound
push
mov
mov
sbb
mov
cwtl
and
insl
icebp
xchg
sub
dec
pop
mov
cmc
sbb
xchg
dec
sub
mov
subb
addr16
and
loopne
sbb
fisttpll
mov
dec
or
inc
leave
pushf
mov
xor
xlat
xor
jae
aad
out
enter
cli
rcrl
fnstcw
test
sub
sbb
or
xor
and
inc
iret
movsl
push
dec
in
push
js
jmp
mov
xchg
imul
mov
je
fadds
jl
push
nop
adc
aas
xor
cmp
inc
inc
sub
cwtl
pop
shr
fs
jae
addr16
ds
xorl
je
push
mov
add
inc
push
push
les
pusha
not
aad
xchg
sbb
push
ret
cli
imul
cmp
mov
xchg
nop
sti
shl
dec
cmp
jne
inc
add
arpl
test
or
sahf
cmp
fs
inc
lds
xchg
push
test
cwtl
push
shll
mov
adc
jno
decl
cmp
daa
or
mov
cmp
dec
adc
mov
lods
cmc
stos
sbb
js
mov
fisubrl
xor
leave
xchg
cld
leave
shll
jmp
cmp
nop
loopne
insb
jne
cmp
cli
je
push
sbb
jae
pop
imul
aad
ret
or
or
cmpsl
imul
int3
cmp
fisttpl
cmp
hlt
adc
aam
jmp
dec
lods
mov
leave
xchg
mov
dec
xchg
repnz
mov
rcr
test
xchg
rolb
xor
cli
xor
mov
inc
and
mov
and
clc
pop
cmp
jecxz
jmp
test
lods
jg
stos
cmp
test
fnstcw
lret
jo
xor
pop
mov
pop
push
fxch
daa
filds
loopne
enter
ds
mov
leave
in
push
insb
aas
xor
lahf
jmp
ret
stc
insl
daa
jne
out
loop
mov
dec
sbb
jl
inc
aam
pop
mov
xchg
mov
jae
add
imul
pushf
inc
adc
jg
in
shlb
inc
add
xchg
mov
dec
cmc
push
push
fisttpll
imul
push
fadd
pop
sbb
xchg
mov
data16
dec
test
mov
lret
out
icebp
aas
jnp
xchg
mov
xor
mull
mov
int3
add
push
jnp
jle
mov
jnp
sub
sbb
repz
je
xor
xchg
jl
mov
jp
repz
f2xm1
xchg
notl
fimuls
jbe
add
cmpsb
cmp
ficomps
roll
ret
xor
inc
pop
or
das
arpl
push
inc
pop
mov
dec
pushf
psubsw
push
dec
divl
or
fisttpll
dec
xor
out
ljmp
into
ja
mov
mov
lahf
sbbb
push
push
shll
jbe
lds
lcall
mov
addr16
cld
sub
nop
and
jno
xor
cmpl
ret
stc
jne
repz
cmpsb
ret
add
cld
mov
adc
insb
push
xchg
mov
dec
push
out
cmp
cli
mov
dec
aam
cmp
sbb
hlt
and
push
cwtl
xor
addr16
push
dec
pop
pop
xchg
loop
jle
mov
clc
pop
add
mov
pop
sbbl
out
and
sub
sub
into
xchg
mov
jnp
sub
inc
ljmp
fstpt
fisubs
jae
subl
add
popf
xor
jl
je
jmp
mov
rcrl
add
pushw
gs
pop
pop
xchg
or
dec
andl
shlb
stos
rcl
cmp
js
xchg
das
imul
enter
in
inc
xor
and
mov
xlat
mov
mov
mov
cmpsb
inc
out
sub
cli
fwait
mov
mov
movsb
cmp
fsubrl
ljmp
xchg
xor
in
fcompl
inc
fstpl
imul
sub
testb
add
out
push
and
adc
rolb
jo
xor
pop
jb
insb
lea
cmpl
xchg
push
lods
sub
mov
sarl
pop
cmp
pop
clc
push
sbb
push
outsl
fmuls
dec
mulb
push
mov
jle
jns
ret
jno
add
enter
dec
inc
dec
add
or
sar
inc
cmc
xchg
clc
adc
mov
pop
xchg
pop
xor
test
cmp
cmp
lds
jge
es
push
inc
pushf
clc
sahf
aad
adc
and
push
and
jmp
lahf
mov
stc
rol
cmp
xor
imul
pop
xchg
js
push
imul
sub
js
cli
fistpl
mov
mov
shl
loopne
xor
push
sbb
mov
sub
scas
out
mov
pop
les
xorl
lret
loop
push
stos
xor
cs
int3
lods
test
xchg
xorb
rcrb
jle
fadd
jg
xchg
or
cmp
hlt
push
insl
cmp
fxch
mov
in
dec
jp
gs
lret
mov
pop
push
sbb
jmp
and
lods
scas
inc
push
dec
jo
adc
pop
jno
out
insl
cltd
inc
addb
xchg
out
or
xchg
std
sub
fisttpl
arpl
push
adc
leave
in
jp
pop
aam
lods
xchg
arpl
dec
cld
out
adc
daa
pop
add
outsl
loope
in
pop
dec
mov
arpl
out
sub
data16
lea
jno
loop
adc
mov
shlb
cli
cmp
fstpl
fstps
push
push
das
pop
loop
loopne
mov
aaa
and
jge
xor
mov
jle
jecxz
fs
sub
lods
jae
ljmp
inc
shl
cmpsl
jge
or
lret
loope
cli
and
pop
adc
in
adc
dec
cmpsl
sub
inc
daa
jnp
mov
pop
cmp
mov
adc
jae
lods
push
fpatan
mov
pusha
sahf
dec
push
push
jecxz
ja
mov
dec
mov
orb
ja
test
push
push
pop
or
inc
lds
cmp
lcall
push
pop
mov
jg
inc
xor
xchg
in
add
scas
ret
jmp
xor
je
sub
lret
push
mov
mov
lods
and
bnd
inc
mov
scas
jecxz
mov
neg
sub
imul
mov
test
nop
shll
lock
inc
rclb
daa
icebp
push
icebp
xchg
sbb
in
cmpl
mov
in
and
test
sub
push
dec
lret
cmc
stos
push
inc
and
rclb
pop
mov
daa
out
sub
cmpsb
mov
inc
jmp
ficoms
mov
lret
jo
xchg
stc
and
test
sahf
or
lods
add
adc
sbb
data16
sahf
add
insb
out
sbb
jae
rolb
adc
push
pushf
pop
push
or
xchg
or
lods
aam
xchg
jl
addr16
arpl
clc
xor
cwtl
sub
xchg
pushf
fisttpll
mov
sbb
in
add
popa
push
cmpsb
adc
iret
jbe
mov
pop
les
test
cmp
in
jecxz
sarl
jmp
sbb
inc
mov
push
pop
dec
int3
and
pop
sbb
and
fidivrs
out
jne
shrb
xchg
lahf
sbb
mov
jmp
mov
xchg
and
lcall
or
pushf
pop
popa
mov
push
rolb
xorl
xchg
mov
dec
xchg
loope
sbb
or
daa
push
into
mov
notl
pushf
cmp
sub
pop
fisubl
jl
mov
adc
scas
jno
and
fs
inc
xlat
sub
mov
or
xchg
pop
out
cmp
jg
jg
dec
mov
mov
jns
je
jmp
fisubrs
mov
or
jg
stos
jnp
adc
in
sbb
ret
mov
out
aas
test
out
sbb
adc
or
mov
mov
push
cwtl
jb
jo
fwait
or
mov
mov
fidivl
in
stc
pusha
adc
test
dec
adc
outsl
ja
daa
or
lods
mov
arpl
xchg
push
sbb
mov
mov
sub
push
sub
or
xor
fucomp
xchg
cltd
gs
fmull
ret
pop
mov
or
mov
arpl
ss
out
popa
dec
inc
xor
xchg
aam
inc
jne
pushf
xchg
lret
sub
enter
mov
mov
and
push
jp
hlt
sti
iret
xorl
in
shl
adc
stos
cld
jnp
sti
and
pusha
fsubrl
call
fimull
and
and
cmc
inc
imul
insl
xchg
mov
inc
aas
or
stos
sub
inc
pusha
inc
and
call
sub
xor
xor
out
movb
dec
mov
int
test
in
or
sarb
hlt
stc
aad
arpl
mov
icebp
push
pop
pop
jbe
jns
cmp
out
push
or
in
outsb
mov
xor
std
rorb
std
inc
xor
and
push
daa
cmp
and
out
jecxz
popf
cmp
sahf
pop
push
nop
cmc
pop
mov
push
imul
clc
pusha
sbb
mov
mov
lret
sub
pusha
je
sub
dec
mov
inc
adc
int
jge
and
ljmp
mov
and
and
leave
add
cmpsl
mov
xor
and
insl
xchg
call
sbb
lods
mov
call
mov
cwtl
pmaxsw
pusha
icebp
js
xorb
ljmp
cmp
inc
cwtl
and
sub
xchg
daa
fcoms
pop
push
repz
sbb
sti
cmpsl
aam
imul
in
inc
je
ror
mov
testb
jge
jmp
mov
ja
or
std
cli
fsts
add
add
mov
mov
cmp
in
repz
xorl
mov
sbb
aas
xorb
adc
rcll
sbb
push
push
jno
outsb
or
aas
sti
jne
call
imul
pop
enter
mov
mov
repnz
popf
push
cmp
and
je
xchg
mov
jnp
jl
or
aam
jecxz
insb
cmp
scas
mov
pop
dec
xchg
push
ffreep
xchg
aaa
mov
lock
fdivs
idivl
scas
fwait
sar
icebp
add
sbb
aas
cmp
orb
out
test
movsb
sub
inc
mov
xor
mov
das
mov
daa
xchg
inc
push
xor
imul
leave
xchg
push
lods
sbb
gs
xchg
xchg
jle
pop
adc
sub
test
mov
mov
movsl
dec
xchg
sbb
inc
insl
xchg
cs
cmpsb
inc
mov
xchg
xchg
shrl
mov
mov
sub
xchg
push
or
cmpsb
inc
push
pop
fsts
jl
mov
jb
and
and
pop
repnz
loope
jns
xor
aas
mov
rolb
cld
add
dec
mov
mov
push
xor
cmpsb
lds
cmpsb
jbe
add
xchg
loopne
mov
jo
movsb
dec
xlat
mov
adc
dec
addb
pop
mov
stos
push
jo
lea
bound
or
or
mov
ljmp
jb
icebp
loopne
add
xchg
jmp
mov
mov
movsl
in
jbe
and
outsl
inc
aas
in
push
out
repnz
test
jecxz
fs
insb
mov
xchg
ljmp
push
inc
and
jnp
nop
add
xor
xor
add
ljmp
int
movsl
or
std
xchg
lock
in
xchg
cltd
mov
mov
adc
and
fmuls
and
pop
cmp
mov
fnstsw
xchg
sbb
js
inc
xlat
push
imulb
mov
je
loop
push
int3
iret
pop
inc
pop
bound
rcrl
ret
mov
mov
pop
adc
in
xlat
xchg
mov
xchg
sbb
enter
ret
lcall
rolb
push
lds
mov
fs
aas
iret
mov
mov
dec
mov
xchg
mov
test
mov
jle
mov
xor
or
repnz
add
jecxz
iret
inc
xchg
add
pop
sbb
cmp
dec
mov
dec
adc
mov
aad
or
int3
cmp
ss
or
iret
out
inc
sub
mov
repz
or
xchg
pop
gs
popf
inc
pop
xlat
adc
sub
push
jmp
sti
cmp
data16
jge
lods
lahf
outsl
lods
mov
loop
rcll
addr16
dec
push
pminub
aaa
dec
adc
mov
pop
inc
test
enter
inc
lds
sbb
je
cmp
aas
nop
sbb
arpl
hlt
cmpsl
jnp
sub
mov
icebp
lea
dec
add
inc
push
add
cmc
xor
jle
inc
pop
pop
push
decb
add
bound
pmaxub
sarb
mov
ret
or
mov
movsl
aad
lcall
call
sub
add
scas
jne
outsb
xchg
movsb
roll
decl
dec
pop
out
call
push
mov
inc
xchg
jl
scas
aaa
jp
jmp
loop
stos
rolb
ja
pop
test
mov
ja
adcb
sbb
cmp
gs
add
test
loop
arpl
dec
push
std
ficompl
fists
mov
adcb
pop
push
pop
add
repnz
mov
pcmpgtw
jecxz
fisubrs
xor
cmpsl
scas
and
mov
rcr
repnz
gs
lcall
jbe
push
or
cmp
dec
xchg
call
and
ss
testl
sub
lea
and
fildl
lahf
push
push
xchg
lret
push
imul
mov
ret
inc
cmp
jae
cmpsb
push
push
mov
cmp
pop
movsl
dec
adc
rcl
inc
loope
enter
jmp
xchg
dec
pop
aaa
out
movsb
or
inc
mov
cmp
mov
jle,pn
pop
scas
xor
adc
lods
mov
push
daa
pop
int3
add
sub
frstor
xchg
clc
dec
xor
mov
adc
test
ss
stc
js
dec
xor
pop
push
test
ss
movsb
xor
xchg
sbb
lret
xor
mov
imul
mov
aaa
lcall
icebp
cmp
jp
mov
pop
push
push
addr16
sahf
sub
mov
xlat
inc
rcl
lret
nop
int3
div
jmp
xchg
lds
push
xchg
cmp
ljmp
stos
popa
mov
sti
cli
push
lret
int3
and
call
or
push
sbbb
inc
ja
and
mov
loopne
mov
lahf
leave
scas
shlb
inc
and
stos
dec
scas
push
add
pop
jp
std
out
xor
or
aaa
sbb
test
xchg
mov
cmp
aad
jb
lock
out
rorb
pusha
mov
mov
mov
ja
ja
adc
aam
adc
jl
imul
jle
push
aas
push
adc
mov
call
imul
test
pop
mov
popf
or
les
iret
jecxz
jbe
push
or
and
dec
sub
vminpd
movsl
lcall
jl
jbe
pusha
cltd
sbb
mov
push
jo
les
xchg
xchg
in
xor
arpl
inc
rclb
inc
cmpsb
fisubl
std
fstpt
decl
jg
add
dec
sub
cmpl
cmp
inc
scas
mov
sbb
adc
sbb
movsl
ret
xchg
push
movsb
jmp
mov
mov
fcompl
les
in
sub
in
jnp
popf
fstpt
jne
mov
mov
cmc
add
fwait
cs
cld
adc
je
xchg
cli
mov
push
sub
mov
sbb
scas
cmpsb
out
cmp
inc
and
and
dec
iret
xor
dec
pop
mov
repnz
fsubs
inc
fcmovnbe
xor
lcall
out
jle
pop
pop
mov
lds
ja
dec
and
lea
push
aas
aaa
testl
cld
cmpsl
jae
sbb
xchg
lret
addl
xchg
cmpsl
pop
mov
insl
aam
ds
dec
stos
pop
rorb
sub
inc
or
fsubs
xchg
adc
push
inc
out
mov
fdivs
in
mov
jbe
mov
test
push
movsb
std
js
addb
cmpsb
lahf
lods
scas
or
imul
dec
cmp
stc
cmp
push
push
dec
mov
mov
insl
pushf
mov
outsl
subb
call
xchg
imul
jo
inc
xchg
fidivl
rcrl
jb
or
inc
mulb
sbb
mov
lret
inc
loopne
addr16
mov
mov
or
repz
cmp
mov
les
mov
gs
lock
scas
lock
out
jle
sbb
xor
dec
jge
sbb
push
rcrl
ret
push
dec
out
lds
pop
das
cmp
leave
jns
pop
dec
mov
cmpsl
int3
mov
mov
push
push
lea
sub
fidivl
je
mov
sbb
mov
inc
xor
fnsave
pop
shrb
or
shl
sbbb
xchg
push
cmp
fdiv
cmp
dec
repnz
or
sbb
idiv
sbb
shll
out
mov
lds
cld
jo
mov
add
dec
mov
or
mov
sbbl
loopne
aam
ss
add
loop
sub
test
call
loop
lods
and
push
or
dec
xor
pop
adc
jno
mov
adc
push
xor
mov
push
push
mov
insl
and
sbb
sbb
lock
inc
dec
sbb
xchg
aam
outsb
pushf
popf
outsl
fmulp
xor
cmp
and
fdivr
or
adc
pop
jl
dec
fcompl
dec
insb
push
daa
push
fisubrl
in
loope
sub
jne
push
inc
push
xchg
pop
pop
and
and
scas
mov
cmc
and
jl
inc
mov
xchg
xchg
ret
rolb
sbb
loopne
pop
stos
and
sbb
int
or
xlat
aaa
sahf
loopne
jne
loope
xlat
aam
clc
popa
in
imul
out
dec
roll
ljmp
test
sahf
repz
jg
jnp
xchg
cmpsb
xchg
and
es
das
jno
jbe
cmp
mov
aad
cmp
lcall
jns
mov
cmp
xchg
clc
decb
repnz
mov
sbb
cmpsb
mov
xchg
push
or
arpl
ja
addl
loop
fdivl
and
sbb
je
adc
sbbb
out
data16
test
mov
andl
and
pusha
out
clc
shrb
sbb
push
jl
xor
mov
jge
sahf
push
inc
sarb
fildll
ja
sti
lcall
ja
clc
in
dec
push
imul
lret
daa
sahf
icebp
xchg
mulb
sub
inc
pushf
mov
rorl
test
scas
js
mov
fwait
ret
inc
loope
pop
inc
lret
ror
cmpsl
ds
test
pushf
imull
pop
mov
push
fldcw
push
imul
lcall
movsl
lods
cmpsl
cli
push
scas
in
push
test
das
xlat
sub
jge
adc
mov
std
pusha
addl
xchg
rcll
pop
jne
mov
xorl
adc
cmpsl
fprem1
test
xorl
inc
ss
cld
ja
dec
inc
inc
pop
int3
lock
xor
cmp
mov
mov
dec
out
add
or
fnclex
out
test
xor
add
orb
enter
hlt
mov
inc
and
mov
and
pushf
push
mov
xlat
jmp
pop
pop
add
sub
lods
or
xor
inc
sub
inc
dec
xchg
push
out
adc
repz
sub
and
xchg
adc
fistpll
pop
cmp
jge
aad
jl
push
mov
jbe
and
cli
mov
xor
popl
inc
xchg
roll
jb
in
insb
add
popa
pop
insl
in
fistpll
adc
sub
les
test
mov
mov
inc
adc
loop
jmp
adc
pop
js
cmpsb
stos
in
insb
sub
jge,pt
jle
and
push
mov
je
xchg
cmp
test
out
cld
fists
pop
add
xchg
dec
pop
xlat
xabort
cmp
or
popf
cwtl
lds
push
add
cltd
inc
sbb
sub
push
sbbb
js
pop
inc
call
push
mov
push
pop
xchg
pop
push
aad
xchg
sbb
pop
incb
mov
fcoms
cmp
inc
mov
mov
jo
stos
loope
jge
pusha
xor
enter
pop
push
data16
sahf
or
cmpsb
inc
push
push
push
adc
cmc
lret
test
outsl
fs
lret
pop
pop
pop
loopne
jmp
cli
rcrb
jle
fcom
in
js
mov
add
inc
push
mov
rclb
push
pop
jecxz
pop
cld
mov
js
mov
mov
adc
in
pop
jae
push
addr16
rorb
sub
mov
or
sti
dec
inc
mov
pusha
or
jo
enter
sar
jns
cmp
fs
enter
pop
mov
adc
mov
jg
jb
insb
mov
jno
sti
xor
mov
popa
pop
dec
xor
sub
mov
clc
pop
add
cmc
adc
or
jne
and
mov
cli
stos
mov
stc
out
adc
dec
popf
stos
leave
jp
push
pushf
in
mov
popf
sti
mov
int3
shlb
fwait
and
nopl
pextrw
sbb
loopne
shlb
pop
clc
jmp
and
and
fsubl
push
cmpsl
pop
out
sub
jl
add
mov
shlb
movsl
inc
fistpl
repnz
sbb
movsl
push
mov
mov
add
push
mov
imul
fisubs
dec
stos
or
dec
mov
adcb
mov
cmp
lods
sub
cwtl
cmpb
xchg
mov
pop
shlb
and
jp
mov
out
ss
shll
flds
stos
push
sub
int3
repz
push
inc
ret
sub
push
mov
mov
sti
test
aas
push
out
addr16
movsb
hlt
sub
add
shlb
fdivrp
cmp
pop
aam
fsubs
mov
dec
jg
lret
test
cmpsb
lods
inc
push
sub
sbb
xor
std
aaa
call
sbb
popf
mov
mov
cli
push
jb
mov
inc
leave
adc
pop
mov
xorl
popa
inc
mov
pop
jb
xchg
pop
out
cmp
andb
into
or
nop
and
cltd
cld
pop
xchg
push
scas
andl
sub
test
in
out
lahf
pop
adcb
test
int
add
push
subl
mov
les
orb
inc
xchg
cmp
fs
out
adc
add
inc
imul
add
popf
adc
insl
or
mov
jecxz
sar
xchg
push
lock
leave
sub
jecxz
cltd
and
inc
hlt
push
cli
std
adc
jp
mov
push
fwait
loopne
outsb
cmp
or
push
test
and
mov
cmp
ret
xchg
jne
jg
sbb
pusha
lret
xchg
lea
arpl
jno
dec
nop
inc
loop
xor
loopne
jg
xchg
div
insl
fldcw
stos
mov
popa
pop
mov
nop
lea
adc
ljmp
add
jo
dec
push
je
mov
pop
std
ret
rcrl
cmc
lret
sti
and
cmp
outsb
mov
dec
sbb
das
add
fcoms
sbb
cmp
data16
jo
xchg
push
sbb
fs
push
call
sub
add
xchg
jg
xchg
cs
add
jg
int
xchg
inc
mov
ljmp
add
jl
lahf
xchg
or
sti
add
jl
rcll
sub
mov
add
pop
push
mov
cmc
pop
test
add
shr
push
mov
ja
fiaddl
iret
push
loopne
stos
pop
mov
rcl
loopne
or
xor
ds
insl
xchg
push
mov
sub
or
mov
jge
cmpsb
push
cld
in
aam
add
xor
add
sub
lock
xor
mov
jg
scas
sub
xchg
and
mov
or
rcll
mov
je
adc
mov
fdivl
push
push
rep
lret
cmp
lods
xchg
push
aad
inc
pop
js
cmpsl
icebp
adc
popa
xor
xchg
in
fcmovb
pop
mov
ds
fnstsw
loop
push
into
jbe
mull
stos
imul
jno
jmp
insl
mov
in
hlt
enter
js
pusha
add
push
pushf
inc
sti
out
push
jae
cmp
js
inc
mov
gs
aad
fisubrl
jbe
inc
jmp
fsubrl
jge
add
fcoml
jp
aam
cmpsb
js
inc
insl
pop
addr16
shrb
mov
mov
in
aaa
dec
pop
lcall
insl
popa
cmp
cwtl
enter
xlat
ds
adc
adc
in
rorl
hlt
sub
xor
int
lds
jns
cmp
jge
addr16
enter
imul
or
adc
rol
push
push
pop
adc
popa
xlat
hlt
jb
cltd
mov
sbb
daa
les
dec
mov
jno
mov
mov
mov
pop
insl
movsb
mov
repnz
dec
in
sbbb
dec
xchg
dec
push
int3
sub
xchg
adc
lock
orb
std
into
nop
lcall
arpl
sbb
out
movsb
inc
mov
enter
nop
rcrl
mov
jnp
dec
add
mull
sub
sub
mov
pop
mov
popl
sbb
fsqrt
push
mov
sub
pop
scas
ret
pop
ljmp
xor
lahf
rolb
repnz
jo
push
jp
aas
sub
or
pop
inc
fildll
mov
mov
sbb
repz
sbb
xchg
pop
pop
cmp
jge
push
enter
xchg
xchg
dec
fstl
push
jg
in
jo
dec
adc
inc
mov
movsl
cld
stos
popa
cmp
rep
or
fs
adc
idiv
xchg
or
xchg
xorb
fwait
cwtl
cmp
pop
pop
cwtl
jle
inc
jnp
js
es
subl
scas
jne
mov
cmc
in
fstpl
push
loop
int3
adc
add
fsubl
xlat
mov
mov
adc
stos
push
jb
into
sub
gs
mov
sbb
inc
adc
call
clc
scas
mov
ror
mov
lret
out
les
iret
hlt
and
jmp
fnstsw
mov
inc
loop
mov
jae
icebp
bound
or
adc
rorb
fdivl
dec
jns
sub
inc
lcall
sbb
adcl
pop
mov
call
push
pop
inc
mov
jecxz
xchg
jb
mov
mov
inc
lds
mov
push
mov
cmp
fwait
or
xchg
aas
call
fistps
push
inc
push
dec
out
testb
jbe
fxch
sahf
adc
fpatan
js
mov
ljmp
xor
in
cs
inc
fimull
dec
fisttps
test
xchg
mov
jae
loopne
push
sbbb
adc
sbb
or
jno
orl
push
rcr
imul
mov
cmp
or
es
pop
or
mov
sbb
iret
bound
mov
mov
add
hlt
inc
push
mov
fwait
xchg
out
mov
pushf
sti
lods
inc
lcall
test
jns
into
cmp
push
jb
insb
and
adc
dec
add
ds
push
inc
in
dec
fisubrs
cmp
std
js
lods
and
loop
fsubrs
jecxz
mov
jno
std
mov
mov
repz
cmc
cwtl
push
cmp
jl
mov
or
outsl
xor
test
dec
cmc
into
fstpl
rclb
xchg
lock
lret
pop
mov
in
push
jne
or
jo
lock
movsl
add
mov
in
insb
mov
add
repnz
stos
lods
fucomip
test
dec
test
jmp
dec
ljmp
clc
mov
lea
xchg
push
pop
sarl
or
cmpl
lea
lret
loop
pop
nop
and
mov
sbb
sarb
mov
push
and
fstp
lock
fcompl
psubb
enter
lahf
lcall
cmp
out
out
pop
cmp
rorb
push
jo
mov
xor
out
js
adc
jg
lret
pop
ds
push
fnstcw
jmp
repnz
fldenv
ss
test
inc
rcrl
cld
dec
rcr
xchg
jb
pop
in
test
jl
dec
int
add
mov
and
jns
jecxz
sub
fstps
sahf
nop
adc
mov
in
inc
xchg
xchg
jecxz
ja
outsl
ss
mov
cmp
mov
sbb
cmc
out
jmpw
mov
lods
add
loope
push
in
lds
daa
mov
dec
jb
loop
lods
aad
xor
fwait
or
mov
and
cmc
pushf
lret
gs
sbb
mov
dec
push
xchg
or
jae
je
push
adc
xchg
icebp
out
jnp
pusha
loope
or
int
mov
jge
gs
mov
pop
xor
fisttps
and
add
jge
stos
push
imul
out
fwait
adc
clc
sub
test
aaa
notb
std
dec
jno
movsl
and
mov
or
loop
inc
or
les
arpl
jns
or
in
cwtl
push
stc
mov
fbld
or
ret
sbb
cmpsl
mov
fsubr
pop
jp
enter
inc
repnz
aad
das
mov
loopne
cltd
addb
sbb
repnz
xchg
lcall
repnz
stos
ljmp
jmp
mov
cwtl
iret
jns
xor
cld
arpl
jg
and
dec
sbb
repnz
fwait
or
subb
sbb
sub
and
jbe
sub
mov
push
inc
divb
mov
push
fcomps
sarb
mov
fisttps
jno
inc
add
popa
xchg
mov
dec
jno
test
movsl
popa
xchg
adc
xchg
sbb
pop
ds
lock
and
addl
adc
mov
and
aas
mov
cmp
sub
enter
aad
xchg
lds
out
sbb
xchg
sub
xchg
testb
rcrb
pop
pop
or
mov
ds
inc
adc
cltd
mov
cmp
and
push
lret
fsubrl
push
notl
std
test
ss
stos
mov
jno
sub
sbb
call
fs
sti
add
lods
push
out
cltd
stc
popf
dec
stos
push
mov
jbe
into
cmp
pop
or
stc
inc
sub
stos
out
mov
mov
sbb
pop
aad
jae
in
mov
scas
mov
mov
mov
call
lret
jo
fisubl
sub
jp
shl
fwait
mov
mov
insl
xchg
mov
hlt
adc
and
pop
subb
xchg
movl
aaa
aad
inc
xchg
scas
dec
ja
add
repnz
add
clc
mov
repnz
jle
out
les
loopne
lea
nop
pop
ss
ljmp
cld
push
cld
push
xchg
inc
inc
xchg
xchg
fucomip
je
hlt
cmp
and
movsl
fprem
jmp
and
xchg
dec
shrb
mov
fucomip
out
mov
jne
jbe
clc
xchg
xchg
push
dec
add
mov
jns
pop
addr16
sbb
jp
or
xlat
rorl
pushf
cmpsb
dec
int3
fwait
loop
movsb
pop
push
xor
xchg
jb
dec
sub
xchg
pop
add
xor
lret
mov
stos
repnz
xor
push
adcb
orb
inc
ljmp
xchg
push
les
or
sti
fnstcw
mov
das
push
ljmp
mov
or
xor
sbb
jo
in
jae
inc
int3
fnstenv
das
out
push
pop
nop
mov
sbb
pop
mov
sti
mov
shlb
enter
push
jb
lret
push
mov
cmp
rol
test
popf
lahf
sbb
xor
lahf
and
mov
inc
fiaddl
addw
repnz
aad
xor
repnz
js
test
add
loop
enter
push
fstpl
push
mov
test
mov
xor
jb
adc
mov
int3
int
inc
dec
push
xor
xchg
jnp
pusha
jl
xor
sbb
cmp
push
sahf
add
enter
cwtl
insl
dec
lods
inc
aam
pop
cmp
dec
ror
int3
out
cli
ret
loope
xor
xor
push
sub
lds
cli
mov
sub
and
pop
ljmp
jp
ja
jmp
cmpsl
jne
test
cld
mov
xchg
mov
scas
mov
mov
cmp
popf
cwtl
ljmp
sbb
loope
ret
xchg
add
mov
cmpsl
mov
pop
push
imulb
inc
stos
iret
rol
mov
pushl
xchg
fs
mov
popf
mov
fldt
std
cmp
adc
stos
push
js
mov
ds
inc
repnz
sbb
loope
mov
mov
push
stos
xchg
cmp
mov
jno
cs
popa
push
cmp
arpl
icebp
pushf
push
xor
fdivrp
sub
data16
sbb
into
fisttpll
dec
aas
inc
lahf
mov
daa
sbb
cmpl
inc
bound
jecxz
push
sarl
dec
adc
test
mov
xchg
bound
or
mov
mov
pop
sub
xor
mov
lret
sarb
fdivr
sub
les
mov
jo
mov
addr16
cmc
notb
js
outsb
pop
daa
aam
ljmp
add
jl
imul
add
in
mov
jl
xchg
js
sub
inc
cmpsl
xor
sbb
push
xchg
mov
add
pop
mov
divl
shll
sbb
lret
jecxz
hlt
sub
lock
jge
mov
fsts
lods
adc
in
lea
adc
clc
and
subl
jle
mov
mov
shrl
jae
and
lds
fwait
sbb
sbb
or
inc
popa
std
ret
jb
jb
aas
and
repnz
testb
repnz
cmpsb
mov
rclb
sbb
filds
pop
cwtl
loop
mov
nop
xor
outsl
fs
cltd
sbb
inc
sub
ret
xor
dec
cmp
push
mov
outsb
sub
ret
pop
push
mov
cmp
insl
mov
mov
test
pop
test
xchg
sub
mov
addr16
lea
push
pop
mov
andl
jns
out
and
sub
lock
sbb
push
pusha
pop
xor
mov
pushf
test
sbb
arpl
jne
cmpsl
fadd
cmp
cs
push
es
int3
stos
xchg
adc
mov
scas
or
push
mov
jp
push
push
imull
jno
sub
fs
xchg
dec
cmp
xchg
and
pop
or
sub
fnsave
cmp
dec
adc
inc
and
sbb
sbb
mov
and
sbb
ret
test
sti
mov
scas
hlt
jg
out
mov
lcall
mov
and
sbb
pop
sahf
test
call
ljmp
aaa
or
xchg
xlat
push
sbb
daa
lea
adc
clc
and
loopne
scas
imull
jecxz
movsb
lcall
cmpsl
add
testb
inc
mov
lea
adc
lods
mov
and
arpl
ds
add
and
clc
xor
cmc
or
mov
sub
mov
cld
xchg
add
out
data16
test
jne
lahf
rcl
scas
jg
mov
insb
dec
cmpsb
add
movsl
movsl
lods
jecxz
sbb
sub
mov
les
mov
jne
fcoml
add
mov
dec
cwtl
sbb
mov
jge
sbb
ss
jg
or
add
lahf
or
test
and
stos
mov
xor
push
ds
insb
cwtl
jbe
cmp
rcll
inc
xor
pop
cwtl
sub
or
cmp
test
cmp
aam
jns
lock
pop
shlb
ret
cmp
sbb
and
sbb
neg
mov
pop
mov
mov
xchg
xor
aam
loopne
cmp
inc
mov
mov
in
outsb
add
xor
and
cmpb
push
add
xchg
and
pusha
inc
mov
cmpsb
xchg
notl
mov
sub
mov
push
xchg
aas
cmpsb
bound
sbb
das
pop
cmc
dec
hlt
pop
xchg
mov
add
cmp
cmp
nop
movsb
sbb
out
es
ja
sbb
jbe
adc
aad
adc
pop
jg
subl
mov
cld
inc
xchg
xchg
cmpsl
iret
shl
cwtl
popa
fildl
stos
aaa
stos
in
lcall
mov
mov
cwtl
idivl
push
bound
push
ret
pop
movsb
cmc
cmp
dec
int
dec
loop
rorl
bound
arpl
xchg
push
repz
xchg
cld
sub
adc
pop
lcall
cmpsb
dec
xor
jne
popa
pop
and
fistps
inc
das
fldcw
dec
jb
add
ja
loopne
ficoms
fildll
fwait
stos
adc
jle
pushf
cwtl
mov
mov
stc
addr16
mov
ret
es
int
stos
incl
mov
xor
inc
adc
orb
dec
fsubrs
cmp
jle
movsb
jg
add
jbe
mov
add
add
sub
pop
xchg
mov
and
push
and
hlt
fisttps
repz
push
adc
ficompl
aas
clc
cmp
and
jmp
into
mov
loope
push
cld
in
gs
loope
aas
adc
push
pop
or
iret
imul
pop
mov
out
and
dec
or
aas
push
push
fisubl
pop
dec
popf
enter
mov
xor
lret
enter
cmp
and
fsubrl
mov
in
add
dec
pusha
fmul
jne
or
xchg
jnp
mov
out
sub
stc
add
into
add
stos
imul
mov
mov
cld
das
mov
adc
xchg
lock
mov
xchg
stos
pop
adc
pusha
addr16
xlat
mov
mov
cmp
push
sub
cwtl
cmp
fbld
cmp
jns
lcall
aaa
mov
test
test
xchg
arpl
xchg
cwtl
sub
das
nop
or
add
mov
add
adc
rolb
or
mov
clc
and
call
jns
mov
mov
aaa
xchg
pop
and
cmp
cmp
cmp
sub
enter
adc
jno
into
dec
xor
mov
mov
aaa
je
push
iret
xchg
dec
fiaddl
adc
ljmp
inc
hlt
pop
pop
in
aaa
ds
xorb
repz
cmp
add
xchg
sbbl
add
mov
push
pop
icebp
xchg
xchg
inc
arpl
sub
or
dec
js
lock
movsl
jge
mov
lret
in
loop
and
fldcw
sub
mov
jle
jns
xor
pop
fldl
jnp
xor
sub
cld
cmp
test
test
int
mov
and
xor
jne,pn
sub
sbb
dec
ljmp
xor
mov
cmp
cmc
lods
mov
mov
xchg
iret
or
xlat
and
cmp
mov
dec
pusha
in
subb
mov
push
inc
cmpsl
pushf
jne
shl
enter
mov
imul
out
arpl
mov
adc
insb
jo
sbb
pop
subl
mov
aas
lcall
std
dec
aad
xor
rcll
sbb
call
test
lcall
mov
ja
mov
shlb
dec
add
aad
sbb
test
enter
das
cli
lahf
mov
lods
stos
daa
or
jo
push
cltd
gs
hlt
imul
dec
stos
push
or
ljmp
pop
aam
fs
sbb
hlt
add
xlat
cwtl
and
jo
xchg
push
mov
gs
sbb
sub
or
arpl
push
ret
inc
mov
mov
add
mov
xor
aad
mov
mov
sbb
push
mov
inc
fists
sbb
xchg
ret
nop
adc
dec
int
adc
xchg
and
pop
or
or
cltd
pop
or
rcrl
insl
sbbl
xor
push
jg
cmp
pop
inc
repnz
mov
xchg
fucom
mov
add
scas
mov
xchg
and
shll
mov
jmp
jl
aad
cmp
and
mov
mov
xor
mov
mov
orl
pop
xchg
lret
decl
add
xchg
out
flds
cli
mov
pop
scas
mov
cmpsb
or
imul
ljmp
xchg
aaa
xchg
loopne
shrb
mov
pop
jnp
gs
bound
pop
leave
aam
insb
jg
xchg
divb
aad
jle
cmp
mov
inc
push
negb
mov
jb
out
adc
icebp
shlb
repz
cmp
push
addl
mov
sarl
cmpsb
xor
pop
dec
movsl
mov
sar
subb
cmp
cmp
xor
jmp
push
orl
mov
sahf
jo
xchg
sbb
sub
or
jno
stos
adc
cli
push
sub
sbb
cmpsb
jmp
ljmp
dec
imul
mov
mov
adc
cmp
add
xchg
hlt
int3
leave
lret
ljmp
xor
popl
dec
lds
test
sub
push
adc
insl
pop
cmp
fidivs
pop
in
add
clc
xlat
daa
dec
mov
hlt
lds
les
inc
movsb
pop
mov
cltd
cmp
add
jmp
jb
out
test
jmp
hlt
mov
shrb
sub
fmull
in
and
or
push
test
push
ret
jle
xor
xor
aad
jp
je
pushf
lret
adc
in
imul
int
or
dec
popa
cmp
jns
lea
mov
js
sub
ror
fwait
push
xchg
add
mov
jns
scas
lock
mov
jl
dec
cmp
mov
and
dec
addr16
fidivrs
and
add
jmp
sbbb
mov
andb
jne
test
imul
sub
push
pop
fmull
push
xchg
les
stos
ljmp
std
cmp
add
sbb
push
pop
dec
sbb
lret
mov
fbld
mull
jle
mov
pusha
lret
sbb
mov
aaa
push
data16
pusha
mov
xlat
xchg
jecxz
fstps
push
ret
push
push
cmp
sti
cmpsl
subb
xchg
mov
push
push
add
mov
inc
fstps
pop
xchg
ret
xchg
and
mov
adc
repnz
sub
fstps
pop
loope
pop
add
cld
adc
inc
mov
dec
sub
or
ret
imul
lds
outsl
leave
ljmp
or
out
pavgw
mov
hlt
aad
loope
nop
mov
out
or
popf
stc
mov
pop
cmp
mov
test
inc
sub
ret
cwtl
mov
xor
xchg
imul
jge
cmp
inc
inc
fsubr
xor
fwait
push
jmp
pop
push
std
dec
and
adcb
pop
pop
stos
test
jno
shrl
and
sub
xor
int3
mov
mov
fmull
mov
aam
ljmp
cwtl
xor
mov
pop
cwtl
push
xchg
pusha
lea
out
dec
mov
dec
test
fiadds
xchg
pop
jge
xchg
testb
inc
lret
aaa
addr16
loopne
stos
jecxz
pop
cmp
jns
lods
inc
lret
psrad
jb
dec
adc
mov
cmp
pushf
jl
aas
in
mov
imul
stos
icebp
pop
das
mov
js
fidivrl
lods
sub
xorl
adc
fs
jle
test
xorb
cli
pop
or
andb
sbb
xor
fwait
xor
mov
out
cmpsb
xchg
adc
mov
neg
jl
cmpsl
jecxz
and
mov
mov
je
xchg
mov
xchg
subl
cli
fdiv
into
in
and
adc
mov
dec
lret
repnz
and
inc
out
xor
xchg
xchg
mov
push
fbld
loope
lahf
leave
mov
mov
cld
inc
pop
outsl
cmp
popf
pop
xor
jge
pop
push
idiv
jmp
outsl
aad
mov
dec
arpl
jmp
mov
subl
in
add
jne
xchg
ds
jno
dec
mov
push
and
mov
das
pop
lods
xchg
mov
or
cmp
mov
scas
cli
mov
loop
or
mov
mov
scas
les
xor
pop
movsl
mov
jns
jnp
mov
sbb
inc
pop
xchg
pop
fwait
sbb
push
push
outsb
and
aas
add
lgs
lret
sti
dec
lock
sub
cmp
mov
dec
dec
loopne
fisttpl
cltd
dec
mov
lods
mov
jo
sbbb
xlat
mov
out
rclb
sub
xchg
sub
sbb
lcall
jns
cmp
mov
sbb
ljmp
aas
lods
loope
cmp
lods
jb
imul
sbb
sub
lds
inc
test
fwait
aas
sub
cltd
mov
or
bound
add
es
xchg
dec
cmp
repz
sbb
ret
ret
mov
je
rclb
pop
mov
push
xor
adc
dec
sti
pop
dec
pop
and
add
rcrb
and
movsb
cs
daa
stc
ficoms
xor
xchg
adc
inc
js
adc
insb
insl
jns
push
mov
xchg
fistpl
mov
pop
dec
popa
out
mov
jo
sbb
test
cltd
sbb
nop
adc
push
xchg
jae
es
lret
push
add
xchg
mov
into
jg
ret
xchg
mov
sti
sbb
xchg
mov
mov
or
imul
push
or
jb
or
ret
stos
pop
das
test
stos
pop
sarl
dec
je
or
pop
in
sbb
push
xor
jg
aas
pop
outsl
aaa
add
das
mov
ljmp
inc
xor
add
jne
outsl
jno
jecxz
sbb
and
and
shrl
push
in
cmp
and
ja
loop
daa
push
or
icebp
cld
mov
sbb
sar
cmpsb
test
pop
sbbl
lret
cmpb
and
hlt
pop
push
stos
cmpb
xor
sub
jns
xchg
lea
push
adc
cmc
pusha
pop
or
xor
je
xchg
ljmp
shrb
dec
and
imul
pop
sub
mov
dec
shlb
adc
loopne
mov
lret
ljmp
jne
repnz
into
in
ret
pusha
add
mov
mov
push
mov
sub
mov
xrelease
xor
daa
cmp
add
loope
cmpsb
cs
mov
cmpsb
in
test
push
and
pop
adc
xchg
into
stos
add
push
loop
shrl
loope
add
bound
gs
cmpb
jnp
push
stc
and
scas
lret
xchg
sub
addr16
daa
adc
aam
and
inc
xor
add
out
push
pop
dec
cmpsl
mov
push
sbb
fs
or
dec
pslld
outsl
test
nop
imul
add
sub
inc
fwait
adc
gs
test
mov
lds
in
sub
je
leave
movsb
sbb
jecxz
sbb
push
xchg
inc
mov
sub
jb
fstp
inc
or
fdiv
xor
sbb
xchg
scas
aad
pushf
sbb
addb
sarl
enter
sub
add
xor
int
lock
xchg
lock
idivl
leave
jb
sub
test
dec
cwtl
ljmp
aas
pop
sbb
gs
push
pop
jl
lret
adc
xor
movsb
stc
out
jmp
lods
shlb
mov
jmp
or
out
ljmp
xor
cmp
jnp
sti
lcall
scas
sbb
mov
out
arpl
inc
dec
mov
jp
loopne
add
xchg
decl
xchg
mov
lods
and
jge
gs
fisubrs
lock
push
jmp
sbb
mov
aaa
xor
mov
pminsw
into
mov
mov
lret
ret
lret
add
cltd
into
ret
ret
fcompl
icebp
int3
sub
imul
mov
xchg
aad
cmp
es
js
mov
insb
pushf
insb
rorb
lret
clc
pop
std
leave
push
dec
popf
inc
mov
mov
dec
add
loopne
cmp
cmp
or
loope
inc
sub
push
fisubrs
aam
lds
dec
lods
cmp
mov
into
addr16
imul
add
ljmp
adc
sbb
fisubl
repnz
fmull
pop
fiaddl
mov
insb
dec
loopne
xchg
sub
rorb
loopne
mov
mov
inc
jp
jge
inc
pop
jbe
jg
daa
repz
and
sti
xchg
cwtl
jp
push
lods
mov
scas
xor
enter
mov
fsub
div
arpl
and
loope
xor
in
ja
xor
jge
mov
lds
pop
cmp
add
dec
outsb
inc
cltd
sbb
addr16
push
lcall
pop
add
mov
out
push
mov
pop
xchg
xchg
adc
imul
inc
sub
sbb
jbe
cld
xchg
or
xchg
mov
stos
mov
sbb
int3
repz
jmp
mov
mov
add
mov
inc
icebp
nop
test
fisttpl
out
iret
ficoml
mov
clc
dec
mov
mov
js
jmp
pop
and
mov
movb
pop
adc
push
push
or
xor
or
sti
aaa
ud2
cmp
cli
mov
xchg
push
mov
jp
lahf
int
xchg
xchg
pop
ds
dec
testb
xchg
or
jne
mov
hlt
jmp
pop
and
dec
scas
xor
ljmp
into
out
rcl
test
jnp
fldcw
push
arpl
add
popa
arpl
and
adc
xorl
jnp
scas
out
and
sbb
iret
daa
jecxz
pop
pop
xchg
fs
aam
stos
lahf
mov
add
insb
xchg
insb
adc
roll
dec
repz
cwtl
aaa
xchg
lock
repnz
pop
scas
mov
push
sbb
das
fistpl
aam
stc
adc
ret
out
pop
and
jno
xchg
fimull
sbb
push
mov
dec
mov
les
clc
call
mov
sub
xor
mov
jmp
pushf
xchg
xlat
out
addr16
add
push
movsb
cmc
ljmp
and
sti
jmp
mov
lcall
cmpsl
ljmp
je
fsubrl
or
mov
lods
mov
xchg
jg
mov
pop
stos
clc
add
repnz
sub
stos
or
enter
hlt
ja
aam
inc
loopne
sub
testl
lcall
mov
jp
xchg
pop
and
in
pop
jae
notl
pop
xchg
insb
xchg
fsts
push
cwtl
mov
mov
in
push
adcl
cmpsb
lea
aad
data16
cmp
jmp
mov
js
out
jg
jbe
push
sub
test
push
ja
out
pushf
pop
pmaddwd
mov
fbstp
fimull
lcall
add
bound
push
and
mov
jb
sti
push
lahf
xlat
sub
iret
lret
fmuls
push
idivl
jg
lea
inc
lods
adc
xchg
out
ss
jae
dec
or
push
stc
test
and
xchg
pop
lret
sbb
lret
add
lcall
in
xchg
notb
pop
mov
mov
dec
ficompl
jecxz
jae
aaa
jl
push
lret
rorl
dec
mov
lret
in
test
fnstenv
inc
mov
mov
lods
jne
xor
mov
push
scas
mov
bound
rolb
jno
frstor
mov
test
or
push
inc
aam
pop
cltd
aad
inc
daa
sub
pop
jb
sub
add
clc
pop
pop
or
inc
pop
pop
sahf
sub
into
xor
mov
mov
test
scas
xor
int
jne
mov
lcall
cmpsl
cmp
mov
sarb
jmp
sti
pop
lahf
cmpsb
ds
xor
add
or
jnp
mov
shrl
sbb
data16
push
pusha
std
std
stos
movsl
iret
jmp
out
aas
add
rolb
movsb
jl
and
cltd
and
cmp
or
mov
jae
jg
sub
not
mov
ss
nop
incl
dec
sbb
dec
lea
add
mov
dec
jecxz
add
ret
pop
push
dec
into
ds
sbb
jge
call
pop
out
addb
mov
xchg
movsl
popl
sar
out
loope
test
cmpl
xchg
out
in
mov
lret
or
pusha
cmp
nop
outsl
jcxz
outsl
ret
test
into
das
add
test
jnp
jecxz
xor
dec
push
inc
mov
pop
scas
out
stc
pop
xchg
bound
cmp
pop
xchg
mov
sub
ljmp
cmc
jecxz
adc
xor
clc
xorb
js
xchg
mov
mov
sub
dec
mov
and
jp
or
adc
xor
dec
jle
adc
sub
adc
adc
mov
les
not
popf
into
scas
and
repz
aas
es
push
inc
push
or
add
cmpsb
notl
imul
daa
pop
jle
shl
adc
sub
cwtl
test
addr16
cmp
imul
mov
xchg
inc
fwait
pop
mov
pushf
rcll
cmpsl
leave
scas
inc
sbb
mov
nop
push
push
cmpl
mov
mov
aas
mov
jp
mov
sub
add
xor
js
mov
mov
push
mov
aaa
add
mov
xor
addr16
jecxz
insb
fucomip
or
mov
add
xchg
ds
cld
in
pop
sahf
pop
push
sub
fcomps
add
data16
out
lahf
add
lods
data16
mov
sarb
inc
je
inc
dec
adc
out
pop
jle
out
push
and
js
add
pop
loop
loopne
lods
in
sub
cwtl
fnstcw
mov
mov
loope
dec
pop
mov
cmpsb
out
cmp
sub
cmc
mov
test
push
or
xchg
int
subl
mov
pop
dec
xor
mov
mov
push
dec
cltd
adc
imul
push
jae
ss
pop
repnz
sub
cmp
xchg
sub
add
jae
test
cld
push
mov
jns
pushf
ds
fimuls
jge
insb
mov
iret
insb
add
inc
and
cmp
scas
add
lahf
call
push
je
rol
out
jne
inc
mov
pop
fcoml
push
mov
and
lods
pop
insb
in
push
inc
mov
inc
rsqrtps
imul
frstor
add
mov
mov
push
jmp
out
and
mov
or
iret
mov
mov
pushf
xchg
mov
mov
fwait
mov
inc
hlt
aaa
push
jg
xchg
sahf
xchg
lea
outsb
sub
lds
sub
xor
and
arpl
imul
pop
dec
ret
pop
adc
cmp
or
hlt
imul
dec
mov
xor
jmp
das
in
test
mov
mov
out
imul
sti
xchg
ret
jp
jecxz
xor
pop
out
cmp
inc
ja
rclb
and
in
fwait
push
in
scas
mov
fwait
test
repz
lods
out
sbb
add
xor
mov
cmp
mov
aad
mov
sbb
mov
xchg
jbe
push
shlb
add
in
mov
pop
les
cmpsb
and
jp
in
mov
shll
dec
fcoml
push
int3
pop
dec
outsl
push
fildl
push
aas
mov
aad
ret
fistps
dec
push
aaa
mov
sbb
jmp
cmpsl
cmp
jecxz
gs
mov
adc
sub
scas
push
or
scas
repz
xchg
sub
and
ds
data16
or
pop
out
jle
sbb
push
repz
clc
pushf
jo
xor
out
jecxz
ss
cmp
add
in
pop
and
jmp
push
mov
ljmp
ret
js
cltd
adc
add
imul
aad
in
mov
sbb
shlb
xchg
mov
repz
call
and
in
jnp
and
cld
jnp
jl
push
push
hlt
out
mov
or
xor
inc
aad
cmp
cld
cli
iretw
adcl
jmp
jmp
adc
aas
cli
imulb
cli
cmp
in
adc
in
lods
movsb
push
cmp
ret
dec
lds
inc
fiaddl
lret
sbb
call
push
pop
or
xchg
cltd
inc
add
aas
js
jae
sub
iret
imul
enter
adc
xchg
and
sbb
das
pop
test
mov
lods
xchg
pop
or
gs
loop
sbbl
or
pushf
add
mov
cmp
and
ret
mov
push
pop
xchg
mul
push
arpl
popf
pop
ret
rol
clc
iret
inc
inc
sbb
mov
xchg
pop
mov
dec
imul
notb
roll
sbb
aaa
mov
fstl
lods
push
lods
data16
jp
mov
aam
loop
mov
xchg
movsl
cmp
add
push
xorl
cmp
pop
hlt
xchg
rorl
js
pop
mov
or
push
fistpl
mov
sahf
aas
xor
cmp
loope
imul
jo
cwtl
mov
rcrl
dec
xor
jne
into
in
sub
sub
frstor
pusha
jae
push
in
xorl
push
sub
dec
fs
test
pusha
pop
mov
adc
fsub
xchg
adc
movsl
aaa
and
stc
mov
bound
inc
pop
push
int3
push
daa
lcall
loop
cmp
popf
and
in
cmpsl
inc
cmp
push
aam
push
mov
mov
and
arpl
inc
outsb
in
sbb
cltd
jnp
faddl
gs
jo
push
xor
rcr
pop
cmpsb
into
push
xchg
push
mov
xor
and
cmpsb
pop
xor
std
ds
add
js
sbb
mov
mov
push
sbb
sbb
push
push
jae
insl
cmpsb
fdivrs
das
jb
adc
lods
fistps
mov
sti
or
mov
jle
jb
xchg
add
pop
fisubl
insl
imul
mov
dec
pop
jmp
in
movsl
add
cmpsl
ds
fdivs
xor
aaa
aam
jle
pushf
push
sti
jle
adc
xchg
rorb
and
pop
outsl
inc
mov
test
xchg
mov
pop
out
jl
adc
sub
mov
pop
inc
leave
leave
mov
js
xchg
mov
cltd
in
pop
inc
xor
sarl
push
cld
test
cmp
xchg
mov
jns
mov
jo
jne
pusha
popf
adc
and
mov
jo
stos
movb
push
and
and
pop
fisttpl
mov
filds
push
push
lods
hlt
lock
pop
cmp
or
add
je
stos
shrl
xchg
negb
mov
xchg
ret
adc
xchg
rclb
roll
arpl
lret
in
mov
das
xor
imul
jp
dec
jge
insl
push
xor
sti
iret
in
addb
or
xor
popf
cmp
xor
inc
dec
movsb
pop
push
cmpsl
insb
lea
push
sbb
fistps
mov
out
xchg
cs
sbb
sbb
jecxz
dec
fistpl
dec
gs
mov
xor
cmp
push
sub
sti
std
or
xor
lock
and
int3
sbb
mov
pop
ss
or
incl
cmp
sbb
test
imull
inc
je
mov
pop
xor
xor
ror
jmp
stos
rorb
jge
rclb
aad
aaa
das
insb
dec
or
fcoms
add
or
ror
xor
daa
scas
out
xchg
sub
push
adc
pop
jp
fbstp
pop
mov
jl,pt
lret
push
es
cmpsb
pop
in
mulb
push
mov
mov
or
popa
stc
data16
xchg
sar
test
push
es
mov
cmpsl
pusha
fisttpl
inc
test
push
lods
inc
mov
jnp
dec
mov
lret
xchg
lock
xchg
xor
dec
push
jb
insl
mov
test
push
stos
js,pt
dec
or
and
inc
cmp
mov
sbb
jb
adc
push
es
pop
dec
mov
lahf
out
repnz
lcall
insl
cmp
add
das
cmp
mov
mov
adc
loope
pop
test
jns
and
pop
xlat
bound
addr16
or
cmpsb
pop
bound
or
icebp
test
dec
jns
sub
insb
jecxz
add
mov
loop
adc
je
into
inc
jle
xchg
dec
lock
jmp
mov
jg
jne
cmp
jb
jmp
dec
or
dec
xor
cli
mov
clc
addl
cmp
push
and
dec
pushf
mov
pop
cmp
xor
add
add
xor
stc
or
shll
adc
mov
inc
icebp
loopne
ds
dec
or
sub
ds
inc
xor
and
fstl
loope
movsl
add
cli
sbb
lods
pop
ret
jne
inc
out
jg
add
orl
pop
push
cs
adc
mov
mov
fsubrs
test
cli
xor
fwait
push
xor
lret
pop
inc
or
in
mov
push
icebp
xchg
test
jb
mov
fildl
mov
jb
adc
popa
ss
jg
std
sub
jns
cmp
in
mov
loop
or
xchg
add
pop
push
pop
inc
mov
outsl
sub
arpl
pop
scas
movsb
push
subl
mov
ficomps
gs
orb
add
adc
mov
insl
sbbl
push
orb
lea
mov
das
lret
sbb
add
xchg
pop
push
pop
dec
cmpsl
stos
push
push
sti
jl
into
lds
inc
sub
and
mov
bound
jno
shrb
loope
pop
pop
fnstenv
mov
addr16
ja
pushf
mov
les
mov
jns
imul
clc
sub
lret
mov
getsec
push
insb
xor
xrelease
sbb
add
lds
sbb
mov
test
cmp
iret
jno
mov
mov
jne
cli
add
sbb
pop
pop
inc
sbb
adc
outsl
test
lea
mov
punpckhbw
lock
aam
test
or
mov
jbe
fsubs
push
mov
sbb
mov
add
jg
cmpl
xor
xorb
das
adcl
and
push
push
into
lcall
add
jnp
pop
jne
int
hlt
loop
jp
inc
or
cltd
pop
popa
sbb
cmpsb
call
repz
xchg
push
mov
mov
cmpsl
fmulp
js
dec
pusha
xchg
jns
add
or
sub
sbb
rcrl
xchg
and
imul
repz
lock
inc
pusha
fbld
out
inc
jmp
imull
inc
dec
fisttpl
inc
sti
cmc
xchg
shll
mov
ja
cwtl
leave
out
je
mov
jg
lret
scas
push
inc
xor
mov
roll
inc
jb
lahf
pop
push
pop
pop
loop
out
jg
cli
int3
dec
out
xlat
loop
pop
adc
clc
lds
je
in
in
mov
jp
sbb
pushl
lret
addb
lcall
dec
and
notb
and
add
loope
or
insl
pop
push
sbb
ja
pop
jno
repnz
int
mov
xchg
in
mov
iret
sub
mov
xor
xchg
loopne
push
xor
mov
jmp
rol
rcrb
sub
sub
repnz
xchg
aaa
out
movsb
mov
mov
movsl
test
cmp
shll
jp
xchg
insb
and
insl
adc
inc
jb
bound
fistpl
incb
xchg
xor
cmp
mov
push
rorb
mov
shl
push
and
pushf
rol
insl
out
and
jnp
dec
subl
pop
test
rorb
imul
mov
daa
mov
ret
ljmp
insb
dec
aad
cwtl
nop
mov
ss
jae
cld
notl
jl
or
adc
jne
shrb
enter
pop
sbb
push
or
cli
push
add
lods
pushf
mov
or
cmp
cmp
sbb
cmp
mov
andl
fdiv
mov
jmp
outsl
ja
insl
xor
jne
cmovbe
arpl
popl
cmp
mov
sbb
jno
push
leave
test
adc
push
cmp
sbb
cltd
call
insb
mov
insl
mov
iret
adc
jns
jmp
dec
mov
mov
fwait
sarb
inc
xor
push
test
lret
in
inc
pop
mov
adc
cmp
ja
lahf
gs
fisubs
gs
xor
out
clc
xchg
movups
sbb
mov
or
movsb
hlt
jmp
push
sub
decb
mov
or
fdivrl
mov
mov
jle
jmp
insl
outsb
jecxz
ss
xor
xchg
scas
popa
xchg
xchg
test
sbb
lea
ficoml
and
xchg
fstpt
pushw
cli
loop
mov
data16
insb
andl
add
dec
lahf
out
cs
scas
aad
jp
lcall
mov
ds
inc
mov
cmp
flds
pop
xchg
lods
outsb
pop
enter
sub
aaa
push
cli
dec
popf
lods
dec
cmpsl
add
sbb
sbb
sbb
mov
popf
xlat
cmp
repz
leave
rcl
or
bound
hlt
and
mov
sbb
test
cli
or
cmpsb
out
and
mov
or
pop
out
outsb
push
shlb
stos
pop
int
leave
lret
cmp
aad
pop
into
inc
sahf
xchg
std
sbb
and
stos
aam
std
cmp
ficomps
xchg
cwtl
outsb
lods
loop
sub
data16
jl,pn
mov
push
mov
movsl
dec
xor
mov
mov
mov
cmpsb
movsl
hlt
adc
and
test
xchg
rorb
xchg
xor
cmpsl
out
iret
out
pushf
cmp
shll
sbb
mov
pop
test
jecxz
out
adc
fnstsw
pusha
divb
pop
lods
xor
loopne
sbb
inc
popa
ret
popf
ljmp
cwtl
cmc
jmp
xor
ficoml
sarl
mov
and
add
pop
mov
pop
pop
add
jno
into
lods
mov
xorb
pusha
push
popf
push
js
pushf
mov
stos
in
into
test
jb
dec
mov
bnd
mov
push
fmull
inc
cmpsb
and
insl
pop
stos
hlt
fdiv
test
dec
jmp
out
addr16
test
jnp
mov
adc
xorb
push
push
sbb
fstp
idivl
cmp
insl
in
push
mov
out
rolb
jbe
fs
dec
inc
adc
dec
xor
cmp
fsubr
lods
add
mov
lods
dec
ficomps
or
or
or
and
int
iret
stos
sti
test
inc
shl
mov
call
inc
mov
rcl
mov
push
mov
and
push
or
pushf
lods
out
mov
add
ja
divl
rcl
cmp
cltd
lahf
nop
gs
sub
fiadds
loopne
jb
xor
cmc
popf
fidivrl
les
shr
popa
push
or
icebp
addr16
outsb
or
stos
lea
inc
cltd
xchg
cmp
andb
sbbl
push
aas
js
pop
pop
ljmp
ret
cltd
repz
fstp
and
fwait
scas
scas
and
jnp
jne
ss
adc
mov
aaa
or
lea
mov
jns
mov
mov
aad
xchg
xchg
call
mov
loop
cmpsl
scas
jb
mov
cwtl
aaa
mov
and
mov
mov
pop
push
and
testl
mov
stos
rolb
xor
out
and
cmp
daa
in
pop
out
sbb
dec
pop
addr16
pop
dec
out
push
iret
movsl
pop
stos
ds
or
mov
jae
or
and
push
jge
inc
pop
addr16
cmpsl
sbb
frstor
jmp
push
loop
inc
mov
cmp
pusha
pop
stc
pop
mov
push
xchg
mov
pop
mov
add
sub
push
ficompl
jmp
fisubs
js
jnp
icebp
add
repnz
pushf
inc
imul
rcl
push
insl
sbb
fs
xor
insl
clc
jns
pop
cltd
test
icebp
xchg
mov
or
xchg
aas
jno
or
mov
lret
mov
or
add
fimull
imulb
int3
jns
jp
mov
hlt
arpl
dec
arpl
push
adc
sub
cld
imul
int
mov
and
sbb
lcall
movsl
stos
pop
gs
ljmp
sub
push
adc
loopne
cmpl
fimuls
call
mov
lods
lcall
in
sbb
inc
xchg
or
pop
lock
jne
scas
mov
in
push
stc
push
or
jmp
std
or
and
inc
scas
cmc
adc
cmp
lret
and
pop
movswl
jo
lock
adcb
xchg
int
popf
or
popl
ss
and
or
add
and
enter
repnz
mov
xor
and
stos
inc
xchg
mov
lcall
push
adc
adc
insl
pop
es
inc
mov
movb
pop
fnstenv
push
addl
xchg
fldt
lock
push
fbstp
call
call
sub
mov
insb
addr16
popf
in
loopne
jo
rcrb
dec
ds
out
inc
pop
add
push
std
inc
je
jmp
push
insb
jg
into
cmp
sbb
lock
insb
adc
sbb
lea
fists
gs
dec
lds
in
pop
xchg
xchg
enter
inc
push
cmp
push
adc
lea
aad
dec
scas
in
sbb
pop
or
lret
inc
pushf
fldenv
lds
and
stos
jmp
xchg
mov
mov
stos
add
and
jmp
jl
out
lret
push
mov
leave
push
sti
add
insl
xorb
addr16
sbb
inc
dec
inc
xchg
push
pop
js
mov
push
sub
push
dec
sets
sub
sbb
leave
bound
subb
xchg
popa
push
aad
cmp
mov
dec
add
daa
xchg
push
stos
jmp
sub
clc
xchg
lret
add
sti
loop
lods
enter
inc
adc
jae
pop
scas
cltd
sbb
mov
pop
jge
fidivrs
sbb
and
pop
scas
mov
frstor
cwtl
les
pop
arpl
stos
stc
leave
fnsave
fs
xchg
int3
jg
and
sbb
lods
jmp
scas
out
and
lret
dec
in
divb
pusha
gs
sbb
fldt
dec
in
or
inc
lret
repz
or
and
fdiv
mov
adc
mov
js
shrb
mov
jp
mov
and
cmc
add
xchg
sbb
in
inc
or
push
negl
sbb
dec
lret
les
pop
test
insb
int3
sub
fidivrs
jl
adc
xor
jge
xor
mulb
pop
dec
lret
jge
pop
test
push
adc
data16
shrl
add
or
mov
add
or
js
ret
mov
and
push
sub
inc
xchg
cmpsl
lods
adc
scas
inc
movsb
or
psubq
jp
les
xor
mov
mov
jl
pop
lods
insb
xor
cltd
adc
pushf
iret
inc
xor
outsl
sbb
push
daa
mov
and
daa
xor
pop
fwait
or
mov
mov
pop
jmp
pop
in
aad
rcrb
arpl
jecxz
xchg
xchg
dec
nop
xor
loope
shlb
and
orl
mov
and
jmp
push
shl
shr
xchg
imul
mov
lods
js
mov
push
cmpsl
adc
pop
dec
notl
and
fs
sahf
rclb
inc
movsl
shl
xlat
es
inc
sar
add
lods
push
dec
mov
dec
test
cs
arpl
popa
push
int
inc
in
fnstcw
mov
push
xor
test
pop
ja
and
nop
jno
and
ret
adc
movsb
mov
shl
imul
shrl
mov
je
mov
in
test
cmp
pop
push
lods
ds
xor
out
les
sbb
aam
addr16
xchg
adc
out
xchg
sbb
inc
insl
mov
push
cmp
pop
push
inc
fidivrl
addr16
inc
inc
mov
jge
out
jae
lret
push
jbe
mov
lret
mov
sub
cs
inc
repnz
inc
sbb
ljmp
xchg
add
jle
mov
or
sbb
loope
pop
arpl
popf
in
mov
fcomp
shlb
sub
ljmp
add
jo
fldcw
mov
subb
iret
push
repz
add
lods
ss
mov
mov
cmp
pop
sub
lds
shll
ficoms
int3
push
cmp
nop
loope
mov
inc
sub
int
dec
leave
outsl
and
mov
cld
loop
jnp
inc
mov
cs
leave
adc
es
int
sbb
test
out
push
fs
dec
jno
and
or
adc
arpl
dec
pushf
movsb
mov
out
aad
popa
or
cmp
stc
bound
push
sbb
or
push
out
scas
inc
cmp
pusha
movl
jo
insb
imul
incl
movsl
mov
ret
mov
fisttps
mov
sbbl
jbe
mov
jg
addr16
test
xchg
cmp
jns
inc
jl
xchg
dec
iret
adc
cli
out
clc
int
lcall
dec
lods
cmpsb
cmp
stos
fstpt
cltd
push
bound
mov
push
jb
push
mov
lods
mov
jae
push
call
pop
cmp
xchg
inc
jo
mov
and
push
add
cltd
fbld
mov
out
leave
mov
sbbb
xchg
fwait
int3
sub
xchg
loope
into
mov
jp
xor
fsubrl
ficomps
cltd
xor
jb
mov
faddl
cmp
mov
xchg
repz
scas
andb
sub
dec
es
xchg
mov
lret
add
test
xchg
jl
or
xor
cmp
sub
cwtl
jle
jno
push
aas
and
movsl
pop
jmp
bound
sbb
cmpsb
adc
jno
or
mov
xor
xchg
sbbl
pusha
push
out
mov
xchg
push
ret
sub
xchg
or
and
push
outsb
mov
mov
clc
or
mov
imul
mov
sbb
icebp
and
xchg
mov
dec
int
mov
or
jo
test
pop
aas
and
mov
pusha
push
push
jbe
dec
mov
stos
and
push
pop
stc
inc
mov
sub
pop
arpl
enter
arpl
xor
pop
mov
idivl
inc
fisubl
ds
cmp
sbb
xchg
lds
mov
push
push
test
ror
fcmovbe
lahf
jbe
loop
stos
pop
lods
push
add
out
mov
outsw
iret
cmp
mov
pop
jno
xchg
pop
pop
xor
mov
out
sbb
mov
mov
mov
jne
xchg
xchg
aas
jge
add
dec
xchg
sbbb
fistpll
jl
clc
into
jno
leave
jb
test
scas
adc
arpl
shlb
and
dec
cwtl
cmpsb
out
test
jbe
cltd
mov
and
mov
popf
bound
popa
in
nop
push
leave
repnz
testl
in
jle
inc
pusha
mov
movsl
xchg
xlat
sbb
push
enter
mov
pop
cmovo
test
mov
mov
in
mov
fisttps
movsl
sub
add
sarl
scas
jnp
mov
out
insl
out
pop
adc
and
cltd
imul
outsb
std
and
leave
cwtl
data16
and
add
inc
in
and
test
out
adc
movsl
pusha
xchg
rol
cmpsb
and
fistpll
stos
je
inc
bound
ret
out
xchg
int
std
mov
xor
add
cmp
bound
sbb
adc
pop
push
and
and
loopne
sbb
mov
fsubr
or
loop
gs
lcall
pop
in
leave
sbb
fdivl
popa
or
fwait
mov
jl
push
mov
scas
dec
sbb
cli
jns
fs
mov
add
std
adc
rcrl
dec
into
push
pop
add
outsl
cmp
jge
sbb
hlt
test
cmp
mov
inc
imul
in
aad
mov
jmp
sar
mov
pop
dec
lcall
xchg
xchg
cmp
ja
ja
adc
scas
popa
ret
jb
jecxz
add
leave
dec
cmpsl
inc
cld
adc
rcll
pop
mov
jb
popa
mov
out
insb
mov
push
rorb
pop
cltd
enter
sbb
mov
insb
or
adc
jns
shll
repnz
inc
sti
addr16
inc
cmp
test
sti
xchg
pop
lea
xchg
jo
inc
outsb
sub
cmp
insl
fneni(8087
inc
mov
cmp
mulb
sub
jae
dec
jne
xor
cmpsb
and
push
sub
cli
pop
pop
mov
pushf
or
mov
addr16
jmp
sub
cmc
aaa
lds
int
adc
in
mov
ds
cmp
xor
pop
adc
outsb
mov
stos
in
mov
out
mov
xchg
sub
push
clc
mov
mov
test
fcomp
lahf
clc
sti
arpl
jne
add
ret
add
icebp
adc
ret
or
xchg
outsb
adc
sbb
and
insl
mov
cmp
jnp
pusha
cmp
jo
cmp
xchg
repnz
mov
pop
pusha
pop
jle
mov
mov
sbb
mov
imul
loopne
mov
xchg
and
cmpsb
cmp
cmp
out
lds
or
mov
inc
dec
mov
andl
push
aas
inc
mov
dec
xchg
mov
and
cmp
out
adc
mov
lds
push
test
cmp
push
and
leave
fimull
cmpl
movsl
jl
lret
pop
lcall
div
sarl
mov
jns
sub
adc
testb
lahf
jle
adc
stos
clc
popa
jbe
mov
icebp
xor
inc
lret
nop
clc
stos
adc
inc
adc
int
adc
pop
adc
jno
int
aad
xchg
jmp
xchg
jecxz
sbb
scas
mov
xor
add
mov
aas
xchg
jecxz
call
cmp
andl
clts
push
inc
jne
dec
bound
adc
sbb
xchg
movsl
mov
in
addl
pop
shlb
xchg
xor
mov
out
mov
enter
pop
fwait
mov
dec
cmp
sbb
test
adc
pop
test
lock
xchg
pushf
shl
mov
mov
xchg
pusha
xchg
daa
push
std
aaa
push
mov
pop
xchg
pop
std
inc
jmp
sub
les
loop
ret
repz
mov
mov
ret
add
xchg
inc
mov
push
scas
outsl
mov
push
je
movsl
jg
imul
lock
fadds
mov
mov
ret
or
dec
add
lock
int
into
pop
xor
fmuls
push
call
mov
or
push
popl
jne
test
cld
pusha
sub
cmp
std
movb
cmp
fidivl
test
iret
jns
movsb
push
fstpt
jo
in
call
ljmp
xor
dec
nop
sbb
pop
aas
mov
add
add
sbb
cwtl
mov
lea
inc
xchg
jae
adc
sbb
mov
push
pop
sub
test
leave
add
loope
push
add
xchg
sub
xchg
and
mov
push
or
fdivp
enter
xchg
sahf
jp
or
xor
xchg
lahf
cli
mov
adc
mov
outsb
sub
adc
imul
les
jo
ss
dec
push
xor
pop
pop
fs
cltd
dec
clc
aaa
xchg
pop
pusha
cmpsb
jp
jle
xchg
in
test
aas
add
push
pop
fwait
pop
dec
mov
mov
xchg
pop
pop
xchg
cmp
repz
push
loopne
stc
rcll
test
or
dec
inc
daa
aad
xchg
pusha
sub
dec
notl
lcall
jbe
sbb
push
mov
lea
pop
add
inc
loope
xchg
pusha
js
jl
sub
pop
pop
ja
lret
xor
sub
test
sbb
loopne
mov
daa
dec
out
pop
mov
test
orb
decb
mov
int
incl
ret
sub
ja
sub
dec
mov
int3
dec
in
pop
pop
push
roll
adcb
xchg
xchg
mov
scas
inc
testl
call
pop
adc
push
pusha
or
lods
sar
stc
faddp
or
lods
sbb
cs
bound
cmp
xor
or
push
mov
out
fidivrl
mov
and
or
popa
pop
shlb
pop
icebp
sub
inc
call
clc
aaa
out
inc
std
cmp
out
test
mov
in
pop
xchg
loopne
mov
adc
jge
fs
inc
insb
inc
daa
xchg
jne
lahf
lahf
and
and
bndstx
mov
sub
mov
xor
scas
xchg
add
imul
sub
sbb
and
fildl
lret
jecxz
jns
aas
daa
xchg
mov
pop
inc
es
movsl
in
test
sub
jae
in
mov
jo
or
push
jecxz
mov
stos
mov
fbld
bound
cld
rcll
jge
pushf
mov
leave
test
or
xchg
jo
dec
negb
clc
inc
outsb
test
mov
movsl
nop
int
xchg
bound
aad
in
fisttpl
and
mov
dec
lods
xchg
jle
jl
decb
cmp
fisttpll
mov
ret
arpl
cmpsl
sar
pop
xor
clc
push
stos
mov
sbb
add
mov
jbe
movsl
dec
pusha
jg
mov
push
pop
and
xchg
mov
sbb
rcrl
fs
out
dec
stos
sub
stos
pop
addl
dec
mov
pop
jmp
xor
rorb
lcall
stos
rorb
xchg
fbstp
ret
cmc
std
sub
loope
lret
adcb
mov
mov
pop
adc
mov
cld
push
and
push
loop
ss
cmp
fistl
loopne
push
call
cmpb
andb
push
push
mulb
mov
je
inc
cmc
xor
nop
test
jb
push
aad
inc
cwtl
xchg
sub
add
and
adc
rcl
pusha
inc
push
and
jl
aaa
in
mov
sub
arpl
aad
mov
out
rorl
add
mov
sub
xchg
lea
icebp
adcb
add
and
ret
lds
shr
lret
dec
rcrb
jns
push
sub
mov
xchg
mov
and
lahf
mov
mov
dec
dec
push
stc
xor
aad
sbb
add
nop
mov
or
adc
in
shrl
out
add
mov
iret
repz
int
insl
pop
cmp
mov
mov
fs
sbb
rcrl
inc
push
sahf
inc
jae
cmp
push
ja
adc
adc
or
iret
aas
mov
pop
out
sahf
inc
and
xor
rcrl
test
inc
xor
inc
icebp
dec
ret
or
outsl
fwait
loopne
push
mov
into
and
sbb
out
fwait
mov
in
xchg
lahf
mov
xorl
mov
inc
adc
xor
cmp
mov
push
out
hlt
mov
out
sbb
xchg
mov
dec
daa
sbbl
jnp
mov
sub
dec
sarl
test
fnstsw
in
std
jecxz
mov
stc
mov
mov
inc
loopne
jnp
sbb
dec
stos
cmp
loopne
js
aaa
loopne
fcmovne
mov
rorb
push
add
xchg
gs
cmp
cli
outsb
pop
mov
lods
push
jecxz
int
pop
out
sub
lods
pop
js
jnp
jle
mov
adc
sbb
ss
adc
jns
test
sahf
sbb
out
mov
add
push
mov
int3
ljmp
mov
ret
clc
dec
jp
imul
dec
dec
hlt
mov
sbb
xor
jmp
ds
subb
mov
pop
test
enter
fnstsw
xor
pop
xchg
push
rcrl
inc
mov
insl
popa
das
sub
fs
inc
mulb
xchg
arpl
jns
fwait
mov
add
pop
icebp
mov
sub
inc
bound
xor
mov
cli
push
or
fildl
and
cltd
jae
lods
call
sbb
stos
jno
push
cwtl
out
xor
sti
adc
das
jo
in
test
or
fisttps
seta
cltd
inc
jp
inc
or
rorl
mov
inc
filds
mov
mov
push
loopne
outsl
inc
jle
inc
movsb
jecxz
rorl
mov
xchg
das
dec
add
dec
inc
xor
roll
xchg
and
negl
dec
int3
lret
xor
sub
xchg
cmp
popa
cwtl
andl
sti
loopne
out
cmp
repnz
and
hlt
and
xor
aam
xchg
lds
xor
xorb
fistpl
xchg
adc
fsubl
pop
mov
lcall
sbb
sbb
stos
adc
cmp
enter
addr16
cmpl
clc
test
mov
loop
aad
leave
xor
mov
sbb
call
push
rorb
scas
dec
test
mov
sbbl
int3
out
inc
xchg
mov
inc
ljmp
jp
fisttpl
popf
pop
into
iret
adc
js
insb
mov
jb
pop
xlat
pmullw
and
es
sahf
jmp
mov
dec
dec
add
pop
insb
mov
xchg
xchg
fsubrl
clc
enter
mov
xchg
aam
push
push
call
inc
xorl
es
or
fisubs
shrl
xor
pop
out
cmp
repz
cmp
cmp
push
pop
jo
lock
xlat
sbb
lcall
mov
into
test
sbb
jae
loope
dec
js
loopne
xchg
imul
icebp
adc
stos
push
out
add
out
push
dec
dec
in
push
or
xchg
adc
bound
sub
xchg
push
cwtl
xor
nop
test
mov
cmpb
cwtl
add
mov
jo
jae
xor
ds
jb
js
out
mov
jle
xchg
add
lds
sub
rolb
sub
xor
sub
sbb
mov
pusha
clc
testb
outsb
popa
orb
mov
sahf
push
mov
or
out
add
sbb
pop
fs
and
outsb
popf
xchg
in
fisubl
fldl
pop
cltd
jns
xor
int
jno
pop
icebp
in
sub
cmp
pop
repz
cld
mul
inc
add
insb
daa
mov
jecxz
mov
xor
mov
mov
outsl
sub
adcb
xchg
int3
pop
arpl
incl
or
adc
outsb
fistps
xor
das
fildll
into
pop
je
aad
scas
push
mov
add
jnp
jle
mov
shlb
adc
mov
push
mov
jnp
out
push
loop
mov
add
add
xchg
sbbl
test
dec
jmp
outsb
dec
mov
pop
clc
int3
mov
xchg
inc
xchg
cmp
xchg
daa
dec
xor
faddl
addr16
fadd
out
test
dec
xor
testl
imulb
pop
xor
fldcw
cmp
xor
into
pop
xchg
roll
movsb
jle
adc
sti
xor
fldt
loop
aas
jns
pop
mov
jae
cli
fstl
jecxz
mov
outsb
dec
arpl
ljmp
mov
push
inc
mov
lahf
inc
test
add
repnz
out
adc
cmp
out
shll
mov
mulps
sbb
jbe
sub
movsl
stc
inc
mov
xchg
int
and
out
mov
ljmp
stc
in
inc
push
dec
sub
jb
mov
mov
and
aam
cmp
jle
jge
in
loopne
lcall
enter
mov
cmp
ja
outsl
mov
cwtl
adc
loopne
mov
xor
pop
dec
jno
push
bound
pop
or
test
and
mov
nop
inc
loop
mov
dec
jmp
mov
fstp
and
inc
mov
rol
mov
je
out
stos
stos
scas
in
ret
or
scas
or
push
mov
pop
mov
cld
or
sub
div
bound
xchg
mov
push
lahf
push
xchg
push
lret
inc
push
inc
filds
dec
sbb
dec
mov
aas
pop
repnz
inc
out
std
pop
sbb
push
enter
std
dec
jnp
xor
inc
pop
pop
insl
cmp
test
cltd
jae
cmp
int3
inc
in
popa
inc
inc
xchg
scas
outsl
xor
ret
out
fidivl
and
or
or
mov
and
push
std
mov
test
rcl
in
xor
jae
mov
loop
gs
int3
rcrl
cmp
cld
cmp
push
jg
in
addr16
sti
addl
jno
adc
push
nop
pop
mov
add
lds
cmc
pop
cld
iret
inc
or
lcall
dec
pusha
roll
fldcw
negl
mov
in
add
adc
push
cmpsl
push
orl
jp
std
dec
jg
pusha
popa
cmp
loop
mov
inc
pop
scas
xor
xchg
mov
adc
in
lahf
into
or
insb
add
es
jl
jmp
push
fwait
sub
sbb
xchg
jno
xchg
sub
and
dec
pop
ret
pop
jns
je
xchg
sub
jg
dec
loop
dec
les
push
xor
dec
sbb
cwtl
pop
ja
std
lds
addr16
std
stc
cmpsl
mov
sub
outsb
xchg
jne
out
repz
xorl
nop
and
pop
bound
mov
sahf
and
mov
inc
sub
xchg
mov
in
mov
outsl
pusha
xchg
into
add
cld
lahf
pop
js
aaa
lods
jecxz
outsb
push
push
cmpb
and
imul
mov
cld
fistl
or
push
jnp
jns
cmp
data16
inc
push
inc
mov
inc
and
outsl
add
jne
clc
mov
sub
mov
ret
data16
js
lret
mov
inc
inc
sub
sbb
dec
lcall
in
mov
cs
pop
xor
push
lcall
data16
add
mov
mov
push
or
xlat
cmpsb
call
pop
data16
int
inc
subb
stos
in
lcall
xor
icebp
test
fnstsw
popf
fs
xor
push
cltd
dec
enter
mov
xlat
xlat
outsl
fs
cmpsl
fiadds
cmpsl
inc
fs
xchg
jbe
xchg
xchg
and
test
in
xor
loop
cli
imul
lret
fmull
mov
loopne
sub
pop
icebp
adc
adc
mov
test
adc
outsl
not
pop
xchg
leave
xchg
cmpsb
scas
lahf
adc
cmpsl
call
test
hlt
mov
aaa
inc
jo
in
repnz
xchg
push
mov
adc
cli
das
sbb
mov
push
in
imul
faddp
jb
addr16
xchg
icebp
nop
fidivrl
leave
jns
xor
jmp
jns
cmp
stos
push
mov
add
lahf
xor
imul
add
pop
inc
std
dec
rorl
adc
subl
jecxz
jl
jl
push
lcall
cmp
adc
cmpsl
gs
push
lock
lcall
lea
sbb
adc
les
cmp
rcrl
push
pop
iret
lret
mov
jae
xchg
leave
shlb
push
jecxz
xorl
in
testl
pop
dec
add
inc
push
inc
sti
inc
daa
dec
clc
imul
popf
pop
int
ret
adc
mov
repz
jle
or
cmpsl
je
pop
dec
inc
scas
jno
and
int
fbld
add
shl
test
xchg
imul
andl
sbb
lahf
ljmp
sub
mov
call
add
gs
pop
sub
dec
lahf
les
mov
stc
addl
out
mov
sbb
cld
sbb
adc
and
rcl
stc
stos
or
test
inc
jge
rcll
shll
xchg
or
cmpsb
or
xor
aam
outsl
out
enter
loop
cltd
push
or
fidivrs
inc
sbb
in
pop
mov
mov
mov
test
testb
sub
sbb
cmp
addl
pop
fwait
fwait
or
jl
jmp
mov
mov
xchg
jle
dec
subl
sub
rorl
push
cltd
add
cmc
mov
xchg
pop
adc
sub
inc
mov
or
rol
xor
push
mov
xchg
enter
or
aad
pop
xchg
lcall
xor
xchg
fisubl
aaa
in
stos
sub
push
outsl
imul
jg
sbb
sbbb
mov
inc
nop
leave
rcrb
mov
cmp
rcl
dec
pop
arpl
push
cmp
cs
int
push
outsl
push
sbb
arpl
or
push
push
not
fs
xor
push
loopne
jp
mov
cmp
add
out
ljmp
cli
adc
mov
jecxz
es
jns
lret
fldl
bound
leavew
lods
adc
out
mov
cmp
inc
or
or
ret
leave
cmp
inc
mov
dec
lods
mov
xchg
jo
arpl
lcall
cwtl
adc
jmp
xor
mov
mov
fscale
pop
xchg
jmp
xchg
loopne
es
notb
cmp
mov
inc
pop
add
shr
rcrl
mulb
push
mov
dec
sbb
add
out
add
xlat
sbb
iret
push
rclb
fiaddl
push
cmp
in
dec
inc
pop
shrl
push
dec
adc
dec
into
into
movsb
cwtl
ljmp
xor
les
mov
in
stc
mov
cmpsl
push
xor
cmp
lods
scas
cwtl
xchg
jp
xchg
adc
push
int3
popf
int3
xor
pop
fdivr
aam
push
je
jg
jno
adc
out
scas
std
and
nop
negb
loope
mov
inc
pop
adc
dec
cmpsl
and
movsl
je
sti
xchg
insb
jo
stc
stc
leave
scas
cmp
movsl
mov
mov
movsb
and
les
push
pop
ljmp
outsl
cmp
add
xchg
mov
mov
shl
adc
fs
sti
mov
mov
push
insl
inc
xlat
bound
xchg
rclb
pop
or
enter
cmp
mov
mov
movsb
mov
dec
sbb
cmp
adc
aam
into
push
dec
sub
int
hlt
fcomip
sti
mov
jl
call
rol
mov
call
pushf
mov
mov
js
sub
rorl
inc
mov
inc
out
rcrb
jnp
jns
mov
mov
iret
in
lret
cmpsl
in
push
and
jmp
sbb
and
pop
push
nop
cld
sbb
test
cli
call
das
add
and
jp
jb
gs
add
flds
add
mov
dec
xchg
push
adc
jbe
out
xchg
push
out
mulb
inc
rcl
sbb
loop
mov
sub
adc
and
daa
push
out
jecxz
inc
push
sbb
int3
leave
pop
xor
and
out
ja
lahf
jle
mov
pop
je
push
test
mov
sbb
sarl
stos
imul
push
xlat
dec
xor
stos
js
test
addl
dec
xchg
mov
mov
dec
or
add
pop
repz
push
pop
cld
pushf
test
pop
adc
inc
out
mov
adc
and
int3
int
outsb
stc
ja
and
cmpsb
jae
outsb
in
sahf
jno,pn
call
push
jge
cmp
mov
or
cmp
inc
mov
lods
rolb
out
daa
andb
movsb
aaa
pop
cmpsb
add
frstor
inc
repz
idivb
test
sti
sahf
mov
sub
or
loop
repnz
fwait
arpl
ds
dec
lods
movsb
mov
mov
scas
outsl
push
mov
std
jnp
jg
addr16
js
adc
jbe
jbe
or
inc
mov
add
scas
mov
dec
xor
and
into
dec
mov
push
xchg
jb
add
test
jg
mov
adc
xor
lret
xchg
stos
orl
cmp
push
dec
adc
cmpsl
xchg
xor
xor
mov
fnstcw
aas
or
lods
mov
xchg
mov
out
pop
gs
cmp
loope
jb
fsubs
lods
dec
cmp
int3
fwait
subb
mov
xchg
lods
rorb
add
mov
and
imul
xlat
mov
fidivl
push
test
or
subl
insb
push
aas
jb
std
sbb
and
dec
add
adc
scas
add
shlb
scas
jns
jae
push
push
cmc
stos
xchg
push
mov
add
mov
ficompl
sub
lods
add
aas
mov
xchg
int
incb
fwait
add
push
and
bound
cs
xchg
push
sbbb
loopne
and
loopne
cmpb
push
stc
stos
repz
dec
pusha
es
js
dec
shrl
sbb
pop
pusha
lods
cmpsl
pop
inc
je
pop
mov
sbb
js
ss
imul
imul
dec
fidivrl
incb
into
xchg
push
xchg
rcll
mov
add
shll
pop
movsb
push
movb
xlat
pushf
push
push
arpl
lds
ja
pop
mov
sahf
mov
repz
call
xor
cmp
mov
iret
repz
rolb
adc
loop
inc
aas
jbe
insl
add
xor
push
jns
pop
lods
sahf
mov
lcall
js
push
cwtl
cmpsb
and
mov
push
leave
stos
pop
mov
out
fildl
push
dec
fcomip
inc
shll
in
sub
push
mov
xlat
aas
and
subl
ss
stc
push
or
idivb
mov
mov
mov
xchg
dec
and
inc
mov
jne
stc
repz
xchg
repnz
cmp
inc
nop
pop
pushf
dec
add
sbb
jno
dec
jns
in
int
add
sub
pop
popa
addb
aam
loope
in
adc
add
ret
push
mov
fsubrl
pop
cmp
xchg
dec
movsl
and
or
data16
int3
sbb
lret
sbb
xchg
mov
jp
dec
or
int3
inc
xchg
pop
jmp
pusha
aad
mov
out
xchg
sbb
xchg
mov
fiadds
jg
mov
pop
scas
in
mov
jl
fcmovb
dec
and
fcmovu
dec
sub
jae
inc
daa
cli
sbb
push
lret
xorb
imul
loop
lock
mov
jb
add
pop
cwtl
or
movsb
and
mov
jmp
fdivr
lods
adc
inc
out
aad
jg
mov
pop
jge
sub
dec
arpl
xlat
lods
cltd
das
fnstenv
out
arpl
mov
mov
xor
lds
jp
add
push
lahf
adc
mov
aaa
rclb
push
pop
mov
decb
xor
xchg
dec
jmp
mov
xor
or
push
push
ja
and
or
push
pusha
sub
lcall
xchg
test
xchg
dec
divb
cli
fdivl
xor
movsl
cmpl
xchg
sub
xchg
popa
cld
sbb
test
add
stc
dec
xor
inc
mov
inc
scas
fnstsw
lcall
pusha
pop
dec
pop
lods
insl
xor
fcompl
mov
dec
leave
flds
enter
ja
and
pop
cmp
scas
pop
cmp
lods
jge
pop
arpl
aaa
sbbb
mov
push
adc
into
ds
or
lods
inc
out
push
xchg
jb
js
dec
and
dec
lock
jbe
mov
mov
jae
inc
inc
jl
xchg
push
ljmp
sti
lods
lods
sbb
dec
jbe
mov
dec
mov
inc
cmp
adc
rcrl
and
movsb
pop
nop
sbb
int
fisttpll
sub
sbb
mov
outsl
xor
sub
lds
aam
add
je
mov
sub
cli
xchg
mov
test
or
sbb
cmpb
xchg
fwait
dec
out
int
mov
sbb
or
sub
rcrl
cmp
inc
ret
and
dec
sbb
in
xlat
dec
stos
out
cmp
wrmsr
ss
rcrb
xorb
and
test
inc
jno
cmp
pop
adc
movntq
mov
fldenv
sti
popa
in
dec
lds
fs
out
roll
sub
out
mov
cmc
mov
mov
sbb
test
inc
jns
fstps
add
mov
iret
xor
scas
xor
pop
aaa
sbbb
dec
jge
shll
scas
mov
ret
cmp
pop
imulb
out
jae
mov
or
xor
inc
add
rcrl
pop
mov
imul
and
xchg
mov
adc
xor
sbb
in
or
or
sub
nop
mov
aas
dec
sub
addr16
dec
push
andb
test
inc
ret
imul
cwtl
push
aad
push
cwtl
and
xor
push
shll
pop
sbb
and
std
push
mov
push
push
je
pop
sbb
rdmsr
test
roll
in
rorb
lds
mov
insl
jle
and
mov
stos
repnz
adc
mov
outsb
mov
lds
cmp
lahf
push
push
or
jne
imul
mov
in
pop
cmp
sub
movsb
jl
movsb
mov
inc
movsl
pop
xor
rorb
gs
stos
jecxz
pop
inc
and
jge
jns
cmpl
clc
jle
cwtl
cmp
mov
pop
jbe
mov
mov
jno
cmp
fisubrl
sbb
lret
and
lret
cmp
stos
cltd
jmp
sbb
xchg
aad
ret
sbb
mov
jge
push
and
fcompl
mov
jns
in
cmp
data16
rcrl
jae
or
push
out
je
pop
dec
pop
jle
jbe
mov
lahf
or
adc
int3
push
lret
jl
repz
push
nop
cld
jno
xchg
fbstp
notb
push
scas
ljmp
mov
les
dec
xchg
dec
ja
cs
xlat
leave
icebp
ljmp
mov
mov
inc
cmp
and
lds
popl
xchg
ljmp
popf
pop
and
cmpsb
ret
mov
out
jl
pop
push
xlat
lea
sub
add
lret
sub
negl
sub
scas
xchg
lods
xchg
negb
push
mov
cmp
stos
xor
test
mov
lret
mov
adc
sub
push
testl
fsubrp
adc
adc
xor
nop
filds
orl
add
pop
push
sub
sbb
in
int
popa
enter
xchg
or
xchg
sub
imul
rcrb
lcall
ret
jle
idivl
lock
xchg
mov
xor
push
jecxz,pt
and
sbb
ret
or
xchg
fisubrs
or
pop
sbb
icebp
movsl
adc
inc
mov
mov
jnp
mov
push
push
cmp
bswap
movb
hlt
pop
popf
sub
dec
pop
pusha
adc
mov
or
hlt
push
or
movsl
pop
ficompl
sub
cmp
xchg
cmp
xchg
push
mov
stc
push
pop
stc
xor
and
imul
in
and
mov
int3
jne
loope
lea
lret
or
fdivs
inc
ret
push
cwtl
loop
shl
int
stc
gs
or
mov
mov
pusha
aaa
dec
xor
cli
mov
cmp
fdivrl
adc
add
xchg
ficoms
mov
inc
cmpsl
cmc
daa
ljmp
pop
dec
mov
shlb
loopne
mov
pushf
clc
cltd
test
pop
jne
push
adc
les
dec
xlat
and
stos
lods
xchg
inc
pop
push
sub
jo
dec
adc
loopne
adcb
mov
and
fucomp
lahf
or
idiv
push
jb
mov
movsl
and
imulb
xchg
data16
mov
sub
mov
xor
mov
cmc
bound
xor
pop
sarb
imul
lret
inc
icebp
mov
cli
or
enter
push
lods
les
lret
nop
xor
jge
jnp
push
scas
shlb
movsl
mov
xlat
ret
shlb
in
lods
mov
repz
cs
push
add
xor
sub
stc
jb
pop
adc
cltd
loopew
cltd
nop
sub
in
in
out
and
and
in
and
int
or
push
add
lret
xchg
dec
lods
xlat
xchg
xor
pop
imulb
lea
loope
sbb
dec
pushf
cmc
adc
mov
jp
adc
jp
push
xchg
ret
test
xchg
or
gs
sahf
jg
xchg
stc
sbb
fistpll
test
mov
dec
fwait
jno
lock
adc
push
jecxz
std
push
dec
daa
stc
xchg
mov
xorb
lods
pop
mov
mov
xchg
jecxz
cmc
call
lea
repz
leave
jle
jno
mov
mov
fs
out
cltd
and
outsl
out
mov
imul
mov
aam
pop
adc
lcall
lea
sub
xlat
aaa
js
push
aaa
mov
inc
js
cmpb
mov
dec
sbb
loop
rcrb
xlat
das
push
inc
stos
jle
shrl
cmp
sub
cmp
sbb
inc
inc
dec
or
aam
sbb
sub
outsb
popf
sbb
lock
mov
pop
and
into
pop
push
lods
insl
fstps
xor
cmp
cmp
xchg
sbb
outsb
jns
xor
hlt
inc
lods
scas
xchg
das
xchg
in
mov
out
lret
adc
push
bound
jl
xor
xchg
xor
mov
xchg
ret
rolb
out
pop
test
cmp
int3
aad
lret
push
jns
leave
and
add
xor
dec
ret
iret
add
adc
sbb
daa
dec
ds
cltd
ret
mov
push
cmpsl
sub
fwait
ret
sub
pop
int3
cmc
sbb
call
jmp
rcr
sub
sub
loopne
pop
fistpl
mov
lcall
push
imul
mov
pop
fsubr
das
insb
mov
mov
mov
stos
shlb
in
fs
sbb
dec
gs
jl
fiaddl
lods
mov
or
add
jmp
idivb
xor
std
sbb
in
jge
xchg
ret
imul
adc
rcrb
inc
push
sub
sbb
add
dec
jne
das
mov
mov
sahf
ja
inc
inc
insb
dec
pop
mov
imul
je
and
cmp
cmp
sti
in
dec
xchg
adc
mov
je
and
in
arpl
lret
sub
nop
add
cli
ud2
dec
fwait
sub
aam
mov
mov
aaa
insl
dec
pop
sbb
jp
inc
repnz
cmpsl
cltd
cmp
dec
aad
rolb
fucomip
jno
test
adc
adc
sub
aad
enter
addb
or
call
or
adc
push
adcl
shl
std
push
mov
mov
add
stos
mov
or
imul
cmpsb
sbb
sbb
push
push
out
in
into
imul
rcr
push
jno
cmp
lock
sub
sbb
mov
mov
int
cmp
loop
imul
mov
data16
mov
lcall
xlat
clc
fs
adc
fs
adcl
xchg
dec
cmpsl
addr16
mov
fsts
mov
xchg
xorb
xchg
loope
cmp
and
dec
and
ljmp
push
jp
mov
lock
xor
js
stos
jnp
faddp
pop
lods
sub
mov
push
rorl
stos
mov
fbstp
iret
ja
sbb
push
ljmp
addb
pop
cmova
mov
in
add
insl
jo
lcall
inc
jb
jle
into
mov
test
out
jo
dec
nop
repnz
ds
cmp
jmp
push
inc
sbb
and
xchg
sahf
mov
andb
test
jge
outsb
or
mov
je
mov
jne
xor
cmp
inc
or
out
aas
shlb
test
pop
or
imul
inc
std
stc
into
jecxz
mov
fdivl
mov
or
adcl
loop
sahf
mov
jecxz
xor
cltd
push
cmc
jg
adc
mov
jge
cmp
sbb
ret
jne
xchg
xchg
cwtl
sub
push
fistl
push
cmp
dec
sbb
loop
dec
add
test
in
clc
push
adc
fdivrl
sub
lahf
lods
movsl
popf
sub
rcrl
roll
pop
test
mull
aaa
frstor
lea
mov
mov
outsb
add
sub
fldl
out
xchg
mov
cmc
sub
cmpsb
outsl
loop
mov
pop
test
out
ja
das
ret
clc
repnz
into
rcrb
inc
outsb
clc
dec
cwtl
pop
mov
xor
pop
ds
cmp
mov
mull
adc
movsb
adc
push
mov
icebp
js
int
mov
mov
mov
adc
and
mov
mov
cmpsl
aaa
rcrl
aam
jl
stc
sbb
js
push
add
mov
jae
daa
sbb
lcall
out
jae
test
mov
inc
dec
addb
mov
gs
fidivl
in
test
jge
add
jmp
lds
out
sbb
pop
popa
psllw
scas
test
jno
adc
shll
je
fadds
xor
ss
add
dec
mov
aad
push
aas
pop
fwait
adc
sbb
call
ja
xchg
aaa
xor
xor
loopne
addb
xor
out
jp
ljmp
out
outsl
dec
inc
sub
cmpb
mov
mov
rcl
leave
fwait
inc
mov
loopne
mov
lock
mov
insl
adc
mov
ret
mov
cwtl
xchg
xor
hlt
mov
gs
xor
hlt
mov
stos
rcll
mov
adc
mov
popa
lcall
sbb
mov
add
xchg
dec
sub
loopne
sbb
jae
adc
push
popf
lock
rcrb
mov
xchg
push
lcall
xor
scas
push
push
pop
stc
mov
jp
loopne
addr16
xlat
sub
test
lock
repz
jecxz
test
inc
fists
or
rep
cwtl
clc
add
inc
jno
mov
rolb
pop
push
imul
loopne
iret
sti
sbbl
leave
push
cli
or
push
xchg
ficomps
jg
adc
shld
adc
lret
xchg
cmpl
ds
mov
cmp
popw
xchg
inc
pop
shll
aam
mov
pop
inc
push
fisttpll
adc
xorl
and
test
stos
or
shll
cmp
push
ja
adc
and
mov
jmp
cmp
sbb
xchg
ljmp
ficompl
sub
pusha
lods
xor
cmp
sub
adc
lods
mov
fcmovb
loop
ljmp
cmp
lret
adc
mov
sub
lods
sub
inc
adc
mov
outsl
push
mov
and
test
mov
add
pop
imul
cmpb
into
loope
jge
xor
hlt
mov
adc
fsts
mov
jbe
pushf
add
push
adc
out
lret
mov
mov
push
sbb
and
mov
sub
repz
pop
or
xchg
pop
mov
mov
sub
adc
scas
sbb
pop
mov
cmp
adc
push
sahf
and
ror
mov
mov
shrb
mov
jg
cmp
jp
fs
push
in
ja
icebp
and
out
sub
cwtl
lret
sbb
mov
hlt
mov
mov
jge
push
ret
push
mov
enter
jne
inc
mov
lcall
or
xor
push
push
imul
mov
sahf
test
pop
popf
mov
mov
push
dec
arpl
sub
mov
das
sarl
inc
add
xor
dec
cmp
and
xchg
mov
ljmp
push
inc
add
sub
test
and
push
outsl
push
jae
push
jmp
imul
repz
add
sub
mov
fdivl
sbb
addl
jae
sahf
jno
cmpsb
out
mov
xchg
insb
out
sub
adc
dec
pop
aaa
mov
dec
sti
loope
aam
aaa
and
or
xor
mov
ljmp
dec
sub
mov
mov
fnstenv
scas
push
pop
mov
cmp
mov
sti
xlat
lods
xlat
cmpsb
jle
fcom
mov
cs
pop
int3
andb
fistpl
fwait
mov
popf
xor
pop
lods
push
cld
jecxz
imul
pop
xchg
xor
out
popf
mov
mov
les
cmp
mov
fmulp
in
inc
sub
shlb
mull
pop
dec
jp
mov
mov
sub
test
aaa
repz
jge
push
fidivrl
sub
loop
sbb
fisttpl
inc
imul
cmp
dec
xchg
jecxz
test
popf
popf
push
xor
daa
call
nop
dec
out
pop
mov
or
mov
jecxz
imul
je
fisttpll
jo
cmp
sub
mov
ret
shr
outsl
fnstcw
icebp
aas
xchg
loope
daa
stos
lret
jmp
inc
push
xor
push
push
fcoml
scas
and
lds
sbb
sub
in
sahf
mov
push
icebp
popf
scas
test
xchg
adc
or
inc
std
pop
call
outsb
add
stos
push
cs
loop
adc
mov
out
push
pop
lret
sbb
scas
jae
xchg
pop
fdivrs
jmp
fdivl
adc
push
sbb
fwait
jne
lods
pusha
inc
ret
mov
sahf
inc
ja
hlt
xchg
add
xlat
xchg
gs
jnp
gs
cmp
in
push
and
mov
or
aaa
mov
dec
loope
popa
mov
popf
movsl
pop
adc
in
sub
mov
mov
push
dec
cmp
and
sbb
mov
rol
push
arpl
or
pop
mov
in
or
or
mov
mov
out
test
or
inc
push
popa
mov
xchg
das
ja
insb
stc
inc
sahf
jnp
cld
ja
mov
or
mov
cmp
sub
sub
into
jg
aaa
in
cmp
or
jo
test
pop
aam
xor
enter
sub
inc
les
aas
insl
mov
addr16
push
mov
sub
enter
mov
xor
mov
xchg
pop
scas
lahf
xor
sahf
mov
mov
jno
lret
sbb
jle
gs
dec
cmp
shll
ja
xchg
mov
mov
dec
daa
cmpsb
lahf
gs
pop
sbb
pop
or
sbb
xor
dec
jge
or
mov
cwtl
mov
inc
shll
pop
cmp
mov
mov
push
sahf
adc
test
dec
dec
add
cmp
sti
xor
add
pop
iret
mov
adc
stc
cmp
fwait
sahf
movsl
xor
mov
lcall
sarb
sub
push
test
ret
aam
sub
push
xor
mov
pop
jmp
shlb
fisttpll
mov
test
inc
mov
inc
addr16
xchg
push
fstpl
or
xchg
or
inc
xchg
lea
and
mov
cmp
scas
rcrl
inc
xchg
imull
inc
lods
mov
loopne
leave
xchg
outsb
rcrl
into
push
mov
and
xchg
inc
and
jmp
mov
jecxz
test
fsubl
inc
movsb
inc
push
inc
jmp
daa
xchg
mov
mov
xchg
mov
outsl
cmp
dec
push
icebp
jo
hlt
outsl
ret
mov
add
sbb
insl
divl
mov
mov
push
and
pop
cmp
jg
add
push
scas
lds
loope
pop
mov
shll
or
jmp
sarb
inc
lret
dec
xor
popa
cmpsb
bound
movsb
js
lahf
in
jmp
test
mov
adc
push
pop
fs
dec
jae
mov
jo
leave
cmp
adc
lret
or
jne
popa
jge
iret
bound
mov
scas
sbb
pop
fs
pop
popa
lea
arpl
jno
mov
lret
xchg
ljmp
fldl
mull
popa
adc
scas
or
hlt
jo
mov
dec
out
loope
mov
xorl
mov
popf
lds
cld
mov
inc
cmpsb
dec
inc
arpl
test
xchg
and
outsl
push
in
sahf
aam
cmc
xor
mov
dec
testb
fdivl
jp
jle
in
dec
test
ds
fs
or
xchg
subl
sbbl
fwait
imul
lret
push
je
jmp
insl
popf
jo
and
mov
lds
mov
dec
push
sti
and
jno
push
hlt
mov
js
xor
inc
push
lods
push
push
cmp
je
pop
sbbl
xchg
push
xchg
mov
add
enter
rclb
cld
sarl
out
inc
fwait
add
in
test
stc
inc
negb
cli
and
mov
mov
in
ficompl
or
gs
inc
aad
sbb
xchg
mov
pop
cmp
lcall
test
stos
insb
xor
add
add
nop
cwtl
add
lcall
ret
adc
rclb
push
or
sub
inc
popa
fcmove
push
rcrb
sub
mov
mov
fistpll
addb
gs
insb
sbb
dec
mov
fwait
xor
push
cmpsb
mulb
lods
inc
lods
mov
stos
fsts
fcmovb
push
jns
out
jbe
into
mov
ret
jge
jae
shlb
lcall
mov
adc
aam
sti
cld
sbb
gs
push
pop
mov
movsl
rcll
shl
mov
fadds
mov
test
sub
cmpsb
and
sar
fdiv
cmp
adc
push
or
jp
aas
cmp
fstpl
mov
mulb
cmp
jae
out
and
or
inc
mov
and
cmp
mov
fildl
xor
roll
xchg
xor
push
jle
repnz
push
loopne
mov
sbb
sbb
leave
fldenv
int3
sub
addl
enter
loopnew
xchg
pop
stos
or
stc
pushf
mov
sbb
bound
inc
mov
jmp
lahf
mov
lret
cmp
and
ljmp
pop
sub
sbb
dec
inc
ljmp
loop
rol
jbe
hlt
lods
iret
xchg
jno
pop
in
or
dec
ret
mov
add
pusha
int3
out
mov
leave
xchg
cmp
das
sbb
mov
mov
ja
xchg
mov
sbbl
mov
xor
stos
mov
add
sub
aad
mov
sarl
test
sbb
and
pushf
pop
xor
lods
iret
sbb
ret
mov
mov
pop
mov
ljmp
movsb
shlb
mov
sub
inc
aas
lods
js
push
aam
popa
aam
dec
pop
repz
adc
cmp
nop
fdivr
mov
and
jmp
arpl
fcomps
add
mov
mov
hlt
add
fnsave
aam
adc
cmp
mov
mov
pop
push
and
mov
ja
pop
or
gs
mov
fwait
lds
ja
dec
imulb
fdivrs
pop
cmp
mov
loopne
test
jno,pn
popa
enter
jl
cmp
cmp
sub
aas
push
int3
popa
rcrb
sub
addl
xchg
or
es
fwait
pop
lret
xor
mov
or
icebp
enter
sub
xchg
icebp
or
cmpsb
cmpsb
push
and
int3
loope,pt
pop
jne
xchg
cli
xchg
and
and
sbbl
cmp
les
sbb
dec
sahf
iret
shl
ficompl
loopne
mov
repz
inc
jne
ds
pop
fadds
jno
test
jae
mov
in
push
or
inc
add
mov
rolb
mov
roll
loop
or
jl
les
mov
xor
sti
dec
test
outsl
bound
cmp
lret
xchg
fnstenv
ja
xor
insl
loop
xor
movsb
mov
and
and
xlat
clc
mov
stc
cmpl
xchg
push
or
push
aam
repnz
or
sub
xchg
mov
das
xchg
push
inc
or
dec
fldt
push
jecxz
fcomps
jae
mov
jl
icebp
stc
dec
ljmp
movsl
es
test
out
xor
adc
faddl
push
lea
stos
jmp
shl
hlt
push
pop
sti
in
mov
test
lods
inc
and
adc
cmc
adc
mov
or
lea
or
mov
out
loope
insl
imul
jecxz
xchg
inc
sar
outsb
stc
loopne
jg
xchg
push
jmp
testl
sub
mov
daa
int
aam
stos
nop
enter
stos
cli
into
cmp
je
push
jnp
dec
dec
cltd
inc
loopne
out
into
arpl
stos
enter
aaa
cli
jp
jbe
cltd
mov
not
xor
incb
adc
mov
rorl
xchg
cmpsl
lods
jo
rol
jecxz
lret
xchg
out
or
xchg
push
mov
xchg
out
dec
sbb
repz
shlb
fidivs
ljmp
leave
fs
in
in
in
cltd
stc
pop
popa
add
pop
mov
sbb
addr16
and
push
cmp
mov
out
scas
mov
push
test
and
cli
lahf
mov
or
int3
xor
mov
push
push
aad
sahf
fadds
inc
clc
pop
inc
push
aad
jae
pop
fsubr
or
fstps
add
jbe
call
sub
jno
mov
push
mov
sub
mov
push
pop
pop
lods
int3
push
or
xchg
cmp
fwait
jne
mov
pushf
lea
clc
rclb
sub
fs
xor
inc
out
sub
outsb
cld
lds
imul
xorl
xchg
cmpsl
outsb
mov
xlat
sub
repnz
add
pushf
push
pop
in
mov
das
iret
sub
nop
into
push
jnp
xchg
ret
xchg
ss
xor
pop
sub
sarl
push
ficoms
dec
enter
jg
inc
ret
push
mov
cld
pop
and
xor
mov
and
jns
sbb
arpl
mov
sub
cmp
lock
xor
push
iret
in
lock
cmp
xor
inc
test
daa
bound
loopne
dec
xchg
in
in
mov
add
mov
fs
lret
push
and
insb
stos
pop
xor
mov
mov
sahf
jae
js
int
rclb
adc
scas
mov
lods
pop
cmp
mov
shll
mov
jle
cmp
xchg
dec
pop
mov
js
pusha
shrl
cmpl
cli
or
test
testb
and
sub
lret
aaa
adc
or
aas
leave
stc
rcrb
sbb
ficoml
jg
stc
outsb
out
xchg
push
push
in
push
out
mov
cltd
xor
test
stos
mov
jle
pop
push
fsubrs
mov
cmpxchg
xchg
iret
in
daa
mov
cmpsb
pusha
pop
jns
ss
lret
in
mov
repnz
mov
insb
xor
sub
sbb
stc
dec
in
mov
fiadds
cli
outsl
fsubrl
pop
out
jbe
sbb
push
pop
cmp
xor
xor
dec
mov
imul
xor
dec
imull
add
fimuls
push
jecxz
push
mov
movsb
mov
adc
ficoms
mov
adc
int3
shll
popf
sbb
add
scas
repz
and
pop
or
shlb
jo
iret
fisubl
adc
sbb
add
iret
ret
add
dec
outsb
shll
std
mov
cli
or
shrb
rorl
dec
push
cmpb
lods
inc
cltd
adc
sub
dec
mov
adc
cmp
rcrl
daa
adcb
insb
mov
pop
xchg
adc
sub
xor
mov
lret
sbb
adc
pop
aam
mov
pop
xchg
xchg
push
jg
jmp
pop
dec
add
nop
call
push
inc
ljmp
pop
jnp
and
push
outsl
hlt
test
cli
xchg
push
push
push
imul
pop
lea
adc
lret
or
in
dec
in
adc
jmp
sbb
cmpsl
or
test
cmp
mov
and
cmp
and
out
xor
inc
pop
cld
add
xchg
popa
out
shlb
je
scas
iret
pop
push
lds
inc
xor
cs
and
mov
aas
push
orb
fcmovu
mov
adc
adc
jmp
shrb
insl
ja
adc
data16
pop
add
ss
cmpsl
adc
pop
inc
adc
push
xlat
dec
and
push
or
cmp
loope
sbb
or
or
sub
cmc
and
fucompp
push
jbe
cmp
add
pop
and
dec
mov
aad
xor
fidivs
hlt
adc
fidivrl
test
sub
out
mov
pusha
pop
add
mov
pop
repz
push
mov
push
cmc
xchg
jo
lods
push
cmp
cmc
or
push
mov
or
mov
inc
mov
and
xlat
push
addl
sti
rcr
and
mov
mov
sbb
aam
pop
sbb
xor
js
enter
xchg
lret
movsb
shlb
mov
xor
dec
pop
dec
cli
push
insb
cwtl
sarl
stos
mov
icebp
cvtps2pi
arpl
dec
push
jnp
in
xchg
nopl
pop
mov
outsl
xchg
xchg
imul
es
dec
inc
pop
in
ficompl
test
out
add
std
dec
and
repnz
push
sbb
pop
lret
push
outsb
push
nop
ljmp
mov
xchg
movl
jmp
arpl
jmp
or
xchg
mov
popf
outsb
out
psubusw
inc
ljmp
mov
int
adc
add
test
push
inc
in
cs
in
fidivl
cmp
pushf
je
sbb
ffreep
push
lock
mov
add
lods
imul
in
popa
push
fsubr
ja
rcll
jnp
lods
inc
out
push
outsb
clc
hlt
ja
adc
bound
insl
dec
mov
pop
sub
fsubrs
and
xchg
movsl
jg
into
scas
inc
pop
mov
mulb
lret
mov
xor
icebp
js
mov
fs
and
push
int3
sub
fwait
es
push
xor
ret
scas
pop
shr
shr
mov
fstps
mov
mov
imul
pop
mov
add
pop
jnp
mov
fcmove
notl
lock
insl
popf
add
orl
jle
sbb
or
je
and
push
dec
inc
daa
inc
sub
cmc
stos
push
ja
int
movl
out
cltd
fsubrl
lret
push
pop
sub
pop
cmpsb
scas
xor
fldenv
jne
andl
inc
cmp
dec
add
push
insb
xlat
jne
outsb
fwait
sbb
xchg
jno
negl
dec
cmp
sub
add
add
pusha
mov
lea
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
