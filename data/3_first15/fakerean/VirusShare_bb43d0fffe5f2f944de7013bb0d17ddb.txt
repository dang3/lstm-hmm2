call
pop
ret
nop
nop
call
mov
jmp
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
movl
lea
movb
mov
call
lea
movb
mov
call
lea
add
add
lret
call
lea
movb
call
push
mov
movb
movl
call
xor
push
mov
mov
mov
movl
mov
call
push
mov
call
mov
mov
movb
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
add
add
into
xlat
add
lea
movb
call
lea
movb
call
lea
movb
call
add
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
add
fiaddl
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
call
mov
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
call
pop
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
lea
call
mov
movl
test
je
mov
lea
mov
xor
lea
rep
mov
mov
mov
mov
mov
test
setne
lea
mov
mov
push
lea
mov
call
mov
add
push
push
call
mov
add
mov
test
je
push
lea
call
jmp
mov
push
push
push
call
mov
lea
push
lea
push
push
call
inc
add
add
push
lea
inc
add
or
insb
adc
add
push
dec
and
push
mov
call
mov
push
push
call
mov
add
mov
test
je
push
lea
call
jmp
push
push
push
call
add
mov
jmp
mov
lea
mov
lea
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
push
push
call
lea
push
lea
push
push
call
inc
add
lea
inc
add
call
mov
lea
add
mov
push
push
push
call
mov
add
push
call
test
je
mov
mov
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
lea
mov
call
push
mov
movb
call
mov
lea
push
push
call
add
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
jmp
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
je
lea
mov
call
lea
movl
call
pop
xor
pop
mov
mov
add
ret
mov
call
lea
mov
mov
call
lea
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
lea
push
call
add
or
push
and
lea
push
call
push
mov
call
mov
call
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
mov
call
lea
movl
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
mov
call
test
je
mov
mov
call
mov
test
je
mov
push
call
test
jl
push
call
test
jl
push
call
test
jl
mov
push
push
push
push
call
pop
pop
mov
pop
ret
mov
push
mov
call
pop
pop
pop
ret
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
add
lea
push
movl
call
lea
call
cmp
jne
lea
mov
push
call
lea
mov
inc
add
add
add
add
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
mov
push
push
call
add
mov
call
pop
ret
mov
push
push
call
add
mov
push
push
call
mov
call
push
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
lea
movb
mov
call
push
mov
movb
movl
call
push
mov
call
mov
movl
movl
movl
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
mov
push
push
call
mov
call
mov
mov
push
push
call
mov
call
mov
push
push
mov
call
mov
call
mov
mov
push
push
call
mov
call
mov
test
je
mov
call
pop
ret
push
push
mov
call
mov
call
pop
ret
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
mov
call
mov
call
lea
mov
add
add
add
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
call
mov
mov
push
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
call
mov
call
mov
pop
ret
nop
nop
nop
mov
push
push
push
test
mov
je
mov
lea
mov
push
lea
add
rep
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
call
add
pop
pop
pop
ret
mov
lea
mov
lea
add
rep
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
call
mov
push
call
test
je
mov
mov
call
mov
call
pop
pop
pop
ret
nop
nop
push
push
mov
push
mov
sub
push
push
mov
lea
call
xor
lea
mov
call
push
mov
movb
call
mov
lea
push
push
call
add
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
jmp
cmp
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
je
lea
mov
call
lea
movl
call
pop
xor
pop
mov
mov
add
ret
mov
call
lea
mov
mov
call
lea
movl
call
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
lea
push
mov
push
push
lea
push
call
add
lea
lea
push
call
push
mov
call
mov
call
pop
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
test
je
mov
push
push
call
add
mov
call
pop
ret
mov
push
push
call
add
mov
push
push
call
mov
call
push
push
mov
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
mov
call
push
lea
push
push
call
add
lea
push
push
mov
call
mov
lea
lea
mov
push
mov
call
lea
push
mov
call
lea
mov
push
call
push
push
push
mov
call
push
push
push
mov
call
push
push
push
push
push
push
mov
movl
call
pop
mov
pop
add
ret
nop
mov
push
push
push
mov
mov
call
add
or
xor
dec
and
movl
call
lea
movb
call
push
lea
movb
call
push
lea
call
mov
mov
push
push
push
mov
call
cmp
jne
lea
push
push
call
add
lea
call
lea
push
push
lea
call
lea
push
lea
push
push
call
add
lea
mov
push
push
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
mov
push
push
push
mov
mov
call
push
push
mov
push
lea
call
xor
lea
mov
call
mov
mov
push
movb
call
test
je
mov
lea
call
test
je
mov
push
call
test
je
mov
lea
call
test
je
mov
push
call
test
je
mov
lea
call
test
je
push
lea
push
push
call
add
lea
push
push
mov
call
lea
push
push
call
add
test
jne
push
lea
call
push
lea
call
mov
mov
push
push
push
mov
call
jmp
mov
call
lea
mov
call
add
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
push
mov
mov
push
push
lea
call
push
push
lea
call
push
push
lea
call
pop
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
mov
movl
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
add
add
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
push
push
push
mov
call
push
push
call
mov
push
push
mov
push
push
call
mov
push
add
lea
push
push
call
add
cmpw
lea
je
cmpw
jne
add
cmpw
je
cmpw
je
push
push
call
mov
add
test
je
movw
mov
push
push
push
push
call
test
je
cmpw
lea
jne
pop
pop
pop
mov
pop
add
ret
nop
push
push
mov
push
mov
sub
push
mov
lea
call
push
lea
movl
call
mov
push
push
push
push
push
push
lea
call
lea
movb
call
cmp
jne
lea
push
lea
call
mov
mov
push
push
push
push
call
lea
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
lea
movl
call
mov
lea
mov
call
mov
mov
push
push
push
push
movb
call
mov
cmp
je
lea
push
push
lea
call
push
lea
call
mov
lea
push
push
push
call
mov
mov
add
push
push
push
mov
call
cmp
jne
mov
push
push
push
push
call
lea
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
push
mov
push
push
push
push
mov
push
call
lea
call
mov
mov
xor
movl
movw
mov
push
push
push
push
call
test
jle
lea
lea
push
push
call
test
je
mov
push
add
push
push
call
add
mov
mov
push
add
push
push
call
mov
add
inc
push
push
push
push
call
cmp
jl
mov
call
lea
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
mov
push
push
mov
call
lea
movl
call
lea
movb
call
mov
movl
movl
mov
pop
mov
add
ret
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
xor
lea
mov
call
lea
movb
call
mov
movb
call
push
lea
call
mov
mov
push
push
call
mov
push
push
push
push
call
push
lea
call
mov
push
push
lea
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
mov
push
push
push
push
push
mov
call
push
lea
call
push
lea
call
mov
lea
add
push
call
mov
xor
lea
rep
mov
movl
test
jle
mov
mov
mov
lea
push
add
push
push
mov
mov
call
lea
push
push
call
mov
add
test
je
movw
add
mov
lea
push
push
lea
sub
inc
add
push
mov
call
test
mov
je
push
push
push
mov
call
mov
mov
mov
mov
lea
test
jne
lea
mov
push
push
push
mov
call
add
mov
inc
add
cmp
mov
jl
push
mov
call
lea
push
call
add
test
je
mov
cmp
jb
jne
cmpl
jae
movl
lea
movb
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
mov
pop
mov
add
ret
mov
push
mov
mov
cmp
jge
cmpl
jne
mov
shl
add
mov
mov
neg
sbb
and
add
mov
pop
ret
sub
push
mov
mov
test
jne
mov
cmpl
jne
mov
cmp
je
mov
jmp
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
push
call
mov
cmp
je
push
mov
call
mov
movl
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
lea
call
mov
lea
push
mov
movl
call
cmp
jb
lea
movl
call
pop
pop
pop
mov
mov
add
ret
mov
push
shl
add
mov
shl
xor
mov
lea
test
sete
mov
mov
mov
neg
sbb
add
push
lea
call
mov
mov
push
push
push
call
lea
movl
call
inc
add
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
mov
push
mov
lea
add
push
call
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
push
mov
push
mov
call
lea
movl
mov
call
lea
movb
mov
call
lea
movb
mov
call
lea
movb
call
mov
lea
mov
mov
movl
mov
mov
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
lea
movb
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
lea
push
push
call
mov
add
test
je
mov
mov
push
lea
push
push
push
push
call
mov
mov
mov
mov
add
mov
mov
mov
lods
jmp
add
add
mov
push
and
mov
mov
mov
mov
lea
push
push
push
push
call
push
call
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
call
push
mov
push
push
lea
push
push
call
mov
add
test
je
mov
mov
push
mov
push
lea
push
push
push
push
call
mov
mov
mov
push
in
inc
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
add
test
mov
mov
je
mov
jmp
mov
mov
mov
mov
pop
test
je
push
lea
movl
call
add
js
add
add
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
call
push
lea
movb
call
mov
movl
movl
add
or
add
movl
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
lea
movb
call
mov
movl
call
mov
pop
mov
add
ret
nop
mov
push
push
push
mov
mov
call
mov
push
sub
mov
je
dec
jne
xor
jmp
mov
push
call
push
lea
call
lea
movl
mov
call
cmp
jne
push
push
push
push
push
push
push
push
mov
call
lea
movl
call
lea
movb
call
lea
movb
call
lea
pusha
filds
xchg
add
add
lret
decl
test
xchg
add
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
push
mov
mov
call
ret
nop
nop
nop
nop
nop
sub
push
mov
lea
push
lea
push
mov
lea
mov
push
push
push
push
push
push
push
push
movl
call
mov
cmp
je
test
mov
jne
mov
push
push
push
lea
push
push
mov
mov
push
push
push
push
movl
call
mov
mov
cmp
je
push
lea
push
push
call
mov
add
add
lea
mov
mov
call
mov
mov
pop
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
mov
push
lea
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
mov
mov
movl
call
mov
add
inc
add
mov
call
call
push
call
mov
push
push
mov
push
lea
mov
mov
lea
mov
push
push
mov
mov
push
push
mov
call
push
push
push
mov
call
lea
push
push
mov
call
push
push
push
push
push
push
mov
call
push
lea
call
mov
mov
lea
push
push
push
mov
call
push
lea
push
push
call
mov
add
add
lea
mov
mov
movl
call
mov
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
mov
lea
call
mov
lea
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpl
je
mov
ret
cmpl
jae
mov
ret
mov
cmpl
jae
mov
ret
mov
mov
push
push
add
call
xor
ret
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
call
lea
movb
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
mov
add
push
push
push
call
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
movl
xor
lea
push
push
mov
call
mov
cmp
jne
mov
movl
mov
cmp
jle
mov
lea
sub
push
push
push
mov
call
mov
mov
push
push
push
push
call
lea
call
mov
lea
test
jne
cltd
flds
add
add
pop
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
push
push
mov
lea
call
lea
xor
mov
mov
call
mov
mov
push
push
push
push
call
test
jle
lea
push
push
lea
call
test
je
push
mov
call
lea
mov
push
call
mov
push
push
push
push
inc
call
cmp
jl
mov
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
push
lea
call
lea
movl
call
cmp
jne
mov
push
push
push
call
add
test
jne
push
push
lea
call
mov
mov
cmp
je
cmp
jne
push
jmp
push
lea
pop
repnz
add
cmp
je
mov
mov
sub
push
push
lea
call
mov
mov
test
je
push
mov
push
push
push
call
lea
movl
call
lea
movl
call
mov
movl
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
push
push
mov
push
lea
call
lea
movl
call
mov
lea
mov
call
mov
mov
push
push
push
push
movb
call
mov
cmp
je
lea
push
push
lea
call
push
lea
call
mov
lea
push
push
push
call
mov
mov
add
push
push
push
mov
call
cmp
jne
mov
push
push
push
push
call
lea
mov
call
lea
movb
call
lea
movl
call
mov
pop
pop
pop
pop
mov
add
ret
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
lea
movl
mov
call
mov
movl
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
mov
push
mov
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
call
lea
call
push
lea
movl
call
mov
mov
push
push
call
push
push
push
lea
call
mov
mov
test
jne
movl
jmp
mov
test
je
movl
jmp
movl
push
mov
call
add
call
lea
movl
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
lea
call
push
mov
movl
call
mov
cmp
jg
mov
lea
push
call
mov
push
push
mov
call
lea
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
movl
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
xor
sub
je
dec
je
dec
jne
mov
movl
mov
mov
mov
call
pop
ret
mov
movl
mov
movl
mov
call
pop
ret
mov
mov
mov
call
pop
ret
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
push
mov
movb
movl
movl
call
mov
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
mov
mov
movl
mov
mov
movl
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
call
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
mov
call
lea
call
push
lea
movl
call
mov
mov
push
push
call
push
push
push
lea
call
lea
movl
call
mov
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
test
jne
pop
ret
mov
mov
test
jne
xor
pop
ret
mov
test
jne
push
mov
movl
call
mov
pop
ret
mov
test
je
push
mov
movl
call
mov
pop
ret
push
mov
movl
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
push
call
mov
xor
sub
je
dec
je
dec
jne
mov
mov
movl
call
pop
ret
mov
movl
movl
call
pop
ret
mov
mov
call
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
xor
test
setg
mov
mov
push
push
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
push
push
mov
call
mov
call
mov
pop
pop
movl
ret
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
add
mov
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
mov
movl
movl
mov
pop
pop
mov
add
ret
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
movl
lea
movl
call
mov
movl
call
mov
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
mov
push
call
add
push
push
push
call
pop
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
push
push
call
push
mov
push
mov
push
push
call
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
push
call
inc
add
inc
and
test
movl
je
mov
call
mov
mov
add
ret
mov
xor
mov
add
ret
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
call
mov
movl
add
mov
movl
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
inc
add
pop
ret
nop
nop
movl
add
nop
nop
nop
nop
push
push
mov
mov
push
call
lea
push
push
push
call
inc
add
add
add
add
shlb
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
test
jne
pop
ret
mov
xor
pop
mov
test
setne
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
push
mov
push
push
push
push
mov
push
push
mov
call
lea
movl
mov
call
movl
lea
movb
mov
call
lea
movb
mov
call
lea
add
add
add
push
mov
movb
movl
call
push
mov
call
push
mov
call
mov
or
mov
mov
movl
mov
pop
pop
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
push
mov
mov
lea
add
add
add
call
lea
movb
call
lea
movb
call
lea
movb
call
inc
add
inc
and
call
mov
pop
mov
add
ret
nop
nop
nop
nop
push
mov
push
mov
lea
push
push
push
call
lea
push
push
push
call
lea
push
push
push
call
add
add
jmp
mov
pop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
mov
cmp
je
push
mov
push
push
push
call
jmp
push
push
mov
call
mov
call
push
push
mov
call
mov
call
mov
add
test
jne
push
push
mov
call
mov
call
testb
int3
inc
add
push
mov
call
mov
call
testb
ljmp
inc
add
add
mov
call
mov
pop
ret
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
mov
push
mov
sub
push
mov
lea
call
lea
movl
call
lea
movb
call
lea
movb
call
mov
lea
push
push
mov
movb
call
test
je
mov
mov
push
lea
push
push
call
mov
test
jg
mov
lea
push
push
push
call
mov
add
lea
lea
push
push
push
push
call
add
jmp
mov
push
lea
push
push
call
mov
mov
mov
push
lea
push
lea
shl
cltd
idivl
push
lea
push
push
call
mov
add
lea
lea
push
lea
shl
cltd
idivl
lea
push
push
push
call
mov
pop
rolb
add
add
push
push
push
push
call
mov
mov
push
push
call
mov
mov
push
call
mov
test
jbe
push
lea
push
push
mov
call
mov
lea
push
push
push
call
mov
add
push
push
mov
call
mov
test
je
mov
push
lea
push
push
call
mov
lea
push
push
push
call
mov
add
mov
push
push
call
lea
movb
call
lea
movb
call
lea
movb
call
lea
movl
call
mov
xor
pop
mov
add
ret
nop
mov
push
push
push
mov
push
call
ret
nop
nop
nop
nop
nop
nop
mov
push
push
push
mov
push
call
ret
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
push
push
mov
push
mov
push
mov
push
push
mov
push
push
mov
call
xor
lea
mov
std
pushf
add
mov
movl
lea
movl
mov
mov
mov
mov
movl
mov
mov
mov
mov
push
movl
movl
call
mov
mov
mov
mov
mov
movl
call
mov
mov
mov
xor
lea
rep
mov
mov
pop
pop
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
mov
call
testb
je
push
call
add
mov
pop
ret
nop
nop
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
push
push
push
push
mov
call
push
mov
call
mov
mov
push
push
mov
push
push
call
push
call
mov
lea
push
push
push
call
lea
movl
push
lea
call
push
mov
call
test
jne
xor
jmp
mov
mov
push
push
push
push
call
mov
lea
push
push
call
push
mov
call
mov
mov
lea
push
push
call
push
mov
call
mov
lea
push
push
call
push
mov
call
mov
lea
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
adc
mov
lea
push
push
call
mov
mov
mov
sub
sub
push
push
mov
mov
push
push
push
push
mov
call
push
push
lea
cmp
inc
add
mov
push
push
push
push
call
mov
push
push
push
push
call
mov
push
push
push
push
call
push
pusha
push
call
mov
addl
xchg
in
fucomip
pop
add
test
hlt
add
add
pusha
incb
lret
add
pushf
add
roll
cmc
pusha
xchg
int3
push
mov
add
push
push
push
push
lea
push
push
lea
push
push
push
call
hlt
cmpsl
add
aam
add
mov
out
shll
lret
mov
mov
add
call
lret
add
add
jle
jno
mov
mov
add
ljmp
jp
negl
repnz
add
mov
add
test
add
add
add
inc
in
push
push
lea
push
push
push
push
call
arpl
lret
test
xchg
add
add
pop
add
xchg
add
add
test
in
add
mov
add
notb
stos
testb
push
pop
push
push
push
push
call
add
add
popf
add
add
sti
add
add
mov
add
loope
mov
loope
add
testb
pop
add
mov
add
pushf
lahf
mov
in
xchg
aam
add
sub
pop
push
push
push
push
push
lea
push
push
lea
push
call
fs
addr16
add
test
roll
mov
call
jnp
test
cmpsl
pop
add
push
arpl
std
in
mov
add
jecxz
pop
add
add
add
add
jno
fldl
test
int
in
roll
shll
stos
repnz
testl
push
push
push
push
lea
push
push
push
push
push
call
add
fadds
cmpsb
sahf
pop
pop
jl
add
add
icebp
jmp
roll
xchg
rcrl
add
jecxz
mov
add
bound
fiaddl
add
mov
lock
add
imul
call
ja
add
out
add
pop
add
hlt
daa
add
call
push
push
lea
push
push
lea
push
push
call
aam
jl
je
add
xchg
jl
add
enter
add
lock
pop
add
add
test
add
jae
mov
add
mov
add
aam
add
mov
jae
add
mov
push
push
push
push
lea
push
push
call
xchg
add
add
add
mov
cli
jbe
mov
add
jbe
mov
mov
stos
mov
jmp
mov
add
mov
pop
sub
pop
call
push
push
lea
push
lea
push
push
push
push
push
push
call
sahf
lret
xchg
add
call
push
push
out
push
stos
icebp
sahf
loope
lods
add
add
add
out
pop
sub
pop
jmp
push
push
push
lea
push
push
call
roll
add
addl
add
insb
lret
add
ror
add
add
add
adcb
roll
add
add
leave
pop
loop
icebp
lcall
mov
fstpl
js
hlt
lahf
add
sub
pop
ret
push
push
push
push
push
call
mov
add
lods
pop
mov
xchg
pop
add
mov
mov
mov
add
add
int
xor
in
lcall
inc
hlt
push
push
push
lea
push
push
push
call
xchg
add
mov
add
sti
fiadds
into
add
add
pop
xchg
add
add
add
pushf
add
add
mov
fstpt
pop
add
add
add
add
lea
add
xchg
add
add
add
sti
sub
pop
mov
add
push
push
push
push
push
push
push
push
push
call
add
add
cmc
add
add
mov
lret
cltd
add
add
cli
arpl
pop
lcall
jmp
jbe
xchg
add
mov
fcmovb
pop
fildl
in
popa
popf
sub
pop
add
add
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
roll
mov
add
add
add
add
fsubrp
add
mov
add
jp
add
push
sub
pop
mov
xor
push
push
not
not
push
or
not
add
ror
add
sub
shr
pop
sub
pop
push
push
lea
push
push
push
call
jnp
enter
mov
add
jmp
stc
movsl
in
roll
lock
ret
addb
jle
adc
pop
pushl
push
push
lea
push
push
push
push
push
push
call
lret
mov
rclb
add
leave
add
pop
xchg
add
mov
mov
int3
add
add
add
push
add
xchg
mov
jns
add
sub
pop
call
push
push
push
push
lea
push
lea
push
push
push
call
add
add
scas
push
jb
into
push
callw
add
xchg
bound
mov
fwait
cmpb
mov
stos
fidivrs
in
int3
add
add
push
fucomp
insb
ffreep
les
xchg
pop
push
lods
push
add
mov
add
sub
pop
mov
push
push
lea
push
lea
push
call
add
pushf
mov
clc
add
add
stos
add
jae
jns
mov
add
lds
add
cld
popf
add
inc
call
push
push
lea
push
push
push
push
lea
push
call
add
lahf
add
add
test
out
mov
add
add
mov
add
mov
add
add
sti
add
cwtl
sbbl
scas
jae
popf
in
lret
add
add
in
push
fdivr
add
mov
in
in
lcall
inc
call
push
lea
push
push
push
call
jb
fmul
aad
add
je
scas
jmp
mov
add
mov
out
scas
gs
push
add
mov
add
mov
mov
test
sub
pop
push
pushl
push
push
push
push
call
rorb
mov
cli
add
add
mov
add
je
out
jecxz
mov
outsl
add
lcall
lret
addr16
add
add
je
sti
fiaddl
add
sub
pop
pushl
call
push
push
push
push
push
call
imul
pop
add
cltd
stos
clc
ror
add
add
push
add
mov
icebp
add
mov
mov
push
into
imul
movsl
add
jecxz
add
add
iret
add
cltd
mov
sub
pop
pushl
push
push
push
push
lea
push
call
out
add
add
subb
add
bound
jbe
shr
xchg
add
pushf
addl
mov
fldl
sub
pop
pushl
call
push
push
shl
lea
push
or
inc
add
shl
shr
sub
shr
not
pop
add
pop
push
push
lea
push
push
push
call
std
arpl
mov
shl
jo
lea
push
imul
fistps
xchg
xchg
xchg
add
add
add
test
xchg
rorl
aam
in
in
pop
pushl
push
push
push
call
add
out
mov
mov
lret
add
fcoms
mov
sahf
lret
pop
push
add
mov
lcall
add
cmpsl
sti
add
jnp
jb
cmpsl
out
add
les
mov
add
add
sub
pop
call
push
push
push
sub
xor
push
push
pop
add
dec
inc
sub
xor
rol
shr
dec
pop
lea
lea
ror
add
pop
push
lea
push
push
lea
push
call
imul
sti
add
repnz
add
pop
add
add
pop
add
mov
cltd
loope
add
add
jecxz
mov
add
pop
xchg
outsl
add
add
add
stos
ret
add
add
push
sub
pop
push
push
push
push
call
mov
and
push
add
add
imul
mov
add
nop
add
add
lods
cmpsl
add
add
hlt
pop
push
push
push
push
push
call
add
lcall
add
add
addr16
rolb
insb
subb
add
into
lret
in
add
mov
outsl
lods
mov
pop
add
sub
pop
call
push
lea
push
call
push
add
aam
int
scas
add
lcall
cwtl
add
push
add
popa
jle
push
add
js
jns
xchg
in
add
loopne
test
movb
clc
lcall
clc
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
mov
pusha
mov
add
add
pop
lods
mov
push
mov
into
add
nop
mov
add
jns
add
mov
add
scas
mov
xchg
add
lods
iret
push
add
adc
out
jns
add
lea
add
push
push
push
push
call
add
cmpsl
mov
add
xchg
add
add
pop
add
les
pop
add
add
add
ja
pop
cli
add
add
add
add
add
arpl
add
testb
add
add
add
in
outsl
add
add
xchg
add
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
call
add
scas
add
add
out
add
ror
outsl
add
addb
lahf
mov
out
push
cld
jns
fcompl
sti
jae
push
std
add
incb
mov
add
pop
lcall
pop
mov
add
push
push
push
lea
push
push
push
call
js
rolb
shrl
in
outsl
fldt
lahf
add
pushf
ljmp
mov
add
add
addl
push
jnp
xchg
add
enter
pop
pop
add
cltd
jae
out
add
add
add
mov
mov
call
adc
add
add
lods
test
or
push
call
cli
lret
cmc
mov
mov
add
int
add
add
scas
data16
add
push
ja
xchg
add
add
std
jae
andl
sarl
fadds
add
xor
adc
test
in
mov
push
push
push
push
push
push
call
jp
aam
popl
addb
jb
in
ret
add
add
add
add
test
icebp
pusha
add
fnsave
push
add
out
sub
pop
add
push
lea
push
push
lea
push
lea
push
push
call
mov
leave
add
nop
jp
pushf
mov
mov
push
add
push
sahf
add
mov
ror
imul
jge
add
repnz
push
push
push
push
push
push
lea
push
call
xchg
pop
add
lods
lods
icebp
jo
leave
add
mov
addl
add
add
add
int3
push
lock
mov
add
call
mov
scas
add
in
fiadds
divb
popf
mov
gs
add
mov
push
sub
pop
mov
push
push
push
push
push
push
push
call
into
scas
loopne
add
add
test
pop
std
lret
add
cwtl
sahf
add
add
add
mov
cmpsb
jmp
push
mov
bound
add
jne
lock
roll
cld
fbld
lcall
add
push
push
lea
push
push
push
push
push
push
lea
push
call
data16
add
add
stc
loopne
add
add
in
add
add
pusha
add
add
outsl
lcall
call
pop
iret
bound
scas
add
push
push
add
add
add
add
out
xchg
add
insb
pop
add
ret
in
fcompl
les
push
call
popf
jp
shlb
mov
add
ror
add
mov
push
leave
add
insb
loop
cltd
mov
out
add
into
pop
sub
pop
add
push
push
push
push
push
lea
push
lea
push
push
call
leave
jmp
jno
lret
add
add
add
cmc
add
fcmovb
add
insb
add
xor
sub
pop
pop
push
push
call
shl
sahf
push
test
xchg
jmp
add
mov
popf
cltd
add
xchg
gs
add
leave
push
mov
fnsave
add
add
jp
add
faddl
pop
les
dec
add
icebp
xor
adc
je
or
add
add
jno
enter
add
push
out
in
add
popa
add
add
in
add
cmpsl
fldlg2
cmpsb
add
add
jp
add
lods
mov
lcall
push
push
push
push
push
call
add
pop
scas
arpl
imul
add
add
add
add
fldl
sarl
mov
add
add
add
push
stos
add
aam
xchg
hlt
mov
cmpsl
test
roll
in
add
test
nop
movsb
add
add
add
add
add
mov
xchg
add
in
in
lcall
inc
or
adc
lea
push
push
call
add
cmc
cli
pusha
popa
test
mov
push
sti
stc
add
rolb
jb
add
add
cmpsb
shll
add
xchg
add
out
add
pop
push
add
mov
add
ror
add
cli
add
ret
add
ja
rolb
jge
arpl
fildl
sub
pop
sub
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
jns
icebp
xchg
sti
lahf
add
roll
shll
std
add
add
mov
add
jbe
clc
arpl
call
lret
add
xchg
add
add
sub
pop
pop
push
add
xor
pop
rep
push
push
push
push
push
call
je
lahf
push
movb
push
test
push
mov
aad
je
add
test
fwait
test
add
mov
add
add
stc
int3
mov
call
push
add
fst
jns
mov
add
out
add
add
add
jmp
in
in
pop
pop
push
add
add
pop
mov
push
lea
push
push
call
lret
add
mov
scas
mov
rcll
jns
add
pop
add
add
add
nop
add
mov
add
add
mov
out
add
add
add
pushf
sub
pop
add
add
push
shr
not
shl
pop
add
push
add
pop
mov
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
js
add
cltd
add
add
sahf
in
negl
mov
add
add
add
in
scas
add
bound
push
iret
mov
mov
add
xchg
add
scas
ja
jecxz
bound
add
lcall
add
push
push
push
push
call
add
stos
jge
mov
negb
roll
in
mov
add
jbe
add
add
hlt
mov
add
sahf
rcrb
add
add
push
enter
jae
add
mov
add
int3
sub
pop
add
push
sub
sub
pop
mov
xor
push
ror
shr
pop
mov
push
push
lea
push
push
push
call
jecxz
mov
stc
add
add
xchg
loopne
stc
add
std
xchg
add
jl
push
mov
jb
ret
ljmp
add
sbbb
add
add
add
mov
add
pusha
aad
cwtl
mov
add
add
push
jne
std
add
pop
add
in
lock
lcall
or
push
push
lea
push
lea
push
push
lea
push
lea
push
call
ja
mov
ja
flds
add
xchg
add
add
mov
add
je
add
add
lcall
les
inc
pop
add
add
push
push
push
push
push
push
call
add
lahf
jbe
stc
hlt
jns
add
lret
rcrl
mov
cmpsl
push
enter
add
xchg
add
popl
add
in
add
fwait
add
jb
add
jo
sub
pop
mov
push
push
lea
shl
inc
push
xor
add
inc
inc
sub
lea
sub
inc
pop
lea
pop
push
inc
xor
sub
pop
pushl
call
push
push
push
push
lea
push
push
call
mov
nop
je
cwtl
add
add
add
addr16
jmp
add
add
add
mov
push
lahf
add
je
cmpsl
lea
mov
fadds
add
add
push
add
mov
cld
mov
mov
std
push
lea
lods
mov
repnz
add
inc
popf
push
add
mov
jne
shl
xchg
inc
push
and
add
sub
sub
sub
pop
lea
shl
pop
push
push
lea
push
push
push
lea
push
call
xchg
add
add
jae
add
add
mov
out
into
add
add
xlat
add
mov
mov
arpl
xchg
add
sti
add
push
roll
in
call
push
push
push
shl
pop
call
mov
push
inc
inc
not
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
nop
fisubs
ror
add
cmc
add
loop
fldl
add
add
add
pop
add
mov
add
add
enter
je
iret
fucomi
aad
add
add
add
sarb
add
add
test
rolb
add
add
add
sub
pop
mov
add
push
ror
not
pop
add
push
shr
pop
add
push
lea
pop
mov
push
push
push
push
push
push
lea
push
lea
push
call
shlb
push
add
add
mov
add
add
les
into
add
add
add
ja
outsl
mov
in
imul
push
sub
pop
xor
push
lea
push
push
call
scas
add
add
add
add
testb
jl
add
ljmp
xchg
outsl
mov
jge
mov
mov
mov
add
add
add
add
aam
add
bound
test
jno
les
add
mov
mov
jo
in
hlt
pop
add
push
push
call
mov
add
add
pop
cwtl
add
pushf
mov
movsl
push
out
mov
loope
movsl
mov
add
add
add
lret
add
add
out
loop
cmpsl
cmpsb
lds
jns
mov
mov
faddl
add
add
pusha
push
add
in
sub
pop
add
push
dec
xor
pop
push
mov
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
add
add
add
add
add
out
ljmp
insb
in
lcall
pop
add
loope
add
mov
add
add
jae
les
mov
movsl
mov
jo
out
add
rcll
xchg
data16
loopne
xchg
sub
pop
xor
push
push
push
lea
push
lea
push
push
push
push
call
stos
loope
add
les
add
out
mov
faddl
addl
add
add
add
stos
add
xchg
lock
loopne
add
data16
add
add
ret
jmp
add
clc
add
sub
pop
add
push
shr
rol
add
pop
add
push
xor
pop
pop
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
push
call
cld
add
leave
add
not
add
add
incb
push
mov
pop
add
bound
add
clc
ret
jnp
fwait
cmpb
outsl
bound
add
add
cwtl
pop
add
jp
mov
jno
movsb
fistpl
rolb
fiadds
sub
pop
mov
xor
push
push
push
call
ljmp
cld
add
add
mov
mov
rcll
loop
movsl
scas
add
mov
jno
jle
int
mov
add
add
add
add
fiaddl
add
fadds
lcall
std
add
add
movsb
push
push
push
lea
push
call
fstpt
pop
in
lcall
add
add
shl
push
filds
add
popf
add
cmpsb
into
add
push
jns
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
sub
mov
leave
add
mov
add
add
add
mov
add
lahf
add
add
add
loope
push
test
push
add
pushf
sub
pop
xor
push
push
push
push
lea
push
push
push
push
push
lea
push
call
add
cld
loopne
add
cmpsl
add
jno
out
pop
add
addb
add
add
popf
aad
pop
mov
add
mov
pop
add
push
add
add
mov
out
add
add
add
add
lret
pop
add
add
loop
popl
mov
loop
fadds
aam
in
fdivr
lcall
les
add
push
push
push
push
call
iret
incb
cmc
add
add
add
ficoms
add
imul
add
add
fcmovne
xlat
jb
xchg
in
fcmove
mov
add
push
push
test
in
sub
pop
or
je
push
shl
inc
inc
pop
mov
push
push
push
push
lea
push
lea
push
call
add
mov
add
xchg
hlt
add
cltd
mov
jmp
add
add
test
test
jecxz
xchg
add
add
lret
sbbl
add
add
repnz
pusha
add
pop
pop
add
mov
add
out
push
add
data16
add
in
in
pop
xor
push
push
push
lea
push
call
add
push
roll
pop
xchg
in
xchg
pushf
frstor
add
fadds
add
bound
add
add
mov
add
in
add
mov
cmpsl
add
jb
add
add
add
add
pop
ret
mov
fldl
fwait
nop
mov
mov
lcall
les
push
call
add
mov
test
add
add
mov
mov
add
loopne
add
mov
add
mov
xchg
mov
push
add
movl
add
add
andb
add
add
mov
jns
imul
loopne
sub
pop
mov
xor
push
sub
pop
add
add
push
dec
dec
add
pop
push
push
lea
push
push
lea
push
push
push
lea
push
call
addl
loop
add
jbe
les
les
add
push
fstpl
into
stc
mov
add
cmp
add
jns
add
add
add
xchg
shl
jecxz
cwtl
mov
add
add
scas
js
popf
fwait
in
add
fiaddl
lcall
test
add
pop
mov
xor
push
not
pop
add
push
push
call
add
test
add
add
xor
testl
add
add
add
cwtl
mov
mov
add
hlt
add
add
stc
out
data16
add
push
add
call
pop
add
mov
sub
pop
pop
rep
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
push
xchg
pop
xchg
xchg
sbbb
shlb
xchg
add
mov
pop
sbbl
std
add
add
add
add
out
add
js
outsl
add
int3
nop
movsb
jo
add
cmc
add
add
add
add
pop
sub
pop
mov
xor
push
sub
add
pop
or
je
push
push
push
push
push
call
add
add
add
cli
add
iret
incb
add
mov
gs
data16
add
add
mov
push
out
data16
rolb
add
lds
mov
add
mov
out
add
in
add
add
add
ret
add
add
shll
addb
add
lcall
repz
push
call
add
pop
pop
xchg
add
mov
mov
addl
pop
add
pop
lret
cmpsb
in
mov
jmp
in
add
lods
mov
xchg
add
add
push
ja
fprem
add
add
mov
add
add
add
imul
add
add
push
lea
push
push
push
push
push
push
lea
push
call
mov
add
jle
pop
jecxz
add
imull
add
divl
jae
test
gs
add
enter
xchg
add
mov
test
lahf
out
shrb
add
push
xchg
add
loopne
rep
push
dec
lea
sub
rol
pop
pop
push
push
lea
lea
push
push
pop
add
add
add
dec
sub
shr
pop
ror
add
sub
dec
pop
push
xor
rol
pop
pop
push
ror
pop
mov
push
push
lea
push
call
xchg
xchg
pop
xlat
int
imul
push
sbb
movsb
mov
in
push
add
loop
add
add
mov
add
insl
hlt
push
lea
push
push
call
lods
add
mov
lret
xchg
add
pop
add
lock
add
add
add
mov
mov
add
test
lods
push
add
sub
pop
mov
push
lea
push
push
call
cli
rolb
add
js
push
add
jp
repnz
push
add
add
shll
mov
fimull
xchg
add
add
sarl
je
mov
add
add
jmp
push
lea
push
call
scas
push
sahf
add
push
nop
in
push
jge
add
pop
jp
call
pop
lods
call
add
add
mov
jge
jae
cld
add
jb
add
add
imul
pusha
mov
add
in
clc
pop
push
push
rol
inc
pop
mov
push
lea
push
call
mov
add
iret
arpl
add
loopne
pop
test
lods
fwait
fs
int
mov
add
add
jle
add
add
add
clc
mov
add
push
lea
push
lea
push
push
push
push
push
call
add
mov
out
adc
jb
out
mov
push
iret
push
mov
add
push
pop
repnz
mov
movsl
add
add
xchg
push
push
push
push
call
flds
add
add
xchg
pusha
add
cwtl
enter
jne
js
add
ret
add
add
lds
sar
add
xchg
add
ljmp
add
imul
push
sub
pop
push
push
sub
rol
not
pop
push
push
dec
pop
mov
push
push
push
push
call
add
pop
fcom
jne
add
xchg
rcrl
add
push
add
cltd
add
push
xlat
mov
icebp
mov
lcall
push
rol
pop
pop
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
shrl
mov
add
add
add
add
mov
add
sarb
lret
les
shrb
add
add
nop
mov
divb
lcall
leave
push
lea
push
push
lea
push
push
push
lea
push
call
add
push
add
movb
movb
rorl
add
xchg
add
pusha
add
test
in
mov
out
xorb
in
ret
push
sub
shr
rol
pop
push
push
rol
sub
add
inc
pop
mov
push
push
push
push
call
mov
stos
add
add
fistl
fnstsw
pop
cli
popf
mulb
add
pop
add
fsubrs
fcmovu
in
add
js
lock
flds
add
clc
add
clc
push
dec
dec
pop
push
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
xlat
xchg
push
mov
in
stos
add
idivb
cli
lods
scas
scas
push
stc
movsl
xchg
add
push
test
add
add
add
add
movsb
lods
push
movsb
lcall
scas
mov
lahf
ljmp
add
pop
add
sub
pop
push
push
shr
not
pop
push
push
push
ror
xor
pop
movl
push
sub
pop
addl
push
push
lea
push
call
add
out
add
add
loope
add
add
out
lahf
add
add
push
jno
add
fidivl
add
mov
jae
push
jge
add
les
outsl
add
popa
in
xchg
add
add
push
xchg
call
add
hlt
pop
test
je
mov
push
xor
pop
pop
pop
push
push
lea
push
push
push
lea
push
push
call
add
mov
pop
add
rcl
add
add
mov
add
mov
add
in
jnp
out
add
mov
test
xchg
imul
add
int
ljmp
add
add
call
sub
pop
pop
pop
push
ror
lea
pop
leave
push
shr
pop
ret
push
ror
inc
pop
push
mov
push
add
inc
dec
pop
add
push
lea
push
push
push
lea
push
lea
push
push
push
call
cld
jmp
iret
add
addl
loopne
imul
insb
lock
add
jl
add
in
add
pop
mov
mov
add
add
movsl
jns
ja
jb
int
jbe
faddl
addr16
pusha
call
pop
push
push
push
push
lea
push
push
call
lods
add
add
jo
jl
add
lock
add
mov
add
add
ljmp
in
cld
mov
jne
push
add
in
lock
push
push
push
push
push
push
push
push
push
call
add
imul
xchg
shrb
test
push
add
mov
add
bound
mov
enter
in
ljmp
add
in
sti
nop
jb
jae
fs
jno
addb
lcall
ret
sub
pop
push
push
push
lea
push
push
lea
push
lea
push
push
call
pop
pop
add
pusha
pop
mov
push
add
xorb
mov
mov
jge
add
add
add
cli
add
ja
mov
add
add
jne
loope
fwait
scas
add
cmc
sbb
xchg
mov
roll
push
xchg
jno
add
add
test
bound
mov
add
mov
pop
mov
inc
cld
add
add
push
add
lea
not
pop
addl
push
push
push
push
push
push
lea
push
call
add
outsl
fiadds
add
call
xlat
add
js
ljmp
add
add
popf
pusha
mov
les
add
rolb
pop
in
add
add
sub
pop
call
push
lea
push
push
push
push
push
call
add
add
addb
enter
js
add
fiaddl
jl
hlt
pusha
add
add
add
rcl
test
add
sub
pop
mov
push
push
call
jp
add
add
add
add
aam
mov
rolb
movb
arpl
mov
call
add
rolb
add
jne
push
lea
push
call
add
add
jo
jecxz
lods
loopne
loop
insb
pop
add
popf
ja
flds
add
test
nop
aam
cmpsb
iret
push
add
add
cmpsb
add
call
clc
push
lea
push
call
stos
add
call
sti
xchg
push
push
add
add
jo
clc
push
add
push
add
int3
xchg
fiadds
add
popl
add
sahf
mov
pop
jle
pop
pop
xchg
flds
lcall
add
fwait
clc
call
inc
and
mov
cmp
push
push
lea
push
push
call
add
test
in
stos
pusha
mov
add
add
out
lcall
loopne
div
insb
fistps
add
add
push
imul
loop
mov
aam
arpl
pop
cmpl
jne
push
push
push
lea
push
call
add
add
aam
add
push
xchg
les
popa
add
lods
jl
enter
add
jmp
leave
add
cli
mov
mov
add
fiadds
mov
xchg
add
sahf
pushf
call
mov
add
out
in
lock
pop
push
add
not
pop
pop
push
ror
ror
pop
pop
pop
push
push
push
lea
push
push
lea
push
lea
push
call
cmpl
ja
fnstcw
add
xchg
lea
push
add
add
fsub
add
cwtl
rolb
add
add
xchg
nop
rolb
loopne
add
add
lret
nop
addl
scas
cmc
add
pusha
les
fiadds
add
jp
add
filds
add
jecxz
in
in
lcall
push
lea
push
call
ret
add
iret
mov
jo
scas
test
jp
add
call
add
in
test
loopne
push
add
mov
add
pop
ret
push
push
push
push
lea
push
push
push
push
call
jbe
adcb
jne
add
lods
movsl
icebp
add
add
data16
add
xchg
lods
add
lcall
push
inc
pop
mov
push
xor
not
pop
add
push
push
push
lea
push
push
lea
push
push
call
int
clc
fwait
ret
add
mov
mov
mov
mov
aad
mov
add
lret
mov
outsl
faddl
add
add
addr16
add
out
bound
call
aas
push
push
push
call
popf
flds
mov
add
flds
xlat
mov
outsl
mov
pushf
add
xchg
add
add
shr
out
mov
add
lcall
push
lea
push
push
push
push
call
add
mov
shll
ja
add
xchg
mov
jb
out
add
add
lcall
add
in
loop
add
sub
pop
push
movl
push
add
pop
push
push
push
push
push
call
mov
add
add
rolb
mov
mov
icebp
loope
mov
jmp
shlb
add
imul
add
jl
sahf
add
lret
mov
push
mov
in
lock
call
push
push
add
sub
pop
call
push
not
add
not
shl
pop
subl
cmpl
jne
push
lea
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
mov
jae
add
mov
xchg
add
add
ja
push
addr16
jb
add
lahf
add
add
add
lds
mov
lcall
pop
push
rol
sub
sub
pop
pop
pop
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
pop
mov
add
pop
mov
addl
subl
fiadds
pop
mov
popf
int3
add
push
jo
add
int3
add
mov
ljmp
mov
stos
fcoms
stc
pusha
out
add
in
add
sub
pop
leave
push
push
push
push
push
lea
push
push
call
add
add
mov
jb
add
sahf
gs
add
loopne
jnp
ffree
add
pop
add
add
add
fists
mov
ljmp
push
test
fldcw
add
pop
std
add
out
test
int
mov
bound
lcall
push
push
push
push
lea
push
push
lea
push
push
call
add
add
pushf
cmpsl
mov
testb
in
add
outsl
loop
add
add
mov
sarb
push
add
add
add
rcl
pop
mov
add
add
mov
push
rol
pop
add
push
push
push
push
push
call
add
mov
push
scas
mov
push
xlat
add
popa
add
pushf
fcmovbe
addl
faddp
add
in
fwait
pop
add
sub
pop
push
push
push
lea
push
push
call
xchg
pop
shrb
add
popf
mov
add
jbe
jnp
fidivrs
add
add
jno
add
add
fldl
add
lcall
push
lea
add
ror
pop
push
push
push
lea
pop
mov
lea
push
sub
add
pop
sub
push
ror
pop
mov
push
push
call
add
adc
add
flds
in
subb
fwait
add
sbbb
enter
jne
xlat
mov
mov
add
add
shl
add
add
in
mov
jmp
add
pop
add
push
add
sub
pop
shr
push
push
push
push
push
push
push
push
push
call
in
add
add
add
fwait
add
scas
ljmp
add
add
mov
add
add
aam
xchg
test
pop
xchg
mov
add
sbbb
add
cli
jbe
pop
mov
mov
mov
lret
sub
pop
add
push
push
push
push
call
flds
xchg
add
xchg
add
xchg
in
add
xchg
add
lret
pop
sti
in
gs
jb
mov
add
mov
push
push
mov
pop
sub
pop
mov
push
sub
pop
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
call
push
faddl
shl
int
stos
icebp
rcr
pop
add
add
fwait
mov
add
faddl
clc
fiadds
insb
iret
add
add
stos
int3
sub
pop
add
push
push
push
lea
push
call
lods
movsb
sar
add
add
mov
add
add
mov
jle
stc
popa
mov
ret
add
std
movsb
add
mov
lock
jns
pop
outsl
add
add
push
add
add
js
sub
pop
add
push
not
add
inc
pop
mov
mov
push
sub
dec
not
pop
cmp
jne
push
sub
add
pop
cmp
jne
mov
push
rol
sub
pop
movl
push
dec
inc
pop
jmp
push
add
pop
mov
push
push
push
push
push
call
fdiv
add
add
fadds
mov
add
add
xchg
bnd
aad
add
lret
addl
int3
jnp
bnd
add
loope
cwtl
jae
add
movsb
jp
mov
xchg
fmul
enter
jle
addb
mov
jne
test
jns
in
in
lcall
push
or
aam
rol
ljmp
xor
jne
mov
push
not
pop
movl
push
add
ror
pop
jmp
push
lea
push
call
add
pop
xchg
fiaddl
sti
add
testb
ret
add
enter
add
mov
add
lds
add
lret
mov
push
cltd
add
add
mov
test
cltd
cld
bound
lcall
inc
cld
mov
push
lea
push
call
std
jl
add
lods
add
add
push
mov
gs
nop
add
xchg
scas
add
jle
mov
in
clc
lcall
cli
add
test
inc
adc
jl
mov
add
add
add
ljmp
push
push
push
push
push
call
add
mov
add
ljmp
rcrb
mov
cwtl
pop
in
add
clc
test
repnz
scas
add
jge
lock
add
add
arpl
add
jecxz
mov
popa
add
movl
pop
iret
sub
pop
mov
push
xor
pop
cmpw
jne
push
push
push
push
push
push
push
lea
push
push
push
call
addr16
scas
jmp
stc
scas
add
add
loop
scas
pop
add
enter
mov
add
add
addr16
fwait
popl
roll
add
test
push
pop
loope
mov
add
fdivr
lcall
inc
adc
test
push
push
lea
push
push
lea
push
call
jl
xchg
mov
pushf
out
mov
mov
aam
stos
add
cmc
add
add
mulb
je
testl
loop
add
jae
add
mov
outsl
mov
add
mov
in
call
movl
push
inc
add
sub
pop
jmp
push
xor
sub
pop
pushl
push
add
shr
shl
pop
pop
push
not
xor
xor
ror
pop
mov
mov
push
push
push
push
push
push
call
movsb
add
add
add
jne
pop
add
scas
add
add
add
add
add
add
fisubrl
pop
scas
add
xchg
clc
add
jecxz
add
sub
pop
mov
push
push
lea
shr
dec
push
and
add
sub
shl
sub
inc
pop
add
rol
sub
pop
push
lea
pop
push
push
push
push
push
push
call
popl
imul
mov
lret
jmp
loopne
pop
negl
in
add
add
test
add
add
add
lcall
xchg
cmp
add
lret
lea
push
push
push
push
push
call
jge
or
addb
stc
xlat
ret
div
leave
push
mov
add
int3
add
les
jmp
incb
jbe
rolb
into
add
in
sbbl
std
add
in
mov
lods
add
shrl
addl
insb
lock
sub
pop
cmpl
je
push
push
ror
add
push
xor
add
dec
sub
shl
pop
inc
pop
push
shr
dec
add
pop
push
push
sub
pop
call
push
lea
push
lea
push
push
push
call
pop
roll
add
mov
jmp
xchg
add
add
out
lock
push
add
push
int
add
add
shr
jne
jge
mov
add
add
pusha
add
add
add
cli
add
add
mov
add
lcall
into
js
jb
xchg
jae
mov
out
outsl
add
lcall
sub
pop
cmpl
je
push
push
dec
push
sub
add
sub
shr
sub
sub
xor
pop
inc
add
pop
push
inc
pop
push
call
push
ror
inc
lea
pop
cmpl
je
push
push
add
push
xor
add
lea
sub
shl
not
shr
pop
dec
not
inc
sub
pop
push
ror
sub
pop
push
call
push
push
push
lea
push
push
push
push
push
push
call
mov
rolw
scas
jae
jl
add
icebp
stos
icebp
add
aam
enter
mov
add
xlat
add
add
add
mov
add
popf
stos
add
add
popl
add
pop
cmpl
je
push
push
not
push
xor
add
shl
sub
add
sub
lea
pop
dec
add
sub
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
call
out
shr
pop
add
rcr
repnz
add
mov
call
xchg
add
jmp
mov
jnp
push
add
shlb
jae
popf
mov
mov
lcall
push
push
push
push
push
lea
push
push
push
push
push
call
loop
add
add
add
in
add
add
cld
pop
mov
int
pop
notb
add
add
loopne
add
add
rolb
jno
xchg
add
add
lds
jge
add
in
loope
loop
mov
add
fcomps
pop
cmp
add
hlt
ror
add
pop
cmpl
je
push
push
sub
xor
push
sub
add
shr
sub
sub
inc
dec
pop
sub
shr
ror
pop
push
pop
push
push
lea
push
call
popa
add
push
imul
call
push
pusha
mov
add
pusha
jb
imul
add
mov
add
nop
les
fdivl
arpl
loopne
add
mov
fists
pop
mov
test
add
add
add
mov
sub
pop
call
push
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
add
mov
adcl
add
mov
mov
mov
add
negb
int
push
imull
add
add
xchg
fdiv
add
jge
fisubs
add
stc
mov
ret
fwait
hlt
push
imul
enter
lcall
cmp
or
int3
je
push
push
xor
ror
push
xor
add
not
lea
sub
dec
sub
lea
lea
pop
add
rol
rol
ror
pop
push
lea
dec
pop
push
call
push
push
call
add
ficompl
int3
cmc
add
nop
mov
ja
mov
jo
add
aad
addl
mov
int
add
pop
aad
addl
add
fisubrl
mov
add
cmp
or
int3
je
push
push
sub
push
or
inc
add
shr
sub
pop
lea
pop
push
shl
add
rol
rol
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
lret
add
add
xlat
mov
add
add
xchg
out
jl
xchg
add
fcmovbe
scas
push
fiadds
add
add
shll
add
add
mov
sub
pop
call
push
lea
push
push
push
call
push
fadds
mov
add
add
in
scas
add
test
add
mov
add
leave
add
loope
add
add
add
add
mov
stos
jmp
fadds
mov
mov
xchg
add
lcall
js
int3
fldz
ret
mov
add
push
push
push
push
pop
add
xor
xor
sub
ror
pop
pop
push
rol
add
pop
push
push
lea
push
lea
push
push
push
call
add
mov
addb
cmpsl
add
popf
repnz
add
filds
add
add
mov
add
jle
add
add
mov
shrl
add
add
stos
rclb
add
nop
add
mov
out
mov
add
add
rcll
add
in
sub
pop
call
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
add
mov
into
add
enter
mov
add
add
add
shrb
xchg
out
push
add
out
testb
in
mov
popa
add
sub
pop
cmpl
je
push
push
dec
shl
push
or
not
add
ror
sub
sub
pop
shl
pop
push
shl
add
pop
push
call
push
ror
rol
pop
cmpl
je
push
push
shl
push
sub
add
sub
shl
shl
rol
pop
rol
pop
push
lea
push
push
lea
push
push
push
push
call
jbe
mov
orb
add
add
mov
add
in
in
add
add
add
add
cmc
lret
mov
add
in
push
push
dec
ror
pop
call
cmpl
je
push
push
inc
xor
push
and
add
sub
shr
pop
inc
not
pop
push
not
sub
shl
pop
push
push
shr
inc
inc
pop
call
push
push
push
push
push
call
jnp
outsl
add
add
fcmovnu
mov
add
xchg
cmpsb
push
add
test
je
xchg
add
add
test
add
ljmp
testb
test
data16
stc
jae
add
mov
mov
fwait
add
add
add
pop
add
into
sub
pop
cmpl
je
push
push
shl
push
push
pop
add
shr
sub
dec
add
pop
shr
sub
add
pop
push
push
push
push
push
push
push
call
add
hlt
flds
xchg
fstl
clc
scas
add
add
add
aad
mov
add
add
add
add
lds
add
add
mov
aam
add
lcall
call
push
push
push
lea
push
push
lea
push
push
push
call
lret
add
imul
add
cmc
add
push
add
sahf
test
les
pop
jge
in
lcall
add
add
call
add
pop
mov
add
add
mov
mov
add
clc
jo
add
add
popl
add
sub
pop
cmpl
jne
push
add
pop
mov
push
add
inc
sub
pop
movl
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
addl
add
pop
ret
mov
xchg
mov
insb
adcb
fildl
push
mov
imul
pop
jmp
push
inc
shl
pop
xor
push
push
lea
push
push
lea
push
push
push
push
call
lods
xlat
xchg
lock
push
push
add
je
mov
lret
pushf
enter
loop
add
add
sub
pop
pop
pop
push
shr
lea
dec
pop
pop
push
add
shl
pop
pop
push
push
push
lea
push
push
call
jl
jne
add
add
mov
add
lods
add
lock
fldcw
out
add
mov
jne
les
cli
sti
add
mov
mov
cli
nop
jle
cmp
negb
stos
add
push
lahf
fiaddl
add
sub
pop
leave
ret
push
push
push
push
lea
push
call
addl
add
aam
jmp
out
jns
jmp
xchg
data16
fcomp
frstor
mov
xchg
in
pop
pop
pop
loope
popf
aam
rolb
push
imulb
add
add
mov
fcmovu
cmc
out
rolb
add
roll
xorb
lcall
aam
xchg
mov
add
add
add
lcall
push
ror
shr
inc
pop
mov
add
push
add
sub
pop
cmpl
jne
push
push
push
and
add
sub
not
sub
sub
pop
sub
lea
add
pop
push
push
push
call
cltd
xchg
repnz
jno
jns
push
hlt
push
add
int
lret
ljmp
add
mulb
add
add
rcrb
arpl
add
mov
add
add
addb
pop
add
add
icebp
jmp
add
xchg
into
mov
pushl
call
push
add
not
pop
push
push
lea
push
push
push
push
push
push
push
call
mov
add
jae
mov
outsl
mov
scas
add
add
add
add
add
add
add
add
test
add
rclb
add
add
les
out
cld
add
mov
add
add
xchg
push
mov
in
loopne
call
jmp
push
push
lea
push
push
push
push
lea
push
push
push
push
call
fnstsw
add
add
jp
in
add
push
add
jecxz
add
jle
push
add
add
ljmp
add
add
mov
lcall
stos
cli
add
fadds
loope
sub
pop
cmpl
je
cmpl
jne
push
push
push
push
push
lea
push
lea
push
push
call
faddl
jae
xchg
movsl
mov
faddl
filds
mov
lcall
lret
ja
stc
fnstsw
negb
test
jb
filds
scas
int
popl
add
fs
lcall
fwait
pop
add
popl
fidivs
add
push
in
sub
pop
mov
push
push
push
push
push
push
lea
push
push
push
call
sti
add
push
add
add
add
shlb
mov
data16
add
mov
add
push
out
add
outsl
sar
leave
iret
pop
add
lcall
dec
sbb
add
cmp
dec
shr
push
sub
add
ror
sub
inc
pop
rol
pop
push
push
push
push
push
lea
push
push
push
call
add
mov
add
lea
jbe
jbe
add
aad
pusha
stos
mov
add
add
add
roll
pop
pushl
call
push
lea
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
js
test
mov
mov
add
add
add
add
add
lock
add
add
add
xchg
xlat
mov
scas
add
push
addr16
jb
ret
push
out
repnz
add
add
idiv
mov
in
add
xchg
jo
mov
nop
stos
add
sub
pop
lea
push
push
inc
sub
lea
pop
push
push
push
push
lea
push
push
push
push
call
jecxz
pop
mov
sarb
add
pushf
cld
int3
scas
add
add
in
push
mov
leave
push
test
fcoms
in
in
lcall
add
aas
pop
push
push
shr
shl
pop
call
ret
push
pop
jmp
cmpl
jne
push
push
sub
dec
sub
push
and
add
xor
sub
shr
lea
sub
pop
lea
rol
sub
pop
push
inc
lea
pop
pushl
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
add
add
add
leave
add
pushf
add
int3
call
rcl
fwait
xchg
jge
push
jecxz
popl
mov
lahf
fisttpl
pop
call
push
push
push
push
push
lea
push
push
call
ficoml
jne
add
xchg
add
add
loope
mov
add
push
mov
xchg
add
add
add
test
fdivl
into
rorb
in
lds
add
aad
addl
in
in
push
push
push
push
push
push
push
push
push
push
call
call
lods
pushf
add
xchg
imul
mov
add
xchg
in
jo
add
fwait
test
add
add
add
test
push
mov
jl
pushf
add
pop
add
pusha
add
into
into
mov
add
add
push
pop
popa
mov
in
fdivr
lcall
rclb
dec
jge
xlat
push
push
push
push
push
lea
push
push
lea
push
call
pushf
add
push
rcl
cltd
out
out
mov
add
add
add
mov
mov
mov
test
popaw
int
aam
add
stos
add
add
xchg
add
stc
add
call
add
jle
pop
lret
add
fsubl
into
add
mov
add
xchg
jae
in
fdivr
lcall
xchg
sbb
add
test
pop
mov
mov
push
push
call
add
mov
add
add
jo
aam
jo
jo
add
pushf
add
mov
imull
add
add
add
add
add
repnz
loop
add
sub
pop
push
push
sub
ror
add
not
pop
jmp
push
push
xor
inc
push
sub
add
dec
sub
inc
ror
pop
inc
ror
add
pop
push
lea
push
push
push
push
push
lea
push
call
mov
lcall
or
add
adcb
mov
add
stos
lret
mov
roll
add
sti
add
stos
popf
push
add
call
call
add
add
out
call
into
arpl
in
pushl
push
add
lea
add
pop
call
call
push
push
shr
sub
push
or
not
add
inc
sub
add
pop
add
shl
shr
pop
push
push
push
push
push
push
push
push
push
push
call
xchg
add
out
sar
add
add
fidivl
test
sarb
add
add
xchg
mov
sub
pop
pushl
push
sub
inc
lea
pop
call
push
push
push
push
push
push
push
lea
push
push
call
stc
mov
arpl
in
add
rolb
add
loope
in
stc
ret
test
add
incb
add
in
popl
insb
in
add
lds
mov
mov
jl
lds
test
in
fdivr
lcall
shrb
mov
or
not
sub
push
xor
add
not
sub
not
sub
dec
pop
not
pop
push
rol
add
pop
pushl
call
push
add
dec
pop
call
push
push
shl
xor
push
or
inc
add
lea
lea
dec
sub
sub
sub
rol
pop
pop
push
shr
rol
lea
pop
pushl
push
pop
call
lea
push
xor
pop
push
push
push
push
push
lea
push
push
call
xchg
fstps
jecxz
ret
mov
add
add
popa
add
in
aad
fwait
add
add
add
fnstcw
loopne
add
add
loopne
xlat
lea
lcall
call
jo
jge
push
push
xor
add
rol
lea
shl
rol
sub
rol
pop
ror
not
ror
pop
push
lea
add
lea
lea
pop
pushl
call
push
add
pop
call
push
push
dec
sub
push
or
inc
add
xor
inc
not
sub
not
pop
shl
ror
shl
ror
pop
push
push
push
push
lea
push
push
push
call
add
jne
rcll
pop
add
add
push
flds
lds
incb
mov
mov
add
add
cmc
add
add
mov
cli
loop
sub
pop
pushl
call
push
rol
pop
call
push
push
shr
push
or
inc
add
lea
sub
xor
sub
shl
ror
pop
lea
dec
pop
push
push
call
int
push
add
mov
les
add
add
into
add
mov
pushf
pop
add
add
add
testl
movsb
add
mov
jno
pop
jb
add
jae
jmp
add
mov
sub
pop
pushl
push
push
call
add
jb
iret
add
outsl
add
out
data16
mov
add
leave
add
loopne
push
add
jl
lret
add
add
movsl
mov
out
jmp
cld
pop
mov
add
mov
arpl
in
clc
pop
call
push
shl
not
pop
call
push
add
not
dec
pop
lea
push
push
ror
sub
add
push
sub
add
shr
sub
sub
sub
pop
shr
rol
add
pop
push
push
push
push
push
push
push
push
push
call
add
in
add
add
fiaddl
test
addl
add
add
popf
push
add
fiaddl
add
add
aam
push
add
push
in
jl
sub
pop
pushl
call
push
lea
push
push
push
push
call
loop
bound
mov
into
out
lahf
fistps
sahf
arpl
mov
xlat
add
in
add
add
add
jbe
add
call
push
push
dec
lea
dec
push
and
add
rol
xor
inc
sub
dec
sub
pop
sub
add
pop
push
lea
push
push
push
push
push
lea
push
call
add
mov
std
pop
add
add
push
add
add
out
in
add
push
jno
add
add
push
pusha
push
push
cwtl
add
popf
fisubs
mov
pop
shrl
add
imul
mulb
addl
scas
add
add
in
in
lcall
jne
push
push
push
call
xchg
jnp
mull
add
add
jge
test
ljmp
in
jne
mov
add
rolb
xchg
test
movsb
add
mov
add
add
add
pop
loopw
add
xorl
fs
pop
call
call
push
xor
shr
pop
mov
push
push
rol
push
xor
add
shr
sub
add
sub
pop
lea
add
xor
pop
push
lea
push
push
push
push
push
call
add
xchg
push
mov
mov
add
add
mov
add
jno
add
add
testl
add
xchg
jbe
into
push
nop
cmc
hlt
xchg
xchg
mov
mov
leave
rolb
js
repnz
add
add
add
add
jnp
pusha
add
add
push
add
pop
pushl
call
push
lea
push
push
push
push
lea
push
call
add
jnp
pop
add
push
mov
filds
test
add
out
insb
hlt
add
xchg
enter
ret
add
add
add
rol
add
lea
pop
call
push
push
not
dec
add
shl
push
or
inc
add
shl
sub
lea
shr
pop
sub
lea
add
pop
push
xor
pop
pushl
push
sub
pop
call
push
push
add
shr
push
sub
add
lea
lea
sub
inc
sub
shl
pop
add
pop
push
push
inc
not
sub
push
or
inc
add
ror
sub
sub
shr
dec
lea
pop
shr
pop
push
not
pop
call
push
push
add
dec
push
or
inc
add
xor
shr
sub
shl
rol
ror
pop
not
xor
pop
push
rol
xor
pop
pushl
call
push
push
push
lea
push
push
push
push
push
push
call
pop
xchg
mul
mov
xchg
call
add
fdiv
add
add
add
data16
add
add
add
cmpsb
jb
add
add
mov
into
cwtl
add
push
loope
push
arpl
mov
add
add
add
add
inc
hlt
push
ror
add
shl
pop
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
add
add
cld
add
add
add
mov
ljmp
pop
add
mov
enter
mov
addb
ljmp
xchg
pop
add
xchg
jbe
add
lea
push
push
dec
dec
pop
push
push
inc
add
ror
pop
push
push
inc
pop
push
push
ror
inc
sub
not
pop
push
push
push
lea
push
push
push
push
push
push
call
add
jns
xchg
popf
test
iret
nop
add
lahf
jb
rol
add
add
xchg
jle
cmpsl
add
push
outsl
add
xchg
mov
stc
aad
ficomps
sub
pop
push
push
push
xor
not
pop
pushl
push
push
push
lea
push
push
push
call
add
mov
js
mov
int3
add
test
add
add
add
fwait
add
mull
into
push
imul
push
lea
push
push
push
lea
push
lea
push
call
in
bound
testb
jno
add
mov
leave
mov
int
add
jns
popl
add
ja
xchg
loopne
leave
mov
into
fucomip
xchg
test
out
fsts
add
outsl
jp
stc
add
cld
push
add
add
lcall
push
hlt
push
push
sub
push
and
add
sub
xor
inc
sub
dec
pop
inc
sub
not
dec
pop
push
ror
pop
pushl
push
lea
add
pop
call
push
push
push
push
push
push
call
add
add
rcll
add
loop
scas
out
xlat
cmpb
add
jp
add
add
mov
cmpsb
popa
scas
add
add
cwtl
pop
fcmovb
add
add
add
mov
add
add
repnz
push
add
mov
stc
stos
push
lahf
pop
adc
pop
popf
test
pop
call
push
ror
ror
not
pop
mov
push
push
push
push
push
call
fiadds
add
add
cmpsl
add
jecxz
push
push
add
les
add
lea
clc
add
add
add
lea
push
push
mov
icebp
ret
add
add
add
push
cmc
jno
loope
divl
add
fldl
cwtl
test
testb
push
push
push
lea
push
push
push
call
add
scas
test
add
add
cld
add
add
loopne
je
add
add
add
add
jmp
sub
pop
dec
jne
jmp
push
push
push
push
call
stos
pop
add
add
pop
jbe
cwtl
add
lahf
in
push
add
imul
pop
add
add
ljmp
add
leave
jnp
fsub
add
jl
add
add
cltd
mov
add
clc
mov
add
into
addb
ja
lods
add
gs
jle
mov
sub
pop
call
push
push
add
push
or
not
add
shl
sub
shl
rol
add
pop
add
rol
xor
shr
pop
push
push
push
push
call
push
lahf
add
jne
jle
mov
add
testl
pusha
push
add
out
add
add
addb
sub
pop
pushl
call
push
push
push
push
push
call
fcmove
jb
movsl
in
pop
lods
mov
lcall
add
add
lods
add
faddl
cmpsl
insb
add
add
sub
pop
push
push
push
call
add
mov
std
jbe
shrb
mov
add
sar
add
cmpsl
test
imul
push
add
test
add
add
add
rclb
add
add
jns
add
mov
in
clc
pop
call
mov
push
push
push
push
call
loopne
pop
lea
cltd
add
mov
xchg
mov
fisttps
add
add
cld
stos
out
lods
loopne
add
test
sti
pop
rolb
movb
mov
add
roll
int
add
mov
jae
add
add
lcall
pushf
and
ljmp
push
mov
push
sub
add
xor
sub
xor
pop
pop
push
push
push
push
push
push
push
push
call
pop
add
mov
add
add
add
jp
in
push
rolb
add
lcall
mov
xorl
jne
push
rol
xor
add
sub
pop
call
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
jmp
add
add
testb
shrl
test
repnz
rol
add
pop
cmpsb
out
add
ret
mov
flds
push
ror
pop
call
push
push
inc
push
or
not
add
inc
inc
sub
add
xor
shr
pop
shl
shl
pop
push
dec
not
inc
pop
pushl
push
shr
ror
pop
call
call
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
iret
add
pop
add
test
push
mov
test
add
add
pop
add
pop
add
ljmp
add
push
add
roll
push
add
iret
mov
add
mov
add
push
lds
ror
into
add
out
repnz
loopne
mov
int
xchg
leave
add
aad
add
inc
cld
push
lea
push
push
lea
push
push
call
std
mov
xchg
add
xchg
outsl
ljmp
stc
cwtl
mov
addr16
in
add
add
add
movsl
aam
add
in
add
mov
lcall
out
xchg
add
imul
add
movl
add
lcall
pushf
and
ljmp
and
jmp
lret
fildl
add
into
sub
ror
ror
rol
pop
add
pop
push
push
push
push
call
mov
stos
clc
add
add
lahf
add
mov
add
test
xlat
popl
xchg
leave
add
add
xchg
add
add
add
mov
filds
arpl
mov
add
jmp
pop
scas
fildl
sub
pop
pushl
call
push
add
ror
pop
lea
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
add
repnz
push
add
add
jp
ja
sahf
xchg
lea
fistpll
add
xchg
jb
mov
jp
add
xchg
add
cmpsb
mov
add
add
add
sub
pop
push
push
push
push
push
push
push
call
aad
add
test
add
push
in
fisubs
std
add
jmp
xlat
pop
mov
cld
popf
add
stos
add
in
add
in
lcall
add
int3
xor
add
pop
pushl
push
push
rol
rol
push
sub
add
sub
lea
sub
ror
sub
lea
inc
pop
add
sub
xor
pop
push
dec
rol
inc
pop
push
call
push
push
shr
xor
lea
push
or
inc
add
add
add
sub
sub
sub
pop
not
sub
xor
sub
pop
push
not
not
pop
pushl
call
push
not
inc
pop
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
add
add
sahf
add
aam
add
add
roll
scas
add
fmul
add
jle
aam
mov
xchg
iret
loope
add
push
jge
fildl
lods
push
sub
pop
call
push
push
not
not
shr
push
sub
add
ror
sub
shl
ror
pop
shl
pop
push
push
call
xchg
lods
mov
xchg
fiadds
mov
push
int3
add
fisttpll
pushf
mov
add
sarl
jbe
add
lahf
mov
pop
xchg
lock
add
testb
add
xchg
xchg
xchg
add
add
in
clc
lcall
jne
call
push
push
push
push
push
push
push
push
push
push
call
add
add
pop
add
add
in
add
stos
add
add
add
int3
xchg
stos
add
add
adcb
add
in
add
add
test
lcall
rclb
inc
cld
push
push
call
pop
jmp
mov
sahf
mov
aad
cmpb
lret
sarb
mov
add
addl
jge
pushf
add
add
mov
aad
icebp
nop
scas
add
add
imul
mov
sti
sub
pop
jmp
pushl
push
push
push
push
lea
push
push
push
push
call
mov
test
fisubl
add
pop
outsl
lret
fsubrp
add
movsb
add
bound
mov
add
loop
in
loopne
mov
jmp
push
push
not
push
or
not
add
add
sub
sub
shl
shr
ror
pop
rol
pop
push
push
call
mov
mov
add
add
xchg
add
repnz
add
lods
mov
add
add
xchg
lods
addb
jb
xchg
xchg
loop
add
cmp
out
add
test
add
bound
mov
add
in
stos
std
incb
lcall
jne
push
push
push
call
andb
xchg
hlt
testl
out
mov
xchg
push
mov
add
ja
add
jno
mov
jle
jnp
in
hlt
lcall
out
adc
add
pop
cltd
push
lea
push
push
push
call
outsl
add
xchg
jl
jae
add
ljmp
shrb
add
lods
pop
add
xorl
add
add
add
mov
mov
add
in
stos
mov
f2xm1
add
shlb
hlt
rcr
cmpsb
mov
add
xorl
push
add
add
add
rolb
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
mov
in
loope
jo
add
test
add
pop
add
add
lods
mov
add
add
scas
std
push
add
xchg
loopne
mov
add
add
arpl
push
add
add
shrb
leave
rcl
push
not
add
push
sub
add
inc
shl
sub
shr
pop
pop
push
inc
pop
pushl
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
mov
add
xchg
mov
movb
add
jmp
fiadds
add
out
in
mov
mov
add
xchg
aam
mov
jne
add
push
push
push
push
push
push
call
loop
add
push
test
add
add
mov
shlb
add
add
test
add
testb
xchg
add
js
mov
pop
mov
fists
add
test
test
mov
sahf
icebp
fldl
add
lods
add
lcall
push
push
lea
push
call
shlb
movsb
addl
mov
add
mov
fs
add
in
add
jo
outsl
shr
lret
add
test
add
fisubs
add
insb
addb
add
cli
mov
add
add
add
idivb
add
in
hlt
lcall
rclb
fsts
add
xchg
out
addb
add
add
jb
add
mov
jb
in
lret
add
add
mov
movsl
add
fstl
lods
cmpsl
pushf
add
add
sub
pop
leave
push
push
push
lea
push
lea
push
push
push
call
not
ret
add
add
pushf
xlat
cwtl
add
pop
je
add
mov
push
xchg
loope
popa
xchg
fsubrs
int3
xchg
add
add
mov
mov
cmpsl
insb
je
xchg
ficompl
add
mov
lods
add
fs
add
xchg
push
sub
pop
add
push
push
push
push
push
call
add
add
in
arpl
fs
cmpsl
scas
mov
leave
mov
xchg
shlb
add
push
jae
jnp
cli
aad
add
jmp
add
add
insb
cltd
add
imul
add
outsl
add
fldl
in
lods
out
addb
movsb
add
add
jl
add
mov
stos
add
sub
pop
pop
pop
push
push
push
push
push
push
lea
push
push
push
call
filds
add
rclb
add
add
jmp
loop
add
addb
add
scas
push
add
je
outsl
jl
mov
lcall
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
add
mov
incb
mov
push
add
popa
andl
mov
xchg
fldl
mov
add
imull
movsb
int3
popf
add
pushf
add
out
test
pop
loopne
pop
mov
in
in
pop
push
lea
rol
ror
pop
leave
add
push
xor
shl
pop
ret
push
rol
pop
leave
ret
push
sub
not
add
not
pop
push
push
pop
mov
push
push
call
je
jns
fistpll
fwait
add
mov
stos
mov
xlat
sar
lock
into
mov
fdivrs
jge
std
add
xlat
xchg
andb
pop
lret
enter
test
mov
add
fdivs
add
pop
test
hlt
test
cmc
pop
add
add
mov
mov
sub
pop
cmpl
jne
mov
push
lea
push
push
lea
push
lea
push
push
call
add
add
addb
lret
ja
mov
add
xchg
mov
aam
test
add
mov
add
pop
imul
sub
push
pop
add
add
add
add
add
add
add
add
fiadds
lcall
adc
add
push
xor
pop
mov
push
shl
xor
sub
ror
pop
and
push
push
push
push
call
hlt
add
lock
popl
add
lods
add
mov
push
incb
push
shl
push
aad
add
int3
pop
scas
repnz
leave
push
pop
xor
push
shl
shr
pop
add
push
sub
sub
sub
ror
pop
xor
push
inc
pop
dec
sub
push
rol
rol
pop
jmp
push
push
call
ret
add
add
out
lahf
add
jae
add
pop
aad
add
add
mov
lret
shrb
fmuls
add
add
lahf
movsl
xchg
mov
mov
pop
fisubl
add
add
add
in
clc
pop
sub
push
push
push
push
push
push
call
push
mov
add
add
mov
add
add
add
add
sti
lahf
sbbb
mov
test
add
add
add
loopne
add
loopne
add
add
stc
movl
push
push
lea
push
push
push
call
add
add
aad
les
repnz
add
add
pop
add
pop
mov
int3
mov
subb
lods
add
add
xchg
add
into
pop
fstl
lret
pop
sub
pop
pop
push
ror
rol
ror
sub
pop
sub
push
push
push
call
sbbl
mov
add
add
add
push
pop
mov
add
flds
mov
sar
into
cli
add
add
add
mov
cmpsl
add
add
jge
add
add
add
test
sub
pop
cmp
jne
mov
push
push
push
push
lea
push
lea
push
push
push
push
push
call
add
pop
lea
scas
in
cmpsb
add
jle
jmp
add
mov
add
mov
add
in
fdivr
lcall
dec
cmp
push
push
lea
push
push
push
push
call
fcomp
jbe
lret
ja
add
pop
cli
leave
xchg
mov
mov
add
loopne
add
jne
ficompl
pop
sub
push
lea
push
lea
push
lea
push
push
call
out
testb
add
mov
lret
add
push
jmp
clc
pop
jnp
mov
flds
add
mov
mov
test
add
add
add
mov
mov
lds
add
icebp
pop
pop
add
add
lods
out
fwait
in
add
scas
mov
sub
pop
mov
push
push
push
push
push
lea
push
push
push
push
push
call
add
add
mov
sarb
xchg
mov
push
nop
flds
add
arpl
mov
cmc
shll
add
add
jmp
push
push
push
push
push
push
lea
push
push
call
mov
pop
popa
jmp
jo
mov
fwait
cmpsl
mov
fidivrl
icebp
in
add
mov
add
add
add
add
add
loopne
jecxz
add
add
imul
incb
pop
jnp
add
add
test
sub
pushl
push
push
push
push
push
push
lea
push
call
loop
pop
icebp
test
je
add
add
add
jno
mov
pop
lods
xchg
stos
subb
testl
fwait
add
fwait
xchg
add
sahf
xchg
bound
push
add
add
add
aad
in
in
pop
push
add
shr
pop
shr
push
shl
sub
pop
and
sub
push
push
call
add
add
mov
lret
jmp
add
jecxz
rclb
std
add
lea
fdivl
add
mov
cmc
lods
push
mov
add
je
xlat
rolb
mov
add
push
mov
lea
add
int
mov
jmp
xorb
sub
pop
cmp
jne
push
push
push
push
lea
push
push
push
push
lea
push
push
call
xchg
fsubrl
mov
mov
into
imul
jle
add
add
add
popf
mov
jbe
imul
add
mov
mov
cmpsl
les
jmp
addr16
out
jnp
cld
add
jo
addb
sbb
in
fdivr
lcall
ret
push
shr
inc
pop
push
push
sub
pop
mov
push
push
push
push
push
call
fsubp
icebp
loop
andb
jo
mov
imul
push
jp
add
mov
fadds
lcall
pop
test
imul
movb
pop
add
push
push
push
push
push
push
push
call
add
push
add
scas
add
into
scas
xchg
ror
lcall
hlt
add
xlat
mov
imul
adc
add
add
add
push
movsb
popf
ja
pop
lds
mov
add
mov
jbe
cmpsl
add
cli
jns
jle
ja
fdivl
add
scas
jb
lods
add
ret
std
scas
lret
imul
add
pop
data16
add
add
add
add
add
out
add
clc
pop
push
push
sub
ror
dec
pop
push
push
push
push
push
push
push
call
push
test
in
add
cmpsb
jge
stos
addb
lea
mov
mov
clc
add
add
add
add
out
clc
enter
loopne
add
mov
out
push
xchg
add
add
add
adc
add
add
add
fistpl
lahf
mov
out
enter
in
pop
mov
push
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
add
pop
cmc
arpl
movsb
out
int3
in
add
add
pusha
shll
add
add
popf
sub
pop
lea
sub
push
shr
not
xor
pop
mov
push
sub
shr
not
add
pop
shr
add
push
lea
push
push
call
in
jmp
add
lea
faddl
in
out
jp
ret
mov
add
imul
scas
stos
pusha
xchg
bound
enter
mov
arpl
add
pop
pop
jl
jge
add
in
add
add
lods
jnp
add
mov
mov
loope
imul
rcrl
sub
pop
mov
push
sub
rol
pop
add
push
sub
pop
mov
push
inc
lea
sub
pop
add
push
lea
push
push
push
lea
push
push
lea
push
push
push
call
mov
add
add
add
add
add
cmpsb
cmpsl
iret
cltd
mov
jmp
in
add
add
cmpsb
mov
pop
jae
out
add
int
add
sub
pop
xor
push
push
push
push
call
pop
lret
fmuls
mov
mov
xchg
add
movb
int3
int
add
add
mov
add
pop
mov
push
push
push
push
call
add
pop
mov
add
cli
add
add
mov
jp
jae
scas
pop
movsl
add
add
add
js
in
out
mov
push
imul
movl
add
rol
rol
push
push
push
push
call
cli
fwait
in
add
jb
add
jae
lcall
out
faddl
pop
add
sti
adcb
js
xchg
out
jge
add
add
iret
add
jne
add
add
add
xlat
mov
pop
xor
push
push
lea
push
push
call
mov
pop
mov
add
add
add
mov
arpl
loop
add
add
lahf
into
add
push
add
lds
sub
pop
inc
push
not
shl
ror
pop
cmpb
jne
add
push
push
push
push
push
push
call
pop
add
mov
insb
stos
movb
sti
mov
xlat
pop
add
mov
push
add
jbe
sti
scas
add
mov
rorl
mov
shll
add
shll
fidivrs
jns
add
repnz
add
mov
jno
sub
pop
cmp
je
push
push
push
push
push
push
push
push
call
add
jmp
loopnew
add
xchg
mov
mov
lret
mov
add
add
out
add
cld
pop
imul
insb
add
stos
lret
test
lcall
ret
adc
push
push
push
push
push
push
push
call
aad
add
add
cmpsl
add
int3
pushf
xchg
lods
std
add
out
je
loop
add
jb
push
add
cmpb
popa
lock
mov
add
shr
pop
mov
mov
add
push
sahf
bound
add
add
in
loopne
lcall
jnp
add
test
cld
pushl
rclb
push
call
mov
imul
jne
out
leave
pop
jl
flds
xchg
xchg
test
ror
movl
pop
mov
mov
add
ljmp
leave
add
add
pop
stos
add
fmul
jo
mov
shll
hlt
pop
pop
pop
push
push
lea
push
push
push
push
call
add
add
aam
add
out
pop
nop
push
add
add
add
xchg
popf
jb
add
add
imul
push
add
arpl
add
aam
sub
pop
pop
push
xor
ror
pop
pop
push
xor
pop
pop
leave
push
lea
push
call
std
in
push
lahf
mov
add
lock
jge
ret
add
sar
add
add
add
or
push
dec
lea
add
pop
mov
push
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
call
xchg
out
mov
push
add
mov
add
scas
sahf
push
add
hlt
cld
clc
jo
mov
add
add
stos
leave
add
js
std
loopne
add
addr16
pop
add
mov
push
dec
xor
sub
pop
push
testb
push
sub
pop
pop
push
push
push
push
push
push
call
mov
fs
pop
add
add
add
add
mov
into
mov
mov
fcompl
add
icebp
repnz
jp
mov
jl
mov
add
fiaddl
add
in
add
add
mov
add
pop
xchg
bound
pop
call
push
add
sub
inc
rol
pop
push
push
pop
call
push
inc
pop
xor
pop
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
lea
push
call
add
mov
add
testl
add
pop
rcr
add
popf
int
lahf
add
add
add
xchg
mov
add
roll
mov
icebp
or
add
add
lcall
push
not
pop
pop
push
push
push
lea
push
push
push
call
out
jge
bound
add
addl
imul
cld
fwait
push
lea
add
scas
jecxz
add
pop
bound
add
jmp
stos
add
mov
clc
rcrb
jnp
add
add
add
pop
pop
push
rol
lea
xor
pop
pop
push
sub
inc
ror
pop
leave
ret
push
not
shl
pop
push
push
push
lea
push
push
push
push
push
push
call
in
mull
add
add
jmp
scas
jb
iret
add
imul
add
imul
add
add
in
push
push
push
push
push
lea
push
call
mov
fidivs
scas
mov
incb
mov
test
add
add
push
test
add
push
add
xorb
bound
test
mov
add
add
stc
add
idivb
call
push
push
lea
push
push
call
call
incb
rolb
add
lds
cld
lret
lret
add
jp
add
add
add
add
bound
add
add
enter
add
add
push
lea
push
push
push
push
call
scas
test
fcmovu
xchg
insb
mov
js
jp
add
icebp
jo
into
test
mov
add
mov
test
add
mov
fucomi
stc
bound
add
add
push
in
jb
jno
pop
add
les
xchg
jns
sarl
repnz
rolb
in
in
pop
push
push
push
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
xchg
xchg
mov
jo
jns
xchg
jne
lea
mov
add
rolb
add
repnz
mov
outsl
add
jb
outsl
call
mov
mov
int
mov
lods
jbe
cwtl
stos
add
add
add
add
in
scas
add
add
lcall
mov
push
rol
rol
xor
ror
pop
push
push
push
push
lea
push
lea
push
call
push
ja
add
add
add
jle
mov
add
mov
add
add
movsl
jecxz
in
outsl
arpl
mov
add
add
aad
sub
pop
pop
push
pop
lea
push
dec
inc
pop
sub
mov
push
not
shr
xor
shr
pop
shr
add
push
lea
push
push
push
call
add
std
cmpsb
mov
add
enter
in
add
add
orb
fiaddl
add
incb
pop
js
not
rol
add
sub
pop
add
push
push
lea
push
call
movl
xchg
lret
pusha
add
push
adcl
add
add
data16
add
hlt
lcall
jae
push
push
call
add
push
add
adcl
hlt
add
fsub
add
add
add
pop
add
mov
pop
mov
push
sti
add
add
add
add
lcall
inc
clc
push
pop
mov
push
push
lea
push
lea
push
push
push
push
call
test
popl
in
add
lret
add
int
jbe
add
add
add
mov
clc
jmp
push
ljmp
lcall
stc
push
push
call
popa
push
popf
lea
loopne
add
mov
lock
add
add
in
add
add
movsl
fiaddl
pop
iret
add
mov
enter
add
jnp
add
push
pop
xchg
sub
pop
xor
lea
push
push
lea
push
call
jo
mov
call
cwtl
add
add
mov
add
lods
ret
jb
mov
loope
out
jae
addr16
xchg
nop
jecxz
add
lcall
adc
add
mov
push
push
lea
push
call
mov
add
mov
in
ficomps
movsl
xchg
clc
add
add
add
add
scas
mov
cmc
fldl
add
in
in
pop
add
xor
push
add
pop
rol
nop
push
sub
rol
pop
nop
push
lea
pop
xor
push
push
push
push
push
lea
push
push
push
lea
push
push
call
add
mov
imul
jp
mov
add
flds
sti
add
push
xchg
add
jbe
pop
xchg
add
add
add
lcall
push
inc
pop
nop
inc
push
add
pop
nop
nop
push
lea
push
call
add
outsl
push
add
jns
xorb
std
mov
mov
add
add
mov
add
addb
cmpsl
push
jb
add
icebp
sahf
add
stos
rcl
add
add
mov
add
loopne
repnz
add
add
add
add
cmp
jne
push
push
push
push
lea
push
push
push
push
lea
push
call
add
mov
outsl
add
add
add
mov
movsb
test
add
add
add
lcall
ljmp
add
add
arpl
jb
push
enter
clc
add
pusha
sub
pop
add
push
inc
pop
nop
nop
push
shl
rol
pop
cmp
je
push
ror
pop
nop
nop
push
lea
not
lea
pop
inc
push
push
call
add
flds
out
add
cld
movl
lds
add
test
stc
lret
outsl
test
jle
cwtl
arpl
data16
movsb
imul
gs
xchg
add
push
push
push
push
push
push
call
icebp
mov
fwait
sti
mov
xchg
mov
jb
outsl
mov
add
hlt
in
cmc
xchg
js
add
add
mov
lds
add
mov
lahf
pusha
sub
pop
nop
push
sub
dec
inc
pop
cmp
jb
xor
push
inc
pop
jmp
push
add
inc
ror
sub
pop
mov
push
pop
add
movzwl
push
dec
add
shr
pop
mov
push
push
push
push
push
call
add
rcll
clc
cli
add
lock
add
add
scas
mov
cmpsl
enter
test
push
sar
add
movsb
jo
add
scas
jno
mov
add
insb
cwtl
add
push
xchg
add
add
mov
stc
ret
insb
add
add
push
add
add
add
add
sub
pop
add
mov
push
lea
push
call
add
add
xchg
sahf
loop
stos
into
fiaddl
add
add
add
push
push
fdivs
sahf
add
xchg
add
add
mov
lcall
add
sub
pop
xor
push
lea
push
lea
push
lea
push
call
mov
in
aad
add
cld
into
bound
add
add
mov
add
into
add
fadds
mov
iret
add
ror
sub
pop
xor
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
mov
mov
push
jne
add
xchg
je
mov
repnz
add
popl
test
push
pop
mov
jb
testb
testb
add
pop
leave
xchg
mov
jl
lods
add
lods
int3
add
loope
xchg
shrl
shrb
push
add
lcall
loope
xor
push
lea
push
call
pop
test
lock
add
imul
lcall
int
add
test
add
push
add
cwtl
mov
addl
mov
add
enter
add
mov
push
jne
push
add
add
clc
lcall
loope
push
sub
pop
xor
push
push
push
push
push
push
call
fildl
add
bound
add
add
xlat
testl
jns
into
add
add
add
add
pop
shl
push
dec
inc
xor
shl
pop
xor
push
sub
shr
add
inc
pop
mov
push
push
push
lea
push
push
push
push
push
push
lea
push
call
jp
add
add
add
add
add
pop
mov
mov
lods
add
add
add
int3
pushf
add
add
xchg
roll
mov
addr16
add
add
mov
push
add
add
popa
push
cmpsb
jle
pusha
mov
add
add
add
add
push
push
push
call
outsl
add
repnz
sti
add
jne
add
idivb
jp
jl
add
push
add
xchg
jle
in
hlt
pop
pop
push
push
push
push
push
lea
push
push
push
call
push
fwait
stos
pop
popa
lea
add
add
add
mov
pop
lods
repnz
add
add
mov
rcrl
stos
sub
pop
pop
pop
push
sub
pop
pop
push
lea
push
push
push
lea
push
push
call
fwait
mov
fistl
add
ja
mov
add
add
fistl
loope
addl
add
stos
sub
pop
leave
push
sub
lea
shr
pop
ret
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
rclb
and
out
add
nop
in
mov
add
jne
fdivp
push
clc
add
mov
add
add
in
fcompl
push
inc
shl
lea
add
pop
mov
push
rol
pop
push
push
add
not
add
pop
push
push
lea
push
push
push
lea
push
push
push
call
push
add
push
jno
scas
mov
mull
imul
call
addw
ret
bound
jl
scas
insb
jnp
pop
add
sub
pop
push
push
add
shl
not
sub
pop
push
mov
push
push
push
push
push
push
push
push
lea
push
call
in
push
add
js
lret
flds
mov
jl
xchg
test
add
in
fdivp
add
bound
add
mov
add
lock
mov
addr16
add
lret
add
add
add
add
add
add
icebp
xchg
nop
jo
mov
cmp
loop
fadds
sub
pop
mov
push
lea
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
call
movsb
add
add
pusha
ret
add
push
add
ja
add
jne
hlt
std
mov
add
loope
lret
mov
add
test
imul
push
lea
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
std
add
stos
push
shl
mov
rcl
nop
add
add
add
add
add
jmp
push
xchg
aam
testl
add
jbe
add
lcall
fdivr
lcall
rorb
test
or
add
pop
bound
push
push
call
bnd
cld
add
xorb
jb
add
js
pop
add
add
add
int
add
sahf
add
xlat
jno
ljmp
pop
mov
test
je
push
push
lea
push
push
push
push
push
call
fdivp
push
jle
mov
add
add
add
add
add
add
addr16
out
xchg
std
fcmove
cmpsl
imul
or
in
in
mov
push
lea
push
push
call
out
add
jle
mov
add
add
jp
cmpsb
add
add
add
bnd
add
into
cwtl
add
add
lahf
pop
stos
sbb
test
roll
jmp
mov
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
mov
add
add
jecxz
scas
push
add
popf
imul
add
add
add
mov
push
ljmp
in
loopne
lahf
xchg
push
data16
in
fcompl
pop
inc
push
rol
pop
cmp
je
test
je
push
push
lea
push
lea
push
call
jmp
rolb
add
add
add
nop
lods
mov
loope
push
pusha
add
add
fisubs
add
iret
pop
in
insb
add
add
mov
lret
add
test
sub
pop
mov
push
ror
xor
sub
pop
inc
push
lea
push
push
push
push
push
push
push
push
call
enter
fdivs
jbe
add
mov
ret
add
mov
jmp
jge
add
aad
add
data16
add
fs
add
pop
mov
faddl
xchg
add
leave
arpl
sub
pop
cmp
je
test
jne
push
inc
inc
pop
xor
push
push
push
push
call
jle
mov
loopne
int3
push
add
ljmp
add
lcall
popa
add
mov
fucom
mov
stos
out
iret
xlat
add
add
add
sub
pop
pop
pop
push
xor
pop
pop
push
ror
pop
pop
push
push
call
les
test
push
out
add
add
add
mov
mov
push
xchg
popl
add
into
add
mov
icebp
add
add
push
mov
add
add
cli
pusha
in
add
stos
mov
cmpsb
sub
pop
leave
push
inc
pop
ret
mov
push
add
ror
dec
xor
pop
inc
push
push
push
push
push
push
lea
push
call
add
movsl
movsb
add
std
cli
add
je
pop
bound
add
xchg
lcall
xchg
pop
adc
push
add
addr16
add
ror
add
add
add
lahf
add
jecxz
add
fidivrl
add
hlt
add
sti
push
ljmp
lcall
lock
lea
push
push
push
lea
push
push
call
fwait
add
add
cli
add
mov
mov
jmp
addl
fadds
rolb
loop
add
jge
jecxz
loopne
fnsave
add
push
add
mov
add
imul
add
add
add
icebp
add
in
in
lcall
popa
add
add
push
push
call
pop
mov
fwait
xchg
push
repnz
add
loopne
add
add
add
add
push
add
add
pop
pop
add
hlt
jl
add
mov
popa
add
push
add
aad
add
sub
pop
mov
add
push
inc
ror
pop
cmp
jne
push
not
pop
mov
push
push
push
call
jb
cld
add
lahf
mov
pushf
jns
add
add
fldl
xchg
push
push
test
enter
iret
add
nop
fcoml
xchg
lock
add
xchg
clc
push
scas
lea
in
lcall
rorb
rolb
add
push
lea
dec
add
not
pop
mov
push
lea
push
lea
push
push
push
lea
push
lea
push
lea
push
call
add
add
fildl
push
lret
mov
add
add
add
add
pop
add
jl
and
out
cli
add
push
mov
cld
add
mov
add
fildl
lock
add
in
loopne
lcall
roll
loopne
test
push
lea
push
lea
push
push
push
push
call
cltd
add
add
add
xlat
xchg
fldl
add
add
xchg
fidivl
je
add
mov
mov
add
add
add
add
sub
pop
jmp
push
push
push
lea
push
call
jns
stos
rolb
imul
adcl
add
xlat
mov
sarb
add
add
mov
std
pop
stos
cmpsb
addr16
mov
test
faddl
shl
push
mov
add
mov
push
testl
jo
in
lock
xor
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
lea
push
call
mov
loopne
add
add
bound
jp
in
mov
add
mov
jbe
add
add
aam
mov
sub
pop
pop
push
lea
push
call
pusha
add
repnz
add
add
push
ljmp
addb
shlb
add
mov
shlb
pop
push
push
push
push
push
lea
push
lea
push
call
add
add
sahf
loopne
add
cmpsl
add
mov
mulb
loopne
push
imul
add
add
std
add
xchg
lds
lret
mov
arpl
add
lods
add
add
movl
mov
sub
pop
pop
push
push
push
call
push
imul
add
add
add
test
add
loop
add
jecxz
movb
testb
add
add
add
filds
add
addl
add
lds
lcall
push
rol
dec
pop
ret
lea
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
test
into
add
xlat
fsubrl
xchg
mov
enter
add
add
add
mov
rolb
movsl
add
add
mov
add
add
add
mov
xchg
mov
add
stos
jo
add
lcall
push
lea
push
push
call
sti
shll
add
in
add
mov
lret
into
fsubs
mov
lds
add
jbe
add
mov
push
add
add
add
insb
add
add
add
xchg
jp
mov
add
push
sub
pop
pop
push
shl
not
pop
pop
leave
push
push
push
push
push
push
push
call
in
add
call
mov
js
movsl
jne
push
mov
xchg
mov
imul
lods
jo
jae
jnp
push
lock
add
add
add
add
mov
testl
add
add
addl
mov
pop
ret
mov
push
push
push
lea
push
push
call
xchg
sahf
jns
loopne
sbb
gs
add
add
add
add
sti
test
add
add
fiaddl
jbe
cmpsb
add
add
add
rclb
lret
pop
mov
add
xlat
add
mov
add
lds
pop
push
not
pop
pop
push
sub
add
pop
pop
push
lea
xor
pop
leave
ret
xor
cmp
push
inc
cmp
xor
adc
adc
adc
sbb
adc
cmp
xor
adc
jb
adc
mov
add
aad
test
aas
fmull
adc
jno
hlt
test
lea
xor
aad
sub
imul
loop
daa
xor
leave
mov
sbb
gs
cmp
inc
adc
test
xor
jns
xchg
imul
int3
mov
test
inc
inc
outsb
enter
fiadds
test
mov
and
in
sbb
cmc
sub
mov
fucomip
rcrb
mov
lahf
mov
das
pop
loopne
aam
and
sahf
lea
mov
cwtl
jmp
ja
adc
ret
adc
int
or
loop
jge
xchg
outsb
sub
sbb
enter
adc
fwait
jmp
das
or
loopne
stos
je
popf
add
inc
dec
lea
xor
adc
insb
aad
mov
add
shrb
jbe
xchg
mov
repz
fnstcw
pop
lahf
fisubrl
jp
push
jg
mov
daa
jp
or
push
daa
ret
sbb
jmp
jno
and
in
ds
add
out
test
mov
pop
mov
insb
iret
adc
inc
ss
out
sti
fdivl
mov
loopne
mov
cmp
sbb
insb
dec
pop
mov
xchg
fbld
pop
imul
cmpsb
out
push
pop
inc
xor
cmc
das
xor
or
push
or
incl
test
adc
sbb
cmp
xchg
fstl
sahf
sbb
arpl
nop
add
addr16
push
xchg
sbb
jle
ret
dec
fucomi
sub
add
xchg
jo
mov
mov
fcmove
in
mov
lock
and
les
jne
aas
cmpl
loope
or
or
sbb
leave
popa
cmc
outsb
mov
push
repnz
hlt
lret
lods
mov
repnz
in
add
arpl
push
jecxz
into
loop
fsubl
cmp
in
jns
mov
push
pusha
lcall
ds
xor
add
cli
pop
mov
push
push
test
xchg
insl
sub
inc
or
jge
fdivrl
jb
add
popf
mov
in
call
imul
push
jmp
aaa
in
pop
add
outsb
std
into
mov
adcl
mov
shll
sbb
loop
pop
push
or
mov
icebp
pop
jg
roll
cs
push
sbb
push
push
xor
fimuls
jmp
stos
sbb
jge
dec
in
shlb
stos
jl
mov
inc
dec
in
test
les
xchg
das
mov
xchg
inc
pop
lcall
xlat
sbb
data16
enter
jb
mov
pop
sub
iret
cmp
xchg
xchg
gs
ds
aad
adc
adc
movsl
test
xor
cmp
cld
imul
push
mov
pop
mov
and
jns
or
loope
xchg
push
add
jl
out
or
xor
add
scas
daa
mov
jmp
pop
push
push
jge
ja
in
and
pop
hlt
sti
pop
lea
push
int
nop
xchg
ficompl
mov
stos
sarl
pusha
lcall
cwtl
push
push
mov
mov
rcll
gs
mov
jnp
bound
aaa
popf
and
loop
stc
xchg
lret
iret
pop
pusha
mov
jbe
fcoml
push
shrl
fdivrp
sbb
mov
cs
mov
cwtl
mov
mov
imul
and
ret
shl
repnz
scas
dec
insb
and
dec
insb
or
insb
pop
jae
add
dec
stos
mov
xor
mov
adc
pop
insb
adc
nop
int
mov
loope
mov
clc
mov
lds
out
pushf
adc
ret
xor
call
imul
cmp
fwait
out
xchg
bound
popa
cmp
cmpl
lds
in
push
pushf
jb
addr16
jg
out
pop
pusha
shl
out
jmp
in
xor
cmp
cmc
cmp
testl
cli
xchg
lds
push
dec
notb
and
insb
sahf
mov
cmp
xor
inc
jp
out
lods
inc
adc
or
test
stos
mov
sbb
fwait
cmp
xchg
cmp
lods
mov
data16
xchg
mov
xchg
dec
push
push
xchg
adc
sbb
repz
fdivl
lds
mov
sbb
push
or
std
aad
inc
movsb
fisttpll
push
shrl
adc
push
fdivs
shll
inc
das
das
xor
jge
aam
dec
shrl
lea
sbb
repz
mov
ds
popa
jno
imul
inc
js
loop
cmpsl
adc
push
jge
nop
imul
jmp
pop
dec
xor
sbbb
xchg
jecxz
roll
or
sub
stos
iret
or
cmp
mov
mov
addps
sbb
add
pop
repnz
xchg
inc
aaa
xchg
loope
out
xor
aaa
xor
inc
icebp
mov
sub
xchg
mov
enter
jae
adc
movsb
dec
mov
push
out
dec
adc
je
insl
lcall
cld
or
add
stos
push
es
cmp
pop
cmp
inc
mov
stos
roll
fsubp
mov
mov
sub
inc
add
popa
dec
sub
or
jae
pop
rclb
xchg
in
aam
adc
aas
add
xor
loop
sti
fisubrl
arpl
cmp
mov
jnp
cwtl
mov
sbb
out
outsb
push
pop
pop
xchg
sbb
cmp
sub
std
cld
test
out
inc
cmp
adc
adcl
and
in
cmp
sahf
inc
orb
in
mov
mov
test
daa
sbb
je
cwtl
je
test
repz
enter
pop
dec
xchg
jle
or
aaa
clc
add
xlat
xchg
mov
xchg
outsl
ret
adc
mov
test
mov
adc
push
negl
inc
ror
lods
mov
cmp
pop
xchg
repnz
loop
jae
gs
ja
cld
das
aad
leave
mov
mov
in
cmp
inc
sbb
aaa
pop
lcall
jle
and
push
add
data16
clc
imul
jne
push
scas
add
push
add
push
ljmp
mov
pushf
pop
and
jo
mov
stos
mov
or
call
mov
mov
mov
dec
inc
jns
xor
in
add
inc
xor
lcall
pop
ja
dec
into
jp
leave
pop
dec
xchg
lcall
mulb
shlb
fcmovb
outsb
aas
mov
cmp
scas
cmp
xor
adc
cli
jnp
xchg
int
push
fsubrl
adc
shrl
mov
test
mov
dec
cmc
je
icebp
inc
arpl
rcrb
cltd
fnstcw
cmpsl
push
cmp
fiadds
add
push
pop
and
movsl
gs
sbb
adc
test
mov
divb
mov
int3
in
dec
cmc
push
scas
loopne
dec
movsb
mov
aaa
sbbb
adc
jno
or
jecxz
dec
push
push
movsl
and
sub
pushf
xchg
lret
add
add
ret
and
outsb
mov
les
cmp
out
add
enter
psubsw
mov
sub
loopne
out
xor
pop
mov
imul
orb
cmp
xor
shll
das
subl
pop
adc
pop
in
mov
lahf
sub
rolb
inc
fldenv
jmp
adc
pop
push
addl
data16
imul
fmul
rolb
and
adc
xor
or
sarl
popf
lea
pop
fiadds
cmp
data16
dec
sub
ror
int3
sbb
rcrl
lods
leave
test
int
mov
stos
sub
mov
mov
inc
inc
sub
fbstp
sub
sarl
mov
lds
aad
sbb
cmp
or
mov
inc
push
sub
nop
mov
or
je
lock
lods
xchg
mov
cmpsl
stc
jnp
aad
test
jge
cwtl
jo
shrb
idivb
mov
popf
sarl
movsb
sub
mov
adc
dec
mov
xor
cmp
xor
not
mov
int
cld
jmp
sub
insl
std
mov
inc
test
repnz
test
leave
and
stos
pop
dec
nop
jle
xchg
mov
dec
push
mov
aas
or
dec
and
and
pusha
arpl
pop
xchg
sub
outsl
aaa
sahf
jnp
jl
dec
stc
add
cmc
xor
pop
inc
push
cmp
jp
iret
orl
lods
add
test
mov
sarb
repz
or
loop
sub
cmp
jb
push
xor
stc
adc
and
mov
popa
int3
push
or
jo
test
and
scas
inc
sarb
shl
adc
dec
lods
sub
lods
pop
les
pop
sub
fwait
push
rcr
pop
into
bndstx
repz
xor
xor
push
cmpsb
out
mov
adc
adc
mov
jecxz
push
inc
mov
test
jbe
fs
movsb
faddp
xor
popf
repz
pusha
scas
mov
aas
loopne
and
pop
sahf
cmpsb
leave
mov
xchg
and
jecxz
arpl
popa
lret
add
orl
gs
scas
insb
adc
cmp
add
cmp
fwait
mov
lods
les
xchg
and
add
pop
add
ret
pop
add
jg
push
out
bound
jns
jp
lcall
mov
jmp
stos
xchg
or
pushf
sbb
mov
enter
jno
pop
loop
dec
lret
xchg
adc
je
lahf
pop
rcrb
hlt
clc
std
jecxz
jge
or
out
sbb
pop
dec
lahf
ja
scas
stos
jnp
inc
xchg
dec
mov
adc
inc
mov
and
lret
inc
or
aad
inc
jg
dec
loopne
inc
jns
mov
movsb
aaa
push
mov
repnz
pop
mov
xchg
stc
repnz
shrb
mov
movsl
cmp
aam
dec
sarb
jmp
cmp
mov
mov
pop
jg
add
cli
insl
lret
call
pop
xchg
fcmovnbe
je
add
mov
xor
and
ja
dec
pop
jno
js,pn
pop
dec
mov
nop
leave
push
pop
jg
cmp
sbb
shlb
fwait
jl
insb
icebp
adc
insl
cmpsb
mov
jbe
test
insb
pop
mov
push
cld
lahf
mov
dec
out
das
inc
jne
push
sub
popa
incl
leave
imulb
pop
cmp
mov
and
sahf
sub
cmp
inc
mov
cltd
add
pop
mov
test
mov
imul
loope
fcmovu
fisubs
mov
add
push
pop
loop
and
std
xchg
cs
jb
xor
das
cmp
adc
outsl
push
sahf
out
lods
loopne
add
je
popa
mov
clc
in
ror
outsb
push
shll
mov
mov
pop
in
dec
or
dec
dec
arpl
push
mov
add
cli
sarb
enter
adc
inc
lret
mov
inc
aad
push
test
ficoml
cmp
dec
xchg
pop
jl
pushf
sub
cltd
sti
jbe
sbb
sub
pop
scas
mov
lret
fcom
jecxz
add
inc
and
pop
orb
or
cld
or
push
xchg
fs
outsb
pop
add
dec
xor
in
jp
or
pop
adc
packssdw
push
shlb
and
sbb
jne
int3
push
mov
lret
insl
mov
push
jo
iret
test
pop
or
jne
stc
lods
mov
cld
cmp
or
xchg
lea
xor
sbb
cmp
sub
or
popf
test
xchg
enter
insb
fldcw
lret
push
or
repz
mov
push
xchg
int
ret
adc
lds
cmp
dec
test
mov
or
in
rcr
cs
jns
sbb
jo
dec
nop
cs
int3
add
test
std
pop
dec
pop
mov
shlb
rcll
xchg
or
inc
rol
enter
cmp
shl
inc
or
in
test
push
pop
xlat
jle
sbb
leave
cmp
sbb
fnstsw
ss
rcl
jae
cs
fisubrs
andl
adc
push
push
imul
jecxz
js
scas
sahf
or
adc
inc
popa
call
ja
sets
test
mov
push
and
mov
ret
test
jo
jmp
cmp
imul
fsubp
sbb
loope
dec
jp
mov
flds
test
pushf
dec
jecxz
push
push
int
test
sub
adc
pop
dec
popf
aaa
lcall
shrl
push
or
fimuls
loopne
fwait
dec
sbb
mov
add
xchg
xor
lret
cltd
test
daa
out
xchg
in
mov
push
push
cmpb
cmc
jae
xor
jp
loop
add
aam
and
sub
and
mov
cld
shrl
cmpsl
andb
fnstsw
roll
in
xor
repz
push
sbb
mov
scas
inc
mov
push
sub
sub
into
or
in
or
fnstenv
outsb
aas
mov
test
mov
mov
push
aad
fbld
sti
popa
xor
lea
pop
mov
mov
shll
mov
jbe
imul
xchg
out
cmp
xor
fisttpll
data16
mov
clc
lea
xor
jae
add
jbe
mov
push
int3
mov
popa
dec
shlb
push
and
pop
das
adc
adc
mov
add
lds
sarl
xchg
pop
dec
out
xor
adc
inc
pop
out
in
ret
int
repnz
dec
test
xlat
imul
push
arpl
sbb
lret
mov
fwait
bound
xor
mov
loope
mov
inc
fisubl
add
out
fucomi
pop
mov
out
stos
jns
dec
in
inc
adcl
jle
in
xor
stc
out
imul
je
int
jo
loope
or
mov
shlb
push
gs
pop
mov
nop
mov
ficomps
jno
scas
das
push
adc
dec
sub
ret
and
push
imul
dec
inc
jne
xchg
outsl
leave
cmpsl
rolb
jg
push
push
mov
sbb
dec
push
mov
jbe
push
mov
or
lret
hlt
jne
adc
insb
pop
stos
mov
sbb
andb
mov
or
out
inc
js
cmpsl
sub
pop
adc
cmp
xchg
push
sub
pop
adc
add
clc
inc
cmpsl
cmp
fstpl
ret
mov
jbe
pop
xlat
call
mov
fsubrs
and
xchg
push
cld
test
stos
aas
scas
testl
xchg
popf
cs
into
jg
sbb
insl
fstl
daa
loope
jbe
je
adc
popa
xchg
push
sbb
pop
adc
ror
cmp
lods
xor
jae
lods
xlat
fadds
sbb
idiv
in
xchg
push
sub
fdivrs
je
iret
dec
out
inc
pop
xlat
mov
and
xchg
hlt
jb
test
shrb
sub
lods
fists
push
stos
int3
lret
xchg
ret
sub
mov
lcall
sub
subb
xlat
bound
lahf
ss
cs
mov
ret
call
adc
call
and
jno
add
jle
push
cmpsl
mov
push
dec
mov
imull
lcall
push
stos
in
flds
mov
int
inc
mov
rcll
ljmp
hlt
movsl
pusha
scas
fstpt
xor
faddl
mov
and
adc
inc
movb
ljmp
sti
jnp
sti
fimuls
ficoml
fucomp
and
cmp
sbb
ds
push
nop
jb
call
mov
xchg
enter
sti
adc
dec
pop
jns
adc
ret
sbb
pop
cmp
push
pusha
das
mov
mov
mov
dec
adc
orb
xchg
jp
add
dec
mov
mov
jae
loope
into
into
pop
push
pop
xchg
ss
xor
add
pop
push
leave
jb
test
fiaddl
rcrb
mov
or
inc
cmpsb
cmp
ret
pop
out
das
dec
sbb
adc
rclb
push
icebp
shrl
inc
xchg
je
mov
stc
rclb
clc
dec
xchg
or
xor
add
enter
xchg
mov
in
pop
xchg
pop
pop
sbb
cmpsb
insl
xchg
cmc
aaa
push
aas
add
pop
and
xor
movsb
movsb
add
xor
jge
in
test
xchg
mov
roll
arpl
push
mov
sti
mov
inc
push
je
push
ret
rcll
sbb
and
icebp
aad
mov
xchg
jno
xor
bound
sbb
cld
call
xchg
jns
jne
les
mov
push
xor
mov
pop
pop
sub
and
clc
jl
mov
or
inc
cmp
fdivl
push
mov
out
jmp
mov
cld
movb
xor
out
fidivs
ds
repz
fisubrl
push
mov
inc
xchg
sub
xor
ja
mov
cmc
push
xor
in
cwtl
pop
xchg
or
outsl
fimull
pop
adc
data16
jmp
jg
mov
and
push
mov
mov
push
pop
stc
jns
jbe
pop
jno
sub
lcall
mov
xchg
call
lcall
mov
cltd
inc
in
out
bound
push
daa
lahf
in
sbb
jg
adc
xor
ret
std
cs
stos
imul
xor
gs
mov
lahf
push
inc
mov
xor
rcrl
aad
lea
out
insb
ljmp
arpl
pop
add
gs
test
push
or
pop
jge
mov
add
or
cmc
stos
inc
in
xor
inc
loop
cli
cmpsb
or
mov
ficomps
loopne
mov
sbb
stos
mov
push
fisttps
add
cmp
sub
xchg
inc
enter
xor
add
mov
mov
les
jg
inc
addr16
and
pusha
out
loopne
cmp
sti
repz
addl
and
or
push
mov
aam
lret
xchg
pop
stos
out
and
jmp
jge
lret
popa
cltd
push
cmpsl
pop
stos
fnstsw
add
outsl
repz
testl
inc
push
incl
aad
sub
jbe
pusha
xor
and
push
hlt
out
test
sti
inc
std
lds
adc
xor
jae
sarl
out
out
popf
cs
ds
pop
cltd
jmp
mov
push
sarb
test
outsb
adc
mov
inc
cltd
cmp
sub
imul
pandn
xchg
xchg
dec
and
xor
lret
or
imul
rcrb
clc
sbb
inc
pop
addr16
call
adc
inc
jge
test
fcmovb
stc
jge
cmp
nop
addr16
in
imulb
dec
pop
insb
jno
pop
pop
addr16
cmp
stos
and
mov
dec
sub
pop
loopne
lods
xchg
xor
add
mov
std
cmp
int3
xor
test
es
repnz
push
fnstenv
pop
mov
aaa
jne
lock
push
imul
scas
stc
and
inc
orb
xor
imulw
push
imul
mov
mov
les
adc
or
test
sti
mov
cltd
push
jp
pop
push
fistps
cmpsl
aam
mov
xchg
gs
or
ss
push
imul
xor
and
xchg
lcall
jbe
jae
in
mov
lahf
lcall
mov
out
fistl
nop
dec
mov
mov
pop
outsb
mov
movsl
cmp
inc
mov
cmc
dec
dec
jb
rolb
in
jo
or
or
shll
repz
push
movb
xor
clc
inc
movsb
mov
loopne
push
shrl
out
clc
mov
mov
sub
cmp
mov
out
jae
rorb
je
pop
mov
leave
loop
fwait
dec
pop
fs
js
iret
push
out
fstps
clc
incb
push
mov
add
out
and
xor
and
xchg
sbb
loopne
mov
out
pop
inc
hlt
or
repz
loopne
add
sub
aam
test
rorb
xlat
fnsave
fstp
mov
inc
xchg
push
inc
fdivrp
call
dec
and
inc
push
sti
aad
cmp
leave
lcall
mov
leave
outsb
mov
cmc
mov
arpl
repnz
ljmp
cmp
mov
out
cli
pop
mov
ss
jecxz
and
popa
imul
add
xor
lcall
jmp
push
mov
iret
inc
sbb
mov
mov
mov
fwait
jmp
jns
sti
xor
orl
jns
loopne
shlb
push
mov
xchg
cmp
xchg
pusha
dec
sbb
das
mov
in
adc
push
xor
dec
or
cmp
push
sub
cwtl
xchg
dec
jge
pushf
adc
mov
mov
pop
xchg
pop
fiaddl
shlb
fmul
dec
pop
out
inc
xchg
outsb
sub
fsts
mov
mov
mov
push
jae
jno
mov
or
pop
and
ret
stos
out
in
loope
cmp
repz
test
dec
call
add
sub
xor
pop
rcrb
xchg
mov
add
cs
aad
ds
aaa
inc
pop
push
movsl
jne
incb
and
jge
mov
mov
sbb
jmp
adc
jp
outsl
sub
mov
in
cmpsb
shl
xor
cwtl
popa
aaa
test
out
loopne
mov
sbb
add
xchg
out
xorl
xorl
jns
rclb
pop
mov
lahf
in
jp
inc
sub
xchg
sbb
imul
mov
popa
clc
jmp
inc
stc
loop
test
int3
repz
fwait
pop
lea
adc
popf
and
adc
mov
mov
loope
fimull
sbb
xchg
arpl
subb
mov
and
cmpsl
and
cmp
and
xor
dec
pop
test
or
pop
rclb
mov
sub
pushf
movsl
jg
lods
adc
dec
ss
mov
enter
jnp
icebp
dec
aam
in
or
sbbb
push
cmp
cmp
mov
mov
inc
add
jmp
ret
pop
fisubrs
pusha
xchg
pop
loop
mov
popf
mov
or
jb
sti
sbb
adc
jmp
jecxz
xchg
xor
mov
not
sub
adc
xchg
ja
mov
adc
lods
mov
push
popf
or
mov
pop
lea
and
cmpsb
int
seta
push
inc
cwtl
jge
sahf
jb
cld
icebp
jb
xacquire
xchg
test
repnz
pushf
add
lcall
cwtl
or
pushf
mov
and
push
ds
aas
je
out
add
jno
js
int
jne
adc
loope
cli
mov
sti
cmp
stos
iret
mov
mov
adc
adc
sti
mov
push
mov
jae
dec
insl
jecxz
jle
pop
test
mov
pop
rorb
addr16
call
fmulp
sbb
adc
sbb
mov
mov
jmp
pushf
ret
rcrb
lods
lea
pop
pop
inc
pop
push
sbb
les
gs
jb
iret
hlt
jo
mov
aam
ret
aad
lods
in
mov
adc
pop
enter
xchg
cli
fidivrs
push
pop
lods
shrb
sub
jmp
out
call
pop
push
sub
jmp
inc
or
and
inc
fbld
outsl
mov
inc
cli
es
xchg
add
add
inc
mov
and
fstpt
pop
cmp
hlt
movl
mov
dec
pop
rclb
xor
imul
push
or
inc
xchg
mov
adc
std
test
mov
cmp
out
xor
or
mov
sbb
xchg
sbb
pop
sbbl
mov
push
dec
fildll
daa
or
cmp
call
sub
popf
subl
add
mov
mov
std
fimull
xchg
dec
in
inc
dec
xchg
pop
jle
jae
mov
mov
stc
gs
pop
push
push
sbb
cli
scas
enter
loope
sti
scas
repz
rorb
mov
imul
out
in
out
mov
loope
sbb
mov
mov
and
xor
imul
xlat
mov
sbb
rcrl
aas
push
dec
dec
jl
xor
mov
test
jo
jge
mov
mov
cmpsl
out
lds
mov
mov
xchg
cmp
inc
push
fwait
or
pop
and
add
aam
repz
pop
xor
popa
ds
push
push
int
xchg
dec
cwtl
dec
xorb
fstps
aas
loopne
adc
js
fcoml
sti
sarl
stos
mov
aad
cmp
pushf
ds
pop
shrl
mov
scas
lods
adc
xchg
mov
ss
hlt
iret
cltd
jg
xchg
push
pushf
adc
push
fldenv
out
add
pop
ss
xor
call
in
popf
cmp
xchg
shlb
fs
and
sbb
jns
push
lret
inc
pushf
add
movsb
mov
fimull
mov
leave
in
mov
call
pop
out
negl
test
xchg
pop
cmp
cltd
push
inc
andl
inc
movsl
xor
out
adcb
push
fnsave
ret
ficoms
sbb
ss
jae
push
mov
jmp
movsl
incl
push
dec
insb
inc
aaa
jg
add
shrb
jnp
dec
call
fcoms
inc
in
aaa
xor
jle
add
insl
mov
fwait
lcall
sub
push
xor
xchg
in
adc
dec
cmp
dec
aam
int3
movl
mov
std
adc
dec
xchg
or
es
mov
in
dec
shll
push
dec
sub
xchg
mov
jo
jg
fsubrl
xchg
sarb
inc
fdivrs
jnp
xlat
fimuls
iret
dec
mov
push
loope
mov
test
xchg
ja
pop
test
push
add
clc
mov
scas
adc
stos
loopne
lock
add
cmp
lcall
jp
repz
adc
jg
push
lea
xlat
mov
jle
lret
push
gs
das
stc
stos
push
arpl
outsb
add
stos
roll
jns
cs
pop
sub
imul
pop
das
mov
mov
sbb
push
jne
pusha
jo
inc
addr16
mov
inc
sbb
xor
loop
dec
cmpsb
jmp
mov
inc
cmp
bnd
sahf
and
and
dec
movsb
fistpll
push
cmc
sbb
jecxz
mov
sahf
shlb
fdivp
imul
mov
cmp
inc
cmp
das
inc
dec
movsl
xor
pop
test
outsb
loope
leave
xchg
push
lcall
sub
test
arpl
mov
mov
cmp
rorl
imul
sub
mov
pop
mov
out
fldenv
push
cli
and
rol
cs
cmc
add
add
cmp
js
cmp
cltd
pop
cmp
or
lret
pushf
pop
cmp
jl
add
mov
cmp
fisttps
dec
add
mov
mov
push
in
adc
stos
push
mov
and
pop
xchg
cwtl
mov
and
sub
jns
pop
movsl
loopne
jae
push
cmpsl
fdivrl
push
inc
xor
mov
xchg
shlb
and
lcall
outsb
or
addr16
fisubrs
sub
inc
push
push
mov
inc
jmp
jb
pop
xchg
enter
sbb
fldl
out
pop
xor
push
scas
mov
aas
ret
inc
xor
or
pop
lret
stc
jae
inc
push
xchg
rclb
xor
jns
dec
imul
pop
adcl
push
testl
xchg
mov
icebp
mov
dec
dec
clc
loop
aaa
jge
cmp
xor
fs
mov
and
int3
push
test
add
jle
je
loope
mov
push
push
pop
mov
pop
test
lea
and
call
fdivs
push
lock
adc
das
push
sub
ret
jbe
into
stos
cli
push
test
fwait
stos
or
dec
aad
jl
arpl
jnp
cmp
ds
fildl
loopne
es
xor
in
cmp
pop
push
xchg
cmp
lahf
fidivrs
jge
xchg
hlt
jnp
fiaddl
xchg
stos
mov
ret
mov
sub
fisubl
mov
out
out
sub
scas
aam
ss
cmp
pop
adc
fidivrl
pop
cmp
into
pop
xor
outsb
aas
fs
test
ja
daa
inc
adc
sub
add
loope
xlat
cmp
es
mov
insb
test
lds
push
fsubrl
xchg
or
push
push
sub
xor
fcmovnbe
sub
inc
xchg
cmp
das
fwait
aad
jmp
sbb
das
mov
jecxz
add
ljmp
mov
pop
pop
adc
and
fs
adc
jns
scas
jno
adc
int
sub
push
push
cmpsl
mov
pop
sub
std
ret
ret
inc
outsl
jmp
inc
in
scas
popf
scas
dec
aam
cmp
lds
push
push
jmp
jne
pop
imul
out
sbb
xchg
lahf
push
jecxz
pop
inc
test
mov
sub
test
out
out
data16
stos
lahf
icebp
add
cli
sbbl
jmp
sub
and
adc
adc
lret
pop
mov
repz
int
jbe
icebp
rclb
mov
fstpl
mov
mov
cmp
or
test
pop
mov
cs
movsb
arpl
cmp
pusha
je
addb
mov
inc
add
mov
test
or
fistpll
mov
sub
ret
addr16
dec
ss
mov
aam
sarb
call
iret
aad
rcr
fimuls
lret
and
ljmp
cmp
neg
es
shr
mov
scas
fistpl
mov
mov
cmp
sbb
cld
loope
push
daa
pop
mov
push
iret
push
insb
xchg
lcall
jb
push
movsb
mov
nop
sbb
mov
push
aas
add
ret
xor
cmpsb
fs
jo
pop
adc
test
lahf
lcall
rcrb
xor
comiss
cmp
scas
les
in
in
ljmp
adc
insb
jnp
push
outsl
jge
sbb
ret
rclb
mov
leave
cltd
jmp
fs
test
xor
jmp
leave
dec
mov
jb
insl
add
cmpsb
mov
xor
inc
inc
push
adc
mov
repnz
mov
iret
fdivr
adcl
adcb
pop
adc
jecxz
in
cmpb
mov
mov
mov
fnop
in
into
xchg
jmp
ret
ljmp
mov
mov
pushf
or
pop
movsb
dec
popf
lahf
roll
mov
out
imull
fnstsw
mov
hlt
stos
cmp
adcl
cmp
in
mov
cli
int
and
sbb
bound
mov
xchg
or
xor
leave
pop
shll
add
pop
stc
push
std
scas
push
mov
jecxz
icebp
push
jl
pop
or
mov
xchg
fnstsw
loope
dec
jne
push
mov
std
push
dec
mov
lods
jbe
adc
pop
fnsave
push
push
dec
dec
jle
inc
out
scas
mov
bound
clc
fdivrs
xor
or
cli
mov
jne
out
adc
ret
ficoms
sbb
cs
out
cld
rcrl
jecxz
out
jb
out
rorb
lahf
mov
pop
push
loope
dec
sahf
inc
rcrb
sub
stc
xor
mov
out
mov
mov
fwait
adc
dec
inc
xchg
icebp
or
les
cs
pop
ret
push
cmp
adc
iret
mov
pop
stc
icebp
les
adcb
pop
cmp
insl
inc
add
cmpl
mov
or
jp
aaa
adcl
sub
lret
lcall
dec
inc
loope
in
clc
and
cmc
pop
adc
mov
mov
dec
test
das
inc
xchg
call
out
mov
ret
cmp
iret
pop
jecxz
and
or
sub
xchg
mov
pushf
outsb
gs
add
fimull
rep
imul
jbe
or
jmp
call
mov
inc
and
mov
cmp
jne
dec
das
ds
lcall
mov
addl
mov
inc
in
adc
popa
stc
fxch
mov
mov
xchg
push
cmpl
and
jae
push
pushf
inc
cmp
cmp
mov
nop
and
inc
cld
repnz
mov
in
pop
loop
pop
sbb
cmp
jmp
cs
sahf
out
pop
leave
xchg
and
test
push
arpl
sarl
insl
std
lock
xchg
test
adc
mov
pop
dec
gs
sub
jae
stos
jb
adc
or
mov
and
shrl
xor
add
ds
sub
popf
add
push
inc
mull
adc
inc
jle
jp
js
adc
xchg
and
pop
add
add
xchg
cmp
repz
xor
inc
loopne
sarb
cwtl
out
push
push
add
xchg
add
mov
jl
sub
imul
mov
cmpsl
loopne
ds
cmp
mov
or
pop
dec
jb
test
idiv
jmp
stos
push
aam
xor
enter
pop
push
arpl
lds
cmp
sarb
or
push
and
sub
cmc
cwtl
inc
jmp
js
lea
or
loope
mov
sub
scas
fsubrs
insb
sub
mov
lea
shl
into
inc
pop
jo
or
lds
scas
dec
jb
shll
fdivs
orb
cs
movsl
or
mov
dec
lret
lods
xor
sahf
in
xchg
or
lock
fisubrl
divb
fistpl
loope
cmpsb
pop
xchg
js
jge
mov
js
push
sub
aad
dec
daa
add
lds
test
jge
es
and
xchg
call
and
in
fldl
xor
inc
lret
push
test
mov
mull
mov
les
xorb
lock
ret
ljmp
stc
stos
lret
xchg
ret
adc
sub
icebp
shlb
adc
or
adc
test
inc
std
and
call
out
data16
xor
pop
stc
divl
dec
dec
stos
mov
pop
and
fcoms
pop
lods
mov
into
fistps
mov
orb
enter
jb
hlt
stos
mov
orl
adc
jnp
inc
xlat
add
cmp
lea
mov
popf
mov
jmp
mov
lret
xchg
sub
imul
xor
and
pop
push
loop
out
pop
xchg
addr16
call
test
mov
push
icebp
push
jns
mov
repnz
mov
or
ljmp
mov
mov
and
sbb
or
cmp
add
jle
mov
push
notb
loope
xor
push
inc
fsubrl
sti
cmc
push
pop
and
dec
jo
xchg
pop
leave
rcll
add
add
addr16
inc
lds
mov
cltd
inc
les
popf
sub
lock
xchg
in
or
xchg
cld
insl
jle
xchg
pop
mov
aas
mov
jnp
sub
divb
mov
mov
orl
loope
add
inc
repnz
pop
mov
xor
shl
push
or
push
insl
loope
jmp
dec
pusha
pop
jmp
cmpsb
pop
cmp
mov
fs
push
jo
mov
sub
jnp
out
test
test
test
dec
or
push
stos
jne
inc
xchg
add
and
push
fisubs
jb
xchg
cs
dec
imul
pusha
and
dec
push
adcb
sbb
fcompl
push
mov
xchg
sub
cmp
or
push
and
add
into
pushf
mov
fnstcw
adc
xchg
mov
push
sbb
xchg
push
rep
mov
test
mov
pop
inc
icebp
sbb
mov
mov
adc
push
push
scas
dec
xor
sub
adc
mov
jns
mov
hlt
add
xchg
xlat
adc
out
movsl
cmpsb
jecxz
and
std
sahf
push
loopne
pushf
es
push
pop
fdivrl
not
xchg
push
sbb
lret
imul
rcrb
push
pop
mov
xor
in
jl
push
test
and
imul
mov
adc
sbb
pushf
cmp
gs
adc
sbb
inc
aas
add
mov
lds
mov
pop
jnp
push
or
jnp
dec
bound
mov
jl
adc
stc
xchg
cmp
nop
mov
mov
jl
mov
stc
adc
mov
or
mov
jg
cmp
pop
pop
fsubr
push
negl
pop
xchg
xchg
push
pop
xor
pop
lods
mov
fcoms
fnstcw
hlt
cmp
stos
adc
test
cltd
outsl
sbb
adc
fwait
das
push
nop
jne
iret
jle
xchg
xchg
pop
clc
repz
sbb
test
ss
call
mov
cmp
or
push
mov
test
sbb
mov
cmp
inc
and
movsl
and
adc
in
int3
adc
push
cmp
mov
xchg
push
inc
adc
pop
es
repnz
sub
es
inc
lcall
loop
and
fisttpll
mov
aam
es
loope
adcl
add
insl
mov
push
xchg
sub
icebp
sub
inc
cmp
xchg
int
sbb
cmpl
jne
xlat
cmp
andl
cmp
xor
xor
in
add
rorl
aam
mov
jl
fsubs
stos
dec
sub
mov
insb
into
test
add
xchg
insl
movsb
push
stos
popa
sbb
or
arpl
xchg
out
fdivs
push
mov
fdiv
xor
stos
push
sarb
movsl
mov
add
test
pop
mov
xchg
ss
or
or
rcr
lcall
xor
add
sub
pop
dec
mov
xorb
mov
stos
dec
int3
and
dec
xchg
hlt
ja
mov
xchg
push
lcall
in
mov
mov
pop
leave
lret
loop
loop
notl
loopne
cmpsl
jns
out
sub
or
push
jns
mov
leave
or
push
xchg
dec
adc
add
mov
sti
pop
cmc
inc
bound
jge
xchg
std
adc
inc
or
add
in
add
xor
and
mov
fwait
pushl
jnp
mov
sub
jne
pop
loop
jnp
push
push
push
sbb
adc
comiss
arpl
cmp
std
pop
lods
in
aaa
cmc
mov
adc
in
inc
mov
dec
jae
int3
fnsave
push
orb
mov
mov
loopne
aaa
popa
int3
lret
into
mov
and
dec
mov
adc
test
sahf
cmp
dec
outsb
test
push
int
lcall
repnz
sbb
sti
repnz
dec
or
xor
hlt
xor
mov
push
in
dec
and
aam
mov
mov
test
dec
cld
jle
xchg
mov
jmp
rorb
xchg
push
divb
fistl
pop
insl
mov
pop
mov
pop
mov
and
outsb
mov
mov
xchg
popa
lahf
repz
cmp
ficompl
test
or
sbb
push
lret
enter
fcmovb
push
call
lcall
out
scas
jbe
lret
les
lods
and
mov
push
insl
rol
scas
sti
jno
adc
sahf
add
xor
lods
out
cmp
into
inc
or
cld
fwait
inc
test
in
test
xor
jmp
push
dec
outsb
inc
rcrl
push
je
cmc
sbb
cmp
dec
xchg
xchg
push
loope
or
push
insl
dec
lock
fisubs
pop
mov
sti
mov
loop
loopne
int
into
and
pop
and
sbb
popa
adcb
xor
in
mov
xchg
and
mov
out
shrl
int3
in
int
mov
dec
push
je
nop
les
in
push
stos
test
stos
shll
cmc
jbe
or
shl
inc
mov
shl
stos
iret
loope
out
rcll
dec
addr16
ss
adc
inc
std
jl
add
imul
adc
mov
insl
test
in
mov
sti
fsub
bnd
ret
gs
movsb
xchg
outsb
call
lahf
dec
add
scas
cwtl
xchg
push
sbb
inc
cs
cmp
jge
mov
or
pusha
cs
mov
repnz
cmp
sub
jne
mov
repz
and
mov
sbb
sub
sub
adcl
inc
rorb
push
fwait
test
lret
sahf
movsl
mov
mov
cmpsl
add
aas
das
cltd
notb
lret
popf
call
and
pop
movsb
cwtl
popf
insb
fisubrs
jne
sub
xchg
popf
stc
xlat
lods
pop
mov
and
mov
pop
rcrl
cmp
xor
pop
inc
lock
or
inc
test
and
pop
cmp
loope
lock
cmpsb
mov
imulb
test
test
add
loopne
jnp
push
insb
sarl
std
imul
bound
ret
push
mov
mov
test
adc
or
xchg
jg
aam
cmc
movsl
int
fcomps
jno
scas
xchg
fistpl
out
mov
push
in
into
jae
sub
push
mov
pusha
xor
js
out
push
sbb
jno
adc
or
loop
ret
insl
sbb
jp
sub
sub
sub
loop
adc
ret
adc
inc
mov
pop
mov
mov
or
cmp
cmp
vmread
xchg
js
ffreep
out
pop
dec
add
push
cmp
adc
pop
and
sbb
in
ficompl
cli
and
sbb
and
shrl
mov
lret
cmpsb
bound
push
pop
mov
jns
rcrl
cmp
les
and
sbb
xor
loope
addr16
xlat
popf
out
aas
pop
pop
jge
push
push
adc
xchg
jns
lods
sbb
and
stos
inc
pop
adc
push
mov
das
pop
fdivs
mov
mov
sbb
push
xchg
mov
sarl
xor
in
jnp
cwtl
lahf
push
das
push
movsb
sub
or
mov
inc
in
int3
lods
push
and
xchg
mov
fnstenv
mov
push
mulb
call
fisubs
inc
mov
add
jl
stos
xchg
js
push
or
dec
and
or
aam
decl
jno
sub
hlt
jg
std
test
lea
xchg
pusha
and
mov
dec
mul
daa
sub
ret
push
cmp
xlat
jnp
push
into
adc
test
insl
dec
insl
hlt
jle
dec
and
xor
aaa
aam
mov
adc
mov
dec
fnstsw
stos
jno
data16
or
aad
test
lods
mov
mov
insl
jp
sti
push
int
and
push
push
fiadds
dec
inc
outsb
hlt
push
int
adc
sub
sbb
addr16
mov
jmp
stos
jmp
rclb
rolb
ret
mov
or
in
bound
addr16
xor
jp
cmp
mov
mov
mov
dec
icebp
push
mov
stos
and
sbb
lcall
ds
and
icebp
dec
test
movsb
pop
mov
dec
inc
mov
scas
push
add
add
push
into
jb
xabort
imul
rolb
jmp
cmp
sub
insb
xchg
push
movsb
dec
cmp
mov
cltd
mov
aad
inc
fcompl
in
iret
xchg
outsb
cwtl
orl
jmp
cs
fmul
push
jo
out
inc
inc
push
inc
jge
leave
fmull
repz
bound
mov
neg
and
mov
xchg
nop
jg
sub
cmpsb
loop
cmp
push
leave
or
sub
push
or
mov
mov
cmp
push
adc
das
dec
movsb
clc
in
push
sub
push
loope
insb
vmovntps
pop
mov
rclb
inc
in
inc
xorl
pop
adc
mov
sub
cs
sub
mov
xchg
ss
cmp
jl
popf
gs
or
insb
and
fcomps
adc
fcomps
mov
dec
xor
adcb
mov
jnp
addb
inc
or
cmpsb
cmc
addl
inc
test
sarl
mov
xor
lods
push
ror
adc
mov
lea
imul
ss
or
jl
adc
xchg
pop
push
popa
in
pop
out
mov
sbb
int
jg
push
cmp
mov
icebp
inc
cmp
arpl
mov
sbb
stc
xlat
dec
mov
mov
out
jmp
xchg
or
sub
mov
scas
sub
mov
push
repz
repnz
jns
repz
cmp
xor
inc
std
mov
pop
inc
and
mov
adc
je
sar
sbb
cwtl
aam
movsl
adc
sbbl
fstpl
stc
outsb
leave
jns
jecxz
dec
mov
mov
adc
mov
rcrl
mov
mov
pop
lret
sbb
mov
mov
fwait
xor
or
js
xchg
fwait
sahf
rorl
push
xlat
or
int
frstor
jbe
fcompl
je
dec
add
es
scas
out
fdiv
fcomip
jae
addr16
subl
lcall
std
jae
mov
sbb
jne
push
movsb
fidivrl
into
cltd
shlb
cmp
mov
push
sbb
mov
insl
xor
les
xor
adc
ficoml
sub
and
jns
cmpsl
ljmp
fidivrl
or
push
ss
sbb
xchg
imul
rolb
cwtl
aad
ror
mov
xlat
push
incl
inc
pushf
push
mov
lods
push
cmp
pop
dec
jmp
out
and
js
push
stos
hlt
xor
insb
pop
pushf
insb
sbb
xchg
insb
xor
adc
or
push
add
popf
iret
into
adc
out
mov
lret
aaa
jecxz
dec
out
in
in
out
mov
mov
jl
mov
enter
out
out
mov
popf
jae
xchg
dec
xor
sarl
in
xchg
pop
arpl
cmpsl
popa
mov
jns
inc
mov
into
in
scas
cmp
mov
dec
push
aaa
mov
sahf
bound
rcr
imul
mov
push
jmp
mov
push
fdivrs
cli
fs
push
and
repnz
ljmp
add
mov
sbb
int3
or
cmp
fidivs
add
jmp
pop
cwtl
cmpl
jbe
sbb
inc
pusha
or
jp
pop
orb
mov
insb
push
scas
xchg
mov
mov
mov
adc
inc
lock
pop
je
jmp
daa
cmp
push
test
sbb
jg
or
xchg
mov
pushf
movsb
adc
xor
test
xchg
int
aas
adc
popf
ja
jge
mov
sbb
jae
xchg
out
fisttpll
sub
push
ffree
mov
jnp
xchg
lret
pop
das
inc
jmp
pop
pop
cmp
stc
popa
xor
add
mov
gs
adc
adc
xor
pop
mov
in
icebp
stc
cmp
xchg
mov
push
inc
nop
addb
lds
cs
jb
out
sti
inc
and
fldt
les
roll
inc
add
imul
pushf
addr16
push
xchg
xchg
jae
sub
lcall
mov
cwtl
jb
fmuls
ret
sahf
fs
scas
mov
int3
pop
jg
jo
mov
lret
shll
jbe
fwait
sbb
outsl
mov
cmc
test
xchg
mov
and
cmp
mov
jge
subl
call
sarl
aaa
and
hlt
test
jecxz
add
hlt
aam
cli
repnz
push
dec
mov
adc
cli
lods
daa
and
rorb
add
stc
repz
inc
mov
mov
int3
shr
mov
mov
cmpsb
push
sbb
mov
divb
stc
mov
push
loope
pop
jbe
lahf
into
dec
sbb
or
sub
shrl
stos
test
or
std
dec
adc
lcall
inc
rcll
lret
or
aaa
addr16
adcb
inc
inc
cltd
cltd
dec
shll
fs
int3
int3
out
mov
xor
scas
popa
xchg
daa
fiadds
loop
fistps
dec
nop
jo
sbb
popa
xchg
mov
jns
mov
lret
stos
sub
jp
cmc
mov
mov
rcr
adc
push
fstps
mov
add
mov
add
mov
mov
xlat
ss
jo
mov
fs
pop
cmp
xchg
idivb
movsb
dec
mov
insb
rcrl
and
ret
fmull
jmp
inc
clc
insl
dec
push
mov
into
clc
fldt
xor
sbb
popf
xchg
arpl
shl
sbb
andb
or
and
jmp
xor
xor
xchg
data16
jbe
add
pop
es
mov
fwait
xchg
notl
out
fwait
iret
fistps
subl
mov
cltd
pop
out
out
popf
xor
enter
nop
jmp
adc
or
inc
pushf
dec
mov
idivb
jge
lret
xchg
push
inc
dec
fs
mov
enter
xor
adc
std
fsubr
inc
mov
fstl
xchg
mov
stc
ljmp
je
arpl
popf
and
sub
movsb
pop
sub
insb
stos
cmpsl
inc
outsl
adc
inc
sbb
jecxz
sti
ret
inc
out
insl
stc
sub
sub
dec
rorb
imul
and
push
iret
cmp
sub
ret
cli
mov
cld
sub
sub
sub
es
sub
mov
mov
setle
xchg
into
cmp
xor
es
mov
xchg
mov
adc
xorl
mov
rol
cmp
push
insb
clc
inc
pop
sub
mov
and
cmp
cmp
lods
js
sbb
pushf
aaa
add
sub
adc
arpl
cmpsl
adc
addr16
out
sub
cmp
and
sub
imul
data16
pop
mov
push
adc
hlt
push
mov
push
jg
daa
arpl
or
push
fdiv
mov
les
stos
and
cs
nop
into
adc
fistl
stos
cmp
cmpsl
cmpsl
fcoms
or
mov
out
mov
jno
cs
enter
cmp
mov
add
xor
cld
test
pop
pusha
mov
cmp
cli
xchg
xchg
in
mov
pop
xor
rolb
icebp
cmp
mov
shl
aam
outsl
fwait
inc
add
mov
add
mov
sbb
push
mov
push
sarb
lret
cs
or
addr16
and
mov
imul
adc
mov
mov
in
loope
cmpsl
inc
clc
imul
lea
mov
out
sti
mov
test
lods
dec
xchg
hlt
push
lcall
push
add
es
pop
cmovno
jae
sub
cwtl
das
inc
fisubl
test
loop
ss
sub
lcall
adc
cld
sub
mov
sbb
push
mov
jbe
inc
xchg
inc
and
dec
push
fs
adc
rcl
cld
lods
inc
xor
cmp
cmc
stc
outsl
mov
test
fs
fadds
push
stos
jo
dec
jl
inc
fildll
es
push
ret
jne
ret
xchg
xor
test
push
mov
out
ja
dec
scas
xchg
iret
fnstsw
call
cmp
sub
testl
and
in
xor
push
sbb
or
sbb
jae
push
mov
shlb
sub
push
imul
jmp
mov
dec
negb
mov
mov
lds
mov
das
mov
sbb
mov
mov
ljmp
mov
mov
dec
and
cmp
das
push
cmp
lds
and
mov
push
or
mov
xchg
leave
xor
dec
inc
mov
push
cmp
or
inc
lcall
xor
mov
pop
xor
adc
repz
pop
jnp
mov
xlat
fcoms
fs
addr16
mov
and
xor
dec
scas
aam
inc
sbb
sbb
push
inc
mov
mov
dec
jnp
cltd
mov
or
int
iret
xor
pushf
add
pop
js
dec
ss
jmp
dec
adc
sub
pop
pop
mov
inc
mov
aaa
stos
mov
leave
jbe
xchg
sub
and
imul
insl
or
arpl
gs
mov
daa
pop
lea
push
sub
lock
call
ss
in
fists
bswap
cmpsl
shrl
cmp
dec
repnz
jns,pt
scas
push
outsb
out
pop
push
jae
mov
and
das
mov
rcrl
lret
test
int
scas
jo
xchg
sahf
stc
sbb
and
lea
movsl
sbb
mov
sub
add
push
or
inc
pop
cmpsb
or
mov
inc
xor
mov
or
lds
xchg
mov
xchg
ficomps
and
dec
imul
sbb
ret
neg
pop
xchg
fldl
enter
push
and
gs
jge
call
xchg
test
sub
cwtl
imul
lret
enter
pop
test
in
or
popf
sub
icebp
ret
cld
adc
dec
mov
mov
lar
daa
mov
push
sub
call
aad
add
addr16
sbb
mov
mov
nop
inc
push
cmc
aas
addr16
fsubrp
jb
outsl
mov
dec
mov
out
add
push
mov
orb
ret
pop
insb
mov
imul
xor
pop
and
pop
aas
cmp
aam
pop
pop
lds
jne
push
negb
cmpsl
mov
push
inc
out
fstps
mov
lahf
inc
aaa
push
repnz
std
xor
cmpsl
mov
outsl
mov
adc
jmp
mov
ret
mov
data16
loop
fucomip
and
in
xor
loope
mov
out
push
imul
xor
sbb
leave
or
pop
inc
repz
xor
jno
int
cmpsl
push
mov
pop
inc
or
sahf
mulb
jno,pt
cmpsl
or
ja
xchg
mov
add
int
pop
fmul
xchg
mov
mov
xchg
and
sub
ror
mov
decb
mov
xchg
in
int3
sub
and
xchg
dec
pop
repnz
mov
or
mov
aad
push
mov
lahf
and
pop
mov
ja
push
pop
fiadds
mov
inc
cmp
pop
mov
jnp
inc
fcompl
mov
fisubs
or
sahf
inc
ds
enter
cmc
mov
outsb
mov
xlat
pop
cmpsl
push
repnz
call
adc
test
lods
mov
insb
cmp
adcb
pop
cmp
add
push
cmp
mov
data16
pslld
add
or
lds
cmpsl
les
pop
inc
lret
xchg
sub
aaa
dec
outsl
sub
add
mov
and
jg
mov
adc
ret
aaa
add
xor
xor
adc
outsl
in
and
mov
ljmp
jae
dec
mov
xor
fldl2e
arpl
mov
sbb
pop
xor
nop
mov
jmp
mov
add
sub
dec
push
mov
orl
sub
mov
cli
or
pop
fdivl
jecxz
mov
cmpsl
dec
addr16
stos
add
in
out
rcrb
repz
and
inc
jp
sub
and
popa
dec
mov
ljmp
fwait
icebp
adcb
dec
xor
mov
push
fwait
movsl
adc
dec
cmp
popa
lret
mov
mov
pop
loope
and
xchg
loop
mov
pop
lock
addr16
cmc
sub
mov
test
lret
sub
ret
ja
adc
mov
es
mov
sbb
dec
xorl
fwait
lock
sub
mov
mov
mov
out
sub
clc
cmp
cmp
repz
inc
cmp
aad
daa
cmp
cmp
and
and
lods
mov
cmpb
call
mov
jmp
or
out
imul
adc
xchg
lret
popf
xchg
adc
sbb
cwtl
xchg
int
pop
mov
and
xchg
adc
and
test
dec
repz
dec
mov
sbb
push
xlat
stos
cmp
scas
inc
aam
lods
push
jne
jmp
shl
lcall
sub
lret
insl
pop
divb
fwait
imul
dec
daa
clc
addr16
mov
mov
or
inc
inc
pop
lcall
jg
jmp
adc
cltd
add
sub
jl
jbe
clc
mov
scas
cmp
mov
jge
push
lods
inc
sbb
sbb
xlat
sub
pop
hlt
incl
sub
inc
mov
sub
lea
mov
ret
cltd
mov
xchg
jo
ror
bound
sbb
sti
inc
notl
sti
call
testb
mov
leave
xchg
mov
mov
mov
cmp
idivl
dec
dec
pop
mov
cmp
dec
cmpsb
ljmp
into
imul
add
sub
movsb
sub
adc
jecxz
inc
ss
imull
xlat
xchg
mov
add
ret
lahf
loop
js
xchg
inc
fdivp
push
ja
cwtl
cltd
dec
loop
push
je
cld
repnz
sbb
icebp
jmp
js
mov
rcl
and
adc
mov
loopne
add
pop
inc
arpl
add
mov
cmc
pop
cmp
cmp
mov
adc
inc
mov
fs
mov
ret
jg
stos
lock
andl
cltd
ljmp
and
stc
mov
push
loop
enter
cwtl
cmp
pop
cmp
jbe
dec
iret
inc
mov
enter
xor
xchg
inc
lods
jmp
cmpsb
add
cld
inc
sahf
loop
test
cli
xchg
mov
dec
push
sbb
sti
mov
push
add
ja
mov
or
clc
xchg
subl
mov
into
fcom
mov
leave
ret
jo
and
movsl
repnz
or
xchg
roll
push
inc
out
inc
add
rcr
inc
pop
cmp
push
lock
psubsw
sbb
mov
fisttps
pop
cmp
idivl
xor
cmp
mov
aaa
xchg
sub
hlt
jmp
jnp
push
sbb
rcrl
sbbb
rorb
test
xor
mov
pop
sahf
mov
and
sbb
push
lcall
mov
and
aad
popf
mov
or
cmp
mov
shrl
lock
mov
xor
xor
xorl
and
push
rorb
xor
inc
fcmovnu
shl
enter
into
push
pop
scas
push
inc
xor
xchg
dec
aaa
mov
loopne
cmpl
popf
arpl
sbb
sbb
cltd
popf
jb
add
sbb
stc
or
push
xchg
sbb
jno
imul
push
fs
inc
xor
int
inc
or
sub
lods
cmp
push
in
cwtl
lahf
test
jle
jnp
xor
loope
add
lds
dec
cmp
setbe
and
push
adc
fs
fimuls
sub
sbb
fisttpll
inc
fs
cmp
das
ret
mov
cmp
out
jo
mov
adc
xchg
push
flds
es
sbb
ss
xlat
iret
push
sub
pop
mov
cs
bound
add
outsb
into
sbb
pop
cltd
shlb
pop
sti
dec
enter
dec
movsb
mov
rclb
pop
xrelease
sub
and
call
test
iret
pusha
test
js
mov
mov
mov
push
pop
test
adc
dec
adc
pop
xchg
sti
out
ret
jns
arpl
pop
insl
push
jae
dec
and
or
popf
sbb
and
mulb
push
rcll
outsb
loopne
aaa
jmp
jae
les
sbb
push
inc
sub
popl
fcmovbe
mul
testb
cmp
push
push
or
inc
negl
xor
lods
push
pop
add
cmp
mov
int
cmp
mov
out
sbb
pop
mov
into
in
stos
js
insl
out
andl
movb
sub
data16
idivb
in
rcrl
push
dec
xchg
cmp
aaa
inc
lods
add
adc
or
push
mov
call
lahf
adc
add
popf
sbb
insb
data16
sti
cmp
mov
stos
inc
push
adc
sub
lock
sub
adc
inc
pop
adc
ja,pt
xchg
nop
orl
scas
aas
cmpsl
sbb
popa
jo
aas
rorb
lcall
enter
sub
out
jo
jmp
jle
mov
sub
out
neg
cwtl
scas
call
enter
cmc
shll
lahf
inc
arpl
mov
lcall
aad
icebp
aad
xchg
addr16
test
and
clc
call
pushf
into
pcmpgtd
fisubs
mov
mov
call
xchg
in
xchg
aaa
clc
clc
mov
pop
dec
xchg
ss
mov
stos
jns
add
ja
dec
adc
and
cmp
pop
int3
sbb
xor
out
xchg
inc
mov
sti
outsb
iret
push
xor
dec
xor
testl
jge
inc
cmp
cmpsl
or
adc
insb
dec
xor
icebp
jo
cmp
xchg
sub
popa
jl
add
mov
movsb
inc
cltd
int3
and
adc
jmp
adc
mov
outsb
xor
call
aad
dec
cmp
dec
jno
push
adc
dec
ret
mov
pop
xchg
xchg
pusha
mov
sti
fdivrs
sbb
add
mov
mov
fisubrl
sbb
adcb
xor
repz
or
push
out
lcall
loop
loopne
adc
nop
xor
ljmp
sbb
scas
shlb
xchg
cmc
cmpsl
sbb
je
ss
inc
pop
mov
cmpsl
add
xchg
dec
add
pop
arpl
popa
popa
in
jmp
ja
loop
lcall
push
outsl
adc
outsb
mov
roll
mov
es
insb
fiaddl
stos
lods
jmp
jle
insl
xchg
add
inc
mov
sub
lcall
ds
test
lds
out
in
fisttps
inc
xor
xor
lock
loope
pop
add
les
pop
data16
loop
andl
or
das
test
or
sbb
in
or
out
sub
xchg
pop
pop
pop
jl
stos
jl
cmp
cmp
call
into
lret
cmc
mov
rcl
lods
and
pop
pop
cmpsb
rclb
daa
push
adcl
sbb
push
loop
push
or
daa
test
jge
je
in
and
push
sub
or
insb
dec
dec
testl
add
push
insb
adc
jge
push
xor
dec
add
test
pop
into
cmp
pop
testl
sub
cld
mov
mov
test
lods
es
repnz
rcll
sbb
and
sub
cmp
test
add
sbb
push
push
fidivs
sti
cwtl
loope
iret
mov
mov
dec
push
xchg
sub
dec
push
or
and
xchg
xor
or
add
or
aas
sbb
arpl
roll
mov
pop
mov
notl
push
mov
lahf
pusha
add
bnd
jns
xor
jne
int
pusha
sti
fdivs
iret
mov
lods
js
test
mov
xchg
adc
mov
fwait
cmpsb
imul
rolb
clc
dec
cmp
mov
pop
movlps
xorl
std
jecxz
stc
insl
insl
push
push
mov
rcl
jmp
clc
jle
lret
and
push
outsb
ds
ljmp
mov
mov
std
popf
test
jp
xor
ficompl
xor
pop
out
mov
dec
pop
adc
fisttpl
clc
fstpl
ja
stos
stos
and
dec
mov
repnz
xchg
dec
jb
mov
add
jno
shll
dec
add
add
lods
jmp
fisubrl
adc
mov
and
pusha
movsb
jle
cli
mov
mov
mov
ss
xchg
mov
test
repnz
pop
or
and
xchg
pop
imul
xchg
mov
cltd
inc
cli
mov
push
mov
xor
or
aad
enter
or
dec
pop
xchg
imul
pusha
in
jmp
xorb
roll
mov
je
int
cmp
mov
gs
jecxz
inc
shrd
arpl
cmp
add
or
and
lcall
je
inc
jmp
aad
and
pop
ja
mov
fisubs
out
jmp
add
fnstcw
test
out
jbe
sbb
and
cld
rcr
stos
mov
gs
bound
pop
or
out
loopne
xor
outsl
push
xor
fisttpll
stc
mov
mov
and
push
mov
nop
inc
out
adc
mov
or
test
add
test
adc
cmp
mov
add
lods
enter
jmp
dec
fs
mov
pushf
lahf
cmp
sbb
adc
adc
pop
ljmp
int
popf
sub
out
inc
enter
push
std
cmc
dec
mov
sbb
cmp
es
mov
adc
dec
jnp
add
popa
mov
push
sti
or
mov
jle
xchg
adc
pop
dec
xor
xchg
or
in
sbb
in
dec
adc
dec
outsl
pop
sti
sahf
pop
cmp
adc
fildll
lods
int3
mov
cmc
pop
iret
fwait
push
push
cmp
jl
mov
mov
push
adc
mov
cmpb
pop
mov
mov
adc
gs
clc
mov
hlt
push
dec
cmp
stos
inc
imul
push
cmp
ljmp
mov
bound
ret
iret
clc
and
mov
std
addr16
dec
mull
movsl
pop
and
out
add
clc
or
mov
add
or
shl
jg
mov
mov
mov
jns
add
mov
jae
jns
jl
dec
insb
sbb
mov
ficomps
pusha
aam
gs
jno
addr16
jmp
xchg
aam
stc
rcr
xor
repnz
and
popa
mov
sub
les
push
roll
jmp
sbb
dec
xchg
sbb
repnz
inc
dec
outsl
fsts
fadd
jno
repnz
xor
enter
and
mov
mov
add
mov
sbb
test
enter
xchg
add
mov
movsl
lahf
jb
cmp
add
out
or
dec
push
sub
cld
sahf
jp
add
inc
daa
repz
scas
das
xchg
loop
cltd
lret
inc
fistpl
test
test
icebp
cmpsl
and
ret
inc
in
fs
jbe
jle
pop
into
test
aas
out
shlb
mov
lods
sub
sbb
pop
push
bound
jge
inc
dec
inc
nop
sbb
or
stos
enter
loope
sbb
mov
mov
xchg
aam
pop
dec
jmp
and
ja
dec
in
sbb
jno
jns
idivl
push
push
jo
jno
in
xlat
xchg
xchg
popf
lahf
fwait
and
popa
sbb
xchg
ret
mov
aad
push
es
and
inc
cli
aam
shl
jle
scas
loopne
movsb
xlat
dec
and
xchg
pop
jns
push
repz
sbb
xchg
je
adc
lea
mov
mov
xor
inc
xor
jns
dec
push
xchg
push
adc
ffreep
sbb
int3
lock
push
fidivl
les
sub
sub
xorb
mov
push
push
xchg
and
mov
mov
ljmp
aas
enter
push
movsl
std
adc
stc
and
inc
pop
gs
dec
jle
and
push
bound
adc
adc
mov
push
and
outsb
movsl
lret
shll
cmpsb
test
sbb
mov
out
shrl
ljmp
jg
rcll
sti
and
lret
std
jno
or
and
mov
pop
je
fcomps
insl
and
in
xor
movb
lods
adc
stos
xchg
aaa
test
pusha
daa
push
push
inc
or
in
cmp
idivb
adc
pop
dec
rorl
ljmp
or
scas
imul
ljmp
ret
xor
mov
sarb
mov
add
loopne
cmc
dec
dec
dec
jp
mov
push
mov
mov
jmp
adc
pop
push
in
adc
mov
cmp
sarl
arpl
xor
out
adc
xchg
jecxz
mov
clc
pop
rol
les
xchg
or
and
xor
roll
jge
dec
insb
jmp
enter
cwtl
inc
out
push
dec
mov
xchg
and
push
inc
lds
pop
test
add
or
adc
dec
dec
mov
aad
adc
pop
sbb
and
mov
incb
or
test
inc
dec
sysret
ret
mov
mov
inc
leave
cmp
pop
push
cmpsl
or
aad
in
mov
jg
movsb
je
xchg
push
xchg
imul
popa
sub
cltd
aam
xchg
ja
inc
mov
and
dec
addr16
dec
mov
mov
dec
pop
addb
adcb
xlat
test
pop
cmp
push
outsb
xchg
out
pop
or
ja
adc
rolb
xchg
xchg
cltd
insb
mov
es
in
cmp
and
sub
shl
sbb
je
push
push
mov
int
jecxz
push
mov
push
fldt
lret
adc
lods
sub
lret
push
fstp
inc
adc
out
call
dec
pop
cs
fldenv
adc
xor
mov
dec
movsb
add
cmp
mov
lret
mov
fdivrs
add
cmp
fs
inc
push
aaa
cmp
cs
xchg
cmp
push
lret
mov
std
mov
int3
fcompl
pushf
pop
mov
xor
bound
das
dec
fwait
push
in
sahf
adc
mov
push
dec
mov
lods
sti
push
push
scas
shlb
push
or
mov
out
fistps
jno
pushf
pop
out
ret
cli
cs
das
push
xchg
cmp
fnstsw
fsubr
dec
add
sbb
xchg
xor
or
pop
arpl
out
jae
fwait
adc
mov
dec
jnp
in
mov
push
adcb
imul
pop
sub
sub
xchg
jns
cmc
sub
mov
fwait
jbe
call
loope
inc
popa
add
mov
xor
out
dec
or
jecxz
adc
mov
ds
xor
sti
scas
lea
sahf
sbb
out
in
push
sub
jge
adc
pop
imul
out
fistps
aad
bound
jb
xlat
lock
and
pop
pop
lea
fldln2
xlat
ficoml
addr16
pop
out
add
push
cld
xchg
enter
push
out
or
add
rorl
jle
addr16
lret
or
jns
popa
jo
flds
dec
or
into
movsl
rclw
imul
mov
ljmp
or
imul
mov
mov
iret
test
mov
mov
fcompl
fidivrl
lret
std
roll
cmp
sbb
mov
xchg
jns
add
mov
mov
clc
es
mov
mov
sbb
shrl
mov
inc
pop
dec
scas
leave
xchg
mov
and
scas
addr16
negl
js
adc
cmp
push
jg
repz
pop
int3
jle
push
dec
add
insb
loop
inc
xorb
cmc
popf
jns
bound
mov
jne
add
xor
xor
sti
iret
aam
sbb
inc
push
fs
mov
setne
nop
dec
sti
mov
pop
add
mov
jge
fdivl
jnp
sbb
loope
or
push
pop
pop
mov
mov
mov
adc
mov
xchg
nop
jne
out
leave
pop
sub
add
repnz
jg
cmp
lea
adc
popa
mov
jne
add
mov
ss
sub
aad
cmp
cmpl
mov
pop
add
sarb
stos
xor
fdivr
adc
cld
dec
sub
inc
pop
pop
xchg
pop
jge
inc
sti
adc
imul
aad
cltd
insb
aam
pop
mov
xor
lret
inc
dec
push
push
call
in
in
les
xlat
jae
pop
sub
lds
push
lcall
push
mov
lcall
loope
popf
and
lret
or
xor
lds
or
loop
mov
jne
decb
jno
dec
mov
push
xchg
xchg
data16
adc
cmpsb
xchg
cld
movsb
cwtl
push
cmc
push
xlat
fdivrl
repnz
hlt
cld
pusha
sbb
fisttpl
stc
psrad
push
stos
enter
cmp
fiadds
movsb
mov
cmpsl
jne
pop
jb
inc
aad
in
cwtl
pop
adc
sub
push
jns
mov
add
inc
stos
loope
rorb
dec
hlt
jecxz
jg
jns
cmp
ret
mov
add
out
aad
jns
movsb
sub
xchg
in
aam
pop
lcall
mov
inc
dec
pop
ret
movsl
enter
xchg
lock
cmp
lcall
mov
dec
xchg
insb
dec
mov
xor
mov
pop
xor
sti
dec
pop
pop
adc
and
push
sub
adc
dec
jg
jbe
push
out
adc
jg
int
insl
sahf
mov
not
jg
int3
jne
gs
or
xchg
addr16
shll
jl
je
addr16
mov
mov
inc
jb
pushf
and
dec
mov
dec
xor
push
add
mov
xor
add
cmpsl
ds
dec
movsb
xchg
inc
dec
repnz
push
hlt
dec
into
mov
or
adc
mov
aam
push
push
les
cmpsl
cwtl
mov
call
pop
sbb
mov
cld
fnsave
mov
and
jb
fucomip
test
cltd
out
nop
popa
mov
sbb
negl
gs
lcall
push
push
mov
cmp
sub
mov
add
xor
dec
out
lock
inc
cwtl
std
insb
add
xor
mov
mov
repnz
lds
jg
imul
and
aas
out
mov
repnz
cmpsb
repnz
rorw
pop
inc
mov
rcrl
ljmp
sti
lods
mov
jecxz
sti
mov
out
test
or
pop
add
ret
fildl
popf
add
sbb
adc
aas
push
inc
lcall
negb
out
mov
xchg
dec
addr16
xchg
sub
adc
clc
adc
push
pop
int3
out
test
inc
mov
and
push
ficompl
dec
xor
mov
jns
lock
rorl
jo
lea
cld
scas
sbb
int
ljmp
sbb
adc
andl
cmpsb
mov
aad
xor
xor
pushf
pop
adc
sub
js
jecxz
test
lahf
dec
fcmovnu
add
xor
and
or
in
mov
aam
jo
sub
data16
cmp
add
fistpl
std
mov
repnz
ret
test
add
xor
mov
xor
xchg
test
cmp
nop
notl
inc
stos
sub
sub
or
xor
mov
cmp
xchg
dec
gs
ja
ret
mov
ret
xchg
pushf
xchg
inc
out
cmc
in
sub
push
mov
loopne
mov
popf
pop
and
stos
fcmovnbe
loopne
daa
pop
loope
repnz
clc
jbe
bound
sbb
xchg
frstor
iret
mov
mov
lcall
mov
popl
pop
fcompp
jl
jno
js
inc
out
push
lds
dec
sub
subl
outsb
pop
imul
push
dec
add
andb
xchg
inc
shrb
xor
adcl
repnz
andb
sbb
inc
or
jno
add
popa
cmp
mov
jns
or
lock
lods
rep
lcall
gs
pop
repnz
rcl
push
push
clc
lods
mov
lock
in
dec
sbb
inc
or
into
enter
sbb
cmpsb
in
cmc
jo
sub
sti
mov
and
xchg
lea
adc
out
mov
xchg
in
and
lock
mov
roll
loop
rep
test
mov
push
aam
adc
dec
push
scas
imull
sbb
cmp
lahf
mov
aad
rorb
ret
push
inc
mov
je
nop
cmp
rcl
xchg
out
leave
scas
pop
mov
inc
cmpl
mov
inc
sahf
xor
sbb
mov
adc
outsl
lret
scas
jb
adc
mov
lahf
outsb
out
xchg
cmpsl
mov
std
je
icebp
mov
in
ret
nop
xchg
lds
lcall
cld
add
aaa
push
or
xchg
loopne
cld
xchg
adc
nop
fwait
cltd
shlb
lahf
sahf
xchg
addr16
jnp
sti
mov
out
repnz
daa
aas
in
arpl
rorl
xlat
fs
cmp
das
adc
inc
xor
test
lock
in
and
std
xorl
dec
mov
arpl
dec
and
mov
das
stos
inc
fcoml
pop
pop
mov
lods
sub
leave
adc
lods
mov
shll
sub
jmp
arpl
cmpb
mov
dec
fsubrp
lahf
jle
in
xchg
and
push
xor
and
nop
xchg
popa
xchg
xchg
pop
xor
xor
mov
testb
dec
loopne
imulb
xor
aas
mov
and
popa
dec
data16
decl
jns
dec
icebp
sub
in
dec
lret
adc
and
shrl
mov
cld
call
cmp
pop
iret
dec
lea
add
push
cmpps
push
pop
adcl
out
je
fs
cmp
add
clc
xchg
add
lahf
jbe
les
push
xchg
stc
inc
stc
lock
or
ret
jg
cwtl
mov
mov
lahf
jb
in
jg
cmp
mov
dec
fwait
sub
and
xlat
add
sahf
out
enter
adc
adc
or
push
jg
add
popa
jb
sbb
mov
sub
xor
adc
push
fidivl
fcmovnbe
in
ss
fdiv
cltd
into
clc
js
cld
stos
sbb
jg
push
mov
dec
push
popf
mov
shll
das
mov
or
outsb
fisttpll
dec
mov
andl
inc
aaa
pusha
or
and
mov
or
test
addr16
scas
inc
xchg
cmp
ja
addr16
mov
add
pop
stos
jo
mov
mov
loop
and
mov
sub
js
xor
fsts
out
or
lahf
or
sub
test
sbb
mov
mov
jnp
je
lea
fsubrp
rcll
cmpl
jmp
mov
mov
imul
mov
fldlg2
lods
mov
out
inc
xorb
fwait
pop
jge
test
mov
xor
push
fmuls
ds
and
inc
mov
cmp
push
inc
stos
insl
pop
test
repz
pop
mov
jnp
pop
jmp
pop
push
notb
scas
aam
xor
adc
mov
sbb
test
fsubrp
das
xchg
clc
rcr
xor
lea
sub
mov
push
jo
inc
xor
popa
js
cmpsb
js
movl
add
cmp
andl
mov
mov
sahf
jb
mov
insl
inc
lret
das
sbb
addb
cmp
fmuls
mov
std
jmp
ret
aaa
or
xchg
popf
inc
ffreep
outsb
test
sbb
cld
push
add
fs
daa
testl
imul
out
xchg
pop
test
outsl
mov
aam
xchg
addl
adc
xorl
fcomps
pop
dec
aam
aam
push
and
push
lods
stc
loop
dec
pop
dec
or
ret
inc
cmp
fisubl
into
pusha
dec
mov
pop
xchg
dec
add
addb
filds
sbb
test
daa
add
jo
pop
xor
sbb
loope
addr16
lock
inc
loope
xchg
inc
js
jl
add
subl
rcrl
ljmp
xchg
insl
push
addr16
mov
pop
sub
aam
fwait
stos
adc
sahf
jle
add
es
pop
inc
sbb
add
mov
cmpsl
imul
push
je
add
js
arpl
add
sub
iret
mov
lods
pusha
shrb
sub
lods
xchg
scas
jle
mov
call
outsb
jmp
sub
mov
sub
pusha
cltd
dec
jae
sub
mov
fidivrs
out
sub
pop
fcom
out
cwtl
adc
cwtl
pushf
ret
out
sub
int
or
sbb
xchg
push
cltd
out
or
outsl
sahf
mov
shrb
test
imul
test
nop
push
dec
or
js
dec
clc
loopew
push
adc
mov
aas
inc
jmp
mov
xchg
jle
mov
mov
test
loop
aam
aam
gs
testl
inc
ja
cmpl
lods
and
nop
xor
add
clc
aad
lds
push
pop
lret
mov
and
loopne
jnp
xor
mov
es
stos
ss
test
mov
jg
in
jle
push
filds
inc
or
pushf
aas
jo
out
test
les
mov
lods
outsl
cmp
fwait
int3
and
mov
and
repz
addr16
mov
aad
sbb
sbb
in
or
rolb
dec
js
and
cmpsb
mov
leave
pop
add
dec
cs
dec
rcrl
pusha
lcall
adc
aad
shll
mov
mov
int
push
std
insl
addl
jbe
push
jb
out
xor
mov
fs
popa
aaa
dec
sub
orl
inc
inc
mov
sahf
mov
shlb
dec
fadds
sarl
sub
loopne
ss
faddp
push
stc
data16
push
push
test
and
mov
push
adc
addr16
insl
clc
outsb
lock
incb
rclb
xchg
test
mov
clc
lods
cmp
roll
sbb
ucomiss
div
and
pop
movsb
insl
adc
push
mov
cmp
idivb
in
in
sbbb
dec
and
repz
cmc
or
bound
cmp
lea
mov
pop
mov
push
sub
mov
add
or
stos
into
movsl
cmp
fdivrs
mov
movsb
xchg
scas
pop
in
aaa
jnp
repnz
mov
repnz
mov
dec
add
push
push
cwtl
fidivl
push
addr16
gs
gs
cltd
adc
dec
sub
mov
sub
std
rorb
test
dec
xor
dec
or
xorl
mov
out
lock
mov
add
push
ljmp
outsl
ret
dec
mov
jg,pt
adc
repz
adc
pusha
daa
popa
and
mov
ret
jns
addr16
adc
jecxz
ljmp
or
hlt
punpckldq
xchg
pop
jae
xor
gs
stos
inc
dec
mov
dec
push
pop
push
mov
out
outsl
shrb
push
cld
inc
sbb
in
add
lods
mov
pop
pop
ret
xchg
and
fdivs
jge
daa
js
pop
adc
loope
cli
out
cmpsl
mov
lret
sub
xchg
mov
or
xchg
stos
adc
scas
stc
pop
mov
cmp
jg
jb
stos
cmpb
mov
push
stos
inc
into
mov
jg
jl
aaa
aam
pop
jp
mov
sar
adc
push
push
pop
xchg
mov
push
repz
and
add
cs
cwtl
cwtl
lret
addr16
jae
cmp
sbb
mov
stc
sub
cmc
test
mov
mov
or
cmp
add
xchg
dec
xchg
cmc
add
cwtl
sahf
xchg
sbb
mov
movsb
in
xor
idivb
lcall
enter
lds
in
sbb
fisubrs
push
test
and
or
out
xor
nop
pop
mov
in
dec
pop
repnz
ljmp
in
test
ret
sbb
lahf
xor
xchg
in
pop
inc
dec
mov
mov
cltd
xchg
dec
jae
int
xchg
popf
mov
mov
xor
pop
out
adc
mov
or
dec
or
cs
jge
fldz
or
push
addr16
cmpsb
insb
fildl
mov
leave
sub
fcomip
sbb
lods
shrb
adc
mov
xchg
cli
sbb
test
mov
and
rorb
pop
aas
test
xchg
and
outsl
dec
outsb
loope
out
leave
fcoml
sbb
dec
push
in
mov
push
mov
inc
lcall
sbb
jle
out
aas
mov
xor
loop
gs
cwtl
je
aad
es
mov
push
aas
add
add
and
in
mov
add
in
pxor
test
lcall
loopne
ret
fidivrs
ret
aaa
mov
dec
out
pop
adc
mov
sub
nop
je
xor
xchg
iret
sbb
mov
cmp
aaa
sub
roll
and
in
pop
test
push
mov
aas
jns
ret
ja
out
add
movl
adc
cli
adc
in
xchg
les
sub
into
pop
mov
xor
out
lahf
imull
repz
ja
dec
sbb
das
js
xchg
je
xchg
shrb
mov
in
sti
or
loope
fisttpll
imul
mov
or
cmp
jg
movsb
mov
pushf
fcmovb
lea
js
push
or
mov
lret
push
cltd
xchg
sbb
scas
push
add
inc
out
sub
imull
add
or
adc
faddp
inc
cmp
pop
xchg
pop
shrl
in
jne
xchg
into
mov
imull
sub
dec
mov
fstpl
andl
clc
in
add
dec
icebp
or
push
push
repnz
adc
gs
jne
shr
xor
daa
xchg
pop
mov
inc
shll
mov
and
jo
cmp
lcall
push
xor
out
inc
enter
push
push
xchg
jecxz
xchg
int3
mov
js
std
add
lcall
adc
aam
pop
outsl
and
xchg
push
mov
xor
out
in
clc
sti
es
inc
ret
and
or
mov
sub
push
subl
adc
movsb
lods
fldcw
inc
and
jne
clc
sbb
and
sub
in
cwtl
pop
mov
pop
mov
sti
int
fstp
test
and
dec
cltd
cmp
incb
les
jmp
cmp
nop
gs
lods
inc
in
add
paddsw
int
loope
xchg
sub
cwtl
or
jns
into
aad
jnp
pop
cltd
jge
std
mov
rol
dec
fwait
mov
sarl
cwtl
or
sub
push
push
aas
xor
sub
mov
stos
xchg
dec
dec
test
lock
in
mov
fsubl
push
ret
int3
xor
adc
pusha
stos
ds
and
jno
das
sub
enter
in
add
jl,pt
cs
or
mov
cmp
mov
sahf
cli
popf
add
xlat
outsb
enter
dec
iret
mov
cltd
icebp
outsl
pop
inc
xor
popf
push
stc
xor
fildl
fcmovnbe
loop
orb
xchg
fisubl
adc
sbb
xor
popa
call
cmp
mov
aad
push
mov
add
scas
orb
jne
cmp
arpl
outsl
dec
pop
out
into
mov
xchg
ss
mov
cmpsl
pop
rcl
sbb
fnstenv
gs
xchg
pop
enter
int3
pop
mov
sub
cmp
pop
addr16
pop
fdivr
inc
jns
and
mov
mov
js
jmp
mov
stc
push
xchg
es
or
inc
cmc
cmpl
cld
xchg
test
ss
dec
add
cli
mov
cmp
xor
test
loop
cmp
inc
lret
ja
add
fisubs
filds
cmpsb
push
nop
pop
sub
dec
sub
jae
sub
popf
lret
pop
mov
xlat
inc
adc
xchg
cmp
rcl
push
jno
arpl
aad
pop
inc
scas
jb
xchg
fmuls
inc
test
add
lock
mov
or
push
xor
add
shl
sahf
cmp
add
fmull
push
adc
je
xchg
dec
push
mov
dec
test
xlat
arpl
fstps
int3
mov
fcomi
or
or
in
xor
inc
xchg
sub
ss
aam
js
sbb
icebp
cltd
in
in
fstpl
out
push
sub
stos
adc
add
dec
cmpsl
pop
iret
movsl
ja
dec
js
lret
mov
stos
push
jmp
lret
mov
xlat
mov
jbe
add
outsb
pop
push
enter
sub
adc
mov
lahf
adcl
inc
mov
fstl
xor
leave
pop
adc
scas
mov
movntq
sub
mov
mov
adc
in
jmp
dec
int3
inc
mov
repnz
dec
ljmp
lds
int3
jp
and
and
inc
hlt
scas
js
adc
add
cld
adc
lret
mov
mov
and
out
inc
pop
movsb
dec
decb
mov
add
in
aas
outsb
fs
pop
and
mov
push
mov
dec
mov
pusha
add
add
sbb
adc
and
in
int
ficoml
loop
adc
loop
xor
mov
jns
jp
es
push
jge
hlt
fdivl
mov
inc
push
out
mov
sarl
xchg
leave
xor
iret
out
pop
mov
insb
inc
fwait
je
mov
inc
lahf
mov
aad
outsb
dec
cmp
in
xor
dec
in
rep
mov
jns
insl
stc
sub
clc
jb
mov
cmp
fwait
xor
inc
sbb
rcll
lea
rclb
data16
cli
les
ljmp
inc
jne
add
int3
cmp
into
adc
iret
xor
dec
icebp
mov
imul
mov
add
dec
std
mov
and
xor
xchg
je
sub
jl
dec
and
xchg
int
jno
cmp
loopne
rcrl
xchg
jg
jns
iret
cwtl
or
jae
test
jb
pop
rcrl
mov
aas
lods
loop
lret
movb
add
push
dec
mov
lret
cwtl
sbb
inc
add
dec
jle
in
jmp
movsl
jge
mov
shr
mov
xchg
fnsave
push
popl
cmpsb
stos
lret
movsl
arpl
xchg
jnp
mov
test
mov
mov
flds
ljmp
xchg
loop
sti
jge
pop
xor
mov
and
into
out
mov
shll
stos
adc
xor
movsl
aam
inc
push
push
mov
fcoml
outsl
push
or
jb
lds
or
mov
mov
mov
clc
jp
movsl
outsl
mov
push
jb
cmp
sub
loopne
lcall
dec
repz
cmp
add
mov
insl
pop
cmpsl
scas
jle
mov
mov
sub
daa
cmp
sub
dec
bndstx
xchg
ret
push
inc
push
pop
sub
insl
test
testb
add
pop
add
out
pop
sub
cmp
loopne
cli
ja
mov
stc
shl
sub
xchg
mov
jo
mov
pop
mov
ljmp
hlt
jmp
or
ds
xor
fnstsw
mov
and
pop
sub
ss
lcall
test
sub
aas
leave
pop
xchg
sbb
mov
imul
fnstsw
pop
js
hlt
nop
mov
inc
mov
add
xlat
mulb
xchg
jg
shr
and
test
adc
iret
popf
addr16
mov
dec
pop
enter
add
nop
add
inc
push
jl
xor
leave
popa
push
xchg
into
mov
ja
cmp
lret
lret
sbb
addr16
push
mov
inc
push
bound
stc
test
or
sub
in
mov
cld
stc
adcl
adc
xor
rorl
pop
mov
ds
push
adc
mov
leave
push
fcoml
pop
or
outsb
xchg
add
push
mov
mov
add
stc
cmp
daa
push
repz
or
push
clc
roll
sub
jns
adc
sub
pop
sbb
cmp
inc
movsl
xchg
mov
or
shll
mov
or
pop
mov
adc
cmc
adc
ret
sete
xor
es
das
fs
add
into
imul
shlb
stos
pop
add
insb
mov
adc
cmp
mov
shlb
cmc
loope
fmul
fmulp
fdivrl
rcll
fwait
leave
push
pop
add
cmp
cmpsb
adc
sbb
jg
icebp
dec
ss
push
mov
fadds
nop
adc
add
pop
stos
or
mov
out
mov
jns
pop
hlt
addr16
rol
out
adc
push
inc
stos
orl
lods
testl
mov
leave
fadd
and
mov
xchg
or
push
lock
push
mov
fldl
cmp
xchg
push
dec
mov
xchg
jmp
out
or
sbb
push
cmp
inc
fisttpl
cmp
mov
dec
fcomip
push
into
ja
popl
rcrb
repnz
fldt
inc
or
scas
cmp
sbb
outsl
aas
add
dec
jnp
or
push
arpl
cmp
adc
cmp
call
fnstcw
aaa
movsb
ret
test
loopne
arpl
adc
xor
inc
inc
ret
lahf
call
dec
sbb
aam
clc
xor
stos
sti
testb
xlat
clc
sti
sub
scas
xlat
orb
xchg
xorb
add
pop
imul
mov
popa
inc
sbb
idivl
mov
mov
test
jmp
dec
adc
push
pop
cli
das
and
mov
cs
movsl
jne
pop
mov
arpl
pop
xchg
cmp
lods
in
test
inc
stos
adc
add
push
mov
push
cli
outsb
jge
pop
std
ret
hlt
adc
and
adc
mov
int
fsubrs
fdivs
xchg
pop
jbe
mov
mov
jge
jmp
pop
add
xchg
xchg
push
mov
call
mov
cli
pusha
ds
mov
cmp
xchg
cmpsl
sbb
pop
stos
lret
iret
jb
aam
mov
cmp
add
mov
ret
out
stos
adc
arpl
fbstp
incl
adc
jno
pop
pop
call
sbb
fdivl
loopne
sub
mov
sub
into
andl
lods
xor
add
lret
repz
adc
or
mov
fs
fisubl
mov
cmp
cmp
int
enter
sbb
out
pop
xlat
pusha
inc
pop
mov
jae
incl
sub
mov
push
jae
lret
insl
push
cld
insl
pop
or
into
cmc
stc
movsl
loope
add
inc
out
test
and
jmp
repnz
gs
loope
cmp
cwtl
aad
call
mov
iret
es
stos
cmc
jl
lock
jge
insl
sar
cmc
dec
mov
jmp
ljmp
xor
ss
iret
pushf
pop
fcom
jmp
out
bound
rcll
mov
movsl
mov
test
rcrb
push
pop
or
fdivp
mulb
mov
imul
mov
in
pop
nop
and
into
mov
lret
pop
ss
mov
pop
fwait
cwtl
in
jae
push
mov
stc
sbb
and
ds
sub
gs
cld
xchg
xchg
inc
data16
cltd
dec
fs
cwtl
inc
push
mov
hlt
mov
leave
mov
dec
jne
testl
imul
fisttpl
nop
cmp
cmp
or
lock
and
inc
pop
stos
das
mov
mov
pop
mov
into
iret
fadds
cmp
mov
inc
or
dec
mov
sbb
scas
mov
sbb
insb
sbb
pop
mov
jecxz
push
es
mov
adc
lods
mov
nop
or
in
xchg
lret
cmp
mov
test
push
mov
lock
in
ficompl
or
sbb
mov
xchg
cwtl
mov
mov
mov
jge
cmc
leave
mov
in
loopne
lahf
ljmp
pop
xor
cld
loopne
movsl
pop
ljmp
sub
jg
pop
je
shrl
icebp
cld
out
ret
andb
jmp
mov
out
std
decb
std
lock
iret
pop
popa
insl
cvtps2pi
mov
push
daa
lds
repz
shlb
dec
mov
fs
shrb
cmp
in
cmp
jl
insl
cmpsb
xlat
cltd
fs
cmp
xor
pop
push
imul
sti
mov
xor
xchg
lret
aam
fnstenv
sqrtps
mov
add
jae
xchg
sbb
xchg
mov
test
test
cmp
add
test
pop
inc
aam
adc
sbb
enter
pop
loopne
clc
inc
fnsave
mov
leave
ds
and
cli
or
cs
sbb
pop
mov
xlat
mov
mov
or
or
dec
insl
scas
pop
pop
lret
dec
jge
sahf
sbb
mov
push
pop
arpl
mov
xchg
nop
adc
gs
sub
nop
psrlw
lods
adc
xor
add
aam
ljmp
push
xchg
inc
xor
or
rcrl
mov
int3
xor
stos
inc
out
shll
sbb
ror
add
dec
cltd
sahf
loopne
in
clc
sub
jnp
clc
fldt
mov
movsb
data16
pop
xor
sbb
push
subb
mov
or
stc
mov
shrl
sbb
push
add
sarb
mov
mov
insl
push
div
std
cmc
popa
into
dec
sbb
and
repz
fldenv
cmpsb
sbb
test
sbb
sub
lods
int
mov
and
push
popa
ds
xor
push
out
or
movsb
xor
dec
or
enter
mov
lea
inc
leave
inc
add
or
leave
repnz
sub
pop
jle
push
mov
inc
pop
loope
aam
pop
push
xchg
cmp
xchg
divps
dec
jne
es
cmpsl
idivb
push
pop
stc
lods
fwait
xchg
mov
outsb
dec
sub
in
jno
and
mov
sahf
negl
rcrb
icebp
fwait
shl
mov
inc
mov
test
add
jnp
pushl
out
testl
test
jp
jge
movsb
add
or
icebp
jmp
stos
and
jecxz
mov
mov
mov
adc
push
xchg
fstps
scas
das
iret
xlat
ret
lock
sti
pop
adc
sub
push
shrl
adc
add
add
iret
icebp
mov
and
shrl
pop
inc
out
in
test
out
add
adc
xchg
add
dec
adc
dec
mov
popf
mov
enter
jg
jae
adc
jnp
ja
stos
test
out
add
outsb
fiadds
mov
ret
int3
jno
adc
cmp
mov
aaa
pop
nop
lret
jbe
inc
icebp
test
xchg
fdivl
cmc
jb
out
fsubrs
mov
push
add
fstl
mov
push
jb
mov
ljmp
lret
mov
stc
int3
xchg
sub
xlat
shrb
xlat
popa
cmp
sbb
push
shrb
popf
pushf
inc
pushf
popa
inc
mov
addr16
imul
jecxz
shll
cs
fsubl
mov
cmp
out
ja
pop
xchg
sub
or
jmp
or
jb
iret
jmp
lcall
out
xchg
and
sahf
rorb
test
adc
mov
out
cld
insb
xchg
inc
movsb
pop
and
int
hlt
subl
mov
stos
and
push
dec
pop
jp
clc
in
testb
lret
inc
fnstenv
movsb
aam
cmp
dec
lods
xor
call
lcall
lods
movsb
cmp
lret
lods
xlat
xor
cwtl
and
dec
notb
stc
addb
dec
jnp,pn
jmp
ret
aad
scas
sbb
mull
xchg
sbb
sub
sbb
inc
movsl
and
jbe
jno
mov
sbb
bswap
arpl
sub
rcll
idiv
insl
aas
shll
xor
ret
mov
xchg
leave
enter
lock
je
mov
mov
mov
cmp
xchg
and
push
inc
mov
in
leave
jo
jns
xchg
cmp
stc
push
sbb
xor
es
dec
xchg
xchg
push
sbb
cmp
call
lds
adc
jecxz
mov
add
mov
je
fistl
mov
and
in
shll
push
fcom
adc
jbe
add
sub
mov
xchg
cmpsl
adc
test
idivb
pop
in
loope
mov
outsb
mov
mov
stc
das
mov
mov
subb
add
adc
jg
lahf
aam
sbb
ss
fwait
jmp
enter
dec
ss
jg
mov
lock
scas
in
mov
icebp
lret
mov
cmp
fldcw
ds
mov
and
sub
adc
fidivs
sbb
pop
inc
and
cmc
je
xchg
inc
push
int3
imull
test
aam
lods
test
sub
pop
movsb
mov
inc
and
cmp
pop
lock
gs
adcb
add
in
test
mov
cwtl
add
jg
push
ds
in
push
rcr
mov
stos
mov
dec
add
and
nop
cli
jne
pushf
lea
sti
mov
nop
std
adc
dec
into
mov
add
fildll
das
lea
dec
and
sbb
add
mov
out
shl
and
and
add
sbbl
call
mov
lret
lret
les
scas
stos
adc
test
out
pushf
jne
out
imul
push
jne
inc
in
jb
and
faddl
inc
gs
rcr
and
inc
subl
cmp
iret
repnz
addr16
popf
adc
popf
shll
mov
in
cmp
jne
mov
cmp
xlat
cmpsb
or
push
push
and
hlt
jl
mov
int3
xchg
cmpsl
rorl
or
push
imul
ret
mov
test
lods
or
sub
ds
mov
jp
sbb
fucomp
js
clc
jp
xchg
loop
dec
fstpl
add
mov
add
dec
cmc
popf
lds
imul
dec
adc
aaa
jecxz
xchg
repz
movsb
mov
iret
test
fstpt
sub
push
sub
mov
add
sbb
scas
xchg
test
fs
enter
xchg
lods
sbb
popa
out
sub
dec
push
leave
in
les
jae
outsl
push
xchg
lcall
push
fsubp
faddl
jmp
cmpsb
sbb
cmpb
push
xchg
loopne,pn
sbb
out
incb
es
adc
adc
fnstenv
push
fwait
and
mov
shrl
repz
sub
out
loopne
cli
ss
sarb
mov
sti
popf
push
mov
dec
jo
push
sbb
jns
ljmp
test
loop
imul
push
outsb
jle
imul
fdivrl
rorl
xorb
inc
mov
jb
push
xor
adc
fidivrs
add
jb
jp
push
sarl
cmp
mov
lods
jns
adc
push
into
popa
add
cmpsl
sub
jae
fnsave
hlt
adc
jae
mov
or
push
sub
and
jp
cmp
sbb
or
shll
mov
jno
inc
cmp
or
adc
dec
xor
jno
or
sbb
aad
xchg
mov
insb
mov
rcl
arpl
out
js
imul
cmc
fs
div
or
jbe
in
imul
sbbb
inc
cltd
jle
cmc
sbb
stc
push
xor
xorl
inc
data16
mov
mov
cwtl
mov
dec
inc
sub
mov
gs
jle
lods
add
mov
xchg
or
mov
loope
pusha
sbb
stc
rorb
loope
jl
out
push
aad
dec
int3
jle
rorl
push
pop
pop
push
pop
or
sub
push
xchg
pop
stos
adc
test
or
loope
es
and
dec
inc
xchg
xchg
pop
jp
inc
pop
ret
push
dec
ret
ret
inc
xor
xor
fsubs
push
push
inc
popa
dec
mov
lret
cmp
in
dec
adc
lods
jmp
push
dec
repz
cmp
xor
sbb
cmp
addl
xlat
jne
sub
lea
sub
sbb
out
sbb
xor
xchg
mov
mov
repz
and
scas
mov
dec
out
cltd
outsb
js
and
lea
sahf
push
mov
and
out
push
inc
inc
repz
das
xchg
xchg
decb
decl
dec
pop
shll
xlat
lods
gs
jo
sbb
repnz
jle
fwait
enter
ret
inc
inc
xor
fistps
ljmp
in
addr16
xchg
fildll
dec
push
inc
xchg
sarb
pop
neg
lret
imulb
sbbb
aas
mov
fcoml
cmp
dec
notl
call
xorl
mov
mov
jge
jge
adc
pop
xor
inc
xor
int3
cmp
int
and
lea
in
cltd
dec
loope
call
xor
ljmp
cmp
ljmp
jne
test
jno
in
and
xor
les
sti
scas
cltd
jle
out
fwait
stos
outsb
loop
mov
gs
xlat
mov
push
fiadds
push
scas
push
push
leave
or
out
pop
stos
or
mov
cmp
fbld
dec
push
pop
cmp
sbb
sarl
fcoml
jne
repz
add
outsl
in
sub
inc
orb
mov
shll
insb
lret
jo
inc
ret
jmp
popf
fstpl
or
lock
sub
negb
stc
fadds
xchg
jb
sub
adc
insb
and
xchg
cmp
ficoml
lret
xchg
mov
cmp
dec
dec
sbb
xchg
cmp
popf
mov
stos
mov
ds
das
dec
rclb
mov
je
daa
jbe
inc
icebp
movsl
fld
or
aad
dec
add
push
push
xlat
cld
rclb
xchg
add
jl
out
fs
jo
sub
or
jecxz
sbb
daa
jmp
sub
inc
pcmpgtw
push
sbb
sbb
insl
lds
inc
mov
incl
cmp
ret
fwait
mov
and
push
cmpsl
dec
mulb
shr
sbb
jle
inc
jae
xor
inc
wrmsr
cmp
mov
sbbb
mov
les
mov
push
fwait
std
sbb
adc
xor
dec
cltd
es
mov
cmp
xchg
and
dec
loope
push
lds
mov
sti
fcmovu
pop
inc
arpl
movsl
add
jg
shlb
shrb
jp
mov
mov
decb
lret
ja
and
pop
test
not
imul
cmp
mov
cmpsb
lods
cmp
ret
jg
jecxz
jle
sbb
fwait
or
orl
sbb
dec
adc
mov
insl
xor
push
ds
dec
out
aaa
pusha
inc
push
nop
and
out
repz
cs
inc
fdivp
or
cli
stc
dec
push
sub
icebp
loopne
jecxz
data16
stos
ss
test
pushf
pop
es
xchg
fiaddl
and
ret
rolb
pop
push
push
les
ret
fs
ret
inc
nop
out
mov
add
lods
test
lods
mov
lods
pop
jp
mov
imul
jecxz
and
pop
mov
push
int
jno
xor
out
jae
dec
xor
xchg
movaps
sarb
push
cmc
rcll
inc
dec
cmp
push
sbb
out
xchg
lods
push
fcompl
pop
cwtl
mov
icebp
out
xorl
movsl
pop
shrb
and
adc
adc
pop
dec
cmp
mov
fwait
mov
cmp
xchg
push
into
sarl
add
sarb
pop
push
lds
push
dec
es
or
in
icebp
faddl
stos
jns
sbb
mov
cmp
insl
push
cmp
sub
jle
pop
and
cmp
mov
mov
xor
leave
jp
inc
pop
imul
js
popa
push
sbb
mov
insl
and
les
shrl
lahf
push
setl
test
sub
jecxz
pop
inc
dec
mov
test
jmp
or
jmp
jnp
mov
jecxz
in
dec
lock
xor
xchg
xlat
mov
pop
dec
dec
subb
loopne
popf
dec
sub
inc
divl
mov
xchg
imul
pop
inc
cmpsl
subb
sbb
sbb
test
icebp
add
fs
pop
gs
cltd
test
push
push
mov
mov
jo
dec
mov
cli
std
dec
stc
pop
sub
outsl
scas
shr
push
mov
lret
pop
mov
mov
arpl
and
lock
test
test
sbb
xchg
fistpl
xlat
and
mov
rcr
sub
xchg
dec
cli
mov
pop
nop
xchg
pop
jb
fistpl
adc
xchg
xor
add
jp
push
out
sbb
xchg
push
cmp
push
fcoml
iret
jl
mov
imul
lock
add
fsubrl
dec
lea
fwait
mov
pop
inc
sahf
enter
into
push
jns
mov
es
xlat
pop
es
sub
popa
mov
fisttpl
mov
es
add
je
jecxz
pop
add
sbb
pop
test
mov
sbb
jle,pn
addr16
push
or
sbb
jnp
jecxz
add
cltd
inc
jbe
lods
inc
lahf
jle,pn
inc
xor
dec
mov
fisubrl
lahf
xchg
mov
aad
xchg
inc
pop
cwtl
nop
hlt
daa
mov
and
cmp
xor
ret
pop
mov
mov
mov
lret
push
cltd
mov
xchg
lsl
aam
sub
xor
dec
xlat
dec
adc
addb
mov
sbb
sub
jl
stos
aas
shrb
cmp
sbb
cltd
enter
das
sub
add
pop
ljmp
or
cmpsb
roll
ljmp
dec
clc
notl
lock
fsubrs
sub
test
cmp
dec
cmc
xor
and
push
hlt
hlt
mul
cs
dec
push
or
aaa
fisubl
push
xor
adc
jge
and
lahf
lods
mov
and
addb
xor
adc
pop
dec
jnp
jg
scas
test
dec
or
pop
fidivrs
lret
scas
fmuls
xchg
xlat
rcrl
xor
fnstenv
pop
xorb
xor
inc
pop
xor
outsb
in
in
mov
adc
mov
xchg
cmp
sti
adc
mov
xchg
pop
adc
sti
shrb
inc
int
cs
je
pop
popa
push
dec
jnp
cld
out
loope
out
js
mov
mov
mov
mov
dec
bound
cmp
fidivrl
sbb
jbe
xchg
pop
add
inc
mov
jns
adc
xchg
mov
jmp
hlt
mov
icebp
jl
cmp
paddsb
add
mov
jl
sbb
mov
in
sahf
aad
push
popa
xchg
lret
sbb
jnp
cmp
jmp
fdivr
mov
aad
and
xchg
int3
xchg
cmpsl
cmp
aad
aaa
mov
leave
and
cmpsl
and
xchg
push
test
xlat
push
roll
adc
mov
sar
lods
ljmp
cmp
xorb
stc
adc
push
test
clc
cwtl
out
aam
stc
and
mov
push
int
scas
inc
sbb
xor
shll
jno
sbb
int3
dec
and
dec
mov
js
scas
addr16
jb
jno
pop
testb
rcrb
clc
test
sub
inc
ds
fsubrs
scas
jmp
stos
inc
jle
clc
xor
push
xor
jecxz
mov
iret
xchg
mov
fldl
cmp
std
rcll
push
movsb
into
jmp
sbb
dec
mov
inc
push
dec
add
xor
rolb
cwtl
popf
push
ds
dec
shlb
repnz
icebp
jb
sti
and
loop
sub
js
scas
int
xor
dec
out
sbb
enter
dec
mov
paddusb
mov
lods
pushf
mov
add
das
sbb
iret
sub
pop
aas
pop
dec
data16
fs
sbb
mov
stc
mov
out
fcoml
pop
add
push
jl
inc
cltd
repnz
mov
pushf
push
xor
ror
mov
sbb
jl
sbb
dec
stc
mov
loopne
pusha
push
aaa
imul
add
xchg
xor
out
roll
fs
jp
popf
lea
inc
push
seto
inc
mov
insl
into
cwtl
lret
orl
xor
outsb
mov
clc
fisttpl
mov
cmpsb
add
pop
pop
push
mov
or
add
mov
pop
andb
xor
mov
out
add
mov
adc
jecxz
adc
dec
or
or
sbb
call
cmpsl
test
out
test
adc
and
stc
push
jmp
sarl
test
sbb
xor
adc
mov
mov
in
adc
call
outsb
xchg
fldenv
sbb
aaa
aas
in
push
push
xor
out
aam
jl
xchg
pop
push
add
pop
jb
mov
mov
lea
xchg
cmp
nop
jbe
push
in
shll
add
push
add
pop
lock
cmp
push
mov
jmp
xchg
out
adc
pop
jp
inc
ss
fsubrs
or
lret
cld
rcr
lea
addb
jno
testl
stos
ror
mov
sti
mov
xlat
shrb
and
add
shr
xor
js
sbb
insl
mov
xchg
leave
aad
xor
in
pop
pop
stc
in
fs
into
frstor
addr16
sbb
out
sbb
dec
push
scas
xchg
test
pop
movl
stc
cmc
sub
sub
fdivp
inc
mov
int
repnz
mov
mov
mov
lahf
pop
xchg
mov
sub
enter
out
sbb
xchg
or
sbb
mov
in
js
pop
push
clc
adc
mov
in
mov
or
adc
inc
adc
xchg
pop
pushf
mov
outsb
mov
mov
or
mov
or
inc
and
jb
data16
es
xor
push
dec
xchg
js
arpl
les
or
scas
mov
rclb
je
aam
push
jle
repnz
mov
lret
out
jae
cmp
aad
fs
pop
jle
test
rol
scas
mov
sbb
mov
inc
aam
pop
cmp
cmp
mov
clc
or
enter
mov
sahf
mov
jae
les
sub
insb
clc
xor
dec
test
repz
repz
mov
xor
jo
or
lahf
mov
cmp
sbb
push
push
sbb
push
mov
not
mov
lea
test
cld
inc
sub
cmc
pushl
and
push
push
cmp
and
xchg
push
mov
inc
mov
mov
xor
sbb
jo
dec
mov
out
jg
adc
xchg
outsb
nop
mov
sbb
xchg
shr
repnz
adc
mov
mov
cwtl
push
sahf
jno
clc
jge
dec
test
mov
jbe
xchg
adc
data16
xchg
push
push
sub
jne
sbb
sub
mov
dec
pop
jg
jnp
sbb
jbe
lods
push
dec
mov
mov
cmpsb
dec
cwtl
mov
inc
insl
pop
rclb
mov
jmp
loope
xchg
aam
nop
push
hlt
movsb
aas
int3
int
jge
sbb
add
adc
out
cltd
sbb
cmp
inc
adc
jecxz
add
lcall
cmpsl
jl
nop
cmp
call
dec
shlb
enter
inc
pop
aas
into
sti
xchg
pop
mov
mov
outsl
inc
mov
movsl
mov
add
jnp
mov
push
cmp
sub
loope
fs
loopne
adc
test
pop
je
es
movsb
or
lds
repnz
push
push
les
test
sbb
cmp
nop
mov
bound
push
inc
popf
jns
bnd
mov
add
fisttpll
rol
test
mov
jae
cmp
shl
stos
icebp
mov
sub
jg
aaa
rcrb
iret
insb
pop
sub
mov
fdivrs
in
adc
mov
dec
or
mov
dec
in
jns
cli
test
mov
mov
jmp
mov
adc
cmp
adc
cwtl
xchg
test
mov
loopne
push
cmp
push
leave
adcb
dec
sbb
dec
lods
xchg
cmp
lock
repz
cmp
lahf
sbb
jl
mov
jb
and
dec
out
inc
cmp
xchg
adc
dec
subl
cmc
mov
clc
loop
add
jnp
lea
ljmp
loopne
jno
xchg
xor
icebp
inc
fsubs
mov
adc
xchg
mov
orl
aam
jge
add
iret
push
add
fsts
cli
mov
in
mov
mov
fcomip
mov
jl
into
dec
mov
cmp
out
and
push
scas
sbb
and
int3
adc
arpl
aam
pop
sub
sbb
insl
dec
out
lods
cltd
out
lods
ljmp
shll
sub
lds
jecxz
fdivl
mov
out
lds
js
pop
inc
negb
fldl
inc
loope
or
pop
mov
xor
loope
sbb
dec
sub
xor
add
and
adc
jb
outsb
sbb
mov
xor
test
adcb
or
bound
mov
jge
inc
mov
outsl
lds
ss
outsb
push
mov
int3
adc
fsubl
sub
dec
subb
fcompl
sbb
xlat
dec
into
pushf
dec
repz
xor
test
mov
imulb
cmpsb
icebp
lds
inc
push
call
enter
pushf
mov
vpshufhw
stc
hlt
xorl
xor
ret
popf
or
dec
test
add
adc
jae
incb
fildll
pop
notl
jne
in
fwait
das
and
mov
xorl
dec
xchg
mov
pop
lods
ret
mov
test
repz
add
mov
inc
sahf
cmp
test
jns
lret
xchg
sbb
arpl
jnp
mov
add
rorl
test
sub
les
xor
push
adc
xchg
mov
xor
xor
repz
ficoml
mov
loope
jl
sbb
popa
insb
dec
push
push
popa
sub
xor
mov
in
inc
sbb
pusha
das
pusha
adc
mov
mov
sub
mov
mov
sbb
sbb
push
xchg
sub
sbb
mov
addb
aam
imul
test
hlt
xor
mov
inc
push
ds
add
andl
decl
dec
and
jb
xor
adc
sub
outsb
aaa
jmp
pop
les
aam
into
mov
insb
add
repz
dec
pushw
cmp
ljmp
xchg
mov
push
outsl
iret
movd
xchg
in
cmp
in
pop
or
rcl
lds
mov
ffreep
notb
and
sub
fwait
pop
xchg
aaa
jb
pop
out
push
adc
ret
dec
jg
mov
jne
cmc
add
add
cltd
fnstcw
push
and
ret
add
xor
in
ror
or
add
xchg
lret
rorl
sbb
repz
inc
jo
int
sub
rcrl
or
cs
loop
push
mov
xchg
pop
mov
fcmovu
sti
scas
mov
adcl
mov
pusha
xchg
imul
pop
mov
xchg
jns
cmpsl
jo
std
adc
xor
inc
pop
hlt
shll
daa
stos
xlat
popa
xorl
filds
out
adc
sbb
or
cmp
push
xchg
ficoms
adc
arpl
insb
rorl
daa
into
push
mov
mov
push
ljmp
dec
xor
filds
pop
insb
mov
mov
scas
outsb
sub
or
inc
inc
or
ret
int
pop
stc
pushf
dec
lahf
xchg
jle
add
pop
clc
adc
add
nop
nop
push
cmp
je
in
xchg
xchg
cwtl
mov
add
push
aam
push
lds
sarl
out
aaa
push
inc
fistl
aad
ds
iret
mov
movsb
icebp
iret
popa
mov
les
stc
repnz
dec
or
in
int3
cltd
js
insl
fsubrp
mov
test
cmpl
fimull
cs
outsb
xchg
xor
mov
das
shl
xchg
sbb
js
scas
inc
mov
push
jne
imul
push
pushf
sub
inc
pop
dec
sub
cmpsl
inc
add
sub
mov
jbe
call
pop
out
shrb
decb
outsl
mov
shr
aam
xor
in
push
nop
test
inc
popa
pushw
or
lret
outsb
sti
mov
loope
jecxz
xchg
lock
jnp
mov
and
rorb
cmpsl
cmpsl
mov
add
enter
dec
sub
lret
repz
pop
in
xchg
rorb
dec
sbb
out
ret
sub
dec
dec
dec
jno
outsb
imul
xchg
jecxz
ja
sub
daa
sub
cli
aad
lea
rorl
jb
test
test
sub
sub
mov
adc
pop
and
sub
jle
and
push
cmp
push
push
fcoms
out
mov
stos
repz
sub
inc
xchg
cmc
lcall
call
or
and
pop
aas
incl
inc
push
mov
inc
xchg
iret
ret
arpl
or
or
lds
jae
lcall
aas
int
test
adc
insb
pushf
xchg
ror
test
fidivl
jl
sbb
mov
sbb
adc
stos
testl
xchg
mov
and
xchg
stos
xor
movsb
push
add
mov
test
repz
movsb
xchg
inc
jg
push
into
stos
in
mov
js
lds
mov
imul
sub
pushf
das
cmp
push
ss
out
jno
push
jle
ror
repnz
jmp
ss
adc
add
xor
jecxz
xchg
xchg
mov
jno
out
test
jbe
or
outsl
xor
jg
or
mov
mov
xchg
mov
mov
xor
mov
xor
es
das
xchg
ret
pop
in
jbe
adc
jne
addr16
xchg
aad
xchg
aad
jnp
or
and
lock
sub
mov
push
movsb
inc
xchg
jae
fwait
pop
xorb
mov
dec
lods
xor
leave
sti
xlat
in
inc
xor
mov
sahf
jbe
fs
jecxz
mov
add
out
xchg
cmp
aaa
push
cmc
add
ret
inc
js
mov
inc
mov
jl
xchg
and
hlt
repz
xlat
push
lret
and
mov
fiadds
or
sbb
icebp
sub
aad
in
mov
push
push
add
jge
cld
xchg
stc
pop
loop
insb
leave
call
movb
lcall
xor
jg
cmc
mov
jg
icebp
insb
mov
lds
mov
cli
fdivrp
inc
lods
popa
mov
dec
lods
xchg
fstps
add
mov
jmp
xor
sbb
jmp
mov
inc
cmp
or
mov
outsb
sbb
mov
das
gs
cmp
fistpl
xchg
dec
ret
pop
dec
arpl
and
cmpsb
and
sub
and
jae
lds
push
adc
mov
dec
add
testb
je
xchg
enter
mov
out
es
idivb
sbb
in
push
frstor
std
jae
je
xchg
xor
loop
mov
jmp
decl
jo
mov
adc
push
sub
sub
sbb
lcall
in
lcall
push
enter
inc
loop
cmp
out
notb
dec
cmp
insl
inc
call
scas
popa
jb
lcall
add
inc
data16
sarb
and
sbbl
jo
cwtl
adc
push
loop
mov
lods
test
subl
mov
jp
test
adc
inc
incb
int3
xor
mov
ss
mov
fs
shlb
dec
lods
cli
lds
mov
enter
sbb
movsl
cmpsl
jmp
into
lea
adc
nop
xchg
gs
or
or
push
pop
xchg
inc
fmuls
stos
lret
push
dec
xor
scas
insl
push
mov
sbb
inc
push
xchg
lret
cli
aaa
in
cmp
push
jae
cld
bound
ds
mov
cmp
or
xor
dec
or
add
daa
dec
push
cmp
cmpsl
jns
pop
inc
mov
nop
insl
sbb
cld
dec
cmpb
in
psllq
jg
xchg
xor
pop
add
lret
lcall
int3
or
mov
iret
rclb
adc
or
mov
xchg
outsl
or
scas
clc
lret
pusha
movsl
or
sub
arpl
sbb
cmpsb
dec
add
outsl
or
in
ja
fidivs
adc
pop
xor
xchg
add
mov
lahf
inc
jae
test
add
sti
mov
add
dec
rcrl
xchg
ja
push
inc
sub
mov
imul
movb
xor
cld
pop
testb
mov
cmp
repnz
enter
lock
rcll
test
cli
into
fstpt
dec
mov
add
inc
outsl
dec
imul
in
loopne
mov
jo
inc
sbb
scas
sbb
dec
lock
movsb
daa
jg
jge
xchg
push
movsl
pop
or
jb
dec
sbb
gs
xchg
or
xchg
xor
sbb
stos
idivb
xor
in
dec
sbb
lods
rcl
loope
pop
and
xchg
xchg
data16
xchg
cmp
sub
bound
fucomip
jns
mov
sub
sbb
cmc
dec
mov
stc
ret
inc
shlb
shl
test
dec
stos
cli
cmp
rcll
sahf
cmp
pop
jmp
jmp
mov
out
sti
pop
jl
adc
dec
jno
push
subb
push
ljmp
adc
lret
imul
hlt
pop
push
adc
int
ja
stc
enter
aad
repz
cs
rclb
sbb
pop
scas
lods
mov
int3
and
adc
imul
cmp
mov
enter
sbb
add
or
and
or
push
push
sub
ljmp
stos
sub
push
mov
movsb
cwtl
mov
daa
jns
adc
fsubl
lea
sbb
mov
ss
imul
xor
ret
pushf
pop
bound
pop
cli
xor
xor
pop
mov
int3
push
inc
icebp
int
dec
dec
ljmp
lcall
add
clc
jmp
push
orb
fucompp
fsubrs
sahf
js
cmc
add
mov
test
push
and
jp
in
lcall
jnp
lods
ret
into
adc
pop
sub
ljmp
lea
push
or
ss
pusha
js
fisttps
inc
push
pop
mov
and
cmpl
or
insb
lods
mov
sbb
sub
jne
push
test
shrb
push
xchg
mov
push
mov
lock
push
clc
push
rorb
xor
sbb
repz
mov
mov
repnz
stc
rolb
or
and
or
fwait
icebp
jns
icebp
cmpb
push
dec
sbb
push
sar
mov
inc
push
mov
jo
cmp
popf
rol
sbbb
mov
pushf
pop
pusha
cwtl
sbb
lock
inc
dec
cmp
mov
in
call
ret
test
leave
push
adc
mov
shrl
clc
neg
popa
xchg
lds
sti
xchg
ffreep
sub
dec
stos
adcb
push
faddl
push
sahf
scas
mov
inc
arpl
pop
aad
andb
andl
adc
sahf
jmp
cmpsb
mov
subl
and
scas
inc
stc
sbb
inc
cmp
push
dec
mov
and
add
lret
dec
loope
outsb
mov
aad
and
pushf
hlt
push
add
jle
rcrl
jmp
dec
cs
hlt
cwtl
inc
and
testb
nop
dec
mov
sub
out
enter
sbb
nop
adc
cwtl
mull
sub
mov
adc
and
mov
ds
sbb
dec
inc
loope
aad
scas
pushf
dec
xor
cld
push
and
and
nop
lcall
dec
lret
and
cmp
mov
sbb
sbb
mov
adc
pop
dec
sarl
pop
inc
stos
sub
fildl
aas
or
jbe
cmp
popf
adc
jl
pusha
jp
xchg
shl
push
or
mov
mov
pushf
stc
mov
mov
or
sub
xor
jae
pop
xchg
imul
lock
xor
sbb
bound
in
cmp
mov
cwtl
push
inc
cli
sahf
mov
push
mov
adcb
xchg
pop
shr
jmp
mov
mov
pop
mov
test
leave
lret
dec
push
into
imul
test
sub
lea
testb
fstps
leave
jecxz
mov
pop
popa
xchg
push
outsb
pop
push
mov
fists
pop
pop
hlt
mov
addr16
xor
nop
xor
push
jno
inc
dec
das
sub
aam
jo
cld
fistpl
adc
xchg
inc
lahf
inc
out
inc
mov
cmp
push
adc
mov
loop
rcrl
jae
xor
cmp
shlb
inc
mov
inc
jb
fs
mov
mov
aam
insb
std
lods
lock
lcall
lret
in
lahf
and
mov
mov
lret
dec
sti
inc
xchg
scas
mov
and
je
xor
push
loope
xchg
cmp
cli
fnstcw
insb
xor
lock
jecxz
sub
xor
daa
add
xor
jae
jns
outsl
sbb
and
int
xor
imulb
push
loope
adc
dec
sbb
add
sbb
dec
cmpsb
iret
lea
pop
dec
sub
nop
scas
stos
xor
shrb
incl
dec
dec
pop
jno
xor
add
fstpl
and
push
stc
sahf
fisttps
pop
out
ljmp
push
sbb
dec
mov
xchg
cmp
sbb
or
xchg
aaa
jnp
dec
xlat
inc
jae
out
dec
mov
data16
dec
jnp
jns
cmp
jo
jmp
sbb
inc
mov
pop
nop
mov
repnz
and
and
push
mov
xor
jl
mov
cmp
jmp
bound
sub
dec
sub
xchg
xor
pushf
out
mov
dec
xchg
push
xchg
pop
sub
hlt
and
test
mov
xor
fwait
mov
push
call
adc
xchg
dec
xchg
cmp
push
inc
mov
ret
pop
iret
xlat
mov
leave
push
mov
sub
mov
mov
xchg
nop
xchg
js
loopne
xorb
cmp
jno
cmpsl
mov
fsubrl
pushf
jl
test
fbstp
test
test
jge
shll
out
xchg
cltd
pop
ret
icebp
xor
movsb
call
push
and
sbb
loop
pop
ljmp
xchg
nop
mov
and
sub
call
pop
adc
shrl
xchg
pop
repz
in
push
js
popl
xor
jno
je
jmp
push
aam
roll
sti
pusha
mov
mov
daa
xchg
fisubl
mov
das
xchg
pop
insb
fimull
sbb
add
jmp
xor
daa
mov
inc
lds
inc
jo
sub
aad
mov
or
lret
pop
ljmp
les
and
push
fildll
adc
inc
mov
sbb
jo
dec
jecxz
xor
push
addr16
outsb
int
cmp
sbb
pusha
or
rcrb
outsl
and
bound
pop
mov
mulps
out
arpl
imul
fs
out
sbb
inc
cmp
sbb
filds
cs
das
and
adc
jecxz
jae
ljmp
in
xor
jmp
pop
jl
stos
inc
mov
mov
xor
push
bound
xchg
mov
push
and
in
cmp
mov
aad
cmp
cwtl
push
lods
arpl
xchg
xchg
loopne
push
fsubl
leave
lods
sub
sub
inc
imul
loop
or
sbb
lret
cld
mov
cmc
push
xor
mov
ret
adc
add
xor
orb
mov
inc
bound
add
sbb
xlat
push
sarb
aas
inc
in
out
pushf
jb
inc
pop
movsb
xor
popa
sarb
sbb
or
hlt
jle
push
inc
icebp
or
movsb
adc
pop
aam
sti
inc
cltd
and
les
jle
dec
shll
cmp
add
jecxz
test
jb
cmp
mov
mov
or
dec
movl
xor
fldcw
add
xor
xor
push
pop
sub
fildll
cmp
std
ljmp
jbe
push
loope
outsb
sbb
inc
cwtl
push
nop
pop
jge
dec
testl
scas
cmp
add
insb
pop
rcrl
aas
repnz
xchg
stc
cmp
out
pop
lock
aas
les
cmp
or
cmp
movsb
movsb
mov
int
xor
out
xlat
int3
add
add
mov
bnd
pop
aas
add
fucom
cli
jne
cmpsl
jmp
jno
push
sarb
test
ret
jne
test
loopne
add
sarb
xlat
pop
lret
inc
and
adc
out
lods
add
insl
push
jnp
jae
push
out
dec
out
adc
ljmp
imul
iret
pop
push
dec
jge
mov
jge
xchg
xor
jmp
inc
mov
scas
pop
pop
xchg
dec
test
push
adc
sub
sti
outsb
enter
sti
rcl
sub
dec
add
dec
push
int
push
mov
lahf
inc
dec
call
cmc
ss
fnop
pop
cmp
sub
ds
jno
jg
loope
pusha
push
pop
movsl
int
ret
sbb
mov
jns
mov
and
movb
in
jo
std
scas
dec
shl
mov
xor
push
movsl
mov
movsl
test
gs
lock
in
sbb
push
mov
mov
gs
and
dec
cmp
out
or
sbb
test
mov
out
lods
loope
pushl
test
inc
adc
xlat
ds
and
cmp
dec
jle
push
xchg
out
sub
into
adc
ret
imulb
test
negb
or
aam
cmpsb
fisubs
push
sub
sub
lret
je
cli
mov
ljmp
adc
sbb
lea
inc
out
or
loope
mov
cli
std
xchg
mov
das
push
and
mov
mov
mov
or
adc
add
xor
aam
out
xchg
out
insb
in
sub
cmp
xor
jge
push
outsb
inc
jl
adc
lods
cs
orb
xchg
insl
dec
mov
mov
dec
in
shrb
ret
add
pop
inc
inc
cmc
xchg
mov
jp
je
dec
scas
sbbl
ljmp
aaa
addb
adc
dec
js
fistpll
aas
push
into
leave
rolb
or
mov
dec
bound
mov
mov
stos
les
add
in
sbb
push
or
movsb
mov
fildll
mov
sbb
inc
gs
fistl
ret
push
sub
leave
out
movsl
cmp
push
cli
jno
fabs
subb
jo
arpl
adc
ds
int3
andb
subl
xchg
push
dec
xor
rorl
loope
not
sub
in
jl
or
adc
xlat
pop
lcall
and
jbe
sahf
xchg
mov
es
adc
test
out
adc
sub
lcall
das
inc
and
adc
push
rcrb
mov
pushl
icebp
push
add
sbb
mov
add
xlat
push
mov
popf
in
adcb
mov
or
shlb
adc
testl
imul
adc
or
aaa
adc
lods
hlt
cmp
outsl
arpl
mov
sar
loope
in
inc
lds
bound
iret
jmp
mov
aas
inc
daa
cmp
mov
jns
or
lds
pop
test
lods
or
rcll
push
repz
mov
outsb
scas
jmp
sbb
pushf
sbb
clc
gs
mov
je
add
movsl
cmp
push
in
popf
xchg
push
xchg
cs
and
sahf
cltd
insb
dec
xchg
sbb
and
cmp
popa
xchg
mov
sbb
add
nop
dec
int3
cmp
xor
sbb
xchg
dec
dec
cmp
or
cltd
scas
sub
mov
and
pop
arpl
mov
pop
xor
mov
and
cwtl
fwait
or
mov
lds
adc
mov
mov
xchg
and
inc
lcall
faddl
lods
shl
addl
outsl
cmp
mov
xor
test
and
xor
fwait
lcall
jmp
repz
ftst
push
ds
or
xor
dec
clc
xchg
in
and
fnstenv
mov
testb
scas
push
imulb
popa
mov
mov
rcr
cmp
stos
dec
inc
shlb
fmuls
aad
adc
push
test
sbb
into
movnti
push
std
ja
add
mov
dec
pop
in
repz
xchg
inc
pop
pushf
mov
outsl
or
pop
jbe
jle
mov
aam
into
add
in
hlt
and
mov
jge
movsl
inc
mov
push
fldlg2
mov
jmp
jnp
arpl
dec
jo
imul
sbb
xchg
xor
push
sub
mov
or
jae
mov
inc
pop
jne
mov
xor
test
cld
add
sarb
add
outsl
lret
lods
into
xlat
pop
call
pop
inc
xor
xchg
in
stos
jp
in
pop
push
push
out
inc
mov
xor
or
hlt
shll
rclb
les
call
movsb
and
fstps
mov
sbb
popf
xor
add
les
inc
mov
inc
cld
sub
mov
adc
push
in
mov
imul
xchg
mov
xchg
mov
sbbl
repnz
cmp
jmp
xor
xchg
das
sbb
lock
fistps
lahf
ret
xorb
ds
mov
sbb
movsl
iret
dec
int3
repnz
imul
jmp
mov
sbb
int3
cmpsb
mov
bound
in
xchg
mov
andl
xchg
jmp
pop
cmp
add
xchg
in
mov
outsb
or
cwtl
in
sub
mov
pop
sbb
xchg
mov
fs
mov
xchg
mov
inc
jo,pt
fdivl
and
call
sbb
mov
jae
dec
into
pop
sub
loope
int
divb
mov
aas
dec
add
add
icebp
stos
aaa
cld
add
mov
test
mov
enter
outsb
push
sahf
in
in
repz
xchg
dec
repnz
insb
or
lods
pop
pop
xchg
push
lret
xor
adc
mov
ret
cmp
sub
adc
cmp
jne
push
adc
jmp
cmpsb
fildll
outsl
sbb
int3
ficompl
mov
sub
dec
push
rcl
add
jns
inc
in
loopne
icebp
adc
push
sarl
loop
mov
adc
add
jmp
in
or
push
std
mov
out
pop
sti
out
std
dec
cs
mov
out
test
stc
roll
xchg
mov
fsubl
push
aaa
test
inc
addr16
mov
xchg
inc
and
sub
adc
inc
or
movsl
add
es
fcomp
in
lcall
lahf
loope
cmpsb
aaa
xor
stos
out
iret
inc
rcll
inc
dec
idivl
dec
jno
outsl
mov
pop
lahf
mov
mov
mov
sahf
addb
jno
mov
lock
sbb
mov
fisttpl
cmpsb
sub
inc
mov
push
loope
jle
mov
adc
and
xchg
inc
arpl
xchg
push
push
in
push
orl
in
mov
scas
mov
or
lahf
lcall
popf
testb
andl
dec
pop
xor
mov
jo
add
leave
test
aaa
jnp
test
insb
xchg
adc
jnp
divb
adc
or
fcomps
and
hlt
jge
addr16
jecxz
fwait
or
shlb
inc
pop
mov
and
mov
ja
adc
loope
bound
rorb
flds
fwait
jbe
mov
iret
std
clc
js
push
inc
cmc
cld
ffreep
repnz
mov
mov
bound
dec
jae
bound
cmc
sbb
mov
push
push
add
test
outsb
out
mov
sub
xor
xchg
cmp
cmp
ds
lods
mov
jl
sti
stos
nop
lock
xchg
sbbl
push
xchg
lcall
pop
fnstcw
cwtl
es
ja
dec
mov
jbe
cmp
mov
inc
mov
or
push
out
inc
es
pop
bound
jae
aam
pushl
int
lock
subb
push
mov
xor
cmp
jno
adc
lcall
jl
scas
cld
enter
cltd
mov
fdivrs
push
adc
shlb
movsb
sub
mov
mov
and
lock
lret
cmp
push
mov
inc
push
add
andl
ds
cmp
int3
lds
sbb
pop
aas
and
cltd
pusha
repz
paddusw
mov
mov
pushw
in
scas
aaa
cwtl
scas
jge
repnz
jle
fldcw
push
fwait
adc
gs
in
lods
xchg
mov
scas
sub
flds
mov
jne
push
sbb
rolb
xor
push
mov
cmp
xchg
dec
scas
inc
adc
es
inc
inc
jno
xchg
pusha
jg
push
in
xchg
enter
arpl
lods
add
push
cmp
xlat
lret
cmp
jle,pn
push
mov
insl
mov
jae
dec
lahf
in
pop
fprem
repz
imul
sub
push
scas
sbb
jne
sbb
loop
test
push
repz
icebp
sub
mov
dec
mov
in
and
adc
jne
lret
cmp
pop
mov
xchg
sub
stos
add
sbb
inc
adc
add
mov
shrb
mov
jno
dec
dec
push
int3
loop
pop
inc
mov
sbb
xchg
xlat
inc
sub
test
inc
aaa
or
outsl
mov
gs
jnp
mov
lcall
loopne
fmuls
sub
adc
bound
mov
dec
add
mov
cmp
mov
xlat
movsl
fistpll
aas
sub
mov
icebp
xor
shrl
push
jb
xor
int3
sbb
mov
mov
repz
jno
outsl
jge
xchg
mov
stos
movsl
test
pop
dec
mov
mov
ds
pop
jmp
adc
sbb
loop
jle
cli
das
inc
lcall
scas
push
lods
sub
fcompl
repz
xor
push
dec
jbe
push
mov
adc
sbb
jle
or
jne
dec
enter
cli
aam
addl
vpcmpeqb
ss
jb
inc
imul
rcll
icebp
lret
mov
push
das
mull
into
pop
std
stos
sbb
cmc
imul
loop
mov
lods
ja
sarb
mov
nop
and
pop
dec
sbb
aaa
jb
lds
or
xor
jmp
and
mov
sbb
jne
sbb
pop
in
push
decl
push
xor
lret
add
mov
or
arpl
stos
bound
int3
dec
daa
loopne
mov
and
lds
xor
fstps
data16
test
xor
pop
xor
in
shrl
jns
mov
rol
iret
sub
and
data16
jmp
xor
xlat
cmp
mov
leave
sub
jno
ss
sub
mov
pushw
std
inc
insb
inc
push
out
repz
inc
adc
stc
lahf
mov
popa
addl
cmp
btc
loope
xor
roll
loopne
or
into
call
push
adc
clc
int3
add
sbb
pushf
and
mov
insl
xchg
lds
xor
in
idivl
and
fwait
mov
jns
test
stc
test
aam
loop
adc
xorb
sbb
pop
in
jae
inc
cltd
mov
cwtl
cli
shrl
push
call
cmp
jp
mov
pop
out
lock
jmp
rolb
subb
sbb
movsb
push
pusha
cmp
stos
adc
cmpsb
jae
sahf
or
stos
adc
cld
or
nop
hlt
mov
mov
or
cmp
mov
push
sbb
add
inc
jle
xor
push
sarb
aad
fsubr
pop
pushf
mov
loop
or
lcall
andl
mov
addl
mov
cmp
push
pop
in
mov
pop
mov
jecxz
inc
adc
popa
rcrl
cld
pop
sub
pop
mov
ja
outsb
or
jbe
mov
aas
jmp
inc
out
aad
mov
jnp
sti
stos
xor
pop
inc
out
lret
mov
imul
mov
mov
movsl
xchg
icebp
cmc
mov
dec
push
sub
jbe
gs
push
cmpl
cmp
push
sti
faddp
cmp
pop
dec
imul
les
xor
dec
mov
fiaddl
mov
cs
sbb
cmpsb
cld
jae
std
into
mov
push
sbb
and
xchg
stc
push
outsl
lods
fsubp
inc
enter
xor
pop
sub
int
mov
cmpsb
mov
std
in
cs
xchg
dec
and
sbb
adc
popf
inc
push
lock
xor
hlt
mov
ljmp
aad
call
icebp
testl
mov
inc
xchg
and
popa
add
negb
dec
push
repz
jle
jns
cmp
adc
mov
pop
sbb
call
jnp
gs
sub
ficoml
fcomps
lahf
xchg
lahf
rcll
xchg
ss
push
cmp
lea
sub
xor
cmp
adc
in
outsb
xor
adc
fldl
add
enter
or
inc
cmpsb
pop
out
xchg
xor
xor
test
inc
negl
and
or
jo
mov
test
mov
out
inc
jno
mov
das
inc
and
lcall
jo
lcall
scas
fisubl
in
scas
pop
dec
inc
adc
cltd
test
dec
inc
rorl
incl
fldenv
dec
mov
outsb
dec
lea
hlt
mov
sub
stos
cmp
lret
or
lahf
xchg
insl
pop
mov
es
inc
adc
sbb
shrd
push
jmp
xor
outsb
jae
mov
push
mov
mov
or
packsswb
mov
or
push
sti
fcoms
insb
addr16
and
jae
inc
adc
sbb
pop
enter
loop
je
adc
add
xlat
das
loop
dec
and
repz
filds
sbb
xor
sub
push
push
test
push
inc
cwtl
mov
xlat
or
sub
or
xor
mov
xchg
inc
add
pop
lcall
dec
insl
and
sti
cmpsb
sub
int
mov
js
lret
cltd
mov
sub
inc
xchg
sub
push
add
push
mov
mov
out
fnsave
rcrb
pop
xor
add
sub
stos
hlt
push
lods
data16
punpcklbw
mov
fs
mov
movsb
not
push
mov
bound
clc
inc
sub
fiadds
testb
pop
or
lods
fadds
int3
aam
js
push
inc
mov
mov
jle
add
test
notl
test
mov
pop
pop
sbb
push
ds
out
stos
lahf
fld
enter
pop
decb
pop
das
stos
repz
dec
sti
addr16
movsb
jne
mov
pushf
cmp
sub
vmwrite
cmp
xor
and
adc
data16
push
pusha
outsl
pusha
xchg
inc
divb
push
or
inc
addb
js
mov
mov
fsubrp
outsl
adc
sub
icebp
roll
cltd
dec
arpl
cmp
shll
jmp
cmp
test
or
mov
jbe
sbb
push
adc
mov
nop
mov
mov
ss
xlat
ficoml
inc
sbb
cld
jb
int3
dec
pop
jne
cld
mov
mov
pop
jmp
test
je
jo
cmp
dec
hlt
test
jp
cmp
mov
in
stos
fsubrs
xchg
cmp
jl
iret
data16
xor
out
and
fcoms
push
arpl
or
dec
lcall
mov
aam
loope
inc
pusha
mov
sub
cmc
adc
adc
dec
loope
xor
int3
ljmp
jno
jge
fwait
daa
cmp
add
push
addr16
fstps
sar
popf
jae
arpl
or
cmp
in
fidivs
push
outsl
movsb
cmp
in
cmp
add
jno
xchg
insb
shll
add
outsb
ds
xlat
mov
push
jecxz
jno
ljmp
inc
iret
bnd
jno
gs
add
mov
in
add
repnz
rcll
inc
shll
cmp
scas
addr16
in
outsb
lods
pop
mov
addl
dec
rorb
cli
xor
into
xor
daa
out
mov
dec
sbb
stos
and
into
jnp
or
mov
scas
dec
ret
in
jecxz
pop
push
fs
and
cmp
push
dec
add
scas
mov
sub
addr16
ficomps
icebp
cltd
scas
aaa
adc
sarl
loope
add
stos
sbb
adc
fldenv
xchg
push
mov
insb
test
fdivs
cmc
ja
movsb
bound
xchg
stos
dec
jb
push
mov
push
mov
sub
fcompl
sbb
daa
lcall
lea
xor
xchg
hlt
push
and
ja
out
lahf
jb
cli
ss
movsl
insl
adc
sar
insl
loop
add
loopne
and
sbb
mov
jno
mov
jge
or
cmc
pop
into
fs
je
push
push
inc
out
push
repnz
mov
aam
cmc
sub
pop
test
sbbl
mov
jge
scas
mov
mov
mov
nop
mov
sub
lret
ret
stos
out
dec
mov
xor
xchg
sbb
std
cli
test
outsl
sub
ds
sub
dec
or
hlt
cmp
repnz
pop
sub
fs
movzwl
inc
pop
mov
insb
mov
jb
mov
cmp
stc
xor
out
mov
mov
std
xchg
bound
out
mov
cmp
cli
data16
nop
and
mov
idivl
test
push
mov
inc
sti
mov
add
ret
jecxz
mov
nop
or
div
sub
sbb
adc
fsubl
lods
addb
negb
ret
pop
mov
jmp
inc
int
shlb
ds
je
outsl
lock
ja
inc
jg
sub
add
repz
cli
jb
push
add
sbb
sub
sbb
jae
adc
mov
bound
mov
movsb
popf
add
into
lret
icebp
insl
out
insb
or
push
cld
xchg
jno
out
mov
mov
test
int
outsl
mov
mov
aam
cli
jl
sarb
add
add
fadds
lea
xor
inc
cmp
inc
fs
and
aaa
jbe
fdiv
mov
inc
jbe
mov
cmp
push
cld
xchg
idivb
mov
flds
inc
repz
dec
inc
into
push
sub
push
add
sbb
jne
xchg
bnd
stos
lods
push
cld
push
xchg
sub
adc
sbb
and
les
insl
mov
mov
push
inc
testb
ljmp
dec
sub
jmp
push
int
shlb
repnz
loop
adc
cmp
mov
xchg
ja
leave
sub
jo
mov
dec
inc
cmpsl
mov
xor
in
pusha
mov
je
sub
shrl
imul
sub
repnz
negl
jle
shrb
out
stos
inc
push
in
js
fidivl
out
jbe
ja
mov
and
rcll
pop
or
in
mov
or
push
mov
lahf
xchg
test
lock
les
or
lahf
adc
lcall
mov
loop
inc
hlt
inc
lret
daa
mov
loop
cmp
ljmp
pop
xor
filds
adc
add
ljmp
fildll
mov
andl
test
inc
fsts
inc
pushf
xchg
push
cld
loopne
in
adc
or
movsb
xchg
aaa
cmp
dec
push
add
fs
aas
repz
jecxz
stos
jb
out
mov
cmp
mov
inc
and
daa
ds
mov
cltd
push
gs
mov
and
dec
lret
mov
and
pop
inc
das
xchg
mov
je
popa
mov
mov
pop
out
xchg
inc
repnz
mov
test
mov
xchg
out
inc
popf
add
out
cli
rorl
add
arpl
adc
movsl
imul
cwtl
aad
lea
xor
push
pop
ja
inc
pop
js
push
sbb
push
and
sub
mov
fsts
mov
iret
movsl
xor
mov
imul
out
jnp
fwait
mov
push
scas
ljmp
adc
clc
in
mov
sbb
fisttpll
jge
add
hlt
push
mov
lret
inc
xor
outsb
test
fidivs
jbe
lods
test
fimull
lret
shlb
scas
lea
dec
rep
pop
xor
and
ja
test
lods
push
lcall
sub
outsl
sub
fwait
dec
xor
add
enter
inc
jae
imul
rcrb
xor
xor
lret
inc
inc
and
jg
imul
lods
int
mov
jecxz
mov
cli
or
fdivrs
loop
and
imulb
sub
shl
mov
fcmovnb
stc
orl
xor
scas
loope
inc
jmp
sub
sub
mov
shlb
arpl
mov
mov
hlt
mov
daa
call
pop
lret
adc
cmp
sub
sbb
or
jl
jl
jne
shrb
adc
mov
stc
fidivs
push
jbe
cwtl
jae
fcoml
loope
jae
pushf
cmp
jmp
stos
test
and
icebp
sbbl
inc
mov
dec
pop
ss
insl
inc
xchg
cld
sti
pop
xlat
out
cwtl
jg
add
push
mov
adc
into
adc
test
lods
decl
jb
dec
int3
loopne
sub
repz
sub
xchg
mov
mov
arpl
add
ss
les
push
cmp
push
mov
inc
les
nop
mov
in
inc
dec
jmp
movsb
dec
mov
subl
push
negl
fldcw
ds
hlt
push
scas
loop
pop
sbb
push
pop
loopne
movsb
repnz
or
in
dec
or
test
repnz
icebp
jge
sbb
outsb
je
dec
std
push
adc
adc
mov
push
iret
aaa
push
sub
mov
or
push
cltd
or
in
jnp
movsl
outsl
jle
dec
lcall
outsb
into
or
inc
daa
arpl
subl
fstpt
mov
inc
into
mov
push
xor
push
cwtl
cmp
ret
and
fnstcw
ds
nop
lods
cmp
xor
ret
loope
lret
movsl
mov
stc
cmp
sti
into
iret
and
mov
push
lds
popf
cmpsb
je
xchg
into
or
shl
stos
push
cmp
fs
es
pusha
iret
stc
pop
ret
jnp
add
in
mov
inc
scas
outsb
mov
pop
in
pop
mov
sub
pop
insl
mov
pop
hlt
outsb
aad
rcrb
xor
push
outsb
inc
mov
scas
jno
cmp
dec
mov
xor
push
loopne
mov
bound
les
bound
sahf
mov
cmp
push
fs
into
pop
xor
and
pop
cld
pop
test
cmpsb
jmp
push
shr
insb
leave
orb
sbb
in
cmpsl
mov
nop
loopne
pop
sahf
sarl
fdivrl
or
and
add
push
ss
pop
jnp
add
iret
pushf
lods
pop
mov
enter
xor
mov
test
cmpsb
cwtl
insb
or
imul
sahf
sbb
sub
cmp
jns
xor
lods
jp
out
stc
inc
mov
mov
mov
cmp
cli
and
std
dec
mov
in
lret
mov
fidivs
cmpsb
push
shlb
pop
add
out
cmp
aam
btr
adc
push
push
movsb
leave
xor
das
jnp
pop
or
and
and
add
cmp
dec
push
xor
xchg
testl
xchg
std
inc
insb
lret
sub
aad
movsb
cmp
dec
push
sub
repz
xor
lcall
sub
mov
xor
adc
into
pop
out
xchg
mov
fnstsw
arpl
dec
sub
sub
testl
and
jp
test
mov
adc
test
pop
sti
or
pop
xlat
in
mov
adc
adc
adcl
stc
mov
jle
into
and
add
jle
ja
rcrb
inc
dec
pop
movsb
xorl
and
stos
mov
aaa
xchg
jmp
rorl
jp
and
leave
jbe
outsb
popf
inc
jp
jecxz
es
adc
arpl
lock
rorb
adc
jne
sub
push
sbb
ficomps
sub
test
adc
jno
pop
xchg
cli
int3
push
negb
add
jns
mov
adc
fiadds
sbb
push
rclb
int3
dec
or
mov
xchg
bnd
addr16
lret
mov
push
jno
nop
mov
stos
cmp
rcl
mov
push
out
sbb
in
ss
and
mov
sti
adc
hlt
rcrb
out
push
loop
movsl
sub
sub
sub
xchg
stos
loopne
or
lret
mov
in
adc
sub
mov
add
bound
and
sbb
loopne
jno
in
cwtl
rol
pop
aam
cmp
adc
dec
jnp,pt
jae
dec
jb
in
xor
loopne
and
mov
mov
sub
add
test
addr16
add
adc
ss
ret
mov
pop
pusha
xchg
cmc
mov
sti
cltd
mov
stos
cmpsb
inc
into
push
cld
call
dec
inc
xchg
pusha
es
leave
lea
inc
sub
push
push
fisubs
popa
insb
pop
data16
es
in
mov
jo
clc
pop
hlt
jne
push
rcr
in
cmpsl
and
in
cld
mov
mov
addl
stos
xor
or
mov
scas
xchg
lods
sbb
push
sti
lods
push
xor
mov
ljmp
xor
pop
mov
xor
sbb
mov
arpl
aaa
out
adc
imul
inc
push
or
cmp
mov
inc
xor
dec
mov
inc
out
scas
xchg
mov
gs
enter
lods
outsl
mov
pop
insb
fstpt
cli
sub
vrcpps
call
jp
adc
sbb
loopne
cmp
xor
cmpsl
mov
cmp
mov
inc
inc
xor
or
sub
les
popf
dec
mov
fsubs
inc
negb
xchg
push
xor
int3
int
cmp
and
adc
nop
mov
shrl
xor
xor
sub
push
enter
dec
dec
inc
fwait
pop
inc
mulb
stos
sbb
dec
inc
inc
outsl
andl
adc
iret
mov
push
mov
cmp
adc
mov
pop
or
pop
rorl
jle
fistl
jge
popl
jne
in
test
push
ds
add
mov
push
pop
lcall
push
and
add
or
in
clc
ret
dec
lret
testl
inc
cmp
enter
mov
push
jle
popa
cmpsb
into
sub
jns
cmpb
insb
mov
ficoml
and
cmp
in
dec
xorl
cli
fwait
push
nop
dec
jp
fcoml
dec
fldl
mov
das
or
cmp
aas
les
sbb
xchg
inc
push
mov
sarl
bnd
cmp
insl
xor
push
aam
cwtl
dec
sar
pop
out
mov
inc
outsb
jl
cli
aas
pop
js
cmp
fadds
mov
js
sub
cmp
popf
es
rcrb
in
xor
push
insb
leave
ret
pusha
or
xchg
dec
jae
add
mov
jg
test
outsl
imull
lret
ret
arpl
ss
fcoms
outsl
xchg
xchg
and
ja
decl
aad
xchg
jnp
adc
push
loope
test
sbb
sub
xor
sbb
fsts
mov
div
jbe
lods
lock
jo
dec
addr16
inc
jbe
xor
ljmp
movsb
or
xor
mov
aaa
jmp
outsb
out
mov
sub
push
outsl
fcmovbe
push
xor
cmc
xchg
insb
pop
mov
in
int
rorb
addl
jmp
xchg
arpl
jge
mov
orb
pop
push
jno
xor
jae
sub
add
lods
ljmp
add
pop
sbb
js
repz
lret
es
push
jnp
and
sub
xchg
rol
cmpsl
xchg
bound
rolb
dec
in
mov
ja
mov
lret
popa
and
add
push
jmp
mov
aas
cmp
stc
ret
icebp
insl
scas
ficoms
or
lods
and
int
lods
sarb
out
pusha
mov
cmpsl
sahf
out
sbb
or
dec
cli
sbb
call
push
adc
test
pusha
or
xchg
iret
shr
jle,pt
scas
cmpsl
push
lahf
test
dec
andb
jnp
xchg
out
popf
push
adcl
adcl
lret
xchg
xor
int3
cli
cmpsl
out
imul
sbb
jo
and
cltd
into
xchg
loopne
jae
sahf
ja
sub
sub
inc
imul
or
pop
into
pop
testl
push
sub
xor
inc
dec
loop
aam
push
mov
dec
in
mov
cmpsl
movsl
lea
bound
pop
mov
es
std
outsl
jmp
int3
adc
mov
mov
push
xchg
xor
xchg
xor
test
ror
or
xchg
int
jne
xor
in
jle
lods
lods
mov
les
and
dec
pop
cmp
mov
mov
or
inc
cs
and
aas
dec
syscall
ffreep
mov
dec
dec
mov
scas
mov
subb
cmpsb
xor
mov
add
jl
pop
inc
es
mov
or
pop
aaa
mov
xor
dec
pop
jns
and
inc
dec
inc
inc
cmp
sbb
insl
pusha
arpl
sbb
into
jmp
mulb
add
and
loope
shr
push
je
dec
andl
fs
repz
enter
xchg
ficompl
dec
hlt
sub
lea
push
xor
dec
andb
movsb
hlt
sbb
xchg
ljmp
sub
outsb
les
loop
and
mov
cld
icebp
adc
out
mov
hlt
hlt
fwait
mov
xchg
shlb
xchg
in
and
cmp
stos
xchg
std
ljmp
loop
cmp
pop
add
cmpsb
jl
and
pop
movsl
adc
or
xor
push
jp
fidivrl
or
hlt
fsubs
aas
pushf
sbb
push
ja
stc
xchg
stos
out
repz
push
mov
cmp
repz
dec
out
jae
aaa
and
movsl
and
or
repnz
or
jae
outsl
int
xor
jmp
ljmp
dec
adc
dec
xchg
xor
in
outsb
insb
leave
push
lods
and
sbb
fcomps
sbb
or
into
jne
roll
cmpsb
or
push
xchg
adc
dec
je
jns
lahf
call
scas
pop
mov
fsubl
jae
xor
sbb
xchg
mov
mov
dec
push
lahf
adc
inc
push
dec
pop
rcrl
test
dec
test
jbe
mov
inc
jg
xor
in
or
stc
mov
mov
and
out
inc
test
adcl
std
mov
cmp
push
fildl
fbstp
stc
push
lea
cmp
mov
xor
loop
fisttpl
lret
sub
rolb
jo
sub
loop
idivl
xor
dec
cmp
xor
loopne
dec
jge
das
lods
sub
call
xchg
inc
xchg
push
dec
pop
push
xchg
mov
pop
mov
sub
dec
cli
push
lret
xchg
daa
jmp
dec
rolb
push
hlt
scas
push
xchg
fisubrl
call
xchg
inc
shll
mov
fs
aas
pop
cmp
mov
sbb
sarl
scas
stos
out
sbb
dec
orb
jl
ds
cmp
call
ret
push
cmp
data16
add
mov
and
lret
xor
pop
mov
call
cmc
xchg
and
pusha
xor
ret
test
xchg
push
lods
jb
xor
adc
ja
pop
push
sub
mov
pop
adc
mov
jecxz
push
sub
adcb
icebp
xchg
add
movsb
fdivrp
add
xor
mov
roll
jmp
aaa
jno
dec
loop
and
mov
mov
leave
xlat
push
sbb
dec
adc
mov
push
roll
mov
hlt
adc
lea
dec
jnp
sbb
ror
iret
pop
popf
push
xchg
fdivrs
flds
sahf
push
ss
add
int
aas
mov
in
adc
je
stos
xchg
call
call
loope
cmp
or
mov
dec
fldenv
stc
adc
aaa
sbb
sbb
cmp
pop
and
mov
or
jmp
iret
mov
sbb
xor
cmpsl
push
shlb
jo
scas
pushf
es
adc
pusha
dec
fcoml
adc
and
enter
add
adc
mov
out
xor
xor
das
cmp
push
jae
push
add
loope
or
jo
and
psubsw
in
aam
aam
or
dec
inc
out
ja
pop
xchg
jle
test
imul
jo
addr16
jle
cltd
jl
or
out
test
repnz
jp
test
bound
int
mov
mov
repnz
dec
and
mov
pop
adc
sti
in
and
sbb
pop
adc
sbb
fistl
mov
xor
int
add
pop
push
test
pop
ljmp
outsb
fcmovb
jnp
scas
xor
cmp
inc
popf
add
xchg
cmpsb
mov
xor
negl
and
push
cmpsl
jne
cs
mov
xchg
lcall
mov
xchg
rorb
push
out
mov
sub
int3
cmp
mov
mov
dec
std
out
add
rorb
arpl
add
pop
cwtl
popa
andl
stos
mov
jg
xor
lcall
mov
jl
clc
imul
fwait
xor
mov
jmp
sar
out
arpl
gs
add
jbe
cmpsl
or
fsubrp
inc
xor
mov
ficompl
push
mov
xlat
lret
pop
or
ficomps
xchg
mov
and
xchg
cmp
ret
popa
enter
inc
jbe
and
xchg
ljmp
jns
addr16
cmp
push
jne
pop
or
fwait
data16
xor
lds
mov
ret
lods
cmpb
mov
fs
mov
pop
mov
mov
and
into
repnz
fistpll
add
xor
rcr
movsl
add
fcoml
std
cmp
mov
xchg
shrl
xor
jnp
divl
js
scas
push
push
lods
mov
nop
iret
sahf
push
hlt
dec
rorb
adc
inc
sbb
loopne
sub
jo
pushf
movsb
insl
mov
sub
pop
adc
mov
mov
adc
mov
out
push
jl
pusha
mov
xchg
inc
addr16
jno
shlb
inc
std
and
int3
aas
push
sub
shll
mov
ror
hlt
or
add
lret
xor
inc
lods
movb
movsl
rolb
fidivrl
mov
rolb
mov
and
inc
xchg
out
pop
xchg
adc
test
test
mov
inc
sbb
jmp
sbb
push
mov
nop
aam
insb
mov
insl
mov
enter
dec
mov
ljmp
cmc
mov
jmp
jge
xchg
frstor
popa
pop
pop
pop
pop
aaa
inc
popa
and
roll
cwtl
repz
adc
xor
ja
mov
xchg
and
push
sub
loop
pop
data16
push
cmp
inc
mov
push
jb
fwait
bnd
stc
jp
sub
dec
hlt
inc
mov
int3
int3
sub
mov
sub
mov
push
sub
sbb
popa
mov
xchg
mov
addb
repz
pop
nop
and
in
gs
xchg
lds
jge
sbb
add
pop
xchg
enter
stos
test
int
push
and
dec
inc
or
push
xlat
sub
xor
ss
cmc
fcompl
push
outsb
test
or
sbb
pop
mov
sahf
and
pop
es
add
and
jecxz
out
outsb
mov
pop
adc
adc
xor
cmp
sub
enter
mov
sbb
leave
rorl
jne
adc
push
and
insb
jecxz
lret
loopne
mov
aad
jmp
mov
jnp
sub
mov
lods
mov
or
cmpsb
fistpll
cs
jmp
aam
sub
mov
pop
jp
je
push
jecxz
scas
cwtl
scas
xor
mov
jle
or
adc
icebp
dec
inc
mov
cmp
clc
scas
xchg
int
idivl
mov
adc
lods
icebp
cmp
and
shrb
inc
cmp
xchg
data16
sbb
aas
mov
in
movsb
jg
mov
pusha
fstps
dec
cwtl
shrb
out
xor
ds
cmpsb
dec
inc
scas
jg
pop
idivl
pushf
lock
leave
cmp
aam
cmpb
cmp
sbb
mov
mov
sahf
and
jge
lret
lds
sub
test
iret
sub
pop
cmp
loop
and
stc
pop
and
xor
jmp
inc
push
and
sub
fidivl
das
mov
xchg
add
test
cmp
repz
fdivl
in
push
jge
aas
popf
ja
insl
leave
fwait
mov
pop
repnz
in
inc
mov
loop
into
xor
rep
outsl
test
inc
neg
mov
push
inc
push
movsl
aaa
mov
das
cmc
int3
xor
xor
xchg
dec
mov
jae
mov
jns
icebp
add
dec
mov
daa
or
sbb
mov
cmp
lahf
inc
pop
xor
and
mov
ds
or
cmp
sahf
lahf
stos
xor
fs
cmc
jecxz
push
adc
push
mov
jo
xor
xlat
sbb
add
add
ret
mov
cwtl
push
mov
gs
scas
push
gs
or
pop
xchg
cltd
insl
loopne
add
lea
and
push
adcb
xor
sti
jmp
fiadds
test
push
sarb
cmp
jae
enter
xor
daa
jbe
add
pushl
ret
lcall
lahf
push
hlt
out
adc
jb
fists
out
popf
decb
loopne
imulb
cmp
adc
pop
sbb
mov
notb
aaa
push
loope
sub
or
in
push
cmp
les
or
jae
inc
and
cmc
sbb
cli
mov
add
jne
inc
repnz
push
mov
iret
test
and
test
or
out
lret
dec
enter
out
andl
pop
fsubr
nop
popl
sub
jne
adc
xchg
scas
movsl
fmul
idiv
fildl
dec
cwtl
lods
out
jp
in
movb
int3
sub
jns
push
scas
sti
lods
jle
iret
dec
sbb
out
adc
mov
mov
lea
cmp
in
push
jecxz
push
or
scas
xchg
loopne
mov
mov
ret
sahf
pop
pop
cmp
sti
data16
outsb
dec
jmp
out
ret
mov
cli
iret
push
mov
jbe
les
jb
sub
cmp
push
push
dec
aam
testb
fs
cmpsb
xchg
mov
adc
sub
in
into
or
hlt
test
mov
add
mov
adc
addl
pop
sub
mov
jle
test
mov
sub
loop
lods
pusha
adc
add
cmpsb
mov
call
cmp
arpl
pop
push
insl
dec
adc
adc
sarl
cmp
iret
negb
add
cmp
mov
inc
xchg
ljmp
mov
movsl
inc
ja
mov
aad
or
out
adc
dec
aam
cmp
mov
repnz
fucom
pop
mov
scas
test
lds
mov
and
loopne
cmc
stos
dec
xor
add
jbe
test
dec
repnz
fcomps
mov
mov
imul
mov
shlb
dec
rolb
dec
lock
leave
sub
xchg
dec
sbb
std
ja
test
clc
jle
imul
cld
pop
repz
mov
lods
popf
ss
or
push
cld
jle
mov
hlt
inc
push
and
or
imul
rol
and
stos
push
cmp
fs
add
push
in
and
mov
ja
popf
lahf
stos
sub
jg
nop
pop
cld
std
fadds
cmpsl
movsb
outsb
inc
dec
inc
xchg
dec
andl
jecxz
dec
mov
push
mov
enter
popf
sub
ret
push
inc
in
iret
and
pusha
xchg
call
sahf
ds
jo
fs
pop
pop
dec
ds
mov
shll
lcall
int
dec
lods
add
sub
jge
mov
fs
inc
and
subl
daa
xchg
cmp
pop
push
jg
dec
adc
and
sub
aaa
les
dec
xchg
mov
pusha
out
sub
into
pop
mov
popa
sub
cli
mov
inc
pop
popf
sbb
into
repnz
lods
sbb
andl
rep
movsb
mov
aad
clc
adc
scas
sub
sti
fwait
and
adc
adc
inc
dec
scas
ja
notb
and
ds
aam
pop
hlt
push
push
dec
sub
aaa
push
mov
pop
xchg
mov
inc
dec
out
pop
loop
dec
mov
mov
and
js
mov
pop
xlat
lods
clc
ss
hlt
ss
vaddsubpd
xchg
mov
aaa
mov
jno
pop
scas
stos
sbb
cmpb
popf
jmp
in
dec
or
mov
das
shl
test
testl
sbbb
sbb
sub
punpckhbw
pop
push
mov
nop
sub
xchg
dec
imul
je
mov
mov
mov
movsl
rolb
cmpsb
sub
ja
mov
notl
test
faddp
sub
pop
test
ret
lret
jecxz
mov
inc
mov
daa
inc
or
xchg
and
pop
jo
jg
jns
sub
aam
mov
cmp
in
pop
sbb
and
add
pop
add
or
ds
test
test
xchg
arpl
pop
clc
adc
int
ljmp
in
pop
imul
into
cmc
inc
add
aaa
lret
fcmovnu
loopne
push
loopne
jns
lds
xor
dec
fwait
js
or
sbb
arpl
push
or
cltd
or
inc
sub
jbe
repnz
mov
js
mov
loopne
cmpsb
push
inc
mov
jo
push
dec
xorl
mov
xlat
dec
outsl
xchg
xor
push
dec
adc
lret
aad
movsl
outsl
mov
aad
xor
fs
stos
dec
rcll
sbb
sbb
push
dec
imul
mov
sub
xor
repz
cmp
test
faddl
add
xor
mov
aas
inc
pop
cs
sub
jb
lret
and
icebp
dec
imul
rorb
push
nop
push
cmp
es
nop
into
bound
jae
bound
add
imul
test
ficompl
cmp
cmp
cmp
adc
in
mov
popf
xchg
fldl
xchg
daa
xchg
mov
stc
fucomip
push
adc
mov
cli
aad
icebp
imul
iret
lret
lock
mov
mov
mov
test
push
push
addr16
mov
jl
outsl
in
leave
pop
mov
insl
sbb
ja
or
icebp
jns
cmpsb
add
sub
repz
push
pop
inc
movsb
push
test
mov
es
fs
fucomip
mov
stc
sub
xchg
jmp
mov
dec
out
sbb
mov
xchg
clc
push
add
cwtl
mov
mov
or
imul
jle
daa
pop
inc
jecxz
movsb
loop
outsb
test
clc
mov
popa
scas
loop
dec
pop
or
ss
cltd
in
lock
pushf
adc
jge
cmpsb
lea
sbb
pop
jb
rcrl
cmp
xlat
sbb
out
call
add
mov
adc
rcr
mov
cmpsl
mov
xchg
xor
add
cltd
mov
add
fldcw
adc
loope
testl
mov
lahf
int
out
ret
sbb
imul
out
imulb
std
movsl
push
fdivrl
cmp
mov
jge
addr16
mov
mov
pushf
aad
aas
nop
enter
push
out
shlb
inc
pushl
add
sub
jecxz
movsl
mov
adc
arpl
in
aad
inc
cld
das
and
stc
push
sub
mov
stc
adc
insb
mov
add
stos
inc
push
fcompp
or
jbe,pt
aaa
or
js
aad
lret
push
cwtl
lea
push
sbb
and
adc
pop
les
or
mov
scas
xchg
mov
out
out
dec
psubusw
sahf
mov
xor
icebp
jmp
movsl
scas
nop
popa
test
sub
push
add
push
test
pushf
xor
lahf
mov
adc
push
mov
xchg
pop
jne
sbb
pop
pop
xchg
cld
sbb
dec
scas
pop
je
repz
or
push
push
arpl
sti
fsubl
test
xor
or
xor
pop
xchg
mov
xor
push
sti
jle
sbb
int
sub
fstp
sub
mov
rclb
imul
jmp
mov
out
mov
add
mov
bound
push
data16
sarb
in
lds
mov
mov
mov
sbb
jl
xlat
add
popa
sbb
faddl
clc
iret
test
in
pop
sub
jae
popf
int3
stos
jae
sub
mov
lea
int
xor
popf
hlt
ljmp
mov
xchg
in
je
adc
mulb
mov
scas
adc
sub
fcmovb
push
ja
adc
cli
push
xchg
mov
pusha
aad
faddl
lds
jnp
xchg
sahf
jne
xchg
pop
adc
aam
out
lret
mov
and
popf
lret
xlat
pop
dec
popa
les
push
mov
xor
mov
push
push
mov
mov
mov
push
and
pushf
fcoml
test
aam
test
adc
mov
mov
push
leave
push
jmp
push
jb,pn
xor
lods
sahf
in
cltd
mov
hlt
jle
dec
jmp
sbb
push
push
xor
push
inc
enter
mov
arpl
or
movsl
shrl
mov
in
and
addb
in
xor
xchg
testb
or
jns
mov
rolb
es
out
aaa
mov
call
lcall
lds
pavgw
jge
sahf
popf
inc
outsb
lds
cmpsb
push
pop
mov
imul
jbe
int
mov
inc
pop
testb
incl
pop
rorl
jmp
lret
mov
mov
sub
jle
jmp
icebp
mov
mov
jle
xor
sbb
and
pop
hlt
scas
into
jb
inc
or
jne
mov
stc
shrb
cltd
fmull
mov
ss
jle
lret
sbb
dec
in
les
dec
ret
jno
push
inc
xor
mov
dec
arpl
shlb
mov
ret
enter
out
mov
adc
jge
sbb
popa
xorl
pop
ljmp
or
mov
int
xchg
push
cmp
fs
sub
sbbl
add
testb
lods
pop
insl
mov
sbb
inc
xchg
sbb
aas
cmp
add
mov
lods
and
icebp
mov
xor
and
fildl
call
cwtl
push
scas
push
into
sbb
pop
in
jg
push
dec
test
add
jecxz
cmp
stos
int
je
sahf
dec
jo
addb
cwtl
and
inc
xchg
movsb
pop
fwait
add
mov
js
scas
inc
xor
filds
data16
mov
mov
fs
dec
jns
mov
inc
xchg
pop
data16
or
insl
push
push
inc
imul
inc
cmp
sbb
mov
xchg
push
ja
lcall
cwtl
push
aam
stc
dec
xor
fwait
inc
cmp
mov
adc
xor
xchg
movsl
inc
je
lcall
cmc
push
inc
sub
test
aas
lcall
sub
mov
fs
mov
cwtl
rclb
cpuid
sbb
adc
adc
inc
call
outsl
adc
mov
lock
cs
inc
test
and
das
push
mov
aaa
iretw
dec
gs
fisubs
fldcw
inc
sbb
push
mov
dec
cmpl
popa
sbb
or
sub
or
fisttpl
in
insb
pop
xchg
mov
mov
mov
mov
dec
adc
adcb
data16
in
stos
repz
ss
jg
mov
scas
mov
sbb
insl
push
lds
sbb
das
mov
xchg
or
adc
bound
jle
jmp
push
jae
xor
xchg
call
adc
xchg
xchg
addr16
mov
adc
inc
jae
and
mov
les
push
xchg
aas
pop
jne
pusha
imul
pop
xchg
adc
shr
pop
aas
iret
jno
pop
push
mov
push
scas
dec
in
dec
std
aad
cmp
pop
adc
icebp
lock
xchg
stos
ljmp
into
cmp
in
jno
out
ja
dec
int3
mov
dec
cwtl
popl
and
test
mov
scas
ja
pop
sub
dec
inc
sub
push
adc
test
jge
je
xchg
cmp
mov
mov
and
pusha
push
jl
adc
push
lret
shll
ss
cmp
mov
pop
jge
mov
push
aam
jne
insb
ljmp
clc
fsts
jl
mov
arpl
scas
mull
js
cmp
dec
hlt
insb
adc
xchg
pop
out
mov
push
je
mov
mov
call
fcmovb
orl
pop
jmp
daa
imul
lahf
lods
out
cmp
pop
cmp
addr16
xchg
pop
call
jae
mov
push
rcl
addr16
jae
das
cmp
stos
mov
cld
jnp
sub
and
push
popf
mov
or
pop
pop
int
jle
mov
mov
sub
loopne
ret
xor
test
add
test
pop
inc
inc
sbb
rorb
addr16
cli
xchg
fs
xor
inc
cli
lcall
nop
and
jne
stos
sbb
stos
aam
mov
loopne
jb
sub
dec
mov
cs
je
pop
repnz
mov
fistpl
jmp
cs
push
out
div
ret
and
jae
lcall
scas
jmp
nop
loope
jge
jle
cmpsl
jne
mov
sbb
mov
xchg
aam
mov
xor
mov
mov
jbe
leave
lea
movsb
popa
add
mov
shll
dec
push
push
add
jp
fcmovnu
sti
andb
aad
jle
cmp
jb
push
gs
mov
call
xor
fidivrs
stos
sub
jnp
jmp
add
pop
pop
fimuls
shlb
mov
adc
mov
mov
or
lock
push
pop
neg
sbbl
mov
fadd
dec
pop
dec
stos
int
dec
dec
mov
lods
mov
mov
arpl
lret
mov
xchg
int3
rol
mov
pop
pop
mov
fdivl
xor
aad
cmp
jmp
ljmp
ds
cmpsl
stc
and
mov
mov
roll
out
js
jl
lods
fidivl
adc
loop
mov
lcall
movsb
adc
mov
push
addl
jp
sahf
mov
mov
es
pop
pusha
das
sub
dec
in
std
cs
push
rorl
repz
movsl
out
testl
inc
pop
sti
shrb
jne
pop
xor
dec
fwait
hlt
cmpsl
xchg
jmp
inc
movsb
repz
inc
stos
mov
mov
xlat
add
loope
sbb
in
dec
or
sub
in
das
inc
pop
adc
lret
ret
call
insb
dec
sub
mov
push
push
xchg
scas
popf
movsl
xchg
decb
iret
idivb
iret
rorb
inc
cmp
or
inc
pop
pop
adc
add
test
aas
das
outsb
mov
pushf
xor
lds
popf
xlat
mov
xchg
sub
enter
orps
push
or
arpl
rolb
pmullw
dec
outsl
dec
sar
dec
xchg
pop
in
xlat
jns
inc
pop
aas
out
sahf
sbb
sbbl
or
cmp
jp
push
sub
adc
mov
mov
mov
fwait
int
jns
mov
dec
adc
aaa
mov
or
xor
ja
jg
jl
add
in
mov
mov
xchg
in
sarb
cmpl
fcoms
dec
icebp
repnz
out
lea
mov
je
and
rcrl
scas
xor
dec
clc
jmp
nop
dec
lret
jb
adc
jno
add
fwait
pop
cli
js
pushf
pop
adc
jl
adc
lods
arpl
adc
push
xchg
adc
cmp
adc
fsubl
mov
or
xor
lock
xor
pop
cltd
aaa
and
jg
inc
mov
sbb
sbb
xor
ja
pop
adc
sbbb
sub
jbe
push
mov
insb
add
sub
nop
push
and
movsl
movsl
adc
adc
mov
mov
push
jne
call
cmp
rep
ret
jnp
test
cli
xchg
loop
or
movd
xchg
int
cmc
push
pop
in
das
sbbl
jb
pop
inc
dec
sbb
jl
xlat
out
in
outsb
or
jmp
jge
add
arpl
daa
std
stos
cmpsl
mov
test
aaa
sarb
push
adc
fwait
daa
pop
mov
hlt
xorl
std
pop
inc
push
fs
adc
mov
xchg
mov
mov
mov
mov
jmp
cmpsl
fiaddl
cmp
call
xor
jmp
adc
cs
pop
push
xor
or
pop
push
jp
movsl
out
pop
shr
xchg
loopne
xor
dec
cmp
xchg
or
in
cmc
mov
mov
inc
sbb
daa
push
out
mov
or
insb
jno
out
pusha
add
ja
or
add
outsl
fsubrs
inc
lea
sub
cmp
sub
out
fidivl
or
mov
stos
aad
push
push
mov
push
pop
push
popf
jbe
mov
dec
jle
jp
js
ret
inc
mov
aam
jb
add
repnz
dec
xor
or
ret
jmp
lret
mov
xor
fldcw
jns
and
xchg
or
sbb
out
xchg
mov
mov
jne
ljmp
js
stc
call
ret
cmpsb
sub
xor
cmpsb
or
scas
cmpsl
movsb
mov
stc
out
sbb
mov
push
inc
aaa
loope
xchg
jnp
ds
idivb
test
cmp
addr16
dec
cmpsl
sbb
dec
xor
push
adc
popf
push
mov
dec
ja
adc
std
jo
inc
shrl
jnp
hlt
xor
and
and
adc
cmp
imul
sub
movsb
sarb
into
push
mov
rcrb
lea
xchg
les
in
jno
pop
ljmp
sbb
leave
mov
ljmp
sbb
sbb
fistpl
cmp
jo
dec
popf
push
mov
pushf
push
and
lods
out
scas
or
test
jge
sbb
cmc
test
icebp
shlb
adc
hlt
xor
lret
mov
sbb
adc
mov
pop
pop
xor
jmp
aam
cmc
outsl
pop
out
js
adcb
pop
mov
mov
in
inc
jbe
stc
xor
lds
test
sbb
aaa
mov
test
mov
test
mov
movsl
and
inc
adc
xchg
leave
adc
in
lcall
pop
pop
in
dec
neg
les
iret
fdivr
adc
add
sahf
rcr
and
dec
fildll
xchg
xlat
pop
sti
sub
cmpsb
loope
cmpsl
mov
push
jle
xchg
add
mov
mov
fadds
testl
pop
mov
pop
xor
mov
push
scas
pop
pop
int
jb
stc
rcr
sti
jmp
cs
out
add
pop
popa
dec
xchg
push
push
dec
and
aad
sub
rolb
es
stos
mov
mov
sti
insl
mov
call
in
sahf
xor
adc
mov
aaa
mov
inc
fisttpll
cmp
incl
mov
lret
mov
push
lea
mov
fucom
push
int3
out
aaa
lcall
jl
cmp
ds
arpl
mov
mov
mov
pop
pushf
and
mov
mov
push
fdivs
sub
pop
push
jge
mov
insb
or
push
es
mov
bound
out
sbb
pop
push
mov
sbb
pop
orb
jl
enter
out
push
bound
mov
popa
and
outsb
in
xor
and
jb
sbb
jb
mov
mull
sub
xlat
and
test
xchg
nop
out
dec
negl
mov
xchg
inc
mov
push
sbb
mov
xchg
add
mov
cmp
clc
mov
and
adc
add
sbb
push
adc
cld
add
sbb
les
xor
xchg
fiaddl
mov
pop
push
sub
scas
vorpd
mov
xchg
mov
les
push
sub
mov
adc
dec
inc
pop
xor
lea
popf
repnz
or
mov
push
lock
pop
sbb
pop
jbe
xchg
lret
test
lret
inc
test
pcmpgtd
mov
mov
inc
and
mov
push
mov
mov
inc
mov
pop
sbb
xor
inc
mov
out
pop
jno
in
int
fwait
mov
jne
mov
in
mov
shrb
adc
aad
and
jecxz
or
scas
out
ficomps
inc
andb
repz
out
jnp
xchg
mov
arpl
add
pop
outsb
int3
sub
push
mov
add
cmp
pop
sbb
lret
imul
jne
push
sbb
inc
out
loope
lcall
ss
xchg
sahf
jns
leave
fwait
xor
sub
decb
xlat
mov
aas
fnsave
cli
in
sar
mov
add
jle
out
mov
dec
mov
cmpsb
icebp
cmpsb
and
cmp
int
pusha
xor
js
mov
pop
cmpl
addr16
and
pop
pop
fistps
idivb
in
bound
fisubrs
push
adc
lock
pop
lret
call
push
cmp
ds
rcrb
sarb
inc
jnp
and
sub
inc
mov
out
lcall
dec
cmp
mov
adc
sub
mov
or
imul
cld
test
fdivrp
inc
pop
into
jp
pop
xchg
lahf
and
pop
adc
pushl
mov
inc
sbb
adc
add
scas
cli
cmp
outsb
into
aas
jg
in
fsubrs
lcall
stc
pop
lret
das
stos
test
xchg
or
lods
adc
out
add
fcoms
and
mov
stos
add
stos
and
ljmp
push
sub
mov
out
fstpl
adc
call
dec
pushf
inc
cmp
mov
push
imul
mov
adc
push
jle
mov
xor
insb
sub
enter
push
mov
push
adc
pop
ret
sub
inc
test
sbb
js
movsl
or
cmp
push
pop
push
add
xor
mov
or
mov
mov
xor
stos
loop
in
icebp
bound
sbb
adc
call
not
sbb
inc
adc
out
dec
push
aam
nop
das
int3
xchg
das
ss
movsb
aam
xchg
popf
test
push
fiaddl
mov
pushf
sub
or
mov
test
sub
push
xor
out
jbe
mov
adc
adc
iret
dec
push
les
xorl
loope
push
push
and
scas
cmp
test
hlt
nop
jle
arpl
and
addl
inc
add
sbb
les
mov
aad
push
fcompl
inc
loop
lods
int
xchg
jbe
repnz
pop
mov
pop
call
sbb
jae
popf
nop
mov
lods
inc
pop
dec
cmp
and
xchg
imul
lea
ret
js
inc
pop
mov
push
or
sbb
xlat
outsb
clc
sub
mov
xchg
outsb
cmc
hlt
sub
xchg
in
f2xm1
sbb
inc
mov
sub
inc
inc
mov
or
push
dec
mov
sbb
lods
inc
sub
out
push
jb
rolb
out
jge
adc
clc
dec
arpl
mov
cmpsb
cmp
aad
jmp
push
xor
jo
mov
mov
xor
mov
es
push
mov
cltd
sti
fucom
mov
arpl
repnz
add
adc
sbb
adc
scas
fadds
scas
add
mov
sub
cld
adc
ds
faddl
int
aam
call
mov
repnz
push
ds
stos
jg
mov
test
or
pushf
jl
xor
bound
and
dec
mov
scas
loop
cmp
icebp
lret
mov
je
pop
and
adc
addr16
push
mov
lock
popf
sub
pop
xchg
out
in
sub
outsb
iret
jnp
cs
loopne
dec
or
push
ja
mov
data16
cltd
dec
mull
cmp
sbb
fnsave
repz
add
repnz
rcrl
sub
mov
sbb
pop
jl
xlat
fistpl
aam
mov
add
xor
jnp
lcall
push
cld
outsl
mov
into
mov
hlt
fcmovne
or
int3
movsl
sbb
pop
sbb
xchg
sub
lds
sub
adcl
inc
inc
mov
mov
and
sbb
pop
sub
es
fstps
test
hlt
sub
adc
jmp
jg
test
add
xchg
les
hlt
stos
or
jg
push
mov
dec
in
push
jl
sbb
jns
shrl
test
ljmp
and
out
lods
out
rcrb
jo
scas
jb
int3
jl
fdivl
mov
mov
mov
mov
push
data16
mov
rcrl
lcall
decb
addb
divl
jne
push
adc
jne
mov
or
dec
inc
ss
adc
ja
int3
jge
cmp
push
push
int3
aas
dec
add
pop
jne
cmovne
push
push
ret
imul
into
jne
fisubs
movsl
xchg
cld
mov
adc
push
fs
je
adc
xchg
dec
mov
jb
mov
jne
mov
and
push
and
jmp
bound
adc
xchg
shrl
mov
xchg
ljmp
or
mov
daa
aad
verw
aad
lahf
lock
mov
xchg
ret
data16
xchg
scas
or
popa
sub
xchg
push
mov
movsb
bound
or
lods
xchg
pop
mov
ljmp
mov
hlt
inc
ds
nop
imul
mov
leave
mov
push
not
xchg
cmpsb
or
iret
cwtl
test
fidivs
mov
pop
pop
and
adc
dec
sub
push
fmuls
jae
inc
jmp
ret
into
xchg
mov
arpl
xchg
inc
pop
pop
push
pop
fwait
jge
sbb
or
xor
mov
mov
repnz
sbb
mov
jg
sbb
lret
mov
pusha
js
fimuls
mov
push
je
xchg
xor
enter
fs
xchg
sub
and
nop
data16
or
adc
add
mov
lahf
aas
cmp
or
loope
in
xchg
loopne
lret
add
pop
sbb
scas
dec
cmovns
adc
cmp
mov
out
xchg
jg
fwait
inc
adc
push
pop
cmp
lods
cwtl
out
mov
mov
add
push
adc
pop
sbb
cmc
sbb
cmp
int
dec
mov
cmp
jmp
sub
xlat
ss
sbb
je
dec
sbb
mov
mov
xor
out
std
mov
or
cmp
test
cmpsb
shlb
pop
ds
adc
mov
mov
jg
pop
jl
test
pop
fmuls
test
and
daa
mov
push
mov
jno
push
test
or
pop
lock
inc
mov
jae
sub
repz
mov
jae
and
shrb
outsl
scas
adc
fstpt
sar
fbstp
jb
mov
push
mov
fstps
mov
stos
mov
into
xor
in
add
or
xor
in
je
repz
xchg
cltd
je
js
mov
mov
fisubrs
out
or
pop
in
or
popf
mov
aaa
sbb
aaa
shrl
sub
cltd
aaa
push
subl
add
jp
imul
inc
mov
dec
mov
mov
mov
mov
xchg
mov
stos
les
push
aam
fidivs
out
mov
pop
repz
je
bound
xchg
sahf
jecxz
jle
mov
push
cltd
sub
in
xchg
pop
sbb
aam
push
pop
inc
inc
pop
fnstenv
mov
es
inc
stos
jne
fcompl
test
push
jge
cli
lret
push
or
in
xor
out
or
add
sbb
dec
ja
test
dec
stos
imul
test
inc
jns
mov
jp
add
mov
push
xlat
cmc
push
ret
or
add
lret
xor
int3
mov
xor
rcr
subb
dec
jo
jecxz
lea
imul
sbb
adc
xor
cwtl
lds
fwait
cmp
clc
sub
inc
mov
popf
mov
shrl
pop
bound
test
xchg
imul
sbb
mov
cs
mov
out
jns
pop
das
sbb
and
stos
nop
push
mov
insl
andb
jns
jge
ror
cltd
dec
stos
mov
sbb
cmp
or
por
push
pop
adc
shl
scas
add
fisttpl
mov
push
xchg
pop
xor
insb
pop
cltd
sub
les
pop
leave
aam
push
pop
mov
sub
mov
inc
lret
fdivl
mov
rcrb
mov
das
and
sbb
rep
sub
popf
sbb
xchg
call
xchg
mov
adcl
pop
test
xchg
test
mov
mov
adc
jno
gs
lock
aam
mov
int3
sub
ret
pushf
aam
ret
je
inc
ret
inc
outsb
or
inc
rcr
inc
aam
push
leave
xor
pop
add
in
jb
daa
aad
dec
int
sub
dec
jge
fdivrl
push
jne
in
cmp
negl
fstpl
cmp
jp
rcl
xorl
jbe
push
cmp
sbb
add
jp
jo
sub
scas
jg
inc
add
adc
mov
mov
jle
in
daa
bnd
fucomp
mov
jns
and
shl
bound
insl
or
and
xor
fsubs
mov
or
inc
cs
jecxz
mov
xchg
inc
push
mov
push
jmp
sub
add
js
mov
aas
pop
xchg
mov
adc
mov
cmp
fisttpl
enter
sub
das
xchg
fmulp
push
xchg
insb
push
sub
inc
inc
cmp
nop
sub
dec
fwait
xlat
sub
inc
and
pushf
in
push
jno
mov
lds
jnp
or
lea
movsl
dec
sbb
lods
in
outsl
loope
fisubs
scas
andb
fs
xor
pop
xchg
into
insl
ret
daa
dec
fmuls
pop
clc
loop
cmp
lds
repz
lods
mov
adc
pop
insb
aaa
push
ret
sub
inc
dec
jnp
fildl
or
test
mov
mov
add
mov
mov
push
cmp
cltd
les
pop
push
jb
ds
int
lret
or
faddp
aam
fisubl
jmp
inc
cmpsb
loop
xor
or
mov
mov
mov
inc
add
jge
pop
adc
dec
outsl
xchg
inc
sbb
adc
pop
inc
out
jb
xchg
lret
pop
mov
pop
mov
call
ds
jo
adc
xor
pop
mov
cmp
inc
loop
sub
mov
mov
out
sti
mov
enter
adc
in
outsl
xchg
rclb
or
repz
jnp
xchg
push
mov
add
add
adc
jns
xchg
lds
dec
push
out
cmp
insb
sti
ja
mov
popf
aad
in
fcomp
mov
dec
mov
inc
sbb
ja
sub
xchg
ficoms
push
push
cs
pop
out
xor
lcall
aaa
repz
sub
lock
popaw
test
inc
rep
pop
pop
mov
xchg
cmc
pop
inc
push
mov
outsb
jno
jp
into
enter
mov
jl
mov
mov
xor
addr16
mov
mov
jp
add
sahf
fnstcw
sub
mov
adc
push
cmp
inc
mov
jno
gs
aam
mov
cli
ss
cmp
out
push
jbe
jecxz
jno
test
test
jmp
ja
mov
sahf
push
lea
movsb
adc
fcos
lock
rorl
jb
call
data16
cmp
scas
jle
cmc
je
jg
sti
dec
test
adc
jns
testl
mov
sbb
sub
pop
ret
xchg
cmpb
cmp
pop
scas
addr16
fsubl
push
xor
or
sbb
bound
sub
pop
arpl
lock
mov
sub
xchg
andl
dec
shrb
sub
mov
jge
pushl
call
loop
out
jbe
mov
movsb
xor
incl
mov
push
mov
push
arpl
jo
add
mov
popa
aad
std
sub
mov
xor
jbe
test
int3
addb
inc
add
mov
rolb
xor
sub
int
push
loop
es
ret
aas
test
dec
cmpl
cmpl
cmc
mov
sub
xor
mov
repz
leave
jle
xchg
adc
lahf
mov
aas
jae
ret
adc
mov
imul
cmc
cmpl
or
jne
and
xchg
scas
jo
pop
dec
ljmp
push
cld
cmp
out
int3
jmp
xchg
pop
ljmp
jecxz
jle
into
and
pop
mov
or
dec
push
mov
std
sub
repz
jg
negl
cmp
call
sbb
xchg
cwtl
xchg
inc
or
mov
loope
dec
and
popf
sbb
cmp
sbb
mov
lahf
push
mov
nop
pop
out
jno
push
jnp
std
fimull
sti
lods
adc
test
add
or
js
cmp
loope
lds
je
pop
adc
repnz
gs
dec
sbb
aaa
mov
jecxz
clc
icebp
xor
movsw
fsubp
pop
mov
push
test
cmp
mov
dec
mov
neg
push
mov
pusha
mov
adc
fistps
and
ljmp
repnz
xor
test
hlt
in
cld
and
sbb
jnp
sahf
mov
mov
rol
rorb
enter
inc
inc
call
fprem
xor
fistpll
xorl
lds
push
scas
sub
into
cmp
push
leave
das
sbb
in
movsl
mov
xor
mov
jl
and
xchg
xchg
push
cmpsb
mov
pop
sbb
adc
pop
mov
pop
stos
jecxz
gs
or
mov
sti
and
ficoml
push
cmp
dec
stc
cmp
bound
out
scas
ret
lods
and
mov
mov
dec
in
rcrb
push
cs
xchg
sti
addr16
faddl
dec
mov
sahf
out
aad
mov
outsb
insb
dec
cmp
adc
cld
sbb
xchg
insb
adc
lods
sbb
popf
mov
xchg
jge
sarl
inc
daa
lods
sbb
data16
mov
dec
shll
das
shl
sub
adc
fdivrs
test
mov
in
lahf
int3
adc
jg
leave
inc
fcomps
pop
imul
or
mov
mov
jge
push
fmuls
repz
pop
mov
imul
pop
mov
stos
mov
inc
and
xchg
mov
adc
imul
fucom
fsubrp
loopne
ret
sub
pushf
vmovntps
jg
test
pop
in
into
xchg
mov
xor
mov
mov
or
sbb
pushf
cmp
shrl
jne
pop
fmull
xor
mov
add
and
mov
sbb
nop
mov
insb
sub
inc
or
orb
cmpsb
ret
ret
xor
adc
xor
orl
jo
js
adcl
imul
xchg
mov
enter
push
mov
ljmp
and
push
fdivs
lods
lds
cli
cli
mov
ljmp
pop
adcb
jmp
mov
cmp
movsl
mov
lret
ficompl
aam
and
inc
iret
jg
ret
pop
rorb
loop
lret
lea
and
push
xchg
cmpb
aaa
ja
mov
jp
xor
add
loop
shl
push
sar
sahf
jmp
pop
dec
cmp
mov
and
xchg
add
xor
add
stc
fcomp
pop
jns,pn
cmpsb
mov
lods
testb
dec
mov
mov
pop
mov
pop
add
jb
repnz
popa
inc
ja
outsb
pop
ss
dec
jno
adc
jge
push
mov
jp
ret
push
scas
test
sub
clc
movsb
push
and
fidivl
xchg
add
xchg
sbb
inc
jo
ljmp
lahf
xor
outsl
popa
add
pop
enter
dec
popa
notl
jmp
mov
mov
sbb
mov
mov
mov
push
mov
xchg
inc
js
das
fbld
mov
pusha
jge
push
or
jecxz
inc
lea
xor
or
cmp
xchg
jl
dec
loop
cmp
mov
insl
fs
pop
out
push
jbe
dec
outsl
loopne
inc
les
mov
cmp
cmp
adc
sub
pusha
pop
or
test
aam
pop
and
cmp
push
or
dec
fistpl
shrl
jg
jl
rorl
mov
jbe
jmp
cwtl
add
jecxz
xlat
int
rcrl
jb
add
mov
repz
arpl
and
adc
or
mov
sub
pop
adc
test
push
mov
push
adc
sti
fs
pop
outsl
fistpll
shl
or
cld
or
ja
mov
loopnew
aas
jnp
rcrl
and
and
push
mov
jp
xor
dec
cmp
add
jl
sti
out
in
in
adc
test
lods
fnsave
and
es
sbb
popf
fstps
sub
das
push
cmp
push
adc
shrl
and
test
inc
cmpsl
fdivl
jle
insb
call
inc
les
mov
mov
fs
out
es
push
dec
mov
mov
xor
adc
stos
mov
fstpl
adc
or
sti
orb
call
jle
cmp
mov
adc
ds
fiaddl
mov
push
outsl
lret
mov
pop
or
gs
add
push
test
mov
xchg
cmpsl
add
ret
xchg
mov
loope
push
lock
push
lcall
popa
stos
jecxz
sbb
add
adc
and
mov
stos
sub
pop
mov
push
jg
nop
add
je
push
push
push
mov
jae
cmp
mov
stc
cwtl
add
lock
out
mov
and
push
sub
mov
dec
lods
out
xchg
mov
pop
cmpsb
or
xor
loop
xchg
pop
inc
pop
sub
mov
test
jg
movsl
in
loope
dec
adc
or
dec
xchg
stos
dec
sub
test
push
and
xor
xchg
test
jae
xor
popa
lea
cltd
fbld
sti
and
push
sahf
in
pop
in
mov
add
and
sahf
xor
addl
jae
enter
inc
mov
and
fildll
je
repnz
pop
add
jmp
sbb
mov
inc
cmpsl
popa
or
sbb
xor
mov
aam
ret
imul
push
nop
jg
loope
scas
jno
flds
ret
test
jge
sub
loopne
and
in
xorl
dec
xor
cli
mov
mov
out
imul
nop
call
outsl
mov
push
inc
insl
adc
jnp
mov
loopne
push
xor
adc
ficoml
cwtl
mov
adc
rorb
add
dec
lods
push
mov
mov
xchg
adc
xor
mov
loope
adcl
lret
ja
cmp
mov
xchg
je
out
push
test
ds
jge
push
inc
es
test
dec
cld
cs
imul
mov
fidivrl
iret
sub
adc
xchg
xchg
mov
cmp
daa
mov
add
ret
push
cmc
cmp
jno
add
aas
xor
add
outsl
jbe
aad
add
xor
push
loopne
mov
mov
mov
inc
add
jg
ljmp
inc
test
enter
adc
pop
jb
fwait
mov
or
inc
fldl
push
loopne
mov
enter
imul
ja
popf
xchg
push
pop
jo
ret
mov
sbb
rorl
mov
dec
push
ljmp
push
imul
mov
sbb
and
enter
orl
mov
cmpsl
pop
cmp
mov
sahf
mov
adc
inc
inc
sub
decl
push
in
jmp
daa
dec
fidivl
add
mov
fcoms
mov
negb
aad
sub
mov
insl
mov
nop
mov
sbb
je
ljmp
gs
push
xchg
mov
loopne
js
mov
xor
pop
popa
aas
jp
mov
mov
mov
pop
xchg
lret
notl
sub
mov
adc
fxch
hlt
mov
cmp
in
sbb
iret
sbb
imul
xor
mov
adc
push
nop
arpl
xor
sub
push
aad
xor
cwtl
dec
les
mov
or
jo
into
jl
imul
add
pop
popa
jge
lds
fimull
enter
add
dec
sbb
push
inc
lret
and
leave
push
lods
cmp
push
test
pop
add
pop
and
js
add
je
je
out
ret
icebp
aad
je
xchg
stos
sbb
cld
out
iret
mov
mov
or
inc
popf
mov
arpl
shlb
fdivs
shll
ret
xchg
push
xor
insb
lods
xchg
or
out
sub
adc
push
xor
loop
inc
or
vsqrtps
pop
mov
das
in
je
or
and
mov
fst
call
push
or
outsl
mov
lods
orb
jp
clc
cs
or
scas
inc
int
mov
cmpsl
jmp
pop
insl
xchg
jne
dec
jo
xchg
idivb
imul
lahf
xchg
sub
fabs
icebp
fs
loope
push
adc
or
or
push
mov
call
sub
loopne
ljmp
pop
outsl
pop
mov
ret
jo
and
mov
push
mov
flds
lock
mov
in
jnp
andb
mov
jo
fisttpl
xor
mov
ljmp
push
adc
xchg
imul
lcall
rcr
imul
insb
add
rcr
cli
pop
inc
ja
dec
fwait
or
and
int3
int
sbb
fld
inc
lods
push
out
jmp
and
mov
mov
mov
nop
and
clc
push
cmp
faddl
push
mov
pop
out
inc
add
jae
mov
shrl
and
sar
adc
xor
mov
or
out
mov
xchg
adcb
movsl
aaa
push
or
inc
adc
push
ss
sbb
mov
dec
sub
push
popf
xor
push
clc
sbb
jmp
loop
stc
ljmp
inc
jo
data16
inc
fnstenv
lea
push
imul
mov
jns
cmp
js
pop
gs
or
xor
movsb
mov
out
into
ss
xor
inc
fstpl
xlat
std
and
ljmp
add
push
fcoml
cmc
movsb
mov
insb
ja
jno
scas
stos
and
imul
es
js
fisubrl
addr16
mov
pop
pop
imul
out
add
icebp
test
inc
push
push
scas
popa
pop
and
test
std
js
xlat
dec
popa
sbb
pop
push
mov
dec
jp
sti
hlt
ret
inc
mov
push
inc
cmp
in
loope
jmp
inc
sub
sub
sub
stc
fwait
mov
lds
mov
cltd
xor
repz
dec
stos
mov
mov
xchg
aad
inc
xchg
mov
inc
mov
nop
adc
stos
ss
sbb
in
push
loope
pop
ret
pop
or
hlt
dec
clc
negb
ljmp
movsl
mov
sbb
std
aam
xor
mov
jnp
pop
mov
iret
pop
decb
lret
in
test
mov
popa
mov
xlat
lock
add
pop
andl
fisubrl
and
outsb
mov
popf
jmp
xor
out
push
hlt
or
aam
sbb
imul
and
icebp
sbb
in
jb
por
add
mov
lods
jecxz
test
outsl
es
xor
push
jnp
inc
outsb
pop
mov
jmp
in
add
or
push
nop
repz
and
scas
mov
outsl
inc
dec
xchg
cmp
xchg
jmp
jge
xor
pop
out
scas
lods
xchg
negl
bound
shlb
ljmp
fdivs
out
push
roll
mov
test
jno
imul
outsl
lret
inc
adc
xor
out
jne
xor
and
jbe
and
in
je
cmp
xchg
shr
cld
cmpsb
and
fmull
ror
cli
jo
jne
ja
ss
das
mov
iret
arpl
xchg
jbe
les
sub
pusha
fcmove
mov
push
ret
out
jle
dec
add
mov
adc
addr16
repnz
jmp
inc
div
push
into
push
cmc
mov
adc
fldcw
pop
mov
xor
jmp
pop
fsts
testl
js
pop
xlat
mov
data16
call
cmpl
mov
adc
inc
jns
fldenv
insb
dec
dec
lcall
pop
push
mov
imul
or
mov
iret
nop
push
into
lcall
clc
fcoml
dec
pop
inc
sbb
aam
adc
jle
es
and
movsb
in
jmp
add
incl
lock
outsl
sbb
lahf
mov
pop
in
mov
sub
rol
fimull
pusha
scas
out
add
mov
inc
push
fxch
and
cmp
xchg
cli
or
cmp
outsl
xor
inc
jns
adc
pop
add
aaa
movsl
inc
repz
push
into
scas
mov
popf
in
and
jp
push
cmp
sbb
dec
es
push
and
sbb
dec
lods
fdivs
jno
or
cmp
mov
out
pop
ja
jmp
xchg
out
bound
iret
inc
movsl
xchg
xrelease
inc
dec
cmp
out
xchg
push
ja
sbb
xor
ss
jl
flds
cmpb
pushf
jb
stc
outsb
dec
xchg
inc
adc
add
out
sarl
call
mov
push
loop
cmpsl
jecxz
adcl
push
jge
inc
fwait
sub
dec
mov
dec
filds
mov
and
mov
lret
int3
pop
mov
mov
lock
daa
xor
jmp
movsb
out
mov
inc
and
bound
sub
and
cld
out
pop
mov
sub
outsb
fst
adcl
cli
clc
push
test
outsl
mov
dec
and
add
out
dec
jge
jbe
jmp
sarb
mov
ficoml
xor
push
repz
lea
out
push
jnp
cmp
pop
xor
inc
in
loopne
add
jns
mov
add
pushf
push
icebp
push
jmp
icebp
push
dec
xchg
pusha
loope
push
fadds
loopne
out
pop
jo
pushw
imul
call
sahf
and
icebp
xlat
ds
std
addr16
iret
pushl
test
cmpsl
in
xchg
repnz
shrl
stc
sahf
daa
xchg
or
aas
mov
jle
aad
shrl
ja
out
idiv
aaa
add
pop
inc
adc
pop
das
outsl
or
test
jp
mov
inc
xor
lret
and
fisttps
ljmp
mov
and
aad
push
adc
dec
shrl
int3
mov
rcll
xlat
pop
inc
push
mov
repnz
sbb
sub
mov
orb
ja
shl
mov
push
lock
icebp
pop
mov
out
and
mov
inc
inc
into
pop
xorl
jmp
and
dec
xchg
sbb
popa
cmp
push
dec
push
or
rcrl
bound
imul
adc
or
bound
add
push
add
sti
mov
iret
mov
push
cmp
fwait
hlt
xchg
rclb
iret
es
jg
sbb
insl
xchg
dec
mov
pop
jp
out
test
sub
fiadds
push
add
sbb
mov
icebp
out
inc
jbe
rcll
je
fdivs
pop
fildl
call
aas
mov
sbbl
dec
sub
push
loope
rcrb
mov
out
das
xor
enter
jb
mov
lods
in
push
push
imul
adc
sbbb
fisttps
add
mov
loopne
out
dec
in
xchg
lret
shll
mov
xchg
push
scas
lock
dec
fildl
pop
sti
sarb
lods
xchg
std
jne
cmp
jno
xchg
out
jns
lods
andl
mov
lods
add
mov
cwtl
insl
aad
or
sub
mov
jge
mov
sbb
dec
outsb
arpl
in
mov
push
push
out
stc
dec
mov
and
sub
jg
pop
jecxz
int3
lcall
push
ret
cli
pop
and
mov
add
in
xchg
mov
stc
lods
shr
or
or
jo
test
ja
in
jo
ss
cmp
mov
loope
mov
fsubl
int3
jb
mov
and
pop
mov
push
lret
and
scas
imul
ds
fistpl
mov
andl
jae
xchg
fdiv
mov
les
lret
pop
int
jge
pop
loop
pop
aas
cwtl
or
rorb
mov
jmp
loopne
sarl
adc
and
cmpsl
or
xchg
or
fs
sbb
add
outsl
jno
push
fcomp
decl
push
in
imul
push
js
xlat
bound
gs
test
test
add
pop
add
in
fucomi
addr16
jbe
sub
lcall
or
negb
add
out
dec
push
inc
je
daa
cmp
jge
out
lds
es
and
or
mov
or
jno
sbb
std
jo
mov
add
add
push
lods
or
je
sti
push
cmp
into
jae
push
lahf
pop
jecxz
mov
sub
or
dec
push
imul
add
sub
add
jne
xchg
mov
sahf
adc
clc
mov
adc
les
fdivr
mov
jb
dec
dec
jcxz
and
dec
in
rcll
clc
icebp
daa
sbb
add
call
scas
adc
sub
cmp
rcll
in
test
sbb
aam
mov
fists
movsl
loopne
lcall
mov
sbb
sub
insb
add
xor
rcrl
cmp
mov
jbe
inc
mov
inc
inc
inc
xchg
test
sub
ja
lahf
or
into
cmp
lcall
mov
inc
xor
lret
xchg
cmpsb
xchg
cli
mov
add
aam
dec
js
icebp
cld
adc
adc
iret
push
pop
jae
arpl
jmp
xor
mov
or
cmpsb
lods
js
mov
mov
and
mov
push
mov
push
and
pop
push
mov
lret
mov
cs
xchg
movsb
dec
sub
test
movl
ljmp
dec
arpl
scas
xchg
leave
xchg
mov
cmp
xchg
mov
xor
lods
mov
iret
dec
std
jmp
aaa
ret
mov
sbb
rcrl
push
pop
jo
add
and
fwait
lea
faddp
pushf
loope
push
insl
jbe
rolb
mov
cmp
xorb
add
aad
outsl
divb
call
sti
pop
js
pushf
xor
mov
push
add
ror
cli
ds
movsb
cmp
push
in
push
inc
mov
inc
pop
sbb
inc
inc
dec
add
insl
jo
out
jno
outsb
mov
jbe
mov
sub
sarb
xchg
mov
jmp
loopne
pop
roll
pop
lds
jns
add
sbb
faddp
sub
or
mov
mov
jp
sahf
push
push
into
jp
loope
out
stos
mov
shlb
inc
enter
add
test
lcall
xlat
loope
aas
pop
std
sub
xor
inc
or
inc
push
mov
dec
mov
mov
in
and
neg
and
lcall
push
lock
inc
xor
enter
push
dec
sbb
icebp
in
pop
int
iret
sarl
cs
push
and
shrl
mov
stos
pop
push
sti
mov
ret
or
add
mov
out
movsl
outsb
and
adc
push
and
loop
xchg
in
or
movl
jo
cmp
mov
lock
insl
push
push
lret
dec
inc
inc
lock
inc
lea
xlat
insb
ror
inc
bound
rcll
cmp
insb
int
adc
iret
sbb
jmp
sbb
and
mov
adc
das
pop
sbb
insb
push
lcall
dec
add
adc
pop
add
sbb
xchg
cmpsl
popa
pop
mov
push
mov
out
cld
push
rcrl
insb
mov
ret
loope
in
mov
insl
lret
mov
inc
jle
bound
sbb
and
int3
adc
cmp
rorb
xchg
insl
xor
dec
jp
push
jge
pop
inc
and
sub
jne
pusha
cmpsl
faddl
xor
inc
cmp
lods
xchg
mov
mov
cmpb
sub
sub
push
adc
js
push
push
scas
jl
adc
jl
test
outsb
xor
mov
mov
ret
fimuls
fistl
sbb
pushf
aad
jmp
shlb
lock
icebp
int
push
add
or
xchg
cli
mov
lods
or
mov
pop
mov
and
mov
mov
and
or
push
loope
sub
or
gs
add
cmpl
mov
cmp
in
lds
pop
mov
adc
inc
add
pop
or
mov
lcall
mov
sub
enter
leave
inc
inc
cli
xchg
rcl
icebp
fs
xchg
testb
and
jo
daa
subb
dec
xor
loop
pop
inc
or
push
pop
add
or
out
call
adc
jne
mov
mov
mov
jnp
fistpl
in
sbb
sbb
push
sub
xor
push
faddl
push
mov
mov
inc
es
cs
jns
int
sub
test
lret
clc
and
mov
adc
and
imul
mov
pop
push
mov
inc
imul
inc
shlb
sti
cmp
lret
xchg
cltd
adc
addr16
push
iret
fbstp
mov
mov
or
mov
mov
lcall
cltd
das
adc
push
pop
pop
cmp
cmc
call
or
lods
xor
cmpsb
filds
cmp
sbb
popf
dec
fbstp
out
or
mov
jne
mov
sti
scas
insl
xor
lret
lea
push
mov
and
adc
cmp
test
dec
lret
cmp
test
jno
insl
add
push
and
mov
add
add
adc
sahf
cld
rorb
sbb
xchg
mov
cwtl
mov
or
cmp
adc
cli
enter
ja
xchg
xchg
test
jg
pop
mov
fdivr
movsl
fisubrl
or
cs
aas
jge
jo
mov
aas
adc
sar
xor
data16
int3
dec
mov
into
test
lock
hlt
imul
pop
jge
mov
sub
push
addr16
mov
loopne
or
cmp
scas
cwtl
ror
jo
rolb
filds
jae
xchg
mov
inc
sbb
into
inc
aad
pop
jbe
sbbb
andb
cmp
pop
inc
cs
test
sub
mov
mov
test
jg
dec
cmp
js
dec
stc
or
sub
dec
fiaddl
jb
test
stos
sub
mov
loopne
ja
jecxz
arpl
jnp
cmp
insl
icebp
ret
data16
jns
out
out
testl
ret
adc
jmp
divl
or
mov
call
aas
clc
in
jle
stos
ret
add
mov
in
aad
je
ja
xchg
inc
push
popf
cmpsl
inc
pop
mov
cld
popf
sbb
jns
push
jg
sub
pop
test
mov
lcall
xchg
mov
pop
pop
and
dec
sbb
xor
mov
jno
mov
fdivp
add
je
jno
hlt
pop
aas
repnz
xchg
xor
or
cmp
push
or
fcompl
mov
mov
sbb
and
loop
pop
cli
in
xor
jle
aam
or
sbb
in
rolb
ljmp
mov
sub
sbb
lods
rorb
cmc
cmp
mov
jge
subl
cld
iret
das
adc
inc
ficomps
lods
fucom
scas
mov
movsl
movsl
xchg
mov
scas
nop
pushf
sar
fs
mov
aad
pop
stos
cli
lret
in
pushf
lahf
clc
jmp
insb
mov
and
xor
aam
lods
rcr
xchg
push
and
sbb
mov
test
int3
hlt
mov
cs
dec
push
jno
dec
loop
xchg
cmpsb
aas
sahf
jbe
xchg
mov
and
into
pop
inc
scas
out
aaa
mov
add
lret
xor
or
mov
xchg
xchg
mov
mov
dec
in
rcll
cwtl
ret
mov
mov
xchg
lret
xor
shrb
add
test
popa
jge
and
xchg
shl
loop
or
sbb
ret
push
inc
and
clc
xorb
sbb
push
clc
xor
and
xor
pop
push
or
sub
mov
push
mov
inc
popf
es
mov
pop
xor
in
inc
repnz
or
mov
data16
int
movsl
xchg
cmpsl
stos
in
or
sti
insl
xchg
lcall
lea
push
cmp
sub
mov
test
xor
add
lea
jmp
sti
cmpsb
out
sub
bound
sub
ret
and
roll
sbb
mov
push
ret
add
mov
dec
push
movsl
enter
add
in
das
mov
ss
call
sbb
xchg
push
adc
testb
lea
arpl
ret
hlt
push
mov
std
jge
int
xor
sub
clc
bound
nop
xor
jmp
fsubrs
and
iret
fstpl
push
jl
imul
stos
adc
xor
aas
add
inc
and
clc
test
inc
scas
push
xor
jl
push
jb
stos
inc
push
cmp
mov
ret
jnp
adc
cmp
popa
ja
or
scas
cmp
cmp
rcl
adc
mov
jne
roll
or
insb
and
dec
and
cmp
dec
icebp
pop
dec
imul
fstpl
fwait
mov
sbbb
sub
push
pop
in
ja
movsl
stc
shlb
or
cmp
add
xor
ret
push
ja
mov
ret
mov
push
mov
sbb
add
loopne
push
ds
push
jo
jl
mov
fs
jo
data16
aas
push
lods
test
sbb
repz
mov
push
rcrb
stc
cmp
and
subb
orl
adc
inc
inc
jb
mov
cmp
shlb
mov
and
stos
or
lcall
es
or
not
push
ljmp
push
imul
mov
shlb
lcall
add
jae
lods
add
xor
inc
adc
aam
outsl
jp
push
icebp
push
lods
movsl
cwtl
ficoml
adc
int
or
jo
sbb
dec
sbb
and
or
cmpsb
testl
inc
xlat
pushf
mov
mov
add
aaa
aaa
scas
cmpsl
or
mov
mov
repz
mov
shll
add
sti
push
xlat
pop
inc
pop
pop
push
jge
and
pop
jo
pop
pop
sbb
test
dec
adc
scas
dec
and
insl
push
aaa
insl
pop
je
loopne
xor
sub
popf
xor
cmpsl
inc
mov
in
mov
pushf
repnz
or
sar
stos
xchg
insb
dec
xor
lock
test
jp
cltd
or
nop
push
xor
popa
xchg
mov
loopne
outsb
into
pop
iret
pop
mov
loop
add
jge
out
rol
repz
push
into
popa
mov
jno
popa
push
cli
ljmp
push
fisttps
std
aas
cmpsl
test
ljmp
inc
dec
add
add
dec
add
fbld
outsb
imul
out
in
pop
repnz
mov
adc
adcl
push
fldl
nop
cmp
addr16
mov
dec
jne
fdivr
and
ss
jb
xchg
xor
fldcw
pop
repnz
pop
stos
cmp
xor
xor
sbb
rclb
sub
jne
fdiv
loop
rclb
add
dec
mov
sbb
push
xchg
rcr
mov
adcl
loopne
je
cmc
test
in
mov
jbe
sbb
add
xor
add
cmp
pop
mov
xor
cs
out
rcl
inc
test
movsl
xor
sbb
int3
leave
ret
add
jb
mov
or
push
mov
mov
cmp
into
leave
mov
test
insl
mov
cld
std
clc
repz
test
adc
push
imul
imull
sub
rorb
popf
sbb
pop
sti
or
sub
or
cmp
lods
hlt
mov
mov
mov
mov
std
adc
ds
mov
xchg
pop
jmp
daa
cld
icebp
testl
xchg
or
lods
lret
cmp
xchg
int
nop
rclb
ficomps
or
ds
push
dec
sbb
mov
cmp
inc
movsl
mov
jge
xor
lret
imul
xor
mov
ja
out
pusha
sub
add
int3
jae
and
cltd
xchg
jg
sub
push
mov
fisubs
cmp
jmp
mov
sbb
mov
dec
loope
ret
test
and
aas
push
push
push
cmp
and
mov
out
setno
lret
outsl
adc
ss
fwait
jge
cmp
mov
pusha
jmp
sbb
outsl
fwait
mov
movsl
mov
aas
mov
mov
sbb
lods
call
jp
fwait
aaa
filds
sti
out
push
ficompl
mov
daa
jo
lret
loope
lods
pop
out
aas
xchg
and
pop
cs
add
ret
lcall
shll
pop
jo
mov
mov
push
leavew
inc
shlb
fcoms
inc
mov
ja
pop
jne
jl
jle
sub
jne
mov
jl
jle
js
push
lret
mov
jecxz
push
rcl
je
ljmp
int
dec
in
out
icebp
out
sbb
sbb
shlb
das
enter
ficomps
adc
push
cwtl
loope
imul
add
sub
dec
data16
rcll
fsubs
cmp
push
test
pop
inc
add
gs
push
test
dec
pop
aaa
mov
mov
andl
pop
pop
xor
in
xor
sub
imul
and
sbb
lods
sub
sbb
ja
jecxz
gs
jbe
ja
jo
and
out
add
test
xor
xor
bound
inc
xchg
sub
pushf
add
arpl
xchg
mov
adc
daa
mov
push
push
frstor
iret
arpl
leave
push
mov
imulb
ss
mov
xor
arpl
shll
mov
lods
cs
mov
jmp
mov
sbb
mov
stos
sbb
mov
cmc
ljmp
leave
sbb
in
insl
or
lock
shrl
aas
dec
mov
and
in
lahf
pop
and
bnd
in
mov
cltd
mov
into
ss
jmp
dec
lret
add
fdiv
int
and
pushf
jne
subl
mov
loop
out
mulps
mov
jge
or
ficoml
daa
test
push
dec
call
inc
or
sbb
lss
ss
jo
xor
or
lock
jle
pop
lods
push
loop
sub
xchg
stos
push
cmpsl
jnp
mov
add
inc
test
insb
movsb
xor
mov
add
out
push
icebp
cmp
pop
adc
adc
xor
push
sub
pop
daa
cmp
adc
in
xchg
test
pop
cmp
shrl
mov
in
call
sub
add
ret
sbb
jmp
pop
cmc
rclb
loope
inc
test
mov
lcall
lds
std
andnps
push
test
lds
loop
or
loop
aaa
lock
cld
pop
cmpsl
sbb
cmpsb
jmp
cmp
jle
dec
mov
and
clc
mov
jge
push
cmp
icebp
aaa
fcoms
xor
jns
or
mov
lea
xchg
loop
std
je
movsb
sti
lcall
pushf
jnp
mov
stos
cmp
jb
mov
inc
mov
stos
mov
jb
adc
ds
sub
dec
inc
xlat
fildl
push
jg
adc
cmp
and
negb
mov
idivl
dec
mov
stc
or
cli
mov
and
pop
ret
in
cmp
cli
aad
outsb
xchg
lds
cmc
jmp
xchg
inc
and
mov
out
cmp
adc
loop
sbb
cmp
insb
movsb
lods
and
imul
pop
lahf
sbb
inc
mov
dec
mov
mov
mov
lds
lds
lahf
adc
and
sbb
mov
rorl
fidivrl
xor
sub
adc
jno
and
add
dec
inc
minps
call
mov
adc
in
jmp
cmp
rcrl
and
xadd
stos
or
cmc
dec
pop
jmp
jo
bound
rolb
mov
dec
add
add
lahf
mov
mov
lock
mov
test
xchg
and
mov
aas
add
shr
xor
and
jbe
ljmp
int3
mov
jge
jecxz
mov
stc
pop
call
repz
dec
aaa
sub
rorl
jg
mov
pusha
cmc
shl
mov
mov
sub
ret
push
mov
cs
add
popf
ficoms
mov
fxch
adc
and
xchg
or
xor
inc
shrb
adc
clc
fisttpl
jp
xlat
sbb
mov
movsb
std
shrb
daa
lret
mov
xchg
adc
mov
jbe
jno
or
xchg
dec
out
xor
lahf
cwtl
pop
mov
lock
in
or
sti
pushf
pop
xlat
ljmp
loopne
sbb
xlat
mov
pusha
out
movsb
mov
jecxz
cmp
ja
pop
xchg
mov
dec
xchg
cmpsl
and
inc
adc
or
jo
cmc
or
cmc
pop
cwtl
push
out
pop
xchg
fldcw
dec
bound
je
fdivl
xchg
shlb
xchg
stos
push
aaa
mov
nop
cmpsb
xor
push
imul
popa
out
ja
sbb
push
icebp
add
in
mov
movsl
pop
mov
dec
jmp
leave
mov
xor
pop
mov
cmc
test
mov
in
pop
dec
jge
push
mov
lock
popa
cmp
adcb
xchg
rclb
cli
repz
andl
icebp
lret
ljmp
xorl
mov
dec
nop
push
jns
or
stc
jno
loop
repz
jbe
inc
into
mov
into
lret
or
fnstenv
mov
cmp
adc
pop
stos
push
jmp
adc
je
repnz
mov
in
lock
pop
or
jg
mov
nop
mov
push
sbb
in
in
test
loope
sub
pop
cmp
or
xor
pushf
cwtl
dec
xor
push
jp
sahf
out
cmc
jmp
jg
es
insb
adc
bound
daa
iret
lock
and
mov
mov
loope
jge
lea
dec
idivb
jmp
das
push
push
mov
ljmp
xor
xchg
push
rcrl
sbb
and
sahf
mov
push
sub
in
iret
cmp
mov
and
nop
pop
aas
out
inc
popf
mov
in
sahf
inc
sbb
jl
scas
cli
or
fs
stos
or
sbb
adc
sti
push
cld
pop
xchg
js
or
jmp
or
adc
push
lock
jo
jnp
cld
mov
pusha
stos
jae
fldln2
mov
sbb
push
fmuls
adcl
pop
cmp
out
cmp
mov
inc
dec
inc
outsb
addl
jno
xchg
mov
pop
push
sub
cwtl
rolb
es
dec
adc
les
lock
pushf
pop
adc
xchg
dec
data16
js
fmul
fists
ret
pop
dec
inc
sbb
lcall
outsl
xorb
and
ds
inc
xchg
orl
arpl
in
sbb
xor
scas
push
lock
insl
and
adc
push
mov
push
sahf
cmp
aas
xchg
outsb
aaa
les
cmp
mov
jge
jp
out
jg
mov
add
push
or
xchg
sub
repz
xchg
lea
dec
cmp
xlat
lock
add
mov
pop
sbb
das
outsl
lret
mov
loop
mov
stc
and
out
push
repz
roll
lahf
loop
jo
pop
pop
sbb
fcoml
or
jnp
or
sti
fdivr
adc
les
in
add
out
popf
mov
aad
pop
jae
pop
xchg
shlb
loopne
jo
stos
ss
jle
push
adc
cmp
stos
adcl
es
sub
jp
adc
rclb
shll
push
xor
jno
xchg
addl
inc
xchg
test
xor
mov
stos
outsl
push
mov
into
sbb
pop
sub
insb
mov
lret
outsb
cmp
mov
cltd
in
ljmp
cld
jmp
xchg
xor
call
sti
ja
or
scas
mov
dec
xchg
mov
out
inc
popf
std
or
mov
lock
sbb
adc
in
sub
sbb
mov
dec
jecxz
xor
jae
orb
push
loopne
mov
mov
jbe
cmp
jle
adc
movsb
push
fistl
mov
out
jmp
jbe
mov
xor
int3
push
fadd
push
pop
int3
cmp
cmpl
std
mov
fwait
push
mov
sub
xchg
je
cmp
test
sub
scas
cmc
movsl
xor
and
in
incl
cmp
or
ja
mov
xchg
cmp
inc
js
xchg
lret
icebp
fs
inc
sub
dec
mov
gs
pushf
pop
adc
inc
sub
fcoml
dec
adc
test
push
xchg
mov
adc
inc
xor
lds
sub
mov
mov
inc
xor
loopne
scas
ficompl
jbe
adc
and
xchg
dec
and
push
shr
mov
sahf
jne
sti
xor
sub
pop
es
mov
sbb
cmovb
cmp
pop
les
les
outsl
enter
mov
ret
in
lock
jae
in
sub
test
das
int3
leave
lahf
sbb
jmp
jb
mov
sbb
push
cld
add
gs
hlt
lcall
mov
jg
sar
mov
push
popf
push
jle
dec
enter
mov
addr16
jae
imul
or
jno
or
cld
int
sbbl
out
lods
sti
cmp
lahf
loop
mov
loopne
popf
aas
fnsave
pop
ljmp
and
mov
ret
and
into
push
cmp
ds
and
stos
dec
cltd
sbb
ja
dec
mov
lret
test
inc
and
sbb
call
mov
repnz
xchg
mov
inc
jmp
sbb
add
mov
ljmp
pop
shlb
xor
test
sti
mov
mov
fs
inc
addr16
jp
cwtl
jb
push
adc
roll
aas
sbb
lcall
inc
call
scas
or
xchg
inc
loope
out
cwtl
outsb
pop
in
lds
outsb
push
cltd
mov
sbb
pop
movsb
out
bound
in
je
imul
xchg
xlat
sbb
xlat
push
pop
and
in
xchg
jns
stos
xor
in
daa
dec
imul
dec
jb
leave
repz
nop
xchg
add
lahf
add
sbb
xchg
add
int
dec
adcl
int3
test
int
mov
push
loope
push
mov
adc
xor
pop
add
mov
push
inc
xchg
mov
es
enter
popf
iret
mov
cmp
test
test
xchg
pusha
cmp
lods
xor
add
mov
pushf
sbb
mov
ret
or
ds
and
test
dec
sbb
sbb
sbb
cmp
mov
or
repz
aas
imul
cld
jg
mov
loopne
ljmp
insl
clc
cld
xor
pop
pop
push
and
xlat
xorb
test
imul
mov
sbb
idivl
xor
or
pop
cmp
cs
push
dec
adc
pop
lret
addl
insl
out
adc
pop
dec
inc
fstp
mov
lods
dec
and
xlat
cmpsl
out
scas
jo
leave
add
nop
mov
aas
push
pop
push
es
test
and
mov
pushf
push
lcall
xchg
fdivrs
jmp
jns
fidivs
xchg
add
dec
xchg
jmp
lret
rcrb
in
jge
jbe
add
sti
lahf
negl
ds
ds
push
push
fnstsw
jne
pop
add
jecxz
ret
iret
or
stc
cmp
in
xchg
cld
mov
fildl
push
mov
inc
cmp
jae
in
push
xchg
and
fs
insb
insb
fmul
test
jo
jne
and
les
push
adc
pop
push
dec
in
stc
adc
int
mov
fidivrs
xchg
mov
bound
pop
decl
sbb
push
sahf
sub
lods
arpl
xor
scas
getsec
loop,pn
fcmovb
or
lds
add
jnp
addr16
jg
out
ficoml
mov
jae
movsl
gs
and
movsb
push
outsl
xchg
gs
lods
fisubs
testb
mov
cltd
mov
jg
mov
adc
and
stos
addr16
xchg
pop
lcall
bound
xchg
push
cld
jecxz
stc
imul
xchg
jno
lret
fisubl
push
mov
mov
imul
sbb
adc
sbb
dec
aaa
dec
stos
outsb
lock
and
inc
or
jno
add
inc
add
xchg
shrl
js
in
addl
cmc
ret
add
testb
xchg
pop
ja
insb
mov
test
fmull
cltd
mov
data16
or
jp
xor
shrl
mov
stos
mov
mov
cmp
cld
es
add
and
shl
mov
mov
sub
inc
mov
mov
ret
sti
add
mov
ljmp
sbb
cli
xchg
xchg
jle
xchg
movsl
jae
cmc
push
fisttpll
addl
and
inc
or
xchg
cmc
leave
jecxz
sbb
leave
stos
push
cmp
adc
cmc
fs
popa
mov
cmp
fs
jl
push
xorl
inc
cmpl
mov
mull
push
test
pop
imul
cmp
mov
mov
adc
jae
lcall
xchg
int3
std
ds
std
pop
test
sti
add
inc
popf
out
cmp
or
test
or
mov
ljmp
xor
cmp
iret
out
insb
xchg
out
popa
inc
sahf
adc
dec
daa
push
cld
cmp
push
insl
repnz
ss
cmp
xor
fbld
cs
jg
and
outsl
in
mov
lods
mov
mov
mov
add
in
int3
rcrb
adc
inc
stos
pop
dec
jne
cmp
mov
mov
inc
sbb
stc
xor
xchg
cmp
mov
jecxz
sahf
out
or
hlt
mov
pop
xchg
fdivl
hlt
add
mov
imul
mov
popa
sbb
adc
xor
lahf
xor
test
mov
xor
outsb
fwait
scas
repnz
fdivrs
inc
test
outsb
inc
inc
stos
sub
aaa
fdivl
lret
bound
pop
push
jl
out
bound
xorl
sbbl
popa
in
ljmp
fwait
xchg
sub
mov
and
jo
jno
popa
sub
mov
enter
sub
xlat
adc
into
imul
int
xchg
in
sbb
sahf
jo
jnp
lock
outsb
out
add
mov
jmp
push
jle
outsl
xchg
mov
and
or
sub
sbb
gs
jge
sub
mov
adc
jne
ret
int3
fcoml
fnstcw
xchg
and
xchg
shl
add
push
xchg
dec
rorb
dec
mov
dec
repz
cmpsl
loop
sub
sbb
rorl
inc
pop
or
ds
jae
pop
xchg
sarl
jl
cmp
cli
mov
sub
mov
pop
jge
mov
sbb
pop
ljmp
mov
rcrb
push
cmpl
push
mov
cmp
notl
ret
pop
lcall
notb
ds
pusha
xor
out
mov
xchg
es
fists
jmp
inc
adc
out
mov
popa
pusha
xorb
outsb
inc
mov
int3
stos
mov
mov
dec
mov
inc
cmp
lds
xor
dec
fcmovb
testb
push
fdivl
adc
sub
or
mov
movb
cmp
pop
jecxz
popf
jecxz
insl
mov
rcrl
adc
sub
daa
and
popa
andb
out
mov
rcrb
ja
cwtl
mov
in
xchg
sub
pop
testb
cld
xchg
dec
mov
out
ljmp
lea
mov
call
inc
mov
lods
es
dec
roll
outsb
xor
test
xchg
pop
enter
and
mov
ret
inc
cld
rcl
jge
in
and
test
cmp
push
jmp
or
mov
out
pop
mov
adc
shrl
insb
popf
fnstenv
xchg
dec
fisubrl
push
or
mov
lea
xlat
mov
mov
jae
or
lods
dec
xor
pop
adc
inc
fsubrl
mov
mov
ret
fs
loop
mov
and
in
scas
and
sub
cmp
lods
or
adc
add
push
in
xor
aaa
ja
dec
fwait
nop
pop
cli
dec
adc
sbb
or
loope
adc
call
push
ss
and
stos
je
loope
mov
inc
out
stos
outsb
js
fidivrl
call
xor
cmpsl
inc
jnp
fwait
add
dec
gs
ret
loop
push
dec
lahf
dec
ficoms
cmp
xlat
xchg
int3
and
sbb
daa
add
mov
int
sbb
jns
add
sub
test
fmul
icebp
frstor
mov
add
pop
xchg
sub
fs
jp
out
xlat
sbb
aam
jbe
andl
adc
scas
insl
movsb
xor
fsubl
inc
and
or
icebp
scas
jge
nop
in
test
insb
ret
cmp
aas
testb
ficoml
adc
dec
sub
ja
imul
or
sbb
div
dec
ja
clc
jo
adc
or
inc
popf
pop
add
into
lret
xchg
mov
sub
loopne,pt
lahf
push
sub
dec
scas
jmp
movsb
mov
mov
xchg
insb
mov
push
pop
inc
shll
adc
lods
scas
lds
cmp
lods
sbb
ljmp
mov
loop
sbb
rcll
std
icebp
scas
push
cmpsb
shrb
xor
fcoml
out
imul
es
fists
mov
sbbb
pop
imulb
adc
pusha
adc
sub
and
arpl
mov
sbbl
pop
or
jns
mov
ss
dec
aas
imul
ss
outsb
mov
ljmp
dec
fstpl
and
jg
into
ljmp
orb
mov
jne
mov
xchg
imull
xchg
negl
lahf
cs
add
sub
stos
es
pushf
cld
push
ret
pop
add
pop
dec
stc
jl
into
shr
mov
pop
mov
test
and
dec
pop
lds
outsb
xchg
sub
icebp
out
xorl
add
arpl
cmpsb
pop
imul
lret
xchg
add
cmp
shrl
int3
fisubrl
push
lea
push
mov
push
inc
test
dec
lretw
mov
jo
inc
jns
lcall
add
push
jecxz
clc
fnstcw
subl
sbb
scas
dec
jae
jno
push
out
mov
ljmp
cmc
inc
add
daa
nop
aaa
nop
rolb
push
iret
iret
and
adc
in
pop
pop
cmpsl
lods
popf
mov
pusha
mov
js
sbb
cmp
das
or
aas
jb
icebp
adc
push
cli
dec
xor
rcll
jge
inc
lea
dec
addr16
pop
clc
imul
cmpsl
in
fisubl
pop
cltd
gs
or
adc
xor
popa
xor
sbb
push
xchg
xchg
outsb
andl
dec
lcall
aam
mov
stc
add
push
mov
xchg
in
xor
ja
fnstsw
or
push
mov
shl
jo
and
fwait
ja
negl
stc
add
push
mov
out
mov
bound
stc
inc
adc
inc
pop
xorl
shll
sbb
jle
adc
pop
push
int
dec
add
cs
adc
mov
test
subb
out
rcll
xchg
add
ret
cmp
mov
cmpsb
xorl
in
mov
mov
fidivl
xor
repnz
jecxz
scas
imul
outsl
jp,pt
jbe
ds
lcall
scas
lret
loopne
sub
mov
dec
xor
inc
xchg
inc
xchg
and
jge
fcmovu
cmpsb
mov
push
inc
ljmp
movzwl
sub
pop
adc
repz
dec
jp
push
fisttpl
cmpsl
jnp
mov
loope
dec
and
iret
mov
inc
fstpt
adc
mov
stos
add
push
mov
das
xor
cmp
sub
aas
fdivrl
cmpsb
iret
sub
jne
jge
and
int3
mov
fwait
in
ret
xchg
push
pop
insl
je
lock
aaa
pop
jle
test
jecxz
add
sbb
lret
sbb
pop
mov
cmp
mov
inc
cmp
adc
mov
adc
xor
jmp
lcall
addb
cmp
mov
outsb
inc
dec
fadd
mov
and
mov
iret
xchg
xor
sub
imulb
scas
clc
ljmp
mov
inc
je
fidivrs
and
jle
adc
mov
xchg
call
push
push
sub
add
pop
mov
pop
out
mov
and
or
xchg
and
xor
cld
shl
lods
xor
pop
lcall
cmc
pop
adc
es
push
je
push
roll
ja
or
and
insb
ja
cmpsb
xchg
push
pop
popf
mov
sbb
dec
jb
enter
jg
push
loopne
dec
inc
gs
inc
mov
loope
xchg
mov
cld
xchg
in
mov
mov
jae
sbb
sub
pop
xchg
div
fninit
cltd
sbb
cmpsb
push
arpl
and
sub
sahf
mov
movl
and
sub
pop
and
xchg
and
stos
dec
and
dec
sub
jbe
jge
je
pop
test
mov
sbb
xchg
xchg
mov
jae
mov
lret
hlt
ss
xchg
movsb
lds
nop
stos
adc
mov
idivl
mov
mov
inc
xchg
in
sub
fisttpll
push
hlt
mov
test
ljmp
add
jae
mov
lods
jmp
cmpsb
ss
fldt
push
imul
scas
pushl
and
mov
cmp
into
jp
or
shll
sbb
lret
xchg
mov
cwtl
pop
sbb
subl
inc
repnz
rol
movsl
stc
xor
data16
into
sbb
mov
rcrb
inc
cwtl
loop
fists
mov
and
jge
clc
mov
sahf
pop
aaa
mov
pop
xor
nop
rcl
push
cmp
jmp
test
icebp
cld
shr
cli
lret
mov
xchg
dec
repz
in
add
insl
rolb
lods
hlt
lock
ret
in
iret
push
test
test
xchg
divl
cld
inc
icebp
test
std
lret
pop
aaa
mov
sahf
subl
adc
sbb
xor
jl
in
into
xor
jecxz
dec
xchg
dec
faddl
out
and
dec
sub
mov
pop
sub
insb
std
lods
call
mov
out
pop
cmpsl
and
shll
jl
outsb
cld
rclb
sbb
les
insb
mov
mov
stc
jae
gs
in
leave
int
iret
lahf
pushf
sub
ret
sub
in
cli
insb
scas
xlat
fnstcw
fsubs
push
aas
cmp
mov
adc
mov
xor
fdiv
cli
jo
push
mov
mov
and
inc
add
or
js
test
arpl
dec
add
cmp
inc
cmp
jne
mov
add
js
or
sub
stos
scas
inc
mov
aad
adc
outsb
loope
add
push
adc
adc
mov
stos
xchg
ret
test
loope
fimull
repnz
in
add
sar
das
dec
mov
fcoms
loopne,pn
mov
push
xor
sbb
movl
imul
pop
or
xlat
in
shl
xchg
lcall
dec
clc
repz
cmp
mov
mov
data16
repz
or
push
test
xor
pushf
lret
or
lods
sarb
push
loopne
aas
push
mov
lds
leave
bound
inc
shll
sti
dec
add
ds
pop
dec
stc
and
out
push
mov
push
sbb
jmp
or
nop
xor
xchg
fnstenv
iret
cwtl
jnp
mov
and
cmp
xchg
fldenv
sub
add
push
jo
popf
xor
insb
adc
into
push
test
insl
cmpsl
scas
and
and
iret
push
push
sti
mov
xchg
add
jle
and
inc
iret
cmc
mov
sub
lods
popf
loope
sbbl
mov
push
cmpl
jns
stos
lahf
pop
sarl
cmp
test
dec
testl
add
mov
cmpsl
ljmp
insl
mov
or
push
dec
movsl
jp
js
bound
jne
leave
stos
movsb
test
out
mov
repz
daa
out
loope
and
xchg
jl
adc
ss
gs
pop
xchg
xchg
scas
shr
xchg
cmpsb
in
cmp
jnp
sbb
int
mov
cmc
adc
pop
rorl
cs
dec
dec
das
sub
mov
scas
sub
mov
dec
push
xchg
clc
sarb
cltd
jp
test
mov
xor
mov
fsubrl
sahf
int3
popf
pop
jle
sbb
mov
xchg
cmp
inc
mov
lock
cli
inc
sbb
nop
lea
jge
mov
data16
out
mov
mov
push
dec
jge
adc
inc
stc
rclb
pusha
xchg
inc
cmp
sahf
cmp
mov
xchg
das
cmp
fbstp
fsubrs
fstpl
idiv
subl
push
imul
jo
enter
test
xchg
or
pushf
sub
mov
and
xor
pusha
xor
mov
insl
shl
mov
xchg
xchg
roll
jnp
in
movl
push
jns
cmp
imul
jmp
pop
mov
xchg
loope
sahf
outsb
std
xchg
out
xchg
push
rcrb
adc
lods
arpl
arpl
fwait
les
das
das
fbstp
or
cmp
push
xor
inc
and
dec
fs
sbb
dec
dec
mov
xor
pop
mov
addl
mov
out
push
fs
xchg
xor
push
ror
push
js
gs
clc
icebp
xchg
mov
cmp
add
mov
mov
inc
hlt
pop
inc
adc
jge
test
push
jns
ja
fnsave
adc
les
leave
repnz
sahf
dec
pop
mov
mov
scas
xor
sbb
subl
inc
fadd
outsl
sub
mov
hlt
mov
addb
test
mov
jns
bound
or
cmpsl
outsb
call
out
lea
jo
movsb
mov
mov
in
fisttps
sub
roll
cmp
inc
stc
sub
sbb
cld
stos
mov
push
xchg
sbb
data16
mov
jae
lahf
push
fninit
ja
scas
and
inc
jnp
sub
inc
out
das
movsl
scas
stos
fnstenv
xchg
mov
rclb
or
dec
mov
xor
enter
cmp
xchg
cli
sub
mov
mov
push
sti
mov
std
add
enter
outsl
add
js
out
sti
push
ja
into
or
cltd
sti
jne
and
nop
dec
mov
xor
jne
jae
into
ss
int
sub
or
mov
mov
pop
sti
stc
dec
and
scas
xor
flds
xchg
inc
sub
fsts
adcb
sbb
in
xchg
dec
adc
inc
adc
xor
mov
test
das
orl
adc
mov
insb
xchg
lds
cmp
mov
rorb
movb
outsl
mov
outsl
pushf
imul
clc
xchg
push
mov
movsb
repz
int3
mov
mov
js
push
hlt
jno
xor
and
leave
mov
jl
leave
out
sbb
lods
dec
test
jp
dec
sub
cmpsb
jmp
stc
lds
rorl
int
mov
add
mov
test
mov
cmp
mov
das
inc
and
mov
in
clc
out
popf
and
dec
je
or
add
test
imul
daa
pop
mov
jg
fisubrl
jbe
hlt
xchg
sarb
jl
dec
jb
pop
mov
xchg
cmp
stos
mov
mov
cmpsl
mov
mov
mov
xchg
jae
aam
pop
mov
repnz
jo
scas
clc
inc
xor
insl
ljmp
mov
int3
mov
xor
pushf
sti
mov
mov
gs
mov
fimull
sbb
incl
inc
or
fs
push
push
movsb
push
sbb
out
lahf
stos
pop
add
mov
imul
loop
ss
xchg
mov
lcall
ret
push
mov
ja
stc
jns
icebp
jge
fidivrl
mov
inc
pushf
inc
dec
loopne
aaa
jb
cmp
adc
icebp
inc
loop
fmuls
sub
icebp
inc
sbb
fisttpll
xchg
jmp
mov
lret
xor
jl
pop
in
mov
sbb
lock
loope
int3
sub
lock
popa
and
mov
jno
adc
mov
das
sbb
test
es
dec
insb
adc
leave
push
sahf
push
test
movsb
cmpsl
inc
jbe
lret
and
jnp
mov
push
icebp
sbb
xor
xchg
nop
repnz
cmpb
adcl
adc
xlat
mov
jmp
mov
pop
sti
pop
cli
jnp
repz
jle
jmp
in
fnstcw
mov
sarb
or
fwait
enter
in
pop
xchg
cmpb
xor
sub
rcrb
stos
movsl
int3
ret
sahf
mov
inc
cmp
pusha
mov
fimuls
shll
mov
mov
fistpll
sbb
fs
sbb
ficomps
sbb
mov
cwtl
pop
test
loope
clc
movsb
inc
fisttpl
clc
inc
lret
jle
mov
add
aam
stos
xchg
test
clc
andb
jbe
nop
pop
ret
cmp
push
push
inc
or
and
lcall
add
scas
into
jmp
dec
mov
pop
sbb
outsb
push
clc
pop
adc
xchg
and
push
stos
lret
push
imul
in
cmpsb
mov
jb
nop
fwait
out
sub
addr16
pop
push
faddp
and
lcall
int
jno
jns
add
and
sub
ret
gs
rcll
imul
mov
sub
pop
and
sbb
add
lea
cmp
in
imul
pop
push
jb
push
push
lods
clc
jle
sarl
or
sub
cli
cmp
push
std
mov
or
es
xchg
xchg
adc
inc
imull
cmpsb
ds
fmull
pop
subl
stos
aaa
imul
dec
and
mov
or
lret
mov
inc
sub
test
push
fs
pop
cmp
add
cld
test
xchg
push
lea
adc
mov
inc
idivl
xchg
sub
push
movsb
push
dec
shrl
xor
mov
and
inc
cwtl
fsubl
cmpsl
lods
mov
ret
or
lahf
jecxz
filds
dec
es
mov
pop
sbb
andl
test
push
inc
cmpsl
cltd
sub
je
cmpsl
inc
xchg
xchg
outsl
sbb
dec
repz
addr16
mov
sub
dec
ret
addr16
mov
mov
sub
popa
bound
shlb
inc
dec
sahf
test
in
dec
cmpsl
fs
lret
dec
into
mov
data16
sbb
loopne
xchg
sub
repnz
fidivs
cmp
shll
je
mov
ja
lcall
jne
test
xor
add
fucomi
movsb
std
loope
rorb
xchg
push
hlt
mov
pop
dec
arpl
jb
push
cmc
pop
and
repz
mov
mov
push
bound
test
xlat
movsb
xor
pop
pop
cld
fwait
ja
adc
xor
xor
imul
int
add
out
push
data16
stos
in
xor
cltd
mov
bound
or
je
sub
add
add
push
adc
push
or
arpl
aas
and
push
stos
cld
dec
lcall
ret
xchg
xchg
test
sbb
sub
mov
addr16
js
inc
add
jp
push
call
push
loope
push
push
fwait
and
xor
xchg
cmpsl
divb
mov
es
adc
sub
or
fwait
jmp
decl
out
in
pop
js
ret
les
ds
call
rcl
add
scas
cwtl
push
jp
pop
clc
stos
pop
arpl
test
push
inc
fstpt
jno
cmpl
jge
sarb
push
dec
push
cmovle
inc
xchg
push
in
adc
aam
in
add
loopne
dec
sbb
aam
sbb
int3
in
inc
add
cmp
call
jecxz
orl
and
jle
xchg
repnz
lods
xchg
into
stc
and
jl
sbb
sub
pusha
cltd
rcrl
dec
gs
dec
mov
scas
dec
stos
into
sub
loop
test
adc
into
and
pop
mov
xor
call
ljmp
pusha
jmp
mov
int
cmp
out
jae
loop
pop
out
hlt
mov
loop
out
mov
sub
mov
jle
and
bound
popa
aaa
sbbb
jae
dec
jecxz
push
cmp
push
call
ret
ret
int
jle
adc
iret
xchg
scas
inc
test
or
movsl
cmc
scas
js
clc
inc
outsl
push
sub
and
fbld
xchg
cli
outsl
pandn
stc
not
xchg
mov
lds
jmp
push
or
and
ja
add
das
test
adc
xor
movsl
nop
push
cld
push
sbb
lock
rcrb
inc
adc
jnp
sub
std
mov
movsl
pop
cmpsb
rolb
cmpsb
nop
shrb
cmp
mov
adc
lea
rep
sbb
mov
mov
popa
jge
iret
pop
cmp
or
and
pushf
cmp
cmp
mov
in
shlb
fwait
xchg
mov
sar
sub
cmpsb
sbb
cmp
inc
mov
out
popf
pop
jae
mov
cmp
sub
pmulhw
inc
fsts
dec
mov
mov
push
pop
push
lods
jns
outsl
sub
pcmpgtd
sarl
pop
mov
push
pop
scas
jo
bound
movsb
nop
in
dec
in
sbb
sub
hlt
jns
icebp
cltd
insl
in
or
clc
fwait
or
adc
inc
push
movsb
bound
leave
fiadds
xchg
adc
dec
loope
sbb
ja
stos
sub
and
inc
pop
mov
lret
test
adc
subb
addb
ret
addr16
daa
dec
outsb
je
mov
fistpll
loop
adc
sbb
out
mov
xor
add
enter
and
daa
pop
mov
out
xor
and
xor
fnclex
das
jp
test
add
shll
push
xor
shrb
add
fistpl
add
jle
shlb
cltd
int
xchg
pop
or
cmp
outsl
inc
add
fsubs
ds
imul
adc
xlat
arpl
lock
je
test
lret
sti
sub
fcoml
out
mov
jge
popf
mov
mov
mov
leave
mov
jbe
gs
pop
stos
pop
sar
sbb
or
jl
test
push
add
loopne
push
icebp
push
lods
lret
das
push
add
pop
xchg
cmp
out
loop
or
xchg
or
sbb
inc
push
stc
mov
dec
loopne
dec
push
in
orl
push
lods
push
jno
into
mov
or
cmp
inc
or
sahf
es
icebp
imul
pop
clc
xor
je
ja
rcl
outsl
int
hlt
inc
push
jb
cmpsb
pop
addr16
sarl
rcr
loop
hlt
subb
xor
mov
add
sbb
pop
stc
imull
fnstsw
and
ret
call
pop
je
aad
test
push
fdivs
sahf
icebp
mov
sub
pop
mov
push
mov
jmp
cmpb
jns
loope
arpl
xchg
xchg
or
push
inc
fistl
stc
sub
adc
or
cmp
jno
or
sub
mov
and
sbb
test
js
subl
add
sbb
push
adc
xchg
xchg
add
xchg
cltd
xchg
dec
loope
js
xor
frstor
and
lods
cmp
aam
ss
mov
or
shrb
in
mov
mov
jl
subb
and
movb
lcall
xchg
movsb
pop
inc
pop
jl
cmp
dec
jbe
push
pop
fisttpl
ja
xor
test
sub
xchg
jno
scas
lods
xor
and
push
mov
xor
clc
scas
jbe
push
in
push
cmp
sub
adc
adc
mov
data16
cmpsl
pop
outsb
lret
les
es
cmp
sub
sbb
jb
sbb
ss
daa
adc
jb
mulb
imul
xchg
cmp
lahf
mov
add
mov
leave
pop
jle
xchg
push
sbb
mov
cwtl
data16
mov
mov
int
decb
dec
xchg
fbld
shlb
xchg
pop
xor
pop
pop
sbb
pusha
xchg
out
mov
adcl
push
lret
incl
jl
fcomp
cwtl
das
ret
pop
and
jbe
xchg
lds
loopne
mov
push
in
dec
negl
add
add
push
insl
xchg
setl
stc
ficompl
pop
in
adc
leave
inc
xlat
sarl
jo
ja
addr16
lods
fs
int3
or
push
hlt
jnp
dec
daa
sti
inc
and
adc
fsubr
push
int
aad
in
ffree
inc
pop
addl
dec
jb
lock
inc
pop
mov
lcall
lods
lret
fldenv
ret
mov
cmp
sbb
pop
mov
arpl
das
jbe
les
cmc
popf
dec
fs
js
cmp
and
pop
call
jmp
cmp
mov
out
call
pop
push
cmc
aas
pop
jp
adc
mov
adc
setg
dec
ds
jo
cmc
inc
adc
sbb
jns
push
jno
sub
cltd
dec
push
cmp
dec
push
pop
mov
inc
jno
stos
pop
lcall
dec
dec
mov
gs
bound
sbb
icebp
xchg
scas
rclb
mov
mov
pandn
les
cmp
or
mov
mov
push
or
out
in
adc
bound
jns
jle
jp
addr16
lahf
mov
mull
mov
jmp
lods
mov
notl
int3
sub
sbb
jg
aas
push
and
jbe
cld
push
xchg
es
jno
and
and
add
mov
stos
and
cmpsl
in
insb
mov
cmp
leave
shrl
mov
stc
popa
mov
push
hlt
push
repz
inc
insl
loope
jge
decb
loopne
loop
sub
loopne
cld
cli
pop
xchg
add
pop
fwait
xor
jl
je
test
cmpsb
xorl
ret
mul
mov
pop
aam
ds
js
jno
xor
orb
lea
dec
push
stos
push
push
stc
outsl
inc
data16
lock
int3
jns
and
sub
fnstsw
jae
mov
sahf
xorb
outsb
fldenv
adc
jecxz
adc
mov
lods
push
je
aaa
mov
and
jge
lods
xchg
test
cli
sub
jecxz
popa
movsb
es
jb
add
ja
mov
ss
push
mov
xor
jne
loope
jge
dec
jg
adc
lahf
xchg
xchg
aad
xchg
mov
shrb
sub
loopne
pop
enter
fcomps
mov
mov
bound
es
cmp
adc
jne
jl
mov
lahf
lods
in
leave
mov
sub
ret
cmp
ds
dec
push
add
in
scas
cmpsl
add
xchg
fwait
sbb
jnp
mov
sub
jno
sub
stos
inc
lret
setns
jmp
scas
stos
sbb
mov
outsl
loope
movsl
mov
mov
add
call
notl
or
pop
or
jg
and
fbld
jmp
sub
rorl
xorb
sbb
fwait
data16
nop
insb
add
mov
pusha
and
cmp
add
stc
loope
push
and
sahf
in
es
jecxz
lret
sub
mov
dec
adc
add
andl
xchg
lods
in
push
and
adc
pop
sti
inc
add
jmp
roll
inc
push
ror
and
faddp
scas
frstor
push
jne
sub
rol
dec
orb
xor
jno
mov
lock
lret
cltd
jmp
sbb
dec
push
dec
es
push
out
add
ljmp
mov
cmp
and
push
inc
xor
jl
insl
les
push
jp
pop
xchg
into
rcrl
rcrl
call
imul
cmpsb
fwait
mov
jb
pop
call
js
mov
lcall
push
push
jo
add
repnz
mov
push
call
lcall
mov
push
pop
lcall
daa
xchg
mov
orl
xchg
pop
daa
mov
lahf
inc
repnz
and
int
and
mov
and
sub
mov
popf
in
mov
les
mov
test
scas
mov
jnp
and
aas
and
sbb
loopne
adc
xchg
sahf
xlat
xchg
outsl
jecxz
repz
sarb
and
sub
xchg
fistpl
stc
out
sbb
add
mov
jno
clc
or
xor
mov
mov
daa
loop
imul
test
and
iret
in
or
shlb
xchg
outsl
mov
rclb
jg
fsubrp
icebp
fidivs
mov
outsb
ja
mov
sub
jl
and
jg
dec
xor
inc
and
mov
or
pop
jp
ret
push
iret
aad
sub
jl
add
inc
js
xor
inc
ret
mov
aaa
shlb
fbstp
mov
push
inc
ljmp
repnz
mov
daa
add
popf
sbb
in
jmp
shll
imul
ja
xchg
test
push
push
push
aas
or
fiaddl
mov
sbb
inc
adc
pop
fmull
fists
mov
xor
mov
sbb
fsubr
pop
and
add
xchg
mov
hlt
rolb
sar
push
xchg
sub
cmpsl
jp
repz
mov
push
jnp
adcl
jg
out
mov
jg
push
fbld
inc
mov
hlt
pop
adc
pop
outsl
or
int
jp
rclb
or
jb
ja
xchg
and
add
cltd
jo
movsb
push
ja
or
sub
shrb
das
clts
add
push
jecxz
std
sub
hlt
insl
jg
int
pop
sbb
jo
xchg
and
scas
ficompl
jno
or
jge
mov
mov
in
adc
jo
ret
push
into
mov
xchg
mov
add
xor
ret
insb
or
fildll
sub
pushf
arpl
lret
and
enter
add
aas
cwtl
loope
cmpsl
scas
fcmovnbe
xor
sub
add
or
lret
scas
sbb
testb
fdiv
pusha
pop
xchg
stc
jb
push
dec
icebp
das
sbb
and
inc
jb
jle
sub
mov
fcomps
mov
in
repz
push
in
sti
adcl
xchg
repnz
jmp
jl
adc
push
dec
lds
pop
and
inc
in
mov
movsb
or
jb
sti
sbb
push
lret
stc
pop
popf
leave
in
dec
xor
mov
push
xchg
jecxz
js
loopne
jbe
jmp
jb
add
fwait
inc
xchg
sarb
jl
repnz
sbb
ffree
and
xor
push
mov
cwtl
mov
pop
aad
pop
cmc
adc
call
loopne
inc
aam
imul
sub
xor
jb
movsl
in
movsb
leave
push
in
insl
mov
pop
stos
ljmp
jle
jb
scas
mov
and
sub
sbb
jg
pop
arpl
lods
pop
or
je
xor
adc
leave
popa
sbb
stc
rcr
cmp
xor
mov
push
lds
lea
mov
push
shlb
test
cmp
sub
or
xor
dec
mov
push
pop
into
or
mov
mov
mov
mov
std
sub
in
ficomps
push
pop
push
movsl
cwtl
mov
sti
shl
xchg
sub
pop
push
in
mov
jmp
pop
es
fwait
js
ljmp
or
pop
pop
sub
mov
mov
xchg
rorl
rcll
ficoml
mov
mov
inc
mov
mov
xor
sahf
jbe
cmpl
sahf
filds
icebp
dec
xchg
pop
loop
js
jmp
jge
adc
out
sub
push
mov
imul
sbb
sub
jecxz
outsb
xor
decl
mov
shrb
sbb
xchg
sub
andb
movsb
mov
cmp
stos
outsb
aam
into
xor
or
out
scas
inc
ds
cmp
adc
fninit
cltd
cwtl
test
mov
in
inc
in
mov
test
popa
nopl
enter
pop
js
push
and
add
outsl
sbb
mov
xchg
jnp
add
mov
cmp
sub
jo
ja
fdivrl
add
jne
xchg
inc
push
pushf
or
mov
cmp
sbb
nop
enter
mov
xor
and
imulb
shr
cmp
xchg
push
sbb
mov
out
shrb
sbb
movsl
sub
punpckhbw
jge
bound
push
adc
or
push
dec
and
cmp
mov
je
cmpsl
iret
fistl
daa
repz
push
inc
mov
xor
mov
lods
fidivrl
adc
sbb
pop
jnp
xchg
inc
nop
rcrb
cmpsb
aas
fidivs
es
hlt
push
cmp
out
in
and
inc
pushf
mov
shrl
dec
fwait
stos
xor
imul
push
and
xlat
aad
or
cmp
and
xchg
dec
add
dec
jmp
pop
push
les
lock
push
aaa
icebp
xchg
out
mov
repz
adc
mov
push
mov
jbe
call
lahf
repz
movsb
repnz
fcmove
pop
stc
xlat
add
sbb
xchg
pushf
mov
inc
mov
mov
adc
xor
loop
cmp
fwait
stos
jae
arpl
test
jl
lahf
out
xor
loope
out
jg
mov
push
sub
mov
leave
sub
jns
insl
in
ss
aam
jb
call
stos
jo
les
jge,pt
leave
push
adc
dec
dec
pusha
clc
rorl
cmpsb
and
pop
jo
out
enter
push
ficompl
je
mov
or
dec
push
cmp
imul
cmp
rcrb
loop
in
push
das
cmp
pop
addr16
shll
fnsave
jl
ret
aam
xor
cmp
sbb
mov
jl
push
and
in
popf
and
mov
mov
sub
popf
das
fcomps
add
addl
push
mov
adc
insb
jge
add
push
shll
push
sub
jmp
or
sbb
das
push
dec
jp
clc
push
xchg
aas
dec
les
adcl
int3
add
lret
or
outsl
mov
lds
popa
jmp
jecxz
sbb
adc
imul
jae
int3
sub
push
inc
fnstenv
inc
mov
jg
iret
cmp
orb
out
push
das
inc
cld
sub
mov
lods
add
out
xchg
xor
xchg
push
rorl
mov
cs
sub
pop
xchg
out
add
push
xor
lock
out
addr16
mov
repnz
test
out
mov
push
rolb
cmp
sub
das
add
ja
mov
pop
loope
pop
aad
push
cmc
scas
mov
add
outsl
sbb
xchg
dec
lahf
mov
cld
notb
fsubs
mov
cmp
aaa
mov
das
nop
test
sub
test
sub
jb
std
outsl
add
je
adc
adc
mov
push
in
mov
fmuls
lea
add
pop
pop
andl
push
js
call
stos
testl
pop
or
aas
sub
push
sub
lret
sti
inc
mov
insl
dec
and
outsb
clc
push
pop
jbe
sbb
adc
mov
leave
and
lds
fistl
or
scas
nop
rcl
popf
cmp
inc
adc
and
add
stc
pop
lock
xor
sbb
jmp
jne
int3
sbb
lods
inc
cmp
insl
xchg
mov
pop
add
add
jl
rorb
xor
loop
xor
cli
xchg
pop
insl
mov
test
jl
jle
mov
mov
sbb
or
outsb
ret
pop
xchg
les
jns
push
andl
jne
scas
xor
int3
fsubr
adc
pushf
and
sub
mov
pop
cmp
int
aad
sbbb
jmp
push
mov
xchg
adc
test
fldl
fcompp
loope
ja
add
fs
shlb
mov
xor
push
cmp
jecxz
push
int3
push
and
lds
mov
popl
mov
xchg
cmp
xor
xchg
repnz
jbe
imul
cld
leave
imul
add
cmp
mov
push
sbb
ficoms
push
movsb
dec
out
or
pop
shrb
fdivp
and
ljmp
jb
outsl
notb
and
add
jae
pop
xchg
jne
xor
decb
ljmp
roll
stos
cmp
test
mov
into
mov
mov
rorl
das
ja
inc
add
xchg
mov
ss
rorb
roll
rclb
call
lcall
jmp
jne
cmc
mov
sbb
out
stos
aas
iret
adc
mov
inc
push
movsb
push
adc
sub
movsb
push
push
push
or
cmc
push
jp
jno
mov
jne
lods
or
mov
push
pop
add
shl
fs
jle
add
inc
jg
xor
lds
pop
sbb
mov
jp
add
popa
kunpckbw
cmc
fmul
dec
push
mov
mov
lahf
inc
dec
sbb
fcmovnu
andl
pop
jae
pop
xchg
sub
xchg
pushf
je
icebp
shlb
inc
das
movsb
push
popf
popa
jns
aas
and
cmpsl
call
push
lods
add
lahf
and
xor
int3
add
jb
sti
popa
aas
push
mov
fmuls
push
hlt
cmc
push
jb
std
lcall
pop
sbb
ret
shrb
inc
sysret
data16
push
into
cmp
aad
xchg
mov
int3
sub
fiaddl
fdivl
iret
push
es
stos
cmp
mov
icebp
fnstsw
xor
push
cmp
cmp
cltd
jbe
and
in
sub
xchg
aas
loope
jg
imul
arpl
mov
mov
roll
rorb
lock
xchg
outsb
mov
pavgb
or
jo
jmp
or
das
push
mov
into
fbstp
out
cmpsl
outsl
ret
cmpl
dec
mov
lahf
dec
adc
mov
bound
pop
mov
in
out
cmpsl
inc
mov
jge
pushf
addr16
push
inc
pushf
mov
xchg
mov
pop
lods
mov
stos
jmp
pop
lock
loope
adc
int3
or
jb
pop
add
inc
js
call
filds
popf
imul
je
adc
mov
xor
dec
xor
mov
mov
pushf
push
push
fisttps
sub
mov
ja
lcall
adc
xchg
and
pusha
push
mov
test
les
sar
push
repz
mov
test
fs
decb
xchg
cli
bound
jns
insl
rcrl
fimull
xchg
sbb
lea
dec
inc
xchg
sub
stc
mov
in
mov
push
inc
scas
push
idiv
sub
add
xchg
or
in
out
fisubl
dec
out
jb
outsl
andb
inc
mov
cld
fwait
pop
divl
mov
test
stos
xchg
repnz
push
in
push
push
xor
add
test
mov
push
or
push
fcmovnu
leave
and
in
mov
mov
negl
mov
icebp
fs
adc
jae
addr16
mov
inc
lds
repnz
out
mov
push
sbb
into
push
stos
dec
cs
or
push
dec
push
js
fldcw
pop
inc
jb
jecxz
data16
ret
push
pop
add
sbb
sarl
lret
in
jb
or
mov
adc
lds
mov
jl
cmp
inc
ljmp
decb
pop
sti
cmp
mull
outsb
sti
push
jb
icebp
ss
mov
inc
sub
mulb
in
dec
imul
cld
mov
or
stos
mov
or
in
and
inc
fcmovbe
and
sbb
in
xchg
ds
cli
popf
push
das
and
push
ret
pop
inc
js
stos
pushf
push
push
mov
inc
dec
mov
and
dec
mov
lock
dec
sbb
push
fcmovnbe
add
jns
and
pop
repnz
mov
hlt
mov
enter
jae
call
int
inc
pusha
iret
mov
cli
nop
dec
ds
negb
int
nop
mov
mov
mov
push
popf
fisttpl
dec
outsl
lods
cmp
add
xchg
out
or
out
test
adc
dec
mov
fisttps
jno
push
mov
jo
aam
adc
lock
push
jnp
jl
dec
xchg
jbe
ds
xchg
mov
jo
sub
mov
loopne
das
pop
jae
lock
ret
imul
mov
and
xlat
sbb
adc
ret
push
js
pop
fdivrs
mov
jmp
fmull
push
stos
push
cli
pushf
call
daa
add
les
push
cltd
push
popa
jp
aad
ja
inc
popa
pop
fldl
sbb
mov
mov
imul
repz
mov
add
inc
sbb
adc
mov
sbb
rorl
jmp
add
adc
jle
jne
push
add
mov
adc
adc
pop
rcrb
sbbl
mov
data16
adc
movsb
mov
shll
mov
pop
adcl
add
push
call
xor
sub
jno
cmp
ret
cltd
add
js
cwtl
cs
sub
addr16
mov
pushf
shll
sahf
pop
and
and
xor
dec
xchg
xchg
sti
outsb
and
fucomp
syscall
push
ja
pop
pop
daa
sbb
add
push
sub
dec
outsl
sbb
loopne
push
mov
xlat
loop
fbld
std
sbb
sub
pop
enter
mov
dec
jg
loopne
pop
dec
stc
lods
fisttpll
cld
aad
jp
aaa
xor
and
arpl
rolb
lret
inc
mov
imul
addr16
push
out
xchg
sbb
or
cmp
ret
add
push
jnp
or
sub
inc
fcom
or
cmc
ror
or
pop
popf
fldl
gs
out
mov
movsl
sbb
icebp
lock
jp
mov
mov
in
mov
dec
je
sub
jecxz
push
test
cmc
shr
in
xor
inc
inc
xchg
pop
out
pop
adc
sbb
mov
insb
pushl
dec
addr16
pop
pop
lods
inc
test
mov
sbb
add
in
push
cmp
scas
mov
adc
add
cmpsl
inc
popl
mov
sbb
faddl
pop
xor
std
js
mov
stc
lods
stos
sar
sub
imul
das
sub
jno
push
ja
sub
rcll
pop
leave
sbb
test
pop
jge
icebp
pop
sti
xchg
push
pop
shlb
iret
pop
add
add
jp
sbb
push
pop
roll
mov
rcll
cmpsb
inc
test
sbb
subb
popa
movsl
mov
pop
inc
cmpsl
ds
imul
ret
imul
mov
or
das
sub
push
mov
into
outsl
pop
gs
jmp
pop
mov
or
pop
dec
sub
subb
xor
orps
nop
or
cmp
popa
or
rep
sbb
pushf
cmp
pop
loop
fsubs
fnstenv
cmp
arpl
mov
cmp
stos
add
pop
and
fwait
cwtl
outsb
sbb
fwait
mov
popa
popa
fidivrs
aaa
negb
out
pop
sbb
and
test
mov
mov
pop
rolb
jle
stos
fcomps
xchg
movsb
mov
out
add
add
sahf
fcoms
clc
scas
fldenv
cmp
mov
jmp
xor
pop
sti
shll
fdivl
out
arpl
xchg
rol
punpckhbw
jb
movsl
ss
out
sbb
mov
fcoml
cmpb
arpl
ret
push
push
jp
or
lock
sub
ss
daa
cmp
xor
jbe
icebp
mov
add
mov
jmp
pop
mov
lea
push
lret
rcrb
enter
ss
mov
jno
mov
outsl
or
xorl
pop
push
cmpsb
push
outsb
xor
adc
pusha
adc
call
and
out
clc
sbb
mov
insl
adc
jmp
jnp
test
inc
sarb
lds
jl
inc
lods
outsb
mov
clc
mov
cwtl
push
cmp
lods
aas
mov
inc
sbb
sub
sbb
dec
push
xor
repnz
pop
outsl
sbb
push
dec
call
out
aaa
push
into
in
sub
xor
mov
dec
fists
ljmp
into
ret
pop
dec
ja
sahf
xchg
mov
scas
ret
scas
or
xor
sub
in
sbbb
nop
shr
mov
cmp
js
lods
popa
mov
ss
add
in
sbb
mov
lods
jmp
xchg
dec
sub
mov
mov
test
xchg
add
pop
test
sub
daa
push
and
scas
ja
mov
mov
or
push
push
lret
mov
es
or
or
test
mov
subl
adc
fcmovnu
mov
push
inc
pusha
pop
leave
ja
sub
sub
movb
test
dec
mov
shl
lds
jns
test
add
stos
ds
sbb
js
repnz
jmp
add
scas
repz
lahf
or
bound
stos
adc
add
mov
sbb
loope
xchg
sbb
sahf
dec
sahf
daa
les
je
lret
repnz
aaa
cmp
popa
mov
jns
push
outsb
shrb
jge
js
lock
jno
pop
hlt
jnp
add
cmp
inc
aaa
int
mov
lock
xchg
cmp
rcl
mov
mov
mov
or
dec
pusha
adc
repz
add
sbb
xchg
pop
fcom
and
jno
sub
sbb
mov
mov
push
and
jae
cmp
icebp
push
fmuls
add
sbb
js
sub
pusha
sub
inc
inc
or
and
xchg
mov
pop
jo
xor
out
add
or
inc
jae
lock
mov
dec
popf
fmul
mov
sub
inc
mov
out
jmp
mov
clc
jle
inc
mov
xchg
pop
arpl
mov
shl
sbb
hlt
dec
push
xchg
jae
lock
clc
mov
imull
lock
adc
lret
pusha
out
push
sub
jno,pt
push
mov
mov
or
xor
hlt
lcall
xor
in
in
mov
cmp
cmp
xchg
jnp
and
add
and
adc
je
jg
push
xchg
xchg
jnp
js
jmp
sub
mov
push
sub
push
cmp
jmp
dec
mov
mov
repnz
test
outsl
pop
jle
sub
add
jbe
ss
mov
add
aaa
out
jmp
in
mov
or
cld
sbb
sbb
mov
sub
vxorps
cmc
dec
mov
cmp
int3
test
sbb
fidivrs
lods
jge
or
imul
ds
adc
push
in
inc
insl
stos
movsb
pop
jge
cmp
ss
xchg
inc
xlat
jmp
aad
jbe
sub
mov
cltd
cmpsl
enter
sarb
and
adc
lods
enter
in
mov
adcb
jns
pop
popf
sbb
out
inc
imul
pop
loop
pop
cmp
jae
or
cmp
rorb
jne
pusha
das
sub
mov
imull
movsb
cmp
jb
hlt
xor
loopne
cli
sub
mov
or
daa
aas
jae
jmp
mov
lock
or
icebp
fwait
mov
imul
or
pop
cs
mov
sbb
mov
jbe
add
test
into
xchg
test
xchg
jecxz
sbb
dec
lods
pop
sub
mov
or
in
push
jmp
push
push
test
rol
out
or
xor
subl
or
jno
movsl
pop
ljmp
pop
or
test
xchg
sub
adc
cwtl
mov
and
fisubl
cmc
xchg
enter
dec
fwait
std
test
inc
fs
scas
pop
mov
mov
call
enter
aam
cli
ljmp
cmp
sbb
mov
cmp
sub
push
mov
bound
cwtl
jbe
jns
stc
mov
pusha
dec
mov
lahf
cmpsb
std
sbb
mov
or
std
ret
sub
push
pop
xlat
mov
in
ud1
mov
pop
aad
bound
mov
rolb
adc
push
loopne
inc
mov
sub
scas
pop
leave
fwait
adc
nop
sbb
iret
cmp
dec
aas
and
inc
mov
dec
add
mov
mov
add
add
lret
shlb
cmpl
sub
inc
dec
xchg
gs
test
jns
pop
push
loop
js
pop
ja
out
push
push
jle
mov
sub
cld
into
cwtl
pop
push
scas
add
jle
cltd
insb
dec
pop
ret
or
test
adc
hlt
stos
adc
mov
mov
out
push
fldlg2
lret
fidivrs
test
pop
fdivrs
out
push
cli
ret
xor
mov
mov
rcrb
mov
imul
pop
pop
or
push
mov
fwait
dec
and
push
ret
xchg
add
ret
test
dec
mov
and
dec
push
scas
movsl
das
in
data16
adc
jle
mov
in
jns
flds
push
out
popa
nop
xchg
fnstsw
xchg
dec
into
push
jns
pop
push
dec
pushf
bound
and
pop
mov
jecxz
icebp
in
inc
pop
xchg
jbe
arpl
push
xor
sbb
push
fld
mov
fsub
out
call
cmp
mov
or
inc
sub
lds
adc
popf
or
sub
out
xorl
aas
xor
mov
ljmp
pop
lods
sbb
cmc
sub
push
and
popf
xlat
cmp
mov
ds
imul
test
mov
jbe
inc
mov
cmp
xor
mov
xchg
aad
fcmovu
mov
push
add
xor
mov
mov
push
push
leave
mov
pop
cmp
inc
fwait
out
and
shlb
jns
das
loopne
nop
push
es
xchg
shrl
mov
aad
lock
push
cmpl
jb
xor
cmpl
pop
pop
data16
cld
aas
divb
jl
jbe
fdivl
and
push
shll
xor
cltd
sbb
stc
adc
cmp
jg
adc
jecxz
sbb
mov
or
pushf
adc
mov
imul
adc
jne
movsb
aaa
rclb
outsl
xor
pop
adc
cmp
cmpsl
inc
or
mov
cmc
fs
loope
in
data16
cltd
inc
sbb
movsl
sbbl
mov
mov
push
xchg
jae
adc
and
mov
jb
mov
cmp
insl
adc
pop
push
sub
push
xor
xchg
add
pushf
repnz
adc
inc
cmp
fisubl
scas
lret
jmp
or
lods
in
insb
mov
mov
test
dec
scas
inc
lods
mov
lds
cwtl
in
fstl
movsl
cs
add
out
or
into
add
enter
in
in
adc
movsl
inc
jecxz
clc
orb
dec
xchg
inc
jp
ds
add
test
fisubrs
nop
push
inc
popf
or
xor
sub
je
clc
sub
cmp
notb
fisubl
xchg
int
mov
xchg
xchg
jl
mov
mov
cmp
push
fs
dec
or
pop
xor
add
add
out
scas
negl
sbb
dec
push
lret
adc
sub
lret
pop
mov
mov
pushf
pop
mov
mov
mov
dec
mov
cs
imull
aas
adc
arpl
jecxz
mov
inc
sti
sarl
sbb
adc
cmp
sbb
pop
add
aaa
aam
push
inc
popf
pop
es
stc
sbb
stos
sub
shrl
cmp
insl
and
movsb
enter
push
jecxz
cmp
scas
sub
cmp
out
jb
xlat
jp
push
cmp
push
jns
inc
sti
or
notl
and
lea
jg
mov
dec
fidivrl
mov
push
orb
gs
mov
or
andl
push
dec
inc
lret
mov
and
in
leave
fisubl
ret
jg
mov
xorb
dec
scas
pop
and
loop
inc
faddl
dec
inc
or
xor
add
dec
sbb
out
pop
mov
adcb
ficoml
mov
cltd
es
jp
out
repnz
pop
mov
xchg
jns
call
aad
pop
xchg
inc
sbb
mov
outsb
pop
push
into
out
sbb
push
std
push
xor
add
ljmp
into
push
jnp
fmuls
sbb
lahf
out
xor
push
cmp
in
addb
adc
ret
or
xlat
push
cmp
push
sbb
pop
fcmovne
push
mov
out
mov
sbb
out
ds
pushf
in
pop
dec
cmp
ds
push
test
or
int
scas
les
out
cmp
popf
jmp
into
fcmovb
fsubr
rcrl
xchg
xor
mov
adc
pop
push
add
lret
imul
push
scas
inc
and
ljmp
fidivl
xchg
repz
jnp
cltd
jo
fcoml
xor
mov
inc
mov
sbb
outsl
cmc
ja
hlt
mov
or
xor
mov
imul
push
xorb
fidivs
xor
jb
repnz
fdivrs
popa
popf
pop
or
or
popa
dec
clc
xor
shlb
mov
pop
pop
sub
add
mov
mov
mov
xor
xchg
xor
and
or
mov
cmpsl
outsb
aaa
push
int3
cmp
inc
pop
fnstsw
mov
pop
fs
in
jmp
popa
sub
mov
nop
hlt
xchg
gs
cltd
mov
stos
xor
or
jno
popa
sbb
stos
jp
mov
sbb
pop
imul
jl
sub
xchg
lret
or
imul
jl
sar
int3
out
sahf
cmp
call
and
loope
sub
fildl
bound
add
push
cmpsl
lret
sahf
aaa
push
pop
ss
mov
add
jnp
cmpsb
sub
add
aas
add
xlat
xchg
adc
popa
push
mov
lret
adc
or
inc
jns
or
and
push
lret
add
adc
int3
inc
xchg
mov
xchg
pop
movsl
adc
movsb
popa
push
pop
jle
data16
and
xor
or
add
xlat
fists
std
int3
or
or
xchg
push
sub
inc
xchg
mov
std
xor
inc
jnp
in
inc
rcll
hlt
push
adc
mov
ds
jecxz
sub
loopne
jle
jne
pop
push
cmp
mov
ss
and
dec
icebp
sarb
ss
leave
sbb
mov
ret
jge
jns
xor
ds
aam
shlb
pop
adc
es
icebp
add
pop
lahf
pandn
xor
pop
xchg
ss
std
ljmp
loop,pt
outsl
test
cmc
cmp
cmp
push
push
sub
cmpsl
fmull
xchg
pop
mov
lock
fistpll
stos
js
adc
mov
xchg
inc
dec
test
aaa
sbb
pop
cmc
dec
imul
mov
pop
loope
or
push
jle
fdivrl
sub
xchg
sarb
push
ret
int3
push
daa
dec
xor
push
xor
loope
out
mov
sti
repnz
add
adc
add
out
jo
adcb
enter
add
mov
cld
cli
push
jle
mov
push
inc
xchg
scas
iret
je
xorb
int3
and
fisttpll
sub
loope
cli
mov
outsl
iret
inc
jl
inc
jnp
jge
in
jae
fldt
mov
inc
leave
loop
xor
sub
shll
sbb
jo
add
js
pop
mov
dec
push
iret
xor
and
bound
fwait
push
scas
push
scas
clc
in
and
negl
lahf
out
jbe
pop
mov
test
pop
mov
out
dec
add
flds
jnp
cltd
mov
jbe
mov
hlt
popf
push
jbe
js
adc
aam
sbb
push
mov
cmc
pop
xor
outsb
mov
ja
xor
sub
pop
push
push
cmp
or
xchg
movsl
xchg
clc
xchg
or
dec
frndint
push
xchg
xor
test
andb
mov
pop
push
dec
mov
or
push
cli
dec
mov
int3
mov
lcall
fnstenv
or
jae
int3
mov
jle
dec
loope
add
pop
outsb
xor
mov
imul
dec
cmp
imul
out
aaa
or
add
adc
addr16
and
cltd
leave
imul
into
stos
sti
lret
cmpsb
aam
test
pop
je
nop
and
push
mov
movsl
inc
push
and
lret
inc
stos
mov
sbb
sub
lods
cmp
xchg
jl
pop
mov
fidivl
xor
lods
mov
push
and
jle
mov
adc
mov
sub
loop
adc
jp
pop
idiv
xchg
xchg
cmp
pushf
fisttps
pop
mov
jb
arpl
psubb
jo
add
popf
pop
test
jae
mov
pop
fs
jp
aas
xchg
xchg
outsl
push
or
mov
mov
push
nop
test
lret
mov
inc
gs
xor
xchg
adc
xlat
and
movsl
mul
out
in
add
add
inc
adc
sbb
and
sub
out
gs
or
or
lcall
push
in
push
lods
mov
sbb
and
jecxz
xchg
lcall
stc
add
loop
lods
jmp
xor
rcll
and
jae
aam
push
inc
ss
sub
mov
sub
jecxz
mov
arpl
mov
mov
adc
dec
arpl
jle
les
out
pop
std
mov
and
mov
adc
sti
insb
cmp
jg
hlt
pop
loop
popf
fwait
cli
sbb
xor
jo
inc
adc
mov
mov
in
insb
add
adc
jmp
lea
inc
sbb
mov
sub
push
int3
cwtl
push
ds
xchg
cmp
cmp
insb
out
lea
dec
push
push
test
jne
xor
scas
cmpsl
insl
scas
test
scas
add
mov
push
mov
sub
cmp
sarb
adc
lods
ss
js
cwtl
sbb
cwtl
inc
mov
push
out
push
lcall
jne
hlt
mov
data16
movsl
jae
xchg
into
or
int3
std
inc
repz
and
cmp
insl
sbb
cmc
sub
push
arpl
jns
sbb
mov
int3
push
xor
xchg
push
cmpsl
repnz
pop
fwait
imul
aaa
sbb
or
out
fildl
sub
lcall
pop
incb
popa
scas
push
push
or
adc
sbb
nop
jp
das
std
xchg
and
fistl
dec
mov
pop
loope
add
xchg
pop
and
aam
sbb
add
lock
and
mov
testl
aam
sahf
dec
gs
jg
lods
mov
jno
js
lcall
pop
pop
js
in
cltd
push
vshufpd
sbb
mov
popa
mov
call
mov
sub
pop
gs
inc
test
test
sbb
loope
ret
jns
jns
inc
repz
push
loop
mov
cltd
xchg
sbb
flds
push
icebp
add
mov
and
in
pop
out
out
int3
or
fsubrs
xorb
loopne
divl
pop
mov
sbb
loope
into
adc
dec
cmp
enter
mov
xor
shlb
into
lock
ret
scas
cs
lea
mov
repz
mov
push
fcmovnu
out
fwait
and
pop
push
stos
mov
adc
xchg
pop
mov
adc
jb
xor
jne
and
cld
loope
stos
stos
imul
mov
dec
lret
addr16
mov
lcall
arpl
pop
repz
lea
cmpsl
add
jno
cld
jl
loop
aaa
push
cmp
jne
xor
pop
mov
arpl
in
lds
pop
js
in
cmp
aaa
add
mov
sub
cmpsb
fnstcw
mov
pop
pop
cltd
mov
fwait
jge
mov
mov
rcrb
mov
mov
dec
stos
lds
xchg
aas
sub
lds
pop
inc
adc
sti
pop
fbstp
rcr
es
stc
das
popf
xchg
fstl
cmpsl
out
pop
mov
mov
inc
les
repnz
push
xchg
sbbl
in
iret
mov
lahf
or
fmuls
fsubr
sarb
dec
xchg
cmp
fcoms
inc
adc
sbb
jnp
inc
ss
xchg
adc
mov
adc
in
xor
out
jae
repnz
mov
fistpll
negb
and
push
inc
sti
lods
mov
xchg
shr
adcb
sysenter
idivb
push
das
out
movsb
stos
popf
fwait
inc
pop
loop
pop
cmc
test
jle
push
jl
cmc
imul
xor
in
pop
mov
out
inc
imul
aaa
pop
cmpsb
jle
pushf
sbb
xlat
call
decl
adc
mov
xchg
dec
and
bound
or
dec
ret
negb
xchg
cld
into
or
sahf
scas
fnsetpm(287
test
sub
mov
cmp
test
fwait
loopne
leave
add
inc
fnsave
fstpl
pop
clc
pop
lds
dec
jb
cmp
and
sub
jl
pop
aad
loop
cmp
mov
pop
mov
pop
leave
push
cmp
mov
pop
add
pop
or
scas
cmpsb
fwait
xor
jns
jb
pop
jg
imul
and
sub
fdiv
pop
mov
mov
adc
xchg
ja
jecxz
or
icebp
nop
aas
in
push
or
cmp
inc
pusha
sbb
lret
jge
hlt
jb
je
clc
orb
lods
or
and
jb
repnz
xchg
push
sahf
scas
jp
notb
rorl
lret
aad
subb
adc
mov
fcoml
mov
push
pop
cmpl
xchg
sahf
fwait
mov
rcrl
jle
aas
push
cltd
push
in
cmpsb
jno
aaa
std
pop
pop
push
hlt
lods
adc
test
movsl
jo
sbb
stos
insb
es
dec
arpl
push
cmc
sbb
xchg
adc
orl
stos
lret
scas
add
and
ficoms
pop
sahf
ss
sub
lret
cli
dec
cmp
rcrl
mov
fwait
cmp
and
dec
inc
addb
lcall
xor
inc
fadd
jp
enter
in
mov
repz
pushf
pop
fwait
xchg
mov
hlt
je
das
inc
insb
lcall
stos
mov
daa
fbstp
cs
jnp
inc
daa
fs
and
insl
pop
ss
or
dec
aam
cmpl
js
xchg
jp
in
xor
mov
dec
cmp
mov
stos
loop
cmp
cltd
shlb
adc
push
loop
or
or
mov
jns,pt
ja
pop
test
push
ror
or
or
jle
adc
sub
aaa
stc
lea
cmc
cwtl
xor
or
xor
sar
dec
push
popa
aad
dec
xchg
push
es
popa
outsb
and
aad
mov
int
rcrl
cld
divl
mov
mov
jle
jns
aam
sub
sbb
lret
xchg
inc
dec
arpl
mov
and
inc
into
dec
int3
ja
lret
hlt
lahf
insb
cltd
or
or
popf
mov
adc
xchg
int3
and
fucomip
jecxz
xchg
pop
pushf
push
jae
xor
push
adc
xchg
enter
push
aam
call
dec
dec
push
aam
clc
pop
adc
insb
cltd
jne,pt
jp
xor
fnstcw
in
sub
xor
push
push
into
aam
mov
push
dec
push
sub
mov
xor
bound
gs
xchg
sbb
and
movsl
popa
je
loope
ljmp
jp
xchg
push
push
xchg
jmp
mov
jmp
push
pusha
fwait
pop
sbb
mov
jbe
sub
sahf
push
mov
loop
cmp
shlb
std
out
les
mov
mov
popa
stos
sbb
dec
push
imul
lods
add
rorl
es
imul
mov
repz
inc
dec
jmp
stos
mov
iret
cltd
mov
xchg
or
adcl
jmp
lea
ret
mov
pop
pop
test
cmc
imul
enter
daa
pop
inc
outsl
sub
lret
push
mov
push
popa
orb
dec
fldl2t
pushf
sub
imul
lea
cld
inc
lret
jne
or
or
imul
movsb
mov
jmp
xchg
add
inc
push
xor
or
cmp
add
push
ljmp
xorps
ret
or
sub
adc
mov
lds
cltd
std
cmc
je
mov
in
sub
repnz
dec
iret
lods
insl
mov
adc
cmp
xchg
inc
inc
add
repz
in
outsl
jp
fwait
arpl
pushf
pop
outsb
xor
add
mov
stos
in
cmpsl
and
mov
rolb
mov
fldcw
or
gs
cli
mov
adc
arpl
sub
mov
mov
ds
test
jge
xchg
mov
imull
xchg
aas
movsl
movsl
sti
mov
or
or
mov
add
ds
and
pop
or
mov
push
or
fstpl
jae
daa
sbb
pop
lahf
push
xchg
iret
lret
xor
outsl
dec
rolb
out
clc
call
fcoml
leave
and
in
cltd
fisubrs
inc
mov
dec
in
mov
inc
cmp
and
cmp
rol
or
push
adc
add
add
inc
mov
dec
aas
aam
outsb
or
imul
and
mov
mov
or
addr16
dec
rorb
fldenv
push
cmovnp
insl
daa
addb
addl
dec
push
mov
icebp
add
cmp
cwtl
xor
sub
adc
rcrl
stos
iret
out
jnp
insb
sbb
jecxz
dec
je
les
nop
fwait
jg
xor
in
imul
cmpsl
aam
sub
or
nop
sbb
xor
sbb
push
push
cmp
lahf
je
and
cli
mov
lods
mov
lahf
imul
jne
shll
imul
lock
cltd
mov
inc
adc
lahf
mov
jnp
ljmp
ficomps
fcompl
stos
or
divb
fidivrl
hlt
pop
jg
dec
or
ljmp
pop
data16
aad
outsl
sub
rcrb
cmp
jbe
adc
mov
int3
enter
sub
fidivrs
xor
or
cli
fisttpl
sbb
enter
cmpb
push
les
ret
fstl
xor
outsb
mov
les
imul
aaa
addb
ret
les
sbb
iret
out
mov
mov
imul
loope
out
inc
mov
mov
pop
fnstcw
out
mov
stc
aas
or
out
and
les
stos
call
adc
xor
pop
and
xchg
add
shll
lds
push
mov
sbb
addr16
int3
int
cli
dec
mov
lcall
add
xlat
fisttps
jo
in
pop
in
jb
shrb
add
jbe
pop
std
fcmovne
or
daa
dec
jmp
fdivl
inc
pop
pop
std
cwtl
insl
cmpsl
jl
mov
dec
inc
push
out
ss
pop
xor
call
cmpsb
mov
sub
cwtl
add
rcll
nop
xlat
std
cmc
dec
jno
adc
les
push
or
add
ds
dec
lods
pop
mov
loope
scas
dec
in
pushf
jle
xchg
pop
js
sub
sahf
enter
out
push
mov
sbb
xor
add
mov
mov
push
or
in
fs
outsl
push
rcrl
scas
es
scas
pop
jmp
mov
add
jb
cmc
xor
jne
roll
sub
iret
adc
lret
rcrl
mov
mov
xchg
jmp
fiaddl
imul
inc
cltd
js
jp
fmull
add
bound
out
out
enter
sti
inc
ret
call
movsl
or
cmp
into
adc
daa
jae
jmp
shlb
imul
adc
lods
loopne
movsb
sub
dec
repnz
jne
leave
mov
imul
inc
sarb
and
sbb
es
loopne
fidivs
roll
aam
iret
add
add
mov
outsb
and
pop
xchg
aaa
pop
dec
cwtl
jle
push
arpl
jp
add
fcmovbe
adc
push
sub
xor
sbb
xchg
sub
jmp
aad
sahf
xor
fcoml
dec
into
and
push
sbb
bound
inc
xlat
ja
sbb
fldcw
fiaddl
lret
dec
xchg
cld
in
and
pop
dec
pop
loopne
mov
xchg
out
cmp
sub
lods
cmp
jns
shll
cld
sti
dec
fldl
xchg
rcrb
or
fldt
dec
mov
inc
stos
nop
pushf
mov
scas
jle
es
in
adcl
stc
pop
jmp
jns
lret
icebp
int3
lods
outsl
lcall
xchg
sbb
cmp
data16
cmpl
mov
mov
enter
sub
test
mov
push
push
jbe
ljmp
lret
int
cmc
jo
scas
xchg
jnp
sbb
in
mov
in
popa
int3
movsb
jmp
loopne
cmpsb
xor
xchg
loopne
in
xor
mov
stos
test
xchg
out
dec
aaa
loopne
stc
jl
and
cwtl
sbb
push
push
aam
inc
rorl
jae
jmp
in
sub
clc
mov
popf
ss
adc
xor
xor
inc
sub
popa
inc
mov
xor
sti
inc
das
pop
mov
pusha
inc
cs
cmpsl
iret
jae
xchg
scas
icebp
ljmp
sub
sti
adc
mov
add
sub
ret
mov
fnstenv
or
cli
sbb
loopne
popa
mov
jo
or
dec
cmp
cmp
divb
cmp
ret
jae
jg
inc
cwtl
adc
js
inc
sub
dec
dec
loope
ja
mov
sbb
das
jmp
push
push
dec
push
shll
popa
movsb
pop
dec
push
loope
loopne
lods
iret
mov
sbb
jbe
shlb
jns
movsl
imul
rolb
das
cltd
je
pushf
fwait
and
imul
dec
mov
std
cmpsl
mov
repnz
pop
or
xchg
xchg
pop
mov
popf
pop
cmp
pop
mov
xchg
das
jp
roll
or
xlat
xchg
fstp
dec
dec
test
jo
jmp
or
mov
int3
out
mov
jge
das
or
mov
add
loop
loopne
ljmp
fistl
cwtl
lds
mov
pop
inc
jecxz
lea
test
adc
sub
xor
sbb
test
mov
or
sbb
add
mov
push
icebp
adc
or
jmp
leave
ret
loope
gs
stc
adc
popf
int
cmp
bound
mov
ljmp
dec
mov
loope
flds
leave
dec
fwait
cld
xor
out
jnp
xchg
lods
push
scas
jo
add
xchg
add
xchg
insb
jl
mov
jae
je
jl
jmp
mov
add
mov
dec
pop
sub
jp
fdivrs
mov
dec
mov
out
xacquire
lock
sbb
dec
xor
mov
aaa
cltd
xchg
cmp
pop
inc
imul
lahf
push
mov
hlt
inc
pop
jmp
cld
out
stos
push
mov
and
jge
xchg
cmpsb
adc
int3
inc
cs
xchg
add
sbb
cmp
jmp
adc
cmp
repnz
mov
pop
addr16
mov
bound
aaa
push
cmp
lret
cmp
inc
faddl
int3
xchg
mov
sbb
push
adc
push
movsl
jge
stos
sti
repnz
push
daa
add
cmp
xchg
dec
push
sub
xor
inc
ud1
cltd
into
inc
movsl
es
aad
cmpsl
arpl
sti
arpl
or
cltd
add
ljmp
movsl
imul
scas
pop
sub
cltd
or
pushf
mov
xorl
adc
jp
cs
cmp
ljmp
sbb
jbe
xor
pop
mov
js
repnz
inc
sub
push
lahf
adc
mov
dec
xor
test
cmc
lahf
enter
ret
mov
pop
fisubrl
xchg
in
cli
cmp
pop
and
push
push
jmp
stc
xorl
aaa
sbb
test
mov
adc
and
mov
lds
and
pop
mov
pop
dec
addl
mov
xlat
mov
pusha
les
push
mov
hlt
xor
mov
test
xchg
lods
adc
movsl
into
or
dec
sbb
sbb
lahf
scas
ljmp
lahf
aaa
jo
or
dec
ss
shl
cmpsb
cmpl
xchg
jp
rcr
stc
pop
aas
dec
cmc
push
stos
sbb
daa
cmpsl
add
or
mov
lods
fsubrl
dec
jbe
out
dec
cli
inc
jp
test
loope
xchg
cld
out
adc
fs
cmpsl
sbb
loop
cmpsl
xor
xchg
sbb
xchg
push
dec
ja
test
inc
cmp
ja
lahf
out
int3
cs
push
xor
cmp
jns
mov
mov
push
jp
push
inc
das
mov
jae
ds
int3
xchg
cmp
inc
cs
adc
out
dec
mov
adc
fcmovu
fucom
push
divl
xchg
insb
xchg
outsl
ds
mov
ljmp
fiaddl
adc
std
push
dec
sub
test
pop
inc
sar
mov
fdivs
or
pushl
fidivs
ljmp
idivb
push
inc
cmpb
dec
sahf
ljmp
cwtl
out
push
inc
fdivrl
icebp
or
pop
or
mov
add
ret
mov
test
pop
mov
enter
ss
rorl
xchg
lods
cltd
mov
push
push
icebp
push
out
scas
xchg
je
popf
mov
ss
sahf
or
pop
pop
data16
or
xor
clc
mov
cltd
xlat
pusha
fptan
fwait
and
mov
scas
and
xchg
repz
xor
dec
mov
mov
iret
adc
adc
dec
fwait
lds
pop
lods
push
out
fists
cmc
inc
sub
jo
push
cmp
add
pop
loope
popl
lods
push
stos
cmp
sbbl
xor
xchg
or
sahf
shl
mov
sub
mov
adc
mov
les
mov
iret
leave
cmp
popa
adc
enter
clc
push
push
mov
push
pop
sub
and
sub
cwtl
das
pop
xor
rolb
add
loope
sbb
sub
loopne
mov
aaa
inc
cld
push
and
rcrb
inc
pop
push
pop
mov
fwait
outsl
xchg
xor
inc
dec
in
ja
rol
mov
or
sub
push
jecxz
stos
adc
stc
sahf
and
pusha
jecxz
xchg
adc
add
sub
jno
cmp
jecxz
jno
out
imul
std
jb
mov
cld
dec
sub
fdivrs
scas
popf
ds
sti
into
fists
push
ja
aaa
adc
out
sub
loopne
inc
jns
sub
cltd
jo
xlat
in
out
rorl
xor
cmp
adc
test
adc
jp
enter
lods
lock
mov
sti
cmpsl
lods
lret
pop
andb
mov
xor
aas
test
lods
stos
loope
cmp
dec
in
pop
ljmp
inc
insl
push
pop
sti
xchg
pop
mov
push
push
or
scas
int3
sub
jo
lahf
mov
cmc
addr16
popf
int3
pusha
push
jg
pop
add
bound
xor
jmp
insb
push
or
in
fldt
adc
mov
jl
ljmp
xor
mov
inc
dec
or
sbb
mov
dec
add
in
leave
push
mov
mov
mov
bound
fisttpll
xor
movsb
outsl
sbb
movsb
adc
cmp
test
pop
add
scas
inc
adc
rcrb
test
sti
adc
or
push
psubsb
pop
dec
mov
sub
add
mov
push
mov
scas
out
dec
sbbb
and
in
add
cltd
mov
xor
shr
xor
ret
lods
mov
push
xor
xorl
push
sub
dec
push
cmp
cmp
in
dec
jns
lods
lods
mov
inc
aam
lods
sti
loope
add
fs
mov
stos
cli
jge
xchg
in
repnz
mov
addl
and
mov
mov
out
or
pop
push
stc
sti
jmp
xor
dec
pop
lahf
dec
mov
rcrl
movsl
xchg
adc
inc
push
imul
xchg
and
std
add
adc
mov
cmpb
inc
fdivl
js
push
out
aam
jl
add
xchg
dec
repz
mov
pop
enter
mov
fwait
dec
push
addr16
int3
mov
repz
jno
pop
mov
cmp
enter
cs
mov
jns
cwtl
and
inc
lods
pop
dec
pop
dec
and
sbb
pushf
imull
xor
sub
imul
cmpsl
test
jmp
jmp
dec
mov
push
push
das
ror
int3
mov
aaa
pop
xlat
and
dec
mov
icebp
push
leave
cmp
cmp
out
mov
sbbb
imul
push
sbb
adc
xchg
es
pop
mov
dec
sbb
mov
sub
pop
lahf
fstl
aam
int3
dec
outsl
dec
cmpsb
or
xlat
idivb
lret
loop
xchg
jbe
sub
xchg
pop
sub
dec
push
push
lret
or
fisttps
int3
xchg
in
xchg
sbb
push
iret
movsb
adc
pop
fsubl
fwait
in
sbb
js
and
adc
xchg
rep
pop
arpl
mov
mov
inc
inc
loopne
cmp
cltd
ja
mov
sbb
jl
cmp
fdivrp
imul
mov
cwtl
cmc
arpl
sbbb
rcll
cmp
aas
loopne
mov
mov
and
loop
gs
mov
sbb
and
push
push
push
std
adc
mov
es
cmp
jno
lret
iret
push
dec
mov
pop
jl
mov
sbb
mov
cli
je
add
mov
in
iret
push
addr16
cwtl
or
into
and
loope
hlt
cmp
rorl
rcll
sub
adc
push
fistpll
lret
jmp
lds
repnz
sahf
jno
inc
add
cmp
ljmp
adc
imul
fmuls
pushf
shll
pop
and
into
cmp
fcmovu
mov
fldz
add
repnz
mov
mov
cs
xchg
lret
pop
js
xor
add
cmp
xor
or
nop
mov
in
and
arpl
outsl
out
sbb
gs
adc
call
inc
fnstcw
cmp
push
dec
in
push
jb
lea
sub
out
jae
push
fmuls
xchg
insl
cli
sbb
fs
lahf
adc
xlat
outsb
inc
pop
sbb
mov
add
mov
scas
sbb
add
ss
jns
sbb
push
push
jnp
or
add
mov
fisubl
push
into
imul
adc
cwtl
xlat
ss
fsub
sub
sbb
movsb
ret
adc
arpl
push
shll
xlat
push
or
xchg
movd
push
mov
jge
sbb
and
leave
outsl
je
or
pop
filds
mov
out
push
out
xor
nop
cmp
mov
xchg
ljmp
es
in
dec
inc
movsb
jae
addr16
and
add
dec
js
mov
std
lods
and
adc
test
push
adc
and
adc
es
xchg
adc
jp
dec
lcall
into
jno
jmp
mov
inc
out
sbb
dec
jg
jns
jnp
xor
xchg
arpl
add
lcall
test
dec
lahf
mov
mov
add
push
aaa
xchg
cmp
jo
cs
adc
push
nop
xor
jecxz
adc
movsb
fmuls
pushl
jae
loop
ret
addl
cmp
xchg
loopne
xchg
clc
xor
add
aaa
push
loope
ficoms
es
stos
or
mov
cmc
adc
stos
xor
sbb
repz
xchg
rolb
or
jg
cmp
cmp
fistpll
insl
ret
aam
lock
jge
jge
push
dec
xlat
mov
adc
dec
pop
xlat
pop
stos
mov
xchg
ficompl
into
xor
enter
lcall
lret
sbb
adc
inc
bound
mov
fidivl
dec
cwtl
push
jo
adcb
nop
add
pop
fnstsw
xchg
out
cmpsb
arpl
sub
cltd
mov
andb
push
pop
add
xchg
push
in
lds
jle
test
add
ds
cmp
repnz
vmulpd
shrb
fdivr
pop
push
add
lcall
dec
or
xor
sahf
or
je
and
cmp
jecxz
out
jmp
push
mov
test
adc
mov
jle
mov
cmp
jp
in
pushf
add
bnd
les
insl
pop
das
aad
jns
jg
sub
inc
test
dec
dec
outsl
rcll
inc
jae
jo
test
mov
ficoml
movsl
aad
jne
and
jl,pt
xchg
rorb
rcll
flds
sub
inc
dec
insl
dec
xchg
fcomps
pop
xchg
mov
mov
inc
cwtl
xchg
loopne
sbb
xor
cmp
dec
push
ficoms
pop
lds
aas
mov
cs
pop
dec
fnsave
stos
mov
fists
push
subb
insl
pop
pop
and
std
xor
and
lret
inc
je
lahf
scas
sub
and
fbstp
jae
aas
jle
or
test
icebp
inc
cmp
cmp
sub
lcall
and
mov
dec
mov
add
cmp
imul
mov
addr16
loopne
arpl
xor
test
sub
in
negl
adc
andb
imul
fstl
arpl
sbb
pop
dec
cmp
xchg
mov
and
or
cmc
push
test
movsl
xor
jge
pop
les
or
outsb
outsl
lds
pop
and
pop
fildl
push
mov
mov
psrlw
sub
cli
hlt
out
mov
cmp
mov
push
mov
out
sub
push
clc
add
pop
std
xor
div
cmp
shll
out
dec
std
in
adc
mov
jg
xchg
push
sub
cwtl
xchg
dec
pop
fdiv
sub
lret
into
inc
filds
in
ja
sub
inc
repnz
xchg
xchg
and
mov
dec
or
or
sub
xchg
xchg
xchg
shl
rcrl
mov
sbb
xchg
and
lds
or
push
dec
mov
cmp
mov
sub
cmc
out
xchg
mov
aam
add
arpl
imul
mov
out
jp
jge
loope
add
mov
and
imul
sbb
lods
lods
fimuls
mov
and
lahf
test
mov
ficomps
jno
push
xlat
aas
jbe
add
ret
push
jns
int3
pushf
inc
int3
xchg
and
jg
dec
cmp
xchg
add
outsb
adc
insb
dec
jne
repnz
push
popf
imul
ljmp
ss
lret
jecxz
clc
ljmp
mov
adc
mov
push
stc
lcall
push
adc
jno
lock
insb
xchg
add
outsl
and
adc
loopne
adc
pusha
inc
push
dec
jle
shll
test
dec
in
push
mov
mov
loope
inc
xchg
jmp
leave
dec
cmp
inc
outsl
adc
out
in
pop
inc
lcall
pop
push
movsb
ret
push
xor
jbe
jmp
filds
push
mov
aam
jmp
ret
scas
out
iret
sub
es
push
adc
test
or
out
adc
je
xchg
imul
mov
stos
fwait
imul
adc
or
and
cmp
push
leave
push
add
add
pop
mov
mov
out
lahf
js
mov
dec
call
xchg
push
adc
mov
push
inc
aaa
es
pushf
loopne
jae
mov
jle
bound
rcl
dec
mov
mov
lcall
add
jmp
leave
inc
jge
or
pop
xchg
frstor
xlat
push
rol
dec
xchg
js
and
dec
push
xor
dec
cmpsb
adc
cmp
dec
or
push
js
push
lret
sbb
push
ret
xor
je
aam
add
add
cli
cmp
leave
fwait
mov
int3
addr16
or
xor
cmp
xchg
cmp
repnz
cmpl
jae
xchg
push
adc
lcall
loopne
push
cwtl
repz
mov
sbb
push
outsl
push
arpl
cli
jg
adc
or
inc
je
mov
jb
roll
aad
mov
pop
mov
stos
aas
sub
mov
shl
cmp
inc
imul
sbb
or
and
loop
filds
sti
xor
pop
sub
jnp
insl
aas
mov
mov
sbb
mov
dec
push
ds
adcb
lret
xor
cwtl
aas
mov
push
push
xor
movsb
je
setbe
ljmp
mov
std
in
sbb
sbb
jae
loopne
frstor
out
dec
or
std
and
inc
jae
js
mov
pop
addr16
cwtl
jge
fiaddl
adc
in
pop
iret
push
xor
les
into
call
or
fists
dec
and
mov
mov
push
out
jae
mov
cmpsb
inc
out
cld
dec
push
out
popa
xor
mov
out
dec
xor
rorb
ds
inc
fdivp
frstor
mov
jmp
out
xchg
push
out
pop
cmp
xor
cmp
xorl
stos
and
pop
add
xchg
dec
fucomp
bsr
pop
sub
idivl
push
sbb
mov
sti
and
fmull
ds
dec
add
dec
mov
mov
jns
lea
xchg
sbb
popa
jp
xor
xlat
stc
jecxz
and
fisttps
mov
les
jo
adc
aad
das
mov
push
in
iret
repz
lcall
xchg
inc
dec
and
mov
xchg
sub
out
scas
add
mov
or
lea
mov
cmp
ret
pop
sub
adc
cmp
add
subl
int
shrb
fistpll
mov
cli
cld
sbb
dec
mov
stos
adc
inc
jp
roll
inc
mov
into
scas
jg
aad
addr16
enter
ljmp
subb
xchg
push
loop
and
mov
sbb
test
daa
fdivl
ret
popa
lods
aas
lahf
inc
mov
scas
mov
xchg
and
sbb
inc
ss
xchg
shlb
dec
mulb
scas
enter
dec
dec
lret
stos
xor
sub
pop
test
leave
out
mov
dec
or
pop
test
sub
scas
repz
jmp
cmp
stos
jnp
mov
add
loop
sub
test
test
add
sub
mov
sbb
stos
mov
bswap
fstpl
pop
stos
mov
jne
or
pop
setno
cmp
mov
and
mov
call
jbe
rcr
fdivrs
pop
mov
push
ret
lcall
xor
xchg
mov
enter
or
adc
lea
je
push
dec
mov
cltd
lret
mov
and
mov
icebp
call
jae
cmc
lds
jns
pop
ret
jp
push
shrb
std
mov
pop
cmp
arpl
out
lret
jl
in
pop
sub
or
fstpl
lret
outsb
inc
pop
sbb
and
call
dec
in
fdivrs
sbb
jae
xchg
inc
rclb
test
dec
bound
and
adc
push
jnp
sub
mov
sbb
cli
push
in
ret
mov
sahf
xor
push
in
divb
inc
gs
aam
inc
dec
insb
jbe
leave
shr
fildll
pop
hlt
pop
pop
or
pop
inc
notb
push
inc
and
and
push
dec
int3
push
pop
jns
or
push
loopne
mov
js
imul
ds
hlt
xor
fimuls
jle
mov
lods
jnp,pn
xchg
sahf
mov
ret
fisttps
inc
pop
jge
repz
movsl
add
mov
icebp
cwtl
lret
mov
insb
hlt
cwtl
insl
insl
into
or
fmuls
iret
mov
scas
pop
jle
pop
out
in
cs
les
or
fsubs
les
fiaddl
cld
shl
jl
mov
dec
aam
test
ljmp
insl
or
jae
call
lods
cmp
out
and
mov
movsl
pop
jns
bound
andb
mov
cmc
mov
shll
add
jecxz
dec
icebp
sti
dec
aas
push
xchg
mov
add
leave
loop
mov
loopne
and
cmp
je
lahf
sbb
ljmp
push
or
add
push
int
fwait
ss
xor
cmpsl
or
xor
dec
jg
cmp
cwtl
jmp
add
cmp
sbb
movsl
sbb
pop
push
aaa
and
cmc
shl
mov
inc
xor
loope
imul
rorl
xor
gs
jno
mov
popf
mov
fwait
xchg
mov
decl
xchg
sub
push
jl
or
push
cld
repnz
mul
jno
jecxz
out
mov
pop
and
and
test
lret
inc
lcall
rclb
movb
or
push
add
mov
inc
into
mov
mov
cmp
pop
loope
fists
into
scas
jl
mov
test
dec
adc
dec
mov
add
pop
dec
dec
lods
leave
or
cld
ret
gs
jecxz
cmc
mov
aad
xor
or
mull
cmp
out
add
mov
int
dec
pop
out
test
aad
decb
mov
mov
mov
in
arpl
mov
in
in
jmp
lods
sti
add
inc
jb
push
lret
fs
mov
imul
bound
xor
fst
aam
jp
adc
cli
add
sbb
lds
mov
lret
sbb
dec
xchg
in
mov
fisttps
ss
adc
lods
out
fldl2e
cmc
movsl
sbb
or
sbb
xchg
leavew
call
lods
cmp
fisttpl
aad
addr16
pusha
insb
xchg
shr
popf
add
mov
sub
test
lods
or
mov
xchg
mov
stos
fnstenv
sahf
xlat
pop
in
lods
dec
dec
fucomp
pop
fs
mov
lcall
inc
jp
pusha
mov
mov
dec
outsb
and
data16
repnz
sti
xchg
gs
loop
popa
leave
mov
jo
cmp
inc
xor
sbb
push
out
jg
popa
cmp
add
test
mov
movsl
enter
or
add
enter
mov
push
enter
js
xchg
sub
mov
mov
and
jle
mov
aad
sbb
cmc
or
cmp
adc
imul
sbb
push
outsb
ljmp
lret
pusha
add
push
sarb
xchg
ljmp
scas
sub
dec
sub
out
and
adc
adc
mov
sub
out
mov
in
andb
push
repz
hlt
into
adc
mov
dec
ljmp
xchg
sub
stos
aam
sarb
inc
loope
push
mov
cltd
sbb
and
cmp
ss
mov
test
fcompl
jns
xchg
adc
fcom
popa
or
stos
rolb
int3
andl
sub
mov
into
mov
fs
repz
scas
imul
adc
xchg
inc
push
or
xor
imul
enter
mov
mov
or
rclb
xchg
sub
leave
mov
sti
sbb
loope
pop
test
and
ja
cwtl
fldenv
sub
cmp
pop
xchg
mov
std
out
inc
jp
fsubrl
push
icebp
adc
ljmp
jmp
xor
or
fimuls
xchg
mov
test
lock
cmp
imul
mov
cmp
xchg
and
es
clc
jno
adc
xorb
push
cmp
fmull
sbb
xchg
nop
addl
fst
mov
jmp
test
shl
movsl
inc
fldl
outsb
pusha
daa
adc
adc
pop
scas
ja,pn
fistpll
subl
inc
jp
add
leave
dec
popa
clc
sub
in
cmpb
mov
mov
and
adc
aas
push
pop
int
mov
push
hlt
in
jb
pop
stc
xchg
mov
fwait
jmp
das
adc
addr16
stos
aas
xlat
jp
ret
xchg
hlt
and
add
mov
mov
adc
push
pop
or
fiadds
cmp
mov
into
out
ss
fildll
ljmp
xchg
and
scas
sbb
sbb
dec
gs
std
sar
stc
outsl
cs
sub
fwait
or
fs
dec
mov
cmp
aaa
push
and
dec
aas
out
mov
lea
mov
inc
mov
pop
sub
jmp
in
sub
mov
lock
stc
cs
jnp
lret
xchg
gs
xor
pop
test
ljmp
into
cmp
data16
or
push
movsl
and
cmp
cmpl
test
xchg
shl
test
enter
bound
xchg
cmpsb
inc
pop
sbb
mov
jl
sbb
lret
adc
outsl
fdivrl
adc
fcompl
mov
mov
out
pop
popf
loop
stc
out
pop
xor
test
inc
in
sub
insb
mov
fsubl
push
movsb
scas
test
cmp
cmpsl
mov
and
nop
js
sahf
push
popf
daa
rcrl
dec
ret
mov
mov
sbb
div
enter
mov
push
mov
inc
and
cmp
loopne
jmp
sub
inc
push
test
and
xlat
sub
out
push
jle
mov
loope
inc
mov
xor
dec
mov
fistps
inc
mov
je
out
xor
inc
in
sbb
push
pop
inc
mov
inc
adc
mov
cmpsb
std
xor
cmc
or
xor
mov
mov
out
popa
cwtl
icebp
xor
xchg
mov
push
mov
and
mov
sti
xchg
adc
dec
popf
dec
add
dec
adc
sub
int3
fidivrl
pusha
fildll
das
sbb
stos
push
cwtl
lea
test
aaa
loop
inc
inc
pop
sub
pop
fisubrl
pop
push
jg
mov
loopne
ret
inc
add
fisubrs
pop
xor
ficompl
ljmp
fbstp
divb
xchg
fdivrs
jg
stos
jo
enter
in
push
lods
int
pop
push
in
imul
out
in
ss
dec
int
in
daa
adc
gs
mov
fidivrl
mulb
or
mov
hlt
mov
push
divb
imul
mov
adc
jge
outsb
inc
or
mov
push
and
pusha
aas
adc
adc
adc
adcl
cld
xor
push
loop
xlat
loope
adc
imul
dec
test
test
sahf
jae
test
mov
dec
fimull
or
jns
push
mov
insb
rorl
push
cmpsb
in
popa
jg
dec
scas
lds
push
push
fisubrl
insl
push
fdivrs
enter
xchg
imul
push
popa
lcall
fcomps
lds
gs
aaa
push
mov
jbe
daa
lds
push
mov
and
fcoms
push
dec
lods
icebp
dec
les
push
mov
in
xchg
dec
xchg
mov
pop
das
inc
dec
pop
sahf
popf
inc
sbb
ljmp
and
push
xchg
insb
jns
pop
sahf
mov
mov
movsl
les
dec
mov
jae
dec
or
lret
pushf
xchg
lds
lds
mov
insb
cmp
fidivrl
xchg
jno
iret
cmpsb
xchg
inc
jae
jno
pop
mov
dec
mov
incl
sbb
jbe
add
xor
inc
xor
dec
add
jle
cltd
das
or
add
repz
jmp
and
mov
xchg
sub
iret
popa
nop
andb
hlt
jmp
int
pop
inc
in
test
cmp
pop
fstpt
xlat
mov
xchg
loope
nop
in
xchg
adc
into
jg
mov
out
mov
dec
sbb
inc
add
sub
popl
dec
or
mov
cmpsb
jno
pop
cmp
popa
inc
inc
inc
push
jmp
jle
push
and
adc
imul
or
pop
inc
cmp
js
iret
cmpps
mov
in
mov
push
add
popa
push
orb
popf
jbe
in
mov
sbb
es
pop
mov
inc
mov
pop
gs
stc
xchg
add
in
addr16
lds
xchg
lcall
xlat
and
inc
ljmp
in
stos
push
and
mov
jnp
or
ljmp
mov
mov
xor
push
fcmovnbe
mov
sub
popf
in
ss
lcall
shll
mov
sbbl
cmp
add
mov
lret
lcall
scas
mov
sbb
dec
aaa
movsl
push
adc
stc
or
jae
adc
stos
inc
push
into
push
mov
fildll
notb
cmp
mov
je
clc
mov
ret
ret
sbb
cld
inc
fists
lret
ljmp
or
aas
xchg
adc
incb
jl
lcall
jg
outsl
inc
cmp
rcr
int3
mov
out
test
sub
pop
pusha
or
xchg
and
mov
mov
out
rcll
xchg
cmp
test
out
test
out
addr16
fwait
shl
dec
push
les
js
outsb
and
cmpsb
or
jp
push
sbb
push
les
or
xchg
xchg
dec
mov
aam
test
sbb
imul
mov
adc
enter
jns
cmpsb
xchg
xor
mov
inc
mov
testl
enter
push
shrl
rcl
fucomp
shll
sbb
sub
cmp
dec
mov
bound
xchg
sbb
sti
jge
stos
cmp
push
scas
stc
sbb
jg
daa
sbb
push
popa
xchg
jl
out
arpl
or
jnp
pop
inc
xchg
cltd
loope
inc
adc
mov
mov
mov
sub
jle
pop
cld
cld
xor
dec
xor
pop
out
mov
aam
cmc
push
jmp
jmp
cmp
jbe
add
lcall
sub
out
pop
push
inc
lds
push
lahf
push
cmp
icebp
loop
jle
lock
repnz
imul
jp
sub
xorb
or
pop
xor
aaa
test
in
pop
sub
mov
lret
sbb
js
pop
mov
dec
and
and
mov
bound
sbb
sub
enter
aad
leave
sbb
xor
dec
sub
icebp
fcmovu
sub
dec
sahf
mov
jo
je
testb
mov
mov
insb
arpl
lret
jecxz
jg
fidivrl
pusha
jmp
xchg
push
pop
stos
add
adcl
xchg
or
leave
dec
mov
cmp
not
in
add
sub
cmp
mov
or
jnp
fucomip
imul
xchg
lock
jl
cmp
clc
std
inc
pop
int3
gs
mov
lock
pop
stc
pop
lock
or
jge
mov
inc
stc
aaa
stos
cs
aas
and
in
cmp
push
stos
scas
mov
sub
cmp
testl
add
xlat
jb
mov
cmp
pop
xor
loope
mov
in
push
mov
or
hlt
lahf
roll
jb
push
inc
insb
cmp
sub
addr16
repz
mov
cmpsb
sub
push
std
or
mov
xchg
xchg
and
inc
push
fwait
data16
jmp
repnz
pushf
stc
jne
add
inc
push
and
pop
outsb
repnz
out
out
das
cmpsb
add
nop
and
add
mov
testb
scas
and
and
or
jecxz
inc
mov
push
repz
xchg
pop
cmp
xchg
mov
fadds
xor
fistl
fidivrs
rorl
jl
mov
push
out
and
dec
fsubrl
in
and
mov
push
sbb
pop
push
sahf
inc
jno
pop
icebp
cli
lds
je
ror
mov
nop
jbe
movsb
mov
jns
fadd
movb
jae
push
mov
mov
testl
pushf
jmp
sbb
int3
inc
push
lods
dec
jo
pop
push
enter
adc
shl
fisubs
xchg
enter
mov
fstpl
jae
adc
xchg
pop
cwtl
rorb
das
scas
and
xchg
jb
inc
test
hlt
cmp
add
adc
push
jno
pop
insl
cmpsb
shlb
mov
mov
out
popf
xchg
repnz
arpl
cmp
mov
imul
sbb
lahf
std
mov
push
jp
stos
pushf
xchg
sub
loopne
mov
xchg
pushf
test
fwait
arpl
xchg
sub
and
jecxz
dec
xchg
in
cmc
or
aaa
dec
pop
jne
fnstsw
and
or
mov
bound
mov
clc
cmpsl
popf
in
xchg
lahf
add
adc
lahf
hlt
stc
lcall
mov
xor
test
jl
ret
xor
stos
push
jae
jne
jp
rclb
mov
fcompl
cmpps
int3
add
push
push
cli
and
push
adc
push
cs
test
stos
jae
dec
test
jnp
mov
pushf
xchg
mov
movb
adc
pop
jmp
mull
add
addr16
rcll
shlb
mov
out
mov
pop
psubd
ss
mov
das
shl
call
cmp
mov
je
mov
mov
and
xorb
add
push
fidivl
imul
xor
push
push
outsl
mov
sbb
cld
mov
jl
es
adc
mov
sub
xor
push
push
cmp
int
stos
adc
xor
dec
or
sbb
sbb
mov
dec
jle
stc
push
lcall
loope
fstps
push
jae
das
in
imul
subb
mov
jo
sbb
ffree
hlt
dec
mov
mov
sbb
or
jmp
scas
and
loope
sbb
sub
push
mov
push
addr16
ljmp
pop
sbb
add
sub
mov
xchg
lods
mov
popa
cltd
out
stos
dec
ja
sbb
std
shrl
push
dec
pop
in
rcll
mov
cld
cvttps2pi
add
jns
pop
mov
mov
pop
lret
xor
sub
xchg
or
repnz
sbbb
jmp
push
xor
addr16
into
adc
and
sahf
sbb
stos
push
out
inc
dec
das
into
aaa
mov
ljmp
shl
orb
cs
cmp
add
pop
enter
mov
xchg
dec
xchg
test
sarb
jle
js
or
xchg
mov
stc
push
cltd
and
lods
mov
inc
call
push
pusha
stc
cs
pop
popf
shll
pushf
or
outsl
dec
adc
push
inc
out
out
mov
adc
push
addr16
or
jl
pop
test
inc
cmpsb
pusha
out
out
cwtl
out
int
out
xorb
cmp
xchg
mov
test
in
xchg
out
dec
adc
ficompl
push
cmp
sub
lea
nop
dec
mov
xchg
fistpll
add
xchg
inc
mov
movsl
or
sti
insw
pop
mov
push
addb
pop
xchg
aam
mov
mov
adc
and
stos
push
inc
repz
js
out
push
inc
hlt
inc
shl
pop
imul
fwait
popf
sbbl
test
sub
out
js
jbe
dec
bound
xor
pop
jno
sub
mov
sti
outsl
pushf
fs
jo
fimull
sbb
ljmp
icebp
push
add
push
mov
rcr
inc
mov
push
pop
fwait
sahf
js
daa
xchg
xchg
cs
pop
imul
js
pop
into
mov
and
xlat
or
arpl
mov
mov
push
cwtl
pop
jge
mov
into
mov
xor
roll
jne
sub
pusha
mov
aas
out
je
add
mov
std
xor
xor
mov
shll
in
in
fiaddl
insl
movsl
js
inc
sbb
fiadds
add
lods
stc
mov
movsl
jmp
mov
mov
xchg
mov
sub
sub
add
mov
popa
pusha
add
ret
iret
add
daa
movsl
testb
insl
pop
int
sub
and
leave
xorl
fsubl
pop
adc
mov
and
lods
test
adc
sbb
cmpl
ss
test
push
aaa
add
aad
addr16
adc
pop
std
mov
sahf
movsw
dec
push
mov
add
ror
pop
in
cmp
imulb
sahf
lods
rcll
add
mov
or
insb
add
pop
dec
jns
sub
fistl
cmp
dec
dec
ret
test
addr16
into
jl
insb
popw
hlt
mov
scas
movnti
xchg
data16
cmp
stos
sbb
inc
sbb
call
popa
popa
insb
mov
out
fcomps
iret
fld
clc
jo
xchg
fcoml
orl
sub
and
stos
sbb
jns
mov
daa
mov
fstpl
xchg
or
mov
cwtl
pop
push
jne
cltd
mov
fidivrs
sbb
xchg
movsb
or
lcall
xor
xchg
test
mov
or
and
int3
cmp
mov
cwtl
push
rcrl
lcall
jbe
sahf
xchg
js
das
mov
add
pop
jmp
ds
cmp
hlt
test
in
sbb
push
mov
xchg
push
outsl
lds
or
out
sbb
xor
fwait
xchg
lock
insl
pop
inc
dec
sub
movsb
std
lock
test
or
xor
lea
jb
mov
add
js
adc
jae
lret
jge
jns
mov
mov
lcall
add
or
loop
or
push
and
push
and
popa
adcl
sbb
jp
and
sbb
dec
popa
mov
data16
jmp
fisubs
jbe
mov
int3
sub
std
sub
lds
fs
xlat
ret
sub
dec
hlt
das
or
pusha
cli
roll
xor
call
inc
xchg
push
pop
add
jnp
push
push
or
jb
mov
sub
pop
xchg
mov
loope
scas
jo
scas
imul
pop
adc
das
in
loope
bound
sub
fwait
imul
mov
xchg
cmp
lahf
xchg
fdivl
adc
lods
clc
das
hlt
shrl
negb
mov
dec
nop
call
pusha
int
arpl
scas
push
shl
leave
aaa
pop
pop
cltd
sub
lds
cmp
adc
fldt
xor
xchg
xor
add
push
das
sbb
frstor
shlb
and
out
jnp
adc
stos
cmp
mov
sti
inc
aas
mov
mov
in
mov
xor
xor
insl
pop
mov
adc
push
mov
inc
cmp
jge
xor
in
icebp
sbb
in
in
xchg
inc
dec
dec
sbb
pop
addr16
and
xor
sbb
ljmp
mov
dec
decl
jae
dec
cltd
pop
cmp
push
loop
dec
hlt
cli
cmpl
icebp
dec
andl
push
xchg
sbb
adc
or
imul
xchg
and
js
mov
jmp
xor
and
out
sahf
inc
xchg
inc
movsl
icebp
ss
sbb
push
inc
stos
arpl
mov
scas
add
lcall
repnz
mov
mov
xchg
dec
in
pop
jl
sbb
xor
xor
adc
arpl
inc
ja
cmp
mov
adc
aas
test
dec
call
in
jb
xchg
mov
jo
push
sub
pop
fisttps
pop
sub
lret
mov
mov
jmp
inc
inc
sub
fistpl
leave
mov
test
pop
xor
lret
out
outsl
push
loopne
popa
stos
inc
pop
xlat
cmp
lret
jne
xchg
pop
add
test
cmpsl
in
xlat
jge
mov
ret
or
in
mov
xor
mov
xchg
dec
xchg
jmp
into
pushf
inc
jecxz
push
popa
push
xor
and
lret
popa
pop
popf
xor
push
push
cmp
cld
popf
adc
cwtl
inc
mov
cs
add
or
push
cmpsb
inc
pop
fists
push
sti
fdivrl
sbb
xchg
pop
add
jp
jge
call
jno
add
xchg
outsb
std
addr16
shll
test
popa
xor
sbb
lcall
dec
add
repz
or
fcomps
dec
aas
jae
mov
cs
dec
rcrl
jnp
notb
fs
scas
enter
xchg
cmc
or
cwtl
pop
add
test
push
mov
les
push
shl
and
outsl
pop
adc
je
xchg
push
mov
pop
cli
lret
hlt
fmull
mov
in
dec
mov
and
and
sbb
mov
mov
and
daa
cmpsb
cld
xchg
mov
jle
push
les
idivb
and
sti
cmp
cmp
enter
adc
dec
jg
jp
neg
scas
push
jp
pop
or
cmc
inc
outsl
cmp
push
sti
in
add
sahf
mov
xchg
push
pusha
or
lds
rcrb
pushf
ffree
xchg
mov
push
enter
xor
push
insl
push
aaa
movsb
scas
push
push
stos
stos
rcr
and
add
and
xchg
insl
add
lds
js
mov
idivb
in
push
testb
repz
inc
cmp
xor
and
outsb
cmp
and
in
idivl
bound
paddd
mov
mov
das
mov
jmp
sti
je
mov
mov
outsl
xlat
fstpt
cmp
pop
sub
xchg
mov
mov
inc
cmp
xchg
call
scas
fnstcw
insl
or
and
cli
int
stos
mov
pop
push
pushf
out
jmp
fidivs
out
bts
adc
aas
inc
sbb
inc
fnsave
test
jge
into
inc
imul
add
mov
sti
and
jbe
iret
cmpsl
mov
test
lock
add
or
xchg
mov
adc
sahf
cmpsl
rcll
inc
clc
xor
mov
cmp
xor
xor
jb
cltd
cwtl
jle
mov
xchg
leave
sbb
mov
jbe
stos
inc
outsl
sbb
iret
sub
and
lock
pop
aaa
out
xchg
adc
insb
andb
mov
mov
icebp
push
cmp
sbb
lahf
std
xor
paddb
push
sub
mov
xor
cmp
pop
xor
adc
das
jge
jno
push
je
sbb
cmpsb
mov
mov
push
ljmp
test
xchg
inc
mov
enter
fisubrl
call
add
adc
cmp
lret
jns
mov
cld
jno
idivl
and
hlt
mov
fucomip
cld
ret
inc
fs
mov
push
inc
cli
pop
xchg
sahf
stos
push
pop
movsb
es
insl
xor
cs
in
jp
push
xor
movsb
sub
and
insl
and
in
jge
mov
pusha
dec
dec
inc
mov
mov
int3
pushl
push
xchg
xchg
repz
fildll
stos
bound
shr
or
pop
sahf
repz
pop
sbb
mov
test
or
test
xchg
cmp
mov
pop
cmp
or
sbb
jg
sbb
adc
lahf
push
adc
cmpsb
dec
cli
adc
addl
inc
lds
hlt
ljmp
movsl
loopne
clc
xchg
cmpsl
test
inc
scas
mov
scas
pop
pop
les
jno
clc
movsl
dec
sti
mov
adc
pushf
dec
inc
and
add
daa
or
jno
push
std
adc
or
inc
into
stc
lods
mov
add
stos
movsl
movsb
inc
cli
mov
repnz
xor
or
test
pop
sbb
jl
aas
mov
lret
sub
xor
ret
push
outsb
scas
imul
lods
es
ljmp
jae
sbb
out
push
mov
cmpl
mov
addr16
sahf
cmp
stos
sub
xlat
cli
inc
xchg
imul
pop
cmp
sbb
push
outsl
or
mov
ret
sar
add
rol
aas
fxch
pop
movsb
xor
mov
xor
out
nop
out
xor
daa
je
negl
lods
mov
add
mov
mov
inc
push
shll
shll
cmp
nop
mov
ret
and
push
imul
cwtl
xor
test
and
dec
jp
cmp
mov
sbb
inc
cmpsb
cmp
xchg
vpmaxsw
out
in
add
push
cmp
add
imul
scas
or
add
xchg
das
sub
hlt
pushf
lods
stos
cmpsl
les
inc
das
add
leave
mov
es
jno
mov
roll
and
cmc
push
xor
das
cmpsb
lret
inc
jmp
jns
push
divb
mov
inc
test
out
out
scas
aam
mov
in
out
call
sub
mov
testl
xor
cmp
int
inc
mov
test
lcall
les
ljmp
sub
lock
sbb
imul
dec
dec
and
cmp
sbb
adc
jne
and
xlat
sbb
pusha
add
sbb
push
adc
fnstcw
movsl
jecxz
cmp
jge
in
inc
dec
mov
or
inc
insb
leave
std
mov
cmp
mov
xchg
lret
inc
fbld
dec
jo
xchg
xor
pop
lock
dec
lods
jo
mull
mov
dec
in
cmpsl
jb
jo
mov
stos
cmc
adc
push
pop
stos
std
stos
cmp
pushf
gs
loopne
lea
pop
inc
ss
xor
repz
cmp
dec
pop
push
movsl
inc
notl
mov
pop
lret
ret
xlat
movsl
xchg
lds
in
out
mov
mov
mov
arpl
xor
rolb
dec
fs
addr16
pop
cmp
shlb
xor
xchg
cltd
loopne
xlat
add
inc
push
dec
mov
mov
sub
xorl
add
inc
adc
sbb
jnp
dec
cwtl
jl
out
mov
fstps
push
movsb
test
pop
dec
add
cmp
das
clc
cltd
push
pop
stc
cmp
int3
xchg
dec
shl
in
repnz
jp
or
or
add
dec
dec
rcr
jno
out
add
ret
xchg
mov
stc
dec
enter
sub
sbb
insb
mov
push
inc
mov
pop
sub
fsubrs
mov
fadds
loope,pt
mov
and
adc
jl
test
lret
ljmp
call
jbe
movsl
pop
repz
out
inc
mov
movsl
call
shrb
push
sbb
popa
cwtl
cmp
lcall
mov
mov
xchg
sbb
insl
push
repz
iret
ljmp
push
xchg
fcmovnb
les
lahf
orl
imul
enter
lods
jmp
xchg
mov
sbb
cmp
push
lahf
outsb
lods
ja
pusha
cmp
add
mov
mov
test
inc
lahf
mov
jg
jmp
mov
jg
and
lcall
out
jns
dec
mov
pop
mov
xchg
movsl
push
push
adcl
pop
ds
jo
mov
mov
rorl
lret
jle
sar
pcmpgtb
mov
or
ljmp
lods
cmp
pop
xor
scas
dec
js
cli
add
pop
movb
mov
xchg
jp
add
inc
fs
loop
mov
mov
rcr
lods
push
movb
inc
sbb
push
aad
lahf
jmp
xchg
fs
popa
cmp
fmuls
popf
add
add
repz
lds
xchg
add
sbb
inc
ret
inc
sub
xchg
xchg
sarb
out
int
iret
sbb
outsl
shl
pop
jb
xor
out
fwait
pop
icebp
cmp
push
outsl
subb
notl
lret
rorb
es
add
scas
lods
xor
cs
push
jb
lea
loopne
stc
jle
mull
test
cld
pop
mov
lret
mov
cmp
leave
nop
push
mov
dec
dec
rorl
cltd
mov
sub
leave
lret
jge
or
xchg
int
add
jge
mov
fadds
mov
mov
cwtl
inc
imul
rclb
mov
ret
lea
sahf
imul
lcall
sbb
push
adc
sbb
adc
lret
test
inc
sbb
lcall
add
sub
popa
cltd
jne
push
aad
mov
push
stos
jae
add
inc
sahf
imul
loope
mov
aad
daa
movsb
sti
jmp
mov
and
push
xor
out
push
jns
fsubrs
int
pavgb
dec
nop
pop
fadds
orl
or
xchg
mov
add
jmp
cld
or
mov
out
sbb
lds
inc
icebp
shlb
loopne
xchg
jmp
sub
pop
aad
add
jns
cmpsl
testl
pop
aaa
fiadds
iret
aas
adc
sbb
aad
jb
shll
fsubrl
mov
movsl
insb
add
sarb
push
mov
popa
pusha
sar
push
nop
mov
das
inc
scas
push
inc
inc
or
adc
loope
jno
mov
fnsave
aaa
inc
push
fwait
pusha
mov
dec
lods
idiv
mov
or
pusha
sub
lds
and
xchg
fnsave
cmp
mov
pushf
sahf
out
jbe
lods
sub
inc
lret
jno
testb
pushf
outsb
xor
lret
and
cs
cld
sub
repnz
sub
sub
push
repz
in
ficomps
sub
dec
xchg
repz
mov
jmp
inc
inc
shr
icebp
insb
and
fistpll
adc
ret
mov
pushf
mov
cmc
imul
push
cld
fdivl
dec
inc
jb
es
imul
add
and
sub
inc
shlb
outsl
xor
dec
popf
xchg
mov
dec
dec
dec
imul
mov
iret
repz
int3
out
in
mov
xchg
adc
mov
cltd
mov
and
fdivrl
lods
add
dec
test
pop
movsb
cmp
mov
js
hlt
dec
push
popf
xchg
mov
test
loope
jl
lock
add
jmp
xlat
mov
jae
shl
fistpll
imul
or
fimull
xchg
pop
pop
and
mov
mov
jecxz
sbbl
sbb
pop
add
xor
xlat
sbb
mov
enter
mov
stc
es
mov
add
add
dec
mov
inc
xorb
lock
cmp
fwait
jp
pop
xchg
xchg
or
sub
sub
fmuls
jl
and
xlat
cmp
cmp
add
inc
and
cltd
xchg
inc
cmp
jmp
cld
and
sub
pop
outsl
dec
aas
sbb
xchg
adc
cmp
scas
out
adc
cmpsl
js
jnp
stc
das
or
push
or
fsubl
cmp
xor
xchg
dec
mov
pop
in
adc
pop
mov
mov
pop
mov
mov
orl
pop
jbe
in
repz
lods
mov
push
jecxz
in
add
lock
sub
fldcw
sbb
jbe
icebp
or
inc
and
push
into
lcall
pop
iret
add
mov
out
or
xor
or
lea
push
mov
add
mov
mov
cmpsl
sti
push
std
jecxz
jl
outsl
fs
cmp
movsl
movsb
mov
in
dec
adc
cs
push
stc
fucomi
in
jb
fdivrl
push
jns
fidivs
rclb
int
ret
mov
sub
pop
je
mov
xor
nopl
icebp
jmp
push
jp
aaa
and
or
xor
xchg
mov
test
jecxz
sahf
or
xchg
popf
es
push
mov
popa
pop
repnz
loopne
lea
fcoml
in
in
arpl
sbb
push
mov
xchg
fs
movsb
mov
aaa
in
mov
lret
xlat
jmp
inc
test
ficomps
add
inc
js
sub
xchg
fldcw
imul
mov
mov
sbb
jmp
inc
insb
cmpb
mov
mov
mov
dec
add
sarb
or
ret
les
or
cmp
leave
test
sbb
cmp
pop
loopne
sub
or
xor
pop
fisttpl
int3
and
push
push
push
in
pusha
test
mov
jecxz
jge
lcall
push
sub
jb
jns
xchg
push
shrl
nop
inc
pop
add
shr
cmpsb
jno
mov
jge
scas
shrb
xor
xor
mov
repnz
push
pop
add
sarb
mov
sahf
dec
lret
mov
jne
jmp
bound
xchg
je
push
out
and
mov
mov
push
in
lcall
psrlw
insl
stos
fsubrl
adc
inc
pusha
out
adc
push
cs
loopne
dec
sub
fsubrs
adc
add
inc
lret
fdivrs
lret
and
push
xor
daa
xor
dec
mov
fstpl
stc
ret
pop
jns
push
mov
ret
xor
push
je
dec
in
jbe
add
das
mov
icebp
xchg
pop
fnsave
sbb
inc
mov
or
in
fnstsw
dec
adc
notl
mov
lahf
push
out
icebp
cs
sbbl
shlb
outsl
jp
jae
add
pop
inc
test
fisttps
and
je
or
push
fcmovnu
inc
fcomi
out
xor
testb
orb
cwtl
dec
xchg
sti
ss
dec
call
int
cmpsl
xchg
adc
aam
ret
sahf
data16
xchg
testb
pop
js
inc
mov
pop
dec
shl
icebp
mov
pop
jnp
sub
jbe
cmp
add
hlt
lock
xor
lea
xchg
mov
pop
in
ret
xchg
aad
in
mov
ds
mov
cmp
cmp
in
sti
xchg
jno
imul
shlb
sbb
fadd
in
movsl
mov
fcom
cmp
mov
bound
loope
cmc
adc
int3
mov
sub
dec
call
in
sub
test
loope
sbb
pop
xchg
ret
das
and
xor
lds
jno
sti
xchg
std
jg
and
adc
loop
and
loopne
push
das
stos
add
enter
pushf
push
or
jle
xchg
scas
mov
ret
push
cmc
and
push
cmp
push
mov
xchg
or
xchg
xchg
std
cltd
cmp
das
lock
xchg
dec
mov
pop
gs
icebp
mov
cltd
mov
cmp
mov
inc
cld
ret
dec
subb
gs
test
and
pop
jne
loope
orb
cmp
jb
and
popf
add
aam
jg
mov
mov
mull
popa
mov
call
mov
insb
sub
pop
leave
push
pop
sbb
jle
cwtl
xorb
and
cli
sub
loop
xchg
inc
pop
jno
mov
cmp
flds
int
in
xchg
inc
lret
or
xlat
mov
mov
nop
cmp
cmpsb
int
sbb
sbb
in
xor
xor
testl
jge
jns
or
pop
mov
lock
dec
adc
inc
inc
dec
insb
outsb
aam
dec
adc
data16
or
sti
or
outsb
xchg
pop
cpuid
jb
addr16
mov
rorl
lahf
and
mov
sbb
sbb
pop
push
sbbb
repz
lahf
imul
scas
insl
jmp
pop
arpl
fmull
sub
iret
push
pusha
nop
and
imul
sub
mov
fdivs
cli
jmp
push
bound
mov
cwtl
xchg
pop
lcall
addps
xchg
outsb
ljmp
popa
add
iret
pop
push
loopne
dec
sbb
daa
push
fldcw
and
push
sahf
push
inc
sbb
cmp
lds
xlat
sub
adc
sub
jns
cli
lahf
jle
mov
add
lea
pop
out
call
inc
and
cs
int
adc
and
push
inc
faddl
orb
test
mov
fdivrl
xor
sbb
xor
jnp
mull
xor
sub
data16
int3
icebp
xchg
add
outsl
jg
cmc
enter
add
imul
repnz
mov
in
ret
sub
iret
cmc
cli
outsl
gs
and
add
and
cmp
scas
xchg
mov
jo
ret
jg
icebp
dec
das
pop
xor
xchg
test
bound
imul
pop
aam
and
jb
or
out
add
xorb
outsb
int
sbb
lods
icebp
mov
jecxz
movsb
ja
jg,pt
cmp
lock
lock
es
xor
mov
dec
mov
adc
mov
ret
fldcw
lods
shl
imul
xchg
push
push
xchg
jne
cs
or
movl
or
mov
aas
and
arpl
push
pop
cs
stos
call
lods
cmpsl
pop
pop
adc
popa
outsb
std
std
mov
in
sbb
mov
cmp
scas
sbb
mov
xchg
mov
std
push
cwtl
pusha
sub
jbe
adc
mov
jle
pusha
outsl
jbe
out
or
lahf
iret
fsubrl
xchg
notb
sarl
cld
sbb
xlat
xchg
xchg
sub
pushf
inc
fsubrs
inc
lret
dec
dec
xor
inc
mov
push
xchg
push
bound
xchg
scas
dec
repz
movsl
insl
fisttps
dec
je
iret
push
enter
sub
jae
xor
aad
lods
inc
imul
daa
js
icebp
pop
setae
push
test
or
jle
lds
pop
cltd
mov
repnz
sbb
fcoms
outsl
fs
stos
xor
addr16
adc
cld
sub
jge
jecxz
ret
outsl
mov
mov
lock
dec
ds
fiadds
pop
jg
push
sub
imul
out
fidivl
push
loopne
push
loop
fsubr
sbb
push
lds
arpl
loope
pop
aaa
cmp
mov
cmp
sbb
mov
or
and
call
push
mov
add
mov
mov
repz
xor
shlb
nop
arpl
data16
lret
lcall
jl
les
fcoml
pop
test
movzwl
dec
daa
jo
fcoml
test
push
push
cmc
pop
adc
stos
shrb
adc
std
lds
leave
popf
xchg
cmp
sub
or
xor
aad
mov
lods
lret
aaa
jmp
jmp
mov
adc
xlat
nop
xchg
pop
hlt
sub
enter
add
mov
popa
mov
and
mov
push
xor
jecxz
mov
push
addr16
lahf
stos
dec
fimull
fcomps
clc
pop
daa
mov
mov
jb
dec
loop
call
mov
or
dec
daa
popl
cs
mov
jae
mov
aam
xor
xor
push
mov
loopne
xchg
loope
iret
subl
les
mov
sub
movsb
push
mov
lret
jecxz
pop
sahf
test
loop
jae
mov
clc
push
jo
pop
push
fidivrs
test
lcall
sbb
int3
js
stos
aad
fwait
idiv
push
sub
out
out
sbb
lret
xchg
and
outsb
out
cmp
out
sub
stos
jns
and
out
lea
movsb
imul
mov
xchg
shlb
jno
imul
sub
int
mov
inc
dec
sbb
ss
ficompl
negb
and
jns
fisttps
sbb
ret
daa
in
adc
sub
jg
adc
inc
xchg
ret
daa
sub
cmc
or
dec
pop
jecxz
push
jne
insl
xchg
adc
in
xor
xchg
xchg
out
inc
xchg
sub
or
inc
hlt
jmp
sub
pop
test
data16
jo
arpl
mov
adc
xchg
les
rcrb
dec
mov
inc
pushf
insl
xor
inc
mov
mov
xchg
scas
arpl
negl
ljmp
outsl
fstl
dec
leave
lahf
es
mov
pop
adcb
sti
push
cs
sub
cltd
xor
mov
jge
gs
adcl
add
xchg
cmp
xchg
out
sub
lods
adc
fs
xchg
mov
lret
mov
sbb
jb
add
jnp
xchg
sub
loope
mov
lret
test
subb
iret
xor
outsl
adc
adc
or
jecxz
push
add
mov
neg
and
and
mov
sbb
inc
shrb
adc
sub
pusha
lock
sbbb
and
lea
lahf
pop
ds
pop
daa
pusha
insl
cwtl
push
adc
dec
adc
mov
std
xor
mov
push
inc
lret
leave
lea
lcall
enter
fiadds
test
cwtl
dec
call
in
pop
pusha
jb
xchg
repz
mov
stos
mov
ljmp
movsl
pop
iret
cltd
mov
jge
rclb
into
cmp
add
jno
push
jae
dec
out
and
mov
mov
loop
cmpsb
jno
mov
cmpsl
nop
lods
push
orb
inc
cmpsl
or
inc
loope
out
movl
lret
xor
fcompl
xchg
jecxz
pop
sbb
mov
pop
loopne
inc
ss
aad
stos
jbe
gs
sub
push
call
fbstp
pop
mov
jno
aaa
jne,pn
loopne
mov
shlb
adc
push
imul
sub
lret
pop
nop
mov
lret
pop
push
dec
inc
mov
pop
mov
jp
mulb
cmp
jmp
dec
lea
jb
sbb
scas
in
ja
fldt
testb
or
movsl
fwait
mov
in
sub
shll
in
fwait
mov
cmc
xchg
cmpl
inc
jmp
pop
loopne
sbb
sarb
xchg
notb
push
xor
addb
js
push
arpl
xchg
loope
xchg
stos
out
mov
push
inc
inc
push
sbb
mov
push
and
dec
aas
lret
addr16
cmp
fldl2t
sub
pop
sbb
lret
xor
push
xorl
fwait
insb
sbb
lahf
mov
sti
push
aam
jl
xchg
nop
orl
push
movsb
jnp
push
mov
arpl
inc
ret
ja
mulb
in
or
mov
movsl
xchg
inc
repz
data16
shl
clc
jnp
cmp
scas
scas
inc
fdivs
inc
or
cmp
fcoms
sbb
add
imul
xchg
xchg
hlt
rcrb
test
push
push
push
ffreep
in
ds
sub
dec
pop
xor
jae
push
icebp
pop
xchg
lock
fs
adc
outsl
mov
inc
rclb
mov
loope
xor
outsl
bnd
inc
add
fstl
stos
fbld
push
lahf
ds
and
pop
imul
dec
aaa
notb
pop
add
mov
add
sahf
cmc
aas
xchg
jmp
out
adcb
or
xchg
cmp
dec
stos
dec
fiaddl
jmp
dec
jae
and
and
ds
jae
jo
movsl
je
push
rcl
jo
xor
mov
xchg
mov
mov
mov
scas
fnstenv
das
call
pop
pop
xchg
mov
int
data16
xor
and
insb
aas
cmpsl
pop
aaa
ds
xchg
test
mov
adc
aad
xor
jb
push
mov
ret
sti
sub
inc
xchg
add
dec
xor
jmp
stos
xchg
jmp
fildl
and
loope
jg
jae
mov
loop
mov
loop
les
aad
cmc
fstps
inc
sahf
in
lcall
mov
loope
inc
inc
popf
out
lds
aam
in
scas
enter
mov
clc
mov
xor
stc
xor
lret
xor
dec
lods
jge
mov
in
cmpsw
sub
mov
or
call
cmp
leave
cld
ror
push
jp
adc
les
imul
out
add
in
jg
sarl
fnstsw
jnp
popf
je
lret
xchg
std
hlt
fstp
arpl
loop
call
orb
je
fsub
push
mov
xchg
pop
push
in
cmp
sub
adc
jl
dec
and
repz
push
xchg
adc
mov
xchg
jno
daa
jmp
xchg
cmp
cli
xchg
sub
sbb
pushf
inc
lea
pop
inc
mov
xchg
das
aas
insl
test
or
adc
inc
xchg
push
add
in
out
ja
ds
dec
pop
jno
mov
xchg
mov
clc
or
or
add
dec
adc
inc
and
jmp
and
orb
xor
push
jmp
notl
repnz
sbb
adcl
movsl
push
lds
cwtl
sub
adc
or
ds
jmp
pop
cmc
das
xchg
cltd
xor
aad
jle
xor
or
or
test
dec
stc
sub
aaa
vandpd
nop
cmp
jge
lret
iret
xchg
daa
push
mov
popl
pop
dec
dec
test
sbbb
or
pop
cmp
sub
seto
inc
das
inc
sbbl
cltd
and
sbbb
std
xchg
mov
stos
mov
lret
add
adc
sub
inc
mov
jno
rcll
mov
shr
push
out
pop
movsl
mov
mov
jo
mov
out
xor
jmp
rclb
bound
loop
stos
jns
or
scas
movsb
lods
and
into
mov
hlt
filds
pop
mov
push
cmp
scas
int
push
sub
xchg
mov
xor
sarb
imul
mov
jp
lahf
sti
out
adcb
insb
mov
jecxz
sbb
jns
and
mov
add
mov
adc
lock
adc
js
outsb
mov
jo
dec
mov
leave
inc
out
dec
jno
mov
ds
jns
popf
gs
aaa
mov
pop
out
ja
xlat
movb
je
int3
xor
sbb
jg
nop
lods
imul
add
inc
inc
sub
mov
sbb
dec
mull
loop
pop
cmpb
rcr
mov
lods
push
aam
xchg
enter
and
shl
mov
and
call
in
adc
or
add
xlat
out
ds
pop
mov
mov
mov
jmp
icebp
xchg
cs
les
push
cli
cmp
dec
xchg
push
dec
sub
adc
icebp
hlt
pinsrw
jnp
pop
ror
xor
loop
pushf
scas
in
ss
stos
inc
sti
lret
adc
add
enter
push
jg
or
cs
push
popl
push
sbb
out
sub
in
sbb
pushf
inc
mov
push
or
test
ds
imul
or
add
js
repnz
repz
into
add
call
cltd
sbb
mov
test
push
in
mov
in
dec
sub
pop
push
adc
inc
test
pop
push
push
hlt
sbb
cmc
cmp
lret
mov
mov
dec
adc
lret
cmpsb
inc
shrl
inc
imul
sbb
das
jge
je
xlat
dec
ss
and
test
jl
inc
int3
fdivs
push
shrb
fcomps
cmp
jo
cli
ret
pop
fwait
mov
mov
cltd
repnz
push
das
mov
mov
jb
push
mov
aam
mov
es
testb
lock
pusha
pop
push
into
out
mov
popa
or
ljmp
or
cmpsl
dec
faddl
dec
pop
clc
or
mov
into
xor
scas
popf
adc
adc
js
in
aam
xchg
aaa
sbb
mov
stc
nop
jecxz
imul
jae
mov
scas
jecxz
add
mov
js
movsl
inc
js
shll
or
sub
sub
dec
cmp
leave
xor
adc
ss
xlat
maxps
pop
iret
in
pop
lea
jg
adc
pop
add
stos
dec
push
pop
adc
rorb
push
iret
mov
notl
lock
stos
dec
jnp
inc
out
inc
test
pop
getsec
pop
or
pop
cmpsb
lahf
and
xor
mov
sub
push
sbb
push
or
inc
adc
js
mov
into
cmpsl
int3
push
xchg
pop
jecxz
mov
imul
in
add
and
jecxz
rclb
sub
out
ss
fs
or
mov
test
inc
dec
dec
gs
adc
sbb
fidivrs
cmp
mov
cmp
inc
xor
inc
loopne
into
dec
cmp
stc
xchg
daa
lock
insb
outsl
fimuls
cmp
pop
call
mov
jne
fstl
lea
hlt
adc
cmp
pushf
call
inc
adc
or
call
and
add
xor
loop
pop
sbb
test
mov
pop
sbb
xchg
lea
lcall
push
inc
lcall
stos
dec
jmp
pusha
stos
and
ja
xchg
sbb
std
sbb
lea
mov
pop
pop
inc
test
test
xchg
jl
inc
or
filds
lods
push
or
dec
es
jmp
mov
dec
stos
sub
hlt
std
sub
mov
fdivrp
sbb
fsubrl
les
test
push
jns
dec
sti
sbb
rcrl
test
lahf
mov
sbb
imul
jne
es
lods
enter
mov
mov
out
aad
dec
shlb
lock
int3
cmpw
stc
lock
dec
and
push
aas
mov
jno
mov
sti
mov
popl
enter
xchg
cmp
cltd
rcll
sti
popa
cltd
jmp
cmpsb
test
xor
les
testl
xor
ljmp
ljmp
divb
mov
dec
mov
pusha
push
jbe
mov
stos
insl
in
pop
inc
dec
lds
add
and
add
jbe
cmpb
pop
dec
mov
add
inc
mov
push
or
add
xchg
lock
shlb
mov
gs
je
mov
mov
cli
pop
aaa
lahf
adc
mov
repz
adc
pop
adc
dec
js
cltd
dec
xor
ss
popa
mov
add
or
repnz
push
test
divl
push
jb
movsl
loop
push
adc
push
in
xchg
sahf
test
pop
xchg
dec
in
in
or
divl
add
movsl
mov
frstor
sub
jne
aam
jne
lods
jne
imul
js
mov
mov
sub
push
xlat
jle
xor
xor
lahf
jg
subl
mov
add
or
xchg
pusha
imul
sub
push
jmp
rcll
mov
aam
sbb
dec
sbb
jb
scas
sbb
cld
mov
sbb
mov
in
lds
inc
dec
mov
mov
mov
inc
into
scas
or
mov
push
lock
mov
cmpsl
sub
cwtl
call
push
dec
inc
mov
neg
sahf
rcll
test
arpl
sub
addr16
test
fnsave
out
data16
fs
push
and
mov
mov
cmp
inc
inc
mov
ret
mov
push
addb
sub
mov
push
mov
les
movsb
xor
out
xor
mov
test
imulb
sub
mov
cmp
icebp
add
sub
icebp
call
inc
fsts
int
push
cmp
mov
cltd
mov
repz
pop
push
add
aas
dec
mov
cmpb
mov
not
gs
fcmovnu
out
orl
je
sub
scas
fstpt
pop
inc
imul
adc
or
lods
push
jg
dec
mov
cld
aam
adc
cltd
lcall
mov
inc
loopne
repz
cmp
inc
add
and
xor
mov
mov
dec
or
mov
arpl
fisttpll
lea
cmc
mov
push
mov
mov
sub
bswap
xchg
fldl
std
ja
imul
mov
call
mov
out
xchg
ljmp
sbb
mov
push
aaa
imulw
test
xor
mov
pop
scas
rorb
loopne
sbb
xchg
or
or
in
mov
or
push
jb
movsb
enter
add
aad
ja
jmp
lea
imul
jns
in
jne
jg
cmp
sbb
jmp
sub
cmpsl
mov
add
outsb
sbb
stos
mov
shlb
mov
adc
inc
pop
in
jecxz
loopne
adc
push
int
sahf
jmp
push
cmc
cmp
jg
shll
fcompl
out
sahf
stc
xlat
add
shl
sbbl
or
push
mov
out
cmp
xor
sub
add
shll
inc
mov
lcall
xchg
cmp
frstor
lods
push
scas
mov
push
xor
loopne
test
sub
cli
jmp
imul
mov
pop
inc
push
and
nop
stos
inc
push
mov
orb
jp
add
inc
sbb
and
cld
shll
idivb
daa
mov
push
loop
xor
loopne
hlt
pop
in
daa
xchg
test
xlat
je
or
pop
sbbb
in
bound
insb
out
cs
dec
mov
mov
xchg
inc
pop
loop
enter
pop
ss
into
subb
push
mov
xor
idiv
add
xchg
xor
sbb
les
xchg
fwait
add
cmp
ret
mov
xlat
stos
nop
sub
ljmp
mov
movsb
xchg
jle
enter
jecxz
jmp
mov
or
lock
leave
cs
jecxz
inc
popf
cmp
mov
inc
fdivs
pop
jp
sti
sbbb
in
outsb
mov
mov
mov
rclb
sub
out
inc
xchg
fstpt
mov
or
push
add
cmp
fsubs
mov
loope
push
stos
fstl
mov
adc
ljmp
jg
fildl
cltd
dec
repnz
cmc
call
xchg
pop
or
push
aaa
push
push
clc
inc
push
outsl
scas
sbb
sbb
mov
inc
inc
data16
xor
jecxz
add
jmp
popf
sub
adc
insl
jne
cwtl
jg
xchg
cmpsl
cmp
or
jge
arpl
xchg
outsb
ret
push
add
xchg
out
jge
lahf
push
imul
xchg
es
js
aam
lods
pop
mov
inc
adc
iret
cmc
movsl
xlat
and
jmp
nop
sbb
hlt
add
lock
or
aaa
mov
mov
cmpb
and
lcall
repnz
xchg
push
in
ljmp
jne
loope
notl
dec
and
jo
add
jle
jl
pop
out
cmp
popf
out
shr
jno
cmp
sbbb
inc
pop
sub
or
xchg
popf
xchg
mov
cmpsb
inc
in
push
rol
push
add
or
xor
out
cmpsl
leave
push
aaa
mov
or
pop
ret
out
cld
sahf
xor
cltd
int
pop
aam
pop
jge
cmp
mov
or
sti
mov
jb
jl
mov
mov
call
andl
mov
pop
insl
aad
xchg
roll
outsl
sbb
fwait
pop
clc
inc
hlt
mov
aad
cs
mov
xchg
roll
sbb
xor
mov
jle
shrb
cmp
test
sbb
popa
aad
push
jbe
push
dec
mov
bound
lods
sbb
add
mov
bound
sbb
xchg
lods
pop
bound
jg
lret
push
dec
jae
arpl
fnsave
dec
cmpsl
xchg
rcr
repz
inc
enter
inc
xor
and
mov
lret
pop
scas
pop
es
repz
push
fbstp
sahf
pushf
js
out
push
pop
cmc
jb
mov
lcall
inc
mov
insl
popa
aaa
lea
in
out
cld
fistpl
mov
lahf
dec
xchg
sbbl
dec
push
insl
cmp
pop
xchg
dec
mov
popa
ret
rcrl
dec
add
repz
xor
xor
shr
pop
mov
das
mov
aaa
fcmovnu
je
dec
sub
hlt
mov
jae
shrl
ja
inc
rclb
add
xor
and
and
fdivs
mov
sti
lcall
jg
aaa
jnp
mov
xor
out
ret
mov
mov
lock
xor
out
mov
mov
add
xchg
pop
stos
stc
push
pop
adc
dec
push
shll
cltd
xchg
sbb
loop
dec
movsb
and
jne
push
cmp
std
mov
xchg
cmp
popa
addr16
rcr
ss
inc
insl
xchg
pshufw
loope
repz
mov
add
xor
push
shll
fs
arpl
mov
dec
push
sbb
test
push
scas
jbe
fld
jecxz
in
in
pop
add
sub
outsb
lcall
jae
jb
cld
add
sbb
test
shrl
cmp
lock
rcrb
test
outsl
loope
inc
ss
stos
jns
lret
dec
movsb
subl
in
mov
xor
xchg
jbe
dec
ret
dec
xchg
imul
mov
push
cmovne
pop
push
pop
into
into
push
roll
sarb
pusha
arpl
in
xchg
inc
and
fimull
or
fdivrp
or
xchg
jb
mov
ds
imul
mov
ds
xchg
imul
push
cmpsl
sub
sub
lret
inc
mov
sbb
jns
outsb
in
test
cmp
fdivs
test
cmp
sahf
lcall
xlat
mov
pushf
mov
dec
cld
mov
lahf
in
mov
adc
mov
imulb
mov
mov
icebp
sbb
shrl
jg
shll
fcompl
jg
cltd
mov
jno
cld
push
movsl
in
dec
pusha
ja
jae
mov
enter
bound
push
and
popf
out
push
inc
xchg
jae
and
jne
push
xchg
insb
pop
or
lahf
in
repz
inc
bound
jbe
dec
add
dec
int
out
shrb
add
jecxz
imul
pop
sbb
ljmp
add
jle
xchg
imul
lods
xor
cmp
aad
andb
cmp
sub
int3
scas
push
lahf
jle
inc
shll
dec
xchg
insl
adc
out
sti
fwait
push
enter
jb
mov
std
jo
cmp
mov
sahf
push
mulb
sbb
loopne
loopne
and
pop
iret
lods
and
je
data16
sub
repnz
inc
arpl
jg
mov
out
adcl
js
jle
lods
leave
cli
cmp
test
ret
lods
loope
jo
inc
dec
test
outsl
je
daa
pop
frstor
call
mov
mov
and
push
sahf
test
sbb
xchg
mov
adc
insb
cwtl
testl
in
sub
leave
js
arpl
cmp
ret
mov
cmpsl
pop
pop
fistpll
cli
push
pop
cmp
mov
or
xchg
lret
jo
call
sbbb
and
js
out
and
cmc
adc
stos
sbb
pusha
mov
loope
inc
push
std
movsb
daa
add
fdivrl
add
and
inc
cmp
fisttpl
aad
sub
dec
imul
rcrl
test
or
in
xlat
push
cmp
sbb
and
aam
jge
sub
into
mov
ret
pop
cmp
sub
les
jae
dec
and
mov
mov
push
dec
push
or
sub
in
sar
sub
mov
adc
je
xor
lds
cmp
mov
rcr
insb
orl
pop
aam
es
xlat
adc
test
imul
xor
jno
shrl
pop
push
stos
inc
repnz
stos
gs
daa
insb
xchg
jnp
scas
hlt
imul
loop
and
out
dec
xchg
out
icebp
ljmp
clc
js
sub
aaa
in
outsb
sbb
loopne
mov
or
clc
popa
scas
adc
inc
in
inc
adc
out
mov
adc
clc
popa
dec
xchg
lock
mov
adc
jp
jmp
add
outsl
gs
in
loop
mov
xchg
push
cmp
aad
std
outsl
ss
and
mov
sub
or
pop
sbb
mov
pop
sub
jp
or
or
fadd
and
cmp
lock
xchg
pop
int3
adc
mov
jp
jp
dec
int
shr
sub
fdivrl
imul
pusha
push
loope
call
pop
stos
dec
fimull
shlb
xchg
shrb
int
pushf
or
mov
in
fcoml
xchg
mov
push
lcall
xchg
adcl
iret
jle
dec
sahf
call
mov
mov
mov
dec
movsb
cmp
icebp
arpl
bnd
mov
pop
je
add
add
mov
hlt
outsl
cmpsl
in
jae
cwtl
xchg
jb
inc
cmc
pusha
sub
xchg
or
fdivrl
inc
push
pop
jo
xchg
xor
xor
push
lods
fwait
ja
mov
adc
mov
outsb
mov
mov
lahf
add
arpl
repnz
int
xchg
xchg
cmpxchg
jno
push
adcl
cmp
cmp
or
or
and
push
lahf
shll
and
jge
lahf
xorb
jae
fdivrl
pop
aas
cmp
xchg
mov
pop
into
fldt
sub
sbb
stos
in
inc
in
ljmp
inc
adc
mov
cs
shrl
jg
mov
mov
mov
push
popa
sbb
test
sbb
push
add
ja
icebp
and
mov
or
xor
push
and
xchg
xlat
xchg
inc
js
adc
ltr
mov
jg
repz
negb
jl
adc
ja
rcrl
mov
inc
xchg
jg
cs
enter
stos
sar
jnp
dec
xor
imul
push
mov
lret
sbb
or
cs
cmp
mov
or
inc
lea
scas
inc
popa
popf
add
sti
push
push
mov
and
loope
pop
clc
xchg
or
repz
ja
lock
ja
jp,pn
data16
xor
mov
xor
pop
mov
jle
mov
jae
inc
movsl
or
push
add
inc
xchg
movsb
pop
xchg
xchg
pusha
call
mov
push
scas
movsb
pop
fsts
mov
hlt
dec
div
fistpll
push
push
jbe
call
ljmp
sub
or
mov
out
lret
ss
sub
arpl
jne
in
sub
lret
into
pushf
xor
sbb
fisttpll
jae
dec
push
sbb
inc
punpckhwd
pop
mov
cld
push
xor
pop
sbb
add
adc
mov
fcompl
push
and
jecxz
sub
js
cmp
pushl
fs
xor
dec
fbstp
xor
or
lcall
xor
jge
xor
inc
sub
dec
xor
pop
outsb
add
push
inc
mov
jno
xor
and
cmpsb
out
pop
dec
stos
sub
sub
cmp
cmp
into
shll
sbb
jbe
dec
ret
inc
sahf
idiv
mov
add
mov
stc
mov
jo
mov
aas
pop
mov
mov
jg
xor
fstl
stc
pusha
push
mov
pop
fwait
or
xor
leave
rorl
mov
pop
das
dec
dec
cwtl
sub
cmp
gs
ljmp
or
scas
aas
adc
imul
mov
cmp
push
sub
or
or
sbb
repz
inc
sbb
mov
push
test
push
dec
mov
and
push
and
cmp
or
lds
fimull
int
sub
daa
mov
and
aas
fsqrt
scas
adc
movsl
dec
push
fidivl
in
cmp
inc
push
cs
punpckhdq
lea
loope
inc
xlat
mov
push
cmp
cld
inc
int3
rcr
bound
test
mov
push
mov
sub
je
mov
pop
mov
add
push
jl
and
adcb
insl
pop
mov
jne
subl
jns
mov
cmp
pop
inc
mov
inc
cmp
pop
sbb
loopne
jge
xchg
add
add
aaa
sub
mov
mov
cli
pusha
sbb
jnp
xchg
sahf
loop
mov
xor
sar
xchg
pop
in
out
mov
aaa
jmp
es
sub
sbbl
enter
or
and
and
mov
notb
jg
push
ret
inc
lock
lock
dec
mov
xor
mov
ss
daa
in
xor
pop
sbbb
mov
xor
jmp
xchg
inc
jmp
push
mov
cld
push
xor
mov
jg
push
xchg
pop
sahf
adc
inc
in
cmp
jle
pop
aam
pusha
inc
arpl
or
xlat
or
sbb
scas
xchg
xor
es
int3
idivl
lret
cmp
sub
or
xchg
sar
xchg
cmp
dec
mov
pop
push
jl
ds
mov
pop
pop
inc
ja
pusha
imul
aam
movsb
fldt
push
sub
loope
test
shl
leave
or
insl
or
testl
push
mov
inc
ss
sbb
shl
icebp
call
inc
call
popa
pop
fnstenv
push
roll
ss
insl
jns
test
gs
test
mov
lret
je
mov
adcb
mov
jp
jecxz
jno
inc
sub
mov
dec
fbld
jge
call
mov
inc
cmp
cs
xor
adc
daa
outsb
stos
sbb
out
popf
push
ret
cmp
mov
dec
sti
mov
sub
inc
xor
inc
ret
adc
sbb
lcall
jp
pop
sub
movd
leave
fcmovb
sbb
or
push
mov
xor
movsb
jl
mov
add
dec
in
lods
dec
ret
pop
adc
test
mov
hlt
dec
jp
pop
call
fsts
cmp
pop
mov
loop
jbe
pop
jmp
and
mov
arpl
jge
xlat
fdivrl
es
js
mov
push
out
shlb
aaa
xor
sbb
add
push
sub
aaa
ret
dec
out
mov
pop
pop
jg
dec
sub
push
add
out
sti
dec
repz
cmp
xchg
sub
sub
cmp
outsb
mov
cmp
inc
test
and
ds
aam
sub
xchg
cmpsl
dec
call
jb
shl
pushf
xchg
call
mov
pop
push
dec
lcall
adc
push
xorb
jne
inc
adc
mov
rorl
mov
add
fsubrs
xor
and
or
mov
test
push
je
fcompl
xor
xchg
test
pop
mov
data16
jae
hlt
push
sti
call
aam
out
mov
push
out
jne
xor
inc
inc
in
mov
or
and
les
cwtl
inc
outsl
sub
xor
add
shrb
idivl
xor
int
pop
pop
pop
cltd
cmp
xor
dec
mov
sub
mov
xor
sbb
out
into
aad
sub
mov
imul
lods
jne
cs
pop
loopne
add
hlt
xchg
mov
pop
jbe
repz
in
mov
push
fs
cmp
xchg
iret
lahf
mov
andl
mov
aaa
popa
mov
test
in
stos
arpl
cmp
fld
in
xor
out
pop
mov
fisttpl
xchg
or
or
xchg
mov
adc
add
sub
xchg
pop
imul
std
xchg
xor
fs
cmp
scas
or
into
jbe
xorb
movsb
cmp
cmp
xor
mov
out
sti
insb
or
xchg
sbb
mov
scas
xorl
mov
jne
add
push
adc
lds
aad
jo
add
push
jge
adc
bound
mov
lret
sub
mov
shrd
in
inc
sub
jecxz
mov
push
mov
mov
inc
enter
mov
dec
popa
pop
imul
mov
xorl
test
dec
leave
into
insb
xchg
mov
lcall
fnstenv
lahf
sbb
in
stos
push
sbb
pop
fcmovnb
xchg
dec
in
orb
pop
sbb
daa
jp
mov
pop
mov
ret
xor
arpl
popa
jns
xchg
adc
stc
nop
cmp
pop
xchg
rorb
into
leave
dec
ret
decb
in
add
movsb
lods
push
or
les
ss
mov
call
insl
cltd
jne
shl
and
dec
outsl
pop
mov
mov
movsb
mov
ja
fisttpl
mov
push
push
addl
push
bts
mov
and
bnd
mov
xchg
les
mov
or
xor
jge
sub
lret
pop
sbb
cmp
scas
cmp
repz
jbe
fdivrl
push
fnstsw
or
and
das
mov
pop
mov
and
adc
xchg
add
mov
mov
push
sbb
add
jecxz
adc
xor
and
push
dec
aam
xor
sub
lods
cld
add
lcall
sbb
popf
out
vmovddup
cmp
pushf
shll
mov
dec
and
fs
and
cmp
fistl
daa
out
and
mov
iret
sbb
push
lret
or
mov
xor
test
cli
jo
out
mov
cmpsl
and
fsubrs
push
jb
lahf
and
cmp
dec
push
fs
xor
insl
jg
cltd
and
or
in
sahf
mov
jne
sbb
stos
cltd
popa
dec
es
mov
mov
mov
cmp
mov
mov
xor
xorl
dec
test
outsb
or
int3
sbb
int3
jo
mov
lods
pop
movsb
out
lock
mov
cmp
shll
xor
daa
inc
divb
push
sub
jmp
mov
sahf
lock
mov
dec
adc
shrb
js
mov
hlt
jmp
cltd
bnd
xor
push
mov
mov
dec
adcb
mov
mov
pop
popl
aas
push
sub
inc
cmp
insl
mov
jecxz
stos
pop
sbb
lock
mov
sti
es
loop
loope
ss
divl
pop
push
add
imul
pop
add
test
mov
or
mov
sahf
jno
in
and
mov
adc
inc
xor
sub
fst
mov
sar
rcrl
cmp
movsl
shrb
pop
jb
std
fimuls
popf
ret
cltd
in
in
sbb
shll
xor
and
inc
enter
dec
sbb
mull
or
mov
pop
lods
cmpsl
cmpsb
mov
fcmovnbe
xchg
and
mov
mov
jnp
or
xor
addr16
ja
cmp
sub
outsl
cmpsl
lea
testb
cmpsl
nop
test
out
dec
sbb
jae
les
mov
add
xor
iret
insb
mov
mov
inc
movsb
xor
aam
fimuls
arpl
into
sub
push
mov
imul
push
mov
cmp
add
adc
xor
cld
cmp
dec
repz
aam
ja
out
lcall
adc
xchg
adc
mov
cmp
or
shl
pop
sbb
scas
in
cmp
push
cmp
hlt
movsb
lock
mov
mov
int
outsb
mov
pop
nop
push
sbb
cs
shl
bound
mov
test
jecxz
cmpsl
pop
lahf
jmp
fsts
mov
mov
test
std
fcmovu
jo
inc
pop
lds
nop
mov
push
mov
enter
and
mov
sub
dec
stos
xor
sbb
xchg
mov
xchg
test
sub
xchg
outsb
outsl
bound
ja
nop
or
dec
sbb
jns
ret
add
mov
jmp
push
push
inc
lock
adcb
or
xchg
add
xchg
cld
lcall
fwait
movsl
and
test
and
xor
popf
mov
sbb
arpl
add
fbld
xchg
inc
leave
cmpsl
ljmp
enter
dec
mov
dec
jbe
xchg
xchg
pop
fsubrs
jnp
in
test
mov
lahf
insb
and
and
sub
out
inc
fistpl
les
or
fcomps
mov
cmc
ret
ja
adc
inc
mov
mov
outsb
movsb
das
xchg
push
xchg
outsl
stos
dec
les
cmpsb
gs
repz
test
or
lret
popf
sub
out
je
test
dec
jl
sti
mov
sub
shrl
cli
rolb
xor
add
sub
imul
xchg
in
lds
xchg
fsubl
test
out
xor
dec
in
cmp
inc
push
rcr
dec
or
ret
jb
mov
cmc
inc
stos
pop
mov
dec
scas
jnp
aad
sub
mov
enter
decl
dec
lcall
ja
out
adc
test
fadds
inc
mov
adc
loopne
lahf
andl
rorb
add
inc
je
mov
jge
jg
sub
in
fs
std
mov
sub
sbb
and
cmp
fnstcw
lahf
adc
jnp
out
and
jge
cmp
pop
push
and
sbb
mov
iret
ret
lds
xor
mov
jp
jl
shrl
ret
sub
and
xor
xchg
add
jb
pop
mov
pop
add
mov
xchg
adc
adc
cvttps2pi
or
mov
movsl
add
aad
mov
mov
xchg
pop
mov
jl
das
adc
testb
xchg
fisubl
mov
mov
jle
test
adc
mov
clc
jp
je
sub
adc
mov
jge
movsb
mov
movsl
shr
loop
movlps
mov
sahf
pop
mov
add
aad
inc
push
xchg
push
in
in
aaa
xor
repnz
aam
cwtl
mov
xchg
dec
cwtl
out
adc
or
dec
pop
mov
jb
mov
or
inc
lock
shll
out
mov
outsb
addl
mov
addr16
call
test
adc
pop
hlt
jg
mov
pusha
scas
arpl
or
dec
icebp
movsl
adc
inc
mov
out
repz
sti
inc
inc
subl
or
arpl
inc
icebp
sti
cltd
std
and
enter
dec
aam
neg
fstpl
inc
mov
out
dec
and
cwtl
lret
les
mov
imulb
mov
lds
mov
push
push
xchg
int
jno
repz
insb
je
push
jae
adc
jnp
xchg
jle
sub
pop
shrb
push
add
dec
cli
nop
jne,pt
adc
lea
add
movsb
ss
pop
push
stos
std
cmp
imul
add
or
insl
inc
imul
pop
loope
add
cwtl
and
cmpsl
clc
inc
out
mov
inc
mov
test
dec
add
pop
in
in
add
sbb
cmpsb
cmp
das
xor
ja
mov
imul
lret
jp
xor
roll
inc
mov
jne
jmp
lock
test
add
dec
scas
cld
scas
popa
cs
lods
inc
dec
jl
into
clc
xor
sbb
leave
pop
sub
fdivrl
push
and
dec
push
add
xor
pop
pusha
pop
inc
jns
int
stos
dec
cmp
mov
int3
and
lret
cmp
xlat
stos
mov
mov
sub
and
sub
xchg
cli
fnstsw
mov
leave
dec
rcll
add
ljmp
mov
mov
addr16
xor
or
movsb
in
jb
outsb
inc
xchg
pusha
mov
test
inc
test
mov
mov
call
inc
popa
xor
cmp
mov
xor
inc
insl
cs
sbb
mov
loopne
xchg
orl
in
mov
jmp
mov
lahf
sbb
sub
mov
bound
lcall
jnp
mov
dec
out
mov
push
insb
push
cmp
push
jae
add
fnstcw
sub
mov
xlat
fistpl
push
adc
and
add
in
jge
cmc
dec
test
mov
ds
lods
sahf
outsb
shlb
in
mov
fwait
nop
inc
dec
loope
dec
test
in
cmp
pop
or
jbe
popa
ficoml
es
gs
jle
lods
or
sbbb
pop
ficoms
sbb
mov
push
sub
stc
call
fs
ja
inc
cmp
roll
cmp
scas
xchg
lods
ja
loopne
push
pop
push
or
repz
movsl
add
aas
loop
mov
dec
pop
dec
std
adc
and
push
insl
inc
out
sub
mov
mov
add
repnz
mov
pusha
lret
xchg
mov
xor
jbe
jl
movsl
cmpsb
sahf
add
dec
mov
pop
imulb
mov
adcb
outsb
clc
les
xor
lea
mov
mov
pop
fnstcw
es
jne
leave
pop
int
dec
add
movsl
shll
add
ds
and
inc
movsl
les
inc
aas
adc
mov
jg
lds
mov
in
mov
cmp
sahf
stos
cld
dec
mov
push
pop
jo
mov
shrl
ss
mov
inc
pop
mov
aam
pop
mov
inc
jmp
mov
fstpt
test
xchg
ds
mov
push
shr
dec
fisubrs
cwtl
push
scas
cltd
mov
and
mov
inc
cmc
sbbb
out
orb
repz
sbbl
push
mov
sub
les
mov
xchg
jle
ret
pop
cmp
je
ss
stos
sbb
inc
loope
out
cmp
loopne
sbb
xor
pop
or
mov
push
cmp
xchg
nop
sahf
pop
inc
sbb
nop
pop
jle
movsb
mov
aas
lods
stc
out
fidivrl
int
test
mov
std
and
je
pop
pop
adc
jmp
cli
fs
dec
mov
rcrb
inc
sub
cwtl
fdivl
cmp
cld
orl
pop
pop
mov
pop
mov
imul
sub
mov
scas
rclb
rcl
movsb
psllw
pop
cmp
push
fsubs
jmp
jb
imul
fstpl
repnz
loopne
sub
or
mov
insb
outsl
cmc
xchg
jge
dec
jge
incb
xchg
int
xlat
push
repnz
jo
out
jno
cld
lea
loopne
push
mov
ds
loop
leave
cmpsb
mov
inc
test
pop
mov
ret
out
and
pusha
mov
adcb
arpl
and
in
and
in
jbe
mov
push
cmc
cs
and
sahf
push
xor
aam
lea
adc
pushf
jns
mov
mov
test
std
or
xchg
mov
pop
jae
pop
nop
mov
xchg
in
sub
sbb
mov
add
sbb
lea
stc
xchg
xchg
addb
jg
rolb
das
daa
outsb
mov
scas
scas
mov
stos
popf
inc
cs
xchg
jnp
mov
xchg
cmpsb
mov
popa
dec
and
xchg
add
out
cmp
and
js
adc
mov
pop
xchg
sahf
pushf
aam
push
pop
and
mov
call
insl
adc
movsl
sub
lcall
out
mov
clc
push
ljmp
or
pop
cld
movsb
inc
imul
or
xchg
inc
arpl
push
mov
jbe
arpl
sar
insl
arpl
gs
xor
in
xchg
cmp
mov
mov
push
dec
sahf
jmp
cltd
sub
or
jbe
sub
test
jl
sbb
scas
push
orb
lahf
mov
xchg
mov
jge
cmp
or
mov
xor
cltd
adc
cmp
test
orl
dec
xchg
pop
mov
int
pusha
dec
push
mov
popa
sbb
lds
adc
loope
gs
jae
aam
cmc
setae
scas
fwait
mov
stc
rorl
pop
dec
sarl
or
adc
pop
sub
loopne
mov
xchg
sbbb
ret
and
pop
aad
sbb
pop
cmpsl
jbe
sbb
nop
add
jnp
mov
push
inc
xlat
mov
xchg
ficoms
jle
jl
ret
push
mov
inc
mov
loopne
popa
mov
insb
inc
je
shlb
dec
mov
sarl
sub
add
dec
xlat
dec
mov
dec
test
ljmp
sub
dec
les
imulb
add
mov
and
mov
add
adc
cmp
insb
sti
pop
xchg
xor
movsb
stos
dec
fidivl
sbb
xor
popa
xor
adc
inc
push
xchg
pop
adc
aas
dec
dec
sub
cmp
sti
rcrb
xchg
popf
xchg
push
mov
adc
int
lcall
add
shlb
cli
scas
xchg
mov
clc
adc
sbb
xchg
fldenv
in
pop
pop
push
jecxz
aad
xor
xchg
fsubl
iret
jg
mov
aas
xchg
mov
jne
cs
mov
repnz
icebp
in
mov
and
aam
adc
mov
xor
stc
adc
imul
insl
and
jne
pop
stos
and
adc
dec
ds
shrl
pushf
xchg
cltd
mov
mov
movsb
xorl
cltd
add
repz
xchg
mov
hlt
pop
add
test
lret
push
xor
repz
pop
and
test
stos
add
mov
je
inc
xchg
test
nop
aaa
in
push
adc
push
scas
push
jmp
movsl
jnp
cmpsl
cmp
push
mov
adcl
jne
cmpsb
ret
jp
idivl
out
or
dec
xchg
mov
mov
xchg
fidivl
cmp
ret
and
fbld
aad
out
outsb
fcmovne
sub
shrl
fst
aas
inc
inc
and
add
sub
pushf
cmp
aaa
pop
cmp
lods
pop
push
cmp
or
insl
out
mov
jge
adc
and
pop
ja
mov
js
enter
hlt
rcrw
push
test
fisubl
daa
test
testb
mov
loop
dec
orl
outsl
out
insb
add
mov
add
in
mov
in
lock
sbb
jmp
cli
insb
inc
lret
addl
and
push
dec
popa
sub
ljmp
jne
stc
add
pop
or
cmp
xchg
cld
inc
jo
inc
dec
inc
mov
sbb
outsl
cmpsb
incl
push
andb
flds
or
mov
mov
dec
xchg
jecxz
test
aad
mov
mov
xor
fidivl
cwtl
dec
ljmp
cli
mov
sub
popf
roll
shll
pusha
int3
mov
test
jns
out
add
dec
mov
mov
add
jl
aad
mov
jl
mov
lcall
and
jbe
xor
orl
cmc
sbb
sub
cmc
push
xchg
inc
clc
sub
xor
ja
sub
les
mov
push
bound
pop
add
inc
cld
out
in
push
mov
mov
and
clc
roll
fldenv
test
push
pop
pop
and
jns
adc
test
sbbb
push
rcl
push
test
outsl
js
xor
xor
loopne
data16
push
daa
loop
jp
movsb
ljmp
lret
insb
xor
cmp
and
ss
mov
push
lods
fwait
jecxz
sarb
or
dec
mov
add
loopne
add
push
call
out
lcall
scas
cltd
imul
fwait
sub
incb
fldt
inc
lret
mov
sbb
lcall
je
jbe
xor
sub
addl
jl
mov
test
add
aam
jno
pop
mov
dec
dec
or
or
push
mov
dec
int3
sub
jbe
mov
rclb
iret
lock
jno
push
mov
or
pop
stos
les
cmp
cmp
movsb
pop
mov
push
imul
dec
fldl
fsubl
adc
push
stos
rorl
test
jno
repnz
in
sbb
idiv
fsts
lds
jg
pop
sbb
mov
push
outsb
leave
and
sti
and
mov
sbb
daa
pop
dec
fistl
nop
std
ljmp
cld
mov
jb
adc
scas
sub
sub
outsb
jle
ret
inc
mov
xchg
xchg
je
daa
jb
adc
sbb
cmp
jecxz
fldenv
arpl
mov
jns
jecxz
or
adc
inc
add
fs
gs
inc
add
dec
aaa
in
jb
sbb
jne
jmp
fstpt
or
jno
and
sbb
sbb
dec
dec
pushf
movsl
mov
fs
std
xor
fldt
push
push
imul
push
push
inc
push
fsubrl
pop
lods
popf
test
aaa
sbb
loopne
js
out
mov
push
les
movsl
repz
gs
fdivl
stos
popf
and
fiadds
jmp
inc
arpl
fcmovnb
call
xchg
mov
jno
inc
fxch
push
fwait
int
insb
inc
adc
jecxz
adc
cmp
rcll
cmpsb
mov
inc
adc
lcall
clc
xor
cltd
sbb
fwait
mov
hlt
js
insb
cltd
mov
mov
dec
xor
dec
scas
mov
add
hlt
mov
test
arpl
ja
and
or
in
jecxz
inc
xchg
fdivrl
sti
aad
cmp
aad
notl
xchg
xchg
xchg
movsl
aad
sub
mov
cltd
cs
mov
jbe
int3
mov
ret
clc
loop
test
and
leave
inc
ret
xor
pop
mov
icebp
out
cli
ret
mov
lods
push
mov
mov
ja
aad
test
movsl
jbe
xchg
jnp
cmpsb
aad
or
test
xchg
pop
add
mov
aaa
fisubs
call
push
add
test
cmc
adcb
lahf
and
sbb
in
in
nop
cmp
jmp
in
pop
or
stos
arpl
orb
inc
mov
lock
mov
das
stos
leave
lret
imul
cmc
jae
in
jmp
scas
push
ret
scas
adc
inc
dec
ja
xchg
cs
dec
jmp
xor
xor
pop
test
push
inc
rorb
or
xchg
adc
imul
gs
mov
mov
xor
sub
dec
mov
mov
or
inc
stc
std
lahf
call
push
jl
mov
fldt
out
mov
in
fcomip
jg
out
lods
mov
fidivl
lods
leave
inc
into
jne
cmpb
movl
adc
pop
push
pop
mov
sbbb
or
shlb
push
leave
nop
hlt
dec
sub
cmp
out
sbb
mov
pop
movsl
hlt
sti
cmpsb
movsl
mov
cmp
mov
push
fdivrl
dec
test
pop
sbb
je
fdivr
roll
in
jmp
sahf
fadds
adc
xlat
aaa
pop
aas
cli
jnp
stos
mov
lds
std
nop
add
and
xchg
fistl
add
pop
leave
test
or
pop
inc
repnz
nop
out
push
lods
and
add
sbb
adc
cmp
xlat
aas
pusha
xchg
cmpsl
stc
es
inc
jae
mov
adcl
sar
xor
bound
cmp
pop
lret
es
movsb
fcoml
out
jp
pop
sub
or
js
dec
pushf
xlat
or
sub
mov
test
sub
dec
jmp
or
lahf
imul
hlt
icebp
in
jnp
mul
sbb
loope
mov
fs
lahf
or
subb
add
xchg
iret
loop,pt
popf
sbb
xchg
xchg
cmp
test
fsubs
popf
call
ud1
ret
icebp
out
test
mov
roll
fwait
inc
in
lds
scas
push
push
or
xor
jns
ds
js
sbb
dec
mov
call
rol
sub
adcb
adc
cmp
shl
cmp
lahf
mov
add
jmp
dec
stc
pop
dec
icebp
and
push
repnz
arpl
call
ja
mov
xor
aad
xor
stc
stos
lock
push
insl
adcb
inc
sbb
arpl
in
jne
cmp
mov
sahf
aaa
add
mov
leave
dec
ret
shll
scas
mov
inc
jnp
fistpl
sbb
test
mov
pop
gs
pop
ja
outsb
jb
icebp
xchg
outsb
or
aam
push
sub
cmpsl
lahf
popa
and
cwtl
shl
jl
int
icebp
gs
hlt
js
mov
jg
nop
ds
icebp
xor
fst
add
sub
push
fs
xchg
repz
cmp
add
mov
daa
test
mov
lcall
scas
ficoms
das
aam
ror
loope
mov
xchg
adcl
sti
leave
xor
pop
sub
jge
dec
cmp
out
mov
inc
push
xor
xor
sbb
repnz
icebp
decb
lahf
mov
sarb
decl
mov
add
shlb
popa
xchg
fnsave
pusha
dec
repnz
cmpsb
sahf
mov
jns
sbb
test
ds
fs
jo
shrb
movsl
xlat
push
addb
cwtl
jl
xchg
push
or
cmp
lods
outsb
repnz
fisubrs
dec
pusha
fmul
call
es
clc
inc
xor
insl
iret
fisttps
cs
sub
cmp
push
jecxz
push
jnp
or
cmp
lcall
out
out
hlt
jmp
movsl
lret
mov
push
in
fisttps
push
lret
sbb
push
and
popa
int3
imul
fwait
pushf
test
sbbb
movsl
push
cmpsb
sbb
pushf
inc
pop
lret
ljmp
dec
icebp
mov
mov
das
pop
dec
iret
xchg
push
outsl
sub
adc
dec
adc
in
inc
shlb
das
adc
pop
xchg
pop
adc
imul
mov
aad
cwtl
mov
adc
test
jae
adc
or
xchg
mov
mov
xchg
mov
lcall
pop
scas
scas
cmp
pop
mov
cmp
lret
sar
mov
in
mov
xor
movsl
outsl
cli
fstl
add
repnz
shlb
xchg
sbb
sbb
jae
outsb
push
mov
or
mov
repnz
inc
jmp
scas
sbb
and
dec
ljmp
mov
nop
orl
loope
xor
aaa
imul
push
cmp
call
mov
jge
adc
cmp
cld
mov
notl
inc
or
jecxz
mov
adc
insl
test
inc
scas
enter
ja
dec
cli
test
push
sub
pop
mov
js
out
mov
cmp
mov
mov
xor
test
xchg
scas
pop
push
iret
pop
les
or
pushf
add
pop
dec
cli
push
push
loope
arpl
mov
addl
pop
mov
sub
xor
lcall
cld
mov
mov
inc
cmpsb
imul
out
xchg
mov
push
jno
add
push
lea
cwtl
jecxz
add
jmp
in
push
int
and
jle
mov
negb
adc
lds
insb
nop
rorl
dec
push
sbb
dec
mov
pop
xor
mov
jmp
bound
jmp
push
sub
xor
sbb
scas
data16
xor
mov
mov
jmp
lds
fldenv
mov
and
mov
lret
xor
mov
mov
sbb
xor
insb
leave
outsb
or
pop
aad
leave
psubq
mov
dec
jae
lock
or
lea
cmpsb
cmp
or
cli
out
mov
mov
loope
and
jecxz
sarb
in
cli
dec
push
sahf
and
sub
scas
dec
and
xchg
scas
mov
add
xlat
dec
dec
shlb
mull
rcr
pushf
fisubs
mov
cmpsl
std
xchg
out
push
imul
and
mov
sar
scas
sub
fdivl
and
in
notb
aam
aas
xor
jbe
push
push
xor
icebp
sub
jl
xchg
push
add
mov
bound
in
or
fistpl
sub
filds
push
fiadds
push
nop
test
sbbl
in
mov
jb
pop
dec
daa
push
or
xchg
rcrl
mov
push
dec
fucompp
xchg
addr16
adc
insl
ror
pop
push
in
loop
and
repz
add
mov
stos
sub
sbb
scas
leave
stos
les
rcr
add
and
out
iret
mov
popf
cli
stos
sub
xor
push
jb
xchg
orps
les
pop
adc
jecxz
stc
sub
movsl
or
push
pop
lods
mov
stos
repnz
add
fistps
lret
push
inc
fnstenv
sub
xor
std
jbe
int3
roll
lds
inc
roll
out
push
jmp
mov
or
jg
ss
adc
shll
fdivs
sahf
jno
and
aam
cli
mov
and
or
das
add
das
xor
push
add
ja
pop
xor
gs
aas
testb
mov
out
icebp
cmp
shufps
clc
xchg
sti
nop
push
pop
popa
jnp
add
jnp
sbb
sbb
es
push
into
pop
scas
dec
loope
inc
jno
pop
pop
ret
sbb
pop
push
cli
cld
rol
dec
xchg
cmpsl
stc
outsl
in
dec
pop
negb
sub
mov
dec
lret
into
mov
push
pop
xchg
adc
movsbl
rcrl
inc
call
test
or
xor
fsubrl
push
mov
jecxz
cld
in
jo
mov
loop
xchg
dec
mov
ret
sub
xor
xor
ja
jge
in
xchg
sarl
xor
bound
xor
push
aaa
pop
sub
jge
lods
ror
lea
jecxz
cmp
push
out
and
cltd
shrl
adc
xchg
dec
in
lods
pop
daa
xor
mov
mov
arpl
stos
xchg
outsl
cli
pusha
lods
pop
fwait
out
out
mov
cmp
sub
test
jecxz
push
jo
fwait
test
and
sahf
addr16
inc
icebp
push
pop
les
and
inc
into
ja
cmp
lods
dec
adc
lret
pop
jg
and
cmp
out
ror
dec
push
mov
into
mov
stc
icebp
imul
sbb
outsl
push
jp
lahf
mov
jbe
mov
xor
fsts
adc
clc
fs
addl
shlb
ficomps
cmp
ret
xchg
jns
mov
pop
jl
and
mov
mov
sbb
add
mov
test
pop
fbstp
insl
loope
xor
push
xchg
stos
pusha
outsl
xor
jg
aaa
xor
sbb
mov
nop
push
mov
pop
subb
cmpsb
adc
mov
fldl
pop
push
jp
loopne
jo
and
lods
dec
clc
pop
mov
push
mov
imul
test
adc
xor
xor
lcall
fists
outsb
xchg
or
and
int3
orl
and
sub
xor
cld
in
mov
sub
enter
insb
outsl
mov
dec
xchg
rcrl
mov
adc
xor
mov
jl
sbb
jb
cmp
fs
xor
dec
sub
test
mov
dec
decb
mov
mov
pop
pop
sub
jns
bound
int
and
andb
test
push
fists
xor
fs
push
push
dec
mov
sbb
xchg
shl
jns
ja
lret
jno
xchg
push
fwait
ja
inc
stc
cs
and
mov
test
dec
inc
mov
lods
ds
out
and
mov
mov
data16
mov
jg
mov
jns
cmp
test
inc
cmp
push
push
add
pop
xchg
lods
sarb
es
inc
andl
mov
shll
aam
fdivs
xchg
pop
jle
xchg
decl
dec
ffreep
aam
jle
mov
sub
xchg
int
sahf
mov
inc
std
imul
sahf
pop
fsubl
sub
push
arpl
lock
rcrl
imul
mov
lcallw
mov
adc
jmp
cmp
dec
mov
push
scas
mov
ss
cmp
mov
sar
je
mov
imul
adc
fiadds
insb
pop
mov
loopne
pop
pop
imul
push
and
sub
sub
lahf
add
fadds
test
xor
in
mov
inc
fldt
pusha
cltd
addl
sub
jle
cmp
daa
imul
ds
test
mov
in
xor
ss
xchg
mov
cmp
cld
scas
mov
push
or
mov
mov
dec
cmp
mov
inc
push
xchg
mov
sub
fsubp
xchg
ja
subl
stos
test
fidivl
shll
lods
jbe
sbb
inc
fistpll
ficomps
ror
data16
sbb
jb
sub
imul
cmpsl
scas
scas
jnp
dec
fwait
push
aas
or
xlat
clc
imul
pop
in
ret
scas
stc
out
mov
pop
cmpsb
inc
mov
add
pusha
mov
jo
and
mov
movsb
xor
xor
push
push
ljmp
push
aas
push
paddusw
adc
push
mov
mov
add
add
lea
ja
push
pop
iret
mov
push
arpl
stos
jp
mov
sub
stc
movsl
mov
inc
jmp
dec
add
imul
mov
dec
rol
adc
gs
movsl
data16
push
inc
sub
loop
arpl
push
loop
repnz
or
test
xchg
cmp
bound
aas
pop
sarb
dec
mov
sub
int
push
sahf
mov
jo
dec
cmp
js
ds
jecxz
cmp
imul
and
cs
sub
cmp
scas
or
nop
dec
mov
and
arpl
pop
and
inc
dec
and
xchg
outsb
mov
and
mov
insl
mulb
movnti
and
movsl
jl,pt
lods
mov
repnz
in
bound
push
lret
adc
inc
aas
push
mov
lods
in
jo
mov
push
cmpsb
inc
inc
shlb
cmc
push
nop
pusha
dec
pop
lret
cld
cmp
imul
mov
jnp
js
and
adc
fmuls
lcall
or
mov
clc
cltd
mov
in
inc
mov
jns
mov
lcall
adc
adc
fwait
notb
cmp
js
test
mov
add
sbb
jns
xchg
xchg
xchg
xor
sbb
xchg
inc
ss
dec
jbe
shlb
xchg
movsb
test
adc
jnp
fcompl
mov
push
pop
push
pop
ja
xor
imul
mov
xchg
sub
lret
loop
leave
pop
push
mov
fwait
arpl
aas
aam
data16
call
les
inc
xchg
inc
rcll
aad
cwtl
sub
les
stc
shrb
mov
and
inc
mov
cmp
pop
xlat
mov
fsubr
pop
aaa
sbb
clc
outsl
add
mov
sbb
adcl
call
test
out
and
dec
sbbb
jecxz
fnstenv
xor
mov
dec
fs
ljmp
xchg
mov
add
pusha
pop
les
mov
in
push
sbb
outsl
cmpsl
movsl
lcall
jmp
cmpb
cwtl
mull
sbb
inc
mov
rorb
fistps
test
adc
jne
dec
inc
adc
std
popa
and
dec
mov
std
and
test
out
or
and
inc
inc
imul
xchg
or
push
xor
popf
mov
add
mov
cwtl
in
xor
xchg
lods
rorl
jns
nop
xchg
xchg
enter
and
ss
xchg
cs
popa
sbb
jns
or
mov
push
mov
ss
adcb
ja
push
outsb
and
cmpb
outsl
push
roll
lret
or
adc
outsb
adc
pop
stc
leave
push
test
or
sbb
loop
pop
je
or
aad
aad
pop
insl
dec
xor
data16
out
add
fstpt
test
lahf
fildll
push
and
insb
dec
xchg
mov
notb
pop
test
ss
fsubrp
xchg
sub
push
cmpl
jle
sbb
imul
xor
jp
mov
pop
jnp
mov
addr16
jg
lcall
inc
pop
scas
lret
mov
dec
popa
fcmovnbe
xor
je
mov
adc
mov
push
test
sbb
and
imul
inc
fabs
dec
out
mov
sub
fwait
sbb
pushf
shl
push
rclb
cmp
js
push
xchg
push
cmpsl
test
mov
inc
and
mov
popa
into
je
mov
movsl
xor
shll
mov
adc
rclb
in
pusha
pop
mov
pop
sub
xchg
es
xchg
sub
sarb
test
and
lret
ja
cmpsb
pop
stos
inc
mov
xchg
xor
dec
jl
adcl
lcall
push
ds
pop
fbld
jno
adc
jg
std
dec
cs
loope
fisttpl
dec
pop
in
fsubrs
sub
cmp
pop
push
and
movsb
mov
xchg
stc
movsl
subl
scas
add
pop
mov
gs
mov
aam
pop
lds
pop
iret
jbe
shll
jnp
out
and
mov
mov
imul
dec
aad
movsb
push
lcall
mov
cmc
in
mov
dec
dec
inc
sysenter
sbb
sbb
sub
in
xchg
in
popa
je
mov
sub
popa
push
out
jo
call
xor
roll
jns
or
test
pop
andl
cmp
dec
call
pop
jmp
hlt
xor
ja
sti
lret
psrad
ret
lret
and
xor
xorb
pop
jae
and
xor
test
lret
inc
loopne
lods
sbb
push
xchg
into
aaa
push
pop
or
test
negb
adc
mov
adc
sbb
add
mov
mov
and
or
dec
out
call
ror
add
push
ja
jmp
cmpsl
popf
mov
inc
push
movsl
mov
les
pushf
dec
dec
sbb
or
and
cmp
aad
mov
sbb
sub
xchg
addr16
stos
mov
mov
or
repz
loopne
stc
xchg
pop
arpl
lret
inc
add
leave
inc
fadd
lret
lods
jae
pop
mov
jg
cmp
pop
pop
aaa
in
outsl
idivb
mov
cltd
es
push
test
pop
pop
loopne
aas
std
test
xchg
iret
xchg
addr16
jo
shrb
push
aad
sub
inc
notl
dec
push
ds
jp
cmpsb
add
and
dec
enter
dec
icebp
dec
mov
outsb
sbb
sub
imul
adc
in
mov
or
jp
imul
popa
outsb
fnstcw
fmuls
imulb
mov
repz
aam
and
mov
dec
jl
scas
sbb
ds
dec
leave
push
mov
fsubs
xchg
lds
add
insb
ret
mov
cwtl
es
clc
lret
addr16
mov
or
adc
add
test
mov
scas
jle
mov
xchg
xchg
aad
into
leave
push
sbb
and
es
or
or
in
repz
mov
pop
aad
or
mov
or
les
xor
pop
sti
push
mov
mov
outsl
pop
and
pop
int3
cs
sahf
xor
call
sbb
test
out
pop
jmp
popf
add
ja
inc
lret
iret
fbld
mov
inc
ja
cmc
jmp
xor
pop
xchg
mov
push
aaa
xor
ret
into
add
or
lods
cli
fstl
adc
mov
push
jno
scas
scas
jno
je
jecxz
das
data16
mov
ficoms
stc
das
xchg
jg
arpl
dec
and
mov
outsl
cld
push
sti
movsb
jnp
xor
mov
and
push
test
hlt
insl
xchg
sub
cmp
jb
daa
jg
inc
cmc
xchg
ss
repnz
push
adc
add
cmpsl
lahf
cmpb
pusha
popa
xchg
sbbl
lock
mov
outsb
pop
adc
add
pushw
add
xchg
mov
out
mov
sub
adc
rol
mov
repnz
or
cmc
mov
fbstp
push
aaa
daa
insb
push
mov
arpl
sti
in
rcr
xor
cmpb
or
out
add
clc
repnz
movsl
and
lds
xorb
popa
xchg
jne
add
aam
xchg
not
mov
invd
jnp
repz
xor
test
mov
cli
cmpsb
outsb
jnp
movsl
std
loope
fimuls
cmp
fsubs
adc
out
inc
aas
cmp
cld
inc
xor
push
adc
ja
mov
test
in
leave
inc
jp
push
iret
test
add
pop
inc
roll
cmp
pushf
add
jmp
sarl
out
xor
push
push
fucomip
xor
dec
add
outsb
js
adc
sbb
repz
add
and
mov
addb
lcall
inc
mov
test
imul
out
imulb
pushl
repz
mov
or
and
fucomi
outsb
je
mov
shlb
xchg
pusha
stos
jmp
mov
xlat
add
push
inc
jns
jns
scas
lcall
lock
mov
popf
or
lcall
fcomps
jae
nop
cmp
xchg
daa
sbb
mov
add
js
mov
sti
fidivrs
mov
xlat
push
inc
adc
cmp
adcl
fbld
dec
test
add
dec
pop
add
rol
sbbb
lret
adc
dec
push
test
xor
adc
xchg
xor
lds
dec
jp
rcll
jle
cld
jo
add
mov
mov
dec
and
inc
sbb
xchg
cmp
sbb
stos
into
cs
cli
sub
inc
adc
ret
xchg
loop
jbe
mov
dec
jae
cwtl
into
sub
xchg
xor
xor
pop
mov
cmpsl
dec
mov
inc
mov
push
les
data16
sbb
jge
sub
adc
inc
rdmsr
pop
out
insb
push
push
mov
test
ficomps
jg
aaa
and
cmc
repnz
push
sbb
lea
mov
aam
daa
push
das
inc
iret
dec
add
out
in
imul
mov
or
popl
div
movsb
cmp
sar
pop
adc
cmpsl
mov
xchg
adc
or
inc
push
or
inc
mov
xchg
adc
ss
outsb
in
imul
movsb
icebp
push
repz
mov
or
in
dec
lret
ret
aam
decb
addr16
loope
mov
ljmp
ud0
int
idivl
xchg
and
hlt
mov
cltd
adc
repz
mov
push
xorb
mov
jl
clc
cmpb
repz
jae
mov
jmp
hlt
and
arpl
lret
mov
sti
sub
jnp
ret
jne
mov
rolb
pop
add
aaa
decl
out
push
inc
hlt
les
fucomp
pop
jae
pusha
xchg
enter
fwait
pop
jns
hlt
xchg
stc
jns
ss
aam
sbb
out
test
ffreep
lea
xor
xchg
aad
fcmovu
cmp
cmpsl
jle
or
or
mov
pop
movl
ds
push
gs
push
pop
push
mov
cli
inc
sub
into
aas
add
and
mov
scas
scas
orb
or
insl
push
rcrl
xchg
inc
adc
fbld
push
sub
adc
imul
fidivs
ret
dec
xchg
mov
fwait
xor
vmread
mov
iret
orl
xchg
popa
adc
cli
mov
or
inc
push
loope
xchg
arpl
ja
sbb
xlat
add
push
or
mov
push
popa
std
ss
aaa
jge
addr16
cmpsl
int
dec
or
mov
or
pusha
mov
and
in
inc
xor
adc
mov
dec
xchg
loope
sbb
cld
cmpb
ja
lock
lret
mov
xchg
lds
dec
jg
jno
dec
lock
sub
push
xlat
in
aam
mov
shr
fsubs
int3
sahf
xor
test
pop
cltd
rcll
out
push
in
fwait
inc
dec
inc
mov
pop
lret
xadd
xlat
test
fcomps
sbb
imul
std
hlt
std
mov
xor
iret
inc
les
aaa
popf
pop
in
lret
jno
daa
xchg
or
sbb
xchg
lods
lds
sub
arpl
and
sbb
xchg
daa
jmp
roll
mov
push
dec
std
and
lret
pushf
pop
jae
cmp
push
lock
addr16
add
ss
fcomp
rcrb
cmpb
push
ret
cli
ss
xchg
xor
lods
inc
std
mov
arpl
add
pop
notb
sub
stc
push
adc
mov
and
fists
or
sub
jmp
sub
cmp
subl
and
js
and
and
lcall
add
mov
jns
faddl
push
leave
ret
js
rorb
adc
sbb
adc
mov
pop
xor
jle
inc
pop
xor
shlb
jmp
sbb
mov
xlat
cmp
outsl
push
xor
cmp
fsub
inc
pop
mov
in
xor
and
inc
adc
daa
stos
jb
mov
inc
outsl
and
jno
xchg
insb
mov
movsl
sub
aas
jecxz
cmpsb
xchg
addl
insb
fdivs
aaa
ss
cmpsl
aas
add
jne
jg
jns
aaa
sub
xlat
call
xor
xor
test
mov
cli
jbe
paddd
hlt
jae
pop
loop
mov
adc
inc
cmp
sbb
mov
sbb
mov
push
pop
xor
repnz
mov
xlat
imul
fcmovnbe
cld
sub
ljmp
call
enter
repz
jmp
cmc
push
jne
int
xor
movsl
xorl
test
cmc
pop
xchg
loop
pop
jp
jecxz
data16
fisubl
jb
or
mov
mov
in
scas
add
sub
xor
cs
push
or
cld
sbb
lea
lea
xor
arpl
leave
dec
js
jg
sarl
jae
lahf
push
scas
mov
mov
ja
add
mov
lods
cmpsl
leave
mov
jle
jp
adc
cwtl
and
repnz
or
sub
sbb
loopne
xor
mov
jae
fldt
popaw
sub
sbb
push
pop
mov
dec
aas
or
push
pop
dec
mov
push
loopne
aam
cmpsl
mov
cs
fmul
mov
sub
stos
dec
jae
sar
dec
inc
or
add
inc
and
pushf
gs
dec
daa
jne
xchg
and
inc
movsb
jne
mov
and
jg
cmp
decl
vmovdqu
imul
out
inc
test
push
xor
cs
adc
mov
cltd
repz
jmp
je
add
adc
and
iret
pushf
pop
or
cmp
adc
add
and
mov
lahf
cmp
mov
pop
stos
sbb
into
xor
lods
mov
pushf
push
stos
cmp
jmp
cmpsb
adc
stos
xor
xchg
mov
call
arpl
add
inc
push
ret
cmp
ret
cmpsl
nop
jo
xorb
xlat
or
xor
xchg
cmp
sub
mov
or
push
fstpl
mov
sbb
xchg
mov
cmp
xor
cmpsl
repnz
fstp
xor
pusha
xor
xchg
daa
jnp
fdivs
inc
dec
and
push
sbb
jae
and
jae
in
outsl
loope
jle
adc
mov
dec
push
adc
aad
pop
clc
lcall
inc
in
fwait
and
je
dec
in
pop
mov
sti
movsl
jecxz
stos
cmc
mov
lds
mov
push
adc
imul
adc
addr16
jae
jbe
mov
arpl
movsb
pop
dec
fs
adc
out
jns
dec
and
add
lock
pop
push
xor
inc
dec
sbb
or
andb
inc
mov
les
add
aam
xor
fidivl
incl
adcl
jg
mov
mov
add
xchg
mov
es
cltd
mov
mov
cs
repz
insb
movsb
lret
sbb
mov
sub
loop
xchg
outsb
push
mov
and
mov
in
hlt
mov
sahf
in
jbe
mov
jae
push
mov
and
popf
outsb
aas
scas
mov
xchg
fdivrl
aaa
in
call
fisttps
adc
or
cmp
adc
mov
cmp
enter
adcb
adc
xchg
push
outsb
cmpsl
xchg
lahf
pop
and
sbb
pop
lahf
mov
or
test
orl
aas
call
sub
shr
outsb
lods
movsl
je
loopne
roll
cmp
scas
mov
jle
insl
xchg
test
mov
xchg
dec
dec
sar
mov
inc
mov
inc
adc
push
rcrb
test
adc
or
outsl
test
arpl
mov
sbbl
mov
cld
cmpsb
mov
out
push
and
sbb
loope
imul
scas
inc
sub
out
and
sub
sbb
jecxz
dec
xchg
add
sbb
xlat
jmp
incl
mov
jbe
into
pop
in
mov
push
scas
adc
sbb
add
cmc
pop
insb
cli
fmuls
xchg
enter
js
xor
sub
bnd
jbe
in
scas
pop
mov
inc
sub
aam
and
mov
leave
jnp
mov
xlat
xchg
out
popf
xchg
repz
mov
cmp
test
int
push
mov
xchg
jo
hlt
fsubrs
imul
mov
subl
stc
hlt
std
cmp
fwait
test
repnz
mov
and
loope
cli
xchg
cmp
imul
cmp
jns
fstpt
js
push
pop
inc
cmp
push
ljmp
xor
cld
or
daa
je
pusha
mov
inc
jo
dec
clc
dec
push
loope
les
adc
sub
fbstp
mov
and
test
lods
test
sti
push
xor
dec
bound
add
pop
ja
mov
sbb
mov
nop
shrb
pop
xor
mov
xor
mov
outsb
add
dec
aam
sub
stos
stos
push
cwtl
mov
fisttpl
fcomip
outsb
xor
sub
dec
repz
mov
int3
mov
shl
inc
orl
add
cs
mov
jo
lods
or
out
rol
cmp
and
lea
mov
test
push
and
adc
xchg
push
decl
jb
fldcw
out
aas
push
mov
cmp
cmpsb
addb
daa
es
sub
pop
lret
mov
mov
call
stos
popa
sbb
mov
std
xchg
inc
out
in
inc
push
jne
cmpsb
push
mov
push
dec
ret
sti
xor
push
xlat
rol
cbtw
test
repz
mov
or
ret
cmp
adc
cli
das
jb
sub
iret
int3
adc
jmp
xor
mov
arpl
cmp
mov
call
sbb
adc
in
test
jnp
jp
cld
or
mov
daa
aam
xchg
dec
outsb
cs
xchg
inc
repnz
push
cmp
mov
nop
jne
xchg
and
pop
icebp
pushf
or
shrb
mov
push
gs
add
add
jl
das
fimuls
pop
pushf
jl
xlat
inc
int
xor
loopne
cli
pop
lea
add
mov
inc
or
xchg
fstl
aaa
sbb
dec
xor
cmc
das
pop
xor
ds
jno
mov
lds
sbb
lock
xchg
out
push
out
xchg
lock
icebp
int
imul
sbb
pop
cli
cmpsb
mov
xchg
xchg
mov
sub
cmp
lahf
jle
movsl
imul
rclb
and
ret
std
add
mov
ror
push
adc
pop
and
mov
or
jmp
sub
cmpsl
inc
out
out
scas
lods
in
mov
cltd
and
sbb
aam
roll
jb
cmpsb
jno
sahf
push
aas
movsl
in
ficoms
xchg
xor
test
rolb
mov
add
push
hlt
cmp
jbe
adc
jno
or
dec
or
xor
jp
cmp
dec
les
lock
xor
aad
pop
jae
call
jl
into
mov
xchg
xchg
ja
add
mov
ret
cmpsl
ret
xchg
gs
sub
js
xchg
loope
aas
cwtl
or
push
pop
add
pusha
hlt
adc
fdivrp
loope
dec
dec
adc
in
rcll
ljmp
xor
into
xor
or
mov
jp
in
mov
andb
cltd
ss
dec
popa
js
fs
and
insb
sub
push
sti
xchg
mov
cwtl
imul
add
mov
jae
ret
loop
jl
lods
cmp
pop
mov
les
int
movsb
or
mov
subb
push
fisubs
push
or
add
mov
movsb
shlb
orb
jl
fistl
cwtl
pop
mov
xor
in
mov
add
mov
and
push
adc
lahf
daa
aad
sbb
add
bswap
rol
lea
dec
int3
testb
inc
das
lret
add
jae
cli
mov
ficompl
mov
mov
cmp
outsl
loopne
stos
imul
cli
adc
movntps
push
jl
iret
and
adc
daa
out
mov
fcmovnbe
mov
leave
mov
adc
js
daa
jmp
mov
mov
mov
ret
or
xchg
ret
jmp
test
pop
mov
andl
sub
fsubp
fsub
push
mov
mov
aas
fadds
xchg
fwait
push
cli
outsl
neg
ss
mov
sahf
sub
and
icebp
cmp
push
fwait
leave
jp
inc
jecxz
nop
fdivrl
sar
mov
push
outsl
xor
mov
jecxz
popf
sub
out
lds
adc
andb
push
sub
mov
cmp
inc
push
sbb
in
lcall
jecxz
sub
cltd
mov
xor
shlb
jnp
add
pop
fcomp
xor
gs
mov
loopne
sbb
mov
int
sub
cmp
push
pop
inc
cli
fnsave
jle
pop
jbe
jg
inc
jno
shlb
or
and
mov
add
or
sbb
arpl
stos
jne
and
mov
popa
mov
cmp
in
xchg
popf
loopne
adc
pop
and
cs
push
push
sbb
cmp
jmp
jae
dec
das
sub
enter
jge
cmp
push
arpl
lcall
push
les
int3
xchg
sti
sbb
lret
aam
or
aad
addr16
mov
adc
and
call
push
test
mov
loop
fs
dec
cli
stos
pmulhuw
mov
imul
and
stc
pop
inc
xor
sbb
test
xchg
sub
rclb
dec
scas
fucomp
push
sub
daa
loopne
adc
in
or
mov
cmc
pop
jb
cwtl
jno
inc
xchg
push
push
xlat
popf
rolb
ss
sbb
dec
xchg
andb
dec
mov
push
jo
out
mov
in
mov
out
movsb
dec
fs
pop
xor
xchg
sub
or
xor
test
push
and
je
nop
stos
push
in
out
add
sub
jnp
in
dec
lahf
cld
lret
and
sub
jmp
loope
mov
mov
adc
sbb
inc
inc
adc
inc
push
push
lahf
mov
add
fidivl
std
inc
pop
mov
push
movsl
es
stos
maxps
adc
dec
sub
call
and
ss
imul
daa
sbb
cwtl
or
or
lahf
inc
add
sub
aas
push
push
test
mov
push
or
cmpsl
push
sbbb
inc
dec
ja
dec
sub
aad
or
xchg
test
mov
jnp
jae
xchg
sahf
push
adc
and
scas
adc
lods
adc
cmpb
ret
pop
push
push
ret
and
fisttpll
pop
sbb
jne
cmp
aas
test
push
repnz
aaa
ret
sahf
jno
dec
and
inc
pusha
ret
cmp
aad
stos
pop
repnz
cli
xorl
xchg
cld
cmp
rcrl
jecxz
or
cmp
jl
fists
dec
test
pushf
arpl
pop
ljmp
das
xor
mov
arpl
inc
pop
imul
ss
test
dec
jp
push
loopne
mov
sbb
inc
fcmovbe
lret
adc
pop
out
cmc
adc
push
int
inc
adc
mov
cmpsl
iret
mov
popa
jae
loopne
sbb
jb
and
hlt
xchg
xchg
pop
xchg
dec
cwtl
xchg
imulb
rcl
out
ss
jmp
push
iret
popa
push
aam
loope
movsb
movsl
and
add
jns
arpl
lds
stc
lret
mov
jnp
les
jl
xchg
jl
test
lock
push
aaa
in
xchg
cwtl
sub
ret
adc
idivl
cmc
push
or
mov
cs
bound
adc
fdiv
or
cmp
out
jecxz
mov
or
ret
push
in
hlt
ficompl
and
mov
mov
mov
and
in
data16
dec
enter
inc
cmp
sar
jno
adc
cmp
inc
nop
cmp
rcrb
mov
xchg
xlat
sub
adc
sti
outsb
data16
or
xlat
fidivrl
fidivrs
add
mov
shl
in
jbe
adcb
orb
xchg
mov
jnp
xor
stos
cmpsl
push
cmp
adc
pop
arpl
pop
wrmsr
and
ret
mov
pop
repz
mov
jmp
pushf
movsb
cmc
dec
pusha
mov
sbb
cmpsb
lds
gs
sbb
es
xor
mov
inc
xchg
loopne
push
adc
add
push
push
xchg
jbe
loopne
mov
jbe
add
jmp
sub
ds
cmp
and
dec
dec
xchg
or
pop
fnstcw
ds
push
int
lods
cmpl
xor
push
lods
sub
dec
test
or
pushf
ja
and
xchg
and
xor
std
aas
scas
dec
pusha
call
inc
fwait
ljmp
lret
mov
sub
insl
adc
jbe
xchg
out
mov
add
cmpsl
lcall
call
pushf
jnp
sub
jo
mov
and
nop
idivb
inc
popa
jmp
lahf
stc
sub
lods
jnp
or
pop
cmpl
das
das
mov
mov
daa
in
testb
in
push
add
loop
push
test
pop
aad
sub
adc
push
orb
inc
xchg
aam
mov
push
cmp
push
and
pop
jbe
add
lahf
xor
in
or
cmpsl
jne
cmp
mov
cmp
dec
mov
xor
mov
std
div
fwait
mov
cwtl
jno
push
mov
mov
repnz
daa
fstp
cmp
inc
ss
dec
inc
sbb
mov
ret
cmp
pop
adc
or
xchg
cmpsl
mov
and
repnz
test
mov
sbb
cli
and
ds
push
or
mov
jb
xchg
xchg
leave
in
cld
pop
insl
inc
lods
mov
lret
cmpsb
jns
aaa
xchg
push
in
xor
push
cmpsl
pop
dec
push
mov
xor
insb
cmpsb
xor
setge
xlat
xchg
cmc
xchg
sbb
bnd
xchg
pop
and
into
mov
imul
pop
fwait
imul
push
lods
xchg
cli
push
jmp
sub
push
xlat
adcb
scas
cmp
dec
lahf
pop
nop
xchg
les
insb
js
push
pop
lret
gs
xchg
sub
loopne
outsb
mov
mov
cmpl
jmp
dec
cmp
adc
stos
cmp
repz
inc
je
xchg
xor
mov
in
and
sub
out
sub
push
loope
rcrl
lret
nop
sbbb
cmp
out
jo
xchg
mov
and
loopne
in
lret
or
push
xchg
rcr
fisubrs
pop
xchg
rorl
lahf
test
fidivrs
loope,pt
std
in
shlb
in
sub
mov
xchg
jo
mov
cwtl
fnstenv
xchg
jmp
test
lret
lds
jl
fwait
insb
and
aad
iret
push
inc
outsb
les
mov
jno
mov
lea
sbb
jns
shrb
bnd
loopne
lret
add
insl
bound
rorb
pop
mov
or
pusha
add
aaa
push
mov
std
sub
int
arpl
cmp
das
adc
movd
jbe
scas
or
int
lea
xchg
xchg
cmp
mull
mov
dec
hlt
rclb
fwait
inc
movsl
pushf
pop
lods
push
mov
inc
lcall
fiadds
fcoml
fisubrs
aas
lds
inc
scas
mov
je
dec
pusha
fnstcw
loope
jl
add
add
leave
repz
inc
data16
jbe
mov
dec
xor
fisubs
cmc
xor
jmp
push
pop
bound
scas
xchg
ret
push
xchg
mov
mov
jp
cmp
rcll
dec
xchg
pop
aas
es
rclb
int
repz
nop
dec
icebp
sahf
mov
mov
cmp
repz
adc
inc
sub
insl
lret
jp
push
pop
push
roll
je
xchg
mov
xchg
push
daa
cmp
jb
inc
mov
xor
or
jae
ret
in
push
xchg
push
pop
je
or
fdivrp
add
inc
movsl
mov
repz
or
pop
mov
dec
push
mov
testb
jp
dec
push
ss
jecxz
inc
cmpsb
pop
insl
in
pop
and
stc
dec
nop
sub
imulb
ljmp
xor
and
out
pop
test
lods
lret
out
cmp
sarb
xor
lea
sbb
mov
or
lcall
and
xchg
stc
mov
mov
lret
xchg
adc
pop
push
add
inc
hlt
clc
idivl
push
mov
mov
xchg
fwait
add
cmc
ret
dec
jge
mov
xor
in
xchg
std
inc
add
cmp
pop
fidivs
dec
dec
hlt
xor
aam
ret
insb
ret
int3
hlt
pop
mov
cltd
push
outsl
xchg
addl
repnz
sarl
mov
fistpl
int
jb
pushf
jb
cmpsb
mov
xor
ret
frstpm(287
leave
jp
ret
jle
in
xchg
jnp,pn
ret
xor
in
out
dec
out
mov
add
ret
jp
push
ljmp
idivb
shrb
mov
fnsave
sahf
pop
cli
push
push
jbe
pop
fxam
sbb
add
mulb
out
jns
fiadds
test
pop
aam
loop
mov
mov
repnz
dec
mov
dec
leave
sub
adc
push
in
add
cmp
insb
add
or
sub
push
cmp
iret
xchg
sub
inc
or
pop
fidivl
ret
iret
popf
cwtl
rclb
push
icebp
lock
mov
imull
add
out
sub
mov
adc
sbb
ret
gs
ljmp
or
in
cs
ret
imul
pop
jle
lock
loopne
int3
pop
push
push
inc
pop
cmc
lods
pushf
add
or
push
mov
xchg
jge
mov
add
push
sarl
loop
icebp
pop
outsb
mov
movsl
mov
iret
shll
pusha
add
lcall
mov
jecxz
test
jne
ss
mov
mov
mov
pop
fcompl
xchg
arpl
daa
push
sbb
shr
mov
pop
inc
jo
imulb
cld
ret
push
and
sbb
pop
add
sub
inc
dec
ret
loope
lcall
adc
adc
add
or
pop
movl
mov
js
jo
jg
xor
stos
stos
stos
sahf
add
incb
jl
cmp
push
inc
xor
test
pop
movsl
mov
sti
xchg
ret
mov
je
in
in
pop
lcall
imul
push
decl
mov
mov
adc
in
mov
cmp
cmp
jae
and
pop
test
rorb
and
hlt
add
xor
xchg
lcall
xor
mov
movsl
mov
pusha
and
out
xor
stos
inc
in
mov
sbb
jge
push
mov
shlb
jge
pop
adc
aas
cmp
xchg
inc
adc
imull
pop
lcall
cmp
push
xor
jge
xchg
stos
jle
ret
repnz
rorl
and
xchg
pop
test
jl
inc
aas
vmovq
in
lods
addb
hlt
scas
add
testb
or
push
sbb
lods
dec
xchg
testb
pop
and
in
and
cmp
sbb
jmp
xchg
mov
add
push
inc
cmp
inc
cmp
ljmp
sbb
xlat
lahf
cmp
out
push
jecxz
sub
es
mov
dec
lcall
jge
pop
shrb
mov
and
jne
mov
mov
cmp
scas
addl
cmp
lock
iret
test
movsl
mov
and
not
and
pop
in
jle
imulb
decl
mov
lds
pop
or
mov
inc
gs
mov
push
mov
add
inc
xchg
mov
gs
leave
loope
inc
sbb
pop
mov
adc
repz
push
cmpsl
inc
add
sbb
das
ja
sarb
sbb
pop
xor
or
mov
in
push
add
pop
iret
dec
fldcw
pop
nop
and
cmp
pop
add
aas
clc
mov
negl
lcall
add
cmpsb
stos
popf
mov
and
bound
test
and
fiaddl
cmp
into
or
enter
lcall
adc
cmpb
push
xchg
cmp
cs
pop
mov
jmp
mov
and
jb
sub
lea
cmp
fistpll
push
call
cmp
aaa
xchg
sub
add
vpinsrd
mov
adc
sti
stos
and
push
pop
leave
fwait
push
insb
dec
nop
pushf
popa
xchg
adc
push
pop
pusha
jecxz
push
cmp
sub
int3
int3
test
mov
roll
test
sub
or
mov
xchg
xchg
and
jnp
addb
jg
movsb
ret
shlb
xchg
iret
inc
xor
mov
ljmp
sahf
in
jo
gs
mov
test
aaa
adc
inc
lods
lods
xchg
fldt
pop
xchg
rep
repz
mov
fisubs
or
fmul
or
inc
xor
test
shrb
bound
sub
mov
stos
push
fistps
sub
outsl
jbe
cmp
out
xor
and
sahf
sahf
push
mov
adc
add
sub
out
out
cs
push
xchg
mov
xchg
pushf
xor
jnp
popa
jae
fisubl
mov
icebp
mov
es
and
cmp
inc
aas
push
dec
and
sbb
mov
push
jle
dec
roll
fistpll
sub
cmc
out
gs
je
push
test
adc
mov
dec
cmp
test
add
push
mov
inc
out
mov
push
mov
dec
and
stos
xlat
daa
or
cwtl
ret
lds
ret
push
in
add
test
bound
popf
subl
sub
jge
mov
mov
pop
icebp
clc
std
bound
std
and
inc
and
xchg
iret
jl
mov
es
xor
test
sub
mov
push
frstor
push
mov
test
jne
ret
filds
sbb
icebp
mov
filds
cmpsl
xchg
inc
jg
ljmp
lahf
or
movl
push
rcll
sbb
pop
ljmp
dec
jle
imul
test
add
pop
dec
mov
xor
int
rcll
fwait
mov
cli
dec
and
sub
xor
sub
bound
dec
mov
shll
jb
mov
popa
out
push
dec
popa
fsts
lret
stos
dec
push
xor
add
pop
cmpsb
in
push
scas
sbbl
mov
mov
sti
hlt
dec
add
orl
idivb
add
xchg
jo
push
sbb
subb
xchg
inc
add
sub
push
sub
mov
out
push
movsl
push
adc
pop
sub
push
xor
jo
sahf
ja
ret
cld
push
je
mov
mov
call
sbb
and
daa
cmpsb
repnz
dec
pusha
insl
jle
mov
jnp
push
test
xor
add
arpl
addr16
adc
or
dec
cltd
xchg
adc
xor
jns
lret
push
lods
movsb
loope
inc
jb
sbb
jbe
ds
notl
test
add
or
outsl
scas
icebp
jp
sub
shll
xchg
add
sbb
jge
sub
mov
ljmp
sbb
mov
fistl
test
dec
mov
cltd
hlt
add
mov
inc
jo
add
xchg
xor
jl
sub
popf
dec
inc
cmp
fdivrl
lcall
scas
mov
gs
leave
ljmp
push
dec
or
xchg
shlb
in
insl
mov
out
hlt
inc
xor
jns
or
push
popf
ds
lods
push
adc
ret
fisttpl
arpl
dec
lahf
dec
fwait
sbb
fadd
or
and
andb
aaa
aam
insb
add
mov
pop
into
jb
scas
jge
cmpsl
push
leave
push
jge
jae
xchg
mov
cltd
sub
sub
push
jl
push
mov
push
sub
xor
sbb
push
rcl
jg
pop
insb
cmpsb
bound
fmuls
mov
mov
imulb
sbb
cltd
loop
scas
fcmovne
mov
fucomip
sub
icebp
std
or
xchg
mov
xor
call
hlt
test
cmp
popa
loopne
cmc
sub
stc
xchg
hlt
imul
add
out
cs
jecxz
je
test
mov
push
sbb
push
xchg
loope
mov
xchg
lcall
push
push
out
ficoms
cltd
and
mov
filds
pop
dec
push
inc
bswap
or
aam
cmp
cli
and
inc
call
pop
inc
inc
int3
push
adc
cmp
cmpsb
mov
hlt
sub
jmp
enter
xchg
lahf
loope
fs
sahf
repz
push
repnz
and
in
popf
and
mov
fcomp
sub
ljmp
in
or
aam
pop
sub
jne
add
addr16
fsubp
repz
mov
push
push
aam
jnp
mov
sbb
jne
sahf
fistpl
loop
in
lea
mov
outsl
loopne
push
sub
sarb
jne
xchg
cmovs
test
or
sbb
daa
inc
mov
pop
pop
ret
xor
mov
cmp
insb
mov
rep
mov
lods
cmpl
push
aad
out
frstor
cmp
push
fs
rorl
mov
mov
lahf
dec
sbb
jb
int3
movsl
inc
sub
pushf
push
push
jne
dec
dec
mov
cwtl
sbb
pusha
and
les
pop
sub
xchg
push
pop
add
cmc
pop
mov
je
mov
inc
das
xor
cltd
adc
inc
loop
test
mov
push
and
sti
dec
dec
scas
call
pusha
sub
sbb
pop
in
mov
mov
shl
out
pusha
pop
mov
bound
xor
cmpsl
push
mov
repnz
int3
add
lock
int3
loopne
pusha
and
mov
shl
fadds
ret
sbb
or
fbstp
push
jo
adc
xchg
sti
cmc
and
adc
mov
in
les
dec
sahf
push
in
dec
inc
adc
push
push
pop
fcmovnb
xlat
push
mov
ret
cld
mov
adc
test
aas
and
jl
mov
sti
je
pop
fcomp
sti
out
out
sub
ficoml
adc
cltd
jl
leave
nop
scas
xor
adc
and
push
adc
push
mov
pop
cmp
sbb
cwtl
push
cld
push
nop
or
pop
sub
xchg
inc
or
mov
icebp
stos
scas
lock
adcb
mov
fsubrl
push
sbb
add
jbe
pop
pop
shl
fsts
es
fcoml
rorl
mov
out
pop
add
push
sub
iret
add
push
rcrl
jecxz
and
mov
jecxz
sbb
cs
mov
sbb
int
sahf
into
fs
popa
lods
jle
xchg
out
aaa
mov
mov
icebp
mov
mov
jno
pop
aam
leave
gs
out
push
loopne
mov
mov
int3
push
stc
jl
mov
mov
int
scas
lret
sbb
lahf
fstpt
sub
dec
or
dec
cmpsb
mov
mov
andb
adc
mov
sub
jbe
pushf
xchg
inc
out
loopne
and
out
inc
fs
nop
cmpsb
inc
incb
fldl
lret
dec
call
push
ds
sbb
rcl
rolb
dec
jle
lret
lods
cltd
and
sub
lahf
add
lock
jge
add
mov
shll
aaa
mov
popf
adcw
cmp
dec
cmp
mov
hlt
gs
pop
js
cs
add
les
test
sub
mov
movsl
mov
rcll
pop
imul
cmp
ret
cmp
push
pop
mov
fs
daa
add
xchg
repnz
cmp
ret
push
arpl
xorl
mov
jle
fstl
int
adc
pop
out
push
or
xchg
in
add
cmp
xlat
sub
sbb
adc
push
cli
dec
fnstenv
xor
pop
push
jmp
cltd
iret
add
cmp
scas
adc
repz
aaa
cmp
fstp
mov
sbb
ds
or
out
xchg
enter
jp
push
mov
cmpl
mov
mov
mov
popf
int
les
pop
jg
dec
xor
adc
ret
xor
jge
push
inc
mov
push
in
jmp
fdivrl
dec
andb
hlt
push
das
aaa
sti
pop
leave
scas
je
dec
pop
push
jo
repnz
daa
pop
mov
jns
mov
inc
sub
mov
or
inc
cmp
mov
pop
insb
arpl
or
fisubrl
cmpsl
adc
fisttpl
dec
cmpsb
mov
push
adc
mov
out
push
sub
sbbb
mov
cmp
imulb
sbb
cli
jae
cs
callw
sub
sbb
inc
sahf
mov
imul
icebp
test
movsb
pushf
sub
xchg
mov
cmp
inc
inc
hlt
dec
jl
dec
mov
mov
jbe
pop
and
cmp
jp
mov
dec
sbb
sbbb
and
inc
insb
jbe
add
xlat
outsl
inc
cmp
mov
cmp
sub
dec
int3
adc
dec
xor
pushf
neg
jo
movl
mov
jl
flds
xchg
int
xor
lea
jl
popf
in
add
jecxz
out
sti
jge
push
stos
rcrl
pushl
shl
sub
mov
mov
mov
into
in
xorb
lock
addl
mov
sub
fdivrl
sub
cli
cmpsl
dec
cmp
and
lock
ss
movsb
stos
daa
arpl
data16
cmp
pop
push
add
test
mov
inc
je
movsl
stc
adc
insl
daa
mov
adc
mov
cmpsb
dec
in
lret
movsl
cmc
fnsave
lods
cmp
repz
fwait
daa
leave
je
sub
loopne
fsub
in
and
sbb
popa
scas
mov
sub
cmp
cmc
ret
out
call
ja
cmp
mov
push
into
or
push
add
or
inc
mov
imul
mov
cmp
push
dec
add
mov
fldcw
pop
test
sbb
xor
mov
mov
ljmp
mov
xor
std
xchg
das
inc
and
mov
sti
lahf
xchg
push
fldl
xchg
pop
adc
stc
fisttps
outsl
sub
xchg
sbb
sub
movsl
dec
hlt
mov
fidivrl
mov
add
aam
adc
or
mov
mov
xor
nop
les
mov
mov
pop
lret
std
cmp
sbbl
imul
in
push
imul
scas
std
and
and
xchg
sbb
xchg
push
imul
insl
sbb
push
and
jno
ja
sbb
in
and
pop
adc
fs
cmc
jbe
out
add
mov
sbb
test
subl
lcall
repz
out
scas
adc
adc
pop
andl
inc
jnp
loopne
loope
cmpsl
lods
enter
push
lock
dec
xor
ja
or
js
leave
rcll
mov
sub
add
sti
scas
mov
aas
into
xor
rcl
clc
inc
addr16
lods
std
movsl
mov
movsl
pop
add
pop
mov
sarl
lcall
insl
test
dec
call
push
aam
add
sbb
push
iret
sub
jl
or
cmp
mov
inc
jno
cs
pop
jae
cmp
jns
test
sub
push
cs
in
fs
inc
pop
leave
ret
jge
mov
adc
fcomp
and
mov
out
sarb
mov
or
movsl
adc
pushf
dec
enter
xor
std
aad
or
loope
pushf
fisubrs
mov
adc
cwtl
stc
test
cwtl
add
test
jecxz
xchg
and
and
lcall
pop
sub
insb
push
or
xor
pusha
test
stc
jl
push
lret
pushl
adc
push
jno
lcall
jge
scas
sbb
inc
in
jbe
daa
aam
pop
cmp
jno
mov
rcrb
icebp
repz
aam
xchg
inc
mov
and
and
jge
push
das
inc
or
cmc
jb
pop
xchg
into
loop
cmp
add
sbb
popf
loope
in
or
test
cmp
clc
inc
into
daa
and
push
xor
out
xchg
sub
xchg
jnp
mov
dec
ja
xchg
rorb
dec
push
cld
movsl
sub
mov
cltd
sahf
sub
fcomip
inc
add
inc
clc
rcll
imul
xchg
mov
adc
aad
cmp
add
je
sub
sub
or
or
iret
stos
push
adc
lods
push
jns
ds
pop
mov
xor
fsubr
outsl
adc
pop
and
fstps
test
pushl
cmp
cmp
outsl
imul
pop
xchg
fidivs
lods
mov
gs
movsl
mov
popf
test
hlt
mov
mov
mov
pop
loopne
dec
into
nop
push
test
call
xchg
js
cltd
stc
xchg
fiaddl
rcll
cld
arpl
jno
rcl
mov
fadds
jl
and
mov
inc
rol
sbbl
jns
sub
xor
data16
mov
mov
std
clc
sub
lea
insl
lods
cmp
xchg
or
pop
mov
iret
fdivl
leave
stc
dec
popa
nop
mov
clc
mov
add
out
mov
mov
movsl
inc
test
cli
add
adc
adc
out
fwait
mov
je
jecxz
and
xor
cmp
xchg
loope
std
out
jmp
or
mov
push
or
outsl
repz
pop
adc
push
test
in
and
sub
outsl
mov
lds
pop
mov
and
fisubs
jle
pop
sub
les
and
jg
outsl
sti
aad
push
mov
pop
scas
cmpl
iret
lea
ss
subl
cmp
andb
mov
push
jae
pushf
jmp
inc
insb
push
adcl
iret
jle
mov
addr16
cmp
xorb
aaa
adc
pop
inc
pop
std
repnz
mov
insl
repnz
mov
imul
test
mov
dec
cmp
jo
je
mov
mov
repz
xchg
add
sbb
sub
mov
and
movsb
lret
cltd
cmp
int3
sbb
add
jnp
xor
or
adc
sub
popl
adc
movsb
add
aam
movsl
arpl
and
mov
jb
data16
add
out
xor
nop
mov
lret
jg
icebp
fisubs
add
xchg
mov
scas
aas
xor
sub
xor
out
jecxz
les
daa
or
orl
add
test
flds
bound
test
jno
mov
insb
mov
mov
mov
pop
sub
push
mov
adc
or
jecxz
push
stos
jge
sub
xor
push
cmp
cmp
repz
stos
rolb
fisubl
push
lds
push
pop
test
gs
inc
jne
sub
ss
movsb
popf
cmp
mov
dec
mov
test
dec
sbb
aam
jnp
push
cld
and
sub
xor
adc
xchg
jae
or
push
fldlg2
mov
aam
jmp
push
lods
fst
jnp
in
jb
daa
test
pop
jg
test
dec
pop
rol
mov
mov
sti
stc
xchg
aam
lcall
push
gs
fstpl
mov
roll
out
aam
dec
cmp
fsubrs
mov
dec
sub
faddp
icebp
mov
inc
rclb
and
cmpsb
and
mov
and
imul
push
xchg
jmp
add
cmpsb
fnsave
out
mov
jno
loop
mov
call
xlat
pop
mov
adc
xor
in
dec
stos
loopne
lods
xchg
aaa
add
sub
dec
cmpl
filds
test
mov
or
and
push
aas
cmp
std
jl
add
fisttps
fsubrs
pop
or
xor
jg
hlt
push
call
fnstsw
in
and
movsb
and
aas
repz
faddl
and
rorb
sub
ljmp
xchg
jle
mov
push
hlt
mov
sub
ss
in
pusha
sub
test
das
mov
cmc
and
sub
insl
inc
jmp
shl
int
imul
sub
jg,pn
cli
mov
mov
int
hlt
mov
mov
mov
mov
adc
fwait
out
or
daa
out
inc
cmpsb
jl
mov
xchg
sub
arpl
add
xchg
push
cmp
nop
pop
mov
sbb
xor
je
out
push
in
add
push
ljmp
movsl
mov
mov
dec
xchg
gs
or
pop
jecxz
rol
push
push
mov
xor
xor
out
shll
push
cld
fisttpll
das
mov
jge
jne
inc
xlat
loop
ja
cs
outsl
insb
movsb
filds
and
rorl
mov
or
negb
sub
xlat
sbb
arpl
jge
sbbl
xchg
pop
ret
adcl
leave
or
das
or
or
pop
sbb
jg
sbb
pop
xchg
bound
mov
mov
in
ljmp
sar
cli
xchg
jp
mov
push
jp
xchg
xor
mov
call
ljmp
lods
sahf
xchg
and
xchg
imul
mov
mov
pop
popa
ljmp
sarl
pop
pop
mov
outsl
in
mov
imul
inc
repz
xchg
xor
test
xor
es
pop
nop
js
inc
mov
fmuls
jb
jmp
fstpl
mov
xchg
mov
popa
into
ret
pushf
cmpsl
mov
pop
jg
or
mov
out
daa
movsl
and
xor
add
repz
es
jae
lods
inc
bound
int3
inc
fsubr
loope
popa
not
icebp
dec
dec
imull
loope
ja
sbb
jl
jne
and
test
pop
mov
or
shll
jns
lock
lcall
adc
pop
fdivrl
cli
mov
cmp
js
jl
ss
adc
xchg
jp
stc
lret
out
fidivrs
mov
mov
int
fucomp
inc
adc
jbe
and
cmp
inc
add
imul
hlt
aam
data16
ret
ror
enter
mov
sahf
fldt
push
ljmp
cltd
jecxz
pop
lret
inc
sbb
cmpsb
pop
inc
jmp
add
xchg
adc
push
mov
je
rclb
cmc
or
je
cmc
sbb
lock
or
stos
rclb
mov
ja
or
mov
dec
or
hlt
leave
mov
mov
mov
scas
cmp
mov
xchg
stc
pop
inc
scas
fnstcw
cltd
pop
add
xchg
movsl
inc
xor
js
pop
inc
inc
dec
aam
mov
mov
xor
add
and
hlt
adc
fnstsw
jae
mov
lret
xor
xchg
xor
adc
adc
aas
push
shll
aas
arpl
adc
enter
dec
ds
in
dec
and
sub
filds
cltd
cwtl
or
les
lea
data16
or
xchg
pusha
or
xchg
roll
jo
sbb
pop
sbbb
push
dec
mov
and
push
std
cmp
inc
loope
out
cmp
push
test
xchg
sbb
and
add
jo
xchg
nop
insb
xchg
adc
loope
fmulp
cs
lret
mov
mov
in
mov
push
push
xchg
or
shlb
jnp
sub
bound
push
cmp
push
xor
rcrb
sahf
pop
dec
in
and
jmp
push
push
std
push
popf
adc
ss
pop
and
ret
cltd
xor
movb
imul
jg
sbb
outsb
pop
popa
js
rcrl
pop
xor
out
adc
xor
push
adc
cmpsb
popf
mov
pop
roll
mov
insl
jae
cmp
push
rorb
call
addl
cli
les
stos
mov
mov
jl
cmpsl
leave
xlat
lods
or
jmp
ss
cmp
out
imul
cmp
lahf
mov
jg
xchg
push
adc
cli
or
push
in
pop
int3
bound
jbe
test
inc
call
mov
cmp
xchg
cmp
faddp
imul
add
imul
push
popa
pop
sti
xlat
fadds
loopne
jno
int3
dec
std
cmp
lds
cmc
sbb
add
push
sub
stos
xor
cmp
lret
and
mov
adc
pop
leave
aam
cmc
clc
xchg
sbb
test
pop
mov
inc
pushf
fisttpll
sbb
mov
push
sbb
push
subl
push
xor
dec
popf
fisubrs
dec
dec
repz
imull
add
outsl
cltd
inc
xchg
imul
mov
rclb
pop
and
out
sub
jne
push
shr
or
jne
sti
mov
pop
mov
or
shrl
iret
jns
sbb
loope
lods
inc
dec
sbb
sub
adc
jbe
icebp
shll
int
or
inc
loope
inc
inc
push
dec
adc
roll
cltd
test
bound
test
mov
fiadds
fwait
rcrb
stos
xorb
stc
popf
bound
sbb
cmpsb
mov
or
es
add
xlat
rcrb
add
je
xor
ja
cli
cmpsb
nop
lahf
sbb
mov
mov
push
inc
shrl
jns
aaa
adc
pop
push
fstps
inc
sbb
movsb
pop
loope
pop
xchg
aaa
mov
hlt
mov
sbb
inc
leave
add
adc
cli
dec
mov
cmpsb
sahf
dec
adc
movsw
int3
inc
push
and
mov
scas
outsl
jecxz
mov
cwtl
mov
ds
dec
add
push
mov
sbb
iret
jns
nop
mov
sti
sbb
dec
out
rcl
mov
mov
mulb
mov
pop
adc
cltd
subb
and
rorl
adc
shl
fsubrp
xor
imul
mov
insb
sub
push
mov
insb
int
out
roll
shlb
sub
roll
loope
push
mov
aad
mov
cltd
mov
into
pop
cmp
xor
mov
lahf
fsubl
inc
or
popa
inc
lcall
lds
push
test
sbb
dec
adc
andl
scas
and
stos
xchg
ret
and
dec
lea
push
inc
repz
cmpsb
jle
push
int3
or
adc
addl
xchg
mov
popf
jne
sub
shl
mov
sbb
pop
sbb
dec
pop
xchg
push
push
mov
xor
mov
inc
sbb
std
dec
out
jb
dec
loope
push
sub
push
push
outsb
pusha
mov
pop
notl
pop
sti
cltd
inc
xchg
jae
mov
sbb
lods
jne,pn
pop
xchg
ljmp
cwtl
hlt
push
sub
jne
in
sub
insl
cltd
push
add
sti
or
inc
shrl
sbbb
int
loop
xor
aaa
decb
sbb
std
jg
pushf
imul
and
sub
or
mov
stos
test
in
sarb
push
lock
jae
pusha
xchg
leave
pushf
jge
addr16
es
pop
daa
mov
lock
ja
push
loope
jno
cmp
dec
aaa
jp
dec
nop
push
popf
lds
bound
gs
cmp
mov
insl
fmull
int3
and
xchg
scas
mov
pushf
dec
mov
aas
mov
jb
iret
xchg
mov
cmp
or
aas
leave
push
fidivl
pop
jne
js
in
jnp
inc
dec
xchg
loopne
dec
addr16
js
fildll
jae
xchg
adc
pusha
pushf
pop
imul
jbe
leave
jo
insl
fisubrl
push
mov
sbb
jns
jbe
pop
inc
dec
cmpps
mov
shrb
arpl
jg
fcom
fbld
pop
arpl
xchg
inc
or
xchg
jbe
push
popa
cmc
je
shll
pusha
adc
out
shll
loop
and
xchg
xchg
and
mov
pop
sub
cmp
push
dec
jnp
jecxz
pop
sub
std
gs
dec
lret
add
push
imulb
jp
cli
les
xchg
push
sbb
push
inc
jg,pt
sahf
rcl
rorb
inc
pop
xchg
insl
cmp
fidivrl
hlt
push
xchg
ds
inc
pusha
or
sbb
rcl
mov
outsb
mov
sub
aas
imul
lcall
add
out
mov
addl
sarb
mov
leave
and
and
add
mov
sbb
fildll
ret
add
call
mov
adc
jmp
lea
dec
std
orl
and
js
jp
cltd
mov
fs
outsb
pop
imul
xor
mov
daa
push
or
sahf
scas
xchg
push
sbb
cmp
js
xchg
jecxz
cli
mov
popf
iret
hlt
cltd
call
xchg
sub
inc
ret
dec
das
into
inc
dec
jl
lret
push
mov
sbb
fstpt
aaa
xor
fldenv
pop
lock
sbb
arpl
jns
jns
int
mov
cltd
mov
mov
xchg
aad
inc
ret
jne
insl
movsb
jbe
cwtl
ja
stos
test
data16
inc
sub
into
mov
and
add
scas
dec
jbe
xor
cmc
add
dec
jge
in
sahf
dec
dec
enter
cmp
adc
aaa
pop
adc
test
fiaddl
cmc
pop
sub
adc
mov
cmp
dec
inc
cli
cwtl
addr16
adc
insb
pop
xor
add
xor
xchg
adc
inc
or
or
pop
outsb
std
mov
jb
loopne
js
push
adc
mov
pop
push
in
jns
lods
ret
inc
push
cmc
jle
cld
jp
test
sbb
icebp
xchg
jecxz
mov
imul
add
and
subl
leave
mov
das
mov
push
mov
lahf
jno
mov
push
adc
xlat
lcall
out
push
mov
idivl
roll
xor
movsl
or
ljmp
cli
cmp
je
dec
or
adc
syscall
adc
adc
rol
add
in
inc
inc
stc
aas
adc
lret
shl
sub
movsl
push
fildll
cmp
mov
int
jb
xlat
sub
mov
call
sub
dec
clc
cld
pop
scas
push
mov
add
shlb
dec
add
jle
jmp
push
fs
jne
xor
jbe
or
clc
decl
das
pop
repnz
and
push
jae
popa
jb
xchg
mov
sub
sub
mov
jp
and
lcall
lds
leave
pop
push
xchg
add
dec
mov
sub
xlat
and
and
cltd
mov
jnp
fcomps
fnstsw
mov
lods
and
jbe
into
and
jnp
js
xor
push
cwtl
fidivrs
scas
sbb
rcrb
ret
sub
fs
in
pusha
xlat
and
adc
int3
add
loop
pop
in
aad
lret
lock
scas
iret
gs
sbb
push
stos
pmuludq
dec
pop
outsb
in
or
mov
cld
cwtl
inc
sub
js
xor
cmp
push
xchg
add
fsubrs
fwait
out
inc
push
fdivrl
push
imul
out
jge
dec
xchg
out
xor
sbbl
xor
push
push
in
repz
mov
push
dec
mov
mov
mov
or
inc
lock
fdivrs
add
cmp
icebp
std
pop
xchg
sahf
pushf
lcall
mov
loope
inc
je
mov
mov
popf
xchg
pop
inc
fs
xor
pop
fldcw
leave
jnp
imul
adc
jle
out
sbb
cmc
mov
pushf
daa
insb
adc
xchg
imul
cmc
leave
test
cmpsb
pop
cmp
stos
cltd
insb
sub
mov
dec
add
mov
jmp
inc
lcall
fisubs
shll
pop
xchg
adc
push
sti
push
imul
loop
clc
mov
and
popf
cmp
rcrb
std
pop
jns
out
or
pop
sbb
mov
popa
mov
movsb
out
test
leave
mov
ficoms
push
cld
dec
xchg
cmp
ss
call
inc
cmp
outsl
ja
adc
mov
push
fdivl
xchg
dec
mov
add
add
inc
mov
inc
pop
push
or
fucomp
cwtl
mov
dec
data16
xor
fmul
mov
dec
pop
xor
jne
fadds
mov
rol
lea
and
je
mov
fmull
mov
pushl
je
mov
mov
ljmp
mov
test
iret
fnstsw
xchg
fwait
jae
xchg
loope
add
loope
das
push
mov
mov
pop
push
sub
cmc
in
mov
insl
jmp
adc
jmp
jp
sti
fcoml
sahf
fcmovu
ret
sbb
mov
rep
jno
jg
push
sbb
sub
shll
mov
inc
xchg
sub
push
ftst
fs
sub
outsb
sahf
cmc
lret
cmp
rol
mul
sub
insl
pop
imul
sbb
test
mov
and
fdivrs
sbb
repz
mov
rcrb
test
movsb
mov
pop
ja
hlt
mov
out
addr16
loop
add
inc
mov
pop
mov
clc
arpl
add
sub
sub
xor
shl
dec
pop
fistl
mov
rorl
jle
leave
lret
pop
cmpsb
sub
and
mov
add
cld
clc
push
or
cli
ljmp
clc
leave
mov
push
pop
or
mov
gs
mov
inc
pop
pop
or
mov
vmread
xchg
mov
nop
dec
sbb
mov
data16
inc
fisubrl
xchg
pop
sbb
add
push
push
mov
out
insl
fs
clc
in
push
repz
jecxz
enter
push
in
or
int
sub
lret
or
pusha
outsl
mov
push
aas
aad
pop
and
mov
cmpb
je
enter
movsl
adc
test
push
mov
lcall
mov
or
rcr
cld
adc
mov
mov
fimuls
cmc
cmp
jb
lods
int
ss
mov
icebp
nop
cmc
inc
jns
popa
xlat
add
dec
inc
pushw
cmpsb
or
fimuls
sub
dec
or
push
inc
or
adc
xlat
out
xor
ror
cli
mov
xor
test
in
mov
rorb
sarb
and
mov
aad
mov
inc
int3
jp
and
cmc
dec
jae
ss
iret
pop
lahf
outsb
shll
mov
pop
and
movsl
mov
cltd
call
xlat
xor
jmp
je
out
push
mov
inc
sbb
inc
fs
mov
ret
xchg
inc
arpl
push
pop
cmpsl
sahf
mov
inc
pop
std
inc
mov
xchg
pushf
add
push
idivb
xchg
imul
bound
data16
sbb
iret
cmpsl
mov
stos
or
xchg
lds
mov
or
in
or
and
pusha
into
scas
sbb
ljmp
jle
mov
dec
lahf
iret
jmp
rcll
or
push
sti
inc
jl
and
inc
ja
jmp
adc
xor
push
inc
mulps
fs
insb
clc
fsts
sbb
sub
insl
into
ret
inc
out
es
cmpb
outsl
lods
enter
push
insb
mov
jnp
inc
or
cwtl
sbb
mov
adc
lcall
imul
sub
push
mov
sbb
or
jo
or
je
mov
sarb
jp
sbb
dec
ficoml
js
inc
xchg
cmp
enter
dec
loop
and
or
mov
mov
insl
xchg
pop
jg
mov
inc
cmp
push
jge
in
add
mov
add
jb
outsb
jle
js
arpl
lret
fldl
pop
push
adc
int3
repnz
and
sbb
movsb
stos
and
push
jno
xchg
addl
fisttps
call
xor
in
push
add
add
pop
xchg
and
fwait
lods
or
lock
movsl
or
push
stos
xlat
stos
inc
inc
mov
cs
daa
fsubrl
bnd
jnp
les
sub
push
mov
ja
fnstenv
lret
aas
xchg
leave
imul
mov
dec
inc
mov
jae
cmp
mov
dec
paddd
sub
add
mov
xchg
lods
dec
cmp
mov
addr16
rolb
cld
movsb
inc
add
jno
adc
cmp
or
push
mov
pop
pop
enter
jecxz
xlat
rcl
sub
or
pop
push
icebp
push
pop
dec
arpl
les
iret
jecxz
sub
lods
test
inc
stc
cmp
push
scas
mov
loope
sub
xor
in
push
ja
nop
aam
sub
dec
and
pop
inc
push
out
arpl
jl
cmp
jae
roll
jo
xchg
aad
movsb
scas
add
jne
cmp
andb
cmpsb
mov
dec
jecxz
loope
scas
mov
mul
mov
push
adc
jp
nop
out
pushf
jmp
cld
movsb
lock
test
pusha
das
add
pop
sub
push
fsubl
and
in
cmp
xchg
lds
arpl
push
bound
imull
push
movsl
mov
push
repz
iret
add
xor
aaa
adc
pmulhuw
sti
test
test
adc
xor
shlb
adc
cwtl
mov
adc
ds
mov
xor
cmc
xor
or
push
ret
into
test
iret
gs
mov
stos
int3
or
push
add
jp
adc
loop,pn
jecxz
jae
int
and
scas
rcrb
sub
aas
push
inc
push
lods
mov
inc
push
lea
mov
add
inc
andl
jbe
pop
enter
shrb
and
dec
hlt
pop
loop
xchg
jecxz
add
add
pop
cmp
dec
mov
and
out
push
ret
xor
push
xchg
and
cltd
scas
push
je
mov
pop
add
push
es
lret
jg
xchg
fstpt
ds
pop
roll
cmpsb
in
mov
pop
mov
out
jecxz
movsl
cli
out
mov
and
sbb
jbe
pop
or
cld
fcmovne
xchg
adc
add
inc
ja
fidivrs
xchg
jmp
push
pop
mov
stos
mov
aad
pusha
push
xor
pop
scas
cld
lcall
xor
push
out
inc
push
xor
adc
insl
lahf
cmp
jnp
aad
pop
scas
jp
push
insl
xor
aaa
inc
icebp
stos
add
and
mov
inc
push
cltd
pop
test
pushf
inc
cltd
movsw
push
lea
popa
adc
aad
push
add
lock
mov
test
or
inc
pop
clc
push
fwait
aas
shll
inc
pushf
lcall
addr16
orl
xor
scas
mov
pushf
adc
pop
jbe
clc
adc
xchg
sub
pushf
insl
sbb
adc
xchg
cmp
push
xor
lcall
mov
xchg
xlat
jg
mov
aaa
cmpsb
xchg
orl
les
jmp
call
xchg
mov
cs
ss
inc
xor
xchg
es
imul
in
sub
dec
scas
mov
addr16
xchg
pop
jns
inc
or
mov
or
mov
fnstsw
es
loopne
inc
pop
test
lods
pop
jge
mov
dec
mov
push
leave
xor
das
push
std
outsb
push
stc
add
cli
mov
jg
mov
sub
add
xchg
outsl
jmp
scas
fcompl
and
ja
scas
mov
stos
or
xchg
imul
filds
dec
sbbl
sub
lods
repz
sub
mov
int3
cwtl
xlat
mov
and
stos
sbb
or
dec
and
mov
int
push
inc
or
add
dec
lret
inc
adc
repz
pop
jb
sbb
push
and
mov
mov
inc
mov
sbb
ret
push
test
rcrb
xor
mov
jo
fwait
int
pop
inc
cmp
jns
jmp
mov
sti
ja
jb
in
jae
frstor
jp
jle
mov
mov
ss
and
xor
push
aam
lds
and
fcoml
pop
cmpsl
and
jle
mov
mov
lret
call
mov
inc
lods
mov
hlt
xor
test
mov
pop
lret
and
sbb
loopne
ja
jl
mov
lea
out
adc
ljmp
sub
adc
xchg
jbe
out
sar
mov
hlt
inc
mov
cmc
pop
xor
push
fucom
sbb
aam
jg
fcmovne
mov
pusha
push
xchg
mov
out
mov
sub
inc
cmc
xor
fisttpll
xor
imul
cmc
mov
into
mov
pop
push
ds
sub
push
pop
sbb
pop
xor
sub
push
imul
push
aas
ja
adc
or
das
cmpsl
popf
fiadds
aaa
fs
sub
inc
outsl
cmpsl
pop
insb
and
icebp
fcoml
adc
or
xchg
scas
sahf
test
lret
mov
mov
mov
out
js
cwtl
cmp
jl
add
mov
inc
les
cmp
stos
daa
fimull
pop
cld
push
dec
shrl
mov
dec
sub
cmpb
adc
xchg
sbb
mov
xor
xchg
mov
mov
shll
sub
rcrb
mov
nop
push
add
sahf
xchg
or
iret
cmp
mov
ret
andl
sub
call
or
add
ja
add
xchg
ret
stos
mov
jae
xchg
push
imul
js
out
mov
jnp
xchg
adc
jg
mov
add
in
shlb
mov
mov
mov
inc
es
push
mov
add
aaa
mov
pop
ret
xchg
jo
repnz
adc
inc
add
xor
adc
mov
out
ret
jb
dec
add
jns
mov
add
and
mov
mov
pavgb
jns
les
lcall
mov
add
xchg
movsb
push
lock
imul
ficompl
mov
test
inc
fdivrl
inc
and
repnz
aas
mov
ljmp
jmp
pop
fs
cld
data16
mov
push
xor
jbe
inc
insl
jns
loope
icebp
inc
cmpsl
testb
push
aad
cmc
jbe
ret
ficomps
inc
mov
mov
pop
cmp
ret
mov
stos
mov
add
popf
mov
push
push
xchg
ret
shll
les
leave
lds
imul
addl
in
dec
xor
add
or
jle
sbb
pushf
add
or
jp
add
subl
aas
mov
lret
movb
mov
push
inc
and
xchg
in
stc
rcl
inc
push
xchg
call
rclb
adc
sub
push
xor
out
pusha
shrb
mov
nop
mov
mov
aas
add
mov
scas
rol
jno
xchg
int3
hlt
sbb
int
push
or
inc
sti
std
lods
icebp
aaa
sub
cmp
or
mov
add
cmp
mov
or
scas
push
gs
inc
ljmp
sub
clc
jnp
inc
xchg
add
leave
xchg
and
mov
pop
xor
sahf
jmp
icebp
xlat
push
jo
lcall
mov
shll
fmul
jmp
lods
jge
xlat
cmc
pop
and
out
or
or
notl
ss
orb
es
or
testl
imul
rcr
rep
imul
inc
push
add
rcrl
int3
loop
enter
xchg
je
xor
dec
pop
testb
mov
filds
pop
test
dec
cmc
ret
mov
fnstcw
sub
nop
iret
jmp
subb
pusha
add
jb
dec
jbe
insb
cmp
stc
xchg
adc
cs
push
xchg
or
jbe
bound
or
in
sub
popf
dec
jp
dec
sub
fimull
cld
lock
pop
xchg
xor
lods
jmp
cmp
sbbl
push
out
xlat
push
add
pop
or
cmp
and
push
repnz
mov
lock
push
dec
pop
loopne
test
mov
aaa
inc
lds
std
ja
inc
movsb
inc
fxtract
mov
add
add
in
and
fdivl
or
hlt
repnz
mov
sbb
jp
or
xlat
addr16
or
popa
arpl
mov
aam
and
aad
jle
aas
pop
mov
loope
insb
stos
adc
ljmp
or
ffree
mov
dec
sti
js
xchg
aad
cmp
cld
int
test
and
rcll
rcrl
loope
xor
lea
push
add
cmp
mov
arpl
adc
test
movsl
lds
jb
pop
cmc
int
lahf
cmp
xchg
std
inc
ljmp
decl
aaa
xor
xchg
mov
sbb
in
pop
sub
mov
imul
ficompl
mov
ret
push
xor
inc
fs
flds
sbb
push
inc
inc
mov
xchg
mov
lds
jecxz
dec
rolb
out
cmpsl
fcoms
aad
mov
pop
bsf
leave
sbb
and
call
andl
mov
insb
cmpsb
mov
lret
cmp
ficoml
xor
mov
push
pop
or
dec
xor
jns
sar
cmc
or
adc
xchg
push
push
sub
pop
mov
popa
xchg
fimuls
xor
mov
mov
mov
xor
leave
loope
or
sub
pushf
iret
clc
jmp
mov
sbb
sub
xchg
push
or
or
iret
cld
push
mov
mov
xchg
or
dec
std
mov
mov
mov
movb
or
pop
mov
mov
jg
cltd
lret
imul
les
xchg
fsubrl
cmp
and
xchg
or
leave
jmp
out
out
jne
stos
in
cld
popf
cld
fwait
dec
pcmpeqd
pop
push
jne
sbb
mov
jnp
fistps
and
adc
mov
repz
mov
xor
mov
divl
and
ljmp
cmp
insb
rcrb
insl
inc
inc
fbld
cmpsl
outsl
rcl
jbe
ss
cmpsb
fsubrp
in
xor
and
jecxz
test
cltd
and
into
dec
js
out
rorb
mov
aad
mov
jg
cmp
fcompl
sbb
mov
xor
into
cld
shl
scas
push
mov
jae
iret
les
add
and
pop
xchg
push
std
inc
or
daa
nop
fsubrs
lcall
mov
inc
pop
out
insl
and
es
add
push
inc
das
mov
sub
mov
mov
lds
adc
and
int
repnz
mov
cmp
jl
inc
out
js
or
xlat
mov
mov
sub
mul
mov
cs
lock
sbb
xlat
bound
outsl
sahf
mov
rol
lret
and
and
add
lds
add
add
scas
xor
xchg
int
mov
mov
lock
jb
or
jns
gs
mov
jge
xor
or
jp
mov
or
rcrl
mov
sbb
jo
hlt
faddl
mov
ret
popa
inc
jl
stos
jnp
lcall
dec
sarl
jp
stos
sub
push
sub
fwait
insb
clc
imul
mov
xchg
adc
xorb
xlat
in
int
dec
jbe
fdivs
jmp
pop
mov
adc
add
mov
xor
adc
xlat
fnstcw
repnz
sbb
fstl
inc
push
test
mov
adc
push
std
push
push
inc
aam
out
add
mov
pop
add
xchg
stos
xor
push
sbb
rolb
mov
pop
push
xchg
aaa
xchg
xchg
xchg
sbb
sub
bound
pop
ret
xchg
pusha
mov
add
inc
push
or
std
js
aas
add
push
mov
pop
mov
jecxz
mov
or
dec
pusha
js
jne
int
dec
or
or
sbb
mov
xchg
or
pushf
stos
mov
cmp
loopne
test
or
pushf
mov
sahf
cmc
or
test
in
pusha
dec
fnsave
movsb
jnp
push
jle
xchg
std
inc
insb
fstpt
pop
loop
xchg
add
mov
lcall
mov
dec
jo
andl
test
pop
adc
pop
add
mov
mov
hlt
lods
add
xchg
out
jge
pop
clc
popf
inc
xchg
and
in
fnstcw
mov
addr16
rolb
call
jnp
cmp
fwait
and
push
pop
bnd
mov
out
add
stos
jns
inc
fdivl
mov
jns
jb
insl
and
data16
test
divb
push
daa
std
mov
pop
push
mov
sub
jnp
or
jge
xchg
jle
cltd
sub
xchg
mov
pop
dec
aad
cwtl
jl
pop
jmp
dec
inc
mov
je
push
sbb
cmp
pop
mov
mov
dec
jnp
xchg
push
fimull
xchg
dec
mov
jp
inc
cmp
pop
fstpl
and
jge
test
dec
ret
ret
fstpl
ficomps
ljmp
xchg
cli
jge
and
jnp
stos
ficomps
xchg
cmp
bswap
inc
and
in
ss
call
jae
iret
mov
dec
enter
or
lods
xor
xor
push
aas
das
sti
mov
maskmovq
xchg
addr16
lret
hlt
mov
test
xchg
push
mov
popa
shr
or
push
inc
xchg
mov
fisubl
aaa
pop
leave
and
scas
loopne
cmp
repz
aaa
test
scas
or
cmp
pop
or
sbb
cmpl
push
ret
or
rorb
jp
xchg
sti
test
push
je
xchg
popf
dec
or
out
mov
aas
pop
mov
ja
icebp
aas
xchg
push
leave
push
lcall
mov
out
mov
or
mov
pop
mov
cmpsl
lcall
clc
dec
cmc
xchg
mov
in
out
xor
ss
aaa
lret
cmp
inc
push
sub
fld
cltd
aaa
cmc
ret
lock
pop
push
push
aam
xchg
mov
sbb
pop
int
xchg
mov
or
fnsave
dec
in
push
fdivrl
stos
sbb
add
push
loop
lcall
mov
pop
adc
sub
aam
ret
sbb
loopne
xchg
imul
out
cmpb
out
insb
mov
pop
out
cmc
or
pop
mov
arpl
nop
sbb
xchg
shlb
imul
xor
push
push
gs
xor
jbe
aaa
add
push
dec
mov
test
fsubrs
aaa
cmpsl
gs
mov
outsl
jl
ljmp
fs
or
and
fstps
inc
push
cs
repnz
dec
and
or
insb
push
repnz
rcrb
push
clc
mov
imul
mov
adc
in
loopne
loopne
in
cmp
ljmp
je
and
xchg
sahf
mov
sbb
xlat
cmp
jnp
push
xchg
sarl
test
and
push
or
mov
lahf
stos
jle
pop
pop
mov
mov
mov
cmc
shrl
mov
ret
lahf
xchg
cmp
mov
in
xor
clc
imul
shll
and
sbb
add
sbb
aaa
push
xorb
dec
cltd
mov
jle
rolb
hlt
out
and
fldt
and
addr16
les
or
mov
pop
bound
pop
pop
mov
movsb
iret
push
cmp
mov
bound
ret
xchg
int
nop
mov
mov
and
xchg
push
popa
mov
or
xor
dec
xchg
addr16
aad
lods
clc
mov
cmp
mov
lret
sahf
enter
fldl
jmp
xchg
pusha
addr16
or
adc
data16
jne
cmp
outsb
aas
xor
test
loope
mov
mov
mov
fiaddl
test
test
ficoml
xchg
sbb
js
cltd
fildll
idivl
jp
mov
popl
jmp
cmp
std
pop
fadd
fdivrs
scas
stos
inc
cli
sub
lds
jne
jg
cmpsb
inc
dec
dec
lcall
scas
and
jb
and
outsl
sub
gs
and
push
les
jmp
imul
addr16
inc
jnp
test
in
adc
mov
test
xchg
mov
dec
xchg
inc
xchg
scas
or
ss
dec
clc
inc
sub
mov
dec
xchg
daa
shlb
inc
decl
adc
test
jmpw
leave
mov
pop
es
pop
or
stc
inc
pushf
jp
fnstenv
les
lahf
faddl
xchg
and
push
or
in
std
jo
xlat
inc
push
adc
in
enter
pop
rcl
les
cmp
jg
or
cwtl
ret
push
xchg
inc
inc
xchg
es
repnz
cmp
and
out
cs
pop
mov
mov
es
pop
loop
mov
std
inc
dec
loopne
ja
lcall
cli
fs
call
ljmp
stos
jbe
ja
cmp
insb
out
ficoml
mov
test
dec
lcall
test
push
sarb
jbe
push
sti
sarb
loope
dec
cmp
sbb
popf
mov
lods
jo
inc
sbb
mov
sub
int
xchg
gs
add
icebp
lret
sahf
in
and
insl
ss
cmp
push
push
mov
mov
mov
pop
call
adc
andl
scas
les
dec
adc
push
cld
cmp
je
jl
ja
filds
sub
data16
lods
pop
adc
in
fmuls
stos
or
movsb
je
popa
dec
iret
jge
push
xor
test
insb
jb
cmp
add
xor
jge
shll
push
dec
loopne
push
mov
rolb
inc
ss
sbb
lods
test
push
imul
sub
in
icebp
inc
mov
dec
rorb
in
ljmp
jmp
xor
je
inc
lahf
sarb
ficomps
jne
gs
sti
outsl
les
lods
mov
jne
mov
xchg
xor
jecxz
xor
mov
pop
inc
add
in
loope
lods
add
add
mov
jae
out
sbb
add
out
adc
mov
lods
ja
insb
jnp
in
mov
ret
hlt
mov
rolb
idivl
xorl
iret
mov
inc
jmp
push
es
int3
mov
mov
fwait
test
pop
inc
dec
push
pop
pushf
inc
cs
pop
gs
sub
push
sbb
jp
icebp
into
sbb
inc
push
mov
mov
add
jo
pushf
lcall
rcrb
cmp
and
adc
data16
ret
inc
mov
mov
cmp
stos
dec
mov
cltd
xor
cltd
pop
rorl
pop
cwtl
mov
jns
mov
push
or
cmp
push
jb
jmp
mov
or
in
lcall
ss
or
xor
jnp
bound
das
sbb
adcb
out
adc
das
add
xor
mull
pop
xor
cmpsb
cmpsl
aad
scas
je
cmpsl
enter
push
sbb
inc
fmuls
lret
call
xchg
jbe
movb
shrl
jmp
jle
aam
xor
adc
xchg
jb
jmp
rcl
dec
cmp
mov
imul
pop
cltd
add
outsb
adc
js
les
shlb
sub
or
push
sub
mov
stc
add
fidivl
add
movsl
lds
in
jg
sti
jmp
pusha
sbb
sub
sti
subl
cmp
or
sbb
jne
push
es
bound
xchg
inc
mov
ret
xlat
jns
mov
mov
icebp
mov
push
pop
fwait
xchg
out
cmp
dec
dec
mov
jns
and
es
sarb
mov
cli
pop
inc
jge
std
inc
std
clc
cmp
or
xlat
imul
sub
aad
dec
mov
outsl
jbe
fsts
insl
inc
aad
pusha
mov
adc
ja
mov
pop
adc
dec
inc
pushf
push
bnd
test
xchg
repz
adc
jbe
or
push
xchg
popf
lock
mov
push
lock
and
nop
sub
xor
les
lods
ret
addr16
and
idivb
mov
or
in
movsb
test
std
hlt
clc
test
outsl
mov
dec
jb
mov
adc
aad
push
jae
cmp
sbb
outsb
cwtl
ja
imul
mov
mov
shl
lock
ljmp
add
fisubl
loopne
mov
inc
rcrl
sub
loope
push
push
pop
xor
ds
dec
dec
ja
das
mov
arpl
xchg
lods
ja
jecxz
or
xor
jae
mov
stos
inc
ret
out
sti
mov
or
faddl
repnz
clc
push
out
aam
cmp
rcrb
fldcw
add
sub
dec
mov
xor
add
in
add
clc
out
jge
call
add
mov
push
scas
pop
mov
outsl
repnz
mov
jo
inc
cs
and
or
push
clc
in
popf
and
mov
mov
rcrl
loopne
xor
lds
mov
test
add
ret
in
push
pop
arpl
cwtl
dec
fldcw
loopne
out
add
cld
rolb
jb
push
repz
lods
scas
pop
data16
sbb
sbb
lahf
xchg
push
mov
or
inc
mov
jns
mov
push
fmuls
xchg
loope
add
lock
xor
jp
jne
push
mov
movsb
push
lahf
scas
sub
repz
dec
hlt
mov
testb
adc
je
fmul
sbb
insl
aam
outsb
out
cli
pop
lcall
aaa
push
cltd
jnp
jnp
ss
sbb
dec
xor
in
lahf
test
orl
push
fstl
cmp
xchg
mov
push
adc
cmpsb
sbb
xor
mov
jmp
mul
orb
test
cmpsl
hlt
jns
cmc
cmp
xchg
jns
cmc
imul
les
or
pop
mov
lods
or
mov
mov
movsb
xchg
mov
and
insl
out
fbstp
and
in
mov
sbb
jge
addr16
cmc
push
je
test
insl
mov
add
xor
xor
mov
out
dec
daa
jge
inc
lods
ret
jns
shll
push
loope
jae
mov
pop
adc
push
insb
xchg
mov
mov
jne
pop
and
adc
push
ds
loop
ljmp
xchg
pusha
cmp
out
addr16
push
sbb
scas
sub
mov
ja
or
and
cmp
repz
dec
ret
aaa
mov
mov
jb
push
and
sbb
xchg
repnz
sbb
push
xchg
sub
in
cld
clc
jle
lahf
adc
ja
cwtl
lahf
xorb
pusha
cmp
sub
xchg
push
inc
lea
or
jnp
mov
cmpsb
pop
testb
sbb
and
sbb
adc
push
icebp
fildll
adc
dec
or
dec
shrb
imull
adc
popf
scas
ret
dec
sbb
frstor
pop
int3
or
jmp
jne
int
push
imul
sti
das
mov
mov
cmp
das
filds
test
push
shrl
sbb
mov
mov
out
xchg
fwait
aad
mov
mov
sbb
lahf
js
or
ret
mov
int
push
dec
arpl
sbb
mov
lock
inc
fstl
fildl
aad
cmp
adc
leave
mov
pop
mov
push
les
test
insb
fmul
pop
add
add
orb
cli
or
push
imul
gs
fwait
sub
stos
or
lds
call
lods
ret
test
dec
loopne
xchg
in
inc
call
mov
dec
inc
xor
xor
idivb
dec
stc
int
pop
or
cmpsl
jbe
fdivs
pushf
ljmp
lret
dec
data16
adc
fcoms
mov
xchg
cmp
cmpsl
adc
sbb
daa
sbb
aad
nop/reserved
or
and
or
jo
push
data16
fadds
ja
sub
mov
rcl
roll
test
sub
sti
fsubrs
scas
mov
inc
jo
clc
sub
cmpsl
sub
dec
cmp
lea
addr16
sbb
aad
push
cmp
dec
jle
les
mov
les
push
pop
movsl
mov
mov
mov
or
and
fsubrs
push
xchg
sarl
rorb
pop
aad
xor
push
outsb
ret
bound
outsl
sub
pop
add
mov
in
add
mov
sbb
jbe
push
pop
and
stos
xchg
xor
lds
pop
sahf
sub
out
roll
push
or
sbb
pusha
stos
popf
insb
sub
testl
cltd
jae
jecxz
and
pop
sub
rcr
insb
jb
mov
jb
outsb
dec
fcomp
or
mov
icebp
mov
add
push
dec
and
push
test
iret
push
lock
or
sub
xchg
mov
jmp
lahf
imull
mov
out
lcall
and
call
outsb
in
out
ret
xchg
xlat
inc
cmpsb
jge
xchg
xchg
ret
and
xchg
stos
jecxz
or
push
mov
adc
fnstenv
mov
insb
fmulp
jmp
cmpsl
or
adc
add
sub
dec
adc
sub
stc
jecxz
jno
or
aam
xchg
pop
or
sbb
repz
aas
negl
adc
out
push
mov
jl
cwtl
scas
imul
mov
mov
gs
mov
and
and
fcoms
xchg
push
out
and
push
pop
and
jmp
cmp
test
call
mov
out
sub
push
shll
jmp
loop
adc
sub
imulb
icebp
sbb
insl
add
ljmp
daa
jp
aad
inc
inc
push
xchg
jne
push
push
add
lods
pusha
xor
int3
xchg
je
je
ficompl
ficomps
inc
das
sub
pop
cmp
pop
fldl
data16
clc
push
insb
gs
add
popa
lret
jns
dec
pop
jmp
call
add
sub
ss
popa
jns
dec
loope
push
jne
shrl
xchg
es
loop
stc
xchg
mov
mov
push
gs
pop
fstl
std
fs
mov
xlat
popa
mov
add
hlt
testb
or
adc
lahf
mov
fists
lret
mov
aam
jb
das
ja
cld
leave
lock
xchg
popa
or
cmp
jl
or
leave
jecxz
mov
jl
and
dec
jbe
inc
xchg
adc
imul
orl
aas
aaa
cli
mov
pop
mov
fcoml
pop
scas
iret
lcall
inc
jb
xlat
cmc
pop
mov
push
inc
mov
fldl
enter
sub
gs
lock
sbb
push
test
xlat
inc
jns
fwait
or
jl
xor
xchg
push
fildll
mov
imul
inc
aam
jl
addb
mov
movsl
cmc
test
xor
pop
cmp
cmp
inc
stos
xor
ds
imul
outsl
mov
loope
loop
rclb
dec
inc
es
add
int
andb
ss
or
out
dec
bound
popa
add
cmp
scas
add
mov
push
jns
or
adc
cltd
xor
mov
lahf
rorb
dec
stos
push
xor
cwtl
into
mov
cmp
adc
dec
sbb
jge
dec
incl
mov
dec
sbb
dec
aad
ljmp
repnz
pop
jns
dec
xchg
outsb
clc
adcb
cmpsb
sub
rorb
into
scas
mov
inc
sbb
outsb
pcmpeqd
addb
dec
fcmovbe
in
or
adc
sbb
fs
dec
mov
dec
jnp
push
lahf
popa
fwait
cmc
xor
lds
into
dec
cmc
ret
jnp
cmpsb
xor
iret
sub
push
cli
mov
push
cmc
pop
or
popf
mov
clc
mov
push
lods
in
jnp
pop
sub
mov
popf
cld
ss
and
mov
push
or
ljmp
sub
cwtl
or
mov
in
orl
jg
movsl
pop
icebp
adc
jno
int3
cmp
lods
daa
icebp
mov
ret
dec
popf
fists
or
push
stc
or
movsl
leave
cmc
filds
fucomi
jne
cmp
pop
and
xchg
pop
sub
ret
xor
xor
imul
or
jp
cmp
je
cmp
mov
ret
cmp
xlat
and
testl
cmp
pop
aas
add
nop
inc
or
ds
xchg
stc
xor
and
data16
jle
jnp,pn
mov
int
pop
adc
jns
stos
xchg
mov
push
inc
mov
out
lret
xchg
scas
mov
inc
stos
jbe
inc
adc
mov
ja
dec
add
jmp
test
cmpb
cmp
mov
sbbl
xchg
dec
inc
test
pusha
cmpsl
mov
and
leave
jnp
add
test
xor
jecxz
jmp
in
lods
cli
cmp
sub
js
fcoml
ud2
test
fdivr
dec
sbb
pop
jae
sbb
mov
mov
mov
mov
jne
mov
and
repnz
mov
push
ja
sbb
jle
std
adc
int
and
mov
insb
pop
add
and
loope
xor
jo
jle
test
push
dec
or
inc
call
pop
popa
jle
pop
std
cmp
out
sti
test
sti
movsl
xlat
add
dec
fs
sub
mov
roll
pop
sub
in
loopne
add
push
movsb
inc
cwtl
sbb
insl
mov
jns
outsl
push
outsl
cmp
mov
cmp
pop
stos
shlb
xor
ret
sub
outsl
sub
xchg
sbb
push
cmpsb
adc
cld
or
bound
push
cmp
pop
nop
nop
stc
jmp
jl
xchg
mov
pushl
and
fnstenv
cmpsl
aaa
xchg
xor
adc
mov
lret
xor
xor
je
fstl
mov
mov
jle
pop
mov
sbb
insb
ficompl
inc
test
push
sub
test
aad
imul
ja
adc
mov
andl
mov
fildll
lds
add
fs
aaa
shrl
cmp
mov
lea
shlb
out
ret
mov
push
jl
inc
mov
les
loopne
jb
clc
pop
xor
out
movsb
out
or
testl
push
xor
mov
xchg
pop
inc
pop
cmpb
ret
xor
adc
out
xchg
pop
mul
jns
loopne
push
mov
add
inc
dec
icebp
stos
aam
iret
fstp
mov
movsb
dec
decb
sub
insb
sarb
cmp
inc
das
mov
add
dec
sub
iret
xchg
pop
xor
in
xor
arpl
cmp
dec
shll
sbb
mov
out
test
mov
iret
fscale
xchg
test
inc
cli
sbb
sbb
ljmp
jge
stos
test
enter
inc
scas
aam
mov
leave
das
dec
das
ror
push
cmpsb
xor
mov
test
cli
jb
stc
dec
testb
nop
sbb
adcb
jae
rorl
lret
dec
sarb
and
dec
xchg
cwtl
pop
mov
icebp
sub
test
fwait
mov
jp
jnp
repz
xor
std
jnp
jno
fcmovnb
insb
shlb
sub
jb
out
imul
mov
pop
insb
inc
mov
cmp
subl
les
adc
lods
pusha
aad
cmp
jge
pushf
and
cltd
fcompl
sbb
mov
or
add
dec
adc
dec
cmpsl
dec
xchg
aad
mov
push
lcall
rorb
cmpsb
inc
loop
or
mov
scas
cmp
in
push
cld
shrl
add
jne
or
aad
std
sbb
mov
mov
add
sbb
xlat
or
mov
dec
or
add
ret
leave
lahf
rcll
lea
test
add
and
push
xor
mov
shll
xlat
sub
in
dec
fidivrs
stc
jle
mov
push
data16
hlt
imul
pmulhuw
mov
ds
dec
repz
dec
jl
jge
and
cmp
xor
lret
cmpsb
adc
inc
cmpsb
inc
insb
push
rolb
jg
outsb
movsl
outsb
jmp
push
jle
popa
pop
jmp
idiv
pop
and
mov
fs
pushf
sub
stc
add
stc
mov
repz
push
add
les
popa
jbe
clc
fxch
pop
xor
imul
add
or
int
lahf
nop
jb
cmc
rclb
cmp
dec
xchg
cmp
enter
mov
loop
incb
js
jg
jb
push
push
rcl
sbb
jo
sbb
xchg
inc
testb
xchg
mov
enter
or
pop
pop
ljmp
cld
pop
subl
sub
jl
sti
fisubrs
mov
pop
insb
add
inc
mov
jecxz
xor
divb
or
push
imulb
or
adc
mov
clc
mov
jge
lcall
dec
stos
and
fs
cltd
push
jle
mov
lods
test
sub
mov
dec
jl
pusha
xor
shlb
mov
dec
jecxz
sbb
popf
mov
jmp
stos
mov
sbb
xchg
mov
xchg
addb
push
jnp
cmp
negb
mov
inc
or
mov
std
cld
rcr
add
lea
loopne
jns
insb
cmpb
imul
lcallw
xchg
add
pop
ret
push
rcrb
dec
iret
int
dec
add
loope
fldpi
fcompp
sbb
adc
jno
dec
lea
ljmp
mov
xchg
shlb
fidivrs
xor
dec
out
mov
inc
jle
mov
clc
push
push
or
add
es
mov
sub
lcall
jmp
xlat
inc
das
mov
mov
dec
push
jecxz
push
push
lock
mov
dec
invd
sbb
ret
shlb
mov
inc
jnp
mov
ret
movb
sahf
push
and
mov
sbb
pop
mov
pop
orl
pop
addr16
jae
lods
sub
xchg
xchg
clc
lcall
imul
or
movsb
in
pop
pushl
imul
fdivs
push
mov
icebp
in
fwait
dec
cli
fildll
or
dec
icebp
xchg
inc
out
dec
cltd
pop
xor
cmc
push
adc
popf
ret
sub
in
mov
ljmp
pushf
xchg
and
lcall
rcll
orb
in
stc
fstl
mov
lods
sub
in
mov
adc
push
mov
jecxz
xchg
jp
pop
and
stos
mov
dec
mov
pusha
fsubrl
mov
idivl
inc
iret
inc
cmp
pushf
jbe
popa
jae
into
insb
das
and
lret
xor
loop
add
add
sub
testb
mov
dec
arpl
sbb
ss
or
cli
div
inc
testb
lahf
out
sub
test
fisttpl
inc
mov
sahf
add
icebp
and
int
dec
sbb
xor
jecxz
cmp
je
pop
inc
mov
sub
sbb
repz
fstpl
shll
jl
and
and
sti
insl
fisttpll
dec
mov
clc
pop
push
sti
add
movsl
push
rorl
pop
dec
mov
popa
sahf
fwait
mov
mov
int3
daa
adcb
xchg
push
xor
repz
sarl
out
jo
and
xchg
shrl
sbb
out
insb
sbb
in
lock
adc
daa
push
pop
lds
cmp
stos
add
cli
fisttpl
fs
sbb
mov
xlat
fsub
jno
push
fsts
lods
xchg
pop
arpl
pop
ljmp
cld
push
cmp
xchg
inc
out
gs
cld
pop
cmpsl
pop
loopne
popf
jne
adc
add
lret
and
adc
cmp
cmp
std
je
push
and
cmp
enter
jl
cwtl
ret
dec
lock
cltd
xchg
in
xchg
push
loop
fdivr
inc
pop
and
bound
test
sbb
movsb
or
fwait
rol
sahf
scas
testb
mov
or
shl
popa
in
mov
imul
jmp
cwtl
xchg
dec
cmpsb
iret
lock
std
pop
fstps
dec
enter
or
xchg
jmp
stc
subl
xchg
cmp
adc
ret
jl
sbb
shrl
lahf
jg
les
mov
mov
cltd
cmp
dec
mov
in
sbb
jo
call
dec
dec
rcll
or
add
mov
dec
mov
out
arpl
xchg
sub
je
dec
adc
divl
mulb
mov
iret
sbb
fmull
sti
popf
loop
xor
adcl
inc
bound
lahf
adc
fmulp
cld
xor
mov
popf
push
icebp
pop
cmp
andb
lods
jl
cmp
popf
mov
jno
xchg
pop
inc
xchg
mov
aas
jb
add
dec
push
dec
pusha
jmp
inc
push
ret
div
js
fsubrl
mov
xchg
or
jbe
mov
dec
daa
les
mov
sbb
or
mov
je
and
xlat
mov
cmp
and
sbb
and
mov
mov
mov
push
cmp
push
ss
jb
adc
cs
add
xchg
mov
push
das
mov
lds
dec
jbe
mov
pop
sbb
adc
icebp
mov
sub
mov
and
cmc
cmp
loopne
loopne
jns
cltd
aaa
inc
bound
das
in
shlb
fiaddl
fisttpll
ja
ss
inc
dec
inc
push
push
or
stos
dec
mov
add
push
lods
pop
adc
and
push
jge
das
xor
pop
mov
in
shl
lcall
inc
andb
sbb
popa
jecxz
and
es
or
push
sbb
movsl
sbb
mov
movb
adc
cld
rol
push
inc
dec
pop
dec
gs
rcr
scas
ret
lds
daa
faddl
jne
pop
inc
clc
push
mov
dec
mov
leave
mov
sub
sub
imul
fcomi
sub
cld
clc
jo
icebp
outsb
rclb
ja
test
inc
cld
bound
cwtl
sub
mov
fstpl
xchg
push
cmp
clc
pop
sbb
sub
sahf
jg
push
mov
push
inc
pop
std
xor
sub
dec
cmp
adc
ss
push
pop
cld
or
sbb
jb
xor
and
dec
in
and
sub
inc
xchg
cmpsl
test
pop
jne
dec
inc
adc
das
loopne
lret
int3
ror
mov
loop
sub
push
jg
mov
sbb
sub
pop
push
imul
push
adc
bnd
call
jg
adc
mov
out
scas
pop
add
push
rorl
cmpsb
cwtl
push
xor
lods
mov
movsl
or
jno
lock
add
mov
and
aad
je
pop
sub
ret
out
xor
dec
and
adc
shl
xor
lods
mov
in
scas
fistpl
pop
add
xchg
fsts
cld
outsl
cwtl
pop
add
pop
stos
push
loop
ret
sub
dec
test
mov
xchg
lds
cltd
mov
std
or
test
pop
mov
mov
ret
icebp
aam
or
dec
mov
and
into
xchg
iret
sbb
jns
clc
call
push
mov
ret
jge
sbb
les
insl
dec
sub
fidivrs
pusha
cmp
lret
mov
cltd
jb
sbb
data16
cmpsb
jno
adc
fs
in
inc
ja
mov
test
imul
outsl
outsb
loopne
jbe
fadd
sub
add
imul
adc
cmp
or
popf
inc
add
sub
bnd
xchg
dec
adc
cmc
data16
jl
jo
xchg
mov
or
pop
jg
xchg
and
adc
enter
mov
aaa
mov
or
sbb
inc
adc
int
adc
mov
lahf
adc
push
movsl
fildl
mov
ret
sub
inc
mov
or
pop
and
dec
pushf
jp
in
push
adc
aas
out
test
fdivs
and
cmp
test
popa
push
stc
ret
push
cmpsb
push
cli
imul
daa
pop
mov
test
movsl
jmp
clc
sbb
stc
and
push
xor
fwait
mov
scas
inc
aad
adc
mov
pop
leave
daa
push
xor
hlt
mov
xchg
in
xchg
aam
adcl
sbb
pusha
push
jge
jne
inc
lret
xor
push
fs
aas
cmpsb
lods
jno
stc
cmpsl
decb
fs
push
fisttpl
pop
inc
xchg
imul
jge
hlt
aas
push
cmp
inc
jne
push
push
stc
and
int3
ljmp
pop
or
sub
lods
popf
cmpsb
dec
add
xchg
popf
imul
cmp
mulb
pop
push
mov
dec
test
or
xorb
sahf
in
or
inc
rclb
add
jge
adc
outsl
nop
gs
xor
jle
sbb
and
in
fiaddl
decl
imul
out
or
add
inc
cmpsl
lret
xor
sbb
jl
xchg
xchg
sbb
pop
sub
call
in
xlat
outsl
pop
pop
mov
xchg
pop
mov
xor
sub
sti
jmp
ja
dec
outsb
orb
inc
pop
shlb
push
insb
cmp
gs
lds
push
and
add
arpl
and
mov
popf
dec
push
mov
or
daa
xor
ljmp
dec
test
sub
xchg
lahf
jno
adc
mov
mov
and
scas
xchg
dec
and
sti
jg
pop
es
popa
cwtl
call
cmp
jb
push
mov
inc
push
outsb
fadds
push
popa
mov
inc
es
rcr
ret
push
fadds
test
scas
sbbb
mov
mov
imul
or
jp
and
lods
imul
stos
mov
daa
fidivs
push
mov
and
movsb
mov
fwait
lea
pushf
sahf
addr16
out
push
mov
loope
cltd
pop
ja
ja
mov
rclb
sbb
leave
xor
xorl
mov
add
push
outsb
jb
inc
xor
sub
jno
push
push
mov
pushf
je
sti
ds
popf
cmp
cmp
push
test
lret
stos
adc
push
push
xor
inc
sbb
addb
insb
cmpl
xchg
adc
jno
sub
aad
jo
jge
adc
xor
dec
inc
adc
push
xchg
test
add
mov
popa
pop
in
nop
arpl
xor
into
cmpsl
lods
sbbb
daa
add
out
xchg
cmpsl
mov
aad
jmp
add
pop
subb
fbld
sub
push
pop
lds
popf
cltd
add
test
jae
adc
sub
mov
dec
and
push
in
add
mov
rcll
cmp
push
in
xor
mov
sub
inc
sbb
mov
rcl
iret
sbbb
xchg
and
lcall
pop
xor
andl
pop
and
cmpl
idiv
imul
repnz
adc
jmp
jp
jo
sbb
xchg
test
fidivl
mov
pop
xchg
pop
sbb
movsb
pop
mov
add
movsl
dec
mov
pop
popf
mov
and
pop
lahf
fs
or
sub
pop
dec
xchg
cmc
sub
jb
scas
mov
inc
xchg
es
jge
dec
sahf
ds
ficoml
cwtl
ja
cmc
sbb
mov
inc
lds
add
mov
ja
adc
adc
adc
inc
add
dec
es
test
jne
aaa
leave
push
mov
cmp
fsubrs
fwait
xor
loopne
mov
jl
sbb
mov
push
xor
loope
aaa
das
fnsave
rcrb
pop
or
das
jle
pushf
das
adc
fisubrs
pop
mov
sub
push
dec
icebp
adc
xor
lea
cld
mov
in
test
shr
push
lahf
lods
adc
jno
cmp
jmp
repz
jge
lds
out
mov
dec
fwait
mov
inc
jno
fists
cltd
or
das
xor
inc
or
pop
repz
popf
dec
daa
lret
add
ficoml
ja
sub
push
cmc
cmp
add
inc
add
mov
jg
mov
dec
testb
dec
inc
clc
cwtl
pop
mov
pop
leave
adc
sub
out
mov
fidivrs
mov
loop
pop
cmp
push
dec
les
mov
xchg
pop
mov
xchg
in
cld
push
push
cmpsl
sub
idivb
ss
push
mov
cwtl
enter
add
lea
pop
sub
xchg
test
pop
in
xchg
jns
cmp
xorl
jae
cmpsl
xchg
nop
jnp
rolb
xchg
repnz
outsl
dec
out
int3
sahf
inc
cmp
inc
and
es
dec
push
rcll
aad
cltd
inc
imul
ja
push
lea
xchg
mov
movsl
aaa
push
cmp
mov
and
or
cld
add
ret
pop
adcb
mov
lahf
int
ret
clc
insl
bound
data16
lret
lods
lods
mov
mov
push
imul
ja
and
loope
popa
and
movsb
loope
mov
in
dec
jae
dec
movsl
bound
sarl
stc
jle
les
stos
roll
aam
pop
push
cmpsb
and
pop
loop
pop
rcrl
push
adc
sub
sti
movsl
xchg
lock
cmp
inc
mov
sub
orl
and
sbb
adc
out
xchg
sahf
xchg
xchg
lcall
mov
lret
mov
rorl
cmp
xor
loope
adc
sbb
sub
mov
sub
mov
lds
int
push
cwtl
pop
inc
or
lods
mov
push
mov
aas
push
cmp
xor
push
cmpsb
sub
push
rcrl
pop
ss
xorb
xchg
mov
dec
pop
add
push
jb
mov
jbe
cmp
std
push
gs
jno
or
mov
fnstcw
add
addl
sbb
into
pop
jle
loopne
push
jno
lods
push
rclb
xorl
sub
push
out
sub
push
out
clc
or
sti
sbb
popa
sub
in
loope
add
or
shll
filds
cwtl
ljmp
and
mov
stc
xlat
and
das
mov
xor
jo
pop
loope
or
and
push
in
jno
pop
outsb
xchg
mov
pusha
lret
jmp
movsl
dec
in
ss
sbb
popf
inc
or
push
adc
je
mov
push
inc
scas
jbe
mov
inc
inc
bound
and
pop
ret
pop
dec
fwait
adc
pop
jg
test
repz
popf
cmp
xchg
mov
repnz
push
jno
jge
imul
in
xor
inc
rcr
mov
js
iret
movsb
cmp
out
stos
pop
mov
jnp
fcmovnbe
pop
jo
sahf
sbb
arpl
push
inc
add
pop
sahf
popl
mov
mov
jmp
sbb
movnti
cld
sub
add
pusha
cmp
xchg
and
imul
iret
addr16
jnp
pop
popa
jbe
push
lret
xlat
ret
ficoms
je
and
out
ja
jne
xlat
cmp
push
mov
xchg
dec
pop
push
js
scas
and
ret
adcb
mov
aas
jmp
mov
jb
sbb
shrb
adc
xor
xor
dec
push
sbb
mov
stos
roll
shl
sub
jge
and
mov
ficoml
adc
cltd
mov
pop
jo
cli
mov
mov
movsb
repnz
loopne
xor
mov
add
movl
rep
dec
jno
jne
push
or
and
repz
aad
xchg
popa
loop
test
insb
xor
mov
add
jecxz
add
pop
push
sbbl
push
xor
imull
xchg
ffreep
or
add
adc
movsl
pop
fdivp
mov
outsb
sbb
add
fadds
es
inc
pop
icebp
jge
cld
orl
sbbl
scas
push
xchg
lods
shlb
and
insb
test
add
int
popf
andb
jbe
sti
js
pusha
xchg
xchg
mul
mov
js
faddp
cmp
mov
test
mov
sub
jbe
in
and
popf
jge
jg
test
jecxz
xchg
xchg
int
push
dec
arpl
cwtl
cwtl
clc
mov
jo
sbb
xchg
dec
aaa
sub
lods
shrl
outsl
scas
fdivrl
int3
lds
lock
nop
jb
mov
inc
call
push
enter
lahf
or
cmpb
insl
jbe
ja
xchg
enter
ds
mov
inc
inc
mov
notl
and
push
mov
push
cmpsl
in
mov
les
aad
or
fimuls
inc
mov
hlt
je
or
jae
xchg
add
loopne
iret
pop
scas
xor
leave
in
jmp
out
pop
push
sub
xor
sbb
push
jg
cwtl
cmp
and
pop
loop
shll
inc
int3
and
repz
ja
xchg
ljmp
popa
dec
adc
encls
mov
adc
cwtl
daa
loopne
pop
xchg
sub
insl
lcall
and
sbb
mov
sub
fdivrs
dec
loop
stos
in
add
cli
pop
stos
imul
xor
jge
jne
or
cs
pusha
fcmovb
pmaxsw
call
fsubrp
sbb
out
mov
add
clc
push
xchg
pop
mov
jo
clc
and
out
fimull
bound
std
popf
out
out
cmp
dec
jb
sbb
xchg
dec
adc
cmpxchg
fiadds
stc
sub
mov
dec
mov
push
or
in
test
mov
mov
negb
fs
pusha
daa
jle
scas
in
mov
ja
adc
push
mov
fisubrl
fdivl
cmpsb
in
in
sub
lret
adc
rol
rclb
std
xor
rorb
add
sahf
pop
mov
jp
and
loope
lahf
sub
in
xchg
test
cmp
dec
push
mov
popf
aaa
andl
jmp
scas
push
xchg
scas
mov
lcall
dec
cwtl
inc
dec
mov
mov
sub
in
lea
sbb
shll
insb
out
xchg
cmp
add
inc
lods
sub
rcrb
pop
sarl
dec
inc
imul
lahf
push
out
cmp
mov
rclb
in
test
mov
adc
pop
adc
dec
xor
adc
lds
outsb
mov
sahf
enter
aam
je
in
loop
push
jnp
lea
shll
lret
pop
je
adc
in
sbb
xchg
addl
mov
cmp
or
add
jns
jb
je
push
push
test
jo
xchg
es
pop
mov
sarl
ret
fidivrs
mov
mov
call
and
cmp
outsl
jo
push
add
add
in
ret
mov
adc
fwait
rcll
fcoms
je
aam
movsb
repnz
bound
fs
xchg
push
mov
add
fmul
jb
bound
shll
pusha
sbb
adc
ja
fst
mov
ss
xor
jge
pusha
xchg
pop
loopne
pop
ret
andb
cmp
hlt
sarl
hlt
popf
sbb
iret
jmp
mov
outsb
adc
or
inc
aas
jo
pop
mov
add
mov
lret
push
xchg
adc
adc
mov
repnz
push
out
cmp
or
out
out
mov
mov
in
jnp
cmc
cmpsb
cmc
pushf
fadds
sbb
cmp
and
lret
loopne
inc
xor
lds
std
jnp
jae
cmpb
lods
icebp
sub
dec
bound
scas
loop
cltd
into
fldt
or
int3
adcb
jg
push
int3
imul
sub
cli
fiaddl
xor
add
mov
mov
adc
adc
btrl
rorl
cmp
xchg
dec
fcmovnbe
mov
dec
popa
ja
sub
push
sub
fwait
arpl
cmp
jge
adcl
mov
mov
xor
dec
mov
dec
xchg
mov
call
xor
xchg
fldcw
pop
scas
mov
popa
fsubrl
xor
les
in
and
les
loop
int
das
lcall
or
push
or
arpl
mov
mov
les
pop
ficoms
movsl
or
mov
scas
sbb
shll
mov
stos
xlat
mov
clc
fs
lods
imul
sub
incb
ret
sbb
inc
stos
jns
push
jbe
xchg
jne
sbb
mov
push
shr
pop
outsb
inc
test
jle
sti
add
jge
sub
mov
sahf
enter
mov
or
and
cmpsl
ficoml
out
ret
lds
int3
dec
inc
fsts
test
mov
cmp
aam
fdiv
and
es
jl
shrl
mov
es
xchg
lret
sahf
push
incl
sbb
cmp
cwtl
or
jmp
push
cmpsb
mov
shlb
mov
pop
adc
jge
mov
leave
adc
mov
mov
ret
fisubs
mov
cmp
adc
ret
jge
enter
adc
fdivrl
mov
or
test
in
fnsave
hlt
xor
addl
and
add
dec
jecxz
xor
in
dec
ja
xchg
cmc
push
xchg
ret
sar
loopne
or
mov
and
test
pop
pop
lcall
mov
int3
cmp
jecxz
daa
or
movsb
push
or
pop
add
dec
xchg
fmuls
xchg
in
mov
scas
lret
cmp
mov
mov
aad
mov
mov
and
or
ds
lcall
or
movsb
cli
sub
icebp
pop
inc
mov
jge
mov
js
inc
fbstp
xchg
jae
xor
and
lea
fstpt
jmp
cmp
dec
nop
negb
cwtl
out
loope
push
sbb
or
dec
mov
repz
add
imul
pushl
flds
fadds
popf
lea
or
ficomps
add
fidivl
lcall
jo
icebp
add
cltd
dec
sahf
push
ljmp
jae
dec
cli
lahf
repnz
imul
push
xchg
xchg
sbb
std
cmpsb
sbb
lods
ds
xchg
daa
mov
sbb
mov
push
dec
jecxz
scas
arpl
test
push
cwtl
int3
addr16
ss
and
mov
pop
stos
scas
mov
and
or
nop
stos
insl
adc
loop
mov
ret
cwtl
jmp
mov
lahf
shl
xchg
xchg
pop
pop
add
negl
dec
aam
sahf
push
iret
jno
icebp
jmp
stc
pop
mov
cli
xor
adc
and
jb
mov
jns
jecxz
nop
sub
addb
xchg
fbld
and
push
dec
or
dec
shr
and
loop
cmp
imul
ret
or
outsb
jo
inc
xchg
mov
xchg
cmpsl
imul
xchg
cmp
jmp
aaa
dec
add
mov
cwtl
sub
std
shr
mov
inc
movsb
shrb
lcall
das
jnp
lods
or
aaa
idivl
mov
push
dec
sbb
inc
add
jbe
out
inc
push
jp
xchg
add
mov
out
int
lea
or
or
in
movsl
shl
out
pop
test
dec
dec
je
pop
imul
sbb
sub
sahf
push
and
inc
lret
bound
mov
xor
lahf
sub
lods
jle
popa
sub
in
sbb
inc
daa
jbe
sbb
clc
jmp
dec
loop
movsb
pop
cld
pop
out
bound
xor
mov
pop
repz
inc
mov
jmp
out
xchg
popf
sbb
fcoml
mov
lret
nop
xlat
pop
lahf
push
sarl
mov
pop
imul
sub
pop
cmpsb
jns
mov
sub
mov
xchg
push
mov
dec
cmpsl
pop
fbld
js
xchg
pop
clc
inc
inc
pop
push
xor
jmp
arpl
mov
or
inc
std
shlb
pop
sbb
gs
leave
test
mov
int
aaa
push
xor
jp
jbe
push
mov
ss
adc
mov
imul
cmp
jl
inc
xchg
push
dec
lret
mov
mov
stos
jg
ftst
cmp
into
sbb
nop
and
loope
or
mov
mov
mov
lods
fwait
cltd
xor
add
adc
stos
std
shll
clc
add
pushf
stos
jle
sarl
xchg
nop
shll
xor
enter
inc
inc
jl
lret
mov
or
pushf
xchg
cmp
push
into
sub
cmpsb
adc
pop
fildll
das
adc
insl
aas
xchg
in
aas
sbb
inc
lock
add
push
cld
mov
xor
mov
or
fstp
shlb
xchg
nop
pop
dec
out
shrb
pop
and
mov
or
insb
sub
or
lods
inc
lret
add
adc
pop
or
scas
mov
adc
fcoms
push
daa
pushf
sub
int3
mov
mov
jno
rolb
icebp
cli
push
cld
mov
jl
outsl
fisubrl
and
push
xlat
push
out
pop
pop
inc
jmp
jno
aas
lahf
movsl
cmp
cmpsb
jmp
js
add
add
mov
or
inc
cmp
jae
in
inc
jno
push
mull
leave
jl
or
mov
xor
xor
push
mov
mov
pushl
mov
ja
xor
adc
repz
out
and
inc
xchg
xchg
sbb
lahf
push
sti
enter
clc
jg
push
dec
xor
and
out
mov
xor
mov
or
push
mov
jp
mov
sar
mov
and
push
enter
or
loope
test
mov
stos
aas
dec
negb
fwait
and
mov
scas
aas
mov
lea
or
inc
sahf
jae
xchg
lock
xchg
les
push
js
push
dec
or
inc
mov
cmp
push
cmp
inc
jne
sbb
movsb
push
ucomiss
fidivrl
pop
scas
pop
lds
scas
xor
mov
and
inc
mov
loop
fs
or
push
out
and
je
cli
mov
in
xor
fbstp
pop
ss
add
call
aaa
and
jge
push
mov
repz
loopne
lret
cwtl
cli
cmp
repnz
lret
les
les
mov
fsub
cmpsl
mov
fwait
addr16
int
xor
add
dec
mov
mov
inc
imul
jns
inc
push
push
ja
out
adc
cmp
xor
stos
aaa
push
jecxz
inc
lea
mov
das
push
mov
test
dec
push
cltd
pop
test
movsb
push
xor
fs
mov
dec
push
ss
inc
outsb
inc
negl
mov
pop
mov
stos
mov
sub
int
mov
inc
sbb
mov
adc
icebp
iret
test
inc
int
mov
mov
dec
aam
jb
mov
leave
addl
xor
cmp
sub
cmc
adc
mov
rcll
pop
sti
pop
lcall
leave
ficompl
fidivl
sub
fsubrs
scas
in
stos
ror
cs
and
xchg
mov
jmp
out
inc
mov
pop
sub
add
je
pop
mov
mov
mov
ret
imul
mov
dec
sbb
js
add
adc
pop
les
xchg
cmp
into
movl
or
xor
arpl
nop
jae
mov
leave
or
jns
and
push
int3
stc
rorb
sub
push
inc
btr
test
xchg
insb
add
push
cwtl
icebp
pushf
sbb
and
pop
jne
adc
pop
mov
sub
test
or
adc
add
add
adc
cmpsl
rolb
mov
jmp
cmpsb
mov
xor
stc
adc
shlb
cmp
mov
mov
fdivrp
mov
jno
int3
insl
aaa
sub
fisubs
sti
sub
xor
ds
push
push
dec
jno
dec
mov
add
pop
imul
dec
call
and
jnp
add
inc
push
mov
adc
call
push
popf
outsb
insb
lods
pop
add
push
sub
scas
stos
mov
pop
sbb
lret
bound
mov
inc
lea
xlat
rcrb
inc
adc
jp
cmpsl
out
and
push
push
jb
dec
inc
xchg
sbb
jae
test
movsl
xchg
mov
push
in
cmpsl
xchg
add
test
popf
in
sub
inc
addr16
inc
das
subl
rol
aaa
pop
push
clc
xor
and
xchg
mov
mov
clc
push
sub
push
add
sub
mov
or
pop
cmp
fwait
xchg
icebp
push
jb
jp
dec
push
sub
jl
int3
inc
jb
addr16
ds
and
push
js
fs
pop
xchg
push
stc
dec
push
adc
lcall
xor
data16
jno
or
cld
cwtl
out
jbe
push
inc
xchg
push
mov
push
mov
aaa
lods
fistl
test
jmp
or
cmc
cld
and
fstps
add
cmc
mov
std
pop
mov
mov
cmp
mov
mov
movsl
add
cmp
data16
dec
icebp
mov
je
add
inc
and
push
mov
lods
xchg
sub
inc
fnstcw
jnp
repz
out
pop
ljmp
add
sub
lds
iret
inc
aas
jmp
push
out
outsl
cmp
cmp
pop
cmp
loope
lods
cmc
mov
dec
out
dec
jg
not
fstpl
ja
fwait
and
xchg
xchg
xchg
cmp
sti
addr16
jg
mov
mov
into
mov
aaa
scas
push
out
in
and
test
sub
inc
std
js
inc
push
daa
ds
adc
jp
aam
jb
stos
sbb
adc
dec
sahf
push
pop
jp
mov
mov
mov
cld
and
jno
xor
bound
das
dec
insl
stc
pusha
fcomps
orl
cmp
jg
lods
add
in
mov
fisttpl
jmp
jge
nop
cmpsb
shll
jne
in
ss
ror
idivl
out
pop
add
or
mov
rclb
outsb
or
jb
ret
jne
test
rcll
movsl
aaa
or
les
subb
popa
jl
lret
add
sbb
aad
in
movsb
lea
pop
test
and
xchg
clc
loopne
adc
ss
xlat
jp
mov
add
lds
int
fidivl
fmuls
cs
mov
add
push
mov
lock
sarb
xchg
add
das
stc
or
int
sbb
out
xchg
cmp
adc
jge
les
inc
aaa
push
dec
movsb
das
aad
sbb
or
or
xor
notl
sub
fstpt
or
hlt
andl
shl
sub
or
loop
dec
xchg
adc
xchg
jl
and
xchg
fisttpll
mov
pop
in
sub
lahf
xchg
jg
dec
adc
or
mov
repnz
es
imul
add
filds
mov
loop
popa
dec
repz
pushf
mov
mov
jp
test
stc
adc
sub
xor
cli
mov
push
imul
aas
movsb
aam
sbb
dec
popa
lahf
push
movsl
pop
push
jg
enter
jno
push
xchg
repnz
fcmovu
sarl
arpl
fwait
shll
movsb
mov
ret
push
inc
adc
mov
rcrb
pop
mov
mov
xor
mov
xor
mov
stos
in
cmp
pop
loopne
cltd
in
xchg
mov
mov
dec
loopne
cmp
xchg
fs
cmpsb
xor
pop
inc
or
out
lock
sti
sbb
das
inc
je
jnp
jecxz
xor
push
jns
dec
dec
fiadds
popa
fiaddl
iret
not
stos
cmp
das
aas
inc
sbb
fldt
inc
sbb
push
push
test
ror
pop
sbb
shlb
jge
push
mov
sarb
out
fbstp
add
sub
xor
test
push
fs
js
jnp
scas
mov
mov
ret
jnp
pop
mov
push
ljmp
mov
or
enter
daa
in
notl
mov
lahf
outsl
mov
cmpsl
push
je
inc
push
xorb
mov
jnp
je
lock
movb
mov
es
test
jg
push
shrb
cld
pop
pop
cmpb
test
out
mov
pusha
in
mov
and
sti
or
pop
icebp
and
pop
mov
arpl
aad
int
and
ud2
cltd
xor
xchg
int3
popf
loopne
jmp
jmp
sbb
and
sbb
out
pop
clc
push
stos
pop
mov
les
test
dec
push
movsl
lds
push
fistpl
outsb
sub
xchg
subb
xchg
xchg
jb
and
popa
lods
mov
ret
xor
test
jae
cmp
cmp
dec
push
sbb
int
xor
or
sub
sub
jns
mov
xchg
lcall
sbbb
adcb
and
lret
jmp
sub
pop
out
clc
and
lock
xlat
cs
jmp
xor
xchg
cmp
jns
shll
fsubr
mov
subb
dec
xchg
sahf
mov
ret
add
jge
and
sub
fcoml
mov
mov
jne
roll
cli
and
adc
or
sbb
adc
test
sub
shll
out
push
add
push
in
lret
adc
jecxz
pushf
inc
jle
dec
pop
cld
les
sbb
fs
test
sbb
xor
mov
in
jns
or
mov
loope
sbb
xor
cmp
mov
xlat
mov
or
daa
jl
loopne
dec
push
fadds
fmuls
jmp
adcb
les
xor
insl
mov
jmp
ret
cmp
inc
inc
sub
inc
xor
pushf
jae
xchg
ret
sbb
xor
or
jg
shll
pushf
cmpsb
dec
cmp
iret
cld
inc
cltd
push
xchg
aam
mov
test
aad
push
add
cwtl
outsl
or
sub
rcrb
fcmovbe
sub
and
fistpl
ret
lret
add
sbb
sub
iret
movsb
or
inc
sbb
divl
jno
test
inc
and
xchg
mov
lret
das
dec
push
ss
sti
in
pushf
mov
xor
popf
adc
cmp
xchg
sub
test
push
add
jbe
vpunpckhwd
roll
in
dec
icebp
loope
imul
stos
pop
pop
mov
mov
push
call
adc
add
sahf
lods
add
in
xlat
cmpsb
loop
sbbl
test
inc
ss
xchg
mov
lds
adc
jo
gs
cmp
sbb
cmpsl
out
push
cmp
and
pop
pop
test
std
js
out
pusha
sub
push
pop
outsl
frstor
mov
scas
iret
outsb
sub
mov
loop
inc
xlat
test
mov
push
ja
xchg
lret
cmc
sti
sub
sahf
jno
or
push
add
lds
add
lock
clc
adc
xorb
sbbb
shl
lea
sbb
pop
push
jb
push
jns
repz
sbb
xchg
in
into
movsl
iret
inc
in
pop
push
lods
movsb
xor
or
icebp
icebp
push
out
jmp
in
dec
in
inc
lcall
sub
xchg
sbb
movsl
or
sbb
xchg
mov
lock
loop
and
sub
testl
mov
add
aad
mov
and
lods
add
inc
cmp
push
ret
xor
push
stos
jbe
psrld
and
call
push
loope
pop
shlb
insb
xor
mov
outsb
xor
addr16
and
jo
sti
lds
hlt
and
outsl
fwait
adcl
jo
mov
push
sahf
cltd
out
rorl
insb
cmp
pop
xor
push
in
ficomps
dec
pop
mov
dec
inc
test
sub
cwtl
push
mov
out
cltd
cmc
sbb
xchg
pop
sub
mov
dec
adc
or
mov
sbb
andps
popf
jae
inc
test
imul
and
loope
in
pop
mov
cmp
insl
addl
mov
cmpb
negl
mov
jb
inc
movl
cli
leave
ret
ss
test
call
push
mov
jns
xchg
mov
mov
aaa
mov
dec
push
pushf
sbb
or
test
fmulp
dec
dec
and
dec
push
mov
xor
push
aas
push
sub
pop
sub
inc
cmpsb
mov
and
mov
inc
pop
push
adc
push
mov
ret
arpl
mov
or
push
cmp
dec
jnp
outsl
aaa
dec
loopne
xchg
pop
jnp
xor
imul
push
jp
cld
push
add
cs
push
pushf
dec
push
test
push
add
inc
fwait
push
fwait
push
cmpsb
shlb
loop
mov
dec
xor
add
dec
fcoml
test
pop
in
orb
ret
fidivs
jnp
mov
jb
outsb
imul
ret
ljmp
scas
sub
push
mov
jnp
ljmp
add
push
test
sti
out
adcb
imul
lret
insl
xchg
sti
shrl
out
icebp
mov
fisubrl
lods
sbb
dec
sub
xchg
push
andb
pop
xor
insb
jmp
sar
cmp
popa
inc
leave
xor
xor
cli
idivl
and
fdivs
leave
sbb
in
sub
jecxz
fnstsw
stos
pop
in
jecxz
fs
scas
dec
ficomps
les
mov
into
pusha
mov
jno
scas
stos
aad
in
jae
movsl
fmull
int3
mov
add
lret
in
mov
adc
mov
adc
push
pushf
loopne
lcall
push
fimuls
inc
xor
lods
popf
imull
mov
cmp
mov
pushf
insb
xchg
sub
mov
pushf
mov
imull
xor
inc
popa
push
outsl
int
cmp
cmpb
mov
cmp
cmc
jmp
add
insb
mov
insb
push
mov
sbb
ds
sub
stc
adc
inc
xchg
and
sbb
insb
pop
mov
dec
mov
inc
sbb
popa
gs
into
shrl
adc
adc
mov
rorl
xchg
dec
mov
sub
cli
testb
call
xor
jg
xchg
and
fisttpl
xor
mov
mov
pop
repz
mov
cwtl
pop
addr16
clc
fs
inc
dec
pop
js
cmc
inc
fwait
xor
mov
fwait
movsb
jg
adc
inc
out
test
cmpb
stos
hlt
pop
stos
push
ficoms
sahf
push
test
sti
fstpl
movsb
lret
jno
or
or
repz
mov
imul
mov
push
push
rclb
mov
in
push
cmpl
mov
cli
mov
jmp
pop
push
test
jl
stos
cwtl
pop
sbb
push
xchg
pop
push
mov
sbb
mov
mov
sahf
mov
dec
gs
xor
xor
dec
dec
sub
imul
orl
add
push
jl
inc
or
inc
imul
xchg
adc
in
dec
jle
add
mov
pop
adc
push
mov
daa
out
insl
add
push
popf
mov
sub
push
mov
bnd
and
lcall
sub
movsl
popa
js
shll
ficomps
arpl
and
and
aas
rcll
in
xchg
push
jns
shll
shrb
and
leave
aad
cmpsb
xchg
and
divb
adc
pop
stc
pop
imul
xchg
jecxz
pop
pop
stos
or
aam
insb
add
jno
hlt
fnstsw
push
xor
xor
jge
out
inc
push
cli
and
jmp
dec
xchg
sbb
adc
outsl
pusha
in
push
and
or
mov
mov
inc
dec
mov
adc
mov
push
sti
jnp
push
mov
fimuls
xorl
jle
jnp
lea
add
add
lret
dec
and
popf
push
imul
iret
xchg
xchg
fnstcw
cmp
movsb
test
dec
push
fcoms
loop
mov
xchg
shlb
popf
adc
mov
pushw
fcoms
sbb
mov
pop
fstps
inc
pop
pop
adc
xchg
mov
int
and
pop
call
rorb
insb
mov
sbb
xchg
pop
adc
sub
jle
jl
jecxz
lods
fs
or
mov
and
dec
aad
scas
and
pop
scas
or
pop
xchg
iret
push
xor
outsl
jno
out
mov
lods
out
xor
outsl
inc
mov
mov
fimuls
cwtl
push
lods
int3
mov
and
daa
repnz
mov
arpl
lds
lret
pop
and
cmp
push
out
cmp
in
sub
movb
mov
imul
movsl
cmpsl
jmp
jns
lock
negl
std
cmp
rorl
je
add
call
je
jle
cmpsl
aas
add
test
push
mov
or
jns
xor
jp
push
sub
out
cmp
jo
pop
sub
xor
cmpsb
mov
add
adc
mov
inc
jbe
outsb
push
dec
jl
insl
ja
sbb
sub
cwtl
out
pop
jge
leave
add
cmpsb
pop
fimuls
and
ret
xor
shll
andl
push
mov
push
xlat
sti
shrl
and
or
sub
das
mov
std
xor
sbb
lds
lret
int3
sbb
xchg
and
adc
pop
sub
dec
or
jecxz
lahf
addl
dec
add
xchg
xchg
dec
dec
push
sbb
lret
inc
push
xor
fildll
dec
dec
stc
jle
xchg
dec
pop
pop
outsl
jle
add
mov
aas
or
push
loope
inc
mov
mov
cmp
test
sbb
testl
out
aas
push
mov
mov
lea
sahf
mov
test
mov
add
fidivrs
cmpsl
sub
cwtl
mov
xchg
loope
inc
pop
movb
test
lcall
bound
gs
dec
dec
lahf
nop
jecxz
cmp
jge
adc
mov
or
popf
cs
pop
scas
pop
inc
inc
fstpt
adc
aaa
and
inc
arpl
pop
mov
cli
mov
push
push
outsb
dec
mov
xchg
inc
sbb
sbbb
push
fucomip
leave
dec
fimuls
add
rolb
daa
psubusw
adc
sub
mov
cld
ret
into
adc
js,pn
xchg
sub
mov
sub
data16
sbb
jno
stos
cli
adc
sub
ljmp
mov
dec
jmp
fnstcw
push
test
jl
add
jge
sahf
ret
mov
repz
push
xor
add
ret
mov
lea
push
jmp
mov
cmpsl
int
pop
mov
adc
adc
sbb
dec
test
bound
stos
gs
test
mov
mov
add
inc
xchg
into
jmp
pop
cmpsl
subl
push
mov
push
dec
fbstp
add
adc
adc
sbb
pop
xchg
push
mov
sub
sti
inc
push
cmp
mov
xor
das
jno
push
push
test
rcr
decb
jne
pop
pop
test
cld
lahf
mov
dec
in
pop
rcr
xor
bound
scas
adcl
xchg
popa
into
cltd
adc
xchg
xlat
jmp
stc
lahf
call
mov
iret
xchg
pusha
pop
pushf
push
sub
adc
mov
sub
mov
mov
dec
dec
pop
cmc
xchg
push
cmp
mov
scas
adc
int3
mov
movsl
mov
repnz
cmc
call
aad
jmp
add
add
mov
std
jne
sub
push
mov
and
mov
adc
inc
ljmp
cmp
dec
scas
stos
push
jns
mov
sti
mov
xchg
jle
testl
xchg
lret
in
mov
mov
cmp
fistpl
lret
filds
mov
jmp
mov
ss
pushf
sahf
lcall
cwtl
mov
pop
or
and
sbb
xlat
out
icebp
into
jae
cmp
push
sbb
jbe
mov
lock
and
or
stos
mov
mov
add
fbstp
sti
cmp
sub
or
xchg
xchg
or
xor
cs
mov
shlb
push
not
push
adc
fucomp
mov
add
sub
roll
pop
or
jl
or
pop
inc
mov
push
jno
push
push
testl
rcr
push
lcall
mov
jnp
pop
repnz
test
xlat
inc
mov
sbb
repnz
jno
mov
outsl
aas
or
xchg
ja
lods
cmp
popf
popf
data16
outsl
pop
xchg
push
mov
hlt
pushl
push
and
push
lret
ja
sbb
cmp
ret
mov
movsb
fisttpll
daa
jo
std
xorl
mov
jno
lods
ffree
outsl
mov
mov
xchg
rol
hlt
mov
lret
aas
mov
or
daa
mov
iret
jae
cltd
adc
jns
shrb
insb
test
pop
notb
in
cmp
sbb
xlat
in
adc
sub
xor
add
pop
cltd
pop
test
mov
bound
mov
mov
push
xor
jnp
fsubs
leave
fcomps
cmp
add
push
mov
fwait
mov
pop
cmpsl
adc
loope
insl
jns
xor
aam
imul
mov
cmp
pop
xchg
aas
pop
mov
jnp
lods
jno
sbbl
enter
sub
into
adc
xor
adc
jp
insl
and
jnp
cli
test
lods
lds
push
dec
adc
es
mov
dec
inc
adc
mov
inc
mov
scas
cmpsl
jbe
jg
push
cmp
push
sbb
cmp
and
pop
adc
add
fsub
sahf
mov
inc
fs
mov
mov
xchg
add
mov
inc
sub
mov
mov
xor
adc
mov
sub
and
dec
mov
sub
xchg
mov
dec
test
jnp
mov
ljmp
mov
mov
pop
xchg
loopne
or
push
xchg
sahf
sub
stc
repz
push
push
sub
loope
adc
adc
push
xor
push
mov
push
mov
mov
inc
andl
inc
jl
out
pop
pop
mov
shll
std
mov
push
outsb
add
xchg
mov
mov
mov
sbb
iret
add
jge
out
mov
dec
add
pop
mul
push
and
jmp
into
pop
inc
push
push
movsl
sbb
rcrl
sub
cmp
cmp
jl
aaa
ret
xor
jle
adc
push
mov
mov
psubq
ljmp
mov
pop
js,pt
lret
jb
out
out
rclb
testb
mov
xchg
scas
dec
push
xor
arpl
inc
pusha
imul
sub
mov
or
add
mov
dec
aam
mov
sbb
ret
mov
pop
nop
mov
fimull
outsl
std
xchg
inc
cmp
test
sbb
cwtl
sub
out
add
mov
push
aas
xor
jnp
cltd
daa
fisttps
rolb
cmc
mov
lea
cld
inc
dec
mov
sbbb
mov
fldl
jl
movsb
sbb
mov
inc
inc
jnp
sbb
jnp
cmp
loopne
jmp
xor
inc
dec
lret
aas
sbb
dec
in
loopne
dec
popf
int
inc
dec
das
xchg
lock
mov
ss
stos
pop
sbbb
fistpl
fistpll
mov
loopne
cmp
inc
push
jecxz
sub
xor
out
cmp
sub
mov
int
cmpsb
cwtl
hlt
xchg
mov
cld
xchg
in
pusha
inc
and
add
nop
rorl
xor
ljmp
cmp
lea
sbb
sti
mov
scas
mov
rcpps
movsl
or
mov
xlat
movsb
hlt
sbb
jg
ja
sar
rorl
inc
mov
mov
fs
add
xlat
and
lock
xchg
js
jb
into
outsb
push
loop
sbb
inc
scas
test
pop
inc
loopne
insb
push
and
out
aam
cmpsl
mov
jne
leave
add
fs
fwait
rclb
je
movsb
mov
sub
iret
outsw
dec
adc
push
cmp
imul
cvttps2pi
addb
mov
xchg
xchg
add
cmpsb
cmc
insl
push
mov
pop
mov
pop
xchg
sbbl
jecxz
push
in
sub
or
fisubl
cmp
inc
pop
dec
xor
cld
out
dec
aaa
sub
sub
rorl
jae
add
jge
stos
sub
or
aas
fidivs
xchg
inc
mov
jmp
test
rorb
iret
insl
cmp
fldcw
repnz
sbb
aaa
sub
push
std
iret
push
push
rcrb
movsb
sbb
dec
das
lcall
mov
cmp
lods
int3
jno
stc
jae
mov
xchg
call
mov
dec
jle
stos
sbb
je
mov
out
das
mov
movsl
cmpsl
xchg
mov
sbb
push
iret
fnstenv
xor
dec
mov
adcb
orl
sbb
xor
jns
or
jnp
js
dec
in
mov
hlt
inc
aas
pushf
mov
push
movsb
nop
push
shl
les
xor
ljmp
insl
cmpsb
adc
mov
adc
or
inc
fidivrs
fldl2e
insb
jp
call
push
push
stc
cmp
out
data16
dec
push
mov
int
and
mov
shll
push
aam
xchg
adc
enter
sub
xchg
sarl
in
jmp
js
xchg
test
fisubrs
or
imul
jecxz
jecxz
jo
hlt
in
add
mov
clc
pop
and
push
les
stos
jge
inc
mov
dec
pop
pusha
hlt
out
push
cmp
jg
pop
nop
pop
dec
cmp
out
push
stos
shll
xchg
adc
imul
xchg
add
stos
or
pop
sbb
leave
aas
xchg
jbe
inc
pop
sub
mov
test
adc
pop
mov
loopne
int
rep
add
fcomps
xlat
inc
stc
clc
sbb
or
clc
fistl
inc
repnz
add
sbb
lret
inc
mov
dec
dec
arpl
mov
sub
jl
lock
test
dec
cmp
lods
fldl
orb
fiaddl
iret
arpl
push
mov
cmp
sbb
scas
loope
ret
or
or
cmpsl
push
adc
push
gs
testl
xlat
repz
pop
movsl
stos
inc
mov
pop
lahf
and
add
dec
jbe
cmpsb
test
in
insl
jg
pop
rorl
nop
scas
inc
cmovno
and
jnp
push
sbb
data16
mov
jge
sub
imul
pop
pop
stos
or
pop
pop
mov
mov
bound
jp
xchg
out
mov
notl
out
aas
sub
fcmovne
mov
mov
pop
sub
mov
mov
test
push
jle
fisttps
jmp
arpl
int3
pushf
mov
push
mov
jp
imul
sub
movsb
adc
mov
loop
rolb
aad
call
pop
insb
lods
das
jp
fcmovnb
pop
mov
add
enter
aad
pop
mov
inc
mov
push
mov
xor
in
ss
in
lret
jb
push
jmp
repz
add
in
inc
push
xchg
sbb
lods
mov
pop
popf
dec
ret
mov
leave
cltd
adc
adc
ja
cmp
add
jl
jnp
adc
rcl
sbb
xor
fs
inc
pop
out
add
imul
test
cmp
imul
insb
xchg
aaa
adc
xchg
mov
aaa
data16
mov
adc
dec
fsubrp
inc
test
push
mov
fsubl
sbb
test
inc
mov
ret
adc
out
lock
push
dec
dec
outsl
out
loope
inc
pop
rol
sub
adc
mov
mov
xor
or
dec
mov
popa
push
fsubl
inc
sub
push
out
xor
sbb
adc
out
sub
rorl
stc
ja
dec
pop
shl
add
xor
pushf
scas
mov
dec
jge
jp
jae
fwait
dec
fstpt
or
mov
sti
repnz
fstl
xchg
push
dec
xorb
jae
repz
mov
inc
push
or
testl
or
mov
push
test
cmpsb
icebp
xlat
in
repz
xor
pop
mov
subl
out
mov
cmp
jmp
xor
pop
sbb
inc
adc
jecxz
push
push
stos
jl
addr16
stos
mov
aaa
imul
cmpsl
sub
movq
jl
push
adc
mov
cmp
pop
ss
push
dec
out
inc
imul
jae
aad
sub
cs
ficomps
cmpsb
sub
cmpb
loope
add
scas
scas
jmp
and
icebp
dec
pop
out
mov
push
inc
adc
fcmovne
jge
mov
dec
inc
push
fimuls
neg
or
pop
scas
mov
xchg
jb
pop
andl
push
xor
movsl
cli
adc
in
inc
mov
inc
add
pop
rol
xor
cmc
das
ljmp
ret
add
jge
fs
sbb
inc
sub
inc
mov
andl
adc
push
cs
push
scas
adc
add
cmp
cmpl
stc
cmp
mov
sub
push
sub
and
in
xchg
pop
push
mov
fsts
mov
repnz
sti
loop
es
fstl
jae
cwtl
bound
or
in
das
arpl
adc
xchg
jmp
jg
sahf
xchg
aam
rorb
fsubs
daa
fbstp
js
pushf
imul
xchg
mov
in
ror
dec
mov
mov
orb
aam
ja
cmc
and
inc
imul
incl
mov
pop
adc
dec
lcall
jno
cmp
adc
gs
hlt
cmp
icebp
fs
cmp
pop
leave
xor
fisttpl
adc
push
std
dec
xchg
pop
adc
out
pushf
add
outsl
call
repz
lcall
leave
xor
dec
mov
ret
xorl
inc
jbe
nop
rorb
adc
xchg
lds
fdiv
mov
pushf
and
mov
adc
and
insl
repnz
out
das
out
mov
add
mov
xchg
lods
hlt
add
xchg
mov
call
mov
mov
mov
rclb
cmp
jae
jp
sbb
xchg
lret
ss
call
sbbb
and
or
cld
mov
in
lods
cmp
jl
mov
lods
cmp
jge
mov
add
push
cmp
test
pop
sbb
inc
es
gs
or
or
push
lahf
cwtl
fs
inc
push
jmp
jns
mov
and
xchg
dec
push
shll
xchg
lcall
adc
xchg
idivb
cmp
adc
inc
jle
cltd
push
xchg
sub
hlt
gs
pavgw
fisttpl
pushf
and
lret
scas
cld
call
mov
test
mov
pop
jl
jecxz
jae
int
repnz
lretw
xor
lahf
ucomiss
inc
pop
rorb
and
loop
dec
dec
adc
dec
inc
mov
adc
fistl
push
cmp
xor
mov
sahf
and
push
dec
leave
pop
add
dec
setp
xchg
out
push
pop
dec
lret
in
inc
repnz
sahf
leave
aaa
xor
fwait
push
adc
imul
add
dec
push
sub
enter
in
pop
fists
mov
pop
outsb
ss
imul
or
inc
jge
and
dec
loopne
mov
mov
push
push
inc
push
cmpsl
sub
adc
movsb
push
add
and
push
orb
xchg
dec
add
add
aas
and
mov
ljmp
incb
jle
mov
fs
or
adc
shl
xorl
mov
adc
xchg
mov
adc
dec
xor
push
xchg
lret
xor
rclb
pop
add
in
scas
fwait
push
in
outsl
and
in
push
loopne
pop
add
push
dec
xor
mov
mov
test
add
mov
negl
jae
out
mov
lahf
loop
mov
add
mov
sub
sub
ret
pop
or
fnstcw
mov
inc
data16
movsb
push
xor
movsb
je
clc
add
sbb
lcall
sub
movsl
shlb
cmp
negl
push
lret
pop
decb
loop
jmp
push
mov
ficomps
and
inc
fwait
jbe
cmpsl
adc
das
cld
les
mov
aas
pop
xchg
cs
inc
repnz
mov
dec
inc
cltd
pop
cmp
xor
push
arpl
addr16
cwtl
adcl
stos
inc
into
movsb
xchg
mov
push
jb
push
out
mov
dec
add
lea
out
dec
fildl
xor
fwait
add
adc
cwtl
and
movsb
mov
sub
cli
mov
scas
push
xorl
cmp
or
and
sbb
jge
addb
inc
loopne
jl
outsb
jns
repz
cmpsb
fwait
jnp
shll
add
xchg
dec
jmp
loopne
dec
js
jno
add
mov
insl
aas
adc
or
rolb
rorl
dec
mov
inc
xchg
inc
sbb
jbe
popa
enter
cmpsl
loop
mov
mov
pop
repz
sbb
push
or
dec
cmpl
jge
movb
mov
push
mov
xchg
push
addr16
sbb
sbb
pop
rclb
inc
xor
cmp
pop
dec
xchg
push
sahf
sbb
aaa
dec
or
pop
addr16
mov
loope
outsl
pusha
pop
les
mov
mov
pop
xchg
adc
add
mov
and
out
orl
push
push
add
push
arpl
sub
mov
int
or
xchg
sub
adc
stos
push
data16
and
dec
out
xchg
push
cmc
xchg
lods
loop
jmp
movsb
aaa
push
mov
push
lcall
xor
lret
cmp
inc
jmp
std
mov
outsl
outsb
xchg
adc
outsl
pusha
pop
xchg
cwtl
jg
dec
call
je
xor
sarl
push
aaa
mov
lea
and
cmp
lods
cmc
mov
mov
mov
push
inc
mov
xchg
fisttpl
mov
lods
and
imul
lds
push
addl
fucomi
sbb
xchg
loope
sahf
mov
outsb
scas
mov
mov
fwait
mov
dec
sub
mov
stos
int3
sti
imulb
inc
jb
fsubrs
cmp
xchg
pop
or
movsl
add
adc
imul
xor
cli
stc
popf
xchg
inc
cli
movsl
xor
sahf
frstpm(287
dec
rcr
mov
addr16
cltd
jae
cmp
cmp
add
out
push
sbb
cltd
in
push
sub
in
sti
add
sub
stos
dec
adc
lret
dec
outsb
sub
nop
test
mov
ret
and
xchg
daa
and
pop
clc
adcb
push
inc
jnp
pop
in
in
addb
lret
pusha
fwait
cmp
out
or
or
push
out
lcall
cli
decb
shlb
adc
imul
xadd
pop
and
mov
mov
and
dec
ja
bnd
leave
insl
cmp
std
lcall
cltd
test
jnp
jnp
stos
rclb
sub
jecxz
jecxz
mov
out
jp
std
push
mov
push
mov
fcomps
cmp
int
stos
fbstp
aas
js
sbb
addr16
sarb
or
inc
ljmp
add
sbb
ficompl
imul
jp
add
sub
inc
lret
mov
xchg
lods
mov
mov
jecxz
xor
ret
jmp
imul
push
ds
outsl
cmp
arpl
xor
and
sub
add
jge
fwait
sbb
adc
sbb
xchg
stc
xor
nop
xor
lds
xchg
dec
adc
addr16
insb
inc
xor
xchg
xor
and
inc
or
jne
cmpb
lock
xchg
adc
loop
imul
mov
xor
pop
jo
xorb
lea
icebp
repnz
jns
fucomp
mull
jmp
push
xor
push
mov
cltd
xor
add
mov
mov
lret
dec
pop
xchg
fdivrl
mov
jp
imul
enter
sbb
arpl
daa
call
pop
cvtdq2ps
test
jg
xchg
pop
js
mov
jle
outsb
push
cmp
loopne
addr16
in
jecxz
push
push
add
mov
ds
test
lcall
mov
push
fs
addl
sti
push
or
sbb
inc
pop
js
in
icebp
insl
cmpsl
jg
cmpsl
push
shr
lock
out
jge
add
call
rcrb
mov
in
and
test
cmovae
ds
in
lahf
das
xchg
sub
pusha
adc
orb
into
out
pop
pop
push
and
cmp
mov
popf
add
popa
jne
mov
rol
or
imul
inc
pusha
jg
xor
leave
cmpsb
push
jbe
aaa
data16
loop
cli
into
fs
fdivrp
mov
mov
jbe
adc
bound
std
cmp
and
sub
cmp
fs
or
testb
mov
out
pop
inc
sub
sub
data16
mov
jle
jb
les
popf
adc
mov
daa
mov
shlb
jbe
aad
inc
aad
sub
es
loopne
push
mov
in
dec
xor
xchg
cmpl
das
sub
fimuls
or
or
add
or
imulb
xchg
cltd
scas
pop
or
fchs
sbb
lahf
mov
outsl
in
cmp
add
fdivrl
stos
sbb
in
popf
ja
stos
dec
sub
push
sbb
sti
mov
fimuls
andb
jle
inc
dec
in
push
xor
push
les
or
mov
inc
pop
mov
xor
mov
jecxz
stos
adc
mov
hlt
test
scas
sub
rcll
dec
shlb
ret
rcll
dec
out
scas
sbbb
push
push
popa
sub
push
mov
test
or
scas
bound
pop
imull
pushf
xor
pop
popf
pop
pop
int
mov
fs
stos
sbb
ds
inc
push
xchg
ljmp
lret
insl
lahf
ss
nop
cli
subl
xor
push
pop
xchg
inc
jg
adc
ret
mov
fisubl
fstpt
pop
imul
cmp
pop
rclb
push
clc
jbe
push
psllq
ja
ljmp
adc
push
sbb
movsb
adc
sti
decl
fidivs
xor
mov
cwtl
repz
lods
adc
mov
push
popf
jnp
jg
aaa
mov
icebp
aas
xchg
mov
out
inc
into
mov
cltd
out
inc
cmpsb
inc
addb
sub
insl
pop
movsb
add
fisubrl
push
hlt
ret
bound
in
dec
pop
jnp
rorl
in
loope
mov
xchg
in
mov
adc
js
cli
dec
scas
dec
hlt
and
popf
hlt
ret
dec
and
jg
xor
xchg
bound
out
xchg
ret
adcb
inc
sub
mov
dec
test
xorl
std
ja
jnp
fsts
mov
mov
xorb
jo
fildl
fcmovne
adcl
loope
scas
iret
xlat
pop
push
aaa
lret
or
aam
fcoms
adc
and
mov
pop
add
pop
repnz
xchg
mov
fwait
jno
nop
mov
arpl
push
xchg
mov
dec
cmp
or
rorl
loope
dec
movsb
sbbl
mov
xor
push
repz
sti
lcall
adc
and
sub
lret
sbb
stos
pop
jmp
sti
leave
flds
andl
xchg
mov
cmpsl
jae
cmp
sbb
aas
dec
movsb
inc
pop
push
aam
pop
insl
jns
movsb
mov
pop
cmc
and
and
test
jns
mov
sbb
fwait
sub
into
in
xchg
mov
shll
jbe
adc
dec
mov
mov
ss
sbb
fmull
les
out
push
xchg
es
mov
mov
inc
xchg
aam
mov
aam
aad
mov
scas
sub
fmul
out
stc
dec
push
fwait
jb
loop
fs
jbe
dec
ror
or
in
inc
and
sbb
xchg
mov
out
or
xor
push
mov
mov
insl
icebp
push
jne
or
data16
and
cmp
pop
add
add
stos
icebp
popa
repnz
mov
enter
or
ljmp
loopne
hlt
mov
push
xor
mov
dec
out
imul
repz
repnz
xchg
mov
imul
rorl
in
inc
cmp
push
fidivrl
inc
cmp
test
push
mov
xor
pop
imul
les
clc
pop
push
cmp
mov
cwtl
cmpsb
lock
outsl
in
cmp
push
imul
loope
sbb
xchg
shll
cmpsl
or
sahf
mov
rclb
or
andl
inc
addl
dec
mov
dec
ljmp
outsb
mov
or
out
andl
mov
inc
xchg
jp
jp
sub
push
jb
fstpl
in
and
mov
mov
outsl
js
push
mov
sbb
mov
fwait
xchg
icebp
xor
mov
mov
test
xchg
adc
cmp
lcall
ds
pop
rol
icebp
mov
sbb
in
sti
inc
cmp
insl
push
jmp
out
jo
jecxz
xchg
and
test
mov
jmp
xchg
adc
dec
fistpl
inc
mov
ud2
imul
or
clc
loopne
cli
cmp
dec
popf
sarb
test
xchg
cmc
mov
ror
push
inc
ret
imul
lods
repz
shr
mov
xor
xor
scas
cmpsl
jecxz
mov
jge
sbb
lods
push
xchg
sub
push
test
imul
icebp
cli
mov
rol
jg
dec
dec
mov
fwait
and
mov
andl
out
mulb
fwait
adc
int
xor
sub
adc
pop
ret
jns
mov
loopne
int3
aaa
push
lock
aas
lahf
addr16
mov
mov
jle
adc
dec
idiv
pop
loope
imul
incl
ret
cltd
fs
loop
mov
xchg
push
nop
cmpb
cmp
js
xor
pop
push
mov
in
xor
xchg
faddl
mov
movsb
leave
mov
adc
mov
mov
push
or
pop
lret
dec
push
ret
aad
push
xor
cmp
jnp
mov
mov
popf
pop
mov
and
fmulp
or
fsubrl
dec
scas
jo
xchg
repnz
jae
scas
vmovd
jb
fnstcw
lret
xchg
and
jns
mov
xchg
cmp
pop
dec
sbb
sbb
movsb
pop
dec
mov
scas
sbb
das
jge
movsl
in
iret
cmp
imull
pop
nop
mov
and
in
sti
fistpll
fnstsw
jns
movsb
je
cmp
scas
push
and
pinsrw
fwait
lret
jmp
popf
jmp
int3
loop
test
sub
mov
xchg
stos
xor
mov
out
dec
iret
mov
cmpsl
fisubrl
out
push
lcall
and
fcoms
ljmp
dec
and
add
push
adc
mov
pop
inc
mov
aad
sub
lods
inc
dec
out
cmc
mov
icebp
out
enter
call
inc
mov
call
add
dec
xor
es
out
loopne
test
mov
adcl
aas
mov
mov
test
cli
out
repnz
fnstsw
ja
iret
jg
pushf
je
in
xchg
mov
and
imul
cmp
xchg
int
or
cmp
cltd
mov
es
push
inc
sbb
gs
jno
push
ret
push
xchg
and
pop
lcall
pusha
jecxz
cmp
orb
mov
and
sub
mov
inc
mov
dec
pop
rorb
mov
shll
repnz
pop
sub
push
cmovo
dec
in
jmp
popf
xor
mull
out
mov
in
hlt
lds
aaa
mov
xchg
xchg
imul
jb
fiadds
fildll
jne
shlb
jbe
push
xor
cmp
sub
loop
sub
sub
dec
les
sbb
mov
mov
pusha
rol
mov
dec
mov
shr
mov
xchg
mov
pop
xor
out
daa
jp
mov
add
enter
push
mov
repz
jmp
xchg
repnz
cmpsl
adc
add
stos
enter
cmp
lods
push
push
inc
jns
or
fcmovnu
add
xor
dec
mov
dec
aam
xlat
ret
jbe
xor
aas
ss
call
xor
pusha
dec
mov
jb
dec
andl
adc
mov
adc
dec
out
test
repz
sub
leave
popf
sub
outsb
mov
dec
je
ljmp
cmc
lods
in
cs
data16
out
mov
test
xor
pop
push
sahf
cmp
fisubrs
and
push
jecxz
mov
and
cmp
or
push
pop
xor
xchg
cmpsb
std
and
testb
popa
sub
test
xchg
sbb
or
js
rorb
dec
mov
sub
lods
cmp
leave
incl
jmp
jge
lahf
js
xor
aaa
cmc
fcomps
xchg
jb
xchg
sub
int3
out
and
rolb
