jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
push
mov
sub
and
add
add
dec
leave
mov
dec
call
add
call
sub
add
and
dec
and
mov
add
inc
and
mov
and
sub
sub
dec
and
add
or
jmp
xor
or
xor
and
push
xor
push
and
push
mov
add
dec
xor
call
dec
push
xor
sub
call
dec
xor
cmp
mov
mov
je
and
sub
or
mov
mov
mov
je
or
mov
add
and
or
cmp
je
and
xor
mov
dec
push
and
call
add
or
add
and
push
sub
push
sub
or
add
push
sub
inc
add
add
push
sub
add
push
xor
dec
call
mov
add
and
inc
mov
xor
mov
and
sub
or
add
xor
inc
add
inc
shr
or
sub
mov
lods
and
or
add
mov
xor
and
sub
mov
sub
dec
mov
mov
mov
jne
and
mov
pop
mov
sub
inc
dec
pop
pop
add
dec
jmp
pop
into
je
mov
push
ret
je
mov
fidivrs
mov
test
xchg
jmp
aad
and
scas
inc
add
fwait
jl
inc
dec
or
cmp
mov
push
inc
shl
jl
pop
mov
int3
cs
add
adcl
mov
roll
mov
mov
ljmp
xor
nop
mov
mov
je
loopne
call
iret
sub
mov
ja
ret
mov
adc
test
add
int3
xchg
xor
mov
add
mov
outsl
mov
add
mov
fisubs
inc
dec
or
stos
push
lods
or
mov
cmpb
cmpsl
fisubs
xchg
popa
incl
repnz
ret
mov
mov
fld
jno
xchg
cmp
mov
mov
arpl
fmul
and
pushf
xor
mov
pop
xchg
shl
jnp
mov
xchg
shll
mov
imul
push
ret
out
cwtl
cmp
pushf
std
dec
xor
inc
imul
jo
out
cwtl
inc
jbe
adc
test
mov
int
sub
xor
pop
into
je
mov
pop
out
mov
jmp
mov
dec
xorl
sbb
or
cmp
ss
ret
fiaddl
cmp
xor
xchg
or
aas
jge
xor
decl
icebp
xor
inc
push
xchg
mov
andb
js
outsl
lea
fimull
inc
outsb
lea
je
mov
rcrb
push
icebp
xor
mov
add
cmp
mov
lea
dec
xorl
dec
xorl
mov
pop
int3
inc
les
xor
adc
xor
cmp
push
out
pop
adc
subl
cmpsl
jo
dec
mov
pusha
jg
mov
adc
outsb
int
pop
std
leave
cli
or
into
adc
and
into
inc
inc
add
sbbl
mov
data16
inc
inc
fsubl
les
ret
ds
mov
or
out
nop
mov
xor
jns
sub
sti
fiadds
sub
scas
fcmove
push
into
inc
xchg
dec
xlat
call
ds
adc
ret
xorl
add
into
adc
fs
into
mov
push
or
into
sahf
jns
inc
outsb
jmp
repnz
jle
repnz
jnp
lret
in
cmp
jno
movsl
jbe
pusha
mov
jbe
cmp
mov
and
jg
mov
mov
cwtl
aam
mov
xchg
adc
cmpl
femms
into
adc
hlt
inc
data16
mov
in
repz
mov
pop
out
in
repz
notl
jnp
ret
fwait
out
add
int
clc
test
adc
xchg
rorl
push
fwait
cwtl
loopne
mov
in
repz
dec
pop
sub
fwait
cwtl
loopne
inc
data16
dec
and
stos
jge
in
into
adc
stos
adc
mov
dec
or
into
pusha
das
mov
es
or
into
add
jge
xor
adc
mov
or
and
addr16
sbb
xchg
in
push
sti
and
into
adc
push
mov
or
les
divb
xchg
test
cmp
std
push
out
int3
sarl
add
aas
sti
loop
xor
pop
es
repz
xor
int
outsl
sub
inc
outsl
sub
scas
fcmove
push
into
inc
xchg
dec
xlat
clc
outsb
inc
push
add
into
jecxz
icebp
test
xor
xchg
cmovbe
loop
dec
sti
or
into
adc
dec
into
dec
mov
lret
or
into
lcall
adc
movsb
adc
fldl
icebp
inc
push
lock
dec
into
cwtl
jno
inc
pop
hlt
or
push
or
cs
mov
icebp
jge
xor
fnsave
in
repz
into
sbb
dec
int3
adc
jge
xor
jmpw
jno
mov
icebp
xor
add
inc
jmp
pop
es
icebp
xor
shl
push
or
dec
pop
push
push
into
inc
pop
out
out
repz
cmc
nop
out
aaa
mov
add
inc
data16
mov
mov
into
adc
clc
adc
int
add
inc
push
sbb
push
sbb
bnd
pop
movsb
push
repz
in
jns
cmpsb
cmp
or
sti
ss
push
test
cwtl
ret
das
xchg
loopne
test
sbb
inc
enter
ficompl
pop
test
cwtl
inc
push
inc
push
xor
int
sti
fsubrp
fcmovne
out
and
std
gs
inc
push
inc
insl
add
cmp
jno
cmp
aad
in
add
jns
cmpsb
mov
lods
sti
xor
xchg
sub
adc
int
add
mov
inc
movb
stos
xchg
mov
icebp
add
cvttps2pi
scas
xor
repz
cwtl
ja
inc
and
clc
mov
data16
mov
mov
add
jl
adc
mov
pop
pushf
jnp
adc
in
repz
gs
rorl
inc
inc
add
xchg
sbb
push
repnz
mov
jo
push
mov
adc
into
xor
bsr
or
inc
sub
inc
or
add
daa
lock
adc
jp
ss
adc
test
adc
int
test
into
adc
mov
adc
sub
adc
int
add
adcb
add
or
push
fs
mov
out
repz
inc
pop
or
inc
sub
loop
or
inc
inc
add
int3
adc
into
cwtl
cmp
into
adc
inc
add
push
int
add
movsb
adc
xor
icebp
push
jb
in
mov
push
into
adc
add
adc
fwait
sbb
test
sub
out
push
out
push
push
inc
dec
adc
std
ror
or
jns
data16
icebp
xor
push
pop
sub
push
xor
dec
int3
fcmovnbe
add
rcrb
adc
mov
cmp
add
jnp
jge
arpl
jl
je
outsl
mov
sub
imul
adc
popa
or
add
sub
cli
dec
adcl
lret
jb
jb
pop
adc
cmpb
cmpsl
fsubp
inc
push
ss
scas
cs
lods
pop
imul
sbb
mov
les
hlt
ficoms
test
sub
mov
inc
bswap
adc
aad
pop
mov
bsf
push
pop
and
adc
cmp
ljmp
test
daa
fs
add
insb
or
ficoms
add
rcrl
loop
jne
fldl
push
add
push
push
cmpsb
data16
imul
popf
into
jo
or
mov
cmp
daa
lret
cmp
adc
popf
jmp
add
in
push
sub
and
clc
push
dec
sbb
pop
jns
or
test
lcall
cwtl
xchg
jns
std
fidivl
inc
and
sbb
add
mov
add
out
add
roll
dec
ss
add
inc
lock
dec
adcl
pop
es
aas
icebp
or
jns
into
pusha
sub
jo
pop
out
aam
dec
dec
repz
mov
sbb
push
or
cmp
mov
sbb
lock
mov
jns
xchg
xchg
in
enter
cmc
adc
mov
push
push
clc
or
add
fucomip
outsb
xor
jl
inc
sbb
add
mov
xchg
mov
jmp
rorl
pusha
xor
jg
dec
dec
push
or
aas
into
testl
push
sub
orl
sbb
push
mov
rcrb
pop
scas
sbb
cmp
mov
jg
in
fs
sbb
roll
dec
cmc
cwtl
int
cltd
push
sub
xor
pushl
int
xor
sbb
std
cmp
inc
imul
outsb
jnp
icebp
mov
pop
sbb
data16
outsb
xchg
inc
or
out
mov
or
add
dec
pop
cwtl
sti
adc
push
or
adc
jge
loope
idivl
or
sbb
fidivl
adc
mull
push
inc
sbb
inc
mov
loope
mov
fildll
movsb
ja
outsl
sbb
test
mov
cmp
inc
fisttpll
or
out
mov
cmp
daa
pop
and
dec
scas
cli
add
lret
data16
push
in
or
int
mov
fiadds
rorl
mov
push
or
test
sub
ret
inc
pop
jns
ret
mov
nop
enter
js
jecxz
orb
lahf
loop
lods
inc
inc
or
scas
and
stc
pop
sahf
or
lret
sub
and
dec
cwtl
sahf
fldl
sbb
repnz
enter
ret
pop
pop
sub
fnstsw
pop
inc
mov
sbbb
xchg
sbb
cmp
pop
add
mov
cmp
test
cld
mov
sub
cmp
sub
inc
ss
iret
sahf
dec
push
out
repnz
xchg
jp
sub
in
sub
inc
lods
fwait
dec
loopne
outsb
popf
pop
popl
add
add
mov
cmpsb
xchg
push
jbe
pop
cmp
inc
xor
xchg
jbe
daa
sbb
cmp
xchg
mov
andl
mov
sub
push
addr16
xor
mov
cltd
dec
icebp
dec
ss
fstl
lods
aad
and
ja
testb
sbb
repnz
and
ret
jnp
sbb
push
and
pop
sar
dec
pop
das
pop
es
fsubrp
push
cmpb
xchg
xor
xor
lock
xor
mov
inc
add
out
repz
repnz
cmpsl
xor
xchg
xchg
push
or
inc
and
or
fnsave
aam
adc
xor
xchg
add
sub
push
push
shrb
push
push
xchg
dec
cs
cmp
dec
jb
lock
sub
push
add
in
mov
dec
sbb
dec
scas
out
mov
sahf
xchg
push
mov
fwait
gs
mov
test
call
jl
mov
lahf
dec
fdivrp
mov
add
add
dec
pop
aas
aad
sahf
inc
incb
xchg
ret
cmpsb
sbb
sub
sub
leave
and
ret
jb
adc
sub
adc
lods
mov
adcb
pop
es
inc
addl
cmp
fcmovu
sbbl
test
xor
adc
rolb
mov
push
cmpb
jge
jle
iret
jp
inc
data16
mov
repnz
lea
adc
adc
and
add
js
loop
in
lock
addr16
movsb
std
inc
das
and
xor
nop
es
push
es
inc
mov
cmpsb
dec
stos
sbb
repz
xor
dec
mov
pop
pop
dec
add
adc
sbb
push
call
jle
inc
aad
xor
inc
gs
mov
in
leave
or
sbb
xor
fstl
enter
mov
mov
inc
ja
test
mov
mov
pop
dec
pop
dec
or
push
test
sub
cs
mov
stos
in
inc
pop
inc
xchg
imul
scas
mov
jl
repnz
aam
push
pop
dec
sub
in
add
into
cmc
in
mov
xlat
sub
xor
mulb
xchg
dec
jge
lret
pop
cltd
mov
testb
inc
xchg
out
add
into
test
test
lods
scas
xchg
adc
in
adc
jg
add
ljmp
ficoms
es
adc
aam
lds
test
push
cmp
or
test
ljmp
mov
cwtl
pop
shl
mov
fsubr
or
mov
pop
bswap
add
data16
mov
xchg
shll
stos
jae
sub
jae
cli
inc
sbb
mov
aad
pushf
sbb
popf
push
in
add
pushf
pop
sub
dec
int3
adc
xchg
mov
sub
mov
adc
in
inc
dec
cmp
jnp
xchg
addr16
es
xchg
andb
lds
sub
imul
xor
mov
scas
cwtl
mov
sti
push
fs
mov
sub
cmpsl
adc
ds
sbb
add
daa
repz
data16
subl
xchg
push
clc
xchg
addr16
imull
xchg
or
test
dec
mov
add
add
mov
pop
std
fildl
add
aaa
fcoms
push
lret
out
cltd
cmpb
add
mov
repnz
mov
mov
movsl
mov
adc
or
into
call
lret
clc
or
mov
push
fmull
sub
test
stos
lret
add
jno
add
xor
sub
xchg
sbb
xlat
cs
dec
negl
fimuls
jo
jbe
orb
imul
sub
pop
icebp
mov
dec
js
mov
push
pop
out
push
scas
cmp
repnz
xor
inc
xor
push
pop
in
sub
push
pop
imul
pop
ds
push
enter
popf
stos
out
test
add
fs
popf
mov
jmp
dec
inc
mov
cmp
shl
dec
adc
or
out
int3
xchg
inc
xchg
jmp
sbb
push
lea
jg
out
ja
or
push
in
push
jp
jne
testl
leave
cmp
dec
inc
int3
push
or
sub
adc
inc
pop
adc
jle
mov
push
push
inc
pop
adc
push
arpl
popa
mov
and
or
ret
lcall
mov
xchg
xor
sub
cmpb
dec
sub
loop
pop
push
and
andb
insl
push
mov
inc
fwait
nop
inc
mov
mov
aad
dec
dec
push
push
and
sbb
cmp
jo
push
out
mov
lret
or
pop
xor
mov
xor
ret
das
push
push
sub
scas
push
fwait
in
cli
jno
pop
cmpsb
mov
push
mov
loope
jne
fisubrs
mov
add
andl
fidivs
lods
xchg
sbb
jp
sub
arpl
and
fwait
repnz
mov
xchg
stos
pop
cmp
dec
testl
push
aas
addr16
push
xchg
popf
inc
inc
fistl
popf
dec
push
xchg
call
std
es
bound
push
test
enter
pop
xor
cld
push
loop
mov
xchg
xchg
and
jns
inc
and
cmc
je
pop
dec
dec
jmp
or
aam
dec
jb
outsb
push
inc
lds
xor
cmc
jns
cmp
and
mov
jae
push
std
stos
in
pop
ja
push
popl
dec
inc
cmpsl
sub
in
lret
pop
fldenv
in
adc
outsb
pop
inc
or
mov
scas
adc
mov
out
ret
or
rcll
adc
pusha
push
mov
std
adc
xor
pop
ror
mov
jns
cmovbe
pop
jbe
mov
xor
ljmp
les
out
sti
mov
or
lods
jns
push
fimuls
std
fildll
add
inc
adc
out
xchg
xchg
xlat
xchg
js
mov
xor
fisubrs
jecxz
clc
mov
mov
push
das
sub
sub
aas
push
cmp
add
mov
popa
sbb
xlat
ret
js
hlt
fistpll
push
cwtl
bswap
pop
in
adc
mov
pop
xchg
mov
sbb
pushf
push
in
xor
and
dec
pop
xchg
dec
jnp
xchg
inc
lock
cs
or
add
inc
les
fadds
dec
jp
outsb
mov
cmp
and
inc
clc
dec
and
push
lock
rclb
aaa
test
mov
and
jl
ret
jnp
stos
inc
cmp
push
cmpsb
dec
daa
cmp
es
sub
add
xor
sarl
sbb
scas
xchg
sub
jo
dec
pop
jge
mov
add
repnz
sbb
test
arpl
mov
mov
push
xchg
or
pusha
ret
mov
scas
test
out
dec
or
das
cli
pop
xor
cmp
push
in
ja
in
jecxz
pop
int3
orb
lea
mov
dec
pop
testb
or
dec
sti
jge,pn
sti
fcmovbe
cmp
push
jb
push
enter
jg
cmp
das
add
adc
out
mov
mov
sbbb
push
nop
sub
push
adc
stos
mov
and
std
iret
loop
test
inc
sub
daa
mov
adc
rcr
jo
inc
dec
and
faddl
in
aaa
enter
push
sbb
test
xchg
cmp
shrw
mov
pop
vpcmpeqw
add
mov
lods
xor
repz
mov
adc
add
xor
cs
mov
add
mov
pop
sbb
inc
adc
xchg
cli
xchg
in
int3
ss
jmp
xor
popf
pop
pop
cltd
dec
not
push
or
adc
dec
out
es
daa
jb
enter
cmpsb
icebp
push
add
std
dec
imul
repnz
rol
push
sub
inc
mov
jo
sub
jp
int3
push
fiaddl
cmp
out
push
sub
push
dec
aas
mov
enter
mov
push
int
aas
stc
bound
pop
cmpsl
sti
and
aaa
mov
gs
mov
je
ret
push
push
push
out
pop
sbb
mov
test
push
dec
cs
movzwl
xchg
adc
or
ds
in
out
lock
mov
shlb
mov
xchg
jecxz
insl
inc
ret
jo
addr16
sbb
add
ljmp
dec
and
repz
into
xchg
scas
and
ret
test
xchg
adc
sbb
add
hlt
xchg
out
cmc
pop
sbb
out
mov
push
fldl
leave
gs
dec
xor
mov
mov
xchg
test
adc
cmc
dec
inc
rcrb
inc
ljmp
out
and
cmp
jns
nop
pushf
test
fwait
or
add
add
outsb
pop
fstpl
dec
inc
xchg
iret
shll
inc
leave
scas
add
push
lock
leave
add
xchg
and
in
jo
ds
jb
push
add
mov
rolb
cvtpi2ps
or
mov
test
notl
xor
ret
stos
push
push
mov
fimuls
cmp
test
mov
inc
jne
xchg
fstpl
fiaddl
bound
fsubrs
cmp
xchg
outsl
inc
call
mov
and
or
data16
push
mov
fistpl
inc
les
mov
push
push
scas
stos
or
mov
lds
push
andl
aam
push
fisttpl
pop
jle
aaa
dec
xor
js
inc
push
repnz
adc
xchg
jp
ret
leave
mov
out
push
lods
repz
mov
dec
fisubrs
pushf
aaa
push
mov
rclb
add
cmp
inc
pop
daa
adc
cmp
push
add
arpl
outsl
jecxz
loope
aad
or
clc
add
aam
mov
pop
lods
mov
imul
pop
outsb
dec
cmp
xchg
sbb
cli
mov
pmulhuw
fcomps
les
test
test
aas
push
pop
dec
dec
cmp
subb
js
lods
push
add
dec
adc
mov
out
cmp
pop
cmp
inc
stc
jne
cmp
push
scas
sbb
aaa
add
inc
pop
lret
aaa
mov
inc
hlt
leave
sbb
mov
sahf
mov
adc
dec
sahf
jnp
loop
ret
in
sahf
and
inc
in
pop
lods
cs
mov
and
cld
pushl
jge
pushf
and
aaa
hlt
push
sub
pop
add
clc
pop
fiadds
or
adc
es
pop
pop
pop
xor
push
mov
ja
out
and
test
jo
pop
fidivl
cmp
cmp
ds
xchg
sub
xchg
push
add
pusha
loopne
sbb
xchg
pop
imull
std
or
lods
stos
lret
adc
jnp
mov
adc
aam
inc
add
pushf
mov
rcrl
sub
push
aas
jns
mov
sbb
repnz
and
cld
std
sbb
add
xor
orb
icebp
int3
or
sbb
inc
test
ljmp
pop
inc
cmp
push
lea
addl
out
xor
arpl
sub
in
repnz
sbb
gs
add
mov
pop
loop
jp
mov
lcall
pop
pop
andb
lea
cmpb
lret
mov
sti
out
inc
add
sbb
adc
dec
inc
int3
push
inc
in
jns
pop
imul
lret
jne
shlb
dec
pop
or
dec
push
dec
or
mov
cltd
gs
sarl
pop
xor
xchg
mov
push
cltd
xchg
push
push
mov
stos
nop
add
lcall
cltd
iret
sub
insb
add
push
add
pop
shlb
movsb
les
iret
mov
int
dec
and
add
push
je
add
jne
into
divb
push
add
loop
sub
negb
push
pop
aas
xchg
mov
orl
iret
lods
in
int
dec
jecxz
or
xor
jb
sti
jg
mov
fcoml
outsb
mov
mov
test
sub
in
popf
in
orl
xchg
xlat
scas
sbb
xchg
loop
sahf
mov
and
push
sbb
sbb
int
data16
xchg
mov
xchg
xlat
in
cmp
iret
mov
and
or
sahf
sub
js
stos
dec
jnp
or
sbb
enter
fs
mov
rolb
pushf
and
xor
shrb
adc
add
sub
das
clc
popl
in
cmpsl
mov
test
ss
mul
and
sahf
pop
sub
test
lss
or
mov
pop
sub
loope
and
inc
jnp
andl
inc
fsubl
mov
add
ret
or
xlat
subl
pushf
stos
and
and
xchg
into
inc
xor
into
stos
mov
adc
cmp
cli
and
iret
mov
nop
in
iret
aaa
lods
ret
cs
in
sbb
in
adc
sar
scas
pop
or
and
cmp
mov
mov
inc
stos
pop
test
and
push
cmpsl
into
dec
rolb
dec
push
xchg
add
lret
jp
aaa
sbb
dec
cmpsl
gs
js
jns
pushf
jbe
mov
int3
mov
lcall
notb
xorb
sbb
shr
enter
cmc
in
fnstcw
scas
sbb
cmpsb
mov
mov
jp
push
or
jecxz
scas
push
dec
cld
mov
repz
cmc
sub
fs
lock
lret
sahf
xor
xchg
dec
iret
push
push
mov
hlt
js
psllq
movsl
push
mov
adc
les
adc
add
cmp
sbb
xor
stc
add
mov
ficoml
adc
fsubrp
cs
fwait
inc
xorb
adc
in
add
out
lret
nop
test
adc
and
sub
sub
clc
jne
jp
ja
popf
sub
jno
aaa
mov
adc
xor
aas
pop
arpl
jbe
daa
fstp
jle
or
fiadds
repnz
push
sbb
adcl
pop
ljmp
sub
jae
pop
cmp
xchg
lea
mov
dec
lcall
cs
pop
ficoml
jnp
cmp
add
pop
add
mov
repz
int3
sub
mov
push
mov
mov
fistpll
sahf
pop
jne
add
sbb
fstpl
cmp
jp
pop
mov
sub
sti
adc
outsl
cmp
int3
jns
sbb
sahf
mov
inc
dec
subb
aas
jns
stc
aaa
popf
pop
mov
pop
lret
cs
lahf
jne
jge
and
fistl
out
in
add
data16
test
jno
push
add
lods
and
in
push
out
sbb
cmp
xor
push
inc
mov
test
fbstp
and
or
push
lcall
push
lcall
int
mov
lahf
roll
inc
push
pop
stos
pop
mov
or
adc
dec
lcall
orl
sub
push
add
adc
dec
pop
sub
mov
aas
adc
loop
lods
mov
or
mov
cmp
adc
mov
adc
xor
push
pop
shrl
or
js
inc
sub
or
lcall
sarb
aam
add
rcr
inc
or
lods
lods
pavgb
sub
in
pop
jbe
xor
mov
or
das
movsl
xchg
add
inc
icebp
stos
mov
andb
in
sub
gs
mov
xchg
and
call
mov
dec
les
lret
ret
stc
fwait
dec
mov
mov
rorb
sub
mov
fisttps
xchg
out
and
ss
call
dec
sub
int3
stc
loop
ss
push
dec
lret
notb
shlb
push
sub
movsb
push
or
jnp
mov
xlat
sub
jl
mov
adc
lock
mov
inc
cld
add
pop
push
mov
dec
insb
call
pop
jno
lock
pop
enter
pop
outsb
xor
add
js
xchg
jno
push
mov
outsb
cmp
outsl
std
xchg
jle
xor
lcall
test
cwtl
in
jnp
ljmp
daa
pop
jmp
inc
push
enter
test
ds
sbb
mov
push
arpl
push
dec
loop
xchg
cwtl
cmpsl
cs
mov
xchg
sbb
sbb
seto
in
or
xor
jns
int3
sahf
mov
push
mov
rolb
pushl
mov
inc
sub
mov
ds
xchg
sysret
dec
mov
sub
out
rolb
xchg
int3
mov
xchg
jp
adc
lcall
adc
sahf
loop
sarb
jle
ljmp
pop
loop
push
mov
int3
push
push
call
in
cmp
mov
cmpsb
mov
push
fs
push
fwait
lret
inc
cmovnp
insb
aas
push
lds
ds
rcrl
orb
dec
lock
and
sub
pop
dec
test
mov
int3
adc
pop
stos
adc
mov
pop
pop
int
sub
push
inc
je
or
mov
ja
sub
cmp
aas
aas
dec
fisttps
mov
and
pop
fnstenv
test
mov
out
icebp
jns
nop
jmp
lret
pop
jo
mov
xchg
hlt
addr16
pop
xchg
setns
inc
movsb
andb
lcall
xor
cwtl
and
clc
cltd
dec
scas
nopl
cld
dec
push
fildll
mov
mov
xchg
mov
jmp
xor
mov
xor
push
repz
mov
call
mov
adc
add
adc
pop
enter
mov
pop
push
addr16
mov
and
imul
lds
rclb
stc
mov
push
imul
lahf
daa
outsb
clc
int3
dec
test
sbb
popf
leave
jae
sti
rcl
in
das
testb
cmpsb
or
mov
js
and
sub
xchg
mov
stos
mov
jbe
pushf
push
inc
add
sub
xchg
or
sahf
nop
dec
pop
mov
xchg
push
loopne
xchg
lea
mov
xlat
pop
and
sbb
pop
mov
cmc
and
and
sbb
iret
dec
mov
mov
je
mov
sti
sub
jecxz
mov
in
mov
leave
cmp
xor
inc
out
aas
push
ds
cmp
push
ds
mov
dec
jmp
inc
hlt
xor
es
pop
sbb
mov
push
insl
scas
inc
xchg
mov
xchg
inc
jnp
adc
inc
adc
xor
repnz
outsl
or
clc
outsb
jbe
xchg
mov
xchg
popf
in
addb
inc
mov
es
lea
lock
xchg
dec
cli
popf
out
shr
push
inc
or
test
pushf
xor
filds
sbb
sahf
inc
inc
cmpsl
addr16
xor
dec
push
mov
sub
jno
js
daa
push
cld
lock
xor
pop
xchg
jl
pushf
js
bound
adc
fs
jg
cmp
push
mov
push
ret
adc
dec
pop
sbb
in
mov
int3
dec
leave
or
pusha
xchg
pop
fildll
and
cmp
xchg
push
pop
std
jge
mov
cmc
neg
jnp
or
insb
lahf
mov
mov
sbb
out
cltd
cs
dec
cmpsl
insb
pop
adc
dec
sbb
sbb
fdivl
jnp
inc
pop
pop
cltd
push
and
pop
xchg
inc
insb
sbb
mov
rcrl
das
mov
add
lret
jg
mov
push
stc
sub
dec
cmp
inc
insb
mov
inc
stos
enter
pop
std
in
stc
sbb
lea
addr16
cmp
fstpl
cmp
lret
jecxz
mov
scas
dec
test
add
and
ja
dec
mov
aad
sub
das
lods
xlat
jno
sahf
rol
lahf
popa
and
cmpsb
pop
mov
ficomps
or
enter
ds
fwait
dec
addb
lret
js
cwtl
hlt
xor
mov
jns
pop
mov
gs
fwait
out
push
ljmp
sbb
test
xor
pop
mov
andb
aam
dec
aaa
add
int3
dec
jle
cmp
sbb
sbb
mov
int
lret
lret
test
pop
xchg
pop
stc
jb
in
imul
mov
mov
imul
or
std
pushf
sub
lret
jg
adc
adc
mov
push
xchg
push
mov
adc
pop
pop
jp
push
clc
push
das
lods
xchg
int
adc
xchg
add
gs
fstl
sbb
mov
add
or
inc
xchg
lcall
mov
inc
sbb
sub
push
push
clc
pop
movsb
adc
and
jbe
out
test
jb
enter
inc
lods
adc
mov
push
fs
jmp
push
mov
stos
pop
ss
lahf
cmpsb
add
pop
or
sti
test
xchg
or
negl
jo
jp
stos
mov
cmp
mov
outsl
stos
mov
sub
jae
aas
adcl
sbb
jp
repz
lret
cwtl
or
dec
jmp
add
mov
push
adc
mov
jnp
dec
loopne,pn
xchg
mov
mov
mov
or
xlat
jl
daa
int
cmp
dec
dec
mov
enter
int
jno
rclb
mov
jge
xchg
aaa
lock
int
ficomps
sub
and
nop
xor
sahf
sub
dec
dec
in
or
lahf
adc
enter
dec
sbb
dec
and
adc
pop
pop
cmpsb
sub
dec
lcall
mov
mov
cli
faddl
out
negb
lea
arpl
jg
fwait
aas
gs
cmpsl
jne
and
js
lret
mov
sbb
push
daa
in
push
mov
ret
adc
xchg
xchg
xor
pop
es
xor
rcll
js
rolb
lods
mov
sbb
dec
nop
ljmp
aaa
stos
inc
jnp
outsl
and
mov
jmp
xor
xchg
and
pop
outsl
push
xchg
loope
test
or
shrb
in
pop
push
enter
stc
outsb
dec
adc
or
pop
sbb
pop
inc
shl
inc
jle
adc
hlt
add
push
lock
dec
mov
jecxz
push
adc
push
lret
addr16
pop
inc
ret
pusha
popa
data16
push
scas
add
xchg
mov
or
jnp
xlat
inc
aaa
or
pop
nopl
inc
jecxz
pop
rcrb
cwtl
jmp
mov
int3
hlt
pop
pushf
add
aas
push
sbb
xor
dec
xchg
lea
push
add
hlt
pop
cmpsb
fdivrl
loopne
xor
cmc
mov
pop
mov
data16
and
dec
pop
adc
sbbl
mov
jnp
inc
jno
add
or
lret
mov
outsl
sub
mov
lea
add
cltd
cltd
lods
inc
or
sbbb
jnp
sbb
bound
push
ret
mov
mov
pop
sub
pop
ret
rclb
pop
sub
sub
sbb
lcall
cmpsb
test
stos
push
in
add
data16
sbbb
xchg
add
push
sbb
out
pop
add
sbb
pop
cmp
inc
les
inc
mov
jmp
aas
inc
cli
scas
jns
mov
neg
aad
lods
jg
xchg
fsubl
mov
or
fptan
stos
cli
inc
pop
hlt
adc
out
mov
lcall
jo
and
xchg
cmpb
js
ds
mov
inc
inc
es
int3
sub
adc
cmp
cmpsl
inc
andl
add
add
add
mov
je
rcl
mov
hlt
push
fxch
lock
mov
std
lahf
push
xchg
xor
addr16
popf
push
in
dec
movsb
dec
arpl
mov
mov
lcall
nop
adc
add
movsb
cmpsb
add
std
scas
orb
mov
fs
loope
shrb
shll
and
data16
fiaddl
test
icebp
xchg
xchg
out
aas
mov
out
inc
dec
adc
or
mov
out
jnp
push
adc
mov
xlat
rcr
popf
adc
sub
xor
or
mov
push
sub
and
jb
data16
cs
fs
mov
bound
filds
lcall
test
popf
lcall
cltd
shrb
fldcw
mov
ret
rcr
cld
push
jne
sti
pushf
add
or
jae
pop
loopne
shlb
jecxz,pn
fnsetpm(287
cmp
pusha
pop
and
sub
cmpsb
jl
lret
fidivs
clc
repz
inc
sahf
add
out
pop
nop
fidivl
lea
insb
in
loopne
clc
pop
add
cwtl
xor
loopne
repz
xor
push
sub
outsb
aad
xor
push
sub
add
mov
ficompl
mov
ficoml
or
mov
ficomps
je
fcom
dec
xchg
or
dec
xchg
mov
mov
nop
jns
jo
pop
dec
sub
xchg
xchg
push
mov
jmp
and
push
push
pop
push
xchg
adc
aas
imul
push
movsb
loop
mov
ret
jae
push
mov
add
mov
mov
pop
and
push
pop
cmpsb
mov
pop
inc
outsb
loopne
enter
es
push
sub
test
pop
sub
shll
arpl
push
stos
xchg
mov
mov
ret
xor
jno
sbbl
mov
fisttpll
popa
fwait
jge
cmpsl
pop
cmp
lea
pop
push
aad
jbe
ret
mov
fptan
mov
popf
aaa
es
aad
pop
inc
lea
shl
push
cmpsl
pop
push
pop
orb
mov
mov
ljmp
or
add
inc
ret
fldt
imul
popf
pop
pop
inc
ss
sbb
test
fimuls
les
outsl
mov
xchg
or
xor
fsub
push
xor
mov
clc
or
pop
cmp
jp
pop
fidivrs
sbb
mov
pop
sar
sbb
ja
test
xchg
pop
pop
subl
mov
mov
lret
cmpsb
xchg
test
mov
daa
out
or
ljmp
das
mov
iret
xchg
inc
loopne
jns
inc
es
movsb
scas
lods
jp
inc
dec
push
add
inc
xchg
sahf
jb
loop
xor
aad
and
sub
push
popf
std
ja
jnp
or
push
add
or
jns
jge
push
ljmp
in
jmp
jl
ljmp
outsb
fisubl
cmp
sbb
mov
adc
bound
jae
outsl
cmp
and
mov
inc
adc
movhps
sarb
pop
nop
and
pop
sub
sub
add
or
in
fwait
shll
shlb
arpl
pop
jmp
pop
repz
in
xchg
cmp
xchg
test
test
jg
sbb
enter
mov
pop
jae
jge
add
fisttpll
pop
les
jo
pop
push
stos
repnz
push
test
cmpsl
jb
dec
xor
test
cmpsl
fwait
push
dec
dec
mov
sbb
test
adc
pop
addb
enter
mov
les
xchg
pop
pop
fisttpll
stos
mov
js
xor
out
test
es
mov
adcl
pop
and
jnp
jnp
int3
mov
in
sbb
xor
sti
stc
dec
fidivrs
adc
sbb
or
push
out
fwait
sbb
cmc
xchg
test
adc
sub
push
jnp
pop
pusha
pop
stc
push
jge
xlat
jnp
lds
and
rcrl
xchg
mov
clc
inc
push
or
sub
xor
push
rol
sti
push
ja
test
call
cli
out
jg
inc
cmpsb
xor
push
xchg
insb
into
stos
adc
lods
dec
lock
stos
xor
xchg
movl
cmpsl
negl
dec
pop
fstps
int
pop
out
mov
inc
decl
and
cmpsl
push
fs
xchg
in
stos
mov
test
dec
inc
popa
nop
lret
leave
mov
add
daa
test
xor
sub
and
call
add
mov
incl
push
cs
push
xor
fs
add
mov
jecxz
mov
xchg
adcb
push
outsb
out
fldenv
add
adc
xchg
xchg
sub
inc
push
pop
jb
ret
rorl
decl
jb
mov
imul
xor
xchg
adcb
xchg
dec
mov
das
add
xchg
inc
jbe
mov
inc
in
push
pop
sbb
ljmp
pop
sti
push
pop
xchg
movsl
push
xchg
loope
pop
mov
orb
aaa
and
pop
mov
push
icebp
popa
xchg
das
inc
ja
gs
xchg
pop
or
pop
pop
call
xchg
mov
subb
js
popf
cmp
test
xlat
in
inc
bound
adc
jae
js
inc
dec
xchg
popf
dec
inc
jmp
cmp
pop
sub
jno
mov
cmp
pop
popa
andl
or
cmp
add
add
hlt
in
notb
lahf
xor
dec
xlat
push
xchg
sahf
inc
xor
add
repz
xor
mov
fidivrl
add
and
fmull
imulb
push
fmuls
jno
enter
sub
cmpsl
jno
leave
sub
lret
cmpsb
mov
in
pop
shrb
add
mov
xchg
das
mov
push
imul
jmp
jp
ss
lods
pop
lret
fdiv
inc
inc
out
xchg
sbb
mov
pop
pop
repz
jp
sub
pop
cmp
gs
mov
and
fs
mov
xor
in
mov
in
push
dec
mov
inc
add
mov
add
sbb
cld
xchg
mov
movsb
and
pushw
pusha
inc
pop
inc
les
mov
cltd
mov
es
hlt
jae
mov
mov
pop
pop
repnz
pop
std
xchg
jp
pop
scas
add
xlat
or
fidivl
pop
push
xorl
mov
jl
addb
scas
sub
hlt
test
xchg
dec
and
out
out
int3
loop
and
inc
xchg
out
repz
sbb
lret
pop
adc
insl
icebp
pushf
jmp
rol
inc
fidivl
cmpsl
mov
stc
das
add
sbb
out
inc
cli
dec
test
pushf
adc
sub
hlt
cwtl
push
sbb
ja
sub
icebp
cs
jp
mov
test
cs
jge
jno
jg
fbld
push
les
out
testb
xor
push
decb
repnz
or
inc
leave
sbb
sahf
inc
and
mov
adc
pop
jnp
cmp
jge
fmull
push
in
and
xor
daa
outsl
test
cmp
dec
icebp
scas
hlt
pxor
int3
jns
cltd
sbb
or
mov
mov
sub
xchg
sub
daa
cld
adc
ja
pop
push
dec
xchg
mov
cmp
mov
mov
adc
and
mov
inc
xchg
lock
cmc
daa
xor
fwait
ds
dec
out
or
enter
test
xchg
cmp
ds
movsl
test
lods
movsl
in
stos
and
stos
std
dec
sub
loop
fbld
mov
stos
sarb
mov
popf
add
pop
push
scas
data16
hlt
sarb
xchg
inc
into
clc
es
push
ret
xor
mov
adc
or
adc
lret
pop
gs
xchg
lock
xor
push
dec
cmp
dec
loope
inc
adc
sbbl
push
in
mov
mov
outsb
adc
sbbl
pusha
cmp
adc
pushf
lcall
pop
inc
pop
jbe
pop
inc
push
outsb
mov
in
mov
sarb
push
lahf
cltd
pop
lret
out
cld
adc
xor
xor
aas
and
add
sub
scas
adc
cld
lea
or
pop
les
mov
les
sub
sub
iret
stos
shl
adcl
outsb
xlat
and
inc
sarl
cmpsb
data16
push
scas
cli
push
subl
mov
push
rcll
adc
pop
faddl
outsb
pop
add
jg
andl
rclw
and
shrl
add
push
sbb
loop
mov
mov
cmp
cmp
out
add
das
ds
jg
sub
and
sbb
test
es
mov
jb
xchg
xor
sbb
cmpsl
add
mov
pop
out
fimull
mov
out
aas
testb
nop
fisubs
popf
push
mov
jo
lret
leave
leave
mov
jmp
sahf
and
jo
pop
and
adc
popa
xchg
std
xlat
ljmp
jae
or
notl
mov
mov
dec
mov
dec
in
push
rolb
cmpsb
adc
sub
push
adc
leave
testb
ss
scas
loope
dec
push
ret
xchg
or
ljmp
xchg
rorb
jle
mov
or
lods
or
cmc
jp
mov
aaa
das
dec
shl
sub
add
leave
jecxz
push
cs
cmpb
daa
arpl
add
into
mov
out
push
int
loope
clc
gs
aam
adc
cmp
data16
add
or
inc
pop
inc
pop
jp
sahf
inc
jle
inc
icebp
mov
test
outsl
icebp
loope
out
sub
mov
fnstcw
fcomi
xchg
adc
int3
xchg
or
dec
cmp
bound
outsb
sub
push
or
lods
add
test
js
in
jne
movsl
sarl
push
or
scas
fmull
add
shl
sbb
mov
pushl
push
sti
movsb
lea
xchg
push
push
push
pop
psubq
or
sub
imul
xchg
jns
fldl
std
lods
pop
xchg
push
xchg
push
mov
or
movsb
js
idiv
or
dec
test
pop
in
ja
es
pop
adc
push
pop
mov
sbb
and
pushf
mov
cmpsb
jno
out
es
sbbb
pop
ret
out
or
mov
nop
das
cmp
add
sti
fwait
mov
sbb
loope
ret
clc
ret
stc
sbb
sarb
adc
aam
dec
dec
mov
jmp
filds
sub
mov
in
pushf
jp
sahf
mov
insl
xchg
dec
lcall
sub
mov
repz
dec
lock
sub
and
sub
add
jne
ret
sub
mov
mov
scas
lret
xor
lea
jne
leave
pop
cmp
cltd
ret
or
ret
mov
xor
inc
lahf
je
dec
sahf
lret
les
mov
adc
out
in
sbb
int3
lods
xchg
fstpl
mov
sub
testb
cmpsb
sar
sub
cltd
lret
lcall
dec
xlat
pop
les
sub
xchg
loopne
add
sbb
fwait
cltd
or
inc
aad
cwtl
pop
dec
pop
sbb
int3
out
out
ds
orl
pop
sub
adc
cld
adc
push
fcmovnbe
lcall
dec
stos
daa
dec
pop
shl
fdivrl
jns
jmp
or
push
mov
lea
or
or
stos
insb
into
daa
pop
jle
mov
stc
aas
popa
clc
cmova
jae
lcall
inc
mov
push
stos
add
jp
popa
jge
loope
in
jle
push
push
or
mov
jle
mov
inc
jns
pop
cmp
push
dec
pushf
cmp
adcb
pop
mov
shlb
push
cli
xchg
jns
stos
out
fcmovnbe
aas
add
and
dec
adcb
stc
fnsetpm(287
jl
ret
sub
cmc
shl
std
aad
subl
cli
jp
shl
scas
push
cmp
fsubrp
or
cmc
dec
fcomps
jo
or
stc
sti
xor
sahf
inc
jecxz
cmp
xlat
cmp
xor
sbb
repnz
jnp
xor
pushl
sbb
pop
stos
jmp
imul
mov
pop
fidivrs
movsb
lock
test
add
xchg
and
add
rorl
push
ja
jnp
sti
outsl
adc
fisubl
fs
push
push
cmpsb
adc
jecxz
inc
jg
mov
jbe
cmp
pop
inc
xlat
cmp
add
mov
pop
jmp
sub
push
adc
xchg
popf
sub
sahf
pop
movl
mov
shr
add
mov
push
jnp
jmp
jnp
inc
call
or
pushf
cmp
xchg
or
pop
sbb
cmpsb
sub
enter
sbb
adc
xchg
mov
outsb
adc
testl
cs
aas
xor
sub
add
aaa
pop
out
pop
push
pop
shl
pop
lock
push
mov
add
xlat
das
lret
cmpsb
pop
sbb
cltd
in
or
in
std
inc
out
xor
js
repz
mov
jae
xchg
mov
push
adc
dec
mov
fidivs
ds
fldln2
arpl
pop
ss
out
jns
notl
fldenv
xor
fidivl
imul
rol
xor
xor
sbb
pop
mov
adc
adc
addl
dec
add
and
insb
mov
jb
lods
jmp
pop
fbld
in
fsubr
lods
scas
lock
out
or
lea
adc
addb
lret
loopne
sbb
push
notl
in
pop
insl
xchg
fs
push
fistps
push
cs
adc
ja
add
jmp
jmp
xchg
push
ds
mov
push
ja
hlt
or
incl
cli
add
cld
mov
add
sbbl
push
add
xchg
lcall
xlat
andl
ret
xor
loope
out
xchg
push
fsubrl
lret
add
inc
addr16
clc
xchg
sbb
inc
and
into
stos
fsubrl
fcompl
sbb
xchg
inc
lea
aas
sarb
enter
or
dec
sub
int3
pop
or
aas
mov
add
mov
lea
cs
jnp
in
sub
stos
pop
lock
gs
imulb
sbb
lret
xchg
inc
push
dec
pop
adc
and
add
cli
xchg
xorl
in
jns
sbb
xchg
out
or
fneni(8087
add
adc
aas
xor
vmwrite
sahf
mov
outsb
outsb
jne
jp
mov
jg
inc
mov
push
mov
cmpsb
fstpl
add
xchg
push
pusha
cmp
xor
inc
sbb
push
leave
cmp
mov
push
aas
fsubrl
and
jp
or
ficoms
or
idiv
pop
dec
lret
outsl
sub
add
mov
loopne
push
in
xchg
pop
xchg
addr16
pop
or
je
push
push
cmp
add
hlt
xchg
movb
push
dec
sahf
cld
pop
adc
push
movsb
aas
bound
mov
lret
aaa
cli
mov
rcrb
jno
pop
and
cld
xchg
pop
clc
mov
xor
xchg
repnz
scas
or
or
adc
xor
in
aaa
add
push
dec
ds
cmp
mov
inc
cmp
pop
sub
test
cmp
dec
push
xor
jnp
sahf
push
jg
jle
sub
xchg
mov
lahf
push
lcall
mov
insl
mov
push
xchg
les
push
adc
inc
test
in
mov
cmpsl
adc
rclb
lods
sahf
jnp
push
and
push
sbb
test
fildl
push
mov
out
inc
mov
pop
sbb
ss
aaa
mov
dec
rcr
inc
fcmovbe
mov
mov
arpl
ljmp
push
jle
xlat
push
mov
add
sub
in
adc
out
jecxz
sub
cmp
jecxz
lahf
dec
jne
lret
pop
sub
aas
mov
fisubrs
shrl
sbb
pop
pusha
test
xchg
and
or
pop
jp
shr
adc
enter
pop
jp
cmp
pop
sbb
insb
push
lahf
in
sti
mov
fadds
or
xchg
sub
shll
insb
dec
xchg
rcrb
dec
stos
mov
dec
and
pop
xorl
out
fistpl
sbb
out
push
xor
rol
xor
mov
mov
sbb
test
jae
aam
jno
mov
test
out
leave
xchg
clc
push
adc
out
pushl
iret
dec
sbb
js
cwtl
bound
cmp
into
sbb
nop
loop
push
sub
pop
mov
mov
dec
out
int
aaa
xchg
xchg
add
lahf
cwtl
lock
jne
jnp,pt
pop
pop
std
push
fs
insb
cmc
push
mov
adc
jae
popa
mov
leave
int
add
cmp
sub
xor
adc
mov
lret
push
shlb
push
lods
cmpsb
push
addb
mov
ret
or
mov
cmp
push
mov
mov
ficompl
repz
fdivrp
int3
insl
sub
rorb
add
mov
sub
into
pop
adc
inc
enter
xchg
ror
sti
dec
sub
test
adc
test
mov
and
aas
sbb
mov
mov
dec
xor
fistpl
mov
pop
mov
jg
xchg
sahf
push
es
fisttpll
movsl
test
push
fstpl
out
or
fcoms
xchg
enter
jo
cmp
jns
add
aam
push
ret
sub
out
adc
xchg
cmp
dec
scas
stc
cmp
mov
leave
push
lahf
jno
imul
popa
notl
push
pop
pop
xchg
pop
loop
lcall
lds
iret
adc
or
xor
shlb
cmp
push
adc
int3
in
loopne
rol
xchg
stc
fdivl
fs
adc
icebp
loope
jns
aam
dec
add
dec
lret
ret
cmp
xor
test
inc
mov
hlt
adc
jo
cmp
mov
push
push
push
cmp
addl
or
movsb
mov
icebp
stos
dec
adc
pop
dec
stos
outsb
ficomps
es
dec
movsb
xchg
mov
pop
xchg
or
xor
data16
push
add
rolb
pop
inc
and
nop
adc
outsb
fimull
jmp
add
sub
insb
xchg
jge
push
xchg
addr16
imul
rorb
push
jl
add
sub
add
rcl
mov
outsb
add
adc
loopne
pop
push
mov
adc
test
push
mov
fsub
inc
mov
mov
inc
dec
pop
out
inc
sbb
imul
adc
cmp
and
adc
dec
int3
dec
mov
cmp
mov
sbb
pop
rolb
inc
lea
cmp
fidivs
loopne
pop
sti
movsl
add
divl
out
cmpb
xchg
js
jnp
adc
decl
jnp
jbe
or
push
mov
decl
test
ljmp
add
rorl
jb
inc
mov
xchg
dec
sbb
and
mov
in
arpl
ss
or
sub
out
pop
clc
xor
ljmp
add
add
add
sub
jno
mov
and
push
pop
insb
pushf
jns
adc
sbb
fisttpl
lret
in
push
mov
sbb
add
in
and
out
popa
call
xchg
xchg
adc
leave
outsb
mov
mov
dec
adc
add
cwtl
ret
jecxz
aaa
lds
mov
xchg
cwtl
in
adc
sbb
fisubrl
xor
dec
insb
std
sub
sahf
js
stc
sub
pop
add
inc
aad
cld
adc
cmp
test
cli
leave
sbbb
scas
fistps
pop
nop
loope
pop
lcall
mov
js
mov
dec
push
out
push
push
daa
clc
fildll
mov
sar
pop
out
and
es
or
add
sub
les
je
push
les
mov
pusha
pushf
test
mov
aam
inc
add
rcrb
sbb
sbb
ror
push
mov
pop
mov
xor
xchg
add
in
sub
enter
jp
ds
cli
push
dec
or
in
iret
dec
mov
mov
and
push
push
mov
mov
cmp
dec
push
inc
lret
or
pushw
pop
movb
or
bswap
mov
push
rcrl
repnz
out
add
mov
and
inc
out
in
adc
les
sarb
xchg
mov
add
xor
cmp
and
or
cmp
js
stos
push
push
xchg
roll
inc
xchg
in
rcll
out
mov
ja
jecxz
scas
gs
int3
mov
and
stos
ror
sbb
or
lret
or
mov
push
jmp
inc
mov
ret
fwait
jbe
cmp
xor
add
and
rorl
aad
jb
lea
xchg
mov
jp
adc
jnp
cmp
jno
cmp
or
dec
in
lret
and
adc
jne
jns
push
mov
sbb
cmp
xchg
or
dec
sub
sbb
pop
subl
sbb
pop
or
cltd
addr16
and
imul
dec
xchg
mov
sub
dec
jle
insl
xchg
cltd
dec
jmp
iret
cmpl
mov
arpl
adc
mov
nop
ds
data16
aaa
std
or
mov
fsubl
lods
ss
rorb
xchg
jge
jbe,pt
jno
cli
pushf
mov
outsb
dec
in
mov
inc
cmpsb
call
movsb
adc
aaa
sub
add
sub
pop
das
out
adc
adc
pop
fs
xor
adc
mov
jb
scas
mov
pop
data16
fsubrs
jno
cmp
movsl
push
dec
ss
pop
ss
jl
xor
sub
sbb
inc
jns
inc
or
jecxz
xchg
jmp
adc
jns
loop
lds
leave
lods
je
adc
lds
pushf
inc
push
aas
sbb
inc
xchg
mov
or
mov
lahf
lahf
rorl
stc
xchg
inc
imul
dec
testl
fcom
ret
sub
jb
rorb
fcom
mov
test
xchg
shrb
xor
divb
dec
mov
mov
cmc
aam
stos
xlat
pop
pop
push
imul
ds
adc
add
fnstenv
jg
pop
add
or
jae
cs
hlt
push
in
out
das
pop
sahf
into
add
mov
push
cwtl
int3
cmp
and
and
fbld
dec
mov
adc
sbb
and
les
mov
pop
fldcw
out
pop
dec
sti
loop
lea
std
dec
cld
addl
xor
mov
iret
sbb
xor
mov
insb
inc
inc
into
pop
iret
pop
inc
bound
or
adc
jb
pop
ja
rorl
divb
repnz
aaa
push
pop
push
out
cmp
sbb
stc
pop
or
cld
dec
mov
mov
cmp
dec
push
sub
or
dec
aad
outsb
movsl
xor
push
inc
scas
mov
pop
ljmp
sti
xor
mov
jle
add
pop
sub
push
pop
inc
lods
or
repz
jp
add
mov
js
aad
daa
in
aam
jmp
mov
dec
stos
xor
or
pop
popf
sbb
lea
inc
inc
and
dec
aaa
xchg
fists
mov
pop
imul
lcall
movsb
daa
lods
sbb
fistpl
jmp
je
pop
xchg
or
sbb
nop
stos
or
mov
lock
aas
fwait
adc
jp
mov
and
inc
cmpsl
xor
aaa
mov
pop
jo
sub
imul
js
dec
popa
out
int
mov
shll
inc
shrb
lret
fisubrs
and
mov
xchg
and
scas
sub
ds
adc
jo
sub
pop
sahf
call
and
sub
mov
aas
and
bnd
int
into
add
mov
jge
ficompl
push
inc
dec
cmp
aaa
cltd
pushw
inc
cli
adc
mov
jno
shrb
jnp
lahf
dec
ljmp
push
sbb
cmp
cmp
pop
push
pusha
or
lods
lret
add
cmp
mov
pop
sbb
cwtl
lahf
xor
testl
xor
xchg
or
push
xor
std
push
aad
repnz
jae
mov
jo
push
add
movsl
inc
add
jmp
xchg
dec
pop
sbb
mov
pop
jmp
lea
or
pop
mov
sti
mov
inc
out
sub
or
arpl
enter
and
and
add
or
sub
rcrl
insb
pushw
cs
xchg
pop
dec
inc
das
and
lcall
inc
xor
outsb
clc
jecxz
xor
push
mov
enter
and
pusha
mov
and
xchg
ljmp
test
lahf
sbb
pop
lret
insl
fists
nop
call
mov
add
fs
adc
adc
in
lods
popw
xor
iret
xlat
sbb
movsb
fiadds
add
int
test
cmp
xchg
or
jmp
adc
pushf
mov
lock
pusha
jno
mov
push
mov
lret
sbb
dec
and
inc
dec
aas
aam
aam
xchg
clc
inc
add
pop
or
in
push
xor
push
mov
outsb
aas
and
rolb
cmp
ds
lcall
sti
hlt
inc
fimull
and
das
xchg
push
dec
push
adc
pop
ss
dec
dec
add
out
outsb
add
test
sub
xchg
xchg
xchg
sbb
dec
out
cmp
in
mov
lea
in
lods
jmp
push
leave
outsl
inc
out
xor
sarl
xchg
loope
aam
fwait
pop
pop
fadd
pop
repz
fidivs
sbb
test
mov
lds
pop
or
lcall
adc
mov
xchg
ljmp
aad
inc
mov
xchg
leave
inc
mov
xchg
adc
or
or
in
repnz
cmp
sbbl
out
aaa
pusha
mov
out
das
loop
add
lea
xor
mov
add
fnstenv
mov
cld
lcall
rolb
dec
or
incb
loopne
flds
out
dec
xor
jb
add
xor
push
inc
xlat
je
testb
xor
inc
stos
ficompl
sbb
out
push
jne
imul
adc
cmc
ss
jmp
inc
sub
xor
xor
mov
out
mov
pop
in
sahf
imul
push
lcall
cmp
inc
xchg
test
add
dec
ja
push
lahf
mov
cmp
xchg
scas
sbb
pop
gs
into
mov
push
aas
clc
out
bound
sbb
pop
int3
loopne
ljmp
jg
xchg
in
push
setb
sub
sbb
mov
insb
stos
fs
into
out
jbe
sahf
adc
cmp
cmp
negl
rolb
jl
call
cltd
mov
or
mov
filds
shrl
dec
insl
mov
aas
pop
xchg
repnz
add
mov
movsl
out
dec
pop
es
add
mov
jo
mov
or
xchg
in
sbb
pop
jns
test
test
mov
shrb
jb
mov
stc
mov
popf
jnp
ret
xchg
insb
lcall
push
cmpsl
out
xorl
push
add
pop
imul
cli
push
sub
push
in
cmp
loope
xor
fs
add
ret
lahf
stos
inc
roll
stos
pop
mov
hlt
xchg
push
ret
in
jno
mov
mov
gs
xor
out
mov
sbb
push
push
cmpb
aad
fcmovne
xchg
cwtl
push
jmp
ret
jnp
xchg
xchg
xchg
push
adc
xchg
jnp
and
mov
in
push
inc
jno
fs
adcl
xchg
cld
push
dec
insl
mov
sub
sbb
cltd
and
sbb
xchg
dec
adc
addr16
roll
subb
cmp
cmp
and
iret
loop
pop
push
movsb
adc
out
insb
repz
xchg
mov
pop
int3
mov
test
mov
movsb
je
movsb
adc
jo
and
ret
test
cmp
jne
or
inc
sub
inc
ret
ret
insb
dec
es
mov
jo
sti
fidivl
std
jmp
jl
js
cmp
cwtl
pop
pop
ficompl
sub
xor
out
inc
leave
mov
cmp
adc
xor
and
push
xchg
add
sbb
cli
repz
inc
push
ss
inc
push
add
dec
and
jecxz
or
es
jp
gs
mov
lret
add
sub
mov
inc
adc
ja
mov
test
fs
das
mov
in
push
pop
xchg
sbb
push
mov
pop
pop
adc
push
outsb
dec
ja
orl
mov
dec
inc
xchg
mov
into
ljmp
and
sub
sub
xchg
mov
in
mov
popa
pop
and
mov
dec
and
aam
into
cs
lods
add
push
mov
sbb
jbe
push
sahf
xchg
push
loope
scas
pop
cmp
adc
cltd
sbb
out
fs
mov
push
xlat
sbb
pop
pop
lret
outsb
adc
xor
lock
push
insb
and
push
sbb
stc
addr16
mov
dec
shll
inc
xor
js
sub
outsb
pushf
sti
out
or
sub
daa
or
xchg
lret
xchg
xor
lcall
push
jb
dec
or
and
test
mov
inc
setp
nop
popf
imul
out
jb
clc
xacquire
lea
mov
adc
cmp
mov
insb
testb
push
pop
fcompl
adc
es
insl
mov
pop
adc
mov
push
xchg
incl
push
dec
stos
imul
dec
pushf
sahf
mov
and
mov
daa
jbe
sbb
out
add
push
xlat
stos
or
fidivs
sub
jbe
pop
inc
pop
movsl
lods
dec
xchg
pop
in
stos
or
sub
jns
xchg
jns
add
aaa
outsl
or
mov
cmp
iret
sar
push
sub
popf
jecxz
das
iret
lahf
sub
lods
fistps
pushf
pop
rclb
and
leave
adc
and
imul
cmp
out
fs
mov
mov
mov
leave
sub
outsb
in
jg
cmp
mov
lcall
inc
or
adc
arpl
mov
push
das
loope
and
popa
and
sub
in
mov
outsl
lods
aam
sbb
leave
addr16
push
test
or
jmp
sub
out
inc
popf
outsb
inc
push
pop
sub
sti
adc
ds
xchg
repnz
and
call
cmp
mov
adcb
jno
xor
mov
push
xor
dec
cli
into
mov
lds
pop
jle
fistpll
int
mov
push
mov
xchg
mov
sbb
and
stos
mov
cmovl
or
mov
imul
push
jp
sahf
lcall
arpl
inc
lock
jmp
push
in
mov
pop
ret
xchg
push
push
fs
dec
add
sbb
xor
loope
jp
maxps
push
adc
jle
jb
int3
jecxz
adc
mov
jle
daa
fiadds
cwtl
mov
andb
in
pop
pop
inc
adc
dec
outsb
cmp
inc
imul
fwait
lahf
cmpsb
push
ss
sbb
pop
pop
pop
sti
push
pop
sarb
and
mov
not
add
movaps
jns
frstor
dec
loop
inc
notl
mulb
lods
mov
and
xor
cmc
mov
hlt
sbb
mov
loop
out
or
xchg
mov
cmc
push
cltd
push
dec
or
lock
fcmovb
cmc
cmp
shlb
out
dec
mov
lahf
jecxz
xor
orl
shlb
loop
xor
mov
xor
arpl
sub
test
add
xchg
or
cwtl
inc
push
mov
add
fdivl
neg
sti
sbb
pop
sti
cltd
sbb
rolb
xorl
loope
outsb
popf
sub
insb
outsb
cmp
inc
inc
popf
pop
add
aaa
or
mov
fidivs
add
out
cltd
mov
pushf
add
ja
out
xlat
pop
stos
test
dec
pop
ret
ret
dec
xchg
push
scas
push
ss
icebp
sub
es
in
push
test
ljmp
imul
add
push
inc
imul
insb
insb
and
lahf
cmc
mov
xor
jae
pop
out
add
push
scas
inc
add
add
mov
hlt
lahf
sbb
inc
push
jle
jecxz
aam
jecxz
inc
call
ret
sbb
or
sbb
or
jns
dec
dec
ds
push
stos
jnp
pop
mov
dec
test
aad
bound
jge
mov
push
cmp
shll
pop
insb
lock
sub
aas
aad
test
adc
sbb
out
stos
pushf
cs
add
insl
fadds
and
add
add
push
or
pop
cmpsl
pop
inc
inc
xor
pop
rol
add
push
jp
sub
sti
or
orl
sbb
xlat
inc
push
loop
dec
xor
neg
pop
jns
popa
movsb
sub
mov
xor
jb
mov
cwtl
into
xchg
adc
pop
arpl
mov
movsl
push
sub
pop
hlt
not
and
movsl
pop
jae
inc
shrb
jp
add
call
push
int3
mov
lahf
sti
jo
fisubrl
push
sbb
testl
dec
es
dec
cmp
inc
mov
mov
jecxz
int
xlat
sub
jecxz
in
add
push
enter
scas
bswap
sbb
mov
dec
cmp
movsb
push
jbe
inc
je
int
mov
aad
dec
int3
addps
pusha
test
pop
lea
jnp
xorl
xor
out
pop
lret
adc
pop
pusha
xchg
arpl
pusha
sub
sbb
xchg
ror
mov
subb
lret
sub
sbb
lock
push
fisubl
jne
adc
push
or
jb
fisubrs
mov
xor
dec
adc
push
cmp
nop
mov
or
lret
ret
jp
dec
pop
dec
daa
in
call
adc
sahf
in
inc
mov
test
cltd
addl
pop
dec
ficompl
jp
dec
push
imull
enter
adcb
sub
push
shlb
jns
fstpl
cld
lods
cli
adc
and
pop
ja
dec
jno
xchg
mov
sarb
stos
dec
enter
inc
or
jp
mov
push
aaa
cs
js
gs
test
sbb
out
jmp
scas
inc
sub
out
jge
mov
xchg
jno
and
jg
jnp
mulb
sti
xor
adc
sbb
dec
inc
faddp
pushf
stos
test
sub
mov
mov
or
add
xchg
xor
cltd
sahf
enter
lock
dec
out
inc
adc
sub
jnp
pop
sub
jnp
xor
mov
or
cmpsl
or
mov
ficoms
arpl
push
cmp
jecxz
loop
leave
dec
push
sbb
repnz
aam
xchg
inc
and
inc
pusha
jo
jecxz
ja
pop
pop
pop
pushf
std
scas
xchg
and
mov
lods
aaa
xchg
data16
scas
push
dec
aad
xchg
pop
pop
icebp
push
xchg
inc
jns
shrl
jns
mov
jmp
push
pop
es
addr16
sbb
scas
rorb
add
cmp
addr16
adc
push
mov
aas
push
arpl
int3
push
push
mov
inc
hlt
sahf
inc
or
jb
and
jno
shll
call
pop
dec
xor
add
push
adc
jp
jge
push
and
sbb
add
or
out
addl
xchg
into
test
lahf
cli
cld
sbb
addb
stos
daa
repnz
cli
cwtl
arpl
inc
les
int
lret
movsb
mov
adc
mov
push
sub
jle,pt
and
adc
ss
adc
iret
sub
popf
outsb
sbb
xor
or
arpl
je
scas
jge
nop
popf
aaa
sub
cltd
addb
pop
add
cwtl
push
or
rcrb
and
testl
adc
in
mov
or
push
sbb
mov
mov
fcompl
sbb
cwtl
in
out
dec
sti
add
jns
add
cmp
movsb
cmc
dec
xor
insl
xchg
js
nop
jb
scas
or
mov
ja
pop
cmp
test
jbe
repnz
or
and
pop
cltd
dec
lods
dec
cltd
cmp
mov
dec
imul
subl
inc
pop
mov
or
mov
scas
mov
xorb
inc
mov
adc
pop
movl
mov
xchg
mov
or
cpuid
pop
cwtl
add
aaa
jb
fstl
stos
mov
imul
pushf
and
inc
and
add
test
sub
sub
neg
and
push
imul
insl
lods
test
inc
ret
out
lds
pop
mov
dec
or
clc
cmpsb
repz
inc
ljmp
fnstsw
shl
stos
mov
test
cmpsb
dec
dec
outsb
dec
push
mov
and
mov
cltd
mov
jns
lret
pop
test
pop
fs
inc
sub
jo
sbbb
sbb
es
stos
stc
and
out
mov
xchg
loopne
movsb
arpl
and
xorl
sbb
inc
cmp
movsl
xor
test
add
sbb
daa
pushf
rcll
push
stos
outsb
das
outsb
aas
inc
adc
sahf
dec
lret
andb
loopne
int
mov
ficoms
or
into
xor
addb
mov
pusha
mov
add
mov
adc
iret
mov
push
and
push
jbe
and
arpl
out
pop
inc
fs
xor
push
insl
sahf
scas
ss
add
sub
aas
ret
hlt
and
push
rorl
lcall
arpl
dec
xchg
mov
mov
xorb
test
xor
mov
outsb
mov
imul
jnp
movsb
stos
or
pop
push
stc
add
das
sub
out
dec
or
push
les
or
mov
rcrb
in
mov
cli
mov
mov
sub
mov
stos
dec
in
scas
dec
shll
inc
dec
lcall
orl
lret
push
inc
pop
lods
jbe
pop
xor
clc
aas
mov
lea
xor
xor
out
cld
clc
cmp
sahf
in
pop
jmp
push
jmp
mov
inc
pop
xor
int3
out
mov
shl
sub
loopne
shll
pop
jp
add
out
cmpsb
dec
cli
sub
xchg
hlt
outsb
popl
pop
outsb
or
push
lods
add
inc
mov
dec
jecxz
push
cltd
fisubrl
fcmovu
push
jns
scas
out
push
daa
sub
fbld
pop
popf
lods
xchg
pop
push
outsb
andl
xchg
lock
fisttpl
aam
in
xor
pushf
inc
sbb
add
test
lock
repnz
pop
subl
mov
push
cmp
mov
arpl
xor
mov
scas
xor
dec
aad
ss
jns
cmp
push
test
pop
test
test
push
roll
push
mov
dec
enter
mov
popa
frstor
pop
js
pushf
push
xchg
mov
lcall
inc
sbb
push
push
insb
sti
dec
push
decb
push
fldl
sub
ret
push
ss
sarb
pop
adc
pop
mov
jns
and
aaa
and
fnstcw
int
lahf
sti
mov
xorb
inc
push
or
add
ret
sbb
aas
cmp
push
dec
sbb
pop
sbb
pop
add
add
lods
leave
or
in
imul
fdiv
jmp
dec
in
leave
dec
xor
sarl
aam
addl
cltd
out
mov
rcrl
xchg
xorb
sub
ljmp
lea
aas
dec
bound
jne
stc
jo
sti
sub
das
sub
jne
mov
xchg
in
test
xchg
das
pusha
and
fdivrp
push
rol
inc
or
or
jg
and
inc
shll
mov
lods
pop
sub
lock
inc
mov
jnp
lods
stos
js
ret
cmp
mov
sbb
pop
fistpll
and
push
in
and
push
mov
inc
les
add
loope
xor
mov
mov
and
mov
sbb
add
lret
add
stos
out
div
mov
sti
push
pop
pop
pop
push
adc
fidivs
lret
adc
insb
iret
add
sub
mul
adc
inc
scas
mov
lods
push
push
jns
push
cmpsb
xchg
xchg
out
jge
sub
mov
xchg
pop
xchg
les
xor
pushf
pop
jp
mov
in
fimull
js
jecxz
fdivl
push
jb
fnstsw
xlat
jae
lds
hlt
test
pop
jne
xor
stc
pushf
dec
test
mov
xor
pop
shlb
cmp
or
mov
scas
xlat
and
push
mov
cmpsb
sub
in
jp
jns
xchg
iret
xor
push
in
cmp
loope
mov
push
xchg
sub
aad
mov
sbb
sbb
dec
and
xlat
subl
fadd
sbb
int3
sub
sbb
lds
jge
imul
icebp
jne
dec
sub
xchg
mov
add
icebp
mov
std
jno
in
xlat
and
andb
xor
or
inc
sahf
pop
out
push
push
mov
in
dec
cmp
testl
lret
loop
bound
fisubrl
clc
push
sub
das
add
cs
xor
xchg
loopne
lcall
xchg
out
inc
shll
pop
sbb
push
sbb
mov
push
imul
lret
dec
push
sahf
insl
loop
movsb
mov
mov
jp
cmp
mov
inc
lret
pop
fnstenv
leave
mov
ret
cltd
or
push
pop
rcrb
cmp
inc
jmp
test
cs
mulb
out
lcall
subl
lock
adc
leave
inc
dec
xchg
adc
push
inc
daa
sbb
fsub
sub
fdivrl
push
fcmovnb
stos
xchg
jno
xor
popf
adc
sbb
mov
and
inc
mov
sbb
subb
xor
ret
int3
pop
dec
mov
jmp
xchg
push
pop
popl
mov
xor
xor
mov
lea
cmp
sbb
es
add
and
leave
jmp
pop
adc
adc
mov
pop
fists
mov
stos
lcall
mov
packssdw
xor
adc
add
adc
xor
jbe
or
pop
out
gs
not
shrl
ret
stos
xchg
push
nop
stos
inc
dec
lcall
and
cmc
popf
xlat
xor
push
sub
push
leave
dec
xor
push
stos
ret
sahf
addl
and
mov
loopne
sub
lock
inc
pop
and
jp
add
adc
or
pop
fs
jne
add
fidivl
mov
jne
add
outsl
dec
add
mov
push
mov
pop
int3
adc
push
sbb
movsl
aaa
ljmp
add
divb
xchg
mov
xchg
out
mov
imul
dec
aad
or
lds
sbb
negl
aas
xchg
push
clc
jmp
div
xor
jecxz
add
dec
or
shrl
orl
push
pushf
ljmp
fisubl
cltd
insl
or
jnp
sbb
add
mov
test
add
idiv
pop
push
pushf
pushf
jmp
cmp
div
mov
push
push
cmp
mov
cmpl
jp
push
out
xchg
xchg
adc
push
loope
pop
mov
fdivs
inc
lods
test
icebp
andb
cmp
in
and
loop
imul
add
mov
and
pop
popa
pop
mov
and
mov
sub
mov
add
xorb
pop
iret
xor
lock
push
xor
push
out
add
int3
data16
jns
mov
lds
adc
test
add
lret
adc
rclb
lea
xchg
lret
mov
pop
pop
fwait
and
sti
pop
sbb
clc
cmp
lods
es
sbb
out
xchg
rcrl
jmp
xorl
sub
lret
or
sbb
xchg
ror
jo
mov
mov
xor
loopne
sbb
sub
mov
frstor
sbb
inc
adc
cmp
cmp
and
pop
in
cltd
lcall
dec
xor
out
xor
lods
pop
cltd
fldt
or
inc
pop
mov
je
pusha
jns
jnp
sub
sbb
fidivl
and
dec
cwtl
aas
loop
and
dec
sbb
outsl
lods
jnp
std
out
and
das
or
sub
rolb
ret
scas
cmp
int3
xchg
inc
or
ret
in
sbb
mov
sbbl
addr16
and
or
test
stos
insl
pop
xchg
jo
sahf
fidivs
cmc
mov
xchg
ss
in
dec
cli
push
out
shrb
sbb
mov
cmc
loopne
and
mov
sub
and
xor
xor
push
jmp
fwait
jp
dec
sub
jns
sbb
bound
test
mov
pop
adc
cmp
jns
movsb
lahf
inc
sbb
sub
pop
pushf
out
dec
sbb
sahf
scas
mov
shll
xchg
pop
pop
loope
xchg
jns
inc
mov
cmp
jg
mov
xchg
mov
xchg
out
adc
movsb
out
lods
pop
sbb
fs
dec
sub
mov
cmpsl
js
stc
ds
mov
sbb
dec
push
ror
mov
sbb
xorl
in
loope
or
fsubrl
inc
arpl
dec
iret
lcall
xor
push
mov
sbb
push
lcall
aaa
fbld
xor
scas
adc
stc
or
mov
mov
test
mov
mov
lock
out
sub
inc
rol
incb
adc
jmp
lahf
mov
daa
gs
addr16
mov
cmpsl
lret
push
repz
adc
cltd
fnsave
daa
lea
mov
add
pop
inc
in
int
inc
jo
mov
scas
sbb
push
les
in
movsl
in
imul
cli
add
addr16
loop
pop
jmp
inc
mov
dec
test
or
shr
jne
jl
fcmovnbe
push
fs
fmull
jle
sub
cmp
add
mov
cmp
xchg
inc
and
aam
xor
jg
push
xor
or
pop
sbb
mov
fstpt
sbb
push
pop
push
aas
xor
sbbl
cmp
out
sarl
pop
shlb
and
jnp
mov
cld
ds
inc
pop
je
addb
ljmp
or
data16
xchg
sbb
pop
inc
test
into
mov
mov
aaa
out
std
jbe
mov
cmpsb
xlat
fistps
jns
and
jge
call
fcmovbe
cmpsb
sbb
cmpsb
dec
aaa
push
in
jmp
inc
push
sbb
xchg
insb
js
nop
pop
sbb
sbb
adc
cmp
sbb
rolb
je
mov
add
lea
movsb
pop
push
test
or
mov
movsb
mov
out
iret
lds
push
dec
lds
cmp
lahf
cmp
subb
add
lods
lret
xchg
mov
pop
cmpsl
lcall
inc
rorl
sub
mov
mov
xchg
push
cmc
mov
cltd
testb
int3
in
sbb
push
dec
sub
push
push
sbb
inc
or
loop
cld
sbb
nop
dec
add
std
inc
or
add
jns
sub
pushf
lods
push
sbb
ret
sbb
adc
shr
popa
push
scas
cmp
loop
lods
pop
loope
xchg
lret
mov
in
es
ret
dec
xor
sbb
inc
ficoml
mov
xchg
gs
and
cmpsl
or
shl
or
inc
mov
les
pop
push
add
arpl
jb
ja
in
lret
lcall
dec
push
in
dec
ficoml
call
inc
cmc
loop
bound
push
ljmp
xlat
es
fcom
dec
jbe
aaa
push
dec
lret
insb
jae
addl
xchg
pop
mov
lret
loopne
xlat
push
stos
scas
adc
mov
pop
xchg
or
mov
mov
fdivrl
and
xchg
xchg
in
xor
cmpsl
test
lods
xchg
adc
or
je
sub
aad
cmpsb
inc
pop
jns
sub
leave
and
stos
aaa
out
mov
jl
pop
push
sbb
xlat
adc
test
or
leave
xor
push
daa
aas
pop
push
dec
cmpsb
pop
mov
test
mov
fwait
dec
mov
dec
int
test
orw
add
mov
lahf
test
xchg
sub
das
add
inc
add
fmull
pcmpgtb
fidivrl
js
push
cmp
and
dec
or
xor
sub
pop
call
push
fstpl
jp
mov
push
dec
test
lea
out
cld
mov
xchg
adc
loope
sarb
pop
push
lods
mov
daa
cmc
paddsb
call
add
sub
dec
cli
add
or
sbb
repnz
dec
inc
mov
push
or
insl
mov
pop
dec
dec
mov
pop
mov
frstor
scas
lcall
mov
sub
lahf
imul
out
xchg
pusha
adc
pop
ret
jmp
cmp
sti
and
sub
pop
xlat
sbb
inc
pop
negb
jnp
in
lock
arpl
mov
notb
sbb
and
int3
sbb
sub
clc
jecxz
inc
pop
adc
out
fidivrl
fcompl
aas
repnz
sbb
stos
push
sti
jnp
xchg
syscall
lret
repnz
cmp
xor
xchg
testl
sbb
hlt
decl
pusha
add
push
dec
lds
pop
mov
xor
xor
xorb
jnp
xor
jne
sbbl
sub
stos
xchg
aas
aas
mov
ret
xchg
jae
cmp
sbb
or
xor
xchg
and
or
mov
cmc
test
add
ficompl
inc
into
sbb
dec
pop
cmp
popf
lea
and
push
inc
adc
in
psllq
push
daa
push
loopne
jmp
sbb
ffreep
out
pop
or
cs
out
call
sub
enter
jecxz
push
xchg
js
sti
mov
cmp
or
cmc
inc
jnp
ds
mov
addl
subl
into
xor
test
cmp
fistl
jg
mov
lret
xor
sbb
outsl
xchg
shlb
lock
loop
and
dec
jl,pn
jne
dec
pop
shl
cmpsl
fmull
data16
pop
and
ffree
or
dec
bound
push
add
sub
sub
out
enter
lahf
cs
data16
pop
out
pop
and
xchg
or
and
aam
nop
and
jmp
inc
xor
pop
out
imulb
xchg
fs
jnp
aad
mov
lret
lods
int
adc
ss
and
jnp
sbb
std
enter
jp
and
outsb
faddl
push
lret
fstpl
test
shlb
add
cmp
insb
cmpsb
push
in
outsl
divb
mov
adc
sti
lret
and
jnp
and
js
add
lcall
or
outsl
mov
popf
jb
sbb
and
jle
push
lods
dec
mov
lods
push
outsb
jl
xchg
data16
push
pop
test
ror
jp
das
and
cmp
incl
les
jp
sbb
fcoml
int
fcmovnu
iret
addr16
in
dec
cwtl
xor
aas
ja
cmp
push
sahf
aam
adc
jmp
mov
and
pop
xchg
dec
mov
aaa
sbb
jecxz
fwait
push
aam
xchg
push
cmpsl
ret
mov
iret
adc
sahf
pop
jp
fwait
sahf
and
sub
nop
sbb
lock
pop
lods
sbb
inc
mov
jl
dec
jne
das
sbb
cmp
aam
xlat
push
mov
pop
lea
cmpsb
mov
dec
lcall
push
adc
and
testb
icebp
sbb
mov
lahf
lods
xor
dec
popf
test
xlat
push
sbb
sub
xor
in
mov
xor
mov
cwtl
lahf
outsb
xor
fdivr
sub
mov
xor
jl
aas
sub
sbb
mov
int
sarb
sbb
aaa
outsb
inc
pushf
orb
push
sub
inc
adc
jge
jbe
cwtl
pop
and
cmp
in
pop
mov
lea
and
mov
xorb
mov
test
filds
jecxz
das
sbb
and
pop
add
lret
cmp
push
ljmp
mov
xchg
pop
adc
push
and
cld
aaa
inc
inc
cwtl
subb
jp
inc
fwait
push
xchg
ljmp
mov
hlt
xchg
loope
into
push
mov
and
lret
adc
mov
push
fcoml
popf
pop
in
orl
or
dec
shlb
jno
pop
dec
testl
push
fmuls
sbb
jbe
xchg
inc
pushf
pop
outsb
xchg
and
movsb
lahf
je
pop
push
pop
mov
inc
adc
ljmp
sbb
cli
lcall
mov
push
mov
pop
sbbb
push
in
jge
out
mov
sbb
aaa
mov
jp
movsb
dec
iret
sbbl
xchg
ds
or
out
into
sub
mov
mov
xchg
popf
cs
pop
dec
jb
subb
arpl
dec
mov
dec
mov
inc
xchg
push
sbbb
sahf
inc
pop
pop
test
sub
jno
push
jne
imul
arpl
mov
fs
mov
cmp
cmp
and
aaa
in
or
out
stc
mov
sub
adc
push
loopne
int3
sbb
mov
mov
setg
cs
mov
add
push
popa
les
fstpl
stos
mov
pop
mov
out
push
push
mov
in
dec
in
pop
push
jbe
mov
or
add
pop
fisttps
les
inc
add
pusha
iret
hlt
test
push
pop
fs
jmp
inc
mov
push
int3
sub
mov
pop
push
add
arpl
in
jae
ds
inc
dec
cmp
push
dec
xor
and
ljmp
imul
mov
mov
dec
fstpl
loope
sbb
or
mov
adc
test
and
or
ljmp
lret
out
add
dec
stos
xchg
test
in
iret
dec
sti
fstl
and
push
dec
push
dec
cld
dec
outsl
cmp
lcall
cmp
sbb
insb
mov
and
mov
or
cs
pusha
and
xchg
incl
add
mov
push
stc
call
fwait
mov
fadd
das
pop
sbb
xchg
lods
pop
mov
mov
sbb
mov
and
push
xlat
icebp
test
imul
and
xlat
mov
adc
loope
in
xor
mov
mov
std
fistps
out
out
cmp
pop
mov
icebp
sahf
pop
stos
sbb
and
les
mov
nop
fbld
or
xor
scas
int3
xchg
adcb
xchg
and
jl
popa
xchg
jp
dec
cmp
mov
pop
mov
add
cmp
bound
jbe
add
cwtl
stos
loopne
lret
push
mov
in
test
leave
inc
lret
sbb
les
inc
xchg
jle
cmp
scas
adcb
aam
sbb
inc
or
ficoml
inc
push
push
sbb
dec
iret
movsl
sbb
push
ja
test
mov
add
fistpll
cmp
scas
ljmp
fistpll
fisttpl
insb
jb
add
cltd
xor
pop
icebp
bound
cwtl
int3
insb
mov
adc
mov
or
push
or
repnz
daa
rcr
and
pop
pop
push
push
cld
hlt
test
mov
scas
sbb
cmp
div
shrl
out
lret
jp
or
dec
and
movsl
dec
xor
push
mov
inc
dec
pusha
ds
push
adc
leave
fstpl
mov
push
cli
push
or
add
sub
ljmp
sbbl
push
ljmp
jmp
ucomiss
pushf
dec
fisubs
push
and
jp
test
iret
dec
adc
cmp
sbb
jl
lods
mov
mov
push
push
sbb
push
adc
sub
mov
out
and
idiv
or
test
sbb
add
lcall
js
push
int3
add
sbb
push
bound
mov
pop
ficoms
out
out
hlt
inc
xor
cmp
shrl
jge
ret
pop
pop
sub
aas
push
mov
test
add
mov
test
mov
push
imul
dec
data16
cmp
nop
mov
inc
aaa
add
jb
push
movsb
or
fstps
gs
daa
push
ja
imul
cmp
sbb
or
add
cmpsb
jle
mov
lods
rep
aam
sbb
inc
inc
out
arpl
cs
sbb
jno
add
jo
xor
jge
lahf
push
shrd
jno
out
inc
jne
enter
cmpsl
popa
xor
and
add
out
jns
test
mov
inc
std
aas
js
ret
jns
sub
inc
das
dec
lret
sbb
mov
dec
sbb
lods
popf
push
jecxz
add
sbb
and
dec
sbb
insb
push
orl
cltd
xor
pop
pop
inc
push
divps
lods
mov
aam
inc
jle
and
aam
pop
inc
sahf
jne
jge
cmp
idivl
mov
mov
lcall
push
sbb
dec
push
cli
mov
add
jbe
inc
lret
mov
repz
xchg
sti
mov
ror
popf
cli
lods
lods
fstps
sub
adc
sub
jmp
xor
fisubrs
inc
mov
int
jp
push
dec
sub
hlt
jp
cmp
add
pop
dec
pop
inc
sbb
push
add
popa
mov
repnz
aas
adc
pop
xchg
pop
jg
in
incl
add
pop
inc
pusha
popa
sbb
sbb
jge
aas
dec
jbe
in
mov
sbb
sub
jbe
cmp
push
mov
mov
mov
xchg
andb
add
mov
jmp
test
or
adc
out
js
lea
cmp
aad
inc
rcrl
imul
andb
aas
lods
inc
jp
imul
inc
mov
pop
cs
outsb
popf
aas
mov
iret
loopne
std
sbb
adc
push
das
rolb
movsl
cmp
not
xchg
out
test
sbb
pop
mov
insb
jle
lret
push
dec
push
push
adc
jg
sub
mov
and
icebp
cmp
ss
int3
mov
pop
test
pop
xorb
jg
dec
pop
jge
add
lahf
nop
push
jo
inc
enter
and
imul
imul
arpl
fadd
dec
enter
push
iret
xchg
push
pop
lods
out
pop
out
sbb
dec
mov
jbe
mov
xor
scas
fiadds
inc
mov
jns
cmp
ficoml
mov
mov
pop
inc
inc
imul
and
test
dec
xchg
mov
sbb
stos
push
sub
fs
subb
dec
je
xlat
cmp
adc
ds
test
jo
in
scas
inc
lea
xchg
or
cld
push
stc
je
popa
rorb
stos
test
jns
ret
stos
xchg
repz
out
call
imul
js
dec
ljmp
stos
xor
shll
ljmp
adc
dec
fidivs
sbb
imul
jbe
push
dec
xchg
jnp
add
pop
cli
inc
scas
add
push
jns
arpl
and
and
int3
out
mov
sub
pop
xchg
ja
xor
xor
mov
jmp
push
aad
pop
std
or
sbb
ss
push
test
mov
mov
sbb
dec
sbb
repnz
test
mov
sub
lock
lcall
outsb
loop
cmpb
stos
cs
push
jne
rep
test
xchg
inc
stos
mov
xor
bound
sbb
inc
xor
cmp
and
imul
lds
jae
outsb
pop
movsb
ja
test
mov
int
dec
add
in
cmp
loop
xlat
adc
adc
sahf
popf
es
mov
cli
es
cltd
lods
outsl
fs
mov
dec
mov
mov
out
addl
push
test
out
icebp
std
jg
ret
insl
imul
popf
sub
mov
popa
sub
and
pop
xor
int3
dec
xor
rcl
pop
xchg
or
pop
aaa
addr16
aad
sbb
mov
data16
bound
and
outsl
and
mov
js
daa
sbb
stos
mov
mov
pop
pop
jp
fdivr
aaa
sub
sub
inc
sub
decb
insl
lret
das
test
or
sbb
mov
mov
shlb
faddl
test
in
cmp
mov
int
mov
stc
shlb
data16
repnz
testl
adcb
imul
mov
sbb
inc
daa
inc
dec
mov
pushf
mov
xchg
jmp
xor
ret
daa
icebp
outsl
jle
or
pop
xor
repnz
add
insl
xchg
inc
cwtl
jno
push
pop
sub
push
and
fdivrl
ja
mov
lods
ja
shl
cwtl
sbb
dec
adc
pop
aas
rolb
dec
subl
adc
movsb
js
roll
inc
mov
jb
dec
aam
push
xchg
hlt
cmp
pop
adc
enter
dec
jb
xor
dec
stos
mov
pop
push
pop
lret
xchg
jne
test
sbb
push
mov
scas
inc
and
arpl
inc
movsl
leave
ljmp
cmpsl
stos
push
dec
hlt
mov
cld
xor
xchg
int
gs
push
arpl
lods
cld
daa
cmp
inc
daa
push
sbb
lcall
rolb
lods
dec
fidivrs
movsb
pop
xor
ds
in
mov
popf
sub
dec
insb
test
pop
push
sub
popf
stc
les
dec
call
lock
sub
or
jne
sub
mov
lret
push
enter
testl
movsb
cmp
add
xor
xor
arpl
mov
sub
insl
aas
pop
pop
loop
inc
sub
incb
push
jle
xor
test
or
loope
out
xchg
jbe
xchg
jne
shlb
stc
test
popf
ss
jb
sbb
sub
fs
cmp
push
pop
add
jnp
les
cwtl
push
xchg
pop
fistpll
in
scas
pop
stos
adc
mov
jl
scas
popf
mov
push
jne
fs
cmpsb
add
pop
mov
in
mov
test
rolb
mov
fstpl
testb
pop
rorb
jge
imul
push
ret
sbb
adc
scas
pop
jno
inc
or
lea
scas
mov
je
mull
pusha
dec
fimuls
es
testl
mov
push
pushw
xor
arpl
push
jle
adc
inc
push
or
sbb
pop
sbb
push
out
jne
jmp
xchg
lahf
testb
mov
popa
aas
cwtl
fdivrs
inc
insl
cld
add
test
ret
in
das
es
pusha
add
pop
bound
xor
and
pop
cld
mov
pop
pop
cmpsb
fidivl
sub
insb
jae
push
cmp
sbb
xchg
cli
cmpsb
movsb
insl
inc
push
pushf
cmpsb
mov
pop
inc
adcb
xchg
movsl
mov
mov
jmp
dec
adc
rorb
movlps
je
nop
cmp
ficomps
add
in
pop
dec
addb
or
dec
push
push
mov
scas
dec
aad
fnstenv
idivb
add
mov
adc
dec
xchg
or
mov
fbstp
mov
dec
mov
push
pop
repnz
mov
andl
adc
jbe
add
pop
mov
xchg
mov
jmp
mov
cwtl
xlat
xchg
jnp
jg
fdivrs
mov
lahf
add
insl
mov
jecxz
add
xchg
shrb
cmp
movsb
std
ret
add
loopne
lods
add
loopne
popf
pextrw
out
push
add
sti
mov
adc
shlb
fsubl
cmp
icebp
test
jae
incb
cmpsl
ficompl
aad
jecxz
dec
cmp
and
push
or
rol
rorl
mov
shrl
inc
push
mov
lods
push
movsl
insl
fadd
scas
pusha
es
out
fcmove
decb
sahf
sbb
pop
xchg
sbb
ret
ficomps
and
push
xchg
test
add
mov
andb
addr16
jne
dec
gs
jmp
sti
pop
sbb
dec
es
mov
add
bound
pop
gs
add
dec
test
movsl
jge
xchg
sub
mov
lods
mov
or
push
sub
xorb
and
popa
cwtl
add
bound
mov
sub
lcall
push
xor
lods
mov
sahf
into
repnz
jns
mov
mov
addr16
fdivrl
xchg
aad
jg
dec
adc
inc
insl
mov
pop
push
mov
xor
xchg
mov
sub
jbe
dec
lcall
loopne
cs
jl
imul
and
test
and
cmpsb
mov
out
jecxz
jne
or
icebp
mov
xchg
mov
adcl
sbb
mov
jl
mov
aaa
sbb
daa
cltd
xorb
mov
aaa
rorl
push
push
add
pop
mov
dec
push
cmp
stos
aas
xor
mov
mov
push
pop
xor
mov
aad
pop
inc
sti
cmpsl
aam
loope
jns
daa
push
sbb
jne
enter
aaa
fbstp
pop
push
xchg
adc
mov
pop
arpl
dec
adc
aam
inc
inc
add
push
push
movsb
pop
and
loopne
xor
pop
and
and
dec
loopne
pop
data16
jle
pop
jle
jnp
mov
pop
rcl
and
add
addb
pop
cmp
jl
push
pop
mov
imul
sarb
rol
arpl
mov
hlt
cli
pusha
sarb
popa
out
pusha
adc
add
adc
sbb
out
daa
movsb
or
rcrl
arpl
insb
pop
subl
pop
push
push
js
or
sub
xchg
xor
or
jmp
mov
lret
stos
dec
xchg
or
pusha
xchg
sub
sbb
mov
jmp
shll
dec
stos
shll
lcall
mov
sub
inc
ret
push
out
shlb
mov
jp
cmc
je
loopne
xchg
loopne
mov
sbb
rcll
sbb
pop
inc
outsl
mov
jmp
in
sub
xor
sti
ret
cld
inc
test
mov
dec
test
xlat
or
mov
nop
sub
fwait
lods
mov
push
mov
and
out
mov
fwait
shr
pop
mov
or
mov
mov
sbb
out
push
mov
cld
and
test
int3
fadds
cmpb
sbb
rcrb
dec
mov
cltd
sub
adc
cltd
enter
fildll
lahf
out
insb
into
xchg
jp
roll
hlt
ss
lcall
mov
popa
sbb
push
and
and
sub
xchg
xchg
push
and
adc
sbb
aaa
or
inc
push
pop
jmp
sbb
adc
incb
jbe
mov
int3
push
adc
adc
push
push
or
xor
lret
sub
pop
fs
fs
jle
pushf
xchg
adc
leave
aaa
xchg
and
jle
imul
ficompl
pusha
enter
aas
lcall
fistpll
xchg
pop
call
pop
xor
arpl
loop
mov
repnz
stos
push
add
sti
test
pop
or
mov
cmp
dec
inc
jle
insb
sbb
xorb
pushf
sub
lcall
lret
daa
or
xchg
add
das
rcll
push
out
and
sub
xor
xchg
push
add
jnp
dec
mov
test
pop
mov
cmpsb
dec
divl
rcr
jo
jmp
push
enter
mov
and
testb
xor
ljmp
add
push
insl
dec
cmpsb
cmp
adc
sub
xor
ss
or
outsb
sub
mov
out
or
sbbl
sub
mov
or
or
jl
cwtl
dec
psubsb
mov
mov
xchg
jnp
sub
rcrl
jb
in
out
mov
sub
ret
arpl
cmp
sub
ds
mov
out
lock
mov
insb
or
imul
clc
or
out
jno
or
push
cwtl
pop
lea
nop
push
pop
xor
xor
cvttps2pi
jae
push
lcall
add
jae
sub
sbb
mov
mov
movb
push
mov
pop
loope
xchg
or
decl
addr16
pop
sbb
pop
int
aam
mov
inc
push
inc
push
push
sub
push
loopne
sahf
rcrb
ret
add
sbb
inc
cmpsb
cmp
and
sub
and
push
bound
mov
lods
lea
mov
jae
or
sub
xor
adc
sbb
sbb
js
push
sbb
mov
movsb
xchg
and
sbbl
push
popf
and
sar
jle
mov
arpl
dec
mov
pop
or
dec
mov
mov
push
jp
cmp
loopne
aad
dec
push
bound
xor
pop
jnp
xchg
inc
inc
cmc
test
mov
lock
fcoml
sahf
ret
ja
push
pushf
mov
mov
add
push
mov
pushf
adc
shll
movups
xor
sbb
cmp
lret
push
out
and
pop
or
dec
jge
enter
popf
adc
inc
das
or
pop
std
add
arpl
inc
cwtl
xchg
xor
mov
fldenv
xchg
or
dec
mov
or
xchg
sub
cmpsb
js
test
hlt
xchg
push
add
cmp
out
xchg
idiv
mulb
mov
into
jae
insl
pop
xor
dec
ds
jp
adc
scas
mov
xchg
add
jle
iret
int
and
cld
ds
roll
mov
cmp
push
xchg
setae
cmc
cwtl
test
hlt
outsl
inc
imul
lret
mov
sub
testb
out
daa
xor
cmp
nop
cmpsb
arpl
ss
repz
inc
mov
stos
stos
iret
sahf
fwait
jp
in
movsl
jae
mov
rol
imul
adc
divl
mov
push
fwait
loop
sub
xchg
sahf
gs
jno
subl
nop
das
test
mov
sahf
sbb
mov
mov
adc
ljmp
enter
clc
push
hlt
into
push
sub
mov
dec
xor
add
jg
arpl
mov
ss
sbb
addb
fnsave
or
call
scas
xlat
xor
and
aam
repz
fcomi
and
and
sbbl
das
cs
lea
sub
dec
negl
push
mov
lods
in
insb
shlb
jecxz
mov
inc
adc
and
dec
inc
or
cmp
sbb
mov
mov
movsb
out
gs
loop
in
lods
clc
cld
lods
pushf
je
gs
loopne
or
xlat
cltd
sbb
hlt
pop
cld
mov
adc
jbe
std
push
or
mov
or
bound
in
adc
xchg
add
sti
nop
inc
js
push
mov
adc
in
mov
adc
add
int
js
cld
dec
pop
outsl
es
push
movsb
mov
mov
rcl
push
pop
fs
scas
dec
push
out
dec
jno
outsb
scas
mov
add
adc
adc
and
mov
xchg
js
aam
push
cmp
inc
mov
mov
shrb
dec
aad
mov
cmpsb
lock
in
mov
fistpll
or
dec
imul
idivb
inc
cmpsb
inc
push
xchg
rcll
sub
mov
out
or
fldpi
ds
js
jmp
sub
outsb
pop
mov
cwtl
dec
mov
mov
ja
fcom
add
jle
dec
inc
enter
adc
out
hlt
cmp
add
cmpl
loope
jge
sti
test
les
iret
sub
jge
call
in
lret
and
stos
push
mov
sub
sbb
add
ficompl
sbb
mov
cmp
add
mov
addb
out
add
aas
fldl
sub
out
or
cmp
mov
mov
cs
stos
jl
pop
jg
sbb
ret
fmuls
adc
jecxz
lods
test
inc
and
arpl
inc
pop
or
icebp
enter
orb
xor
mov
jg
jmp
xchg
pop
inc
popf
and
jnp
mov
aad
adc
add
imul
and
mov
dec
pop
mov
xchg
test
adc
mov
call
or
jo
mov
xchg
negl
add
test
popa
mov
and
icebp
pop
xor
sbb
mov
sbb
cmp
cwtl
aam
addb
mov
outsb
dec
sbbl
push
mov
jg
in
pop
sub
adc
int
xchg
mov
xor
rclb
mov
pop
addb
cmp
pop
push
cmpsb
dec
xor
or
scas
aam
sahf
pop
out
mov
cmpsl
mov
call
mov
pop
lea
mov
xor
das
in
out
sbb
lcall
ret
fistpl
insl
in
hlt
add
pop
shll
push
mov
lcall
push
pop
lods
mov
test
test
cs
jge
popa
push
mov
or
push
lea
mov
arpl
dec
loope
add
xor
addr16
sub
adc
fstpt
nop
iret
fsts
repnz
xchg
or
push
pop
xchg
pop
lret
and
ds
pushf
lret
or
out
mov
dec
imul
inc
jmp
fcoml
lock
or
lds
into
add
mov
cli
adc
out
push
leave
repz
sub
add
out
cs
add
ficoml
stc
jecxz,pt
nop
rolb
cmp
out
mulb
pmullw
xchg
fidivs
fwait
ss
lret
fidivrs
mov
mov
lret
mov
mov
xor
cmp
or
out
push
and
mov
push
push
or
inc
loop
jbe
cld
jne
aaa
jo
lret
inc
std
cmp
push
imul
jp
mov
call
jo
lods
mov
scas
dec
xchg
or
mov
sbb
or
popa
push
mov
pop
sti
pmulhuw
pop
mov
push
add
sbb
or
ljmp
scas
lock
pop
lahf
inc
cltd
xchg
sub
xchg
fwait
push
sub
test
ja
sahf
push
add
imul
mov
xchg
stos
adc
ret
mov
mov
nop
xlat
int3
lods
push
inc
push
xchg
popa
lcall
mov
cmp
aam
xor
iret
add
.byte
