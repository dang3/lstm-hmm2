jle
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
out
add
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
jmp
add
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
add
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
in
add
incl
sbb
inc
add
je
and
add
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
mov
add
add
inc
and
add
add
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
inc
add
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
inc
add
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
inc
add
test
mov
jne
inc
add
jne
lea
push
push
push
mov
call
add
test
je
inc
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
outsb
fiadds
pop
xchg
call
pushl
pushl
pushl
call
add
cmp
mov
je
inc
add
push
add
pop
movsb
je
inc
add
lea
push
push
call
test
js
inc
add
testb
jne
inc
add
mov
cwtl
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
add
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
add
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
add
inc
add
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
add
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
add
mov
je
mov
push
call
mov
mov
mov
mov
mov
add
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
add
add
addb
cmp
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
add
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
add
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
mov
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
inc
jmp
je
add
or
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
dec
jmp
add
inc
cwtl
shl
mov
add
add
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
inc
add
push
movsb
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
add
iret
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
add
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
pop
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
test
mov
je
push
xor
cmp
jne
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
cmp
pop
je
mov
mov
movl
mov
cmp
je
mov
push
call
mov
push
push
push
call
mov
mov
push
call
mov
pop
pop
pop
leave
ret
mov
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
movzbl
jmp
mov
adc
xchg
cmp
sbb
cmp
dec
xchg
cmp
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
push
push
mov
xor
cmp
je
mov
cmp
je
pushl
call
pop
pop
pop
ret
mov
cmp
je
pushl
mov
push
call
pop
jmp
cmp
je
push
lea
mov
cmp
jbe
push
xor
lea
mov
cmp
je
pushl
call
pop
mov
inc
cmp
jb
pop
mov
mov
push
push
push
push
call
inc
add
adc
test
mov
lds
jno
mov
push
call
pop
jmp
mov
call
push
pop
ret
push
mov
push
lea
push
mov
call
test
jne
and
lea
call
push
call
pop
xor
pop
pop
ret
push
mov
push
mov
andl
mov
lea
push
pushl
push
call
cmpl
je
mov
leave
ret
mov
test
je
mov
lea
push
pushl
push
call
jmp
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
mov
cmp
jne
mov
lea
call
mov
pop
mov
pop
xor
pop
call
leave
ret
push
mov
and
push
test
push
push
push
je
mov
mov
mov
xor
cmp
jne
cmpl
je
test
mov
je
mov
mov
call
test
je
mov
test
jne
cmp
jne
push
pushl
push
call
mov
mov
mov
call
mov
test
jne
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
push
mov
push
mov
add
xor
cmp
je
mov
cmpb
je
add
cmp
jne
test
jne
pop
pop
mov
pop
ret
push
mov
push
mov
test
je
push
mov
mov
mov
call
test
js
mov
andl
push
mov
lea
call
mov
mov
push
call
test
mov
je
mov
push
call
lea
call
xor
pop
pop
pop
ret
push
mov
and
sub
cmpb
push
push
push
jne
xor
cmp
je
mov
mov
lea
call
mov
cmp
movb
je
cmpb
jne
mov
pushl
mov
mov
mov
lea
mov
mov
call
mov
cmp
jne
lea
push
mov
call
inc
add
mov
mov
call
cmp
jne
incw
lea
push
pushl
call
mov
mov
mov
cmpw
jne
mov
call
decw
lea
call
xor
cmpb
jne
cmp
je
mov
call
cmp
je
cmp
mov
mov
jne
mov
mov
cmp
je
add
mov
incl
incl
mov
mov
mov
call
xor
cmp
je
incl
incw
push
push
pushl
push
mov
call
cmpb
jne
mov
cmpw
jne
mov
call
decw
cmpb
jne
decl
call
cmpb
jne
mov
mov
pushl
xor
call
cmpb
jne
lea
push
call
mov
call
pushl
call
lea
call
cmpb
jne
mov
andl
push
push
push
mov
mov
push
mov
call
cmpb
je
mov
testw
jne
lea
push
lea
mov
movb
movl
movl
mov
mov
call
cmp
je
mov
cmp
je
mov
lea
push
push
push
call
test
jns
movl
mov
mov
push
pushl
push
push
push
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
call
jmp
incl
jmp
push
mov
and
pushl
mov
pushl
mov
push
push
pushl
call
add
pop
ret
pushl
lea
pushl
call
test
jne
xor
ret
pushl
mov
mov
call
test
je
jmp
cmpb
push
je
cmpl
mov
je
incl
incl
push
push
mov
mov
mov
mov
pushl
mov
pushl
call
cmpb
jne
decl
call
pop
ret
xor
cmp
setne
ret
int3
int3
int3
push
push
push
mov
test
je
mov
nop
mov
mov
test
jne
mov
test
jne
pop
pop
xor
pop
ret
mov
test
je
mov
call
test
je
push
mov
mov
call
jmp
mov
call
test
jne
jmp
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
pop
ret
mov
cmpl
je
pushl
mov
pushl
mov
pushl
push
call
ret
push
mov
push
push
push
mov
mov
test
push
mov
je
mov
lea
push
pushl
push
call
test
jne
mov
pop
pop
leave
ret
mov
cmpl
je
pushl
mov
pushl
mov
push
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lea
call
add
lea
mov
xor
mov
push
mov
mov
mov
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
mov
lea
lea
lea
mov
mov
push
lea
lea
push
movl
movl
mov
movl
movl
mov
mov
mov
mov
mov
mov
mov
call
mov
lea
push
push
lea
call
mov
test
mov
mov
je
mov
add
push
call
add
test
jne
push
call
add
mov
mov
test
jne
test
jne
mov
test
jne
pop
add
jne
cmp
je
mov
mov
push
mov
call
mov
mov
mov
push
push
mov
mov
add
push
lea
movl
movl
mov
call
mov
mov
push
lea
push
push
call
mov
mov
test
jne
test
jne
mov
test
jne
test
jne
test
js
mov
mov
lea
push
push
mov
call
test
js
cmp
je
mov
mov
mov
mov
add
call
test
js
mov
mov
lea
push
push
push
mov
call
cmp
je
mov
mov
lea
push
push
push
mov
call
cmp
je
cmp
je
mov
cmp
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
xor
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
push
mov
push
mov
push
mov
cmp
je
mov
cmp
jb
mov
push
push
push
mov
call
test
je
test
jbe
mov
mov
mov
lea
jmp
lea
movsbw
sub
mov
add
add
test
jne
pop
pop
pop
ret
push
call
add
mov
jmp
cmp
jle
mov
cmp
jge
mov
ret
mov
push
mov
cmp
push
mov
mov
jg
cmp
jl
mov
mov
cmp
mov
jg
cmp
jl
mov
pop
mov
mov
pop
ret
mov
jmp
mov
jmp
mov
jmp
push
mov
push
push
mov
push
push
mov
push
mov
call
pop
pushl
mov
call
test
je
mov
test
je
cmpb
je
push
call
pop
push
call
pop
xor
pop
pop
leave
ret
push
mov
lea
push
call
mov
pop
mov
push
call
pop
ret
push
mov
push
push
test
je
mov
lea
push
push
call
mov
test
je
mov
lea
push
push
push
call
mov
test
jne
mov
leave
ret
xor
leave
ret
mov
push
call
jmp
push
mov
push
push
push
mov
mov
mov
mov
mov
mov
call
add
jne
mov
mov
call
test
je
mov
mov
mov
lea
push
push
pushl
push
call
cmpl
je
mov
cmp
jne
pop
pop
pop
pop
ret
lea
add
push
call
jmp
xor
jmp
push
mov
push
push
push
mov
mov
test
je
mov
push
xor
cmp
jne
call
cmp
je
mov
mov
call
pop
pop
leave
ret
cmp
jne
xor
jmp
push
call
cmp
pop
je
mov
call
mov
push
mov
call
push
xor
push
lea
call
mov
cmp
mov
pop
pop
pop
push
mov
push
jne
mov
push
call
test
js
mov
lea
call
mov
jmp
mov
dec
js
mov
cmp
jge
pushl
pushl
call
xor
ret
sub
fldl
push
fsubl
push
fstl
fldl
fsubl
fstl
fldl
fsubl
fsubp
fstpl
fldl
mov
fsubl
fsubp
fstpl
call
test
jne
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
mov
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
lea
fstpl
add
fstpl
fldl
fcompl
fnstsw
test
jnp
mov
fldl
lea
fcompl
fnstsw
test
jnp
fldl
sub
fstpl
call
fstpl
fldl
fstpl
call
fldl
add
fstpl
fstpl
pop
pop
add
ret
lea
jmp
lea
jmp
lea
jmp
lea
jmp
fldl
pop
fld
pop
fldl
fld
fxch
fstpl
fxch
fstpl
fldl
fstl
fxch
fstpl
fldl
fld
fxch
fstpl
fxch
fstpl
fxch
fstpl
fstpl
add
ret
lea
jmp
fldz
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fstp
xor
ret
fcoml
fnstsw
test
jp
jmp
fcoml
fnstsw
test
jp
fcoml
fnstsw
test
jp
fstp
mov
ret
push
mov
sub
andl
push
push
mov
mov
push
lea
cmp
jb
xor
pop
pop
pop
leave
ret
push
mov
push
push
cmpl
je
cmpb
movl
movl
add
dec
clc
push
movzbl
dec
je
dec
jne
push
push
mov
call
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
push
je
mov
mov
test
je
testb
je
mov
mov
mov
mov
and
je
mov
mov
mov
cmp
jne
test
je
mov
mov
cmpl
je
mov
push
push
push
mov
push
call
mov
add
mov
xor
pop
pop
pop
ret
xor
jmp
xor
jmp
mov
movl
xor
pop
pop
pop
ret
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
lea
push
mov
mov
adc
inc
add
adc
add
movl
movb
call
test
js
mov
lea
push
mov
mov
call
test
je
cmpl
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
mov
pop
xor
pop
call
leave
ret
mov
lea
push
call
test
pop
je
mov
mov
add
push
push
call
test
js
mov
jmp
push
mov
push
push
push
mov
push
mov
push
call
mov
andl
pop
push
mov
lea
call
mov
test
je
pushl
mov
push
call
lea
mov
call
push
call
pop
mov
pop
pop
leave
ret
push
push
call
mov
test
pop
je
push
push
push
call
add
mov
mov
xor
pop
ret
push
mov
sub
push
mov
mov
call
mov
test
je
movb
mov
test
je
mov
mov
call
andl
andl
lea
mov
mov
lea
mov
mov
mov
mov
cmp
jae
incl
mov
mov
lea
call
inc
add
mov
push
call
mov
jmp
lea
call
mov
mov
mov
pop
leave
ret
mov
call
pushl
mov
push
call
ret
push
mov
sub
mov
xor
mov
push
mov
push
mov
mov
push
push
call
xor
push
lea
mov
mov
call
inc
add
cmp
je
mov
mov
push
call
xor
test
js
mov
cmp
je
mov
lea
mov
push
mov
push
push
call
cmpl
movl
je
mov
mov
andl
lea
push
push
push
call
cmpl
movl
je
andl
lea
mov
mov
mov
lea
push
movl
movl
movb
mov
push
call
mov
push
lea
call
testb
je
mov
test
je
mov
call
mov
push
call
orb
andb
testb
je
mov
add
push
call
test
pop
je
lea
call
mov
push
call
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
movl
jmp
movl
jmp
push
call
pop
jmp
mov
test
je
mov
push
call
xor
inc
ret
push
mov
sub
push
push
mov
andb
movzbl
push
and
push
push
pushl
mov
mov
xor
incl
cmp
inc
add
mov
call
mov
orb
push
mov
call
mov
mov
cmp
jg
dec
lea
mov
call
decl
pushf
mov
fwait
xlat
cmp
mov
mov
xor
pop
and
xor
pop
xor
pop
leave
ret
mov
mov
mov
mov
mov
mov
mov
call
cmpl
mov
jne
mov
mov
mov
cmp
jae
push
push
mov
call
movl
mov
incl
cmp
mov
mov
mov
jge
jmp
int3
int3
int3
int3
sub
mov
xor
mov
mov
test
push
mov
push
mov
push
mov
push
mov
je
cmpl
jge
mov
mov
push
mov
call
push
push
call
add
test
je
push
push
call
add
test
je
orb
cmpl
movb
je
mov
mov
push
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
movl
movl
movl
movb
call
test
js
mov
mov
add
mov
mov
mov
mov
mov
mov
push
lea
lea
mov
call
mov
sub
mov
add
lea
xor
mov
movl
call
lea
push
lea
call
mov
mov
call
lea
mov
call
mov
call
test
js
mov
test
je
mov
add
push
call
add
test
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
mov
mov
mov
movb
call
movb
mov
movb
jmp
push
mov
sub
mov
xor
mov
mov
test
push
push
push
je
xor
cmp
mov
jne
lea
mov
mov
push
lea
push
mov
movl
movl
mov
call
cmpb
jne
mov
call
mov
mov
mov
mov
cmp
je
mov
shr
and
jne
mov
push
mov
lea
mov
mov
call
mov
cmp
je
push
lea
call
mov
lea
push
push
call
mov
cmp
je
mov
lea
push
push
call
cmp
jbe
mov
mov
push
lea
mov
call
mov
lea
push
pushl
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
add
cmp
je
mov
push
push
call
lea
call
lea
call
incl
mov
cmp
jb
lea
call
lea
call
mov
cmp
je
cmp
je
lea
push
add
push
mov
mov
push
call
test
js
cmp
je
pushl
mov
lea
mov
call
mov
pushl
mov
push
call
lea
call
mov
cmp
je
mov
push
call
mov
xor
call
mov
cmp
mov
je
mov
push
call
mov
cmp
je
lea
xor
call
mov
push
mov
lea
mov
mov
call
mov
push
lea
call
mov
lea
push
mov
call
mov
push
mov
lea
mov
call
mov
cmp
je
mov
cmp
je
add
mov
pushl
xor
push
pushl
lea
inc
push
movl
movl
mov
mov
push
call
pushl
pushl
call
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
incl
mov
decl
adc
mov
pushl
call
pop
pop
mov
mov
push
call
lea
mov
call
lea
call
lea
call
push
lea
push
mov
mov
call
mov
cmp
je
mov
cmp
jne
lea
call
lea
call
pushl
in
sbb
addb
push
lea
push
push
push
lea
push
call
cmc
lea
cwtl
add
add
roll
outsl
imul
xchg
rolb
add
pushf
movsb
mov
mov
movsb
mov
addr16
mov
clc
cmc
call
mov
add
add
add
inc
in
push
lea
push
push
push
push
lea
push
push
push
push
call
addl
popl
jns
add
add
pushf
add
ljmp
add
lahf
add
push
stos
add
loop
add
fldenv
add
iret
add
imul
in
mov
xchg
add
add
add
add
stos
push
mov
lcall
push
push
lea
push
lea
push
push
call
lahf
jne
push
add
mov
add
pop
add
mov
push
add
lcall
add
pop
popf
pop
add
ja
add
scas
roll
add
into
filds
leave
add
les
enter
lcall
push
push
push
lea
push
push
call
xchg
test
jb
roll
testb
add
add
mov
mov
add
add
icebp
add
add
iret
jnp
mov
push
imul
leave
add
add
add
add
js
fldt
add
pop
add
sahf
imul
push
push
call
mov
iret
testl
add
cmpsl
add
xchg
js
mov
add
add
xchg
add
add
add
add
add
loope
mov
add
adcb
mov
add
arpl
lahf
sahf
mov
xchg
jno
sub
pop
call
push
push
push
call
add
stos
in
add
gs
pusha
xchg
add
add
add
addl
aad
xchg
gs
jmp
add
into
add
pop
push
mov
je
add
add
mov
into
add
xchg
add
clc
imul
lcall
add
xorb
push
push
push
push
lea
push
lea
push
push
push
call
push
imul
add
js
sahf
add
add
leave
sti
into
add
add
sti
pop
popl
xlat
call
outsl
add
add
xchg
loope
add
add
cld
add
stos
add
js
add
push
add
jae
add
insb
mov
add
pop
fcmovu
je
int
add
test
in
fdivr
lcall
lea
add
int
add
push
push
push
push
push
push
call
lods
std
add
add
fs
in
add
mov
out
add
ror
repnz
add
add
add
mov
mov
jb
jmp
imul
cmp
shll
add
mov
add
cmpsl
sub
pop
ret
push
lea
push
push
push
lea
push
push
push
call
cmpl
mov
add
out
ljmp
fiaddl
add
mov
fwait
add
fwait
xchg
loop
popl
add
sub
lret
mov
xchg
sub
pop
mov
push
push
push
push
lea
push
call
add
add
add
mov
mov
jnp
add
js
fiaddl
add
jnp
add
mov
add
add
add
int3
add
lcall
add
add
out
add
add
shrl
add
mov
in
lcall
pop
hlt
push
lea
push
push
push
push
push
call
add
scas
xchg
pop
mov
pop
in
xchg
in
add
xchg
scas
jb
add
shll
add
add
ret
loopne
shrl
cld
mov
in
call
add
add
push
lea
push
lea
push
push
push
lea
push
call
test
nop
jbe
mov
xlat
stos
add
scas
mov
aad
mov
push
testl
jecxz
add
add
add
lcall
ret
add
lea
push
push
push
call
add
out
add
push
pop
add
add
icebp
add
add
add
add
add
pop
mov
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
addl
jmp
adc
add
add
add
iret
jmp
fildl
popa
add
addb
add
add
hlt
jb
add
add
add
out
add
add
lahf
add
int
add
add
push
mov
mov
add
leave
pop
sub
pop
xor
push
push
push
push
lea
push
push
push
push
push
call
movsb
jl
gs
push
jnp
add
mov
mov
std
into
add
add
stos
mov
out
in
add
add
cwtl
movsb
xchg
int
sub
pop
add
push
push
add
push
xor
add
ror
not
sub
xor
pop
shl
dec
pop
push
push
lea
push
push
push
push
push
call
add
add
mov
mov
mov
jge
add
mov
pop
stc
add
add
pop
lods
aam
add
xchg
add
add
add
pop
ret
add
cld
cmpsb
add
add
sub
pop
pushl
call
push
push
push
push
push
push
push
call
add
testl
jp
jb
rolb
jmp
cmpsl
mov
test
add
mov
in
xchg
int3
add
add
xchg
add
add
shrb
pushf
rorb
add
add
mov
sub
pop
mov
movl
push
push
push
push
push
push
push
push
push
push
call
add
add
add
lock
cmpsl
push
add
add
push
in
add
add
jbe
icebp
cmpl
leave
xchg
xchg
add
mov
int3
mov
hlt
add
jmp
jb
add
scas
data16
mov
icebp
add
add
jnp
into
mov
add
lods
stc
mov
lea
push
push
push
push
push
push
push
push
call
add
add
add
add
add
add
add
add
mov
int3
mov
add
in
bound
ret
add
ror
add
insb
mov
test
repnz
add
stos
xchg
add
lcall
push
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
mov
add
lods
leave
mov
add
add
test
add
cmpsb
mov
push
mov
test
stc
add
add
mov
add
popa
mul
add
xchg
add
add
outsl
test
add
rcll
out
add
popa
add
jno
in
in
pushl
push
push
push
push
call
push
add
add
pop
stos
jb
add
pusha
push
fs
push
mov
add
xchg
mov
call
push
add
repnz
jne
push
add
lea
fwait
add
add
stc
lods
sahf
add
add
aad
add
loop
add
xchg
add
mov
in
lock
pushl
push
lea
push
push
push
push
lea
push
push
push
push
call
add
jo
add
scas
into
add
fisubl
mov
add
cmc
pop
mov
add
add
jae
add
add
push
pop
scas
add
add
xlat
jbe
add
add
subb
add
lock
add
xlat
in
add
pusha
add
leave
add
mov
mov
mov
add
mov
sub
pop
call
push
lea
push
push
push
push
push
push
push
push
push
call
add
shl
pop
loop
jb
add
add
std
call
add
repnz
add
lods
add
add
pop
in
out
add
add
jmp
cltd
add
pop
push
mov
add
adc
mov
lret
add
lcall
jne
pushl
push
push
lea
push
push
call
add
fiaddl
jmp
push
add
fmuls
pushf
add
mov
add
add
rcrl
lcall
pop
cmp
add
jbe
stos
push
ror
push
xor
add
shr
sub
shl
add
pop
add
pop
push
push
lea
push
push
push
call
mov
out
add
jp
cld
cltd
add
add
sarb
mov
push
push
sbbl
add
xchg
in
loopne
stos
mov
jnp
sti
icebp
add
add
add
test
add
jb
mov
add
jb
add
add
add
add
lea
mov
int
mov
pushl
call
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
into
push
lret
jns
jbe
add
add
add
loopne
add
add
add
iret
pop
jbe
decb
fcmove
add
mov
jae
add
add
mov
add
xchg
add
add
lcall
inc
push
push
ror
inc
push
or
not
add
sub
rol
sub
pop
ror
shl
pop
push
lea
push
push
push
push
call
pop
push
cltd
jge
add
loop
pushf
xchg
add
iret
lds
add
add
imul
insb
add
mov
orb
add
add
shl
fcoml
push
add
in
add
push
pusha
sub
pop
push
push
lea
push
push
lea
push
call
icebp
add
mov
fildl
in
fldenv
add
fdiv
xchg
add
add
mov
out
add
mov
add
bound
movsb
add
scas
iret
data16
mov
scas
nop
add
scas
add
pusha
loope
pop
push
in
lock
lcall
add
cmp
pop
add
add
in
mov
lahf
fcmovbe
xchg
movsl
pushf
add
add
add
push
jge
xchg
bound
lods
mov
cltd
cld
stos
roll
add
mov
mov
ljmp
jae
xlat
jnp
add
xchg
add
fiaddl
cmc
jmp
sahf
jno
add
add
add
cwtl
mov
call
push
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
pushf
test
int
add
jmp
outsl
jnp
mov
add
mov
add
popa
mov
lret
add
lcall
clc
push
push
push
lea
push
call
add
in
add
jmp
mov
mov
add
add
in
add
in
add
add
add
pop
imul
add
xchg
add
jmp
xchg
add
fs
add
add
out
push
add
xchg
hlt
pop
push
mov
push
push
push
lea
push
push
call
hlt
jo
mov
cwtl
inc
add
add
jbe
insb
add
add
add
jp
add
arpl
popl
enter
add
add
sub
pop
add
add
push
lea
push
lea
push
push
push
lea
push
push
call
shl
add
push
push
test
popa
pusha
mov
add
outsl
add
push
loopne
jle
shlb
add
jae
mov
out
add
mov
popa
add
add
ret
add
adc
gs
push
call
in
add
ja
scas
add
xchg
add
xchg
flds
test
mov
add
add
repnz
mov
movsl
add
add
loop
les
jnp
imul
xor
int3
iret
iret
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
stos
repnz
add
loope
test
icebp
repnz
stos
add
add
cld
add
push
out
nop
mov
mov
jmp
push
add
jecxz
cli
mov
add
mov
je
jo
addr16
nop
add
mov
testl
xchg
add
cltd
pop
sub
pop
xor
push
push
push
push
push
push
lea
push
call
hlt
add
mov
lods
add
mov
ja
xchg
hlt
add
push
js
add
pop
add
add
add
imul
pop
add
push
push
push
call
jbe
int
mov
mov
lret
mov
add
mov
test
xchg
add
mov
add
xchg
lock
add
lds
jo
add
add
in
hlt
lcall
jne
push
push
push
push
push
push
lea
push
push
push
push
push
call
out
mov
add
xchg
jmp
add
xchg
pushf
popa
push
test
add
mov
add
xlat
push
out
jo
add
gs
pop
mov
xor
push
push
push
call
add
add
rolb
add
icebp
add
pop
ffreep
in
jmp
hlt
add
in
shlb
test
adcl
cmp
add
push
mov
mov
pop
mov
jge
je
add
add
add
lods
pop
add
test
jb
sub
pop
add
pop
push
lea
push
push
push
push
push
lea
push
push
push
call
add
add
add
cmc
pop
add
add
jmp
mov
add
xchg
add
mov
mov
addr16
popf
arpl
lcall
dec
add
icebp
out
int3
iret
iret
push
push
call
push
test
bound
test
pop
add
mov
scas
pop
popf
insb
add
jae
aam
aad
add
add
aam
push
lahf
add
data16
push
add
mov
xchg
add
add
jae
xchg
addr16
fcomi
add
sar
jns
add
add
out
pop
pop
add
add
xchg
jno
andb
aad
movb
add
in
clc
lcall
push
push
call
outsl
lcall
fwait
add
mov
add
add
mov
movsl
add
add
cwtl
push
add
leave
sub
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
push
call
add
orb
add
xchg
mov
sti
testb
ja
fwait
add
add
out
add
testl
andl
pusha
mov
sti
mov
xchg
add
add
filds
add
add
xchg
add
sub
pop
xor
push
lea
push
lea
push
lea
push
call
nop
xchg
add
xchg
hlt
je
iret
add
add
add
into
jl
mov
roll
lods
insb
cmpsl
sarl
in
add
pop
add
shrl
negb
add
fucom
roll
add
add
add
addb
out
add
push
sub
pop
add
push
push
call
loope
shl
stos
push
jmp
pushf
mov
cwtl
add
add
mov
fistl
jp
rcr
movsb
bound
push
scas
sub
pop
sub
push
push
push
lea
push
push
push
call
add
je
jp
add
add
push
loopne
popf
fs
shlb
mov
fistpl
call
push
add
sarb
add
add
mov
lret
in
call
jno
push
lea
push
lea
push
call
add
add
in
addb
ljmp
lods
add
out
add
out
cmc
mov
add
mov
add
je
add
xchg
add
loope
add
xchg
add
fwait
xchg
add
add
add
add
cmpsb
shlw
in
call
rep
pop
push
lea
push
call
add
xchg
pop
fldl
xchg
popa
rolb
lods
ficoml
scas
leave
add
push
add
js
add
add
lret
mov
in
add
repnz
aam
jno
addb
add
mov
out
lret
lcall
add
xchg
notb
add
push
sub
pop
mov
push
lea
push
push
push
push
push
push
push
push
push
call
scas
xchg
stos
je
xchg
add
add
nop
add
add
testb
add
jp
popl
add
aad
faddl
add
mov
pop
jle
aad
add
stc
pop
xchg
add
add
add
addl
imul
mov
in
fdivr
lcall
pop
in
push
push
push
push
push
push
push
push
call
lret
add
rolb
cmpb
pop
loope
test
addb
faddl
int3
add
mov
add
ror
add
xchg
add
roll
add
add
add
xlat
js
mov
clc
rcl
add
cwtl
add
shlb
sub
pop
add
add
push
dec
pop
mov
xor
push
inc
pop
mov
xor
push
push
push
push
call
xchg
add
mov
add
xchg
add
leave
hlt
add
out
in
add
imul
fcomp
add
add
push
addb
pop
addb
pop
add
scas
rclb
add
dec
sub
iret
push
push
push
lea
push
push
call
jo
mov
add
mov
mov
cmpsl
lea
movsb
mov
test
lcall
addr16
xor
mov
add
subl
mov
lds
subb
into
sub
pop
add
push
lea
push
push
lea
push
push
call
insb
add
out
out
add
add
mov
fadds
call
lahf
cmpsb
aad
nop
add
popf
fadd
add
int
loope
push
add
add
mov
test
add
sub
pop
add
mov
push
push
dec
sub
inc
push
or
inc
add
sub
add
ror
sub
lea
xor
pop
ror
sub
pop
push
inc
pop
pushl
push
push
push
push
push
push
call
call
add
jne
lea
add
icebp
test
nop
jne
mov
push
add
push
iret
add
add
ret
add
je
add
jmp
add
add
jb
sub
pop
call
push
push
push
call
add
add
jbe
add
add
int3
mov
int3
mov
lahf
sti
add
jmp
jl
add
push
leave
rol
clc
in
loopne
fwait
mov
mov
add
shll
mov
subl
mov
in
hlt
lcall
add
or
or
push
shr
push
xor
add
add
sub
shl
shl
pop
rol
shl
inc
pop
push
push
push
push
lea
push
push
call
push
in
add
add
push
mov
ja
add
int
test
out
add
test
add
xchg
rolb
ljmp
mov
rolb
fcmovne
je
pop
call
push
add
fcomip
add
roll
pop
push
push
lea
push
push
push
push
push
push
push
lea
push
push
call
int
add
mul
add
je
cli
out
cld
jl
add
pop
addr16
push
clc
jmp
add
clc
loop
mov
jae
add
iret
clc
jnp
mov
add
add
mov
sub
pop
push
call
push
push
lea
push
push
call
lcall
add
push
hlt
filds
xlat
fwait
pop
test
jae
test
roll
pop
add
lret
xchg
add
add
cld
add
add
add
lods
lods
mov
xchg
add
pop
mov
lea
push
add
xchg
fadds
clc
push
pop
push
push
shl
sub
lea
pop
push
push
pop
mov
push
push
push
lea
push
push
call
je
add
add
sarb
xchg
add
scas
pop
add
mov
bnd
lea
add
add
test
pop
jne
cwtl
fsubp
add
pop
add
add
push
push
push
push
push
push
push
push
lea
push
call
out
add
mov
push
sar
mov
std
gs
pop
add
add
ljmp
add
add
jbe
add
hlt
movb
add
pop
add
mov
xor
push
ror
lea
ror
pop
add
push
lea
push
push
lea
push
call
cmc
shlb
int3
add
loopne
mov
add
add
add
mov
add
add
sar
add
mov
out
roll
add
movsb
std
add
scas
testb
js
add
push
mov
fdivr
mov
lcall
push
push
lea
push
push
push
call
mov
mov
add
jmp
lret
mov
stos
add
add
add
ja
stos
sahf
in
add
pop
subb
push
jbe
push
add
add
shll
jae
add
push
js
add
add
movsl
mov
add
out
cmpsb
cwtl
add
lcall
inc
adc
out
int3
iret
iret
push
push
push
lea
push
lea
push
push
push
call
mov
les
roll
xchg
add
push
in
xchg
nop
add
test
add
add
add
add
jle
push
add
add
add
subb
lock
cwtl
add
mov
addl
add
add
push
push
push
push
push
push
lea
push
push
call
jmp
lods
add
sbbl
mov
add
add
mov
lret
mov
add
clc
xchg
mov
roll
xchg
mov
add
add
in
add
aam
mov
add
add
push
lea
push
push
lea
push
push
lea
push
push
push
push
push
call
add
je
add
lods
add
add
add
cmc
pop
mov
testb
jmp
add
add
add
add
lock
iret
ljmp
mov
call
fcomps
lock
push
push
push
call
add
sahf
lods
add
test
sahf
add
in
xchg
jae
in
enter
repnz
xchg
imul
push
mov
push
int3
jmp
sub
pop
pop
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
imul
jno
push
xlat
fnstcw
cmc
movsl
add
add
xchg
jmp
add
cltd
mov
loope
add
aad
mov
lds
fidivrl
add
add
xchg
fdivs
fldl
rclb
icebp
cmc
add
gs
flds
movsb
xchg
popa
leave
movsb
int
imul
pop
mov
push
push
push
push
push
push
call
add
add
addr16
and
mov
add
aam
data16
call
mov
add
add
add
orl
add
add
pop
xchg
sub
pop
xor
push
lea
push
push
push
call
add
pushf
fsts
add
mov
add
add
pushf
idivb
add
add
xorl
pop
add
add
mov
ja
lds
rolb
insb
add
fldl
sub
pop
add
push
push
call
movb
xchg
add
add
jae
jmp
add
add
add
mov
mov
push
popl
add
add
mov
je
add
fisubs
lds
lods
add
add
jp
fildll
xchg
add
jo
stos
addb
jne
add
jmp
loop
sub
pop
rep
push
push
push
call
xchg
stos
imul
fiaddl
add
mov
jns
jp
add
mov
mov
js
add
pushf
push
mov
hlt
lcall
dec
and
icebp
out
int3
iret
iret
push
sub
pop
or
je
push
push
push
push
call
add
pop
add
add
add
lods
movsb
add
lahf
testb
xchg
add
add
add
add
popa
add
icebp
push
add
mov
pop
push
add
add
xchg
lahf
add
scas
add
lock
mov
push
push
push
push
lea
push
call
add
add
xchg
pop
clc
lret
addb
repnz
push
out
add
mov
mov
incb
sar
jge
not
addb
mov
add
xor
push
lea
push
push
call
mov
add
scas
xchg
cli
lcall
mov
mov
out
jbe
leave
jbe
add
add
popf
jne
iret
rcrl
add
jne
cmpsb
push
add
aam
add
mov
clc
add
add
loop
add
lock
pop
add
push
push
push
push
push
push
push
push
call
add
add
loopne
jl
sar
andl
add
nop
roll
pop
in
roll
add
jge
loope
add
icebp
jnp
add
push
sbb
int3
iret
iret
push
push
call
scas
add
iret
sti
divb
add
add
push
xlat
mov
add
add
add
cli
add
push
cmc
cmpsl
in
add
add
jge
ror
loope
sarl
stos
mov
add
clc
lcall
adc
push
push
call
loop
pop
add
add
add
jge
add
push
add
fs
int
cmc
mov
add
add
mov
adc
call
pop
mov
sub
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
push
lods
jnp
mov
add
sti
rcll
add
aam
pop
pop
cmpsl
add
add
rolb
icebp
mov
push
add
add
push
loop
loopne
add
push
mov
movsb
jb
std
mov
mov
add
sub
pop
add
add
push
push
lea
push
push
call
les
add
push
xlat
add
jno
add
push
cmpsb
sar
mov
addl
ret
add
mov
add
gs
out
add
mov
div
sub
pop
push
push
rol
lea
pop
mov
push
push
push
push
call
cmc
int3
push
movsb
add
pushf
arpl
mov
sahf
ja
faddl
sti
cltd
ja
neg
movsl
ret
repnz
add
add
pop
flds
jno
add
roll
push
add
stos
in
push
mov
add
lret
test
adcl
lcall
add
push
lea
push
lea
push
lea
push
call
lods
add
jl
aam
out
add
loope
add
add
add
jno
pop
pop
add
add
cmpsb
int3
add
add
push
data16
sub
pop
add
push
push
push
lea
push
lea
push
push
call
mov
mov
mov
add
movsb
enter
push
add
movsl
insb
add
icebp
out
mov
jle
push
jmp
sti
add
jmp
jge
in
lds
sub
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
add
ljmp
movl
rcrl
ret
mov
int3
data16
je
add
scas
outsl
add
test
pop
add
lahf
push
pusha
add
int
ret
cli
test
out
fmuls
add
icebp
xchg
add
sub
pop
pop
push
not
pop
rep
push
push
push
push
push
push
push
push
call
fdivr
add
lret
add
add
fbld
mov
out
pop
aad
test
jnp
lds
stos
add
push
add
scas
enter
popa
testl
jge
jns
movsb
pop
hlt
add
add
add
add
add
add
add
stos
add
lcall
dec
sub
iret
push
push
push
lea
push
lea
push
push
call
stos
mov
add
add
add
js
mov
int
add
add
mov
mov
mov
test
fldl
add
add
lcall
leave
je
push
push
lea
push
lea
push
push
push
push
push
push
lea
push
call
push
leave
lcall
xchg
add
pop
mov
pusha
shll
arpl
shlb
movsb
out
add
mov
ffreep
xchg
mov
mov
add
xlat
add
fsubr
add
add
fdivr
lcall
repz
dec
pop
add
add
push
add
pop
rep
push
lea
push
push
push
push
lea
push
push
push
push
push
call
cmpsl
xchg
loop
test
xchg
in
icebp
fcompl
out
out
push
push
add
lret
pop
subb
fcomps
push
push
dec
not
shl
add
push
push
pop
add
xor
sub
lea
add
lea
pop
ror
xor
rol
pop
push
lea
push
call
hlt
add
add
cmc
add
mov
add
lret
xchg
add
add
pop
add
je
add
jne
in
pop
push
add
add
add
add
negl
sti
mov
lcall
add
add
sub
pop
pop
push
rol
add
pop
mov
push
add
pop
mov
push
add
pop
mov
push
not
pop
jmp
push
push
ror
dec
ror
dec
pop
mov
push
lea
push
push
push
push
push
push
push
lea
push
call
cmpsl
fistps
int3
add
test
jmp
add
nop
sahf
add
mov
add
sub
pop
add
push
push
push
push
push
push
push
push
push
push
call
cmpb
testl
jns
add
mov
cmpl
mov
sahf
add
add
add
add
adcb
cmpsl
sub
pop
push
push
push
push
push
push
push
push
push
push
call
jns
add
add
lret
mov
lds
add
jns
add
mov
add
loope
lods
loopne
add
div
sbb
add
into
add
fdivr
lcall
push
push
call
cli
add
loopne
add
cmpsl
aad
movsb
xchg
jb
add
add
out
test
fmul
int3
add
roll
sar
add
mov
clc
pop
push
push
push
lea
push
lea
push
push
call
scas
mov
xchg
xchg
push
add
pusha
add
add
cli
iret
add
add
rcrl
test
add
add
add
add
arpl
push
add
xchg
mov
jp
call
ja
int3
jmp
jae
sti
sarl
in
lcall
mov
push
ror
rol
pop
pop
push
push
call
enter
mov
ja
add
in
xchg
push
lods
out
add
add
std
jbe
cmc
add
cld
xchg
mov
add
sarl
mull
lret
popa
add
popa
fistpll
sub
pop
pop
pop
push
lea
pop
pop
push
push
lea
push
lea
push
push
lea
push
call
jb
pop
movsb
add
push
xor
add
pop
fs
cmc
add
incb
mov
rorb
push
add
add
add
cwtl
jae
jge
mov
jno
add
sub
pop
leave
push
lea
ror
pop
ret
push
lea
shr
pop
push
push
push
lea
push
call
add
pusha
xchg
add
lcall
in
out
ret
add
testb
in
loope
add
pop
mov
add
add
mov
xchg
add
filds
mov
nop
out
sahf
add
je
fucomip
movsb
mov
push
sahf
mov
add
add
add
add
add
hlt
lcall
in
add
push
dec
sub
pop
push
push
push
lea
push
push
push
push
lea
push
call
jnp
add
add
mov
mov
add
add
int
add
push
lea
push
push
push
push
push
push
push
call
add
push
ret
add
leave
stos
add
mov
je
int
jmp
lret
add
incb
jbe
gs
add
mov
mov
ficompl
add
sahf
mov
add
std
add
add
jge
jne
mov
add
add
push
push
push
push
push
lea
push
push
push
call
lret
add
int3
add
mov
add
push
add
lret
ja
int
imul
icebp
rolb
cltd
mov
mov
jae
jae
fisttpl
add
jno
sub
pop
push
movl
push
push
push
call
cmpsl
xchg
push
add
addr16
in
scas
add
rolb
add
add
add
fnstcw
push
fwait
movsb
add
add
in
hlt
lcall
inc
clc
call
out
rol
xor
pop
test
je
mov
push
push
lea
push
push
lea
push
call
pushf
push
add
mov
fildl
out
jmp
stos
popf
add
outsl
cld
cli
xchg
add
add
add
sahf
add
add
out
push
sti
add
aad
fistl
add
jne
xchg
add
add
cmc
add
shr
out
stc
sub
pop
pop
push
add
lea
pop
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
rolb
add
test
mov
add
int3
pop
lea
jo
cmc
je
add
mov
lahf
add
sti
add
add
stos
pop
insb
add
lds
add
aad
in
fdivr
lcall
push
push
push
push
push
call
cld
pop
imul
pop
mov
into
test
in
out
mov
ljmp
mov
push
arpl
aad
pop
add
add
in
in
lcall
push
push
push
push
push
call
movsl
frstor
add
pop
add
add
pop
add
mov
add
mov
in
add
mov
out
mov
int3
js
add
cmpsl
pop
sub
pop
leave
ret
push
inc
lea
xor
pop
push
push
push
push
push
push
lea
push
lea
push
push
push
push
call
mov
int3
pusha
out
fildl
push
add
lds
cld
jecxz
cwtl
pop
add
push
adc
sti
mov
stc
hlt
add
add
mov
cmpsl
add
add
nop
add
fdivr
lcall
in
add
push
shl
xor
dec
pop
push
push
shr
dec
pop
push
push
push
push
lea
push
lea
push
call
mov
mov
add
mov
add
pop
mov
pop
out
cwtl
testb
ja
pop
nop
in
add
pop
add
push
push
push
push
push
push
push
push
push
call
xchg
add
xorl
mov
add
movsl
add
mov
nop
fiadds
add
add
add
add
mov
testb
std
jo
jecxz
add
mov
out
add
rolb
add
out
add
mov
pop
add
leave
in
popf
sub
pop
testl
push
push
push
push
push
call
jne
push
add
je
add
pop
les
int3
push
add
push
pushf
add
push
add
lds
add
mov
mov
addl
push
sub
pop
push
call
push
sub
lea
pop
mov
push
inc
shr
inc
sub
pop
pushl
push
push
call
nop
jbe
fiaddl
jae
push
jle
fcoml
ret
jmp
jae
add
call
mov
add
mov
add
add
add
add
addb
sub
pop
push
push
push
call
add
lret
mov
add
fistpl
imul
add
add
add
add
add
add
aad
mov
add
mov
lahf
add
faddl
jmp
push
les
mov
add
pop
mov
add
jecxz
push
add
push
mov
clc
lcall
add
dec
xorb
cmp
pushf
lea
push
push
push
push
lea
push
push
lea
push
call
cmpb
add
mov
mov
add
add
stc
into
add
mov
add
push
mov
mov
icebp
add
popf
add
int3
jmp
add
xchg
in
add
pop
ljmp
orb
push
fildll
lcall
clc
idiv
incl
test
call
rolb
sub
ror
pop
pop
push
push
lea
push
push
lea
push
push
push
push
call
add
iret
push
add
add
add
int3
add
push
xchg
stos
add
test
outsl
add
add
add
icebp
nop
add
xchg
add
bound
data16
add
jl
push
test
test
add
jecxz
add
add
in
loopne
lcall
push
lea
push
push
push
push
push
push
call
in
filds
add
jo
pushf
cwtl
add
cwtl
add
stos
lahf
popf
mov
bound
loopne
in
add
add
fidivrs
add
add
add
add
movsl
mov
add
stos
mov
cmpsl
add
movb
push
jns
add
add
add
add
lds
add
pop
push
in
in
lcall
pop
push
inc
pop
leave
push
push
push
push
push
push
call
add
jae
add
call
pop
add
add
add
add
xchg
pop
add
add
mov
jecxz
push
arpl
add
add
jbe
add
add
add
stos
data16
xchg
sub
pop
ret
push
push
push
call
add
int
out
sar
mov
add
in
jbe
add
add
std
movsb
mov
mov
hlt
lcall
push
push
push
push
push
call
ja
mov
add
add
add
filds
pop
imul
add
popa
fiaddl
add
add
add
add
imulb
add
nop
je
aam
outsl
push
add
lret
add
add
add
add
fldl
call
mov
mov
add
push
dec
lea
lea
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
movl
add
mov
into
popf
pop
add
add
subl
add
mov
add
xchg
add
xchg
add
addl
add
cmpsl
movsl
add
or
jbe
add
pop
add
imul
lds
push
in
loopne
push
push
push
push
push
push
push
push
push
call
ja
add
jecxz
mov
add
iret
push
arpl
add
sti
pop
mov
jp
ja
sub
pop
push
push
push
push
push
lea
push
push
push
push
call
xchg
add
fdivl
add
ret
mov
pop
mov
pop
add
mov
jnp
sub
pop
movl
push
inc
sub
not
pop
push
push
push
push
lea
push
lea
push
call
gs
sti
add
mov
push
add
mov
mov
movsl
fucomi
add
pop
fs
add
nop
mov
add
mov
stos
add
lds
jmp
mov
rcrb
push
ja
rcr
insb
scas
repnz
lahf
cmc
call
push
push
call
imul
add
add
shl
push
nop
roll
add
jge
add
add
fs
add
mov
add
fwait
xchg
int
pop
add
sub
pop
push
push
push
call
fwait
aad
add
add
push
jne
mov
sahf
lret
add
add
cmc
mov
je
add
mov
xchg
add
in
add
arpl
mov
add
lret
add
jns
add
popf
loop
mov
add
cmp
call
lret
adc
subl
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
add
out
push
negl
ljmp
pop
pop
add
test
roll
test
rolb
popl
addb
gs
xchg
add
add
pop
add
xchg
mov
add
push
cwtl
add
mov
negl
data16
pop
add
sub
pop
cmpl
jne
pop
push
pop
pop
push
lea
add
not
pop
pop
pop
push
push
push
call
arpl
xchg
pop
filds
add
add
imul
add
fwait
add
add
ret
jmp
mov
rorl
pop
call
jae
xchg
stos
into
add
enter
add
data16
jecxz
add
add
sub
pop
leave
push
add
not
xor
ror
pop
ret
push
shl
add
ror
dec
pop
push
push
lea
pop
mov
push
push
push
push
lea
push
push
call
add
scas
test
add
shll
pop
push
in
movsl
add
add
add
cltd
std
jb
add
cld
add
add
pop
mov
add
add
mov
mov
mov
rcll
nop
add
faddl
cld
push
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
shl
stos
test
fnstenv
add
test
mov
jbe
out
add
add
outsl
add
lock
add
les
outsl
add
xchg
loopne
add
fcomps
push
push
ror
shr
rol
not
pop
push
push
push
push
not
shl
xor
shr
push
or
inc
add
sub
not
pop
ror
pop
push
dec
sub
pop
pushl
push
inc
not
shl
pop
call
push
lea
add
pop
call
push
push
add
sub
push
xor
add
inc
add
dec
ror
sub
sub
dec
rol
add
pop
sub
dec
sub
pop
push
lea
push
lea
push
push
lea
push
call
shrl
add
push
iret
int3
jmp
xchg
add
add
mov
out
add
pop
add
add
lret
in
mov
xchg
mov
addr16
add
add
add
add
add
scas
aad
add
jno
fnop
xchg
add
add
lcall
jne
push
push
push
push
push
push
push
call
roll
add
mov
pop
add
lea
push
test
xchg
add
mov
xchg
cwtl
cld
add
std
jbe
roll
leave
mov
add
out
enter
sub
pop
call
push
push
lea
push
push
push
push
push
lea
push
lea
push
call
xchg
lahf
lods
test
sbb
add
add
out
mov
mov
add
arpl
mov
add
add
add
pop
jl
mov
cli
add
jbe
add
add
mov
push
pop
pop
faddp
add
xchg
pop
pop
mov
sarl
in
fcompl
shrb
push
shrb
fildl
add
rol
lret
aam
pop
and
sub
pop
add
sub
ror
pop
push
dec
add
sub
pop
pushl
call
push
lea
xor
lea
pop
call
push
push
shr
push
or
not
add
xor
lea
sub
ror
shr
rol
pop
shl
sub
pop
push
push
push
push
push
call
std
out
add
push
rolb
push
gs
add
add
test
mov
mov
add
add
bnd
js
xchg
mov
add
hlt
add
sub
pop
pushl
call
push
push
push
lea
push
push
push
call
add
faddl
popa
pop
xchg
addr16
in
loop
pop
add
push
add
sub
pop
call
push
push
push
lea
push
push
push
push
lea
push
call
jns
add
add
add
cmpsb
jl
in
scas
lahf
clc
jecxz
add
add
add
int3
dec
mov
add
clc
add
add
add
add
add
add
mov
sub
pop
mov
lea
push
sub
sub
sub
pop
sub
push
xor
sub
pop
mov
shr
push
rol
shr
shl
pop
add
push
push
push
call
add
push
in
add
movsb
add
scas
add
stc
add
pushf
jbe
cltd
mov
add
add
nop
mov
flds
add
mov
fbstp
add
in
add
add
sub
pop
mov
push
push
push
lea
push
call
mov
add
lock
mov
int3
jl
add
jae
lea
mov
add
into
lea
add
add
add
mov
repnz
add
add
imulb
movsl
lds
pop
mov
push
push
push
push
call
mov
testb
fstpl
add
test
out
cwtl
xchg
call
pushf
add
add
add
mov
popf
pop
add
movsb
fs
add
add
pusha
ret
out
lods
out
into
push
out
andb
add
add
data16
add
add
mov
add
lcall
inc
or
lea
push
push
push
call
mov
out
fmul
add
add
add
mov
add
jmp
xorl
lret
out
jbe
pusha
scas
mov
add
add
sub
pop
add
push
push
push
push
push
push
push
lea
push
push
call
add
leave
jl
add
in
add
popl
jno
add
add
gs
lret
jecxz
cltd
jecxz
rolb
add
out
add
lcall
ret
mov
jb
mov
push
add
add
mov
mov
add
in
fcompl
inc
add
add
push
push
push
push
push
lea
push
call
leave
lods
add
add
add
add
mov
aad
out
add
add
stos
xchg
mov
test
add
add
jp
cmpsb
add
xchg
nop
hlt
mov
movb
scas
pusha
add
add
jecxz
add
aad
add
xchg
test
call
jne
cmp
jne
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
add
scas
add
push
push
push
imul
add
lock
je
ja
add
add
les
jno
add
lcall
inc
adc
push
call
cmpsb
add
out
add
incb
xchg
clc
add
loop
popf
jbe
pop
jecxz
jp
aam
nop
push
je
add
add
pop
iret
push
rcl
jns
add
lods
add
add
stos
add
add
add
sub
pop
movl
push
push
call
mov
jbe
add
lahf
add
aam
add
fildl
add
mov
add
add
addb
mov
iret
add
add
add
add
sub
pop
jmp
mov
push
add
pop
mov
push
inc
add
pop
sub
jne
push
lea
sub
add
pop
mov
push
push
push
call
add
push
popf
lods
mov
add
mov
add
add
nop
les
add
shll
icebp
jecxz
push
add
add
mov
add
add
aam
mov
sub
pop
movl
push
push
push
lea
push
push
call
test
add
jl
mov
bound
hlt
add
lock
add
add
add
add
pop
add
add
add
test
add
rcl
imul
scas
add
in
in
lcall
mov
add
push
lea
push
push
call
sar
fcoml
pop
fsts
add
add
xchg
add
roll
test
add
add
add
data16
pop
fucomip
sahf
push
mov
pop
mov
hlt
pop
mov
push
push
push
push
lea
push
push
call
add
mov
add
add
imul
shrl
mov
add
mov
andb
add
stos
enter
ljmp
mov
add
add
lcall
nop
mov
add
push
push
push
push
push
push
call
xchg
popf
int3
xchg
add
add
lods
add
add
fiadds
fs
mov
stos
xchg
jno
stos
lret
pusha
testb
adc
out
nop
movsl
data16
add
xchg
lods
mov
add
push
push
mov
add
out
aam
lds
fsub
flds
cwtl
roll
sub
pop
cmp
jne
push
pop
mov
push
dec
add
pop
movl
jmp
push
push
push
push
push
lea
push
push
call
fldt
icebp
rolb
add
mov
shlb
arpl
add
test
add
push
faddl
add
xlat
sub
jmp
stos
sbbl
add
add
xchg
add
aam
add
sub
pop
mov
cmpw
jne
push
push
push
push
call
push
add
out
loop
add
icebp
test
jecxz
add
add
add
mov
add
jo
add
add
mov
in
lock
mov
push
push
lea
push
call
fwait
add
pop
add
add
add
add
add
sti
sar
add
pop
bound
les
add
add
add
add
xchg
add
add
std
stc
leave
sub
pop
movl
jmp
push
inc
pop
pushl
push
shr
add
add
pop
pop
mov
push
not
pop
mov
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
mov
add
mov
fnstcw
pusha
add
iret
add
test
arpl
stc
clc
add
push
iret
shlb
mov
jbe
push
sti
mov
out
add
add
add
add
add
add
cld
bound
push
or
dec
aam
push
ror
push
xor
add
lea
sub
not
sub
add
pop
pop
push
lea
push
push
push
push
call
add
jnp
out
fstpt
loopne
scas
jmp
add
les
scas
add
insb
scas
lcall
xchg
js
add
mov
addb
addl
add
pop
addl
in
in
pop
push
push
push
push
call
add
shl
mov
les
cmpsb
add
icebp
add
add
add
add
add
add
incb
sub
pop
call
push
ror
add
xor
not
pop
cmpl
je
push
push
lea
xor
push
and
add
shl
sub
sub
shl
dec
pop
shl
pop
push
shr
sub
shl
pop
push
call
push
ror
sub
pop
cmpl
je
push
push
not
push
and
add
lea
sub
inc
sub
pop
pop
push
sub
sub
pop
push
push
shl
pop
call
push
not
pop
cmpl
je
push
push
ror
ror
push
and
add
sub
sub
add
inc
shl
dec
pop
inc
pop
push
push
push
push
push
lea
push
call
jp
test
add
add
mov
out
add
iret
fidivrs
xchg
lds
add
add
add
outsl
add
leave
outsl
fiaddl
add
fadds
test
add
mov
lcall
push
ror
add
shl
pop
call
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
add
add
add
loopne
add
add
movsl
mov
add
sti
add
je
int
xchg
xchg
lea
iret
loop
add
outsl
add
add
sub
pop
cmpl
je
push
push
add
shr
push
xor
add
sub
add
not
rol
sub
inc
pop
add
rol
pop
push
sub
pop
push
push
shr
add
shl
pop
call
cmpl
je
push
push
inc
push
xor
add
ror
sub
pop
not
shl
pop
push
push
lea
push
push
push
push
push
push
call
pop
add
add
add
mov
jns
jb
pusha
add
in
xlat
add
xchg
add
add
jle
add
pop
mov
ljmp
fwait
push
imul
icebp
test
mov
pop
fwait
test
repnz
add
pusha
cld
add
call
bound
sub
pop
push
push
lea
sub
pop
call
push
add
add
dec
pop
cmpl
je
push
push
not
shl
add
shl
push
xor
add
sub
sub
sub
ror
pop
not
add
rol
pop
push
shl
add
pop
push
push
ror
lea
pop
call
push
lea
push
call
shl
fnstsw
add
shrl
add
int
mov
mov
add
iret
add
add
ror
add
add
rcr
cltd
fisubrs
filds
imul
add
pop
push
add
lock
stos
std
mov
push
clc
lcall
js
xor
pop
ret
bound
add
push
add
pop
mov
push
push
push
push
push
push
call
add
imul
add
add
add
test
push
mov
push
popl
popa
xchg
insb
add
pop
add
add
add
lcall
add
add
add
pop
add
add
pop
xor
push
pop
pop
push
push
lea
push
push
call
add
xchg
nop
add
in
pop
push
les
add
mov
cmc
out
push
add
andl
add
popa
mov
mov
jbe
pop
add
add
push
jno
jns
stc
jne
add
add
add
jl
mov
jp
add
add
loop
pop
add
mov
mov
cwtl
add
sub
pop
pop
pop
push
lea
shl
rol
pop
pop
leave
push
lea
push
push
lea
push
push
push
push
call
add
lock
lret
jle
js
add
add
add
enter
add
add
jno
add
test
push
add
push
enter
out
mov
into
xchg
add
add
add
push
add
add
fdivrl
ret
in
in
lcall
or
push
dec
pop
push
push
ror
dec
shr
sub
pop
mov
push
shr
add
pop
add
push
not
xor
add
pop
cmpl
jne
push
push
add
sub
add
push
or
inc
add
sub
sub
sub
inc
pop
sub
ror
inc
pop
push
push
push
push
lea
push
call
add
popa
xchg
shr
test
add
add
mov
std
xlat
test
in
cmc
add
add
add
sub
pop
pushl
call
push
lea
push
lea
push
push
push
push
lea
push
call
add
add
mov
rolb
add
add
stos
enter
add
clc
add
cltd
jae
leave
add
add
stos
push
mov
test
jge
mov
lods
loop
mov
pop
scas
add
stos
roll
loopne
fldln2
sub
pop
push
push
shl
pop
call
push
shl
sub
add
pop
jmp
push
push
call
insb
push
mov
add
fs
pop
ljmp
test
mov
mov
stos
add
out
mov
loope
jecxz
add
clc
cli
xchg
add
add
mov
jns
data16
in
clc
pop
cmpl
jne
mov
push
sub
shr
pop
call
push
push
push
push
call
cld
mov
enter
in
mov
in
mov
mov
add
add
adcb
add
movl
std
push
add
pushf
lods
mov
add
mov
data16
push
insb
jbe
add
outsl
add
jbe
add
loope
jb
mov
in
lock
lcall
push
push
push
push
push
push
push
lea
push
push
push
call
jecxz
add
faddl
add
add
jecxz
add
add
add
fwait
mov
scas
add
mov
lahf
jne
rcr
mov
add
in
fdivr
lcall
inc
sbb
add
repnz
add
ror
pop
cmpl
jne
push
push
shl
rol
dec
push
or
not
add
rol
dec
sub
sub
lea
pop
shl
shr
lea
pop
push
push
push
push
lea
push
call
mov
xchg
add
add
call
add
add
add
add
xchg
mov
mov
fildl
push
testb
stos
roll
add
lcall
jne
push
push
lea
push
push
call
hlt
cli
add
hlt
insb
add
add
pop
add
add
je
xchg
push
jle
imul
xchg
pusha
add
add
in
add
leave
andl
add
add
xchg
jns
add
stos
mov
add
shll
mov
mov
lds
add
mov
cli
mov
lock
call
push
ror
lea
shl
pop
push
push
push
push
call
jo
mov
lea
add
mov
jno
stos
hlt
lods
mov
cmpb
test
icebp
into
add
test
je
mov
add
mov
jle
in
sub
pop
call
jmp
push
push
push
lea
push
push
push
push
push
call
add
xlat
flds
pusha
add
add
pop
scas
rolb
add
les
add
mov
pop
pusha
add
in
outsl
mov
into
add
add
xchg
mov
add
mov
pop
cmpl
je
push
rol
pop
cmpl
jne
push
push
lea
push
push
push
push
push
push
push
push
call
rolb
hlt
push
add
pop
mov
movl
fiaddl
lahf
jb
les
push
add
into
add
add
mov
enter
add
loope
gs
jmp
add
cld
callw
add
add
mov
loop
stos
mov
jae
jo
leave
ret
sarb
in
fcomps
add
add
push
rol
add
add
pop
mov
push
xor
dec
rol
xor
pop
push
ret
push
push
shl
push
or
not
add
shl
sub
lea
inc
pop
dec
ror
sub
pop
push
ror
pop
pushl
push
lea
push
push
push
call
ficoml
add
add
mov
test
xchg
add
stc
out
add
fldenv
add
add
cli
lahf
add
add
lret
add
in
lock
lcall
xor
add
call
push
push
rol
add
lea
push
push
pop
add
sub
rol
shl
add
sub
add
pop
dec
inc
lea
pop
push
shl
pop
pushl
call
push
inc
pop
call
push
push
push
xor
add
shl
ror
lea
sub
not
pop
lea
pop
push
push
push
push
lea
push
push
push
push
push
call
roll
add
xchg
mov
bound
mov
mov
add
add
push
add
jecxz
popf
popf
in
xchg
add
fs
add
add
mov
push
roll
add
in
fdivr
lcall
jne
push
rol
pop
call
push
push
lea
push
call
mov
jbe
mov
int3
imul
add
neg
mov
add
call
fcomps
add
jl
addr16
fstp
mov
mov
cltd
mov
call
push
push
not
push
sub
add
rol
shr
sub
dec
pop
dec
not
add
pop
push
sub
add
pop
pushl
call
push
shr
xor
pop
call
push
push
not
push
xor
add
sub
lea
sub
sub
add
pop
ror
add
pop
push
lea
push
push
push
push
call
movb
shrb
mov
add
ja
mov
add
repnz
add
add
and
jge
test
test
add
outsl
add
fildl
rolb
fiadds
add
add
fiadds
stos
add
add
add
arpl
lcall
jne
push
xor
add
inc
pop
call
call
push
push
not
push
or
not
add
xor
sub
sub
sub
sub
pop
inc
rol
sub
add
pop
push
sub
shr
pop
pushl
push
lea
push
lea
push
push
push
call
add
cmpsl
mov
pop
add
xchg
add
add
lret
in
jne
rclb
add
add
lea
add
add
jnp
add
push
push
push
push
lea
push
push
call
int3
add
nop
push
push
adcl
add
add
add
add
add
fcomi
cltd
add
xchg
mov
rcrl
test
add
push
add
mov
add
add
push
mov
jp
in
fwait
jmp
test
outsl
jle
imul
add
add
lcall
shrb
jae
pop
push
rol
add
push
push
pop
add
lea
not
sub
lea
pop
dec
inc
shl
pop
push
rol
pop
pushl
call
push
push
lea
push
call
jb
fstp
add
add
push
add
jno
jmp
mov
fwait
loope
mov
lahf
cmpsl
cld
roll
add
add
add
add
xchg
insb
push
add
pop
call
push
push
add
push
push
pop
add
shr
sub
shl
sub
shr
xor
pop
shr
pop
push
ror
pop
pushl
call
push
shr
shr
pop
call
push
push
add
not
push
or
not
add
inc
sub
shl
pop
rol
shl
pop
push
not
shr
pop
pushl
push
push
push
lea
push
push
push
call
stos
add
aad
sti
add
mov
in
fs
cld
pop
push
repnz
flds
out
push
cld
pop
pop
lahf
add
mov
outsl
add
jle
popl
out
add
rolb
lcall
mov
push
call
mov
push
add
add
push
add
push
add
xchg
flds
incb
add
add
add
in
jecxz
push
add
add
add
fisubs
in
clc
lcall
shrb
repnz
lret
rcll
loopne
add
add
add
shrl
inc
and
lea
rol
pop
xor
sub
dec
pop
push
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
lea
push
call
jbe
xchg
insb
js
icebp
gs
add
aam
xchg
xchg
add
add
fists
add
add
mov
add
je
clc
xlat
fwait
add
add
sub
pop
pushl
push
dec
pop
call
push
push
push
push
push
call
jne
mov
jnp
je
mov
mov
jge
add
add
add
std
add
add
loop
scas
rolb
push
jmp
out
incb
add
in
push
add
outsl
aam
cld
lahf
enter
iret
loopne
xlat
imulb
lcall
pushf
and
call
add
add
add
pop
call
push
push
sub
push
or
not
add
shr
sub
dec
pop
sub
add
pop
push
push
lea
push
push
push
push
lea
push
push
call
add
lcall
mov
scas
bound
mov
test
mov
scas
add
add
add
insb
into
mov
add
add
add
mov
add
aad
add
push
mov
add
add
add
in
test
in
add
sub
pop
pushl
push
inc
ror
sub
pop
call
push
rol
sub
not
pop
call
push
push
ror
push
sub
add
sub
sub
inc
pop
pop
push
shr
shl
lea
lea
pop
pushl
call
push
ror
pop
call
push
push
shl
push
xor
add
shr
dec
sub
dec
pop
inc
sub
pop
push
push
lea
push
push
lea
push
lea
push
call
add
in
cmpsb
cmpsb
push
loope
add
rolb
scas
gs
addr16
add
lret
jno
fwait
mov
mov
mov
add
add
mov
js
add
test
popa
lahf
mov
lcall
in
push
mov
lcall
jne
call
push
add
sub
sub
lea
pop
call
push
push
not
lea
push
push
pop
add
shl
xor
sub
shl
sub
dec
add
add
sub
pop
inc
add
pop
push
pop
pushl
push
xor
pop
call
push
push
shl
push
and
add
add
add
shl
sub
sub
add
lea
pop
not
rol
lea
pop
push
push
dec
push
or
inc
add
ror
sub
inc
dec
pop
pop
push
push
push
push
push
push
push
lea
push
call
pop
int
add
xchg
add
add
add
pop
mov
bound
add
jp
out
shll
mov
sarb
add
leave
add
add
rclb
rol
add
lea
pop
pop
push
sub
pop
dec
jne
push
push
xor
lea
sub
push
or
inc
add
sub
sub
inc
pop
pop
push
push
push
push
push
push
lea
push
call
arpl
lcall
mov
add
mov
sarl
movsl
add
call
test
cmpsb
add
in
in
pushl
push
ror
inc
pop
call
push
push
push
push
push
push
push
push
call
aam
cld
mov
add
push
add
ja
jns
hlt
push
add
sahf
rcrl
add
add
add
roll
loope
mov
mov
add
sti
sub
pop
mov
push
sub
pop
lea
push
push
lea
shl
dec
add
push
sub
add
sub
dec
sub
add
sub
pop
rol
pop
push
push
push
lea
push
lea
push
call
rcrb
add
jae
pop
in
add
xchg
add
enter
push
add
xchg
add
add
mov
arpl
jle
add
je
jbe
stos
mov
add
jne
add
mov
mov
in
lcall
jne
push
push
call
stos
pop
add
out
pop
add
add
shr
jmp
fildll
sarb
movsl
add
js
je
add
add
pushf
add
cmc
xchg
add
add
add
add
shl
add
stos
sbb
add
add
popa
mov
lea
push
push
lea
push
push
push
lea
push
call
xchg
jne
out
addb
add
add
pushf
xchg
stc
xlat
xchg
add
add
incb
mov
jl
add
bnd
mov
mov
clc
gs
mov
add
add
in
loopne
lcall
push
lea
lea
pop
push
push
shl
shr
sub
sub
pop
push
push
rol
inc
pop
pushl
push
push
sub
add
push
sub
add
lea
sub
lea
pop
add
pop
push
lea
push
lea
push
push
push
push
push
push
call
add
cwtl
add
add
push
roll
push
stos
add
mov
cltd
flds
pop
cmc
add
pop
cli
add
pushf
push
add
ror
add
movb
in
in
pop
jnp
mov
jecxz
jmp
mov
add
add
test
test
push
call
push
lea
push
push
push
push
lea
push
push
call
add
jmp
push
add
add
lcall
add
loopne
add
add
mov
shlb
push
add
add
js
repnz
andb
cwtl
push
out
scas
add
addb
push
ljmp
lock
test
add
in
in
lcall
inc
push
add
push
push
push
lea
push
push
push
call
mov
imul
jo
add
mov
add
cmpl
add
lods
mov
cwtl
into
sub
pop
mov
push
pop
lea
push
push
push
or
not
add
add
ror
add
sub
add
inc
rol
pop
inc
pop
push
push
lea
push
push
call
add
add
cmpsl
xchg
add
add
incb
push
out
add
xchg
pop
lods
push
add
add
pop
add
lcall
jne
push
not
add
add
inc
pop
call
push
push
lea
push
push
push
lea
push
push
push
call
add
add
mull
push
jae
add
add
pop
add
into
add
incb
lret
arpl
mov
lea
mov
add
mov
jl
enter
mov
out
pushf
hlt
popl
add
push
pop
mov
add
fwait
in
mov
push
fstpl
fs
fiadds
call
push
push
sub
rol
xor
lea
push
or
not
add
lea
sub
shl
lea
pop
shl
pop
push
inc
pop
pushl
push
inc
sub
xor
pop
call
call
push
lea
push
push
push
push
push
call
add
jmp
push
pop
add
gs
pusha
fildl
add
add
lock
add
add
lahf
shrb
jp
test
add
je
add
mov
in
add
add
icebp
lret
add
xchg
add
add
lcall
inc
cld
push
push
lea
push
push
push
call
loop
add
jae
jmp
jo
adc
add
xchg
add
mov
add
testb
add
lret
add
jae
insb
mov
add
add
add
add
jmp
mov
pop
lea
push
push
lea
push
push
pop
add
not
rol
lea
sub
shl
pop
add
pop
push
not
shl
pop
pushl
call
push
lea
push
push
push
push
lea
push
lea
push
lea
push
push
push
call
std
lods
add
add
xchg
fldl
jns
out
xchg
add
insb
imul
stos
add
add
addb
mov
ljmp
out
shll
add
rorl
add
outsl
in
jae
sub
pop
lea
push
ror
ror
shl
pop
push
push
not
pop
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
add
xchg
add
test
fs
add
fbstp
leave
jbe
cwtl
pop
pop
jae
mov
outsl
rcr
mov
cmpsb
movsb
mov
add
xlat
mov
icebp
arpl
xchg
imul
ljmp
add
add
add
add
arpl
jne
push
push
not
push
sub
add
sub
lea
not
dec
pop
rol
shr
dec
xor
pop
push
push
push
lea
push
push
call
data16
add
out
jecxz
lcall
pusha
jl
cmpsb
add
push
add
les
add
int
add
outsl
jb
ljmp
lret
mov
data16
add
pop
fs
mov
jecxz
pop
out
add
mov
in
lcall
call
push
push
shr
add
push
or
inc
add
rol
lea
lea
sub
dec
add
pop
add
pop
push
push
lea
push
push
push
lea
push
push
lea
push
push
call
add
xchg
mov
add
add
add
xchg
mov
fldcw
cmpsl
add
sarl
mov
jge
jb
add
add
cld
aam
add
add
push
pushl
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
add
loope
addl
add
add
test
leave
jbe
clc
add
arpl
aam
addr16
add
xchg
add
add
cld
stc
fcomip
sub
pop
call
push
push
lea
push
push
push
push
push
push
call
cli
imul
jno
add
add
repnz
add
imul
add
mov
push
add
add
pop
add
in
add
xchg
in
sub
pop
push
push
shl
shr
dec
pop
call
push
push
rol
rol
shl
push
push
pop
add
ror
sub
shr
rol
add
xor
pop
sub
lea
add
pop
push
lea
pop
pushl
push
ror
xor
sub
pop
call
push
dec
sub
sub
pop
call
push
pop
pushl
push
add
pop
mov
jmp
push
push
ror
rol
push
or
not
add
sub
sub
inc
xor
sub
pop
sub
pop
push
lea
push
push
push
call
mov
jmp
pusha
add
add
add
add
push
add
mov
add
out
mov
movsl
insb
movsb
cltd
cwtl
fs
fsubrl
add
mov
mov
lretw
xchg
mov
lret
pop
add
cmc
cld
xchg
iret
imul
lret
sub
pop
pushl
call
push
push
call
lock
add
add
xchg
add
lea
pop
xlat
mov
xchg
aam
fildl
add
pop
pop
roll
ljmp
add
call
push
push
ror
push
or
not
add
not
dec
not
sub
add
lea
inc
pop
not
ror
pop
push
lea
push
push
lea
push
push
push
push
push
push
call
jecxz
mov
out
insb
loope
add
xchg
add
add
pop
lods
pop
movsl
ja
add
rolb
add
cwtl
int3
jnp
cmpsb
add
add
repnz
jl
add
mov
aad
test
out
arpl
add
jle
add
add
add
add
mov
flds
sub
pop
pushl
push
shr
pop
call
push
sub
pop
push
call
push
push
call
add
add
push
add
movsb
cwtl
add
addl
loop
lods
add
adcl
add
iret
mov
adc
jnp
add
push
add
add
add
mov
add
les
pop
add
add
add
xchg
add
flds
add
add
push
rol
sub
pop
add
pop
push
push
call
lods
xchg
cmpsb
faddl
aam
mov
add
jecxz
add
add
imul
sub
pop
pop
pop
push
inc
rol
ror
add
pop
xor
push
add
pop
inc
ret
push
add
lea
pop
leave
ret
push
push
call
mov
cmpsb
add
add
nop
stos
pop
mov
add
mov
push
data16
neg
test
jae
pop
add
fcmovbe
add
jmp
add
jecxz
clc
cmp
add
pop
mov
push
pop
add
add
addl
sub
pop
push
push
lea
push
push
push
lea
push
push
push
push
push
lea
push
call
fsubrl
add
mov
add
add
rolb
mov
add
jge
shll
lahf
mov
pop
cmc
mov
in
push
pop
cmpl
jne
push
push
push
lea
push
push
push
push
push
push
lea
push
call
into
push
add
mov
add
xchg
add
lods
add
add
movsl
rolb
cld
mov
in
outsl
cmpsl
xchg
add
loope
imul
push
repnz
add
pop
iret
fstpl
jnp
imul
jo
pop
xchg
add
movsl
add
out
enter
add
add
add
stos
add
mov
frstor
add
xchg
stc
sub
pop
mov
push
push
push
push
lea
push
push
lea
push
push
push
call
ficomps
pusha
jno
add
add
incb
mov
pop
pushf
jp
add
pusha
add
mov
stos
add
add
outsl
ljmp
mov
lahf
in
jle
cmpsl
add
mov
add
add
sti
data16
mov
add
test
lcall
adc
add
push
dec
shl
ror
pop
mov
push
add
dec
not
pop
and
xor
push
push
push
push
push
push
lea
push
push
push
call
add
mov
lds
push
in
adcl
in
jp
aad
ja
out
push
cwtl
ljmp
add
in
fcompl
push
push
rol
shl
shl
pop
xor
push
rol
pop
dec
push
dec
add
shl
pop
sub
push
push
lea
push
push
push
call
in
add
mov
jge
add
add
add
jl
mov
add
loopne
xchg
lcall
add
test
mov
mov
add
mov
sub
pop
jmp
push
ror
pop
sub
pushl
push
xor
pop
pop
push
push
push
push
push
call
add
js
add
add
scas
add
add
add
addr16
loope
add
push
add
xchg
xchg
pushf
pop
jecxz
repnz
add
sti
add
hlt
fstp
add
add
add
outsl
add
popa
add
fwait
add
add
mov
test
sub
pop
sub
push
shl
dec
pop
cmp
jne
mov
push
push
push
push
push
push
call
pop
xchg
xchg
add
mov
push
add
push
add
loopne
xchg
stos
les
frstor
imul
add
ret
mov
ret
rolb
repnz
add
mov
mov
mov
call
lea
push
lea
push
push
lea
push
call
push
push
add
jmp
add
enter
test
add
add
call
int3
in
add
je
add
jmp
stos
pop
sub
pop
sub
push
pop
mov
push
lea
push
push
push
lea
push
push
call
mov
xchg
push
xchg
add
cltd
mov
add
pusha
add
mov
push
test
add
add
jl
add
add
pop
add
leave
incb
imul
jmp
xlat
mov
sti
mov
iret
add
add
icebp
mov
add
sub
pop
shr
add
push
shl
pop
sub
pushl
push
sub
pop
pop
shr
push
push
push
push
push
push
push
push
push
push
call
faddl
test
cmpsl
imul
mov
bound
add
push
add
add
jae
faddl
rolb
mov
mov
jb
pop
pop
mov
jnp
popf
mov
add
out
mov
scas
add
test
fdivr
lcall
loope
incl
add
add
in
and
push
lea
push
push
push
push
lea
push
call
add
ljmp
int
scas
lods
movsb
nop
icebp
mov
test
add
add
add
repnz
add
mov
cwtl
cmc
add
push
add
faddp
sub
pop
cmp
jne
push
lea
push
push
call
add
ror
cltd
push
testb
add
out
js
add
add
cltd
lods
mov
add
stos
mov
mov
push
add
add
jns
mov
in
nop
add
add
test
lret
cmc
stos
mov
add
push
lock
pop
leave
push
shr
pop
ret
push
push
lea
push
push
push
push
push
push
call
add
add
xchg
add
out
stc
add
out
add
out
mov
and
fs
mov
add
cmpsl
jbe
in
in
lcall
in
push
push
push
call
add
lea
add
cld
out
call
add
add
filds
xchg
mov
ja
add
imul
push
out
scas
add
mov
mov
cld
add
sarl
pop
add
push
push
push
push
push
push
push
lea
push
push
push
push
call
push
aad
movb
jmp
nop
xchg
add
add
add
into
add
enter
add
cmpsl
addl
call
test
jae
xchg
addr16
rclb
xchg
jb
jo
cwtl
add
movsb
pop
std
shll
fcomps
push
push
rol
sub
sub
pop
push
push
push
push
push
push
push
push
lea
push
call
add
add
add
pop
add
xchg
loopne
in
shlb
movsl
addb
add
mov
arpl
add
add
add
mov
jecxz
lahf
arpl
out
test
add
add
push
fiadds
add
add
sub
pop
push
push
push
push
push
push
push
push
push
call
xchg
sahf
movsb
popf
in
add
stc
add
aad
mov
add
add
add
cli
lcall
add
mov
les
xchg
fdivrs
rcll
roll
mov
lods
movsl
faddl
int3
xchg
push
pop
in
add
sub
pop
mov
lea
push
lea
push
push
push
push
call
jle
pop
push
cmp
fiaddl
add
add
add
pop
add
add
add
mov
pop
add
scas
push
add
loopne
out
mov
mov
into
add
mov
push
popf
jmp
add
add
add
add
pop
aad
add
lcall
ljmp
scas
jmp
movsl
test
push
push
push
call
mov
int3
mov
add
test
nop
xchg
jp
test
filds
fstl
arpl
mov
jno
cmc
mov
add
scas
mov
add
add
add
sub
pop
shr
add
push
push
push
push
lea
push
push
lea
push
call
add
push
add
rcr
popa
pushf
nop
int
int3
mov
mov
loop
add
nop
add
icebp
xchg
add
movb
insb
cld
loop
add
cld
add
mov
jno
xchg
cmc
addb
add
mov
in
in
mov
add
push
ror
not
rol
pop
mov
add
push
rol
xor
lea
rol
pop
xor
push
not
not
lea
pop
mov
and
push
push
lea
push
lea
push
push
push
push
push
push
call
outsl
xchg
xchg
add
add
loope
mov
rcr
enter
nop
faddl
in
lods
mov
mov
in
fdivr
lcall
rolb
add
push
push
push
push
lea
push
call
aam
push
fidivl
add
add
add
test
popf
shl
add
push
add
add
fldl
lret
imul
inc
xchg
je
mov
nop
sahf
push
clc
cli
mov
fbld
jmp
in
in
lcall
add
mov
sti
xchg
push
lea
push
lea
push
lea
push
push
call
in
add
xlat
add
aad
add
roll
pop
xchg
add
mov
lea
jmp
add
iret
rclb
les
shll
push
std
cmc
add
mov
jmp
lods
in
mov
xchg
lret
add
pusha
sub
pop
inc
push
lea
push
push
lea
push
push
push
push
lea
push
push
call
fistl
mov
pop
cltd
add
mov
add
add
jne
add
in
fidivl
mov
add
loopne
scas
aad
xchg
scas
loope
aam
add
std
pop
push
sub
pop
cmpb
jne
add
push
not
sub
pop
cmp
je
add
push
push
push
push
push
push
push
push
push
call
add
cli
add
mov
cld
add
aad
add
add
in
fstp
add
add
mov
add
add
mov
lcall
jnp
add
test
rclb
pop
push
push
call
loop
faddl
scas
add
add
push
xchg
add
add
cmpsl
push
mov
add
xchg
add
in
in
mov
jle
add
push
addr16
ret
mov
pop
pop
pop
push
push
lea
push
push
lea
push
push
push
call
cmc
xchg
sbbl
pop
add
mov
add
pop
add
xchg
xchg
jnp
add
push
test
xchg
scas
add
ljmp
pop
pop
push
push
push
push
push
push
push
push
call
add
int
cli
pop
scas
lcall
cltd
popa
jnp
xchg
pop
add
jl
fldl
xchg
add
lcall
add
sahf
in
jae
mov
mov
add
fstps
add
clc
shr
popa
rcll
loopne
lcall
push
push
call
and
add
add
clc
push
add
jo
jns
pop
mov
lcall
add
add
sahf
popf
cmpsl
add
rolb
cli
jmp
add
or
push
ror
not
pop
mov
push
push
call
add
add
hlt
add
add
jmp
add
leave
mov
push
add
add
add
pop
add
add
mov
xchg
mov
lcall
push
or
mov
call
shlb
pop
shr
lea
pop
add
push
add
sub
pop
push
push
sub
pop
call
xor
push
shl
shr
pop
pop
push
shl
shr
pop
pop
pop
push
shl
xor
pop
pop
push
sub
pop
pop
push
add
add
xor
pop
leave
push
push
push
push
push
lea
push
push
lea
push
push
push
call
gs
pop
fldl
gs
mov
mov
lret
repnz
int
push
lods
repnz
jne
stc
push
pop
mov
lods
lods
sub
pop
ret
push
push
xor
ror
dec
rol
pop
mov
add
push
sub
pop
push
push
push
shr
pop
push
push
push
inc
rol
inc
pop
mov
push
lea
dec
add
pop
push
pop
push
push
push
lea
push
call
add
add
fisttpll
ljmp
mov
add
fwait
push
add
add
add
xchg
imul
mov
jbe
mov
bound
cltd
add
mov
faddl
add
add
data16
push
cmp
ljmp
ljmp
xor
pop
add
push
ror
inc
pop
mov
push
lea
push
push
push
push
push
push
lea
push
push
call
add
int
add
add
mov
std
add
clc
add
add
fildl
push
add
stos
cltd
add
add
add
not
add
out
out
xchg
add
out
sub
pop
add
pushl
push
push
push
lea
push
push
call
popf
filds
xchg
add
add
add
loopne
hlt
add
add
add
test
jmp
cltd
iret
rolb
nop
mov
mov
add
addr16
add
out
add
insb
mov
fcomps
ja
mov
jge
add
add
mov
mov
popl
mov
push
rol
rol
pop
add
push
lea
push
lea
push
lea
push
call
lods
add
add
out
cltd
add
clc
out
jno
cwtl
stc
add
add
mov
xchg
mov
add
test
nop
lods
testl
jp
in
lock
lcall
notb
cld
dec
pop
lea
mov
push
sub
pop
add
push
lea
pop
xor
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
out
rcl
jle
push
add
pop
fiadds
leave
mov
loopne
ret
bound
out
lret
test
add
mov
add
mov
fiaddl
add
add
mov
add
add
mov
add
xchg
sub
pop
rol
push
inc
add
pop
nop
push
push
call
cld
add
mov
add
add
add
push
add
add
leave
ljmp
add
jecxz
add
jge
add
jne
xchg
in
out
add
into
mov
mov
add
call
jecxz
incb
push
fwait
xchg
in
push
jl
cltd
add
pop
nop
push
push
call
mov
cwtl
outsl
faddl
ret
add
xchg
xchg
mov
std
jp
pusha
add
mov
arpl
add
jb
add
cmpsb
call
lcall
add
rol
pop
nop
push
lea
push
lea
push
call
mov
add
add
in
mov
add
test
cmc
add
add
icebp
std
add
add
mov
shrb
lods
mov
aam
add
add
lahf
add
add
push
lea
push
push
push
push
push
push
push
lea
push
push
call
mov
repnz
lods
mov
lea
jae
add
popf
aam
mov
add
add
testb
imul
xchg
arpl
add
add
lea
in
fcomps
push
sub
not
pop
nop
nop
push
lea
push
push
call
add
fmull
xchg
js
jnp
push
add
add
add
xchg
ficomps
add
xchg
add
jge
sub
pop
cmpb
jne
push
rol
shr
pop
add
push
lea
push
push
push
lea
push
call
mov
test
xchg
add
jnp
add
push
add
mov
xchg
call
jne
add
loop
js
add
add
xchg
push
push
pusha
add
ret
test
imul
add
jmp
loopne
push
add
add
add
pop
aam
in
in
pop
nop
push
xor
pop
nop
push
not
inc
sub
add
pop
cmp
je
push
ror
pop
nop
push
shr
pop
nop
push
add
add
dec
dec
pop
inc
push
not
pop
nop
nop
push
lea
push
push
push
call
rcrb
stos
add
xchg
pop
add
pop
aam
add
add
mov
add
enter
loop
jecxz
add
movsb
add
mov
add
arpl
scas
popf
fists
lcall
out
push
add
lret
add
add
add
add
jle
add
sub
pop
cmp
jb
xor
push
lea
push
lea
push
push
push
call
mov
add
sti
in
xchg
add
enter
mov
cwtl
mov
jns
test
lcall
enter
testl
add
jecxz
cmpsl
sarb
int3
push
add
sub
pop
jmp
push
add
not
pop
mov
add
push
sub
pop
movzwl
mov
push
push
push
push
push
push
call
add
add
in
pusha
in
pop
mov
push
pop
jmp
fdivrl
mov
pop
insb
push
flds
les
sahf
add
into
mov
movsl
adc
jl
mov
lcall
rcll
sub
lods
push
push
push
call
add
imul
cmpsb
addr16
add
add
imul
add
add
mov
add
add
add
mov
jge
js
mov
add
add
cwtl
pop
push
nop
add
cmpsl
add
fildl
add
jge
add
add
test
in
in
pop
mov
push
push
push
call
mov
add
mov
ljmp
stos
int
popa
push
int
add
mov
add
push
pop
int3
add
pop
xchg
pop
roll
test
add
sub
pop
xor
push
not
not
dec
pop
xor
shl
push
push
push
call
add
ret
add
repnz
fmulp
repnz
out
jge
sahf
jmp
mov
test
mov
pop
push
jl
cli
mov
hlt
lcall
dec
nop
add
int3
clc
ljmp
push
push
push
push
call
imul
int
test
jmp
mov
add
add
lahf
insb
add
je
xchg
mov
mov
add
add
loope
out
add
pushf
cld
add
cwtl
xchg
add
cmpsl
mov
add
add
add
add
lcall
loope
push
lea
push
push
push
push
push
call
push
add
mov
add
aam
add
add
add
test
add
jne
les
add
add
scas
enter
mov
lock
xchg
add
std
add
je
add
lcall
dec
nop
add
loope
push
sub
not
pop
xor
push
add
not
rol
pop
mov
add
push
ror
pop
pop
pop
push
sub
pop
pop
pop
push
sub
xor
pop
leave
push
push
push
push
push
push
lea
push
call
push
fadds
into
sarb
arpl
add
out
stc
lods
stc
lock
add
lods
add
mov
xchg
add
add
jge
in
in
ret
push
push
sub
lea
pop
mov
push
push
lea
push
push
push
lea
push
call
fucompp
out
andb
add
add
add
loope
pop
rolb
add
lea
add
push
cli
bound
faddl
add
add
add
mov
pop
push
push
ror
shr
dec
pop
push
push
lea
push
push
push
push
push
lea
push
call
fwait
mov
push
mov
loope
push
scas
loope
add
add
add
icebp
jno
xchg
rorb
roll
mov
xchg
add
mov
lret
sub
pop
push
mov
push
push
push
push
call
cli
bound
jo
add
add
fprem1
add
add
int3
int
in
repnz
movsb
add
add
mov
in
out
add
add
in
lock
mov
push
lea
push
push
push
lea
push
push
push
call
add
add
add
jge
xchg
pop
add
fiaddl
xchg
insb
pushf
clc
loopw
imul
cmpsb
pop
arpl
pusha
add
rolb
popf
jmp
jecxz
in
add
sub
pop
mov
push
rol
add
not
not
pop
test
je
mov
push
sub
not
pop
test
je
push
push
push
push
push
push
push
call
add
add
out
cli
add
aam
add
add
mov
push
mov
push
add
jge
jnp
test
in
arpl
add
fs
xchg
leave
add
aad
add
sub
pop
mov
mov
push
push
push
push
push
push
lea
push
call
lret
shlb
mov
xchg
push
shrb
push
push
add
jge
jge
add
add
cwtl
aam
add
arpl
lods
ja
lret
add
pop
add
lods
bound
add
add
sarb
add
leave
add
jnp
out
add
sub
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
fdivs
andb
add
popl
add
loopne
add
add
add
in
mov
int
xchg
notl
add
lock
in
fcomps
cmp
je
push
inc
dec
dec
pop
test
je
push
xor
shr
pop
mov
inc
push
dec
shl
sub
dec
pop
cmp
je
push
push
push
lea
push
call
add
add
add
in
pop
add
add
add
push
jne
scas
xlat
in
jle
int3
mov
mov
imul
mov
add
cltd
add
add
enter
lock
test
jne
push
push
push
push
push
push
push
lea
push
push
push
call
add
xchg
jne
repnz
leave
add
ja
push
lds
add
mov
loop
add
pop
and
add
rolb
into
mov
add
cltd
push
mov
push
add
incb
push
lcall
rcrb
shrb
vaddsubps
pop
push
not
dec
add
pop
pop
leave
push
add
pop
ret
push
push
push
lea
push
lea
push
call
fisubrl
addr16
jnp
lods
add
clc
cmpsl
add
loopne
popf
jae
lcall
add
js
roll
add
add
mov
add
add
add
lods
fildl
sub
pop
mov
push
shl
pop
inc
cmp
jne
push
shl
sub
pop
lea
push
lea
push
call
roll
add
jne
pushf
add
mov
add
cmpsl
push
add
xchg
nop
add
add
hlt
push
sahf
mov
data16
subl
jno
lret
ret
in
pop
xchg
add
add
lcall
popa
add
clc
add
lea
pop
test
je
push
xor
pop
mov
push
dec
pop
add
push
not
pop
cmp
jne
mov
push
ror
not
dec
pop
test
je
mov
push
push
push
push
push
lea
push
call
roll
je
jle
pop
pop
jns
out
xlat
loopne
pusha
add
add
push
jno
add
add
je
add
push
loope
xchg
test
mov
jmp
arpl
testl
in
call
add
cmp
je
push
sub
xor
sub
pop
jmp
xor
push
push
push
lea
push
call
arpl
add
enter
mov
add
aad
mov
jns
test
mov
add
mov
sahf
outsl
add
push
push
push
push
push
push
push
call
add
add
add
imul
cmpsl
fiaddl
fadds
ja
sahf
loope
ja
mov
je
add
subb
add
add
xchg
add
in
add
in
in
pop
push
dec
xor
rol
pop
pop
push
ror
pop
pop
push
push
call
add
clc
add
add
pop
push
add
rclb
jb
mov
lea
lcall
push
push
push
push
push
push
push
call
add
in
add
mov
fdivrp
add
stc
int
pop
pop
xchg
add
add
jo
add
xchg
leave
jecxz
add
add
fiaddl
iret
in
add
fcmovnu
xchg
testl
js
sbb
sahf
lahf
lock
add
jl
in
mov
test
add
lret
stos
add
mov
add
lcall
or
push
not
lea
pop
lea
push
xor
rol
not
shl
pop
pop
push
sub
inc
pop
pop
push
push
push
push
lea
push
push
push
call
mov
mov
xchg
fs
sbbl
out
icebp
mov
mov
add
add
add
add
add
xorb
arpl
mov
add
push
add
jno
add
stos
cmpsl
mov
mov
add
mov
fucomip
add
pop
pop
push
shl
sub
pop
pop
push
add
xor
not
pop
leave
push
push
push
lea
push
lea
push
push
push
push
call
in
mov
add
in
rcl
add
push
rolb
add
add
iret
jge
fildl
cld
mov
mov
jno
add
lret
add
pop
ret
push
lea
push
push
lea
push
push
lea
push
call
mov
pop
rol
add
add
push
add
pop
add
add
add
add
fcoml
add
add
add
add
add
out
xchg
add
div
add
push
sub
pop
mov
push
inc
sub
sub
pop
pop
push
lea
push
lea
push
push
lea
push
call
mov
frstor
add
aad
push
lcall
add
add
pop
mov
clc
cwtl
xchg
jnp
fucomi
add
jecxz
pop
add
add
push
jl
int
fsubrl
stos
add
add
add
add
xchg
cltd
arpl
cltd
ja
test
in
in
pop
pop
push
push
lea
push
call
into
loopne
push
add
mov
mov
movsl
arpl
push
add
add
add
add
mov
in
loopne
in
pop
stos
roll
cld
leave
add
cmc
lds
push
mov
cmc
add
jne
fldl
cwtl
add
mov
in
hlt
lcall
push
dec
pop
pop
push
sub
lea
pop
leave
push
pop
ret
out
jl
iret
out
or
iret
mov
iret
iret
out
mov
iret
iret
inc
test
iret
orb
fmul
iret
out
iret
iret
iret
mov
add
add
and
cwtl
sbb
das
pop
fsubrp
repz
jae
adc
inc
xor
mov
sbb
jle
in
adc
pop
push
rcrl
leave
cmp
mov
jae
jp
mov
cs
cli
outsb
int3
cld
cwtl
push
sub
test
sbb
mov
sub
rolb
or
inc
insl
mov
xor
mov
leave
fdivrs
xchg
jno
jl
jmp
lahf
and
inc
subb
jecxz
rcr
movsl
sub
pop
dec
int
xor
add
and
pusha
adc
cli
mov
out
les
pop
popa
mov
add
add
sub
inc
cmpsl
xchg
out
andb
and
bound
push
mov
push
ret
rcrb
jae,pn
enter
dec
mov
pop
fidivs
rcrl
fmuls
rolb
fldenv
js
or
and
jmp
pop
ret
sbb
or
lock
cmp
into
lret
test
loop
sbb
mov
xchg
cmp
incl
mov
lods
call
cmpsb
pusha
add
or
hlt
pop
add
out
xchg
loop
shrb
or
mov
xchg
mov
sbb
lcall
lods
add
lret
add
fwait
ja
adc
loop
adc
mov
inc
icebp
mov
loopne
mov
pop
ljmp
jle
aad
sbb
int
lods
shrl
adc
push
mov
xchg
popa
ja
push
pop
test
push
pop
cwtl
cmp
lahf
pop
std
pop
sbb
insb
jae
sarl
or
ficomps
bound
cmp
cmp
dec
nop
loopne
pop
popf
or
stc
fs
jecxz
popa
adc
fistl
ja
lahf
jmp
sbb
movsb
fsubrl
sub
jecxz
faddl
pop
xchg
sub
xchg
mov
movsb
loope
push
inc
in
in
pop
sub
xchg
push
sub
std
repz
dec
cmp
inc
in
lods
pop
mov
xchg
cmp
push
mov
outsb
pop
xor
push
cmc
popa
cmp
xchg
xor
int3
pop
adc
and
cli
fs
pop
mov
das
test
lock
lea
push
aaa
in
pop
cmpsl
sub
jl
mov
or
addr16
add
mov
cmpsb
jne
clc
mov
fstl
gs
movsb
push
fwait
cmp
and
lock
cs
push
lods
mov
jmp
inc
sub
aaa
mov
dec
push
xchg
mov
iret
jno
add
dec
shll
xor
hlt
mov
ljmp
inc
jnp
aaa
xor
mov
xchg
iret
aas
int
std
iret
mov
subl
mov
add
mov
in
testl
xchg
mov
lahf
rclb
add
aas
xor
add
dec
push
add
je
clc
mov
mov
mov
imul
pop
fnstsw
or
pop
aaa
scas
icebp
cmp
fisttpll
inc
mov
sbb
jg
test
pusha
inc
lahf
loopne
stos
xchg
lods
jle
xlat
in
jmp
int3
shrl
lds
lds
xchg
into
or
movsl
mov
daa
ret
test
inc
push
xchg
ss
cltd
cmp
lea
in
push
mov
adc
fs
rolb
mov
inc
es
addr16
mov
das
dec
push
test
addr16
xlat
cmp
out
popf
cltd
ss
icebp
jge
cmp
xchg
adcl
aaa
cmp
in
cs
adc
ljmp
mov
cld
scas
sbb
fs
mov
clc
mov
inc
mov
cli
sbb
jecxz
add
add
jp
stos
push
or
sub
dec
je
xchg
push
popa
pop
and
cmp
pop
cmpsb
scas
jno
nop
xchg
or
ret
rcrb
or
inc
adc
pop
mov
repz
sub
dec
jnp
scas
xor
out
dec
aaa
mov
cld
mov
jnp
jb
loop
jno
loope
sbb
push
jo
xor
sub
push
cltd
daa
mov
ret
cmp
jno
adc
into
sub
push
mov
mov
cld
fimuls
mov
out
jae
cmp
add
jno
popa
jg
adc
leave
into
insb
fimuls
lock
repnz
loop
int
mov
jae
rolb
mov
adc
jp
insl
and
fmull
leave
fmuls
cmpsl
sbb
into
stos
sub
fwait
popf
xor
mov
ja
mov
or
mov
xor
mov
mov
inc
iret
aad
xor
call
cltd
jne
mov
es
lret
push
jecxz
xlat
loopne
push
lods
xlat
mov
test
lock
xchg
xor
jl
fs
sub
stos
scas
jle
mov
test
mov
shrl
push
jle
movb
xchg
jbe,pt
pop
arpl
jno
insb
icebp
gs
pop
rcll
sbb
popa
movl
xchg
mov
push
sbb
jne
sub
ss
mov
pop
xchg
dec
add
dec
stos
xlat
mov
push
or
pusha
shrb
dec
ret
sub
push
mov
lcall
or
adc
in
sarl
push
test
ffree
sub
loope
addb
dec
sbb
push
adc
mov
xchg
out
out
push
int3
push
or
in
or
mov
or
add
fwait
sbb
and
dec
mov
and
or
fistpll
mov
xor
out
lahf
cwtl
dec
out
les
loop
and
int
jmp
aas
jmp
xchg
lea
cmpsb
cmp
dec
mov
fmuls
pop
sti
pop
xor
shrl
jmp
mov
mov
out
ljmp
scas
adc
dec
lds
add
out
out
subl
and
mov
pop
xchg
ret
int
aad
insl
lds
in
call
dec
rcr
add
sbb
ja
mov
mov
push
insl
test
add
fwait
mov
stos
inc
jmp
sbb
test
push
ljmp
mov
sub
xchg
es
push
sub
add
push
adc
subl
cmp
pop
sahf
into
jl
xor
ds
jae,pn
add
aaa
divl
fwait
and
into
pop
mov
xor
add
mov
push
lock
sbb
xchg
inc
fwait
adc
ret
xor
pusha
cmpsb
das
divl
out
sbb
cwtl
fsubrl
popa
sub
sub
fstpl
and
push
xchg
shl
out
rolb
das
adc
add
mov
mov
pop
shld
lret
add
mov
out
pop
dec
movsl
rorl
mov
les
mov
bound
int
and
and
ds
test
icebp
rorb
jnp
xchg
inc
lcall
inc
dec
cmp
jbe
loope
add
or
scas
mov
les
pop
int
aam
or
outsl
or
push
ds
xchg
push
leave
mov
std
orl
inc
mov
fldt
js
sub
inc
sub
dec
or
movsl
xor
push
cmpb
in
jge
or
add
mov
test
push
clc
pop
pop
popa
out
pop
and
push
scas
mov
ja
push
xchg
mov
xchg
inc
in
mov
mov
mov
test
push
das
mov
jecxz
ja
in
mov
inc
movsl
pop
mov
mov
ret
mov
repnz
xchg
or
jns
mov
shlb
mov
or
addl
push
faddl
int
add
rclb
push
sub
shr
cmp
dec
int3
inc
ret
xor
roll
jns
inc
push
cmp
pushf
mov
push
and
xor
sub
jne
cmp
jmp
je
ret
jns
push
push
and
cmp
ficoms
shlb
sbb
xchg
cmpsl
push
xchg
jmp
or
insb
leave
push
cmpsl
leave
cmp
mov
or
xchg
scas
and
and
fldenv
pop
sbb
test
mov
repnz
repnz
scas
mov
dec
and
xchg
and
mov
mov
iret
insb
in
xor
outsb
pop
imul
push
dec
sarb
dec
xor
jno
cld
xor
and
repnz
fisubs
pusha
lea
sbb
aam
jge
or
aaa
jecxz
bound
xchg
aaa
add
sbb
pop
ja
sbbl
pushf
cmpsl
adc
das
loopne
and
or
rclb
test
push
add
pop
cmp
mov
sbb
fdivp
arpl
cli
je
addl
fwait
fwait
push
mov
xor
cmp
jne
insb
mov
inc
or
jno
enter
mov
or
jns
inc
sti
mov
fiadds
fiaddl
adc
sbb
movsb
and
push
rcll
and
in
sbb
pusha
xchg
jne
and
xchg
jmp
or
mov
push
sub
cmc
imul
or
sub
dec
or
pop
xorps
test
fidivl
dec
mov
add
sbb
bound
int3
aaa
jnp
pop
sahf
lds
shlb
jg
fadds
lods
lret
jecxz
outsl
mov
cmp
sbb
test
out
ljmp
pop
out
add
outsl
mov
and
jmp
sbb
lock
lock
mov
ljmp
dec
fyl2xp1
lods
push
push
shll
pop
mov
xor
mov
cs
negb
adcl
pop
adc
movsb
sbb
jle
add
rclb
imul
icebp
add
in
sub
loope
aad
std
fnstsw
pushf
push
and
or
sbb
pop
sbb
div
pop
dec
jg
adc
loope
inc
mov
or
repz
mov
push
sbb
jbe
jnp
jne
cmpsb
aaa
pop
ror
cmp
xor
aam
and
adc
dec
push
mov
or
push
enter
stos
pop
idiv
aaa
and
rolb
mov
notl
int3
outsb
dec
movl
or
daa
subb
mov
movsl
sti
aad
mov
cmp
add
or
xchg
add
dec
jl
xorl
cltd
or
dec
mov
adc
out
ljmp
popf
in
lea
arpl
dec
nop
call
dec
leave
das
js
or
mov
call
mov
mov
aaa
aas
mov
decl
mov
add
xor
fsubr
or
mov
nop
inc
push
scas
outsb
xor
pop
jb
shr
stc
scas
mov
std
ljmp
sahf
dec
pop
int
and
imul
mov
aas
inc
scas
mov
pop
cmp
cmp
aaa
je
gs
lret
insb
dec
push
loop
stos
pop
fwait
pop
mov
into
jb
iret
imul
lock
js
dec
add
in
inc
dec
mov
fdivrl
pop
adc
adc
push
sysret
repnz
ret
je
xor
lea
push
sahf
test
jnp
sbb
out
cmpl
push
lahf
in
jns
cmpl
cmp
mov
push
pop
mov
dec
xor
mov
mov
add
pop
cwtl
sbb
stc
xchg
jnp
repnz
xor
dec
ja
xor
dec
sbb
insb
jns
lahf
iret
mov
nop
ljmp
adc
insb
push
loop
test
frstor
leave
jge
pop
stos
loop
adc
stos
sbb
mov
ret
cmp
pop
cmp
int
std
xor
ficoms
pop
xor
mov
xchg
pop
cmp
inc
clc
mov
das
push
fcomp
mov
int3
or
add
es
aam
loop
xchg
lahf
jno
add
inc
or
subl
repz
negl
mov
sub
inc
pop
pop
add
pop
adc
mov
mov
popf
add
sub
outsl
imul
lret
xchg
es
shlb
movsb
call
jns
jmp
test
lret
pop
and
xor
mov
fildll
sbb
cmc
push
in
push
pop
sbb
sbbb
loope
xchg
jne
incb
pop
jg
insl
sub
and
adc
lock
mov
push
or
shr
add
mov
cmp
in
daa
js
lock
std
pop
test
pop
push
add
xchg
pop
das
adc
adc
xlat
sub
cmp
mov
pop
lods
add
mov
jo
jo
inc
enter
in
mov
push
call
cmp
aad
pop
data16
into
xlat
xchg
sub
call
pop
loopne
jo
sbb
add
pop
aam
add
add
add
push
xchg
ljmp
scas
lcall
jae
fdivrp
jo
fnstsw
fisubl
mov
sub
pusha
ficoml
das
loope
xor
movsl
sbb
cwtl
xor
and
into
cld
inc
cmp
jnp
or
inc
jecxz
adc
push
arpl
cmp
lock
popa
ja
cmpsb
pop
pop
jp
dec
push
aad
pushf
push
add
adc
das
std
rol
and
sub
push
ret
rorb
fldcw
ss
aad
jmp
sub
unpckhps
arpl
jb
mov
lock
addl
rcrb
adc
cld
mov
inc
in
xchg
mov
and
xchg
mov
mov
push
and
fidivrs
mov
pop
aaa
insl
or
out
mov
and
mov
sbb
jne
mov
mov
sahf
pop
fistpll
loop
imul
aad
sbb
pop
cmc
xchg
gs
stc
sub
cwtl
xchg
or
cmpsl
lock
xchg
movsl
xchg
andb
shlb
adc
sbb
cmp
in
dec
fcompl
aaa
in
mov
add
dec
cltd
mov
test
add
xchg
ja
xlat
xor
adc
pop
adc
add
test
and
dec
push
imul
bswap
jge
out
mov
sbb
daa
xchg
repz
fcoml
sti
outsl
cmpsb
les
cmp
jl
decb
mov
clc
mov
inc
jp
push
fmul
aaa
cmpsb
inc
add
mov
lahf
sbb
jns
mov
xor
clc
mov
in
push
pop
add
pop
push
jae
mov
dec
pushf
ja
push
sbb
andl
xor
popa
shrl
mov
out
loop
push
jp
jle
es
adc
aad
pop
nop
inc
jp
in
fnstenv
data16
ds
sbb
cld
push
or
sbb
adc
jp
test
jb
jns
and
aad
ret
inc
movsb
mov
fildl
incl
jl
pop
inc
mov
sbbl
lock
orb
cmp
cmp
add
or
sahf
repz
inc
sub
std
jo
gs
loopne
push
movsl
ret
sti
call
mov
sub
jp
mov
ja
imul
scas
dec
xlat
test
add
push
sbb
xor
sub
xchg
cld
push
int
jmp
xor
or
and
ret
dec
outsb
icebp
in
xlat
pop
movsl
push
or
xor
jp
jo
jecxz
jb
scas
mov
dec
jle
sbb
fimull
inc
popa
xchg
inc
outsb
cli
clc
dec
out
out
in
fwait
pusha
aad
stc
subl
testl
bound
jb
jg
out
lret
mov
cmp
dec
add
or
stos
ds
aas
insb
sub
test
sub
adc
add
inc
movsl
and
pop
bound
loopne
nop
js
in
xchg
jno
stos
shl
stos
js
jo
aam
mov
inc
xchg
ds
dec
mov
or
push
xor
addb
mov
outsl
inc
push
lret
repnz
add
push
mov
lods
inc
sub
push
inc
jno
sbb
jge
sbb
mov
cltd
into
xlat
jge
out
icebp
leave
sbb
mov
fildl
sub
mov
dec
jo
jbe
mov
in
sbb
adc
sahf
push
adc
mov
mov
sub
push
pushf
jge
pop
jbe
imul
xor
inc
fwait
sbb
inc
push
lea
mov
loopne
cmc
pop
outsb
lret
idivl
sbb
daa
push
xchg
popa
jnp
jecxz
stos
roll
push
sbb
inc
push
push
push
jge
push
decl
pop
push
daa
xchg
popa
in
adc
lods
dec
xor
clc
push
jns
enter
sbb
mov
xor
jmp
and
push
jmp
mov
sbb
dec
cs
pop
icebp
cwtl
xor
lods
mov
aaa
js
arpl
loope
std
rcrb
inc
test
sbb
cmpb
sub
aad
sbb
cmp
pop
mov
mov
les
enter
andl
sbb
test
je
pop
test
add
lret
icebp
mov
push
imul
lret
pop
outsl
or
add
jle
inc
movsl
in
cmp
xchg
pop
cmp
repnz
inc
lcall
push
xchg
mov
cmp
imul
cmp
aas
or
idivb
jo
and
lods
pop
adc
xchg
fadds
lods
call
sbb
lods
cmpsl
cltd
cmp
jl
lods
in
jecxz
add
hlt
sbb
daa
cltd
mov
rorl
mov
mov
popa
dec
or
add
cld
inc
and
shrl
xchg
mov
outsb
dec
mov
aam
pop
jg
cwtl
mov
cmp
add
pop
sbb
mov
jmp
notb
xor
mov
sub
clc
dec
insl
and
cmp
and
inc
addr16
loope
adc
pusha
mov
dec
lds
cmpsb
jle
mov
movsb
stos
fcmovnbe
jge
xchg
int3
jno
ret
in
jnp
cmpsl
filds
cld
cld
or
mov
jle
dec
mov
aad
outsb
aam
aas
mov
xor
add
out
out
jbe
lock
xor
cmp
pop
push
fs
dec
adc
inc
pop
jno
xor
pusha
shrb
push
sbb
adc
push
dec
pop
ret
dec
mov
fdivl
xchg
das
enter
adc
cltd
sub
xor
push
fwait
xlat
pop
cmp
into
mov
cmp
jle
or
mov
insl
ljmp
leave
fisubs
outsl
int
sbb
or
into
int3
dec
jae
sbb
enter
add
scas
repnz
imul
cmp
cmp
sub
dec
outsb
sbb
test
aaa
adcb
jmp
push
sub
out
push
adc
mov
dec
sbb
adc
shll
movsb
iret
test
inc
ss
mov
cmpsl
sbb
test
je
stos
ss
adc
xchg
stos
out
int
cltd
xchg
xlat
mov
aad
add
not
jmp
in
shrb
mov
aam
leave
lods
add
movsl
arpl
adc
push
imul
lods
push
sbb
or
out
sti
push
int
loope
xchg
or
push
mov
and
lret
mov
pushf
aaa
sub
jno
xchg
inc
orl
daa
inc
inc
lods
add
push
rcll
push
and
lods
rcll
loopne
cmp
inc
repz
call
cmp
cmp
fsubrl
lods
inc
fdivrs
cmp
lds
ja
mov
sbb
cmp
inc
aad
mov
mov
sub
cmpsb
cmp
push
cmp
test
sti
test
not
xlat
mov
mov
outsb
and
rolb
xchg
clc
pushl
sub
sub
gs
adcl
imul
pop
xchg
inc
fsubs
push
jno
jecxz
jb
jne
add
cmp
xor
mov
push
mov
xor
aam
bound
jg
movsb
pop
into
xchg
jmp
stc
mov
ret
cli
cwtl
lods
mov
sbb
or
pop
iret
or
outsl
mov
dec
push
int
pop
mov
or
push
jmp
cmp
push
iret
push
popf
inc
jmp
incb
xchg
pop
dec
call
fisttpll
outsb
mov
lods
icebp
jne
sahf
pusha
loopne
jecxz
pop
stos
mov
or
fsubr
les
inc
xor
mov
ret
cmpsl
fsubrl
xor
sub
xchg
sbb
popf
push
loop
dec
ja
into
fs
sub
mov
add
sub
std
cmpsb
push
mov
out
sbb
mov
cmp
loopne
jle
loopne
ja
das
repnz
aam
xchg
test
or
sub
dec
dec
test
dec
sahf
pushf
ss
cld
sar
das
adc
rcrl
or
adc
aad
adc
div
push
push
rcrl
ss
inc
push
jns
test
pop
daa
into
mov
rcrl
sahf
in
rorb
mov
scas
ljmp
cmp
popfw
cmp
sub
lret
mov
insb
xchg
xor
aaa
cmp
push
add
gs
fucomi
jp
cltd
call
sbbb
call
lock
add
into
add
jae
mov
push
decb
or
mov
add
xchg
inc
mov
or
icebp
mov
mov
dec
dec
notb
cmpsb
xchg
mov
lahf
jae
inc
dec
mov
and
add
or
addb
imul
lds
sbb
pop
jmp
jge
addb
sbb
jbe
aas
fidivrs
mov
or
sahf
mov
lock
dec
or
push
mov
repz
mov
inc
clc
mov
mov
fmulp
rolb
inc
push
sbb
in
pop
fimull
repnz
jmp
add
sub
add
ss
jb
mov
lea
inc
pop
cltd
mov
inc
push
or
loope
repnz
loopne
test
jbe
push
loopne
popf
imul
or
rep
movsl
fucomip
outsl
fwait
and
je
and
add
and
push
inc
or
mov
sbb
ja
adc
addr16
ljmp
mov
inc
loope
rol
lcall
mov
jl
dec
mov
xor
shrb
bnd
or
inc
adc
lea
inc
and
int
mov
adc
sbb
fsubrs
enter
lret
jecxz
mov
push
sub
pop
dec
jmp
call
jl
jbe
and
and
pushl
add
mov
icebp
lret
lret
xlat
or
cmp
movsb
lsl
shll
push
lods
pop
enter
scas
lcall
lret
int3
and
subl
lea
rolb
cltd
mov
fldenv
cmp
scas
out
fmuls
outsb
repz
xlat
jecxz
out
inc
mov
lock
and
cmp
dec
or
stc
daa
movsl
jmp
mov
mov
xor
dec
sbbb
pop
lods
in
repz
stos
mov
add
push
and
les
ljmp
xor
lods
sbb
shlb
jecxz
cmpsl
mov
xchg
sub
rep
in
cli
addr16
pusha
jle
add
push
loope
test
pop
inc
xchg
test
add
push
in
jmp
mov
cmp
mov
inc
cmp
sub
sbb
jmp
jg
and
call
jg
inc
mov
add
inc
arpl
call
pop
push
stos
fcmove
nop
cmpsl
cmp
dec
sbb
mov
das
jg
mov
adc
ret
inc
rolb
xchg
xor
push
push
inc
cltd
or
mov
mov
mov
aad
repnz
lahf
jle
push
jbe
test
adc
pop
fisubl
inc
xor
jne
lahf
dec
lahf
pop
stc
lock
jns
fsubrs
inc
rcl
movsb
mov
mov
jno
les
jbe
dec
sub
test
ds
adc
and
scas
xchg
lret
push
xchg
inc
in
mov
lods
cs
pop
mov
mov
push
pop
or
pusha
mov
filds
xchg
sar
mov
mov
imul
popa
xor
repz
push
jecxz
add
fstps
dec
add
mov
pop
das
pop
cmpsl
pop
in
and
xchg
push
jno
popa
adc
loopne
push
push
in
out
xchg
mov
mov
hlt
test
sbb
sub
clc
addl
fdivl
scas
lock
pop
loop
inc
dec
mov
call
ret
leave
mov
mov
rcl
cmp
inc
lret
call
mov
xchg
out
loopne
jge
iret
fwait
rclb
sub
loopne
lock
es
pop
jl
add
xchg
aas
int
lds
ds
push
lret
into
sbb
das
cmp
xor
popl
gs
insb
out
lret
and
inc
fwait
push
mov
jp
pop
and
int3
jecxz
adc
call
dec
sbb
push
push
call
or
inc
mov
cmp
cmpsl
cli
jo
pop
sahf
les
fistpl
mov
in
ja
into
clc
test
loope
jae
xchg
aas
mov
adc
push
xor
adc
sub
or
pop
dec
cmp
pop
std
cmc
hlt
dec
ljmp
test
cmp
cmpb
in
mov
jl
sbb
negb
pop
xchg
faddl
inc
dec
adc
aaa
scas
push
mov
inc
cmp
mov
aad
bound
popf
cmpl
iret
imul
fisubrl
cmp
std
hlt
mov
adc
sbb
lret
mov
fdivl
lret
stos
fsqrt
fidivrs
pop
cmp
lds
decb
scas
push
or
in
inc
push
push
xor
je
movl
dec
enter
mov
xchg
dec
jns
loopne
nop/reserved
loope
bound
jecxz
scas
repnz
pop
mov
mov
stc
popf
cli
je
out
ret
mov
cmp
mov
test
dec
out
xchg
mov
iret
test
xchg
cli
subb
jp
adc
or
sbbl
popa
popa
add
push
inc
jo
mov
add
add
adc
std
mov
jmp
xchg
push
lds
in
popa
xor
jmp
aad
cmp
sub
push
jle
scas
je
mov
ret
negb
hlt
jge
or
out
aas
cmpsl
cmp
push
lea
dec
push
push
cwtl
and
inc
fstpt
cld
scas
inc
and
bound
shlb
sbb
ds
xchg
jb
mov
add
xor
cs
cmp
fisubrs
rcrb
dec
out
mov
lcall
or
push
push
pop
jb
js
fcomi
scas
jae
mov
in
sbb
inc
pop
mov
push
mov
shlb
jae
ss
in
sarb
cltd
jno
push
mov
std
js
jle
mov
adc
leave
mov
mov
mov
popf
add
cli
mov
pop
or
dec
xchg
jl
cmc
and
pop
roll
sti
fwait
insl
fcompl
xchg
add
xchg
pop
test
mov
or
add
add
push
in
mov
jno
mov
das
sbb
jns
rolb
in
dec
pushf
inc
jnp
inc
pop
int
dec
or
insb
adcl
enter
jnp
xchg
xchg
mov
jb
in
iret
push
lcall
lcall
fildll
out
fwait
mov
mov
dec
mull
hlt
push
gs
aam
in
fisttpl
xchg
fbstp
mov
adc
scas
inc
fisubrl
mov
in
jo
dec
mov
arpl
out
jge
dec
mov
add
mov
mov
popf
aaa
dec
mov
clc
and
cmp
es
xor
jg
les
movsb
push
das
add
popa
arpl
dec
add
pop
out
dec
roll
mov
mov
out
push
ds
hlt
inc
jecxz
push
xor
rclb
dec
xlat
mov
rcrl
adc
pop
and
ds
pop
lret
or
add
call
xor
lods
xchg
les
push
fildll
ds
js
add
jnp
rolb
push
inc
sbb
clc
dec
cs
sbb
mov
test
cmp
daa
mov
xorb
sbb
push
mov
sarl
fcomp
adc
subl
test
sub
add
inc
mov
or
lds
popa
push
fimuls
mov
mov
lcall
jl
adc
ds
push
outsb
gs
jb
sahf
fnstsw
cmp
int3
imul
shrb
push
xor
adc
es
neg
imul
test
lcall
adc
mov
xor
add
jno
jae,pn
push
outsb
repnz
adc
std
std
loopne
sub
xchg
add
pop
pop
in
sarl
or
xor
lret
pop
push
jp
push
enter
push
mov
mov
cltd
test
sub
jmp
xchg
adc
xchg
test
jb
mov
sbb
mov
and
divb
inc
sub
xor
add
ss
icebp
push
jge
jae
mov
inc
fbld
aad
insl
cmpb
xchg
mov
mov
in
mov
aam
stos
cmp
insl
outsl
mov
mov
ds
popf
inc
rcrl
lcall
mov
or
aam
push
adc
iret
xchg
and
jnp
out
pop
push
sbb
pop
mov
jp
mov
scas
repnz
sbb
xor
xor
mov
sbb
cmp
jo
inc
das
cwtl
ret
stc
ret
call
cmp
notl
imul
in
lcall
dec
mov
push
and
inc
and
sbb
jb
sub
int3
pop
ret
scas
xor
movsb
sub
xlat
mov
imul
xor
popf
push
das
pop
loop
ud2
inc
adcl
mov
pop
scas
sub
js
pop
mov
and
insl
ret
stos
rcl
popf
movsb
js
add
mov
outsb
into
pop
mov
pop
xor
push
mov
or
pop
sbb
fmul
push
jns
lret
dec
fcoml
pushf
xchg
std
cmp
mov
aas
imul
sbb
in
bnd
es
xor
sub
sub
popf
rcl
inc
inc
fcomps
adc
lds
push
adc
cld
dec
cmc
sbb
pop
insl
pop
mov
in
inc
adc
sbb
scas
mov
add
xor
cmc
and
out
enter
lods
iret
and
mov
xchg
pop
insl
aas
sbb
lret
inc
in
je
push
enter
cmp
pop
xor
jmp
sbb
dec
dec
stos
sub
and
sub
decb
in
in
push
mov
push
jmp
rcrl
xchg
insb
je
mov
xchg
subl
jecxz
mov
enter
decl
incl
push
add
xor
or
sbb
cs
lods
mov
int3
push
jae
sbb
and
push
lret
mov
add
pop
sub
es
and
and
hlt
push
dec
ss
cmp
inc
jno
fimull
inc
leave
aam
mov
enter
or
push
mov
and
push
dec
aas
dec
pop
inc
jnp
cld
cld
and
fistpl
shrb
and
and
ret
sub
inc
push
mov
pusha
sbb
cs
popf
stc
enter
and
mov
inc
enter
and
inc
rorw
sbb
jbe
sbb
rcrb
jb
xor
sti
fdivl
pop
lds
push
inc
mov
add
adc
sub
sub
out
sbb
jbe
mov
sub
push
addb
ja
xlat
cmpsb
push
das
stos
popa
mov
xchg
xchg
scas
pusha
inc
int
vmovups
lock
mov
mov
gs
stos
mov
and
inc
scas
xchg
adc
mov
setnp
mov
ficoms
add
and
pop
xor
mov
sbb
int3
loopne
movsb
cmp
shl
mov
inc
loop
sub
or
leave
sti
arpl
mov
add
es
lret
lock
notb
popf
imul
inc
loopne
aaa
mov
mov
push
stos
xor
ljmp
addr16
mov
mov
mov
fdivrs
xor
xor
pop
lock
inc
pop
lods
xchg
data16
mov
bnd
adc
cli
int3
aas
push
lods
dec
sub
adc
ret
and
mov
call
clc
fiaddl
in
xchg
out
mov
iret
cmp
cmc
dec
or
into
aaa
xlat
jno
mov
xor
pop
sbbl
push
jo
aam
shlb
inc
fdivs
sub
insb
sahf
adc
or
dec
and
enter
addr16
push
add
dec
xchg
cmp
fstps
out
roll
inc
lcall
rcrb
faddl
cmp
pop
cld
push
lock
es
fs
push
movsl
dec
je
pmovmskb
repz
lods
mov
push
inc
xchg
stos
xchg
mov
loope
push
jno
mov
fldt
sahf
and
cltd
adc
cmp
aaa
mov
in
jl
imul
repnz
stc
out
pop
data16
mov
fidivrl
arpl
push
lods
xlat
xchg
pop
and
fistps
rol
mov
sbb
jl
mov
in
push
cmc
aad
inc
cld
xchg
popf
jle
test
aas
mov
jae
push
sbb
mov
xchg
pusha
or
and
inc
stos
xlat
sub
cld
xchg
pop
mov
lods
mov
clc
xchg
add
mov
call
dec
aaa
mov
cmc
mov
cld
cs
add
or
mov
xorps
sbbl
dec
jmp
mov
jl
adc
outsl
pop
cmp
fdivrs
lcall
xor
loope
ja
lods
popf
pop
add
inc
or
mov
aaa
xchg
mov
mov
push
push
sub
xchg
in
insl
xor
mov
cmp
add
jmp
or
cmp
jmp
sub
push
sti
rorl
mov
or
mov
push
fwait
popa
xor
and
fdivr
popf
push
push
rclb
iret
ljmp
push
je
repz
imul
aas
and
xchg
xchg
pop
and
jmp
mov
imul
mov
nop
loop
mov
inc
xchg
mov
cmp
cltd
add
lret
repz
dec
cltd
icebp
fdivl
pop
movl
jge
sar
and
fildl
lods
loopne
lgdtl
push
inc
rol
sti
sbb
cld
arpl
push
mov
jge
std
push
bound
leave
adc
gs
adc
fmull
mov
jg
mov
mov
mov
jo
and
dec
fcmovnb
dec
cmc
insb
push
jo
test
fldenv
loopne
in
icebp
std
push
add
repz
test
loop
push
xlat
iret
sub
cmpsl
ja
out
loopne
jo
xchg
cwtl
dec
int
adc
lcall
xchg
sahf
int
movsl
outsb
clc
int3
in
cmp
push
cmc
out
fbstp
push
mov
sbb
or
pop
dec
jnp
addl
lds
mov
fs
cmp
xor
cmp
mov
mov
shll
pop
mov
push
in
stos
push
and
push
shrl
jge
mov
mov
cmp
stos
xchg
sbb
ret
mov
inc
sbb
ret
in
dec
pop
add
fsubrl
icebp
cs
pop
jne
push
xor
sahf
fidivs
faddp
sahf
stc
jnp
insl
mov
or
in
mov
stc
dec
in
fiaddl
and
pusha
movsb
leave
inc
jns
sahf
aas
mov
mov
and
sub
push
adcb
ds
push
xchg
inc
mov
in
lods
push
or
push
loopne
xchg
ljmp
out
lcall
jb
dec
cltd
repnz
mov
sub
pop
fidivs
push
adc
adc
sbb
addr16
push
adc
jp
jne
adc
mov
cmp
out
add
or
mov
fwait
sub
imul
outsl
enter
inc
fcoms
clc
jae
test
pop
adc
mov
jecxz
rcll
out
icebp
jge
dec
filds
stc
push
sub
aas
fwait
mov
mov
movsl
or
sub
loopne
jno
inc
addr16
cld
inc
mov
mov
pop
mov
shl
in
ss
in
insb
push
or
cmp
sbb
out
and
cwtl
aad
pop
rcll
repnz
loope
mov
jecxz
outsb
dec
sub
push
sub
cmpsb
mov
ja
cmp
outsl
dec
repz
sub
mov
dec
ds
fidivl
mov
lock
push
iret
jns
add
adc
icebp
dec
cmp
sti
jno
jne
mov
scas
insb
out
pushf
push
mov
mov
adc
adc
and
xlat
ljmp
sbb
out
and
jns
aam
hlt
or
sub
pusha
ret
cmpsb
stc
pop
das
push
repz
out
data16
dec
or
mov
lahf
mov
scas
add
inc
mov
ficoms
and
dec
inc
rolb
sub
addl
inc
cmp
shrb
mov
repnz
mov
addr16
cltd
jmp
aam
inc
sub
test
shrb
pop
pop
ret
outsl
pop
xchg
mov
lods
xchg
sbbb
xchg
jg
jne
es
xor
daa
and
rorb
ret
sub
sti
mov
rcll
data16
sarl
pop
sub
xchg
in
xor
pop
lock
pop
pop
sti
popf
insl
xchg
sbb
rcr
ljmp
fimuls
jno
xchg
lds
out
xor
test
jnp
scas
imul
js
cli
hlt
mov
adc
je
push
sub
andl
cmovns
ss
mov
jno
cmp
ret
pop
icebp
repz
mov
in
xor
xor
mov
cli
repnz
push
inc
lahf
cmp
jbe
mov
movsl
pop
mov
mov
shlb
lock
imull
xchg
adc
pop
cmp
push
daa
ret
lret
jg
insb
out
into
cwtl
test
aas
dec
mov
daa
mov
ror
xchg
jmp
pop
inc
je
in
cld
cmp
lret
ret
leave
mov
inc
js
into
ds
ljmp
xchg
clc
out
jl
inc
pop
ja
xlat
xchg
pop
pop
xchg
fwait
into
loop
rcrb
inc
clc
lret
ljmp
idivl
and
xor
sbb
mov
xor
rcrl
cmc
fmuls
mov
outsb
cmc
mov
das
ret
mov
imul
cmp
dec
add
cmp
mov
xchg
aaa
mov
in
jl
in
xchg
daa
dec
jp
ror
jg
in
mov
fdivrl
inc
pop
push
arpl
or
and
cmp
test
mov
popa
jg
fldt
ret
int
les
adc
in
dec
fucomi
sti
inc
dec
push
jb
mov
mov
iret
and
dec
mov
scas
jg
mov
mov
inc
shlb
mov
mov
dec
mov
pop
sbb
data16
mov
sarb
xor
in
or
andb
inc
cmpsl
sub
mov
pop
add
mov
and
in
lods
add
sub
outsl
lock
xchg
xchg
cmpsl
movl
fsts
mov
mov
sub
mov
dec
orl
sbb
jns
test
mov
push
mov
lret
push
dec
gs
rolb
sub
push
inc
dec
test
roll
push
cmp
adc
daa
out
sbb
aam
mov
addl
out
cmpl
dec
fwait
daa
test
popf
movsb
pop
dec
push
pushf
jecxz
add
mov
ja
repnz
les
jno
push
mov
sub
lds
je
jnp
and
ja
xor
or
dec
or
clc
dec
push
mov
inc
shll
dec
in
pusha
or
dec
mov
mov
push
lods
adc
sub
push
and
mov
push
movl
fs
and
out
popf
not
push
outsb
pop
dec
jae
mov
popa
mov
push
pop
cltd
pop
leave
pop
imul
sub
pop
test
mov
in
loop
cmp
sub
push
std
ss
cmp
cmpsb
gs
fwait
div
sub
jne
inc
fstl
inc
fxch
or
xor
insb
xchg
clc
test
ss
data16
repnz
pop
pop
ljmp
xor
call
mov
xchg
mov
movsb
push
out
lret
stc
adc
push
cmc
pop
pop
scas
adc
mov
xor
sbb
mov
lock
outsb
mov
lods
or
push
jp
out
lds
decb
inc
adc
pop
cmp
jo
jbe
sbb
or
das
cld
mov
mov
rcr
dec
add
dec
add
test
cmp
mov
outsb
xchg
lcall
jecxz
push
mov
xchg
cmp
mov
push
dec
pop
add
loope
and
jmp
jmp
clc
rcll
insl
ds
pop
fisttps
lock
js
out
into
insl
dec
and
xchg
mov
adc
insl
adc
clc
pop
jl
enter
mov
dec
jno
leave
mov
push
pop
push
cmp
xchg
shrb
je
mov
xorl
sub
pop
es
mov
xorb
lock
pusha
mov
or
xchg
into
int3
dec
out
es
out
pop
imul
and
add
add
out
pop
int
inc
xor
shrl
add
das
jge
xchg
mov
ficoml
fisttpll
adc
cmp
sbb
lcall
mov
push
sbb
inc
mov
loope
adc
pop
pop
jo
mov
fbld
or
lret
push
mov
mov
and
xor
idivb
fimuls
add
fwait
sahf
push
sub
push
sbb
lock
cmp
andl
cmp
outsb
mov
cmpsl
xchg
icebp
xor
mov
sub
and
and
mov
ss
pop
lods
leave
aaa
sarl
mov
xor
adc
mov
push
inc
inc
sub
adc
dec
sbb
adc
popf
sarl
sub
imul
or
stos
lret
mull
lods
cli
cmp
nop
aam
or
inc
movsl
cltd
bound
fs
sbb
outsl
push
add
dec
add
mov
sarb
repnz
mov
jo
jno
dec
sarl
jge
out
ss
and
mov
das
mov
push
push
push
gs
cltd
adc
lret
fwait
jo
push
mov
jecxz
push
sbb
add
dec
push
daa
cwtl
xchg
in
jno
mov
push
jg
mov
jle
lahf
in
xor
sub
dec
pop
mov
adc
lods
lahf
fstpl
mov
xchg
or
das
sub
mov
stos
cmpsl
push
div
repnz
xor
mov
mov
sbb
mov
pop
push
sbb
mov
mov
lods
cmp
mov
icebp
xor
push
xor
jp
imul
repz
dec
adc
rorb
pushl
lock
rolb
icebp
cltd
outsb
inc
iret
cwtl
aas
xchg
add
sbb
push
and
jne
jns
pop
in
cmp
rolb
dec
xchg
dec
test
push
mov
push
fcomps
shlb
and
mov
lcall
and
imul
imul
jno
es
xchg
pop
int
scas
movsl
mov
pop
loop,pt
insb
inc
sbb
inc
mov
stos
adc
in
jmp
mov
push
push
dec
bound
push
push
and
push
lcall
mov
push
ficompl
jns
arpl
adc
inc
cli
loope
add
mov
outsb
movsb
dec
stos
pop
inc
or
push
add
xchg
sbb
pop
inc
adc
popa
inc
adc
loopne
popa
sbb
mov
mov
subb
lcall
popf
jb
or
out
sarb
push
insb
fstl
nop
xor
sahf
inc
xchg
adc
adc
jns
pop
xor
fisttps
inc
or
test
out
int3
sub
cmp
jb
subl
cld
xor
lret
inc
cmpsb
ror
adc
cmpxchg
pop
add
dec
adc
paddusb
jp
sbb
fs
add
idiv
insb
dec
push
mov
jb
add
scas
stc
xchg
mov
repnz
xlat
cmc
mov
fdivp
sbb
add
xchg
rorl
push
inc
mov
pop
loop
jp
pop
rol
sti
xchg
push
stc
xchg
pop
push
xchg
popa
fwait
lret
rep
lahf
jnp
imul
lret
jl
aad
dec
aaa
ret
adc
inc
iret
loope
pop
pop
andl
inc
cmp
call
bound
push
mov
mov
mov
outsl
cmp
out
sti
clc
ja
add
xor
ds
ljmp
pop
mov
or
mov
js
or
mov
and
and
test
pop
fs
in
or
mov
mov
push
movsb
ljmp
mov
sbb
rcl
pop
test
cltd
xchg
xchg
sub
leave
neg
mov
fistpl
cmpl
sub
xchg
or
jle
cs
push
mov
inc
out
pop
push
hlt
xchg
pushf
sub
fimuls
inc
inc
hlt
cmp
lods
subb
pushf
js
fisubl
sbb
popa
pop
xchg
js
enter
bound
clc
mov
mov
aam
mov
pop
stc
aaa
dec
mov
push
int
movsl
push
sti
or
dec
mov
push
push
add
inc
mov
pop
mov
aam
jg
ret
jge
lea
rorb
lock
pop
cmp
sub
xchg
or
inc
jmp
test
adc
cmp
ss
call
int3
ret
sub
pop
xor
or
js
in
rorb
cmp
cmpl
add
and
imull
or
xchg
and
movsb
mov
clc
test
pop
add
mov
push
mov
loopne
rorb
sub
in
sbb
sarb
ja
xchg
repnz
lcall
imul
sarb
les
shr
inc
add
cmp
pop
repz
imul
leave
dec
lock
out
in
ds
leave
cmpsl
pop
cmpsl
sub
mov
sub
and
fs
add
addr16
or
inc
ja
addr16
or
mov
mov
in
pop
sbbb
rcrb
lds
je
pop
dec
pop
das
loope
push
push
xchg
dec
inc
popa
mov
add
scas
and
jnp
es
sbb
xchg
sub
xchg
and
insb
test
mov
sub
mov
inc
push
fldcw
test
and
movl
push
jo
inc
jo
fcoms
out
rcrb
std
mov
mov
daa
cmp
shlb
out
out
in
cmp
imul
xchg
lds
cmpb
inc
icebp
icebp
cmp
lahf
in
jae
xor
imul
test
cmp
and
pop
cmc
add
mov
fldcw
fcomps
inc
adc
or
loop
mov
xchg
testl
pop
mov
sbb
adcl
add
push
xchg
mov
call
andl
and
loopne
scas
adc
pop
sti
dec
push
rclb
xchg
insl
xchg
pop
lret
loopne
stos
mov
inc
push
push
jnp
mov
xchg
pop
xor
rolb
pusha
mov
inc
sub
cmp
inc
sub
out
lret
mov
inc
out
pop
inc
dec
lahf
inc
xchg
or
push
std
sbbb
jb
cwtl
pop
or
sub
and
popf
cltd
cli
add
roll
mov
aad
test
pop
mov
cmpl
sbb
mov
lretw
add
or
mov
and
popa
xor
mov
sbb
fcomps
dec
es
insl
add
mov
xchg
sub
stc
mov
ret
shl
outsb
pop
cmc
mov
xor
jl
xor
sub
add
inc
aam
pop
lcall
mov
inc
pop
jbe
push
std
out
xchg
sub
dec
fiaddl
aam
cmpsb
push
stos
xor
dec
bound
mov
out
xor
int
fcoms
rclb
or
into
and
push
cwtl
mov
and
inc
jmp
mov
cltd
orb
pop
icebp
mov
fmull
push
clc
mov
cmpsl
mov
xchg
fcompl
mov
push
mov
sub
je
les
mov
xorl
mov
add
adc
dec
shl
test
test
lods
pushw
ljmp
sbb
cmp
imul
mov
call
lea
xchg
test
lds
subb
fidivrl
push
sbb
or
orps
mov
cs
lret
xchg
cld
sahf
pop
les
or
call
out
repnz
xchg
mov
xchg
test
jp
cld
sub
cmp
push
ror
outsl
lret
sub
cmp
je
mov
sbb
sbbb
ret
and
test
xor
dec
cli
fcmovnb
out
sbb
lret
xchg
pop
out
orl
cld
mov
arpl
in
xor
mov
pusha
xchg
sub
pop
fisubrl
or
repnz
push
mov
cmp
fs
mov
cmpsb
jmp
jmp
mov
mov
dec
jne
popf
jecxz
push
mov
cwtl
arpl
cmc
adc
jbe,pn
out
jge
jle
sbb
icebp
mov
ds
cmp
cltd
mov
lahf
xor
mov
cmpsl
dec
daa
movsl
pop
jecxz
cmp
clc
sbbl
xchg
xchg
xor
cmp
mov
dec
add
jb
pop
mov
aam
jge
leave
cwtl
xchg
fs
bswap
pop
int
add
aam
cmpsb
lods
ss
data16
mov
rclb
cli
leave
dec
dec
mov
xor
cli
dec
ret
sub
rcrl
lahf
in
pop
pop
lods
daa
mov
mov
sarb
pop
adc
sbb
arpl
push
dec
mov
insl
cmpsb
cmp
mov
xor
fcoms
add
movl
pop
scas
repnz
out
dec
aam
lahf
mov
outsb
les
sarl
xchg
mov
les
mov
cmpsb
shll
fnop
ret
out
sti
sub
jp
mov
cmp
sub
lock
andb
pop
cmc
xchg
icebp
sub
aas
xchg
dec
cwtl
popf
jge
fwait
xlat
fstl
movsb
test
lods
fsub
gs
xchg
shl
mov
mov
mov
shl
cltd
lcall
xor
adc
sub
jno
dec
test
adc
sbb
inc
out
add
cmp
icebp
mov
mov
je
fcoml
xchg
cmp
movsb
xchg
xor
enter
xchg
push
xor
addr16
gs
gs
mov
inc
dec
sbb
scas
push
lret
loope
sbb
outsl
inc
cmpsb
xor
in
xchg
stos
repnz
shl
ret
dec
fs
lret
jle
int3
pop
inc
imul
inc
xchg
and
xor
imul
lret
and
lods
xor
jle
push
data16
cmp
testb
ret
sbb
aaa
fwait
push
sahf
push
test
mov
pop
test
cwtl
jg
dec
mov
lods
popa
shrl
or
stc
mov
mov
xlat
popa
lret
inc
add
dec
xchg
lea
int3
imul
add
aad
loopne
cmc
sbb
and
mov
gs
std
add
test
in
mov
sub
test
add
dec
xlat
xor
fwait
adc
dec
sub
xchg
std
pop
sbb
push
mov
xlat
push
pop
outsb
or
sbb
roll
cmpsl
cmpb
mov
mov
push
ret
fwait
jl
lock
xor
pop
test
enter
arpl
es
outsb
mov
leave
sbb
in
adc
addr16
xor
mov
lea
out
bound
jle
divl
lods
and
dec
outsb
gs
out
out
fwait
sbb
shlb
stos
fcomi
adc
sbb
pop
mov
adc
or
inc
fsub
ss
bts
sub
xor
fwait
insl
mov
xor
and
mov
aad
pop
xchg
enter
xor
lcall
test
lcall
jecxz
sarl
dec
into
test
dec
jmp
dec
fs
test
js
aaa
jle
in
outsb
imul
leave
mov
jecxz
cli
aas
loop
mov
je
push
sbb
cmp
sbbl
js
lods
xor
dec
xchg
insl
mov
ficompl
out
ljmp
ljmp
movsb
mov
inc
sub
mov
push
test
loop
je
mov
jg
sti
ja
pop
mov
jnp
push
cmc
xchg
mov
negl
push
pop
ret
test
mov
pusha
aas
ja
mov
or
inc
and
out
call
mov
add
jne
fsubr
xlat
pop
cmp
xchg
roll
mov
loopne
jge
sbb
incb
popa
jl
cmp
aam
pushf
jecxz
test
mov
ljmp
add
ja
aad
mov
and
sub
call
xchg
leave
fisubrs
jae
arpl
cmc
scas
xor
int
or
lods
adc
jno
aam
mov
idivl
das
cmp
add
sub
cld
dec
andl
je
stos
test
adc
ja
push
add
xor
shll
out
push
fadds
mov
xchg
mov
inc
push
mov
push
inc
fs
nop
ja
shl
or
into
aad
inc
dec
in
imul
adc
lret
push
sub
bound
mov
jge
mov
stos
inc
rcl
mov
inc
mov
aad
jo
popf
jbe
cmc
jne
test
sub
pop
imul
mov
shl
int3
loopne
jns
mov
aas
in
fcoms
loope
cld
icebp
jmp
fs
pop
jb
mov
push
arpl
repnz
or
les
lcall
ficomps
mov
inc
or
movsl
inc
pop
shlb
add
ds
pop
std
push
mov
mov
push
xchg
sub
jmp
add
shrl
in
dec
pop
mov
mov
das
dec
push
mov
loopne
out
in
jmp
out
and
sub
pushf
arpl
mov
xor
loope
aas
lret
jae
out
sub
hlt
arpl
pusha
cmc
movsl
pusha
out
push
xor
cmp
or
test
jle
mull
mov
clc
addr16
jne
cmp
pop
aad
xor
fbld
repz
pop
dec
jg
adc
mov
add
add
sbb
pop
sbb
mov
repnz
out
adc
fwait
iret
mov
lds
lahf
jb
testl
xchg
je
lcall
ljmp
data16
cmp
stos
fdivrl
cmpsb
mov
sub
inc
mov
jne
jnp
xor
fcoml
test
cld
or
and
and
bound
push
mov
xchg
repnz
dec
fsts
mov
outsb
or
outsl
pusha
fstpt
rol
and
push
add
mov
out
pop
dec
dec
cmp
and
sbb
add
scas
js
pop
ficompl
push
notl
xchg
xor
xor
loop
cmc
pop
lds
imul
pusha
popa
inc
mov
cmpsb
jns
pop
sub
cmp
dec
idivl
mov
dec
adc
push
test
cmc
mov
sbb
das
cmova
or
add
dec
pminub
or
and
xchg
jo
imulb
les
add
inc
mov
insl
pop
dec
adc
adc
pop
hlt
add
dec
enter
jecxz
lds
mov
mov
rolb
xor
pop
dec
scas
std
fsts
xchg
es
in
mov
shr
xor
dec
rorl
pop
std
in
aaa
mov
aaa
cs
inc
hlt
dec
les
jbe
push
pop
dec
add
dec
lods
mov
mov
push
fisubl
out
xor
ficoml
dec
and
call
pop
mov
dec
pop
add
jbe
pop
fstpt
out
mov
movsl
aas
jns
daa
push
rolb
mov
push
ret
inc
mov
adc
rol
mov
ja
fwait
out
pop
lahf
sbb
pop
mov
sub
sbb
xchg
inc
cmp
int3
xchg
in
xchg
cmp
jbe
push
aas
into
jbe
add
mov
test
xchg
mov
mov
ds
lea
xchg
repz
loope
inc
fsubrl
movsl
push
roll
stos
push
pop
push
sub
add
sub
shlb
fisubrs
in
test
lret
popf
mov
iret
mov
mov
cmpsb
or
dec
out
mov
and
and
pop
mov
inc
mov
mov
xchg
mov
fwait
cmp
lods
pop
out
mov
data16
cmp
adcb
popa
jbe
pop
cs
mov
push
inc
inc
data16
loope
cmp
and
mov
test
ss
push
push
cli
xchg
cmc
or
mov
or
pop
fprem
xlat
xor
add
lcall
jmp
pusha
repz
mov
movsb
es
jno
pop
das
adc
xchg
cmp
jne
and
inc
pop
mov
xchg
jge
mov
add
jg
jl
lea
and
not
outsb
pusha
pop
mov
add
stos
sbb
sub
and
loop
fdivl
pusha
push
dec
fmulp
pop
or
shrl
xchg
test
push
and
xchg
fldt
movsb
add
movsl
sub
xchg
ja
lcall
mull
inc
push
flds
stc
fisttps
outsb
adc
adc
bound
call
push
xor
xchg
mov
sub
fcom
jne
mov
sbb
and
movl
call
loope
enter
test
or
mov
add
repz
arpl
ljmp
and
pop
inc
and
int3
jno
mov
xor
or
std
jle
out
movsb
ret
and
out
scas
xchg
push
jns
daa
xchg
ss
ss
mov
popa
push
xchg
xlat
jno
popa
movsb
lods
mov
faddl
rclb
xor
insl
test
mov
push
inc
sub
xchg
jbe
or
push
cmpsb
jmp
cli
movsb
jbe
push
sub
fisttps
jmp
pop
lods
fs
js
imul
bswap
stos
outsl
mov
das
pop
jp
aaa
mov
push
loopne
adc
inc
pop
shr
dec
call
arpl
mov
sub
lock
out
sub
jle
cmp
push
xor
fsubrl
inc
pushf
xor
icebp
or
xchg
loop
ds
out
cmp
cmp
add
lds
inc
or
int3
or
cmp
xchg
cmc
les
jg
es
xchg
xchg
mov
mov
sub
insl
insl
mov
pop
test
orb
cmpsb
das
xchg
adc
mov
sahf
add
pop
or
or
mov
mov
adc
jl
xor
shll
jecxz
popf
cli
and
xchg
dec
cmpsb
out
adc
loope
and
ret
fldenv
or
xchg
je
shlb
mov
jns
xchg
push
adc
in
shll
push
lods
xchg
incb
mov
iret
sub
mov
imul
jb
mov
dec
mov
or
pop
mov
or
or
inc
inc
sub
addr16
ret
pop
fnstenv
sub
jge
cs
xor
or
jmp
lds
in
lret
adcb
cmc
jle
pushf
dec
out
xorl
testb
jmp
jg
repnz
bound
ja
ret
add
ja
adc
sbb
mov
sbb
aam
int
mov
and
jp
call
incl
loope
pop
xlat
mov
cmp
push
pop
fiadds
dec
mov
mov
stos
pushl
pop
xchg
cmp
xor
dec
sbb
pushf
outsl
cltd
jno
loopne
fwait
sub
negl
fcmovbe
lahf
mov
hlt
dec
das
insl
stc
lret
adcb
jecxz
or
popf
rclb
pop
mov
mov
jns
sarb
add
mov
jle
xchg
xor
or
xchg
add
lahf
xchg
and
pop
cli
fists
repz
pop
pushf
sbb
add
out
out
int
dec
enter
cmp
push
es
pop
aad
test
xor
adc
es
pop
bswap
mov
mov
lock
adc
or
xchg
pushf
stos
jmp
cmpsb
push
adc
out
leave
jo
je
das
jle
add
sbb
mov
ss
bound
xor
or
jbe
lock
inc
lcall
outsl
les
cli
add
mov
ja
cmpsl
fistl
sub
lds
insl
mov
inc
jne
or
sbb
bound
aaa
pop
push
mov
mov
ljmp
mov
inc
sarb
stos
rcrb
inc
cmp
sbb
rcrl
lds
push
mov
pop
pushl
fisubrs
mov
inc
add
repnz
mov
iret
sbb
sti
das
jecxz
sub
imul
inc
cmp
ret
test
fsubs
mov
lods
mov
fwait
push
mov
sbb
aad
loope
hlt
inc
stos
test
add
jb
shlb
or
je
gs
scas
mov
pusha
test
cwtl
add
pop
mov
jp
out
roll
mov
mov
std
stc
sbb
mov
movsl
xor
das
pop
xchg
pop
or
mulb
jne
xlat
xor
pusha
cmp
data16
sti
in
popf
push
xchg
push
jl
icebp
rcrl
in
add
inc
push
mov
sbb
cmp
inc
mov
mov
ja
jle
int
jae
mov
adc
sbb
popa
sbbb
loope
lods
popf
rolb
jb
ret
clc
lods
mov
bnd
mov
imul
lea
lods
insl
adc
mov
pop
lret
ljmp
and
aaa
xor
mov
les
sbb
outsb
inc
dec
aad
sub
xchg
rcrb
loope
push
aam
movsl
cmpl
xchg
jne
or
cmp
inc
jnp
jmp
jle
scas
test
data16
pop
out
adc
xor
or
push
stc
arpl
push
mov
or
mov
pop
mov
jp
or
in
cld
cmc
jne
adc
cmp
push
dec
repnz
dec
loopne
jge
xor
sub
addl
imul
ret
mov
pop
lea
adc
push
shlb
ljmp
inc
xchg
xchg
jno
push
sub
arpl
adc
cmpsb
adc
and
mov
in
pop
repnz
sbb
jae
mov
add
jbe
pop
mov
and
hlt
loope
dec
dec
rcrl
cwtl
mov
jge
dec
je
push
fnstenv
lahf
push
ret
gs
xor
popa
push
icebp
push
sbb
jmp
mov
mov
dec
outsl
call
mov
shl
sub
fwait
adcl
pop
in
aad
mov
xchg
roll
and
fnstcw
push
or
or
mov
dec
sub
movsb
inc
mov
movsb
adc
bound
pop
fcmove
mov
or
adc
cwtl
xchg
add
dec
mov
push
cmp
mov
je
mov
les
xchg
sub
inc
jp
rcr
sar
lcall
sub
or
daa
cli
pop
jg
push
sub
mov
xchg
inc
out
lods
dec
add
dec
sub
enter
out
xchg
push
fmuls
call
cmp
lret
pop
or
mov
mov
dec
leave
pop
insl
daa
sbb
add
mov
iret
or
subl
mov
pop
inc
out
and
scas
arpl
adc
jns
adcb
aaa
sub
push
stc
lds
pop
mov
xchg
adc
dec
mov
test
cmc
sub
loope
sub
repz
loopne
mov
mov
add
sub
or
mov
shl
lahf
sbb
cmc
imul
xchg
inc
xlat
out
sbb
fisttpll
push
test
adc
mov
popa
lret
mov
rorl
pop
shr
add
xchg
jns
inc
nop
adc
jecxz
adc
iret
mov
xor
icebp
add
cwtl
aas
sbb
push
push
imul
leave
iret
push
mov
mov
inc
push
xchg
cmpb
cmp
add
add
cltd
imul
aam
ficoml
push
dec
xor
and
sarl
shlb
call
inc
add
lods
nop
fisttpll
inc
pop
pop
das
lcall
je
cmc
sub
mov
sti
lahf
movsb
into
sbb
jne
mov
lahf
ljmp
mov
in
scas
pop
sbb
and
sub
pop
insb
mov
dec
sbb
stos
mov
js
pusha
sarl
dec
xor
xchg
fistpll
icebp
test
xchg
testb
les
xchg
push
xchg
inc
xor
and
mov
retw
push
fdivrl
test
inc
addr16
add
sbb
test
push
mov
outsl
das
xor
in
xchg
push
sbb
cli
and
or
add
or
iret
inc
fnstenv
test
add
xor
push
inc
scas
pop
sub
pop
mov
adc
push
adc
jmp
inc
lods
jno
or
pop
mov
fimull
aaa
mov
inc
mov
jne
dec
in
jecxz
xor
inc
xlat
addr16
in
xor
pop
jmp
inc
roll
and
lock
cmpsb
push
mov
cmc
inc
mov
pop
inc
fbld
hlt
testl
icebp
push
adc
xchg
pop
stos
adc
out
in
push
insb
dec
les
clc
stos
push
pop
or
dec
push
pop
or
jecxz
mov
pop
ljmp
test
sbb
dec
push
add
arpl
push
js
daa
xchg
stc
push
xor
sub
testl
xor
popf
push
dec
shrl
pop
movb
push
pusha
mov
add
and
std
sub
bound
inc
test
push
mov
push
out
fdivrl
jg
out
imul
mov
gs
das
out
inc
aas
mov
ret
xchg
mov
inc
pop
jmp
and
fs
repnz
and
adcl
pop
in
adc
mov
js
fnstsw
addl
xor
inc
dec
pop
xchg
inc
les
imull
pop
into
mov
scas
aam
mov
mov
outsb
xchg
shll
shrb
or
int3
scas
cmp
and
jne
sbb
jnp
xor
jns
push
mov
lock
sti
imul
lods
mov
in
mov
out
add
repz
or
jns
mov
rcl
dec
cmpsb
pop
popf
lea
xor
js
mov
ret
leave
test
mov
xor
pusha
xchg
test
cwtl
mov
popa
mov
shr
mov
push
adc
fcoml
xor
fisubl
stc
sub
push
or
mov
push
push
mov
ja
xchg
dec
inc
lret
or
mov
rcr
pop
sub
push
faddl
movsb
es
fnsave
xchg
gs
jne
add
in
mov
fnstenv
sbb
aas
xchg
fiadds
hlt
push
sbb
and
mov
mov
cltd
push
add
sbb
das
push
sbb
outsb
mov
cmpsl
pop
xchg
push
xchg
and
movsl
inc
loopne
clc
addl
push
insb
pop
rorl
pop
xchg
fs
rolb
lods
ds
scas
js
outsb
lret
bound
enter
mov
mov
and
mov
jle
arpl
dec
xchg
bound
jg
push
rorl
mov
popf
mov
test
movsl
lret
push
mov
mov
hlt
xchg
rcll
in
repz
push
rcr
andb
and
push
xor
lods
repz
inc
lods
or
cmp
lods
pushf
push
sbb
xchg
cmp
mov
or
lea
pop
inc
outsl
cmp
jb
inc
jb
push
imul
lea
test
ss
and
imul
stos
dec
mov
sub
inc
repz
clc
push
inc
mov
cmp
jp
imul
movsl
std
and
inc
outsb
cmp
lcall
fdivs
dec
cmpsb
pop
and
sub
sbb
mov
movsb
push
lds
out
push
xchg
xor
pushw
mov
jb
or
mov
mov
and
dec
inc
dec
loope
iret
mov
push
out
dec
jge
pop
das
jmp
mull
jp
sub
jbe
int3
nop
pop
mov
mov
mov
fldt
jne
int3
mov
and
pusha
mov
popa
adc
jo
push
dec
push
sbb
outsb
mov
fwait
into
imul
aaa
jmp
daa
pushf
sub
mov
adc
cwtl
fildl
mov
fsubs
pop
inc
cmp
xchg
fwait
movsb
aam
mov
insl
or
rcl
aad
sub
sub
out
cmpl
pop
jnp
in
mov
mov
adc
subb
andl
dec
imul
cmc
adc
fdivrl
clc
mov
daa
push
xlat
lock
jg
lea
aad
mov
sbb
call
mov
add
aas
rclb
out
test
push
add
mov
mov
incb
mov
jno
stos
lea
cmp
and
mov
push
test
lds
stos
rcrb
fs
idivb
add
jecxz
adc
sbb
xor
mov
mov
push
push
dec
sarl
add
jne
enter
jle
iret
insb
and
out
mov
out
fiadds
fisubrl
push
repz
clc
daa
insl
xchg
mov
mov
jno
push
cwtl
and
push
and
or
inc
jbe
inc
rcr
push
mov
ficoml
jae,pt
xchg
add
popa
mov
adc
add
xchg
popl
scas
jae
push
mov
push
in
pop
aad
xor
aam
cs
add
loop
jmp
arpl
into
je
jbe
sub
insl
xorb
pushf
sub
sbb
fucomp
stos
mov
jb
sar
pop
or
xorl
pushf
cmp
bound
push
popa
jg
pop
xchg
mov
shl
add
cmpsl
popa
mov
stos
mov
ret
mov
in
lods
nop
mov
push
xchg
fsubrp
movsl
test
std
loop
xchg
pop
nop
cmp
fucomp
jl
mov
cltd
movsb
cmc
scas
dec
pop
std
cwtl
notb
adc
mov
int
aas
sub
adc
xor
xchg
stos
stos
sbb
and
xchg
test
cmp
out
sub
or
loop
mov
xorl
aam
repz
mov
and
add
add
sbb
and
cmpsl
repz
ja
mov
lret
stos
mov
mov
mov
lret
sub
into
loopne
cmp
inc
js
cmp
clc
loopne
pop
lods
movl
mov
inc
sub
int
xchg
loope
inc
xor
mov
call
in
insb
sbbl
dec
cmp
ret
stc
mov
cmp
pushf
jb
lret
push
sbb
lret
cltd
fldt
sahf
pop
ss
mov
add
cmp
jmp
and
fsubs
lods
xchg
lret
pop
loope
jge
add
in
lret
cli
pop
mov
arpl
out
insb
jo
into
lds
mov
mov
adc
rcl
xchg
xor
inc
sbb
lea
popf
js
push
imul
mov
cs
mov
in
sub
or
jo
push
sti
mov
jns
sbb
xchg
mov
push
jecxz
cli
lock
jmp
mov
jb
dec
cld
mov
cs
push
std
push
nop
aam
mov
mov
pop
pop
and
xchg
xchg
in
jb
and
adc
push
and
xor
or
bnd
aaa
mov
cmp
mov
cmp
por
cs
fwait
pop
in
jle
jae
jp
mov
movsl
inc
jo
or
cltd
jp
mov
iret
ror
lea
shr
gs
ss
idivl
mov
movsb
stc
add
ret
jl
mov
adc
pop
popa
sub
mov
push
jne
ss
std
mov
push
aaa
mov
icebp
jmp
push
xlat
inc
dec
test
pop
nop
insl
fdiv
inc
pop
xchg
cwtl
repz
shrl
xchg
cmp
add
and
push
and
ja
cmp
lcall
icebp
push
or
dec
fldt
add
js
fwait
and
dec
xchg
mov
cltd
sbb
sub
ja
dec
fcoms
pop
je
mov
and
lret
mov
test
subl
scas
pop
push
jns
jbe
dec
and
int3
cmp
pop
fdivs
mov
imul
mov
aas
mov
loope
orl
adc
loop
sti
sbbb
cld
mov
pop
out
xor
mov
sub
in
sub
and
test
popl
mov
mov
push
dec
add
std
andl
outsl
scas
push
lock
sub
insb
lods
stos
inc
imull
add
pop
xchg
sub
cmpsl
inc
add
shrb
leave
xor
xor
push
stos
sub
icebp
sub
push
int
xchg
cmp
mov
mov
lods
std
cmpsl
daa
mov
mov
daa
movsl
xchg
iret
testb
icebp
rcr
push
sub
cmp
xlat
test
push
inc
hlt
adc
mov
xchg
lods
xor
mov
fimuls
outsl
pop
mov
or
jecxz
sub
dec
sahf
sbb
pop
dec
test
imul
push
jb
icebp
inc
push
sbb
test
mov
sub
mov
mov
fsubl
ljmp
adc
inc
lret
and
cmp
mov
jb
inc
jae
mov
sbb
push
aas
xchg
sub
sbb
dec
inc
iret
out
int
shlb
dec
mov
mov
jnp
out
cmc
fs
xchg
decl
dec
push
pusha
xor
or
add
jne
cmpsl
fidivrl
dec
xor
insl
dec
fmuls
mov
pop
mov
ret
daa
movsb
stos
pop
fs
stos
dec
notl
jle
mov
push
mov
testl
mov
dec
push
dec
and
movsb
clc
fnstenv
xor
push
mov
pop
repnz
cli
iret
jg
iret
mov
js
xor
mov
inc
push
movl
and
inc
or
int
cmp
sub
jmp
mov
roll
jmp
daa
pop
enter
loope
pop
mov
pop
idivl
icebp
add
cs
or
js
fs
addr16
mov
inc
pop
or
arpl
insl
mov
fmuls
pop
pop
mov
js
fnstenv
mov
mov
out
into
or
test
sbb
mov
out
jle
nop
pop
imul
cld
lahf
aas
sub
negl
pop
xchg
das
aam
jmp
inc
dec
je
out
cmp
repnz
incl
insl
push
inc
xchg
loope
adc
lret
imul
xor
and
enter
lcall
sub
jbe
mov
cmp
fldt
fstps
jge,pt
loopne
aad
xor
outsl
loop
push
in
test
jb
push
sbb
jno
jbe
xor
xor
fdivr
inc
adc
popf
add
jae
ss
cmp
insl
or
cltd
mov
or
rorb
loope
cltd
or
enter
les
fstps
jb
lea
inc
dec
loop
jns
call
and
sub
jbe
fsubrl
lret
sbb
sbb
shrb
ds
or
xor
xor
xor
aad
adc
aas
sahf
mov
xchg
or
pop
shlb
mov
gs
push
inc
andl
gs
mov
orb
cmp
scas
add
xchg
sbb
arpl
xchg
cmpsl
mov
testl
ficompl
pushf
lea
imul
fadds
imul
or
pop
xor
mov
negl
and
dec
clc
mov
mov
test
nop
in
cwtl
xor
loopne
and
push
cwtl
lea
icebp
jge
jns
sbb
sbb
sub
scas
jns
loope
pop
jmp
mov
inc
ss
jge
into
xor
pop
stos
pop
add
mov
xchg
aad
notb
adc
shl
fldcw
jbe
pop
mov
mov
mov
je
mov
cmp
cwtl
lret
into
sbb
push
lret
cmc
lea
outsb
mov
cli
xor
ljmp
gs
cmp
push
jbe
popa
mov
movq
cmp
repnz
cmp
out
mov
jns
ja
mov
rep
sbb
je
into
mov
ds
push
dec
dec
dec
repnz
sub
mov
out
test
in
mov
mov
leave
add
negl
fisubrs
fcompl
js
cltd
cwtl
fdivs
push
les
jnp
push
in
push
jbe
or
icebp
fidivs
inc
push
fs
sub
jl
push
clc
jns
push
cmpsb
mov
shlb
push
mov
outsl
sbb
fisttpll
xchg
mov
add
movsb
add
cmp
push
jae
mov
cld
mov
mov
sbb
adc
adc
lea
pop
jne
mov
ljmp
lds
aaa
mov
mov
test
std
xor
xchg
maxps
inc
and
sub
loopne,pn
or
xor
and
or
push
outsl
sbb
ret
add
add
rcr
ficoms
mov
jno
inc
int
jne
push
int
lret
mov
ret
pop
andb
mov
xor
cmpsl
sub
sarl
int3
add
xor
stos
jne
mov
sbb
cli
insb
imul
adcb
movsl
dec
xchg
sbb
sahf
jns
bound
mov
cmp
jmp
sarb
fmull
cltd
cld
mov
lods
scas
inc
push
sahf
and
cmpsb
xor
gs
sbb
push
cltd
inc
pop
adc
mov
test
or
stos
xor
dec
cli
mov
test
pop
mov
insb
or
mov
xchg
nop
pop
push
loop
sub
jecxz
jne
xchg
in
jp
mov
shlb
insl
fstl
push
jecxz
push
loop
jecxz
and
xchg
sti
addr16
lods
inc
outsb
ret
lods
mov
mov
cwtl
andb
popa
sbb
shrl
testb
aas
shll
pop
movsb
hlt
cmpsb
test
mov
add
adc
stos
inc
loop
dec
and
inc
cltd
or
in
pop
push
adc
mov
sar
jbe
aas
mov
cmpsl
push
lock
es
inc
repnz
sub
scas
scas
xchg
sbb
les
je
add
insl
mov
and
xchg
aas
pop
mov
adc
aas
lret
leave
and
int3
adc
push
enter
stos
popa
jmp
push
mov
decb
inc
aam
rcll
movl
imul
dec
les
fidivs
enter
or
xor
mov
scas
sti
mov
push
mov
addl
jno
mov
push
pop
mov
jb
les
in
jbe
leave
ret
xchg
in
mov
mov
cmp
or
pop
push
lea
mov
roll
adc
aaa
and
cwtl
cmp
sarl
iret
adc
add
shlb
dec
stos
pusha
jo
and
adcb
cmp
andl
xor
sahf
cli
dec
aaa
lcall
pop
repz
cmp
repz
mov
rcr
dec
hlt
push
sarb
imul
jle
mov
jmp
jno
jno
inc
dec
mov
icebp
ret
xchg
sub
outsb
cli
mov
insb
jge
xchg
lods
mov
inc
out
pop
add
lea
dec
push
jmp
push
dec
ds
mov
mov
adc
scas
ss
pop
jecxz
fs
test
ds
sbb
xlat
mov
les
inc
and
cmc
jmp
bound
fs
gs
jl
sbb
and
cld
sub
les
cmp
sbb
faddl
mov
jnp
aas
rcrb
cmp
sti
ljmp
jp
lahf
add
mov
jns
clc
and
rcrl
or
xchg
inc
hlt
outsl
mov
inc
mov
arpl
xchg
aaa
pop
or
sbbb
in
sbb
cs
int
addr16
int3
cmp
loopne
addr16
push
fisubrl
test
outsb
les
arpl
ficoms
stos
repz
fldt
mov
inc
mov
mov
sub
scas
int
test
xchg
push
sbb
stc
insb
mov
push
xor
sbb
sti
rcll
mov
icebp
push
mov
gs
jns
shlb
out
dec
mov
lea
shr
popa
out
adc
inc
roll
add
mov
js
test
or
movsl
orl
in
jle
iret
sbb
and
addr16
jle
mov
pop
cmp
and
sbb
scas
not
popa
push
test
mov
popa
dec
call
dec
pop
pop
and
cmp
aaa
aad
mov
cmc
jge
sbb
push
divl
aas
mov
sarl
mov
ja
mov
test
push
notb
xchg
in
loope
out
dec
out
jns
add
push
psubsw
pop
das
mov
rcl
shrb
mov
std
push
lcall
mov
repnz
mov
sbb
pushf
dec
inc
inc
sub
pop
inc
adc
hlt
fwait
ret
xor
jbe
pop
jmp
iret
lret
xor
loope
std
xchg
push
xchg
xchg
push
aaa
xor
inc
push
mov
in
loope
and
add
cmp
add
js
mov
das
jnp
mov
mov
mov
inc
shlb
inc
into
jne
sub
pop
fwait
and
pmovmskb
cmp
jecxz
jno
adc
pop
jge
mov
inc
cli
repz
jno
sbb
dec
hlt
mov
subb
xchg
adc
inc
aam
loop
movsb
iret
xchg
shlb
daa
test
add
mov
xchg
inc
and
mov
xor
xchg
xlat
scas
push
xchg
xchg
in
in
xchg
cmp
inc
xchg
repz
cwtl
arpl
push
jle
rclb
fadd
lcall
add
mov
or
push
imul
inc
jle
lock
js
loop
add
pop
sub
popl
dec
mov
test
lods
mov
test
xor
ja
adc
jmp
pushf
lcall
adc
adc
mov
pop
sahf
dec
sbb
mov
lds
and
aaa
mov
lahf
mov
mov
mov
cmp
enter
sbb
mov
adc
cmp
pop
jne
cs
push
pop
jne
mov
leave
sbb
xchg
stos
mov
inc
stos
push
lahf
sbb
in
adc
insb
adc
shll
shll
rcrl
cmp
int3
mov
xchg
loopne
ror
mov
xchg
ret
jno
xchg
push
adcb
jl
iret
pop
popf
lcall
add
pop
popf
add
sub
mov
mov
jbe
adc
out
cmpsb
add
ds
loop
xor
data16
mov
cwtl
ss
add
lds
lret
adc
push
mov
push
cmp
sbb
dec
dec
mov
dec
or
in
pusha
xchg
dec
push
add
aam
dec
pop
fucomi
and
push
jbe
push
sub
imul
pop
pusha
lret
mov
jg
repz
mov
inc
lods
ret
push
fimuls
fildll
jmp
jge
fucom
and
xor
push
dec
fnstcw
pushf
fbld
or
cmp
test
and
int
repnz
iret
jnp
inc
adc
jge
inc
sahf
cmp
leave
mov
or
stos
es
dec
idivl
adc
pop
test
pop
sub
xlat
dec
inc
or
cmp
push
push
xchg
dec
adc
jle
int
add
jne
fwait
mov
jle
sub
fistl
xor
daa
lahf
inc
popa
mov
in
cld
push
cwtl
push
inc
scas
icebp
sub
jmp
sbb
call
xchg
fistl
mov
lock
cmc
adc
ljmp
hlt
mov
test
inc
out
jmp
insl
loop
and
inc
pop
outsl
jb
aam
repnz
das
jecxz
inc
jnp
pusha
pop
sbb
rorb
outsl
push
cmp
flds
mov
fdivs
add
and
jmp
lret
fdivrl
mov
rcl
js
or
push
fcomps
adc
inc
filds
mov
movsb
pop
cld
sahf
or
sbb
pop
jg
das
faddl
push
decl
scas
pop
and
or
xor
dec
mov
leave
popa
xchg
sti
sub
incb
jbe
outsb
sbb
adc
popf
jecxz
xor
dec
push
jle
mov
loopne
xor
cmc
pop
loope
loop
cmpsb
bound
shl
repnz
in
add
aaa
das
mov
nop
out
divl
fisttpl
fs
dec
ljmp
popf
fsts
ja
rolb
addr16
add
jmp
cmpsl
or
cld
popa
pop
sar
inc
dec
test
shr
outsl
adc
or
xorb
jb
bound
dec
mov
or
cmp
push
add
cltd
mov
gs
outsb
clc
mov
add
jecxz
lret
cwtl
mov
and
sbb
aad
cmpb
xor
and
mov
push
mov
icebp
dec
xor
xor
dec
clc
leave
or
aas
loop
fcompl
xor
ror
push
das
sbb
ss
lods
cmc
out
add
xchg
arpl
and
mov
iret
mov
cmpsl
cmp
fsub
sbb
addb
subl
inc
or
mov
push
negb
in
pusha
xlat
push
outsl
jno
pop
lret
add
stos
mov
mov
and
addl
mov
push
push
ds
je
in
push
jge
mov
fcompl
and
cs
iret
add
dec
inc
jge
mov
dec
les
scas
pop
sbb
fisttpl
sub
fucomp
mov
movsb
into
mov
lock
jecxz
or
pop
xchg
sbb
inc
das
inc
outsl
push
stos
sti
inc
cs
inc
sbb
jmp
andb
rol
mov
xlat
idiv
bound
mov
mov
push
sbb
lods
aam
popa
clc
xchg
imul
or
pop
sub
sbb
jnp
testb
xchg
hlt
xchg
xor
es
pop
xchg
dec
push
cmpsl
out
push
call
push
rcll
clc
mov
shrl
jecxz
mov
push
xor
or
clc
data16
test
pop
lret
jae
cwtl
lahf
pop
fcompl
sahf
je
rclb
rcrl
stos
ret
les
cltd
mov
lahf
repz
cmp
or
sbb
jns
pop
rorb
jno
pop
pop
out
out
xor
roll
mov
or
movsl
xchg
sub
jae
jae
dec
aad
xor
mov
push
sub
mov
lds
add
loop
lret
rcrb
ret
cld
shlb
loopne
jmp
fwait
test
mov
mov
in
adc
cmp
jns
push
sub
sbb
leave
lods
jle
add
jno
int3
out
xchg
mov
fdivrs
cmp
shlb
fsubl
push
test
pop
inc
mov
sub
int3
and
jb
aam
sbb
jl
sub
stos
cmp
imul
pop
xchg
std
pushf
xchg
es
mov
jmp
and
and
adc
repnz
inc
jecxz
lcall
movsl
rcll
lods
xchg
cmpb
lcall
jecxz
lahf
push
dec
sbb
mov
mov
inc
inc
nop
test
data16
or
mov
add
daa
cmp
and
jbe
jle
add
test
call
inc
mov
mov
sarb
sahf
sub
pop
sub
daa
mov
ds
pop
das
cmc
fldt
adc
xchg
loop
lcall
pusha
idivl
xchg
sti
cld
mov
jnp
mov
ljmp
adc
cmpb
jl
js
jae
pop
rol
xor
push
lahf
stos
lods
xor
mov
push
subb
pop
stos
lret
arpl
xchg
xchg
pop
dec
or
pushf
cmp
and
les
movsb
and
jae
pop
sub
cltd
testb
ljmp
add
add
jne
mov
jbe
cmp
adc
or
mov
sbb
lock
cmp
xchg
mov
popa
jns
repz
xor
xchg
and
xchg
dec
mov
xor
rcl
das
shrl
and
sti
sbb
dec
iret
mov
sahf
outsb
jmp
inc
mov
inc
sub
xor
dec
cmp
inc
sbb
outsb
in
int
jae
mov
cmpsl
lea
out
das
sbb
dec
add
xor
push
mov
xchg
or
pusha
sub
mov
xor
xlat
pop
idivb
sub
xor
imul
xorb
mov
mov
mull
popa
adc
in
cmp
cmpl
sub
jmp
out
or
jg
idivl
daa
mov
les
add
sbb
mov
sub
stc
xlat
mov
filds
inc
push
inc
cmc
xchg
xchg
sub
das
adc
xor
dec
xor
mov
mov
push
mov
add
ret
cmp
cmpsl
pop
jbe
push
enter
jmp
lea
aad
jmp
sbb
repnz
in
loopne
pop
out
and
and
outsl
es
and
or
xchg
arpl
jb
xchg
out
and
call
daa
clc
imul
aaa
ret
aam
dec
jae
mov
inc
enter
xchg
xor
cmc
test
jecxz
sbb
sbb
popa
cmc
cmpsb
cmpsl
push
stc
inc
pop
sbb
stos
cmp
daa
push
popa
shrb
dec
pusha
push
out
out
mov
sbb
loopne
mov
cmp
mov
mov
xlat
pop
mov
push
xchg
ret
xchg
lods
mov
aas
sbbb
push
dec
or
repz
std
rol
jnp
inc
mov
jne
and
or
or
mov
mov
aaa
push
lds
cmpsb
xchg
pop
cmp
lret
lods
mov
adc
jle
enter
sbb
mov
mov
mov
inc
lods
lret
enter
jae
add
data16
pop
outsb
jmp
jo
sbb
mov
rclb
movsb
outsl
clc
adc
stc
sbb
pop
xor
add
jo
enter
sbb
push
loopne
das
icebp
jb
fildll
mov
cmp
xchg
push
mov
arpl
iret
push
xor
dec
sbb
push
jle
cmp
add
mov
xor
sbb
incl
jg
add
cli
adcb
push
push
or
mov
leave
or
or
ljmp
das
faddl
movsb
cmp
push
movsl
inc
sbb
mov
sub
idiv
subb
mov
aam
nop
or
lret
jle
mov
sub
adc
sarb
pushf
and
jl
and
dec
dec
inc
stc
cmp
je
mov
clc
inc
scas
les
jle
pop
cld
inc
sbb
mov
clc
jle
iret
leave
ficomps
sbb
inc
jmp
fwait
add
fmuls
adc
xlat
add
fstpl
dec
movsl
ret
push
xchg
repz
mov
out
jb
mov
xchg
repnz
and
gs
mov
cs
add
and
inc
cmp
imul
lret
test
imulb
mov
flds
cmp
std
cmpsb
aaa
inc
jae
xchg
test
and
jbe
stos
test
pop
aad
sbb
popa
pop
lret
std
xchg
jae
cmp
dec
xor
xchg
std
lods
aas
cs
sub
loopne
push
add
test
leave
gs
inc
aam
jnp
add
pop
inc
mov
xchg
cmp
popf
out
in
fwait
jne
aam
and
notl
sbb
repz
rolb
push
scas
test
das
xor
add
addr16
push
shrl
dec
shll
mov
daa
aaa
das
js
mov
cmp
aam
fdivs
in
cli
or
add
xchg
and
or
ljmp
sbb
insb
mov
mov
nop
in
outsl
sbb
loope
jge
sti
add
mov
outsb
adc
fcmovb
sub
test
jo
pop
sbb
shr
cltd
or
fisttpll
xor
dec
mov
cmp
jg
push
fsubr
das
mov
in
fwait
push
imul
outsb
or
hlt
push
jbe
mov
lods
ror
ret
mov
xchg
test
xchg
xchg
scas
xchg
orb
xor
adc
pop
jno
sbb
out
enter
pop
sub
popf
adc
sbb
and
decb
je
out
mov
pop
xor
push
jmp
pop
daa
pop
adc
add
lods
ret
inc
sbb
cmpsb
cmp
mov
mov
mov
rorl
in
inc
bound
int3
jecxz
xchg
pop
testl
addr16
jmp
push
or
pop
mov
test
cwtl
inc
jmp
xchg
add
rcll
push
call
lret
stc
sbb
outsb
push
mov
ja
xor
hlt
mov
xor
sbb
pop
sbb
jp
jmp
adc
out
xorb
dec
or
cmpsl
pop
adc
das
in
jecxz
inc
or
or
imul
xor
addr16
mov
arpl
xor
ret
shr
in
xchg
or
jb
xor
insl
insb
nop
je
push
in
jae
dec
pop
cmc
lock
push
bound
cli
orb
lods
mov
xchg
dec
cmp
fdivrs
inc
std
or
pop
inc
jp
dec
insb
imul
ljmp
in
inc
lock
inc
pop
jb
jecxz
xor
das
stos
mov
jg
sbb
fs
cmpsl
push
jo
dec
xchg
sbb
xchg
in
cmp
shll
out
negb
cld
rcrb
rclb
shl
jl
fldl
imul
jnp
push
mov
pop
hlt
adcb
ficompl
add
ret
loope
cs
outsb
in
idivl
out
add
sbb
lods
fucom
push
pusha
mov
pop
jp
adc
or
cmpsb
icebp
mov
iret
sti
inc
std
or
loope
xchg
leave
lret
repz
push
mov
aas
notl
xchg
sbb
mov
fldcw
pop
flds
mov
out
pop
rorb
fnstenv
jp
cmp
xchg
imul
popf
scas
mov
add
adc
xorb
testl
and
idivb
push
rolb
popf
stos
pusha
rolb
test
aad
dec
std
dec
std
pop
xchg
sti
ret
fcmovnbe
mov
mov
test
cwtl
imul
add
jg
jge
jnp
stc
add
mov
sbbl
fisttpll
cli
mov
test
xchg
out
jp
out
dec
fbld
inc
inc
mov
or
in
mov
aam
daa
adc
dec
pop
mov
ret
ja
fsin
mov
sbb
lods
fisubl
inc
mov
sub
sbb
add
fisubrs
or
stc
fcmovbe
cmc
in
in
dec
jnp
bound
repz
and
jne
sub
in
inc
push
cli
dec
js
lock
xor
pop
rcll
loope
in
xor
daa
pop
mov
mov
pop
imul
popa
pop
xor
scas
hlt
push
sti
rcr
daa
fld
dec
xchg
sub
into
sbb
mov
movsb
adc
rol
data16
and
jbe
xor
mov
nop
xor
pop
js
fwait
lds
adc
in
fists
mov
cmp
jbe
pop
rorb
and
adc
xchg
push
faddl
sbb
jmp
jecxz
or
int3
pop
lods
pop
adc
sahf
jb
xor
cmp
sub
jno
dec
cltd
mov
push
xor
mov
pop
imul
aaa
sbb
mov
pop
mov
sbb
cmp
repz
add
and
adc
in
mov
mov
jno
xorb
jno
and
mov
dec
or
adc
jae
iret
inc
arpl
mov
dec
add
xchg
bound
pop
pop
shll
movsb
shl
cli
xchg
pop
cmp
jns
sbb
xor
mov
push
aam
mov
and
push
ja
sub
pop
popa
inc
pop
inc
jo
dec
call
mov
and
push
iret
dec
sbb
dec
xchg
test
repz
ljmp
imul
lcall
jle
inc
dec
cmc
xchg
lret
cmpsb
fldenv
xchg
adc
mov
xchg
cmp
mov
mov
test
push
sbb
addr16
fistl
aad
js
dec
xchg
and
hlt
adc
je
aam
xlat
aad
jno
cmp
mov
hlt
cmp
das
loop
das
xchg
out
into
sub
pop
gs
clc
and
push
mov
cmpsl
sub
aad
lods
loop
inc
dec
mov
dec
push
sbb
cmp
adc
loope
or
lcall
cli
add
sahf
sbb
mov
xchg
imul
int
push
ds
fwait
or
add
and
jae
insl
out
das
ret
call
in
je
sahf
cmp
adcb
addl
cmp
or
xlat
mov
insl
xor
aam
stc
ss
int
jo
push
int3
xor
fcmovnbe
inc
dec
sbb
cmp
sbb
fsts
inc
dec
dec
jns
sub
in
xor
lds
pop
inc
jae
rep
mov
lret
mov
sbb
push
ljmp
gs
int
sarb
aaa
push
ret
mov
xchg
nop
int3
ud0
add
adc
faddp
insb
xchg
inc
sbb
mov
popw
push
push
lret
xchg
shl
popa
xchg
lea
pop
add
mov
dec
lret
mov
dec
xchg
lcall
mov
adc
and
jecxz
pop
cmp
mov
popf
jge
in
sbbl
cltd
mov
adc
jbe
xchg
fisttpll
ja
call
sqrtps
dec
adc
mov
dec
stc
test
mov
ljmp
mov
or
mov
stc
inc
iret
mov
dec
les
jb
mov
mov
cmp
imul
insb
pushf
sbb
jb
mov
popaw
insl
lcall
sbb
pop
jbe
xchg
adc
shlb
xchg
sbb
in
nop
je
mov
loope
pop
mov
dec
ss
aaa
add
jb
out
out
shrb
push
xor
int
push
dec
jnp
stos
xor
fs
jnp
mov
sbb
fisubrs
add
daa
sbb
fbstp
mov
push
aad
sbb
cmp
xchg
mov
sbb
push
ljmp
jecxz
mov
jns
inc
jne
sub
xor
into
cltd
sbb
add
add
cmc
nop
fsubrl
loop
push
pop
add
xor
xlat
push
lock
inc
sub
cmp
sub
inc
in
add
int3
pop
mov
dec
stos
jbe
in
cmp
nop
icebp
lret
aad
aas
jnp
add
and
adc
fs
dec
leave
pop
add
sbb
idivl
jno
vsubpd
inc
or
cmc
pop
and
xchg
insb
ljmp
pop
cwtl
inc
add
cvtpi2ps
sbb
xchg
mul
sbb
fnsave
adc
mov
pop
call
dec
and
push
cmpl
addr16
sbb
mov
lock
dec
sbb
fimull
mov
inc
scas
push
repz
jae
es
out
rorb
jae
fadds
mov
or
and
cli
mov
jb
mov
xchg
lcall
dec
add
fs
inc
imul
test
sbbl
xchg
sbb
in
adc
scas
aas
ret
aas
push
push
fwait
je
movsb
sbbl
repz
fildll
cmp
stos
call
imul
cltd
iret
outsl
cmc
push
jle
call
lods
jo
xchg
mov
test
les
rorl
in
das
jno
test
sahf
mov
add
loopne
push
xor
je
ret
sub
rclb
adc
or
xchg
adc
movsl
mov
sub
dec
popf
fistps
inc
aad
xchg
loop
addl
jmp
fidivrs
or
push
sbb
std
mov
xchg
jo
xor
xor
loope
sbb
gs
sub
aam
mov
imul
adc
cmpsl
or
mov
mov
dec
out
loopne
push
sbb
lahf
mov
sbb
out
movsl
outsl
sbb
imul
fwait
incl
add
je
pop
filds
sub
fcomps
shr
int3
sub
jae
loopne
icebp
cmpsb
dec
and
jns
sub
cltd
sub
icebp
int3
call
push
adc
or
in
mov
pop
insb
lea
push
daa
bound
inc
adc
lret
nop
inc
insb
push
ret
mov
filds
dec
sbb
xor
mov
sti
add
hlt
jmp
stos
mov
movsb
cmp
xorl
lock
xor
rorb
and
and
cmp
xor
push
push
and
movsb
jnp
mov
sub
stos
mov
jl
imul
ret
and
cmp
cmp
or
xchg
adc
mov
push
int3
adc
stos
mov
leave
ljmp
push
repnz
imul
mov
xchg
mov
out
addr16
in
push
cmp
pop
das
int3
std
cmc
test
in
cmc
adc
xor
arpl
in
pop
cmp
mov
jmp
and
daa
pop
dec
dec
push
scas
out
xor
pop
std
jno
dec
sbb
mov
jo
xor
jno
mov
cmc
mov
mov
xchg
cmc
jb
aad
pop
add
xor
pop
adc
dec
in
lods
adc
sub
adc
inc
ljmp
pop
faddp
imul
or
jl
and
inc
fldt
adc
insb
repnz
adc
pop
xchg
popf
cltd
adc
in
aaa
lods
daa
or
int3
sti
cltd
out
jl
adc
and
pop
pop
je
mov
movsb
aad
ficoms
rclb
mov
fnstcw
adc
test
pop
lret
dec
leave
push
xor
push
cmp
jg
jl
mov
inc
mov
sahf
add
test
pop
lret
cmp
arpl
cmpsb
sbb
dec
es
adc
push
push
dec
sbb
stos
cltd
push
and
mov
adc
xchg
xchg
scas
pop
xchg
ja
orb
inc
rcrl
xchg
faddl
test
or
cmp
imul
push
cmp
out
xchg
gs
testl
mov
add
inc
jge
mov
pop
shrl
xor
xlat
mov
or
push
jb
fadd
out
add
rcr
push
cld
jmp
sti
es
call
iret
loopne
dec
fstps
outsl
push
mov
add
jmp
cmpsb
ret
sbb
nop
sar
loope
inc
cmp
xchg
mov
mov
or
xor
mov
adc
jecxz
les
aas
sbb
cmpsb
cmp
or
mov
std
mov
push
out
xchg
mov
add
cmp
inc
add
icebp
add
fnsave
sti
ret
std
call
enter
xor
jnp
sarb
filds
and
add
icebp
pop
sub
stos
lret
scas
test
popa
xchg
push
ja
xchg
mov
js
sahf
cwtl
pop
sbb
out
lahf
aaa
fnstsw
sbbl
sub
mov
lods
or
xchg
or
std
sbb
dec
mov
fimuls
test
push
cmp
lea
repz
jbe
pop
cmp
adc
int3
lds
lea
and
bound
les
aam
xchg
push
adc
xor
insl
lret
ss
adc
sbb
out
jl
addr16
push
ds
sbb
xor
test
inc
or
push
mov
jmp
inc
push
imul
adcl
ja
stc
xor
jle
lods
lods
jmp
jne
mov
aad
jns
mov
or
and
dec
mov
rol
push
jl
mov
pop
push
and
les
loop
mov
lahf
fimull
push
test
out
jne
jno
inc
gs
daa
and
sub
mov
movaps
stos
push
scas
xor
shl
jns
push
je
outsl
xor
cmpsl
shll
push
mov
push
inc
xchg
xchg
mov
inc
add
sbb
mov
mov
jno
cmp
out
cmpsl
dec
out
xchg
enter
inc
adc
jae
sti
repz
rclb
lret
call
inc
jp
stos
cmp
cwtl
cmp
js
test
push
adcl
mov
jge
mov
mov
cwtl
lcall
dec
outsl
clc
je
lods
dec
int3
mov
scas
insb
not
mov
mov
push
xlat
ret
add
ficomps
mov
int
pop
rcrb
insb
adc
aam
cmc
movsb
or
cmpsb
sub
pusha
jno
idiv
hlt
inc
dec
jb
jno
jno
and
push
das
add
pushl
push
daa
inc
xchg
ja
jne
mov
ficomps
add
jbe
aas
fisubl
rolb
in
dec
and
sub
call
aad
sub
adc
fldt
rsqrtps
leave
mov
fidivrl
into
add
dec
push
push
call
add
cmp
ja
repz
inc
cmpl
test
sub
mov
xor
in
adc
mov
mov
addl
push
sbb
notl
mov
pop
rolb
cltd
xor
jbe
sub
mov
jnp
push
cmp
repnz
mov
pop
adc
jmp
and
push
or
out
fdivl
notb
push
xor
test
pushf
stc
jmp
fisubl
repnz
lret
or
sbb
sub
sub
jb
fwait
lods
jp
push
mov
cmpsl
mov
push
ja
cltd
lods
sub
push
scas
sub
out
push
iret
aam
call
cmp
xor
and
in
xchg
test
je
sti
jge
push
das
popf
arpl
divl
mov
inc
out
rcr
movsl
loopne
fcoml
dec
mov
mov
rolb
pop
pop
out
add
dec
loopne
mov
dec
mov
lret
add
fidivs
jle
pop
mov
pushf
ja
dec
rcr
andl
lcall
xor
repz
aaa
cmp
addr16
mov
jnp
and
je
test
mov
testb
mov
push
test
out
test
aam
lds
out
mov
mov
insb
mov
cmc
jmp
ficoml
cmp
jne
push
bound
jmp
jb
add
push
inc
aad
and
fildll
loopne
push
mov
pop
cmpsl
mov
clc
xor
mov
jmp
rcr
out
xchg
add
add
dec
std
or
sbb
adc
test
jb
aas
xor
pushf
adc
in
sub
mov
call
std
cmp
mov
ja
push
push
outsb
add
in
lcall
loopne
cs
jne
cmpl
sbb
sahf
xchg
mov
push
dec
sub
xor
lds
out
fdiv
and
pushf
fstpl
mov
stc
add
sbb
std
mov
and
paddsw
push
insl
sbbl
faddl
out
and
lret
mov
and
xchg
lods
sub
shl
xchg
add
fisttps
mov
mov
jg
cvtdq2ps
fisubl
cli
stc
xor
xchg
pop
cmp
ja
pop
andl
inc
lds
aad
data16
mov
xor
push
insb
inc
inc
testl
popf
mov
mov
addr16
insb
dec
loopne
mov
and
dec
out
adcb
ret
fistps
jno
test
xor
push
fldenv
ja
sbb
or
or
push
pushf
cld
xor
repz
sbb
xor
mov
pop
mov
cmp
push
ss
fldcw
stos
fsubr
loop
push
add
push
xlat
xchg
or
jg
sbb
push
mov
imul
loope
dec
enter
insb
cwtl
cmpsb
and
rolb
icebp
leave
mov
call
push
xchg
pop
cltd
insb
lds
pop
fs
lea
mov
sub
fst
or
test
scas
ja
sahf
loop
dec
adc
xor
jbe
cli
mov
ljmp
dec
fdivr
ret
xchg
repz
adc
sbb
push
das
xchg
call
imul
adc
lret
adc
push
leave
fimull
push
jl
and
mov
xchg
dec
iret
pop
fsubr
adc
pop
sub
out
and
sti
in
roll
loopne
cs
push
dec
in
dec
shlb
xchg
js
mov
mov
cmp
xchg
xchg
xlat
sub
xchg
push
pop
popa
movsb
stc
in
mov
sbb
add
mov
mov
ds
pop
mov
pop
cmp
jmp
orl
ja
lods
add
adc
xchg
xchg
inc
rol
xchg
push
out
icebp
nop
xchg
inc
mov
pop
es
imul
daa
enter
cmp
pop
mov
loopne
and
into
lods
xorl
bound
dec
pop
lods
or
dec
loope
je
rolb
dec
adc
movsl
xchg
pop
cmc
js
xchg
decb
mov
sbb
inc
mov
repz
or
jno
pop
and
xchg
adc
dec
add
fimull
mov
les
xor
push
mov
in
nop
cmp
or
mov
xchg
adc
push
pop
nop
pop
loop
push
dec
in
out
scas
adc
push
testl
scas
subl
pushf
dec
mov
jo
cmpsb
push
mov
cmc
aaa
cmp
jb
neg
jp
push
xor
pop
outsb
sbb
jmp
iret
sahf
aaa
xchg
xor
mov
roll
rolb
xchg
lahf
cmpsb
pushf
jge
popa
mov
mov
aaa
xchg
pop
aad
shrl
jge
cmpsb
icebp
cmp
mov
hlt
insb
fsubrs
jbe
popa
andb
cwtl
cmc
mov
mov
pusha
mov
add
lds
ja
xchg
jmp
pop
inc
imul
bound
cmp
dec
cwtl
into
fstpl
std
jle
sahf
icebp
addr16
outsb
ficompl
add
fbld
xchg
xor
mov
lock
fs
add
ret
inc
jg
mov
fmul
std
rolb
xchg
test
inc
xor
mov
sbb
xchg
hlt
fsubrl
jnp,pn
repz
push
fadds
popf
loopew
add
orl
or
rcll
mov
and
jb
sub
jno
dec
data16
mov
sbb
hlt
mov
xor
cmp
adc
push
std
xor
jmp
or
xor
outsl
xchg
push
mov
mov
nop
fucomip
jl
inc
xor
and
rcrl
jns
mov
gs
dec
xchg
test
jns
add
sbb
insb
sbb
ja
push
push
ficomps
imul
out
mov
xchg
lods
test
test
stc
xlat
enter
pop
mov
enter
jo
dec
ds
sub
cmc
pshufw
test
das
sahf
dec
mov
in
add
xor
cli
leave
xor
sti
cmpsl
xchg
int3
sbb
adc
xchg
jp
xor
jns
mov
jns
xor
inc
add
sub
mov
cmp
inc
cmp
js
xchg
shlb
mov
inc
int
repnz
lods
adc
ss
mov
call
jge
mov
test
sarl
cmpsl
ret
jo
and
addr16
cs
xchg
mov
jnp
or
sbb
xchg
pop
ljmp
mov
cmp
add
mov
cmp
jge
jns
pop
je
and
loope
pop
js
mulb
mov
repnz
cwtl
fisubrs
pop
adc
aaa
sbb
xor
or
dec
cmc
mov
jp
cli
mov
xlat
mov
xor
fsubr
mov
push
les
ds
in
cmpsb
jnp
imul
pop
mov
jo
sub
pop
or
xchg
adc
jg
out
int
mov
xor
push
sti
jmp
fidivrs
and
add
cs
rolb
in
ds
pop
cli
and
cmp
lahf
rcr
leave
inc
sbb
in
jne
daa
mov
not
sub
idivb
cmpsl
out
push
and
mov
dec
lds
push
lret
fmull
loop
insb
mov
cmp
rcr
mov
testb
ret
lods
sub
push
push
sbb
mov
adc
sbb
fnsave
xchg
mov
mov
int3
xchg
jno
cmpb
popf
xchg
pop
push
out
data16
call
add
jmp
add
pop
xchg
pop
sub
xor
shlb
test
sub
cmpsb
adc
pop
movsb
test
sbb
scas
sahf
mov
pushl
imul
cmp
stos
adc
js
jno
or
lods
jle
push
inc
cmpsl
xchg
mov
pop
fistps
cmpsb
cmc
dec
or
arpl
mov
std
repnz
xor
out
mov
inc
outsb
cwtl
imul
xor
mov
adc
inc
and
add
test
xchg
mov
enter
mov
or
mov
adc
jae
lods
mov
push
xchg
and
nop
stos
pushf
outsb
and
adc
xchg
aad
mov
nop
insb
push
push
dec
std
and
popf
dec
mov
xchg
and
lret
push
dec
clc
and
push
mov
mov
jns
add
adc
push
push
stos
dec
add
lret
mov
jl
addr16
add
or
jbe
fisubl
int
mov
xor
int3
andb
add
push
sbb
push
push
push
and
in
adc
stos
sub
jns
cs
sub
jp
jge
pop
pop
push
inc
enter
jl
cmp
mov
loopne
push
rcrl
loop
inc
and
fisubrs
sub
push
js
cmpb
mov
stc
les
xlat
push
inc
sarl
pop
test
mov
mov
jae
jns
dec
int
outsl
inc
push
dec
call
mov
xchg
cmpsb
cmpsl
iret
xor
fdivs
push
test
ljmp
ret
adc
mov
cmp
push
push
or
shll
mov
mov
pop
enter
jmp
ss
xchg
jmp
bound
fs
hlt
daa
jnp
jp
gs
xchg
mov
pop
push
jle
mov
test
bound
pusha
cmp
jmp
cli
add
sub
test
push
dec
xchg
scas
pop
jle
cmp
into
add
pop
daa
mov
pop
int3
out
sub
jge
in
jmp
js
cwtl
push
push
add
fwait
movsb
pop
mov
fiadds
add
sub
and
in
mov
int
or
push
nop
xchg
popf
inc
xor
aas
xor
pop
out
ljmp
loop
outsb
sbb
ret
js
or
push
jl
dec
add
mov
jecxz
cmc
movhps
push
xchg
orl
cld
jle
jl
jbe
xor
lds
or
lcall
sarl
jns
jmp
sti
pop
dec
xor
cmp
inc
lods
addb
shl
push
adc
mov
mov
jae
repz
mov
pop
test
jo
xchg
lea
ret
sti
mov
daa
test
add
fmull
fcmove
jl
sbb
cmpsb
or
stc
cli
in
rcll
xchg
ds
subl
xchg
pop
test
pushf
push
daa
lods
adc
les
enter
add
sbb
mov
push
out
jnp
adc
orl
cmp
pop
hlt
in
sbb
jne
in
into
jmp
mov
pushf
gs
mov
xor
ds
dec
fldenv
dec
dec
pusha
lods
rcl
dec
xor
mov
movb
sbb
sbb
add
negb
push
mov
add
and
add
jnp
inc
imul
pop
scas
mov
fcompl
test
jl
cwtl
lahf
and
and
rsqrtps
push
bound
aad
adc
jmp
or
sub
adc
mov
jle
mov
ds
cmp
mov
or
insl
in
xchg
sub
leave
push
push
outsb
mov
cmp
pop
push
mov
sti
mov
jae
add
test
jg
adc
inc
mov
cld
sbb
mov
mov
das
mov
xor
cmp
stos
pop
pop
fisubs
dec
jae
ds
push
jmp
je
mov
arpl
aad
lret
lahf
mov
fdivr
ja
pop
pop
dec
cltd
mov
jg
adc
fstpt
cmp
xchg
mov
pop
jg
jge
mov
mov
loopne
packssdw
cwtl
push
mov
cld
fsubl
stc
out
stc
jge
sbbl
movsb
es
jo
xor
cmpsl
mov
push
add
cmp
push
ret
adc
or
les
mov
out
pop
inc
outsb
pop
mov
lahf
int
push
mov
pop
ds
cmpsb
dec
add
lret
in
and
xchg
mov
or
mov
iret
push
adc
ja
jp
or
rcr
xchg
data16
leave
lahf
es
cmpsl
pop
xor
pushf
and
test
jns
inc
pop
sar
lahf
sarl
pop
cli
cmp
scas
or
lret
xchg
popf
pop
ret
push
in
inc
xor
sarb
sbb
leave
icebp
lock
or
mov
shrl
mov
push
cmp
lcall
jg
inc
cmpsb
dec
subl
push
xor
movsl
pop
cmc
loopne
shlb
push
xor
int
out
aad
cwtl
call
pushf
stos
pop
adc
in
push
and
idiv
and
mov
inc
repnz
arpl
in
test
cld
or
push
or
push
push
jle
lods
in
jle
cltd
jl
push
mov
flds
pop
mov
std
sbb
push
fwait
leave
pushf
repz
rcll
dec
cmc
aaa
loopne
xchg
inc
subl
out
xchg
jecxz
subb
addr16
imul
jo
sub
cmp
sti
imul
and
fildl
sub
push
jns
pop
jnp
pop
test
add
xchg
jnp
pop
fsubrp
aam
fwait
icebp
inc
sub
adc
jp
mov
test
std
in
mov
jne
negb
mov
lahf
dec
add
cltd
repz
movsb
push
das
test
cmpsb
push
mov
pop
cmp
in
mov
xchg
jno
scas
js
faddl
mov
sbb
cmp
lret
test
jnp
call
push
lret
jo
mov
inc
adc
and
out
adc
dec
pop
inc
sub
inc
ficoml
mov
cli
xchg
mov
jle
test
cmc
cmp
popf
jnp
mov
push
test
gs
popa
ror
out
fists
mov
mov
sbb
lock
dec
xor
or
arpl
mov
and
ficomps
sbb
push
rorb
push
inc
and
sarl
testl
stos
xchg
cli
pop
add
lods
repnz
mov
jmp
sub
push
mov
push
shlb
out
daa
ret
inc
ljmp
mov
out
loop
rcr
sub
push
xchg
stos
xchg
bound
or
sti
call
je
xor
xor
inc
xchg
xchg
enter
in
jg
adc
adc
dec
jo
dec
ret
push
jge
mov
into
mov
aam
gs
xchg
and
into
mov
mov
or
lods
pop
xchg
adc
stc
jl
dec
pop
pcmpgtw
test
and
push
je
arpl
mov
clc
gs
xor
xchg
xlat
adc
out
xor
xor
stos
mov
xlat
mov
sub
inc
jae
inc
pushf
adcb
into
jnp
pushf
cmp
sub
jmp
jns
push
vmread
sahf
fwait
adc
popf
mov
xchg
xor
push
sti
insb
jno
or
push
daa
dec
jns
adc
ret
mov
sbb
daa
xchg
cmp
or
cmpsb
adc
lahf
add
loopne
mov
xchg
pushf
arpl
les
pop
sub
insl
pop
mov
pushl
adc
pop
fwait
and
cmovne
cmp
xchg
out
ja
rorl
mov
std
fsubr
in
mov
fcmovb
sbb
jb
pop
inc
sbb
mov
pop
mov
repnz
loop
inc
std
ss
mov
loope
es
mov
les
xchg
xor
out
push
mov
push
jno
jno
jg
sub
addr16
ret
ret
push
lahf
hlt
push
jbe
push
bound
fnstcw
add
mov
outsb
pusha
dec
xor
out
aam
xor
inc
or
sarl
push
js,pt
jns
std
repz
stos
pop
mov
mov
fucomp
xchg
mov
push
xchg
ds
add
sub
pop
pop
xchg
lahf
scas
add
push
roll
ds
je
mov
idivl
mov
lea
mov
out
bound
add
dec
cmp
imul
mov
xlat
mov
ja
xor
jecxz
int
jb
icebp
inc
mov
fstpl
sbb
sbb
sbb
aad
out
cmp
rcrl
dec
fstpl
and
shl
mov
add
sub
or
movl
js
cmp
or
scas
fmulp
cs
or
sub
sbb
add
cmc
mul
in
mov
pop
mov
icebp
add
dec
cmc
pop
nop
mov
cld
mov
pusha
jne
movsb
cmc
jno
xchg
sbb
aad
lock
jne
scas
arpl
fldenv
cmp
mov
mov
jnp
jp
pushf
push
sbb
push
jle
cli
and
adc
shlb
dec
fcomps
loopne
outsb
out
fmull
jp
jae
mov
xchg
not
aaa
call
test
sbb
divl
xchg
add
ja
daa
mov
daa
inc
addl
adc
test
inc
push
xor
scas
pop
sbb
xchg
mov
iret
cmpsb
loope
cmpb
xor
daa
lods
es
cmp
jno
or
mov
inc
jecxz
dec
dec
or
sub
mov
or
mov
imul
sub
test
rcll
cs
cld
haddpd
movsb
mov
push
icebp
movsb
mov
mov
cld
and
pop
xor
add
stc
cmp
sbb
sbb
fsub
adc
mov
subl
stos
sub
loopne
sbb
mov
in
je
popa
lcall
xor
push
mov
fdivl
outsb
push
xchg
mov
xlat
cmp
mov
adc
jns
mov
inc
stos
cld
push
in
adc
sub
icebp
repnz
xchg
push
cmp
xor
xor
repnz
push
pop
xor
sbb
sub
inc
je
imul
mov
lds
aad
pop
icebp
cmc
test
xchg
xchg
xchg
mov
xchg
and
in
lcall
or
aas
lods
xchg
pushl
and
adc
lret
or
or
jmp
or
in
stos
add
sub
sbb
test
jg
jge
mov
mov
mov
ret
int
lods
je
sbbb
add
icebp
lds
mov
ja
and
cmp
imul
pop
js
pushf
cmp
dec
sahf
pushf
pop
jg
sbb
sbb
bound
les
or
sti
sbb
or
enter
fwait
xchg
gs
ficompl
enter
leave
jle
mov
orb
jl
mov
aaa
jecxz
outsl
cmc
andb
in
pop
mov
call
mov
push
sub
mov
mov
pop
insb
aad
dec
subb
add
cltd
pop
dec
xchg
lock
pop
add
add
jmp
cmp
rorb
int
loop
les
cmp
xor
inc
dec
stos
mov
out
pop
jmp
fildll
and
ds
jne
movsl
faddp
shrb
jo
je
mov
xor
inc
test
std
call
pop
repz
stos
mov
scas
pop
mov
pop
ret
iret
rol
push
mov
enter
es
test
mov
ret
add
and
aam
sbb
pushf
mov
adc
push
jecxz,pt
mov
in
cmp
icebp
sti
or
subb
dec
mov
movsl
sti
cmp
aam
dec
push
adc
jno
mov
pop
fsubs
or
mov
fcoml
push
adc
jae
adc
ljmp
imul
addb
pop
jmp
cmp
lods
xchg
add
outsb
jge
xchg
dec
sub
dec
in
popf
lret
out
ds
ret
sbbb
and
out
mov
popf
push
lcall
push
xchg
scas
or
lods
mov
mov
aas
das
mov
or
sti
jmp
cmp
cmp
je
and
mov
sub
lods
push
pop
cmpsl
mov
jno
sub
ficompl
cmc
popa
test
fcoms
dec
xorb
ret
jg
jb
test
mov
xchg
mov
and
sbb
mov
mov
jbe
fs
cmp
lcall
push
aas
jnp
ja
repnz
mov
outsb
dec
lods
push
xchg
iret
rcl
sbb
fsubs
mov
mov
in
mov
sbb
mov
jo,pn
clc
cmpb
pop
notl
xchg
mov
shrb
scas
fsubrs
js
insb
orl
cmp
inc
es
mov
pop
mov
adc
pop
cmp
gs
std
push
xor
xor
pop
xor
nop
inc
scas
inc
inc
sub
in
inc
adc
aad
es
enter
loop
dec
fs
jne
mov
pop
xchg
dec
leave
dec
cs
cli
mov
data16
add
fsubrl
and
sub
jbe
adc
cmp
mov
cld
push
es
mov
cmc
shrl
bound
xchg
push
out
pminsw
loopne
iret
pop
or
sub
jb
mov
sub
fcoms
mov
lret
addr16
mov
das
in
xorl
jne
jns
add
xor
jnp
gs
xor
sbb
mov
lcall
xchg
shlb
mov
and
adc
xchg
adc
js
jns
lods
aam
inc
iret
fwait
adc
sub
and
sub
inc
call
fbstp
cmc
inc
loop
or
clc
jnp
les
int3
jecxz
fistpll
pusha
mov
ret
icebp
repz
daa
ret
push
test
push
jno
xchg
add
mov
das
sub
rcl
imul
jno
ret
pop
mov
mov
xchg
mov
sbb
push
mov
dec
cmpsl
or
push
popf
jae
ds
xchg
test
jo
inc
pop
mov
add
lfs
jns
push
push
and
test
stc
inc
ret
mov
mov
mov
jmp
pop
std
cmpsb
pop
testl
insb
pushf
fdivl
lea
aas
jmp
out
mov
repz
jo
xchg
shll
mov
dec
xor
mov
mov
adcb
orb
mov
in
pop
push
lret
pop
and
push
add
inc
cmc
sbb
xor
xchg
enter
jno
cs
cmp
inc
mov
loope
shll
dec
fidivrl
ds
mov
imul
ret
stc
repz
jo
cmpsb
movsl
push
sub
inc
pop
adc
pop
and
scas
shlb
iret
scas
mov
sub
push
pop
cs
xchg
popf
ljmp
adc
or
insb
push
fisttps
cltd
and
mov
clc
xor
xchg
out
shl
es
inc
lret
mov
push
cld
js
test
popf
push
or
out
cmp
bound
xchg
push
cld
pop
shlb
stos
sbb
jecxz
mov
and
rcrl
shrb
add
add
fs
pop
iret
outsb
mov
cmpsl
out
scas
cmc
data16
inc
sub
xchg
repz
pop
xchg
mov
lea
inc
inc
sbb
mov
add
fisttps
lahf
fnstcw
cwtl
mov
cmc
pusha
inc
in
idiv
add
mov
repz
pop
jne
pop
in
jecxz
inc
fcmovnu
sub
fstps
and
ret
shlb
es
add
xlat
push
xchg
out
xchg
insl
pop
lods
inc
enter
out
jge
dec
and
sbb
loope
lds
fldlg2
sbb
les
clc
add
dec
rcl
cmp
dec
jo
inc
adc
stc
inc
test
dec
std
dec
ficompl
push
shll
cs
mov
adc
cs
push
or
xchg
pop
jne
daa
lock
xor
out
push
decb
insb
icebp
add
lret
pop
add
sub
ret
lods
ds
jno
iret
inc
pusha
and
xor
ljmp
nop
stos
shrb
arpl
subl
pushf
movsb
test
call
shll
cs
int3
loopne
aaa
xchg
cmp
push
fsubrs
andl
and
and
in
push
xchg
fnstenv
call
and
int3
push
cld
orl
fistpl
mov
stos
imul
clc
inc
pop
pop
out
cmp
fsubl
sti
hlt
scas
mov
pop
push
mov
call
hlt
pusha
imul
sbb
sbb
test
pop
jae
sbb
fmull
fistpl
aam
sub
add
ret
dec
idivb
enter
lods
daa
and
insl
adc
and
xor
call
inc
xchg
inc
loope
mov
or
or
jns
inc
jl
imul
loop
jecxz
popf
aad
ljmp
push
gs
fs
cmc
adc
mov
fsubrs
xor
mov
jecxz
mov
js
pushl
enter
mov
leave
stc
mov
dec
jg
inc
aad
out
pop
das
xor
xor
lcall
xchg
inc
fsubrs
xchg
out
xor
cwtl
pop
out
test
sar
inc
scas
push
jo
call
or
popa
inc
test
shrl
xchg
in
pop
js
aaa
sbb
adc
sbbb
popf
xchg
pop
push
inc
nop
or
mov
push
pusha
sbb
jns
cmpsl
sbb
xchg
mov
mov
fsubr
cld
ret
xor
xchg
mov
out
js
js
sub
mov
out
xchg
sbb
test
int3
sahf
push
cltd
pop
scas
xchg
out
lahf
rorb
xchg
sbb
fmul
jb
ret
loop
and
mov
repnz
or
add
aaa
mov
sub
jle
sti
cld
lahf
je
test
aaa
cmp
pushf
xchg
push
push
hlt
xchg
add
lret
popa
mov
xchg
jbe
mov
push
mov
aaa
adc
sbb
xchg
scas
test
cmc
or
or
sahf
jmp
xor
hlt
lods
cmp
lahf
lret
in
cld
sub
lcall
xchg
mov
add
pop
das
lret
adc
fdivs
and
scas
xchg
push
cmp
nop
mov
fidivrl
mov
xor
or
push
pop
lock
dec
test
fprem1
cmp
lret
mov
dec
pop
movsb
aad
cmp
sub
push
shl
and
loop
dec
jmp
inc
add
rorl
dec
test
lods
push
xchg
cmpsb
das
cwtl
jge
mov
jne
ja
jns
dec
and
jle
inc
push
sub
cmp
scas
test
iret
cmc
int
int
and
push
das
inc
sbb
adc
mov
sbb
jg
add
jmp
push
in
ffree
popf
je
cmpsl
lcall
pop
jmp
faddp
jno
out
and
xchg
xchg
cmpsl
dec
pop
xchg
sub
xchg
add
mov
or
inc
sub
outsl
xor
filds
movsb
inc
xchg
icebp
push
test
sbb
adc
mov
fisttpl
or
aas
or
insb
mov
xchg
rolb
roll
in
xor
mov
fimuls
movsl
xchg
mov
in
je
fwait
pusha
inc
mov
mov
adc
mov
leave
sbb
sbb
out
daa
gs
aad
outsl
jns
add
cmpsb
vfmadd213ps
jecxz
sarl
out
in
mov
push
out
aas
mov
pop
push
in
dec
es
jo
dec
and
rcl
mov
int
scas
cmp
sbb
and
mov
add
bnd
inc
imul
cmpsl
outsl
fdivrs
dec
push
lock
ljmp
xchg
jle
pop
pop
in
rcrl
sub
xchg
jne
pop
insb
adc
sbb
testl
adc
push
jge
ret
sub
sub
or
out
pop
in
ret
mov
cmpl
rorb
mov
in
pushf
xor
arpl
push
mov
das
inc
sub
adc
and
xlat
mov
push
push
cli
mov
rcrl
xor
mov
xor
pop
imul
pushf
dec
mov
rcr
out
jg
jecxz
fidivs
rep
jmp
test
lcall
xor
lcall
xchg
adc
fisttpll
mov
push
loope
add
mov
es
or
cmp
inc
int
out
lret
xor
fadd
subl
adc
loope
in
int3
outsb
iret
push
cmp
or
pop
je
mov
adc
lcall
mov
mov
inc
inc
sbb
cmpsb
or
movsb
leave
push
rol
fiaddl
push
fstpl
loope
mov
ret
adcb
test
jl
shl
pop
mov
mov
sub
mov
outsl
lods
mov
popf
sahf
jns
xchg
ret
add
fmulp
xor
xor
sbb
xchg
stc
jmp
xchg
arpl
cmp
cmp
or
push
xor
inc
int
jnp
xchg
fs
jns
jae
add
nop
or
sti
int3
mov
fstl
movsb
dec
shrl
mov
out
int
lea
mov
push
add
add
dec
lock
dec
sti
aad
andl
mov
addr16
sub
mov
push
into
fcomps
mov
add
jge
pop
ss
xchg
cmp
ljmp
mov
and
push
iret
jecxz
pop
dec
mov
sub
inc
inc
fisttps
cmc
pop
xorb
repnz
int
mov
cld
test
sbb
and
popf
mov
pop
pop
rorl
stos
movsl
cli
sbb
adc
ds
adc
pop
mov
mov
pop
sbb
jle
pop
push
mov
push
int
js
push
fs
in
mov
or
aas
pop
sahf
adc
pushf
or
xor
fisttpll
xlat
mov
rcr
lcall
rorb
dec
jne
add
js
movaps
scas
jecxz
je
pop
or
mov
sub
hlt
lahf
xchg
gs
loopne
hlt
and
add
lcall
pusha
nop
imul
rcrl
mov
jnp
fsubl
mov
push
lret
out
xchg
sbb
xchg
lea
push
mov
add
jp
add
xlat
test
addb
jo
aam
xor
mov
cwtl
int3
mov
stc
sub
mov
orl
jnp
sbb
or
pusha
imulb
outsb
add
pushf
outsl
push
dec
xor
cmp
lea
scas
test
sbb
pop
add
pop
pop
cmp
fadds
fs
push
das
scas
or
mov
pop
xchg
je
and
dec
mov
je
dec
cmp
mov
movb
dec
jge
mov
jge
push
imull
mov
jle
dec
or
cwtl
push
scas
cmp
movsl
mov
pop
jns
in
test
out
mov
adc
dec
out
aad
pop
sbb
aam
mov
sbb
inc
and
push
aad
in
xchg
inc
jbe
sub
push
jl
lahf
fiaddl
inc
jle
add
jb
push
ljmp
cwtl
je
sti
mov
and
cmpsb
je
imul
xor
cmp
jle
jp
push
lods
inc
adc
lods
ficomps
push
cmpb
cmpsl
bound
std
dec
push
cmpl
fucomi
mov
jb
std
mov
call
addr16
cmpb
jno
push
lods
dec
daa
ficoms
add
inc
jge
mov
jecxz
and
cmp
push
ds
ja
sub
les
sub
fsubs
lret
dec
dec
cmp
xor
mov
lret
loope
add
in
jmp
fmul
jae
mov
aas
mov
mov
push
stos
dec
jmp
mov
test
cmp
or
and
and
and
xchg
mov
pop
rcll
add
mov
loopne
dec
sbb
or
sbb
in
mov
popf
adc
mov
inc
jg
pop
mov
lds
mov
jnp
insb
sub
lods
xchg
lcall
pop
cmp
pop
sbb
sti
cmp
adc
push
xor
xchg
push
mov
mov
jmp
out
xchg
jb
xchg
je
cwtl
sbb
iret
push
outsb
sbb
dec
add
and
outsb
sub
dec
movsb
pop
pushf
dec
test
test
stos
jbe
jecxz
jecxz
sbb
dec
aad
or
test
adc
xor
sbb
fisttpl
outsb
jne
fucom
mov
jnp
cmovnp
stos
jno
pop
loope
outsb
and
or
stos
sbb
shl
pop
clc
out
and
and
les
push
popa
mov
js
mov
iret
mov
jne,pt
inc
sahf
aad
sarb
fcmovb
push
enter
cmpsl
inc
cmp
pop
arpl
push
dec
xchg
in
not
pop
hlt
xchg
adc
out
cwtl
shlb
lret
dec
mov
popf
or
and
es
mov
in
xchg
mov
pop
bound
daa
and
insl
mov
cltd
or
jecxz
out
std
mov
cmp
int
out
dec
out
mov
fstp
jo
arpl
scas
add
mov
test
jmp
imul
jae
sub
and
aas
nop
imul
cmp
jo
loope
dec
leave
adc
xor
sbb
push
out
jo
xchg
sbb
dec
add
mov
push
mov
xor
pop
negb
lcall
adc
inc
bound
push
out
cmp
nop
mov
mov
test
nop
dec
or
iret
inc
pop
xchg
and
ret
mov
mov
mov
pop
mov
mov
js
add
je
fnsave
dec
shrb
xchg
mov
cmp
sub
sbb
push
aad
cmp
dec
imul
push
dec
imul
mov
add
mov
mov
mov
js
xchg
and
sbb
std
imul
lahf
cwtl
leave
in
xchg
movsl
outsl
and
bnd
jp
mov
cmpsl
push
xchg
outsb
outsl
inc
adc
mov
lock
adc
clc
iret
jnp
mov
dec
push
test
pusha
xchg
aaa
sub
fimuls
test
mov
sub
loopne
out
ds
or
arpl
stc
push
push
pop
mov
or
push
jnp
sub
jne
mov
and
insb
inc
addr16
ja
mov
cs
xor
mov
sbb
add
ljmp
imul
add
ja
shlb
push
int
ret
mov
lahf
lock
inc
sub
imul
cltd
lret
cwtl
sti
sete
push
sbb
scas
xor
les
fiadds
mov
inc
jg
adcl
jb
and
jecxz
into
adc
js
mov
or
dec
in
push
mov
fdivrl
jge
ss
fsubp
mov
pop
popa
and
mov
dec
mov
inc
lds
mov
std
fisubrs
xchg
outsl
int3
add
mov
or
insl
jno
sub
jmp
adc
das
lods
ret
lock
nop
push
pushf
in
pushf
pop
loopne
mov
add
jns
or
insl
cmp
xchg
adc
adc
jae
cld
xchg
jmp
icebp
sub
adc
cmp
scas
out
inc
inc
adc
push
xor
and
and
and
pop
addb
stos
imul
xor
xor
push
cli
aam
dec
fwait
adc
xlat
ds
lds
push
sbb
push
cmp
lea
rorb
fstpt
jmp
sub
inc
repnz
insb
and
push
call
jle
filds
mov
movsb
inc
jle
jge
cli
sbb
mov
ss
pop
jp
mov
pop
pop
cs
rorb
xor
andb
clc
push
fists
jae
jo
pop
jecxz
jae
mov
scas
sbb
adc
cmp
mov
pop
lods
daa
fists
outsb
movsb
daa
push
pop
das
outsl
lods
inc
das
popf
mov
adc
fdivrp
jmp
pop
outsb
mov
scas
pop
incl
cwtl
mov
lods
pop
pop
dec
dec
pop
fmuls
mov
pop
data16
push
fiadds
mov
cmp
in
sbb
shl
and
bound
mov
dec
jmp
loope
and
aam
xor
mov
popa
mov
adc
jb
mov
mov
fistpl
rol
pop
movsl
shr
sarb
jg
or
ja
jbe
push
stos
cld
lret
outsb
inc
test
fdivrs
dec
movsl
xor
frstor
push
add
gs
jecxz
cli
fiadds
js
out
lahf
shlb
dec
lock
insb
pop
mov
xchg
mov
adc
mov
adc
cmp
jae
ret
mov
ror
icebp
jg
dec
xor
jne
xor
sub
bound
dec
shll
and
nop
jo
dec
jno
js
std
daa
ljmp
std
testl
cmp
fwait
push
dec
ds
cltd
insb
cltd
scas
mov
add
out
rorb
ss
mov
sub
sub
mov
mov
in
jo
jp
push
imul
jb
out
mov
inc
fisttps
pop
xchg
in
mov
pop
cmpsl
xor
aaa
xor
xchg
lea
loope
pop
inc
data16
aaa
sbb
lret
push
push
inc
mov
xchg
repz
push
dec
outsl
pop
aam
loope
jecxz
les
cwtl
out
inc
mov
int
pop
fmuls
xchg
jo
lahf
and
insl
xchg
out
pop
jbe
mov
push
stos
add
push
dec
push
push
hlt
push
aaa
adc
push
stos
out
mov
cmpsl
mov
mov
adc
and
stos
add
push
sbb
add
mov
cmp
gs
rclb
mov
out
addr16
int
test
sub
xor
or
paddq
xor
addr16
sbb
fnstsw
adc
mov
popa
xlat
sbb
in
shr
xor
push
cmp
insl
and
scas
or
mov
stos
adc
test
shll
gs
cmpsl
insb
jmp
sub
pop
mov
push
inc
aad
cmp
outsb
add
mov
test
dec
and
pop
sub
sub
inc
ret
xor
mov
xor
mov
sub
inc
leave
push
xchg
xor
lods
sub
sub
inc
sbb
fbstp
xchg
sub
rclb
mov
adc
adc
dec
jl
and
imul
sub
pop
xchg
sub
nop
lock
dec
decl
add
cmp
in
sar
pusha
idivl
stc
pop
mov
fidivrs
fcmovnbe
out
aaa
movsl
or
inc
mov
xchg
test
sub
lods
shrb
and
call
adc
stos
dec
mov
insl
mov
sub
xlat
ss
je
lods
mov
jbe
cli
pop
xor
dec
movl
gs
int3
pop
ret
out
add
xor
outsl
jns
les
aam
cmpsl
pop
dec
mov
mov
decb
mov
lret
fsts
call
insb
outsb
add
mov
insl
dec
dec
inc
push
into
cmpsb
dec
adc
repnz
jge
mov
testl
dec
in
aam
mov
and
dec
cmp
aad
mov
rcl
dec
mov
int
outsb
ss
or
adc
fcomps
mov
jge
addr16
icebp
lcall
cmpsl
pusha
sub
mov
pushf
fdivrs
dec
dec
push
pop
sub
fs
cltd
cmpsl
fcompl
sub
cmp
decb
aam
fstpt
insl
sub
mov
cmp
cmc
jecxz
dec
or
insl
sar
ret
dec
mov
mov
and
pop
ret
or
movsb
sbb
ret
mov
imul
sbb
pop
pop
adc
mov
xchg
inc
xor
xor
mov
fdivs
fdivrs
and
sbbb
cld
rcr
filds
shll
xchg
mov
daa
insl
aas
mov
imul
testb
xchg
std
xchg
pusha
mov
fisubrl
je
sub
ljmp
dec
cbtw
bound
xchg
aam
data16
mov
shll
fistpl
or
cmpsl
test
or
loope
das
pop
add
cli
pop
mov
push
sub
aad
jbe
dec
dec
push
inc
mov
or
cwtl
or
movsl
mov
stos
inc
lahf
add
mov
add
add
pop
push
push
loop
xor
test
arpl
mov
adc
outsb
insl
sub
rorb
jnp
in
sub
adc
cmp
and
iret
xchg
dec
or
add
lods
lcall
pop
imulb
insb
int
test
orb
sahf
fsts
ficomps
lea
clc
out
push
into
and
ljmp
mov
jne
insb
xor
or
xor
mov
loopne
jmp
pop
mov
xchg
daa
mov
fidivrl
fcompl
addr16
rcr
push
testl
shlb
lods
out
push
in
lahf
pop
insb
xor
xor
xorl
lcall
jo
mov
jno
testb
cmpsb
cmp
sbb
out
pop
ret
pushf
bound
arpl
cmp
jge
mov
leave
pop
inc
xchg
push
imul
orl
xor
xchg
repz
xchg
iret
jae
pop
mov
aam
sbb
sub
xchg
ja
xlat
out
dec
mov
popf
or
dec
pop
pop
and
cli
dec
out
pop
inc
repz
lods
aam
aas
lods
lcall
xchg
sub
mov
lret
sub
test
mov
pop
inc
jp
xchg
cmp
jo
fwait
jp
sub
inc
cmc
inc
cmp
adc
lret
add
divl
jb
adc
scas
insb
xchg
es
jle
call
jns
mov
jg
push
pop
mov
lods
lahf
ljmp
jmp
mov
out
out
leave
cmpsb
rorl
add
into
pop
fdivr
mov
das
mov
lock
push
clc
add
andb
in
cmc
fnop
ret
or
adc
push
fwait
add
outsb
add
out
insl
out
adcb
sbb
test
dec
loopne
lock
outsb
movsl
or
and
mov
sbbb
mov
sti
pop
mov
adc
mov
imul
gs
push
jb
adc
inc
add
popf
out
push
jo
or
rol
rorl
stc
out
das
lahf
pop
lahf
in
xchg
outsb
in
fsubl
je
cmp
jle
inc
gs
mov
jge
jnp
sbb
and
test
jmp
mov
dec
leave
sub
dec
jmp
fimuls
mov
push
push
das
jae
lret
jmp
jp
sbb
out
nop
scas
xor
sahf
clc
dec
insl
inc
imul
orb
fcmovnu
push
pop
lods
sbb
jp
test
add
dec
xlat
fstpl
addr16
je
arpl
sarb
dec
jge
sahf
push
loopne
pushf
lods
sub
mov
cmp
ja
enter
dec
repz
aas
popa
inc
push
shrl
xor
and
push
xor
cmp
sahf
aaa
pop
push
pop
inc
les
insl
mov
call
aam
xchg
jbe
sub
adc
or
xor
mov
inc
inc
inc
dec
cmp
jns
cld
aad
std
add
mov
or
scas
scas
imul
mov
push
test
push
aad
push
sbb
repz
mov
and
jb
sbb
sbb
loopne
imul
mov
and
xchg
shlb
loopne
sbb
outsl
cld
fistps
push
loope
mov
test
loopne
sub
stos
int3
push
jg
mov
std
xor
push
mov
and
lret
aam
cmpsb
cmc
or
subl
jo
test
cmp
pop
push
bound
mov
push
jbe
out
pop
jmp
lahf
pushf
push
cmp
or
mov
add
imul
arpl
sbbl
lahf
call
push
testb
jo
mov
loop
das
ret
pop
mov
fdivr
dec
mov
outsl
test
rolb
fsubl
test
mov
test
cld
and
cmpsb
mov
out
bound
mov
data16
roll
leave
sbb
xchg
data16
cmpsl
xchg
sub
cli
xorl
cmp
xchg
mov
add
shl
fsts
lret
xchg
shrb
sub
xlat
call
cmp
out
fimull
addr16
sbb
dec
inc
mov
fmuls
push
std
lds
cmp
cs
in
mov
jl
sbb
mov
xchg
pop
mov
xchg
cmpsb
mov
mov
cld
ret
cmp
xchg
push
xchg
out
and
mov
and
dec
in
dec
push
xor
dec
sub
or
or
inc
ja
jmp
pop
ljmp
in
imul
xor
int
lds
jle
jmp
adc
sbb
push
or
imul
fisubs
xchg
xchg
fcomi
scas
xlat
mov
jne
shlb
ss
dec
mov
pop
stc
daa
mov
inc
pop
lods
dec
pop
adc
cmp
pop
dec
sbb
es
add
loopne
into
dec
mov
sub
fs
and
sarl
outsl
pushf
cmpb
fisttpll
push
mov
rcl
push
andb
sub
adc
ficompl
incb
push
pop
leave
inc
xchg
sbb
add
lea
int
push
inc
dec
imul
jecxz
mov
mov
mov
cwtl
push
jle
sarl
inc
into
or
lret
mov
mov
je
outsl
pop
pop
cmp
repnz
push
lods
xchg
cmpb
mov
lret
mov
cli
inc
mov
out
subl
mov
pcmpgtw
mov
das
xlat
bound
scas
and
mov
int3
add
mov
or
mov
insb
outsl
jno
inc
stc
jb
push
jmp
xchg
pusha
jle
mov
js
arpl
mov
call
push
push
stc
jae
mov
mov
pop
sbb
xchg
jb
lds
int
sub
sbb
mov
enter
or
add
push
mov
ds
insl
xor
dec
and
aas
pop
push
aad
push
mov
divl
cmc
sarl
test
add
dec
xchg
dec
outsb
sub
mov
arpl
fsubrs
inc
push
movsb
add
adc
sub
push
and
pushf
lods
pop
sub
add
out
jns
rolb
pop
and
fld
mov
cmp
or
pop
dec
mov
inc
mov
je
dec
push
fs
or
es
scas
mov
or
fimull
xchg
lahf
push
sbb
imul
mulb
cwtl
ret
mov
add
fucomi
mov
jecxz
insl
mov
test
call
movsl
mov
fnstenv
cmp
or
ror
adcl
sbb
les
out
jbe
sub
or
pusha
and
mov
les
scas
cld
mov
push
sbb
lcall
xor
cmp
add
out
cmp
pop
sbb
sbb
xor
ja
inc
outsl
dec
jp
jbe
cmp
in
jl
sbb
testl
inc
aad
xor
xchg
sti
shrl
mov
arpl
and
test
lea
mov
out
rcrb
out
fnstenv
mov
sub
sub
inc
call
jnp
push
xor
pop
fwait
push
clc
adc
pop
push
popa
das
xchg
sub
icebp
popf
dec
push
dec
mov
pop
pop
das
pop
mov
pusha
adc
adc
mov
fmulp
sti
mov
mov
mov
imul
sub
sub
fstpt
sti
cmp
in
or
pop
repz
lret
lds
mov
push
daa
dec
repnz
aas
hlt
xlat
mov
loop
and
xchg
jno
and
addr16
lret
lea
in
jbe
jb
jle
outsl
andl
xchg
and
mov
jle
push
adc
lods
fstpt
arpl
pop
ljmp
and
es
jp
fcmovu
jmp
lock
sub
out
mov
push
ret
in
inc
xchg
aad
pop
jne
push
push
push
push
nop
in
movsl
orb
push
dec
lock
xor
push
push
or
jo
div
cld
mov
xlat
sub
enter
mov
sbb
cmpsl
insb
or
cs
cmpsl
mov
adc
enter
mov
addl
dec
stos
notb
jns
cmp
and
dec
test
mov
shll
push
inc
add
sarl
xor
mov
cmpsl
les
das
sub
into
cmp
es
mov
mov
pushf
dec
dec
mov
daa
jnp
adc
add
ds
push
in
and
hlt
mov
pop
js
popf
outsl
js
out
outsl
jns
jg
fistl
push
scas
pop
outsl
adc
mov
jp
add
push
jo
rcll
and
jbe
cltd
mov
cmp
cmp
mov
hlt
iret
cld
icebp
stos
mov
pop
aam
mov
shlb
sub
jnp
inc
or
and
pop
movl
xor
cmpsb
stos
jae
dec
sub
sub
xchg
mov
xchg
sahf
dec
cmp
cld
out
mov
je
icebp
pop
fisttpll
cs
jns
cs
nop
and
lahf
test
inc
popa
jecxz
fnstenv
add
fisttps
sbb
fnstsw
xchg
mov
lea
filds
jb
xchg
or
mov
sti
call
out
cmp
sub
or
mov
les
inc
pop
test
test
repz
cs
lcall
jg
inc
mov
adc
in
imul
and
xchg
and
mov
clc
dec
jecxz
bound
add
adc
lods
sub
mov
movsl
xchg
mov
out
clc
shl
int
mov
sub
cmpl
adc
stos
xchg
mov
mov
jecxz
pop
push
jge
addr16
mov
enter
test
jne
lret
pop
jg
push
ret
push
or
push
fiadds
jae
pop
rorb
inc
mov
cli
cmp
dec
hlt
scas
insl
jns
mov
add
jge
push
pop
xchg
cmpb
dec
or
int3
stc
jo
or
mov
pop
and
insl
xor
dec
xchg
add
int3
mov
nop
mov
or
push
push
sbb
ret
ret
das
stos
xchg
and
in
lods
loope
sbb
test
mov
xor
pop
aaa
push
jne
cmp
fcoml
lods
leave
adc
je
jnp
jne
sub
mov
es
cmc
mov
mov
daa
jl
dec
sarb
daa
mov
in
dec
mov
pop
adc
jnp
cmpsb
push
sbb
pop
loope
aad
push
xchg
sbb
dec
outsb
ret
mov
enter
cmc
insb
push
push
int3
mov
leave
cmpsb
inc
adc
xacquire
mov
jl
loopne
decl
cmp
push
or
insb
or
jno
xor
lods
insb
pop
popf
fldcw
lret
jg
stos
push
test
push
pushl
mov
cli
pop
dec
xchg
pushf
imul
aaa
iret
out
nop
in
ret
aas
outsb
test
stc
dec
js
addb
jb
aas
mov
pop
outsl
and
outsl
mov
imul
aam
pop
test
sub
pop
mov
incl
cmpsl
push
lahf
lea
cmp
lcall
hlt
stos
iret
and
adc
mov
lcall
push
sub
out
jp
mov
imul
imul
addb
add
xchg
mov
add
jbe
call
jno
sub
adc
push
push
data16
leave
add
stc
dec
dec
test
lock
lret
jno
jne
insl
or
repnz
stos
mov
iret
inc
jnp
in
sub
xchg
in
lahf
loopne
jno
out
cmp
adc
ss
in
movsb
dec
inc
into
stos
pop
xlat
sub
jmp
cwtl
mov
xor
mov
pop
in
push
cmp
dec
lock
fadds
sbb
xchg
aad
xchg
arpl
mov
sub
test
add
rorl
mov
adc
mov
sbb
pop
outsb
fwait
or
pop
cmc
fs
jne
xor
fnstenv
xor
addr16
rorl
mov
jno
and
mov
push
rorl
push
cmp
cmpsl
hlt
dec
pop
mov
and
insb
adc
push
es
andl
jge
js
fs
cmp
test
rcrl
popa
adc
mov
stc
decb
xor
sub
pop
sub
push
or
cmp
adc
call
es
rcll
mov
aad
adc
cmp
call
and
lcall
jle
dec
stos
pop
fmuls
aam
icebp
pop
daa
aas
add
xor
mov
add
push
clc
sbb
xorl
les
repz
ds
push
addb
xchg
inc
dec
add
cld
mov
scas
nop
adcl
and
aaa
mov
push
jns
mov
pop
pop
es
orl
shl
pushf
pop
mov
std
mov
xchg
shll
lods
adcl
or
mov
push
lret
mov
or
test
iret
mov
adc
lock
lds
cmp
lds
xchg
mov
repz
popf
jecxz
cmp
outsl
decb
nop
add
sbb
xchg
sub
insl
and
cld
hlt
jp
hlt
in
jle
mov
mov
ret
push
pushf
inc
daa
jae
jb
lret
push
fnsave
xchg
cmp
out
imul
cmp
arpl
jp
lea
sbb
push
cmpsl
scas
push
call
sahf
ljmp
jbe
mov
jl
dec
lahf
aaa
jecxz
adc
lods
add
inc
dec
outsb
in
adc
arpl
test
int
inc
pop
iret
les
out
pop
mov
dec
mov
jp
fs
test
ss
jmp
sbb
mov
out
fdivrp
sub
dec
ds
sub
xchg
push
dec
rorl
cmpsl
and
or
mov
and
shll
das
push
and
cltd
xchg
mov
pop
shlb
xor
xor
arpl
mov
sbb
sub
movsl
ret
mov
mov
dec
or
xchg
notl
push
clc
inc
and
push
mov
sbb
int
xor
jne
mov
pusha
or
sbb
test
and
out
cwtl
scas
out
nop
addl
pop
lds
scas
push
dec
scas
pop
mov
jb
mov
ror
sbb
incb
inc
inc
push
mov
jp
mov
in
ret
xchg
fdivrl
mov
rorb
adc
push
pop
mov
lea
out
mov
inc
sti
repz
dec
scas
xor
cli
inc
mov
out
mov
rol
std
push
pop
rol
jge
push
fidivl
stos
int
mov
scas
adc
stos
adc
std
inc
mov
insb
xor
sub
cli
jmp
sub
xchg
and
fimuls
hlt
hlt
faddl
das
lock
loope
pop
or
mov
lds
lret
movsb
jb
fsubr
lods
push
mov
mov
pushf
sbb
int3
add
sbb
out
into
repz
gs
inc
or
push
mov
xchg
jle
mov
aam
dec
addr16
shl
xchg
mov
out
xchg
ljmp
pop
pop
loopne
xor
inc
push
adc
in
cmp
jge
sub
add
js
popf
pushl
testl
movsb
xor
int
ficomps
cs
xchg
inc
and
push
dec
pushl
in
push
push
dec
xchg
mov
mov
mov
adc
fs
adc
xchg
sbb
stos
mov
mov
insb
xchg
xchg
dec
or
fucompp
fstps
hlt
enter
push
sti
mov
ret
stc
pushf
sbb
out
stos
push
leave
in
mov
ss
xchg
loop
add
lea
adcb
jne
pop
pushf
xchg
xchg
pop
loope
xchg
push
push
push
mov
push
mov
cld
mov
bound
scas
pavgw
cwtl
pushf
es
icebp
in
cmpsl
mov
icebp
stos
bound
inc
add
imul
push
cmp
test
inc
add
or
jge
or
shrl
or
mov
cs
pop
adcl
das
sub
or
lods
lds
scas
fcoms
insl
or
xchg
dec
sub
inc
test
push
sub
repnz
cmp
push
bound
xchg
out
pop
mov
popa
inc
cmc
sti
push
mov
in
cwtl
ja
cwtl
ljmp
lret
sbb
xor
je
push
jge
test
lahf
sub
andb
repz
inc
sbb
es
scas
outsl
jnp
mov
scas
das
in
or
xor
dec
out
hlt
add
imul
inc
clc
cmp
shl
pusha
jle
sub
idivl
outsb
add
repnz
test
shlb
push
rol
jbe
jg
sar
js
jno
xchg
xor
es
jne
sub
push
testl
push
inc
jne
or
push
inc
imul
sub
int
decl
call
xchg
aas
and
repnz
stc
insb
dec
imul
int
xchg
xchg
xchg
jb
mov
iret
dec
lret
lea
je
das
jge
or
adc
push
pop
and
test
pop
xchg
loopne
jo
nop
cmpsl
lods
out
mov
sub
lods
and
cltd
jbe
inc
ljmp
xor
sbb
fistl
stos
mov
sub
sarl
jmp
cmp
xchg
pop
inc
ljmp
push
pop
jge
into
add
fidivl
xor
mov
or
jp
fwait
or
stos
in
into
xor
jl
ds
dec
je
loop
cmp
daa
sarl
or
mov
lret
ds
fisubrl
add
arpl
arpl
data16
leave
sbb
addr16
or
mov
adc
sub
push
imul
insl
xchg
test
mov
dec
inc
fnstsw
shll
orb
das
mov
mov
rol
pop
xor
std
fdivr
test
sub
insl
outsl
jl
rolb
mov
ret
jg
push
in
sete
dec
fistl
mov
cltd
lcall
push
fisubrl
pop
out
sub
aas
add
out
sub
inc
fsts
lret
pop
scas
dec
test
shll
testl
leave
cmp
jnp
mov
push
dec
fcompl
test
bound
popf
add
adc
mov
sub
pusha
jmp
mov
das
loope
inc
insl
in
and
out
mov
insb
xchg
xchg
dec
pop
aas
inc
flds
roll
lahf
stos
sbb
push
orl
sbb
or
fmuls
stc
pop
sbb
xchg
daa
mov
xlat
fadd
sahf
jnp
mov
loope
cwtl
pop
fidivrs
mov
cli
or
and
ror
das
mov
cli
xchg
insl
out
xor
xchg
fimull
and
ss
into
mov
or
dec
insb
daa
pop
imul
push
shrl
fcmovnbe
int3
fisubl
shl
fidivl
mov
xor
test
mov
ds
out
push
fdivrl
inc
lods
rcll
popf
fdivs
or
and
cmp
bound
stos
push
pop
lds
inc
fwait
lret
jle
pop
loopne
ds
xor
mov
je
ljmp
xor
mov
mov
cwtl
rclb
push
dec
adc
std
jne
adc
jno
repnz
mov
mov
inc
cli
or
xchg
iret
lret
and
inc
cmp
jmp
aam
enter
pop
pop
stc
pop
lds
push
mov
dec
pop
stc
in
mov
push
mov
cld
orl
mov
push
inc
and
push
testb
cmp
xor
mov
call
icebp
adc
jge
lea
dec
jb
std
sub
inc
xor
test
push
sub
xlat
popl
mov
pop
mov
call
inc
jle
mulb
pop
jae
push
xchg
in
in
xorb
mov
sub
pop
sti
je
push
sbb
sub
daa
jae
inc
je
shrb
loopne
test
mov
and
push
ret
loopne
inc
shlb
pop
sbbb
int
mov
lea
pop
scas
push
or
lahf
rcrl
jo
mov
dec
es
mov
mov
inc
insb
xchg
sbb
stc
mov
movsb
sbb
cmp
out
fcoml
sarl
mov
inc
dec
repnz
cmc
xor
cmp
cmp
cmp
mov
xchg
jns
xor
out
aam
fiadds
int
xchg
jo
xor
or
xchg
ljmp
js
fsubrl
jno
bound
inc
pop
das
movsl
add
and
push
or
push
dec
lea
call
adc
rclb
lahf
jle
inc
mov
test
pop
add
out
lea
addr16
and
push
pop
pop
ljmp
mov
inc
stos
lcall
dec
into
jno,pt
in
ucomiss
scas
fs
inc
ja
fs
mov
insb
cmp
and
xchg
sub
push
xchg
in
fwait
inc
push
ret
mov
xchg
scas
adc
mov
mov
or
shll
les
loopne
pop
mov
jmp
jnp
push
adc
imul
jns
xlat
mov
and
mov
leave
mov
or
inc
test
decb
cli
jge
cmp
cmpb
sbb
cmc
sbb
fs
mov
in
and
test
mov
dec
xor
lret
mov
xchg
repnz
das
fisubrl
aas
and
icebp
arpl
mov
in
lahf
fs
adc
push
or
xchg
jg
divb
sahf
loope
aas
test
sbb
inc
pop
and
inc
or
imull
cmp
sbb
xchg
push
ljmp
xor
sub
mov
push
inc
js
pushf
jno
cmpsb
sub
movsb
cwtl
pop
xchg
mov
pop
dec
je
imul
adc
mov
sub
mov
in
lahf
loopne
sti
and
jno
jne
hlt
aas
test
cmpsl
sbb
ss
cwtl
jne
test
inc
icebp
mov
xor
pop
mov
or
push
mov
cmpsb
arpl
xor
mov
xchg
std
mov
jb
test
push
das
jle
jecxz
je
xchg
cmp
push
cwtl
out
push
imul
jl
enter
add
mov
enter
adc
sub
les
dec
shr
lret
pop
xor
scas
inc
add
mov
pop
adc
mov
in
scas
fmul
mov
lock
pop
pusha
jg
sbb
bound
cmp
sub
decb
lods
jns
jbe
xchg
mov
dec
xor
push
jno
clc
jbe
pop
or
mov
dec
inc
or
je
mov
push
icebp
mov
inc
or
ret
enter
jb
and
pop
sahf
cmc
add
pop
mov
and
and
jmp
add
jmp
and
sub
sub
cltd
cmp
sbb
or
imul
shlb
cld
add
ljmp
push
movl
shlb
xchg
fsubl
xor
adc
xchg
sub
stc
dec
daa
pop
outsb
aam
shl
jmp
addr16
stos
out
adcb
sub
lahf
enter
jo
pop
gs
and
lcall
add
in
xor
out
into
sbb
xor
gs
cltd
or
loopne
out
pop
cmp
mov
fldl
idivl
lret
xchg
int3
arpl
mov
js
cmovle
data16
mov
fdivrl
jge
add
out
push
push
jge
loop
cmp
fdivp
pop
in
push
mov
xorb
fdiv
out
dec
jl
jge
mov
in
shrl
sub
lock
mov
inc
out
int3
pop
std
pop
dec
cwtl
or
mov
loop
jle
addr16
sbbb
cltd
mov
out
aam
orb
jne
gs
int3
sbb
jge
or
or
add
push
mov
cmp
add
dec
and
addr16
sub
leave
push
ucomiss
inc
xor
je
cmp
adc
push
inc
fmul
aad
cmc
insb
mov
jno
clc
dec
xchg
or
out
mov
nop
cmc
lds
ret
mov
cmp
jg
loop
iret
adc
fidivs
arpl
push
mov
or
ds
cmpb
fisubrl
imul
inc
out
pop
mulb
enter
fucomp
mov
mov
jmp
imul
mov
jbe
mov
adc
mov
jbe
rolb
outsb
jnp
dec
aaa
repnz
imul
popa
pop
lahf
jne
mov
outsb
jg
scas
fbstp
jl
out
andb
pop
xchg
mov
pop
test
icebp
inc
jnp
push
mov
and
inc
mov
cmc
repz
jle
xchg
dec
insb
push
cli
lahf
sbb
and
sub
mov
dec
cli
movsb
xchg
stos
xor
mov
fidivrs
and
xor
loop
lds
and
pop
dec
fstp
ss
cltd
mov
hlt
jmp
xor
pop
mov
inc
popf
or
mov
stos
in
jae
push
xor
cltd
test
enter
int
sarb
lock
fsubrs
sbb
mov
addr16
lcall
mov
push
mov
lock
outsb
inc
scas
les
lret
xchg
loopne
sub
sbb
push
xchg
cmp
mov
add
push
jns
mov
lahf
lods
add
sbb
mov
inc
jecxz
fcmovnu
daa
das
jl
pop
push
mov
mov
or
push
je
inc
sbb
scas
inc
aas
pop
inc
inc
daa
pop
stos
ret
rcl
sub
add
ljmp
or
cmp
pusha
pop
adc
pop
mov
sahf
mov
das
fadds
pop
push
es
fstps
int3
fsubl
xorl
scas
jmp
cmp
mov
xchg
jmp
dec
pop
or
in
pushf
js
adc
cld
push
cmp
adc
out
sub
mov
mov
xchg
mov
mov
cmc
lret
pushf
sub
mov
xor
int
push
sahf
jno
popf
or
leave
aaa
lahf
lret
test
pop
aaa
mov
pop
in
sub
pop
data16
movl
ds
insl
and
cld
xor
adc
cmpsb
inc
xor
jecxz
dec
dec
mov
jns
push
xor
and
aaa
sbb
rolb
fbld
push
mov
ljmp
jecxz
push
push
push
test
mov
ss
shlb
or
sub
xchg
and
adc
arpl
jnp
not
and
in
mov
mov
stos
es
xlat
sbb
and
popf
pushf
jmp
inc
cli
das
je
out
bound
sarl
xchg
ss
popa
in
inc
mov
and
mov
daa
in
and
jne
push
in
sub
sub
rsqrtps
and
bound
jge
into
mov
mov
test
and
pop
xor
sbb
call
imul
xchg
call
cmp
jmp
decl
mov
pop
inc
sar
mov
stc
add
jae
dec
test
mov
movsb
mov
sbb
repnz
sbb
xchg
jle
pushf
repz
mov
std
add
repz
lds
repz
xor
pop
push
inc
xchg
mov
sub
xorb
mov
rolb
mov
sarb
rcl
jl
mov
popf
nop
push
lods
xor
xchg
cwtl
movsl
pop
xor
int
popf
les
sbb
jp
pop
dec
lds
pop
xor
or
ja
xor
push
jg
lcall
push
or
sbb
mov
sahf
sbb
hlt
ljmp
lcall
aad
lock
sub
sub
jle
jo
fisubl
pushf
sbb
xor
loopne
cltd
mov
xor
ret
jnp
mov
mov
pop
cmp
pop
pop
push
adc
out
add
imul
bnd
dec
lods
and
xchg
inc
movsl
sub
inc
outsl
xchg
add
mov
mov
ret
notl
int
cmp
mov
sub
sbb
out
cmpsl
test
icebp
mov
cli
cs
pop
jno
adc
sub
add
ficoms
popa
xchg
shlb
popa
jbe
insb
shrl
call
mov
jbe
xchg
icebp
pop
jb
sub
imul
jo
pop
push
aad
mov
dec
leave
dec
ret
xchg
gs
repz
movsb
popa
popf
xlat
pop
lods
mov
fs
dec
pop
add
lcall
rep
lret
stos
negb
mov
je
xchg
pop
jno
insl
in
es
jno
rcrl
shlb
sub
stc
mov
data16
enter
add
frstor
scas
mulb
xchg
mov
cmp
xchg
jno
int
lahf
daa
pop
xchg
push
jae
push
jne
shll
icebp
rcr
ljmp
jp
popa
mov
xor
or
adc
lds
aaa
test
inc
jnp
je
xchg
xor
js
sbb
jge
sbb
leave
mov
push
jl
mov
sbb
push
xchg
push
push
enter
inc
or
les
rcrl
ret
daa
outsb
fwait
sub
pop
cwtl
mov
xchg
dec
jle
and
out
cmpsb
push
or
xchg
jge
clc
mov
cmpsb
and
insb
cmp
in
push
jl
jp
inc
xor
xchg
loope
push
adc
aad
fimuls
pop
push
pop
aam
pop
xor
xchg
aas
pop
xchg
cs
ret
mov
jge
adc
xchg
and
fwait
stos
add
in
sti
mov
test
push
sub
push
xor
dec
int
hlt
xlat
gs
scas
arpl
rcrb
push
movsl
xor
out
mov
push
mov
mov
ret
sbb
push
scas
sbb
daa
cmc
outsl
pop
xchg
sub
add
cwtl
xor
loop
out
dec
sbb
mov
cs
ret
push
aaa
push
fstpl
aad
jp
push
andl
hlt
pop
pop
adc
fdivrs
mov
lods
mov
in
je
pop
inc
ss
pop
loopne
pop
mov
clc
or
mov
pusha
add
cmp
lret
cmp
add
mov
mov
push
pop
out
xor
mov
xchg
xchg
push
add
pop
cmp
mov
mov
fimuls
in
fcoms
xchg
out
adc
mov
inc
cli
arpl
jmp
xchg
enter
repnz
test
or
testb
iret
xchg
lret
in
leave
xchg
xchg
scas
xor
stos
and
xchg
push
push
fmull
sti
inc
mov
mov
inc
push
rcrl
loopne
aas
fldl
mov
or
enter
aas
filds
xchg
pop
pop
aad
mov
lret
test
mov
f2xm1
sub
mov
mov
mov
fisubl
pusha
dec
pushf
mov
sarl
dec
xchg
pop
or
movsl
xchg
nop
dec
add
repnz
jb
push
jle
xchg
xor
xorl
aas
mov
aas
mov
lea
leave
and
jle
mov
mov
stos
jnp
xchg
xchg
mov
test
cmc
subl
loopne
inc
jl
or
stos
cmp
dec
dec
in
repz
push
sarl
push
das
pop
jnp
in
lret
pop
inc
repz
stc
lock
cmp
mov
scas
xlat
es
leave
inc
scas
and
test
push
pop
xor
cmp
sbb
sub
mov
mov
daa
enter
inc
movsl
cmp
insb
and
xor
movsl
fistl
in
popa
hlt
sbb
out
in
push
scas
cmp
mov
push
loop
or
sar
sub
pop
xor
inc
js
imul
rcll
ds
ret
pusha
push
cld
jns
lcall
cld
jp
inc
dec
add
or
roll
mov
jmp
lds
or
sbb
sbb
adc
add
or
dec
sti
fists
dec
jae
out
mov
int
cmp
xchg
mov
orl
sarl
repz
inc
fistpll
in
daa
stc
clc
or
jo
push
call
sbb
outsl
shrl
std
inc
and
adc
sbb
scas
dec
ret
mov
test
imul
pop
sbb
dec
in
cld
lret
adc
cmpl
sahf
sarb
in
mov
fimull
fwait
xor
jle
or
mov
ret
mov
fiadds
pop
inc
pop
push
lcall
pushf
push
add
mov
and
xlat
adc
push
push
repnz
out
mov
push
push
jp
xor
scas
xchg
scas
lahf
jl
insl
es
mov
cmpb
xchg
iret
fistpll
int
mov
sub
inc
nop
lret
adc
lahf
mov
aas
cmp
aas
mov
hlt
add
or
sti
mulb
dec
ljmp
xlat
into
push
das
mov
das
dec
and
scas
in
jae
clc
test
into
dec
test
jg,pt
mov
and
mov
lret
adc
xor
sub
movsb
mov
mov
mov
push
jle
fwait
test
sti
ds
mov
sarb
bound
mov
out
lds
imul
outsl
cmpsl
out
insb
inc
push
iret
and
in
mov
xchg
in
pop
ret
hlt
pop
aas
stos
mov
cli
pop
inc
out
mov
cmp
dec
adc
cmp
jg
push
jnp
sahf
push
xor
dec
popa
xlat
pop
or
jne
cmpsb
xchg
mov
es
sub
xchg
je
adc
xor
or
adc
xor
shll
addr16
mov
push
xor
mov
push
je
je
shrb
jp
and
ficoms
stos
sub
clc
test
bound
insl
lcall
pop
mov
jge
sbb
jno
sti
pop
popf
jns
jb
mov
cs
add
adc
mov
xchg
jns
lods
sbb
or
jns
aas
lea
call
daa
pop
iret
out
jle
or
test
jl
sbbb
push
mov
sti
sbb
jmp
push
popf
gs
mov
call
xor
in
popa
lret
dec
xchg
fcompl
adc
fld
cmc
andb
loop
mov
fcoml
push
cmp
nop
push
cmp
xchg
sbb
cmp
outsb
ret
dec
inc
push
sub
mov
mov
sbb
inc
cmp
aaa
loope
lret
pop
push
cld
nop
stos
int
jo
mov
mov
mov
sbb
out
pop
sbb
out
jb
lods
pop
jae
arpl
cs
push
js
orl
scas
std
inc
jne
orb
arpl
or
ds
pop
cltd
sahf
dec
movsb
sub
cmp
imul
xchg
xchg
lods
jo
inc
hlt
push
mov
ficomps
push
xchg
nop
xchg
fwait
insb
adc
pop
xor
inc
xchg
push
cmp
lds
int
jmp
imul
stos
jmp
data16
shll
xor
ljmp
add
xchg
lret
mov
cmp
mov
cld
adc
aas
inc
imul
jae
icebp
pop
dec
lcall
test
repz
test
inc
cmc
in
mov
test
xchg
fdivs
test
jmp
mov
jbe
lods
cmp
arpl
sbb
jnp
push
mov
int
test
rcll
sbb
pop
in
mov
in
outsb
push
push
aam
loopne
jp
lret
sbb
add
mov
call
in
data16
pop
in
inc
je
mov
and
fucomi
dec
mov
and
pop
je
xchg
sarb
push
and
cli
mov
pop
pop
xor
push
push
cltd
push
mov
pop
outsb
divl
data16
es
sbb
lahf
jae
rcl
fisubrl
popa
int
xor
gs
dec
jg
jle
pop
mov
adc
aas
lret
nop
pop
jae
iret
xor
cmp
adc
andb
mov
out
hlt
movsl
nop
dec
mov
divl
popf
repnz
ret
cmc
rolb
and
leave
ja
lret
fidivs
or
pop
jnp
sub
fsubrs
jl
xchg
and
clc
jnp
jl
fdivs
in
lret
jno
cmpsb
jecxz
jge
loope
cmc
and
pop
pop
xchg
or
aaa
jae
inc
jne
loope
stos
lret
icebp
es
push
xorl
add
dec
ds
js
dec
or
out
daa
ret
cmp
cwtl
xchg
mov
jmp
xor
es
pop
pop
add
lock
ss
clc
push
outsl
mov
inc
dec
push
pusha
ja
test
mov
mov
scas
inc
lods
jl
push
sub
rcrl
jo
les
inc
loope
test
sbb
xchg
and
push
inc
mov
shll
or
cld
sysret
sti
lret
test
adc
jecxz
push
mov
push
sub
jge
out
sti
mov
adc
dec
sbb
mov
loop
mov
mov
cmc
mov
mov
dec
or
cmp
aad
test
dec
xor
mov
pop
nop
jge
outsl
and
sbb
xor
test
add
data16
push
or
outsl
dec
add
and
test
xlat
xor
push
dec
or
movsb
xor
mov
cmp
mov
clc
out
sub
out
dec
lods
push
jae
insl
mov
jp
ret
loop
push
sub
push
fs
xor
mov
pop
xchg
pop
lock
xor
jle
ss
mov
or
or
pop
pop
or
fmull
repnz
xchg
push
rcrb
icebp
ds
scas
inc
lea
jae
cli
adc
in
pop
js
aam
lcall
xor
mov
pop
cmp
in
cs
cmp
loop
push
pop
out
fnstcw
das
jae
push
or
or
shll
cmp
xor
clc
xchg
es
cld
or
sbb
cld
cmpsl
scas
mov
lds
cmp
jp
adc
rcll
cmp
movsb
dec
lock
movsb
pop
inc
mov
xchg
out
jle
mov
jl
pop
mov
and
jle
int
call
mov
push
push
fs
mov
adc
movsl
dec
movsl
ret
out
push
jae
rcll
fisttpll
dec
mov
pop
cmp
cmp
push
dec
gs
ficoms
test
pop
int
cmp
stos
jecxz
mov
xchg
js
sahf
adc
loope
push
mov
xor
ds
leave
je
cs
loope
lods
mov
icebp
pop
mov
lahf
jg
sbb
addr16
xchg
loope
xchg
push
jbe
inc
or
cs
inc
mov
fdivrl
adc
scas
lcall
pop
jecxz
in
cmp
outsl
add
push
scas
adc
ffree
jp
mov
loop,pt
mov
sub
clc
cmpsb
cmp
fistpll
mov
fsubs
jo
pusha
xor
repnz
push
incl
xchg
jl
adcb
popf
jp
and
mov
and
or
mov
mov
scas
ret
mov
roll
push
xchg
xchg
add
sub
pop
loop
jg
in
inc
or
scas
not
pop
and
dec
jbe
adc
lahf
mov
xsha256
cmpsb
xchg
and
pusha
push
mov
imul
ret
push
popf
or
push
clc
fldenv
cmc
mov
out
sub
ljmp
or
adc
js
jmp
mov
ja
mov
scas
gs
pop
mov
mov
adc
int
and
jmp
add
xor
xchg
add
cltd
popf
sbb
out
nop
orl
mov
and
pop
sbb
mov
inc
cld
in
mul
lret
pop
ss
or
cmpsb
test
or
repnz
cmpsl
xchg
pop
ficoml
movsl
in
push
inc
cmp
cmp
stos
adc
outsl
outsb
and
xchg
pop
shl
cmp
loope
mov
enter
xor
push
xchg
cmp
and
pop
movsb
sbb
bound
dec
inc
lret
cwtl
xchg
fsubrl
sbb
mov
ss
jns
mov
movsb
stos
nop
lahf
or
loope
bound
jo
and
push
cli
xchg
popf
sub
adc
stos
sub
out
bound
add
addr16
mov
ljmp
sti
or
push
pop
int
adc
sahf
mov
leave
jo
into
jle
aaa
mov
xchg
mov
popf
test
pop
dec
dec
cmp
jg
jg
push
mov
test
dec
inc
iret
jp
xchg
sub
push
mov
arpl
jbe
xor
dec
jbe
andl
idivl
cs
dec
imulb
arpl
sub
jno
fistpll
inc
cmp
outsb
mov
inc
or
fwait
popf
fcomps
iret
lods
push
push
int
push
xlat
sub
ret
sub
hlt
leave
push
xorl
mov
inc
aad
ret
sub
popa
addb
xchg
and
lds
call
add
cmp
fwait
xlat
mov
fcompl
mov
mov
add
and
mov
sar
dec
and
add
push
lcall
xor
sbbb
mov
rcll
mov
sarl
pop
in
push
jno
jbe
sbb
adcl
js
popf
cmpsb
mov
lock
punpcklwd
int3
ss
nop
adc
xor
fcmovnu
mov
pop
ja,pn
push
sub
xchg
leave
push
sbb
stc
sbb
ss
loopne
sarb
adc
push
dec
xchg
cmp
cmp
fisubrl
outsb
inc
stc
mov
lods
les
adc
test
fldcw
adc
mov
out
fildll
int3
or
dec
aam
insl
cmc
icebp
xlat
cmp
call
mov
xor
xor
adc
repnz
adc
push
adc
inc
and
mov
push
imul
pop
xchg
dec
cld
insl
xchg
adc
test
test
dec
xor
mov
jno
push
mov
push
mov
loopne
fisubl
jmp
subb
pop
pop
fs
leave
mov
mov
jmp
sahf
mov
mov
mov
ljmp
dec
test
dec
cwtl
push
inc
cli
jg
mov
push
arpl
ds
gs
sar
cmpsb
mov
mov
in
sbb
jne
mov
cs
scas
sti
fcmovnb
clc
sub
or
mov
cmp
dec
ds
ds
outsb
xlat
push
pop
lret
xchg
rcl
cmp
mov
and
test
mov
inc
push
cmp
lcall
repz
pusha
lock
cmp
xchg
ret
pop
or
inc
add
push
jb
loop
push
jo
push
enter
inc
out
add
inc
loopne
hlt
arpl
push
leave
sbb
pop
fs
outsb
cmpsl
arpl
lret
lock
jg
ljmp
cmp
addr16
lahf
sahf
xchg
push
xor
lahf
fs
aaa
jp
mov
push
fdivs
jg
xchg
cwtl
mov
pop
push
outsl
out
xor
dec
out
ret
scas
lahf
or
sub
sub
mov
adc
push
adc
jmp
in
sub
and
in
mov
jmp
xchg
mov
jp
sub
and
sbb
add
int
fcmovnu
into
mov
and
pop
ret
or
loop
xchg
push
xor
leave
sti
mov
jb
xor
cmc
subl
std
push
jmp
pop
sbb
sub
or
sbb
shrl
movsb
cwtl
cld
add
or
inc
lahf
add
out
inc
cmc
idiv
out
out
adc
xorl
scas
out
imul
daa
add
jne
xchg
and
ror
dec
aaa
aam
adc
lock
cmp
pusha
iret
imull
pop
xchg
outsl
lea
lock
or
rcll
or
imul
mov
inc
sub
cli
shrl
rcrl
inc
popf
movsb
xor
inc
data16
icebp
cmp
mov
fwait
and
add
sbb
jp
pushf
ret
arpl
lret
lock
push
cld
or
pop
das
fstpt
mov
test
xchg
push
xlat
out
mov
add
in
lahf
test
xor
gs
lods
loopne
lock
add
fidivrs
mov
pop
or
in
cmpsb
out
xor
cmc
adc
xlat
ret
mov
jg
pop
adcl
jae
fstpt
jns
outsb
test
repz
mov
jecxz
stos
pusha
scas
fbld
hlt
sahf
cmp
jmp
jle
dec
call
arpl
dec
rcrl
cmp
lea
inc
xchg
imul
sbb
dec
lods
rclb
inc
jle
mov
pop
mov
subb
or
movsl
push
jns
and
cmp
fildl
mov
addr16
xor
mov
jo
inc
fbstp
jae
or
jnp
dec
xchg
ret
xor
mov
push
or
daa
shlb
cmp
mulb
aas
push
repnz
push
jp
les
dec
mov
dec
popf
sbb
out
push
mov
jbe
fs
adc
mov
cwtl
popf
mov
pop
dec
adc
in
mov
cmpsb
inc
sub
adc
mov
shl
push
fstps
push
push
cmp
or
nop
jo
mov
sub
sbb
xchg
sbb
sti
mov
adc
adc
push
imul
mov
int3
out
loopne
cmpsb
imul
jne
push
adc
dec
pop
cmp
xchg
ret
mov
stos
xchg
fisubl
xor
test
pop
iret
mov
int
test
mov
pop
xchg
adc
or
stc
je
inc
and
js
pop
cltd
xor
enter
ficomps
and
fisubrs
inc
dec
popa
pop
push
bound
es
scas
mov
hlt
dec
push
mov
inc
std
jb
push
shlb
nop
mov
pop
add
mov
mov
shll
or
dec
jne
mov
mov
mov
push
cmp
adc
fisttpl
in
cmpb
mov
pop
ljmp
pop
mov
daa
out
lahf
mov
jge
ja
dec
adc
rcll
push
add
or
insb
mov
movsb
dec
sbb
test
lds
lcall
shrb
fldl2t
lods
les
aad
imul
in
add
in
xor
loopne
cmp
push
mov
fstps
fildl
imul
aad
cmp
dec
adc
inc
sub
xchg
and
cmp
shr
pop
jecxz
mov
push
imul
rclb
scas
xor
pinsrw
inc
dec
adc
lret
xlat
cmp
pop
lock
iret
mov
cmp
sbb
aad
add
push
ds
and
adc
ret
push
mov
popa
sar
pop
or
out
fwait
rcrl
in
mov
pop
jmp
or
cld
jle
pop
bound
xchg
stc
or
aam
xor
push
lret
dec
xchg
cli
jbe
popf
in
mov
or
xor
mov
cmp
rcr
sub
sub
pushf
fnsave
push
test
lcall
push
daa
and
xor
mov
movsl
push
push
outsl
and
fwait
int
out
xchg
inc
xchg
push
push
xchg
test
in
dec
fmuls
sbb
jg
stos
xchg
stos
repnz
push
loopne
arpl
mov
mov
add
jo
es
shll
pop
pop
icebp
mov
roll
aam
mov
inc
bound
stos
stc
inc
test
push
cmp
mov
shrb
xor
mov
jno
xchg
int
out
jl
cmp
jg
cmp
adc
sub
addr16
and
int
adc
push
adc
dec
in
popa
dec
jecxz
loop
push
or
aad
lret
push
outsb
sarl
dec
dec
sbb
cbtw
sbb
mov
dec
and
mov
mov
iret
mov
lret
xor
shll
lods
adc
decl
lahf
xor
mov
into
les
mov
notb
or
cmp
xlat
push
and
pop
inc
push
pop
in
dec
push
jle
cmpsb
xchg
xchg
jb
call
xor
jge
and
adc
ret
xlat
mov
dec
jb
sbb
and
mov
dec
xchg
mov
lcall
imul
push
stos
adc
shlb
mov
ds
popf
imulb
dec
cld
mov
cmpl
movsb
xchg
rclb
aam
es
outsb
pop
cmpsl
cmc
add
lea
mov
lcall
pop
pop
lock
mov
das
lods
loope
movsb
outsb
push
ja
xchg
test
mov
loop
fisubs
mov
out
mov
hlt
test
adc
popf
push
xchg
inc
mov
xor
popf
mov
jns
repnz
jl
lea
into
jb
mov
pusha
fists
mov
icebp
jbe
dec
pop
cld
mov
nop
xor
push
push
or
sub
test
cmp
lods
mov
cmp
pop
pop
sub
xchg
loope
xor
lret
mov
xchg
sahf
dec
jmp
int3
cmp
dec
pusha
mov
fstps
fs
sub
dec
add
hlt
mov
lret
xor
cltd
or
mov
pop
push
jl
sub
push
cs
not
dec
enter
stc
mov
daa
dec
mov
repnz
push
iret
cltd
inc
or
call
scas
rol
jge
xor
xchg
xchg
sti
fistl
add
bound
jns
negl
sub
xor
inc
cld
scas
sti
and
jbe
add
out
cmp
daa
pushf
mov
and
xor
cli
lds
or
sbb
fnsave
lahf
loope
mov
sarb
jp
pop
dec
sarb
and
push
outsl
outsl
push
mov
ja
mov
jle
mov
xchg
pop
push
test
out
xlat
out
jbe
jns
cmpsl
jmp
mov
lods
jns
cmc
je
lods
pop
adc
es
ficoms
cmpl
ljmp
rcr
xchg
mov
pop
out
stos
jmp
xchg
lret
mov
jecxz
cmp
test
fucomip
ss
mov
add
pop
jle
fcmovb
insb
mov
cs
sahf
ret
push
or
pusha
test
scas
cld
addr16
ss
xor
mov
dec
push
aad
mov
adc
js
mov
and
fwait
aad
cmp
jg
or
sbb
test
movsl
lods
adc
cwtl
test
add
icebp
enter
out
imul
jle
and
xchg
and
pop
dec
push
or
ss
add
xchg
mov
sbbb
in
cmp
outsl
cli
dec
shr
or
push
add
roll
or
mov
push
sarb
icebp
loopne
lods
pop
repnz
das
mov
insl
shrb
cwtl
cmp
sub
clc
mov
adc
and
movsl
int
stos
pop
imul
call
lcall
push
mov
pop
lcall
pusha
mov
cltd
adc
imul
insl
fbld
cmpsb
mov
inc
dec
jl
stos
xor
movsb
loopne
fiaddl
pushf
lods
pop
inc
sub
or
mov
les
dec
repnz
ss
bound
leave
mov
movsb
iret
cmpsb
and
rolb
sbb
pop
cld
out
xor
psubd
ret
mov
cvtdq2ps
mov
btl
jl
cmpsb
inc
fnstsw
sbb
cmpsb
fcomp
adc
addl
dec
es
fdivrs
dec
inc
jmp
push
jl
movsl
jle
in
insl
out
out
ljmp
and
or
jge
and
fstpt
sub
push
ret
in
mov
ficomps
idiv
js
je
repnz
push
mov
cmp
inc
sete
adc
adc
imul
fwait
mov
mov
push
adc
dec
cmc
add
add
xchg
dec
aad
cmc
cmc
sub
and
and
in
mov
dec
add
clc
andb
cli
cltd
lods
cltd
sub
pop
fwait
imul
scas
and
fcmove
pop
mov
hlt
mov
insb
mov
mov
loop
or
das
test
jno
xchg
int3
mov
jbe
jmp
arpl
int
loopne
push
insl
in
test
mov
int3
movsb
add
loopne
mov
adc
popf
push
mov
insl
leave
xor
lds
mov
push
rcll
xchg
add
pop
jb
xor
incb
notl
lahf
xor
jmp
adc
jle
jae
mov
fdivrl
loop
scas
and
inc
inc
inc
adc
jge
outsl
xor
ret
iret
cld
or
pushf
lret
out
jl
mov
lea
fs
movsb
sub
insb
or
add
inc
jle
xchg
jo
pop
jne
movsl
lahf
es
add
dec
pop
fisttps
nop
pusha
mov
mov
xchg
rclb
pop
pop
iret
insb
fsubrl
adc
out
push
inc
insb
das
inc
popf
xor
popf
les
sbb
dec
inc
inc
inc
rclb
mov
fcmovnu
mov
or
adcl
mulb
push
test
pop
jne
jp
das
lcall
push
mov
sub
xor
fs
xchg
sbb
fucomi
cmp
mov
sbb
push
mov
pop
push
inc
test
ret
push
outsl
sbb
dec
push
dec
inc
in
jge
lods
or
add
test
pop
out
dec
mov
inc
and
cmp
mov
iret
inc
jne
rcll
mov
and
sbb
scas
test
sub
std
js
shlb
push
add
pop
into
js
in
add
shll
in
aas
pushf
insb
mov
sbb
pop
out
and
movsl
leave
mov
ja
aas
into
push
rcll
cwtl
cli
cs
mov
hlt
sbb
push
repz
test
int
out
rolb
andb
insb
xchg
and
mov
fwait
xchg
mov
and
mov
lcall
out
mov
jl
sbb
cs
jg
shl
imul
in
call
out
leave
ss
incb
daa
popf
shll
sbb
repnz
mov
push
loopne
xor
popa
xchg
inc
lods
add
ds
scas
into
data16
mov
shl
shll
std
push
xor
sbb
sub
mov
loopne
adc
xchg
dec
sbb
leave
ja
sub
pop
and
cmc
or
test
xchg
das
sbbb
popf
popa
jns
and
neg
inc
out
mov
adc
test
imul
jmp
pop
push
cltd
push
std
xchg
or
jecxz
std
dec
jmp
ljmp
xor
movsl
dec
xlat
lahf
mov
test
inc
add
fdivp
sbb
mov
mov
out
or
and
adc
add
push
pop
sahf
push
or
sbb
nop
mov
inc
xor
sahf
and
test
pop
xor
cmp
sbb
mov
mov
ret
xchg
lds
daa
and
jg
ss
lods
or
sbb
pushf
rorb
lods
mov
stc
in
sub
enter
repz
loopne
outsl
pushf
arpl
movsl
lcall
pop
pop
lods
push
or
shl
sub
idivb
xchg
shl
bnd
xchg
push
popa
sbb
outsb
mov
loopne
loopne
sbb
jl
test
es
dec
or
jmp
add
js
sbb
mov
pop
fisttpl
adc
cmpsb
xor
test
loop
inc
sub
xlat
or
ret
and
test
add
sub
and
cli
cmpsb
lock
add
fld
fmuls
xchg
mov
adc
dec
out
std
pop
pop
sub
lods
xor
lea
lods
loop
ljmp
pop
adc
fdiv
mov
and
cmp
repz
imul
repz
push
mov
inc
loope
loope
imul
lods
inc
sub
stos
mov
fwait
ja
mov
inc
inc
mov
pop
cwtl
in
adc
push
mov
shl
sbb
sti
rorb
mov
cmp
pop
mov
and
les
les
xchg
dec
inc
in
mov
loopne
push
jae
jb
xor
clc
push
jp
xor
stos
jno
cmp
dec
jl
xor
int3
sub
add
mov
fcmove
inc
call
xchg
movsb
ljmp
xor
std
ret
xor
adc
jecxz
cmp
mov
icebp
test
xchg
loope
push
xchg
bswap
addb
sbb
xor
push
sub
mov
and
int
sub
in
pop
dec
add
jnp
push
aam
imul
mov
jae
mov
add
pop
fmull
cmpsb
cmp
or
lds
push
push
xor
inc
push
push
cmp
push
mov
notb
push
mov
je
xchg
into
ficompl
mov
mov
lods
lock
pop
cltd
dec
mov
xor
add
xor
icebp
pop
in
inc
or
std
shrb
fs
inc
and
int
nop
loop
sbb
loop
fcmovnb
jecxz
insb
das
add
addr16
pop
sub
fwait
sbb
adc
insb
mov
dec
mov
lock
movb
push
and
gs
sbb
mov
loop
test
outsl
sub
xor
mov
enter
mov
sbb
scas
xchg
mov
test
scas
inc
or
pop
outsl
or
aad
movb
insl
notl
and
inc
gs
stos
push
daa
dec
mov
mov
mov
in
hlt
and
nop
push
push
std
jle
out
pushf
je
push
imul
jbe
subb
push
push
bound
lock
into
mov
repnz
sti
add
dec
jns
mov
inc
sbb
stos
jbe
sub
sub
imul
mov
aad
imul
add
ret
dec
pop
push
jnp
notl
mov
mov
leave
mov
ret
fisttpll
xor
xchg
rcrb
cmp
fildl
push
sub
insl
nop
subl
pop
mov
cmpsl
into
inc
pop
add
jg
jmp
clc
fbstp
andl
add
mov
mov
push
stos
cli
stc
xchg
int
and
jns
movb
negl
cld
dec
repnz
mov
fwait
inc
mov
mov
mov
xor
jle
add
out
in
inc
cmp
lods
ret
push
mov
out
add
aam
arpl
mov
jno
pop
sbb
mov
pusha
loope
loope
xchg
mov
inc
jecxz
cmpsl
adc
xor
sub
pop
push
clc
cltd
xchg
in
jbe
xchg
inc
movsb
xchg
fdivrl
adc
hlt
int3
sub
xchg
stos
mov
incb
in
fists
cmpsl
sbb
mov
cmp
pop
ficoms
cmp
ja
shll
mov
popf
addr16
fiadds
xchg
std
mov
les
dec
pop
pop
adc
or
push
in
ret
pop
arpl
mov
cld
mov
mov
sub
add
mov
in
push
insb
push
imul
pop
and
xchg
xchg
out
mov
dec
aas
lahf
push
xchg
lret
stos
cmp
hlt
flds
popf
popa
mov
mov
adc
mov
push
out
inc
pop
ret
lcall
xor
dec
jno
enter
mov
cltd
mov
jno
and
inc
fdivrp
dec
ljmp
movntq
adc
push
xchg
int
add
pushf
cmp
jl
push
xchg
out
push
add
or
nop
sbb
and
push
lret
fisubs
push
mov
jge
aaa
push
push
xchg
pop
inc
jmp
sub
dec
mov
out
and
movsb
cmp
icebp
jo
mov
rorb
in
imul
push
cltd
repnz
push
test
mov
inc
add
shr
fildll
bound
mov
xchg
jb
subb
cmpsl
dec
mov
push
cmp
popl
push
js
les
pop
sbb
outsb
mov
test
stos
push
cwtl
int3
out
out
cmp
fldt
dec
fsubrl
push
pusha
std
xchg
xchg
jae
insl
mov
dec
stc
outsb
dec
push
lret
fdivrp
stos
jl
xchg
xor
cmp
and
int3
push
push
jp
loope
push
aas
xlat
push
rolb
mov
fstl
mov
hlt
pop
sbb
or
jae
cmp
loopne
fstpt
ret
popa
test
fidivs
lods
stos
lea
sbbb
sub
add
xor
lret
into
adc
or
mov
pinsrw
lret
out
jne
jmp
push
negb
xchg
dec
jbe
jge
sti
dec
xchg
cmp
and
xchg
add
fnstcw
in
sbb
negl
hlt
pop
fnsave
mov
xor
iret
cmp
mov
adc
jb
pop
data16
data16
cwtl
mov
jmp
mov
xchg
mov
out
jae
dec
lds
mov
inc
pop
rcr
in
lock
fnstenv
jnp
push
out
mov
stos
cld
and
fnsave
xor
call
imul
or
aad
add
push
xor
jp
mov
jp
into
inc
and
fisubrs
ja,pn
fs
scas
js
cwtl
fstpt
lods
mov
sbb
mov
int3
cld
enter
iret
and
fprem1
pop
xchg
inc
fidivrl
add
sub
imul
dec
push
push
int
xchg
imul
or
cmpsl
xchg
movsl
jmp
sbb
sti
insb
push
bound
sbb
jae
jmp
push
lcall
dec
mov
sub
jnp
lods
pop
pop
in
cmp
mov
push
adcb
or
and
jbe
out
fs
sbb
push
add
inc
sahf
lods
leave
inc
jmp
hlt
inc
imul
cwtl
mov
mov
popa
ljmp
call
pop
or
mov
shlb
jno
into
lods
loopne
mov
lods
mov
cmpsl
push
dec
xchg
nop
cmp
mov
test
inc
sahf
pop
orl
dec
das
or
lret
mov
pop
or
enter
dec
fcoml
xchg
cmc
cs
jmp
clc
inc
sti
cmp
push
sbb
cwtl
out
jl
inc
loopne
out
cmpsl
sbb
jge
and
cs
out
sahf
add
adc
sub
pusha
jle
jno
adc
jnp
out
cmpsb
adc
add
nop
loop
dec
fsubrs
hlt
xor
into
gs
ljmp
sar
jno
push
sbb
dec
sub
in
xchg
movsb
mov
je
dec
rcrl
test
movsl
outsl
sub
sub
int
pusha
add
sbb
and
iret
pop
ja
dec
cld
jmp
arpl
xchg
jp
dec
jne
aaa
popf
mov
jae
adc
sbb
mov
dec
sbb
lret
fisttpl
push
add
out
and
pop
xor
inc
ficomps
adc
mov
xor
adc
cmpsb
mov
fstps
mov
push
stos
jle
cli
jle
xchg
fldl
ljmp
xor
xor
mov
or
xchg
and
loopnew
outsb
imul
sub
and
push
aad
daa
xchg
fldenv
push
cmpsb
inc
into
adc
or
arpl
sub
bound
stos
pop
xchg
jmp
into
das
inc
cmp
push
scas
cmpsl
mov
nop
stos
cmpsl
jge
in
jne
pusha
xchg
mov
fwait
gs
push
fwait
mov
jl
xchg
jmp
es
mov
sub
sahf
cld
test
push
addb
sub
mov
sahf
mov
mov
call
nop
sbb
ss
xchg
or
clc
jg
mov
popa
sub
lret
cltd
jp
xor
out
jp
pop
cmpsl
add
push
or
mov
push
out
cmp
mov
dec
jg
test
mov
pushl
jmp
and
lock
push
adcb
mov
lret
loop
cmp
movsl
mov
dec
lret
cmc
movb
jecxz
aam
xchg
cmp
mov
mov
imul
xor
rcr
adc
dec
lret
dec
mov
add
mov
sub
test
nop
scas
inc
orb
andl
push
lret
mov
adc
cmp
sbb
cli
mov
mov
sub
mov
js
mov
push
xchg
push
push
push
dec
sbb
repz
iret
bound
mov
dec
push
mov
lods
adc
in
mov
inc
xor
push
sbb
mov
pusha
sbb
or
addr16
scas
test
sub
fmull
lods
cwtl
outsl
mov
mov
push
mov
fptan
and
repnz
jns
mov
push
jmp
icebp
fisttpll
dec
aad
sub
lods
mov
out
dec
into
xor
push
push
and
xor
dec
scas
bound
mov
mov
stos
push
adc
inc
and
out
lock
clc
ret
iret
cwtl
or
ret
push
sbb
adc
pop
jns
pop
aaa
inc
add
xchg
lea
sub
adc
fnstsw
fs
fidivs
out
call
sbb
pop
and
das
repnz
cmc
mov
inc
ret
ss
add
mov
xchg
jo
int3
adcb
adc
mov
dec
imul
push
add
or
mov
lahf
xchg
scas
cmpb
outsb
sub
pushf
jecxz
mov
push
pop
addr16
adcb
xorl
fmull
pop
test
push
push
out
lds
push
fcompl
ficomps
aad
lret
push
or
pop
add
dec
xchg
cmp
lret
test
das
imul
add
fs
push
sbb
lcall
pop
rcr
insl
push
mov
fst
push
xlat
std
mov
stos
inc
dec
cmp
out
int
inc
xchg
aad
xor
jmp
sbb
cltd
inc
cmp
in
lods
sbb
aad
pop
test
daa
sbb
mov
mov
cli
dec
xlat
ret
jmp
sub
data16
push
subb
addr16
sub
ds
lret
dec
fwait
in
add
and
sbb
dec
and
pop
or
imul
sbb
cmp
test
push
pop
into
test
push
xchg
adcl
mov
fldenv
bound
sub
sub
or
push
repz
mov
icebp
or
pop
add
cmc
jmp
mov
shl
insb
mov
in
test
aad
rorl
loopne
or
xchg
jno
stos
sti
in
add
cmp
shlb
adc
lock
xchg
xlat
mov
pop
in
mov
mov
pop
daa
je
inc
sbb
in
iret
out
push
out
orl
cwtl
cmp
and
inc
je
mov
negb
arpl
fdivr
mov
jo
mov
fld
stos
inc
insb
out
lock
xchg
pop
mov
cmp
inc
int
lret
push
cmc
mov
cmp
or
nop
insb
test
cmp
aas
add
les
stos
or
lret
mov
push
xchg
adc
fldl
pusha
mov
or
divb
sbb
sub
jns
pop
loop
xchg
in
js
stc
xchg
xor
cmp
aam
in
cltd
cmpsl
ljmp
aam
or
in
adc
ret
loop
addb
lret
push
cltd
sub
test
mov
jmp
nop
sbb
outsl
es
xor
mov
mov
mov
dec
dec
xchg
rcr
or
mov
mov
cmp
mov
add
push
pop
and
mov
mov
mov
jmp
sahf
add
sub
les
dec
jo
xchg
dec
cmc
imul
aaa
pop
jno
mov
or
int3
xorl
scas
pop
int3
or
sbb
cmp
aaa
pop
lea
iret
ds
add
ja
xor
and
mov
sti
push
sbb
pop
mov
pusha
iret
gs
icebp
cmp
mov
pop
test
test
ror
cs
roll
out
test
push
fistps
fbld
and
fcoms
mov
xchg
mov
xchg
loope
sub
cltd
xchg
lods
push
mov
push
int
fnstcw
fcoms
adc
add
je
test
jbe
scas
nopl
jns
add
mov
popf
fcmovbe
and
adc
daa
scas
cmc
subps
xchg
movb
sti
inc
xlat
xor
addr16
adc
mov
pop
pop
decl
pusha
and
mov
nop
push
ljmp
decl
push
jmp
jbe
popl
xchg
cmpb
aaa
fiaddl
js
inc
lret
stc
adc
cmp
rcrb
iret
mov
pavgw
das
pop
popa
xchg
cmp
stc
mov
outsl
clc
xorb
or
lret
mov
fsubrp
loop
loop
sbb
icebp
push
xchg
jl
es
pop
sahf
rol
mov
cmp
mov
fcoms
fmull
add
inc
out
pop
sbb
push
adc
pop
mov
lds
data16
or
xchg
enter
test
hlt
pop
ret
push
dec
nop
cmc
imul
icebp
mov
ror
sbb
xchg
into
pop
lret
in
mov
jb
sbb
and
mov
jb
popf
popf
mov
push
loope
sti
jns,pt
mov
sarb
xor
mov
in
out
nop
inc
out
xor
push
mov
mov
adc
mov
clc
jmp
lret
lahf
fwait
out
popa
cmc
jno
lret
xchg
es
dec
loope
popa
adc
clc
mov
xchg
sub
lods
mov
repz
sbb
cwtl
imul
sbb
hlt
ret
repnz
enter
cmp
adc
stos
out
icebp
jge
mov
xor
inc
aaa
jl
mov
or
stc
xor
mov
sbb
jo
add
mov
icebp
mov
cmp
enter
xor
sub
xchg
add
test
arpl
mov
test
xor
pmulhw
push
lods
gs
sarb
lock
xor
nop
inc
add
push
xchg
mov
or
mov
scas
jno
ror
cmp
xchg
xchg
xchg
jle
push
xchg
cmp
push
or
push
pop
shlb
lcall
lods
xchg
cmp
pop
add
jge
dec
scas
xchg
mov
and
in
mov
sub
pop
xor
and
call
je
jmp
xor
rcr
push
insl
mov
sub
xor
loop
mov
popf
adc
and
cltd
cmp
scas
or
sbb
pop
out
pop
sbb
fs
push
xor
insl
ljmp
ja
lock
test
lods
into
mov
xchg
mov
or
push
fdivl
pop
int3
je
inc
shrb
pop
mov
push
dec
mov
shl
jno
jns
adc
subl
arpl
mov
loope
pop
pop
loope
jp
adc
add
inc
cmp
mov
mov
ret
fisubl
push
mov
stc
aaa
enter
mov
aad
repnz
hlt
push
jp
mov
fwait
push
sbb
xor
xchg
jmp
ret
js
bound
pop
cltd
mov
mov
stos
stos
in
inc
fsub
je
rorb
hlt
jb
push
mov
popa
lds
cmpsb
addr16
cmp
scas
in
add
int3
push
in
pop
mov
jmp
sbb
or
pop
inc
pushf
lock
push
push
ss
xchg
push
mov
in
adc
sahf
cmp
ljmp
test
jno
mov
add
jg
stos
sbb
adc
cwtl
lods
xchg
aas
or
xchg
mov
mov
push
imul
or
test
cltd
inc
scas
mov
xchg
and
cmp
and
movsb
ret
fisubrl
lock
or
push
jbe
call
sub
filds
cltd
fimull
xchg
cmpsb
xchg
data16
int3
or
add
mov
aam
out
scas
dec
sub
repnz
or
idivl
push
sub
add
xor
outsb
mov
add
mov
pusha
sbb
dec
add
push
arpl
dec
xor
test
mov
test
cld
int
inc
aam
popa
mov
nop
push
inc
xchg
inc
js
adc
jg
mov
sub
js
fwait
sub
faddl
loope
notl
and
xor
es
push
pop
arpl
jle
lahf
lds
adc
xchg
or
xorl
test
fnstsw
sub
in
mov
adc
push
fs
mov
mov
mov
cltd
sarl
popf
xchg
sbb
xor
cmpsb
mov
mov
cltd
test
adc
movsb
and
push
jmp
push
push
sbb
lahf
fdivs
xor
testl
and
out
cmp
shl
cmpsb
xchg
xchg
aas
pop
dec
out
icebp
cwtl
popa
ret
shll
gs
nop
jl
inc
cli
sub
sub
test
push
dec
and
roll
xor
aaa
xchg
sub
test
pop
pop
mov
ficomps
cwtl
daa
hlt
and
sbb
push
lahf
sti
out
cmpsb
pop
les
cmp
std
push
mov
ja
outsl
scas
mov
sbb
xor
test
push
movsl
call
mov
sbb
and
ss
movsl
pop
or
rcrl
inc
cmp
add
shll
sbbb
fsqrt
aaa
imul
xchg
mov
je
dec
or
insb
mulb
test
sub
movsl
int3
jb
andb
sub
jg
loope
mov
dec
push
mov
je
add
mov
push
daa
fiaddl
out
dec
sar
ret
mul
into
push
push
loopne
sbb
adc
mov
dec
mov
xor
pop
mov
push
inc
daa
js
cmp
iret
outsb
xor
notb
bound
push
jle
mov
xchg
adc
bound
ficompl
sbb
xor
cmp
jge
fwait
xor
push
movsl
xor
sahf
dec
jb
mov
sub
mov
cmpsb
adc
push
call
jp
jg
sub
jle
loop
mov
pop
ficoms
jbe
in
add
fsubrp
fistpl
push
or
sti
out
jmp
dec
lds
mov
mov
popf
xchg
or
int
and
mov
scas
mov
pop
int3
mov
fiadds
in
cmp
mov
pushf
insb
push
popa
push
dec
mov
rcrb
lahf
jp
lds
lret
movsb
mov
lock
decl
dec
cld
in
loopne
xchg
je
das
sti
int
or
gs
jae
or
daa
or
cmpl
out
imul
cld
push
adc
inc
fnstsw
shll
ljmp
call
pusha
aam
fldenv
sti
subl
push
xchg
add
pop
inc
dec
repz
pop
mov
movsb
pop
and
mov
fnsave
call
push
mov
lret
jg
pop
daa
cmpsb
js
xchg
fsubrl
adc
aas
je
mov
adc
dec
and
push
lods
enter
daa
dec
sbb
mov
sub
fwait
cmpsl
jb
sbb
lods
sub
pop
ret
negb
imul
ret
std
jmp
aam
push
xorb
adc
cld
inc
mov
fcoms
dec
mov
call
sahf
nop
or
xor
in
outsb
adc
add
jno
xlat
ds
fstpl
mov
pop
push
push
mov
nop
push
out
int
sub
andb
fdivl
rolb
in
popa
scas
movb
and
cmp
or
mov
xor
ret
pop
sbb
push
popa
xchg
fcomps
scas
in
cwtl
dec
mov
xchg
out
lock
cwtl
cmp
xchg
sub
cmc
loop
inc
inc
dec
adc
jl
mov
inc
push
push
imul
loop
inc
lock
in
push
push
sbb
js
jbe
insb
mov
mov
dec
gs
sub
sub
jno
mov
fists
lret
push
in
pusha
js
addr16
sbb
js
mov
jbe
cmp
movsb
ja
push
xchg
jno
iret
cmp
mov
gs
test
sub
test
pop
fs
clc
push
cs
jmp
xor
push
inc
int3
pmulhw
cmpsb
mov
xlat
outsl
add
push
ljmp
arpl
xchg
cmp
pop
loope
shrb
add
push
insb
fstl
or
inc
jp
cwtl
mov
cmpl
sbb
cltd
mov
enter
xchg
mov
pop
popa
cwtl
insl
pop
repnz
jl
call
sbb
sbb
mov
dec
sub
cmpsb
xchg
lret
pushf
clc
inc
xor
mov
dec
test
lret
or
cltd
mov
or
mov
fwait
shlb
mov
jle,pt
mov
in
mov
lods
fidivrs
xor
stos
das
jbe
notb
pushf
lea
cmpsb
jo
sub
arpl
stc
jns
imul
mov
cmp
add
loop
test
popf
mov
out
lahf
lahf
mov
aas
test
push
push
mov
jg
mov
adc
pop
cli
dec
mov
outsl
jae
iret
jno
mov
mov
xchg
shrb
xchg
sub
push
adc
lret
fs
xchg
aam
les
pushf
sti
popa
fscale
sub
out
pop
ja
cmp
adc
mov
push
pop
mov
add
cs
or
rorl
mov
push
add
push
xor
or
mov
in
jo
add
nop
and
xchg
mov
jle
sbb
lock
out
adc
add
jae
clc
jns
fcmovbe
das
xchg
or
inc
outsl
insb
mov
jge
push
pop
jbe
push
loope
mov
testl
loope
dec
mov
sarb
cmp
daa
loop
jb
stos
push
sub
inc
pop
daa
js
push
cwtl
lock
adc
mov
in
fstps
and
inc
je
sbb
lods
and
dec
aas
loop
scas
push
fmuls
jecxz
xchg
lods
sub
push
mov
movsb
in
fcmovu
add
add
mov
aas
out
int3
dec
les
dec
push
mov
fs
mov
jbe
cmp
ss
push
mov
mov
mov
pop
dec
stos
xchg
lock
out
mov
ret
fldt
js
add
inc
mov
into
mov
push
movsb
sti
add
or
fistps
ret
push
xchg
leave
or
add
push
nop
insl
adc
mov
out
in
jmp
xor
lret
aam
sti
sbb
pop
sti
mov
mov
fs
sub
mov
jns
xchg
jp
ret
in
push
ds
test
ud0
push
cwtl
push
jnp
jp
cmpsb
enter
pushf
push
sbbl
shrb
or
mov
out
test
jbe
push
cmpsl
nop
xor
out
loope
pop
mov
fiadds
ret
xchg
mov
mov
xor
cmpsb
sub
xchg
sub
mov
cltd
scas
out
and
and
neg
sti
xchg
in
cmpsl
adc
xchg
jne
shr
mov
mov
hlt
lret
je
imul
aaa
xor
movsb
xor
scas
repnz
fdivrl
ficoms
cmpsb
jmp
pop
inc
ficoms
daa
cmp
push
scas
arpl
add
daa
sub
mov
push
xchg
clc
scas
pop
pop
push
mov
xchg
and
mov
orl
das
jle
sub
loope
cmp
pop
lods
lock
push
rclb
push
lock
mov
sbb
mov
cmc
loop
incb
mov
mov
adc
mov
mov
jnp
ret
out
mov
mov
inc
mov
dec
pop
lds
aam
add
movsb
pop
pop
push
rolb
add
pop
leave
lock
xchg
cmp
xor
pop
jp
test
sub
mov
movsb
leave
mov
mov
int
jnp
cmp
fcmovne
data16
pusha
iret
sub
fcompl
push
xchg
inc
mov
or
inc
dec
inc
xacquire
mov
inc
adc
lds
pop
pushf
xchg
jae
mov
xchg
insb
ret
shlb
fnsave
insl
testl
or
rolb
mov
aaa
adc
push
add
lods
cmp
pushl
test
cmp
inc
test
jae
jb
cmp
mov
xchg
jne
mov
and
and
std
xchg
out
pop
lret
jl
lds
push
push
fidivs
xor
push
mov
je
aaa
cmp
or
cmp
pop
scas
inc
push
or
scas
adc
test
push
pop
push
inc
sti
iret
rclb
jg
push
lds
cpuid
mov
mov
loope
jae
xchg
add
adc
mov
xchg
push
scas
jb
jmp
out
mov
inc
insb
repnz
sub
testl
movsl
jbe
add
and
fs
dec
dec
jl
push
call
xchg
and
cmp
lret
cmp
stc
add
push
sbb
test
lock
lock
sub
dec
mov
jae
or
and
jbe
in
inc
rorl
mulb
inc
sahf
cmc
and
xchg
bound
outsb
mov
and
and
lahf
sub
inc
xchg
adc
jecxz
fstps
scas
sbb
inc
out
jl
xor
mov
mov
jecxz
nop
test
aam
clc
fnstenv
je
loope
fcompl
cmp
movsl
adc
sarl
adc
out
lock
ja
sub
test
adc
cmp
lds
out
nop
mov
pop
lds
cmp
mov
xorb
dec
lret
and
ds
ja
inc
movsb
fnstsw
push
js
lcall
andl
push
imul
pop
xchg
outsb
mov
ljmp
rcll
inc
cltd
std
rcr
xor
jbe
movsl
faddl
jge
sub
addr16
mov
daa
fidivl
push
pop
pop
popa
push
adc
mov
insl
and
fbstp
sbb
jl
adc
xchg
add
push
xchg
loope
push
or
inc
push
adc
mov
inc
je
mov
jo
sahf
push
jle
lret
es
adc
adc
pop
movsb
add
pop
cmp
lock
push
sub
clc
xor
imull
data16
jle
in
dec
jo
pushf
or
cmp
int
adc
sahf
pop
popf
sarb
mov
lds
push
rcrb
rol
sti
xchg
sbb
mov
cli
mov
std
mov
xchg
das
or
sub
inc
add
dec
push
cli
pop
cmpsb
addr16
push
lods
inc
mov
push
ljmp
mov
cmp
test
push
fstps
ret
mov
pop
push
je
add
addr16
andb
xchg
aas
imul
js
test
jno
shll
or
mov
pop
and
jecxz
inc
jne
push
mov
sahf
and
mov
sahf
xchg
sahf
movsl
in
mov
das
xor
push
aas
loopne
adc
sbb
mov
push
out
fistpl
xor
out
xor
pop
inc
loope
lock
mov
and
mov
js
mov
cwtl
xlat
mov
xor
mov
jae
pop
push
in
test
jmp
jle
mov
cmc
xchg
mov
jge
sub
cmpsb
ss
stc
push
xlat
pop
testw
inc
sbb
or
or
jmp
mov
pop
enter
pop
mov
dec
andl
pop
push
lock
test
ljmp
sub
mov
mov
stos
xor
fwait
ss
mov
inc
rorb
dec
imul
enter
dec
push
inc
mov
loopne
ds
cmp
xor
push
rclb
das
xchg
cld
adc
xchg
add
in
mov
dec
loope
add
inc
push
inc
push
adc
adc
out
sahf
adc
mov
fs
adc
sub
xchg
mov
xchg
movb
push
gs
add
mov
mov
push
clc
dec
cmpsb
mov
mov
lahf
sbb
notl
mov
js
push
xchg
iret
out
dec
and
ficoms
mov
xor
mov
lock
or
movb
nop
shr
aaa
lret
sbb
in
lds
push
mov
imul
mov
sbb
mov
rcrb
mov
jns
in
mov
lret
stos
gs
inc
jge
cld
out
sub
push
popa
inc
lahf
in
xorl
das
or
push
lret
mov
pop
sbb
cmpsb
mov
pop
int
dec
jl
mov
leave
lcall
repnz
mov
pop
dec
and
or
test
test
dec
push
mov
loop
rcrb
mov
push
sub
mov
sub
inc
shll
leave
mov
sub
repnz
mov
mov
lcall
stos
push
repnz
daa
ljmp
fs
lds
les
inc
popf
and
iret
stc
aam
push
jae
das
repnz
and
xchg
sbb
or
lds
mov
leave
loope
cmp
scas
jge
clc
fiaddl
push
add
nop
adc
add
mov
pop
add
sbb
cmp
adc
das
cmp
adc
fisubrs
jns
shlb
dec
mov
inc
add
sub
push
adc
mov
jle
xchg
dec
loope
jns
sbb
arpl
xlat
inc
bnd
jp
loope
gs
ds
inc
and
add
fwait
addl
out
xor
imul
adc
mov
lods
sbb
jo
test
jmp
imul
add
lcall
mov
fdiv
push
jbe
inc
mov
inc
xor
cmp
jno
loop
shll
push
pop
gs
dec
inc
push
enter
sti
aaa
adc
arpl
out
pop
mov
mov
dec
sbb
adcl
xor
adc
push
in
ficomps
fcmovnu
je
jb
mov
lea
das
loopne
mov
jmp
mov
cmp
movsb
pop
sbbb
std
add
pop
jbe
mov
lods
mov
or
mov
xchg
mov
in
jp
pop
int
xchg
xchg
push
jmp
aaa
lods
imul
dec
mov
xchg
xchg
hlt
add
daa
jno
lret
in
sub
mov
mov
dec
in
xchg
push
pop
cmp
into
add
ret
popf
sub
add
sti
cmpsl
notb
mov
mov
xor
pusha
jg
dec
ror
fcoms
push
les
dec
mov
cmp
mov
jecxz
xorl
and
test
jae
int
mov
jb
jp
sbb
dec
or
mov
cmp
stos
xor
mov
mov
test
lds
or
ds
jmp
shlw
into
push
sarl
fidivrs
xor
les
scas
fcmovb
mov
notl
adc
or
scas
add
ret
lea
pushf
pop
das
sbb
mov
jmp
jg
add
inc
addb
mov
inc
in
mov
int
mov
pushf
inc
fwait
into
jg
pop
mov
mov
mov
dec
sub
mov
sbb
jge
lcall
leave
ja
dec
insl
pop
jns
dec
mov
and
lcall
and
lock
rorl
or
lcall
jne
jns
fsts
test
add
hlt
inc
enter
jbe
popa
cmp
leave
arpl
lods
cmc
arpl
or
iret
xor
lret
push
sub
adc
scas
insl
sub
xchg
xchg
sahf
aad
adc
bound
push
cmp
outsb
arpl
jmp
and
mov
insl
punpckhbw
xchg
out
cli
out
fprem
cmp
push
mov
shll
xchg
pop
fmuls
cmp
push
pop
out
xchg
inc
mov
mov
rcl
sti
test
sbb
mov
movsl
and
inc
push
shll
hlt
or
xchg
push
xor
xchg
and
push
mov
inc
sub
ret
push
jne
addr16
mov
inc
hlt
pop
jno
call
sub
loope
cmc
jns
mov
mov
mov
ja
push
fcom
scas
insl
add
and
inc
sbb
push
insb
ss
push
cltd
mov
mov
les
inc
and
inc
xchg
data16
shlb
and
outsb
movsl
and
aad
subb
dec
cmpb
adc
jp
push
adc
mov
sub
jge
aad
push
cwtl
mov
std
dec
call
add
scas
push
push
push
sbb
xor
es
test
insl
loop
jnp
shll
pop
je
cs
out
out
sbb
cmpl
sbbl
pop
lea
loop
aam
lret
addr16
icebp
scas
mov
push
xchg
test
es
clc
in
into
cmpsb
hlt
dec
mov
pushf
xchg
mov
mov
aaa
mov
js
sub
add
in
pushf
push
cmp
cmpb
mov
repnz
mov
ja
push
dec
pop
lods
mov
in
cli
inc
xor
daa
jge
bound
shr
je
nop
shrl
pop
fs
pop
dec
xor
mov
sub
loop
sbb
movsl
stc
mov
jl
or
mov
leave
cmp
inc
xor
hlt
pusha
scas
and
mov
sub
mov
push
or
stos
iret
lds
cmp
push
mov
add
fstps
mov
cmp
sbb
lret
lret
lea
fimull
dec
in
mov
into
out
lock
shrb
sti
pop
lea
lcall
loopne
lods
popa
lds
lcall
add
roll
push
pop
push
bound
arpl
sub
fcomi
and
aad
icebp
jl
mov
cwtl
jg
repnz
pop
mov
adc
rcrl
jecxz
cltd
push
mov
push
mov
inc
bound
scas
dec
push
mov
repz
mov
xchg
cmp
pusha
pop
lcall
jmp
and
pop
out
pop
scas
dec
clc
push
in
xor
scas
xchg
sahf
popa
aas
int
and
cmp
and
lret
mov
test
jno
push
hlt
mov
gs
dec
push
push
mov
clc
xor
ja
jge
push
iret
clc
push
fidivrl
or
loopne
inc
popa
inc
xor
jne
js
xchg
mov
pusha
lcall
aad
nop
adc
iret
xchg
push
mov
enter
data16
xor
jecxz
clc
pop
jg
dec
out
nop
and
shll
idivl
iret
outsl
xchg
mov
adc
pop
mov
mov
insb
data16
pop
cwtl
fildl
adc
sbb
adc
and
mov
adc
push
jne
aad
jne
repz
mov
fstl
addb
pop
daa
js
dec
mov
adc
dec
cmp
or
pop
dec
iret
lret
mov
aas
shll
mov
pushf
lods
jg
in
xchg
fs
arpl
imul
es
jp
xor
lock
in
test
nop
xchg
cmpb
push
adc
adc
mov
ret
outsb
jo
xchg
dec
cmc
cmc
popa
xchg
fisubs
in
dec
popf
cmp
aas
push
push
pop
adc
sub
shlb
in
xchg
repz
bnd
pop
add
cmp
push
aad
push
or
outsl
cmc
pushf
pop
cmp
js
idiv
fs
push
cltd
cmp
outsl
out
lret
in
shrl
psllq
cmp
add
jbe
cld
fdivrl
gs
negl
ss
iret
test
jmp
pop
dec
inc
dec
subb
insl
jle
orb
movsl
call
leave
inc
in
ljmp
imul
push
ja
js
sbb
or
enter
push
sbbb
popf
jo
ja
test
lret
dec
xchg
adc
stos
cmp
mov
pop
mov
xchg
pop
nop
push
inc
lahf
pop
js
in
xchg
sub
xlat
pop
addb
dec
mov
scas
stos
cmpsb
imulb
cmp
lock
popa
ja
and
lahf
lret
js
mov
jmp
mov
aad
inc
int
mull
popa
in
cmpsl
mov
outsl
push
push
loope
xor
dec
xchg
jbe
dec
push
adc
jno
xor
mov
subb
jne
fs
rorb
stos
jl
mov
pop
cmp
stos
adc
hlt
test
sub
pop
enter
idivl
xchg
xchg
xchg
icebp
loop
adc
outsb
fldenv
mov
lock
cli
call
mov
js
inc
inc
xor
nop
dec
mov
sbb
sahf
xor
mov
loope
xor
add
sub
cmp
xlat
mov
mov
ss
dec
daa
and
stos
pop
int
cs
cmp
mov
or
popf
pop
xor
jno
jo
iret
stos
xchg
cmp
pusha
cmp
sbb
cmp
scas
mov
loopne
adc
pop
gs
xchg
mov
inc
in
in
aas
dec
std
lea
decl
lock
ror
daa
pop
dec
aas
cs
repz
imul
sbb
aaa
and
arpl
pop
sahf
loope
push
adc
xchg
or
fsts
push
mov
cmp
cwtl
mov
movl
xchg
je
inc
jmp
jle
pop
es
sbb
sub
sahf
insl
mov
je
inc
mov
or
dec
push
mov
outsl
sbb
pushf
shll
jle
inc
loope
push
jne
ret
outsl
lea
mov
insb
cmp
mov
imul
sub
jno
jg
pop
rclb
mov
pop
push
sub
xchg
jnp
cmp
jecxz
mov
ja
push
ds
or
inc
mov
adc
shll
mov
sbb
negb
aaa
xchg
ja
xchg
dec
mov
stc
ja
add
mov
xor
pop
jne
mov
addb
adcb
push
test
add
pop
xor
iret
mov
mov
cld
pop
inc
mov
dec
jg
inc
mov
and
mov
shrl
ss
sub
dec
xchg
out
mov
rcr
inc
xor
push
inc
leave
insl
pop
jge
push
in
mul
pushf
popf
xor
sbb
push
gs
ret
pop
fstps
mov
xchg
fchs
test
mov
loop
inc
xor
adcb
orb
pop
add
xchg
mov
insb
and
xor
fcoml
mov
out
movsb
jo
or
mov
mov
xchg
repnz
sub
rorb
dec
adc
mov
pop
ret
test
mov
jae
sarw
inc
pushl
dec
outsb
xor
push
pop
inc
and
xlat
je
cltd
mov
add
mov
jp
mov
push
and
xorb
jbe
and
sub
mov
fldcw
ret
ljmp
xchg
add
pop
dec
and
sahf
mov
repz
sbb
xchg
popa
mov
inc
xchg
fcoml
ljmp
notb
jbe
fistps
inc
ret
in
nop
xchg
fsubs
inc
sub
icebp
cmc
in
dec
insb
mov
es
lcall
sbb
sti
inc
inc
out
add
sub
adc
sbb
mov
xchg
adc
dec
out
pop
repnz
dec
jne
data16
adc
scas
inc
cmc
xor
mov
push
mov
mov
or
lcall
push
mov
dec
add
adc
fidivrl
popa
lret
repz
or
pop
cmp
or
aam
add
push
imull
pop
or
add
mov
mov
mov
xor
push
std
lahf
mov
addl
shl
outsb
dec
mov
scas
fmulp
rcrb
fdivr
das
loop
inc
in
arpl
insb
add
stc
out
jg
mov
jns
cmp
sbb
cmp
imul
aad
mov
mov
cmpsl
in
add
iret
les
jge
mov
lods
cmp
ljmp
out
ss
and
push
sbb
or
mov
dec
stc
sbb
and
out
pop
movsb
cmpsb
xlat
ret
or
add
mov
push
daa
test
push
xor
xorps
std
and
outsb
xchg
inc
and
sub
dec
ror
shrl
roll
out
dec
cwtl
imul
mov
add
loope
mov
or
call
mov
pop
outsb
cwtl
mov
ficoml
popf
aad
mov
push
arpl
ret
mov
xor
jle
dec
mov
xor
or
cld
arpl
sti
into
push
lods
pop
jnp
jb
pushf
loope
in
fcom
fwait
std
test
mov
jnp
xchg
movsl
shlb
enter
inc
cmc
xor
cmc
fxch
test
mov
xor
mov
mov
or
jb
push
mov
and
dec
ret
mov
dec
add
test
es
jo
add
or
lret
fimuls
gs
fwait
out
lahf
pop
add
push
movsb
adcl
push
icebp
sub
mov
test
mov
mulb
adc
push
popa
push
push
imul
mov
ret
popf
cmpsb
pop
push
test
hlt
dec
dec
xchg
jnp
insl
push
testb
in
insb
adc
testb
dec
dec
sbb
lods
loope
jecxz
int3
mov
int3
int
cmp
lahf
cs
xchg
out
in
mov
lahf
pop
hlt
fstpl
aad
rol
jb
pop
dec
sbb
std
fcomps
mov
addl
mov
cmpsb
andl
nop
jmp
and
sub
inc
and
dec
out
push
dec
scas
jecxz
rorl
loopne
mov
adc
outsl
pop
pop
and
mov
jmp
popa
adc
cld
ljmp
je
sbb
or
mov
sub
lods
cmp
rcrl
pop
rcrb
pop
xchg
cli
cmpsb
arpl
inc
cwtl
fstpl
rorb
in
clc
and
iret
lcall
es
or
out
mov
popf
or
or
cmp
mov
adc
add
mov
jno
mov
pop
notb
aam
xchg
int3
inc
cmp
jo
mov
inc
ror
std
bnd
inc
xchg
xor
fistl
mov
xchg
addr16
pushw
adc
xchg
scas
mov
nop
mov
cld
clc
inc
xor
movsl
lret
jmp
in
mov
in
andl
sub
jno
cmp
test
sub
std
sarb
mov
xchg
mov
dec
out
fnstcw
repnz
ja
movsb
lcall
or
mov
lahf
inc
fyl2xp1
in
dec
cli
pushl
sub
repz
mov
or
mov
mov
jle
xor
adc
push
add
mov
xchg
gs
xor
daa
jp
repz
mov
mov
fidivrl
outsb
or
inc
pop
add
cli
push
and
or
bound
jg
xchg
sub
enter
pop
shrl
pop
sub
lea
cwtl
bswap
test
cmpsb
jge
mov
jno
mov
jae
mov
mov
clc
dec
leave
cwtl
sub
add
mov
pusha
stos
icebp
lret
mov
imul
push
loopne
xchg
and
push
push
sbb
shr
dec
in
aas
addr16
xchg
test
lock
sub
xchg
jo
movsb
into
push
repz
movsb
lret
fdivrl
cmpsl
inc
leave
pop
add
push
fdivp
pop
lock
pop
dec
movsl
xchg
pop
cltd
mov
in
bound
arpl
mov
fs
jg
es
je
movsb
les
cmc
push
mov
xchg
sbb
push
xchg
push
mov
sbb
pop
cmp
outsb
outsl
out
and
lret
cmc
push
adc
jne
push
add
dec
dec
cmp
add
out
cmp
xor
sbb
ljmp
arpl
movsl
adcb
es
pop
mov
lds
ljmp
inc
xchg
in
lea
mov
sub
push
sbb
push
adc
xor
push
cmp
add
xor
inc
add
mov
push
cmp
jge,pn
scas
or
xchg
lock
jecxz
je
pushf
in
jne
call
fsubrp
cmc
cs
jne
mov
xchg
mov
lret
sub
inc
dec
aad
loop
sub
test
inc
adc
aaa
cmpb
cmp
cmc
not
sub
cmc
mov
sbb
jbe
pushf
out
pop
jns
xchg
mov
loope
icebp
or
orl
into
aas
pop
pop
es
mov
test
inc
loopne
cwtl
lods
lods
and
push
enter
shlb
stos
xor
arpl
shrb
sub
repnz
dec
insb
loope
out
dec
mov
sti
dec
xchg
mov
mov
cmp
cmc
sbb
aam
sub
push
std
in
in
xchg
repnz
sbb
inc
das
add
push
mov
dec
je
pushl
repnz
insl
or
pop
push
jo
lahf
lea
cmp
or
aad
adc
push
adc
and
xor
pop
mov
jp
loopne
jne
test
mov
push
xor
sub
daa
fdivr
jb
stos
inc
fmuls
in
cwtl
es
cmpsl
xchg
mov
add
mov
stc
xchg
mov
bound
ljmp
bswap
loop
fimuls
cltd
out
ljmp
pop
or
ljmp
and
bound
pusha
sti
arpl
adc
clc
sub
mov
out
test
fcomp
lahf
or
loopne
imull
dec
lret
add
iret
adc
pop
negb
popa
cmc
jg
loopne
daa
addl
movsb
cmpsl
cmpsl
pop
repnz
xor
je
ljmp
jmp
sub
sub
mov
out
bound
xchg
lret
imull
mov
add
movsb
insl
rcll
ret
sub
jecxz
pop
push
iret
dec
cld
xchg
mov
xlat
mov
insl
daa
dec
xchg
ja
sub
es
addr16
mov
jmp
dec
daa
pop
std
in
hlt
push
inc
in
rcrb
adc
inc
and
pop
aad
insb
mov
jae
push
or
js
loope
adc
cmp
rolb
cmp
je
mov
mov
cmp
add
aas
inc
pop
ds
xchg
pusha
das
sbb
data16
lods
mov
into
push
sbb
arpl
jg
add
movsl
mov
rorb
mov
lds
mov
mov
push
lret
fadds
xor
mov
repz
fdivl
int
aad
adc
mov
pop
pusha
add
sub
dec
ss
mov
in
aad
mov
sbbb
cmp
push
xchg
stos
adcl
stc
inc
or
sbb
movsl
adc
hlt
nop
adc
mov
aam
daa
js
popa
sbb
popa
adc
aaa
ret
gs
jnp
je
insb
push
and
jg
in
outsl
mov
mov
rorb
cmp
ret
sub
ret
sbb
popa
mov
sti
or
int3
mov
out
fsub
mov
pop
xchg
cmp
xchg
loope
mov
mov
test
push
lods
fisttpl
sub
mov
mov
mov
or
adc
jg
ja
and
aam
or
ret
out
repz
pop
mov
add
test
jge
mov
das
aaa
mov
add
mov
ss
cmpsl
es
push
sbb
push
sbb
pop
mov
mov
inc
cmp
shrb
insl
les
jp
xchg
aam
dec
xor
mov
lret
les
test
add
repz
mov
mov
mov
jbe
adc
push
testb
aad
xchg
cltd
sub
mov
int3
sar
mov
lods
push
and
outsb
je
lods
mov
sbb
sti
lock
jp
jg
cmp
test
mov
lret
in
dec
sbb
shll
cmpsl
pop
pusha
xchg
jecxz
mov
xorb
aam
cltd
sbb
sbb
pop
mov
iret
sti
popa
imul
mov
sbb
js
push
gs
fsubr
arpl
xchg
mov
mov
mov
jbe
xor
dec
cld
insb
test
dec
adc
and
xchg
mov
xorb
jo
jg
and
loope
push
out
jno
push
xor
movzbl
xchg
lods
sti
mov
jnp
stc
push
xchg
sub
bound
out
xchg
sarb
dec
pop
push
into
popf
xchg
shlb
cmp
mov
fsubrl
cmpsl
test
xor
aam
scas
jecxz
insb
pusha
cltd
mov
inc
mov
dec
jnp
mov
std
jbe
test
add
mov
cmp
pop
adc
xchg
gs
test
subl
insb
mov
add
test
in
pop
pop
sub
movsl
mov
ds
gs
pop
sub
je
cmc
outsl
in
pop
xorl
mov
mov
inc
cmp
jbe
aam
ret
scas
in
adcl
xchg
mov
lret
mov
sbb
mov
add
cmp
mov
fmuls
sbb
js
xchg
mov
dec
xchg
clc
and
push
mov
ret
add
xchg
sbb
icebp
mov
push
fdivrs
sahf
pop
push
push
xorl
shrl
inc
int3
mov
pop
mull
icebp
out
pop
cld
or
mov
std
and
out
mov
fisubs
jno
adc
push
mov
and
dec
bound
push
push
out
dec
stos
adcb
cmp
mov
out
testb
shll
jno
xlat
jmp
mov
mov
dec
imul
out
add
shrb
and
mov
rorl
fwait
and
pop
in
pop
movsb
add
outsl
jle
xchg
mov
dec
mov
das
sahf
and
in
cmp
adc
sbb
clc
or
push
stc
loope
out
push
fsubrl
and
mov
xor
mov
cmpsb
ja
test
jmp
cltd
ljmp
xlat
js
mov
or
bound
insl
hlt
es
pop
or
imulb
movsb
shrl
ds
xchg
inc
popf
out
dec
bound
test
push
inc
inc
and
repz
xlat
dec
mov
andb
cmp
pop
add
xchg
xor
in
movsb
sub
fwait
cmc
add
fadds
je
inc
stc
jecxz
sti
cltd
jb
ds
rolb
pusha
ficomps
cli
pop
insb
imul
insl
testb
adc
fadds
mov
or
mov
mov
aad
push
js
insb
repz
mov
push
pop
push
fldcw
or
inc
mov
dec
mov
repz
vpmuludq
mov
mov
pushf
stos
and
shrl
stc
sbb
jmp
mov
fcompl
pop
mov
pop
out
scas
xor
in
pop
cmc
push
mov
pop
push
es
adcb
xchg
xor
mov
push
enter
fldl
push
ljmp
push
xchg
sub
mov
stos
xlat
in
int3
adc
shlb
adc
jl
or
jle
jns
sub
pop
mov
push
jmp
lea
cmpsl
push
xor
jnp
xchg
jae
push
or
sub
adc
inc
ljmp
gs
mov
pop
call
xchg
add
adc
push
mov
dec
xchg
inc
cmp
in
adc
adc
sbb
ja
jae
pop
xchg
xor
lods
flds
cmp
and
add
xor
mov
and
sbb
mov
test
add
add
push
xlat
mov
sahf
test
xor
enter
ret
mov
mov
and
sbb
cmp
cmp
push
repnz
dec
imul
sub
jae
loopne
mov
sbb
mov
outsb
push
push
add
das
xor
add
hlt
jl
js
inc
pop
cmp
ljmp
mov
push
arpl
or
xchg
add
shl
inc
fnstsw
mov
bound
scas
sub
adc
pop
enter
or
cwtl
das
adc
mov
in
sbb
shr
outsl
and
mov
andl
jg
push
nop
lea
xchg
aad
imul
repnz
cli
push
pop
aam
hlt
jbe
lock
push
and
jmp
cli
or
push
jle
add
dec
and
mov
stos
sbb
mov
mov
adc
pop
jae
cwtl
imul
hlt
js
xchg
cmp
in
repz
mulb
test
add
test
mov
add
push
or
into
mov
pop
xchg
add
fsubs
jns
cli
nop
mov
fcmovne
xchg
lret
adc
xchg
lock
mov
and
inc
xchg
stc
xor
loope
aad
xchg
jecxz
je
mov
mov
mov
aas
sahf
movl
xchg
cmpsl
adc
jnp
push
mov
pop
cli
push
xchg
popa
add
push
movsl
or
and
jl
pusha
mov
add
pop
add
rcl
divb
push
sub
nop
push
mov
cli
add
jg
lods
xchg
jmp
test
or
jl
sbb
icebp
pop
push
push
shll
jl
mov
in
sbb
scas
fdivp
mov
sub
push
aas
test
dec
xchg
dec
xchg
sbb
out
pushf
fcmovne
mov
pusha
inc
or
movsb
or
lea
pop
jmp
push
sbb
cmp
or
mov
cmp
push
push
pop
loopne
bound
popa
xchg
iret
lods
cli
sarl
pop
mov
push
add
sbb
loop
mov
jge
cld
push
dec
adc
sahf
cmpsl
mov
adc
sbb
mov
or
jge
xor
pop
fdivrs
jmp
mov
test
mov
jne
mov
sub
in
mov
mov
addr16
test
jmp
es
in
xchg
lea
nop
shlb
xchg
fwait
adc
bound
aad
push
xchg
add
adc
xchg
cld
xchg
add
jecxz
cld
fistl
mov
pop
add
jno
pop
dec
popf
pop
inc
cld
inc
pop
test
pushf
jo
mov
mov
shll
sarl
xor
loope
add
ud2
xchg
adc
add
cmc
in
and
pop
jecxz
aam
hlt
in
sbb
mov
jnp
enter
out
pop
xchg
sbb
sub
mov
add
cmp
std
in
mov
add
mov
je
js
cmpsl
push
add
in
sub
dec
mov
cmpsl
xchg
push
es
lock
or
jmp
into
add
inc
jl
fcoms
fistl
sbb
bound
push
jle
xchg
mov
aaa
decb
iret
xor
fmuls
scas
or
jns
jmp
pusha
bound
jl
push
mov
or
xor
adc
sub
loopne
popa
fimuls
lods
mov
sti
shlb
popa
popa
and
inc
gs
mov
and
jmp
push
lods
push
mov
or
ss
popa
mov
or
test
jae
jp
pop
sti
jns
cmp
or
test
jae
lcall
and
sub
add
hlt
in
mov
lods
jne
cmp
addr16
sbb
or
mov
pusha
adc
cli
jecxz
ljmp
or
lret
sti
mov
or
in
mul
shr
dec
xchg
mov
cmc
push
xchg
fcomps
pop
jbe
out
mov
es
in
and
mov
add
push
adc
mov
push
addr16
bound
clc
sub
in
jno
je
dec
xchg
loopne
mov
push
into
inc
xor
jp
push
bound
adc
adc
les
sub
jb
das
adc
mov
inc
xor
clc
jmp
fidivs
cmpl
jg
mov
fidivs
inc
in
sbb
lds
sbb
dec
lock
int
std
push
mov
loop
xor
push
cmp
faddp
cmp
inc
sub
add
movsb
mov
loop
pop
lret
cmc
loopne
shll
mov
lods
das
mov
loope
xchg
out
mov
stos
repz
adc
xchg
mov
in
fwait
sbb
xchg
inc
xchg
sbb
int
xlat
mov
inc
push
andl
adc
xor
mov
jmp
xlat
ror
cltd
cmpsl
adc
add
xchg
xchg
ja
int
out
in
and
push
jg
lock
mov
mov
push
out
push
jl
shrl
sub
inc
stos
push
scas
inc
push
jg
jmp
dec
cwtl
pop
test
mov
cltd
ss
jg
add
xlat
addr16
mov
mov
jg
movsb
push
mov
je
cld
cwtl
daa
inc
dec
nop
pop
mov
fistl
sbb
or
push
mov
adc
pushf
cmp
jne
mov
xchg
pop
std
daa
xchg
cmpsb
mov
mov
xor
and
mov
xor
inc
xor
movsl
xor
in
push
ja
stos
mov
imul
pushf
ret
inc
xor
mov
xor
cmp
aam
mov
mov
xchg
das
mov
pop
jnp
pop
lret
sbb
test
gs
cmp
xchg
push
fcmovnbe
mov
pop
dec
pop
aam
rcll
ja
js
dec
notb
xor
jb
out
jo
lods
sbb
pop
lcall
fbld
icebp
in
outsl
ret
cmp
std
aas
sbb
dec
fistl
mov
popf
cmp
push
fisubrl
jae
sub
scas
movsl
fisttps
scas
xchg
mov
pop
in
scas
int
stc
cmpsb
mov
cmp
std
cs
or
aad
outsl
or
jl
shrb
addr16
std
mov
pop
or
push
imull
jae
dec
inc
dec
lret
addb
insb
pusha
scas
testb
dec
aaa
xlat
jb
adc
sbb
cmpsl
jl
sbb
mov
cmpl
clc
stos
add
push
xchg
lds
dec
mov
dec
insl
pop
mov
cmp
jmp
push
test
inc
sub
out
out
ds
cmp
and
xchg
xchg
sub
mov
cmp
incb
data16
lret
out
jo
rclb
ljmp
mov
sub
loope
out
xchg
push
sub
out
mov
dec
inc
mov
jmp
icebp
or
jno
in
mov
pop
push
nop
jmp
stc
cwtl
sub
imul
pop
dec
mov
push
aad
pop
xor
push
out
or
mov
sub
add
lcall
dec
pop
fisubs
push
mov
and
or
adc
sub
daa
push
sub
pop
push
in
inc
sbb
sub
or
ret
shll
inc
pop
sbb
rcrb
jmp
loop
push
mov
inc
scas
adc
sub
idiv
push
pusha
popf
and
mov
push
jp
jae
fiadds
notb
cmp
xchg
inc
aaa
stos
enter
rcrb
sahf
repnz
ficoms
mov
jne
and
xchg
lods
push
gs
add
gs
test
dec
loopne
out
adc
jbe
ja
out
cwtl
lcall
sbb
popf
je
add
andl
mov
add
pushf
mov
out
mov
repz
inc
cmp
ret
test
inc
cmp
out
jnp
add
hlt
lds
fidivl
lods
cli
or
aas
ds
stc
mov
stc
adc
add
xor
test
out
lahf
jg
aam
cmp
hlt
add
push
mov
jmp
pop
or
jg
test
test
or
push
in
mov
test
or
mov
inc
push
xor
fcompl
dec
jle
add
in
push
movsb
pop
pop
mov
adc
cld
ss
dec
jne
cmpsl
cwtl
dec
dec
push
lods
fs
out
add
pushf
daa
sbb
fsubrl
cmp
xchg
xlat
je
je
call
test
xchg
rcrb
dec
sbb
cmp
test
sub
xchg
sub
sti
or
cld
stc
imulb
push
out
jno
pop
sub
sbb
inc
mov
adc
cs
cmpsb
cs
mov
xor
adc
inc
adc
adc
mov
mov
sbb
push
lahf
adc
add
mov
ljmp
xor
in
je
xchg
ret
hlt
imul
push
cmpsb
lea
lods
and
cli
jge
test
xchg
mov
ret
jns
inc
mov
mov
cmp
in
and
mov
or
xor
jmp
and
in
sub
enter
and
xor
add
pushf
sarl
iretw
arpl
addr16
shl
sbb
sbb
mov
outsb
pop
mov
cmpsb
mov
fidivl
pop
mov
mov
popf
loope
outsl
xchg
fcmovnu
in
xchg
pop
call
xchg
push
outsl
ljmp
dec
add
cltd
dec
push
outsb
jg
sbb
inc
outsl
cli
dec
scas
cmp
xor
inc
stos
scas
adc
push
xchg
popa
dec
cmpl
sub
pop
enter
or
cs
pushf
xlat
popf
sbbl
push
out
mov
and
outsl
cmc
test
out
xchg
and
repz
mov
hlt
mov
icebp
sahf
or
mov
and
add
pop
mov
icebp
xchg
mov
jae
daa
pop
daa
and
push
loopne
adc
jmp
gs
test
dec
push
bound
or
fstpt
jnp
lods
sub
aas
mov
xor
repz
dec
int
adc
jg
xor
mov
push
lods
push
jg
rorl
pop
inc
mov
bound
cmc
out
ljmp
repz
or
push
pop
push
cmp
add
sbb
mov
mov
mov
test
sbb
or
jns
in
xchg
inc
int3
dec
and
fildll
lods
and
mov
xchg
ret
xor
in
aas
or
dec
and
mov
cmp
jo
in
sub
ret
mov
xchg
push
imul
dec
add
popa
dec
push
fimuls
inc
std
mov
jo
xor
lea
add
adc
aad
jnp
mov
jg
xchg
xchg
mov
cmpsb
dec
push
push
bound
pushf
mov
bound
mov
add
pop
jg
sar
mov
xchg
int3
or
jno
push
mov
or
fistps
inc
push
pop
pop
mov
xor
jne
adc
out
out
mov
adcb
push
cwtl
into
inc
outsb
addl
ds
push
add
movsl
jnp
std
inc
pop
ss
repz
dec
xchg
or
inc
adc
xor
scas
aas
mov
or
or
inc
les
push
out
cwtl
jns
idivl
lods
xchg
imul
jmp
lahf
adc
cltd
into
adc
xchg
pushf
sbb
cmovae
enter
enter
das
inc
mov
pop
and
or
movsl
jo
cmpsb
imul
stos
stos
mov
mov
cwtd
imul
lea
dec
popf
xchg
jmp
rcrb
xor
fdivs
inc
jge
inc
outsl
int
stos
pusha
shrb
adc
icebp
sbb
arpl
orb
enter
popf
xchg
mov
jl
add
cmc
inc
xor
movsb
xlat
mov
cmpsl
lods
imul
jg
stos
iret
cld
mov
or
mov
pminub
adc
mov
and
fcoml
mov
mov
js
cmp
repnz
adc
jb
mov
in
mov
cmpsb
imul
push
std
xchg
sbb
sbb
lcall
and
mov
adc
outsb
lea
rol
xchg
fistps
pusha
out
inc
shrb
push
pop
ljmp
push
cld
adc
cmp
in
shll
dec
cmpb
jno
jmp
mov
jmp
lea
xchg
clc
bound
mov
jge
shrb
xchg
push
push
imul
sub
add
push
dec
dec
sub
push
cmc
xor
scas
dec
or
mov
pushf
mov
mov
sbb
cmp
mov
xor
sub
pop
add
pop
je
push
xchg
pushf
pop
adc
push
pop
pop
jo
mov
mov
mov
sbb
das
jge
test
lret
sub
std
aad
adc
in
sub
push
xchg
insl
jmp
fidivrl
fwait
lock
xchg
mov
jmp
or
ret
test
cmc
pop
or
mov
adc
adc
jno
mov
cmp
inc
push
jno
ljmp
pusha
or
sub
outsl
out
inc
das
xor
xchg
out
mov
cmpsb
es
inc
pop
std
xchg
sub
xchg
loopne
mov
dec
test
incl
lcall
sbb
or
xchg
rcr
add
xchg
jo
xchg
pop
push
stos
mov
mov
add
add
lret
mov
mov
xor
negl
test
rorl
mov
pop
jns
and
cmp
inc
mov
dec
sub
cmc
fsubrs
jle
jnp
or
xor
and
add
test
pop
mov
outsl
call
or
aaa
jno
stos
xor
jg
jge
imul
movsl
vcvtps2dq
lahf
xor
sbb
jg
stc
pop
scas
mov
scas
data16
ret
and
orl
and
mov
add
cltd
stc
out
lds
xchg
testb
add
push
sti
jp
sub
test
xor
add
adc
xchg
pop
gs
dec
fxtract
sub
std
jae
pusha
cwtl
hlt
outsl
loopne
out
mov
xor
shll
decb
push
push
cmp
divps
ret
jo
inc
sub
in
roll
xor
mov
loop
mov
pop
xor
hlt
jle
sbb
or
sbb
and
push
les
out
adc
pop
xchg
jne
cmpb
push
ror
adcl
dec
push
inc
or
cltd
push
and
data16
mov
jb
into
inc
cwtl
mov
xor
jnp
xor
sbb
xor
mov
in
cmc
test
dec
imul
pop
pop
xchg
mov
je
clc
gs
dec
insb
ret
xchg
mov
lods
mov
cmp
and
out
pop
pop
insl
repz
lret
adc
or
cmp
jnp
in
xchg
cltd
lods
bound
notl
sbb
mull
in
lret
and
lds
out
push
dec
jmp
dec
sbb
sub
inc
mov
into
inc
or
shr
sar
inc
cwtl
icebp
cmpsl
mulb
fsubrl
repnz
les
sbb
dec
popf
mov
dec
and
adc
push
cmpsl
test
mov
jns
jl
and
dec
pop
ret
inc
sub
into
sub
lea
fistpl
sbb
sub
stc
movsl
adc
std
push
jp
sbb
sbb
imull
enter
mov
xchg
and
out
mov
and
xchg
inc
dec
ficoms
adc
inc
cmpsb
dec
ret
loope
xchg
pusha
jecxz
or
pop
iret
xchg
xlat
jnp
mov
jmp
add
xor
mov
xchg
pop
outsb
mov
sbb
add
push
xlat
pop
and
mov
neg
fisubrs
scas
shll
and
aam
lret
lahf
add
jle
mov
test
or
dec
in
wbinvd
sub
pop
popf
mov
adc
daa
std
fstpl
bound
mov
imul
mov
cld
xlat
mov
mov
pusha
aam
mov
in
test
js
jbe
push
xor
sbb
adc
pop
les
jb
out
push
jp
push
ret
into
xor
pusha
fs
rolb
push
push
add
in
xchg
or
mov
ljmp
subl
inc
int
clc
mov
add
lahf
add
and
fwait
pop
hlt
loop
lock
scas
jno
push
xchg
jae
mov
dec
insl
push
mov
adc
das
cwtl
mov
repz
sbb
mov
out
pop
iret
lds
in
dec
xchg
and
sub
xor
cmp
imul
es
fimull
push
shll
and
scas
imul
and
dec
call
jns
jnp
faddl
sar
pusha
mov
hlt
cmpb
cmp
adc
outsb
dec
jne
xor
jp
sub
mov
dec
test
jno
and
inc
xor
hlt
dec
fucomi
xchg
jo
or
mov
jmp
fsubp
and
out
fiaddl
fadds
adc
jno
fistpl
lret
rorb
mov
jl
add
or
fs
jle
dec
frstor
xchg
addr16
andb
push
les
lret
orb
xchg
outsb
adc
adc
pop
xchg
cmp
test
loopne
xchg
cs
xchg
sar
mov
ss
outsb
cmp
push
mov
in
inc
fmull
js
in
mov
std
rcrb
fldl
xchg
mov
adc
pop
test
dec
lods
fcmove
ss
test
ds
sahf
mov
inc
lahf
inc
arpl
in
jl,pt
stos
cmp
pusha
sub
test
push
dec
out
pop
iret
cwtl
inc
mov
cld
in
adc
sbb
and
jmp
xor
in
lock
popf
adc
cltd
sub
cltd
xchg
push
fdivrl
ja
dec
jge
cli
mov
and
lret
mov
fwait
ret
in
add
and
xchg
fdivrp
jo
int
out
adc
or
dec
mov
call
jns
mov
call
pusha
sub
pop
lods
dec
push
jg
push
or
and
mov
cmc
dec
outsb
mov
push
out
aam
lods
les
pop
aaa
or
jp
je
adc
push
cmpsb
loop
repz
sub
pop
test
add
rcrl
cld
xor
fwait
sti
rclb
fwait
adc
les
push
fnstenv
mov
mov
inc
push
das
sbb
mov
mov
adc
xor
mov
xlat
xchg
lahf
into
in
shl
cmp
push
sbb
addr16
sti
sti
push
jne
jo
cmp
leave
cmp
xchg
or
push
or
repz
sahf
pop
adc
and
scas
lods
in
into
gs
mov
xor
jnp
loopne
lret
fs
xchg
fsubl
out
jp
jne
add
mov
jle
aad
dec
inc
cmpsb
out
dec
mov
lcall
std
dec
mov
cli
and
flds
inc
das
nop
add
subb
jg
add
push
xchg
xchg
das
cmpsb
xchg
mov
or
xor
arpl
dec
lods
in
jge
xlat
bound
xchg
jo
cmc
in
and
insb
jle
fstps
mov
pusha
jmp
inc
popf
jmp
push
test
inc
add
jo
test
adc
daa
pop
shlb
ljmp
adc
inc
jbe
lahf
les
mov
dec
hlt
js
loop
call
push
out
gs
adc
mov
add
jo
jo
out
pop
add
aad
mov
adc
jnp
js
icebp
in
jo
jmp
and
pop
and
sbb
mov
sarl
sub
pushf
in
je
inc
mov
jno
ret
jne
or
cli
inc
jno
mov
xchg
arpl
adc
inc
fnstsw
cs
sub
cmp
add
sub
pop
es
out
or
dec
vpmaxub
cltd
push
jnp
ljmp
cli
xlat
or
stc
mov
divb
idivb
mov
pusha
adc
add
and
push
pusha
fisubrs
and
leave
sbb
push
shr
pushf
lds
int
test
jo
dec
ja
sbb
mov
popf
adc
jno
enter
cli
stos
add
cld
repz
in
mov
cmp
aaa
int3
xchg
sbb
fcoms
xchg
insb
jge
lock
das
or
xchg
mov
mov
adc
lahf
fisttps
repz
jp
add
nop
xchg
push
cltd
out
pop
enter
lret
add
mov
dec
mov
inc
mov
jp
sub
scas
xor
xor
and
pop
pop
lock
filds
pop
cmp
pop
adcb
and
mov
xchg
dec
cld
sub
push
mov
mov
imul
mov
cmpsl
call
pop
push
lret
cmpsl
mov
loope
fldl
sub
pop
xlat
ss
mov
xorb
mov
hlt
insb
push
push
hlt
push
jo
inc
mov
in
insb
xchg
or
int3
lea
mov
xorl
mov
jge
out
cld
repnz
aad
or
xchg
xlat
lea
out
es
cli
je
in
rcrb
mov
add
aad
inc
sbb
xchg
pop
or
lret
into
sbb
ficoml
int
mov
inc
movsb
test
lock
test
fcmovu
sahf
sbb
adc
adc
add
sub
xor
icebp
mov
ss
dec
add
push
test
in
sub
movsb
mov
sub
jb
cmpsb
or
test
out
mov
test
in
out
imul
cmp
ljmp
stos
sbb
mov
dec
cmpsb
dec
mov
scas
enter
jbe
push
mov
mov
fists
xchg
cwtl
add
je
sbb
addr16
jle
inc
les
mov
sbb
and
xlat
aaa
cmpsl
xchg
pop
popa
or
sub
mov
adc
or
shlb
iret
pop
les
mov
stos
insl
push
pop
out
jp
fistpll
xorb
ljmp
popa
mov
and
popf
loop
js
loopne
mov
jecxz
aas
outsb
mov
insb
bound
mov
xor
je
mov
out
xor
sbb
cmpsb
leave
aam
xor
xor
pop
nop
sbbb
enter
test
cld
mov
xchg
mov
rorb
lods
inc
jne
push
scas
jb
mov
daa
fldenv
fsubrl
xchg
jno
mov
push
cmpsb
in
cld
mov
orl
xor
dec
xor
or
cmp
pop
or
jg
push
mov
adc
imul
outsl
sub
jbe
clc
push
mov
pop
push
push
cmpb
ss
xor
dec
ss
jecxz
adc
outsl
ja
jnp
jbe
and
cmp
sti
in
push
mov
adc
push
pop
sahf
jle
les
inc
inc
jp
mov
and
pop
arpl
inc
jg
jle
lahf
jl
call
fmuls
in
jp
aas
repz
adc
fwait
inc
dec
sbb
rol
or
xor
sbb
push
out
lret
mov
inc
loop
mov
aam
cld
shll
jno
stos
fs
test
jmp
mov
pop
mov
loop
cli
iret
mov
outsl
mov
pop
and
inc
stc
daa
clc
movsb
xchg
ss
rcr
scas
inc
mov
sbb
dec
jle
ljmp
adc
add
scas
int3
out
jg
dec
int
fldenv
or
cmp
jb
call
repz
add
jno
sub
bound
shll
stos
call
mov
jae
addr16
pusha
jbe
adc
push
gs
je
jmp
fwait
adc
jb
iret
loope
xchg
mov
cmp
test
popa
nop
icebp
and
sbb
cld
jle
mov
pusha
inc
test
call
mov
pop
or
inc
push
inc
hlt
pop
sar
mov
cwtl
js
cs
sti
repz
insb
push
and
out
daa
cli
xor
es
pop
dec
shl
out
mov
dec
leave
pushf
sbb
cmpsb
hlt
add
cli
and
outsl
and
fs
cmp
imul
push
pop
add
push
push
data16
mov
mov
or
scas
imul
sub
sub
mov
and
jnp
push
repz
pushl
lcall
icebp
push
out
ror
add
pop
in
mov
dec
sub
cld
clc
lret
push
and
aas
mov
in
sbb
insb
jnp
mov
movsl
dec
inc
cs
pop
mov
sbb
andl
fcos
enter
jo
out
sub
jae
into
fisttpll
mov
sbb
lret
lret
sbb
pop
sub
push
cmp
mov
mov
shl
loopne
and
xlat
cltd
stos
fwait
jmp
push
push
fisttpll
and
push
xor
xchg
push
dec
pushf
mov
cmp
add
std
aas
push
fidivrl
mov
ret
pushf
adc
mov
cld
out
xor
cwtl
test
cmpsl
xor
or
mov
sbb
mov
pop
ret
add
xchg
sbb
mov
mov
cli
mov
push
fnsave
jl
mov
imul
or
je
mov
addb
push
jge
cmp
test
inc
jb
int3
xor
lods
fisttps
jp
xchg
cmp
outsl
sbb
pop
test
inc
cwtl
loop
sbb
dec
and
mov
popf
scas
mov
cld
popa
and
icebp
sbb
jle
xor
ffreep
imul
xor
jge
int3
xchg
xor
and
int
xor
fwait
sti
mov
mov
jbe
mov
test
and
xchg
push
xchg
mov
fildll
nop
sbb
adcb
pusha
inc
sti
ret
leave
lcall
ffreep
lcall
push
cmp
inc
js
and
mov
mov
sub
ret
ret
and
and
nop
jmp
dec
xchg
es
xchg
sbb
nop
call
mov
mov
loop
mov
or
cld
pop
in
scas
inc
pop
divb
mov
cmpsb
jns
cmp
movsl
cmp
jne
xor
jle
jg
arpl
cmpb
ljmp
jae
sti
lahf
sahf
pop
stc
rol
fs
xchg
mov
aad
inc
and
sahf
dec
mov
adc
jne
rcrb
movsl
repz
and
lcall
test
or
push
push
insl
fwait
out
fxch
xor
add
loopne
jl
or
out
push
in
sub
pop
mov
mov
xor
xchg
cli
mov
stc
mov
pop
push
mov
lret
out
in
inc
cmpsb
scas
rcll
clc
jnp
ja
cltd
sbbl
mov
jecxz
shll
iret
leave
mov
adc
mov
mov
xor
or
adcb
fidivrs
cmp
xchg
and
sub
and
ja
mov
mov
adc
xchg
jmp
pop
adc
mov
adc
cltd
cltd
inc
in
add
mov
dec
sti
fcmove
xor
test
xlat
or
stos
jp
adc
push
add
jp
or
into
scas
out
faddl
ficomps
js
inc
cmp
inc
xor
cs
cmc
jl
mulb
sub
lea
jmp
inc
or
inc
fldcw
daa
mov
push
jb
sahf
inc
xlat
mov
das
xchg
imul
xor
in
js
fstps
fstps
insl
jge
push
dec
call
mov
push
fldcw
int
jb
sub
inc
in
cmp
xchg
mov
ret
sub
clc
icebp
mov
add
rolb
test
pop
mov
xor
lcall
jns
aad
sbb
in
jne
or
jp
xor
sub
dec
inc
and
out
test
and
arpl
cmp
enter
mov
fdivl
adcl
loopne
ret
popa
aaa
insl
das
mov
jbe
cmp
aad
jmp
mov
leave
ljmp
sub
mov
push
jp
xchg
add
clc
jle
mov
xor
cmp
stc
jmp
cmc
movsb
sti
imul
cltd
shll
adc
xor
inc
ja
loope
sub
test
xchg
js
lahf
icebp
mov
xchg
mov
jecxz
add
jno
int3
iret
sbb
cmp
sarl
xchg
hlt
push
dec
mov
adc
cmp
cmpsb
jecxz
add
and
mov
imulb
add
xchg
jle
sub
xchg
xor
testl
and
cmp
fmuls
sbb
xchg
mov
mov
cmp
sbb
sub
push
add
jecxz
mov
xor
mov
outsl
dec
push
jns
jnp
dec
sbbl
nop
mov
or
xor
fistpll
mov
xchg
loopne
dec
icebp
popf
rcll
enter
xchg
or
movb
in
xchg
leave
cmp
dec
clc
decl
push
jns
into
movsl
out
or
fimull
push
adc
mov
aas
imul
notb
mov
jb
sub
stos
repnz
xchg
adc
sub
mov
ds
pushf
dec
xor
sbb
xchg
mov
jns
daa
popf
ss
in
pop
roll
mov
stc
fisubs
sarl
das
sub
repnz
fidivrs
popf
popa
addr16
or
xor
fdivs
cmp
les
mov
inc
dec
hlt
add
pop
dec
pop
neg
jbe
stos
pushf
movsl
mov
in
jb
dec
test
pop
push
sbb
scas
sbb
addl
popl
into
mov
mov
popa
pop
jb
dec
mov
fdivl
mov
rorb
xchg
mov
out
shlb
mov
fadds
outsl
movzwl
out
pavgb
xchg
mov
sbb
ss
das
dec
push
push
xor
inc
loopne
jb
sub
xor
sbb
inc
adcl
add
push
daa
sbb
daa
addr16
out
outsl
push
mov
mov
add
divl
jp
inc
fidivl
cltd
lret
inc
cmc
cmp
push
sub
leave
out
stc
jae
xor
leave
ret
adc
rorb
pop
jb
orl
dec
push
mov
out
push
cmp
lcall
out
jo
add
sub
dec
push
negl
aad
mov
adc
xchg
sub
xor
push
test
data16
out
fisubrs
lea
sbb
es
xorb
xor
jne
mov
mov
push
sub
leave
mov
test
mov
call
sub
jo
cmpb
xor
bound
and
rorb
cltd
sub
lret
pop
xchg
scas
test
inc
mov
add
inc
shll
inc
inc
pop
xchg
sbbb
or
adc
push
mov
adc
xchg
xor
jnp
sub
mov
cmp
xchg
pushf
dec
adc
jmp
mov
dec
inc
or
bsr
popa
movsl
mov
arpl
int3
and
sbb
pop
repnz
shrl
pop
mov
jnp
movsb
sti
movsb
aaa
inc
subb
popa
pop
es
jmp
xchg
or
xor
movsl
xor
push
call
adc
les
adc
add
cwtl
pop
pop
mov
imul
sub
test
inc
addr16
ds
pslld
stos
push
mov
pop
roll
push
es
jb
int3
sub
fbld
fisttps
fnstsw
cmp
cld
and
stc
cs
sahf
test
push
ja
dec
cmp
mov
test
adc
cs
hlt
add
xor
ja
cmp
or
idiv
popf
xchg
mov
pop
xchg
call
inc
divl
aas
lds
aam
rorl
mov
shr
mov
sub
xor
jo
sbb
sbb
sbb
cmpsb
xor
int
add
add
dec
and
xor
lret
and
mov
jp
push
sarl
fidivrs
scas
iret
cmp
and
pmaxub
loop
sub
adc
xchg
les
xchg
xchg
nop
shlb
in
sbb
daa
cmp
int
or
repz
add
lcall
mov
stc
sbb
jae
test
jmp
int3
lret
cltd
push
stos
push
rcr
mov
pop
cmp
mov
mov
and
daa
aaa
pop
iret
lret
in
jp
loope
aam
fsubrl
fisttpl
mov
ljmp
movsb
mov
xor
cmp
jae
mov
cmpsl
jmp
xor
popf
mov
mov
adc
sbb
addr16
in
pop
push
sub
icebp
mov
stos
jno
pop
icebp
js
scas
cmpsl
sub
fwait
call
inc
mov
xor
cmpsb
push
add
mov
fwait
inc
cs
sbb
arpl
sbb
pop
nop
mov
and
cmp
add
sub
les
jne
pop
push
imul
xor
cli
pushl
std
mov
cmpsl
and
push
sub
dec
stc
idiv
shlb
cmpb
jl
jmp
push
rolb
sub
lods
add
pop
push
add
stc
test
js
sub
mov
jle
pusha
pop
mov
add
lods
dec
jo
lret
sbb
mov
imul
xchg
pop
jecxz
and
insb
add
jnp
xor
clc
cmp
inc
xor
sbb
pop
push
push
mov
jmp
xchg
cmp
stos
mov
sbb
or
dec
pop
mov
cwtl
add
in
popa
loope
lds
push
dec
cmp
sbb
mov
scas
nop
test
inc
sub
mov
test
pop
pop
in
dec
cld
sub
jmp
lea
ret
insb
sub
push
bswap
mov
filds
sarl
movsl
fnstcw
test
lock
cld
ljmp
pop
rcrb
cmp
lds
add
fistpl
data16
roll
sbb
vaddsubpd
sarl
xor
out
pop
or
cmpsl
jae
scas
cmp
movsb
inc
xor
inc
fmull
movups
stos
insb
inc
pop
dec
cmpl
pop
stos
fwait
aam
dec
inc
inc
cld
ljmp
roll
pop
mov
leave
and
mov
mov
xchg
or
lods
lea
sub
ret
ljmp
dec
cltd
aad
adc
and
pop
xchg
xor
xchg
nop
pusha
sub
lcall
inc
rorb
pop
xchg
xchg
popa
push
cmc
add
mov
cmp
lock
stos
aas
jnp
cmp
sbb
inc
and
inc
or
mov
jae
xchg
inc
adc
ja
int3
mov
pop
insl
add
pop
mov
loop
punpckhwd
pop
dec
jb
pop
call
lods
pop
cmp
lods
mov
jl
out
into
loop
jmp
hlt
or
cmpsl
mov
mov
dec
fsubrs
std
inc
and
jmp
shlb
in
mov
adc
mov
mov
test
inc
sub
inc
dec
out
mov
leave
sub
out
or
mov
or
fcmovne
daa
pop
aad
fldenv
in
cmpsl
loop
testl
jp
cmc
shlb
popf
addb
sub
inc
pushf
mov
push
xor
call
popf
outsl
xchg
mov
xadd
sbb
xchg
repnz
add
lahf
xchg
pop
adc
gs
idiv
pop
jns
out
test
xlat
xor
xchg
xchg
pop
out
push
dec
inc
dec
push
lret
pop
les
sub
mov
jp
and
jge
cmp
cmp
insl
add
or
mov
mov
and
leave
or
mov
jno
inc
and
mov
mov
lahf
cmc
xor
in
jbe
in
mov
mov
ja
xchg
xor
xor
adc
jb
sti
sbb
push
add
fdiv
pop
lods
fnstsw
mov
and
lods
xor
clc
jge
repnz
stos
mov
std
dec
sbb
lret
insb
mov
and
repz
cld
sbb
in
addr16
enter
xor
add
inc
inc
xchg
dec
adc
or
int
sub
xchg
ja
pop
fisubl
repnz
dec
jecxz
push
push
imul
cmpb
pop
test
push
or
test
sbbb
inc
cmp
inc
cltd
in
jnp
push
xchg
out
ds
dec
mov
pusha
loopne
inc
cmp
fadd
inc
movsl
test
fistpl
inc
lahf
ret
into
sbb
push
pop
and
and
adc
fyl2x
push
adc
outsb
testl
mov
lahf
decl
adc
jmp
mov
iret
sahf
sbb
fsubrs
sub
icebp
jle
or
scas
sub
fsubrp
aad
sbb
push
jl
sti
in
mov
loope
sub
pop
jne
push
clc
bound
fmuls
gs
xor
xor
icebp
xchg
mov
pop
sub
test
xor
aaa
call
mov
pushf
fwait
out
aas
add
lock
mov
jge
fisubs
sub
sub
jp
or
ret
in
fwait
jmp
gs
jb
xchg
dec
testl
mov
pushf
mov
push
push
push
inc
or
push
lods
incl
jmp
scas
imul
push
add
sbb
int
adcl
mov
ret
adc
push
inc
and
jae
jg
pop
mov
jbe
push
fisubrs
xchg
addr16
aaa
sub
cwtl
push
fwait
pop
mov
rcll
pop
jg
push
push
jp
inc
add
add
xor
out
in
push
ljmp
cli
aad
xchg
cmpsb
xor
push
jp
dec
or
push
cmp
cmp
leave
stos
movsb
int
mov
popl
nop
incb
data16
sbbb
outsl
hlt
ret
dec
outsl
mov
flds
sbb
fcompl
adc
call
cmpsb
inc
mov
je
or
sahf
jl
lea
push
xor
or
push
repz
push
loope
add
push
aas
out
jp
xchg
push
and
inc
sbb
and
dec
mov
xchg
or
jge
pop
add
aaa
cmc
sub
or
inc
dec
pcmpgtw
push
add
inc
mov
or
rcrb
jecxz
lock
jnp
push
push
imul
cmc
sub
call
push
loopne
imul
out
in
or
enter
stos
sbb
or
push
das
je
test
jmp
jle
fneni(8087
movsl
adc
adc
sbb
dec
xor
aam
mov
mov
mov
mov
fldenv
mov
arpl
xlat
xchg
push
cwtl
xor
add
dec
jmp
rcr
jbe
insb
xor
pushf
addr16
xor
sub
sub
lret
in
ja
or
jp
aas
sub
jns
out
dec
jl
and
cld
sub
mov
fisttpll
jle
inc
clc
sub
stc
out
push
or
jns
stos
jle
add
or
adc
mov
push
cmp
idiv
jnp
dec
adc
pop
lcall
fldt
cmp
push
imul
sub
cmpsl
in
and
loop
jo
mov
aaa
jmp
adc
repz
clc
xor
sbb
sub
pop
jns
pop
aam
mov
call
push
adc
int
cmp
int
repz
fists
nopl
adc
mov
sub
das
pop
jmp
sub
and
mov
imul
div
mull
mov
sub
push
adc
pop
std
insl
iret
push
sbbb
dec
js
push
mov
inc
rol
ret
addr16
mov
mov
push
es
xchg
bound
pop
or
and
ret
and
std
test
inc
cld
push
ja
dec
pop
jl
mov
mov
xchg
push
repnz
fs
push
add
pusha
add
fmull
or
pusha
lahf
and
popf
nop
enter
cmp
ret
inc
ja
fbld
imull
xorb
js
pop
jp
mov
cmp
cmovae
sarl
and
dec
addr16
in
repnz
jb
cmc
int3
stc
aam
les
in
ror
and
xchg
fs
imul
push
sbb
push
pop
sahf
and
adc
js
pop
jmp
scas
cmp
mov
popa
xor
adc
push
rorb
lahf
xor
and
cwtl
ja
pop
lock
mov
das
push
call
repnz
rcr
mov
push
movsb
cmp
mov
int
pop
push
push
sbb
mov
cs
and
xor
in
aaa
fsubs
lahf
mov
add
js
mov
pop
arpl
sbb
push
test
cmp
or
fs
push
lret
and
and
xchg
lcall
enter
and
popl
and
jmp
pop
fldcw
or
shll
inc
pop
jns
je
jae
push
pop
mov
insb
hlt
mov
nop
lock
push
loopne
and
add
push
and
inc
xchg
pop
lock
in
xchg
andl
js
dec
inc
xchg
mov
idivl
push
or
jp
push
aaa
push
jecxz
jns
pop
sahf
jne
jge
jbe
les
mov
ja
mov
aas
inc
imul
inc
adc
jbe
sahf
adc
rol
or
xchg
in
mov
cmc
xchg
adc
loope
xchg
inc
ds
call
mov
push
jbe
xor
push
divb
in
sub
popa
addr16
loop
inc
loopne
jg
mov
pop
nop
cmpsb
loopne
js
adc
push
or
jmp
mov
and
adc
inc
insl
pop
dec
cmp
outsl
imul
aaa
mov
cmp
sub
xchg
add
jmp
pop
xor
daa
xchg
sti
out
sbb
mov
and
xor
mov
les
imul
pusha
pop
ss
add
shrl
mov
lahf
mov
js
sahf
insl
ret
shlb
ljmp
jae
jl
in
movl
adc
cli
xor
cmpsl
les
cmp
in
fistl
mov
and
iret
cmpsb
and
cmp
inc
leave
inc
dec
xor
flds
push
into
popf
mov
shll
jb
cld
aaa
loopne
pop
push
idiv
fwait
lret
push
test
cmp
in
pop
inc
clc
ret
push
lods
fwait
ja
lock
out
std
dec
mov
cmp
out
mov
jle
clc
mov
hlt
jo
and
outsl
loopne
push
push
aad
mov
mov
lret
incb
dec
sbb
push
push
das
cmp
dec
mov
jge
inc
in
dec
add
cmp
imul
inc
xor
push
and
add
jbe
test
insl
push
aam
mov
push
pushl
test
aam
jne
jbe
sahf
test
jle
gs
inc
xor
pop
rolb
leave
lret
mov
and
xor
pop
test
pop
xchg
cmp
and
clc
xchg
movb
aad
pusha
dec
stos
xchg
push
aas
mov
sahf
mov
push
stos
push
ret
ja
mov
jle
fisubrl
pop
push
jp
push
and
ds
mov
xor
add
jmp
fisubl
outsl
xchg
arpl
jp
or
daa
out
fnstenv
popa
pop
scas
pusha
sub
cmp
jge
mov
inc
mov
mov
stos
mov
out
loop
bnd
cmp
jb
aam
dec
mov
mov
idivl
xor
sbbl
dec
cmp
mov
sbb
insl
push
inc
jl
cltd
mov
xor
cmp
test
xor
stos
xor
mov
cltd
movl
xchg
mov
iret
push
je
mov
dec
repz
cltd
insb
movsb
mov
push
push
in
fsts
mov
pop
cmp
xor
dec
pop
lret
or
in
into
mov
jne
or
and
dec
icebp
push
test
int3
fldl
xor
add
add
jno
lret
fisubrl
mov
adc
mov
push
adc
mov
or
adc
fs
mov
in
pop
xchg
lods
rol
imul
enter
out
fcmovne
sbb
cmc
lret
fiadds
inc
pop
sbb
adc
xchg
aas
adcb
xchg
mov
sbb
mov
push
sub
lea
add
repnz
aas
xor
inc
and
xor
pushf
out
lahf
cmp
jmp
mov
jmp
and
push
jg
jl
loope
iret
sahf
push
repz
jmp
add
cli
das
int
jecxz
popa
ja
out
add
or
and
mov
shll
push
cmp
dec
sub
mov
mov
jne
jmp
dec
sbb
cmp
mov
jae
test
sbb
shl
push
xchg
outsb
pop
fisttps
ret
adc
lds
and
jmp
fsubs
cmp
or
lock
les
mov
adc
aaa
mov
popa
je
pusha
and
adc
xor
and
outsl
push
inc
push
mov
mov
aad
sub
mov
xor
xor
mov
cmpsb
ss
sub
xchg
movsl
lods
xchg
scas
sahf
loope
cltd
xor
dec
sub
mov
push
add
sbb
mov
jb
sub
jne
mov
sbb
imul
mov
xchg
scas
cmpsl
stos
xchg
sub
movsl
xor
in
rcl
repnz
std
popf
hlt
sbb
jmp
add
add
push
sub
mov
pop
sbb
gs
rcr
rclb
push
jge
fiaddl
inc
or
push
mov
mov
cmp
xchg
lcall
lahf
mov
negl
xchg
stos
jne
push
test
cltd
or
mov
xor
lds
xchg
pop
push
pop
insb
dec
dec
in
jno
aad
incb
jle
out
adcl
int3
mov
and
xchg
jp
dec
adc
daa
cmpsl
mov
jno
push
imul
push
push
cmpsl
dec
sub
sarl
jecxz
outsb
daa
ljmp
xchg
jb
bound
pop
mov
and
lahf
iret
cmpsb
ja
mov
outsl
xor
orb
mov
std
jle
sub
inc
pop
les
pop
mov
push
pop
dec
inc
insl
sub
cmp
bound
xchg
pop
popa
adc
jb
movsb
dec
scas
cwtl
mov
test
add
fmulp
cmc
cmc
daa
outsl
lahf
mov
loop
movsb
mov
xorb
cmp
rcr
and
mov
add
mov
aas
mov
outsb
ffreep
and
xor
cmp
inc
out
daa
mov
sbb
mov
xchg
pop
inc
add
fistl
shlb
mov
push
lahf
sub
notl
andl
adc
mov
bound
sbb
or
sub
cmp
inc
in
fimull
enter
cmp
or
pop
gs
inc
rol
push
push
movsl
in
out
dec
and
andl
or
push
mov
pusha
sbb
inc
sub
sub
cli
add
mov
sub
cmp
sbb
adc
add
sub
mov
sbb
inc
inc
inc
and
cmp
or
fdivl
je
sub
jb
es
push
js
icebp
inc
dec
mov
lret
loopne
cmp
call
xor
cmp
adc
aas
xor
in
aaa
dec
bound
inc
push
cmpsl
push
shl
lret
jns
or
cwtl
or
mov
add
insl
jbe
mov
dec
cmp
jl
mov
ja
jae
mov
fcoms
lret
add
mov
lds
mov
es
or
in
cli
xorb
aam
or
test
pop
cmp
test
mov
jmp
es
out
bound
add
mov
dec
sub
sbb
lahf
dec
mov
dec
es
stos
repnz
jno
cmp
adc
adc
sbb
mov
aaa
mov
stos
inc
mov
mov
or
addr16
lahf
imul
inc
sub
jne
dec
dec
iret
jbe
mov
pop
jb
jbe
pop
lcall
std
hlt
sar
sub
scas
cmp
and
cli
sub
add
cmpsb
mov
cmp
sbb
adc
add
loop
push
xor
push
and
inc
psubd
icebp
js
xlat
insl
dec
ss
out
les
mov
and
mov
dec
fcomps
out
repnz
call
cmc
inc
and
sub
cmpsl
add
mov
pop
push
mov
test
rclb
fdivs
xchg
mov
inc
sarl
pop
push
shrl
cmc
mov
or
pushf
dec
add
sub
pop
or
bound
xor
mov
int
push
inc
dec
loopne
sub
mov
jno
xchg
cmpsb
pop
xor
test
cmpsb
dec
dec
into
jmp
sub
push
xchg
mov
sbb
or
dec
xor
or
in
jb
jg
push
jns
and
lahf
ljmp
fwait
imul
xchg
or
lods
sub
adc
mov
fmull
xchg
and
xor
ret
xor
mov
mov
mov
daa
xchg
xor
jns
mov
aam
push
mov
mov
dec
pop
lret
lods
mov
push
pop
lahf
dec
ret
pop
mov
test
cmp
pop
sub
mov
andl
jnp
push
lret
stos
push
movsb
scas
lret
mov
lret
adc
jmp
in
mov
call
pop
inc
shl
adc
lock
cmc
mov
mov
sbb
fs
xor
mov
sbb
in
lret
cmpsl
xchg
sti
mov
orb
push
mov
jno
stos
rcrl
das
or
insl
popf
stos
xchg
mov
mov
js
inc
add
lcall
test
stos
push
adc
fistpll
lcall
aad
mov
pop
and
mov
sub
sub
mov
das
dec
dec
inc
and
xchg
out
sbb
inc
idivl
icebp
and
mov
adc
gs
or
insl
aas
pop
inc
inc
push
outsb
sub
or
popa
aaa
dec
ja
add
mov
jo
adcb
int
xchg
stc
dec
mov
adc
shr
mov
pop
in
inc
add
push
mov
dec
stc
ret
dec
int
mov
dec
stos
jmp
aad
mov
or
mov
mov
and
cmp
cmpsb
xlat
scas
scas
filds
dec
push
sti
jmp
test
mov
fwait
cld
repnz
xchg
lock
push
add
jo
test
mov
std
and
cmp
xor
stc
mov
inc
push
add
or
mov
popa
mov
out
or
sub
test
clc
jmp
sub
adc
sti
insl
daa
jmp
mov
sahf
lea
and
testl
pop
ja
leave
inc
fcomip
outsb
jp
pop
scas
sub
add
out
mov
dec
test
cmp
cmp
in
scas
push
xchg
outsb
mov
mov
push
push
or
dec
jnp
hlt
pop
mov
mov
stos
lock
cs
adc
aam
xchg
or
and
outsl
pop
mov
push
xor
mov
nop
mov
in
jns
fildll
iret
dec
push
sbb
xchg
xor
lea
bound
sbb
sti
sti
aaa
test
dec
mov
add
fistl
sbb
pusha
popa
add
leave
mov
push
xchg
ljmp
inc
mov
jle
jbe
mov
sub
call
mov
data16
dec
jns
mov
inc
cmc
xor
cmp
hlt
mov
sbb
rolb
icebp
stos
inc
xchg
mov
loopne
mov
int3
push
push
in
adc
sahf
lcall
mov
out
out
inc
shlb
data16
lcall
stos
mov
push
dec
lret
andl
mov
xor
xlat
mov
testb
xchg
xor
sti
pop
jmp
mov
jmp
xchg
push
pop
lock
xchg
les
mov
fistpll
mov
loope
popf
cmc
push
movsb
les
shrb
mov
push
loop
sahf
cmpb
pop
fsubl
sbb
xlat
lret
inc
mov
xchg
jno
jecxz
jbe
lret
frstor
fs
jbe
jmp
dec
inc
and
jae
xor
jecxz
pop
sahf
mov
pop
mov
ret
pop
inc
sub
stos
add
mov
sbb
ret
inc
mov
fwait
or
cmpb
test
pop
mov
lock
mov
cwtl
pop
push
ja
sbb
in
jae
xchg
sbb
jbe
jmp
stos
lret
gs
xchg
aas
arpl
add
lea
test
testb
dec
or
into
in
jecxz
ss
inc
dec
and
sub
xchg
pop
faddl
lcall
imull
fistpll
bound
xor
outsb
enter
enter
sbb
cmp
rcll
arpl
popf
jl
pusha
mov
mov
mov
mov
mov
add
clc
sbbb
lcall
pop
mov
stos
push
inc
cwtl
movsb
jb
lret
push
and
xorl
xchg
jno
test
fisttpl
adc
lds
incb
push
and
adc
mov
cmc
jnp
dec
sub
sub
cltd
out
inc
push
dec
cmp
in
es
daa
test
sub
ljmp
add
loop
int
xchg
jge
outsl
out
popa
cmp
add
sub
push
jecxz
inc
xor
jne
mov
pop
push
xchg
and
cmp
arpl
mov
inc
cli
push
lea
ret
shll
inc
mov
ja
mov
pusha
cmp
mov
shrb
out
and
insb
int
xchg
sbb
insl
lahf
push
insl
in
cmpb
fldcw
pop
xor
xchg
mov
cmp
mov
stos
cwtl
dec
push
scas
adc
xchg
pop
cld
or
add
sbb
ljmp
leave
sbb
xchg
xor
sub
sbb
rcr
test
add
sti
loop
mov
add
xor
adc
bnd
repnz
push
sbb
ret
aas
sbb
xchg
loope
add
arpl
xchg
mov
push
roll
daa
test
and
mov
lret
dec
jb
dec
leave
lahf
mov
movsb
mov
push
test
jns
ja
pop
pop
jmp
xor
pop
pop
push
inc
xor
push
int
jecxz
iret
push
js
push
loope
in
aas
push
popa
xchg
jns
fucomip
insl
inc
cmp
xchg
and
fucomip
and
and
psubw
popa
test
fucom
push
lahf
fsubp
mov
repz
aas
and
es
test
ja
and
cmp
mov
loope
icebp
mov
cmp
les
jb
adc
mov
sbb
stc
xchg
lds
je
lret
lret
dec
jp
dec
add
lock
xchg
push
mov
out
dec
xchg
or
sub
xor
adc
mov
mov
stos
xor
test
add
add
bound
imul
push
xchg
and
xor
nop
das
popf
fs
dec
push
int
es
xor
cmc
test
iret
int
sub
insb
mov
xchg
inc
idivb
and
pop
rcrb
adc
fidivrs
sub
jg
in
insl
add
out
repnz
xchg
dec
jecxz
repz
xchg
lret
int
enter
or
inc
push
dec
vpackuswb
sbb
pop
sbb
mov
jb
ljmp
imul
popf
fstl
icebp
in
jbe
sub
cli
cwtd
outsb
fsts
scas
mov
dec
in
mov
pusha
cmp
mov
fs
iret
fsubs
jmp
fdivrs
sbb
adc
sub
out
lock
repz
sbb
shlb
cmp
imul
sbb
xor
popf
cmpsl
adc
mov
jno
mov
movups
js
sbb
pop
movl
aad
push
std
les
jne
insb
loop
outsl
popf
push
xchg
sbb
sub
adc
jg
mov
adc
inc
rcr
fidivrs
es
mov
es
in
adc
filds
in
cmpsb
pusha
ja
sbb
inc
inc
outsl
lret
push
pop
lock
mov
xchg
rcrl
jns
enter
cmp
int
mov
fcmove
ljmp
int
bound
adc
stos
xchg
les
bound
pop
leave
imul
and
xor
mov
rorb
ret
pop
sbb
enter
xchg
into
ret
mov
aad
jo
test
pop
mov
int
ret
adc
pop
adc
cmp
insl
add
and
ret
push
push
fnstenv
jle
mov
cli
test
rcll
and
es
es
in
clc
outsl
mov
push
sbb
dec
cmp
lods
mov
push
or
or
das
pop
sbb
jl
mov
int
sub
loop
leave
add
jnp
sbb
ljmp
and
or
mov
sub
mov
and
push
out
cld
repz
xchg
aaa
inc
into
stos
call
imul
loopew
enter
jp
push
lods
fldcw
loopne
call
ss
cltd
or
jl
addl
scas
lret
sbb
rorb
cltd
jl
std
jno
in
repz
sub
and
mov
es
fdivrl
orb
cmp
dec
pop
xor
das
les
cmp
movsl
dec
lods
inc
cmpsl
fldt
ss
xorl
push
cltd
shl
idiv
cwtl
adc
outsb
adc
mov
repnz
and
adc
mov
add
adc
les
call
jg
mov
sbb
push
add
mov
fucompp
jo
lahf
out
xor
fcomi
jge
call
cmc
cmp
bound
and
pop
jg
pop
movsb
mov
pop
pop
rol
xor
add
repnz
test
pmullw
cs
lods
push
jnp
out
rorb
or
nop
jbe
xor
dec
add
in
adc
mov
stos
data16
mov
sbb
push
cltd
mov
mov
xor
jle
test
ret
mov
test
cmc
shll
repnz
or
push
stos
mov
sbb
sahf
out
jg
push
or
cmp
insl
mov
iret
arpl
imul
push
xor
out
xor
mov
inc
in
inc
mov
cmp
icebp
xchg
movl
in
outsb
adc
add
jne
fistpl
sub
das
call
push
out
dec
xchg
lahf
mov
roll
sbb
ljmp
xor
aam
imul
xchg
mov
push
jno
xor
test
or
push
roll
xchg
popa
jle,pn
test
cmp
dec
xchg
ljmp
stos
pop
sub
stc
call
xchg
lret
or
jp
pop
dec
call
cmpsb
ss
int3
dec
push
negb
lcall
pushf
adc
cmp
xchg
jge
fsubr
mov
mov
mov
stos
jne
fs
fldcw
or
inc
cmpsl
fidivrl
jae
rolb
dec
push
aaa
or
sub
sahf
mov
lahf
ja
inc
jae
mov
xor
sbb
inc
outsl
ds
sub
loop
pop
rcll
add
dec
xor
mov
insb
sub
jle
clc
mov
xor
dec
mov
cwtl
jne
push
xchg
std
sub
dec
pop
insl
pop
ljmp
in
sahf
push
bound
mov
outsb
out
xor
repnz
add
add
xchg
adc
push
pop
stos
cmp
add
push
ss
fcmovnb
sub
lret
jg
adc
dec
movsb
mov
xchg
xor
pop
pop
and
int
mov
insb
fs
mov
ficoml
pop
mov
jb
push
inc
int3
or
push
adc
pop
pop
add
xchg
xor
mov
loop
xor
jge
push
dec
pop
cmpsl
and
mov
and
mov
stc
fs
dec
push
add
in
ljmp
das
add
sahf
ds
push
out
dec
inc
push
add
push
ds
fildll
movsl
dec
int3
mov
lea
dec
mov
add
inc
in
mulb
jge
out
test
loope
aas
pop
out
rep
cmpsb
push
cli
aas
test
lods
gs
lcall
out
pop
into
xor
push
lss
out
cmp
sub
inc
mov
lret
hlt
cmp
pusha
out
jbe
mov
insb
jl
shld
mov
xchg
mov
push
jnp
imul
mov
and
loopne
pop
lcall
test
jp
lahf
xchg
mov
es
scas
loope
push
clc
xchg
cmp
cwtl
aaa
sub
lret
fcmovnb
in
imul
jno
ret
out
fistps
mov
cmp
inc
fsub
push
push
addr16
push
adc
fs
cmp
push
movsb
insb
cmpsl
mov
fstl
fimull
loop
fldt
cmp
inc
pop
adc
lods
mov
mov
ss
mov
add
or
xchg
jle
and
mov
pop
xchg
js
or
ljmp
xchg
cld
sti
xchg
lret
repz
roll
js
fnstsw
ljmp
scas
dec
mov
pop
xchg
push
jns
clc
lods
das
and
mov
xor
xchg
repnz
rclb
out
push
icebp
imul
test
test
pop
push
gs
xchg
scas
lods
mov
or
clc
cmp
out
rolb
xor
movsb
popa
mov
adc
test
xor
cmp
pop
cmp
test
sahf
imulb
mov
cwtl
dec
ja
stos
addr16
dec
fmuls
fcoml
jno
inc
jae
sbb
mov
lds
testb
pop
enter
es
jns
dec
pop
push
pop
lea
dec
gs
xor
cli
shll
idivw
sbb
fisubl
sbb
cmp
jmp
xchg
or
sbb
lea
pop
or
cld
adc
and
movsl
testl
sub
sub
inc
sub
notl
dec
das
pushf
xor
sbb
inc
pop
push
inc
test
lods
jno
mov
arpl
mov
push
adc
adc
bound
call
mov
out
int3
imul
sbb
sub
xor
sbb
mov
jg
imull
aaa
in
cmc
dec
jnp
inc
rcll
dec
xchg
sbb
mov
push
sub
mov
cltd
xor
lods
mov
inc
call
push
and
mov
popf
in
iret
pop
sbbb
inc
leave
test
addr16
cmp
push
inc
mov
mov
xor
daa
sub
cmpsl
fs
stc
je
mov
xchg
dec
sti
sarb
pop
lcall
ret
pop
aas
jns
push
test
jns
sub
popa
sbb
sbb
xor
adc
pushf
ret
mov
pop
inc
pop
xor
filds
jno
adc
mov
cmpsl
dec
or
in
aaa
aaa
xchg
outsb
movsb
rorb
jle
popf
sub
movsl
cli
cmp
cld
lea
test
push
cltd
sub
sub
mov
imul
dec
and
stos
lahf
test
jmp
push
fcomps
cwtl
mov
pusha
sbb
cmp
xor
aaa
cmp
push
lahf
fistl
mov
imul
jne
es
rorb
repnz
push
push
mul
push
lret
dec
sbb
loop
repz
jp
push
dec
mov
jnp
popa
mov
or
pop
in
xor
stos
push
inc
cwtl
ja
scas
fwait
push
inc
push
leave
repz
mov
mov
push
movsl
cmpsl
rcrb
ffree
int3
dec
add
mov
mov
add
dec
xchg
cmpsb
popa
sti
mov
dec
pop
rclb
cmp
lret
add
incb
cmpl
lock
adc
sbbl
xor
jl
cwtl
out
sahf
rclb
push
dec
addr16
push
or
ret
scas
nop
and
mov
adc
movsl
faddl
add
iret
mov
cmp
dec
add
inc
mov
pop
iret
sbbb
push
aad
and
sub
into
push
test
clc
lfs
mov
popl
push
pop
sub
mov
mov
adc
enter
out
out
push
push
cmp
fldcw
jmp
dec
daa
insl
pop
daa
push
ret
enter
adc
cmp
mov
sbb
sub
or
cmc
lahf
mov
es
popf
pusha
and
and
xchg
ja
loop
jecxz
sbb
jg
adc
mov
call
shll
mov
xorl
jnp
xchg
dec
iret
fcoml
cld
xorb
xor
call
cmpsb
fwait
xor
push
es
repnz
cmp
and
mov
jl
shll
xor
pop
jg
lods
popf
testb
pop
lea
int3
repz
loop
jmp
push
lret
popf
inc
loop
rcrl
xor
loopne
adc
cmc
push
and
call
or
stos
jg
pop
imul
jnp
mov
in
adc
test
add
jo
repz
mov
fsubr
xchg
movsl
in
rdtsc
xchg
ja
or
xlat
push
cmpl
out
inc
stc
mov
loop
fsts
jns
in
jmp
call
xchg
ret
daa
jae
or
jo
add
test
pusha
dec
jmp
aaa
pop
ret
shll
ret
call
add
mov
mov
sbb
mov
int
adc
ljmp
pop
push
aam
scas
bound
es
movsb
jbe
dec
int3
icebp
cmpsb
jb
daa
imul
call
pop
iret
push
pop
sbb
in
fistpl
rolb
insl
jmp
fld
push
ds
dec
jbe
cltd
lcall
mov
inc
rolb
mov
sbb
sub
or
mov
cmpsl
adc
ja
fwait
mov
push
cmp
pop
ret
bound
shlb
cli
fs
aad
pop
mov
dec
dec
mov
fstps
stos
stos
js
shr
test
mov
rolb
jg
jbe
cmpsb
pusha
je
into
lock
popa
adc
lods
daa
outsb
mov
push
push
mov
add
mov
inc
or
xchg
sub
or
test
push
fsubrs
push
jno
ja
in
outsb
leave
rol
push
lret
test
push
and
ficompl
lret
shl
mov
test
addr16
movsb
pusha
call
add
leave
lcall
ret
mov
inc
leave
xor
stos
fisubs
int
mov
and
shlb
jne
ljmp
les
sahf
add
mov
or
pop
mov
loopne
jle
movl
sarb
mov
mov
inc
faddl
cmp
sub
divl
sbb
cmp
out
je
imul
sbb
test
mov
xor
sub
cwtl
mov
cmpsl
es
mov
mov
pop
rcrb
inc
cmpsl
ljmp
pushf
mov
add
lods
iret
fldl
mov
inc
push
and
insl
add
shl
aad
dec
scas
rclb
add
cmp
mov
lds
insb
xorl
sbb
xchg
and
clc
nop
or
pop
push
jns
push
ret
pop
jmp
mov
mov
jmpw
inc
sub
and
hlt
xor
jmp
mov
ja
inc
pop
popa
xlat
lahf
js
popa
pop
push
push
ret
add
cmp
xor
pop
ret
jbe
inc
sti
outsl
dec
or
pusha
add
ljmp
loop
mov
mov
fcomp
imul
mov
fisubrs
lods
xchg
push
add
cmp
mov
sbb
mov
mov
sub
cld
dec
jnp
xchg
fstpl
jbe
insb
xchg
fsubs
mov
sbb
jmp
mov
jmp
push
mov
jmp
enter
mov
std
lods
cmp
lar
sub
test
mov
movsb
sti
mov
pop
mov
std
sub
and
divl
lahf
ret
das
mov
stos
outsl
cmp
rcll
lock
daa
xchg
arpl
jnp
pop
dec
cmp
jb
mov
cltd
jmp
enter
and
cmp
jno
filds
xchg
insl
sbb
mov
pop
pop
push
jne
push
or
xorl
fs
sub
pop
add
int
mov
cmp
pop
lods
nop
cmp
rcr
mov
or
add
pusha
lea
mov
sbb
add
xor
cld
adc
inc
insl
add
cwtl
add
in
movsl
pushw
inc
popa
mov
pop
orl
insb
out
or
mov
xor
mov
cli
xchg
fnstenv
aam
popa
pop
aad
mov
seto
mov
mov
arpl
cmpb
bound
shlb
mov
and
loope
sub
scas
mov
push
inc
ds
or
test
test
pop
lret
adcl
adc
cmp
push
out
jmp
fs
movsb
push
sbb
push
movsb
fcmovb
cli
movsl
into
dec
popf
pop
enter
sbbl
or
sub
cmp
sbb
xor
sti
xlat
icebp
pop
inc
adc
or
aas
repz
fs
jb
sbb
out
add
add
call
fsts
xchg
loop
or
fs
outsl
dec
sub
xlat
or
pop
insb
or
jo
inc
aaa
jno
rolb
inc
inc
xchg
fisubrs
sarb
ret
jecxz
xchg
fcoml
adc
in
ds
push
sahf
mov
iret
push
mov
mov
dec
xchg
addr16
dec
shlb
pushf
data16
cmpsl
add
add
outsl
and
mov
or
aad
lret
adc
xor
sbb
imul
pop
and
stos
push
or
test
push
fwait
xor
jle
adc
in
pop
pop
or
push
mov
icebp
and
jae
sub
lods
sub
or
pushf
pop
stc
jl
fwait
cltd
int
jp
sbb
call
fidivrl
scas
rclb
in
or
nop
mov
movsb
push
xchg
daa
pop
rcl
int3
rcl
scas
mov
push
xor
andb
andb
insl
xchg
push
std
loope
adc
std
xchg
and
xor
fs
mov
sub
notl
pusha
pop
cmc
inc
lret
pop
enter
xchg
subb
insl
push
repz
cmp
std
lods
repnz
cmp
data16
sbb
or
out
adc
pusha
outsl
and
mov
cld
sub
inc
pop
mov
push
repnz
frstpm(287
divl
popf
test
jp
xor
jae
enter
inc
test
mov
jl
push
cld
cli
adc
xchg
or
imul
fstpt
and
push
inc
lret
dec
loope
je
fdivrs
and
lcall
xlat
outsb
test
imul
pop
cmpb
jns
icebp
icebp
sub
imul
int3
pushf
ret
jns
shrb
out
mov
aaa
cmp
cmp
push
andl
bound
sbb
test
xor
or
adc
outsl
in
inc
xchg
pop
dec
stos
cmpsb
fsubrs
and
aam
jle
in
push
leave
stos
xor
add
sbb
and
shll
jmp
ss
shll
or
or
insl
mov
sub
adc
insb
push
mov
shll
and
mov
daa
fsqrt
xlat
sbbl
fists
cli
cwtl
jg
xlat
arpl
jmp
mov
es
shr
enter
cmp
imul
sbb
fwait
mov
push
nop
xchg
out
ljmp
dec
sbb
push
imul
loope
jge
mov
xchg
mov
rorl
addl
sub
rcll
jns
ret
mov
jge
sub
inc
push
mov
pop
enter
test
push
add
or
sub
out
inc
xchg
lea
jb
les
inc
sub
js
hlt
rclb
sti
xor
cmp
add
xorl
addl
in
push
sti
push
in
shl
pop
movsb
xchg
and
popf
xor
sub
fwait
mov
or
notb
je
test
bound
call
jb
add
and
and
pop
mov
and
dec
sarl
sbb
pop
jl
add
imul
imul
or
mov
scas
or
add
add
movsb
jns
in
push
sbb
jb
push
fbstp
dec
cmc
maxps
jmp
or
jmp
or
jns
pop
jns
pop
mov
pop
mov
aas
and
push
stos
mov
inc
loopne
sarb
enter
adc
out
push
xor
inc
popf
scas
stos
jo
test
sub
push
mov
cmc
test
das
stos
stos
add
mov
xor
mov
rolb
sbb
push
dec
mov
pop
repz
jbe
lds
mov
dec
insl
js
repz
mov
arpl
jno
data16
sub
cli
ljmp
in
mov
daa
mov
jp
jo
movsb
mov
or
ja
mov
xchg
imul
jae,pt
mov
or
dec
inc
xchg
pop
jno
mov
pop
cmp
add
lock
pop
push
cmpsb
push
sub
out
push
mov
mov
mov
je
stos
and
fldcw
cld
ret
ret
es
jbe
cmp
int
movsl
and
int3
xchg
sbb
clc
aaa
fisubrs
aad
add
cmp
sbb
and
fnstsw
in
add
sbb
mov
jg
jp
pushw
loopne
out
popa
and
mov
imulb
mov
cmp
or
push
cmp
out
shlb
mov
fwait
push
in
movsb
xchg
or
repnz
icebp
and
ja
or
insl
jp
xor
inc
adc
test
scas
iret
dec
xchg
test
js
not
ror
xchg
rorb
daa
loop
fisubrl
push
pop
cli
test
cmp
aam
or
xchg
enter
jo
add
jecxz
idivb
xchg
and
shl
add
or
inc
inc
adcb
mov
jecxz
push
push
imul
add
sub
mov
enter
ficoml
xchg
imul
fs
mov
pop
cmp
in
aad
lret
and
sbb
lret
inc
data16
subl
sbb
movsb
nop
pop
pop
jmp
addb
cs
cmp
mov
dec
leave
lea
std
and
inc
add
arpl
cmp
pop
mov
xor
mov
push
notb
cmp
push
or
les
std
sub
leave
xor
sub
ss
cmp
push
pop
jno
sbb
add
xchg
lods
sub
incb
fwait
mov
sbb
clc
mov
pop
mov
testb
jg
or
jle
and
lea
mov
inc
leave
lret
sbb
fwait
cmpl
mov
mov
push
push
mov
dec
data16
int
mov
insb
dec
in
add
and
cmp
mull
pop
mov
add
pop
in
jo
fidivl
enter
hlt
push
sub
sub
sti
lds
and
jecxz
dec
lds
xlat
xchg
xor
aam
xchg
aas
and
mov
fwait
pusha
addr16
mov
lods
test
mov
pop
lods
loopne
loop
or
test
push
pop
and
or
cmp
scas
lea
and
jns
inc
cmc
adc
xor
imul
sahf
stos
or
aam
ds
dec
repz
clc
rolb
and
inc
add
movsl
scas
push
loop
rcll
in
in
loope
pop
xor
cwtl
test
mov
push
fistpll
pop
fisubrs
mov
pusha
repz
ja
ljmp
or
in
lret
gs
inc
adc
sub
jno
cmpsl
add
cmp
pop
jecxz
xor
scas
cmp
adc
rolb
xchg
jge
dec
daa
jl
push
mov
test
inc
loopne
push
jnp
jg
mov
mov
fwait
arpl
xchg
popa
jmp
inc
ror
out
mov
cmp
or
sub
clc
test
fstpl
adc
fstpt
mov
and
mov
and
inc
cmp
mov
bnd
call
cld
outsb
outsl
jbe
std
inc
cmp
mov
lret
sbb
notl
adc
dec
ja
cmc
dec
ljmp
xchg
mov
and
mov
sti
popf
and
shrb
dec
cmp
andl
cmp
adc
mov
fdivrp
aad
movsb
dec
inc
fs
lds
mov
mov
or
pop
mov
insl
rcrl
out
jo
mov
arpl
push
and
cmp
jo
jns
mov
or
dec
divl
test
mov
push
sub
dec
xchg
cmpb
movsl
sbb
inc
jae
mov
jmp
jecxz
enter
lret
adc
gs
lea
call
ret
mov
jbe
jo
adc
xchg
test
fldt
mov
mov
sub
jb
pusha
orl
inc
dec
xchg
in
add
mull
leave
cmpsb
rcrb
daa
sbb
enter
xchg
out
icebp
adc
adc
pop
pop
jg
leave
xchg
adc
add
into
inc
mov
nop
aaa
aaa
or
pusha
xlat
mov
push
mov
mov
hlt
cmp
or
rcll
mov
sub
js
add
sub
dec
push
aam
and
mov
push
jecxz
xchg
and
lods
pop
lods
repz
das
sbb
and
mov
repnz
mov
out
ja
jo
shlb
xchg
xlat
shrb
mov
mov
push
add
and
cmpsl
ret
in
lret
xor
scas
lea
in
xchg
and
dec
jo
mov
mov
rcr
shll
xchg
nop
in
push
and
shrl
mov
xchg
lock
xor
mov
xchg
pop
xchg
filds
adc
mov
push
aam
test
out
mov
dec
je
add
xor
xor
cltd
or
cmc
push
and
push
cmp
add
cmp
and
dec
jp
testl
fwait
call
repz
nop
add
jge
jge
sbb
dec
xchg
sbb
cmp
inc
pop
xchg
les
jb
data16
pusha
push
sbb
sub
xchg
mov
jg
call
xor
xor
mov
xor
test
shll
xchg
out
jl
jns
cmpsl
data16
or
mov
mov
arpl
fs
push
bound
xor
xchg
fs
sub
xor
in
jmp
xchg
loopne
push
in
clc
xchg
cld
ljmp
fnstcw
es
loopne
mov
fptan
jp
int
fidivrs
mov
fmull
mov
xor
mov
shlb
xchg
inc
cmp
sub
cmc
out
nop
jmp
aas
repnz
fisubl
add
add
rcr
in
rcll
or
dec
add
and
sbb
adc
int3
jnp
add
pop
sarb
daa
test
outsl
in
jmp
cmp
jo
pop
aam
les
mov
aaa
shl
test
mov
fs
and
and
outsb
ss
push
mov
in
or
loopne
adc
push
dec
cmp
in
hlt
ljmp
xchg
leave
push
vphaddwq
inc
push
lea
xor
inc
lret
xchg
pop
push
mov
push
and
stc
adc
pop
adc
jge
push
xchg
lea
dec
stos
aad
lret
sub
aaa
sub
fildl
stos
add
in
jno
or
xchg
push
sbb
push
jmp
or
xchg
xchg
push
push
aad
sub
lea
mov
push
jne
repnz
aad
or
fxam
ljmp
loop
cmpsb
mov
inc
loope
mov
scas
xchg
mov
out
sti
and
fbld
mov
test
sub
cmpsb
lret
test
fadds
das
pop
ss
jmp
sub
dec
je
dec
mov
or
popa
dec
dec
push
in
inc
test
lea
pusha
sbb
fadds
add
jbe
movsl
loope
mov
pop
imul
sbb
jle
pop
and
dec
in
pop
dec
imul
pop
and
bound
bound
sub
cld
mov
fmull
into
cmpsb
push
push
xor
test
sub
adc
arpl
lds
call
sub
int
jle
pop
push
sbb
pusha
ss
fdiv
dec
xchg
adc
xor
add
test
leave
dec
gs
lods
mov
scas
fsts
mov
idivl
sub
mov
xchg
repz
jne
pop
mov
mov
mov
and
push
add
movsb
mov
inc
xchg
cmp
jbe
es
lret
std
arpl
aad
xchg
push
dec
mov
int
hlt
lods
cmc
cmp
dec
pop
xorl
pop
xor
data16
out
scas
outsb
or
jnp
cs
sub
lock
arpl
push
je
cmc
mov
add
shlb
cmp
pop
fmulp
rcll
xchg
fwait
fs
mov
out
testl
jg
push
jns
push
lahf
fdivs
mov
push
and
outsl
add
flds
loop
dec
cmp
lcall
insl
xor
xchg
pop
xchg
or
jp
pusha
dec
mov
or
int
add
orl
cwtl
inc
lcall
dec
es
dec
shll
out
sbb
test
xchg
mov
in
xchg
insb
lret
add
or
xchg
leave
test
adc
fadd
test
arpl
outsl
mov
imul
mov
es
push
mov
icebp
pop
push
fimull
movsb
push
loop
xor
imull
sbb
pop
push
clc
test
shr
dec
dec
jmp
mov
cltd
outsl
add
js
sahf
lods
nop
bound
mov
sub
movsb
sbb
xor
push
sbb
iret
mov
lea
jo
or
sbb
xchg
jae
cli
mov
in
dec
xchg
negb
or
add
push
and
lahf
inc
add
push
iret
xor
inc
cmpsb
sti
jecxz
pop
rcrb
das
popf
add
sbb
aad
adc
sub
and
inc
outsb
cmp
and
cmp
ss
inc
das
cld
mov
stos
mov
xchg
lahf
jo
mov
and
jg
inc
cmp
xchg
subl
adc
addr16
pop
xchg
ja
shrb
sbb
jb
je
fidivl
adc
insl
es
cmp
fcos
mov
int
mov
daa
dec
mov
push
sub
xchg
es
mov
bound
jle
fldenv
insb
xor
addr16
mov
pusha
andl
sub
ja
xchg
call
pop
ret
int3
cmc
pop
lahf
sbb
cmpsl
dec
sub
xchg
out
sub
call
mov
lcall
add
in
pop
sub
shll
leave
pop
andnps
xchg
push
sbb
clc
pop
cmp
scas
sub
add
mov
aaa
cmc
sbb
cwtl
xor
jge
cld
jae
nop
or
shrl
pop
out
jns
mov
cmp
inc
cmp
roll
fsubs
daa
pop
stc
adc
pop
mov
or
insl
stos
shlb
pop
lret
push
xchg
cld
jle
andb
or
jns
fcoms
pushl
sub
cmp
lods
push
out
out
pop
push
flds
mov
mov
scas
cmp
xchg
ret
mov
pusha
cmp
jnp
mov
xchg
iret
sub
jle
mov
mov
aas
cmp
sbb
pop
aaa
cld
push
stc
aas
push
int3
or
gs
push
sbb
outsl
sbb
jp
sub
in
push
add
and
shlb
push
insl
fists
sbb
addr16
scas
xchg
mov
fcmovnbe
mov
aaa
dec
jnp
push
outsb
shlb
sub
popf
scas
cli
idivl
push
xor
push
dec
adc
and
mov
jge
aad
repz
lods
mov
inc
push
cmp
mov
mov
fcompl
test
inc
cmpsb
aad
out
gs
in
xchg
or
sar
jnp
test
adc
hlt
frstor
insb
rorl
loope
lea
xchg
and
cwtl
imul
push
jl
inc
jns
test
xchg
xchg
iret
add
and
aas
fisttpl
mov
clc
outsb
jmp
stc
pop
outsl
mov
out
jbe
frstor
sub
sarb
or
fsubrs
fstps
inc
test
adc
adc
mov
pop
aaa
nop
out
enter
leave
inc
mov
loop
push
mov
insl
pop
cmpsl
jecxz
sub
xchg
ljmp
sahf
cmp
addl
sti
sub
or
imul
or
insl
sbb
lahf
pop
xchg
jo
or
es
std
or
xor
lahf
repz
adc
sbb
ret
fdivs
inc
pop
pushf
cmp
es
inc
es
aad
imul
pop
loopne
pushf
lcall
bound
xchg
dec
shll
in
fldenv
mov
mov
out
sub
and
jb
dec
pop
stos
pop
enter
test
sbb
stc
stc
popf
pop
neg
xor
inc
ret
sti
int
mov
push
push
xchg
ljmp
mov
push
push
and
jnp
xor
push
xchg
enter
sbb
push
cmp
mov
jb
pop
sbb
adc
cmp
fs
movsl
add
sub
sti
mov
clc
and
stc
or
lcall
sbb
xchg
cmc
or
mov
imul
mov
je
sbb
pop
push
add
xchg
pop
push
shll
arpl
repnz
fsubrs
data16
sbb
dec
fsubr
jno
stc
push
fsub
and
sarl
pop
jmp
jp
rorb
pop
inc
pop
scas
out
lods
or
outsb
mov
ret
xorb
mov
push
ret
cs
mov
lea
outsl
pop
dec
mov
dec
sbb
inc
gs
inc
dec
cmp
fildll
adc
mov
xchg
flds
fisubs
jge
out
sbbl
shll
jno
push
data16
scas
neg
mov
push
out
xchg
fiaddl
jnp
xchg
outsl
and
dec
and
jge
fwait
out
rorl
xor
movsb
addr16
sti
dec
movsl
push
out
lret
pop
push
push
out
test
push
dec
daa
pusha
cli
incl
pop
sbb
xchg
stc
cwtl
xchg
imulb
loope
xor
mov
pop
inc
sub
stos
out
mov
xor
push
add
aas
icebp
bound
outsb
pop
clc
inc
lock
fdivrl
dec
push
ret
cmp
dec
inc
es
stos
and
mov
dec
push
jmp
test
inc
rcrl
clc
cmp
inc
pop
int3
aad
cmp
mov
or
cmpsb
pop
rcrb
lcall
repnz
jle
adc
xor
pushf
cmc
cltd
es
rcrl
arpl
nop
out
mov
int
sbb
mov
jmp
mov
popf
mov
fst
cmpb
aaa
mov
into
lods
sbb
mov
dec
add
adc
or
dec
pushf
pushf
sub
outsb
cmpsl
sub
sub
outsb
mov
pop
imul
stos
out
sbb
outsl
or
jb
add
mov
leave
lock
push
gs
mov
cmp
das
divb
jge
inc
pop
xchg
insb
pop
push
push
inc
inc
mov
test
push
inc
ljmp
fstps
inc
push
jp
enter
push
clc
fwait
sub
push
push
test
xchg
fcompl
and
flds
push
sbb
divb
addr16
sub
and
mov
lret
mov
mov
lcall
sbb
xchg
xorb
push
insb
lock
lret
int3
and
fistps
sbbl
jo
push
jmp
pop
and
insb
mov
nop
and
dec
loope,pt
sbb
dec
adc
xor
or
out
test
movl
aam
imul
in
fimuls
inc
mov
sub
andb
data16
or
and
xchg
or
call
xchg
icebp
push
push
cmp
iret
sbb
inc
in
popa
sub
mov
mov
add
aad
sbb
sbb
mov
push
jno
or
jl
loop
pop
xor
jmp
pusha
adc
inc
cmp
push
aas
and
roll
sub
push
adc
jp
adc
dec
das
fidivl
ret
in
xchg
push
dec
lret
dec
mov
xchg
neg
mov
xor
dec
adc
pop
in
sarb
and
idivl
and
inc
jg
sub
fld
mov
push
movsb
test
push
cwtl
stos
adc
sbb
or
into
inc
mov
push
cs
sub
pop
sub
jp
jl
rcrl
fcoms
enter
push
add
xlat
xor
mov
xor
xchg
mov
adc
dec
addr16
cld
mov
lods
cmp
inc
inc
cmc
xchg
xchg
scas
inc
out
pushf
es
jb
fnstenv
mov
push
push
ret
punpckhdq
lret
outsb
imul
push
jecxz
fadd
and
arpl
es
fadds
xlat
adc
push
pop
punpcklwd
sub
xchg
dec
inc
fwait
stc
dec
adc
push
in
pop
sub
mov
in
jnp
mov
aaa
imul
inc
mov
enter
push
loope
xor
xor
mov
dec
loope
and
lods
sbb
jnp
inc
or
dec
lret
push
cmp
in
jb
xchg
scas
adc
bound
sahf
add
cli
enter
xchg
arpl
xor
pop
pop
cmp
xchg
cmp
mov
in
adc
aad
test
int3
lret
mov
lret
and
mov
rorl
lds
mull
sti
loope
scas
scas
test
popf
jmp
adc
pop
out
or
movsb
cmp
lock
rcll
mov
fildll
sahf
sub
lods
loope
cmpsl
dec
arpl
or
inc
cmp
call
or
outsb
andb
sub
or
xchg
les
pop
xchg
lret
sarl
ror
arpl
mov
push
mov
cmp
jb
rcrl
push
repz
pusha
movsl
mov
sub
inc
leave
jmp
fstl
and
xor
sub
push
cmp
push
dec
jecxz
sbb
and
inc
ljmp
jae
aaa
push
daa
ljmp
imul
mov
das
test
dec
nop
movsb
adc
sbb
addr16
or
lret
mov
shlb
push
push
pop
stos
testl
insl
pop
add
std
lock
jb
mov
popa
cmp
clc
xor
or
and
shrl
je
and
mov
sub
fldenv
in
mov
dec
xorb
mov
xor
mov
xor
jnp
xor
push
jno
xchg
ljmp
faddp
jb
jbe
and
adc
roll
mov
mov
ja
jp
pusha
jae
adc
cmp
xor
fdivrl
dec
je
push
mov
sahf
pop
push
aas
mov
pop
scas
popa
lahf
pop
mov
jo
mov
dec
or
stos
mov
decl
fimuls
jne
adc
jo
stos
inc
cli
mov
xchg
aam
scas
aad
dec
xchg
and
xchg
mov
or
divl
es
pop
push
jmp
adc
xchg
push
xchg
mov
inc
repz
jecxz
jo
js
cmc
mov
sub
call
mov
push
adc
jge
xchg
data16
dec
cli
dec
sub
sub
sub
insb
xor
cmpsl
adc
push
test
adc
xchg
mov
and
push
cltd
xchg
cmpsl
push
mov
or
rolb
or
sbb
dec
mov
cmc
mov
aad
pop
es
fdivrl
stos
popf
dec
cmp
sti
jb
icebp
mov
ret
add
cmp
sbb
and
push
mov
or
lahf
lcall
lcall
add
jne
sahf
loop
cwtl
in
lods
iret
jne
arpl
mov
sbb
xchg
sbb
leave
pop
and
jae
mov
cmp
pop
lock
out
dec
mov
or
mov
outsl
inc
inc
cs
sub
shll
mov
cmp
xchg
cmp
dec
xor
fs
call
jecxz
test
jmp
xlat
pop
je
pusha
mov
pop
inc
in
imul
addr16
ficompl
pusha
xchg
and
pop
mov
pop
push
idivl
loop
sbb
mov
sarl
adcl
xor
in
ss
add
cltd
outsb
dec
in
shlb
imull
insb
xchg
add
pop
shlb
push
imul
bound
push
js
xlat
in
lret
pop
mov
cmp
shll
repnz
xlat
xchg
sti
test
roll
lock
jo
or
cmpb
push
addr16
scas
inc
icebp
dec
xchg
inc
jge
xchg
pop
sub
xchg
adc
or
mov
inc
sbb
adc
test
adc
pop
test
arpl
push
sbb
pop
nop
insl
ret
push
in
fistl
mov
ficoml
xchg
push
add
xlat
xchg
fnstcw
imul
mov
inc
ret
jns
adc
ljmp
repz
leave
pop
jmp
into
adc
mov
push
in
xor
gs
in
mov
aam
cmp
fidivs
in
xor
adc
sbb
xor
sbb
enter
mov
push
or
pushl
cmpsb
mov
fwait
movsb
idiv
lcall
adcb
xor
or
aas
dec
push
xor
ret
jbe
inc
jns
adc
popa
lock
pop
pop
lods
xor
enter
push
add
in
js
cmp
sbb
je
addl
cs
cmp
push
add
cmp
lods
pop
loopne
fs
aaa
and
ja
sbb
sub
xchg
pop
and
fldenv
out
enter
dec
pop
pop
xor
xor
ret
inc
xlat
sbb
imul
or
pop
xorb
jo,pn
lcall
mov
inc
sti
push
lcall
push
pop
mov
xchg
lock
add
ja
mov
dec
inc
dec
repz
sbb
cmpsb
cmp
sti
fiaddl
popf
rclb
lahf
xchg
cld
outsb
push
fcomps
and
test
pushf
add
inc
cmp
push
mov
jp
mov
test
pop
push
xchg
xchg
or
push
fstpt
sti
adc
sub
adc
test
stc
lahf
push
sti
xchg
sarb
movsb
fbstp
leave
push
pop
sbb
outsl
add
inc
dec
push
or
inc
mov
push
pop
bound
jp
stc
icebp
fisttpll
shll
mov
sbb
or
lds
sub
push
lock
add
std
inc
popa
xorl
mov
stos
pop
and
negb
fdivrs
ljmp
xchg
rolb
push
lock
cmp
sub
fnstenv
xchg
in
arpl
nop
imul
jns,pt
pop
imul
repz
mov
sbb
and
pop
outsb
cmp
shll
rcl
jp
push
inc
out
sbb
dec
sub
add
sbb
or
mov
mov
push
sub
mov
in
mov
mov
mov
cmovg
cmpsl
test
rcrb
ss
push
lea
mov
lock
leave
and
repz
pop
xchg
mov
mov
push
push
cmpsb
sahf
scas
fisubl
dec
insl
bts
cmp
sub
ljmp
mov
add
mov
xchg
dec
lods
addr16
push
inc
push
mov
lret
addl
repz
sub
fcomps
jns
testl
popa
in
imul
xchg
scas
push
popa
hlt
mov
fnstsw
or
and
mov
jg
sbb
xchg
push
xchg
or
adc
xchg
sub
lcall
inc
cltd
push
test
push
mov
sub
repz
iret
mov
daa
popf
sbb
pop
sub
pop
mov
inc
ljmp
ss
dec
cld
int3
dec
ret
xor
popf
add
pop
ja
mov
mov
xchg
ret
and
ja
cmp
mov
and
aad
xchg
add
dec
mov
or
cmp
out
xorl
jp
and
sbb
flds
sub
inc
test
scas
push
pop
cmpsb
pop
cli
pop
popf
ja
jnp
insb
push
int3
pushf
mov
sub
lock
and
inc
stos
hlt
xchg
pop
adc
adc
jle
or
test
cmp
stos
add
loope
mov
test
call
lcall
xchg
outsl
or
jno
mov
ret
jae
aad
dec
or
out
movsb
shl
mov
call
mov
fld
mov
dec
jns
bound
pop
mov
fisubl
int3
add
fs
sti
mov
ja
inc
cmp
sarl
das
sbb
cli
mov
pop
outsl
into
stos
iret
add
dec
mov
pop
pop
inc
pop
mov
cli
jp
inc
adc
arpl
and
adc
imul
xchg
dec
arpl
cli
insl
sar
xor
cmp
lret
jne
out
jno
outsb
push
dec
lcall
mov
pop
ds
jo
js
pop
jno
jne
out
mov
push
mov
fldlg2
mov
lahf
outsl
fidivrs
dec
int3
jnp
pop
push
popf
in
cwtl
lea
xor
xchg
adc
or
inc
out
add
mul
adc
in
mov
lahf
jae
or
push
jo
dec
jmp
iret
popa
dec
mov
xchg
mov
roll
sti
je
cs
ljmp
adc
fisubrl
lock
fadd
insl
adc
pop
xor
das
inc
cmp
push
lock
into
and
jns
repz
and
icebp
xor
push
enter
pop
pop
lock
jbe
leave
shlb
mov
cmc
lds
ss
sbb
dec
jmp
ss
aaa
jge
lcall
call
add
and
icebp
ljmp
xchg
cltd
fisttps
stos
inc
popf
pop
mov
lods
rorl
hlt
lock
jp,pn
test
cmp
pop
cmp
cmp
out
mov
adc
jle
aas
leave
pop
cmp
mov
mov
enter
enter
inc
ss
adc
jnp
popa
jecxz
std
fwait
pop
mov
adc
cmp
and
adc
outsb
rcll
aaa
test
ja
ljmp
and
addr16
orl
jecxz
jmp
mov
into
pop
out
cmp
xchg
jg
xchg
xor
xchg
rcrb
mov
loope
dec
fdivrl
ret
cmp
jl
mov
dec
stos
inc
data16
dec
aaa
sub
int3
out
mov
jnp
das
and
inc
mov
int3
and
shll
repz
dec
push
dec
push
outsl
cli
pop
mov
test
mov
int3
insl
subl
pop
fstpt
inc
cmp
adc
std
and
das
pop
hlt
pusha
mov
mov
lods
inc
sub
mov
push
jb
mov
jo
inc
iret
lahf
adc
push
imul
ja
mov
add
out
jns
into
shlb
pop
sbb
leave
incl
pop
js
enter
sub
pusha
test
test
sahf
out
iret
dec
in
sub
mov
xor
es
es
fnstsw
lret
scas
push
lahf
adcb
sub
jae
stos
into
mov
sarl
xchg
loope
lret
add
jl
pop
xlat
outsb
sbb
mov
and
pop
jb
out
xor
inc
mov
or
hlt
and
or
cmp
sbb
imul
jno
dec
test
shrb
std
sbb
cld
mov
jle
pop
hlt
dec
ret
push
push
inc
lahf
or
or
adc
push
cwtl
inc
ds
movsb
pop
insb
mov
sbb
iret
sub
sti
fs
pop
jnp
mov
shrl
cmc
cmp
fcom
push
or
sub
cmp
mov
jne
push
outsl
in
ljmp
sub
int3
js
fwait
std
es
dec
mov
arpl
inc
scas
cmp
or
jbe
call
imul
fcmovu
cmp
dec
xchg
mov
pop
mov
or
xor
jbe
fsubrl
out
and
and
clc
cmc
cs
test
push
jb
int
in
inc
sub
rcl
jecxz
mov
jns
aaa
popa
push
sti
xor
addr16
dec
stos
sbb
scas
and
repz
cmp
rcrb
aas
in
fwait
loopne
cs
push
adc
insb
lea
sbb
pop
mov
lods
dec
int3
decb
inc
xor
inc
test
mov
or
ret
add
sahf
cld
imul
jge
add
out
daa
lea
das
outsb
out
or
testb
iret
lret
rorb
out
sbb
int
mov
cmc
cmp
sbb
andl
mov
dec
jge
sbb
cmp
mov
imul
les
jmp
mov
movsl
imul
in
pop
adc
push
push
paddsw
sbb
imul
sub
das
leave
jp
mov
pop
xlat
pop
in
sub
dec
popf
sbb
sub
movsb
mov
aaa
adc
lock
and
sub
lret
rcrl
xchg
and
xlat
push
dec
pop
loopne
mov
inc
loope
movb
pop
ds
ljmp
icebp
dec
dec
sbb
mov
mov
pop
lret
pusha
and
cmp
pop
or
cwtl
js
and
push
insl
fs
sub
or
push
loop
pusha
mov
add
in
lahf
jnp
and
inc
jecxz
inc
and
jl
push
js
pop
push
hlt
shl
push
xor
jae
stc
fucomp
and
add
mov
outsl
sbb
fdivl
xor
adc
scas
cli
xchg
data16
lret
pop
xchg
mov
and
mov
jno
cmp
aam
inc
dec
bound
ds
scas
ss
es
fwait
movsl
cmp
mov
mov
jl
mov
push
sbb
aas
lds
jp
std
push
int3
sub
mov
mov
out
and
mov
add
cmp
xor
adc
sub
ds
cmp
outsb
mov
inc
cmp
xchg
mov
pusha
into
mov
in
mov
push
insb
in
cs
addl
xor
pop
idiv
ret
test
out
ds
repnz
dec
imul
aam
push
sbb
pop
inc
push
test
xorl
cld
push
lea
lret
mov
xor
pop
loope
test
bound
pop
xor
push
inc
loop
adc
xlat
bnd
push
pop
add
add
int3
fbld
cmc
popf
lret
add
dec
pop
push
imul
jnp
adc
sarl
call
push
clc
loop
and
mov
push
arpl
sbb
js
lds
mov
push
gs
xchg
int3
notl
daa
ds
pusha
cmp
ficoms
or
dec
jge
jl
dec
push
jg
jno
push
sahf
cmpsb
xchg
inc
push
out
insb
adc
push
aas
dec
or
scas
shrb
xchg
mov
mov
in
sbb
out
inc
adc
mov
enter
jnp
out
cltd
insb
mov
xchg
pop
pusha
xor
pop
rcrl
insl
outsl
mov
adc
xor
mov
and
cmpsl
ss
repnz
ljmp
pop
xchg
mov
mov
pop
dec
adc
mov
js
sub
and
ret
push
lods
repz
rorb
pop
dec
fmull
stc
incl
and
xchg
lret
pop
ret
aam
mov
je
fisttps
dec
jecxz
sbb
jnp
cmp
jecxz
pop
pop
stc
outsl
add
mov
jo
adc
in
loopne
push
inc
movsl
int3
lret
jnp
mov
es
push
sub
jmp
push
les
mov
insb
popf
push
pop
inc
negb
sbb
popw
push
call
xchg
pop
mov
pop
adc
jo
nop
jg
adc
ljmp
sti
sub
mov
inc
and
inc
aas
push
addr16
dec
icebp
and
out
imul
push
pop
fldcw
in
push
sahf
mov
xor
outsl
shlb
and
sbb
loopne
mov
ljmp
cmp
stos
fldl
addb
mov
pop
inc
mov
outsl
in
sbb
lods
mov
arpl
shll
pusha
cmp
andps
xchg
pop
pusha
mov
jns
sbb
mov
xor
scas
and
cmp
dec
iret
mov
test
js
or
adc
gs
mov
outsl
rolb
xchg
mov
pop
psrlq
ret
mov
ror
out
lods
jnp
inc
mov
loop
xchg
rcrb
xor
cmp
xlat
sbb
insl
pop
mov
aaa
pop
jle
insl
lret
mov
cmp
adc
cmpsl
or
shll
push
sub
jge
jo
mov
sub
fs
xor
movsl
and
sub
in
cmp
sbb
mov
fwait
pop
lret
negb
ficompl
push
and
lods
mov
or
xor
aam
adc
push
sarl
sub
xor
jp
pop
int3
push
call
mov
lret
mov
jp
test
adc
sbb
and
inc
push
movsl
daa
mov
ja
dec
and
movsb
test
out
mov
cmpsb
xor
scas
pop
mov
mov
pop
pushf
add
mov
js
and
lcall
jge
mov
icebp
stos
dec
int
data16
inc
loop
lahf
in
aad
sbb
mov
mov
rcll
mov
movl
mov
adc
cmc
sub
jecxz
pop
push
negb
fsubl
fwait
mov
mov
mov
frstor
jno
clc
divl
stos
add
inc
daa
mov
hlt
xor
sub
mov
xchg
sub
and
adc
insb
cli
test
sub
pusha
sti
mov
push
inc
pop
jp
decl
push
pop
sbb
lss
inc
jo
testl
inc
add
sbb
xchg
scas
outsb
mov
sub
aam
dec
pushw
roll
sbbb
imul
jo
dec
or
adc
or
dec
cmp
fdivs
and
sahf
fsts
test
cmp
fcompl
push
push
mov
and
test
mov
out
loopne
aas
out
pop
mov
mov
add
cmp
mov
inc
ljmp
push
adc
and
push
dec
sbb
xor
divl
cmovnp
and
jecxz
adc
adc
mov
aaa
sub
cmp
int
ds
cmpsb
scas
pushf
add
iret
sub
dec
clc
jg
sub
imul
mov
adc
scas
xchg
rolb
ljmp
jns
lea
lock
jnp
roll
aam
push
ljmp
outsl
dec
and
inc
aad
leave
adcb
pop
cmpsb
sbb
mov
pop
xchg
cmpsl
push
fsub
xchg
mov
push
in
dec
pop
inc
xor
pusha
rcr
mov
mov
sbb
mov
cmp
pushf
inc
sbb
dec
lods
dec
dec
daa
or
add
push
cmc
cmc
in
loope
shrb
add
adc
inc
add
inc
shlb
pop
insl
jp
dec
mov
fnstsw
stc
mov
jns
xchg
fistps
mov
mov
aad
int
xlat
mov
rsm
std
ret
sub
sub
mov
push
add
xchg
fstp
add
int
mov
inc
scas
int3
movsb
or
outsl
sub
bnd
sti
bound
mov
fcom
or
nop
out
scas
adcb
mov
cmp
out
cwtl
add
daa
xor
jb
and
lret
mov
rorl
insl
or
or
adc
stc
pop
sub
aam
pop
daa
mov
daa
fmull
dec
jp
sbb
in
pop
sub
push
adc
xor
or
scas
popa
in
push
jne
pop
dec
xchg
sbb
jmp
mov
mov
and
mov
clc
sub
push
push
add
rcl
jg
mov
pop
roll
icebp
add
or
jmp
push
movsb
or
xor
dec
mov
je
mov
or
push
xor
int
nop
lock
inc
pop
fnstcw
and
add
lahf
adc
pop
pop
lahf
push
lea
mov
mov
out
xchg
cmpsl
push
les
pop
in
lret
test
rcrl
int3
das
add
dec
cmp
push
mov
xchg
aad
movsb
aas
lahf
xor
push
sbb
scas
repnz
das
push
jb
adc
jg
mov
mov
xchg
pop
sub
mov
cmc
sub
sbb
sub
std
and
push
xchg
inc
jno
dec
cltd
mov
call
xor
xchg
clc
jnp
lcall
jle
dec
ret
std
add
jo
dec
mov
es
jmp
rolb
dec
sub
dec
mov
mov
je
movsl
xlat
sub
fdivrs
test
jmp
jge
mov
das
jno
cld
xchg
xor
and
mov
xchg
xor
and
movsb
cmc
push
push
jmp
mov
inc
dec
call
push
lret
adc
movsb
cvtps2pi
fimull
subb
imul
adc
xchg
jl
jmp
test
lret
pop
or
xchg
out
jb
cmpsb
add
stos
addr16
mov
les
dec
xor
movsl
xchg
mov
es
push
sub
xchg
or
pop
lds
ror
or
aas
pop
pushf
aas
push
outsl
xchg
movsl
aaa
ret
fnsave
and
add
cmp
push
pop
cmp
inc
push
mov
push
ret
mov
enter
push
push
clc
rorl
repz
dec
mov
inc
cmp
and
outsb
push
xchg
xchg
cltd
shl
js
pop
aas
xorb
dec
pop
shlb
int
pop
inc
outsl
mov
pop
mov
jmp
test
push
cmp
dec
pop
rolb
int
clc
int
jnp
lcall
hlt
jmp
fsubrl
aas
lea
call
repnz
xor
out
sti
sarl
js
push
mov
fiadds
gs
cmp
bound
in
lret
jmp
cmp
or
iret
mov
scas
andb
pop
mov
stos
pop
mov
xor
mov
pop
xor
xlat
pop
xlat
cmpsb
in
mov
into
fistps
inc
jnp
cmpsl
popl
add
ljmp
pop
sahf
push
xchg
xor
adc
mov
inc
sti
fistps
in
ljmp
lret
jecxz
mov
push
ds
mov
mov
lcall
in
ja
jbe
inc
enter
sbb
mov
mov
add
mov
xor
or
ret
cmp
pop
lahf
scas
adc
cmp
jo
and
mov
xchg
enter
cmpsb
cmp
adcl
js
sahf
je
push
xor
outsl
aad
sahf
gs
das
outsl
icebp
test
mov
inc
pop
sbb
jb
sbb
sub
inc
lcall
jp
dec
jmp
aam
pop
enter
sbb
lods
add
adc
jecxz
pop
lret
or
and
jne
mov
jne
icebp
lea
fdivl
xchg
pop
pop
es
pushf
or
inc
sub
add
pop
enter
sbb
daa
mov
das
add
inc
shll
xor
fwait
sub
push
shll
test
sub
setns
or
mov
arpl
adc
xchg
int3
jle
rolb
xchg
sbb
sahf
fwait
scas
ret
cmovl
pop
xor
push
add
in
cltd
out
or
repnz
enter
and
cmp
outsl
scas
push
clc
jl
or
fimuls
mov
lods
into
jmp
arpl
cmp
cmp
adc
pop
imul
xchg
jp
gs
repz
fwait
cmpsl
clc
ret
jg
movl
lcall
push
into
sub
shrb
icebp
iret
scas
insl
xorl
push
es
addr16
lret
mov
cmc
xor
sbb
mov
fs
cmp
inc
popf
sub
add
sbb
out
jecxz
test
mov
xchg
adc
push
iretw
jmp
cmp
es
in
sbb
dec
jl
lret
add
jns
sub
ss
inc
xor
add
pop
mov
insb
pop
push
adc
repnz
dec
imul
jmp
repz
jne
imul
pop
xor
pop
sbb
popa
sbb
stos
cli
dec
or
lahf
inc
or
adc
push
fdivs
cmpb
ds
dec
and
scas
pop
stc
jnp
stos
jno
je
ret
jl
mov
mov
add
push
rclb
inc
cmp
arpl
push
mov
dec
cltd
add
jne
mov
mov
data16
or
clc
fcmovu
mov
fisubl
loopne
sub
nop
stos
mov
xlat
mull
and
enter
mov
pop
and
orb
shll
or
ds
test
jo
mov
cmp
or
cli
push
cmp
ja
xchg
popf
jecxz
pop
pop
jmp
jl
jl
xor
mov
pusha
mov
sbb
xchg
jo
loopne
in
xchg
or
adc
ss
adc
mov
lock
idivl
insl
xchg
and
jg
inc
shlb
add
rcl
xorb
outsl
dec
push
and
std
jmp
popa
fistpll
std
push
decb
add
ljmp
das
xchg
push
subl
xchg
dec
xor
lock
fs
xor
frstor
xor
push
mov
test
sbb
mov
pushf
sbb
sbb
xchg
add
xchg
push
xor
cmc
repnz
mov
xchg
rcrb
rcrb
adc
mov
movsl
sahf
mov
or
stos
cmp
repnz
and
or
xchg
push
xchg
jmp
das
ja
inc
push
mov
test
outsb
lcall
or
mov
cld
dec
mov
dec
sub
repz
cmpsb
and
imul
push
xchg
shl
add
in
push
shl
cmp
jnp
pushf
lcall
mov
aaa
in
subl
push
ret
jge
sbb
sbb
xor
stos
pop
dec
scas
adc
pop
popf
dec
push
jge
aam
cli
inc
movsb
mov
addb
sub
cmp
popa
jmp
jns
imul
aad
mov
in
push
mov
ljmp
lea
in
inc
movsb
jb
cmp
mov
xor
lea
jo
mov
inc
lock
dec
inc
insb
sbb
enter
dec
inc
rcrb
xchg
lods
cmpsl
xor
fidivl
pop
movsl
loope
jns
fbld
add
ret
addr16
into
adc
or
lods
aad
fldcw
pop
jae
ja
mov
fbld
fwait
insb
aaa
dec
mov
repnz
adc
xchg
push
push
jbe
fs
adc
pop
outsl
push
insb
mov
loopne
mov
test
xchg
mov
push
dec
mov
int3
das
fbld
stos
xor
lods
jl
and
jecxz
mov
push
stos
mov
stc
mov
cmpsl
pop
negl
insl
jmp
dec
xlat
jns
dec
adc
dec
insb
lahf
stos
fbld
pop
out
lods
adc
mov
pushf
sub
outsb
jp
cmp
xchg
aaa
add
adc
xor
sbb
jno
popa
out
pop
inc
mov
data16
out
test
movsl
cltd
sub
cs
cld
push
push
ss
shlb
test
mov
in
mov
enter
sti
out
ret
aas
push
leave
xchg
add
pop
lret
mov
inc
jecxz
movsb
sahf
sbb
pop
inc
loopne
sub
adc
loop
cmp
sarl
jne
call
lcall
rep
xchg
lds
mov
and
sbb
aad
cmp
pop
pop
mov
fstpl
adc
fnstcw
mov
scas
fcmovnb
pusha
js
scas
jp
and
mov
fdivl
nop
lods
out
sbb
imul
mov
and
aad
xor
jecxz
mov
push
jecxz
and
std
and
or
outsl
dec
xorl
fs
inc
shll
add
ret
popa
aaa
mov
adc
pop
mov
sahf
mov
adc
es
bound
nop
dec
pop
xchg
pop
adc
int3
inc
mov
int3
push
iret
lods
or
lret
paddusb
pop
faddl
jg
call
mov
addb
es
rcrl
mov
sub
sbb
pop
push
cmp
xchg
add
xor
les
into
dec
jle
mov
mov
jne
add
jno
mov
and
loope
sbb
inc
shrl
cld
fcompl
scas
add
fcomps
shl
test
stos
fsts
cmpsb
lret
out
in
xor
dec
mov
and
mov
icebp
push
orl
sub
mov
repnz
lret
cmp
mov
or
adc
or
sbb
mov
jle
cmpl
jno
dec
dec
pop
sarl
and
rcrl
lea
push
or
das
and
clc
nop
mov
adcb
jne
adc
divb
js
xor
xchg
addr16
jge
ja
ret
outsl
fiaddl
dec
fmulp
rcrl
dec
fidivl
ja
fldt
clc
xor
lods
sub
cld
or
jns
aaa
lret
addr16
cmp
test
iret
inc
into
out
inc
or
xor
and
jb
jns
jnp
mov
ret
insb
jmp
sbb
xchg
jbe
dec
fiadds
and
and
xor
popa
or
jnp
and
push
jns
jb
xor
fbstp
mov
ljmp
push
insb
xchg
and
push
negl
xor
or
mov
iret
cmp
data16
xorb
and
jnp
jno
ret
test
fists
pop
inc
push
je
and
and
sahf
mov
lcall
mov
pop
push
addr16
mov
mov
xor
add
movsl
test
cli
out
imul
lods
outsl
cmpsb
rorl
push
mov
sbb
fimuls
ss
cmp
cmp
pop
fucom
jle
adc
fstpt
fcomps
fimuls
sub
js
pop
rcr
pop
addr16
jmp
imul
movsl
stc
fmull
les
dec
movsl
inc
jmp
scas
test
and
popf
mov
cmp
cmpsl
scas
std
sbb
loopne
xor
or
sbb
and
and
repz
push
adc
jmp
adc
in
mov
out
xchg
adc
jl
aaa
filds
insb
cs
shll
cmp
inc
jmp
add
mov
les
mov
loope
xchg
xchg
arpl
fists
dec
and
and
xor
ja
xor
movsl
cmp
mov
adc
lahf
sti
pop
add
add
sbb
dec
mov
movsl
cmc
lods
jo
pop
lods
mov
jp
inc
cmp
pop
xor
mov
mov
fnsave
xor
out
pop
xchg
inc
mov
xor
mov
stos
dec
sbb
sbb
cld
lret
xlat
mov
mov
dec
add
sub
push
xorb
jbe
je
out
mov
outsb
shl
imul
mov
std
ss
jae
lea
mov
jle
inc
push
inc
pop
dec
sti
push
mov
inc
push
test
int3
mov
cvtpi2ps
push
ret
mov
bound
fstp
orl
rorb
mov
inc
or
jne
push
out
adc
lods
lods
jno
push
outsl
ja
jno
loope
inc
cmp
shrl
mov
and
dec
cwtl
mov
scas
inc
ja
sub
fsubrp
inc
aas
cmp
or
adc
mov
movsl
cmp
fstpl
bound
stc
insb
pop
mov
push
shll
jno
and
jecxz
or
outsb
and
gs
mov
inc
gs
or
sub
sub
js
call
push
aaa
jmp
icebp
jg
jb
and
sbb
cltd
xor
sbb
dec
shrl
hlt
and
mov
or
movsb
pop
push
adc
pusha
popf
outsb
mov
jbe
cli
rol
add
xchg
loope
dec
fldenv
cmp
cmp
xor
cmpsb
add
jl
sub
xor
stos
shlb
sub
shll
mov
lret
lods
mov
mov
or
shll
int3
jge
out
daa
adc
bound
mov
dec
inc
pop
aaa
mov
xchg
cmc
movsb
xchg
xchg
pop
imul
push
xchg
xchg
daa
push
out
push
sti
cmp
inc
mov
mov
mov
repnz
mov
ret
test
pop
lahf
cmp
or
ret
out
mov
imul
jecxz
popa
mov
rolb
cmpl
mov
push
lods
popf
popa
addr16
stos
mov
fwait
push
inc
lcall
fnstenv
fwait
jo
fcmovnu
enter
outsb
push
daa
sbb
icebp
enter
push
jle
add
xchg
repnz
or
cmp
and
mov
pop
xchg
pop
popf
rol
rol
inc
rol
cmpsl
mov
fcmovnu
dec
loop
jecxz
fisubs
push
and
les
jns
out
bound
xor
ds
hlt
fadds
mov
stos
into
add
pop
or
xor
loope
je
dec
pop
pop
ljmp
fs
push
xor
pop
jo
je
das
dec
and
pop
mov
outsl
push
das
fidivl
mov
je
pop
shll
mov
scas
out
cwtl
sbb
xor
add
xchg
sub
and
jne
xor
in
mov
fdivl
fld
push
arpl
pop
fcmovne
pop
aad
in
pop
jg
pop
inc
push
pop
in
mov
push
or
sti
dec
jp
sub
mov
outsb
fmull
js
cmp
adc
mov
sbb
dec
inc
jo
fwait
ja
push
addr16
popf
pushf
fisttpll
sarl
mov
loop
xchg
jo
out
fwait
xchg
jp
addl
mov
sbb
pop
cmp
inc
test
shll
sub
adc
sub
dec
lahf
pushf
mov
inc
xchg
jmp
adc
test
mov
cmp
inc
pop
pop
test
cmp
rcr
mov
cs
mov
xchg
scas
pop
rolb
cwtl
stc
xor
out
imul
imull
je
shlb
adc
cs
add
push
adc
push
jb
or
ret
mov
jb
push
cwtl
add
pop
mov
sub
mov
sbb
stos
insl
lea
sub
insl
out
add
aas
lock
pop
out
mov
aas
bound
popa
push
mov
cmp
jno
jns
sti
adc
das
or
adc
add
add
repz
popa
maxps
inc
and
inc
idiv
mov
push
add
push
jns
fstps
es
sub
fs
shll
stos
mov
pop
fld
sub
inc
aas
jae
rol
cmpsb
mov
mov
mov
ficoml
and
add
xchg
cmp
mov
fsub
pop
pop
mov
rorb
in
sub
mov
bound
imul
jecxz
sbb
pop
dec
insb
adc
sub
xchg
pop
jg
inc
shll
cmp
sub
bound
out
repz
repnz
lret
and
cmpsb
leave
lahf
pop
fistl
sbb
adc
notl
mov
cmp
or
sarl
xchg
mov
cli
in
cli
scas
and
lea
adc
mov
rolb
imul
dec
fs
pop
movb
out
xchg
inc
mov
clc
pop
adc
popa
dec
jge
fwait
mov
cmp
jg
push
rcll
divb
add
test
push
push
pushl
jo
jno
xlat
mov
aad
and
and
nop
je
bound
jne
insl
lds
pop
pop
sbb
mov
mov
sub
scas
or
ss
bound
out
test
mov
orb
sar
pop
repnz
sbb
add
lahf
jbe
outsb
xchg
cmp
mov
jns
pop
sbbl
popa
cmp
pop
shrb
pop
movsb
or
fwait
jmp
cltd
stos
sub
inc
xor
and
aam
push
scas
fisubs
xlat
imul
or
pop
or
loop
cmp
sbb
or
int
dec
cld
or
cmp
jle
mov
ljmp
push
sbb
xchg
mov
cld
jo
mov
int
iret
mov
std
jg
cmp
subl
pop
xchg
xor
jmp
dec
adc
xlat
push
mov
sti
test
dec
aad
lods
xor
lcall
and
imul
inc
aaa
cmp
stc
cmp
sbb
and
lcall
das
push
cmp
and
ret
push
or
ret
aad
cmc
add
push
movsb
sarb
xchg
test
scas
push
jl
inc
cld
inc
mov
jo
cltd
xchg
cmp
inc
gs
push
inc
rolb
test
mov
pop
jmp
ds
aas
fcmovbe
cmp
pop
add
das
mov
pop
adcl
dec
loope
std
xchg
add
mov
pop
fwait
adc
adc
mov
sbb
out
ret
cmp
pop
adc
mov
push
out
sub
rcl
add
xor
jo
jns
imul
pop
sbb
ja
jne
inc
push
xor
loope
and
add
sub
dec
aas
cmp
cmp
push
nop
adc
lret
movl
inc
sti
pop
push
test
inc
pop
andb
lahf
jns
inc
icebp
xchg
push
jb
div
push
inc
mov
call
in
cmp
in
mov
xlat
pop
popa
inc
in
mov
mov
mov
xor
sub
sbbb
lds
pop
andl
cltd
fldl
sbb
pop
dec
sbb
inc
add
inc
gs
int3
das
sub
mov
bound
sbb
ja
lcall
cmp
js
call
out
outsl
push
rcrl
sub
xchg
lods
ljmp
mov
xchg
les
inc
push
xlat
gs
cmpb
popa
stos
andl
xchg
sbb
push
mov
dec
fisubrl
jp
popf
dec
pop
xchg
lock
mov
scas
cmp
dec
push
pop
jp
xchg
rcrb
mov
leave
loop
jl
loop
and
pop
jo
adcl
cmpsb
loop
adc
sbb
movsb
and
lods
cmpsl
push
mov
jbe
add
addr16
jae
xor
out
fnsetpm(287
repnz
mov
ret
pop
dec
add
stc
cmp
cld
sarb
inc
pop
aam
lahf
cs
imul
pop
jb
sbb
jg
sbb
out
pop
and
add
fwait
push
pop
mov
mov
fwait
les
cwtl
lods
jmp
and
aaa
sbb
inc
mov
or
push
cltd
jl
pop
addb
inc
ja
cltd
movb
xchg
and
jno
pushf
fcoms
pop
sbb
jbe
push
inc
into
mov
ds
repnz
aas
stc
fdivp
fidivrl
int
stc
inc
idiv
in
popl
and
sub
pop
push
sbb
pop
xor
sub
ficompl
push
shl
cltd
inc
pop
inc
push
hlt
pusha
add
xor
fsubrs
pop
addl
sti
xchg
push
xchg
inc
cmp
aam
or
ret
into
mov
dec
outsb
fimull
shrl
inc
cmp
test
ja
xchg
scas
dec
mov
scas
mov
push
or
sbbb
fimuls
pop
push
repnz
adcb
test
test
aam
inc
pop
hlt
xor
sub
pop
add
shll
pop
ja
out
xor
sub
lods
leave
and
inc
mov
pop
imul
dec
push
gs
mov
ja
or
lret
lods
in
lcall
mov
sbb
movsl
add
jecxz
repnz
push
sbb
lret
out
add
mull
xchg
daa
cmp
clc
add
adc
sbbb
jns
mov
xchg
fcmovnbe
inc
cs
and
div
xor
je
daa
std
inc
mov
cmp
jg
inc
push
pop
test
shlb
enter
lods
negb
xchg
dec
test
imul
sbb
and
jecxz
add
dec
add
test
inc
imul
add
pop
cmpsl
cmc
mov
mov
dec
les
or
in
stc
add
jo
push
cmp
hlt
fsubl
repz
enter
pop
inc
adc
cmpsb
stos
adc
xlat
cmpsb
bound
push
sbbb
into
sarl
lcall
fmulp
add
push
sbb
lcall
push
cmc
and
sub
out
mov
gs
dec
cmp
adc
out
inc
aad
arpl
pushf
cmpl
sub
mov
pop
jno
pop
mov
mov
cmpsb
jbe
ret
cmp
pop
jl
jle
in
xchg
fdivs
imul
jmp
test
js
movd
xorl
ds
sarb
scas
hlt
xor
insb
out
mov
es
push
xor
xlat
leave
pop
loop
push
je
xor
sbb
cs
outsl
call
mov
add
mov
xchg
mov
mov
jb
adc
aad
cltd
mov
outsb
add
push
push
jge
pop
lods
mov
xlat
fs
rcl
xchg
outsb
inc
clc
adc
aad
inc
in
es
ss
jp
sti
mov
fdivr
add
sbb
dec
enter
mov
sbb
outsb
outsb
orb
je
dec
aaa
sub
scas
sbb
mov
imull
repnz
or
addr16
arpl
mov
pusha
jbe
mov
in
cmp
imul
mov
inc
fsubl
push
dec
add
dec
jle
aam
cmp
pop
jb
out
add
movsl
xchg
push
faddl
test
in
daa
inc
rorb
addr16
jge
adc
xchg
into
enter
enter
add
adc
jle
push
and
adc
adc
fwait
mov
imul
fbstp
sub
lods
movl
sub
aas
or
push
mov
rolb
pop
adc
bound
sahf
lds
adcl
fsubr
push
pusha
lret
lahf
in
in
mov
pop
jne
ret
push
test
fnsave
adc
repnz
pop
dec
dec
fstps
inc
jecxz
sbb
mov
xchg
sub
adcl
add
addr16
push
adc
mov
or
out
cmp
lock
mov
sbb
rol
fcoml
gs
popf
scas
fs
inc
clc
test
cs
insb
push
pop
lock
push
rdmsr
sub
or
jle
int
xor
ja
cmp
xchg
cltd
in
mov
or
gs
test
sbb
mov
test
dec
push
out
les
mov
adc
inc
xchg
or
lds
hlt
and
icebp
inc
and
xor
xor
or
lcall
sahf
repnz
push
mov
pop
and
pop
and
xor
add
xchg
add
push
fnstenv
lret
or
movsl
fcoml
jne
cmp
fs
cmp
fs
pop
dec
cmp
data16
mov
lea
push
test
addr16
adc
or
xchg
mov
mov
add
sub
mov
dec
adc
adc
pusha
movsb
sbb
or
mov
and
pop
mov
push
popl
ljmp
std
pop
addr16
mov
lds
mov
stc
fcom
aad
or
push
popf
rol
lret
outsl
sbb
ja
aas
in
orl
xor
popa
out
dec
movsl
lds
lds
push
fdivrs
cmp
push
dec
lock
jnp
xorb
add
movsl
out
sub
mov
push
pop
jg
mov
das
mov
and
sub
cmp
mov
in
adcl
cmpsb
lret
lret
faddl
mov
popf
push
push
loop
shr
ret
in
outsb
adc
jge
mov
cmp
ret
rorb
enter
mov
mov
icebp
jns
pop
cmc
cmpsb
push
iret
notb
jp
xorl
adc
lret
mov
or
call
ret
pop
in
sub
cmp
or
scas
jecxz
mov
jle
or
faddl
adc
iret
repz
push
mov
xchg
adc
lods
imul
xchg
or
int3
lock
scas
xlat
mov
iret
out
test
cmp
push
pop
sbb
mov
and
std
xor
mov
sbb
mov
rorb
sbb
dec
addr16
iret
mov
enter
into
cmp
add
stc
pop
testl
je
jbe
lahf
mov
loopne
pushw
icebp
rolb
mov
outsb
pop
subl
mov
dec
mov
notb
sahf
shl
xor
push
jecxz
pusha
xchg
push
arpl
xor
mov
imulb
jecxz
sub
and
je
fimull
call
sbbl
mov
and
cwtl
loope
inc
iret
mov
jle
sub
mov
lods
dec
outsb
scas
cmp
mov
es
nop
addr16
imulb
sub
ljmp
or
fiaddl
bound
incl
push
jns,pn
out
dec
pop
ljmp
sub
mov
insl
ljmp
mov
daa
enter
push
mov
pop
xchg
scas
xor
xor
sar
inc
enter
cmp
test
mov
lcall
dec
fiaddl
es
mov
fisttpll
popf
pushf
insb
pop
into
cmp
pop
pop
adc
flds
cli
inc
or
push
push
xchg
pop
stc
jmp
mov
cmp
sar
or
push
dec
push
sbb
aaa
mov
aas
inc
push
loope
or
in
dec
mov
les
test
test
in
into
in
fidivs
fmull
pusha
jp
push
test
lds
imul
mov
sub
pop
push
push
repz
dec
fs
sbb
dec
jmp
pop
dec
inc
xor
icebp
in
addb
nop
ret
sub
mov
ljmp
add
in
pop
xchg
xlat
data16
xchg
xchg
movsl
out
xchg
in
and
repnz
adc
jecxz
or
xchg
test
push
pop
into
or
fwait
enter
or
mov
cltd
iret
mov
ror
lcall
mov
cmp
or
movsb
jge
lcall
fs
leave
lcall
lods
int3
mov
addr16
mov
add
ficoms
cs
pop
mov
mov
loopne
loopne
xchg
push
cli
push
repnz
cmp
cmp
sub
mov
inc
mov
sub
mov
std
jmp
rcrl
or
lret
sub
add
and
push
pop
or
jo
push
mov
lods
ret
add
popa
movsb
push
out
sub
adc
enter
fidivrl
or
test
mov
icebp
pop
ret
or
movsl
mov
out
mov
jl
iret
pusha
in
stos
lods
add
sarb
lret
insl
lcall
jb
xor
aad
subb
loopne
jns
sub
mov
popf
ret
push
mov
loop
mov
in
pop
jns
scas
push
cmc
lds
sbb
test
addr16
jno
sbb
and
mov
imul
jno,pt
shl
mov
and
push
clc
ficoml
lods
pop
jbe
sahf
adc
mov
pusha
stos
add
mov
push
sub
iret
mov
push
insl
push
insb
in
lret
sub
pusha
ret
xor
out
inc
test
lods
movsb
fimull
mov
xor
leave
push
pop
mov
cmp
aad
pop
ret
sti
dec
xor
clc
push
inc
mov
loop
jle
push
ja
lock
int
hlt
in
shl
push
ljmp
inc
cmp
pop
adc
negl
mov
and
test
lret
fisubl
mull
xor
sub
es
push
dec
ss
ror
ss
xchg
mov
push
fbld
mov
push
push
xor
test
mov
ja
ja
sarb
pushf
xchg
push
mov
jg
sub
push
mov
iret
pop
cmp
cmpsl
mov
sub
adc
jne
xlat
xor
movsb
and
adc
pushl
les
mov
xchg
shrl
mov
inc
mov
or
cltd
xor
ds
and
push
lret
pushf
inc
ret
xchg
add
addr16
pop
adc
dec
in
fisubs
mov
jns
cmp
mov
fidivrs
inc
pop
xchg
std
lea
ficompl
xor
cli
inc
adc
mov
ret
xchg
mov
dec
xlat
fldl
add
popa
arpl
inc
xchg
lret
mov
dec
lret
shll
ret
push
aam
outsl
int
dec
clc
fs
jmp
cmc
sbbl
ret
mov
ret
push
mov
push
fwait
out
pop
adc
dec
dec
mov
dec
push
test
clc
adc
dec
stos
or
aad
and
dec
xchg
sbb
push
mov
jecxz
jne
xchg
push
push
les
aaa
cmp
out
sbb
data16
push
fnsave
sub
sbb
inc
pusha
cld
fwait
sahf
mov
scas
sti
mov
test
mov
inc
insl
jl
xor
mov
movsb
pop
sahf
mov
cmc
lods
mov
dec
jno
in
jnp
cmp
lcall
mov
and
push
xor
mov
sub
leave
sub
dec
aad
push
js
dec
repnz
clc
mov
insb
sbb
mov
xchg
nop
insb
cmp
or
fisttpl
or
xchg
add
xor
jae
in
or
pop
dec
fimuls
jg
xchg
add
xchg
lock
rolb
mov
fst
ljmp
cli
in
into
or
pop
sub
or
cli
sbb
movlhps
push
movb
int
mov
push
into
faddl
inc
jle
jecxz
sub
sub
sbb
in
lret
mov
dec
outsl
xor
push
cmp
jge
mov
sbb
addr16
sbb
popf
aam
leave
jle
mov
mov
xor
adcl
mov
mov
fcmovnu
pop
cli
js
or
push
cmpsb
push
xor
mov
daa
fs
ljmp
stos
in
xor
call
add
push
sbb
jmp
mov
inc
loop
jl
and
test
jge
and
mov
push
call
push
sub
lock
addb
popa
aam
adc
imul
jno
inc
loopne
jmp
fcoms
les
jg
gs
jmp
daa
mov
and
dec
xor
xchg
mov
in
jmp
jecxz
xor
and
sub
adc
jne
cmp
aad
push
loopne
hlt
mov
pop
push
xlat
sbbl
pop
roll
inc
in
leave
lock
and
xchg
sbb
dec
lods
jecxz
pop
cli
aam
pop
int
and
aaa
mov
nop
int3
or
lahf
dec
dec
xor
dec
and
inc
dec
in
mov
repnz
and
loop
ja
push
cmp
pop
mov
push
lods
std
push
inc
out
lods
sub
jnp
or
mov
stos
jo
repz
loope
sti
sub
cltd
roll
repnz
sub
mov
cmp
jmp
sahf
lret
dec
jle
outsb
add
inc
ficoml
add
mov
es
mov
mov
stos
sbb
imul
scas
ljmp
mov
xchg
push
out
cmp
mov
mov
repnz
xchg
jge,pn
mov
mov
hlt
lock
cmp
push
xor
pop
test
cmpsl
adc
xor
jns
andl
xor
mov
clc
inc
mov
sbb
mov
fbstp
mov
and
popf
inc
fs
push
in
mov
cmpsl
inc
jo
repnz
in
xor
pusha
aaa
dec
lret
mov
cmp
dec
jnp
jnp
and
push
clc
push
push
adc
leave
std
arpl
rclb
xchg
std
mov
ret
add
sub
mov
or
xor
pop
cmp
sub
jecxz
mov
fnstenv
pop
cld
std
adc
fistpl
test
push
stos
pop
lods
dec
mov
stos
jp
mov
shrb
mov
mov
pop
xor
mov
imul
or
jmp
sub
and
jbe
sbb
xorl
mov
cmp
mov
mov
aas
inc
mov
mov
test
stos
mov
loop
sbbb
rcrl
ds
or
lahf
adc
mov
lcall
xchg
pop
and
pusha
jl
cmpsl
mov
and
add
sbb
gs
into
jmp
icebp
outsl
cmpsl
mov
out
js
int3
jge
ljmp
xor
pop
adc
mov
push
enter
pushf
jae
hlt
mov
sbb
stc
psraw
pcmpgtb
shll
add
xor
jbe
xor
dec
stos
cld
jp
fidivl
dec
repz
and
mov
mov
dec
arpl
and
es
inc
in
adc
or
mov
and
es
lret
and
inc
inc
pop
mov
adc
cmp
adc
or
xchg
and
mov
sahf
in
mov
mov
mov
xchg
lahf
movsl
leave
idivl
push
int
arpl
adc
cmp
adc
push
xlat
insb
iret
cld
add
mov
or
mov
xchg
and
mov
pop
jns
loop
fcmovne
inc
pusha
xor
mov
xchg
mov
push
pop
mov
ss
add
push
in
addr16
and
mov
mov
xchg
mov
loope
test
pop
out
adc
sub
or
jo
movsb
xor
xchg
inc
scas
lcall
scas
cmpb
xchg
cltd
xlat
es
mov
movsb
inc
pop
or
sub
stos
inc
cmp
into
pop
add
mov
fs
mov
call
add
out
std
adc
arpl
sbb
add
gs
dec
repz
out
push
pushf
inc
out
cmp
pop
nop
divl
mov
fs
or
sbb
sbb
dec
pop
pop
jne
lods
sarb
js
sbb
fnstenv
inc
scas
add
or
add
mov
leave
push
jl
push
mov
cmpsl
lahf
repnz
and
nop
pop
sbb
lods
imull
push
test
or
lret
mov
dec
sti
xchg
sub
jge
cmpsl
push
out
in
mov
int
pop
add
fwait
cmp
and
shll
dec
pop
and
arpl
fadds
popf
xor
repz
xchg
nop
push
lea
mov
notb
cmp
cmp
ds
cltd
fcmovnb
adc
xchg
sbb
mov
sub
stc
inc
lcall
not
andb
inc
mov
faddl
or
clc
movsl
xor
cmp
ds
mov
lds
push
sti
sub
lahf
fidivrl
adc
sbb
lret
aam
call
sub
or
mov
and
xor
sub
mov
aaa
repz
clc
mov
adc
jp
jg
add
in
xor
cmp
xchg
sub
inc
xchg
or
mov
fs
adc
lret
test
je
xor
ja
ret
xchg
cltd
inc
sub
xlat
dec
popa
dec
lret
cld
mov
and
in
fcoml
push
fcomp
mov
loope
sti
gs
sbb
lods
add
adc
loopne
cmp
pop
cmp
pop
aad
mov
cmpsl
rcl
andb
pusha
cmpsb
mov
in
jge
nop
fadds
dec
jmp
mov
fldenv
pop
mov
out
pop
push
mov
push
or
repnz
xor
push
arpl
adc
xor
loop
mov
cmp
mov
adc
xchg
add
jecxz
shll
sub
pop
mov
mov
shlb
sbbb
ja
cmpsl
into
mov
adc
iret
add
sbb
stc
mov
movsb
cmp
or
insl
mov
mov
out
sti
or
push
mov
xchg
in
mov
and
call
add
push
data16
mov
inc
sbb
add
jg
mov
fwait
roll
and
lret
xchg
jecxz
jmp
jmp
pop
jp
jge
clc
mov
ficompl
pop
lds
xor
mov
enter
fcomip
mov
out
push
addr16
in
pushf
std
mov
lret
xchg
mov
int
and
mov
jl
sbbb
inc
or
dec
into
jmp
movups
jge
sub
pop
call
testb
test
mov
jno
sbb
dec
mov
adc
xchg
shrb
fistpl
push
fsubrl
fs
xor
lea
or
int3
cmp
mull
cmovp
jp
or
testl
mov
mov
mov
cmc
addr16
icebp
loop
cmp
test
scas
pop
nopl
pop
jae
xor
mov
mov
or
gs
dec
lahf
mov
test
push
call
scas
out
mov
and
addr16
cmp
je
pop
inc
push
xlat
push
inc
lcall
mov
lock
into
cld
jo
dec
outsl
ljmp
pop
add
cmp
cmp
add
inc
jp
fdivl
repnz
inc
notb
and
sahf
fnstenv
adc
sbb
pusha
je
mov
inc
xchg
and
aam
popa
imull
xchg
movsl
jecxz
jecxz
pop
pop
arpl
sahf
sbb
sarb
adc
sub
fimull
imul
stos
mov
dec
call
add
imulb
inc
sbb
jecxz
sub
add
adc
mov
clc
outsl
int3
bound
js
cwtl
push
jnp
lock
mov
adc
mov
or
dec
mov
push
imul
cmpsb
dec
fmull
cmp
mov
sahf
mov
movsb
cmp
cmp
icebp
mov
or
rorb
xchg
pop
data16
mov
fcmovne
mov
inc
icebp
sarl
fildll
in
out
in
mov
les
jne
xlat
push
fsubrl
sbb
adc
lret
xchg
xchg
je
mov
imul
fildl
out
cmp
dec
ljmp
je
dec
iret
jbe
or
mov
and
xchg
cli
nop
pop
adc
mov
test
cmp
xor
fs
iret
jnp
mov
fiaddl
and
inc
stos
dec
icebp
xorl
dec
inc
dec
sbb
add
mov
ja
dec
test
cmpsb
in
inc
push
or
mov
lods
je
cs
dec
rolb
dec
stc
ret
pop
imul
mov
push
jae
dec
mov
lods
jno
xchg
sahf
sub
lcall
mov
and
rolb
dec
arpl
dec
mov
fs
add
sbb
xorl
in
stc
pop
mov
addl
jp
daa
pop
adc
cltd
sub
test
and
xor
or
test
das
ficoml
iret
cld
sbb
push
lock
cmpl
mov
lock
push
jnp
jae
dec
prefetch
adc
or
sub
arpl
and
hlt
adc
aaa
stos
insl
addr16
mov
xor
fmull
shrl
fists
or
push
mov
inc
or
in
sbb
clc
xor
mov
mov
inc
sub
ss
and
dec
in
lret
cs
lds
inc
xor
sahf
inc
repz
pop
and
mov
xchg
dec
mov
push
adc
dec
xor
cli
jecxz
cmp
sbb
sbbl
scas
xchg
arpl
push
call
ds
js
prefetch
mov
pushf
pushf
sub
mov
cmp
dec
mov
sbb
and
xchg
and
cmp
or
shl
xchg
sub
mov
cmp
js
addr16
cli
sarl
sbb
sub
cmc
pop
imulb
jbe
mov
xor
xor
das
push
pop
cmp
scas
rol
xchg
lcall
inc
outsb
subb
jno
pop
lss
push
adc
lds
mov
ss
cmp
icebp
shll
inc
ret
lods
jnp
or
or
rorl
sbb
xor
repnz
hlt
dec
sbb
push
scas
or
cwtl
adc
or
jbe
mov
mov
icebp
jge
cld
jmp
int3
push
inc
inc
lret
or
xor
js
lds
pop
jmp
ret
pop
mov
mov
jmp
xchg
or
out
xor
add
or
xor
push
mov
push
mov
cmc
mov
push
mov
jbe
xacquire
aad
xor
pop
mov
mov
mov
fstpt
jp
pop
mov
and
popa
leave
add
jge
mov
dec
sbb
aaa
imul
and
add
adc
fistpl
inc
pop
pop
or
lock
outsb
and
xchg
pop
les
lods
sbb
daa
adc
mov
xor
or
adc
cmp
mov
out
test
jns
push
xchg
or
fstl
sbb
cmp
pusha
das
hlt
aad
mov
fnstenv
xchg
pushf
mov
mov
mov
test
pop
sahf
popf
cmp
and
jg
adc
add
stc
inc
pop
jne
cmp
jg
sub
pop
xor
lea
mov
push
push
jbe
adc
lahf
stc
mulb
sub
loope
cmp
jo
cmp
push
scas
push
aad
lods
pop
push
nop
lea
xlat
pop
xchg
fstpt
mov
cld
push
jp
movsb
fisubrl
gs
fildl
dec
sbb
cwtl
loope
xor
and
push
imul
mov
test
fisubrs
cld
sub
jp
push
push
and
incl
dec
and
xchg
inc
pop
or
outsl
in
fildll
pusha
cmp
xor
pop
jns
dec
fs
aas
js
cld
into
dec
jae
subb
ret
mov
scas
mov
call
dec
sub
dec
mov
imul
sub
loopne
cmp
xor
cmc
je
fwait
pop
dec
mov
lods
aas
pop
mov
sbb
fildll
jmp
scas
sub
adc
jge
insb
gs
mov
push
imul
push
push
mov
fs
dec
sub
sub
in
mov
popa
cmp
mov
or
cmp
sarl
mov
jns
cmp
dec
and
sub
repnz
inc
mov
loop
mov
shr
imul
add
lret
inc
mov
arpl
mov
ret
sbbb
mov
leave
les
fwait
pop
int3
inc
and
dec
mov
out
or
repz
das
jmp
loop
cmpsb
push
or
sbb
shl
dec
xor
pop
jl
rorl
lret
sub
rolb
rorl
sub
js
stos
add
xchg
outsb
sbb
sbb
test
cmc
dec
cmp
xor
or
fildl
aaa
in
add
lods
pop
mov
and
scas
pushf
les
mov
sub
mov
call
add
cmp
pop
ret
lods
arpl
mov
fnstsw
ljmp
es
jp
mov
jae
xor
lods
jle
adc
dec
dec
pop
cs
xchg
push
push
sub
xor
jl
das
add
jo
les
add
cmc
sarb
sbb
adc
pushf
cmp
lret
adc
xorl
test
bound
jae
mov
jns
push
clc
scas
mov
xor
mov
jns
in
inc
test
jne
add
dec
pushf
push
mov
pop
push
jg
xchg
movsl
xchg
fs
rorb
dec
pusha
jp
repz
pop
fadd
sub
pop
mov
xchg
cmp
add
cld
jge
xorb
mov
icebp
scas
movsb
mov
popf
mov
pop
xor
icebp
insl
mov
jmp
fsubrp
dec
ljmp
mov
icebp
lahf
xchg
movsl
test
ret
or
neg
aaa
mov
mov
and
rcll
lcall
mov
fwait
mov
jmp
lods
pusha
jbe
iret
inc
mov
add
pop
ret
cmp
ja
shr
hlt
mov
inc
and
push
mov
mov
or
aas
loop
popf
or
push
jle
pop
movsl
in
cld
js
nop
movsl
push
xchg
clc
rcrb
xchg
xchg
xchg
inc
movsb
xchg
sub
out
mov
pop
rclb
movsl
ror
jp
mul
or
sahf
add
and
movsl
lock
movsb
enter
ljmp
cwtl
jmp
mov
je
pop
dec
add
hlt
filds
pop
mov
movsl
sub
rolb
loop
lahf
lods
bound
in
push
pop
cmpsb
xchg
add
push
jl
mov
gs
push
sti
sbb
cmp
fucomip
mov
mov
mov
fdivs
cld
sub
std
sbb
mov
mov
and
sbb
mov
add
ja
xchg
mov
jns
jg
pop
insl
js
mov
dec
sbb
jo
fsubr
dec
addr16
mov
loopne
push
push
mov
jbe
sarl
loope
enter
fwait
jmp
aam
cld
arpl
push
pop
mov
popa
jp
mov
push
xchg
les
sbb
mov
shlb
fiadds
fldl
and
and
repnz
or
dec
and
mov
cmp
dec
xor
ljmp
sbb
jle
mov
mov
and
call
pop
in
aam
push
mov
add
lret
call
sbb
xchg
push
fisubrs
push
sbb
or
push
or
cmp
stos
mov
xchg
and
rorb
xor
sbb
adc
sbb
stos
or
inc
bound
rorb
sub
pop
in
or
in
ja
mov
insl
mov
inc
push
jb
lock
or
mov
sbb
ljmp
inc
lahf
sti
dec
jecxz
jns
js
rclb
sbb
inc
daa
inc
mov
lock
jmp
xchg
jmp
cmp
testl
pop
xor
ljmp
ret
cs
inc
fdivrs
adc
jg
xchg
and
test
adc
add
push
outsb
lds
inc
xor
popf
fcomip
sub
and
jno
repnz
lahf
mov
mov
dec
aaa
fisubl
push
fcompl
sub
cwtl
mov
xchg
dec
xor
fcompl
and
xor
mov
sub
sbb
jmp
fucom
hlt
mov
data16
push
cld
and
dec
into
lcall
xchg
xchg
push
scas
adc
add
mov
loop
data16
sub
stos
in
test
dec
lret
into
cmpl
pop
leave
jns
jne
in
xchg
or
sub
lret
mov
xchg
daa
or
pop
jmp
xor
mov
out
gs
xchg
jmp
lret
test
sub
adc
bound
pop
add
in
popf
sti
mov
sub
mov
cmpsb
test
leave
and
daa
mov
xor
cmp
in
xchg
rorl
jp
loope
inc
mov
cmp
inc
or
pop
mov
cmc
enter
jbe
cmp
imul
rcll
sub
adc
dec
pop
out
adc
xchg
adc
faddl
sub
and
mov
insl
and
loopne
xchg
loop
mov
cwtl
mov
fst
nop
pop
dec
sub
pop
lods
push
outsb
stc
or
inc
outsb
data16
sbb
rolb
cmp
sbb
sub
lret
jo
add
push
xchg
sbb
fildll
xchg
mov
jp
rolb
adc
jne
lahf
cli
mov
push
pop
rcrl
aas
outsl
adc
cli
jl
imul
ror
out
cmpsl
enter
lahf
jp
bswap
insl
lcall
fcomps
push
ret
push
mull
aam
loop
pop
in
cmp
fdivp
ret
sahf
in
sbb
pop
jnp
dec
mov
push
pop
stc
mov
ficomps
ja
in
mov
and
mov
push
mov
test
cmp
in
sbb
lock
xchg
cmp
cmp
mov
sbb
into
sub
mov
faddl
jns
hlt
mov
jge
aad
push
mov
add
adc
add
add
jo
in
ret
cmp
dec
test
inc
jo
adc
mov
jl
je
sub
out
fstpl
mov
cmp
shlb
dec
mov
fildll
push
pop
mov
cwtl
loopne
push
xor
roll
daa
dec
sub
sub
sbb
dec
sbb
movsb
insl
and
sub
jns
clc
mov
and
aas
mov
cli
subb
and
arpl
je
xorl
jge
aaa
cmp
cmp
jno
inc
adc
push
mov
xchg
pushl
test
out
pop
jb
pushf
jecxz
push
pop
test
aas
ja
jns
jp
lahf
iret
add
shrb
push
mov
icebp
fisttpl
adcl
xchg
negb
bound
aas
pop
push
xor
inc
push
out
push
int
mov
ret
out
test
lcall
pop
sub
adc
movsb
notl
dec
lds
pop
inc
mov
xor
xchg
mov
or
push
mov
push
pop
cld
mov
mov
jbe
cmc
adc
repnz
lret
push
add
stos
and
xchg
lret
es
scas
push
lock
xor
cmpb
cmpsb
pop
mulps
loopne
imul
adc
push
test
sbb
sti
pop
pop
sub
aam
je
lods
lods
xor
aam
cmpsb
movlps
cmpb
int3
cmpsb
out
jnp
xlat
lahf
das
or
xor
pushf
xor
cmpsb
nop
xchg
dec
cld
mov
fucomi
jo
and
or
mov
scas
push
mov
mov
scas
imul
push
push
shll
mov
mov
or
pop
fildl
cmp
scas
insb
adc
int3
pop
add
push
scas
idivl
sub
repnz
das
addl
push
inc
cli
lods
push
into
push
data16
dec
pop
and
test
pop
shll
dec
sbb
dec
push
test
pop
mov
loop
repz
fstl
sbb
jmp
sbb
mov
lret
shlb
pop
into
pop
xlat
cld
dec
push
insl
push
cltd
adc
mov
test
inc
movsb
test
arpl
cmp
pop
adc
pop
es
jnp
jo
push
add
xor
stc
int3
cltd
daa
or
sub
les
mov
sbb
cmp
cmc
adc
out
sbb
js
iret
jge
in
jae
push
std
and
cmp
mov
ja
in
pusha
dec
inc
sbb
mov
pushl
pop
cmp
in
loope
push
jns
push
cmpsl
mov
insl
xor
pop
xchg
cmp
out
add
sbb
mov
xchg
pop
es
pop
mov
xor
dec
jge
sbb
in
fs
aas
jnp
scas
test
call
dec
cmpsb
cmovs
jp
aaa
pop
repz
sbb
inc
or
cltd
daa
sbb
xchg
and
lods
pop
add
lahf
add
je
xchg
xchg
and
mov
arpl
mov
jg
cmp
punpckhwd
roll
daa
in
stos
ret
add
xchg
notl
into
lods
test
xchg
xchg
cmpsl
testb
xchg
pop
stc
push
ja
loope
mov
push
push
push
aas
sbb
sbb
add
sti
mov
scas
inc
insl
popa
and
rcrb
sbb
lret
dec
pcmpeqd
es
sti
lret
fnsave
cmp
pop
je
lea
mov
pop
std
out
ja
jo
aad
cmp
push
mov
mov
icebp
ja
xor
popf
gs
and
jo
cs
es
mov
sub
dec
jnp
inc
add
pop
stc
dec
in
mov
lret
sbb
sti
fdivl
mov
add
dec
pop
xchg
add
xor
les
inc
jne
lods
rcrb
mov
and
pop
add
out
dec
xchg
daa
test
cmp
sub
add
cmp
frndint
cmp
scas
popa
or
or
or
pop
push
pusha
xchg
ficompl
punpckhbw
popa
cltd
sbb
lret
add
fwait
mov
sbb
aaa
aaa
or
sub
mov
popa
mov
fs
popf
cmp
inc
add
push
dec
int3
xchg
xchg
imul
iret
pop
and
movsb
mov
stc
fsubrs
pop
aad
push
daa
jnp
inc
jns
xchg
outsl
push
xchg
mov
and
cli
mov
dec
hlt
sub
jle
rcrl
mov
jo
testl
cmovl
mov
loopne
cmp
out
dec
ficoml
fsts
subb
jl
push
dec
cmc
popf
jl
lock
rorb
clc
daa
repz
imul
roll
dec
push
ss
adc
push
loope
outsl
daa
es
cltd
das
stos
in
xchg
pop
push
inc
roll
jmp
fsubrs
and
sbb
cmpsb
aaa
cmpsl
iret
xchg
lcall
pop
in
enter
mov
fidivrl
lea
jmp
daa
cmp
les
mov
inc
push
insb
std
lahf
mov
mov
nop
jb
in
lahf
je
and
outsl
lret
add
pop
pushf
inc
mull
or
sbb
pushf
jmp
and
aam
pop
push
cs
movsb
stos
xchg
fwait
dec
or
or
popf
jae
andb
push
jnp
test
sbb
bound
int
xchg
bound
clc
mov
inc
cli
loope
fwait
pop
mov
push
movb
add
dec
add
cmp
leave
lods
int3
out
pop
or
sub
xchg
sbb
lea
or
mov
shlb
rclb
ret
out
pop
cmp
fsub
mov
sbb
dec
or
scas
lods
ljmp
cmpsb
ja
and
add
std
lahf
xchg
and
add
scas
mov
and
jnp
mov
push
int3
pushf
jp
xchg
out
mov
lcall
mov
fidivrl
mov
lock
push
jne
arpl
cmp
call
shrb
dec
loop
ljmp
mov
test
cmc
mov
jo
adc
jp
xchg
stc
aam
cli
cmc
push
mov
faddp
jo
ret
insb
fiadds
jmp
inc
shll
mov
les
mov
mov
aam
pop
rclb
dec
xlat
icebp
test
rorl
pop
add
cmc
cmp
sbb
sub
sbb
sbb
mov
das
notb
js
add
cwtl
cmc
mov
insb
mov
jmp
ja
mov
adc
adc
gs
jnp
mov
shr
repnz
jo
das
insl
mov
inc
pop
and
popa
inc
outsb
adc
loop
mov
fbstp
dec
or
daa
mov
dec
lds
lcall
iret
sbb
aaa
inc
orb
push
orb
inc
leave
add
cmp
call
pop
aam
lods
mov
sbb
or
mov
stos
unpckhps
fadds
fwait
cmpsb
insb
ja
int
lea
or
add
fistpl
andb
je
lret
jnp
in
ds
xchg
stos
pop
pop
fdivl
loopne
jmp
fbld
in
jle
push
sti
mov
int3
imul
add
lahf
in
xor
imul
popa
ret
mov
pop
aaa
jp
lock
sbb
js
add
testb
cmc
and
aad
pop
pop
jo
cmp
jne
test
stos
jns
ja
jg
jl
notl
int3
lock
mov
jb
pop
xor
mov
out
and
scas
jle
sbb
sub
popf
dec
xchg
in
xlat
jecxz
outsl
or
ret
xchg
loopne
movsb
xchg
aas
into
in
mov
and
fsubs
ret
mov
aaa
and
push
lahf
or
mov
dec
inc
out
std
popa
dec
add
dec
les
sbb
xchg
dec
jge
pop
xchg
lret
push
adc
das
inc
pusha
lcall
in
xor
inc
js
push
scas
cmp
test
js
sbb
and
push
sbb
xor
shrl
enter
lret
ja
pop
push
sub
pop
xor
mov
into
xchg
stos
js
or
xchg
jg
pop
loop
or
mov
jns
pop
or
xor
pop
inc
loope
sbb
xor
jle
fs
out
sbb
call
mov
or
out
push
pop
xor
mov
sub
push
pop
insl
or
mov
sub
jg
repnz
jnp
out
stc
mov
jecxz
or
loop
mov
xchg
jo
xchg
adc
push
outsl
sbb
cmpsl
mov
sti
ljmp
add
loop
xchg
jp
jb
jo
subb
leave
nop
shll
fdivrp
lock
sub
mov
inc
std
hlt
sti
cmp
jmp
jle
ds
sub
popa
movsl
mov
inc
outsb
mov
sub
dec
cld
call
out
or
mov
enter
inc
cmp
xchg
dec
fsubr
mov
mov
data16
mov
insl
pop
or
or
imul
dec
fsubl
or
mov
shll
push
daa
xlat
or
add
jae
pop
stos
mov
cltd
sti
jns
adc
jl
addr16
mov
out
sub
add
pop
pop
xchg
sub
add
cmc
ja
fcompl
push
mov
cld
pop
pop
add
inc
bound
fisubrl
and
daa
rol
insb
in
outsb
outsl
fistpll
outsb
mov
loope
in
push
and
inc
pop
mov
cmovge
mov
pushf
fidivrl
dec
mov
xor
rorb
rcll
mov
and
push
fists
sbb
xchg
daa
pusha
sahf
out
cmp
loop
jne
push
mov
aam
je
jg
into
lahf
es
pop
pop
or
jl
sub
lcall
jns
mov
dec
xor
lock
pop
xor
xchg
addr16
and
mov
es
es
push
mov
xchg
jp
jbe
repz
sub
xchg
inc
imul
loope
pop
js
xchg
mov
adc
and
cmpb
loopne
subb
pop
xchg
and
into
test
pop
sbb
xor
push
jmp
add
repz
jbe
add
cmpb
cmp
fdivl
ficoms
popf
nop
ret
inc
jns
lods
cld
dec
mov
loop
xor
lock
pop
loope
adc
repz
mov
mov
cli
inc
push
mov
dec
lea
dec
inc
adc
lods
mov
mov
ds
xor
push
cld
xor
xor
jp
inc
mov
mov
xchg
mov
in
push
jae
les
ret
fbld
hlt
sarb
mov
sbb
adc
cmp
hlt
mov
inc
andb
loopne
jno
inc
sbb
testl
push
push
sbbb
dec
sar
rcrb
aad
cmp
enter
sbb
inc
xchg
sub
mov
lea
loope
sbb
lods
and
out
and
sub
mov
jle
pushf
inc
lock
in
mov
int
add
outsl
dec
or
jg
cwtl
roll
cmp
shll
sub
inc
mov
inc
call
test
neg
inc
mov
adc
sti
dec
gs
fsubrl
mov
or
or
clc
add
out
sarb
jbe
orb
lock
push
fwait
inc
add
test
ficoml
pop
inc
gs
sub
ja
repz
push
mov
dec
adcb
push
incb
stos
test
push
imul
jns
lods
jbe
dec
inc
adc
mov
test
pop
mull
inc
pop
stos
sub
xchg
mov
lods
xlat
rol
mov
mov
mov
push
andb
add
xchg
sbb
lcall
fistpll
sti
push
rcrb
aad
rcrl
daa
add
jno
lret
add
mov
mov
adc
and
clc
rorl
pop
jno
outsb
jmp
xor
jg
push
cmp
movsb
jecxz
add
in
push
sbb
ja
mov
fisubl
ss
repz
xchg
mov
je
xchg
addl
xchg
mov
out
rol
icebp
shrb
jl
arpl
es
inc
nop
push
or
lcall
xchg
xor
pop
and
iret
dec
and
pop
gs
or
dec
lret
repnz
inc
imulb
cld
inc
adc
in
xor
pop
sbb
es
out
popf
mov
mov
jno
scas
add
cmp
xchg
cli
sub
ljmp
out
jno
bound
popf
lret
inc
pop
bound
or
lods
push
dec
pop
stos
inc
call
push
xor
mov
lds
cltd
ds
push
fcoml
or
lcall
ret
and
mov
fsubl
int3
pop
pop
movsb
dec
mov
xor
sti
mov
int3
shrb
fwait
int3
outsl
aaa
jge
ja
ja
es
pop
xchg
bound
adc
sbb
mov
das
push
bound
sbb
jl
iret
dec
push
xchg
sbb
rcll
mov
imul
pop
arpl
aas
inc
lods
adc
sub
stos
dec
xor
xchg
jmp
sub
dec
sbb
std
js
jae
dec
mov
cs
js
add
loopne
or
fisttpl
pop
scas
xor
daa
cmp
or
inc
outsl
ret
mov
fdivrs
sbb
leave
data16
enter
rclb
xchg
int
xor
push
mov
popf
jb
mov
inc
mov
leave
stc
cmpsb
mov
jg
gs
and
clc
mov
stos
lods
xchg
sub
incl
je
mov
cmp
adc
or
fistps
or
push
push
mov
jmp
push
inc
sub
mov
pushf
lods
sbbb
sbbl
cs
mov
push
or
adc
xchg
jbe
xlat
sub
mov
scas
flds
notl
inc
jne
and
xorl
inc
jp
xchg
sarl
or
push
xlat
xchg
push
jae
add
aas
sbb
push
jne
lods
ds
cmp
ficomps
in
mov
movsb
aam
dec
adc
fistl
jp
sbb
out
lcall
jbe
insb
pop
mov
int
push
in
and
xor
dec
pop
lock
in
cwtl
cmp
cmpsb
cld
pop
jge
jno
xchg
fucom
cltd
test
test
xchg
repz
cmp
jbe
es
jle
inc
sub
and
aad
dec
stos
fldl
aas
sub
mov
jecxz
bound
cltd
repnz
mov
push
lret
mov
ret
xchg
xor
mov
push
sub
mov
and
push
imul
jnp
xchg
pusha
out
gs
xchg
pop
ret
imul
or
pop
lds
gs
adc
xor
xlat
pusha
adc
dec
sub
mov
jg
cmp
mov
rorl
sbb
pop
cmp
in
xor
scas
xor
call
das
fildll
pop
ljmp
loope
sub
jg
xchg
scas
out
inc
aad
push
and
cmp
add
mov
sbb
and
and
in
stos
outsl
movsl
jae
fstpl
fistl
jne
lret
jg
xor
cmp
insl
mov
in
clc
pop
dec
mov
je
ret
arpl
inc
mov
xor
mov
and
jp
lds
lret
sub
addr16
enter
out
jns
pop
mov
xchg
or
or
push
push
std
lret
mov
pop
sub
xlat
mov
loope
std
sbb
rcrb
jne
mov
xchg
pushf
cmc
out
das
mov
lcall
xchg
dec
jns
fisttps
push
dec
or
pop
popa
cmpl
and
subl
ret
push
push
fcoml
lock
hlt
lods
push
dec
jo
cmp
mov
test
ds
jb
ret
push
imul
je
xchg
cmpsb
mov
lods
fidivl
xchg
adc
push
lret
jle
ljmp
pop
inc
les
sbb
jge
in
scas
std
leave
cld
sub
cltd
iret
push
loope
inc
cli
jnp
cwtl
sbbb
rorb
dec
ljmp
mov
adc
fwait
add
lds
aad
sub
adc
hlt
cmp
or
decb
and
inc
xchg
cmp
mov
lock
imul
jp
and
mov
dec
mov
in
aaa
leave
rcrl
jnp
fadds
xchg
in
adc
cmpl
daa
mov
lcall
adcb
aas
arpl
mov
lahf
test
push
mov
cmp
jae
cmp
push
repz
enter
sub
dec
loope
jle
or
mov
insl
push
cs
xlat
push
in
mov
push
dec
mov
stc
insl
adc
mov
cmpl
lea
pop
push
pushf
adc
mov
idivb
rcrl
arpl
js
dec
lods
jmp
rol
mov
push
das
outsb
fidivs
rcrb
mov
cmpsl
sub
mov
xchg
ret
movsl
loope
mov
push
icebp
repz
xchg
dec
xor
push
roll
mov
xchg
dec
imul
mov
cltd
push
xor
insb
mov
popa
nop
mov
enter
push
addr16
pop
mulb
lahf
dec
mov
jns
mov
mov
push
xchg
xchg
jmp
add
and
xchg
sub
mov
movsl
push
add
enter
daa
adc
lods
pop
pop
push
push
fldl
xchg
and
push
lret
mov
popf
cwtl
mov
in
add
or
inc
cmp
sbb
jecxz
lods
out
pop
pop
push
xor
popa
nop
push
pop
mov
lcall
jns
fildl
int
dec
and
sbb
pop
jbe
jnp
arpl
pop
mov
adc
inc
jmp
push
xlat
into
ds
cltd
cmp
add
cltd
int
sub
les
adc
cltd
decb
dec
in
cmpsb
inc
ja
rorb
xor
out
dec
add
mov
fstps
xor
add
rorl
fisubs
xor
push
popa
in
sub
and
xor
in
fscale
jo
addr16
dec
xchg
jae
lret
cltd
clc
insb
ret
jg
cmpsb
or
inc
mov
mov
shrl
sub
mov
scas
sbb
pop
fistl
jg
sub
sahf
outsl
mov
aas
sub
inc
cld
or
je
cltd
call
and
mov
xor
sbb
shll
mov
cli
mov
push
mov
nop
test
leave
andl
je
ljmp
aas
jns
inc
lcall
int
or
mov
lock
or
bound
push
cwtl
cld
xchg
call
outsl
adcb
jecxz
movsl
push
push
adc
xlat
loope
jae
fldt
movsl
jo
popa
outsb
mov
dec
dec
dec
fldlg2
add
mov
and
rclb
aam
mov
ljmp
enter
leave
sahf
hlt
pop
inc
jge
clc
dec
xchg
cs
lock
aas
xor
decl
pop
lcall
sub
ja
xor
aad
leave
xor
repz
jl
adc
leave
add
fwait
cld
push
sbb
cmp
int3
push
pop
scas
insb
lods
xor
pop
ljmp
test
xchg
insb
loop
repnz
sti
xor
xor
data16
adc
jno
mov
xchg
mov
ror
add
push
leave
or
push
sahf
movd
xchg
pop
test
rclb
jae
pop
les
lock
jnp
inc
call
sub
or
xor
jae
sbb
or
jb
ss
std
cwtl
or
ret
imul
aaa
fwait
hlt
add
cmp
enter
push
xor
mov
push
mov
mulb
nop
icebp
fisubs
sbb
fcomps
and
setle
fdivrl
or
cmp
aas
and
push
aam
mov
sar
stos
push
push
imul
xor
loop
lods
pop
xor
fisubs
inc
or
cmp
rcll
or
int
in
test
xor
push
mov
mov
push
dec
push
xor
shlb
xchg
loope
and
and
jo
xchg
insl
imul
sub
mov
push
mov
push
sahf
icebp
xchg
pop
cmc
cmp
idiv
xchg
inc
sbb
xor
sub
dec
xor
push
mov
mov
mov
mov
xor
dec
pushf
addr16
xchg
rcrl
arpl
add
mov
xor
cmpsl
and
xchg
imul
notl
das
setp
mov
or
pop
jno
out
out
pop
add
sbb
out
or
push
imul
arpl
or
push
mov
push
push
pop
xchg
jne
sbb
sub
inc
inc
add
adc
cld
or
lea
fidivl
insb
or
pop
and
add
shll
pop
dec
jg
lds
pop
or
sub
sub
pop
pop
or
jb
std
inc
push
sub
movzbl
sbb
rorb
hlt
xlat
xchg
icebp
lcall
jg
shrl
or
sub
push
jge
mov
and
pop
inc
incb
and
cmp
jle
movsb
cld
popf
and
xchg
push
cmp
jp
je
mov
push
movsl
rclb
mov
loope
xchg
jl
outsl
aaa
xchg
mov
xor
lahf
repz
paddusw
pushf
add
pop
ljmp
ljmp
cmp
orl
fcoml
sub
aad
aam
and
sbb
cmp
mov
pop
dec
icebp
mov
and
inc
sub
cmp
aaa
les
sbb
sub
xor
gs
xlat
test
jmp
das
loope
or
add
dec
test
jge
jbe
xchg
xor
lret
into
testb
pop
mov
inc
into
xor
cmp
adc
in
mov
imul
jge
xor
xchg
cmp
out
or
test
jg
jge
rorb
push
xor
sub
or
jns
sbb
fwait
mov
rorl
ja
mov
xor
fcmovb
push
add
rol
jge
pop
hlt
je
inc
cld
xchg
lret
sti
clc
dec
mov
dec
dec
mov
push
xor
mov
out
repnz
dec
pushf
and
js
sti
cltd
dec
lret
xor
push
push
dec
js
js
or
std
addr16
add
testl
xchg
xchg
out
adc
mov
arpl
push
pop
or
hlt
push
xorb
and
aam
call
xorl
pop
cmp
mov
test
insl
loopne
cmpsb
and
cmc
add
add
inc
and
sub
jb
loope
cmp
mov
movsl
mov
inc
ja
lea
test
push
xor
jg
mov
pop
mov
cmp
ja
adc
sti
or
adc
jp
and
movsl
add
xlat
lods
xlat
popa
scas
in
sbb
in
pop
xchg
fisubs
mov
mov
jp
mov
mov
popa
shlb
test
out
sbb
and
subl
mov
mov
sub
cld
mov
loopne
pop
movsl
sub
fisubs
inc
popa
push
and
shlb
mov
sbb
mov
cltd
xor
mov
add
pop
or
out
je
in
outsb
in
in
pop
jb
jae
gs
std
repz
jbe
pop
popf
scas
and
and
sub
inc
ret
mov
sub
out
add
aaa
xor
cmp
aad
xchg
mov
nop
sub
sub
sbbb
pop
sub
inc
into
fisubrl
sbb
int
icebp
loopne
dec
mov
inc
pop
fdivr
mov
xor
cmp
jbe
dec
pop
stos
cld
rclb
xchg
movd
jae
or
int3
call
lret
insb
sub
mov
stos
outsl
adc
loop
leave
es
lcall
sbb
add
ret
push
dec
gs
leave
lock
icebp
mov
push
mov
rclb
cltd
sbb
mov
mov
arpl
stc
fsubrs
xor
or
dec
int
mov
les
test
les
or
mov
nop
test
mov
pusha
adc
mov
add
es
in
popa
xor
mov
sub
dec
sub
popf
movsb
cmpb
lods
and
insb
movsl
inc
push
mov
lcall
push
ss
sbb
sbb
shrb
adc
in
hlt
stc
aam
cmc
xchg
xor
push
repz
dec
push
adc
stos
inc
lock
adc
pop
rorl
fnsave
icebp
lret
fcoms
test
mov
adc
push
mov
xchg
xchg
pop
jp
mul
das
add
push
mov
jns
push
mov
mov
pop
and
movsb
xor
or
ficomps
addl
popa
setno
push
adc
mov
mov
pop
popf
testl
mov
popf
dec
aas
in
sub
xchg
movsl
ja,pt
mov
push
xlat
sbb
mov
mov
xchg
push
test
push
jb
xor
orl
popa
jbe
mov
add
push
sti
loop,pt
lret
outsb
mov
das
adc
jne
jb
dec
adc
int
into
lcall
movsb
mov
in
jl
sub
mov
fisubrl
cmp
leave
repz
int3
lahf
int
push
pushf
sbbb
dec
inc
sarb
mov
pop
mov
gs
dec
fwait
shlb
shrb
cltd
and
inc
jle
js
lds
push
out
and
shll
mov
call
leave
mov
jne
mov
xor
icebp
sarb
xor
gs
adc
popa
mov
clc
arpl
popa
push
cs
xor
xchg
dec
dec
jno
repnz
stc
jns
shll
sbb
ret
jbe
dec
stos
pop
inc
in
out
sub
inc
and
test
jae
in
jno
fildll
xor
and
jp
sub
and
enter
mov
dec
mov
out
and
push
push
cwtl
dec
dec
cmpsb
rcll
outsl
and
adc
dec
rolb
scas
loopne
mov
or
sbb
jl
pushf
data16
popa
inc
sbb
mov
mov
fidivrs
pop
xchg
adc
imul
dec
lret
pop
jae
mov
ret
add
test
adc
sbb
pop
mov
cli
insb
cmp
sahf
adc
add
dec
or
movsb
es
daa
aas
pop
insb
inc
repnz
inc
mov
ret
sub
pop
jecxz
pop
mov
and
daa
mov
sub
jbe
mov
cs
scas
iret
pop
jp
sbb
xorl
outsb
fldcw
jp
in
xor
insl
in
loop
fimuls
add
pusha
cmp
or
push
mov
and
enter
jbe
push
sub
or
xor
and
cmp
fildl
js
shrb
inc
in
adc
add
insb
pop
cmc
cmp
push
push
lea
outsb
dec
mov
push
lret
dec
idivb
shrd
push
push
xor
test
push
lods
inc
xchg
sahf
adc
cmp
imul
insb
out
jl
out
addr16
sahf
aad
and
add
dec
stos
aad
jp
daa
loop
jg
in
sbb
rclb
push
sbb
inc
or
cmp
cwtl
sbb
push
shrb
pop
xor
add
popa
add
mov
dec
in
jge
aas
es
pusha
sbb
shlb
add
xor
pop
nopl
in
sysexit
data16
mov
lock
cmc
sub
pop
pop
rolb
xchg
orl
xchg
rclb
or
inc
clc
lock
fldcw
dec
add
fdivr
jae
out
cmpsl
fwait
popw
add
popl
pop
pop
jae
repz
pop
or
cmp
aam
nop
sub
and
lret
mov
scas
jae
aas
cmp
xchg
lods
movsl
ss
pop
orb
and
mov
jl
push
cmp
push
pop
mov
jp
enter
ljmp
pop
or
aam
bound
les
out
pop
sub
mov
mov
repz
xor
push
imul
cltd
je
stos
mov
int
inc
adc
in
cltd
scas
shrl
ja
aam
fsubs
sub
inc
js
add
lds
inc
pop
shll
stc
adc
test
movsb
adc
push
mov
and
dec
orb
xchg
sub
add
jns
xchg
scas
cmpl
inc
movsb
push
mov
cmpsl
sbb
shlb
js
nop
push
xlat
or
mov
das
mov
ja
mov
mov
aaa
cmp
pop
sbb
push
scas
hlt
imul
ret
loope
jo
insl
xor
inc
cmp
call
sbb
cs
xchg
inc
xchg
inc
test
iret
sbb
ss
daa
lcall
add
sar
add
sbb
ljmp
jo
sub
rclb
add
nop
push
cmpsb
xor
xchg
inc
clc
andl
mov
xor
jno
sbb
xchg
lock
arpl
jb
or
xchg
lcall
leave
aas
lods
gs
loopne
mov
and
adc
sub
mov
call
inc
clc
jmp
sahf
scas
xor
push
out
mov
sbb
sub
out
dec
rorb
lcall
lahf
stos
outsl
jo
cmp
out
xchg
repnz
imul
xor
and
push
fstpl
out
int
push
sbb
call
jmp
cs
cmp
push
sbb
cmpl
icebp
dec
in
fcoms
push
or
sbb
mov
gs
insb
jmp
mov
lds
mov
pop
sub
xchg
int3
mov
mov
pop
mov
sub
xor
fdivrl
aas
jmp
sub
ret
sbb
out
jno
sahf
jecxz
cmp
loope
lods
pop
cmpsb
push
mov
jmp
or
adc
stos
sub
xlat
dec
addr16
and
sti
das
sahf
rol
dec
ja
and
cmpsb
std
iret
incb
in
or
hlt
xchg
in
push
imul
jp
or
es
test
mov
in
lock
es
sbb
pop
sub
sub
dec
mov
push
roll
sbb
dec
shl
cld
ljmp
insl
pop
add
cwtl
jo
jl
jle
xchg
xor
pop
pop
mov
cmp
push
dec
add
dec
pop
jae
mov
out
insl
push
mov
mov
mov
adc
call
mov
cmpsl
push
jae
jb
pop
lret
loop
mov
pop
int3
jno
shrb
ss
sub
xchg
dec
push
mov
jl
pop
mov
mov
jmp
mov
pop
inc
push
xchg
mov
je
ds
int3
sbb
fstl
rcrb
fisttps
cltd
cmp
aaa
pop
ljmp
nop
dec
or
fisubl
inc
aaa
pop
xor
lock
in
lret
and
lods
bound
les
int
bound
lods
test
jcxz
xchg
sbb
pop
nop
mov
sbb
scas
fistpl
mov
xchg
jl
xlat
sti
idivb
nop
inc
int3
inc
out
xor
jle
sbb
jns
dec
incl
push
aam
jae
pushf
out
xchg
xor
lret
xchg
adc
mov
jp
div
int
push
add
inc
rolb
movsb
jns
cmp
scas
stc
jbe
jp
lcall
mov
ds
pop
pusha
out
lret
lods
scas
test
push
cld
les
jmp
ret
faddl
imul
enter
outsl
inc
mov
cmpsl
xor
mov
push
mov
jnp
pop
test
add
outsb
roll
mov
inc
aam
loop
cmp
pop
jmp
adc
mov
sub
repnz
cwtl
dec
pop
and
nop
xchg
mov
shll
repnz
jmp
sub
mov
and
scas
jmp
pop
xchg
sar
and
mov
pop
addb
je
mov
mov
test
out
pop
cmp
in
mov
jle
cmpsl
push
push
int
pop
repnz
sbb
sti
mov
push
fmul
lahf
mov
sbb
mov
pop
lret
jle
dec
push
shll
mov
sbb
xchg
mov
cmpsl
call
pop
xor
push
mov
ja
jnp
rcl
and
inc
cmpsl
into
movsb
mov
mov
pop
ret
orb
sub
xchg
ja
jge
pop
jmp
lret
repz
push
cld
fst
mov
stos
push
jno
mov
jae
je
dec
jg
push
jo
push
or
test
pop
stc
ss
inc
cmp
add
mov
dec
pop
movsb
jno
adc
clc
cmp
adc
fmul
mov
adc
cmp
push
aad
inc
pop
pop
mov
lods
mov
mov
movsl
imul
aaa
in
pushf
mov
sub
fimuls
push
adc
aas
xor
add
xchg
sbb
outsl
mov
inc
dec
daa
pop
pop
inc
cmc
and
fisttpl
sbb
movsb
push
or
cmp
mov
pop
sub
fidivl
clc
or
pop
rorb
ret
pop
inc
out
xor
pop
sub
sbb
fucom
leave
xchg
cmp
fsubrl
mov
jmp
out
cmp
mov
cli
sbb
sbb
loope
cmp
mov
dec
je
push
fisttpll
mov
push
jo
jo
and
mov
loopne
adc
mov
in
sub
or
ljmp
pop
push
mov
jbe
mov
pushf
jae
mov
push
ret
and
adc
andl
insl
dec
cmp
jb
loopne
stos
inc
pop
movsb
hlt
test
test
outsb
jl
adc
or
stos
jp
rcll
stos
sub
push
cld
mov
mov
ss
aaa
jo
pop
sar
into
push
fisubrl
pop
mov
sbb
ljmp
int3
lret
clc
pop
mov
dec
adc
mov
xor
xor
js
mov
pusha
jl
outsb
push
ret
mov
es
cmp
cmp
loopne
mov
aam
fwait
inc
add
xlat
iret
lods
shl
aad
mov
xchg
loop
outsl
test
leave
or
dec
cltd
sub
scas
arpl
adc
scas
cmp
decb
enter
sub
add
fisubrs
mov
jo
fldl
pop
addr16
xchg
or
cmp
add
hlt
js
jp
pop
mov
xchg
outsb
cmpsb
xchg
fldenvs
lret
mov
arpl
test
mov
mov
jecxz
movsb
add
cli
test
or
sbb
push
cmp
push
bound
aaa
cmp
clc
outsl
push
cmp
int
fwait
mov
sub
push
cmp
mov
movsl
andl
imul
add
sub
cmc
cmp
iret
decl
popf
jnp
pop
addl
cltd
popa
push
add
dec
jl
inc
test
sub
dec
cmc
jl
lock
subb
fsubr
dec
pusha
fistpll
push
xchg
mov
lods
stos
sbb
fiaddl
sahf
inc
sahf
repnz
mov
fldcw
pop
fxch
ds
add
fistl
mull
pop
mov
and
and
xchg
adc
push
xchg
nop
xchg
into
cmc
cmpsb
repnz
dec
imul
popf
sahf
ret
pop
inc
call
xchg
lahf
test
fldenv
mov
cmc
and
das
orl
xor
insb
in
fcomip
imul
cld
push
cmp
add
les
ret
cwtl
cmp
shrl
sbb
dec
xchg
loope
add
daa
movsl
pop
data16
fcomi
push
out
movsb
les
add
cmp
ja
mov
cmp
inc
sahf
sbb
adc
xchg
pop
or
pop
dec
xor
addr16
inc
push
jmp
aaa
aad
ja
adc
rorl
cmp
jmp
push
sahf
or
jmp
add
mov
adc
fwait
push
lea
or
push
and
cwtl
cmc
adcb
rorl
imul
fwait
mov
xchg
in
fcomps
push
or
mov
mov
cli
adc
stos
push
inc
and
repz
lods
sub
shll
imul
mov
loop
xor
fistpl
dec
insl
shr
test
mov
jno
push
rcrl
arpl
pop
stos
pop
pusha
pop
inc
cld
pop
dec
cwtl
fidivs
sub
pop
sub
add
shll
cmpsl
stos
mov
and
mov
and
inc
fwait
ss
push
mov
push
push
add
arpl
mov
and
inc
mov
mov
clc
loope
loope
sbb
or
out
outsl
jmp
scas
fisubs
jmp
gs
fadd
push
adc
and
xor
jmp
cmpsl
push
cmp
mov
dec
fidivs
jns
sbb
xor
scas
nop
in
mov
add
xorl
pop
adc
stc
push
test
lea
insl
push
loope
test
pushf
aad
or
mov
xorl
jl
test
mov
pop
jmp
pop
enter
scas
xchg
pop
aaa
inc
imul
or
ret
call
jge
mov
aas
aam
into
aaa
and
lret
xchg
mov
adc
bound
fimuls
lods
xchg
xor
ret
insb
dec
incb
xor
fistpll
cmp
rol
pusha
xor
mov
sub
lock
mov
loopne
addr16
shll
dec
xor
xchg
out
push
rorl
fmulp
xor
popf
adc
outsl
pop
inc
cld
xchg
movb
int3
dec
jl
daa
leave
imul
imul
pop
test
ret
sbb
std
mov
cmp
sub
dec
es
jecxz
dec
aas
pop
pop
es
out
pop
jle
sahf
sbb
mov
sub
cmp
ljmp
scas
stos
ss
jl
xchg
cmp
jne
jmp
cmp
aas
movsl
jo
sti
jl
dec
mov
lcall
sar
hlt
sbb
lret
mov
or
and
in
pusha
inc
and
arpl
pop
jbe
cmp
sub
psraw
jno
shrl
jns
fisttpl
ja
stc
adc
test
call
jns
sbb
cmc
dec
cmp
or
add
lods
mov
inc
rcrl
jle
in
xor
std
and
fmuls
das
jne
pusha
cmp
lret
repnz
jmp
sbb
int3
jbe
ret
sbb
mov
hlt
ljmp
int
sbb
inc
jb
clc
cmp
scas
fcmove
in
add
or
or
lods
mov
mov
fwait
stc
pop
subb
inc
outsl
and
add
out
mov
loop
push
fisubs
faddl
fistpll
mov
pop
and
daa
icebp
mov
pop
sub
jae
arpl
adc
mov
xchg
pop
cmp
int3
mov
push
xchg
sbb
test
call
inc
pop
aad
push
jmp
or
and
mov
adc
divl
imulb
js
pop
fisubrs
rorb
sahf
add
add
inc
inc
std
clc
std
testb
out
movsb
push
mov
cs
jge
dec
inc
xchg
sub
fimull
pop
leave
pop
mov
mov
loop
sarl
les
fs
mov
in
xor
jns
lods
cwtl
addl
jp
scas
cmpsb
lock
and
pop
mov
xlat
lea
int
jno
movsb
clc
add
shrl
dec
mov
cmp
sub
cmp
movsb
lods
leave
daa
inc
rclb
bound
mov
cmp
lods
notb
mov
mov
insl
sub
push
loope
ss
lcall
adc
pop
sub
cmp
ljmp
inc
inc
cltd
mov
push
inc
jnp
xchg
fsubl
inc
loope
cmc
sahf
scas
dec
ret
push
flds
out
std
mov
test
mov
cmp
shl
push
out
pop
cmp
dec
ds
data16
jae
jmp
push
and
mov
inc
dec
or
ficoml
or
shll
lahf
popa
mov
arpl
dec
rol
sbb
cltd
push
push
lret
insb
jge
adc
pop
jo
in
jnp
pop
ljmp
mov
sahf
xchg
sbb
jmp
ret
out
inc
push
pop
js
in
cmp
xlat
inc
rolb
cmp
fwait
orl
sub
mov
xlat
js
addr16
fstpl
fs
mov
outsl
mov
jp
fwait
sub
lcall
mov
fwait
pop
pushw
push
ja
cltd
shll
jg
and
daa
addr16
and
xchg
xchg
mov
jbe
test
mov
mov
ss
xor
xchg
pop
jb
mov
sarl
adc
push
leave
push
jo
jp
mov
leave
rcrb
iret
jge
xor
aaa
jg
sahf
je
iret
mov
shrl
dec
push
fs
loope
push
jne
and
sti
pop
dec
and
ficomps
or
dec
aam
xchg
arpl
jl
dec
or
inc
cmp
out
ds
cmp
movsl
icebp
xchg
sbb
lds
pusha
lcall
push
testb
popa
inc
cmp
mov
in
mov
xchg
leave
mov
mov
sub
pop
or
fucomi
cmc
je
sti
and
daa
sub
inc
inc
lret
movl
xchg
cmp
and
enter
jne
loope
sub
popa
mov
dec
mov
mov
sbb
or
add
push
fidivrs
pop
mov
cmp
mov
daa
or
nop
insb
les
movsb
and
xchg
jg
xchg
insb
nop
lret
mov
repz
jae
and
cmpsb
flds
and
cs
fcmovu
xlat
test
mov
mov
out
mov
sbb
jbe
sbb
pop
pop
push
popf
push
mov
push
cmp
lret
or
lods
dec
dec
es
cmp
rorb
push
shrl
dec
gs
xchg
xor
ret
lods
hlt
pop
push
push
inc
pop
xor
stos
pop
and
mov
dec
jno
push
mov
pop
sbb
dec
pop
pushf
js
test
popa
sub
sub
sub
push
test
and
pop
jle
jle
popf
cmp
push
mov
push
add
lahf
mull
ds
int3
imul
aam
sbb
sbbb
int
ficoms
popa
add
pop
jl
stc
stos
sbb
icebp
or
pop
imull
stos
movntq
adc
push
or
xchg
mov
dec
addl
add
mov
ljmp
fstpt
fdivl
int
pop
mov
repz
data16
xchg
mov
fisttpl
in
mov
fs
in
aaa
stc
aam
leave
ja
cs
insb
std
imulb
mov
mov
and
shrd
pmaddwd
adc
mov
call
out
xor
int3
xor
lods
xor
sbb
test
adc
dec
xlat
or
xchg
es
lret
nop
and
dec
lret
or
jae
scas
cmp
shll
addr16
cltd
push
pop
lcall
sti
pusha
lods
or
add
dec
ds
xchg
inc
jae
xor
into
jae
push
fiadds
rcrb
inc
icebp
or
filds
mov
xor
push
pop
xchg
shlb
pop
mov
adcb
aam
xchg
jg
test
es
sti
fnstcw
cmp
pop
fcmovnb
push
pop
cmp
pop
in
setp
push
rol
inc
jmp
stos
add
std
cwtl
addr16
insl
xchg
sbb
popf
inc
jg
lods
pushf
cmp
movsl
inc
mov
mov
xchg
push
jne
inc
sbb
insl
jbe
sub
jl
in
xor
pop
and
xchg
stc
cmpsl
jne
ret
into
jb
movsb
xlat
xchg
dec
lahf
mov
arpl
xor
push
dec
clc
icebp
sub
je
jnp
push
mov
push
enter
inc
mov
ljmp
lahf
jp
adc
adcl
mov
leave
lcall
test
cwtl
jne
out
sbb
cmp
enter
mov
mov
in
mulps
aaa
push
mov
or
mov
je
fistl
mov
sub
shlb
sbb
xchg
add
lods
cmpb
push
negl
mov
and
jae
imul
and
xchg
xorb
int
jmp
or
test
or
ljmp
or
inc
sbb
xchg
scas
push
mov
insl
sti
jp
sub
add
sub
rclb
sub
push
adc
or
imul
sahf
lods
mov
pop
push
cmpl
pop
mov
out
sbb
arpl
out
xchg
popf
imul
xchg
pop
pop
orb
dec
je
lret
repnz
or
xor
lock
stos
int
int3
sub
jge
testb
stos
jae
outsb
xchg
dec
mov
neg
push
test
incl
add
nop
in
sub
dec
roll
cmp
xchg
iret
and
sbb
dec
ret
mov
push
das
xchg
pop
mov
je
mov
leave
inc
gs
rol
xor
add
outsl
mov
ret
lods
sbb
mov
pop
push
incb
and
daa
test
movsb
xchg
scas
push
in
lret
imulb
js
pushf
cmp
fmul
lcall
inc
pop
dec
ds
leave
cld
and
inc
mov
sbb
adc
clc
pop
mov
shll
sub
nop
mov
sete
daa
clc
inc
or
adc
sti
inc
sbb
data16
fstpt
sbb
or
outsl
cs
jae
fld
out
or
xorl
inc
aas
xor
jg
sub
xchg
adc
and
cli
lods
and
or
jnp
xor
call
dec
inc
or
xchg
ss
jle
xchg
mov
pop
or
ret
fdivp
fstps
bnd
mov
sub
pop
push
lea
pop
int
aam
mov
mov
jmp
adc
jp
and
mov
fwait
hlt
inc
jge
sub
pushf
ret
jp
popa
push
cmpxchg8b
int3
mov
hlt
movsb
lret
or
xor
mov
xchg
call
ds
ljmp
movsb
cmp
stos
jno
imul
mov
fwait
cmp
popf
jp
xchg
gs
mov
push
mov
fdecstp
icebp
push
cli
fadds
or
mov
jnp
jecxz
aas
add
fisubrs
aas
push
dec
fstps
call
inc
lahf
xchg
and
lret
loope
cld
bound
xor
es
cmpsl
stos
loop
ss
xchg
push
cmp
xchg
aam
cmp
imul
pop
or
mov
cs
je
dec
in
cld
xchg
xchg
mov
or
push
sbb
ds
cwtl
rolb
dec
cmc
pushf
fsub
lret
sahf
in
xchg
daa
push
jns
xchg
out
xor
jg
stos
inc
sub
mov
imul
xchg
xchg
imul
xchg
inc
mov
jl
cli
in
sbb
push
inc
jb
int
lahf
pop
and
out
pop
pop
shrb
mov
out
jge
inc
pop
adc
sub
jmp
or
lcall
sahf
test
into
dec
test
mov
mov
and
ror
ret
mov
hlt
mov
imul
push
and
add
iret
and
sub
clc
repz
lods
testb
xchg
push
cs
xchg
inc
add
mov
fstpt
jge
inc
jb
dec
cs
in
movsl
in
push
inc
push
sbb
mov
lret
mov
xchg
jg
xor
and
mov
xchg
xor
or
mov
dec
stos
mov
pop
xor
add
adc
daa
arpl
lret
sbb
dec
mov
sbb
mov
push
fwait
xchg
nopl
clc
add
mov
out
mov
sbb
filds
outsl
sti
pop
or
fcomi
iret
push
cmp
cmp
ja
inc
dec
aas
and
sub
mov
stos
enter
or
movsl
popl
sar
scas
mov
push
mov
icebp
pop
or
mov
inc
in
and
push
test
mov
sbb
inc
dec
jns
jo
adc
mov
aad
sub
xchg
pop
idivl
pop
sti
ret
dec
mov
pop
or
das
mov
fisubl
jo
xor
out
mov
xchg
out
dec
mov
loop
subl
push
imul
mov
cmp
jecxz
jns
fdivr
inc
adc
rclb
xor
mov
js
xorl
cmc
mov
test
and
out
fs
mov
cmpsb
js
loopne
dec
adc
sahf
mov
cmp
mov
sbb
inc
out
enter
adc
mov
pop
lods
insl
jae
jp
xor
adc
push
ret
push
cmp
ret
xchg
in
hlt
push
mov
lcall
dec
mov
sub
push
bound
rep
sarb
mov
loopne
cmpsb
fs
shrb
and
push
jo
mov
mov
out
add
add
xchg
aam
mov
ja
mov
je
add
scas
and
xor
outsb
jns
cmp
cltd
jge
andl
adc
stos
out
arpl
fs
lcall
push
outsl
stos
mov
clc
inc
bound
loopne
mov
jg
adc
and
int3
mov
mov
fdivrl
mov
sub
cmpb
pusha
lret
repnz
fcoms
cmc
mov
aaa
call
imul
or
and
pop
cli
loope
jnp
jle
push
add
xorb
in
push
outsb
and
cltd
push
jp
sub
sub
dec
in
jo
movsl
ret
loopne
sahf
dec
sub
mov
popf
ds
jg
enter
adc
push
sub
pop
add
int
mov
insl
add
jl
outsl
sbb
or
sbb
sub
mov
or
dec
popa
mov
outsl
sub
call
shll
adc
lods
cmpsb
xchg
shl
dec
push
or
das
enter
add
es
mov
jg
inc
unpckhps
data16
sti
aam
stc
mov
push
mov
imul
and
notb
sub
sbb
cmpsl
or
lea
out
adc
mov
sysexit
rcr
js
jecxz
outsb
repnz
push
sbb
mov
pop
or
loope
sbb
dec
xchg
inc
pop
pop
jle
nop
movsl
mov
push
mov
xchg
lods
imul
xor
loope
add
jbe
pop
sub
or
adc
adc
ljmp
and
push
and
xchg
lret
repz
pop
mov
push
das
cmp
lcall
push
fldenv
pop
js
lahf
jmp
int
push
call
imul
int3
out
outsb
pop
adcl
xchg
clc
xchg
lods
dec
rcrb
mov
insl
rorl
pop
jnp
add
jmp
or
sar
and
and
bound
push
adc
push
ja
push
add
add
mov
in
js
lcall
mov
add
dec
stos
call
cld
cmpsb
mov
add
aaa
xchg
test
cmpsl
pop
inc
sub
xor
dec
shrl
mov
adc
mov
mov
int3
pop
adc
mov
jge
or
dec
and
popa
mov
iret
in
push
push
orb
ja
push
xor
movsb
popf
lods
dec
stc
sub
mov
push
xchg
xchg
pushf
outsb
mov
hlt
bound
xchg
push
jb
popf
pop
clc
mov
jmp
xchg
inc
inc
xor
and
mov
jle
test
mov
pop
mov
lods
jmp
cmp
loop
mov
rorl
clc
add
mov
pop
fmul
dec
and
int3
loop
lods
mov
scas
add
fs
andb
dec
sub
push
add
std
push
xor
sbb
push
add
push
mov
repz
js
out
daa
out
int3
xchg
mov
lcall
gs
or
mov
xchg
sbb
add
mov
les
xor
sub
inc
xor
jl
repz
mov
dec
out
dec
movd
dec
mov
jp
jge
dec
lds
data16
imul
and
popa
mov
xor
cmp
add
push
push
jge
bound
hlt
shl
lods
jp
mov
lods
push
and
stos
xchg
enter
jp
mov
pop
xor
push
lret
and
imul
popl
in
cld
push
push
mov
test
inc
sbb
sub
and
adc
pop
dec
addr16
rcll
mov
in
int3
mov
xor
movsb
fwait
push
add
dec
rcrl
mov
sub
js
jl
add
enter
out
vandps
inc
stc
dec
frstor
adc
mov
clc
mov
adc
pop
lock
cmp
loop
cli
jae
xor
mov
xor
lea
enter
icebp
xchg
dec
xchg
popl
sub
imul
add
ret
movsb
filds
inc
sbb
clc
pop
push
ds
sub
xlat
push
xor
push
sub
sub
mov
add
leave
loope
shll
jecxz
pop
push
inc
push
cmp
roll
or
lret
pop
into
movsb
std
add
sahf
lahf
jo
mov
mov
adc
push
inc
inc
ljmp
push
pop
add
sbb
lret
jmp
mov
and
mov
jne
and
mov
insb
dec
test
push
push
mov
dec
jno
repz
outsb
pop
fdiv
dec
mov
movsb
pop
inc
and
adc
xor
cmp
aad
sahf
adc
jmp
xor
mov
test
or
stc
mov
jg
fisubl
movsb
cltd
sbb
sbb
sub
dec
les
jmp
inc
in
push
sub
mov
lds
popa
jge
add
cmp
aaa
xchg
jmp
push
ja
push
out
insl
jg
fcomps
dec
cmp
popf
int3
mov
shrl
and
sub
iret
and
dec
inc
and
mov
ss
out
jl
mov
sbb
xchg
mov
mov
inc
das
mov
push
sbbb
inc
test
cld
loope
scas
pop
mov
jae
inc
mov
sbb
cli
aam
mov
xor
and
jnp,pn
lods
sarl
sbb
sub
lret
hlt
movsb
xor
mov
addr16
push
jle
push
inc
jecxz
mov
dec
cltd
popa
mov
rol
ret
mov
xor
mov
sahf
in
gs
and
pop
cmc
lret
add
push
jb
xlat
loopne
shl
xor
mov
cli
test
sub
stc
jp
dec
pop
in
enter
fnsave
xchg
mov
pop
adc
repz
and
int3
pop
push
into
shr
cltd
and
jb
inc
push
fcmovu
movsl
jge
push
inc
shrl
lret
jb
cmc
fwait
xor
or
dec
js
int3
stc
insl
xchg
mov
int3
jbe
sbbb
cwtl
aam
mov
lret
ds
stos
and
sbb
mov
adc
and
std
xor
pop
mov
call
dec
mov
fsubs
movsl
xchg
int
mov
js
cmp
roll
loopne
xchg
es
std
jae
test
lret
lahf
mov
mov
jns
lods
pop
lahf
mov
dec
jno
mov
xor
in
insb
dec
mov
test
insb
pusha
std
jo
dec
repz
sbb
sub
jb
xorb
mov
fs
pop
sub
mov
xor
sbb
popf
jnp
cmp
jl
xchg
sbb
insb
bound
inc
out
lret
and
nop
sub
mov
sbb
in
jl
xor
repz
pop
lcall
or
icebp
inc
cld
mov
jae
lock
pop
sti
imul
ret
in
push
stc
addb
imul
shlb
mov
lcall
adc
add
sahf
dec
ret
faddl
lcall
xchg
sti
cmp
push
mov
and
out
push
mov
sbb
or
cwtl
in
xchg
dec
fildll
xor
rcll
push
jl
mov
cmp
stc
mov
or
adc
sbb
daa
pushf
rclb
xor
dec
gs
sahf
pusha
insl
pushf
clc
hlt
xor
outsb
faddl
mov
push
mov
mov
sbb
push
stos
lss
shll
lds
pop
ficomps
jnp
cmp
pop
lea
js
jns
ljmp
add
jle
test
mov
xor
jg
inc
pop
or
cmc
insb
sbb
push
jno
dec
inc
imul
cwtl
pushf
or
das
addr16
jl
addr16
pop
push
pop
xchg
mov
icebp
cld
es
shr
cli
insl
add
jmp
jns
or
clc
add
fucom
xor
mov
jbe
mov
jne
aas
mov
mov
pop
mov
and
cs
inc
sub
jns
jne
popf
pop
stos
xchg
in
mov
mov
sbb
lods
mov
loop
mov
scas
inc
mov
imul
ja
in
dec
rorb
mov
movsl
loopne
or
ja
int
jno
outsb
movsl
lea
shl
or
insl
jb
jecxz
aad
hlt
jnp
lods
and
sti
fcomip
movsl
insb
movsl
xchg
add
in
aam
aam
add
mov
daa
inc
movsl
test
add
and
xor
ja
jno
popa
insb
or
xchg
jbe
mov
xchg
mov
push
ss
pop
mov
test
test
movsl
xchg
scas
inc
in
outsb
or
push
add
das
cli
ret
mov
lret
mov
enter
jo
jg
add
pop
pop
stos
in
sub
xchg
ffree
fwait
outsl
dec
jg
outsb
pop
lcall
loop
or
add
enter
std
jle
ja
scas
cs
push
xlat
aam
jg
push
mov
arpl
iret
shrb
mov
jg
fsubrl
test
je
xchg
addr16
lret
movsl
add
loop
pop
sar
sbb
push
in
imul
mov
sarb
pop
or
jl
jae
leave
int
sti
and
mov
dec
jp
jmp
imul
pop
ja
outsb
loop
add
cwtl
mov
test
mov
xchg
loop
jge
cmp
add
sub
push
sbb
mov
jg
jb
mov
mov
mov
aaa
test
cmc
add
push
lret
mov
rclb
dec
xchg
stos
sub
or
hlt
sbb
pop
out
aad
sbb
rorl
in
ds
lods
xchg
out
sub
or
lretw
mov
sub
in
and
hlt
and
adc
int
jns
sub
imulb
ja
push
adc
fnstsw
mov
stos
push
ret
xchg
fstps
lock
pop
push
mov
sbb
or
xchg
outsb
je
lcall
stos
fnstsw
gs
stos
daa
sbb
xchg
ret
call
ret
mov
ja
and
pop
pop
clc
mov
mov
add
xor
repz
pushf
jae
ret
jns
loop
dec
out
mov
mov
pop
pop
out
pop
sbb
jns
fsubrs
sbb
fst
repnz
jae
int
and
add
jp
add
outsb
mov
arpl
pop
inc
fistps
add
lds
jo
inc
xchg
push
jae
sbb
jae
pop
mov
cld
loopne
xor
ja
adc
add
sbb
icebp
dec
mov
cwtl
rcll
imul
jp
cmp
in
ds
std
inc
push
xchg
popa
aas
push
js
cltd
mov
mov
std
lahf
adc
roll
addr16
adc
stc
ss
repnz
nop
xor
imul
push
and
jecxz
and
stc
cmp
fabs
outsb
mov
cwtl
add
dec
pop
lcall
jecxz
push
inc
jnp
int3
xchg
pop
test
jmp
outsb
testl
add
lock
xor
push
cli
sbb
ljmp
inc
jno
mov
or
enter
dec
and
pushf
in
cmp
fdivrl
lea
int
xchg
and
push
movsl
mov
jl
and
push
push
outsl
cltd
loopne
out
insb
loopne
lcall
mov
push
ljmp
cwtl
dec
mov
arpl
sti
cmpb
daa
imul
aad
in
push
xchg
or
les
movsl
mov
xor
xor
cmp
jnp
push
repz
pop
test
dec
mov
push
sub
jle
data16
test
andl
ret
data16
pusha
aad
in
pop
repnz
inc
cltd
into
sub
call
mov
shrb
loopne
jle
sub
popa
mov
mov
xor
xlat
daa
popf
pop
int3
fwait
sub
mov
stc
test
scas
cmp
ds
mov
jecxz
mov
int
xchg
lahf
enter
mov
movsl
sbb
mov
xor
lods
fbstp
xchg
movsl
test
mov
jno
repnz
mov
mov
cmpb
movsb
pop
cmp
pop
adc
enter
sti
imul
pop
ja
sub
xor
sarb
sub
lds
mov
test
or
adc
lret
jg,pt
jle
pop
sbb
xor
sbb
daa
das
cltd
mov
loop
faddl
mov
lea
jecxz
lret
inc
xor
mov
ds
cmc
mov
inc
pop
push
fstps
pushf
cmp
divl
mov
xchg
jo
push
data16
in
push
nop
into
pop
insl
dec
jl
les
addb
cmp
lret
dec
insb
ret
cs
div
xchg
mov
shll
cld
mov
push
pop
lods
iret
imul
adc
in
lret
push
enter
cltd
xchg
or
ficoml
test
fcmovu
incb
add
int3
inc
fwait
inc
or
xor
enter
inc
repnz
jle
cmpsl
xchg
push
scas
mov
push
mov
in
cwtl
push
jge
cmp
shll
dec
je
pop
cmp
adc
jns
fidivrl
push
fdivs
mov
dec
jb
hlt
pushf
push
idivb
fadds
jmp
inc
pop
dec
push
aad
in
xor
sarl
cli
ljmp
jecxz
dec
or
mov
and
sub
dec
lcall
and
in
sbb
sbbb
mov
out
jns
mov
pop
fsubl
int3
lcall
insb
movsl
cmpsl
mov
sbb
dec
out
push
mov
xchg
insb
push
stos
sbb
xor
jb
sbb
test
mov
push
push
loop
dec
mov
sarl
andb
loopne
sub
fs
adc
jp
cs
push
sub
xor
stos
push
test
dec
push
adc
aas
fadd
cmp
subb
popl
dec
negl
adc
xor
add
xor
or
roll
push
push
mov
adcb
push
jno
out
cmpsl
push
dec
scas
pop
mov
les
jle
mov
mov
idivl
leave
or
imul
gs
loopne
lds
sub
and
cld
int
js
mov
xor
lea
addl
and
sysexit
mov
mov
rolb
testb
mov
add
addr16
dec
dec
insl
test
cmp
xor
cld
arpl
aas
jno
push
lcall
nop
in
or
pop
pop
mov
or
icebp
pop
subb
in
dec
sub
jmp
dec
and
out
sub
inc
mov
xchg
add
sub
ljmp
jbe
xor
mov
pop
xchg
stc
sbb
mov
mov
aad
stos
test
push
jae
xor
and
repz
loope
push
inc
or
mov
in
lret
js
loopne
leave
ja
je
add
sbb
popa
movsl
mov
sbb
lock
mov
addr16
inc
xchg
pop
pop
ret
jns
int
int3
aam
or
sub
stc
mov
xor
bound
jmp
sbb
insl
int3
push
stos
in
clc
hlt
push
mov
lret
mov
scas
xchg
or
adc
mov
bound
mov
cmp
cli
mov
sbb
imul
or
xchg
or
cld
inc
mov
xor
mov
insl
jg
push
lahf
test
push
or
jo
dec
adc
adc
adc
mov
mov
in
mov
and
cmpsb
sub
add
xor
mov
fdivr
pusha
dec
inc
pushf
inc
ljmp
cmp
push
and
daa
mov
inc
cmp
push
pop
fidivrl
lea
and
fcomps
pop
xchg
call
jns
shrl
adc
lcall
sub
sbb
xor
dec
pop
jecxz
out
fs
lahf
sub
test
xor
mov
pop
ds
lahf
std
pop
adc
xor
jl
arpl
imul
into
pop
sbb
xlat
mov
enter
mov
jne
pop
imul
adc
test
jno
mov
dec
and
test
xchg
imul
pop
pop
bound
aam
mov
and
mov
pop
rol
test
push
dec
jnp
std
adc
cmp
or
ljmp
cmp
test
icebp
les
pop
jp
mov
dec
lds
mov
dec
aam
cmp
jb
dec
lods
push
pusha
sbb
pop
sub
fsts
cld
pusha
cwtl
clc
sub
xor
xor
xlat
lret
cmp
dec
mov
enter
add
dec
clc
das
adc
mov
dec
inc
xor
pop
mov
and
jo
gs
jge
pushw
add
dec
dec
mov
fwait
ret
pop
xor
add
mov
xlat
lock
sbb
popa
es
call
sub
mov
xchg
or
pop
inc
out
sub
cmpsl
int3
sbb
cmp
cmp
or
insb
jne
aam
push
fwait
sub
insl
bts
inc
sub
dec
dec
test
fs
adc
sbb
push
cmp
add
test
call
xchg
inc
xor
sbb
adc
cmp
sub
mov
test
cld
dec
enter
rol
lods
mov
out
loop
pop
xchg
stc
int3
lods
mov
cltd
adc
xchg
out
sub
int3
push
cmp
cmpsb
xor
inc
push
ret
addr16
and
dec
testb
fdivs
dec
fs
xchg
mov
mov
cmpsl
xor
ja
in
je
idivb
ret
jno
add
fistl
mov
sarl
les
gs
jne
add
jge
imul
imul
dec
xlat
out
scas
push
push
push
sbb
mov
mov
xchg
lret
inc
and
pop
sahf
adc
popf
std
aam
push
in
sahf
xchg
xchg
sbb
cld
in
pop
inc
aaa
cmpsl
cmp
fs
or
xchg
jg
test
loop
push
in
or
test
movsl
mov
cmp
subb
les
mov
and
push
int
movsb
jns
and
mov
sbbl
jp
jo
mov
das
add
ficompl
test
mov
mov
mov
cmc
loop
sti
sub
repnz
lods
jmp
lcall
mov
or
dec
pop
aam
shl
sub
int3
pop
dec
cmp
inc
jbe
pop
add
push
xor
pop
ficompl
fildll
lock
call
mov
bound
push
adc
outsb
jno
dec
inc
cltd
repnz
aad
stos
les
mov
daa
mov
daa
movsl
cwtl
sbb
or
les
jmp
das
fcompl
jecxz
sub
popf
bound
jne
lods
xor
jae
js
enter
xor
mov
inc
aaa
insb
outsb
cmp
cmpsl
gs
incl
add
or
pop
sbb
sbb
xcrypt-ctr
cmpsl
fisubrl
je
fwait
jecxz
pop
daa
adc
adc
cmp
arpl
mov
jbe
hlt
insb
adc
rorl
sub
push
cwtl
mov
dec
out
jbe
adc
add
in
test
jge
inc
sti
ret
nop
lret
idivb
cmp
gs
inc
loope
mov
pushf
gs
test
lret
and
int3
or
decl
push
xor
out
test
sbb
js
cwtl
xchg
add
sbb
int3
loope
mov
arpl
adc
cmpsb
pop
in
cs
lcall
mov
dec
xor
jno
jmp
and
gs
xor
xchg
cmp
inc
sub
inc
fmull
sub
call
and
mov
rcrl
xchg
mov
sahf
pop
xchg
push
cmpsl
test
xchg
pop
pop
lahf
movsl
jns
sub
add
pop
push
enter
sub
sub
test
leave
cmc
cmpsl
mov
daa
cltd
cmp
dec
mov
sbb
arpl
jo
mov
mov
fstpt
push
jl
jmp
iret
ret
pop
sahf
iret
lahf
mov
pop
xchg
cmp
shll
scas
xchg
cmp
decb
pop
sbb
mov
inc
mov
adc
lret
mov
std
fdivrl
sbb
ds
iret
xor
orl
neg
jecxz
add
sbb
push
mov
insl
xor
lcall
push
lret
jl
and
mov
lret
pop
jecxz
imul
pop
repz
sti
mov
inc
ret
test
daa
data16
xlat
adc
adc
das
mov
popa
cmpb
cmp
mov
int
sub
rolb
popf
pop
lods
lcall
ds
imul
and
cmp
mov
push
popa
jmp
inc
test
leave
loopne
out
add
mov
fdivrl
jno
dec
xchg
pusha
imul
mov
mov
add
ss
mov
fnstcw
adc
in
dec
xchg
sbb
psubsw
lret
mov
jecxz
push
incl
adc
ds
lods
jge
fisubs
outsl
in
aad
sub
aas
jns
dec
int3
mov
pop
lahf
mov
push
int3
sbb
adcl
fmul
loope
pmullw
cmpsl
sbb
adc
jg
sub
xchg
iret
push
jo
fcoms
push
xor
dec
mov
mov
or
jmp
sub
jecxz
lea
pop
es
sahf
movsb
mov
sti
outsl
fcoml
shll
adc
fdiv
and
dec
push
daa
sbb
pop
arpl
rcrb
adc
call
outsl
insb
inc
shrl
or
imul
in
push
outsb
mov
cli
jne
aam
pop
xchg
rcl
movsl
adc
add
arpl
or
cwtl
incl
adc
pusha
cmp
add
lret
push
push
add
imul
inc
mov
icebp
mov
cmpsl
mov
mov
pop
lods
xor
imul
adc
pusha
cs
mov
xor
aas
lahf
repnz
jg
in
push
mov
cwtl
mov
test
bound
leave
dec
data16
cmp
aas
clc
cmp
je
xlat
jg
fsubrp
pshufw
imul
adc
insb
addl
add
cmp
push
cmp
stos
inc
repnz
mov
aad
mov
call
jmp
jge
pop
ds
cmp
and
cltd
add
bound
fwait
xor
clc
xchg
out
cvttps2pi
sbb
mov
jae
jmp
inc
sub
dec
stos
cmp
mov
jg
add
fiadds
stc
lahf
mov
sar
ja
dec
xor
cmp
fldcw
test
bound
popl
out
jg
mov
xor
rolb
das
cwtl
aaa
or
ret
out
out
inc
shlb
cwtl
jg
inc
icebp
mov
call
mov
adc
or
outsl
leave
mov
icebp
repz
scas
movsl
xchg
push
lahf
mov
push
or
sbb
sti
popf
int3
std
data16
dec
in
sbb
push
mov
mov
fwait
js
jle
test
lret
xchg
out
add
lea
or
out
xor
jle
xor
aam
mov
lret
cmp
sbb
ret
sbb
pop
cmp
dec
ret
insb
cmp
fildl
pop
imul
pop
ja
hlt
xchg
jno
lret
mov
inc
out
sub
es
sar
pop
adc
inc
pop
iret
add
fisttpl
orl
push
push
movsl
in
hlt
and
pop
lods
pop
fimuls
mov
inc
dec
cmp
daa
aas
dec
test
scas
adc
pop
fisttpl
cmc
insl
aas
pop
fbstp
mov
mov
mov
jg
xor
add
testl
jb
or
frstor
jmp
sbb
fiaddl
mov
or
out
and
pop
sahf
xchg
mov
xchg
xor
out
jb
aas
cmc
cmp
aaa
aad
aam
pop
mov
or
cmpsl
mov
jl
inc
in
add
mov
shrl
das
and
lcall
loopne
dec
lods
add
imul
jns
stc
loopne
adc
test
test
out
and
nop
cmp
push
loope
xchg
and
jg
les
aaa
xchg
mov
mov
scas
mov
mov
out
negb
ja
lret
push
cmpsl
jg
push
xchg
add
push
addr16
pop
and
ja
xor
ficoml
cmc
push
xlat
push
lahf
fwait
inc
sahf
and
jno
mov
aas
rcll
fldenv
mov
test
xor
pop
jns
mov
inc
cmpsb
jne
sbb
push
or
fdivrl
lret
push
and
jl
shrl
loop
jo
jno
aad
lret
call
mov
in
in
lods
xor
sbb
aaa
mov
or
sub
mov
or
gs
mov
movsb
cld
divb
fs
imul
mov
out
js
jle
or
call
adc
or
push
lea
dec
mov
pop
mov
daa
movsl
fbld
push
jge
int3
adc
xor
mov
fsubrp
jp
into
repz
cmp
jne
test
testl
mov
jmp
pop
dec
test
out
xlat
icebp
sub
xor
jne
pop
pop
xor
shl
sbb
xchg
jo
or
outsl
or
dec
subl
push
sti
fisttpl
or
cltd
xchg
xchg
dec
mov
xlat
int
movsl
insb
andb
sub
and
movb
test
stos
adc
ficoms
mov
push
lret
daa
stos
add
test
mov
movsb
movsl
xor
cmp
jnp
jb
push
js
cmpsl
rorl
pushf
aam
push
fwait
push
inc
arpl
imul
lds
dec
pop
adc
insl
pop
cmp
or
divb
mov
xor
bound
in
dec
loope
and
push
insb
pop
jl
loopne
fsubrs
push
jne
and
pop
mov
inc
jno
call
stos
rcll
outsl
adc
and
adc
mov
imul
xchg
pop
pop
dec
out
mov
lret
inc
mov
dec
jbe
movsl
jne
dec
pop
jge
adc
cmp
xchg
or
in
and
mov
jge
pop
sarl
mov
fldenv
enter
adc
cmp
stc
add
cltd
dec
xor
test
inc
and
movsb
fcoml
sub
fidivrl
and
sub
bound
neg
or
pop
mov
push
dec
loopne
sub
iret
and
xor
insl
rorb
stos
adc
pop
mov
push
pop
les
shrb
push
lock
sub
clc
in
fnstsw
and
sub
jp
jp
push
add
movb
jne
sbb
add
ret
adc
lods
stos
push
leave
js
sbb
fdivrp
rcl
sarl
jmp
sub
push
inc
cs
insl
stos
fldt
in
out
add
push
mov
add
lock
cmp
xchg
scas
mov
or
mov
sub
sub
pop
hlt
jo
fs
cld
pop
and
sbb
ret
add
mov
jmp
mov
pop
sub
loop
add
jo
dec
sahf
dec
test
lock
decl
in
repnz
push
xchg
sub
stos
ss
adc
cld
cmp
test
mov
mov
cmp
sbb
inc
push
xchg
and
xchg
xor
aaa
gs
ds
test
or
test
xchg
arpl
jmp
mov
sbb
movsb
adc
cld
jg
outsl
add
fisubs
xor
or
lret
mov
in
and
pop
jb
fcompp
cltd
xchg
fmuls
xchg
fcom
int
in
or
adc
mov
xchg
out
pushf
dec
fwait
and
cs
jae
or
xchg
orl
mov
das
in
inc
das
mov
cmp
push
insl
xchg
sub
inc
pop
mull
inc
mov
fldl
xlat
int3
leave
addb
add
es
push
cltd
iret
pop
adc
decl
imul
or
add
mov
fs
fs
cmpsb
push
icebp
shll
mov
xchg
js
pop
aam
imul
push
sbb
es
rclb
jmp
andb
lods
and
and
stos
mov
add
cmp
xor
jmp
mov
xchg
mov
fs
mov
mov
outsl
sbb
es
das
inc
rclb
rcl
std
loopne
pop
xchg
nop
dec
mov
outsb
mov
push
dec
and
leave
push
js
dec
std
pop
setge
rorb
dec
ja
int3
inc
adc
jle
aad
sub
jns
mov
popf
and
dec
orl
sbb
aam
sub
cmp
jg
dec
sahf
mov
negb
pop
leave
adc
ret
sbb
xchg
pusha
pop
cmp
or
mov
lret
out
xchg
lock
lret
pop
lret
aaa
lds
insl
pop
jge
and
stc
test
loop
adc
adc
lea
push
jl
repz
jl
addr16
jp
push
xor
shrb
and
or
adcb
mov
sub
and
mov
out
push
dec
out
jb
addr16
scas
xchg
cmp
and
fildl
lea
pop
fisttps
sub
stos
cmp
or
es
and
push
cmpsl
lods
int3
jae
lock
test
mov
dec
fidivrs
int3
mov
push
xchg
mov
ret
jae
ret
hlt
and
test
stos
mov
rcrl
pop
loope
outsb
loopne
sub
inc
imul
cmpsb
sbb
pop
mov
jle
mov
ja
push
mov
jmp
add
mov
mov
mov
pop
jg
and
aad
imul
popa
xchg
add
sbb
mov
aas
and
sub
jb
test
push
xor
push
outsl
inc
xchg
dec
imul
mov
jae
push
pop
xlat
leave
sub
in
fnstcw
jecxz
jge
les
xor
das
mov
dec
cltd
inc
and
outsl
aaa
dec
adc
cltd
xchg
pop
movsb
shll
lahf
jmp
movb
mov
ljmp
scas
add
outsb
sub
jae
mov
mov
mov
insb
push
dec
cmp
cmp
mov
push
or
inc
je
pop
jb
sub
roll
sbb
push
xor
addr16
and
movzwl
repnz
js
arpl
loopne
pop
rol
jp
out
cmp
dec
lret
xchg
mov
sarl
movsl
aad
lcall
xchg
stos
ret
sbb
rolb
adcb
pavgw
push
fs
cmpsb
cld
pop
xadd
ljmp
push
ljmp
pop
mov
cmp
sbb
int
mov
stos
jge
lea
pop
out
pop
orb
mov
sub
ss
imul
ds
jae
sbb
mov
add
push
orl
outsl
inc
cmc
inc
subb
mov
pop
cmc
fdivp
clc
sub
clc
adc
dec
in
mov
mov
and
das
inc
je
mov
movsb
fistl
mov
nop
aaa
xchg
repnz
jmp
xchg
pushf
aas
movsb
stos
into
in
dec
loop
shrl
push
bound
addr16
add
add
add
sbb
cmp
repz
push
mov
cmp
dec
mov
dec
push
pushf
pop
mov
nop
into
and
mov
pop
mov
es
pop
push
cmp
insl
pop
add
or
xchg
out
gs
popa
push
cli
sbb
xchg
lcall
dec
inc
out
jae
mov
push
stc
push
sbb
daa
xchg
scas
loop
cmpsl
stc
add
andb
jo
sarb
push
xchg
xor
and
or
loope
cmpb
data16
cmpsl
mov
xchg
in
loopne
sub
xchg
and
in
sbb
mov
shlb
ret
ja
pop
or
pop
test
mov
out
test
pop
adc
mov
pop
sbb
sub
outsl
and
sbb
movl
inc
leave
dec
inc
addr16
loop
jp
les
sbb
inc
movsl
sahf
test
movsb
jmp
jecxz
push
sub
sub
addr16
pop
mov
lcall
cli
leave
arpl
push
cltd
sub
sub
jl
xchg
push
das
ljmp
je
mov
stc
sbb
push
lcallw
fcoms
fisttpll
sbb
mov
lcall
sbb
into
in
adc
mov
sub
insb
outsl
gs
jo
and
pop
add
dec
and
mov
sub
inc
lahf
xchg
fwait
outsl
scas
push
jo
pop
loope
or
imul
push
sub
hlt
adc
mov
es
add
fdivrl
cmp
push
jb
mov
aaa
test
sub
gs
xchg
arpl
xchg
testb
in
enter
xchg
iret
push
fildl
adc
inc
jg
insl
aad
dec
and
xchg
test
cmpsl
test
popf
je
jne
into
rcll
push
mov
push
push
or
neg
mov
mov
add
sub
in
lds
and
add
dec
inc
inc
jae
cwtl
sub
mov
insl
lcall
xor
pushf
sbb
mov
or
mov
leave
sbb
jl
mov
xor
adc
xchg
adc
cmp
stos
cmp
imul
xor
xor
mov
loope
rclb
or
jo
pop
push
test
lods
mov
jae
lret
mov
test
and
pop
or
inc
dec
xor
pop
movsb
xchg
sar
stc
mov
shl
es
movsl
cmc
int
xor
jae
adc
mov
mov
xchg
ljmp
and
sbbb
lcall
push
and
jne
push
or
dec
sub
mov
mov
je
pop
inc
mov
add
flds
cmp
sbb
cmp
mov
adc
imul
lods
movsl
stc
shlb
int
sub
pop
add
rcll
pop
gs
clc
test
cmp
push
lea
or
pop
in
push
cmpsb
pushf
fdivr
xorl
jle
dec
jns
lret
cld
push
unpcklps
pusha
or
dec
aaa
lods
jmp
pop
sub
jg
sbb
mov
xchg
push
and
inc
pop
test
pop
push
mov
repz
cmp
jne
xor
lcall
int3
xor
dec
outsl
sbb
and
loop
dec
sub
mov
mov
out
stos
repz
jmp
sub
push
xlat
cmpsl
push
adcb
sub
xlat
adc
mov
push
mov
or
loopne
cmp
push
mov
leave
rolb
dec
mov
xchg
mov
mov
int
add
xor
lret
and
sbb
outsb
int
repz
adc
loope
jbe
ja
pop
jp
xchg
dec
stos
out
xchg
cmp
jno
pop
sbb
popa
cmp
jbe
bound
sbb
cmp
cmp
jecxz
xchg
leave
mov
icebp
dec
mov
cmp
pop
sbb
stos
gs
mov
jmp
xchg
push
dec
jecxz
sub
pop
inc
je
lret
cwtl
jb
xchg
mov
cmp
ss
enter
and
and
jecxz
test
dec
cltd
sarl
and
add
xchg
ret
gs
add
notl
inc
adc
jl
testl
mov
dec
cwtl
push
movsl
adc
push
or
mov
push
push
arpl
jno
sbb
jnp
scas
fnstsw
mov
mov
sbb
lock
cmpsl
jecxz
dec
jle
push
xor
stc
fnsave
jg
jo
mov
add
adc
xchg
ficomps
ja
lret
jo
dec
scas
add
fldt
mov
lcall
lock
push
pop
out
addr16
inc
mov
xchg
adc
mov
xor
dec
jns
lahf
mov
dec
faddl
ret
bound
xchg
mov
aaa
xchg
jb
adc
cwtl
or
jnp
scas
jg
subb
cmc
mov
outsb
mov
dec
popa
arpl
fmulp
inc
lds
sbb
mov
mov
or
jne
dec
aad
orb
aam
mov
xchg
fisttpll
js
mov
fimull
test
cli
fcoms
jle
dec
pop
std
xor
adc
jmp
cli
pop
sbb
sub
shl
pop
push
dec
repz
outsb
sbb
jb
sub
pop
sti
pushf
fdivl
adc
xchg
data16
jne
scas
cmp
cwtl
push
in
xor
imul
sbbb
jnp
mov
dec
shll
int3
cmp
lret
and
mov
jns
mov
mov
cwtl
dec
xor
jo
lods
in
out
mov
repz
xorl
mov
sub
xor
gs
fwait
sbbl
pop
aaa
scas
sub
cmp
fldln2
mov
cmp
mov
mov
cwtl
movsl
fs
andb
je
push
in
dec
mov
fistps
and
mov
lahf
mov
cli
insb
fwait
xor
ret
ljmp
and
dec
mov
leave
mov
push
dec
cmp
jno
push
mov
outsl
sbb
es
fbstp
pop
inc
add
cmpsb
xor
add
in
sub
stc
xchg
cmp
pop
lods
pop
lods
inc
pushf
divl
cwtl
dec
dec
inc
stos
xorb
dec
adcb
or
jle
jle
mov
mov
sbb
mov
sub
pop
cmpl
mov
sbb
and
dec
push
in
ret
cs
lahf
ret
std
inc
inc
xchg
arpl
mov
pop
test
sub
and
pop
mov
dec
adc
aas
cwtl
inc
ja
aas
insb
sbb
sti
pop
lret
inc
out
int3
xor
mov
andl
icebp
ret
push
shll
push
das
pop
jecxz
lds
out
jge
cmp
cmp
xchg
mov
mov
pop
xor
aaa
shlb
jb
inc
mov
push
mov
mov
cmp
xchg
cmp
shl
mov
test
xchg
adc
fists
sub
out
jmp
clc
mov
mov
cs
int3
or
popf
sub
sarl
or
lahf
sub
mov
pop
out
mov
test
imul
sub
scas
js
cvtps2pd
gs
jle
nop
lods
xor
bound
insb
ret
in
hlt
lahf
jae
out
daa
loope
mov
jnp
fwait
in
test
cmp
sub
bnd
pushf
sbb
ja
js
and
ret
movsl
cmp
jbe
jnp
push
add
mov
pop
outsl
add
pop
sub
mov
pop
adc
sbb
add
jb
dec
sub
jge
sub
lret
test
jge
add
ret
repz
pop
loop
pop
or
mov
pop
inc
cli
jmp
fldenv
fcmovnb
shll
fs
jl
mov
in
sbb
xchg
insl
mov
xor
ret
popf
rcl
gs
stos
aam
mov
and
popl
and
mov
sub
mov
and
outsw
jne
enter
mov
xor
insb
xor
and
jge
push
cmc
rcll
mov
icebp
pop
clc
or
cmp
or
mulb
mov
sbb
add
lods
mov
sbb
xchg
jecxz
aaa
sub
fcomps
push
aaa
andl
mov
pop
adc
fwait
add
jp
pop
sub
fisttpll
aaa
add
ret
outsl
jne
dec
cld
mov
testb
jnp
lods
mov
mov
outsb
lcall
dec
pop
cli
sahf
lea
push
jl
mov
stc
das
pop
jle
adcb
mov
pop
push
popa
ljmp
scas
push
and
and
stos
and
jge
loope
fs
test
sti
pop
cmpsl
push
push
stos
push
test
mov
ljmp
inc
and
daa
push
out
add
shll
add
adcl
pushf
sbb
sub
mov
ljmp
dec
out
je
inc
sbb
jo
mov
stos
or
mov
lret
xlat
dec
shrl
pop
xor
pop
sub
mov
dec
cld
ljmp
cmpsl
and
add
sbbl
sub
lods
jecxz
cmp
fs
out
jnp
dec
aad
mov
xlat
rolb
in
iret
and
mov
adc
outsl
mov
or
testl
int
je
lds
in
movsb
rcrb
rorl
mov
mov
pop
add
fsubs
jne
pop
shll
notl
cld
pop
sbb
lds
test
mov
dec
flds
lds
cwtl
pop
icebp
out
shld
movsb
movsb
sbb
cltd
fdivl
push
mov
mov
and
mov
sbb
movsl
add
sbb
scas
inc
int3
pop
cs
arpl
inc
arpl
outsb
sbb
sub
inc
or
dec
pop
or
loop
mov
dec
jne
cmp
insl
inc
push
icebp
pop
xor
call
aas
lods
loop
dec
cld
sub
test
xorb
add
fisttps
xlat
add
jo
mov
fmull
add
mov
push
push
inc
pop
or
push
cmp
test
pop
mov
lods
and
jl
push
xchg
xchg
ss
and
pushl
add
mov
or
shrb
pop
in
out
add
es
dec
fistpl
insl
out
and
add
pop
mov
jge
mov
pop
mov
xor
add
loopne
mov
lds
dec
pop
adc
enter
loopne
cmc
and
cs
sub
cmp
mov
push
sub
cmc
sub
movsl
fisttpll
dec
test
es
cwtl
mov
outsb
repnz
repz
in
dec
jp
lret
mov
xchg
aaa
xchg
xchg
jnp
repnz
xlat
sub
cmp
jno
arpl
outsb
fimull
shrl
pop
call
and
subb
test
sub
pop
js
dec
jg
nop
jge
lret
mov
xor
xchg
mov
dec
pop
sbb
bound
pop
mov
roll
dec
ret
sub
wbinvd
loop
pop
cmp
jb
dec
call
push
sbb
enter
es
faddl
aad
aaa
jno
adc
sarb
xchg
xchg
push
and
add
xchg
dec
xchg
xor
jns
out
jno
push
jmp
shr
cmp
hlt
mov
shrb
and
xchg
pop
mov
push
and
filds
xchg
inc
inc
sbb
and
xchg
imul
cmc
inc
cmp
lods
push
cmpl
loop
sub
or
js
gs
ja
cmp
out
inc
jle
sub
nop
and
push
inc
push
inc
pushf
shlb
scas
int3
roll
fildl
insb
xor
xor
sbb
ret
test
xor
adc
jo
je
mov
lcall
dec
cmp
stos
loope
idiv
push
jno
jns
scas
lock
jmp
inc
xlat
jecxz
int3
jb
dec
mov
ljmp
gs
sbb
imul
insl
lods
sysenter
mov
mov
mov
xor
pushf
lret
stos
and
mov
sub
push
push
and
dec
dec
in
jecxz
add
xor
les
sub
lods
subl
xor
xchg
faddl
in
and
xchg
lahf
and
jg
xlat
cwtl
into
and
lds
jl
pop
mov
call
jo
sarb
test
cmp
and
sub
xor
or
xor
push
jmp
xchg
fiaddl
sbb
stc
xchg
xor
and
ficoms
ret
pop
sbb
imul
dec
scas
cmpsb
orb
push
sub
loope
pop
push
inc
leave
lods
lahf
lcall
lcall
mov
fisubs
in
daa
roll
mov
pop
push
adcl
insb
add
adc
inc
pop
push
xchg
dec
cmp
fldt
adc
scas
sarl
rorl
fdivs
sub
stc
sbb
jl
aad
adc
and
fstl
adc
adc
jnp
lcall
leave
cld
mov
in
jae
movsb
jb
or
dec
jp
xchg
push
in
out
test
jbe
loop
push
or
xor
pop
sbb
clc
fstl
push
lcall
pop
push
mov
push
adc
or
sbb
inc
icebp
mov
or
adc
nopl
je
fcoms
cmp
inc
inc
lea
movl
js
mov
aaa
adc
clc
add
mov
xor
jge
insb
leave
mov
cmp
pop
jmp
movsl
mov
lret
ds
jb
xchg
mov
cld
arpl
loopne
xchg
ficoms
or
arpl
inc
mov
mov
cmpsl
add
lahf
pop
ret
push
jmp
movsb
icebp
add
xchg
mov
push
sbb
call
or
adc
inc
hlt
ljmp
cmp
mov
push
ss
pop
jmp
adc
lods
int3
ret
negb
pop
mov
call
pop
add
jecxz
pop
push
gs
negb
cmpsb
push
int
rcll
aad
cmp
in
out
adc
mov
mov
hlt
andb
mov
or
mov
push
sub
adc
mov
out
loope
add
cmc
sub
rorb
mov
mov
pop
xchg
movsb
pop
stos
push
int
fisubl
out
sbb
rclb
xchg
mov
pop
rcrl
xor
enter
in
negl
sahf
cmc
cwtl
lea
adc
ret
mov
in
push
mov
aaa
ficoml
into
nop
jbe
lds
mov
and
jno
xchg
call
mov
test
andb
sbb
cmp
test
hlt
and
sbbl
inc
mov
ret
sub
fidivl
pop
mov
jno
sub
int3
cmp
push
and
sub
shlb
mov
nop
imul
lods
push
ljmp
sbb
shl
pop
mov
or
xor
inc
test
dec
cmp
xchg
sub
mov
shrb
stos
cmp
cltd
jg
sub
xchg
stc
cs
insl
sbb
xchg
ret
in
mov
xor
nop
xchg
movsb
push
push
pushf
pop
mov
mov
xchg
addl
adc
pushf
pop
or
jp
mov
push
add
dec
sub
jg
cltd
sbb
test
aam
mov
adc
cmp
mov
dec
stc
icebp
sub
lods
aas
stc
jo
mov
cmp
adc
lods
lret
lock
std
adc
and
loope
or
sahf
das
mov
fwait
out
test
push
adc
pop
pop
in
xchg
arpl
cltd
mov
xlat
in
test
rcl
je
jle
sbb
inc
jmp
mov
aad
xor
fstps
xchg
cmpsl
out
pop
mov
mov
sbb
mov
std
sub
mov
push
rorb
cmp
xor
push
mov
fdivrl
cmp
hlt
cmp
push
pop
push
xchg
loop
xchg
rol
push
ss
push
cmp
push
bound
aad
adc
cmpsl
push
sahf
jnp
sbbl
mov
ja
mov
lcall
or
ss
ds
mov
mov
sbb
fwait
cmp
add
mov
jne
shl
jae
mov
rcr
mov
xor
lock
sub
push
lods
pusha
pop
mov
outsl
sbb
jb
shrb
lods
movsl
addr16
imul
add
push
cmpb
lret
arpl
or
push
test
sub
jle
sub
andl
cs
push
out
and
sub
loop
push
leave
les
xchg
subl
in
ds
push
in
filds
int
test
frstor
sarb
pop
or
das
xor
sbb
push
and
loopne
pop
cmp
add
sub
or
in
std
fisubrs
sbb
xchg
push
xchg
pop
cs
or
sub
mov
das
cmp
ret
cmc
mov
repnz
fnstenv
scas
inc
or
push
push
mov
insb
pop
mov
mov
jbe
add
mov
mov
xor
xchg
mov
mov
or
mov
mov
and
jmp
das
js
aam
or
adc
and
push
mov
das
subb
xchg
jns
setae
lock
enter
jae
pusha
inc
add
fst
add
popa
jmp
dec
pop
cmp
xor
xor
insb
dec
or
inc
push
pop
adc
push
push
pop
mov
push
jo
mov
fistpl
jns
or
jne
js
daa
adc
xchg
jg
push
in
jecxz
inc
pop
pusha
jle
ret
shll
sti
or
cmp
leave
insb
or
sub
mov
pushf
xor
xchg
and
jg
je
cwtl
out
jb
xor
cs
inc
mov
push
sahf
push
xchg
cmp
movzwl
mov
les
ss
imul
lret
hlt
jle
pop
xor
aad
sti
mov
push
fwait
repz
pop
enter
dec
add
mov
insl
cmpsl
xchg
iret
jge
sub
push
pop
hlt
add
sti
pop
sub
and
mov
adc
fsin
push
cmp
ja
pop
jmp
out
arpl
mov
mov
mov
jle
jmp
pop
call
inc
inc
loop
aas
stos
jno
sbb
sbb
movsl
jne
cltd
sbb
cli
les
sbb
dec
cli
movsl
push
enter
adc
push
sub
or
push
pop
dec
sbb
stos
or
mov
das
lahf
jmp
push
loopne
je
adc
mov
test
fstpt
int
repz
js
inc
cli
adc
and
and
and
dec
ja
aam
sbb
inc
inc
jb
pop
dec
stc
loopne
insl
push
sbb
mov
push
xchg
lret
ja
xor
push
cwtl
sbb
push
ret
jge
inc
out
sbb
movsb
insl
loope
outsl
adc
jae
or
mov
or
xlat
cli
pop
in
jns
test
repnz
stos
aas
nop
push
adc
loope
ret
sub
jo
pop
adcl
je
sbb
pop
push
xor
fs
dec
stos
cwtl
sbb
adc
out
int3
and
xor
xchg
sub
push
in
xlat
insl
rolb
pop
lea
stos
mov
popf
stos
aas
mov
rcrl
call
add
lea
add
jno
inc
test
imul
fsubl
aam
cmc
pop
or
aam
push
cli
or
sub
loop
xor
in
mov
std
jno
dec
adc
mov
inc
fisubrs
sbb
ja
xchg
lcall
push
jns
jae
imulb
mov
les
xor
push
and
and
ja
stc
jbe
xchg
vmread
mov
icebp
sub
mov
inc
jno
repnz
shl
add
add
jecxz
xchg
adc
int3
sbb
pop
cwtl
jecxz
int3
lret
pop
icebp
sbb
daa
cmp
push
je
pop
pop
aas
cli
icebp
pusha
pop
mov
lods
jle
cltd
jmp
out
out
or
push
pop
sbbl
ficompl
add
and
sbb
jge
push
inc
fdivl
and
adc
mov
stc
ljmp
aaa
mov
pop
xchg
clc
dec
jge
push
nop
test
in
arpl
call
inc
xchg
nop
mov
cmpsb
dec
in
icebp
out
pushf
aam
lock
imul
jns
and
leave
push
inc
xor
xor
insb
mov
outsb
jg
mov
dec
jp
cmpl
popa
ud2
insl
cmpsb
dec
cmp
sub
xor
inc
sub
jbe
mov
inc
bound
adc
sub
icebp
cmp
pop
add
inc
xchg
fs
dec
dec
add
repnz
ret
out
mov
push
and
enter
mov
rclb
sti
iret
das
fidivs
cmpsb
scas
cmp
les
cli
stos
lret
add
leave
push
mov
pushf
push
xor
ret
icebp
mov
mov
cmp
ret
lods
jno
lock
ret
sbb
adc
xchg
ja
scas
add
sbb
dec
aas
filds
mov
scas
xchg
rorb
xor
dec
push
in
pop
std
rcr
mov
test
test
mov
fistpll
jnp
std
cmp
stc
clc
push
mov
or
insb
je
js
icebp
loope
dec
cmp
jp
loope
stc
loopne
sub
out
or
ret
jo
pop
xchg
insl
or
and
and
popw
push
ret
xchg
ss
jp
ret
iret
imul
popa
icebp
push
repz
ds
pop
in
repnz
jmp
lds
jp
jmp
mov
cmpsb
sbb
dec
cld
add
outsb
outsb
or
stos
jp
imul
call
call
push
decb
je
or
arpl
aam
and
pop
and
inc
out
lds
cwtl
aas
pop
loopne
add
add
arpl
and
inc
xor
lds
ror
fdivl
loop
and
pop
jg
sub
xchg
popa
andb
mov
and
out
in
gs
sbb
and
add
arpl
dec
inc
cmc
mov
adc
mov
ss
rorl
xor
cld
movsb
fmul
xchg
xchg
lea
cmp
outsb
xchg
dec
popf
jge
jl
cmp
daa
movsb
and
scas
in
es
mov
add
jge
push
cld
pop
pop
rorl
adc
cmp
push
push
in
cmp
jl
inc
and
jbe
int3
stos
mov
or
pop
push
mov
pushf
xchg
xor
xchg
in
inc
std
inc
cli
aam
jb
aas
inc
xor
xor
cmp
adc
sub
add
inc
or
sub
cli
outsb
data16
sahf
mov
clc
xor
push
les
dec
rol
and
sarb
fcmovnbe
mov
jae
addb
cmp
add
inc
cmpsl
negb
movsl
jecxz
adc
push
cmp
das
mov
adc
push
aam
and
test
shll
push
sbb
into
lret
jle
cli
push
lahf
dec
sub
push
mov
es
xor
fcoml
out
test
mov
decl
repz
xor
jns
sti
push
dec
adc
jl
jno
push
stos
cli
jbe
inc
jno
lcall
or
stc
and
jno
das
xor
or
cmp
loop
ljmp
push
movsb
inc
or
cs
test
sub
push
cmp
mov
sbb
test
fmull
int3
bound
or
or
lahf
rcl
inc
push
sbb
aam
jg
mov
js
or
sbb
std
sbb
push
mov
dec
mov
aad
es
lret
ja
add
jge
jo
mov
pop
je
add
sbb
int
call
mov
js
movsl
cmpsl
fstl
imul
ja
inc
aam
fsts
lea
sbb
pop
cmpl
jb
or
jmp
sub
push
or
jle
xor
push
leave
repnz
popa
sub
jbe
mov
scas
xchg
adc
ret
mov
add
push
push
imul
xchg
xor
and
xchg
fucomi
sub
fistpl
mov
inc
jne
sub
test
sbb
jl
lea
cmp
xchg
lea
in
cmp
and
subb
loope
pop
and
dec
xor
lret
push
pop
lahf
push
sbb
shrb
gs
adc
jno
in
and
pop
mov
int
sub
test
or
push
pop
popl
mov
jbe
pop
adc
dec
push
outsb
sbb
cmp
dec
cmp
call
inc
test
add
pop
lods
adc
call
out
mov
aam
add
cmp
push
jbe
xor
xchg
mov
sahf
mov
or
and
mov
sbb
into
sub
or
xchg
dec
ret
pop
mov
dec
iret
insb
and
xchg
int3
cmp
int3
roll
adc
xchg
mov
xor
jl
sbb
lods
aas
or
sbb
sti
push
mov
div
sub
je
push
or
sti
stos
mov
push
movsl
push
xchg
pop
out
arpl
rcrb
and
mov
push
out
mov
jl
or
dec
js
ds
outsb
jne
test
inc
add
dec
ds
popa
xchg
or
int3
lds
pop
mov
add
lcall
mov
inc
out
sbb
pop
and
loope
daa
adc
aam
out
mov
push
pop
inc
add
repnz
aas
and
pop
adcl
daa
mov
loopne
jl
repz
cld
fdivr
sbb
lahf
mov
mulb
pusha
clc
add
std
cmc
fwait
or
in
mov
lock
inc
add
movsl
repnz
inc
movl
xchg
jmp
stc
icebp
pop
mov
nop
out
rcl
cmp
loope
jae
dec
or
cmp
subl
test
dec
popa
adc
add
push
mov
mov
jl
mov
mov
pop
aas
jae
cwtl
rolb
xor
or
push
jae
or
mul
repnz
push
sbb
add
call
sub
xchg
push
shlb
sbb
xchg
mov
mov
push
mov
cmp
push
cmp
push
imul
push
mov
aaa
dec
dec
sahf
xchg
dec
xchg
or
mov
test
imul
mov
cld
loop
jbe
stos
and
push
stos
cmc
sub
jge
sti
shrb
jg
cmp
out
adc
repnz
mov
das
mov
lock
test
push
xlat
clc
into
rorl
fdivrl
out
dec
adc
movsb
xchg
fcomps
iret
ljmp
aad
adcb
inc
sbb
pop
xor
leave
jmp
add
pop
movsb
ret
cld
les
js
stos
mov
add
lahf
mov
pusha
jb
mov
fwait
iret
add
int
repz
or
rcrb
pusha
mov
mov
jmp
cli
mov
jns
xor
mov
pop
fildl
add
fs
pop
sub
dec
emms
dec
mov
mov
adc
mov
ds
in
jle
outsl
test
lret
int
mov
aam
push
add
sbb
call
lods
inc
js
jl
mov
pushf
lcall
mov
lcall
mov
test
fldl
lods
xor
rorl
aaa
loopne
in
dec
stos
sub
inc
enter
jnp
xchg
popf
mov
and
je
add
mov
jmp
fidivs
cmp
push
pop
jnp
insl
cli
mov
rcl
dec
or
add
sti
add
imul
push
rclb
inc
aad
daa
inc
movsl
push
mov
jae
pop
pop
fs
mov
nop
xchg
stc
js
xchg
add
mov
stos
lock
imul
jae
sub
pop
push
or
mov
inc
insl
lds
in
jae
mov
mov
fidivs
xchg
rcrl
or
roll
daa
xchg
adc
loop
mov
mov
mov
ficomps
xor
call
out
les
pop
popf
push
imul
bnd
push
and
jl
jno
jmp
out
or
loopne
sbb
pushf
pop
or
adc
mov
mov
and
ljmp
mov
xchg
jbe
mov
flds
xchg
or
fadds
popa
inc
in
mov
push
cvtps2pd
gs
ret
outsl
pop
adc
mov
pushf
out
push
in
cmp
je
aas
outsl
dec
pop
loope
je
ds
cmp
sub
imul
aad
xchg
xchg
ljmp
movsl
mov
sub
jno
pushw
lcall
inc
mov
cld
cwtl
adc
leave
les
fisubrs
mov
addl
lret
lock
sahf
in
jg
push
xor
aad
inc
lahf
stos
clc
daa
mov
jl
and
lods
fwait
jecxz
jb
add
and
cmp
out
sbb
lcall
xlat
leave
addr16
push
loop
into
fcmovnu
call
leave
add
call
mov
outsl
mov
aam
ds
dec
cltd
aam
in
stos
mov
test
loopne
loop
mov
lcall
mov
jno
rcrb
in
cmp
sbb
lds
pop
gs
pop
mov
out
push
inc
outsb
movsb
ret
xchg
dec
es
mov
push
repz
arpl
jnp
addl
jnp
jbe
fmull
pop
repz
jae
xchg
adcl
sti
pop
pop
in
je
dec
jmp
jb
mov
mov
lahf
and
mov
sbb
xchg
je
pop
jno
in
sbb
add
in
into
data16
fs
fstpt
dec
in
add
lds
mov
sahf
jp
rcl
or
cltd
in
add
sbb
daa
test
fbstp
and
inc
mov
dec
xchg
leave
dec
movsb
daa
adc
mov
mov
sbb
daa
fwait
sub
fstpt
jbe
cmp
outsb
jbe
out
mov
mov
das
pushf
sbb
stc
push
and
pusha
add
dec
imul
cmp
ss
adc
cld
nop
push
outsl
inc
fcomps
push
test
push
in
aad
scas
fs
mov
inc
xor
sub
jl
scas
cli
sbb
test
rcll
cmp
push
jge
push
sub
ja
sbb
xor
dec
roll
inc
or
pop
jnp
sahf
loope
sub
insl
and
xchg
rolb
insl
xchg
into
sbb
pop
sub
add
rorb
dec
pop
mov
mov
rorb
xchg
inc
cs
in
push
divb
jo
xor
stos
mov
xchg
mov
into
cmpsl
xor
out
sbb
sbb
out
pusha
stos
fists
ds
je
mov
mov
test
dec
test
inc
mov
in
jne
cvtps2pi
fsubr
out
sbb
aaa
mov
and
inc
pop
sahf
add
out
and
add
and
cmp
mov
or
dec
test
adc
mov
ret
adc
mov
sub
fistl
pop
imul
sub
out
xor
pop
inc
and
outsl
aam
subb
fcmovnu
das
icebp
xor
mov
jecxz
or
sub
mov
and
cmp
pop
rorb
mov
repz
xlat
gs
je
sbbl
in
stos
jo
push
mov
into
cmp
push
fnstcw
cmp
in
sahf
jbe
mov
inc
sti
hlt
insl
xorl
aaa
repnz
stc
bound
mov
inc
adc
fildll
push
outsl
es
pop
and
pop
xor
xlat
mov
lahf
mov
xor
cld
ret
arpl
mov
aad
les
xchg
inc
int3
xor
xor
test
inc
nop
jbe
int3
xchg
mov
std
xor
mov
clc
fwait
push
push
or
sti
shll
dec
sub
dec
data16
xchg
pop
addr16
pop
mov
cmpl
push
in
dec
inc
jmp
stc
push
or
sub
mov
rorb
add
push
or
out
fistl
and
xor
push
stos
dec
sbb
icebp
fbld
inc
jmp
and
or
pop
or
push
scas
push
jb
mov
clc
dec
add
adc
dec
lahf
pop
xor
idivb
push
fs
aam
inc
test
daa
jl
pushf
paddsw
sub
and
popf
outsl
sbb
xchg
mov
jb
lock
jp
fiaddl
mov
mov
insl
test
aam
dec
and
fs
call
int3
xchg
mov
sbbb
jg
stos
jg
fs
and
in
mov
in
ds
or
xchg
xchg
idivl
inc
mov
scas
and
ja
rcr
lock
stos
dec
xchg
out
movsb
pop
xchg
or
stc
aam
jl
pop
loopne
xchg
test
rol
push
hlt
insb
pusha
movsb
inc
out
out
mov
shl
std
xor
push
xor
lret
mov
dec
stos
and
xlat
mov
jge
pop
cmpsb
mov
ljmp
and
clc
ret
fisttpll
aaa
into
and
ficoms
aaa
mov
test
sub
out
sbb
inc
dec
and
push
xchg
pop
mov
out
mov
pop
push
and
push
mov
fnstcw
xchg
outsb
xchg
dec
test
fs
or
sbb
vcvtps2pd
fwait
push
inc
aam
mov
enter
test
xchg
xchg
sub
out
ret
xchg
or
cmp
push
push
mov
xor
dec
lcall
push
sub
clc
in
dec
sbbl
cmp
jge
xor
or
jbe
xor
out
ljmp
ss
arpl
cmp
sub
in
adc
pusha
jg
std
imull
test
xor
adc
popf
mov
sub
add
fs
popf
loopne
inc
mov
dec
push
fisttps
add
cmp
ss
dec
jp
mov
adc
fisttps
enter
test
in
xchg
ficompl
adc
inc
jmp
cmc
ds
scas
leave
dec
ja
stos
scas
lcall
push
xor
in
jecxz
dec
sbb
dec
mov
dec
cmp
ret
aas
cwtl
fmuls
sbbb
dec
subl
fcoms
cmp
loopne
inc
subb
in
push
orl
arpl
jge
movsb
and
fwait
lcall
aad
mov
dec
mov
xchg
lret
or
mov
daa
cs
rclb
inc
xor
rcll
and
add
fucomip
test
int3
roll
orb
dec
xor
dec
adc
xchg
pop
popa
jno
mov
lods
scas
push
cmpsb
jae
dec
jmp
loop
nopl
mov
call
cmp
leave
aam
repz
lret
repz
cmp
jns
pop
fdivs
fwait
sbb
cmc
fwait
dec
notb
fcoms
ficomps
sbb
push
push
adc
dec
sarb
in
mov
xor
and
into
sbb
fildll
lcall
cmp
pusha
inc
dec
mov
lea
xlat
or
sub
jns
iret
pop
rorl
mulb
inc
and
dec
das
sbb
negb
aad
xchg
mov
iret
sub
cmp
imul
jle
push
pop
lds
mov
mov
jge
cmp
and
mov
pop
jnp
into
push
add
loopne
mov
scas
scas
cmp
dec
push
dec
ja
xor
fsub
jmp
enter
adc
push
xchg
jae
leave
sti
xchg
decl
mov
enter
jecxz
jo
pop
hlt
repz
cmp
mov
lods
leave
test
aaa
pop
inc
fists
xor
push
ret
popa
dec
mov
lahf
sbb
dec
aad
hlt
add
cwtl
fbstp
mov
push
loop
xor
lock
ror
add
test
and
ds
jbe
outsb
lret
jns
jns
insb
test
push
dec
cmp
dec
sbb
icebp
je
out
pop
mov
sub
jb
data16
mov
aad
mov
add
push
xlat
stos
psubw
stos
pop
push
push
and
jnp
jle
jecxz
and
scas
mov
das
imul
jle
xor
pop
movsl
sub
inc
or
xchg
clc
int
pushf
ds
loop
pop
movsb
cmp
jmp
adc
in
and
xchg
pop
push
sbb
dec
pop
paddusw
into
push
repz
in
mov
fs
test
mov
push
and
adc
lret
add
xlat
push
imul
dec
lds
cmpsb
aad
stos
cmpsb
xor
sub
pop
mov
nop
int
xor
pop
cltd
test
pop
repz
fcmovu
xchg
iret
jne
scas
imul
rcr
leave
push
pop
mov
loope
pop
sub
cmp
pop
js
scas
sub
in
stc
push
in
push
or
push
push
jmp
xchg
xchg
adc
jno
mov
or
ret
fiadds
jne
mov
rcll
push
or
das
test
ds
aad
mov
push
pop
lods
pop
int
jbe
imul
adc
cmp
pop
cmp
cmp
xor
daa
jne
or
inc
cmp
or
sub
lahf
xchg
hlt
push
push
xor
fisttps
cmp
std
jle
jle
mov
lahf
push
push
call
add
mov
gs
pop
scas
push
xchg
cmp
pop
pop
fwait
rorl
sub
cs
push
int
adc
dec
push
xorb
add
ds
data16
mov
into
xchg
push
mov
xor
divb
cmp
cwtl
mov
and
imul
mov
out
fsubs
sbb
icebp
mov
push
inc
mov
dec
sub
mov
in
or
fimull
sub
fstpl
sub
push
rorb
add
outsl
xchg
add
lcall
xor
inc
dec
rolb
dec
mov
or
insl
inc
shlb
jns
hlt
cli
and
sbb
js
inc
mov
adc
inc
nop
aam
les
dec
and
and
ficomps
mov
fbstp
cli
xchg
dec
dec
xchg
imul
sti
push
icebp
or
sbbl
sub
andl
add
aas
addl
fstpl
fdivrl
adc
repnz
pop
xchg
mov
iret
fisttpl
xor
push
xchg
inc
add
out
add
dec
mov
jbe
sub
rcrl
xchg
push
je
pcmpeqd
orb
xchg
orl
dec
popa
test
or
and
mov
imul
ss
add
daa
lret
testb
mov
outsl
insl
pop
sets
fistps
pop
shlb
push
call
adc
sub
lahf
fistps
sub
test
popa
sti
outsb
aas
cmpsl
lret
adc
push
jge
outsl
xchg
lods
pop
or
mov
adc
and
adc
jae
jo
sbbb
cli
shlb
out
inc
mov
dec
cltd
sti
xchg
pop
scas
pop
popa
or
jl
jne
mov
pop
mov
aas
dec
paddusb
test
mov
fst
cmp
rcl
fisttpl
cmp
xchg
jnp
scas
add
repz
out
mov
cmp
xchg
mov
xchg
jl
aam
ds
dec
sub
pop
jp
js
inc
jnp
repnz
adc
or
iret
shl
cld
sub
out
mov
mov
les
movsl
mov
xchg
sub
mov
fstp
arpl
sub
jo
sub
pop
int3
arpl
jb
loopne
inc
xor
shll
sti
test
pusha
xchg
cwtl
push
pushf
mov
dec
imul
xchg
adc
jns
or
jo
jnp
pop
insl
lret
xchg
inc
aad
cmp
mov
shl
ret
rorl
stc
dec
movsl
loope
xchg
rclb
in
addr16
hlt
pop
mov
movsb
inc
cmp
mov
call
aaa
mov
mov
xor
int3
int
xchg
cmp
lock
cld
inc
sahf
jge
and
sbb
imul
cmp
cmp
ja
imul
sbb
xchg
pushf
mov
sbbb
psllq
mov
decb
mov
mov
xorl
ret
insb
add
mov
mov
and
or
daa
loope
lcall
or
mov
mov
clc
dec
popf
sahf
imul
movsl
pop
lock
pushf
inc
lret
dec
or
cmp
xor
dec
jmp
dec
repz
insb
add
sub
xor
sarl
dec
pop
pop
mov
push
mov
xor
cmpsb
cmp
hlt
pusha
xchg
adc
push
mov
ss
rdpmc
sub
add
mov
in
lea
inc
cwtl
lret
mov
les
ljmp
dec
int3
inc
push
std
adc
jmp
lods
shll
sahf
mov
sbb
dec
cld
popfw
and
adc
jns
out
push
pop
xchg
mov
fsubl
testl
bound
pop
hlt
mov
cmp
stc
cmp
std
call
cmp
xchg
xchg
and
mov
repz
stos
fcompl
and
aam
or
cmp
fscale
dec
pop
xchg
pop
mov
mov
lret
imul
imul
xchg
add
fwait
enter
add
sti
cmpsb
lock
pop
gs
jb
mov
push
jmp
sarl
aas
jo
popl
cld
outsl
lock
das
adcl
mov
jbe
pop
stos
sbb
lock
cs
mov
lahf
or
subl
fcoms
cli
inc
push
mov
dec
leave
cmp
cmpsb
inc
sbb
fmuls
pop
divl
mov
jae
mull
outsb
fdivrs
scas
dec
fsubrs
dec
iret
les
in
xchg
pop
xchg
std
xor
into
rcl
ja
call
loop
insl
dec
out
cmpb
fisubl
das
cmp
and
out
jns
mov
or
sub
aas
or
dec
cmp
dec
jmp
push
hlt
jp
icebp
pop
fsts
cmpsb
scas
add
ljmp
and
outsl
pop
pop
gs
rcl
insb
push
cmp
jo
add
cltd
xor
push
pop
adc
mov
and
pop
push
adc
jne
dec
xor
movd
ja
test
mov
or
add
mov
test
adc
dec
hlt
xor
xchg
daa
mov
call
adc
fldenv
lods
pop
inc
clc
mov
fnstsw
jne
xor
push
enter
and
xlat
cmp
cmp
sub
adc
mov
sub
stc
in
testl
out
pop
ss
cmpsl
jecxz
mov
inc
scas
enter
xchg
les
mov
lods
shrb
pop
mov
inc
inc
or
xchg
mov
leave
sahf
add
mov
sub
adc
lea
negl
test
test
jmp
inc
adc
xor
xchg
jmp
jne
ret
lods
aam
cmp
xor
jnp
mov
pop
mov
ret
fprem1
jbe
push
xchg
inc
aam
aas
imul
sub
jno
mov
jns
rcrl
push
aas
jmp
stos
aaa
fcmovbe
fimull
sbb
neg
inc
jbe
jo
sbb
xor
mov
xchg
mov
mov
jbe
xchg
sub
and
xor
idivl
mov
push
imul
pop
movl
cld
scas
movsl
cs
subl
mov
adc
xor
mov
jge
cmpsl
xor
or
or
cmpsb
enter
jp
xor
jbe
inc
xchg
mov
andb
or
nop
adcl
mov
add
jbe
sub
sub
pushf
pop
add
and
pop
je
mov
pop
scas
lods
lock
sahf
rol
enter
mov
and
es
mov
jbe
mov
pushf
jo
add
ficoml
push
addb
jne
mov
test
dec
lret
mov
lock
mov
sbb
push
test
js
jo
inc
pop
mov
vmwrite
jns
jge
jp
cmp
sbb
je
pop
or
fnstcw
neg
pop
mov
ja
and
les
leave
int
pop
sub
mov
loope
mov
xchg
mov
add
xchg
stc
dec
sub
ss
jl
fldcw
inc
es
and
pop
lret
jg
adc
inc
mov
dec
mov
inc
mov
incl
je
dec
mov
add
adc
fmull
movsb
cld
stos
xchg
pop
inc
out
push
cmp
mov
pushf
imul
xchg
sar
sbb
pop
into
lds
xchg
sub
imul
jecxz
cli
or
xchg
push
xchg
mov
aam
rcl
mov
adc
and
fwait
in
je
xor
add
cmpsl
xchg
push
adc
test
push
jne
stc
pop
mov
sbb
sbbb
int
scas
fdivs
xchg
mov
or
cld
xor
lret
push
lret
dec
inc
push
or
mov
sarb
push
adc
shr
lods
xor
dec
incb
imul
aad
dec
sbb
pop
mov
outsb
mov
sbb
addb
inc
jmp
jp
int
fsubrl
inc
push
push
fldcw
and
push
aad
aas
pushw
ds
mov
dec
and
mov
inc
mov
mov
mov
fmull
pushf
les
out
lods
les
jb
les
mov
aad
xor
cmp
outsb
xchg
sbb
push
stos
int3
pop
and
and
sbb
enter
inc
imul
xor
cmpl
and
imull
jl
andl
in
jge
cmpsb
subl
repnz
insb
add
jnp
sbb
frstor
js
and
cmp
xchg
add
test
push
xchg
push
mov
or
xchg
ds
xchg
popa
push
cmp
es
push
fadds
fidivrs
mov
cmpsl
aam
pusha
cli
andl
jge
or
aam
das
das
jmp
cmpsb
out
cwtl
div
inc
ficoml
cmc
out
and
fwait
in
test
xchg
sub
imul
fnsave
push
in
sub
cmp
sub
cmc
pop
test
xchg
and
cmp
ja
lds
or
mov
cmp
cmp
mov
out
aam
sub
mov
shlb
and
rcrb
jo
jge
sbb
imul
xchg
js
bound
test
mov
adc
fsubrp
rcrb
push
and
mov
cmp
push
imul
aas
ss
cmp
bound
loop
icebp
int
xchg
fst
lock
jmp
in
jb
dec
in
in
inc
jmp
jmp
push
enter
push
cmp
fsubrp
out
mov
cmp
mov
test
popa
into
aam
sub
jo
jg
js
je
sbb
addr16
orb
jbe
add
popf
adc
sahf
ds
mov
imul
sbb
mov
out
jp
cmpsb
aas
ret
xor
and
sahf
jl
jne
nop
mov
mov
icebp
and
mov
xchg
subb
imul
test
mov
lea
mov
push
cmp
les
jbe
cmp
jnp
icebp
mov
rclb
rclb
int
cmpsl
stos
or
pushl
mov
and
xor
adc
push
out
enter
mov
or
add
call
iret
inc
push
int3
inc
setnp
xchg
jmp
add
loope
mov
pop
mov
mov
adc
jne
push
out
and
push
sub
cs
mov
out
cmpsl
mov
js
das
sub
xor
mov
pop
sub
and
xor
jbe
sbb
inc
pusha
sbb
lods
pop
incb
xor
ja
ja
and
nop
dec
icebp
inc
shrb
int
or
pop
repnz
pop
int
scas
mov
push
fistps
faddl
and
cmp
xor
inc
pop
adc
fstpt
jmp
mov
addr16
jae
mov
mov
mov
jae
jg
data16
push
add
fwait
sarb
sbb
mov
dec
mov
or
push
les
adc
and
aaa
inc
jle
aas
adc
pop
or
pop
jge
imul
or
cltd
adc
aam
pop
add
es
or
inc
out
push
or
call
jnp
js
xchg
mov
jno
ds
sti
ret
incb
and
leave
pop
sub
push
aas
inc
mov
test
js
or
add
cmp
inc
pusha
cmp
mov
mov
mov
dec
jae
sbb
lea
push
push
aaa
sub
out
xchg
frstor
jnp
addr16
add
mov
loope
ds
mov
aaa
fcompp
dec
arpl
call
loopne
dec
pusha
das
sahf
and
popa
inc
jae
add
mov
pop
adc
test
lds
lea
sti
pop
pop
outsb
and
sub
inc
jb
push
fdivl
sbb
lret
lret
das
inc
inc
adc
das
dec
dec
aaa
nop
clc
fs
inc
cmp
or
dec
push
lahf
add
cmp
out
inc
daa
cmp
js
cmp
mov
lahf
data16
xor
lahf
shl
sub
dec
xor
insb
mov
xor
or
rorb
push
xchg
bound
sti
std
xor
adc
jnp
repnz
adc
mov
test
out
inc
add
int
jle
cmp
fisttps
ljmp
into
xlat
xor
cli
sub
jle
inc
repz
outsb
mov
loope
subb
adc
sub
inc
leave
and
lods
sbb
dec
inc
fdivr
insl
fisttps
push
lahf
or
xchg
sbb
arpl
push
push
fidivrs
or
sbb
cmp
jne
mov
jge
add
movsb
test
pop
mov
loopne
out
sub
pop
stos
jnp
mov
sbb
lds
jae
cli
pop
shll
add
pop
and
jge
sbb
adc
notl
in
data16
cmpsl
shlb
arpl
sub
into
adc
cmp
fistpll
cmc
inc
rolb
sub
and
jb
sbb
jno
movsl
sub
inc
dec
xor
and
es
cmp
pusha
iret
inc
jo
js
pusha
xor
inc
mov
push
mov
testb
mov
out
in
sarl
pop
movsb
lock
adc
jae
sbb
imul
inc
into
dec
int
cs
dec
and
stos
cwtl
adc
outsl
sub
mov
pop
cld
sub
fs
pop
test
inc
inc
dec
pop
xchg
cmp
add
shl
fadds
gs
push
jl
sbb
push
lods
loop
in
xchg
andb
lds
sbb
fs
test
or
stc
cltd
pop
stos
mov
jle
mov
cmp
xor
dec
jmp
movsl
dec
or
xor
jb
adc
rclb
test
inc
jbe
dec
jl
pop
les
enter
inc
jp
jmp
mov
and
fnsave
inc
lcall
sbb
cmc
daa
inc
inc
or
aaa
fnsave
loope
jo
out
adcb
sbb
imul
mov
mov
ljmp
xchg
lods
pop
dec
cmp
sub
lea
stos
cld
jge
and
mov
lahf
scas
xchg
ret
rol
dec
cld
pop
fistl
ja
fimuls
mov
push
in
pushf
inc
mov
cmp
fidivrs
dec
add
jo
adc
lock
mov
inc
scas
sbbb
pop
arpl
movsb
pop
jae
push
add
rorl
fwait
out
sti
outsb
mov
sbb
push
cwtl
mov
mov
inc
shrl
scas
inc
ret
cmp
pop
std
mov
xor
xchg
sub
pusha
addb
std
and
adcl
sbb
lret
jmp
mov
inc
dec
or
mov
add
fisttpl
and
fmull
scas
ds
dec
pop
adc
leave
incl
add
fistpl
cmp
sti
sbb
jnp
scas
mov
mov
loope
mov
leave
fs
pop
add
ljmp
push
movsl
mov
shlb
mov
push
mov
loope
xchg
jl
push
mov
hlt
xchg
lock
xchg
and
cli
pop
adc
out
pop
pop
push
jns
imul
sub
pop
ret
lods
inc
xchg
and
fstp
cmp
fwait
test
popf
test
shrb
mov
and
test
xor
xor
cmp
outsl
mov
cmc
mov
pop
jae
int
aaa
rcr
in
idivb
or
sub
and
cmp
outsl
adc
or
clc
loope
data16
jbe
add
into
shll
inc
test
leave
aas
mov
mov
adc
push
sbb
sbbl
mov
clc
stc
push
incl
fbld
ss
int3
xchg
lods
scas
xor
push
adc
iret
xchg
out
jl
out
mov
sbb
xchg
dec
and
mov
inc
leave
inc
mov
pop
mov
movsb
data16
into
jmp
jb
mov
mov
js
mov
inc
mov
push
fs
js
sbb
jno
or
xlat
orl
popf
inc
or
or
mov
mov
inc
or
push
ds
cmp
sbb
jnp
mov
xor
mov
rcll
mov
adc
push
inc
out
mov
inc
jecxz
inc
and
pop
outsl
dec
xchg
or
fdivl
cmpsb
sahf
lea
pop
mov
daa
pop
lds
cs
pop
fs
pop
out
pop
inc
inc
aas
inc
push
xchg
js
cli
inc
cmp
inc
jae
jge
into
push
iret
push
scas
sub
pop
xor
xchg
outsb
pop
maxps
xor
imul
loop
cmp
sar
test
sub
inc
push
xchg
roll
fcom
mov
aam
sub
xor
pop
outsl
shl
push
cmc
lcall
out
inc
ja
lcall
jno
stos
stc
xchg
iret
aam
fs
mov
xchg
enter
lcall
pop
and
loopne
sbb
mov
mov
into
test
ljmp
out
shr
cltd
cmp
mov
dec
add
jno
mov
pop
lods
mov
sub
fs
cmp
add
cwtl
test
imul
mov
repz
cmp
xor
lret
mov
std
shlb
sub
add
cwtl
int3
push
orl
sbb
push
push
fidivl
scas
das
lea
xor
dec
aad
dec
and
sbb
gs
jae
add
sbb
mov
std
pushf
mov
xchg
ficomps
es
fidivs
push
xchg
inc
cmp
jmp
outsb
mov
arpl
inc
adc
inc
sbb
cmp
movsb
ja
or
stc
jg
std
cmpsl
adc
lods
sub
scas
lret
mov
stc
mov
pop
cmp
mov
rcl
mul
orl
inc
aam
fs
lea
shrb
pop
hlt
popa
lcall
aad
mov
cmpsb
dec
ftst
sub
insl
push
popa
aam
or
or
xchg
in
in
or
fbstp
push
ja
sub
xor
jb
loop
inc
sbb
mov
add
push
outsb
sub
adcl
lock
addr16
cmp
cmpsl
xchg
xchg
sbb
push
xor
sub
lods
jecxz
fisttpl
add
lahf
int3
addb
dec
inc
pop
inc
xor
nop
add
rclb
clc
jne
jns
mov
fdivrs
and
mov
xlat
or
rcr
cmc
jb
adc
inc
fadds
xor
jp
shl
mov
push
nop
and
gs
adc
adc
cmpsl
rcll
hlt
mov
out
sub
int3
push
mov
adc
add
out
daa
sub
in
outsb
jo
mov
or
imul
xor
inc
icebp
sahf
sbb
test
xchg
fidivs
daa
enter
mov
fisttpll
push
mov
pop
lcall
push
in
stc
dec
dec
or
fstpl
mov
jae
pop
pop
mov
outsb
stos
out
shlb
mov
js
mov
inc
mov
out
sbb
dec
jae
cmp
in
mov
lea
add
or
jg,pt
mov
push
dec
sub
jnp
je
xor
popa
outsl
mov
mov
insl
sbb
rolb
pop
aam
sbb
sbb
lock
mov
add
sbb
inc
push
sub
cmpl
xor
iret
and
push
aaa
aas
mov
fldcw
lds
popa
add
push
mov
xchg
insb
aam
pushf
and
mov
push
lret
add
cwtl
je
neg
inc
clc
lret
dec
mov
xchg
jae
jp
cmp
inc
negl
add
in
ret
xor
and
insl
mov
push
jl
or
movsb
out
out
call
inc
aam
mov
xor
ljmp
xor
pushf
pop
cmp
add
mov
leave
sbb
movsb
jae
or
aam
fsts
outsb
or
inc
push
push
mov
lock
xchg
jno
inc
test
orb
cltd
loope
cli
mov
data16
dec
adc
fs
push
and
cltd
jmp
push
jb
sti
ror
sbb
dec
call
out
in
push
pop
ja
lcall
push
push
ds
pop
mov
cmp
notl
add
addr16
mov
mov
push
cmc
inc
std
aad
in
js
pusha
mov
insb
ds
inc
push
jnp
dec
pusha
push
in
xchg
shrb
daa
mov
repnz
or
fimuls
sti
sbb
push
or
int
mov
adc
add
or
test
addl
popl
pop
jmp
sub
into
xor
ja
inc
ja
pop
xchg
push
lods
and
dec
xor
test
faddl
popf
cwtl
mov
lods
pop
jbe
push
lea
mov
mov
jp
test
fstps
lret
std
jmp
cmp
mov
cmp
in
adc
pop
rcrl
std
xor
mov
daa
mov
mov
outsl
and
pop
gs
mov
or
xchg
pop
fidivrl
mov
push
fbld
cmpsb
sbb
adc
adc
pop
sbb
insb
sti
xor
or
lock
jle
mov
rcr
sahf
loop
out
lcall
push
push
clc
cmpb
fs
das
mov
pop
mov
shrl
test
push
fadd
lods
and
loope
sbb
pop
scas
xchg
xchg
mov
add
xor
sub
hlt
push
mov
lret
sahf
icebp
in
pop
addr16
cltd
sbb
inc
or
sbb
out
dec
ret
call
mov
lods
mov
stc
jae
pop
pop
or
xchg
mov
adc
in
adc
dec
push
xchg
dec
in
lods
out
loop
stos
and
cld
mov
cmp
stc
enter
sub
xchg
cltd
jecxz
xchg
inc
mov
fistpl
sbb
std
sbb
lds
stos
push
sti
add
mov
pushf
xchg
lahf
popa
and
outsb
lea
and
dec
mov
pop
daa
lock
into
hlt
shr
add
mov
daa
and
sar
add
sbb
clc
pusha
jno
out
lea
xor
les
xor
in
cmp
sbb
pop
xor
inc
aas
adc
js
aas
pop
dec
shr
arpl
cmc
pop
mov
test
adc
xchg
icebp
cmpsb
add
jle
adc
stos
fstl
xor
jno
ror
out
rorl
pushf
jmp
mov
and
push
and
adc
dec
mov
in
jbe
lods
cmp
dec
rclb
mov
xor
loopne
pop
lea
add
jnp
sbb
das
in
cmp
cmp
dec
mov
jle
stc
mov
cmpsb
jo
shrb
jne
aad
in
fisttpl
js
xchg
pop
rcll
leave
test
cmpsb
aas
cs
aas
js
ret
adc
lock
pmullw
lcall
jle
imul
lcall
sarl
or
xchg
and
cmp
and
sub
repnz
adc
sub
push
test
movsl
movsb
cs
test
aas
jecxz
xchg
stos
pop
inc
mov
mov
cwtl
push
mov
mov
aaa
mov
push
dec
xorb
mov
test
mov
es
hlt
movsl
push
movsl
jae
add
adc
dec
or
outsb
sbb
and
dec
dec
neg
or
xlat
inc
daa
shlb
stos
jp
fcompl
dec
mov
inc
pop
cmp
sub
cmc
push
insb
test
mov
push
stos
dec
jp
pop
sbb
or
mov
popf
icebp
adc
xchg
jns
es
rcl
cwtl
mov
and
sub
mulb
subb
xor
mov
pop
subl
enter
out
ss
cli
mov
and
add
outsl
push
insl
call
inc
jno
inc
loope
ret
dec
movsb
mov
fs
cli
repz
repnz
je
lock
sbb
cmc
mov
das
fsubrl
xchg
loop
cltd
jns
mov
fidivrs
mov
aaa
jg
mov
mov
iret
dec
lods
jg
adc
into
arpl
mov
mov
jmp
xchg
popa
lret
mov
xchg
ror
xor
xchg
mov
scas
into
popl
pop
xlat
stos
pop
nop
iret
dec
imul
ss
cmpsl
out
or
dec
adc
nop
std
ja
xchg
into
fscale
shl
add
pop
ret
aad
aas
aaa
sub
movsl
sbb
mov
out
sub
and
fimull
fwait
mov
jl
insb
scas
ret
dec
mov
mov
shll
jnp
rorb
inc
pusha
sub
ret
test
mov
add
cmp
pop
and
lock
or
pop
push
fs
cmp
inc
dec
es
mov
and
dec
fists
adc
or
push
mov
loope
sub
pop
fiadds
movsl
iret
dec
arpl
mov
xor
sub
mov
sbb
cmc
gs
orb
xchg
sbb
sub
rcrb
mov
stc
stos
shrl
icebp
jnp
push
ficoms
fmul
mov
cwtl
hlt
inc
xchg
inc
aas
inc
lods
fcoms
dec
sub
push
rcll
test
add
push
fstl
mov
mov
push
sub
or
sbb
push
pop
pop
orl
or
xchg
and
sub
outsl
jecxz
lock
xchg
jmp
cmpl
sub
mov
mov
pop
testl
mov
xchg
mov
nop
loope
roll
int3
hlt
lock
sub
ficomps
test
mov
test
sbb
push
dec
cmc
lahf
ret
je
mov
xor
sbb
addl
add
dec
xlat
sbb
or
icebp
sbb
cmpl
in
gs
sbb
jo
lahf
mov
sarl
and
jecxz
cmpxchg
mov
fcomps
mov
out
jb
dec
pop
inc
add
fiadds
sub
cmp
cmp
sbb
fwait
jnp
inc
jmp
ja
push
add
push
imul
or
leave
push
lods
cmp
stc
ret
mov
in
shlb
movsb
imul
adcl
push
rorb
cmp
jbe
add
push
or
stc
mov
or
out
cmp
mov
ss
pop
cmp
js
mov
outsl
inc
das
jns
adc
roll
addb
popf
jl
sarb
mov
rcrl
pushf
sub
es
inc
arpl
int
xchg
mov
and
arpl
mov
push
es
or
xchg
lret
pop
jp
pop
jle
inc
rcll
inc
push
ficompl
mov
test
aam
repz
jae
mov
adc
mov
clc
divl
insl
loop
pushf
dec
push
xor
leave
sbb
dec
or
icebp
or
add
fdivp
jecxz
ret
or
sub
enter
ja
xchg
in
push
sub
enter
fdivrl
call
mov
cmpsb
lcall
sub
push
cmp
out
in
pop
dec
mov
mov
xor
in
testl
stc
sub
loope
cmp
xor
scas
cmp
test
jmp
lods
loop
aaa
adc
xlat
ficomps
fstpt
mov
movsb
clc
xor
sarl
popa
test
push
lret
icebp
or
pop
push
js
add
in
aad
add
mov
ret
inc
fists
lods
jp
push
test
mov
jmp
cmp
popf
mov
mov
jecxz
lods
mov
les
es
add
mov
stc
in
dec
xchg
fwait
enter
outsl
stc
jmp
stc
cmp
sub
inc
roll
pop
inc
mov
xor
mov
fcmovne
je
sub
jne
repz
jae
cmpl
ret
repnz
cmc
and
and
fimull
pop
mov
cmp
mov
dec
mov
or
shrd
mov
repz
xor
movsl
dec
mov
fnstsw
dec
push
insl
scas
pop
sub
stc
jbe
test
push
jnp
jo
pusha
ss
dec
mov
fisubrs
popa
xchg
and
push
xchg
mov
adcl
pop
sub
rorl
int
adc
mov
dec
cmc
adc
mov
mov
daa
in
insb
cmp
push
mov
repz
popa
jnp
cmp
cmp
adc
fidivrs
addr16
sarl
jmp
dec
ds
mov
sar
aam
aas
push
mov
adc
je
xchg
stos
aaa
cmp
cmp
inc
or
sbb
repz
jmp
in
pop
das
daa
xor
inc
and
sub
icebp
pushf
clc
test
in
mov
aad
pop
lret
rolb
scas
push
jae
jecxz
and
fs
mov
xor
mov
repz
nop
in
movsl
call
sbb
fisubl
sub
cli
lods
mov
insb
loope
rcrl
ja
test
mov
inc
push
loope
inc
jns
jl
adc
xor
call
xchg
push
ret
dec
push
divl
xchg
sub
mov
xchg
clc
repz
fistpll
jp
sarl
leave
push
sub
mov
orl
push
aad
sub
inc
mov
inc
push
xor
popa
cs
scas
popf
pop
or
testl
jge
mov
fdivr
pop
push
sbb
and
push
dec
xor
push
jno
lea
cmp
sbb
inc
inc
jecxz
jo
sbb
sub
orl
push
xor
inc
popa
mov
cmp
xorb
add
xor
add
xchg
inc
sbb
adc
das
mov
popf
cs
mov
mov
insl
stc
ja
rcll
inc
cmpsb
das
cmp
shrl
and
or
movsb
xchg
icebp
xor
xchg
push
xchg
test
mov
sbb
fsubrs
jno
push
inc
pmulhw
repz
push
sub
testb
cltd
fs
sub
mov
out
xor
dec
xor
pop
lret
subl
pop
jmp
push
aaa
mov
xlat
dec
add
xchg
mov
pop
outsl
inc
rcr
mov
jns
mov
and
mov
adc
xor
push
jmp
jns
cmpsb
aad
jbe
cmpsl
mov
push
rclb
cmp
rcr
pop
sbb
push
dec
in
push
adc
and
lahf
psubusw
test
cld
and
inc
push
xchg
pop
nop
lods
divl
xlat
push
jecxz
hlt
lds
xchg
cmpsl
lret
jns
mov
mov
jbe
cmp
dec
add
aam
adc
jmp
or
pop
xor
xchg
icebp
pop
jmp
mov
adc
test
inc
mov
xchg
dec
adcb
popa
jecxz
das
outsl
popf
stc
push
jmp
jecxz
xchg
push
mov
push
pusha
repnz
push
mov
pop
scas
mov
jbe
adc
dec
cmpsl
pushf
mov
jle
sub
inc
mov
cli
jbe
inc
and
mov
shl
gs
and
xor
and
xchg
stc
ret
movsl
adcb
jle
dec
mov
into
cwtl
xchg
adc
jl
mov
in
fstp
dec
fstpl
push
mov
les
int
cmpb
adc
stos
mov
je
sbb
adc
or
add
lcall
fisttpll
gs
jns
out
ljmp
or
daa
pop
out
and
jne
xor
imulb
add
outsb
movsb
push
movsb
push
fs
addl
stc
loop
xchg
cmp
mov
push
xor
xchg
cs
enter
les
inc
sub
cmpsl
mov
sti
cmp
cmc
ljmp
xchg
pop
aad
adc
in
jnp
scas
test
sbb
mov
xlat
pop
xchg
sub
fdivrl
dec
rol
aaa
test
adc
out
xor
push
es
jne
cld
repz
sub
es
adc
sub
cmp
cltd
dec
inc
lea
sbb
imul
and
cmp
fistps
gs
out
xchg
int
cmp
fistps
cs
mov
int3
repnz
push
subb
push
add
outsl
jp
xor
fnstenv
mov
icebp
dec
sahf
sbb
pop
xchg
in
jmp
leave
sub
inc
xor
dec
test
das
cmp
movsb
jb
inc
cmp
xchg
mov
inc
or
aad
jle
jmp
jo
adc
test
icebp
outsb
push
lods
int3
xor
dec
out
nop
pop
outsl
fisubrl
mov
jmp
sub
movsb
sbb
test
sbb
mov
adc
xor
mov
xor
lods
mov
mov
lods
int3
inc
pop
dec
inc
dec
push
jmp
cli
je
imul
mov
pop
ret
xor
nop
mov
and
mov
push
repnz
add
addr16
cmpsl
and
jb
inc
xor
out
mov
xchg
xchg
adc
mov
clc
insl
xor
into
or
subb
and
sbbb
or
jmp
mov
xor
cmp
pop
addr16
lret
scas
cli
mov
sarl
lds
out
and
jmp
pushf
mov
rorl
inc
pop
dec
jmp
loopne
inc
mov
outsl
or
adc
push
or
ds
jecxz
aaa
clc
popa
rorl
fisttpll
sarb
jg
stos
push
shl
popf
mov
lea
rorl
sti
aaa
stos
or
pcmpeqw
lods
jecxz
pop
mov
sub
xchg
and
cld
loop
out
and
mov
jg
and
cli
insl
loope
inc
outsl
les
lahf
xchg
xchg
aam
mov
xchg
mov
movsl
sbb
inc
mov
mov
jle
mov
xor
jg
lds
add
std
mov
mov
shrl
sub
dec
sbb
xchg
fwait
call
xchg
pop
pop
fldln2
mov
pop
jae
xchg
loop
fldl
fs
and
jo
xchg
xchg
and
sub
std
aas
arpl
push
push
and
xchg
xor
dec
add
movsl
stos
xchg
jnp
add
jecxz
hlt
xchg
ljmp
xchg
and
jecxz
inc
lods
jb
jns
mov
mov
cmp
mov
xor
lea
fsubrp
xchg
mov
jle
hlt
xchg
adc
mov
pop
dec
lret
push
sub
mov
mov
shl
das
sarl
push
sbb
inc
test
xchg
or
call
pushf
outsb
jmp
stos
push
ss
ret
push
test
adc
loope
cli
dec
es
mov
mov
aas
aad
movsl
add
push
jnp
mov
sbb
pop
scas
sbb
cmc
sub
xchg
cltd
add
divl
mov
push
xchg
mov
xor
mov
fnstsw
insb
pop
sub
lcall
xchg
push
aad
cmc
fdivrl
cmp
test
iret
xor
add
adc
daa
rcrl
mov
xchg
lods
fs
hlt
fwait
ljmp
outsb
xor
bound
fdiv
mov
cmp
push
imul
repnz
sub
in
add
mov
sub
jge
int3
lods
aad
into
xchg
test
push
ret
in
push
lods
jmp
out
adc
int3
mov
xor
out
das
std
add
mov
jo
jno
sub
sbb
push
sub
hlt
lods
and
inc
inc
and
fidivl
and
xor
jno
jp
dec
cmp
insl
cwtl
cwtl
stos
popf
ljmp
push
fsubrl
jbe
jl
pop
mov
sbb
es
xor
sub
pop
adc
jecxz
lods
in
arpl
mov
push
lods
test
stos
inc
ret
dec
add
test
pop
scas
into
cmpsl
mov
out
xchg
dec
adc
add
mov
cltd
inc
jnp
test
pushl
jbe
jecxz
and
push
dec
jecxz
cmc
gs
lcall
fidivs
mov
insl
hlt
lock
pop
nop
cmpsb
sbb
orl
jl
jge
lret
mov
ret
loope
imul
inc
push
adc
cmp
and
or
pop
call
and
aam
jae
mov
add
ja
loop
xchg
test
les
mov
lods
sbb
mov
je
xor
or
ds
imul
imul
adc
dec
jmp
rorb
jecxz
cmp
repz
in
cmp
cmpl
fildl
cmpb
in
fdivrs
in
xor
lock
andb
pop
cwtl
cmpsl
nop
mov
xchg
aas
jno
dec
xor
test
in
mov
mov
clc
cmpl
jne
loop
call
push
mov
xor
shl
fcmove
cmp
sbb
insl
mov
xchg
pop
repnz
mov
mov
jp
push
in
notb
out
lods
xlat
and
mov
add
movsl
fwait
push
rorb
jo
push
aad
dec
xchg
repz
rorl
lcall
dec
xchg
out
mov
imul
jmp
inc
popa
test
loop
jnp
or
push
sub
fs
push
in
jb
jge
sub
lds
out
je
add
bound
jnp
push
outsb
outsb
pop
push
push
xchg
js
sahf
loopne
and
mov
xor
push
jbe
sahf
scas
repnz
aad
adc
decl
dec
mov
xchg
daa
stc
dec
sub
jg
inc
dec
into
push
mov
xchg
leave
into
cmp
jbe
rcrl
pop
fcoms
push
xchg
sub
inc
sbbb
pop
repz
insl
adc
jb
enter
stos
push
jb
mov
daa
roll
testl
out
loopne
sbb
mov
mov
push
lahf
inc
ss
pop
xor
pop
xchg
mov
or
pop
fstpt
rorb
scas
mov
repz
es
cmp
pop
hlt
ljmp
inc
xor
ficoms
mov
inc
sarl
mov
std
leave
testl
mov
js
stc
movsl
jecxz
mov
sub
push
or
mov
jle
clc
jge
leave
xchg
and
in
jb
mov
mov
js
in
mov
push
xchg
iret
ljmp
mov
pop
pop
das
mov
cmpsl
repnz
icebp
outsb
cmp
jecxz
test
xor
push
inc
sub
cmpsb
cmp
xchg
jge
mov
inc
lcall
subb
dec
and
mov
out
xlat
mov
repz
negl
xor
dec
adc
ja
rcl
loope
adc
sbb
sub
jmp
cmp
testb
shll
xchg
lcall
insl
mov
rclb
test
dec
mov
sub
insb
fcmovnbe
insl
cmc
mov
jnp
jl
sahf
shr
adc
cmp
sbb
adc
aaa
sbb
jp
addr16
lods
cmp
call
xchg
jl
inc
cs
test
xor
imul
cmp
ljmp
leave
je
imul
ds
mov
or
test
dec
ficoml
mov
or
push
push
sbb
fisubrs
das
pop
bound
in
scas
jb
stos
mov
negl
call
ss
popf
hlt
decb
dec
sub
cmp
sub
mov
mov
movsl
mov
xchg
leave
lcall
rcr
lahf
cmp
pop
mov
mov
push
std
std
cmpsb
push
enter
subl
lock
or
aas
mov
movsb
and
shlb
rcrb
push
mov
sub
sub
jbe
nopl
adc
xchg
add
xor
repz
mov
inc
enterw
mov
enter
jl
jp
add
push
dec
inc
pop
jnp
xor
pop
in
mov
push
leave
add
sub
popa
ret
insl
in
ret
xlat
pop
inc
add
mov
sbb
pusha
arpl
sub
sbb
popl
cmp
popf
and
pop
pop
fnstcw
push
push
push
pop
loope
lcall
mov
xchg
xlat
push
lods
xlat
xchg
dec
jge
jg
bound
stos
inc
mov
inc
jo
sbb
push
lods
push
adc
lahf
lahf
out
in
call
sub
pop
outsb
jmp
fucomi
mov
xchg
jno
scas
jae
sbb
pop
xor
push
xchg
andb
test
xchg
xchg
xchg
jecxz
cwtl
jp
rcrl
pusha
cmc
js
stc
adc
mov
xor
push
pop
inc
fcompl
dec
and
adc
leave
jl
cmp
jecxz
xchg
push
sbb
cmp
push
repnz
lods
pusha
bound
std
mov
or
xor
mov
inc
add
je
xchg
test
lcall
insl
cs
dec
lock
outsb
pop
addr16
mov
stc
fcomps
cmpsb
out
push
in
push
sbb
xchg
enter
pop
rcrb
insb
mov
adc
cmpsl
ss
mov
lock
cmpsb
lods
add
pusha
dec
test
mov
mov
xor
ret
enter
pop
push
les
adc
into
popa
dec
std
or
sub
dec
call
jmp
inc
fdivl
notl
stos
xchg
fdivs
pop
push
jg
loopne
decl
xor
pushf
dec
ds
jb
jmp
ret
mov
icebp
andl
lahf
sub
mov
cmc
inc
loopne
jg
dec
and
xor
jns
js
mov
bound
lahf
ljmp
insb
xor
pop
adc
into
test
stc
movsl
rclb
test
imul
sahf
mov
imul
insb
jecxz
in
xor
inc
mov
std
cltd
cmp
mov
cmp
andl
dec
call
or
mov
testb
mov
adc
imul
dec
fstl
je
inc
lret
cmpb
cwtl
inc
cmp
add
fldt
pop
fistpl
dec
mov
stc
out
sub
mov
mov
cmpl
mov
and
sub
mov
ja
xor
adc
cmp
push
mov
sbb
bsf
ss
rcr
pop
out
push
mov
mov
mov
xor
test
ret
mov
cmp
repnz
and
xchg
or
sbb
mov
lock
lahf
repnz
dec
adc
push
sub
mov
xchg
xor
mov
pop
pop
les
xchg
popa
pop
loope
cmp
xor
sub
xor
pusha
push
les
sbb
push
mov
mov
push
xchg
dec
mov
inc
bnd
stos
jmp
lret
cmpsb
idivb
adc
mov
sub
lea
bound
push
inc
loop
sub
sub
mov
cmp
jmp
dec
jbe
sbb
int3
mov
cmp
dec
in
inc
push
xchg
aaa
outsl
push
pop
fidivrs
adc
xor
push
lahf
scas
outsb
pop
ljmp
jg
imul
cmc
hlt
or
mov
fildl
lcall
mov
cmp
clc
sub
sbb
xlat
sbb
arpl
or
scas
out
sbb
repz
mov
int
mov
icebp
ja
ret
rcrb
or
test
jns
jl
les
jge
fpatan
ret
repnz
fwait
mov
add
and
in
sub
push
jecxz
rcll
popa
in
xor
xor
test
sbb
cltd
xchg
dec
adc
xlat
iret
xchg
xchg
pop
movsb
xlat
pop
add
dec
daa
gs
dec
push
sub
out
cmp
xlat
add
lods
cmp
mov
cmpsb
hlt
push
fistps
in
sub
jae
fdivl
adcb
in
lea
pop
test
xchg
ja
int
mov
mov
psubd
imul
pop
and
iret
push
or
gs
lods
pop
inc
push
adc
mov
fcoms
mov
pusha
dec
push
push
pop
insl
aaa
test
xchg
jle
repnz
lods
push
xlat
jg
push
loopne
int3
push
sarl
xchg
lret
push
fcoms
ljmp
leave
and
les
add
pop
cld
aam
cli
es
es
adc
add
mov
jg
xorb
xchg
movb
mov
stos
lret
test
ss
mov
sbb
fsubl
addr16
xor
mov
or
in
jmp
in
nop
in
lcall
repz
mov
ljmp
enter
push
jne
push
cmp
test
dec
fwait
repnz
iret
loope
movsl
je
out
icebp
addb
cmp
cltd
and
xchg
testl
insl
scas
xchg
mov
lahf
pop
pusha
inc
ljmp
addr16
rolb
pop
fadd
out
repz
push
mov
pop
mov
xchg
outsl
outsl
pop
in
rcrb
out
mov
push
adc
xchg
mov
daa
stc
clc
mov
shll
loope
sti
push
xchg
ret
xlat
jnp
mov
lahf
inc
out
and
into
gs
sub
mov
shlb
xchg
sbb
sahf
sub
adc
lret
or
mov
leave
add
mov
addl
mov
incl
xchg
test
mov
addr16
data16
fistps
xor
mov
xor
pop
jge
push
mov
fnstcw
aam
lcall
mov
xchg
xrelease
das
stos
int
out
cmc
divb
cmpsl
into
cmc
out
jp
clc
pop
mov
pop
es
or
push
out
cld
xor
vmovaps
inc
sbb
pop
sahf
adc
inc
mov
jno
xor
fnstsw
xchg
repz
push
pop
push
test
jnp
push
add
jmp
adc
xchg
aam
inc
dec
mov
xchg
cmp
pop
sub
xor
jne
outsb
adc
xorl
insl
mov
push
std
add
shlb
sub
sbb
insl
cmpsb
mov
sub
cmpl
call
mov
gs
add
ret
inc
into
xorb
fdivrs
frstor
mov
lods
pop
add
or
movsl
aaa
test
add
movsw
lcall
sti
inc
mov
out
pop
inc
sti
add
aad
jo
popa
insl
push
lret
xchg
mov
imul
mov
mov
sbb
pop
lea
pop
sbb
mov
cwtl
adc
push
daa
jne
sbb
xchg
ss
int
cmp
push
aaa
xchg
insb
pusha
arpl
sbb
rorl
sub
daa
mov
aas
mov
cmc
aaa
jbe
dec
je
loop
enter
ret
loopne
loopne
pop
test
mov
push
xor
cmpsl
or
push
jg
lods
add
aad
dec
ret
js
shrl
je
orl
xor
in
lea
push
in
cld
std
and
call
mov
lret
xchg
mov
mov
push
aad
mov
gs
cmp
lea
fsts
lret
in
jle
cmp
inc
int3
popf
xor
fwait
sub
push
out
dec
inc
and
cmp
mov
jle
scas
mov
dec
sbb
cmp
xchg
les
cmp
or
aas
sub
jno
adc
divl
jge
sbb
inc
push
mov
push
ds
jae
add
lea
pop
jb
lock
adc
push
sbb
sub
enter
dec
adc
out
cld
cmc
lret
out
movsb
push
push
dec
adc
pop
mov
pop
js
or
add
jns
ljmp
cltd
inc
pop
inc
pop
push
adc
mov
jno
dec
jo
push
sti
mov
stos
jns
addr16
mov
out
mov
add
add
or
bound
enter
leave
dec
inc
push
jp
sub
inc
sti
test
dec
inc
movsl
mov
mov
jnp
rcll
mov
rcrb
andb
inc
adc
add
into
sbb
mov
mov
push
fiadds
xchg
fidivs
call
stc
jge
out
jp
outsb
cmp
mov
mov
lcall
dec
cmp
or
int3
and
fmuls
fdivp
out
lcall
js
add
test
cmpsl
xlat
aam
push
loop
xchg
and
idivl
xchg
push
stos
pop
xor
push
cmp
fchs
sbb
mov
rorl
clc
push
xor
scas
mov
fstpt
or
in
subl
push
sti
scas
lahf
inc
fcmovnbe
pop
leave
int3
roll
and
imul
sti
pop
dec
call
adc
or
pop
or
sub
ds
add
adc
xchg
push
shr
jmp
lods
loop
popa
lea
pop
pop
mov
inc
pusha
je
dec
and
mov
fcompl
and
ss
pop
pop
sub
call
orl
jo
xlat
mov
pop
xchg
pop
pushf
test
outsb
lahf
xchg
jmp
clc
pop
lods
les
stc
sbbl
mov
push
mov
je
ret
or
push
jnp
cmp
das
and
scas
add
mov
mov
xlat
adc
cltd
sbb
push
xchg
inc
pop
outsb
push
shrl
push
lret
xor
insl
enter
rcl
or
aaa
jmp
stc
in
je
or
shll
and
push
fs
pop
cltd
repnz
jge
dec
sahf
inc
stc
xchg
shrl
push
jle
sub
je
lock
mov
stc
scas
sub
mov
out
sub
scas
adc
scas
jno
sbbb
dec
mov
mov
lds
mov
adc
sbb
lret
xor
push
cs
jmp
out
mov
xor
cmpsb
ja
push
sarb
mov
sbbb
xchg
movsb
mov
dec
das
sub
leave
bound
pop
xchg
adc
fists
fs
cltd
jecxz
or
fwait
jge
imul
and
pop
ret
lcall
push
stos
jb
mov
jae
shll
jno
es
mov
inc
inc
jecxz
iret
data16
stc
test
fisttpll
sub
aad
je
add
xorb
jno
ja
mov
pop
loopne
imul
imul
pop
add
jae
and
mov
jmp
repz
mov
inc
aaa
add
sub
bound
add
jp
push
repz
popf
and
cmp
cmp
add
pop
mov
jl
int
bnd
cmp
inc
out
ret
ret
push
xchg
mov
xchg
in
jnp
push
jae
inc
and
pop
cld
int
call
outsl
xor
fists
add
add
imul
pop
jbe
xor
les
loopne
xor
pop
aam
sbb
mov
cmp
scas
mov
outsb
and
in
int
jl
mov
iret
lcall
lods
sub
pop
ss
xchg
rolb
mov
adc
mov
int
enter
push
out
aam
cmp
roll
inc
pop
pop
scas
adc
jno
inc
or
imull
push
inc
adc
mov
xchg
shll
in
adc
mov
mov
cmp
add
icebp
inc
jb
cmp
push
mov
adc
scas
xchg
cmp
mov
pop
lret
call
mov
fadd
test
inc
jg
mov
mov
gs
sub
jnp
rorb
pop
sub
pusha
jno
dec
dec
or
ficoms
jbe
popa
sbb
shlb
pop
push
jmp
push
inc
xchg
sbb
add
sbb
dec
jecxz
jg
out
lret
push
ljmp
pusha
sbb
in
push
sbb
cmp
jne
add
xor
imul
push
sbb
mov
jo
sub
shll
scas
leave
mov
xchg
jo
fistps
sbb
xchg
bnd
unpckhps
or
cwtl
out
xchg
ss
cmp
mov
mov
sub
sahf
icebp
jg
aam
xchg
repnz
jl
cmp
mov
lret
xchg
lret
pop
jbe
fcoml
xchg
xlat
mov
adc
mov
ret
ljmp
mov
lcall
lods
rcrl
jmp
fwait
xchg
mov
out
lea
mov
inc
sub
call
mov
cwtl
in
mov
std
adcl
cmp
dec
dec
sbb
mov
push
iret
mov
in
lods
repnz
pop
jecxz
push
mov
addr16
fwait
decl
das
sub
or
cmp
lds
pop
lea
out
cmp
pop
lcall
js
jae
aad
shrb
or
out
cmpsl
test
and
sar
loope
das
ret
sub
gs
in
jo
mov
adc
mov
mov
xlat
sahf
cmp
sub
cld
jne
js
xlat
popf
xchg
mov
stc
mov
lahf
jle
add
push
adc
push
cwtl
cwtl
mov
and
adc
rcll
insl
mov
mov
push
cmp
jbe
inc
test
or
jp
and
popa
mov
jno
lods
mov
nop
rcrl
stos
cltd
shll
jnp
ljmp
das
test
lods
mov
outsb
jno
leave
mov
dec
inc
xor
into
mov
or
es
dec
leave
xlat
jno
cli
nop
mov
push
add
cmpsb
dec
arpl
into
call
sbbb
nopl
lods
cmp
gs
scas
stc
mull
or
sbb
push
jecxz
pop
arpl
jae
in
cli
enter
pop
and
push
fstpl
inc
xchg
loop
ja
lahf
jge
scas
in
roll
cmp
fnsave
or
xchg
jl
outsl
aas
pop
icebp
or
aam
data16
sub
xlat
ds
jle
sbb
jbe
sub
sub
pop
sub
xchg
ds
push
sbb
sub
add
and
add
aam
lcall
jg
aas
jg
xchg
pushf
mull
jle
out
mov
cltd
or
out
xchg
jp
cwtl
addb
pop
dec
pop
xchg
inc
add
movsb
mov
lock
or
xchg
rcll
imul
mov
test
cld
dec
sub
jo
iret
mov
push
je
gs
sarb
pop
rcl
movsl
es
push
and
add
or
jge
mov
movsb
pusha
jl
sbb
sti
pop
out
cmp
clc
cmc
les
jp
mov
sub
je
lods
je
jo
js
pop
jb
test
cwtl
clc
scas
fdivp
and
pop
ret
mov
push
scas
addb
cmp
bound
pop
cmp
je
mov
pushf
lock
pop
leave
dec
dec
and
mov
dec
not
mov
je
or
cmpsl
dec
adc
fdivs
mov
cmpsl
data16
sarl
lea
jo
push
mov
shl
das
lcall
push
adcl
fwait
and
xchg
and
call
outsb
aas
fsts
in
insb
xor
inc
sub
cmp
cmp
cs
in
jmp
inc
outsb
les
pusha
jo
data16
pop
ret
std
push
ljmp
add
sbb
jecxz
movsb
xor
data16
sarb
and
inc
in
push
andb
dec
xchg
out
sti
mov
cmp
pusha
dec
add
inc
jb
mov
mov
stc
into
pop
dec
lret
sbb
mov
out
adcb
ret
add
mov
es
inc
sbb
sbb
fstpl
int3
cmpsl
dec
and
js
sbb
dec
rcrl
mov
syscall
dec
addr16
lret
jp
arpl
ret
gs
push
mov
push
mov
add
aaa
adc
mov
push
int
daa
stc
loop
push
jl
test
cmp
jbe
movsb
out
clc
loopne,pn
sub
or
and
dec
and
mov
push
push
pop
mov
popf
dec
adc
les
mov
sbbb
mov
mov
sbbl
cltd
mov
and
lret
bswap
xor
aaa
ret
pop
icebp
jmp
mov
xor
cmp
scas
pop
add
cmc
jne
adc
js
mov
sbb
inc
push
push
gs
inc
roll
xchg
adc
in
sbb
shll
out
test
dec
mov
loopne
fildll
lds
sub
in
out
ja
inc
movsl
or
xor
mov
fistpl
es
xchg
cli
shlb
push
push
add
cmp
xchg
or
add
push
mov
sbb
ror
xor
xor
sbb
stos
xor
insb
add
inc
pop
in
mov
sbb
jl
icebp
xchg
sub
sbb
adc
inc
pop
xchg
xchg
cmc
fstps
pop
inc
inc
in
jno
daa
inc
mov
enter
cmp
stos
jno
icebp
inc
push
fcmovu
leave
test
fisubl
cld
push
jne
sbb
add
xchg
jne
arpl
test
decl
aad
cmp
jl
nop
push
xchg
lcall
push
jbe
mov
ljmp
add
popf
mov
cmpsb
nop
or
lahf
int
jnp
imul
arpl
cli
jle
es
jg
xchg
ds
add
cli
sbb
clc
mov
lods
cwtl
pop
sbb
mov
insb
or
xchg
inc
cmp
jp
mov
in
fldl
insl
leave
test
jno
into
cltd
jne
pop
fadd
movsl
bound
mov
fcomps
xchg
push
inc
int
sub
inc
dec
push
mov
int3
in
movsl
jnp
xchg
pusha
daa
push
xchg
cltd
dec
mov
mov
dec
sub
sar
std
sarl
enter
mov
mov
je
push
add
mov
ja
int
jb
push
xorb
pop
pop
mov
cmpsb
cli
mov
stc
sbb
push
ja
adc
mov
cmp
aaa
fwait
cmpsl
mov
inc
push
mov
push
scas
frstor
lahf
leave
mov
xor
fs
pusha
mov
loopne
pop
subb
in
ss
iret
push
jbe
inc
ds
insl
test
dec
scas
sti
sub
test
push
push
out
pop
fildl
sub
enter
inc
inc
fidivrs
jp
jb
pushf
mov
or
outsb
out
iret
shll
or
gs
pop
out
mov
loopne
xchg
lahf
lea
sti
mov
movsb
clc
mov
js,pt
lock
mov
xor
cld
xchg
rcrb
cmp
sahf
push
pop
sarl
psraw
add
lock
xchg
shrl
add
push
popf
daa
pushf
lahf
pushf
jg
test
mov
pop
fildll
sbb
dec
fsub
mov
push
outsl
cmp
test
mov
out
sbb
mov
cmc
sub
es
icebp
shll
je
mov
mov
pop
popl
lea
inc
sbbl
pusha
and
enter
sub
push
std
idivl
int
inc
or
test
mov
pop
sbb
pop
insb
xchg
push
lds
aaa
stos
out
insb
pop
sbb
cmc
sbb
sub
cmc
mov
mov
ftst
jns
clc
insl
jo
cld
cld
xchg
popl
mov
stos
mov
out
cld
decl
adc
inc
fucomp
jb
jl
add
filds
hlt
addr16
mov
outsl
inc
int3
xor
sbb
mov
and
cmp
bound
pop
rcll
push
imul
add
xor
xchg
sbbl
iret
mov
push
pop
or
lods
xor
push
adc
inc
xchg
jns
cmc
ljmp
mov
and
mov
lret
test
cmpb
xor
das
outsb
scas
leave
jae
cmp
bound
shrb
add
icebp
cwtl
xchg
nop
shll
xchg
xlat
cmpl
dec
xor
sbb
mov
mov
pop
sub
decl
lahf
rorl
jmp
sti
stc
repnz
xor
orl
jmp
jmp
pop
mull
stos
add
push
shl
iret
fstpl
xchg
push
xchg
push
mul
in
lods
push
and
ret
ja
mov
xor
sahf
cwtl
mov
sbb
add
notb
jnp
mov
pusha
jno
test
clc
lods
inc
push
leave
jecxz
cmpsb
mov
aad
inc
xor
lds
xchg
cmp
pop
cli
ret
insb
jne
lock
shll
fildll
pusha
or
mov
imul
push
aaa
leave
enter
pop
and
cmpsl
sbb
sbb
and
sbb
jg
inc
pusha
jns
cmp
cmpsb
jb
js
out
xchg
pop
stos
mov
dec
add
loope
ljmp
inc
dec
out
cmp
jnp
dec
sbb
ficomps
pop
jno
in
call
andb
add
sbb
xor
pusha
movsl
addr16
ss
pop
mov
fbld
inc
aaa
fld
jecxz
or
jo
xor
mov
jne
pop
pop
jae
add
mov
xchg
cmpsl
adc
ljmpw
test
mov
pop
xor
sub
outsb
jbe
and
xchg
sbb
int
sti
push
in
push
push
adc
stc
jae
stos
add
or
out
and
repnz
clc
xor
into
sbb
mov
xchg
dec
out
push
mov
jmp
jnp
and
inc
mov
xchg
into
adc
iret
mov
or
dec
xor
sbb
sbb
nop
outsb
xchg
cmp
fwait
cmpsb
or
jb
flds
ret
or
fsubrl
ja
ss
mov
nop
dec
sub
mov
orl
nop
insb
jb
into
fldt
cmp
rolb
pop
je
sti
ljmp
inc
js
mov
mov
mov
and
rolb
and
test
std
addr16
sub
jge
and
scas
pop
lds
cltd
subl
shlb
fdivrs
mov
pop
cwtl
jb
sbb
mov
cmp
aas
push
mov
lea
dec
jmp
jnp
test
cltd
mov
fadds
movsb
and
pop
aas
sub
sti
stc
out
mulb
jne
mov
sbb
pop
fstl
mov
mov
scas
pop
dec
in
dec
outsl
stc
add
sub
outsl
cmp
xchg
or
push
out
xor
sbb
mov
add
ja
out
sbb
jecxz
or
stos
in
xchg
cmp
cmp
dec
push
xorb
push
lcall
clc
divl
aaa
xchg
aad
stos
es
cmp
xchg
inc
jns
fs
push
mov
sti
shlb
pop
ret
insb
sbb
mov
mov
xor
cmp
add
push
mov
fs
mov
mov
bound
subb
out
or
insb
sub
add
inc
out
decl
pushf
and
push
jmp
mov
cltd
sbb
test
addl
movsl
icebp
lods
push
or
stos
pop
aaa
jecxz
lret
cli
outsl
in
pop
iret
mov
push
outsl
pop
or
jmp
js
mov
dec
insl
shlb
xchg
aad
mov
mov
into
call
and
cli
jae
add
lods
sbb
and
jp
cwtl
mov
lahf
adc
out
xchg
cmp
mov
pop
movsb
mov
add
pop
popa
mov
sbb
out
jg
sub
stos
adc
mov
push
jp
jp
outsb
or
enter
mov
or
xor
aam
mov
repnz
lods
je
stos
push
xchg
insb
data16
sub
popf
inc
scas
dec
push
enter
js
imul
and
push
filds
pop
mov
lods
xchg
mov
xchg
lods
jg
ror
push
test
mov
mov
sbb
mov
fs
cltd
sbb
adc
fs
aam
cmc
lret
inc
call
adc
mov
addr16
addb
mov
data16
xchg
je
filds
js
movsb
mov
jb
sbb
xor
loope
pushf
mov
pop
xchg
dec
rorb
jge
cmp
roll
lock
ret
pop
loop
int
pop
mov
mov
xor
pop
jne
or
dec
and
inc
mov
frstor
push
jb
pop
or
and
aad
jmp
outsb
dec
sti
mov
xchg
mov
mov
dec
pushf
sbb
xchg
cld
pop
sbb
pop
loope
inc
out
push
and
icebp
out
push
cltd
mov
cli
test
inc
sbb
inc
pop
rclb
cli
ss
imull
mov
add
sub
fistl
sbb
mov
pop
and
lret
dec
jnp
inc
sub
scas
cmc
jbe
or
lret
cmpsl
or
pop
inc
xchg
mov
sahf
nop
and
xor
dec
out
nop
sti
fisttpl
mov
loopne
push
and
nop
popf
lahf
lods
xor
jnp
gs
push
mov
and
aam
push
mov
in
mov
out
sbb
jmp
in
xor
in
inc
sub
sub
popa
push
mov
call
hlt
stc
and
out
push
mov
fisubs
or
mov
xchg
push
fcmovb
inc
cmp
jecxz
test
adcb
jmp
xchg
shrd
pextrw
cmp
mov
les
cmp
aaa
popf
adc
into
push
dec
cld
push
mov
leave
mov
cmpsl
inc
popf
jbe
adc
inc
stos
inc
dec
cmpsl
nop
mov
jns
mov
cmpsl
mov
imull
adc
xor
out
mov
dec
pusha
pop
inc
jns
hlt
jl,pt
in
adc
es
aam
xchg
adc
or
mov
shrl
aas
ret
insl
in
shr
jae
std
in
hlt
ret
and
rcl
popa
iret
cmp
mov
lahf
jle
and
adc
scas
pop
mov
adc
xchg
adc
in
popa
cwtl
mov
popf
add
cmp
int
pop
popf
repz
mov
jg
jbe
adc
or
je
jecxz
adc
daa
out
xchg
leave
sub
jl,pt
or
in
xchg
pop
ljmp
das
sbb
jmp
lret
mov
jnp
mov
test
pop
pop
aad
jg
hlt
pop
dec
mov
mov
pop
hlt
mov
pusha
xchg
loop
stos
mov
loopne
xchg
mov
mov
enter
lock
lret
cwtl
mov
xlat
xor
mov
sarl
outsb
fwait
imulb
mov
sbb
sbb
movsl
in
imul
push
lods
push
fldenv
adcl
pop
gs
add
cmc
add
negl
push
ret
xchg
xchg
adc
and
outsl
lds
mov
jnp
in
jnp
and
js
push
mov
xor
jo
fucomi
pop
or
fcomps
mov
adc
push
xchg
xchg
cmp
mov
cs
cmp
and
lods
jmp
lods
mov
data16
adc
lock
sbb
jle
jb
mov
mov
jmp
xor
maxps
mov
xor
cld
call
or
jns
jmp
dec
lret
loope
imul
xchg
add
jge
std
sahf
hlt
in
push
xor
lcall
sbb
xchg
aad
push
xchg
dec
daa
push
std
setb
arpl
pop
mov
sahf
push
ja
rorl
push
es
jecxz
mov
fwait
out
test
adc
push
mov
jmp
pop
clc
pop
sub
dec
out
addr16
mov
inc
xor
add
sub
lock
push
loopne
loopne
push
mov
aas
jge
and
pop
add
mov
inc
xchg
add
push
jp
xchg
sub
push
push
movsl
mov
fists
arpl
jge
dec
das
jge
lock
pop
iret
mov
adc
mov
popf
and
mov
xchg
push
test
scas
dec
je
lea
adc
mov
in
push
jge
test
les
sbb
mov
sub
push
imul
xchg
mov
fistps
daa
cmp
mov
push
sbb
mov
ss
cli
push
sub
or
push
mov
and
push
adc
lahf
outsl
adcl
cmpsl
insb
popf
call
mov
cmp
sub
fucom
mov
push
sbb
lock
sub
or
jle
xchg
das
sub
or
sbb
subb
int3
lret
scas
lds
sub
jnp
push
outsl
ror
adc
call
push
into
arpl
mov
and
in
and
mov
dec
loope
jp
nop
je
je
mov
adc
cmp
add
mov
add
jne
pop
inc
push
into
pop
shlb
repnz
ss
xor
push
xchg
mov
movsb
jno
aam
xchg
mov
adc
adc
mov
fmull
cli
and
and
mov
push
pusha
push
popa
jne
test
daa
pop
xchg
fnstenv
pop
fs
ss
sbbb
pop
xchg
je
mov
sbb
hlt
addr16
mov
jns
mov
sub
sbb
inc
mov
sar
push
pop
jmp
fsubl
scas
ljmp
lret
dec
xor
jb
lcall
jne
fiaddl
fnstcw
ja
mov
or
scas
aam
test
in
pop
pop
aaa
cmp
mov
gs
push
nop
outsl
ret
push
mov
test
pusha
add
inc
add
imul
cmp
test
orb
sub
adc
dec
adc
or
cmp
adc
dec
pop
cmp
inc
sti
mov
unpcklps
arpl
lds
mov
mov
pop
scas
and
jg
fiadds
mov
fisubl
daa
stos
cmp
lret
dec
add
aam
cmpsb
jmp
inc
adc
sub
sub
xchg
mov
lods
scas
push
icebp
lret
mov
out
add
mov
test
adc
inc
push
push
notl
movsl
xor
inc
pop
or
sub
or
sbbb
cmp
loopne
and
xchg
mov
inc
xor
movl
sbbb
les
in
gs
bound
mov
cmc
push
cmpsb
aad
xor
cmp
inc
ja
mov
dec
fldcw
dec
mov
inc
sub
stc
adc
push
sbb
xchg
stos
push
lock
stc
xlat
mov
and
andl
inc
pop
mov
jb
sbb
and
add
mov
hlt
pop
cwtl
cmpsb
and
jns
sbb
adcb
shlb
mov
mov
fcomps
and
testb
icebp
fstpt
push
mov
out
inc
inc
lods
and
fwait
ljmp
inc
xchg
xchg
std
add
test
lds
aas
push
cld
mov
mov
iret
xchg
or
arpl
insl
mov
xchg
pop
pop
and
aaa
jle
and
jne
sub
int3
faddl
lahf
sub
dec
mov
cmp
mov
lods
jb
movsl
pushl
jne
jo
popa
scas
fisttpll
xchg
lea
scas
je
outsb
mov
filds
cwtl
ljmp
xor
or
fwait
xchg
es
fldenv
sahf
fisttps
push
mov
idivl
in
pop
mov
stos
cmpsb
stos
add
stc
mov
xchg
adc
sub
jo
out
in
repz
adc
cmp
lcall
or
lock
mov
in
xchg
icebp
scas
mov
shrl
fcmove
mov
clc
xchg
stos
jne
dec
jns
call
js
mov
pop
in
clc
or
in
pop
mov
pushf
aaa
leave
jbe
clc
pushl
rol
adc
movsb
adcb
icebp
pop
mov
insl
sbb
mov
inc
flds
subps
jae
sbb
cwtl
and
dec
test
and
lods
sub
push
fwait
or
fldt
mov
push
movsl
inc
clc
lods
jo
jmp
pop
fucomip
mov
cli
xchg
scas
data16
std
dec
push
inc
adcl
mov
mov
adc
add
sbb
push
mov
xor
dec
mov
and
daa
xchg
and
leave
fdivp
enter
test
stos
mov
mov
mov
clc
pop
scas
jb
testl
fwait
jne
and
pop
inc
outsb
add
mov
imul
aad
xorl
scas
scas
adc
sub
stos
in
mov
nop
pop
jp
loope
aam
adcl
or
mov
xlat
lea
push
mov
test
xchg
push
lret
adc
incl
popa
bound
enter
cld
test
mov
xchg
addr16
cld
xor
popf
inc
leave
aaa
push
aad
cmpsb
sbb
or
push
cs
ret
fcmovne
sub
xchg
sub
inc
dec
push
out
mov
inc
movsb
imul
and
inc
fbld
lods
sbb
adc
xchg
jg
jnp
daa
psllw
mov
mov
insl
hlt
sbb
pusha
and
sub
scas
mov
sub
xchg
xchg
xor
stos
mov
pop
out
out
adc
push
cs
jle
mov
xchg
gs
sub
hlt
or
xlat
sti
pop
sub
jo
aad
sbb
push
aad
adc
sub
sbb
xchg
cmpsl
rcl
in
leave
push
and
scas
jae
pusha
xor
fs
dec
mov
push
shl
ret
rol
repnz
mul
mov
mov
cmp
movsl
ja
into
xor
jb
mov
mov
or
mov
jecxz
fisubrs
call
shrb
mov
jbe
ss
sub
and
aad
mov
cmpsl
aaa
fwait
in
movsb
xor
add
sub
lcall
sarl
pop
shll
cmc
gs
cmpsl
in
pop
mov
nop
mov
xchg
test
push
push
ds
push
mov
leave
mov
xlat
aad
pop
or
stos
push
jl
xchg
mov
in
xchg
ss
fwait
scas
loop
sub
pop
adc
jno
rcll
jmp
or
dec
pushf
pop
shlb
data16
lret
ss
adc
mov
iret
mov
xchg
mov
jne
sbb
ss
pop
xchg
sub
data16
sub
inc
loop
lcall
jns
roll
pop
nop
lret
and
in
and
sub
in
fcoml
mov
out
sbb
int
rolb
xor
repz
jo
das
lahf
xor
lret
cmp
sarl
pcmpeqd
cmp
repz
sbb
sub
js
jl
es
mov
es
add
mov
popf
sbb
mov
push
sarb
cltd
mov
lock
pop
in
mov
clc
push
jo
push
shlb
lret
movsl
cltd
mov
and
mov
pop
or
icebp
adc
mov
cld
call
inc
mov
nop
shl
mov
push
mov
mov
sub
sub
mov
sub
imul
test
and
push
pop
push
xchg
cs
xor
sahf
sub
mov
push
stos
fsubr
sti
rolb
sbb
xchg
scas
test
nop
jmp
test
mov
mov
rcl
incl
out
aam
xchg
fdivrl
xchg
into
adc
sub
and
push
jg
out
enter
inc
fnsave
mov
imul
rorb
jle
sti
push
sub
in
or
pushf
daa
or
jne
push
test
and
mov
xchg
mov
pusha
nop
lret
jecxz
mov
test
pushf
insl
cwtl
inc
popa
xor
