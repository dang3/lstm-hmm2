sbb
add
mov
xchg
dec
jl
lods
sbbb
mov
jnp
out
xor
xor
mov
stos
xor
movups
adc
mov
mov
mov
pop
cmp
mov
push
repz
fldl
sub
daa
sub
sub
scas
or
inc
mov
or
cmpsl
adcb
sub
subl
and
or
jae
mov
out
mov
loope
xchg
jge
ja
fdivrl
out
sub
mov
xor
mov
add
add
pushf
out
dec
jge
inc
sbb
lea
test
fisubrl
lock
mov
adc
in
arpl
shll
pop
push
xchg
jg
mov
ljmp
jo
es
lahf
cmc
mov
out
inc
dec
inc
jge
fiaddl
xor
stos
inc
fwait
xor
mov
sub
mov
clc
inc
xchg
pop
pop
pop
iret
lock
stos
pop
mov
imul
jae
lret
rorl
mov
push
pop
mov
inc
rorb
adc
shrb
out
leave
mov
mull
pop
cmp
pop
sub
add
dec
loope
pop
adc
xchg
dec
jl
inc
inc
test
andl
cmp
rcrl
pusha
fbld
call
cmpb
xchg
mull
gs
push
adc
sub
lock
rcll
push
rorb
jno
punpcklbw
push
arpl
jne
outsb
or
mov
test
mov
addb
add
jmp
fdivrs
xchg
and
xchg
test
add
es
lds
push
nop
pop
cs
mov
outsl
addr16
into
cmp
out
inc
xlat
cltd
mov
icebp
mov
mov
aaa
daa
into
dec
das
inc
and
data16
nop
fistpll
sar
cli
gs
lret
jbe
adc
add
sub
lea
lret
adc
lret
push
jg
lods
dec
push
lcall
inc
out
and
pushf
xchg
sbb
scas
in
and
gs
fsubrl
mov
jo
ret
cmp
jne
xor
ljmp
stos
inc
mov
adc
fcompl
jae
mov
aaa
fmul
inc
cli
dec
imul
scas
xor
into
stos
mov
in
fildll
data16
call
dec
insl
aad
mov
jmp
add
loope
inc
pavgb
push
lahf
daa
fiaddl
cwtl
daa
test
and
sub
dec
sbbb
sub
fisubl
inc
jge
add
in
add
lods
add
xchg
inc
pop
inc
call
mov
pusha
loopne
orb
fnstenv
gs
adc
mov
subb
mov
add
jnp
inc
aad
xchg
repz
xchg
cmp
or
imulb
dec
adc
jl
and
dec
push
insl
aaa
sub
test
dec
mov
adc
roll
cltd
ljmp
push
insl
ret
aad
pop
pop
jne
imul
inc
in
xlat
cwtl
jmp
jae
mov
xor
dec
pop
bound
js
pop
xchg
je
aaa
bound
lret
or
add
pop
jno
scas
mov
mov
cld
movsb
fs
lahf
out
sub
xor
or
js
inc
adc
std
push
mov
sub
mov
jae
lea
and
into
lret
lods
je
mov
testb
imul
mov
hlt
cmp
lcall
jmp
gs
popf
adc
ljmp
cmpsb
icebp
into
sar
int3
jnp
xor
jo
lret
jbe
mov
aas
mov
lea
mov
imul
cld
jp
mov
jae
mov
xchg
add
call
lret
in
loopne
fwait
mov
mov
sbb
movsl
jmp
xchg
mov
dec
js
fsubrs
inc
adc
and
xchg
mov
adc
inc
pop
pushaw
js
push
fidivs
push
mov
or
pminub
mov
mov
mov
rolb
jae
mov
mov
lds
test
inc
push
jno
cwtl
lcall
inc
mov
mov
xor
mov
push
rorl
fsubr
imul
imul
fildll
hlt
sbb
xor
or
in
fisubrl
fcmove
xchg
leave
std
fmul
fmul
popa
mov
fldl
fisttps
daa
in
push
aam
std
xchg
mulb
mov
lret
outsl
dec
xchg
ret
mov
adc
mov
or
call
divb
xor
bound
movl
jl
xchg
nop
bnd
outsl
push
repz
fwait
push
lret
jge
popf
ret
bound
adc
dec
ret
pop
sbbb
dec
mov
adc
jmp
sub
clc
imul
inc
std
jl
divb
test
pushf
rorb
stos
lahf
adc
add
stos
fidivrs
inc
push
and
sbb
aad
jo
adc
into
pushf
push
mov
scas
sub
mov
mov
into
xchg
in
lods
jge
scas
push
or
aas
scas
imul
mov
jge
in
jp
xor
mov
mov
push
sbb
stc
mov
leave
push
pusha
fs
in
lret
in
insb
fwait
cmp
jge
sub
jg
jb
fwait
inc
pop
inc
scas
push
pop
movsl
xor
push
xorl
scas
out
loop
jle
cli
ret
sarb
scas
loop
lahf
jmp
imul
cwtl
sub
and
loope
push
mov
xchg
mov
adc
mov
add
mov
pop
push
sbb
scas
sbb
fdivrp
jae
push
outsb
mov
les
sbb
cmc
or
mov
xchg
or
lods
test
cld
mov
inc
enter
lret
out
aaa
rcrl
adc
cli
mov
xchg
out
and
call
jbe
jae
icebp
sub
cs
xchg
lock
out
imul
xor
es
fnsave
inc
movsb
pop
and
lods
in
std
int3
pop
out
dec
inc
mov
jg
pop
int
fwait
fs
and
sbb
mov
inc
pop
fnstenv
fadds
into
inc
sbb
ds
mov
in
dec
cmp
add
lods
sub
jb
push
mov
cmp
ja
dec
rcll
mov
adc
outsl
push
icebp
sub
and
test
fmull
inc
out
fs
jecxz
and
rcr
and
in
movsb
daa
jecxz
pushf
arpl
jae
icebp
and
pop
loopne
adc
ljmp
sbb
dec
dec
push
mov
shlb
mov
fadds
adc
jp
add
or
inc
mov
gs
or
adc
test
loop
in
push
or
mov
or
mov
ret
fsubrl
mov
add
mov
push
mov
addr16
mov
jecxz
cmp
ds
arpl
add
pop
imul
pop
rol
cld
sub
pop
mov
bound
mov
lahf
cmp
test
jnp
test
xorb
adc
jmp
ret
and
out
test
sbb
sub
dec
mull
cld
dec
fsubrl
xchg
cltd
loopne
xor
and
mov
gs
xchg
jg
mov
aaa
push
in
loop
cli
jo
shlb
dec
inc
pop
scas
lods
xchg
mull
cltd
adc
sbb
neg
scas
jl
int3
mov
xchg
lds
icebp
jb
fldenv
fidivl
and
pop
in
sub
xor
and
jb
aas
bound
es
sub
mov
cmpsl
mov
lock
addw
push
cmpsb
je
in
and
mov
lea
add
lds
jno
dec
popf
mov
or
fisubrl
clc
out
scas
jno
add
popf
lods
dec
repz
dec
cmp
mov
sbb
stos
push
or
scas
insl
xchg
loopne
fsub
lea
jns
adc
xor
orl
mov
jno
leave
in
adc
sub
cmovge
or
cmpsb
push
stos
inc
call
fdivrs
mov
mov
mov
stos
or
ret
push
fisubs
xchg
insb
daa
mov
shlb
xchg
aam
sub
lcall
adc
mov
sbb
daa
jnp
lahf
or
fwait
je
in
inc
pop
nop
sbb
pusha
xchg
pop
cmpsl
outsb
in
mov
xchg
int3
mov
out
loope
ficoms
lcall
push
dec
fsubrs
or
cmpsl
test
insl
sbb
andl
jge
ss
scas
xor
jmp
out
xor
fmulp
cmp
incl
inc
push
mov
cltd
and
ret
mov
cmp
bswap
stc
jmp
mov
ja
leave
push
pop
sbb
int
inc
adc
lahf
mov
cmp
jmp
adc
cmpsb
and
ss
lahf
int
adc
mov
xor
sahf
aam
addl
fdivl
ja
sub
lcall
add
into
test
iret
adc
cmp
mov
jl
or
sbb
scas
mov
mov
dec
dec
or
cld
fcoms
mov
leave
adc
cmp
jl
and
mov
dec
ds
pop
mov
aaa
and
adc
or
inc
adc
xchg
dec
inc
inc
inc
adc
pop
jmp
mov
mov
popa
mov
xor
ret
fisttpl
xchg
nop
pop
movb
enter
stos
lret
sub
cwtl
in
jmp
mov
pop
sub
insl
aas
push
and
jnp
sub
jecxz
dec
push
dec
xlat
sti
fistpl
and
mov
pop
div
aam
sbb
xor
aaa
add
and
add
addr16
jo
mov
filds
out
sarb
lea
mov
mov
aaa
push
mov
dec
daa
mov
mov
fiaddl
xchg
imul
push
int3
cmp
cmp
mov
cwtl
out
in
mov
shlb
movsb
out
xor
test
fbld
andb
add
inc
out
sub
pop
movsl
mov
aas
in
xchg
sbb
jmp
stc
sbb
pop
sahf
fistl
xor
mov
icebp
int3
outsb
push
imull
push
mov
andl
jae
sbb
outsb
push
dec
mov
in
and
fwait
sbb
add
jl
ret
or
into
push
aaa
int
sub
cmp
mov
mov
lahf
leave
lret
stc
mov
into
mov
test
fmull
pop
movb
mov
sbb
bound
outsl
popf
lret
inc
add
or
iret
loop
inc
push
lcall
xchg
push
or
jp
mov
adc
jne
mov
stos
lds
mov
or
stos
outsb
lods
mov
push
ds
jge
lock
xchg
lcall
xor
push
iret
call
jge
fimuls
inc
or
enter
call
iret
mov
out
jmp
mov
jl
pop
popa
push
xor
loope
pop
sub
or
pop
lcall
jo
xor
or
inc
dec
mov
out
pop
sahf
mov
mov
shrl
repz
adc
mov
sub
in
jmp
cmpsb
lea
or
movsl
and
push
icebp
mov
enter
ljmp
xor
nop
adc
mov
ss
fsubr
mov
inc
mov
dec
movsb
xor
dec
js
push
hlt
iret
pop
mov
mov
adc
fs
push
jmp
scas
scas
das
pop
ja
addr16
sbb
jecxz
pop
mov
sub
jge
inc
pop
jno
call
mov
and
test
sub
xor
insl
test
mov
fnstsw
les
and
cltd
loopne
fld
mov
sarb
cmp
mov
cwtl
pusha
and
push
negb
orl
mov
inc
push
popa
stos
xor
lcall
mov
add
and
sbb
rol
mov
clc
insl
xchg
dec
aas
mov
add
cs
xor
add
ss
gs
movntps
pop
mov
jp
lret
mov
rorb
movsb
jo
dec
gs
leave
xchg
aam
cli
mov
insl
mov
in
push
sub
in
cmpl
lods
jmp
push
jecxz
into
clc
pop
jp
dec
cmp
dec
imul
cmp
xchg
andl
mov
out
insb
inc
dec
xchg
mov
push
inc
xchg
ljmp
cld
rcrl
or
lds
cld
cmp
adc
adc
add
leave
mov
jb
cli
std
ds
in
ret
sbb
cmp
cmpsb
push
mov
sub
sbb
push
popa
nop
aaa
pop
xor
pop
pop
and
xchg
or
addr16
test
out
jg
imul
in
clc
outsl
repz
or
mov
and
lcall
mov
jnp
inc
dec
push
pop
xor
jg
out
and
or
jne
rcr
arpl
popf
sbb
inc
sub
add
and
nop
dec
stos
pop
aad
xor
cli
fdivl
mov
negl
fldenv
int
push
sub
and
incl
xchg
pop
jae
xchg
dec
push
and
mov
or
aaa
and
stos
rolb
rol
jl,pt
aad
sub
or
jle
in
data16
jae
popf
pop
jno
andb
push
mov
jmp
ret
cli
push
sub
adc
pop
rcrb
ret
or
jae
cli
ficoml
sub
push
pusha
mov
xor
adcb
pop
mov
hlt
insb
les
les
mov
push
imul
push
or
push
pop
aas
rcr
imul
xor
sbb
ret
mov
add
and
adc
or
jl
or
fstps
inc
dec
ja
mov
fnstsw
mov
cmp
push
push
cmc
notl
fisubrl
fadds
gs
jl
sbb
dec
shlb
nop
in
in
cmp
mov
movsb
stc
dec
or
outsl
das
sub
sbb
lods
sub
jo
mov
xlat
in
lea
mov
in
mov
sbb
push
mov
pop
pop
aad
xor
js
loop
in
dec
cmp
push
rcll
scas
cmpsl
jle
mov
mov
addr16
mov
mov
xor
nop
jge
arpl
scas
call
frstor
push
mov
mov
pop
mov
sbb
xor
sbb
and
cmc
cmc
or
xchg
enter
inc
cs
mov
dec
cmp
xchg
mov
push
sbb
push
pop
jae
sahf
pop
popa
push
mov
pop
inc
mov
dec
mov
dec
dec
cmp
insb
test
sbb
lds
xor
in
call
icebp
arpl
jle
sbbl
xor
dec
cmp
mov
adc
dec
jbe
adcl
fists
cltd
fldl
in
test
loopne
jnp
push
xchg
js
jge
in
jno
cs
mov
ror
mov
out
idivl
inc
sbb
test
mov
mov
pop
or
shl
mov
mov
pop
push
out
xor
mov
insb
lock
push
xchg
dec
mov
shrb
xlat
cmp
stos
movsl
loopne
outsl
or
in
mov
movb
in
sub
arpl
sub
sahf
mov
sub
push
push
mov
jp
test
jl
push
jnp
mov
pop
add
sbb
pop
push
mov
cmpl
sub
mov
pop
int3
dec
jl
andl
sbb
jecxz,pn
or
ljmp
in
cmp
mov
xor
pop
add
jl
arpl
iret
mov
xchg
sub
dec
mov
out
sub
in
pop
sbb
movsl
mov
push
pop
jbe
push
pop
mov
add
popa
int
sub
pushf
xor
adcb
mov
je
lods
pusha
mov
sbb
jb
incb
call
scas
scas
mov
or
out
js
rcll
mov
or
xchg
mov
enter
inc
lods
pop
xchg
shlb
mov
mov
mov
dec
cld
pop
int3
testl
pop
aas
loop
call
popf
outsb
imul
scas
cs
ret
fbstp
cld
mov
arpl
outsb
jnp
mov
dec
sub
cmpsl
dec
xor
cld
ret
sub
cli
fwait
test
rcll
daa
inc
adc
cltd
fiadds
mov
lods
enter
mov
and
pop
aam
in
ljmp
add
xchg
adc
pop
ficomps
inc
loop
adc
das
enter
jl
inc
sub
adcl
imul
addb
xor
xchg
aas
inc
out
outsb
lds
cmc
push
test
cmc
mov
loopne
mov
dec
call
and
jle
and
jnp
dec
mov
bound
dec
mov
add
cmp
dec
flds
dec
icebp
jnp
xchg
leave
xor
faddl
dec
out
cwtl
inc
add
ret
pop
jno
std
jl
ror
pop
clc
outsb
jbe
std
mov
fs
pop
xchg
lahf
imull
sbb
adc
and
test
inc
or
stc
pop
repnz
mov
aaa
mov
inc
add
push
decl
xor
outsl
test
or
gs
cmp
pop
movsl
jmp
sahf
pop
out
xchg
lods
test
cmp
sahf
push
and
gs
fmulp
call
push
lock
scas
jmp
xchg
xchg
xchg
adc
mov
cmp
adc
and
jns
arpl
and
movsl
lock
adc
and
inc
push
sbb
xor
jnp
lret
lahf
mov
pop
inc
xchg
mov
push
shll
jle
cmp
aam
mov
dec
sub
mov
lret
faddl
inc
adc
mov
ja
movsb
insb
rolb
scas
stos
out
inc
outsb
adc
ds
add
jmp
int
ja
cmp
ja
outsl
add
xchg
jmp
fwait
jp
fidivs
movsb
cmpl
push
cmp
mov
xor
push
test
push
repz
xchg
mov
call
bound
cltd
pusha
xor
subb
and
mov
fdivl
ret
mov
ja
cmp
icebp
or
pop
popf
daa
test
cmp
iret
and
pop
subps
fistpll
jl
cmpsl
rorb
mov
inc
jecxz
enter
cmpsb
notl
fldl
pop
fidivs
in
popf
jmp
pusha
cmpsl
dec
dec
jnp
jne
aad
mov
sbb
pop
or
pop
xchg
stc
xor
adc
fsubr
dec
repnz
dec
fistpl
add
div
int3
imul
push
jno
insl
cmpsb
aaa
lahf
lods
pop
shlb
dec
sbb
andb
aaa
inc
nop
jae
movsb
mov
dec
xchg
lret
movsl
test
ret
push
aaa
mov
shll
sbb
fucomip
and
xor
pushf
lcall
cmpb
scas
negb
orb
es
push
fnstenv
lahf
push
dec
nopl
sbb
popa
std
xchg
mov
outsb
sahf
push
bound
movsl
js
jb
nop
inc
stos
cmp
leave
ja
dec
add
scas
icebp
shlb
cmpsb
xchg
das
cld
movsl
dec
xchg
dec
adc
lds
dec
inc
shl
lret
cmp
push
dec
into
pop
xor
hlt
or
hlt
adc
cmp
lret
dec
push
cli
ss
sub
sbb
adc
inc
int
loopne
pop
add
notb
xor
xchg
sbb
push
push
cmc
xchg
cld
mov
cli
adc
call
xor
sahf
mov
pop
jle
add
daa
push
push
pop
out
mov
inc
call
in
add
sub
rclb
lock
in
movsb
andb
scas
hlt
test
xor
adc
xchg
imul
test
push
or
lahf
and
inc
stos
jnp
jbe
mov
loop
shlb
fildl
fistps
and
into
mov
xlat
lods
jg
notb
cltd
scas
or
jno
jae
or
mov
addr16
loope
jmp
mov
jne
fdiv
sbb
or
stc
icebp
mov
mov
test
insb
add
adc
fwait
in
inc
outsl
lods
aad
xchg
fisubrl
lret
mov
dec
imul
inc
es
xchg
xchg
cmpl
es
dec
lea
xchg
dec
add
fdivs
add
inc
or
sub
leave
xchg
pop
sbbl
shll
sarb
fmulp
je
pop
out
sbb
xchg
ds
pop
xor
mov
in
pop
sub
xchg
adc
in
mov
scas
movsb
bound
dec
jp
mov
xchg
xchg
mov
addr16
fstpt
fs
popa
push
and
dec
cmp
or
in
jno
add
insb
cmp
jl
dec
outsb
lods
xchg
js
enter
inc
mov
notl
xchg
xlat
add
xor
cmp
imul
rolb
movb
inc
daa
pop
push
xor
push
sub
lcall
jl
test
dec
xor
sbbl
aam
addl
enter
lock
ret
dec
stos
mov
pop
inc
je
mov
push
fwait
lret
lret
lret
lods
rcl
jecxz
xor
iret
inc
jae
cli
push
mov
xor
lods
addl
jo
push
xlat
sbb
inc
jecxz
clc
je
mov
jb
inc
mov
mov
lods
xor
mov
xor
clc
stc
fnstenv
cld
mov
and
add
cmp
dec
xchg
jo
insb
pop
pop
ljmp
mov
lods
sahf
pop
xorb
mov
lock
mov
jno
push
push
clc
lods
and
sub
mov
lahf
sbb
mov
dec
es
rcrl
fstps
insb
test
addl
sti
pusha
test
inc
test
add
outsl
dec
fdiv
pop
call
rorb
iret
xchg
add
mov
dec
mov
popf
cmp
shr
mull
adc
into
push
mov
cmpsb
lds
push
mov
je
icebp
fimuls
sti
pushf
xchg
cmp
jo
xor
cmpsb
js
xchg
jg
push
out
loopne
nop
jg
xor
scas
or
sub
xchg
jg
cmpsb
inc
jnp
rcrb
sub
pop
nop
cmp
rcrl
fdivl
xchg
data16
xlat
push
mov
cltd
roll
leave
and
push
or
xchg
push
ficoml
insb
add
arpl
mov
into
mov
pop
in
rcll
inc
xor
mov
das
setbe
cld
in
idiv
pop
cmpsl
shlw
jge
fstpl
cmp
iret
jmp
jle
or
leave
jne
push
aam
push
enter
fidivs
or
sbb
addr16
cmpsb
int
pop
adc
add
testl
dec
push
or
pusha
mov
int3
sub
je
mov
lds
arpl
ja,pt
cmp
loopne
inc
lods
hlt
test
lret
mov
dec
jbe
sbb
mov
and
mov
add
in
scas
aaa
jb
sbb
xor
arpl
pop
mov
cmp
adc
in
xor
and
cld
add
jns
dec
sub
stos
jne
leave
add
fcompl
notb
mov
sti
or
pop
sarb
test
mov
in
xchg
jno
sub
pushf
xchg
xor
inc
mov
and
xchg
pop
or
push
sub
popa
mov
incl
std
fsubrl
push
jo
inc
sbb
jge
mov
jge
test
imul
jns
inc
push
jae
cld
iret
popl
stc
xchg
sar
lahf
std
pop
aam
dec
mov
lret
test
fisubrs
mov
push
aas
jb
xlat
sbb
loope
jp
jmp
add
jns
fidivs
or
shr
pop
and
aas
popf
std
pushf
into
jmp
xor
je
int
push
jae
lds
in
sahf
cmp
sti
xor
cwtl
rorl
jo
jns
add
add
movsl
lods
subl
sahf
mov
daa
or
adc
into
push
or
mov
fcomps
int
sti
dec
sti
push
repz
mov
xor
mov
jp
das
or
fwait
mov
sar
push
mov
dec
mov
and
imul
mov
jmp
les
adc
adc
popa
adc
mov
ror
ljmp
in
ret
cmp
mov
mov
jecxz
cld
dec
sub
sbb
push
lods
or
bound
cwtl
sub
xchg
add
mov
mov
and
ss
in
fimuls
ss
lahf
cwtl
xorl
sub
or
push
mov
push
rcrl
in
into
push
stos
mov
or
bound
pop
mov
sbb
je
sbb
xor
ret
sbb
mov
les
mov
mov
jp
inc
xor
jno
sbb
mov
lock
negl
out
incb
mov
jne
pop
imul
xchg
loop
inc
inc
and
jo
iret
dec
fcomps
repz
inc
cmp
mov
test
and
scas
mov
movsl
jp
xor
cmc
iret
in
out
cmp
xorb
cmpsb
sub
xor
cwtl
cwtl
lds
push
and
loop
mov
add
fistpll
into
repnz
mov
and
cmp
mov
push
out
lret
fadd
lds
es
sub
xor
test
mov
dec
push
dec
push
repz
push
dec
pop
aas
pop
shrb
ljmp
test
inc
mov
adc
mov
cmc
mov
push
cltd
cmp
pop
inc
jno
sar
or
cltd
mov
aaa
and
adc
popl
rcl
lahf
inc
test
inc
cmp
or
xchg
inc
mov
incb
add
xchg
sahf
cmp
jmp
stos
addr16
iret
jg
iretw
fnstcw
std
sub
sarb
mov
out
xchg
xchg
mov
iret
jnp
pop
jecxz
das
jmp
sub
sbb
inc
jno
cwtl
stc
add
sub
ror
repnz
cmpsb
loope
mov
pop
add
pushf
add
fdiv
dec
addb
push
pop
sahf
ds
xchg
sub
stc
and
mov
jl
test
int3
arpl
scas
mov
mov
shll
dec
jmp
lock
mov
ljmp
mov
mov
or
inc
mov
jge
dec
cmpsl
test
jne
xchg
rcrb
pop
and
test
pop
icebp
push
movsb
pop
push
mov
push
mov
cli
aad
in
xor
imul
mov
outsl
cltd
popa
push
mov
inc
cld
loop
aas
adc
loopne
xchg
arpl
or
in
jae
inc
out
rcr
out
dec
pushf
pop
mov
cwtl
adc
or
xchg
and
sbb
inc
fst
fisubs
add
jmp
dec
add
jnp
add
dec
cmp
mov
push
or
push
xchg
jl
lds
out
pop
lds
movsb
push
mov
aas
mov
aam
sub
fxch
jg
dec
jle
add
loop
pop
xchg
enter
cmpps
mov
cmpb
xor
jno
or
push
std
jbe
popf
loopne
out
mov
mov
aad
xor
adc
lret
loope
faddp
add
out
mov
sahf
hlt
hlt
shrl
jae
jg
mov
mov
arpl
jb
in
insl
icebp
push
sarb
subb
inc
mov
cmp
mov
repnz
sub
adc
jnp
call
cld
stos
adc
test
pop
std
xor
mov
shrl
call
mov
and
fstpl
popf
xor
or
adc
sub
add
sbb
inc
inc
add
dec
or
push
mov
subb
dec
int3
insb
testb
loope
push
pop
daa
or
fnstenv
or
bound
jl
jl
xlat
movsb
mov
pop
ja
enter
lret
pop
mov
adc
xchg
js
jo
jecxz
leave
push
xchg
aam
add
inc
pop
jl
pop
and
loopne
or
cmp
pop
cmp
or
sub
inc
push
call
bound
orb
sub
sub
setg
scas
jne
iret
loop
xchg
or
pop
mov
xor
insb
repz
jo
popa
fs
or
ret
jb
imul
sbb
sub
pop
mov
push
scas
cli
addr16
roll
sbb
xor
out
ret
jmp
stos
imulb
sbb
in
lret
fdiv
repnz
jmp
inc
testb
addl
int
xor
cmp
stos
jno
es
in
xor
xchg
fdivrs
sub
icebp
lret
xor
mov
pop
mov
shlb
imul
jp
and
fstpt
std
sbbl
fidivs
jmp
mov
aam
rcrl
aam
cmp
loopne
sbb
adc
out
adc
movsb
cmp
or
cmp
mov
cmp
jno
clc
inc
inc
dec
outsb
push
cld
loope
xchg
out
cmpsl
lret
inc
push
sbb
push
ret
pusha
movsl
jne
mov
inc
sbb
jne
jb
mov
xchg
dec
addl
aas
adc
vhaddps
cmp
jg,pn
pop
cmc
jp
imul
sub
les
push
mov
nop
jge
dec
out
gs
scas
sub
push
sahf
cs
lcall
pop
popa
inc
fs
pop
xlat
adc
sbb
loop
aad
sbb
repz
push
push
inc
fs
jle
shlb
push
push
xor
ret
imul
shr
addr16
sbbl
lock
jbe
lcall
scas
xchg
jo
or
lods
adc
sub
lods
sbb
imul
inc
pusha
mov
loop
scas
imul
adc
iret
inc
fisttpll
xchg
xchg
lods
mov
shll
jg,pn
psrad
nop
mov
inc
jecxz
arpl
ds
add
outsl
rcll
xchg
ret
xchg
loopne
sbb
mov
aam
in
jmp
out
push
into
push
sub
xor
pop
pop
aas
lret
dec
cmc
stos
mov
test
clc
mov
nop
addr16
xlat
mov
jae
jmp
xchg
fbld
dec
loop
xchg
in
cs
fmuls
add
inc
push
push
or
roll
ss
outsl
mov
jmp
popf
adcb
test
mov
jb
jne
adc
dec
mov
sbb
jae
pop
sbb
sbb
sub
imul
fnsave
adc
sbb
or
adc
mov
and
mov
xchg
ficoml
jl
imul
mov
dec
mov
and
mov
cmp
or
or
in
int3
mov
mov
xchg
add
arpl
enter
cmc
pop
daa
mov
mov
popf
stos
mov
adc
cmc
sbb
les
stos
arpl
ret
jno
sbb
movsb
cmpsb
push
les
cmp
ret
xor
leave
hlt
cmc
in
scas
in
push
aad
out
loopne
or
pop
mov
out
stc
jbe
movsl
cmp
ss
jg
dec
sub
lret
iret
fdivrs
jp
jp
fisttps
mov
das
lds
pop
fadds
shl
loop
int
push
int
mov
rolb
insb
sarb
mulb
jg
lahf
sarl
cld
imul
jne
insl
lret
iret
subl
int
hlt
cmpsb
aad
aaa
test
mov
inc
jge
sub
sarb
cmp
jecxz
popa
idivl
leave
push
jmp
mov
lret
or
inc
popf
mov
inc
in
repz
lods
mov
es
inc
mov
inc
push
stos
ret
stc
fcmovb
and
mov
and
movsb
in
dec
mov
and
loopne
dec
inc
popa
mov
mull
dec
or
sub
shlb
mov
add
stos
push
lods
aas
jno
mov
pop
enter
pop
push
call
mov
add
jno
test
adc
sub
loope
dec
je
add
and
xchg
mov
adc
int3
ret
lds
sub
fmull
std
xchg
xchg
enter
xchg
dec
sub
sbb
xchg
jo
adc
lea
ret
sbb
sbb
sub
scas
xchg
and
stc
inc
jb
das
out
mov
loop
inc
xchg
push
scas
in
sub
cmp
es
xor
cwtl
aaa
cs
lods
aas
sub
popf
outsb
mov
adc
lcall
popf
jo
fwait
ds
mov
aas
push
push
cmp
orl
popa
stc
sub
sbb
cmp
loop
scas
mov
inc
inc
ljmp
cs
dec
mov
aam
and
inc
adcl
mov
out
imul
cmpsb
cmp
or
in
mov
bndldx
movsb
sub
in
adc
push
push
insl
ss
fldt
jmp
pop
push
cli
shll
ret
int3
pop
mov
cmpsb
out
bound
lret
orb
jae
add
outsb
sti
rcll
jns
mov
pop
mov
cltd
stos
or
mov
hlt
nop
out
adc
pop
xor
push
pop
lods
jle
adc
stc
in
lahf
loop
mull
sub
lods
in
cli
xchg
popf
mov
inc
xchg
xor
aaa
repnz
xor
aaa
dec
dec
mov
push
and
dec
push
jns
xor
mov
repnz
jl
mov
fcomip
xchg
inc
cs
xor
ret
cmpsb
xor
in
ja
cs
push
and
push
in
loope
data16
ds
dec
test
cld
pop
push
add
bnd
orb
addl
pop
js
lods
pop
jb
mov
xchg
mov
adc
and
push
loop
imul
test
fisttpll
mov
jne
and
inc
xor
cmp
fsts
cmp
pop
out
out
scas
push
in
out
icebp
jno
cmp
pop
repnz
out
repz
sub
dec
jae
sbb
mov
and
push
xchg
cld
scas
leave
shr
bnd
dec
sub
xor
mov
push
xchg
out
clc
outsl
fs
inc
cmp
out
add
push
mov
jno
pusha
jb
sbb
test
pop
in
xchg
jnp
faddl
fildl
int3
loop
fwait
cmp
xchg
cmc
cwtl
xor
outsl
in
rorb
inc
adc
shrb
dec
inc
inc
ljmp
pop
stos
out
sub
inc
ja
add
sbb
or
dec
ljmp
leave
mov
out
sub
jae
push
cmp
aas
leave
data16
mov
call
adcb
cmp
dec
jmp
std
or
mov
stos
in
arpl
rcrb
jb
xchg
aaa
mov
mov
ror
mov
faddp
dec
sarl
fucomp
or
jbe
shlb
push
pop
aaa
jno
call
ret
jns
addr16
pop
mov
jg
sbb
mov
xchg
lret
fildll
les
hlt
ljmp
sbb
fwait
shl
imul
xlat
arpl
xor
shlb
mov
data16
sub
ffreep
imul
lea
cli
lods
rol
adc
scas
dec
dec
pop
inc
add
lahf
and
inc
cmp
pusha
arpl
arpl
sbb
mov
insl
scas
leave
movsb
stos
xchg
out
push
fidivs
and
test
xchg
into
divl
les
sub
inc
scas
mov
push
and
int
pop
stos
push
xor
cwtl
cmpsb
ss
xlat
loop
cwtl
daa
cmpsb
cs
add
adc
cmpsl
inc
push
movl
clc
push
push
jge
pop
insb
ljmp
idivl
add
jne
rol
fs
rcr
fistl
mov
cmp
test
test
int
dec
sbb
std
rcll
ljmp
push
rcrl
or
out
ret
jecxz
ja
xchg
inc
das
mov
jne
jnp
inc
mov
outsb
test
sub
fstps
dec
pop
xchg
mov
arpl
outsl
sub
int
mov
or
sbbb
gs
jl
aad
mov
dec
xchg
stos
frstor
fwait
stc
add
or
mov
mov
pop
shll
jne
inc
jbe
mov
fdivrs
fcompl
into
in
dec
repz
imul
cmp
and
jb
jo
lods
pop
mov
inc
test
test
mov
jp
daa
filds
dec
dec
adc
mov
mov
leave
inc
ljmp
and
sbb
stos
xor
lods
dec
sub
mov
xor
mov
aas
scas
lret
push
rcrl
pop
push
sbb
enter
ficompl
and
scas
sub
push
shl
fldt
movsb
icebp
cmpsb
dec
adc
mov
dec
inc
into
loopne
add
loop
sub
int3
adc
cltd
vmwrite
xchg
test
imul
xchg
push
and
pop
or
xor
mov
or
push
aad
scas
mov
push
aam
mov
or
xchg
cmp
xchg
xor
call
insb
inc
or
ret
divl
je
pushf
dec
mov
inc
int
mov
xor
or
pop
adc
cmpsl
sbb
loope
movsb
xor
jmp
pop
sub
data16
xchg
jp
push
jmp
jecxz
jae
fdivp
sbb
jae
adc
cmp
inc
push
shlb
dec
cmp
xchg
mov
setns
jns
repnz
in
add
les
mov
daa
pop
sub
and
jmp
lods
sbb
and
aad
jle
lahf
out
xchg
mov
cmp
cmp
jno
mov
adc
lds
out
cmp
mov
ja
mov
sub
fistl
jbe
jne
jmp
in
jecxz
call
pop
rcr
addr16
pop
jle
jb
scas
out
xchg
xor
out
aam
and
and
push
js
rolb
gs
addl
and
in
scas
and
imul
clc
pop
push
je
js
xchg
subb
cmpsl
test
push
mov
jge
imul
pop
pop
cs
out
sub
aam
mov
xchg
mov
xlat
arpl
sarb
arpl
jnp
jns
stc
test
call
mov
cwtl
leave
push
jnp
sub
inc
je
dec
sbb
mov
inc
notl
fdivrl
arpl
mov
mov
outsl
sbb
stos
les
stos
clc
adc
pop
mov
pop
or
aaa
adc
xchg
cmpsb
negl
mov
roll
pop
fwait
into
xor
jno
popf
repz
lds
call
mov
mov
inc
ds
mov
add
mov
pop
adc
int3
sbb
pop
rcll
push
inc
and
dec
nop
clc
cld
dec
ror
movsl
adc
or
movsl
ficoms
test
xchg
push
inc
jne
jl
xchg
jcxz
pop
fdivrs
aam
xor
inc
push
inc
fsts
imul
ss
add
mov
mov
std
push
sub
in
jae
xor
lahf
gs
icebp
mov
pop
iret
add
pop
push
xchg
or
xchg
into
call
xlat
pop
scas
sarl
mov
scas
lret
lods
aad
and
sub
orl
fisubrs
imul
outsl
mov
loopne
lds
lock
sbb
mov
test
loope
push
int3
inc
test
dec
enter
mov
in
movsl
push
xchg
call
mov
rolb
popf
insb
daa
ja,pn
ljmp
cmp
cmp
sbb
fldl2e
pop
xchg
inc
out
pusha
sub
test
pop
add
arpl
pop
sbb
bnd
test
jge
pop
ss
and
fisubrs
out
mov
movsb
sub
or
xchg
mov
sub
dec
fbld
xchg
xor
lods
xor
rorl
idivl
xchg
fnsave
sub
adcb
cmp
nop
push
pop
jl
into
lds
adc
inc
sub
cli
xchg
lcall
imul
cmp
in
lret
pop
xor
iret
xchg
scas
ss
shrb
shll
icebp
push
pusha
sbbb
cmc
sti
dec
ret
push
adc
dec
push
fnstcw
sbb
mov
ficompl
ljmp
add
pusha
mov
xchg
pushf
jl
xor
hlt
dec
dec
dec
push
xchg
adc
pop
or
xchg
push
mov
cmpb
jno
data16
inc
in
xor
sbb
aas
push
mov
ret
dec
arpl
add
pop
xchg
pop
ret
jge
and
or
sbb
scas
mov
cmp
xchg
push
pop
pop
cltd
fsubl
inc
or
mov
mov
jge
cltd
fisttps
mov
ljmp
or
dec
mov
popf
pop
xor
mov
ficoms
lds
orl
lahf
push
pop
adc
jbe
stos
dec
jne
jecxz
ret
xor
jne
imul
aad
push
push
pusha
shrl
int
andl
and
mov
pop
add
and
or
leave
mov
scas
popf
shr
xor
gs
enter
inc
pop
lea
jb
out
push
lods
push
mov
add
mov
sbb
sbb
pop
xor
inc
int3
mov
mov
inc
out
filds
pop
dec
ja
ret
lods
sub
popf
je
cmc
cmp
loop
lret
imul
add
jmp
ss
cmp
cmc
fistps
int3
cmc
and
insl
das
hlt
scas
test
push
mov
mov
mov
jo
in
repnz
mov
insb
sub
js
mov
mov
mov
shrb
mov
movsb
xchg
xor
and
ret
lea
fmull
dec
arpl
xchg
jl
mov
cmp
lret
mov
daa
jmp
cmp
stos
adcb
notb
inc
xor
lcall
add
lods
xor
cmp
lcall
adc
mov
insb
stos
aas
dec
cmp
in
rclb
dec
out
xchg
in
sub
aad
dec
sbb
dec
test
iret
xchg
and
mov
loop
addl
movsl
mov
enter
and
mov
sbb
sbb
call
flds
fs
pop
cmc
les
sub
xor
jle
fnsave
mov
test
jmp
int
xchg
xchg
cltd
cmp
cmpsb
xchg
push
adc
sbb
adc
js
and
xchg
push
sub
fstl
mov
ret
out
dec
adc
or
ret
jmp
and
subl
movsl
adc
pop
icebp
or
dec
mov
adc
jbe
hlt
testb
mov
in
pop
or
movsl
and
and
push
shl
inc
cltd
das
inc
pop
hlt
insb
lcall
mov
mov
dec
mov
add
pop
cmp
outsb
sti
push
jl
xchg
pop
cli
mov
cmpl
in
cltd
rol
ffree
out
mov
test
out
lcall
pop
xlat
dec
cmp
sarb
jne
push
rcrl
and
jg
jns
sub
add
mov
in
in
cmp
je
cmp
roll
add
jecxz
cld
mov
scas
or
test
int3
call
ja
cltd
mov
ja
inc
pop
out
stos
cs
les
cltd
jl
roll
adc
out
shlb
lods
inc
lret
jbe
mov
sarl
inc
sub
xchg
in
aam
inc
leave
popf
mov
pushf
ja
out
push
int3
jne
rorl
test
idivl
sub
fstl
out
and
cmpsb
imul
adc
sbb
mov
arpl
xchg
mov
lods
ja
mov
dec
sbb
xchg
pop
cli
jmp
loope
jle
pop
aaa
mov
cmpsl
in
xor
icebp
dec
loop
push
addr16
sbb
mov
mov
loope
rclb
pop
iretw
push
push
cwtl
push
push
mov
lahf
jle
jecxz
in
xchg
push
lea
sub
ret
shr
pop
sub
ljmp
mov
push
cld
pop
sub
test
bnd
test
and
xchg
lahf
std
mov
imul
icebp
pop
mov
in
push
mov
mov
lret
jno
xor
push
xchg
push
ja
repnz
sti
adc
mov
imul
xchg
ret
pop
shlb
lods
push
sub
fsub
push
and
sahf
sbb
jmp
jl
jmp
popa
sub
cmpsb
pop
jbe
and
jns
into
cld
or
popa
pushf
scas
mov
and
push
test
xor
jo
xor
fisubs
sahf
pop
sti
xor
stos
push
call
ret
pop
or
push
cwtl
add
push
shll
mov
xchg
mov
mov
dec
jbe
or
ds
popf
xorb
cli
bound
daa
fdivrl
adc
incl
push
lret
cmpl
sbb
mov
out
int
call
lret
mov
jb
sub
andnps
xchg
js
testb
push
push
fs
pushf
and
jns
in
push
jle
gs
push
jle
pop
addr16
aas
inc
mov
or
or
mov
mov
rolb
xor
adc
repz
and
fs
pop
scas
dec
in
popf
outsb
push
inc
int3
push
lods
xor
jae
imull
mov
shlb
lcall
fwait
inc
sub
dec
or
js
jle
mov
sarb
icebp
fidivl
bound
cli
lahf
pop
xor
movsb
call
xor
mov
lods
jmp
jle
movsl
and
pop
ret
in
add
and
or
jns
add
clc
cmpl
aad
pop
std
cmp
addr16
jge
iret
lret
mov
or
loopne
jg
loop
cmp
scas
outsl
and
insb
stc
mov
lods
pop
lret
push
pop
sti
inc
movsl
xchg
pop
ds
mov
test
shr
push
xchg
push
sti
mov
push
into
jno
fnsave
loope
inc
jmp
dec
sbb
shrl
jno
inc
das
out
adc
mov
fs
mov
adc
outsb
xor
ljmp
xchg
jle
jg
xchg
sub
cli
xchg
inc
push
rcrb
les
jnp
fnstenv
rcrb
es
inc
das
pushf
adc
inc
dec
lods
leave
mov
sbb
aad
popa
add
xchg
adc
call
sbb
popa
sbb
jecxz
jnp
aaa
xchg
loope
mov
rcr
xchg
inc
xor
mov
ljmp
adcb
inc
outsb
fdivs
sahf
gs
icebp
std
test
mov
jmp
test
scas
mov
cltd
adc
cmp
faddp
dec
sbb
dec
mov
cmpsl
add
mov
sarb
sahf
adc
nopl
ret
xor
jns
stc
xchg
test
rcl
clc
fidivl
inc
imul
jbe
loope
stc
mov
fwait
and
adc
push
mov
clc
int
and
jg
ret
mov
and
add
mov
imul
cli
imul
cmpsb
jl
mov
inc
dec
push
sti
les
xchg
lcall
add
ljmp
jns
push
subb
pop
dec
out
pop
and
xor
adc
mov
ds
cmp
mov
xlat
sub
sub
andb
xor
jb
mov
movsb
push
mov
int3
roll
pop
xor
adc
and
scas
lcall
or
mov
fadds
nop
xchg
sbb
xor
sbb
add
sub
es
jle
and
xorb
mov
ret
fcmovne
push
adc
into
or
pop
cmp
or
cmp
test
mov
je
test
dec
inc
cmp
inc
mov
jmp
mov
add
iret
or
inc
sub
cmpsl
pop
js
mov
fidivrl
mov
ucomiss
sub
xor
sbb
or
addl
lahf
jno
push
fildll
jne
arpl
mov
xchg
adc
sbb
mov
aam
rcrb
mov
out
pop
push
cmp
xor
popa
clc
stos
sub
mov
cmp
dec
int3
push
rorl
test
outsb
pop
mov
sub
pop
jmp
shl
mov
rclb
into
sbb
arpl
inc
aaa
addb
lret
lret
hlt
or
test
test
adc
mov
mov
push
push
jae
mov
insb
rolb
or
in
imul
fnstcw
repz
inc
nop
dec
lods
sub
sub
xor
out
add
aas
stos
stos
sarb
mov
and
jle
bound
inc
lahf
call
cmp
mov
xchg
push
xor
movsl
sbb
inc
mov
rcl
dec
inc
sub
xor
inc
and
adc
ret
sbb
mov
add
jo
mov
nop
in
or
xchg
repz
repz
add
sub
test
pop
lret
jmp
repz
mov
test
hlt
call
xor
pop
inc
jne
dec
mov
insl
xor
push
mov
ljmp
xchg
sbb
push
adc
cwtl
mov
lret
jg
out
out
std
dec
and
in
cmp
xchg
adc
ret
fsubp
xchg
stos
or
jne
xchg
lahf
inc
lds
icebp
jecxz
inc
stc
adc
je
dec
mov
ret
hlt
mov
xor
aad
mov
imul
xor
pop
push
insl
aad
dec
push
lods
inc
push
jg
inc
jne
loopne
mov
inc
push
les
jecxz
icebp
mov
jo
dec
cmc
adc
test
or
jge
gs
xor
xor
popa
jl
nop
xchg
adc
cmp
test
jae
in
add
and
testb
pop
rep
cmp
pop
rorb
dec
hlt
mov
mov
mov
mov
in
addr16
adc
add
xchg
inc
cmp
jb
ds
imul
or
sbb
insb
aas
leave
test
daa
rorl
jne
jle
sarl
and
xchg
fdivl
xlat
ss
cmp
ret
lahf
mov
and
or
add
add
adc
mov
inc
shrb
push
jne
fucomi
jb
lods
mov
lret
ds
cwtl
pop
add
dec
or
cmpsb
inc
fldt
outsb
jge
movb
bound
jae
mov
or
roll
mov
xor
mov
xor
lahf
in
xor
popa
call
xchg
imul
cld
mov
cmp
push
or
xchg
xorl
fiaddl
pusha
inc
fistps
adc
mov
adc
out
pop
rcll
cmp
pop
push
sbb
mov
pusha
add
lds
int3
dec
bound
aaa
mov
mov
test
es
out
out
imul
scas
cmp
jbe
pop
fcmovbe
adc
outsl
mov
in
mov
jge
les
sbb
push
cmp
mov
bound
sbb
loopne
arpl
test
insb
dec
dec
out
lret
xchg
jge
dec
and
cltd
dec
mov
pop
dec
sub
add
add
jns
and
in
xchg
fimull
mov
pop
adc
fwait
es
mov
jnp
dec
dec
sub
fnsave
dec
arpl
jge
xchg
sub
cmp
mov
push
es
push
pop
sub
jle
pusha
out
roll
rorl
sub
cmp
or
mov
sub
pop
push
xchg
push
add
jno
in
call
mov
das
jp
push
loop
adc
xor
lret
icebp
xchg
mov
shlb
push
enter
lret
xchg
in
inc
insl
rorb
cmp
test
adc
popa
inc
sub
ficoms
fildll
fisubrl
stos
dec
mov
push
xor
int3
test
jae,pn
hlt
pusha
divps
cmp
leave
adc
popa
shl
push
iret
test
dec
arpl
or
bound
sub
popf
mov
jb
test
ja
test
rorb
fiadds
xchg
push
add
out
cli
sbb
scas
jge
fidivs
aaa
sbb
mov
incb
and
enter
adc
jae
inc
cmp
cmc
adc
xchg
cwtl
xor
dec
push
jno
cmpl
jg
mov
movsl
test
jmp
mov
pop
mov
push
ja
add
inc
stc
std
fildl
dec
xor
cwtl
pop
loope
jg
in
mov
xor
fistpl
and
xor
mov
aam
dec
jl
je
rolb
ljmp
or
cmc
xlat
test
push
fisubrs
rcrb
mov
inc
push
testl
test
sbb
ret
fdivr
ret
xor
movsb
mov
test
mov
cli
push
ljmp
movsb
pop
sbb
imul
mov
push
lods
sbb
mov
push
subb
adc
mov
inc
jbe
inc
mov
test
clc
movsb
mov
sub
addl
jge
fstpt
ret
ret
lcall
xchg
lret
and
and
adc
xor
pop
cmp
cltd
fs
mov
jo
mov
mov
and
sbb
sub
jae
xor
ret
inc
out
gs
mov
ds
mov
xchg
retw
dec
mov
negb
ds
dec
xchg
pop
xchg
mov
cld
pusha
mov
movsl
insb
loopne
pusha
mov
out
stos
jge
lea
sub
ljmp
mov
flds
out
adc
or
mov
add
sbb
mov
push
mov
mov
push
clc
mov
stos
lods
fidivl
mov
pop
xchg
mov
int3
mov
cmpsl
repnz
add
xor
ss
pusha
or
sub
jno
aaa
pop
sub
fs
mov
or
xorb
push
jecxz
sahf
mov
ds
or
xchg
enter
jns
mov
cmpsb
fildl
inc
mov
ljmp
mov
icebp
fimull
add
das
dec
lea
mov
ret
jecxz
push
subb
mov
scas
mov
push
out
xchg
inc
inc
jno
roll
pop
sub
movsl
dec
negl
test
bound
aad
cmp
mov
es
cmc
xchg
dec
dec
sti
dec
mov
dec
adc
test
gs
pop
and
sbb
mov
mov
add
push
cld
iret
outsb
inc
popa
pop
lea
cli
sarl
insl
filds
shlb
sarb
sub
ds
dec
pusha
ljmp
mov
add
add
sub
adc
xor
push
adc
sarl
lock
loope
pop
or
dec
fcoms
jno
jo
stos
dec
cmp
xor
cmp
and
aas
cmp
scas
iret
je
ss
loope
cmp
addl
xchg
add
aas
push
jmp
pop
je
mov
and
adc
loopne
stos
jp
xchg
dec
push
and
inc
sub
push
sub
out
outsb
insb
dec
orb
out
xchg
jl
or
inc
jge
addr16
stc
push
jae
loop
rolb
add
or
stos
dec
push
jns
bound
cmp
xor
xchg
add
cmc
ret
and
int
nop
imul
push
dec
shrb
push
jg
jb
in
aaa
add
pavgw
jle
icebp
pop
lahf
imul
mov
imul
aas
arpl
inc
lods
xorl
fiadds
out
in
sbb
cltd
mov
xchg
pushf
mov
or
xchg
scas
xchg
out
pushf
out
shl
into
iret
push
out
and
mov
sub
mov
fnstenv
dec
test
bound
dec
test
pop
adc
sub
rcrl
xor
aam
inc
ret
sub
stc
push
ss
sbbl
mov
ljmp
test
das
out
loope
push
sti
in
mov
jle
jl
hlt
dec
outsl
mov
in
jne
test
add
cmp
scas
aam
popf
dec
jno
fimull
xchg
inc
in
lret
dec
les
rolb
mov
leave
adc
inc
mov
cmp
dec
test
xchg
sub
xor
leave
pop
mov
sub
pop
jg
lds
adc
lahf
jae
dec
sub
sti
fs
mull
sub
pop
mov
adc
adc
push
lahf
push
arpl
xlat
stos
dec
aam
imul
shll
stc
ret
inc
mov
xor
imul
dec
sbb
leave
movsl
push
cmpsb
cmp
pop
cmp
adc
pushf
outsb
lahf
inc
fidivrs
iret
pop
shr
iret
jmp
les
enter
cltd
push
test
jg
stos
jmp
lods
mov
into
add
dec
aam
pop
shl
inc
push
test
cmc
xchg
stos
or
insb
bound
bound
leave
mov
jno
or
or
fs
pop
out
mov
xor
pop
daa
fdivrl
cmp
cmp
es
mov
ja
ja
xor
inc
sbb
jo
addr16
push
push
inc
mov
sub
inc
enter
dec
adc
outsb
pop
mov
and
test
xchg
add
xchg
test
sbb
js
or
leave
dec
test
test
mov
push
insl
popf
xor
repz
ret
lods
xchg
or
adc
mov
ret
push
pop
add
test
xor
icebp
lcall
xchg
jbe
stos
add
call
test
inc
sahf
mov
sbb
cmp
mull
sub
push
and
xchg
adc
jo
push
add
out
and
test
cmpsb
or
add
stc
mov
sahf
js
icebp
mov
aam
xor
xor
sub
push
cwtl
dec
repz
cmp
push
pop
mov
popf
shll
xchg
cwtl
mov
sbb
push
add
xchg
outsl
cmp
mov
and
data16
scas
adcb
test
mov
fisubl
lcall
insl
adc
adc
out
pop
sarb
inc
push
fbld
dec
pop
mov
xchg
push
mov
fldl
in
scas
mov
mov
outsl
out
push
mov
flds
cld
cwtl
cmp
dec
shll
daa
movsl
into
sbb
sbb
mov
inc
jle
jnp
adc
inc
sub
lret
cltd
jno
in
jp
cmpsl
cwtl
pop
xor
and
xor
insb
mov
pop
xchg
jne
pop
mov
aaa
mov
inc
push
movsb
out
fcmovnbe
jmp
icebp
dec
mov
push
cmp
adc
or
add
aad
jno
xor
into
lea
xchg
imul
jp
jne
test
testb
xor
test
ja
pmullw
inc
mov
loop
and
adc
lahf
jmp
loop
jns
push
sub
xchg
xor
xor
inc
mov
enter
xchg
sub
jmp
lcall
dec
mov
mov
jbe
flds
scas
adcl
xchg
xchg
mov
in
lock
rolb
adc
test
lods
mov
pusha
test
add
pop
imul
fmul
mov
clc
sub
or
in
cmp
push
aaa
and
js
jg
decl
push
rorb
jbe
idivb
fsubl
push
lock
mov
in
in
or
adc
pushf
ljmp
movsb
shl
shll
loop
int
stc
out
jg
addb
insb
bound
ret
cmp
mov
push
jo
push
jb
and
adc
jecxz
scas
push
lret
and
xorb
mov
mov
mov
mov
dec
sbb
out
scas
dec
adc
jl
push
scas
jecxz
mov
into
mov
mov
pusha
push
outsl
xor
mov
pop
pop
lods
mov
mov
out
sub
loopne
stos
and
xchg
xor
jb
mov
ret
loop
adc
dec
jmp
aad
jns
pop
jmp
mov
mov
jae
in
mov
add
mov
sbb
aam
sti
xor
iret
inc
push
and
pop
aas
sti
sub
cld
dec
push
sub
cmpsb
sbb
stos
pop
subl
sbb
xchg
repz
sub
loop
in
xor
dec
ljmp
inc
adc
fimuls
pusha
or
xchg
adc
out
push
or
out
hlt
jl
bound
enter
popf
fdivs
mov
dec
aas
mov
xor
mov
andl
repnz
push
imul
cmpsb
jns
or
dec
mov
subb
mov
pop
ja
mov
rolb
push
xchg
popf
add
sbb
imul
enter
pusha
shl
xchg
incb
jg
and
hlt
mov
rol
sbb
daa
pop
xor
in
mov
test
icebp
and
arpl
jmp
mov
stc
loope
lods
xchg
out
call
pop
jbe
dec
cwtl
jae,pn
data16
rcll
inc
fnsave
inc
adc
ss
test
call
lcall
insb
jb
cwtl
mov
ret
jae
jbe
imul
xor
adcl
sbb
and
cmc
pop
lcall
inc
pop
mov
addr16
or
movsl
mov
ja
imul
cmp
mov
popa
xor
mov
or
or
out
sbb
xlat
dec
fmull
jnp
xlat
stc
stc
push
add
xor
jnp
xor
pop
pop
push
frstor
jecxz
jno
adc
aaa
nop
mov
mov
in
movsl
mov
out
cmp
adc
push
movsl
mov
mov
jo
mov
rcrl
mov
aam
pop
pop
cli
bound
add
mov
cwtl
mov
adc
jns
mov
mov
xor
rorl
pop
cmpsb
mov
dec
movsl
notl
mov
dec
mov
pop
mov
icebp
mov
inc
mov
mov
push
aam
mov
jge
cmc
movl
fistps
arpl
mov
sub
cmp
pushl
orb
int
popf
aam
and
ret
fbstp
push
aas
adc
xchg
mulps
sti
lds
cmpsb
pop
xchg
sub
jecxz
push
xor
test
fidivrl
loop
icebp
pop
fsubrl
das
mov
inc
cmp
mov
or
pop
lods
sub
enter
sbb
pop
orb
ja
and
popa
stc
in
mov
sbb
push
inc
dec
fistpl
fcomi
jns
fadds
imul
aas
sub
xlat
sub
jnp
andb
push
notl
cwtl
xchg
aam
adc
aas
es
add
push
mov
movb
cmc
call
and
and
push
scas
mov
adc
or
fucom
test
jo
xchg
jmp
ja
xor
cmc
jbe
ficomps
add
andb
sbbl
loope
fwait
movsb
inc
movsl
clc
xchg
ljmp
adc
in
mov
mov
dec
xchg
iret
inc
pop
cmpsl
push
loope
fcomps
stc
mov
ret
sahf
fwait
xchg
cmp
fsqrt
push
or
push
scas
cmpsl
cmp
ss
lahf
sbb
cmp
lcall
cmpsl
stos
shll
pop
cmpsl
cmp
pop
enter
sbb
in
je
pop
nop
sbb
sbb
lahf
add
pop
in
movsl
mov
push
insb
fisttpll
lods
shl
xchg
fsubs
repz
aas
int
pop
mov
jae
in
in
jp
inc
sub
pop
pop
adc
hlt
jle
sbb
jle
loope
leave
xchg
ror
sbb
mov
sbb
out
cltd
dec
xor
mov
add
sbb
cmc
frndint
aam
sub
xchg
cmc
je
jne
repnz
mov
test
push
push
sbb
pop
iret
loop
add
arpl
xchg
pop
testl
loope
popa
push
mov
cmpsl
and
mov
jle
aam
cs
cmc
sbb
jb
jl
fnstsw
cli
mov
rorl
scas
imul
pop
test
lods
int3
adcb
sub
mov
les
cmp
cltd
add
xor
mov
fldt
pop
cmp
sbb
cmpsl
addb
dec
mov
ret
call
xlat
xor
jno
in
imul
fs
ret
sub
mov
ret
bound
mov
mov
inc
gs
sbb
cmpsl
jecxz
xlat
out
orb
into
test
sbb
cmp
loope
pop
push
inc
pop
push
mul
fdivr
pop
daa
sbb
lcall
iret
lds
cld
cld
xor
pshufw
xchg
ja
jnp
sub
aas
jp
xchg
mov
xor
scas
add
loopne
cmc
in
and
imul
sub
and
mov
imul
inc
adc
xor
pop
lods
pushf
cmp
stos
mov
sbb
xor
and
imul
into
loop
popf
push
jo
jbe
mov
push
lahf
jne
pop
stos
xor
xchg
dec
mov
cmp
fadds
sub
fidivrl
fstpt
mov
loop
mov
loope
jae
pop
mov
mov
xor
push
mov
inc
hlt
mov
add
pushf
rcll
lea
cmp
shlb
lock
aaa
adc
aas
aas
insb
popf
rorb
aam
adc
or
sti
xchg
stc
xor
mov
in
add
adc
cmp
shlb
repz
popl
mov
leave
sbb
dec
fcompl
push
mov
mov
repz
jge
test
je
jl
lock
loopne
pop
fsubrl
ss
shl
mov
sub
push
imul
mov
jb
ljmp
testl
xchg
aad
cs
pop
pop
fs
aad
xor
mov
dec
inc
jle
scas
pop
push
jb
insl
ret
loopne
mulb
mov
stos
inc
xchg
lods
push
pop
xchg
and
ret
push
inc
mov
add
shlb
mov
pop
icebp
cmp
lret
imulb
or
xor
dec
into
shlb
jbe
xchg
xor
dec
jno
lret
cmp
into
repz
xchg
daa
lds
sub
insl
pop
and
aas
in
cmp
aaa
push
or
das
lods
test
jno
mov
pop
lahf
cmp
out
mov
jmp
out
jmp
jnp
out
pop
push
and
into
inc
or
jle
mov
dec
rorb
xchg
outsb
ljmp
sbb
sub
mov
je
push
lods
dec
cli
jbe
and
loopne
pusha
test
xchg
adc
imul
add
sbb
pop
daa
out
adc
lcall
adc
test
inc
mov
mov
in
mov
cli
aad
and
sub
shrl
jns
dec
arpl
mov
sbb
rol
xor
and
js
pop
gs
mov
sub
cmpsb
sbb
and
sbb
mov
pop
xor
adc
shl
loop
add
push
dec
cltd
gs
cmp
hlt
xchg
mov
pop
dec
popa
dec
and
mov
lahf
jns
out
aad
ss
ret
or
mov
adc
orb
out
outsb
lcall
pusha
mov
movsl
nop
pop
xchg
pop
pop
scas
push
jnp
inc
xorl
xor
repz
xorb
cmp
add
dec
gs
inc
popf
and
xchg
cmp
adc
inc
pop
rcll
shlb
lcall
dec
jmp
cwtl
pop
fwait
or
add
clc
lahf
cmc
mov
dec
cmpsb
notb
mov
insl
sub
pushl
xor
sbb
orl
arpl
jmp
push
aas
add
stc
stos
mov
ljmp
out
dec
sub
loopne
push
dec
inc
stos
xchg
shrl
fmuls
ud1
popf
mov
inc
decb
negl
pop
jne
push
jge
sub
xorb
sar
sti
movb
sub
in
inc
add
jp
sub
fwait
popf
add
fimull
ja
dec
mov
mov
add
sbb
push
and
outsl
or
mov
cli
insb
loop
sub
push
sbb
sbb
rorl
cmpb
int3
mov
rorb
pop
pusha
clc
push
neg
iret
fsubr
pop
jmp
iret
hlt
repnz
push
and
cli
clc
sbb
movsl
cmp
cmpl
add
lret
icebp
sbb
leave
in
int3
in
pop
outsb
je
es
nop
and
dec
aad
in
fiaddl
mov
enter
fldenv
in
xor
cmp
jb
cltd
pop
pop
mov
mov
cli
xchg
ss
inc
xchg
add
mov
and
int3
sub
insl
sub
xchg
lcall
lds
sti
gs
fmuls
subb
sbb
xlat
sub
or
lahf
sub
push
arpl
push
xchg
sub
fdivrs
test
jno
lds
push
cmp
mov
lcall
movsl
sbb
push
cwtl
icebp
repnz
int
pop
mov
ret
and
inc
testb
inc
outsl
mov
sub
lods
idivb
testb
test
cmp
fdivs
add
in
ret
cmpsl
xor
jl
mov
imul
cmp
into
jne
fcomp
mov
test
mov
test
pusha
or
or
or
and
cmp
stos
out
adc
mov
mov
mov
cmpsl
jl
testb
jb
xor
cs
pop
lcall
adc
lods
mov
cmp
mov
ret
cmp
xchg
fidivrl
cmp
test
or
dec
mov
test
adc
scas
sbb
movsb
xor
aam
aas
push
dec
xor
push
xchg
adc
cmpsb
and
xchg
out
arpl
or
sti
loopne
stc
fidivs
pushf
jecxz
aad
push
xchg
adc
jb
mov
sub
mov
push
cmpsl
dec
cs
pop
xlat
inc
xchg
sbb
adc
ss
adc
push
cmp
mov
dec
and
jbe
pop
mov
push
mov
jno
fs
sahf
shll
fstpt
mov
mov
test
pop
pop
xchg
and
pushf
jmp
xchg
cmpb
in
push
clc
xor
mov
mov
jmp
imul
stos
sub
outsl
xchg
xchg
movb
mov
pop
mov
lcall
inc
fmuls
cmpsb
pop
rorb
fxam
cmpl
sub
fs
inc
pop
dec
loop
leave
je
les
sub
mov
add
xchg
outsb
pop
mov
ret
out
pop
dec
push
je
sbb
in
scas
cltd
jns
insl
cld
mov
jmp
sub
fldl
fbstp
pop
pop
fcmovnu
pop
ret
mov
mov
mov
rcll
inc
adc
lcall
lds
jae
jge
sbbb
sbb
push
push
enter
mov
aaa
mov
push
call
mov
popf
out
or
adc
loopne
mov
ljmp
lea
test
mov
mov
fs
clc
jb
cmp
jb
mov
xchg
xchg
jne
popf
pop
nop
lock
jo
int
dec
das
add
fldt
pop
pop
jecxz
in
popf
scas
cli
cmp
fs
sahf
fidivs
sbb
push
xchg
adcb
lret
mov
popf
cmpsb
add
mov
ljmp
fadds
lock
push
or
add
xor
xchg
into
sbb
xor
popl
jno
notb
lock
xor
mov
rorl
jmp
adc
cmpb
sbb
adc
test
fs
cltd
sub
sti
xchg
jbe
xchg
dec
iret
pop
jns
mov
int
lahf
imul
inc
js
fisttpl
cmp
cmp
jle
je
pop
sub
dec
dec
sub
cmp
out
pop
cmpsl
pushf
or
mov
inc
sbb
sahf
cli
in
push
push
and
je
push
mov
push
fcomip
repnz
push
and
mov
xchg
incb
aaa
mov
nop
push
movhps
int3
mov
cmc
in
pop
mov
cmp
sbb
jecxz
lods
jae
loope,pt
loopne
and
jle
enterw
and
xchg
push
and
adc
fcmovbe
inc
fnstsw
cmpsl
test
cltd
mov
mov
clc
cmp
ss
dec
loopne
jbe
insl
lods
sbb
xchg
mov
gs
icebp
popf
sti
sbb
test
lods
arpl
sarb
inc
lods
mov
mov
sbb
xchg
lds
jo
inc
cltd
cmp
add
in
pop
or
scas
jno
rcpps
data16
mov
pop
inc
shl
ret
add
in
mov
pop
cs
pop
push
cs
mov
loopne
xor
test
cld
insb
pop
jnp
cwtl
mov
fimuls
xor
push
pop
jg
lahf
and
cli
bsf
cli
imul
cld
mov
mov
cmp
mov
add
lret
mov
push
imul
rolb
sahf
pusha
fldcw
mov
bound
push
xlat
stos
or
and
stc
loope
fsubrl
nop
sub
mov
les
and
and
and
jmp
insl
stos
add
and
ds
mov
clc
movsb
mov
pop
mov
mov
das
jp
iret
shrb
jl
daa
mov
pop
add
call
cwtl
cmp
sub
dec
adc
fcompl
mov
or
fisttpll
dec
pop
pusha
mov
ljmp
sbb
jno
push
cltd
in
fsubl
jge
out
lods
xor
pop
test
outsl
cmc
or
mov
pop
xchg
fcmovbe
push
ss
inc
mov
je
dec
sub
outsl
inc
push
int
cltd
sub
call
das
pushf
fwait
add
dec
adc
push
adc
sbb
lods
cld
dec
sub
ljmp
push
mov
inc
dec
jne
jge
cmp
mov
in
adc
mov
xor
pusha
mov
sahf
mov
cmp
xor
sbb
dec
push
and
loope,pt
iret
mov
lcall
ror
rcrl
js
mov
repnz
cltd
inc
hlt
jg
orb
xlat
push
imul
mov
mov
xor
jae
cmp
ds
and
sahf
inc
ror
lock
fsub
ja
add
loopne
lds
std
lcall
pop
addr16
iret
inc
xor
test
out
rolb
popa
xchg
andb
es
push
inc
pop
inc
int3
outsb
push
psrlq
in
jno
ljmp
pcmpgtd
fwait
dec
push
or
fiaddl
jmp
loope
in
inc
ss
aas
stos
ljmp
and
es
sub
xchg
mov
cmp
xchg
mov
xor
imul
sbb
mov
enter
and
dec
cltd
mov
mov
sub
sti
mov
mov
sbb
inc
mov
xor
outsl
jb
std
push
adc
cmpsb
mov
xchg
xor
fnstsw
inc
aad
dec
lods
push
push
hlt
lea
in
push
cmpsb
sub
movsl
insl
jno
aad
dec
xor
aas
pop
stos
neg
pop
cmp
cmp
insb
into
push
or
fcom
mov
enter
outsb
pop
cld
push
into
cmp
mov
jle
cmpsb
and
mov
xchg
dec
xor
push
mov
sub
dec
mov
xchg
sarb
testb
dec
and
adc
or
pop
je
std
push
test
outsb
sahf
xchg
dec
and
stc
xchg
cmc
ficoml
add
rclb
lahf
je
dec
in
lret
fs
push
dec
or
pop
fdiv
push
data16
xchg
div
mov
sarl
sbb
adc
les
pop
dec
add
and
jns
popa
out
clc
mov
in
in
popf
stc
test
pop
cmp
jmp
push
out
lds
cwtl
xor
lcall
je
add
es
sbb
sti
push
jb
pop
mov
mov
in
mov
das
lods
fistl
sbb
xchg
out
outsb
cmp
aad
dec
loopne
push
pop
and
jle
imul
mov
dec
pop
jecxz
xor
in
fstpl
test
xorl
ds
cmp
sahf
sbb
xchg
dec
pop
fcmovne
add
shrb
adc
or
outsb
movsb
cmpsl
and
sbb
mov
arpl
fistps
cmp
lods
mov
and
dec
mov
stos
add
unpcklps
cltd
xchg
mov
daa
jno
push
mov
scas
flds
aad
add
dec
movsb
xchg
and
jnp
test
or
jne
insb
push
jns
push
sarb
rolb
in
xchg
movsb
inc
cld
sbb
push
fcomp
dec
test
enter
dec
stos
mov
iret
lea
nop
aas
or
jle
xorl
adc
pop
add
in
ja
fcompl
mov
push
leave
gs
lret
sahf
movsl
enter
lods
inc
cpuid
repnz
xlat
pop
sti
cmpl
mov
cwtl
pop
lock
rcll
pop
mov
dec
in
mov
ror
sbbl
jp
adc
lods
sarb
mov
sub
jne
adc
mov
adc
ffreep
cmp
loopne
notb
jbe
mov
outsb
negl
xchg
push
sub
ret
cmpsb
pop
sbb
adc
push
sub
mov
cwtl
pop
stc
decb
inc
arpl
fisubrs
add
dec
pusha
lret
imul
add
imul
pop
pusha
xor
push
or
jge
add
pop
gs
popf
lcall
or
das
in
inc
push
mov
cld
insb
sub
ljmp
mov
and
or
mov
aaa
arpl
mov
test
pushf
and
xchg
push
shrl
cmp
jno
loope
pushl
sbb
mov
ror
sti
lock
cmpsl
test
pop
testb
xchg
push
sub
pop
in
inc
clc
sbb
adcb
add
mov
xor
je
mov
ret
push
pop
testb
add
hlt
pop
insb
std
pusha
aam
or
pop
jae
push
push
cmp
sub
pop
mov
stos
arpl
mov
cwtl
test
mov
lret
fistl
out
movsb
loop
loopne
push
xorl
pop
es
rclb
shlb
sbb
fwait
mul
push
inc
cmpsl
xchg
test
test
dec
lock
les
sbb
lcall
repz
jp
and
adc
into
cli
mov
cwtl
adc
arpl
test
mov
in
aaa
std
dec
or
push
cmp
add
cmp
enter
inc
aam
xor
fbld
in
mov
xlat
imul
jmp
jo
out
sub
mov
jl
repnz
out
jp
ret
inc
rorb
push
mov
stos
nopl
adc
adc
jne
hlt
xchg
inc
out
les
aas
inc
sbb
fwait
shll
mov
bswap
cmp
xor
mov
in
and
je
rorb
es
jmp
pop
xor
hlt
inc
push
or
cmp
dec
data16
call
imul
dec
scas
pop
hlt
bnd
dec
jae
ja
sbb
inc
push
and
cmp
jb
and
pusha
and
test
test
mov
xor
jb
sbb
jo
xor
xor
or
pop
and
cld
sbb
mov
scas
movzbl
je
fwait
xchg
in
push
movsl
pop
sbb
cld
sub
cli
jae
sbb
gs
sub
sti
sub
mov
out
flds
sbb
jo
pop
cltd
push
sub
dec
sbb
add
adcl
pop
jne
leave
jne
mov
lds
mov
pop
lock
jns
cld
mov
mov
pushf
cmp
mov
daa
adcl
dec
dec
mull
fsubr
adc
jb
mov
int
mov
jp
mov
loop
shl
mov
mov
sahf
test
or
mov
cmp
mov
inc
adc
insl
fsubs
and
sbb
stos
filds
sub
push
sbb
cmpsl
clc
xor
sub
data16
push
aad
cmp
push
cmp
aas
in
movsb
ljmp
icebp
jb
stos
sar
and
push
fstpt
pop
nop
sub
sarb
jle
fs
jl
out
cmp
xchg
das
mov
mov
pop
mov
or
mov
dec
fs
arpl
aam
insl
inc
jo
rorb
in
lret
adc
insl
cmp
insl
lahf
xchg
jno
iret
or
adc
sbb
insb
das
mov
adc
mov
mov
repnz
scas
sub
jno
or
std
or
sbb
or
daa
call
adc
mov
mov
dec
push
pop
dec
aad
push
mov
cmp
pop
or
enter
mov
test
loop
scas
fcmovu
out
mov
cmpsb
mov
ds
xchg
fidivs
jnp
bound
xchg
sub
xchg
adc
cli
dec
mov
mov
mov
js
ret
in
scas
jmp
stos
push
pop
mov
shl
mov
test
mov
outsl
push
repnz
push
and
das
mov
in
ds
cmpsb
sub
lret
jp
mov
pop
jl
mov
mov
repz
aam
leave
loop
cs
dec
repnz
add
add
xor
std
insb
or
into
mov
icebp
in
cmpsb
popa
rcrl
add
mov
scas
jno
clc
subb
je
or
mov
sub
adc
sbb
push
xchg
and
ret
jbe
pop
sbb
in
ljmp
mov
hlt
xor
xor
sub
pop
call
push
jnp
add
xor
movsl
sub
dec
out
inc
pusha
adc
mov
orb
enter
bound
xchg
and
mov
push
cld
cmp
xor
jb
and
in
add
aas
push
pushf
fwait
pop
lcall
gs
add
jb
repz
gs
dec
aaa
stc
add
fbstp
pop
adc
cmp
incl
push
cli
mov
test
add
sub
push
pop
adcb
ret
scas
adc
cld
push
dec
jae
fiaddl
dec
lods
add
jae
ficompl
es
rcrb
adc
test
xchg
sub
inc
mov
or
rcrb
dec
std
sub
repnz
add
sub
outsb
xlat
cmp
insb
test
mov
fstpt
xchg
call
pop
or
cmp
jl
sbb
out
push
mov
movsb
xlat
and
dec
mov
mov
push
ret
insb
fstl
xlat
or
cmc
pmullw
mov
fdivrl
xchg
hlt
pop
pop
dec
sbb
les
std
add
sub
or
xchg
xchg
xor
mov
in
sar
jg
test
mov
add
enter
adc
xchg
mov
dec
scas
and
add
dec
in
int3
add
cmpb
pop
and
xchg
cmp
pop
or
fstl
push
mov
pop
stc
daa
aas
lcall
xchg
test
fwait
mov
sub
push
scas
adc
fwait
nop
aaa
fwait
mov
scas
adc
lret
xchg
aaa
fwait
jp
mov
fists
cmp
jnp
dec
pushf
fwait
pop
clc
xchg
and
lods
hlt
popa
sub
or
push
fistpll
leave
pusha
cmp
iret
sub
js
fmulp
ja
test
das
inc
xchg
mov
idiv
lods
xor
add
or
push
cmp
or
pop
xchg
mov
sahf
dec
aad
iret
xchg
sbb
enter
sbb
lret
popa
lock
cmpsl
loopne
loopne
inc
repnz
pop
xor
jle
in
jp
and
addr16
xor
lret
adc
rcr
ret
lods
clc
xor
or
mov
lods
sahf
mov
xor
gs
jae
je
mov
xchg
cmp
mov
push
sub
xchg
xor
push
pop
push
lods
out
and
adc
cmp
outsb
pop
sub
fdivrl
icebp
pop
push
bound
dec
std
push
inc
sub
popa
push
inc
cmp
ja
inc
pop
rcll
mov
roll
lea
sub
xor
loopne
dec
push
fnstcw
pop
push
mov
add
sbb
outsb
shlb
pop
lret
aam
mov
inc
inc
mov
fildl
fwait
es
clc
inc
mov
repz
insb
xchg
in
jne
fsubrl
das
ss
loop
popf
push
sub
cs
pop
inc
sahf
mov
pushf
mov
pop
bound
xor
adc
jmp
shlb
lret
daa
jmp
daa
sbb
push
jnp
jae
mov
loopne
out
sbb
inc
xorb
mov
inc
cmp
roll
mov
js
dec
pushl
inc
mov
xor
and
inc
fiaddl
ret
ss
or
fiadds
cltd
jecxz
movsb
jb
cmp
cmp
mov
clc
jmp
or
push
jae
repz
adc
dec
pop
fimull
arpl
les
push
and
inc
push
cmp
mov
lods
ret
xchg
mov
in
loope
and
shl
or
push
sub
fs
sbb
xchg
jb
push
mov
ret
orl
lods
aad
test
fwait
or
lock
lock
scas
outsl
es
aaa
test
mov
xor
mov
orb
fmuls
pop
pop
fstpl
mov
scas
imul
jns
adc
enter
xlat
cmp
aam
or
out
push
sub
pop
jp
adc
test
inc
or
xchg
push
cmc
cwtl
pop
aas
clc
adc
push
ds
pop
das
stc
adcl
in
jo
or
dec
xchg
adc
mov
aad
mov
fisubrl
xchg
das
iret
xorl
pop
insb
mov
pushf
adc
aaa
push
mov
cmp
adc
mov
and
inc
aas
arpl
icebp
lods
add
imul
inc
and
icebp
sub
cmpsb
stos
imul
shlb
mov
out
adc
jne
insl
sub
fwait
lret
sti
in
pop
cmpsl
in
adc
enter
cmpsl
cmpsl
lods
or
popf
pop
arpl
sub
pushf
fs
mov
test
and
sub
xor
mov
dec
jl
filds
repz
dec
and
xlat
jecxz
xchg
hlt
lods
and
jnp
mov
sahf
xor
popf
mov
aaa
jb
dec
lea
dec
inc
sti
out
dec
pop
push
jae
mov
scas
xchg
or
cmp
sbb
ret
call
inc
in
sub
xchg
jbe
cli
addr16
ret
jge
adc
mul
mov
loope
sub
xchg
arpl
ljmp
out
movsl
sub
push
scas
adc
out
fisubs
push
and
sub
sub
cmpsl
pop
sbb
scas
jmp
ds
popa
std
xchg
sub
arpl
add
outsl
push
mov
outsb
jnp
in
movsb
lcall
cmp
mov
mov
inc
mov
mov
inc
outsl
in
pop
dec
push
and
push
lret
inc
dec
addr16
iret
dec
add
adc
rorb
rcrb
hlt
clc
out
pop
cmp
ljmp
lds
fcmovb
pop
cmp
in
cmp
cmp
lret
and
jne
sub
xchg
and
scas
scas
push
mov
add
dec
ret
lahf
jne
shr
sbb
pop
test
xor
mov
popf
iret
repz
fs
or
mov
es
roll
je
xchg
dec
mov
sbb
mov
mov
nop
in
test
cltd
dec
xor
adc
in
mov
cli
outsb
stos
addr16
dec
mov
pop
pop
pop
ret
add
fstl
pop
jg
nop
ss
cmp
js
pop
fwait
or
out
push
lds
hlt
mov
scas
sub
jge
insl
cmp
dec
loop
lock
inc
into
fnsave
pop
shlb
dec
cmp
hlt
cld
aas
rorb
ja
pop
mov
int3
jl
je
ret
das
jo
sub
xor
cmc
repz
adc
sahf
inc
movsb
les
in
add
shll
and
inc
mov
enter
daa
lock
pusha
inc
adc
jo
pushf
pushl
mov
cmp
push
pop
or
nop
bound
test
mov
jl
mov
fists
xor
jo
icebp
cmpsl
or
jo
dec
push
cli
outsb
lahf
sbb
daa
sbb
adc
xchg
andl
js
int
shlb
jns
nop
pop
push
cld
sahf
inc
or
ja
aas
cmp
push
mov
or
xchg
addr16
sbb
add
daa
dec
cmp
ficompl
loopne
cmp
mov
inc
mov
add
addl
mov
mov
lcall
mov
mov
jns
sbb
cmp
movsl
and
lods
cmp
test
dec
bound
ss
lret
int
setle
xchg
dec
repnz
sub
cli
loope
mov
sbb
and
test
xlat
add
rcrb
jl
push
mov
ret
adc
inc
scas
inc
cmp
cltd
xor
pop
fisubs
cmp
movsb
imul
xor
sti
lea
out
jmp
rcll
pushl
out
pop
aaa
xchg
jns
cmp
mov
aaa
cmp
js
sbb
sbb
mov
inc
scas
dec
clc
xchg
bound
icebp
out
fsts
mov
jle
insb
sahf
adc
sub
pop
cmp
mov
and
call
imul
lret
test
hlt
cwtl
enter
jne
lret
inc
pop
nop
iret
xchg
andl
decb
ss
out
insb
jle
push
mov
sti
aaa
xchg
ret
nop
popa
es
xor
push
adc
add
bswap
out
jp
and
push
push
cmpsl
mov
jg
xor
cmp
push
pop
aad
mov
and
sbb
test
lcall
in
inc
repz
popf
or
mov
mov
mov
inc
mov
stc
dec
xchg
lods
and
aam
inc
das
jns
jle
sbb
ds
loop
pop
aaa
inc
imul
mov
nop
xor
add
xor
outsl
push
push
or
outsl
subb
jo
pop
or
jbe
or
out
xchg
movb
pavgb
sysexit
pop
jbe
jno
cmpsl
ljmp
in
ret
mov
mov
inc
scas
xlat
xor
lahf
lock
adc
fimuls
out
cld
jl
stos
pop
into
rorb
or
lcall
jne
test
dec
fsubrs
jae
in
adc
popf
shrb
adc
gs
js
out
arpl
mov
pop
mov
xor
mov
sbb
sti
xor
push
popf
loop
and
in
jmp
xchg
xchg
dec
mov
push
das
fwait
inc
cld
out
sub
je
aas
jb
shll
mov
lcall
loopne
dec
inc
lret
xchg
mulb
test
aas
out
popa
rclb
lret
push
insb
xchg
xchg
cli
fsts
cmp
mov
repz
pop
stc
imul
jns
lods
sub
nop
and
sbb
out
inc
imul
dec
xchg
aaa
aas
mov
out
adc
jecxz
pop
loop
push
repz
dec
dec
push
push
xor
mov
in
int3
jge
adc
sbb
jae
push
mov
and
mov
out
stos
stc
jo
mov
je
scas
ret
mov
add
sti
int
repnz
fcoms
add
inc
arpl
cmp
dec
sbb
pop
xchg
push
cmp
pop
jne
outsl
add
jl
jecxz
and
jp
xor
push
iret
shll
jne
inc
add
cltd
ret
jne
add
les
cld
push
decl
cmpsl
adcl
jp
mov
xchg
pop
inc
xor
push
mov
punpcklbw
jle
xchg
adc
mov
loopne
dec
xor
sbb
or
xchg
je
ret
ss
pop
inc
shr
sbb
xchg
sbb
dec
daa
inc
adc
stos
jne
test
xor
sbb
xlat
leave
int
inc
mov
push
and
arpl
loope
ret
jbe
outsl
mov
mov
push
js
jmp
adc
dec
adc
ss
xchg
push
lret
repz
imul
pop
cmp
cli
movsb
pop
jns
jae
push
out
cmp
popa
add
stos
vmovq
cmp
std
int3
xor
sahf
mov
loop
mov
int
jp
sub
cli
mov
push
add
popf
xor
and
insb
ds
in
push
add
ja
adcb
aam
or
mov
fistpll
push
adc
stos
frstor
pop
lahf
imul
push
mov
xor
mov
mov
int3
sub
xchg
int3
xchg
scas
loop
sub
out
or
or
pushf
scas
lret
jb
sub
mov
push
sub
xchg
or
pop
in
add
lea
cmp
shrb
pop
inc
xor
inc
mov
lcall
dec
fsts
lds
scas
jmp
inc
cmp
and
lcall
pop
pop
sahf
pop
add
arpl
xor
into
das
xorl
or
je
dec
xor
popa
jo
xor
pop
xchg
mov
mov
ds
and
vmovdqa
sarl
sub
adc
or
jns
or
fdivl
lret
cltd
sub
icebp
inc
jo
cs
pop
idivb
mov
sbb
add
xor
sbb
mov
and
mov
jge
or
push
mov
fldt
cmpsl
lea
jne
jmp
xor
push
sbb
scas
and
clc
inc
inc
scas
fs
lea
pop
and
fstpl
push
daa
add
outsb
aas
sbb
sti
mov
popa
mov
xchg
mov
imul
jnp
ss
pop
repnz
fs
addr16
test
mov
sti
cli
repz
push
scas
in
jbe
rclb
adc
xchg
dec
ret
or
test
xchg
in
sbb
push
mov
stos
call
xor
and
xor
push
stc
cwtl
repnz
lods
repz
mov
insb
push
xchg
jmp
and
inc
mov
jp
mov
xor
mov
fwait
ja
push
stos
lret
xor
xor
lret
sub
notl
scas
idivb
push
fwait
jno
in
cmpsl
loop
stos
repnz
push
mov
jno
ret
xchg
in
jne
push
ja
push
xchg
adc
mov
cltd
xchg
out
pop
aas
push
mov
pop
int3
scas
fldenv
bound
enter
les
cli
sbb
shll
hlt
inc
pop
cmp
pop
or
jns
and
icebp
push
pop
mov
inc
cmpsb
and
pop
mov
repz
leave
cwtl
adc
je
in
mov
mov
mov
ja
inc
movsl
mov
cwtl
mov
in
stos
cmp
mov
jecxz
xor
add
repnz
mov
imul
jae
lcall
sbb
push
mov
jl
lock
push
aaa
int
pop
outsb
mov
sub
push
js
cmp
test
pop
mov
and
xchg
mov
pop
ret
xor
or
push
mov
ffree
cmp
or
lds
push
inc
scas
out
adc
mov
imul
mov
pop
pop
dec
and
cmpsb
xor
inc
adc
sub
dec
mov
xchg
dec
mov
sub
and
mov
add
outsl
repz
sahf
push
cmp
dec
in
xor
mov
dec
inc
or
clc
lods
adc
data16
sbb
insl
inc
xchg
dec
nop
ljmp
icebp
js
rclb
pop
mov
leave
enter
cwtl
mov
and
call
sbb
pop
outsb
fsubrs
lret
mov
mov
mov
adc
mov
pop
sbb
rorl
add
les
mull
sub
sub
push
mov
add
inc
inc
loopne
outsl
fldenv
sbb
repz
push
adc
out
adc
mov
cmc
add
push
mov
das
pop
aas
sub
mov
xor
cld
cmpsl
stos
mov
lcall
movsb
bound
mov
push
stos
mov
push
xchg
push
mov
mov
jb
pop
mov
mov
fs
push
inc
dec
inc
enter
and
cmp
xchg
jg
leave
cmp
mov
xchg
inc
cwtl
stos
inc
push
test
lahf
out
and
sahf
or
mov
shlb
test
iret
cmpsl
cwtl
inc
ret
inc
jns
add
enter
insl
xchg
in
lds
test
dec
popa
fwait
push
jecxz
test
leave
mov
xchg
jge
mov
ss
and
popa
push
or
int
and
andb
les
push
cmp
xchg
xorl
xchg
lock
ret
js
jmp
fcomps
mov
xchg
stos
mov
out
jmp
aaa
adcb
cwtl
sub
push
aad
je
or
mov
push
mov
adc
sub
scas
adc
in
roll
clc
xchg
in
pop
xchg
pop
pop
mov
pop
sbb
jmp
cmc
xchg
std
or
add
lds
add
rorb
mov
stc
push
insb
add
mov
pop
xor
in
and
ljmp
lret
or
pop
or
rorb
leave
mov
lret
lods
adc
pop
sub
pop
mov
jge
flds
dec
rcrb
imul
fwait
sub
sar
test
lcall
cmp
add
sbb
xor
xlat
mov
or
fnstsw
test
iret
fnstcw
add
mov
jne
faddp
push
cld
ja
xchg
cmp
xchg
ret
mov
gs
jp
cmp
addb
aaa
das
pop
lret
mov
js
in
ret
pusha
leave
add
movsb
imul
jge
xor
dec
insl
pusha
arpl
fbstp
std
jno
xchg
arpl
mov
out
insl
pop
in
scas
xor
mov
dec
lods
arpl
outsl
ret
pushf
jp
inc
push
and
inc
orb
sub
add
sub
adc
stc
not
and
test
sti
xchg
dec
push
push
rcr
negb
imul
int
daa
push
pop
dec
add
sbb
lock
adc
popf
int3
fildl
add
mov
ja
mov
mov
fs
adc
roll
loopne
fsts
or
fimuls
sti
cmpsl
das
stos
pop
dec
inc
xorl
outsb
jmp
scas
jns
fcomps
iret
mov
ss
cmpsl
lret
mov
scas
lods
xchg
stos
popa
mov
add
cmc
xchg
and
cmp
andl
mov
aad
scas
rcll
xor
aad
in
jmp
stos
cmp
xchg
jl
scas
and
xchg
push
jle
lods
fdivrp
iret
fs
mov
call
cltd
push
sbb
cmp
fxch
sbb
into
cmp
push
dec
inc
enter
lods
sbb
lods
mov
mov
xor
dec
dec
rcrb
xor
es
pop
out
dec
repz
mov
lock
mov
push
sbb
inc
pusha
sbb
pop
movsl
mov
gs
jge
inc
or
mov
js
add
sbb
fiadds
gs
xor
mov
movl
mov
mov
addr16
scas
add
pop
push
es
adc
ja
lahf
test
pop
xor
jge
cmpsl
inc
popa
cmp
daa
xchg
les
addr16
inc
jecxz
mov
cs
add
in
or
lret
js
and
stos
xor
lods
pushf
adc
and
ss
int3
js
xchg
mov
mov
or
jp
int
mov
fsubrl
xor
gs
outsb
ret
jmp
adc
add
enter
jo
mov
lods
ficomps
adc
xchg
push
lret
dec
mov
insb
adc
shrd
lea
push
adc
lcall
inc
imul
mov
xchg
xor
flds
std
mov
inc
cmp
cmp
aam
add
xchg
movsb
push
insb
xchg
mov
add
stos
jo
jle
adc
stc
mov
rolb
add
mov
jno
repz
inc
ss
cld
js
push
jbe
inc
mov
repz
shlb
pop
sbb
xchg
fldenv
and
enter
test
fstps
or
arpl
xchg
leave
outsl
out
and
sbb
sbb
cltd
popf
lock
ljmp
mov
cmp
mov
sub
inc
pop
mov
insb
movl
or
popa
mov
pop
ret
jno
jmp
xor
mov
add
scas
fnstsw
mov
push
pop
pop
add
stos
sub
imul
inc
daa
addb
pop
aam
sbb
cli
fidivl
sub
jg,pn
sub
add
pop
jo
add
lea
mov
fisttpl
mov
sti
jecxz
push
or
dec
test
xchg
jbe
mov
clc
loopne
notb
pop
jmp
jecxz
ss
push
mov
mov
mov
push
push
sbb
stos
cltd
test
cmp
cmp
add
into
fisubrl
mov
xor
notl
hlt
pop
in
inc
dec
mov
dec
stc
cmc
xor
fidivs
inc
jns
mov
inc
dec
stos
iret
push
into
sbb
inc
mov
sbb
roll
add
rcll
cs
adc
pusha
pop
xchg
fldenv
mov
ja
mov
jns
mov
ja
int3
push
cmp
or
repz
and
adc
movsb
or
xchg
cmp
fucom
mov
jbe
xor
enter
jge
push
sbbb
inc
adc
pop
xchg
mov
lahf
push
inc
add
int3
cmc
xchg
insb
loope
or
das
cld
and
pop
dec
mov
cmp
xor
dec
lds
mov
stc
mov
add
cmc
sub
ret
xchg
push
out
mov
mov
idiv
or
stos
flds
push
mov
jno
lahf
pop
stos
or
mov
loopne
xor
or
mov
or
or
dec
rcl
test
gs
cmc
rclb
sub
push
ss
filds
inc
sub
inc
icebp
loopne
jno
push
idivl
xor
mov
jg
sub
js
outsb
icebp
adc
cmp
xchg
inc
jg
stos
fists
lea
roll
dec
flds
xchg
sub
mov
subb
aaa
fcoml
mov
ja
push
call
mov
cltd
call
pop
push
inc
in
lret
jecxz
jmp
das
push
xor
jmp
xor
and
mov
fs
cmc
popf
push
ja
dec
push
jno
dec
lds
push
shlb
idivb
cltd
shlb
push
cmpsb
add
sbb
pop
dec
sbb
xchg
cmp
in
andl
push
cmp
mov
xor
jb
mov
jp
cwtl
add
call
clc
repz
adc
jg,pt
dec
sti
cli
in
loop
mov
in
cli
mov
and
lds
cmp
cmpsb
push
sbb
and
jb
xor
mov
jecxz
inc
aaa
push
jle
xlat
hlt
pop
push
icebp
jo
andb
arpl
insl
jno
xchg
xor
or
add
jo
faddp
fcmovnbe
mov
cmp
int3
shlb
jno
jecxz
ss
push
in
mov
sbb
fcomi
sbb
cmp
cmp
jb
cmp
sbb
ss
jnp
cltd
aad
mov
inc
inc
mov
dec
lds
fidivrl
lcall
out
aam
sbb
xchg
pop
pop
pushf
cmpsb
sub
inc
fincstp
sbb
and
push
in
lahf
out
cmp
ret
lock
subl
leave
add
or
xchg
clc
shl
pushf
lods
jno
repz
loope
out
mov
pop
out
jne
pushf
cmp
or
jb
jmp
xor
push
inc
scas
icebp
push
loop
sub
loopne
repnz
mov
mov
cmp
aaa
outsl
xchg
push
push
cmc
into
mov
cmp
outsl
add
daa
insl
pop
mov
push
icebp
xor
push
mov
imul
xchg
add
pop
pop
out
loope
stc
xchg
mov
and
sbb
divl
pop
dec
mov
mov
push
pop
das
pop
push
dec
jnp
xchg
repz
fidivrl
mov
pop
orl
addr16
xchg
imul
adcl
mov
mov
mov
adc
xor
sti
in
xchg
pop
mov
adc
loop
stos
cwtl
movsl
data16
push
pushf
pop
inc
cwtl
mov
shl
jl
pop
stc
scas
xchg
out
xchg
jb
or
mov
popa
push
stos
inc
aam
xchg
jnp
xchg
fs
push
cmp
outsl
stos
mov
jb
loope
adc
cld
ss
pop
lods
ja
jge
mov
in
lods
pop
inc
js
data16
mov
jno
pusha
xchg
and
push
mov
orl
jg
gs
call
sbb
xchg
fiadds
push
mov
cmp
aam
jno
dec
fst
push
shl
dec
jae
hlt
add
js
mov
aaa
movsl
xor
stos
movsb
fwait
cli
dec
movsb
lcall
jae
sub
cmp
iret
sub
lock
fldt
call
stos
and
pop
xor
pop
or
leave
mov
out
sbb
mov
insl
jae
xchg
fs
jae
adc
test
je
ror
scas
shll
push
pop
mov
outsl
mov
push
ror
js
and
pop
cmp
sbb
sub
aam
or
cmp
pop
mov
xchg
push
adc
out
pop
fiadds
mov
jle
xor
repnz
out
hlt
jge
cmpsb
lea
insl
xchg
mov
sbb
outsl
sahf
cs
or
dec
roll
dec
nop
and
xor
aam
jecxz
cs
sub
jae
mov
fwait
jge
add
jno
xchg
or
xor
out
or
cmp
xor
mov
gs
mov
mov
je
jl
push
xchg
sbb
xchg
mov
push
cmp
rcrb
jnp
lcall
cmp
icebp
xchg
loop
sti
dec
mov
pop
adc
pusha
repnz
data16
mov
and
rcr
push
inc
jmp
sbb
cmp
xor
or
mov
clc
clc
add
adc
inc
rcl
orl
mov
fcompl
pop
loope
push
add
cwtl
adc
notb
xor
cmpsl
rolb
pop
fstpl
out
ds
xchg
arpl
cmp
dec
push
movsl
push
xor
jmp
stos
add
pushf
lahf
aad
out
leave
lock
sub
push
add
jns
inc
lret
sti
jo
mov
push
dec
shll
add
lods
enter
daa
in
push
mov
lcall
test
pop
fldl
xor
adc
loope
dec
pop
xchg
push
xor
aad
les
je
or
cli
lret
pushl
aas
pop
inc
xchg
movsb
test
dec
cmpsl
sbb
dec
and
xchg
jnp
repnz
repz
cli
push
sub
arpl
outsl
pushf
stos
add
int
mov
or
ja
addb
js
dec
js
adc
mov
add
aaa
sbb
in
lcall
cmp
mov
les
dec
mov
jo
sub
push
or
arpl
loop
cli
jbe
sahf
hlt
push
mov
xor
xrelease
jne
xor
xchg
inc
cmp
call
dec
jge
fsts
cmp
pusha
stc
sbbl
outsb
lahf
mov
push
pop
mov
gs
fs
int
and
sub
fimuls
push
sub
and
xor
stos
cmpsb
je
cli
testl
nop
mov
iret
jle
cmp
shlb
mov
cwtl
and
push
sbb
leave
ret
repz
mov
lret
arpl
insl
and
push
nop
fistpll
jle
mov
repz
mov
inc
out
inc
pop
pusha
stos
and
push
nop
jns
dec
mov
xor
mov
outsb
push
add
fmuls
movsl
pushf
popa
and
mov
xchg
dec
cmp
imul
clc
mov
adc
into
inc
stos
adc
hlt
xchg
js
and
jb
mov
xchg
adc
add
mov
jmp
loop
cmp
jb
cwtl
sbb
bound
xlat
push
add
mov
xchg
jnp
leave
ljmp
sarl
pop
push
mov
push
rclb
push
aas
scas
or
out
lret
mov
subl
add
jl
dec
inc
sub
orb
and
ljmp
push
mov
mov
sub
and
movsb
aaa
imul
pop
push
push
lahf
jl
enterw
into
in
push
lahf
dec
jge
pop
dec
arpl
xor
mov
mov
or
aam
lds
andl
subb
sbb
popa
jp
and
out
adc
mov
mov
test
js
push
jp
push
fcos
dec
cmp
shlb
orb
lret
hlt
xor
sti
inc
xor
std
and
mov
mov
mov
ljmp
ret
lret
push
cmp
insl
fcmovnu
add
lods
push
and
jns
out
int
sbb
js
dec
js
jp
sbbb
or
xchg
mov
xchg
and
jp
inc
scas
jns
push
add
rorb
sbb
rcr
adc
sti
jmp
xchg
inc
testb
scas
jmp
dec
fcompl
sub
cmp
cmpsb
outsl
cmp
repnz
xchg
call
outsl
inc
add
mov
int3
ret
test
ss
daa
adc
add
mov
imull
test
in
pop
aad
jb
bound
jbe
lcall
mov
sub
mov
fisttpl
fbstp
in
imulb
dec
push
sbb
into
push
inc
inc
dec
cwtl
inc
xorl
aam
push
loop
outsb
dec
testl
out
adc
cmp
pusha
mov
repnz
jns
cmpsl
mov
iret
pop
stos
cs
loopne
jo
pusha
shlb
xchg
neg
in
sbb
cvtpi2ps
xor
jle
lret
push
hlt
mov
inc
mov
repz
push
mov
aas
cmpl
aad
dec
dec
mov
loop
sub
cmp
rorl
cwtl
mov
sub
or
leave
cmpl
sti
fdivs
lret
rcl
push
jo
js
jns
fcomps
lods
mov
push
cmp
orl
and
repz
dec
cwtl
push
add
movsl
inc
lock
out
xlat
cmp
jecxz
xchg
movsl
out
or
mov
dec
test
fs
sub
or
jae
icebp
movsl
sbb
fs
mov
daa
jns
inc
inc
adc
stc
rorl
mov
lret
cltd
in
mov
cli
xchg
sub
lds
dec
xor
subb
xchg
mov
cmp
in
out
mov
mov
sahf
ljmp
mov
pop
sub
mov
jl
mulb
cmp
call
cmp
dec
mov
push
xor
leave
mov
mov
mov
and
jg
test
lret
jle
pop
dec
mov
xor
xor
bound
into
sahf
xor
and
xor
adc
jns
je
leave
pop
add
push
test
lods
nop
mov
ret
mov
or
or
mov
xlat
fmull
stos
xchg
mov
jne
and
inc
cmp
cmpb
imul
shlb
xchg
pop
popf
lods
xchg
loop
and
inc
add
cmp
sbb
lds
add
adc
sbb
aas
sub
sbb
adc
popa
movsl
sub
sub
or
inc
lds
pop
add
mov
icebp
xchg
das
rol
xlat
sub
rcrl
mov
or
mov
dec
fldt
push
add
adc
mov
out
jmp
les
mov
shrl
dec
nop
in
aas
push
push
mov
and
aaa
jb
mov
ss
sub
into
push
mov
dec
rolb
data16
cld
daa
add
outsl
cmpsb
cmp
iret
out
dec
ret
and
adc
lcall
cmp
popf
cmp
repz
xor
in
inc
fmull
jnp
push
xchg
not
daa
mov
and
sbb
cmp
push
in
imul
shlb
daa
js
inc
push
pop
adc
cld
in
cli
add
cmpsb
mov
data16
movsl
mov
bound
pop
fs
adc
dec
fstpt
mov
push
mov
arpl
inc
in
xchg
or
hlt
dec
add
ret
jle
mov
mov
inc
inc
ret
adc
xchg
xchg
outsb
lods
push
push
push
xchg
mov
fildl
mov
jmp
sub
fsubrl
lcall
loope
adc
xor
pop
jbe
pop
test
jae
addr16
mulb
fcom
cmc
cmovg
fadds
sahf
mov
inc
mov
inc
mov
pop
cmp
fucomi
loopne
xor
adc
cmp
xchg
mov
mov
ficoms
inc
inc
and
outsl
sahf
mov
fnstcw
adc
add
sub
mov
and
imul
pop
hlt
lret
mov
xlat
insb
enter
or
fwait
pushf
in
xorl
into
icebp
cs
hlt
jp
cmp
popa
mov
xchg
mov
aas
int
repz
clc
xacquire
int
daa
jmp
and
mov
or
loopne
movsl
aaa
mov
xchg
or
push
lret
loopne
orb
shll
test
pop
xor
or
xor
repnz
sahf
mov
bound
stos
mov
lea
dec
mov
fldl
mov
jno
stos
push
mov
inc
mov
test
lock
jg
imul
push
insb
ss
test
test
jmp
mov
cli
cs
in
adc
xor
pop
jecxz
std
fwait
push
shll
mov
clc
ret
and
lret
pop
inc
daa
leave
inc
add
jmp
mov
pusha
or
arpl
cld
xor
pop
xor
rcr
mov
xchg
fwait
scas
add
repnz
je
or
dec
cmp
mov
inc
adc
jl
notb
repz
fwait
mov
sub
std
jge
or
in
pop
cmpb
daa
shr
nop
dec
stos
ret
rolb
ljmp
rcrb
jnp
pop
shlb
scas
xchg
sub
das
jp
pop
fs
adc
cmp
cmpsb
jecxz
jb
sbb
jae
nop
mov
xor
cmp
mov
sarb
jecxz
or
cli
int3
and
cmpsb
adc
ljmp
dec
enter
or
jmp
xchg
pop
popa
scas
jmp
push
mov
xchg
cmp
mov
ret
sub
clc
stos
int3
call
mov
pop
lods
out
leave
aad
dec
stos
cs
xchg
add
sub
and
es
es
adc
ret
mov
repz
adc
push
fnsave
xor
mov
dec
cmc
testb
ficomps
xor
mov
lret
ret
fisubrs
mov
repnz
adc
repz
xchg
inc
sub
fwait
and
push
cltd
xchg
mov
sbb
cmp
cmpsb
int
sub
cmpsb
ret
adc
cwtl
fsubs
mov
or
mov
sbb
inc
in
cmp
and
sar
jmp
dec
pushf
ljmp
mov
cmc
mov
dec
aam
aas
adc
dec
mov
ja
cwtl
test
mov
mov
mov
dec
or
imull
inc
fmull
pop
in
cmc
xorb
pop
sti
xor
mov
mov
pop
xlat
lods
mov
fistpll
into
cmp
pop
xor
sbb
or
mov
mov
mov
inc
movsb
or
push
lahf
mov
push
mov
gs
jo
xchg
jp
sbb
inc
rcrl
aaa
pop
div
fprem
cli
adc
dec
mov
lret
ljmp
cmpsb
adc
loopne
fcompl
cmp
inc
inc
sbb
or
out
xchg
adc
mov
inc
lea
mov
and
out
fists
cltd
xor
xor
cmpsb
aas
push
addr16
pop
inc
mov
mov
jecxz
xor
int3
sub
sub
mov
vpminsw
lods
bound
fldt
sbb
loopne
jnp
shll
stos
and
fistpl
jp
push
cmpsl
xor
shlb
inc
and
divl
enter
pop
push
or
inc
test
jnp
rclb
fs
push
or
into
notb
xor
push
pop
jbe
fidivrs
mov
pop
sti
js
and
inc
mov
push
adc
mov
sub
sub
push
xor
sub
add
imull
jne
mov
jmp
outsb
sbb
mov
ss
fwait
popf
stos
sub
daa
cld
ret
shrb
jecxz
jmp
jecxz
stos
jno
gs
adc
lods
sbb
push
fdivs
sub
in
inc
adc
lods
lcall
call
jge
inc
out
pop
mov
sbb
xor
icebp
in
hlt
int3
sti
repnz
jg
add
cs
into
lock
jne
or
dec
and
or
jns
cmc
dec
lret
stos
in
sub
lcall
pop
cmc
push
cmp
sbb
ret
sbb
enter
mov
sub
dec
lock
xor
cmpsl
sub
notl
jnp
xchg
jecxz
push
sub
xchg
aad
mov
xchg
push
xor
push
cltd
je
inc
cmp
daa
repnz
es
pop
popa
pop
xchg
dec
pop
std
dec
cmp
int
addr16
xchg
jmp
xor
push
xor
lea
adc
aam
pop
stos
xchg
scas
int3
jle
leave
sbb
test
cmp
xorb
int3
add
ss
xor
rcrb
cmc
push
fldl
in
dec
pop
or
mov
and
adcb
xor
sub
mov
out
or
sahf
and
jns
je
pop
ja
cld
add
fmulp
adc
je
fimuls
push
xor
jbe
cmpsl
push
jg
cmp
and
dec
mov
inc
sbb
int
js
fxtract
mov
pusha
adc
sub
xchg
xchg
cwtl
iret
mov
rolb
in
in
test
or
lret
iret
xchg
adc
pop
push
iret
pusha
out
push
int3
das
jo
dec
mov
jg
xchg
nop
xchg
pop
pop
filds
cmp
xchg
lods
cmp
je
sahf
push
inc
mov
rcr
stc
bound
shl
in
cmp
mov
or
icebp
cmpsb
out
mov
jb
xchg
ret
fs
stos
mov
mov
fisttpl
sbb
rclb
pop
mov
dec
mov
inc
iret
mov
lahf
sbb
mulb
in
aad
push
lods
push
cmp
mov
test
adc
std
cmpsl
int
pop
ss
xor
sub
sbb
lock
sub
pushf
sbb
mov
add
mov
xchg
xor
add
mov
jl
int3
stc
pop
sub
push
mov
enter
in
lcall
cwtl
lods
push
in
ja
testb
cmp
leave
dec
imul
jmp
push
das
daa
in
push
cmc
shll
pop
xor
cmp
or
insb
mov
sbb
dec
add
in
das
xor
add
pop
xchg
out
dec
roll
mov
pop
shll
pop
adc
xchg
sbb
pop
sbb
das
push
pop
test
mov
cmp
ficompl
pushf
mov
rcrl
movsl
les
lea
std
mov
dec
sub
xor
adc
mov
out
dec
dec
ds
fstps
pop
lahf
mov
repz
cltd
arpl
aad
adc
and
aam
je
jl
lret
int
push
lea
jp
imul
jecxz
push
test
movl
outsb
das
cltd
or
outsl
adc
data16
xor
jno
sub
inc
ret
mull
mov
outsb
stos
lahf
inc
clc
sub
inc
loopne,pn
nop
dec
mov
sub
inc
outsl
lods
adc
cld
lahf
rcll
das
int
aad
mov
sbb
fnsave
out
push
ljmp
cmpsb
or
sbb
dec
add
ficompl
inc
scas
inc
xchg
lahf
cmpsb
enter
lods
xchg
lods
cmp
ljmp
bnd
cmpsl
inc
fst
xor
lods
icebp
push
cmp
jbe
xchg
js
mov
in
and
stc
pop
push
test
push
call
ds
mov
mov
shrl
sub
fisttpll
mov
add
cltd
stos
stos
pop
cs
dec
out
leave
xchg
idivl
xchg
orl
movsl
fprem1
mov
imul
adc
inc
dec
in
inc
in
js
lret
aad
cld
roll
into
dec
jl
outsb
fmulp
cmp
cs
add
lahf
mov
xor
mov
call
imul
pop
insb
in
gs
and
bnd
add
sahf
ret
out
push
mov
leave
push
or
iret
pop
into
mov
ret
xchg
lahf
sarl
test
inc
or
mov
cmp
pop
push
dec
aam
jae
inc
pusha
xchg
pop
mov
shll
mov
ret
dec
add
xchg
or
cmp
les
sbbl
sbb
or
mov
es
iret
pushf
or
mov
xchg
sub
pop
out
sbb
mov
or
jbe
inc
jae
fwait
aas
pop
call
rorl
add
adc
adc
mov
dec
cmpsb
icebp
decl
jno
cmpsb
mov
jl
dec
or
jg
popa
jp
imul
mov
int
sbb
in
out
push
addr16
or
push
dec
xor
icebp
jb
addr16
add
jp,pt
dec
mov
cmpsl
stos
adc
fdivr
ror
stc
and
in
sahf
jnp
sub
xor
cmp
dec
in
sub
je
push
addl
mov
pushf
lret
repz
xorl
xchg
push
mov
fstps
es
mov
or
data16
inc
inc
add
and
int3
incb
mov
into
xor
jge
rcr
add
push
mov
add
add
add
cs
lcall
into
dec
mov
xchg
addr16
xchg
stos
add
mov
lret
pop
xchg
pop
addb
jbe
jns
and
inc
movzwl
and
shll
imul
xor
mull
aam
imul
adc
shll
loope
sub
shl
test
stos
lods
int3
mov
iret
inc
dec
pop
jno
dec
cs
mov
jb
ds
roll
fwait
ljmp
stos
psadbw
and
mov
pop
dec
push
push
adc
push
pop
push
dec
dec
cmp
test
ret
cwtl
sub
sahf
or
and
pop
pop
push
je
mov
enter
push
dec
ret
fimull
rclb
data16
pop
or
push
mov
jae
xchg
lods
and
push
inc
inc
mov
aas
inc
inc
mov
sub
mov
xor
sbb
lret
out
xchg
repnz
ja
lods
xlat
aad
test
xor
jl
test
scas
jno
insb
cli
push
jl
sub
cmpps
call
inc
je
xchg
mov
scas
mov
or
mov
xchg
and
jg
cwtl
push
and
dec
mov
and
pop
test
inc
loopne
push
and
sub
jecxz
shl
and
std
add
out
aaa
call
out
mov
adc
adc
out
xor
mul
orl
sbb
mov
dec
push
dec
pop
pop
shll
lahf
bnd
lds
xchg
pop
jecxz
mov
jle
mov
pop
outsl
addb
inc
pop
fdivl
jo
add
nop
lcall
cltd
bound
cmc
cwtl
pop
push
lret
aas
stos
jg
push
and
stos
loopne
icebp
iret
scas
sti
xorl
cs
lock
sub
pop
dec
push
mov
mov
xor
arpl
pop
jp
sub
ficompl
inc
and
loopne
cmp
jg
test
push
xchg
push
cmp
jp
pop
pushf
sarl
inc
leave
outsl
mov
cwtl
sub
out
imul
push
imul
sbb
inc
rolb
mov
insb
xor
aad
inc
fisubs
push
mov
adc
push
cli
call
inc
adc
pushf
jbe
pop
popa
mov
std
ret
out
add
hlt
xchg
sub
fnstenv
lds
in
test
dec
orb
inc
or
in
pop
mov
int3
sbb
mov
std
testb
push
imul
pop
out
and
fcompl
aam
xchg
ds
loope
sbbl
ss
mov
jmp
cs
faddp
sbb
mov
subb
xchg
sarl
mov
and
clc
push
mov
push
jb
sbb
outsb
sub
or
jp
xor
xor
dec
mov
shll
jecxz
lret
sti
xor
inc
das
notb
dec
mov
lock
jle
and
add
repz
dec
xor
cwtl
push
pop
push
and
stos
les
dec
lahf
sbb
push
jnp
sub
sbb
lret
add
cmp
jp
sbbl
dec
loopne
or
lahf
push
mov
mov
loope
jns
pushf
movsl
push
loope
xchg
dec
lock
fistpll
cmp
add
xchg
push
sub
fsubrl
dec
xlat
or
jo
push
cmp
or
int3
lret
das
lahf
insl
rorb
popa
and
cld
or
push
or
test
mov
jns
hlt
dec
jne
mov
sbb
and
shr
mov
rcrl
icebp
pop
xor
leave
xchg
add
dec
cld
adc
aas
jne
je
lahf
xor
pop
xchg
dec
arpl
cmp
cmp
push
add
ret
xor
push
scas
or
adc
pop
insb
and
mulb
jb
and
sti
cltd
dec
bound
addr16
sub
mov
or
mov
movsb
mov
xor
cmp
rcll
sbb
std
shrl
pop
or
in
adc
jg
jp
cmpsb
ret
jo
sbb
je
inc
arpl
clc
push
pop
scas
lock
push
inc
in
sbb
jne
mov
pop
icebp
mov
mov
add
icebp
and
addr16
in
cmp
push
js
outsb
push
into
sub
sub
cmpsl
or
add
mov
shrl
inc
fstps
pushf
xchg
xor
lret
ja
add
and
mov
cs
cmp
js
mov
stos
mov
mov
xor
loopne
inc
cld
icebp
rclb
sbb
cmp
xlat
pop
mov
leave
fsubrs
sti
or
sbb
stos
stos
out
leave
jo
push
sbb
lods
addl
rcr
sub
dec
mov
jb
mov
mov
jnp
insl
mov
insl
cltd
shll
mov
adc
sub
sbb
adc
jp
and
outsb
call
popf
test
decb
pop
pop
cmpsb
push
adc
je
out
cmp
rclb
and
mov
cwtl
gs
adc
adc
test
fistpl
fmuls
pop
sarl
jmp
xchg
sbb
mov
sub
dec
pop
insb
pop
adc
mov
jns
mov
aas
scas
jne
pop
out
push
jno
fcompl
in
jns
or
int
sbb
aaa
add
cmp
jno
mov
inc
in
xchg
lret
adc
sub
mov
dec
out
outsl
xchg
test
push
inc
lret
rcl
popa
sbb
ja
pop
adc
cmp
cmpsl
test
pushf
sub
sbb
jae
jbe
loope
push
mov
xchg
sbb
je
ljmp
mov
mov
ja
mov
xor
cmp
xchg
mov
push
add
adc
bound
push
mov
push
int
xchg
mov
loopne
iret
test
add
dec
jmp
mov
cmp
cmpsb
into
fsts
inc
mov
aad
inc
cmpl
xor
jecxz
push
fnstenv
fisubs
arpl
out
subl
or
cmp
sbb
and
push
jp
adc
insl
mov
push
aas
pop
aaa
push
jg
adc
loopne
lods
hlt
or
sbb
inc
cmp
loop
fisttps
aam
mov
jl
fisttpl
dec
or
scas
in
or
and
pop
sbb
jmp
aam
xchg
xor
out
sti
sub
mov
sub
mov
and
xchg
push
jle
mov
mov
sbb
sub
in
aad
cmpsl
insb
mov
add
and
inc
cltd
clc
jmp
mov
adc
xor
adc
fnstsw
sub
fimuls
pop
dec
or
testb
adc
dec
xchg
cmp
mov
repnz
jmp
jb
imul
sbb
dec
jmp
adc
ret
inc
stos
adcb
lods
in
jnp
int3
cmp
mov
std
pop
and
pop
pop
loop
adc
pop
inc
pop
mov
stos
lds
mov
xchg
loope
stos
ds
fcmove
add
add
jle
and
adc
cmp
bnd
push
cmp
rcrl
mov
test
fs
sti
sti
jne
fsubr
sahf
and
pop
insl
inc
fisttps
repnz
mov
cltd
lret
int3
add
jns
jb
popf
outsb
mov
stc
outsb
mov
repz
mov
sub
lods
mov
adc
and
xchg
cmp
mov
jo
add
sub
cmc
xchg
scas
sub
aaa
mov
pop
call
xchg
mov
in
js
jae
mov
cmp
int3
leave
int3
push
inc
test
sbb
inc
lods
lret
ss
sbb
push
and
jns
mov
popa
push
es
jbe
cmp
insb
sbb
iret
lock
shrb
fisubrl
mov
arpl
inc
ljmp
mov
outsl
fidivl
rcr
or
xchg
cwtl
outsl
push
mov
jb
cld
iret
xchg
sub
adc
mov
addb
or
sarl
adc
jno
xor
cmp
or
pushf
shl
xchg
add
or
inc
ja
popa
fldt
xor
and
mov
mov
mov
xor
inc
scas
xor
mov
repnz
add
daa
xchg
add
insl
mov
cmp
pop
insl
cmpsb
mov
sahf
xchg
ficompl
adc
add
fidivrs
xchg
xchg
jg
scas
nop
jle
cmp
ret
shrb
call
notrack
push
ffreep
lahf
and
and
mov
andl
and
repz
out
push
cmp
inc
gs
frstor
adc
adc
jnp
mov
sarl
sub
test
pop
dec
add
adc
test
call
jmp
addr16
jmp
outsb
push
arpl
paddq
leave
mov
orl
jne
inc
data16
xor
xchg
pusha
insb
sub
jno
mov
dec
push
fistl
pop
inc
andb
xchg
lea
mov
fildll
in
xor
cld
lret
imul
pop
xchg
mov
or
in
aaa
shlb
mov
lcall
lods
dec
rcll
xor
xchg
popa
push
pop
dec
inc
xchg
cmp
add
cmpsl
idivl
les
shl
outsb
pop
les
aam
js
add
testb
popf
push
fidivrl
subl
gs
inc
call
xchg
addr16
jge
js
jo
jg
mov
push
cmp
stc
addr16
pop
push
stc
popf
push
add
ds
mov
das
dec
adc
fistpl
dec
pop
cmpsl
push
dec
mov
xchg
fdiv
iret
stc
daa
mov
std
jp
lock
jg
add
sbb
in
lahf
mov
repz
xchg
push
push
insb
in
inc
es
mulb
inc
fldcw
mov
mov
out
negl
and
cwtl
sarl
addl
inc
ss
adc
mov
and
call
adcb
nop
sbb
rorl
mov
gs
or
inc
decl
xchg
adc
sub
push
outsb
adc
sub
in
cltd
js
popf
lds
or
cmp
stc
jns
gs
or
js
mov
mov
mov
xor
pushf
mov
addr16
dec
cmp
scas
popl
jbe
js
jae
cmc
lock
ret
mov
cmp
int3
dec
loop
in
out
dec
push
add
dec
out
sti
cmc
inc
sbb
movsl
loopne
cmp
stos
dec
dec
addb
hlt
dec
popa
push
mov
cmp
mov
gs
push
outsl
das
push
jb
stc
out
cmp
or
and
repnz
xlat
mov
xor
in
icebp
cs
shrl
mov
and
xor
fisubs
adc
roll
sub
divl
fst
pop
int
imul
shll
xchg
sbb
sub
push
call
rorb
adc
pop
inc
ret
add
ss
jl
or
inc
lods
jnp
roll
scas
sti
icebp
push
or
push
aaa
ds
loop
inc
in
divl
enter
test
in
sub
shr
xor
rolb
mov
fucomip
es
jl
add
std
pop
cmpsb
cwtl
jecxz
or
push
iret
fbstp
sub
cltd
in
in
pop
imul
lods
dec
add
repz
notb
clc
sub
lea
mov
mov
add
inc
jno
mov
add
or
rcll
out
stos
pop
jo
jmp
dec
int
jl
fwait
sbb
dec
or
rcll
jo
push
or
leave
dec
jne
ret
push
lret
jns
jb
fwait
or
adc
dec
xlat
mov
aam
test
inc
out
and
outsb
int3
mov
push
mov
outsb
repnz
inc
out
xchg
mov
push
rcrb
sbb
in
xchg
xlat
xchg
add
mov
je
out
js
mov
aad
out
int
fldl2t
sbb
jl
sub
ret
xor
imul
and
push
xchg
lcall
and
imulb
sarl
jp
stos
dec
stc
mov
out
movhps
pop
xor
add
ds
pop
push
test
sub
adc
cmpsl
push
arpl
or
adc
stos
add
jns
scas
cmpsl
push
call
sbb
jle
inc
inc
fidivs
jnp
mov
cmp
xchg
fcomip
xchg
jmp
fimuls
cmp
sti
mov
dec
orb
hlt
or
lcall
in
mov
popf
and
sub
roll
push
hlt
xor
std
cmpsb
jmp
mov
pop
adc
loopne
jo
xor
jp
in
clc
rcrl
aam
or
push
xor
inc
sarl
pop
lret
cmp
mov
pop
stos
dec
lea
xchg
lock
pop
aaa
mov
dec
lock
fnstsw
or
repz
loop
ljmp
arpl
sub
loope
loope
cmp
jge
sub
push
in
out
lcall
movsl
popa
mov
ret
rcrb
aam
cld
sbb
inc
mov
mov
and
xchg
mov
mov
fwait
bound
cmp
movsl
add
add
xor
out
loopne
pop
fcoms
jge
cmp
sbb
mov
imul
push
adc
xorl
sbb
mov
mov
and
jo
jne
outsb
sbb
xchg
mov
outsb
lea
push
fnsave
cld
mov
jp
sbb
or
mov
shr
mov
sub
lret
lds
mov
fs
repz
pusha
xor
and
cmp
adc
in
xchg
daa
sub
mov
pop
mov
std
jne
dec
scas
jl
fwait
pop
enter
notb
cmp
negb
popf
pop
test
fidivrs
pushl
dec
and
movhps
in
mov
mov
cmp
pushf
ds
jae
and
cmp
cmp
int
popf
in
roll
sbb
cmp
xchg
addl
jg
push
mov
arpl
ljmp
xlat
push
dec
addr16
bound
loope
imul
jb
and
mov
sahf
push
push
pop
fcmovbe
gs
push
mov
shl
sbb
popa
and
mov
cmpsb
adc
dec
cmp
idivb
aas
push
jnp
shrl
and
jnp
adc
xchg
rcrb
and
mov
sti
imul
test
add
dec
jecxz
cltd
add
inc
or
lret
dec
ds
inc
pop
cmpsl
scas
mov
add
ret
jp
pop
shl
mov
and
loope
pop
push
andb
sub
mov
cmc
pushf
cli
cwtl
dec
add
enter
clc
fdivrl
pop
test
or
sbb
dec
cmpsl
jne
loop
enter
and
adc
imul
jp
and
lcall
outsb
add
jmp
in
movsl
stc
add
inc
scas
test
mulb
into
inc
add
adc
add
call
mov
push
xor
lret
icebp
adc
mov
ffreep
xor
and
jno
sub
jg
push
fnsave
aad
enter
in
dec
dec
mov
pop
push
mov
mov
pop
mov
sahf
pop
xchg
add
bound
pusha
cltd
or
ja
or
lods
mov
and
inc
adc
shl
cmp
add
mov
mov
out
call
push
mov
add
adc
cmp
popl
lds
inc
pusha
movsl
stos
pop
in
insl
pusha
mov
push
pop
lods
push
inc
ds
adcl
sbb
add
xchg
sub
xchg
xchg
arpl
cmp
scas
push
xchg
outsl
clc
bound
mov
rolb
pop
xchg
daa
lret
cmpsb
lods
cmpsb
das
ret
outsb
push
popa
ret
pop
mov
xchg
iret
jne
je
nop
cmp
fsubp
lods
fildll
ds
cmp
leave
fmull
adc
sbb
dec
test
insl
sbb
dec
or
syscall
stos
aam
sbb
xlat
fbstp
push
call
pop
fs
outsl
out
addr16
insb
lea
push
out
or
shl
cmp
pop
inc
sar
rcl
dec
outsb
fsubl
and
hlt
cwtl
ret
mov
and
out
dec
fstps
test
int3
aas
sub
dec
std
jecxz
fidivs
xor
add
cltd
das
jle
fnstenv
push
cmpsl
fstpt
add
shrb
mov
mov
jmp
lcall
sub
stos
adc
lret
hlt
or
pop
cmpsl
inc
push
ljmp
mov
xchg
aas
dec
inc
inc
mov
inc
test
sub
dec
sub
cmpsb
hlt
pop
stos
call
dec
cmp
in
hlt
cld
mov
clc
xor
adc
inc
je,pn
sahf
mov
jge
pop
push
lock
or
popf
sbb
xor
je,pt
xor
btc
aas
aaa
iret
push
mov
jnp
enter
repz
cmp
pop
dec
nop
repnz
gs
cmp
jle
fisttpl
sbb
or
loopne
into
mov
xchg
fbld
movsl
push
jae
push
lret
into
lret
push
adc
subb
loopne
or
repz
add
stos
nop
pop
loop
test
cmp
jg
mov
inc
ds
imul
aaa
test
add
daa
sub
pop
push
inc
mov
mov
xchg
pop
cmpsl
pop
js
or
mov
add
push
jnp
rcll
arpl
rcrl
jl
fwait
add
icebp
lgs
or
shrl
pusha
cwtl
adc
fcompl
pop
rcr
xchg
stos
jne
or
mov
jb
inc
adc
lods
inc
hlt
xchg
inc
into
or
or
cwtl
rolb
pop
shll
std
imul
xor
inc
sub
fiaddl
repz
add
stos
lcall
cli
aam
les
xchg
lea
xor
sar
push
mov
divb
inc
jb
jge
sti
pop
cmp
add
cmpsb
aaa
lock
clc
jecxz
mov
xchg
sbb
add
sub
cmp
lret
stc
insl
int
push
shlb
movsb
dec
pop
mov
dec
je
xor
xchg
test
inc
cld
cmpsb
bound
pop
mov
or
div
sbb
xchg
cmp
inc
pushf
arpl
pop
fisttpll
adc
jb
pop
cmp
cmc
in
sub
pop
lds
int
fstpl
xor
aad
ret
bound
push
sbb
push
pop
push
repnz
jp
stos
movsb
stos
sbb
sbb
cmc
popf
xchg
adc
mov
jmp
jnp
adc
push
xor
xchg
mov
out
and
fldl
mov
and
or
and
fimull
add
push
cld
stos
mov
int
jle
rolb
mov
loope
push
mov
in
push
pop
cmp
sub
and
out
test
lods
imul
jno
movsl
ljmp
inc
jae
lods
iret
jl
imul
cmp
fstpt
not
int3
ret
jmp
test
popf
add
pop
and
dec
mov
es
sub
sbb
mov
sub
jo
data16
xlat
in
adc
mov
jne
pop
inc
push
loopne
movsl
int
pop
aaa
scas
jle
js
inc
xchg
shl
xor
test
inc
push
test
pusha
add
mov
jl
out
movsb
scas
loop
cmpsb
subb
loopne
lret
addr16
idiv
vfpclasssd
insb
jmp
in
dec
lods
jo
cmp
mov
jg
dec
mov
lahf
pop
imul
mov
pusha
dec
adc
mov
leave
xor
cmp
mov
mov
mov
leave
loop
daa
mov
mov
push
push
std
add
into
mov
pop
push
lret
mov
xchg
adc
sub
cs
ss
mov
mov
hlt
dec
rcrl
fsubs
rclb
xchg
add
arpl
adc
jne
mov
clc
jge
sbb
inc
add
sbbl
sub
out
lret
push
lret
cmpsl
repnz
mov
add
jnp
mov
out
scas
mov
pop
js
in
mov
lea
push
sub
addr16
xor
mov
mov
clc
popa
add
repnz
xchg
ss
add
push
xchg
pop
mov
mov
inc
inc
arpl
in
leave
imul
or
imul
test
or
ss
mov
aad
mov
push
loope
mov
mov
push
mov
push
sub
adc
push
push
inc
adc
popf
ljmp
mov
subl
pushf
mov
roll
dec
pushf
dec
or
sbb
push
stos
push
pop
add
mov
mov
outsl
cltd
xchg
sbb
popa
mov
mov
fisubrs
lods
cmp
cmpsl
mov
shl
inc
and
and
cs
out
cltd
inc
pop
and
inc
out
sub
sbb
dec
mov
das
cmp
popf
outsb
imul
aam
mov
ds
jmp
loop
sbb
shl
les
sub
mov
pusha
inc
fdivrs
cli
sbb
pop
repz
popf
push
pop
jecxz
mov
lcall
sbb
adc
aad
push
xchg
jae
or
xor
xor
dec
xor
test
mov
cmp
insl
cli
add
sub
gs
in
pop
sbb
dec
addr16
call
push
out
adc
pop
repnz
jo
add
stos
adc
pop
pushf
sarb
sbb
lcall
jge
mov
jae
pop
mov
inc
add
fcmovu
push
mov
sbb
dec
and
lret
inc
sbb
adc
in
mov
mov
jle
gs
xchg
jnp
xchg
adc
nop
adc
jp
xchg
movntq
out
mov
pop
addr16
cmp
rcl
and
adc
mov
popf
jo
loopne
and
stc
popa
fmuls
mov
mov
adc
ret
cmp
stc
movsl
mov
popa
outsl
pushf
ljmp
push
mov
mov
add
and
xchg
aas
pop
minps
cmp
pop
dec
pop
dec
cmpxchg
cmpsl
out
rolb
out
movsl
jp
push
add
mov
or
lcall
bnd
pop
fs
mov
sub
jge
or
lahf
sub
testb
and
pop
int
insb
add
icebp
mov
cwtl
leave
repz
add
lock
adc
aas
mov
jmp
imul
jge
ds
xchg
jbe
inc
scas
fidivs
sub
xchg
pop
scas
inc
sub
inc
and
lahf
push
ret
xchg
cmpsl
add
unpckhps
push
inc
bound
std
sbb
and
or
stos
cmpsl
sbb
push
les
pop
mov
ror
push
push
dec
push
fcoms
outsb
push
std
sbb
add
popl
xor
and
icebp
out
lock
daa
rorl
loop
pop
push
pop
rol
ljmp
testb
and
jle
je
ret
inc
inc
or
jo
dec
data16
cmp
cld
cmp
add
or
sub
cmc
call
sub
xchg
and
dec
cwtl
sub
test
ret
pop
in
testb
mov
inc
jmp
jl
inc
jg
nop
call
jae
xchg
ja
hlt
and
clc
and
inc
pop
gs
lods
cmc
dec
daa
arpl
out
sub
pop
push
addb
insl
mov
pop
aas
pop
sub
cmpsl
xchg
jmp
ds
pop
mov
test
das
push
push
jno
dec
mov
loope
mulb
adc
lock
inc
insb
arpl
mov
lods
pop
adc
out
mov
sbb
jle
cmp
mov
out
ret
out
inc
sbb
nop
outsb
jg
in
jp
pop
orl
pop
fsubrs
xchg
xchg
mov
push
out
sub
dec
cs
pop
subb
cmc
rcr
mov
jge
xor
jb
es
ror
les
sti
xor
xchg
into
popf
movsb
pop
fiaddl
test
dec
mov
cwtl
sti
sbb
fistpl
mov
mov
cmp
leave
jge
push
pop
push
jp
add
or
cltd
push
and
and
rcrl
subb
sbb
push
sbb
push
cmp
data16
xor
fidivs
inc
jb
sub
gs
cli
pop
mov
push
hlt
cmp
dec
or
leave
pop
dec
outsl
jecxz
adc
mov
mov
arpl
push
popa
ljmp
fwait
pop
out
jp
dec
cmp
adc
inc
in
inc
adc
imull
xchg
aas
xchg
adc
push
add
loopne
cltd
in
jb
sub
fimuls
jge
jp
outsl
xchg
push
pop
adcb
mov
pop
push
into
cmp
aas
push
add
out
or
outsl
out
loop
loope
lret
mov
xor
testb
xor
stos
and
shll
and
dec
xlat
or
sti
decb
xor
test
movsl
sbb
fmuls
ja
loopne
xchg
jns
out
cmp
fdivrl
in
sub
out
mov
cmp
sbb
iret
clc
dec
push
cs
into
pop
pop
test
outsb
fistps
pop
cmp
rorl
gs
jo
xchg
popa
mov
lea
repnz
fwait
insb
or
loopne
jg
xlat
cli
jnp
fwait
jne
fs
xchg
lahf
dec
xor
das
add
pop
dec
imul
ret
adc
inc
xchg
enter
cmpsl
cwtl
out
sub
out
adc
jmp
scas
or
add
pop
add
outsl
cmc
notb
push
test
cltd
in
mov
lods
add
rclb
xchg
jle
mov
push
fsub
popa
mov
das
cmp
fmuls
dec
in
pop
mov
mov
imul
mov
mov
ja
sar
imul
mov
rorl
push
ffree
mov
addr16
xor
int3
arpl
push
jge
mov
xchg
mov
inc
lds
mov
mov
dec
clc
inc
adc
or
outsl
scas
xor
mov
mov
ljmp
or
flds
stos
jno
jno
xchg
jnp
dec
jne
jns
fistl
xor
push
mov
out
xor
push
xorl
ss
sbb
stc
push
xchg
pop
je
jmp
mov
js
push
jg
xchg
adc
inc
or
fnstcw
and
mov
push
push
jns
mov
nop
iret
mov
sub
js
cmc
lock
and
cltd
add
push
add
mov
push
xchg
sbb
cmp
sbb
fbstp
das
testl
mov
jl
test
sbb
data16
lods
cmp
inc
call
fbld
inc
mov
mov
jno
push
xchg
sub
add
cmp
bound
add
fmull
xor
pop
aaa
out
pop
insb
sub
js
push
sbb
push
aas
loopne
repz
mov
mov
movntps
jbe
or
andb
jecxz
push
data16
movsl
mov
out
rcrl
adc
daa
or
outsl
sahf
jl
stos
xlat
inc
sub
std
push
xchg
mov
jo
mov
push
lret
add
mov
push
lahf
xchg
ss
into
add
mov
fisttps
mov
add
cmp
push
ljmp
sbb
out
pop
movsb
adc
sub
repz
push
js
loop
cmc
stos
sti
cli
fcmovnbe
mov
cmp
mov
push
inc
mov
aaa
scas
jb
out
xchg
pop
push
xor
scas
lahf
and
pop
xor
inc
imul
pop
lock
leave
or
out
out
mov
and
push
aaa
sbb
inc
call
cli
or
jno
xor
push
insb
je
ljmp
mov
pop
mov
daa
mov
js
test
movsl
push
stos
cmp
sub
xchg
movsb
out
push
or
shr
and
ret
xor
mov
into
cmpsb
add
loop
add
sbb
out
xchg
lret
jnp
jb
sub
insb
dec
fbstp
mov
inc
jmp
lahf
daa
xlat
pop
inc
adc
pop
push
mov
aas
xchg
mov
ret
call
movsl
int3
test
xor
data16
int3
pop
cmpsl
fs
das
fisubrl
and
out
sbb
mov
and
dec
fisubs
test
iret
je
xchg
int
pop
pop
and
mov
aad
mov
ss
xchg
xchg
faddp
bound
push
xchg
aad
es
sti
repz
cmp
mov
loopne
jnp
in
xchg
inc
inc
adc
insb
jmp
fsubl
cmp
push
push
lret
cmpsl
jno
or
push
call
push
daa
push
sti
clc
jae
lock
in
xchg
int
mov
push
insb
movsb
xchg
je
push
ds
ds
xsha256
cmpsb
xchg
lcall
sbb
push
fbld
xrelease
mov
cmp
mov
mov
sarl
xor
and
out
jge
mov
lds
cs
dec
xchg
push
sbb
xchg
das
xchg
xor
or
pop
xor
lahf
mulb
mov
xor
pop
mov
inc
movb
jmp
xchg
cltd
orb
inc
js
in
mov
pop
test
cmpsl
jmp
fnstenv
clc
dec
imul
inc
add
adc
or
imull
jno
les
lret
cli
cltd
lods
int
or
and
pop
mov
mov
aaa
subl
and
arpl
sub
pop
and
rcll
pop
enter
ljmp
lret
rol
sub
movsl
insl
notb
mov
xor
inc
shl
subl
lcall
mov
out
shr
sbb
aam
lds
inc
imul
jne
pop
mov
mov
push
cmp
mov
and
aas
cmp
aaa
js
mov
ds
pusha
xchg
xor
mov
imul
mov
lcall
push
arpl
icebp
push
scas
int3
sbb
xorl
mov
dec
mov
jo
sbb
out
or
mov
and
fcomps
fisubs
sbb
fiaddl
xchg
xor
lahf
mov
cltd
push
out
add
js
lock
push
cs
and
test
ds
jecxz
dec
jne
shlb
push
push
inc
mov
stc
push
aaa
push
mov
js
jo
push
aaa
in
mov
ret
ror
push
cmp
adc
cwtl
jns
pusha
js
mov
lret
cmpsb
int
iret
data16
sti
and
sbb
mov
mov
pop
inc
mov
inc
jp
push
add
dec
mov
sbb
popa
and
fadd
loop
fs
imul
cltd
outsl
sub
sti
xor
aad
mov
sub
pusha
cwtl
or
mov
inc
cmp
dec
push
xor
xchg
adc
lahf
ljmp
ljmp
daa
and
dec
rcr
mov
cmpsb
add
xchg
mov
xchg
sub
or
lret
leave
cmp
sub
loopne
int
lods
cmp
loopne
cmc
push
jp
fs
les
and
add
cmp
outsl
and
popw
jo
dec
or
fldl
push
pop
push
test
mov
jle
sbbl
es
fxch
sbb
dec
enter
cmp
lods
pop
mov
xchg
jge
fimull
xchg
xor
mov
jno
xor
xchg
repz
jl
loope
and
xchg
rolb
add
sahf
loop
js
stos
je
push
movsl
stos
mov
cli
xchg
ds
setbe
xor
lahf
mov
inc
inc
lea
xchg
xchg
loop
out
ret
scas
ds
push
dec
add
inc
sbb
push
jno
push
pop
es
test
dec
mov
ljmp
pop
out
inc
mov
inc
inc
orb
int3
or
xchg
mov
xchg
icebp
mov
xchg
jp
pop
fiaddl
sub
fs
adc
cmp
pop
sbb
pusha
dec
jb
inc
push
aaa
adc
cli
jmp
sbbl
sarl
pop
cmp
push
mov
mov
adc
dec
ret
lods
imul
cli
fwait
sbb
inc
mov
cmp
loopne
or
movsb
sahf
insl
push
add
daa
jno
ljmp
pop
and
ljmp
int
std
push
data16
int
mov
arpl
mov
mov
or
jnp
jbe
fisttpll
ss
dec
mov
adc
mov
gs
pop
out
add
add
les
cmc
lock
dec
movsb
mul
lsl
out
push
mov
jecxz
fwait
cmp
sbb
sbb
jne
loope
mov
jb
push
push
insb
adc
mov
test
pop
clc
or
popf
mov
add
enter
sbb
jb
mov
cmc
pop
xchg
movsb
rcll
sti
popf
fiaddl
popf
mov
je
inc
jo
cmp
loope
cwtl
mov
in
in
pop
jecxz
xor
cmpsl
add
aam
adcb
dec
xor
call
jae
loopne
sub
mov
aas
cmp
mov
add
outsb
lea
arpl
cmpsl
inc
push
lcall
cmpsb
jns
add
loop
cmc
xchg
les
mov
sahf
repz
adc
jmp
stc
addl
inc
jmp
xchg
or
mov
shld
xchg
ret
sbbl
xchg
add
popf
lret
jmp
cld
xchg
adc
loopne
dec
js
inc
sbb
jb
mov
xor
adcl
pop
mov
fucomi
adc
ss
inc
jnp
mov
cmc
cld
pop
mov
dec
aas
pop
jne
jle
dec
add
sbb
popf
jno
shlb
in
mov
cmpl
cmp
inc
int3
popf
call
xor
push
in
xchg
mov
pop
insb
mov
pop
adc
pusha
xor
mov
movsb
pop
inc
pop
push
frstor
cmp
pop
sub
pop
jp
inc
int3
pop
insl
inc
add
fistpl
and
data16
movb
loope
outsl
imul
xchg
pop
jnp
jo
loope
lret
ljmp
cmpsb
outsl
dec
jne
fbstp
xrelease
aam
daa
dec
lea
xchg
add
cs
loope
and
pop
sub
fistl
or
clc
outsb
out
push
mov
ret
or
mov
push
insb
test
int3
popf
scas
jl
xchg
cltd
cmpsb
cltd
push
cmp
leave
sub
adc
xchg
imul
sub
ds
dec
das
call
jl
mov
out
inc
mov
cltd
mov
jo
sarb
dec
cmp
mov
hlt
testl
xor
pop
scas
jecxz
mov
sbb
or
jae
mov
jb
ffreep
adc
mov
pop
dec
ret
out
xchg
add
adc
jl
sbb
xchg
jae
jmp
mov
xchg
dec
jp
int
repz
push
rorb
add
test
or
inc
bound
cmpsl
and
jb
jecxz
mov
inc
ret
xchg
xchg
imul
xor
push
adc
adc
ljmp
xchg
jb
cmp
les
pop
lcall
lret
dec
adc
inc
mov
and
push
nop
mov
inc
and
sbb
dec
scas
add
daa
jmp
cmp
adc
push
mov
fs
mov
or
andb
outsl
scas
inc
mov
pusha
and
xchg
jbe,pt
adc
mov
jae
pop
enter
shll
inc
test
mov
sbb
lahf
cmp
enter
cltd
ljmp
or
pop
and
cwtl
sbb
sub
mov
into
fs
adcb
dec
shlb
popa
subb
xor
add
mov
out
lea
sbb
daa
dec
mov
mov
les
adc
test
and
adc
sub
jbe
sub
lods
movsl
mov
cltd
pop
jg
int3
dec
sub
enter
scas
or
popf
into
or
movsb
andb
xor
lods
out
insb
push
insl
and
in
sbb
pop
scas
mov
lds
mov
icebp
movsb
or
mov
mov
test
stc
loopne
mov
xchg
sbb
pop
jne
incb
pop
test
xchg
sbb
inc
jbe
outsl
jmp
xor
dec
mov
fs
sti
mov
repnz
cmp
pop
jmp
out
cmpl
fisubl
add
push
gs
inc
dec
sahf
inc
xchg
aas
scas
pop
xlat
sbb
dec
stc
mov
dec
push
inc
lret
sbb
sbb
or
insl
data16
sub
ljmp
lea
inc
push
mov
shlb
daa
jle
push
iret
fnstenv
ja
pop
sbb
jb
pop
sbb
pop
jns
and
push
lahf
xlat
dec
mov
int3
outsb
mov
inc
out
or
mov
jns
ret
call
jl
and
and
dec
arpl
test
push
mov
xchg
sub
icebp
xchg
xchg
ja
ja
dec
insb
in
dec
das
fwait
cwtl
inc
into
int3
mov
fdiv
dec
jbe
dec
das
dec
jecxz
sti
fdivr
xor
pushf
js
mov
dec
sub
push
jns
sub
add
xor
mov
mov
mov
and
add
insb
push
mov
add
data16
or
jne
push
pop
daa
popa
dec
lea
push
outsl
mov
mov
sbb
inc
sub
cli
pop
xor
clc
js
mov
fnstenv
cmc
outsb
add
in
ret
lahf
imull
lds
pop
adc
xor
cld
test
mov
rorb
add
out
popa
pop
or
xchg
mov
sub
rcrb
lock
cmp
arpl
jle
cmp
push
sbb
push
enter
or
insb
test
daa
cmp
pop
dec
lock
imul
loopne
jo,pt
inc
repnz
sbb
xchg
fnstcw
jb
lahf
fdivrl
sbb
mov
fisttpll
pop
pop
or
cmp
push
xchg
lahf
mov
es
mov
lcall
sub
in
fdivrp
mov
js
cmp
fistps
sbb
cltd
nop
sub
stc
idivb
add
insb
mov
mov
in
dec
or
and
add
dec
aaa
repz
clc
add
loopne
add
mov
xchg
and
insb
adc
ja
fwait
add
int3
push
xlat
lds
fidivrs
mov
test
dec
and
mov
test
bound
sbb
sbb
xchg
hlt
mov
popf
jne
popf
hlt
jl
xor
andb
sbb
mov
mov
ficoms
xlat
xor
sahf
and
shrb
add
push
xor
adc
cld
pop
jns
loopne
dec
push
jge
in
sub
mov
ss
jge
out
mov
repnz
out
dec
cmpsl
mull
pushl
test
cmp
jg
jno
xor
int
das
and
push
and
adc
sub
add
cmpsl
in
mov
sbb
inc
test
sub
mov
mov
outsl
add
adc
repnz
les
add
scas
mov
sub
push
mov
cmp
pop
cmpsl
add
aam
push
lret
out
dec
arpl
in
or
pop
cli
popa
push
push
int3
mov
xorb
cld
in
sahf
in
arpl
mov
mov
push
sub
sbb
out
movb
fucomp
or
repz
adc
mov
rolb
xchg
adc
bnd
lds
lock
repnz
loope
cs
in
mov
mov
sub
les
daa
mov
add
cs
mov
mov
push
and
mov
add
sbb
mov
jmp
rol
aaa
mov
int3
bound
add
fadds
cmpsl
loop
mov
ljmp
aaa
ss
test
sbb
adcl
or
es
repnz
mov
shlb
mov
sti
fdiv
flds
adc
jno
mov
dec
adc
stos
jle
jge
fdivl
inc
leave
movsl
ret
mov
jg
inc
popa
scas
mov
lock
es
mov
nop
adc
adc
outsb
mov
sbb
adc
das
pop
inc
aam
frstor
rcr
cmp
outsb
cmp
xchg
sub
push
jg
les
jg
icebp
and
out
mov
mov
jmp
jbe
sti
mov
xchg
jno
xchg
adc
pop
ret
xor
pop
test
mov
out
dec
nop
or
inc
addl
add
data16
dec
std
lret
jae
mulb
sub
sub
clc
and
xor
and
aas
fmull
and
jns
in
mov
lea
xchg
outsb
fmull
pop
pop
add
cmp
lea
aaa
sbbl
arpl
std
jle
sub
loop
adc
jle
and
gs
adc
jno
hlt
daa
jecxz
fwait
adc
outsl
addr16
into
into
and
int
movsb
pop
data16
les
sub
jno
rorb
dec
jl
and
pop
xor
xor
xchg
stc
mov
shlb
mov
jnp
jl
es
xchg
clc
jge
cmp
or
mov
arpl
arpl
adc
loope
popa
xchg
and
movd
mov
cs
cmc
cli
mov
adc
pushf
cld
in
fisttpll
or
mov
xchg
jg
xchg
flds
and
gs
mov
adc
push
mov
test
mov
jns
add
mov
jp
mov
push
push
mov
mov
push
jb
mov
sbb
addl
xlat
mov
js
jl
inc
rcr
add
or
loopne
mov
fadd
cltd
gs
jl
jp
testl
in
push
cmp
div
pop
aaa
rol
xchg
arpl
push
pop
dec
fsubrs
adc
xor
xchg
sbb
xchg
sub
hlt
sub
daa
aam
xchg
leave
adc
cmpb
addr16
ret
add
push
lock
scas
jle
jb
xchg
sar
pop
movsl
cmp
sub
push
ss
push
shl
mov
jne
mov
mov
pop
jp
ret
mov
aam
std
das
xor
inc
lock
and
out
inc
pushf
xor
mov
neg
push
lret
stc
inc
scas
xchg
ss
push
mov
mov
mov
lret
rolb
int3
in
mov
in
hlt
jno
cmp
xor
dec
nop
mov
sahf
mov
stos
or
adc
push
fucomi
jmp
shl
push
ljmp
movsl
test
or
addr16
js
sub
adcl
xchg
xrstors
adc
jo
rcr
xchg
xchg
das
push
sbb
push
mov
dec
mov
into
pop
out
mov
and
adc
inc
movsl
iret
lahf
js
dec
push
push
or
push
repz
aam
xchg
decb
adc
jae
cmpsl
into
mov
pop
jecxz
add
sbb
pop
insb
pop
scas
pop
movsb
push
push
imul
or
xchg
pop
test
dec
movsb
xor
popa
js
xor
test
inc
sti
jnp
nop
mov
fwait
xchg
jae
dec
test
dec
jecxz
add
stos
dec
iret
push
xchg
fdivr
xchg
jp
call
js
mov
inc
stos
mov
and
xchg
xor
stc
sub
mov
add
int3
mov
mov
mov
lahf
mov
jns
fmull
and
jnp
pop
push
push
cld
cmc
int3
in
xor
scas
xchg
xchg
or
add
sbb
into
xor
fwait
pop
std
adc
fcoml
scas
sub
jg
movsb
out
cmp
jmp
sbb
sbb
and
scas
das
les
dec
or
test
std
xchg
rol
adc
push
test
pop
adc
cltd
scas
fs
popa
add
mov
mov
jge
stc
cmp
in
popa
insl
mov
dec
daa
jbe
sub
jge
scas
cmpsl
pop
cli
pop
in
push
push
xor
test
dec
inc
inc
inc
ljmp
push
dec
jbe
arpl
dec
gs
js
hlt
js
sub
xor
sti
or
popa
cmp
insl
rcll
jl
std
mov
pop
jns
inc
add
dec
fdivr
mov
sbb
adc
xchg
and
lcall
stos
mov
shl
jne
scas
xor
xor
cld
jae
in
pop
xchg
cmp
setne
dec
sti
xchg
dec
mov
inc
stc
mov
xchg
cmpb
cmpsb
fcoml
mov
push
test
push
jle
sti
sbb
xchg
push
lret
in
je
sbb
mov
sub
incl
add
ret
shl
cmp
aaa
addb
xchg
inc
or
aaa
pop
dec
jbe
xchg
xchg
pop
sub
and
xchg
mov
mov
fdivrl
loopne
or
sub
daa
add
push
mov
dec
push
out
mov
xlat
pop
mov
pusha
push
lods
adc
push
push
test
leave
inc
lods
or
ds
xchg
xor
pusha
fucomi
mov
mov
mov
xchg
fcoml
pushf
and
loop
pop
mov
aaa
subb
lock
stos
mov
jno
adc
cmc
dec
outsl
dec
out
pushf
iret
xchg
cmp
test
push
data16
push
push
lods
ret
inc
addb
inc
sbb
sbb
outsb
and
jge
lods
repz
add
insl
aas
fistpll
dec
movb
xchg
mov
fnstenv
mov
sbb
sub
repnz
cmpsl
je
mov
call
outsb
push
cld
cmp
shlb
loope
js
std
mov
xor
addl
in
pop
pop
clc
hlt
aas
push
push
mov
and
pushf
mov
cmpsb
mov
out
pop
test
mov
jae
mov
lock
add
sub
or
mov
jmp
lea
and
scas
mov
sbb
fcomp
push
daa
fdivs
shlb
xchg
lahf
pusha
mov
push
xchg
mov
ljmp
mov
lea
xor
lea
icebp
fiaddl
cmovg
cltd
lods
dec
in
push
arpl
mov
rclb
pop
dec
dec
pop
xchg
cmp
mov
xor
push
int
or
out
push
aas
shll
sbb
fists
int3
and
cmpsl
pop
mov
loopne
shlb
pop
mov
lret
stc
movsb
pushf
cmp
movb
adc
xchg
adc
push
daa
stos
dec
jp
adc
sub
jne
jg
sbbb
stc
jo
push
adc
xchg
and
dec
cmp
pop
mov
imul
dec
xor
mov
hlt
adc
cli
fcom
fs
lds
pop
mov
fistps
cmp
mov
push
je
sub
test
loope
sub
aas
imul
jb
sub
push
outsw
or
xchg
cmp
jae
sbb
mov
es
popf
mov
outsl
xor
daa
insl
addr16
xor
xchg
in
xchg
mov
and
push
outsb
pop
dec
xor
or
mov
jo
enter
jle
mov
aad
xchg
mov
cmp
jne
adc
lods
or
sbb
ret
xchg
push
push
fidivrl
dec
dec
test
jae
out
and
cld
mov
stos
movsb
ret
aam
arpl
mov
adc
out
mov
je
xchg
cwtl
lock
inc
cltd
notl
add
push
pop
test
sbb
jnp
sbb
push
push
cmp
xor
clc
movb
lods
fwait
or
mov
push
inc
es
jae
aas
pop
xor
aam
aaa
inc
xchg
int
xchg
sbb
inc
pop
pop
gs
andl
call
xor
cs
pop
fisttpl
xchg
std
popa
jbe
sub
sbb
call
mov
leave
mov
stos
jg
or
test
xchg
gs
inc
mov
subl
cmp
das
icebp
jp
nop
in
mov
mov
sub
sub
mov
cmp
adc
or
scas
movsb
les
pop
dec
loop
ret
pop
loop
in
xchg
xor
ljmp
jle
movsb
pop
mov
jb
push
mov
in
mov
inc
cmp
lods
xor
arpl
ret
das
xchg
loopne
test
cltd
xor
sbb
dec
xchg
out
jecxz
cs
xlat
cmpsb
ss
in
or
cmp
dec
shlb
jle
jae
push
imull
cmpsb
push
nop
imul
push
in
add
cli
pushf
rorb
insb
fs
sbb
pop
inc
icebp
das
mov
dec
mov
subb
ds
subl
pop
aaa
pop
jge
jmp
popa
cltd
ss
pop
out
adcl
sub
insl
mov
mov
inc
cmpsl
outsl
sbb
push
pop
pslld
push
jp
cs
and
int
roll
mov
xor
push
sbb
jge
movsb
pop
popf
in
ljmp
dec
mov
xor
cmp
ret
outsl
adc
adc
cld
loop
push
mov
xor
xchg
into
orl
stc
push
mov
repnz
sbb
jge
jbe
cmp
movl
jae
cli
pop
cmp
sbb
int3
jb
fldenv
sub
xchg
pop
movsl
ret
add
jle
scas
add
fs
inc
pop
or
dec
dec
pop
clc
jns
insb
rorb
sbb
in
push
leave
out
adc
out
jne
hlt
push
add
dec
subb
shl
adc
mov
sbb
scas
xor
icebp
xchg
jle
xchg
call
mov
mov
dec
xor
mov
mov
mov
in
jb
adc
add
inc
ffreep
push
pop
jp
mov
adc
int3
fnclex
or
or
push
adc
mov
pop
cmp
lock
mov
out
mov
lret
inc
inc
stos
jmp
adc
lock
into
in
pop
mov
lea
pop
lods
inc
popf
sub
imul
aam
jo
or
lcall
arpl
cwtl
in
ret
cmpsl
jle
and
or
rorl
lahf
js
in
lea
roll
push
fs
add
repnz
jb
out
cmp
out
inc
jae
out
or
inc
push
cmp
mov
fdivs
out
jbe
or
pusha
lret
lods
sub
push
sbb
dec
ret
push
mov
mov
jo
sti
push
add
divl
xor
out
pop
sti
pusha
rorl
add
sub
lcall
repz
lods
pop
cmp
inc
hlt
int3
sbb
jmp
jmp
addr16
sub
xor
xor
pop
sub
push
sbb
lret
xor
in
dec
scas
in
adc
mov
inc
add
sbb
mov
lods
sahf
mov
mov
loope
or
push
mov
push
cld
mov
mov
mov
mov
mov
rclb
sbb
sbb
jge
outsl
stos
jno
test
lret
jbe
xor
push
sub
cmp
daa
push
sbb
test
sub
fildl
sbbb
xor
dec
mov
movl
jno
mov
push
bound
inc
inc
sub
cmc
and
fwait
roll
mov
mov
jge
mov
pop
not
jb
sbb
pushl
mov
std
mov
mov
nop
out
pop
jp
mull
dec
inc
pop
add
pop
dec
push
cmp
fs
cld
in
jne
push
push
adc
xchg
push
cmpsb
outsl
pushf
pop
lea
leave
add
pusha
ss
pop
mov
mov
fwait
inc
sbb
in
and
and
fistl
push
inc
out
rorb
enter
pusha
ds
stos
out
mov
pushf
lret
jmp
cmp
xchg
jo
cmp
ror
lods
lret
jmp
xchg
fs
mov
out
test
movsl
sub
cmpl
imul
push
icebp
fcomip
pop
fldt
ds
push
sbb
enter
dec
cmp
ret
inc
xchg
cmc
sbb
xorb
push
lea
sbb
mov
xor
mov
aaa
xchg
dec
test
out
xchg
or
sub
sbb
mov
lret
mov
jns
sub
data16
aam
adcb
sub
call
sub
shr
out
adc
sbb
loop
decl
pop
mov
ret
and
movsb
stos
pop
xchg
pop
inc
mov
adc
daa
xorl
aas
pop
fs
mov
adc
mov
roll
fstps
out
push
jnp
jp
sub
mov
push
outsl
outsb
and
mov
and
lods
push
icebp
jne
fsubrp
les
jb
je
xlat
add
push
sbb
test
fisubl
adc
mov
mov
mov
sub
push
nop
fstl
cmp
ficomps
lret
xlat
lahf
push
adc
ret
lret
lods
lahf
imul
cltd
int
orl
loopw,pt
stc
in
rolb
or
push
xchg
cli
xchg
inc
or
insb
leave
add
pop
fmuls
jecxz
mov
adc
xchg
ss
out
xchg
out
cmpsb
sahf
fcoms
in
stc
push
ljmp
xchg
xor
ljmp
xor
pop
sysret
pop
pcmpeqw
push
jge
flds
push
fwait
xorl
push
ret
and
mov
pop
mov
add
mov
outsl
enter
adc
in
and
jns
dec
push
sbb
push
inc
daa
xchg
lods
jbe
adc
dec
mov
scas
outsl
pop
cmpl
test
scas
inc
xchg
sub
jmp
lods
and
sbb
or
fstl
sarl
fldt
pop
dec
iret
mov
mov
push
adc
test
arpl
mov
inc
aaa
mov
sahf
jmp
inc
mov
push
jg
sub
aas
jo
jmp
ret
popf
mov
je
jne
adc
aas
xor
leave
jl
sbb
and
rcrb
adc
push
jbe
mov
outsl
scas
mov
add
or
or
cmp
bound
push
mov
clc
jnp
sub
cmpsl
cmpsb
or
js
test
test
xlat
jg
mov
or
rcrb
pop
sub
jno,pn
jae
xor
aas
inc
sub
andl
adc
repz
mov
fs
sbb
jle
data16
mov
inc
mov
mov
mov
add
sarl
dec
ret
lret
mov
pop
inc
xchg
mov
cmc
mov
js
into
cwtl
or
in
pop
dec
lcall
add
adc
dec
rcr
enter
add
inc
jne
pop
jl
and
add
cmp
aaa
cmp
in
je
mov
std
sub
inc
mov
sub
push
movsl
lret
ret
and
imul
or
mov
stc
xor
xchg
ss
movsb
popf
sub
sub
loope
cwtl
cmp
pop
push
in
test
fidivrl
mov
sbb
arpl
out
dec
jle
jo
int3
ljmp
out
and
into
sub
cmc
mov
mov
jle
sub
loope
ljmp
iret
fs
pop
xchg
xchg
testl
stos
aad
fists
jle
lcall
daa
mov
mov
std
and
adc
pop
insl
jle
scas
jle
test
insb
xchg
sub
cmp
xor
xor
jecxz
jo
jmp
fcmove
sbb
sbb
sub
sbb
jmp
rolb
aam
mov
mov
movsl
push
repz
mov
test
repnz
cmc
insb
loopne
mov
out
ret
outsb
loopne
mul
inc
dec
inc
and
movaps
stos
mov
xchg
and
lock
les
lock
fs
add
jnp
imul
outsb
mov
push
add
inc
jne
cmp
pop
loopne
aam
cmp
loope
inc
cmp
mov
sub
adcl
jb
sub
adc
cli
add
pop
repnz
adc
arpl
add
clc
xchg
into
arpl
adc
jbe
int
push
jnp
popa
inc
jnp
cmp
fsubs
and
hlt
cmp
sbb
and
out
xor
aad
das
add
mov
or
call
push
pop
test
pop
std
jnp
push
mov
in
and
lea
mov
jge
mov
adc
std
je
jmp
jge
cmp
xchg
lcall
xor
shrb
pop
mov
test
cmp
scas
xchg
lds
sbb
jle
sar
pop
or
xchg
and
sti
pop
dec
ja
cmpsb
fdivl
dec
push
int3
stc
shlb
sbb
inc
xor
mov
insb
leave
icebp
shlb
sbb
scas
pushf
jno
push
addr16
inc
out
fs
sbb
mov
or
jbe
in
push
mov
movsl
in
lret
repz
and
lcall
cmpsb
rorb
pop
add
jnp
jne
pop
jnp
jp
daa
cmpsl
aas
aad
mov
inc
dec
movsb
adc
cmpsl
ud1
ret
pop
mov
aaa
mov
add
ds
xchg
fiadds
mov
cmp
icebp
cwtl
sub
push
out
dec
clc
mov
jmp
mov
add
xchg
dec
jo
mov
nop
ljmp
inc
dec
shll
push
int3
out
fwait
adc
jmp
aam
int3
hlt
pop
lock
std
sub
aaa
push
mov
dec
loope
ret
outsl
dec
mov
xchg
out
mov
pop
insb
aad
test
and
sub
mov
fmuls
mov
fdiv
shlb
bound
jmp
dec
add
loop
jg
adc
in
jae
and
adc
mov
xor
xlat
sub
mov
sbb
mov
push
loope
aas
imul
inc
xchg
pushf
daa
das
cs
daa
dec
je
xor
xor
xchg
test
xor
mov
pop
xor
adc
rol
cmp
ret
js
xlat
loop
mov
jmp
mov
ds
xchg
jno
mov
data16
jo
push
jbe
std
mov
xchg
dec
daa
add
in
dec
push
fdivl
mul
mov
adc
push
out
cld
or
addr16
insl
in
and
add
dec
push
rorb
adc
mov
or
dec
mov
cs
pop
scas
scas
sub
sbb
ja
out
hlt
gs
adc
mov
inc
loopne
inc
inc
and
xchg
mov
inc
cmp
sub
imul
sub
iret
int3
and
lock
push
xor
sbb
pop
xlat
test
and
mov
adc
stc
xlat
and
fisubs
stos
das
out
rcll
mov
in
movsb
movb
mov
add
ja
std
cmp
sbb
xor
or
sbb
pop
add
mov
popa
fcom
jae
xor
dec
ret
sti
xchg
jno
cwtl
sub
out
jecxz
mov
inc
xchg
mov
fs
sub
fiaddl
add
xchg
clc
nop
mov
pop
inc
fists
xor
xchg
sub
daa
adcb
sub
cmp
shlb
call
loopne
and
lods
hlt
sub
pop
rcrl
push
mov
mov
adc
ja
andb
cld
adc
mov
xchg
repz
inc
test
xor
jo
pushf
or
xor
push
sarl
mov
mov
adc
push
mov
repz
lahf
iret
or
out
pop
shrl
mov
outsb
outsb
bound
pop
adc
sub
mov
pop
ret
xchg
xchg
pop
inc
push
lea
mov
dec
add
rcll
gs
jo
push
test
add
jmp
je
xor
jnp
ja
out
xchg
fidivl
add
or
nop
rorb
add
mov
mov
mov
mov
mov
fcmove
nop
jge
jg
scas
mov
in
repz
popl
shll
xchg
cmpsb
aas
rcl
shrb
mov
mov
lahf
subb
cld
cmc
lock
aam
mov
xchg
clc
mov
out
adc
in
lret
bound
lcall
cmp
push
adc
loopne
push
sbb
adc
and
sub
fimull
outsb
jle
in
int3
mov
sbb
and
or
popa
mov
sub
mov
movsb
subb
test
cmp
jl
jne
cmp
cli
jmp
xor
sti
dec
jns
sub
pop
jmp
dec
lock
dec
lods
mov
jge
loop
jo
inc
or
xor
push
hlt
sub
test
sub
adc
sarl
xorb
push
loop
mov
push
dec
fisubrs
in
int
outsb
aas
in
ss
imul
cmp
push
inc
movsb
xchg
mov
rcll
jne
inc
xchg
jne
dec
jle
cmp
ret
xor
mov
and
sub
lods
cli
mov
push
movsb
pop
cs
and
js
xor
rcrl
inc
iret
jecxz
dec
repnz
and
bound
mov
adc
test
mov
jl
out
fs
popf
jnp
cmpsb
sub
xchg
jo
nop
mov
mov
pop
adc
inc
sbb
test
das
mov
in
nop
test
out
out
inc
mov
push
shll
mov
dec
mov
out
outsl
sbb
jbe
movsl
ds
jmp
sub
outsb
jecxz
pop
push
jmp
roll
adc
ljmp
xchg
add
jne
scas
xor
dec
jecxz
adc
das
lea
sbb
stos
add
fldl
stos
mov
mov
xor
das
stos
or
fbld
inc
lret
xchg
decl
sbb
mov
into
mov
aad
pop
push
xchg
or
jns
inc
dec
into
lock
sbb
add
xor
arpl
sub
dec
add
enter
add
es
jno
push
jns
das
sbb
and
std
mov
push
mov
xor
sbb
fdivp
push
adc
and
movsb
jbe
jno
fiaddl
inc
imul
or
xchg
inc
push
push
insb
cmp
test
push
test
or
fwait
mov
push
xchg
xor
stc
loope
loop
push
stos
aaa
in
xor
and
and
cmp
push
pop
outsb
sbb
call
scas
xlat
pop
sbb
sbb
fsub
or
add
jl
push
mov
ja
cltd
aaa
je
pop
pop
fldl
fisubs
sbb
jmp
xor
gs
add
rcrl
into
push
imul
cli
into
lahf
rcll
or
in
outsl
cmp
into
stos
ja
dec
mov
arpl
jb
adc
lret
sbb
mov
pusha
fildll
leave
jbe
test
jae
fs
popa
xor
imul
mov
je
mov
mov
aas
popf
dec
sahf
jne
xchg
lods
and
mov
xor
lret
loope
fs
adc
jl
mov
jns
punpckhdq
jl
movsl
pop
aaa
add
sti
popf
jno
jno
cld
jecxz
outsb
jo
out
push
sub
aaa
insb
enter
sub
fildll
lret
adc
ja
jmp
jae
cmp
dec
sub
cmp
pop
enter
cmpsl
jle
addr16
nop
out
je
jl
or
or
add
pop
test
in
xor
and
sbb
add
push
mov
rorl
xor
dec
dec
inc
dec
call
in
inc
mov
call
mov
repz
mov
mov
mov
xchg
mov
push
jl
mov
add
mov
mov
cs
not
add
loope
fwait
pop
pop
test
xor
mov
dec
cld
xor
pusha
stos
leave
xor
mov
sub
add
or
cmp
mov
mov
in
fmull
add
xchg
xor
test
dec
insl
mov
popf
cli
loop
lods
jl
sub
xor
and
outsl
xchg
jno
orps
mov
adc
insb
rclb
add
sub
hlt
pop
ss
ret
fdiv
or
rclb
std
insl
cmpb
fiaddl
dec
rorb
push
adc
mov
cld
mov
sahf
aad
bound
stc
in
flds
sahf
sub
add
lea
dec
fidivs
cmp
enter
rcrb
fiaddl
jns
add
push
fnsave
add
add
or
mov
and
aaa
pop
aaa
out
mov
cmp
lea
movsl
cmp
push
loopne
inc
dec
movsl
pop
les
std
mov
in
out
add
jns
ficoms
lahf
sti
jns
sarl
lcall
shlb
jmp
xchg
xchg
adc
enter
mov
push
xor
mov
dec
cmpsb
leave
add
movsl
xchg
xor
jle
enter
and
push
stos
orb
xchg
and
push
mov
push
in
test
imul
das
push
aam
es
xor
jp
add
js
loope
movsl
jecxz
fs
lahf
jb
mov
loop
adc
fs
cs
sbb
shlb
fistps
mov
xchg
cmp
rcrb
int
shll
mov
jp
je
ss
jp
lods
insl
fistpll
sub
adc
xchg
outsb
mov
fwait
test
cmp
mov
adc
in
jns
inc
idivl
xchg
fwait
lods
cld
cmc
mov
push
test
cbtw
lock
cld
mov
in
sar
aas
mov
xor
sahf
push
cmc
sbb
cmpsl
insl
jne
mov
jmp
daa
push
insb
mov
pop
jne
cli
add
scas
pop
rcrl
add
mov
insb
flds
push
addr16
and
and
mov
lods
pop
ficompl
pop
imul
ret
sti
iret
cld
pop
mov
jmp
shl
mov
das
and
mov
jge
push
xorb
aaa
cmp
inc
and
cmp
test
int3
or
je
inc
sbbl
mov
mov
adc
mov
cmp
loopne
loop
mov
data16
mov
lcall
sbb
mov
sbb
std
lahf
lret
test
ja
bound
cmc
imul
dec
push
pop
cmpsl
pop
sbb
xor
sbb
xor
xchg
push
ret
cmovle
jp
inc
or
fwait
gs
cmpsl
push
lret
inc
in
hlt
fs
shr
or
outsl
add
enter
sbb
lods
xchg
sub
xchg
stos
sub
mov
jp
xchg
cwtl
jecxz
out
cli
int
loope
popf
js
xchg
push
and
sub
cmpsb
add
cmpsb
mov
mov
idivl
inc
loope
fldlg2
pusha
push
cmp
push
ds
sub
mov
push
out
es
cwtl
repz
pop
repnz
pushf
icebp
xor
sub
add
inc
mov
push
mov
dec
pop
jl
pop
jecxz
ds
test
sub
jnp
imul
cmp
pop
notl
fisubrs
and
cmp
mov
mov
sarb
lea
dec
std
aas
je
popa
stos
jge
lahf
loopne
mov
jp
adc
add
test
ss
inc
outsb
or
sub
insb
or
or
pop
mov
pop
cmp
test
jo
data16
sub
lods
call
sbb
je
icebp
enter
or
aaa
dec
scas
shlb
xchg
js
enter
aas
xchg
push
mov
inc
or
xchg
pop
inc
sbb
inc
sub
and
sub
cwtl
shll
cmp
inc
adc
xchg
xor
js
icebp
mov
lods
and
adc
xchg
dec
mov
jb
les
push
ficompl
clc
insb
mov
add
shll
lea
add
and
xchg
xor
nop
mov
sbb
rcrl
bound
xor
mov
fwait
pop
inc
aaa
or
popf
push
pop
fwait
popa
btc
cmp
enter
push
dec
lock
cmp
adc
out
ljmp
in
lock
cs
outsb
add
andl
mov
addl
push
xchg
pop
pop
clc
dec
push
movsb
adc
inc
in
lret
adc
mov
cld
scas
inc
jb
jp
iret
in
lcall
adc
imul
sub
iret
sub
adc
enter
sahf
fs
mov
and
jl
or
cltd
add
dec
mov
icebp
fdivrl
jge
sbb
push
inc
sbb
inc
xchg
cltd
cmpsl
pop
and
in
sub
mov
shll
mov
std
pop
aaa
nop
push
cmpsb
cwtl
into
sub
push
mov
inc
lret
imul
cmp
dec
pop
scas
or
xchg
pop
iret
push
push
mov
mov
enter
insb
loopne
xor
arpl
push
push
test
in
jo
sub
xchg
shlb
insl
cmp
sub
mov
sub
or
lea
sbb
inc
pop
cli
ficomps
lds
in
and
movsl
subl
push
aas
mov
inc
fldcw
stos
daa
mov
mov
mov
outsl
mov
add
jmp
stos
imul
stc
fmull
adc
cmp
mov
imul
out
insb
and
stos
ss
pop
or
jbe
xor
inc
cmp
test
scas
mov
jmp
sahf
push
test
fcoml
or
test
std
notb
rolb
stc
add
mov
sti
lock
lock
loope
jle
dec
test
mov
rcrb
dec
sti
and
fucomp
dec
lea
inc
and
jg
pop
lods
out
jnp
xor
out
clc
inc
pop
mov
lahf
test
mov
es
sbb
mov
scas
jp
dec
sti
cmp
mov
push
mov
pusha
rorl
fistpl
in
negb
movsl
mov
loope
in
repz
and
dec
push
fdivl
or
pop
arpl
sbb
int
imul
lods
xchg
aaa
mov
cmp
pop
push
out
rolb
inc
out
pop
std
mov
adc
cmp
icebp
cmp
addr16
jnp
out
mov
push
dec
mov
xchg
xchg
repz
mov
fisubrs
cmpb
mov
sahf
imul
das
out
xlat
fwait
icebp
cmp
inc
insb
cmp
iret
in
push
pop
jne
mov
xor
mov
xchg
divb
xor
and
adc
ret
pusha
lods
sbb
xchg
add
jne
lea
sbb
lock
push
pop
or
ret
push
xor
xchg
addr16
data16
jb
jns
pop
mov
xchg
das
mov
dec
pop
pushf
push
add
cs
xchg
scas
add
in
aaa
cmp
mov
cmp
fcmovnb
inc
es
loopne
cmpsb
mov
xlat
scas
cld
movsb
xchg
cmp
push
roll
xor
cld
or
fists
adc
pushf
popa
push
nop
or
push
out
icebp
sub
test
jno
pop
adc
in
push
mov
inc
lods
leave
jne
in
and
dec
mov
cmp
mov
movsl
ljmp
pop
shlb
and
out
xor
ret
push
addb
adc
ljmp
cmp
aas
movsl
cmpsl
mov
insl
ja
shl
jne
adc
repz
cli
sbb
add
jnp
xor
jmp
shrb
daa
test
cmpsb
ficoml
jae
mov
sbb
shrb
mov
push
pop
mov
xchg
mov
mov
popf
cmp
and
mov
mov
dec
lcall
and
pmaxsw
inc
repnz
cmp
js
push
pop
in
push
mov
and
sub
xchg
sbb
testl
mov
lods
mov
mov
push
dec
add
lret
inc
rorb
int3
adcb
out
fs
popa
in
or
ss
pop
es
mov
jge
lea
dec
ficoms
ds
int
mov
test
jb
push
jo
pushf
test
orl
popf
loop
dec
pushf
ljmp
je
inc
xchg
adc
iret
nop
adc
xor
adc
sbb
lea
out
push
dec
add
scas
add
in
mov
clc
mov
arpl
adc
loop
add
mov
mov
bound
femms
pop
jnp
das
out
jle
arpl
or
sub
or
jp
xorl
in
add
mov
mov
js
cmp
cmc
mov
data16
dec
mov
lret
mov
inc
xlat
push
fwait
xchg
roll
cmp
test
inc
lret
pop
daa
xlat
inc
std
pop
xchg
add
test
cs
insb
lods
pop
mov
fcomip
ljmp
test
push
mov
cld
movsl
mov
dec
cmpsl
mov
repz
jne
add
movsl
jmp
movsb
fwait
addr16
pop
dec
mov
push
lods
and
add
mov
fldl
pop
out
idiv
mov
daa
ret
repnz
jae
std
pop
push
xchg
mov
ret
movsb
mov
pop
and
xchg
dec
pop
lcall
xchg
and
xor
jg
aaa
jns
dec
div
xchg
mov
push
cwtl
insl
sub
xor
pop
add
add
cmp
pop
sbb
fildl
cs
lods
out
cli
ja
js
mov
and
int
loopne
out
loop
cmpb
push
jecxz
sbb
xor
gs
inc
dec
xchg
xor
sti
jo
push
sub
stos
mov
ljmp
cmpl
xor
fisttpl
jns
ret
push
ret
leave
add
inc
adcb
pop
add
mov
mov
mov
ret
cmp
lret
mov
aas
lods
ret
lcall
and
stos
lret
push
outsl
lahf
push
rclb
cmp
hlt
aas
aas
lret
sbb
and
xchg
xchg
fldl
ficoms
out
movsl
sub
aad
ja
xchg
fsubs
pop
out
jle
mov
outsb
dec
xchg
rolb
or
aaa
idiv
mov
jne
inc
push
add
mov
dec
and
ljmp
jb
inc
push
push
or
pop
mov
in
gs
lret
inc
pop
in
lds
sbb
push
js
pop
sbb
jb
xchg
dec
push
cmpsb
int3
cmp
lahf
test
mov
idivl
sbbb
push
cli
test
aad
and
xchg
ds
sarl
mov
cmp
xchg
jl
lea
dec
cmp
aas
test
sbb
fidivrs
and
lret
dec
jmp
mov
mov
mov
loope
mov
dec
into
sbb
sbb
js
mov
cmpsb
and
push
loope
repnz
mov
cmp
cmp
xchg
sub
add
outsb
adc
data16
test
lcall
jnp
insb
xchg
xchg
test
inc
xchg
sbb
jl
pop
jae
sti
inc
stc
xor
add
jp
popa
jbe
mov
mov
lahf
daa
subb
in
jb
addb
fstps
jle
and
arpl
and
cmpsl
or
arpl
push
lea
push
mov
mov
adc
loopne
and
ja
xor
sbb
in
lods
add
bound
add
into
inc
lret
dec
outsl
mov
cmp
das
dec
les
mov
mov
mov
cld
sti
test
jmp
arpl
addr16
imul
and
xchg
movl
jp
mov
cmp
pop
test
adc
mov
lahf
lea
clc
fstpt
push
push
movl
mov
stos
sahf
inc
inc
loop
inc
in
jp
cmpsb
int
call
rolb
add
int3
xor
cmpsl
xchg
add
movsl
negl
out
cld
mov
mov
adc
call
aaa
sub
cmp
iret
sbb
inc
cmp
push
pop
insl
out
negb
sbb
out
pop
adc
clc
inc
push
xchg
rcrb
enter
mov
dec
movsb
data16
lock
outsb
inc
jp
jmp
movsl
test
jecxz
mov
lahf
mov
sbb
lods
fwait
bound
lcall
pop
and
xor
imul
dec
in
fcmovbe
xor
scas
out
test
lods
push
or
ds
scas
pushf
sti
cmpsl
nop
push
ss
in
xchg
mov
insl
or
clc
xchg
lret
std
sti
scas
out
ficomps
movsl
es
scas
je
nop
mov
es
mov
stc
mov
and
sbb
scas
push
nop
fcompl
jno
pop
test
mov
xchg
jecxz
and
adc
add
stos
aam
xchg
loope
xchg
cmp
test
or
shll
add
mov
jae
test
pop
ret
imul
add
push
sbb
sbb
inc
push
dec
xor
bound
pop
sbb
pop
push
scas
mov
adcl
dec
cmc
sbb
out
js
jae
cld
mov
or
mov
push
xchg
mov
nop
push
and
push
jmp
cltd
push
cli
mov
mov
jp
cmp
icebp
dec
ss
mov
mov
aad
ffree
push
pushf
adc
lret
into
aam
sub
shrb
dec
lock
mov
push
xchg
mov
pop
aaa
jne
adc
xchg
or
std
and
je
imul
dec
imul
add
arpl
inc
pop
and
or
sti
xorb
lret
movsl
sub
cmp
mov
lds
andl
push
jge
mov
das
ljmp
jle
mov
mov
aas
xorb
das
jbe
pop
aas
xor
mov
adc
mov
jl
xchg
dec
xor
js
inc
mov
int3
xchg
out
pop
or
test
hlt
push
lret
add
out
dec
xor
fidivrs
pop
mov
inc
add
jg
sub
push
push
stc
ja
stos
pop
xchg
xchg
lahf
mov
cs
pop
dec
add
in
aam
xchg
stos
enter
stos
adc
mov
mov
mov
push
movsl
fdivl
mov
in
orl
out
mov
arpl
xchg
inc
jae
mov
loope
dec
nop
jmp
mov
dec
or
ds
fidivrs
repnz
and
xor
rcpps
add
xor
mov
insl
js
sar
mov
stc
cli
test
test
fmul
mov
mov
add
aad
mov
add
mov
adc
jne
xor
lcall
jge
mov
sbb
andl
loope
and
aas
mov
lret
pop
xchg
or
insl
mov
cmp
push
mov
test
adc
jp
cmp
inc
cmc
ret
cmp
cmp
xchg
shrl
je
pop
jge
jecxz
mov
stc
add
add
sub
jae
aam
test
push
jmp
lods
fsubl
ret
add
mov
sahf
add
bound
or
push
les
inc
sahf
mov
inc
or
cmp
lahf
in
and
jecxz
stc
sahf
inc
fwait
in
mov
pusha
icebp
xchg
inc
dec
insb
lods
leave
ja
inc
arpl
sbb
mov
test
test
enter
pop
mov
test
jecxz
ja
inc
pop
pop
mov
and
inc
mov
das
dec
rcr
dec
and
test
clc
int
push
out
pop
sub
cwtl
dec
dec
lds
icebp
xor
stos
mov
decl
mov
push
sbb
add
inc
add
cmc
mov
insb
icebp
xchg
xor
inc
pop
aam
mov
dec
roll
sbb
push
xor
cmc
and
imul
leave
adc
xchg
pop
mov
or
outsb
push
mov
js
movsl
push
adc
fcmovnu
xchg
push
loop
push
test
jmp
int
fmull
dec
mov
dec
std
dec
pusha
adc
stos
mov
mov
or
pushf
shll
sbb
out
shrb
lock
jecxz
out
pop
loopne
out
pop
cmp
sbb
dec
jg
ljmp
decl
sahf
or
hlt
jecxz
jmp
jns
andl
sahf
imul
rol
sahf
jecxz
mov
mov
mov
daa
fsts
fwait
popa
jns
inc
test
aas
stc
psllw
aaa
or
and
ret
fcmovnbe
dec
lcall
add
ret
pusha
movsl
int
inc
and
ret
xor
push
push
lock
cmp
sub
push
jo
adc
push
xchg
and
xchg
lds
mov
movsl
mov
xor
nop
mov
mov
sahf
jle
sbb
popa
sub
mull
mov
xor
mov
cmpl
xorb
mulb
add
jo
and
jmp
jno
pop
cmp
out
mov
movsl
mov
aam
sti
push
leave
dec
xchg
push
push
gs
xorl
lahf
out
mov
push
call
mov
xor
icebp
add
out
aam
addr16
idiv
mov
push
call
and
popf
jecxz
call
xchg
aad
stos
jmp
daa
push
cmp
movsb
mov
ds
mov
in
inc
fsubrl
cmp
pop
or
and
es
loop
jo
cmp
mov
pop
or
lcall
outsl
fisubrl
sbb
mov
add
pop
shlb
daa
inc
out
inc
mov
cs
xorb
fwait
push
int
mov
push
pop
ja
xchg
sbb
sub
mov
loop
sub
add
inc
loop
cmp
cmp
add
shr
or
mov
and
mov
add
mov
pop
mov
pop
jbe
cwtl
mov
push
stos
shll
cwtl
mov
out
std
push
jmp
push
in
gs
mov
in
fimuls
je
repnz
repnz
das
pop
loope
lcall
in
lods
ret
add
outsb
xchg
mov
cmp
mov
cmpsb
movsb
sbbb
fisubrl
xchg
in
popa
mov
insb
mov
add
sbb
or
pusha
repnz
sbbb
lods
xchg
pop
sbb
stos
cld
rcrl
push
cmp
jbe
into
pop
aam
pop
push
lret
popf
inc
cmc
push
dec
int3
xchg
les
ret
push
cs
inc
xor
pushf
mov
ss
mov
leave
flds
add
xchg
inc
fildl
icebp
push
rcr
mov
jb
popa
das
sbb
js
cmp
add
inc
shrb
repz
dec
or
xlat
iret
out
sbb
test
fdivs
dec
push
xchg
add
dec
ret
add
or
loopne
mov
mov
jmp
jne
aaa
jmp
daa
std
push
cmp
mov
mov
xchg
je
pop
mov
cmp
jno
insl
or
adc
rcrb
stc
push
push
pop
dec
mov
jp
fwait
mov
mov
aam
inc
inc
inc
pop
jg
push
sbb
ja
aas
mov
mov
loopne
stos
jno
icebp
mov
or
mov
movsb
xchg
loop
aam
in
aas
into
pushf
out
or
mov
lock
sbb
cli
inc
les
cmp
lea
cld
in
loop
add
pop
push
inc
pop
fwait
and
outsl
iret
insb
stos
pop
lret
ret
push
xor
fimuls
mov
fisttps
test
call
or
pop
pop
cmp
ljmp
sub
cs
dec
xchg
fcmovnb
leave
mov
popf
imul
lock
data16
movl
rcr
mov
aas
test
lock
mov
jb
jb
bound
dec
mov
or
adc
stc
into
int
stc
adc
pusha
xor
lods
repnz
cmp
sbb
cmc
mov
stc
mov
test
inc
pop
movb
out
mov
xor
rcl
fdivl
popa
or
mov
and
mov
adc
lret
out
pop
enter
repnz
mov
xor
call
ds
aam
mov
js
push
sub
cmpb
pop
xchg
cmp
adc
les
inc
lret
inc
pop
pop
push
sub
mov
push
mov
add
adc
adc
in
lea
add
daa
xchg
add
pop
gs
mov
fcmovne
shll
mov
mov
in
push
mov
mov
pop
jnp
jle
out
js
cwtl
lret
pop
inc
xor
push
xor
lods
lds
in
cli
rolb
adc
les
jge
in
xchg
pop
mov
fidivl
lea
xorb
in
loope
or
movsb
out
repnz
push
js
pusha
push
aas
lret
pop
lret
fildl
adc
stc
call
rorl
or
ret
cmp
mov
xor
jg
into
add
hlt
jle
je
sbb
aas
push
pop
pop
das
fadds
sarl
lods
mov
popl
xchg
pop
lods
and
cmp
mov
pop
cmp
adc
push
jbe
pop
subb
push
sbbl
mov
pop
outsl
or
fimull
scas
int
pusha
cld
mov
cltd
pop
out
inc
jno
dec
sbb
mov
mov
mov
push
dec
rol
pop
inc
adc
xor
jae
andl
pop
adc
push
loop
insb
jmp
lods
lret
fimull
addr16
cmp
jmp
shll
dec
jge
push
clc
jle
xor
add
inc
lods
rclb
push
sbb
add
add
pop
lods
mov
dec
push
inc
cmp
ljmp
in
or
push
add
or
pop
cmp
aam
adc
mov
ss
push
jle
cmpsl
scas
xchg
mov
and
jb
jmp
pop
inc
inc
jbe
orb
sbb
adc
sub
mov
sub
dec
daa
mov
pop
jne
push
adc
das
and
cmp
jmp
mov
cmp
cli
popf
cmp
test
cwtl
aam
add
sbb
int3
xchg
lret
cmp
or
daa
sub
idivb
out
test
dec
int3
push
and
jnp
fimull
cli
xor
and
clc
mov
cwtl
aaa
xchg
testl
sub
rol
iret
xchg
or
inc
mov
and
insl
gs
ss
adcl
inc
push
xor
ss
std
test
push
xchg
pusha
std
shlb
test
sub
jp
or
lret
loope
and
fstpt
scas
punpcklwd
test
bound
push
add
xlat
das
ja
sti
testl
bound
rclb
inc
lahf
mov
out
mov
cmp
jmp
into
lock
adc
in
xor
mov
lock
fnsave
mov
test
subb
iret
loope
fldt
push
icebp
mov
jle
aad
xor
add
mov
cwtl
or
sub
fnstenv
sub
lds
and
iret
xorb
jp
imul
or
mov
enter
mov
push
loop
push
lods
loopne
inc
pop
fisubrl
sbb
sbb
gs
lret
subl
jns
cmpsb
xor
jno
jecxz
pop
movsl
mov
push
mov
je
sbb
xor
adc
fcomps
bound
icebp
jmp
ja
jno
addb
nop
push
mov
shr
sub
cld
fildl
xchg
and
xchg
or
fsubl
fwait
data16
and
jnp
or
lods
stos
daa
cmp
push
cmp
out
mov
jle
pop
les
mov
pusha
stos
xor
xchg
jmp
jb
out
jno
pusha
mov
shl
dec
push
and
jmp
mov
dec
into
or
pusha
add
aas
jbe
add
or
out
lahf
push
sub
lods
cmpl
jne
sub
in
leave
jl
stos
sub
inc
popl
cmp
cmp
sarl
dec
aas
int
gs
pxor
ja
fwait
jo
leave
add
dec
sub
and
xor
rcrl
add
es
add
out
cltd
and
pushf
jge
popa
lret
inc
push
mov
lret
shll
mov
push
xor
sahf
arpl
in
cmp
cld
sbb
loop
cmp
cwtl
pop
addb
cmp
fnstcw
scas
push
lock
std
push
mov
ja
add
into
inc
and
mov
pop
pop
add
xor
inc
cmp
mov
cmp
bound
loope
in
mov
out
pop
add
faddl
mov
loopne
jb
jns
ret
ss
dec
push
roll
mov
push
xchg
inc
out
lods
pusha
jmp
pop
popa
inc
jmp
mov
mov
lahf
les
pop
clc
dec
outsb
and
mov
hlt
fldt
sahf
addr16
aam
movsb
xchg
xlat
scas
inc
mov
xchg
xchg
bound
xchg
bound
stc
cmpsl
mov
xlat
repnz
addr16
stc
and
ret
sbb
mov
out
out
ret
pop
xor
adcl
adc
jb
push
adc
add
movsb
repnz
xor
xchg
and
stc
adc
mov
xor
sbb
outsb
in
rcll
into
movsb
sub
ret
rolb
pop
arpl
xchg
test
int
mov
shl
clc
int3
cs
jae
ret
imul
popf
mov
js
pop
mov
cmp
scas
and
int
or
mov
add
in
lods
mov
je
mov
in
push
cmc
popf
incl
sub
mov
dec
sbb
push
daa
dec
jge
sbb
push
pop
add
sub
int3
jbe
cmpsb
cmp
push
sub
movsb
mov
aaa
gs
pop
dec
or
loop
aam
or
outsb
mov
sti
rcr
mov
mov
mov
and
mov
push
repnz
ret
scas
xchg
dec
addr16
mov
cmp
int
ja
mov
ljmp
scas
adc
and
jo
orb
lcall
and
mov
aas
push
sbb
and
inc
ljmp
call
add
vandps
add
lret
movsl
jne
aaa
pushf
aad
or
outsb
mov
dec
movsl
notl
ss
or
xchg
inc
adc
lret
mov
xor
cmpsl
sbb
and
mov
xor
sub
leave
jno
les
sub
sti
dec
xchg
cmc
leave
nop
pop
mov
cmp
lods
mov
push
fdiv
dec
jle
cltd
sbb
xchg
mov
aaa
hlt
insb
xor
mov
test
push
inc
imul
jp
adc
jnp
test
pop
push
jl
ljmp
mov
in
pandn
jo
in
and
lret
xchg
das
addl
cmp
int3
cwtl
stc
movsl
and
mov
nop
icebp
pop
outsb
fcomps
push
loope
fdivrs
aaa
nop
test
mov
mov
sbb
aad
dec
adc
push
fidivrs
mov
push
push
push
mov
lods
add
test
ficomps
test
popf
adc
adc
pop
inc
vmovsd
aad
jns
and
jecxz
movsb
push
aam
push
jb
sub
sbb
es
cmp
or
rcrl
sbb
adc
jo
repnz
adc
gs
dec
sbb
sub
dec
jecxz
xor
jae
xor
popa
js
movsl
stos
xchg
imul
jmp
imul
cmpsb
icebp
adc
pushf
lret
cmp
pop
add
mov
jnp
loope
fstps
sub
int
pop
loope
aad
pop
lret
push
sarb
lcall
daa
lret
cmp
inc
cmp
in
pop
jg
inc
cmpl
mov
insl
cli
inc
and
aam
adcl
repz
xor
xor
jb
and
dec
mov
std
fnsave
xor
hlt
mov
xchg
xor
mov
cmp
pop
jb
jnp
inc
push
js
jle
mov
mov
ja
sbb
out
pop
or
movl
std
mov
lahf
pop
pop
jb
inc
xchg
insb
fsubs
movsb
mov
xchg
cmp
mov
pop
insb
icebp
pop
xor
das
xor
gs
div
pop
inc
repnz
jmp
add
sub
loop
cmp
aas
outsb
js
mov
pushf
mov
mov
dec
les
mov
xchg
in
xchg
push
mov
sbb
scas
ja
mov
inc
jl
add
cltd
sysenter
jle
pop
loopne
dec
jae
std
mov
incb
cmp
les
sbb
xchg
lret
and
fcomps
mov
pop
push
xchg
adc
fcoms
js
inc
add
cmpl
xor
fcomi
or
inc
std
xchg
lock
cmp
ljmp
pop
xlat
xor
scas
js
cmp
stos
les
pop
rcrb
outsl
fcmovb
lret
push
mov
sbb
enter
mov
addr16
push
xchg
and
push
mov
sbb
inc
popa
ljmp
adc
stc
mov
adc
cli
mov
sub
jo
pop
mulb
movsb
sub
sbb
scas
lret
shlb
popf
sti
iret
jb
loope
mov
fistpl
jmp
or
push
push
enter
sahf
ret
imul
mov
cli
mov
aaa
into
sbb
cwtl
cmc
popf
lock
dec
push
movsb
dec
xchg
test
mov
pop
pushf
sub
pop
call
push
out
mov
xchg
mov
add
jae
push
xchg
and
je
push
pusha
mov
mov
jg
push
xlat
add
repnz
pop
and
cmp
movsl
xchg
jecxz
mov
repz
jno
maskmovq
testl
add
sahf
in
and
insl
pop
sub
sub
push
lahf
pop
insl
lcall
mov
xor
add
mov
xlat
imul
lock
adc
or
adc
xchg
scas
push
and
stos
js
in
rclb
stos
jo
mov
inc
inc
lods
clc
cld
lea
test
data16
sbb
xchg
inc
and
insl
add
fisubl
sbbb
iret
mov
dec
popf
sbb
aam
ret
pop
es
inc
sahf
jle
jns
cmp
shrb
sbb
jne
mov
cltd
leave
insl
push
sbb
ja
adc
clc
xchg
vcomiss
sub
mov
cwtl
add
insb
push
jne
push
sbb
mov
sbb
xorb
pusha
ljmp
icebp
negb
jp
push
inc
ret
ficompl
js
inc
ret
xor
lcall
hlt
pop
dec
repz
cltd
inc
add
ficompl
mul
gs
cli
jl
push
data16
leave
and
jno
cmpsl
ljmp
popf
jnp
iret
fistpl
das
xchg
xchg
rcrb
movsb
sbb
ss
pop
push
adc
push
mov
scas
add
add
inc
jl
fsubrs
scas
jg
in
bound
ss
insb
gs
je
pop
movsb
std
fs
xor
mov
hlt
fisttpll
xchg
mov
aas
aas
jo
pushf
add
pop
xchg
pop
cmp
mov
adc
mov
or
pop
sbb
mov
into
out
ljmp
xchg
lret
fimuls
xlat
popa
cmp
mov
cmc
scas
cmp
in
lcall
push
lock
in
xchg
xchg
and
pop
cmpsb
add
lods
cmp
ds
ficomps
fwait
clc
stos
mov
lods
push
jle
leave
and
fisubl
cmpsb
fsubr
push
xor
or
xor
xchg
sbb
push
cs
repz
xor
mov
push
add
pop
out
mov
lretw
stos
jecxz
into
or
in
fnstenv
scas
push
xor
cli
pop
aaa
fdivrs
cmpb
les
push
push
aaa
cmpsl
ret
popf
cmp
pusha
pusha
dec
mov
aam
dec
push
xor
mov
mov
int3
push
or
scas
and
scas
xor
add
pop
mov
dec
jb
cmp
dec
mov
dec
jns
cmp
xchg
js
jge
xchg
fdivr
scas
adc
adc
loope
hlt
gs
cmp
mov
xchg
and
shrb
push
ja,pt
mov
out
add
jno
lret
adc
pop
inc
loop
aaa
notl
or
and
movsb
dec
sub
dec
add
pusha
push
mov
daa
ror
cmp
sub
sub
fstl
sbb
mov
cmpsb
fsub
stos
cmpsb
mov
cs
xchg
mov
lret
xlat
xor
out
mov
mov
icebp
jae
sbbb
dec
or
in
inc
sub
lds
inc
mov
stos
xchg
in
lcall
rcr
jl
push
pop
sub
push
dec
sub
stos
pop
add
das
push
push
ds
fwait
sub
pusha
cli
mov
cmpsb
mov
xchg
adc
mov
gs
xor
cmp
int
and
bound
fsts
movl
out
pop
je
push
fidivs
mov
shl
add
sub
out
into
popa
inc
sahf
sbb
cmp
mulb
insb
aam
cmp
lods
lret
fbstp
lods
xchg
push
jo
sub
and
stos
sarl
sbb
push
cmp
imul
add
out
loope
lret
mov
mov
cltd
xor
sub
lcall
xchg
or
xchg
and
cmp
adc
icebp
xchg
es
and
add
data16
ljmp
mov
das
int3
lea
mov
not
mov
aam
cmp
or
dec
int
and
insb
xorb
xchg
jns
adc
or
in
sahf
mov
dec
xor
mov
and
add
and
push
stos
cmpsl
and
mov
mov
push
aad
mov
and
das
push
lds
jp
and
xor
insl
push
test
cmp
ja
lret
jbe
fistl
pop
insb
mov
nop
repnz
xlat
test
nop
or
pop
sub
and
dec
dec
jmp
xchg
cmp
push
hlt
movsb
mov
addr16
pop
fimuls
push
lahf
cs
sti
pop
adcl
dec
and
scas
lret
jecxz
lea
mov
clc
dec
out
mov
push
jl
movsb
dec
jae
pop
cltd
sub
dec
popf
popf
cmp
into
sub
xor
addl
outsl
daa
mov
fsubrs
add
rcrl
push
xchg
jne
mov
jge
pop
add
mov
pop
push
xchg
sub
xchg
mov
cmpsb
fdivrs
or
pop
repnz
pushf
ret
pop
nop
outsb
cmp
mov
fs
fdivrl
outsb
pop
rep
inc
incl
ljmp
into
push
mov
mov
push
push
mov
add
loopne
push
or
lret
rorb
imul
mov
mov
cmp
adc
cmc
scas
sbb
sahf
minps
jle,pt
pop
aam
es
pop
cltd
inc
out
jnp
mov
imul
outsl
mov
pop
int3
and
stc
sub
pop
mov
lcall
mov
rcl
add
out
inc
test
add
lea
dec
fs
ljmp
nop
and
pop
adc
cmp
adc
cmpsb
xor
and
sbb
inc
mov
cmp
jbe
xor
sub
mov
outsl
jl
mov
push
dec
dec
dec
cmpsl
push
jae
std
dec
shr
or
inc
scas
in
subb
xchg
sbb
cmpsb
in
pop
mov
cwtl
mov
inc
fsts
cs
pop
int3
pop
enter
lds
cltd
sbb
xchg
test
and
inc
or
imul
in
jbe
jmp
je
stos
test
sbb
cmp
push
mov
xlat
adc
cmp
pop
lods
sub
fnstsw
and
jne
les
aam
cmc
test
aas
insb
icebp
das
fcomps
cmp
loopne
xcrypt-ctr
cmpsl
pop
loop
xchg
cli
repz
push
call
sahf
or
lds
cmp
ja
stos
xor
pop
fiaddl
push
or
in
xchg
imul
or
mov
jb
push
mov
jo
adc
jno,pt
jne
cwtl
loope
xchg
xor
inc
imul
dec
filds
repnz
mov
addr16
loopne
repnz
enter
fdiv
and
adc
gs
jbe
movsb
stos
adc
fstpl
xlat
out
pushf
fsubrs
sub
dec
mov
dec
dec
stos
dec
mov
push
push
imul
sub
rcrb
lret
jae
mov
mov
sub
rcrb
cwtl
xor
xchg
add
inc
jg
cltd
xchg
or
enter
push
cmp
add
mov
pushf
push
mov
pop
nop
addb
and
mov
pop
iret
jne
dec
popa
cltd
shrb
iret
sbbb
js
mov
inc
dec
sub
test
insb
pusha
mov
fmull
testb
js
out
jle
or
bound
je
dec
add
pop
cmp
sub
bound
pop
sbb
push
movl
adc
mov
xchg
lret
in
lcall
nop
lret
cmp
outsl
mov
xchg
adc
lods
outsb
jo
adc
test
xor
xchg
lcall
sub
and
fnstcw
call
testb
ficomps
sub
adc
add
xchg
xchg
andb
loopne
add
cli
xor
and
dec
imul
in
mov
pop
jnp
sub
movsb
insb
and
outsb
pop
xchg
sbb
xchg
in
fsubrp
inc
stos
imul
loope
lret
add
gs
mov
xor
mov
iret
cld
mov
add
xor
or
leave
pop
jl
testl
lret
mov
call
aas
bound
je
aas
cmp
out
or
or
fidivs
jg
sub
xchg
push
sub
iret
ret
dec
scas
jp
stos
or
push
insb
pusha
hlt
dec
mov
add
sub
sub
pop
or
test
dec
inc
mov
or
andb
push
fcomp
imul
test
xor
cmp
push
add
iret
sahf
int
xor
aaa
sbb
lret
lret
xchg
sti
add
jo
cs
fisttps
add
cmpsb
insb
stc
jg
mov
mov
stos
or
mov
lock
mov
nop
xor
xchg
loopne
loopne
arpl
js
adc
xchg
jns
adc
out
and
cli
jecxz
cli
push
test
cmp
ficoml
sub
ss
cs
xchg
sbb
repnz
test
adc
dec
sbb
inc
pop
and
sbb
mov
loop
out
mov
shl
js
xchg
out
dec
sbb
cmpl
jmp
push
icebp
repnz
mov
dec
dec
movl
ljmp
mov
xor
mov
lcall
das
cmc
xor
dec
int3
lret
out
insb
xchg
fcoms
adc
sbb
inc
incl
je
repz
dec
aaa
fldenv
push
mov
aad
mov
mov
pop
imul
jb
aaa
insb
add
lods
bound
fs
pop
gs
loopne
jne
repnz
sbb
outsb
shl
arpl
clc
dec
iret
push
movsb
das
leave
aaa
into
and
sbbl
jae
and
jge
xchg
rolb
push
add
arpl
adcl
sahf
outsb
outsl
int3
cmpsl
sti
popf
xchg
mov
jae
sti
cwtl
lret
or
loopne
and
push
inc
lds
mov
lret
xor
or
and
out
mov
cmpsb
int
push
sarl
cmpb
lds
scas
xchg
ja
int
or
ja
stc
rorb
mov
xchg
ret
loop
mov
inc
mov
sahf
lret
rcrb
add
pop
pop
leave
outsl
cltd
stos
popa
daa
add
icebp
sub
lds
pop
dec
out
es
ret
mov
or
mov
es
xchg
loop
daa
int
jecxz
ret
scas
pop
gs
not
add
cld
es
ret
loope
mov
inc
push
pop
mov
iret
cmp
jecxz
sahf
movl
pop
popa
repnz
fs
xchg
xor
fwait
sbb
xor
test
pop
push
aam
cmpsb
push
sbb
lds
dec
loop
mov
push
and
divb
jmp
mov
adc
push
and
add
dec
xor
jle
out
sarb
pop
pop
sahf
movsb
loop
shlb
mov
insl
mov
and
cli
mov
or
xor
pop
cmp
pop
mov
nop
xchg
cs
sub
in
imul
mov
jns
jnp
push
cmpsb
add
mov
push
mov
xchg
push
sbb
in
mov
and
and
js
nop
stc
push
in
or
lahf
push
lods
fdivs
repz
jl
flds
ficompl
scas
add
xchg
test
adc
add
stc
test
mov
or
push
and
and
aas
xlat
incb
jo
jno
loope
xchg
inc
cmp
add
and
adc
lds
push
jle
and
out
push
jne
mov
jo
out
xchg
mov
iret
addr16
je
fcoml
test
fldenv
dec
mov
mov
push
inc
xor
lock
mov
outsb
mov
mov
push
and
ss
inc
dec
xchg
add
sbb
mov
lock
mov
dec
xchg
iret
jae
cmp
int3
mov
adc
addr16
loop
sbb
sbb
cmp
push
je
cmpsb
jns
cmpsb
dec
pop
stos
xor
sti
xlat
stos
in
in
or
adc
insl
out
xchg
aaa
pop
mov
jmp
and
jno
mov
jnp
cmp
mov
xor
ljmp
sbb
jge
pop
int3
loope
loopne
or
lret
fimuls
mov
and
xchg
dec
mov
jle
xor
sarl
mov
sub
push
arpl
repnz
mov
out
and
jl
aas
or
jo
fsubl
mov
push
pop
lods
jge
fwait
jge
inc
push
aaa
fucomp
inc
mov
cltd
cmp
imul
adc
mov
mov
fcmovu
into
mov
xor
movsb
das
mov
leave
dec
dec
sbb
arpl
movsl
push
cltd
or
ja
mov
or
adc
cmp
and
mov
aad
jecxz
and
in
pop
test
push
test
mov
stos
push
and
loop
inc
mov
push
mov
jne
lcall
sti
ss
dec
push
mov
mov
xor
mov
cwtl
pop
loope
into
xchg
inc
dec
addr16
add
mov
push
dec
push
test
cmpsl
ret
rolb
cs
loop
push
xlat
or
adc
xchg
movsl
into
das
fwait
adc
sub
cmp
stc
sbb
fsubl
adc
into
ljmp
mov
cltd
cld
mov
test
mov
mov
xor
xchg
les
pop
mov
dec
dec
jae
pop
and
repz
addr16
inc
and
mov
ja
mov
jmp
jae
jbe
pusha
sub
adc
push
scas
mov
or
mov
add
xchg
int
in
imulb
mov
pusha
jp
push
into
adc
ret
and
jnp
call
jns
jmp
rcrb
inc
adc
sbb
dec
sti
pop
or
xchg
jecxz
ret
jnp
lods
outsb
jle
push
je
push
imul
lcall
cmp
xchg
addb
cs
std
ljmp
xchg
jbe
ret
and
dec
mov
in
push
mov
ds
mov
shl
lods
movsb
jns
add
cmp
xor
movl
iret
rcrb
sub
divb
jmp
aad
and
pop
lock
nop
mov
jp
subb
and
pop
adc
mov
inc
fistl
cmp
in
push
mov
je
je
fistpll
test
sbb
mov
jp
lret
mull
push
dec
mov
ds
imul
insb
jns
shlb
bound
mov
jo
xchg
xchg
push
loop
mov
xchg
sub
inc
arpl
das
orl
adc
pop
in
add
inc
std
stos
dec
call
sbb
arpl
add
pop
pop
addl
push
cltd
sbb
pop
adc
shl
mov
clc
pop
sub
mov
cmp
int
cmp
aas
out
stos
push
pusha
and
aad
pop
out
aaa
or
push
aas
pop
lcall
cwtl
cmp
xor
and
jae
mov
test
in
cltd
rcr
dec
addb
scas
bound
stc
sub
push
insl
outsb
add
push
call
jnp
stos
pushf
jb
sub
fisttpll
jge
cltd
jmp
adc
fldl
mov
push
mov
sarb
mov
inc
rol
shll
mov
pop
fld
fmuls
adc
aad
xor
js
mov
subb
or
imul
in
adc
dec
in
sbb
xor
xchg
sub
pop
clc
leave
aas
popf
les
aam
icebp
xor
std
sub
out
scas
add
dec
push
push
insl
enter
je
mov
push
call
scas
mov
cld
into
je
push
loopne
inc
inc
les
pop
mov
jbe
aad
movsl
movsl
jbe
jge
jne
nop
add
mov
enter
jp
aas
nop
and
push
push
sbb
aaa
or
flds
pop
icebp
mov
pop
cwtl
jle
pop
in
mov
mov
gs
xchg
shlb
push
inc
cs
dec
mov
lea
vpmacssdd
mov
sub
aam
pop
or
loopne
mov
jae
leave
adc
pop
mov
dec
fs
or
lods
sbb
jbe
cmp
pushf
call
sub
inc
loop
cli
andb
lahf
into
adc
jne
out
pushf
call
pop
shlb
testb
jno
lods
or
and
ret
in
xor
xchg
xor
sbb
sti
stos
xchg
cmp
sbbl
mov
test
sti
mov
es
cmp
and
loop
dec
ss
int
jl
scas
daa
clc
mov
outsl
scas
cmp
jp
mov
pop
test
jns
jo
add
xorl
data16
mov
sti
dec
push
sbb
dec
and
into
inc
lret
jle
push
rolb
xor
pop
jge
sub
dec
cltd
inc
shlb
cmc
fisubrs
popa
lahf
jae
add
jbe
aam
push
xor
call
sbb
add
and
mov
aam
jp
jno
cmpsl
push
movsl
addl
pop
pop
in
les
jno
xchg
push
subb
stc
add
clc
rcl
fs
inc
pushf
cmc
lods
jb
xchg
rep
mov
lgs
cmpsl
addl
fistpll
sub
ret
and
inc
sbb
setg
hlt
inc
inc
jb
cltd
mov
sbb
xchg
lock
mov
xchg
or
in
mov
out
sbb
xchg
push
cmp
int
mov
repnz
add
daa
cmpsl
out
xor
sti
pop
icebp
loope
jae
icebp
or
mov
nop
pusha
xchg
mov
or
mov
pop
fldenv
mov
js
leave
je
xor
invd
xor
dec
push
or
xchg
jnp
outsb
or
dec
lret
test
pushf
lods
jl
mov
leave
xor
xchg
movsl
xor
push
sahf
lea
pop
shrl
lods
fnstenv
push
and
pop
mov
cmp
lds
ss
jb
and
jnp
test
adc
enter
cltd
lahf
push
lahf
dec
jbe
leave
loopne
and
and
and
fwait
sbb
adc
jmp
call
pop
pop
sub
sub
jp
into
mov
adc
xchg
test
sarb
lcall
or
mov
add
sbb
adc
pop
mov
pop
cmp
inc
inc
scas
test
dec
movsb
jb
frstor
add
pop
jg
lret
cwtl
es
xchg
mov
sub
xor
jo
cmp
lret
addr16
dec
data16
push
ret
mov
mov
ficoml
aaa
fistl
push
outsb
je
into
daa
in
add
xor
and
push
test
scas
mov
xor
andl
scas
sub
add
adc
mov
sub
ret
cmp
imul
dec
xor
pusha
dec
inc
inc
push
mov
cwtl
dec
in
int3
pop
cmc
test
in
jmp
fwait
add
jecxz
js
leave
leave
mov
adc
push
inc
pop
mov
jbe
out
add
into
add
mov
test
das
cmp
sahf
cmp
mov
outsb
adc
mov
loopne
pop
sbb
insb
scas
jno
repnz
insb
out
out
sub
sub
xchg
imul
movsl
insb
mov
adc
xor
lahf
ljmp
sub
push
aas
xchg
mov
outsb
pusha
jnp
xchg
insl
add
fwait
out
into
faddp
xor
xor
or
push
insl
jns
or
xchg
ret
cli
test
pushf
cwtl
inc
push
stos
pop
push
stc
rclb
les
addl
sarb
outsl
mov
fs
dec
cmp
pop
dec
out
lock
and
mov
inc
pusha
idivl
mov
jbe
mov
aam
jl
icebp
push
jge
inc
aam
jno
sbb
cmpsb
dec
out
and
pop
inc
push
mov
pop
push
std
mov
das
sarb
pop
inc
sub
adc
push
mov
lret
cltd
inc
in
mov
adc
inc
push
bnd
mov
jmp
and
jbe
ficoms
lahf
xor
leave
pop
jnp
xchg
or
add
jbe
ret
sub
sub
mov
sbb
mov
adcl
xchg
dec
push
pop
fucom
popa
mov
out
inc
push
cwtl
loope
push
les
or
mov
pusha
adc
and
mov
jb
xlat
pop
cmpsl
pushf
push
cmp
fisubrl
out
pop
mov
mov
mov
loopne
pop
push
pop
popa
mov
jg
sti
stos
aam
pop
aam
and
roll
mov
mov
loop
pop
and
std
xchg
lock
push
jns
les
add
lock
scas
repnz
and
xchg
in
movsl
test
fldt
mov
dec
clc
push
add
adc
negl
mov
pop
aad
cmpl
push
mov
frstor
inc
pop
adc
and
ja
mov
push
jg
movl
push
jo
call
ljmp
dec
adc
iret
filds
js
orb
popf
rcll
out
mov
sbb
push
in
sub
insl
testw
xor
rorl
pop
mov
xchg
ja
outsl
mov
ljmp
into
jno
cli
mov
xchg
js
popf
and
or
pop
aad
mov
arpl
sarb
sbb
jns
adc
test
aad
lahf
fcompl
bound
xchg
ss
inc
lods
xor
or
addr16
cmp
xchg
or
jg
xor
inc
enter
sbb
test
mov
and
arpl
stc
movsb
and
add
mov
popa
dec
sub
gs
sub
and
mov
sti
pop
out
mov
fwait
add
jb
cli
stos
push
mov
mov
ret
sbb
or
je
fildl
testb
cltd
and
in
std
push
out
push
inc
push
aad
imul
and
and
mov
scas
inc
movsb
rorl
jecxz
or
gs
adc
jmp
cmp
stc
notb
pop
fnstenv
in
ss
dec
cli
push
imul
sub
or
insb
mov
adc
mov
lods
jp
cs
icebp
lret
addr16
aam
cmp
sbb
sti
mov
loope
sti
push
sbbb
jl
adc
push
xchg
icebp
aam
fiaddl
lcall
mov
pop
lahf
out
dec
aad
mov
sbb
les
xor
iret
cli
mov
mov
xor
push
xlat
jo
jnp
pop
stc
adc
pop
mov
dec
gs
mov
cmc
pop
mov
sbb
imul
dec
mov
fistl
scas
movsl
stos
cmp
cmpb
mulb
into
sbb
cwtl
push
xlat
adc
push
add
and
mov
or
test
pop
push
pop
sti
sti
out
push
test
test
repnz
sbb
sub
push
cmpsb
in
mov
mov
jmp
out
inc
jecxz
sbb
insb
mov
inc
lcall
lcall
pop
mov
cwtl
xchg
mov
jp
scas
sub
sub
xchg
roll
lods
adc
loopne
xlat
mov
gs
lret
fsubs
lret
xchg
inc
or
std
push
movsl
jnp
sub
hlt
jae
imul
rcrb
xor
mov
outsb
fstps
ja
repz
mov
jge
xor
test
std
xlat
mov
dec
fisubs
sbb
and
pop
mov
lret
add
mov
dec
xor
aas
pop
mov
mov
push
cli
cld
push
add
lret
xor
dec
jmp
mov
lods
arpl
js
mov
push
mov
js
xor
xchg
mov
xor
adc
outsl
mov
xchg
pop
jo
adc
test
add
pop
pop
inc
mov
rcll
test
iret
out
jae
inc
or
mov
repnz
mov
in
jo
data16
clc
add
jno
incl
adc
dec
aas
xor
jp
aam
int3
inc
popf
cmp
filds
mov
mov
mov
xorl
cmc
xchg
push
or
jb
movsl
jp
xchg
ljmp
loope
mov
lods
add
data16
sbb
std
dec
xchg
out
xor
jecxz
pop
cltd
pusha
sub
jbe
push
sti
sbb
fcmovne
arpl
shll
mov
leave
sub
lods
mov
stc
shlb
adc
jb
sub
xchg
icebp
icebp
mov
sub
shrb
jae
xor
and
test
cs
sub
jg
or
dec
push
sub
popa
rcll
iret
mov
ljmp
jae
inc
hlt
data16
aam
in
pop
gs
sub
mov
cld
mov
or
inc
pop
pop
xor
test
sub
pop
lret
push
push
dec
add
sub
loop
ja
jl
jmp
mov
lds
cmpsb
and
pop
nop
call
bound
cld
jne
adc
xchg
rcl
mov
adc
adc
adcb
inc
sbb
test
adc
pop
adc
lods
pop
pop
push
movb
int3
xor
pop
loope
add
add
icebp
test
sbb
mov
jg
mov
outsl
push
dec
loopne
push
cmpsb
out
lcall
pop
sti
sub
add
mov
bound
int3
cltd
testl
jp
add
push
fidivrl
clc
negl
mov
dec
out
cld
je
rep
sbb
or
mov
mov
push
or
mov
sbb
decl
xchg
in
adc
push
lahf
scas
jle
mov
push
ss
sub
fidivl
stc
and
xchg
push
dec
rcl
ss
or
lea
or
cwtd
sub
scas
xchg
cmpsb
dec
push
jl
aaa
decl
iret
loopne
shlb
and
sbb
mov
jne
cwtl
mov
mov
mov
push
add
cltd
shl
orl
mov
rcrb
js
fsts
fsubs
push
insb
divb
xchg
insl
pop
add
daa
imul
xchg
adc
dec
xor
inc
jecxz
jb
call
mov
into
xchg
add
push
xchg
inc
jns
and
test
cld
add
fildl
jmp
movsb
in
mov
lret
mov
cli
nop
popa
lods
cmp
lea
ja
or
jo
add
or
pop
cltd
out
inc
mov
pushf
push
sub
mov
shl
xlat
je
shrb
lahf
adc
and
mov
jno
imul
add
stos
push
jl
cwtl
ljmp
mov
push
sbb
pop
sbb
push
aaa
lahf
push
inc
daa
int
enter
cmp
xor
dec
nop
or
mov
lock
sbb
cmp
jns
pop
sbb
fwait
mov
inc
rcl
pandn
idivb
mov
adc
xchg
xlat
jg
mov
aaa
enter
rcr
mov
and
je
rcrb
hlt
mov
or
sbb
cmpsl
sahf
das
shll
lahf
dec
xor
xchg
jg
stos
adc
fs
dec
pop
inc
out
push
sbb
sub
and
notl
mov
movl
aas
xchg
mov
out
mov
sbb
movsb
decb
rol
js
pushf
xor
lds
xlat
mov
fsubrs
lahf
mov
mov
clc
stos
pop
pop
rcrb
or
lods
dec
dec
fistps
popf
lret
mov
mov
cmp
xlat
cmpsl
loopne
lret
mov
push
push
xor
push
scas
jo
or
lahf
adc
mov
ja
test
out
mov
fistpl
aas
dec
mov
dec
mov
jecxz
or
push
mov
or
or
fcompl
inc
bnd
out
into
mov
sbbl
mov
mov
mov
pop
fidivs
jbe
idiv
mov
xchg
dec
jb
or
aaa
por
mov
lds
mov
pop
xchg
int
test
aaa
mov
int3
jo
fiadds
inc
lcall
jbe
leave
or
xchg
mov
clc
imul
fwait
hlt
push
dec
scas
mov
xor
inc
inc
pop
xchg
cmp
xor
ret
cmc
xlat
neg
repnz
xor
psubb
xor
mov
sbb
sti
and
inc
je
idivl
xchg
mov
xchg
pop
pop
in
out
jge
or
loop
rcrl
and
mov
jns
fnsave
xchg
sbb
mov
hlt
divps
mov
xchg
pop
pusha
and
arpl
and
adc
repz
xor
lret
mov
addr16
push
and
icebp
loope
test
xchg
or
jo
cmpsl
or
movsl
shll
shlb
stos
jb
movsb
and
ds
xor
lock
lahf
dec
or
mov
fsubl
repz
dec
mov
xchg
cmpsb
not
xchg
roll
xchg
mov
outsb
test
mov
ljmp
push
loope
ret
jecxz
jl
movb
leave
adc
hlt
mov
sub
pop
and
push
mov
movsl
inc
repz
sbb
xor
ret
inc
dec
out
fwait
or
dec
mov
dec
mov
repnz
mov
add
into
loopne
mov
es
jmp
mov
adc
fsubrs
roll
push
add
xor
stc
fsubr
sub
mov
xor
cli
cmp
push
pop
fwait
sahf
push
dec
aam
sub
sub
pop
cmc
mov
pop
push
push
int
pop
cmp
or
sub
sbb
mov
jne
stos
lret
adc
push
out
adc
movsl
mov
mov
mov
push
outsb
repz
xchg
mov
adc
lods
xor
dec
jp
insl
fwait
test
add
push
rolb
imull
jle
repz
mov
gs
repnz
loopne
sti
bound
cmpsb
xorb
mov
mov
int
and
loope
push
out
add
mov
gs
stos
mov
ljmp
sbb
fcompl
aas
and
mov
bound
mov
or
jb
adc
and
in
or
stos
dec
out
adc
mov
hlt
shrl
fisubrl
mov
popa
es
sub
cmp
fdivrl
push
mov
das
mov
jmp
dec
movsb
xchg
imul
lcall
lahf
adc
in
int
movsl
shr
jge
cmpsl
cmp
fdivr
insb
xchg
sahf
adc
xchg
cmp
pop
or
cld
cwtl
push
add
pop
std
mov
into
dec
mov
mov
mov
push
std
scas
inc
cmpsb
inc
add
sti
sarl
les
insl
adc
stc
int3
jg
cmpsb
and
sub
cvtdq2ps
test
cli
push
lea
add
fiadds
adc
in
push
pop
fcmovb
in
xchg
rcrb
fiadds
mov
adc
xlat
ret
cwtl
jae
mov
push
xchg
sbb
inc
js
lock
popf
fstpl
jp,pt
fsts
push
dec
mov
inc
aam
dec
movsb
scas
mov
pop
add
fbstp
add
xchg
loope
sub
aad
mov
call
lret
call
cli
bound
or
and
jns
je
dec
push
pusha
fcompl
test
jl
fidivl
sahf
inc
inc
jb
mov
and
mov
jmp
call
in
inc
and
jo
subl
and
sti
cwtl
dec
mov
nop
push
push
mov
jge
xchg
ljmp
cmpsl
mov
cmp
mov
leave
repz
cld
mov
bound
mov
rorb
add
mov
xor
out
jl
xchg
rolb
adc
ljmp
mov
stos
sub
inc
dec
mov
rcl
cld
pusha
scas
out
mov
arpl
pop
xchg
in
adc
adc
hlt
lahf
pop
popa
into
or
popw
je
ficoms
cmpsb
jnp
dec
sbb
repz
mov
in
data16
movsl
pop
pop
pop
dec
dec
imul
lahf
scas
sarb
inc
xorl
loopne
mov
sbb
data16
stos
jbe
movl
cmp
cld
adc
inc
sub
sti
pop
sbb
jge
je
mov
mov
push
lea
out
shrb
out
add
cli
int
test
je
fnstcw
aaa
mov
mov
test
andb
hlt
jbe
insl
jns
cmp
mov
inc
loopne
add
pop
jmp
push
enter
add
xor
xchg
lahf
jmp
pop
add
mov
mul
sti
int
iret
lahf
inc
mov
repnz
sbb
push
arpl
xchg
cli
lods
xchg
scas
cmpl
xchg
push
imul
test
je
aaa
out
cmp
sarl
test
ja
mov
ja
push
sbb
stc
aas
aas
xor
xchg
scas
xchg
jae
out
cmp
sbb
fwait
jp
std
jno
lea
mov
push
or
and
sub
push
push
and
cwtl
or
mov
xchg
sbbl
and
mov
daa
jns
leave
and
xor
pop
lods
cwtl
adc
mov
mov
lds
lods
dec
aas
into
gs
sub
scas
jmp
push
sub
inc
inc
xor
stos
lret
pop
push
fs
push
movsl
push
fdiv
ucomiss
mov
stos
ret
add
cmp
mull
and
push
insl
setle
fxch
add
and
lods
cld
arpl
cmc
popf
pushf
add
pop
loopne
repz
cli
pusha
sub
push
mov
or
aad
arpl
sbb
subl
popf
add
sub
loopne
testb
fwait
mov
leave
cld
mov
push
ret
adc
mov
xor
lret
jecxz
mov
cwtl
gs
sub
push
dec
rol
xor
sub
xor
inc
or
or
mov
cmp
lcall
push
pop
imulb
jl
add
fidivrs
add
fcmovne
cmp
mov
push
xchg
cld
in
jg
arpl
test
push
dec
sbb
or
cmp
or
and
xor
test
andl
xchg
inc
imul
sahf
pop
mov
ja
mov
mov
bound
jmp
xor
and
rclb
inc
not
xor
mov
cld
pushf
int3
mov
aam
cs
lock
jmp
xchg
in
push
jbe
pop
mov
xchg
or
mov
jp
rcll
mov
ret
jae
je
sub
cwtl
mov
imul
ja
jmp
mov
sarl
xor
cmpsl
jno
fs
pop
lret
and
in
orl
jbe
mov
xor
xor
inc
sti
sub
fwait
testb
xchg
daa
iret
pop
cltd
and
jmp
push
loopne
dec
pop
add
shlb
xor
xchg
push
cmc
ret
lret
xchg
mov
xlat
mov
cld
imul
ret
cmp
dec
jl
dec
scas
sti
pop
xor
int3
repz
ljmp
xor
imul
mov
frstor
dec
fbld
leave
xchg
rolb
stos
jno
sub
rclb
movsl
fwait
xor
cmp
xchg
xlat
clc
mov
jo
mov
scas
lahf
cwtl
cmp
jge
rcr
insb
pusha
xchg
add
sub
loope
jns
adc
add
xor
add
fiaddl
jp
gs
xchg
or
mov
fstps
cmp
adc
in
mov
pop
push
in
test
cli
add
mov
fnsave
push
mov
pop
sbb
imul
and
testl
sbb
mov
ja
push
add
lcall
xor
xchg
pop
lock
movsb
inc
push
fidivl
pop
add
mov
cmp
shll
mov
sub
jg
jns
pop
stos
sahf
cmc
bound
and
mov
and
jg
and
inc
or
lret
insl
push
xchg
fiadds
mov
cld
scas
xchg
adc
push
adc
pop
iret
out
xor
xlat
cmpsb
add
or
fadd
shlb
movsw
stos
fsub
cmpsl
mov
sahf
sbb
cmp
jae,pn
jge
ds
adc
mov
push
push
jecxz
incl
mov
jecxz
mov
out
ficomps
jne
sbb
pop
mov
push
mov
cmp
add
lret
push
jge
ret
add
push
shlb
negl
jge
scas
lcall
iret
clc
fmull
rcrl
push
fs
in
jo
mov
jbe
sbb
xlat
mov
call
pusha
and
insl
inc
mov
mov
mov
mov
leave
jbe
loopne
mov
and
and
inc
cmp
mov
aam
bound
sub
cs
sbb
pop
cltd
nop
mov
out
imul
outsl
scas
cltd
mov
sahf
pop
or
sub
iret
leave
cli
stos
xchg
dec
cmp
into
cmp
mov
xor
push
mov
adc
cmc
jnp
push
iret
cmp
sub
jmp
int3
push
cmp
xchg
cmp
stos
sub
pop
pop
fstpt
jecxz
nop
pop
in
push
jp,pn
sbb
ss
fildl
and
ja
lods
out
aaa
adc
mov
test
sub
mov
daa
ljmp
xor
test
popf
dec
stos
dec
inc
or
mov
into
sub
pop
mov
addr16
pop
movsl
int
fildl
sub
and
pop
into
sti
mov
push
add
repz
jbe
pop
hlt
sbb
pop
jl
shrb
sti
dec
or
jecxz
sbb
popf
aam
ljmp
push
adc
mov
inc
adc
shlb
in
fwait
test
cltd
add
cwtl
outsb
rcrl
jbe
adc
adc
int
out
mov
mov
dec
and
jns
adc
pop
pop
or
outsb
pop
inc
mov
idiv
cmc
jmp
push
lea
ja
push
pop
ret
add
std
test
xor
or
fiaddl
xchg
sarl
mov
out
insb
cld
xchg
jo
test
jo
jns
jb
mov
scas
shll
imul
pop
and
mov
or
mov
andb
sbb
dec
mov
inc
add
push
add
jg
xchg
cli
stos
aam
push
pop
cltd
xor
jae
arpl
dec
ret
or
pop
in
cmpsl
loopne
sbb
mov
aaa
sbb
xchg
aam
aaa
sub
push
test
fdivs
lahf
xchg
in
dec
repz
roll
test
mov
mov
clc
sub
ss
push
ds
mov
adc
dec
dec
and
push
cmp
out
imul
pop
xlat
lds
repz
push
mov
cmp
sub
or
mov
cld
sbb
data16
ljmp
dec
scas
pop
outsl
jp
mov
ss
arpl
or
fists
test
clc
loopne
push
cmp
or
cmp
lods
fbld
add
testb
inc
repnz
arpl
imul
pop
mov
or
fldl
cltd
mov
popa
loope,pn
adc
scas
insb
mov
xor
mov
sbb
mov
idivl
out
xor
pop
inc
pop
sub
and
dec
mov
mov
pop
add
xchg
call
shl
aas
push
shll
ss
mov
mov
xor
daa
jmp
xor
leave
sti
pop
jns
loopne
cmpsl
adc
lock
icebp
mov
pushf
mov
popf
out
aam
lods
dec
jge
or
and
cmp
lea
je
les
divb
aam
clc
cmc
xchg
mov
push
repnz
add
inc
mov
cmp
dec
mov
mov
and
stos
sti
ljmp
ss
mov
or
mov
mov
xchg
test
or
sbb
pop
aaa
cld
cmpsb
test
leave
neg
adc
stc
in
jg
icebp
or
aas
jns
in
lock
ret
dec
popa
ja
pop
dec
ret
dec
inc
adc
push
dec
insl
push
sbb
les
cld
mov
pop
sar
dec
jne
je
inc
roll
nop
cmp
mov
mov
fldcw
stos
and
loopne
jns
jb
xchg
lret
jg
xorb
dec
test
repnz
dec
mov
inc
and
xlat
addb
sbb
xor
xor
pop
cs
cmp
mov
scas
or
push
sti
xchg
hlt
xchg
inc
inc
fistpll
add
inc
outsl
adc
mov
std
jmp
inc
movsl
sbb
jge
cmc
daa
cmp
push
ficoms
dec
xor
xor
test
sub
dec
jmp
dec
cmpl
ret
test
dec
ret
fimuls
mov
std
inc
xchg
and
push
lcall
push
lods
mov
inc
pop
arpl
adc
and
mov
and
mov
fldenv
mov
xlat
into
js
mov
pop
mov
mov
xlat
mov
mov
outsl
push
mulb
inc
in
xor
ss
push
bound
mov
nop
pop
sub
and
xchg
cmp
mov
pop
and
cmp
mov
imul
je
mov
push
jge
jnp
mov
bts
fstpl
xchg
xor
mov
and
sub
lcall
adc
cld
inc
sbb
mov
mov
mov
add
cmpsb
mov
shrl
pop
int3
sub
insb
or
repnz
add
mov
pop
arpl
mov
cmp
and
lahf
mov
test
push
aad
bound
mov
iret
out
sub
dec
in
sbb
pop
adc
sbb
adc
cmc
inc
pushf
sbb
outsl
test
and
cmp
repz
addr16
mov
gs
lret
lds
js
enter
test
xor
sub
dec
dec
das
jae,pt
lcall
mov
mov
negl
and
movl
adc
ret
push
push
cwtl
arpl
pop
sbb
rorb
add
add
popf
aad
bnd
xorb
aas
ret
xchg
insb
mov
mov
fildll
pop
std
imulb
add
push
sti
mov
xchg
std
enter
test
sbb
and
or
pop
mov
stc
fldl
pusha
cmp
js
mov
popf
add
lahf
mov
mov
push
lcall
cmpsl
inc
jo
out
inc
mov
lea
dec
ret
and
ss
or
stos
jb
test
aam
bound
push
inc
xchg
jno
mov
lahf
xchg
dec
mov
adc
and
jne
mull
out
mov
pop
and
fwait
add
loope
inc
sub
cmpsl
xchg
push
inc
je
jle
push
mov
aad
lcall
lea
ret
cmp
rorl
dec
mov
add
insb
pop
aad
int
sahf
in
rcrb
push
clc
testb
pop
imul
jl
int3
xchg
pop
loop
pop
insl
xor
xor
pop
push
mov
mov
cmpsb
sbb
cmp
xchg
push
dec
ss
addr16
int3
mov
jge
push
pop
stos
lods
loope
mov
push
mov
lret
jb
cmpsb
xor
adc
xchg
sbb
out
bound
out
das
xor
xchg
lret
xchg
fs
js
fidivrs
mov
rcrl
fcmovnbe
push
mov
dec
rol
lods
jl
cs
fsts
add
cmp
rol
pop
hlt
imul
pop
sbb
cmp
and
adc
lret
push
hlt
mov
pop
xchg
pop
or
ljmp
sub
jge
pop
sti
in
in
outsb
fidivrl
push
shll
xchg
lret
cs
int
dec
mov
mov
sbb
adc
movsb
xchg
mov
lock
leave
push
dec
ja,pt
mov
and
inc
push
push
xorb
jae
add
jecxz
cmp
lcall
sbb
add
jecxz
cmp
lahf
push
lock
inc
sbb
ficoms
jbe
js
mov
dec
ss
aas
enter
inc
test
or
jmp
pop
popf
sub
jl
lods
inc
iret
data16
ljmp
mov
mov
mov
inc
inc
cmpsl
mov
xchg
pop
int3
push
pop
in
inc
in
movsb
push
les
mov
movsl
cld
and
lahf
je
int3
jle
lahf
jecxz
shlb
sbbl
outsl
adc
imull
sbb
mov
xor
aaa
mov
mov
sub
and
xchg
hlt
push
mov
das
pop
mov
es
repnz
xor
jle
popa
mov
rcll
out
jns
popl
pop
jl
mov
fidivs
cmc
jb
pop
icebp
add
sub
sub
gs
mov
pop
cli
es
mov
xchg
xchg
push
movl
das
lahf
ret
sar
xorl
test
pushf
mov
shrl
in
sti
popa
and
subb
jae
push
dec
test
lcall
and
sub
push
lock
jmp
sub
push
rdmsr
mov
loope
push
cmc
lret
in
sub
or
mov
mov
sub
fwait
ja
cwtl
jl
inc
dec
jp
ror
pop
adc
test
xchg
fbld
lahf
pop
jbe
ret
jmp
xor
cmp
stos
push
sub
push
adc
jmp
dec
jns
pop
ljmp
push
insb
cmp
jecxz
sub
cs
xor
jg
push
lcall
aad
jmp
cwtl
adc
dec
inc
mov
cli
mov
daa
dec
popa
insb
cld
insl
in
rolb
sti
xor
mov
mov
push
mov
push
mov
pusha
das
leave
lcall
aam
orb
add
sub
xchg
js
or
rol
adc
insl
jbe
mov
aaa
imul
inc
arpl
movzwl
push
jge
jns
imulb
and
or
imul
movsl
sub
inc
cli
enter
out
jl
pop
test
lock
jns
mov
xor
clc
test
adc
jle
dec
in
addr16
inc
and
cli
pop
sbb
jne
aas
pop
stc
cmc
push
leave
int3
cmp
push
shrb
xchg
xlat
dec
inc
sub
sbb
cmp
aaa
adc
cmp
inc
cmp
fadds
inc
xchg
add
repnz
call
mov
mov
lea
negb
mov
pop
fcmove
and
sbb
mov
jge
sub
push
movsl
dec
and
sbb
mov
jecxz
inc
pop
push
sbb
ror
ja
cmp
adc
into
in
jae
out
dec
loop
int
dec
test
mov
push
daa
cmpsl
xlat
es
sbb
push
lea
outsb
add
xchg
sub
pop
ficoms
inc
mov
pop
mov
cmp
ljmp
sbb
and
or
enter
and
imul
fstpt
dec
ja
push
scas
test
repz
jnp
jns
pop
add
adc
mov
mov
sub
mov
fnstenv
test
js
and
and
sbb
dec
adc
cmp
fwait
mov
cmp
mulb
lods
int3
test
mov
daa
fwait
pop
mov
sbb
les
and
mov
cltd
xor
fmull
add
or
or
sbb
and
and
stos
sbb
lcall
jle
rorb
sbb
inc
aas
sbb
scas
adcl
mov
in
pop
in
mov
cmp
inc
jo
sbb
aad
fisttpll
jp
xchg
imul
test
jmp
sub
push
xchg
sub
mov
lahf
dec
xchg
outsl
es
ja
xor
xor
pop
mov
pop
mov
insb
pop
xor
cmp
mov
mov
sbb
cmp
pusha
jmp
mov
sub
add
fmul
clc
addl
iret
push
rol
xchg
test
add
sbb
pop
pop
push
cld
cli
and
pop
notl
mov
andl
or
test
push
dec
ss
cld
xchg
movsb
lret
mov
dec
xchg
fcoml
ret
adc
loope
pop
cltd
adc
fwait
jmp
sub
stc
lret
push
ljmp
xchg
in
xlat
dec
jge
ret
incb
cld
mov
pop
cltd
dec
arpl
out
test
decl
sahf
adc
femms
dec
lret
adc
sub
pop
sbb
leave
cmpsb
add
cmp
test
inc
add
dec
icebp
jg
mov
pop
push
sub
repnz
or
fcompl
dec
lret
ds
pop
addl
adc
push
pop
mov
daa
mov
adc
sub
js
xchg
xchg
mov
into
pop
test
cmp
lcall
movsb
mov
jp
scas
pminub
std
sbb
mov
gs
pop
arpl
push
dec
aas
outsl
push
mov
lret
push
and
movsb
mov
sub
mov
jmp
mov
fnclex
jbe
push
icebp
push
mov
test
and
fistpll
jecxz
pop
xor
aas
sarb
test
pop
sub
lahf
hlt
sub
scas
xor
xchg
rolb
xchg
cli
jmp
movl
cmc
mov
inc
rorl
pop
aas
or
add
insb
ja
movsl
mov
cmp
clc
mov
int3
xchg
inc
sbb
and
int
xchg
mov
rcrl
mov
div
jmp
in
mov
cmp
insb
xor
cld
mov
scas
fadds
mov
jle
test
mov
addr16
sti
dec
dec
or
aaa
lahf
test
pop
push
cmp
sarb
mov
mov
xchg
jle
cltd
testb
xor
adc
mov
adc
pop
repnz
mov
nopl
lods
paddusb
bound
lahf
jle
test
xor
fisubrs
aad
push
rorl
ret
sarl
adc
out
ja
in
fnsave
xor
arpl
jg
or
out
aam
idivb
shlb
sub
test
pop
data16
xchg
je
lods
je
movsb
dec
les
dec
insl
lret
addb
es
adc
mov
inc
add
add
inc
sbbb
out
sbb
mov
loop
fimull
xorl
dec
insb
pop
fisttpll
nop
push
adc
fnstenv
daa
fs
addr16
adc
shll
sbb
or
pop
fiaddl
mov
mov
movsb
add
mov
rol
xchg
push
xchg
pop
jno
inc
xchg
into
popl
js
aaa
jl
sahf
add
loop
shlb
mov
stc
dec
pop
cmp
mov
mov
cld
mov
sti
test
mov
push
repz
loope
aaa
int
add
adc
push
sub
jmp
mov
dec
xchg
hlt
cwtl
xor
dec
dec
lock
push
ret
ja
ja
jne
push
into
sub
jecxz
in
mov
mov
ljmp
fists
xlat
xor
cmp
cmp
sbb
movsl
xchg
lahf
jb
sbb
cmpsl
shll
les
sub
mov
jno
es
jno
repnz
sbbb
fs
nop
mov
sbb
bndstx
aad
movl
or
jb
pop
inc
fwait
mov
pop
mov
dec
jle
outsb
std
push
mov
cs
push
shl
cmp
pop
add
setp
movsb
cmpsb
and
jb
outsl
push
mov
lret
dec
rclb
pop
pushf
fistl
mov
pop
push
mov
pop
clc
inc
xchg
push
ud0
lahf
mov
mov
or
push
xlat
push
lcall
xor
xchg
jae
pop
xor
lahf
and
fmull
rorb
testl
pop
mov
inc
dec
cwtl
sbbl
push
imul
subl
jl
mov
xchg
test
int3
fwait
shlb
mov
iret
incb
neg
outsl
mov
pop
jecxz
jo
scas
std
xchg
gs
mov
adc
jecxz
xchg
imul
outsl
jle
mov
add
or
int
jnp
mov
les
push
xchg
mov
sbb
cmp
xchg
push
push
add
loope
out
pop
mov
ja
and
add
mov
std
std
subb
mov
loope
and
aad
fistl
je
imul
mov
jae
ds
gs
movsl
cmp
jnp
xchg
in
repz
mul
mov
aas
jg
ss
xchg
scas
jmp
xor
mull
test
fcom
sub
mov
sbb
inc
nop
jg
fs
dec
add
mov
push
mov
mov
sub
push
aam
cli
pop
in
scas
packssdw
ret
and
add
jns
push
cmp
and
fildll
mov
mov
mov
push
mov
sbb
test
inc
dec
push
jmp
clc
pushf
in
clc
mov
subl
mov
out
dec
mov
leave
add
jno
popa
xchg
mov
in
cmp
push
add
ja
mov
sti
cs
sbb
mov
pop
push
ficoml
nop
iret
ds
adc
jne
inc
sahf
cmp
add
pop
scas
add
jmp
push
ficompl
sbb
popl
xchg
nop
sbb
cld
inc
push
fisttpll
pusha
xlat
test
inc
loop
fsts
cmpsl
mov
and
mov
or
aaa
ret
inc
sub
cmpb
jo,pn
ds
pmaddwd
xchg
push
adc
test
scas
or
outsb
movsl
cmovl
stos
imul
sbb
clc
mov
inc
add
jecxz
aad
mov
arpl
dec
or
and
iret
rol
test
push
into
mov
push
jb
push
mov
and
cli
jo
cld
and
fwait
or
rorb
outsl
jmp
cmc
pop
test
outsb
add
rcl
sbb
repnz
stos
and
and
xchg
push
data16
dec
in
sbb
xor
sti
loop
fwait
sti
movsb
repz
push
test
mov
ds
mov
pop
dec
sbb
sbb
cmp
add
fisttps
iret
ljmp
mov
dec
sub
push
mov
pop
stos
dec
mov
negb
or
jnp
inc
sub
idivl
mov
js
mov
lret
pop
subl
xchg
in
xchg
movsb
jnp
inc
jl
ret
or
sub
xor
mov
add
stos
lods
xchg
xchg
xchg
mov
ds
add
leave
cmpsb
pop
loopne
repnz
stc
mov
ds
and
enter
mov
aas
xchg
dec
sbb
les
or
lods
jecxz
pop
sub
and
lcall
push
shll
lods
mov
push
cmp
push
xchg
repnz
xchg
jp
push
pop
addb
add
std
mov
bound
movsb
addr16
test
inc
cmp
cld
pop
jp
push
sbb
movsl
sbb
divl
in
push
aam
in
cltd
mov
sub
jb
and
or
and
test
mov
fidivs
and
inc
cs
loope
xor
fdivl
in
jae
pop
and
inc
pushf
lds
jmp
xor
or
mov
dec
dec
jno
jns
scas
cmp
mov
or
cmpsb
dec
push
push
lods
dec
sbb
push
icebp
xor
or
jle
mov
fisubrs
fisubl
inc
mov
insl
shll
xchg
call
xchg
sbb
push
es
xchg
or
aam
mov
fsts
andb
scas
sbb
out
pop
xchg
pop
or
fstp
imul
cli
shl
sbb
push
xor
xchg
or
sbbl
sub
gs
movsb
mov
loopne
movsb
adc
aas
mov
sbb
in
adcl
in
mov
dec
mov
out
push
mov
loope
outsl
in
inc
mov
pop
andl
mov
jge
and
test
mov
cwtl
jp
test
dec
adc
dec
ja
mov
mov
cmpsb
sarb
push
fnstenv
inc
shlb
cmp
xchg
lret
cmpsb
xchg
cltd
or
push
fcom
loopne
push
jp
dec
cmp
jo
loop
dec
and
fsubs
inc
iret
pop
cwtl
sbb
xorl
xchg
mov
insb
testb
mov
aaa
mov
movsb
cld
pop
testb
jle
lret
lahf
jbe
sbb
es
sbb
int
icebp
clc
lret
sub
mov
repz
mov
cmpsl
outsw
mov
sbb
or
jne
jmp
cmp
mov
cld
xchg
mov
int3
das
pushf
repnz
outsb
mov
fsubrs
in
rol
out
ja
ffreep
xorb
sbb
pop
jo
stos
addr16
sub
inc
mov
int3
insl
in
imul
xchg
push
shrl
stc
adcl
out
mov
cwtl
xor
push
popa
daa
xchg
ror
mov
and
and
insb
xchg
loop
add
leave
imul
cmp
aad
mov
adc
sarl
inc
hlt
movsb
arpl
adc
cltd
mov
xor
xchg
xor
pop
sub
xor
outsl
cmp
in
adc
shlb
mov
cs
xchg
sbb
mov
push
scas
shlb
out
cmp
xor
push
cli
mov
mov
dec
sub
push
add
dec
add
insb
adcb
mov
dec
xchg
mov
mov
xchg
out
fidivs
fcoms
int
adc
jbe
lahf
stc
pop
mov
and
lahf
lret
pop
add
jns
mov
push
dec
push
mov
out
mov
sarb
push
dec
jb
add
repz
ret
in
out
mov
cwtl
dec
mov
test
in
ds
sbb
in
xlat
mov
movsb
mov
roll
fnop
outsl
pushf
mov
out
mov
scas
adc
xchg
pop
adc
xor
cli
fcmove
xchg
loopne
ret
cmp
xor
xor
add
jle
roll
sub
adc
add
adc
and
ret
enter
inc
sbb
push
call
scas
sahf
mov
cs
shll
inc
xchg
mov
jb
dec
sbb
push
sbb
cmp
cmp
fbld
lcall
imul
pop
loopne
cmp
test
icebp
mov
jb
xor
xor
jecxz
sahf
mov
dec
push
fcmovne
jnp
outsl
lahf
aam
outsl
xor
mov
movsb
nop
fistl
push
pop
data16
fcoms
adc
lret
fisubs
orl
lret
fldt
iret
xchg
and
jl
pop
dec
xchg
ret
xor
xchg
xchg
adc
sbb
out
lock
lahf
push
mov
mov
sbb
xchg
lcall
mov
and
add
lods
call
or
xor
mov
and
and
jne
xlat
pop
push
jl
pop
stos
bound
inc
das
lock
sub
mov
xchg
mov
xchg
pushf
mov
jnp
call
enter
pop
lds
bnd
xor
inc
push
or
jnp
popa
dec
jae
out
xor
sbb
data16
movsb
jae
jno
xlat
mov
outsb
out
les
cmp
add
dec
fs
or
inc
jbe
in
mov
fildl
aaa
arpl
pop
sbb
add
mov
adc
cmp
movsl
pop
jp
mov
cmp
js
dec
inc
dec
mov
mov
mov
lcall
in
divb
mov
orb
cmp
dec
int3
in
addl
add
mov
or
xor
push
and
iret
adc
neg
dec
xor
in
cli
xchg
cld
xor
ret
stos
push
cmp
mov
aaa
icebp
mov
mov
xchg
mov
je
jo
stos
lret
mov
or
cwtl
lea
hlt
push
xchg
sbb
loopne
mov
xchg
les
adc
add
pop
test
jb
lcall
push
xchg
test
jecxz
int3
mov
xor
daa
inc
mov
rclb
in
rolb
push
out
das
mov
push
xchg
cs
push
xor
mov
shll
cltd
shrl
and
push
pop
imul
ret
mov
cs
loopne
clc
adc
pop
jmp
pop
ret
jmp
or
std
sbb
dec
lret
fs
xchg
cs
xchg
push
in
push
pop
in
jecxz
pop
mov
shl
or
xor
fwait
or
out
cmpsl
pop
inc
and
or
aaa
adc
mov
add
movsl
add
mov
call
clc
pop
adc
xor
xchg
dec
sbbl
outsl
ret
jne
rcl
jbe
decl
and
in
scas
add
sub
shll
jge
je
lock
stos
cmp
xchg
mov
cmpsl
and
popa
mull
outsb
dec
cmp
xchg
mov
pop
jmp
xchg
je
xchg
push
cs
push
push
mov
push
and
inc
cmp
cmp
add
popw
pop
out
xchg
int3
das
add
stos
adc
nop
leave
lods
scas
inc
dec
arpl
lock
add
ljmp
jns
movsl
mov
cltd
pop
aam
addr16
ret
fistpl
pop
shlb
mov
xchg
push
movsl
clc
leave
xchg
testb
negl
jne
or
lea
mov
jp
roll
and
push
aam
das
pop
jbe
leave
dec
lret
jnp
push
cmp
mov
push
scas
jmp
mov
push
push
test
cltd
sbb
imul
jp
mov
stos
movaps
jno
loopne
cld
roll
cli
push
insl
scas
xchg
clc
lret
cmp
not
push
or
sub
sub
mov
xchg
jne
lods
imul
cmc
es
inc
shll
cli
in
push
xchg
cmp
mov
fstl
or
cmp
dec
sbb
imul
adc
pop
pop
ljmp
push
mov
lcall
stos
jmp
or
mov
lds
inc
mov
and
das
pusha
cltd
and
cmp
pop
cmp
jae
fs
add
adc
clc
popa
pop
insl
out
mov
push
mov
js
adc
negl
jmp
gs
and
cmp
or
adcb
lods
ljmp
mov
inc
inc
mov
dec
xor
icebp
or
loopne
in
cmc
push
dec
jle
aas
rcrb
scas
jae
pmulhuw
mov
std
std
fneni(8087
xchg
jmp
cmc
mov
sti
jbe
stos
and
add
rolb
sbb
push
gs
shrb
xor
les
pop
int3
aam
arpl
outsl
inc
je
sbbl
mov
mov
fdivl
aaa
ror
loop
cmpb
shll
lds
scas
sti
and
jg
mov
push
jp
mov
cltd
sbb
adc
sub
dec
xor
pusha
pop
out
inc
fs
cmp
test
cli
ret
sbb
adc
jae
mov
jecxz
imul
mov
push
bound
cmpsb
cmc
inc
int
stos
mov
hlt
xchg
push
push
push
pop
sbb
imul
mov
sub
std
or
cs
call
mov
stos
pop
mov
add
add
aas
test
cmpsb
adc
push
sub
ljmp
mov
jg
pop
push
and
jge
jae
inc
push
enter
fs
jo
je
js
xchg
pop
repnz
add
mov
shl
and
out
xorl
jle
or
add
push
push
scas
pusha
jns
shrl
add
arpl
ss
cmp
shlb
pop
xchg
mov
push
hlt
dec
sarb
stos
and
ficoml
arpl
jmp
decb
jae
in
into
pop
loop
aad
sbb
icebp
mov
aam
aad
mov
sbb
adcl
add
inc
mov
pop
pop
pop
push
mov
orl
xchg
hlt
or
shrb
or
cmp
or
cmp
mov
repz
ror
fsubs
jmp
test
or
xchg
insb
rolb
mov
aas
das
enter
in
jge
es
ds
cmp
test
lcall
jge
shr
sbb
dec
jg
in
push
lahf
cwtl
lcall
in
je
adc
sar
mov
sbb
stos
cmp
jae
inc
test
test
and
xchg
sbb
mov
mov
mov
sub
xchg
and
rolb
mov
or
push
xor
popf
ss
fnsave
sub
sbb
cmpsb
pop
xchg
std
in
pop
into
xchg
cmp
mov
and
dec
push
fst
addb
push
loopne
pop
lds
xchg
cwtl
cmp
pop
lcall
xchg
popa
push
aas
push
jmp
test
pop
enter
adc
jge
iret
jg
push
js,pn
int3
cmc
cmp
lods
jno
cmp
clc
dec
in
aam
xchg
dec
and
or
push
jae
adc
cmp
or
pop
jp
xchg
push
je
out
rcr
pop
je
aad
jbe
mov
fisubs
xchg
out
shr
inc
subb
and
add
sahf
loope
fiaddl
scas
iret
and
sbb
stos
test
and
mov
shld
pop
push
stc
icebp
sarl
xchg
xchg
and
xchg
push
shll
notb
inc
jle
inc
repnz
push
fbld
inc
push
pop
inc
ret
cs
or
jge
out
push
inc
enter
es
mov
or
xorl
add
js
test
movsb
aaa
jl
jg
cld
dec
aam
lea
mov
sbb
mov
jns
sar
vpaddq
mov
mov
dec
mov
pusha
push
jg
fidivs
cmp
or
add
roll
inc
mov
popa
xorb
add
std
repz
mov
setb
inc
pop
mov
ret
jb
xor
jno
mov
movb
and
pop
jo
lret
jecxz
sub
es
imul
cmp
sahf
inc
fcoml
loope
aam
lahf
mov
xchg
xchg
cld
pop
andl
test
gs
lds
xlat
lods
xor
mov
jnp
sarl
mov
popf
jp
cmpsl
push
mov
fld1
sbbl
orb
adcl
and
jg
xor
in
xor
add
xchg
enter
xchg
inc
in
lcall
sbb
aad
and
cmp
pop
adc
addr16
adc
cwtl
xor
xchg
jl
adc
jnp
mov
cmp
jmp
cmp
jbe
sbb
xchg
jo
and
subl
outsb
cmp
pop
dec
mov
insl
lea
and
mov
pop
and
add
movsl
int
add
jle
cmp
dec
inc
sbb
dec
jno
inc
push
xchg
lock
fistpl
mov
adc
ret
cmpsb
es
sub
cmc
mov
jbe
out
jmp
leave
dec
gs
pop
inc
ja
jl
lods
push
or
mov
or
call
shlb
inc
mov
cli
adc
xor
lret
sti
lds
js
cmp
or
jb
or
es
or
lds
sbb
dec
loopne
add
mov
sub
xchg
pop
push
clc
jmp
jno
insl
lock
and
in
fcmovb
or
mov
cmc
into
xor
imul
test
or
push
pop
imull
xorb
test
aam
test
dec
clc
mov
xor
push
pusha
sub
cmp
fistps
jge
xor
mov
sub
ljmp
inc
jnp
and
dec
lock
fldcw
inc
fs
scas
aas
and
adc
xchg
mov
andb
dec
push
pop
call
gs
or
sahf
fucomp
sub
ss
push
int3
movsb
pop
xlat
jo
sub
lock
xchg
dec
arpl
xchg
push
stc
fsub
sub
xor
scas
repnz
mov
sub
dec
jecxz
loope
cmpsb
fcoml
aaa
enter
or
xor
imul
cmpsl
jne
xlat
mov
bound
mov
adc
jmp
lds
sub
dec
cli
push
cmp
sbb
data16
cmpl
xchg
cmp
je
adc
adc
jae
adc
int
sub
jp
push
cmpsb
stc
ds
cmpl
sarl
jl
and
loope
jle
jbe
xchg
xchg
rcr
dec
nop
cmc
mov
out
scas
jp
xchg
outsl
mov
jns
push
addr16
cmp
loope
xor
pop
xchg
loop
mov
jl
arpl
rcll
jns
bound
xchg
push
sub
stos
xchg
adc
jmp
mov
push
nop
leave
popa
mov
xchg
inc
push
incl
jbe
insl
fidivs
fsts
cmp
push
mov
pop
mov
jmp
push
ds
das
mov
cmc
jp
mov
icebp
imul
adc
std
outsb
xchg
fsubs
jg
xchg
mov
cmp
lock
arpl
test
jecxz
leave
in
xchg
out
lcall
shlb
cmpsl
cmp
cmpsl
inc
mov
subb
dec
les
je
out
cmp
sub
or
rcl
orb
push
fldenv
rorb
cmc
inc
nop
andb
imul
pop
jge
sbb
pop
cmc
loopne
shr
data16
lret
pop
mov
pushf
sarb
jl
ret
mov
adc
bound
xchg
push
jnp
aas
and
inc
mov
dec
ret
mov
out
cmc
mov
sbb
adc
sub
mov
aas
inc
popf
jnp
add
pop
xlat
cltd
std
xchg
inc
push
lds
imul
aaa
bound
imul
cmp
xchg
mov
ss
repnz
outsb
fs
ret
mov
lock
jp
pusha
xchg
inc
mov
pop
and
mov
cmc
pop
add
inc
inc
pop
or
adcl
inc
pop
sahf
call
push
insl
jns
inc
lahf
mov
pop
repz
mov
adc
jae
fisttpll
lahf
fstl
push
add
push
aam
dec
xorb
lods
cmpsb
std
sbb
or
inc
xor
gs
adc
sub
rcr
mov
pusha
clc
jo
push
stos
pushf
pusha
je
jns
sbb
mov
dec
push
fwait
dec
loopne
pusha
mov
popa
pop
pop
xchg
xchg
or
sub
cmp
rol
jge
adc
scas
mov
sti
and
mov
push
fimuls
push
arpl
sbb
inc
mov
pop
imul
push
mov
cmp
cmp
inc
icebp
sub
clc
add
pop
xor
fistps
cli
xor
movsb
mov
jbe
adc
xor
add
repnz
and
cmp
dec
add
lret
cs
shlb
repnz
sub
outsb
inc
jns
mov
out
test
outsb
or
sbb
mov
and
add
out
add
jg
jle
inc
add
addr16
adc
aad
or
sub
jp
mov
mov
pusha
or
push
call
nop
stos
jno
ret
xchg
jb
add
leave
jbe
sub
add
add
out
add
sub
mov
dec
or
lret
mov
mov
push
or
jmp
mov
test
adc
sub
stos
sub
imul
sub
pushf
or
aas
mov
add
mov
inc
popf
flds
rcll
pop
add
loope
sbb
repz
rolb
out
inc
xchg
dec
stos
addb
notl
cld
mov
or
mov
mov
adc
push
mov
cltd
fwait
lods
fs
fs
in
stos
xchg
push
ljmp
jl
dec
aas
dec
pop
sti
clc
lret
out
pop
cmp
out
or
ret
dec
je
push
mov
and
les
xchg
and
rorl
daa
adc
xor
xchg
nop
mov
mov
les
add
push
push
cmpsl
and
mov
xchg
or
lds
outsl
es
add
xchg
inc
mov
push
inc
cltd
xchg
aas
iret
sti
pop
mov
sbb
mov
jge
adc
gs
jne
jae
dec
lcall
in
lock
lds
inc
repz
dec
add
nop
aad
cmp
mov
stc
jle
jg
mov
fwait
add
jl
mov
insb
aam
sti
lahf
push
fmull
aad
in
dec
les
sti
insb
test
js
dec
fmul
and
out
repz
stos
adc
lahf
popf
outsb
mov
fsub
std
lods
insl
xchg
stos
out
test
mov
xor
pusha
or
jnp
mov
xchg
cmpsb
enter
in
mov
int
push
scas
imul
or
jecxz,pn
jge
aam
fisttpl
shll
pop
sub
aas
inc
sbb
jno
jecxz
hlt
je
cmp
pusha
cmpl
mov
test
cwtl
and
ficomps
loopne
cs
cmp
xor
test
sarl
shl
push
lods
clc
jle
lock
lods
jno
inc
movl
push
mov
shl
jl
mov
cwtl
sbb
dec
sbb
rorl
outsb
in
insb
mov
push
or
repnz
push
mov
jb
sbb
push
mov
mov
pop
pop
je
mov
daa
push
dec
subb
mov
sub
pop
shl
jl
ds
test
push
ja
je
loop
scas
pop
call
sub
into
lahf
jo
or
jbe
jbe
xchg
sarb
fmul
jnp
dec
push
xchg
fdivrl
lcall
cmp
int3
xchg
jg
ds
pop
push
push
mov
int3
sub
popa
lret
int
js
adc
shll
sub
jmp
js
aaa
mov
inc
aaa
inc
fucomip
sbb
cld
fsubs
nop
sti
jns
lea
ja
xchg
cmp
aam
xor
aam
sti
add
and
mov
mov
mov
cmp
stc
icebp
pusha
xchg
lret
xchg
pop
pop
lcall
adc
dec
gs
nop
outsl
int
push
test
sbb
in
in
fcmovb
jb
es
popf
dec
mov
cwtl
jnp
cmp
mov
aam
push
lret
loope,pt
xchg
mov
sub
mov
inc
push
outsl
cmp
sbb
dec
mov
cmpsb
rolb
sahf
hlt
pop
in
xor
add
mov
ljmp
les
enter
and
inc
cmc
sahf
loopne
mov
cmpsl
lds
jae
lock
fs
sarb
arpl
dec
cmp
dec
xchg
pop
cmpsl
mov
adc
push
dec
cmp
cmp
ja
dec
dec
pop
or
adc
mov
popf
or
bound
and
mov
sbb
push
sbb
or
mov
jb
or
repz
pop
sarb
mov
push
movsl
lahf
xor
into
dec
mov
ss
mov
and
in
adcl
cs
test
jns
mov
mov
jmp
pop
mov
mov
sbb
cmpsl
aad
insb
jge
dec
mov
push
add
mov
cmpsl
cmp
sub
orb
scas
mov
roll
movb
outsl
mov
fsubl
popf
push
or
mov
xor
cmpb
jns
add
sahf
and
inc
dec
and
jae
mov
loop
or
jle
mov
sbb
mov
jle
and
lcall
sbb
sub
js
adc
lldt
mov
mov
push
pop
pop
inc
inc
out
xchg
das
lret
adc
pop
pop
dec
out
adc
fsubr
add
and
mulb
sub
push
scas
or
xchg
add
rclb
mov
inc
jo
xor
jne
call
int
pop
mov
lahf
arpl
or
xor
xchg
out
outsl
inc
imul
call
cmpsl
lods
rcl
adc
fnsave
or
and
jno
mov
inc
ret
dec
stc
or
in
lret
jo
aas
mov
xchg
insb
pop
mov
mov
outsb
adc
movsb
inc
xchg
push
outsl
mov
xor
dec
loope
shrb
xor
sbb
sub
mov
mov
loop
in
js
xor
and
and
test
arpl
call
dec
pop
pop
int
inc
jns
clc
andl
les
cmp
sbb
mov
test
or
sub
fidivs
push
pop
fcmovbe
cmp
jnp
xor
in
sub
cmp
in
pusha
popl
shr
xchg
lret
jae,pn
rol
fldt
rorl
cmp
ret
jmp
aad
das
insl
cltd
mov
ret
dec
andl
bound
aad
sbb
aaa
adc
popa
jl
cmp
lods
push
sub
mov
mov
jmp
iret
xchg
dec
push
jno
xchg
fmuls
shrb
subb
push
stc
popf
and
hlt
out
mov
jg
fnstsw
pop
ret
xchg
sbb
sub
into
adc
out
fmuls
icebp
mov
mov
js
jne
lret
xchg
sbbl
out
gs
cmp
adc
stos
insl
sub
mov
fcmovne
jp
mov
cmc
incb
push
sub
and
popf
jb
sbb
mov
sbb
sahf
sbb
sahf
push
dec
xchg
mov
jb
aam
cli
out
cwtl
xchg
xchg
and
fyl2x
push
inc
mov
das
sti
adc
xlat
push
insb
jb
stos
and
lret
jecxz
xchg
or
xchg
lret
out
test
mov
test
pusha
fnstenv
gs
fsubrl
adc
sbb
sub
sahf
repz
aas
jae
outsl
scas
inc
sbb
enter
inc
jp
dec
sub
dec
lds
test
mov
bound
in
dec
jmp
dec
fnclex
xor
mov
push
mov
iret
pop
loopne
sub
xchg
in
xor
or
stos
jns
xor
pop
add
jne
cmpsb
xchg
pop
xor
mov
mov
xchg
cmc
mov
movsb
push
xchg
pop
shlb
cld
jmp
nop
test
cltd
cmp
popa
mov
into
cli
repnz
repnz
mov
rorb
dec
jp
outsl
lods
cmpsl
or
enter
fsubl
jle
xsavec
jmp
jnp
push
fstpt
sub
loopne
pop
test
je
mov
cs
inc
adc
xlat
daa
jnp
mov
mov
jns
adc
jns
test
cmpsl
mov
out
enter
add
pop
mov
push
movsl
inc
mov
iret
dec
loope
mov
ret
mov
xor
rcr
ror
insb
out
push
inc
fcompl
xchg
test
arpl
in
inc
pop
ret
ret
mov
into
divl
mov
cmp
mov
jge
fs
mov
insl
pop
fwait
pop
dec
and
jne
insb
push
cmp
lcall
mov
icebp
and
cmp
or
mov
push
jecxz
lods
mov
inc
or
in
jl
dec
frndint
mov
scas
dec
adc
outsl
mov
jg
pop
lret
in
mov
sub
gs
xor
xchg
add
push
pop
mov
cli
xchg
lds
aad
jo
adc
ss
pop
fs
js
cwtl
stos
in
add
aam
push
inc
add
into
xchg
sub
stos
mov
setns
push
ss
mov
dec
in
jge
dec
in
fwait
rol
xchg
adc
cmc
hlt
dec
outsl
and
push
popf
or
scas
jb
jae
scas
repz
int
sbb
push
std
ss
mov
sbb
inc
std
repnz
xchg
int
mov
cmp
inc
arpl
in
or
push
in
movsl
data16
adc
test
aas
outsl
loopne
into
jle
not
push
or
ss
fcompl
push
xor
lret
int3
dec
stc
cmp
xor
pop
es
xor
lret
rcrb
mov
out
inc
out
jae
test
aad
je
ret
arpl
cmp
add
pop
pop
clc
repz
fdivl
lcall
movsb
pop
push
push
push
aaa
mov
and
mov
sbb
push
push
repz
js
gs
xor
repnz
leave
testl
cmp
inc
cltd
mov
dec
test
pop
popa
xchg
lock
jp
lock
mov
scas
rcrb
int
inc
mov
roll
xor
out
test
bound
xor
push
sub
pop
mov
xor
shrb
stos
mov
inc
jne
ret
xchg
add
hlt
mov
adc
jg
loope
inc
mov
lock
ret
arpl
or
adc
mov
inc
loop
mov
mov
insb
in
dec
or
insb
outsl
adc
idivb
test
pusha
mov
inc
fwait
push
xor
test
xchg
aad
jno
jns
clc
cmpsl
mov
xchg
mov
xchg
insl
repz
mov
lcall
inc
sub
ret
push
push
add
sub
ja
jp
cmpsb
cmp
jg
mov
mov
loop
into
push
rol
test
sub
mov
adc
cmp
mov
push
out
push
shlb
inc
in
sub
push
sbb
mov
jmp
sti
fcmovne
push
mov
and
std
fsts
or
out
cmp
ret
push
cs
dec
sbb
jns
and
mov
aam
push
add
and
push
sbbb
std
decl
je
mov
xchg
adc
mov
into
in
loop
push
fst
mov
cmpsb
mov
in
iret
inc
out
repnz
sub
xor
divl
sub
mov
xor
or
lds
push
std
daa
jl
push
in
sbb
add
mov
loope
popf
add
push
lcall
mov
outsl
mov
and
mov
mov
sub
push
std
sub
test
nop
lea
enter
in
xchg
fidivrs
call
stos
fwait
and
pop
mov
cmp
or
jnp
or
das
cmc
cld
mov
hlt
inc
dec
data16
cmp
xchg
out
mov
icebp
lods
outsl
xor
cmc
outsb
sbb
clc
cmp
int3
xlat
jb
in
jle
cmp
pop
stos
roll
sbb
pop
and
adc
std
cmpsl
dec
adc
lock
scas
rorl
mov
push
mov
adc
rolb
sbb
fildll
mov
ds
leave
add
insb
lea
mov
sub
jno
cs
loop
jecxz
das
sti
sub
xchg
mov
xlat
loope
loopne
mov
sahf
mov
scas
and
popl
mov
das
shlb
push
das
xor
xor
in
cltd
xor
xor
rcl
sti
push
jle
ret
rorl
aas
jl
aad
sahf
cmp
stos
xor
addr16
xchg
xchg
and
arpl
pop
sbb
sub
add
sahf
jl
aam
arpl
inc
jns
stos
or
pop
stos
push
adc
sub
fists
aad
mov
aas
jmp
push
lea
ss
pop
int3
pop
ror
addr16
xor
fwait
pop
inc
mov
inc
mov
push
jg
or
gs
lcall
fmul
cmp
pcmpeqb
test
mov
ret
inc
movsb
cmp
cmp
imul
jg
arpl
jmp
jns
mov
pop
shrb
dec
in
sub
nop
popa
ret
pushl
cmpl
cwtl
sbb
aam
dec
jl
cli
ficoms
aaa
iret
jno
ljmp
clc
inc
nop
lret
mov
mov
ret
or
cmp
paddusb
mov
and
xchg
xlat
imul
jmp
mov
mov
sbb
js
sbbb
dec
es
rcr
mov
or
popa
rcll
push
push
arpl
add
loopne
lret
xlat
mov
sub
jmp
jmp
out
hlt
jne
es
mov
icebp
cmc
or
gs
adc
sbb
jp
xchg
pop
xor
inc
jae
jbe
sbb
cmp
rorb
mov
xlat
imul
in
je
mov
out
stos
push
inc
inc
rcl
fsts
mov
jp
ret
lock
cld
xchg
mov
sub
negl
mov
xchg
and
cmp
fisttpll
insb
dec
lock
mov
imulb
and
jns
arpl
cmc
push
mov
cmp
popa
push
jge
pop
cltd
sbb
or
ljmp
inc
cmpsl
adc
mov
inc
adc
fimuls
leave
ss
iret
add
repnz
ret
imul
and
shrl
and
in
adc
xor
xor
sub
into
loope
fs
int3
int3
es
movsb
pop
pop
xor
xchg
je
xor
xchg
mov
dec
ljmp
or
pop
jecxz
test
popa
jmp
add
and
out
xorb
add
sub
rorb
mov
std
movsl
inc
gs
popf
add
push
jo
out
sar
lcall
icebp
stos
pop
fidivrs
jae
hlt
push
in
addr16
or
jmp
xchg
lds
mov
clc
shll
insb
pop
and
fs
cmc
cmc
sub
cmp
xchg
fidivrl
ret
dec
push
jbe
dec
popa
cmp
ret
mov
pop
or
ja
adc
xchg
dec
jle
inc
cld
fdivl
daa
notl
outsl
ljmp
ficoml
fldenv
dec
cld
xor
sbb
xchg
inc
mov
out
jae
jne
out
lods
mov
sahf
out
xor
movsb
mov
and
cmp
cli
and
mov
movsb
loope
mov
into
xor
mov
mov
shlb
mov
add
mov
pop
cmp
movsb
mov
rcr
dec
cld
xor
and
jae
sahf
add
aad
and
pusha
lsl
xlat
fwait
aam
or
add
ret
out
xchg
jne
out
ret
inc
pop
icebp
testl
mov
mov
fucomi
jge
mov
push
xor
ja
inc
adc
ud1
rorb
andl
mov
jns
testw
xor
xchg
xchg
inc
xor
and
pop
cmpsl
adc
andb
aas
lahf
mov
cmp
imul
iret
inc
insl
repnz
int
pop
out
xlat
push
mov
fildll
adc
pop
push
rol
jae
in
ljmp
xchg
imul
add
cmc
mov
lds
jle
jae
cmp
jl
xor
mov
sbb
stc
or
cli
into
dec
fsubp
sarb
mov
mov
rcrl
out
popf
cld
pop
bound
push
xchg
xchg
push
xchg
add
cs
scas
fsubr
int3
daa
lret
orl
lods
out
pop
and
cmp
out
sbb
lods
mov
div
imul
dec
and
test
mov
out
es
mov
stc
lods
sub
xchg
nop
dec
int3
fwait
xchg
jne
jge
mov
cli
aas
push
cltd
mov
push
cmc
dec
jae
xor
aam
xor
nop
shrd
clc
daa
xchg
xchg
ret
pop
jns
add
call
out
sub
in
adc
add
cwtl
ljmp
jmp
dec
leave
mov
lods
scas
in
subb
cmp
insl
jnp
pop
mov
aad
xchg
repnz
aam
ja
xchg
das
xor
stos
out
stos
pop
jmp
dec
mov
sbb
dec
lods
mov
or
insb
add
push
mov
iret
insb
push
loope
mov
dec
sti
jmp
loopne
iret
pop
push
xor
scas
js
dec
mov
stc
int
stos
push
cmp
daa
ja
stos
fadd
test
lcall
sub
inc
push
data16
sub
in
mov
loope
test
jl
mov
orb
jne
loope
dec
cmp
push
mul
or
lods
sti
lods
push
mov
aas
push
popa
ss
cmp
cli
ds
adc
decl
adc
mov
or
pop
shll
jne
sbb
jno
xor
outsl
stc
add
insl
xlat
pop
out
add
jns
jno
pop
adc
push
cmpsb
inc
mov
xchg
lods
xorl
mov
push
or
fisubrs
rcl
lret
or
aas
push
data16
stos
fs
inc
adc
fidivrs
mov
bound
enter
ret
pop
fs
mov
or
lret
iret
or
mov
fcomp
sti
cmp
clc
pcmpeqw
or
inc
subb
and
ss
pop
out
mov
cmp
sub
das
xchg
cmp
rorb
subb
push
add
inc
dec
je
in
inc
into
mull
cltd
and
in
jae
mov
std
mov
xchg
insl
inc
sbb
or
js
adc
mov
aam
push
rcrb
sbb
or
insb
or
pop
xchg
push
pusha
imul
mov
ds
shrb
dec
cmc
pushf
xor
xchg
fucom
cmp
inc
sbb
fldt
push
movsb
fstl
imul
stos
out
mov
push
aam
aad
in
mov
or
xlat
iret
loopne
lea
popa
mov
mov
stos
jb
jae
sbb
rclb
pop
btr
inc
fldenv
dec
push
pop
push
sbb
roll
adc
push
dec
xor
pop
fldt
push
dec
cwtl
fucomi
sub
add
dec
lret
or
jl
ret
repnz
cmp
lock
stos
push
sbb
hlt
sub
xchg
pop
test
or
mov
push
xchg
inc
faddl
fldt
xchg
fwait
push
inc
mov
push
popf
popa
jle
inc
shl
lods
js
jb
clc
fs
into
fld
das
data16
adc
imul
stos
mov
lahf
loopne
xchg
outsl
inc
sbb
push
lea
out
jo
ret
inc
addl
lods
mov
cmpsb
push
dec
jno
and
inc
scas
nop
cmp
pop
push
aad
or
adc
insl
pop
xchg
repnz
dec
lods
push
scas
test
cmp
fs
or
call
dec
mov
push
or
aaa
pop
fstps
xchg
dec
dec
leave
jp
sbb
ret
lods
mov
nop
aam
add
scas
mov
imul
rcll
xor
movsl
in
iret
cld
and
clc
xor
mov
cwtl
cmp
xor
pop
movsb
pusha
xor
push
mov
sbb
mov
jno
mov
test
adc
je
out
lods
or
cmp
xorb
out
test
mov
and
push
scas
repz
aas
sbb
movsb
cltd
fnstenv
push
mov
sbb
fsubs
jl
push
or
and
mov
dec
scas
icebp
xlat
cmp
push
cmpsl
imul
pop
leave
fistps
fidivl
outsb
add
mov
cs
mov
out
fnstcw
and
push
or
adc
rcrl
mov
lea
fstsw
icebp
shll
lods
xor
push
dec
jno
shlb
popa
jl
loop
arpl
enter
jge
bound
push
aad
dec
mov
data16
push
mov
and
sarb
dec
sahf
mov
leave
inc
adc
mov
and
les
imul
mov
cmp
cltd
mov
cld
fisubrs
mov
mov
jb
cld
jge
cmp
mov
sub
iret
mov
push
xchg
adc
sub
mov
inc
sar
mov
shll
add
in
cli
icebp
xorl
push
fistps
and
sbb
cmp
mov
inc
jns
add
mov
lret
negb
xchg
xor
push
ds
fistpl
ret
mov
pop
lea
insb
mov
ljmp
xchg
pop
mov
imul
js
adc
fldcw
loop
xor
cs
inc
les
aam
push
je
jmp
in
push
push
loopne
fisubl
jno
xor
mov
or
das
and
jl
and
sub
ljmp
mov
mov
ds
addl
mov
xor
push
call
ret
xchg
mov
pop
add
inc
addr16
push
iret
mov
add
sbb
out
fldt
mov
and
repnz
fwait
mov
cld
fisttps
lret
inc
cmp
pop
cmp
pusha
jo
ret
pop
shl
test
fldenv
push
sbb
mov
iret
sbb
arpl
sub
mov
movsb
sbb
arpl
cmc
sub
push
jnp
mov
add
aaa
out
fldl
rcll
inc
mov
shll
stos
outsl
pop
sub
outsb
out
inc
aam
fwait
pushf
pop
jne
jne
popf
dec
sbb
xchg
pop
mov
mov
and
mov
rcrb
mov
repz
mulb
mov
inc
hlt
cmp
xchg
leave
adc
mov
add
cmp
and
jg
cmp
or
cmpsb
xor
dec
rol
ds
fstps
scas
dec
dec
cmp
inc
mov
rcr
inc
push
jae
out
mov
int3
sub
test
inc
jle
jmp
add
and
jg
fcoms
add
adc
add
jnp
mov
call
nop
aad
movl
pop
pop
call
mov
rolb
push
jae
dec
lahf
jno
mov
jge
shll
inc
adc
add
loop
addr16
pop
add
mov
dec
test
aaa
std
in
je
jne
rorb
dec
xchg
mov
push
fisttpll
rol
mov
into
jg
mov
mov
xchg
push
fwait
ss
mov
into
jb
jb
in
inc
and
push
pop
and
pop
popf
cmp
in
out
sub
cld
sub
fstp
jne
dec
mov
mov
sbb
jnp
mov
jp
lahf
pop
xchg
inc
mov
cmp
lcall
fsubr
xchg
aad
adc
std
pop
inc
sbb
outsl
add
filds
jl
lods
ss
sub
mov
jmp
adcb
mov
out
pop
xor
fbld
xchg
insl
scas
mov
lods
aad
xchg
call
and
adc
jle
and
dec
adc
adc
adc
mov
xchg
adc
sbb
pcmpeqd
cmp
test
inc
js
or
movsb
push
cmp
cli
xchg
pop
mov
lahf
pop
imul
rcr
pop
mov
mov
mov
mov
or
and
push
repz
jns
push
pcmpeqb
jl
and
mov
xchg
add
push
add
ds
push
adc
insl
mov
pop
pop
pop
inc
xor
cwtl
dec
cs
or
or
aad
repz
mov
mov
test
imul
mov
adc
xor
lahf
out
imul
sub
push
sbb
outsl
jmp
dec
adc
loop
pop
mov
push
xchg
call
ljmp
push
jno
xchg
inc
inc
lcall
mov
pop
pop
or
in
push
add
dec
dec
lahf
fwait
int3
ficoml
cmp
mov
sti
stc
fs
cmp
push
clc
ret
mov
nop
cmp
lea
in
aas
sub
sub
push
cld
stc
out
xor
stc
mov
pushf
pop
testl
decb
pop
mov
cli
mov
divb
cmp
sbb
push
add
pop
jns
imul
xchg
push
cwtl
cmpsb
mov
in
cmp
cld
outsl
sub
mov
popf
add
jb
adc
test
aas
and
rcrb
loop
xchg
sub
fistl
push
xor
sub
or
repnz
outsl
xchg
xchg
jg
in
push
imul
jp
stos
jnp
mov
push
lods
jl
test
cwtl
jle
push
sub
dec
lock
inc
inc
xchg
mov
xlat
pop
in
mov
cmpsb
loopne
rcrl
inc
test
fcmovnu
lods
sbb
push
enter
lahf
js
movsl
fdivr
nop
inc
add
dec
loope
incl
ljmp
mov
mov
loope
pushf
lret
pop
cltd
jns
ljmp
jmp
icebp
fisttpll
addb
iret
mov
pop
ja
sbb
or
pop
outsl
sbb
dec
sub
test
xor
push
pop
shlb
imul
push
dec
push
dec
sub
add
cmp
inc
push
push
or
mov
xchg
inc
jl
shrb
out
xor
mov
lods
aad
mov
xor
out
pop
leave
cmp
popa
lods
mov
push
adc
jbe
jge
or
bound
pop
add
test
jno
rclb
jne
mov
jbe
or
mov
icebp
push
sub
out
push
mov
je
addr16
movsb
stos
ljmp
les
jb
mov
movsl
and
dec
bound
pusha
movsl
lret
pop
ficompl
sub
mov
hlt
dec
addb
xor
pop
jbe
push
test
xor
inc
adc
add
fnstsw
fstpl
mov
fbstp
repz
mov
or
cmp
push
xchg
mov
add
call
sbb
jle
frstor
mov
in
inc
sub
cmc
xchg
outsb
popf
adc
sbb
adc
and
das
adc
pop
jnp
mov
jae
imul
or
cld
adc
cli
dec
leave
sub
dec
jecxz
inc
clc
or
adc
xorb
aam
or
push
pop
dec
mov
js
push
notb
filds
dec
inc
pop
mov
xor
sti
pop
xchg
cwtl
int
add
lods
add
adc
les
aad
sub
xchg
dec
call
gs
pop
ffreep
xchg
mov
mov
icebp
mov
cmc
sbb
sti
iret
jp
imul
jae
movss
sub
xchg
jmp
jle
psrld
lock
xchg
push
bnd
adc
fldl
fsubp
push
decb
pop
jecxz
inc
in
ret
jmp
mov
mov
cmp
das
xchg
adc
pop
xchg
mov
push
cli
mov
mov
jnp
sub
xor
add
sub
data16
int
jo
stos
mov
sub
mov
fsubrs
mov
pop
or
cmp
dec
adc
adc
pop
arpl
cli
repnz
mov
xor
jns
mov
adc
fnstenv
push
je
fsubrl
aam
and
incb
push
scas
icebp
sbb
lret
dec
repnz
rorl
xor
repnz
pop
push
lcall
pop
lret
scas
mov
sahf
in
fldcw
repz
cld
out
push
les
fstp
xor
mov
test
lea
stc
shl
jecxz
aad
popa
push
cwtl
mov
xchg
aaa
and
ficoms
adc
inc
sub
orb
cmc
lcall
sahf
imul
sub
stos
mov
orb
adc
xlat
sub
jp
xor
mov
sbb
outsb
and
jne
dec
in
cmp
rcll
cmp
aam
xlat
push
cwtl
mov
xchg
movsb
stos
cltd
mov
jl
frstor
mov
pop
ret
outsl
jle
mov
cmpsl
ja
fwait
adc
cmp
cli
dec
adc
lea
inc
mov
cld
rolb
mov
mov
dec
icebp
hlt
mov
std
jo
xchg
js
into
dec
add
sub
es
decl
pushl
dec
lea
mov
mov
push
push
mov
outsb
loopne
dec
and
sub
mov
jns
cmp
out
pushf
inc
jne
test
jmp
xor
mov
mov
mov
js
scas
sub
xor
sbb
or
movsb
pop
mov
sbb
and
sub
pop
lods
repnz
inc
ljmp
imul
insl
lret
repz
int
sahf
nop
push
pop
push
xor
lret
xor
mov
and
movsl
cmp
aam
xorb
repz
jno
cmp
mov
enter
cmc
movsl
negl
push
mov
mov
push
mov
add
cmp
cmp
mov
cmp
gs
pop
xchg
rcrb
inc
cmp
xchg
adc
mov
push
jmp
daa
shll
std
push
xchg
enter
and
stos
hlt
push
imul
gs
fadds
dec
loopne
push
ljmp
xchg
daa
push
cmc
into
jo
and
out
popl
pop
roll
or
fmul
orl
lret
loope
jp
sbb
jbe
das
adc
loope
aad
or
cmp
xor
xor
cmp
cmp
and
jl
sbbb
cmp
lock
xlat
leave
scas
pusha
push
dec
adcl
mov
mov
inc
fdecstp
jnp
cli
and
iret
mov
sub
lahf
cs
stos
mov
mov
sub
pop
xor
inc
insl
xor
push
dec
out
iret
aas
xchg
hlt
xchg
xchg
xchg
cld
adc
inc
aad
jae
daa
xchg
arpl
pushf
int
popf
testl
pop
cmp
nop
mov
push
imul
add
jns
dec
popf
add
test
inc
shll
dec
or
xor
jbe
inc
in
xor
cmp
jge
jg
and
mov
cmpsb
jle
call
js
add
rcll
pop
ret
dec
fldenv
scas
sub
mov
fisttpl
dec
bswap
jne
int
mulb
lcall
mov
in
xchg
fcomi
int3
shrb
adc
xchg
into
dec
in
jb
cli
loopne
bound
hlt
xor
xor
loopne
cmp
jne
andl
sbb
mov
data16
pop
mov
pop
daa
mov
or
pusha
dec
push
add
push
out
testb
pushf
xchg
test
sbb
or
xchg
insb
add
aaa
enter
jmp
mov
aam
push
ds
rol
das
cmp
mov
loopne
inc
lods
loopne
inc
cmpsb
sub
roll
lret
iret
and
adc
pop
pop
fcoml
cwtl
cmpsb
push
inc
adc
loope
and
and
enter
pusha
pop
mov
popf
adc
loopne
jmp
imul
push
movsl
pusha
leave
inc
cmc
fadds
stos
xor
ret
xor
loope
or
add
and
mov
out
cmp
out
lahf
daa
test
ja
data16
pusha
xchg
data16
iret
jo
fwait
fwait
push
xlat
pop
pop
sub
fucom
sub
xor
inc
and
cli
lret
rclb
xor
fldcw
iret
xchg
add
jle
and
or
sahf
imul
cmc
mov
mov
and
sub
cli
loopne
arpl
push
adc
dec
iret
mov
call
xchg
aaa
repz
xchg
sub
mov
cmp
jno
cmpl
jne
push
adc
sub
mov
lea
push
and
test
dec
arpl
lahf
decb
clc
push
outsb
fstpt
add
incb
popf
cmp
ss
inc
call
sub
into
and
adc
jno
adc
xchg
arpl
jge
sub
push
movsb
inc
adc
pop
mov
movsl
xchg
test
popa
dec
cwtl
dec
pop
icebp
out
fbld
push
sbb
xorl
xchg
inc
sti
sahf
xchg
inc
test
mov
imul
add
cmc
mov
lods
cmp
hlt
sbb
fdivrl
out
loope
shrb
jecxz
and
jne
int
xor
jmp
mov
fildl
xor
fstps
push
out
int3
insb
gs
inc
push
pop
fdivrs
mov
cli
sub
mov
loope
and
fisubl
repz
xor
adc
mov
in
movsl
nop
clc
push
loop
push
cmpsb
xor
mov
dec
jo
add
mov
scas
dec
xchg
jge
pop
inc
push
adc
add
mov
shll
mov
imul
aaa
push
or
sbb
or
into
jae
lods
test
mov
lods
insl
aam
gs
hlt
enter
push
js
cld
std
xor
fdivr
push
inc
adc
movsl
xor
aas
mov
add
mov
out
testb
not
dec
lcall
or
and
bound
lds
and
jmp
inc
daa
inc
push
outsb
jae
and
lods
xchg
jmp
jecxz
sub
daa
ja
andb
or
incl
pop
sbb
xchg
js
std
inc
mov
insl
subl
sbb
repnz
push
jl
lea
sbb
test
mul
sbb
xorb
inc
daa
adc
lds
lds
loopne
add
dec
ljmp
popf
sahf
lret
cmp
cmp
add
mov
mov
sub
add
jle
iret
aaa
inc
int
leave
inc
dec
inc
cmp
mov
insl
push
mov
bound
out
data16
enter
bound
scas
or
subb
out
pop
js
or
push
arpl
inc
adc
outsb
fsubl
in
call
sub
subb
cwtl
push
add
mov
jne
out
jmp
dec
push
pushf
pop
fisubrs
inc
pushf
popa
pop
fldenv
mov
mov
lahf
mov
fadds
lods
xchg
cmc
push
mov
insl
push
mov
push
int
pop
aam
add
enter
xor
inc
mov
shll
cmp
sbb
or
cltd
and
cmpsl
punpckhwd
mov
jne
into
or
cs
push
pop
cs
outsl
mov
outsl
or
sub
fcoml
sarb
lret
cmpsl
in
lock
pushf
mov
push
ret
repnz
outsl
ret
push
cmp
stos
jnp
sub
aad
cmp
ss
and
xchg
mov
adc
dec
iret
lods
loope
sbb
jmp
insl
rcrl
cmpsb
nop
pop
rorl
flds
dec
pusha
mov
fs
leave
mov
lahf
ret
push
ja,pt
arpl
push
push
sbb
ljmp
repz
adc
sub
aam
adc
stos
push
adc
cmpb
and
adc
movsl
data16
adc
mov
push
fs
or
fucom
je
or
xchg
jae
fcmovne
xchg
stc
pushfw
lret
aas
paddsw
sbb
mov
in
in
xchg
pop
icebp
xchg
fs
mov
outsl
btc
js
aad
sub
outsl
pop
mov
test
or
sub
cltd
mov
mov
xor
jo
pop
iret
nop
int3
jnp
mov
cmc
dec
ljmp
and
cli
cltd
iret
addr16
dec
mov
popf
cmp
stos
xorl
adc
out
in
dec
xchg
cmc
pop
push
aaa
out
lock
popf
or
fs
xchg
out
es
xlat
les
adc
cltd
movsl
xlat
pop
jg
push
cs
leave
ss
xchg
std
jne
subb
mov
roll
mov
in
xlat
shlb
cmpsl
sub
cmpsb
dec
inc
pop
cmp
jl
jmp
arpl
daa
outsl
pop
mov
popa
xchg
dec
or
adc
jae
sbb
addl
test
and
xor
mov
outsl
mov
push
js
mov
inc
mov
loop
cmp
outsb
mov
cmp
jle
mov
pop
shl
or
xor
pop
stc
stc
and
xor
fsubr
add
out
aas
xchg
das
mov
and
jge
pop
lret
jmp
shrl
aaa
loopne
loopne
adc
jp
sub
and
in
bound
xchg
lret
jne
push
fists
push
and
dec
mov
sub
dec
pop
sbb
push
loope
sub
xchg
scas
cmp
cmp
loope
ret
xchg
frstor
in
jmp
jmp
sbb
sbb
and
repz
inc
pop
sbb
enter
jge
incl
inc
adc
leave
inc
push
push
rorb
imull
push
pop
dec
incb
push
xor
mov
int3
jbe
mov
push
add
or
mov
mov
pop
dec
push
nop
mov
mov
loope
dec
sbb
cmp
push
push
addr16
out
in
xchg
dec
jg
sbb
bound
and
in
rcrl
pop
mov
mov
jb
add
adc
les
xlat
shlb
inc
lahf
push
and
insl
mov
notl
mov
push
je
cld
mov
shl
iret
dec
cltd
out
bound
cmp
cwtl
fs
cmpsb
addb
pop
cmp
data16
lcall
push
js
repz
dec
push
and
insb
ficomps
test
or
addr16
sar
push
mov
aad
es
and
ja
jb
and
jmp
sub
iret
lods
fimull
inc
and
in
xchg
clc
xor
add
loopne
notb
adc
dec
xor
pop
push
push
stos
adc
aad
fcomps
mov
loopne
cwtl
xor
or
mov
xor
jle
aaa
cltd
xor
add
notb
add
adc
repz
sbb
rclb
repz
arpl
stos
out
push
mov
xchg
ljmp
in
or
or
adc
sub
xor
or
ds
mov
cmpsb
pop
sub
stos
std
pop
mov
adc
orb
data16
sub
movsl
test
cli
add
into
inc
daa
inc
test
into
jnp
dec
pop
pop
iret
cmp
loope
jo
adc
inc
mov
pop
jne
out
mov
xchg
xchg
out
cs
mov
xchg
jmp
add
sbb
ja
jns
pop
lret
stos
les
cmp
jl
xor
sbb
mov
inc
daa
clc
xchg
inc
iret
mov
ret
and
push
push
insb
outsb
or
mov
or
stc
cmp
stc
cmpsb
mov
fstpt
pop
pushf
inc
in
inc
adc
out
pop
fcomip
int3
ret
mov
mov
sti
jns
or
movb
stos
push
mov
pop
in
std
test
push
cmp
faddp
fistl
ficoms
fsub
arpl
ds
push
cli
adc
add
or
mov
test
jne
sbb
fdivs
ljmp
int
fwait
lods
outsb
inc
sub
xchg
push
sahf
adc
je
outsl
cld
cli
mov
mov
sbb
dec
pop
xchg
pop
rorl
push
and
notl
pop
out
cmp
cmc
outsb
cmp
lret
fcompl
xchg
pop
mov
pop
fcomp
imul
sbbb
push
pop
xor
jle
mov
sti
ja
inc
cltd
dec
insl
das
mov
movsb
or
cmpsb
mov
jle
adc
sbb
xor
adc
stc
or
lods
fcoml
daa
scas
cltd
mov
data16
add
adc
xor
fistps
lds
fstl
fcompl
push
mov
filds
sbb
adc
mov
ret
popa
mov
or
es
hlt
iret
adc
addl
add
fwait
aad
ss
filds
test
fbstp
test
and
push
test
loopne,pn
in
rcl
dec
push
jl
into
pop
add
loop
xchg
xor
inc
adc
push
push
ror
add
xchg
out
test
cli
adc
movsb
jmp
data16
nop
xchg
rcrb
faddl
jmp
push
test
push
bound
fnstsw
insb
xchg
push
dec
xor
pop
mov
and
adc
insl
adc
dec
lcall
int
mov
es
xchg
stos
or
mov
lods
pop
add
lods
dec
movsl
rcrb
popf
mov
pop
ret
pop
ficoms
mov
cmp
and
add
cld
or
inc
mov
ja
je
test
jns
fs
xor
adc
sbb
loopne
xor
push
rcrl
loope
inc
adc
inc
push
negl
push
push
xchg
jo
add
in
std
xchg
icebp
cmpsb
push
scas
add
dec
ret
loop
sbb
insb
mov
sub
shll
xchg
loop
dec
inc
sub
xchg
loop
popa
outsb
push
int
sub
lea
pop
pop
imul
sahf
pop
cmp
xor
bound
das
or
aaa
data16
mov
inc
inc
xchg
xor
dec
inc
push
mov
std
cmc
sbb
pop
insb
xor
xchg
imul
ror
pop
int
in
arpl
inc
fs
andl
inc
push
sbb
pop
lods
out
xor
pop
fidivrs
nop
push
cld
jecxz
or
inc
push
in
addr16
lcall
daa
popf
cmp
adc
sub
mov
je
mov
in
roll
insb
cs
adc
jmp
sbb
dec
es
test
jg
fs
flds
inc
fisubrl
rcrb
movsb
fs
lret
or
rorl
imul
inc
and
fsubs
ret
push
push
add
dec
fisubs
xor
push
vaddss
shrl
loopne
out
addr16
bound
pop
push
mov
mov
adc
call
add
mov
and
js
mov
mov
dec
cltd
fs
push
mov
js
lods
add
int3
xor
cltd
out
shlb
cmc
dec
push
scas
loopne
and
pop
gs
mov
add
xor
fcmove
sarl
out
cmp
jecxz
push
mov
xor
mov
push
mov
or
cmc
idivl
cmp
jle
nop
outsl
movsb
cld
push
mov
cmpsl
js
cmp
dec
add
xchg
add
xlat
or
sub
ja
enter
mov
int3
push
lahf
das
btr
mov
lods
sub
mul
pushf
movsb
mov
cmp
push
sbb
fcmovb
jnp
outsb
sub
mov
xor
rclb
daa
in
adc
dec
pushf
jno
xorb
gs
adc
pop
in
or
dec
mov
xlat
sbb
insb
nop
sti
pop
mov
test
cmc
jmp
negl
rcl
outsb
adc
or
nop
mov
outsb
dec
sub
sub
lods
mov
jnp
outsb
inc
mov
ret
xchg
outsb
test
push
xor
std
xchg
jmp
adc
test
sarb
int3
pop
bound
outsb
outsl
lret
or
jae
lds
mov
sbb
shrb
repz
lods
shlb
cmp
shlb
imul
mov
in
mov
sahf
add
fistps
mov
aam
cwtl
mov
push
and
cmp
je
cltd
adc
loopne
pop
push
rorl
xor
in
lods
mov
pop
pop
and
xchg
push
push
out
jmp
stc
jne
add
leave
call
fadd
sub
or
mov
mov
les
sub
out
jmp
popa
outsl
and
pusha
mov
jmp
out
and
sti
outsb
popf
cmp
outsl
mov
lahf
mov
jae
inc
lea
popa
push
clc
add
stc
dec
dec
sbb
aas
cmp
mov
pop
ret
dec
bound
mov
pop
es
fmuls
xor
out
inc
cli
out
subb
int
xchg
mov
jb
cwtl
fcmovnbe
cmp
cmp
mov
xchg
scas
out
or
and
cmp
lcall
cmp
int
cmp
lods
or
scas
cltd
and
arpl
xchg
clc
cmp
xchg
in
std
adc
xchg
pop
mov
insb
cmp
lods
flds
xchg
fsubrl
mov
imulb
out
sub
nop
mov
int
jb
lods
fsubrl
cld
mov
sbb
mov
push
pusha
and
ret
fistps
andb
mov
inc
leave
mov
xchg
je
in
jmp
loop
add
add
push
cs
xchg
inc
lcall
fisttps
jbe
sub
mov
sub
xor
repnz
mov
aam
pushf
mov
inc
adc
enter
aas
push
adc
xchg
xlat
addl
mov
sub
add
cmp
inc
xlat
clc
dec
dec
inc
jmp
dec
sarw
clc
cli
pop
add
mov
popf
pop
insl
std
add
inc
jp
xor
sti
sbb
pusha
pushf
jl
out
jae
cs
and
js
mov
insb
push
arpl
mov
push
test
adc
fidivl
inc
ljmp
outsb
out
cltd
fs
sbb
sbb
std
jmp
push
loope
sbb
shlb
rcll
jg
cs
push
inc
sub
imul
xchg
push
ficompl
pop
ljmp
lret
mov
fisttpll
jge
adc
movsl
decl
rolb
xchg
movsb
sti
mov
rorb
mul
stos
out
push
push
clc
xor
and
push
cmpsb
jne
aaa
test
imul
decb
insb
sub
mov
arpl
stos
push
cmp
aas
xchg
jb
cmp
or
enter
mov
pop
add
notb
mov
adc
inc
fstpl
pop
sbbl
sbbl
add
inc
cmp
in
pop
in
paddq
sbb
add
sub
xchg
fdivl
sarb
cmpsl
ja
std
inc
and
add
mov
and
lcall
inc
sti
repz
pop
push
mov
test
sti
cltd
push
out
out
or
ljmp
dec
cmp
jp
addr16
cmpsb
daa
mov
dec
mov
lods
fsubr
or
push
cmp
jb
addb
jge
filds
sbb
jae
jge
js
xchg
ss
cmc
push
mov
dec
icebp
push
jae
adc
push
push
push
lods
dec
dec
push
in
bound
pop
sbb
sbb
jno
push
mov
xchg
sbb
push
out
fdivrl
imul
jge
mov
imul
push
push
iret
adc
lea
mov
pushf
and
add
cs
dec
cmp
xchg
sbb
lods
jne
shrl
ret
push
shlb
cltd
cs
in
cwtl
cs
or
jecxz
int3
mov
mov
pop
movsl
mov
xor
push
jg
push
scas
and
jge
gs
add
insb
fwait
insl
lret
mov
repnz
pop
sbb
jae
int3
sub
das
rolb
ret
decl
cmp
fadd
shrb
mov
in
cmp
push
push
sub
ljmp
icebp
add
lret
inc
aam
mov
dec
outsb
test
pusha
es
insl
xchg
cmp
xor
dec
sbb
mov
xchg
cs
xchg
clc
cmp
add
adc
mov
out
lods
aad
movsl
sbb
push
ret
jo
push
xchg
popa
jne
fadds
flds
fisubl
mov
xor
outsl
mov
call
jae
imul
sti
inc
fwait
sub
daa
sbb
cmp
jbe
cli
out
and
adcl
lock
les
mov
inc
sub
inc
xchg
mov
xchg
aam
xchg
aad
cli
cmp
loopne
test
hlt
jo
call
ret
ret
push
sahf
dec
ss
insb
or
pop
popf
rclb
xor
imul
fwait
and
jb
add
repnz
xor
arpl
pop
dec
or
aas
mov
dec
adc
popf
adcb
and
mov
pop
ds
and
jo
jbe
mov
pop
inc
push
inc
fs
push
ss
mov
pusha
test
push
mov
mov
xchg
xchg
stc
in
fidivs
push
xlat
leave
sub
mov
testb
insb
xchg
xchg
mov
dec
mov
pop
push
aas
cltd
mov
and
ret
add
addr16
xchg
pop
mov
loope
inc
pushf
mov
imul
and
mov
xorb
ja
inc
imul
cmp
outsl
mov
nop
mov
add
dec
in
fwait
push
pop
notl
inc
mov
jecxz
push
adc
insl
test
stos
pop
gs
mov
out
add
jp
je
cmpsb
call
rolb
rcll
or
add
sub
push
fcomps
xor
fs
push
stc
into
lret
leave
lods
pop
data16
jae
cmp
jmp
inc
gs
sbb
cmp
das
fmul
lcall
cmp
adc
mov
andb
addr16
fsubs
xlat
sbb
dec
mov
inc
ja
std
outsb
iret
xor
adc
cwtl
or
fwait
sub
ja
cwtl
shrb
mov
into
imul
adc
mov
inc
ss
aas
enter
outsl
mov
mov
push
jecxz
push
pop
nop
pop
rcll
in
jl
mov
cmpb
insb
mov
xor
push
mov
lcall
ficompl
sub
sbb
pushf
popf
xchg
mov
outsb
jmp
xchg
and
inc
mov
dec
fisttps
jns
sbb
ljmp
dec
pushf
fimull
rorb
rorl
in
and
outsl
cltd
lahf
push
sub
xchg
pop
std
pop
push
jae
xchg
aad
add
ret
sti
xlat
mov
lds
sbb
cli
imul
fwait
ljmp
push
lret
sahf
addr16
xchg
shr
mov
les
adcb
adc
mov
xchg
inc
sub
aas
into
iret
in
xchg
test
iret
andl
sub
push
mov
jbe
cmp
xchg
jmp
pop
es
sub
mov
enter
inc
addr16
mov
jbe
fstps
gs
shlb
sbbl
in
ficoms
mov
insb
xor
loope
fs
daa
je
mov
sti
adc
test
das
repz
jl
xchg
jl
cwtl
scas
sub
imul
leave
in
hlt
pop
stos
add
jl
fs
rcl
into
inc
push
or
je
mov
daa
sbb
cmp
or
or
push
pop
mov
push
lock
and
or
outsb
xchg
sti
daa
adc
bound
into
std
aad
loop
cmp
lods
aad
in
mov
dec
xchg
iret
popf
jb
out
push
lock
xor
scas
add
and
xchg
shl
lret
enter
test
sbbb
pop
out
dec
notb
dec
fdivrl
sub
rolb
movsb
xor
push
dec
rolb
push
fsubrp
popa
negb
and
sub
int
pop
pop
and
repz
lds
add
mov
jno
adc
arpl
xchg
adc
and
and
add
pop
pop
dec
pause
lds
and
adc
fsts
mov
fcomp
pushf
fildl
xor
cmp
push
incl
aas
sub
xchg
pop
cmp
jnp
adcl
and
out
nop
mov
xor
jp
sti
arpl
jp
xor
fisttps
ja
sbbl
inc
fcoml
and
sub
sarl
in
mov
in
pop
dec
adc
out
dec
mov
lock
pop
aam
lods
xor
push
pop
ret
mulb
xor
cmp
dec
cmp
push
fisttpl
fidivrs
jle
clc
mov
cwtl
pop
dec
push
mull
fstps
cmpsb
mov
mov
mov
shll
dec
lock
cmp
add
aaa
jb
rcll
andb
shlb
pusha
adc
mov
sub
pushf
in
add
rcrl
rorb
nop
in
xchg
mov
jne
pop
std
pop
sbb
dec
xor
xor
gs
pop
loop
scas
pushf
sahf
test
pop
pop
nop
psignb
arpl
xor
mov
add
out
out
dec
pop
cmp
adc
mov
loope
xchg
fldcw
sbb
sbb
outsb
js
xchg
dec
lock
or
xchg
int
lds
lahf
lahf
imulb
pop
bound
fcmovnb
inc
popa
pushf
mov
sbb
aas
out
or
add
jp
push
dec
push
aam
add
xor
ja
add
aad
jp
sub
fisubrs
sar
push
push
sarb
cmpsb
lea
adc
sub
std
fstl
pop
or
jmp
pop
movsb
dec
pop
mov
insb
sbb
into
push
je
pop
push
cmpsb
and
xor
je
hlt
cmp
jecxz
jp
lret
aaa
and
pop
call
sbb
nop
sarl
mov
sahf
xor
lods
leave
mov
fnop
imul
push
pop
int
jmp
push
mov
sub
push
push
ret
sbb
adc
cmp
mov
jae
test
aad
sti
frstor
jno
movsl
xor
imul
divb
ror
aaa
xchg
jmp
bound
outsl
std
outsb
dec
xchg
ja
movsb
hlt
cmp
lret
and
mov
fstpt
dec
ret
sbb
imul
push
add
fsts
stc
out
xlat
add
mov
push
push
insb
stos
daa
push
inc
dec
shlb
out
mov
movsl
add
aaa
jle
sub
jg
adc
pop
sub
stos
inc
ret
lods
mov
sbb
xor
outsl
cs
push
xchg
in
pop
lret
aaa
mov
lahf
js
lcall
in
loope
mov
jae
shrl
or
sbb
aaa
dec
mov
jb
mov
fwait
shlb
cli
inc
rcrl
sbb
dec
jmp
mov
mov
xchg
sub
push
repnz
roll
outsb
lret
lods
loope
adc
or
push
push
sti
cmp
cmp
sbb
fisttpll
fisubs
fadd
push
pop
std
mov
dec
sbb
addr16
imul
cmc
add
pop
xchg
sbb
iret
pusha
mov
pusha
jp
dec
aas
enter
ret
mov
mov
pop
mov
dec
rclb
dec
stos
hlt
and
mov
xor
mov
addl
push
loopne
cmpsb
jno
add
jmp
repz
test
and
push
std
into
hlt
rcrl
pop
lahf
cmp
xchg
lcall
clc
ds
cmc
fs
jns
mov
inc
sub
push
mov
and
lods
lret
inc
dec
sbb
loope
mov
shrl
adc
daa
jno
loop
dec
in
xor
dec
lret
addr16
xorl
jle
cs
cmp
ja
xor
mov
adc
pusha
pop
out
cltd
or
outsl
adc
stos
push
or
or
lret
ljmp
mov
adc
jmp
ljmp
and
cli
or
daa
or
xchg
jmp
clc
sbb
test
bound
pop
aam
int3
int3
in
lods
push
scas
cmp
sbb
ljmp
mov
int3
cmp
or
cmp
jl
push
mov
cmp
arpl
adc
jbe
in
adc
enter
aaa
jnp
and
addr16
and
fildll
movsl
decl
hlt
dec
insb
in
iret
loop
sti
lret
and
loopne
dec
push
adc
mov
adc
and
xor
repz
call
test
push
dec
mov
mov
out
xchg
dec
inc
jle
jp
lret
aam
inc
push
in
mov
data16
push
push
test
inc
push
lret
loope
cli
incb
mov
sbb
imul
sub
leave
sub
mov
jg
sub
ret
and
int3
cmc
or
push
cmp
or
scas
mov
fmul
dec
jle
iret
stos
dec
aas
xor
push
ja
mov
shll
lock
xchg
mov
cmpsb
sti
adc
mov
mov
xor
or
sub
aad
bound
scas
lods
xorl
ja
out
enter
fbstp
cli
mov
iret
xchg
dec
inc
mov
adc
fists
lock
stos
fs
lods
into
dec
mov
in
jae
fwait
mov
cmc
scas
sub
popa
js
xor
jb
pop
mov
adc
gs
push
pop
jecxz
push
rcl
in
aaa
lea
testl
icebp
xchg
pop
cmc
int3
popa
rcll
je
xor
notl
or
andl
adc
mov
mov
sbb
fs
cld
push
adc
movsb
sbb
dec
aas
pop
nop
cld
push
mov
test
or
sub
lock
push
mov
cmc
pop
out
and
sub
push
loope
and
mov
inc
in
lahf
jo
xchg
dec
nop
inc
cmp
insl
xchg
add
sbb
mov
xor
mov
sub
lret
repnz
addb
mov
loope
push
dec
or
orl
out
out
sub
mov
jnp
mov
pop
ja
insb
sti
xor
sub
loope
sbb
sub
cmp
adc
cli
shll
sub
or
fld1
mov
mov
lock
and
out
cmp
cmp
push
jb
and
out
mov
mov
push
orb
movsl
add
jno
add
les
in
xchg
aas
mov
shl
xchg
ja
shrb
push
daa
jge
mov
dec
loopne
push
adc
xor
vpaddusb
or
test
fnstcw
jge
loopw
test
lret
push
pop
sbb
out
adc
cmp
cmp
mov
imul
push
pushf
add
out
insb
setae
mov
mov
push
sbb
lods
sti
pop
adc
test
jecxz
or
push
add
lret
test
icebp
scas
push
xchg
xor
mov
ret
jmp
sub
pop
jo
gs
fs
push
sbb
mov
shlb
nop
or
xchg
xchg
inc
sub
rorb
inc
xlat
jp
push
cwtl
flds
jge
inc
mov
xor
push
sbb
test
out
cmp
sub
icebp
repnz
ljmp
pop
cmc
xor
inc
shrl
sbbl
jnp
insb
inc
cmp
mov
dec
jecxz
fiaddl
xchg
xor
sbb
inc
or
faddl
xchg
adc
or
dec
ja
fdivr
ja
js
pop
ds
mov
out
loopne
mov
lcall
push
mov
test
cmp
jns
std
fisttpl
adc
gs
gs
pusha
movb
sub
in
mov
pop
aaa
cmp
xlat
popf
sbb
das
push
jge
in
sub
stos
daa
jno
or
fsubp
lock
and
sub
push
pop
cmpb
popa
add
addr16
aam
fucomi
daa
adc
shrl
jl
mov
pop
popf
outsl
fisttpl
xchg
lods
or
add
cs
inc
aaa
outsl
fisubs
fwait
sub
in
xchg
push
stos
pop
mov
in
jecxz
adc
ja
jl
ficomps
mov
and
mov
leave
push
int
scas
adc
xchg
movsb
adc
mov
std
addr16
ret
in
push
add
dec
data16
jbe
cmp
pop
ret
popa
pop
ret
add
xchg
sub
in
push
mov
call
fldt
stc
and
repz
jae
sbb
pushfw
scas
or
scas
daa
jo
pushf
xchg
aas
inc
and
push
mov
inc
enter
lahf
add
cmpsl
push
xor
mov
gs
mov
cmpsb
ret
sarl
mulb
dec
in
stc
out
jecxz
mov
ficomps
fdivrs
mov
pop
cmc
imulb
out
xor
sti
test
fisubrl
jecxz
pusha
je
pop
pop
pusha
and
jne
push
xor
jmp
jg
jle
push
addr16
mov
lret
pop
roll
lret
or
mov
or
xor
lock
mov
in
and
mov
push
out
push
and
in
or
addr16
ja
out
push
push
loopne
cvtpi2ps
xor
jp
mov
pop
jmp
out
ret
dec
xchg
mov
jnp
icebp
xchg
mov
add
dec
sbb
xor
dec
loop
int3
mov
xchg
jns
or
mov
jne
mov
cltd
lahf
in
cmp
mov
mov
insb
aam
or
mov
pushf
xchg
outsb
mov
sbb
adc
jg
push
push
lods
dec
jne
lods
and
mov
idivb
mov
sbb
sub
mov
xor
mov
jo
rcrb
fdivp
add
dec
out
sub
sbb
add
push
mov
xchg
imul
addr16
cmp
lea
mov
mov
inc
mov
jle
push
sbb
ds
xchg
xchg
cmp
daa
add
and
mov
xchg
mov
ss
jmp
mov
adc
int
in
xor
inc
cld
loope
loopne
repnz
add
in
pop
mov
cmpsb
and
repz
jnp
out
outsl
mov
andb
and
shll
arpl
ror
sbb
lret
enter
cld
mov
push
ds
out
fdivl
movsl
les
aad
push
loop
xor
jbe
jp
add
addr16
push
adc
lret
hlt
lret
xor
jp
frstor
repnz
xorl
mov
popf
and
adc
fwait
dec
cmp
rclb
and
ljmp
les
ds
mov
or
aad
and
cli
xor
pop
pop
pop
sbb
push
mov
repnz
lret
aas
sahf
test
es
out
add
daa
and
cltd
pop
and
xchg
push
mov
pop
je
jae
push
out
fbld
ss
or
and
mov
xchg
hlt
rorl
push
lretw
mov
mov
jmp
xor
pop
mov
mov
imul
and
stos
int3
mov
aas
and
jle
js
adc
sbb
sbb
mov
add
and
lods
imul
dec
mov
movsl
add
dec
pop
sub
xchg
cmp
sub
jae
or
inc
xchg
push
inc
push
es
popf
inc
cli
test
sbb
push
push
lock
shll
pop
lock
xchg
faddp
mov
sbb
out
call
sarb
push
fidivs
test
mov
fnsave
adc
loop
cmp
sahf
loope
vmovups
shll
fwait
push
sub
inc
and
pop
mov
pop
iret
adc
jns
dec
jle
test
aaa
es
loop
and
mov
inc
cs
sbb
xchg
mov
rcll
jmp
mov
inc
lds
test
sti
jno
mov
adc
shlb
icebp
fdivrs
loop
mov
push
pop
addr16
aad
mov
stos
out
call
add
cmp
dec
clc
cmp
inc
and
lcall
les
rcrb
insb
mov
mov
sbb
mov
es
adc
sbb
xchg
out
aam
push
dec
cmp
pop
cmc
and
scas
ret
xchg
xchg
cld
int3
push
sbb
outsb
and
or
mov
scas
sbb
in
inc
xor
mov
lahf
xor
in
sub
test
mov
pushf
inc
xlat
cmp
push
adc
mov
xor
cmp
jecxz
cmp
inc
or
int3
rcll
into
add
out
pop
into
adc
fstpt
aad
add
mov
push
insl
or
repz
mov
stc
pop
ds
or
lcall
outsb
cld
loope
mov
fstpl
fimull
inc
cmpsl
cmp
test
stc
pop
mov
dec
add
xor
outsb
mov
inc
sbb
add
mov
mov
mov
push
xchg
pop
sub
mov
orl
ljmp
pop
imulb
mov
clc
add
fcompl
loope
add
icebp
out
in
mov
push
pop
test
mov
imul
insb
stc
jmp
data16
insw
cmp
xchg
sti
int
jae
scas
pop
add
daa
pop
mov
imul
xchg
js
lock
pop
push
mov
or
push
testb
inc
push
xor
jg
add
scas
sbb
jmp
addr16
dec
enter
repz
js
fmull
daa
stos
fstl
in
and
vmovsd
and
ret
dec
jo
and
and
enter
xlat
add
aaa
adc
mov
out
add
mov
jb
mov
and
pop
fsubr
je
loop
jb
ss
push
jmp
xchg
pushf
jge
cli
inc
pop
or
mov
and
sub
or
in
fcomp
pop
push
outsb
cmpsl
pushf
jbe
adc
push
sbb
rol
and
push
jbe
mov
xchg
das
jno
rcr
popa
jne
mov
jnp
add
cmpsb
xorb
ss
gs
loop
pop
sbb
push
mov
sub
xchg
or
mov
enter
sub
cli
cltd
rolb
xor
test
outsl
dec
std
out
mov
into
jle
js
push
out
mov
jmp
incl
test
stos
pcmpeqw
xor
dec
push
js
dec
jle
sbb
je
cltd
jg
push
mov
adc
pop
mov
loope
pop
in
sti
xorb
pusha
push
outsb
push
faddl
out
cmp
outsb
mov
stos
imul
pop
repz
cli
mov
xor
imul
mov
mov
adc
lods
mov
fidivrs
mov
lods
repnz
fsub
loop
nop
lret
rcll
mov
inc
pop
pushf
xlat
adc
dec
das
pop
out
dec
out
xor
lods
mov
rol
inc
adc
pop
or
xorl
sbb
movsl
lods
mov
jg
mov
jo
push
cltd
ret
adc
add
and
enter
xchg
sbb
jns
and
clc
xchg
lods
mov
xor
sbbl
dec
std
clc
lds
les
xor
pop
cmpsb
pop
pop
mov
sti
dec
inc
fstpl
fcmovnu
stc
mov
out
adc
fs
xchg
movsb
bound
pop
xchg
leave
adc
and
xchg
mov
aad
sbbb
or
nop
pop
shrb
cs
jp
mov
outsl
gs
outsb
sbb
xchg
sub
xchg
jbe
push
test
in
das
scas
add
mov
jae
fisubrs
jno
xchg
dec
dec
lret
push
pop
or
mov
fbstp
aam
cmp
mov
jne
insl
cmp
mov
push
xchg
sysret
mov
pop
jbe
xchg
fwait
push
adc
xor
insb
add
fdiv
pop
cmp
aam
icebp
and
xchg
test
shlb
mov
pop
jbe
xchg
or
ror
xchg
scas
lea
mov
stos
loope
mov
test
out
sub
inc
test
in
cmp
xor
sbb
mov
jp
inc
inc
add
push
sbb
iret
mov
vminss
jge
mov
shl
xchg
add
sub
pop
pop
push
xchg
sbb
or
iret
test
mov
rcrl
cmpsl
arpl
cmc
mov
repnz
rcrb
repz
cmp
adc
jo
test
out
xchg
fists
decb
js
popf
jnp
mov
aad
pusha
ss
dec
push
inc
cld
and
nop
mov
ficoms
xor
rol
pop
xor
xchg
lahf
flds
imul
mov
and
jg
aad
rclb
clc
push
dec
sahf
and
xor
sti
or
mov
cltd
jg
adc
lea
mov
jge
loopne
pop
xchg
out
add
loope
clc
adc
push
jp
and
movsl
or
add
dec
pop
and
aaa
fildl
imul
xor
jno
push
aad
xlat
insl
ror
loopne
rclb
jl
xchg
jae
roll
mov
outsl
mov
push
inc
mov
adc
je
fisubs
aaa
adc
int3
mov
arpl
jnp
add
std
push
xor
xchg
jle
inc
cmp
cmp
dec
pop
inc
inc
leave
or
pop
adc
shll
scas
sbb
cmp
popf
pop
test
mov
push
mov
fistl
xchg
pop
scas
xchg
fisubrl
subb
mov
out
inc
mov
pop
xchg
insl
addr16
cmc
xchg
sub
cmp
mov
mov
mov
mov
lret
xlat
xchg
cmp
mov
aaa
cltd
cmpsl
fs
add
jnp
icebp
xlat
cmp
out
and
xchg
cmp
inc
pop
aad
sbb
dec
inc
rclb
inc
das
mov
mov
cmpsb
and
scas
dec
cmpb
or
outsb
subb
lea
mov
pop
je
push
out
xchg
cmp
arpl
sub
xlat
jb
jb
addr16
das
push
mov
jne
cli
inc
testb
mov
sub
jge
ja
sub
pop
push
cmpsb
xor
cmp
jb
fidivrs
xchg
loopne
lahf
nop
scas
dec
cmp
icebp
mov
pop
cmp
inc
ficoml
sbb
repnz
xlat
sub
push
leave
or
and
jle
jbe
shrl
adc
xor
cmp
es
ss
lods
sbb
adc
in
pop
mov
adc
incb
sbb
xchg
imul
stc
pusha
dec
cmp
hlt
insl
push
lret
lds
mov
jae
insb
jle
pop
dec
jge
jl
lods
mov
sbb
sub
lahf
dec
and
in
mov
aas
cmpsb
adc
or
sbb
jnp
xchg
add
fimuls
movsb
aad
cmp
mov
ljmp
repz
loope
fsubl
out
or
and
in
notb
xor
pushf
in
or
arpl
and
mov
sbb
es
lock
and
mov
adc
pop
or
inc
cmp
scas
cmc
inc
ret
test
jns
gs
pop
cwtl
mov
in
mov
pop
test
addr16
push
xlat
xchg
addr16
cld
xor
and
fsubrl
or
movsl
mov
and
xchg
mov
sub
lcall
or
or
xchg
or
clc
jp
js
shlb
pop
insl
push
xor
loopne
cmp
add
mov
pop
ljmp
loope
cmp
or
xchg
push
sbb
mov
pop
faddl
mov
mov
repnz
lret
push
hlt
aam
mov
faddp
ret
jl
imul
shlb
mov
dec
mov
insl
out
and
ss
insb
sub
inc
sbb
xor
movsb
push
sub
in
xor
rolb
cmp
push
aas
adc
aad
inc
scas
jne
scas
loope
sbb
pop
adcb
test
addl
lahf
rcrl
fidivrl
jno
and
fcmove
shl
fidivl
sbb
pop
lret
cltd
dec
jmp
or
sbb
jns
jae
loope
add
or
push
daa
lcall
lahf
inc
stos
mov
dec
pop
mov
push
dec
add
push
push
ljmp
jno
mov
dec
xchg
or
rcll
cwtl
dec
lahf
xor
jns
mov
cli
adc
dec
dec
lds
push
sbb
stos
inc
lcall
add
stc
and
and
lcall
pop
pop
mov
enter
mov
add
cli
cmp
enter
push
aas
in
enter
or
repnz
pop
roll
ret
mov
lcall
out
addr16
leave
pusha
inc
enter
mov
mov
ds
sbb
stos
add
xchg
xor
push
add
inc
movsl
fmuls
jp
test
ss
push
or
jnp
sbb
cmpsb
sbb
and
or
nop
pushf
mov
stos
push
rcrb
scas
repz
lret
ret
call
pop
dec
dec
loope
mov
xchg
adc
out
push
jmp
out
rolb
pop
ss
and
xchg
shld
imul
pop
cmpsb
jnp
es
lods
mov
leave
mov
mov
cmpsl
pop
sub
mov
leave
xor
mov
cmpb
out
test
lds
lcall
inc
jp
int3
cmp
stc
out
cld
outsl
pop
shr
movsl
inc
insb
xchg
push
add
shl
iret
test
cmc
in
mov
dec
inc
popa
loopne
shlb
jns
in
cli
rolb
xchg
xchg
les
push
bound
std
cmp
popa
cmp
cs
sub
sub
cmc
fidivl
adc
pop
loopne
jg
add
pop
lods
mov
fstpl
mov
xor
scas
mov
cmp
in
nop
jne
push
push
dec
les
dec
shl
jae
call
in
nop
adc
jno
add
sub
test
push
xchg
jno
test
jl
jecxz
lods
fcmovnu
cli
adc
clc
fsubr
mov
leave
cltd
pusha
pusha
cmpsl
xchg
addr16
into
inc
fldenv
jo
arpl
addr16
xor
pop
or
inc
mov
xor
dec
cli
test
xlat
dec
mov
das
dec
mov
cmp
and
pop
fdivl
dec
out
pushf
and
xchg
sti
outsl
popf
stos
movsl
mov
xchg
mov
mov
bound
je
xor
push
jmp
out
add
pop
cmp
cmc
adc
jmp
scas
sub
sti
imul
push
lahf
add
mov
popf
add
mov
push
out
xchg
xchg
cmp
mov
mov
leave
cmp
arpl
insl
mov
add
jo
cmp
adc
adc
cld
repz
sub
repz
in
mov
data16
mov
mov
ret
int
xchg
pop
add
cmp
cwtl
ret
loop,pn
pop
jbe
lds
aam
mov
cld
out
push
fisttpl
sti
mov
xchg
rclb
sbb
xchg
jge
out
icebp
and
push
mov
test
mov
cmp
adc
pop
inc
lahf
lret
xchg
adc
sub
test
sub
jns
call
cli
sarb
adc
dec
adcl
pop
pop
scas
stos
ds
add
imul
fcomps
xchg
loope
xor
sti
cmp
sbb
lea
pop
pop
insl
push
cmp
jnp
push
movsl
lods
cs
aaa
fdivs
and
mov
in
inc
cs
das
arpl
jae
push
xchg
stos
xor
leave
sub
push
dec
cltd
ficompl
jnp,pt
xor
mov
or
mov
dec
sub
arpl
fcoml
aas
mov
lods
add
dec
mov
lods
lcall
inc
jmp
sub
add
cmp
or
in
dec
roll
dec
inc
ss
jnp
cwtl
sbb
jns
xchg
std
lock
insl
hlt
inc
sub
fwait
fwait
mov
out
cmp
mov
popa
push
mov
xchg
and
hlt
lods
imul
cmp
leave
es
xor
mov
cmp
and
repz
mov
mov
cmp
inc
fs
loopne
or
fildll
cmpsl
leave
stos
lock
mov
lds
or
into
adc
mov
jmp
in
inc
dec
pop
stos
rcrl
nop/reserved
add
mov
xchg
imul
cmpl
push
jno
mov
sahf
aad
xchg
scas
and
sbb
xchg
dec
rorl
adc
testl
imul
lret
ss
and
shll
shrb
sub
out
out
inc
insl
sbb
jno
movsb
outsl
and
repnz
subb
xchg
adc
arpl
adc
sub
dec
pop
fmull
gs
shll
or
aad
nop
jl
jle
add
xor
xor
inc
int
insb
add
mov
jbe
sbb
add
aas
jb
clc
sub
out
popa
pop
cmp
xchg
mov
mov
xorb
inc
and
scas
cmc
add
cmp
jno
inc
push
arpl
subb
test
mov
xchg
je
sbb
mov
xorl
js
inc
icebp
notl
cmp
subl
hlt
pop
xlat
adc
out
into
jb
add
jo
js
icebp
or
lcall
dec
je
inc
mov
das
xor
movsb
or
imul
mov
jge
stos
mov
jg
lcall
inc
outsb
mov
test
in
repz
inc
mov
out
adc
mov
outsl
call
jb
iret
add
dec
xchg
inc
or
adc
aas
lock
testb
mov
cld
mov
movsb
stc
ss
sub
loop
cmc
int3
push
jo
pop
rcrl
pop
xrelease
inc
add
mov
mov
mov
dec
out
dec
cld
add
popf
rorb
cltd
fmulp
ret
loope
incl
repz
fcmove
xor
lret
out
xor
loopne
popa
jne
xorl
dec
push
call
jno
das
in
repz
jb
fwait
push
loopne
sub
lds
pushf
or
dec
or
ja
pop
sub
xchg
mov
ljmp
repz
pop
decb
hlt
jnp
mov
out
imul
dec
pop
sti
xor
out
cwtl
mov
mov
cmp
stc
xor
in
pusha
push
lcall
mov
xchg
push
rcr
js
arpl
push
mov
pop
leave
xchg
ret
sub
sub
mov
sbbl
es
mov
jb
cmc
fscale
fs
ss
push
jbe
and
push
popf
and
jae
pop
lods
mov
rcrb
xchg
push
cmp
push
mov
mov
sti
cmp
int
sub
cmp
clc
hlt
sbb
ret
mov
adc
sbb
cmpsl
aad
dec
insb
adc
mov
in
into
push
cwtl
push
les
mov
scas
addr16
popa
xchg
sbb
push
test
nop
dec
fldenv
fidivrs
cmp
inc
loopne
stos
sub
mov
lock
cmp
sar
fidivrl
repz
cmp
or
xor
jecxz
lods
lods
pushf
fldcw
push
push
iret
cmp
cmp
js
aad
mov
imul
push
xchg
fadds
xor
nop
scas
dec
nop
jg
or
pop
cld
push
sub
ret
outsb
pop
int
divl
mov
lock
xchg
movsb
stos
jp
fbstp
jmp
adc
cld
out
sbb
xchg
ficompl
sub
aaa
push
inc
sahf
push
inc
mov
cld
mov
cmpsl
repz
jmp
lahf
int
mov
jmp
aas
data16
aaa
xchg
ficoml
ss
xchg
adc
pop
subb
xor
gs
xchg
dec
test
fdivrp
lea
sub
leave
test
outsl
dec
sti
orb
xor
mov
xchg
test
jle
stos
inc
lods
addr16
cmp
and
addr16
xor
dec
sub
jg
cmp
loope
dec
mov
sub
popa
shlb
fdiv
push
popf
inc
pushf
clc
les
push
or
nop
pop
mov
pop
rcrb
sbbl
mov
or
daa
cmp
xchg
inc
mov
dec
adc
popa
test
xchg
cs
daa
or
lret
int3
mov
incb
mulb
pop
inc
jmp
lret
rol
fsubr
or
mulb
ss
cmp
sub
lds
mov
jno
mov
and
xchg
ss
fldl
ljmp
test
shll
lcall
rorb
sbb
pop
inc
jae
lods
push
js
movsb
mov
or
adc
sti
push
es
dec
lods
inc
mov
nop
xor
sbb
lahf
add
cld
ja
lods
inc
jnp
xchg
mov
and
dec
xor
fiadds
push
in
jb
mov
mov
cmp
fbstp
fwait
stos
daa
dec
push
xor
or
xorb
gs
mov
mov
mov
xchg
xchg
jge
out
jl
addb
adc
inc
fs
inc
fcoms
cmp
lea
int
inc
mov
arpl
cltd
shrb
hlt
aad
repnz
sahf
sub
in
add
push
sub
pop
fdivrl
lods
xor
ret
mov
shrb
adc
push
and
mov
cmp
pop
std
push
aad
xor
sub
mov
rorl
fsubrs
rcll
pop
nop
loop
aaa
jge
dec
sti
mov
mov
xchg
add
shl
cmp
pcmpeqd
xorl
sub
pop
aaa
fldcw
fisubrs
inc
mov
and
dec
push
aad
or
mov
jno
int3
sub
mov
lea
ss
sub
mov
jbe
jge
int
fiadds
add
out
mov
adc
insl
rep
loop
xchg
cmp
cmp
mov
out
xchg
jae
out
cvtdq2ps
int3
push
add
inc
cld
mov
sub
sbb
jno
dec
cmpsb
jo
add
pop
mov
ss
js
cltd
cld
jb
cmpsl
sbb
adc
lds
mov
stc
or
or
jge
jae
xchg
jmp
sub
outsb
mov
dec
cmc
adc
repz
dec
push
pop
push
sub
cmc
xchg
mov
out
fs
sbbl
in
push
xchg
das
cltd
adc
sbb
jnp
stos
jp
int3
xor
add
hlt
jo
mov
arpl
lock
lea
xchg
xor
lahf
lret
fistl
es
push
adc
or
sbb
add
fsubr
inc
cld
insl
mov
fistps
cmp
dec
loop
shll
cmp
push
sub
lods
cmp
in
mov
pop
sub
add
cmp
mov
mov
mov
inc
imul
inc
add
fisttps
in
jmp
fwait
repnz
inc
into
mov
add
jecxz
icebp
cmp
cli
jb
fcmove
adc
filds
mov
mov
adc
stos
ds
scas
pop
sub
popf
sti
xchg
shll
ja
add
jle
rcr
xor
test
out
enter
test
xor
push
add
int
push
adc
movsl
pop
mov
push
inc
dec
loope
jae
int
cwtl
shlb
push
xchg
in
inc
pop
leave
outsl
push
les
push
push
fistpl
lret
insb
sbb
popf
jp
pop
jecxz
stos
fsubrs
jle
mov
fldcw
sub
adc
and
jp
int3
outsl
popa
ret
mov
popf
jmp
scas
mov
insl
mov
mov
add
sub
or
mov
push
mov
mov
xchg
mov
mov
out
jmp
lret
cmp
lock
mov
sub
xor
and
iret
popaw
repnz
cltd
daa
lahf
stos
push
pop
cmp
push
js
in
inc
mov
jmp
xor
xor
pop
cld
cmp
push
test
and
mov
fsubrl
push
mov
mov
jl
inc
jecxz
cs
sub
ss
repnz
and
daa
ret
fs
xchg
popf
or
arpl
mov
pop
mov
jge
pop
call
push
ljmp
lods
jbe
cmc
cltd
mov
imul
fnsave
jb
outsl
loopne
cmp
test
mov
adc
js
push
cwtl
movsl
sub
cli
out
rolb
dec
push
push
jp
cs
xor
sbb
jmp
sbb
jg
ljmp
ljmp
ret
mov
mov
or
push
push
jl
mov
repz
add
xor
in
pop
lds
mov
aaa
rcl
out
std
popl
cld
pusha
mov
popf
push
cs
add
xchg
mov
mov
andl
int
or
outsb
pop
dec
fdivrs
cmp
pop
inc
mov
push
scas
pop
or
sub
insl
sbb
out
scas
adc
idiv
inc
or
test
jge
les
stos
mov
pop
enter
lahf
aam
popf
push
testb
test
std
xchg
inc
add
jno
in
popf
sub
jecxz
pop
add
xchg
jl
dec
repnz
pop
pushf
push
in
out
fildl
out
shlb
rclb
flds
movsb
scas
popa
data16
out
pop
jo
xchg
clc
scas
jle
test
inc
jo
cltd
xor
jle
cli
mov
stc
cmpsb
les
adc
testb
stos
cmp
stc
sub
inc
mov
add
inc
addr16
sbb
jb
nop
test
push
and
clc
gs
pop
insb
jp
cmp
sbb
in
jb
insb
aam
xchg
jge
sbb
pop
mov
stos
add
adc
rclb
xor
xor
jb
inc
mov
lret
lret
push
int
leave
bound
out
xor
sbb
xchg
xor
push
test
mov
stc
jle
in
lahf
and
dec
sub
repz
fisttpll
fs
pop
xor
scas
xor
lret
out
popa
pop
outsb
mov
decb
mov
incb
lods
addb
inc
cmp
imul
and
stos
jg
jns
ja
sbb
dec
xor
jb
mov
xchg
push
stc
mov
mov
adcb
fs
cltd
aaa
inc
adc
adc
inc
scas
faddp
aad
bound
add
push
imul
adc
cmp
push
shll
rclb
pushl
fdivrs
into
popf
ficomps
fidivs
leave
inc
inc
ss
daa
mov
pop
sbb
mov
out
push
adc
add
clc
pop
insb
int3
mov
add
dec
mov
adc
loop
into
push
mov
sub
mov
mov
lahf
dec
cmp
jno
sbb
and
ret
mov
sbb
pop
testb
dec
push
shll
iret
aas
mov
cmp
in
in
dec
dec
and
jae
fwait
push
inc
je
cmpsl
in
dec
xor
add
mov
jge
daa
pusha
je
inc
pop
pop
insb
rorl
xor
iret
test
testb
jnp
dec
les
xchg
imul
xor
jo
shll
pusha
or
sub
add
in
inc
pop
inc
or
sub
xchg
dec
and
mov
lahf
and
sub
repz
lcall
dec
jne
jae
arpl
cmpsl
and
dec
out
and
in
push
jbe
mov
lods
movsl
daa
dec
jo
mov
jmp
cmp
lds
dec
adc
imul
add
mov
test
out
xorl
and
cmpsl
movsb
sbb
mov
in
cmp
movsl
jbe
push
push
movsb
inc
sbb
mov
and
add
test
aam
mov
push
call
xor
dec
add
sbb
cmpsl
xor
xchg
xor
dec
push
lret
call
aam
jp
xchg
mov
cmpsl
pop
sub
sar
mov
xchg
jge
dec
insb
xchg
pop
xchg
dec
xor
mov
arpl
cmp
inc
aas
or
pushf
leave
sbb
test
push
outsb
sub
mov
stc
popa
lahf
mov
in
add
daa
lret
adc
mov
dec
adc
push
pop
or
idiv
pop
sar
mov
je
xor
and
in
xchg
jno
insb
cmp
addr16
sbb
rcll
popf
mov
mov
std
dec
rorb
dec
ss
pop
scas
dec
out
mov
jbe
mov
mov
sub
xchg
cs
roll
cmpb
adc
mov
loop
ss
sub
jg
loopne
jge
filds
pushf
and
mov
mov
xor
push
call
jb
or
daa
jmp
mov
fcmovnbe
mov
cs
mov
aaa
jle
sub
pop
ja
mov
cmpsl
movsb
dec
push
in
pop
xchg
cwtl
xchg
mov
pushf
shl
bnd
jle
addr16
cmp
sbb
xchg
sbb
addr16
pop
cmp
sti
jbe
push
or
xor
fnstcw
xchg
ret
push
cmp
adc
or
mov
js
imul
mov
shlb
fstp
xchg
cmpsl
outsb
sub
mov
rdpmc
lods
fsubl
push
fcmovb
inc
mov
lods
test
push
adc
popa
push
das
pop
enter
jge
incb
add
push
xchg
dec
popf
mov
leave
or
test
or
mov
xchg
and
jne
pop
xchg
mov
pop
inc
mov
add
ljmp
je
addr16
push
sarb
clc
mov
inc
sub
push
or
test
cmpsb
jns
dec
cmpsl
fdecstp
mov
gs
cmpsb
sahf
adc
aad
push
jae
sbb
pop
test
xchg
cmp
insb
cwtl
inc
test
adc
dec
testb
stos
mov
jl
sbb
xchg
cmp
jecxz
add
jo
gs
icebp
cmp
dec
adc
clc
and
fdivl
cmp
sub
rcl
cmpsl
inc
imul
js
lods
jb
lods
mov
xchg
inc
cld
test
mov
mov
iret
xor
and
out
call
dec
dec
push
aaa
into
xchg
xchg
pop
fisubrs
jecxz
or
add
outsl
xor
fs
jl
fcmovbe
push
and
imul
xor
xchg
lods
movb
leave
add
lds
add
pop
push
mov
dec
push
pop
xlat
scas
fdivrl
push
shrl
push
pop
inc
fists
test
repz
mov
or
lock
aad
ljmp
loop
cmp
movsl
int3
jno
adc
adc
mov
lods
addr16
mov
xchg
mov
push
cld
pop
fwait
negb
insb
test
xorps
les
or
orl
sahf
lahf
or
stc
loop
inc
test
mov
clc
and
inc
push
data16
sub
fsub
mov
push
xchg
outsb
subl
xchg
cmp
sub
jecxz
push
add
insl
cli
jae
dec
lea
outsb
mov
ficomps
pop
pop
push
adc
inc
push
lret
lods
push
mov
xor
lods
addr16
mov
inc
inc
lock
push
dec
mov
inc
sahf
rcrb
xchg
das
mov
xchg
sub
and
push
sbb
outsl
add
fists
cmp
idivl
insb
lea
add
hlt
xor
add
jo
lcall
loop
pusha
aas
in
mov
repnz
lds
lret
fucom
popl
xor
jecxz
mov
je
je
dec
mov
mov
cmpsb
cmp
cmp
cmp
xchg
lahf
les
out
ss
data16
aam
push
xchg
cmp
inc
sub
mov
sbb
mov
das
notl
fsts
mov
jno
ja
mov
push
inc
inc
fs
pop
adc
ret
negb
push
cld
sbb
sub
sbb
enter
lods
test
clc
mov
or
cmp
and
and
adc
aad
jl
loop
andl
add
push
icebp
into
mov
sub
xchg
xor
cld
dec
or
popf
sbb
lea
jp
pushf
cli
les
xor
cli
fsts
hlt
xchg
mov
sbb
fcompl
cmpsl
and
jns
fadds
repnz
add
adc
adc
outsl
mov
sbb
push
xchg
jbe
das
test
fistl
lret
lret
adc
pushf
push
pop
push
dec
inc
sarl
cld
fwait
add
into
pushf
jne
jnp
sub
das
mov
fwait
jge
jb
prefetch
or
flds
sub
lock
in
ds
es
jl
add
or
fsubs
or
mov
rorl
arpl
popf
popl
xor
fcmovnu
repz
and
ljmp
test
mov
inc
and
jbe
xorl
cwtl
std
stos
jbe
cmp
xor
aad
out
add
sbb
jbe
mov
sub
ret
outsb
jbe
in
or
int
push
inc
mov
inc
hlt
xchg
pop
pop
inc
jae
test
repz
mov
pop
jne
mov
cmpsl
repnz
clc
test
mov
lcall
sbb
popf
call
in
sbb
cld
mov
dec
test
enter
incb
repz
jl
xor
xchg
mov
cmc
jg
mov
cmp
add
push
pop
enter
hlt
mov
mov
subb
sub
add
fcmove
iret
xchg
loope
adc
mov
sbb
out
add
mov
adc
xchg
add
push
inc
cmp
push
dec
popa
lea
arpl
or
push
fwait
adc
mov
jno
mov
jge
mov
pop
xchg
out
mov
mov
in
addr16
inc
bound
or
fcomps
ss
fwait
xchg
pop
popa
jnp
xchg
repz
xchg
arpl
pop
dec
test
std
or
push
fildl
mov
arpl
bound
xor
pop
movsl
mov
mov
mov
cwtl
out
jb
int
das
and
jnp
ja
fldenv
int
mov
sub
mov
cmp
cld
sub
jnp
arpl
and
xor
or
pushf
or
scas
cmp
outsl
sbb
cmp
and
mov
int3
sbb
cmpsl
rcll
mov
adc
sub
outsl
js
mov
int
cli
push
sti
jmp
jnp
ret
jecxz
and
test
mov
jg
lahf
fstps
xchg
inc
jmp
enter
jae
sub
cs
mov
dec
std
fs
lea
xor
cmp
pop
inc
ljmp
cmp
pop
pop
popa
fisttpl
jge
sbb
lock
ret
push
shl
or
fwait
xor
loope
xchg
jne
inc
or
fst
mov
mov
lret
dec
or
mov
shl
pop
mov
jnp
shr
cld
inc
sub
lods
sbb
movsl
xchg
xor
aam
call
dec
inc
test
ret
enter
movsl
mov
jmp
pushf
xlat
mov
jecxz
lods
or
ja
inc
sub
push
mov
vcvtsd2ss
ds
jns
push
adc
cmp
ret
lock
add
call
cs
adc
mov
sub
mov
sub
negb
rcrb
cmp
cmp
imul
mov
cmpsl
incl
loop
or
inc
out
or
pop
jp
or
leave
cmp
adcl
rol
pop
mov
lock
decl
mov
popa
xchg
jle
pop
rcll
mov
inc
popa
mov
pop
or
jle
inc
dec
outsb
ljmp
pop
in
xchg
cli
or
int
data16
enter
push
dec
and
mov
add
and
adc
das
mov
stos
repnz
scas
scas
add
push
mov
fidivs
jge
inc
popf
rol
add
repnz
push
pop
vmulsd
iret
andl
out
pop
clc
ret
push
xor
cmc
push
ret
sbb
clc
inc
adcb
xor
mov
push
xor
jo
or
pop
in
inc
fnstsw
in
in
shl
pushw
push
mov
stos
add
sub
adc
addb
jle
mov
enter
adc
pop
fbstp
xchg
cwtl
xor
adc
sarl
dec
sbb
out
int3
ljmp
mov
fimuls
adc
mov
jp
xor
incb
push
xorl
fsubs
add
add
xchg
and
jns
scas
aad
pop
ss
pop
stos
sbb
stc
pusha
mov
cmc
xor
clc
pop
jno
repz
mov
cmpsl
and
scas
push
cmp
sarb
sub
call
mov
cs
cmpsb
dec
dec
int3
push
push
je
cltd
das
mov
push
adc
insb
adc
mov
or
jmp
inc
adc
xchg
es
out
nop
mov
mov
fidivrs
jge
adc
mov
xchg
sbb
mov
repz
sbb
push
pushf
dec
xchg
and
loope
out
ret
adcl
cs
fadds
mov
cwtl
mov
arpl
xchg
jb
jnp
addl
mov
xor
or
fabs
adc
loop
enter
cwtl
popf
mov
dec
mov
jnp
jle
xchg
sar
add
mov
add
xor
mov
adc
lds
jb
pushf
or
stos
inc
mov
mov
xchg
fdivs
and
in
fbld
test
dec
cli
jae
shlb
insl
shl
sub
js
jge
stos
cmp
hlt
inc
ror
and
cmp
pop
jnp
inc
mov
push
sbb
xchg
pop
pusha
jge
or
add
imul
ret
fadd
stos
lods
mov
cmp
pavgb
adc
test
leave
jl
sarl
push
pop
pop
mov
setb
pop
xchg
adc
test
xor
pop
out
in
inc
cltd
dec
push
icebp
mov
jmp
push
movsl
movsl
icebp
or
faddl
mov
jmp
shll
into
or
push
scas
push
xchg
cmpsl
jecxz
jne
inc
pop
popf
dec
ja
adc
cmp
adc
jae
cs
jae
or
mov
jb
inc
das
adc
cmc
lds
inc
call
adc
out
and
mov
aad
aaa
cmp
sahf
dec
adc
mov
dec
fildl
cli
test
push
xor
in
push
call
and
sub
xlat
lcall
push
mov
or
arpl
aam
in
lea
jo
xchg
adc
aas
xor
stos
int3
fcompl
lods
add
add
das
push
xchg
ljmp
or
les
jns
cmp
ret
insl
pop
pop
out
mov
aaa
inc
movsb
iret
adc
clc
mov
mov
scas
cmp
int3
add
js
out
sub
arpl
jo
shl
push
jbe
mov
xlat
xchg
cmp
mov
in
ljmp
pop
sub
sbb
mov
jno
incb
or
mov
repz
iret
sahf
outsl
nop
push
out
not
sub
in
std
pop
je
pop
mov
mov
sbb
pop
lahf
pusha
rcrl
dec
pop
test
mov
mov
sub
mov
xchg
lret
cs
pushf
lahf
repz
cmp
movsl
pushf
pop
dec
push
stos
lcall
adc
mov
out
stos
cmpsl
or
outsl
in
and
mov
sub
test
or
js
es
jo
xchg
add
xchg
and
sbb
pop
out
lret
iret
ret
subb
jmp
icebp
sub
fimuls
dec
aam
fnstenv
and
dec
add
inc
lods
jle
mov
mov
inc
adc
cmp
adcb
add
cmpb
xor
mov
mov
jge
daa
mov
dec
jecxz
mov
insb
pushf
push
addr16
mov
mov
leave
psubsw
inc
daa
jo
call
adc
jne
mov
imul
fdivrp
mov
int3
aad
sti
mov
mov
mov
pushf
fidivs
sbb
inc
push
xchg
xor
push
or
xor
aad
gs
xchg
movsb
add
shll
cld
jo
daa
xlat
aas
mov
adc
xchg
mov
jge
arpl
mov
push
push
sbb
enter
dec
test
inc
aam
adc
das
ja
out
xchg
or
or
or
adc
sub
pop
cmp
insb
push
and
jne
inc
out
orl
push
add
scas
mov
mov
popa
sub
ret
lds
mov
loop
xor
xchg
push
mov
mov
jle
rorb
xor
fnsave
and
in
loopne
lds
adc
push
dec
jmp
ret
cs
in
mov
test
mov
stos
je
fbld
cmp
cmc
push
test
jp
pop
in
dec
movsb
scas
repnz
lahf
out
shlb
inc
cmp
aas
jecxz
pop
dec
in
push
and
sub
mov
and
cmpsb
or
adc
inc
and
dec
negl
inc
mov
jo
out
xchg
mov
arpl
xlat
enter
ljmp
stc
xchg
adc
add
inc
out
pop
psadbw
pop
fcmovbe
movsl
mov
push
mov
icebp
fmuls
cmpsb
sub
andl
add
cld
pop
push
insl
inc
add
xchg
xorl
xchg
addr16
fidivl
rcll
push
sub
dec
adc
xor
sub
inc
xor
cltd
std
or
pusha
and
and
inc
aam
out
adc
js
dec
cmp
mov
inc
jne
testb
pop
xchg
sub
cmp
or
int
xchg
imul
pop
enter
push
jne
fadd
cmpsl
mov
pop
jne
push
cmp
movsl
lds
and
mov
clc
call
aam
sbb
stos
gs
mov
rorb
in
fidivs
pop
stos
and
fwait
jb
cmp
ret
add
shll
ljmp
xchg
sub
mov
xor
sahf
inc
das
seta
xchg
iret
inc
jnp
add
jp
push
cli
outsl
jl
pop
mov
cmp
dec
pop
mov
dec
sti
inc
pop
es
cli
icebp
push
mov
jge
iret
ret
push
dec
push
xorb
sub
shrl
adc
xor
pop
daa
popf
into
loop
sbb
arpl
fildl
inc
lea
jecxz
jb
leave
mov
cmpsl
mov
sar
inc
inc
sahf
or
fs
ja
aas
outsb
sub
push
fxch
out
mov
hlt
or
lods
js
lcall
das
int3
mov
adc
sub
out
mov
test
or
add
cltd
adc
dec
mov
leave
leave
pop
inc
push
sti
push
bound
mov
loop
add
mov
shrl
lea
mov
adc
or
mov
sbb
push
inc
push
jne
xor
mov
out
mov
mov
inc
and
mov
in
adc
dec
mov
int3
dec
mov
push
and
vmwrite
insl
or
pop
sub
sub
mov
cld
push
sub
inc
fs
xchg
jp
es
pop
sub
mov
int
cmp
jl
push
or
es
xchg
fcmove
icebp
pop
push
sub
fsubl
lods
push
ds
push
xor
push
lock
es
jp
mov
pop
int
push
fsubs
int3
fisttps
jnp
push
fsubrs
mov
jo
cs
movsb
sbb
icebp
fsubs
mov
stos
dec
btrl
sbb
jl
sub
out
dec
inc
jmp
mov
dec
pop
sbb
das
dec
sbb
push
outsl
adc
and
jb
xor
lss
sbb
xchg
adc
push
fmull
cld
inc
addr16
jg
daa
bt
shl
xlat
out
sbb
and
sti
push
mov
push
mov
inc
or
xorb
orl
aad
pop
lret
arpl
xchg
in
sahf
pusha
mov
mov
stos
ljmp
jge
jge,pn
adc
cmp
inc
cli
jl
pop
mov
fcmovbe
lds
leave
popa
movsb
imul
and
jnp
push
inc
shl
cmp
inc
out
mov
and
xor
mov
clc
and
jae
xchg
test
and
lret
andl
fstpl
inc
stc
push
icebp
insb
dec
lods
pop
cmp
je
cmpsb
mov
sbb
aaa
cmp
push
xchg
jne
and
cmp
xlat
xchg
test
pop
pop
cmpsl
xchg
hlt
rep
xchg
stc
push
inc
mov
popa
fs
sub
hlt
icebp
inc
pop
mov
jl
fcomps
shlb
add
nop
push
push
test
adc
pcmpeqw
enter
movsb
mov
sbb
test
xchg
jae
sub
arpl
scas
add
dec
sub
mov
in
cmp
and
xchg
mov
orl
pop
xor
mov
sti
mov
enter
push
mov
movsb
sbb
je
je
arpl
mov
push
adc
push
or
es
sub
pop
xor
xor
ret
ljmp
movsb
sahf
ret
and
nop
mov
fcoms
and
iret
xchg
out
shrb
ror
outsl
push
movl
xor
mov
pushf
mov
or
in
outsb
rcrl
scas
fistps
data16
addb
sahf
cmp
stos
lea
popf
lcall
divl
in
xor
or
shlb
cmp
sbb
push
xchg
rcrb
push
je
repz
adc
aad
nop
daa
mull
xchg
lds
lcall
aaa
mov
iret
ret
nop
push
mov
sub
xor
movsb
push
lcall
mov
and
das
movsl
outsb
cmp
cmp
inc
jnp
sbb
loop
push
outsb
cltd
out
mov
sub
in
sub
sbbl
xchg
sub
cmp
mov
jo
cltd
stos
jnp
mov
out
sar
push
repnz
aaa
enter
popf
xor
data16
add
clc
stos
mov
xor
aas
into
xchg
test
pop
sahf
and
ret
fcoml
mov
sub
xor
and
dec
out
addb
inc
cmc
pop
cmp
and
mov
jmp
add
cmp
push
loope
cltd
fidivrs
nop
dec
lahf
mov
jns
dec
inc
lods
dec
jne
js
jne
mov
jmp
lds
xchg
xlat
pminsw
addr16
mov
adc
jl
je
into
xchg
jns
dec
or
or
adc
dec
test
in
pop
stos
int
ret
stos
call
call
bound
in
pop
dec
int
mov
sahf
psrad
stc
xchg
loopne
adc
punpckhdq
sarl
xorl
rclb
push
cs
mov
lods
adc
call
or
out
mov
cmp
sahf
xchg
mov
add
push
ljmp
test
inc
outsl
test
aam
pusha
lock
or
or
jb
imul
inc
idivl
sub
cmp
loop
sub
fsubs
push
xchg
cmpl
test
cmc
fcmovb
sub
add
xor
add
int3
cli
and
jmp
dec
sbb
pop
and
cmp
das
xchg
arpl
xchg
inc
enter
sub
mov
test
pop
insl
lds
inc
pushf
fs
mov
loopne
in
xchg
addl
sub
mov
mov
imul
xor
sub
push
cs
inc
shl
jne
mov
jbe
add
sbb
adc
adc
mov
lahf
dec
aas
das
clc
lahf
lock
and
imul
fstl
aam
adc
out
out
or
push
fincstp
jne
add
dec
sub
mov
mov
jnp
ret
xchg
cmc
lcall
sub
push
and
push
sub
ficompl
mov
sub
fidivrl
xor
push
fwait
out
iret
cmpsb
test
mul
mov
jmp
xchg
out
sbb
insb
pop
adc
lea
cmp
mov
inc
cltd
rcr
xor
lret
pop
dec
data16
dec
mov
hlt
jecxz
mov
out
xor
fcomps
mov
xchg
mov
or
in
xor
xchg
dec
jne
jmp
test
addr16
jno
aaa
dec
xor
movsl
or
xor
jns
mov
movsb
push
loopne
add
inc
xlat
jae
clc
test
add
iret
mov
insb
out
and
es
jecxz
jb
adc
dec
and
sarl
iret
or
sub
gs
daa
mov
adc
dec
cmp
mov
mov
inc
cmpsl
mov
push
data16
and
or
sub
hlt
ja
jbe
test
and
sbb
sahf
mov
clc
push
fisubl
es
pushf
popa
movsl
hlt
jle
dec
imul
push
and
xchg
iret
fcmovnbe
xor
les
adc
fadds
mov
popw
adc
sub
pushl
psubsb
inc
sahf
fs
xchg
push
test
pop
rcrl
cld
sbb
fcoms
inc
push
loopne
and
push
pop
cs
push
lods
add
push
xor
and
es
mov
nop
xchg
and
test
lret
rorl
push
dec
dec
and
into
mov
mov
cmp
xchg
jo
ja
push
sbb
mov
and
add
dec
je
leave
test
dec
pop
xor
fstpl
xor
imul
inc
sbb
js
sub
js
out
mov
fwait
and
cmp
lret
inc
xor
ds
les
hlt
daa
adc
mov
dec
stc
and
mov
xchg
adc
jecxz
mov
fildl
jne
mov
fidivrs
push
xor
int3
mov
out
flds
mov
pusha
add
mov
lea
mov
les
pop
pop
cli
and
mov
lds
ljmp
prefetchnta
cmp
mov
shr
testb
push
inc
xchg
ret
push
mov
pop
ds
int3
ret
mov
inc
test
mov
negl
inc
inc
testb
xor
xchg
lcall
lea
sbbb
jl
add
mov
and
mov
push
mov
jp
pop
leave
xchg
fidivrl
push
in
lret
mov
or
dec
mov
cli
fdivr
lods
mov
aad
out
js
leave
shll
push
jecxz
call
inc
pop
mov
sbb
mov
xor
push
and
mov
cmpsb
movsb
fdivs
inc
out
or
cmp
and
je
dec
in
and
out
and
xchg
xchg
add
mov
lea
jae
jbe
pop
je
cs
ds
rcll
or
sub
loopne
mov
call
sar
xchg
mov
sub
pop
xchg
cs
jg
pop
test
cwtl
pop
pop
or
idivb
test
add
hlt
pop
cmp
cld
aam
push
cmpsl
mov
pop
sbb
jb
mov
test
addr16
mov
mov
pop
xchg
nop
inc
rcll
mov
inc
xor
scas
jmp
sahf
xchg
adc
fstpl
movsb
hlt
xor
es
int3
stos
sub
jo
xor
fidivs
mov
cltd
fistps
adc
mov
clc
fcoms
je
dec
mov
inc
data16
push
jb
xchg
mov
mov
or
shrl
es
in
gs
and
and
in
cmp
mov
add
sub
out
adc
lret
or
js
jg
cli
push
cmp
jae
decb
stc
and
call
mov
aad
xchg
icebp
ljmp
scas
iret
mov
rolb
stos
ret
pop
andb
push
push
adcl
fimull
adc
out
xchg
add
mov
mov
xchg
mov
lock
cmp
jnp
dec
imulb
or
cld
xchg
icebp
cmp
xchg
push
pop
cmp
sbb
inc
int3
lret
and
mov
roll
dec
ja
jbe
dec
sub
and
cmp
iret
dec
int
insl
xchg
pop
fwait
into
and
cmp
dec
adc
sarb
push
insb
sahf
repz
mov
inc
mov
or
jne
or
outsb
add
add
sub
mov
inc
cmp
shl
sub
jg
icebp
mov
gs
sbb
addl
and
xchg
add
mov
js
sbb
push
roll
or
and
aad
and
int
orb
xor
xchg
lock
inc
inc
sbb
sti
sahf
lods
adc
loop
je
lds
lds
fidivrs
out
jmp
test
mov
mov
ja
ret
xchg
jg
push
inc
push
mov
ds
insl
inc
jno
mov
jno
ljmp
pop
xor
mov
mov
sub
adc
sub
mov
jne
jecxz
int3
inc
cmc
aad
pop
jbe
inc
inc
jae
cmp
and
imul
sub
adc
mov
jb
test
pushf
jmp
adc
out
subb
and
je
push
push
and
dec
fmull
xor
inc
xchg
jle
pop
jge
loop
xchg
sub
mov
sub
mov
fs
cmp
pusha
call
inc
mov
rorb
inc
movnti
loope
in
sti
jb
shr
adc
lods
xlat
jp
dec
call
stos
idivl
mov
sub
or
imul
shlb
and
mov
mov
sbb
mov
std
or
push
and
xlat
mov
aam
ja
mov
in
sbb
aad
push
jno
imulb
ret
push
pushl
sub
inc
loope
jnp
clc
lods
pop
call
stos
xor
cmp
shrb
lcall
hlt
and
dec
xorl
lret
out
dec
addr16
fstpt
aas
cld
jp
jmp
pop
or
inc
jl
sbb
inc
enter
enter
jns
shll
mov
fadds
xchg
std
lds
pop
rcrb
movsl
adc
sbb
shl
pop
popa
dec
int3
push
xchg
rorl
push
fildl
insb
movsl
adc
push
outsl
inc
lods
mov
dec
sarb
ret
and
repnz
iret
mov
test
fmull
insl
push
cmpsl
scas
pop
pop
pop
mov
loop
popf
sub
rol
jl
xor
cmp
insb
addl
inc
add
mov
loop
xlat
adc
loopne
ret
test
shlb
ss
lods
test
add
popa
cmc
adc
leave
fnstsw
jbe
leave
int3
mov
popf
in
pusha
adc
repnz
mov
push
mov
xchg
stc
sbb
xor
hlt
repz
insb
je
rcr
pop
into
sbb
jnp
mov
lret
jecxz
fucomi
mov
xchg
push
imul
insb
sbb
sub
out
mov
idivl
sarb
divl
popf
inc
jnp
sub
push
and
push
mov
jl
loop
add
pop
mov
fnsave
lcall
cld
xchg
or
or
jnp
push
icebp
cmpsl
push
fwait
stc
xor
xchg
pop
stc
push
jns
popf
je
daa
adc
sub
sub
mov
push
repnz
je
cmp
in
pop
out
xor
sbb
jge
push
push
out
mov
inc
flds
call
shl
or
loope
pop
fistps
and
shl
fistps
mov
push
jo
fs
mov
jne
jo
mov
bound
and
add
cli
aam
xlat
push
clc
cwtl
sub
push
adc
in
in
inc
out
xor
shl
dec
mov
jae
mov
ljmp
shl
cwtl
xchg
add
add
push
push
lock
cmp
sarb
cmp
jl
cmpsb
aad
mov
aas
pop
cld
mov
jmp
sbb
jecxz
add
cs
cmp
test
xor
jb
push
rol
out
and
mov
roll
loopne
sub
shrb
cli
insl
loope
dec
loopne
push
pop
push
push
fstpt
jg
out
scas
push
mov
dec
mov
jmp
mov
or
ja
and
sysenter
aas
in
shlb
lahf
in
inc
cmpsb
mov
out
push
addr16
or
lahf
xor
cmp
in
or
mov
xchg
inc
or
ds
aam
and
xchg
in
ljmp
add
sub
jmp
jbe
mov
jno
mov
popf
mov
std
and
jge
fsub
jbe
add
xor
loopne,pt
shll
mov
popf
xor
cmpsb
fisttpll
jg
ret
push
ret
dec
mov
cmp
jo
push
jae,pn
dec
idiv
inc
movsb
pop
jo
test
fldcw
popa
fst
jp
jns
jb
notl
fwait
jns
lret
dec
mov
xchg
xchg
sahf
and
sub
movsb
cwtl
stc
in
repz
and
push
test
push
mov
pop
pushf
xchg
insl
mov
jp
cmp
push
jnp
aaa
mov
pop
sbb
jo
fmulp
cmpsb
mov
cmp
add
or
or
inc
cmpsl
sub
cli
jo
cld
lcall
out
cmpl
nop
pushf
jp
sbb
mov
cmpb
mov
inc
jp
adc
cwtl
insb
mov
out
or
lods
sbb
arpl
imul
cmpb
sti
xchg
push
jae
cmp
add
lea
jne
fcoml
dec
clc
push
and
test
fsubr
repz
xor
outsl
dec
push
inc
mov
fisubl
xchg
insb
daa
scas
cmc
pop
fidivl
mov
cmp
adc
xor
fmull
pop
jp
rdmsr
in
imul
stc
mov
dec
pop
adc
jbe
jp
addr16
in
loope
push
rol
jle
add
mov
neg
test
addb
jecxz
lds
cmp
xor
inc
mov
push
dec
jb
add
pop
jbe
data16
mov
pop
sbb
cmpb
ret
pop
rcl
xchg
bound
hlt
and
fmull
dec
jp
loop
sub
aas
ljmp
jle
sbb
jno
rcrb
mov
add
lock
pusha
orb
jo
sbb
xchg
das
pushw
scas
sub
lret
sub
insb
sbb
jl
sub
xchg
stos
lock
mov
pop
sbb
pop
adc
lret
js
mov
push
movsl
pop
clc
xor
leave
fucomi
mov
dec
popl
lcall
fwait
subb
xchg
pop
cli
rorb
mov
andb
jne
out
addr16
insl
loopne
lahf
mov
outsb
mov
movsl
in
mov
lahf
inc
mov
mov
mov
sarb
sub
mov
cli
push
pop
call
sbb
mov
jl
bound
lret
jge
cmp
dec
popf
inc
ret
arpl
icebp
out
mov
sub
mov
inc
add
int
inc
xlat
loope
es
and
mov
mov
mov
or
jecxz
jp
outsb
mov
push
ds
and
test
push
push
or
imul
arpl
sahf
pop
or
addr16
mov
aaa
ret
push
in
xor
adc
shrl
dec
das
inc
xor
lock
push
fidivrs
repnz
mov
rcrl
or
js
sub
nop
testb
stos
mov
mov
ss
or
fwait
xchg
faddl
imull
nop
ljmp
sub
lods
sub
jo
addr16
dec
es
out
mov
outsb
lahf
movsb
cld
dec
aam
mov
push
or
loope
push
aaa
add
rorl
sahf
sub
sbb
aas
lahf
test
iret
aam
push
or
jne
inc
add
stos
rcrl
adc
or
push
push
cmpl
faddl
and
jae
testb
add
aaa
inc
out
in
add
cmp
dec
push
sti
push
mov
add
mov
xchg
xchg
imul
imul
xor
int3
andb
mov
lret
xchg
shll
ds
int
les
subl
aam
ss
lods
sub
lret
mov
lcall
xchg
jb
dec
mov
cmp
cmp
daa
inc
mov
mov
pushf
test
ja
sub
push
cmp
inc
int
xor
lods
cmp
add
sbb
or
add
add
push
xlat
cmp
jb
cmc
jne
mov
mov
sbb
mov
out
or
fdivrs
scas
mov
and
jae
mov
lret
inc
add
mov
test
lea
and
stc
sbb
pushf
cmp
jmp
data16
decl
cmp
cmp
and
cwtl
sbb
mov
sbb
lret
jmp
aam
bound
mov
aas
inc
xchg
push
mov
pushf
icebp
jge
faddl
aad
mov
lock
mov
scas
jo
jp
dec
cmp
fwait
add
into
inc
loope
or
ss
xchg
stos
lahf
movsb
mov
inc
or
bnd
pop
fiadds
lahf
or
js
sahf
mov
cmpsl
rcrb
xor
test
or
push
scas
repz
xor
enter
loope
daa
mov
shrb
xchg
fmul
xchg
jae
add
lret
mov
inc
fdivrl
andl
daa
mov
imul
or
pop
dec
inc
push
arpl
out
stos
pop
cmc
push
cld
mov
pop
out
mov
test
pop
testl
fdivs
popf
lods
call
ss
fldcw
pop
or
push
inc
repnz
out
fwait
scas
jb
jmp
push
subb
dec
pop
adc
mov
and
mov
mov
and
xchg
lret
out
insb
call
je
test
lret
cmp
mov
imul
push
xchg
pop
ret
enter
jecxz
call
fistpl
clc
popf
repnz
movsl
lcall
bound
and
dec
fisubs
daa
jge
xor
jno
add
mov
mov
cltd
stos
dec
xor
pop
mov
sub
push
call
cmc
int3
lock
push
xchg
mov
or
fdiv
mov
push
sbb
jle
jecxz
mov
rcrb
aad
cmp
and
jae
pop
jle
push
cmpsb
mov
loopne
jae
sbb
mov
xchg
mov
ljmp
cmp
lea
ja
mov
or
mov
sahf
jo
xchg
cli
inc
lcall
insl
aad
into
mov
xor
cmpsb
lea
ret
clc
js
shrl
shl
negl
cmp
sbb
or
cs
shr
out
popf
inc
shl
jns
mov
ficompl
or
add
out
sbb
aas
out
dec
enter
sbb
inc
daa
inc
call
std
push
insl
repz
dec
xchg
xor
push
lock
pop
jne
int
mov
cld
roll
stos
fsub
cmp
into
shr
jle
sti
adc
stos
add
aaa
pop
nop
add
inc
push
cmp
sub
ficomps
lcall
sub
inc
mov
pop
sbb
cld
push
imul
shrl
subb
and
lds
cs
mov
pop
jl
dec
mov
sub
adc
ja
ret
scas
pop
mov
add
mov
loopne
xchg
js
cmpsb
add
cli
xor
popf
out
push
mov
cmp
lret
xor
and
jb
cmp
inc
iret
inc
flds
cli
jbe
sub
ret
inc
lahf
les
lret
add
xchg
es
sbb
pop
adc
or
lods
repz
imul
xor
lcall
dec
mov
push
and
pop
push
les
cmp
stos
cmc
xchg
mov
or
cwtl
jmp
mov
jnp
sbb
mov
bnd
pop
lods
mov
mov
ljmp
jg
fdivrs
xchg
mov
jnp
dec
xor
cmovl
sysret
lods
cwtl
pop
aas
jnp
mov
inc
mov
pop
dec
lcall
sarb
mov
std
jno
arpl
enter
add
mov
xchg
insl
push
push
sub
int
cmp
mov
xchg
cmp
jp
inc
mov
inc
popa
mov
cli
push
push
mov
lret
stos
jb
aam
notb
enter
mov
test
cmp
stos
jbe
cmpsb
jmp
add
enter
into
popf
jp
or
out
inc
out
xchg
notl
cmp
sbb
popf
ss
pop
sbbb
out
out
js
idiv
outsl
jge
pop
movsl
orl
jge
mov
call
int3
sbb
incb
loop
outsl
add
mov
xor
xor
ret
mov
sub
mov
or
xchg
cli
pop
sub
push
push
mov
cltd
or
adc
rcll
repz
in
mov
lret
outsl
jae
and
add
out
out
pop
pusha
jns
pusha
out
ret
inc
cld
faddp
mov
sub
add
mov
xchg
sub
pop
sub
in
jmp
ljmp
ret
push
mov
fs
push
push
daa
inc
inc
push
add
out
out
or
pextrw
lods
movb
mov
xchg
je
push
js
cmc
shlb
pop
jbe
shrl
inc
js
push
stos
xor
ret
ja
fcoml
xor
cs
mov
fldcw
clc
insb
cmp
push
jmp
les
hlt
push
ret
and
mov
cmpsl
xchg
pop
mov
lea
in
push
neg
mov
mov
cltd
orl
in
dec
incl
dec
pop
lret
outsb
inc
out
xchg
xorl
xchg
push
js
sahf
mov
lods
sub
out
jg
pop
std
fnstenv
cltd
lahf
repz
lret
movsl
adc
aad
repz
cs
mov
jae
xchg
out
and
jmp
test
cmp
fcoms
and
or
mov
es
push
dec
insb
pop
scas
pusha
jo
imul
lods
sahf
or
in
jmp
sbb
es
loop
mov
mov
aaa
pop
pop
jo
das
and
cmpsl
push
loope
push
aam
xchg
sbb
sbbb
sbb
es
mov
call
call
aad
das
push
test
adc
imull
out
mov
sub
cs
mov
movsl
mov
mov
adc
pop
int3
lea
jmp
out
aaa
cmpsl
repz
mul
jge
ja
scas
cmp
adc
xor
or
scas
outsb
xor
lods
sbb
loopne
mov
or
sbb
test
jg
xchg
js
cmpsl
mov
lret
roll
cmp
js
jle
fildll
push
pop
cmpsl
sarl
mov
lea
andl
mov
jne
int
xor
outsl
sbb
lods
lods
stc
sub
mov
out
pop
or
dec
insl
mov
pop
and
pop
jecxz
imul
shrb
pop
rorl
imul
xor
dec
ljmp
rorl
pop
in
xor
int3
xchg
std
ljmp
in
inc
xchg
movsl
pop
dec
mov
xchg
lods
push
call
cltd
mov
and
in
mov
aam
mov
dec
mov
dec
movsb
xchg
scas
xchg
scas
xchg
out
cmpl
sub
push
ficoms
mov
jbe
and
fiadds
out
push
aad
insl
add
popf
sarl
dec
fstps
push
cwtl
ss
popf
cld
mov
lds
sti
es
ds
fsub
out
lret
shll
mov
outsb
cmc
fistl
jg
pop
push
push
mov
mov
mov
xchg
pop
arpl
pop
outsl
rclb
rcll
jge
add
pop
push
cld
test
xchg
aaa
jecxz
jg
and
add
mov
fwait
std
xor
pop
aas
hlt
aaa
sub
cmp
test
loopne
aam
gs
lds
stos
xlat
mov
not
pop
adc
int
sbb
enter
adc
mov
lcall
inc
stos
jge
or
fmuls
sbb
sbb
jo
scas
test
shll
icebp
and
add
and
fwait
cmc
out
mov
cmp
xchg
jns
sbb
dec
mov
cmp
add
and
ja
cmp
sub
cmp
mov
inc
popa
mov
mov
jnp
roll
push
lret
xchg
loopne
outsl
rcrb
add
lods
mov
arpl
stos
mov
sub
sbb
idiv
push
push
pusha
mov
cmp
cmc
xor
jp
call
cmp
sbb
push
lret
and
lcall
mov
mov
xchg
cltd
or
mov
fwait
loope
cmp
lods
mov
xchg
dec
ss
insl
push
mov
imul
jge
push
sahf
fcoms
push
mov
fldt
test
lret
adc
in
sub
nop
cmp
jmp
and
in
dec
adc
rcr
notb
icebp
cli
and
popa
loope
jb
lock
jnp
sbb
sbb
xor
inc
testl
sub
in
sub
jmp
and
popa
fldt
pushl
fistpll
cmpsb
jae
push
sar
cld
test
psadbw
int
seta
addb
inc
xchg
cs
xchg
scas
dec
sbb
into
or
sub
jno
xchg
stos
lea
sarb
shll
jns
fcompl
rcll
nop
dec
pusha
pop
sbb
aad
jg
std
pop
test
pop
loop
rolb
loope
stc
push
jl
dec
stc
xchg
jbe
ror
aaa
mov
leave
pop
mov
xor
sbb
lds
das
data16
mov
mov
aas
mov
das
adc
scas
mov
pop
or
adc
cwtl
jne
push
sti
dec
lods
cmc
sbb
push
pop
into
inc
mov
push
jns
add
push
jns
dec
roll
fsubrl
andl
jnp
stos
hlt
cwtl
mov
xor
or
clc
stc
mov
pop
into
in
in
rorl
outsb
cmpsl
out
outsl
mov
andl
push
lret
call
shlb
outsb
int3
pop
cmp
push
xchg
mov
fisttpl
or
adc
insl
sarb
jp
sub
aas
test
jmp
out
xor
pop
fsts
sub
mov
lcall
xchg
fldl
xor
shrb
mov
repnz
pop
inc
sub
and
notl
ljmp
into
movsl
aad
fsubrl
or
cli
xlat
int
cmp
mov
cmpsl
add
adc
cmpsl
lods
pushf
mov
fimuls
push
insb
jle
push
lret
hlt
shlb
jnp
js
aaa
cli
mov
dec
aad
sbb
js
dec
sbbb
stos
addr16
cli
mov
sbb
stc
cmp
xor
xchg
xchg
decl
adc
pop
addl
out
nop
jo
jg
push
pop
ffree
jge
bnd
test
ljmp
flds
cltd
sbb
pushf
and
loope
mov
cmp
xchg
in
les
mov
sub
mov
test
stc
hlt
or
sub
pusha
xchg
fmuls
ja
in
mov
or
pusha
push
fwait
mov
in
pusha
aam
addl
iret
jl
leave
out
mov
out
and
das
je
xor
pop
push
lret
out
imul
nop
mov
push
fs
fcoms
push
repz
ljmp
daa
push
or
or
adc
mov
sti
stos
fsub
scas
lcall
lock
mov
movl
es
lret
xlat
addb
sub
pop
fmulp
adcl
imul
xchg
xor
aam
mov
loopne
dec
adc
mov
mov
cmp
add
cmpsl
pushf
loope
popf
inc
sub
shrl
ret
ret
in
aaa
jno
arpl
sbb
mov
subb
mov
arpl
cmp
xchg
les
sbb
cmpsl
or
lea
jmp
movsb
xchg
cmpsb
outsl
cmp
mov
popf
scas
in
call
inc
push
dec
ss
mov
in
sub
andb
push
and
lret
mov
inc
push
in
icebp
cmpsl
cltd
cmp
mov
les
cld
data16
inc
imul
pop
or
jnp
cmc
int
icebp
mov
cmpsb
adc
les
mov
sti
int3
cltd
or
push
nop
push
add
add
insb
and
inc
pushf
mov
insb
or
lods
jp
mov
push
inc
test
sbb
sarl
or
jo
pop
jg
int3
pop
aaa
inc
adc
xchg
inc
jns
and
xchg
pop
bnd
imul
cwtl
div
pop
push
xlat
xchg
cs
inc
lret
sub
inc
pusha
jg
aam
jbe
mov
mov
shlb
repnz
add
xor
and
imul
pop
pop
lret
out
sbb
xor
and
arpl
lret
nop
ljmp
pop
jmp
testb
cli
inc
cs
dec
jl
jge
arpl
movb
cmpsl
out
bound
loop
pop
mov
adc
shl
mov
adc
push
out
shll
inc
adc
adc
loopne
pop
cmp
jp
sub
add
insl
sbbb
jo
or
repnz
and
movsb
es
push
sbb
sbb
sbb
mov
ret
lcall
pop
daa
jl
scas
aad
adc
mov
pushf
sub
mov
popf
push
insl
push
xchg
and
mov
aaa
test
inc
out
add
sbb
testl
mov
xchg
loope
xor
addr16
nop
into
fidivrl
xchg
in
xor
mov
sub
push
bound
sub
mov
push
in
in
aaa
imul
fildl
lea
mov
test
sbb
popf
and
jl
push
lahf
xchg
add
push
xor
push
inc
xlat
in
test
adc
inc
ret
xlat
sbb
cmp
jno
adc
xchg
imul
push
and
pop
or
xchg
es
push
jge
test
lea
lret
pop
sarl
enter
sbb
std
push
sub
hlt
xor
push
jmp
adc
add
call
add
out
mov
pop
xor
add
scas
jmp
jge
or
rcr
xorl
dec
movsl
inc
test
ss
sub
adc
pushf
mov
mov
popf
and
outsl
outsl
je
xor
fs
sub
popf
mov
imul
int
adc
pop
out
aam
adc
mov
call
mov
jae
in
and
push
jae
popa
xorb
adc
fwait
test
cs
add
sbb
adc
dec
pop
mov
xlat
adc
popf
pop
sub
movsl
pop
dec
test
mov
mov
mov
and
in
sbb
xchg
rolb
insb
test
jb
fldt
and
add
lahf
xor
cmp
xor
add
mov
mov
lret
fsts
or
push
lret
ret
imull
mov
push
cltd
or
sahf
movsl
sbb
out
ja
cwtl
inc
into
mov
jp
adc
lds
stos
jmp
lock
jb
inc
sub
mov
lahf
fisubl
add
out
fdivs
jnp
leave
aad
sub
sbb
scas
cmpsb
out
pop
cmc
cmc
mov
movw
stc
sbb
jge
test
insl
out
or
repnz
mov
inc
xor
fwait
mov
dec
aas
stc
sub
sub
xor
nopl
repnz
fdivs
ljmp
js
subps
mov
mov
outsl
mov
shl
xchg
push
adc
or
lock
lock
sbb
js
in
mov
inc
popf
into
dec
lret
adcl
fwait
inc
pop
les
jp
arpl
fwait
pop
jnp
and
les
repnz
lahf
xchg
mov
das
inc
ds
push
icebp
inc
addr16
shlb
and
lret
dec
mov
lods
xchg
movsl
jno
xor
jg
popa
gs
cmp
lods
insb
pop
inc
mov
lret
repnz
imul
aas
or
insl
imul
gs
cltd
jne
xchg
cltd
pop
fcmovb
push
ja
cld
mov
pop
and
and
adc
and
sti
dec
in
imul
jb
inc
fwait
mov
add
cmp
in
in
sti
sti
lods
pop
ljmp
mov
add
inc
add
pop
inc
outsb
lods
lds
xor
mov
inc
xchg
xchg
pop
cwtl
ss
xor
test
add
or
jb
insl
jle
lret
mov
in
test
jnp
ss
insb
xchg
mov
stos
sub
jle
js
int
rolb
data16
lahf
push
adc
jno
mov
movsb
dec
addl
push
mov
add
xchg
xchg
mov
sbb
ljmp
mov
xchg
jg
les
sbb
rorl
pop
stos
lock
je
test
scas
sub
pusha
pop
xchg
sub
leave
shll
addr16
enter
inc
pushf
cmp
ret
xchg
adc
inc
shlb
leave
add
bound
mov
mov
mov
mov
insb
lahf
and
ljmp
sub
loope
mov
icebp
xchg
add
rcll
cwtl
or
into
add
inc
rorl
or
js
fldl
mov
mov
mov
jbe
mov
inc
xchg
fwait
inc
jno
fnsetpm(287
push
dec
or
jecxz
adc
or
test
ljmp
mov
inc
rcll
and
les
ror
shrl
pushf
cmpsb
std
jae
and
mov
lods
mov
jge
icebp
xchg
push
inc
sub
ds
and
data16
lret
xor
ret
mov
sub
fidivrl
and
ret
adc
xchg
lods
aam
dec
enter
pop
enter
enter
dec
daa
dec
repnz
sub
mov
in
cmc
jae
dec
dec
leave
aas
or
jno
sub
push
pop
outsl
jo
xor
pop
dec
mov
ret
insl
xchg
inc
out
pop
mov
js
cmp
mov
movsl
clc
pop
and
jle,pt
sub
xor
jnp
sbb
add
cmp
stos
mov
fcmove
iret
xchg
inc
xor
sub
mov
push
adc
push
jecxz
adc
add
popa
daa
xchg
pop
ret
sbb
stc
mov
js
inc
jg
sahf
inc
jo
cmp
pop
mov
out
decb
mov
test
jo
push
js
pop
ja
ret
sbb
adc
push
movsb
shrl
jo
xor
mov
dec
xchg
sbb
pushf
and
lcall
loope
mov
into
mov
mov
outsl
add
lret
shld
test
mov
arpl
addr16
ljmp
movsb
add
scas
mov
in
stos
or
jg
sbb
adc
loop
xor
push
cmp
and
enter
dec
cmp
lret
add
mov
cwtl
addr16
mov
mov
mov
and
xchg
rcl
adc
push
mov
xor
sub
out
xchg
cltd
jg
arpl
test
push
in
push
scas
adc
imul
xlat
xchg
in
inc
mov
and
xchg
mov
add
add
testl
daa
cmp
xorb
sbb
push
aam
add
sbb
xor
leave
pop
adc
sbb
ret
push
xor
repz
outsl
je
push
mov
lods
push
push
xchg
adc
imul
jne
arpl
ret
leave
dec
jne
loopne
fs
enter
mov
loope
mov
push
or
cld
je
stc
out
ds
leave
sbb
leave
outsl
inc
sub
hlt
push
pop
inc
push
cmp
and
loopne,pn
in
pop
xor
adc
mov
outsb
into
xor
dec
call
mov
insb
sahf
ficomps
adc
mov
mov
std
and
lock
pusha
push
js
scas
sbb
or
ret
arpl
ret
jb
adc
mov
cmpsb
outsl
cmp
pop
add
or
loope
sti
lea
mov
aaa
int3
xchg
ja
rolb
mov
sti
push
hlt
sub
js
jno
xchg
pop
push
push
andb
push
rolb
dec
pop
imul
jge
dec
cmp
pop
mov
scas
arpl
test
pop
jno
and
enter
mov
mov
shrb
outsl
mov
ret
shlb
cmp
or
ss
xor
int
daa
inc
test
inc
clc
cltd
mov
stos
cltd
push
push
mov
dec
sbb
ss
das
in
nop
mov
adc
mov
cs
lods
leave
mov
xor
add
pop
daa
sub
std
negl
popa
lcall
call
out
iret
xchg
mov
aam
sub
scas
movsl
pusha
rcll
loop
sbb
and
xchg
repz
pop
sub
add
add
xor
mov
inc
cmp
cmp
jmp
mov
sub
int
arpl
or
xchg
sub
mov
push
test
pop
push
subps
xor
lcall
adc
ss
mov
dec
jbe
xchg
pop
or
and
fidivs
ds
fld
sub
incb
pop
pop
pop
nop
pushf
inc
popf
pop
lcall
test
pop
jp
sti
shrb
mov
bound
repz
inc
jge
int3
loopne
jnp
enter
ficompl
scas
push
dec
test
fs
mov
pop
push
dec
push
pusha
pop
or
stc
inc
add
stos
push
fisubrs
sbb
mov
in
inc
aaa
cli
jge
stos
rcr
mov
into
std
xor
push
xchg
paddb
stc
sbb
loope
outsb
push
cwtl
into
jae
pop
xchg
iret
in
dec
pop
add
cmpb
add
and
inc
insl
adc
sub
sahf
mov
dec
pop
enter
xchg
gs
add
test
nop
and
mov
push
in
lods
mov
andl
push
movsl
adc
test
mov
pop
jecxz
xchg
sub
cli
cli
xchg
push
ljmp
adc
sti
push
mov
pop
mov
sti
int
or
sbb
in
mov
out
fwait
scas
lds
push
sbb
add
dec
std
xchg
jge
sub
sub
ljmp
or
sub
xor
mov
add
add
and
mov
cmpb
jae
in
loope
pop
les
push
add
mov
addl
push
push
sbb
fidivrl
xchg
dec
xchg
inc
sbb
xchg
adc
inc
mov
xor
cmp
cmpsb
mov
mov
xchg
std
mov
jbe
mov
pop
clc
cmp
movl
dec
push
in
dec
iret
out
mov
jmp
cs
sbbl
adc
mov
jmp
and
adc
and
ja
loopne
sub
sub
cli
pop
stos
add
and
rclb
lea
dec
dec
imul
sub
cmpsl
xor
mov
in
adc
rclb
sbb
xor
push
arpl
fnstsw
jecxz
adc
sub
nop
mulb
pop
test
div
sub
bound
jo
cmp
push
pop
ret
mov
or
lods
call
mov
xchg
pop
cltd
or
cmp
xchg
mov
mov
jnp
fistps
in
cli
and
add
cwtl
mov
pop
mov
mov
outsb
lret
cmpsb
test
enter
nop
cld
adcb
stos
push
xor
cmp
mov
pop
repnz
sub
push
sub
js
jge
add
insl
inc
jns
arpl
xchg
test
ja
xor
fistpl
arpl
dec
and
push
xchg
cmpsb
pusha
sub
imul
or
mov
lods
xlat
ljmp
mov
mov
pop
jle
mov
or
dec
pop
popf
push
loope
test
cld
push
jnp
das
jg
push
sti
mov
pop
and
mov
fistpll
fsubs
repz
insb
test
and
in
int3
in
test
jb,pn
leave
mov
sub
js
outsl
lods
push
jno
or
push
pop
into
inc
shrl
jle
sub
xchg
jmp
arpl
mov
cmc
cmpsl
sub
rorl
ja
sub
mov
mov
in
mov
pushf
std
pop
xchg
sub
pusha
pop
adc
sub
jecxz
roll
lea
mov
push
aam
in
icebp
push
je
rcll
jg
sbb
ds
mov
push
mov
and
bound
ss
stos
jb
add
lock
popf
std
ljmp
and
mov
in
stc
outsb
or
lea
xchg
clc
pop
cmp
push
fstpt
or
push
fsubrs
in
add
lock
adc
int
pop
adc
ja
nop
call
cmc
mov
out
movsb
dec
aam
notb
adc
jno
pop
adc
aas
fsub
repnz
jg
inc
stos
mov
add
cmp
and
js
xor
je
sbb
mov
cmc
pop
jno
stos
add
inc
movsb
sub
pop
arpl
insb
out
fcomps
or
iret
xor
sub
fmul
xchg
aad
jo
sub
pop
xor
lea
test
sarl
xchg
cmp
cmpsb
adc
je
adc
mov
mov
in
jmp
loop
loopne
mov
inc
pop
cli
or
leave
pop
pop
mov
jle
fs
ss
ja
dec
push
xor
iret
mov
inc
xor
inc
sub
out
test
push
adc
or
dec
cmp
inc
push
pop
mov
popf
movsb
mov
add
jp
movsl
out
scas
lds
repz
and
in
jnp
rorl
pop
push
lods
and
dec
mov
iret
push
daa
xchg
jle
push
mov
or
add
into
push
mov
mov
sub
js
push
pop
push
xchg
xor
push
sbb
inc
sti
push
popa
lds
ljmp
je
fsts
lods
cmp
push
mov
fsubrl
out
orl
cmpsb
jecxz
fbstp
pop
push
mov
push
daa
popa
into
cmp
push
out
lock
pop
pop
sbb
out
mov
xchg
int
add
xchg
adc
pop
imul
repz
sbb
or
inc
mov
dec
nopl
punpckhdq
rcll
test
or
mov
std
dec
pop
adc
pushf
xor
repnz
fcomp
subl
dec
inc
mov
fcomps
dec
insl
test
loopne
mov
imulb
pop
loopne
push
imul
imul
mov
sti
add
inc
test
mov
jmp
int
mov
ret
lods
das
adc
in
mov
jae
gs
xor
inc
jge
fdivs
scas
mov
inc
insb
inc
xchg
push
in
push
pop
mov
test
xlat
jnp
mov
add
and
mov
neg
movsl
stos
dec
or
ds
sub
aaa
in
cli
daa
mov
jg
jmp
jl
insl
push
popf
cmc
add
and
outsl
cmc
cmp
movsl
mov
lea
mov
mov
adc
dec
inc
ret
mov
stos
lds
cli
cmp
or
les
aam
gs
mov
adc
inc
ds
imul
testb
push
or
mov
ja
pop
or
cs
outsb
aas
or
outsl
xchg
and
dec
cmp
xlat
adc
mov
sbb
and
jmp
sbb
mov
iret
lret
xchg
in
shlb
push
cmp
mov
or
jle
add
movsb
jmp
sbb
dec
push
mov
icebp
xorb
pop
xchg
mov
aas
rsqrtps
hlt
pop
lea
insb
sub
jg
call
sbb
movsb
arpl
or
jle
pop
mov
inc
sub
shl
pop
into
adc
mov
repz
aas
add
mov
lock
fdivl
cmp
dec
outsb
scas
mov
sbb
pusha
jns
das
push
lea
pop
popa
or
call
popl
je
dec
dec
sub
mov
ret
imull
fwait
lock
sub
loop
loop
popa
repz
xchg
fprem1
cmc
loop
movsb
test
cmp
insl
and
cld
cmp
faddp
and
mulb
lea
popa
rcll
inc
and
shlb
lods
int3
sahf
and
mov
insb
ret
stc
int3
inc
pop
jb
xchg
scas
push
cwtl
fcoms
sbb
and
and
jl
int3
std
xchg
xorl
fidivl
lds
jmp
and
add
mov
popf
cmp
gs
mov
sbb
xor
lahf
xor
mov
in
or
adc
fadd
mov
inc
cmp
fsts
ljmp
jbe
mov
jl
shrb
sbb
add
ds
pop
dec
push
lret
shlb
dec
aaa
push
dec
mov
mov
icebp
jmp
sahf
dec
pop
cvtdq2ps
push
fisttps
arpl
ret
ret
xor
stc
mov
inc
iret
mov
test
and
jns
mov
lods
cmpsb
sbb
mov
ret
sub
cli
out
push
xor
popa
test
bound
imul
repnz
lcall
push
mov
mov
add
movsl
inc
inc
mov
push
adc
jle
js
pop
andb
in
pop
or
lahf
mov
mov
ficoml
sti
stos
fidivs
lds
mov
sahf
xchg
jle
lahf
lret
add
push
int
jl
and
cmpsb
and
jle
idivb
or
icebp
push
test
ret
cmpb
hlt
or
mov
mov
mov
mov
cltd
mov
pop
adcb
cld
add
cmpsl
jle
sub
sbb
int
jle
mov
mov
loope
add
hlt
inc
inc
scas
adc
cmpb
sbb
out
pop
inc
push
xlat
xor
cmp
js
test
mov
cmpl
dec
mov
mov
lock
test
jae
fnstenv
mov
je,pt
pop
mov
pop
pop
push
add
cmp
dec
fst
sbb
rcrl
jmp
outsb
fwait
gs
fwait
cmpsb
stc
in
and
xor
adc
sbb
inc
adc
sti
lds
pop
ds
lahf
cmp
cli
jge
std
sbb
sti
mov
xchg
jnp
out
fstl
hlt
pop
sub
inc
fst
jecxz
adc
shrd
fildl
mov
dec
mov
out
sahf
andb
push
aas
cli
sbb
movzwl
xor
mov
pop
cwtl
dec
repnz
push
ret
test
mov
push
int3
mov
fisttpll
sbb
pop
sub
test
xor
dec
push
inc
test
and
mov
sub
add
inc
pop
daa
jg
mov
mov
or
pop
sub
jmp
lods
jge
push
mov
and
adc
inc
sub
jmp
push
cmpsb
jg
mov
scas
xor
in
mov
pusha
shlb
pusha
gs
ret
pusha
das
xor
cmp
xchg
rorl
fsubrs
cmp
xor
in
addb
dec
push
stos
mov
jae
sbb
or
pop
addr16
push
nop
loope
rcrl
pop
push
jb
arpl
mov
mov
adc
push
sbb
fsts
mov
jge
addr16
sub
ror
jl
cmp
inc
out
sub
cli
fnsave
lods
sbb
sub
mov
shl
mov
mov
xchg
mov
xor
mov
adc
push
mov
dec
mov
push
pop
es
xchg
mov
mov
jmp
sub
popa
xchg
dec
int3
pop
or
push
cld
mov
mov
lods
shrb
xchg
pop
data16
jb
fidivrl
in
gs
mov
add
outsl
dec
ljmp
lcall
adc
cmp
xlat
pop
dec
pushf
mov
je
xor
dec
sub
mov
jp
movsb
mov
jmp
dec
je
push
dec
mov
out
call
pop
fcomi
divb
sbb
dec
int
fwait
sub
pop
frstor
push
or
pop
imul
lcall
or
test
and
adc
mov
inc
mov
jl
filds
xor
and
loop
loope
call
inc
xor
aad
int3
inc
cmp
add
and
fcoms
loopne
mov
int3
movsb
imul
cmc
jle
pop
inc
lea
loopne
daa
adc
fldenv
int
ja
andb
add
jmp
clc
add
daa
inc
adc
sbb
ss
fmull
jns
mov
pop
adc
adc
mov
xchg
jbe
cwtl
jecxz
dec
test
jge
cmp
repnz
mov
ret
mov
arpl
rol
xchg
push
addr16
jle
mov
aad
scas
jp
sub
lods
aas
ds
or
leave
out
pushf
jmp
dec
mov
jnp
or
dec
push
stc
cmp
cmc
or
jb
pop
iret
xor
xchg
insb
loope
shl
out
ficoml
xlat
dec
out
jae
cmc
outsb
push
nop
iret
mov
cltd
xchg
lahf
and
jmp
rorl
cli
mov
push
int3
aad
pop
xchg
rcl
aas
xchg
mov
dec
jae
or
addr16
sub
call
dec
repnz
loope
and
cltd
js
inc
ja
pop
dec
push
sub
add
jl
lret
pop
ret
push
cmp
fisubrs
jae
dec
mov
js
or
or
mov
mov
push
pop
test
repz
dec
daa
mov
push
dec
xchg
and
jb
lret
aad
jecxz
adc
aaa
stos
fldenv
pusha
es
stos
nop
ret
scas
mov
inc
push
sub
push
ret
jg
xor
push
sbb
repz
inc
inc
fisubl
gs
scas
shrl
push
mov
gs
aaa
or
loope
aad
cs
fst
pop
push
fs
es
movsb
push
je
jo
shrb
in
in
sbb
jns
inc
gs
ret
xlat
fnstenv
jnp
addb
mov
lds
xlat
xorb
add
dec
jmp
pop
sbbl
cmp
lcall
dec
inc
xchg
dec
or
inc
loop
dec
xchg
aas
pop
xor
inc
mov
mov
jne
in
xchg
std
mov
cmp
pop
jnp
fwait
and
loopne
lret
in
leave
mov
mov
lds
pop
das
xor
mov
jbe
scas
xor
pop
xchg
mov
cmpsb
out
jb
lods
adc
loope
imul
mov
jo
inc
and
mov
lea
lock
dec
subb
push
out
jo
jae
jae
inc
adc
pusha
lcall
fdivl
cmpl
pop
sbb
aaa
sbb
xchg
mov
in
pop
sbb
es
and
fcmovnu
dec
nop
sbb
in
jmp
push
repz
xor
pusha
push
aaa
in
push
and
pop
sahf
js
jle
or
notl
mov
push
sarb
out
movsl
cmp
call
add
xchg
mov
pop
inc
adc
fwait
add
cmp
pusha
fstps
cmp
sub
jge
test
test
in
pop
push
repz
dec
mov
xor
stos
push
shlb
mov
test
add
cmp
mov
fisubrs
pop
lods
into
data16
fimull
out
push
mov
xorl
test
enter
daa
mov
push
and
adc
jg
lret
jg
pop
or
adc
or
clc
movsl
cmp
fwait
aad
xchg
add
adc
adc
das
pop
loopne
fcmovne
in
push
sub
daa
lret
inc
std
mov
nop
and
add
pop
mov
adc
bound
cmp
mov
or
xchg
pop
mov
lock
pop
or
int3
mov
mov
jns
xchg
ret
fldcw
cmpsl
popa
mov
fbld
fs
clc
add
sbb
mov
fwait
adc
or
pop
xchg
pop
add
int3
out
je
inc
push
jge
pop
mov
dec
ror
cmp
xor
sbb
idiv
or
sahf
push
push
xchg
inc
rolb
and
pop
enter
divb
rcl
addr16
scas
insb
push
mov
xchg
imul
push
pop
stc
int
xchg
mov
mov
push
xor
addb
aad
mov
ja
adc
inc
xor
xchg
jg
lret
xchg
cmp
inc
in
or
ja
dec
sahf
sbb
cmp
test
jbe
fcmovbe
sub
fcomp
and
fistps
xor
and
xlat
cmp
adc
ds
sbb
loop
pop
mov
repnz
mov
xchg
mov
icebp
pop
add
idivl
int3
or
call
cmp
lret
rclb
addb
rcrl
fnsave
cli
xor
jnp
cmpsl
pusha
add
xchg
jne
cmpsl
sub
sahf
sub
adc
arpl
mov
dec
add
or
adcl
icebp
lods
push
dec
mov
push
adc
popa
scas
cmpsb
inc
roll
fyl2xp1
xchg
push
and
mov
add
icebp
pop
cs
dec
test
mov
xchg
mov
mov
push
shl
inc
xchg
adc
scas
sub
inc
mov
out
jge
mov
mov
sub
xor
adc
lcall
pop
push
loop
pop
fsts
aad
xchg
and
popa
xchg
sahf
lods
mov
mov
mov
inc
mov
pop
shlb
leave
xchg
sub
pop
sub
insb
hlt
cmp
or
inc
ss
js
xor
scas
sub
cwtl
jno
lea
sub
pop
pop
popf
aam
push
cltd
and
sub
lods
lret
in
popf
xor
lahf
cwtl
jmp
push
test
cmp
or
dec
push
pop
movsl
or
xor
repnz
es
push
push
push
pop
lahf
sti
lock
sub
inc
pop
iret
enter
sbb
adc
out
and
inc
fisttpl
test
and
stos
or
ret
inc
idivb
xor
subb
mov
outsl
out
xchg
mov
dec
stc
sub
inc
inc
stos
or
shr
jmp
andb
lods
and
fdivl
lods
adc
mov
mov
fstpt
or
cld
adc
addr16
shrb
mov
movb
xchg
lods
adc
dec
xlat
rclb
std
push
xchg
push
pusha
xchg
addr16
pop
outsl
sbb
sub
jle
dec
push
sbb
jl
push
xor
adc
cmc
and
ss
mov
rorl
movsl
fstpl
andl
daa
and
gs
lds
out
add
adc
sub
push
add
rcrb
pmulhw
mov
sub
mov
fldcw
popa
dec
and
mov
jno
ret
dec
popa
in
cld
rclb
jle
push
sub
jo
or
sahf
in
nop
xchg
dec
loope
inc
fcomps
dec
loope
mov
pop
xchg
loope
call
scas
outsb
dec
cld
and
mov
inc
out
pop
les
movsl
ja
cmp
fs
lods
or
sub
sub
leave
in
mov
jp
cmpsb
mov
push
xor
add
fs
sub
inc
inc
mov
add
arpl
movsb
insb
and
push
jo
test
ljmp
push
ret
push
mov
pusha
cmp
dec
test
push
push
lcall
or
imull
and
mov
push
ficoms
add
dec
aad
jp
add
enter
sub
cmp
inc
mov
xor
cs
jne
stc
xchg
sbb
sahf
mov
jo
lahf
in
ja
and
jg
lahf
jp
cwtl
push
mov
decl
jno
cld
xchg
call
sbb
lcall
add
cmp
inc
mov
call
vphaddubd
andl
push
aaa
pusha
xchg
cmc
adc
push
fwait
inc
sub
cmp
ret
inc
adc
movsl
flds
xchg
mov
add
movsb
mov
cs
mov
outsb
adc
jmp
xor
sbb
repz
aam
adc
jne
cld
sbb
scas
push
adc
pop
cs
lret
mov
aas
lret
lds
cmpsb
int3
sub
lret
aad
inc
cmc
stos
push
pcmpeqd
sbb
dec
push
mov
les
adc
jnp
out
sbb
leave
mov
adcb
popa
ss
mov
in
sub
xor
add
insl
dec
or
cmp
cmpsb
add
cld
stos
cmpsl
loopne
jge
xchg
xchg
cmp
mov
outsb
lods
dec
mov
mov
pop
mov
ljmp
push
arpl
pop
add
inc
outsl
push
popf
jge
xchg
fisttps
jo
mov
jb
sbb
insl
stos
and
fdivs
push
jno
push
xchg
cmp
jge
inc
inc
fldlg2
cmpsl
xor
and
push
or
mov
outsl
lods
daa
out
daa
push
mov
sub
adc
icebp
fs
cwtl
add
scas
cwtl
fcoms
cs
pop
js
xorl
rcrl
and
cmc
jne
jne
xor
jle
imul
into
outsb
das
pop
pop
or
jnp
pop
mov
dec
shr
pop
std
clc
in
xchg
imul
lret
je
adc
mov
pop
call
int
repnz
lahf
dec
mov
add
jmp
cli
and
pop
loope
leave
loop
pop
or
mov
out
cmp
mov
out
xor
shll
or
inc
mov
mov
ret
outsl
inc
mov
lcall
push
dec
stos
pop
out
iret
imulb
dec
pop
adc
xor
pop
fs
pop
inc
stos
mov
adc
test
cs
les
adc
xor
cmp
fcmovu
aaa
sub
add
repnz
adc
dec
jl
sub
js
leave
popa
jmp
hlt
push
mov
dec
sbb
mov
dec
enter
dec
add
adc
lea
and
xor
pop
or
out
jo
mov
mov
idiv
pop
pushf
sub
hlt
bound
rcll
lret
and
clc
sub
in
or
or
int
dec
sarb
and
jg
sub
add
movsl
pop
mov
in
dec
fcmove
or
lods
xchg
pop
clc
mov
mov
xor
ljmp
add
das
les
xchg
cmc
aad
jae
and
push
push
aam
mov
cmpsl
push
shlb
cmpsb
dec
rep
pop
xchg
xor
push
dec
sbb
cmp
bound
leave
xchg
repnz
lods
in
mov
leave
push
jp
and
push
pusha
call
cmp
lret
cmp
cmp
add
sahf
cmp
call
mov
and
lcall
sarl
adcb
mov
pop
stos
inc
data16
sahf
in
dec
cld
xchg
int
loop
dec
leave
rolb
sahf
xor
cmpsb
jae
aaa
inc
inc
inc
inc
push
out
push
sti
inc
xchg
stc
lea
xor
and
push
jbe
push
cmc
iret
mov
nop
movsb
jp
cmp
cmp
loopne
adc
shll
test
fsubrs
cmp
fnstcw
add
shrb
loopne
sbb
and
lahf
and
mov
xor
into
outsl
imul
lods
out
mov
or
idivb
jnp
mov
into
std
push
sbb
scas
ss
cwtl
mov
and
or
fs
into
adc
pop
insb
dec
sub
mov
dec
jbe
fmuls
inc
sbb
mov
or
mov
and
sbb
jo
xchg
mov
div
hlt
pop
stc
lock
inc
test
stos
inc
movsl
adc
xlat
mov
mov
pusha
outsb
pop
pop
bound
and
lods
xor
sbb
bound
pusha
add
adc
adc
dec
xor
sub
mov
sbb
je
jg
dec
enter
decl
fstpl
dec
mov
push
mov
test
lock
mov
sub
add
shll
bound
sbb
xor
loopne
add
fisubl
jle
cwtl
outsb
jae
pop
aam
jp
rolb
roll
xchg
xchg
mov
adc
jb
out
dec
pop
dec
sbb
inc
dec
ds
and
repnz
jno
jg
movsb
inc
mov
ja
imul
mov
mov
xlat
ss
aam
out
jmp
add
push
out
clc
lret
sub
jge
and
fsubp
popf
sub
mov
adc
jae
fisubs
lret
enter
and
adc
mov
pop
lea
rclb
xlat
or
stos
iret
pop
jne
jmp
out
ljmp
lds
lret
mov
jno
ss
popf
sarb
ljmp
sub
lds
mov
cmpsb
add
imul
pop
mov
add
xchg
movsl
xor
dec
dec
inc
dec
dec
popf
cmp
pop
out
jb
jns
pop
fwait
xchg
outsb
adc
out
mov
mov
out
mov
hlt
movsb
dec
rorl
add
repnz
ljmp
pop
adc
push
int3
push
int3
fs
or
insl
add
xor
mov
ljmp
addr16
sub
mov
subb
lret
inc
and
sub
outsb
or
sbb
fcoms
sub
mov
js
cmpsb
xchg
inc
lahf
pop
int3
arpl
mov
ret
sbb
je
pop
inc
pop
push
mov
frstor
or
jg
xchg
push
addr16
sahf
cwtl
add
inc
inc
aaa
lret
pop
and
pop
and
pushf
sub
pushf
pushf
in
cmpsl
adc
das
das
sbb
cmpsb
inc
shrl
jns
dec
and
pushf
pcmpgtw
pop
mov
aas
fstps
mov
sbb
xchg
rclb
fbld
or
insl
rorl
es
cwtl
negb
sti
push
cmpsb
mov
mov
repnz
sbb
jmp
mov
push
lcall
and
mov
ss
push
jmp
pushf
aas
cmp
lret
push
out
pop
lea
add
icebp
cs
or
mov
adc
and
rcrb
or
lahf
nop
cmp
or
lods
inc
cmp
inc
mov
xchg
mov
push
sbb
pop
pop
loope
push
dec
mov
leave
ss
testb
add
mov
mov
xor
xor
cmp
int3
inc
arpl
lcall
mov
sti
mov
and
and
add
leave
dec
sbb
mov
dec
xor
in
cmp
push
rolb
pop
stc
in
push
stc
outsb
push
test
pop
loopne
sbb
adc
call
je
push
decl
push
lods
xchg
negb
mov
fstps
nop
xchg
add
xor
out
inc
sub
scas
movsl
xchg
in
out
nop
imul
repnz
stos
or
iret
fnstcw
jp
std
mov
and
test
push
mov
cltd
test
xchg
pop
aas
das
mov
xchg
dec
subl
cld
sub
jne
adc
sub
dec
mov
sub
es
sub
fwait
dec
imul
shlb
pop
mov
sub
pop
sub
sahf
arpl
data16
cmp
dec
pop
data16
loopne
jae
adc
test
mov
and
sbb
xor
mov
jns
das
mov
xor
aad
in
mov
jle
jmp
lods
xchg
push
nop
ret
jbe
xchg
adc
inc
in
and
cmp
test
pop
loop
or
divb
and
repnz
cltd
test
ljmp
mov
cmp
pushf
inc
adc
xchg
mov
aas
mov
insb
or
shlb
pop
mov
and
cmpb
movsb
fwait
popf
hlt
push
idivb
sbb
inc
add
adc
jae
fsts
xchg
int
and
push
xor
mov
and
adc
test
enter
adc
lret
scas
xchg
jnp
pop
inc
jnp
cmpsl
jno
pop
repz
dec
insb
sub
cmp
cmp
xor
mov
pop
test
xchg
lods
jge
add
lret
fwait
jmp
nop
icebp
push
or
mov
lahf
js
jecxz
lock
xchg
dec
xor
sbb
cltd
jmp
inc
cltd
in
or
out
scas
mov
mov
imul
idiv
add
push
add
aam
sub
cmp
out
inc
repz
inc
jae
mov
push
jbe
xchg
cli
enter
cmpl
xchg
fmuls
inc
jmp
hlt
int
or
call
cld
scas
repnz
clc
pop
sar
movsb
daa
push
xor
movsb
xor
cmp
rolb
sbb
jmp
cmp
and
fistps
xchg
jle
sarb
mov
rolb
xchg
mov
subl
pop
and
leave
adc
mov
sbb
cmpsb
push
fxch
sbb
testl
xor
outsl
aaa
xchg
adc
jae
mov
out
sbb
jp
dec
bound
sub
adc
mov
xchg
push
je
pause
mov
sub
or
fs
ja
cmp
pop
inc
mov
jle
jge
leave
dec
icebp
push
fisubrs
sbb
dec
xor
lock
xor
push
aas
sbb
jle
cmp
push
hlt
cmp
ss
jae
int3
mov
daa
cli
test
pop
pop
jge
ja
jmp
sub
shl
adc
mov
mov
test
pop
out
ja
jno
pop
es
lds
and
test
xor
mov
mov
cmp
xchg
pop
sbb
rol
iret
mov
das
jecxz
push
or
mov
cmp
pop
sahf
mov
mov
fxch
push
ds
inc
les
sbbb
int
push
popa
test
outsb
xor
and
ret
movsl
fbld
leave
sbb
mov
rorb
and
push
loope
mov
cmpl
or
and
push
mov
lret
enter
push
out
icebp
push
pop
incl
xorb
or
orb
mov
lds
push
xchg
pop
mov
cmpb
das
jge
xchg
sub
loop
lcall
repnz
and
and
stos
inc
xchg
adc
xchg
mov
pop
xchg
cmpsb
nop
xchg
add
dec
xchg
lea
data16
roll
mov
movsl
jle
pop
mov
cmp
xor
mov
stos
add
add
push
mov
xchg
rorl
inc
cmp
aas
sbbl
call
sub
xchg
adc
icebp
and
or
or
adc
mov
cmpsl
icebp
mov
f2xm1
inc
mov
ljmp
out
dec
jge
fwait
xor
test
sbb
cmp
or
std
stos
das
mov
roll
sub
push
inc
mov
push
pop
popa
push
mov
jns
xchg
fs
sub
mov
pop
int
lea
cld
scas
sarl
ja
mov
mov
jg
mov
inc
inc
sub
mov
dec
imul
xchg
popa
js
daa
jl
pop
mov
add
mov
xchg
mov
lods
or
jno
mov
jg
sahf
pop
call
lcall
add
rclb
mov
inc
sbb
xlat
xor
test
fstpt
sub
jnp
push
or
dec
or
out
pop
das
imul
xor
fs
jnp
push
lahf
or
jmp
xchg
add
dec
mov
mov
addr16
cli
movsb
in
loopne
xlat
sbb
scas
mov
dec
and
test
push
aad
mov
out
mov
jbe
inc
adc
pusha
out
je
push
sub
xor
std
mov
aas
jg
lcall
xchg
stc
insl
push
dec
scas
out
test
loop
bound
dec
jo
and
push
fcompl
sub
adc
jl
leave
lods
and
sub
popf
xchg
xchg
push
imul
add
out
jns
and
insl
lahf
fbld
or
rcll
push
shl
jno
xor
lea
icebp
call
sbb
jo
decb
jg
xchg
or
aad
mov
or
movsb
shrl
stos
and
jne
test
nop
cwtl
adc
outsb
xchg
rorl
xchg
es
stos
in
cmpsl
lret
int3
mov
xor
cmc
xor
out
inc
stos
mov
adc
dec
mov
push
js
push
das
stos
jecxz
js
daa
imul
ljmp
lock
dec
sbb
lock
ficoml
outsb
sub
mov
lcall
xor
shll
mov
or
add
imul
into
cmc
jg
sub
cmpsl
fisubrs
pusha
xchg
lock
adc
jle
jecxz
xor
nop
inc
push
lret
dec
lahf
ja
jp
mov
xor
shll
das
jl
pop
mov
or
dec
adc
std
cwtl
mov
addl
imul
mov
add
test
or
push
dec
add
test
push
xchg
nop
stc
push
push
fbstp
pop
and
ret
xchg
psubb
hlt
call
hlt
cmp
jns
add
lock
and
or
and
fdivl
ret
addr16
out
push
insb
inc
adcl
iret
fnsave
clc
outsl
mull
jne
pop
pop
mov
mov
out
push
pop
xchg
insl
icebp
pop
mov
stos
in
sarb
push
fucom
and
inc
fs
rclb
int3
inc
lret
inc
or
movsl
sub
dec
scas
hlt
inc
sbb
cltd
inc
xlat
cwtl
adc
imul
icebp
out
imul
adc
bound
and
fucomip
mov
jl
push
dec
imul
out
stos
cmc
bound
mov
pop
addr16
mov
dec
sbb
adc
andl
dec
pop
pushf
or
cmpsb
dec
push
icebp
mov
ljmp
push
fwait
lock
jecxz
sub
mov
popf
and
cmpb
inc
rorl
xchg
mov
mov
out
lea
mov
pop
mov
gs
jle
lret
mov
test
add
pop
rcrl
mov
jno
pop
pop
lods
ss
test
sub
dec
push
or
push
xchg
notl
inc
or
adc
add
int
negl
negl
dec
cmp
je
out
popf
pop
arpl
imul
sarl
mov
mov
sar
test
xor
fnstcw
mov
clc
arpl
mov
scas
push
rcrl
jne
or
in
call
dec
mov
push
stos
arpl
jmp
lods
jns
pop
xchg
outsl
mov
ss
jle
gs
mov
xlat
addr16
sub
call
int
sub
nop
mov
mov
clc
dec
sarb
xor
pop
cmpsl
fcmovbe
jnp
xchg
xchg
xchg
cmp
pop
pop
xchg
mov
push
movsb
xor
mov
gs
lret
push
mov
adc
jns
lods
paddd
test
ret
sub
ljmp
cmovnp
jge
mov
ja
dec
xchg
or
test
inc
jno
in
rclb
mov
dec
inc
pop
pop
flds
clc
shrb
add
pop
loop
scas
pop
dec
mov
dec
int3
int3
mov
cli
push
inc
rcrl
popf
push
mov
mov
movsb
dec
rorb
scas
sbb
add
dec
fstpt
or
or
push
pushf
pop
jl
fdivl
ret
xchg
ja
pop
and
xor
clc
jns
push
mov
into
das
call
mov
lods
out
sub
aas
push
jns
dec
cmpsl
lcall
adc
jb
js,pn
sbb
les
xor
xchg
xchg
jae
mov
jmp
mov
or
enter
add
sub
popf
std
and
aaa
adc
mov
dec
dec
sbb
inc
pop
or
sbb
or
in
sti
cmc
xor
aam
mov
fldt
dec
test
jecxz
sti
das
call
and
xorb
pop
and
or
or
ljmp
mov
pop
test
mov
lret
ret
popf
mov
push
das
dec
daa
sbb
out
or
xchg
stos
xchg
sbb
iret
sarb
js
loop
ss
sub
mov
mov
lahf
fwait
inc
sub
mov
mov
inc
jp
mov
lods
xchg
cmp
sub
andb
rorl
adc
cwtl
xor
out
xor
jp
pop
sti
add
mov
cmp
pop
std
enter
lea
test
push
adc
dec
aas
add
pop
pop
test
out
stc
inc
mov
repz
out
xor
xlat
addr16
sub
popf
xor
mov
add
bound
inc
add
out
aam
xor
out
fucomip
std
mov
adc
mov
mov
sbb
das
je
jae
pop
dec
jp
xchg
std
sub
dec
or
ja
addr16
inc
popf
xchg
mov
xchg
xorl
adc
xchg
mov
mov
xchg
inc
or
fsubl
lahf
test
ljmp
fs
lahf
push
and
inc
lret
and
inc
inc
or
fs
data16
enter
and
test
pusha
fs
dec
mov
cmc
gs
hlt
jb
mov
cwtl
inc
sub
test
mov
lock
sbb
sbb
mov
jnp
xchg
je
xchg
aad
inc
sub
xor
clc
gs
sbb
in
and
outsb
pop
or
and
sub
push
aas
lods
js
aaa
inc
cld
repz
mov
sbb
jg
aad
out
sbb
mov
adc
cmpsl
cmpsb
data16
into
mov
pop
mov
dec
loopne
xchg
jl
fldenv
jne
or
mov
mov
jo
repnz
mov
arpl
pushw
in
adc
mov
mov
xchg
outsl
clc
push
pop
fnsave
ret
lret
clc
mov
js
pop
aam
cli
ss
inc
into
xchg
xchg
cs
push
add
mov
mov
andb
sbb
hlt
mov
jae
int
hlt
xlat
pop
jne
xor
stos
inc
mov
pusha
mov
es
std
xchg
dec
jbe
lahf
je
daa
or
add
push
inc
cmp
jl
or
outsl
mov
push
stc
int3
push
lock
adc
and
jecxz
sub
in
sti
mov
lret
pusha
sahf
enter
push
jmp
out
push
and
int
sbb
mov
pop
mov
jmp
mov
lret
cmpsl
dec
int
pushf
rcr
fwait
movsb
cli
sbb
dec
xchg
mov
inc
test
cli
mov
loope
out
cwtl
lret
dec
scas
push
xchg
and
sub
mov
aas
outsb
inc
adc
add
sub
cmp
dec
imul
sub
les
je
pop
subb
add
jb
mov
xchg
outsb
outsl
rcl
pop
pop
sbb
inc
jle
and
push
in
test
pusha
and
mov
aas
js
xchg
pushf
jg
cmp
pop
mov
jo
insl
addr16
dec
sti
cmp
cmc
mov
jbe
ffree
ljmp
mov
nop
int
pop
fcmove
xorb
out
add
repz
test
mov
insl
mov
in
inc
jnp
lahf
rcrb
add
divl
push
dec
cmp
arpl
outsl
and
insl
pop
lcall
jle
mov
pop
pop
ss
ja
pop
das
and
cwtl
inc
jmp
cmp
lods
lods
outsb
cmc
sahf
icebp
lret
arpl
mov
mov
imul
cmp
xlat
adc
adc
dec
pop
xchg
repnz
stc
mov
cmp
lcall
clc
popf
inc
add
inc
add
cmc
push
and
xorb
cmp
mov
mov
orl
adc
loopne
push
aam
ja
loope
inc
xchg
addb
cmc
mov
cmp
fadds
add
inc
lods
cltd
daa
sub
adc
inc
mov
cwtl
les
clc
push
xor
in
pop
sarb
push
jle
mov
sahf
in
cmp
sbb
mov
test
jl
dec
xor
lods
shlb
and
shl
subb
jo
cmp
mov
jb
mov
mov
sbb
dec
lds
stc
fbstp
aaa
cmp
inc
shl
mov
test
mov
ret
daa
sahf
lds
pusha
pop
aas
adc
add
rol
scas
hlt
mov
jle
lret
mov
outsb
in
add
xchg
push
mov
xchg
imul
push
mov
repnz
mov
shlb
daa
add
lds
popf
or
xor
mov
pop
mov
xchg
sbb
mov
cli
fwait
adcb
sub
push
sti
cwtl
je
cli
insb
imull
ret
aad
pop
das
imul
fs
sbb
add
dec
ss
repnz
lret
and
call
les
mov
mov
jo
xchg
cwtl
and
dec
inc
dec
das
or
push
mov
dec
mov
pop
in
and
mov
push
repz
imul
daa
loopne
mov
mov
sti
or
loop
sbb
lock
sub
mov
jnp
out
inc
mov
inc
movl
lahf
test
rclb
stos
and
dec
cmc
jmp
popf
jl
shll
jbe
jno
popf
aas
cs
imulb
xlat
int3
out
rorl
in
std
xlat
insb
push
cwtl
test
aas
lahf
pop
cs
dec
adc
cmp
ss
jno
leave
popa
cmp
int3
mov
ror
sub
jns
addl
fldt
xor
push
mov
adc
xchg
pop
in
outsb
push
xor
mov
push
cmp
std
mov
roll
movsl
icebp
loope
sbb
outsb
mov
pop
and
sbb
ret
nop
mov
or
sahf
dec
loopne
dec
ret
je
jbe
sbb
jg
cltd
push
dec
xchg
dec
adc
aaa
jnp
mov
les
or
jo
fcoml
push
fstpl
faddl
int3
fistps
cwtl
loopne
lock
movsb
test
inc
sbb
jae
pop
add
aaa
push
fadds
cvttps2pi
sahf
hlt
mov
repnz
outsl
sbb
int3
jnp
test
jne
mov
je
fidivl
jne
or
stos
inc
mov
and
push
stos
pushf
sub
pop
lds
mov
cli
xor
sub
jle
orb
adc
scas
mov
mov
into
xor
jb
push
push
repz
subl
sbb
mov
aad
jo
jnp
mov
mov
mov
sub
int3
pop
repnz
outsl
mov
sub
adc
push
gs
das
mov
insl
push
sbb
stos
push
cmp
mov
sbb
and
jb
pop
lahf
das
mov
test
jbe
mov
out
sub
cmp
cmp
divb
cmp
out
les
aad
enter
mov
sbb
add
lea
out
push
loope
xchg
push
adc
daa
inc
popf
jmp
push
lcall
popa
in
sbb
inc
sbb
rcr
stos
sti
jge
aad
sub
push
shll
dec
rcrl
cmp
ljmp
aad
adc
aad
xor
dec
mov
bound
dec
or
push
or
push
icebp
jmp
push
cltd
sbb
pop
add
jnp
out
adc
cmp
pop
fildll
insb
lods
test
xor
test
test
pop
or
adc
xchg
cmp
int
mov
mov
push
lods
mov
cmp
lahf
jmp
std
dec
les
xor
ret
xchg
inc
in
push
adc
bound
aad
mov
xchg
call
mov
outsl
xor
outsb
xchg
es
fs
push
mov
xchg
cmc
push
mov
aas
mov
jle
xchg
add
lret
inc
ss
popf
nop
mov
insl
adc
in
mov
incb
sahf
in
xchg
shl
push
push
push
jl
xor
mov
int3
inc
push
xchg
pop
jge
imul
sbb
shr
add
inc
adc
push
mov
mov
or
repnz
jne
jae
jecxz
lods
cwtl
jmp
imul
rcll
push
mov
push
dec
dec
cmp
stos
hlt
gs
mov
aad
xlat
adc
lahf
sbb
dec
cmp
not
flds
outsl
xor
sti
jge
fdivs
push
lea
mov
pusha
lea
fcmovbe
inc
jae
ds
mov
inc
mov
inc
cwtl
icebp
jno
lret
xor
popf
loopne
lds
insl
and
mov
inc
cs
ss
xchg
sbb
lret
into
pop
icebp
push
jg
mov
dec
pop
or
adc
test
and
cmp
out
out
sub
fnstenv
sbb
out
scas
mov
out
rorb
push
in
xchg
lods
xchg
xor
mov
jb
addb
test
or
dec
lcall
cmpsb
out
lock
sbb
addr16
insb
push
sub
push
pop
icebp
xor
sub
popf
cmp
xchg
jmp
xchg
bound
inc
mov
jo
scas
push
jg
iret
lds
int
xor
stos
jbe
mov
mov
and
jno
sbb
push
je
cmp
add
xlat
jns
lods
repz
cmc
je
scas
andl
inc
xchg
push
dec
sub
sbb
cld
mov
mov
insl
sbb
add
push
fldt
sarb
push
imul
jne
jbe
ss
fwait
icebp
add
les
orb
mov
ficoml
jmp
add
xchg
cwtl
lret
cs
aam
dec
lcall
addr16
loop
push
inc
std
out
jb
jge
add
adc
imul
jmp
inc
and
mov
mov
test
in
jecxz
xor
xchg
gs
mov
pop
lods
mov
xchg
jno
xchg
sub
jno
xchg
cld
rolb
std
pusha
int
ss
clc
jo
andl
xchg
mov
dec
mov
add
pop
push
pop
sbb
jp
pop
movsb
call
lret
mov
insb
cwtl
lds
xchg
or
mov
adc
jge
and
aaa
pop
cmp
imul
imul
add
lahf
call
pop
sbb
arpl
mov
and
xchg
inc
mov
cmp
nop
ljmp
popa
aas
fcoms
push
mov
in
std
adc
addr16
cmpsb
out
and
lea
inc
aas
dec
int
jp
dec
into
popa
std
mov
test
inc
mov
out
lcall
jnp
fwait
cltd
dec
mov
mov
and
mov
mov
pop
push
ss
mov
and
sub
out
or
sub
push
enter
lret
fisttps
adc
pop
fdivl
mov
mov
fisubl
leave
loop
hlt
dec
sub
ss
jb
daa
and
dec
jl
cmp
add
fs
push
pop
xor
iret
into
sub
push
jg
lock
mov
adc
test
inc
cmp
xchg
rorb
push
pushf
jb
addr16
imul
test
mov
push
cwtl
jecxz
outsl
xchg
cmp
sarl
stos
js
lret
stos
mov
xor
push
std
hlt
leave
add
ret
ss
mov
xchg
xchg
loope
xlat
sub
sub
test
aam
inc
sti
lret
les
mov
pop
xor
call
into
pop
fdivp
sub
sbb
in
inc
xor
test
xchg
push
inc
jecxz
xor
imul
clc
cmpl
int3
xor
dec
dec
sar
add
jp
enter
fcmovbe
sub
aam
out
cmp
sarb
dec
push
div
push
xor
adc
cmp
clc
cwtl
pop
mov
mov
ret
scas
dec
out
lret
les
rcrl
push
cmpsb
inc
adc
jg
sbb
inc
xlat
adc
jl
sahf
test
pushf
mov
add
stos
add
mov
out
dec
dec
insb
dec
shll
jmp
in
xor
adc
sbb
in
stos
xor
dec
jae
lahf
fsubs
jl
push
inc
adc
orl
and
int
mov
gs
sbb
xor
sbb
add
bound
jne
mov
outsl
push
out
xor
fwait
sub
mov
mov
dec
dec
lods
dec
lods
mov
sbb
inc
jl
jne
pop
in
jg
jno
ljmp
jmp
mov
repz
repz
int
and
stos
sub
mulb
clc
mov
jp
shlb
outsl
iret
jne
cmp
movsb
sbbb
xchg
or
ds
adc
out
mov
xor
or
dec
xchg
dec
outsl
pop
iret
jb
pop
out
jle
sub
mov
out
push
xchg
ja
push
loop
jmp
lea
loope
add
ret
cld
fsubrs
lret
inc
sub
test
add
pop
std
pop
into
outsb
sbb
and
test
rorb
fistl
mov
outsl
mov
inc
jge
and
inc
dec
jecxz
xor
mov
arpl
fsub
int3
sub
mov
and
xchg
fwait
cli
out
xorb
testl
dec
fcomps
add
pop
sti
outsl
cmp
xlat
dec
pushf
sarb
fistpl
rcr
or
ss
xor
shll
ror
cmc
push
pop
gs
rclb
ds
sub
sbb
nop
lret
sub
into
movsb
cmpsb
popa
dec
fpatan
leave
insb
lahf
gs
ret
inc
mov
mov
jmp
mov
outsl
mov
pop
and
lcall
sub
js
push
js
enter
xchg
jae
push
lcall
sub
gs
js
movsl
ss
int
outsb
imul
xchg
dec
sub
lcall
sub
sbb
sbb
les
mov
mov
in
insb
pop
pop
mov
les
mov
into
mov
aad
cwtl
in
adc
push
and
dec
popa
insl
rorl
sub
lret
jno
test
addr16
movsb
cmp
leave
jbe
fldl
mov
jnp
jne
test
arpl
sti
xchg
fstp
add
filds
mov
popf
xchg
ja
and
test
lock
pop
fwait
cwtl
inc
fsts
jl
stos
mov
scas
popf
sahf
cli
das
in
neg
mov
inc
sub
stos
cmpb
dec
cmpl
shl
jbe
mov
repz
loope
sbb
in
pop
cmpsb
sbb
sbb
popa
cmpsl
rcrl
add
mov
lods
iret
scas
xchg
pop
add
push
jg
jg
sti
dec
mov
cmp
xchg
inc
mov
mov
aam
jmp
pop
mov
xchg
in
mov
popa
jne
repz
pop
inc
adc
inc
test
lret
and
test
int3
mov
pop
je
mov
mov
mov
imul
hlt
push
cs
insl
inc
xchg
or
mov
xchg
mov
pop
sti
stos
popa
hlt
jbe
inc
faddl
daa
sub
push
loopne
roll
pushl
pop
cwtl
push
xchg
push
jbe
int3
push
in
ljmp
in
jecxz
xor
mov
mov
sahf
inc
sbb
dec
sub
pop
mov
call
cmp
stos
dec
scas
ja
rcll
fwait
shll
popa
pushw
cmp
mov
js
fistpll
scas
mov
cmpsb
jnp
pusha
popa
mov
out
sub
in
mov
call
shrl
or
jle
jle
fucomp
ret
cs
push
fwait
xchg
mov
mov
adc
lret
nop
outsb
sti
test
mov
iret
clc
mov
addr16
mov
call
negb
cld
js
lret
or
icebp
scas
pop
ret
add
mov
not
shll
jns
lods
mov
loope
lahf
mov
xor
push
and
jae
fistl
les
xor
jecxz
std
into
cmp
sbbb
xor
inc
or
scas
push
pop
adc
push
cmp
jnp
jge
add
xchg
jl
dec
mov
aad
pop
cmp
push
pusha
out
icebp
int
mov
test
in
inc
fists
in
repz
xor
dec
popa
dec
mov
cmpsb
and
sbb
jp
cmpsb
int
ljmp
outsb
std
loope
and
xlat
pusha
nop
jne
pop
mov
dec
fiaddl
jae
in
lds
loope
dec
push
jp
lods
out
movl
frstor
cwtl
inc
in
lret
cmc
sbb
outsl
fwait
jl
lds
test
add
insb
mov
pop
sti
or
mov
fwait
add
fcompl
pop
mov
enter
es
cwtl
xchg
aad
jne
imul
adc
in
jo
out
call
hlt
call
mov
pop
insl
packssdw
sub
stos
scas
lahf
jno
cs
jo
notl
mov
icebp
add
inc
mov
imul
scas
push
push
pop
mov
fdivrl
insb
lock
lret
fnop
pop
pop
adc
loop
popf
int3
outsb
mov
pusha
cli
mov
ss
mov
rcl
jno
dec
stos
mov
and
hlt
fldl
cli
dec
idivb
mov
add
inc
mov
pop
mov
out
sub
jl
cmp
leave
and
dec
test
lret
jle
xchg
pop
fldt
sbb
mov
xor
leave
negb
mov
push
inc
sahf
xchg
lea
cmp
jnp
fs
in
cmp
mov
mov
mov
sbb
jnp
mov
scas
push
pop
fwait
mov
jecxz
xchg
mov
pop
push
pusha
stos
dec
push
add
aaa
xor
xorl
jne
mov
aam
loop
mov
cmp
mov
das
rcll
enter
pop
jne
fwait
pop
out
xor
cmp
adc
pusha
add
int3
xchg
icebp
mov
pop
cmpsb
xchg
dec
push
cmpsb
jle
les
mov
mov
adc
xchg
sub
sub
xchg
insb
xchg
jmp
xchg
dec
into
jle
jae
je
iret
or
inc
shrb
jne
mov
or
rolb
out
ret
iret
test
outsl
popf
push
sarb
mov
cmp
enter
imulb
data16
aaa
rol
movsl
mov
cmc
es
ret
adc
shr
mov
subl
add
xchg
cmp
add
push
cwtl
jle
lods
push
inc
in
int
cmp
mov
sub
clc
jnp
lea
icebp
adc
push
mov
daa
or
xor
lret
mul
jg
or
stos
add
bt
push
bound
inc
inc
ret
dec
cwtl
ss
xchg
mov
fdivrl
es
add
adcb
sub
or
les
dec
mov
sub
out
mov
add
shl
xchg
pop
fbld
std
fwait
jl,pn
gs
cltd
pushl
add
prefetch
stc
fcmovbe
xor
hlt
clc
inc
lods
pop
mov
repnz
fsubs
sbb
push
pop
fbld
inc
jle
stc
cmpsl
leave
lret
scas
lock
ret
and
arpl
mov
in
call
cmp
mov
mov
jo
lcall
fidivrl
aam
dec
in
add
jle
mov
bound
sar
sahf
out
or
pop
push
and
cltd
mov
add
sub
xchg
xchg
add
hlt
lret
outsl
jbe
adc
push
movaps
clc
or
sub
dec
and
in
aaa
xchg
subl
das
adc
shlb
lahf
fsubl
add
xor
pop
adc
and
xor
mov
stc
mov
inc
mov
imul
in
pusha
push
xor
lret
or
mov
aad
mov
xchg
addr16
stos
in
hlt
xlat
pushf
loope
outsl
push
pop
adcb
fs
test
mov
rcrb
test
test
cmp
and
frstor
mov
in
sti
mov
fdivrs
negl
mov
adc
int3
leave
mov
jbe
sahf
in
push
cmc
fs
mov
push
jae
pop
cmp
cmp
or
fcoms
outsb
loopne
push
ret
and
ljmp
flds
push
je
pop
inc
lods
fstpt
fisubl
cmp
adcb
xchg
int3
mov
cli
pop
loopnew
push
in
mov
push
push
and
adc
pop
cmp
test
mov
pushf
jle
jl
insl
xor
in
jp
test
jle
mov
lcall
xor
out
leave
mov
xchg
fiadds
or
mov
in
lret
pop
loopne
movzwl
adc
rcr
fs
and
add
add
ds
out
lcall
ds
sbbl
mov
cli
cwtl
out
shlb
test
sub
jg
test
dec
pop
fdivrl
mov
in
daa
mov
add
ficoms
insb
sbb
pop
adc
or
mov
and
std
scas
ret
push
imul
out
lods
lret
out
xchg
pushf
cli
adc
jbe
aad
outsl
lea
push
inc
or
popa
and
idivb
fldl
jge
xchg
mov
testb
mov
lea
int3
xchg
mov
dec
insl
ret
lea
mov
lods
divb
push
sub
pop
data16
mov
in
push
pop
lods
mov
cld
dec
push
cmpl
pop
popf
add
push
stos
scas
cmpsb
fwait
lods
sbbb
push
shl
cmovp
cmpsb
sbb
loopne
popa
testb
mov
xchg
data16
dec
push
sti
enter
stos
and
mov
mov
inc
push
and
arpl
and
in
adc
fstps
and
push
ss
xor
stos
push
dec
lods
jmp
xor
adc
inc
and
mov
inc
push
cs
ror
iret
add
out
data16
dec
cld
mov
cmpsb
ret
push
mov
mov
popf
movb
add
xchg
pop
lods
sub
and
lea
push
dec
lods
xchg
scas
inc
and
push
add
xchg
push
inc
stc
fwait
xchg
push
xchg
repnz
aam
mov
cmp
lods
movsb
jp
cmp
pushf
add
add
ret
mov
call
movsl
add
pop
mov
or
movsl
clc
inc
in
pop
mov
leave
add
lods
out
int
lea
ljmp
xor
mov
in
icebp
and
or
sbb
sbb
invlpg
mov
jno
scas
gs
sahf
dec
push
add
mov
shl
jnp
dec
push
cmp
jne
jmp
jp
into
repnz
or
into
mov
pop
xor
lock
mov
mov
test
ds
imul
enter
aas
and
sub
or
adc
mov
out
sbb
and
push
ror
test
mov
and
dec
adc
jmp
cmp
ret
push
ret
test
push
fildl
mov
push
outsb
in
lods
out
xor
dec
xor
int3
out
xchg
jns
and
mov
pop
and
iret
fisubrs
push
mov
mov
mov
lock
pop
push
or
out
leave
mov
add
shl
xor
jbe
xor
mov
inc
scas
test
push
mov
pop
pop
mov
dec
pusha
pusha
scas
out
sahf
aam
xchg
or
pop
pop
adc
lret
inc
enter
movsb
jg
or
push
mov
les
adc
inc
test
mov
movsl
add
ss
es
push
out
adcl
sahf
mov
sub
mov
into
lcall
loopne
in
sbb
bound
pop
and
sarl
test
inc
leave
inc
gs
add
pop
mov
das
mov
dec
sbb
push
and
pop
pop
jnp
lret
stc
lock
stos
cmc
push
mov
pop
arpl
shrb
mov
xchg
hlt
std
stc
mov
lahf
mov
sub
adc
les
mov
sbbl
pop
mov
pop
lods
jns
xor
mov
mov
push
mov
scas
es
iret
mov
mov
mov
test
xchg
push
outsl
jae
scas
pusha
fwait
push
push
int
fwait
xor
or
sub
dec
cmc
faddl
ds
sub
sub
stos
out
cld
iret
add
jnp
inc
imull
bound
mov
mov
dec
pop
mov
hlt
xchg
mov
xorb
mov
ja
jle
xor
xor
xor
or
mov
jns
adc
mov
mull
xchg
push
jmp
imul
scas
add
pop
jb
iret
adc
out
sti
test
mov
mov
dec
shl
xlat
imul
jl
mov
ljmp
lds
mov
test
xchg
cmpsb
sub
mov
xchg
jae
push
dec
lcall
and
mov
lcall
push
push
imul
mull
pop
inc
stos
add
push
sub
xchg
or
test
mov
and
inc
stos
in
xchg
in
and
icebp
int
xchg
popf
std
jmp
insb
jnp
push
mov
adcl
mov
gs
add
mov
fcmovbe
mov
lahf
bound
cmp
add
xor
xchg
sub
lcall
aas
gs
mov
subb
out
outsl
dec
pop
sub
test
xor
adc
sbb
jae
sahf
test
call
adc
or
mov
hlt
cmp
xor
pop
sti
xchg
rcrl
test
imulb
fildll
sub
xchg
add
repnz
push
imul
and
mov
in
or
loope
add
sbb
cmp
arpl
sub
outsb
inc
xchg
fbstp
sub
les
cltd
daa
cltd
push
adc
testl
es
and
fdivrs
xchg
outsb
lods
ret
cld
pop
inc
sub
jge
mov
dec
mov
stos
pop
incb
push
and
mov
je
mov
movsl
mov
daa
mov
sub
pop
dec
pop
push
jb
hlt
xchg
add
lret
xor
inc
cmp
bound
icebp
mov
dec
shrl
movsl
jmp
mov
imulb
pop
cli
cmp
pop
aaa
divb
sbb
sub
cmc
jp
mov
cs
ss
dec
mov
test
and
pop
lcall
pop
cmpb
cmp
testb
push
sahf
mov
cmpsb
mov
sub
shrb
mov
rcrb
pop
push
inc
ret
call
sbb
imul
mov
jmp
mov
dec
icebp
movsb
adc
push
popw
mov
imul
cmp
inc
jae
sub
jle
jbe
adc
push
fdivrs
int
mov
cmpsb
pop
aad
push
imul
aas
cld
dec
sahf
xchg
push
fsub
jge
repz
and
pop
add
adc
dec
sarb
mov
mov
cmp
fs
mov
xchg
outsb
jge
cmpsl
aas
mov
mov
imul
dec
mov
jge
or
xchg
jp
adc
inc
sbb
into
imul
outsb
and
popa
dec
xchg
jo
push
jl
fstpl
mov
mov
or
test
adc
sti
pop
dec
mov
hlt
aas
shll
jecxz
dec
fistl
xchg
addr16
xchg
cmp
mov
es
jmp
movsb
pusha
fimuls
pop
fnstsw
les
xchg
jle
cmp
mov
or
sahf
enter
and
sub
out
add
lods
mov
inc
cwtl
dec
pop
add
xchg
dec
jmp
jmp
jmp
and
sarl
and
pop
data16
xlat
pop
pop
out
push
subb
sub
push
xchg
push
pusha
dec
mov
sbb
pop
add
gs
fsubrs
ret
out
pop
adc
xchg
rorl
xchg
mov
sti
adc
dec
push
sub
nop
lret
ja
clc
icebp
and
jb
mov
sbb
hlt
add
cmp
fs
hlt
aas
pop
push
lcall
fld
inc
in
aad
flds
cmp
dec
fsubs
mov
aaa
cltd
xchg
test
fnsave
or
mov
xchg
cmove
es
lods
jne
add
scas
jg
jbe
fstl
sub
lcall
mov
push
cld
sbb
jp
and
mov
aam
jg
dec
inc
stos
push
adc
js,pt
sbb
aad
cmp
jge
mov
dec
sub
mov
icebp
dec
arpl
inc
jae
divl
repz
sti
inc
daa
fbstp
icebp
jnp
leave
nop
xchg
imul
xor
jno
adc
cmpb
inc
in
mov
push
pop
arpl
mov
aam
addr16
movsl
inc
sahf
jnp
xor
xor
popa
inc
dec
dec
ror
mov
sub
test
leave
dec
xor
bnd
stos
pop
mov
sbb
jnp
cld
ljmp
movsb
addb
push
push
xchg
inc
inc
jb
add
inc
test
mov
lods
stos
cld
xor
mov
pushf
sub
inc
in
cmp
jmp
add
sbb
adc
xor
add
push
jle
aam
inc
xchg
mov
jo
sbb
popf
pushf
test
nop
xor
jp
test
ds
popa
and
nop
dec
hlt
and
stos
push
pushl
sbb
fcom
fmuls
cmp
rcr
fnsave
xchg
hlt
or
mov
adc
xlat
fsts
dec
jns
loop
ja
pusha
bound
dec
pop
jns
xlat
inc
adc
sub
and
add
hlt
popf
enter
in
jge
push
bound
mov
mov
push
cmp
mov
dec
sti
lods
lock
aas
xchg
in
nopl
lret
push
sub
call
cmpsl
push
insl
cmp
and
cmp
rorl
sbb
jnp
pop
ret
hlt
insb
pusha
sub
cmpsl
push
andl
adc
mov
mov
or
iret
inc
jge
add
jno
movsl
fidivrl
jbe
popf
dec
sbb
pop
cmp
dec
lcall
xchg
sbb
out
lret
fstpt
pop
lret
or
adc
sbbb
ret
lds
xor
arpl
or
mov
hlt
lods
cmp
inc
ss
mov
lods
add
sub
push
ret
mov
insb
ret
sti
mov
sahf
mov
jnp
faddl
pop
push
lret
cld
jl
loop
fstpt
cmp
lahf
stc
inc
jb
push
cmpsl
clc
hlt
cmp
les
push
lret
xchg
mov
mov
mov
dec
fdivp
pop
and
cmp
pop
inc
mov
test
add
push
pop
mov
push
xchg
mov
dec
xor
and
push
scas
mov
inc
loop
pop
dec
aaa
dec
iret
pop
mov
dec
dec
and
lcall
stc
cwtl
test
icebp
popa
lea
iret
iret
adc
jb
xor
int
in
inc
fwait
push
mov
mov
and
push
pop
or
outsl
sub
pop
mov
push
call
daa
cmc
push
push
fsubr
mov
in
fcoml
jbe
push
das
inc
movsl
cmpsl
pop
xchg
xchg
adc
sbb
repnz
aad
pop
inc
xor
jg
sub
loopne
loop
movsl
adc
test
mov
xchg
mov
push
mov
and
cmp
enter
mov
lahf
inc
or
mov
imul
shlb
lret
push
outsb
into
and
test
scas
es
jae
pop
xor
cltd
dec
xor
ret
xor
push
loopne
jo
cmc
mov
and
fimuls
rolb
jo
adc
in
pop
lock
pop
pop
add
adc
add
das
orl
xchg
jnp
in
notl
movsl
or
push
in
inc
shll
adc
mov
enter
cmp
icebp
insl
cmpsl
movsl
aaa
and
pop
add
int3
mov
or
test
cmp
pop
push
push
jno
pop
sub
inc
jl
cmpl
push
in
cmc
icebp
mov
test
ja
jmp
lods
nop
adc
aaa
mov
and
fadds
push
sub
xchg
cltd
pushf
push
popa
pop
out
jmp
mov
data16
inc
testb
push
mov
inc
outsl
sbb
jp
xor
sbb
xor
nop
and
xchg
sbb
mulb
lds
dec
mov
and
out
or
pop
mov
popf
sbb
sbb
jno
loope
inc
push
pusha
jo
push
push
data16
lret
bound
mov
and
fildll
cmp
scas
jmp
add
sub
sbb
lds
test
xchg
lret
inc
loop
dec
hlt
mov
icebp
loopne
into
hlt
dec
stos
in
sub
push
sbb
jbe
pop
adc
add
int3
xor
mov
enter
aad
xchg
jge
mov
int3
jg
ss
cmp
call
push
test
jnp
cmpsb
sahf
jmp
cmp
cmp
mov
shlb
scas
pop
or
pop
xor
push
jge
popf
repz
movsb
lret
scas
xor
mov
jg
mov
in
clc
jge
fld
mov
scas
or
mov
xchg
fmul
bnd
sub
lods
xchg
push
in
xchg
outsl
rcl
add
out
inc
sbb
jp
add
dec
sbb
or
or
mov
ja
and
outsl
aaa
push
dec
mov
jecxz
out
sub
arpl
jge
notb
xorl
sbb
xor
xor
sub
cld
mov
or
push
inc
mov
pop
inc
addr16
gs
lods
and
insb
cmpsl
lret
ret
mov
mov
iret
or
or
inc
das
pop
jg
ret
mov
jb
add
cli
mov
dec
popl
xor
test
jnp
and
pop
rclb
and
cmp
xchg
adc
xchg
cmp
lds
gs
rorl
ret
sbb
outsb
lret
je
pop
dec
je
dec
out
fildll
jmp
loope
adc
sbb
sub
pop
push
xlat
enter
mov
cmp
fdivrl
cmp
dec
scas
popf
mull
lcall
movsb
and
lods
nop
xchg
xor
stos
xchg
push
jo
out
add
mov
fucomi
test
into
in
cmc
loopne
dec
xor
outsl
mov
lea
lahf
inc
xchg
push
setge
test
call
mov
push
pop
jl
enter
jbe
into
xor
cmp
mov
mov
pop
push
mov
ret
xchg
push
and
test
and
lret
lock
xchg
push
pop
mov
in
mov
enter
jns
mov
outsl
add
mov
sahf
cs
sub
mov
mov
leave
cltd
jne
leave
xchg
repnz
add
or
adc
sub
scas
rcrb
or
sub
in
mov
scas
adc
lcall
dec
div
test
stos
jle
or
or
xor
or
out
fcomps
mov
fsqrt
stos
xchg
js
adc
mov
push
add
lods
cmp
fldenv
out
dec
mov
xor
test
lods
push
movsl
movsl
add
jle
pop
xchg
ret
test
mov
imul
mov
pop
rcll
sbb
jg
cmpb
and
sbb
push
add
mov
cmp
push
jbe
xchg
insl
hlt
cmp
jge
or
jno
mov
bound
lcall
in
test
fistps
int3
jb
iret
adc
push
mov
jo
xor
sbb
loopne
push
into
and
test
lods
xchg
xchg
ret
hlt
push
popl
ret
mov
inc
repnz
dec
dec
mov
out
iret
test
inc
and
lret
mov
sbb
aas
fiaddl
jae
pusha
xor
and
loop
dec
inc
push
fiadds
ror
ror
dec
inc
adc
movsb
fwait
out
ret
xchg
stc
aam
push
aam
pop
faddl
jbe
inc
in
push
sub
movsb
pop
pop
adc
or
pop
jg
add
insl
push
or
adc
in
push
ficoml
mov
xor
pop
and
dec
cmp
sbb
pop
add
adcl
lds
jno
pushl
lahf
mov
xchg
cmp
aad
mov
and
jmp
inc
cmp
inc
or
pop
movb
shrl
sarl
movsb
sbb
addb
lds
inc
or
bound
mov
popaw
mov
xchg
dec
fbstp
push
dec
xchg
mov
xchg
cmc
imul
out
cmp
push
or
and
std
js
stos
imul
dec
sarl
xorb
dec
mov
shlb
mov
adc
jbe
xchg
and
insl
add
fistl
push
mov
and
shlb
in
sahf
das
jb
and
scas
mov
shl
inc
in
loopne
lods
inc
mov
leave
fcomps
sbb
mov
cmp
repz
dec
mov
adc
jbe
xchg
mov
add
aad
imul
jns
pop
cmpsb
and
pop
jl
adc
xlat
mov
in
dec
xor
pop
fimull
mov
jne
pop
push
pushf
and
mov
or
in
idivl
mov
xor
es
jae
aaa
inc
imul
bound
int3
daa
callw
fsubs
push
mov
movsl
xlat
cli
add
xor
sti
xor
lcall
xor
imull
mov
or
ja
push
mov
iret
jb
shrl
movsl
movsl
mov
mov
nop
pcmpgtb
mov
ds
push
addb
inc
xchg
pop
ds
pushf
lcall
add
stc
out
add
addr16
movsl
adc
push
pushf
arpl
stos
test
out
mov
enter
ja
stos
pop
into
inc
xchg
leave
popa
mov
insl
sbb
insb
jae
adc
ljmp
dec
int
movb
sbb
sbb
orl
mov
sub
std
into
pop
enter
xchg
mov
mov
mov
roll
loop
mov
mov
sbb
je
mov
xchg
push
aaa
adc
dec
push
scas
jecxz
push
push
pop
jmp
cltd
lahf
or
pop
sbb
mov
mov
sbb
add
icebp
and
scas
movsl
jp
and
xor
mov
fcompl
fs
add
mov
jge
push
push
arpl
pop
outsl
add
xor
mov
fists
mov
and
jmp
jo
mov
enter
jae
movl
push
dec
ror
test
out
in
adc
outsl
sbb
mov
or
lret
mov
jmp
add
lods
sbb
dec
std
jl
mov
stos
and
dec
dec
jle
sahf
push
sahf
cmp
mov
lret
popa
jecxz
ret
andl
jecxz
popf
testl
mov
pushf
stos
test
add
adc
sub
push
xor
lds
mov
lock
or
sar
imul
imul
cmp
and
insl
outsb
out
cmpb
add
pop
outsl
insb
fsubrl
push
lcall
or
std
stos
ret
lds
fistps
cli
and
cmp
lret
xor
push
ljmp
roll
mov
pushf
xchg
mov
cmc
push
pop
insb
sub
mov
dec
frstor
enter
in
dec
pop
and
or
loope
in
and
loop
out
rorb
push
mov
push
jns
pop
dec
and
shll
xchg
jae
pop
roll
jl
nop
and
xchg
ja
pop
aam
mov
jle
pop
aad
push
mov
xchg
jb
pop
fs
inc
push
push
pop
lea
int
cmp
and
aaa
fsubs
cwtl
and
jae
or
fwait
jle
mov
mov
mov
inc
push
inc
in
gs
data16
mov
jecxz
rcrl
inc
add
jne
outsl
jge
lds
pop
xchg
shll
fnstcw
mov
dec
mov
ljmp
adc
aaa
icebp
xchg
test
xchg
clc
aaa
xchg
leave
sub
mov
add
rcrb
fiaddl
jmp
pop
iret
lahf
mov
or
and
pop
push
test
xor
lcall
fwait
add
in
ror
enter
stos
loope
mov
jo
dec
adcl
dec
mov
cwtl
mov
insb
push
jmp
clc
and
inc
nop
out
sahf
rcll
mov
jb
orb
lock
xchg
cli
mov
sub
ret
pop
mov
imul
ret
inc
cld
sti
sahf
and
je
jnp
repz
add
in
pusha
inc
mov
push
fmull
cmpsl
lret
std
int3
es
cmpl
cmp
scas
jae
mov
movsl
cmpsb
je
lods
jmp
inc
loopne
push
jecxz
into
es
scas
btc
ret
arpl
mov
jmp
fcmovnb
pop
pop
shl
push
pop
xchg
outsb
std
push
gs
enter
nop
das
addr16
add
jge
lcall
sbbb
fisubrl
adc
les
jo
adc
mov
pusha
adc
fnstsw
out
inc
movsb
xchg
les
test
mov
mov
leave
movsb
cmp
push
sbb
push
imulb
xor
lahf
xchg
mov
sub
xor
fwait
iret
and
cmp
push
mov
adc
sbbl
sbbb
ja
pop
ficomps
shll
or
inc
clc
pop
adc
sahf
mov
add
pop
sarl
lea
subl
movsb
fisttpll
mov
cmpsb
add
shll
scas
pop
cltd
cs
pop
daa
pshufw
jle
push
aaa
in
imull
cwtl
gs
sub
outsl
sub
rcll
sub
and
movsb
jle
mov
pop
jg
and
push
push
xchg
pop
fdivs
jns
inc
mov
stc
dec
mulb
orl
mov
dec
push
mov
mov
xlat
pop
xor
and
outsl
xor
xchg
mov
pop
inc
dec
push
ds
xor
sbb
and
sbbl
and
loopne
popf
testb
mov
les
cmpsl
lock
pop
pop
and
add
xor
movl
fcomp
mov
rcll
outsl
aaa
ljmp
in
outsb
orb
xchg
orl
pop
sarl
leave
inc
jp
mov
lret
mov
iret
in
fsubs
sub
pop
push
mov
pusha
insb
sub
sub
adc
stos
pusha
std
jns
pop
test
mov
mov
ficoml
inc
fwait
pop
add
sub
push
adc
xchg
pop
push
addr16
ficomps
clc
out
and
push
fwait
loopne,pt
test
lcall
popf
fildl
loop
xchg
jl
lcall
jno
add
xchg
adc
jp
jl
rol
pop
outsb
or
repnz
iret
pop
icebp
pop
rcrb
pop
add
adc
icebp
jle
pop
cmp
subb
out
aas
iret
sbb
pop
lods
xchg
dec
sbb
add
shl
pop
movsl
out
jnp
mov
mov
mov
cmp
inc
popa
mov
popf
add
pop
in
xchg
xlat
fdivs
add
xor
lock
or
test
xchg
ja
mov
lret
pop
xchg
mov
addl
xorb
mov
insl
jge
lock
ret
and
push
xor
mov
inc
inc
movsl
cld
cmp
xchg
jae
or
je
sbb
fisubs
rcll
push
je
jmp
xor
or
sti
pop
ss
sub
cltd
bound
hlt
mov
mov
dec
ss
arpl
orl
push
out
mov
push
lret
out
stos
rorb
in
adc
imul
sbb
push
movsb
test
xor
inc
mov
insl
sti
cmp
ret
mov
pop
and
inc
outsb
sbb
outsb
cmc
imul
mov
mov
push
leave
push
int
mov
push
ss
add
sub
jno
jle
or
lds
pop
lcall
outsb
xlat
cwtl
push
ds
daa
test
sub
jbe
in
cld
int3
std
inc
mov
mov
mov
inc
jae
xchg
outsb
add
add
add
ljmp
icebp
xchg
das
sbb
push
jo
pop
sub
scas
outsb
ss
push
or
es
std
lock
sbb
jne
shlb
and
mov
pusha
ret
jg
popf
bound
or
nop
movsb
aas
fs
test
or
aaa
cli
les
add
xor
mov
sbb
xor
jb
sbb
sub
mov
adc
in
and
mov
adc
repz
jecxz
sub
xor
int
lods
loopne
push
and
sbbb
loop
mov
fisttpl
les
push
and
inc
daa
lods
fs
stos
aas
xor
mov
jbe
add
hlt
inc
and
hlt
dec
fwait
popa
repnz
sbb
mulb
sarl
outsb
inc
pop
ficompl
imul
jno
adc
mov
iret
lret
push
fcomps
jb
or
jae
shlb
mov
push
loop
lock
cmp
push
leave
pop
in
outsb
inc
ficompl
fidivrl
pop
sbb
push
aam
fcmove
jb
shl
cmp
jg
inc
lahf
jg
inc
cs
imul
inc
mov
insl
push
adc
add
lret
push
ljmp
sbb
mov
pop
jne
insl
jnp
xlat
xchg
push
sub
inc
inc
outsb
imul
push
loop
push
aas
and
mov
insb
test
xlat
int
dec
cmc
sbb
rcrb
cwtl
in
and
push
scas
stos
leave
sahf
sub
mov
insb
daa
xor
pop
and
or
jecxz
or
test
dec
jle
mov
push
xchg
stc
scas
push
push
pop
lods
xor
test
xchg
cmp
lock
push
mov
mov
mov
test
inc
insb
pushf
lock
pop
inc
scas
je
cmpsl
aas
sbb
fnstcw
outsb
sbb
stos
dec
mov
imul
test
mov
push
pop
out
fnsave
stos
cmpsb
into
cmc
iret
mov
cmp
cmp
pop
push
and
or
mov
sbb
dec
scas
fs
lahf
mov
jbe
inc
mov
pop
in
inc
inc
mov
inc
popl
mov
stc
scas
dec
jae
repnz
das
xchg
rcl
jmp
mov
mov
mov
mov
push
mov
mov
pop
fidivs
sub
pusha
and
mov
push
test
movsl
ljmp
sub
rorb
sbb
jle
dec
jo
mov
cmp
imul
sbbl
je
xlat
inc
aam
popa
sbb
push
hlt
jge
push
daa
into
jmp
mov
mov
loop
inc
and
movsb
cld
or
adcb
push
pop
sbb
outsb
push
xchg
std
imull
cmp
jnp
and
cmp
and
mov
adc
push
push
push
or
mov
int
int3
or
mov
fiadds
push
cmpsb
mov
pushl
out
xchg
imul
in
push
out
mov
insb
lret
add
or
dec
add
test
loope
inc
lret
mov
sti
ror
mov
andl
and
out
mov
inc
xchg
jae
mov
test
mov
ror
int
mov
lods
leave
leave
movsb
adc
dec
xor
ja
popf
jo
ja
xchg
outsl
cmp
ret
fildl
mov
and
inc
negl
xchg
mov
sub
popa
pop
divb
sub
lock
lock
dec
cmpsb
dec
int3
rorl
cmpsl
int
add
push
popf
jp
jo
aaa
jb
dec
mov
jnp
push
adc
unpckhps
cmp
outsb
sub
jns
jmp
hlt
jge
stc
inc
movsl
es
ljmp
sub
xor
test
je
add
dec
or
dec
mov
cmp
xor
sub
js
movsb
addb
scas
sahf
mov
sahf
lret
mov
xchg
cld
xchg
mov
add
dec
je
fucom
pop
sub
fisttpll
jmp
push
aaa
mov
and
jecxz
mov
rclb
aas
fcom
out
sarl
cmp
mov
jbe
mov
stc
sbbb
bound
mov
lds
insl
sbb
push
cmp
add
out
ds
outsb
je
jns
cmp
sub
repz
jo
out
test
fnstenv
out
adc
add
push
stos
mov
das
pusha
orl
and
mov
not
subl
rcr
mov
mov
pop
pop
and
adc
imul
or
cmp
mov
loop
jno
mov
mov
icebp
inc
sbb
es
xchg
cmp
shll
pop
clc
pushf
mov
push
lret
mov
out
sub
lods
adc
add
test
inc
mov
cmp
mov
push
cmp
es
xchg
or
fwait
push
cmc
imul
aam
pusha
sbb
inc
xlat
cmp
inc
xor
mov
dec
push
ret
lods
ficomps
std
push
test
aaa
mul
mov
xchg
sub
fnsave
and
test
out
scas
fsts
repnz
or
dec
out
fdivs
dec
cmp
jb
hlt
xchg
xchg
mov
negb
fstpl
mov
out
das
std
add
dec
dec
call
xchg
adc
movsl
mov
inc
and
fsubrl
mov
cmpsb
cli
mov
xchg
fiadds
lret
test
femms
inc
in
mov
popf
test
dec
and
iret
dec
dec
out
imul
lret
inc
gs
scas
cmpsb
sbb
sarl
cli
inc
cs
sahf
push
mov
jl
dec
add
pshufw
cld
inc
jge
push
pusha
fwait
mov
adc
mov
mov
popa
in
jb
mov
jmp
inc
xor
ds
mov
xchg
sub
xchg
cmp
jg
std
ret
aas
dec
or
sub
pop
cmc
fdiv
out
cld
jb
dec
sbb
test
jl
jno
push
xor
fstpt
xlat
push
out
repnz
mov
insb
fwait
cs
outsb
test
cli
mov
and
lret
fs
stos
or
cmpsl
dec
stc
jnp
jb
sbb
push
xor
out
mov
rol
pop
xchg
lret
test
cltd
add
lock
cmpl
xchg
mov
mov
add
inc
push
xchg
mov
pushf
cmpsl
sahf
aam
popf
into
mov
in
insl
shr
mov
ja
daa
test
push
mov
or
in
clc
jae
xchg
loopne
mov
cmp
pop
inc
fidivl
pop
sbb
mov
jmp
arpl
je
or
call
mov
idivl
jo
lea
stc
xor
pop
xchg
ficoms
iret
insl
cmp
cld
jo
jb
xchg
loop
imul
jae
mov
or
jb
mov
stc
mov
xor
mov
adc
dec
daa
jmp
shlb
and
cmp
adc
xor
cmc
xchg
int3
stc
and
cmp
adcb
imul
leave
sbb
sti
je
sti
cmp
and
jb
and
add
adc
ret
cmp
sbb
fdivrs
out
or
fwait
out
loope
mov
mov
cli
or
cmp
fdivrl
cmc
dec
out
xor
loop
inc
and
inc
mov
inc
xor
test
icebp
mov
jge
cmpsl
cs
pop
imul
jnp
jnp
fstp
stos
cli
dec
mov
xor
pop
stos
mov
out
cmp
add
add
jne
stc
loopne
adc
jg
dec
fs
aaa
das
push
in
in
sub
imul
sbb
and
pusha
mov
pusha
cmp
into
mov
and
faddl
rorb
pusha
xor
pop
cmp
lods
and
mov
aas
enter
pop
push
push
in
cmpsb
or
inc
sbb
xchg
je
sbb
pop
jnp
xorb
nop
ja
lcall
mov
orb
rorl
push
mov
lcall
popa
sbb
xor
fistl
test
stos
push
dec
or
mov
nop
xchg
jnp
sub
mov
xchg
xchg
sub
xchg
sub
ret
das
popa
dec
dec
call
movsb
mov
cmp
fisubrl
cmc
inc
inc
int
jge
jae
clc
cmp
pop
mov
repnz
iret
fsts
cli
jne
pusha
cmp
sbb
sub
or
inc
shlb
jge
shrb
add
sahf
add
inc
and
je
in
test
sbb
es
mov
cltd
rorl
sub
fincstp
and
in
gs
xor
push
jp
push
cwtl
daa
jle
icebp
call
sub
jp
cwtl
push
push
repz
push
sub
flds
lret
stos
rolb
mov
lock
mov
cmp
idivl
fistps
cmp
jmp
in
fnstcw
jecxz
mov
mov
cld
fs
add
sbb
out
ret
pop
das
xor
sub
cmp
pop
jg
mov
and
mov
jb
and
sbb
xor
shr
adc
add
ficoms
xor
fs
push
mov
das
dec
ljmp
outsl
xchg
push
mov
pop
ja
inc
push
sub
sbbb
jp
popa
or
cmp
aad
inc
pop
jne
loop
and
pop
out
lods
add
icebp
jmp
lock
cld
mov
pop
mov
test
add
dec
scas
mov
dec
push
cmpsl
lret
mov
popf
in
ja
adcl
dec
out
mov
pop
sbb
out
aaa
inc
or
mov
sbb
inc
jnp
jge
inc
lock
ret
roll
mov
sbbb
call
shlb
pop
adc
push
pusha
dec
test
sub
pop
push
sbb
add
addb
in
or
pop
mov
sti
notb
int3
or
test
fsubs
sahf
xchg
push
push
call
insl
or
neg
stos
push
nop
xlat
stc
out
add
xor
jne
rcrl
push
push
fnstsw
lods
aaa
je
cmp
test
std
scas
jecxz
fs
arpl
cmpsb
fdiv
loope
jecxz
or
scas
xchg
mov
loope
or
xchg
iret
clc
pop
xor
test
mov
push
push
scas
jl
lret
stc
out
icebp
cwtl
js
in
sbb
dec
aaa
imul
push
scas
xor
fstps
fs
sbb
and
push
push
leave
popa
dec
imul
testb
mov
jo
pushf
and
adc
test
popa
or
push
testb
imul
mov
xchg
insl
cld
xchg
xor
sub
dec
clc
jno
ror
jmp
loope
ret
pusha
push
xor
hlt
fsubs
jae
push
loop
pop
icebp
push
int
pop
push
int3
xchg
mov
out
jle
sbb
xchg
add
movb
and
inc
jns
movsb
xor
mov
push
imul
sbb
push
pusha
mov
xor
out
inc
jl
clc
loop
sub
mov
and
pop
sbb
shl
cmp
jl
sub
xchg
fbld
pop
sbb
clc
movsl
xchg
xchg
outsb
mov
lret
mov
test
mov
pop
aam
movsb
xchg
and
sub
mov
pusha
in
pop
mov
sub
iret
jge
add
cmpsb
mov
les
cmpsb
dec
dec
orb
not
les
push
ss
sub
lock
orb
sahf
and
sbb
in
dec
es
mov
cs
aad
ret
and
movsb
sub
aad
out
in
popa
cltd
fucom
shll
lahf
push
sub
mov
mov
call
in
xchg
dec
sbb
pop
push
je
dec
cltd
and
push
push
les
jle
push
aas
data16
push
push
lock
cltd
in
or
sahf
cmp
push
push
or
in
out
sub
add
sbb
pusha
mov
jp
jecxz
cmp
dec
and
shrl
pop
lret
pop
aas
push
xchg
push
lock
cmp
add
jnp
cmp
scas
push
jmp
add
ja
aad
inc
sub
les
push
pop
mov
jno
stos
fstpl
mov
ret
push
stos
or
les
sbb
cmp
or
jo
in
cmp
icebp
ret
add
out
pop
dec
in
push
xchg
or
outsb
sbb
hlt
jns
xchg
int
js
dec
arpl
xor
cwtl
lret
stos
inc
mov
pop
sbb
fdiv
xchg
iret
gs
lret
push
mov
inc
mov
pop
sbb
loope
mov
dec
shl
xor
call
jb
lds
int
and
mov
aam
imul
das
and
notl
cli
les
xchg
jmp
and
mov
andl
aas
lea
je
push
arpl
jge
xor
scas
cmp
mov
pop
mov
add
and
lods
pop
push
cltd
mov
aas
inc
xchg
mov
adc
lods
ljmpw
pop
jno
adc
and
dec
mov
in
xor
hlt
cltd
pop
out
mov
mov
pop
outsb
xor
pop
jl
dec
mov
xchg
and
jge
iret
inc
movsl
jae
xchg
inc
ljmp
std
inc
add
cmpb
out
jns
xchg
in
outsb
mov
dec
rol
jns
rol
inc
fs
and
mov
out
xchg
add
test
mov
jnp
clc
es
fcmovne
aaa
clc
pop
push
mov
in
cld
xchg
jb
jbe
mov
inc
lret
dec
pop
cmp
int3
inc
xor
outsb
mov
push
push
out
sar
dec
mov
es
dec
mov
lea
mov
out
sbb
push
stc
pop
inc
jl
mov
fwait
cmc
mov
test
test
push
adc
cwtl
rcr
inc
bound
pop
xor
cmc
push
mov
mov
cmp
dec
lret
rorl
enter
bound
imul
sahf
xor
jne
jle
in
push
loope
dec
adc
mov
daa
int3
inc
sahf
dec
xchg
outsl
sub
sub
jbe
or
cmp
loopne
pushf
mov
or
xchg
shlb
gs
pop
mov
aaa
call
div
cmp
aad
movsl
outsl
pop
fwait
add
mov
fisubs
daa
sbb
in
xchg
stos
push
call
fidivl
aam
add
push
xchg
jp
enter
adc
fistpll
adc
pop
shrl
jp
js
lret
aas
xor
in
dec
lods
and
adc
pop
pop
push
and
pcmpeqb
imulb
sti
add
pushf
jbe
div
in
icebp
je
jge
add
scas
out
stc
push
add
test
imul
mov
push
xchg
mov
push
sbb
pop
repz
and
scas
add
cld
xorl
mov
jle
xor
pop
and
cmp
xchg
nop
aam
stos
sub
sub
pop
and
jno
jmp
shll
addr16
mov
rolb
xor
xor
inc
pop
into
pop
lods
out
inc
jmp
inc
dec
or
dec
sub
ror
push
lret
xorl
jmp
push
ja
and
jo
fwait
ficoml
xchg
adc
cmc
mov
clc
mov
xchg
mov
cmpsl
into
roll
jno
jmp
repnz
fs
test
pop
sahf
aam
mov
pop
icebp
mov
add
dec
jge
mov
mov
inc
push
cmp
call
pop
out
lret
sub
push
movsl
cmp
fwait
inc
fnsave
sbb
push
shl
cmp
mov
pop
icebp
jle
push
sbb
xor
lds
daa
mov
test
xor
or
xchg
and
cltd
enter
dec
xor
fidivl
fnsave
aaa
outsl
out
pop
pop
mov
cmp
cmc
adc
pop
mov
xchg
ret
jno
pandn
add
xchg
mov
mov
aad
ss
jnp
lret
jns
mov
mov
and
inc
pusha
nop
subb
cmp
test
lea
out
pushf
call
iret
outsl
mov
inc
push
or
pop
or
packssdw
add
aaa
jl
test
cmp
mov
aad
push
xchg
testl
loope
fdivrl
lcall
imul
pusha
js
and
cmp
xlat
mov
xor
and
mov
lods
dec
cmp
lds
shll
cmp
in
ds
mov
lahf
xchg
jge
fmuls
pop
fcompl
jp
xor
mov
inc
roll
sub
dec
cld
shlb
jge
mov
or
in
jg
xchg
out
mov
jle
mov
cmp
sbb
mov
fidivrl
push
loopne
xchg
in
or
mulb
cmp
sbb
xchg
dec
xchg
or
stc
dec
push
inc
movsb
xor
dec
lock
cwtl
jge
cs
add
mov
test
jno
mov
mov
outsb
icebp
test
test
sbb
adc
insb
shll
dec
imul
sbb
cmp
dec
sub
arpl
adc
aam
int
out
or
xor
pushf
hlt
xor
xor
sbb
mov
inc
mov
ljmp
xchg
mov
jg
dec
pusha
and
xor
outsl
leave
std
outsb
and
mov
out
and
inc
xor
mov
xchg
int3
cld
dec
adc
sub
sarb
std
xor
xchg
xchg
dec
adc
je
mov
or
leave
ret
pop
pusha
ljmp
scas
mov
xchg
jbe
pop
or
fidivrl
mov
sub
cmp
cmp
and
push
mov
add
cmpsb
pop
adc
mov
mov
add
inc
fbld
xor
jle
mov
xchg
gs
test
stos
iret
ja
pop
xchg
mov
push
daa
test
je
mov
xor
stos
shl
add
dec
add
mov
add
shrl
push
sti
ss
mov
loope
in
and
mov
ljmp
imul
ffreep
cli
or
or
and
andb
in
call
mov
sub
je
pusha
in
js
adc
in
mov
cmp
repnz
mov
into
jge
mov
int
adc
xor
icebp
gs
xchg
jg
sub
fidivrl
mov
add
sti
push
sub
ret
gs
ss
push
adc
cli
loop
cmc
fildll
rclb
mov
js
mov
fldt
dec
or
xor
lcall
stc
sub
xor
leave
mov
test
into
mov
mov
fsubrl
cmpsl
and
mov
and
and
inc
mov
ss
cmp
ljmp
cwtl
ret
out
or
cmpsl
dec
outsl
and
cld
cmp
mov
jbe
sub
rorl
shlb
push
in
jle
sbb
mov
inc
ds
aas
xor
xchg
sti
not
xor
jns
test
mov
ja
jns
cmp
rorl
fcmovu
in
fsts
dec
cs
pminub
aas
sub
js
sub
pop
das
xchg
mov
sub
dec
bound
je
push
mov
adc
popa
push
out
push
or
and
push
mov
add
or
test
cs
rorb
push
push
lret
jnp
xchg
push
stos
jnp
repz
enter
jae
pop
pop
aaa
add
xchg
dec
jle
clc
test
dec
mov
test
fsubl
aad
and
enter
mov
addb
sbb
stc
push
outsb
pop
add
cmpsb
add
iret
xchg
icebp
or
adc
xlat
jnp
out
fldcw
in
insl
xlat
lods
insb
fwait
adc
xchg
pop
out
mov
movsb
cmpsb
loopne
mov
sbb
negl
in
jg
push
xchg
sti
push
xchg
aam
mov
and
aaa
mov
pop
push
xor
jmp
cmp
add
adc
and
pop
push
mov
jge
daa
lret
jns
add
pop
jnp
icebp
inc
mov
sbb
xchg
add
pop
in
xor
cmp
push
xorl
ljmp
mov
inc
cmp
iret
cs
cltd
hlt
jns
inc
mov
outsl
xchg
push
add
call
pushf
lods
cltd
xor
lret
mov
inc
aaa
popf
lret
xchg
loopne
mov
daa
push
xchg
cmp
lahf
push
push
or
in
mov
push
mov
call
mov
push
inc
push
ds
or
data16
sti
loopne
mov
or
hlt
xchg
fstps
push
int3
adc
mov
das
lods
out
cs
sbb
push
or
mov
ljmp
mov
push
outsl
dec
test
ret
adc
test
fwait
out
push
mov
jbe
sbb
out
jb
dec
test
pop
rcrb
rolb
inc
mov
cmp
or
jp
test
xor
sub
mov
daa
add
loop
fadds
fistl
mov
sub
pop
scas
test
mov
cs
clc
pop
add
fildl
das
jg
repz
lods
in
add
jmp
out
lea
xor
dec
push
imulb
adcl
xchg
stos
test
xchg
lret
divl
xchg
mov
lock
xor
cmp
and
inc
sbb
pop
and
or
jmp
dec
or
mov
stos
lret
cmp
bound
roll
xlat
sbb
lea
jb
pop
loope
stos
bound
shlb
push
jns
rcrb
js
pusha
int
iret
mov
out
icebp
sbb
pop
inc
adc
repnz
inc
sbb
mov
scas
sarb
icebp
popa
fdivs
mulb
es
jae
daa
fadds
outsb
cmp
jbe
fstps
movsl
call
int3
xor
xor
and
rol
xchg
mov
aas
mov
clc
pop
lds
push
stos
pop
and
cmp
mov
xlat
fwait
cmp
cmove
xchg
out
jns
inc
out
mov
mov
push
xor
rcll
pop
int
clc
cwtl
jne
pusha
pop
cmc
push
xchg
xchg
gs
xor
cmpsb
out
add
iret
xor
add
je
les
scas
cmp
shll
xor
sbb
pop
ja
push
push
add
fisubs
aas
xor
push
insl
jmp
cmc
push
filds
cmp
adc
test
mov
loop
int
into
lods
push
jne
lahf
cmp
lret
sti
sbb
sub
in
pushf
mov
jecxz
dec
je
pop
mov
xlat
sub
lcall
imul
jg
mov
pop
add
xchg
dec
mov
jg
xchg
jge
je
cmp
daa
sar
dec
imul
dec
pusha
inc
orl
adc
adc
stc
xchg
loope
scas
jg
in
fcoms
pop
ljmp
mov
pop
fimull
out
es
rcl
inc
jp
mov
dec
inc
inc
addr16
in
sbb
scas
pop
jbe
adc
lock
xor
add
or
or
jecxz
fs
dec
lret
push
lahf
add
leave
or
inc
mov
xchg
push
pop
fdivs
lock
sub
inc
jnp
push
aam
sbb
add
push
cli
orl
test
insl
cmpsl
ds
inc
call
push
gs
pusha
sarl
stc
mov
mov
aas
dec
jae
jae
xchg
dec
inc
out
pushf
adc
addl
rep
xor
test
mov
ss
add
xchg
sub
xor
lret
mov
xchg
sub
add
xor
jecxz
pushf
mov
aas
leave
xchg
cmp
arpl
idiv
fwait
data16
pop
xchg
repnz
cmc
mov
add
mov
adc
sbb
sub
xchg
jns
push
ja
scas
inc
pop
and
push
movsb
add
xor
ds
cmp
fldl
adc
xor
js
pop
das
jge
inc
nop
lock
jl
fldenv
test
clc
imul
faddp
dec
imul
add
jmp
pop
jne
fldenv
addr16
cmp
cmc
cmp
stc
inc
xchg
jb
xchg
push
cwtl
nop
xchg
push
fcmovnbe
pop
mov
mov
data16
inc
mov
sti
addr16
shl
xchg
test
nop
lods
mov
out
jo
sbb
mov
dec
inc
mov
sbb
sub
cmpsl
sbb
sbb
mov
xchg
std
mov
ret
push
cmp
fs
push
jge
cmp
sbb
sbb
mov
shrl
pop
xchg
aam
imul
pop
in
repnz
or
pop
jnp
mov
in
das
pop
insb
fsubrs
fidivrl
jecxz
mov
out
cmpsb
test
cmp
repnz
sbb
lret
mov
mov
and
popf
pop
sbb
add
sbb
fists
push
shlb
jmp
xor
out
xchg
sbb
mov
div
push
cmp
xchg
outsb
xchg
out
push
rolb
rcrl
xchg
pusha
std
sarl
mov
dec
xlat
lret
push
cwtl
mov
pop
sbb
inc
adc
xchg
loopne
pop
sub
and
cs
std
and
cmp
sub
cmp
clc
fidivl
cltd
jno
repnz
outsl
mov
cmovg
inc
aaa
push
sub
mov
cli
jmp
or
jnp
scas
pop
lods
or
dec
xor
xchg
lret
int3
pop
xchg
leave
aas
enter
lods
jle
inc
jp
xorb
adcb
enter
adcb
mov
loope
les
cld
pushf
cwtl
test
ficoms
hlt
push
add
shll
icebp
xchg
dec
pop
and
mov
push
addr16
jmp
decb
push
popf
je
xlat
sti
dec
int3
and
pop
push
in
jmp
shll
pop
rorb
js
aad
jg
mov
loopne
stos
sbb
xchg
or
pusha
pop
in
movsb
push
cmp
loopne
outsl
pop
mov
inc
mov
xchg
ret
cli
and
inc
movsl
stos
movsb
inc
dec
push
neg
mov
lock
insl
ljmp
mov
jge
add
test
popa
sub
fwait
or
je
add
and
scas
add
or
jae
sbb
sbb
sarb
dec
inc
xchg
pop
xchg
out
fs
scas
scas
fwait
add
jb
dec
mov
adc
aam
fidivrl
pop
mov
incl
xchg
jp
lods
sub
push
mov
cld
adc
sbbb
divl
into
adc
scas
xchg
mov
sbb
shlb
pop
fisttpl
mov
bnd
jge
jne
lods
cmc
xchg
xor
shr
sbb
xchg
es
movsb
lods
mov
or
das
push
sbb
lods
mov
popf
std
xchg
jg
add
adc
fs
stos
sbb
xor
pop
shlb
xchg
out
adc
push
loopne
jae
xor
test
sbb
mov
inc
mov
inc
call
xorb
lcall
cmpl
adc
insb
lds
dec
sbb
sbb
mov
adc
retw
cmp
jecxz
fsubrs
add
dec
cltd
out
mov
sbb
cld
in
popf
sbb
mov
push
int
adc
stos
jo
and
out
hlt
or
or
jnp
push
bound
jmp
pop
and
and
aas
dec
popa
sub
sahf
lock
shr
fsub
pop
pop
fistpll
add
push
or
shll
testl
es
mov
inc
mov
popf
fidivs
sbb
clc
dec
mov
cltd
mov
mov
cmp
mov
dec
mov
fstpt
xchg
sarl
aam
jnp
push
inc
ret
and
pop
hlt
outsl
pop
xor
int3
jge
cmp
stos
push
cmp
cwtl
push
xor
sbb
sbb
adc
xor
arpl
repnz
movsl
in
adc
nop
je,pn
mov
outsl
xor
aam
push
push
scas
or
cmc
out
pop
cmovg
xlat
mov
stc
imul
imul
data16
bound
push
lcall
mov
xchg
les
jns
cmpsl
cs
daa
mov
mov
mov
add
out
jno
in
outsl
and
in
sti
inc
fisttps
jge
cs
mov
scas
fwait
dec
mov
push
adc
xor
push
cltd
insb
loop
aaa
sahf
aad
out
sbb
enter
scas
cltd
pop
loop
loopne
repnz
enter
and
cmp
and
mov
mov
jb
push
inc
addb
std
fsincos
sub
jmp
out
psubusw
iret
faddp
in
pop
mov
rcll
adc
xchg
inc
mov
fldcw
daa
sbb
pop
mov
insl
lea
push
in
iret
out
fstpl
xor
lcall
aad
rcrl
lahf
fs
xlat
arpl
jnp
imul
jno
addl
jge
mov
add
scas
dec
cwtl
add
xchg
sahf
pop
pop
pop
bound
jbe
inc
popa
int3
add
cmp
pop
xchg
push
mov
xchg
jne
clc
push
out
fs
popa
fldenv
int
xchg
movsb
fildll
jl
mov
out
sub
daa
and
push
mov
adc
and
dec
insl
dec
sti
dec
xor
jbe
xchg
dec
subl
out
xor
mov
stos
xor
dec
shrb
cmp
divb
xor
in
stos
stos
clc
mov
insl
cld
and
inc
xor
ja
adc
iret
fsqrt
jb
sbb
not
imul
lret
insb
and
les
mov
inc
inc
push
vpsllq
and
fadd
stc
mov
inc
add
sbb
test
push
outsl
or
lods
jo
popf
dec
negl
xor
cs
imul
shll
lds
mov
or
adc
icebp
fdivp
inc
ja
mov
or
mov
and
mov
jne
inc
jnp
push
in
dec
mov
andb
cld
and
xchg
cmp
jb
mov
loope
jno
pop
or
push
lcall
mov
or
fistpl
jg
lock
fdivs
scas
sarb
push
ljmp
addr16
mov
dec
xchg
int3
js
inc
jge
push
std
ss
movsb
jle
xchg
cwtl
popa
shlb
mov
dec
int
push
ret
xor
push
xor
cmp
adc
adc
les
idivl
stc
out
and
aaa
push
xlat
xorl
jg
outsl
das
int
sbb
push
cmp
mov
test
mov
call
hlt
iret
rcll
or
mov
xor
mov
insl
addr16
add
hlt
sbb
and
adc
out
insl
pop
sbb
insl
xchg
out
jb
fiadds
popa
mov
add
pop
or
andl
mov
ds
into
call
scas
or
sub
ret
test
frstor
sub
ficompl
push
mov
cmp
pop
push
addr16
idivb
out
mov
ss
push
jo
xlat
daa
mov
rcpps
in
aas
ja
jecxz
add
inc
imul
loopne
repnz
pop
ret
loop,pt
xor
shrb
insl
mov
mov
jae
shlb
mov
lcall
insl
divb
or
mov
and
cmp
jle
push
dec
outsb
icebp
je
outsb
xchg
push
adc
lret
sub
sti
xchg
xlat
mov
jno
add
iret
je
push
movsl
dec
jge
cltd
push
cs
sti
popf
stos
cwtl
outsl
or
jmp
mov
add
xorb
xor
mov
xchg
mov
cmpsb
push
test
fadds
es
pushf
and
stos
cmpsb
lods
sarb
rorl
dec
out
pop
pop
push
loopne
jp
mov
addb
stc
push
mov
cmp
adc
fcmove
int
cmp
pop
dec
mov
pop
jo
test
sub
sbb
dec
jno,pn
test
jecxz
adc
adc
and
fs
out
and
cmp
sbb
js
repz
push
xlat
xchg
sbb
test
call
mov
cmc
pop
into
jne
xchg
ret
cmp
adc
mov
dec
xchg
jns
lcall
rcll
jecxz
mov
xchg
incb
adc
popa
jg
aas
inc
adc
mov
jae
push
cmp
jb
jl
lods
jb
mov
subl
push
mov
pusha
jmp
leave
mov
dec
movl
sub
or
pop
cmpsb
adc
sahf
pusha
out
mov
sub
test
lods
movsb
mov
mov
jg
jae
push
cs
in
call
xchg
push
jecxz
inc
cmp
jne
rcrl
js
jmp
pusha
insb
push
clc
mov
lods
test
fwait
insb
aaa
inc
inc
sbb
or
inc
sbb
sub
adc
adc
jne
fs
mov
inc
mov
xchg
adc
xchg
mov
fisttps
cmpsb
or
jbe
xlat
out
xchg
and
in
ficomps
lods
in
clc
adc
dec
aad
mov
in
fadd
mov
lds
adc
aaa
push
shl
test
sbb
jecxz,pn
jl
cli
dec
or
adc
add
add
stos
xor
mov
cmp
pop
cmpsl
xchg
cltd
sub
cli
pusha
push
out
sbb
cwtl
fnstcw
imul
push
xor
jecxz
pop
les
scas
sub
cs
pusha
xor
lea
enter
icebp
call
scas
mov
cmp
rol
inc
arpl
in
lods
int
int3
outsb
or
jb
das
mov
jnp
ds
and
mov
orb
jne
into
daa
mov
xchg
mov
pop
cld
pop
adc
in
push
flds
adc
jo
cmp
push
jmp
adc
stc
cmc
dec
ficoms
movsb
mov
fwait
aaa
lret
xorl
xor
mov
jae
in
ds
push
add
xchg
outsb
icebp
jmp
pushf
leave
fsubrs
xchg
push
cmp
dec
mov
sbb
sub
adc
lods
les
ficoml
or
loope
cmp
in
dec
in
sub
faddl
dec
push
shlb
push
loope
js
mov
push
rolb
loopne
dec
inc
shlb
cld
sub
xor
dec
xor
cmc
inc
in
aam
mov
rcll
test
xor
xor
dec
mov
pop
icebp
js
out
out
dec
push
and
fcmovu
clc
adc
mov
scas
fistpl
es
xchg
loop
adc
jg
inc
in
pop
in
imul
mov
bound
fcmovnbe
push
mov
add
jns
sub
mov
sbb
jbe
js
mov
mov
adc
mov
ljmp
and
jo
dec
dec
sub
push
rcr
push
push
mov
shrb
sub
push
add
repnz
iret
jb
and
nop
or
ds
mov
inc
pushl
add
pop
xor
adc
xor
add
insl
pop
aam
lock
jecxz
loopne
mov
shlb
scas
lods
mov
dec
pop
sbb
push
aaa
idivb
inc
orb
lds
inc
push
imul
mov
adc
sbb
cmp
mov
xorl
sahf
shlb
push
shrb
test
adc
je
cmp
outsl
push
adc
ret
mov
mov
push
inc
dec
push
sahf
pop
loopne
dec
mov
and
mov
pop
jne
sbb
aaa
test
sub
add
xchg
cld
cmp
lods
insb
cmc
or
cmp
dec
dec
sub
insl
dec
jecxz
cltd
xor
xchg
call
lds
and
jbe
dec
popf
lods
cmc
insb
test
stos
jge
stos
cs
loope
xchg
mov
cmpsl
mulb
and
rcrl
loop
in
adc
cli
mov
dec
lds
adc
int3
sbb
jmp
xchg
in
push
movsb
in
pop
scas
and
cs
xorl
js
mov
jl
or
stos
jmp
xchg
mov
dec
pop
or
stos
push
jmp
insl
mov
jns
xchg
repz
inc
add
lea
dec
and
das
xchg
arpl
in
popa
cs
mov
stos
lock
mov
dec
sbb
push
int3
jmp
and
and
in
or
sbb
cmp
mov
ficompl
push
aaa
insb
add
pop
jmp
mov
sbbl
cltd
and
sbb
mov
jmp
outsb
push
add
ss
lahf
push
ds
and
mov
rorl
adc
movsb
aam
sub
adc
mov
or
ljmp
nop
mov
cltd
addb
shlb
sbb
xchg
mov
sbbl
popa
mov
mov
les
fisttpll
cld
adc
adc
push
or
lods
mov
and
or
sahf
callw
mov
push
push
mov
loopnew
cmp
or
xor
ret
cmp
jle
out
xchg
and
pop
lahf
int
inc
hlt
mov
leavew
arpl
test
in
mov
inc
fsubr
sbb
xchg
xor
and
insb
sub
xchg
xor
xchg
gs
push
scas
adc
leave
cmp
push
cmp
je
mov
mov
mov
stos
in
pop
mov
lret
xchg
push
xchg
jge
xlat
arpl
imul
in
imul
xchg
out
sbb
or
lret
pop
inc
aam
or
mov
jns
bound
test
out
mov
fbstp
xor
mov
push
jb
and
jb
inc
hlt
jns
inc
or
and
lret
push
inc
xor
mov
push
pop
jb
xor
scas
cmp
mov
jmp
into
cwtl
dec
mov
leave
stos
adc
push
cli
shll
test
stos
stos
aas
inc
nop
jno
shr
or
mov
pop
xchg
pop
inc
ret
xchg
dec
es
adc
xor
jecxz
push
movsb
fldt
adc
jle
adc
push
stos
jnp
jns
cmp
or
aam
std
mov
cmp
imul
and
iret
xor
add
aad
jns
jo
inc
mov
mov
cmc
or
in
arpl
pop
cs
cmp
push
ficompl
sbb
cmp
mov
insl
iret
fwait
ljmp
cmp
aaa
sbb
or
loop
push
loopne
add
cmpsb
xchg
push
jecxz
sbb
mov
mov
sbb
xchg
outsl
cmp
cmp
in
xchg
cwtl
dec
into
push
ja
mov
xor
ds
xchg
mov
das
xorb
mov
inc
rorl
jl
cld
arpl
sbbl
stos
inc
jecxz
pop
enter
adcb
fs
inc
add
bound
nop
cmp
int3
dec
movsb
loope
rorl
jle
pop
push
pusha
es
cmp
sbb
xchg
inc
stos
sub
call
sub
jbe
sbb
out
jl
cs
jnp
imul
xor
lock
mov
pop
aam
popa
xchg
xchg
ljmp
lcall
outsb
sbb
mov
ds
out
scas
lock
xchg
les
shlb
sbb
dec
mov
xchg
dec
pop
or
jle
push
adc
or
div
xor
mov
popa
stos
xor
xchg
and
scas
int3
cmc
jmp
lret
mov
addr16
cli
jmp
adc
hlt
adc
mov
or
xor
cmc
mov
arpl
arpl
jnp
jb
popf
xchg
xor
dec
inc
repnz
jecxz
shl
jae
inc
jg
add
xchg
mov
sub
mov
js
test
pop
or
jg
lcall
pop
mov
lds
and
jp
jl
or
loope
push
sub
jns
lret
mov
not
lret
iret
adc
sarb
test
add
in
mov
and
adc
imul
shll
jo
and
mull
jmp
pop
into
scas
mov
outsl
or
gs
cmp
addl
cmp
push
insb
dec
cli
xchg
into
insl
dec
adc
and
jecxz
in
mov
fadd
jnp
cmp
cmp
repz
sub
push
pop
xor
pop
xor
inc
adcl
xchg
lret
cmp
xor
pop
push
in
adc
sti
mov
pop
inc
out
push
fndisi(8087
push
rcl
push
push
call
adc
mov
cld
or
mov
or
push
pop
adc
pusha
push
jo
mov
fs
stos
shll
adc
inc
repz
mov
mov
mov
sahf
xchg
and
adc
inc
fisttps
cmp
cwtl
inc
insl
scas
aad
cltd
push
jo
mov
out
test
enter
fldl
scas
mov
push
dec
aad
stos
jnp
test
pop
ret
sub
sbb
and
mov
jg
jb
xchg
pop
popf
imul
enter
jge
out
pop
dec
rcl
xor
mov
arpl
mov
dec
push
sti
add
fistpl
inc
in
jg
test
imul
dec
fldt
push
pop
rcrb
test
les
sti
adc
xchg
rolb
mov
arpl
roll
add
sbb
xchg
out
cs
pop
call
test
and
sub
mov
and
je
test
push
in
fisubrs
fimuls
loope
lret
fsubrl
fistpll
outsl
gs
out
fistpll
das
das
inc
mov
les
daa
sarl
in
insl
and
loop
pop
es
fneni(8087
pop
and
das
arpl
fs
dec
pop
movsl
cmp
arpl
shll
jecxz
pushf
mov
std
loopne
push
xorl
sarb
loope
jl
push
aam
pop
cmpb
cwtl
shl
outsb
jle
push
loope
lcall
pop
imul
addb
cltd
xor
cmp
aaa
fs
jecxz
add
dec
sahf
xchg
arpl
fs
pop
outsl
pushf
gs
xor
pop
imul
or
pop
cld
pop
xor
mulb
daa
outsb
dec
sub
stc
sub
lods
and
lea
mov
pop
xchg
fcoms
ret
jns
add
push
adc
stc
inc
cmp
sub
dec
fiaddl
mov
outsb
call
push
pushf
push
loope
into
mov
orl
sub
mov
mov
gs
mov
add
outsl
sbb
jle
mov
rorb
insl
sub
cmc
jecxz
loopne
xchg
les
das
dec
lds
outsl
inc
aas
fsubrs
mov
cmp
popa
cmp
hlt
stos
lods
mov
popf
add
cld
int
imul
push
cmp
shll
xchg
adc
adc
jo
ja
add
out
into
cmpsl
stos
shll
and
adc
ss
xchg
adc
int
push
in
mov
xchg
mov
stc
push
add
inc
mov
jnp
and
sub
lret
mov
jb
mov
icebp
pushf
jb
xchg
cli
ret
and
out
mov
lods
sbb
jb
add
int
dec
pop
repnz
fcom
idivb
cwtl
imul
cmp
jmp
jmp
add
movsb
xlat
add
and
cmc
test
lahf
xchg
xor
cli
jne
jnp
lods
in
test
mov
cmp
clc
pop
outsb
mov
lret
adc
push
xor
mov
cmpsb
mov
arpl
add
cmp
xchg
jecxz
xchg
popf
inc
mov
adc
pop
dec
in
push
dec
mov
pop
popf
daa
out
xor
js
add
loope
xor
addr16
xor
movsl
cmp
or
mov
mov
enter
cmc
jbe
jnp
push
dec
push
sbb
adc
mov
push
push
jmp
in
jb
ja
inc
insb
je
cmp
sbb
cmp
mov
gs
dec
mov
loope
nop
sub
insb
imul
inc
inc
fbld
sub
pop
or
orb
lcall
and
mov
dec
cmp
mov
das
shlb
aam
mov
enter
mov
dec
pusha
jo
lahf
fistpll
push
out
sub
dec
sbb
jle
cs
inc
mov
pop
outsb
out
out
xchg
cs
or
mov
imul
mov
subl
push
cmp
push
jbe
push
in
pop
adc
dec
dec
aam
mov
sub
dec
fs
sbb
movsl
push
jmp
inc
aad
or
dec
push
pop
sahf
cld
out
fwait
jg
sbb
scas
xlat
jne
and
cmp
popa
lea
ret
pop
xchg
stos
mov
sub
xor
aad
sbb
and
addl
pop
xchg
jnp
jbe
gs
mov
xor
stos
add
xlat
adc
sbb
lahf
imul
scas
das
fcompl
into
push
addb
xor
insb
xchg
int
ret
push
pop
sti
lret
mov
mov
xchg
push
xchg
add
ja
dec
daa
mov
sti
inc
cmp
pop
adc
cmpsb
sbb
ds
rcll
test
ret
ja
push
xchg
ret
jb
xor
loopne
arpl
push
mov
mov
fnstcw
repnz
mov
xchg
test
mov
mov
ror
adc
dec
pop
push
pop
and
int3
jno
sbb
adc
pop
inc
dec
push
out
cli
inc
scas
pusha
push
xchg
jno
jmp
dec
dec
dec
adc
in
rcr
iret
arpl
divl
adc
mov
das
dec
cld
xor
dec
lods
jne
pop
mov
and
cld
sub
outsl
jecxz
int3
test
sub
scas
fs
mov
sbb
sbb
in
jl
cmpsb
shrb
repnz
insl
gs
mov
inc
xlat
or
aam
mov
stos
xchg
scas
stos
push
out
xor
xchg
sbb
dec
adc
push
insb
xor
sbb
test
roll
mov
pop
sub
xor
push
or
mov
and
mov
jp
sarl
cld
lret
aas
les
sbb
call
xlat
pop
sub
adc
lods
scas
dec
xor
outsl
mov
jp
enter
xlat
dec
pop
sbb
fs
loop
jmp
cmp
insb
aas
cltd
mov
je
sbb
orl
inc
test
and
and
jno
mov
mov
popf
jns
out
push
dec
divb
xor
sub
xor
outsb
ficoms
sub
lods
and
insl
cmp
fwait
test
cmp
sti
loope
mov
and
pop
cmc
cmc
push
mov
jb
shll
cmp
inc
nop
ret
aas
adc
mov
imul
adc
add
out
leave
in
scas
shr
or
lcall
shlb
call
pop
loop
mov
ficoml
aaa
fucomip
and
sbb
out
mov
add
jns
stc
inc
or
out
pop
mov
cwtl
jno
and
cmp
push
cmp
mov
jno
outsb
pop
add
js
mov
fs
xor
dec
add
and
mov
push
pop
adc
cld
gs
out
push
push
cmp
jg
mov
mov
in
add
sbb
stos
lods
pop
cmp
lret
dec
out
data16
rolb
daa
test
das
iret
lret
mov
imul
and
outsl
push
and
jmp
test
xor
cltd
test
pop
sub
lea
mov
lods
xchg
push
mov
fstpt
push
push
imulb
scas
out
jae
repnz
leave
fnop
cs
xchg
mov
and
dec
aaa
call
push
add
test
sub
or
cmp
movsl
andb
push
cmp
fists
loopne
int
sbb
outsb
sbb
adc
or
insb
loop
in
dec
jmp
inc
call
rcl
cmc
adc
add
and
into
sub
pop
mov
mov
xchg
gs
movl
xchg
mov
incl
mov
test
packuswb
imul
movsb
cli
xor
icebp
mov
addr16
ja
jb
into
mov
push
bound
and
push
xchg
mov
lods
pop
inc
mov
and
adc
adc
adc
fwait
rcl
xor
add
add
js
add
push
jmp
sbb
rorl
ret
shrl
jecxz
adc
xchg
mov
push
add
xchg
sub
or
stos
scas
icebp
cmp
outsb
out
pop
mov
lret
ljmp
into
mov
mov
cmp
mov
and
stos
sbb
aam
loope
aas
push
lock
push
pop
fwait
xchg
jb
es
popa
testl
cmp
aad
mov
into
out
cli
jne
jle
shr
lods
or
icebp
pop
pop
and
jle
data16
mov
loop
fs
call
shrb
adc
cltd
mov
dec
jno
xchg
loop
fadds
fiadds
call
addb
mov
int3
rcrl
lret
int3
and
pop
jnp
adc
shr
and
xor
inc
lock
repnz
lcall
in
xchg
mov
adc
sub
mov
push
xor
inc
jnp
pop
sbb
testb
dec
mov
xchg
pop
loopne
cmc
mov
mov
rorb
rorb
test
imul
ja
mov
dec
inc
jnp
push
into
mov
sub
ret
mov
xchg
rorl
mov
clc
pop
test
popa
mov
fdivs
fcoml
jno
xchg
lods
stos
xor
or
clc
cmp
jo
in
std
mov
dec
cli
jp
scas
lret
into
xchg
iretw
cmp
addr16
sbb
xchg
std
loope
adc
imul
cmc
adc
dec
es
jmp
lock
adcb
cmp
out
repnz
aad
adc
pusha
notl
stos
es
shl
out
mov
xchg
out
mov
xor
or
and
xor
pop
dec
int
xchg
repz
clc
call
nop
test
xchg
icebp
es
arpl
and
add
inc
adcb
popf
subb
and
mov
mov
xchg
lcall
stc
in
inc
call
sbb
inc
mov
lds
pop
outsl
shrl
adc
xor
push
enter
or
mov
sub
sarl
pop
mov
jge
and
stc
add
and
add
loopne
dec
dec
push
adc
sub
pop
sub
icebp
orb
rcrb
adc
push
sbb
push
stc
mov
and
pop
xor
ds
outsb
mov
add
scas
push
cmpsl
movsl
fcoms
xorl
xor
and
mov
xor
stos
test
dec
sub
loope
push
scas
repnz
jne
in
inc
dec
or
and
inc
and
fldl
int
repnz
fcomi
stos
mov
scas
mov
lcall
movsb
aad
mov
rclb
sub
aas
mov
xor
xchg
sbb
sarl
test
sub
out
mov
mov
ret
jecxz
int
jnp,pt
adc
adc
xor
roll
pop
lret
inc
push
cwtl
and
and
xor
dec
daa
pop
mov
andb
xchg
jnp
imulb
mov
fsubs
cmpsl
mov
add
fidivrl
fmul
out
xchg
cmpsl
mov
je
adc
subl
push
inc
cmp
xor
out
popa
pop
fwait
inc
pop
mov
outsl
aad
or
adc
or
pushf
rcrl
adc
jecxz
xchg
es
rorb
stos
in
add
sbb
cmpsb
jno
loope
xchg
xor
sbb
mov
mov
push
add
es
adc
sub
adc
and
int3
popf
pop
psubsb
push
adc
mov
iret
and
out
and
pop
jbe
test
adc
jnp
scas
lods
xor
fistps
adc
dec
divl
sbb
add
xchg
sbb
mov
inc
adc
cmpsl
push
movsb
out
add
sub
lret
imul
and
mov
cltd
mov
cwtl
filds
popf
roll
lret
or
pop
jns
jmp
lret
push
xor
add
mov
test
cmpsb
add
arpl
mov
in
and
mov
adc
mov
jae
cmp
xchg
ljmp
orb
hlt
mov
es
push
xor
dec
mul
mov
rep
cmp
jge
push
aam
add
xor
sub
dec
adc
mov
inc
fdivl
mov
push
lcall
icebp
adc
or
inc
pop
fistpl
mov
out
cmpb
xchg
ss
or
cs
shlb
pop
pushf
cmpsb
jge
mov
mov
push
mov
sar
ret
lods
popf
cmp
mov
add
inc
lcall
movb
mov
xor
mov
sub
cmpsb
shr
jns
mov
rolb
cmp
mov
xor
sarl
sti
sbb
mov
nop
out
inc
add
jg
mulb
push
and
mov
sub
adc
fst
mov
jo
jno
sbb
push
jg
into
loop
sub
inc
mov
adc
push
es
in
jmp
push
and
ficomps
dec
jl
push
cmp
lret
outsb
or
jmp
mov
cld
mov
dec
ret
push
daa
xlat
xchg
add
mov
cmp
flds
leave
into
jns
mov
lahf
pop
jp
test
jg
mov
and
dec
add
pushf
jae
push
cmp
push
cld
xchg
popa
push
out
push
aaa
aad
mov
add
add
add
ja
xlat
and
push
inc
ret
jae
mov
xor
clc
mov
xor
cmp
inc
loop
inc
in
mov
dec
out
rorb
pop
insb
in
inc
stc
sti
push
sbb
inc
mov
dec
dec
jo
xchg
push
mov
jmp
stos
mov
daa
aam
jbe
stos
lahf
xor
pushf
mov
pushf
pop
fucomi
xchg
push
jmp
adc
mov
orb
cltd
pop
jl
and
ret
in
pop
mov
mov
les
ja
or
pop
cmpsl
push
mov
cs
repz
dec
push
and
dec
and
cmpsl
jmp
clc
rorl
outsl
outsb
sub
xor
scas
or
lea
push
cmc
lock
hlt
push
imul
test
inc
aas
sbb
outsl
mov
or
add
lds
adc
movsb
daa
ja
dec
fucomp
dec
add
mov
bound
lock
sbb
pop
add
addb
int
loopne
out
jmp
xor
mov
pop
fsts
pop
outsl
jns
in
jb
or
cmpsb
adc
sub
or
sub
mov
inc
jge
cli
lea
dec
fnstsw
dec
push
dec
loopne
push
fmuls
mov
dec
dec
mov
mov
jp
sub
lret
nop
rcr
dec
xor
xchg
pusha
fdivrp
dec
pop
loopne
jns
aaa
pop
repnz
or
adc
pop
jns
mov
dec
insb
insb
dec
cmp
icebp
outsl
jle
dec
fs
movsb
mov
push
and
shrb
imul
mov
xchg
mov
mov
mov
cmp
dec
das
xchg
sbb
repnz
mov
and
push
push
xchg
pop
lahf
lret
xor
and
lods
inc
sbb
and
aad
add
ret
and
pop
mov
rclb
lret
inc
icebp
adc
fsubs
sbb
test
sbb
repz
aad
dec
jnp
dec
inc
hlt
das
and
cmp
faddl
and
out
inc
adc
push
clc
dec
pushf
and
flds
push
jne
ss
out
test
mov
es
lret
sbb
or
mov
xor
push
cmpsb
in
test
dec
ljmp
out
jae
movsb
adc
mov
xor
pop
push
lahf
std
xor
in
push
push
jecxz
inc
mov
fnstcw
jne
inc
mov
adc
aad
pop
or
and
lds
or
shl
xor
shlb
cmp
jo
leave
xor
pop
push
jge
and
dec
iret
mov
push
mov
aam
pop
push
sub
popa
int
lds
or
sarl
sub
in
sahf
pop
adc
adc
scas
sbb
mov
lret
shlb
idivl
inc
cmpl
xchg
pop
push
jge
add
push
daa
int
mov
or
shlb
cwtl
xchg
or
pop
ljmp
mov
mov
mov
out
cwtl
add
lea
mov
mov
sub
and
fptan
mov
sub
mov
xor
ret
inc
cmp
cltd
mov
xchg
and
lds
jle
push
mov
push
xchg
nop
daa
lret
cmpsb
sbb
addr16
loope
loop
push
mov
mov
cli
ja
cltd
outsl
xor
ljmp
fmul
stos
insl
cli
or
movsl
mov
loopne
or
cmp
jge
lds
ret
sub
mov
pop
mov
dec
clc
mov
test
adc
mov
js
out
push
sub
icebp
pop
shrl
std
xchg
stos
jns
xchg
dec
inc
xor
lahf
negl
pushf
les
popf
push
xor
and
addr16
rcrl
int3
int
sbb
lods
mov
adc
scas
pop
dec
iret
adc
mov
push
std
mov
mov
cmp
cwtl
push
int
cmp
ljmp
adc
dec
inc
xor
or
dec
cmpl
cwtl
or
jb
leave
jbe
outsb
subl
subl
mov
cltd
sbbb
mov
bound
fimull
cli
out
in
aas
or
into
out
add
sarl
mov
mov
imul
sarb
mov
mov
cltd
fwait
iret
mov
insb
fs
jns
out
sub
sbb
sbb
gs
push
jnp
lds
sub
add
xchg
xchg
lds
sti
pop
clc
jl
clc
inc
fisubl
enter
push
push
mov
xchg
xchg
movl
sbbl
jae
pusha
inc
lock
cmpsb
ljmp
mov
jmp
in
sbbb
inc
loop
jno
hlt
hlt
pop
adc
jne
repz
mov
es
imul
imul
test
xchg
dec
adc
pop
test
add
and
bswap
fwait
les
hlt
adc
pushf
decb
jns
loop
int3
pop
shll
ficoml
in
jae
add
fbld
inc
fs
outsl
aas
rol
mov
or
adc
data16
sbb
cltd
pusha
mov
jnp
js
push
mov
fxch
adc
pop
mov
sbb
stos
mov
jl
scas
xchg
xchg
insb
dec
iret
loopne
xlat
ss
pop
push
enter
inc
and
and
dec
fimull
push
mov
jge
xchg
and
lods
jp
jnp
or
mov
inc
daa
sub
add
jmp
insl
inc
es
pop
mov
fwait
or
daa
cmp
shll
pop
lods
enter
jp
and
push
loope
fldt
cmp
fidivrl
jne
cmp
jbe
ds
xor
xchg
in
inc
mov
pop
lcall
lods
aam
jg
add
push
lcall
push
mov
adc
inc
sahf
push
sahf
pop
adc
enter
push
sbb
mov
pop
jns
cli
xchg
mov
sbb
daa
cli
sbb
adc
dec
fs
aam
fidivrl
das
pop
cmp
jne
sub
rcr
xchg
pop
sbb
das
cltd
cmc
cmc
xor
and
lret
push
pop
in
cmp
in
cmp
rorl
add
jecxz
orl
add
pop
pop
mov
or
rcrb
sahf
rorl
andl
leave
xor
push
xor
xchg
stos
push
daa
jno
daa
int
sbb
and
push
jns
clts
std
std
cmp
xor
shlb
cmp
add
push
adc
dec
push
cmc
or
call
mov
lock
hlt
add
and
mov
aad
ja
xor
fildl
movsl
nop
add
xor
inc
or
dec
fbld
dec
imul
add
into
add
and
ljmp
fldcw
push
sahf
pop
lods
lcall
inc
push
or
cltd
mov
dec
push
addr16
cld
inc
xor
mov
sbb
decl
scas
add
in
daa
sti
outsl
daa
adc
mov
jecxz
jge
sub
clc
cmpsl
push
clc
jns
stc
adc
fst
cld
xchg
stos
call
jno
push
imul
mov
push
lods
lods
or
jecxz
sahf
movsb
jae
sub
mov
rsqrtps
xchg
or
add
lods
je
les
adc
idivl
ljmp
test
cmp
in
sbb
scas
rcr
dec
shrl
fldt
xor
pop
aas
mov
test
lea
mov
shrb
mov
cs
and
mov
daa
mov
inc
out
add
sub
int3
dec
pop
jp
bound
push
lahf
cli
dec
mov
sbb
test
pushf
fnsave
loopne
push
into
popa
leave
stc
cmc
es
and
cmpsl
inc
xlat
adc
sbb
sbb
sub
push
or
and
mov
push
jecxz
cltd
pop
mov
int
or
out
cld
lds
dec
pop
movsb
fwait
jo
and
mov
lods
icebp
mov
test
cmpsl
jp,pn
out
pop
mov
lret
fiadds
lret
lea
sub
jmp
xlat
and
lock
into
jno
hlt
enter
and
bound
adc
cmp
xchg
call
xchg
jnp
sub
sbb
xor
mov
stc
dec
test
mov
fildll
mov
mull
out
cltd
movsb
xchg
out
cmpsb
and
jge
imul
inc
push
bound
loope
test
add
jge
xchg
mov
sub
adc
adc
push
push
cld
popf
fnsave
xchg
lcall
inc
insb
nop
jp
pop
fistl
sub
movsb
out
mov
sbb
xor
das
ret
cmp
imul
stos
push
hlt
aas
adc
and
lock
sti
mov
cli
mov
mov
xor
mov
ret
jmp
scas
into
xchg
ja
dec
cmc
mov
fdivp
xlat
in
popl
popf
xor
sbb
mov
cld
cmc
popa
inc
add
mov
xchg
push
pop
aas
lods
jne
mov
fs
cltd
enter
or
jmp
cmp
pop
cmp
in
repz
mov
aad
fs
adc
jl
inc
scas
push
push
daa
push
ret
and
mov
clc
mov
popf
or
dec
call
cmpsb
std
and
insl
dec
insl
cmpl
sbb
rclb
rorl
int
test
in
stos
aam
mov
mov
mov
test
andb
cmpl
push
test
iret
mov
cmp
ret
roll
cwtl
jnp
test
scas
adc
add
push
cmovp
fistl
ljmp
sti
pop
and
stos
push
ret
mov
lea
push
xchg
sub
jno
cli
and
arpl
sub
jl
xchg
insl
push
hlt
rcll
sub
fiadds
push
jo
mov
aad
mov
jmp
push
and
aad
loope
fistpll
push
test
bound
mov
push
cmp
adc
in
es
and
adc
movb
shlb
and
mov
sti
mov
call
mov
dec
xchg
xchg
sub
js
in
es
adcb
ror
enter
out
lods
pop
orb
add
mov
inc
dec
ret
int3
cmpsl
loope
popa
adc
test
mov
mov
mov
int3
rsm
cmpb
mov
xchg
jle
mov
sbb
imul
dec
mov
lods
into
aas
inc
jno
movmskps
and
jae
jo
or
add
dec
loop
test
or
data16
je
mov
mov
cmp
lcall
shl
xchg
mov
pusha
test
stos
stc
shl
test
lret
pushf
arpl
cmc
filds
mov
lret
dec
rcrb
fistps
mov
mov
xchg
pop
and
rorb
cmpsb
out
dec
ss
mov
pop
js
dec
sub
mov
js
aaa
mov
cmpsl
add
into
inc
push
xor
cmpsb
daa
push
jbe
jne
push
les
mov
call
imul
dec
dec
xor
dec
outsb
dec
mov
xchg
cmpsb
mov
data16
pop
mov
add
mov
orb
test
out
fsubl
dec
ljmp
icebp
jbe
clc
loop
pushf
mov
sbb
push
mov
loop
or
adc
es
fs
sarl
ja
fistl
lret
jp
lods
shr
aas
les
push
mov
jae
sub
shr
jge
mov
ror
cmp
loopne
adc
pusha
lret
aad
or
sbb
out
pop
iret
or
add
jl
cmp
push
and
in
out
aas
inc
loope
stos
in
into
lahf
inc
sub
xor
sub
lret
or
add
mov
rcr
stc
dec
mull
pop
push
mov
xchg
mov
sub
jns
mov
outsb
out
cmpsl
out
mov
popf
pop
jle
cs
cs
data16
fldt
cmpl
pusha
shlb
loop
sub
jo
sub
std
inc
xchg
adc
fdivp
mov
push
sarl
fstpt
pop
cwtl
inc
ljmp
decb
push
xor
mov
ret
out
mov
ret
mov
mov
mov
mov
xor
mov
xchg
fdivrl
jg
mov
addr16
fimuls
xor
xchg
mov
jp
xor
inc
jecxz
jb
in
and
mov
or
das
add
mov
movsb
ds
push
xchg
jae
lcall
lods
mov
stos
pop
adc
or
xlat
arpl
mov
shrb
ret
sbb
xor
adc
add
test
mov
repz
xor
cmp
movl
les
add
in
montmul
cmpsb
inc
imul
lret
clc
inc
push
out
mov
or
rorb
roll
pop
cmp
out
dec
orb
fldz
imul
je
mov
mov
or
fldt
adc
loop
bound
add
xor
pop
ds
mov
das
inc
jne
cmp
mov
sarb
mov
pop
mov
lcall
roll
pushf
pop
mov
xor
iret
shl
pop
popa
popf
adc
cmpb
jecxz
cld
jmp
lret
mov
stc
jmp
lret
xor
ret
aas
out
data16
xchg
dec
sbb
mov
add
and
iret
fstpt
lret
dec
cld
adc
repnz
add
into
pop
popf
pop
jbe
dec
add
push
add
aaa
inc
cmp
add
mov
xor
ss
scas
mov
into
sub
into
mov
popf
mov
popf
mov
rcrb
jne
subl
jae
fcomps
out
sub
mov
adc
adc
and
sub
movsl
push
jae
push
sub
lods
aad
fs
fstpt
sub
cmp
add
dec
xor
pusha
fs
clc
popf
sbb
pop
ss
mov
insb
adc
test
mov
stos
shll
mov
push
mov
dec
jb
popf
js
xchg
call
adc
sti
or
ss
std
pop
jo
add
push
cmpsl
jle
xor
popf
pop
fsubrl
inc
push
das
test
nop
sub
mov
fisubrl
in
int3
push
pop
dec
xchg
sub
pop
fs
mov
jo
movsb
pusha
sub
ds
mov
mov
stos
xchg
or
test
or
lret
je
sti
js
aad
pop
inc
jmp
add
idiv
jg
jae
add
xchg
out
adc
sub
test
xor
cmc
mov
lret
aam
and
jg
addr16
mov
cmp
cmpsl
pop
pop
xor
dec
ss
mov
iret
cld
dec
add
xorb
dec
sahf
shll
scas
ficompl
clc
cmp
insb
jae
jmp
add
sbb
xchg
lcall
mov
mov
or
lds
push
loopne
xor
cwtl
pushf
subb
jg
fistpl
push
out
mov
xor
ficoms
or
sbb
imul
ret
sbb
loope
xor
jnp
push
push
stos
sbb
adc
ds
rol
cmc
adc
jnp
ret
push
push
dec
or
xchg
andl
fiadds
fsubrs
xchg
rcrb
movsb
mov
mov
stos
pop
icebp
mov
or
add
mov
fstpt
dec
repz
push
outsl
push
lock
cmc
outsb
sarl
sbb
les
or
inc
mov
shlb
push
icebp
adc
lock
pop
dec
jge
int3
enter
xchg
call
dec
in
bound
cmp
divb
add
cwtl
xor
push
mov
lock
movsb
aaa
les
in
push
cs
ss
inc
pushf
sub
inc
int3
inc
cmp
sbb
out
int3
lahf
arpl
and
jae
push
mov
xchg
fsubl
mov
adc
mov
orl
add
xchg
testb
mov
leave
outsb
sub
ret
mov
fbstp
add
add
inc
push
or
fisttpll
adc
xchg
jns
sbb
enter
insb
add
in
repnz
pop
aas
fidivrs
pop
jl
int3
inc
pop
mov
dec
popa
ljmp
cmpb
fdivl
shr
bound
sub
sub
xlat
mov
xchg
jnp
push
repnz
loopne
xchg
stos
fs
add
inc
adc
and
mov
cmp
jmp
mull
xor
fs
pushf
xor
sub
dec
sbb
loopne
in
insb
inc
repz
xchg
mov
jbe
insl
add
aad
pop
les
out
sbb
fdivrs
xor
ja
mov
pop
imul
or
into
pushf
fstp
dec
jge
gs
pop
arpl
inc
repnz
movsl
and
rolb
inc
cmp
cmp
dec
into
dec
mov
out
mov
mov
mov
xchg
sub
loop
lods
jmp
xor
out
ljmp
jne
or
push
add
rorl
push
divb
das
sub
cmp
mov
xchg
pop
mov
pushf
addr16
int3
out
inc
xchg
pop
lret
push
xor
pop
jmp
imul
inc
int
sbb
inc
pop
push
aad
push
scas
cwtl
sub
xchg
xchg
test
je
xor
mov
sub
call
mov
inc
push
andb
enter
fisttps
outsl
inc
dec
inc
mov
mov
notl
int
inc
cwtl
push
dec
push
jmp
fldt
lret
mov
les
andl
rcr
sahf
inc
jbe
notb
pop
ret
xchg
icebp
fcmovb
sub
jns
mov
inc
jge
aas
jo
sahf
fsubrl
mov
or
sub
out
or
mov
pop
mov
cmp
dec
rcrl
es
or
lcall
jb
mov
hlt
int3
mov
and
in
xchg
fwait
je
fbld
xchg
cmp
mov
mov
enter
dec
jg
inc
out
popf
scas
jno
add
test
pop
pop
stos
adc
mov
les
xor
cltd
dec
mov
xchg
cmp
sbb
outsl
insb
std
sbb
xor
xor
arpl
cli
addl
pop
mov
push
xor
daa
jo
jmp
jns
in
push
daa
je
ret
fidivl
push
mov
adc
cli
into
pop
pop
dec
cmc
leave
dec
mov
lods
int
jmp
and
push
sbb
and
xchg
sbb
xchg
sub
adc
flds
jecxz
xor
fstpt
pop
pop
sub
push
push
sub
jne
or
push
lods
push
dec
dec
or
js
lock
and
xor
mul
cmp
arpl
dec
adc
jmp
mov
imul
lock
or
not
das
aad
std
sbb
pop
jno
jns,pt
fcoml
popf
cltd
inc
aaa
sub
insl
or
cmpl
xor
push
adc
pop
or
mov
mov
adc
lock
popa
fdivrp
push
inc
scas
xchg
imul
xchg
clc
mov
dec
data16
adc
xlat
incb
jmp
push
inc
mov
iret
pop
aaa
jle
xchg
xor
out
imul
imul
cmp
call
lahf
idivl
je
pop
in
rcll
sub
lcall
js
mov
into
inc
incl
sub
cmp
push
jmp
lret
push
add
xchg
jmp
mov
ljmp
addr16
enter
imul
sbbb
aam
ret
insb
jno
xchg
mov
pushl
or
das
call
cld
nop
jge
jle
cmp
fisttps
xchg
shrb
jae
push
lods
sub
rclb
mov
mov
pop
push
inc
in
mov
and
jmp
mov
testl
aad
test
sbb
xchg
dec
les
data16
jne
or
jne
mov
xlat
cmp
pop
pop
inc
and
cltd
mov
cmp
dec
push
incb
mov
icebp
mov
mov
movsl
push
jl
lret
sbb
mov
test
jl
or
push
out
mov
lcall
daa
mov
sub
or
mov
aaa
or
mov
shll
mov
jne
loop
cld
dec
in
dec
loopne
dec
lods
add
adc
push
adc
stc
mov
inc
iret
andb
dec
fucomip
cmp
cmp
sub
fmulp
in
enter
enter
add
xchg
fildl
add
aas
xor
imul
jb
xchg
ljmp
jnp
inc
test
mov
pop
inc
lea
inc
daa
mov
in
or
orb
mov
sbb
inc
or
dec
ret
in
lock
jbe
mov
xor
dec
cmp
and
fcoml
sbb
or
mov
adc
iret
ret
ds
or
cwtl
cmp
in
loop
xor
lods
mov
dec
fisubs
stos
repnz
cmp
mov
sub
mov
ret
jg
push
mov
push
dec
aaa
out
mov
inc
add
adc
pop
loope
into
push
movsl
or
cmp
cmp
test
push
sub
mov
add
stos
dec
popf
mov
int
out
mov
and
fwait
pusha
loopne
scas
mov
push
aaa
dec
xor
or
jae
sbb
ret
loop
push
rorl
aam
dec
xchg
fwait
adc
les
shlb
sub
add
mov
test
shll
test
mov
bound
cmp
into
and
icebp
stos
test
in
shl
sti
mov
xchg
insb
or
inc
jo
jns
cmc
jae
hlt
dec
aam
int
faddl
inc
or
fsubl
ret
insb
loopne
pop
or
in
repnz
out
outsl
add
jge
xchg
loop
rsqrtps
mov
sub
mov
dec
pop
inc
dec
push
js
mov
lods
jl
pop
nop
mov
adc
and
fldl
sbb
push
out
jl
outsl
in
mov
cld
dec
adc
bound
or
and
stos
pop
mov
pop
xlat
fnstsw
loope
xlat
dec
pop
jle
inc
mov
inc
pop
test
inc
lea
out
adc
mov
xor
pop
jecxz
cmp
dec
jecxz
fsubp
mov
cli
push
shrl
jge
adc
jb
fucom
mov
adc
addr16
fstps
mov
adc
ds
jp
jno
shrb
sbb
or
xchg
xor
stos
mov
lret
dec
js
and
test
cmp
xchg
mov
scas
aad
push
dec
and
mov
sbb
mov
xlat
gs
mov
cmp
out
pusha
movsb
or
mov
call
dec
shl
adc
jl
stos
out
fisttpl
inc
push
jbe
stos
xor
push
addr16
sub
mov
pushf
and
dec
mov
sbbb
popf
lret
jns
add
jns
xor
inc
lahf
stc
negl
les
jmp
jmp
jl,pt
cs
sti
hlt
divl
mov
cmp
mov
nop
sub
gs
xor
mov
or
jmp
test
xor
push
mov
fwait
repz
jg
icebp
dec
lock
fsts
add
sti
jno
jge
xor
jno
lret
mov
xor
sahf
or
mov
out
loop
adc
popa
ss
pushl
rcll
and
pusha
sub
test
pop
pop
mov
test
out
loop
gs
enter
in
nopl
cmp
mov
mov
cmp
int3
ljmp
inc
dec
movsb
mov
aad
adc
test
jo
pop
dec
jg
dec
xchg
fcomp
sti
dec
mov
pop
adc
nop
and
xchg
and
xor
xchg
cmp
gs
shll
mov
and
pop
int
shl
int3
lcall
mov
sbb
jge
xchg
sarl
bound
bound
adc
push
dec
shll
shll
xchg
pop
jae
out
sahf
pop
stc
je
and
xchg
ret
xor
pop
and
push
int3
sbb
test
add
add
das
add
mov
xor
ja
xlat
inc
cmp
or
aam
subl
testl
test
mov
lcall
mov
test
fiadds
xacquire
xchg
int
mov
dec
arpl
add
sbb
add
lcall
movsb
rolb
or
mov
out
out
xor
add
lock
push
xchg
or
fidivl
je
scas
jo
stc
aad
mov
cwtl
cmp
loop
push
dec
lock
pop
xchg
xchg
pop
push
mov
jo
inc
jle
mov
shll
cmp
out
cmp
leave
add
and
in
lds
mov
test
mov
sub
fldenv
sub
test
jmp
adc
js
sub
out
push
push
pop
and
cmc
and
cmc
jbe
loope
shrd
and
test
insb
dec
aad
shll
stc
mov
cmp
scas
push
lods
mov
inc
aam
lock
int
fists
in
sahf
daa
or
test
inc
stc
stos
jecxz
ja
shlb
mull
int3
jbe
clc
dec
pusha
shrl
sub
enter
outsl
ds
cmc
test
enter
fnsave
out
mov
loop
jp
scas
add
cmc
cmp
fbstp
cmc
adc
cmp
dec
sub
cmp
fdivs
les
fdivr
std
inc
mov
mov
enter
loope
testl
shr
cmp
inc
sub
xchg
bound
jnp
ret
adc
or
ljmp
jl
push
data16
xor
xchg
cld
popf
mov
mov
jnp
sbb
push
pop
decl
xchg
push
mov
sbb
imul
mov
es
add
cmc
icebp
call
or
dec
cmpsb
push
insb
add
out
les
jb
in
mov
lcall
inc
sbb
in
mov
mov
out
paddd
loope
inc
movsb
fcomps
jl
inc
insl
ret
inc
cli
dec
xor
test
mov
clc
or
inc
aad
push
int3
aaa
shll
mov
fisttpl
xchg
mov
icebp
and
scas
mov
outsl
test
out
divl
inc
lea
mov
and
sub
loope
fcmove
test
mov
ljmp
in
inc
xorl
jno
mov
xlat
push
sahf
stos
test
jle
shlb
xchg
sbbl
sub
mov
pop
push
or
lds
fimuls
push
adc
mov
pop
scas
cltd
mov
mov
adc
imul
ds
adc
xchg
jg
mov
add
popa
pop
add
ret
push
enter
jp
jnp
cld
sbb
faddl
adc
dec
lods
push
mov
ret
test
outsb
popa
stos
dec
mov
dec
mov
mov
pop
stc
test
fucomp
mov
inc
loope
sbb
ja
ret
shl
fnstsw
ret
ret
test
stc
push
mov
xchg
mov
divl
xchg
fistl
mov
aad
push
int
pop
movsb
inc
jmp
sbb
and
or
mov
ja
sub
jo
lret
add
popa
inc
enter
test
das
sub
mov
inc
pusha
ret
lds
push
mov
inc
sbb
cmp
xchg
mov
dec
xor
iret
fdivl
xor
xor
push
cltd
and
filds
xor
pop
je
jmp
fs
je
dec
das
adc
push
daa
notl
adcl
push
test
sahf
lock
cmp
scas
not
stos
pop
pop
dec
int
pop
aam
adc
out
es
fsubr
xor
mov
jns
dec
out
sbb
push
andl
add
mov
test
sbb
adc
xor
pop
inc
pop
mov
adc
mov
add
dec
jmp
cmp
inc
push
popa
add
mov
roll
mov
xchg
pusha
mov
test
xchg
push
cmp
ret
pop
in
fwait
loope
xchg
cwtl
in
pop
negb
lcall
cs
xchg
push
push
stos
js
je
stos
dec
mov
mov
pop
push
pop
adc
data16
inc
and
lret
dec
pop
xchg
stos
xor
popf
int
or
jmp
cmpsb
out
popa
mov
ficoms
jns
sahf
mov
inc
std
inc
xchg
sub
in
xchg
or
popa
lcall
push
loopne
sub
rcll
iret
fnstsw
pop
mov
pop
xor
nop
sub
cmp
ljmp
jg
stc
xor
das
cmp
push
call
aam
loopne
xor
cwtl
mov
dec
mov
sahf
mov
mov
sbb
mov
mov
xchg
mov
loopne
jl
add
pushf
cmp
enter
xchg
sti
repz
mov
lods
push
imul
pushf
lds
mov
jecxz
test
pop
push
and
push
mov
mov
jmp
mov
mov
fidivrl
scas
aad
outsb
mov
dec
ds
imul
repnz
scas
add
or
mov
push
jno
sbb
pop
push
gs
stc
or
sbb
push
lret
std
imul
pop
inc
js
mov
mov
ror
inc
outsl
outsb
and
xchg
jnp
outsw
sbb
fmuls
lea
inc
mov
pop
in
mov
ret
dec
cmp
loopne
xchg
rclb
cmc
sub
cmc
out
mov
aaa
and
sub
and
sarb
cli
cwtl
nop
mov
cmp
fwait
inc
in
lea
or
repnz
lds
sbb
or
or
mov
add
mov
xor
and
cmpsl
orb
popa
and
xchg
out
fadd
fchs
push
mov
push
ret
outsl
imull
int
inc
repz
dec
icebp
pop
sbb
add
jo
cmc
xchg
sub
cmp
add
xchg
pusha
push
loope
int3
scas
mov
dec
mov
sbb
sub
stos
pop
jl
cmp
mov
cltd
popf
mov
sbb
movsb
popa
sti
mov
mov
sbb
das
xor
ret
int3
mov
ljmp
or
sbb
cmp
enter
adc
and
sbb
paddd
pop
pop
push
push
mov
xor
xchg
das
mov
lret
xchg
ds
cmc
das
sub
fmull
mov
fs
mov
mov
mov
pop
sub
out
stc
rcll
mov
loopne
movsb
sti
sahf
shrb
pusha
shl
outsb
cmp
push
pop
arpl
cli
rcl
test
cli
idivb
push
pop
add
cmp
arpl
inc
mov
popa
jg
in
mov
ficoms
xchg
insl
cs
sub
pop
int3
xchg
mov
jle
sub
cld
push
in
cld
mov
insl
mov
cmp
and
pop
call
jge
jmp
and
aaa
dec
xchg
fisubs
cltd
jns
in
xchg
or
mov
repz
ficomps
ret
sub
ljmp
dec
mov
pop
ret
add
enter
inc
pusha
cmp
inc
ficomps
mov
adc
sub
ljmp
scas
cs
dec
xchg
dec
push
push
leave
outsl
xchg
mov
mov
or
fidivl
add
or
pop
outsl
fdivrl
push
mov
xor
push
fcmovbe
notl
in
or
lcall
es
in
add
insb
sub
mov
pushf
or
jmp
push
inc
jecxz
imul
dec
in
cmpsl
dec
or
sub
pop
dec
dec
in
push
inc
pop
mov
mov
jne
outsb
call
cld
outsb
push
mov
fmuls
dec
mov
or
lods
cltd
scas
and
and
ljmp
je
dec
xor
mov
xchg
out
movsb
popf
ss
mov
lahf
xchg
push
lea
sbb
sarb
les
sbb
nop
dec
xor
jnp
in
les
out
lds
add
push
xor
test
jecxz
or
sbb
xlat
sbb
fdiv
add
or
out
add
fcmovne
test
dec
dec
inc
mov
inc
push
mov
leave
cwtl
jb
out
mov
pop
mov
pusha
jge
out
cmp
fldt
int
pop
xchg
outsl
pop
pop
cmp
xchg
aas
iret
mov
push
stc
or
pop
sub
in
xor
enter
adc
xchg
or
loope
leave
icebp
imul
out
cmp
popf
mov
xchg
inc
sahf
in
jle
cwtl
repnz
jg
push
or
mov
stc
fcomip
mov
push
lods
mov
lret
inc
je
nop
cmp
fwait
mov
fs
outsb
cmp
mov
cmc
pop
sub
ficoml
jmp
add
jl
fwait
stos
cmp
daa
push
mov
cli
movsb
adc
or
or
push
ja
xor
std
adc
add
inc
push
aam
jns
ja
push
xchg
cld
jns
cli
dec
jmp
sbb
mov
cs
sbb
cmp
rcl
stos
add
mov
and
and
and
pop
and
out
loop
cmpsb
and
rclb
cwtl
mov
or
cli
xor
push
or
sahf
shrb
sub
push
into
sbb
mov
orl
dec
call
inc
mov
lds
pop
jecxz
and
movsl
dec
add
out
rclb
xchg
cmp
push
clc
enter
cmp
mov
adc
test
add
pop
fisubl
adc
mov
call
imulb
mov
mov
adc
xchg
mov
inc
shll
pusha
cmp
pop
inc
fistpll
fs
fcompl
cmpsl
cmp
loopne
test
jne
pop
or
mov
icebp
in
cld
dec
sbb
and
pusha
sbb
mov
dec
mov
je
nop
out
movsb
or
pop
inc
jnp
inc
cmpsb
xchg
shrl
sbb
lret
les
add
xchg
push
xor
mov
mov
inc
out
rcrl
js
loope
dec
xor
sub
push
lods
ja
ss
int3
sbb
mov
mov
pop
stos
sarl
dec
jge
and
sbb
push
outsb
fldenv
sub
fbstp
jge
sub
adc
hlt
shl
adc
adc
pop
xorl
pop
fldcw
mov
shrb
mov
push
shll
rolb
xchg
in
sub
adc
sti
mov
daa
jae
adc
ss
jl
inc
pop
mov
fildl
jp
mov
dec
scas
ss
mov
cmpsb
mov
insb
pusha
in
jmp
das
sbb
lods
aaa
shr
pop
and
cs
pop
and
pop
sahf
lods
pop
cmp
dec
xchg
inc
inc
stc
and
addr16
loop
bound
xor
mov
int3
int3
addr16
dec
xchg
into
idivl
mov
bound
or
or
orb
xchg
das
fsubl
lcall
xor
dec
cmp
pop
icebp
cmp
jecxz
cli
int3
inc
pmuludq
mov
xchg
mov
std
aad
in
mov
into
daa
fdivrl
xor
xchg
ja
aad
insb
cmp
mov
jge
xchg
jmp
cmpsl
sbb
or
int3
ret
mov
sbb
psubw
sub
mul
test
movsb
mov
mov
stos
mov
push
or
addb
lods
pop
cli
jno
inc
into
popa
mov
jno
mov
adc
and
add
mov
add
outsb
out
cmp
mov
test
movsl
fisubs
sbb
pop
lret
orb
lea
push
mov
rclb
mov
fldt
and
sub
aas
stc
jmp
push
adc
lock
cmp
pop
jmp
xor
daa
jl
sub
cmc
jmp
aam
out
ljmp
arpl
scas
pop
add
test
outsl
xchg
xchg
cmp
sbb
leave
jp
out
add
mov
inc
and
fdiv
pop
addr16
add
push
push
test
mov
test
adc
xchg
aam
das
and
sar
mov
ja
rol
cli
loope
mov
enter
inc
sbb
xor
fdivrs
dec
or
vpsraw
fldcw
scas
jbe
xchg
xor
dec
lods
mov
je
pop
gs
and
nop
lahf
xchg
std
dec
stc
shlb
jns
cmp
push
lods
ret
call
clc
jo
sub
push
outsb
xor
pop
movsl
pop
or
cmp
scas
or
adc
dec
pusha
test
and
inc
add
repnz
mov
mov
mov
shrb
mulb
pop
sub
and
test
inc
lcall
out
dec
pop
mov
loopne
cmp
inc
push
icebp
adc
inc
or
movsl
push
jge
push
cmpsb
dec
fsubs
into
mov
daa
inc
and
stc
ljmp
mov
or
subb
fsub
stos
xchg
and
cli
cwtl
cmp
xor
push
jle
or
lods
dec
jbe
repz
in
inc
aad
iret
addr16
mov
mov
scas
inc
sbb
jae
scas
lret
or
xor
pop
in
andl
enter
xchg
or
loop
jp
adc
jp
in
pusha
in
fisubrs
pop
fdivs
idiv
push
data16
mov
or
xchg
dec
js
dec
jnp
push
mov
ljmp
lret
sbb
sbb
add
movsb
sub
add
imul
std
iret
push
cmp
out
imulb
gs
adc
ja
icebp
pop
insb
sti
dec
pusha
iret
ss
rcrl
push
cmp
xchg
insl
mov
pop
push
jnp
pop
push
jbe
test
add
clc
into
mov
push
dec
mov
icebp
inc
subl
je
call
sub
fs
popa
mov
mov
cmpsb
push
enter
les
lret
add
inc
repnz
xor
jmp
cmp
addr16
movsl
mov
popa
push
je
push
jl
pop
inc
xchg
icebp
mov
adc
cmp
push
sbb
cs
das
mov
lods
lods
ss
fistpl
cwtl
add
jne
cmp
dec
insl
insl
pop
jne
jns
sbb
test
cmp
data16
or
das
pop
adc
popf
cmp
and
mov
sbb
ja
ja
popl
dec
lcall
push
outsl
fdivrl
sub
cmp
push
ret
dec
es
pop
mov
and
add
test
jo
in
cmp
xor
jb
fs
mov
push
sti
pop
lods
xchg
fnsave
mov
pop
shlb
pop
in
dec
inc
lret
mov
and
lcall
jae
je
or
cli
inc
sbbl
cmp
dec
xchg
daa
dec
mov
push
arpl
call
lret
and
sbb
or
mov
in
lods
in
int
inc
adc
cmp
gs
pop
xor
inc
iret
jp
mov
std
fs
sub
push
lret
sti
xchg
cmpsb
leave
add
shl
add
mov
addr16
int3
or
lret
push
ljmp
mov
loopne
push
test
and
adc
call
jp
xor
nop
leave
lcall
or
jae
xchg
push
sub
cltd
xchg
add
fwait
mov
dec
push
jns
ja
stos
mov
jg
xchg
xchg
insl
pop
inc
mov
mov
out
repz
cwtl
test
fwait
int
cmp
mov
insl
xor
pop
push
xor
dec
dec
std
jl
xor
aas
mov
mov
hlt
jo
fisttps
sub
xorb
shrb
fisttps
and
and
mov
movsb
jo
ss
lock
or
ret
fidivl
roll
mov
push
stos
push
scas
mov
cli
stos
sbb
divb
bound
xchg
repz
lret
repz
outsl
or
push
outsl
ds
scas
sbb
neg
test
jg
ret
aam
addr16
push
xlat
inc
adc
xchg
mov
cld
sbb
xor
xor
jge
sbb
sar
jb
ds
jecxz
pusha
dec
add
out
int
mov
std
shlb
inc
and
scas
dec
scas
inc
push
sbb
test
xor
mov
lods
sarl
adc
or
jb
gs
sub
imul
jno
add
or
push
aad
inc
roll
push
mov
xor
mov
outsl
rorl
and
or
repz
cmp
lahf
and
rcrl
rclb
pop
push
enter
aaa
sbb
sbb
sub
vpcmpeqd
scas
movsl
add
lds
jnp
in
xchg
pop
mov
sbb
ficoml
test
clc
pusha
pop
cmp
add
mov
cmpsl
popa
push
int3
leave
add
mov
or
mov
ror
add
sarb
pop
out
sbb
cmp
mov
sbb
pop
mov
jp
testl
lret
test
or
dec
fs
test
test
shl
mov
in
xchg
loopne
scas
dec
pushf
xchg
jno
pusha
mov
insl
push
pop
sbb
out
mov
lds
inc
jne
fdivl
shll
xor
mov
out
or
adc
loope
and
fwait
out
xor
mov
pop
push
pusha
cmovbe
in
push
test
mov
cmp
or
adc
aas
inc
mov
out
ret
jle
mov
js
xor
insb
lret
outsl
cmc
stc
or
fcompl
xor
dec
lea
xor
xchg
idivb
jnp
bound
and
xchg
mov
mov
icebp
aas
sub
push
pop
push
adc
loop
arpl
mov
mov
mov
mov
xchg
jbe
mov
pushf
incl
fldenv
dec
popf
std
in
lods
xor
int3
je
sub
push
test
add
mov
xor
cmp
outsb
jbe
lcall
or
sbb
daa
xchg
lea
in
lds
in
cmp
mov
in
movsb
jno
out
mov
jno
insb
inc
mov
inc
cmpsl
or
mov
push
dec
in
cltd
mov
lret
cmp
add
stos
adc
hlt
or
enter
shrl
in
mov
daa
sarl
mov
loop
lahf
or
sbb
xchg
je
mov
push
pop
adc
popa
jecxz
daa
or
fcoml
rcl
dec
pop
mov
pop
inc
or
cmpb
addr16
push
xchg
or
jnp
inc
cmp
cmpsl
sbb
sbb
push
dec
and
fstp
jbe
lahf
mov
shl
pop
mov
test
and
int
pop
xchg
subl
or
movsl
sti
int
jl
enter
out
push
inc
es
push
loop
mov
jno
add
out
insb
addb
push
aad
stos
insl
push
rorl
fcmovne
mov
mov
xchg
in
jns
imul
in
pop
lahf
insl
rcrb
imul
lret
push
fbstp
mov
scas
push
pusha
pop
cmp
cmpsl
mov
ljmp
daa
add
loopne
sbb
nop
cmp
and
adc
mov
jne
xchg
outsl
aas
ret
mov
lahf
insl
and
outsb
and
sti
mov
mov
jns
addr16
dec
jns
addr16
push
in
inc
xchg
sahf
mov
inc
ljmp
pop
lahf
push
push
ret
fs
pop
inc
into
jmp
repz
mov
mov
xor
hlt
outsb
enter
std
cmp
pop
mov
jmp
xchg
mov
mov
adc
jmp
bnd
nop
jne
nop
mov
or
ret
push
nop
jae
xchg
inc
mov
xor
sbb
jns
lds
jp
out
mov
stos
out
push
jge
in
scas
jp
sbb
pop
jp
adc
stc
inc
jl
sahf
mov
mov
dec
stos
in
test
jbe
mov
or
loope
aaa
call
cmpb
cwtl
fcomi
xchg
loopne
adc
cmp
mov
inc
das
xchg
fincstp
xor
mov
jo
pop
sub
ja
int3
into
mov
aaa
push
pop
dec
lret
ja
cmpsb
pop
or
lret
scas
js
jnp
push
pop
sarl
lds
outsb
es
shrl
pop
sbb
inc
sbb
cmp
cwtl
xor
xchg
cmp
and
xchg
sub
or
lds
xlat
js
icebp
cmp
or
push
les
push
inc
push
scas
add
pop
mov
pop
std
xor
or
xchg
fmuls
mov
pop
sbb
push
xchg
xchg
cmc
es
xor
adc
cli
lock
sub
repnz
inc
ljmp
adc
sbb
pop
sti
loope
sbb
dec
or
pop
out
mov
sti
cmp
scas
xor
dec
scas
inc
sub
mov
icebp
scas
fwait
inc
pushf
lahf
int
jno
fimuls
jle
insb
or
idiv
rcl
pusha
adc
enter
pop
push
push
int
fs
fs
lret
xchg
jae
test
xor
movsb
stc
ss
pop
stos
push
jmp
fs
sbb
fistl
nop
fnstenv
rorb
adcl
sbb
pop
pop
and
mov
dec
pop
loop
roll
cmpsl
or
inc
sbb
shlb
add
bound
mov
dec
cmp
inc
cltd
outsb
imul
push
fisubrs
dec
in
adc
add
fs
cld
std
data16
imul
imul
aam
pop
outsl
mov
pusha
sub
mov
scas
xor
xchg
mov
mov
das
sbb
loope
mov
xor
mov
movsl
xor
sub
xor
nop
iretw
sahf
xchg
cmp
inc
mov
jg
stc
or
jnp
jmp
in
mov
push
shl
shrl
lods
mov
aaa
xor
and
data16
cltd
pop
shlb
sbb
shlb
inc
inc
mov
cmp
or
pop
pop
das
loop
sbb
pop
test
shl
pop
mov
not
cmc
cmpsb
cmp
mov
inc
cmc
cmpl
push
or
add
push
mov
sub
bound
sub
insl
push
push
cmpsb
sbb
mov
jne
pop
inc
mov
scas
or
stos
fsts
ja
shrb
cmp
faddp
cmp
add
aad
fmulp
cmp
lret
in
and
icebp
pop
push
jmp
inc
xchg
into
cld
sbb
mov
je
idivb
loopne
add
lret
sti
shll
xchg
jmp
cld
mov
jnp
sbb
outsb
scas
clc
jae
inc
pop
test
je
ds
cmp
pop
fmull
sbb
sarl
arpl
cmp
out
insl
xor
into
in
adc
jecxz
lret
popw
fidivs
aad
iret
gs
imul
xor
loope
push
or
pop
nop
xor
mov
loope
push
xor
cs
pusha
adc
pop
jge
test
loopne
jno
sub
shlb
cmp
jl
dec
sbb
test
jno
cmp
add
sahf
jle
xchg
ret
or
sbb
mov
xchg
imul
mov
lahf
out
enter
enter
rolb
test
int
xor
insl
add
jno
pop
call
xor
and
and
inc
call
lret
ds
pushf
xor
mov
mov
pop
cltd
and
and
fdivrl
cli
xor
popa
inc
pop
sub
ds
bound
pop
cmp
les
push
out
mov
rep
pop
sbb
or
rcl
faddl
inc
pop
mov
nop
mov
sub
inc
sub
imul
lods
orps
add
adcl
add
in
stos
push
sbb
push
pop
sub
add
xchg
rclb
pop
lods
lret
jb
shlb
test
dec
mov
ljmp
mov
add
or
mov
scas
xchg
dec
mov
mov
popf
imul
imull
push
into
sub
fdivs
mov
int3
in
push
pop
push
enter
inc
fnstcw
stos
add
sbb
fsubrs
das
lea
aas
dec
pop
adc
sahf
aas
cmp
notl
adc
lahf
xchg
pop
int
cmp
fldt
ds
and
pop
fxch
int
cmc
jne
cmp
push
sti
dec
dec
inc
pusha
in
push
ss
pop
shrd
test
scas
into
add
jb
mov
orl
cs
jl
stc
test
daa
fmull
or
mov
xor
inc
rcrl
addr16
cmc
popa
test
push
out
jo
xchg
cmc
shlb
or
jnp
cmp
mov
mov
outsl
scas
push
mov
add
repnz
addr16
sarl
lock
scas
ret
pop
subl
adc
jle
jge
pop
incl
inc
xchg
cmp
lods
repz
fbstp
fisttps
mov
mov
fildl
ljmp
sar
mov
xchg
jno
les
mov
inc
jne
pop
orb
imul
ja
push
div
pusha
sub
mov
xor
mov
aas
push
loope
and
arpl
mov
xor
jp
pop
mov
add
ret
idivb
mov
lods
and
mov
mov
cmp
rcr
cmp
in
fcomps
jno
pop
and
jg
add
adcb
mov
cmp
lcall
adc
push
ss
xchg
jno
cmp
std
sub
in
pushl
push
insb
pop
cmp
fdivl
lret
dec
sbb
pop
dec
cmpsl
or
fistpll
test
sub
pop
push
mov
or
outsl
cli
daa
enter
push
cmpsb
mov
xor
aad
in
xchg
jns
jne
popa
lcall
and
mov
icebp
lahf
push
inc
rorb
mov
shlb
mov
xor
inc
loope
lods
mov
xor
or
pop
decl
fmull
xchg
lock
test
gs
nop
adc
mov
scas
rcll
pop
sbb
mov
aad
xor
adc
cmp
add
addl
mov
int
dec
lock
and
rolb
shl
loopne
or
and
jbe
and
lret
sti
jb
gs
mov
lret
fildl
mov
sbb
orl
dec
pop
push
adc
rclb
and
mov
pusha
jns
xchg
xor
xor
shll
sub
jne
and
out
das
adc
and
pop
xchg
jno
es
and
push
mov
sbb
insl
cmpsb
ror
sub
int
inc
stc
xor
lret
mov
dec
mov
sbbb
adc
xchg
xor
dec
mov
fmull
jp
jnp
mov
addl
mov
or
aas
clc
mov
mov
stos
dec
mov
shr
inc
scas
fucomip
mov
iret
subb
jno
mov
add
cmp
inc
push
mov
add
mov
inc
sahf
scas
les
jg
jmp
outsb
js
lods
mov
fadds
xchg
xor
pop
push
lock
xchg
dec
jmp
push
push
inc
lea
jb
enter
iret
inc
fs
add
insb
mov
pop
and
sub
icebp
and
aaa
clc
pop
sub
and
jbe
cmp
pop
dec
sbb
in
movsl
call
mov
xchg
scas
sub
xchg
pop
push
push
out
les
or
xor
into
enter
lds
inc
cmpsl
mov
lahf
scas
pop
fsubl
fsubr
cmp
pop
out
cmp
pop
fisubs
ljmp
test
movsb
cmp
mov
or
and
sub
sbb
out
dec
fs
std
inc
out
js
cmp
movsl
mov
mov
xchg
mov
in
icebp
loop
psrad
sbb
pop
divl
out
data16
xchg
cmpsb
in
je
es
arpl
mov
pop
or
dec
and
shlb
or
bound
pop
inc
inc
leave
adc
add
dec
nop
pop
ja
icebp
cwtl
scas
leave
xchg
test
mov
out
bound
pop
popf
xchg
xor
rcll
cltd
inc
mov
das
adc
fwait
push
movsl
aas
mov
call
mov
test
xchg
sbb
aam
sbb
popf
cmp
xlat
push
mov
mov
jne
adc
cs
data16
fisttps
iret
or
mov
sahf
insb
addr16
mov
dec
add
stc
inc
clc
shrb
jp
aam
xchg
inc
jge
inc
xchg
mov
jbe
xor
cmp
loop
lock
push
push
lock
mov
adc
test
xor
pop
or
xor
scas
add
pusha
js
xchg
jno
cmpl
mov
sub
imul
mov
mov
push
dec
int
stos
test
iret
dec
xchg
pusha
stc
rcrb
or
out
sbb
inc
sub
repnz
inc
faddp
mov
fs
sbb
jecxz
pop
jne
idivl
icebp
ret
jns
pop
cmpsb
cmpsb
divb
int3
pop
push
lea
pop
clc
cld
cmpl
xchg
daa
pop
ja
xchg
mov
test
fnsave
nop
loop
dec
mov
jmp
rolb
sub
outsb
jo
popf
fstpl
sbb
outsb
lods
pop
xchg
js
add
daa
test
xchg
sbb
daa
imulb
in
dec
out
mov
mov
and
dec
sub
loopne
jle
mov
bound
ficoms
jae
and
call
mov
out
inc
test
and
xchg
mov
xchg
sbb
inc
inc
rorl
jecxz
pushf
push
int
cmpsb
test
sub
mov
je
ss
scas
aaa
data16
das
pop
xchg
shl
pop
and
rcl
test
cmp
jmp
inc
mov
xchg
repz
pop
dec
loope
sbb
loope
inc
mov
push
dec
add
mov
stos
shr
jno
cs
movl
pop
push
stos
pop
pop
rcrb
pushf
add
mov
push
scas
xor
sbb
lcall
testl
sbb
pop
pop
mov
out
and
jmp
jecxz
jle
pop
dec
mov
dec
call
or
lcall
movsb
lret
pop
insl
orb
pop
adc
xchg
fdivp
sbb
jae
outsl
shlb
iret
stos
loope
in
gs
pop
sub
xor
mov
out
xchg
cmpsb
outsl
sub
add
xchg
mov
out
inc
jns
jae
jbe
mov
sub
rolb
mov
ss
mov
cmpb
mov
test
stos
mov
and
mov
push
into
xor
test
int3
jecxz
jns
push
dec
sub
lds
mov
inc
cmpb
mov
mov
xchg
mov
and
ret
clc
call
stos
ja
dec
out
jno
movsb
mov
mov
xchg
cmp
cmp
add
jb
sub
in
mov
rcl
mov
xor
hlt
dec
es
scas
sub
mov
mov
or
adc
fxch
xor
test
ja
imul
das
gs
push
int
sub
cltd
pusha
add
xchg
xor
push
sbb
cmpsb
push
repz
lahf
sarl
fisttpl
mov
icebp
rcrl
inc
xchg
sbb
sti
idivl
addl
nop
adc
test
sub
mov
push
sahf
stos
loope
rorl
mov
jmp
lea
subb
dec
insb
inc
cmp
xchg
dec
push
mov
popa
lds
inc
aam
jge
test
fcmovnu
pop
in
dec
xchg
mov
mov
xchg
cmc
mov
xchg
leave
movsl
mul
push
lahf
lea
xor
hlt
jbe
mov
pop
mov
daa
sbb
popa
inc
push
js
hlt
xor
or
sbbb
and
cld
dec
cmp
cmpsb
adc
mov
popf
xchg
aad
les
clc
jge
or
out
sbb
sub
data16
sub
je
push
mov
push
xor
sub
adc
mov
jae
dec
push
or
in
nop
cmc
xchg
push
mov
jbe
add
scas
or
stos
fidivrl
pop
ret
sub
das
sbb
pop
and
cmpxchg
aaa
ljmp
add
incl
pop
popf
shrl
or
push
jle
sbb
jnp
jae
scas
jo
dec
fs
inc
inc
xchg
dec
int3
ss
std
out
out
and
or
enter
jmp
mov
xchg
ds
push
movsl
cwtl
dec
rcrl
out
jecxz
and
pop
pop
jmp
push
lahf
ret
mov
and
pop
rolb
and
div
mov
xor
insl
in
or
int
fucom
push
iret
bound
sub
repz
and
mov
mov
add
sbb
cmp
jl
jne
insb
mov
es
mov
pop
cmp
and
add
push
sub
or
inc
mov
mov
mov
add
je
hlt
lea
inc
mov
rorb
ret
pop
loop
adc
xchg
aad
push
sbb
dec
mov
cltd
adc
es
in
ds
pop
mov
movsl
inc
mov
mov
fs
call
movsb
nop
jmp
out
add
aaa
push
xlat
jb
hlt
cltd
stc
in
std
inc
data16
mov
inc
push
jle
pushf
insb
lock
pop
xchg
cwtl
rolb
inc
sbb
out
sub
xchg
push
int3
les
in
mov
add
pop
mov
push
mov
popa
shll
xchg
inc
jl
arpl
aam
jno
pushf
in
and
dec
xchg
pop
mov
scas
subb
lock
out
movsb
insb
xor
sub
std
cmp
push
xchg
scas
popf
lcall
inc
idiv
int3
push
xor
xchg
or
mov
xor
stc
mov
lods
jp
pop
in
add
sbb
shll
cli
xor
xor
lret
enter
mov
shrl
lods
sub
iret
shll
fwait
insl
xchg
jl
xchg
nop
or
mov
dec
jge
push
jne
std
sti
hlt
inc
pop
std
ljmp
or
jb
in
mov
push
mov
stc
lret
test
je
dec
lods
arpl
mov
dec
dec
jmp
cli
xchg
add
jae
mov
sbb
hlt
dec
or
insb
inc
lahf
sbb
mov
hlt
int
es
cmc
dec
xchg
test
fmul
std
fistl
repnz
cmp
xchg
aaa
xor
push
insb
sub
popa
xor
and
inc
ret
dec
rolb
lods
and
mov
daa
pop
dec
mov
insl
pusha
xor
in
xor
or
sub
dec
lret
mov
lcall
add
jnp
add
and
add
mov
andl
loop
jns
xchg
pusha
rcr
jmp
pusha
ds
imul
sub
fmull
call
lods
mov
inc
dec
sbb
push
push
pop
dec
fdivrp
mov
sbb
sub
lahf
ss
mov
into
stos
push
cmpsl
aam
popf
rcrb
dec
inc
dec
stos
out
loope
xor
xor
add
xchg
or
adc
roll
mov
dec
fimuls
pop
movsb
mov
sti
pop
mov
sub
push
jno
inc
mov
or
cmpsb
pop
sahf
and
mov
cmp
sub
fmuls
and
sti
xchg
sub
push
incb
ret
pop
lahf
aam
insb
dec
xchg
cmp
lret
rorl
test
je
insl
scas
pop
inc
pop
ss
push
aad
fwait
mov
test
xchg
add
hlt
pop
fdivrs
cmpb
clc
push
sbb
push
or
mov
clc
and
dec
out
aad
daa
sub
and
into
dec
xor
fmulp
sub
stc
xchg
sbb
sar
push
addb
cmp
xchg
sbb
push
int
jb
push
sub
cmpsl
stos
xchg
arpl
push
cmc
inc
or
daa
sub
and
push
js
sti
jmp
loopne
lock
movsb
mov
mov
lods
mov
pop
sbb
jo
dec
ljmp
mov
or
js
or
and
cwtl
es
mul
out
pop
stos
fists
dec
loop
xchg
xor
jecxz
nop
xor
and
faddl
push
mov
test
imul
and
nop
add
mov
push
or
gs
rorb
incb
adc
nop
movsl
out
sbb
rorl
mov
lcall
jmp
dec
lods
jns
in
in
adc
rclb
inc
mov
pop
and
scas
lods
push
add
int3
pop
sbb
mov
ret
and
mov
dec
jle
int3
test
sub
and
out
das
xor
test
push
xor
cmc
mov
cmp
inc
in
jecxz
scas
lods
pop
cmp
jnp
enter
and
out
inc
pushf
lea
jg
and
and
incb
pop
hlt
lods
jl
add
pop
jae
sbb
xchg
outsb
push
or
call
stc
push
cmp
aas
mov
push
movsl
jecxz
xchg
push
pop
orl
loopne
sbb
pop
add
xor
cld
mov
int
push
dec
pop
cmp
mov
std
hlt
test
mov
and
push
out
inc
fdivrs
adc
add
fisubrs
out
cmp
mov
push
dec
pop
mov
enter
xchg
repnz
cli
or
sub
ljmp
jmp
xchg
mov
cmpsl
and
lods
inc
and
ds
fldl
push
movsb
pop
pop
push
sahf
decl
push
popl
fdivrp
mov
mov
mov
mov
mov
jae
xchg
xor
push
pop
cmp
xlat
leave
lret
xor
sahf
adc
ficoms
push
ja
andb
arpl
push
pop
outsl
push
inc
cli
sub
mov
adc
lret
push
pop
popf
dec
xor
lcall
ss
jbe
sub
rcrl
and
mov
lahf
repnz
mov
jnp
cltd
push
imul
pop
push
dec
rcll
push
movsl
js
pop
add
loope
popa
xor
mov
sbb
mov
stos
dec
push
pusha
data16
jge
adc
cwtd
loope
cld
jbe
aam
repnz
repnz
or
sti
inc
cmpsl
loop
mov
mov
mov
inc
mov
jnp
in
mov
jb
shl
arpl
fldcw
jbe
push
insl
push
bound
xor
push
cmp
lahf
mov
add
jns
mov
pop
ret
fnstcw
cmp
jae
xchg
pop
pop
push
int3
adc
xor
adc
adc
test
adc
lcall
jp
loopne
aad
ljmp
aam
xchg
xor
fs
cli
inc
cltd
cmpsl
sub
stos
add
mov
and
or
popl
or
fdivs
pop
adc
fisttpl
sub
mov
shll
dec
xchg
xchg
cwtl
outsl
sub
addr16
pusha
push
iret
testl
je
mov
ss
popf
test
leave
fsubp
shrl
stos
jb
mov
mov
jbe
push
loop
add
fs
push
in
jb
daa
dec
mov
push
dec
bound
dec
dec
lods
pop
inc
xchg
push
or
gs
aaa
insl
dec
xchg
dec
lcall
push
sti
in
icebp
insb
imul
push
push
stos
icebp
rol
cmp
add
dec
push
sahf
pop
inc
xchg
jns
daa
ja
loope
aam
int3
lret
cli
add
sbb
insb
out
mov
xor
mov
inc
test
inc
and
repz
adc
cli
icebp
push
les
xchg
cmp
or
xchg
mov
dec
inc
push
std
jns
stos
mov
mov
loope
pop
fwait
jbe
rcr
push
fs
in
jp
pop
sbb
mov
push
fwait
imul
aad
lods
popf
jb
push
adc
in
or
scas
iret
adcb
pop
test
cld
outsb
xlat
mov
loope
jmp
loope
adc
out
nop
enter
daa
mov
ja
insl
fs
cwtl
add
or
inc
lret
cmp
push
popf
mov
sub
adc
sahf
and
pop
leave
xor
jmp
xor
div
adc
sbb
loope
lahf
adc
pop
iret
dec
add
cmp
cld
mov
divl
fdivrl
dec
mov
stc
enter
and
mov
mov
rcll
cmc
mov
push
je
cltd
mov
sub
jmp
and
and
sahf
shll
in
add
int3
shll
je
add
fdivr
cmpsb
mov
jns
mov
cmp
jmp
inc
lret
mov
xchg
in
xor
lea
xor
pop
pop
sub
pop
cmp
loop
pop
adc
stos
jp
daa
inc
pop
fidivs
ret
push
dec
jg
xor
sub
jl
arpl
imull
mov
dec
adc
fimuls
push
lcall
add
mov
loop
pop
sar
sbb
xor
cmpsl
jecxz
cltd
xlat
jge
xor
inc
mov
mov
push
jae
cld
adc
push
imul
lds
inc
cltd
test
mov
mov
loope
push
imul
andb
cmpsb
pop
jmp
adc
mov
test
xor
adc
cld
movsl
out
inc
lea
arpl
cmp
adc
dec
jecxz
pop
mov
mov
shrl
int3
sbb
sbb
and
cmc
mov
xor
xlat
ds
stc
addr16
js
or
andb
mov
mov
movsb
dec
dec
fdivs
ljmp
out
fs
or
das
add
int3
gs
adc
jg
and
inc
mull
mov
sub
mov
push
lret
cmpsl
cmp
cmp
stos
sarb
sub
sbb
mov
call
and
jnp
daa
jle
xchg
imul
jae
jno
das
cmp
adc
xchg
push
dec
dec
popf
jnp
xor
ficoms
aas
cmpb
mov
test
mov
cmp
mov
lds
xor
movsb
mov
fdivl
andb
fbstp
jmp
push
and
and
lret
scas
repnz
jb
xor
clc
cmpsl
or
cmp
mov
aad
addr16
nop
fwait
cmpsl
sar
cmp
sub
cmp
lea
jecxz
pop
or
jae
mov
lods
and
sbb
bound
cmp
jb
xchg
add
sub
dec
mov
mov
repnz
jle
mov
jmp
jns
cmp
push
pop
stos
sub
outsl
jp
xchg
xor
movsl
iret
jge
shlb
mov
sar
sbb
mov
push
pop
test
rorl
inc
cmpsl
orl
or
and
ljmp
repz
fidivl
pop
mov
rolb
leave
xchg
lret
ret
movb
int
clc
sub
mov
clc
ja
and
lds
bound
adc
jmp
xor
push
pop
lcall
sbb
stc
xor
stos
jns
push
imul
xor
popl
inc
pop
sahf
imul
adc
mov
out
adc
and
and
sbb
mov
adc
sbb
cmp
aas
jb
xor
je
or
shl
data16
adc
mov
xor
push
js
ret
cmp
jae
sbb
push
adc
scas
in
sub
lahf
mov
in
mov
pop
push
xor
test
lods
shrb
nop
clc
lds
outsl
bound
subb
push
aaa
aas
cmp
sub
sub
out
orb
push
mov
xchg
xor
xchg
arpl
addb
arpl
jnp
jb
insl
iret
push
into
jecxz
ds
fstl
mov
or
xor
mov
fwait
dec
push
fdivrp
mov
xor
loop
xor
adc
inc
gs
call
lds
inc
and
icebp
xor
push
clc
cmpsb
lret
test
out
lods
cmp
int3
mov
xor
cli
pop
rcrb
cmpsb
mov
xlat
mov
shlb
faddl
push
inc
ljmp
mov
or
pmulhuw
pop
inc
xchg
sub
fdivs
xchg
inc
mov
push
jns
shrb
or
or
add
subb
mov
nop
cltd
lea
negl
sbb
inc
movsl
pushf
jbe
cmp
or
mov
outsl
or
add
out
loop
mov
mov
repz
sarl
inc
or
mov
bound
jns
cmp
dec
sbb
xchg
repz
push
fldt
push
sub
mov
adc
sbb
xor
std
jb
ja
or
clc
pop
pop
sbb
push
lea
frstor
lcall
movsl
cs
xchg
inc
test
data16
iret
lahf
test
mov
daa
sbb
js
xchg
aam
mov
and
insb
std
popa
fsubr
push
leavew
ljmp
hlt
mull
mov
cmp
xchg
jle
jnp
mov
pop
adc
adc
mov
imul
mov
test
lods
inc
mov
clc
or
mov
std
std
movsl
jmp
sub
int3
stos
adc
mov
fnstcw
dec
jl
cmp
push
ret
icebp
lcall
rolb
shll
mov
xor
mov
lret
mov
or
jae
mov
xor
test
insb
cmpsl
and
pop
out
pop
mov
ret
gs
push
jmp
inc
scas
sbbl
pop
les
aas
arpl
arpl
add
pop
xchg
cwtl
mov
das
mov
pop
xchg
ficoml
clc
rcrl
cmp
sarb
lcall
mov
or
int
in
scas
or
lcall
dec
cmc
push
cli
repz
xchg
sub
mov
xchg
stos
scas
mov
data16
xor
and
cmpsb
inc
sub
dec
lcall
in
in
test
movsb
add
cmpsb
pop
dec
out
xlat
in
push
sahf
in
push
fcomps
cli
addr16
or
mov
popa
push
mov
xor
mov
mov
stos
jmp
addr16
fwait
add
hlt
notl
pop
cwtl
sub
jl
mov
lea
push
pusha
int3
push
repnz
jnp
bound
call
dec
adc
pop
cwtl
jno
or
shr
xchg
xchg
push
mov
sub
mov
ja
lea
cmp
sub
rcll
add
sbbl
add
dec
imul
adc
pop
sub
scas
aad
test
lods
cmpsb
nop
jge
sbb
in
nop
xchg
test
ret
push
aad
push
and
lret
adc
pop
push
repnz
add
mov
and
xor
scas
cltd
cs
xor
jecxz
rolb
jmp
add
jp
pop
adc
inc
gs
shrb
lret
push
sarl
sbb
dec
daa
inc
ret
sbb
push
mov
cmp
push
shrl
fisttpll
cmp
cmc
sti
jbe
rclb
sub
roll
inc
ficoms
insl
ljmp
add
fdivrs
mov
adcl
je
sub
inc
stc
lret
and
mov
cmp
ret
sbb
sahf
lret
sbb
cmp
add
adc
ret
imul
jle
sbb
mov
xchg
out
enter
das
pop
pop
xchg
xlat
aad
gs
mov
icebp
ljmp
add
jns
mov
lahf
push
adc
test
ja
fstl
loope
inc
aam
mov
in
out
fsts
xlat
push
xor
sub
clc
cmp
fld
xchg
and
xor
fisubrl
xchg
movsl
or
lcall
inc
enter
bound
arpl
insl
or
inc
lds
cmp
mov
or
xor
cli
test
cmp
ljmp
in
or
sbb
adc
sub
sbbl
dec
cmp
jno
inc
pop
aas
bound
fwait
or
jmp
inc
dec
push
mov
jle
std
sub
fcomp
cwtl
adc
mov
pop
data16
and
iret
fidivs
daa
jno
xlat
mov
jno
cld
cwtl
or
fwait
jne
jne
pop
sbb
or
test
test
push
sti
push
pusha
cld
daa
int
xor
xchg
fisttpll
out
iret
popl
int3
mov
ret
inc
ror
scas
inc
shr
pop
jno
shl
lds
mov
call
cmpsb
mov
cmp
xchg
lea
sbb
add
mov
clc
jle
fstpt
scas
or
repz
xor
mov
jmp
hlt
mov
jmp
xchg
lea
pop
add
mov
aam
mov
std
xor
pushf
or
int3
inc
push
in
dec
ret
jmp
push
int
push
cmovs
fsubrp
xor
xchg
jnp
nop
xchg
pusha
lock
push
sub
add
jge
inc
mov
loop
mov
aad
movsl
std
hlt
sub
dec
outsb
setnp
aam
sbb
push
adc
mov
push
sti
fwait
pushf
xchg
cli
xor
xchg
scas
ficoml
lock
pop
jge
in
add
pop
jno
push
lahf
mov
int3
shll
push
mov
aas
jp
popf
sub
popa
push
mov
imul
xor
repz
fyl2x
cmpsl
inc
xor
mov
das
ret
test
and
xchg
adc
mov
pusha
pop
paddusb
mov
jecxz
bound
cmpsb
sub
popa
fs
or
push
xchg
std
cmp
jl
outsl
mov
or
sub
push
add
jne
fisubrl
adc
inc
outsl
subl
push
dec
sbb
fiadds
sub
aas
decb
push
or
in
mov
shlb
sbb
in
add
cmpsl
rclb
in
outsl
popa
in
mov
dec
or
psraw
xchg
inc
xchg
popf
mov
or
faddp
xchg
xor
lods
and
push
or
adc
jle
fwait
or
mov
rcr
pop
std
ret
push
add
xchg
or
pop
mov
mov
mov
mov
mov
adc
sti
sub
jns
mov
mov
test
lds
lock
fidivs
or
addr16
fdivrl
adc
testl
lret
jno
mov
xor
call
push
mov
xor
mov
sbb
int3
xchg
in
js
add
cli
xlat
scas
and
mov
dec
movlps
lret
push
jp
pushf
les
outsb
aaa
cmp
pop
pop
movsb
jg
test
mov
outsb
xchg
jge
rorl
jg
fildll
hlt
sbb
push
pop
push
call
adc
add
aam
test
popf
nop
inc
pushf
int
xor
cmp
shr
cmpl
jne
pop
gs
insb
cli
jns
fldt
popf
pop
jb
cmp
shrl
jns
sub
add
mov
lahf
jle
and
mov
pop
ljmp
jmp
jno
orl
xchg
fisttpll
in
popa
ret
cs
insl
rclb
push
or
gs
ja
sbb
xor
out
outsl
lret
mov
gs
mov
cwtl
or
xor
push
or
xor
mov
les
mov
mov
loopne
and
sbb
xchg
sbb
mov
cwtl
jne
loop
push
testb
or
in
nop
mov
xlat
mov
lret
lahf
data16
push
jb
push
and
xor
dec
ljmp
jo
fs
adc
add
pop
add
mov
bnd
push
cmp
mov
jns
dec
inc
daa
pop
les
xorl
out
sbb
lret
clc
push
mov
pop
push
fdivrs
repz
dec
mov
jge
pop
mov
xchg
sbb
dec
cmp
aam
pusha
jge
and
leave
xchg
push
sub
cld
cwtl
inc
lret
or
imul
fiaddl
push
popf
xor
ds
inc
aas
and
mul
mov
jb
fidivl
push
jg
cmpl
repz
inc
das
dec
pop
fs
movsl
sub
scas
push
scas
sub
imul
daa
jecxz
pop
mov
lret
or
cltd
mul
pop
sbb
push
into
ret
lds
nop
lret
int
cmp
rolb
ficoml
fdivrl
sbb
mov
sbb
xchg
pushf
popa
jae
xchg
inc
jbe
insl
das
arpl
push
scas
hlt
sub
mov
xor
jge
mov
lret
jb
xlat
and
push
adc
push
sbb
cmp
pop
pop
xor
in
mov
inc
dec
sub
hlt
paddw
popl
int
dec
and
inc
into
ja
mov
sarb
mov
mov
push
outsl
jmp
nop
pop
imul
cmp
test
sub
push
fwait
andl
fnsave
fildl
xchg
push
dec
mov
ja
pop
lods
mov
jle
test
lahf
or
fisttpl
jecxz
sbb
or
ret
sbb
in
dec
fnstcw
xchg
or
jge
mov
ret
adc
loope
out
fwait
enter
mov
insl
mov
stos
aaa
mov
inc
mov
push
push
lock
sub
push
rcrl
pop
icebp
mov
mov
lds
subb
inc
mov
mov
xchg
stos
or
imul
xlat
push
add
aad
cmp
shl
push
mov
jp
lock
sub
sbb
add
push
fwait
in
or
or
cmp
push
movsb
aad
and
mov
cltd
dec
pop
push
dec
sbbl
pop
mov
push
sbb
dec
test
push
nop
sti
addb
inc
insl
sub
sbb
outsl
andl
and
cld
rolb
xchg
cltd
stos
js
mov
jge
shl
xchg
bound
ds
adc
insb
imulb
lock
int
aam
dec
fwait
push
inc
xor
setns
and
or
ss
or
inc
hlt
add
shlb
cmp
jmp
insb
push
ret
mov
popa
xchg
fsubrs
sbb
push
ja
cmpsb
cmp
rolb
lods
lahf
daa
adc
leave
inc
jbe
cmpsl
mov
adc
mov
pop
fbstp
lcall
adc
mov
xor
cmp
pushf
popl
out
iret
or
outsl
mov
test
lock
or
leave
cs
mov
push
cwtl
xor
rcrl
shll
sub
mov
outsl
sub
pop
stc
dec
shrl
daa
mov
xchg
inc
sbb
in
dec
mov
pushf
mov
icebp
push
es
aas
stos
fwait
jno
mov
mov
fcmovbe
push
and
fwait
scas
jo
sbb
lret
lods
jnp
lcall
and
mov
mov
lods
jne,pt
sub
and
pop
adc
loop
sub
rclb
addr16
and
or
push
xor
xchg
jecxz
rorb
in
pusha
je
rorb
cmp
xor
inc
jnp
mov
push
mov
sub
mov
ud1
sbb
ret
in
and
and
lcall
lcall
mov
push
mov
orl
subl
leave
mov
mov
xor
test
test
fnstsw
cmpsl
jo
divl
xor
pop
mov
sar
inc
xor
pop
rorb
mov
jmp
data16
or
roll
or
pop
mov
push
test
mov
or
cmpsb
xor
outsb
jbe
push
stc
pop
dec
mov
arpl
fcomps
mov
cmp
inc
testb
outsb
push
pusha
push
js
mov
test
lea
scas
int3
push
mov
imul
mov
push
icebp
mov
pop
test
add
pop
clc
jmp
test
sbb
rolb
scas
adc
aaa
cmp
lods
das
fdivrs
ja
dec
jp
sbb
jb
and
outsl
pop
in
jmp
incb
sub
jle
sahf
sti
repz
push
pusha
or
hlt
jb
fdivl
xor
int3
icebp
mov
popf
and
js
jl
mov
int3
mov
fdivs
mov
or
rorb
stos
imul
test
lret
and
sub
cmp
fstps
xchg
dec
mov
gs
aas
jnp
cld
aad
jb
xchg
jo
mov
stc
push
pop
rorb
stos
push
lret
data16
lret
repnz
mov
lcall
stc
pop
sbb
sub
or
cmpsl
mov
dec
adc
lret
stc
aas
mov
fxch
pop
push
test
repnz
call
int
lret
mov
xchg
cmpsb
out
out
mov
aad
or
lods
xchg
jo
cmp
inc
orl
insb
adc
xor
mov
sub
push
fsubp
add
scas
popa
movsl
xor
ret
xor
popa
push
jmp
jns
mov
repnz
movsb
rolb
jbe
fcmovu
cld
push
xchg
pop
fidivs
fcomps
loopne
outsl
adc
mov
shrl
and
mov
loope
test
sti
movsl
mov
test
xchg
addr16
outsl
pop
cmp
in
cmpsl
mov
out
lock
adc
inc
mov
loop
push
imul
bound
sbb
cltd
xor
fcoms
out
push
jo
xlat
and
pop
jg
push
addl
bound
fwait
gs
icebp
insb
or
cmp
xchg
or
push
push
mov
adc
add
or
addr16
inc
jae
cmc
insl
mov
iret
pusha
mov
adc
pop
addb
push
jmp
add
mov
in
imul
push
push
or
lcall
xor
std
xchg
shll
jb
and
mov
push
imul
cltd
repnz
adc
or
test
mov
dec
inc
mov
jecxz
dec
lods
cmp
sbb
jnp
jb
sbb
hlt
cmc
or
comiss
fisttpll
push
inc
sbb
rcrl
scas
xchg
jle
xchg
ret
jp
adc
mov
mov
test
es
adc
add
mov
mov
fsts
fldcw
popa
add
das
inc
jmp
stos
outsb
sbb
dec
loope
sbb
and
int3
ret
rcrb
mov
mov
in
jnp
adc
fbstp
stos
adc
shlb
mov
pop
and
lea
ja
adcb
pop
jbe
dec
and
mov
inc
jns
lret
int3
inc
jnp
xchg
sbb
and
aam
xor
and
movsb
scas
xor
dec
icebp
mov
pop
mov
mov
leave
outsb
mov
ficomps
lcall
shl
dec
call
pop
sbb
lods
inc
mov
aaa
jae
sub
and
jg
cli
xor
jbe
fdivs
xchg
wbinvd
jecxz
mov
jmp
test
fsubs
jmp
adc
lea
pop
adc
lods
mov
nop
nop
cwtl
dec
add
adc
test
sbb
leave
mov
push
mov
add
stos
stc
or
sbb
cli
push
add
xchg
mov
loop
lods
fdiv
enter
pop
loope
xor
sub
jmp
sub
dec
fwait
mov
jge
pop
data16
adc
push
dec
or
jno
loop
jmp
lods
repnz
lea
mov
add
js
es
ficoms
lds
mov
repnz
pop
ljmp
mov
mov
jnp
jbe
shll
dec
fscale
sub
push
dec
xor
inc
loop
pushf
test
scas
aad
mov
out
in
dec
sbb
mov
jmp
loopne
and
ds
push
inc
mov
mov
idiv
and
andl
jle
outsb
mov
push
ja
dec
arpl
push
cmp
cwtl
nop
iret
mov
push
cwtl
cmpb
lea
add
pop
dec
test
std
mov
test
pop
mov
xor
inc
add
dec
cmp
pop
pop
mov
xchg
sub
sub
jb
call
outsb
in
jecxz
jns
in
ret
sti
incb
lds
testb
or
pop
mov
or
cmpsl
insb
cmc
adc
jecxz
subl
push
mov
test
rclb
dec
dec
std
and
lret
pop
mov
and
and
scas
jg
mov
jl
add
fildll
adc
adc
loopne
rolb
cmp
ret
mov
mov
mov
inc
add
iret
inc
xchg
negl
or
into
and
bound
xchg
push
pop
pop
cmp
in
adc
or
mov
aas
sti
fdivs
inc
mov
pushf
inc
in
cwtl
dec
lods
inc
rcl
push
movl
cmp
imul
jnp
idivl
xorb
test
iret
mov
mov
push
fldt
int3
int3
lods
test
arpl
movsl
and
dec
pop
or
mov
int
inc
pop
bswap
arpl
arpl
jbe
sbb
add
jecxz
and
jmp
addr16
into
les
pushf
dec
arpl
sbb
sub
ja
ja
outsl
out
add
mov
shrb
and
addl
adc
push
repnz
test
mov
cmpsb
xchg
in
mov
jmp
inc
jno
lock
cmpsl
add
cmp
sbb
pop
cmp
cmp
int
stos
imul
cltd
bound
xlat
or
dec
test
xlat
dec
pop
cmpsb
movsl
xchg
add
out
pusha
jmp
arpl
cli
xchg
cmc
movsb
ret
lods
test
mov
jnp
pusha
add
mov
push
dec
dec
xchg
pop
mov
loope
lds
ficomps
xor
aas
cmp
sbb
andl
dec
mov
imul
dec
cmpsb
cmp
sti
dec
pop
scas
cs
xchg
js
jmp
sub
sbbl
cli
xor
sub
lret
pop
inc
xchg
jmp
inc
fdivrl
xchg
push
arpl
xchg
subb
pop
and
ja
sbbb
js
dec
dec
inc
out
mov
ljmp
pop
jp
cmpsl
cld
inc
xchg
mov
int
out
pop
out
rorl
and
xchg
bound
dec
inc
aas
mov
push
xchg
push
push
pop
and
ficoml
sbb
cvtpi2ps
hlt
jecxz
sbb
clc
idiv
fs
cltd
in
popf
daa
jbe
jmp
imull
dec
push
out
lret
lds
stos
xchg
cs
cwtl
ret
xorb
adc
out
push
jmp
stos
sbb
mov
pop
xchg
jo
inc
pop
mov
aad
pop
pop
push
mov
repnz
insb
imul
enter
mulb
mov
mov
out
fisubl
add
mov
jp
pop
mov
lods
xlat
les
push
or
and
jle
adc
or
xchg
push
insb
nop
sbb
or
dec
pop
aam
mov
mov
bt
je
jbe
test
mov
jmp
enter
push
push
fs
jge
xchg
inc
neg
xor
cmpsl
rcr
dec
int3
je
aam
adc
iret
fsubrp
mov
clc
dec
or
clc
jl
pop
pop
es
lods
cmc
das
xor
adc
add
lea
mov
push
push
insb
adc
pop
push
ret
mov
scas
xor
mov
and
stos
bound
xor
mov
dec
leave
leave
fwait
sub
imulb
and
push
push
pop
adc
lds
leave
xchg
push
adc
fcomps
stos
inc
xchg
aam
push
and
mov
and
dec
cmp
cmp
pop
cmp
rorl
pop
inc
aam
mov
mov
cmpl
lock
sub
popa
sub
jp
mov
stos
jno
test
mov
int3
mov
scas
je
inc
lret
addb
ljmp
dec
mov
jecxz
or
sub
scas
insl
sbb
jl
mov
rorl
mov
inc
mov
movl
test
pop
imul
add
in
sbb
fisttps
leave
sbb
jo
xor
repz
xchg
ffreep
push
jb
pop
jmp
and
ja
jp
xchg
mov
sub
in
in
mov
jle
pusha
movsb
cwtl
push
jb
mov
xor
rcll
mov
jns
add
shll
inc
xor
mov
or
dec
int
fwait
xor
mov
mov
cmpsb
jge
jbe
pop
push
movsl
aad
or
mov
icebp
icebp
lds
insl
push
mov
iret
cmp
daa
es
aas
adc
dec
insb
mov
fisubs
mov
dec
add
mov
mov
and
xchg
xor
in
and
movsb
mov
push
ja
mov
sbb
jl
xchg
int
push
out
movsb
pop
inc
divl
addb
das
lcall
test
cmp
fisttpl
cmp
movsl
lahf
ss
push
stos
cmc
cltd
dec
stos
aaa
dec
xor
jg
cld
mov
pop
mov
cmp
or
cmp
ret
cmp
fxch
and
in
pusha
sti
lret
dec
sub
jp
push
sub
loop
fidivl
sbb
adc
adc
gs
jp
movswl
or
rcrb
std
in
xchg
jae
pop
jmp
jno
ret
std
mov
fmull
dec
jge
sub
loopne
std
fisubrl
mov
inc
ja
or
mov
inc
subb
cmpsb
and
adc
stos
ja
fdivl
shl
push
mov
ds
cmp
sub
adc
inc
or
pop
mov
movsl
jb
xor
ljmp
xchg
arpl
inc
outsl
scas
pop
fdiv
nop
hlt
jle
mov
pushf
gs
ljmp
aad
in
mov
dec
lcall
dec
mov
lahf
fbstp
mov
jl
dec
jecxz
mov
inc
mov
rep
nop
sub
repnz
iret
and
pushf
fisttpll
jo
ret
xchg
add
in
add
pop
cmpsl
add
insb
repz
int
inc
mov
cmc
mov
sti
lcall
fists
pop
stc
andb
mov
sbbb
xchg
mov
cld
fisubs
orb
ret
pop
or
call
and
es
inc
sti
test
leave
xor
or
and
add
aam
cmp
xchg
ret
mov
pop
dec
xor
lods
mov
out
faddp
inc
inc
clc
jg
arpl
fs
lods
mov
out
or
xor
sbb
or
xlat
imul
ljmp
inc
and
sbb
jle
add
push
xchg
movsb
xor
cmpsb
push
inc
jl
ret
call
cmpsl
cltd
jne
sbb
inc
inc
and
sub
and
repnz
loope
enter
sbb
mov
cmpsl
dec
lcall
dec
mov
pop
jb
sub
stc
mov
cmc
bnd
testb
pop
dec
mov
test
aaa
and
sub
mov
sub
mov
sbb
cltd
inc
xor
ja
hlt
xor
inc
push
push
cmpsb
inc
mov
sar
outsb
sub
mov
les
aad
jge
int
jecxz
jne
scas
pushf
jo
rcl
pop
imul
push
cmp
dec
inc
add
jbe
ror
lahf
mull
sub
cs
test
shlb
loop
shll
jns
mov
data16
mov
inc
in
call
mov
xchg
fidivs
mov
in
mov
push
push
push
cs
movsb
sbb
mov
dec
stc
jne
mov
pop
inc
ret
data16
mov
test
dec
mov
xchg
and
bound
fdivl
push
test
jmp
dec
mov
pop
add
movsl
mov
cmp
test
adc
sbb
nop
stos
inc
or
sbb
rolb
sbb
out
stc
das
xchg
push
rol
repz
pop
ret
mov
fidivs
add
and
xor
mov
add
je
int
lahf
push
inc
push
inc
lods
scas
add
sbb
and
mov
cmp
xchg
nop
xchg
jne
pop
add
pop
ret
jge
out
enter
pop
out
jle
and
pushf
mov
mov
sub
xlat
and
mov
sub
enter
fcoml
hlt
push
pushf
cmpsl
sbb
popa
mov
and
and
push
dec
outsl
jp
sbb
bound
lret
imul
js
ret
xchg
in
mov
ror
repnz
int
mov
jns
jg
xchg
and
pushf
jmp
dec
std
out
adcl
push
adc
rcrl
cmpsl
push
repz
in
xor
mov
xchg
xchg
ret
mov
pop
ljmp
sbb
data16
mov
inc
hlt
in
jg
xor
test
shll
dec
pop
data16
int3
dec
leave
out
pop
inc
jb
cmp
sub
jne
scas
cmp
dec
inc
stos
mov
xor
jmp
or
push
jno
daa
cmp
jae
pop
xchg
cmc
add
mov
cmp
dec
adc
jecxz
pop
xor
xchg
stos
popa
bound
add
jnp
roll
int3
pop
add
and
xchg
outsl
xor
inc
roll
int
roll
cmpsl
lea
aad
in
imul
mov
loopne
fldt
jle
jb
push
ds
rorb
cmpsb
cld
orl
imul
xor
mov
dec
jp
int3
or
cmp
mov
xor
fmulp
in
cmp
xlat
int
pop
pusha
repnz
mov
inc
enter
jbe
insl
and
cltd
inc
and
cltd
insl
sub
dec
xor
rorb
sub
ja
fsubrp
push
dec
imul
or
xorb
fidivrl
test
xlat
call
cmp
int3
arpl
repnz
pop
mov
stc
imul
pop
mov
gs
lcall
outsl
js
pop
xchg
adc
pinsrw
insl
test
and
movsb
in
xchg
xchg
push
sti
mov
push
or
addr16
das
repz
shrl
mov
xchg
stos
ja
pop
add
push
loope
cmpsl
fmuls
dec
mov
repnz
loop
shlb
mov
into
dec
int3
mov
sub
mov
pushl
scas
ds
xchg
push
sgdtl
int3
insl
cwtl
lock
outsl
movsl
stos
lahf
dec
out
sub
sbb
cli
add
pop
or
test
push
push
cmp
push
lods
cmc
xor
or
cmpsb
insl
ja
movsl
popa
xchg
insl
scas
push
inc
stos
ret
jns
popa
mov
ljmp
fadds
xchg
add
mov
pop
xor
xor
repz
fcomi
jge
add
mov
push
mov
cmp
dec
jae
fs
sbb
stos
mov
fldlg2
pop
je
jb
clc
test
in
lds
pop
lret
pop
push
push
pop
ret
aam
decb
mov
lret
or
lret
outsl
out
in
lock
lcall
push
out
call
dec
add
pop
inc
pop
out
and
sub
lret
ret
pop
or
adc
xchg
pop
inc
out
dec
pop
xor
jg
orb
scas
cmp
pop
cmp
js
lods
out
out
or
sbb
or
mov
mov
pop
pusha
inc
test
je
aad
rolb
xor
aas
add
test
std
jge
shll
test
ds
push
flds
aaa
movsl
addr16
test
sub
and
jno
cmpsl
or
test
sub
mov
push
jns
hlt
sbb
sub
or
fiaddl
repnz
inc
jno
xchg
loop
jmp
pop
cmpsb
or
and
and
mov
imul
sbb
push
pop
mov
pop
xchg
iret
mov
fcoml
sub
insb
sub
mov
out
mov
cmp
imul
push
fidivrs
dec
fcoms
fwait
xor
inc
sub
cmp
cmpsl
aad
pop
in
sbb
adc
or
sbb
or
aad
pop
cmp
adc
popf
or
push
bound
xchg
cmpsl
pop
push
js
inc
xlat
jnp
leave
pop
xor
cli
push
pop
mov
or
cmpsb
jl
jno
mov
mulb
sbb
sbb
icebp
or
sub
push
cmp
push
cmp
push
es
mov
xchg
cmp
pop
lcall
ret
fiaddl
mov
pushf
sub
jne
js
clc
leave
testl
sub
dec
je
fisubrs
cs
adc
xor
cwtl
jecxz
inc
inc
ja
pop
cmp
push
inc
mov
not
mov
add
sahf
outsl
mov
sub
and
lea
test
dec
test
scas
push
icebp
rcl
jmp
cmpsl
pusha
cld
push
loope
faddl
gs
cmp
fisttpll
push
inc
mov
out
xor
and
iret
adc
jl
xorb
loope
mov
mov
jle
out
mov
inc
inc
and
push
inc
sbb
push
out
mov
cmp
push
and
mov
pop
hlt
or
inc
fs
icebp
mov
mov
pop
xchg
xor
inc
jle
lcall
int
push
add
mov
shrl
push
jo
xor
pop
fistl
in
out
out
or
xchg
mov
mov
aam
mov
xchg
xchg
imul
mov
inc
fidivrs
push
and
imul
cwtl
rolb
xchg
arpl
dec
filds
sub
or
ret
lods
pop
dec
mov
sarb
dec
xchg
add
jp
adc
in
hlt
push
aad
not
bound
lods
clc
push
xchg
fcompl
lahf
mov
sbb
aam
or
dec
jns
decb
mov
mov
xor
xchg
jae
movsb
into
stos
sub
xchg
ret
jmp
fidivrl
daa
test
popa
ret
mov
push
rcll
xchg
fldcw
mov
popf
mov
or
pop
icebp
test
movsl
add
xlat
test
mov
dec
xchg
add
mov
cmc
jecxz
fsubrs
addr16
jno
movsl
add
push
sub
jg
push
jns
push
inc
jecxz
lods
mov
pop
xor
push
inc
push
ds
sbb
mov
lcall
adc
addb
je
das
aad
ja
push
sbb
into
sub
fwait
cmpsb
jno
cltd
sbb
jl,pt
shlw
xchg
jns
jnp
and
insl
add
or
shll
rorb
lahf
or
inc
adc
test
int
incb
aaa
xor
push
push
sub
sbb
inc
into
cmpsl
inc
mov
or
insl
in
dec
lods
sub
jo
inc
push
mov
movsl
bound
mov
sbb
sub
inc
scas
shrl
into
subb
negl
stos
ficomps
xorb
or
dec
cmpsl
int3
adc
jnp
out
push
push
clc
xchg
fcmovbe
xchg
testl
mov
mov
scas
mov
or
mov
sub
or
push
sti
ds
dec
mov
movl
xchg
dec
test
sti
call
add
dec
mov
inc
push
add
out
jle,pt
inc
inc
aaa
dec
ret
push
jl
rclb
add
push
pusha
into
mov
and
xor
shlb
imul
enter
fdiv
push
test
fistpll
ja
pop
dec
pop
fs
push
call
test
pop
rcrb
jns
mov
fwait
sbb
nopl
or
mov
sub
pop
fists
inc
or
inc
ficompl
and
and
push
xor
jne
into
dec
daa
cmp
add
cld
or
pop
repz
sbb
adc
jp
bound
imul
push
lahf
mov
cmpsl
imul
mov
mov
push
mov
nop
adc
ret
add
rclb
add
arpl
js
lahf
sub
pop
xchg
pop
js
sti
insl
push
mov
andl
jae
decl
loopne
mov
ljmp
cmpsb
xchg
rcrl
cmp
mov
and
bound
xchg
in
add
sub
in
lahf
sbb
scas
xlat
loop
lock
xor
movsb
cmpsb
mov
and
scas
inc
shll
bound
fldenv
ret
xor
mov
lret
adc
imul
arpl
xor
shlb
dec
ficompl
sub
sbb
out
das
push
aam
aad
mov
rorl
dec
jge
bound
inc
sarl
loopne
push
js
or
sarl
loope
and
mov
sub
pushl
cmpsb
and
rcrb
divb
sti
cmp
jg
push
in
push
imul
mov
xchg
cmc
outsb
rcrb
aas
clc
popf
inc
and
and
sub
mov
cltd
xor
dec
push
jg
mov
xchg
lds
push
lret
sub
sub
lret
shr
push
insb
pop
je
out
test
xchg
sahf
push
popa
sub
xchg
dec
add
cmp
into
mov
push
test
xchg
xchg
lret
mov
cmc
lods
popa
ss
adc
inc
sbb
jae
sbb
sbb
cwtl
cmpsb
inc
or
lret
cmp
hlt
mull
and
scas
jae
imul
lock
iret
pop
jo
and
lret
movsb
ds
mov
push
dec
cs
dec
loope
iret
lds
lahf
pop
in
dec
mov
adc
movsb
push
push
ljmp
xor
cli
cmp
shr
test
pop
jae
adc
loop
ret
xchg
cmp
and
push
push
ret
fnsave
sub
loop
outsb
shlb
pop
clc
pop
ficomps
cmp
imul
cli
fistps
gs
std
jp
test
adc
cs
and
and
inc
jmp
dec
fdivrs
push
pop
sub
cmpsl
fildll
bound
sbb
subl
pusha
loope
je
shlb
lods
testb
adc
lret
cmp
or
ljmp
aad
or
pop
inc
les
pop
les
xor
push
adcb
mov
shrb
jp
or
and
pop
add
push
cmp
jle
int3
daa
movsb
outsb
pop
sbb
outsl
lods
fcoms
mov
push
ds
inc
out
mov
hlt
inc
mov
addr16
sub
cmp
sbb
inc
xor
cmpb
dec
enter
pusha
push
and
enter
fcom
adc
lds
jae
lock
test
shr
sarl
push
std
jle
lcall
mov
mov
fcomi
xchg
sbb
cwtl
es
mov
into
scas
dec
faddl
in
int
sbb
fisubs
adc
push
push
iret
iret
data16
add
fstpt
outsb
outsl
cwtl
rcll
fbstp
sbb
loop
fdivr
mov
and
loope
rclb
icebp
sbb
xor
sub
imull
and
xchg
pop
cltd
sub
push
push
sub
jl
ja
dec
mov
sbb
or
enter
push
sbb
outsb
aam
xchg
test
inc
mov
fucomip
aaa
sub
rol
mov
sub
add
rcll
enter
movups
iret
out
aas
int3
sbb
lcall
sbb
mov
add
and
mov
popa
rclb
leave
xor
cli
xor
cwtl
sbb
adc
fildl
sub
or
mov
out
add
insb
cmp
xor
or
or
inc
cmpsl
jb
out
mov
gs
into
cmpsb
xchg
fistpl
xlat
sbb
idivb
jne
mov
shlb
ljmp
inc
inc
mov
and
jmp
or
mov
gs
dec
fsubs
lcall
push
adc
mov
aad
or
je
push
push
rclb
pop
outsb
xlat
stos
inc
lea
push
lret
lods
jmp
cwtl
fsts
in
pop
push
mov
jg
pop
push
addr16
xchg
mov
shlb
ret
sbb
cmp
cmpsb
cltd
fisttpll
bound
arpl
jg
add
in
jge
mov
incb
sub
add
incl
sbb
lret
pop
stos
mov
bound
mov
mov
loope
add
inc
in
out
pop
sub
out
imul
clc
xor
in
mov
cmp
dec
and
std
xchg
and
jge
mov
xchg
mov
cmp
and
adc
jb
shrl
sbb
inc
push
and
pushf
sbb
pusha
pusha
pop
in
addr16
in
lods
push
jnp
aad
pusha
mov
mov
iret
pop
fildl
mov
ss
inc
push
adc
sub
xor
xor
mov
in
rcr
jbe
mov
mov
sbb
xor
out
ljmp
xor
aas
pop
sub
out
jae
outsb
jb
or
mov
dec
in
lock
out
push
xor
dec
jecxz
sti
push
push
sbbl
iret
mov
ret
mov
ret
data16
jmp
stc
pop
stos
cli
mov
push
lahf
mov
xchg
jae
js
stos
das
mov
shll
shrb
dec
cmp
mov
sub
lcall
fwait
jb
bound
inc
xor
jnp
iret
xchg
xchg
sbbl
mov
mov
mov
lea
sub
inc
and
fiadds
jae
lea
insb
lret
fadds
push
sub
iret
dec
int3
imul
mov
dec
mov
stos
jno
or
test
out
lds
lods
mov
les
pop
mov
add
pop
add
mov
xor
test
dec
or
loop
xchg
inc
fdiv
sbb
loopne
pop
ret
mov
lret
cmc
movl
daa
add
jmp
lcall
pop
dec
cmp
sub
jbe
popf
mov
pop
mov
xchg
gs
xchg
lahf
sub
adc
dec
jne
fidivrs
repnz
lods
xchg
dec
mov
lea
call
push
fiadds
adc
test
pop
dec
inc
mov
insb
inc
test
out
sub
in
jge
lret
jle
dec
dec
rclb
test
test
fnsave
mov
xor
ds
and
inc
sub
add
ja
mov
xchg
test
mov
jge
lret
fwait
sti
scas
add
movsl
xor
mov
leave
sbb
cmp
aad
movsl
gs
into
xchg
xchg
push
pushf
stc
loop
pop
rolb
mov
rcr
js
jmp
sub
xor
fcoml
adc
jae
or
push
adc
jecxz
mov
sub
gs
pop
sub
pop
sbb
inc
cwtl
imul
out
imulb
push
mov
pop
cli
pop
in
mov
mov
push
test
cmp
roll
sbb
adc
sbb
cmp
cmc
or
inc
mov
cli
js
fcmovbe
mov
jge
jae
xchg
and
sub
ja
jge
sbb
rcr
sub
sbb
idiv
adc
cmpsl
je
sahf
jp
mov
mov
sbb
sbb
es
inc
pop
fdivrl
mov
loopne
dec
cmp
lea
xor
xor
mov
xor
inc
jle
das
push
inc
testl
pop
lcall
mov
call
cmpl
orl
addr16
cmp
mov
xor
adcb
test
es
mov
repnz
mov
add
in
and
jl
xor
cmp
dec
or
mov
in
sbb
fs
ljmp
jo
pop
pop
ss
fdivr
xor
repnz
cmpsb
bound
push
fmuls
testl
into
loopne
fidivrl
xlat
mov
adc
cmpsb
sub
xchg
sub
xchg
loop
loope
call
jae
loop
dec
xchg
divb
xor
pop
push
mov
inc
push
out
push
or
sbb
sbb
outsl
jecxz
in
sub
push
jge
pop
cmpsl
and
mov
loop
xchg
ds
and
cmpsl
incl
mov
cld
rol
movsb
imul
movsb
mov
jne
stos
fnstcw
sub
das
in
pop
jg
shrb
dec
in
or
sub
movsl
mov
jo
add
sbbb
pop
in
push
adc
xchg
sbb
cmp
push
sbb
rorb
movsb
xor
adc
jg
rolb
inc
and
shrl
cli
loop
push
pop
jae
mov
orb
mov
inc
cmc
xor
cmovge
mov
les
pop
sbb
jb
andb
dec
jb
popa
push
ss
sbb
adc
adc
repnz
js
mov
and
out
pop
mov
pop
xor
ret
aad
xchg
mov
out
add
roll
add
xchg
mov
clc
mov
jl
outsl
xchg
cmp
rorl
sbb
out
out
pop
popf
jge
pusha
cld
mov
aad
push
jge
mov
mov
outsb
out
adc
adc
mov
pusha
xor
and
mov
jnp
out
xchg
hlt
leave
inc
push
dec
mov
ret
pushf
add
pop
sti
add
call
popf
arpl
ftst
pop
mov
je
xor
push
cmp
mov
daa
ret
dec
je
jbe
inc
pop
xchg
inc
pop
rcr
rclb
fdivs
popf
jne
je
sar
pop
push
ljmp
cmp
jbe
pusha
stos
lahf
negl
movsb
push
sbb
cmp
dec
jmp
sbb
leave
sbb
cmp
arpl
or
scas
fldl
sbb
std
in
int3
xor
xchg
sbb
add
movb
mov
mov
add
jmp
xbegin
orl
lds
lock
sub
pop
sub
lods
and
sbb
mov
icebp
aas
sbb
insb
fstps
pop
sbb
cwtl
add
sbb
cmc
xor
xor
rorl
jecxz
leave
mull
mov
jae
sub
test
andb
add
cmp
push
shll
js
xchg
lret
jmp
mov
test
repz
xchg
jge
xchg
cltd
adc
popf
inc
rolb
xchg
fnstcw
in
mov
arpl
add
pop
adc
jb
push
or
cmp
mov
out
mov
mov
scas
fdiv
std
cmc
pusha
popa
xor
loop
or
test
enter
cmp
arpl
push
push
xchg
xor
and
sub
pop
mov
cwtl
lock
je
mov
push
add
jp
xor
es
pop
pop
sbb
daa
test
and
cmpl
test
adc
shl
je
inc
nop
cmp
sbb
xchg
out
adc
inc
int3
pop
call
jno
sbb
jb
add
fmulp
adcb
jmp
rcll
cld
mov
in
cmp
fists
insl
dec
or
enter
loop
idivb
in
sub
inc
jne
inc
adc
jbe
adc
push
arpl
dec
out
dec
arpl
imul
sub
pop
int
jnp
mov
xchg
xchg
xor
mov
dec
sub
xor
inc
arpl
mov
add
out
cli
xlat
test
xor
mov
out
mov
mov
adc
lret
clc
pop
xor
and
jb
aam
shlb
dec
inc
push
or
lds
inc
mov
and
sub
out
sub
add
lock
mov
imul
jmp
nop
lahf
mov
stc
std
push
mov
and
cwtl
cmp
popa
xchg
mov
ret
ljmp
insb
mov
sub
add
sub
sub
hlt
mov
loopne
stos
pop
mov
mov
popa
xchg
jl
into
dec
loope
jae
push
sti
call
test
cmpsl
mov
and
cmc
pusha
pop
ss
outsl
cmc
dec
in
loopne
sarl
or
mov
ja
jp
sub
ret
adc
jbe
cmc
xor
fdivs
lcall
sbb
sub
push
aas
mov
bound
mov
pop
mov
mov
loopne
mov
pop
add
jmp
xchg
add
out
sbb
mov
cmp
in
rorl
lret
aas
mov
mov
loopne
inc
or
fdivr
xchg
xchg
dec
xchg
mov
andb
lds
lcall
shlb
leave
shrl
iret
mov
cmp
pop
inc
xchg
stos
adc
movl
pop
xchg
and
cwtl
test
dec
push
add
clc
mov
jge
popf
icebp
sbb
mov
dec
or
jle
or
mov
pop
cmp
lcall
in
mov
in
sbb
dec
nop
in
fildl
and
fists
add
stc
cli
stc
pop
pop
inc
loopne
add
lock
rcl
loope
lret
cmp
out
add
lea
pop
adc
lds
inc
and
mov
xchg
xchg
ss
cli
jge
and
push
pop
in
add
in
pop
dec
adc
inc
jno
shl
test
and
outsl
mov
add
add
lcall
scas
xor
stos
xor
mov
test
jl
daa
add
xlat
inc
fdivrs
inc
loope
jp
shr
sbb
add
mov
in
stos
in
call
xchg
pop
cmpsl
movsl
or
add
push
adcw
inc
xchg
mov
int
cld
rcrl
rol
repz
int3
cwtl
push
imul
cli
andb
jp
push
popf
mov
xchg
rcrl
out
adc
push
sbb
push
dec
mov
xchg
sbb
mov
add
fs
mov
repnz
imull
ds
or
dec
dec
xchg
cmpsl
adc
jg
lea
cli
xchg
mov
cmp
pop
ret
pop
jb
push
pusha
pop
jno
mov
or
dec
sub
pusha
xchg
outsb
add
mov
mov
push
scas
and
dec
jo
mov
pop
je
or
cs
into
gs
adc
repz
nop
pop
push
mov
ljmp
adc
loopne
xor
insb
data16
jge
adc
pop
les
dec
inc
sbb
cmp
mov
jne
aad
and
out
lret
aad
fists
xchg
fistps
mov
jae
add
cmp
adc
ret
repz
add
xor
les
ret
xchg
mov
sti
push
jle
les
pop
sub
in
fs
cmp
mov
in
dec
js
bound
aam
cltd
repnz
ss
sbb
adc
and
mov
dec
in
aad
daa
xchg
mov
outsl
cli
mov
int
divb
movsb
icebp
arpl
dec
cltd
fprem1
jne
sub
add
dec
out
shll
jmp
sbb
or
lods
and
mov
jo
in
dec
sarb
movsb
int
jbe
xor
mov
mov
cmp
mov
pop
cwtl
fdivs
insb
jmp
mov
xchg
mov
mov
cltd
outsb
iret
or
and
test
push
ret
nop
ds
test
and
pushf
or
shrl
cs
xor
outsl
inc
test
xchg
adc
mov
cmp
pop
xchg
rolb
sub
xor
push
aad
adc
mov
push
shll
push
addr16
mov
les
pop
ret
sbb
xor
pop
mov
push
mov
sub
pop
mov
insb
push
push
mov
and
mov
mov
and
jb
and
mov
dec
pop
sbb
cltd
aaa
fdivrp
push
sub
in
adc
stos
mov
push
xchg
stc
and
add
adc
mov
mov
insl
jbe
xchg
jb
inc
pop
or
inc
clc
in
notb
mov
pop
push
adc
mulps
imul
sbb
sub
mov
dec
and
shlb
cmp
add
mull
dec
xlat
xor
sub
mov
outsb
pop
mov
pop
or
sub
mov
xchg
adc
mov
and
dec
sbb
out
in
add
nop
lret
lods
das
test
lods
out
cmp
jl
adc
enter
mov
or
xor
push
out
bound
loop
and
int3
xchg
and
mov
test
jns
adc
xlat
sub
cmc
mov
imul
mov
sbb
dec
add
int
mov
stos
cwtl
lods
adc
push
xchg
loopne
movsb
lret
dec
push
dec
rcrb
icebp
jp
jmp
repz
and
mov
and
or
in
inc
jns,pt
adc
rcl
jnp
imul
sbb
xchg
imul
push
loopne
les
cmp
loopne
push
sub
pop
sbb
mov
mov
popf
outsb
lret
sub
outsb
insl
test
mov
shr
adc
jmp
mov
and
mov
out
jle
cld
cmp
stos
das
or
mov
mov
mov
sahf
mov
or
movsb
mov
bound
mov
insb
negl
push
and
mov
int
int3
fisttpl
fbld
jne
and
push
pusha
fdivrl
jl
in
and
push
popf
mov
ja
sub
lcall
icebp
inc
xlat
pop
stc
cmp
xchg
iret
xor
lock
stos
add
sbb
xchg
inc
inc
shrb
nop
xchg
mov
xor
add
mov
adc
cmpsb
mov
sub
test
and
cmp
add
aaa
movsl
push
mov
adc
out
cltd
je
and
xor
punpcklbw
cld
and
call
fidivs
sbb
ss
pop
ficomps
and
xchg
scas
xchg
das
fstps
add
xchg
mov
jne
cmp
jne
ljmp
out
arpl
int3
movsb
aam
leave
or
shlb
call
or
cmp
push
cmpsb
push
mov
xor
jmp
jge
test
mov
push
inc
es
adc
mov
and
aaa
xchg
xor
insl
mov
test
sbb
aam
push
and
mov
add
inc
nop
cvtps2pi
sub
or
adcl
mov
sbb
and
dec
gs
sarl
sbb
stos
shlb
imul
pop
cmp
insl
lock
add
or
sbb
pop
xchg
push
jo
faddp
ficoml
test
mov
xchg
sbb
sbb
adc
sub
jge
xchg
push
xchg
or
aaa
mov
sbbl
or
gs
mov
idivb
stos
aas
bound
inc
divb
pop
ret
mov
ret
xchg
jno
loop
xchg
stc
lcall
iret
add
incb
enter
jp
mov
in
mov
mov
int3
fcomps
push
movsl
icebp
or
sub
ret
add
pop
pop
dec
jmp
iret
adc
push
push
dec
xchg
mov
xor
inc
addb
ss
and
add
fwait
movsb
pop
hlt
jp
xor
pop
jp
xchg
inc
pop
sti
pushf
adc
fs
cmpsl
inc
lret
push
jle
sti
add
jno
mov
int
icebp
aaa
dec
push
pushf
lock
xchg
push
test
in
addr16
dec
and
scas
in
jns
popa
mov
pop
stos
negl
in
add
and
push
pusha
in
cltd
lock
test
in
mov
fcompl
pop
dec
push
adc
icebp
movsl
add
leave
sub
xadd
sti
test
mov
xor
pop
pop
mov
cmp
xchg
jno
add
and
int
test
sub
add
inc
dec
mov
adc
inc
xor
das
decb
mov
cmp
aaa
lods
clc
xchg
sub
mov
jno
cs
cmp
jno
out
xlat
dec
xchg
mov
xchg
fisttps
je
dec
sub
adc
lret
ret
sub
nop
add
lock
cmpsb
push
in
inc
out
xor
push
popa
dec
add
lcall
add
decl
loop
jno
enter
xor
gs
in
mov
lahf
outsl
adc
repz
adc
sahf
adc
and
ss
xchg
dec
mov
cs
repnz
sbb
cs
cmpsb
sbbl
and
jmp
scas
ret
adc
mov
cld
ret
mov
movsl
or
cmp
or
out
jo
sbb
adc
adc
or
aam
call
rcr
fwait
sub
cmp
push
shll
sub
cld
xchg
out
std
xlat
sbb
xchg
addb
fs
and
xor
insb
mov
sub
out
fistps
pop
lds
sub
lret
stos
leave
imul
jae
mov
lock
xchg
fsubl
cmc
lods
inc
jle
decl
ss
hlt
imul
test
sub
popf
jl
leave
xlat
add
das
add
insl
mov
mov
gs
loop
fldenv
ja
jge
sti
jns
push
cmp
mov
xchg
rol
test
xor
shlb
insl
movmskps
mov
dec
xlat
fs
test
in
std
xchg
xor
adc
test
or
enter
cmp
ljmp
xchg
cmpsl
and
cmp
jo,pn
popa
repz
dec
movsl
xchg
xor
xor
cmpsb
jo
test
xor
imul
cmp
adcl
jo
adc
fimuls
leave
jmp
sti
roll
fistps
lods
adc
push
mov
sarl
addr16
pop
out
mov
mul
cli
jo
pop
test
mov
pop
popa
mov
pop
mov
and
xor
sbb
xor
call
loopne
ds
sbb
hlt
and
cmpsb
hlt
in
fwait
push
jle
outsl
pusha
lock
rcrb
mov
and
or
mov
cmp
rcrl
je
mov
jb
leave
daa
sbbb
stos
mov
or
cmp
loop
imul
aas
pop
dec
mov
jp
mov
notb
or
push
fisttpll
cmp
xor
dec
jns
xor
jge
shl
pushf
pop
xor
aas
jl
add
ds
mov
sarl
or
dec
add
and
pop
sbb
adc
testl
sahf
movl
xor
cld
pop
or
stos
pusha
lock
xchg
addr16
sahf
scas
push
jbe
push
aam
outsb
inc
mov
xor
mov
mov
int3
loope
fcomps
ret
inc
push
aam
roll
dec
mov
push
jl
aam
push
pmuludq
aad
inc
cmp
cmp
sbb
lea
cltd
rcrl
jae
out
or
in
mov
test
hlt
and
pmulhw
outsl
pop
mov
movsb
into
sbb
push
xchg
lea
lds
movsb
mov
scas
mov
les
cmp
mov
and
clc
push
lds
pop
or
jns
xchg
notb
xchg
mov
setl
jecxz
lea
xchg
rclb
iret
rcrl
or
rcr
mov
mov
filds
lods
mov
loopne
push
addr16
out
mov
inc
pop
fwait
and
mov
stos
aam
adc
flds
mov
mov
inc
scas
sub
shlb
jae
test
sbb
inc
lock
call
jmp
mov
mov
cli
push
adc
dec
pusha
in
xorb
xlat
movsl
stos
mov
dec
outsl
or
adc
sbb
cmp
xor
sub
xor
xchg
mov
out
rcrb
clc
mov
xor
inc
xor
jns
jle
ss
jb
sbb
rorl
mov
jmp
adc
push
inc
mov
js
mov
imul
sti
xchg
into
out
add
sub
lods
stos
add
rorl
jmp
sub
lea
loop
add
fdiv
lock
pop
test
and
out
adc
xchg
push
jo
mov
cwtl
sbb
adc
gs
cmpsb
jl
aas
lahf
bound
xor
mov
scas
and
mov
fisttps
lret
pop
mov
fs
pushf
cmp
push
or
adc
xor
bound
insb
mov
inc
scas
or
jge
lret
mov
mov
insb
ret
or
dec
outsl
dec
enter
add
je
int
shlb
jno
pusha
mov
rclb
mov
mov
push
inc
pop
xchg
shll
jmp
mov
adc
lds
insb
or
aaa
dec
subl
movsl
das
mov
in
pushf
and
repnz
adc
or
cmp
pop
nop
adc
sbb
sub
ret
xchg
adc
cmp
aas
fiadds
push
inc
shrb
in
pusha
cld
decl
lcall
mov
cmpsl
xor
mov
fistpll
cmp
pusha
xchg
mov
jb
sbb
adc
leave
aam
jno
in
bt
imull
mov
lock
dec
dec
jmp
jae
iret
js
dec
pop
cli
sbb
fistps
fistpll
test
insl
loopne
mov
into
jmp
ficompl
add
mov
loopne
push
pop
adc
leave
sbb
roll
addr16
cmp
std
adc
inc
cmp
into
outsb
cmp
mov
mov
popa
fsubrl
stos
shl
ds
cmpsl
rcrl
popf
pop
fucomp
fidivl
aaa
add
xchg
cld
roll
rcrb
jecxz
je
jmp
int
decl
pop
fisubl
add
pop
test
adc
push
fdivrp
xor
enter
adc
imul
das
call
cmp
testl
loope
repz
cmp
loope
push
inc
sub
cmp
movsbl
outsb
xor
xchg
mov
lret
out
aam
test
cwtl
pop
inc
cli
in
or
jmp
jno
xchg
xor
and
enter
mov
insb
xchg
adc
jmp
out
dec
mov
push
cmc
xchg
mov
xor
sub
adc
pop
add
fadd
jae
dec
dec
fcmovbe
es
mov
out
dec
scas
fisubl
sbb
outsb
mov
dec
iret
pop
int
in
imul
sbb
lret
in
inc
loope
in
fwait
push
sub
mov
push
and
adc
lods
jg
ja
ret
cmp
jecxz
inc
or
aas
ss
xchg
imul
mov
mov
push
and
push
aam
inc
push
pop
add
mov
outsb
daa
push
jge
pop
rol
xchg
mov
outsb
stc
iret
cmp
pop
jecxz
inc
adc
imul
cwtl
outsb
into
push
dec
push
cs
cmp
out
sub
stc
or
shl
or
cmp
add
in
pop
xchg
roll
xchg
movsl
loop
jp
aas
and
xchg
adc
xor
mov
jno
cmp
loopne
xor
dec
mov
ss
rolb
sub
mov
jge
add
rorl
cmp
idivb
adc
int
mov
xchg
sbb
sbb
fcomps
xor
rcrl
lcall
dec
sub
aas
aas
rcrl
pop
xlat
je
aaa
push
cmp
jns
or
sahf
int3
sahf
inc
xchg
sub
pop
xchg
adc
std
rcll
jne
addr16
mov
mov
cltd
add
daa
lea
gs
cmp
rclb
pop
lods
test
and
adc
data16
cs
out
sub
cltd
jmp
jmp
enter
add
pop
pop
into
rorb
pop
mov
push
out
mov
cmpl
mov
cmp
incb
subl
cmp
add
enter
mov
shlb
fstl
scas
mov
mov
dec
testb
out
out
out
scas
lods
cmp
shlb
jbe
hlt
test
sbb
push
mov
sbb
andb
push
out
inc
enter
jmp
out
push
xor
dec
mov
outsl
xchg
dec
shrb
daa
mov
stos
out
hlt
add
ret
xlat
pushf
ret
and
xor
stc
mov
xorb
mov
sub
divb
jb
mov
add
testl
cmp
gs
or
pop
jle
cltd
mov
push
lock
push
mov
scas
out
aam
cmp
adc
outsl
xchg
xchg
or
mov
or
xor
xor
inc
clc
add
inc
bound
sub
inc
shll
fldt
repnz
xchg
lcall
fcmovne
pop
testb
imull
mov
addl
cs
jo
xor
loop
movsl
push
mov
fcomps
jns
in
fmull
sahf
fld
loopne
lds
imul
mov
push
fwait
adc
mov
aas
push
adc
push
jge
push
sub
add
les
aas
int
inc
mov
inc
lcall
jge
call
aas
sbb
cs
or
jns
ja
shlb
and
push
jae
mov
sbb
mov
cmp
jmp
mov
outsb
out
lret
addl
pop
mov
cmp
push
arpl
inc
ljmp
sti
adc
push
mov
or
pusha
push
mov
imull
sahf
sub
mov
fnstcw
in
hlt
mov
call
pushf
xorl
xor
xchg
sbb
loope
aaa
daa
in
adc
mov
jg
inc
popa
adc
stc
sarb
int3
mov
adc
jecxz
lahf
ss
jecxz
mov
or
push
jae
rcrb
mov
xor
fwait
inc
cmc
jnp
ret
pop
push
xor
or
mov
sub
andl
jmp
xchg
das
or
mov
popa
add
xor
int
test
sbb
jmp
lods
or
mov
fwait
or
pop
mov
mov
loopne
add
mov
or
inc
aaa
shlb
push
sub
cmp
pop
add
sbb
arpl
xchg
xor
add
dec
lods
cmpsl
push
popa
pop
add
in
mov
lds
jne
out
aam
cmp
add
inc
jecxz
cmpb
cmpsl
pop
dec
inc
or
insb
push
push
push
and
test
mov
mov
popa
xchg
adc
iret
add
mov
lret
jg
aam
and
ret
jns
xchg
stc
xor
jg
imul
xchg
sbb
lea
inc
outsl
jae
iret
mov
out
aam
jbe
nop
cltd
add
dec
jg
movsb
mov
add
inc
stos
pop
in
or
lds
mov
and
pop
movl
xor
xchg
adc
jbe
mov
xor
jg
filds
cmc
jo
stos
in
pop
jp
cs
pushf
mov
lds
stc
fcmovne
arpl
mov
xchg
and
push
push
cmp
mov
add
jle
test
orb
cmc
test
or
sub
lret
rcrb
inc
stc
dec
and
jmp
lcall
jne
xchg
push
aaa
je
cmp
nop
inc
mov
adc
insl
aas
mov
mov
xor
and
scas
push
jno
sbb
roll
lock
push
push
lcall
into
fwait
jb
sbb
sbb
mov
inc
movsb
notl
jnp
out
rcrb
outsb
sbb
sub
xor
mov
pop
cmpl
rcrl
mov
xchg
adc
adc
mov
cltd
jne
mov
aaa
hlt
clc
xor
arpl
out
adc
or
mov
inc
mov
fmulp
adc
and
mov
cltd
jecxz
fisubrl
out
hlt
jg
mov
cltd
and
lret
pushf
std
cmp
jmp
xor
cmp
addb
mov
rcll
jecxz
js
cli
sbb
sub
mov
push
mov
cld
les
mov
iret
in
jmp
pop
in
addb
imul
fwait
lret
lret
enter
sub
mov
inc
les
ss
and
push
sahf
mov
fxch
out
stos
jae
cmc
jmp
add
cmpsl
mov
and
loope
pop
out
mov
jge
mov
jno
fs
xor
pop
mov
xchg
clc
xorl
xchg
jmp
lret
push
mov
add
dec
mov
sbb
add
push
mov
andb
or
dec
cmp
jne
in
jmp
popf
fstp
insl
sbb
test
mov
pop
push
imul
lock
addl
cwtl
xor
lahf
sbb
xlat
rclb
ret
iret
test
add
sub
je
mov
xor
out
add
inc
out
push
mov
orb
enter
cmp
mov
addl
stc
sarb
out
aam
or
cmc
cwtl
mov
jns
sbb
dec
into
movsl
fisubrs
lcall
mov
xor
loopne
add
inc
xlat
mov
sahf
xor
shlb
jg
into
xchg
sbb
pop
jo
pusha
shl
or
xchg
mov
pop
data16
dec
and
aad
sbb
xor
loopne
jnp
push
inc
in
movsl
fdivr
push
mov
mov
mov
jo
inc
adc
ljmp
mov
outsb
inc
jge
dec
inc
cmc
imul
adc
mov
jne
or
testl
mov
add
rorb
jnp
mov
test
pop
jg
call
ljmp
pop
popf
in
daa
cmp
pop
clc
testl
div
add
sub
inc
sbb
imul
sub
sbb
mov
lret
ja
mov
nop
outsb
xchg
test
fstpl
adc
cmp
leave
sub
dec
inc
dec
in
clc
sarl
inc
sub
adc
popa
mov
andl
aad
inc
mov
aad
pop
insb
push
pop
mulb
pop
pop
jb
fs
cmp
imul
adc
sub
idivl
inc
xor
fwait
add
imul
stos
pop
adc
fwait
mov
into
call
xor
scas
mov
jnp
dec
decb
ljmp
aas
sub
leave
into
adcb
ds
jb
rclb
push
jns
fmuls
addl
pushf
test
dec
push
scas
fucomp
xchg
dec
pop
arpl
sbb
and
or
xchg
mov
call
sub
lret
pop
mov
xor
loop
inc
adc
xorb
fs
je
jl
jnp
push
push
add
adc
stc
mov
fnsetpm(287
add
jne
test
jne
lret
cltd
mov
loope
add
jmp
push
scas
xchg
lret
ds
movsb
adc
mov
icebp
push
or
insl
mov
sti
sbb
push
fnstsw
sub
dec
scas
mov
pop
pop
pushf
inc
rcl
leave
jmp
fildl
xlat
hlt
xchg
mov
jne
ss
or
inc
mov
scas
insb
insl
inc
xchg
movsl
xor
mov
sbb
add
sbb
imul
sub
sbb
sbb
out
push
iret
out
hlt
mov
lea
aad
sbb
mov
pop
adc
mov
inc
out
sub
add
xchg
jl
pop
aad
scas
cmp
mov
sti
out
adc
lods
scas
test
jb
push
sub
leave
rolb
sbb
out
dec
jge
call
lahf
pop
jb
mov
push
adc
hlt
test
stc
ja
add
loop
js
aaa
pop
push
dec
push
fs
xor
sub
push
push
mov
pusha
xchg
clc
xchg
cmc
mov
mov
lret
stos
adc
jne
jl
mov
mov
mov
out
xchg
mov
add
in
in
movq
cld
adcl
fs
sub
push
pop
fsubl
and
js
cmc
or
dec
add
sub
movsb
push
push
xor
dec
int
add
inc
cmpsl
xchg
dec
push
mov
enter
sub
xlat
shr
push
inc
lret
jns
clc
gs
sub
lret
sbb
add
jne
in
pop
std
loope
and
jle
pop
dec
push
mov
xchg
fdivl
pop
push
ss
xchg
in
and
add
jle
outsl
pop
rorb
xor
cs
stos
cmpsb
sbb
adc
xor
push
mov
sbb
in
mov
mov
inc
cmc
jnp
sbb
jb
mov
or
in
jmp
inc
xor
cld
scas
sbb
push
cmp
push
xchg
or
rcll
ds
mov
je
lea
out
inc
test
enter
cmp
jp
fstpt
jne
js
jmp
inc
pop
mov
add
sbb
jmp
pop
inc
inc
stos
push
and
mov
or
and
inc
or
sbb
pop
dec
pop
cmp
inc
dec
sub
cmp
add
mov
ret
jl,pn
nop
sbb
adc
or
mov
or
out
inc
lahf
lret
dec
in
sbb
xchg
xchg
pop
inc
insl
xchg
outsl
jle
test
mov
pop
push
iret
sbb
in
adc
xchg
lods
cs
pop
into
dec
mov
cmc
xchg
push
fsubs
jecxz
mov
std
ss
dec
enter
nop
push
ds
sahf
xchg
movsl
popa
fidivrl
cwtl
or
sbbl
cmc
fidivs
mov
adc
inc
and
mov
inc
aas
pop
mov
xchg
sbb
lock
push
aaa
clc
sub
pop
pushf
cmpsb
mov
push
sbb
outsl
incb
std
aaa
inc
xor
jmp
dec
pop
insb
dec
outsl
ss
dec
xor
mov
arpl
ljmp
mov
notb
mov
jae
mov
adc
jle
inc
popf
fwait
lods
xor
mov
cmp
pop
popa
lds
or
cmp
mov
sub
mov
loop
push
or
pop
das
sbbl
jle
mov
ffree
lods
xchg
mov
add
cld
cs
xchg
xchg
jmp
cmovge
inc
outsb
popl
fmul
fiadds
push
out
adcb
stos
sbb
std
shld
lds
and
dec
das
mov
xor
xchg
scas
aas
test
push
xchg
push
cmp
icebp
push
dec
sti
inc
movd
lea
pushf
push
xchg
or
jge
sub
mov
aad
test
outsb
pop
xchg
rcl
xchg
incb
leave
mov
push
repnz
dec
hlt
and
or
adc
add
xchg
push
mov
in
adc
jbe
pop
jmp
sbb
icebp
push
clc
stos
maxps
and
mov
cmp
arpl
pop
mov
rsqrtps
loop
into
dec
inc
add
adc
jnp
enter
cli
or
xlat
lahf
jbe
into
inc
inc
and
jae
mov
adc
fs
mov
ja
cli
and
or
fxch
mov
stos
in
aad
testb
ds
sub
lret
mov
mov
test
add
pop
dec
jmp
jae
push
and
xchg
fdiv
cmp
jmp
adc
push
mov
jp
fisubs
cmp
mov
add
jg
cmc
add
setbe
inc
mov
imul
mov
xlat
sub
fbld
jb
add
outsl
xor
jmp
and
lods
or
xor
dec
scas
sub
mov
pop
aaa
pusha
cmp
push
in
out
jecxz
push
lods
sbb
sub
mov
aas
ror
lock
lds
sub
bound
cwtl
xchg
sub
sub
push
lcall
cmp
popf
aaa
sbbb
push
sub
mov
mov
mov
das
push
popa
lcall
lahf
punpckhwd
call
push
and
or
je
gs
dec
xchg
mov
jge
add
fildll
push
imul
ret
xchg
rorl
loopne
jb
scas
add
pop
daa
lahf
fdivrs
cmp
mov
js
mov
mov
lods
cmp
pop
int
popa
jge
push
pusha
sub
mov
ja
fucomip
fwait
out
mov
stc
fidivrs
xor
imul
and
cwtl
sub
and
stos
fs
mov
adc
pusha
fdivl
popf
out
addr16
jae
cmp
xor
leave
pushf
pop
gs
sbb
cwtl
enter
or
addr16
or
mov
xchg
mov
xor
sub
je
jmp
add
adc
inc
hlt
andl
sbb
popa
ss
test
rclb
inc
data16
js
sub
out
sub
mov
out
nop
fidivs
dec
mov
popa
stc
lea
es
mov
add
jnp
scas
call
fcos
inc
lret
dec
iret
sbb
andb
xor
mov
inc
mov
add
xchg
lods
sahf
jp
out
lods
xor
adc
adc
xor
jp
push
or
nop
es
and
dec
pop
lahf
aas
xchg
lret
and
leave
pop
daa
jb
cmp
xchg
xchg
xor
adc
mov
in
loopne
sti
dec
lret
lods
data16
sahf
inc
loop
sbb
jae
dec
popa
cmc
jae
lret
dec
xchg
into
shlb
xchg
dec
je
inc
xchg
imul
pop
and
rcll
arpl
popf
insb
stos
jp
lods
inc
cmp
cmp
lahf
pop
pop
lea
dec
lahf
loopne
bound
jne
sub
push
mov
insl
pop
pop
mov
nop
push
xchg
iret
dec
jae
rolb
fimull
sbb
out
lods
pushf
jne
je
ret
imul
gs
dec
push
daa
xlat
mov
mov
sbb
movsb
fwait
test
stc
sub
xor
cmp
in
das
or
jns
in
outsl
negb
sub
fs
gs
lret
lods
pop
mov
pusha
mov
mov
lret
inc
int3
es
or
subb
je
or
push
pop
push
fwait
sbb
jae
ja
pop
xor
or
aad
data16
xor
loopne
fwait
cmp
cmpsb
loop
push
sbb
sbb
inc
or
pop
cs
jne
orb
icebp
insb
loope
push
jl
and
pop
test
jmp
mov
aam
jo
pusha
cmp
xchg
hlt
xor
lret
xchg
xchg
inc
xor
push
je
sub
push
icebp
jb
jle
lcall
cli
dec
dec
sub
aas
mov
mov
fnstsw
aas
mov
ret
pop
or
bound
pop
fimuls
jecxz
mov
jns
outsb
dec
ss
lds
inc
loope
aas
xchg
push
dec
push
adc
aaa
andl
int
mov
pop
inc
jne
hlt
hlt
mov
stc
dec
cltd
add
and
pop
and
cmp
push
jne
mov
test
test
push
cld
aaa
sbb
jb
push
nop
push
mov
into
cs
xor
push
cmpb
in
push
jg
clc
sbb
xchg
mov
mov
in
ds
shl
xor
clc
fistps
mov
jl
mov
jmp
lar
testl
pop
sbb
jno
adc
loop
sarl
and
andl
push
adc
adc
adcl
loop
lret
movsl
adc
cld
jmp
xor
mov
sbb
xor
sti
sub
sarl
and
mov
add
sbb
movsl
cmp
inc
xlat
scas
ja
testb
xchg
fists
sub
jecxz
in
or
or
arpl
mov
lret
mov
sbb
fimull
lea
xor
or
cmpsl
jne
mov
std
les
push
loopne
xor
mov
divb
add
repnz
mov
xchg
ljmp
cwtl
mov
xchg
and
add
mov
mov
cs
and
movsb
subl
mov
inc
cmp
sub
mov
pop
push
out
jl
jmp
cmp
jo
xchg
js
xchg
mov
sub
fiadds
dec
dec
cmc
jae
cmp
pop
insl
repz
inc
gs
xchg
mov
loope
push
testb
aam
jmp
insb
repz
xor
movsl
outsl
imul
cmp
cltd
insb
ljmp
ljmp
jne
ljmp
mov
push
pop
sbb
xchg
shll
sbb
insl
and
inc
pop
out
hlt
add
test
test
xor
cli
ds
push
ss
fimull
sub
or
xor
aad
inc
stc
idivb
fdivrs
fldl
lods
push
pop
lods
jo
mov
test
fiaddl
fmul
aam
pop
outsl
sub
mov
pop
fiaddl
mov
imul
jbe
movsb
sub
xchg
out
mov
clc
fwait
idivl
adc
stos
sub
add
mov
dec
push
arpl
cli
xor
xor
adc
flds
ds
leave
cmc
sub
mov
mov
lahf
loope
sarb
xchg
pop
inc
xor
lret
xor
lret
push
adc
mov
ds
in
pop
icebp
push
xor
stc
ljmp
or
mov
xor
cmp
pop
popa
pop
jmp
mov
popf
enter
out
push
sbb
inc
push
addr16
repnz
shlb
push
xchg
shlb
lock
fcomi
pop
dec
jg
dec
mov
loope
lods
adc
inc
xor
push
xchg
or
mov
adcl
aaa
icebp
mov
inc
je
mov
je
jno
pop
mov
mov
lahf
aaa
dec
add
inc
fsubrp
sbb
repz
add
cli
pop
mov
mov
xorl
pop
mov
lahf
pop
or
pop
pop
ds
add
jo
inc
xor
aaa
xchg
loope
into
sbb
jp
cmp
mov
fidivs
mov
out
add
jg
call
mov
shrl
pop
push
mov
scas
add
lods
xor
push
jge
js
pop
sub
psllq
mov
leave
cmpsl
mov
sbb
sub
lods
outsl
xchg
pop
rcr
push
ret
and
inc
sbb
sbb
add
stos
scas
and
jmp
pop
iret
push
ret
stc
aam
and
and
pop
push
sub
roll
jno
sub
lret
sahf
sub
rcll
pusha
dec
lret
insb
or
fcomp
out
add
in
sbb
inc
jmp
es
push
add
dec
mov
packsswb
cmpsl
lcall
mov
shrl
mov
call
imul
lds
faddl
outsb
js
jns
jp
sub
jnp
cmp
cld
jae
mov
movsb
aaa
lea
lret
or
popf
jecxz
mov
cmc
mov
pusha
xchg
test
lock
xlat
pop
sbb
push
cwtl
adcl
fwait
push
test
fucomip
push
add
cmp
mov
push
dec
cmp
mov
stos
mov
sbb
mov
cmp
dec
iret
sbb
fwait
lods
pushf
dec
adc
and
clc
adc
mov
imul
negl
aad
adc
lcall
sti
adc
enter
inc
pop
pop
push
stos
sbb
pushf
jbe
cmpsl
mov
fwait
cmp
xchg
adc
push
sub
mov
test
inc
out
dec
out
lds
aaa
mov
add
adc
add
sbb
xor
incb
jmp
out
addl
lcall
ficomps
or
jge
sub
daa
stos
sub
lock
dec
adc
popa
ficomps
push
or
lahf
mov
in
and
test
xchg
cmp
pop
jb
jl
xor
stc
sbb
data16
mov
lods
adcl
insl
clc
lret
adc
xchg
sub
mov
jp
mov
jge
add
into
jle
or
push
mov
popa
icebp
sbb
insl
lret
dec
ds
inc
sbb
xchg
pop
sub
cltd
mov
in
cld
adc
jno
repnz
mov
shll
mov
cmpsb
cmp
sbb
or
xchg
xor
mov
mov
ja
push
test
cmp
ljmp
ret
xchg
aaa
adc
xchg
movsb
out
mov
ret
inc
pusha
mov
imul
repz
inc
push
mov
pop
adc
jge
adc
out
enter
fwait
das
sbb
mov
xchg
mov
out
mov
clc
inc
movsl
cmpsb
out
push
rcrb
out
out
jge
xchg
std
lret
pop
sub
add
mov
and
mov
loope
jo
cs
add
rol
adc
mov
push
jne
mov
sub
repnz
push
dec
xchg
inc
and
mov
lods
pusha
add
jnp
fcompl
movsb
pop
xor
aad
mov
rorl
test
int3
push
pop
cli
xor
ror
icebp
gs
dec
fcom
imul
mov
lea
std
push
mov
adc
inc
cmp
and
ja
pop
push
adc
adc
inc
loop
loop
dec
pop
sbbl
inc
push
out
push
cmp
imul
mov
lods
mov
mov
bound
negb
mov
jne
insb
ljmp
dec
pop
inc
pop
cmpsb
mov
xor
mov
jecxz
scas
mov
mov
lods
shrl
ret
jmp
xchg
insb
cmc
daa
lea
pushf
cmp
pop
mov
inc
cltd
jle
mov
sub
test
or
xor
and
pushf
xorl
aam
adc
mov
nop
out
ja
sbb
std
sahf
cmp
sbb
in
movsl
pusha
inc
in
ret
cmp
jne
adcl
xor
lcall
test
xchg
sub
mov
mov
pop
shl
stos
mov
xor
dec
fisttpll
sbb
sub
adc
or
or
dec
jne
or
jb
cmpsb
inc
mov
fsubrs
mov
sub
mov
shlb
lret
iret
lds
sub
lcall
insl
sub
fwait
sbb
jp
lea
or
bound
push
mov
push
and
adc
adc
mov
add
lds
xchg
push
test
jl
add
aad
mov
imul
aaa
test
sub
push
dec
cmp
pop
loope
push
dec
jg
or
ljmp
mov
mov
or
push
sub
loopne
cld
pop
or
loope
out
dec
push
pop
push
popf
adc
in
mov
int
adcb
jnp
test
call
int3
imul
cmp
clc
push
loop
out
inc
shll
push
fdivrl
dec
rorl
in
js
sbb
cmc
mov
push
mov
mov
test
sbb
imul
lahf
sti
fimull
jns
lahf
outsb
jp
mov
xor
fiadds
cmc
cltd
sub
sbb
mov
push
xor
mov
push
and
cmp
lret
dec
cmp
es
cmp
sub
lret
ss
out
cmpb
push
popf
leave
fildll
addr16
rcll
movsb
sub
dec
pop
add
out
mov
inc
and
xchg
adc
repnz
dec
mov
mov
lock
push
push
xchg
adc
sti
fwait
cmp
jmp
mov
dec
hlt
in
pop
repz
pop
and
or
add
mov
repnz
insl
push
sti
add
inc
add
add
mov
mov
xchg
es
imul
mov
and
and
cld
jae
and
and
cs
in
jnp
ror
pop
popf
mov
push
mov
cli
ja
or
cmp
ss
xbegin
scas
xor
pop
ret
pop
test
movsb
add
fisttpl
fcomps
cltd
pop
xchg
cld
xlat
shl
adc
ja
dec
jns
stos
mov
rorb
shrl
test
and
loop
or
icebp
mov
pop
inc
nop
jb
outsl
lahf
inc
mov
mov
mov
adc
cmc
adc
scas
nop
inc
in
jecxz
ja
push
imul
notb
sub
movsl
jle
lods
dec
imul
js
call
push
add
mov
aaa
pop
psubusb
dec
dec
aas
mov
pop
enter
inc
sbb
andl
pop
dec
out
test
pop
ja
xor
jecxz
test
popf
js
shll
sbbl
inc
lds
lret
es
dec
mov
pop
adc
shrb
cld
cmp
inc
aaa
ret
jmp
push
test
dec
cltd
in
mov
adc
sbb
mov
aam
sub
mov
testb
and
inc
ja
sbb
xor
arpl
sysenter
pop
test
test
test
or
idivl
adc
aam
jl
xor
mov
lret
inc
ljmp
push
into
test
mov
adc
movsl
xchg
fdivrl
das
adc
mov
cwtl
pop
ss
out
add
insb
sub
ss
push
lcall
xchg
nop
stos
mov
jg
stos
addl
aas
scas
xchg
aam
cmp
in
cmp
pop
mov
clc
pop
repnz
xchg
imul
push
push
xchg
inc
pop
adc
loopne
rcrb
adc
adc
push
movsl
aad
mov
pop
adc
insb
icebp
test
decb
lods
mov
fs
cs
pop
in
xor
lods
add
ret
dec
mov
push
fwait
add
nop
das
push
or
out
hlt
ret
cmc
cmp
inc
movl
fidivrl
add
cs
mov
outsl
cmpb
lock
in
int3
pop
jns
adc
add
cli
enter
dec
and
testb
mov
repz
push
xchg
lea
push
cli
lods
push
das
mov
jne
mov
and
repz
rcl
jp
inc
jo
inc
mov
xchg
loopne
incl
and
sahf
in
popa
sub
add
insl
mov
lods
push
dec
lret
mov
shrl
fstps
mov
sahf
pop
xor
dec
jne
cmp
repnz
out
scas
cs
hlt
in
out
sub
sbb
pop
mov
sub
inc
mov
rorl
jecxz
sub
adc
aam
sbb
imul
pop
lcall
mov
sbb
fwait
and
sbbl
jmp
or
ds
shl
adc
sbb
rorl
push
mov
sbb
and
adc
sti
jmp
dec
aaa
mov
pop
movl
mov
mov
jno
xor
int
decb
mov
test
aam
cmpb
out
xchg
sub
das
pop
and
sbb
ja
mov
cmp
cwtl
cmp
mov
stos
jg
stos
out
jnp
pop
pusha
mov
lds
dec
stos
ret
aad
pop
adc
or
add
cmp
lock
jae
popf
rorl
mov
cmp
push
data16
std
int
fisttpll
sbb
push
stos
sub
aam
mov
js
push
or
enter
push
int
loope
xor
pop
adc
cmpsl
mov
push
jb
test
and
mov
pop
dec
test
fs
push
andb
and
cmp
push
sbb
jg
lret
mov
xor
mov
out
mov
notb
xor
stos
sub
pushf
out
pop
mov
xor
and
dec
or
int
xchg
aad
xchg
jg
jmp
data16
ljmp
xor
ret
xchg
jo
fidivrs
stos
sahf
stc
jne
dec
mov
push
or
push
sbb
push
std
in
lcall
nop
or
imul
cmc
pusha
cld
sbb
mov
jo
in
inc
cmpsb
jne
out
inc
pop
mov
pop
mov
fucomp
fimuls
sahf
stos
dec
push
add
std
clc
es
icebp
loopne
adc
jmp
pop
out
jmp
mov
fnstcw
push
xor
inc
mov
shrb
mov
inc
mov
mov
push
xor
lock
test
pop
xchg
xchg
dec
ds
xchg
mov
shlb
adc
out
adc
nop
cld
pmulhuw
and
sti
cmp
pop
push
dec
jbe
xchg
mov
imul
cmpl
lret
jnp
scas
pop
adc
scas
push
test
sbb
repnz
jmp
fs
insb
cld
jb
inc
xchg
lahf
outsb
xor
push
xchg
int3
xchg
gs
xchg
dec
mov
pop
ret
popa
mov
mov
xchg
and
not
sub
dec
push
xchg
cmp
or
push
or
lods
push
add
repnz
ret
sbb
or
test
stc
inc
jbe
add
dec
xchg
imul
outsl
push
in
ret
outsb
add
pop
repnz
or
mov
mov
xor
and
cmp
loop
mov
iret
mov
fldcw
out
out
in
cs
cmp
lret
cmp
adc
or
push
dec
daa
jne
popa
push
outsb
mov
jecxz
aaa
incl
or
inc
mov
sub
or
push
loop
fimull
aam
mov
mov
orl
ffreep
cmc
add
push
dec
and
sub
lock
mov
rol
mov
mov
and
pop
inc
enter
aam
inc
cmpsb
imul
sbb
xchg
call
cmp
inc
repnz
ss
mov
das
lcall
lret
das
xor
xlat
xor
out
outsl
mov
and
mov
inc
imul
jp
scas
xchg
and
inc
xor
jno
arpl
ja
mov
mov
mov
ja
in
out
mov
jno
pop
add
adc
cmpsb
inc
dec
xor
ljmp
push
pop
arpl
insl
jecxz
aaa
inc
xlat
cmp
add
push
pop
adc
addb
pushf
aad
sbbl
ljmp
stc
push
adc
sti
and
in
aam
dec
aas
and
mov
out
int3
jge
int
fstpl
insb
mov
test
inc
in
inc
pop
in
ret
rorl
add
idivl
or
fwait
jbe
mov
cs
cmpsl
je
jae
lea
sbb
mov
sub
and
lcall
mov
cmpl
xor
imul
pusha
xlat
mov
mov
or
mov
popa
fmuls
pop
es
mov
push
mov
dec
mov
xchg
test
or
repz
jle
popa
dec
jp
add
repz
syscall
mov
repz
cli
rorl
bound
push
scas
mov
add
repz
dec
pop
xchg
and
aas
xor
sbb
pop
jl
cmp
adc
fwait
aad
pop
jge
push
dec
xor
addb
sbb
jns
mov
mov
out
inc
push
cmp
dec
and
xchg
int
add
ja
mov
add
scas
add
mov
pop
pop
adc
imul
xchg
xor
inc
je
and
dec
aaa
std
push
rcrl
add
leave
sub
stc
fstps
inc
les
sbb
xor
jge
out
sti
in
repz
push
jg,pn
mov
lret
xor
loop
aas
xor
stos
push
iret
lds
xchg
divb
jne
pop
xchg
cmpl
mov
xor
call
cwtl
cwtl
adc
inc
sub
rolb
dec
out
add
fisubrl
shrb
xchg
xchg
push
xchg
mov
aad
mov
cmp
adc
push
bound
imul
arpl
mov
lods
cmpsb
cmp
mov
aam
mov
or
js
xorl
or
loope
sub
and
mov
jne
in
and
inc
mov
scas
xor
jns
mov
nop
mov
sub
xchg
jecxz
sub
jns
and
out
xchg
pop
imul
hlt
xor
xchg
and
adc
clc
mov
adc
sbb
pop
push
stos
lahf
imul
insb
mov
dec
xor
pushf
test
xor
adc
aas
ss
ljmp
add
lods
test
sbb
sub
mov
dec
jnp
sarl
pop
jae
pop
xchg
es
std
xor
cmpsl
xacquire
inc
and
ret
leave
aaa
in
mov
shl
pop
fmull
fstps
mov
push
in
push
ljmp
cmp
mov
popa
in
sbb
dec
int3
repnz
dec
test
pop
orb
xchg
mov
inc
mov
xchg
inc
mov
jno
mov
ss
dec
inc
rorb
aaa
stc
inc
cwtl
fdivp
test
ret
arpl
cmp
jecxz
xchg
push
bound
xchg
scas
mov
in
and
lret
lret
lret
dec
mov
push
rol
mov
cmpsl
leave
inc
mov
sar
xchg
pop
jle
mov
push
idivb
dec
loopne
push
mov
add
stc
clc
jae
cs
fneni(8087
push
add
add
lret
sbb
mov
cs
cmp
in
push
mov
outsb
mov
adc
insl
xchg
inc
popf
rorl
jle
sbb
test
ret
dec
fwait
pop
popf
out
out
aad
outsb
stc
adc
adcb
push
aad
test
cmp
mov
sbb
in
jae
fs
addr16
mov
ljmp
sbb
pop
insb
gs
test
xchg
jmp
and
ret
mov
and
mov
sub
pop
mov
popf
or
test
jle
mov
cltd
adc
clc
xchg
jo
pop
lcall
addr16
xchg
hlt
mov
aas
flds
mov
iret
popa
adc
out
sub
dec
imul
sbb
sbb
pop
ficompl
dec
pop
ds
jg
add
lret
jmp
inc
push
je
in
mov
mov
orl
aad
sbb
lods
mov
cmp
stos
cmovge
inc
ret
popl
dec
adc
les
cmp
fsubl
lcall
shll
and
fwait
jne
test
rol
push
scas
int3
and
mov
jl
cmp
push
pop
rclb
pop
aas
jno
mov
pushf
add
nop
in
dec
sub
push
fidivl
jne
jb
add
pop
add
xchg
insl
insb
sub
imull
pop
adc
ja
mov
mov
mov
gs
enter
int3
xchg
cmpsb
jae
xchg
stc
int3
add
and
out
inc
jbe
xchg
jecxz
or
rorb
xchg
or
sub
add
aam
jb
daa
sub
jnp
mov
and
mov
test
fdivl
inc
push
mov
inc
jo
mov
inc
and
pop
mov
fmull
xor
xchg
push
add
aad
sbb
push
imul
xor
dec
jle
add
dec
loopne
adc
mov
daa
mov
stos
insb
getsec
sbb
xor
sarl
fcom
hlt
cwtl
inc
cmp
cmc
xlat
lods
adc
test
and
jns
xchg
jl
cwtl
popa
inc
js
adc
mov
push
pop
jae
dec
dec
pop
leave
mov
jo
add
inc
add
dec
fsubrs
int
cmc
xchg
stos
jns
loopne
xchg
popa
flds
sbb
pop
lods
push
aaa
cmp
or
inc
mulb
in
cld
movsb
insb
dec
lods
pop
jg
enter
cmp
lea
popf
into
lcall
lcall
pop
mov
dec
push
adc
cmpsb
mov
lea
dec
mov
shll
pop
or
dec
cmc
es
ret
int
cmp
loopne
imul
cmc
dec
cmc
xchg
cli
and
inc
or
ret
sbb
dec
int
pop
movsl
mov
aaa
pop
js
xor
jg
xchg
and
jo
daa
ret
aaa
das
outsl
iret
pop
xchg
ja
lahf
andb
xorl
jmp
sbb
mov
sub
mov
into
sbb
das
push
jae
sbb
rcrb
xchg
popf
loope
xorb
shl
add
loope
mov
jnp
mov
cld
mov
ret
push
cmp
jge
scas
xor
pop
in
pop
cmp
stos
xchg
cmc
or
lcall
pop
cltd
inc
add
push
inc
add
xchg
call
mov
mov
adc
pop
icebp
arpl
or
stos
dec
shr
lahf
push
cmp
les
adcl
mov
jno
jb
jl
fs
sub
test
test
cld
cmp
mov
rcl
jno
pop
sahf
jle
and
cli
pop
or
cmpsl
or
jmp
je
xchg
fiadds
enter
dec
lahf
xor
test
xchg
mov
jecxz
pop
or
sub
and
pop
ficoml
xchg
iret
xchg
and
ret
dec
test
pop
mov
ret
mulb
negl
hlt
or
dec
xchg
cld
pop
cmp
and
xor
mov
adc
test
push
roll
push
mov
xor
and
sbb
ss
push
push
lcall
mov
lods
jge
das
or
pushl
js
pop
jo
out
icebp
add
inc
mov
int3
sub
fisttpl
pushf
and
das
aaa
mov
xor
lret
dec
jle
fdivp
mov
xchg
movsl
sbb
movsl
xchg
jne
aas
dec
rclb
call
cmp
outsb
jnp
movsl
pop
add
mov
imull
sbb
push
add
inc
mov
xor
xchg
sub
daa
mov
inc
sbb
add
test
lods
jno
leave
shl
add
loope
push
mov
or
scas
pop
int
cltd
hlt
xchg
fwait
inc
mov
and
in
and
aas
jae
loop
jbe,pt
data16
das
inc
das
jbe
pushf
and
iret
sbb
add
add
repnz
sbb
test
pop
sub
jns
mov
insl
inc
mov
stc
jle
pop
ret
test
xchg
mov
js
cld
push
jnp
arpl
insb
aaa
test
adcb
mov
add
lods
xchg
mov
sub
les
divl
sahf
push
adcl
xchg
or
sbb
fnsave
cmp
fiaddl
rolb
test
mov
js
aad
lock
sub
push
fwait
lods
inc
and
sub
dec
sbb
aad
lock
push
dec
add
cli
sub
cmp
rcl
or
jae
lods
cmp
mov
rorl
push
jmp
cmp
pop
adc
insb
rclb
mov
aas
ss
cmp
sub
sub
cmp
pop
lods
jecxz
stc
test
sbb
sbb
lods
mov
sbb
dec
lea
xchg
jecxz
popf
xlat
mov
andb
xor
sarl
jae
xor
out
pop
sbb
add
in
loopne
push
or
pop
outsl
push
outsl
jno
aaa
repnz
pop
mov
mov
inc
je
daa
mov
lcall
rclb
and
jecxz
into
das
jl
mov
add
xchg
mov
sub
push
jno
mov
add
stos
lds
loope
sbb
addb
jmp
dec
int
add
in
lret
iret
cld
fcoml
inc
xor
aad
imul
sbb
notb
mov
vrcpps
cwtl
popl
gs
lods
test
xorl
loope
sarl
sub
addl
ljmp
aaa
mov
imul
imul
xchg
jmp
pop
mov
fnsetpm(287
sub
in
ror
divl
pop
into
jnp
mull
cmp
cli
scas
inc
and
loop
movsb
je
dec
adcl
fildl
hlt
mov
dec
sahf
cltd
sub
int
pop
gs
cmp
jo
push
push
outsl
sbb
mov
push
mov
sub
flds
fcmovnbe
bound
xchg
xchg
iret
xchg
mov
xor
cmc
xor
fcmove
lds
xchg
mov
lret
inc
mov
sub
outsl
add
adc
inc
and
call
mov
mov
jb
arpl
mov
lret
push
scas
aad
movsb
pop
stos
in
imulb
test
pushf
imull
insl
jae
mov
pop
incb
mov
inc
jge
sbb
cmp
xchg
mov
mov
mov
enter
push
and
imul
push
xchg
out
mov
dec
repz
pop
xchg
xchg
jno
cmp
xchg
sub
jg
pop
test
push
pop
or
cmp
cli
in
jnp
addr16
in
and
cmp
fmull
aas
stc
test
icebp
dec
adc
lods
idivb
out
sbb
cltd
inc
cld
and
sahf
pushf
pop
jl
mov
ret
jle
addr16
loopne
lods
mov
xchg
and
mov
push
test
es
addl
pop
dec
int
rcl
add
inc
mov
mov
pop
ret
xchg
negb
xor
int
adc
adc
adc
or
xchg
cmp
outsl
add
inc
mov
add
xchg
cwtl
push
sahf
adc
lods
pop
add
sbb
xchg
sub
jge
dec
xorl
sub
jg
xchg
out
imul
fsubrl
mov
push
pop
dec
mov
mov
xor
xchg
cmp
dec
xchg
in
sti
lcall
pop
sbb
pop
jge
add
popa
jns
cld
cmp
test
jbe
or
pop
xchg
test
mov
in
cs
push
sbb
mov
jo
icebp
testl
lret
scas
sahf
pop
xchg
mov
mov
dec
inc
jo
dec
and
gs
jge
pusha
push
icebp
sub
bound
or
sahf
movsl
inc
mov
fwait
or
xchg
mov
inc
inc
cmpsl
outsl
fdivl
data16
divb
in
lds
push
jb
xor
cmc
sbb
pop
jl
mov
mov
stos
or
lds
or
je
xchg
sbb
jo
xor
and
mov
mov
xchg
arpl
clc
or
sbb
adc
je
push
lret
lret
add
inc
loop
pop
dec
xor
mov
add
ss
jle
xlat
mov
or
add
mull
add
inc
jecxz
cld
int
movb
or
fs
jmp
or
das
xor
lcall
lock
xchg
mov
sbb
stos
rol
das
sub
lcall
enter
mov
pop
mov
pop
jnp
rorl
daa
fldenv
xor
mov
insb
icebp
or
or
incb
mov
aaa
mov
push
inc
clc
pop
test
lods
push
sbb
sub
dec
frstor
and
roll
bound
and
dec
mov
and
add
loope
push
xor
mov
out
imul
pop
dec
mov
mov
mov
sub
cltd
ret
or
jg
mov
adc
and
insl
int3
pop
mov
mov
adc
jb
aad
fwait
jmp
stos
mov
xchg
fucom
mov
das
xchg
jecxz
cmp
lods
cltd
mov
mov
dec
aas
sbbl
sbb
ss
aas
and
or
cmp
lods
jnp
das
mov
push
loop
cmp
add
test
push
sahf
je
pop
adc
sub
or
cmpsl
pop
test
xchg
push
lcall
cs
rcl
mov
sbb
jbe
adc
push
mov
mov
gs
nop
dec
xchg
clc
push
add
test
dec
daa
mov
dec
xchg
xor
clc
stos
or
mov
pop
in
lcall
out
push
add
mov
insb
testb
cmp
ret
pop
sbb
push
iret
add
dec
xchg
and
inc
scas
push
bound
pop
cltd
cmp
out
dec
cmp
xor
cwtl
loopne
mov
sahf
xchg
mov
bound
push
sub
mov
push
pusha
lret
xchg
or
xchg
out
stc
std
leave
mov
xor
ficomps
ds
lcall
stos
jnp
push
cmpb
das
xchg
cmp
pop
adc
jo
jmp
or
loopne
outsb
stos
sahf
xor
mov
jecxz
sbbb
adc
cld
mov
cld
mov
dec
pushf
jp
xchg
ffreep
fdivs
subl
inc
in
and
jns
dec
or
xor
insb
sbbb
inc
idiv
or
repz
xlat
adc
icebp
mov
cs
dec
popf
andl
test
movsb
sarl
shrb
sbb
jmp
pop
popa
das
call
jno
mull
cmp
sub
pop
inc
pop
jnp
jae
rcl
in
dec
sbb
outsb
cmp
inc
mov
test
hlt
mov
clc
and
cmpsb
xor
jno
sti
nop
mov
mov
mov
fcoms
jmp
sbb
mov
push
aas
rcll
pop
mov
mov
iret
or
call
outsb
mov
pop
fsub
dec
out
repnz
xchg
clc
cwtl
out
idivb
scas
xor
int3
dec
ror
sbb
push
mov
xlat
xchg
popa
inc
in
pop
push
xchg
dec
and
fbld
popa
push
es
jns
sar
iret
push
lcall
dec
xchg
xchg
xchg
mov
test
pop
fistps
pop
iret
pop
push
icebp
mov
nop
out
adc
fwait
mov
adc
loope
stos
dec
sbbl
inc
sbb
sti
aaa
mov
shll
loopne
lret
repz
sub
test
mov
movsl
jl
add
jecxz
pop
mov
xchg
repz
repnz
push
bnd
test
adc
or
test
sub
and
ljmp
scas
and
imul
and
cli
fs
lret
out
inc
push
insl
and
or
xchg
or
inc
popf
out
pop
out
outsb
add
imul
in
dec
lahf
inc
pop
xchg
addl
sbb
mov
das
push
in
push
loope
mov
mov
pop
sbb
mov
scas
sahf
jmp
mov
jno
idivl
xorb
or
adc
imul
orb
in
push
ja
lret
bound
roll
lahf
pop
sbb
xchg
outsl
jb
popa
outsl
jo
push
mov
xchg
mov
cmp
xor
pop
push
jle
jg
add
pop
cs
ret
je
push
hlt
fisubrs
push
push
stos
push
mov
mov
mov
sub
ljmp
pushf
cmpsb
addr16
imul
mov
or
pop
add
lds
stos
mov
cmp
xor
into
jp
scas
popaw
out
sub
or
and
out
lea
inc
movsb
sub
mov
cs
sub
scas
sub
jecxz
adc
popa
fcompl
scas
orl
push
data16
cs
jae
push
cmpb
inc
xlat
cltd
shlb
idivl
fldenv
dec
ja
fcomps
adc
mov
rcrl
xchg
cmpsb
pop
out
mov
les
pop
addr16
pop
jnp
cld
orb
iret
repnz
add
pop
sahf
push
sti
scas
in
aas
xchg
shrl
clc
fdivrl
pop
sbb
mov
push
in
cmp
push
sub
loopne
mov
inc
insl
popa
push
pop
push
outsl
outsl
mov
int
cli
test
and
fisttpll
xchg
or
dec
sub
pushf
ds
cmpsl
in
xor
movsl
dec
cs
adc
fildll
jl
dec
push
outsl
cmp
lret
rcrl
in
add
adcl
fiadds
clc
pop
push
mov
fwait
stos
jp
sbb
stc
pusha
sti
out
add
mov
call
cli
insl
cmc
pop
ret
mov
mov
pop
sahf
aam
push
mov
cwtl
mov
ja
je
sub
insb
inc
je
imulb
xor
or
xchg
and
xchg
cmp
scas
std
add
and
push
daa
mov
enter
pop
into
lods
push
mov
ja
xor
mov
inc
std
push
inc
fsubrs
das
jg
cmpsl
jecxz
and
aaa
adc
std
insb
mov
aas
dec
cmpsb
les
mov
das
inc
add
add
mov
sahf
shl
mov
dec
insb
cmp
shlb
insl
jle
xchg
mov
xchg
sub
sti
dec
dec
outsb
push
cmpsb
pop
push
daa
rol
adc
sub
jns
xor
mov
pop
pushf
leave
dec
je
and
in
inc
jle
outsb
jne
ss
imul
nop
les
inc
shrl
call
pop
movq
ret
incl
and
stos
call
xchg
or
xor
mov
jl
mov
push
or
aam
aad
stos
jg
jp
xor
and
shlb
mov
out
xchg
mov
into
je
das
mov
arpl
mov
loope
sub
fsubrs
pop
mov
push
add
cmpsb
out
into
xchg
sbb
mov
adc
pop
rorb
scas
cltd
in
movsb
bound
add
fldenv
jns
mov
daa
jb
xchg
rclb
ja
pushf
imul
xor
add
dec
aas
in
aaa
pop
arpl
nop
popf
rorl
in
xchg
adc
das
lea
sti
cmpsb
mov
ljmp
cmp
movsl
and
int
dec
fdivrl
imul
xor
bound
js
sbb
adc
add
aaa
fwait
jnp
pop
sarl
call
jno
popl
int3
ret
fistps
fistps
movsl
arpl
cs
aaa
test
inc
ficoms
lock
aam
cmp
cmp
jmp
mov
and
xchg
aaa
sub
jns
bound
cmpsb
or
dec
jecxz
lock
test
dec
stos
inc
pop
jne
fstl
bound
imul
pop
pop
xchg
or
mov
push
xlat
outsl
xchg
sbb
push
mov
push
sub
push
mov
sbb
dec
in
test
or
xor
fwait
cwtl
in
sbb
andl
xchg
inc
mov
mov
mov
xchg
cmpsl
cmp
stc
jg
loop
xchg
ds
fsts
xchg
jnp
mov
jmp
lock
repz
adcb
push
decb
rol
mov
ficoml
mov
mov
imulb
pop
imul
jns
in
out
mov
mov
jno
xchg
ret
stos
out
inc
and
cmpsl
aad
int3
mov
test
das
mov
and
or
jne
loopne
push
cwtl
push
lret
xchg
cwtl
push
movsl
sub
adc
addr16
adc
xor
shrb
sahf
rcrl
scas
fs
lret
rcrb
test
ss
push
mov
leave
cmp
xor
adc
push
push
push
ljmp
fwait
push
adc
test
ja
push
cmpsb
jp
push
and
adc
sbb
cmpsb
mov
loopne
sub
mov
pop
pushf
shlb
or
pop
pop
dec
push
lahf
mov
fsubrl
xchg
mov
pop
pushf
sub
ficompl
scas
ret
inc
add
out
xor
testb
lcall
pop
out
push
push
cli
cmp
pop
fisttpll
sub
add
push
and
lcall
inc
inc
inc
sbb
pop
test
shrb
cmpsb
lods
push
in
rcll
stos
mov
jb
scas
js
xchg
repnz
lods
sbb
dec
subl
pop
out
xlat
mov
pop
add
in
jae
xor
cmpsb
mov
mov
in
pusha
xor
xor
mov
inc
mov
mov
sti
aas
push
xchg
test
or
push
dec
push
mov
dec
fidivs
jb
sbb
adc
or
scas
into
jmp
or
or
test
lea
jge
mov
iret
and
scas
cmp
cmp
repnz
push
fstpt
and
lea
inc
addr16
cmp
sbb
int
pop
out
js
mov
std
jle
mov
xchg
daa
popa
fmul
cmp
push
icebp
out
jo
pop
js
test
jge
loope
mov
js
xor
xorb
dec
fwait
lahf
fbstp
in
jl
pop
mov
mov
sbb
cmp
daa
add
addr16
pop
ret
inc
test
outsl
dec
mov
scas
push
jmp
lahf
test
jmp
adcb
adc
xchg
or
lret
mov
cs
mov
stc
pop
call
mov
xor
jecxz
mov
dec
jae
pusha
jb
arpl
push
sbb
nop
mov
mov
mov
and
loopne
fildl
mov
sti
push
dec
pop
mov
sub
xchg
cmpsl
movsb
inc
out
fldl
or
mov
mov
jb
jnp
xchg
je
push
cmc
mov
aam
insb
dec
mov
loope
out
add
jge
or
bnd
mov
lea
loop
jae
xchg
xor
in
adc
sbb
sub
xchg
jnp
sub
frstor
inc
dec
mov
lds
xorps
mov
mov
loopne
and
and
sti
lcall
inc
in
jno
dec
xchg
insb
adc
jne
xchg
aam
push
sub
leave
or
lea
mov
mov
shlb
or
pop
lods
jle
aad
xlat
cmp
dec
xor
loop
pop
push
add
jmp
mov
jbe
mov
push
movsl
bound
sbb
jo
xlat
cmp
pop
out
ret
xchg
jge
mov
push
fs
dec
xor
jmp
shlb
push
mov
and
adc
mov
test
idivb
cmc
or
adc
jecxz
push
xchg
in
or
adc
dec
jmp
adc
iret
fcomps
sbb
and
enter
jno
mov
fcomp
out
cmpsb
mov
cmp
and
jecxz
test
and
ficompl
push
lds
ja
subps
mov
mov
jne
inc
pop
lahf
into
imull
push
pop
add
xchg
negb
ret
or
shlb
insb
cmp
test
xor
push
popf
fs
lods
cmp
add
pop
pop
loope
mov
cmp
jl
addr16
push
xor
sbb
dec
push
fwait
out
inc
fdivr
jbe
lret
mov
jbe
shr
je
fs
jge
call
aaa
cmpsl
leave
mov
mov
mov
test
push
mov
nop
adc
adc
sbb
addr16
out
adc
dec
addl
ss
mov
pushf
in
lcall
fisttpl
push
add
inc
adc
sbb
adc
push
arpl
push
fidivrl
cmpsl
mov
mov
jns
mov
xchg
popf
sbb
scas
stos
add
ret
int3
add
unpckhps
leave
sub
push
add
or
inc
mov
cmp
xchg
dec
icebp
int3
fcompl
or
lods
jno
jp
pop
or
inc
out
dec
jbe
adc
jl
mov
or
sub
dec
test
mov
push
movsl
xor
lock
ffree
xor
scas
inc
xchg
pop
cmpsb
ret
out
rcl
popf
and
sbb
lods
cmp
or
xchg
ljmp
xchg
xorl
dec
sbb
fstl
pop
add
jnp
outsl
add
sbb
aas
stos
inc
ret
fistl
push
stc
arpl
test
jp
and
popa
sbb
cmp
cmp
pop
push
push
in
cmp
dec
dec
and
ret
fisttpll
jno
mov
test
aas
cmp
sub
fidivs
pop
mulb
stos
test
test
or
dec
mov
scas
stos
xchg
leave
push
int
mov
and
cltd
or
xchg
into
js
sti
insb
pop
lods
adc
daa
jmp
mov
jno
push
mov
fildl
cmp
stc
mov
pop
cmc
loopne
imul
incb
push
pop
jge
mov
lock
xlat
cmp
jmp
cli
dec
mov
xchg
dec
je,pn
shrb
les
push
jle
ret
std
mulb
in
pop
pop
mov
cltd
mov
and
cmp
rcrl
mov
mov
cli
test
xchg
xchg
addr16
xor
jne
mov
lds
in
sbb
inc
inc
dec
xchg
pop
mov
mov
xor
outsl
sbb
push
sub
sti
xchg
jle
insl
movsl
dec
imulb
xor
push
popf
ret
cmpb
enter
aaa
or
stos
lcall
nop
addb
in
aam
lods
in
jns
xor
in
jb
ja
daa
scas
out
fbstp
insb
loope
arpl
add
cmp
inc
jle
xor
cs
mov
xlat
jl
push
jmp
dec
inc
lahf
dec
jno
add
sub
xor
data16
stos
push
or
ds
cwtl
push
aaa
jl
inc
push
sbb
xor
xchg
shlb
jg
push
jmp
cmc
jbe
sarl
or
fstpl
data16
out
imul
or
cltd
or
or
outsl
fidivs
xor
push
push
lds
sti
insl
jnp
cmp
lock
mov
xchg
adc
out
fnstsw
fwait
push
cltd
dec
mov
xor
sub
inc
xchg
pop
and
aam
xchg
iret
xor
or
outsl
ljmp
adc
sbb
insl
shlb
fstl
push
xor
add
popf
out
insb
add
scas
mov
xor
sub
lods
mov
mov
movb
movsb
pop
stc
test
mov
out
push
shlb
dec
mov
xchg
cmp
push
xchg
mov
imul
lds
in
add
idivb
mov
call
mov
jp
ret
lret
jmp
scas
stos
lret
sub
bound
cmp
test
or
xor
les
negl
les
mov
jae
push
mov
sub
pusha
cmpsl
ret
push
dec
xor
mov
sbb
jp
mov
sbb
fsubr
pop
inc
test
mov
lods
icebp
mov
dec
mov
pop
cs
inc
push
xchg
roll
inc
out
add
sbbb
rorl
fs
movsb
adc
outsb
mov
sub
btr
cmp
cmpsb
or
xchg
cs
xchg
cmpsl
cmp
stos
scas
sahf
shlb
mul
mov
cmpsb
cmp
rcr
aad
xor
inc
or
mov
mov
and
addr16
sbb
loop
nop
popf
out
xchg
ljmp
sub
sbb
xor
int3
dec
fsubrs
xor
inc
fstpt
jmp
inc
push
xchg
jns
pop
pushf
rorl
sbb
add
mov
fstpt
sbb
sub
loopne
xchg
jp
sbb
add
push
int
stc
lea
fistl
xchg
testb
mov
ror
das
mov
xorl
pop
hlt
sbb
daa
ds
xor
jmp
mov
add
pop
iret
cmp
testb
push
push
add
mov
sub
cmp
xchg
mov
fildll
outsb
scas
call
out
cmp
pushf
or
xor
xor
adc
das
or
in
xchg
stos
out
adc
xor
lret
outsl
jle
in
dec
lock
mov
mov
jno
mov
popa
lea
popa
jno
outsb
ret
mov
je
ss
xchg
das
repnz
fsubr
imul
sarb
add
push
xchg
xchg
sbb
xor
and
lret
push
lahf
adc
insb
outsl
ror
fdivrl
cli
sbb
sub
push
gs
mov
sub
das
adc
adc
mov
mov
pushf
hlt
into
mov
jl
push
ret
or
int3
bound
or
jp
dec
sbb
movnti
mov
cld
daa
lds
jb
mov
jnp
loopne
adc
dec
jmp
or
or
shrb
nop
mov
push
push
fsubs
movsb
aaa
btc
pop
call
jo
or
cmp
jo
ja
jge
pop
fs
mov
pop
mov
cld
mov
jecxz
lret
sbb
push
mov
mov
jae
ds
fcoms
rcll
pop
or
push
adc
lret
in
or
lcall
test
test
xor
and
push
insl
jnp
das
pop
loope
jo
cmpsl
inc
ds
test
xchg
arpl
pop
les
rolb
psubw
and
ficompl
jl
std
pop
and
mov
scas
cli
push
call
mov
orl
jns
out
dec
add
add
xchg
push
fs
fldenv
pushf
xchg
int
mov
inc
adc
push
mov
inc
inc
mov
rorb
pop
and
xchg
and
loop
jle
push
popf
push
cmpsl
add
pusha
jns
dec
inc
jmp
aam
aad
mov
push
das
push
hlt
adc
loop
sub
daa
sbb
or
mov
adc
adc
and
dec
or
pop
jle
adc
andl
into
lods
jecxz
add
lcall
popf
cmp
mov
int
xchg
jp
xchg
dec
rcrl
stc
nop
test
hlt
lock
add
das
jo
dec
int3
sub
xor
cmpb
cmp
push
push
add
or
mov
and
or
outsl
push
cwtl
loop
mov
xchg
loope
sub
xlat
call
popa
mov
mov
popf
divb
rcll
lea
gs
arpl
fnsave
pop
mov
inc
call
clc
push
loop
iret
stos
fnsave
movsl
fdivs
or
ljmp
add
enter
jl
push
jnp
cmpsl
test
repz
iret
push
cmp
movsl
xchg
jns
sbb
xlat
xchg
paddusw
inc
pop
jns
adc
xchg
call
inc
fwait
sbb
or
ss
popf
nop
popf
fistpl
out
bound
mov
adc
mov
xchg
mov
nop
out
fwait
mov
sbb
nop
dec
loopne
fxam
sub
inc
or
mov
ds
out
push
add
and
add
in
pop
or
xchg
out
add
mov
xchg
js
dec
mov
sub
pop
xchg
es
addb
xchg
mov
push
jge
mov
fdivp
ret
loop
pushf
in
and
icebp
and
sub
das
addr16
insl
dec
and
int
mov
sub
call
cmp
mov
popa
insl
daa
jmp
pop
jg
ljmp
data16
pop
aas
int3
lods
insl
mov
or
adc
pushf
sar
enter
dec
fs
je
ret
ss
outsl
fiadds
imul
pop
jb
sahf
ja
mov
int3
inc
daa
mov
jl
mov
push
jge
lcall
push
adc
ljmp
std
in
repz
jmp
xchg
mov
adc
call
inc
aam
inc
mov
shrb
popa
in
or
push
ffree
test
mov
test
push
pop
or
bound
pop
test
test
sbb
sub
adc
test
xchg
adc
adc
mov
lods
cmp
sahf
shll
dec
sub
adc
std
pusha
add
xor
lods
mov
mov
hlt
daa
clc
shrb
inc
and
jb
ret
pop
stc
imul
inc
xchg
stos
int3
es
sub
add
mov
mov
repnz
and
and
bound
add
icebp
into
mov
xchg
mov
aaa
loopne
xchg
rorb
out
aaa
aaa
jg
lret
outsl
bndstx
and
icebp
adc
subl
adc
mov
fnsave
sbb
loop
push
js
cmp
movsl
xor
or
imul
std
add
pop
mov
std
pop
or
pop
ds
push
dec
out
inc
mov
rolb
push
push
xchg
lock
es
pop
ljmp
cmp
addl
pop
les
jno
fdivl
pop
les
push
les
sbb
fimull
sbb
pop
lahf
jge
cld
inc
push
addr16
pop
cmpsb
dec
rorl
xlat
fwait
push
pop
dec
pop
lret
enter
lods
cmp
sub
sub
cmp
gs
and
and
xchg
adc
es
and
sub
pusha
ja
out
inc
xor
popf
add
int
inc
notb
mov
lret
mov
or
jge
jecxz
and
or
imul
mov
lock
sub
mov
lods
repz
or
adc
cmp
stc
sbb
sub
loope
test
push
jbe
push
jbe
cmp
nop
mov
or
xlat
imul
add
add
mov
repnz
sbb
lea
aam
test
xchg
mov
mov
pop
cmp
push
xlat
dec
out
sbb
jmp
nop
es
or
xchg
sbbb
mov
mull
test
inc
dec
dec
test
xlat
or
dec
sbbl
lret
pop
xor
and
xor
mov
movsb
iret
mov
lret
orb
insl
test
or
imul
imul
dec
mov
movl
adc
mov
aas
adc
adc
pop
cmp
cmp
inc
les
nop
lcall
addr16
sahf
xchg
adc
test
mov
nop
xlat
icebp
mov
xchg
daa
lds
jbe
adc
dec
push
push
xor
push
pop
pop
lea
pushf
jl
loop
mov
mov
mov
outsl
cwtl
popf
mov
imul
xor
sbb
push
add
mulb
test
push
std
jge
sarb
dec
mov
jmp
in
cmc
jmp
add
mov
dec
shrb
mov
xchg
xor
arpl
cmp
popa
lods
sub
fists
iret
inc
jmp
xchg
mov
sub
adc
test
daa
cmp
out
sub
ds
sub
popa
or
push
sti
in
fiaddl
scas
in
mov
ret
pop
jbe
dec
inc
push
mov
and
cmp
dec
ja
cmc
sbbb
into
mov
push
sub
add
ret
int
lahf
dec
push
fcoms
cmpsl
jae
out
rorl
movsl
dec
iret
push
sbb
cmpsb
mov
inc
push
imul
ficompl
sub
adc
ja
xchg
add
pop
sub
ljmp
add
jmp
repnz
push
sbb
xchg
pop
mov
dec
adc
fsubl
bound
push
hlt
push
inc
sbb
xor
lret
fbstp
cmp
pop
dec
imul
lahf
adc
adc
add
aad
ss
or
sbb
mov
dec
lret
push
push
mov
ss
je
jbe
inc
mov
and
xor
sbb
call
sub
inc
inc
and
ud1
sbb
pop
roll
loope
pop
fbld
stos
addb
mov
jmp
shrl
stos
push
cwtl
fwait
cli
mov
or
adc
fcoms
jae
aad
push
hlt
mov
cmp
test
outsb
and
xor
adc
in
dec
xlat
xor
inc
outsb
aam
iret
mov
enter
pop
lock
stc
adc
lds
mov
adc
lods
je
xchg
lret
push
mov
cli
push
test
mov
add
pop
aaa
xchg
fnstsw
orb
mulb
xchg
inc
test
imul
adc
call
inc
ss
dec
clc
or
aam
data16
aad
xchg
mov
jle
and
mov
es
mov
scas
jl
jae
das
push
fsubl
adc
add
cltd
out
repz
mov
xor
std
dec
xchg
inc
test
lock
cmp
jne
add
nop
push
mov
mov
lea
arpl
mov
pop
sbb
xchg
add
and
jp
sub
cmpl
dec
test
mov
movsb
insl
mov
movsl
jle
jle
mov
divl
popa
push
nop
inc
pop
xor
or
or
lods
pop
pop
pop
jb
xchg
jecxz
mov
loop
pop
inc
aaa
or
clc
cmpsb
adc
cmp
test
hlt
sbb
push
gs
add
jno
dec
ffree
stc
scas
push
push
int3
sub
xor
pop
loope
repnz
or
std
daa
cli
or
pop
or
adc
mov
cmp
imul
pop
push
mov
or
frstpm(287
xchg
mov
ret
out
sbb
inc
lret
sub
fst
jp
or
jno
fwait
xchg
push
fcomp
push
lock
push
push
and
dec
sbb
fsubrs
jo
movsl
cwtl
push
inc
mov
mov
jle
push
push
stos
push
in
dec
lea
fs
jle
pop
mov
sub
mov
sti
repz
outsl
out
pop
and
outsl
lret
in
and
movsl
loopne,pt
push
inc
mov
xor
jle
push
or
sbb
adc
add
push
sub
js
shlb
mov
jge
jns
imul
sub
pop
mov
arpl
mov
sti
daa
and
insb
mov
cld
sub
loopne
repz
movsb
imul
mov
movsl
cmp
sbbb
dec
stos
push
lahf
adc
int3
in
lods
or
add
hlt
addl
ja
inc
pop
into
add
insb
and
push
sub
or
cmp
sbb
bound
adc
ss
movsb
xchg
fidivrl
adc
inc
mov
lock
inc
in
push
les
mov
mov
daa
sub
dec
aam
mov
mov
pop
dec
arpl
out
mov
dec
mov
add
jae
jbe
push
sub
in
or
test
xchg
mov
cld
subl
pushf
jl
stos
pop
push
fisttps
daa
xchg
pop
test
test
mov
cmp
mov
fidivrs
push
out
cmc
mov
xchg
mov
negl
lods
xor
xchg
je
xchg
ret
dec
loope
or
pop
adc
mov
cli
mov
sbb
pop
bound
cmp
push
xor
sbb
mov
add
mov
call
xorl
pop
jnp
out
fwait
pop
lds
cmp
pop
sbb
jbe
dec
mov
je
mov
pop
fcomi
lea
adc
and
mov
push
pushf
mov
pop
pop
fs
and
xchg
imul
ret
lods
sub
or
inc
xor
test
pop
add
mov
in
lahf
imul
int
dec
inc
cmp
jb
hlt
mov
stos
xchg
and
pop
xchg
lcall
lahf
shlb
movsl
adc
flds
cmp
repz
xor
push
repnz
mov
mov
jnp
mov
fisubrs
cli
stos
ds
fstpl
sub
jg
scas
cmpsb
and
sti
movsl
inc
mov
incb
ss
add
dec
add
mov
out
mov
ret
xlat
cmpsb
mov
iret
popf
imul
pop
aad
and
jo
xchg
jb
and
pop
and
jnp
movsb
jb
sub
fists
mov
test
aaa
ja
sti
inc
cmp
sahf
dec
pusha
lods
andb
repnz
test
arpl
inc
nop
mov
sahf
hlt
insl
gs
imul
insb
mov
in
pop
inc
jbe
adc
push
daa
and
jmp
sbb
lods
out
inc
lcall
adc
adcb
in
sbb
xchg
inc
rcr
in
dec
or
fdivrs
xchg
mov
cmp
add
in
pop
jnp
mov
mov
mov
xlat
ljmp
push
cmp
jle
out
movsb
pop
xor
mov
test
and
dec
in
add
mov
nop
pop
xor
jmp
lods
inc
add
push
xchg
cmp
pop
push
push
test
xor
mov
pop
ja
popa
es
fildll
clc
insl
mov
mov
lahf
push
cmpsb
adc
jle
cmpsl
jne
int
out
sbb
fimull
inc
jnp
outsl
sub
pop
add
into
stos
hlt
test
ljmp
and
pop
mov
mov
data16
jns
out
fdivrl
jno
cmpsb
in
pop
in
sub
adc
loop
and
xchg
shrb
fildll
jl
imul
test
js
and
aad
sub
aad
out
aaa
mov
shll
jmp
shlb
es
xchg
mov
jle,pn
xor
xor
inc
jp
mov
fdivrs
dec
lea
or
or
mov
aad
aaa
and
cmp
push
clc
mov
jbe
and
test
pop
iret
pop
or
jp
leave
push
and
mov
out
push
js
adc
mov
jecxz
mov
jno
cmpsl
adc
stos
xchg
lret
js
mov
scas
mov
insb
scas
sbb
mov
mov
packssdw
jo
movsb
out
popa
dec
sub
push
dec
cmp
xchg
inc
aam
inc
mov
jp
add
hlt
int3
mov
out
inc
mov
xor
or
xchg
mov
shrb
clc
into
sbb
mov
out
sub
and
adc
mov
mov
xor
aad
adc
inc
mov
add
fistpl
out
xchg
cmpsl
test
lds
insl
xlat
sbb
mov
loop
aas
jns
imul
out
fs
xor
sbb
sahf
andl
sbb
cmp
adc
or
jl
push
rcrl
jbe
pop
push
flds
sbb
mov
xor
std
mov
pop
sub
mov
mov
inc
int
lds
addl
out
adc
fucom
jo
and
fimull
mull
fldt
sub
ss
fimull
js
jne
mov
jl
aaa
dec
pusha
mov
cmc
pop
fstpt
gs
sbb
mov
mov
push
add
push
mov
mov
pop
fidivl
mov
xlat
roll
push
xchg
jnp
stc
je
insl
cmp
filds
or
xchg
pop
aad
mov
sub
push
add
int3
addr16
pop
jbe
sub
jne
scas
mov
pop
fbstp
rep
mov
loop
inc
lret
sarl
in
daa
xor
push
fdivr
lret
add
repz
and
int
dec
orb
pop
jnp
add
sub
pop
dec
push
lea
rcrb
pop
jmp
aaa
push
insb
fcomps
stos
ret
rorl
test
xchg
fs
pop
sbb
cmp
testb
stc
das
lods
test
mov
test
mov
jg
test
fisubrs
mov
insb
sbb
jns
inc
jecxz
jno
cwtl
mov
xor
push
dec
inc
pop
pop
add
mov
fsubrp
shrb
pop
push
mov
xor
sbb
fiaddl
xchg
or
lahf
sub
mov
dec
or
inc
sub
pop
jo
in
xor
mov
or
insb
ds
sti
in
mov
xor
ljmp
rclb
outsl
daa
cmpsb
iret
inc
dec
pop
int
dec
cmpsb
into
in
jne
push
add
flds
inc
daa
sub
add
mov
icebp
adc
pop
push
or
dec
aam
out
xchg
pop
jnp
mov
stos
jl
xlat
and
fstl
in
sub
sbb
popf
add
inc
fldt
lds
pop
mov
jecxz
fsts
push
mulb
and
xchg
je
insb
sti
push
aas
loopne
dec
insl
fucomip
jo
repz
jae
pop
ficoml
iret
nop
push
or
adc
out
pop
aas
fwait
shll
xchg
loopne
popa
sti
cmc
cmc
loope
push
mov
mov
leave
or
test
stos
nop
cmp
imul
cmp
test
out
dec
push
inc
cmc
or
cmpsw
jo
int
out
xchg
push
shlb
inc
xlat
and
arpl
stc
shll
test
aam
and
pop
jp
out
mov
sbb
fs
lea
dec
push
popf
xor
add
add
push
js
sbb
out
sbb
dec
ret
push
pushf
sub
fisubrs
mov
mov
stos
out
mov
pop
push
mov
scas
mov
inc
daa
test
popa
test
inc
or
imul
xchg
jne
test
dec
sbb
add
test
fsubrs
stos
mov
movsl
mov
lret
in
dec
pop
fcmovnu
pop
jno
jmp
out
in
push
xchg
xchg
incl
add
loop
fs
mov
fadds
push
mov
insb
mov
jg
lret
jle
cs
or
aas
pop
bound
repnz
in
push
lcall
xchg
daa
fcomps
lret
hlt
cli
add
pop
test
mov
rorb
and
jns
lock
add
sarl
sbb
cs
rorl
jl
data16
xor
enter
mov
mov
pop
push
adc
jmp
fstpl
and
mov
mov
fstps
cld
push
cmp
xchg
inc
or
jecxz
cmc
inc
stc
push
mov
xchg
cmp
enter
jecxz
push
ret
add
scas
sbb
ret
stc
fsubr
movsl
sbb
cltd
dec
data16
jge
xchg
leave
sti
aad
outsl
mov
bound
or
pop
sbb
xchg
shlb
loop
push
cmp
inc
outsb
popa
jl
inc
or
jp
xchg
xchg
sub
add
mov
add
outsl
mov
add
pop
xor
jns
pop
jne
data16
jge
push
repnz
loope
xchg
mov
adc
dec
xlat
jae
sarl
mov
test
xchg
mov
mov
mov
sub
pop
xchg
xchg
xchg
fs
push
fidivl
or
pop
into
rorl
mov
cmp
inc
cmp
pslld
xor
fldl
push
push
mov
test
jmp
and
pop
scas
notb
sbb
xchg
cmp
orb
cmpl
cmpsl
xlat
outsl
inc
inc
inc
or
inc
sti
out
int
adc
sbb
xchg
fistl
sub
inc
scas
add
xchg
mov
xchg
inc
add
add
xchg
jne
decl
incb
push
or
sub
add
fmull
out
pop
push
lock
ret
push
shrl
jae
stos
sub
hlt
pop
divl
nop
or
add
cmpsb
rorb
in
mov
mov
pop
stos
je
push
enter
into
pop
scas
push
cmp
jle
pop
pop
call
and
mov
dec
adc
xchg
aam
xchg
and
out
mov
in
shll
daa
mov
adc
jbe
imul
fcomps
pushf
sub
xchg
shr
ret
imul
js
bound
dec
push
push
in
dec
arpl
mov
imul
push
jnp
mov
jg
inc
out
lahf
cs
jmp
xor
sub
xor
fsubrl
lahf
lock
lcall
mov
mov
daa
les
xor
jge
mov
in
fmuls
push
or
inc
rorl
jl
inc
xchg
mov
or
stos
lcall
ret
aad
sbb
xchg
mov
stos
and
xchg
mov
add
lock
xchg
add
data16
xchg
push
cmc
push
clc
loopne
pusha
test
roll
adcl
loop
enter
in
pop
stos
sar
add
pop
sbb
gs
cs
ja
jne
icebp
test
cmpsl
out
mov
or
jl
push
shl
movsb
sub
test
cli
pop
mov
out
jmp
fxch
iret
pop
inc
in
sub
dec
xchg
and
or
enter
xchg
push
test
or
inc
sbb
ljmp
fdivs
pushf
mov
fisubs
test
and
fsubs
mov
pop
xchg
sahf
lahf
mov
in
jno
or
pop
fstl
mov
fwait
imul
push
ja
push
ja
push
xor
push
std
and
jbe
sbbb
scas
aam
sub
inc
daa
in
icebp
adc
and
cwtl
sub
pop
addr16
ret
daa
mov
and
es
sahf
xor
cmp
xor
aaa
cli
test
sbb
sub
inc
in
ficoml
test
push
inc
dec
mov
in
pop
lods
jmp
repnz
push
mov
pop
mov
dec
sub
mov
imul
dec
push
into
xchg
sti
mov
testl
in
iret
lock
add
fdivs
std
cmp
inc
loop
popf
stc
jne
dec
ljmp
jbe
sub
scas
jnp
sub
insl
mov
lea
addl
icebp
and
mov
movsb
adc
lahf
out
jb
jne
push
repz
mov
mov
mov
cs
aad
rorb
cmp
cmp
fisubl
mov
das
cmpsb
es
and
jno
sbb
inc
cltd
decb
scas
pop
or
mov
imul
aam
and
or
inc
lret
into
xor
cmovl
xchg
xchg
pand
inc
add
stos
std
sarb
xchg
pop
lods
sahf
arpl
pop
mov
inc
adc
xchg
dec
xchg
jb
pop
imul
xor
call
in
aas
push
outsl
ja
push
push
push
aam
mov
lds
cmpb
add
dec
pop
data16
int
cli
xchg
lcall
jne
jecxz
daa
arpl
or
mov
cltd
inc
aam
jae
mov
mov
mov
add
cwtl
push
xor
aad
cmp
sub
pop
loopne
movsl
pop
or
xchg
xchg
mov
push
mov
inc
iret
int3
inc
pop
paddd
xchg
test
jo
jg
fisttpll
out
jle
mov
sub
daa
sahf
loopne
cmpl
cmp
pushf
imul
sbb
jbe
pop
bnd
popf
jecxz,pt
arpl
lock
mov
sub
lds
mov
inc
leave
insb
inc
jle
dec
ljmp
add
dec
and
rorl
out
dec
sub
clc
cmp
fwait
cmpsb
xchg
and
add
pop
cmp
in
vmptrst
mov
scas
jae
std
jp
ficoms
sbb
push
jbe
push
jo
xchg
xor
xlat
ja
je
pop
mov
stc
mov
iret
or
mov
nop
jb
mov
jp
orl
inc
das
mov
clc
movsl
add
mov
data16
xchg
outsl
sub
mov
sub
shlb
adc
pusha
pop
add
mov
pop
lahf
cwtl
mov
mov
cld
enter
inc
jmp
mov
ret
insl
push
add
out
jge
int
xlat
cs
or
cmp
and
sub
cltd
xchg
cmp
sbb
jae
jg
sbb
call
jge
divl
inc
and
inc
mov
arpl
push
cld
stos
ret
pop
test
sub
addr16
lret
jns
loop
lds
in
imul
lods
mov
jne
mov
adc
fdivr
fstp
pop
cmp
adc
pop
cltd
loop
inc
add
lret
sub
pop
imul
mov
out
call
rcr
push
add
scas
inc
mov
lahf
je
mov
mov
inc
jo
ss
and
fldl
adc
call
and
insb
std
push
ljmp
cmc
mov
and
xchg
sarb
fldl
fnsave
sub
or
test
fimull
adc
arpl
lea
gs
and
push
lcall
es
pushf
pop
nop
ret
testb
mov
xorl
outsl
xchg
scas
leave
in
fnsave
or
popa
pop
in
faddl
into
insb
mov
inc
sub
das
xchg
jmp
fidivs
jg
mov
mov
scas
add
pusha
push
test
add
das
push
pop
jnp
fistps
loopne
or
scas
push
mov
ds
clc
negb
bound
xchg
push
dec
call
add
stc
cmp
ja
gs
push
add
in
faddl
mov
or
ja
mov
sub
xor
pop
fiadds
pop
cli
inc
sti
cmpl
lods
xchg
adc
sti
mov
dec
and
ret
fldenv
push
add
shll
sbb
movsl
sbb
lock
adc
add
or
dec
push
xor
aam
movaps
dec
and
mov
sbb
cli
lds
repz
lock
cwtl
loop
dec
mov
fcomps
sbb
dec
jle
or
out
mov
push
push
in
inc
push
or
lock
adc
fcompl
cmp
xor
je
pusha
or
sub
mov
jnp
push
rcll
xor
lock
test
cmp
mov
aam
or
mov
fisubs
and
into
aam
stos
inc
pop
cmpsl
push
lods
popf
stos
sub
push
lret
lock
test
movsl
aam
inc
lret
pop
data16
mov
stos
add
js
mov
mov
sub
adcl
push
loop
or
xchg
in
stos
mov
cmpsb
xor
out
sbb
mov
aad
iret
and
sbb
js
nop
mov
negb
push
aam
out
pop
dec
clc
jae
daa
shr
or
mov
imul
mov
out
test
dec
mov
add
and
std
dec
add
mov
sub
testb
pop
hlt
jns
cmp
jle
bound
cmpsl
lock
stos
mov
pop
shlb
sti
dec
jno
std
rcr
sub
movsl
mov
push
or
and
sub
mov
cmp
adc
jge
xor
or
dec
pop
dec
mov
addr16
rcl
dec
or
aam
xor
in
std
adc
pop
idiv
or
mov
bound
lds
js
inc
js
lock
sub
mov
sbb
dec
mov
aas
cld
aad
and
shll
inc
push
clc
mov
pop
sub
out
mov
cmp
cmp
insb
jg
cmpsb
movsb
cli
fildll
subl
cli
add
sahf
cli
push
jmp
or
xor
enter
test
stos
jb
adc
lock
sub
ja
orl
sbb
cld
fldt
sbb
xchg
adc
pop
cmpsl
sbb
adc
and
cmp
sti
les
xor
dec
orb
or
inc
pop
xchg
in
in
sub
cmp
iret
mov
ret
fadds
rcl
dec
test
test
dec
mov
stos
fs
sbb
push
shl
addr16
div
mov
pusha
cmpsb
insb
xchg
or
jg
out
xor
mov
cs
mov
pop
xor
cli
outsl
jecxz
cmp
or
dec
out
jmp
jmp
mov
int3
aam
movsb
rorl
out
mov
call
fwait
lock
xor
mov
push
insb
jl
into
sahf
adc
cmc
in
shlb
pop
roll
xor
adc
dec
cmpsb
mov
mov
scas
adc
and
dec
in
pop
dec
jmp
sbb
lcall
push
xor
test
arpl
roll
lock
sub
lds
inc
pop
xchg
mov
cmp
int3
xchg
mov
or
mov
jp
loop
in
scas
cmp
xchg
sbb
cmp
mov
cmp
imul
push
cmovs
testl
sub
xchg
outsl
or
fwait
push
xor
cmp
pushf
push
faddp
cld
rorl
and
dec
fmulp
mov
aaa
inc
xchg
lcall
scas
stos
stc
jb
ss
inc
xor
mov
cwtl
sbb
adc
sahf
imul
cmpl
mov
dec
dec
test
andb
nop
mov
push
cmp
out
adc
jp
and
loope
pop
sub
add
lods
xor
rclb
mov
pop
sbb
pop
repnz
ret
mov
stos
sbbl
mov
xor
fwait
sbb
out
jge
mov
addr16
loop
sub
sub
adc
pop
pop
testl
push
inc
or
jo,pn
xor
xor
divl
inc
lds
pop
adc
lea
shl
sub
aaa
mov
mov
jg
pop
cli
push
pop
test
daa
ret
mov
aas
sub
shrb
inc
and
cltd
adc
add
sub
je
xchg
xlat
jge
mov
in
push
sub
push
xor
sub
enter
dec
xor
fiadds
in
pop
out
pop
movsl
and
out
push
mov
cwtl
aas
cld
out
inc
and
movsb
or
pusha
push
dec
stos
jle
dec
mov
pop
jmp
jmp
jae
jle
inc
and
jnp
inc
push
daa
inc
psubusw
add
adc
scas
add
jge
jmp
mov
mov
push
sub
mov
add
jge
fsub
and
pop
jns
pop
test
subb
dec
in
cmpl
bound
aam
lret
pop
xchg
sub
sbb
enter
insl
xor
lcall
mov
lret
outsl
pop
pop
fists
scas
arpl
mov
mov
subl
pushf
jmp
mov
into
push
aam
ror
in
mov
cli
nop
push
jecxz
int3
sub
lret
nop
cs
inc
and
sbb
or
and
outsb
jae
clc
or
cld
jns
sbb
dec
xchg
push
shl
call
in
fdivrp
subb
mov
push
repz
jp
mov
sub
jg
inc
or
ret
sbb
dec
mov
sbb
fisubrs
jle
mov
dec
lahf
and
pop
rolb
in
add
adc
and
lods
or
cwtl
push
cmpsb
movsl
mov
inc
outsb
and
in
push
scas
xlat
or
push
xchg
lods
cmp
inc
add
shrl
sti
pop
push
xor
aas
test
add
add
insb
stc
stc
vmovhps
adc
push
arpl
and
jne
dec
sarl
adcl
movsb
cmp
lock
stos
mov
jl
mov
pop
shl
lods
mov
cmpsl
inc
in
adc
xor
mov
pop
cli
sti
mov
ja
dec
xchg
mov
mov
or
jne
inc
cmp
jmp
cwtl
inc
and
insb
sbb
fsubrs
jno
out
pop
aaa
pushf
xchg
and
pop
in
andl
mov
dec
xor
or
cmp
jl
sbb
mull
dec
lcall
push
loopne
push
xor
mov
std
mov
js
or
add
fadd
pop
add
xchg
lods
fiaddl
cld
insb
pop
pop
out
jbe
push
test
add
and
popa
mov
imul
and
cmpb
cmp
jo
or
aam
cmp
fnstenv
jnp
lods
sub
pop
test
in
push
orb
push
jl
mov
xor
mov
xchg
daa
cmp
mov
enter
add
ret
pop
inc
push
mov
cld
push
cmpl
push
enter
pop
pop
cs
ret
fwait
lock
fistpll
popa
and
popf
mov
loopne
sub
mov
or
fcoml
out
push
int
xor
orl
out
test
jmp
js
and
pop
inc
sbb
rcl
pop
mov
inc
pusha
xlat
fldt
xchg
cmp
mov
and
int3
dec
gs
pop
add
cmp
fldt
mov
mov
mov
movsl
out
out
mov
dec
xchg
push
cmpsb
mull
xorl
ja
inc
pop
repz
add
inc
push
mov
out
mov
jmp
push
out
mov
add
xor
in
sahf
lret
aas
inc
adc
rep
lock
or
mov
mov
and
aad
adc
add
lock
dec
xor
sbb
mov
add
lods
jle
xor
dec
jne
mov
xor
sub
xor
into
push
enter
push
mov
or
jge
mov
mov
mov
dec
jb
test
inc
adc
push
fwait
xchg
mov
scas
aas
aas
inc
xor
out
loope
out
xchg
dec
out
dec
inc
popf
cmp
fistl
sub
out
cwtl
inc
or
test
mov
out
scas
fwait
in
in
or
mov
pop
sbb
subb
fxch
enter
xlat
arpl
enter
pop
mov
mov
add
imul
jmp
es
out
stos
sbb
push
mov
insl
stos
in
sbb
add
insl
aam
imul
mov
pop
xor
jne
or
push
in
inc
clc
pop
jb
aam
popa
cld
pop
fisttps
fs
out
add
mov
inc
or
ds
jl
repz
repz
xchg
mov
mov
xchg
das
int
subl
fwait
iret
leave
ret
dec
sahf
push
inc
jle
cmp
into
jno
inc
lret
xlat
xchg
lret
dec
popa
rcrl
fimuls
push
test
rorb
std
lahf
ss
js
push
mov
cld
xor
add
cmp
inc
out
stos
lea
cli
dec
fdivrs
loope
rcll
mov
pusha
fidivrs
movsb
pop
sbb
ds
cmpsb
sub
mov
cmc
sbb
adc
stc
xlat
and
js
dec
and
repnz
adc
sbb
mov
cmp
or
pop
jmp
inc
jmp
ja
lahf
xchg
and
repnz
lea
dec
sahf
pop
pop
enter
imul
xor
fnstcw
push
movsl
int
push
pop
outsl
lods
pop
push
xchg
gs
movsl
enter
inc
cmp
fistpll
xchg
and
mov
mov
xor
mov
lock
sbb
pop
mov
lods
stos
clc
push
les
mov
leave
and
hlt
xchg
push
loop
adc
scas
push
push
insb
add
out
pop
in
dec
loopne
jae
je
ret
jl
jp
dec
sbb
xor
sarl
xchg
pop
mov
stos
shll
mov
in
leave
aad
js
push
adc
insb
imul
movsl
xor
icebp
ljmp
in
cmp
ss
loop
stc
mov
pop
popl
push
add
cmp
daa
mov
mov
xor
sahf
lcall
jp
fcmovu
mov
pop
and
cmp
mov
lea
scas
or
push
pop
imul
pop
lea
cltd
pop
sbb
mov
cs
fmul
test
inc
xchg
movsb
lea
mov
imul
sti
push
mov
stc
subb
mov
add
add
es
and
inc
xlat
imul
adc
cmp
es
push
dec
jae
bound
cmp
jae
add
dec
icebp
dec
out
adcl
scas
sbbl
inc
inc
enter
adc
fimull
out
popa
cmpb
cmpb
mov
out
adc
stos
fsubr
mov
adc
add
inc
lods
dec
and
xchg
mov
jno
jecxz
or
mov
lahf
mov
stc
xlat
lret
push
mov
movnti
pushf
push
cwtl
and
leave
outsb
cmp
lcall
sub
sub
jge
cmp
lea
fwait
mov
cltd
rcrl
add
std
inc
mov
idivl
mov
pusha
das
mov
push
jnp
xchg
pop
add
jno
loope
push
or
push
lcall
insl
pop
dec
adc
ss
mov
inc
call
mov
xor
sbb
push
lds
popa
loope
xchg
lock
push
add
push
aam
lock
iret
adc
mov
lret
shr
cli
adc
xchg
leave
inc
and
push
mov
sub
imul
cmp
push
and
mov
xor
clc
adc
xchg
mov
hlt
mov
dec
sbb
xor
out
and
es
fsubs
sbb
fistpl
nop
shrb
shll
and
in
cmp
push
adc
ret
mov
stc
sub
insb
std
je
inc
jl
mov
rcrl
cmp
mov
inc
in
cmp
pop
pop
stc
les
rcrb
push
xchg
jno
mov
insb
jp
ret
stos
loopne
pop
enter
dec
push
sbb
mov
lock
arpl
cmpsl
mov
insb
pop
imull
and
in
push
das
push
cmp
test
mov
data16
sbb
lahf
stc
aaa
loope,pt
out
es
int3
mov
or
pop
xchg
mov
push
aas
mov
stos
sahf
jns
imul
insb
push
dec
shlb
cwtl
jp
xchg
repnz
xorb
lea
adc
push
fistpl
and
bound
movsl
in
and
xchg
lock
imul
inc
inc
ficomps
test
pop
dec
add
xchg
cld
inc
mov
xchg
iret
or
lcall
stos
loopne
rdmsr
xor
lds
pop
and
dec
xor
sub
gs
and
push
fsubs
mov
or
cmp
repnz
mov
lds
adc
mov
push
mov
aad
je
jle
cmp
pop
jns
cmp
in
data16
jmp
pop
xchg
les
mov
arpl
xor
push
xchg
rorl
mov
popf
out
cltd
mov
dec
rol
out
mov
mov
sbb
sbb
dec
bound
aas
enter
ficoms
cmpsb
xor
dec
jmp
mov
lock
mov
inc
mov
pop
aas
jne
out
orl
jne
inc
negb
lods
dec
pop
fwait
or
inc
inc
test
jbe
sarl
add
loope
mov
and
in
fabs
insl
pop
shlb
lock
lcall
push
xchg
jp
int3
or
in
test
jecxz
add
jno
fcomps
mov
repz
mov
pop
ljmp
in
mov
cmp
jne
lahf
mov
fldcw
dec
cmp
push
std
popa
sbb
es
int3
xchg
rorb
pavgb
jb
lret
decb
mov
or
inc
test
lods
mov
xchg
jg
loopne
mov
stc
mov
fcmovnbe
popa
or
imul
sub
jne
xchg
stc
sub
mov
jmp
sub
sub
test
les
add
or
lcall
out
imul
dec
call
dec
in
push
push
pop
out
inc
and
jp
adc
fildl
push
aas
jl
stc
stos
dec
push
out
das
lods
mov
jecxz
xchg
lea
inc
sub
cltd
adc
mov
pop
inc
push
insb
nop
mov
mov
adc
fisttpll
dec
jae
inc
mov
sub
mov
out
fs
dec
std
xor
sbb
fs
adcb
test
sahf
rcl
fwait
mov
cmp
lcall
pop
mov
mov
cmc
mov
aaa
add
cmpsb
fiadds
ss
add
lock
repz
lret
sti
rolb
movl
in
or
cmp
and
cmp
xor
ss
mov
cltd
jae
sti
mov
xchg
cld
or
test
and
fdivrl
mov
mov
testl
mov
add
mov
lock
insl
lea
xor
cli
sub
or
mov
mov
sbb
jmp
in
in
push
adc
push
inc
jecxz
je
push
xchg
lods
jbe
out
sbb
fldt
imul
mov
mov
in
push
cmpsb
sbb
pop
fs
xor
rcrl
pop
and
ljmp
jg
mov
xor
or
jnp
inc
orl
mov
shll
jno
mov
cmc
adc
in
or
mov
fisubl
loopne
cltd
imul
mov
nop
sahf
int3
daa
mov
fs
mov
or
jae
cli
sub
bound
daa
sbb
aam
iret
mov
jge
pop
test
xchg
xor
fst
jmp
mov
adc
mov
adc
pop
aas
in
mov
mov
and
icebp
pop
dec
in
in
inc
pop
sti
xor
xchg
xlat
enter
pop
ret
lds
jp
jmp
test
test
push
add
addr16
in
ja
add
dec
mov
cmp
mov
in
sti
fnstenv
aaa
jp
push
xor
fstpt
add
or
fucomp
lcall
mov
dec
pop
mov
jb
loopne
into
shll
adc
mov
ljmp
lea
int
test
ret
stc
jae
xchg
sub
test
jg
into
add
xchg
clc
cld
mov
call
loope
xchg
ds
xor
or
dec
cmp
sub
outsb
mov
dec
mov
incb
les
outsl
test
pop
xchg
inc
pop
dec
test
cwtl
pop
cmc
mov
push
cmpsl
lcall
cmc
sti
pushf
cs
divl
and
push
sub
insb
mov
adc
sarl
gs
icebp
mov
decb
out
adc
fs
xchg
push
cmp
in
inc
and
dec
fs
push
xor
int
cmp
ja
dec
lock
add
cld
pusha
iret
cmp
fnstcw
inc
loopne
mov
cli
lret
ds
mov
incl
or
mov
xor
or
repz
mov
adc
lock
mov
push
adc
scas
ljmp
cmp
or
add
jmp
mov
loopne
mov
imul
in
les
cmp
and
pushf
mov
inc
jecxz
movsl
mov
jno
ss
pop
pop
cmc
daa
cld
cmc
repnz
shufps
fcoml
xchg
data16
lahf
lods
mov
lds
xor
and
mov
push
inc
or
mov
inc
sbb
testb
rcrl
mov
mov
sbb
cwtl
popa
push
inc
daa
insl
jle
adcl
roll
lods
jp
int3
pop
lock
ja
jge
test
xchg
lcall
xchg
fsubs
cmp
add
pop
xchg
jb
stos
jp
jmp
and
icebp
sar
mov
lock
pop
scas
xor
inc
pop
dec
fcoml
cmp
out
add
cs
enter
add
xor
mov
lahf
repnz
xchg
add
push
mov
divb
cltd
and
test
iret
pop
xchg
inc
jno
cli
lahf
enter
lcall
in
dec
rcrl
jmp
insl
lds
sub
ficomps
xchg
stc
mov
push
cli
imul
push
xchg
mov
push
mov
hlt
xchg
jg
sbb
pop
sub
and
lods
sti
sbb
loop
fwait
mov
test
inc
jl
movsl
mov
xchg
fnstsw
cwtl
add
adc
xchg
ds
push
dec
pop
sbb
fisubl
mov
adc
int
subb
out
mov
addr16
cmp
jbe
int3
inc
jmp
daa
pop
xchg
mov
or
rcll
push
in
lahf
jecxz
add
enter
sbbb
xlat
out
adc
mov
les
or
js
pusha
daa
frndint
sbb
lods
mov
mov
enter
add
lds
nop
mov
mov
fsubp
lods
outsb
movsl
out
loope
mov
mov
out
out
rsm
outsl
insb
lahf
jb
int3
jle
xor
pop
add
jmp
pop
sbb
cmp
xorl
in
mov
lods
lods
shl
rorb
not
outsl
mov
or
flds
dec
gs
fnsave
outsb
and
roll
loopne
iret
pop
push
adc
test
pop
xlat
outsl
pop
lret
pop
dec
mov
adc
cmc
ret
insl
sbb
cmc
mov
push
xchg
or
mov
imul
inc
mov
inc
std
inc
aad
cld
cmpsb
mov
outsl
lcall
jle
iret
mov
inc
ret
mov
out
iret
jmp
rorb
icebp
adc
adc
cs
sbb
ljmp
lret
inc
shll
push
lcall
mov
fisubs
ljmp
sub
loope
mov
or
cmova
mov
adc
jmp
lcall
jp
aam
push
ret
lea
mov
mov
mov
inc
outsb
jo
jno
mov
in
inc
fs
adc
or
jmp
sbb
out
lcall
push
mov
fcmovnb
inc
iret
mulb
push
cmp
out
xor
dec
call
sbbb
xchg
and
js
sub
or
lods
imul
mov
mov
jae
fisubrl
lods
xor
lock
addr16
into
mov
bound
aaa
push
xchg
mov
je
lcall
cld
mov
push
mov
iret
sbb
xor
mov
cmp
or
ret
mov
adc
and
xor
cli
inc
cwtl
dec
jg
rcll
mov
xor
repz
filds
icebp
ror
push
rolb
das
and
lea
adc
lret
bound
mov
aam
sti
mov
outsb
xchg
test
pusha
inc
cmp
dec
pushf
xchg
add
rcll
push
cltd
loopne
fsubl
mov
mov
lcall
add
cmpsb
mov
cmpsl
aas
dec
lods
loop
mov
cld
push
movsb
mov
push
push
pusha
adc
shrb
dec
leave
movsl
xchg
mov
cs
test
test
andb
ljmp
xchg
in
mov
aas
sub
dec
fstpt
data16
xor
jo
iret
and
push
jle
xor
out
mov
push
mov
fs
iret
insb
in
dec
cmp
push
outsb
out
adc
sbb
insl
sbbl
push
fidivl
adc
out
or
out
sbbl
xor
and
push
mov
sub
pop
je
mov
lods
adc
push
fs
pop
scas
lret
jnp
mov
out
add
inc
out
fs
push
jae
sub
test
jns
fidivl
push
fimuls
pop
outsb
inc
and
test
nop
cmp
adc
insl
adc
pop
out
push
mov
and
hlt
cmpl
dec
mov
mov
mov
shlb
rcll
std
lret
or
xor
mov
add
mov
sbb
xchg
cmpsb
stos
and
inc
lds
or
ds
fnsave
in
lret
or
stos
push
xlat
test
sahf
dec
pop
mov
sbb
mov
xorl
cmp
pop
mov
lods
test
jno
loop
loop
in
gs
iret
and
ret
mov
cmp
lds
push
adc
mov
cmp
inc
addr16
jecxz
xchg
scas
hlt
test
add
adc
ds
out
test
cmp
mov
aad
bound
test
jbe
cmpb
inc
mov
insl
adc
push
mov
clc
call
pop
sbb
cmp
outsl
movsl
push
fucom
andb
xchg
xchg
mov
sbb
aam
adc
sbb
pop
sti
xchg
mov
sbb
mov
and
or
push
xor
outsb
push
fwait
and
cli
cmp
sub
mov
out
call
iret
sbb
cmpsb
test
mov
cmc
xor
in
shll
bound
mov
scas
xor
into
xor
inc
int
and
test
stos
cmpsb
mov
nop
mov
das
testl
scas
add
and
pop
xchg
cltd
in
mov
jmp
jmp
test
fsubrs
cwtl
sahf
xor
xchg
mov
dec
mov
dec
mov
shrl
cmp
pop
insl
mov
iret
mov
jae
mov
ja
jecxz
and
aaa
sbbb
lret
and
sbb
inc
popf
mov
rcrb
clc
fnstcw
loop
js
xchg
repz
push
push
add
fsts
jbe
nop
imul
and
daa
imul
mul
lds
loope
cmpsl
xchg
fsts
xchg
push
add
adcb
push
ret
int
div
push
ss
fldt
jno
and
and
aad
xchg
cmpsb
push
ss
push
cmp
cmp
in
mov
lods
jbe
iret
pop
inc
mov
jo
rclb
mov
sbb
mov
push
sbb
movsb
mov
mov
push
mov
cmp
imul
mov
or
dec
imul
jge
insb
adc
out
mov
cmp
jns
pop
enter
in
nop
in
lret
or
insb
cld
nop
inc
mov
stos
mov
fcomps
std
and
imul
xchg
pop
movsl
test
enter
mov
xchg
mov
mov
nop
iret
mov
or
int3
dec
pop
int3
mov
divl
addr16
xor
pop
lret
jb
fcmovnbe
or
jp
fdivl
stos
dec
lods
sbb
jmp
jmp
or
push
subl
dec
popa
push
fbld
test
enter
ja
les
xchg
enter
aam
jns
push
mov
ljmp
cmp
ljmp
cmpsb
push
jg
jae
loope
cmpsb
cmpsl
jns
push
out
repnz
adc
gs
push
ds
xor
sub
mov
lods
cmp
adc
jb
xor
sub
sbb
ljmp
push
mov
mov
add
ret
pop
fisubrs
push
xchg
fidivrs
rorb
dec
ljmp
sbb
mov
aas
outsb
push
mov
adc
and
jle
pop
stc
ljmp
aaa
rcll
dec
mov
repnz
inc
jns
lahf
enter
imul
mov
jo
ljmp
mov
mov
push
mov
cmp
popa
sahf
shrb
imull
movl
cmp
ss
or
adc
testl
test
outsl
ficompl
in
sub
movsl
pop
and
fwait
pop
fnstsw
dec
mov
adc
or
pop
pushf
push
ds
or
lock
dec
xchg
push
int
scas
cmpsl
push
call
mov
jl
push
jne
push
lds
insl
scas
and
mov
adc
add
ret
ja
lret
inc
mov
jo
mov
jp
dec
sbb
outsl
add
dec
dec
and
dec
stos
je
lds
repnz
mov
jns
stos
out
adc
mov
sahf
fists
jbe
mov
gs
mov
roll
mov
fimull
ret
mov
and
test
jge
add
ss
idivb
cmp
cmp
rcrl
sbb
cmp
jo
mov
lret
out
dec
sarl
cmp
out
mov
pusha
ss
mov
jns
loopne
stos
imul
pop
scas
jbe
dec
sub
cld
scas
cli
aaa
jg
fisttpll
or
adc
ljmp
push
in
cmp
sahf
dec
cmp
ds
ds
and
mov
push
mov
mov
movb
out
popa
mov
and
pushl
adc
std
test
and
into
xor
loope
mov
outsb
adcb
mov
jg
popf
and
mov
cwtl
nop
dec
or
fisubs
mov
stos
ret
lea
jnp
jle
push
loop
int
push
pop
adc
leave
xchg
mov
std
xchg
xchg
pop
in
pop
lods
dec
mov
adc
xchg
and
sbb
inc
enter
jo
lds
mov
xchg
adc
test
aaa
sub
sbbl
imul
leave
fcomps
push
push
leave
imul
inc
pop
push
cmp
jb
pusha
sbb
and
pop
addr16
repz
sarb
dec
cmp
inc
and
scas
je
cmp
iret
mov
leave
call
jb
and
repz
rolb
sub
popa
mov
or
push
pop
jg
pop
frstor
mov
cs
andl
stc
insb
inc
test
and
loopne
rcll
push
push
push
cmp
rolb
hlt
or
adc
fucom
and
es
insb
lret
push
loopne
insl
fistl
mov
jle
dec
xchg
add
push
xor
ss
push
and
addb
push
adc
test
add
fwait
stos
icebp
mov
inc
mov
movsb
push
icebp
jbe
jmp
popf
or
push
std
xchg
mov
mov
and
sub
jge
cmpsb
pusha
data16
pop
pop
xchg
das
inc
xchg
pushf
push
xor
hlt
ror
imul
mov
inc
mov
add
inc
je
sub
aaa
xchg
fs
lret
and
dec
fcmovbe
js
sub
jmp
inc
push
push
xchg
jmp
pop
icebp
jge
or
dec
mov
movaps
cmpsb
xchg
or
mov
inc
mov
call
sub
arpl
outsb
jmp
fildl
hlt
or
lods
inc
push
add
xlat
cwtl
out
into
cltd
jb
push
jbe
fsubrl
repz
adc
mov
xor
imul
add
cld
inc
int
cmp
sub
fcoml
loope
loop
adc
lcall
hlt
xor
das
push
xlat
adc
mov
jp
scas
sbb
dec
repnz
inc
xor
idivl
rolb
mov
add
xor
push
js,pn
rcl
mov
xadd
and
icebp
push
xchg
mov
insl
sbb
hlt
sbb
ret
rcll
pop
mov
xor
sub
cs
leave
inc
cmp
xchg
sti
inc
mov
jle
push
push
sbb
adc
lretw
mov
leave
mov
adc
jl
inc
fdivl
dec
adcl
in
add
inc
sub
pop
pusha
clc
or
inc
pop
mov
mov
cmp
sti
inc
inc
and
xchg
bound
jo
loop
cmp
shlb
sub
cld
adc
cmc
mov
jae
fninit
mov
inc
add
dec
aas
dec
pop
push
dec
mov
add
daa
sbb
jg
popf
and
mov
jmp
add
push
cs
outsb
rcrl
pusha
into
xor
push
lea
and
sub
or
data16
inc
outsb
imul
add
sub
push
rorl
out
sub
mov
mov
imul
pop
or
sahf
mov
adc
xchg
xor
cmpsb
xchg
mov
jnp
mov
repnz
jp,pn
call
out
cmp
sub
add
loope
sbb
xor
outsb
cld
adc
push
mov
mov
fdivrl
into
test
or
mov
movl
mov
and
testl
and
mov
mov
out
in
aad
push
mov
adc
add
pop
dec
sbb
movsb
jb
js
sub
dec
inc
pusha
jns
dec
sub
enter
add
pop
xchg
push
cltd
loop
in
test
outsl
pop
jb
or
sub
mull
cli
out
push
cmp
mov
loope
mov
or
enter
mov
dec
push
xchg
xor
lods
out
or
ljmp
out
scas
push
je
outsl
popf
pop
add
cmp
inc
out
inc
jno
xor
lods
pop
jg
out
jae
sbb
psubb
arpl
arpl
arpl
idivb
dec
pop
xor
sbb
shrl
mov
sbb
mov
cmp
cmp
dec
andl
sbbb
sub
mov
push
mov
cli
jbe
jge
and
sub
jmp
sbb
shrb
and
inc
repz
sarb
enter
loope
push
pop
inc
cs
pop
mulb
push
push
outsb
pop
xchg
lcall
hlt
adc
pop
jae
dec
pop
cmp
lock
inc
clc
and
jns
inc
adc
adc
dec
in
dec
inc
ror
mov
mov
add
mov
jp
cmp
jnp
jo
dec
add
aad
pop
or
loopne
pop
sub
pop
movsl
movsb
aam
or
icebp
cwtl
inc
inc
adc
mov
cld
test
ds
std
cld
mov
ds
hlt
mov
dec
jo
out
or
testb
sub
aad
sbb
mov
mov
mov
pop
mov
popf
fs
xchg
lods
pop
lea
mov
pop
mov
mov
popa
mov
int
jb
iret
jmp
aam
imull
adc
jae
pushf
xchg
inc
dec
push
dec
popl
mov
sub
mov
add
movsl
mov
mov
inc
xor
pop
lods
loopne
add
cs
insb
and
filds
push
jnp
leave
pop
cwtl
aaa
out
push
pop
and
arpl
daa
stos
out
xlat
cmp
mov
repnz
inc
and
pop
push
test
and
das
add
daa
jl
es
inc
imul
aad
lcall
aam
inc
mov
lret
js
push
mov
cmp
inc
pop
inc
and
clc
sub
test
mov
push
jno
ja
cmpsl
test
fdivl
inc
or
shr
data16
mov
xchg
sahf
mov
sub
xchg
stos
mov
cmpsl
push
mov
arpl
int3
push
dec
cmpb
jo
ret
pop
fwait
cmpsl
jb
push
test
testl
inc
add
jle
mov
es
out
inc
insl
outsb
push
mov
jmp
loopne
add
or
and
and
lock
and
call
aas
sbb
cmpsb
hlt
cltd
call
mov
jecxz
sbb
pop
das
das
sub
fs
or
gs
jne
xor
cmp
fiadds
aas
outsb
in
bound
mov
adc
cli
jne
fildl
mov
xchg
add
add
push
ret
jge
cmp
mov
mov
lar
ret
mov
pop
hlt
add
fidivs
jg
fdivl
cmp
jo
sti
mov
or
adc
sbb
inc
jecxz
enter
or
sbb
lcall
xchg
dec
dec
push
push
lock
sub
iret
imul
fidivl
jns
stc
ljmp
inc
aaa
and
jae
rcrb
cmp
ss
sbb
cwtl
sbb
data16
addl
push
mov
ret
fwait
sbbl
or
pop
inc
sub
mov
push
mov
mov
sbb
into
test
dec
ja
mov
dec
sub
repnz
inc
jno
out
push
and
outsl
shrb
cwtl
dec
outsb
mov
lods
push
sub
add
in
addr16
dec
pop
jo
pusha
mov
icebp
outsb
push
call
pushf
mov
icebp
mov
sub
mov
clc
xor
xchg
inc
ficoml
dec
push
adc
subb
mov
call
cwtl
jne
ffree
jo
repnz
xchg
jl
mov
icebp
add
cs
mov
mov
incl
hlt
sub
rolb
das
in
ds
mov
vorps
das
jnp
ror
je
cmp
mov
std
sub
popa
out
sbb
mov
out
mov
cmp
push
mov
mov
push
mov
or
sbb
dec
aaa
int3
or
hlt
jbe
pop
call
aad
xlat
je
sbb
pop
scas
adc
pushf
pop
push
mov
iret
popa
pop
dec
fadd
inc
outsl
les
sub
imul
xchg
test
movsl
jl
negb
out
jle
pushf
stos
push
adc
je
adc
jmp
movsl
jp
pushf
lret
orb
lret
mov
popf
leave
sub
jl
inc
out
lahf
cmpsb
cmp
push
mov
dec
jnp
ljmp
adc
daa
mov
repnz
cmp
jle
jmp
imul
out
cli
mov
push
push
cwtl
mov
fcomps
pop
sub
or
sub
popf
xor
push
rolb
add
jno
pop
mov
push
sbb
jne
jnp
loope
mov
sbb
mov
pop
cmp
dec
in
pop
rolb
adc
daa
pushf
pop
nop
xchg
fists
mov
or
outsl
push
insb
xchg
dec
test
push
mov
imul
and
and
ror
cli
lods
jne
pusha
ret
stos
shl
divl
lahf
mov
roll
pop
test
out
adc
or
and
cltd
pop
pop
je
cmp
jecxz
sub
dec
sbbb
add
sub
sbb
sti
mov
cmc
daa
je
je
lock
lahf
jle
xchg
addr16
mov
loopne
mov
loopne
mov
xor
xchg
pop
inc
std
or
adc
inc
mov
movsl
and
push
jle
testl
add
inc
inc
inc
mov
push
jae
cmp
adc
scas
mov
jecxz
push
pop
cli
mov
sub
bnd
mov
push
out
jle
and
xchg
push
into
imul
idivl
cmp
das
mov
repz
cmp
mov
dec
mov
push
in
xchg
inc
es
ret
fmull
fdiv
mov
adc
or
icebp
fmul
xchg
mov
mov
mov
mov
push
bound
test
jecxz
dec
lret
roll
nop
mov
jno
inc
push
aam
sub
daa
lods
dec
notb
or
mov
loope
xor
push
push
adc
push
mov
mov
call
jno
lahf
data16
sub
add
hlt
jmp
jnp
and
adc
out
movsl
cmc
pop
aad
jae
popa
adcl
adc
add
fs
pop
xchg
push
jno
and
icebp
pop
jns
fists
push
adc
mov
sbb
dec
or
cmpsl
imul
pop
cld
mov
sbb
jg
scas
test
loope
adc
mull
dec
cmpsb
jnp
push
shl
dec
mov
lods
push
push
xchg
mov
add
lret
dec
push
sub
cmp
cmp
div
mov
push
lcall
loopne
inc
and
xchg
sbb
repnz
sbb
adc
cli
pusha
mov
jl
sbb
pminub
sarb
or
sub
inc
mov
testb
pop
push
mov
rcrb
pop
leave
cmp
push
sti
jno
lods
push
add
fidivl
inc
in
call
test
out
testl
dec
inc
mov
arpl
fnsave
into
adc
or
mov
lea
dec
decl
or
repz
sahf
call
and
out
mov
xchg
fsub
mov
ficomps
mov
sbb
insl
inc
pop
mov
cmp
mov
pop
mov
pop
pop
ss
ret
mov
cmp
movb
or
icebp
jb
push
inc
pop
es
add
add
mov
lods
scas
xchg
or
lea
sbb
mov
dec
mov
addl
movsl
daa
in
dec
adc
call
into
xchg
js
mov
mov
popa
sub
insl
leave
inc
inc
repnz
popa
push
std
filds
push
sub
mov
ret
lret
daa
mov
out
enter
push
sub
mov
out
jecxz
sbb
mov
xorb
sub
popa
xlat
clc
lds
sahf
sahf
sub
xchg
inc
xchg
xlat
or
pop
lods
xchg
push
add
out
jecxz
push
cltd
jmp
out
mov
inc
push
sbb
std
repz
ja
cltd
pop
jb
jp
lock
cmp
call
adc
sbb
aad
div
add
and
jg
jmp
jg
cmp
stc
ffreep
or
xor
jae
mov
out
dec
sbb
mov
fdivr
lds
inc
sub
inc
fstps
jae
xchg
je
ds
inc
dec
xor
int
adc
add
call
or
or
les
add
sbb
lock
dec
addb
int
inc
rcll
out
notb
insb
bound
outsb
jge
fildl
pusha
inc
jmp
repnz
dec
aas
xor
cmpb
loope
add
insb
mov
ret
jmp
es
xchg
test
aas
outsb
push
pop
pop
daa
aaa
sbb
mov
mov
or
jmp
mov
ret
lock
xor
mov
mov
testl
cwtl
js
cmpb
das
andb
push
jp
jae
hlt
mov
inc
push
int
icebp
ret
or
cltd
fidivrl
xor
adc
add
or
sub
pop
pop
push
lret
xchg
lret
int
cmpsl
stos
jae
fs
push
mov
cwtl
adc
push
push
mov
into
and
push
sub
mov
mov
and
add
lea
jg
cmp
mov
mov
jge
popa
or
or
nop
xchg
fistl
jmp
loop
into
sbb
add
rcrl
mov
stos
sub
hlt
xor
mov
cmp
pop
jl
aam
jnp
out
sbb
pop
scas
adc
imul
cmp
cmp
xor
sub
push
call
aad
adc
add
loopne
aaa
lds
sbb
aam
sbb
mov
cmp
xchg
jecxz
jns
enter
stos
test
movsb
lea
mov
lret
stos
jbe
inc
push
lea
pop
adc
lret
lret
je
sbb
mov
stos
sbb
ror
xchg
mov
inc
mov
mov
sub
push
sub
mov
add
and
repnz
fs
lret
push
sbb
and
cmpsb
call
mov
xchg
fldl
imul
add
push
test
sbb
jbe
movsl
push
push
loop
lds
pop
enter
xchg
inc
pop
les
pop
jne
ja
push
sub
mov
aaa
and
bound
mov
cmpb
stos
cmp
inc
or
jmp
xchg
lret
cmp
dec
test
aas
lods
inc
mov
adc
fsubl
inc
lds
rorb
sub
push
inc
sbb
cwtl
movsl
jnp
data16
push
mov
fldl
mov
es
push
pop
sbb
into
gs
dec
mov
push
push
xlat
add
cmp
adc
push
test
das
fldcw
loopne
mov
ja
jmp
sub
out
je
pusha
push
push
mov
inc
xchg
jne
lods
stos
lods
fimuls
adc
test
bound
and
xchg
adc
leave
add
fwait
adc
sahf
push
js
ja
push
jle
fldcw
push
inc
fldenv
or
mov
cwtl
xorb
jae
aas
fs
leave
add
jg
sbb
pushf
popf
lods
shl
sbb
fucomip
jbe
cmp
enter
fcompl
dec
repnz
lea
inc
add
jl
xchg
adcl
ficomps
outsl
iret
xorl
adc
imul
daa
hlt
shll
lods
scas
sbb
fistps
nop
ds
fstps
insb
out
pusha
cmpsb
adc
mov
fcoms
mov
cli
sbb
inc
inc
into
pop
mov
iret
push
dec
fmul
mov
jno
xor
sbb
jnp
js
cmpsl
push
daa
pop
nop
stc
sbb
divb
dec
jbe
xor
cmp
in
mov
in
xchg
lahf
adc
jle
dec
int3
iret
jmp
xchg
lahf
fstpt
mov
jl
dec
dec
cmp
xchg
mov
test
mov
in
loopne
mov
insb
push
xchg
dec
fistps
enter
add
gs
jns
pusha
mov
shl
mov
xchg
jbe
adc
rol
mov
cs
pop
xchg
lret
test
cmp
add
stos
inc
aam
pop
adc
sahf
out
out
fists
and
js
dec
pop
lret
or
icebp
mov
xchg
add
das
fsub
pop
add
mov
mov
cwtl
pop
in
jmp
pop
push
in
aas
push
jmp
and
sub
scas
loopne
aas
xor
nop
rcll
sub
test
nop
push
mov
lds
and
insl
stc
jg
in
cmp
jl
sub
stos
sbb
and
sub
mov
ficompl
jmp
mov
mov
cmp
imul
xorb
pop
add
add
orl
xchg
mov
push
mov
or
mov
xor
mov
js
mov
pop
cmpw
jp
sub
xlat
jne
and
xchg
or
jo
jmp
inc
int
cmp
jbe
jmp
jbe
push
mov
imul
mov
pop
jo
sbb
mov
pop
sub
mov
push
ss
add
adc
pop
and
jge
rolb
add
mov
paddsw
daa
and
ljmp
sub
cmpsl
mov
clc
idivb
jnp,pn
push
data16
sbb
mov
cmpsb
in
adc
cmp
cmp
pushw
cltd
fstpl
push
fldt
movsl
or
or
out
insl
adc
dec
or
cld
xor
inc
mov
mov
and
cmpsb
aam
movsb
cmc
mov
and
gs
pusha
push
xchg
fs
repz
lods
mov
or
cmpsb
adc
pop
ds
mov
mov
fidivl
lahf
outsl
or
fistps
call
daa
add
jae
pop
xchg
jb
push
mov
push
or
jg
sbb
out
sub
dec
push
push
insl
js
roll
addr16
enter
xchg
test
lcall
cli
insb
xor
adc
jae
pop
mov
pop
jns
cld
jmp
inc
dec
dec
dec
mov
sub
jns
fldcw
popa
jo
scas
imul
shlb
sub
xchg
ficompl
subb
gs
mov
ror
xchg
adc
faddl
sahf
xchg
imul
out
mov
mov
cmp
aam
stc
add
cmp
lock
in
popl
ret
shll
jg
mov
inc
cmpsb
shl
lcall
lcall
adc
sbb
push
stc
jl
inc
cmp
xchg
fwait
stc
fstps
lods
mov
mov
int
mov
sub
dec
pop
cmp
addl
insl
xchg
sub
dec
sub
arpl
loope
stc
lock
jno
jmp
out
push
jno
dec
mov
mov
add
jecxz
mov
sub
dec
push
xchg
jae
xchg
add
in
inc
test
or
cmpsb
fdivl
dec
jbe
pop
ljmp
and
push
mov
mov
test
sub
aam
out
aas
add
lods
cmp
add
in
popl
dec
addr16
xchg
sub
xchg
aad
sbb
xor
cmpsl
ret
or
shl
addr16
sub
add
pop
jmp
or
xchg
inc
lods
mov
stc
sbb
jecxz
xchg
into
pop
mov
hlt
mov
fisttpll
xor
pop
fisubrl
mov
cmp
xchg
xchg
lea
adc
lods
nop
out
call
int3
aaa
outsb
or
ja
xchg
mov
iret
fmuls
sub
sub
jns
jno
outsl
es
or
lea
jle
sti
mov
jle
jle
mov
push
or
enter
mov
mov
sub
loop
mov
lods
or
in
subb
or
mov
icebp
xchg
arpl
mov
mov
out
push
inc
jmp
scas
pop
push
cmpsb
push
out
jae
das
xchg
mov
aas
lret
and
or
lret
adc
mov
adc
dec
xchg
sbb
clc
fsqrt
mov
fsubrs
popf
sbb
jl
xchg
push
jne
dec
pop
push
mov
xchg
push
mov
stos
jb
arpl
sti
imul
int3
xchg
and
test
jp
push
mov
xchg
fstpt
push
mov
mov
ja
xor
inc
std
cwtl
dec
gs
or
mov
and
fcoms
sub
cmp
int3
fldl
out
adc
gs
test
loope
ficoms
add
mov
xor
cmp
data16
or
xor
mov
in
mov
sbb
push
sbb
enter
gs
out
aas
mov
sbb
jo
xchg
adc
movsl
addr16
imul
cmp
push
mov
jl
bound
fsts
pusha
fidivs
mov
loopne
lods
cmc
stos
jb
or
repz
mov
adc
push
cs
test
jl,pt
stos
push
xchg
les
cmpsb
dec
sbb
sbb
jecxz
ret
movsb
fisttpl
dec
mov
ja
lods
xchg
sbb
sub
outsb
fdivr
xchg
sub
lret
iret
test
dec
lock
jnp
jnp
cmpsb
inc
rol
mov
sub
sub
fiaddl
or
inc
or
cli
inc
or
push
mov
mov
cli
dec
cmp
dec
pop
imul
ficoms
sarb
mov
arpl
negb
inc
loop
xchg
mov
fisttps
adc
mulb
loop
pop
ds
xchg
sti
out
mov
shl
int3
aaa
ljmp
dec
test
mov
xchg
pop
push
enter
cltd
iret
lods
stc
in
mov
push
mov
mov
fisubrl
xor
fcomps
push
lock
ficomps
in
scas
rcl
iret
xchg
mov
fadd
mov
dec
fwait
mov
mov
push
stos
out
lds
mov
cwtl
xchg
call
dec
mov
pushf
pop
and
adc
cwtl
repz
xor
cmovo
shrl
sbb
test
int3
and
bound
punpckhbw
mov
adc
mov
push
pop
push
sti
xchg
in
rorl
das
mov
adc
call
push
sbb
int3
cltd
jge
das
sub
mov
mov
lods
testl
dec
fmull
or
fildll
mov
inc
xchg
xchg
jmp
and
mov
push
or
stc
xchg
ja
mov
sti
cmp
out
test
add
orb
mov
lods
and
and
out
sbb
mov
fsubrp
cmp
loop
add
inc
fldenv
adc
sbb
out
lds
dec
ud2
adc
rorb
inc
inc
adc
push
and
out
sub
lret
out
xor
dec
sub
jl
and
pushl
xor
mov
fldl
out
cwtl
mov
mov
fidivrs
fsubr
adc
dec
test
push
hlt
cmp
inc
les
mov
pop
pop
sub
cmp
fucompp
inc
std
mov
cmp
fadd
outsl
test
push
mov
xor
mov
movsb
mov
in
std
sbb
pop
gs
inc
mov
clc
jl
mov
clc
imul
xchg
mov
push
inc
or
mov
inc
add
inc
mov
sahf
push
iret
fs
lret
lods
sub
xchg
mov
mov
mov
mov
mov
je
int
or
nop
add
sbb
jle
xor
xchg
adc
mov
out
push
aaa
mov
xor
mov
scas
dec
inc
aaa
push
inc
lret
adcl
imul
push
push
pop
fs
jmp
push
xchg
inc
jb
roll
push
addr16
stos
mov
sub
xchg
fiaddl
dec
ja
jl
daa
fst
and
dec
sub
pop
cmp
push
adc
mov
ljmp
pusha
cmc
dec
push
mov
sahf
mov
xor
jl
adc
pop
scas
lea
popa
push
outsl
mov
lcall
xor
xchg
stc
push
xchg
mov
inc
and
mov
mov
push
and
cmp
fidivrl
push
inc
cltd
xor
dec
pop
movsl
xor
iret
lret
mov
loope
xlat
mov
cltd
addr16
aad
xchg
push
push
orb
xlat
repnz
cmp
mov
int3
sub
movsb
xchg
or
mov
inc
jbe
cltd
adc
hlt
std
hlt
aas
mov
inc
mulb
sbb
jb
adc
fidivrl
out
add
mov
sbb
leave
sub
sbbl
jno
sub
dec
js
xchg
fstl
or
outsl
inc
push
fimull
pop
mov
cld
sbb
imul
fldt
mov
mov
jb
cmp
sub
fstpt
xchg
push
add
pop
mov
mov
ret
lahf
roll
faddp
je
insb
xchg
pop
hlt
dec
adc
imul
ljmp
jmp
into
mov
jne
leave
mov
jg
xchg
mov
pop
repz
jmp
ljmp
inc
iret
ja
fcoms
out
jns
xchg
push
enter
jg
lea
or
arpl
outsb
andl
xchg
mov
add
lea
rorb
std
jns
subl
sub
test
dec
or
mov
jae
mov
lahf
add
outsb
and
jo
jl
test
fsubrs
xchg
mov
icebp
push
das
in
jle
add
outsl
mov
mov
hlt
cld
dec
lahf
or
dec
mov
mov
call
out
repz
loope
fucomip
cmpsb
mov
mov
mov
lahf
push
in
adc
cmpsb
sbb
ss
outsl
xchg
lea
icebp
xchg
test
inc
jmp
cmpb
shll
mov
fists
jo
enter
mov
sahf
mov
pop
decl
jmp
sbb
addl
es
out
sub
aas
lahf
lods
adc
cwtl
sub
inc
movsl
fistps
adcb
or
push
inc
xor
sbb
dec
js
mov
jecxz
psubusb
ss
xchg
loopne
pushf
or
aad
rolb
xchg
inc
or
clc
inc
ret
push
push
arpl
sbb
aas
push
jecxz
push
clc
loop
sub
pop
add
xor
and
mov
push
int
adc
js
xchg
leave
push
add
xchg
jg
fists
pop
mov
mov
sbb
test
and
dec
rcr
and
dec
xchg
xor
dec
xor
cmp
pop
in
mov
sahf
dec
scas
dec
bound
jo
mov
cltd
jo
es
pop
push
insb
xchg
mov
movsl
cmp
pop
cs
lahf
aaa
adc
inc
pop
lods
pop
mulb
jne
inc
mov
and
adc
js
mov
int3
loop
mov
jae
repz
mov
lcall
xor
push
fcoms
or
frndint
aas
pop
mov
or
pop
imul
pusha
pop
imul
xlat
ret
loop
stos
push
pop
int3
fmull
leave
mov
add
addps
int3
pop
cltd
pop
movq
sub
movsb
pusha
sub
ljmp
cli
js
inc
sub
cmpsl
fldcw
stos
xchg
push
pushf
pop
xchg
and
lock
or
add
xchg
pop
xchg
xor
das
dec
out
push
mov
pop
push
or
xchg
sahf
or
cmpsl
hlt
adc
pop
xchg
repz
mov
inc
push
sahf
arpl
or
mov
data16
icebp
mov
ficoml
les
pusha
push
pop
add
leave
pshufw
ds
ret
jbe
rcll
cwtl
fwait
or
fwait
sbb
js
dec
xchg
mov
cmp
loopne
in
pop
andb
loopne
push
add
js
inc
jge
pop
jb
mov
imul
lret
push
stos
mov
sub
push
orl
cmpsl
pop
cmp
sahf
jecxz
dec
sub
stc
repnz
addl
sbb
jno
es
lock
ror
push
mov
fildll
dec
pop
call
mov
jo
mov
pop
dec
jae
push
jno
sbbb
mov
mov
mov
shll
xchg
fs
rolb
mov
mov
ljmp
dec
cmp
mov
sub
mov
lcall
ficompl
xchg
movb
jecxz,pn
jne
imul
ljmp
sarl
ja
and
ret
cmp
loop
jne
pop
and
dec
arpl
roll
jl
cmpl
ror
push
pop
dec
in
pop
jno
shlb
mov
shll
jb
push
in
cmp
mov
ds
sub
dec
add
ret
add
and
js
jns
cmpsb
pop
lods
jl
add
lahf
notb
imul
mov
and
xchg
sarb
shlb
lret
jl
add
mov
ja
dec
sub
sbb
adc
sahf
test
cs
pmaddwd
cmp
iret
cltd
test
push
iret
lock
movsb
loopne
cli
pop
add
xchg
fdivs
fwait
jbe
adc
mov
jae
inc
cmp
sub
mov
out
aas
jle
add
dec
in
les
jnp
orb
lods
pop
out
and
mov
mov
lock
insl
or
mov
paddd
fisttps
test
xchg
sub
or
leave
fistpl
mov
sbb
lds
repz
cmp
sub
gs
mov
js
stos
les
mov
fbld
sar
sahf
dec
mov
xchg
in
mov
mov
jmp
lods
cmp
faddp
rcrb
push
lds
ret
xlat
sbb
adc
jbe
sub
and
mov
mov
lret
jecxz
bound
sub
test
in
and
scas
lcall
cmp
stos
dec
dec
push
test
dec
pop
rorl
dec
out
xchg
jecxz
dec
in
cmp
xor
das
inc
sbb
filds
push
and
mov
bound
clc
sbb
mov
xchg
fdivrs
pop
fwait
xlat
pop
hlt
mov
in
cmp
notb
daa
jle
ret
fisttpl
in
sub
in
jbe
and
sbb
adc
mov
enter
xor
mov
test
cmpsl
arpl
sbb
jb
cmpsb
outsb
gs
insb
sti
adc
push
xor
mov
imul
inc
popf
and
pop
rcrb
loop
lds
les
jnp
sbb
lahf
adc
pop
mov
in
lods
mov
pop
sub
sub
sbb
mov
sub
aas
push
std
outsb
lret
fcomi
in
mov
push
mov
xor
divl
ror
iret
std
add
mov
orl
mov
imul
push
scas
pop
mov
mov
jg
mov
stc
cmp
xchg
jge
lock
mov
push
dec
pushf
insl
xor
popf
aam
mov
mov
inc
adc
fldl
push
fisttpll
or
xchg
xor
data16
mov
dec
aad
dec
stc
rolb
mov
imul
cmpsl
insl
xchg
in
pushf
xchg
cmpsl
dec
inc
cmp
subb
push
minps
jecxz
daa
pusha
push
xchg
adc
in
data16
pusha
lret
inc
xchg
jge
lods
push
pusha
add
push
stos
pop
sub
xrelease
aam
ficoml
stos
rcrb
frstor
mov
mov
mov
mov
stos
arpl
ret
jecxz
scas
jmp
fidivs
push
jns
test
dec
nop
and
pop
pop
adc
xorb
lea
shlb
xor
iret
mov
sahf
aas
xor
xor
jl
in
mov
movsb
sbb
hlt
xor
inc
subb
fwait
sahf
sbb
inc
add
push
sti
pop
sbb
mov
and
lds
imul
fmuls
sub
mov
imul
and
ljmp
add
pop
sbb
pop
inc
repnz
xor
scas
arpl
aaa
andb
cmpl
dec
and
js
cmpsb
push
xchg
add
push
xchg
jmp
cmpsb
orl
adc
push
mov
stos
cmpsl
xchg
push
mov
mov
fs
aam
idivb
lahf
in
sar
pop
jg
lods
or
pop
push
mov
push
shr
sar
decl
stc
pop
fstps
mov
lea
test
mov
push
push
push
dec
xchg
xchg
xor
jmp
addb
in
push
sub
int
xor
lods
sub
shrl
mov
fldln2
xchg
ret
cs
and
add
mov
movsl
adc
and
pop
es
stos
into
xor
pop
xor
cli
mov
cmp
loop
daa
int3
scas
cli
mov
dec
ret
add
pop
cmp
mov
out
mov
lcall
bound
and
mov
mov
jno
icebp
mov
sbb
daa
insl
movsl
mov
cmp
mov
pop
ds
lahf
dec
pop
inc
lods
inc
loopne
cmpsb
rcrl
inc
popf
mov
mov
jno,pt
outsb
je
sbb
test
insb
xchg
or
lea
mov
mov
outsl
lock
mov
cmp
ret
adc
cmp
cmp
ror
sub
mov
les
xor
enter
jle
lcall
fs
add
jl
dec
mov
sbb
mov
lea
ss
xchg
mov
sahf
icebp
cld
lds
sbb
in
and
add
mov
rcl
sbb
nop
jb
dec
scas
rol
cmp
sub
cli
jp
outsl
test
mov
jle
push
mov
pop
pop
aas
rcrb
xchg
xchg
xchg
adc
xor
push
mov
xlat
jp
add
push
xlat
das
xor
jno
jl
incb
stc
les
or
adc
sub
mov
loop
lret
repnz
push
pop
xor
or
test
in
in
xchg
test
mov
mov
out
push
mov
mov
or
inc
ljmp
mov
jecxz
or
mov
stc
sub
xchg
mov
addr16
lock
xchg
rcl
xor
xor
sbb
ljmp
mov
xchg
or
jb
fsin
or
nop
mov
sub
mov
add
rcr
dec
mov
addr16
out
pop
or
jnp
jle
in
les
gs
xchg
mov
fldcw
in
pop
sub
daa
test
jns
mov
cmp
loop
push
scas
mov
add
jbe
or
pop
xor
sub
int3
jne
push
shl
loopnew
lods
inc
pushf
outsb
dec
stc
movsb
dec
scas
decb
or
das
cmpsl
adc
mov
das
sbb
xchg
test
mov
mov
mov
mov
lds
mov
sub
js
cmp
add
xchg
or
mov
loopne
mov
popf
ss
lods
sbb
fldenv
and
std
pushf
adc
inc
incb
xlat
loopne
sarl
mov
mov
or
sahf
sbb
repz
sub
into
mov
popf
dec
sbb
jne
mov
sarl
pushf
arpl
cwtl
loop
cwtl
cmp
mov
mov
data16
sub
bound
or
es
leave
psubusb
fstp
or
or
jb
out
in
pop
mov
gs
fisubrs
fcoms
dec
fwait
cmp
shlb
adc
popf
gs
test
jp
insl
in
jl
mov
xor
test
and
xchg
mov
or
fisubs
mov
dec
mov
or
or
sub
jns
gs
mov
ret
cmp
repnz
sbb
jl
inc
jle
movsb
fisttpll
lods
mov
std
sbb
jl
push
cld
out
xor
jns
lahf
aad
cltd
lea
dec
inc
sbb
add
aas
in
mov
mov
sarb
stos
stc
arpl
imul
fpatan
int
sahf
mov
or
clc
ret
sub
imul
xor
fimuls
cmp
cld
test
movsb
nop
lret
adc
imul
push
ret
test
adc
push
or
cmp
fisubl
jp
xchg
bound
lea
adc
push
cmp
movsb
pop
inc
push
test
push
xchg
scas
sub
scas
or
inc
repnz
lods
jecxz
sbb
or
mov
xchg
dec
mov
fistl
mov
push
mov
stos
add
sub
jp
aas
inc
dec
xor
ljmp
xor
fildl
add
andl
pop
add
sub
lock
jmp
scas
test
popa
stos
mov
push
leave
inc
test
insl
add
push
or
call
test
mov
jb
out
dec
and
cmc
and
fs
pop
adc
or
push
repnz
and
push
jp
mov
jp
daa
jge
andl
mov
das
pop
jl
or
and
and
jmp
pop
je
mov
and
xchg
ret
mov
inc
fldt
cmpsb
mov
mov
add
xor
cs
mov
int
mov
into
arpl
data16
sbb
jnp
xchg
in
mov
sbb
lds
and
jmp
mov
sbb
jo
addr16
test
inc
cmp
mov
fildll
out
jno
jns
xchg
mov
sub
xchg
inc
jge
outsb
cmp
xor
inc
aad
jle
adc
ljmp
sti
je
cmp
mov
or
in
clc
adc
jmp
add
jns
xchg
pushf
cmc
out
aas
jg
mov
popa
jmp
pop
mov
das
in
jecxz
jecxz
stc
insb
sbb
sbb
sub
xor
rorl
ror
arpl
xlat
or
push
divb
push
sub
jno
sbb
mov
ss
ficomps
push
iret
cmpsb
and
xor
jmp
sbb
cmp
clc
lds
dec
push
ja
mov
mov
shr
dec
xchg
orl
popa
jg
into
cmc
mov
loope
popa
pop
push
bound
mov
sub
bound
adc
add
cmpsl
push
sbb
sbb
cmp
jge
jge
outsl
inc
mov
jbe
jb
mov
rclb
lret
mov
xchg
mov
add
mov
pop
pop
stc
mov
jmp
xor
add
dec
dec
push
mov
mov
popf
lahf
sbbl
inc
cwtl
lcall
sub
xchg
xchg
xor
push
faddp
lret
adc
mov
mov
std
xchg
popf
addr16
imul
jno
push
mov
fneni(8087
or
fs
inc
mov
push
jns
out
mov
xchg
enter
arpl
pop
cmpsl
mov
movsl
jecxz
dec
pop
es
stos
adc
mov
aaa
ds
or
jbe
sar
lock
rorb
and
aam
nop
adc
dec
aad
push
push
sbb
fsubrs
cmp
mov
fiadds
cmpsb
popf
inc
test
fcoms
adc
inc
mov
dec
out
dec
jg
fcoml
jecxz
lahf
aam
cmp
shll
aaa
jmp
orb
loop
mov
xlat
ss
out
jnp
adc
push
dec
in
add
mov
gs
and
jns
ja
roll
test
sarb
enter
repnz
lret
mov
inc
jge
or
and
ficoml
decl
roll
cmpsb
and
jge
add
push
out
and
mov
and
cmp
repnz
mov
ds
ds
dec
pop
pop
aam
dec
add
scas
mov
iret
outsl
in
in
aam
sbb
enter
cs
ret
jnp
nop
ror
imul
test
push
inc
negl
popa
ss
jo
mull
inc
xchg
xor
dec
jne
test
in
adc
dec
loopne
xchg
adc
sbb
mov
pop
dec
iret
jl
xchg
sub
push
xchg
mov
or
cmc
jle
out
in
popa
repz
ljmp
sbb
cltd
out
xchg
notb
cvtps2pd
mov
sbb
cld
mov
arpl
das
cmc
adc
into
push
lret
jne
jmp
or
sbb
mov
adc
sbb
notb
jnp
adc
cmp
push
mov
leave
cmp
ljmp
andb
or
pusha
or
xor
mov
or
lock
dec
push
mov
mov
daa
adc
pop
pop
jnp
cmpb
inc
movsl
arpl
mov
add
fadds
in
cmpsb
mov
add
idiv
cmp
xchg
mov
dec
push
or
and
sub
lret
aam
dec
xchg
rorl
mov
ljmp
lcall
xchg
xor
mov
jno
jl
mov
cwtl
ret
xor
push
ret
sbb
cld
fbstp
mov
mov
dec
add
mov
loopne
jne
inc
add
push
and
sahf
mov
lret
popf
xchg
cs
fsubrp
mov
jl
mov
dec
jbe
and
out
jae
aaa
loopne
jnp
stos
ljmp
mov
push
cwtl
xchg
xchg
inc
in
test
xor
mov
and
or
hlt
pop
cmp
dec
stc
pop
mov
lahf
je
and
bnd
or
dec
sbb
mov
test
pop
cmp
sti
cld
cmc
in
clc
fidivl
cmp
add
xor
mov
insb
sbb
inc
or
jb
ret
mov
xchg
out
out
push
insl
add
push
push
xchg
inc
mov
std
xor
roll
xchg
jmp
outsb
push
imul
seto
arpl
lock
mov
jge
xchg
push
or
inc
cltd
pop
cmp
repnz
in
jge
mov
aad
pop
xor
cwtl
out
lods
lods
xor
cld
jmp
and
and
push
loop
sub
sbb
lods
jmp
push
mov
dec
xchg
pop
test
sbb
hlt
cmpsb
jne
out
push
ret
sub
mov
xor
scas
sub
dec
jle
mov
into
cmp
into
mov
orb
sbb
xchg
jecxz
iret
shlb
mov
jmp
or
daa
stos
jno
jnp
pop
imul
data16
shll
out
mov
movsl
into
fs
cmc
int3
imul
lods
iret
sahf
fcmove
inc
cmp
jb
std
sbb
pop
popa
or
insl
mov
xchg
add
xor
aas
icebp
xor
pusha
sub
and
push
icebp
adcb
dec
imul
mov
sub
mov
push
xchg
mov
in
jge
and
jp
cmp
xor
inc
sbb
mov
std
xor
fdivl
daa
adcl
mov
hlt
xlat
cli
lods
mov
push
stc
add
xchg
push
popa
movsl
icebp
adc
and
ss
cmp
xor
add
std
mov
or
nop
push
sbb
fucomip
nop
push
mov
lcall
movsl
xor
fwait
addr16
shr
add
inc
jl
gs
out
push
dec
or
jmp
int
in
mov
jns
out
lcall
mov
jnp
repnz
sbb
push
test
dec
in
pop
add
sbb
inc
test
inc
addr16
stos
in
je
push
mov
outsb
scas
into
enter
and
xor
arpl
adc
cmp
pop
mov
adcl
repnz
add
out
or
mov
cmc
mov
out
sbb
and
mov
lods
lea
test
xor
pop
adc
test
mov
push
cmc
sub
popa
jno
xchg
ret
test
fisubs
pushf
inc
out
jle
add
mov
mov
add
sbb
dec
xchg
jns
fwait
scas
or
jb
popa
xor
ljmp
outsb
testl
mov
ds
add
mov
cmpsl
inc
insb
pop
mov
and
fsub
std
adc
das
adc
fs
and
xor
inc
pop
roll
cmp
add
in
dec
fsubrl
sbbl
lret
ret
jae
or
mov
cmp
mov
mov
loopne
cmpsl
cmpsl
out
cmovp
shl
fldl
jo
test
out
and
movsl
pushf
xchg
movsl
mov
jb
xor
icebp
outsl
jl
jo
and
dec
pop
insl
xchg
je
dec
add
push
xchg
mov
movsb
jp
cs
outsb
mov
push
adc
mov
cmc
xor
add
cwtl
jae
inc
daa
cmpsl
mov
adc
lods
test
cli
inc
scas
adc
es
enter
inc
outsb
xor
mov
addr16
and
test
lret
push
jmp
in
pop
xor
add
sub
test
popa
repnz
popf
and
mov
not
aaa
mov
leave
inc
jmp
clc
fwait
xor
mov
fildll
clc
cmpsl
ficompl
push
adc
out
cli
je
and
and
cmpsb
mov
fsubrs
rcrb
xor
xchg
mov
in
leave
mov
jmp
sahf
jmp
rclb
sahf
paddsw
jp
das
sbb
push
mov
in
mov
xchg
lods
jnp
icebp
jg
push
xor
mov
fnstcw
imul
repnz
imul
add
dec
xchg
scas
pop
rcrb
adc
decl
std
scas
sub
or
std
jnp
xor
addr16
push
outsl
out
xchg
cmp
enter
out
lock
cltd
or
daa
sub
xchg
adc
mov
push
pop
pop
or
int3
into
inc
xor
or
jne
pop
jnp
andb
inc
adc
rcrb
popl
cltd
xor
insl
dec
jb
les
adc
movl
or
fs
repnz
xchg
out
adc
inc
jle
cmpb
jge
in
in
mov
inc
leave
shlb
in
mov
xlat
mov
sbb
pop
scas
xor
cs
jnp
mov
pop
cmpsb
icebp
xor
push
fcmovnu
sub
adc
add
or
mov
aaa
movsb
scas
addl
leave
fsubl
jecxz
scas
loop
mov
repz
xchg
inc
cld
jge
lcall
cli
inc
adc
and
sahf
aaa
dec
jge
aaa
add
push
sbb
shlb
addl
shll
lret
cld
gs
xchg
jmp
sub
pop
jle
inc
add
outsb
and
xchg
jbe
mov
adc
xchg
fidivs
sbb
inc
repz
xor
out
sub
adc
add
movsl
mov
popf
cmc
sub
dec
xchg
icebp
fsubl
iret
int
aas
mov
sbb
mov
jbe
cmp
movsb
sub
dec
cmc
pushf
jle
and
dec
cmp
cmpsb
fwait
xchg
mov
or
and
fstps
adc
jb
icebp
inc
inc
jmp
jnp
into
jecxz
dec
imul
lret
dec
add
inc
in
mov
lret
aam
clc
sbb
stos
ds
in
pop
inc
popf
andb
jge
in
loop
mov
loopne
into
mov
add
jle
xor
xchg
repnz
lahf
dec
out
mov
sahf
rcll
inc
cmc
lcall
testb
inc
lea
dec
lcall
cmc
lds
xchg
lods
and
pusha
jne
insl
mov
push
jp
mov
aas
xor
cmc
mov
adc
movsb
mov
pop
sbb
jl
in
rcl
test
in
push
enter
mov
data16
and
ds
xor
std
add
mov
sbb
xor
mov
sti
mov
push
test
sbb
xor
push
lret
cld
mov
mov
adc
sbb
jmp
xor
ds
mov
dec
adc
lock
xchg
push
inc
mov
push
mov
arpl
and
cwtl
insl
aas
int3
push
in
out
dec
jb
sub
rcl
push
xchg
jle
jo
mov
fwait
sbb
iret
or
arpl
inc
lods
push
mov
push
cmp
add
pop
push
movsb
arpl
push
dec
inc
push
rolb
aas
cmp
shl
addr16
add
test
add
pop
jl
mov
mov
pop
ja
orl
mov
adc
rorb
bound
aas
fisubrl
lea
mov
popa
mov
xor
imul
sahf
out
sbbb
aam
movsl
sbbb
je
fstl
nop
popa
out
aad
imul
mov
in
sbb
xchg
jle
inc
jmp
cmp
stos
rolb
ficoml
flds
es
sahf
movsl
sbb
addr16
and
mov
addr16
out
test
cmp
aam
jno
push
lds
out
xchg
mov
cmp
cmp
inc
lahf
and
cli
inc
sub
cmc
jp
clc
js
inc
outsb
mov
lods
mov
mov
mov
jne
imull
jmp
mov
pop
pushf
lods
xor
shll
les
adc
cmc
pusha
pop
pop
adc
adc
daa
imul
ret
pop
mov
aad
fidivl
sub
mov
jp
pop
inc
add
mov
push
popf
lods
fdiv
sahf
xchg
repnz
xor
repnz
mov
les
push
lods
sbb
inc
es
loopne
inc
pop
mov
aad
dec
imul
imul
xchg
sbb
out
dec
loop
sbb
cmpsb
adc
dec
xchg
push
loop
loop,pn
jno
mov
std
clc
ret
pop
jmp
dec
sti
and
sbb
out
xorb
call
fildl
cwtl
repnz
xlat
aas
fdivr
std
push
mov
push
sub
lcall
xor
dec
adcb
or
lds
cltd
notl
lock
mov
mov
push
mov
stc
inc
xor
fs
and
bound
clc
mov
adc
lahf
xor
es
les
stc
clc
test
push
sub
add
loope
pop
and
jae
xchg
and
inc
hlt
pushf
xchg
adc
scas
cmp
test
dec
fsubrs
iret
xor
xchg
into
push
inc
mov
or
mov
fisttpll
pop
push
clc
mov
pop
pop
jecxz
xor
out
ret
in
push
mov
aas
enter
dec
jnp
in
cld
adc
scas
mov
xchg
xor
add
or
sbb
mov
dec
insl
push
pop
in
clc
xor
testl
xchg
icebp
icebp
outsb
iret
pusha
push
push
sbb
out
mov
mov
pushf
sub
ljmp
imul
pop
and
scas
scas
jl
sbb
stc
xlat
add
test
inc
mov
sbb
jb
add
jp
int
and
push
rcr
jb
xor
xlat
xchg
fidivs
jmp
iret
mov
cmpsb
aam
add
xchg
mov
hlt
icebp
xchg
jb
ljmp
mov
hlt
xchg
xchg
stos
cmp
push
fs
test
pushf
jo
jbe
pop
pop
fdivrl
mov
dec
aaa
fbstp
int
movsl
and
or
imul
add
das
aaa
inc
lods
sbb
push
lret
push
lcall
ja
mov
nop
js
insl
popa
mov
aaa
add
or
cmp
cs
in
xchg
loope
into
mov
arpl
inc
imul
int3
push
rcr
adc
test
dec
cld
cmp
gs
xor
orb
cld
pop
adc
mov
lods
je
ret
nop
cmp
add
int
stc
test
cmpb
es
or
cmp
xor
mov
fldl
stos
rorb
push
mov
insb
inc
in
inc
scas
mov
scas
test
ret
add
mov
inc
in
mov
rcr
daa
xchg
in
cld
push
cmp
add
imul
mov
xor
rcl
arpl
fistps
pop
pop
call
lods
scas
xchg
mov
mov
inc
popf
lahf
addr16
in
arpl
lods
mov
orb
cmpsl
imul
cmp
mov
outsb
sub
jle
enter
out
ret
xor
adc
or
inc
popf
and
jl
mov
xchg
aam
pop
sub
das
and
test
fs
jo
cmc
push
mov
shll
mov
and
cli
mov
sarl
fs
pop
sbb
fdivrl
and
jb
and
sub
jmp
cmp
lock
idivb
mov
addr16
subl
fbld
sbb
into
xor
mov
pop
nop
pcmpeqb
push
mov
cs
outsb
adc
ret
ljmp
inc
sub
adc
out
push
repnz
mov
fwait
xor
mov
mov
xchg
xor
test
xchg
popf
or
popa
jle
lods
mov
xchg
cmc
icebp
aam
xor
xor
test
jne
lret
adc
aas
fiaddl
inc
getsec
mov
jl
into
in
int3
test
sarl
inc
jnp
sbbl
push
in
pop
mov
jp
xchg
sti
cmp
add
outsl
shll
loopne
inc
lds
shrb
mov
jo
adc
or
inc
out
ficomps
icebp
arpl
daa
dec
mov
pop
xchg
mov
ret
sub
scas
das
dec
out
mov
int3
jbe
or
test
xor
xor
adc
jae
inc
inc
dec
sub
and
mov
inc
or
adc
mov
dec
sub
pop
pop
cmp
repz
or
and
pop
xor
cmp
fnstcw
movsb
sar
ss
mov
daa
inc
push
lock
jae
ds
popf
sti
push
adc
cmp
jmp
stos
std
arpl
imul
pop
dec
pop
stos
jg
jo
xchg
push
sbb
mov
outsb
jb
mov
cwtl
jnp
adc
mov
icebp
and
in
icebp
cmp
rolb
push
in
iret
cmp
jnp
and
das
cwtl
mov
ret
ret
lods
adc
xchg
int3
mov
shlb
aad
dec
mov
or
mov
hlt
lods
jge
sti
jp
jge
adc
xchg
push
mov
gs
xor
pop
fidivrs
testl
repz
jae
dec
inc
test
test
cwtl
adc
pop
popl
xlat
mov
sbb
mov
xor
fbstp
mov
sbb
inc
fdivrl
out
add
test
adc
hlt
and
adc
cmp
ljmp
inc
mov
xchg
cmp
jns
shl
push
inc
stos
inc
iret
lds
xchg
push
loope
sti
mov
and
mov
shll
scas
cmpl
or
dec
gs
jno
adc
mov
lahf
inc
aad
fmul
repnz
lret
inc
ret
sbb
pushf
imul
sub
pop
cmpsb
pop
mov
jmp
push
add
mov
bound
mov
mov
hlt
jg
push
push
cmp
fists
bound
icebp
test
jno
add
inc
cmc
cwtl
je
lret
xchg
xor
inc
shl
shlb
imul
jns
dec
mov
les
enter
hlt
mov
mov
mov
das
arpl
js
roll
adc
das
xlat
nop
mov
lret
lods
outsl
mov
iret
push
imulb
scas
icebp
aas
cli
pop
dec
leave
sbb
sahf
dec
gs
in
pushf
xor
sub
push
xchg
fdivp
call
imul
sbb
test
fcompl
outsl
mov
cmp
sub
lods
aad
inc
jmp
shl
pop
pop
pop
adc
icebp
jmp
adc
repz
imul
sbb
fdivl
sahf
pop
mov
inc
cmp
xlat
js
jns
or
nop
push
or
sbb
stc
or
push
mov
inc
add
cmc
xor
cld
push
mov
stos
mov
fs
lahf
movb
pop
and
jnp
adc
pop
popa
lea
push
fnsave
mov
cwtl
lods
cs
cmp
lock
ds
out
mov
sbb
dec
js
mov
pop
push
aas
mov
testb
push
sbb
outsb
pop
dec
adc
mov
add
jle
lods
mov
cmpsb
js
xchg
cmc
mov
lahf
jp
push
push
insb
xchg
inc
or
jns
test
arpl
enter
jl
pop
insb
ljmp
mov
mov
cmp
push
sarb
mov
loopne
xchg
loope
sbbl
jns
pop
cs
mul
push
loope
sbb
outsb
and
ljmp
add
sub
insl
pop
out
div
adc
repnz
stos
xor
cld
fnstcw
int3
pop
fidivs
mov
stos
mov
movl
mov
inc
inc
pop
fidivrs
xor
into
dec
or
dec
xchg
pop
push
ljmp
push
pop
adc
push
pushf
jg
stos
xorb
movb
sub
xchg
cmp
stc
xor
mov
aaa
fld
andb
in
jp
aas
mov
pusha
or
mov
scas
enter
int3
pop
imul
lock
int3
pop
sub
adc
ljmp
and
jle
or
mov
push
aas
xor
in
lret
push
mov
adc
enter
mov
rorl
pushf
xchg
mov
or
sbb
xchg
mov
jbe
xchg
faddp
and
or
mov
xor
fcmovb
jge
insb
dec
aaa
stos
lods
or
sub
pop
xchg
add
jo
push
adcb
add
and
stc
test
pop
sub
repnz
push
fcoml
jp
and
xchg
mov
mov
push
out
pop
scas
xor
mov
adc
jp
lock
add
cld
fs
subl
fisubrs
mov
mov
inc
pusha
in
out
mov
pop
js
adcb
adc
jns
mov
int
ret
sbbl
rdtsc
xor
or
test
sbb
stos
rcll
pop
xchg
decl
mov
in
push
xor
xchg
mov
xchg
lahf
cltd
jle
cmp
sub
fs
mov
or
cmc
ja
sub
pushf
pop
in
push
sub
mov
cmpsb
xor
lods
arpl
outsb
int3
dec
xor
gs
sub
mov
sub
push
add
jne
add
xchg
les
sti
mov
stos
or
repnz
lcall
clc
sub
or
jo
and
jl
sbb
mov
sub
mov
sbb
adc
push
inc
xchg
sahf
test
dec
xor
xchg
mov
push
shll
movl
pop
jp
push
jbe
or
flds
cmc
push
js
pop
pop
cmpsl
daa
std
and
notl
scas
das
dec
jo
enter
das
or
cmp
pusha
cmpsl
rorb
ret
inc
sub
add
imul
mov
hlt
fstps
nopl
pop
inc
or
clc
adc
push
lds
cld
push
and
jle
filds
jmp
stc
dec
adc
push
les
imul
inc
daa
stos
pop
mov
or
hlt
jmp
inc
mov
scas
push
lods
mov
in
in
cmp
test
cmp
fwait
out
mov
std
das
je
lea
mov
push
mov
jnp
sub
jae
out
mov
roll
cmc
enter
adc
lods
fucom
in
and
cmp
repnz
jno
cmp
and
jnp
sbb
loope
add
lret
jle
cmc
inc
inc
outsb
loop
jns
pop
mov
popa
pop
add
pop
mov
orl
adc
add
cmpsb
pop
add
fildll
jl
repnz
pop
sbb
mov
ljmp
lock
lods
lods
divl
pop
push
xchg
int3
push
and
std
loope
mov
add
pop
adc
stos
neg
jp
fcoml
sub
pop
kmovb
in
xor
outsb
jae
dec
sbb
jbe
and
out
and
scas
rcrb
sub
sbb
mov
scas
aas
sbb
dec
aas
ss
or
das
aaa
jae
imul
cmp
loop
push
test
clc
and
xlat
mov
leave
fcmove
not
mov
js
mov
test
push
xchg
mov
add
sbb
or
out
jnp
cmp
inc
cmpl
sub
or
dec
jecxz
sar
test
mov
fsubrl
add
jnp
cld
or
mov
shlb
adc
and
jecxz
cmp
test
ret
shr
cmp
push
add
js
xchg
test
add
jbe
adc
mov
jg
push
pop
nop
mov
cmp
sahf
cld
xchg
loop
or
sahf
adc
enter
popa
out
mov
mov
or
mov
clc
pop
sub
push
testl
imul
popa
mov
insl
jb
mov
ja
sbb
xor
adc
push
jle
xchg
add
xchg
push
mov
add
leave
movb
mov
repz
out
std
out
push
clc
cmp
hlt
icebp
mov
mov
mov
lea
and
push
push
insb
cmpsb
mov
lret
cmp
ljmp
sbb
pop
cwtl
mov
push
loope
mov
es
xchg
lods
xor
lock
nop
sbb
adc
lahf
leave
mov
jno
mov
cmp
or
sub
cli
icebp
ficompl
lods
pop
out
rorl
cmp
jae
mov
sub
ss
subl
cmpsl
outsl
add
nop
cli
and
mov
or
xchg
je
push
lret
jmp
xchg
aam
lock
stos
push
mov
lcall
pop
popa
ljmp
pop
lret
or
inc
jp
lods
add
dec
mov
sbb
ljmp
push
dec
aam
js
push
in
popf
dec
into
mov
aas
or
mov
push
and
jge
xor
test
leave
in
xlat
jmp
jecxz
flds
orb
and
pushf
pop
out
xchg
adc
bound
mov
sbb
adc
fs
addr16
pop
xchg
push
xchg
push
inc
and
int
mov
add
xchg
mov
xchg
movsl
imulb
hlt
dec
mov
loopne
setne
add
cmc
sbb
insl
pop
sbb
cmp
mov
ret
inc
xchg
pop
sub
mov
jno
cld
pop
fistpl
cltd
xlat
sub
cltd
add
mov
imull
pop
lahf
rcl
imul
mov
andb
sahf
sub
xchg
dec
and
outsb
das
mov
ds
push
iret
les
sub
cmp
decb
lret
fwait
xorl
xchg
xor
pop
pop
and
or
mov
ds
rclb
divb
popf
inc
pop
cli
add
insb
dec
call
in
lods
scas
test
out
xor
jle
mov
jl
xchg
push
es
faddp
mov
pop
mov
xchg
nop
inc
sbb
test
cmp
jae,pn
aas
xor
mov
sub
xor
push
cmpsl
out
jnp
jne
mov
into
jns
cmp
pop
ftst
push
hlt
push
mov
push
pop
inc
test
out
or
jbe
xchg
fbstp
out
fsubrs
iret
fisubs
or
dec
sbb
pop
push
pop
mov
sti
data16
in
mov
pop
fbld
daa
repz
fsubl
xor
pop
mov
pushf
dec
xchg
ds
lds
mov
daa
in
push
jb
ljmp
inc
clc
aam
mov
clc
imul
mov
or
mov
inc
mov
shll
cmp
call
aad
pop
repz
xor
lcall
js
xchg
push
imulb
rclb
push
sahf
xchg
cmpsb
flds
mov
ja
test
in
outsb
out
imul
inc
in
pop
sub
out
out
shlb
dec
dec
outsl
jmp
scas
in
add
push
jle
mov
into
arpl
arpl
cs
pop
dec
push
xchg
dec
ja
xchg
and
mov
xor
ret
xor
pop
cwtl
cwtl
fwait
jecxz
or
xchg
pop
stos
cmpsb
inc
mov
sbb
dec
xor
or
pop
ljmp
or
test
mov
and
pop
sbb
mov
jg
loop
dec
aad
sbb
popa
pop
cmc
sub
xchg
int
out
add
add
jmp
pushf
mov
dec
adc
pop
lahf
jb
iret
mov
sbb
cltd
cmc
sarl
rorl
test
fisttpll
jg
push
mov
sarl
push
ss
pop
movsb
xor
or
add
mov
negl
jg
and
xor
scas
xchg
add
mov
cmp
dec
pop
in
pop
or
xor
aam
jne
out
mov
clc
xor
inc
sub
mov
jbe
into
filds
enter
lret
and
cwtl
divps
imull
xchg
xchg
mov
test
mov
add
shr
and
icebp
subb
mov
stos
int
sbb
rolb
sarl
dec
out
adc
mov
add
hlt
notb
add
mov
pop
out
fcmovbe
icebp
pop
clc
out
add
out
mov
fcompl
mov
fcomps
aam
and
ret
ret
pop
lods
rcl
js
mov
cs
fidivs
xorl
sbb
ret
icebp
mov
jl
movsb
movsb
inc
fmul
mov
into
inc
das
pavgb
fists
mov
cmp
pop
nop
mov
dec
add
lcall
xor
pop
mov
clc
mov
mov
pop
aaa
jmp
push
sbb
call
lret
sub
fisttpll
js
push
ss
stc
iret
mov
repz
aam
ja
fsts
pop
or
jnp
mov
sub
dec
cld
jp
lret
fs
pop
icebp
pusha
dec
les
xor
icebp
mov
xchg
std
mov
hlt
incb
pop
ljmp
cmp
inc
and
mov
movsb
repnz
mov
mov
jp
sub
cmpsl
cmp
shlb
negb
mov
inc
pop
repz
scas
mov
dec
push
jne
add
movsl
sbb
iret
sbb
push
scas
pusha
adc
inc
cmp
or
xchg
cmpsb
jns
scas
sub
out
cwtl
in
mov
ret
mov
inc
xchg
mov
rcrb
out
fmuls
or
adcb
sub
pop
xchg
pop
inc
aad
or
inc
xchg
pop
xor
lods
pop
gs
sti
fistpl
test
sti
or
and
sub
inc
adc
mov
nop
addr16
lock
cmpsl
arpl
mov
ja
orb
cli
int3
test
lcall
cmp
dec
in
push
pop
xchg
pop
push
imul
movsd
imul
cmp
adc
xchg
push
xchg
or
std
aas
jne
repz
imul
pop
dec
pop
or
sbb
jb
sub
ret
insb
mov
inc
les
hlt
push
xor
xchg
out
mov
addl
inc
add
jae
mov
pop
and
shr
dec
and
ja
ds
ja
push
test
dec
dec
mov
popa
hlt
or
movsl
mov
lret
out
pop
aas
test
rcl
adc
mov
hlt
jb
lea
fistpl
lcall
sbb
test
imul
sbb
xchg
pop
push
push
mov
rcrl
sub
jp
rclb
or
scas
pop
nop
cmpb
and
decb
fisttpl
rorb
sub
push
in
and
test
shr
sub
out
push
xchg
mov
cmp
mov
mov
andl
mov
and
dec
in
push
pop
fisttpll
lods
in
stos
loopne
lret
pop
in
lret
inc
or
fiadds
inc
push
enter
pop
inc
add
pop
mov
xor
stos
in
mov
push
insl
aam
loopne
add
xchg
ljmp
out
xor
or
pop
and
insb
inc
test
sub
mov
repz
or
data16
xchg
ja
add
enter
fcmovne
clc
ret
mov
mov
repz
inc
pop
fsubl
pop
cmp
test
je
jmp
popa
out
out
popa
imul
jne
jle
inc
cmp
jbe
pusha
mov
xchg
addr16
cld
add
cmp
leave
dec
and
jb
in
lcall
adc
call
outsl
jnp
fwait
testb
mov
cmp
push
sub
lret
sbb
ljmp
stos
scas
popa
ret
xchg
fcmove
xchg
das
scas
push
mov
mov
sub
sahf
xchg
ds
popa
or
push
inc
mov
inc
in
push
jle
mov
lahf
fxch
lods
lret
pop
repz
cmpb
mov
es
scas
push
xchg
cmp
aas
mov
pop
arpl
jmp
jns
xchg
mov
bound
js
lret
icebp
jo
cmc
lock
fildll
js
jns
pop
mov
jg
lea
or
cmpsb
inc
repz
add
pop
cmp
pop
loopne
outsl
mov
fucomi
push
jp
out
push
dec
mov
repnz
and
inc
fiadds
imul
mov
jae
fstps
mov
adc
jbe
xor
mov
cmp
int3
inc
and
popa
jle
ja
adc
andl
repz
or
mov
cli
jp
and
repz
stos
pop
pusha
inc
and
jl
jg
push
idivb
dec
lods
push
add
xchg
inc
sub
push
inc
jnp
lret
leave
cmp
stos
adc
ljmp
adcb
loope
iret
outsb
in
pop
xor
cs
sbb
and
js
and
xorb
daa
sbb
dec
sbb
jecxz
mov
adc
push
fildl
mov
clc
sbb
sbb
rorb
xlat
in
imul
fs
mov
dec
cmp
mov
nop
push
jle
add
jp
mov
addr16
test
lods
add
xchg
and
cmp
pop
push
outsl
call
dec
lock
inc
sub
fists
cmp
gs
push
repz
aaa
cmp
mov
add
pushf
adc
fsubs
into
rcrb
jl
movsb
stos
mov
enter
arpl
testl
push
sarb
cli
enter
vcvtps2dq
adc
arpl
dec
jg
xchg
jg
punpckhbw
enter
adc
mov
mov
rcrb
jo
mov
mov
xchg
inc
ss
push
xor
dec
mov
movsb
inc
loopne
negl
test
mov
push
adc
or
xor
pop
ret
insb
loope
push
aas
js
push
in
pop
adc
fwait
jge
mov
shlb
jb
jecxz
movsl
bound
jmp
jno
jle
ds
mov
xor
test
frstor
lret
add
fdivrs
jne
repz
dec
icebp
and
cmpsl
xor
std
call
call
sbb
pop
jb
incb
cmpsb
push
std
loop
xor
loop
pusha
out
stc
sti
fwait
or
sbb
mov
adc
mov
int
fisubl
mull
shr
sbb
xchg
stos
jbe
dec
ljmp
cmp
clc
scas
cmpsb
and
dec
sbb
push
xlat
add
inc
or
jns
inc
sbb
stos
xchg
jbe
lods
hlt
sbb
cmp
pop
insl
or
dec
inc
stc
xchg
popf
xchg
inc
hlt
sti
xchg
sub
aas
pop
out
adc
jl
fiaddl
sub
rcrl
adc
in
mov
dec
out
aas
push
mov
rcrl
and
ljmp
stos
repnz
sbb
xchg
sub
or
iret
mov
mov
mov
xchg
sti
bound
xor
cwtl
shll
mov
imul
inc
or
cwtl
jmp
iret
pop
fisttps
or
imul
push
push
stos
push
sub
enter
and
sub
cmpsb
xchg
into
mov
aas
xlat
adc
jo
scas
add
inc
in
mov
test
jge
or
ljmp
sbb
mov
inc
repnz
cmp
stc
dec
int
in
jmp
fs
frstor
int3
dec
cmp
loop
pop
shr
sar
lret
ja
mov
mov
pop
test
mov
and
stc
jno
xchg
push
mov
orb
fcompl
push
pop
incl
scas
jg
inc
cmp
iret
xor
clc
test
imul
imul
fwait
jmp
xchg
outsb
mov
pop
in
mov
ret
popa
adc
inc
xchg
mov
ret
xor
sub
daa
or
adc
repz
loopne
and
mov
data16
fidivrl
jecxz
mov
jmp
sbb
sub
mov
iret
mov
xchg
dec
jmp
and
add
xchg
out
mov
or
leave
jns
push
mov
testl
sbb
bnd
scas
sbb
mov
xchg
jmp
sub
jo
cwtl
fsubrs
scas
jbe
pop
lcall
jecxz
cmpsb
sub
mov
or
dec
jecxz
test
xor
push
rorb
pop
xchg
mov
shrl
adc
pop
add
jne
iret
lret
push
dec
loope
insb
std
jns
pop
inc
flds
jg
adc
idivl
fsubl
test
push
adc
cmp
push
andl
xor
push
mov
shl
mov
mov
jge
xchg
xchg
xor
add
sub
mov
mov
xor
imul
clc
lcall
jb
mov
pop
adc
lods
fidivrs
and
mov
mov
xchg
add
fsub
push
and
rorl
xchg
clc
xchg
mov
and
push
lods
sub
xor
les
push
mov
sbb
mov
mov
mov
jno
or
cmp
or
cld
andb
dec
fwait
push
testb
xchg
out
xor
and
push
aaa
adc
and
cmp
sub
xorl
ja
cmp
mov
stos
add
push
lahf
fadd
xchg
pop
xchg
fld
in
dec
dec
push
push
data16
cmp
sub
sti
hlt
jecxz
scas
adc
test
push
mov
dec
daa
addb
push
xchg
ljmp
inc
mov
mov
or
jmp
jnp
inc
mov
add
dec
out
adc
push
jg
fsts
mov
sbb
dec
or
rcrl
in
in
dec
inc
mov
xor
push
and
out
push
dec
loopne
fdivl
xchg
push
pushf
push
fdiv
add
iret
mov
inc
lret
ja
cmp
js
out
fucomp
cmp
cmp
out
xchg
jle
jnp
int
pushf
add
sub
in
push
fstpt
scas
dec
push
mov
sbb
dec
ja
icebp
mov
ror
add
mov
shl
pop
rclb
mov
daa
mov
inc
mov
in
dec
mov
pop
xlat
stos
in
hlt
mov
xchg
les
es
sbb
cltd
data16
arpl
lcall
xchg
js
adc
push
lds
sbb
cmp
mov
bound
jns
push
out
xchg
pop
popa
je
xchg
pop
xor
xchg
cmp
push
out
sbbl
xchg
adc
sbb
ud1
sahf
adc
lds
adc
push
add
push
lea
aaa
and
lret
jnp
lcall
cwtl
popa
inc
cmpsl
push
ljmp
fs
ret
inc
xchg
xchg
outsb
xchg
mov
ss
inc
ret
adc
sbb
call
or
add
cwtl
sbb
pushf
int3
pop
pop
xchg
and
mov
jae
jle
mov
mov
add
cmp
pop
mov
jl
cmp
mov
lods
sbb
leave
fisubl
ret
cli
sbb
mov
mov
clc
imul
and
aam
and
xor
pushf
notb
enter
or
js
xor
sti
aad
or
or
mov
adc
inc
sbb
and
dec
std
mov
fsubrl
int
out
mov
cld
cld
out
push
scas
xchg
bound
lea
test
fcmove
dec
icebp
or
data16
sub
idiv
pop
imul
jge
cli
and
icebp
test
cmp
std
xor
fimull
cli
inc
jle
in
aad
push
xor
ljmp
mov
push
rcr
cwtl
and
pusha
jb
pop
push
sti
jl
das
call
or
dec
ret
leave
fsubp
pop
js
pop
test
sbb
cmc
xor
or
lea
js
gs
inc
dec
push
adc
mov
movsl
push
cmpl
pop
int
out
pop
cs
xchg
fwait
push
ljmp
push
call
or
cmpl
into
stos
cwtl
jg
push
in
dec
mov
jecxz
mov
cmc
lods
stos
imull
pop
pop
test
add
rorl
ret
xchg
loopne
das
jae
mov
mov
mul
lock
cmp
dec
or
rcl
stos
xchg
mov
sub
ss
mov
addr16
rcll
nop
and
std
cmpsb
cmp
or
add
ljmp
push
test
xchg
inc
test
mov
testb
ds
lret
push
fs
aaa
scas
int3
popw
orb
push
pop
pusha
sbb
repz
pusha
adc
orl
inc
mov
cmp
mov
xor
sub
movsb
adc
cmp
scas
sar
xchg
push
inc
sti
stc
add
mov
data16
out
lret
mov
aas
shlb
lock
inc
mov
ljmp
mov
mov
pop
push
repnz
cmp
sub
mov
pop
xor
xchg
testb
sbb
mov
fadds
fwait
dec
nop
insl
fdivr
and
adc
outsb
dec
cwtl
rcll
repz
cmp
adc
ret
stos
aam
out
sub
pop
inc
jne
pop
loope
pop
movsb
shr
nop
dec
lods
outsl
xor
push
rcr
adc
or
xchg
xor
jno
pushf
fldl
sub
dec
pop
xor
ret
mov
scas
mov
cmp
xchg
adc
lea
jge
pop
mull
in
and
xchg
icebp
ljmp
xor
stc
push
and
enter
adc
sub
out
scas
pusha
sbb
inc
insl
adc
pop
or
jbe
clc
sub
or
adc
fsubrl
in
mov
lods
in
insl
mov
lock
adc
out
cmp
lods
pushf
jmp
ja
add
notl
aad
and
push
adcb
rep
stc
xchg
outsb
das
inc
push
dec
test
icebp
xchg
cld
or
loopne
fprem1
fildl
insl
pop
nop
or
mov
sbb
xchg
hlt
sahf
outsl
daa
rcr
mov
sbb
inc
or
pushf
inc
adc
push
insb
cltd
mov
pop
pop
das
pop
add
mov
or
push
jb
pop
lahf
cmpsb
subl
jns
push
lea
or
add
sbb
ficoml
jno
inc
sbb
sbb
clc
outsl
xchg
enter
jge
pop
idivl
pop
mov
ret
lret
jns
mov
addb
mov
mov
mov
bound
mov
dec
nop
inc
mov
jp
push
fisubrl
xchg
faddl
add
xchg
je
subb
jmp
test
mov
pop
mov
jmp
cmp
scas
inc
aaa
not
mov
mov
pop
lods
ror
adc
subb
sub
xchg
aas
push
dec
mov
mov
sti
mov
lock
lods
incb
lds
sbb
data16
or
test
mov
xchg
push
jle
push
fucom
lret
xchg
cmp
cmc
lds
jbe
push
sbb
or
lahf
loope
mov
iret
or
lea
push
jge
mov
cmc
in
les
aam
dec
mov
popf
fisubrl
cmp
das
cltd
inc
ret
sbb
pop
inc
fldl
outsb
lahf
jp
movsb
inc
cmp
ret
push
loopne
mov
mov
sub
push
mov
xchg
jns
inc
pop
fmull
mov
pop
jae
mov
mov
xor
push
or
loope
lds
xchg
les
jbe
sbbl
scas
and
icebp
aam
adc
insb
dec
les
mov
incl
incb
mov
out
and
mov
mov
or
mov
fwait
psubb
sbb
mov
mov
loop
fcoml
lret
int
mov
cmp
mov
add
inc
lods
ds
or
inc
sub
imul
out
push
iret
aaa
jg
mov
out
and
fistpl
test
mov
enter
test
cmp
sbb
jne
pop
dec
mov
dec
cmp
cmc
adc
inc
xchg
push
inc
pushf
push
mov
cwtl
inc
hlt
mov
xchg
xchg
aad
jns
test
out
rsqrtps
ret
mov
iret
push
repz
pushf
inc
loope
pop
iret
and
xchg
lahf
lods
addb
jno
clc
mov
jne
stos
push
xcrypt-cbc
cmpsl
adc
fidivrl
and
sub
jle
add
jp
sbbb
jnp
dec
mov
loopne
or
jmp
ss
jge
cld
jbe
icebp
xor
imul
dec
loope
addr16
push
fcomi
add
mov
xchg
stc
dec
fs
pusha
test
or
lods
sbb
and
sub
in
lods
mov
clc
icebp
adc
loope
push
sub
push
pushf
scas
cwtl
inc
jecxz
sub
and
arpl
mov
sub
stc
adc
adc
cmp
xor
aad
mov
ja
xchg
sbb
cmp
sbb
sahf
movsb
addr16
test
mov
mov
pop
sub
popf
or
jle
and
js
sub
jle
sub
jb
out
push
mov
cltd
stos
cmpl
adc
sbb
cmpsl
and
fs
in
pop
and
mov
or
cmp
out
adc
into
pop
jp
sbb
out
or
test
xchg
mov
sbb
imul
sbb
jnp
and
and
cs
dec
and
and
jecxz
imul
scas
insl
repnz
adc
inc
inc
das
ds
xchg
pop
aaa
iret
cmp
xor
sub
inc
arpl
xchg
js
and
mov
mov
aad
xchg
push
cmpsl
push
adc
push
cltd
cmp
xchg
dec
fbld
add
jle
int
push
call
sbb
and
pop
scas
and
push
test
mov
jle
andb
mov
lods
jns
fcmovb
pop
loopne
jbe
mov
lahf
mov
inc
xlat
hlt
fs
lods
je
cmp
or
fidivs
jno
push
loope
les
lret
shlb
clc
mov
fisttpll
inc
and
les
jecxz
jmp
imul
push
pop
cmp
es
in
cmc
ret
es
mov
out
scas
test
add
adc
jae
loop
pop
jp
add
inc
mov
push
xlat
out
pop
cmp
xchg
call
mov
lcall
nop
and
cmpsl
sarl
hlt
xchg
aad
pop
ljmp
out
testb
ja
in
inc
inc
stc
mov
lret
xchg
aas
fs
inc
fadd
test
pushf
in
add
out
cs
lock
sbbb
and
rolb
mov
enter
xor
or
insl
jns
ljmp
bound
inc
into
xchg
mov
bnd
xor
lea
pusha
gs
push
ljmp
mov
lods
mov
iret
test
jbe
pop
sti
daa
enter
ret
cmp
mov
mov
aaa
mov
fmull
cmp
std
outsb
fwait
lods
out
pop
inc
stc
sub
lret
call
cwtl
nop
mov
popf
jecxz
stos
cmc
das
rcrb
aaa
mov
push
sahf
and
add
aaa
in
sbb
mov
xor
mov
cmp
inc
fidivrs
out
pop
push
lcall
sbb
subb
mov
dec
js
stos
out
mov
daa
lahf
out
inc
stos
outsb
xor
repz
sbb
jg
fstps
mov
jo
sub
imul
in
mov
cmc
iret
decl
sbb
add
pop
enter
jl
inc
and
loop
ds
stos
hlt
test
mov
inc
pop
mov
fs
mov
push
sub
outsb
pop
stos
call
out
sub
mov
jmp
lods
pop
push
xchg
xchg
xchg
je
cmp
jp
dec
popa
jns
stos
hlt
dec
xchg
aaa
sbb
jnp
pop
dec
adc
adc
int
outsl
je
xchg
ss
imul
and
add
mov
inc
loope
in
sbb
fadds
stc
pop
jns
lahf
xchg
cli
inc
lret
hlt
xor
mov
sub
call
shll
mov
xlat
pop
push
pop
and
adc
out
push
cltd
pop
push
iret
out
fstpt
or
mov
adc
popf
jg
repz
mov
dec
jmp
jae
pop
pop
scas
add
jg
push
imull
cmp
adc
rcl
add
and
jno
lret
jbe
scas
mov
jg
notb
inc
test
and
pushf
jo
dec
add
add
pop
xchg
sub
push
and
ljmp
xchg
or
and
push
nop
cld
loope
mov
adc
popf
pop
cmp
mov
push
xchg
mov
push
pop
pop
mov
cli
rep
sbb
rcll
fdivrs
cmp
add
inc
sbb
pop
rorb
in
cmpsl
or
repz
loop
sar
jns
insb
push
stos
stos
jle
int3
lock
call
sub
jnp
test
insl
dec
cmp
cmpsl
int
sbb
sahf
sub
inc
mov
filds
mov
shll
mov
cmp
dec
call
jecxz
push
and
sbb
add
xor
sbb
mov
mov
mov
aam
and
lds
icebp
dec
push
xchg
push
arpl
adc
cmc
xchg
jo
addr16
mov
push
cmpsl
mov
ret
or
rcll
hlt
mov
lahf
mov
add
and
push
jo
movsb
loop
xor
movsl
sub
test
mov
or
push
mov
mov
iret
lods
push
gs
cmpsl
cmp
mov
inc
xlat
pop
loopne
clc
ret
push
adc
cmp
pusha
fnstcw
sbb
and
xor
bswap
sbb
add
test
pop
xchg
cmp
inc
dec
xchg
imul
loopne
push
mov
xor
scas
loope
or
shrb
je
stos
aas
inc
and
mov
movsl
push
dec
mov
xor
test
ret
stos
in
add
pop
fsub
loop
jl
xchg
sub
xorb
sarb
xor
daa
hlt
jns,pt
xor
dec
in
mov
or
adc
mov
dec
fistl
jg
inc
test
mov
cmpsl
data16
dec
sbb
out
mov
push
cmp
pop
ret
jne
pop
cmpsl
sti
inc
in
and
and
cmp
test
in
inc
enter
out
jo
lret
add
loop
jnp
mov
sbb
dec
dec
dec
push
push
fdivr
cmp
sub
daa
and
test
loop
sub
add
pushf
sub
and
cli
aas
push
mov
jecxz
jg
add
xchg
andl
sub
pop
cmc
push
push
loope
test
int3
aaa
or
push
andb
mov
ss
aad
and
ss
dec
jecxz
and
pop
sub
jmp
filds
mov
out
jns
mov
xchg
negl
push
out
xchg
stos
ja
hlt
mov
aaa
cmp
fdiv
scas
sarb
pusha
sbb
aaa
xchg
stos
mov
push
fcmovnb
ss
push
push
mov
mov
movsb
dec
cmc
test
test
addr16
add
jae
in
mov
add
push
cld
jno
cmc
or
ror
add
cli
push
outsb
adc
aas
dec
scas
popf
sub
je
stos
sub
cmp
xor
mov
test
outsl
ret
insl
add
jnp
fmuls
mov
enter
push
cmp
cwtl
je
addr16
std
enter
les
insl
or
scas
mov
xchg
pop
es
std
mov
clc
call
adc
mov
hlt
int
scas
in
pusha
xchg
rcr
pop
push
jle
add
loope
or
jge
and
pop
aas
and
iret
jge
inc
mov
fdivrl
push
sbbl
cmp
sbb
ret
pop
pusha
lock
arpl
addr16
add
rorl
jg
adc
fstl
dec
sbb
xchg
mov
fistpl
sub
xor
inc
cmp
mov
inc
mov
inc
pusha
fsub
mov
and
sbb
add
adc
aas
or
push
jg
fwait
dec
mov
inc
std
push
mov
xchg
inc
and
inc
insl
mov
cmp
mov
shl
stc
cmp
pop
mov
movsl
mov
pop
and
push
gs
sbb
into
inc
lret
push
push
or
stos
js
es
ret
mov
pop
xor
inc
cmp
inc
std
out
cmpsl
xchg
outsl
dec
jbe
movsl
xor
loope
adc
shlb
mov
mov
dec
in
mov
loope
xlat
test
test
lods
lds
jbe
test
adc
je
in
dec
pop
and
pop
mov
cmp
std
stos
aad
rclb
mov
mov
cmpsb
push
and
push
pop
in
rolb
jb
jbe
xlat
push
inc
pop
sbbl
ret
bound
pop
xchg
out
pop
xchg
ja
adc
jle
mov
inc
das
ja
daa
stos
fmull
pusha
loopne
aad
out
jmp
jns
stc
xchg
jecxz
xchg
sbb
push
test
out
rorb
jb
out
xchg
int
xchg
iret
idivb
scas
inc
test
iret
lret
add
std
cmp
aas
fwait
mov
test
shll
lret
lods
lahf
test
push
sbb
mov
shll
dec
mov
fsubrl
dec
aas
pop
dec
adc
xor
lea
inc
xor
aaa
jp
pushf
xchg
sbb
sbb
mov
ret
arpl
notb
jmp
xor
aaa
sub
jge
push
or
test
sbb
in
or
icebp
orl
aam
sub
jb
popl
dec
push
lock
mov
shlb
popf
add
shlb
js
jb
popa
adc
mov
aas
jmp
inc
push
mov
push
out
ljmp
jle
shlb
jg
in
mov
aad
adc
lea
je
cmp
lods
mov
addr16
sub
sti
mov
jmp
inc
imul
ret
int
jge
push
xchg
fistps
and
ljmp
dec
nop
das
and
clc
ljmp
xchg
leave
push
xchg
jg
cwtl
mov
xchg
jg
aas
test
adc
out
adc
cmp
inc
sbb
stos
sub
xchg
adcl
xor
insb
inc
repnz
in
pop
pop
cli
sbb
cmp
adc
mov
cmp
out
adc
adcl
int
rcrl
lock
aaa
sub
pop
cmp
push
xchg
cmp
popf
push
lret
rcrb
mov
sub
mov
mov
lods
je
jns
mov
outsl
popf
sbb
xor
dec
mov
pop
pop
xor
mov
ret
loopne
addr16
ljmp
and
loop
and
out
mov
mov
cmc
mov
icebp
icebp
in
pop
jmp
sbb
dec
cmpsl
rorb
mov
xchg
in
pusha
andl
es
adc
popf
inc
fisubs
lahf
mov
out
out
xchg
test
daa
cmp
mov
outsb
dec
std
and
inc
xor
push
inc
ret
add
sub
jge
int3
xchg
jle
or
mov
mov
nop
scas
test
ss
push
fstps
fsincos
fs
cli
cmp
xchg
fnstenv
sub
sub
mov
jae
xor
sub
sbb
add
lret
push
sar
loop
push
scas
mov
jno
js
jns
sbb
addr16
adc
mov
cmpsb
es
les
push
rcrl
sbb
js
xor
lea
sbb
mov
inc
daa
in
enter
in
xchg
jb
rcl
aam
stc
loopne
gs
fs
xchg
loopne
adc
das
pop
xchg
js
js
or
ds
xchg
imul
repnz
iret
outsl
test
in
adc
dec
pop
insl
push
test
mov
bound
push
fs
fbld
or
in
push
sahf
enter
jle
xchg
sbb
shll
test
leave
insb
scas
jle
jns
shll
xchg
jmp
pop
sbb
lahf
gs
out
push
cmp
sub
lret
and
sbb
test
lods
ss
sbb
repz
push
scas
addr16
repnz
hlt
cmp
cld
ds
clc
pushf
xchg
or
shll
cld
mov
shl
pop
dec
call
push
lods
lcall
sub
jg
push
dec
mov
mov
add
jle
add
out
jge
pop
and
mov
int3
lods
xchg
cmp
dec
xchg
repz
inc
dec
adc
xlat
push
adcb
enter
cld
add
negb
inc
cmpsb
or
sub
cmpsl
jne
mov
or
test
dec
ljmp
mov
xor
das
shll
sub
rorb
dec
frstor
push
xchg
arpl
sub
inc
xorb
aaa
ret
inc
movsl
enter
es
cs
aas
cli
addr16
insb
js
push
add
fiaddl
enter
insb
ret
push
pusha
inc
push
push
lret
cmp
in
mov
xor
jb
pusha
mov
lods
dec
mov
dec
lcall
mov
adcb
out
xor
mov
dec
hlt
cltd
repz
cmp
lds
and
pop
cmp
adc
mov
jo
sbb
inc
pop
cli
les
mov
add
pusha
add
lahf
inc
mov
cmp
int3
xchg
insb
mov
loop
cmp
and
outsl
and
mov
cmpsb
mov
mov
aas
xor
and
cmpsl
jle
pushf
dec
mov
xor
or
ljmp
push
xchg
stos
fiadds
push
aaa
in
dec
aas
data16
pop
sub
adc
jle
cmp
sub
xchg
adc
push
lahf
shll
push
sbb
dec
mov
jae
int3
leave
mov
sub
adc
stc
xchg
test
and
test
pop
shlb
pushf
shll
or
xchg
mul
pop
das
push
add
iret
jmp
lahf
out
cmpsb
push
mov
dec
mov
add
fs
test
mov
adc
lock
fcomps
inc
das
subl
iret
repnz
or
sub
push
in
fidivl
mov
push
inc
add
xchg
pop
and
xor
nop
clc
test
ljmp
in
dec
or
jecxz
fcoms
adc
stos
xchg
xchg
add
jnp
int3
dec
jecxz
jne
push
mov
inc
inc
leave
pop
bswap
jo
mov
test
or
mov
inc
or
push
or
outsb
mov
cmp
jp
out
inc
adc
fwait
push
inc
popa
stos
pop
mov
sbb
sbb
push
and
popf
fidivl
or
shll
aaa
add
sbb
xchg
test
and
clc
sub
add
xor
aaa
nop
sbb
inc
push
jle
or
sub
adc
add
cltd
testl
or
lcall
mov
popa
xor
cltd
push
jg
in
dec
cmpsl
jl
movsl
ss
cld
mov
sbb
xlat
pusha
cmp
mov
lods
lret
int3
shll
roll
mov
shlb
pop
stos
add
or
pushf
das
sahf
mov
adc
pop
adc
inc
shr
cmp
xchg
or
sbb
lea
sub
push
xor
pop
dec
jno
or
test
pop
fwait
xor
es
pop
dec
pop
repz
jno
mov
ficoml
cmp
loop
frstor
popa
push
inc
mov
int
sub
jecxz
cmc
push
lret
pop
insl
out
jns
xchg
sub
aaa
jno
cmpsb
jnp
fldenv
scas
out
xchg
sbb
cmp
std
xchg
cmp
mov
inc
pop
dec
ret
jg
stos
sbbb
sbb
cmp
push
insl
push
cli
inc
call
sahf
lea
leave
mov
mov
adc
xchg
push
and
dec
mov
test
and
pushf
test
cmp
mov
or
mov
mov
and
or
lock
and
pop
and
mov
mov
adcl
push
or
pusha
hlt
sbb
xchg
adc
lret
mov
cmpsb
mov
and
ss
and
jecxz
imul
nop
enter
mov
mov
in
wrmsr
inc
mov
push
nop
or
cli
fimull
mov
inc
sub
outsl
sub
xchg
push
inc
stos
pop
xor
or
push
stos
repnz
push
loope
jmp
mov
cmp
mov
sar
bnd
movl
add
adc
sbb
fldenv
repnz
pusha
pop
ljmp
or
outsb
mov
jno
cmp
jae
lret
adc
or
push
or
mov
lcall
fadd
pop
mov
movsl
mov
mov
mov
jno
repz
cmp
mov
xchg
ret
aam
dec
inc
test
xchg
sti
rcll
fdiv
bound
aam
sti
arpl
mov
add
add
jne
adc
inc
into
mov
and
mov
adc
and
dec
arpl
add
pop
add
icebp
filds
inc
push
lret
adc
testb
imull
pushf
dec
popf
fists
mov
mov
and
sbb
xchg
mov
cltd
in
mov
push
add
or
in
mov
divl
hlt
int
es
call
test
in
mov
mov
pop
mov
fwait
cmp
xorb
lods
pop
scas
adc
pop
sub
dec
fs
inc
mov
cmp
addb
push
cltd
ficompl
pusha
mov
mov
cmp
or
or
or
lcall
scas
xor
pop
lret
push
jae
inc
lcall
xchg
xchg
jo
add
test
or
mov
maskmovq
divl
test
cmpsb
xor
shlb
out
pusha
lods
ss
ljmp
pop
movsl
cmc
dec
dec
xchg
add
xor
arpl
push
sbb
mov
into
jne
pop
sub
movsl
lods
adc
test
sbb
inc
push
jae
add
loopne
in
fidivl
cmpsb
daa
lea
inc
test
or
jno
mov
ss
add
mov
pop
scas
js
aas
mov
adc
test
sbb
mov
test
shl
hlt
cmpsb
pop
sbb
inc
ss
lahf
es
jg
xchg
mov
nop
arpl
cmpb
xlat
pop
jmp
ja
lret
jbe,pn
lods
jbe
popf
add
jno
pusha
add
xor
or
xchg
adc
jne
test
jae
adc
inc
stos
shlb
movsb
test
sbb
inc
jmp
les
push
mov
dec
jae
loope
sbbb
jno
sbb
ss
jmp
imul
mov
and
jnp
mov
insb
ds
rcr
movsl
xchg
scas
xlat
mov
lock
addr16
loope
fimull
fsubrl
mov
or
push
jo
imul
xor
out
jp
add
add
sbb
subl
push
mov
aas
push
adc
adc
test
adc
and
push
ret
inc
inc
cmp
sbb
mov
lods
pop
xchg
es
and
lret
adc
xor
mov
mov
inc
push
or
fcom
sbb
mov
cmpsl
andl
and
call
hlt
inc
sbb
ljmp
stos
sbb
push
pop
xchg
dec
sarb
ljmp
mov
xor
or
stos
sbb
xchg
dec
inc
std
out
shrb
cli
fisubs
in
js
lds
popf
pop
orb
and
jns
gs
cmpsb
jb
pop
ss
outsb
xchg
inc
addr16
inc
outsl
cmp
dec
and
push
fcompl
mov
xor
cmpsb
es
push
in
dec
int
loope
flds
mov
mov
mov
loopne
push
cmpps
stos
loope
ret
inc
push
das
cli
cmpsb
leave
push
push
orb
add
cmpsb
xchg
sub
mov
xchg
and
xor
dec
jno
mov
dec
mov
rolb
stos
in
cmp
cld
sbb
mov
cmp
sbb
in
jmp
pop
mov
mov
std
incb
test
mov
clc
xchg
fists
mov
cwtl
dec
ret
mov
pop
cmp
cmp
pop
sub
mov
movsb
xor
sub
cwtl
mov
pop
pop
int3
and
jl
push
cld
xchg
sbb
loop
and
add
fwait
dec
lods
cmp
sub
mov
in
sub
xor
and
dec
sub
ret
sahf
sahf
icebp
push
mov
mov
lret
mov
mov
shrb
loopne
push
stos
mov
jmp
pop
jp
cmpsl
or
paddw
xchg
cwtl
scas
ss
xchg
cmpb
aaa
add
jbe
push
inc
fmuls
stos
and
repz
push
orb
sub
push
add
xor
pushf
lahf
and
mov
cmpsb
add
ljmp
and
mov
lds
add
xor
pop
mov
fdivs
mov
add
push
mov
or
mov
xchg
bound
jg
inc
outsl
dec
ja
loop
add
xor
inc
xor
cmp
lods
push
dec
and
rcrl
mov
jb
dec
idivl
jb
jle
sbb
push
stc
or
sbb
jae
clc
push
mov
mov
aas
pop
dec
dec
cwtl
lods
push
mov
cli
divl
fdivl
sbb
cmpsl
lods
nop
add
or
pop
mov
mov
sub
push
dec
mov
and
jmp
repnz
ficoms
push
add
fwait
or
repz
bound
lahf
inc
jmp
je
mov
xchg
mov
push
or
cmp
idivb
lret
enter
or
dec
sbb
rorb
andl
or
aam
loop
or
movsb
lods
dec
push
pop
aad
popf
mov
mov
inc
adc
sbb
mov
lods
outsl
lcall
pop
add
adc
xor
push
movsb
mov
jo
xor
cmp
das
mov
lock
fs
sbb
and
xchg
pop
sub
cmc
push
mov
mov
mov
jbe
jb
push
jbe
jno
das
mov
push
repnz
cmp
imul
cmp
pop
nop
out
dec
inc
push
fisubl
rorl
jecxz
push
ret
adc
outsb
xor
xchg
add
lcall
xchg
insb
xchg
mov
jns
lods
pushf
sbb
enter
mov
mov
fmul
cmp
and
in
and
push
mov
mov
popa
sub
dec
mov
jae
inc
jnp
and
adc
inc
mov
push
and
es
das
cmp
pop
movsb
dec
mov
sub
dec
mov
dec
cltd
nop
mov
das
mov
inc
push
dec
push
sub
jbe
pop
push
mov
xchg
ret
cs
lahf
fwait
cli
jns
push
dec
mov
push
xlat
xor
neg
xor
pop
imul
or
icebp
lcall
adc
add
in
in
cs
fimull
shr
xchg
mov
stos
stos
orl
outsb
fcmovnb
mov
dec
sbb
les
pop
scas
nop
dec
push
sti
ja
bound
lea
xor
add
dec
cwtl
xchg
mov
mov
imul
mov
fisttps
aas
or
data16
push
mov
fwait
cwtl
das
push
jno
adc
dec
scas
sti
sahf
xor
xlat
aas
or
movsl
andl
sub
outsl
mov
mov
mov
inc
std
add
lret
jb
jp
add
cmp
int3
ret
lods
fisubrs
mov
sub
aam
mov
jno
xor
clc
iret
int
lds
xor
add
sub
mov
push
fistpll
jmp
sahf
mov
push
dec
fisubrl
shl
jnp
pusha
sbb
addr16
jb
and
sahf
inc
cmp
inc
mov
arpl
jae
imulb
or
in
enter
inc
add
dec
xchg
insl
rcl
fldln2
inc
ficoml
add
or
sub
mov
cmp
push
push
and
pop
les
jp
popa
jnp
mov
mov
fdiv
add
insl
cmp
fldcw
jae
jge
dec
sub
mov
fstpl
lods
pop
data16
sbb
insb
aam
js
mov
cwtl
add
mov
inc
and
insb
xchg
and
cmc
or
xchg
lods
adcb
mov
insb
fbstp
das
ficoms
addl
in
add
adc
sbb
pushl
cmpsb
adc
mov
popf
outsb
pop
addl
xorl
bound
inc
mov
jmp
push
imul
and
sub
lcall
bound
xchg
fcoml
xor
ljmp
cltd
sti
mov
loopne
cmp
lcall
jmp
mov
push
addb
test
dec
lods
mov
dec
ja
inc
cmpsl
jns
mov
adcb
sarl
lahf
mov
dec
add
xlat
cs
into
sub
jle
movsl
sti
rcll
xor
adc
jmp
add
movsb
sti
mov
dec
ret
stos
inc
inc
push
and
inc
sub
xchg
dec
inc
lock
xchg
pop
push
adcb
push
pop
adc
test
clc
sub
jno
scas
lcall
fsubrp
cld
cmp
popl
shll
jno
into
cmpsb
jge
mov
mov
addb
fcoms
insl
movl
jge
mov
push
push
test
adc
push
mov
inc
mov
xchg
xor
jno
das
adc
mov
jno
cmp
stos
out
sbb
fdiv
lret
push
in
jle
mov
mov
cld
cwtl
es
je
pop
push
enter
jb
imul
jnp
cwtl
or
dec
push
push
add
adc
inc
ds
dec
test
pushf
lahf
add
aad
int
iret
aaa
push
imul
pop
decl
in
mov
dec
gs
mov
clc
std
loop
add
or
cmpb
out
xor
test
xor
or
repz
or
pop
or
or
and
lods
pop
inc
add
arpl
pop
ret
adc
push
out
add
pop
cmp
xlat
add
outsl
and
xor
mov
outsb
loope
inc
jno
mov
fmuls
rcl
mov
pop
dec
fs
jmp
mov
in
cs
inc
repnz
xchg
shrb
sbb
fldenv
loope
loopne
stos
push
testl
xchg
xor
xor
and
int3
push
test
js
bound
push
dec
push
shll
pop
jnp
add
aam
add
or
adc
and
push
test
jg
insl
sub
neg
data16
rcl
cmp
and
adc
or
nop
add
jb
inc
push
shlb
insw
in
jne
and
mov
or
or
lret
mov
push
aaa
std
push
fadds
adc
aaa
and
loop
sub
bound
dec
outsl
dec
mov
mov
stos
cli
out
lret
jbe
sbb
js
push
js
dec
mov
shlb
mov
ds
push
movsl
fnstcw
das
stos
pusha
hlt
int3
orl
pop
gs
sub
dec
adc
test
inc
in
inc
cmp
into
mov
sbb
pop
fsubs
push
out
je
add
daa
daa
loop
push
inc
sbb
sub
insl
adc
das
cmpsl
mov
mov
mov
sti
ror
mov
xlat
adc
dec
popf
xchg
incl
out
push
or
fcmovnu
js
cld
mov
arpl
push
test
pop
fdivs
add
mov
jp
adc
fcompl
mov
mov
adc
mov
dec
mov
adc
lcall
jne
pop
lea
outsl
fdivp
push
jge
and
cmpsb
sub
imul
leave
shll
int
mov
lock
popf
sti
dec
shld
mov
xchg
std
push
and
pop
adc
jecxz
mov
je
ds
xchg
test
loope
les
mov
inc
sub
fmul
ljmp
scas
jns
xchg
data16
mov
rcrl
out
inc
mov
mov
pop
addl
icebp
ss
push
and
div
xor
aaa
sub
or
mov
xlat
sub
fsubl
xor
push
add
push
inc
ds
push
jne
xchg
sub
cmp
out
loop
mov
outsb
inc
bound
fmull
adc
lcall
mov
xchg
int
push
xchg
stc
shlb
pop
ret
mov
subb
sahf
out
ljmp
dec
inc
ljmp
loope
mov
pop
cmp
jo
adc
dec
cmc
mov
xchg
or
push
dec
inc
or
jno
mov
mov
or
xlat
cltd
dec
jae
int3
lret
into
jne
mov
push
icebp
xchg
or
test
andl
pop
ss
pusha
fwait
xor
ss
xchg
push
adc
arpl
sub
jl
push
repz
test
and
cmp
clc
into
setg
mov
int3
imul
in
xor
enter
mov
fisttps
pop
popa
lcall
inc
in
repz
iret
mov
mov
xchg
mov
adc
push
jbe
cmc
bound
add
pop
cmpsl
adc
or
imul
scas
repnz
outsl
inc
in
jg
lahf
mov
or
scas
sub
dec
xor
and
leave
cmp
dec
jae
sub
sbb
or
mov
push
jne
xlat
jae
jl
mov
pop
addr16
and
rcr
xor
add
ja
clc
clc
xchg
rclb
xchg
pop
movsl
xor
push
or
pop
pop
cmp
arpl
rcrl
jae
in
add
xchg
sub
sbb
push
cltd
hlt
lods
inc
pop
insl
dec
in
push
ret
push
sbb
lret
pop
das
jns
dec
adc
pop
pop
xor
scas
or
jmp
jmp
into
inc
loopne,pn
divb
hlt
sub
add
or
xchg
ljmp
insb
out
loope
mov
adc
push
adc
fwait
or
jb
dec
mov
out
push
aam
adc
cltd
fnsave
popf
mov
xor
cmc
xor
push
in
cmpsl
fwait
cmp
mov
call
mov
fidivl
cwtl
aad
xchg
push
test
mov
lock
pop
xchg
scas
hlt
enter
pop
mov
int
sub
jne
xlat
push
leave
xlat
test
inc
aas
inc
xchg
out
dec
pop
inc
jecxz
sub
addr16
push
cmpsl
push
repz
jp
jo
fistpl
dec
cmp
ret
add
or
popa
sbb
sti
testl
pop
mov
xor
jno
mov
fcoms
xor
cmp
xor
ja
adc
inc
rolb
xchg
or
ja
inc
stos
lods
enter
add
mov
lock
push
jno
int3
add
mov
and
gs
movsb
jno
loopne
inc
cmpsl
cs
sbb
inc
ret
adc
jg
dec
sub
cmp
xchg
lods
enter
sub
push
das
mov
jno
and
mov
and
and
adc
push
cmp
push
xchg
adc
xorl
push
sub
ret
push
in
push
push
and
int
and
loop
pop
inc
fmulp
sar
test
cmp
fisttpl
outsl
enter
inc
jne
lock
xlat
adc
jg
push
and
pop
jnp
pop
pop
int
shll
add
jmp
xchg
and
rclb
lods
lret
mov
mov
push
outsl
pop
jo
popf
clc
cmp
aas
sbb
xlat
add
data16
test
test
xor
jg
imul
aaa
inc
pop
and
fprem
cmp
jle
or
les
test
add
cs
xor
xor
xchg
sbb
xchg
dec
jle
and
fisttpl
out
and
ret
mov
xor
mov
pcmpeqw
xor
xor
mov
push
adc
pop
jae
mov
or
shll
testl
push
mov
adc
or
fldl
cmpb
into
add
jle
and
popa
ss
clc
add
sbb
lods
imul
movsb
shrl
arpl
push
jns
lret
or
out
inc
jne
adc
pop
pop
xchg
sbb
nop
jbe
loop
dec
lret
fwait
push
or
out
lahf
loopne
pop
outsb
repnz
dec
fucom
lods
sbb
cltd
sub
shll
leave
dec
fmul
es
sbb
sub
outsb
out
fists
fstl
xchg
lret
sbb
inc
gs
mov
jg
pop
lahf
pop
adc
fistpll
nop
dec
jecxz
lods
aad
in
push
popf
pop
or
out
mov
dec
loopne
xchg
xor
stc
push
fistl
fiaddl
inc
jecxz
int
push
inc
cld
mov
xchg
dec
pushf
and
add
dec
in
ss
xor
cmp
mov
jnp
cmc
sub
flds
dec
cli
xchg
push
jb
loope
rorl
negb
les
fwait
shlb
cmp
xchg
das
xor
dec
cmpb
jp
fisubs
dec
pop
jecxz
ja
test
inc
movsb
dec
inc
mov
repnz
shlb
mov
xor
icebp
mov
popf
add
js
xchg
jbe
xchg
pop
aam
loopne
out
mov
xchg
xchg
jge
pop
and
mov
push
cmpl
andl
stc
jae
mov
neg
xchg
xchg
xchg
add
test
mov
ja
jle
push
adc
fcmovbe
or
add
jmp
mov
inc
xor
fsubs
fldl2t
add
outsl
fdivrs
pop
movsb
jno
gs
jg
inc
in
push
fcomi
mov
cld
mov
jbe
xor
leave
cmpsl
outsb
push
push
inc
cmc
dec
inc
mov
incb
and
cmc
mov
ret
cs
mov
jae
sbb
fidivrs
inc
data16
or
xchg
js
mov
push
faddl
and
xor
add
lea
cmp
shlb
pop
push
sub
mov
test
dec
adc
cmpsl
jge
sub
scas
int3
inc
jp
sahf
ret
orl
push
ret
lods
and
xchg
lcall
loope
mov
lcall
call
mov
jl
cmp
mov
lret
cmp
out
call
aam
push
mov
fisttpll
mov
ljmp
test
push
aaa
dec
jle
lea
nop
leave
and
push
xlat
or
xor
lods
iret
add
pop
imul
inc
xchg
rol
jb
adc
popa
popf
xchg
into
cmp
fcomp
cmovle
testb
ret
dec
nop
or
test
imul
jo
and
jp
stc
jl
sbb
jg
mov
rcl
mov
out
movl
add
mov
or
roll
addb
dec
ret
dec
adc
cmp
lret
pop
cmp
outsl
inc
mov
aas
pop
rorl
int3
pop
and
push
ljmp
add
dec
cltd
sub
addr16
test
aas
xchg
fxrstor
pushf
add
xchg
cmpsb
and
xor
lea
ja
in
mov
mov
cmp
jns
lahf
mov
mov
rcrb
xchg
aam
mov
mov
gs
mov
adc
cmpsl
pop
mov
xor
dec
xchg
push
out
push
xchg
jbe
int
negb
les
mov
aam
inc
dec
push
stos
in
push
jne
int
das
adc
clc
and
or
mov
out
movsl
or
js
daa
inc
xor
stc
iret
ds
sub
movsl
sub
lods
jecxz
inc
popl
xchg
into
fcoms
inc
inc
pop
bound
stc
xor
scas
xchg
mov
cwtl
and
nop
in
ljmp
sbb
mov
xchg
sub
in
mov
pop
push
or
dec
out
or
test
sbb
cmp
std
mov
xchg
dec
in
mov
add
xor
jmp
mov
jae
jp
pop
popf
sub
aam
push
xchg
inc
stos
xor
fmul
push
or
shl
fiadds
pop
lret
scas
mov
lret
push
add
dec
xlat
inc
rclb
in
lods
scas
outsb
in
xor
daa
ds
push
in
jle
fcmove
add
dec
jmp
add
scas
xchg
cmp
call
popa
inc
lret
data16
mov
mov
out
les
std
mov
neg
mov
incl
sbb
add
jmp
and
jno
mov
loope
push
cmp
std
stc
jo
cmp
lret
and
ss
jg
or
enter
push
pushf
ja
gs
addb
sbb
dec
fmull
rcr
xchg
add
lret
lods
dec
cltd
out
dec
iret
mov
lcall
mov
xor
movsl
sbb
or
sub
scas
or
or
lcall
iret
dec
pop
lahf
pop
mull
ret
in
jge
mov
add
loop
dec
sub
xchg
out
or
rcll
cmp
imul
repnz
xchg
into
ret
roll
aaa
xchg
mov
fcmovb
mov
cwtl
lcall
bound
xor
mov
leave
xchg
xchg
sbb
subl
popa
jno
movsb
push
ret
sti
fistps
mov
scas
mov
mov
nop
movsb
xchg
outsb
add
and
test
xchg
cmc
dec
push
xchg
jmp
cmpsb
and
lahf
add
icebp
or
outsb
ficoml
inc
imul
mov
fs
jnp
push
fwait
aad
outsb
dec
aam
pop
bound
test
sbb
add
sub
jmp
lock
in
push
xor
fists
ret
cs
xchg
out
jno
aaa
or
test
mov
push
adc
lock
aaa
and
lret
aad
mov
push
rcrl
call
lock
push
incl
xchg
sbb
stc
push
fs
popa
xchg
scas
decl
pusha
in
loop
daa
pop
loope
push
xchg
add
bound
mov
ret
out
jp
fdivrl
mov
int
fsts
sbb
sub
sbb
sub
xchg
test
clc
sbb
sbb
ds
cld
loopne
insl
outsl
pop
aad
or
mov
push
jmp
cs
cmpsl
push
test
sub
add
fists
testl
push
pop
mov
cld
jmp
pop
xabort
sti
dec
and
push
mov
push
push
icebp
ds
xor
int
jg
adcb
cld
adc
sbb
xchg
mov
xor
fcomip
lret
outsb
ds
push
fdivrs
xor
xlat
mov
mov
mov
fistps
adc
or
add
dec
repnz
ror
sbb
mov
cmp
push
into
jo
imul
idiv
inc
xchg
int3
inc
in
push
xchg
adc
rolb
mov
out
lahf
sub
stc
xlat
repnz
mov
jae
roll
daa
or
mov
push
mov
pop
mov
lds
push
inc
and
in
mov
mov
orl
cld
fcmovbe
pop
dec
inc
fsubl
test
mov
pushf
pop
add
stos
stos
fdivl
mov
add
shr
or
loopne
dec
ficoml
data16
push
fildll
data16
jl
or
inc
mov
lret
loop
out
xor
mov
mov
mov
cmp
mov
addl
add
lret
pop
cmp
bnd
sbb
push
push
movsl
mov
adc
stos
stc
mov
rol
loope
stc
jne
inc
and
adc
push
and
pop
arpl
jle
inc
mov
cmpsl
enter
xor
or
add
mov
and
ret
jp
addl
add
pop
popf
push
lods
je
subb
pop
xchg
sti
les
xchg
loopne
dec
inc
add
push
orl
cwtl
jnp
mov
stc
in
jnp
fs
xchg
jne
gs
sub
jmp
fmull
cwtl
out
cmp
xchg
jle
dec
xchg
in
jne
rcr
pop
jmp
in
lods
jl
mov
mov
pusha
mov
dec
inc
orl
adc
jbe
icebp
cmp
hlt
scas
inc
subb
mov
jg
arpl
add
jecxz
adc
pop
mov
call
and
cmpsb
add
mov
adc
out
aam
loope
into
xchg
inc
int3
cmpsb
mov
stc
ret
add
sub
stos
adc
push
enter
jbe
loopne
push
sbb
movsl
nop
push
xchg
or
outsb
push
imul
dec
imul
mov
push
jo
fwait
lds
in
dec
stc
pop
xchg
rclb
pop
jg
cmc
push
mov
inc
mov
cmc
rcll
sarb
xor
imul
mov
xchg
stc
lock
addb
ljmp
pop
ret
popa
sub
or
dec
add
jne
and
xlat
adcl
test
in
or
mov
adc
push
enter
lods
adc
lea
js
in
pop
push
mov
aaa
mov
jnp
out
pop
push
push
mov
inc
add
add
imul
mov
xorb
fisubrs
xor
ja
adc
nop
fdivr
add
inc
ret
xchg
sti
das
xchg
hlt
out
jns
shll
mov
out
or
call
mov
mov
jmp
cmp
dec
scas
push
mov
mov
sahf
and
dec
sbb
mov
mov
mov
xor
mov
cmp
xchg
pop
adc
inc
rolb
aad
jmp
int
jmp
add
int3
cmpsb
les
scas
stos
sbb
pop
daa
and
orl
pop
sub
pop
mov
xor
xor
mov
popf
loopne
pop
mov
into
mov
and
jl
push
int
and
and
andb
mov
adc
add
es
icebp
sbb
dec
inc
sbb
add
xchg
push
lret
into
pushf
jbe
xchg
push
movsl
push
loope
scas
or
fcmovnu
fs
mov
in
pop
stos
mov
jmp
test
and
mov
pop
inc
inc
pushf
sbb
std
daa
test
cmpsb
push
mov
mov
pop
xor
out
pop
mov
mov
cld
repz
rol
xchg
fwait
arpl
sbb
inc
jmp
loop
xchg
lret
imul
cmp
sub
xchg
pusha
cmp
pusha
or
scas
scas
xchg
inc
mov
jle
les
jbe
fstp
and
jge
cwtl
shll
sahf
cltd
add
out
dec
sub
push
mov
adc
or
pop
pop
xchg
sub
aam
mov
test
stos
and
stc
ja
or
bound
cmp
sub
inc
inc
cmp
pop
out
ss
loop
cmp
movsl
jo
push
faddl
sbb
or
xor
sub
mov
pop
sub
xchg
lods
mov
aas
adc
mov
mov
jo
cmp
dec
icebp
in
xor
jno
dec
rcl
lds
into
push
outsb
stc
push
cmp
ss
loop
outsb
cs
sbb
test
or
cli
leave
cmp
ret
push
mov
lcall
call
add
and
sahf
adc
push
cmpsb
inc
cmpsl
sbb
add
je
dec
and
mov
pop
ljmp
lahf
nop
cli
and
outsl
sahf
and
jbe
mov
xchg
movsb
cltd
call
cmpb
adc
lahf
or
jbe
xchg
lock
rcll
adc
outsb
sahf
and
shll
loopne
xchg
ret
ja
shr
adcb
leavew
pop
adc
cmp
and
out
sbb
repz
in
rorb
bound
jl
popa
ja
insb
push
clc
or
pop
jg
pop
jno
sbb
jb
out
inc
mov
stc
clc
loop
test
fs
loop
inc
xchg
bound
test
mov
outsl
sub
dec
push
ljmp
mov
je
gs
add
aam
mov
popf
xor
mov
cmpsb
sbb
add
push
out
stc
js
lret
pop
pop
subl
pop
fsubr
cmp
mov
inc
mov
dec
lahf
outsl
and
sarb
cmpsl
inc
repz
lret
mov
xchg
add
adc
ds
jb
xchg
repnz
mov
mov
ds
fldl
sbb
repnz
mov
jno
pop
outsl
test
and
pusha
scas
in
jnp
lods
jbe
jecxz
pusha
in
sub
push
jg
aad
jecxz
nop
or
inc
pushf
push
sub
add
push
dec
cmpsb
mov
insb
inc
inc
std
insl
or
lret
pop
mov
adc
in
out
xchg
fs
sub
stc
mov
out
xor
adc
cld
in
sub
jmp
sbb
loope
and
xor
ljmp
in
das
hlt
test
mov
sbb
sti
or
or
lahf
in
push
mov
push
mov
pop
nop
iret
push
sbb
test
dec
cmpb
add
shl
push
loopne
push
es
rcll
imul
lea
cmpsl
inc
cmp
lahf
data16
cli
pop
sbb
mov
jmp
sbb
push
inc
sbb
dec
jb
loope
sbb
sub
sbb
pop
ret
rorb
xchg
movsb
sbb
in
adc
loop
leave
jb
mov
fcomps
jl
sti
insb
cld
negb
mov
xor
sbb
mov
lods
shll
cmp
mov
loope
cmp
ror
add
mov
das
or
icebp
mov
mov
mov
push
loop
cmp
mov
mov
and
xchg
mov
inc
pop
cmp
inc
fisubs
je
mov
loope
into
sbbb
jmp
hlt
adc
sbb
jge
out
xor
sub
cs
dec
pop
fwait
mov
adc
cmp
ds
cltd
or
lahf
fs
shlb
cmp
add
mov
or
inc
mov
mov
jne
lret
imul
mov
mov
insb
mov
pop
inc
and
or
sti
loopne
push
pop
call
and
mov
cmp
push
popa
lret
jbe
xchg
loope
ds
test
enter
dec
push
nop
jl
mov
mov
sub
adc
inc
xor
and
mov
inc
cli
add
pop
and
xchg
adc
mov
fildll
hlt
mov
test
xchg
pop
loopne
dec
xor
rcrb
les
in
je
jbe
dec
dec
imul
sub
cmp
pop
cmp
int3
and
and
hlt
mov
inc
xor
sbb
pop
inc
aad
stos
cltd
push
push
mov
xchg
loopne
es
pusha
inc
dec
lods
outsb
lods
dec
mov
movsl
clc
imul
push
push
in
fisubrl
daa
enter
inc
xlat
jmp
aam
out
mov
adc
push
jae
dec
mov
inc
cmp
sbb
lcall
je
mov
es
adc
pop
enter
push
mov
jmp
push
adcl
loop
pop
popf
sbb
pop
test
add
fwait
popf
push
dec
je
dec
and
inc
pop
loopne
xchg
adc
mov
and
fisubrs
and
push
fidivrl
repnz
ret
adc
cmp
mov
jne
or
insb
and
dec
mov
xchg
scas
out
inc
mov
jns
xchg
xorl
inc
ljmp
dec
insl
mov
shrl
jb
ljmp
fsubs
add
jns
dec
mov
nop
sbb
mov
sub
xchg
bound
data16
pop
aas
push
ja
out
int3
aad
mov
dec
xchg
cmp
enter
data16
lret
xchg
shll
imul
decb
into
int
mov
ret
lock
pop
in
mov
sub
sub
push
xor
or
subb
cmp
mulb
or
fs
inc
mov
lret
rcrl
shrl
sub
ja
mov
testb
loopne
out
xor
dec
jne
das
popl
ret
sub
movsb
cli
sbb
or
mov
mov
push
pushf
jb
icebp
mov
cmp
and
lods
cmpsb
cwtl
pop
fldln2
ret
mov
mov
ss
repz
and
and
xchg
inc
xchg
loop
rclb
sti
lcall
data16
add
out
jbe
loope
pop
dec
xchg
push
push
mov
push
das
pop
push
roll
ljmp
jle
inc
loop
cmp
rorl
out
lcall
mov
jns
lods
sti
arpl
jp
inc
add
mov
jmp
add
aas
or
cltd
lods
gs
mov
andb
lods
ss
mov
jle
lock
sbb
fsubrs
and
stc
dec
popl
push
add
cmp
loope
inc
cltd
ljmp
xchg
int
sti
cmp
mov
pop
cltd
into
mov
sti
mov
insl
cmp
loopne
fmuls
jo
xchg
notl
xor
mov
out
and
inc
cs
imull
shll
xchg
pop
jmp
push
movsl
push
pop
or
push
jns
jle,pn
jge
or
pop
cwtl
pop
enter
xor
xchg
and
cmp
xchg
cmpsb
mov
cli
pop
clc
push
mov
mov
mov
jecxz
sub
sbb
xchg
loop
popa
rclb
ja
cmp
arpl
cld
or
rcl
les
iret
xor
cmpsl
mov
inc
adc
xchg
aas
cmp
mov
daa
mov
das
scas
and
scas
outsb
fcom
je
pusha
jl
pushf
pop
popf
mov
jl
incl
mov
ret
or
lret
push
arpl
or
push
xchg
mov
xlat
sub
or
and
bound
movsl
adc
mov
lret
add
add
das
das
orl
lahf
int
ficoml
dec
push
in
cmp
in
inc
pop
xor
and
in
mov
rclb
ficoml
adc
jb
mov
repz
test
cltd
xor
out
or
sbbl
cltd
sbb
cmovg
xor
mov
jns
inc
add
sbb
dec
and
loopne
mov
dec
stos
push
and
jg
jle
cmpsb
sahf
or
cmp
js
dec
cld
xchg
pop
jg
fdivrl
xor
jbe
aad
popa
jmp
jnp
jae
ljmp
and
adc
in
mov
lods
pop
xchg
in
fdivrl
sbb
push
sub
repnz
testb
paddsb
sub
daa
dec
imul
mov
add
mov
cmc
in
ret
cltd
lret
pop
jmp
repnz
shl
or
ljmp
sub
mov
icebp
bound
mov
gs
cmp
ljmp
xor
fcoms
fbstp
mov
mov
iret
add
mov
mov
pop
repnz
sub
mov
xchg
in
scas
sbb
mov
out
aad
jo
pop
inc
std
mov
mov
mov
ljmp
mov
leave
mov
add
cmp
add
lock
in
ds
out
sahf
jnp
push
std
movsb
js
loope
insl
iret
out
imul
aam
mov
test
push
leave
lcall
jmp
lret
inc
enter
stc
leave
dec
sbb
pop
ja
aam
lods
add
insl
negl
lret
adc
inc
ds
das
loope
ficoms
in
mov
mov
cmp
adc
mov
add
ret
out
in
pop
enter
outsb
xor
pusha
pop
adc
enter
pop
adc
inc
out
leave
mov
mov
fcomps
pushf
loop
mov
je
pop
mov
mov
sbb
or
into
outsb
aam
jmp
sti
add
pop
loopne
fidivrl
xchg
or
cmp
movsb
and
jns
push
xchg
mov
inc
mov
mov
lret
shlb
cld
test
jg
mov
dec
cmpsb
loope
xor
sbb
push
aas
add
mov
pusha
sub
sub
sub
push
outsl
test
sbb
sbb
add
stc
aam
js
aas
dec
inc
xor
pop
xor
loopne
mov
scas
and
jl
aas
cmc
mov
mov
push
dec
or
mov
or
pushf
xchg
inc
addr16
outsl
xchg
sbb
outsl
adc
fnstenv
repnz
sbb
jg
jae
mov
out
adc
mov
lods
sub
pusha
and
lods
in
and
sarl
xchg
fistpll
loop
in
movsb
jno
fdivp
sahf
mov
or
rclb
mov
and
sbb
subl
inc
sub
or
dec
out
cmp
sub
loop
neg
xor
or
into
xor
cld
outsl
inc
adc
cltd
addr16
test
cmp
lods
jne
loop
ficoms
lods
leave
xchg
aam
cmpsl
xchg
daa
call
cmpsb
mov
neg
mov
aad
lret
mov
std
pop
mov
cwtl
es
insl
leave
dec
add
jp
or
mov
adc
mov
dec
pop
pop
mov
mov
adcb
dec
addb
ljmp
ret
inc
je
xchg
std
rol
arpl
inc
clc
and
fxch
mov
xchg
test
mov
lcall
mov
pop
cld
aad
dec
mov
popa
fwait
int
xchg
lods
call
xchg
mov
pop
out
adc
hlt
cwtl
add
mov
jmp
addb
mov
loopne
mov
push
sbb
inc
xor
adc
fsubrs
movsl
fidivl
stos
aam
mov
pop
rcr
mov
sti
mov
sbbl
inc
test
mov
mov
daa
test
shrl
sbb
call
inc
jmp
sub
lret
adc
sbb
insb
xor
out
pop
jg
pushf
mov
xor
clc
dec
outsb
xchg
jb
and
popa
int
pop
std
in
lahf
lods
sbb
out
inc
sbb
adc
sbb
cmp
xor
mov
lock
xor
xor
stos
xchg
sub
adc
cmp
adc
cltd
mov
iret
test
je
cmpsw
lock
adc
lea
dec
scas
movsb
sbb
or
enter
mov
mov
lods
jg
fdivr
mov
loope
flds
je
add
mov
fs
sbb
lcall
xchg
mov
test
sbb
out
add
aad
xor
sti
aaa
or
in
lods
jae
push
into
xchg
add
jp
out
lret
push
lahf
mov
test
push
pop
roll
or
loopne
fadd
test
push
dec
push
out
bound
dec
div
aaa
mov
push
mov
ficoms
cmp
icebp
cmp
xchg
cmpsl
mov
sarl
fs
jne
push
mov
jne
loope
leave
and
mov
daa
dec
icebp
aad
add
mov
frstor
push
push
repz
dec
shll
loope
mov
jnp
jle
xchg
stos
insl
xor
and
lds
test
scas
xchg
ret
xchg
cli
xlat
dec
inc
lock
bnd
xor
jo
outsb
push
shlb
mov
loopne
inc
push
add
pop
and
loope
xlat
enter
push
imul
aam
or
sbb
jp
pop
pop
sub
inc
adc
lods
enter
call
mov
loopne
ljmp
nop
sbb
test
popf
ja
stc
ds
idivb
xchg
js
cmp
test
std
dec
cmpsb
mov
ss
and
pop
add
xorl
or
int
add
xlat
inc
test
push
jle
sti
mov
mov
mov
mov
pushf
das
mov
inc
mov
movsl
jecxz
imul
icebp
fcoms
mov
jno
and
call
dec
lahf
aaa
hlt
xchg
inc
ljmp
fcompl
add
pop
je
adc
dec
push
dec
lods
mov
cmp
xchg
jno
addr16
data16
das
dec
ss
xor
lods
xchg
mov
jno
sub
sub
push
and
cmc
pop
lock
out
stc
sbb
xor
in
mov
imul
push
push
adc
jae
push
ret
scas
or
hlt
adc
inc
sub
in
fnstsw
or
mov
enter
ja
gs
ficoml
dec
mov
jnp
movsl
inc
push
inc
pushf
dec
sub
dec
push
mov
add
push
mov
sub
mov
leave
cmc
mov
imul
pop
mov
sbb
popa
and
cmp
push
outsl
sbb
add
xchg
inc
aaa
dec
test
into
sbb
test
addr16
int3
mov
sbb
lods
xchg
inc
pop
sbb
push
jns
and
enter
mov
icebp
test
aas
lret
jmp
inc
dec
pop
pop
adc
jbe
notl
jnp
cmp
lock
sub
inc
cmp
out
rolb
push
push
movsl
cmpsb
nop
sub
add
jno
dec
shrb
sub
dec
add
enter
push
adc
or
fdivr
repz
jp
int
aaa
cvtps2pi
add
push
sbb
sbb
out
add
sub
dec
sbb
inc
cmp
in
cmp
lahf
add
add
aas
push
insb
lea
xchg
out
test
popa
pop
loope
pop
rolb
es
cmp
mov
cmpsl
dec
mov
xor
xor
push
loopne
inc
sbb
xor
enter
outsb
cmp
push
xchg
inc
add
popf
cmpsl
inc
daa
clc
push
mov
je
mov
cmp
cwtl
dec
out
jl
shll
xlat
mov
or
push
sahf
adc
outsb
cltd
sub
std
lret
adc
dec
jno
sub
jns
ret
pop
mov
adc
stc
xchg
ret
test
or
in
out
in
push
jp
in
insl
xor
adc
repz
or
jb
pop
rcr
jge
cmp
xor
pop
andl
pusha
in
dec
jl
sahf
mov
mov
pop
ret
mov
hlt
lock
xchg
mov
jnp
mov
push
mov
addr16
push
lret
mov
enter
in
addl
dec
jae
mov
push
xor
ss
mov
rcrl
mov
out
in
cs
shll
dec
xchg
das
mov
mov
jge
inc
or
ffree
imull
inc
and
xchg
adc
add
push
add
mov
mov
mov
mov
sbb
add
outsl
sub
hlt
in
repz
leave
jge
stos
outsl
add
mov
mov
mov
test
push
sub
clc
dec
and
icebp
mov
je
inc
scas
fcompl
add
lods
int3
ss
push
mov
rorb
repz
push
std
popf
sub
dec
lcall
iret
dec
ret
stc
jno
notb
sbb
aam
aaa
ds
mov
divb
outsb
mov
or
fistps
arpl
mov
iret
xchg
test
mov
mov
imul
mov
hlt
fstps
cli
mov
shlb
add
pop
mov
inc
mov
fwait
xchg
je
loope
sbb
mov
mov
and
inc
push
cmp
negl
sbb
aam
test
data16
inc
movsb
pop
aaa
movsl
xchg
and
daa
int3
mov
rolb
mov
cmp
sbb
int
movsl
movsb
adc
shlb
mov
andl
jne
das
pop
shlb
jg
mov
lahf
inc
mov
outsb
jp
adc
icebp
in
jmp
mov
push
jb
clc
pusha
xor
jnp
in
mov
int
push
out
testl
cmp
adc
loopne
outsl
jl
jnp
out
push
mov
pop
loop
inc
lods
and
and
inc
mov
jnp
mov
sbb
enter
push
dec
cmc
lcall
mov
addr16
pop
adc
scas
pop
dec
in
sub
mov
mov
sbb
rclb
aam
mov
mov
cmp
pop
aad
lods
ja
xchg
jmp
push
dec
mov
adc
imul
fwait
or
das
or
xchg
outsl
mov
or
sub
jbe
aas
xor
repz
popa
sub
jl
mov
loop
cmc
ret
jno
xchg
popf
adc
mov
dec
daa
enter
lahf
xor
test
adc
ss
jbe
sbb
out
subb
pushf
out
in
iret
pop
push
pop
push
mov
shlb
xorl
shrb
sub
sbb
outsb
fnsave
leave
jle
sti
jbe,pn
jle
add
xchg
int
popf
popf
push
pop
add
or
mov
vmaxss
test
shlb
repz
lea
xchg
pop
xor
or
mov
fidivl
inc
daa
mov
jo
cmp
outsl
icebp
xchg
test
or
loope
bound
dec
add
les
das
std
mov
dec
lahf
mov
jg
push
jnp
pop
inc
jae
or
sub
inc
sbb
push
xchg
or
push
aaa
and
or
xor
adc
pop
xchg
mov
aaa
stos
ja
xor
push
ret
outsb
movsb
mov
popf
in
dec
pop
jbe
nop
scas
clc
xchg
ret
push
inc
dec
jmp
and
dec
jae
mov
add
in
insb
mov
sub
gs
dec
pushf
cmp
hlt
scas
xchg
push
push
fsin
or
sub
push
jge
pop
ds
cmc
push
xlat
pop
fisttpl
sub
dec
das
adc
and
sbb
test
pop
push
push
fcoms
jge
dec
jb
push
fstpt
lods
cmp
sub
ffreep
dec
bound
in
aaa
movsb
inc
sub
push
aaa
sbb
repnz
fwait
cmpsl
inc
jge
icebp
xor
and
push
jmp
sub
mov
inc
popa
test
lods
leave
popa
mov
call
jnp
and
inc
mov
sub
push
enter
test
fsubl
popf
or
and
dec
jle
sar
pop
cmc
xchg
cmp
sbbb
cltd
cltd
and
sub
mov
jne
xchg
mov
clc
dec
enter
popf
imul
ljmp
inc
and
popf
stos
ss
lds
shll
dec
jecxz
in
push
daa
fwait
arpl
adc
data16
fucom
lret
and
fstps
and
fstl
pop
in
push
mov
pop
loop
xor
sub
ror
scas
add
and
add
mov
dec
loop
push
test
or
ds
stos
pop
cmp
xchg
bound
sub
xchg
pop
mov
ret
lret
scas
xchg
imul
pop
mov
insl
popl
ret
sub
lods
insl
arpl
orb
sub
push
xor
sbb
push
dec
lret
and
jae
mov
hlt
cs
mov
inc
pop
movsl
fildll
inc
mov
sub
ljmp
mov
push
int3
lds
sub
ja
scas
mov
jae
or
dec
hlt
push
les
xor
add
outsl
shll
cmp
int3
xchg
add
mov
dec
dec
inc
cltd
xchg
lods
sbb
cmp
and
bound
mov
sti
ss
movsw
pop
mov
std
and
sub
dec
mov
inc
jno
into
lret
insl
lea
add
xchg
dec
fisttps
nop
dec
test
mov
mov
adc
in
movsl
scas
jge
sbb
je
addr16
adc
std
jne
scas
mov
out
sub
aaa
jb
inc
mov
push
inc
push
sarb
lds
into
pop
xchg
xor
test
das
je
lcall
and
dec
mov
xor
mov
shll
jg
mov
mov
mov
sbb
jmp
mov
aas
cmp
jbe
call
cmc
push
jge
inc
data16
arpl
inc
into
cs
imul
std
dec
xor
or
xor
mov
adcl
lahf
leave
mov
sub
std
aaa
jle
jbe
mov
mov
cli
jecxz
add
test
ds
dec
subb
sarl
mov
cmp
imul
mov
sub
int
sub
lea
mov
push
pop
mov
iret
adc
in
and
dec
iret
repnz
sti
fimull
and
mov
push
add
notl
call
jno
sbb
popf
pusha
cld
add
add
scas
sbb
xchg
jno
loop
imul
stc
sub
aaa
das
pop
adc
lahf
or
jp
shrb
inc
jns
pop
lds
inc
xor
insl
cmp
mov
test
jge
sub
test
push
or
xchg
sub
dec
jbe
adc
xor
and
std
mov
mov
push
sub
ret
std
shll
mov
cltd
loope
inc
scas
jge
es
nop
mov
lock
add
stos
xor
lret
jecxz
jmp
jno
xchg
sahf
test
mov
jp
into
in
push
es
dec
mov
adc
sbb
mov
cmp
popa
pusha
iret
addr16
loop
push
adc
sub
cmp
stc
mov
je
sbb
cmp
xchg
lock
je
pop
insl
fdivr
lcall
sarl
or
jns
mov
or
ret
out
jae
rorl
dec
inc
divb
out
aas
ffree
je
xor
lods
mov
mov
int3
adc
inc
in
outsl
mov
jnp
mov
sbb
bound
aam
lods
lret
inc
add
stos
mov
lea
in
scas
xor
xor
pop
fistps
push
mov
xor
test
fadds
dec
cltd
adc
imul
cltd
popf
add
mov
mov
sbb
or
cmovb
leave
inc
push
or
pop
or
insb
jp
dec
pop
movl
xchg
xor
pop
jns
mov
fisttpll
inc
rcrb
fidivl
xor
pushf
outsb
cld
lods
adc
or
inc
repz
jbe
pop
push
je
jmp
in
out
push
dec
incl
aam
movsl
or
loopne
test
pop
in
mov
push
dec
add
das
lret
rclb
jecxz
pop
das
outsb
mov
out
jae
sbb
push
adc
stc
mov
pop
mov
or
call
negb
shll
add
push
adc
out
sbb
sahf
insl
inc
jmp
test
negl
lea
rorb
insl
inc
jmp
subl
mov
cmp
add
pop
test
or
add
in
inc
jo
inc
mov
adc
out
sbb
stc
xchg
jae
sub
jbe
fcom
inc
push
bound
push
sbb
add
movsb
ss
lcall
imul
stos
sub
fldl
mov
xchg
addb
sbb
jno
lret
push
jno
mov
in
divb
jne
xchg
loopne
imul
xor
push
jmp
lock
stc
ficoml
mov
lret
cmp
lret
inc
xor
dec
dec
aaa
test
push
mov
jbe
fs
cltd
les
movsb
mov
cmp
push
dec
dec
mov
mov
push
iret
mov
cmpsb
lock
ror
cmp
test
mov
or
fsubp
rcl
jg
push
mov
pop
call
jp
pop
dec
ds
jo
cmpsb
jbe
fdivrp
mov
out
scas
dec
mov
adc
nop
stc
jmp
sub
jg
repz
mov
push
pop
out
enter
adc
jns
outsb
sub
sbb
push
inc
mov
adc
mov
xlat
repnz
adc
pop
out
dec
arpl
testb
bound
xchg
movsl
das
test
lock
sarl
out
xlat
sub
mov
pop
imul
sbb
xchg
pop
mov
xor
cmp
sub
or
dec
and
fsts
jecxz
xchg
jns
das
adc
adc
call
inc
aam
or
xor
push
xlat
in
lds
dec
ds
leave
rcrb
cmpsb
pop
mov
xchg
xchg
xchg
xchg
aaa
sahf
mov
cmc
sbb
push
mov
lret
mov
sbb
mov
xchg
xor
les
mov
or
jno
jmp
sbb
mov
dec
in
cmpsl
popa
add
nop
icebp
mov
daa
mov
jecxz
lods
push
pop
adc
push
mov
lret
ret
daa
xchg
pop
push
shlb
xor
repz
xchg
out
ret
mov
add
lret
not
lret
or
mov
scas
sbb
fisttps
inc
adc
adc
jnp
imul
add
in
in
sbb
add
insl
loop
fcmovnb
js
adc
mov
pop
inc
lea
sti
pop
push
xlat
das
gs
and
in
mov
cmp
pop
fiaddl
hlt
mov
loop
jp
sbb
mov
dec
dec
outsb
mov
jge
adc
subl
lret
mov
fisubrs
push
pop
push
or
mov
int3
or
cmpsl
enter
ds
sbb
jae
stos
xchg
fisttpll
push
xor
gs
inc
jns
aad
push
and
movsb
mov
imul
subb
push
xchg
popa
cmp
mov
shlb
ret
sub
cmovp
push
push
sub
mov
cmc
jg
rorb
loopne
cs
stc
out
cwtl
arpl
and
pop
xchg
push
popf
or
std
adc
pop
cmp
inc
je
push
dec
loopne
cwtl
cmp
ret
ja
xor
cmpl
add
addr16
cli
xchg
dec
push
out
js
fisubrs
out
push
testl
mov
aaa
pop
aam
lcall
and
mov
js
cmp
subb
pop
rorl
inc
add
dec
outsb
repnz
int
mov
int3
lahf
cmp
ss
sub
mov
add
inc
fidivl
imul
xor
test
outsl
jae
loopne
fs
inc
cmpsl
pop
insl
xchg
ret
jbe
mov
dec
sar
xchg
inc
jmp
inc
imul
sub
cmp
std
stos
roll
popf
gs
jne
out
rcrb
insb
popf
cmp
aaa
push
mov
test
loop
mov
mov
fs
jno
fldt
es
shll
mov
fidivrs
outsb
fs
dec
imull
jnp
xor
xchg
cmp
data16
icebp
or
push
addr16
sti
outsl
sbb
cs
insb
hlt
xchg
mov
add
inc
inc
add
xor
adc
cmp
pushf
adc
cmp
enter
xor
dec
and
mov
push
addr16
mov
xchg
lods
adc
jno
bound
inc
ljmp
push
mov
mov
movsb
mov
lret
xchg
sub
push
and
jne
jmp
mov
cmpsb
pop
jnp
ljmp
fcmove
mov
push
cmp
push
fcmove
or
sub
imul
movsb
add
jmp
mov
sub
sbb
push
inc
fucomp
loope
sub
inc
inc
imul
jle
xor
jno
adc
pop
loopne
movsb
insb
imul
pop
sbb
daa
jns
add
sbb
xchg
test
and
in
aaa
cltd
jge
fisttps
cmc
cmp
test
add
fdivl
jmp
push
mov
mov
sbb
push
jl
dec
and
mov
test
lcall
fnstenv
or
mov
out
mov
xchg
in
lret
xchg
pop
pop
lock
cmp
jp
jmp
inc
rorb
mov
in
movsl
or
sbb
fsub
mov
lods
cwtl
and
xchg
ds
sbb
jbe
pop
push
xor
xchg
sarl
rcll
addb
outsl
hlt
int
sbb
sub
jne
sbb
movq
sub
stos
sti
insb
xchg
adc
or
ret
and
mov
fistl
adc
iret
adc
mov
iret
repnz
aaa
mov
sti
mov
popf
addr16
sahf
fwait
repnz
pop
cmp
aaa
adc
pop
enter
gs
pop
jp
and
sarb
cli
or
xor
ljmp
repnz
push
shr
sub
push
add
pop
mov
mov
cwtl
mov
adc
mov
inc
mov
aam
jmp
js
scas
pop
mov
jnp
pop
pushf
sbb
into
bnd
and
pop
xchg
push
and
sti
fimuls
test
je
aaa
ds
enter
nop
and
fmuls
cmp
es
sub
mov
sarl
fcmovnbe
push
imul
insb
jecxz
xchg
das
xor
aaa
adc
xor
repnz
xchg
or
dec
pop
pop
sbb
repnz
adc
jle
cwtl
jge
lods
cwtl
repz
sbb
rolb
jl
inc
scas
push
pop
inc
out
in
ret
lret
xchg
pop
ficompl
push
xchg
xor
test
jle
clc
in
adc
add
xor
push
scas
outsb
xchg
add
shr
push
andb
enter
push
js
add
pop
jle
sub
sbb
cld
inc
sbb
cmp
xlat
pop
lahf
popa
xchg
sbb
js
mov
subb
jle
or
mov
xchg
aad
pop
push
loope
adc
jo
scas
stc
jbe
test
xchg
jge
test
incb
jl
push
cmp
xor
adc
jno
mov
push
fs
dec
jle
scas
popf
add
cmp
mov
test
andb
das
mov
adc
mov
sbb
push
in
dec
cmpsb
inc
xchg
pop
xchg
movb
xchg
shll
cmc
daa
cmp
or
mov
pop
xor
pop
jns
insb
inc
add
and
xchg
dec
mov
jbe
xor
sbb
wrmsr
and
mov
mov
test
rcrb
jns
fldenv
xor
dec
add
push
fs
inc
or
mov
dec
xchg
enter
jno
pop
clc
sbb
xor
push
sahf
jg
push
pushf
lcall
adc
aad
aaa
push
jecxz
out
movsb
push
fnstenv
repnz
jo
lahf
xchg
insl
dec
lgs
repnz
out
sbb
stos
lock
mov
hlt
cmp
pop
jp
popa
out
push
test
daa
jnp
outsb
push
hlt
xchg
rorl
cmc
cmp
xor
jp
mov
or
sub
fbstp
and
pop
in
pop
fimuls
mov
testl
arpl
push
mov
testb
bound
xor
or
gs
xchg
out
imulb
out
push
mov
fldcw
push
mov
loope
das
xor
ljmp
sub
push
push
xor
dec
adc
dec
popf
loope
pop
and
hlt
jge
stos
dec
mov
fdiv
fwait
xchg
enter
xor
pop
imul
mov
roll
clc
orl
lods
out
enter
mov
inc
jge
cltd
jbe
and
xchg
add
insb
mov
push
xor
cmc
jno
icebp
pop
into
lret
inc
or
cmc
into
cmp
lea
data16
dec
mov
cmp
xor
mov
out
push
mulb
enter
xor
aam
sbb
pushf
xchg
xchg
sbb
lret
fsub
xchg
cmp
sarl
mov
scas
and
aaa
xor
cli
popa
repnz
aad
enter
test
and
push
and
negb
lret
sub
mull
mov
int
mov
mov
fbstp
lds
addr16
inc
sub
mov
add
sbbl
dec
es
add
popa
dec
pop
cli
lds
xchg
sbb
in
push
xor
and
adc
scas
mov
jecxz
sahf
cwtl
insl
push
mov
xchg
mov
rcr
es
cmpsl
ja
out
xor
iret
inc
daa
xchg
xchg
jg
mov
fwait
add
scas
js
adc
mov
and
imul
lock
pop
or
xor
jl
ret
fidivrl
lret
nop
push
cmpsl
xchg
lods
icebp
mov
mov
xor
xchg
cmp
adc
sbb
sar
dec
pop
mov
pop
insl
cmp
sar
and
lret
cmp
and
fisubl
aam
mov
inc
cmpsl
pop
outsl
push
push
aam
jae
sbb
repnz
and
lahf
cmp
outsb
sbb
arpl
jecxz
cmpsb
xlat
push
jno
movsl
in
inc
adc
jne
loopne
jae
dec
es
loop
loop
or
sub
insb
mov
imul
xor
xchg
push
cmp
pop
out
in
sub
jmp
add
push
stos
adc
jge
xor
pop
push
movsb
xor
mov
mov
mov
sbb
xchg
inc
pop
inc
orl
lods
sub
mov
xchg
subb
cwtl
jge
mov
pop
sbb
or
aas
mov
ficoms
or
mov
cmp
sti
mov
movl
push
pop
daa
mov
adc
arpl
push
mov
xchg
inc
repz
cmp
mov
dec
mov
arpl
pop
adc
cmpsb
inc
jmp
push
ljmp
test
pusha
push
arpl
xchg
scas
rcrl
jmp
lahf
sub
aaa
aam
sbb
shl
scas
fs
ret
dec
jp
movsl
lahf
mov
or
cmpsl
dec
inc
les
and
adc
xchg
insl
fstl
push
jno
xor
mov
jmp
push
dec
sub
xchg
fdivs
mov
xor
dec
sbb
cmpl
mov
xor
inc
mov
hlt
fsubs
adc
popf
in
pop
aad
xor
inc
mov
mov
sbb
mov
jle
data16
jecxz
and
xchg
test
jge
mov
jns
daa
fnsave
dec
cmp
push
ds
adc
test
mov
inc
inc
adc
pop
xchg
stos
sar
cld
je
jle
mov
fs
cmp
lea
loopne
mov
xor
into
dec
in
sub
sbb
jecxz
xor
ljmp
je
and
in
push
mov
test
das
jmp
xor
scas
fisttps
push
sub
lret
sbb
lcall
mov
je
pop
lahf
mov
jae
push
les
or
jl
cmp
ja
mov
cld
cli
lcall
addl
jbe
or
iret
sub
add
add
adc
cwtl
imul
cmc
mov
mov
cmp
adc
popf
test
mov
xchg
xor
jb
jnp
pop
push
sbb
fwait
hlt
ret
cmp
inc
repnz
imul
cmp
rclb
pop
jmp
sbb
das
fsubl
fwait
and
fsubp
rorl
cmc
in
clc
add
loope
add
and
or
xchg
nop
lds
pop
mov
sub
dec
outsb
mov
or
xor
fbstp
lcall
insb
sub
fnstsw
xorb
mov
push
cli
add
dec
idivl
push
jecxz
mov
je
lahf
pop
sub
push
adc
mov
int
aam
enter
pusha
mov
int
aaa
ljmp
ds
aad
xor
xor
push
int
xor
dec
xchg
int
enter
xchg
xchg
dec
xchg
mov
xchg
pop
insb
cmp
xchg
or
fidivrl
dec
loope
lods
push
std
out
scas
adc
orl
ljmp
test
mov
insl
mov
fwait
mov
clc
inc
jge
mov
inc
dec
adc
mov
testb
popa
mov
loopne
mov
pop
xchg
ja
xor
movsl
jns
xor
dec
hlt
mov
fdivrl
je
mov
icebp
and
loope
addb
inc
int
gs
shl
mov
lcall
out
sub
cs
and
jle
jne
rclb
icebp
jl
adc
dec
mov
lods
lods
sub
imul
sbb
in
loope
rorb
cmp
xor
sub
inc
inc
cli
jge
lods
push
outsl
xchg
shll
test
adc
mov
mov
adc
mov
addr16
jmp
xchg
jecxz
lock
int
pop
mov
insl
jmp
mov
js
lret
xchg
je
sbb
aas
add
addb
inc
jns
lods
mov
into
loopne
pop
or
mov
or
lock
loope
leave
cmp
out
arpl
or
add
add
inc
mov
je
inc
test
orl
push
push
adc
add
adc
shrl
ja
add
add
lds
neg
cmp
xchg
jne
stos
incl
or
xor
enter
push
aaa
das
popa
pop
std
pop
imul
add
and
push
xor
ja
stc
sahf
jmp
inc
mov
pushf
jl
jne
subl
jae
lret
addr16
lods
adc
mov
and
lock
lock
inc
addr16
cmpsl
ret
xor
jbe
push
fstps
testl
jl
sbb
cmc
cli
dec
sar
outsb
nop
loopne
filds
push
adc
jno
mov
imul
ror
divl
jns
arpl
mov
pop
cld
lods
cmp
js
incb
xor
jo
push
mov
aam
rorb
in
popl
cld
movsl
inc
test
adc
push
pop
push
enter
push
in
imul
lret
push
and
lret
clc
dec
dec
sti
pop
inc
jle
mov
push
movsb
ds
cld
and
sarl
clc
dec
dec
pop
addr16
sub
and
push
push
xchg
mov
dec
inc
rolb
scas
in
inc
lock
lcall
push
mov
jmp
pop
sub
pop
js
insb
mov
inc
jnp
push
lock
mov
js
sbb
cltd
cmp
mov
mov
xchg
push
push
iret
cs
dec
in
mov
lea
outsb
mov
pop
clc
jbe
psllq
lcall
add
lods
adc
pop
daa
add
imul
dec
pop
pop
jns
inc
mov
in
ret
fdivl
mov
xor
lods
leave
in
push
popa
repz
xchg
popf
out
adc
popf
movsb
mov
adc
mov
cs
mov
adc
mov
xchg
pop
loop
scas
or
cld
adc
rol
or
outsb
mov
fdivrs
inc
call
pusha
ret
jno
mov
jb
dec
ret
inc
call
xor
outsb
movsb
bound
and
dec
sbb
iret
andb
jnp
mov
adc
mov
cmp
dec
lods
cmp
in
ret
dec
adc
es
dec
lds
es
sbb
outsb
jmp
xchg
cs
shl
mov
and
mov
inc
pushf
pop
fwait
pop
popa
mov
rolb
loopne
stos
cmp
and
adc
push
dec
aad
lds
sub
mov
xchg
push
and
inc
xchg
fdivrl
and
ljmp
enter
mov
jno
xchg
movsl
sbb
pop
fnstenv
push
cmpsl
mov
mov
cmp
stos
xchg
jle
rorl
mov
dec
fwait
aam
push
cmpsb
out
scas
in
sbb
add
gs
mov
lds
xor
out
in
lods
mov
jg
sbb
add
std
jo
cmpl
cmpsl
mov
sub
arpl
push
xchg
test
add
in
mov
push
push
xchg
adc
xchg
add
mov
inc
pop
inc
mov
frstor
jmp
jnp
dec
mov
jo
xor
sub
in
insl
pop
rolb
int3
mov
out
pop
xchg
mov
jno
lods
jns
adc
shl
or
jo
out
ficomps
and
in
test
arpl
jbe
and
inc
js
movsb
pusha
push
cmpsb
cmpsl
jl
mull
push
dec
push
mov
inc
bnd
aas
loop
sub
test
leave
pushf
sbb
xchg
or
pop
jb
sbb
add
hlt
insl
jo
sbb
inc
push
lret
or
pop
loop
decl
and
roll
push
sbb
mov
cmovo
leave
stc
cmp
jo
dec
pop
jge
loop
mov
mov
ja
stc
cmp
incl
inc
leave
ljmp
jb
out
cmc
inc
dec
movsb
lahf
outsb
inc
ret
dec
cwtl
mov
fistpl
cltd
pushf
adc
xor
jae
xor
jae
fsubr
cmp
sub
inc
sbb
cli
scas
or
add
or
dec
push
int
dec
rorl
push
popa
sahf
cli
sbb
push
pusha
stos
addr16
and
xchg
lods
data16
aam
mov
dec
xor
repz
and
stc
fcmovnb
dec
pop
gs
jb
dec
push
insl
dec
sub
mov
out
mov
xor
or
aad
mov
icebp
and
jp
sub
gs
or
imul
fsub
xchg
dec
into
pop
clc
or
xor
cwtl
jnp
push
jmp
xorb
xchg
push
mov
and
xor
pushf
iret
xchg
mov
aad
popa
testl
clc
sub
sub
xor
nop
and
mov
leave
mov
aad
in
sbb
inc
pop
push
mov
dec
in
cmp
xchg
inc
leave
aam
push
leave
test
push
imulb
ja
xchg
stos
pop
mov
pop
pop
mov
or
cmpxchg
sub
cs
fs
js
hlt
adc
add
gs
mov
outsb
push
outsb
in
sub
shrb
mov
dec
popa
out
ficompl
jl
jl
inc
sbb
or
jecxz
add
cld
jne
mov
and
push
out
scas
fidivrs
and
insl
jns
mov
push
test
retw
and
pop
xlat
orb
ss
adcl
jecxz
scas
pop
and
sub
jle
xchg
sub
xchg
sbb
mov
push
inc
test
lds
dec
in
in
loop
mov
into
jge
lds
popf
testl
cmp
out
mov
mov
jb
rcr
mov
xor
mov
push
mov
cmc
cltd
lods
ret
enter
cltd
pop
ja
inc
filds
inc
sub
dec
pop
pusha
cmp
cmp
add
and
or
scas
xor
pop
icebp
out
push
xchg
sarl
mov
jno
mov
push
outsl
add
sub
std
mov
in
mov
cmpsb
ds
test
or
sub
push
loop
out
mov
cli
dec
aad
xor
adc
out
xchg
or
inc
and
mov
pop
sbb
dec
fdivl
sti
inc
testl
sbb
fsts
jmp
xchg
add
clc
popa
cmc
pushf
and
pop
popf
jno
test
pop
and
cwtl
or
cmp
push
insl
shlb
mov
cmp
fucomip
inc
inc
lahf
fnsave
daa
lock
dec
cmp
ffree
notl
mov
fucomip
rorl
pop
sbb
push
dec
mov
push
lock
insb
in
rolb
lahf
ss
dec
rcl
mov
rsqrtps
das
js
mov
xchg
fidivrs
mov
out
dec
stc
imul
and
pop
test
aas
push
mov
js
push
mov
inc
shlb
shlb
cltd
push
inc
outsb
cmpsl
and
mov
push
jno
repz
call
mov
push
data16
nop
push
filds
popf
cmpsl
aas
lock
insb
sub
leave
jle
in
and
mov
xor
pop
iret
xor
sbb
addl
mov
pusha
jg
mov
jo
sbb
dec
jae
clc
fs
lock
loop
mov
pop
jge
mov
push
lcall
stos
jp
mov
push
nop
in
int
xor
cld
ja
aas
aad
pop
movb
cs
addr16
aam
push
js
lods
es
leave
fbld
lods
sbb
push
xor
add
cmpsl
mov
jp
fisttps
mov
jle
mulb
movsb
dec
arpl
and
jns
fsubr
ret
testb
xchg
sub
xchg
push
inc
jl
aam
lds
ds
xor
pop
stc
pop
and
sbb
push
mov
sub
js
je
lock
add
out
js
cmp
add
sbb
clc
add
faddp
or
and
int
aaa
insb
add
movsb
pop
xchg
std
rcr
fs
aaa
xchg
push
out
cmpsb
sbb
mov
add
jp
inc
dec
cmp
sub
jnp
scas
dec
cld
mov
dec
andb
subb
movsb
and
movsb
dec
dec
jg
test
push
add
mov
sub
test
push
mov
inc
add
fbld
test
pop
dec
push
and
sbb
inc
ficoml
xchg
popl
mov
xor
and
jp
and
fimull
lcall
xchg
add
fwait
jb
js
jo
test
insl
fbstp
cltd
cmp
ljmp
mov
mov
lods
ss
loope
pusha
in
dec
dec
ljmp
shrb
jmp
and
mov
xchg
fiadds
scas
jg
pop
rcrl
cld
int3
rcll
ffreep
ja
in
xchg
fadd
xchg
sub
sahf
xchg
and
lea
cmc
jle
lret
pop
ja
mov
jg
sbb
in
stos
sub
cmp
jge
aam
mov
add
push
into
sbb
in
pop
jl
or
dec
test
mov
and
jb
mov
iret
scas
sbb
mov
popa
sub
pushf
sarl
mov
fdivl
cmp
push
popa
fsubrs
sub
mov
and
dec
mov
out
in
mov
aad
mov
sub
pop
inc
mov
add
aam
add
out
mov
pushf
push
xchg
addr16
mov
push
fcompl
push
sbb
stos
jl
lock
push
and
pop
cmp
mov
loope
je
push
aad
cmp
cwtl
imul
in
fistps
aaa
bound
mov
insl
or
lods
test
int3
or
cmp
clc
adc
fnstenv
mov
jnp
out
lret
xor
std
js
outsl
sahf
orl
xlat
js
jmp
stos
mov
fwait
pushf
dec
sub
or
inc
cld
sbb
mov
in
pop
out
xchg
mov
dec
xorl
loop
rol
sti
jo
outsb
clc
js
add
cs
ret
rorb
imull
inc
adc
ss
mov
xchg
xlat
sbb
les
ljmp
dec
pop
sub
out
ret
jl
xor
xchg
push
sbb
out
ljmp
mov
jne
int3
cmc
mov
and
cmp
sbb
stc
int3
sarl
pop
leave
jge
cmp
mov
in
dec
mov
icebp
sbb
pop
rorb
lahf
and
push
in
push
pop
jg
xchg
push
pop
fcmovb
mov
pop
mov
imul
pop
out
sub
out
stc
or
lret
adc
jecxz
xor
xchg
data16
jnp,pt
pushl
outsb
clc
push
adc
cmp
jg
inc
idiv
push
push
push
jmp
sub
int
mov
xor
pop
push
imul
sub
insl
add
das
cli
adc
push
pop
mov
imul
mov
lret
leave
fdivl
and
test
push
and
sub
shr
ret
movsl
sub
es
ljmp
pop
or
or
jnp
pushf
fildll
cli
lret
jb
sbb
push
pusha
iret
lods
pop
mov
or
inc
inc
std
leave
jne
push
xchg
idivl
adc
stos
scas
rorl
addr16
mov
jae
lea
and
test
aad
data16
arpl
jmp
fbstp
xor
sub
mov
movsl
and
inc
pop
icebp
std
rorb
xlat
mov
mov
leave
cli
xchg
sbb
push
push
fstpt
test
sbb
loopne
mov
and
push
cmp
pushf
arpl
dec
and
hlt
sbb
aaa
in
push
sub
mov
push
popa
pop
mov
rcll
ljmp
mov
aam
push
xor
inc
jl
xchg
add
jbe
dec
xchg
pop
sbb
push
inc
push
retw
mov
xchg
xchg
xchg
cs
aas
inc
lret
dec
push
mov
push
cmp
sub
std
push
rolb
adc
pop
pop
xchg
mov
push
rclb
cmp
sahf
loop
cli
dec
lea
mov
xor
adc
fsubrl
aas
hlt
xor
rcr
fldl
sbb
lods
adc
pop
call
cmp
dec
iret
jnp
in
movsl
mov
xor
mov
cmp
scas
mov
hlt
cmp
and
lahf
or
scas
cmpsb
lods
mov
mov
and
test
pushf
and
fwait
add
jle
xor
push
test
cmp
sbb
sub
notl
push
lahf
lds
or
les
jmp
dec
mov
adc
in
xchg
jmp
js
inc
jg
lcall
pop
pop
movsb
pusha
jo
bound
jl
in
scas
jg
sahf
out
pop
fadd
sbb
outsl
nop
in
mov
insb
jno
aas
fistl
repz
lret
jno
push
or
jns
iret
cwtl
mov
movl
mov
cmp
push
aas
inc
aad
into
pop
pop
mov
jne
mov
jge
inc
aam
cwtl
mov
orb
lods
out
outsb
mov
xor
add
mov
loopne
pop
jl
std
test
std
stos
mov
and
mov
xor
outsl
or
and
rol
mov
popf
fimuls
push
pop
sub
out
mov
lock
fildll
lret
inc
xchg
mov
inc
inc
ja
aaa
xchg
cs
add
pop
insb
jnp
dec
dec
adc
cmp
out
adc
mov
add
loop
cmp
add
xchg
aas
cltd
push
and
or
cmpl
notl
addr16
shlb
fwait
test
mov
int
cltd
pusha
andl
cmpsb
fldl
mov
mov
enter
pop
int
dec
es
sahf
jg
push
leave
adc
loope,pt
popa
outsb
mov
inc
icebp
fbld
xchg
sbb
aam
dec
dec
daa
push
inc
adc
shl
pop
fiadds
nop
lahf
pop
popa
mov
and
or
push
ret
jno
mov
sbb
add
adcl
bound
push
mov
fdivrl
ljmp
mov
jmp
adc
ret
sub
push
xorl
stos
pop
flds
ja
popa
cmpsl
rcrl
dec
xor
in
adc
stos
mov
lret
adc
mov
xlat
sarb
inc
xor
mov
sbb
add
int3
pushf
mov
int3
push
shlb
push
inc
dec
rcrl
push
mov
jmp
mov
mov
mov
pop
add
add
pop
int
sub
iret
fiadds
mov
test
push
sti
pop
xlat
add
clc
inc
das
pop
inc
les
or
loopne
test
push
pushf
push
and
cmp
dec
aam
loope
lret
mov
pop
mov
je
sbb
xor
jge
mov
mov
lahf
ss
cmp
jo
xchg
sub
mov
adc
or
mov
loop
shrb
movb
pop
pop
mov
xor
pop
scas
mov
mov
imul
stos
mov
sub
pop
and
sub
mov
cmp
jbe
dec
ljmp
addr16
dec
push
xor
or
cmp
xchg
add
dec
jp
sbb
xchg
mov
movsb
clc
in
repnz
lock
xor
in
in
push
cli
lock
aas
pop
stc
int
sbb
dec
cmc
mov
cmp
jbe
inc
out
and
mov
mov
js
mov
test
jle
mov
fisubrl
pop
and
lret
pop
scas
mov
and
inc
outsl
repnz
mov
ja
pop
loop
push
mov
dec
mov
stos
clc
xor
mov
lods
setb
aas
stos
mov
lock
adc
xchg
xor
jl
imul
inc
add
mov
sar
mov
xor
jns
push
xchg
out
mulb
mov
xchg
pusha
pop
push
call
push
xchg
ficompl
icebp
lret
dec
push
and
cs
roll
xchg
mov
nop
decl
mov
popa
fwait
movsb
rcrl
in
repnz
mov
clc
dec
jecxz
inc
jp
and
jle
hlt
cmp
int3
fldl
mov
cwtl
and
dec
push
rorl
iret
loopne
dec
xchg
jmp
popf
mov
lret
jns
mov
push
or
es
sbb
pop
inc
aam
addl
mov
scas
andnps
ret
lods
xor
xor
push
insb
movb
ret
sbb
loop
rclb
addr16
fdivrl
cmpsl
icebp
test
lods
xor
inc
push
or
xor
in
in
repz
es
in
push
or
mov
mov
arpl
cmp
out
pop
and
xchg
loop
insb
or
cs
dec
imul
and
fwait
pusha
test
aas
daa
xor
xor
std
rclb
imul
daa
add
bound
clc
mov
movsl
stos
mov
add
arpl
inc
xchg
mov
sbb
out
jp
js
mov
xor
not
orb
adc
jmp
les
das
pop
popf
add
add
mov
aas
iret
inc
adc
and
mov
dec
aaa
inc
ljmp
out
ljmp
or
psrad
mov
popa
jae
xchg
sahf
push
jle
ds
sub
mov
cmpsb
xor
sarb
jne
pop
loope
sbb
cltd
inc
mov
stos
jno
paddb
cmp
inc
in
xor
mov
add
jg
lcall
adc
sbbl
mov
insb
adc
shll
ret
jo
push
jae
lret
jecxz
sbb
aas
stc
cmp
dec
negl
sub
mov
shlb
and
pop
movsb
push
outsb
lods
dec
adc
inc
mov
shll
pop
mov
adc
sahf
fcoms
int
out
adc
and
xchg
add
jle
sbb
add
into
pop
out
fwait
idivl
cwtl
mov
jb
xchg
jmp
or
cmp
scas
fisttps
inc
adc
in
jno
jne
stos
roll
sbb
push
xor
jns
jp
addr16
mov
or
imul
ja
fidivs
cmp
cmp
fstpt
push
inc
push
sub
pop
into
sbb
aas
cmp
mov
dec
mov
push
stos
sbb
cltd
push
xchg
js
lahf
dec
jle
rcr
or
xor
nop
push
cld
js
push
xchg
mov
inc
xchg
mov
aaa
sahf
loopne
in
push
popf
lret
sti
lds
mov
and
pop
fidivrs
push
mov
shl
arpl
sub
fists
xchg
aaa
rcrl
cmpsb
test
inc
cld
outsl
jo
xor
adc
lock
push
insl
mov
xchg
inc
ds
pusha
sbb
cmp
aam
and
xchg
xor
mov
xchg
push
add
xchg
mov
mov
pop
push
jb
loopne
jno
hlt
or
add
xchg
xlat
arpl
or
movsl
sub
sbb
xchg
inc
ret
mov
dec
inc
es
ret
add
xchg
test
xor
ret
dec
shlb
mov
out
flds
push
fsubs
rcrl
and
or
subb
hlt
enter
adc
das
divb
idivb
sbb
loope
jno
aaa
pop
andb
xor
js
dec
rolb
shl
mov
ret
shll
cwtl
xchg
cli
pop
arpl
sahf
std
popf
inc
shrl
mov
inc
popf
mov
into
pop
mov
mov
push
pop
fdivr
imul
mov
sub
mov
pop
cmp
push
mov
stos
jns
data16
popa
hlt
cmp
mov
lcall
sub
sub
pop
push
push
jo
das
pop
mov
sub
addr16
dec
leave
imul
shlb
xlat
push
mov
and
pop
nop
mov
pop
inc
jmp
jno
insl
shlb
jns
daa
inc
movsb
jmp
ret
adc
ss
pop
ja
fucom
rclb
jmp
aaa
dec
ss
cmp
xchg
inc
jecxz
jbe
xchg
sub
bound
jnp
mov
xor
xchg
rcrw
jae
add
jg
lret
adc
leave
loop
jne
lcall
in
andl
or
xchg
mov
mov
lock
pop
aaa
dec
inc
stos
cli
add
jl
cmp
lcall
loop
iret
jns
jmp
mov
leave
imul
xchg
jno
lcall
xchg
push
lcall
adc
sub
roll
pop
sub
mov
push
or
fldl2e
inc
mov
jbe
mov
jno
mov
cltd
dec
mov
iret
icebp
jg
dec
stos
or
xchg
and
or
pop
mov
pop
add
fwait
or
mov
lock
iret
push
cld
mov
jae
xchg
enter
js
pop
push
xchg
frstpm(287
add
inc
pand
and
addr16
dec
imull
cmpsb
push
cwtl
fstpt
mov
pop
pop
popf
push
or
in
cmp
mov
or
loope
xlat
arpl
mov
lcall
add
pusha
fiadds
adc
jno
add
push
and
out
xchg
icebp
inc
xchg
sub
pop
pop
jge
or
fimull
fistps
or
lods
mov
scas
insl
les
insb
cmp
jg
mov
ret
push
and
test
jb
in
or
test
gs
fnstenv
mov
fcos
mov
pop
movsl
orl
adc
iret
adc
mov
cmp
arpl
jg
xor
sub
imull
faddl
es
rep
rcl
outsb
sub
imul
xor
pop
in
mov
fnstcw
shlb
mov
cmc
mov
data16
add
inc
xlat
inc
pop
test
imul
mov
sub
dec
jno
repz
add
fbstp
mov
mov
mov
stos
push
cmp
lods
lahf
adc
push
pop
lock
sbb
push
inc
pushf
adc
mov
jo
test
lock
push
nop
mov
les
mov
cmc
inc
fwait
add
pop
pop
cmp
sub
popa
insb
popf
mov
pop
ret
sub
mov
xor
fsubs
pop
popa
shrl
mov
and
cli
or
ss
ds
aas
xor
sbb
sub
lds
arpl
sahf
insl
cmpsl
jle
push
sbb
push
cmpsb
mov
call
mov
int
or
mov
push
shll
in
mov
jno
push
dec
outsl
movsb
je
popl
mov
inc
out
push
lods
and
pop
cmc
or
out
jmp
mov
pop
cmp
xchg
xor
adc
mov
rcl
cmp
leave
fcmovne
test
sbb
dec
mov
mov
mov
jno
lea
shrl
and
mov
sub
test
push
push
cltd
fisttpll
call
add
xchg
add
test
mov
es
aaa
add
push
iret
jb
inc
jmp
mov
loop
and
mov
xchg
mov
push
inc
cwtl
xlat
xchg
jmp
dec
test
sub
rolb
pop
add
push
fwait
sub
sbb
enter
adc
push
dec
testb
lock
bound
movsl
enter
jbe
loopne
dec
ljmp
cmp
pop
xchg
rclb
int3
fldcw
jecxz
mov
mov
mov
mov
adc
push
pop
mov
push
stos
call
outsl
outsb
enter
dec
sti
inc
and
inc
dec
mov
stos
mov
cmp
dec
test
fnsave
cld
leave
addb
cmp
scas
shll
aas
lret
insb
pop
mov
aaa
cmpsl
xchg
cwtl
xchg
push
dec
sbb
sub
enter
ss
jb
ficoms
pop
aad
add
push
mov
test
xchg
test
fs
mov
mov
lods
dec
insl
and
aaa
lahf
enter
fsubrl
aaa
imul
pop
ficoml
mov
sahf
es
lods
out
push
test
test
out
test
out
pop
int
nop
fprem
cld
dec
ljmp
dec
add
mov
movsl
jb
sub
and
roll
lahf
jo
sahf
pushf
inc
ret
xchg
movsb
addb
outsb
scas
xchg
das
nop
jbe,pt
ds
fwait
popa
mov
daa
mov
xor
xorl
ret
repz
mov
push
jg
mov
and
jbe
fsubs
cmp
mov
fnstcw
sbb
sbb
sbb
jge
push
adc
xchg
dec
mov
mov
rcrl
lahf
inc
mov
jae
call
jo
repnz
mov
pop
xor
stos
aad
rep
cmp
icebp
addr16
adc
enter
ret
jecxz
pop
sub
pushf
xor
pusha
fisttps
dec
inc
cmc
clc
add
daa
roll
jb
lret
movsb
inc
lahf
adc
mov
les
and
xor
test
gs
sbb
mov
fildll
test
mov
mov
inc
data16
clc
inc
jns
inc
cmp
in
pop
push
mov
inc
iret
sub
fsubrl
xchg
int
mov
xchg
inc
dec
fcmovb
push
jns
cmp
lahf
notb
sbb
xchg
mov
and
mov
fsub
jnp
push
fs
jle
add
mov
sbb
jbe
call
je
xchg
js
rclb
int3
flds
push
mov
adc
xor
andb
jp
push
jmp
mov
mov
imulb
jle
xchg
push
scas
adc
call
mov
mov
je
mov
sub
push
hlt
jl
mov
jecxz
jle
or
and
mov
les
out
hlt
push
ret
lcall
cld
dec
in
inc
sbb
mov
dec
lret
add
imul
inc
xchg
frstor
jmp
js
sub
jecxz
ds
dec
xor
repz
xchg
lock
aad
cmp
or
fisubl
je
addr16
push
mov
sbb
call
mov
mov
addr16
in
adc
or
cmp
cs
in
and
push
lret
daa
pop
ds
push
xor
push
into
loope
movl
stc
pop
sub
pop
xchg
dec
push
inc
jmp
sub
or
inc
add
xchg
cmp
cmc
in
js
call
aad
test
sti
hlt
in
outsl
push
enter
push
xor
push
in
les
dec
mov
nop
dec
jo
pusha
sahf
lcall
xor
inc
pop
jae
fdivrp
mov
add
inc
outsb
mov
adc
xchg
out
pushl
sbb
push
pop
fildll
dec
sub
in
pop
ljmp
jle
xchg
mov
dec
cmpl
mov
add
mov
arpl
sub
mov
sub
push
sub
dec
test
xlat
outsl
int
cmc
imul
outsl
dec
mov
das
ret
in
adc
lret
cmpsl
add
movsb
cli
fiaddl
and
pop
out
add
push
or
cs
cmp
jne
aas
dec
enter
or
pushf
lods
cmc
sub
pushf
inc
xchg
repz
jbe
add
jnp
ja
mov
mov
rorb
imull
mov
push
pop
xchg
jmp
mov
sub
jo
jno
xchg
je
int
mov
fsubrs
jmp
or
loop
push
mov
dec
outsb
push
inc
ljmp
mov
xchg
iret
xor
outsb
notl
pop
mov
mov
inc
jmp
or
in
dec
ds
iret
xor
pop
add
jp
dec
cmp
scas
sbb
loop
push
int
std
std
jno
cmp
std
sub
dec
int
inc
xchg
nop
fidivrs
pushf
rorb
jg
adc
pop
fs
mov
pop
inc
cs
mov
xlat
iret
loopne
fimuls
pop
dec
push
insb
inc
cmpsl
adc
push
xor
mov
xor
jb
imul
push
and
push
and
fcmovb
mov
adc
fs
js
cmpsl
enter
cmp
jle
inc
test
adc
outsl
bound
xorb
rcrl
and
xchg
cli
loopne
push
shlb
mov
sbb
call
jbe
in
or
in
cli
aaa
push
xchg
jno
ljmp
xor
xorl
ja
hlt
fwait
ret
cmp
inc
or
jp
mov
scas
jecxz
mov
inc
pusha
jo
aas
dec
hlt
pop
or
shr
inc
outsl
mov
int
leave
inc
sub
push
out
out
loop
loopne
imul
sarb
inc
xor
sbb
and
mov
mov
fs
push
enter
sub
dec
jbe
rcrb
rorl
push
push
dec
loope
sbb
std
jbe
and
subl
mov
gs
out
pop
popf
mov
xchg
outsl
daa
mov
fidivl
adc
fwait
cmp
cmp
and
xor
add
aas
lds
pop
loope
in
push
jb
js
and
sti
xchg
push
pop
xchg
lcall
cmp
pop
xchg
jne
ja
icebp
push
pop
in
mov
sbb
testl
xchg
mov
gs
fistpll
and
mov
loopne
cmp
in
sbb
popa
and
add
cli
xor
nop
lods
or
fwait
shlb
add
aad
sar
mov
sbb
pop
jae
jmp
add
sbb
insl
or
cli
loopne
call
stc
and
jge
std
fisttps
xor
fbstp
mov
xchg
or
jecxz
into
and
jae
dec
out
stc
adc
mov
and
iret
mov
cltd
scas
es
addr16
loopne
or
sbb
adc
adc
test
sahf
sub
xor
test
xor
xorb
inc
int3
mov
inc
push
jp
push
lcall
cwtl
pop
xchg
popf
scas
mov
in
imul
dec
fcoml
xchg
xor
js
push
mov
xlat
fisubrs
mov
mov
mov
mov
mov
stc
jnp
aad
adc
xor
ret
dec
in
pop
aam
popf
mov
shrb
and
lock
hlt
sub
add
hlt
fsubrl
mov
pop
inc
lods
lods
fcmovb
sbb
cmpsb
inc
adcb
insl
cmpsb
dec
xor
xchg
rcr
loop
imul
lret
jle
pushf
jno
outsb
mov
jg
jmp
sti
popf
jnp
icebp
pop
add
jne
sbb
and
incl
adc
sbbl
adc
int3
xchg
add
jmp
cmpb
cmp
cmp
jo
repnz
aas
dec
fdivr
movb
lret
mov
sbb
sbb
push
roll
or
sub
and
ficompl
ss
mov
push
pop
push
push
push
movsb
shl
cmc
aad
jns
rclb
mov
test
loope
adc
mov
fs
imul
push
add
enter
xor
push
and
sub
cmp
inc
mov
mov
push
pop
push
push
in
push
sbb
add
cli
mov
or
mov
lret
cmc
cmp
fisubs
sbb
ficoml
mov
andl
sbbb
or
xor
clc
cmp
int3
mov
cmc
and
mov
les
mov
cmp
pop
subl
sbb
push
lods
in
dec
cmp
dec
mov
pop
mov
popl
xchg
enter
repz
imul
xlat
sti
jb
loop
pop
inc
pop
inc
pushf
or
je
sar
insl
xlat
add
sub
flds
das
pop
jnp
inc
mov
lds
push
jp
repz
pop
mov
jbe
mov
lcall
and
mov
mov
fwait
in
fsubrs
in
movb
fistps
mov
outsb
aaa
divl
rolb
mov
adc
test
and
aad
std
std
dec
pop
jecxz
icebp
shll
test
repz
inc
jl
or
push
inc
pop
or
adc
repz
negl
rolb
push
cmp
cmc
int
les
mov
mov
mov
aas
daa
push
icebp
in
pop
dec
mov
and
push
jnp
cli
mov
imul
mov
xor
add
sbb
in
pop
sti
push
jae
push
aas
mov
pop
and
mov
call
xchg
pusha
mov
enter
insl
jle
es
mov
mov
adc
mov
dec
sbb
sub
cwtl
push
add
insb
lcall
and
mov
push
jae
cmpl
xchg
fcmovbe
bnd
sbb
sahf
not
cmp
push
or
es
popf
lea
add
push
pop
ja
inc
mov
push
pop
movsb
add
out
dec
pushf
adc
mov
les
stos
dec
sub
sub
movl
cmp
insb
adcb
cwtl
mov
testb
fiaddl
mov
mov
les
cwtl
pop
push
insb
cltd
out
push
mov
dec
nop
adc
pop
orb
out
aad
sbbb
dec
add
xchg
scas
sub
add
into
sub
jle
stos
jmp
cmp
sub
test
addr16
ret
iret
mov
mov
mov
push
mov
ret
pop
test
repnz
inc
ljmp
sarl
xchg
jmp
cmp
fldl
dec
aad
sbb
ds
cmpsb
js
jbe
jbe
pop
push
aas
push
js
sbb
adc
dec
aaa
negb
shr
or
leave
test
push
rcrl
es
orb
jo
mov
cmpsb
pushf
sbb
mov
aas
sub
sub
adc
das
cltd
mov
cmp
fcmovu
shrb
fdivr
test
add
pop
or
loop
fwait
arpl
pop
or
iret
pop
test
ss
out
cmp
lcall
ss
lcall
stos
pop
scas
mov
push
mov
pop
rcrl
sub
jp
dec
punpcklwd
mov
mov
jg
loop
movups
jl
mov
clc
cmp
pop
and
in
pop
movsb
scas
xchg
cmp
inc
dec
pop
stc
ficompl
fisubrl
dec
push
inc
xchg
mov
mov
jmp
fsubl
dec
repz
ret
cltd
sbb
pop
dec
outsb
push
mov
or
push
ja
pushf
divb
mov
inc
bound
jge
xchg
loop
pop
idivb
or
mov
sti
and
iret
mov
add
roll
loop
pop
fstl
jmp
cmpsb
lcall
mov
mov
stos
iret
sub
les
mov
fldenv
mov
adc
cmp
adc
stos
lret
adc
fs
sub
testl
push
int3
iret
dec
sbb
push
mov
lock
mov
ja
mov
sbb
dec
sbb
push
or
push
push
addr16
lds
fs
xor
cli
sbb
jg
mov
cs
std
fs
aaa
sub
inc
or
adc
incb
add
jp
add
push
dec
cmpsl
mov
andl
andb
mov
push
fdivs
ss
mov
hlt
sub
rcrb
sar
lahf
xchg
mov
lret
outsl
jmp
xchg
inc
fwait
xchg
jae
in
sbb
and
call
inc
mov
xchg
das
or
inc
mov
push
hlt
fsts
je
shll
arpl
imul
adc
hlt
hlt
mov
lods
fwait
sbb
stc
jmp
shl
dec
outsl
jecxz
cltd
popf
sbb
pusha
mov
jge
in
ja
dec
enter
mov
xchg
in
sub
pusha
repnz
loop
aam
sub
mov
jmp
jecxz
int
bound
mov
mov
adc
cmp
cmpb
call
outsb
sub
jge
or
dec
mov
hlt
movsl
pop
pop
ret
xor
fnstsw
lods
loopne
into
cltd
push
aaa
jmp
add
loop
jb
in
jmp
or
ljmp
es
aas
lahf
xchg
sbb
and
les
testb
cmp
inc
cli
mov
pusha
sub
mov
dec
xchg
jl
in
inc
and
inc
iret
xchg
mov
cs
addl
rorl
xor
imul
loopne
pop
and
mov
into
jb
call
lea
pop
bound
aam
inc
jl
pop
subb
cld
jae
int3
xor
rcll
jo
push
cmp
mov
jae
jecxz
and
imul
adc
mov
test
mov
mov
sbb
hlt
rcrl
sbb
xor
lret
jp
int
mov
ss
sub
add
ds
fldt
lock
lret
test
and
pop
pop
out
out
mov
aam
push
pop
mov
orb
and
aaa
jg
dec
fadds
push
sti
lcall
push
cmp
shrl
gs
and
mov
xchg
ret
js
popf
bswap
push
xchg
into
mov
sub
add
dec
cmp
and
push
push
or
bnd
inc
jg
sub
mov
mov
sbb
movsb
sbb
push
push
jo
daa
in
xor
xchg
cmp
int3
aaa
or
xor
das
adc
loopne
fistl
out
mov
cmpsb
jl
inc
je
ret
pop
lds
fcomip
xor
mov
loopne
dec
mov
mov
lods
ret
ret
clc
scas
stos
dec
hlt
jno
into
frstor
js
ss
mov
sahf
push
aaa
push
jle
pop
pop
xor
mov
or
ss
iret
xchg
jno
cmp
ljmp
push
loope
push
icebp
imul
imul
jne
xchg
lock
inc
xchg
leave
loop
xchg
push
pusha
mov
cwtl
cmpsb
imul
fucomp
push
arpl
mov
divl
inc
cltd
push
scas
hlt
cmp
adc
pop
idivb
mov
aaa
aas
inc
mov
jne
push
mov
rcll
scas
dec
popa
mov
aaa
mov
aad
inc
cmpsl
pop
sahf
or
pop
mov
mov
jno
andb
ret
into
test
dec
ljmp
and
push
push
inc
mov
sub
jge
leave
cmpsb
add
push
push
adc
jae
xlat
adc
mov
outsl
jae
jecxz
ljmp
mov
addr16
subl
dec
jg
xchg
adc
xor
adc
and
stc
sub
cmp
mov
icebp
icebp
movsl
sub
lea
push
sahf
or
xor
loopne
dec
ss
cmc
xchg
orb
mov
data16
fstps
mul
out
push
cli
mov
mull
dec
popf
or
xlat
and
push
cwtl
dec
xchg
mov
sub
adc
std
repnz
jb
dec
out
leave
nop
jns
jmp
inc
je
sbb
pusha
dec
sbbl
in
loopne
loop
push
fucomp
rorl
inc
aas
sbb
push
mov
adc
mov
imul
xor
out
pop
in
pusha
mov
cmp
cvtpi2ps
jge
add
add
sahf
rcrb
push
scas
fwait
test
mov
mov
nop
and
lock
fmul
xchg
shlb
bound
inc
test
out
repnz
fisubrs
mov
popf
cmp
or
xchg
jmp
sub
stos
cs
inc
stos
jbe
in
cmp
icebp
js
add
add
outsb
testb
xchg
sbb
test
push
ret
sub
mov
cli
jbe
mov
add
repz
mov
jmp
adc
xor
je
push
cmp
scas
movsl
inc
adc
mov
push
and
mov
test
int
add
xchg
daa
rclb
mov
push
cmp
ret
sub
sub
imul
aas
xchg
lock
inc
sarl
add
and
pop
cmp
movsb
fsubl
sbb
push
or
xor
push
bound
aad
fs
jmp
aaa
xor
insl
std
sub
add
out
out
sti
outsl
mov
mov
loop
jb
add
outsb
mov
cld
int3
ffreep
jl
cmpsb
aas
lods
add
cmc
inc
notb
dec
movnti
icebp
and
inc
adc
cwtl
fwait
xchg
xor
adc
in
negl
adc
mov
pop
dec
mov
jecxz
lret
lock
ret
insb
loope
lods
cmpsb
sub
pop
sarb
imul
rol
es
xchg
lcall
notb
dec
lret
movsl
lret
js
mov
imul
aas
sub
mov
enter
jecxz
imul
dec
add
or
mov
sbb
pop
pop
das
fbstp
push
jne
sbb
cwtl
mul
test
jge
insb
int3
cwtl
rcr
adc
in
xchg
push
dec
sbb
mulps
mov
mov
or
mov
inc
insb
addr16
adc
sub
mov
iret
jo
push
imul
mov
jl
cltd
mov
and
daa
xchg
mov
rclb
push
lock
add
jge
popf
xor
mov
or
mov
xchg
lods
in
mov
or
mov
or
xor
cmp
popf
add
dec
adc
std
pushf
dec
das
sbb
push
cmp
adc
jle
adc
mov
cmp
dec
mov
insb
sbb
or
mov
sbbl
ss
ret
add
inc
les
push
dec
pusha
add
mov
fstps
push
jge
popa
imul
mov
pop
insl
xchg
mov
push
push
mov
xor
push
jle
lods
out
ret
mov
add
insb
repz
xchg
mov
xchg
sub
das
jecxz
sti
movhps
mov
hlt
lcall
add
and
and
mov
xor
fisubl
cltd
ss
sbb
xchg
sbb
cmp
gs
jge
jmp
add
insb
gs
mov
mov
out
inc
out
into
mov
fists
fcoms
test
xor
push
sub
jle
adc
inc
subl
xor
dec
mulb
js
inc
adc
add
xchg
xchg
out
lahf
mov
push
inc
movsl
dec
nop
jp
jle
mov
divl
xchg
mov
fcmovu
push
loopne
sbbl
or
les
adc
xor
jl
mov
arpl
imul
mov
nop
cmp
pop
fsubrs
jp
imul
pop
sub
mov
mov
lahf
shll
push
xlat
pop
xlat
js
mov
xchg
ret
inc
sub
mov
jns
pop
cli
roll
add
inc
lock
push
mov
ja
cmpsl
imul
aad
sub
stc
fwait
jg
jmp
in
mov
xchg
add
sub
dec
in
xor
add
std
mov
cli
inc
testb
sbbl
fldcw
push
iret
iret
testb
sub
insb
adc
adc
and
mov
xor
or
dec
insb
dec
ret
jbe
mov
xor
sbb
jg
pop
icebp
mov
push
fwait
adc
xchg
rcrl
dec
hlt
jns
rclb
and
lret
std
js
lahf
push
cli
into
dec
pop
fnsave
lea
push
jl
cmp
pop
int3
repnz
pop
ror
out
test
popaw
push
or
pushf
mov
pop
sbb
fmull
xchg
cmpsb
fcomip
or
add
mov
xchg
xchg
pop
pop
mov
notl
dec
mull
xor
cmpsl
xor
test
jmp
inc
push
in
adc
les
xor
push
mov
mov
int3
and
xorl
push
xor
adc
lret
xor
arpl
or
repz
jg
cmp
cmp
adc
stos
decl
fldcw
mov
or
or
adc
push
mov
add
xchg
scas
pop
or
cmp
xchg
mov
or
mov
dec
sbb
or
or
imul
aaa
and
or
sbb
and
pop
push
sub
adc
gs
adc
jne
mov
mov
push
mov
mov
mov
dec
cmp
icebp
adc
inc
dec
dec
ja
in
les
and
inc
cld
mov
lret
adc
pop
dec
inc
xchg
aad
xorb
stos
hlt
stos
inc
rclb
mov
hlt
inc
stos
mov
adc
jae
arpl
shlb
xor
push
pop
lret
fildl
push
add
lret
pop
inc
add
or
pop
shll
fcmovne
adc
cmp
and
push
addr16
xchg
push
xor
ss
mov
fidivl
sbb
sbb
adc
cwtl
pop
push
xchg
jg
sub
test
ljmp
pop
loop
adc
pop
pusha
mov
adc
inc
sub
pusha
nop
mov
jmp
mov
andl
mov
cmc
sub
jmp
mov
pushf
lahf
cltd
xor
jae
rcrb
iretw
or
pop
mov
mov
sbb
iret
cwtl
inc
and
pop
inc
bound
das
mov
xor
xchg
push
pop
mov
cmp
cmp
loopne
add
pop
and
sub
adc
inc
lea
mov
imul
pop
mov
jbe
stc
stos
in
adc
dec
mov
les
cld
movsl
mov
pop
push
dec
xchg
or
negb
push
cmp
jp
pop
cmp
scas
cltd
or
mov
cmp
sti
push
xor
loopne
insl
movsb
add
pop
ss
dec
aas
mov
jns
cltd
imul
inc
pushf
insb
out
rolb
push
decl
outsl
inc
mov
mov
push
adc
mov
push
insl
add
add
sbb
lahf
xor
sub
stos
fs
or
mov
sub
js
adc
lret
outsl
lods
repnz
idiv
pop
lea
nopl
pop
dec
mov
das
int
cmp
int
fdivp
xchg
or
inc
lock
pop
enter
cltd
and
stc
cmp
imul
test
cmp
mov
and
sub
test
mov
je
adc
in
xor
loope
and
xor
mov
push
pop
in
sub
lds
xchg
lds
sbb
pop
mov
test
inc
mov
insl
inc
out
je
inc
leave
jae
add
xor
lods
fdiv
and
ret
jno
and
sbb
out
sbb
aad
dec
mov
addb
test
aad
inc
xor
xor
or
push
inc
jg
jno
push
iret
cmp
lcall
mov
inc
inc
jge
jno
js
push
pop
jns
in
sbb
repnz
sub
movsl
outsb
mov
scas
daa
push
lds
lret
xchg
cli
mov
mov
jno
bound
repz
fisubl
pop
movntq
mov
push
jmp
sbb
mov
loop
add
imul
std
xchg
fistpl
insl
cltd
fisubrs
imull
mov
jbe
add
mov
mov
ds
stos
and
push
jnp
inc
sbb
xor
dec
std
inc
adc
gs
pushf
xchg
jb
roll
xchg
push
xor
orl
call
sahf
popa
sbb
lahf
add
mov
inc
sti
xchg
enter
sbb
jb
cwtl
imul
sbb
xor
insb
popf
jg
lahf
xchg
fstl
mov
add
idivb
jmp
lea
stc
and
negl
xor
cmpb
fwait
or
xchg
sbb
sub
repnz
sbb
cli
mov
jae
lds
mov
xorl
decl
fldcw
pop
shl
sub
jb
jne
push
sahf
sub
xlat
xchg
lods
cmp
mov
xchg
add
negb
push
sbb
lahf
push
jecxz
add
addr16
mov
cltd
mov
xchg
imul
test
push
push
mov
pop
add
lods
cwtl
nop
addr16
scas
pop
push
and
adc
cmp
dec
fs
push
inc
xchg
mov
js
jp
es
movsl
pop
mov
jecxz
test
mov
and
xchg
cmp
out
leave
sbb
sub
es
sbb
inc
xchg
cmp
sbb
or
cmp
push
rorb
mov
popf
cwtl
pop
inc
dec
jge
lds
arpl
push
sbb
add
fstpl
inc
sbb
pop
loope
outsl
inc
popf
pop
aas
cmp
jns
pop
cmp
jb
xorb
pusha
sbb
cs
nop
xchg
stc
pop
mov
pop
movsb
sti
and
subb
jbe
insl
inc
lret
cmp
js
jp
test
scas
shr
xchg
push
jo
rcr
outsl
movsb
jp
fst
add
int
mov
xchg
lahf
push
ljmp
fadd
pop
aaa
out
imul
sarb
jbe
daa
jns
dec
push
jmp
lea
loopne
lods
adc
and
adc
int3
pop
mov
pop
hlt
andb
add
incl
in
repz
fnstcw
dec
dec
xorl
mov
in
js
sub
idivb
jp
sbb
jmp
jae
popf
jae
sub
sbb
inc
cmpsb
mov
jae
or
jge
fldenvs
mov
lods
cmp
mov
ja
or
pop
nop
test
pop
dec
add
pop
mov
loopew
iret
imul
ljmp
nop
in
inc
or
mov
pop
les
and
dec
js
jno
cmc
jne
cli
inc
sbb
ret
ss
fnsave
into
shlb
jno
lods
or
es
mov
cs
nop
push
addr16
out
sbb
xor
sub
mov
out
add
jg
push
into
or
xchg
inc
add
add
outsb
sub
dec
push
mov
xor
and
loope
cli
rorb
test
loopne
mov
add
pushf
into
pop
inc
inc
inc
sti
jle
push
imul
flds
inc
imul
jp
and
dec
imul
mov
push
jmp
mov
or
sbb
xchg
adc
mov
imul
mov
outsl
daa
pop
jno
sub
jge
inc
mov
cld
fwait
test
loop
insl
inc
outsl
push
sbb
fstl
sti
jo
inc
movsb
adc
pop
jns
dec
pop
ret
mov
int
pushl
push
inc
sbb
and
or
fdiv
es
dec
jge
in
filds
jae
iret
pusha
pop
inc
adc
rorb
pop
jb
in
mov
stos
adc
call
fiaddl
and
fs
lret
imul
popf
fadd
jmp
pushf
nop
es
fldenv
ret
xchg
sbb
outsb
cmpsb
out
cld
pop
push
rolb
add
jns
xor
or
rcrb
ficompl
pop
mov
fwait
arpl
insb
out
xchg
and
pop
mov
out
adc
jge
jmp
push
dec
cmp
shll
insb
mov
imul
sub
pusha
mov
scas
pop
cs
nop
mov
ficompl
jno
inc
aad
fwait
icebp
jl
push
sbb
mov
jmp
icebp
mov
push
sub
test
in
cmpsl
dec
adc
push
movntq
out
repnz
nop
test
stos
adc
gs
mov
sub
and
xchg
cmp
cltd
push
notl
out
pop
add
xchg
fdiv
test
sbb
mov
sti
mov
daa
ja
sbb
cmp
and
mov
stc
jge
pusha
js
aad
pop
cld
xor
adc
jle
bound
aas
mov
xor
les
mov
rol
popf
pop
xchg
add
ret
shl
gs
fmuls
or
sub
jl
mov
insb
mov
repnz
inc
notl
repnz
fcmove
xchg
and
push
test
std
pop
inc
sub
sahf
cs
pop
lea
inc
fldenv
pop
dec
shll
test
cwtl
sub
int3
jne
cld
cmpsb
loop
int
and
xchg
insb
stc
xor
stos
jecxz
out
cmpsl
jae
cmp
dec
inc
fldenv
fnstsw
sub
or
and
sub
loope
push
cmp
push
jp
imul
mov
mov
sbb
mulb
fimuls
fcoml
jle
es
dec
xchg
addb
mov
pop
and
inc
xchg
xor
xor
add
cmp
or
or
and
or
into
xchg
lahf
mov
and
pop
and
inc
cmpsb
ret
cmc
inc
stos
test
icebp
ja
jmp
jg
rcrb
sar
aam
mov
clc
int3
lea
xlat
pop
xor
mov
xchg
dec
and
ja
jns
push
aaa
scas
lret
out
out
cmpsl
sbb
mov
xor
jnp
fstl
ss
lods
fwait
cs
xchg
mov
mov
sub
push
fadds
cli
add
loop
push
cmc
push
sbb
mov
movsb
shlb
mov
adc
xchg
sub
arpl
mov
das
mov
cld
js
lret
xchg
adc
and
sarb
push
jge
inc
inc
mov
sub
cmp
add
add
xor
fmull
into
shrb
fbld
out
push
call
in
cld
out
movsb
hlt
pop
and
push
sbb
setno
lods
daa
dec
sbb
aas
xchg
sbb
xchg
cmp
cmpsl
stos
sub
faddp
mov
popw
insb
sbb
cltd
into
pop
mov
xchg
push
aad
aas
incl
mov
mov
imul
fstps
shr
lahf
test
ds
into
faddl
push
pop
sub
inc
dec
or
sbb
inc
adc
xor
mov
mov
inc
jbe
iret
mov
in
scas
and
movsl
leave
mov
inc
push
das
pop
sarl
in
mov
aam
sbb
or
addr16
pop
and
ret
sub
jge
adc
cmp
stos
or
mov
test
push
andl
out
loopne
cmp
int3
pop
aam
jne
cmp
pushf
add
aad
pop
stc
popf
cwtl
rorl
test
sbb
pop
ret
insb
lret
push
jb
inc
fidivl
mov
movsl
rcrl
sub
sbb
nop
inc
fcomps
out
mov
dec
jo
ret
out
enter
push
aam
mov
inc
jmp
adc
jae
inc
mov
add
mov
and
inc
inc
fiaddl
jmp
mulb
add
mov
in
popa
vmread
cmpsb
popa
repz
add
outsb
lods
mov
push
andl
adc
out
std
pusha
pop
mov
scas
test
das
mov
push
fists
adc
mov
sbb
and
adc
out
pop
mov
rcrb
mov
int
adc
lcall
mov
inc
aas
ret
cmp
and
add
popf
xor
lret
popl
lret
jo
lds
bound
pop
lret
jp
jbe
or
mov
pop
aas
push
cmp
fsubr
in
mull
outsl
loopne,pt
push
xor
xchg
push
push
push
jbe
loop
push
testb
dec
pop
mov
sahf
sbb
pop
cmp
or
sti
in
jle
icebp
add
insb
aas
int3
jecxz
rolb
pop
push
adc
int3
jp
push
lret
fldcw
push
das
sbb
and
dec
jno
imul
cmp
sbb
lds
cmp
dec
lret
divw
mov
pusha
jle
add
mov
sub
xchg
mov
out
test
fdivrl
add
pop
lea
in
out
stos
xor
or
test
imul
mov
popf
test
and
sub
int
dec
xor
push
rolb
ret
add
mov
push
jg
jmp
push
sub
mov
adcb
sbb
push
dec
loope
aad
addr16
or
xchg
stc
push
aam
cmp
xchg
inc
test
es
ljmp
loope
pop
aad
fisttpll
shll
ja
ret
and
xchg
in
dec
add
and
lods
or
inc
sarb
xchg
clc
cltd
adc
sbb
jns
xchg
gs
popa
cmp
lcall
xor
aad
push
adc
xchg
loop
jb
test
xor
pop
fwait
lds
mov
jp
aas
and
les
cmp
sbb
clc
inc
mov
dec
rcrb
test
cmp
push
jns
sub
mov
repnz
push
sbbb
cmp
mov
push
add
decl
js
stos
sbb
cmp
bound
fcom
cmpsb
mov
sahf
jbe
ljmp
mov
jecxz
dec
and
cld
jno
xchg
xchg
sub
sub
cmp
stos
scas
jecxz
sarb
push
sysenter
stos
jp
orl
push
jne
iret
mov
ds
fcmovnb
add
push
sbb
leave
jp
add
push
movsl
movsb
or
mov
add
or
lock
push
jge
or
ja
inc
sbb
inc
jp
or
or
mov
cld
mov
jg
in
lds
mov
aam
imul
stos
lock
and
or
and
sub
mov
fcompl
dec
sti
push
and
lods
out
sub
sub
decb
push
dec
mov
rcl
sbb
in
jmp
mov
inc
imul
inc
pop
inc
jne
cmc
xchg
gs
push
push
negl
out
lds
pop
gs
loopne
adc
or
lods
xor
jbe
push
mov
ja
pop
mov
mov
xor
daa
pop
call
in
stos
inc
inc
clc
cmp
xor
or
es
adc
out
pop
in
cltd
jge
out
cmp
out
cmpl
cmp
scas
fsubs
nop
fistl
dec
xchg
scas
mov
jle
lock
pop
adc
cmpsb
or
lods
dec
dec
outsb
and
add
dec
mov
mov
nop
ret
add
fcoml
sti
dec
call
insb
sbb
cltd
pop
lcall
repnz
rep
jge
sbb
pop
scas
imul
rcrl
jne
mov
sti
mov
subb
sbb
enter
jae
fwait
mov
testl
out
jmp
shl
xchg
movsb
dec
pusha
xor
fstpt
sbb
sbb
add
ja
cmp
les
ss
clc
cltd
stos
xorl
pop
cmc
xchg
scas
inc
aas
in
push
adc
add
inc
cmp
popa
sbb
aaa
mov
into
xlat
aam
pop
fsubs
push
imul
or
ds
pusha
or
push
jg
dec
lods
test
data16
loope
xor
mov
sarl
lock
mov
lcall
adc
das
push
repz
shr
nop
mov
addb
into
inc
mov
mov
lret
pop
pop
insb
mov
push
inc
stc
rcr
sub
push
lds
mov
sbb
aas
lahf
and
or
cmp
sub
call
or
mov
pusha
sahf
sbb
imul
in
or
in
sbbb
decb
data16
lret
jmp
test
jo
sub
inc
adc
lods
rolb
cwtl
pop
jmp
or
pop
mov
jp
xchg
rorb
dec
icebp
mov
fdivs
mov
pop
fstpt
bnd
mov
mov
add
and
jecxz
push
xchg
fcmovu
inc
or
xor
mov
add
repz
pop
push
mov
leave
xor
mov
sbb
fisubrl
int3
pusha
xchg
lods
and
and
mov
mov
imul
and
push
lret
ja
pop
mov
sbb
sbb
push
push
repz
in
fwait
jle
cmpsl
movsl
hlt
or
loop
test
push
sbb
sub
xchg
jno
jae
cltd
clc
dec
jae
das
xor
cli
sbb
inc
mov
push
fldt
and
lds
push
sbb
dec
xlat
push
push
mov
and
mov
insl
xor
push
add
adc
push
lcall
cmp
data16
push
xor
add
sbb
push
imul
push
mov
loope
fwait
insl
mov
daa
mov
hlt
stc
mov
adc
sub
add
fistl
test
adc
in
lret
ret
fdivp
fnstcw
mov
xchg
sbb
push
ss
push
cld
int3
sub
push
lahf
popa
sub
cmp
into
sbb
stc
sarb
push
mov
in
outsl
xchg
dec
jge
dec
lret
sub
or
or
negl
lea
pop
aaa
xchg
push
mov
and
fisubrl
dec
or
ljmp
pop
xlat
loopne
movsb
mov
jne
or
rorl
iret
pop
adc
mov
aas
pop
movsl
aas
repnz
mov
push
in
fsubr
mov
popf
pop
adc
sbb
cmp
int
testb
jnp
mov
bound
popf
hlt
lds
in
jle
test
lret
cmp
push
insl
in
insl
pushf
sti
sub
dec
sbb
add
sbb
lahf
and
and
jbe
add
xchg
or
jns
aad
jmp
jl
stc
push
pop
and
xor
popa
ss
int3
mov
loop
sub
or
xchg
out
jg
inc
and
aam
cmpsb
push
cwtl
pcmpgtd
pop
jge
adc
mov
xlat
jbe
orb
insb
outsl
outsb
lcall
fs
sbb
push
in
in
push
push
hlt
popa
cwtl
push
push
cltd
ss
loope
or
das
cmpsl
and
mov
dec
dec
sub
or
mov
and
dec
lahf
js
fsts
dec
daa
add
js
fcomp
aaa
fisttpl
xor
xchg
insl
adc
pop
jge
dec
sahf
shrl
xchg
dec
je
inc
inc
sbb
mov
adc
dec
nop
add
loope
decl
fdivl
repz
scas
xorl
icebp
jge
and
dec
dec
xchg
test
lock
loop
mov
push
dec
aad
adc
push
mov
fwait
xchg
xor
sub
xor
mov
xchg
test
in
mov
cmp
cs
mov
lds
or
cmp
adc
insb
dec
cmpsl
cmp
pop
std
pop
inc
sbb
cmp
pop
ja
mov
lcall
jnp
or
add
cmpsb
pop
sbb
lock
shll
push
shll
dec
push
mov
lock
push
xor
outsb
gs
dec
popf
mov
roll
lret
xchg
cli
jo
icebp
or
cmpsb
mov
daa
adc
mov
rclb
cmp
or
jne
sbb
iret
or
dec
jecxz
ret
stc
jo
js
adc
cmp
or
imul
push
test
into
aas
cmp
cmp
sub
decl
insl
or
pop
rcr
inc
jo
mov
pop
test
ret
push
out
push
mov
cmpsb
cli
loopne
repz
ja
pop
bound
add
cld
mov
mov
ljmp
imull
adc
hlt
sub
mov
imull
mov
push
mov
or
jl
das
mov
rolb
ror
xor
idivb
loope
movsl
frstor
dec
mov
sub
dec
in
xchg
in
xor
pop
faddl
les
push
xchg
jg
lret
or
sbb
xor
bound
sbb
dec
dec
inc
xlat
ja
and
loop
test
dec
test
xchg
std
outsb
pushf
and
sub
fdivrl
insb
into
xor
jg
fwait
xor
jb
jnp
aad
mov
dec
add
mov
xor
or
xor
mov
insb
das
xchg
push
sub
dec
or
xchg
xor
hlt
xor
sub
es
daa
inc
xchg
dec
mov
adcb
nop
dec
mov
pop
aad
lcall
mov
out
mov
test
popa
push
in
inc
xor
or
dec
addl
add
add
pop
imulb
cwtl
mov
ljmp
jecxz
clc
adc
mov
fmuls
dec
pop
aaa
loop
lret
mov
lret
popl
ds
push
jb
subb
leave
hlt
or
pusha
pop
std
pop
fwait
pop
cs
mov
orb
rorb
fidivs
adc
imul
pop
mov
xor
lock
fistps
pop
shr
mov
xor
adc
pop
xchg
repnz
or
cwtl
mull
sahf
mov
xchg
fimuls
sbb
pop
mov
inc
mov
or
mov
test
pushf
inc
loope
mov
insb
adc
pop
cmp
stos
jmp
stos
pop
push
jnp
mov
jp
xchg
stos
in
arpl
mov
push
inc
insl
lret
push
test
insl
cltd
mov
lods
mov
cwtl
mov
and
insl
loope
push
iret
mov
stc
dec
or
roll
in
jb
pop
push
sarl
jno
xor
mov
jnp
cmc
popf
lock
es
adc
push
daa
jno
xchg
jp
sti
xchg
jb
xor
les
jg
enter
test
std
dec
or
dec
and
inc
call
jge
xchg
gs
iret
pop
jo
mov
repnz
mov
mov
imul
dec
jb
ffree
js
push
inc
push
add
mov
out
notb
lods
testb
inc
jmp
or
dec
leave
hlt
std
inc
and
or
test
testb
out
push
fistl
xchg
adc
pop
mov
loop
rolb
das
sbb
add
jecxz
mov
sar
loope
jb
int3
mov
jmp
jle
dec
adc
mov
add
or
dec
fiadds
push
es
mov
and
insb
jnp
dec
fucomi
cltd
ja
push
rol
fdivr
jnp
test
mov
sub
fcompl
pop
cmpsb
cmc
pop
jne
dec
and
dec
cmpb
jo
aaa
jno
sub
xor
ljmp
inc
hlt
sub
jmp
test
mov
data16
aas
lret
add
adc
jne
int3
mov
mov
scas
repz
mov
mov
mov
inc
jae
out
pop
ret
cmp
mov
fs
repz
xor
pusha
ss
fs
jp
pushf
cmp
jnp
pop
insl
repnz
pop
ss
ds
and
mov
mov
jne
xlat
push
scas
inc
fnstcw
fdivrp
insb
mov
aam
in
imul
inc
xor
fstps
jnp
pop
loopne
mov
ljmp
xor
mov
fdiv
xor
leave
xchg
shll
sbb
enter
popf
adc
loope
sub
imull
xor
mov
cwtl
fsubr
mov
call
or
repnz
mov
sbb
pusha
shll
push
fdivrs
mov
pop
lods
scas
inc
sub
imul
int
push
cwtl
ficomps
mov
test
sbb
stc
mov
add
fs
imul
roll
push
outsl
lock
cwtl
push
int
cmp
dec
push
fstpl
push
out
xchg
mov
rolb
mov
ja
mov
out
call
inc
add
mov
or
lret
sub
aaa
sbbb
and
mov
xchg
and
add
dec
pop
cmp
in
sti
mov
or
inc
jns
mov
lock
mov
push
push
inc
inc
mov
outsb
mov
pop
xchg
inc
or
sbbl
xchg
dec
mov
lcall
push
test
fstpt
enter
jecxz
in
mov
mov
xchg
negb
xchg
xor
inc
xchg
bnd
mov
or
iret
cvttps2pi
jg
jbe
popl
cs
sub
push
xor
leave
and
sahf
jnp
or
or
xchg
outsl
mov
testb
mov
lods
mov
pop
aad
jle
int
jp
inc
int3
lret
cs
sub
mov
aaa
cmp
xor
mov
dec
mov
or
arpl
pop
iret
xor
aad
inc
jl
test
pop
enter
xchg
inc
shrb
adc
lock
add
sarl
or
sub
leave
mov
xor
pusha
sbb
cmc
xlat
or
cmp
sub
sbb
and
cmp
stos
adc
mov
mov
cmp
je
lea
popa
push
lret
mov
mov
adc
mov
cld
sub
adc
sbb
dec
mov
adc
lock
and
mov
mov
mov
mov
imul
dec
aas
shl
inc
testb
ss
inc
sbb
adc
test
andl
xor
rcrl
cld
addr16
nop
cmpsb
mov
or
push
mov
pop
xchg
and
fcmovnbe
out
ss
imul
testl
out
inc
mov
and
sub
lods
pop
mov
shll
push
cmp
mov
or
stos
dec
fs
sbb
pop
push
ds
int3
xor
dec
push
and
mov
popf
or
mov
pop
mov
rcl
jo
pop
ret
cld
pop
push
and
ljmp
in
mov
dec
add
fistpll
mov
push
pop
xlat
gs
adc
jbe
xchg
and
fistl
pop
rep
mov
sub
loop
pop
pop
mov
repz
int
jmp
mov
adc
xchg
mov
sub
push
cld
xchg
ljmp
fidivs
mov
or
add
adc
jnp
shr
push
in
xchg
and
mov
cmp
fidivrl
test
arpl
xchg
sub
lret
bnd
ss
push
xor
push
mov
xor
fsubl
dec
pop
movl
jnp
ss
sub
iret
ljmp
add
cwtl
push
cwtl
sar
push
fsubrp
or
flds
sub
jmp
mov
xor
mov
rol
inc
mov
xor
cmp
ljmp
in
adc
loop
scas
sub
mov
stos
insl
sbb
loopne
adc
sbbb
fwait
sbb
or
or
data16
imul
mov
pusha
push
insb
gs
and
add
cwtl
mov
inc
les
inc
mov
mov
in
enter
dec
imul
bound
pop
fmull
jp
fldl
mov
fildl
fwait
lods
mov
sbb
lret
push
fimull
mov
scas
inc
jmp
push
cs
pop
sub
lret
lds
mov
cli
clc
and
xor
sub
pop
ljmp
ret
dec
inc
add
xchg
xchg
enter
sarl
enter
push
jecxz
jle
push
push
ja
and
mov
push
pop
dec
insl
dec
push
cmpsb
mov
pop
mov
mov
dec
jmp
mov
in
or
push
fwait
jecxz
xor
jne
lcall
jle
dec
data16
mov
pop
xlat
das
xchg
dec
sub
and
rolb
js
lods
int3
push
xchg
fs
subl
jb
cwtl
sub
leave
or
jl
popa
fwait
mov
xchg
enter
mov
dec
into
divb
mov
jge
std
inc
repnz
push
adc
dec
adc
cld
jne
nop
ret
fists
adc
add
or
push
jg
xor
and
push
mov
roll
push
adc
adc
xchg
sti
push
mov
xor
push
or
mov
add
imul
sbb
cmp
lea
jnp
and
lods
incb
cmp
or
or
xor
pushf
or
movsb
out
shrl
in
pop
dec
push
cld
aaa
stc
inc
fwait
out
stos
mov
mov
and
add
icebp
adcb
and
mov
adc
add
scas
jno
bound
stc
sbb
mov
repz
jmp
jp
jae
dec
mov
rcll
lock
test
gs
fucomp
adc
scas
out
repz
adc
and
dec
pushf
jmp
or
push
out
jnp
outsl
inc
hlt
pop
test
cmp
lret
cltd
and
adc
push
xor
bound
leave
and
mov
outsb
pop
sahf
popaw
dec
add
inc
int
jo
fwait
aam
rcrb
push
or
test
ds
or
imul
sbb
lock
push
lret
dec
pop
jmp
push
xchg
sbb
cmovo
xchg
xchg
jno
or
mov
in
push
lock
pop
mov
test
add
xorl
call
ficompl
jne
mov
out
and
shll
bound
cmovg
orl
loopne
xchg
sub
into
scas
pushf
mov
sbb
cltd
outsl
into
fimuls
das
sti
mov
movsl
out
pop
jns
and
xchg
pop
xchg
add
out
or
jae
mov
xchg
or
jne
sbb
mov
xor
pop
or
jae
lods
movsl
mov
xor
repnz
pop
push
xor
ret
aas
push
inc
pop
stos
stos
xchg
push
and
ss
xlat
xchg
jns
jge
sbb
xchg
mov
mov
jge
fdiv
call
sbb
dec
leave
cs
das
and
mov
loopne
fwait
jo
out
jno
push
cld
pop
push
xorb
xchg
ret
arpl
lods
lret
popa
inc
test
sub
dec
or
pop
aam
cld
xor
jp
xor
mov
mov
movl
icebp
jne
mov
mov
sub
ljmp
cld
pop
ret
jecxz
xchg
xor
jb
cmpsl
popf
xchg
pusha
pop
xchg
inc
push
jnp
cmp
adc
push
jmp
addr16
dec
loop
and
loope
push
push
icebp
pop
rcrb
outsl
adc
push
sti
test
insl
sti
negl
test
stc
sbbb
sbb
jno
push
inc
or
mov
adc
push
pop
cmp
ret
jl
mov
aam
mov
add
addr16
or
mov
int3
pop
sbb
push
stc
or
jge
cmpsb
xchg
mov
cs
in
push
dec
push
lahf
popf
fists
ret
jecxz
adc
xor
adc
push
mov
inc
xor
inc
lcall
lahf
lahf
ds
push
lcall
shrl
bound
adc
sbb
paddusw
data16
cli
push
jg
cli
cmp
rorb
xlat
adc
sub
div
mov
inc
cmp
or
xchg
roll
mov
mov
lcall
cmp
stos
inc
inc
inc
sarb
jnp
dec
push
and
pop
push
push
test
aad
push
int
cld
insl
incl
pop
mov
xor
ret
jne
mov
pop
mov
lahf
test
xor
stos
cld
repz
lahf
xor
mov
movsb
mov
loop
cmpsl
xchg
or
divl
fimull
xor
lods
adc
sub
daa
ret
jns
ret
sbb
fnstenv
lods
and
adc
aam
sbb
into
mov
std
lds
arpl
jge
mov
push
aad
lahf
fs
xchg
mov
add
popf
mov
stos
mov
fsubp
lods
lods
push
mov
sub
in
xlat
hlt
push
pop
ret
adc
movl
dec
lret
xchg
jnp
mov
mov
popa
and
dec
push
sbb
mov
dec
scas
stc
sarb
mov
repz
scas
mov
lret
jno
lods
jo
hlt
lods
cld
sbb
mov
inc
pop
dec
scas
fldt
sub
xor
sti
mov
sbb
push
jno
push
push
rol
cmp
fildll
xchg
jg
mov
push
sbb
mov
fldcw
push
cmp
mov
inc
in
adc
or
mov
icebp
mov
inc
pop
mov
and
and
cli
jecxz
dec
je
mov
jno
mov
fadds
pop
int
cmp
mov
jg
or
outsb
aas
insb
sub
ja
imul
mov
leave
push
mov
lcall
bnd
fsubr
fimull
adc
jecxz
cs
xchg
stos
sar
aam
xor
jo
adc
ficoml
inc
hlt
fisubl
sahf
outsl
dec
mov
inc
dec
jns
add
addr16
lret
lcall
lret
mov
test
aad
out
sbb
aad
pop
repz
cmp
xchg
int3
xor
mov
mov
in
adcb
stc
addr16
jecxz
dec
cmp
push
aaa
into
dec
jl
sbb
add
jns
jl
push
add
filds
cmp
fucomp
jecxz
mov
lcall
mov
sbb
pushf
push
cld
lods
mov
adc
add
add
add
outsb
jl
push
ss
jns
ficompl
mov
push
or
das
ss
out
mov
cmpsb
in
adc
shlb
lds
aam
push
pop
or
sbb
jge
mov
in
add
mov
pop
inc
cltd
xchg
std
add
div
das
aam
dec
pop
inc
mov
scas
lock
fs
pop
outsl
icebp
aad
cmp
les
popf
push
push
push
rorl
imul
popa
das
rorb
adc
imul
sbb
shr
sarl
or
int
add
dec
inc
cmc
cmp
cmp
dec
sbb
or
aam
out
fimull
dec
mov
ror
movsl
xor
pop
aad
sti
mov
xchg
sub
std
int3
divb
ffree
xchg
push
cmpb
and
sti
aas
cmp
jnp
and
cmp
nop
bound
scas
repnz
pop
inc
movsb
lea
das
ret
outsb
js
aad
xor
stos
mov
les
dec
das
inc
cmp
repnz
test
aam
js
js
xor
test
or
repz
syscall
cmp
jo
aas
bound
jl
xchg
icebp
mov
in
jno
adc
lds
jnp
ja
pop
mov
lret
mov
fstps
jge
add
adc
sahf
int
lods
add
mov
mov
cmpsl
loope
lret
add
xor
shll
mov
mov
gs
jmp
adc
or
test
add
ja
mov
lret
or
xlat
jns
push
jle
cmp
inc
dec
cwtl
inc
jp
xchg
pusha
addl
mov
inc
lock
scas
hlt
test
movsl
jae
mov
outsl
xchg
mov
fstpt
lods
xor
mov
insl
es
imul
imul
arpl
addr16
icebp
mov
push
jb
scas
jmp
fadd
or
push
pusha
or
dec
or
xchg
in
in
sbb
add
dec
dec
cwtl
pop
lods
and
jno
jo
cmpsl
les
ficoms
jnp
call
clc
pop
pop
jp
test
mov
sbb
iret
mov
dec
pop
mov
pop
adc
xor
lods
lret
nop
mov
adc
jge
mov
cmp
jbe
jg
mov
mov
mov
push
or
push
or
sub
fwait
mov
sbb
arpl
fists
fsubs
out
dec
ret
leave
inc
and
or
std
push
movl
mov
cmpsb
into
dec
loop
xchg
insl
mov
sub
rclb
jmp
rorb
cmp
mov
fs
cmc
pop
inc
push
cwtl
or
int3
jl
ja
and
add
fwait
mov
loopne
adc
mov
jecxz
clc
fidivrs
lods
mov
cmp
std
jge
cmp
rorb
fsub
cld
movsl
jno
pop
dec
jl
push
and
loopne
jmp
fadd
lcall
xor
inc
fnstcw
adc
adc
xchg
loop
lods
mov
push
cmpsl
outsl
arpl
pop
sub
push
out
sub
xchg
add
cmp
outsl
cmpsl
andl
enter
adc
pop
xor
shll
push
sarl
icebp
or
xchg
fimull
mov
leave
xchg
sub
push
sbb
lock
aad
xor
test
sub
lret
insl
cmp
das
leave
rcl
pop
jecxz
lods
mov
xor
jle
aaa
mov
lahf
mov
sahf
fistpll
xor
and
adc
mov
jle
shlb
mov
rcrl
sbb
xchg
jmp
adc
aad
push
arpl
in
mov
dec
inc
mov
insb
inc
xor
lret
leave
out
sbb
faddl
mov
cmpsb
add
clc
xchg
adc
ret
mov
inc
sub
mov
or
mov
mov
mov
bound
arpl
insb
cli
cltd
iret
js
sahf
cmp
add
xlat
pop
stc
pop
mov
xchg
jbe
scas
cmc
nop
test
xchg
imul
cltd
jecxz
xchg
outsb
add
pop
push
pushl
mov
cmp
sbb
jns
out
jl
jnp
or
lahf
jb
cmp
movsb
in
movsl
cmc
pop
popf
and
mov
in
arpl
xchg
inc
sub
dec
pop
pop
sub
popl
lods
in
mov
dec
push
sahf
fidivrl
dec
cwtl
or
movsl
inc
jo
dec
pushw
popf
mov
test
xchg
mov
xchg
sbb
fnsave
es
xchg
push
push
and
lock
and
push
ja
sbbb
cwtl
int
enter
fisubrl
ja
dec
pop
dec
cmp
push
pusha
mov
movsb
cli
xchg
xor
mov
iret
movsb
sarl
cwtl
notb
and
add
sub
mov
sub
mov
stos
cmc
movsl
mov
jp
lock
in
test
cmp
adc
mov
adc
in
lahf
sbb
mov
sub
push
push
jg
aam
xlat
sub
pop
jecxz
movsl
aad
adc
pop
cmc
mov
in
and
xor
nop
xchg
js
std
and
mov
xchg
stos
and
dec
out
dec
add
int3
andb
call
lods
out
ss
fbld
add
inc
add
or
lret
test
stc
mov
jb
adc
aam
xor
sub
adc
je
and
lea
in
movsb
xor
imul
insb
xor
fs
pusha
hlt
ficoms
push
adc
lahf
xor
daa
scas
xchg
and
mov
dec
insl
mov
and
and
mov
mov
ret
cmp
dec
and
dec
pusha
and
ss
jle
outsb
cmpsb
push
fistl
jmp
stos
cmp
stc
in
cmp
mov
or
call
mov
mov
xchg
clc
mov
sub
test
and
aas
and
cmp
sbb
sbb
mov
or
cs
cmpsl
pop
cmp
orl
push
xchg
fdivl
adc
inc
cmp
pop
ss
repnz
dec
call
mov
sbb
inc
dec
dec
movsb
call
mov
cmpsl
dec
pop
cmpsb
xchg
push
cli
lods
jb
xchg
fsub
cltd
push
xor
dec
jae
xchg
hlt
xlat
rorb
fcompl
inc
fsubrs
xchg
test
call
test
mov
ja
shl
inc
daa
add
insb
xor
lahf
mov
cmp
adc
outsb
sbb
sbb
mov
lods
jl
cmp
aad
mov
jb
arpl
push
cmc
int3
cmp
push
or
push
lahf
sub
push
cwtl
add
cmpsl
les
cwtl
inc
push
es
sbb
in
lcall
ljmp
leave
jmp
adc
lcall
xchg
outsl
sbb
subb
fmuls
pop
test
push
push
mov
jg
push
in
test
and
dec
dec
mov
shrl
iret
xchg
ja
loopne
or
or
cs
fs
xorl
mov
nop
and
mov
aaa
mov
jmp
data16
push
adc
ret
add
bound
cltd
pop
scas
pop
aaa
pop
adc
fnstcw
inc
mov
jbe
loop
dec
les
jmp
shrb
ret
loope
adc
je
dec
add
sti
dec
sbb
bound
mov
sub
js
cli
stos
jnp
in
out
push
mov
mov
rol
loopne
out
jno
adc
dec
outsb
loop
pop
or
mov
inc
jo
popa
dec
mov
sub
sahf
outsl
lret
mov
in
insb
pop
pop
addl
adc
leave
pushf
or
mov
jg
xor
pop
push
mov
popf
mov
cs
lahf
mov
add
popl
sbb
icebp
sub
ja
mov
ror
fnstenv
cmp
adc
sarb
std
divb
xchg
lea
mov
loopne
jl
mov
cmp
movsl
mov
jl
and
ljmp
pop
loopne
pop
xor
sbb
pop
dec
ja
jp
movsl
jae
leave
push
out
rcrl
iret
add
rcl
std
mov
xchg
mov
stos
stos
sbb
ret
pop
out
sbb
cmc
pop
out
outsl
dec
outsb
cmp
sbb
jnp
inc
mov
pop
jae
xchg
pop
pop
mov
test
mov
out
xchg
pmuludq
sub
adc
out
sub
cmp
outsb
test
cmp
dec
pushf
out
dec
pop
loop
negb
loop
cmp
sub
in
xchg
popa
xchg
mov
ss
cmp
cwtl
push
mov
mov
imul
pop
ds
sbb
adc
pop
cmp
lods
jbe
loopne
jp
fwait
push
push
xchg
mov
pop
push
mov
call
mov
jp
dec
cmp
repz
mov
add
pop
or
mov
sub
inc
jns
addb
dec
outsl
push
pop
scas
popf
mov
mov
testb
xor
aam
push
shlb
out
push
jecxz
or
fdivr
adcl
aad
or
pop
faddl
les
js
call
aas
add
mov
adc
jb
es
push
lods
sub
xlat
jmp
xchg
jl
push
mov
mov
shlb
insl
mov
xchg
inc
xor
dec
or
and
xor
jne
andb
iret
leave
cwtl
push
or
mov
lods
shrl
jl
pusha
jmp
rcl
lods
mov
xor
adc
sub
adc
cmpsl
jp
imul
inc
mov
in
in
fidivrl
je
fs
sarb
mov
mov
dec
jno
lods
dec
mov
shll
dec
xchg
jnp
js
jp
xchg
cmc
aad
sarb
mov
lock
mov
and
ja
scas
mov
mov
shll
aaa
into
push
push
pop
mov
or
nop
jno
mov
cmp
and
test
or
xor
jae
ljmp
xlat
lods
pop
dec
lahf
sbb
stos
and
test
stos
loop
jno
mov
cltd
js
test
mov
fldl
sbb
xchg
mov
ja
repz
xlat
sub
and
adc
sbb
lock
pop
xlat
mov
aad
aas
and
and
shll
repnz
rcrb
or
and
push
cmp
mov
fst
rcll
xor
es
xor
or
mov
in
or
aaa
mov
inc
jns
in
iret
jb
pop
sbb
dec
in
xchg
scas
ficoml
cmp
mov
movsl
std
pop
sbb
cwtl
pop
das
addr16
push
int3
jp
adc
add
arpl
and
out
std
pop
jnp
pop
xor
das
push
cli
sub
neg
jecxz
sub
fsts
inc
pop
movsb
jp
mov
ss
jl
xchg
adc
lret
in
xchg
movsb
pop
sahf
dec
adc
ret
in
pusha
leave
int3
or
cmpl
arpl
aas
sub
adc
push
adc
shrl
cmp
fsub
and
push
dec
mov
mov
push
popf
dec
xchg
lahf
mov
imul
es
sbb
and
xor
stc
clc
movsl
mov
dec
pop
fisubrl
daa
imul
movsb
in
dec
movsb
test
xor
call
call
inc
jnp
push
pop
push
fnsave
repnz
insb
lcall
insb
imul
mov
loop
sbb
jmp
jg
ret
ds
xchg
xor
jp
dec
bnd
test
dec
in
insl
test
sub
fmuls
jne
lods
leave
inc
jae
imul
adc
sub
sub
ja
mov
push
adc
fidivrl
lods
aam
rol
stc
cmp
lea
inc
std
sbb
ret
xorb
push
lods
sahf
mov
cmp
cmp
xchg
adc
dec
sbb
lcall
popf
bound
jae
cmp
add
aad
xor
mov
jge
sub
adc
inc
xchg
mov
mov
mov
inc
jmp
movsl
test
jle
insb
xor
nop
sub
in
or
icebp
push
adc
add
mov
jecxz
outsb
xor
and
push
int
movsb
pop
mov
aas
rol
jle
mov
inc
adc
or
out
lret
dec
nop
add
stos
popl
lret
mulb
rol
xor
jp
mov
ret
stos
add
into
jecxz
imul
std
test
gs
add
sahf
inc
inc
xchg
or
mov
hlt
sub
mov
inc
insl
mov
xor
jns
popa
fucom
xor
stos
xlat
push
jne
pop
sub
fimuls
sbb
stos
adc
push
pop
xchg
cmc
neg
xorb
ja
dec
push
iret
jp
push
out
nop
sbb
icebp
add
movsb
and
mov
rorb
add
std
rcrb
cmp
shrb
sbb
fwait
mov
out
nop
adc
mov
into
mov
inc
sbb
adc
mov
rorb
push
lods
aam
and
jno
mov
jns
test
pop
ljmp
sub
mov
push
xor
addb
pop
testb
enter
data16
or
xchg
int
mov
loop
rol
or
sub
lret
in
jno
pushf
adc
inc
jle
inc
aad
push
cmp
or
jecxz
xor
movsl
and
iret
push
sahf
inc
mov
in
mov
dec
pop
pop
pop
and
mov
hlt
stos
push
mov
pusha
mov
aam
aam
aad
jg
pop
sbb
pop
fiaddl
push
arpl
pop
cmp
in
pop
jecxz
daa
cwtl
fisttps
xchg
sub
push
movsb
pusha
rcrb
jecxz
push
mov
and
lea
mov
mov
xlat
adc
ja
fdivp
xchg
out
jae
jecxz
and
xor
stos
lods
int
push
decb
in
jae
or
push
cmp
inc
mov
scas
jns
inc
mov
fiadds
push
inc
and
das
data16
ret
jae
insb
sbb
outsb
loop
loope
inc
adc
cmp
inc
inc
jp
add
jno
imul
lock
inc
pop
push
dec
lds
cmp
mov
push
lcall
ret
xor
pushl
test
mov
ss
dec
push
aas
mov
outsb
mov
ss
xor
call
or
les
cltd
xchg
push
adc
imul
das
insl
dec
lods
cltd
cmp
or
insl
sub
movsb
pop
push
inc
or
fiaddl
pushf
xchg
fisttpl
xchg
sbb
lret
cwtl
lods
mov
pop
andb
lea
je
lret
dec
shrl
int
cmpsl
mov
inc
lods
xchg
lods
inc
out
lret
inc
mov
loope
subb
repnz
js
cmp
scas
ja
mov
in
ja
push
xor
mov
insb
int
adc
lds
push
daa
or
cmp
sub
and
push
dec
xchg
adc
mov
fstl
push
sahf
imul
int
bound
std
push
imul
jle
push
bt
and
int
mov
cmp
or
cmp
push
in
lock
mov
imul
mov
es
jge
filds
scas
fadds
cmp
std
or
inc
adc
popf
cmp
divb
sbb
pop
cmpl
loope
icebp
pushw
popf
push
adc
mov
rolb
insb
adc
hlt
xchg
jecxz
mov
add
cmp
add
add
and
sar
jbe
add
pop
data16
fiaddl
xchg
pop
push
mov
push
push
lock
inc
scas
scas
movsl
fadd
mov
cli
stc
icebp
loop
nop
lods
sub
mov
sub
inc
push
mov
filds
xchg
stc
mov
add
cs
fsubs
sahf
pop
shll
xchg
loope
mov
adc
cmp
dec
jo
inc
cmc
loop
sbb
movsb
pop
pop
nop
outsl
pop
aad
fbstp
adc
mov
xchg
andb
shl
push
push
adc
cmp
dec
lods
ret
pop
dec
sbb
xor
sub
fcmovnu
rorl
leave
or
ret
or
sbb
dec
sub
pop
cmpl
std
mov
sbb
int3
lods
mov
outsb
jmp
inc
jmp
subb
sub
stos
mov
or
push
std
or
push
jne
aad
cmc
sbb
popf
fstl
insl
fidivl
pop
mov
dec
hlt
in
inc
mov
push
sub
mov
repz
mov
pusha
stos
and
xchg
repnz
pop
adc
sar
jp
dec
in
cmc
push
xor
xlat
lods
add
dec
js
pop
lahf
std
xchg
sbb
sub
push
jno
aad
pop
add
jmp
mov
xchg
mov
add
mov
pop
xchg
or
les
mov
int
popf
xor
iret
push
adc
fsubl
fldenv
gs
sub
fistl
clc
mov
mov
cld
xorl
push
add
inc
imul
or
lret
repz
out
notb
fnstenv
or
and
ret
js
test
je
jne
and
mov
scas
xor
xchg
enter
negb
addr16
xor
aam
dec
aad
bound
cs
sub
sub
and
in
je
imul
orl
sbb
call
push
hlt
out
mov
and
pop
xor
aad
mov
jge
ficomps
out
adc
mov
aad
das
jns
adc
cld
cmp
jnp
jbe
xlat
cwtl
sbb
and
leave
pushf
xor
iret
xor
cli
jns
ret
xchg
xlat
inc
adc
push
sbb
sbb
push
mov
ficomps
push
xor
jle
pop
cmp
inc
inc
ds
add
lods
cmpsl
cmc
jmp
cltd
mov
loop
rcll
inc
mov
xor
dec
mov
stos
hlt
bound
mov
orb
fbstp
jb
add
pop
or
dec
or
jb
sbb
jae
scas
sub
and
sub
cld
add
outsb
sbb
sub
fmull
test
pop
roll
mov
mov
mov
js
outsb
out
cmpsb
dec
mov
mov
dec
loopne
ret
dec
leave
in
push
sub
ds
stos
push
das
push
push
mov
je
pop
rorb
add
mov
add
jmp
hlt
movsl
fldenv
add
or
scas
add
jns
fnsave
inc
mov
xor
stos
fstl
cmc
mov
shlb
mov
imul
inc
out
mov
arpl
sahf
leave
cmp
es
mov
or
aam
xor
sub
add
push
jno
or
shrl
mov
xchg
pop
dec
popf
idivb
mov
sahf
or
jmp
pop
xchg
repz
xor
mov
ffreep
mov
dec
mov
divb
outsb
push
test
add
jns
add
mov
cmc
add
xchg
mov
je
mov
adcl
inc
fdivrs
aaa
jbe
hlt
mov
and
notl
movsb
ret
insb
mov
daa
sahf
into
and
pop
lahf
jb
sub
ds
xor
lret
incb
ja
cmc
push
xor
filds
arpl
mov
inc
fildll
clc
add
lock
fstpl
cmpsl
and
sbb
mov
ja
ljmp
and
jbe
outsb
sbb
iret
push
mov
arpl
adc
es
fsub
xchg
xchg
fldl
mov
mov
mov
mov
hlt
xchg
xchg
mov
std
jns
lock
adc
adc
es
adc
xchg
push
push
fimull
arpl
xchg
mov
in
push
xchg
xor
cli
mov
mov
fcmovne
adc
stc
inc
ja
push
jl
sbb
jno
cmpsb
out
leave
repnz
or
sbb
iret
andb
adc
in
popf
sbb
lret
xchg
data16
dec
imul
pop
aad
data16
xchg
jg
scas
adc
arpl
fcoml
add
out
and
or
ljmp
inc
gs
insb
jne
jle
pop
std
cs
add
bound
cld
xchg
mov
bswap
and
cwtl
insb
mov
mov
lret
xor
sbb
jmp
pop
pop
dec
es
fisubrl
xchg
sub
sub
ret
xor
aam
xchg
sbb
push
pop
pop
dec
or
sub
push
out
pop
cwtl
rcrb
jecxz
inc
insb
add
das
mov
and
scas
dec
cmpsb
mov
ljmp
sub
sbb
stos
or
ds
mov
test
sub
mov
pop
jecxz
out
dec
pop
into
xchg
mov
in
xchg
xor
lock
js
cmp
adc
cmpsl
mov
sti
mov
mov
cmp
lea
jbe
xchg
scas
xchg
jae
jg
lds
test
out
or
clc
daa
imul
push
sub
lock
xor
fnstenv
adc
gs
or
cwtl
add
test
mov
mov
push
and
out
lods
movsl
xchg
movzwl
daa
mov
adc
cmp
testl
out
shrb
dec
mov
adc
push
cmp
into
cmp
inc
icebp
hlt
and
adc
adc
pop
and
sub
lods
std
push
out
xchg
pushf
jg
pop
mov
xchg
in
dec
add
pop
xchg
std
mov
jns
popf
adc
lods
sub
roll
cld
mov
push
fisttps
cmp
std
out
int
sti
inc
sbbb
inc
add
out
xchg
and
add
divb
pop
xchg
push
inc
cmc
sub
cltd
push
mov
ljmp
inc
jp
sub
es
sub
rclb
cwtl
lea
shrb
add
and
fscale
dec
outsb
in
dec
dec
mov
fstl
movsb
xchg
int3
and
sub
fsub
sahf
mov
jmp
nop
ss
test
sbb
inc
jg
dec
xchg
and
and
mov
lds
mov
sbbb
or
xor
scas
jnp
lea
daa
add
enter
xchg
add
jae
pop
mov
pusha
sbb
xor
add
loopne
fwait
xor
xor
cs
and
cli
push
xor
lds
daa
jl
fisubrl
lret
mov
stc
icebp
add
neg
loope
ljmp
xchg
imul
lcall
jmp
pop
fbld
test
adc
mov
sub
sahf
push
pop
push
cmp
pusha
push
and
js
rolb
popl
push
cmpsb
pop
xor
add
lds
and
push
popa
mov
pop
cmpsb
adc
xchg
xchg
repz
fdivrl
xor
push
sub
xor
add
gs
jo
xor
jns
push
aaa
jmp
inc
push
adc
outsb
cmp
lret
sbb
sbb
in
testb
xor
and
dec
adc
loope
push
divl
xor
roll
mov
fldcw
sub
shlb
mov
jmp
movsb
adc
sub
ja
lret
std
clc
cmp
mov
push
or
xor
pop
xchg
loope
imul
or
jl
std
out
mov
call
or
jmp
xchg
xchg
lret
adc
je
push
mov
or
call
fs
mov
push
adc
sub
imul
test
sub
ljmp
cli
jno
push
xchg
test
inc
fs
clc
testl
imul
icebp
fistpll
push
ret
bound
insl
lods
test
cwtl
rcrb
dec
jle
or
aad
and
stos
shr
enter
ja
jne
xor
lods
sbb
repz
das
mov
push
mov
lock
xor
xlat
sahf
xchg
jb
pop
orl
mov
sub
pop
mov
xor
adc
iret
fwait
mov
push
movsl
sbbb
pop
fnstsw
jnp,pn
jno
adc
push
jb
inc
jnp
sbb
jge
int
bound
sbb
test
pop
sbb
dec
repz
xor
dec
fcomps
mov
scas
dec
mov
jbe
mov
jecxz
fwait
xchg
push
iret
fbstp
out
or
out
jge
les
test
dec
push
xchg
movsl
shr
outsl
fld
xchg
sub
repnz
stc
loop
mov
mov
mov
mov
push
pop
sbb
jle
mov
stc
aam
lods
cmp
pop
popa
lret
push
cmp
jb
stc
ret
rorb
adc
fcompl
xchg
cmp
movl
hlt
movsb
test
fiadds
sbb
daa
aad
outsl
leave
dec
mov
xchg
or
out
mov
xchg
add
cmp
and
xchg
mov
cwtl
add
xchg
ret
loop
aam
cmp
dec
rorb
mov
mov
rol
jno
dec
clc
inc
and
bound
inc
repnz
jne
insb
xlat
mov
imul
xor
test
jno
mov
pop
aaa
xor
repz
adc
aam
arpl
jle
or
ljmp
or
icebp
aaa
mov
nop
bound
ja
xor
xor
ss
dec
sar
out
out
xchg
call
mov
push
icebp
mov
jns
fmuls
or
adc
sbb
pop
dec
fwait
mov
lret
mov
icebp
movsb
xchg
rol
push
push
pop
divw
mov
cmpsl
push
call
std
je
sub
scas
mov
inc
mov
mov
and
fmul
in
pop
pop
sub
shrl
mov
fstpl
adcl
cmc
jecxz
out
mov
cmp
lods
add
repnz
cs
addr16
repz
aaa
mov
mull
push
xor
xor
cmpsb
xchg
dec
pop
ja
mov
mov
pop
js
and
stc
inc
xlat
mov
mov
icebp
pop
fldl
push
daa
fstpl
outsb
cmp
pushf
jmp
imul
loope
leave
lock
xchg
nop
mov
mov
push
push
adc
sahf
lea
mov
add
rcrb
fcmovnu
mov
cld
sbb
or
sar
mov
pop
loopne
fsubl
sub
icebp
insl
jb
xor
cmp
jo
mov
jg
jb
in
xchg
mov
sbbb
mov
repz
xor
pusha
in
lret
jecxz
stc
mov
jns
mov
and
addr16
sti
cmpsl
ja
pop
cwtl
lods
add
pop
fists
in
and
lock
lea
jmp
jecxz
hlt
leave
mov
and
push
fdivs
js
sbb
or
out
add
test
pop
popl
popa
pushf
shlb
add
and
ljmp
push
test
lret
xor
roll
pop
loope
popf
test
repz
adc
jno
sub
pop
ja
dec
xor
mov
hlt
fmull
movsl
in
pop
mov
mov
push
lock
push
jge
ljmp
jmp
pusha
repz
add
mov
nop
out
fistps
mov
loop
cld
pop
push
xor
dec
out
call
pop
sbbl
mov
and
pop
or
bound
subl
mov
rep
dec
lcall
mov
lea
add
je
leave
push
mov
mov
pop
jle
pop
mov
adc
add
frstor
movsl
in
jns
pop
adcl
and
loopne
popa
jnp
dec
bnd
or
imul
test
inc
cmpsb
sub
xlat
clc
and
or
repnz
mov
scas
or
icebp
inc
or
repnz
lea
jo
sub
cmp
cmp
repz
adc
add
lahf
xchg
cmp
or
pop
sbbb
sbb
adc
aaa
xor
xchg
inc
inc
dec
mov
hlt
pushf
dec
inc
lock
push
inc
in
jg
scas
xor
and
mov
pop
and
sti
mov
inc
push
xchg
ficoms
xor
fdivrp
mov
mov
mov
and
mov
cli
enter
jnp
sub
add
pop
sbb
xchg
xchg
test
cmp
mov
rorl
cmp
fs
push
sbb
sub
lds
jecxz
inc
shrl
sub
add
pop
out
call
inc
cmc
loop
loope
push
add
or
loopne
jmp
jo
mov
add
aaa
and
inc
arpl
or
leave
cli
inc
dec
inc
dec
sbb
iret
ljmp
mov
aam
in
lret
xor
xor
inc
xchg
mov
fmulp
dec
out
cwtl
out
mov
or
out
lock
push
repnz
in
adc
je
rsqrtps
pop
lea
pop
pop
mov
mov
scas
jno
inc
cs
mov
sub
fsts
in
out
or
xchg
add
idivb
inc
imul
sub
arpl
fwait
inc
pop
sbb
or
or
divb
jecxz
lahf
fcompp
pushf
jecxz
jmp
or
and
sub
stos
pop
or
or
sbb
mov
stos
into
sub
cld
lret
lea
fidivrl
mov
popa
and
add
daa
jmp
mov
inc
ret
mov
cmp
scas
fadds
js
movsl
push
mov
rol
xor
xor
jmp
cmp
stos
sub
cmp
ficompl
mov
sbbb
add
repz
cmp
stos
xlat
pop
les
push
push
inc
cmp
pop
dec
jmp
and
sub
fwait
adc
sbb
push
or
or
mov
repnz
call
les
and
inc
jle
les
sbb
movsl
push
jecxz
cmp
cmp
jp
ljmp
mov
push
and
mov
repnz
sbb
fimull
xchg
movb
add
push
sbb
cs
aad
or
xor
aad
pop
mov
movsl
mov
dec
cmp
pop
jmp
pop
sub
xchg
imul
movsl
add
dec
jnp
inc
push
in
sti
mov
mov
jno
cs
in
aam
xchg
cmp
icebp
cmpsb
xorl
push
je
roll
fdivl
idivl
mov
jp
jg
push
or
jmp
fnsave
dec
fs
aad
outsl
jo
out
dec
repz
fcmovne
and
ss
mov
jo
stos
mov
add
arpl
and
outsb
cld
push
mov
mov
out
push
int3
mov
xchg
daa
ret
mov
xor
push
sbb
scas
xor
sub
dec
data16
cs
mov
xchg
cmp
loop
sahf
sbb
cwtl
mov
mov
sbb
mov
cwtl
cmpsb
rorb
out
fwait
loopne
xchg
jmp
aam
dec
cmp
mov
mov
rorl
rcpps
imul
mov
or
xchg
sbbb
into
sti
jns
aam
imulb
and
pop
mov
mov
pop
rcrl
jae
mov
dec
add
push
pop
jo
shrl
fldl
and
subl
aad
lcall
int3
mov
xchg
mov
es
or
sbb
push
icebp
sbb
xor
arpl
cs
loope
jg
xlat
jmp
into
push
sbb
lds
mov
arpl
pop
rcrb
mov
neg
cmpsb
push
sbb
std
bound
nop
lea
adc
sub
dec
loopne
or
sbb
pop
sub
xchg
xchg
or
adc
push
lahf
dec
rcl
xor
lahf
mov
mov
xchg
popa
cmp
xchg
cmpsl
mov
fnstcw
mov
inc
aad
lock
into
push
out
push
and
cli
shrl
leave
int
inc
jmp
add
pop
push
mov
sahf
pop
jae
cmp
xchg
pusha
jnp
xchg
sbb
fdiv
sub
pop
mov
inc
mov
popf
lret
add
or
adc
pop
std
jle
mov
sarb
or
xor
addr16
test
and
cli
jmp
and
sub
fcoml
dec
inc
cmp
jp
cmp
sub
ret
divb
or
mov
dec
adc
mov
jecxz
dec
fdivrl
pop
les
xor
xchg
inc
jge
cltd
ja
testl
push
sub
dec
dec
jg
fwait
jmp
and
mov
sarl
mov
xchg
and
cmp
lods
inc
into
dec
pop
frstor
mov
jmp
flds
test
push
and
dec
inc
xor
or
shll
fxch
sahf
pop
shl
in
lea
or
iret
xchg
arpl
and
cwtl
sbb
jg
sub
xlat
dec
inc
pop
sarb
repnz
xchg
push
addb
hlt
test
jno
js
push
add
pop
xor
rcll
push
lret
ror
notb
inc
fistpll
shl
daa
xchg
adc
and
xor
pop
inc
cmpsb
rolb
jecxz
pop
shlb
pop
jecxz
sbb
jo
testb
dec
push
rorb
fnstenv
inc
and
jbe
and
and
stc
sbb
push
cmp
cmp
cmp
jb
cmp
mov
cmp
shrb
jmp
jae
mov
mov
stos
jle
jg
leave
fildl
nop
lds
in
inc
mov
cmc
lock
sub
arpl
and
fistpll
in
add
clc
mov
cwtl
and
jg
clc
sbb
outsb
into
repnz
jg
es
subl
fs
push
repz
gs
test
jmp
in
or
jae
test
jb
pop
sub
movsl
jmp
cmp
sbb
dec
push
xchg
jge
mov
pop
cmp
addr16
pop
cmp
dec
into
xchg
addr16
ret
sbb
jmp
arpl
arpl
mov
xchg
mov
std
pop
mov
jecxz
cmp
or
or
sub
push
fwait
das
mov
gs
xlat
mov
std
mov
jg
rcrl
adc
mov
pop
rolb
cmpsb
and
mov
sbb
xor
jo
xor
mov
movb
cmpsb
ja
je
push
push
int
jae
xchg
in
jl
jmp
sbb
fmuls
repz
aam
mov
sbb
xchg
mov
aaa
jl
out
xchg
loopne
aaa
int3
add
leave
pop
andl
cltd
mov
in
add
ret
or
adc
add
or
and
fistpll
pop
aas
mov
sbb
aam
sbb
and
nop
pop
test
jl
adc
push
sub
mov
adc
and
xor
test
inc
xchg
rol
mov
mov
jns
out
ficompl
clc
std
test
adc
sub
add
pop
scas
adc
push
leave
jb
mov
out
int
mov
imul
mov
ds
orl
sbb
jp
mov
pop
hlt
movsl
mov
adcb
outsb
hlt
mov
mov
xchg
das
scas
pop
mov
push
cmp
sahf
je
daa
pop
fdivs
out
push
clc
jle
ljmp
popa
inc
movsl
mov
lds
mov
fdivrp
gs
rorl
in
mov
in
xchg
xlat
push
fstp
mov
jnp
dec
mov
push
mov
hlt
mov
ffree
in
mov
xchg
je
sbb
mov
stc
test
mov
mov
in
mov
cmp
das
test
inc
mov
sbb
xchg
addr16
mov
fsubl
cld
jmp
xor
mov
or
mov
mov
ret
pop
cmp
add
cmpsl
ja
sbb
ljmp
xchg
pop
pop
adc
lret
fmuls
jne
inc
pop
shr
ret
jo
dec
iret
jo
sbb
mov
fidivl
jp
das
insb
inc
inc
mov
out
mov
mov
xor
clc
inc
adc
and
xchg
test
out
sbb
adc
loopne
jge
mov
inc
ds
inc
jae
addr16
arpl
sbb
sti
inc
sbb
mov
cltd
push
inc
mov
inc
push
sbb
pop
dec
stc
je
jge
add
cmp
loope
mov
test
pop
test
sub
rolb
sub
mov
lock
jl
fdivs
dec
xchg
dec
mov
push
add
push
fadds
out
scas
insl
lahf
cmp
enter
add
pop
cwtl
dec
dec
mov
and
pop
dec
pop
pusha
pop
adc
sub
imul
mov
cwtl
ret
mov
dec
aad
jo
test
xor
cmp
xor
sbb
sub
hlt
cmpsl
inc
mov
push
js
in
jp
shll
loope
cwtl
scas
insl
sub
mul
dec
ror
filds
add
int
cwtl
jmp
mov
lock
call
xchg
push
sbb
je
into
shll
dec
jle
jne
xchg
stc
sbb
js
icebp
dec
jae
xor
dec
adc
mov
aam
sub
push
xchg
aaa
es
rorb
push
cmc
sbb
and
sub
adcb
aam
jl
int3
inc
fwait
sbb
lret
mov
insb
lret
add
js
fwait
je
add
push
test
aad
or
adc
je
enter
addr16
rcll
test
leave
out
dec
rolb
mov
cmp
mov
pop
sahf
aam
jbe
addr16
sub
test
adc
push
aad
inc
xchg
push
adc
outsb
or
pop
dec
dec
jp
xor
dec
sbb
ret
push
and
cs
mov
mov
stos
push
xlat
push
lock
add
pop
test
and
xchg
jo
xchg
stc
insb
in
sub
push
repnz
and
shrl
nop
movsb
jno
mov
int
out
hlt
inc
out
ret
fadds
stos
data16
insb
rcl
leave
loop
fldenv
mov
add
decl
sub
mov
xor
add
sbb
sub
sbb
sar
pop
daa
stc
pop
sub
push
rcrb
push
sub
addr16
mov
psrad
out
inc
sbb
fscale
in
jecxz
mov
pop
xor
mov
xchg
test
out
scas
xor
repz
xchg
hlt
pop
inc
lds
lahf
sub
pop
hlt
add
xchg
pop
mov
inc
sahf
addr16
sub
int3
mov
fs
mov
cs
test
push
and
cmc
jae
stos
mov
hlt
mov
jns
adc
out
shrb
add
cmp
sbb
je
cmp
rcrl
pushf
cmpsl
fbstp
or
dec
mov
mov
adc
in
lods
fbld
pop
out
stc
ds
mov
cmp
pop
mov
or
mov
pop
fwait
adcb
pop
rolb
aam
sbb
push
icebp
inc
jo
push
jge
ret
out
repnz
mov
push
mov
and
add
sbb
ss
push
cmovo
mov
push
xchg
lcall
cmpsb
pop
fdivl
sub
repz
cs
cmp
gs
xor
jb
push
mov
lea
push
mov
cmp
add
nop
mov
clc
fwait
dec
rcll
cmpsl
inc
inc
pop
jmp
mov
js
in
pop
xlat
into
mov
cltd
push
add
xchg
adc
std
or
mov
xchg
pop
orl
mov
pop
jnp
in
jb
lods
sub
sbb
test
push
dec
pop
cwtl
xor
mov
pop
xor
mov
mov
jbe
bound
fldcw
xlat
mov
lahf
notl
aaa
cltd
sti
inc
das
into
mov
jo
loop
pop
jbe
sbb
icebp
lds
mov
push
cmc
mov
add
and
adc
loop
jns
mov
lahf
aaa
mov
lahf
rcrl
dec
test
cwtl
jecxz
cmp
addr16
js
jmp
orb
insl
xchg
sbb
jns
add
or
jecxz
mov
roll
icebp
je
sbb
test
out
pop
fcoml
fdivp
lret
cmp
mov
popf
and
xchg
ss
cmc
cld
pop
pop
xchg
mov
ds
and
mov
mov
in
cmc
sahf
out
js
insb
or
mov
loopne
push
push
mov
adc
icebp
les
js
jmp
aam
outsb
test
stos
and
xor
pop
lahf
sub
cmp
popf
push
lods
popf
outsl
mov
orl
jbe
or
ret
imul
or
xchg
lock
xorl
inc
fdivrl
std
lret
repz
sbb
mov
nop
push
mov
shll
aas
sbb
movsl
mov
push
mov
std
fs
inc
xchg
mov
xlat
mov
xor
sub
inc
lret
xor
in
mov
mov
movsl
or
xchg
sub
mov
sarb
iret
sbb
iret
repnz
movsb
pop
xor
lods
mov
repnz
add
mov
mov
dec
mov
mov
mov
dec
and
push
adc
fistpll
cmp
add
test
mov
inc
sbb
scas
pop
sahf
jl
jg
out
xor
xorb
in
xor
scas
push
sarl
push
orb
aaa
dec
adc
pop
out
pop
or
fs
push
mov
inc
out
fldcw
nop
xchg
cwtl
push
or
adc
mov
jmp
mov
jecxz
sbb
push
out
pusha
stos
lea
shr
sub
cmp
push
jo
in
and
cmp
icebp
enter
xchg
test
jae
mov
jbe
xor
cmp
sub
insl
cmpsb
out
xchg
insl
std
adc
cmp
jbe
dec
dec
push
js
in
int3
lahf
int
test
mov
mov
aad
push
inc
pop
pop
inc
aad
sub
mov
inc
decl
inc
sti
into
dec
mov
jo
les
cltd
shlb
mov
shrl
inc
adc
sub
lret
outsb
pop
mov
cltd
adc
mov
xchg
aas
enter
and
or
lret
lock
lahf
pop
cmp
imul
sub
es
outsb
adc
mov
mov
inc
jecxz
mov
push
sbb
ret
lcall
dec
pop
inc
mov
xchg
lcall
mov
jl
inc
mov
pusha
jo
xchg
add
sbb
ss
subb
addb
int3
movntq
jno
lret
dec
mov
cwtl
les
add
loope
adc
int3
xor
xchg
or
test
adc
bound
fcomip
loop
mov
fdivs
jb
xchg
xchg
mov
xchg
add
and
pop
aad
lods
sub
push
or
scas
sub
leave
lods
fisubs
mov
outsb
adc
mov
cmp
cmp
pop
scas
dec
xchg
ja
cmpsl
jmp
mov
jp
jo
out
jno
lods
or
jne
xor
dec
push
push
movsb
mov
dec
les
xchg
adc
aad
test
xchg
imul
cld
push
jle
push
ret
jle
mov
lea
loop
fs
pop
mov
jmp
rol
dec
pop
ret
lds
pop
bound
adc
push
lcall
nop
mov
pop
aas
and
insl
sbb
adc
sbb
mov
xlat
mov
xchg
test
loopne
int3
xchg
outsb
jg
mov
rolb
pop
test
push
nop
les
jmp
adc
mov
xor
and
sbb
or
cmpsl
ljmp
fnstcw
and
pushf
pop
stos
in
mov
push
dec
outsb
push
add
cmp
jo
lea
adc
xlat
add
ret
or
or
andl
pop
adc
xchg
call
xchg
in
hlt
push
movsl
arpl
xchg
rol
fcmovnbe
add
es
jno
ret
stos
loope
add
sub
aas
mov
pop
or
loopne
fsubl
cmp
in
jge
or
lds
ss
mov
push
pop
mov
dec
pop
cli
cmpsb
or
imul
sub
pop
shlb
repz
dec
jnp
xchg
sbb
clc
cmpsb
and
pop
pop
mov
cmp
xor
shr
jp
les
repz
pop
pop
adc
cmp
daa
xor
jg
xor
inc
add
popa
bound
jne
fs
repnz
mov
int
loope
or
mov
and
add
sbb
add
lret
xchg
imul
or
jo
pop
lret
and
mov
shlb
push
mull
lock
jns
adc
pop
lahf
mov
adcb
mov
mov
test
xchg
sahf
add
sbb
icebp
scas
dec
cmpsb
xor
lods
mov
sbb
lods
lcall
std
dec
dec
mov
xchg
xchg
fisttpll
xchg
adc
mov
loop
je
lods
jmp
xchg
jnp
xor
iret
mov
push
inc
inc
push
sti
xlat
push
push
lods
nop
fiaddl
cmc
aaa
cld
arpl
add
add
mov
xor
adc
cmp
jecxz
call
lahf
bound
add
fs
and
iret
xor
mov
or
sub
xor
push
ficoml
mov
mov
in
cmpsl
or
sub
jo
fadd
fdivrl
rcl
push
xchg
inc
lods
insb
xor
sbb
dec
cmp
call
mov
jp
or
dec
jns
test
insb
into
neg
or
aaa
pop
scas
popa
nop
fldt
add
add
xor
sbb
rcr
fucom
js
cld
push
insb
and
in
fwait
daa
inc
idivb
xlat
push
scas
lods
sbbl
les
adc
mov
cmpsl
lret
xchg
rol
mov
push
loope
inc
pand
mov
pop
lods
sahf
add
push
push
aas
or
mov
cltd
adc
out
sbb
push
mov
pushf
mov
imul
pop
pop
daa
pop
into
fcomi
jbe
jl
mov
sahf
rcrb
test
jle
scas
cmp
or
pop
je
lret
rclb
shll
ret
in
das
or
int3
cltd
jae
mov
popa
mov
fstpt
mov
je
out
lock
js
cmp
xchg
sbb
or
xlat
icebp
movsl
sbb
pop
xor
or
shlb
sub
cmp
fiadds
and
or
cmpsb
movl
xchg
or
popf
jle
test
push
ds
fs
jmp
gs
xor
jg
and
xor
popa
dec
sbb
mov
sar
cs
aam
xor
test
lahf
pushf
aaa
dec
dec
mov
sbb
sub
sbb
dec
bound
jno
out
and
dec
fstp
xchg
popa
jnp
or
mov
jmp
pop
pop
dec
xor
ljmp
es
sub
cwtl
mov
iret
jo
imul
orl
or
jb
pop
imul
jo
mov
jge
add
adc
and
das
arpl
jmp
mov
insl
std
xor
rcrb
dec
sub
pop
mov
shrb
in
push
iret
fldl2t
ljmp
sub
mov
rorl
shll
subl
test
hlt
nop
mov
loop
enter
and
dec
add
jg
jns
int3
adc
cli
aad
sarb
rcrb
lea
stos
lods
cmpsl
jae
int3
xchg
cmp
sbb
pop
loop
cltd
jecxz
lahf
idivb
pop
loope
cmc
sbb
sahf
stos
pop
jae
std
lahf
shlb
pop
leave
hlt
test
mov
mov
movsl
das
es
repnz
and
jno
rcr
xlat
nop
and
sbb
xchg
sbb
imul
roll
lods
adc
mov
inc
add
push
xor
jne
and
nop
adc
xor
in
iret
dec
dec
adc
push
cmp
add
pop
cmp
movsl
mov
insb
mov
sub
aad
test
xchg
les
lcall
into
pop
and
push
xchg
jp
or
mov
sub
mov
and
dec
add
jmp
inc
jmp
and
xor
push
scas
mov
inc
lret
leave
icebp
rcll
jecxz
lds
mov
fisttpll
pop
xor
divb
retw
cli
sub
popf
loope
push
dec
push
cmp
cmpsb
fsubs
or
imul
enter
xor
pusha
xchg
movsb
xor
adc
leave
adc
mov
fstpl
lret
jle
sbb
mov
mov
inc
xor
xchg
mov
pop
clc
rcr
push
mov
mov
mov
cmp
incb
add
adc
push
push
subl
pop
insb
and
push
in
pop
pop
stos
lods
cli
push
add
int3
int
je
or
adc
adc
adc
and
sbb
or
inc
and
fwait
insb
dec
or
jb
jl
mov
sub
call
pop
outsb
iret
lahf
das
dec
xchg
fiadds
sarb
lea
jl
repnz
sbb
xchg
mov
push
movsl
lea
mov
inc
adc
add
mov
mov
sub
test
cmpl
jmp
cmpsb
jno
xchg
pop
sub
in
pop
inc
jecxz
jns
sti
add
aas
test
daa
repnz
stos
rcrb
or
xchg
inc
insl
inc
and
ja
popf
jbe
mov
sbbl
inc
mull
mov
stc
imul
lcall
dec
lret
dec
jnp
cmp
out
and
jecxz
jnp
mov
jno
scas
mov
insl
inc
cwtl
sub
push
push
loop
push
jae
out
pop
pop
clc
sub
dec
ljmp
js
or
std
inc
cmpsb
insb
aaa
cmp
out
add
jle
andb
push
adc
jg
jle
aad
and
inc
ja
cltd
aad
cld
xor
xchg
fcmovnu
outsl
call
int
popa
lcall
pop
stos
in
ja
aaa
xchg
aaa
ficompl
jle
rolb
lods
xchg
aad
pop
test
fistpl
les
das
test
pop
xlat
jge
lret
out
in
sbb
or
add
jae
or
in
test
cmp
mov
pop
sub
cli
cmp
pop
and
scas
js
stos
add
or
mov
mov
sub
mov
out
inc
ljmp
pop
decl
outsb
inc
add
leave
fdivl
jp
or
adc
lock
adc
jae
lret
test
pop
movsb
dec
imul
dec
ja
test
mov
outsl
test
bound
jg
pusha
imulb
popf
mov
cmpsb
js
ljmp
andl
add
popw
xor
sub
stc
enter
pop
or
mov
nop
in
scas
xchg
jbe
ja
jmp
je
fucom
lret
xchg
or
outsb
movsl
and
aam
xchg
xchg
and
dec
xchg
xchg
pop
pop
aas
jge
test
aas
xchg
insl
sub
mov
cltd
xor
fstenv
mov
adc
mov
into
xchg
mov
xchg
jmp
or
iret
jo
das
ja
add
lcall
ror
cwtl
mov
xchg
mov
dec
call
sub
mov
bound
mov
mov
test
or
jmp
sub
int3
cmp
cmp
sahf
sub
or
push
xchg
xor
stc
clc
aam
xor
sub
clc
push
in
or
xor
stos
xlat
pop
testl
sub
jbe
pop
mov
push
add
cmpsb
xor
imul
pop
cmpsl
nop
iret
sti
addr16
push
jg
fwait
cwtl
xor
xchg
dec
lea
clc
out
sub
sub
push
pop
andl
inc
xchg
dec
xchg
xchg
mov
cmc
dec
add
ret
xchg
add
lods
aad
push
icebp
mov
mov
jmp
jge
arpl
jl
sarl
mov
call
outsl
jns
enter
int
dec
xchg
pusha
lret
bound
push
lret
iret
in
arpl
repz
jmp
sub
mov
outsb
mov
lods
inc
or
loope
or
int3
cmp
jne
push
add
jg
pop
lds
insl
and
lahf
out
cmp
xchg
jle
mov
fwait
es
in
xchg
xchg
cmpsb
fnstenv
aas
mov
movsl
lods
or
inc
mov
insl
push
lods
push
icebp
xor
imul
repnz
pop
lock
mov
jmp
jge
mov
lret
sub
arpl
out
mov
sub
fisttps
rclb
jecxz
adc
testl
outsl
inc
out
pusha
xchg
out
movsb
lods
dec
std
mov
adcb
inc
or
mov
fs
and
push
xchg
jp
jbe
lea
and
testb
or
xchg
std
pop
aad
enter
push
sahf
adc
sahf
outsb
out
add
je
ja
sub
das
test
dec
fnstenv
in
jae
or
cwtl
repnz
jecxz
pop
cmp
test
lcall
cwtl
and
add
inc
lods
or
out
adc
rolb
lock
dec
rep
pop
inc
sahf
cmp
and
clc
daa
out
mov
dec
inc
icebp
sbb
sbb
adc
gs
mov
adc
push
jne
mov
addl
sbb
push
std
sarb
jmp
test
mul
mov
into
sbb
dec
ret
lock
aam
sub
clc
add
mov
insl
int3
inc
out
xchg
add
stos
inc
add
adc
gs
bnd
cli
cmc
cs
fld
inc
rolb
rcr
sub
shr
insl
js
mov
inc
push
addl
ja
fdivrs
push
or
mov
jno
push
mov
pusha
mov
mov
jmp
push
or
mov
mov
push
test
mov
inc
pop
outsb
push
cmp
or
in
inc
jbe
xchg
into
cmp
sub
cmpl
leave
lcall
mov
subl
adc
inc
pop
mov
xchg
mov
xchg
add
add
imull
aam
xchg
pop
or
mov
arpl
jle
es
scas
cmp
cmpsb
sbb
sbb
and
cltd
scas
fisubrs
out
adc
adc
inc
call
jle
xlat
dec
cwtl
add
cmp
fs
pop
shr
pop
inc
mov
and
std
add
lods
adc
movl
cmp
xor
cli
adc
dec
sub
sbb
iret
and
adc
jne
mov
dec
fstp
push
in
sti
das
dec
adc
xchg
lret
ljmp
jmp
mov
mov
add
fisttpl
leave
imul
mov
in
jp,pt
stc
sbb
pop
xor
lods
ljmp
lock
in
lcall
jl
add
dec
pop
fdiv
movl
gs
cltd
mov
movsb
imul
pushf
gs
lcall
or
mov
xchg
inc
out
arpl
add
inc
scas
push
pop
test
jb
loop
mov
push
iretw
mov
pop
inc
outsl
fiadds
mov
xchg
mov
mov
setns
jbe
lock
aam
push
in
data16
dec
ljmp
fstpl
push
fcomps
inc
fldenv
jmp
movb
iret
je
xor
sbb
push
mov
xchg
js
cmp
add
out
push
xchg
xlat
sar
cmp
dec
or
leave
ret
mov
cmp
das
push
mov
testb
ljmp
pop
mov
pop
xchg
mov
incb
mov
pop
repnz
add
adc
aas
subb
call
sbb
int
add
or
mov
out
xlat
fstpt
mov
mov
loope
je
and
and
sar
push
fistps
ljmp
mov
jae
push
outsl
aam
xchg
xor
sub
push
cltd
iret
out
fdivrs
enter
dec
mov
pop
cmp
cmp
add
cltd
pop
add
mov
mov
out
into
sbb
test
mov
popf
mov
cwtl
xchg
cmp
insl
lea
cmp
push
js
xchg
mov
and
test
push
mov
adc
scas
inc
fwait
repz
adc
cmpsb
add
movsb
sbbb
xchg
ror
xor
pop
hlt
test
aaa
pop
fdivrl
pop
mov
and
fwait
adc
ret
jp
in
dec
outsl
lods
shlb
xchg
shl
and
mov
prefetch
and
adc
fldcw
aam
xor
xor
add
repz
les
adc
popf
pop
lret
xchg
lock
fsubs
aam
cmp
jno
mov
lock
mov
aaa
mov
arpl
xchg
loope
bound
push
in
jge
push
add
inc
fucomip
popa
mov
mov
push
cmpsb
sub
push
and
repnz
jnp
xchg
sbb
xchg
pop
in
mov
xchg
cmc
cmc
jg
cmp
movsb
in
shll
stos
mov
adc
rorl
xchg
loop
or
cwtl
xchg
shll
dec
cld
ret
xchg
mov
xchg
lret
inc
mov
mov
inc
and
flds
daa
mov
lahf
or
cli
out
stos
or
lcall
pop
xchg
pop
add
push
pop
mov
and
jp
test
and
ja
inc
cld
std
popf
or
push
aad
lcall
repz
cmpsl
cmpsl
push
adc
lds
add
fsubs
xor
jne
pop
pop
or
fidivrl
mov
and
in
es
cli
mov
arpl
mov
ja
adc
pop
in
xorb
adc
ret
scas
xchg
mov
outsb
cmp
pop
int3
jb
stos
add
xorl
lcall
fwait
cwtl
ss
repz
push
add
jo
pusha
loop
jbe
repz
int3
inc
xchg
fildl
jne
fisubrs
cmc
mov
loopne
pop
push
push
pop
and
cld
pop
add
in
test
sub
int3
stos
pop
inc
mov
cmp
insl
popf
popf
in
mov
sbb
rolb
lods
add
imul
pop
sbb
int
movsb
lahf
inc
pcmpgtd
push
repnz
movsb
mov
inc
mov
push
stos
and
mov
adc
push
cmc
adc
adc
imul
jns
xchg
lret
shl
sub
sbb
ja
dec
mov
insb
sti
adc
mov
push
mov
mov
repz
push
imul
ja
push
xor
xchg
das
mov
push
push
test
sar
daa
mov
add
sbb
repz
pusha
jno
mov
sub
clc
outsl
push
dec
stos
insl
push
or
stc
adc
xchg
pop
jno
sub
or
jno
stos
cltd
jae
and
dec
mov
data16
js
mov
popf
xor
push
fs
cmc
jp
dec
lock
xchg
aaa
jmp
shrl
inc
add
mov
cs
inc
push
cmp
mov
sub
scas
cmpsb
cmp
jmp
add
adc
mov
or
outsl
jbe
xchg
push
leave
gs
stc
sub
or
lods
ret
testl
imul
aaa
push
lret
sub
adc
insb
repz
aad
mov
mov
sbb
orb
repnz
add
xchg
fyl2x
xchg
xor
daa
icebp
mov
mov
mov
cmp
push
mull
std
jne
daa
or
cmp
fldt
lahf
add
cltd
push
mov
inc
sahf
dec
sbb
and
adc
push
hlt
mov
test
addl
xchg
xchg
stos
sbb
push
xor
and
scas
sub
mov
sahf
popf
scas
cmp
ljmp
bound
inc
fcom
jo
leave
rcl
mov
cmc
mov
or
rep
add
pop
inc
jno
xchg
sub
mov
xor
sub
jb
int
mov
and
xor
adcl
mov
inc
jnp
xchg
xor
imul
rorb
push
stos
dec
sub
rcrl
stos
shr
jle
xlat
out
test
sbb
and
dec
aad
inc
sbbb
jbe
lea
js
andb
mov
clc
pop
gs
xor
cld
nop
repnz
pop
xchg
lahf
adc
jns
out
dec
loope
test
out
pop
sbb
shlb
jno
and
and
adcb
fs
ljmp
mov
test
pop
inc
rcr
jge
pop
xor
lret
xchg
or
enter
xlat
push
sbbl
mov
pop
add
mov
xchg
dec
sub
pop
mov
jae
scas
pop
popl
sti
ret
jno
jbe
mov
mov
pushf
shlb
fadds
mov
mov
out
mov
cli
dec
mov
xor
sbb
xchg
movsb
jb
push
xor
leave
in
jle
pop
testb
cs
jp
mov
pop
les
or
loope
push
data16
enter
jmp
mul
outsb
sbb
push
cmpsb
pop
pop
jmp
enter
hlt
bound
hlt
lcall
andl
out
mov
scas
das
mov
fidivrs
jge
push
sbbb
dec
ja
lock
movsl
jbe
and
add
inc
out
test
push
adc
imul
push
jno
jo
sti
popa
out
addr16
fcmovnu
loop
mov
jo
add
pop
pop
aas
mov
pop
sbbl
add
cmp
lods
lea
cs
mov
push
loop
outsb
subb
jmp
je
stos
rcll
mov
popa
adc
cmp
je
in
jnp
jmpw
jl
mov
xchg
or
pop
jle
inc
jp
test
stos
outsl
pop
mov
or
std
lret
imul
push
mov
fiadds
push
and
add
movsl
dec
sbb
mov
mov
sbb
lret
dec
out
jbe
lret
or
xchg
pop
sarb
stos
xor
fisubl
sub
sub
sbb
adc
in
mov
std
out
insb
cmp
test
sub
movsl
add
mov
pop
shl
popa
dec
popa
xor
push
and
dec
dec
pop
cmp
fsubrl
mov
sub
xchg
push
xor
sbb
in
sbbl
jp
cli
xor
iret
dec
int3
inc
inc
mov
je
dec
push
lret
mov
in
orb
mov
mov
sbb
or
lahf
pop
pop
test
test
fs
inc
movsb
shr
sub
out
stos
lods
icebp
fcmovnu
and
sti
dec
mov
add
movsl
popa
scas
xor
mov
jo
add
ja
push
out
mov
rcrb
leave
popa
inc
xor
leave
lock
dec
cmpsl
cmp
pop
cwtl
js
out
mov
call
mov
pop
rorl
test
jge
lahf
sub
xchg
push
and
stos
push
or
or
insl
mov
int3
inc
and
jg
rcl
cmp
pop
test
mov
movsb
in
lock
test
push
cltd
mov
push
out
xchg
aas
das
dec
insb
loop
inc
hlt
jmp
out
test
push
lock
in
jge
or
push
xlat
cmp
int
cli
out
loope
repnz
out
add
inc
jge
and
push
xlat
fsts
pushf
and
scas
mov
add
in
aas
cmp
insb
mov
adc
shll
mov
add
ficoms
das
stc
mov
adc
add
rcll
sbb
paddw
fs
es
loope
iret
jno
jge
lret
pop
xchg
jp
outsb
fwait
cwtl
int3
out
xor
push
fistpl
mov
inc
data16
pop
sub
psubusw
adc
mov
push
or
or
push
das
cwtl
xchg
mov
jae
dec
icebp
cmpsb
shll
fldt
rorl
pop
dec
lret
push
cld
pop
fdivrl
mov
nop
cmpsl
inc
xchg
mov
movsl
mov
mov
lods
or
jmp
inc
and
test
mov
inc
sub
out
xorb
repz
fcomp
pop
imul
jnp
stos
rolb
add
xchg
add
mov
inc
jg
jae
jle
adcl
or
scas
adc
jb
fisubl
mov
mov
dec
xchg
aaa
pusha
jo
jno
roll
out
shr
or
jecxz
jge
fistpl
flds
insl
add
lret
mov
dec
dec
je
jbe
xchg
aam
icebp
or
dec
ffree
test
daa
xchg
mov
push
mov
divb
in
cmpsb
xchg
setge
mov
aad
stos
xor
icebp
out
ficoml
sahf
sar
fsub
xorl
divl
sbb
jo
jg
loope
adc
mov
mov
or
sbb
test
out
imul
inc
out
jo
faddl
and
pop
inc
subl
mov
ja
xchg
jo
mulb
or
xor
pop
xchg
adc
push
aaa
xchg
inc
mov
or
addl
xchg
jge
shll
nop
mov
lock
fists
add
loopne
repnz
adc
add
divb
pop
cli
es
jnp
repnz
cmc
test
frstor
fs
and
jo
and
shll
cmp
pop
push
aas
pop
lcall
jae
and
xchg
fistps
cltd
jae
out
xor
mov
or
push
sub
mov
or
and
add
enter
mull
push
and
insb
fcmovbe
insl
jecxz
mov
jae
adc
stc
mov
add
incl
xor
out
inc
test
incl
test
iret
adcl
scas
std
jle
sahf
adc
mov
daa
dec
adc
adc
icebp
pop
mov
lcall
mov
pop
in
lcall
dec
cmp
cmp
imul
mov
sbb
cld
mov
cmp
lods
stc
loopne
pop
lea
ljmp
sahf
sbb
add
push
xchg
push
ljmp
lcall
pop
lods
stos
or
movsb
dec
divl
mov
jo
xorl
push
push
xchg
es
dec
cli
mov
pop
mov
adc
or
jecxz
cld
add
mov
imul
or
aam
fldenv
and
aas
ficoms
ret
adc
pop
sub
mov
jmp
enter
mov
hlt
cld
popa
int3
jg
test
inc
dec
pop
leave
int3
test
shrb
sbb
jmp
xchg
call
cld
lods
add
mov
xchg
push
fsts
adc
hlt
out
xchg
hlt
testb
mov
mov
add
lea
dec
dec
pop
push
outsb
adc
adc
cmp
xchg
fbstp
mov
mov
test
mov
sarb
jae
pop
jmp
leave
jno
sub
cwtl
inc
loope
test
out
pusha
pop
and
jmp
xchg
adc
insl
mov
mov
ds
or
add
or
insl
jl
push
inc
imul
push
lods
scas
enter
in
jl
pop
mov
cwtl
in
dec
out
scas
sub
movsl
aad
cmp
rorl
push
out
cmc
sub
adc
jge
dec
daa
cmp
std
jno
jns
jge
or
int
rcrb
inc
xchg
daa
lar
mov
jae
sbb
aaa
fnstsw
arpl
jns
and
add
jg
mov
fistpll
adc
xor
pushf
cmp
int3
inc
pop
sub
scas
jg
dec
push
dec
arpl
fcmovbe
popa
pop
loope
nop
mov
ret
mov
xchg
adc
fwait
int3
cltd
xor
and
jmp
mov
mov
into
jno
adc
sti
int
and
mov
pop
push
call
bound
or
call
test
adc
fs
sbb
fs
cmc
or
adc
in
mov
adc
call
jg
popf
xchg
mov
jne
dec
mov
jno
dec
dec
lods
pop
popa
mov
in
sbb
mov
push
ret
or
shrb
mov
or
mov
mov
lods
jns
iret
repnz
xchg
std
rcl
or
xor
bound
jnp
call
inc
push
data16
enter
xor
cli
imul
push
insl
mov
in
dec
mov
pop
sub
inc
lods
mov
insl
dec
mov
nop
js
sub
dec
or
inc
ftst
dec
dec
shl
xor
scas
test
lds
pop
mov
xor
adc
push
outsb
sti
cmpsl
xchg
cmp
insl
xchg
int3
sbb
jecxz
add
lods
dec
inc
clc
mov
sub
xlat
adc
out
mov
or
inc
ds
adcl
mov
pop
std
faddl
dec
cmp
lods
scas
mov
stc
pushf
xchg
inc
mov
sbb
loopne
scas
mov
ss
popf
hlt
mov
imul
rorb
popl
lea
push
xchg
call
and
cmp
sbb
sbbb
push
add
stos
in
mov
mov
jae
push
repz
pop
testb
sub
gs
daa
popa
mov
arpl
clc
sbb
test
pop
out
out
sti
pop
push
mov
sub
aas
jo
push
dec
std
mov
push
ret
call
leave
jp
cld
xor
and
xchg
iret
fnsave
daa
std
jge
daa
mov
xor
add
mov
ret
push
pop
xchg
jle
stc
pusha
inc
sbb
cmp
push
adc
outsl
sub
rcll
ljmp
fldcw
mov
push
test
mov
adc
xor
xchg
mov
and
xchg
lret
pop
pushf
adc
lea
pop
lcall
inc
rorb
cmp
imul
outsl
clc
push
idivl
mov
cmc
mov
xorl
inc
mov
cmp
push
add
sub
outsl
or
pop
aad
shll
jne
adc
lods
xchg
push
xchg
adc
in
lds
outsl
cmpl
aaa
ljmp
popa
arpl
sarl
or
std
ret
sbb
jns
jge
out
out
mov
popa
cmp
pop
daa
das
add
dec
sub
add
in
inc
push
pop
add
push
pop
das
js
jp
cmp
out
jb
pusha
mov
mov
pop
cmpl
add
push
mov
push
dec
dec
imul
mov
call
sti
les
fisubrs
shlb
testb
lret
dec
mov
mov
dec
or
mov
cmp
stos
cmp
rcl
fcomps
icebp
cmp
aas
mov
add
jns
jge
fcmovnu
jbe
popa
stc
fwait
bound
aas
outsl
loope
push
push
outsl
mov
push
loopne
adc
or
cmp
sbb
cmp
cmp
fnsave
mov
push
sub
or
lods
sbb
cvtps2pi
dec
jge
push
jae
imul
bound
ret
dec
stos
xchg
pop
fwait
push
loope
call
in
xlat
push
lods
aam
daa
push
push
repz
mov
out
sub
inc
test
xor
in
sub
jmp
repnz
cmp
xchg
popa
stos
test
sub
jge
mov
xorb
push
cmp
add
inc
pop
roll
daa
mov
or
jle
push
out
push
dec
adcl
push
pop
xchg
jns
mov
xchg
add
mov
adc
int3
iret
push
fidivs
xor
xchg
hlt
jp
ficompl
insb
mov
sti
ret
add
mov
loope
push
adc
js
xor
mov
pop
andb
inc
pop
cmp
repnz
xchg
or
out
push
jne
push
lods
idivb
inc
fisttpl
je
iret
test
add
lds
jg
sbb
jl
cwtl
into
inc
cmpsb
inc
pop
mov
ficompl
pop
pop
jg
jp
scas
in
xchg
mov
fistl
repz
stos
cmp
iret
repz
mov
fsubs
sub
sbb
js
inc
mov
stc
pop
arpl
test
mov
inc
fcmovnb
and
icebp
roll
bound
inc
daa
add
jge
mov
les
scas
insb
pop
cltd
mov
aaa
ljmp
mov
xchg
repz
pusha
fwait
adc
xchg
push
pop
cmp
sub
test
xchg
insb
cld
cmp
pop
mov
in
sbb
jae
enter
movsb
sub
mov
inc
push
rcll
sti
bt
xchg
cmp
ss
cmpsb
and
aam
lods
movsl
cmp
push
jnp
test
loope
outsb
or
pop
cmpsb
pop
mov
arpl
enter
push
fisttpl
jmp
xchg
mov
shrl
push
cs
dec
push
cmpsl
xor
jbe
jg
adc
jge
fwait
cli
roll
int
cltd
leave
enter
lods
ror
clc
jae
mov
cld
adc
arpl
mull
push
loop
in
mov
or
jl
mov
sub
inc
push
js
cmp
adc
jle
add
out
fs
in
push
mov
xor
pop
je
lcall
mov
jge
sti
jp
in
jg
icebp
sarl
mov
jge
les
jmp
jmp
scas
fucom
xchg
pop
sbb
andb
mov
test
jmp
popa
xchg
sub
sbb
sub
sahf
jecxz
test
jb
adc
sbb
scas
test
mov
fnclex
dec
xchg
adc
dec
cmp
shlb
mov
stc
or
mov
or
cmp
sbb
ret
or
xchg
cld
in
mov
fisubl
dec
je
add
addb
in
mov
mov
pop
mov
outsl
cmp
stos
test
pop
xchg
icebp
adc
cmp
jb
shll
test
aam
outsl
xchg
fdivrp
jne
adc
xchg
fcoms
jae
test
add
dec
xorb
adc
ret
dec
dec
dec
scas
sub
xchg
pop
inc
pop
negb
xor
cmp
dec
adc
idivb
sbb
imul
stos
test
in
sbb
xchg
add
add
or
xchg
xchg
mov
adc
sbb
loope
lahf
lcall
sub
mov
inc
sahf
shlb
lcall
pop
xchg
movsl
fbstp
or
push
pop
inc
movsl
bound
pop
and
adc
mov
add
gs
or
pushf
mov
lods
sbb
xor
xor
gs
in
cmp
fcoms
sbb
test
in
test
cli
andb
pop
xlat
and
add
addr16
fisubrs
jb
sub
pop
ret
or
mov
jge
xchg
hlt
fldl
sbb
test
pop
cmp
test
dec
shll
adc
pop
mov
cmp
fmul
pop
inc
cmpl
insb
adc
stos
dec
cmp
adc
jecxz
in
stos
cmp
pushf
jns
test
pop
jge
cs
xor
lret
adc
popf
xchg
mov
in
js
jmp
push
pop
or
mov
lds
outsl
dec
dec
fidivrs
cwtl
nop
je
imul
sub
pop
and
ret
out
je
gs
fldcw
nop
pop
xor
sar
push
outsb
cli
js
mov
rcrl
inc
sbb
out
or
mov
pusha
int3
mov
push
push
sbb
mov
stos
or
shlb
sub
aas
and
lret
repz
pop
in
xchg
popl
jne
pusha
int3
dec
pushf
ljmp
mov
jns
je
fs
mov
pop
fwait
hlt
scas
mov
sarl
call
movsb
dec
scas
adc
mov
inc
test
rep
out
arpl
aas
testb
ds
dec
paddd
inc
sbb
mov
mov
xor
ficomps
call
and
subb
lcall
push
push
mov
sub
lea
ljmp
cmp
hlt
and
aam
outsl
adc
jp
jno
inc
inc
jb
push
testl
loope
shlb
stos
cmp
fldenv
lods
add
sarb
enter
or
mov
jae
ljmp
push
pop
scas
outsl
sahf
xchg
inc
js
cmpsb
push
movsb
mov
mov
std
rcrl
mov
adc
loopne
xchg
mov
fildll
sahf
sbb
jl
loope
loop
adc
iret
lahf
cs
add
fildll
add
add
xor
sar
inc
orl
aad
mov
pusha
gs
outsl
or
or
sti
mov
sub
cmc
cmc
lret
mov
ret
jmp
jg
insl
mov
lahf
cmp
sub
adc
sbb
or
lock
out
mov
loop
jbe
push
cmp
pop
inc
lret
mov
ljmp
sub
lds
bound
adcb
out
insl
push
stc
sub
stos
cs
lret
mov
nop
mov
add
push
adc
mov
xor
xor
sbb
dec
clc
or
not
scas
test
xchg
lret
mov
int
sbb
adc
pop
scas
lds
dec
fistps
pop
das
shlb
in
aas
gs
iret
aad
inc
jb
icebp
arpl
rclb
test
je
movsl
mov
push
adc
push
cmp
mov
or
push
adc
cld
jmp
inc
sbb
enter
adc
pop
cmpsl
iret
stc
leave
jl
das
adc
aas
or
test
aas
or
push
jmp
mov
sub
scas
xchg
mov
loopne
mov
fidivrl
cmc
push
mov
loopne
xchg
inc
sbbl
bound
jo
data16
sbb
outsl
test
imul
jl
popf
jne
ljmp
ret
sti
sti
and
scas
cmpsb
fmuls
xchg
mov
mov
xor
std
lret
jns
loopne
loope
adc
adc
loope
cltd
data16
sub
fwait
cmc
sbb
outsl
ror
adc
sbb
mov
es
mov
jbe
jno
or
je
shll
jno
outsb
rcrb
fcoml
insl
or
mov
ret
cli
std
sti
fistl
popf
cwtl
add
xor
std
addr16
aam
roll
adc
sbbb
mov
notl
es
repz
add
jns
imul
dec
jbe
or
es
inc
pop
and
ja
add
mov
out
adc
mov
and
sub
stos
or
cwtl
sub
sub
icebp
andb
or
jo
push
mov
outsb
int3
ret
inc
xchg
xor
cmp
div
sub
inc
ljmp
and
and
fcmove
push
mov
mov
aas
sti
mov
fcoml
or
js
jne
xor
cld
jne
dec
mov
jnp
mov
or
push
push
sar
pop
add
xchg
hlt
hlt
mov
jmp
cmpsb
mov
aam
lea
inc
jg
aaa
movsl
add
adc
sbb
ret
push
add
addr16
sub
inc
pop
cmpsl
loopne
push
psrlq
scas
sarb
pop
and
mov
fcomi
cs
shll
mov
sbb
sbbb
push
repnz
jle
inc
cmp
out
popf
ret
rcl
adc
ds
sub
mov
out
outsl
dec
nop
rcl
shrl
outsl
cmc
js
add
in
pop
jecxz
and
cmp
adc
popf
pop
xlat
pop
push
dec
pop
inc
xchg
dec
bts
or
in
fnstsw
mov
cmpb
lods
mov
jle
xlat
vunpckhps
cmp
repz
addr16
mov
aad
test
cmp
fisubs
fmul
int3
testl
call
ljmp
je
lret
adc
call
inc
mov
ret
jp
scas
add
insl
sahf
xchg
mov
jnp,pn
jle
repz
test
sahf
jb
dec
push
xchg
ss
cli
fistpl
sbb
lods
fildl
sbb
mov
lea
std
inc
les
xchg
std
dec
hlt
adcl
xor
test
fisubrl
movsl
enter
xchg
inc
cld
daa
leave
mov
mov
xchg
pop
or
cmp
rcrb
les
jge
sbb
sub
loope
xchg
mov
pop
add
movl
in
xorl
mov
cmp
dec
in
jo,pn
jle
ds
lret
or
push
fsubs
div
pop
mov
ja
cmp
mov
and
outsl
popf
fwait
adc
xor
sahf
xchg
movsb
movsb
fwait
cld
popf
xchg
and
aad
mov
jb
popa
jo
mov
push
outsl
add
mov
mov
sahf
xor
push
sbb
sub
dec
sbb
pop
xchg
insb
mov
sbb
jmp
cltd
popa
inc
add
push
xchg
push
aam
ds
je
jno
pop
lahf
mov
fdivrs
jb
outsb
mov
push
lods
push
add
pop
pop
add
vminpd
mov
pop
pop
push
jno,pn
loop
hlt
repnz
jle
jbe
jno
fucomi
sarb
jg
sub
adc
stos
xlat
adcl
loop
movsl
out
rcrl
cld
add
test
xor
mov
pop
dec
setne
inc
mov
aas
ret
fwait
sub
insb
pop
adc
shl
sti
hlt
scas
mov
jae
imul
sbb
cmpb
push
push
popf
add
out
test
add
in
sub
and
sub
stc
xor
test
data16
xor
add
pop
push
cwtl
jae
jecxz
lahf
jge
mov
repz
bound
jp
mov
mov
rcrl
adc
sti
fists
inc
out
mov
push
rcll
jp
inc
push
add
pop
sbb
adc
icebp
mov
dec
out
not
dec
inc
test
cli
mov
test
xor
int
pop
test
into
mov
sbb
movswl
gs
mov
cmp
dec
or
adc
jecxz
adc
xchg
push
dec
stos
push
jmp
cmp
inc
fwait
xchg
xor
pop
dec
pop
or
xor
bound
mov
xchg
push
jg
and
xchg
jmp
or
adc
lret
mov
push
cmp
cmc
jne
mov
mov
xor
dec
lds
lret
addr16
out
push
pop
insl
ja
ret
aas
decl
xor
fcomip
das
lahf
adc
mov
lock
fldcw
in
mov
popf
jg
dec
xor
mov
mov
push
pusha
push
xchg
scas
lods
xor
cmp
insb
adc
pop
pop
imul
or
mov
cwtl
push
pop
pop
mov
mov
into
lds
jle
shl
adc
dec
mov
cwtl
mov
mov
cmp
dec
mov
pop
sti
out
inc
cmp
scas
xchg
scas
adc
loope
add
out
mov
mov
inc
dec
fnsave
or
movsb
bound
aam
fisubl
stos
negb
clc
push
push
jmp
imul
js
in
sbb
mov
fs
ret
jl
inc
aad
xchg
dec
addr16
pop
xor
std
or
cmp
jg
jne
sub
sub
pop
pop
pusha
movsb
or
jae
sub
sbb
adc
mov
es
inc
cld
adc
mov
cwtl
lret
sbb
stos
xchg
push
xor
outsb
inc
lahf
lcall
mov
jns
pusha
cltd
inc
xchg
sub
dec
sub
mov
sbb
add
imul
xor
or
push
and
mov
shl
mov
jge
cmpsl
stc
imul
hlt
inc
enter
outsl
and
push
jb
adc
sub
sub
jp
mov
push
or
pop
push
popa
inc
and
xchg
sub
sbb
mov
fcompl
orb
pusha
mov
jle
imul
lcall
add
and
mov
and
mov
fwait
lods
scas
jae
pop
or
mov
xchg
aad
nop
cli
push
adc
xchg
and
imul
and
xchg
xchg
repnz
cmpl
pop
push
sbb
sbb
aaa
and
loope
fwait
mov
test
int
repnz
imul
jno
jne
xor
dec
shll
bnd
pop
adc
dec
aam
loopne
add
imul
in
sbb
xor
shlb
cmc
add
fidivl
insl
fstp
xor
mov
daa
andl
aas
sbb
and
sarb
sahf
dec
leave
clc
jle
xchg
dec
ljmp
mov
xchg
xor
fsubp
ljmp
outsb
inc
add
fisubs
jg
mov
cmp
test
mov
push
shr
roll
fcmovb
iret
filds
aas
imull
std
mov
pop
pop
dec
jno
sbb
rorb
call
mov
pop
lock
sub
ss
push
pop
rorb
rorb
cmp
cs
scas
popa
xchg
mov
or
sahf
or
scas
mov
push
cs
jbe
mov
icebp
movsb
lds
push
fwait
dec
dec
jo,pt
popf
dec
sbb
mov
xchg
adc
sub
cmpsb
push
xor
call
lods
pop
push
into
fnstsw
mov
xchg
cmp
je
and
xchg
xlat
test
and
mov
nop
jle
movsb
test
mov
call
movsl
xchg
pop
arpl
je
push
xchg
push
ss
sahf
jo
sub
mov
pusha
xchg
xor
sti
mov
pop
push
insl
xor
clc
xor
ds
cmp
jg
push
out
sub
sub
fwait
std
xchg
into
pop
rcrb
cmpsb
stos
test
lock
adc
push
movsl
sub
loopne
jnp
fmul
rcr
cltd
inc
or
mov
adc
xchg
xchg
add
dec
lea
jle
imul
mov
jb
push
xchg
lods
sti
push
mov
dec
sub
mov
pop
xchg
jl
cmpsl
push
xor
sahf
stc
sbb
fmull
push
mov
xor
cmp
enter
scas
or
subb
lahf
lock
jecxz
pop
das
pusha
test
adc
cmp
imul
push
cmpsb
clc
xor
js
sti
xchg
push
mov
sbbb
imul
lds
test
jmp
test
sahf
adc
movsb
dec
cmp
or
jb
cwtl
scas
icebp
dec
cwtl
lahf
test
adc
pop
sbb
jl
cmp
mov
inc
ret
out
mov
jmp
repz
cmc
fcoms
sarb
xchg
pushf
xchg
pop
sub
jg
imul
je
iret
dec
call
fists
cmc
lret
jl
hlt
hlt
lds
mov
pusha
adc
nopl
popa
jb
sub
push
das
rorb
cli
mov
jge
cld
dec
repz
pop
xlat
cmp
push
cwtl
sti
out
in
add
mov
addr16
pop
aam
popf
xchg
fldcw
cmp
lcall
rcll
push
jns
ss
or
bnd
cs
and
ret
jle
loopne
das
fnsave
xorb
aas
dec
imul
dec
sarb
test
dec
and
aas
push
int
sub
mov
popf
jae
jmp
and
aas
leave
lods
or
push
sbb
push
aaa
sbb
sbb
inc
mov
aad
xorb
dec
hlt
insl
mov
xor
ficoml
mov
data16
mov
aas
mov
lea
je
cmpsb
xor
cltd
xchg
mov
push
lods
push
jl
loop
push
xor
and
cmp
scas
rorl
adc
lcall
addr16
pop
in
in
push
shll
mov
mov
push
cmp
inc
add
loop
outsb
outsb
mov
stos
xchg
xorw
inc
sbb
scas
js
imul
jle
adc
jp
sti
add
lcall
pop
ret
daa
rorl
out
pop
mov
popa
fistps
ljmp
sti
fwait
cmp
loop
mov
jmp
dec
pop
or
popa
outsb
or
or
sub
std
cmc
loop
add
add
mov
cltd
xchg
es
aaa
push
test
sbb
cld
sbb
or
and
add
xor
mov
adc
fscale
out
add
jmp
sbb
and
fldenv
mov
xor
sub
push
sub
sti
add
sbbb
sti
inc
rorl
mov
jmp
out
adc
cmp
in
pop
ret
sbb
mov
test
push
and
out
pushw
and
mov
xor
xor
pop
ja
cltd
inc
std
dec
movb
inc
hlt
mov
sub
inc
popf
stc
mov
xor
mov
adc
mov
es
cmp
das
mov
dec
push
add
call
add
ret
jg
daa
stos
mov
add
ret
push
push
pusha
or
sbb
jo
mov
aad
mov
inc
hlt
movsb
mov
in
mov
pop
inc
data16
les
in
mov
jo
or
pop
loop
outsl
bound
fcmovnbe
in
inc
mov
pop
in
aas
push
shl
dec
imul
mov
popf
js
jmp
repnz
push
mov
inc
scas
inc
sbb
out
pop
jno
jns
dec
jo
hlt
test
pop
cmpsb
cli
mov
mov
sahf
mov
lock
add
mov
into
stos
cwtl
mov
pushf
cli
pop
pop
pop
add
call
out
leave
pop
cmp
sub
dec
push
cltd
sbbb
pusha
sub
xorl
aaa
or
inc
cld
bound
push
repz
dec
lds
iret
das
div
cmp
mov
out
cmpsl
imul
sahf
movsl
bound
xchg
and
inc
xor
ret
dec
test
mov
hlt
lods
outsl
mov
push
lock
or
adc
xchg
jae
push
fnstsw
inc
push
add
dec
adc
jnp
jl
adc
sbbb
out
xchg
inc
mov
in
mov
inc
jmp
cmpsb
iret
and
mov
lock
aas
mov
rol
dec
sub
fistps
loopne
cli
sahf
cld
out
inc
xor
sbb
addr16
push
mov
fcoms
and
repz
clc
inc
jae
add
test
xor
pushf
insb
ds
sbb
xchg
fbstp
add
loop
sahf
inc
addr16
adc
jmp
insl
scas
mov
xchg
and
lret
inc
sub
adc
and
andb
popf
in
scas
sub
mov
cmp
ficomps
xchg
push
lea
jmp
ret
sbb
mov
inc
sbbb
xor
mov
push
in
mov
leave
sub
lods
sbb
mov
xchg
cmp
inc
inc
pop
andl
mov
cs
arpl
fidivs
adc
dec
mov
inc
dec
dec
push
ds
je
sub
mov
scas
xchg
imul
xchg
scas
add
outsl
push
sti
pop
jnp
inc
inc
mov
mov
int3
les
pop
and
inc
aas
in
mov
push
inc
sub
cli
shrb
sbb
repz
in
and
xor
sti
pop
loop
aad
test
lock
dec
inc
inc
popa
mov
in
test
imul
rolb
rcrb
loopne
movsl
pusha
sub
aaa
dec
jge
pop
or
jge
lret
aaa
stos
push
add
jnp
ret
je
xlat
xor
out
and
mov
popl
aad
rcr
pusha
ljmp
daa
mov
scas
fsubs
pop
sub
ret
out
pop
neg
mov
push
sub
pop
aad
jo
sahf
lret
aam
leave
pushf
xor
sub
pop
ljmp
push
mov
pop
aam
into
movsb
xorl
mov
dec
pop
sub
push
std
mov
test
sub
sub
or
xor
nop
push
mov
inc
stos
push
pop
add
into
gs
jno
mov
imul
lahf
mov
fwait
sub
xchg
rcll
loope
pop
int
movsb
sbb
mov
imul
adc
mov
mov
xchg
jns
pop
xchg
inc
jl
outsb
in
out
jbe
aam
fistl
in
pop
aaa
lea
loopne
mov
fbld
movsb
and
int
pop
sub
push
sbb
les
sbbb
dec
dec
je
mov
push
lods
mov
addr16
push
pop
pop
movl
mov
sub
nop
pop
testb
jg
fidivl
mov
dec
stos
push
sub
mov
out
jg
rorl
xchg
shl
fwait
dec
andb
xor
sub
inc
orl
inc
lret
jle
inc
lods
xchg
mov
arpl
or
and
and
push
das
lret
repnz
cld
in
mov
fs
sub
in
leave
nop
dec
adc
pop
push
daa
dec
mov
jecxz
jno
pop
jbe
mov
xor
push
adc
xchg
icebp
mov
xchg
lods
stc
into
lock
movsb
fadds
fdivp
sbbb
adc
xlat
lahf
mov
xor
jg
sti
dec
cmp
cmp
stc
push
pop
insl
inc
add
shlb
jmp
adc
cmp
sbb
adcl
xor
jo
xor
nop
aad
in
mov
std
aad
jmp
subb
cmp
push
insb
pusha
loope
or
dec
jecxz
dec
jo
cltd
dec
push
and
nop
inc
and
mov
adc
push
adc
push
mov
fdivrs
bnd
sarl
pop
sbbb
js
sbb
dec
or
mov
push
pop
aam
pop
cmp
mov
loopne
add
dec
cmp
ljmp
mov
push
mov
mov
loopne
xchg
push
dec
mov
cmp
lds
push
mov
lcall
lods
mov
lcall
das
rcl
push
adc
cmp
add
mov
cmpsl
xor
cltd
shlb
insl
sbb
pop
or
adc
mov
or
popa
jbe
dec
mul
inc
push
mov
jne
sti
rcll
cld
jle
jmp
lahf
popf
inc
sbb
insb
scas
shlb
movsb
adc
and
cs
stc
aaa
jg
cmpsb
mov
movl
cmp
shll
insb
pop
outsb
mov
loope
aaa
pop
dec
dec
add
push
aaa
xor
and
xchg
dec
into
lods
icebp
sbb
xlat
enter
add
pop
cmpb
clc
jo
hlt
fucomi
outsl
push
mov
nop
mov
daa
ret
pop
andl
xchg
or
mov
xchg
pop
mov
loopne
cmp
sbb
sub
leave
jbe
lret
daa
cld
xor
loopne
push
outsb
hlt
inc
xchg
fimuls
and
push
mov
add
aas
out
cmp
pop
std
add
inc
xchg
mov
icebp
in
fs
movsl
repnz
loop
and
mov
xor
pop
in
jno
pop
or
xor
cmp
mov
sub
mov
movsl
pop
xlat
xchg
rclb
hlt
lea
xor
lret
aam
imull
loopne
stos
in
and
sub
push
mov
inc
mov
into
aam
mov
dec
ret
pop
pop
push
adc
xchg
mov
adc
mov
jle
mov
leave
push
int3
pop
or
sbb
jmp
dec
push
pop
arpl
inc
xor
xchg
or
adc
lock
aaa
fldenv
stos
std
daa
mov
xchg
cmp
mov
pop
adc
repz
inc
dec
push
in
adc
std
cltd
ds
sbb
sub
cld
lds
xchg
imul
out
pop
movsl
test
inc
std
add
dec
mov
sbb
adc
mov
outsb
je
mov
inc
xlat
xlat
xchg
into
xchg
lds
inc
mov
mov
lods
or
push
idivb
mov
lret
cs
lods
lea
pop
xlat
or
jb
or
cmpb
movsl
sub
stos
jge
jecxz
into
mov
sbb
sub
push
stc
loope
xchg
je
popf
xor
sub
cmp
add
out
iret
js
push
adc
repz
push
adc
gs
adcl
adc
jne
push
imul
inc
stos
xchg
icebp
arpl
adc
cmp
mov
and
stc
sahf
sbb
repnz
cld
repnz
mov
cmpsl
nop
push
jmp
pop
dec
popa
scas
mov
arpl
adc
xor
mov
fs
push
and
fidivl
fnstsw
adc
adc
cmpsl
fwait
je
dec
jae
mov
daa
mov
lea
mov
aad
movsl
fmuls
insl
push
pusha
loope
lock
add
out
repz
mov
xchg
das
test
shrb
jbe
aaa
xor
adc
jle
pusha
pop
ss
test
ss
push
andb
out
sarl
dec
sbb
stos
addr16
sbb
test
xchg
ficoms
fcomp
pop
mov
call
es
into
adc
push
mov
xor
in
repz
divb
jnp
fmuls
inc
sub
fstps
outsl
imul
cmpsb
jbe
aad
data16
dec
ret
inc
bound
cmp
or
inc
stc
lods
inc
xchg
sahf
or
or
das
mov
test
leave
xchg
xor
iret
add
nop
imull
incb
sbb
jnp
push
clc
cmp
mov
fisubrs
jno
bound
pop
out
nop
dec
stos
mov
xor
mov
xor
xchg
inc
addl
je
jbe
jp
add
lcall
jno
shrl
mull
das
add
dec
lods
or
or
out
lahf
in
add
idivb
loopne
and
push
cmp
es
idiv
pop
jne
inc
das
mov
insl
shll
mov
pop
sarl
xchg
adc
adc
aas
sbb
push
fstps
shll
mov
pop
xchg
into
cld
add
clc
push
adc
push
pop
cmp
repz
xchg
lods
jmp
xchg
loopne
push
out
jecxz
test
inc
cmpsb
lods
fwait
enter
cmp
loop
addr16
cwtl
mov
hlt
insb
mov
ja
movsl
xor
adc
sub
push
jecxz
out
or
fstl
out
xchg
inc
int
mov
lret
fmul
mov
js
fcomps
les
adc
fsts
aam
pushl
test
out
jno
xchg
dec
outsb
jbe
mov
in
push
dec
das
enter
movsl
lcall
and
in
aaa
sub
mov
ret
xchg
push
or
and
jb
mov
push
fnstsw
iret
mov
negb
mov
out
jns
orb
mov
pop
in
push
jge
mov
jle
add
lock
cmp
pop
enter
mov
sub
stc
jne
lds
xchg
rcl
mov
and
fsubrs
jne
ja
das
pop
xchg
mov
mov
ret
adc
sub
rcrb
mov
pop
daa
cmp
lahf
dec
push
cmp
cmp
test
pop
lods
jg
jo
or
xchg
dec
push
test
pop
aaa
or
addr16
rclb
jb
dec
xlat
sarb
out
mov
sbb
pop
test
mov
and
jecxz
push
sub
lods
dec
pop
fisubl
cmpsl
inc
cwtl
jmp
sbb
mov
push
sub
imul
rorb
and
out
cmpl
push
mov
sub
mov
std
mov
sbbb
pop
mov
inc
pusha
jb
scas
imull
add
xchg
dec
jle
mov
adc
and
mov
pop
fisttps
inc
mov
cmp
or
nop
mov
xor
movsl
lds
orb
mov
insb
roll
loope
jae
add
leave
jae
push
push
push
sub
lret
imul
lds
xchg
mov
mov
fidivs
cmp
jg
mov
ja
pop
cwtl
shlb
stos
jnp
pop
int3
fnstenv
xor
divl
or
addr16
je
cs
cmpsb
push
loope
dec
shrl
xchg
clc
subb
out
xchg
into
cmp
loop
cli
pop
and
hlt
pop
fmull
lea
fists
and
dec
test
out
and
jb
mov
icebp
fstl
xchg
test
sti
in
mov
adc
les
out
add
pop
mov
and
pop
push
xchg
daa
out
mov
scas
mov
xchg
repnz
shrl
shlb
clc
fisttpl
push
mov
lock
xchg
std
mov
push
movswl
cmp
adc
aaa
loopne
aaa
mov
lds
xchg
lret
xlat
sbb
xchg
lock
inc
cmp
das
cmp
movsl
dec
xlat
or
mov
xor
mov
inc
test
shrb
je
and
fcompl
cpuid
repz
lds
push
push
ds
std
jb
adc
sbb
xchg
pop
adc
test
repnz
push
fldcw
adc
sub
sub
xchg
clc
arpl
decl
lcall
cltd
loopne
or
movsl
test
xchg
push
ss
cmc
std
sbb
push
push
subl
pop
ret
inc
push
in
push
pop
lods
bsr
xor
pop
pop
test
add
pop
orb
jae
inc
or
inc
decb
adc
in
sbb
dec
sarl
pushf
popf
push
out
xchg
js
arpl
xor
sub
xchg
mov
fsubrs
mov
std
outsb
push
imul
aad
mov
mov
xor
xchg
int3
mov
es
int3
pop
inc
out
mov
andl
in
xchg
push
ret
and
orb
lods
jno
mov
mov
fstpt
mov
lcall
xchg
sub
aas
mov
fcmovne
pop
cli
cmp
sbb
stos
push
cmp
psubsb
mov
ds
sub
mov
mov
fcmovbe
aad
or
sbb
lds
pop
cmc
repnz
fcompl
stmxcsr
arpl
fldcw
out
pop
icebp
out
pop
xchg
dec
inc
push
test
adc
int3
out
imul
push
ja
xor
push
mov
mov
inc
jns
outsb
xchg
mov
fs
ret
stos
lods
mov
fwait
or
mov
push
lret
insb
movzwl
movsb
data16
sub
sbb
lock
leave
adc
pushf
and
repz
clc
arpl
rol
flds
arpl
push
fwait
pop
ljmp
pop
mov
imul
push
andb
mulb
or
inc
testl
or
pop
call
dec
lahf
inc
xchg
lahf
mov
and
int
cmc
lds
insl
mov
mov
rclb
es
sahf
push
popf
nop
mov
cmp
call
jmp
xor
pop
imul
fs
jmp
dec
dec
mov
clc
jle
add
pop
int
dec
inc
or
xor
scas
loope
fcmovnb
push
lock
push
and
xchg
repz
dec
and
jns
cltd
mulb
mov
mov
cmp
sbb
in
and
popa
inc
mov
mov
add
cli
ljmp
mov
xor
ss
cmp
loope
mov
add
dec
push
mov
xor
cmovo
sub
cli
dec
pop
mov
out
test
pop
dec
jne
inc
vpunpckhbw
jl
push
dec
in
ret
cltd
cltd
cmp
je
or
adc
lret
xchg
jmp
scas
lret
filds
aad
or
cmp
mov
mov
shlb
fstl
in
xor
je
fidivl
in
sbb
push
int3
or
push
xchg
jl
int3
add
mov
cwtl
clc
int3
stc
outsb
ja
pop
and
movsl
xchg
and
arpl
inc
push
rcll
out
repnz
push
xchg
jge
std
push
add
push
add
stos
call
subb
imul
inc
cmp
pop
lods
not
shlb
lds
jp
mov
scas
mov
shll
sub
xchg
out
sbb
ja
mov
mov
dec
push
adc
xor
cmp
push
jecxz
addr16
loopne
in
fstl
out
leave
sub
mov
gs
sbb
pop
popl
or
mov
cmp
int3
add
jl
mov
xor
lcall
dec
push
lret
ds
pop
js
cmp
sbb
es
inc
les
cmc
add
or
cltd
scas
aad
leave
or
mov
push
pop
insl
addb
push
mov
imul
gs
adc
cmpsl
jmp
lods
jne
adc
out
ret
pusha
fcmovb
cld
insb
push
mov
imul
mov
dec
jle
sbb
fcomps
pop
and
lret
cmpl
rcrl
andl
inc
cmc
lods
mov
xacquire
add
aaa
call
popf
dec
xlat
popa
scas
or
out
repnz
cmp
leave
ret
ja
movsb
push
or
mov
clc
mov
sarb
push
cmc
pop
lds
cmp
lret
movzbl
or
in
lcall
adcb
scas
les
mov
xchg
cmp
push
push
adcl
std
mov
and
stc
add
outsl
jno
sub
jmp
stc
pop
ss
adc
jbe
jmp
xchg
ljmp
scas
sub
call
lcall
sub
fcomi
and
fbld
aam
jne
lret
int3
push
adc
and
lods
dec
pop
push
mov
leave
jmp
shlb
sbb
rcrb
push
sbb
xor
divl
xchg
pop
daa
jae
xor
aam
xor
inc
cmpsb
push
inc
push
ja
jnp
jb
xchg
jbe
cs
jae
inc
push
or
and
adcl
push
mov
lcall
and
push
xor
shll
aad
stos
inc
or
imul
sar
mov
xchg
mov
shlb
xor
stos
mov
adcb
push
cwtl
test
repnz
int3
inc
pushf
movsl
mov
jle
mov
dec
mov
jmp
fwait
lahf
mull
gs
iret
jns
add
stc
daa
xor
jno
cmpsb
pop
sub
jo
popa
or
and
ss
sub
fdiv
or
sub
imul
inc
and
mov
mov
mov
cli
xor
sub
ja
inc
movsb
scas
cs
dec
push
imul
out
mov
dec
add
and
insl
push
ret
mov
mov
shlb
mov
mov
aad
ret
jb
dec
mov
pop
fcmovnbe
push
add
dec
notl
fiaddl
xor
mov
je
cwtl
cmpsb
mov
push
mov
sub
push
testl
and
mov
pop
outsl
mov
xor
pop
pop
pop
out
js
dec
or
daa
ss
push
or
scas
stc
int
jae
mov
push
repz
xchg
loopne
pop
pop
pusha
xor
dec
inc
mov
mov
aas
dec
dec
xor
mov
jns
xor
mov
jne
push
push
ret
xchg
ret
inc
cmp
and
outsb
jl
jg
std
xchg
push
pop
mov
mov
jno
mov
pop
cli
pop
loop
dec
mov
inc
pop
sbb
outsb
adc
dec
or
scas
xlat
pop
inc
pop
outsb
sub
cld
call
mov
pop
jmp
or
out
repz
loopne
mov
push
sahf
stos
insb
or
les
lock
dec
cmp
dec
enter
xor
jmp
divb
inc
jl
inc
sub
aaa
outsb
push
out
jp
jg
sub
sbb
testl
lds
mov
xchg
pop
hlt
dec
xchg
movl
push
subl
cmpsb
or
fidivl
jne
sti
mov
test
push
clc
loopne
and
js
callw
sub
and
inc
push
imul
fldenv
dec
push
dec
push
call
cmp
mov
xor
dec
sub
les
lods
pop
inc
negl
mov
xchg
cltd
add
les
jle
jle
dec
roll
xchg
mov
cli
daa
int
push
mov
dec
xor
arpl
inc
int
imul
jbe
je
mov
aad
test
or
xchg
lods
leave
jg
icebp
inc
nop
out
adcl
fisubl
lcall
mov
pop
fcomp
mov
add
mov
into
jg
int3
or
cli
jp
cmp
xorb
hlt
loop
sub
fiadds
das
xor
xchg
jge
mov
pop
push
scas
sbb
and
jns
inc
xchg
add
test
cmp
movsl
jbe
jb
sub
xor
inc
push
push
mov
and
pusha
xchg
mov
sub
insl
hlt
sub
into
dec
add
add
mov
inc
mov
aad
shlb
int
ret
push
adc
imul
daa
popa
lcall
mov
ret
aam
jns
ljmp
inc
jecxz
incl
jo
adc
inc
sub
aam
mov
xlat
sarl
pushf
fcomp
dec
int
sbb
test
jb
xchg
add
leave
lea
inc
fwait
mov
push
incb
mov
push
icebp
insw
xchg
es
insb
inc
je
lods
adc
test
pop
adc
ja
xchg
or
inc
test
leave
mov
ds
mov
inc
push
in
mov
or
jp
dec
lods
pushf
pand
movsl
pop
fdivl
jns
push
pop
mov
inc
arpl
insb
imul
xchg
popa
in
test
pop
jge
fwait
hlt
ljmp
dec
cmc
notb
jno
dec
lret
pushf
mov
fwait
sub
dec
xchg
lret
xor
outsl
xchg
mov
jl
testl
cmp
mov
loope
hlt
je
shl
push
adc
add
cmc
adc
jmp
sub
fisttpll
inc
lcall
scas
pop
outsl
and
and
cltd
cmc
push
shrl
pushl
or
inc
mov
mov
movsl
fldl
leave
sbb
filds
div
jns
push
and
aas
adc
sub
xchg
out
push
ret
into
inc
mov
dec
popf
dec
adc
cmp
xchg
mov
wrmsr
popa
loop
loope
orl
shr
inc
mov
mov
xchg
jne
mov
sbb
xchg
push
dec
mov
mov
in
cmpsl
icebp
push
dec
mov
aaa
int3
dec
adc
add
mov
dec
loope
dec
sub
popa
insb
xchg
mov
mov
sbb
jg
clc
mov
push
jmp
and
fimull
imul
jnp
rorb
adc
cltd
inc
pop
and
jg
lods
hlt
add
sbb
mov
daa
popf
push
js
lock
fiaddl
imul
incl
ds
int
or
adc
or
ret
mov
push
adc
das
cmp
int
jge
or
ret
decb
fs
gs
pop
or
out
cli
dec
sbbb
xor
cmp
daa
and
pop
mov
sti
inc
dec
xor
mov
aam
inc
add
mov
cltd
iret
pop
mov
dec
jnp
faddl
mov
push
push
out
push
mov
shlb
in
scas
jo
mov
jmp
dec
aam
clc
mov
in
imul
jmp
cmp
push
sub
xor
stos
lock
nop
xchg
or
popf
das
enter
lock
or
mov
sbb
pop
mov
sete
lret
in
enter
or
and
mov
js
dec
fs
adc
testb
nop
push
nop
into
xor
sbb
clc
mov
xor
cmp
sub
jnp
adc
dec
imul
lcall
jge
in
mov
adc
in
aam
js
push
lahf
cmp
lods
out
popf
sbb
fidivl
sub
ljmp
xchg
mov
frstor
int
movsl
cli
psubb
pop
jle
and
jle
cmp
jb
and
pop
negl
adc
and
push
jg
lret
std
adc
dec
es
repnz
push
mov
rcrb
jno
aaa
mov
cmp
adc
jl
dec
stos
int3
adc
out
lods
pop
mov
dec
pop
test
sub
jnp
jecxz
inc
sub
inc
aam
add
xor
push
jge
jmp
mov
insb
cmp
popa
jae
lds
inc
xchg
add
mov
imul
cmpl
test
push
popf
addb
mov
mov
int3
or
xor
dec
pop
jnp
inc
iret
sbb
sbb
arpl
aad
ficomps
adc
hlt
jbe
sbb
lret
dec
add
inc
adc
sbb
sub
dec
push
push
pop
bnd
cs
mov
sub
mov
or
mov
stos
lock
rolb
aad
pop
mov
xchg
scas
sbb
sbb
sub
lcall
in
pop
int3
cmpsl
xchg
inc
sbb
dec
jle
push
jmp
loop
lahf
fwait
je
cmc
popa
enter
insb
je
push
adc
clc
movsb
ret
in
pop
sahf
ss
or
dec
inc
dec
xor
mov
out
iret
movsb
jg
jp
inc
inc
outsl
xchg
add
repnz
jp
mov
aam
push
das
in
push
in
xchg
shrb
and
sahf
mov
stc
add
and
xor
lahf
jb
into
loope
and
daa
jmp
cmp
sub
pop
sbb
shrl
mov
sbb
pop
dec
imul
repnz
and
cmp
mov
dec
sub
ret
adc
push
aaa
mov
and
hlt
push
sub
add
or
repnz
adc
mov
inc
and
xlat
mov
inc
loop
inc
sub
fldl
jae
and
adc
or
cli
cmpl
lcall
push
sbb
popa
and
cmp
inc
sbb
inc
xor
adc
mov
adc
incb
adc
mov
movsl
jge
jle
pusha
sti
jnp
loop
stc
clc
adc
sub
push
mov
dec
mov
sti
test
sarl
mov
and
mov
call
clc
insb
jmp
and
in
fidivl
lahf
enter
jo
cltd
flds
dec
inc
sub
inc
mov
xor
mov
sbb
repz
xor
out
xchg
fdivs
push
inc
sub
jmp
xor
stc
xchg
adc
es
xchg
rclb
flds
add
push
dec
and
movsb
pop
insb
lds
in
and
pop
mov
mov
fistl
xor
mov
dec
mov
daa
popa
xor
push
mov
mov
or
popa
push
mov
sub
shlb
leave
jge
mov
out
inc
mov
push
fwait
cmp
jnp
daa
xchg
xchg
xchg
mov
jmp
cmp
or
ja
stc
shll
and
pop
cmp
rcrl
popf
jae
testl
test
push
sbb
cld
int
pushf
inc
jb
sbb
ret
dec
loopne
cmp
or
xlat
pop
shl
sahf
pop
mov
imul
add
pop
inc
out
adc
adc
xor
sub
adcb
dec
jae
adc
jmp
bound
shrb
adc
sbb
adc
xchg
mov
push
mov
test
je
mov
fistps
mov
pop
cs
sub
xchg
and
shrb
stc
test
fistps
push
loope
rcll
gs
enter
add
xchg
and
and
roll
sti
aad
scas
and
sub
test
stos
mov
imul
lahf
testb
mov
or
ljmp
roll
mov
mov
cmp
add
cmpsl
sub
lds
push
pop
jae
push
and
bound
xor
push
aad
push
mov
or
xchg
pop
shrb
xchg
mov
test
lcall
ds
sbb
adc
fdiv
lcall
jecxz
lret
insl
addr16
dec
inc
mov
jg
arpl
test
int
subb
outsl
leave
cltd
jb
mov
adc
mov
mov
mov
sbb
lea
roll
pcmpeqb
xchg
jne
ja
mov
addr16
jns
inc
jne
jno
inc
fdivrs
out
idivl
mov
ja
outsb
sub
push
addr16
sahf
inc
inc
xlat
adc
mov
out
fs
test
adc
in
adc
rolb
fcomps
push
mov
nop
scas
hlt
fsts
stc
xor
xor
mov
out
pop
push
sub
mov
dec
popa
mov
cwtl
mov
xor
push
or
test
out
repnz
leave
aad
shrb
and
xchg
lcall
lock
add
stos
pop
xchg
rcrb
ret
mov
cmc
cmp
or
mov
fcomps
ja
adc
das
xchg
and
sbb
and
int3
movsl
enter
mov
les
call
mov
cmp
xchg
sbb
clc
pop
cmp
mov
mov
jmp
sbb
andb
dec
jmp
push
jle
data16
out
jmp
rorb
lcall
xchg
in
sub
repnz
cmpsb
daa
frstor
add
iret
mov
jg
push
xchg
jp
scas
sub
roll
add
stos
and
jle
jo
out
mov
pop
pop
fmulp
push
cld
sub
mov
push
add
and
cmpsl
fldl
mov
dec
dec
mov
add
inc
sbb
mov
cmp
jb
jbe
pop
mov
push
rcrb
mov
xchg
inc
bound
aam
cmpsl
pop
inc
mov
sbb
jecxz
pop
addr16
mov
mov
xchg
and
sub
xchg
and
insb
ds
sub
nop
jbe
mul
scas
add
inc
ss
cmp
adc
cmp
xchg
push
cld
add
adc
mov
nop
jg
cmp
sbb
adc
fnstsw
pushf
jge
mov
xchg
mov
adc
push
js
inc
xorb
or
jl
mov
outsb
sbb
movsl
xchg
adc
jge
lret
or
popf
lret
test
or
fmul
jns
mov
fimull
jno
lods
or
jo
or
mov
or
adc
mov
cmp
inc
and
mov
dec
mov
ret
push
je
and
mov
cmp
lahf
mov
or
cmp
inc
loop
rorl
pop
hlt
inc
call
mov
faddp
jbe
icebp
in
sbb
lods
cli
shr
imulb
pop
pop
add
ret
popa
ljmp
jecxz
popa
inc
cmp
mov
outsb
xor
fwait
push
mov
pop
and
mov
dec
dec
push
sub
jno
les
addr16
xchg
ret
js
mov
sub
and
adc
fwait
or
ljmp
dec
cmp
mov
ret
arpl
mov
shll
push
lods
sbb
inc
push
fcom
stc
lcall
std
sub
sbb
lahf
movsb
dec
mov
lds
aaa
int
xchg
dec
cld
push
dec
push
mov
mov
pop
xchg
or
stos
test
lahf
xchg
sub
inc
jo
pop
pop
scas
cmp
mov
inc
stos
pop
mov
sbb
add
cmp
ds
cmp
inc
sub
push
push
dec
cmp
ror
ds
in
gs
int3
inc
ss
and
push
lock
adc
imul
fildll
lods
push
stos
repz
sub
mov
enter
shlb
loopne
mov
mov
or
lret
in
ret
cltd
mull
sub
cmc
or
inc
inc
xchg
lret
push
xor
clc
mov
mov
mov
or
aad
dec
addr16
pop
pop
pushl
sub
lret
lcall
sub
mov
xor
mov
cltd
mov
lods
dec
mov
cld
pop
js
xor
xchg
sahf
lahf
loopne
xchg
lcall
mov
insb
arpl
add
das
and
push
pop
inc
aaa
dec
add
jb
hlt
pop
and
cld
sub
hlt
mov
fs
and
and
mov
mov
enter
pop
testb
inc
sub
in
xor
fcomps
add
sub
adc
inc
push
cmp
jmp
push
and
adc
in
mov
mov
xchg
dec
clc
adcb
int
mov
sbb
repnz
ret
xchg
mov
mov
inc
jp
dec
mov
fisttps
push
push
pop
adc
test
fsubs
fbstp
inc
lcall
lret
adc
push
sbb
lret
in
stos
gs
jmp
mov
push
xchg
scas
xlat
loope
xchg
xchg
pop
aam
add
cmp
jnp
pop
dec
testl
cmp
sti
shlb
pop
mov
mov
dec
jbe
fistpll
push
and
mov
push
cmc
dec
imul
lcall
push
add
fcomps
int
lret
icebp
sbb
xlat
outsb
enter
addr16
mov
das
mov
rcr
fisttps
jmp
sbb
dec
jl
out
stos
cmp
fcmovne
in
xchg
iret
ljmp
lret
add
pop
xor
hlt
pop
xchg
int
or
adcl
test
cltd
enter
insb
fucom
inc
mov
inc
icebp
in
cmp
push
push
xor
add
ja
shll
jnp
xor
xchg
inc
mov
dec
pop
adc
cmpsl
mov
nop
hlt
jp
mov
xchg
or
inc
push
xchg
mov
adcl
dec
dec
arpl
lret
jecxz
adc
xchg
and
cmpsb
xchg
mov
addb
pop
add
mov
ret
mov
sahf
int3
jecxz
mov
cwtl
jno
mov
pop
dec
xchg
ret
sbb
jb
dec
add
imul
out
rcrl
cmp
jmp
cmpsb
idivl
jne
ret
adc
cmp
stc
pop
iret
xchg
out
inc
sub
jle
pop
jge
mov
mov
sub
dec
shl
mov
aas
call
xchg
inc
adc
divl
inc
test
add
rcll
jno
call
call
xor
mov
test
mov
jo
cmp
jno
insl
dec
leave
in
push
in
push
pusha
cmp
dec
loop
pop
inc
xchg
fidivrl
push
inc
or
mov
je
leave
lods
out
xchg
adc
jnp
sbb
pop
pop
rol
mov
sbb
xlat
inc
adc
xchg
jo
mov
jmp
sub
sub
push
sbb
inc
icebp
push
in
leave
xchg
clc
cmpsb
rol
data16
test
insb
mov
in
push
mov
out
mov
push
std
lahf
inc
std
inc
adc
sbb
mov
adc
lods
push
stc
bound
pop
or
insl
fs
nop
adc
mov
push
fadd
dec
shr
lcall
fmull
in
shrl
jno
lret
mov
loop
xlat
imul
cli
outsl
mov
sbb
stc
je
mov
fimuls
scas
out
out
pop
rorb
inc
fwait
ret
stos
cwtl
je
inc
or
add
out
sub
fcoml
repz
cmp
dec
mov
lds
in
xlat
mov
idivl
ja
mull
push
or
into
test
push
mov
adc
fs
pop
jae
insb
mov
inc
ja
clc
ds
cs
lcall
out
push
fidivrl
push
es
add
iret
cmp
call
and
push
ss
xchg
leave
lcall
call
cmp
adc
xchg
aaa
adc
js
insl
pop
mov
repz
mov
sarl
push
fst
imul
lock
sbb
bound
mov
sarb
cmp
or
aas
or
repnz
sub
and
cmp
adc
jmp
pop
sbb
stos
push
mov
dec
enter
fists
pop
roll
psubd
movsl
jl
mov
shl
cld
jo
add
test
movb
push
pop
outsl
ficompl
push
pop
je
mov
adc
push
or
sbb
test
testb
adc
mov
and
lahf
cmpsl
xchg
push
mov
adc
aaa
mov
xor
fists
and
inc
push
sub
into
outsl
or
aam
das
mov
stos
xlat
cmp
mov
jns
pushf
shl
lea
or
out
testb
arpl
fsubrp
arpl
aam
test
insl
fidivl
mov
pop
adc
dec
movsb
test
mov
test
mov
vcvtpd2psy
js
movsl
es
in
pop
repz
push
push
dec
fwait
test
and
ja
arpl
cwtl
xchg
fidivl
shr
ret
orb
adc
jg
scas
add
inc
mov
fmul
js
stos
scas
adc
outsl
fs
test
and
sti
sarb
leave
out
cmp
ret
jp
mov
xor
or
es
movsb
cld
add
pop
dec
mov
jmp
or
aad
cmp
jae
xor
lcall
inc
pop
notb
in
xchg
in
ret
jo
inc
dec
pushf
stos
mov
or
aam
inc
cmc
jmp
push
pusha
loop
mov
nop
shrb
mov
ljmp
xchg
mov
xchg
push
test
daa
push
mov
rorb
stos
int3
push
popa
mov
and
add
out
cmp
mov
je
stos
or
movb
sbb
pop
inc
fiaddl
fimull
sub
jbe
popa
andl
cmc
jge
int
xchg
jbe
xor
pop
inc
mov
and
sbb
mov
xlat
ljmp
jp
xchg
cmp
pop
ja
in
mov
sub
cltd
dec
outsb
in
push
jbe
adc
test
je
mov
aaa
aaa
cmp
cmc
pop
scas
testl
hlt
add
cmp
mov
data16
outsb
sbbb
sahf
aam
and
xor
push
clc
js
jg
add
and
lods
mov
sub
dec
and
into
stc
mov
sub
adc
jae
lret
push
lock
cmpsb
sbb
in
cld
fldt
lcall
adc
subl
jle
mov
pop
sub
insb
out
mov
pop
sbb
jmp
movsl
popf
pop
fisubl
jmp
mov
jl
loop
outsl
jns
mov
aaa
fwait
mov
and
adc
mov
mov
mov
add
jne
test
cmp
mov
loope
mov
fimuls
nop
in
add
enter
add
and
nop
fimuls
sbb
push
pop
sbb
scas
rcrb
mov
fildll
xchg
and
sbb
mov
repz
shlb
cwtl
dec
lods
sbb
test
ret
jnp
in
pushf
adc
repnz
hlt
dec
es
sbb
stos
jnp
xchg
adc
les
faddl
les
jmp
inc
jle
pop
pop
test
sbb
mov
pop
pop
sarb
inc
je
sub
in
mov
cmpsl
jae
push
idiv
stc
inc
fsubr
or
hlt
and
icebp
clc
orl
cmp
or
iret
mov
adc
cmpsb
mov
mov
popf
fistl
sahf
jg
mov
jle
insl
ficoms
sbb
jns
pop
xchg
pusha
pop
jae
and
popa
pushl
push
in
mov
cmp
xchg
pop
jo
arpl
mov
and
scas
ret
insl
lea
and
or
shll
outsb
push
mov
push
rolb
lretw
out
add
push
scas
dec
jmp
outsl
je
fnstcw
icebp
lret
push
in
or
dec
stc
jecxz
add
and
lock
out
sub
cmp
popa
pcmpeqd
push
int3
in
dec
sbb
aaa
or
pop
xor
jnp
fdivs
pop
pop
jo
pop
mov
das
scas
mov
mov
popa
cs
cmp
or
pop
je
add
xor
mov
mov
inc
cltd
lea
fisubs
arpl
xchg
sub
sbb
push
jno
es
cld
add
mov
imul
xchg
out
jp
and
loope
xchg
add
out
xchg
leave
hlt
push
push
mov
push
push
cmp
cmp
xor
imull
int
mov
sarb
mov
pop
aaa
aas
cmp
adc
ret
loope
push
push
jle
aaa
sbb
mov
adc
cmp
test
sub
push
fst
cld
dec
sbb
cmp
jle
and
addr16
roll
sbb
xchg
sub
adc
mov
sub
fistps
and
divb
sbb
mov
add
push
xor
int3
pop
push
xchg
popa
pop
imul
jmp
js
or
into
lahf
ret
inc
dec
or
xor
and
addl
jns
xchg
dec
jne
push
push
xchg
loope
jg
xor
mov
shlb
xor
adc
cmp
ljmp
movsb
shrl
jle
outsb
das
aad
ret
rclb
outsb
movsb
push
test
out
movsl
lahf
mov
pop
insb
jo
aas
call
lods
jle
mov
jg
pusha
out
dec
mov
or
xchg
cs
xchg
and
fstpl
mov
aam
xor
sbbb
in
lods
outsb
jno
and
mov
jns
inc
cmp
and
cmp
mov
push
fists
pop
addl
mov
xchg
jbe
bound
bound
movl
pop
mov
dec
cmp
ds
fcomps
inc
push
jns
aaa
scas
lahf
movsb
call
push
in
mov
in
shlb
push
xor
mov
testb
orb
cmpsl
xor
sub
dec
addb
stos
pop
mov
lods
fwait
pop
out
mov
lods
std
mov
add
icebp
mov
add
insl
in
sub
in
xor
lods
loop
es
push
xor
mov
xor
stos
pop
push
js
in
inc
fadd
sub
inc
dec
nop
sbb
mov
and
dec
jno
adc
mov
dec
addl
cmp
sub
mov
scas
lds
fisubs
inc
mov
bound
cwtl
mov
std
in
pop
inc
dec
push
fisubs
and
push
je
daa
mov
xor
pop
insb
jne
pop
loop
fadds
fs
sub
mov
xchg
stc
xchg
cwtl
xor
cmp
dec
xchg
xor
add
stos
jg
mov
decb
dec
adc
sub
sbb
push
leave
loop
in
stos
jns
adcb
scas
cs
and
mov
rcrb
leave
les
das
cmp
testl
push
mov
xor
pop
int3
jno
adc
and
filds
jl
imul
rcrl
cmc
mov
sub
cmpl
sbb
xchg
aas
xchg
fisttpll
in
aas
adc
xchg
xor
iret
cmp
mov
fs
mov
xchg
test
imul
leave
addr16
jo
in
rorl
dec
dec
and
scas
xor
inc
pop
xchg
pop
lds
cmp
mov
test
jle
sub
insl
pop
or
hlt
je
xchg
sbb
in
movhps
mov
sub
aad
or
idiv
push
add
dec
or
mov
pop
inc
inc
jmp
inc
loopne,pn
js
insl
mov
mov
push
xchg
pusha
mov
movsl
pop
push
mov
imul
xor
or
cli
icebp
or
xor
inc
mov
lret
fwait
pop
cmc
or
mov
xor
mov
shlb
nop
jl
data16
mov
and
sbb
push
stos
push
xor
outsl
jl
imul
or
xchg
inc
repz
xor
jl
cwtl
adc
jge
mov
cmp
daa
push
popf
call
rorl
or
adc
lahf
xlat
repz
lahf
sbb
mov
pop
out
andb
pop
jno
aas
in
mov
adc
mov
adc
cmp
sub
loop
mov
cli
push
and
or
sub
xorl
mov
or
ret
fwait
aad
push
test
sbb
jmp
movsb
adc
jo
xchg
sbb
iret
dec
pop
into
clc
inc
imul
test
pop
add
add
or
jne
mov
shrb
and
rorb
fdivr
gs
lock
or
or
mov
lret
into
inc
call
push
ljmp
adc
cmp
cmp
psubq
jl
int
jmp
adc
mov
mov
push
adc
ror
sub
or
xchg
add
fcomip
cld
xor
jmp
xor
leave
or
fsubrl
jecxz
js
je
lahf
or
aad
insl
daa
add
negb
pop
nop
mov
idiv
popf
in
pop
imul
dec
insl
fwait
aas
dec
adc
fbstp
ret
cmp
les
bound
testb
iret
fmul
insb
stos
mov
lcall
sub
mov
mov
xchg
mov
mov
test
sbb
in
sub
inc
imul
fwait
cmpsb
mov
adc
add
lea
pop
data16
int3
adc
jmp
inc
add
rolb
mov
push
das
add
ficoms
iret
cmp
fsts
and
push
pop
shlb
jmp
push
or
sbb
sbb
std
dec
lahf
std
out
shrb
test
jecxz
cmc
cmp
mov
loope
lea
cltd
daa
repz
cmpsl
imul
lahf
lret
xor
inc
inc
sub
xchg
inc
hlt
movsb
pop
aad
loop
sbb
fs
push
lahf
pop
pop
cmpsb
ror
ds
leave
sbb
or
pusha
lahf
sbb
sub
xchg
mov
xor
cmc
sub
dec
arpl
push
je
mov
pop
mov
js
mov
xchg
imul
adc
add
xor
sbb
sbb
xor
jne
inc
sub
jnp
dec
in
in
or
mov
int3
adc
addl
shrl
xor
subb
jb
xchg
or
and
dec
repnz
mov
sub
dec
loopne
xlat
jp
outsl
lahf
mov
dec
and
inc
out
push
push
push
push
mov
mov
xlat
pmaxsw
mov
inc
xchg
popa
xor
jmp
je
cs
int
loop
addb
pop
orl
stc
mov
les
push
jge
sbb
mov
cmpsl
arpl
and
cwtl
sbb
xlat
sti
repnz
add
cmpsl
pop
aam
push
pop
shrl
test
sbb
or
sti
adc
mov
adc
jle
sbb
push
xchg
popa
cwtl
mov
push
in
pop
push
mov
testb
cmc
or
dec
pop
aam
pop
jbe
icebp
sbb
sbb
pop
addr16
and
jecxz
cmp
adc
lea
mov
pop
ret
mov
and
cwtl
xor
testb
orl
adc
lret
jle
aaa
and
push
dec
les
dec
mov
and
jmp
xchg
imulb
xchg
mov
or
lods
das
sbb
cld
out
add
dec
pop
cmp
mov
cmp
shrb
jne
push
imul
sub
fiadds
xor
sbb
dec
mov
add
pop
inc
add
scas
iret
add
jne
dec
pop
stc
pusha
add
pop
test
aas
cmp
jno
es
cmp
jno
cld
test
loop
aam
sub
lret
std
add
fcompl
jecxz
mov
dec
mov
jnp
jno
xor
lahf
outsl
cmp
push
clc
jne
out
xchg
stos
scas
xchg
jge
dec
add
nop
or
popa
out
pop
add
adc
cmp
or
inc
dec
push
insl
adc
or
xchg
sub
test
in
stc
dec
sbb
and
mov
adc
stc
adc
adc
lods
push
test
aaa
shlb
dec
inc
cmp
sub
les
mov
int3
out
and
cmp
push
mov
shl
nop
test
mov
xchg
jae
push
mov
int
int3
scas
mov
std
fcompl
loop
sub
mov
cmp
ficompl
xor
jo
das
pop
roll
aaa
stos
jns
fcoms
lret
popf
imul
jmp
pop
jecxz
lock
and
cli
mov
outsb
cmpsb
loop
or
nop
add
repnz
je
fisubrl
arpl
jl
cmc
orb
add
ret
sub
xchg
pusha
jg
jmp
addb
dec
stos
pop
inc
je
ret
adc
addr16
xor
push
or
pop
call
push
pop
lea
xor
das
daa
pop
inc
xchg
cmp
in
sets
mov
mov
inc
mov
mov
xchg
mov
popa
inc
mov
adc
outsb
add
fistpl
or
push
dec
ss
pusha
aad
fcmovnbe
xor
adc
ja
fnsave
jg
push
cltd
and
sti
add
ret
cmpsl
mov
push
mov
pop
adc
rclb
es
jno
cld
xor
cmpb
sub
mov
out
mov
inc
mov
and
mov
sub
push
mov
add
pop
stc
test
jmp
add
bswap
lods
dec
in
daa
subb
adc
dec
cmp
enter
fptan
test
shl
push
mov
mov
pop
mov
fs
popf
mov
sub
inc
jo
push
xchg
and
lahf
pop
fldenv
push
sub
mov
pop
inc
mov
lods
or
mov
pop
aam
mov
mov
or
mov
pop
fstpt
loopne,pn
mov
movsb
or
setl
lahf
sub
xor
xchg
jmp
sbb
add
mov
fcoms
mov
cwtl
or
insb
jle
mov
sub
movsl
cmpl
xchg
mov
push
inc
rcll
fildl
mov
sahf
arpl
mov
and
mov
jo
adc
sbb
out
ret
fnstcw
mov
addb
repnz
out
dec
pop
popa
cld
cld
push
push
cltd
imull
push
and
mov
mov
ja
adc
mov
jo
dec
pop
cmp
ret
xor
mov
jmp
xor
add
dec
pop
movsl
pop
jae
repnz
cmc
sbb
adc
xchg
je
in
sbb
mov
jnp
mov
out
in
xor
inc
aad
jo
bound
mov
inc
xchg
jo
sar
ret
bound
jg
test
xchg
enter
stos
in
mov
mov
negb
adc
insl
daa
mov
rorb
xchg
enter
das
cld
and
mov
je
into
pushf
cmp
andl
scas
cmp
jo
pusha
mov
inc
add
mov
push
and
pop
dec
cmpsl
pop
subl
jnp
jno
icebp
and
jb
lds
xor
inc
push
repnz
movsl
out
clc
dec
jmp
pop
sub
xor
mov
test
adcb
cmp
in
mov
pop
adc
pop
pop
js
sub
ds
jl
loopne
mov
mov
pop
out
and
sub
adc
popf
pop
inc
push
jb
jbe
inc
sub
dec
lahf
mov
arpl
shrb
sub
mov
out
adc
lcall
ficomps
lret
sarl
xchg
imul
clc
outsl
pushf
sub
inc
loope,pn
popf
fwait
in
jle
adc
test
out
pop
out
push
movaps
mov
jmp
test
jmp
mov
mov
jns
sbb
cmpsb
jmp
add
addr16
cmp
xchg
arpl
pop
adc
jbe
sub
sbb
add
inc
add
movl
cmp
lds
mov
cmc
dec
mov
rol
jo
bound
xor
mov
repz
push
rcr
dec
iret
jns
mul
push
jb
or
push
jecxz
and
addb
xor
adc
test
fsubrs
leave
jp
adc
mov
sbb
outsl
xor
leave
test
js
mov
cmpsl
leave
lcall
pusha
or
js
ja
adc
mov
gs
jbe
mov
or
mov
mov
lret
lods
push
pop
mov
add
add
adc
shll
dec
pop
sbb
ficoms
cmp
mov
or
fucom
adc
and
dec
xchg
push
push
mov
or
add
xchg
hlt
sahf
cld
xchg
js
out
or
xor
loop
cld
add
arpl
lods
dec
or
and
rol
xchg
sub
loop
inc
cmp
xchg
fdivrl
ret
out
nop
mov
xchg
jg
push
sub
xchg
inc
add
jle
push
loope,pn
mov
ljmp
adc
fistps
adc
inc
push
fadds
leave
mov
movsb
fsubrs
mov
ret
mov
inc
jo
sbb
in
sub
stc
mov
mov
pop
mov
and
inc
clc
mov
jb
cli
pusha
clc
adc
xor
fsubrp
sbb
pushf
les
das
jecxz
in
mov
pop
xchg
pushf
adc
sti
xor
inc
scas
pop
imul
lret
das
fwait
xchg
stos
imul
clc
ret
jmp
adc
lret
xor
mov
mov
out
nop
aas
xchg
push
sub
add
lea
xor
and
pop
mov
dec
mov
pop
lods
sbb
adc
rorl
fwait
jp
push
mov
or
cli
add
out
cs
or
repz
in
or
das
xor
loope
int3
pop
loop
icebp
into
adc
fiadds
mov
push
push
out
pop
jle
xor
hlt
fldl
je
ja
xorl
ficoml
push
cmp
mov
pop
ret
stos
cltd
sub
bound
loopne
daa
inc
adcl
dec
gs
pop
inc
sbb
push
fs
outsl
and
fnstsw
mov
and
mov
adc
scas
xchg
sub
fstpl
stos
mov
and
inc
fldl
sti
mov
mov
shrl
push
sub
das
xor
out
popf
push
sahf
cltd
sbb
shrb
push
fistps
push
fwait
dec
rcrl
sub
shll
fidivrl
clc
popf
outsb
or
popa
ret
pop
pusha
adc
repz
xorb
xchg
addr16
stc
lods
mov
cmpsb
call
test
cmp
int
bnd
push
sbb
fistpll
sub
xchg
and
ljmp
sbbl
pop
mov
sahf
sbb
xor
dec
mov
push
jns
adc
ljmp
xor
dec
mov
scas
pusha
adc
add
mov
and
sub
ljmp
xchg
xchg
adc
push
dec
inc
xor
addr16
sbb
scas
jnp
push
int
sub
gs
lods
xchg
push
sti
mov
and
adc
push
sub
mov
pop
hlt
imul
int
mov
push
cmp
mov
ss
pop
inc
dec
push
inc
sub
jno
push
out
aas
mov
cmpsl
lahf
dec
pop
cmc
dec
stc
sahf
fldt
jp
movsb
out
pop
mov
inc
dec
aaa
mov
push
insl
mov
cmp
test
cmpsl
aas
ret
dec
lret
aam
int3
mov
insl
xchg
pop
jmp
mov
test
je
mov
cmc
or
mov
roll
outsb
rorb
push
jnp
pop
cld
xchg
mov
call
sbb
fs
test
add
mov
push
push
in
sub
adc
jo
popf
mov
sbb
lcall
clc
and
lods
xorb
or
mov
push
or
pop
dec
add
test
enter
ret
sub
movsl
or
xchg
jne
mov
xchg
cmp
sbb
xchg
cmp
push
in
and
cmpsb
mov
pop
pop
jl
cmpsl
push
testb
loope
aam
out
outsl
psubb
aas
ss
mov
add
mov
jecxz
inc
dec
adc
stos
fiadds
fisttpll
jno
jmp
imul
enter
add
movsb
nop
and
jno
jae
fisttps
ficompl
sub
push
aaa
pusha
cmp
dec
inc
push
iret
fwait
popf
mov
inc
hlt
sahf
fsqrt
mov
push
push
ds
out
mov
push
mov
ss
sub
sbb
mov
sub
dec
inc
xor
shlb
adcl
xor
cmpsl
sbb
mov
outsb
mov
and
mov
pushf
cmc
cltd
stos
es
loop
sbbl
test
int3
loopne
or
hlt
mov
lea
or
aam
int3
in
ja
jg
or
mov
and
jmp
ljmp
xchg
dec
jb
pop
add
push
dec
addr16
les
sbb
and
or
jg
sbb
out
and
jecxz
and
daa
movsb
enter
sub
es
mov
mov
xchg
lds
jne
mov
movsb
mov
jmp
cmp
push
xchg
cmp
xchg
sbb
int
sbb
inc
adc
jo
pusha
aad
int
push
daa
push
or
leave
je
aam
xor
add
pop
shll
loopne
lcall
insb
stos
lahf
mov
jo
fistpll
pop
cld
dec
jle
and
and
sub
inc
cmp
and
push
cmc
insb
fwait
bound
pop
and
push
movsl
mov
xor
cld
jp
cmp
cwtl
mov
out
aaa
clc
in
and
mov
inc
mov
std
and
movsb
dec
fistps
jae
movsb
mov
repz
fmul
idivl
pand
aam
out
sub
pop
pushf
icebp
mov
lret
xor
lods
xor
mov
addl
aad
repnz
add
add
or
jnp
xchg
repnz
movsl
sub
or
ja
pop
addb
mov
aaa
adc
ret
xchg
mov
fdivs
scas
or
shll
mov
xor
jb
std
iret
iret
lock
lret
icebp
xor
inc
shll
cmp
fcmovbe
push
les
xchg
hlt
cmp
add
jecxz
sub
loop
dec
or
arpl
mov
jnp
push
sub
mov
xchg
xor
dec
aas
mov
lods
ja
sahf
or
outsb
popa
mov
inc
and
inc
je
pop
enter
push
fcmovb
shl
movsl
sti
out
in
out
movsb
dec
cmpl
inc
mov
jp
push
inc
dec
leave
mov
sbb
fdivrs
mov
lods
div
xor
and
into
mov
iret
into
mov
xor
sub
and
cwtl
jno
ret
lcall
lods
inc
pop
xor
jne
and
pop
push
lea
pushf
jecxz
mov
jo
mov
and
dec
jnp
jno
fcmovnbe
mov
dec
rorl
cmp
into
mov
add
mov
aas
movsb
mov
push
outsb
push
fcom
pop
out
push
jae
jp
xor
or
fsub
jo
test
inc
repz
jg
iret
xor
sbb
sbb
add
jl
arpl
dec
loop
and
mov
cmpsb
lret
sahf
es
ds
adc
mov
testl
push
xlat
mov
int
adc
xor
inc
push
mov
mov
jl
mov
dec
das
jnp
call
mov
mov
mov
push
fisubl
sarb
shrl
fldenv
cwtl
dec
jns
movb
out
popf
pop
push
jns
pop
jecxz
iret
insb
loope
inc
or
pop
jl
jne
sbb
dec
push
xchg
inc
jae
and
mov
std
cli
mov
imul
xor
mov
aaa
mov
dec
stc
test
rcl
dec
fstpt
mov
adc
push
lcall
mov
jp
adc
cmp
into
jmp
repz
cmpsb
add
lock
xlat
pop
xchg
and
mov
stos
xchg
andl
aam
insl
mov
mov
inc
adc
cmp
or
inc
into
push
repnz
cmpsl
dec
or
scas
outsb
dec
cltd
orl
mov
mov
sahf
push
add
arpl
out
mov
inc
jle
mov
aad
adc
push
adc
ljmp
fs
mov
inc
or
out
xchg
pop
xlat
in
aam
inc
sahf
arpl
imul
lds
adc
push
xor
cmp
aaa
icebp
ds
xlat
jg
add
mov
rclb
jbe
arpl
test
iret
mov
leave
shr
lahf
pop
push
movsb
fcompl
pop
lret
outsl
push
dec
jo
pop
inc
mov
les
test
inc
sub
lock
dec
dec
leave
add
adc
mov
and
out
jge
lret
push
jmp
jg
fimull
add
pop
int
into
push
fmuls
mov
sub
mov
mov
jecxz
stos
aad
sub
rorb
jnp
pop
add
stos
fs
or
push
cmp
or
fadds
sbb
jmp
rolb
ljmp
adc
sbb
and
repnz
sbb
sub
pop
notb
popa
inc
rcrl
jecxz
js
cmp
int3
iret
cmp
sar
jae
and
dec
int3
push
xor
jo
addb
sti
or
or
push
mov
xor
jno
leave
jnp
pop
fadds
sub
inc
xor
sbb
popa
xchg
repz
cli
pushf
fsub
test
mov
add
lahf
add
cwtl
xchg
add
sbb
out
pushf
mov
jb
decl
cs
mov
mov
shrl
sub
push
xchg
in
cmp
mov
iret
mov
inc
push
ret
dec
in
ja
dec
fstpl
imul
and
std
add
sbb
xor
xchg
add
ljmp
test
cmc
repnz
in
fmuls
clc
mov
clc
fst
cli
xchg
adc
leave
cmp
fildll
sbb
cld
cltd
bound
out
subb
test
js
in
jge
sbb
pop
mov
ret
hlt
push
xorb
pop
fstps
inc
mov
jno
aaa
sbb
mov
fidivrl
imul
mov
sbb
daa
jge
cmp
es
inc
jp
push
xchg
outsb
jmp
xor
jecxz
pop
addb
mov
inc
scas
fiadds
xchg
push
movlps
mov
cmc
fabs
or
xchg
sbb
or
mov
lret
test
mov
xor
in
and
sbb
xor
inc
ss
ss
cwtl
mov
mov
loopne
cmpsl
xor
lds
mov
jns,pn
ret
mov
dec
aaa
shl
inc
mov
sbb
dec
xchg
dec
lea
and
cmp
aaa
cmpsl
and
xor
ret
test
cld
les
scas
icebp
movl
dec
std
out
ret
xchg
cld
les
dec
aad
cmpsb
in
jecxz
mov
mov
and
pusha
pusha
fistpl
bound
mov
mov
lret
mov
pop
inc
rcrb
into
cld
sbb
pop
mov
lock
xor
jmpw
fwait
imul
jp
xor
xor
jns
sbb
das
pop
std
and
imul
les
xor
dec
xlat
jne
mov
repnz
inc
jg
dec
and
ds
ror
pop
out
cmc
int
xor
das
fwait
dec
ljmp
jns
mov
sarb
sub
das
or
pop
int3
rorb
pushf
jmp
inc
arpl
lods
out
inc
enter
jecxz
dec
data16
hlt
and
mov
nop
fwait
std
lret
and
sbb
call
mov
rorl
ror
ud2
ds
and
mov
xchg
adc
fbld
mov
insb
es
push
mov
jno
mov
sbb
mov
xor
inc
mov
flds
and
or
cwtl
cwtl
ret
lea
hlt
call
xchg
ud1
sub
stos
arpl
sbb
aad
jmp
insl
add
jmp
mov
hlt
and
stc
popf
adc
jnp
loopne
push
xchg
hlt
or
jge
cld
out
xor
xor
mov
mov
or
xchg
dec
movsl
lea
xchg
xchg
cmp
repz
popf
jo
lock
mov
scas
sbb
sbb
mov
loop
xchg
dec
sbb
push
movsb
repz
pop
and
shll
mov
fs
lea
dec
mov
mov
sub
out
jmp
aaa
push
mov
add
ror
in
mov
adc
je
cmc
std
jge
mov
ret
push
outsl
out
inc
ret
sub
mov
in
enter
int3
fmull
jne
enter
into
jl
add
lahf
pop
xchg
ljmp
cwtl
dec
jmp
sbb
call
and
fucomp
dec
xor
orl
pop
mov
andb
mov
adc
sub
adc
int3
je
mov
cmc
mov
aas
fstpt
fcoms
adc
jb
sub
mov
fsubl
cmp
popa
add
scas
mov
push
mov
sbb
sub
mov
jle
or
inc
fbstp
lahf
test
imul
mov
mov
ja
ret
sub
mov
pop
outsl
sbb
mov
aas
jo,pn
ss
push
lret
pop
adc
dec
jp
shlb
add
xchg
sti
pop
adc
jnp
loope
out
push
push
mov
hlt
dec
into
movsl
dec
and
pop
mov
loope
jl
or
outsl
popa
lea
arpl
mov
or
and
stc
mov
push
or
mov
aad
jnp
hlt
sub
or
push
fistpll
insb
pop
add
cmp
adc
cmpsb
out
bound
and
xchg
js
stos
rorb
dec
in
fiaddl
lods
adc
fdiv
and
mov
push
ret
nop
mov
cmp
pop
inc
leave
inc
jb
ret
mov
mov
xchg
fsqrt
jns
xchg
pushw
fidivs
mov
bound
bound
sbb
mov
rdtsc
push
insb
mov
mov
loope
cmp
inc
cld
shr
cltd
jl
xchg
daa
push
xchg
iret
adc
and
sbb
rorb
sub
les
hlt
mov
rol
sbb
xor
push
push
xor
fsubs
push
scas
js
ret
dec
xor
loop
inc
into
pusha
out
inc
push
xchg
xchg
out
cmpb
xor
sarl
pop
add
pop
mov
loope
outsb
adc
push
sbb
xchg
lcall
add
and
aam
outsl
ljmp
sahf
sbb
jmp
pop
dec
aam
rcl
repnz
ljmp
pop
hlt
scas
scas
mov
push
out
dec
inc
in
lds
jle
out
and
shlb
outsl
add
test
ljmp
mov
mov
mov
jnp
sahf
popf
ljmp
cmpps
jo
test
mov
aas
rcl
lret
repz
loop
orl
stos
push
dec
gs
jae
sbb
mov
int
dec
ljmp
dec
xchg
push
ret
fs
imul
andb
daa
rcrb
or
popa
mov
xlat
and
xor
fwait
pop
daa
push
inc
sub
mov
ret
mov
push
mov
rorl
es
sahf
sub
fidivs
dec
test
icebp
dec
imul
inc
add
call
in
mov
pop
sti
sbb
lods
mov
adc
pushf
xchg
mov
pusha
adc
movsb
pop
ja
std
inc
test
lods
out
fcomi
jl
mov
pop
sub
sbb
fdivrs
xchg
inc
xor
aam
mov
inc
pusha
ds
mov
pop
sahf
int
push
pop
shll
mov
pop
xlat
push
mov
add
shl
lret
fisttps
cmpsb
into
adc
mov
xor
test
pop
mov
test
jne
gs
aas
add
lods
cmp
sbb
push
out
xchg
jmp
mov
inc
cwtl
jb
add
lea
xchg
inc
adc
cmp
fucom
stc
fbld
rorl
push
inc
cmp
push
push
adc
lods
push
stos
imul
out
in
or
fwait
push
and
sub
push
sub
mov
push
cltd
mov
push
mov
xor
mov
fsubl
xchg
movsl
popf
scas
jno
les
cmp
lret
and
mov
lds
sub
push
pop
mov
dec
or
ficomps
fcmovbe
xor
mov
jne
jb
popa
and
pcmpgtd
mov
inc
shr
imulb
add
mov
insb
push
jne
int3
and
mov
push
xlat
adc
xchg
lcall
pop
push
adc
xor
ja
cmc
cmp
jg
or
and
jbe
sbb
and
xchg
pop
inc
inc
pop
jae
call
cmpsl
imul
sub
push
sub
xor
loop
lods
and
jle
ret
les
loope
andb
or
cld
cmp
subl
adc
cmc
sub
push
mov
push
sub
add
jbe
mov
test
scas
scas
fmuls
adc
push
iret
mov
jg
xor
mov
sub
mov
aas
es
out
mov
je
std
scas
adcl
jmp
out
adc
jl
repnz
repz
cmp
testl
push
mov
push
add
mov
stc
push
adc
fnstenv
loopne
js
lahf
stc
mov
mov
aaa
sub
arpl
jmp
cltd
stos
out
ret
shll
pop
imul
add
mov
fildll
loopne
mov
scas
stc
lret
stc
dec
adc
mov
jle
cld
loope
or
add
xchg
aam
out
pushf
repnz
xchg
test
loope
mov
xor
cmpsl
loope
leave
xchg
movsl
mull
mov
das
fs
xor
and
jo
cmp
aad
dec
vpmulhw
pop
lock
mov
clc
jae
lcall
mov
lret
xchg
movsb
js
test
adc
faddl
loopne
enter
mov
test
dec
in
dec
arpl
jb
xchg
xchg
out
mov
pusha
cmp
je
dec
shl
xchg
mov
les
cmp
jg
or
scas
inc
test
mov
sahf
add
ficoms
inc
imul
stc
jae
fidivs
out
inc
scas
fists
push
pop
lret
andl
pop
mov
adc
mov
clc
or
add
sbbb
in
or
lea
xchg
cmp
loopne
aad
sub
pop
or
jnp
push
in
mov
push
and
mov
fnstsw
xchg
mov
dec
cwtl
pop
xlat
inc
pop
lret
cmc
jne
arpl
or
test
filds
jmp
fwait
notb
jg
xchg
nopl
add
cmp
aaa
mov
push
dec
stos
ficoms
sub
test
invd
insl
adc
movsb
lea
aam
pop
and
mov
dec
outsb
or
ret
lds
mulb
jmp
or
sbb
es
ret
xor
cmp
test
ret
or
ljmp
div
add
cwtl
repz
push
aam
and
sub
aam
movsb
jnp
pop
xchg
mov
arpl
pop
xor
lock
rcll
xor
dec
sbb
adcl
iret
inc
ss
or
xchg
pop
fdivrl
fwait
and
js
xor
lock
sbb
pop
push
mov
pop
aad
add
mov
sbb
xor
jmp
dec
inc
call
cmc
popf
sub
mov
jmp
mov
dec
fiadds
cmpb
jnp
mov
push
inc
mov
outsb
mov
and
sub
ret
std
push
pop
jecxz
push
or
mov
jb
inc
rcrl
inc
xor
xchg
jmp
roll
mov
mov
xchg
lahf
js
or
dec
loope,pn
inc
sbb
lret
rorl
enter
pop
lret
mov
ljmp
aas
jo
pop
dec
scas
jne
inc
test
incb
mov
loopne
or
push
mov
push
enter
xchg
nop
int
sbb
or
cmp
sbb
mov
and
xchg
xor
jo
xor
cmp
fidivl
dec
in
mov
sub
jns
mov
add
lret
lahf
push
rcl
jge
repnz
mov
add
cmp
in
imul
std
aam
and
inc
xor
insl
xchg
push
mov
jns
daa
out
shrb
pop
push
test
popl
arpl
cld
pop
push
pop
xchg
in
cwtl
cmp
movsl
jo
push
gs
jae
and
ret
push
mov
cmp
pop
ds
push
out
stos
push
std
mov
jo
ljmp
and
inc
sahf
dec
mov
adc
enter
ja
mov
add
dec
inc
mov
addr16
push
sub
xor
adc
enter
xor
daa
and
sub
test
mov
aaa
popa
dec
or
shrb
cli
iret
xor
and
fs
subl
ret
call
dec
sbb
mov
sbb
rclb
mov
dec
jmp
xor
push
aaa
rcll
rcll
or
aad
aaa
out
sbb
cmp
repnz
cmp
int3
cwtl
adc
jmp
inc
loop
pause
cmp
jp
sbb
push
scas
aaa
dec
mov
das
or
mov
inc
sub
in
mul
push
jbe
popa
hlt
mov
fcomps
ljmp
mov
das
sub
jb
and
xchg
negl
gs
rcl
repz
sbb
mov
lahf
xchg
cwtl
ljmp
lahf
pop
int
nop
rorb
jbe
mov
add
call
test
dec
sarb
push
xor
mov
cmpsb
and
push
test
lret
in
xchg
cmp
xchg
push
add
sbb
or
fsubr
scas
xchg
das
scas
dec
out
in
mov
ja
xor
cwtl
adc
sbb
lock
mov
inc
cld
pop
jne
cs
pop
mov
xlat
into
lea
mov
add
mov
jno
ret
cmp
dec
push
sbb
pushf
aam
stos
cmp
jg
sbb
cwtl
clc
repz
lea
jnp
jge
in
addl
pop
insb
data16
shrl
mov
xlat
rcrl
leave
sub
in
pop
xor
ret
and
jno
aas
sahf
push
jb
pop
test
pop
adc
mov
ja
sbb
data16
ljmp
xchg
add
leave
mov
adc
push
push
loopne
out
pushf
mov
ret
or
cli
andl
mov
xor
mov
nop
cwtl
dec
out
andb
xor
xchg
cmp
push
push
andl
stos
add
test
lods
out
add
mov
icebp
inc
mov
fwait
out
push
or
call
popa
jnp
jmp
dec
push
xor
and
xchg
les
es
cmpsl
mov
fincstp
idivb
pop
in
pushf
xchg
aad
push
mov
int
lods
xchg
inc
enter
hlt
out
sub
mov
jb
insb
push
pop
jnp
fcoms
into
adc
aas
pop
mov
mov
in
mulb
bound
pop
arpl
inc
jne
sub
cmp
jne
adc
shl
mov
sahf
sbb
decb
aad
or
mov
mov
dec
in
ljmp
sbbb
lcall
mov
aas
stos
test
xchg
ja
push
adc
sarl
xchg
mov
jg
stos
xchg
int
mov
andl
aam
in
jl
cmp
inc
popa
add
sbb
lret
xchg
popf
mov
or
push
dec
daa
inc
push
add
mov
ss
js
pop
js
jle
call
xchg
mov
adc
popa
xchg
xor
pop
roll
in
push
hlt
cmp
movsl
repz
or
sti
sub
repnz
adc
push
out
cmp
mov
inc
dec
mov
pop
jae
pop
mov
repnz
push
stc
fisubrl
mov
fsubrs
xchg
enter
sub
pusha
psubusw
loope
and
cmpb
dec
popl
lretw
dec
insb
cld
mov
ret
gs
ja
ss
inc
ret
arpl
sbb
les
dec
inc
fstps
jnp
scas
sahf
push
mov
lret
je
popa
stos
jb
or
fdiv
adc
inc
lock
cmp
mov
push
cmp
mov
dec
xchg
pusha
mov
cwtl
mov
cmp
mov
mov
push
mov
lret
sar
loop
push
adc
test
inc
repz
je
into
dec
fisttpll
push
xor
loopne
mov
add
adc
lock
or
inc
lret
gs
sbb
gs
jmp
mov
sub
popf
aaa
sti
arpl
xor
lods
inc
push
sbb
push
mov
lcall
pop
adc
cmpsb
xor
outsb
hlt
mov
cmp
mov
adc
mov
sbb
cmc
cld
pop
cmp
jmp
pop
scas
ds
ret
out
inc
add
jecxz
xchg
lret
or
lret
es
js
decb
xchg
je
and
test
stos
jae
movsl
and
out
xor
cmc
rcrb
mov
pop
jo
cli
in
mov
sub
mov
pushf
xor
lea
mov
test
js
or
sub
fdivrp
imull
popa
and
push
pop
mull
rdpmc
cmc
push
xor
sbb
sbb
adc
or
sub
les
mov
push
int
aaa
jge
call
mov
dec
loopne
push
jnp
inc
addb
cmp
sbb
pop
xor
mov
mov
pushf
fidivrs
mov
enter
lret
inc
in
daa
ss
jmp
outsb
or
push
sub
ljmp
mov
orl
jl
out
xor
mov
aaa
movsb
or
jb
jecxz
sub
js
cwtl
orl
arpl
rcll
mov
lock
enter
sbb
mov
outsb
popf
ljmp
punpcklbw
aad
aaa
push
es
or
xchg
lret
jle
add
aad
fwait
add
out
clc
imul
mov
aad
int3
mov
jmp
inc
mov
test
test
xchg
jge
mov
data16
sub
insl
stos
fidivl
dec
pop
or
xchg
cmp
ljmp
xchg
adcb
xchg
mov
xchg
sub
add
into
push
jg
push
clc
lods
std
lea
icebp
popf
sahf
int3
cmp
sti
addr16
jnp
popa
lods
gs
mov
aam
xor
add
lahf
pop
mov
lret
mov
lods
je
sub
dec
aam
jne
inc
add
mov
adc
push
rorl
xor
lret
in
cmp
sub
xchg
adc
pushf
push
sub
outsb
es
pop
sub
dec
pop
shlb
mov
cmp
scas
ja
sub
in
lahf
pop
add
push
int3
dec
push
and
es
xchg
out
jo
lret
jmp
adc
outsl
sub
pop
pop
dec
mov
enter
cltd
sub
fildl
insl
int3
cli
jecxz
sub
pop
jb
fs
sub
mov
lea
or
fnstsw
subl
cld
repnz
flds
pop
out
add
sbb
cmp
gs
movsb
mov
movsb
out
fildll
loope
into
sbb
sub
and
subb
pushf
xchg
add
pop
inc
aam
fs
xor
and
div
add
fisubrl
mov
dec
cmp
clc
sbb
sub
mov
out
xor
mov
lods
les
cmp
and
xchg
movsl
jo
mov
data16
loop
sbb
push
dec
sbb
adc
ret
pop
mov
fsub
cmc
jle
in
shlb
sti
add
hlt
mov
cmp
or
jmp
mov
lahf
in
mov
sahf
aam
aaa
sub
sub
dec
jne
aas
test
cmp
xor
or
arpl
adc
lds
mov
jns
int
mov
push
dec
dec
push
dec
les
mov
loop
cmp
adc
and
inc
jl
popf
adc
sbb
jecxz
arpl
in
rorl
outsb
iret
rcl
mov
daa
pushf
call
aaa
es
mov
xchg
shl
test
idivl
sub
pop
es
scas
pop
je
into
cmpsl
call
xor
jbe
sbb
pop
xor
mov
enter
add
inc
adc
xchg
lahf
hlt
xor
call
das
push
test
jle
adc
cs
mov
adc
add
rclb
inc
cltd
std
sub
inc
hlt
repz
js
xchg
rorb
lods
sbb
mov
xchg
jns
movsl
jae
sbb
test
popa
push
lcall
cwtl
mov
jle
dec
mov
enter
mov
dec
adc
mov
inc
shrl
pop
push
loopne
cld
sbb
call
fbstp
mov
iret
mov
mov
lahf
out
jl
gs
pop
pop
rorl
iret
mov
cmp
repnz
loop
inc
outsb
mov
test
sbb
mov
lods
jl
and
add
ret
scas
sahf
fcomps
mov
sub
mov
jbe
cli
sub
cltd
mov
mov
dec
pop
outsl
dec
test
add
sbb
movsl
xchg
fidivrs
lahf
and
pop
jae
sub
dec
dec
pusha
inc
jl
mov
adc
dec
pop
dec
sub
popf
fcoms
push
dec
adc
es
mov
xor
repz
cs
sbb
fwait
std
cs
xchg
test
mov
push
pop
jp
shl
popf
fisttps
lahf
fadds
jnp
jmp
js
pop
inc
mov
cs
and
cli
sbb
fcmovnu
dec
mov
imul
and
cmc
mov
jnp
inc
jp
xchg
cld
add
movsl
or
mul
movsl
adc
or
clc
and
mov
or
xor
add
push
jb
repz
mov
into
repz
xor
inc
dec
pop
lretw
addl
mov
imul
movsb
lcall
sub
mov
jno
ss
call
out
mov
shlb
pop
aaa
jne
dec
insl
inc
or
mov
lcall
pop
dec
scas
xor
adc
dec
mov
inc
mov
mov
std
mov
and
xchg
or
jp
and
push
xchg
fisttpll
nop
push
loop
ret
and
mov
shl
lret
add
dec
fidivl
and
imul
ljmp
dec
push
sub
jo
pop
stos
pop
and
jbe
mov
scas
out
cmp
in
aaa
mov
mov
sbb
push
ret
mov
pushf
leave
mov
ds
stos
or
fidivrs
lret
mov
andb
fstps
xlat
dec
les
in
push
adcb
jp
sub
jns
paddw
xor
jns
cli
sbb
sarl
adc
pop
sbb
push
ret
and
fs
icebp
arpl
outsb
jno
jne
sub
stos
incl
pusha
scas
out
fstpt
lds
jle
push
mov
aam
enter
addr16
fadd
mov
xor
mov
add
ljmp
jp
sbb
push
rcrl
adc
xor
lcall
cmp
popf
sbb
add
sub
fwait
pop
adc
sub
or
xchg
int
cmp
xlat
les
xchg
mov
hlt
ds
mov
nop
pop
sbb
sahf
adc
jecxz
mulb
subl
pop
xchg
cltd
mov
aaa
imul
shl
push
sub
inc
popa
mov
inc
cwtl
push
inc
mov
mov
cmpb
fadds
push
nop
pop
mov
push
xchg
mov
dec
pop
pop
scas
sbb
dec
inc
sti
gs
icebp
cmp
out
ret
inc
push
inc
pop
sub
add
bound
pusha
andb
xchg
mov
ss
mov
test
cmp
push
stos
inc
dec
mov
cmpsb
cltd
push
sahf
dec
jbe
mov
xchg
lcall
mov
movsb
mov
roll
outsb
fucomi
add
mov
or
mov
adc
mov
push
into
fmull
pop
imul
pop
push
lahf
loope
test
sbb
push
add
leave
xor
clc
int3
dec
dec
xor
adc
jmp
cmpsl
xor
imul
lcall
inc
xchg
out
imul
xchg
adc
cld
cmc
push
jge
fisttps
hlt
fs
jb
mov
insb
mov
es
je
loope
aaa
mov
cmp
cmp
movsl
push
xchg
subl
mov
fnstcw
and
or
ja
mov
aaa
in
jecxz
leave
cmp
cmp
adc
imul
mov
sbb
rcl
inc
call
mov
popf
aad
jne
jmp
shrl
addr16
out
inc
sbb
mov
cmpb
into
ds
lret
js
xchg
push
mov
test
les
sub
or
mov
inc
or
mov
xor
test
or
mov
adc
ret
mov
xchg
mov
test
xlat
sbb
lret
cwtl
adc
out
dec
adc
sub
int
push
cli
sbb
or
gs
sti
aad
aas
xchg
dec
mov
imul
mov
lahf
xchg
jmp
in
pop
adc
add
inc
icebp
jmp
mov
sub
push
push
jbe
cli
and
stos
jo
mov
push
out
xrelease
imul
jbe
inc
adc
push
inc
sub
inc
xchg
fistl
cmpsb
inc
lock
inc
or
mov
fldlg2
stos
and
and
push
or
sbb
jmp
push
lods
pop
cmp
iret
jo
lret
sbb
jo
lret
sub
testl
call
jne
stos
out
lds
cld
out
sub
push
jmp
mov
lahf
dec
dec
mov
xchg
cmpsb
ds
cmpsl
cmc
cltd
mov
xchg
push
cmp
xlat
sbb
insl
bound
or
dec
and
pusha
lahf
fsub
jl
jecxz
xchg
jne
sti
mov
test
stc
mov
xor
out
mov
stc
lds
sub
adc
stc
pop
xor
dec
sbb
call
insb
hlt
ficomps
hlt
mov
loop
dec
inc
push
sub
jb
sbb
stc
rcrb
mov
rcll
pop
adc
int3
jle
push
ljmp
and
cmp
pushf
xchg
loope
mov
lret
cmp
xchg
add
out
outsl
xchg
and
mov
mov
xchg
push
inc
shll
inc
aad
xor
mov
fistpl
cmc
and
cltd
xchg
push
dec
in
test
jmp
lcall
movsb
xchg
mov
int
stos
stc
es
pop
or
pop
push
inc
mov
nop
dec
jle
flds
fcomps
push
aam
push
in
mov
pop
push
mov
mov
out
lret
int
js
add
lock
and
mov
mov
push
sub
jnp
lahf
cwtl
inc
pop
jecxz
mov
imul
mov
xchg
fstl
xchg
ljmp
cli
adc
popf
xor
xchg
mov
push
mov
aam
addr16
push
cmp
fnstcw
scas
bound
sub
or
mov
scas
ds
cmp
sbb
adc
mov
adcl
pop
faddp
xchg
and
and
cmp
ja
adc
sbb
mov
std
mov
fbld
addr16
shll
inc
push
and
movsb
lret
ja
mov
cmpsl
fmuls
jne
ret
daa
xor
popa
test
jae
mov
pop
xlat
in
mov
aas
sbb
fwait
sahf
jbe
lcall
cmpsl
popa
aaa
sahf
xchg
out
popf
inc
mov
call
xor
and
jmp
js
pop
das
pop
sub
aad
mov
push
cld
les
sbb
stos
lods
ficompl
pop
cld
clc
hlt
imul
pusha
ss
mov
inc
repz
ja
and
call
mov
int3
popa
lods
push
push
xchg
fstl
in
pop
inc
xor
mov
mov
incl
lret
dec
sub
enter
mov
inc
jle
sti
call
ja
aam
leave
adc
cmp
ret
or
cmc
pop
mov
out
fcoml
lock
jbe
cwtl
cld
fldl
push
fidivrl
inc
fisttps
mov
rcr
arpl
add
cwtl
xchg
in
pop
cmp
inc
ficoml
stc
inc
xor
mov
pop
pop
lds
dec
aaa
ss
popa
jmp
xchg
ja
pop
pop
pop
testb
inc
mov
shl
inc
scas
add
adc
inc
pop
xchg
inc
lods
jle
jbe
fcoml
test
rcl
dec
dec
adc
add
inc
sub
bound
jns
add
fsubs
sbb
test
cld
daa
pop
sub
xchg
xor
aaa
or
sub
lahf
data16
out
test
jecxz
sbb
outsb
cmpsl
xchg
or
fisubs
in
xchg
das
cli
dec
test
or
outsb
xor
mov
test
js
popf
mov
addr16
push
xor
cltd
stos
push
insl
inc
jb
mov
push
sub
mov
mov
sub
addl
push
mov
jne
fistl
inc
lea
out
insl
repz
fsubrl
mov
xor
add
dec
add
daa
jae
sarb
aas
cmp
cmpsl
in
mov
pusha
mov
cmp
iret
pushf
cmp
sub
enter
ss
mov
xor
jg
jecxz
movl
inc
fistpl
repz
inc
idivb
fimull
or
jecxz
sub
xor
int3
push
sub
pop
outsb
testl
jae
sbb
mov
shll
mov
mov
arpl
into
xor
not
and
sub
mov
dec
movsl
mov
jne
xchg
pop
popf
push
add
loopne
push
xchg
lock
int
lret
lahf
rcrb
pop
das
xor
in
stos
pop
sbb
cmp
pop
sbb
mov
mov
aam
sbb
lret
ss
hlt
clc
mov
push
push
dec
cmpsl
pop
push
nop
xchg
gs
lret
jle
ret
dec
pop
aaa
neg
pop
sbb
dec
out
add
xor
lcall
stos
lcall
outsl
aam
outsb
mov
sub
sahf
add
loope
dec
or
out
dec
int
adc
imull
fiadds
dec
push
mov
icebp
testl
sbb
mov
stc
in
pop
insl
ja
sbb
daa
adc
loopne
cmpsb
scas
cmpsl
hlt
add
jl
daa
mov
call
scas
sub
push
loope
push
inc
inc
inc
into
fnstenv
test
jle
cmp
xchg
faddl
jbe
mov
repz
ja
add
mov
jmp
loopne
or
xchg
adc
fnstcw
mov
xor
loopne
cmp
imul
out
cmp
adc
push
ja
in
gs
aaa
repnz
and
jl
roll
cmp
push
or
movsb
mov
jecxz
add
addl
jnp
popf
popa
outsl
loopne
pop
adc
sbb
cmp
lcall
ja
out
sub
mov
repnz
cmpl
mov
jo
cmc
clc
inc
cmp
cwtl
shll
cmp
adc
mov
loop
mov
xchg
cmp
frstor
mov
pushl
mov
je
addr16
out
stos
outsb
aas
pop
mov
push
movsl
fwait
cmp
xchg
pop
arpl
dec
add
sbb
scas
imul
mov
or
rorl
pop
push
ja
les
les
aaa
jecxz
repnz
add
add
nop
clc
inc
mov
scas
cmp
mov
dec
or
out
shrb
sbb
lea
add
xlat
sub
fisttpl
and
jbe
pop
loopne
cmp
out
sub
lock
sti
mov
sub
pop
xor
js
mov
mov
iret
inc
fisubs
in
dec
fs
cmp
mov
repnz
movsb
in
cmpsb
cmp
inc
hlt
sbb
adc
mov
xchg
add
dec
test
sbb
iret
jle
leave
sub
lods
imul
dec
dec
test
jecxz
jp
xchg
ror
xchg
hlt
out
fdivs
xor
push
mov
cmp
adc
cmp
pusha
test
cmp
pop
jp
fbstp
scas
xchg
sbb
fsubl
mov
gs
gs
jg
jno
xchg
fdivrs
jmp
lahf
mov
jno
lahf
leave
out
sbb
push
iret
xor
pop
ds
ljmp
and
pop
mov
xchg
push
int3
cs
push
inc
shlb
les
and
cld
loope
push
pop
jbe
jo
jmp
inc
dec
out
insb
adcl
add
ror
mov
mov
push
mov
adc
xor
cmp
icebp
insl
sbb
outsl
mov
or
pop
xor
in
or
test
fwait
aas
jle
pop
test
mov
fs
int
popf
dec
mov
xchg
or
xor
es
cmp
fiadds
popa
cmc
mov
les
ljmp
outsl
in
mov
cmp
out
popf
pushl
sub
mov
dec
nop
sbb
lcall
aas
ljmp
pushf
or
push
stos
jb
icebp
into
mov
data16
sarl
jae
insb
cwtl
xchg
mov
xchg
xor
rsqrtps
stos
mov
shll
sbb
xor
movsb
out
xor
jbe
ret
arpl
movhps
mov
push
call
pushl
cwtl
out
xlat
ja
jbe
daa
out
out
jne,pn
orb
cwtl
into
data16
xchg
xchg
movsb
or
lahf
push
or
js
dec
xchg
aaa
lret
mov
je
mov
fdivs
sbb
popa
inc
mov
mov
pop
mov
sbb
mov
lds
push
mov
dec
inc
fstpt
xchg
jle
mov
sbb
or
mov
imul
adc
in
dec
sbb
lret
fadd
sbb
mov
in
jbe
sarb
enter
jge
or
out
and
push
mov
imul
aam
ret
jo
sbb
inc
les
jg
jae
xchg
push
add
ljmp
cmpsb
pop
pop
mov
xchg
xchg
push
xor
imul
cmp
adc
insb
fldl
call
sarl
dec
aad
fcoms
and
sbb
aam
mov
insb
loopne
mov
and
lahf
stos
mov
pop
sbb
xlat
or
divl
in
out
add
adc
cmp
xor
not
dec
xlat
mov
pop
xlat
lock
xchg
mov
in
sub
nop
cwtl
sarb
cs
mov
add
bound
push
fisubs
mov
add
mov
mov
jp
and
daa
ss
aaa
mov
jne
bound
push
mov
punpckldq
cmp
adc
push
addl
xchg
inc
xchg
icebp
stos
push
int
jo
je
adc
frstor
sahf
jns
inc
xchg
out
lods
pop
lea
enter
fcomps
out
push
leave
out
mov
gs
nop
loopne
lock
and
aas
jl
cmp
push
out
dec
mov
sub
iret
mov
jae
adc
clc
pop
jb
push
data16
lahf
push
iret
mov
add
add
test
jnp
fsubr
dec
mov
mov
cmp
xchg
adc
in
hlt
test
mov
stos
std
test
arpl
in
jnp
inc
sahf
or
out
outsb
out
jmp
dec
dec
xorl
pop
pop
leave
xchg
loop
xor
adc
inc
cmc
xchg
sbb
incl
adcb
in
scas
outsb
out
inc
push
popa
std
push
push
repnz
dec
cmpsb
pop
hlt
xor
xor
and
jns
push
jmp
les
clc
sbb
imul
and
pop
ret
push
or
in
scas
shlb
repz
adc
xchg
push
movsl
pop
xchg
imul
jo
dec
sbb
adc
mov
stos
adc
lcall
aas
dec
or
push
push
arpl
and
dec
jnp
das
adc
mov
les
push
mov
mov
enter
jb
outsl
fwait
pop
mov
cld
mov
cld
pop
inc
xchg
xchg
mov
jo
xor
in
xchg
test
adc
pop
sbb
xchg
push
fs
jp
sub
sbb
sbbb
iret
test
xchg
movsb
and
cmp
daa
out
mov
fdivrp
cltd
fisttpl
mov
and
cmp
gs
or
add
or
sub
hlt
xor
in
fcmovbe
test
xor
sub
pop
frstor
je
pop
push
enter
dec
aam
rol
popa
mov
loope
jne
sar
stc
imul
pop
dec
cmc
pushf
xlat
icebp
sbb
sub
test
stc
or
sbb
shlb
mov
mov
xchg
out
add
xor
add
push
insb
cli
loop
dec
insb
inc
and
mov
cmp
fadd
je
call
data16
or
dec
orb
movsl
call
mov
sbb
int
or
and
push
mov
xor
jae
push
mov
dec
push
lcall
into
push
xchg
cmp
lret
nop
add
jne
mov
or
jmp
ss
iret
sahf
add
cli
popa
out
or
sahf
inc
dec
mov
aas
cmp
daa
outsl
cmp
push
mov
jb
outsb
add
push
or
dec
ja
mov
mov
aad
loopne
mov
scas
ret
jbe
and
xchg
jnp
loope
rolb
xor
outsb
test
jo
or
aam
push
add
hlt
xor
lods
clc
sub
testb
push
popa
sbb
adc
jle
mov
mov
loop
sbb
call
mov
and
cmp
mov
sti
sti
cmp
lods
xchg
daa
jge
xor
fistpl
cmp
pop
mov
mov
jg
in
inc
outsl
add
xchg
jne
sbb
mov
aad
pop
inc
mov
mov
jnp
clc
ss
test
inc
or
ret
mov
push
inc
jecxz
and
xor
jl
fstps
stos
inc
or
pop
mov
adc
xchg
jno
out
call
in
into
fs
inc
cli
sub
xor
divl
add
shlb
sbb
call
pop
rcrb
inc
mov
mov
mov
pop
mov
loop
and
fbstp
or
stos
push
sub
sti
in
jmp
inc
pop
dec
in
sub
or
aas
loopne
ja
aas
push
sub
lret
mov
or
out
movsb
sbb
movl
xor
xor
fcmovnu
or
jno
sub
imul
sahf
push
xchg
shlb
lahf
in
inc
es
pop
sbb
push
push
ds
inc
push
lods
les
gs
lds
clc
sub
cli
lea
dec
stos
loope
pop
test
popa
cmp
xor
lret
push
inc
mov
stc
loopne
out
add
popa
jmp
and
fwait
sbb
lods
sbb
jg
es
mov
push
xlat
jmp
aad
loope
iret
sarl
mov
inc
mov
add
es
hlt
cmc
out
add
pop
sub
push
movl
cld
fldenv
xor
vmovhps
or
shll
imul
or
cld
lods
xor
adc
xor
mov
dec
stos
dec
mov
jl
sbb
shll
dec
mov
int
sub
jo
mov
je,pt
cmpsl
pop
mov
aas
jmp
jl
dec
add
in
fbstp
xor
xchg
movsl
mov
and
fs
sub
aad
es
cmpsb
sahf
sub
push
callw
xor
pop
jle
mov
in
mov
jne
mov
xor
fdivs
pop
ljmp
and
mov
mov
loope
in
out
orb
add
movsb
sti
pop
xchg
loopne
push
insb
rcll
fbld
jg
or
dec
push
filds
mov
jl
mov
sbb
mov
cs
sbb
adc
mov
sbb
js
jecxz
or
dec
cs
or
lret
in
push
sahf
fs
lret
ja
subl
das
jge
ja
mov
inc
scas
lret
inc
xor
ljmp
add
sub
adc
push
aas
add
sub
and
xorl
inc
dec
pop
cs
icebp
cli
fxch
mov
mov
test
sbb
mov
cmp
mov
int
ss
pusha
ret
xchg
sti
jae
leave
imul
sub
sti
mov
mov
jnp
xchg
leave
stos
aad
xchg
add
movsb
xchg
push
je
cmp
pop
arpl
outsl
mov
cmp
jmp
mov
test
and
divb
dec
popl
fisubrs
enter
pop
dec
xor
inc
notl
or
mov
pop
and
call
add
int
cmpsb
mov
pushf
ja
ret
fcoms
cld
test
shr
imul
mov
out
add
cmp
aam
leave
popf
repnz
mov
or
jmp
les
xchg
imul
cmpsb
jbe
xchg
insl
es
and
sub
montmul
cmpsb
inc
out
sub
dec
cmc
aaa
mov
int3
fisttps
xor
sti
roll
dec
inc
ret
adc
inc
dec
icebp
and
pushf
test
cwtl
jno
cmp
inc
adc
insl
lods
loopne
xorl
pop
cmp
dec
in
mov
xchg
xor
stos
add
sbb
cmp
add
lcall
out
aaa
push
ret
rcll
faddl
and
jb
mov
jecxz
les
fidivrs
xchg
push
mov
xor
push
daa
jmp
push
adc
jecxz
out
hlt
mov
xor
cld
add
in
dec
ret
push
ds
clc
ret
push
in
cmp
xchg
adc
inc
dec
mov
jns
out
inc
bound
mov
xor
into
dec
test
sbb
jo
add
std
or
jge
xchg
jb
xchg
ss
hlt
jmp
fsubrl
popa
das
fidivl
lret
cmp
inc
inc
aad
mov
push
roll
adc
jl
and
mov
adc
lock
cmc
mov
sub
mov
fldenv
pop
xchg
outsl
mov
sbb
ljmp
push
push
call
pop
xchg
or
mov
adc
iret
ret
adcb
es
or
jl
add
push
enter
int3
add
popa
nop
fbstp
cmpl
shrb
mov
jae
addr16
xor
std
lds
andb
pop
push
push
in
xor
pop
sub
ja
mov
mov
xor
mov
loope
pop
repnz
cs
test
lret
test
adc
jecxz
ja
push
out
or
mov
sub
mov
call
or
ss
scas
push
mov
xor
repz
jmp
sub
sub
ficoms
es
mov
mov
xchg
loopne
mov
and
movsb
imul
lods
inc
add
xor
gs
data16
test
out
pop
lret
das
push
jmp
test
dec
sti
adc
pop
cmp
mov
dec
sbb
loop
sahf
xor
cmc
pop
or
xor
mov
cmpsb
and
mov
les
xchg
jne
xorb
pavgb
cltd
out
into
jno
cmpsb
sbb
sbb
cmp
xor
push
or
or
adc
mov
sub
and
cmc
mov
push
pop
and
push
cwtl
pop
sbb
add
clc
sbb
aam
sub
lods
push
cs
add
pop
mov
iret
cli
mov
jp
pop
mov
fsubs
cli
xlat
std
daa
jmp
repz
ljmp
mov
clc
push
mov
lds
mov
inc
dec
cmc
mov
push
scas
jne
push
adc
ljmp
fs
pop
cmpsb
addr16
ret
test
adc
xor
and
lret
cltd
out
and
fildl
lds
or
test
iret
int3
or
push
das
faddl
or
dec
lret
js
xchg
and
push
out
dec
mov
xchg
cmp
popf
std
in
aad
int
xor
mov
jmp
mov
or
inc
stc
mov
or
inc
and
into
aam
outsl
push
jne
into
je
and
mov
push
xchg
pop
sbb
or
orl
outsb
xchg
inc
and
push
test
insb
xchg
xchg
xchg
je
clc
insl
push
cmpsb
cmc
xchg
xor
pop
and
out
jle
std
sub
jle
out
std
mov
std
stos
inc
movsb
mov
fimull
xlat
jg
ljmp
mov
je
mov
or
pusha
rclb
and
adc
and
adc
xchg
loopne
scas
cmp
out
dec
dec
lret
mov
lea
sub
movsl
repnz
out
test
pushf
in
pusha
push
cmp
aaa
sub
idivl
lods
lea
mov
mov
dec
cmpsl
and
cli
cmp
stos
fdivrs
mov
daa
pop
sbb
mov
shll
hlt
push
xor
ja
or
shl
rol
pop
xchg
mov
adc
loop
clc
ja
inc
aam
rcll
or
xchg
mov
call
mov
jno
pop
adc
cmpsl
clc
cmc
push
xor
insb
pop
adcl
xor
mov
pop
rcr
and
mov
es
add
ret
or
mov
xchg
addb
xchg
ret
mov
insl
mov
stos
fcoms
leave
adc
and
add
fwait
xchg
pop
cwtl
jmp
ds
stos
xchg
cs
pushf
mov
dec
xchg
mov
cs
xchg
stc
inc
pop
mov
sub
test
push
icebp
xchg
lret
push
repnz
sahf
push
mov
push
mov
jl
cli
mov
enter
jl
pop
popa
jno
outsb
sbbl
mov
and
push
lock
in
cmp
add
and
lods
add
add
clc
insb
out
decb
push
mov
mov
je
mov
mov
xchg
add
lods
fcoml
xor
add
mov
jo
pop
pusha
mov
addl
xor
sbb
mov
cmp
add
fcoml
jp
sub
pusha
iret
push
imul
adc
test
mov
lahf
push
or
lahf
rorl
lods
jne
fcoms
xchg
fs
roll
inc
mov
jecxz
popa
xchg
adc
mov
scas
mov
mov
outsb
add
es
cmc
inc
sbb
xor
and
fimull
pop
inc
cli
xchg
cmp
sti
hlt
sub
aaa
bound
or
hlt
test
xchg
into
inc
int3
dec
int3
mov
mov
out
sbb
insl
les
jmp
add
inc
adc
bound
jo
mov
mov
test
movd
jle
pop
cmc
pop
ljmp
inc
inc
scas
xor
nop
ds
cmp
sbb
or
lret
gs
or
outsb
popa
mov
cmp
sbb
movsl
vpand
std
push
sbb
or
inc
xchg
lods
shlb
lods
pushf
cmp
cmpsb
push
push
mov
xor
cmp
sbb
xor
push
fcomps
ja
inc
sar
or
stc
ljmp
scas
call
or
ficoms
sahf
clc
adc
adc
pushf
fsubrl
adc
test
bound
fidivrl
jg,pn
cmp
lds
add
xchg
das
stos
fiadds
xchg
daa
sub
fldl
outsb
leave
cmp
sbb
pusha
push
or
mov
idivl
mov
inc
rep
scas
fildll
cltd
out
mov
mov
or
inc
cmpsl
out
and
lods
mov
mov
inc
std
in
ss
inc
inc
and
or
outsb
xor
dec
xchg
or
mov
mov
scas
mov
gs
ret
xchg
lcall
cmp
notl
and
ss
sub
enter
add
xchg
jae
dec
nop
int3
imul
mov
gs
mov
mov
lret
xchg
xor
xor
cmp
push
mov
mov
mov
lock
sti
sbb
ret
jecxz
popa
cmp
xchg
lock
lret
rcll
dec
shlb
inc
adc
sbb
inc
cmpsb
fmuls
ljmp
push
sub
aad
mov
sub
sbbb
xchg
adc
cli
fildll
mov
xchg
inc
adc
dec
ret
subl
fsubs
mov
hlt
test
and
jmp
mov
fwait
cmpsb
test
dec
aad
lret
mov
testb
out
pop
mov
mov
int
push
mov
es
pop
mov
bound
outsb
std
and
jbe
sbb
inc
xor
and
mov
cmpl
pop
std
mov
mov
icebp
pushf
sbb
pop
dec
gs
mov
jg
movsb
ljmp
scas
aaa
popf
iret
shrb
dec
out
sbb
pop
pop
pop
std
pop
frstor
lds
andl
es
outsl
cli
dec
cli
dec
adc
add
and
jns
clc
add
dec
adc
add
cmc
lret
out
fs
js
rorb
test
add
xor
push
or
ret
xlat
pcmpeqd
das
fstpt
mov
jge
jb
stc
test
das
dec
add
cwtl
inc
cli
dec
repnz
rcrb
adc
sbb
sar
adc
inc
divl
mov
popf
call
lds
push
push
sbb
and
inc
mov
dec
mov
in
les
push
xor
in
pop
inc
fcomi
es
mov
pop
jo
jecxz
inc
inc
int
or
sbb
test
mov
xor
cld
adc
mov
push
fdivrs
xchg
pop
lret
mov
frstor
js
movsb
lds
push
in
shll
sub
scas
repz
sbb
push
ficoms
mov
mov
in
int3
test
gs
daa
sbb
rolb
add
into
add
jo
popa
push
das
cmp
fisttpll
and
jnp
test
mov
out
jne
gs
dec
cmp
out
cmp
aas
sub
insb
lods
xchg
xor
push
xchg
loope
xor
sub
daa
xor
adc
test
jge
mov
jnp
mov
int3
mov
inc
mov
stos
into
and
jo
cmpsb
insl
inc
out
lods
lods
mov
pop
gs
mov
push
push
ret
mov
jnp
and
ds
xchg
sub
sbb
aaa
dec
push
mov
repz
andb
fwait
gs
cmpsb
enter
sbb
mov
add
jb
sub
dec
data16
xor
ds
sti
mov
hlt
lea
sub
subl
pushf
add
and
cli
cmp
ds
xor
mov
cmp
stos
stos
in
fcomp
ds
and
xchg
cmp
inc
mov
lods
hlt
xor
inc
pop
push
jl
mov
fcmovbe
addb
imul
mov
mov
or
add
filds
sbb
xor
fldl
testb
pop
pop
xlat
mov
cmpsb
xchg
jp
aas
adc
scas
push
stc
jl
ss
jbe
pop
add
xchg
test
push
jge
sub
mov
scas
jmp
pop
fldt
test
hlt
cmc
and
adc
nop
outsl
cmp
and
and
jecxz
into
cmp
fwait
hlt
and
cli
ret
lock
cmp
addr16
fnstsw
test
adc
dec
adc
mov
or
mov
push
pop
popa
xchg
xchg
jge
aam
sar
stos
add
pop
mov
orb
xchg
icebp
xchg
iret
pusha
mov
cmc
imul
mov
repnz
xchg
adc
cli
pushf
fwait
xlat
xor
test
addr16
int3
sbb
outsl
shll
aas
or
cmp
subl
imul
add
mov
iret
mov
pop
push
cmp
push
or
fdivs
lds
in
dec
and
jns
pop
add
jmp
shr
xchg
mov
jmp
popa
sbb
data16
lahf
loopne
call
lahf
jle
ja
fisubrs
lods
loopne
sub
dec
inc
push
sbb
in
sti
aad
mov
cmp
dec
sub
sarl
mov
lock
mov
jg
imul
inc
lds
and
ret
fs
jl
test
psrad
ficoml
jmp
imul
ss
jae
pop
addr16
insb
das
mov
call
pop
mov
call
mov
sti
dec
test
push
jp
xor
pop
rcrl
stc
sbb
je
push
sbb
lods
divb
ja
gs
jl
sti
xchg
testl
insl
repz
cmpsb
mov
ss
stos
jno
sub
cwtl
mov
pop
or
int
ja
aam
pop
pop
xchg
mov
and
sub
cmp
leave
mov
rcr
rcr
icebp
lahf
out
push
fmulp
adc
mov
add
dec
lret
mov
outsl
pop
add
icebp
pop
xadd
loope
cmp
inc
pop
cmc
clc
clc
fistpll
bound
push
jae
inc
push
ja
push
mov
push
mov
pop
mov
lcall
ror
je
sti
inc
mov
jb
inc
mov
cmp
pop
test
add
jg
push
out
fbstp
fs
and
aad
jmp
loopne
stos
or
lods
sbb
fsts
and
sub
xchg
and
in
inc
popa
les
in
stc
dec
fisubl
andl
popf
lock
inc
mov
push
movsl
lods
cmpsb
out
pop
loop
lret
xor
out
imul
push
push
lods
inc
or
push
cltd
repnz
aam
cmp
cwtd
dec
mov
and
pusha
cmp
mov
cmp
cli
les
sbb
sub
iret
inc
sub
adc
ret
movsl
push
out
into
arpl
jg
addr16
adc
cmpsl
xor
or
leave
repz
mov
push
adc
pop
int
xchg
sbb
push
cmp
arpl
je
flds
es
gs
cmpsb
test
mov
xor
pop
lea
jle
push
loope
stos
add
cltd
pminub
inc
cmp
inc
jnp
aad
mov
mov
jo
xor
add
lea
pop
xor
mov
test
rcr
inc
lret
ret
inc
pusha
inc
mulb
pusha
movsl
call
push
mov
sahf
or
or
xchg
fwait
nop
data16
aas
cmpsl
mov
mov
jne
dec
out
mov
movsb
orb
andl
push
sahf
push
push
push
imul
test
out
sbb
js
add
inc
int3
hlt
dec
sbb
dec
loop
jmp
mov
push
jo
dec
jmp
leave
push
lret
sub
mov
pop
mov
xor
push
add
in
jp
sar
rcrb
negb
lods
scas
dec
inc
scas
aas
cmc
in
ret
stc
inc
cmp
jle
loop
mov
lods
xor
ja
push
cli
imul
aad
pop
cli
inc
jg
jb
out
sbbl
cmp
daa
mov
push
nop
int3
clc
xchg
mov
cmp
sub
sar
dec
notb
dec
gs
add
xor
mov
popf
test
rcll
xchg
in
jp
cmp
sub
mov
push
aas
fwait
mov
test
jle
enter
aam
ret
add
xor
int
sub
int
mov
hlt
inc
scas
scas
mov
sahf
sub
jb
pop
push
dec
push
xor
or
subl
push
cltd
popa
jo
dec
dec
aad
test
mov
xchg
movsl
daa
pop
dec
adc
cltd
mov
pop
call
clc
pop
call
lcall
mov
in
add
xchg
std
xor
out
lods
jo
sbb
int
sub
xchg
lods
and
sub
pop
shll
out
decb
fs
pusha
or
mov
mov
cmp
xor
loop
push
sbbw
inc
mov
xchg
dec
cmp
enter
adc
flds
lret
outsl
xchg
fwait
push
repnz
lgs
xorl
out
push
push
add
int3
mov
or
push
lods
subb
push
dec
jbe
push
jnp
daa
test
rclb
xchg
jne
push
int
cmp
sahf
in
cli
fiaddl
nop
stos
mov
inc
inc
fcompl
sbb
adc
push
or
ljmp
das
or
adc
aas
mov
push
stos
nop
mov
fwait
sub
dec
sbb
inc
outsl
popa
divl
xchg
decl
lret
outsl
dec
out
ret
into
fcmovne
xor
push
test
and
mov
rorl
sbb
dec
bound
popa
insb
subb
fstps
mov
lods
add
arpl
cwtl
js
movsb
js
push
cmpsb
das
pop
insb
out
outsb
xor
dec
dec
aad
ficoml
imul
popa
test
or
or
and
adcl
pop
les
sub
lods
add
sbb
jbe
lock
sbb
lcall
add
out
xor
xchg
xchg
repz
push
out
mov
in
sahf
scas
insl
outsl
into
inc
xor
rolb
mov
daa
xor
movsl
mov
shll
inc
out
cmp
insb
pop
ret
fmull
ljmp
jecxz
mov
push
gs
aas
rcrb
inc
mov
dec
fs
lcall
lods
cmp
jg
dec
fstl
and
push
fsubs
test
pcmpeqw
sbb
mov
and
mov
loop
push
hlt
mov
push
popl
jl
stos
push
mov
cs
push
and
fsubrl
enter
xchg
dec
leave
add
pushf
fmul
mov
push
mov
jmp
add
adc
andb
stos
icebp
loop
xor
movsl
lcall
sahf
inc
aas
ss
bound
mov
jg
test
lret
pusha
insl
call
lret
inc
inc
lods
mov
loope
ja
in
aas
fdivs
rcrl
lahf
std
test
mov
imul
xchg
cmp
test
sbbb
or
jnp
lock
pop
stc
push
push
and
xor
stc
mov
fsts
cmp
and
inc
mov
clc
jnp
sub
movsl
shl
std
aam
pop
bound
cltd
dec
sbb
adc
xlat
cmpsl
aaa
jge
clc
into
add
scas
jmp
jg
addr16
lret
cmp
out
lret
and
sub
fmul
xor
lret
je
jb
loope
in
stc
jmp
subl
repz
pop
and
dec
lret
negb
in
ds
cli
wrmsr
or
loop
or
pop
cmp
les
adc
xchg
ret
xor
xchg
mov
jne
out
sbb
mov
add
test
testb
clc
lock
pop
in
add
sbb
stc
xchg
sbb
xor
push
xchg
push
rorl
and
xchg
cmpsl
lods
sub
push
inc
pop
inc
fistps
xchg
dec
mov
test
push
scas
test
mov
shll
ficoml
roll
out
sti
xchg
inc
sahf
push
roll
popa
jo
and
js
lock
rorb
pop
pop
push
jae
add
mov
fdivp
enter
xor
cmp
dec
fistpl
lock
push
add
inc
cmp
mov
jmp
and
or
xchg
mov
jne
mov
lret
nop
jle
pop
mov
jb
pop
ljmp
ss
repnz
sub
ljmp
aad
xchg
bound
js
pop
out
mov
sub
add
icebp
xchg
push
ja
and
das
sub
adc
push
push
pushf
mov
xchg
roll
jmp
push
insl
hlt
andl
imul
pop
inc
cmpsb
xchg
out
int3
lahf
test
test
mov
adc
sub
cs
and
mov
or
adc
test
mov
out
dec
in
in
es
and
notb
inc
cmp
mov
lods
pop
sbb
pop
ret
lods
pop
aaa
mov
jb
gs
xchg
xchg
or
stos
dec
fcmovb
sbb
pop
iret
mov
mov
dec
or
add
add
push
in
xor
dec
in
push
test
test
dec
insb
cwtl
lods
mov
insb
push
add
lds
sub
js
std
sub
cld
es
ret
lcall
les
lds
notl
scas
inc
sbbb
pop
cli
dec
sarb
test
stc
xchg
cmpsb
or
xchg
icebp
out
mov
pop
lahf
jmp
loopne
out
sub
xlat
gs
xor
inc
insb
pusha
testl
add
ljmp
mov
movb
cmc
in
out
mov
pop
aaa
sbb
or
xchg
or
xchg
xlat
dec
xchg
xor
or
lock
dec
mov
movsb
incl
ror
and
imul
test
jl
pop
jp
and
and
pop
fwait
ljmp
lcall
loope
subl
test
xor
dec
lea
cmpb
pop
mov
inc
adc
outsb
sub
mov
or
mov
cmp
push
xchg
int3
mov
sahf
int
push
xor
inc
aaa
popf
push
xchg
add
xchg
jecxz
push
sub
add
mov
neg
in
xor
repz
xorb
je
pusha
mov
cs
aad
mov
sbb
lret
add
addr16
cltd
pop
sahf
imul
sub
scas
pop
jp
sbb
push
or
adc
lock
test
cmp
add
ret
aas
enter
popa
mov
cs
add
pop
adc
sbb
fadd
sbb
and
mov
movl
xchg
push
push
pop
mov
dec
rcrb
inc
into
xor
xchg
sub
jb
xor
dec
dec
leave
imul
daa
clc
rcrb
ss
cmpsl
idivl
repnz
add
shlb
out
push
std
pushf
cmp
sub
cmpsl
ffreep
sub
leave
xchg
add
mov
push
jmp
out
add
jg
popf
in
mov
stos
push
cmpl
ljmp
jns
push
pusha
xchg
fdivl
xchg
cld
xchg
xchg
xor
or
dec
xchg
xchg
or
lret
mov
xor
iret
sub
jns
and
jns
insl
in
sbb
in
sbb
pop
in
cs
loopne
mov
test
xchg
int
cli
adc
lods
ret
mov
sub
cmpsb
adc
ret
push
sbb
dec
sar
mov
inc
cltd
ds
clc
inc
inc
pop
shll
jp
mov
fisubs
cmpb
fidivl
jg
and
arpl
lcall
arpl
sbb
ret
mov
inc
xor
leave
xchg
add
int
pop
jno
into
cmp
mov
rcr
fs
addr16
cli
push
popa
out
mov
mov
jp
rorl
jg
pop
mov
mov
pop
mov
test
cld
or
dec
xchg
and
adc
sbb
mov
xchg
pop
push
mov
dec
pop
push
push
das
icebp
cmp
lcall
or
xchg
dec
lret
mov
fxch
xchg
cmpsl
cmpsl
mov
movsb
xor
fldl
sti
into
call
js
mov
js
dec
fdivrs
sub
and
push
sub
push
xor
mov
inc
mov
jnp
inc
add
or
dec
push
mov
mov
fsubr
lods
sahf
clc
mov
nop
aad
shlb
ljmp
pusha
mov
fidivrs
lods
dec
xor
sbb
adc
pop
mov
dec
repz
pop
aad
aad
jmp
faddl
repz
sbb
dec
cli
mov
xchg
xor
loopne
fistpl
inc
add
imul
movsb
xchg
jns
xor
sbbb
sbb
in
and
hlt
testb
jns
sti
cld
not
pop
adc
fldt
mov
sub
push
fistl
scas
hlt
test
xchg
sarb
xchg
lcall
repnz
mov
repnz
cmc
push
pop
sub
pop
sti
and
les
out
inc
sahf
sbb
jge
scas
stos
in
sbb
xchg
and
dec
jmp
in
lods
jne
add
addr16
mov
je
cs
mov
shl
dec
push
or
push
std
pop
mov
inc
push
cmp
sub
pusha
or
aas
add
nop
dec
sub
decb
xchg
pop
jmp
lock
and
push
fisubs
lods
aaa
cli
push
jo
or
out
popf
xchg
add
clc
int
and
pop
jmp
imul
cmp
les
ret
popa
push
outsb
adc
xor
rorl
lret
cmc
push
xchg
xchg
xchg
fidivl
adcl
or
mov
jecxz
xor
ja
jge
sarl
jnp
ljmp
push
xchg
in
sti
in
stos
push
or
das
xchg
push
xorb
arpl
int3
xchg
jne
cmpsb
les
cmp
mov
mov
pop
pop
hlt
ret
cs
adc
leave
inc
push
inc
test
lret
mov
ficompl
ss
pop
pop
push
and
mov
daa
adc
or
mov
push
mov
aad
push
jne
mov
fisubl
mov
mov
jle
icebp
out
orb
fildll
arpl
je
les
loope
xorb
lcall
vpmaddwd
pushf
paddq
clc
ja
jb
in
or
mov
pop
mov
fcomp
call
dec
jmp
pop
mov
stos
pop
xor
sti
mov
jns
and
imul
and
outsl
aad
cli
das
sub
stos
or
push
pop
push
in
push
loop
xchg
jnp
out
add
clc
and
rcl
push
stc
mov
dec
popa
nop
mov
or
fnstsw
rol
out
push
sbb
add
loope
xchg
mov
test
and
mov
inc
push
xor
pop
bnd
in
rol
xchg
in
mov
or
push
jo
dec
imul
cmp
sahf
ljmp
xchg
and
mov
cmp
add
ret
cmc
dec
jge
loope
sarb
cs
pushf
xchg
push
xor
inc
lret
orb
jmp
cmc
icebp
mov
or
rorl
cwtl
jnp
mov
pop
js
cmp
push
or
add
fcompl
imul
jecxz
mov
sbb
pop
movsl
push
leave
outsl
sub
fsubrs
imulb
dec
imul
daa
mov
or
test
into
dec
mov
test
fidivrs
int
aad
jo
cs
loopne
inc
cli
push
into
adc
insb
in
stc
in
cwtl
cwtl
mulps
adc
mov
jmp
pop
imul
repnz
mov
js
movsl
clc
imul
cmp
or
iret
ret
nop
xchg
mov
scas
nop
rsm
iret
sahf
push
mov
rcl
movsl
mov
mov
ss
sbb
sarl
xor
mov
xchg
ret
sbb
fs
add
cli
lock
mov
sub
sbb
jbe
sbb
ljmp
pop
push
mov
xchg
ror
pop
mov
xchg
fsubl
imul
xor
les
cmp
jnp
sub
mov
stos
inc
andb
xchg
mov
adc
enter
mov
adc
test
les
mov
dec
inc
dec
loope
mov
mov
mov
fimull
cmpsl
dec
adc
jb
fnsetpm(287
add
mov
test
inc
fistps
adc
call
cmpsb
lock
sbbb
enter
notl
icebp
add
lods
inc
sahf
int
xor
out
push
sbbl
xchg
push
ror
jg,pt
test
sarl
stos
popf
cltd
cs
sub
rcrb
fldl
xchg
xchg
push
mov
subb
cmp
stos
mov
loop
js
test
enter
movsl
jnp
push
add
xor
lds
xor
outsb
push
addr16
sub
sahf
mov
pop
xor
mov
xor
push
in
sub
mov
adc
pop
pushf
cmpl
xorl
subb
mov
jg
mov
jle
cmp
imul
in
mov
sub
inc
sub
dec
mov
jge
cmp
clc
dec
and
push
dec
or
inc
stos
aam
mov
sub
add
and
cmc
shll
test
jp
lret
lahf
sub
lcall
jmp
outsl
ret
ficomps
or
stos
js
mov
xchg
mov
popa
outsl
movsl
cwtl
cld
in
insl
pop
or
fucomip
sbb
clc
sub
or
popf
push
or
lret
daa
mov
bnd
scas
mov
adc
push
out
lret
mov
mov
push
and
push
dec
rcrb
repz
out
push
sbb
jb
add
jmp
push
mov
sbb
mov
xchg
jmp
sub
dec
aad
dec
popf
jle
enter
mov
sbb
cld
pop
addr16
sti
add
cltd
sbb
xchg
icebp
inc
into
push
jbe
fidivl
pop
es
movsl
inc
outsl
add
pop
lret
fldl
ss
jecxz
fsubr
out
sbb
ja
fiadds
adc
cwtl
fdivs
push
idivb
xor
and
cmc
sub
mov
adc
int3
or
push
sbb
xchg
mov
out
and
out
jge
or
dec
fs
loop
pop
dec
jnp
scas
in
push
jecxz
mov
and
add
dec
dec
repnz
pop
mov
sti
fstl
in
test
sbb
adc
rclb
insb
movsb
push
imull
or
sarl
test
movsb
push
sbbb
sub
js
imul
movsb
in
rolb
sub
iret
rorl
in
lret
jmp
mov
dec
sub
mov
mov
jp
mov
idivb
movsl
cmpsb
mov
sbb
mov
test
pop
mov
inc
or
dec
negb
pop
xor
ja
adc
jns
repz
xchg
pop
or
leave
inc
aam
pop
mul
cwtl
lcall
in
mov
xchg
daa
pop
push
jns
popa
cli
enter
je
imul
sarb
pushf
push
xor
jae
pop
imul
sub
mov
pop
dec
sahf
int3
test
mov
xor
js
and
cs
clc
aam
cmc
decl
and
sbb
jle
dec
mov
pop
pop
xchg
in
inc
sahf
push
or
xchg
and
push
push
stos
and
in
ficomps
fwait
adc
dec
js
push
arpl
imulb
push
icebp
xor
dec
and
and
pop
test
or
push
jecxz
or
or
nop
mov
push
das
xchg
jl
dec
inc
dec
cmp
and
outsl
lods
lods
add
ljmp
cmpb
aaa
in
test
ret
add
inc
shlb
inc
xor
outsl
pusha
adc
insl
jmp
ret
loopne
and
adc
jne
jno
dec
cltd
pop
inc
cli
xchg
lock
out
stc
pop
lret
push
xchg
or
and
lock
test
adc
shrb
cmp
jle
into
idivb
punpckhdq
insl
popa
sbb
call
in
decb
in
popf
jne
cli
add
aaa
pop
xchg
mov
inc
lahf
cmp
insb
push
fimull
push
insl
frstor
jp
inc
xchg
pop
mov
and
aam
pop
inc
fildll
inc
mov
lock
movsb
bound
out
cmp
out
cmpsl
dec
push
test
mov
mov
sub
mov
fcoml
push
fsubr
pop
in
sub
out
leave
mov
popf
mov
aad
ljmp
sub
and
dec
fiadds
test
dec
rorl
xor
jno
or
xlat
lea
nop
ret
addb
or
test
inc
insl
faddl
leave
adc
xor
ret
jb
xchg
cmp
sbb
cmp
xchg
pop
cmpsl
xchg
cmp
repz
mov
sbbb
lods
js
out
int
mov
fwait
mov
in
rcll
mov
leave
ljmp
xchg
inc
sub
and
xor
sahf
mov
nop
pusha
mov
jnp
xchg
pop
mov
and
mov
fwait
mov
cltd
sub
rclb
xchg
push
nop
insl
add
xor
jp
testl
mov
rorb
jbe
xor
mov
iret
aaa
mov
adc
lds
mov
dec
cmp
sub
sbb
arpl
jbe
dec
std
mov
ds
loopne
test
pop
and
xchg
mov
int
xor
sbb
sbb
stos
cmp
repnz
and
cmpsb
aam
cld
mov
shrb
sarb
cmp
xor
xor
mov
inc
jl
dec
dec
xchg
adc
add
lcall
pop
add
imul
loope
fucomip
lret
inc
leave
adc
push
outsl
sbb
lds
das
bound
push
div
repnz
xchg
adc
xor
test
cmpsb
push
cmp
mov
decb
cwtl
inc
ret
ret
xor
sti
xchg
inc
cmc
ror
fdiv
mov
mov
shrb
ljmp
pushf
addr16
sub
push
mov
or
clc
sbb
mov
lea
adc
cmp
xchg
loope
pusha
sub
xchg
lock
repnz
out
xchg
popa
das
scas
mov
dec
iret
rorl
lea
mov
pop
insl
mov
iret
enter
js
popl
xchg
mov
add
mov
adc
dec
mov
lea
inc
loop
xlat
test
dec
and
jecxz
neg
fmulp
cltd
pop
inc
dec
jnp
in
sub
int
cs
test
insl
ret
popa
mov
stc
add
push
cltd
mov
fsubl
dec
pop
js
pusha
loop
mov
dec
xor
pop
into
dec
push
dec
or
lret
adc
leave
jbe,pn
adc
in
or
inc
inc
das
cltd
mov
add
mov
in
sti
sbb
std
dec
add
stc
jecxz
push
out
fdivs
ja
push
fidivrs
bound
xchg
rolb
sub
pop
cltd
add
jecxz
push
xchg
sub
sarl
test
or
sahf
stc
inc
mov
out
cld
movsb
push
icebp
mov
xchg
jb
rcrl
push
push
xchg
frstpm(287
iret
xor
mov
loop
sbb
jnp
xor
arpl
clc
xlat
fwait
mov
outsb
xor
push
out
aaa
inc
je
cmp
xchg
nop
ds
loopne
jp
xor
xchg
fisubrl
and
sbb
mov
jge
mov
mov
mov
hlt
lret
sub
nop
mov
xchg
sub
ficomps
cs
lods
aaa
addr16
loopne
mov
mov
mov
push
mov
lcall
adcb
xorb
mov
jp
lds
adc
lock
stc
sbb
mov
into
inc
cmpsb
pop
into
cmpsl
mov
push
xor
fadds
mov
rorl
test
inc
push
dec
mov
pop
jns
lock
mov
sbb
rclb
loop
pop
pop
dec
lock
mov
jne
testb
rclb
iret
mov
cmp
inc
aas
imul
dec
pushf
dec
cmc
jb
out
jg
pop
icebp
jnp
jnp
popa
jmp
sbb
jbe
int3
cmp
sub
inc
stc
adc
cmpsb
xchg
ss
add
test
cmp
jnp
adc
int
mov
test
and
sbb
out
cmp
scas
cmp
fnsave
sub
push
je
add
xchg
nop
push
lea
ret
mov
push
fdivrs
clc
mov
dec
mov
mov
push
fldcw
dec
xor
pop
inc
push
jl
push
lret
xchg
inc
push
adc
add
and
mov
fnstenv
insb
test
sub
call
cli
ret
inc
movsl
xchg
pop
pop
jbe
fcoml
ret
push
xchg
pop
fwait
das
sub
gs
dec
jl
mov
sbb
dec
mov
pushf
icebp
movsb
jg
js
push
and
sbb
aad
mov
fs
dec
sahf
add
mov
sti
popa
inc
mov
imul
lock
cmpsl
ficompl
xor
sub
cli
push
mov
aas
outsl
or
iret
sbb
lods
push
dec
and
and
xor
or
movb
fstl
inc
fucom
imul
mov
fwait
mov
iret
sbb
out
push
mov
add
sbb
mov
pop
mov
jp
sbb
pop
sarl
test
test
adc
xor
jno
sbb
pop
mov
daa
push
mov
jl
dec
mov
mov
push
into
cmpl
out
xlat
into
daa
pop
das
pop
test
sub
stc
loop
out
shl
push
sub
mov
xchg
lcall
xchg
add
imulb
push
fstpt
inc
ret
jecxz
push
and
loop
cmpsb
outsb
mov
andb
test
mov
inc
cmp
in
dec
imul
repnz
rorl
xchg
imul
jnp
fs
xchg
dec
psubsw
cwtl
pop
leave
ret
mov
jns
sbb
mov
push
repnz
jl
roll
jb
jae
mov
pop
sub
mov
add
out
cmpl
roll
add
push
in
hlt
test
push
inc
mov
mov
xchg
dec
ficoml
aaa
push
mov
adc
fs
inc
bound
mov
sbb
outsb
lods
mov
add
adc
in
jecxz
pop
mov
fidivrs
xor
inc
push
cmpsb
movsb
mov
jns
in
and
mov
test
pop
out
jo
loopne
mov
jo
mov
testb
mov
addb
mov
addr16
push
loopne
cmc
cmpl
pandn
adc
call
mov
aad
pusha
dec
mov
dec
sti
inc
icebp
popf
lahf
test
ss
sbb
sbb
jbe
test
mov
add
and
or
outsl
icebp
push
jnp
adc
stos
push
lods
jns
mov
and
xchg
arpl
fldenv
pop
fisttps
mov
daa
mov
les
mov
cmp
mov
jnp
aad
add
cmc
outsl
cmp
add
jns
xchg
sbb
sub
cld
cmpsb
popf
test
cmc
jb
mov
orb
add
dec
cmp
test
jne
lods
push
loope
aas
adc
and
adc
inc
aam
inc
push
movl
add
mov
lahf
movsl
pop
cmp
pop
pop
push
xor
mov
inc
mov
test
je
mov
lods
in
or
jmp
xor
pop
mulb
fsubp
xor
in
out
gs
jne
pop
cmpsb
add
leave
fidivrl
pushf
jmp
in
call
mov
mov
shrb
inc
mov
fistpll
xor
fisubs
add
movsb
aam
int
push
xchg
mov
push
lret
repz
jb
jno
sbb
or
pop
inc
dec
mov
pop
mov
sbb
dec
add
stc
jecxz
mov
pop
sub
es
push
dec
jmp
mov
daa
repz
in
pop
add
lods
das
pop
cmp
cli
fidivrl
cmpsl
test
hlt
push
in
dec
mov
sbb
adc
aas
push
ret
fdivrl
and
add
enter
dec
jp
fsts
sub
adc
mov
ja
mov
cwtl
cwtl
ja
js
ret
leave
rorb
xchg
sub
mov
and
arpl
sar
hlt
dec
lods
fsubrl
jns
mov
cs
xchg
pop
hlt
fldenv
cmp
lods
push
roll
les
cmp
mov
lock
mov
add
sub
and
mov
ret
push
lods
out
shr
rorl
loope
out
mull
lret
inc
xchg
loopne
mov
and
mov
sub
stos
or
dec
inc
jle
xchg
imul
add
fildll
jne
stos
es
inc
nop
out
cwtl
aad
mov
mov
cmp
data16
fs
pop
roll
jb
or
mov
subb
push
jnp
repnz
or
cmpsb
push
lahf
push
mov
mov
stos
sub
in
subb
push
lret
adc
cmp
mov
inc
icebp
add
pop
sbb
rcrl
pushl
out
adcl
pop
adc
fbld
mov
repz
jo
or
sbb
and
and
push
mov
push
xchg
xor
inc
leave
pushf
xor
adc
inc
insl
leave
scas
or
and
and
or
jo
ret
in
push
ljmp
push
add
push
inc
push
movsb
sbb
lods
mov
cld
lahf
dec
mov
and
shr
addr16
jle
enter
addl
add
ss
inc
ljmp
lock
icebp
xor
loop
pop
mov
dec
sbb
push
fldcw
fistl
mov
mov
inc
adc
out
mov
jmp
cmp
es
lcall
loope
xchg
inc
nop
mov
pop
xor
sahf
jne
ss
pop
icebp
cmp
push
vmovlhps
data16
push
lea
pop
add
xchg
fists
js
and
add
and
push
cmpsb
sti
xchg
adc
mov
das
xor
jne
loopne
lret
jno
xchg
sahf
sub
stos
test
sbb
and
sub
pop
daa
fstl
dec
mov
cld
adc
mov
scas
xchg
aad
add
xchg
ljmp
inc
outsb
test
icebp
outsl
std
mov
inc
movsl
insb
scas
les
jbe
jo
adc
movsb
je
jp
push
shrb
cmpsb
shll
fdivrl
mov
push
ja
push
jb
rcl
or
loop
xchg
push
in
xchg
aas
mov
mov
adc
dec
rcl
adc
push
xchg
sub
mov
xchg
fucomp
nop
jmp
xchg
sub
addb
xor
stc
outsb
sbb
jl
insb
inc
icebp
clc
push
push
outsl
mov
jne
jp
ja
notl
iret
cwtl
rcrl
xor
das
sbb
jbe
adcl
iret
inc
into
test
inc
jp
jg
mov
lea
out
les
sarb
add
scas
add
popf
adc
push
push
sub
aaa
imul
push
mov
sub
mov
loope
xor
iret
adc
push
lods
push
in
mov
xor
insl
cmp
lahf
sbb
add
testb
inc
div
sbb
cmp
mov
mov
aam
clc
out
mov
adc
gs
enter
ljmp
mov
or
lods
imul
jge
cmp
dec
outsb
ds
mov
add
adc
inc
and
lret
loopne
adc
orl
test
xchg
loop,pn
in
pop
xchg
aam
cwtl
dec
or
pop
dec
fwait
shll
popa
push
movsb
in
mov
xchg
out
cmp
adc
fistl
inc
mov
jge
mov
cld
mov
outsb
orb
jl
sbb
test
or
loop
jns
push
lea
icebp
push
aam
sbb
xchg
test
daa
adc
pop
dec
popf
daa
inc
mov
cmpsl
outsb
lea
adc
stos
in
push
movsb
bnd
out
add
roll
ret
lods
call
xor
sahf
cmp
cs
and
or
jno
jo
sub
jbe
sbbb
cmp
scas
or
int3
data16
js
xchg
mov
outsb
aad
outsl
repz
pop
imul
xor
cld
dec
push
mov
or
pop
xor
cmp
bnd
ja
das
push
movsb
sti
std
inc
rclb
cmp
scas
pop
xor
outsb
mov
out
ds
xchg
subb
xlat
cwtl
inc
mov
sub
in
jns
mov
adc
movsb
loope
in
test
xchg
outsl
xor
shl
shrl
mov
mov
ss
ljmp
sub
mov
les
repz
loop
mov
popf
push
add
aaa
dec
and
std
adc
mov
jns
fidivrl
xchg
cmc
in
sub
xchg
mov
repz
sbb
out
imul
mov
sub
push
mov
loop
or
pop
dec
adc
xchg
mov
sbb
clc
cmc
sub
inc
loop
scas
xchg
dec
pop
jb
rorb
add
mov
addr16
cmp
fdivrl
cwtl
mov
jo
das
rcrl
inc
and
push
jp
das
outsl
or
cmp
inc
int
mov
push
cli
lahf
popa
inc
sbb
push
lods
dec
and
test
and
mov
dec
pop
mov
mov
nop
xchg
jb
icebp
push
out
lds
inc
dec
cmp
push
inc
mov
shrl
inc
stos
jbe
cltd
rep
pop
ficompl
cmc
insl
test
lret
js
mov
and
loop
ret
sbb
mov
pop
xchg
jbe
jbe
popf
sub
xor
nop
cmp
sbb
std
fsts
aas
int3
xlat
mov
inc
mov
add
inc
mov
pop
out
aad
ljmp
ss
and
and
push
mov
icebp
adc
movsl
movsl
and
jle
mov
dec
mov
cmpsl
mov
mov
xlat
scas
test
mov
popa
hlt
out
mov
fldcw
jb
int3
sub
inc
fidivs
inc
repnz
rorb
pop
arpl
cmpsl
sbb
xchg
dec
jle
add
add
into
sub
popa
add
and
inc
sub
or
mov
les
pop
scas
xchg
into
jo
hlt
loope
xchg
add
test
mov
jle
cwtl
adc
or
xchg
cs
xchg
scas
int
ficompl
push
xor
icebp
cwtl
data16
or
insb
ret
lret
pusha
in
mov
push
mov
push
scas
leave
jno
cmp
mov
out
fiaddl
cmp
dec
mov
mov
imul
fdivrl
cmp
mov
cmp
lods
push
je
in
lret
outsb
mov
ret
repnz
adc
cmp
pop
pop
mov
sbb
nop
mul
jno
daa
push
lret
dec
sbb
jge
add
in
push
xchg
fsubs
inc
in
sub
movsb
fwait
and
push
sbb
dec
pop
insb
movsb
cmpsl
mov
clc
xor
push
es
mov
and
aas
hlt
push
push
or
sbb
and
mov
in
add
loop
cmp
iret
or
loop
dec
jnp
pop
adc
test
jb
shl
aad
nop
xor
mov
aaa
in
mov
pop
nop
cs
cld
cmpsb
les
sub
ret
xor
adc
lods
outsb
or
adc
sbb
adc
or
push
dec
mov
cmp
lds
sub
mov
clc
push
mov
push
sub
aas
push
test
movsl
xchg
popl
adc
inc
pusha
inc
sub
insb
test
jae
xchg
mov
mov
neg
jnp
cmp
add
ja
jnp
iret
into
loop
cmp
cmp
add
mov
xor
arpl
xor
adc
int3
pop
test
xor
dec
inc
add
addr16
pop
cmp
pop
loopne
mov
dec
mov
out
stos
mov
add
test
lcall
mov
ja
jmp
pop
es
push
test
icebp
lahf
adc
xchg
call
sub
mov
mov
in
sbb
lods
mov
sub
test
in
lcall
ret
xlat
lcall
push
and
int
fistl
sub
cltd
outsl
fsubp
cmp
or
fistpll
or
jnp
push
jnp
pop
xor
test
das
xchg
mov
mov
mov
mov
mov
fdivrl
out
xor
icebp
test
mov
mov
dec
movb
xor
out
rol
enter
outsl
dec
shrl
push
push
pop
pop
pop
mov
or
imul
xchg
clc
xchg
and
shl
mov
or
xchg
or
xor
jns
jo
lea
push
lods
push
ss
fdivrs
movsl
cmpl
push
pop
sbb
xchg
adc
scas
int3
cmp
insb
imul
push
sub
jo
or
test
aad
inc
in
adc
sub
cmpsl
test
sbb
jne
adc
add
lret
xchg
adc
mov
into
in
push
in
xchg
pushf
addb
insb
cmpsl
push
sbb
cmc
push
das
idiv
pop
cmp
sahf
pop
stos
loopne
mov
fnstsw
xchg
and
push
and
rolb
daa
push
fucomip
jg
push
inc
mov
movsb
dec
insw
test
imul
sbb
sar
loope
adc
jl
cmpsl
xor
mov
mov
nop
lcall
xor
loopne
mov
xchg
add
mov
std
mov
cmp
or
orb
adc
fisubs
lock
popa
jp
push
stos
popf
fdivl
mov
in
pop
loop
movsb
sub
add
push
ja
lcall
fs
stos
pop
adc
movsb
push
adc
fwait
cmp
std
lods
push
fcoms
dec
arpl
loop
movsl
mov
scas
push
je
bound
in
pop
fisubrs
out
sub
dec
aam
adc
cmp
sbb
add
mov
mov
hlt
scas
jge
inc
inc
adc
push
xor
inc
out
push
cmpsl
lahf
xchg
lods
int3
in
gs
shrl
je
pushl
xchg
imul
lret
movsl
gs
mov
int3
mov
les
iret
push
aas
cmp
mov
cmp
mov
into
int
imul
or
test
inc
pop
test
jnp
fs
cmp
or
aaa
filds
idivl
imul
lods
sub
adc
pop
sbb
adc
stos
add
sub
int
xchg
in
mov
gs
inc
ss
cmp
cmc
pop
fisttpl
inc
test
mov
hlt
pop
inc
cs
push
sbb
or
jne
pop
dec
push
icebp
or
orb
jno
loope
lods
jecxz
push
nop
in
notl
xchg
test
dec
mov
addl
in
rcl
roll
sub
aaa
sbb
dec
pop
into
je,pt
in
sub
xor
inc
pop
mov
push
aam
jp
dec
pop
xchg
cmp
xchg
xchg
sub
mov
imull
jp
sub
inc
lahf
mov
mov
jmp
jle
pushl
jecxz
push
xor
pop
es
sub
inc
mov
dec
add
push
and
xchg
fnstcw
dec
pop
pop
push
lock
sahf
outsb
dec
xchg
and
inc
xor
in
and
add
sub
push
xor
mov
in
push
jle
add
sbb
imul
fldt
dec
into
cmp
lds
mov
xchg
shr
pop
inc
push
test
sahf
enter
xchg
xchg
les
sub
inc
inc
and
mov
sahf
enter
imul
lea
int3
ss
test
mov
add
sub
adc
xor
or
pop
xchg
iret
pop
dec
pop
mov
shll
ret
loope
inc
mov
jp
mov
mov
and
sub
pusha
inc
shlb
add
ss
subl
std
mov
mov
inc
add
push
loop
das
mov
jne
dec
arpl
xchg
jl
sub
cmp
ret
test
dec
cmp
cltd
mov
and
ss
rclb
adc
shl
cwtl
lods
xor
jl
inc
insl
pop
icebp
sbb
lods
sti
clc
xor
and
jae
outsl
add
mov
lcall
in
jp
lcall
data16
inc
fs
inc
inc
scas
nop
mov
test
test
je
insl
pusha
and
push
test
aas
push
lret
mov
gs
arpl
push
aam
test
add
push
add
into
xchg
pop
sahf
push
jno
fs
jge
aaa
sbb
sbb
xchg
adc
int
hlt
mov
icebp
cmp
ds
pop
lret
fisubs
push
loopne
push
repz
or
roll
sbb
stc
sbb
int3
aad
scas
xor
test
cli
stc
lret
div
push
fimull
aas
dec
cmp
jmp
cmp
pop
mov
sahf
int3
dec
push
sub
and
ret
js
mov
stos
out
bound
jb
jo
popa
add
sub
mov
shrb
scas
mov
test
aas
xor
in
sti
jp
dec
stos
call
add
push
sbb
xlat
mov
aad
jp
popl
cltd
pop
sahf
std
dec
or
add
sbb
scas
scas
push
nop
aad
inc
pushf
adc
xchg
loope
sub
lock
cli
movsl
daa
int3
cld
mov
sbb
xor
scas
ficoml
add
sahf
pushf
add
arpl
hlt
mov
push
out
xchg
ret
mov
dec
or
or
aam
jmp
lds
sub
and
inc
mov
in
adc
stos
pop
inc
xchg
cmp
push
mov
mov
sbb
push
push
inc
push
scas
mov
add
jecxz
inc
ret
pop
out
mov
push
add
stc
push
dec
xor
sub
leave
imul
push
ljmp
lcall
lahf
clc
cmc
mov
sbb
insb
mov
test
pop
in
and
push
push
stos
sbb
insb
call
inc
xchg
inc
and
in
and
aad
add
cmp
in
bound
fldcw
fildl
adc
inc
jl
shl
icebp
mov
testl
fiadds
shrb
cmpsl
in
sub
jnp
xchg
fs
loopne
ss
inc
pop
aaa
mov
outsl
sbb
xor
outsb
sub
sub
push
leave
push
cmc
repz
adc
pop
add
outsb
or
add
test
cmpl
stc
out
ja
imull
jp
sub
mov
jno
sbb
mov
std
push
adc
int3
ss
stos
dec
out
cwtl
fwait
jnp
jbe
dec
arpl
push
movsb
xor
mov
mov
les
add
fld1
pop
add
cld
add
jnp
mov
jg
adc
arpl
test
lea
stos
outsb
bound
push
fs
dec
and
cmp
pop
and
lods
pop
xor
push
xchg
dec
and
inc
push
jae
cmp
popa
insl
xor
mov
lock
leave
mov
adc
in
mov
inc
cmp
popl
pop
aaa
add
jno
mov
addr16
pop
mov
sti
dec
out
shrb
mov
push
adc
fidivs
inc
movsl
stos
clc
and
xlat
fadds
xchg
jno
aad
cmp
mov
inc
xchg
sub
push
int
mov
sahf
out
inc
in
nop
xor
or
and
or
add
mov
scas
test
insl
out
mov
or
xchg
mov
shrl
cmp
lea
mov
push
iret
adc
push
push
bound
test
mov
out
xor
add
sub
and
movsl
pop
dec
pushf
sub
repnz
test
sub
popf
jb
push
push
ss
adc
push
repnz
and
sbb
adc
mov
unpcklps
popf
loopne
repnz
xchg
insl
or
pop
fadds
pop
mov
sarb
mov
daa
add
arpl
fldcw
aaa
jle
mov
sub
std
test
ja
add
rcrb
mov
xchg
pop
xor
rcr
adc
fidivs
dec
enter
mov
data16
adc
cwtl
mov
imul
rorl
andb
sbb
pop
ret
and
sahf
int3
xor
jge
xor
repnz
mov
sti
jmp
adc
je
aaa
cli
mov
mov
jns
jecxz
lds
xchg
clc
in
adc
sahf
inc
push
or
sbb
cwtl
das
inc
inc
add
jns
in
ja
push
sbb
adc
ror
out
jg
pushf
xchg
cmp
add
jnp
fs
cmovae
add
bound
adc
cmp
mov
push
xadd
loope
loope
mov
mov
add
test
mov
xor
sub
mov
cmp
inc
pop
jno
sbb
mov
mov
loop
scas
and
push
xor
pop
mov
lock
push
out
iret
insb
lods
jge
cmp
mov
lock
cli
or
cmp
addr16
and
or
xor
les
jb
repz
bound
test
lahf
data16
pop
jns
mov
jp
cli
push
sbbl
xchg
xchg
ja
loopne
push
into
ss
adc
std
or
fcoml
insb
push
sarb
roll
pusha
mov
fisttpl
aad
test
or
mov
jle
sarb
mov
xchg
inc
lds
stos
and
cld
push
gs
inc
sub
push
fwait
sub
fiaddl
add
mov
int
xchg
push
sub
lcall
sbbb
aad
inc
in
mov
hlt
mov
mov
adc
and
ljmp
scas
js
cmp
inc
adc
mov
bound
push
stc
inc
push
pop
pop
or
jge
sti
cltd
push
jmp
pop
call
ffree
jle
jg
stos
add
outsb
add
xchg
icebp
cltd
outsb
movsl
dec
mov
add
dec
repnz
adc
sub
clc
stc
push
jp
jecxz
sbb
ficompl
mov
push
dec
fwait
rcrb
movsl
jb
and
mov
push
inc
mov
mov
push
insb
cli
decl
cmc
loopne
xchg
or
repz
inc
xor
mov
cmc
aad
inc
stos
sbb
jl
jbe
jb
test
mov
or
adc
jo
sbb
fisttps
insb
pop
jb
ja
mov
mov
adc
xor
fisttps
je
and
nop
jbe
xor
lds
adc
mov
loopne
sbb
fnstenvs
sahf
add
dec
inc
movsb
andb
cld
push
mov
ljmp
pop
adc
fnstsw
xchg
or
pop
leave
es
sbb
out
mov
xchg
pop
leave
rcr
pop
enter
dec
pop
sbb
cld
xor
pop
iret
mov
xor
test
inc
jp
pusha
jno
adc
lds
adc
add
or
xchg
jmp
loop
gs
sarb
hlt
inc
push
jecxz
stos
cmc
mov
mov
out
mov
push
cwtl
pushf
mov
jmp
add
jge
mov
cmp
out
mov
adc
out
sbb
xchg
iret
xchg
dec
jb
sub
aad
ret
loop
xor
fisubrl
data16
pop
pop
punpckhwd
daa
lret
scas
pop
mov
lods
inc
pop
dec
insb
shll
push
jno
xchg
mov
aad
xor
lret
cli
gs
mov
lods
inc
adc
xchg
push
xchg
mov
fadd
pop
lea
mov
xor
fs
pop
loopne
jg
push
or
scas
stc
or
shll
mov
scas
ljmp
xchg
lea
aas
push
mov
aaa
in
mov
mov
sub
in
sbb
icebp
or
or
xlat
cs
and
inc
add
dec
cmpsl
mov
test
or
push
sbb
mov
inc
mov
aas
sbb
adc
mov
inc
mov
popf
stos
andb
mov
fwait
std
pop
jg
and
adc
mov
cmp
out
das
push
je
inc
je
mov
fmull
rclb
mov
mov
push
out
and
sti
sbb
push
mov
ret
pop
xchg
inc
pop
cwtl
lcall
adc
in
call
insb
scas
in
dec
fs
in
add
stc
popf
mov
push
std
stos
hlt
dec
mov
mov
or
and
push
jecxz
dec
sub
iret
dec
jne
cmpl
shrb
clc
pusha
fs
mov
push
enter
pop
sub
fbstp
cmc
dec
cltd
push
fs
out
pop
pop
push
and
xor
jle
lods
icebp
mov
insb
pop
inc
push
mov
add
inc
inc
repnz
aad
je
hlt
sbb
scas
les
test
outsb
cli
aad
mov
loope
imul
imul
cs
jp
lea
mov
pop
loopne
pusha
loopne
jg
push
sbb
pusha
test
add
out
mov
sub
or
fldpi
out
push
es
subl
sub
xchg
pusha
cmp
icebp
loop
data16
xchg
shlb
ss
and
punpckhwd
xchg
and
adc
mov
jp
icebp
insl
mov
push
sti
movsl
push
cmp
ja
mov
dec
pushf
int3
arpl
scas
push
cld
lahf
mov
cwtl
pop
xchg
ret
cmpsl
ss
shll
out
shlb
repnz
pop
jo
test
or
ret
rcll
push
push
dec
lret
fbstp
aas
xchg
inc
jecxz
ljmp
outsl
adc
popa
stos
cmp
xor
and
repnz
mov
inc
inc
flds
andb
cmp
sahf
push
pop
icebp
pop
inc
in
jae
rcll
ficomps
add
sub
in
shlb
insb
dec
stc
or
pop
rclb
movsl
dec
sarl
fimuls
sti
cmc
int
insb
mov
xchg
aad
mov
jle
fmuls
sbb
addr16
aam
sbb
cmp
loop
repnz
lods
les
and
out
icebp
out
ffree
popa
and
movsl
sbb
shll
dec
pop
fs
add
mov
ja
sbb
imul
pop
out
sbb
jnp
popa
adcb
scas
xor
data16
adc
pushf
inc
in
adc
and
insl
pop
xchg
test
nop
fsub
inc
scas
mov
add
push
stc
js
scas
push
out
push
push
add
pusha
adc
pop
xor
das
test
les
fnsave
push
mov
repnz
and
fists
lods
loopne
hlt
lret
scas
jge
jae
lcall
scas
add
int
adc
or
ljmp
scas
adc
push
push
pop
pushf
imul
outsl
pop
ljmp
xchg
and
xor
pop
outsl
outsb
aaa
pop
sub
lret
jb
jae
rcl
rcrl
jmp
cmpsb
iret
inc
inc
push
mov
inc
push
xchg
cmp
test
jae
mov
mov
inc
mov
clc
stc
add
sbb
cmpsl
jb
xchg
jb
jl
outsl
xor
scas
inc
repz
mov
jae
fs
dec
lods
jmp
add
js
jns
loop
popa
mov
repz
iret
out
mov
mov
loopne
stos
loope
mov
lret
sbb
sti
xchg
pop
xor
push
fimull
pop
mov
xor
jo
xchg
mov
es
xor
stos
and
mov
mov
inc
mov
fists
mov
xlat
inc
imul
add
cmpsb
sbb
out
mov
subb
xorl
sub
fiaddl
stos
push
mov
dec
out
inc
adc
jge
scas
pop
dec
inc
sbb
sub
mov
pop
inc
dec
pop
push
cmp
jge
pop
jb
fwait
orl
nop
loopne
scas
xchg
fstps
xor
pop
sub
fs
ss
cmp
loop
lea
ret
stos
mov
inc
imul
cld
dec
mov
sbb
pop
mov
ss
inc
adc
jmp
int
flds
sarl
imul
dec
pushf
push
add
cmp
xor
sub
icebp
test
xchg
mov
shr
mov
xlat
xchg
sbbb
test
sbb
adc
imul
sub
fmuls
outsb
in
jb
mov
cltd
sbb
pop
bound
insb
add
sub
subl
popf
jg
inc
lea
mov
in
push
ds
fs
cs
xchg
dec
mov
dec
fs
stc
mov
rcl
fadds
mov
jae
sbb
pop
or
cld
aas
or
into
cltd
jo
xchg
test
les
cmpsb
arpl
popf
mov
and
test
ljmp
xor
xor
das
les
shlb
or
mulb
es
pusha
inc
adc
xchg
fmul
mov
lea
pop
rorb
cmp
je
cmp
xor
cmp
in
popf
dec
pop
out
cmp
lds
mov
and
add
cs
pushf
mov
inc
or
xchg
jbe
mov
cs
xchg
pop
xchg
mov
stos
cmp
repnz
mov
subb
loopne
cli
mov
xchg
mov
pushf
daa
push
je
cmpb
push
aam
push
xchg
xchg
in
popa
fmuls
sub
or
lods
pusha
stos
in
mov
cwtl
mov
cmp
and
jge
hlt
out
insl
and
sbb
fwait
xchg
xchg
jae
fsubs
into
xor
push
dec
popf
inc
cld
mov
sti
xor
mov
adc
imul
fwait
mov
xchg
mov
mov
jecxz
mov
mov
jbe
shl
mov
mov
xchg
xor
movsl
sti
xor
push
mov
scas
push
mov
push
fcomps
xchg
test
movsl
cwtl
stos
ja
fmul
shll
fimull
add
add
aam
lahf
add
adc
jl
repnz
orb
out
mov
cmc
mov
psubw
imul
cltd
mov
jecxz
or
inc
out
pop
add
test
cmp
lods
or
mov
sub
or
ret
negb
and
pop
lret
or
jbe
mov
mov
in
movsl
scas
movb
pop
or
int
pop
adc
dec
sbb
pop
jno
mov
leave
pop
cmp
and
sbb
jecxz
cli
add
push
icebp
and
pop
cltd
dec
aas
cmp
mov
add
sub
or
leave
xchg
adc
cmp
mov
jnp
mov
pop
repz
sahf
pop
fildll
fst
aaa
cmp
in
mov
cmp
in
rolb
dec
pop
inc
insl
loop
inc
addr16
lock
mov
notl
icebp
incb
outsl
mov
addr16
imul
cld
dec
or
addb
cltd
or
fdivrl
push
ss
test
sub
ret
movsl
xchg
sbbl
loope
scas
bound
push
push
lret
jns
mov
loope
lret
lret
adc
je
pop
imul
mov
repz
xor
idivl
call
xorb
imul
das
test
lret
jge
or
lock
aaa
aam
fimuls
scas
push
xlat
inc
movsl
push
push
add
sbb
adc
aas
or
or
add
cmp
jecxz
sub
sub
jmp
sbb
ja
dec
cmp
pusha
jne
cltd
xchg
into
test
mov
sbb
fisubrs
jge
or
or
and
jne
push
push
cmc
aaa
dec
fimuls
add
cmp
addr16
and
stos
xchg
or
xor
idivl
or
jno
jecxz
pop
cli
les
nop
repnz
sub
lea
mov
dec
cwtl
push
cld
adc
pop
fwait
in
dec
aad
aad
xchg
sti
add
dec
lods
lods
lods
lods
pop
mov
push
or
xchg
popa
and
outsl
cmc
out
scas
adc
cmp
mov
jg
jne,pn
adc
imulb
or
dec
fldl
push
clc
stos
ret
flds
pop
xor
sbb
mov
mov
ja
sub
pop
mov
bound
lea
mov
jb
loope
pusha
xlat
sbb
mov
hlt
je
and
adcl
inc
push
ds
out
cli
ss
mov
jge
dec
jo,pt
jns
lea
jnp
inc
ffreep
aaa
in
outsb
push
movsb
add
aam
call
push
out
repz
xchg
mulps
lods
sub
mov
movsl
jmp
jmp
jno
mov
fidivrl
fsubrs
jg
gs
push
filds
test
in
stc
in
hlt
mov
cmp
mov
push
sbb
or
aam
pop
xor
int3
lds
out
jg
adc
sbb
popw
arpl
hlt
push
daa
es
daa
xchg
mov
xor
mov
or
xchg
xor
push
dec
jg
sub
nop
icebp
jp
test
movsl
pop
xchg
mov
pusha
js
push
outsl
xchg
shlb
inc
pop
jbe
out
pop
mov
mov
setne
lcall
lret
xchg
sub
cwtl
mov
mov
or
jns
mov
add
inc
sbb
test
and
arpl
mov
shll
inc
les
cmp
inc
inc
out
cmpsl
popa
xchg
test
or
adc
dec
dec
xchg
or
aam
lcall
ja
repnz
int3
dec
popa
jg
sub
fldl
mov
fldl
out
aam
xchg
xchg
or
push
xchg
rol
push
aaa
or
loopne
or
mov
fs
aam
mov
jg
ror
pop
mov
inc
jae
jne
fisttps
sbb
adc
and
test
jp
push
fnstsw
adc
fs
mov
sbb
inc
push
dec
lret
out
popa
mov
mov
jno
shrb
sti
das
mov
hlt
sti
inc
pop
daa
adc
insb
mov
cmc
fadds
xlat
pop
pushf
andb
sub
cmp
subl
mov
lret
test
mov
lea
out
pop
lret
subl
popa
push
cld
and
inc
ja
push
mov
push
xchg
or
push
popa
out
rorb
fists
pop
pop
or
dec
and
in
in
test
sti
mov
sbb
cld
xor
stos
jecxz
sahf
aam
xchg
or
mov
aaa
js
lea
aaa
or
mov
inc
movsb
cmp
test
movsb
aas
pop
mov
mov
mov
jo
subb
sbb
and
xchg
xor
in
pop
mov
dec
push
cmp
fcmovnb
cli
push
mov
mov
arpl
pop
and
dec
xor
dec
mov
sbb
cwtl
jg
js
dec
lds
mov
fwait
sbbl
and
test
push
push
clc
xor
mov
jmp
xchg
daa
popf
lcall
jge
sarb
sbbb
dec
jp
dec
cmp
inc
push
cmp
scas
mov
orl
das
leave
push
dec
sub
icebp
mov
mov
cmp
inc
cli
dec
jecxz
mov
aam
shrl
push
xchg
dec
lret
das
xchg
sbb
pop
push
xchg
cs
adc
sub
mov
fisubrl
pop
add
daa
lahf
or
cmp
out
subl
pop
inc
and
cmp
xlat
lahf
shl
subl
push
test
or
mov
das
sub
mov
lods
add
xchg
ficoms
rcrl
scas
fidivl
outsb
push
pushf
pop
scas
imul
jb
cli
cltd
push
pop
or
mov
insb
mov
ficomps
jns
fildl
cmp
mov
mov
sbb
movsb
xchg
pop
fwait
rorb
mov
adc
adcl
jg
rcrl
xlat
ja
aas
mov
push
outsl
ja
loop
fisttpl
cmp
jae
xor
mov
sub
ljmp
adc
xchg
cmpsl
mov
ss
int
repnz
test
mov
inc
mov
push
and
mov
sbb
push
push
js
jp
outsl
add
in
pop
repnz
mov
push
xchg
mov
sub
mov
out
addr16
push
leave
shufps
dec
lock
ds
sub
push
aaa
and
adc
sbbb
sbb
or
out
or
loopne
cltd
or
pop
stos
inc
fisttpl
jmp
jo
loope
push
lods
dec
in
cmp
mov
daa
mov
dec
xor
add
loope
sbb
cmp
mov
xchg
fiaddl
xor
mov
push
xlat
cmp
lea
test
mov
daa
pop
push
jb
bnd
jo
repz
add
int
pop
add
add
or
ss
push
repz
inc
push
fmuls
cmp
cmp
xor
and
sbb
add
insl
add
iret
ss
loop
dec
sub
fs
data16
out
test
shll
inc
add
es
xchg
in
mov
or
popa
mull
mov
add
inc
stos
ret
cwtl
in
loope
or
add
je
mov
mov
mov
dec
clc
test
pop
lret
insl
imul
add
mov
in
or
sbb
mov
add
mov
test
imul
popa
jmp
ret
lods
sbb
xchg
shrl
rcrb
sti
adc
cmc
cmpsb
fstps
in
mov
outsl
and
mov
pop
sub
jmp
cs
decl
cld
adc
jmp
lock
data16
or
push
xlat
lahf
jbe
aam
dec
adc
dec
and
adc
dec
jp
jmp
and
or
lock
bound
add
and
add
movsb
in
add
mov
mov
scas
stos
fdivrs
aaa
push
aad
into
std
or
fstpl
int3
shlb
or
jno
and
jp
rcll
ds
add
mov
push
out
pop
mov
in
aad
test
movsl
test
lret
aam
push
jge
sub
enter
inc
call
test
es
mov
jmp
mov
and
ret
aad
or
divl
pop
xchg
jno
repnz
fistps
mov
jbe
jge
sub
mov
icebp
and
outsb
mov
xchg
rorl
fwait
out
xor
jb
add
xchg
mov
sbb
jno
jns
or
or
outsl
pushf
lcall
sar
std
out
jo
jg
jg
inc
fsubrp
push
jge
call
icebp
out
leave
inc
jnp
cmc
inc
daa
mov
aad
push
lret
mov
sub
mov
out
push
and
adc
test
mov
test
inc
mov
call
cltd
aad
sbb
push
push
add
sbb
adc
out
ljmp
into
adc
xchg
jnp
bound
aaa
fcmovu
adc
add
fnop
mov
add
dec
xchg
mov
dec
flds
in
or
loope
add
dec
inc
fnsave
mov
pop
cmp
movsl
mov
imul
test
cmc
jns
sbb
or
ficomps
fs
mov
xchg
sbb
dec
mov
jbe
sub
mov
in
mov
pop
push
lahf
or
and
insb
rcl
dec
adc
int
out
movsl
jnp
adc
rcll
movsl
insb
daa
fnstcw
ljmp
addr16
outsb
in
test
inc
nop
test
nop
int
pop
cmpsb
dec
cmp
push
or
push
mov
cmpsb
mov
mov
cld
stos
xchg
in
rcrb
rcr
lahf
jmp
inc
ret
mov
inc
pushf
int
outsb
pop
add
mul
inc
and
sar
mov
push
xor
imul
adc
js
out
mov
pop
mov
sahf
or
inc
or
fbld
ja
sub
jl
sub
jnp
stos
loop
lea
pop
xchg
xchg
insl
notb
negb
sub
jg
ror
hlt
shrb
or
fistpl
popa
cltd
jle
cmp
mov
test
pushf
ror
pop
push
pushf
stos
in
rorb
xor
pop
mov
sti
stc
dec
stc
dec
aad
inc
xchg
fildl
mov
add
aam
add
scas
divb
pusha
or
mov
ja
pop
mov
or
ret
sbb
dec
out
pusha
out
and
mov
mov
jnp
mov
mov
mov
fimuls
and
pop
dec
mov
or
sub
pushf
lahf
pop
pusha
imul
pop
adc
mov
mov
aam
sub
lods
jnp
mov
lods
cbtw
sarl
rclb
jbe
push
sbb
pop
dec
test
xchg
cmp
jmp
mov
mov
jle
test
jecxz
pop
negl
out
push
mov
jo
mov
int3
mov
mov
mov
lock
dec
fsubp
iret
mov
repnz
cmp
cwtl
movsb
jmp
jbe
inc
jecxz
outsl
jo
mov
push
inc
add
add
xchg
gs
out
int3
clc
loopne
popf
pop
mov
and
mov
mov
loope
cli
rclb
and
lret
call
lds
addr16
pop
loope
jmp
sbb
and
ficoml
cltd
dec
stos
add
sti
jns
scas
dec
xchg
jo
lds
xor
imul
insb
sahf
gs
test
xor
fimuls
adc
mov
nop
adc
dec
xchg
dec
pop
pop
popf
aam
jbe
add
enter
push
shr
mov
in
mov
nop
push
into
sub
mov
aad
dec
fs
mov
push
inc
jne
xor
xchg
fadds
inc
ljmp
pop
add
pop
pop
rolb
mov
or
cmp
popa
sub
fucomp
loop
addr16
mov
inc
enter
jb
bound
dec
pop
cli
lock
push
pusha
cmc
pop
mov
callw
inc
push
or
and
fiadds
lds
js
sub
lock
jg
and
and
std
push
lcall
enter
mov
std
mov
inc
sub
out
mov
pop
fmul
cmpsb
push
loope
pusha
jnp
lret
mov
outsl
jle
mov
fidivs
sub
fcomps
or
popf
xchg
mov
sbb
xchg
fsubrp
sti
lcall
imul
xor
mov
es
sub
lret
fwait
punpcklbw
mov
fwait
or
sub
mov
cld
jbe
jg
loope
pop
xchg
das
sbb
xor
pop
or
repz
add
aam
mov
mov
mov
mov
int
push
mov
cmc
jle
in
sarb
icebp
es
fcom
push
mov
test
out
out
xchg
sub
fstl
xchg
in
fwait
dec
iret
je
or
mov
and
dec
jmp
mov
mov
ds
in
movsl
mov
sahf
and
lods
or
jle
push
insb
xor
xchg
mov
std
fsubp
loopne
ljmp
mov
shrb
push
push
jno
push
aad
push
sub
adc
rcr
fwait
lods
pop
xchg
call
add
rorl
xor
filds
aaa
jae
test
sub
inc
dec
ljmp
repz
xchg
jl
sbb
mov
stos
push
sbb
push
jbe
ret
ja
mov
cmp
mov
testb
outsl
mov
outsb
mov
sub
sbb
push
outsb
sbb
stos
adc
fstp
cs
in
mov
jle
adc
xchg
hlt
mov
sbb
mov
lret
mov
fwait
inc
jecxz
sbb
jb
and
push
aaa
and
hlt
daa
ja
imul
scas
mov
adc
les
imulb
adc
sbbb
nop
mov
aam
je
test
add
fstpl
sbb
cli
test
jno
push
movsb
jne
js
mov
mov
fadd
xchg
jbe
mov
clc
imul
shrl
out
fwait
cmp
test
lcall
ja
or
inc
lds
inc
das
sbb
adc
inc
ja
lea
sub
lahf
mov
jl
lock
fcoms
and
nop
dec
aam
mov
into
rcrl
call
xor
pop
hlt
sti
adc
sar
stos
jns
inc
loopne
rcl
adc
push
push
mov
ljmp
xor
jle
and
adc
testl
insb
jp
add
push
cmp
je
icebp
mov
repnz
cmp
fstps
push
cmp
push
or
mov
and
lret
imul
mov
xor
fists
test
test
adc
push
fdivs
adc
cmpsl
pusha
repz
stc
inc
inc
test
cmp
adc
jae
leave
scas
fwait
and
in
sti
js
xchg
sbb
mov
fchs
repnz
clc
in
hlt
pop
call
ficoms
inc
mov
sahf
dec
or
push
add
push
mov
bnd
and
pusha
jno
xor
push
lahf
push
jmp
or
dec
dec
ljmp
je
and
jno
ljmp
sbb
bound
pop
mulb
idiv
cmp
into
lods
popa
jo
scas
jne
das
lea
ficompl
or
test
je
enter
inc
ss
ret
and
shl
mov
mov
sbb
add
adc
scas
cmp
jmp
sub
and
pop
sbb
testb
bound
cltd
ret
popf
sbb
jno
pop
add
inc
popl
xchg
push
mov
mov
ret
jns
sub
loope
jo
push
icebp
and
ret
and
jge
movsb
fdivl
pushf
sub
andb
std
leave
mov
jmp
nop
sbb
or
rcrl
bound
pop
mov
xchg
cmp
scas
jl
xchg
mov
je
and
push
sbb
outsl
pop
and
dec
dec
jnp
push
or
add
dec
jbe
pop
sbb
jmp
sahf
or
shl
pusha
push
gs
arpl
jns
cli
xlat
in
rcrl
nop
in
and
addb
gs
xchg
mov
test
adc
mov
and
push
push
mov
loop
push
aaa
adc
outsb
sub
outsb
jnp
loope
xor
mov
daa
dec
sub
inc
sub
outsl
lods
push
cmpsl
xchg
adc
nop
xchg
rorl
pushf
sbb
push
mov
xor
mov
mov
sub
sub
lcall
rcr
sbb
popf
sub
pop
sbb
pop
fsts
scas
iret
and
jo
inc
movsb
frstor
mov
or
mov
push
mov
test
xor
push
mov
in
loope
outsb
dec
loopne
leave
notb
add
mov
call
mov
push
fdiv
xchg
imul
sub
lcall
pop
pop
rorl
test
xchg
icebp
or
scas
xchg
adc
xor
push
inc
movsb
scas
cli
call
cmc
addl
dec
sub
xchg
add
push
inc
push
sub
out
sub
pop
dec
data16
or
fdivr
jns
sub
enter
clc
les
ret
loope
lea
loope
xchg
imul
movnti
rorb
xor
sbb
out
ret
pop
int3
xor
or
fstps
orb
fwait
sbb
mov
mov
jmp
mov
insl
and
pop
shl
pop
or
inc
mov
add
xor
and
outsl
jle
and
pop
nop
fidivl
jp
or
pusha
mov
mov
out
in
mov
and
sub
push
das
test
daa
fsubrs
loop
push
ss
push
rcl
out
sbb
movsl
adc
lds
insb
es
aam
repnz
out
jl
cltd
mov
rol
mov
clc
dec
push
pop
sub
mov
or
inc
hlt
mov
mov
or
xlat
jo
add
cmp
movsb
sbb
inc
je
test
cmp
das
sub
pop
out
lods
mov
lock
out
push
nop
push
in
lods
mov
imul
mov
jmp
ss
fbstp
inc
std
neg
sub
in
enter
mulb
add
repz
pop
ja
and
imul
mov
repz
jle
ret
xchg
test
cwtl
shl
xchg
mov
xchg
test
js
mov
je
adc
call
mov
xor
xor
decl
mov
inc
out
cmpsb
xor
icebp
sbb
fwait
xchg
dec
aaa
push
or
mov
sub
lods
test
push
outsl
inc
cld
aaa
dec
jecxz
stc
cmpsb
sbb
aaa
pop
mov
mov
ret
rcrl
jge
pop
dec
sub
cltd
push
cli
jbe
mulb
and
mov
cmp
sarb
mov
in
mov
mov
cmp
call
add
xor
mov
in
mov
mov
idivl
leave
fcomps
aam
cmp
xor
push
js
imul
lret
nop
pushf
jno
imul
out
xor
lds
outsb
push
out
pop
xlat
and
out
mov
cmp
xor
fisubrl
xor
das
jg
or
loop
cmp
gs
fucomip
push
pop
or
pop
push
inc
cmp
sbb
cmp
sti
dec
clc
daa
inc
jmp
adc
adc
decl
imul
in
in
js
sub
fsubl
jle
mov
les
sub
shrl
out
ss
imulb
push
ds
mov
mov
outsb
mov
push
sbb
ja
mov
es
push
dec
sub
adc
pop
rcl
sub
and
daa
insb
and
leave
jl
mov
out
pandn
pop
sub
pop
repnz
sbb
and
int
push
dec
mov
scas
leave
or
cs
add
jbe
es
pop
test
mov
shr
sti
inc
fnstenv
sbbl
add
in
icebp
frstor
sub
lods
dec
mov
cld
in
not
adc
divb
repz
jl
and
out
mov
cmpl
adc
popf
mov
into
cld
aam
cltd
outsb
scas
into
xchg
mov
repz
ja
sarl
and
push
std
dec
int
add
jecxz
loopne
fcmovnb
jl
inc
lds
or
cmp
test
clc
jbe,pt
clc
cli
sbb
mov
test
fbld
fstpl
dec
dec
ss
scas
rcrb
adc
sbb
xchg
jmp
stc
sub
fnstenv
mov
or
test
pop
xor
add
xor
sub
sub
cmpsb
mov
dec
adc
loopne
xchg
jmp
pop
nop
or
test
mov
cli
cmp
jmp
xor
add
aad
mul
fisttpl
or
cs
and
push
loopne
sbb
xor
test
out
popf
jle
lcall
in
lds
clc
or
bsf
mov
dec
insb
dec
push
mov
adc
adc
jnp
jecxz
mov
jne
iret
mov
pop
mov
sti
rorb
adc
stos
mov
mov
outsl
xchg
sarb
shr
inc
ret
ret
jecxz
cwtl
xchg
jmp
fstps
les
push
sahf
mov
in
cmpl
or
fimull
les
test
pusha
mov
popf
or
into
inc
mov
or
mov
ret
jno
or
les
cmp
xchg
es
aad
jg
repz
lret
xchg
es
pop
mov
mov
aaa
add
mov
mov
pusha
sub
out
movnti
adc
jl
push
push
aam
adc
test
fcomps
push
cltd
data16
rorl
xchg
out
fldcw
js
jge
shll
iret
das
push
jp,pt
or
ss
fucomip
and
push
sub
addb
push
jns
mov
mov
dec
inc
cmp
jne
sbb
and
dec
sahf
popf
fildll
test
out
mov
pop
idiv
popa
lock
out
cmp
andb
jbe
xor
lock
adc
ret
fisubrs
addr16
lds
push
stos
sub
in
shll
pop
test
or
and
push
dec
cs
scas
fcmovnb
mov
outsb
cs
jns
daa
mov
lock
mov
out
sbb
test
js
pop
lea
sbb
xor
sub
mov
pushf
arpl
fsubrs
sub
add
cmp
pop
inc
shlb
mov
xor
dec
jo
push
xlat
in
adc
push
sti
mov
mov
in
mov
xor
mov
or
dec
xchg
mov
popa
mov
cmc
jb
test
fnsave
inc
mov
jg
fsub
mov
or
test
subl
test
orl
adc
inc
enter
test
addr16
jbe
xchg
cmp
push
pop
xor
jp
test
lds
jb
cwtd
mov
or
xchg
jmp
pop
stos
xor
xor
and
in
mov
mov
fiadds
mov
scas
test
mov
mov
movsb
sbb
test
movsb
cli
mov
test
mov
ret
and
jmp
out
out
pop
mov
add
lret
pop
in
jge
and
or
shll
jmp
xchg
lret
xlat
fwait
xchg
mov
lods
daa
into
or
mov
cmp
loop
pop
mov
into
aad
push
cmp
scas
pop
insb
add
mov
add
hlt
inc
bound
mov
push
lods
add
jmp
pop
test
cmc
pop
inc
mov
push
and
push
mov
pusha
or
inc
arpl
ss
les
jecxz
fidivs
movsb
test
pop
add
xchg
fcoml
jg
in
pop
mov
mov
ret
imull
cld
aam
mov
add
cmp
pop
fisubl
and
mov
loope
shlb
push
jmp
shlb
fs
fsubrs
or
and
shl
mov
scas
daa
jbe
in
into
cmp
lods
outsb
pop
lcall
sbb
inc
push
sub
pop
mov
mov
ret
xchg
and
in
hlt
dec
aas
mov
scas
in
loope
aad
add
outsl
imul
dec
out
faddl
adcl
xchg
lock
or
ds
dec
sete
sbb
push
mov
jp
movl
ret
xor
insb
xor
xchg
mov
adc
ret
dec
cld
fdivl
test
cmp
sub
cmp
add
pop
cmp
outsb
outsl
dec
out
mov
mov
test
mov
mov
cmp
fstp
cmpsb
mov
jnp
aam
fisubl
stos
or
xchg
pop
fcmovnu
jne
xorl
cmpsl
fdivrl
xor
out
dec
call
jno
add
stos
mov
cli
jl
clc
mov
sbb
mov
mov
fdivrs
adc
push
mov
sub
mov
or
insl
pusha
push
dec
pop
outsl
out
jnp
mov
movsl
sahf
mov
push
iret
push
cmp
arpl
add
nop
subl
sbbl
es
call
cmc
filds
adc
and
push
into
or
mov
fnsave
pop
stos
cmp
mov
sub
push
fwait
ss
in
xchg
into
mov
xor
xor
pop
mov
mov
push
mov
jne
stc
adc
or
mov
jp
icebp
adc
test
stos
imul
inc
testb
sarb
and
lea
call
sbb
loop
xchg
mov
add
mov
into
test
inc
insl
inc
les
repz
lock
test
lods
push
adc
push
sbb
or
mov
push
mov
cmpsl
adc
and
and
jmp
sub
and
call
and
xchg
mov
push
mov
sahf
iret
nop
push
sbb
imul
out
imulb
ljmp
fcmovbe
cwtl
cmpsl
sbb
je
movb
aam
xor
cmp
xor
repz
jp
aaa
es
jp
adc
jns
xchg
jae
push
ret
insl
xchg
jbe
stos
dec
sub
nop
adcl
push
inc
outsl
jmp
mov
pusha
push
inc
lods
add
xor
ds
jmp
push
mov
lods
dec
sbb
mov
or
mov
pop
js,pt
fwait
mov
cwtl
pop
dec
ja
sbbl
lcall
sub
in
jl
loop
movsl
jle
aad
jae
or
rclb
divl
sub
cmpsb
lcall
jne
aas
hlt
out
sub
rcrb
cmc
cmp
sbb
xchg
imul
xor
sub
and
repz
fsubp
arpl
jb
dec
jge
pop
dec
pushf
orl
mov
jecxz
jl
mov
mov
sahf
mov
insl
gs
jns
xchg
aaa
cmc
daa
dec
arpl
or
fisubrl
aas
xchg
jl
daa
mov
push
add
fwait
sub
hlt
inc
sub
and
jae
int
dec
ss
mov
popf
js
jp
es
in
repnz
inc
pop
or
cs
ljmp
pop
mov
aas
sbb
dec
jmp
jb
out
mov
ds
repz
divl
cwtl
or
inc
inc
dec
push
mov
out
push
outsl
or
sub
ret
in
pop
std
ja
sbb
movsb
mov
lea
imul
pop
xlat
jge
jecxz
xchg
jmp
dec
loopne
mov
ljmp
addb
xchg
or
pop
mov
lea
shlb
lock
xlat
nop
and
js
out
xchg
insb
fidivrl
fucomip
lahf
lret
in
and
ret
mov
jecxz
es
push
aas
js
cmc
sti
shrb
sbb
ja
call
addr16
outsb
ljmp
test
sub
aam
rol
add
stc
ret
cs
test
mov
cld
cmp
inc
mov
ja
xchg
dec
jmp
add
sbb
sub
pop
xor
jmp
xchg
push
add
cmp
std
cmp
add
mov
sbb
aad
cmp
pop
jno,pt
rcr
stos
push
dec
or
lods
or
inc
lret
mov
ret
mov
fldl
sbb
jmp
pop
push
fwait
or
and
stos
pop
aad
popa
sbb
out
and
sub
pop
or
imul
shrb
lods
mov
and
out
inc
dec
outsl
bound
std
cmpsl
aam
cmp
sub
xor
adc
and
stos
movsb
and
and
loop
mov
or
out
inc
mov
xor
mov
push
add
in
or
pop
and
nop
mov
data16
lock
or
xor
and
adc
mov
outsl
add
cmpsl
adc
sbb
fistpll
aad
dec
sbb
dec
xor
pop
cmp
inc
jmp
mov
pop
outsb
mov
mov
aad
inc
sub
cmp
and
push
into
inc
outsl
xor
cmp
aas
leave
xor
shll
push
out
push
pop
jg
mov
nop
adc
mov
mov
outsl
or
sbbb
je
jge
insb
xchg
jle
or
jecxz
movsl
adc
sbb
into
fdivs
fs
in
insl
mov
push
test
pop
sub
in
stc
std
insb
inc
sbb
lahf
xlat
jb
jmp
and
or
pop
sub
inc
in
aaa
and
sti
test
repz
out
iret
das
mov
or
pop
push
repz
stos
mov
cmpb
xor
or
add
lret
xchg
adc
push
xor
cmpsl
pop
fisubs
add
call
jbe
mov
inc
or
xchg
daa
push
xlat
xlat
sub
loope
inc
push
int3
shl
sti
or
dec
dec
rcrb
ss
movsl
hlt
insb
sub
and
aam
mov
js
and
mul
and
pop
xor
rcrl
jb
mov
push
ljmp
sti
jl
jnp
rcrl
cmpl
test
bound
lods
sbb
fistpl
dec
jmp
cli
inc
or
dec
aad
inc
int
push
mov
fildl
movb
loope
push
xor
xor
inc
fs
add
jb
in
stos
mov
fstpl
xchg
mov
xor
add
fidivl
add
out
scas
dec
pop
es
scas
cs
or
pop
jbe
jge
push
mov
loope
mov
push
jo
xchg
dec
pop
nop
fcmovb
push
daa
sbb
push
adc
ja
jo
fsts
push
aad
test
adc
add
inc
mov
fcmovnu
in
iret
in
xchg
pop
in
mov
fadds
and
test
sbb
xor
mov
bound
xchg
xchg
inc
pop
or
jecxz
xor
out
aam
in
inc
jmp
pop
sbb
inc
add
pop
sub
pop
jo
dec
inc
shrl
jp
mov
ret
dec
sub
push
and
jge
ja
or
pop
hlt
pusha
mov
lret
cmp
inc
int3
outsl
arpl
ljmp
pop
sti
jns
loope
sub
mov
ret
jne
jo
inc
mov
pop
ror
jle
jnp
lahf
stos
aaa
inc
xor
stc
ret
or
xlat
cli
cwtl
imul
xlat
mov
mov
lahf
inc
add
and
shlb
cmpb
lods
pop
mov
rcl
adc
pop
add
in
and
sbb
pop
or
lret
andb
dec
mov
mov
lea
jmp
jb
test
popa
sti
jmp
out
xor
cmp
in
pusha
and
popa
lahf
adc
dec
and
dec
add
mov
daa
outsl
mov
push
fimull
out
mov
jbe
cs
test
aam
aas
out
rcr
insb
mov
loopne
rorb
ret
mov
sub
imul
sbb
push
jle
mov
addr16
mov
int
ret
sbb
inc
push
adc
cmp
je
xchg
jmp
fisubrs
lods
out
push
cwtl
ss
mov
test
adc
xchg
mov
mov
sahf
or
mov
push
ja
sbb
push
leave
push
add
jno
std
pusha
dec
mov
push
xchg
sub
shrb
fstpl
out
push
xor
out
mov
add
cwtl
cs
movsl
add
ljmp
aas
fnstcw
imul
mov
jnp
andl
push
jnp
pop
clc
xchg
loopne
fistl
lods
test
adc
or
cmp
or
imul
jge
ficoml
lret
push
push
orb
pop
xor
fisubrl
jbe
ret
dec
pop
mov
add
jle
dec
fs
jbe
add
in
pop
jb
jne
pop
mov
sahf
sbb
lods
pusha
mov
sub
ds
lods
lret
fisttpl
sub
pop
sbb
dec
inc
jb
ljmp
lods
and
mov
lock
mov
or
add
mov
sbb
mov
fwait
push
aaa
pop
mov
xchg
or
xchg
pop
pushf
xor
push
push
loopne
pop
js
mov
cli
aad
mov
scas
xchg
es
cmp
scas
test
loop
cwtl
inc
fsubl
call
leave
or
adc
stc
lret
xchg
hlt
sti
adc
push
out
lds
sti
test
xchg
jns
stos
gs
insl
test
jp
mov
or
pop
test
sub
xor
repz
aaa
pop
outsl
dec
cwtl
pop
xchg
out
push
fiadds
jo
mov
inc
jae
pop
ljmp
push
jecxz
arpl
mov
or
push
pop
jg
jae
jmp
loop
jne
popa
adc
imul
jnp
pop
adcl
lea
jmp
test
pop
push
and
and
mov
mov
scas
xor
inc
aad
and
lcall
add
xchg
mov
popf
mov
inc
mov
mov
mov
iret
roll
mov
dec
xor
sbb
jp
call
xchg
or
push
jl
jmp
pop
mov
dec
pop
cmp
adc
mov
insl
test
imul
and
xchg
sbbb
fiaddl
test
xchg
fld
adc
test
and
mov
ljmp
pop
mov
or
cmpsb
jg
jne
gs
add
add
int
pop
jne
pop
cli
adc
jne
pusha
dec
dec
stos
pop
sub
in
mov
mov
loope
mov
add
cld
cmp
dec
mov
negb
xchg
adc
mov
mov
addr16
mov
push
inc
dec
lahf
dec
jmp
mov
xor
add
repz
in
xlat
or
xor
pop
push
xchg
sbb
sahf
frstor
test
jbe
sbb
bound
movsb
inc
and
loop
bound
jl
mov
cmpsb
sbb
xorl
outsb
test
xchg
andb
pushf
cld
iret
xor
push
mov
rcl
test
hlt
ret
pop
pop
xor
mov
cld
lock
in
aaa
mov
lods
ret
push
data16
push
mov
jmp
pop
mov
jecxz
test
ret
xchg
imul
mov
loop
sbb
iret
adc
in
jmp
xorl
cmpsb
cmp
xchg
sbb
and
sbb
inc
push
pop
push
xchg
stc
scas
pop
mov
repnz
into
aaa
test
jl
jle
in
cmp
pop
sbb
cmp
popf
xchg
dec
icebp
loopew
fidivrl
loop
push
push
test
shrb
sub
out
pop
add
and
sbbb
pop
add
xor
sub
add
xor
lret
jmp
ret
movsb
cmp
fistps
repz
rorb
inc
add
xchg
mov
sub
rol
fistpll
xchg
std
and
push
ljmp
and
mov
xchg
inc
lahf
xor
fsubl
sub
outsl
and
inc
cmp
sti
xchg
sarb
shlb
insb
shl
push
js
push
push
les
jbe
test
cmp
notb
xor
pop
xchg
imul
rol
mov
loope
push
sub
pop
test
sbb
sub
test
push
sbb
andl
push
push
and
push
mov
jmp
adcl
cmc
out
aad
mov
jp
mov
pop
std
mov
dec
dec
loope
inc
mov
xchg
jg
lret
lret
arpl
imul
negl
fldt
jl
mov
xchg
cld
shll
out
sti
sbb
add
ss
enter
sbb
das
xchg
add
test
mov
push
clc
cltd
out
and
push
jo
or
mov
or
add
cmp
fmuls
push
dec
dec
push
cmp
dec
out
outsl
jmp
leave
jl
scas
cli
pop
inc
xchg
jae
mov
jmp
push
movsl
add
ret
dec
jo
jae
negb
adc
popf
ret
pop
test
ss
sub
ret
jmp
jae
lahf
jmp
int3
out
out
fstps
xchg
jb
gs
into
cltd
mov
in
inc
in
leave
mov
cmp
jb
or
sbb
daa
int
cs
xor
or
pop
imul
mov
shlb
or
push
sbb
repz
add
test
inc
xor
or
mov
add
inc
rolb
or
push
xor
push
jns
push
or
pop
sub
jae
pop
arpl
out
hlt
sub
and
or
add
push
pusha
mov
inc
rep
add
mov
mov
fldenv
cld
jg
jg
popf
jle
scas
sbb
inc
lret
inc
ja
sub
and
jl
pop
jns
sbb
fwait
aad
sub
popf
xchg
push
mov
ljmp
jg
aaa
jl
repnz
jo
xchg
and
popf
push
and
xor
popf
mov
or
sbb
adc
idivl
push
pop
jp
test
dec
icebp
pop
mov
mov
dec
sarl
cwtl
adc
pop
in
mov
mov
mull
shll
cmpsl
pop
push
fistps
std
push
lock
sbb
add
and
out
outsl
int
xchg
xchg
out
data16
nop
cmpsl
sbb
mov
or
out
imul
sub
dec
sbb
mov
pop
cmpsl
fcmovne
push
mov
push
inc
or
adc
inc
out
mov
testb
test
mov
lcall
lds
jmp
push
fidivl
test
sbb
mov
sbb
es
xchg
lods
pop
mov
inc
jmp
pop
std
out
nop
cmc
movsl
jl
push
shlb
jecxz
idiv
push
jge
movsl
xchg
jg
push
jne
inc
imul
inc
adc
xor
pop
push
and
jnp
jg
mov
cmp
mov
addr16
js
mov
mov
or
push
pushf
js
push
test
push
out
sbb
dec
jmp
sub
xlat
js
adc
pop
outsl
mov
sub
icebp
cmp
mov
add
lods
xor
int
mov
movsb
adc
push
or
cld
add
push
mov
jnp
cltd
adc
xlat
out
ja
pop
inc
mov
outsl
ds
mov
mov
in
aam
ficoml
sbb
xchg
sbb
jbe
mov
mov
add
xor
das
xor
rolb
sub
push
inc
in
xchg
dec
adc
push
lret
xchg
xor
or
mov
or
mov
or
push
inc
outsb
cmp
aaa
sub
adc
add
jne
dec
cltd
pop
jae
test
xor
in
or
popl
gs
pop
jbe
inc
mov
xor
and
std
mov
fidivs
jae
outsb
loope
call
adc
idivl
jmp
mov
xor
mov
xchg
int
sbb
mov
add
mov
mov
enter
mov
daa
sbb
mov
mov
imul
and
xchg
clc
sar
xor
mov
push
pop
popf
dec
rclb
jne
repnz
das
incl
shl
movsl
lds
in
jae
pushf
cld
mov
cltd
dec
movl
mov
rcrb
loopne
push
jg
jmp
fstpl
adcb
in
xor
inc
add
hlt
jecxz
shrl
inc
repz
int
imul
jae
inc
push
neg
adc
in
hlt
fwait
adc
out
and
fiaddl
pop
lahf
push
ss
sbb
popf
movl
inc
out
insl
cmpsb
cmpsl
dec
adc
iret
push
add
inc
js
mov
dec
pop
test
cli
fs
popf
add
out
aad
gs
push
aad
subb
hlt
jge
loope
mov
lahf
or
out
jno
mov
rcr
or
and
sbb
out
mov
push
mov
cmp
xor
addb
xchg
insb
lret
sub
xchg
xchg
sub
xor
inc
inc
popa
inc
or
pop
icebp
inc
sub
ret
bound
sbb
push
mov
aam
mov
push
xchg
insb
mov
or
or
lret
or
inc
lret
repnz
push
lcall
ret
rcrl
mov
jg
jnp
mov
sbb
out
pop
dec
je
sbb
push
xor
aaa
sub
rcl
hlt
and
and
sbb
shlb
int3
out
xor
frstor
pop
and
dec
and
add
mov
and
sub
ret
test
and
mov
repnz
mov
dec
xchg
testl
mov
xor
inc
lea
pop
imul
idivl
lods
fwait
inc
test
xchg
jg
mov
call
enter
lock
xchg
mov
lahf
lods
repz
repnz
cmp
fmull
jle
in
dec
aas
push
cwtl
call
xchg
aas
sbb
jo
adc
cmp
add
enter
jno
jecxz
repnz
jl
test
sbb
add
std
pop
cwtl
outsb
and
sbb
mov
mov
or
scas
shr
dec
mov
push
add
mov
mov
push
adc
mov
jl
pop
cwtl
sbb
push
or
cmp
pop
data16
or
mov
out
rcrl
inc
adc
dec
jp
mov
adc
cli
jmp
jmp
sbbl
test
jno
loope
mov
inc
out
fmull
into
lods
sar
inc
ljmp
jl
aad
test
imul
out
roll
dec
sbb
shll
sbb
aaa
js
loopne
jge
test
cld
test
mov
gs
rol
pop
inc
mov
mov
test
push
lea
sub
pop
push
mov
mov
inc
cld
aad
popf
popf
adc
ja
out
clc
pop
pop
int
mov
inc
aas
xchg
mov
movsl
mov
notl
mov
pop
dec
xchg
aad
imul
aas
mov
arpl
sbb
lcall
clc
xchg
cld
push
xor
int
aad
stos
je
adc
shl
cld
inc
adc
ds
shll
lds
pusha
gs
mov
pop
call
insb
lock
enter
xchg
cld
mov
inc
test
mov
es
dec
std
jne
sbb
ret
lods
test
xchg
pop
add
pushw
aad
leave
xchg
push
push
hlt
movsl
orl
cmp
or
popa
xor
xor
mov
xchg
cld
in
test
lret
add
jle
cld
xor
jge
pop
and
add
adc
fwait
pop
sarl
mov
mov
xor
pushf
iret
int3
stos
mov
cmp
popw
stos
in
inc
adc
pop
test
scas
xchg
fs
push
jno,pn
in
cmp
add
pushf
in
in
icebp
gs
mov
push
daa
sbb
aas
xor
fsubrl
push
xchg
inc
popa
xchg
lds
js
dec
mov
mov
mov
sub
jg
es
lds
mov
xchg
int
xchg
imul
scas
jo
jne
inc
pop
dec
cmc
sub
add
inc
outsb
dec
jp
xor
sbb
mov
mov
pop
xchg
pusha
out
fildl
ja
loopne
movsl
push
mov
mov
dec
outsb
movl
xchg
das
movsb
cmp
es
shlb
lcall
nop
mov
clc
repz
mov
jnp
cmp
xor
mov
dec
in
xor
lea
xor
les
xor
cmp
fnsave
cmpsl
repz
push
add
hlt
sub
adc
mov
pop
pop
inc
std
pop
xlat
sub
mov
leave
andb
push
negb
daa
pushf
std
repnz
test
scas
cmp
and
push
xchg
inc
pop
push
jnp
inc
add
adc
pop
xor
hlt
cmp
jno
xor
stos
rolb
shrb
dec
sub
pop
mov
xlat
ret
add
in
sub
pop
imul
sub
and
decl
dec
mov
shr
xchg
repnz
mov
adc
rorb
test
adc
pop
jnp
arpl
loopne
lret
out
jl
pop
cmp
or
inc
and
lods
xchg
in
sbb
pop
jbe
xor
hlt
jecxz
xor
repz
inc
adc
add
stc
sub
sub
jle
add
xor
int
cmp
insl
stc
jb
sbb
dec
xor
mov
and
call
outsl
add
popa
mov
fs
pop
push
dec
fcompl
repnz
out
jnp
pop
ficoml
dec
in
dec
daa
mov
lcall
mov
xor
fwait
insl
xchg
cmpsb
mov
cmp
sub
bt
cmp
push
subb
ja
cmpsl
lods
mov
xor
cli
lret
outsl
aam
mov
and
nop
push
out
pop
dec
cmp
mov
sub
sbb
or
int
cmp
pop
or
movsl
les
mov
cmp
mov
or
mov
loope
and
test
in
push
mov
sbb
fiadds
cmc
pop
inc
out
outsb
in
lcall
push
fsubrs
aad
test
call
inc
jo
fisttpll
idivb
inc
mov
xor
js
cmp
mov
stos
mov
stos
testb
into
jp
mov
inc
icebp
mov
insl
jb
mov
sti
adc
mov
jmp
scas
cmpsl
in
movsl
cmp
rcrb
andb
dec
dec
outsl
ret
mov
into
fwait
dec
mov
and
out
mov
in
mov
pop
inc
sbb
xor
cmpb
mov
push
in
cmc
mov
jno
fsts
mov
pushf
inc
mov
adc
es
sahf
lods
ret
ret
cmpsb
adc
rcll
push
arpl
dec
ja
iret
push
out
and
cmpsl
lock
std
sbb
or
std
lods
clc
icebp
test
mov
jae
mov
out
and
dec
std
in
les
push
popa
jle
int
aaa
mov
fwait
jae
imul
xor
aas
cmp
inc
cltd
js
inc
or
les
loopne
mov
popa
shll
ficompl
movsl
fimull
pop
sub
cmp
in
push
outsl
arpl
dec
inc
les
repz
push
or
inc
subl
pop
push
push
jb
pop
scas
mov
jl
or
push
sbb
in
fiaddl
or
push
adc
sahf
mov
xchg
jno
leave
lock
cmp
mov
adc
mov
andb
pop
lds
mov
xor
ret
mov
sbb
insl
push
dec
loope
fldenv
lcall
stc
shrl
stos
subb
rorl
scas
or
mov
mov
push
out
adc
out
and
movsl
mov
insl
mov
jns
movsl
stc
fs
pop
mov
ja
out
push
jae
js
jns
or
shr
imul
sub
hlt
mov
out
sub
lret
iret
add
data16
xor
jb
or
fidivs
mov
xlat
stos
add
movsl
sbb
xor
enter
out
imul
mov
test
push
adc
mov
lcall
xchg
or
je
mov
shll
cmp
movsb
hlt
cmp
or
jnp
adc
test
mov
lahf
adcb
push
imulb
push
nop
lcall
nop
mov
mov
loope
pushf
xchg
stc
cmp
inc
pop
pusha
movsb
cmp
loop
dec
hlt
out
dec
cwtl
push
std
test
lods
xchg
adc
mov
push
leave
adc
lods
mov
gs
xchg
es
pop
pop
or
mov
xor
data16
sub
pop
lods
popa
leave
mov
stos
scas
fsin
xor
pop
mov
inc
xchg
popa
fisubrl
subl
es
adc
xchg
dec
add
into
addr16
test
cwtl
mov
or
fistl
push
lret
fidivs
mov
aas
push
repnz
mov
popf
and
lock
idivl
fnsave
ds
les
int
push
inc
lods
sti
and
mov
pop
repz
andl
mov
dec
jmp
mov
jmp
xchg
bound
ret
test
iret
mov
rclb
ror
inc
jmp
dec
or
inc
pop
or
inc
add
in
sbb
cmp
pop
adc
push
push
xor
lods
sbb
pop
inc
lods
sbb
sub
or
arpl
sub
sbb
leave
mov
push
mov
lahf
jo
add
xlat
into
xor
cmp
outsb
arpl
jne
iret
sbb
jl
jle
fisubrs
sbb
ljmp
mov
stc
adc
adc
fildll
inc
inc
rcrl
xchg
fcmovnbe
add
push
idivl
fdiv
jmp
mov
or
jae
test
cli
adc
inc
inc
les
into
ljmp
mov
push
std
lods
test
or
filds
or
ja
dec
xorl
adc
cmp
mov
push
adc
pop
lret
shll
pop
inc
cli
loope
jne
loopne
cld
sbb
and
push
test
fs
xchg
mov
xor
cmc
sti
push
shlb
lcall
pop
adc
enter
and
dec
sar
movsl
std
adc
mov
xchg
cmp
mov
repnz
jle
test
mov
xchg
pushf
iret
lods
jnp
out
movsb
loop
push
jo
fs
out
out
ja
loope
jge
mov
or
cmc
es
cli
dec
ljmp
xlat
leave
out
jmp
dec
cmc
int3
les
pop
js
pop
imul
stos
push
add
loope
ficoml
and
out
mov
mov
sbb
push
jo
in
mov
aam
data16
mov
cmpsb
and
cmp
push
mov
or
mov
mov
mov
pop
lea
inc
stos
sub
mov
repz
dec
lods
mov
adcl
sbb
mov
mov
mov
push
jl
jo
mov
cmp
stos
adc
mov
and
sbb
mov
mov
jnp
and
arpl
out
push
cmp
mov
clc
je
cwtl
mov
dec
cmp
or
mov
movb
and
inc
jle
sub
inc
test
arpl
dec
dec
adcl
or
cmpsl
push
je
xchg
pop
mov
jge
aas
in
xor
cmpsb
or
xchg
loope
push
inc
push
sub
or
ret
cmp
sub
leave
inc
into
xchg
pop
mov
jmp
mov
ljmp
arpl
xchg
or
dec
mov
repz
and
js
loopne
int
daa
sbb
decl
pmulhw
pop
push
xchg
cmpsb
rcrl
mov
subb
loopne
inc
jl
add
ret
cmpsb
mov
ret
xor
clc
je
stos
in
repz
bnd
fiadds
push
adc
pop
jle
sbb
ds
mov
sub
sbb
xchg
mov
sbb
clc
and
arpl
ficompl
hlt
pop
out
xchg
insb
xor
rorb
inc
hlt
dec
stos
arpl
inc
loop
mov
cmc
and
and
add
js
mov
cmp
adc
jge
sbb
aad
and
or
incb
decl
jae
cmpsb
bound
lds
shrb
lea
and
dec
ljmp
in
lods
aaa
push
or
mov
rcrb
stos
or
adc
mov
rcll
jp
fsubs
jge
shr
frstor
fmull
insl
mov
lcall
and
movsl
cmp
push
mov
inc
dec
subl
dec
fs
or
mov
push
jno
in
cmp
aaa
and
lret
scas
fsubs
pop
add
ja
jp
dec
jns
inc
fisubs
and
push
insb
cmp
mov
xchg
mov
xchg
mov
jbe
sub
das
lret
cltd
aas
or
sbb
in
dec
push
adc
sbb
fldcw
aam
pop
addr16
dec
xchg
xor
fcompl
sahf
mov
push
mov
pop
or
xchg
iret
mov
das
scas
push
xor
jo
das
std
add
pop
out
inc
sub
std
sub
mov
data16
adc
insl
dec
pop
das
mov
push
jle
cmc
jmp
xchg
imul
cmp
int3
frstor
sub
jae
and
push
mov
push
ljmp
sbb
ja
ret
mov
xchg
movsb
in
and
or
inc
out
idivl
cwtl
sub
xchg
or
push
dec
push
imul
mov
stos
jne
mov
cmpsb
rcr
fwait
xor
arpl
into
jg
mov
repz
dec
and
imul
sbb
adcb
mov
pop
jmp
add
lahf
inc
jecxz
jmp
es
shll
pushf
mov
rorb
lret
setge
jecxz
mov
hlt
xchg
pop
das
loope
xchg
in
add
xchg
add
xchg
decb
rcl
sub
fldenv
push
jmp
push
xchg
inc
xchg
ret
aad
sbb
rcll
push
repz
pop
dec
pop
pop
lahf
adc
cmp
scas
out
and
cltd
or
cltd
cmc
scas
sbb
jbe
sub
mov
jno
mov
cltd
push
pusha
arpl
xor
push
jb
jle
pusha
sbb
sbb
mov
mov
addr16
das
push
jmp
add
popf
sbb
jp
push
mov
mov
jp
or
jbe
out
outsb
cmp
scas
scas
xor
aas
fistl
inc
push
je
ds
out
push
rcrb
aaa
enter
dec
aad
into
negb
icebp
loopne
mov
je
fstps
inc
jae
xchg
push
das
cmp
sti
add
fdivr
into
pop
rcll
push
fistpll
dec
xchg
dec
je
cmp
adc
sbbl
ds
lds
cmc
sub
shlb
scas
mov
add
push
clc
push
scas
pcmpeqd
test
adc
ss
push
inc
addl
dec
mov
xchg
notb
xor
xchg
jne
push
sub
mov
lcall
in
mov
test
loop
ja
pushf
mov
mov
loopne
imul
ja
cmp
add
ja
xor
jmp
arpl
lods
flds
dec
xor
mov
xchg
xor
jae
in
add
fisttps
cmp
jmp
loope
rcl
popa
cs
negl
lret
adc
push
setg
fmulp
aaa
dec
out
movsl
sahf
inc
xchg
sbbl
xchg
and
dec
or
scas
xchg
inc
dec
xlat
mov
mov
movl
sar
cs
or
push
inc
stos
mov
push
cli
popa
out
fs
sbb
aam
jns
sti
cmp
int3
xor
push
and
mov
aaa
scas
mov
data16
push
insl
inc
ds
lret
mov
cmpsb
or
push
inc
push
faddp
stc
adc
pushf
jecxz
and
mov
lcall
dec
or
sub
in
or
push
lock
lcall
xor
dec
mov
and
pusha
sub
jns
cli
sbb
fistl
ret
sbb
popf
push
pop
arpl
call
loopne
jle
mov
jecxz
and
lret
fdivrl
and
movsb
scas
ds
or
pushl
and
sbb
jne
fnsave
inc
adc
fstl
loop
fidivrs
sbb
imul
jmp
cmpl
xor
stos
das
sahf
jle
dec
push
adc
push
sub
xor
out
xor
mov
sbb
fcoml
cmp
in
jge
inc
pop
stos
add
lret
dec
stos
cmp
sub
xchg
movl
test
out
cmp
sbb
adcb
aas
lods
fdivs
xchg
fmull
push
pop
iret
xor
aam
fpatan
addr16
mov
call
rcl
shll
aas
fbld
and
sbb
xchg
les
in
repz
lahf
jecxz
fs
fists
xchg
cmc
and
jl
push
scas
icebp
cld
jae
in
mov
adc
arpl
jnp
out
leavew
dec
or
ja
cltd
into
xchg
in
imul
and
lock
cmp
test
stos
imul
xor
inc
and
xchg
insb
test
jmp
mov
lock
cmpsl
sub
ror
add
in
inc
and
dec
pusha
mov
cmp
add
aad
pop
nop
test
and
cmpsb
pop
incb
out
and
mov
xchg
xor
lods
push
inc
cmp
pop
mov
dec
xchg
ljmp
imul
iret
xchg
or
mov
mov
into
call
movsb
pop
movsb
in
loopne
inc
addb
out
popl
mov
or
or
sti
ucomiss
dec
adc
lods
push
out
push
cwtl
push
sbb
or
out
rcl
aaa
ret
out
outsl
inc
mov
or
neg
prefetch
ja
xchg
or
shl
push
scas
and
jmp
andb
sahf
jb
xchg
fcmovbe
filds
dec
mov
pop
xor
leave
pop
mov
iret
and
gs
mov
shr
icebp
cld
insb
add
cmp
pop
aad
inc
xor
movsb
jmp
sbb
aad
mov
add
insb
outsl
loop
mov
jno
gs
cmp
les
xchg
or
in
insb
stos
repnz
in
fs
data16
xchg
jg
stc
adc
in
cmpsb
xchg
jle
out
adc
sbbb
sbb
jl
test
xor
pop
adc
or
frstor
sub
push
xchg
ret
and
int
push
cli
dec
call
es
stos
xor
mov
roll
test
je
lds
pusha
inc
push
sbb
data16
in
and
push
pop
testb
lcall
pop
cmp
jg
jle
addr16
mov
xchg
test
inc
stos
lock
xchg
dec
aam
int
pop
adc
jne
jmp
sbb
cmpsl
jle
xor
into
int3
stos
pop
jmp
jmp
out
addr16
jp
data16
scas
sbb
inc
imul
adc
pop
aaa
sbb
adc
jle
and
sti
jnp
mov
movsb
hlt
aam
cmp
mov
dec
test
sbb
sbb
test
fnstenv
aas
xchg
sbb
loopne
cltd
mov
stc
jae
scas
cwtl
and
rclb
insl
push
loope
dec
and
jecxz
push
outsb
repz
loop
adc
pop
mov
cmp
push
and
mov
std
call
push
popf
xor
adcb
lcall
call
adc
pop
mov
pushf
jmp
or
mov
test
xor
lahf
xchg
lahf
dec
sbb
add
data16
out
daa
repz
insb
sti
fildl
jae
mov
jb
mov
xor
ficompl
mov
mov
mov
hlt
test
cs
or
out
cmp
sbbl
nop
enter
push
mov
pop
xor
rclb
imulb
pusha
and
mull
sub
or
das
mov
adc
mov
rcrb
sub
mov
xchg
mov
into
lret
cltd
sbb
out
jo
insl
incb
lcall
dec
mov
mov
pop
jae
push
jae
std
ficoml
adc
loope
xchg
and
dec
adc
lcall
mov
pop
movsl
in
and
lahf
cmc
cmpsl
sti
mov
out
inc
push
iret
ja
cmp
jp
mov
mov
jecxz
jns
bound
icebp
ds
xchg
imul
dec
dec
sbb
mov
mov
mov
cmp
nop
out
mov
mov
int3
or
or
sub
cmpsb
test
loopne
cmp
mov
or
je
xchg
push
aad
pop
dec
sbb
adc
rorl
je
push
stos
movsl
and
mov
xchg
aad
scas
repnz
pop
iret
test
insl
sahf
lret
arpl
shrl
outsl
pop
sbb
push
sub
gs
push
xor
and
test
mov
jns
fldl
sbb
jmp
jmp
int3
mov
mov
test
xorl
cmc
sub
inc
out
and
pop
shll
test
dec
xchg
out
out
sub
ret
push
sub
and
or
inc
test
iret
mov
mov
inc
adc
sub
lahf
nop
mov
cli
mov
and
and
sub
into
bound
rep
imul
xchg
dec
pop
pop
cmp
cmp
jno
push
inc
sbb
mov
mov
xor
je
adc
cltd
jp
dec
lock
pop
lods
or
or
movsb
ljmp
add
je
xor
data16
ds
lock
inc
inc
je
ret
popf
mov
in
lret
les
enter
daa
daa
dec
mov
mov
negl
inc
mov
stc
in
scas
pop
icebp
sbb
ss
push
cmpsb
fistpl
movsb
adc
push
adc
fidivrl
out
adc
mov
xchg
fwait
sbb
iret
sub
jmp
mov
add
push
cmc
lea
rclb
shlb
sbbb
push
mov
xor
xchg
mov
mov
dec
mov
call
mov
mov
dec
pop
and
aaa
sbb
in
xor
fisttpl
gs
inc
cmpb
xchg
fnstcw
movsb
in
cs
aad
mov
adc
push
xchg
and
rorl
inc
jb
into
cmp
jns
insb
pop
and
jae
cmp
scas
dec
pop
aad
jbe
sti
xor
movsb
mov
jae
jbe
adc
pop
pop
jge
inc
aad
and
cwtl
sbb
mov
or
sub
xor
add
pop
lcall
cmp
repnz
ror
in
test
cmp
and
add
enter
scas
xchg
es
cs
mov
add
or
and
inc
adc
jle
xchg
adc
mov
scas
xor
je
out
mov
sub
mov
fwait
jl
push
mov
sarl
stos
pushf
enter
mov
pop
sub
inc
inc
jbe
orl
mov
movb
or
shrl
test
and
cmc
popa
scas
dec
xor
and
and
add
out
imul
popf
pop
int
adc
lock
loopne
dec
mov
cwtl
in
dec
add
ds
movsb
daa
loopne
jle
dec
cs
ret
aas
lret
roll
mov
mov
cmp
repz
scas
jle
sub
je
test
ret
lods
test
cmp
and
imul
jle
scas
cmpsb
push
jge
or
and
sbb
push
rcll
stc
adc
and
in
sbb
ret
mov
jae
outsl
xchg
push
mov
leave
xor
pop
jae
in
in
shlb
out
sub
mov
xor
xchg
and
cmp
pop
and
push
mov
ret
mov
dec
xchg
mov
mov
xchg
adc
in
lea
loope
jp
mov
dec
xor
or
test
scas
ficoms
sarl
mov
sbb
js
and
arpl
lcall
imul
sbb
cmp
jg
dec
inc
and
ja
aam
xchg
scas
cmc
lret
lods
adc
mov
xchg
or
mov
push
scas
jg
loopne
push
lahf
cmpsb
xchg
push
or
or
neg
data16
xchg
in
xchg
sbb
dec
dec
popf
repz
adc
pop
xor
mov
loope
aas
and
cwtl
pushf
mov
insl
xor
cmp
mov
rcrl
je
test
in
cmp
xchg
xor
lods
xchg
mov
nop
push
stc
dec
test
and
mov
int
sub
xor
xchg
cmp
xor
loopne
ljmp
dec
xor
filds
repnz
mov
test
jmp
repnz
mov
sbb
mov
xchg
out
popa
add
adc
xchg
gs
fs
popf
in
and
ret
cli
cwtl
cli
btc
sarb
ffree
push
inc
out
add
or
and
xchg
in
jg
cmpsb
inc
sub
and
xchg
push
fcmovnb
syscall
cmp
or
pop
xor
cmp
leave
mov
jl
jp
in
mov
test
lods
sbb
or
stos
push
pop
jmp
je
adc
movsl
push
stc
shll
sbb
and
cmpsb
push
hlt
jae
bndldx
cmp
pop
sbb
arpl
into
mov
pop
cli
mov
arpl
jge
adc
repnz
inc
xor
das
sub
xorb
sbb
or
jns
add
ret
pop
out
push
xchg
mov
enter
addl
shlb
xchg
add
mov
les
mov
lds
mov
rcll
pop
jg
outsl
pop
mov
mov
sti
mov
mov
movsb
sar
lret
rorb
ja
lahf
xor
jns
je
subb
mov
xchg
adc
in
lahf
jp
sti
cmp
adcl
bnd
mov
imulb
add
xchg
js
sub
fwait
lods
and
loop
or
std
rcrb
shl
mov
push
and
fwait
pop
or
cmp
sbbb
scas
adc
pop
jb
loopne
out
jne
xor
loope
and
dec
and
lret
and
sbb
mov
mov
mov
cmp
pop
lods
sbb
pop
testl
mov
jbe
dec
pushf
js
inc
jno
addb
sbb
dec
cmpsl
adc
and
mov
cmp
xchg
scas
or
inc
mov
clc
les
data16
insl
pop
dec
repnz
cltd
loop
sub
cmp
and
rcrl
mov
in
idivb
ds
inc
ljmp
ficoms
jnp
mov
adc
jl
dec
mov
aas
sbb
pop
xchg
pop
insb
mov
sbb
jle
data16
xorl
out
inc
mov
mov
sub
cmp
sbb
push
sub
insb
andl
dec
push
cwtl
jne
jge
push
xchg
sbb
add
in
lods
or
dec
xchg
lret
lret
dec
xchg
sbb
xchg
lods
rolb
xor
das
test
enter
inc
pop
ja
mov
pop
pop
mov
cmpsb
stc
pop
sahf
lea
push
push
test
jle
cmp
ret
mov
loopne
xchg
ss
mov
or
scas
mov
ljmp
movsl
pusha
pushf
xchg
in
loopne
jmp
loope
jns
ret
lret
scas
shll
jl
shll
xchg
sub
dec
add
cltd
and
icebp
cli
inc
push
add
xor
cwtl
cmp
inc
inc
outsl
out
mov
add
jle
sbb
inc
loop
adc
add
jne
push
mov
enter
ret
cmp
std
cmc
cmp
rolb
adc
xchg
add
xchg
lcall
int3
cmp
cmp
cwtl
test
cmp
stos
into
repz
dec
cmp
psubsb
push
lcall
cmp
shlb
xor
mov
xchg
cmp
mov
imul
jnp
or
pop
iret
sbb
aam
psraw
lcall
pop
mov
and
jmp
inc
mov
cmpsl
fisttpl
dec
outsl
stc
fists
pop
adc
push
dec
repnz
mov
xchg
div
les
lcall
or
test
push
inc
push
mov
xchg
rorb
pop
imul
test
cmp
repnz
aas
cmc
mov
int3
sbb
flds
adc
sub
dec
cmp
push
and
ss
xchg
mov
lcall
pop
sahf
ljmp
lahf
pop
add
and
xor
xchg
mov
sbb
in
mov
mov
xchg
mov
mov
jp
mov
out
xor
mov
shll
xchg
adcb
sub
inc
push
les
inc
or
fdivl
jmp
arpl
addr16
push
stos
mov
inc
xlat
or
lods
repz
scas
out
repnz
lret
in
or
sbbl
in
or
aas
cmp
add
outsb
es
adc
stos
or
cltd
dec
dec
movsb
pop
xchg
jp
xchg
adc
stos
sbb
insl
jae
test
mov
push
lods
test
lods
dec
mov
xchg
jnp
xchg
movsl
insb
xchg
in
ret
mov
das
sti
es
jmp
idiv
push
gs
add
xor
dec
sti
sbbl
adc
pop
mov
insl
mov
push
cmp
pop
pop
loopne
call
inc
ficompl
dec
lock
shl
jge
pop
loope
iret
fsubs
mov
mov
mov
ds
test
xor
dec
inc
xor
fimull
out
clc
movsb
mov
lods
fsubs
jecxz
pushl
jns
xor
xor
aas
mov
cs
push
adcb
test
int3
int3
iret
in
gs
add
mov
jb
dec
push
pusha
xorl
fwait
and
cmp
sub
or
adc
and
cmp
push
jns
popa
xchg
push
outsl
ja
in
xchg
daa
add
imul
mov
sbb
adcb
enter
imul
fnstsw
scas
das
sub
adc
sbb
scas
shl
mov
jecxz
loope
gs
les
mov
xchg
daa
jp
std
imul
cld
xchg
dec
cmc
fs
adc
sub
jg
adc
mov
push
ja
jmp
pop
out
pop
jo
push
in
mov
jbe
sub
mov
jl
push
loop
loope
into
mov
pop
wrpkru
dec
shll
sbb
xchg
mov
punpcklbw
fwait
adc
inc
testl
sbb
jno
leave
iret
aaa
mov
hlt
fisttpll
decb
repnz
xor
cli
jmp
and
imul
fldl
xor
stos
mov
out
mov
cltd
xchg
repnz
fs
mov
jo
sbb
fidivl
sub
push
mov
and
xor
cli
or
fistpll
push
rorb
aas
mov
sub
xchg
cs
dec
sbb
or
loope
pop
or
testl
xchg
scas
stc
dec
ja
into
nop
jae
xor
aad
cmp
jmp
adc
insb
fwait
jmp
inc
addb
aam
inc
andb
add
dec
jmp
neg
mov
cwtl
in
fildl
pop
clc
out
push
ffreep
stc
gs
pop
mov
repnz
andb
cld
loopne
insl
sbb
out
arpl
fdivl
dec
mov
sbb
out
lods
icebp
inc
outsb
repz
jae
and
test
pop
push
sbb
mov
pusha
pusha
cmpb
cmc
vpmadcsswd
addr16
cs
xlat
mov
jge
and
jecxz
sar
push
push
sbb
test
cltd
push
cmp
push
mov
sti
int
dec
imul
scas
rclb
pop
sub
push
adc
sbb
test
lea
imul
mov
outsl
int3
mov
orl
stc
jle
xchg
out
js
and
cmp
dec
adc
xor
adc
xor
stos
ja
aad
sarb
and
div
sub
fs
loope
loope
cmp
mov
js
dec
imul
jbe
inc
sbb
push
arpl
mov
cld
test
push
inc
lahf
loope
xchg
loope
hlt
addr16
push
mov
dec
mov
or
or
mov
jno
fldl
xlat
dec
shll
aad
cld
mov
std
mov
dec
std
leave
and
repz
aam
pop
sbb
and
cmpsb
push
icebp
mov
movsb
sahf
out
mov
dec
movsl
jb
lahf
and
push
fwait
adc
xchg
jg
push
sub
and
cmc
das
mov
lcall
es
pop
hlt
shrb
rcll
jmp
adc
lahf
clc
push
or
lods
push
out
mov
jae
push
mov
ja
cmp
aas
mov
add
popl
lahf
pop
mov
popf
aaa
fildl
fsubrl
aam
mov
and
sbb
lahf
sti
xor
adc
xor
sahf
jno
jno
add
cmpsl
jno
push
sbb
shrl
cmp
inc
or
mov
inc
sub
mov
adc
add
pushf
xchg
enter
stos
mov
in
jnp
and
div
mulb
dec
push
pop
nop
repz
cmc
jb
stos
inc
repz
jecxz
sar
sbb
adc
ds
push
and
roll
add
xchg
test
std
fsubs
push
rclb
mov
xchg
mov
aaa
fcomip
mov
sub
stc
xchg
dec
xor
sbb
dec
stos
cmp
and
flds
jp
bound
pop
xlat
in
scas
push
lds
jp
out
arpl
iret
xor
xchg
das
mov
popf
shl
lret
xchg
lds
mov
xor
sti
ror
arpl
pushf
insl
sub
std
cs
movsl
push
jo
or
or
shlb
fistpll
imul
shlb
xor
pop
shll
or
sbb
mov
hlt
mov
adc
pusha
and
addb
push
and
loop
ficoms
stos
jl
xor
inc
mov
flds
lock
repz
cmpl
xchg
outsl
cmp
xor
arpl
cmp
and
cmpsl
ds
jmp
dec
out
loop
sti
cmpsl
sub
and
clc
mov
leave
pop
jb
mov
xchg
mov
adc
add
lcall
or
lcall
sbbb
stos
lahf
pop
mov
xlat
sub
xchg
inc
sahf
bswap
adc
inc
inc
push
cmp
cli
dec
das
sub
lods
icebp
mov
cmc
cmp
sbb
inc
lret
and
mov
xchg
or
xchg
daa
enter
mov
xchg
push
in
mov
mov
xchg
int
sub
pop
movsb
dec
dec
and
inc
lods
pushaw
in
mov
ret
xor
pusha
out
enter
test
cmp
insb
mov
xchg
aas
sub
lods
out
das
cli
aam
fwait
das
inc
fs
repz
sbb
aaa
cmpsl
js
mov
in
int3
jmp
pop
push
icebp
and
mov
adc
or
std
jle
sti
mov
cmpsl
stos
and
and
pop
cmp
test
xchg
daa
cs
dec
aaa
mov
cmp
push
xor
jl
scas
xchg
nop
aas
das
jno
fwait
inc
push
out
outsl
and
jbe
mov
sub
pop
pushf
fs
jne
ret
push
or
insl
pop
rcr
mov
call
jge
dec
cmp
inc
sub
adc
movsb
pushf
negl
int
into
es
xchg
or
test
mov
pop
push
lcall
or
lds
outsl
inc
or
jl
mov
xor
repz
test
and
jb
out
mov
jb
mov
movsl
lods
adc
sub
add
outsl
lods
xchg
mov
dec
das
adc
xor
xor
shll
shrl
cs
cmp
push
repz
nop
roll
mov
jno
add
outsl
dec
and
mov
inc
movl
pop
sbb
pop
adc
mov
jle
sub
icebp
fisttpll
imul
inc
ljmp
xor
dec
sbb
xchg
xchg
andl
std
xchg
push
jg
pop
or
xchg
cmp
enter
int
add
pusha
fildll
insb
push
jg
adc
sbb
scas
fstpt
xorb
mov
call
fnstenv
xchg
sti
xor
cld
dec
hlt
fisttpl
mov
hlt
pop
push
mov
scas
imul
fisubl
mov
int
or
mov
add
sbb
inc
mov
or
mov
xor
jne
push
inc
add
lret
mov
jmp
pushf
insb
scas
repnz
je
push
mov
fimull
sbb
cs
mov
std
mov
xchg
cmpsb
scas
sarb
lcall
fistpll
xchg
add
mov
mov
push
std
hlt
add
inc
adc
cltd
inc
cmp
push
test
sub
stos
xor
xor
sub
data16
cli
mov
push
jg
xor
test
aam
movsb
mov
jle
fistpll
out
sbb
add
inc
and
add
jge
ja
push
aad
dec
sti
rolb
rclb
mov
jnp
jnp
clc
mov
jb
add
mov
pop
addr16
jl
and
add
and
sbb
in
cs
je
mov
inc
push
cmp
lods
movsb
cmp
stos
push
mov
je
fdivl
sub
test
inc
mov
aaa
fdivl
lcall
loopne
pop
mov
cltd
mov
xchg
sbb
add
loop
mov
outsb
fdivs
clc
or
es
mov
nop
xchg
mov
xor
adc
stos
adc
loope
jbe
cmp
xor
push
cmpsl
ret
pop
mov
push
jae
outsb
lahf
pop
sbb
mov
insb
mov
movsl
jecxz
pop
mov
iret
xor
jmp
and
xlat
mov
and
push
ret
adc
pop
cld
and
mov
aad
pop
mov
hlt
es
out
out
cmpsl
cmpsb
add
mov
testl
leave
loope
inc
mov
pop
jp
int3
xchg
and
mov
bound
lret
pop
mov
pop
stos
nop
adc
or
scas
insl
lock
es
lods
icebp
bound
dec
fsubr
enter
xchg
add
adc
dec
cld
pop
push
jnp
in
mov
outsl
movsl
dec
in
pop
sub
jmp
and
subb
test
in
jl
cs
push
pop
pop
fistpl
das
mov
jb
sub
xor
sub
ljmp
lds
out
mov
in
xor
adc
out
inc
mov
xchg
pusha
adc
outsl
xor
sub
sbb
call
mov
push
xchg
mov
jle
sbb
pop
pop
stos
add
mov
sub
scas
xor
fidivl
bound
mov
test
cltd
in
insb
xchg
roll
inc
or
loop
shlb
dec
out
cmp
rorb
popf
stc
fcmovnu
sbb
pushf
add
je
push
flds
sub
incl
popf
cmp
add
iret
es
cmpl
icebp
ljmp
sbb
inc
xchg
xor
ja
lods
leave
icebp
cmc
xor
jmp
mov
shl
fcomp
lcall
or
imul
sbb
inc
stos
xchg
or
add
jg
out
push
fisttps
push
movl
xlat
ds
jo
mov
adc
pop
mov
push
jl
stc
jle
and
mov
or
sub
xchg
sahf
stc
icebp
pusha
xchg
cltd
sub
les
or
pushf
outsl
or
outsl
lds
cltd
mov
xchg
daa
mov
push
popf
xor
cli
jl
sub
jns
dec
fcmovne
mov
pop
mov
es
arpl
dec
mov
lods
push
test
adc
pop
pop
push
loopne
packsswb
insb
pop
mov
in
inc
pop
mov
ja
adc
mov
lahf
in
mov
push
and
aas
sub
xlat
rorl
lods
cltd
mov
stc
xchg
movsl
in
arpl
and
inc
clc
xor
sbb
ffree
cmp
push
xor
push
mov
cmpsb
mov
or
add
xorl
mov
add
in
shrl
add
xor
inc
jmp
push
fwait
sub
mov
xor
sahf
xor
push
mov
daa
lock
dec
ljmp
shlb
jo
cmp
or
popa
addb
sub
fcomp
push
mov
push
lea
outsb
testb
outsb
mov
insl
in
jmp
lock
fsubl
and
sbb
arpl
xchg
test
imull
adc
enter
mov
inc
jmp
xchg
ljmp
xor
loop
outsb
fdivl
mov
fnsave
adc
mov
xchg
pop
incb
stos
mov
aaa
xorb
push
inc
jns
and
pop
or
xchg
and
cmp
mov
or
sahf
mov
out
or
aad
dec
jbe
stos
inc
jae
neg
cmp
mov
daa
fs
jmp
cmp
je
ss
mov
dec
or
mov
adc
xor
jge
test
test
ret
in
rcll
jnp
gs
sti
push
mov
mov
lahf
xor
adc
mulb
xor
jge
push
scas
and
lods
add
adc
ljmp
inc
arpl
std
jnp
mov
adc
nop
sub
lahf
dec
ror
fnsave
add
fadd
fwait
mov
sbb
test
pusha
or
repz
out
daa
inc
decb
mov
test
rcll
jo
mov
out
inc
inc
inc
lcall
mov
out
test
xor
test
mov
cld
pop
mov
and
imul
fcmovnbe
sti
sbb
push
lods
xchg
fidivs
gs
aaa
xchg
gs
mov
leave
or
shll
dec
orl
inc
mov
push
jl
sub
mov
enter
lret
stos
mov
mov
add
cltd
xchg
stc
mov
lods
adc
cli
es
xor
jb
push
call
aam
xor
or
movb
das
fiadds
xor
js
pop
testl
fadds
jecxz
cwtl
jno
cwtl
popl
gs
or
and
mov
repz
outsl
stos
loope
sbb
ljmp
jge
leave
and
push
lahf
or
sub
cmp
mov
aad
out
push
mov
pop
xor
sub
faddl
or
sbb
jg
insl
mov
ja
outsl
pop
mov
inc
in
xor
lock
xor
pop
inc
int
in
push
out
jmp
and
das
pop
mov
out
mov
je
inc
jo
test
cmp
das
inc
mov
pop
movsb
popf
popf
sub
lock
rorl
push
gs
aaa
mov
hlt
insb
fsubrl
addr16
mov
lock
hlt
pop
fisubrl
xor
lea
ret
mov
inc
fisubl
jnp
cmpl
clc
lret
add
and
push
inc
xor
mov
mov
and
out
and
test
adcl
cmp
jp
fdivs
xchg
pop
mov
xchg
pop
test
xchg
or
jmp
pusha
adc
jmp
mov
add
pop
or
outsb
lock
pop
sarb
out
inc
cld
jmp
cmpb
test
add
aaa
ja
mov
cld
lret
in
or
xor
and
call
iret
cli
aad
pop
out
inc
push
xor
sbb
dec
sbb
lock
fbstp
cmp
jmp
aas
jo
cmp
mov
cmp
scas
or
inc
loopne
jmp
mov
dec
sub
cmp
mov
inc
sub
das
cwtl
scas
jl
fsubr
mov
and
push
decb
mov
jns
cmpl
ficomps
test
cmp
sti
test
pop
xor
js
outsl
fdivl
or
loope
aas
lahf
and
mov
enter
mov
pushf
push
jge
dec
jmp
or
mov
mov
pop
push
pusha
pop
pop
test
xchg
add
push
sub
std
jae
in
imul
fwait
ljmp
lret
jno
or
mov
xor
fs
cltd
jb
out
adc
cmpsb
mov
flds
pop
mov
dec
adc
push
repnz
add
inc
rorb
jne
outsl
into
push
in
mov
in
xchg
mov
add
je
push
lret
std
hlt
in
rolb
roll
sub
ljmp
sbb
and
fadd
into
mov
lock
sub
gs
lret
sbb
xor
fdivl
std
int
pop
sub
outsb
addr16
jbe
pop
push
pusha
mov
pop
cli
shrb
divps
test
cmp
jo
adc
adc
xor
movsl
cmp
ljmp
xor
aas
lea
fwait
stc
sbb
mov
or
jo
pop
ret
enter
test
cmc
out
daa
stos
jae
popf
ret
mov
cmc
jmp
lds
and
cmpsl
in
cmpsl
cwtl
rol
push
push
xor
xchg
daa
fistps
aaa
popl
dec
iret
dec
sub
stc
sahf
mov
pop
loop
inc
imul
pop
xchg
dec
mov
and
xchg
mov
out
push
mov
faddl
leave
cmpsb
sub
js
sti
fcoml
dec
aad
push
xchg
div
subb
mov
or
and
mov
int3
pop
xor
push
cmovb
jp
cmp
push
cwtl
xchg
and
out
push
adc
add
enter
mov
aaa
insb
lret
daa
dec
pop
adcl
add
jae
jns
jle
and
sbb
lods
lret
data16
popf
lods
test
inc
mov
sbb
add
add
sub
sbb
cmp
fisubs
push
cld
out
lods
int
test
insb
test
jnp
data16
lea
push
xchg
hlt
jle
ret
inc
into
imull
cltd
mov
sbb
cmpsl
into
dec
lea
cltd
ljmp
sti
out
cmpsl
call
or
or
mov
jecxz
lcall
mov
lds
lcall
scas
daa
and
pop
in
push
data16
inc
fisubl
movsb
xor
sarb
test
test
pop
adc
repz
and
add
xchg
mov
call
out
popa
fdivs
inc
cld
fcoml
mov
aas
aam
or
js
cmc
shll
imul
js
imul
daa
and
mov
pop
cmc
lret
aaa
push
sbb
enter
lods
xchg
adc
xor
imul
ja
jecxz
mov
cwtl
sarl
in
xchg
add
into
xchg
pop
in
fsub
pop
xlat
jne
icebp
jg
xor
cmp
mov
pop
fadds
jne
cmp
sub
cmpsl
sub
pop
xchg
data16
les
test
adcl
shlb
lock
xor
outsl
loope
xchg
sarl
lahf
mov
sahf
mov
addr16
adc
pusha
adc
outsl
jno
mov
adc
or
ret
in
and
mov
xchg
insl
or
rclb
or
adc
pusha
cmp
popa
jo
cld
mov
mov
dec
xor
fstps
popa
cmp
clc
jg
packuswb
out
scas
jg
stos
cmp
and
rorl
cmpsb
jb
jmp
lret
cmpb
mov
movsl
mov
or
xor
in
loope
les
ret
xor
in
das
cmp
loop
test
sub
loope
pushf
push
add
mov
and
stos
cltd
out
cli
adc
mov
lds
idivb
push
mov
jns
mov
xor
int3
xor
gs
cmp
xchg
jle
sub
xchg
sub
cmp
and
daa
out
mov
or
and
xchg
jbe
xchg
push
inc
das
xchg
cmp
xchg
repnz
mov
jmp
aam
xchg
adc
arpl
rcr
add
dec
loopne
ret
push
fadds
mov
mov
jbe
dec
pop
subl
xchg
add
icebp
cmpl
fidivs
sbb
add
cmpsb
loope
mov
pop
les
sub
into
pop
cmp
mov
sbb
clc
mov
jne
icebp
pop
mov
cmp
aam
shr
xchg
xor
loope
jns
loopne
outsb
ljmp
pop
xor
ret
sub
pop
adc
in
dec
loope
or
and
push
fdivl
mov
outsb
jle
push
jae
in
sbb
repz
xchg
lods
in
lret
xchg
stos
outsl
sahf
insl
inc
call
gs
xchg
in
pop
mov
test
ret
test
fisttpl
push
dec
inc
subl
popw
inc
fstps
mov
repz
sub
mov
cmpsb
insb
jmp
mov
cmovae
push
xor
aad
sub
mov
xor
test
jge
pushf
cmp
add
xor
sub
lods
jge
cmp
mov
leave
insb
push
mov
push
fsts
sbb
push
outsb
mov
lock
push
xlat
out
cmc
sbb
rolb
das
pop
popf
add
and
in
movsl
scas
pop
add
cld
loop
out
dec
dec
jg
jnp
cmp
popa
sahf
mov
push
insl
jne
cmp
inc
lahf
out
popf
push
std
add
sbb
hlt
in
fnstenv
fdiv
xchg
mov
fimuls
pushf
bound
jmp
mov
pop
in
or
dec
push
das
dec
sub
inc
mov
fldl
jnp
imul
lea
xorb
add
mov
outsb
cmp
lret
or
and
shrb
sbb
jp
inc
cmp
mov
mov
dec
mov
rcl
shll
add
jns
and
mulb
jb
jb
xchg
mov
lods
mov
pop
sub
fdivrl
shr
js
mov
pop
leave
or
pop
sbb
in
xchg
mov
add
stos
leave
out
mov
in
jo
lods
pop
aaa
popf
push
jp
enter
dec
adc
addr16
aam
push
mov
pushf
iret
mov
inc
pop
mov
add
pop
xorl
fstl
sub
jo
push
jmp
push
loop
sahf
jo
rcll
daa
fwait
shrl
push
adc
loop
xchg
arpl
push
cmp
jmp
imul
and
jo,pt
pushf
push
lret
jne
xchg
or
fistpll
stc
lods
push
fcom
data16
mov
mov
fcoml
push
dec
push
fistpll
jae
mov
je
pusha
xchg
add
jge
jns
aad
lahf
pop
or
fst
jp
mov
xor
pop
daa
pushf
mov
fsubs
push
idivb
aad
mov
mov
movsb
xor
jo
dec
jns
stos
xlat
cmp
jae
or
cltd
js
shlb
xor
nop
jae
je
repz
xor
ffreep
repz
push
mov
addr16
lods
in
pop
xchg
adc
fnstcw
add
testl
mov
sbb
and
or
adc
xor
test
xor
sub
or
in
sub
cmp
add
adc
and
sub
add
ret
pop
inc
out
jmp
ja
mov
das
loop
adc
xchg
outsb
arpl
cmc
int3
sbb
clc
mov
lds
out
xlat
int3
ljmp
xor
nop
mov
adc
sub
orl
pop
rcrb
jle
mov
scas
ret
push
iret
xchg
jb
loope
ficoms
das
and
dec
xlat
clc
xrelease
add
cmp
xor
rcr
mov
repnz
add
push
cs
mul
xor
push
sub
stos
mov
and
dec
dec
repnz
mov
std
sub
push
cmp
mov
jge
pop
aad
mov
lods
mov
xchg
repnz
imul
xor
xchg
fwait
ds
pop
lods
lock
and
in
leave
or
adc
mov
in
shr
adc
push
out
add
xchg
xchg
pusha
notb
nop
pop
cld
push
out
mov
lock
out
sbb
dec
movsl
sbb
push
adc
adc
out
xchg
aas
sbb
xchg
cmpsb
dec
cs
adc
mov
stos
gs
arpl
mov
ret
dec
fldl
mov
clc
dec
lcall
lods
inc
pop
add
ret
mov
into
jae
mov
cmpsb
pop
pop
shlb
dec
adc
mov
fwait
rolb
lods
in
test
sub
push
inc
pop
sub
and
hlt
imul
and
idiv
dec
out
repnz
mov
iret
sub
cmp
sahf
xlat
test
sub
test
dec
bound
fs
push
insl
mov
and
pop
bound
jno
xchg
add
dec
in
mov
fcmovu
pop
inc
lret
int3
in
pusha
xor
or
mov
js
shrl
jle
mov
and
mov
jae
popa
out
mov
jmp
iret
ret
in
ljmp
inc
ljmp
rol
fstpt
lcall
jno
inc
fwait
add
mov
cmp
mov
out
push
sti
stos
cmc
out
scas
xchg
inc
fstl
mov
insb
pop
pop
pop
cs
mov
addb
pop
mov
sahf
scas
iret
fcmovbe
std
into
mov
cld
popa
dec
mov
sbb
int
pop
loope
dec
stc
mov
inc
insl
cmp
add
xchg
icebp
decb
cmp
mov
ljmp
push
or
mov
mov
movsb
dec
or
push
insb
jle
mov
dec
enter
fdivr
xchg
sub
es
dec
lods
and
jns
out
mov
mov
xchg
int
adc
mov
xchg
jae
imul
fs
call
jo
cwtl
test
pop
repz
push
mov
adc
pop
insl
les
jle
push
jp
ja
cmpsl
lea
pop
xchg
adc
fisubrl
pop
sbb
ficoms
clc
add
repnz
ficomps
mul
inc
stc
mov
call
lods
imul
cli
out
pop
cmpsl
dec
into
fwait
clc
fs
popa
jbe
shlb
inc
adcl
in
addr16
cmc
stos
sub
aaa
rorb
dec
out
sub
push
cmp
in
xchg
popa
cmp
loope
sbb
sti
std
mov
dec
pop
js
outsl
bound
lods
mov
arpl
fucomi
in
or
or
cmpsl
lds
aam
pop
cs
or
ret
add
xchg
fstpl
push
mov
popa
icebp
aam
shll
les
xor
mov
mov
in
enter
push
push
inc
sbbb
xor
iret
int3
mov
test
or
daa
enter
roll
outsl
pop
stos
cs
rcll
iret
cmpsb
fistl
push
pop
xlat
filds
adc
add
xchg
ja
mov
out
or
scas
mov
push
mov
in
pop
xchg
jl
addr16
mov
mov
shrl
xchg
sub
rolb
bound
push
shrl
mov
pop
repz
fnstsw
lock
adc
test
sub
xchg
lret
push
push
and
inc
sahf
xor
cmp
cli
cmc
xchg
test
fmuls
aaa
mov
adc
lock
mulb
lods
jecxz
lock
rcrl
arpl
pop
lret
inc
enter
fwait
je
sarl
fsubs
lcall
andb
scas
xchg
xor
cmp
jb
ret
push
rcl
movsb
std
cmc
push
push
negl
rorl
roll
bound
stc
cs
ret
add
test
cmc
pop
cmp
popf
addl
dec
xchg
push
out
adc
lcall
test
loope
js
stos
mov
and
in
stc
aad
mov
rorl
pop
repnz
leave
mov
in
fcoms
cltd
lods
push
mov
call
scas
and
mov
xor
lahf
sub
mov
out
add
or
sbb
lcall
ljmp
out
movsb
add
sti
outsl
cli
cmc
jge
xchg
dec
je
lahf
pop
sub
inc
dec
jnp
and
mov
jne
js
sub
inc
clc
jnp
mov
add
pop
mov
push
loop,pt
sub
pop
add
inc
movl
pushf
loopne
cmpsl
fldl
or
in
loope
cltd
xchg
pop
jp
sub
sub
btsl
mov
dec
out
xchg
sbb
sub
mov
jne
push
sarl
std
pushf
push
xlat
cmpsl
daa
pandn
movsb
popf
je
adc
je
icebp
stc
push
mov
push
pusha
cmp
mov
adc
pushw
into
lds
popf
mov
sub
push
and
lret
test
inc
mov
mov
jno
mov
fidivs
aas
cmp
jnp
mov
cmpsl
cld
jmp
aaa
xlat
les
addr16
dec
pop
xchg
icebp
mov
mov
cmp
or
stc
shlb
out
shufps
dec
repz
scas
loop
mov
add
mov
loop
dec
xor
outsb
add
inc
push
add
and
cmpsl
lds
pop
push
pop
mov
ret
out
dec
pop
add
pop
testb
orl
mov
xchg
repnz
lock
sbb
cwtl
cmp
cld
aaa
sbb
adc
in
out
negb
push
xchg
push
stos
adc
arpl
jbe
jno
add
es
mov
test
mov
ret
sub
inc
mov
js
sbb
sbb
mov
mov
xchg
inc
adc
icebp
call
insl
movsl
mov
sbb
xor
xchg
push
fisubs
dec
insb
jmp
add
ret
into
jmp
in
retw
sbb
ret
int
jmp
inc
adc
stc
sbbl
jmp
sbb
lret
sbb
lret
push
xor
push
mov
and
pop
jle
icebp
imul
mov
iret
popa
enter
popa
insl
push
xchg
std
mov
push
mov
js
out
rcr
inc
in
insb
subb
scas
pusha
or
rolb
js
mov
add
jne
out
cld
lahf
and
cmc
fcoml
shll
stos
pusha
cli
mov
mov
ss
repz
loopne
dec
jae
movsb
stos
shll
sbb
add
jno
outsb
adc
cmpl
and
scas
scas
imul
inc
adc
mov
scas
ret
arpl
imul
mov
xchg
and
or
jmp
lret
outsl
rclb
test
jle
sbb
push
xor
sbbb
pusha
test
push
mov
in
or
imul
loope
adc
fisubrl
jo
cmc
or
loop
mov
adc
movsb
out
mov
stos
mov
fiadds
pop
mov
push
mov
and
iret
adc
sahf
pop
mov
enter
mov
in
or
xchg
leave
mov
lods
sbb
pushf
cmc
sub
cmp
das
bswap
jl
pop
mov
repnz
cltd
dec
addr16
outsl
cmp
shlb
jae
push
pushl
dec
test
jno
cltd
dec
pop
sub
push
lret
pop
sahf
add
mov
xchg
and
cmp
inc
dec
pusha
shl
mov
aad
dec
xchg
adc
dec
or
inc
cmp
cmpsb
data16
jne
xchg
push
leave
aas
call
leave
push
pushf
jb
scas
xlat
mulb
inc
mov
cmp
in
push
call
daa
or
dec
jae
push
push
je
pop
in
mov
rolb
mov
push
orb
jb
and
call
xchg
xor
sub
mov
inc
mov
bound
daa
xchg
inc
in
loopne
mov
and
test
jmp
push
pop
int
imul
add
jb
sbb
leave
add
adcl
clc
bound
xor
mov
int
movsb
in
mov
cltd
xor
mov
push
out
and
jbe
jo
negb
xor
mov
and
push
push
adc
xchg
xor
imul
xchg
xchg
fisubrs
repz
jle
jmp
inc
dec
jbe
or
jb
jp
push
cmpsb
dec
dec
mov
std
push
arpl
jecxz
and
cmp
insl
xchg
add
shl
loop
rcrb
shl
ss
dec
scas
adc
sub
cmp
mov
emms
sbb
sub
adc
call
jb
add
pop
loop
pushf
cmp
out
fisttpl
ret
stc
sbb
fisttps
or
push
jmp
inc
cmp
push
cmp
mov
jb
dec
call
addr16
clc
push
in
xchg
or
and
or
test
xchg
int3
call
in
notl
pushl
cmp
add
std
fstl
push
bound
push
bound
faddl
mov
or
mov
das
xchg
movsb
popf
repnz
mov
dec
cwtl
shl
ljmp
cmp
sub
lcall
in
idivb
and
sbb
mov
push
fsubrs
cmp
sbb
jno
ret
jmp
out
push
sub
xor
and
xor
je
cmp
outsb
sti
mov
stos
sub
shrl
mov
repnz
ret
xchg
sarb
leave
mov
sahf
pop
movsb
call
adc
sub
adc
mov
aaa
add
pop
or
cmpb
dec
mov
gs
lcall
movsl
fdivl
cs
or
xor
pop
test
inc
adc
daa
js
cwtl
fidivrs
sub
xor
sti
push
out
leave
sub
ret
or
mov
pop
rep
jmp
or
add
mov
mov
in
loopne
repz
mov
loopne
mov
add
lea
stos
and
das
lret
mov
stos
adc
inc
push
andb
mul
out
jae
shll
jno
pop
inc
xor
inc
push
inc
cmc
sub
and
jl
das
pushl
mov
cltd
je
aad
aam
fisttps
cmpsb
mov
subl
ss
pop
jge
xchg
cmp
push
cmpsb
mov
ret
and
arpl
arpl
pop
adc
jnp
mov
xor
scas
bswap
push
pushl
sbb
pop
aam
cmpsl
stos
in
and
cld
add
jo
mov
mov
iret
flds
mov
ret
pop
jle
push
int3
dec
inc
fldln2
imul
mov
xchg
pushf
outsl
or
xchg
or
mov
fbstp
xchg
and
imul
test
push
cmp
lea
inc
out
cmp
out
stos
sbb
push
cmc
inc
mov
add
sarb
das
aam
cs
xor
adc
filds
les
clc
jge
cmpsb
pusha
aam
mov
pop
sub
movsb
jae
outsl
xor
and
pop
orb
negl
or
jae
xchg
mull
rorb
push
jb
cltd
inc
push
xchg
in
mov
sub
test
inc
hlt
pop
adc
lret
pop
imul
jmp
dec
mov
mov
dec
pop
rorl
push
and
cmpsb
inc
or
push
into
sti
nop
inc
jecxz
jno
bound
push
cmp
stc
cs
add
ret
mov
push
inc
dec
repnz
sar
gs
lods
cmpsl
push
xchg
test
cmp
fwait
push
call
mov
icebp
lods
ret
xchg
push
pop
aas
mov
mov
lret
and
sbb
outsb
loopne
insl
fdivrs
pop
cmp
test
jp
sbb
jae
jge
pop
jns
out
and
pop
in
cli
lret
aam
inc
in
push
jp
iret
ficoms
xor
mov
or
mov
push
lret
jmp
or
jnp
xor
push
imul
or
ret
jg
outsb
push
dec
pusha
icebp
or
cld
jne
clc
test
into
ret
or
int
sbb
mov
int
lods
dec
repnz
pop
fs
hlt
add
pop
inc
fstpl
jne
xchg
cmpsl
int3
xchg
int3
leave
sti
lea
jns
or
outsl
fidivrl
mov
lods
enter
jb
and
mov
mov
aam
mov
outsb
mov
add
and
sub
cmp
dec
mov
mov
and
fsub
out
and
cwtl
cld
sub
fdivr
fdivs
lcall
jecxz
in
push
push
xor
icebp
adc
popa
fbld
push
jns
divl
add
add
pushl
sub
lds
les
inc
js
mov
and
mov
test
cmp
inc
scas
cwtl
movsb
or
xchg
xor
cmpsb
mov
or
aam
cld
jns
dec
imul
sbb
shr
and
mov
adc
push
test
pop
inc
cwtl
dec
cltd
sub
testl
mov
fsts
mov
cmp
inc
mov
inc
jle
shll
jg
mov
mov
outsl
mov
ror
xor
lock
or
xchg
cmc
inc
add
xchg
or
pop
enter
cmpsl
xor
dec
push
stc
out
movsl
aad
lods
movl
movsl
mov
dec
es
and
and
mov
mov
fucomi
add
lods
loop
or
mov
or
rorb
fsubp
hlt
into
mov
mov
push
lret
call
dec
cmp
nop
xor
push
loopne
sahf
into
aaa
pusha
nop
loope
stc
ljmp
sahf
fwait
xchg
insl
pop
out
ret
iret
jmp
jne
bound
repz
or
cli
jp
adc
and
leave
jmp
push
fs
aad
add
pushf
and
lcall
mov
test
pop
ret
lret
popa
jno
jmp
push
fisttps
add
or
in
jp
cmp
or
es
adc
cmpsl
ja
and
jge
add
mov
push
outsl
aas
push
sbb
pop
sub
scas
cmc
and
mov
popf
jl
inc
inc
pop
fsubr
mov
dec
loop
stos
mov
sbb
jge
cmp
xor
rol
pop
lcall
andl
mov
mov
pop
das
int3
inc
xchg
cltd
xchg
testl
repnz
notb
inc
xchg
es
xchg
aas
movsl
bound
loope
lds
xchg
dec
push
sbbl
mov
fcos
in
and
sub
jae
xchg
ret
adc
cli
iret
ret
daa
ja
add
fsts
sbb
jns
stos
lcall
fdivrl
mov
inc
dec
push
lea
and
ss
in
push
out
mov
pop
cmp
adc
cli
stos
fdivrl
push
jl
cmp
lret
fimull
imul
inc
mov
std
mov
icebp
xchg
mov
jb
add
ss
idivb
mov
lret
cs
add
push
jne
cmp
aaa
inc
les
pop
add
loope
pop
ds
mov
add
lcall
mov
cltd
lods
xlat
fnstenv
roll
add
lock
pop
aas
mov
jle
outsb
lds
ret
adc
push
xor
lock
push
cmp
fdivrl
add
sbb
cmp
dec
cmp
cmpsb
je
xchg
sub
jge
and
push
jns
jecxz
jl
add
cmpb
pusha
movsl
fsubl
vpmacsdqh
stc
insl
cmp
add
ror
mov
cmpsb
adcw
paddd
test
sbb
ds
or
test
pop
or
xchg
sbb
pop
add
scas
lcall
andl
pushl
test
or
mov
push
adc
xor
jnp
movsb
ds
pop
jns
shr
push
into
lods
imull
int
jle
inc
sub
and
add
stc
cmp
outsl
mov
sub
out
cld
movsl
jne
popa
ljmp
push
push
sarb
sub
dec
push
enter
pusha
sets
in
mov
mov
inc
imulb
call
inc
orb
xor
iret
movsl
and
sbbb
pop
sti
lcall
cmpsb
aas
sub
mov
sub
dec
in
adc
jmp
out
dec
xor
pop
mov
ficomps
daa
cltd
mov
test
lret
mov
mov
adc
xchg
xchg
jle
sbb
jo
inc
rcrb
movsb
pop
xchg
scas
je
and
inc
jp
push
xor
ret
decl
lahf
fistps
adc
and
ret
inc
outsl
adc
jp
xor
ljmp
mov
xor
ds
jmp
aam
dec
add
pushw
inc
sub
and
ja
int
loope
repz
jp
push
ja
rcrl
push
lds
fiaddl
pushf
mov
adc
cmc
and
and
sbb
in
jbe
cmp
lock
shlb
xchg
sub
jle
lods
and
adc
lgs
imul
dec
shll
in
in
fsubp
test
mov
push
dec
mov
jno
xor
add
out
mov
cwtl
fcmovb
sub
xchg
cmp
cmpb
lods
subb
loopne
adcl
jnp
les
dec
xchg
pop
je
out
or
pop
mov
sbb
mov
sarl
mov
pop
adcb
jl
insb
hlt
jl
dec
xor
cmp
jne
adc
aaa
cmp
xor
xchg
cli
inc
cmp
stc
pop
cmp
add
stos
int
mov
jo,pt
mov
dec
jo
int3
dec
idivl
test
andl
cmc
fwait
dec
cmpsb
mov
aad
scas
sarl
adc
mulb
mov
in
js
mov
fstpt
mov
sub
jnp
addr16
jmp
or
ljmp
in
stos
leave
sub
lock
pusha
jne
mov
mov
insb
outsl
fbld
daa
shll
jl
pop
inc
xchg
clc
movsb
push
push
subl
xor
in
push
sub
addr16
xchg
inc
aaa
mov
clc
or
stc
mov
out
nop
aad
adc
lds
js
insl
add
dec
xor
inc
ret
stos
popf
int3
push
fstps
sarb
jae
sbb
stos
add
fs
sub
icebp
adc
cmp
imul
xchg
lds
lods
xchg
cmp
inc
jbe
int
lods
js
out
xchg
lds
mov
xchg
mov
iret
fistps
insl
cmpsl
jb
psubd
movsl
je
xlat
in
mov
mov
fbld
in
cmpsl
out
fsubr
lcall
xor
repnz
or
test
es
movlps
int
popa
xchg
out
sbb
cmc
loope
mov
pop
inc
dec
hlt
pop
out
pop
lea
and
pusha
and
cmp
mov
es
mov
jo
mov
push
cs
pop
push
imul
pop
jg
fsts
sti
orl
pop
mov
out
shrb
insl
jbe
push
shlb
out
inc
mov
imul
test
mov
dec
repnz
inc
mov
mov
xchg
aad
fwait
mov
push
sbb
jg
les
jle
fistl
out
mov
inc
or
rclb
push
int
cltd
push
jl
mov
push
mov
mov
inc
rcrb
push
inc
sbb
mov
stos
adc
sbb
mov
xor
jmp
xlat
jnp
mov
and
xlat
or
push
test
cmpsl
add
adc
mov
xor
mov
test
ljmp
jge
rcr
out
loopne
rcr
push
jo
jge
pushf
sub
imul
cmp
xorl
xor
add
or
je
aas
dec
dec
jl
lds
cmp
pand
insb
lret
pop
out
ja
lahf
mov
mov
lds
mov
jb
mov
fsubrl
je
add
call
pushl
sub
add
aaa
leave
int
popa
push
mov
in
xchg
xchg
and
mov
lret
push
in
loopne
cmp
dec
gs
mov
fcmove
dec
adc
jb,pn
pop
xor
push
sti
pop
loopne
push
jnp
add
cwtl
mov
push
rolb
jb
adc
faddl
mov
add
mov
aaa
push
sti
call
xor
push
bnd
jmp
mov
ljmp
push
push
cwtl
sbb
cmp
cmovle
mov
xor
xor
cli
and
sub
scas
cli
cmp
mov
out
cmp
hlt
je
push
push
ss
mov
jge
es
int
imul
inc
jg
xchg
popa
lret
aaa
fists
outsl
mov
ss
lahf
pushf
jecxz
xchg
or
bound
repnz
xorb
rclb
hlt
in
int
mov
lret
aas
jge
cmp
mov
imul
and
jle
mov
or
into
xor
cld
lcall
dec
or
add
fcmovne
lods
in
mov
jnp
fs
jo
or
push
jle
inc
or
andl
ds
fistps
sub
rol
cmp
nop
cltd
and
iret
and
daa
shrl
iret
js
lods
push
mov
push
out
add
cmpb
and
loop
in
jmp
ljmp
mov
or
loop
mov
mov
mov
add
mov
dec
out
xlat
pop
aaa
mov
in
push
out
pushl
test
adcl
inc
sub
pushf
push
das
leave
pop
sbb
lock
cmp
fildll
mov
push
xor
xchg
pop
outsw
dec
mov
rclb
loope
or
leave
lret
shll
mov
or
mov
popf
mov
and
gs
fdivs
repz
adc
xor
test
sbb
clc
push
lret
clc
dec
mov
shll
arpl
das
pushf
fiaddl
fwait
xchg
icebp
jecxz
decb
push
xchg
and
xchg
aam
std
pusha
lods
mov
inc
fstl
jle
rol
rcrl
shlb
mov
mov
ljmp
aad
sub
mov
fs
outsl
mov
adc
push
sbb
or
xchg
addr16
repnz
daa
or
jne
out
aas
repz
dec
mov
out
aam
insl
sarl
leave
mov
xchg
out
mov
or
xchg
push
xchg
xchg
arpl
xchg
xchg
jge
mov
sbb
mov
insl
pop
and
cmp
cmp
std
repz
sahf
sub
sbb
gs
and
inc
repz
xchg
xchg
repz
pop
outsb
push
test
hlt
mov
mov
xlat
xlat
cmp
sahf
jb
xchg
add
cmpsl
sbb
fucom
xor
mov
cltd
leave
xor
jno
pop
in
mov
repz
or
and
jl
cwtl
mov
sub
jnp
mov
mov
dec
sbb
jl
neg
out
arpl
adc
sub
ss
mov
lods
mov
data16
xchg
cmp
std
push
xchg
sbb
in
add
ss
arpl
sub
lret
jp
lret
test
and
sub
aaa
sbb
pop
hlt
in
xchg
testl
dec
and
mov
xor
sbb
fisubl
aam
dec
xor
lret
rcrl
cmp
addr16
pop
pop
enter
xchg
or
xor
ret
xor
lret
sbb
ds
mov
cmp
push
into
shrb
mov
test
inc
sbb
cmp
cmp
xchg
mov
das
inc
movl
jno
aas
add
add
mov
in
stc
push
cwtl
jno
jne
adcb
stc
cli
sub
stc
push
add
push
xchg
cmc
push
sub
push
ss
add
in
insl
pop
ja
cltd
jmp
lahf
int3
ds
or
add
imulb
pop
fnsave
inc
daa
dec
gs
adc
stc
xor
stos
pop
cld
lods
loop
push
lods
out
mov
jp
inc
das
or
and
jbe
jb
cmpsb
dec
loope
pop
xchg
jecxz
pop
pop
pop
mov
pop
xorl
cmpsb
lret
in
jns
in
mov
into
sbb
aas
lds
jmp
es
ret
mov
test
pop
xor
xor
call
sub
cltd
push
lock
aaa
adc
mov
sub
inc
es
cmp
cmpl
call
mov
adc
stc
cli
sub
inc
sub
adc
add
ljmp
fwait
jae
pop
outsb
add
lods
xchg
mov
pushf
jae
dec
and
pop
xor
xor
add
fwait
jecxz
idivl
stos
and
repz
or
fildll
sbb
arpl
mov
jmp
andb
outsb
push
mov
lods
sub
inc
insb
inc
and
jecxz
inc
inc
das
test
lahf
inc
rcr
and
sub
sub
movsb
mov
cli
jbe
out
push
leave
call
push
mov
sarl
add
out
and
orb
push
inc
cmc
stos
testb
cmp
aas
pop
orb
pop
jmp
and
cmpsb
and
mov
cmp
push
popf
or
mov
push
jae
adc
push
sbb
dec
adc
add
sub
xor
popf
cli
and
inc
fistpll
lock
stos
cmp
orl
mov
xchg
outsl
fs
mov
sbbb
int3
rcl
cli
jle
dec
scas
cmp
push
or
cmpsl
hlt
xchg
lods
divb
lock
push
fs
push
dec
or
pop
cld
sahf
subb
push
jne
filds
out
enter
jmp
or
test
es
dec
push
stos
loope
subb
dec
stos
push
outsl
je
adc
mov
cwtl
mov
xchg
cmpsl
mov
fs
push
adc
push
rcll
out
das
fucomp
and
adc
ds
sbb
cli
lds
std
push
cmpb
rcll
add
or
pop
pop
repz
push
test
ds
cmp
cmp
arpl
dec
lock
sub
push
repz
shll
jne
jl
and
lods
push
dec
fimuls
sub
push
jmp
add
sub
insb
mov
dec
aaa
push
adc
jge
or
adc
pop
push
push
fcoml
cwtl
rcrb
loop
dec
pop
lock
fsubr
xrelease
sbb
mov
jbe
and
testb
or
jl
pop
cmp
mov
in
push
arpl
dec
fisubs
add
or
imul
pop
aad
mov
lods
lahf
adc
add
dec
lahf
shl
mov
outsb
push
jno
jp
add
add
ljmp
aad
mov
cmp
int
cli
fsub
test
xlat
stc
mov
fsubs
clc
push
fidivl
sbb
repnz
and
xchg
scas
repz
inc
mov
lret
pop
sbb
aam
je
test
int
sbb
push
fdivrs
add
lods
bound
gs
jge
test
push
push
outsl
outsb
jo
and
cmp
daa
fistpll
sbb
iret
movsb
imul
repnz
jno
insl
insb
in
cltd
notl
test
mov
pop
sti
inc
adc
sarl
xchg
ret
cmp
push
pop
add
lret
daa
test
jge
lahf
xchg
push
aas
dec
clc
xchg
test
mov
jnp
pusha
mov
mov
mov
out
sti
xchg
notb
jnp
adc
ret
repz
pop
loope
add
jl
mov
stos
mov
push
dec
jnp
es
loope
out
xchg
ficomps
movsb
out
shl
pusha
xchg
and
cmp
xchg
jb
inc
mov
jg
lret
mov
inc
add
pop
add
sbb
mov
and
push
gs
xchg
xor
sbb
mov
push
cmp
push
jmp
mov
subb
sbb
frstor
pushaw
daa
mov
ds
jnp
lret
inc
cmp
lea
clc
lret
or
cwtl
adc
out
or
inc
insl
cmp
dec
test
std
iret
les
and
mov
mov
sub
jnp
or
les
and
movsl
and
fwait
add
push
and
cmp
xor
cmpb
pop
and
sub
push
mov
out
popl
test
mov
xchg
sub
rdmsr
icebp
pusha
sub
dec
stos
sub
mov
fwait
mov
xorl
mov
or
mov
jle
sbbb
jns
mov
fmuls
xor
mov
pop
int3
add
dec
adc
dec
push
mov
cmp
mov
lock
fstpl
adc
xchg
pop
jecxz
pop
je
jbe
adc
cmp
loope
dec
dec
fisubl
jl
adc
xchg
jns
insl
sahf
cmp
ds
data16
test
fdivs
adc
les
lods
and
adc
mov
bound
aam
lds
gs
mov
fbstp
ret
roll
push
cmovge
testl
aam
jle
push
mov
sub
push
xor
lcall
or
cmpsl
cmpsb
inc
shrb
sbb
lret
daa
insl
mov
adc
outsl
push
xchg
lcall
xlat
and
mov
jae
dec
add
repz
and
mov
or
dec
adc
shrl
adc
out
sub
lret
pop
or
xchg
jl
push
push
mov
push
mov
pop
ljmp
xor
add
add
or
mov
xor
adc
pop
imul
mov
movsl
sub
add
imul
sarb
fs
nop
test
sub
aad
insb
mov
repnz
mov
leave
mov
fldcw
aad
aaa
push
std
and
mov
jns
xor
in
addr16
std
stc
adc
mov
pop
mov
push
push
scas
ret
shlb
popf
xchg
push
insb
xor
xchg
dec
mov
sti
add
std
xchg
xchg
hlt
mov
aad
cmp
dec
leave
jge
mov
loopne
pop
add
cmp
jg
jmp
inc
ja
mov
lods
mov
adc
inc
les
rolb
insb
dec
mov
fwait
out
dec
jmp
les
movsb
loop
fwait
lret
or
cmp
mov
xchg
dec
stos
imul
popl
repnz
inc
es
cltd
mov
sbb
pop
std
fld
pop
fdivl
adc
jg
and
cld
cmp
lahf
idivb
xor
mov
push
adc
xor
xlat
push
ret
xlat
cmp
loop
push
sbb
sbb
subb
xor
lock
pop
in
push
pmuludq
ficompl
loop
in
jl
mov
les
dec
jmp
jno
add
xor
mov
mov
mov
pop
popa
sub
fwait
leave
pop
xchg
vpsubusw
lret
sub
push
cli
xor
out
rcll
mov
mov
cmp
cld
and
add
fsubrs
inc
scas
and
daa
push
outsb
aam
lods
xor
mov
ret
inc
into
stc
enter
dec
jle
popa
out
aas
inc
xlat
dec
push
lret
in
inc
ret
push
std
ljmp
les
cli
gs
sbb
cmpsl
sub
in
test
cmpl
xor
cli
cmpsb
fcoms
mov
mov
pop
jp
xchg
movsl
ds
sbb
fdivrl
push
xchg
xchg
in
and
mov
xchg
mov
jge
mov
cli
dec
jb
xor
movsl
mov
ljmp
addr16
je
sub
outsl
add
jl
outsl
dec
filds
jb
push
pop
jnp
adc
cli
aas
sbb
sbb
dec
cmp
sbb
add
lret
test
sbbb
sahf
push
xor
out
popf
mov
or
hlt
xor
xchg
dec
and
call
mov
pusha
sub
int
lock
sbb
ficoms
cmp
scas
lret
jae
dec
sub
jle
hlt
xchg
cltd
mov
push
add
pop
hlt
je
fildl
push
jae
and
cwtl
inc
fistps
adc
sbb
dec
sbb
addr16
mov
xor
inc
adc
dec
repnz
sbb
xorb
sbb
lods
dec
cld
ds
roll
shll
xor
imul
inc
jns
cmpsl
ss
enter
cmp
and
dec
push
pop
sbb
inc
hlt
inc
cmp
bound
les
jp
lock
clc
xchg
arpl
inc
xor
push
fisttpll
ds
xor
dec
out
xor
jae
jne
adc
and
in
bound
fldcw
test
dec
enter
aam
adc
sbb
push
scas
pop
test
push
loop
adcl
cwtl
bound
das
ret
mov
cmp
pop
mov
je
ja
aas
push
push
clc
lods
dec
faddl
and
mov
mov
xchg
add
and
xchg
adc
lahf
adc
cmc
leave
lret
xlat
push
pushf
mov
scas
pop
fidivrl
outsb
lods
iret
outsl
dec
scas
aas
xor
and
popa
cmpsl
mov
lock
and
pop
imul
dec
aad
xor
pavgb
cmc
cltd
adc
mov
mov
sahf
pop
jnp
into
shll
cmpsl
add
outsb
shl
jle
jbe
data16
cmp
shrb
and
into
adc
mov
faddl
adcl
mov
inc
or
add
cltd
sbb
shll
aam
add
lcall
mov
shlb
sub
inc
xor
mov
lcall
or
mov
cvtps2pd
mov
xchg
aaa
enter
outsl
rcll
or
xchg
xchg
popa
jp
cmpsb
mov
adc
dec
popf
mov
push
in
and
addr16
sub
mov
ror
mov
into
add
pop
pop
xchg
xor
leave
daa
push
outsl
std
inc
pop
sbb
push
icebp
pushf
fisttps
xchg
test
out
out
xor
fiaddl
jmp
mov
fucomp
popa
jg
das
push
pusha
fld
push
mov
in
out
loop
notl
leave
call
int
xchg
lods
popf
fcmovu
adc
add
outsb
es
xchg
mov
sub
int
sbb
loop
scas
ljmp
xchg
mov
mov
jns
enter
andl
mov
out
mov
sbb
mov
jo
xchg
out
mov
xlat
jecxz
cmp
addb
test
push
adc
sti
out
xor
icebp
movsb
push
xor
push
mov
or
inc
pop
int
in
cli
pusha
fucomi
mov
sbb
lret
jmp
imul
rcr
and
cmp
rolb
cmp
cmpsb
dec
add
adc
pop
outsl
movsl
push
mov
pop
rol
or
dec
xlat
jle
mov
pop
fwait
leave
aaa
out
fsubrs
ss
xchg
addr16
movsb
test
xchg
ljmp
ret
inc
lock
subb
shlb
jge
xchg
rorl
push
and
clc
shlb
test
jecxz
shr
pop
adc
and
lcall
das
mov
xchg
mov
out
insl
xchg
je
pusha
add
adc
aam
pop
ss
les
add
add
call
xor
xor
js
dec
jne
mov
mov
loop
adc
in
or
push
inc
ja
fisttpl
pop
mov
sbb
test
cmpsl
shlb
jne
cmp
sub
iret
divl
imul
rorl
fistpll
xchg
fildl
div
std
jnp
sbb
mov
subl
push
and
loope
dec
lahf
mov
rcll
int3
jne
mov
inc
sbb
cli
leave
movsb
rep
mov
cmp
cmc
mov
mov
arpl
adc
cmp
lods
clc
cli
jg
mov
cmp
add
out
mov
outsl
aaa
cld
sbb
push
mov
loop
jo
mov
into
jg
dec
mov
inc
or
pop
nop
hlt
mov
andl
mov
push
mov
test
mov
lret
scas
out
cli
sbb
jns
daa
lahf
orl
sub
pop
sbb
sub
in
cmp
ret
sarb
mov
dec
push
ret
jle
cli
ret
dec
aad
in
in
les
sub
push
push
xor
dec
cli
call
into
jl
inc
inc
adc
mov
sub
and
out
pop
popa
rcr
mov
out
iret
inc
sub
xchg
push
mov
jle
mov
arpl
pop
jb
mov
mov
clc
testb
jge
dec
adc
push
add
or
out
jbe
or
sub
dec
nop
jp
push
aad
scas
cmp
scas
push
push
or
dec
lea
imul
stos
jl
sub
cmp
insb
subl
addr16
mov
push
in
adc
test
int
fidivl
inc
add
add
adc
rcrb
pop
adc
pop
xchg
popa
imul
int3
outsl
dec
pop
xchg
jle
cmp
mov
adc
pop
xor
repnz
repnz
leave
in
xchg
pop
pop
pop
sub
mov
mov
pop
shrb
es
xor
and
dec
and
xchg
jle
call
jge
dec
xor
dec
data16
push
fcoml
jge
push
pop
scas
in
jp
dec
xchg
aad
dec
or
movsb
out
mov
cmp
stc
lods
sub
push
mov
icebp
push
cmc
cmc
sti
add
insl
jmp
test
in
jnp
lahf
into
add
into
movsb
aam
lahf
lcall
aaa
mov
push
sbb
and
loopne
pusha
out
and
mov
imul
gs
movsl
shll
std
cli
push
pop
bound
adcl
adc
es
and
int
jmp
jb
mov
addb
sbb
add
mov
ds
stc
inc
fcomip
xchg
add
pop
clc
and
xchg
mov
mov
and
mov
cmp
adc
lret
addr16
ret
in
loop
insl
cmp
ret
jl
mov
cmp
mov
fstl
mov
into
ficompl
outsb
rolb
sahf
insb
mov
cmpsl
inc
jne
adc
or
sbb
xchg
xor
xchg
test
add
add
mov
mov
jmp
es
sbb
outsl
fisttpl
es
jecxz
fsubrs
mov
ja
cltd
ds
pop
out
mov
inc
jecxz
cmp
pop
pop
pop
jne
outsl
push
dec
push
jmp
pusha
daa
push
jmp
xchg
test
insb
mov
lret
push
ficompl
mov
push
jp
in
push
jb
icebp
ljmp
icebp
shrb
lcall
sbb
or
sbb
cmp
xchg
mov
insb
mov
lahf
aam
push
mov
inc
test
fcmovbe
jge
mov
push
cmp
sub
cmp
ss
fs
xlat
sub
inc
shrl
out
mov
push
jge
in
in
cmp
dec
xchg
testl
imul
cli
movb
mov
xchg
loopne
xchg
sbb
inc
dec
sub
cld
stos
sahf
mov
mov
addr16
in
in
or
dec
lret
lods
jno
inc
sarb
roll
movsl
pop
jle
clc
mov
std
shlb
test
mov
aaa
test
lods
insb
adc
daa
push
mov
jnp
popf
insl
push
mov
or
movb
inc
lcall
aas
iret
orl
pop
lea
ja
mov
pop
into
add
pop
jb
inc
mov
loop
mull
pop
into
out
dec
inc
test
imul
pop
sbb
aam
scas
mov
and
inc
mov
dec
stos
es
jne
xchg
mov
lcall
sbbb
push
scas
mov
jns
popa
xor
jne
xchg
pop
mulb
mov
sbb
cli
dec
add
cmp
repz
pop
lods
xchg
rcr
push
inc
push
pop
xor
jmp
jge
in
push
fildll
push
inc
dec
sahf
dec
in
inc
cwtl
fwait
gs
adc
sbb
add
loope
gs
dec
adc
test
movsl
jb
imul
je
lods
pop
or
push
mul
dec
imul
mov
testb
xor
dec
push
insb
cmp
data16
mov
aaa
in
popf
js
ret
loop
sahf
and
test
outsl
jecxz
mov
int
mov
mov
movb
cwtl
dec
aad
test
clc
jg
str
adc
adc
push
cmc
add
mov
mov
loop
ss
fnsave
jo
lods
aas
push
mov
cltd
jns
sub
xor
mov
xchg
sbb
mov
mov
push
add
mov
fs
mov
test
push
xor
mov
sub
mov
stos
shr
push
or
out
jnp
pop
scas
add
rolb
out
xchg
dec
in
in
mov
xchg
push
add
dec
gs
jp
test
mov
jnp
add
xchg
movsb
and
and
mov
adc
negb
jp
popa
ret
cmpsl
mov
pop
xor
sbbb
add
rcll
push
fidivs
pop
mov
in
pop
jbe
mov
and
mov
push
and
leave
inc
pop
sbb
cmpl
testb
add
fcmovnbe
xor
and
cld
mov
sbb
jecxz
inc
clc
outsb
xchg
push
lret
dec
rolb
xchg
jbe
dec
mov
jl
jmp
add
add
dec
mov
test
int3
push
lret
jnp
xchg
sar
lock
and
lock
or
cmp
in
mov
or
or
mov
cmpsb
pop
scas
mov
mov
jb
out
pop
jp
aaa
mov
testl
lea
or
ret
and
inc
mov
push
out
dec
pop
cmp
mov
loop
mov
into
call
and
push
aad
mov
dec
jmp
in
imul
push
fisubrs
cld
add
sub
mov
mov
mov
mov
scas
mov
jae
mov
or
sub
mov
sub
jno
xchg
icebp
pop
pop
mov
push
xchg
les
sbb
daa
imul
int
lods
adc
pop
pushf
nop
divl
roll
js
icebp
or
das
pop
pop
add
mov
outsl
lods
lods
add
imul
fstps
adc
add
fwait
dec
in
inc
ds
xor
pop
sti
push
fstpt
add
sbb
int3
jecxz
cmovb
shl
add
mov
xchg
in
js
rclb
rorb
mov
jb
xchg
xor
xchg
ret
call
cmp
ret
xorb
mov
mov
or
jae
mov
mov
testl
sbb
ja
data16
jle
cld
test
cmp
add
xchg
jno
cmc
jns
dec
stos
ret
push
shlb
insl
mov
imull
stc
xor
ret
stos
out
inc
pop
iret
lret
xchg
mov
int3
inc
mov
xor
lods
mov
das
sub
rol
leave
lretw
in
ret
lods
mov
dec
rcr
jo
in
inc
arpl
inc
push
adc
adc
out
in
int3
xchg
stc
outsb
fucom
popf
sbb
aam
jge
out
scas
adc
scas
jmp
jge
fadds
sbb
dec
leave
mov
add
jl
push
sbb
out
aaa
fldl
jp
mov
or
out
xor
aad
mov
test
and
jmp
cmp
inc
lahf
cli
pusha
pusha
adc
int3
cs
adc
push
inc
mov
pop
or
inc
lret
out
inc
sbb
fisttpll
mov
stos
pop
arpl
mov
mov
cmp
leave
in
mov
fildll
and
sub
pop
enter
jno
test
dec
jecxz
nop
sub
jg
orl
and
push
pop
dec
mov
in
xchg
imul
outsb
jecxz
test
andl
movsl
gs
xchg
scas
shl
out
sub
adc
cli
aaa
inc
leave
fadds
jo
loope
pop
dec
lret
scas
sub
stos
cmp
std
jl
or
pop
fbld
or
xchg
mov
in
fisubs
mov
pop
mov
mov
stc
mov
push
pusha
pop
sbb
mov
into
xchg
out
shrb
jno
xor
nop
mov
ret
pop
fisubs
into
adc
mov
popa
sub
pop
mov
mov
mov
cmp
imulb
pop
mov
and
scas
mov
mov
test
add
jnp
mov
rcrl
negb
mov
xor
dec
cmpsb
cmp
inc
shrl
pop
fldenv
jmp
push
fldcw
xchg
in
xor
mov
jne
mov
sti
leave
enter
sbb
adc
or
mov
sbb
std
jle
repz
sbb
popf
cmp
fbld
push
mov
sahf
inc
testb
fidivrs
add
lret
and
movl
sub
popf
mov
push
dec
sbb
nop
cli
dec
sub
pusha
xor
mov
sub
jbe
jns
cmp
cmp
sarl
sti
shlb
cmpsb
mov
mov
dec
gs
cmp
fdivs
aaa
mull
sbb
push
jmp
repz
or
cmp
cmp
mov
stos
es
or
in
inc
jb
mov
adc
mov
jnp
lahf
push
add
dec
inc
fdiv
pop
jnp
mov
clc
push
sbb
push
int
fisubs
int3
test
inc
sub
fld
ljmp
outsl
rorl
cmp
pop
pop
mov
out
add
lods
outsb
js
adc
int
roll
push
xchg
leave
cmpsl
sbb
mov
inc
orb
push
aam
pop
xor
mov
out
mov
test
pop
mov
jge
jno
or
scas
pop
iret
jmp
or
enter
dec
ljmp
sbb
pop
mov
add
leave
dec
mov
push
movsl
rorl
stos
mov
sar
cmp
pusha
les
jnp
xchg
mov
pop
add
enter
aam
and
int
inc
xchg
pushf
mov
jno
mov
call
sub
cmpsb
add
mov
pop
cmp
xchg
mov
cmp
cmc
mov
sub
dec
inc
lods
adc
inc
pop
dec
aas
sbb
jae
neg
in
dec
xorb
push
aad
pusha
test
pop
lock
ret
outsl
mov
mov
test
dec
cmc
mov
push
shl
in
cmp
outsl
rcl
dec
repnz
jecxz
adc
jecxz
xor
in
inc
aaa
jnp
xor
cmp
cmpsl
jle
test
mov
dec
scas
push
inc
jne
mov
push
sbb
shll
fwait
daa
pusha
sbb
adc
out
sub
sbb
lcall
mov
cmp
push
pop
insl
orb
push
add
mov
and
adc
cwtl
lcall
ret
lret
or
cmp
sbb
stos
jecxz
stc
stos
in
xor
fidivrl
jae
fadd
mul
fisttps
movsb
add
aam
outsl
push
cmp
test
xor
or
data16
cmpsl
push
lds
leave
jne
mull
adc
cmp
ret
push
mov
ret
jecxz
lret
rclb
pop
cmp
mov
adc
or
jle
sbb
dec
add
fdivs
push
or
mov
movsb
xchg
push
inc
fnsave
sub
mov
jg
pushf
shlb
inc
sbb
movsl
aad
std
insb
out
jle
cmp
imul
adcb
jo
xchg
repnz
sbb
and
dec
scas
inc
cmc
nop
shll
loop
xchg
and
push
into
dec
cmp
mov
enter
add
and
fbstp
data16
call
addr16
cltd
popf
jb
inc
jae
cltd
out
int
outsl
push
sub
and
rclb
cmpsl
push
lret
pop
fcoml
mov
push
imul
enter
or
test
cmpsl
push
lea
adc
shlb
cmp
cltd
pushf
pusha
cs
xchg
fs
in
lcall
push
push
jne
scas
xchg
mov
imul
fisubrl
jmp
push
mov
mov
sub
xor
jle
mov
test
out
xlat
fwait
int3
fisubs
out
fcomps
movsl
hlt
icebp
in
or
jmp
cmp
jmp
add
mov
ret
cmc
aad
iret
sahf
sbb
in
sbb
lcall
dec
outsl
xor
bound
cltd
xor
bnd
jo
mov
add
mov
xlat
sti
pop
fidivrs
push
pop
cld
loopne
rcrl
aas
or
fcmovu
loop
sub
jmp
pushf
sbb
sbb
cmpsl
sub
out
sti
sub
aaa
cmc
mov
sbb
loope
sub
push
mov
pop
fistpl
dec
dec
or
lahf
leave
dec
test
int3
cs
jmp
movsl
xchg
fnstcw
xchg
cmc
sub
mov
mov
xchg
pop
divb
imulb
push
jae
push
push
adc
jp
out
stos
aam
ret
aas
loope
mov
fistpll
hlt
sti
insl
xchg
xchg
lock
cmpsb
xlat
repz
cmp
jnp
sub
repz
push
in
pushf
mov
xchg
sbb
test
lret
flds
pusha
daa
jge
push
or
cmp
cs
shr
push
cmpl
lds
pop
sti
sbb
repnz
lret
insl
push
dec
push
icebp
aas
push
dec
bound
mov
leave
rcrl
adc
cmp
jne
inc
mov
and
shll
mov
mov
add
mov
pushl
fsubrs
mull
das
jnp
gs
xchg
cmp
int3
mov
sahf
inc
xor
repnz
inc
fstl
sub
sti
hlt
pop
sub
xchg
sbb
sahf
ljmp
push
scas
jns
sarl
lahf
or
rcll
mov
dec
fiaddl
add
jmp
and
jb
cmpb
clc
ss
outsb
or
and
in
sbb
pop
cmp
and
sub
sbbl
imul
pop
sbb
hlt
iret
lods
dec
addl
decl
sbb
outsb
dec
ss
xchg
dec
xor
dec
jae
aad
outsl
mov
push
mov
stos
es
mov
jl
sub
ret
in
adc
and
jbe
int
into
mov
xchg
fsubr
faddl
jb
gs
hlt
fcmovnbe
loop
jae
adc
xchg
sahf
sbb
sub
fs
mov
ret
jg
ss
insb
push
aas
repz
rclb
test
fsubl
fcompl
bound
dec
pop
rorl
mov
loope
mov
sub
rclb
fcomps
mov
int
cwtl
cltd
out
fsubr
sbb
xchg
push
stos
pop
jae
ficoml
or
pop
mov
repnz
sub
or
flds
out
sub
pop
push
movsb
mov
test
push
notb
jbe
pop
jp
push
scas
or
pop
xchg
add
push
lea
dec
hlt
bound
lea
add
mov
dec
cmp
xchg
mov
aad
aad
xor
popa
pop
adc
fsubr
push
repnz
fsubs
xchg
jno
loopne
mov
inc
mov
inc
mov
mov
pushf
movl
fdivr
insl
scas
outsl
lods
jle
and
add
xchg
and
dec
mull
jmp
xchg
sub
inc
adc
jo
sahf
jmp
jp
test
cmp
cmp
jnp
test
icebp
sbb
sbb
andl
adcb
pop
push
xchg
or
sbb
mov
orl
iret
cmp
leave
lret
sbb
pop
lea
mov
push
adc
xor
ja
jg
pop
and
stos
cmpsl
cmp
push
movsb
sub
insl
and
into
lds
int3
fdivrp
out
enter
push
outsb
mov
in
andb
xor
rcrb
mov
dec
js
dec
sbb
push
inc
add
mov
iret
cmp
out
xor
pop
push
test
push
push
or
scas
push
push
jns
sub
cmpsl
stos
push
dec
xchg
ss
mov
pop
sbb
jmp
lea
sub
xor
pop
fld
mov
stc
xchg
pop
jg
and
out
and
lods
xlat
sbb
and
shl
movsb
rcrb
adc
jo
jle
lahf
dec
inc
test
dec
arpl
jge
jnp
xchg
sub
dec
adc
mov
loopne
pop
jbe
addr16
xchg
scas
sub
or
push
dec
add
leave
stos
mov
lret
fnstenv
xor
jne
sbb
in
sbb
lods
icebp
add
add
fadd
addr16
cmp
cmc
or
mov
lods
push
mov
jle
jecxz
inc
xchg
pop
jne
lahf
addr16
mov
shlb
cmpsb
and
sbb
jnp
fsubrs
or
jmp
push
ja
ret
mov
scas
notl
sbb
daa
sbb
data16
fwait
cmp
cmp
stos
fadd
cmp
out
fisttpll
sahf
jo
push
mov
sbb
cmp
lods
mov
jmp
inc
sti
pushf
fisubs
rclb
cmc
mov
xor
lods
xor
xchg
xor
xchg
sbb
xor
stos
daa
popf
inc
pusha
das
mull
cmp
pop
mov
pop
dec
shr
mov
faddl
fstps
rclb
nop
inc
aaa
sbb
cmp
into
jp
outsl
decl
or
out
push
fwait
stc
push
stos
push
sbb
test
or
add
push
mov
mov
lods
xor
jmp
scas
add
pop
fucom
pop
into
pusha
xor
int
lds
push
lds
sub
mov
lea
jns
enter
inc
jns
das
sbb
lods
adc
sub
sub
sbb
mov
and
ss
mov
in
mov
cmp
enter
call
imull
aas
cmc
xchg
pop
push
mov
add
mov
inc
lods
hlt
mov
shl
push
or
push
and
clc
rcrl
fbld
adcl
dec
in
xlat
xchg
stos
mov
sbb
out
lods
ret
mov
or
and
gs
pop
cltd
jmp
inc
divl
add
mov
pop
or
jne
in
dec
sub
daa
pop
mov
cmc
jle
jne
out
sub
xchg
jp
inc
pop
mov
dec
ss
jmp
std
jne
and
cmc
add
xchg
pop
in
repz
push
popa
dec
push
xorl
sbb
pusha
push
scas
sub
xor
aaa
mov
lock
mov
rcl
add
aaa
sub
cli
leave
arpl
push
in
adc
adc
jp
popa
frstor
addr16
addr16
mov
aas
sub
lock
dec
xchg
enter
je
out
fisubs
push
pop
jmp
add
es
push
aas
dec
test
mov
push
mov
xor
pusha
mov
and
and
pop
cmp
adc
xchg
ja
push
mov
mov
push
jp
or
add
nop
inc
xchg
pusha
sub
loop
xchg
in
lret
stc
lds
inc
enter
xor
ficoms
insb
pushf
not
outsb
orl
out
mov
in
iret
aaa
aad
mov
dec
jae
dec
lock
sti
cmp
icebp
stos
dec
imul
test
sahf
jmp
std
fs
fistl
mov
cmp
sti
rcll
cmp
cmp
and
out
pop
adc
icebp
sar
arpl
xchg
cmp
cmp
cmp
mov
mov
xlat
in
pop
fldl
nop
fisubrl
icebp
int3
ret
jo
cli
xchg
lods
sub
mov
mov
jb
aam
pushf
mov
inc
mov
hlt
shrb
add
mov
frstor
adc
mov
dec
popa
loop
ret
dec
incl
mov
jg
addr16
std
mov
out
or
rcll
dec
int3
pop
xchg
xor
fldl
mov
xor
jle
xchg
jns
xor
cmp
arpl
dec
test
clc
gs
mov
add
push
mov
loope
push
std
mov
ljmp
je
mov
and
je
adc
cltd
xchg
push
inc
push
data16
xchg
ljmp
jmp
out
jge
jecxz
subl
xor
mov
scas
pushf
add
xchg
outsb
inc
push
adc
adc
mov
ret
mov
or
pushf
dec
mov
mov
outsb
mov
add
or
ret
ficoms
mov
jl
out
mov
stos
adc
xor
dec
jns
cld
lcall
repz
in
out
mov
push
mov
adc
and
fadds
call
ret
push
int
ljmp
loop
mov
out
cmpsb
xor
xchg
mov
xor
fistpl
into
xchg
lds
cmpl
push
mov
pushf
sbb
cmp
and
xchg
lods
jns
sbb
mov
add
mov
dec
loopne
sbb
fdivs
pop
nop
insb
cmp
mov
add
shll
push
ja
cmpsl
xor
mov
and
in
gs
pop
mov
and
sub
sub
outsl
xor
dec
mov
js
in
test
sbb
std
int3
or
cwtl
frstor
jmp
testl
xor
stos
fs
movsl
mov
js
enter
pop
add
jmp
in
gs
les
xor
push
inc
pop
and
mov
mov
cmp
mov
xor
test
addr16
int
inc
mov
sub
aaa
stos
nop
mov
adcb
mov
imul
add
fs
sbb
cmp
notb
sarb
std
push
rol
mov
xchg
into
cltd
dec
add
das
mov
push
add
dec
add
sub
cli
xchg
cmp
arpl
out
cmp
add
in
adc
xchg
sub
xor
push
push
ret
add
mov
mov
mov
gs
push
inc
roll
call
pop
mov
iret
or
push
stc
pop
leave
in
bnd
mov
in
mov
out
xor
adc
jmp
xchg
fisttpl
in
popf
jne
lret
add
in
fdivrl
imul
inc
push
fcmovnu
out
sub
pop
fwait
xchg
pop
mov
ret
sub
aas
mov
in
xchg
add
xchg
or
repz
lcall
inc
addb
pop
xchg
push
jo
xlat
out
out
cmp
lods
je
or
sub
into
mov
jbe
dec
fdivrl
xor
lock
pop
lret
cmpsl
cmp
mov
adc
sarl
jecxz
sbb
mov
ret
mov
add
pop
stos
sbbb
nop
cmp
inc
fmuls
lods
gs
sbb
and
xchg
jae
mov
mov
adc
push
stos
loope
cmpsb
xor
and
sub
jg
aaa
adc
frstor
insb
mov
aam
popa
sub
sub
lahf
mov
mov
imul
xchg
and
xchg
or
cmc
xchg
mov
sti
inc
out
or
rcrb
or
xchg
cld
int
insl
xchg
rolb
sub
mov
sub
lahf
mov
dec
sub
out
add
or
xchg
sbb
ljmp
hlt
scas
xlat
fsubrp
add
jmp
pusha
jbe
xor
sub
dec
pop
mov
notl
sahf
pop
movsb
stos
pop
cmc
and
xchg
aad
mov
lods
mov
in
xchg
js
adc
in
mov
ja
hlt
in
out
mov
enter
push
mov
xchg
dec
sbb
mov
xor
int3
and
mov
bound
jge
lock
pop
cmc
ret
aam
sub
pop
and
push
xchg
jb
faddp
ret
addr16
adc
pop
or
adc
dec
inc
push
sub
sub
sbb
fistpl
pusha
out
in
cmc
dec
pop
jns
sub
and
push
push
xchg
and
jno
adc
dec
push
xchg
in
cmp
push
xor
je
mov
lds
stos
pushf
or
push
sub
lahf
sbb
jp
cs
dec
sbb
xor
ljmp
jecxz
daa
xchg
xchg
in
fisubs
push
dec
call
in
int
xor
mov
adc
or
pop
mov
flds
mov
xchg
imull
dec
mov
loope
clc
sub
xor
and
daa
sbb
add
pop
and
aas
dec
emms
repnz
add
scas
aaa
xor
xchg
fcomp
repnz
scas
or
mov
pandn
jb
dec
movsl
inc
ret
sub
stos
imul
sbb
in
scas
mov
cmpsb
or
cmp
fmuls
bound
outsl
sbb
xor
mov
lcall
imul
jg
xor
sub
inc
jecxz
out
stos
sarb
movsl
arpl
loopne
adc
mov
mov
mov
cmp
or
mov
sbb
insl
push
sti
mov
add
insb
movsb
sub
icebp
mov
cmpl
add
mov
mov
into
ja
je
adc
popl
out
inc
imul
loope
in
pusha
sar
aad
hlt
lods
cmp
inc
xchg
loope
xchg
mov
dec
loop
mov
and
scas
lods
gs
dec
cmp
rcll
mov
fwait
lahf
cmpsb
rorb
and
cli
pop
mov
dec
fucomip
mov
sub
ja
adc
xchg
lahf
nop
add
int
out
pop
enter
mov
test
pop
fldl
enter
sbb
inc
jnp
scas
jnp
jnp
add
add
jmp
and
xchg
mov
sti
mov
fsts
cmpsl
out
lods
cltd
dec
arpl
pandn
mov
pop
cmp
mov
xor
jnp
jmp
jne
mov
sbb
dec
xchg
pop
mov
popa
les
mov
add
outsb
dec
test
das
jp
jmp
mov
das
bound
call
int3
js
dec
int
mov
push
into
arpl
popf
pop
andl
or
sub
test
ljmp
pop
movsb
xchg
es
push
addr16
js
rcl
repz
mov
shrl
jbe
loop
push
xor
adc
cltd
xor
jno
cmc
dec
mov
icebp
adc
pushf
bound
loopne
sarl
nop
dec
xchg
cmc
outsb
inc
data16
outsl
mov
call
inc
xchg
es
nop
aas
dec
cli
xchg
popf
outsb
mov
mov
adc
xchg
aas
rolb
pop
pop
and
add
cli
insb
add
or
add
fsubrs
push
pushf
and
idivb
pushl
push
sbb
inc
scas
xchg
call
aas
into
push
jo
jecxz
pop
popa
mov
and
stos
orl
inc
test
mov
mov
out
dec
add
and
pop
xlat
mov
dec
js
aas
inc
inc
pop
or
push
mov
pop
insl
or
inc
mov
cmp
push
movsb
dec
cmp
adc
es
shlb
pop
roll
xor
pop
imul
jb
out
dec
leave
and
fmuls
lods
clc
nopl
push
add
lds
loopne
pop
sub
mov
les
in
mov
repnz
and
std
xor
dec
lods
mov
and
shrb
das
in
inc
popa
fisttpl
ja,pt
add
fs
add
test
cli
fsubrl
leave
ficomps
gs
mov
push
lret
jp
mov
or
scas
in
lea
xor
cltd
scas
and
cmc
out
in
mov
cmp
rcr
cmp
out
leave
inc
popf
mov
enter
xchg
loop
test
lahf
or
sahf
mov
jecxz
lods
mov
jo
push
outsb
insb
mov
into
into
sub
mov
push
mov
inc
mov
enter
and
movsl
sarb
stc
js
lahf
and
clc
mov
xchg
xor
pop
out
jns
enter
sbb
xlat
sahf
pop
clc
outsl
xchg
sub
xor
lret
popa
push
cmpsb
mov
push
pop
mov
mov
jns
shll
sub
shll
mov
int
outsl
addr16
insb
pop
lahf
lock
xchg
pop
aaa
sahf
fcmovnbe
dec
mov
xchg
cli
icebp
fs
mov
iret
jb
imul
jge
in
cs
out
jge
fwait
inc
test
movsb
mov
xor
mov
xchg
or
xorb
loop
jle
pop
hlt
fmul
outsl
sub
push
adc
fistpll
sbb
lds
dec
inc
push
add
pop
mov
je
not
cmpsl
int3
loope
jl
cs
test
lds
push
stos
inc
mov
mov
mov
or
repz
pop
imul
inc
xlat
add
subb
and
dec
fcmovnbe
stos
push
stos
push
out
ja
cmpsb
xor
andb
in
dec
rcrb
loope
cmp
sbb
push
aaa
scas
pop
rorb
xor
cmpsb
lock
nop
lcall
cmpsl
out
subl
push
call
jmp
dec
call
stos
je
lock
xchg
ret
insb
ret
leave
daa
xor
lock
jo
lock
dec
pop
mov
pushf
dec
icebp
imul
stc
inc
cld
jge
ffreep
mov
pop
aam
add
sarb
into
dec
loop
lea
xchg
loop
lret
out
in
shll
aad
mov
jmp
sbb
pushf
lock
insb
dec
scas
repz
add
pop
rclb
insb
inc
dec
rcrb
loop
inc
mov
loop
push
insb
ljmp
out
mov
int3
loopne
test
cmpb
mov
xlat
shr
add
lcall
sbb
push
mov
scas
dec
sbb
lret
mov
push
mov
repnz
cmp
inc
mov
pop
or
in
pop
mov
mov
sub
push
stc
sbb
push
call
push
sarl
mov
or
decb
xor
mov
test
jbe
hlt
push
or
js
mov
jns
sub
dec
mov
lods
xchg
jecxz
in
pop
mov
cmp
in
sub
lods
jo
add
push
push
mov
xchg
dec
test
jno
stc
pushf
push
inc
adc
repz
test
jl
cmc
and
leave
addl
popf
popa
sub
inc
daa
lret
jecxz
push
lods
xchg
sub
add
mov
jo
adc
jg
dec
inc
lret
xchg
mov
sbb
out
push
out
out
lret
sub
shll
sub
ficoms
setle
mov
adc
pop
mov
xor
loope
mov
cmp
movsb
jecxz
arpl
pop
mov
mov
enter
inc
xchg
outsl
cmpsb
insb
jecxz
cmp
dec
or
inc
add
fimuls
into
push
jo
aas
mov
mov
adc
pop
out
sub
mov
jmp
fabs
mov
je
call
fistpll
mov
cmova
adc
push
int
scas
push
inc
adc
add
push
sub
lds
cmp
mov
adc
push
pop
xchg
push
pop
pop
mov
mov
push
mov
mov
repz
call
je
addr16
outsb
hlt
sub
or
mov
ret
nop
mov
lahf
adc
pusha
nop
ret
push
adc
loopne
push
mov
lcall
mov
dec
inc
in
xchg
jne
mov
ret
add
pop
leave
push
fsubrp
xorb
mov
aad
pop
dec
ret
leave
fsubs
repnz
mov
dec
pop
mov
repz
xchg
ret
lret
jmp
outsb
push
mov
addb
mov
fcomp
test
dec
sub
push
subl
dec
jae
bound
sarb
adc
mov
lret
cmp
sahf
mov
or
cmp
cwtl
fsub
or
mov
adc
mov
ds
ja
movsl
push
arpl
push
cmp
scas
repz
int
push
fisubrs
popf
jge
xlat
shll
shll
push
inc
iret
shll
cmpsb
dec
int3
lahf
nop
sti
enter
testl
xchg
or
lock
jo
and
arpl
xor
fistl
and
adc
fisubl
loope
fdivrs
cmpsl
cmpsl
fdivl
sbb
inc
test
sbbl
aad
sbb
mov
rcll
in
xor
mov
xchg
jmp
pusha
pop
jo
sahf
repz
lds
popa
fldcw
dec
push
push
dec
xchg
cltd
pop
lods
mov
enter
add
dec
mov
push
les
add
hlt
lahf
cli
les
cmp
inc
in
jl
call
js
inc
dec
hlt
sub
std
cmpsb
adc
test
ret
inc
fstp
popl
out
push
mov
les
bound
daa
sarl
shll
daa
pop
adcb
lcall
fstl
outsb
dec
decb
push
stos
push
out
cmp
cli
xor
gs
pusha
stc
jae
pop
popf
sbb
jae
lret
loop
inc
xor
fimuls
push
add
add
xor
and
loope
daa
and
mov
adc
sub
rcrl
jae
pop
adc
cmp
inc
jecxz
jmp
and
mov
sarl
or
dec
bound
fstpl
pop
xchg
xchg
mov
and
dec
mov
dec
into
mov
rcrl
jmp
xor
mov
cmc
jg
push
arpl
ss
icebp
mov
push
cmp
ret
cmovge
xor
outsb
pop
cmp
mov
out
dec
pop
dec
out
or
or
jl
jmp
mov
mov
jle
ret
and
adc
pop
adc
mov
push
fdivrp
rclb
fbld
in
adc
lea
lcall
mov
popf
cmpsb
xor
adc
mov
mov
lret
cmpsl
gs
xor
loope
xchg
dec
shll
mov
xor
add
mov
ds
jnp
mov
jge
pop
mov
xor
daa
aas
inc
xchg
cmp
or
sub
jnp
sarl
stos
mov
xchg
or
imul
push
clc
in
shlb
stc
inc
sbbb
jge
insb
adc
sahf
lock
in
popf
cltd
or
pop
stc
fstl
mov
test
fimull
add
rorb
dec
addl
mov
adc
dec
pushf
sahf
push
movsb
mov
fxch
lret
and
push
or
lret
xor
call
mov
adc
mov
scas
xchg
lahf
inc
push
lcall
cmpsl
shrl
adc
addr16
clc
popf
pop
into
les
aam
enter
cltd
fsubrp
and
xchg
cmpsb
jno
xchg
xor
push
bound
ret
out
or
mull
pop
xchg
push
push
cmc
ljmp
call
es
outsl
sub
and
out
or
sarb
out
jmp
cmp
je
pop
insb
sub
rorl
fdivrl
adc
int
mov
les
out
pushl
adc
pushf
js
mov
jbe
sbbl
xor
jmp
sbb
add
mov
dec
mov
xor
adc
adc
inc
cmpsl
hlt
les
iret
add
pop
imul
mov
scas
scas
std
cld
xor
mov
fsubrl
dec
inc
pop
xchg
mov
xlat
repz
xor
and
sbb
mov
jbe
ret
push
mov
shrl
adc
cmpl
adcl
addr16
cmp
es
xor
fisttpll
cmp
cltd
imul
jb
pop
out
mov
js
outsl
test
inc
xchg
and
add
add
fstl
outsl
faddl
add
sti
and
mov
repz
lea
in
cmp
or
icebp
repnz
mov
adc
mov
aam
loop
cmp
push
mov
sub
repnz
inc
jns
in
push
dec
add
roll
and
cmp
xor
mov
and
cmp
cmp
sbb
push
iret
push
mov
sbb
lds
aas
or
enter
ss
stc
sahf
cmp
inc
sarb
lock
or
jbe
push
push
ret
dec
movb
dec
dec
cmp
imul
pop
call
xchg
nop
ljmp
sub
dec
out
xchg
in
push
fisubrl
sub
mov
cld
mul
insb
lods
pop
mov
adc
movsl
fists
mov
sbb
xor
xchg
insl
mov
add
pop
inc
cmpsb
insl
add
push
dec
mov
lahf
jge
cmp
outsl
cld
test
sub
mov
mul
fwait
insl
out
je
lods
cmp
push
sbb
jle
pop
dec
outsb
int3
in
or
sub
xor
gs
mov
cmpsl
sub
mov
data16
fwait
neg
lods
aaa
sbb
xor
pop
sbb
jne
ror
icebp
rorl
enter
cld
stos
into
mov
inc
mov
inc
fidivrl
jp
fidivl
and
jno
stos
bound
shr
mov
syscall
mov
dec
enter
mov
jp
roll
push
cmpsl
jge
adc
mov
sbb
sbb
push
xor
mov
or
ss
divb
mov
pop
pop
push
push
xchg
gs
ljmp
out
outsb
ljmp
mulb
jl
ficompl
ror
repz
xchg
dec
pop
mov
roll
data16
sti
xor
mov
jae
pop
sub
pop
mov
dec
pop
add
int
arpl
mov
test
flds
xlat
inc
mov
pop
mov
ljmp
leave
in
push
subb
sbb
jg
pop
popf
push
dec
aad
lahf
mov
test
dec
mov
mov
jp
mov
imul
mov
bound
je
stc
and
dec
push
rolb
cmpsb
mov
int3
sbb
ds
add
les
fnstsw
sbb
js
or
push
imulb
je
out
out
std
mov
ja
jp
mov
and
jno
and
and
dec
mov
outsb
jg
hlt
shr
lahf
adc
add
dec
mov
mov
in
adc
rorb
push
in
add
and
mov
pop
cmpsb
insb
ja
xor
cmp
test
jp
dec
rcll
cmpsb
into
xchg
adcl
movsl
cli
fsts
mov
leave
xor
or
push
int
out
cmp
lods
jmp
mov
mov
stos
mov
sub
cmpsl
xchg
xchg
das
pop
bound
inc
jecxz
aam
lahf
imul
sub
shrb
mov
in
lds
adc
pop
dec
xchg
mov
mov
push
dec
ljmp
cmp
subb
fcmovbe
inc
adc
popf
sub
sti
mov
daa
or
repnz
add
adc
mov
stos
adc
push
shrl
and
scas
inc
cmp
cmp
or
dec
and
dec
clc
jae
push
or
movb
sbb
pop
jae
les
je
adc
mov
xor
inc
repnz
xor
loop
je
dec
jne
lahf
imull
addr16
cmc
dec
mov
insl
jno
inc
imul
repz
ret
loopne
lcall
testb
jbe
pop
and
cmp
sbb
test
out
ret
call
aad
popa
mov
xor
imul
repnz
mov
mov
dec
inc
mov
ret
movb
lea
mov
jno
cmp
cwtl
sti
stc
ljmp
test
or
popa
aam
addr16
jb
xchg
das
xor
sbb
jbe
dec
mov
call
jbe
sbb
lret
xor
in
mov
dec
je
sub
inc
adc
lods
fbstp
jge
jno
push
fwait
cmp
cld
sub
dec
enter
jbe
jnp
ss
pop
adc
jo
pop
lea
mov
or
testl
push
jns
dec
jbe
shrl
push
add
xchg
leave
push
pop
adc
xchg
je
xchg
sbb
mov
vmovupd
out
cli
or
push
adc
push
xchg
fsubl
pop
sbb
adc
cmp
lahf
adc
dec
lea
push
test
pop
jnp
in
loop
mov
imull
divb
inc
in
cmp
loopne
call
or
push
popf
xchg
sbb
sub
mov
jbe
mov
push
push
out
test
loopnew
adc
rcr
popa
cmpsb
lods
xchg
movb
cmp
xor
xor
int3
mov
inc
xchg
lods
jmp
loopne
lods
repnz
mov
sahf
aas
sub
inc
push
jbe,pt
shrl
mov
ret
sub
outsb
cmp
and
data16
pusha
pop
or
dec
cld
loop
or
jns
sti
and
xchg
push
sbb
enter
roll
adc
dec
push
das
clc
aaa
add
out
loope
fwait
and
lcall
fld
out
xor
cmp
push
mov
sub
jmp
inc
mov
push
and
cli
mov
daa
xchg
ds
fwait
imul
add
adc
repnz
fsts
jb
pop
dec
push
push
aam
jecxz
pop
out
mov
ret
mov
subl
and
test
out
aam
adc
xchg
js
push
and
leave
shlb
ds
aas
mov
dec
xorb
dec
or
mov
int
loope
sbb
sbb
cmp
mov
repnz
lret
test
and
imul
insb
cwtl
cmp
cmpb
jp
add
add
inc
pop
push
jnp
mov
mov
std
enter
in
push
scas
or
adc
das
push
int
cltd
dec
push
enter
mov
dec
stc
push
jge
adcb
das
repnz
xlat
shl
into
push
inc
stos
nop
fwait
outsl
mov
sbb
out
bound
or
out
pop
jb
mov
into
jp
mov
outsl
pop
addb
xor
leave
cmp
push
imul
or
push
popa
jmp
jbe
icebp
ret
fistpl
aad
add
sub
imul
lcall
and
lds
dec
push
popa
or
adc
or
pop
mov
loope
pop
addr16
cld
push
stc
lcall
rorl
lret
ficoml
cld
dec
bts
js
cli
inc
es
mov
aas
dec
aad
test
decb
cmp
mov
gs
aaa
push
mov
xchg
inc
rolb
out
cmpsb
lock
or
mov
lea
int3
push
out
mov
mov
mov
xor
lds
cmpsl
mov
inc
sbb
repnz
mov
push
bound
testb
mov
push
ret
fstpl
fs
sub
xor
sbb
pop
and
adc
cmpb
cmpsb
faddl
loope
inc
jmp
add
ljmp
aaa
stos
adc
xchg
mov
ds
jns
enter
shll
mov
cli
xchg
dec
dec
or
sub
push
mov
cmpl
or
lahf
mov
cmp
in
xor
mov
sbb
ret
push
or
inc
pop
stos
push
fsubl
mov
mov
outsb
add
popf
jbe
mov
sbb
loopne
push
cli
imul
pop
xchg
cmp
movsl
fistpll
pop
xchg
pusha
out
mov
outsb
daa
pop
xchg
cmpsb
idivl
test
cmpsl
mov
ficoms
xchg
sbb
push
es
loop
or
hlt
rorb
cmp
adc
xchg
daa
and
imul
push
imul
push
pop
or
pop
pop
inc
in
arpl
mov
jae
cli
fs
js
fadds
jg
sbb
jns
xchg
mov
dec
add
cmp
mov
cmp
push
hlt
push
idivb
mul
loope
sbb
jae
pop
es
fnstenv
aas
pop
jecxz
lcall
scas
pop
pop
cmc
xchg
insl
adc
pop
insl
fldenv
jl
aam
test
sarl
fstps
insb
out
or
cmp
movsb
ret
mov
dec
add
out
xchg
jae
sbb
cmp
xor
mov
and
jecxz
xchg
js
lock
and
inc
jne
jmp
ret
insb
mov
popf
add
adc
push
dec
pop
pop
jp
jmp
test
out
aaa
aas
test
or
bound
xor
stos
sub
leave
aaa
ret
xchg
jne
test
js
cbtw
pop
cwtl
sbb
jns
test
jl
pop
xchg
sarl
jnp
das
add
ror
fdivr
lock
pop
imul
out
pop
xchg
add
xchg
and
sahf
xor
cmp
inc
jmp
into
arpl
out
es
dec
jmp
cmpsl
dec
cli
leave
xor
icebp
sbb
ds
bound
mov
imul
or
loope
imul
push
cmp
push
jnp
sub
std
and
popf
push
outsb
fimull
or
dec
sarl
mov
mov
cmpsl
fldt
xchg
dec
fistl
in
outsb
scas
push
mov
fcmovu
cld
cmp
or
add
jae
sub
lea
inc
hlt
lds
inc
adc
mov
aad
dec
xor
call
lods
add
inc
cmp
lods
aas
and
mov
sahf
sahf
loop
mov
vandnps
push
add
stos
jp
ret
fisubl
call
sbb
in
dec
cmpsb
lds
fmuls
in
add
scas
mov
dec
and
xchg
arpl
ds
push
mov
outsl
jns
shlb
js
mov
mov
arpl
jne
scas
in
push
mov
pop
sbb
test
xchg
push
cmp
cmp
test
insl
aaa
cld
fldenv
outsl
xchg
test
jmp
scas
movsl
mov
fwait
xchg
add
sbb
cmp
outsl
adc
jns
mov
cld
fstpl
mov
pop
fwait
adc
enter
sti
or
sub
dec
loop
or
lods
std
add
cltd
mov
push
and
ret
leave
adc
cld
mov
mov
inc
test
mov
dec
sarl
xchg
fcmovbe
lahf
jae
pop
pop
mov
ficoms
add
int3
cmp
rcr
decb
sbb
dec
dec
jbe
push
mov
xor
std
add
add
les
xchg
test
jne
cmpsb
aad
es
jnp
lcall
xchg
mov
mov
dec
cmc
cs
sbb
sbb
mov
mov
mov
dec
faddl
rol
push
fnstcw
push
pop
cmc
mov
jle
cltd
mov
and
pop
ror
mov
fsubl
out
daa
mov
insl
fsubs
push
inc
inc
xchg
sub
jnp
jne
lret
cmc
cmpsl
ret
shll
clc
repz
and
and
dec
xlat
setp
sub
jb
leave
jl
inc
sub
loope
pop
neg
mov
test
cs
hlt
out
jne
push
adc
xchg
push
out
jb
call
lahf
rorl
xchg
add
xchg
fstps
mov
or
into
arpl
mov
icebp
data16
movb
adc
jns
lods
jb
repnz
cmp
cltd
sbb
cltd
jbe
lret
mov
pop
dec
inc
xchg
push
jmp
cmp
das
jp
in
cltd
jl
pop
dec
fiaddl
xchg
add
dec
sbb
stc
sbb
mov
jle
mov
xor
adcl
das
mov
cmp
lret
adc
cmp
xchg
inc
in
cli
bound
imul
sti
adc
dec
push
mov
outsl
mov
mov
and
loop
notl
sub
xor
mov
sahf
mov
mov
insl
mov
ja
mov
or
fidivs
scas
jmp
mov
jmp
inc
inc
enter
push
add
pop
dec
imul
test
xor
in
sbb
adc
push
pop
popa
lret
ja
mov
idivl
in
jae
mov
mov
adc
inc
jg
sarl
add
loope
cli
test
adcb
bound
inc
fstpt
daa
mov
imul
inc
push
pop
mov
lock
andl
mov
mov
lods
xchg
adc
add
jbe
imul
xchg
push
addr16
push
fdivl
xchg
cmp
jno
inc
outsl
repnz
fistpl
and
lods
imul
mov
rorl
mov
andl
jmp
je
xchg
push
leave
ss
sahf
test
iret
push
test
add
adc
sub
push
mov
cmpsl
mov
or
loop
in
push
incl
xchg
pop
mov
jmp
xchg
int3
sbb
add
sti
shlb
pop
pop
pop
pxor
cli
adc
in
jae
cmp
sbb
adc
fnsave
out
out
or
mov
inc
or
fsubrs
ja
dec
mov
mov
enter
lock
pop
mov
jno
movsb
lods
pop
int
or
lock
lods
xchg
scas
stos
and
test
pop
xchg
addr16
insb
popa
push
addr16
xor
xor
loope
adc
fistl
xchg
inc
fstenv
add
and
sub
test
push
sti
fimuls
mov
aad
inc
faddp
lcall
pop
xor
push
xor
loop
dec
iret
scas
lret
mov
inc
stos
cs
pusha
sub
dec
je
pushf
mov
jle
js
test
push
adc
mov
insb
pop
ds
gs
adc
fidivl
jns
fisubl
pop
xchg
mov
lods
repz
sub
ja
and
test
mov
test
lret
dec
test
sbb
sbb
insb
rclb
test
xor
jecxz
into
shlb
xchg
cmp
mov
inc
xchg
pop
data16
std
jne
push
mov
cs
lret
push
popf
xchg
mov
jge
push
das
pusha
add
xchg
cmp
inc
dec
adc
and
mov
scas
loop
mov
sti
ret
out
sbb
clc
repz
jb
sbb
in
sub
sbb
or
mov
dec
jne
mov
in
pop
ja
dec
popa
mov
or
xorb
mov
inc
xor
lea
mov
lret
insb
pop
scas
andb
js
les
cs
movsl
push
aaa
shlb
rolb
sbb
pop
repnz
and
stc
in
daa
mov
and
push
in
or
mov
mov
xor
and
dec
xchg
mov
xor
clc
aas
inc
jecxz
sbbb
xor
jns
jns
pop
jl
pushf
cmp
mov
loope
jnp
jae
mov
push
pop
cmpsl
push
mov
sub
outsb
add
mov
inc
mov
jno
jg
leave
cs
mov
in
les
in
jmp
inc
jle
lock
int
jnp
andl
or
repz
fwait
xchg
ljmp
adc
pop
in
sbb
cmp
push
mov
or
cli
push
ficomps
pop
xor
xor
mov
movb
mov
add
jge
pop
add
cmp
in
mov
cmp
int3
icebp
fsubrs
push
and
push
lods
dec
adc
cmpsl
mov
neg
push
jbe
mov
xor
mov
add
or
sbb
arpl
dec
arpl
jmp
sbb
xor
push
test
cs
cmpsl
sub
or
lods
fsubl
mov
inc
push
mov
push
mov
cmp
sbb
cmp
hlt
outsl
sahf
sub
sub
sbb
cmp
xchg
data16
sub
sub
xor
cmp
in
mov
mov
xor
inc
stos
mov
xchg
cwtl
add
cld
and
jp
inc
test
mov
jno
lds
das
sub
test
and
and
dec
stos
andb
xor
fs
nop
jecxz
pop
mov
lock
mov
xchg
or
mov
lahf
jo
loop
push
stos
add
fbld
xor
movsl
lret
xchg
jl
pop
lods
nop
and
cmp
jno
jecxz
imul
push
dec
mov
inc
daa
fisttps
call
gs
stos
mov
pop
sbb
divl
inc
insb
cld
out
and
mov
jle
fnstenv
mov
nop
in
jns
mov
xchg
add
fmuls
add
mov
sub
dec
popa
dec
fisubl
daa
in
scas
pop
and
sti
dec
mov
mov
ds
adc
out
cmc
push
std
js
ret
lods
aas
popa
lods
dec
jb
push
andb
or
inc
push
shlb
push
pop
jl
adc
je
sbb
mov
sub
inc
jae
pop
sub
pushf
cs
test
cs
xchg
rorl
jmp
dec
insb
mov
loop
push
lahf
test
push
sub
mov
dec
sbb
sub
ljmp
mov
movsl
push
and
dec
std
out
popf
repnz
cmp
out
orl
mov
or
out
mov
jecxz
scas
cltd
test
xchg
mov
pop
mov
dec
out
insb
rorl
lock
jo
mov
aam
popfw
add
fistpll
fmuls
aaa
xor
dec
fdivrs
mov
mov
mov
aad
jbe
inc
cld
fs
jecxz
fstps
test
jmp
jp
and
mov
sbb
mov
adc
insl
jae
jmp
push
rcrb
out
iret
adc
cmpsl
push
cltd
cmp
or
bswap
dec
shll
dec
mov
cmpsb
popf
lds
inc
sub
or
cmc
xlat
jne
inc
js
pop
push
xor
fstpt
outsl
add
lds
mov
jge
lock
insb
and
fistpl
inc
bound
call
neg
pop
movsb
cmp
test
out
test
and
lret
es
jne
inc
fldcw
popw
mov
push
nop
or
xchg
jl
mov
mov
dec
xor
mov
movsb
cmp
xchg
hlt
stc
cmp
aaa
jbe
mov
pop
lret
mov
xchg
cmpsl
jl
ret
push
sahf
mov
cmp
or
cmpb
push
test
push
loope
jb
or
bound
pop
pusha
xor
daa
push
and
xchg
jnp
cmp
popa
add
les
movsb
or
es
sbb
pop
fisubl
mov
pop
sub
cltd
hlt
loope
dec
outsb
inc
loop
push
mov
pushf
add
xor
lods
fsubrl
sbb
xlat
mov
cld
cmc
shlb
emms
jb
jl
inc
out
pop
sub
mov
adc
iret
xor
sbb
add
rolb
xor
mov
adc
outsl
sub
push
mov
lcall
push
out
and
pop
addb
sahf
cmp
pop
int
mov
mov
inc
cld
mov
lock
imul
pop
imul
insb
movsl
pop
adc
ljmp
out
sbb
sbb
mov
pop
arpl
jnp
ds
jecxz
inc
sub
test
mov
in
insb
mov
inc
xchg
push
call
cwtl
fucom
shll
sar
cltd
jo
dec
js
aaa
cltd
lods
lea
or
pop
sub
adc
scas
push
in
xchg
cmp
cmp
cli
lods
push
sbb
fisubs
pop
pop
cwtl
in
lret
mov
push
push
repz
add
pop
imul
in
inc
shrb
nop
out
ficoml
shrl
xchg
push
cmpsl
adc
loop
jo
rcrl
pop
test
push
inc
outsb
adc
pop
pop
aad
leave
outsl
xchg
jg
push
push
lea
dec
scas
xchg
or
in
add
mov
imul
icebp
insb
and
test
outsl
pop
xchg
in
fprem
push
xchg
lahf
push
adc
or
add
ds
imul
inc
sbbl
lock
out
push
add
iret
xor
aad
inc
in
mov
lret
xchg
lcall
scas
xor
enter
xchg
pushf
push
enter
out
lahf
inc
fimuls
mov
loope
inc
mov
fcmovnbe
bound
imul
in
inc
push
sub
jge
lods
or
loop
sbb
andl
push
das
xchg
daa
inc
stos
dec
xor
adc
aad
movsb
loop
mov
xchg
popf
xlat
or
popa
fsts
inc
lahf
pop
popa
and
xchg
fbstp
lcall
stc
sbb
jle
mov
jnp
push
mov
dec
or
dec
xor
shrl
mov
mov
loopne
adc
cmp
sbb
int3
rorb
and
mov
movsl
jl
jmp
cwtl
mov
sub
mov
jns
dec
mov
or
icebp
mov
xlat
push
jl
aas
int3
lahf
cmp
rcr
cmp
push
outsb
nop
or
inc
and
scas
int
cmp
or
jmp
test
and
push
sbb
jae
addr16
dec
pop
pop
or
fcomi
pop
movb
cs
in
xchg
lds
stc
pop
je
mov
test
lds
clc
ficoml
fwait
jle
mov
jp
mov
loop
xchg
adc
loop
test
insl
xor
inc
xchg
nop
in
cli
mov
movsl
jg
outsl
imul
or
rclb
jecxz
in
pop
cmp
aaa
sbb
or
jmp
cmp
mov
insl
mov
sub
pop
out
test
and
adc
fidivs
repnz
ret
sub
je
out
stos
icebp
and
clc
fldt
pop
popa
shll
movsl
test
or
sub
loopne
and
out
xor
sbb
add
push
sbb
out
lea
pop
andl
cmc
jb
lods
jecxz
clc
mov
dec
enter
jmp
cmpb
mov
xchg
movsb
jmp
cli
test
test
daa
add
jl
js
add
mov
or
add
ja
push
or
sbb
pop
push
mov
pusha
aad
dec
dec
jbe,pn
inc
aam
fyl2xp1
cmpsl
ja
das
in
hlt
loopne
rclb
mov
hlt
xchg
and
mov
dec
push
insb
aas
stos
movsb
pop
into
ficoms
xor
mov
add
decb
mov
dec
mov
mov
jns
loopne
jmp
mov
pusha
xor
repz
add
stc
fsubrl
xor
ljmp
adc
jbe
add
mov
mov
repnz
jo
icebp
fistl
lahf
xchg
imul
mov
repz
add
repz
or
mov
sub
xchg
dec
leave
outsl
add
add
aam
int
sub
adc
imul
shl
ficoms
fcmovnb
es
cmp
aaa
mov
sbb
mov
push
mov
loopne
pop
js
fwait
js
dec
sahf
popf
jecxz
movsl
out
xor
pop
imul
dec
sub
in
cmpsb
sbb
cmp
scas
xor
xor
es
sub
add
repz
je
repz
cmp
fildl
jns
int
pop
xchg
add
xchg
pop
popa
dec
stc
adc
les
and
mov
into
shll
or
mov
pop
jg
jmp
sqrtps
xchg
in
es
add
mov
mov
mov
xor
sahf
and
or
jbe
mov
push
push
jne
jge
jbe
stos
in
mov
es
cmp
cmpsl
fs
daa
test
xchg
add
loopne
scas
scas
jnp
inc
and
xor
iret
jge
imul
sar
push
insb
shll
jle
out
in
add
jecxz
mov
mov
mov
mov
aam
inc
sbb
mov
cmc
cmp
sbb
sub
xor
mov
or
xchg
fisubrs
mov
add
push
fstps
xchg
inc
jmp
pop
cmpsl
lods
and
insl
xchg
inc
inc
fstpl
ret
mov
sub
out
das
sti
push
sarl
cmc
jge
add
sbb
lock
mov
pop
cmpsb
sbb
mov
mov
inc
sub
xlat
inc
test
test
mov
mov
mov
nop
mov
sub
sub
test
add
js
outsl
dec
leave
push
mov
mov
xchg
add
pushf
arpl
mov
jp
pop
jecxz
xchg
lret
mov
xchg
lds
xorl
cltd
add
xchg
inc
jns
inc
sbb
insl
sbb
push
lods
imul
fwait
jb
jno
pop
adc
push
and
shlb
in
das
lret
jbe
sahf
gs
xlat
gs
push
mov
mov
xchg
addl
das
sbb
xchg
out
inc
hlt
lods
sub
push
inc
push
je
xor
mov
popf
sbb
lret
jb
imul
imul
lret
inc
sub
cltd
rclb
cmp
cmp
fdivrs
push
incl
xor
mov
stc
cmc
jnp
inc
cmp
jbe
jo
stc
js
cmc
or
mov
incb
xor
insl
ljmp
pop
mov
out
fsubs
cmc
xor
inc
push
mov
jle
cmp
pop
and
loop
test
push
xchg
ljmp
jb
sub
xchg
ds
push
add
test
jno
pop
fsubrs
or
ret
arpl
pop
xor
lcall
push
adc
dec
sbb
xor
data16
mov
jecxz
jnp
pop
mov
sub
hlt
sbbl
mov
pop
dec
dec
kmovw
inc
mov
xchg
nop
addr16
add
push
roll
add
adc
fsubrs
sti
xor
xor
idivb
pop
icebp
sbb
aaa
adc
jge
pop
stc
in
xor
and
neg
insl
sub
lcall
mov
daa
stos
repnz
xchg
xchg
scas
or
inc
loope
int
out
mov
or
cmp
repz
adc
gs
cli
daa
jecxz
pop
frstor
jb
dec
or
pushf
xchg
pop
jno
bound
xchg
sbb
and
outsb
enter
cld
pop
sub
xor
int3
push
add
adc
adc
mov
add
jmp
nop
fisubrs
cs
mov
fsubp
leave
sub
call
lods
subb
mov
movsl
or
mov
and
xchg
pop
mov
ss
outsl
hlt
jnp
in
mov
sahf
outsl
sbb
jge
in
in
xchg
cmp
push
cmpl
bnd
mov
fs
add
ja
nop
inc
jge
mov
neg
sbb
sbb
cltd
mov
inc
and
repz
push
or
cs
adc
insb
movsl
dec
lret
and
pop
stos
inc
fisubrl
mov
arpl
ret
sbb
mov
cmp
mov
pop
push
arpl
andl
es
fwait
and
or
rcl
notl
addl
sti
or
outsl
das
or
push
je
or
aad
mov
mov
and
jb
lahf
dec
dec
aad
push
loop
scas
or
dec
mov
mov
jb
in
test
inc
xor
xchg
int3
sub
pop
mov
sub
loopne
popf
adc
mov
imul
test
add
xor
xor
lret
mov
pop
mov
pusha
jb
or
mov
lret
dec
ret
jmp
adc
test
mov
xchg
inc
or
aas
or
nop
mov
jmp
rclb
xchg
loope
lret
insb
mull
push
test
ds
jge
and
movsl
xor
iret
push
add
and
pop
add
mov
dec
imul
push
pusha
pop
jl
imul
and
dec
adc
test
popa
div
lds
ljmp
nop
pop
xchg
sub
fs
in
mov
sub
mov
cmpsb
mov
cs
cmp
cmp
ret
inc
sub
ljmp
or
test
hlt
xchg
add
aam
aad
hlt
fs
cwtl
sarb
xor
pop
loopne
orb
add
fdivr
leave
insl
lock
les
mov
jae
jbe
mov
inc
decb
dec
sub
sub
fcompl
mov
xor
rcl
out
push
negl
add
repz
in
lea
arpl
mov
mov
out
out
adc
and
out
sub
sbb
ljmp
push
sub
adc
inc
dec
cmc
pop
pushf
lds
pop
and
rorb
add
mov
mov
addb
in
repz
ret
adc
addr16
and
add
mov
or
xchg
in
adc
leave
mov
cmpsl
js
stc
fisubs
inc
pop
xor
divb
sbb
lret
sarl
dec
in
repz
xor
xchg
cmp
jo
add
push
mov
mov
dec
fcomps
jge
outsb
adcl
arpl
fsts
mov
repz
add
stos
mov
and
pop
mov
inc
out
jmp
cmc
sti
stc
xchg
aad
lods
aas
je
jle
fmuls
dec
dec
sbb
aam
mov
cmp
inc
add
mov
ds
add
out
ljmp
call
iret
pop
pop
mov
outsl
mov
jp
mov
dec
inc
mov
pop
mov
pop
inc
inc
fistl
dec
mov
or
mov
fs
lret
rcl
add
xchg
test
dec
adc
cmpsb
subw
pushaw
test
divl
out
out
cmpsb
enter
jbe
cmp
cltd
push
jno
test
arpl
scas
stos
xor
cli
cmpsb
ret
das
fisubrs
subb
insl
test
mov
cmp
ds
js
iret
test
mov
mov
test
orl
shll
fcoml
shll
and
cmp
ret
jns
testl
sahf
add
loopne
and
mov
into
pop
and
push
popf
fldz
fs
mov
sbb
addr16
mov
es
lret
arpl
inc
xlat
xorl
into
in
inc
adc
enter
loopne
sub
add
paddsb
shll
test
push
scas
push
adc
hlt
aam
aam
lret
jo
negb
ja
cltd
or
mov
popa
sbb
lret
or
add
lret
add
aas
hlt
adc
add
outsl
sbb
addb
je
call
xchg
sub
stos
or
les
sti
add
cmp
jbe
fsubs
popa
adc
cmp
dec
sbbb
sub
or
cli
inc
mov
pop
or
push
es
cmp
leave
pop
icebp
clc
inc
sbb
jae
insb
push
mov
clc
lea
fwait
sti
sahf
mov
cvttps2pi
or
jp
pop
enter
loop
shrb
push
jp
sti
push
inc
add
outsb
cs
test
xchg
fnstsw
rorl
scas
sub
mov
add
add
adc
mov
repnz
fldl
pop
mov
add
fisttpl
je
mov
fdivrp
sbb
add
sar
cmc
bound
imul
pop
adc
in
mov
mov
sub
in
rol
cmp
cmp
adc
clc
stc
fwait
xchg
cmpb
mov
adc
addr16
sbb
lahf
sbb
push
sbbl
mov
jl
or
inc
ljmp
rcll
movsb
out
xchg
mov
das
out
sub
cwtl
add
lds
jo
xchg
add
mov
xor
push
push
ljmp
andb
movsl
rorb
sahf
xor
pushf
mov
lock
adc
test
jl
shlb
jge
stc
xchg
mov
jmp
sbb
stos
cltd
xchg
mov
nop
in
nop
lret
inc
cmpsb
jne
gs
and
push
sbb
push
test
repnz
lods
inc
jnp
xor
adc
xor
es
sbb
sub
inc
push
pop
sub
sahf
call
jb
mov
popl
enter
repnz
xor
aas
cltd
mov
push
and
insb
inc
imul
js
sub
sub
mov
shlb
jae
mov
jno
cmp
pop
stc
fistl
notb
fs
dec
pusha
mov
mov
sub
insl
cmp
test
mov
repnz
xor
ret
push
enter
mov
dec
mov
add
pushf
sbb
mov
lahf
es
mov
cmpb
lcall
mov
or
jo
popf
ret
push
push
adc
in
fcomps
and
test
fcomps
leave
mov
out
cmp
pop
jp
je
jmp
mov
imul
aas
pop
mov
inc
push
popf
cmp
mov
loop
adc
mov
jmp
les
stc
divl
cmp
aaa
xchg
gs
push
cwtl
dec
lret
lret
or
cld
lcall
mov
sub
sarb
loopne
xor
lahf
cmp
pop
mov
mov
pop
pop
mulb
je
sub
xor
mov
mov
aam
adc
insb
or
repnz
int3
dec
test
sbb
sbb
addr16
lock
lcall
or
push
mov
mov
cmp
dec
lcall
inc
sub
imul
mov
pop
fwait
dec
sub
aas
cmp
out
lret
push
mov
pop
xchg
sti
out
cs
roll
mov
imul
cmp
push
pop
fildl
test
testb
or
jo
adc
adc
lret
sbb
test
push
loop
and
add
xchg
jne
popa
scas
push
mov
dec
cmp
jle
jge
dec
out
mov
orl
inc
in
sbb
sbb
jmp
jmp
pushf
lds
fs
ret
daa
int3
adc
cmp
push
and
adcb
leave
sbb
fsubr
decb
cmp
lods
mov
ljmp
dec
sbb
push
inc
xor
scas
lahf
lret
dec
sub
loopne
or
jl
jnp
data16
mov
pop
out
mov
cmp
inc
adc
push
daa
ds
jns
pushf
jo
push
in
repz
xor
mov
push
iret
xchg
add
xchg
push
loop
jle
int
mov
fldenv
or
mov
rcrb
and
subb
adc
int3
popf
lods
loopne
mov
dec
pop
leave
enter
jae
loopne
neg
or
adc
jmp
test
dec
fsubl
or
push
sub
or
inc
in
es
jl
mov
cmp
sbb
pop
loope
inc
xchg
push
fwait
mov
test
sub
fwait
das
xor
dec
dec
sub
xchg
loop
test
lds
xlat
xchg
fsub
dec
inc
xor
fldenv
les
xchg
push
or
shll
aaa
pushf
mov
loope
sub
push
pop
ret
mov
sbb
movsb
add
out
pop
stc
insl
pushf
add
sarl
push
jne
jl
push
iret
mov
add
cmpsb
xor
daa
pop
mov
adc
iret
inc
nop
fwait
and
mov
lcall
sbb
test
push
stc
push
sahf
jo
or
sbb
xor
xchg
hlt
or
imul
stos
lcall
aas
xchg
mov
ret
test
cmpsl
and
and
ljmp
jp
pop
push
repnz
cwtl
mov
cs
hlt
xor
adcb
lock
shrb
ds
add
pop
imul
adc
dec
out
insl
mov
mov
loopne
push
or
iret
fwait
jbe
dec
push
lcall
mov
fidivrs
sub
inc
inc
daa
mov
out
pop
adc
pushf
cmp
dec
push
cmpsl
sahf
int
xchg
mov
imul
pusha
sub
adc
dec
adc
push
loop
das
pop
das
cmp
sahf
lcall
mov
add
adc
iret
or
imul
insb
pop
dec
mov
ret
dec
in
xchg
jg
mov
enter
mov
jns
mov
outsb
xchg
test
dec
movsb
lock
lahf
mov
xor
add
das
push
mov
cld
ljmp
xor
orb
lret
push
xchg
mov
push
test
jbe
sbb
fsubrs
icebp
xor
jbe
out
jb
iret
sub
les
andl
sbb
push
mov
subb
push
push
inc
std
or
xchg
push
cmpl
sub
fimuls
or
call
lods
add
xchg
mov
push
add
sbb
xchg
rcrb
xchg
es
push
incb
fisubrl
and
clc
cmc
xchg
fwait
mov
hlt
cltd
and
out
aas
data16
fadds
mov
mov
mov
jg
cs
rcrb
add
imul
dec
pop
int
test
in
mov
jb
fsub
cli
sbb
sub
ret
pop
inc
ret
sti
mov
adc
hlt
and
lea
js
in
mov
fistl
test
sbb
decl
mov
cli
jmp
daa
xchg
ret
ds
loope
int3
movsl
rcr
sbb
pop
das
fisttps
cmp
xor
add
aam
xor
jp
mov
cmc
outsb
push
mov
xchg
sub
mov
jg
adc
push
push
push
scas
fstl
int
mov
hlt
test
mov
mov
mov
mov
andl
adc
outsb
mov
stos
loopne
iret
mov
shrl
ss
adc
lret
setge
int
iret
mov
mov
addb
mov
dec
mov
inc
sub
mov
xchg
insl
cmpsb
mov
or
sub
adc
cmc
leave
lcall
ds
add
fisttps
jg
add
fdiv
mov
in
shr
jnp
pop
shr
jnp
stc
dec
movl
xor
stc
out
aas
and
sub
cmp
mov
mov
xchg
pop
je
lods
inc
pop
or
or
add
decb
cltd
stos
inc
jmp
mov
insl
dec
xchg
mov
and
inc
lsl
xchg
xlat
inc
jp
or
dec
mov
nop
or
or
dec
xor
add
cmp
sub
clc
lock
sub
lret
aad
divps
xlat
lea
lock
pop
pusha
mov
sahf
cld
repz
aaa
push
out
icebp
sarl
or
jle
pusha
fidivs
sti
nop
dec
dec
mov
fistl
mov
lods
cltd
int
add
cli
decb
rclb
add
enter
ljmp
lcall
or
leave
push
dec
adc
rcr
sbb
add
xor
pop
movsb
stos
aam
rcr
dec
scas
scas
fdivrp
jae
inc
cmp
and
fidivrl
push
mov
push
xor
xor
dec
dec
sub
adc
pusha
scas
pop
repnz
mov
cli
sbb
or
rorb
fs
pop
stos
notl
stos
dec
add
pop
inc
fsts
lret
push
push
adc
adc
and
negl
push
scas
lcall
out
xor
test
mov
mov
pop
cmp
sbb
mul
pop
not
push
push
out
int3
mov
sbb
inc
vpsubsb
and
inc
imul
pop
das
lahf
std
mov
int3
movhps
jp
ljmp
jle
mov
lret
xchg
xor
aaa
test
testl
adc
out
pop
in
xchg
push
pop
pop
rep
sub
push
dec
lahf
inc
pop
ret
popa
aam
insl
mov
push
test
incl
movsb
lods
push
ror
push
cmpb
lods
sub
xorb
lock
andb
test
xchg
enter
fidivs
fldenv
xchg
or
bound
lds
repz
sbb
lcall
cwtl
nop
mov
movups
jbe
lds
jmp
sub
andl
add
adc
test
into
and
push
cmp
in
sti
or
mov
repz
out
aaa
pop
daa
imul
fisttpll
cmp
outsl
cli
jnp
cs
dec
mov
std
cli
inc
stos
pop
test
fsubl
nop
mov
ret
jecxz
nop
mov
add
sarl
stos
inc
cld
jb
shl
push
push
cmp
or
jl
push
pop
lock
push
test
out
lods
push
outsb
cwtl
jno
sub
in
mov
inc
lods
ss
pop
fldt
inc
push
loop
loop
mov
test
xchg
or
pop
jg
push
roll
cld
test
cmp
loope
add
push
mov
xor
cmp
pusha
mov
mov
fdivs
or
xchg
jne
adc
arpl
mov
movsl
cmp
mov
gs
lret
xchg
mov
xchg
jne
cld
out
jle
stc
or
cltd
xchg
cmp
sbb
sub
or
xor
loop
rorb
cmp
sar
mov
fwait
pop
stc
sub
xchg
call
dec
shl
cmp
cmp
sub
cwtl
xor
xor
pop
and
mov
xlat
jno
mov
scas
lock
es
sbbb
mov
sbb
je
ror
aam
mov
addr16
aas
and
jl
fisttps
mov
adcb
sbb
gs
pop
or
mov
lds
mov
dec
jecxz
push
push
gs
mov
pop
xor
push
xchg
pop
out
shl
movsl
negb
bound
push
lds
add
cld
dec
cmp
lahf
mov
bnd
int
xor
sbb
or
dec
lods
in
push
sub
test
dec
push
lods
stos
sbb
xor
sub
push
fdivs
push
inc
jnp
cmpsb
cmpsb
pop
subl
sub
sbb
jo
or
in
fbstp
aad
fsubs
pop
and
and
cmc
add
inc
in
xor
cmpsl
cmp
jle
xchg
fsubrl
cs
mov
jo
dec
jns
push
in
adc
pop
add
arpl
daa
iret
jbe
fwait
iret
movsl
mov
jbe
out
cwtl
gs
js
cmp
mov
shll
out
pop
into
fbstp
dec
int3
inc
aas
inc
mov
mov
inc
inc
and
sub
bound
out
dec
jno
cmpsl
sbb
add
loope
test
xchg
pushf
sarb
xchg
stos
iret
pop
shrb
mov
mov
or
add
pop
and
mov
mov
jnp
jo
mov
sti
cwtl
shlb
sbb
in
into
inc
shrd
add
pop
mov
pushf
xchg
in
inc
je
mov
ret
jnp
push
outsb
cmpsl
push
mov
xor
imul
mov
mov
jle
aam
call
mov
cmp
repz
or
xlat
outsb
xor
cmc
and
insl
not
jno
insl
sub
inc
mov
addr16
jmp
xchg
push
out
aad
push
pop
clc
test
popa
pop
repz
sub
cmp
sbb
xchg
mov
pop
mov
outsl
mov
movsb
stos
in
pop
inc
xchg
push
roll
cltd
cmp
and
pusha
cmp
gs
jecxz
adc
loop
pop
push
ljmp
and
or
mov
mov
cld
outsw
clc
sahf
dec
movsb
mov
shll
cmpsl
dec
pop
cli
mov
push
ret
cwtl
pop
mov
int3
add
and
adc
adc
xchg
push
xchg
cmp
or
incb
lahf
lcall
xchg
cmpsb
daa
or
mov
movsl
sub
daa
leave
insl
fwait
mov
les
inc
fisttpl
pop
inc
es
test
mov
fistps
pop
pop
pop
fwait
add
jno
mov
movsb
pusha
lcall
inc
inc
mov
lea
push
pop
mov
mov
jne
mov
pop
sub
jl
fistpl
xor
pop
pop
push
in
dec
sub
sbb
mov
clc
iret
es
dec
repnz
push
inc
insl
pushf
xchg
sbb
push
sub
test
xorb
xor
insl
les
int3
mov
test
xor
xor
pop
jne
xlat
inc
sbb
push
dec
in
lcall
fisubl
dec
push
pop
sub
lahf
orb
lea
test
pop
sbb
cmpsl
push
jmp
pop
jae
or
xor
lret
add
mov
add
and
popf
xor
mov
xchg
aam
pop
lcall
mov
aas
xor
jmp
mov
hlt
push
addr16
cmp
jae
inc
jae
pop
das
xor
fcoms
pop
inc
ds
cwtl
ljmp
or
sub
test
jg
adc
xor
mov
jbe
es
jns
rol
je
shll
jo
lcall
or
push
pop
insb
xor
repnz
pop
dec
cmp
in
into
in
inc
xor
mov
lret
repz
pop
xchg
enter
push
loopne,pt
mov
in
mov
es
jl
fcmovne
mov
xchg
out
mov
mov
inc
in
mov
mov
in
movb
jmp
sbb
data16
insl
subl
and
adc
and
faddp
fsubs
mov
add
test
cmp
mov
out
lret
xor
lret
sub
mov
cmp
in
stc
cmpsl
push
inc
sar
and
dec
out
cmc
loop
xor
shlb
sub
loopne
ss
push
mov
clc
int
sub
lea
sbb
sub
into
and
xor
ror
fwait
push
je
sub
pop
mov
aam
mov
xor
jg
xlat
test
pop
or
or
sbbl
fcompl
push
lret
outsl
mov
pusha
shl
test
fistpl
sti
inc
inc
or
pop
pop
sbb
inc
dec
cwtl
jo
add
out
call
enter
je
rcrb
pusha
xor
mov
hlt
negb
repnz
movl
mov
inc
mov
std
pop
cmp
aam
out
add
in
repz
mov
pop
inc
cwtl
mov
adc
xchg
push
rcr
movq
xchg
imulb
shll
jb
pop
fcoms
aaa
out
rolb
notb
inc
leave
xor
mov
dec
mov
xchg
jg
inc
divb
adc
int3
mov
cmp
push
inc
pop
aad
test
mov
pop
or
lahf
xor
inc
loop
imul
push
jge
out
lret
pop
or
xor
repz
mov
dec
outsl
das
std
mov
push
scas
jecxz
adc
xchg
add
xorl
xor
push
test
pop
insb
movsb
cltd
dec
insl
push
das
cmp
cmp
xchg
cli
add
js
call
iret
je
loope
add
scas
push
xor
sarl
cwtl
icebp
jbe
inc
sub
movsl
push
stc
pop
mov
leave
aas
insl
stos
cmp
and
xor
push
lret
test
icebp
push
stc
je,pn
sub
cmp
enter
ss
repz
aad
lcall
mov
jle
ret
mov
cltd
push
pop
push
loop
and
dec
mov
shrw
inc
pop
push
sbb
ja
jmp
ds
je
xchg
cli
test
jb
loopne
out
in
clc
or
movsl
outsl
aam
adc
mov
or
fs
sub
jno
in
xor
fs
rcr
mov
add
aas
lods
pop
mov
pop
inc
idivb
enter
test
mov
bound
mov
add
je
icebp
or
and
cmp
or
or
xchg
stos
jmp
stc
add
mov
dec
sahf
movsb
mov
add
xor
call
pop
pop
popa
sbb
dec
setns
mov
fstpt
in
aam
mov
jmp
dec
pop
xor
in
pop
inc
fsubl
pop
ror
adc
jl
cmc
daa
addr16
sbb
mov
jo
enter
pop
inc
mov
ret
cwtd
inc
xor
sbb
jge
jmp
cli
rcll
cld
mov
int3
aad
test
add
mov
xchg
int3
fidivs
cmp
icebp
jmp
and
push
pushf
dec
dec
push
dec
jle
sbb
js
cwtl
jp
fcoms
notl
add
or
cmp
arpl
mov
or
mov
fucomi
inc
dec
rolb
popf
jne
hlt
xchg
ror
xlat
jge
and
call
sub
stos
xor
adc
fcoms
lahf
xchg
xor
insb
mov
lds
sarl
sbb
add
sub
mov
xchg
je
sbb
insb
jl
ja
mov
das
mov
popf
les
xchg
xlat
iret
push
test
adc
mov
xchg
jecxz
xor
icebp
pop
aaa
mov
lahf
sbb
inc
test
adc
and
lcall
lcall
fnstcw
lahf
pop
or
lea
ss
inc
inc
ss
mov
xchg
sub
movsl
mov
dec
out
jbe
fsubs
or
or
push
mov
dec
loop
xor
add
xor
in
lret
xor
add
sub
js
mov
stc
stos
mov
push
jg
notl
push
es
out
adc
mov
lods
fnstenv
jmp
test
pusha
stos
push
call
test
mov
xchg
cmp
sti
inc
adc
push
sub
mov
cmp
xchg
mov
outsb
rcrb
jne
sbb
out
cmp
subps
fisubrs
into
cmpsl
xor
cs
push
xor
test
jecxz
jmp
cmp
xchg
push
push
mov
fsubrs
loop
sbb
cmpl
xchg
cltd
mov
nop
jbe
nop
mov
xchg
pop
inc
push
in
imul
xorl
sub
jle
cmpb
or
and
mov
inc
xor
push
inc
xchg
insl
in
jl
push
sahf
popa
lods
and
in
test
mov
and
dec
or
cmp
shlb
mov
pusha
lods
gs
sub
jmp
cmp
shlb
shrb
mov
int3
jecxz
inc
fstp
in
jnp
cld
and
inc
scas
sub
fldenv
or
in
aad
jns
mov
lret
push
jb
int3
mov
mov
test
adc
mov
divl
test
jbe
aaa
mov
mov
les
insb
xor
jb
mov
andb
aas
int3
out
jl
adc
fcomps
rcll
bound
fnstcw
jae
fistl
dec
cltd
into
into
mov
xchg
push
dec
mull
lret
xchg
in
loope
jne
mov
cmp
lret
scas
daa
inc
pop
xor
push
ret
je
aad
sets
imul
mov
cli
jge
lods
jne
ja
hlt
or
push
mov
stos
dec
xor
sbb
push
popf
popa
lcall
ret
sub
cmp
sub
xor
cmpsl
popf
and
aam
push
cmp
subb
rclb
je
movsl
add
pop
pop
dec
ror
jmp
bound
pop
sub
jae
inc
movsb
mov
lea
cmp
mov
mov
sub
mov
sahf
insb
imul
push
out
dec
xchg
mov
imul
cmp
inc
lods
sub
imul
orl
xchg
or
or
push
pop
aad
sbb
dec
push
shll
and
dec
inc
add
fabs
fisubs
fucomip
or
push
dec
xchg
ljmp
or
jb
push
push
cwtl
xor
in
pop
into
jns
lcall
adc
cmc
push
stc
int3
xchg
sub
sbb
pop
inc
dec
add
rcrb
mov
adc
es
call
dec
xchg
lret
divl
hlt
stc
dec
adc
pop
filds
shlb
push
xor
push
sbb
fwait
add
shrl
fninit
jp
data16
mov
outsl
je
dec
sbb
cmpsl
fsubrs
jg
sub
dec
int
jno
pushf
cmp
lret
sbb
xchg
inc
andl
orb
mov
ss
hlt
maskmovq
testl
mov
repz
sahf
sahf
push
cli
add
shrl
dec
lods
push
push
scas
mov
ret
or
push
jg
inc
cmp
mov
and
addr16
xor
shll
pop
cmpsb
out
fwait
loopne
repz
jbe
jecxz
mov
xchg
das
pop
inc
inc
and
popa
and
cld
int
out
fsubl
out
faddp
das
push
add
loope
ss
inc
and
adc
testb
aaa
xor
gs
stos
xchg
sbb
lods
or
fdivr
test
inc
aad
xchg
ficoms
jns
push
out
or
test
out
scas
xchg
jne
sub
inc
sti
adc
out
mov
push
or
inc
sbb
mov
dec
dec
lret
int3
push
sbb
cmp
fdivs
sub
std
int
add
or
mov
add
lock
xchg
bound
lret
jp
shll
and
vandnps
mov
or
pusha
loopne
push
cmp
mov
outsb
scas
xchg
jle
and
dec
and
psubd
daa
cmp
mov
add
test
mov
mov
jns
mov
fs
pop
in
aas
lea
inc
cmc
push
xor
mov
dec
or
arpl
ds
xor
xor
lock
out
add
push
sbb
std
fwait
popf
and
ss
repnz
inc
lret
jecxz
out
or
insl
mov
mov
or
push
enter
dec
jp
jmp
xlat
leave
inc
inc
xor
negb
or
mov
xorl
jnp
inc
add
mov
mov
jg
mov
xchg
cltd
jb
dec
dec
rorb
aas
lea
xor
or
mov
test
mov
jle
gs
daa
testb
pop
and
dec
scas
push
addr16
mulb
xchg
push
popa
testl
pop
loope
jnp
adc
lock
out
mov
pop
cmp
cmc
divb
call
lods
cli
sub
cmp
cld
pop
js
lahf
or
mov
xchg
shl
insl
push
std
movsb
push
out
push
outsb
or
fs
or
loopne
bound
mov
mov
into
adc
es
ret
xchg
lods
push
dec
test
inc
aad
and
mov
adc
xor
movsl
and
lods
fildll
and
sbb
jp
int3
push
fdivs
mov
test
filds
subb
mov
in
popa
out
aam
adc
pop
and
fidivs
fists
jae
inc
das
mov
sub
test
popf
mov
mov
mov
and
xchg
das
pop
and
hlt
pop
cmpb
mov
xor
lods
pop
imul
cwtl
sti
push
jp
adc
jo
mov
lahf
push
movsb
ja
into
scas
xchg
pusha
mov
in
mov
repz
or
outsb
insl
scas
test
fs
stos
xchg
pop
pop
push
dec
out
sbb
loopne
cmp
stos
clc
add
push
cmp
cwtl
dec
aam
dec
loop
sub
dec
push
pop
ds
jl
lds
cwtl
mov
arpl
mov
in
xorb
std
jo
cmp
out
in
mov
cli
mov
jle
mov
push
sbb
and
ud0
cmp
mov
cltd
pop
jp
and
repz
lahf
fmuls
mov
pushf
pop
jmp
add
add
jecxz
pop
and
mov
dec
xchg
out
fisttps
xor
push
or
jb
xor
cli
test
cmpsb
xchg
mov
pop
in
xor
sbb
lods
int
rcr
add
les
cmp
and
lods
mov
add
dec
out
fstps
push
dec
repnz
daa
mov
mov
add
std
outsb
fldl
lds
add
add
bnd
mov
sbb
orb
cmp
bound
jp
movsb
mov
add
mov
aaa
pop
std
sbb
adc
mov
jmp
int3
adc
xor
je
std
sbb
int
adc
dec
pop
mov
mov
push
stos
imul
lock
xchg
and
imul
sysenter
mov
sub
test
gs
leave
mov
ss
xchg
clc
sub
addr16
imul
jnp
jne
and
xor
adc
leave
popf
ljmp
pushf
add
jnp
sub
fnstcw
mov
inc
out
xor
fnstenv
test
stc
rorl
out
pop
ss
adc
push
push
and
jb
add
jno
push
inc
ror
fidivs
sub
aaa
inc
ficompl
jl
cmp
popa
or
push
pop
or
in
and
adc
mov
pop
push
sbb
mov
movsl
adc
xor
inc
in
ds
test
enter
jbe
loopne
das
xchg
test
push
test
xlat
add
push
lods
stc
test
pop
or
movsb
mov
mov
mov
jl
adc
jle
nop
xchg
xchg
call
or
xor
pop
push
test
mov
xor
push
mov
push
xchg
loopne
pusha
out
jbe,pt
lods
outsl
repnz
popf
fcmovnu
lret
cmp
cmp
scas
xchg
fucom
test
pusha
cwtl
cmpsb
das
xchg
xor
jmp
mov
imul
mov
mov
and
outsl
mov
adc
inc
jp
popf
addr16
mov
jnp
roll
shr
mov
movsl
pop
out
push
lea
mov
popa
mov
fisubs
fistl
ret
pop
pop
gs
lcall
fmull
ss
adcb
out
and
lock
inc
movsb
int
lods
je
and
mov
lretw
pushf
and
pop
nop
insl
lret
cmp
cmc
mov
push
shll
mov
inc
inc
inc
fnsave
or
jno
xchg
mov
inc
dec
add
stc
int3
inc
or
cmpsb
or
les
mov
mov
sbb
mov
stos
or
mov
stos
xchg
les
or
adc
movsb
mov
mov
dec
pop
sbb
loop
cmp
jae
int3
xchg
add
or
repnz
loope
xor
sbb
cmp
cld
pop
xor
jge
loopne
push
outsb
leave
pop
insb
or
xlat
sahf
inc
imul
sbb
or
push
ret
sbb
xchg
test
fucom
iret
or
cpuid
imull
adc
mov
jge
cmp
mov
out
lods
sub
xorl
out
mov
fwait
pmaddwd
mov
jle
pop
loop
mov
stc
push
cmp
mov
ss
popa
jecxz
inc
je
imul
sbb
inc
int
inc
xor
mov
pop
add
imul
adc
mov
push
sbb
ret
pop
call
int
loope
jge
sbb
fiadds
daa
mov
icebp
mov
test
push
xchg
mov
test
repnz
dec
sbb
and
cmpsb
clc
loop
scas
xor
sbb
mov
jmp
out
push
test
insb
jmp
test
push
ret
enter
sub
lds
cli
fisttpl
out
lahf
clc
ficomps
addl
dec
fistpll
push
jmp
call
cmp
xor
outsl
in
loope
and
aad
push
lock
inc
jne
jg
gs
lahf
in
dec
add
popf
pop
mov
jbe
mov
ldmxcsr
imul
cld
push
pop
push
ljmp
mov
xor
movsl
mov
pop
and
out
out
xchg
sub
fmull
inc
mov
jge
adc
xor
xchg
loope
push
in
ret
and
aas
pop
imul
arpl
dec
mov
outsl
out
movsl
aam
cld
sbb
sub
adc
push
mov
daa
pushf
cltd
mov
outsl
int3
popa
shll
add
add
adc
sarb
xchg
sbb
jnp
mov
lret
aad
xor
add
je
andb
adc
adc
fisttpl
jle
int3
js
fdivl
xor
xor
pushf
pop
pop
popa
mov
push
jl
popa
or
lahf
sbb
sahf
sub
sbb
push
sub
xchg
in
mov
cmp
lock
xlat
jmp
sub
push
test
mov
nop
rorb
out
mov
mov
pop
fcmovne
mov
repnz
jge
int
mov
lock
pop
inc
stc
push
xor
rorl
jle
jp
add
ror
out
loope
rclb
push
pop
mov
aas
pop
jb
sub
fsubl
push
mov
out
or
arpl
cmp
push
pop
push
lahf
mov
mov
jmp
add
or
jne
loopne
cmp
jo
and
mov
and
inc
fcomip
cltd
adc
hlt
sub
mov
mov
xchg
xor
sub
sbb
xor
cmp
js
pop
jns
adc
jno
mov
out
insl
fistpl
fists
push
pusha
push
xor
int
xchg
push
push
ret
loopne
cltd
xchg
add
leave
adc
fcomps
cli
and
in
or
jb
pop
fstl
fnsave
addr16
setno
cmpsb
ja
je
mov
push
cmp
daa
inc
pop
fisubrs
inc
popf
push
scas
mov
jmp
push
sbb
jp
push
adc
into
fbstp
dec
popa
test
mov
in
pop
daa
inc
je
arpl
or
jmp
arpl
mov
arpl
sahf
xor
jno
pop
push
fs
daa
adc
jo
sub
jge
xor
mov
jecxz
cli
dec
cmp
inc
mul
sub
mov
add
jno
lea
ljmp
aad
jp
xchg
or
ret
or
fldt
insl
pop
push
enter
loope
lar
or
fisttps
push
fwait
imull
cmp
iret
rorl
nop
hlt
xor
mov
pop
test
sub
push
push
dec
arpl
fs
add
and
inc
outsb
mov
negl
fmulp
mov
sub
popf
test
flds
fmull
or
repz
lret
sbb
aad
out
popa
testb
cmc
mov
xchg
mov
jmp
push
mov
mov
mov
push
cli
adc
aaa
adc
addl
movups
cmp
xchg
sbb
pop
pop
inc
sbb
mov
mov
and
sbb
dec
mov
mov
pop
scas
xlat
insl
mov
jp
jb,pn
rcrb
xor
add
adc
movsb
test
cmpsl
add
fstl
xor
jbe
sarb
fwait
mov
push
sbb
mov
iret
enter
mov
adc
jg
jae
push
mov
inc
push
test
std
aas
sbb
or
ffreep
push
dec
and
test
jmp
sub
outsb
jnp
cli
push
and
dec
ds
bound
inc
sti
imul
jo
xchg
in
lahf
mov
sub
jb
lea
ds
mov
push
mov
imul
cwtl
call
cmpsb
test
and
xchg
faddl
xchg
lds
xor
push
testb
into
cmpsl
xor
js
sahf
sub
mov
ds
push
outsb
mov
sub
sub
sarb
ror
mov
divb
orb
and
cmp
hlt
imul
cwtl
jno
fs
arpl
sub
rolb
xor
ljmp
dec
fstps
subb
or
outsl
add
fs
and
mov
jbe
or
pop
stos
imul
cld
insl
movsb
sbb
mov
adc
lock
inc
add
mov
jne
jbe
add
dec
cmpsl
test
jnp
lods
inc
pop
sarb
imul
mov
xchg
push
pop
imul
cli
mov
jb
pusha
in
popf
pop
mov
out
int3
cmp
scas
repz
shll
sbb
push
in
scas
out
xchg
mov
cmp
fdivrp
xorl
jb
aas
je
mov
js
lods
aam
cmp
and
add
adc
loop
js
outsb
pop
jmp
jno
repnz
call
pop
or
lret
repz
and
ficompl
xchg
mov
inc
sbb
cmpsb
inc
bound
pop
or
xchg
jmp
mov
iret
pop
jp
sahf
cmc
scas
sub
xlat
js
jecxz
xchg
pop
sub
cli
dec
aaa
sub
fcmovbe
ret
inc
rorb
or
inc
leave
push
rcrb
xor
mov
mov
xchg
jg
sub
idivb
jle
dec
lock
ljmp
mov
aam
rorl
fsts
lock
add
fisttpl
cld
in
sbb
cwtl
in
xor
sub
stos
push
je
or
or
xchg
rep
js
sbb
cs
mov
scas
ficoml
xchg
inc
mov
divb
push
shlb
imul
ja
inc
shrl
fnstenv
inc
loope
jne
dec
mov
pop
rclb
push
cwtl
sub
xor
lods
call
aam
testb
sub
in
ljmp
inc
push
clc
cmp
stos
adc
mov
jg
xchg
aam
in
nop
mov
iret
inc
nop
push
inc
push
dec
pop
sub
out
pop
jnp
sbb
push
repz
loop
cmp
add
jbe
adcl
fdecstp
dec
test
mov
adc
inc
je
in
xor
test
repnz
cmp
ds
imul
and
xlat
iret
mov
mov
inc
and
xchg
pop
xchg
pop
jo,pt
mov
jae
lds
jo
mov
xchg
mov
inc
xlat
mov
adc
mov
xchg
mov
cmpsb
inc
cmp
dec
ja
pusha
das
sbb
push
xchg
ss
inc
sub
filds
pop
js
add
fstpl
mov
stc
cld
pop
lcall
dec
or
sbb
push
push
shlb
adc
mov
dec
and
movsb
popa
mov
sbb
in
xor
mov
jb
xchg
mov
pop
icebp
push
fisttps
icebp
test
mov
adc
cmpb
fs
mov
cwtl
xchg
mov
xchg
inc
pop
xchg
or
insb
pop
cmpsl
or
push
inc
jl
int
aaa
test
lds
inc
int
in
push
mov
push
ljmp
lret
repz
xor
add
mov
sub
je
mov
jnp
xor
push
cld
push
cli
xor
cltd
loop
test
js
mov
enter
dec
outsb
xchg
add
out
cli
lods
jecxz
and
ja
xchg
jl
jbe
mov
lcall
imul
mov
push
mov
and
jmp
ffreep
and
or
pop
loopne
je
adc
add
mov
adc
dec
mov
ljmp
inc
or
xor
outsb
test
psrlw
shrl
scas
cmp
mov
ja
inc
ret
jno
push
ja
inc
cmpsb
inc
adc
out
inc
sti
js
mov
mov
add
jns
in
mov
pop
js
inc
dec
das
cltd
dec
push
inc
mov
pop
add
mov
nop
xor
adc
mov
dec
movsb
pop
sbb
test
and
sbb
or
cwtl
arpl
fnsave
xchg
jle
fnstcw
int
loopnew
aas
hlt
rol
inc
push
mov
mov
push
data16
jno
lods
xchg
push
jle
mov
xchg
adc
mov
sbb
popa
in
ss
imul
xchg
sub
xor
pop
imul
shrl
mov
or
push
sub
add
sbb
pop
dec
and
or
xor
int3
xor
imul
xchg
add
loopne
data16
push
xchg
cmpsl
arpl
push
push
pop
mov
sbb
cmp
inc
lret
aad
jmp
lret
popf
pop
mov
cli
jp
repnz
cmovs
mov
pusha
adc
shll
data16
push
mov
insl
faddl
test
lea
mov
sub
pop
or
xor
shlb
push
lcall
shlb
jecxz
incb
ljmp
jbe
jle
push
cmp
iret
mov
or
jg
int
es
mov
or
arpl
loopne
adc
out
mov
lea
popa
aad
inc
rclb
xchg
add
jb
and
int
pop
sbb
out
jne
test
push
cmp
jnp
mov
leave
adc
sbbb
stos
dec
cltd
mov
out
cmovno
or
add
call
mov
enter
jg
in
leave
sbbl
inc
stc
data16
es
cmp
dec
pop
decb
pusha
lods
jne
sub
mov
dec
sti
sbb
mov
out
outsl
sub
loopne
pop
test
mov
push
add
pop
xor
lock
gs
cs
cli
imul
repz
add
ss
testl
inc
mov
push
inc
push
lds
lock
cmc
mov
sub
cltd
mull
fldl
lock
mov
pop
lock
jno
adc
lcall
and
jmp
fcoml
enter
lods
mov
pop
fcom
jae
les
movb
in
mov
add
sar
xchg
or
rorb
xor
pop
and
out
clc
test
mov
mov
aad
mov
xchg
adc
pop
fbld
cmp
cmpl
insb
push
gs
jg
pop
jecxz
sub
jae
rcrb
faddl
das
pop
pop
push
push
inc
into
enter
adc
xor
inc
icebp
xchg
loopw
jae
stos
mov
ss
es
iret
jecxz
ret
pushf
clc
les
andl
outsl
mov
push
push
stos
jle
je
daa
inc
mov
inc
add
or
movsb
out
aad
xchg
mov
ljmp
repnz
shr
gs
mov
add
mov
int
xchg
cmp
icebp
inc
out
or
hlt
inc
cmp
xchg
test
imul
movsb
nop
lret
sbb
mov
cld
stc
or
sbb
pop
dec
xchg
adc
sti
inc
inc
lret
mov
and
dec
shll
repz
jno
fadd
mov
mov
daa
lret
lea
in
jecxz
mov
pop
add
or
ss
ss
pop
mov
cltd
cmpsb
sub
xchg
lcall
xor
mov
mov
sahf
aaa
sbb
mov
mov
imul
aas
mov
mov
mov
dec
push
fldt
xlat
push
cs
das
movsl
rcrb
fs
jb
fstpl
cmp
sarb
jae
sbb
rcll
sbb
xchg
jmp
insl
je
mov
lahf
fiaddl
xchg
paddq
cmc
mov
cwtl
scas
sbb
loope
mov
mov
testl
and
cmp
arpl
sub
sub
lock
jb
aaa
inc
xor
clc
jmp
inc
dec
outsb
lahf
xchg
push
xor
and
test
push
sbb
push
mov
pop
movsb
mov
xor
cmp
dec
push
mov
mov
sub
dec
addb
pop
sbb
jmp
testl
push
pop
push
mov
movsb
rcrl
int3
inc
mov
mov
mov
inc
xchg
push
cld
scas
mov
scas
imul
mov
inc
xchg
fwait
mov
ljmp
das
imul
cli
xchg
pushl
mov
daa
sbb
js
push
xchg
dec
jnp
mov
cld
cli
adc
subb
fwait
mov
jne
adc
push
jmpw
sub
inc
or
jno
jecxz
or
add
shlb
adc
xor
lcall
adc
or
data16
add
dec
push
out
outsl
or
hlt
sar
fcmovne
jb
repnz
and
ja
inc
test
push
pop
dec
or
bound
mov
popf
add
lret
xor
cmp
xor
jecxz
and
les
add
or
add
xor
xchg
and
push
rclb
pop
cmp
loop
loope
imul
sbb
lock
test
sbb
and
ds
dec
jns
sub
pop
lds
inc
and
rcr
cmp
mov
stos
mov
pushf
sub
adc
sbb
and
xor
ljmp
and
in
or
inc
sti
ror
add
inc
or
xchg
xchg
xchg
sahf
ret
fbld
mov
pop
loope
or
pop
loop
les
test
jmp
push
mul
add
dec
cmpsl
mov
shrl
popa
jno
and
test
ret
jne
mov
dec
or
orl
mov
mov
jnp
pop
jb
cmpsl
push
je
fs
mov
pushf
or
jno
and
xchg
les
in
les
adc
mov
lods
pop
outsl
vpcomd
fadd
mov
cld
cmp
imul
mov
lahf
sub
lds
fisttpl
fidivs
stos
test
je
push
jmp
dec
sub
idiv
push
orl
pop
es
arpl
arpl
orb
jae
subl
mov
icebp
fnsave
lods
bound
sbb
mov
and
dec
mov
adc
pop
lods
clc
scas
aam
or
sbb
fcomps
jmp
jg
sub
cmp
xlat
push
adc
add
scas
sbb
jl
add
hlt
dec
stos
pop
dec
fsubrs
xor
xor
xchg
inc
sar
push
cs
mov
inc
into
add
xchg
repnz
cmp
aas
cmp
push
mov
xor
mov
add
sub
sbb
pushf
xchg
or
pop
pop
mov
or
xchg
xorl
pop
xlat
orl
xchg
aam
cmpb
gs
lcall
jb
adc
push
ja
push
or
cwtl
fbld
bound
mov
dec
lds
je
jmp
in
popa
test
sbb
xor
icebp
pop
mov
push
loope
xchg
sub
das
push
mov
push
push
inc
sbb
lods
rcrl
or
cli
pop
imul
jmp
or
pop
or
xchg
es
mov
mov
lock
pop
enter
sbb
ret
ret
test
in
sub
sbb
add
inc
jecxz
mov
dec
std
and
add
xchg
cs
stos
xchg
pushf
push
test
mov
dec
mov
nop
cwtl
mov
jge
hlt
sarb
inc
enter
cld
js
push
cmp
add
jp
pop
jecxz
aaa
icebp
scas
jle
imul
jb
jg
stc
scas
xor
fistl
shlb
pop
inc
sbb
sahf
xor
pop
call
out
lahf
ret
jae
pop
in
daa
clc
cmp
andl
insl
rorl
push
sbb
stos
cwtl
push
sahf
loopne
adc
cltd
insl
cmp
cmp
cmc
pop
pop
sbb
adc
cltd
inc
sbb
imul
out
popa
test
xchg
xchg
das
int
push
fldl2t
xor
adc
mov
data16
mov
pop
scas
push
xchg
repz
movsl
pop
test
repnz
pushf
loopne
cmp
and
mov
mov
out
or
mov
pop
sbb
fidivl
sub
ret
hlt
xor
enter
xchg
lock
xor
cli
dec
xor
xor
inc
xor
cmp
jae
xchg
add
mov
sbb
lahf
mov
or
xchg
mov
sti
inc
ds
es
es
jg
out
mov
aam
mov
repnz
dec
mov
out
lds
mov
or
orb
test
iret
mov
std
jne
aad
push
jns
pop
scas
lahf
push
ret
leave
loopne
test
pop
jp
subl
idivb
stos
push
or
jo
pop
int3
sub
jecxz
add
or
ret
in
mov
jmp
mov
loopne
repz
adc
and
inc
push
in
std
in
outsl
repz
out
cwtl
loopne
imul
push
rorl
inc
mov
sub
aas
jmp
cmp
mov
adc
lcall
dec
add
dec
mov
jae
xchg
fnsave
pop
int
xor
push
std
test
mov
xchg
scas
jno
ret
nop
pop
dec
testl
lret
cmp
cli
das
xchg
arpl
icebp
adc
mov
dec
sar
clc
ja,pn
jno
mov
loopne
sub
jo
mov
add
popf
jne
out
sbb
test
dec
in
test
movsl
insl
jmp
cwtl
mov
mov
lods
and
push
or
jb
loopne
decb
arpl
mov
push
aaa
jo
and
jge
fildll
inc
ret
andl
div
in
mov
sbbb
cmp
mov
cmpsb
rolb
mov
sbb
sbb
stc
mov
lea
fnstcw
jmp
sub
repnz
xchg
rol
lret
lods
in
and
into
pusha
mov
cmp
cmp
sbb
jo
push
das
notb
icebp
adc
and
out
push
enter
or
and
andb
push
imul
pop
add
add
ss
mov
in
in
inc
sub
arpl
xor
fwait
loopne
sbb
clc
sbb
sbb
inc
pop
out
xor
mov
or
mov
xchg
pushf
xchg
jmp
add
scas
sahf
dec
lea
mov
das
out
adc
in
in
fwait
hlt
es
lea
jmp
fidivrs
jp
jae
les
jnp
aas
pusha
cli
stos
sahf
scas
dec
les
jne
dec
aaa
shrb
jb
out
jp
fldl
fmuls
sbb
fs
and
jle
and
pop
jbe
int
daa
push
push
ret
and
outsl
or
mov
xchg
fcompp
sub
stc
loopne
push
test
iret
or
mov
mov
push
popa
dec
sub
sbb
sarl
mov
jno
mov
loopne
das
dec
fstpt
shll
sbb
enter
scas
test
mov
ja
gs
dec
mov
fidivl
sahf
dec
jecxz
inc
push
pmaxub
stos
sbb
push
test
sahf
add
ds
fsubr
inc
dec
aam
mov
and
jecxz
inc
mov
out
mov
daa
icebp
jge
insb
mov
in
or
lret
pop
lret
fwait
dec
mov
jmp
shlb
jnp
push
push
cmp
mov
insb
scas
fs
addr16
push
sahf
add
and
popf
bound
push
pop
xor
popf
outsl
aam
xlat
mov
ljmp
mov
mov
and
pop
adc
xor
xlat
pop
cmp
lods
cmp
inc
xchg
and
mov
out
adc
adc
push
out
out
xchg
pusha
adc
cmp
xchg
sbb
ret
jo
push
movsb
or
out
sar
cli
ja,pn
mov
test
mov
test
jno
sub
nop
pop
xchg
stos
js
decb
inc
mov
ja
or
ret
xchg
cmpsl
mov
adc
adc
cmp
pusha
xchg
fldl
or
rol
adc
cmp
inc
mov
push
sbb
pop
lcall
jg
insb
decb
ss
cmp
sub
mov
inc
xchg
mov
inc
mov
gs
lret
and
pop
xor
pushf
push
clc
cmp
or
sahf
xchg
push
or
mov
sub
dec
mov
mov
out
pop
loopne
repnz
mov
pusha
in
test
in
das
imul
aaa
fwait
imul
sub
push
lret
push
movsb
sub
out
push
xchg
cmpsl
add
sub
cmpsl
or
test
mov
mov
aad
dec
xchg
dec
xlat
add
lcall
mov
inc
mov
jecxz
push
in
xchg
ret
xchg
mov
in
lret
inc
out
pop
xchg
or
add
push
push
aam
repz
mov
mov
aaa
mov
dec
stos
mov
int3
test
addr16
or
insl
cmc
push
dec
or
or
sub
pop
mov
dec
add
sbb
mov
mov
push
sbb
jecxz
mov
into
gs
movsb
sub
stos
cli
adc
cltd
scas
mov
int3
pop
fstps
jno
mov
lods
ffree
pop
in
mov
jecxz
adc
adc
scas
jnp
in
pusha
or
jecxz
mov
push
sub
and
jns
jnp
dec
shll
and
and
cltd
ja
sub
test
scas
les
sbb
andl
mov
dec
mov
out
add
push
sbb
jno
jns
push
aaa
mov
xchg
sub
daa
or
iret
dec
xor
movsb
mov
sbb
xor
mov
adc
cmpsb
mov
xchg
push
fisubrs
repnz
jbe
xor
cltd
call
es
mov
in
cmp
pop
fwait
sub
test
in
jnp
cmp
inc
cwtl
inc
dec
dec
rclb
jbe
push
push
push
sub
xchg
fstpt
xchg
scas
mov
xor
jae
movsl
fidivrs
push
sub
test
adc
lahf
mov
fcmovb
sahf
jmp
sbb
push
icebp
bound
fistpl
fst
leave
xchg
inc
pop
xchg
xor
jns
jp
mov
dec
stos
scas
or
and
fstps
fistl
sbb
add
scas
pop
daa
xchg
pop
adc
dec
push
hlt
push
push
add
sahf
dec
mov
lods
adc
xor
pop
cltd
or
pop
dec
push
pop
or
sbb
sub
xchg
cwtl
aad
aad
nop
test
push
and
adc
xor
ret
mov
clc
or
push
int
out
jmp
ja
dec
mov
pop
rcrb
mov
inc
mov
ret
and
fcoml
xchg
jne
insb
add
jnp
das
enter
insb
ret
int3
dec
repz
mov
cmp
adc
jecxz
lcall
lahf
pop
test
bound
mov
sub
inc
xor
cld
outsb
cmp
mov
xchg
fildll
fldl
clc
test
ret
adc
outsb
mov
jne
hlt
inc
popf
fisttpl
or
mov
insl
push
in
push
out
cmp
lds
je
jb
ret
ljmp
shrb
inc
insb
in
loop
enter
fisubl
dec
cmpsl
push
mov
iret
mov
mov
lds
jg,pn
pop
and
stos
sub
movsb
xchg
lods
icebp
ret
inc
mov
inc
inc
pop
nop
mov
dec
adc
inc
jns
test
aad
stos
or
out
fidivl
dec
scas
xchg
inc
ficompl
lods
call
sub
fmul
inc
pop
fwait
xor
xor
rcl
jl
xchg
in
and
mov
cmp
xchg
divb
xchg
cmc
in
xor
adc
leave
mov
movsl
loop
gs
xchg
or
aaa
sub
in
sub
shll
add
js
test
pop
mov
hlt
or
aaa
lea
push
xchg
addr16
cmp
push
sub
test
in
or
push
cmovno
fisttpll
jg
and
mov
cmpsb
cmp
xor
jae
jbe
in
sbb
ss
fisubrl
sbb
jl
pop
fldt
int3
lahf
mov
jne
xor
push
dec
fsubs
xor
push
pop
xor
cmp
jb
add
xchg
adc
test
sbb
xchg
je
sbb
or
pop
cli
jecxz
jmp
xor
fwait
aad
jmp
sbbl
frstor
insl
cmc
icebp
inc
sbb
movsl
jmp
push
inc
mov
or
iret
dec
test
dec
sbb
or
flds
imul
insb
stc
adc
js
shl
cmpl
dec
push
mov
int
sbb
pop
outsb
or
jne
push
xchg
adc
mov
adcb
push
hlt
jb
ret
and
push
fldl
fimull
subb
sub
add
jns
push
test
lock
mov
lods
in
stos
dec
das
ljmp
and
mov
mov
mov
addr16
test
xchg
stc
out
fs
inc
aaa
xor
lds
mov
mov
jg
call
scas
or
dec
cmpsl
adc
movsl
jne
mov
decl
mov
lret
in
fwait
aad
orl
mov
add
add
mov
mov
in
sub
xor
roll
jns
mov
or
pop
pop
xchg
dec
mov
popa
mov
sub
roll
ljmp
iret
cmp
imul
cmpsl
frstor
mov
inc
fadds
push
mov
mov
push
inc
imul
sub
popf
inc
and
cmp
leave
xor
fists
ja
and
imul
clc
aad
xchg
add
dec
inc
testb
es
pop
mov
xchg
je
loopne
leave
call
xor
lods
cmp
mov
xor
nop
scas
jnp
xchg
leave
mov
js
mov
dec
mov
cmpsb
imul
push
in
cs
push
loope
dec
aaa
mov
and
pinsrw
push
loopne
pop
fs
cmp
xchg
push
sub
into
lahf
icebp
inc
jnp
out
lods
test
sbb
lock
sbb
nop
mov
xchg
and
push
and
sub
sub
test
fbstp
inc
shrl
sbb
lcall
popa
push
lock
push
jmp
mov
pop
aaa
in
xor
dec
jns
icebp
push
mov
push
leave
sbb
pusha
sub
popa
aad
push
mov
icebp
mov
sbb
xchg
imull
lea
lock
or
repz
pop
mov
out
jecxz
fistl
pop
xchg
ret
sub
call
mov
out
or
jge
add
lea
fiaddl
inc
aaa
shrl
or
shrb
push
xchg
dec
jp
imul
inc
cmp
les
or
ficoml
fs
int3
push
out
push
mov
cmp
ror
sbb
inc
in
scas
cmpsl
and
rep
icebp
and
pop
mov
mov
pushf
lds
and
es
mov
into
cs
adc
js
rorl
je
pop
and
aas
pop
popf
or
setbe
inc
pop
cmpsb
jns
mov
sbb
xchg
xacquire
dec
fwait
out
cmpsl
sub
xchg
mov
shll
cld
adc
mov
sub
and
lea
xchg
ja
jo
and
jecxz
bound
outsl
dec
xlat
cli
cwtl
movd
js
cwtl
enter
and
lcall
sub
xor
outsl
add
xor
shrb
movsb
mov
mov
mov
push
xlat
sbb
jg
fidivrs
jge
mov
ficoml
jecxz
cmp
orb
push
loope
daa
xchg
push
mov
cmp
pushf
mov
mov
stos
addr16
aad
adc
xor
pop
rorl
fiadds
mov
test
in
mov
jno
sub
sbb
lea
gs
xchg
rclb
and
or
fidivrs
out
pcmpeqd
jb
add
dec
nop
lret
mov
aam
mov
mov
adc
dec
push
or
dec
add
iret
xor
out
mov
jl
adc
stos
xlat
repz
lea
sub
jae
leave
into
loop
and
pop
jnp
add
push
sti
or
loope
sar
or
outsb
inc
js
push
fwait
dec
and
mov
int
roll
loop
repz
enter
sub
faddl
repnz
dec
mov
cmp
andl
jecxz
insb
sbb
in
fdivp
lahf
and
push
sub
push
cwtl
lret
cmpsb
testb
cmpl
and
dec
or
aad
pushl
xchg
ljmp
jg
test
sbb
movl
in
repz
adc
cmp
stos
xorl
sti
aaa
rorl
xchg
sub
sub
fidivrl
shll
fdivl
test
lcall
sub
aaa
mov
jae
jp
les
test
in
jg
les
leave
dec
leave
je
outsb
jmp
mov
bound
push
in
or
repz
fs
iret
popa
adc
xchg
incl
mov
rol
int
pop
adc
xchg
mov
adc
stos
nop
clc
ljmp
and
pop
and
push
aaa
mov
jecxz
mov
sub
jne
lret
inc
or
sbb
push
insb
jge
or
jae
mov
jp
cmp
push
jle
repz
xchg
push
jg
repz
rclb
or
mov
lock
roll
mov
test
mov
xlat
lret
sbb
cwtl
das
imulb
movsl
in
push
sbb
xchg
mov
iret
mov
hlt
jnp
xor
pshufw
xchg
scas
sbb
dec
andl
fwait
pop
inc
mov
sarl
jb
iret
scas
hlt
sbb
push
jns
sbb
push
mov
and
stc
popa
es
call
adc
loop
mov
out
pushf
loopne
outsb
pop
mov
mov
add
fucom
xchg
out
faddp
stc
ljmp
and
scas
loopne
addl
mov
pop
pop
test
arpl
or
xor
push
xor
sahf
jl
jmp
test
test
stos
js
dec
cmpsb
imul
aas
aaa
loope
cld
pop
outsl
dec
jg
aam
ja
test
inc
hlt
jo
mov
cmp
outsb
cli
xchg
dec
dec
xchg
jp
in
xor
lods
ret
js
cmp
iret
mov
arpl
inc
lahf
in
cmpsl
mov
push
int3
sub
sbbb
cltd
in
lahf
dec
push
sarb
popf
adc
clc
std
jg
adc
test
cmpsb
pop
aas
in
cmpsl
movsb
repz
lods
xor
cmp
repnz
mov
sar
mov
add
dec
jl
xchg
adc
xor
push
sub
pop
ja
negb
andl
cs
mov
push
lock
add
cmpsb
in
and
add
shl
mov
sub
icebp
movsb
int3
push
inc
leave
mov
into
out
cmp
in
or
lcall
cmp
ja
aam
out
push
and
push
sbb
fsubr
xchg
sub
add
jmp
cmpsl
stos
lcall
je
adc
call
mov
push
repz
xor
rcrl
imul
push
mov
fldcw
push
icebp
jmp
cmp
jne
dec
xchg
ds
sub
loope
out
or
stc
sti
imull
lods
gs
pop
loopne
mov
test
imul
out
into
lock
test
push
test
int3
inc
nop
ret
dec
mov
popf
icebp
shrb
xchg
mov
leave
data16
xchg
fbstp
dec
outsl
cli
iret
cmp
aam
add
sbb
add
movsl
xchg
inc
negb
mov
mov
jo
pop
xchg
sti
push
jle
call
lret
cmpsl
jge
subb
pushf
cmp
cltd
aaa
out
or
pusha
or
sbb
aam
xchg
mov
inc
out
sub
clc
mov
insl
push
lea
sti
cmp
mov
fsubs
jne
xor
hlt
sub
add
mov
insl
jle
repz
or
mov
mov
xlat
mov
xor
jnp
or
xlat
and
aad
mov
cmpsb
mov
xor
sti
or
scas
gs
inc
or
jl
or
lret
mov
je
jge
ds
cmp
adc
bound
sahf
mov
xor
movsb
sbbb
outsl
in
mov
pusha
sbb
jns
jp
and
sub
aam
out
push
adc
sub
ret
cld
jae
add
ljmp
call
sti
paddusw
aaa
stos
dec
adc
add
bound
scas
adcl
sub
xchg
dec
cmp
pop
or
pop
mov
idivb
andb
rcrl
inc
ss
js
adc
js
mov
jbe
sti
jbe
fiadds
inc
xchg
mov
push
gs
iret
push
sub
je
fstpl
clc
in
mov
push
ror
pop
ss
pop
imul
ret
mov
fisubl
dec
xchg
push
add
jl
pusha
mov
movsl
sbb
jo
jmp
int
or
cld
mov
cli
test
jle
pushf
idivb
sbb
fxch
inc
and
xchg
testb
notl
and
push
shrl
outsl
mov
adc
vandnps
call
sub
nop
fcoml
movsl
adc
sarl
jecxz
inc
sub
jl
push
xor
sti
stos
pop
in
sub
out
xchg
pop
sub
stos
xor
xor
js
sahf
out
bound
xchg
cmp
int3
xchg
inc
fsts
aad
adc
outsb
push
cmpsl
popf
repnz
jns
push
push
incl
dec
mov
and
xchg
adc
mov
fsubrl
adc
out
mov
sbb
out
mov
mov
stos
push
mov
mov
sub
cmp
ret
cmp
popa
add
int
stc
scas
inc
sbb
fstpl
lret
xlat
idivb
mov
or
sahf
lret
add
push
sub
jae
shlb
jl
iret
push
mov
and
lcall
pop
xchg
test
arpl
sbb
add
or
rcr
mov
jns
mov
test
jle
lods
jg
adc
js
movb
or
push
stos
ret
xor
cmp
lahf
roll
xchg
mov
stos
sub
mov
jne
enter
inc
out
xchg
lods
out
xchg
jo
or
xchg
or
sti
scas
fbstp
pushf
push
push
mov
sbb
scas
sar
nop
repz
icebp
add
je
and
sbb
and
push
ja
sub
mov
hlt
in
ret
ja
inc
cltd
add
jne
out
sbb
adc
inc
and
test
mov
insb
cmp
loopne
jle
sti
mov
sbb
ljmp
jb
mov
stos
lock
xorl
iret
shrb
popa
and
rcrb
fistl
mov
bswap
pop
idivb
mov
adc
mov
int3
push
mov
arpl
scas
bound
mov
pusha
dec
jnp
popa
in
stc
rcll
scas
scas
or
movsl
in
xchg
xor
inc
stos
ret
and
xor
cmp
shlb
jmp
adc
addr16
ljmp
into
push
scas
push
adc
mov
sub
cwtl
mov
dec
adcb
jb
clc
pop
rcrb
insb
dec
push
insl
mov
xchg
movsb
mov
inc
add
scas
jbe
xlat
adc
cld
push
jae
mov
inc
cli
xchg
outsb
jle
push
mov
ja
adc
mov
mov
sub
push
js
dec
subb
push
and
adc
jae
loope
dec
movsl
cmpsb
push
jle
je
sub
inc
mov
insb
or
and
jae
stos
stc
add
inc
mov
rclb
aaa
ds
cltd
in
mov
lds
mov
into
pusha
loopne
sbb
movsl
pop
dec
fmul
xchg
loope
xlat
pop
and
dec
rcrb
jl
xchg
sub
push
jne
xor
pushf
int
pop
sub
mov
scas
pop
push
mov
mov
xor
sbb
cmpsl
xchg
aad
mov
xorb
pop
std
xchg
xchg
adc
or
cmp
lret
push
push
fcompl
xchg
sbb
aas
jmp
adc
imul
test
cwtl
and
mov
or
out
xchg
adc
xlat
int
xor
push
adc
xchg
mov
dec
ja
test
sbb
jge
int
mov
pushf
test
or
nop
cmp
push
mov
in
mov
nop
xor
fistl
xchg
icebp
call
jmp
xor
dec
xchg
clc
rolb
pop
fimull
gs
es
loope
fwait
stos
mov
ffree
rol
shrl
dec
or
xor
sub
mov
push
push
mov
jecxz
jnp
fsubl
fidivrl
dec
add
mov
pshufw
test
mov
mov
fs
mov
lods
roll
cmp
dec
jl
cmc
test
adc
fdivl
in
or
hlt
outsl
insb
xchg
push
shlb
jbe
mov
lods
push
movsb
adc
xchg
into
dec
rcrl
or
pop
dec
fisubl
divb
lret
mov
push
xor
dec
and
in
sahf
mov
add
mov
push
xor
mov
notb
popf
dec
mov
xor
dec
outsl
test
push
cmpsl
and
or
aas
adc
insb
bound
mov
cli
cmp
jbe
lock
add
fiaddl
stos
add
mov
dec
scas
je
aas
xchg
push
dec
push
inc
jns
cmp
imul
adc
xor
cmpsb
scas
in
jl
mov
arpl
inc
xchg
jnp
pop
lret
xchg
pop
cltd
fdivl
jne
jb
sti
push
and
dec
mov
ljmp
iret
cwtl
cmp
sti
xchg
cwtl
xor
and
add
cltd
add
movsb
in
xor
xchg
mov
addr16
cmp
mov
loope
mov
out
push
popf
pusha
jo
xor
sahf
cmc
jp
mov
inc
add
sbb
inc
shlb
and
rorl
js
shrb
xlat
xchg
aam
mov
pop
test
cmp
jo
inc
popw
lcall
pop
lods
bound
lods
push
push
out
data16
clc
clc
jmp
add
sbb
pop
movsb
loopne
ss
adc
dec
inc
cmp
jmp
jecxz
jle
jo
stos
mov
clc
adc
xlat
pop
aam
ret
mov
jmp
push
or
fistl
adc
ljmp
or
data16
and
mov
adc
push
aad
mov
das
ret
mov
mov
or
xor
ljmp
mov
lock
loope
pushf
mov
and
loopne
add
les
push
je
push
in
addl
cli
cmp
fildl
sbb
cmp
adcb
aam
ja
mov
sub
jl
sbb
lods
inc
into
je
sbb
xlat
dec
add
push
pmullw
inc
fdivrs
sbb
in
mov
mov
stos
sub
adc
add
cmpsl
adc
cli
subl
xor
movsb
pop
addl
or
mov
out
pop
push
das
or
adc
loop
ffreep
outsl
shll
shll
push
add
dec
movsl
aaa
cltd
and
xchg
sub
xchg
add
mov
fldt
lea
inc
inc
jl
adc
dec
xchg
jnp
fwait
push
mov
sub
out
movb
and
fdivrs
jns
jge
into
out
jb
xor
cmpsb
pop
xor
mov
imul
adc
mov
int
jmp
xor
in
dec
jns
xor
jg
hlt
shlb
xchg
jmp
xor
mov
inc
inc
stc
xor
xor
jge
jecxz
cmp
mov
mov
popa
fsubrl
aam
imul
xlat
roll
fucomip
insb
sbb
add
insl
jbe
popa
test
mov
xchg
and
paddusw
ja
or
mov
mull
jecxz
rcrl
sti
sbb
pop
jb
adc
outsb
push
cli
jle
fists
cmp
dec
aas
insl
jmp
mov
loopne
fstpt
or
cltd
xchg
cld
push
add
lods
sahf
sbb
fstpt
out
shrb
shrb
xchg
sbb
pop
jge
xchg
xorl
pop
inc
cltd
mov
cmp
ds
and
arpl
aad
cmp
push
and
jo
xlat
inc
mov
fwait
xchg
sub
add
mov
pushf
jle
inc
lea
outsb
out
and
shll
decb
xchg
enter
nop
inc
out
repnz
push
sbb
aam
loopne
xchg
jno
jmp
inc
into
adc
lods
lea
in
xchg
or
lahf
ljmp
add
stos
inc
xchg
sub
sub
fs
loope
pop
jge
inc
lret
jg
icebp
jge
adc
lods
cmp
jge
mov
dec
mov
enter
add
iret
sbb
sbb
imul
or
adc
pop
sbb
and
jne
sub
jg
push
mov
adc
adc
lods
jge
in
jo
cmpsl
ljmp
fnstsw
insb
pop
jnp
and
push
sahf
jmp
mov
jecxz
xchg
lahf
sub
sub
cli
in
aam
mov
mov
pop
xor
aaa
cli
sbb
push
shlb
dec
mov
int
sub
mov
outsl
movsb
sub
call
in
sbb
outsl
das
in
aad
cwtl
sub
pop
mov
insb
neg
pushf
insb
jo
jl
sub
cmp
call
and
fs
inc
clc
ljmp
mov
xor
test
inc
fcoms
xchg
mov
xchg
cmp
push
add
bound
pop
jp
imulb
jae
mov
mov
xor
mov
adc
out
psadbw
in
xchg
inc
lahf
fwait
sbb
add
outsb
nop
fnsave
rorl
sbb
inc
cmp
in
mov
pop
xor
cmc
loopne
stc
sarl
pop
les
pop
jmp
nop
outsb
outsl
sub
push
inc
cmc
stos
mov
in
lcall
int
add
gs
xchg
cmpsl
dec
xor
dec
lret
xchg
xchg
ret
push
or
enter
push
inc
test
out
jle
sub
mov
lea
popa
out
ja
outsl
cmc
mov
in
mov
mov
outsb
jno
xchg
xchg
push
cs
cmpsl
orl
jne
sbb
cs
test
pop
sbb
cmp
mov
dec
jno
insl
daa
push
sahf
pop
jns
popf
imul
add
sbb
push
xorl
jecxz
and
push
or
inc
jg
push
stc
sarb
or
jmp
xchg
loope
loopne
cmpsb
or
loope
push
add
insl
stc
aaa
pop
cmpsl
sub
jno
jge
imul
out
sahf
insb
xchg
enter
dec
mov
cmpsb
in
push
and
hlt
shl
cmp
stos
jg
cs
add
jecxz
mov
push
lock
or
mov
shl
es
sbb
sbb
cmp
outsb
or
das
mov
pop
sahf
cmpsl
mov
jo
cmpsl
pop
push
pop
xchg
mov
cmp
loope
mov
out
xor
mov
pop
daa
movsb
mov
dec
in
or
mov
push
aas
and
dec
jnp
fcomps
mov
sbb
cmpsb
stos
mov
sti
mov
in
mov
add
jo
sbb
repz
sub
dec
sub
jne
loop
xchg
push
out
test
and
push
mov
xlat
std
dec
inc
mov
pop
insb
and
lods
cltd
ret
fsts
rclb
ljmp
add
jg
scas
out
inc
mov
push
pusha
push
mov
aad
pop
fcmovb
sub
dec
pop
into
jge
xorb
adc
repz
jle
sbb
es
push
sbb
sti
ficoms
cmp
or
and
xchg
lock
mov
into
aad
aam
pop
jecxz
push
pop
movaps
jb
stos
pop
lock
xchg
enter
pop
mov
pop
xchg
loope
and
xchg
pop
popf
fs
call
bound
stos
adcl
cmp
fstpt
repz
fcomp
test
add
jo
mov
xor
adc
je
jl
mov
lcall
fs
cmc
nop
jno
and
enter
mov
sbb
outsl
mov
rcrl
orb
pop
mov
mov
xchg
iret
sub
sbb
lret
add
xor
fwait
lods
test
mov
sub
repz
bound
and
loopne
xchg
pop
xchg
cltd
loopne
lods
sbb
adc
in
lret
push
mov
mov
jmp
int
mov
leave
aad
fiaddl
dec
cmp
test
cmc
ja
mov
lret
adc
pop
inc
xlat
adc
outsb
sub
mov
jecxz
lcall
rcrl
adc
into
fistps
push
fcompl
sbb
mov
inc
mov
lret
mov
mov
insl
shrl
inc
loopne
lods
dec
sub
in
in
loope
pop
lret
pop
inc
push
cli
fs
sbb
insb
mov
push
jns
adc
mov
lahf
sub
jno
sahf
mov
pop
adc
cmpsl
imul
xchg
lea
loope
repnz
jge
lret
insb
lret
stos
lret
mov
sbb
jns
fimull
xor
and
pop
inc
lods
sbb
das
std
imul
xchg
out
push
mov
push
loop
push
and
rcr
inc
cmpb
icebp
pop
xor
mov
leave
ljmp
insl
fcmovne
jae
test
imul
jl
fbld
jge
ret
outsl
ret
daa
mov
xchg
sbb
jle
addr16
fsub
lcall
or
pop
lds
int
scas
push
insb
ja
fstpt
push
or
jae
or
xchg
xor
jle
dec
inc
test
fmull
and
leave
aaa
jnp
xchg
mov
pop
xchg
movnti
xlat
das
mov
ficoms
push
mov
clc
leave
repz
dec
daa
divb
in
aas
and
fsubrs
jle
js
in
and
popa
or
insb
sub
mov
cltd
addr16
mov
pop
sbb
fwait
cwtl
mov
mov
mov
popf
pushf
pop
add
iret
pop
sbb
jnp
adc
dec
sbb
nop
popl
dec
lds
je
in
inc
arpl
paddq
jo
aas
and
mov
push
outsb
and
jne
and
je
push
sub
jno
lret
pusha
stos
add
push
insl
jo
int
cmp
les
cld
jnp
jb
inc
test
fnstenv
inc
jb
mov
insl
cmp
xor
daa
lret
fstl
jbe
ds
mov
dec
mov
xor
mov
in
jecxz
shl
and
xor
push
mov
xchg
filds
int
sahf
int
lds
aad
loop
enter
xor
dec
xchg
fdivs
inc
cld
jle
rolb
pushl
sbb
std
ret
pop
nop
pop
xor
dec
mov
lcall
fistpl
push
sbb
jmp
enter
int
fdivp
push
fs
xchg
lret
xor
fstpt
pop
sub
mov
testl
into
js
pop
cwtl
into
sub
jle
mov
and
mov
jmp
sub
or
hlt
movsl
inc
sbb
movzwl
push
adc
test
dec
pop
dec
inc
inc
nopl
xchg
psubusw
mov
cmp
shlb
inc
lahf
stos
lret
nop
cld
nop
push
test
mov
fstp
add
je
iret
das
mov
adc
cmp
mov
fsub
mov
push
repz
push
lcall
xchg
cwtl
mov
jg
ret
mov
cli
jnp
fmull
jb
cwtl
mov
cmpsb
repnz
shrb
fisubrs
mov
cmp
or
in
out
pop
adcb
dec
mov
cs
test
bound
leave
and
mov
sarl
lods
adcb
sub
nop
repnz
sbbb
jo
sbb
jle
xchg
mov
std
inc
out
int
push
jecxz
inc
jmp
fmuls
and
aad
out
cmp
xor
das
clc
mulb
notl
sarl
pop
pop
shlb
add
aas
sub
pop
sahf
xchg
or
xchg
aas
push
pop
sbb
aaa
dec
sti
xchg
sahf
mov
fs
xlat
sbb
addr16
nop
lret
push
adc
mov
out
inc
adcb
enter
clc
inc
sub
xor
jecxz
aas
jl
loope
mov
ret
pushw
and
pop
add
xchg
insb
scas
loopne
data16
ss
xchg
fwait
sub
sub
pop
push
push
inc
scas
xchg
lea
adc
outsl
int
mov
fstl
es
xor
mov
test
jnp
in
push
shlb
imul
mov
and
jnp
jg
or
scas
fildl
ja
xchg
test
mull
and
or
pop
pop
ljmp
ss
loope
bound
push
push
daa
jmp
xchg
out
xchg
jmp
lock
mov
ljmp
and
mov
aam
dec
lcall
sub
lcall
lea
jp
pop
pushf
stos
negl
cmp
inc
outsl
popa
adc
int
jno
cmp
jae
jbe,pt
in
dec
pop
xchg
xchg
leave
js
fwait
mov
flds
and
in
mov
sbb
cld
cmp
cs
stos
das
adc
or
xchg
xor
mov
out
sub
pop
cmpsl
xchg
sub
es
cmp
xchg
xor
lret
dec
inc
lds
jecxz
fidivl
dec
pop
pop
xor
dec
cmc
subb
test
or
jmp
jl
mov
pop
iret
adc
iret
sub
call
push
out
push
sti
repnz
enter
push
outsl
nop
lret
sti
fiaddl
pop
mov
adc
icebp
mov
hlt
sbb
cmp
sbb
xchg
sub
mov
testl
aaa
xchg
stos
out
inc
leave
or
sbb
mov
inc
xor
jae
add
and
inc
push
cmc
popf
push
outsb
mov
pusha
sbbl
sub
in
pop
mov
jmp
cmpl
loop
fcomps
jno
test
mov
and
mov
add
sbb
into
iret
cwtl
adc
pavgb
and
jcxz
idivb
cltd
dec
and
jno
push
jns
andb
mov
mov
andl
out
roll
js
fbld
ljmp
ds
fwait
xchg
jl
sbb
cmp
pushf
xor
sub
loope
insl
out
cli
in
jnp
mov
and
mov
sbb
scas
fwait
adcb
adc
mov
fs
mov
and
sahf
xorl
movsl
loop
jno
xor
insl
jle
xchg
dec
fwait
add
shr
xchg
pusha
push
and
pop
jnp
outsl
jmp
test
pushf
xchg
sub
push
jmp
push
xchg
cld
shlb
push
dec
and
push
mov
hlt
shlb
rorl
xchg
cmp
mov
loopne
or
sti
test
jle
aas
idivb
adc
mov
sub
movsl
std
cmp
aad
call
pop
lret
fsubr
inc
lds
jne
xlat
insb
stos
aaa
mov
addr16
pop
insl
outsb
push
lea
and
ret
pop
les
mov
jno
test
mov
nop
mov
inc
mov
cli
mov
xor
xchg
sahf
repnz
mov
lods
or
das
mov
inc
cmpsl
sub
cmp
lret
sub
xchg
decl
mov
xchg
xor
stos
cmpb
in
out
sarb
lods
mov
dec
outsl
xor
lock
jae
jns
imul
jle
jae
lret
shrl
cmp
mov
shlb
xchg
pop
sbb
push
jae
sbb
ret
sub
pop
mov
ja
mov
lret
xchg
xchg
dec
xchg
pop
inc
xchg
int
xchg
push
add
push
scas
dec
push
jl
mov
mov
ret
cltd
adc
mov
popa
lcall
cli
bound
mov
pop
pop
xchg
mov
movsb
adc
test
iret
fidivrs
enter
fcmovb
sti
sub
ret
dec
push
and
sbb
fwait
les
push
mov
mov
jnp
fs
jle
inc
mov
pop
mov
negb
ret
gs
leave
xchg
adc
ss
mov
xor
adcl
sub
cmp
daa
push
outsb
mov
in
xchg
inc
lods
sbb
cwtl
jb
adc
mov
xor
xor
push
orl
fcmovnu
xlat
xor
add
or
xor
fbld
and
shll
xchg
lret
ret
add
rclb
or
mov
add
shl
sub
mov
push
adc
sbb
xchg
push
stos
adc
jecxz
sbb
xchg
sub
push
jbe
pop
in
scas
mov
adc
lcall
outsb
dec
js
lods
dec
mov
xchg
pop
jae
cmpsb
push
jb
mov
scas
xor
cmpsl
mov
sbb
dec
and
test
cmp
roll
lods
add
mov
clc
xchg
jb
cs
add
xchg
dec
leave
jg
lock
mov
mov
std
popa
mov
or
jns
push
mov
mov
push
sarb
icebp
rolb
popa
icebp
ljmp
jmp
dec
mov
imul
jbe
nop
dec
push
cmp
cmp
sbb
mov
iret
add
dec
dec
lods
int
into
sub
xchg
xchg
push
push
pop
in
and
mov
test
gs
out
dec
es
xlat
insl
in
in
cs
movsl
insl
aas
ja
idivl
ficoml
ficompl
sbb
adc
adc
xor
pusha
adc
stos
sbb
add
inc
outsb
out
jnp
fcmovbe
mov
xor
mov
add
push
lods
fiadds
lods
mov
mov
lret
push
sti
leave
mov
xchg
xorb
adc
add
mov
ficompl
outsb
inc
pop
pusha
mov
pop
or
repz
cmp
or
or
jo
jne
and
in
mov
push
test
fildll
nop
imul
push
aad
ss
and
aaa
jnp
loope
adc
jb
into
stos
or
push
jno
jg
pusha
mov
add
jns
in
cs
mov
fldenv
nop
cmpsb
addr16
jecxz
movsb
in
xchg
loopne
jo
ret
mov
push
cli
out
call
push
mov
sub
add
mov
sub
sti
mov
add
cmpb
leave
loop
jge
test
cs
adc
mov
mov
push
pop
cmp
mov
cmp
sbb
lahf
ljmp
iret
addr16
rol
mov
in
adc
stc
or
aaa
loope
adc
mov
jbe
and
lret
pop
cmc
or
cmp
ja
sarl
jb
dec
rclb
push
dec
jle
mov
scas
push
sub
mov
loopne
ljmp
into
in
ss
ret
sbb
jmp
lods
les
mov
shll
lds
movsb
dec
adc
iret
loop
push
mov
xchg
push
jecxz
addb
cmp
xor
adc
in
add
mov
and
inc
cmp
fbstp
mov
and
push
lds
xor
and
loop
lret
pop
mov
clc
in
lret
cmpb
shrl
stc
mov
dec
and
mov
hlt
aad
lahf
jo
sbb
inc
lcall
addl
pushf
push
pop
or
ss
push
mov
ret
fcomip
std
enter
sbb
mov
jb
jae
imul
mov
fwait
pop
cmpsl
call
add
call
cld
cmp
jno
stos
test
nop
data16
das
les
dec
int3
ret
dec
lods
mov
push
xchg
push
adc
mov
xchg
das
mov
popa
and
faddl
xchg
mov
bound
arpl
mov
cmpsl
adc
in
call
movsl
dec
outsl
jg
ret
mov
shr
rcl
mov
sbb
mov
aam
mov
cmc
sbb
add
aad
inc
loop
in
push
sbb
out
fstp
dec
addr16
daa
or
popf
jmp
arpl
rorl
mov
xchg
push
cmp
das
fidivs
icebp
mov
pop
xchg
leave
add
pop
push
loopne
adc
movsl
jnp
pop
imul
les
lahf
das
stos
mov
cmp
xchg
xchg
leave
mov
jmp
adc
jo
jns
and
call
xchg
ret
loope
pop
pop
in
imul
jns
dec
xchg
sbb
pop
dec
mov
in
leave
mov
or
pop
sti
adc
lahf
push
and
add
add
push
cmpsb
add
dec
mov
fstpl
mov
or
dec
shlb
sub
lahf
or
std
addr16
fldl
jne
inc
fiaddl
mov
ret
pusha
lods
pop
out
imul
nop
icebp
adc
or
sub
mov
fwait
int3
adc
adc
jbe
repnz
dec
pushf
loope
push
adc
cli
mov
mov
jno
icebp
cld
mov
js
pop
or
outsb
jp
push
aaa
test
outsl
sub
movsb
dec
push
jne
pop
cs
mov
ss
xchg
jne
insb
dec
lret
ret
ret
int3
jns
mov
sub
in
iret
iret
and
and
outsl
xlat
push
inc
das
xlat
lods
mov
je
imul
pop
dec
incb
sbb
pop
lods
pop
push
out
or
rorl
sub
sbb
adc
cli
push
xchg
push
rol
sbb
insb
and
push
divb
pusha
push
add
daa
and
push
or
pop
scas
pop
insl
in
adc
cli
cmp
scas
cmpsb
sbb
inc
dec
sbb
mov
mov
lahf
add
mov
jl
inc
or
fwait
stc
mov
mov
ffreep
and
cmpsl
rclb
xchg
gs
xor
ficomps
adc
imul
subl
mov
adcl
movsl
int3
rcll
les
cltd
inc
sub
stc
int3
pop
add
or
test
aas
shlb
cwtl
test
mov
push
xor
shl
addb
mov
cmp
insb
dec
cmc
aaa
ret
fdivr
cmpl
cmp
dec
and
psubusw
or
and
andl
imul
cmp
jmp
arpl
enter
outsb
nop
in
push
ss
int3
push
ja
or
inc
call
in
xor
stos
jnp
pop
xchg
fadds
data16
and
loopne
daa
dec
hlt
xorb
push
push
in
sbb
adc
xchg
mov
inc
adc
xor
sub
adc
add
xchg
mov
data16
les
faddl
aas
das
js
mov
and
outsl
xor
sub
scas
mov
mov
add
pushf
and
xlat
mov
divb
fidivs
adc
out
lcall
add
out
mov
adc
data16
sbb
xor
aam
push
fbstp
mov
pop
inc
add
out
int3
cltd
xor
test
dec
cwtl
sbb
push
pushf
or
mov
in
idivb
push
in
mov
stos
sbb
push
pop
xor
test
or
add
jne
adc
lcall
cs
cmpsl
lea
xor
ja
fisubl
push
jns
lods
pop
aad
idivb
ret
xor
in
sub
sub
rclb
jmp
pop
xchg
js
stos
or
inc
sub
lods
pop
outsb
stos
mov
stc
xchg
cmp
and
movsb
lahf
dec
pushf
jno
cmpsl
out
inc
aad
leave
adc
mov
mov
mov
dec
fs
mov
in
sarl
jae
daa
andb
cmpsl
addl
lds
fs
mov
jne
leave
sbb
push
sub
dec
pushf
and
jb
out
jnp
or
in
iret
testb
jbe
mov
adc
adcb
fstp
gs
jnp
mov
fwait
xor
and
push
gs
or
and
sbb
add
repnz
push
aam
inc
mov
out
and
imul
insb
loope
sub
aas
xchg
popa
cmp
mov
dec
call
or
lret
pop
adc
call
and
int3
ljmp
pop
fdivl
movsl
lock
lods
mov
cmp
lret
jmp
pusha
mov
orl
push
push
xchg
xchg
fwait
push
mov
inc
xor
mov
sbb
stos
shll
andb
mov
xor
idiv
std
xor
insl
dec
inc
adc
xor
push
sub
cmp
es
mov
mov
sbbb
in
lret
incb
xchg
popf
xor
das
jne
xchg
jp
adc
inc
scas
pop
frstor
inc
cwtl
stos
mov
add
loope
xlat
push
stos
les
ret
cmp
xor
aam
cmp
xchg
jecxz
icebp
or
jns
jns
cmp
push
mov
and
jmp
fwait
adc
xchg
inc
pop
add
sbb
nop
pop
sbb
and
pop
out
aaa
mov
push
mov
sub
movsl
lods
neg
or
or
fstps
sub
lds
adc
xchg
lock
shlb
sarb
push
enter
jno
repnz
cs
scas
loopne
sbb
scas
sub
push
mov
pop
and
test
adc
aas
mov
add
jne
pop
jo
ljmp
fdivrs
bound
push
sbb
sbb
lret
pop
jp
aaa
jecxz
loope
cltd
les
ljmp
mov
lods
sahf
daa
pop
fisubl
pushf
push
addr16
push
fchs
imul
loop
xchg
pop
test
outsl
and
jp
cmp
push
sbb
jno
fs
push
cmp
fs
ds
ficoml
mov
push
cs
out
push
mov
shl
dec
mov
adc
ret
mov
jae
in
jg
mov
bswap
and
fcoml
cli
mov
push
push
push
jbe
mov
dec
mov
cmp
cmp
jmp
jecxz
cmpsl
outsl
lock
ret
outsb
insb
jg
fcompl
js
cs
mov
cmp
mov
cmpsb
rorl
add
inc
outsl
and
jg
mov
or
sar
and
jae
das
mov
xor
push
sbb
inc
mov
scas
es
cli
sub
nop
leave
divl
sub
aad
roll
mov
adc
dec
jb
ja
bound
loop
push
mov
mov
fwait
xor
or
xor
sub
and
or
add
in
test
test
fisubs
xchg
xchg
cmp
bound
scas
push
jle
adc
jle
cmpsl
adc
and
popf
push
sub
jmp
sbb
inc
inc
mov
scas
test
mov
fistpll
scas
xor
pusha
jnp
jb
xor
xchg
out
jl
pop
pop
cmp
xchg
xor
adc
daa
add
int3
hlt
and
clc
inc
in
shr
iret
dec
test
iret
xchg
add
adc
dec
popf
icebp
jo
push
cmp
mov
pop
repnz
mov
fstpl
fmul
xor
leave
push
push
mov
sti
aam
jae
insb
lds
hlt
xchg
and
test
test
lret
dec
cmp
frstor
int
or
jp
jnp
or
push
jge
bound
inc
mov
aad
out
and
out
jp
mov
cmp
call
push
cs
movsb
das
adc
mov
pusha
fwait
mov
fcoml
repnz
repz
stos
xchg
xlat
pop
sub
stos
rcrb
jge
pop
addr16
mov
movsl
adc
mov
dec
insl
mov
bnd
pop
imul
push
imul
and
and
mov
push
and
xchg
out
push
iret
shrl
test
inc
out
popa
lret
loop
dec
inc
insb
dec
jle
push
inc
sbb
loope
lods
imul
outsb
sub
adc
fwait
test
inc
lea
xor
test
test
pop
aam
ss
or
mov
lahf
out
hlt
xor
loop
sub
cmpsb
mov
sbb
and
in
pop
add
ret
ss
les
and
push
mov
cmpsl
addr16
mov
adc
inc
loop
and
jae
popa
sahf
sub
fwait
aas
inc
jge
cmpb
imul
aam
test
sbb
or
adc
scas
das
sbb
inc
cltd
jb
fstl
lahf
push
push
les
leave
inc
sub
inc
fsts
adc
fisubrl
and
repz
repz
xchg
sahf
jecxz
jle
xlat
test
cmpsl
sub
inc
pop
test
jmp
mov
or
int
in
xchg
jne
aas
aad
adc
push
mov
add
xchg
xchg
jle
rcrl
jae
inc
lahf
rcll
pop
mov
jge
js
jl
xchg
add
lea
cmp
mov
mov
pop
cld
sub
jle
xchg
fsubr
sbb
mov
lea
push
xor
aaa
dec
jp
ror
adc
bnd
enter
push
shrl
jle
int
test
mov
inc
push
les
hlt
pop
inc
cmp
nop
rcrb
adc
pop
subb
xor
nop
aaa
mov
lahf
fildll
out
xchg
xchg
pop
or
mov
mov
and
or
orb
insl
popa
bound
bnd
dec
sub
mov
movsb
jnp
adc
push
push
dec
into
dec
ljmp
mov
nop
dec
addb
cmp
mov
sbb
mov
pusha
jmp
gs
xor
das
dec
add
in
fmuls
push
mov
daa
sbb
ret
dec
mov
mov
xchg
lret
jns
xchg
lahf
pop
pop
test
je
mov
in
inc
jnp
dec
xchg
push
mov
fdivrs
cltd
loopne
arpl
sub
arpl
dec
adc
lret
and
rolb
mov
push
fldcw
fnsave
iret
inc
stos
dec
push
andb
in
jmp
popf
loope
push
fucomi
icebp
push
data16
mov
mov
push
xchg
jb
push
jbe
clc
push
test
cld
out
and
or
xchg
xchg
shrl
add
dec
scas
fmulp
add
les
xor
sub
sub
lcall
pop
out
inc
sbb
sub
push
mov
push
sub
popf
pop
cmp
cld
mov
mov
inc
fsubp
stos
cs
push
jno
mov
icebp
int
dec
xor
jne
mov
test
mov
call
jl
dec
add
dec
lock
push
stos
mov
mov
daa
or
mov
outsb
loope
lahf
imul
outsb
xorb
xor
rorl
in
sbb
sbb
dec
push
xlat
add
mov
sbb
int3
push
xchg
xchg
ds
ficoms
push
test
cmp
mov
adcl
xor
mov
mov
sub
ds
adc
fadds
pop
fwait
add
movsl
push
xlat
or
pop
push
test
or
push
lahf
cmp
inc
into
nop
jo
inc
das
outsb
inc
shlb
cwtl
mov
sbb
sbb
and
jno
cmc
push
in
and
sarl
push
mov
fisubrl
xor
and
push
mov
dec
inc
mov
adc
leave
ds
adc
call
jb
inc
popf
scas
pop
sbb
into
subl
outsb
lds
jb
inc
inc
insl
adc
inc
fcomi
sub
xor
out
out
jmp
gs
jp
sar
dec
stos
xchg
loope
cmpsl
cmc
pop
negb
out
pop
cmp
jmp
jecxz
cs
insl
mov
push
in
ljmp
fwait
js
insl
mov
test
insl
addl
mov
outsl
testl
cmp
or
call
hlt
cmpsb
or
cltd
lock
adc
cltd
cmp
pop
ss
push
lcall
mov
iret
lods
pop
insb
push
lods
mov
or
data16
push
push
mov
nop
data16
inc
es
jecxz
xchg
push
roll
lods
sarl
adc
mov
gs
add
out
out
jge
rcrb
add
mov
cmc
cmp
ret
or
sub
stos
icebp
sub
or
test
ljmp
xor
out
xchg
bnd
add
dec
cmc
rcrl
in
mov
test
dec
jle
dec
add
adc
mov
notl
test
jb
or
test
xchg
test
sub
push
cmp
lret
lahf
adc
or
mov
inc
mov
xchg
or
sbb
lcall
lahf
ja
es
jle
sub
lea
pop
cmp
mov
sub
xchg
or
push
push
jp
or
loop
test
add
dec
sub
dec
mov
add
movsb
sahf
xchg
fcompl
xchg
adc
frstor
enter
xchg
ja
cmpsb
xlat
insb
and
mov
pop
jno
jae
mov
xor
mov
inc
pop
jmp
sbb
fists
fcom
stos
mov
rcrb
loop
je
jnp
jae
sti
mov
clc
sahf
call
jmp
or
popa
adc
push
out
data16
repz
inc
into
das
and
xchg
dec
dec
mov
and
xchg
mov
leave
pop
mov
inc
adc
sub
imul
fisttpll
pop
cltd
fdivl
and
into
filds
imul
enter
data16
sti
and
insl
je
mov
js
mov
gs
pop
pop
push
mov
pop
mov
add
fstp
mov
jb,pt
ss
lds
ja
or
mov
outsl
adc
add
dec
mov
cmp
es
int
in
sysexit
lret
or
addr16
and
std
imul
add
sbb
or
pusha
in
pop
addb
aaa
in
decb
inc
sahf
jmp
mov
mov
jbe
push
dec
sub
and
adc
fsubl
imul
gs
xor
push
sub
xor
inc
dec
cltd
sub
ja
icebp
pop
jmp
jo
dec
xor
xchg
insb
pop
aas
cmp
ret
pop
xor
and
test
fimuls
enter
pop
inc
or
pop
repnz
ljmp
cmpsb
add
mov
push
inc
jmp
dec
divl
test
add
mov
pop
dec
push
outsb
xlat
cmpsb
and
sbb
int
inc
pop
xchg
pop
mov
sbb
movsl
lock
adc
popa
sbb
fwait
cli
inc
into
mov
lret
in
inc
scas
sbb
out
popf
adc
aam
fdiv
aaa
add
in
test
in
xor
xor
aas
std
ret
sub
aaa
cmp
dec
fmul
stos
add
out
mov
push
ret
sub
pop
mov
inc
cmp
insl
xchg
sub
aam
roll
inc
xchg
lret
adc
shll
adc
gs
inc
sbb
mov
xchg
shlb
xchg
and
lds
lret
js
addr16
and
jmp
fldl
repz
add
daa
inc
ja
sbb
aad
add
imul
rorl
sub
xor
call
mov
adc
cmp
mov
jmp
lock
imulb
lret
insb
jns
std
jne
add
icebp
inc
xchg
mov
mov
xchg
mov
dec
test
call
adc
in
xor
inc
fdivrs
test
je
jbe
push
clc
fidivrl
in
jnp
xor
cltd
loope
sbb
nop
jno
data16
enter
mov
and
or
xor
repnz
popa
dec
xchg
mov
mov
sbb
push
lods
popf
adc
adc
mov
shrb
rcr
push
addb
mov
frstor
cmp
cmp
cmp
inc
mov
popf
mov
call
xchg
sub
rcl
sti
sbb
test
xor
insl
test
xlat
jmp
pop
push
pop
mov
sub
stc
test
and
pop
cmp
add
fsubrl
jb
cmpb
sarl
cmpsl
mov
push
fsubl
xchg
out
mov
sub
mov
ljmp
add
push
lret
inc
jl
ret
add
and
mov
add
orb
sbb
xor
pop
cmp
push
arpl
mov
jo
mov
gs
cmpsb
aaa
xchg
push
aaa
inc
mov
mull
imul
or
mov
sub
mov
pop
add
add
ret
mov
pop
inc
cmc
xor
xchg
mov
or
cmpsl
shrb
daa
addl
lods
adc
shr
lcall
fwait
mov
dec
pop
or
cmp
loopne
inc
xor
frstor
mov
xorl
xor
ficoms
push
sbb
push
fs
pushf
sbb
cmpsb
imul
xlat
outsb
pop
push
dec
add
test
les
xchg
into
fldenv
int3
push
jmp
push
repnz
pop
dec
xor
mov
add
orb
push
push
mov
dec
jno
lock
loop
movsb
es
dec
xor
mov
lret
loopne
lods
and
mov
fldcw
sub
inc
pop
mov
daa
xchg
scas
or
xchg
mov
je
mov
insb
mov
repz
rorb
add
test
daa
ret
add
sahf
push
sbb
lds
stos
jns
jae
stc
cwtl
fmul
xor
inc
mov
mov
add
sub
arpl
dec
cmp
adc
adc
jae
lock
mov
jb
sub
mov
xlat
mov
jp
xor
into
mov
xor
pusha
push
or
jbe
cld
dec
lea
or
notl
test
icebp
cmp
push
cmpb
dec
jecxz
cmc
nop
fstpt
fmull
cmpsb
push
jne
rcrl
lret
mov
add
out
mov
dec
cmp
cwtl
subl
and
cmp
or
ja
mov
xchg
ret
repnz
sbb
faddl
and
add
data16
lods
adc
lahf
lds
pop
outsb
mov
fmul
jbe
xor
bnd
mov
inc
add
cli
shrl
stc
mov
sub
mov
sbb
mov
inc
add
xchg
mov
cs
shrl
test
pop
mov
insb
clc
mov
lahf
jmp
cmpsb
jmp
push
aas
jne
dec
jge
mov
and
into
out
loop
or
fsubrl
insl
int3
cmp
jne
arpl
push
mov
mov
repnz
mov
mull
orl
fmuls
flds
mov
das
lahf
jl
test
push
pop
inc
iret
inc
xchg
add
loope
add
rolb
dec
mov
shlb
dec
fwait
jle
in
cwtl
and
cltd
bound
xchg
or
icebp
jne
or
sbb
cli
cltd
das
movsb
xchg
mov
mov
pop
dec
mov
mov
xchg
ret
int
xchg
add
pop
int3
xlat
xlat
xchg
cmpsl
add
aad
sub
mov
mov
iret
jmp
test
fwait
decb
sub
push
dec
sbb
pop
test
inc
mull
or
xor
fwait
xor
push
cltd
aad
notb
jecxz
mov
fsubrl
add
jno
out
xchg
cmpsl
test
sub
adc
aam
into
inc
sub
jge
xor
cmp
aad
cs
imul
push
lret
icebp
and
mov
shlb
or
jle
icebp
fsts
jmp
inc
pop
cli
inc
mov
in
fucomip
mov
mov
push
adc
mov
or
xor
dec
cmpsb
cmp
das
and
jns
jecxz
fwait
lret
in
add
inc
cmp
mull
xor
mov
aas
add
stc
scas
xor
or
stc
in
xchg
xchg
xchg
mov
mov
mov
ljmp
out
dec
ja
outsl
xchg
cmpsb
bnd
imul
push
or
repz
test
mov
mov
mov
pop
or
adc
pop
cltd
mov
in
jb
sbb
xor
mov
mov
and
cmp
cld
sarl
aas
in
inc
bound
cmp
push
and
cmp
stc
mov
inc
jmp
loopne
push
dec
or
mov
lock
pop
push
in
and
scas
lret
adc
aas
mov
testl
inc
imul
push
mov
or
inc
pop
sub
xor
jb
xor
aam
and
hlt
bound
call
test
sbb
xchg
fdiv
mov
loopne
ror
sbb
mov
rclb
sahf
adc
mov
sahf
cli
xchg
leave
pusha
inc
jbe
out
push
cld
xor
shlb
xor
jne
out
fnstsw
pop
adc
rcrb
jp
loopne
out
test
lods
cmpsl
call
mov
push
sbb
add
pminsw
sbb
rcll
imul
repnz
push
test
inc
lcall
out
shr
pusha
lock
sub
ds
les
jl
and
dec
xor
aad
mov
add
imul
das
mov
sbb
cmp
fwait
ja
mov
insb
or
daa
daa
jne
adc
mov
mov
or
push
lods
mov
test
sub
xchg
cmp
xchg
push
cwtd
mov
dec
nop
outsb
adc
and
fcomps
iret
and
iret
add
repz
in
daa
stos
lods
js
aad
int
fwait
imul
stos
or
push
ficompl
jmp
cmp
mov
mov
xchg
fdivrs
push
adc
pop
add
push
shll
cmc
or
and
mov
push
out
je
cmpsl
test
mov
jp
sub
stc
insb
dec
sub
or
jg
movsl
popa
cmp
jle
lods
jae
not
add
push
fs
pusha
js
xor
or
push
ja
push
into
inc
cmpsl
mov
mov
sahf
insl
jmp
fsub
push
sub
mov
dec
js
pop
inc
fsubrs
pop
or
mov
ljmp
push
shl
cmp
sub
inc
ds
lods
mov
add
mov
adcb
mov
out
stc
std
inc
cmp
sub
push
add
repnz
adc
scas
andb
bound
movsl
jmp
adc
mov
lcall
sbb
xor
jp
jnp
ds
lods
addr16
test
leave
sub
pop
mov
adc
push
xlat
cltd
test
das
out
xchg
push
adc
shll
into
jnp
jmp
pop
daa
cmp
mov
adc
xor
cli
movaps
xchg
cmc
sub
in
lds
pop
rorb
mov
xchg
les
mov
mov
in
push
movsl
pop
pop
sti
sub
xabort
mov
xchg
hlt
cmp
or
dec
and
imul
les
cmp
test
fisubrs
jge
jno
xchg
mov
ljmp
rolw
lret
rorb
xor
xchg
pop
jbe
fstpt
inc
repz
movsl
pop
xchg
js
mov
mov
arpl
or
out
xor
jp
sub
sbb
cs
jecxz
sbb
sub
xchg
notl
adc
sbb
inc
cs
arpl
mov
cmp
sarl
movsb
out
int
loope
rorb
rorb
sub
sbb
ljmp
push
xchg
pop
lock
jp
sbb
repnz
orl
and
fucomp
add
jmp
gs
jb
std
mov
add
inc
mov
dec
pop
or
push
add
jle
sub
push
inc
sbb
inc
add
stos
shll
mov
icebp
je
mov
leave
jno
or
lahf
int3
scas
push
mov
outsl
xor
and
inc
sahf
or
rcrl
nop
hlt
pop
lcall
shl
dec
sub
je
in
mov
xchg
lock
loope
lcall
in
bound
jmp
sti
movsl
pushf
imul
data16
sub
movsl
popa
fwait
dec
jmp
incl
movsb
jp
mov
stc
ds
out
pushf
cli
fnstsw
cmp
cli
daa
stc
leave
adc
mov
adc
pusha
mov
popa
je
popf
pushf
pushf
add
xor
sarl
mov
int
stc
add
andb
cld
scas
pushf
fadds
push
cwtl
pushf
sbb
jbe
inc
jmp
jae
jge
push
imul
push
outsb
sub
aad
or
push
shrb
sub
xor
pop
xchg
cli
roll
aas
sub
jns
cmpsl
arpl
push
outsl
pop
into
dec
inc
ds
loop
or
sub
or
sbb
cs
test
xchg
xchg
add
shll
add
push
xchg
add
mov
addr16
test
leave
dec
mov
iret
jae
jp
cmp
cmpsb
jmp
addl
or
mov
mov
push
mov
cwtl
xchg
in
leave
das
bound
ss
loope
incl
int
add
aam
ret
in
ret
loopne
push
cmpsb
sub
outsl
scas
push
mov
ret
mov
sbb
adcb
pop
movsb
in
mov
dec
adc
or
bound
xchg
cltd
bound
push
inc
fs
jg
lock
popf
cwtl
mov
and
jmp
bound
cmp
xchg
js
xchg
xor
mov
pop
into
pop
inc
movsb
add
xchg
les
or
in
shrl
mov
fstl
pop
or
out
dec
mov
bound
jb
jne
lcall
mov
push
and
dec
les
push
xchg
sub
push
std
or
jmpw
sbb
push
jp
in
imul
ret
lret
fsubl
mov
fwait
xchg
xchg
push
push
andb
pop
mov
pop
xchg
push
or
mov
movsb
mov
sbb
popf
sbb
loopne
repnz
out
loopne
jle
fdivrs
loope
fstps
lcall
and
pusha
mov
sahf
xor
int3
mov
ficompl
in
or
inc
or
mov
mov
pop
xchg
jns
addr16
stos
sbb
fidivs
sbb
jl
cmp
sub
out
xor
stc
xor
xchg
lret
inc
xchg
cmp
mov
cmpl
mov
aam
xor
out
aam
subps
jbe
test
xchg
xor
bound
rcr
pop
arpl
pop
repz
cmc
cmp
or
call
test
pop
pop
mov
rcll
mov
call
and
test
and
cmp
push
and
insb
xchg
lcall
add
mov
ret
aad
pushf
sub
popf
jp
push
jle
dec
mov
repz
fs
outsb
shlb
add
mov
sub
and
ja
jbe
mov
test
mov
xchg
push
jnp
push
mov
pushf
or
mov
add
adc
pop
aad
mov
sbb
subl
test
dec
nopl
jmp
xlat
xchg
lcall
or
push
mov
add
test
jns
adcl
pop
rorb
mov
mov
sbbb
cmp
inc
cli
mov
pusha
pop
cmp
and
jns
pop
cmp
mov
paddd
popf
inc
mov
mov
decb
fcmovne
adc
movd
push
cmp
iret
je
add
data16
add
cmp
mov
inc
lock
leave
ret
rcrb
mov
movsl
fnstsw
jo
lcall
dec
inc
adc
adcb
xlat
clc
rorb
nop
in
jp
cs
cmpsb
or
adc
sti
sub
cltd
call
addr16
inc
mov
out
loope
cmc
cmc
pushl
mov
aam
sbb
inc
sbb
sbb
subb
or
nop
lret
ds
xchg
adc
add
mov
sbb
or
mov
push
shll
movb
sub
notl
repnz
loop
cmp
inc
xor
dec
repz
dec
pop
loopne
out
lods
insb
in
fcoml
fldcw
pop
mov
mov
push
jo
fsubp
lea
pop
ror
iret
dec
jmp
cmp
push
jmp
repnz
stos
adc
push
lahf
div
repz
jae
stos
mov
xchg
sbb
fsubrl
xor
dec
imul
xchg
les
jbe
xchg
out
leave
mov
in
adc
ds
pop
nop
je
leave
out
push
mov
rcll
and
jno
inc
fnstcw
sbb
sub
adc
aam
sar
jmp
mov
aas
adcb
jb
lods
jnp
and
popl
xchg
jge
lcall
and
hlt
popa
rolb
dec
out
ret
pop
sub
fs
push
call
ds
adc
or
sub
int
or
push
sbb
loopne
loop
fs
into
sub
mov
jno
jb,pt
loop
clc
orl
xchg
jae
imul
xchg
pop
das
add
cmp
xor
es
jae
out
cwtl
mov
adc
and
jge
movsl
mov
in
push
out
rclb
adc
lahf
push
mov
test
add
xchg
add
call
pop
cmp
movsl
int
push
xchg
nop
pop
test
cmp
fs
push
mov
bound
and
dec
mov
mov
inc
jmp
lock
divb
mov
and
push
pop
test
mov
mov
pop
mov
mov
push
xor
mov
das
inc
in
adc
dec
and
pop
mov
iret
pop
jo
test
mov
cmc
and
jmp
sbb
test
repz
repnz
sahf
xor
dec
and
insb
add
iret
xlat
push
dec
int
mov
in
adc
push
sub
pop
add
xchg
xchg
lods
push
cmp
test
ja
inc
dec
pop
ror
jbe
mov
enter
sbb
mov
sbb
ss
and
push
mov
adc
popf
pop
cld
enter
inc
das
es
cmpsb
and
pop
adc
addr16
or
jno
out
jno
adc
pop
ljmp
xor
cli
daa
not
xchg
cmc
adc
test
sub
test
ljmp
xchg
loopne
ljmp
xchg
std
lret
out
jl
xchg
cld
mov
cmp
xor
out
dec
and
lods
mov
sbb
pop
mov
push
cmpsb
dec
xchg
dec
pop
dec
lds
fs
andl
mov
mov
or
gs
ret
pop
mov
dec
cwtl
mov
sbb
inc
mov
xchg
js
inc
or
stc
fs
aam
jns
dec
ficompl
dec
cmp
js
adc
int3
push
xchg
sarl
scas
negl
das
mov
cmp
mov
idivb
pop
jle
sbb
stos
pop
popa
mov
sbb
icebp
cs
jge
push
cmp
stos
in
test
or
sbb
jne
ljmp
cmc
out
arpl
cltd
rcll
arpl
mov
mov
addl
sub
sbb
cwtl
or
jo
sti
in
or
repnz
outsb
adc
mov
push
lcall
dec
ljmp
jbe
stc
ljmp
pop
cmc
insb
adc
lret
ss
jmp
inc
dec
movsb
cmp
popl
ljmp
stc
xchg
mov
pop
jp
and
cmp
and
pop
push
rcrb
out
fldl
mov
xchg
cmpsb
dec
dec
push
fnstsw
pop
divl
mov
xchg
jecxz
sub
mov
add
xchg
mov
mov
aas
sbbb
ds
fbld
jo
in
xchg
gs
mov
popf
fidivrs
xlat
rorl
mov
xchg
outsb
mov
test
push
jge
xchg
loopne
fwait
xchg
adc
add
jo
sbb
lds
je
inc
fsub
dec
mov
lods
movsb
dec
or
repz
mov
pop
jecxz
inc
adc
mov
cs
and
into
nop
dec
cmp
lods
jo
push
in
sbb
xor
sub
mov
xchg
sub
ret
adc
hlt
cmp
and
xchg
xorl
pushf
and
mov
ret
mov
loope
push
jge
sbb
or
shrl
inc
add
cmpsb
inc
or
jbe
push
je
xchg
test
outsb
cmp
cli
test
frstor
or
sub
adc
xor
and
push
mov
fistpll
scas
cmp
into
push
mov
fs
ja
sahf
push
mov
inc
cmp
lods
mov
push
rorb
sub
inc
gs
adc
pop
pop
inc
out
int3
lcall
test
or
push
push
mov
jnp
ljmp
leave
mov
and
ja
push
repnz
lods
or
cmp
std
inc
jl
into
pop
sbb
loop
ja
mov
notb
or
movsb
mov
or
es
mov
leave
and
xchg
mov
push
jae
inc
mov
xor
int3
int
add
lds
mov
mov
push
xor
testl
frstor
imul
lock
mov
pop
push
dec
lret
loope
or
bound
gs
enter
leave
stos
jno
mov
cmp
ljmp
cld
push
push
fstpl
xchg
adc
lcall
lock
xorb
iret
jne
sbb
lea
in
into
rcll
jl
adc
out
aaa
inc
jp
mov
xchg
mov
je
lahf
dec
repnz
sub
fs
or
ja
movsl
dec
mov
push
jno
adc
push
mov
jg
pop
and
mov
mov
repnz
sbbl
mov
cmp
fisubs
sbb
lret
mov
pushl
xorb
or
mov
xor
or
addr16
xor
sbb
ret
or
repnz
push
pop
sbb
mov
int
push
dec
aas
jae
pop
iret
pusha
fwait
es
sti
adc
scas
mov
mov
repnz
mov
inc
cmc
mov
sbb
sbb
mov
pop
sbbl
shrb
arpl
inc
popf
loopne
clc
repnz
dec
cld
loope
ds
lods
pop
or
test
divb
cs
loop
leave
inc
xor
or
add
shlb
sub
shrb
sbb
dec
in
imul
int3
data16
das
sub
je
outsb
mov
xchg
mov
sbbl
out
jne
push
pusha
das
pop
out
adc
loope
pop
repz
test
test
aas
pop
ljmp
mov
sub
fstps
rorb
and
insl
pop
test
adc
das
push
in
xchg
outsl
adc
loope
mov
or
jecxz
fistpl
jo
es
xchg
adc
pushf
fninit
stos
mov
add
add
and
xor
subl
out
adc
xor
xchg
inc
mov
dec
cmp
mov
shrl
sbb
add
aaa
pop
cmc
out
fsubr
scas
mov
jnp
lods
or
push
mov
push
mov
imul
cmp
jp
roll
fistps
lea
sub
pop
xor
mov
das
cmp
iret
outsb
jae
sbb
cmp
sarb
jbe
sbb
test
movsb
pop
add
cmpsb
shl
jecxz
mov
adc
push
enter
popf
dec
mov
mov
and
push
es
lock
inc
dec
cmc
nop
or
xchg
pop
xchg
push
out
adc
mov
jecxz
outsl
ret
in
iret
adc
addr16
shrl
loop
out
imulb
fsubrl
xor
pop
rclb
dec
nop
sbb
das
xor
sub
outsl
gs
pop
add
lret
cmpsl
andb
or
and
xchg
mov
hlt
mov
inc
mov
sub
pop
scas
mov
pop
fidivl
ret
loop
jl
add
mov
scas
popfw
cmp
lock
sub
and
pop
popf
jb
pop
inc
cwtl
dec
inc
inc
int
shrb
mov
in
and
in
xchg
xchg
jmp
addr16
and
mov
cmp
jne
sbb
icebp
jne
cmc
jp
mov
inc
or
je
das
mov
clc
out
shrl
imul
push
cmpb
dec
into
dec
outsb
jge
movl
pop
aad
xchg
push
repz
pop
mov
fsubrl
pop
lock
stos
inc
inc
push
pop
call
sub
jmp
cmp
mov
stc
push
sbb
lds
sahf
movsl
push
insl
pop
sub
or
mov
daa
cli
daa
push
test
ret
scas
loop
jg
jne
out
mov
je
out
cli
add
mov
add
adc
mov
push
or
hlt
cmp
jae
iret
rep
jmp
cmp
lods
cld
xchg
subb
xchg
test
in
insb
icebp
jmp
aas
sarl
or
in
movsl
or
aam
mov
mov
aam
lahf
xor
cmpsl
push
mov
ja
push
inc
das
push
lods
push
andl
mov
rolb
out
mov
sub
push
repnz
mov
xor
fildll
sbb
les
in
movsl
cmp
fstpt
into
cmpsl
les
mov
arpl
and
lret
inc
pop
push
outsl
fsubl
jge
add
jnp
sub
sti
xor
sub
les
das
xchg
lock
push
flds
xchg
mov
pushf
sub
int
cli
mov
mov
lahf
sbb
sub
mov
push
xor
push
fs
xchg
lods
fucomp
andl
mov
cmp
rorl
bound
xor
inc
lahf
push
push
or
shll
test
mov
mov
insb
mov
add
mov
sbb
loope
mov
inc
xor
lea
lret
sub
ret
mov
mulb
xchg
jmp
movsl
clc
shll
and
add
pushf
stos
adc
inc
xor
mov
mov
ss
repnz
adc
jnp
into
outsl
pop
sub
or
mov
xor
and
outsl
lea
pop
repz
xlat
xchg
and
mov
mov
test
out
mov
test
cmp
in
stc
into
fldt
shlb
loopne
lcall
mov
adc
mov
out
xor
je
test
stos
sarb
xchg
mov
mov
pop
adc
mov
out
mov
jne
nop
cs
lds
and
sbb
push
dec
inc
mov
imul
scas
mov
pop
sbb
call
push
test
sbb
jnp
mov
test
enter
xor
in
inc
pop
cld
xor
push
xor
and
xchg
repz
ficomps
push
dec
mov
scas
adc
and
sti
add
daa
xchg
jl
dec
xor
adc
push
jmp
cmp
mov
inc
add
subl
insb
xchg
lcall
mov
push
mov
js
inc
sbb
cmpb
aas
lods
cld
shl
and
lcall
pop
outsl
jg
adc
cmp
or
jmp
mov
in
or
pop
sub
arpl
push
mov
sarb
inc
gs
in
movsl
rclb
aad
mov
jbe
mov
push
mov
push
xchg
cmp
les
dec
and
loopne
stos
inc
cwtl
xchg
jae
negl
xor
jb
in
aaa
fmul
inc
test
shrb
mov
mov
out
xchg
lahf
dec
pop
dec
pslld
shlb
inc
nop
or
ret
mov
cmpsl
inc
pop
xchg
addr16
insl
xor
andb
test
outsb
jmp
xchg
mov
in
mulb
push
pop
gs
inc
scas
aaa
pusha
jle
in
cmp
lods
mov
sti
add
pop
mov
cmc
sub
jbe
mov
mov
and
and
fwait
inc
popa
mov
std
sarl
sbb
sbb
je
jne
or
mov
mov
push
sub
in
lret
int
sbb
pusha
xchg
lds
repz
jp
cmp
sub
xchg
pop
stos
idivb
mov
sub
cmpsl
mov
lock
and
pushf
sbb
std
and
pop
out
cltd
ret
pop
scas
mov
test
pop
push
mov
in
mov
pusha
std
xor
jbe
inc
or
xchg
aas
adc
mov
cmc
lahf
loop
xchg
mov
or
arpl
mov
addl
aas
popf
xchg
cs
sbb
mov
or
lock
lret
stos
inc
mov
pop
fdivl
pop
and
cmp
cmpsb
insl
fidivrl
fsubrl
out
hlt
cwtl
sub
sbb
push
hlt
ljmp
cmp
sar
mov
jp
movsb
push
mov
mov
mov
fisttpll
mov
pop
sub
cmp
xorl
or
cmp
sub
enter
jp
mov
lahf
lods
or
sub
push
sbb
outsb
jne
push
cmp
inc
and
jne
and
fcom
cmp
xchg
jg
xchg
cmp
jecxz
shll
aad
push
pop
pop
mov
data16
test
xlat
xchg
in
inc
xchg
xor
cld
adcb
addr16
sbb
jl
sbb
loopne
icebp
pop
xor
pop
and
sub
dec
xchg
sbb
gs
jecxz
push
test
fidivl
inc
mov
ret
push
adc
std
sub
and
inc
or
jmp
mov
scas
sub
push
lret
jg
cmp
cwtl
cmp
mov
mov
int3
xchg
or
push
xchg
jg
cmp
pop
test
cwtl
mov
pop
shrl
pop
test
rorl
test
adc
stos
movsl
lock
lret
and
pop
idivb
pop
iret
insl
mov
cmp
fstl
movsl
rorl
fcmovu
int
nop
fs
filds
cvttps2pi
lds
mov
mov
lcall
rcrb
bound
ss
cli
jge
aaa
cmp
sbb
mov
sbb
push
xor
sbb
divb
and
push
inc
or
jne
xchg
push
inc
sti
jae
mov
adc
leave
sahf
jae
xchg
mov
nop
fstp
and
int3
test
xchg
cmpsb
mov
xor
xlat
aaa
inc
lahf
cmpsl
push
cwtl
adc
sub
out
mov
dec
popf
aam
ja
push
cmp
jp
sti
mov
jmp
pushl
sahf
or
fcomp
lahf
dec
and
xor
sub
std
pop
call
mov
int
shl
cli
cmc
jge
xchg
movsb
arpl
filds
xor
inc
ror
mov
or
xchg
jae
rcll
int3
dec
data16
jmp
push
add
mov
loope
dec
and
dec
dec
xlat
inc
sbb
popf
xchg
aas
push
vmovhps
std
inc
mov
and
fldenv
mov
xchg
aad
push
push
pop
aas
daa
enter
aaa
mov
mov
push
and
or
imull
and
out
nop
nop
jns
or
mov
xor
inc
cmpb
ja
addb
add
pop
add
pusha
or
adc
lods
mov
sub
bound
ss
iret
imul
xor
xchg
frstor
fists
clc
sub
out
enter
jbe
push
cmpsb
cmpsb
ret
lret
pop
and
daa
pop
mov
mov
lea
push
lods
jae
inc
stos
pop
jae
sbb
dec
cwtl
imul
mov
inc
ds
pop
push
sbb
mov
test
mov
dec
adc
loop
sbb
xchg
cmp
mov
cmpsl
testl
rol
scas
shrl
movsb
xor
mov
leave
sub
out
push
mov
inc
lods
push
std
loope
imulb
dec
dec
jbe
pusha
out
cmc
lahf
test
mov
sub
sub
xlat
push
subl
es
push
ret
inc
imul
lods
fs
aaa
xchg
daa
popa
mov
push
cmp
jle
pop
xor
movsb
mov
pop
mov
xchg
por
add
or
dec
add
jns
bound
popf
xchg
mov
pop
out
mov
or
pusha
cmp
or
daa
xor
addr16
andb
adc
sbb
push
into
dec
inc
loopne
movsb
mov
sbb
sub
rolb
mov
and
popf
insb
popf
lcall
out
or
out
mov
xchg
pop
jno
add
pop
xor
stos
lret
dec
loope
rclb
imul
fdivrs
adc
std
sub
jae
add
subl
imul
pop
mov
enter
sti
cmp
je
adc
cmpsb
and
xchg
xlat
pop
movsb
stc
loopne
push
fmull
pop
xchg
aaa
and
dec
mov
add
addr16
movsb
ljmp
xor
xlat
inc
adc
pop
push
xchg
test
jno
sub
dec
jo
xor
repnz
and
rorb
mov
imul
daa
cmp
nop
inc
in
push
sub
and
cmpsb
rorl
idivl
push
fsubrs
nop
outsl
mov
xlat
push
ret
jmp
inc
stc
xlat
aas
push
in
cmp
fs
or
mov
movl
das
sahf
fcompl
cmc
sbb
pop
pop
xchg
andl
cmp
adc
outsl
jb
or
repz
and
scas
scas
rol
push
add
imul
and
jecxz
repnz
mov
out
ret
in
aam
pop
jecxz
xchg
adc
mov
in
arpl
ret
daa
sub
into
rcrl
sti
call
push
mov
xchg
cmpsb
fdivr
and
sub
das
scas
add
push
enter
jge
lret
imul
push
mov
test
out
cs
hlt
lock
fimull
push
outsl
cmp
jmp
enter
subb
mov
xor
xchg
int3
test
sub
add
lods
and
push
es
push
test
add
testl
xchg
xchg
add
sub
xchg
pushf
stos
adc
lret
loop
xchg
mov
mov
mov
xor
mov
jge
pusha
fisttpl
jp
mov
lea
push
std
lock
mov
mov
or
push
mov
fs
lods
mov
fldcw
xor
add
add
add
rcll
xchg
add
push
negl
dec
xchg
jg
cmp
mov
pop
movsb
mov
inc
and
loop
jp,pt
test
inc
mov
ljmp
xchg
shl
arpl
nop
jl
rcll
xchg
dec
in
aaa
mov
into
popa
ds
in
jnp
adc
xlat
mov
mov
push
mov
xor
inc
loop
rep
or
imul
dec
aas
daa
and
das
or
movsb
dec
mov
ljmp
mov
jno
xlat
fwait
push
les
add
mov
fldt
inc
mov
push
jnp
inc
lods
ffreep
mov
jmp
inc
push
inc
xor
or
sbb
test
sub
inc
mov
sbb
adc
fimull
nop
ror
and
adc
aam
push
pop
push
out
sub
lret
ds
popa
subb
das
mov
and
test
pop
mov
int3
sub
add
mov
sub
mov
aam
aaa
orl
dec
rorb
push
movl
inc
cld
dec
or
ss
sarb
add
xchg
mov
jb
outsb
test
inc
jecxz
outsl
add
adc
xor
mov
cli
push
adc
aad
hlt
xchg
insl
add
add
mov
mov
mov
lret
push
fsub
push
inc
out
cli
lret
in
loop
mov
icebp
std
or
adc
pop
pop
fwait
in
dec
bnd
rol
lods
push
or
int
mov
pop
movl
and
imul
xlat
dec
ljmp
lahf
popf
jo
inc
jbe
mov
sarl
xor
iret
push
fisttpll
mov
cltd
aas
sti
arpl
push
xor
jg
int3
ret
sbb
or
shl
jb
ljmp
das
fyl2xp1
imul
ljmp
repz
sub
jns
adc
push
pop
fwait
mov
in
stc
aaa
inc
loope
js
out
fstcw
pop
lcall
inc
cli
pop
hlt
sub
adc
sbb
xchg
iret
pop
and
adc
loope
sbb
mov
add
xchg
or
daa
shll
xchg
imulb
ja
push
lods
loop
push
popa
and
mov
in
dec
loopne
outsb
sahf
sbb
addr16
rcr
sub
shl
pushf
aad
adc
mov
call
mov
push
mulb
sbb
mov
dec
xchg
das
pop
cmp
sbb
add
inc
mov
and
call
xor
pop
push
or
into
pop
and
subb
sbb
rcl
mov
jl
sub
jns
fs
sub
ss
or
add
or
jg
push
out
fadds
stos
inc
lea
in
inc
mov
imul
jne
dec
jo
movsb
popa
jmp
arpl
push
fmul
movsl
pop
sbb
cmp
pop
push
loopne
out
pop
dec
insl
cld
xor
iret
jmp
outsb
add
cmpsl
push
cli
enter
pusha
xchg
xchg
adc
sbb
call
push
pop
or
cmc
push
mov
jg
push
repnz
xchg
jp
cmpsl
enter
mov
in
test
pusha
fstpt
pop
cli
jle
inc
mov
sarb
push
daa
test
sub
sub
push
sbb
mov
in
inc
dec
push
int3
jp
push
cmp
xor
fcmovnbe
iret
shll
outsb
or
lock
aam
rcl
je
mov
lea
inc
push
mov
add
xlat
mov
fwait
push
sbb
std
or
ret
cmp
or
pop
sub
or
sub
shld
dec
repnz
scas
jno
push
pop
and
inc
repz
sbb
out
std
fwait
stc
lods
stc
jp
in
add
jb
stos
cmc
shlb
fwait
imul
stos
bound
dec
out
sub
mov
pop
jno
dec
xor
xchg
into
sti
push
cli
jo
andb
pop
loopne
lea
in
frstor
inc
xchg
iret
and
or
out
jmp
aam
pushf
loopne
lock
xor
push
inc
mov
adc
ds
add
add
mov
repz
sbb
push
cmp
adc
lcall
push
mov
insl
mov
mov
ret
je
jle
clc
pop
xchg
pop
pop
mov
shrb
xchg
dec
aas
pop
cmp
mov
dec
push
ffree
mov
xor
cmp
mov
mov
mov
xchg
insb
cmp
fldt
loop
sbb
mull
pop
mov
popf
and
out
dec
cmp
les
cmp
fildl
in
or
bound
leave
loope
mov
ds
push
lods
inc
xor
cwtl
mov
jb
add
cld
dec
cmc
lcall
pop
sbb
and
xchg
scas
or
pop
cmp
jmp
add
push
xchg
jae
mov
movsb
push
repnz
mov
or
lea
arpl
adc
add
lcall
mov
pop
loop
stos
cmp
enter
jmp
pushf
dec
mov
lea
inc
dec
repz
das
fucomi
mov
fnstsw
mov
pop
loopne,pt
jmp
jbe
shll
xor
mov
dec
in
int3
dec
lcall
mov
adc
jp
mov
jp
jnp
push
and
mov
xchg
fs
fbstp
dec
sub
icebp
xchg
xchg
enter
lock
pop
xor
mov
cmpsb
sub
std
into
out
movsl
mov
data16
call
cmp
loope
adc
in
or
lds
enter
mov
adc
ficoml
mov
mov
adc
mov
cli
cli
inc
es
xor
in
insl
xor
js
mov
mov
bound
mov
pop
hlt
adc
push
xor
in
push
add
lods
mov
push
push
inc
push
icebp
xor
imul
inc
rclb
sti
arpl
cltd
add
pop
into
loopne
jo
cmp
jmp
pushf
insl
cmc
adc
dec
pop
mov
xor
push
test
pop
maskmovq
mull
cld
push
inc
fwait
jbe
cmp
xor
bnd
push
mov
add
push
lcall
and
leave
ja
and
imul
out
stos
inc
repz
dec
sbb
mov
outsl
aam
rol
push
or
cld
inc
lock
pop
outsl
or
lea
add
cmp
and
into
add
fsub
dec
mov
aad
icebp
sar
dec
push
pushf
jp
lods
cltd
dec
inc
aaa
popa
test
push
xchg
sbb
enter
xor
test
pusha
movsb
subb
inc
dec
lcall
mov
icebp
xor
pushl
xchg
add
mov
mov
xor
out
mov
push
jae
and
push
hlt
aas
cld
inc
aas
daa
je
adc
mov
in
mov
push
and
rcl
test
enter
sub
cmp
push
into
xor
adc
pop
popf
ljmp
add
nop
pop
clc
add
pop
test
imul
sbb
jne
pop
xchg
inc
or
jns
cmc
pop
out
sbb
jle
push
mov
cmp
pop
fcomps
mov
and
loop
popl
outsl
xchg
das
mov
sbb
sti
hlt
pop
out
adc
stos
inc
mov
pop
mov
lds
pop
fsts
cmp
xchg
jo
aad
or
pop
test
and
push
cwtl
adc
push
test
adcl
int3
test
nop
pop
or
jnp
inc
clc
fstl
mov
mov
or
addr16
icebp
repnz
leave
movsb
pop
sub
mov
movsl
test
cli
mov
push
cmpsb
xor
sbb
sub
mov
pop
push
repnz
hlt
push
jne
dec
in
fcomp
pop
add
bnd
push
inc
mov
adc
push
std
adc
and
mov
mov
mov
jl
jge
icebp
mov
mov
sbb
mov
xchg
push
movsb
lock
fwait
lods
pusha
cmp
insl
cmpsb
rcll
xor
and
xor
jbe
or
daa
xchg
push
pop
dec
inc
adc
clc
addr16
out
test
dec
iret
push
hlt
inc
mov
aad
adc
in
xchg
scas
lahf
scas
sbb
jp
jo
pop
pop
test
add
and
cld
call
imul
and
movl
in
jb
dec
or
bound
lock
push
mov
dec
je
lods
jb
shlb
loop
push
cmp
mov
cmpsb
fs
test
in
stos
mov
ud1
mov
cmp
aas
mov
jp
xor
and
mov
out
mov
or
push
lock
inc
loopne
in
cmp
cli
sahf
data16
ficompl
xor
pop
push
sub
sbb
loop
jno
dec
test
mov
call
je
adc
push
loope
cmp
fdivrl
data16
jnp
push
arpl
lea
pop
or
int
inc
bound
aaa
ret
aas
sub
fists
mov
enter
arpl
rclb
xchg
push
sub
mov
aas
jbe
loop
add
or
inc
adc
cmp
mov
fdivrp
xchg
gs
add
aaa
mov
popf
ret
push
or
push
dec
subb
imul
cmpsb
in
ljmp
cmp
ja
adc
adc
inc
add
mov
sbb
mov
mov
adc
push
cmp
dec
push
pop
movb
pop
fwait
clc
ljmp
jns
lret
cmpsb
or
js
push
das
cmpl
cwtl
push
or
sub
add
push
repnz
inc
insl
and
pop
out
sbb
ss
dec
int3
add
xor
stos
or
cmc
xchg
in
xlat
popa
add
mov
dec
stos
mov
notl
into
and
pop
f2xm1
and
ja
in
out
shll
setb
add
pop
test
mov
xor
push
mov
inc
jp
popa
mov
push
ret
test
out
pop
fldcw
in
push
push
add
mov
and
test
pop
cmp
outsl
xchg
fs
lea
das
ret
out
dec
dec
sub
inc
int3
inc
xchg
xchg
shrb
jno
inc
addl
and
scas
pop
adcb
aas
addr16
xlat
aas
pop
mov
jle
into
mov
and
sub
popf
cmpsb
pop
jne
cs
or
xor
push
int
sub
push
test
rclb
add
push
xchg
call
lret
pop
mov
rcrl
xor
shll
pop
jmp
and
pop
jbe
push
sub
mov
xlat
xchg
lret
push
mov
iret
stos
out
dec
getsec
popa
stos
mov
int3
loope
xlat
ret
mov
or
mov
mov
pop
pusha
sub
cld
imul
gs
cld
sbbb
sub
xor
fidivl
insl
jnp
out
mov
mov
or
fcmove
sbb
mov
dec
ja
pop
dec
neg
stos
mov
jbe
sbb
scas
inc
push
pop
sub
lcall
movsl
sti
dec
fs
test
push
dec
sbb
je
push
adc
sbb
test
or
mov
pop
cmp
mov
inc
xor
shll
mov
fisubl
jp
add
mov
mov
and
xchg
adc
sarl
add
cltd
add
add
pop
cmp
std
adc
pop
shr
clc
cmpsl
add
xchg
push
mov
leave
sub
inc
das
jno
rorl
pusha
jno
xchg
out
test
fwait
shll
imul
jnp
push
push
push
insb
outsl
pop
cmp
es
mov
xor
nop
repz
loope
cmc
inc
sub
push
mov
push
pushf
inc
push
jp
dec
into
cld
pop
int
aas
call
pop
sub
cltd
cmpsb
cmpsb
xchg
push
and
dec
inc
and
cmpl
adc
jo
call
negb
fwait
lods
loope
cmc
clc
fstpt
sbb
mov
icebp
cmp
jbe
xor
pop
push
and
mov
sbbb
fcompp
movsl
popa
cli
data16
ds
mov
or
scas
daa
es
mov
sbb
fcomp
insl
xchg
ficompl
or
xchg
jno
xor
jmp
pop
cmp
leave
ret
loope
fbstp
mov
sbbb
mov
adc
push
jno
xchg
out
les
adc
cmp
pop
lds
sbb
fimull
cmpsl
pop
push
cmp
pop
cli
sub
xchg
or
subb
mov
mov
inc
nop
dec
inc
in
fnstenv
lods
lods
inc
xchg
lods
fbstp
add
mov
aam
add
mov
les
out
adc
out
imul
call
inc
dec
push
int3
xchg
inc
outsl
arpl
mov
xchg
xchg
pop
and
lds
xor
enter
cmp
pxor
jg
cmp
xlat
sbb
cmp
adc
cmp
loop
lret
cld
mov
sbb
pop
fstpt
in
xchg
cwtl
cmp
xor
in
sarl
jg
jl
jge
xlat
push
out
arpl
repz
call
mov
scas
mov
jecxz
nop
mov
int3
shll
clc
aaa
mov
inc
xchg
lds
cld
arpl
fildl
and
cmp
pop
add
pop
mov
add
cmp
adc
pop
dec
cmp
jns
and
outsl
jno
hlt
mov
js
lcall
out
div
dec
leave
cmpsb
xchg
jnp
mov
aaa
jmp
iret
mov
sahf
testb
dec
dec
gs
mov
lods
fwait
arpl
pop
pop
pop
icebp
xchg
sbb
call
inc
js
cmp
add
and
aam
imull
and
or
call
fstpt
nop
pushf
test
pushf
je
xor
arpl
imul
std
ret
pop
mov
ja
pushf
xor
stos
dec
jbe
in
mov
stos
and
cmc
add
xchg
cwtl
fwait
inc
popa
ja
dec
roll
popa
push
cmp
cmp
rcrb
das
clc
inc
ja
or
and
enter
in
push
js
popl
or
pop
mov
scas
scas
mov
push
and
in
aas
sbb
push
sub
cmp
cmp
lock
test
xchg
sub
mov
in
lret
insb
and
inc
mov
mov
dec
jg
sub
push
jbe
inc
or
mov
flds
insb
adc
pop
test
inc
popf
jle
xor
sub
pop
lock
fisubrl
mov
fists
push
cmp
fs
in
int
pushf
pop
jmp
jne
xchg
xorl
mov
jne
add
xor
fmuls
cmp
loope
insl
shr
popf
popa
insb
cmp
cmp
sti
mov
test
imul
ret
pop
lock
jo
lock
gs
lods
adc
adc
lahf
ret
mov
shll
push
sbb
in
lret
test
imulb
adc
shrl
aaa
lea
orb
push
lea
mov
cmpsl
int
call
popf
jp
and
dec
std
jl
lahf
out
sbb
psubsw
mov
jbe
sahf
cmpsl
push
fistl
lret
subb
imul
mov
inc
ljmp
mov
adc
mov
in
pop
jmp
xchg
adc
push
rcll
xchg
inc
push
popa
repnz
xchg
cmpsb
repz
jg
test
add
mov
imul
lock
cmp
pop
sbb
lret
pop
adc
pop
cltd
into
sahf
xchg
sbb
cmp
je
xchg
dec
cmp
adc
in
add
scas
stos
or
into
and
sub
push
mov
decb
das
out
xchg
xor
xlat
addr16
ret
jbe
jnp
lcall
ljmp
add
inc
or
xchg
shrl
fdivrs
icebp
popa
rcl
mov
daa
sbb
mov
popf
push
xor
mov
jb
xor
lret
lock
fsub
mov
push
jns
pushf
dec
fnstenv
push
or
or
add
or
imul
push
jl
pop
addb
mov
inc
or
in
sbb
mov
ret
adc
sub
mulb
jno
add
pusha
inc
inc
sub
out
jno
and
insb
addl
call
mov
stos
sar
arpl
pop
rcll
push
lcall
cmp
mov
xchg
negb
insl
scas
adc
fldenv
lret
add
cmp
jmp
add
xchg
xor
cmp
or
pop
push
scas
cmc
push
and
js
lods
cmpb
pop
js
fwait
into
insl
sub
clc
leave
or
lds
stos
mov
rorb
pushf
cmc
call
scas
dec
mov
movsl
insl
xor
dec
and
mov
xlat
mov
scas
jo
nop
lods
repz
std
scas
leave
test
inc
hlt
dec
repnz
mov
sub
mov
mov
hlt
lock
int3
out
adc
jge
cmp
fdivrs
mov
mov
sbb
adc
stos
jp
stos
xchg
push
jo
cmp
fidivs
aam
das
jg
fisubl
lds
test
push
xor
scas
pop
imul
push
imulb
jne
aam
mov
gs
jae
pop
dec
xchg
ss
inc
or
int3
popa
lret
xchg
cwtl
xor
stc
pop
lret
dec
std
in
xchg
mov
mov
mov
fisttpll
sbb
fwait
mov
repnz
inc
clc
imul
lods
mov
dec
loop
pop
testl
stos
js
sahf
std
mov
scas
jl
aam
out
nop
pop
loop
push
ljmp
andl
inc
or
enter
aaa
or
pop
fwait
xchg
movsb
hlt
cmp
cmp
pushf
lret
mov
insl
test
push
dec
add
push
cmpsb
rcr
add
mov
push
leave
imul
jmp
jl
pop
jecxz
sub
pop
in
dec
pop
mov
repnz
cmp
or
les
add
add
xchg
xor
syscall
xchg
mov
mov
jle
loop
adc
loop
aam
dec
test
mov
pop
imul
and
arpl
data16
pop
in
iret
scas
out
call
add
clc
leave
loopne
in
scas
dec
nop
inc
enter
xor
and
inc
int
adc
outsl
push
fwait
mov
lcall
sbb
fmull
jmp
xor
inc
das
mov
or
pushf
mov
jae
stos
mov
mov
jnp
sbb
cli
inc
aas
shll
mov
out
mov
inc
stc
or
push
push
sbb
fptan
imul
cmp
jno
push
and
repnz
test
jno
or
gs
cmp
pop
shll
xchg
loope
push
or
add
jecxz
pop
out
outsl
popf
mov
es
xchg
mov
push
imul
jecxz
dec
cmpsb
jmp
lahf
mov
xor
jmp
icebp
xchg
icebp
adc
xchg
push
dec
insl
adc
fstps
jle
and
pushf
int
mov
xchg
jbe
push
jb
jle
pop
xor
rcll
xor
add
jp
sub
jg
mov
adc
stc
inc
and
mov
out
pop
imul
lahf
inc
inc
jbe
iret
sub
jns
fsubrl
sub
mov
adc
sahf
ficoms
cmp
mov
cmp
mov
push
xchg
mov
addr16
js
sub
mov
add
and
xor
cmp
jl
js
out
push
test
jmp
xor
sbb
dec
and
push
pop
stc
and
sbb
neg
push
mov
jo
xchg
or
addl
andl
push
gs
loop
test
pop
lret
jb
add
mov
xchg
jno
div
add
clc
mov
xchg
adc
jecxz
cltd
push
xor
scas
push
sbb
sbb
stos
dec
jge
loop
mov
scas
xor
cmp
stos
dec
insl
mov
lea
add
fsubs
adc
adc
test
fadds
or
mov
lahf
inc
cmp
mov
cmpsb
stos
and
cld
dec
jg
add
ljmp
in
loop
sub
mov
or
ja
add
cmp
scas
gs
cmpl
cwtl
xchg
orl
and
dec
or
sbb
pop
pop
dec
iret
into
imul
lahf
ljmp
add
scas
lea
cs
lret
push
std
xchg
fcoml
dec
ja
imul
cmp
cltd
test
fdivrl
push
mov
lret
lock
out
or
mov
pusha
enter
jecxz,pn
pop
movsl
cmp
mov
test
frstor
jno
xor
les
inc
je
add
ret
push
inc
push
pop
outsb
mov
mov
hlt
stos
adc
call
popf
rolb
cli
mov
xor
mov
and
iret
xor
xor
mov
fidivs
add
sub
and
push
mov
xlat
rorb
xchg
push
mov
mov
push
fnstsw
mov
ret
cmc
test
inc
mov
daa
inc
test
in
jmp
scas
push
aad
hlt
sbb
jecxz
fisubs
out
ret
cltd
dec
or
cmc
stc
pop
lret
jge
xchg
pop
das
push
ret
dec
into
call
dec
mov
std
dec
adc
into
cmpb
adc
test
jne
mov
pop
push
imul
add
push
repz
in
mov
jg
sub
push
push
aam
mov
adc
loop
nop
js
ja
call
cld
or
adc
add
sti
out
sti
jl
dec
xchg
hlt
stc
cmc
ds
and
add
out
decb
outsl
scas
repnz
out
popf
sub
dec
icebp
mulb
mov
pop
cwtl
mov
adc
ds
push
adc
repnz
pop
adc
sub
je
push
cmp
inc
mov
xchg
into
js
and
mov
sbb
xchg
test
pop
push
aaa
jl
mov
adc
sbb
sbb
mov
lds
push
mov
into
jo
push
or
call
pusha
movsb
fldl
pop
inc
lods
mov
mov
and
push
mov
push
mov
iret
sub
mov
mov
xchg
sbb
sbb
out
xchg
push
dec
lods
insb
fcmovne
cmp
pop
fstl
sbb
mov
insb
jge
aam
repnz
addl
test
xor
std
mov
fdivrl
pop
mov
orl
mov
and
mov
pop
dec
les
mov
adc
jno
mov
xor
das
sub
jae
xchg
xchg
pop
xchg
jg
je
loopne
ret
cld
add
adc
inc
arpl
ja
or
mov
fnstcw
jl
insl
pop
push
sub
push
mov
outsl
pusha
stos
pop
icebp
adc
jge
repz
stos
pop
fnstenv
mov
cmp
lret
or
jl
into
icebp
xchg
or
xor
push
sbb
push
ret
and
ficoml
std
xchg
data16
scas
fiaddl
enter
and
bound
dec
js
mov
mov
insb
jmp
cmp
xsavec
mov
cmp
adc
pop
jnp
cmp
push
lods
andb
mov
xchg
stos
jno
fsubrp
arpl
mov
ret
and
sbb
nop
mov
xchg
add
movsl
sbb
int3
pop
scas
push
mov
mov
ds
into
fstl
xchg
fsts
mov
mov
dec
dec
leave
and
add
push
aam
adc
daa
inc
aaa
shl
nop
jns
scas
inc
sahf
xchg
jmp
or
clc
pop
or
push
or
mov
xchg
mov
in
xor
test
or
rorb
mov
scas
pop
mov
add
and
fists
cli
jmp
push
sbb
push
fiadds
mov
lret
into
or
mov
mov
mov
jb
imul
push
fwait
addr16
das
popf
push
mov
cmp
pslld
dec
add
jecxz
pop
push
movsw
jl
add
cmp
jns
xchg
inc
cld
add
pop
addr16
jb
test
xchg
dec
jbe
dec
mov
out
inc
xchg
rcrl
jg
iret
loop
lods
inc
les
jae
xor
jmp
pop
dec
jo
pop
xor
arpl
pop
push
mov
xchg
jb
and
mov
xchg
inc
xchg
bound
xlat
or
mov
imulb
push
and
jae
jae
in
pop
pslld
div
imul
pop
dec
adc
adc
pop
outsl
jecxz
arpl
mov
push
clc
mov
cld
les
das
mov
adc
icebp
push
cmp
pop
out
test
int
out
adc
stc
and
mov
shl
call
sub
fisubl
dec
repz
push
push
pop
xchg
add
pop
rolb
pop
je
ret
testb
ja
push
push
stc
and
test
pop
popa
push
adc
jo
stos
dec
cmp
adc
sbb
mov
icebp
xorl
in
mov
nop
loopne
daa
ret
mov
and
pop
out
test
js
scas
icebp
sub
mov
and
cmp
jle
daa
mov
insb
lahf
shll
cld
sub
mov
inc
dec
or
inc
outsl
jle
add
les
cmpsb
nop
pop
cmp
in
into
jno
sbb
aas
jl
movsb
xchg
sbb
sub
mov
andb
jbe
jp
mov
fwait
or
lock
cmp
push
roll
int3
cmp
int
rol
insl
test
fstps
in
sub
and
adc
sub
fmuls
jl
cmp
push
lock
jnp
adc
mov
cmc
arpl
lret
mov
push
jns
jne
and
test
cs
jmp
or
cwtl
sahf
jbe
add
outsl
insl
fisttpll
call
sub
out
sbb
jb
das
pop
les
clc
sti
es
mov
cmp
dec
insb
sbb
int
and
lahf
adc
ffreep
mov
xor
push
imul
notb
mov
and
push
mov
adc
fwait
dec
sub
pop
out
shl
ljmp
inc
jae
push
adc
jecxz
lods
ficompl
or
xchg
jmp
push
ljmp
xchg
aam
mov
lods
popa
xchg
addr16
push
adcb
jno
cmpsb
mov
ds
sbb
fdivr
xchg
pop
jo
dec
inc
sub
dec
jne
add
call
add
mov
sbb
dec
mov
mov
sub
cmp
cmp
push
mov
cmc
cmp
pop
adc
inc
jb
repz
lea
inc
sti
xor
mov
repnz
jns
loop
push
fsubrs
lahf
inc
adc
mov
or
imul
cmc
in
mov
int
xchg
hlt
in
or
cmp
mov
lahf
pop
or
stos
xchg
mov
add
ljmp
aam
jecxz
sbb
pop
outsl
sbb
and
sahf
or
mov
pop
pop
outsb
sti
addr16
add
and
xchg
push
push
imul
fimuls
xchg
repz
mov
je
cltd
jno
testb
fildll
sub
jge
leave
mov
enter
cmp
mov
jg
in
cwtl
dec
cmp
push
adc
lret
mov
or
cli
imul
adc
in
push
test
sub
jb
pop
xchg
jnp
inc
xchg
adc
fmul
inc
mov
jno
in
fcmovnu
adc
jo
lea
cmp
aam
xor
jae
insb
sbb
repnz
test
push
mov
mov
jecxz
pop
aas
iret
lock
dec
add
cmc
adc
sbb
lea
adc
into
and
pop
aaa
stos
adc
insb
stos
in
cmp
xor
push
in
stos
xchg
cld
aas
out
xchg
pushf
arpl
sbb
jo
cltd
dec
cmp
mov
fistps
mov
mov
push
jmp
pop
and
inc
scas
bound
in
lods
lret
jle
imul
pcmpgtd
xchg
std
je
imul
add
scas
pop
insl
mov
jmp
outsb
push
and
mov
cmp
dec
cltd
mov
cltd
dec
sub
aaa
fcoms
into
stc
iret
push
push
mov
dec
or
xchg
call
dec
sub
jge
push
jmp
mov
lret
push
mov
lea
dec
roll
sbbl
pop
jmp
xchg
lret
test
test
inc
popf
and
push
ss
in
xchg
mov
mov
push
pop
xorb
jecxz
mov
out
test
outsl
adc
jnp
mov
cmp
or
jno
mov
stos
std
mov
outsb
mov
arpl
xor
lret
sbb
icebp
pop
sub
pop
mov
and
pop
sub
or
les
cs
xor
test
lret
lahf
sbb
cwtl
frstor
dec
add
or
inc
out
sub
mov
inc
into
sarl
lods
jecxz
sub
xchg
test
dec
sub
repnz
add
inc
mov
outsb
out
fadds
test
pop
jno
fs
cmp
jg
push
mov
std
arpl
cmp
js
dec
fwait
daa
mov
ret
xchg
push
xor
decb
pop
xlat
outsb
lret
pop
jmp
scas
mov
xchg
mov
and
aam
cmp
mov
pushf
sbb
xchg
shlb
lds
imul
jp
lock
lock
sbb
insb
insb
leave
mov
push
test
loope
mov
add
mov
aam
adc
pop
hlt
cld
fmuls
je
outsb
lret
bound
fadds
into
cmpsb
cmp
pop
enter
jmp
inc
pop
pushf
pop
lock
xor
mov
sbb
popa
jmp
push
hlt
cli
push
imul
lds
cmp
js
mov
repz
fildll
and
repnz
nop
lods
dec
mov
clc
or
fistpl
or
mov
idivl
insb
sub
scas
mov
xor
mov
mov
xchg
push
stos
fmul
mov
daa
cmpl
mov
sub
inc
outsl
sahf
shll
lret
lret
outsb
sti
xchg
test
xchg
xor
mov
or
outsl
dec
shll
mov
jle
mov
repnz
arpl
push
dec
dec
int
jecxz
and
mov
mov
pop
add
add
adc
inc
inc
mov
dec
bound
sub
leave
mov
xadd
loop
mov
lret
notb
lret
aaa
sbb
xchg
pop
xor
es
es
mov
cmpb
pop
adc
jne
pop
push
loope
hlt
inc
add
in
outsl
sbb
jae
xchg
dec
or
add
imul
push
insb
lods
and
pop
sbb
cwtl
cmp
xor
sub
xor
movsl
das
cmp
mov
pop
sahf
xlat
insb
or
ret
adc
mov
int3
add
jbe
sub
pop
mov
or
and
in
mov
jno
mov
lock
xor
movl
sub
xchg
stos
sahf
mov
push
test
xchg
dec
mov
mov
cmc
mov
inc
inc
data16
mov
scas
jns
stos
mov
outsl
mov
mov
jo
mov
insl
lock
adc
pushf
sbb
and
add
mov
shl
mov
xchg
es
ret
pop
pop
xchg
stc
rolb
adc
out
idivl
repz
and
test
lret
cmpsb
mov
xor
insl
faddl
fmul
aaa
test
lahf
pop
mov
lret
fisttps
adc
xor
mov
shrl
iret
popa
fcmovu
repnz
or
insl
outsb
mov
mov
cmpsl
mov
dec
bound
mov
test
outsl
test
lds
mov
out
adc
cmpsl
ret
cwtl
jne
push
and
inc
jns
push
jbe
or
cmp
aad
out
imul
arpl
mov
mov
pslld
dec
test
xchg
push
inc
pushf
data16
and
push
mov
xor
test
in
dec
ret
repz
shll
add
push
stos
mov
pusha
insl
mov
sbb
mov
mov
out
sub
mov
jg
mov
cli
xchg
aad
add
jnp
enter
adc
or
jb
leave
repz
repz
mov
std
sahf
cs
sbb
xchg
mov
mov
gs
test
imull
cmp
inc
neg
or
dec
mov
jge
push
xor
lea
sbb
cmpsl
outsb
pop
daa
out
adc
lock
enter
push
cmovge
cwtl
pop
je
sahf
leave
pop
cmpl
movsb
sub
mov
push
mov
rcrl
insw
in
das
xor
sub
pop
test
inc
imul
lea
les
iretw
cmp
pop
notb
test
push
xor
mov
push
mov
mov
insl
cmp
add
xor
dec
adc
mov
and
dec
xor
hlt
movsl
lret
pusha
icebp
pop
mov
hlt
ret
or
mov
leave
addr16
jo
inc
cmp
jns
jl
aam
je
push
jge
jns
or
aas
push
out
in
pop
dec
fdivrs
and
mov
pop
lcall
xor
add
fs
xchg
mov
jp
shlb
out
outsl
cmc
adc
jmp
scas
inc
out
das
fmull
add
dec
inc
lret
sqrtps
cltd
xchg
sbb
push
sbb
scas
sbb
jno
jge
adc
dec
and
sbb
lret
test
jecxz
mov
push
ss
mov
mov
insb
mov
pop
hlt
adc
mov
adc
dec
mov
aas
mov
sub
cwtl
daa
and
mov
test
mov
popf
leave
pop
jle
daa
adc
xor
nop
mov
das
movl
sti
mov
into
sbb
rorb
xchg
pop
test
push
ds
push
pop
sbb
push
xchg
jmp
cwtl
dec
pop
lods
test
cmp
push
out
jae
xor
rcr
in
cmp
and
movl
sub
ljmp
push
fcmovbe
mov
cmp
imul
pop
jne
and
push
fdivr
aaa
iret
and
mov
or
xlat
jmp
jns
dec
jle
or
cmp
mov
adcb
out
das
scas
dec
cmp
popa
add
mov
shrb
movsb
out
stos
and
ja
clc
out
sub
aas
sbb
sub
stc
lahf
adc
dec
sub
add
cli
out
imul
dec
mov
pop
dec
push
js
xor
sub
aas
addr16
jo
bound
sarl
rcll
ret
dec
scas
stos
subl
insb
pushf
or
rcrb
lods
je
and
dec
push
into
xchg
sti
adc
ret
movsl
loope
jbe
pop
hlt
fsts
nopl
mov
repz
ja
icebp
scas
mov
stos
iret
mov
data16
dec
in
out
pop
sub
inc
dec
aam
dec
inc
outsb
adc
cmp
mov
pushf
cmp
ja
pusha
int3
mov
sub
sahf
cld
push
xlat
lock
add
fcoml
call
leave
or
test
daa
in
stos
adc
or
sarl
xor
push
clc
aam
mov
adc
mov
pop
mov
jo
cmovl
movsb
int
jno
or
ljmp
sub
leave
stc
push
pushf
aam
or
lret
rcrb
xchg
out
out
mov
sub
sti
sbb
stos
imul
jp
leave
mov
inc
inc
mov
xchg
add
enter
icebp
push
dec
enter
outsb
fwait
xor
iret
cmp
ja
lods
shl
mov
cmp
sbb
in
cmpl
insl
push
lea
bound
jmp
sub
pushf
std
dec
xchg
inc
xchg
dec
pop
push
gs
cmp
mull
ficoml
out
fildll
sub
std
jl
push
mov
cmp
cmp
test
sub
jecxz
adcb
insl
inc
pop
cmc
inc
mov
out
or
xchg
adcl
xchg
inc
adc
mov
aaa
aas
pop
mov
pusha
dec
add
jb
add
or
fisttpll
in
dec
cld
cmp
div
pop
xchg
inc
pop
push
push
orl
cmc
push
sbb
push
push
mov
sub
mov
imul
popf
jo
inc
xchg
xchg
ja
xor
cwtl
cs
inc
arpl
cltd
sti
push
bound
xor
xchg
aaa
lcall
mov
push
sarl
mov
in
ret
and
mov
jl
fidivl
mov
lcall
or
sbb
push
cmp
ss
dec
xchg
repz
inc
inc
xlat
xor
mov
mov
aaa
out
xor
fsubrl
push
imul
xchg
jnp
fsubrl
enter
sahf
dec
mov
fwait
adc
repnz
subb
xor
idiv
mov
sbb
test
scas
std
fistl
pop
movsb
xchg
inc
fcoms
idivb
adc
lcall
ror
jp
add
aaa
test
mov
aad
and
testl
push
add
pushf
inc
js
in
jae
push
fistps
incb
aad
lock
stos
cmpsb
push
notl
mov
popa
cmpsb
test
dec
cmp
mov
negb
ret
sub
pop
cmc
test
push
insb
rorl
mov
pop
xchg
pop
lods
or
push
pop
movsb
out
scas
notl
leave
ja
fwait
outsb
add
add
mov
fistl
stos
leave
mov
out
inc
flds
lret
fsubs
in
inc
dec
adc
mov
mov
loop
sub
aaa
jp
out
inc
xchg
pop
fcoml
xlat
push
and
pop
xor
cli
xchg
inc
jge
xchg
arpl
and
mov
xchg
dec
fdivs
dec
xchg
clc
movsl
and
outsb
sub
mov
adc
mov
fidivl
mov
adc
adc
fldt
shr
pop
push
xor
dec
xlat
ficompl
inc
lods
out
jl,pt
rorl
lret
test
aam
mov
xor
dec
popf
icebp
sub
ret
cltd
push
into
js
pop
mov
outsl
arpl
je
leave
decb
xchg
out
mov
scas
cmp
outsb
rcl
js
iret
call
mov
push
pop
repnz
add
mov
xlat
push
xchg
mov
rolb
xlat
movsb
inc
ds
xor
adc
lock
jg
inc
jae
cli
int
stos
das
xchg
inc
stos
adc
movsb
xchg
dec
xor
push
cltd
cwtl
fsubr
lods
cmpsl
cmpsb
jmp
add
xchg
dec
lods
push
je
out
mov
add
inc
sbb
stos
lock
xor
dec
outsb
mov
xchg
loopne
jae
das
adc
mov
sahf
inc
and
xor
add
fimull
ret
dec
cmp
xor
test
or
adc
leave
imul
sbb
cld
jae
xor
stos
test
mov
add
pop
mov
pop
xchg
int
roll
jmp
lahf
arpl
das
popa
sahf
cli
test
pop
insb
cmpsb
push
dec
jmp
xchg
mov
in
rorb
pop
rcll
or
int3
cmp
js
ficompl
and
pushf
add
jg
cs
push
inc
mov
lods
out
stos
push
shlb
cmpsb
loope
movsl
push
add
fdivrl
ret
js
js
cltd
sbb
pushf
push
mov
adc
cwtl
mov
arpl
jns
mov
pop
ret
jmp
in
loopne
repz
cmp
cmc
cmpsb
or
pop
sbb
jne
int3
push
inc
push
adc
cwtl
mov
push
shl
push
add
cmpsb
sub
xor
add
lock
dec
cmp
jg
mov
roll
ja
xchg
pop
aad
dec
decb
std
jl
xlat
ljmp
aas
bound
iret
cli
in
push
int3
lcall
lret
ficompl
inc
sbb
push
lahf
mov
fwait
inc
cmc
cmc
lcall
adc
pop
add
fcomp
out
lods
movsl
mov
xchg
mov
sub
add
in
push
in
push
pop
shll
jle
inc
pop
aas
lock
xchg
and
popf
mov
push
popa
mov
sbb
cmp
in
ljmp
repnz
sarb
sbb
xor
test
xchg
or
aas
jl
mov
jno
lea
sbb
jns
mov
fadd
std
sbb
push
popa
xchg
pushf
sbb
or
mov
xlat
mov
into
loop
push
sub
stc
mov
xchg
sub
fldl
mov
add
xor
jecxz
cmp
inc
adc
es
loop
leave
dec
popf
movsl
xchg
fildll
enter
adc
fistpll
ret
jo
imul
and
notl
in
pop
xor
leave
iret
ds
jecxz
xlat
jp
movsl
ret
pop
stos
xchg
jle
cmp
shl
inc
push
sub
mov
iret
out
cwtl
dec
mov
mov
xor
pushf
or
xor
inc
cltd
aam
outsl
bsf
sub
icebp
xor
mov
test
outsl
rolb
rcpps
aaa
ja
add
movsl
ja
out
out
jge
jae
jge
sbb
mov
bound
in
mov
loopne
inc
jmp
imul
xchg
pop
gs
adc
sahf
sub
shlb
xchg
fldenv
insl
or
push
or
popf
arpl
add
fs
xor
dec
insl
sti
jg
xchg
push
fisttpl
xor
add
push
adc
fistps
xor
outsl
outsb
fwait
pop
stc
out
jmp
cmc
or
lcall
mov
mov
out
adc
xchg
into
sbb
mov
mov
and
ljmp
jecxz
jl
cmp
popf
mov
test
xor
jo
rorb
pop
in
cmp
jle
sub
xlat
add
in
adc
roll
jl
push
pop
sarl
aas
out
inc
roll
sar
out
dec
push
pushf
popf
fildl
cmp
push
jl
ljmp
shll
addr16
cmp
jg
cmp
sbb
nop
sbb
cmp
bound
push
test
sbb
add
dec
dec
ljmp
testl
push
test
movsb
xchg
lods
sbb
outsb
cmp
lods
je
fistps
lret
cltd
rorl
in
xchg
or
push
cltd
jns
rcl
xorl
mov
xor
test
mov
pop
push
andb
add
pop
sbb
into
cltd
in
lock
pop
test
inc
data16
test
ret
add
das
andl
jae
push
add
or
repz
cmp
push
icebp
jecxz
aam
bound
mov
fmuls
test
xchg
das
mov
xor
popf
out
imul
inc
mov
insl
lods
cmc
sub
fcmovnu
or
push
pushf
mov
dec
pusha
lock
fs
out
jl
mov
mov
hlt
repz
or
or
pop
sub
add
lock
aam
ja
subl
mov
mov
lcall
xor
jb
adc
mov
add
rolb
adc
out
int3
sti
orl
aas
leave
cmc
mov
mov
and
out
push
inc
push
mov
mov
mov
push
neg
xor
sbb
stc
jle
lock
inc
inc
icebp
xor
in
daa
mov
xchg
mov
adc
pop
add
adc
jg
sbb
jae
cmp
cld
or
jp
loopne
outsl
ds
ja
jge
inc
pop
scas
aam
mov
dec
test
aam
outsl
mov
sub
inc
sti
mov
jnp
fld
in
jl
jl
out
shll
jno
xor
rorb
ljmp
adc
out
adc
cmp
mov
ret
shl
imul
insl
sbb
lret
aad
js
mov
sti
sbb
xor
shlb
stos
sbb
add
lds
int
lock
cmp
mov
cwtl
push
push
mov
push
jbe
dec
xchg
jle
pop
xchg
mov
icebp
mov
js
or
rcrb
and
jecxz
sub
aad
sbb
enter
pop
vpsubw
aad
push
into
sbb
test
push
jnp
sbb
cld
cmp
xchg
mov
xor
ss
arpl
cmp
dec
dec
push
and
mov
inc
xor
jp
lods
mov
sbb
into
dec
or
or
cmc
inc
in
in
fstl
sti
lock
inc
dec
fs
mov
cmpsl
movsl
xor
lods
dec
scas
cmp
stos
xor
ljmp
mov
test
inc
push
cmc
loop
inc
add
sbb
mov
jne
xchg
push
sbb
rcrb
dec
pop
ss
inc
adc
das
adc
sbb
push
pop
xor
ret
and
dec
aaa
mov
js
sbb
cmpsl
and
add
and
test
popf
iret
push
ja,pn
mov
ret
dec
xor
push
xor
leave
sbb
pop
call
xchg
fldcw
out
dec
popf
das
mov
sti
clc
dec
add
push
jl
jo
movsl
pusha
adc
xchg
das
je
jge
lds
mov
jle
repnz
jecxz
or
xor
mov
jmp
xchg
adc
push
push
mov
push
push
lds
mov
cmp
jae
xlat
lcall
shll
aam
or
std
faddl
aad
jmp
sbb
mov
scas
outsl
pop
daa
popa
mull
adc
ret
outsl
jo
xlat
cltd
mov
sub
pop
xchg
outsb
fisubs
adc
cmp
mov
mov
jge
mov
rcrl
in
xchg
sub
or
mov
out
xor
sbb
sub
mov
aaa
mov
dec
pushl
or
scas
jo
push
lods
dec
xor
and
outsb
stc
pop
jnp
lock
or
or
dec
push
scas
push
jle
ficoml
in
xlat
cmp
gs
imul
jmp
lcall
dec
stc
pop
xor
popf
push
test
sbb
cmp
inc
cltd
inc
fsubl
dec
test
faddl
iret
add
xlat
add
cltd
shlb
add
sbb
mov
sbb
ja
mov
hlt
cmpsb
fdivr
shlb
int
xchg
jmp
fs
sub
xchg
jl
leave
insl
jno
dec
inc
pop
sbb
gs
xchg
mov
movsb
rolb
or
inc
cmp
add
pop
shl
jns
push
ds
out
pop
jbe
sbb
sbb
xchg
push
faddl
clc
cld
jne
push
pop
lods
scas
mov
xchg
in
mov
sub
andb
xchg
or
sbb
jge
cmp
dec
sar
lods
pop
inc
mov
scas
cmp
je
pop
lret
movsb
sub
cmpsb
cmpsl
or
cmp
xor
xor
mov
pop
and
fs
inc
iret
out
lcall
sub
jbe
xchg
cmpb
add
mov
je
pop
xchg
sub
or
fbld
dec
mov
imul
push
adc
jb
sar
adc
pop
aad
cmp
sub
sahf
loop
cmp
cmp
aaa
loopne
xchg
or
inc
mov
mov
pop
jl
out
int
gs
aad
fnstcw
iret
pop
call
js
push
push
add
xchg
adc
shll
push
ret
add
inc
sti
cli
xor
shll
mov
xchg
lock
xchg
int3
das
xlat
outsb
pop
adc
xchg
mov
dec
push
add
cmp
nop
adc
loop
fstl
jbe
push
push
cmpsl
inc
divb
mov
icebp
pop
clc
inc
jle
out
mov
mov
popf
pushf
mov
push
jbe
jae
psubw
stos
jl
xor
adc
repz
inc
mov
rcr
orl
push
pmulhw
ret
fisubs
pop
push
sbb
jg
cmpsb
fstl
and
adc
dec
scas
fisubrl
sahf
lods
mov
and
cmp
nop
adc
stos
data16
mov
scas
das
loopne
inc
mov
dec
shl
cmpsl
adc
nop
fistps
dec
movb
movsl
mov
inc
ss
clc
sub
xchg
cltd
sbb
inc
ficompl
mov
add
outsb
jge
fwait
and
cmp
lcall
or
add
mov
sti
jno
jmp
fisubl
inc
int3
in
in
pop
es
pushf
in
sti
sbb
out
nop
bound
xchg
ja
dec
leave
and
pusha
pop
sbb
xor
push
mov
cmp
outsl
sbb
jmp
jae
movsl
push
xchg
push
subl
sarl
call
imul
cs
imull
push
fisttps
rcrl
lds
xchg
pop
fnstenv
xchg
cltd
stos
shlb
sbb
xor
push
cmp
mov
push
dec
xchg
dec
xchg
jb
cmpsb
xchg
xchg
clc
sbb
sbb
sub
rcrl
fstps
sub
fnstcw
sub
enter
nop
mov
xor
mov
adcb
and
jo
jnp
sbb
and
mov
pop
ds
cltd
xchg
fs
mov
xchg
btrl
or
les
testl
pushf
mov
les
cmp
push
adc
inc
decb
test
fcoms
sub
mov
outsl
movsl
xor
cltd
lods
and
scas
mov
push
and
insl
pop
and
jae
cli
push
mov
pop
or
dec
je
out
jmp
mov
hlt
fisubrl
xorb
add
testl
aas
stos
lcall
xchg
test
xor
fwait
push
or
outsl
dec
rcr
and
cmpsb
fs
add
jns
out
imul
dec
rcll
jns
sbb
and
int
aad
pop
nop
rorl
mov
out
and
mov
adc
sbb
push
mov
dec
dec
mov
pushf
dec
mov
mov
mov
sub
leave
repnz
test
inc
fwait
sbb
mov
jnp
gs
out
pop
xor
fxch
pop
jg
or
ja
dec
jo
faddl
sub
sbb
popa
ret
pop
sbb
mov
jg
xchg
mov
pop
push
mov
mov
mov
adc
xchg
xchg
push
js
dec
mov
leave
cmpsl
ret
jae
pop
push
jne
shl
int
and
shr
cmp
iret
ja
and
cpuid
or
jmp
and
push
cs
mov
add
and
ror
push
pop
xor
dec
mov
insb
cmpsb
push
aam
lods
xchg
fldt
psubsw
jb
add
test
test
sbb
cmp
jl
mov
cli
test
out
push
test
push
pop
das
sbb
jg
jmp
dec
or
pop
ret
jl
out
mov
cs
sti
lock
sti
add
adc
pop
stos
xchg
repnz
rolb
imul
push
jmp
stc
or
push
outsl
lods
inc
add
jno
mulb
push
jo
bound
cmpl
in
jle
iret
or
repz
cs
insb
shlb
icebp
flds
cld
pusha
xchg
xor
xchg
and
pop
push
cltd
jp
out
dec
mov
mov
push
lret
fildll
adcl
cmpl
jl
enter
cmp
mov
sub
push
daa
ds
add
jecxz
fisttpl
jns
cltd
test
rol
dec
test
cld
hlt
stos
lock
cmp
pop
dec
adc
push
sub
in
lods
mov
push
gs
dec
cmc
xchg
mov
mov
popf
icebp
frstor
or
test
jl
add
push
jno
xabort
pop
das
iret
in
pop
ret
jl
mov
mov
into
and
test
ljmp
pop
notb
fildll
mov
sub
add
push
aaa
inc
adc
out
sbb
adc
dec
stos
idivb
cmp
ret
add
lods
pusha
faddl
xor
pop
sub
fcoms
jmp
jae
in
sbb
sub
negb
pop
outsb
aad
jo
leave
sbb
and
xor
lcall
fsub
xchg
rcrl
mov
xor
loop
enter
sbb
lcall
sbb
aas
out
pusha
jle
les
xchg
jl
xor
xchg
data16
pop
mov
inc
dec
std
or
xor
mov
mov
sub
push
test
in
mov
inc
jg
dec
jecxz
repz
stos
pop
jae
sub
rorb
dec
sub
dec
outsb
mov
and
sub
mov
or
or
dec
das
popa
xchg
jae
out
popf
adc
xchg
in
loop
mov
clc
xchg
cmp
into
test
insl
gs
call
cmc
es
dec
lock
cs
mov
inc
push
add
out
jecxz
nop
jbe
jp
cli
test
pop
push
mov
pop
ja
mov
pusha
xchg
push
push
test
add
shlb
data16
scas
shlb
lret
gs
mov
iret
adc
jbe
inc
dec
movsb
lock
and
jmp
or
fbstp
mov
jle
in
sti
popf
xchg
in
ss
ret
sub
xchg
das
orl
out
aas
int3
add
mov
dec
insl
sahf
std
ja
js
fsts
xchg
es
pop
ja
add
mov
lcall
iret
or
loopne
mov
jp
outsl
jno
mov
cmp
push
scas
cmc
mul
cwtl
xor
rorb
xchg
sbb
mov
subl
inc
in
add
jle
inc
out
in
dec
in
fsts
inc
cmpsl
insb
push
push
insb
sti
shll
sbb
test
pop
pop
inc
test
test
xchg
negl
inc
push
mov
xor
push
adc
mov
in
aas
mov
add
movsb
inc
cmp
scas
icebp
push
arpl
jo
xchg
inc
pop
mov
leave
rolb
push
outsb
cmp
pop
pop
or
sti
add
movsb
testb
repz
cmpsb
sub
inc
in
daa
jnp
je
daa
cmpsb
int3
sahf
sub
jge
nop
fists
notb
cmp
stos
fwait
sbb
cmp
lahf
sub
cmp
outsb
fsubr
mov
push
xor
push
bound
inc
inc
ljmp
outsl
fnstsw
add
cmp
xor
or
fs
or
cmpsl
add
enter
adc
xchg
sub
jle
inc
pop
inc
push
mov
xor
lret
arpl
cmp
xor
mov
mov
cmpsl
fimuls
cld
mov
std
push
dec
out
ljmp
shll
out
or
cli
dec
and
cmp
xchg
mov
push
lret
cmp
fbld
hlt
sub
jge
lret
inc
das
pusha
cmp
cld
xchg
or
fbld
mov
mov
inc
mov
adc
adc
push
xchg
ljmp
ret
dec
sub
test
xor
test
popa
cmc
lret
jge
push
push
fildll
jecxz
xor
pop
iret
ret
repz
out
add
shl
mov
mov
jecxz
outsl
loopne
repz
inc
mov
ret
xlat
ds
sbb
xchg
shr
adc
call
lea
and
ficoms
gs
lret
jns
mov
cwtl
frstor
movl
pop
inc
push
mov
scas
arpl
test
xor
bound
test
pop
loop
aas
jb
mov
xchg
cmp
sti
push
movsb
repnz
adc
lds
inc
mov
jno
xlat
mov
in
sub
je
out
ljmp
cmp
mov
sbb
iret
mov
filds
clc
dec
and
aam
jno
fcomi
or
fldcw
jge
push
pusha
add
sub
rorb
and
lods
adc
mov
dec
push
icebp
dec
pop
jmp
push
mov
jg
mov
xchg
movsb
in
push
not
jg
rclb
out
push
cld
mov
adc
xchg
repz
inc
sbb
ret
in
incb
dec
bnd
mov
add
sahf
cmpsl
rcrl
mov
fdivrp
jle
jbe
jnp
test
xchg
pop
sbb
fnstcw
add
push
mov
flds
aam
cmpsl
pop
bound
jae
or
outsl
mov
xor
ljmp
sgdtl
cld
adc
dec
pop
push
jmp
test
or
sbb
lods
cmc
in
jge
xchg
testl
ret
aad
and
imul
xor
pop
js
scas
push
jns
outsl
push
int3
jne
insb
test
xchg
fcomps
pushf
pop
adc
movsl
imul
dec
testl
aaa
mov
mov
imul
dec
jne
xor
es
iret
ds
push
lock
loope
mov
push
cmpsb
mov
xchg
addr16
sbb
adc
xor
pop
stc
mov
pop
test
adc
mov
inc
add
fdivs
pop
adc
mov
insl
jmp
push
js
clc
or
push
daa
lock
popa
mov
or
inc
nop
repnz
lock
rol
sub
jle
nop
subl
mov
cli
loope
pop
mov
cmp
movsb
jb
sub
add
push
dec
xchg
stos
inc
in
xlat
adc
mov
cltd
clc
fcoml
in
or
push
pop
addl
push
mov
push
into
pushf
movsl
xor
sub
cltd
xchg
lcall
fwait
mov
pop
cmp
nop
dec
fidivrs
pop
ret
cmpb
dec
lret
imul
imul
cmp
xor
inc
int3
dec
inc
ja
sub
insb
std
adc
and
xchg
pop
jmp
mov
data16
dec
pop
sti
rorl
adc
ds
xchg
repz
add
sub
rcr
xchg
sub
js
adc
and
adc
mov
cmp
inc
adc
std
mov
adc
ljmp
pop
sbb
test
and
fildl
mov
aam
int3
shl
jno
lds
mov
cmpsl
inc
pop
push
sub
pop
and
imul
dec
jmp
push
mov
jbe
sbb
adc
inc
sub
mov
and
inc
lods
mov
inc
iret
mov
sbb
jno
inc
inc
mov
notb
adc
loopne
addr16
test
pop
xor
push
sti
arpl
xchg
jns
scas
orl
gs
jnp
xchg
aam
cmpsb
add
cmpsl
push
int3
dec
xor
stos
and
clc
nop
mov
cmp
or
jb
jb
stos
lds
movsl
pushf
mov
lods
mov
or
aaa
lea
pop
out
xchg
push
lret
mov
test
mov
xchg
dec
sahf
repnz
pop
pop
dec
mov
ja
sti
dec
add
cmp
xor
sbb
add
es
cmpsb
rcr
cmpsl
adc
push
hlt
pop
test
mov
neg
andl
jl
xor
dec
mov
lret
mov
mov
cli
lods
jecxz
mov
test
or
mov
push
movsl
mov
insl
sbb
xchg
std
xor
shll
push
xchg
das
pusha
or
dec
orb
sbb
or
xlat
and
inc
cld
dec
bound
ja
fisubrs
lea
mov
sub
out
sbb
jo
out
inc
arpl
adc
or
dec
add
cmp
lahf
loope
mov
cltd
dec
jl
shrl
jnp
jg
mov
movsl
adc
roll
loop
pop
mov
icebp
pop
xor
sahf
fxtract
push
adc
or
test
das
pop
pushf
mov
pop
enter
and
sub
add
cmp
outsb
jp
fistps
dec
movsb
xor
xor
cmp
mov
push
mov
mov
call
bound
dec
test
cmp
rcrl
jl
out
ja
hlt
jp
and
pop
add
jno
adcl
sbb
pop
cmp
add
daa
jle
lods
xor
jp
cld
push
sbb
and
mov
adc
jbe
fnstcw
pop
add
ja
push
inc
outsl
add
pop
ja
sbb
int3
je
mov
mov
or
dec
jb
pop
popa
test
mov
mov
jb
or
inc
fnstenv
ds
aas
jg
movsb
mov
lret
inc
mov
leave
divb
mov
sub
and
cwtl
out
aam
mov
jecxz
lods
cmp
outsb
fwait
hlt
shlb
mov
and
icebp
xchg
fstps
mov
fadds
into
mov
rorl
xchg
lods
sub
jbe
dec
push
movsb
xor
aaa
nop
push
lds
dec
les
inc
jp
fdivs
pop
xchg
pop
fs
fistpll
arpl
lock
jge
dec
push
cmpl
dec
cmp
mov
sbb
je
mov
inc
fstps
mov
lahf
in
sbb
cwtl
add
xor
or
cli
rcl
dec
inc
jbe
lcall
adc
das
push
sti
push
in
inc
cmp
stc
cmc
rorl
aaa
or
mov
cmp
inc
or
jb
xorb
jp
cvttps2pi
dec
mov
pop
outsb
cmp
jbe
sbbl
mov
xchg
icebp
xchg
mov
pop
cwtl
sub
mov
mov
sbb
test
rep
add
arpl
jp
loop
test
sub
fisttpll
idivl
dec
sbb
ret
iret
pop
pop
sub
xchg
cltd
sbb
cmp
push
call
call
shrl
pcmpgtd
stc
mov
and
pop
lds
ja
outsb
shlb
loopne
repz
lret
insb
shr
mov
faddl
push
aas
fwait
in
popf
jle
push
and
int3
icebp
pop
pop
stc
js
mov
je
test
mov
ret
in
lret
aas
imul
sbb
lods
shlb
mov
fmuls
movsl
sar
leave
push
adc
or
std
lods
leave
scas
hlt
test
setg
aaa
mov
mov
inc
sbbb
out
leave
xchg
pop
cmc
ret
fildl
jo
xlat
shrb
imul
cld
cmpsb
lds
sub
pop
out
push
and
imul
outsl
xchg
mov
mov
shll
mov
bound
mov
cld
mov
and
imul
mov
sti
xor
cmc
rclb
es
mov
mov
jo
std
lret
inc
sbbl
push
addr16
adc
sub
mov
rorb
inc
cmp
mov
dec
jns
dec
cmc
out
ja
xor
push
pop
inc
dec
inc
mov
inc
adc
adcb
mov
xorl
push
push
test
js
mov
mov
mov
push
test
xlat
aad
mov
xchg
lcall
mov
push
mov
pop
add
mov
rolb
mov
pop
lods
fcomps
push
xor
inc
jp
fs
stc
fsubrp
inc
sub
mov
xor
and
push
in
xor
inc
das
jo
std
jno,pt
xor
mov
dec
push
jae
jmp
jno
repnz
xor
lea
jl
rclb
xor
out
scas
in
or
int
aad
in
fstl
mov
sbb
cmp
dec
js
xchg
les
pop
int3
in
cmp
loopne
adcl
loop
jbe
sbb
xor
scas
faddp
xor
push
ffreep
or
or
mov
sub
and
aam
dec
scas
ljmp
inc
cli
cmpsb
and
fwait
addr16
xor
ljmp
sbb
hlt
add
int3
decl
clc
dec
push
addr16
lahf
aam
or
daa
push
fdivrs
pop
add
mov
mov
cwtl
in
push
scas
dec
xchg
gs
lods
mov
lret
push
xor
mov
sbb
repnz
adc
test
in
push
cmc
push
mov
mov
push
test
popa
push
fcomi
xor
popa
add
mov
ds
ja
int3
scas
cmp
test
pop
and
push
cmp
cmpsb
pop
in
push
jb
dec
sahf
mov
add
pop
xchg
scas
mov
push
fiadds
adc
jp
mov
call
inc
daa
mov
mov
adc
rol
add
aas
iret
outsl
pop
in
jae
fwait
push
jnp
xchg
mov
cs
and
aam
xchg
call
and
mov
repnz
stc
mov
test
mov
or
call
mov
aad
rolb
dec
inc
dec
cmp
inc
jns
push
fsubs
cmp
mov
add
cmpsl
cmp
cmpsb
dec
icebp
pop
pop
test
push
jo
mov
out
rclb
cmpsl
outsb
outsl
adc
push
cs
int
fsubrs
dec
call
or
dec
jne
ja
insb
jle
mov
addl
jns
aaa
push
dec
and
pop
mov
insb
sub
add
stos
jmp
jbe
cmc
or
sub
mov
psrad
and
lret
cmp
cmpsb
push
sbb
test
nop
incl
push
push
pop
push
push
stc
ss
test
xor
dec
js
cmp
jle
dec
sub
scas
fcompl
sub
jae
orl
sbb
push
jge
idiv
mov
mov
and
mov
jnp
inc
mov
hlt
or
xor
sbb
outsl
and
pop
dec
inc
insl
loopne
push
dec
mov
jle
out
aad
lcall
ftst
adc
jae,pn
sbb
outsb
insl
loop
sbb
mov
out
sbb
rorl
jl
pop
ds
aas
or
cli
mov
cmp
xchg
stos
xchg
fnstcw
fwait
in
repz
cld
lcall
sbb
scas
test
sbb
arpl
cmpsl
addl
lods
loope
jno
stos
sbb
ret
test
pop
xchg
sub
sub
push
test
mov
out
jp
jno
cmp
and
dec
xchg
mov
dec
lock
pop
cltd
jbe
es
mov
mov
xor
shll
xchg
lods
xlat
pop
cmp
mov
inc
jne
xor
xchg
fiadds
nop
mov
lret
dec
enter
lcall
sub
pop
rcrl
xchg
ss
sbb
ss
pop
mov
in
push
sub
enter
out
aad
jnp
cwtl
xchg
out
xchg
lcall
out
movb
js
sub
fadds
push
jne
inc
loop
pop
xchg
dec
push
test
adc
call
mov
mov
lds
mov
adc
fildll
lods
outsb
test
pop
mov
int
enter
cmp
pusha
xchg
mov
scas
pop
repnz
inc
mov
outsb
ror
es
inc
clc
fadds
lahf
dec
or
adc
dec
pop
fimuls
leave
adc
shl
mov
inc
mov
cmpsb
dec
pop
pop
aad
jle
fildll
jle
rolb
sbb
ficoml
xor
dec
lret
les
push
or
aas
push
lea
das
movsb
dec
minps
in
mov
sti
mov
into
sar
test
and
mov
ds
push
cmpsl
pop
mov
outsl
aas
shll
aaa
mul
mov
lcall
inc
xor
insb
and
fnsave
aam
stc
xchg
xchg
enter
imul
sbb
adc
xchg
loopne
and
rcl
add
pop
imull
push
arpl
cmpsl
iret
push
test
cmp
push
inc
std
popf
insl
push
sub
xchg
enter
or
xchg
inc
in
and
movsl
aas
xchg
mov
mov
mov
xor
scas
into
ret
in
sar
lods
add
xor
mov
adc
imul
fistps
add
jecxz
cmp
sarl
push
inc
pop
mov
pop
mov
jb
and
imul
icebp
xchg
jae
pop
push
sbb
lret
iret
popa
mov
mov
jmp
leave
inc
mov
cmpsl
or
orb
shrl
scas
mov
lods
and
jno
and
or
add
cmp
jp
jae
fs
enter
or
dec
lea
or
test
into
cmpsl
shr
xor
add
inc
lret
cmp
incb
xor
mov
jb
pop
lcall
mov
ja
sarb
pop
and
cli
jmp
rorl
or
pop
mov
insb
pop
cmp
mov
bndstx
push
jle
cmp
inc
ljmp
mov
push
cltd
stc
inc
lret
stos
lcall
dec
jno
iret
lret
pushf
cwtl
mov
jbe
movl
stos
pop
adc
sub
mov
mov
adc
in
cmp
xchg
out
adc
cmc
hlt
sub
push
popf
mov
cmp
lea
hlt
mov
or
cmp
xor
mov
xchg
sbb
xchg
cmp
dec
mov
push
popf
shr
jecxz
aam
addr16
dec
in
cmp
filds
outsl
addr16
imul
inc
sub
daa
pop
mov
cltd
hlt
lods
push
outsb
inc
cmp
mov
sub
pop
in
ret
add
movsl
shrl
out
and
adc
lods
push
daa
dec
mov
sub
shrb
outsl
aas
aam
cltd
out
mov
jno
xchg
int
cmpsl
xchg
mov
stc
sbb
mov
loope,pt
adc
dec
jmp
test
pop
cmp
mov
into
clc
and
sub
test
inc
sub
into
adc
and
sub
xchg
mov
jp
xchg
rcrl
lret
cli
dec
mov
cmpsb
repnz
in
lret
lods
movsb
outsl
jle
pop
add
les
adc
cwtl
call
cmpsb
sub
sbb
in
xchg
inc
sbb
scas
push
popl
clc
fidivrl
fidivl
dec
out
mov
sub
and
mov
push
aad
repnz
jge
jecxz
sbb
dec
hlt
rorb
scas
ja
bound
je
lods
std
or
ds
push
into
dec
lock
test
shrl
lcall
outsl
push
out
stc
jbe
xor
imul
imul
xorb
push
sbb
nop
add
xor
sbb
jmp
addr16
xchg
xor
shl
sub
jge
in
loop
adc
push
adc
push
lods
out
pop
nop
pop
scas
xchg
cmp
jg
inc
sbb
sbb
mov
mov
int
in
mov
pop
stc
test
add
sbb
sbb
xlat
cmpb
dec
fs
loop
pop
adc
sahf
aaa
sub
int3
cmc
ror
das
cmpsb
addb
inc
inc
cwtl
scas
out
inc
xorb
insb
add
cltd
jb
mov
sti
push
jge
sub
inc
cmp
jno
rcl
or
or
xchg
mov
bound
mov
dec
nop
aam
repnz
cmp
xorl
mov
cmpsl
push
jg
push
repnz
and
aaa
sahf
mov
inc
test
xchg
fimuls
insb
bound
ja
dec
push
sahf
movsl
cwtl
mov
sarb
adc
aad
mov
jnp
ljmp
jo
sub
rorb
andl
cmpsw
jecxz
adc
rclb
nop
sub
jg
mov
push
sbb
testl
xchg
mov
add
out
loop
adc
incl
faddp
pop
jmp
fiadds
and
out
and
leave
xchg
jae
int3
lcall
ficompl
aam
dec
xor
xchg
cmp
pop
jne
sarb
popf
pusha
xor
mov
repnz
jb
xchg
sbb
xor
mov
pop
das
in
sbb
xchg
es
sar
adc
xlat
or
pop
inc
sub
sbbb
cltd
push
insb
and
inc
ret
sar
test
xor
pop
xchg
dec
mov
lds
push
aam
dec
sti
call
inc
add
cld
mov
dec
adc
xor
pop
xor
xor
xor
cmpsb
out
mov
jne
jecxz
push
lods
pop
mov
out
in
sysret
lahf
add
adc
pop
sbb
daa
dec
test
inc
xchg
mov
sahf
jae
cmp
mov
ror
dec
dec
mov
add
loop
add
cltd
clc
jp
push
sbb
sarb
test
mov
push
jg
stos
mov
xchg
bound
and
rcr
lahf
aas
or
in
mov
dec
popf
mov
dec
push
push
mull
add
bound
xchg
adc
push
adc
mov
mov
in
jo
dec
lahf
in
add
aas
lret
dec
xor
mov
adc
or
test
clc
mov
fcoml
hlt
aaa
xor
dec
mov
ljmp
ret
je
push
inc
movsl
inc
xchg
push
incl
mov
xchg
insl
lahf
push
repz
movsb
and
mov
sbb
paddusb
lcall
mov
cmp
or
cmc
sbb
jne
pusha
sbb
lcall
cli
out
add
cmc
out
ret
mov
dec
insb
rorl
addb
inc
loopne
lahf
call
pop
cwtl
aaa
mov
dec
pop
aad
mov
fwait
lret
ljmp
mov
cs
loope
loop
repz
enter
idivl
call
aas
dec
jbe
adc
sub
in
imull
mov
xchg
push
ljmp
push
cmp
add
or
lock
mov
cld
pushf
cmp
lods
mov
inc
int
cmp
mov
sub
push
xor
lcall
jmp
mov
mov
flds
in
jg
push
xchg
adc
bound
cmp
pop
mov
scas
xor
mov
adc
sub
bound
ds
cmpsb
pop
mov
mov
sub
jmp
divb
loopne
jle
jmp
es
jl
inc
sbb
inc
js
inc
xchg
or
jo
add
je
in
and
xor
movsb
and
push
xor
xchg
ret
int
pop
sahf
xchg
ret
push
les
fcoml
jp
mov
push
adc
pop
adc
mov
xor
push
cld
cmp
fsubl
movsl
sub
out
ret
cld
push
int3
out
cwtl
mov
cmpsl
or
adc
gs
lcall
mov
add
push
out
js
out
adc
push
movsl
xchg
and
xor
imul
mov
mov
insl
mov
cmp
or
mov
mov
cmpsl
cmpsl
lods
ds
imul
push
lcall
jp
in
push
cltd
enter
out
dec
fisttpl
push
cmp
xor
fisttps
dec
stc
pop
sub
fstl
mov
xor
test
pushf
xchg
leave
xor
mov
in
cltd
cwtl
sbb
loope
pop
lahf
ret
mov
lods
fstl
mov
repnz
loope
test
cs
shlb
cmp
outsl
jo
sbb
xchg
cmp
in
clc
xchg
or
sbb
js
dec
mov
shll
jae
adcl
fcmovnu
test
xor
lock
out
mov
cli
and
adc
movsb
adc
fisttps
aaa
xor
imul
cli
loopne
and
stc
rcl
int3
lock
inc
sbb
push
ljmp
test
sub
jle
bound
dec
ficomps
in
repz
daa
and
mov
pop
das
mov
add
fiadds
inc
cmp
pop
adc
aaa
mov
stos
addr16
push
jmp
xchg
fistps
pop
jmp
jl
sub
cmpsl
scas
cwtl
sub
gs
movsl
or
mov
or
sbb
lret
fldcw
xor
in
or
sub
xor
dec
addl
dec
jno
rol
pop
frstor
mov
push
pop
jecxz
mov
xchg
mov
cmp
int3
mov
mov
ret
mov
stc
sbb
cmp
lahf
fadd
dec
in
push
xor
imul
xor
mov
jmp
xor
in
ja
pop
roll
adc
add
nop
sub
inc
xor
cmp
or
xchg
and
aam
inc
dec
aam
xchg
fsub
mov
bound
icebp
call
fdivr
repz
outsl
fsubl
shll
fwait
aad
into
movsb
lods
scas
rcrb
push
je
mov
cmp
fwait
mov
in
xchg
or
mulb
inc
js
cwtl
pushl
aad
xchg
mov
loopne
or
aas
adc
or
addr16
and
mov
lret
cld
sbb
fildl
movsl
or
mov
jecxz
or
insl
mov
orb
cli
repnz
xchg
and
add
mov
movsb
imul
dec
fadds
clc
dec
sub
sub
aaa
imul
mov
arpl
imul
adc
cmp
xchg
enter
test
movl
or
adc
add
aas
insb
js
mov
call
mov
sub
mov
movsl
je
je
mov
and
xchg
repz
push
test
nop
cmpsb
into
cs
insl
movsb
mov
stc
jge
in
or
xorl
or
adc
adc
mov
test
daa
sahf
jae
inc
call
add
popa
jecxz
lds
jmp
pop
xor
sub
add
adc
loopne
pop
out
lret
enter
push
cld
aam
cltd
sti
out
xchg
pop
mov
imul
inc
icebp
inc
incl
fcoml
push
jecxz
and
int
std
jge
cmp
mov
xchg
lcall
aad
jecxz
cmp
xlat
mov
loopne
leave
ss
test
add
cld
gs
sbb
mov
jmp
inc
scas
add
rcrl
mov
fbstp
mov
or
cmp
fcmovnb
lret
mov
mov
dec
push
jle
idivb
mov
dec
loopne
pop
imul
or
jae
push
inc
fisubrl
dec
movsl
aas
jno
or
in
mov
mov
dec
clc
push
ss
out
or
jnp
subb
call
hlt
dec
push
push
push
dec
and
fdiv
cltd
imul
sbb
pop
dec
les
or
jbe
xchg
test
jae
dec
icebp
sbb
cltd
mov
bound
push
gs
pop
dec
lds
xlat
in
xchg
pop
mov
jle
fwait
out
loopne
sub
sbb
aaa
xor
inc
cmp
ffreep
xor
mov
and
ret
mov
pop
aad
scas
jo
fildl
or
imul
addb
cmpsb
in
or
add
mov
pop
or
mov
mov
xorb
add
pop
dec
cli
sub
inc
mov
daa
outsl
jo
arpl
lea
lret
and
sub
and
cli
mov
test
inc
pop
xlat
dec
and
and
inc
xchg
inc
in
pop
je
sub
cs
iret
push
inc
and
daa
out
ffree
ret
iret
xchg
idivl
stos
insb
and
into
sbb
test
inc
lock
insb
inc
mov
jno
mov
repz
jns
movsb
in
nop
pop
mov
scas
loope,pn
pop
xlat
push
mov
inc
repz
xchg
pop
repnz
andl
test
xchg
push
cs
and
popf
push
xchg
pop
inc
lret
adc
clc
pop
cli
call
jl
jns
lret
cmpsb
mov
mov
add
inc
shlb
movsl
pop
lods
inc
or
push
scas
movsb
scas
adcl
mov
xor
jmp
inc
jg
xchg
repz
cli
aam
adc
cmpsl
mov
ja
rcrl
ficoml
xchg
pusha
sbb
leave
fstpt
push
addr16
aas
mov
pop
or
sti
push
sbb
fwait
mov
fwait
sbb
inc
jo
mov
retw
adc
ja
test
mov
push
pop
rcrl
imul
mov
ja
push
int
mov
or
das
pop
cmpb
jbe
jle
xor
leave
mov
add
sub
xchg
loope
scas
cmp
push
sbb
jbe
xor
cmpsl
adc
dec
hlt
dec
cltd
cmp
icebp
mov
scas
push
lods
fldenv
sub
sbb
fiadds
or
xchg
adc
xchg
into
data16
outsb
cli
mov
sub
adc
push
mov
mov
jno
cmp
dec
repz
je
std
and
cwtl
ss
enter
sub
push
dec
inc
add
cmpsl
fisubl
cmpsl
lea
adc
ret
adc
ret
sub
xchg
int3
inc
in
test
out
cmp
mov
jns
push
mov
ret
arpl
mov
adc
mov
or
cmp
mov
imul
cmp
test
sbb
jo
jecxz
pop
aaa
pop
sub
mov
cmpsb
mov
decb
adc
das
push
dec
dec
pop
sub
mov
push
adc
fldl
dec
sahf
jnp
sbb
movsl
lahf
mov
dec
clc
mov
fnsave
outsl
mov
aad
dec
or
and
mov
into
fs
lods
push
jmp
enter
or
push
mov
divl
jle
dec
test
les
pop
call
jg
loopne
scas
lahf
lea
xchg
jns
or
aaa
or
and
sub
or
sub
aaa
mov
loopne
call
test
mov
addl
test
aam
in
cltd
and
cmp
and
mov
mov
dec
icebp
push
je
bound
mov
sbb
cs
xchg
add
sbb
or
stos
scas
imul
and
pop
inc
mov
lcall
adc
jae
insb
fnsave
subb
rcr
and
push
cmp
inc
and
xor
insb
test
and
shlb
pop
ljmp
xchg
imul
insl
ret
nop
cmp
push
in
adcb
mov
dec
cmp
fucomi
jmp
xor
data16
jno
pop
pop
je
imul
push
cltd
dec
push
cmpsb
cld
stos
ja
sarl
enter
decb
std
dec
les
in
or
inc
mov
nop
cltd
mov
xchg
and
push
les
pop
inc
inc
xor
inc
iret
out
mov
lcall
int3
cmpsl
or
icebp
imul
fimull
enter
inc
fpatan
rcrl
mov
movsb
leave
mov
lea
mov
int
ror
push
add
xor
mov
adc
jecxz
mov
jb
xlat
lods
push
roll
mov
push
pop
dec
lea
inc
jge
cmp
sbb
mov
fistpl
jp
fcomps
cld
sub
mov
mov
mov
xorb
jp
sbb
addr16
sub
cmp
add
test
test
cmp
pop
mov
cmovne
sbb
in
cmp
in
adc
mov
xor
mov
inc
add
cmpsl
mov
xor
pop
mov
aad
mov
sub
dec
loope
subl
mov
cmp
push
into
cs
es
ja
inc
stos
jge
arpl
push
outsl
sbb
rcll
dec
mov
repnz
inc
xorl
pop
movsl
inc
inc
mov
icebp
mov
sbb
jbe
mov
dec
dec
dec
cmp
push
sub
daa
pusha
ljmp
inc
cmp
lret
adc
test
cwtl
dec
pop
or
mov
ja
xchg
jecxz
adc
lcall
out
aaa
sub
stc
or
lcall
leave
insl
lock
hlt
in
xchg
add
cmc
or
addb
and
mov
xchg
mov
fs
dec
test
jmp
mov
je
data16
mov
js
cwtl
inc
outsl
sub
ret
int3
in
std
in
data16
ljmp
ja
ja
or
adc
add
cmp
movsb
mov
or
lods
dec
js
stc
xchg
fwait
sbb
mov
addr16
inc
sub
pop
lods
out
scas
sar
shrl
into
cli
ret
xor
mov
stc
pop
mov
lea
dec
jl
lret
lock
lea
in
inc
push
xor
pusha
push
jbe
xchg
xchg
and
loope
dec
mov
pop
es
cmp
xchg
xchg
add
jnp
aam
or
fsubrp
sahf
mov
xchg
push
mov
notb
loop
pop
into
data16
bound
enter
sahf
icebp
xlat
add
gs
sbb
mov
mov
pop
sbbl
push
adc
and
mov
cmpsl
xchg
xor
test
addr16
mov
push
push
iret
jnp
mov
add
loop
pop
mov
mov
ljmp
xchg
cmpsl
dec
xor
push
test
mov
sub
mov
dec
or
xchg
and
sub
test
xchg
jmp
aam
xlat
or
mov
aaa
jl
cmp
sub
leave
lods
push
mov
pop
loopne
pop
fisttps
jno
in
jbe
push
push
std
shlb
or
loope
pop
or
sub
adc
push
popa
pop
mov
add
es
inc
push
push
mov
dec
test
dec
cmp
jns
pop
leave
push
scas
fidivl
adc
int
inc
push
mov
lea
mov
outsl
cmp
inc
or
adc
lahf
mov
aad
popa
or
lds
adc
cmpsb
push
ja
mov
sub
mov
aam
data16
or
mov
addr16
adc
fbstp
in
fstl
push
loope
mov
xchg
les
xchg
adc
mov
or
push
jp
mov
mov
imul
xlat
jne
fcoml
ja
jp
xlat
scas
scas
repz
mov
jge
or
pop
cld
jns
jge
mov
mov
push
mov
lds
push
out
es
push
imul
test
adc
into
xchg
push
lods
mov
push
cmpb
popf
and
pusha
dec
push
mov
pop
repnz
arpl
inc
mov
aas
and
push
fisttps
notb
fsubl
fstpt
mov
inc
cmp
jno
aam
mov
mov
movsb
mov
test
leave
inc
inc
inc
loop
dec
mov
mov
cwtl
jno
xor
mov
adc
les
out
jne
inc
ret
cmpl
mov
lahf
mov
adc
subb
popa
icebp
int3
scas
mov
in
andl
inc
xorl
push
rorb
mov
mov
enter
push
imul
dec
incb
pushf
cld
lods
or
fisubs
aad
in
leave
sub
int
add
ja
stc
mov
rcrl
jl
push
movb
sahf
out
push
pop
or
testb
sub
shll
mov
mov
mov
inc
data16
push
cltd
or
repz
pop
ret
adc
mov
rclb
fs
mov
les
out
xlat
mov
dec
cmp
dec
xchg
or
and
or
and
in
negb
mov
dec
jbe
lods
insb
fcmovnb
pop
es
pop
addl
cmp
clc
xor
outsb
jo
or
jno
add
sahf
pushl
gs
bound
cmpsb
es
cmc
push
aam
add
pop
aas
icebp
je
mov
stos
dec
and
mov
xchg
pop
xorl
and
and
or
aad
pop
lods
jecxz
aaa
jae
pop
mov
xchg
mov
mov
mov
jns
cmp
fsubr
push
in
jnp
leave
or
mov
adc
sbb
jp
or
push
test
jmp
pop
inc
xchg
lahf
neg
pop
daa
incb
inc
sahf
cmp
and
jge
lahf
push
mov
or
js
outsl
dec
ja
xlat
int3
push
imul
notl
pop
loope
movsb
dec
xchg
mov
pop
cmp
cmp
push
lods
cmc
sti
jl
test
pop
lds
sub
pmaxsw
scas
add
int3
dec
lret
sahf
imul
pop
cmp
xchg
insb
jl
fnsave
mov
push
or
fcomip
dec
pop
ds
inc
pop
rcll
jg
das
mov
mov
imul
les
insl
and
push
popf
outsl
cmpsb
das
movsb
mov
cltd
ret
cld
sbb
xchg
fistps
and
cmp
dec
scas
int3
sbb
pushf
push
daa
popa
in
das
sub
lds
lods
incl
mov
xor
mov
imull
xlat
xchg
fildl
cli
fs
sahf
mov
loope
sbb
decl
jns
sbb
negb
addr16
mov
fnstcw
lret
les
mov
imulb
inc
bswap
cs
push
and
add
mov
jg
pushf
xchg
mov
jg
cld
jmp
ljmp
ror
hlt
and
jmp
repz
xor
insl
jns
sbb
std
inc
xor
in
sbb
enter
fisubl
mov
dec
enter
sbb
mov
jo
sub
repnz
jb
add
ret
outsl
mov
sub
fstp
xor
stos
sub
xor
mov
pop
inc
or
hlt
int
sub
pop
mov
sub
mov
push
rcrb
adc
xor
ljmp
cmpsb
mov
sbb
lret
push
das
fimull
jns
cmp
decb
or
in
js
adc
or
clc
stos
cmpsl
xor
mull
xor
out
lods
mov
ja
and
pop
neg
adcl
orl
filds
inc
pop
pop
je
mov
call
fsub
xor
rcrb
in
sub
sarb
out
mov
mov
fstps
gs
pop
mov
jns
xchg
or
ror
adc
xor
std
lods
mov
or
cmp
out
mov
pushf
xor
mov
orl
cli
lods
inc
jne
add
ljmp
mov
lods
xchg
or
insb
add
pop
gs
mov
fdivrs
xchg
inc
call
jl
out
pop
xor
nop
jl
mov
cmp
pop
and
pop
add
add
js
add
push
aas
mov
push
enter
pop
add
push
push
and
mov
mov
aaa
dec
sbb
inc
rol
repz
lret
push
aam
leave
icebp
in
mov
push
cmp
lret
rol
xchg
loop
test
xchg
add
sub
lock
mov
cmp
jecxz
pushf
mov
xor
adc
jnp
inc
pop
adcl
fdivrl
xor
mov
aaa
sub
les
add
repnz
popa
push
cmp
or
cmpb
mov
outsl
pushf
rol
cmp
dec
add
push
cld
push
in
into
xor
repz
and
or
cmp
jmp
jecxz
pop
and
cmp
out
push
in
push
jp
xchg
dec
jecxz
shlb
jbe
jno
aaa
mov
mov
mov
clc
outsb
cmp
lret
mov
mov
scas
aaa
nop
xor
int3
aaa
xchg
mov
insl
mov
popf
into
insb
inc
int
pop
adc
das
mov
push
or
jecxz
jmp
lret
cmp
je
insl
fdivrs
outsl
cld
sahf
jge
jecxz
stos
sbb
subb
aam
mov
inc
pop
arpl
or
mov
or
jae
sub
jl
fildl
aam
inc
psadbw
popl
mov
and
xor
add
cli
jae
sub
xor
cmp
cmc
scas
sub
mov
out
enter
add
es
mov
loop
rol
aas
shlb
jns
xchg
into
mov
lcall
add
fstps
mov
adc
dec
addb
out
mov
sub
push
lock
lret
inc
push
stos
js
pop
iret
pop
adc
stos
jg
xor
jg
movsb
call
out
cmpsl
mov
pop
inc
fidivs
cmp
mov
adc
int
jmp
xlat
in
xor
add
sub
jmp
repnz
and
lea
mov
test
leave
cmpsl
mov
negb
popf
mov
add
cmp
aad
pusha
daa
xchg
shrb
scas
mov
aas
or
jae
incb
test
cmp
and
aad
adc
add
rorl
clc
and
lock
jo
cmpsb
xor
stc
jge
xchg
movsb
in
sub
imul
mov
ret
scas
xchg
or
mov
shll
outsb
push
stc
ret
add
int3
imull
fsubrs
xor
push
das
test
icebp
addr16
jp
lods
test
leave
ds
dec
sbb
test
out
stos
jp
add
nop
pop
fistl
sbb
fiadds
pop
mull
pusha
mov
xchg
push
mov
dec
lods
cwtl
nop
negl
mov
hlt
repnz
aam
fmull
cmpsb
fldcw
pop
mov
and
push
popf
sub
push
lcall
ret
call
mov
rcll
inc
xchg
in
inc
mov
imul
pop
je
int
sub
sahf
sti
gs
mov
jmp
sub
sbbb
inc
mov
sbb
push
arpl
cmp
or
in
out
xor
and
mov
loopne
xchg
inc
inc
loop
sub
cmp
ds
fs
in
sbb
pop
movsl
jmp
stc
pop
inc
pop
das
lret
pop
push
test
sbb
xor
push
push
rcl
dec
nop
mov
dec
int3
mov
xchg
pop
sarl
mov
cltd
dec
nop
xor
xchg
dec
xor
and
cwtl
hlt
hlt
dec
aam
out
test
lcall
aaa
int3
and
mov
mov
cmp
test
lret
xor
jge
inc
in
gs
rcll
pop
cmp
push
and
std
push
pop
out
popa
cmpl
pop
sahf
cli
stc
sub
inc
jns
imulb
fcoml
jge
mov
push
jmp
addr16
xor
into
or
popa
and
mov
lods
cli
push
icebp
sbb
cmp
and
nop
mov
popa
mov
orb
enter
mov
pop
jno
inc
in
or
outsb
adc
in
dec
fcmovnbe
lea
pop
out
lock
jb
data16
cmp
xchg
sub
insl
inc
iret
pop
adc
jne
xchg
sarb
xor
gs
sub
or
and
ds
lea
jo
sbb
movsb
xchg
lahf
cmp
inc
cmp
shrl
xchg
test
xor
sub
mov
xchg
push
int
fcoms
adc
test
mov
int
inc
add
outsb
cmp
jbe
jmp
lea
xlat
lret
imul
dec
jns
cmp
mov
insb
lcall
subb
rorl
ret
mov
test
ljmp
inc
mov
sub
jecxz
cltd
imul
jp
in
call
push
jo
sbb
or
mov
popa
movsl
xchg
jecxz
std
xor
pop
popa
inc
cmpsl
outsl
inc
loop
in
sbbb
stos
push
fnstcw
sbb
test
orl
lea
dec
pushf
mov
add
dec
push
pushl
enter
shll
mov
pop
pusha
icebp
hlt
xchg
cmp
fs
and
sahf
dec
and
mov
outsb
xlat
fldcw
pop
mov
jg
mov
ljmp
sbb
jae
cmp
and
aas
jp
in
sub
pop
inc
or
aam
hlt
jae
or
mov
inc
pop
lods
pop
add
dec
insl
je
inc
pop
fsubs
push
sbb
or
cmp
clc
into
daa
cmpsl
repnz
and
rol
cmp
enter
in
xor
mull
ficomps
nop
mov
fildll
ljmp
jnp
inc
insl
adcl
sub
in
dec
addl
cmp
scas
loope
or
leave
mov
aas
jb
sbb
arpl
aaa
adc
fcomps
bound
out
pop
lcall
addr16
add
out
ja
scas
rclb
inc
cmc
mov
or
cmc
stos
inc
ss
shlb
jmp
jp
adc
ret
xor
mov
daa
or
and
int3
sub
mov
push
adc
fistl
cmc
cmc
push
mov
jmp
sbb
enter
cwtl
ds
jge
mov
aam
dec
lahf
cmp
xchg
sbb
cs
loop
mov
ja
ror
pop
ret
dec
inc
sbb
sub
lea
fcoml
shrl
and
add
and
daa
cmp
jae
repnz
pop
xor
clc
jb
add
pop
pop
clc
mov
mov
scas
out
icebp
xchg
jnp
fisttpl
adc
xor
pop
hlt
push
cmp
iret
xchg
jb
and
dec
adc
xor
jecxz
xor
mov
stc
cmp
pop
in
or
cli
rcrb
xor
aaa
adc
lahf
cmp
cs
not
jecxz
mov
pop
xchg
pop
adc
cltd
xor
sti
sbb
imul
sbbb
imul
out
mov
arpl
lea
clc
lods
ss
pop
or
popf
insl
shll
sbbl
add
in
subl
sahf
fwait
pop
int
out
movsb
bound
pop
cmp
nop
sub
push
dec
sub
stc
cld
pop
in
cmpb
cmp
or
or
jmp
jb
mov
sub
ds
or
lods
cmpsl
ja
sub
insb
lret
sbb
test
test
imul
test
mov
rorl
stc
clc
insl
test
je
loop
dec
in
dec
sub
xabort
adc
movsb
sahf
or
xor
mov
jecxz,pn
add
or
gs
iret
movsl
sub
dec
xor
jo
dec
add
and
xchg
in
mov
jnp
in
sub
outsl
pop
cld
outsl
insb
or
or
cld
sub
cs
jle
lret
int
bound
idivb
cmp
ret
rclb
push
sub
xor
add
into
adc
sbb
or
mov
cwtl
imulb
pusha
sbb
popa
mov
aad
xchg
inc
popa
mov
aam
sub
mov
nop
push
mov
mov
cwtl
mov
mov
lret
push
sub
mov
adc
sbb
popa
sub
mov
hlt
fstpl
sub
in
push
nop
ret
inc
movsl
pop
fs
call
scas
adc
xchg
cmc
and
add
push
and
arpl
aas
mov
test
fists
sub
mov
into
jg
in
mov
inc
lret
icebp
in
push
cwtl
ljmp
pushf
ret
in
enter
and
jg
movsb
mov
sbb
push
hlt
xchg
pop
push
xor
out
pop
das
push
rorl
xor
dec
sbb
mov
jb
arpl
adc
fcmovnu
mov
mov
out
pop
add
cmp
shrl
cmp
pop
mov
loope
mov
enter
xlat
and
popa
insl
nop
mov
lret
out
cmp
or
mov
mov
pop
pop
jmp
push
mov
lret
sbb
cmpl
add
lret
mov
es
ret
mov
nop
cli
stc
movsb
adc
out
push
clc
cmp
pop
or
les
dec
jg
sub
loope
out
sub
mov
pop
cltd
aad
pop
int3
in
mov
and
jle
cmp
push
andl
xor
sbb
adc
cs
add
xor
or
and
lcall
scas
sub
mov
push
add
sbb
clc
inc
js
lock
adc
mov
imulb
lahf
andl
xorl
mov
push
cmp
push
aaa
pop
push
pop
pop
inc
push
mov
movb
test
or
clc
rcll
pop
mov
inc
xor
pushw
push
inc
fwait
xor
in
movsl
test
xchg
mov
or
lock
dec
add
loopne
push
ljmp
pop
mov
mov
mov
pop
test
sbb
in
enter
fistl
jbe
lcall
mov
cmp
jmp
aam
adc
xlat
mov
daa
pop
out
das
jecxz
cmc
cmp
inc
imul
in
lret
mov
dec
out
test
into
call
in
add
imul
popf
and
adc
ror
addr16
das
arpl
jnp
mov
dec
xchg
push
mov
das
inc
int
cmpsl
in
xchg
jmp
dec
inc
mov
test
pushf
cmp
aad
std
flds
nop
icebp
xor
test
jb
jge
movsl
pop
push
pop
hlt
inc
mov
xchg
daa
in
roll
mov
jno
add
test
xchg
jmp
jne
xchg
mov
sbb
add
mov
scas
ret
gs
cmc
sub
xchg
aad
sbb
xchg
mov
dec
js
sarb
sub
push
cltd
movsb
call
lret
dec
in
xchg
mov
popa
imul
cli
lea
xor
cmp
in
or
pop
icebp
imul
xor
es
mov
mov
xchg
daa
or
or
pop
or
or
out
jecxz
ds
sti
out
ds
outsb
adc
sbb
flds
jnp
jae
ret
adc
and
int3
and
enter
lcall
push
fucom
sbb
dec
aaa
cmp
jbe
fstps
enter
cmp
jg
xor
mov
fsts
test
and
adc
jns
in
out
cmp
inc
popa
cmp
inc
mov
je
cmp
xor
jno
sub
lcall
cs
data16
sub
cmp
xchg
ljmp
xchg
xor
jns
scas
pop
sub
loope
lret
aad
pop
sahf
dec
and
out
arpl
sub
fldcw
cld
xor
mov
jbe
sub
inc
inc
icebp
or
sbb
ds
sbb
xchg
add
dec
jae
fsubs
aaa
mov
jg
js
sahf
pop
sbb
sub
rorl
mov
shrl
xor
jg
dec
push
sub
or
mov
or
xchg
loop
pop
rcrl
mov
int3
js
pop
cli
sbb
in
inc
and
nop
mov
pop
push
add
iret
sbb
lahf
push
lahf
jg
rcrb
cwtl
cmp
addb
add
cmp
scas
xchg
and
sar
and
sbb
pop
mov
xchg
mov
sbb
cmc
pusha
adc
stos
jnp
hlt
cmp
or
stc
fmul
leave
daa
mov
repnz
insb
pop
xchg
xchg
pop
inc
movsl
jne
mov
push
dec
faddl
jl
adcl
subb
adc
push
and
push
dec
mov
leave
jno
int3
or
cltd
pop
mov
shlb
or
outsl
lea
cmpsb
add
lods
ret
inc
pop
xor
mov
es
bound
mov
fs
fwait
cmpsl
add
fs
cmp
inc
pop
mov
sub
xor
xor
mov
mov
test
sti
cld
lret
pop
shlb
mov
mov
sbb
ljmp
mov
lahf
out
lods
sarb
lods
cltd
xchg
outsb
leave
into
fstpt
add
sub
adc
sbb
fs
js
sub
lret
sarl
add
aas
aas
add
jmp
push
loop
es
inc
aad
dec
movsl
mov
stos
mov
jb
cltd
pop
adc
push
cld
popf
arpl
push
cli
mov
push
add
jne
push
jno
sub
cmp
xchg
adc
iret
lcall
es
mov
jge
pushf
push
stos
int3
out
adc
out
negb
inc
shll
add
andl
cli
xor
jnp
ret
push
fidivrl
pushf
imul
cmp
cmp
sbb
lret
push
mov
dec
jge
lahf
data16
mov
cmp
xchg
mov
or
mov
xor
and
jle
jnp
cmpsb
jb
dec
cmpsl
pop
fbld
mov
gs
pop
mov
and
mov
outsb
or
idivb
testb
push
mov
gs
mov
addr16
fst
loope
jns
push
pop
xorl
and
jno
mov
stos
inc
imul
leave
jmp
and
sub
addr16
mov
push
stc
push
xchg
xor
cmp
gs
aas
jmp
push
dec
mov
out
xor
sub
mov
inc
das
pop
adc
lret
ret
and
fwait
sti
les
lock
push
cli
xchg
ljmp
cmp
stos
pop
lret
sti
mov
push
test
jns
dec
mov
cmpsl
mov
xchg
mov
mov
test
ss
mov
shll
outsb
int
sub
jge
sub
dec
inc
icebp
lcall
arpl
dec
imull
mov
es
daa
cs
addr16
or
adc
or
inc
std
xlat
movsb
icebp
rcll
xor
sub
push
scas
xchg
xchg
ret
daa
push
les
push
jae
insl
dec
xor
mov
pop
outsl
mov
inc
xchg
pop
sub
iret
dec
cmp
insb
jnp
test
cmp
es
dec
push
pop
insl
jo
and
mov
lods
imul
adc
xor
push
jle
ljmp
stos
mov
or
adc
adc
hlt
lods
out
jge
inc
imul
mov
mov
mov
mov
insb
aaa
test
pushf
jl
pop
call
in
mov
pop
inc
stos
or
pop
fcompl
jno
adc
push
pop
orl
or
insb
add
cld
shrl
mov
pop
loop
subb
insb
pop
int3
add
cli
das
adc
inc
or
pop
scas
insl
repz
sbb
pop
das
adc
rclb
mov
aaa
lcall
xchg
xchg
dec
jb
outsl
jo
jge
repz
mov
add
jne
xchg
xchg
faddl
push
nop
daa
sub
stos
jmp
and
mov
test
cmc
stc
mov
cld
aam
in
fisubrl
inc
and
js
sahf
jg
jns
loop
xchg
push
pop
call
fs
push
imul
lods
dec
mov
xchg
mov
adc
mov
add
or
les
cltd
or
faddl
das
repz
into
cmpsl
lods
adc
and
xchg
faddp
inc
enter
xchg
stos
mov
ds
sub
fwait
jp
dec
adc
pop
fdivr
popf
cwtl
pop
cmp
dec
ja
push
and
jle
popf
pop
ja
cmp
shlb
mov
popf
push
jae
cwtl
jecxz
test
add
sahf
xor
jbe
in
sbb
fistl
les
inc
add
xchg
sub
jno
adc
mov
and
mov
mov
sbb
subb
movb
out
dec
or
icebp
out
push
push
pusha
jecxz
aad
mov
clc
mov
sub
out
sahf
mov
loop
sahf
lea
pop
call
std
add
clc
rolb
mov
push
pop
inc
sbb
jmp
dec
ret
ret
loop
adc
and
mov
stc
test
xlat
call
orl
adc
jno
push
je
and
ficoms
popa
dec
xlat
stos
fsts
loopne
pusha
xlat
dec
rcl
jmp
lock
mov
mov
pushf
jecxz
ljmp
cmp
fwait
dec
rcrl
push
adc
loop
or
iret
sub
sub
and
mulb
lret
pusha
inc
xchg
dec
mov
movsl
movsb
adc
add
and
adc
enter
fimull
loope
or
mov
pop
inc
push
xorb
dec
xchg
fs
mov
idivl
addb
sbb
sahf
out
movsl
mul
mov
mov
rclb
mov
leave
movsl
sbb
js
xchg
mov
sbb
mov
leave
bound
ja
sbb
mov
sbb
pop
dec
hlt
pop
lahf
xchg
out
adc
mov
or
imull
or
insb
inc
dec
xor
rcl
out
in
lahf
dec
aad
leave
xor
push
inc
or
scas
pop
repz
sub
mov
outsl
or
jle
and
dec
inc
nop
sub
ret
mov
pop
out
js
bound
pop
lret
lahf
int
imul
lret
ffree
push
cmp
mov
xchg
or
insb
push
sub
ljmp
pop
xor
xchg
aas
je
movsb
add
fldl
xor
scas
addb
xor
mov
ja
insl
xor
xorl
xchg
pop
adc
pop
pop
inc
movl
push
sbb
loopne
jmp
popf
mov
sub
fsubrs
fcomip
jo
jns
mov
mov
inc
cmp
push
imul
jmp
scas
ss
pop
mov
mov
outsb
or
out
out
inc
add
xchg
int
pop
cmpl
adc
mov
frstor
notl
call
outsb
dec
push
aam
fwait
ret
inc
xchg
sub
push
lret
inc
pushf
mov
push
xchg
jne
and
adc
sbb
shrl
lret
cmp
adc
pop
and
fistpl
gs
rclb
daa
or
test
std
lret
sbb
pop
push
shrl
ficompl
mov
jns
outsb
mov
mov
je
cwtl
in
dec
lahf
jl
cld
scas
xor
aaa
nop
mov
xchg
in
lahf
xchg
push
xchg
stc
or
adc
outsl
xor
mov
add
test
mov
mov
pop
jle
push
bound
ror
inc
jb
lret
fidivs
imul
and
fdivrs
jo
jge
stc
fwait
xchg
daa
lcall
inc
inc
clc
inc
mov
and
cmp
mov
lret
pop
cmp
push
dec
mov
mov
movsl
sub
out
fiaddl
add
add
pop
loope
scas
imul
arpl
cmpsl
adc
add
or
mov
pop
push
jge
mov
mov
dec
pushf
addr16
ljmp
clc
jmp
dec
or
push
xor
cmp
ds
push
int
mov
fmull
gs
stc
cmp
add
sub
adc
lret
and
nop
mov
inc
lea
in
pop
cmp
cltd
clc
cmpsl
and
js
cmp
fs
imul
cmpsl
enter
out
stos
sbb
and
push
pop
sub
or
ss
add
gs
div
arpl
iret
popa
push
adc
or
and
lods
movsb
and
aam
loop
lret
jmp
or
mov
dec
xor
fcmovne
pop
jmp
mov
push
cmpsb
mov
aad
fnstsw
aad
or
daa
or
xchg
push
pop
xor
mov
and
mov
sub
into
or
push
repz
and
mov
jnp
repnz
jo
jecxz
and
scas
fstps
cmpsl
pop
push
push
add
pop
int3
inc
sub
add
mov
xchg
notb
sub
push
push
push
add
xchg
jecxz
jbe
mov
enter
adc
out
fisttps
sbb
int
inc
dec
pusha
xor
sahf
add
inc
mov
ds
arpl
nop
mov
jmp
xor
je
pop
mov
cmc
add
js
hlt
and
stc
mov
adc
into
lods
pushf
in
dec
pop
dec
sbb
into
aad
fadd
xlat
shlb
aad
ljmp
ss
sub
push
imul
ds
push
xchg
pop
jge
mov
out
sbb
sti
fwait
inc
shl
cmp
lock
cmpb
xchg
scas
mov
out
int3
mov
shl
shll
mov
adc
xchg
add
in
sub
mov
push
xchg
repz
fstpl
mov
pop
pusha
jmp
dec
clc
add
aas
pushf
pop
pop
jl
xchg
cmpsl
jl
push
mov
cld
test
repz
cli
mov
insl
test
imul
push
pop
sbb
sahf
jne
out
fdivrl
lods
in
mov
adc
mov
xchg
jecxz
sbb
shr
xchg
imul
sahf
push
bound
fsubs
mov
popa
mov
test
ficompl
add
cli
ss
mov
mov
mov
mov
lea
imul
arpl
pop
out
inc
popf
sbb
inc
dec
icebp
sbb
test
fisttpl
xchg
fstpt
in
clc
inc
andb
rcr
push
inc
lea
insb
push
push
pop
cmp
xchg
out
push
push
repz
mov
notl
cmp
lahf
pop
gs
jle
enter
pop
sbb
sbb
mov
push
jnp
ret
ljmp
loope
jb
imul
or
mov
push
xchg
idivb
neg
sub
mov
lock
mov
jmp
and
push
cli
shll
test
adc
or
xchg
aas
xchg
xor
fsts
push
mov
repz
sbb
repz
cmp
push
mov
jno
divl
pop
mov
push
and
dec
inc
lea
mov
sbb
fs
scas
sub
add
cmc
shrl
loop
insl
repnz
jo
push
jb
shll
push
shr
test
movsb
mov
out
cld
inc
cmpsb
mov
inc
js
jp
arpl
insl
push
mov
cmp
jmp
sbb
sbb
mov
mov
insb
popa
push
push
inc
jae
shlb
sub
fidivrl
dec
cmp
dec
mov
adc
loopne
lea
push
jge
movsl
push
xor
in
or
cltd
mov
mov
hlt
out
es
fwait
mov
hlt
fldl
ret
hlt
cs
cmp
std
push
jae
test
jg
shl
cmpb
xchg
aaa
repnz
xchg
lods
lods
dec
cltd
mov
mov
push
loop
add
leave
jle
jno
jecxz
pop
stos
adcl
popf
mov
inc
daa
xor
xor
adc
mov
jae
ss
mov
xor
push
repz
call
dec
shlb
fwait
ljmp
enter
jl
int3
jp
shlb
call
fisubrs
outsb
jge
sbb
int3
lods
dec
mov
cmc
cli
push
xchg
jmp
mov
cmp
adc
xor
ljmp
mov
test
sbb
out
out
and
push
adc
daa
inc
xlat
rclb
cmp
or
sbb
cmp
push
push
int3
or
jne
cmpsl
mov
push
mov
fs
lea
or
repz
mov
shlb
fwait
ljmp
lahf
int
enter
xchg
arpl
cmc
out
dec
adc
xchg
scas
cs
push
adc
aam
cmpsb
mov
mov
pop
gs
xor
aas
insl
mov
stc
imul
mov
sahf
dec
in
or
cmp
out
adc
outsl
sub
test
mov
imul
cmp
rclb
sbbb
jnp
lock
inc
cltd
or
rcll
lret
lods
dec
sbb
mov
pop
cmp
stos
fstpl
pop
push
gs
sbb
stos
and
out
xor
add
mov
xchg
and
xchg
test
adc
outsl
push
or
xlat
mov
inc
repnz
clc
nop
adc
inc
sub
pop
add
jp
xchg
sbb
clc
outsl
mov
and
xchg
inc
leave
je
dec
hlt
in
ret
imul
push
sub
push
jae
xchg
mov
es
mov
sti
mov
aaa
ja
sbb
loopne
scas
push
in
push
loop
lock
mov
js
cs
push
fcmovb
add
cmp
or
pop
lock
inc
fucomip
xchg
cmp
xlat
jmp
fsubl
cmc
mov
sbb
push
popf
add
pop
cmp
es
mov
jbe
fwait
jo
aad
pop
stc
mov
xor
or
inc
cltd
jge
inc
pushf
cmpsb
mov
fs
mov
rolb
inc
loopne
ret
jnp
dec
dec
adc
std
mov
mov
adc
dec
scas
mov
icebp
jns
inc
fsubr
mov
mov
cmp
xchg
add
int3
mov
js
lea
jb
add
cmp
push
xchg
leave
dec
jecxz
out
inc
je
pop
out
enter
loopne
std
loopne
jnp
and
das
arpl
dec
mov
das
mov
subb
sub
xor
js
je
testl
mov
sbb
pop
pop
xchg
mov
jbe
popa
iret
sbb
stc
sbb
xchg
fmuls
mov
xchg
xchg
lahf
xor
stos
sub
jmp
pusha
xor
int
pop
cmpsb
add
les
and
jno
push
inc
test
popf
mov
popf
data16
gs
icebp
xchg
lret
daa
xlat
sbb
xor
inc
jns
lods
cmp
es
jns
mov
test
pop
scas
pop
push
mov
add
movsl
push
popf
test
mov
js
dec
jg
out
pop
cmp
mov
cmp
jp
aad
pusha
pop
inc
or
mov
pop
fisubrl
mov
ds
xlat
mov
lcall
fwait
add
sbb
cmpsl
mov
scas
adc
popf
jns
mov
mov
jns
lods
pop
xchg
dec
cltd
icebp
in
mov
push
mov
xchg
enter
push
or
jne
fs
adc
mov
mov
lods
aad
in
in
in
es
add
pop
push
loop
repz
push
pop
out
js
fdivrl
cltd
dec
mov
or
sub
jp
orl
lret
idivl
add
std
mov
imul
sub
sub
das
mov
mov
repnz
clc
jmp
mov
call
fistpll
inc
and
mov
aas
daa
or
sbb
push
les
mov
je
inc
mov
cmp
mov
enter
mov
ret
xor
in
xor
pop
stos
cwtl
loopne,pn
xlat
cs
insb
mov
or
stc
push
lea
jne
mov
mov
pop
mov
mov
dec
adc
pop
movsb
adc
inc
inc
jbe
jnp
int
lods
in
adc
stos
aam
xor
adc
sti
mov
mov
pop
lods
mov
jns
fdivs
ror
fisubl
mull
int3
xchg
or
mov
adc
inc
sbb
add
cltd
dec
mov
dec
sbb
dec
or
jle
add
fcmovu
mov
pop
ret
ss
xor
pushf
stos
dec
in
aas
pop
iret
clc
ja
cmp
xlat
out
and
inc
mov
in
push
dec
jmp
je
rclb
pop
cltd
pop
xchg
stos
ss
sahf
aad
repz
das
sub
jns
xchg
adc
ja
push
cmpsb
in
inc
add
dec
push
pop
int
stos
jns
mov
movsb
test
daa
xchg
pop
pushf
aas
lea
dec
xchg
and
ss
pop
mov
jo
mov
add
add
jg
pop
rcll
fucomp
insl
int3
push
sub
jl
mov
inc
pop
xchg
test
negb
inc
add
stc
mov
mov
in
xchg
pop
jmp
jg
sbb
cmp
push
xor
pop
or
mov
outsb
pop
pop
cmp
test
ud2
mov
xlat
imul
mov
dec
or
push
cmp
lods
loop
add
negl
sub
mov
mov
mov
nop
in
pop
mov
mov
aaa
outsl
hlt
add
pusha
int3
pusha
mov
loopne
mov
mov
aam
sub
jecxz
mov
enter
stos
cld
iret
lds
inc
outsb
pop
ret
pop
mov
in
mov
out
jge
jmp
movsb
sbb
xchg
out
sub
das
push
cmp
push
inc
and
sbb
add
cmc
out
mov
add
mov
lcall
fsubrl
jbe
aad
jg
xchg
rcrl
jns
or
adc
xchg
int3
jl
push
and
or
push
cmp
fcompl
pop
adc
cmp
xor
ficoml
jg
add
fcmove
mov
out
or
lods
cmpsl
insl
pop
sub
inc
test
cmc
adc
adc
enter
int
cmpsb
test
lahf
addr16
test
adc
bound
inc
ss
inc
ficompl
cmp
ret
insb
addl
sbb
mov
xor
adcb
popf
leave
mov
add
jno
xchg
iret
out
cmp
into
xor
jp
pusha
jg
pop
cmp
daa
mov
popf
lods
lods
xor
pop
mov
aam
push
lcall
sbbb
dec
pop
negl
es
push
mov
pop
push
bnd
int
int3
sbb
call
ret
cltd
inc
sbb
cs
insl
ret
in
cmp
insb
test
mul
mov
push
mov
push
sbb
pop
loopne
in
xor
push
movsl
sarb
push
loope
cmp
sub
repz
mul
xlat
ss
adc
out
cmpb
mov
aaa
pusha
inc
ror
add
lahf
mov
inc
rol
xchg
inc
push
negl
sub
or
test
leave
ja
out
push
pop
and
pop
outsb
cmp
adc
jo
shrb
push
lods
and
int
pushf
inc
mov
push
lret
testl
fidivrl
cli
lret
mov
xchg
out
jecxz
cwtl
add
cs
lea
shll
loopne
push
xlat
lds
sub
fcomps
lods
xorb
mov
int
inc
pop
test
push
cli
cmp
sub
iret
fs
mov
pop
xor
popf
push
pop
push
aaa
mov
adc
push
and
jge
rcrl
aas
ljmp
adc
daa
and
test
xchg
mov
adc
loopne
in
lret
fimuls
mov
inc
mov
cltd
movb
xchg
aam
inc
ljmp
mov
inc
mov
mov
push
loopne
xchg
mov
ss
iret
in
pop
hlt
movsb
sahf
lret
jp
idivl
or
lret
dec
lret
add
jle
mov
enter
mov
cmp
xlat
test
xor
xchg
les
sbb
add
xor
xor
outsl
jmp
or
adc
jne
popf
xchg
pop
mov
pop
cmpsl
hlt
mov
pop
ljmp
cmp
dec
and
cmpsb
push
test
inc
cld
in
sbb
rolb
rcrl
jae
shl
inc
pop
jnp
stos
xchg
or
insb
or
adc
sub
lea
inc
fabs
push
push
decl
mov
sbb
sub
incb
lds
lret
sbb
fsubr
pop
sub
pop
arpl
leave
xchg
rcl
pop
addl
push
jne
pop
inc
pop
adc
xchg
stos
ret
dec
sar
pop
jns
mov
xlat
and
pusha
xchg
mov
push
cwtl
push
test
and
in
xor
iret
jnp
rclb
das
es
cmp
inc
dec
ds
adc
jns
aaa
je
xorl
mov
shlb
lds
pop
push
or
aad
xchg
jae
lods
sbb
int
xchg
inc
xlat
lret
mov
scas
xchg
test
jp
pop
shrl
push
xchg
or
subl
sub
mov
repnz
call
pushf
jno
in
and
push
clc
lcall
xchg
pop
sbb
and
aad
sbb
lahf
and
lock
cltd
sub
data16
sbb
divb
data16
lods
sbb
lods
or
popf
enter
into
or
inc
in
xchg
xchg
jbe
mov
jb
xchg
xchg
out
and
push
arpl
dec
test
aaa
pop
mov
or
pop
lock
ret
sub
popf
lds
sub
sub
bound
mov
stos
fs
mov
adcb
add
insb
lret
xor
leave
cli
js
inc
repz
add
adc
and
push
test
aam
cmp
adc
fildl
stos
dec
mov
enter
pop
xchg
sarl
mov
mov
push
adc
adc
cmp
es
sbb
jnp
jo
outsb
negb
popf
cmp
shlb
aad
repz
mov
mul
scas
lea
out
jge
into
lret
push
outsl
pop
stos
mov
pop
inc
mov
in
insl
xchg
adc
mov
pop
push
mov
lret
int3
cmp
push
jae
ret
lods
addb
ds
lock
jno
in
mov
cmpb
add
push
pop
fs
xchg
cs
adcl
mov
adc
xor
jecxz
xor
jl
call
pushf
movsb
outsl
in
mov
inc
stc
into
lcall
cmp
data16
iret
adc
xchg
out
cmp
push
mov
icebp
sub
sub
jne
cld
out
imul
jg
rcrl
jne
sub
adc
out
mov
mov
fwait
aad
outsl
push
push
mov
mov
jmp
add
fcomps
das
xor
sbbb
lret
bound
pop
cwtl
pushf
mov
out
jge
gs
pop
add
cwtl
mov
rorb
js
inc
fwait
pop
mov
cmpsb
in
pushf
test
je
cmp
mov
cwtl
mov
cwtl
push
shrl
cmp
out
out
add
in
and
shlb
jecxz
dec
xchg
add
sarl
dec
enter
push
sbb
mov
in
push
mov
lcall
inc
stc
popfw
dec
mov
push
in
xor
insb
outsb
xchg
shlb
or
pop
inc
out
jp
ficompl
or
sbb
in
fistpl
int
mov
mov
inc
pop
daa
sub
data16
nop
add
or
lret
add
mov
cmpl
xor
rolb
mov
pop
jle
outsl
mov
mov
fbld
repz
pop
movsl
imul
dec
nop
sti
repz
xor
xchg
aad
mov
jp
ss
pushf
add
fs
ss
xorl
xor
mov
xchg
cwtl
mov
cmp
inc
dec
sub
orl
pop
and
icebp
out
ds
lods
fs
jmp
cmp
add
jb
rcrl
fiaddl
cmp
sbb
test
stos
imul
or
sbbl
jmp
jmpw
std
das
test
sub
pop
pminsw
bound
cmp
fldt
push
sub
and
in
testb
pop
sub
es
movsb
test
inc
jne
lods
pop
add
imul
test
inc
scas
cmp
jl
repz
andb
into
dec
test
mov
cmp
add
js
stos
mov
and
fs
es
inc
and
inc
shlb
add
idiv
cs
std
sbb
insb
dec
push
pop
lock
imul
fs
ret
cmp
daa
adc
cmc
xor
mov
sub
xchg
jmp
iret
enter
inc
sub
or
js
inc
lret
pop
fwait
sbbb
loope
xor
bound
int
mov
testl
faddl
mov
mov
pop
mov
adc
mov
jo
mov
adc
leave
call
movsb
loope
jbe
sbb
cltd
sub
mov
stos
add
mov
jbe
adc
mov
aam
js
add
adc
loope
dec
xor
mov
test
sbb
shl
pop
ss
mov
xor
rorb
in
mov
fxch
and
loopne
dec
mov
sub
lret
js
daa
dec
and
out
rcr
dec
enter
clc
es
out
inc
repnz
or
test
out
imul
jge
cmpl
loope
cmp
arpl
int
cli
jp
mov
and
shrl
push
adc
movsb
mov
cmc
les
dec
and
stos
sbb
cmp
push
clc
mov
jo
add
fcom
inc
jo
lcall
ljmp
int3
cmp
xrelease
dec
in
stos
imul
mov
dec
mov
or
and
lea
loopne
push
mov
lods
inc
out
push
fadd
adc
popa
pop
repnz
imull
orl
insb
aam
push
or
leave
lahf
ljmp
inc
cmp
dec
cwtl
jne
jecxz
in
pusha
and
sbb
cs
fdivl
int
or
sbb
adc
jbe
inc
mov
fwait
out
ljmp
out
sbb
mov
xchg
dec
sbb
aaa
jle
int
pop
pop
sub
enter
or
hlt
inc
outsb
pop
pop
ficomps
dec
mov
repnz
sbb
jae
push
aad
and
or
dec
daa
or
push
mov
xchg
mov
mov
mov
out
sbb
push
pop
pop
mov
je
xchg
shl
push
int
rcr
arpl
pop
and
imul
cmp
or
in
pushf
fbstp
or
lods
cmp
repnz
jle
sbb
ret
ficoms
push
dec
scas
mov
jl
mov
sbb
add
xchg
jle
cmpsb
ficoml
and
lods
dec
mov
ja
xchg
outsb
xor
mov
push
jmp
movsb
push
das
pop
insb
fisubrs
ss
ror
loope
cs
add
pop
jmp
add
popa
sub
xchg
jge
pop
xor
cmpsb
sub
sub
int
imul
mov
push
xchg
ljmp
inc
add
andl
pop
hlt
in
inc
loope
dec
pusha
pusha
divb
or
aam
jo
ja
movsb
xlat
out
ss
mov
adc
mov
jb
xor
xchg
jp
dec
mov
cmp
xor
sbb
shlb
xor
jae
jecxz
cmpsl
out
mov
jns
int
in
adc
or
repnz
mov
repnz
outsb
outsl
cli
cmp
lcall
lock
lcall
out
xlat
fs
stos
iret
das
adc
fucomi
add
and
gs
pop
add
pushf
inc
mov
mov
jg
sub
sti
jg
jl
fisubrs
xor
roll
pop
sbb
fldenv
lret
lret
mov
in
nop
and
xor
and
stc
fistps
mov
and
jge
jecxz
movsl
clc
pop
mov
cmp
xor
push
dec
mov
xchg
xorl
lods
adc
outsb
add
adc
cmp
lods
dec
je
loope
call
popa
fsts
pop
or
loop
lods
orl
mov
sbb
jecxz
dec
scas
aam
adc
pop
movsb
addr16
cmp
test
pop
jbe
sahf
enter
cwtl
push
outsl
mov
rorb
rcll
pop
iret
es
insl
mov
xchg
ljmp
sbb
les
push
cli
xchg
add
xchg
xchg
mov
mov
movsb
lahf
push
adc
lea
inc
out
jae
aas
jo
jae
dec
xchg
cs
int
mov
je
push
mov
and
icebp
adc
fcmovnb
dec
in
xor
jle
pop
int3
into
imul
cmp
jle
stos
aas
adc
cmp
pop
aas
movsb
stc
and
adc
sub
or
xor
icebp
out
adc
xor
inc
ret
add
inc
xor
loope
shl
leave
dec
dec
inc
outsl
mov
xchg
xlat
push
jl
popf
int
inc
pop
inc
jmp
push
mov
mov
sub
in
or
push
mov
lea
fcoml
inc
enter
aam
je
mov
stos
sub
xor
lods
adc
pop
int
cmp
test
xchg
xor
adc
pop
cmp
pusha
movsb
ficomps
andl
out
adc
in
iret
sub
pop
jno
push
add
cmc
daa
pop
and
nop
mov
iret
fucompp
adc
xchg
fbstp
cmp
xchg
in
rorb
mov
mov
adc
fs
fcomps
push
and
int3
adc
xchg
aad
adc
xchg
andb
call
loop
imull
xor
stos
lahf
cmp
icebp
fmuls
negb
gs
aaa
lds
out
inc
fs
shl
addr16
es
xor
outsb
or
push
aas
push
popf
pop
out
jo
add
push
and
lods
adc
adc
and
inc
mov
fdecstp
cmp
mov
inc
int
dec
xchg
loopne
push
jmp
negb
hlt
inc
add
xchg
je
push
scas
test
in
ret
cmp
and
iret
or
fprem1
jecxz
pushl
add
dec
daa
mov
outsb
jne
push
in
or
pop
dec
jae
push
clc
dec
hlt
adc
ret
sbb
movsb
xchg
fnstenv
out
lods
and
jp
mov
or
imul
cmpsl
mov
mov
ds
ljmp
adc
mov
jmp
arpl
lret
sub
xor
mulb
push
or
ja
scas
incb
push
mov
aad
repz
lret
mov
xchg
mov
xchg
arpl
adc
pop
lock
xchg
cmc
mov
add
mov
mov
enter
pop
stos
movsb
sbb
aas
xor
xchg
push
addr16
cmpsb
lods
inc
mov
push
jle
push
jno
loop
daa
testb
mov
push
dec
jae
out
sbb
incb
icebp
lea
shlb
mov
fldcw
repz
aam
roll
call
in
aas
insl
lret
push
add
int3
mov
xchg
stos
imul
or
mov
stos
cmpsl
pop
clc
scas
cmp
out
dec
cmpsl
das
orb
mov
or
sub
add
push
pop
hlt
adc
cli
xor
mov
rorl
sbb
pushf
pop
sub
mov
testl
sub
fcoml
add
out
dec
mov
loop
mov
test
stc
ret
xor
sbbl
test
pop
or
jle
xchg
cwtl
rcll
in
fstpl
jns
insb
into
sub
pusha
lods
fildll
mov
fs
xor
sbb
mov
jmp
xchg
dec
lahf
je
pop
mov
pop
jg
and
push
fwait
sahf
pusha
xlat
imul
adc
lds
fcmovne
sbbl
sti
out
sbb
addl
pusha
fistpl
sub
pop
mov
mov
or
pushf
lcall
pusha
sub
mov
fcoml
jno
imul
jg
lods
subl
loope
imul
inc
inc
sbb
lahf
out
cmp
data16
rorb
lds
inc
cmp
mov
push
pop
pop
aas
je
roll
leave
adc
in
loopne
mov
add
mov
into
dec
lods
inc
paddusw
testl
pop
in
xchg
cmp
ds
popl
mov
xorl
fstl
xchg
jno
hlt
push
mov
sbb
and
in
shld
mov
call
or
mov
pusha
rcrb
fwait
sub
fwait
lds
push
sub
aas
fstl
jnp
mov
testb
loop
mov
mov
pop
mov
adc
stos
and
and
mov
add
jb
das
fisubs
xchg
pop
scas
jge
push
mov
stos
into
in
cmp
pop
jge
sub
and
dec
ds
jo
and
cmc
pusha
imul
push
jge
repz
cmp
and
loope
or
mov
repz
sbb
push
cmp
ss
bound
pop
lahf
insl
ds
into
pop
xor
ret
lods
inc
adc
or
rorl
stc
aaa
xor
sbb
mov
lret
inc
loope
mov
inc
dec
repz
dec
sbb
pop
pop
sbb
repz
arpl
push
mov
jne
test
dec
lret
mov
es
push
cld
add
jb
cmpsb
dec
je
sbb
mov
adc
adc
out
push
mov
xchg
mov
xor
mov
dec
sti
xor
dec
je
push
xchg
sub
test
cltd
mov
mov
jge
ss
jmp
mov
mov
andl
mov
fldcw
loope
sarb
pusha
jp
ljmp
and
mov
enter
xor
push
ret
pop
mov
mov
mov
popa
mov
push
mov
pop
mov
mov
cmp
cmpsl
xchg
push
inc
in
add
mov
mov
imul
fxch
sbb
mov
xlat
jl
imul
loopne
stc
hlt
unpckhps
add
inc
push
js
xchg
inc
pop
nop
mov
lea
imul
je
xor
dec
adc
mov
mov
pop
add
into
leave
dec
cs
pop
ret
mov
mov
scas
shll
adc
adc
leave
mov
gs
xorb
push
lret
in
push
sbb
scas
test
add
and
ljmp
mov
and
inc
jns
or
lahf
and
pop
stos
jg
fisubrs
jecxz
or
jmp
push
fsts
pop
and
loopne
into
stos
out
lea
add
andb
or
xlat
ret
movsb
mov
mov
shlb
hlt
mov
cld
jmp
jp
cmp
sbb
and
dec
jp
dec
sub
std
int3
xchg
stc
mov
arpl
jne
loopne
in
shlb
imul
cmc
mov
in
pop
add
scas
fstpl
subl
out
movsb
or
repnz
dec
stos
in
mov
bswap
shrl
or
inc
jecxz
and
mov
out
notb
mov
cmova
push
orb
xor
xor
mov
mov
xor
pop
loop
imul
mov
je
xor
insb
mov
popf
xchg
push
in
xor
addr16
xchg
in
and
xchg
sbb
ret
dec
lea
lret
push
clc
mov
xchg
icebp
xchg
xor
pop
lods
xchg
std
mov
xchg
pop
cwtl
ja
dec
movsl
push
enter
mov
mov
rcrl
fbld
test
rorl
sbb
xchg
sbb
xor
xor
sarb
test
in
ffree
add
and
cli
xor
out
jno
mov
movb
pushf
mov
jle
in
jg
jl
adc
repnz
and
sub
sub
mov
pushf
lock
sbb
cmp
xor
cmp
stos
mov
cld
inc
inc
or
dec
and
lods
cmp
pop
jge
inc
int
lret
mov
popf
cmp
mov
or
loop
fnstenv
or
icebp
inc
in
out
xchg
call
jnp
cli
inc
add
fwait
fs
mov
xor
mov
xor
mov
xchg
push
mov
jns
push
push
imul
push
adc
lods
lret
mov
mov
push
mov
or
push
movsl
es
push
js
je
xchg
cmp
mov
jg
mov
movsl
sarl
fdivl
dec
cmp
jge
rcr
lret
ja
xchg
push
mov
cwtl
les
pop
jecxz
inc
addr16
pop
mov
shlb
push
sti
fstl
dec
test
pop
jl
fidivrs
adc
scas
stos
and
out
lods
movsb
dec
into
fisubs
push
sub
incl
push
jl
mov
jmp
xor
mov
mov
in
in
inc
cltd
lahf
sub
sbb
negb
sti
pusha
popa
lcall
popa
inc
mov
cmc
jo
roll
stc
aaa
testb
mov
stc
adc
inc
pusha
mov
das
inc
push
cmp
add
jo
adc
inc
frstor
inc
movq
sub
ret
mov
or
insl
sub
pop
xor
push
test
jnp
dec
std
xchg
or
out
mov
das
int
out
daa
call
out
outsb
mov
pop
jle
pusha
clc
lahf
enter
or
sbb
dec
mov
ret
ret
scas
scas
jae
aaa
sbb
daa
push
xor
dec
testb
xchg
dec
and
push
inc
daa
scas
push
jno
ret
movsb
xchg
shlb
outsl
je
data16
push
jbe
lcall
mov
aad
jmp
push
orb
push
pop
sub
mov
arpl
xor
scas
sub
enter
pop
call
leave
aam
lcall
stos
into
push
dec
add
cmp
es
in
xor
aad
sahf
call
stos
push
cmp
arpl
cmp
jp
add
add
mov
es
jp
cli
fisubrl
mov
jmp
lds
pop
xor
and
push
aaa
cmp
imul
or
ds
cmp
popa
pushf
out
loopne
popa
test
push
es
cld
enter
inc
ret
dec
mov
and
pop
loope
and
inc
sti
add
std
cmp
out
sub
andb
xor
pop
xor
dec
dec
sub
xlat
lret
pop
fsts
leave
sbb
inc
insb
decl
xor
jno
push
mov
and
and
das
jnp
loop
sub
cli
js
pop
mov
mov
sahf
sbb
repnz
out
jb
adc
push
test
jl
inc
scas
sub
adc
orb
or
fs
pusha
sahf
iret
sub
inc
xor
aam
aad
mov
and
adc
mulb
je
add
sbb
je
call
dec
sbb
sub
test
popa
stos
in
pop
daa
cwtl
mov
leave
push
cmpb
outsl
pop
or
fisubs
dec
ja
lea
incl
iret
arpl
inc
icebp
adc
mov
out
sub
lock
push
ss
xor
and
repnz
jae
and
sbbl
outsl
sub
dec
jb
in
ret
and
mov
push
jmp
xchg
jmp
push
ja
add
push
cmc
leave
jb
fcmovne
and
aaa
out
mov
ret
and
pop
test
mov
push
mov
das
sub
push
les
mov
sub
cs
int3
or
les
shr
lret
xor
in
ret
inc
aam
mov
dec
cmp
movsl
xchg
jnp
add
in
repz
incb
out
push
mov
je
movsb
pop
lret
jne
pop
or
inc
sub
shlb
mov
sub
mov
aad
loope
fsts
pop
mov
mov
sbb
xchg
pop
or
mov
add
testl
icebp
arpl
cli
xor
fs
jge
push
js
add
adc
int
cmp
loopne
adc
movsl
dec
mov
inc
dec
aas
mov
cmp
or
mov
jno
cwtl
jg
cwtl
clc
fmuls
es
xchg
popf
lods
fiadds
mov
lods
xor
mov
pop
pop
out
xchg
sbb
js
test
xlat
ret
out
mov
or
aad
xor
push
inc
repz
push
lahf
adc
hlt
xchg
mov
decb
out
aaa
add
pop
push
insb
pusha
fstpl
lds
sbb
roll
sub
insl
jg
insb
fdivp
jno
pop
push
shll
popw
cmp
imul
mov
ljmp
pusha
fldenv
pop
out
ds
dec
fiadds
push
testl
sbb
dec
pop
jb
shlb
js
push
pop
cmp
jle
cmp
ret
xor
aam
fwait
push
adc
xchg
jle
das
mov
jo
add
push
insl
loop
stos
or
jns
ss
sti
push
dec
mov
negb
mov
adc
cmp
clts
fs
cmpsl
stos
mov
mov
ss
push
dec
inc
pop
add
nop
cltd
jmp
test
dec
les
adc
daa
add
nop
enter
stos
cmp
popf
pop
dec
orl
call
mov
je
lea
cmp
sbb
gs
mov
fisubrl
orb
sub
dec
lahf
inc
push
fs
mov
arpl
push
push
inc
movsb
int3
mov
jae
cmp
dec
jmp
dec
mov
addr16
xchg
scas
dec
jle
xchg
dec
popa
hlt
xchg
sub
and
std
testl
rcrl
sub
mov
lock
mov
test
sub
inc
sarl
pop
add
in
gs
xor
test
and
mov
mov
or
ret
mov
das
dec
push
and
jnp
test
jl
test
ja
popf
fiaddl
xchg
scas
xchg
jne
fimull
push
lods
or
dec
adc
jp
push
adc
inc
jno
dec
push
jecxz
jae
and
aam
and
mov
pop
xchg
in
mov
loopne
dec
pop
mov
dec
push
js
xchg
push
xor
xchg
dec
hlt
mov
in
add
jge
mov
mov
push
mov
mov
push
fldl
sbb
jo
int3
fcmovnu
arpl
int
ljmp
lret
icebp
je
fwait
loopne
pop
fdivs
loopne
mov
push
dec
pop
lds
or
arpl
mov
inc
mov
movsl
scas
dec
jl
mov
adc
lret
cwtl
dec
sti
es
repnz
lret
mov
mov
fwait
rcrl
mov
adc
or
lahf
push
mov
cmpsb
lds
in
inc
in
aad
mov
xlat
jl
addr16
push
imul
fistpll
addr16
jmp
stc
lret
mov
stos
lock
jecxz
rcll
movsb
sub
pop
sub
xlat
cmpsl
dec
sub
loope
into
fdivl
popa
mov
fiaddl
jno
cmp
pop
ds
xchg
daa
popa
call
xor
shrl
cmp
inc
mov
xchg
and
ds
ja
pop
hlt
xor
fwait
lret
dec
lret
loopne
loope
mov
cmp
jecxz
leave
mov
shrb
xor
mov
push
je
mov
ret
aaa
fcoms
mov
je
dec
and
fwait
int3
leave
xor
and
das
mov
js
push
adc
sbb
push
mov
sub
out
arpl
xchg
data16
xor
or
fdiv
in
add
xchg
or
dec
in
insl
mov
mov
xchg
popf
jl
pop
fisubrs
pop
in
xchg
dec
gs
into
mov
enter
jecxz
jnp
xor
out
divb
xchg
arpl
shrb
cmp
jmp
orl
lcall
or
mov
sbb
dec
sub
call
pop
adc
fsubl
int3
mov
aad
pushf
mov
jecxz
sub
mov
stos
daa
inc
xor
or
xor
jne
mov
out
jl
sti
loope
xchg
mov
daa
dec
popf
iret
xor
gs
push
scas
movsl
decb
push
xor
fisubs
das
movsb
xor
xchg
mov
push
les
icebp
jnp
push
popl
inc
push
inc
aaa
scas
adc
gs
or
cli
js
lret
sub
xor
dec
scas
mov
xor
aad
lret
lea
push
dec
inc
call
xchg
xor
xchg
mov
cmpsb
dec
jne
sbb
jg
clc
dec
es
rorl
das
or
dec
xchg
std
mov
push
stos
sbb
mov
xchg
test
into
cli
in
pushf
dec
push
sbb
scas
add
mov
mov
xchg
mov
hlt
mov
rorl
xor
mov
xchg
add
stos
shld
cmp
ret
cs
mov
ss
clc
xchg
call
out
jle
fnstenv
sub
in
fwait
dec
jg
int3
pop
mov
loop
fs
pop
cmc
outsl
stos
xchg
cmc
jae
xchg
fnsave
ficomps
or
sub
jmp
add
cs
push
mov
or
stos
xlat
xchg
mov
dec
mov
push
shlb
out
je
add
cmp
out
mov
sub
pop
and
insb
pop
xlat
icebp
fs
or
testb
in
push
mov
xor
xor
scas
stc
adc
adc
pop
out
mov
dec
insl
mov
fwait
push
aam
flds
sbb
push
xor
out
xchg
add
xchg
das
jo
sub
sqrtps
loopne
addr16
fwait
add
lahf
and
rolb
fisttps
push
and
outsb
mov
and
in
mov
dec
xchg
into
xchg
stc
outsb
mov
test
jno
jae
or
out
aas
mov
xchg
and
test
addr16
test
pop
add
repz
pusha
aaa
pop
inc
test
sub
bound
push
daa
sbb
dec
orb
lret
scas
cli
dec
add
lahf
mov
es
lea
decb
mov
jae
cmp
int3
inc
push
mov
sub
ljmp
sub
mov
test
and
sub
into
push
into
in
jg
fistpll
fwait
mov
pop
cli
cwtl
mov
and
xor
mov
lds
inc
adc
mov
fidivs
sub
les
add
imul
addb
push
or
jecxz
daa
push
in
xor
xor
sbb
sbb
movsl
inc
inc
mov
push
aad
int
mov
inc
fnstsw
fs
aas
out
mov
cmp
lahf
insb
sub
test
sbb
xchg
dec
es
out
adc
mov
nop
sti
leave
mov
adc
inc
js
push
dec
aaa
addl
dec
push
ds
cmp
movsl
outsl
jns
cmp
mov
xchg
test
dec
loope
fistpl
lret
jo
cld
out
add
mov
xor
push
pusha
or
mov
popf
aad
rcr
imul
nop
bound
dec
das
and
push
add
push
lods
aam
insl
adc
and
orl
add
jnp
insl
dec
xor
les
pop
inc
adc
push
pop
dec
inc
ljmp
aam
out
inc
stos
insl
out
fchs
and
jns
adc
sahf
test
nop
mov
push
push
mov
adc
push
cmpsl
cmpb
pop
sub
dec
mov
into
push
inc
flds
faddl
mov
fstpl
pop
repz
push
out
adc
stc
imul
fs
testb
fwait
in
pop
mov
push
xor
xchg
clc
jg
rorb
scas
enter
xor
sbb
dec
cmpsb
icebp
rcr
xchg
scas
popl
lahf
sub
adc
ret
stos
sbb
lods
push
test
lock
out
mov
add
test
addb
xor
lcall
pushf
rolb
andl
xor
dec
stos
pop
icebp
addb
pop
or
stos
test
or
lret
rorl
push
out
mov
mov
xchg
fcompl
jb
mov
jbe
xor
and
xor
test
jne
lock
pop
xor
adc
ficompl
push
insb
cmp
aad
sbb
fstp
push
push
sbb
mov
jno
mov
adc
push
iret
or
mov
lods
jl
xor
inc
fneni(8087
jg
loope
push
repz
pop
mov
inc
loopne
mov
lahf
ficoml
adc
addr16
jecxz
jmp
sub
dec
xor
out
adc
xchg
xchg
ss
lods
iret
sbb
push
into
push
xor
outsl
into
mov
test
roll
ljmp
sub
cmp
bnd
or
or
and
dec
loope
cwtl
add
sub
in
faddl
sub
into
jg
cmp
out
ucomiss
enter
ret
popf
hlt
call
scas
fstpl
je
mov
inc
xlat
dec
push
arpl
lods
outsl
lret
jecxz
imul
add
mov
mov
lods
lret
inc
iret
dec
ljmp
mov
mov
in
xchg
sbb
push
xor
mov
mov
push
inc
inc
lods
or
shll
xchg
sbb
cmp
inc
or
test
sbb
or
lods
insl
adc
cltd
imul
stc
mov
mov
cs
adc
fildl
data16
mov
cmp
or
rcll
cmp
cmpb
adcl
stos
movsl
mov
les
aam
les
cmp
repz
out
mov
and
xchg
into
scas
mov
fsubp
in
or
cltd
clc
fsts
mov
data16
mov
inc
or
xchg
add
repz
mov
lods
adc
cmpsl
test
add
push
shll
or
inc
add
xchg
loope
inc
pusha
sbb
lods
push
push
xchg
xchg
mov
cli
push
dec
inc
xor
pop
jge
cmp
cmp
dec
xor
mov
inc
and
je
cmp
sub
mov
pop
mov
adc
add
fisubrs
push
gs
loope
out
nop
mov
fsubl
jle
add
mov
pop
add
loope
pop
or
roll
addr16
or
xchg
dec
lods
int
fisubrs
xchg
lock
mov
mov
lret
call
fidivs
and
sub
fmull
ja
outsl
and
enter
xor
adc
daa
lods
ja
cmp
test
push
ljmp
cmp
in
xchg
add
fmull
test
out
hlt
pop
fcmovnbe
cmp
jmp
aaa
sbb
rolb
sbb
and
int
mov
data16
in
adc
pop
out
xchg
sbb
mov
jp
dec
cmc
cmp
dec
pop
jno
and
push
ficoms
stos
loopne
cwtl
mov
jmp
sbb
aaa
dec
add
add
adc
mov
das
gs
cmp
imul
sbb
adc
xorl
jns
push
lods
jge
loope
or
sarb
dec
cltd
pop
dec
pushf
mov
gs
out
hlt
dec
aas
in
mov
sub
lahf
inc
mov
add
xchg
xor
stos
aad
or
pop
ss
xor
mov
out
adc
add
idivb
pop
sub
cmp
lea
cmp
arpl
dec
testl
aam
dec
add
hlt
ret
push
dec
cmc
lods
in
je
cmc
jno
adc
add
jb
pop
dec
mov
insl
jno
arpl
push
jecxz
push
add
rcr
test
inc
mov
scas
or
mov
jne
xchg
insl
or
mov
dec
lds
filds
push
popa
dec
loope
lock
popf
xchg
mov
adc
movsl
cs
test
call
jecxz
dec
stc
jbe
cs
fistps
cltd
movsb
ret
ss
test
xchg
cmp
dec
loope
pop
mov
fwait
xor
in
in
mov
arpl
sbb
testb
jp
in
mov
movsl
in
mov
push
pop
push
inc
data16
imul
mov
inc
mov
add
mov
sbb
mov
cmp
into
lds
sbb
jae
mov
pop
imul
jg
ja
cwtl
mov
test
movl
cwtl
mov
data16
mov
add
pushf
sbb
jmp
sub
sarb
cmpsb
cwtl
or
inc
cltd
stos
in
sub
mov
xchg
mov
or
loopne
cmpsb
fwait
xchg
xchg
sbb
data16
sti
subb
sarl
int
clc
dec
int
lds
adc
cmp
ja
xchg
sti
add
mov
cli
xlat
pushf
scas
jmp
andb
or
mov
mov
mov
negl
addb
xor
pop
mul
fsubr
adc
les
clc
mov
mov
dec
pop
std
sbb
dec
adc
pop
js
mov
pop
push
in
int
lcall
jle
mov
dec
pop
pop
call
cmp
push
pop
lret
add
and
repz
pop
add
inc
scas
jmp
mov
xchg
into
jno
scas
mov
cmpsb
in
jbe
scas
or
mov
in
mov
pushl
out
ja
rolb
pop
sarl
mov
mov
pusha
pop
dec
orl
icebp
and
popf
sbb
fimuls
out
xchg
mov
div
sbb
cwtl
lret
sbb
decb
inc
imul
push
sbb
adc
cld
xchg
data16
cs
incl
lahf
cmp
mov
add
mov
xor
out
xchg
cmp
xchg
mov
shll
popf
pop
dec
test
loopne
cmc
push
ret
push
out
mov
jmp
fldl
fs
imul
aad
addr16
cmpsb
sub
popl
out
mov
add
icebp
andb
jecxz
xchg
sub
add
insl
ljmp
psubd
clc
and
lock
mov
lods
mov
cmpsl
in
lods
testl
xor
pop
jb
push
mov
enter
test
adc
cltd
add
cmpb
jno
jg
pop
fcmovnu
mov
or
cmc
cmpsb
dec
pop
out
dec
cld
pop
loop
jb,pt
pusha
sbb
nopl
pop
dec
lds
fistpll
ficompl
dec
int3
dec
aad
mov
sti
xchg
popf
mov
dec
cli
jl
mov
sub
movsl
mov
fdivs
test
incl
inc
push
test
xlat
cmp
movsb
test
jg
das
lahf
xchg
adc
sbb
inc
mov
jnp
into
imul
jmp
pop
rorb
sub
adc
lcall
rcrl
sub
inc
insb
into
sbb
out
xchg
cwtl
fs
lcall
subb
xchg
shl
adc
mov
jmp
bound
add
outsb
les
inc
pop
mov
jns
loope
ret
lock
mov
daa
push
mov
mov
in
mov
scas
cmp
out
sbb
clc
out
in
std
add
and
inc
sbb
adc
adc
xchg
sub
lods
jno
add
jmp
lods
and
nop
pop
aas
ret
cmpl
std
aas
ret
flds
out
test
xchg
test
repz
lea
dec
hlt
and
movsl
dec
rorl
in
int3
xchg
int
dec
mov
pushf
sub
mov
adc
jecxz
inc
inc
inc
addl
xchg
mov
and
jp
sbb
or
subb
aaa
jecxz
xor
je
mov
ret
push
or
inc
test
stos
fmuls
int
les
dec
and
mov
ficompl
flds
cmp
xchg
push
inc
xor
jl
inc
notl
cmp
in
push
xchg
inc
call
sub
xchg
push
dec
cmp
out
push
in
fs
and
xchg
jo
mov
add
fs
mov
aaa
rol
lret
imul
das
cmpsb
cwtl
decb
imul
adc
mov
jp
push
fld
and
int3
adc
pusha
add
xor
or
ds
cs
dec
inc
test
into
bound
ds
stos
and
lock
mov
cwtl
scas
jb
cmp
cmp
adc
sbb
out
adc
pop
and
jmp
add
adc
sub
push
call
pushf
addr16
xchg
loop
lret
in
inc
push
sahf
sahf
ljmp
cmpsl
mov
xlat
push
adc
mov
xchg
cmpsl
ds
jns
mov
cmp
pop
xchg
cmp
leave
out
sub
jecxz
mov
inc
xchg
fnsave
mov
sub
sbb
sbb
xor
lods
addr16
movsl
push
int3
out
je
test
push
and
or
testl
loopne
scas
in
int3
dec
stc
rcr
pop
push
or
test
lods
sub
call
adc
mov
push
push
inc
jmp
ljmp
cmpsl
adcb
not
iret
in
fcomi
push
mov
push
inc
mov
push
lods
pop
outsl
sub
jmp
pop
in
dec
xor
xor
push
fstpt
jecxz
fnstcw
sbb
mov
dec
xor
xor
imul
sbb
mov
jns
jb
test
mov
add
fistpll
test
loopne
stc
mov
aam
xlat
and
jno
in
es
pop
pop
add
lahf
jmp
add
mov
sti
lods
dec
adc
pop
sub
mov
adc
mov
jnp
orps
xchg
fisttpl
and
pusha
loopne
push
sti
jmp
test
leave
out
or
pushf
mov
jmp
test
push
xchg
sbb
hlt
lcall
and
add
test
jae
insl
inc
add
pushf
jge
sbb
mov
cmpsl
jns
and
pop
sbb
push
push
or
mov
push
mov
movsb
mov
mov
fisubl
cwtl
lods
shll
jp
add
dec
daa
out
inc
xor
inc
rcll
push
adc
not
outsl
es
xchg
test
int
js
loopne
jmp
push
pop
incl
call
aad
addps
jo
stos
dec
test
gs
inc
push
dec
lea
inc
stos
cmp
insl
dec
fwait
in
aas
mov
imulb
or
adc
enter
xchg
fdivrp
adc
dec
and
insl
stos
sub
sub
out
add
xchg
fwait
adc
mov
jecxz
dec
and
lock
popa
mov
test
iret
sbb
jp
sub
sub
sahf
rclb
push
sub
pop
int
shrb
jne
sub
sub
and
aaa
in
stc
sub
or
inc
lret
sbb
and
out
add
push
jne
and
mov
insb
push
push
mov
cld
jmp
fwait
int3
pop
sti
inc
push
testb
enter
daa
lods
jno
lock
stos
out
adc
and
out
in
mov
popf
shll
xlat
idiv
hlt
stos
pop
rsm
cmpsl
push
add
sub
xchg
iret
sbb
push
and
mov
std
bound
test
and
mov
inc
es
rcrb
cs
lods
mov
mov
or
mov
dec
rcrl
jl
xchg
push
inc
jns
add
push
pop
faddl
mov
mov
xchg
mov
and
jno
mov
leave
xchg
out
stos
cmpsb
xor
popa
xor
gs
xchg
xor
dec
adc
bswap
dec
das
pop
jp
jg
gs
mov
inc
arpl
rorl
imul
jbe
or
mov
xchg
xchg
popf
dec
and
pop
mov
inc
adc
sbb
adc
fs
mov
ret
lods
es
outsb
shlb
mov
and
inc
jbe
sub
je
cwtl
pusha
adc
jno
fwait
lcall
or
jb
movsl
std
rclb
cmpsl
cli
mov
xchg
pop
adc
sbb
or
push
outsl
or
fs
daa
xchg
imulb
push
sub
cmp
and
cmpsl
int3
push
out
xchg
sub
hlt
add
pusha
jb
ret
dec
adc
mov
es
call
mov
jge
rolb
lret
in
push
int
dec
fwait
in
and
lret
pop
and
out
aas
dec
dec
in
fs
arpl
pop
mov
flds
hlt
mov
dec
mov
lahf
inc
jno
push
xchg
jb
jae
test
sub
fdivrp
inc
cli
aad
lods
ret
xchg
cld
jmp
lahf
pop
push
gs
mov
xchg
ret
test
sub
mov
fdiv
shl
arpl
xchg
xor
jns
es
push
push
loopne
fstl
dec
sub
repnz
mov
aad
mov
inc
cmpsb
mov
xor
fwait
and
mov
jae
xchg
pop
or
addb
cmp
mov
sbbl
stos
mov
dec
fidivrl
insb
into
sbbl
movsb
pop
popa
jg
aad
in
movsl
dec
add
idivl
fwait
icebp
add
sub
inc
jecxz
pop
pop
fwait
lock
mov
in
xchg
dec
mov
sub
xlat
ljmp
inc
pop
clc
dec
sub
inc
and
mov
mov
mov
popf
or
sbb
ja
test
pop
pop
sahf
movsb
add
stos
dec
idivb
fdivrs
pushl
cmp
mov
xchg
std
filds
inc
leave
fs
lea
mov
add
movsb
push
xor
arpl
jbe
aas
lret
pop
cwtl
mov
je
les
cmp
add
jmp
fdivrs
rcrl
arpl
push
dec
into
cmp
and
pop
xchg
ret
pop
push
xor
test
inc
cmp
xchg
loopne
sbb
sub
setge
mov
and
test
bound
stos
sbb
nop
dec
shrl
inc
mov
mov
and
int
pusha
mov
jbe
xor
push
xchg
dec
lret
icebp
jmp
lock
sub
bound
sub
or
mov
jp
ret
push
lods
sub
add
int
inc
fs
test
es
bound
jecxz
frndint
mov
cmp
inc
fwait
lock
mov
or
push
mov
inc
icebp
psllw
je
mov
xchg
adcb
fwait
outsb
push
cs
aad
test
jns
sti
fldt
pusha
in
hlt
adcl
xor
test
loope
cmp
push
aas
mov
ficoms
sarb
adc
setb
sbb
cmp
xchg
sbb
cmp
lret
lds
jg
sub
popa
aaa
int3
mov
xor
scas
adcb
add
int3
in
xor
cmpsw
jecxz
mov
cmpsl
jno
into
testl
xchg
inc
adc
or
xchg
dec
jge
out
mov
cli
pop
subb
xchg
out
xchg
mov
sub
call
enter
andb
repz
jg
xchg
ret
jle
xabort
ret
fsts
pop
sahf
in
cld
push
fistl
pop
push
sbb
mov
testl
mov
xor
cmp
std
xchg
push
hlt
push
bound
cld
dec
sub
push
lods
repnz
into
xor
stos
sub
sbb
enter
mov
loopne
in
imul
add
lea
sub
inc
or
cli
aas
xchg
scas
add
and
sub
lds
js
int
mov
stos
cmp
outsb
sub
pop
lea
out
sbb
push
testb
fs
in
arpl
push
ret
add
sub
push
aam
xor
cmp
mov
xor
sbb
pushf
aam
gs
stos
stos
sarl
or
inc
stos
in
scas
and
sub
aaa
inc
push
sub
xor
xchg
fcmovnu
aaa
repz
shrb
sbb
loope
push
cmp
fildl
in
add
or
mov
loope
add
jne
push
or
jp
inc
push
repnz
jecxz
mov
mov
dec
stos
dec
sub
lret
jmp
add
pop
ljmp
jns
or
push
mov
mov
cld
cmp
push
fstpt
cmpsl
sti
mov
dec
pushf
or
out
dec
lods
aam
jns
decb
pusha
jne
outsb
test
inc
lret
aaa
movsl
sti
out
shrl
int3
scas
test
mov
or
sub
xor
in
outsl
or
and
adc
mov
adc
sub
fdecstp
adc
xchg
mov
jle
fsubrl
gs
dec
inc
sbb
in
fsubs
sbb
shll
or
or
and
sub
xlat
test
mov
jmp
mov
incb
or
or
fwait
pop
leave
not
mov
sbb
leave
fdivrs
mov
leave
mov
dec
mov
xchg
mov
loop
pop
sub
cmp
scas
jns
rolb
lret
fmull
and
fadds
cmpsb
cmpsb
sbb
cmp
xchg
cmp
dec
mov
test
mov
jmp
hlt
fisubrl
sub
add
repz
jnp
cmpsb
in
cmpsb
pop
imul
xchg
mov
in
sbbl
mov
out
xor
xor
add
pop
mov
mov
mov
push
cmc
inc
fwait
lock
or
xor
xchg
push
outsl
mov
pop
xlat
push
xor
cmp
xchg
fisttpl
xor
in
mov
xor
push
mov
in
jmp
pop
push
push
std
ds
sbb
push
xchg
out
nop
addr16
ret
add
xchg
pop
loopne
pop
stos
mov
cmc
and
loope
sub
stos
test
iret
push
sub
cmp
jge
ret
out
mov
test
loop
sbb
dec
ret
repnz
imul
mov
pop
lcall
enter
clc
mov
xchg
push
lcall
sub
push
pusha
push
cmpsl
pop
fdivrl
xchg
inc
pushf
pusha
and
jge
sub
xchg
dec
inc
pop
and
lret
xchg
push
rep
in
dec
cmpsb
push
fcoms
dec
inc
push
add
adc
jg
push
pusha
push
push
jo
xchg
pop
shl
ja
pop
stc
ds
addr16
xor
xchg
xor
cmp
outsl
push
bound
dec
xchg
fstps
in
lcall
test
imul
out
dec
adc
roll
lret
jne
mov
movsb
movsl
xchg
mov
xchg
add
sbb
icebp
out
cltd
stos
rcl
sbb
jmp
lret
jp
pop
mov
je
fisttpll
clc
cld
xchg
nop
loope
push
fidivl
push
push
lahf
sub
in
sbb
into
sbb
push
into
jmp
jbe
enter
cmp
decb
mov
in
cli
push
or
repz
iret
fistps
lcall
xor
sar
data16
icebp
jl
cmp
shll
enter
ljmp
pop
imul
out
loopne
addr16
push
add
aam
push
cld
repz
cmpsl
pushf
gs
loope
sbb
mov
loope
cld
addr16
decb
orl
lcall
lods
inc
push
push
jb
aas
cmpsb
repnz
ror
sub
shll
inc
inc
adc
out
imul
xchg
or
xor
jns
and
insl
cltd
cs
imul
in
sbb
mov
cs
cld
add
xor
or
pop
mov
mov
add
enter
test
and
mov
cmpsl
rcrl
insl
mov
icebp
pop
aaa
jae
add
test
mov
sbb
and
out
inc
fs
mov
stos
pop
or
insb
mov
mov
cli
push
mov
xchg
pop
mov
fs
clc
scas
roll
stc
cmpsl
psubusw
fiaddl
mov
dec
lret
aad
push
ror
pop
mulb
pushf
adc
sbb
sbb
xor
mov
sub
vandnps
push
lea
mov
ret
stc
ljmp
call
and
mov
pushf
push
jecxz
repz
stos
cltd
sub
xchg
mov
jns
pop
inc
sub
insl
cld
pushf
int3
cltd
repz
cmp
mov
sub
inc
sub
ljmp
shl
movsb
xor
ret
js
jmp
mov
pop
push
xchg
fiadds
xchg
mov
sub
jp
inc
dec
jmp
ja
pop
inc
mov
in
testl
call
push
dec
xor
and
and
adc
add
out
add
or
jo
adc
subl
mov
out
push
test
and
test
shll
std
jno
sub
cmp
mov
adcl
mov
jecxz
inc
inc
mov
lret
sub
jecxz
pop
push
insl
fsts
int3
mov
enter
notl
mov
add
inc
sbb
mov
in
in
push
pop
scas
pop
or
mov
and
hlt
jmp
mov
pop
sub
ret
scas
cmpl
mov
inc
dec
cli
push
and
cmp
fcompp
xchg
mov
lahf
mov
das
cmpsb
scas
mov
rcll
xor
or
push
push
fistpll
enter
daa
add
negb
mov
mov
sub
mov
push
popa
test
pop
xchg
dec
pop
fwait
or
stc
cmp
test
repnz
repz
call
loop
les
and
jno
sub
addr16
mov
sub
push
fdivrs
into
lret
mov
jno
cmp
stos
ret
sub
push
fwait
lods
or
jge
cmpsb
loopne
add
test
inc
daa
jge
movsb
sahf
mov
or
adc
xchg
mov
push
xchg
shrl
test
hlt
mov
or
repz
cmp
mov
div
shlb
pop
bound
dec
pop
adcb
push
lods
push
push
xchg
testl
lock
je
movsb
mov
sub
mov
jae
xchg
les
test
js
fmul
mov
and
aas
imulb
lods
movsl
push
out
dec
data16
test
sbb
sbb
shlb
test
cwtl
leave
xor
sarb
jge
cli
sub
xchg
inc
pop
dec
push
bound
loop
movsl
sbb
pushf
syscall
lods
adc
loope
cmp
ja
dec
in
es
ss
mov
adc
test
shlb
inc
jmp
fwait
into
aaa
int
es
cmp
push
clc
mov
pop
ds
fstps
mov
pop
sub
pop
mov
push
les
lods
cld
lds
jo
sub
rcl
nop
push
bound
jne
stos
add
outsl
mov
pop
bnd
wbinvd
cmp
negl
lds
pop
jecxz
pop
jb
sbb
fisubl
jno
sub
and
xor
inc
pop
stos
test
cmc
stc
ja
sbb
add
mov
and
call
aad
and
repz
sti
jbe
sub
insb
jo
insl
pushf
adc
dec
ja
dec
sub
loop
mov
and
adc
pop
or
iret
out
fisttps
jne
cmp
adc
in
lahf
xchg
in
or
add
jmp
mov
test
pop
sti
imul
addr16
cmp
jl
inc
lahf
arpl
notl
sbb
inc
push
xchg
cmpsl
std
add
loop
mov
jno
test
dec
add
push
xor
xor
inc
into
shlb
sub
mov
pop
rcrb
dec
lahf
sbb
fimull
in
xchg
cmp
stos
xchg
ljmp
or
data16
push
div
out
inc
cmp
popa
sub
outsl
fs
stc
iret
inc
ret
sub
out
cmp
jp
mov
call
inc
push
mov
scas
test
aas
sub
mov
pop
and
js
dec
push
xchg
add
mov
out
les
lret
loope
sbb
mov
pop
cmp
movsl
mov
cld
dec
addb
repnz
subb
aaa
inc
jnp
shrb
outsb
setns
scas
cld
inc
mov
or
mov
dec
out
out
fnstenv
in
stc
jo
sub
stos
xchg
les
dec
dec
mov
cwtl
jle
xor
jge
add
pushl
mov
adc
and
xor
ja
push
sahf
sbb
pop
shll
arpl
push
jno
loop
xlat
rorb
loope
loope,pn
sub
sahf
mov
repnz
stc
add
and
rorb
stos
pop
jae
sarb
or
inc
pop
nop
imul
int3
rep
jbe
insb
dec
mov
inc
or
faddl
mov
mov
jge
or
pop
push
mov
cltd
ja
jp
pop
lea
fildll
lea
and
adc
push
adc
enter
mov
jmp
jmp
xchg
adc
inc
adc
cmp
and
lahf
test
pusha
subb
aas
aas
cmp
push
lea
insl
daa
bound
xor
push
iret
inc
aas
mov
test
call
sbb
jo
pop
stc
cli
mov
mov
pop
push
cmc
fs
pop
mov
rcrb
mov
aad
aam
popf
mov
sub
sbbb
xchg
ficompl
add
lods
fstl
xchg
mov
out
fnstenv
mov
imul
pop
jb
pop
insl
sub
fbld
push
mov
lock
dec
jl
mov
sub
inc
xchg
jle
mov
in
push
pop
in
pop
aam
in
mov
orb
aam
or
pop
inc
mov
bound
les
dec
or
jmp
int3
daa
lods
aaa
fwait
pop
lret
push
shll
lods
cmp
pop
sbb
enter
sbb
jl
inc
jbe
xchg
sub
jmp
inc
hlt
xchg
pop
jmp
pushf
mov
push
insb
mov
lahf
in
cmp
and
push
sub
xchg
lock
inc
hlt
clc
push
rcll
mov
movsl
in
icebp
mov
mov
mov
or
ficomps
push
and
xchg
sbb
sbb
fldenv
push
stc
lcall
fcomps
je
js
dec
and
mov
mov
shrl
xlat
insl
insb
sarl
mull
sub
mov
pop
decb
stos
mov
aad
lock
xchg
sbb
push
inc
inc
cmp
pop
popf
lret
mov
add
or
fldcw
ror
sub
xchg
ja
jbe
enter
sub
or
mov
mov
popf
fwait
test
adc
int
xchg
and
cmpsl
sub
xchg
jne
jne
shrb
pop
pop
fsubrs
iret
mov
mov
jns
movb
lea
jb
lds
jb
inc
pop
lcall
sub
popa
addb
push
pusha
mov
push
mov
push
rcrl
pushf
pusha
scas
add
pop
scas
xor
enter
xchg
into
push
or
add
outsb
xchg
pop
dec
fsubrl
test
and
sar
sbbl
das
pop
movsb
popa
outsb
scas
sub
mov
rcll
or
mov
push
fisubrs
pop
lret
cmp
insb
jnp
adc
or
cmp
xor
imul
pop
popf
inc
xchg
and
and
xor
mov
jmp
mov
cmpb
jae
fs
fldcw
xchg
add
jge
out
lcall
cmpsl
cwtl
addb
cmp
sub
leave
sub
ret
mov
pop
sbb
movsb
rclb
or
sub
sbb
ret
stos
pushf
outsb
and
adc
imul
push
lahf
lods
fs
mov
push
and
mov
int3
mov
lods
dec
mov
sbb
or
insb
gs
aas
mov
xlat
dec
jnp
ficompl
mov
adc
cli
pop
ret
int
xchg
mov
jns
sbb
cmc
sbb
fbld
mov
in
or
jmp
cli
jge
and
jle
push
pop
xor
dec
or
int
xchg
jmp
and
xchg
lods
bound
flds
add
sahf
sub
sti
xchg
cmc
faddl
dec
push
fs
jge
mov
inc
aad
push
int3
push
sbb
js
lea
movsl
cmp
pushf
int
inc
pop
enter
xlat
rclb
inc
test
jnp
cltd
dec
sbb
es
xorb
scas
mov
movsl
adc
and
subb
filds
scas
pop
mov
inc
xchg
mov
shlb
sbb
mov
mov
js
fists
sub
mov
rcr
dec
mov
add
loope
roll
addr16
push
inc
mov
std
mov
scas
call
mov
loope
push
popa
push
adc
ret
mov
pop
mov
push
mov
lods
aas
mov
lret
mov
mov
mov
sbb
pop
mov
xor
cltd
lds
lret
xor
popf
test
daa
imul
movsl
pop
jg
imul
lods
loop
mov
sbb
je
inc
sbb
or
inc
pop
jmp
jg
adc
lds
jecxz
mov
pushf
mov
sbb
repz
xchg
pop
xchg
imul
iret
sar
and
cmc
mov
pop
or
test
pop
sub
sub
mov
mov
ds
and
sti
js
das
out
jecxz
sub
adc
mov
lea
lret
ljmp
jmp
icebp
pop
inc
imul
repz
ja
push
fs
jns
pop
inc
mov
add
lock
mov
mov
pop
ljmp
and
fidivl
mov
clc
outsb
dec
or
xor
xor
shrb
stos
cmc
negb
jl
subl
push
push
jo
ret
cmp
sbb
mov
cmp
clc
pop
push
mov
mov
mov
mov
shll
test
xor
ret
out
push
lret
pop
loop
test
pop
shrb
mov
popf
inc
test
xor
lds
dec
jne
dec
cs
mov
fwait
xchg
pop
xlat
stc
scas
mov
push
je
lods
inc
mov
xor
sbb
loopne
lret
push
mov
mov
xchg
loope
jle
inc
notl
mov
xchg
popa
bound
enter
scas
xor
out
psubq
or
jae
xlat
add
pop
sub
xchg
aas
xor
out
dec
pop
push
pop
adc
enter
nop
lds
nop
cmp
stos
sub
cld
push
es
add
sbb
sbb
lret
cmp
mov
arpl
mov
sbb
dec
rcrl
inc
pop
inc
lods
xchg
or
cli
ret
lret
jns
xchg
mov
scas
cld
mov
ss
fwait
mov
jg
mov
popa
in
in
sub
cmc
or
pop
add
ja
mov
gs
and
inc
inc
hlt
ret
push
pop
jle
xchg
sbb
xor
or
jbe
fmull
clc
xor
out
cwtl
scas
imul
add
clc
and
test
pop
out
push
dec
imul
sbb
adc
addb
dec
lods
movsb
xchg
dec
aam
and
push
or
xchg
xor
push
fwait
or
stc
xlat
cmp
jnp
adc
mov
mov
fcmovnbe
ds
xor
loopne
imul
jp
mov
inc
test
mov
pushf
push
xor
dec
imul
dec
mov
sbb
jnp
cld
or
and
pop
xchg
ja
ja
pop
popf
loop
loop
dec
push
jae
mov
mov
out
and
out
dec
adc
fcomi
sahf
sahf
mov
adc
push
xor
sbb
mov
dec
lahf
push
pop
mov
dec
sub
fwait
inc
aad
cmp
out
pop
xchg
testl
gs
sbb
lea
in
fnstcw
sub
pop
lret
js
push
pop
adc
dec
icebp
outsl
mov
inc
cmp
andb
push
sbb
mov
push
aam
movsl
fsubrp
adc
daa
push
xor
ret
bound
jecxz
cmc
scas
xor
test
mov
inc
push
inc
push
push
fnsave
push
sub
push
mov
lret
inc
ficompl
scas
in
dec
idivb
xchg
inc
inc
cltd
inc
adc
ss
cli
push
into
dec
pop
fiaddl
jp
outsl
bound
gs
cmp
stos
mov
mov
cld
fld1
push
pop
leave
out
outsl
adc
fstpl
or
dec
xorb
imul
inc
rolb
outsb
shl
push
fisttpl
or
adc
jae
mov
xor
inc
pusha
shl
lea
push
cmp
mov
jle
test
gs
repnz
sbb
arpl
jmp
inc
and
mov
icebp
fs
out
into
jo
bound
lock
jno
pushf
stc
xchg
and
loope
sbb
xchg
out
and
imul
test
sub
lcall
cmp
mov
add
dec
sbb
pop
cmpsb
or
in
icebp
mov
jno
jle
add
stos
test
in
pop
adc
or
add
and
pop
shll
mov
mov
cld
fsubr
in
sahf
dec
push
iret
mov
push
sahf
adc
mov
adc
daa
mov
xchg
add
xor
sbb
sbb
fistl
mov
push
out
cmp
pop
and
inc
ljmp
divl
stos
inc
sub
adc
test
mov
or
shr
in
jne
jns
mov
or
dec
setl
pop
mov
mov
fwait
pop
ss
mov
ds
js
ss
mov
icebp
adc
iret
adc
adc
repz
imulb
jnp
xchg
jo
mov
int3
sub
cli
ret
push
fwait
sub
pop
sahf
bound
int3
inc
push
mov
xor
xor
mov
out
xor
cli
int
mov
adc
xchg
add
push
repnz
adc
test
mov
pushf
fs
test
or
aaa
mov
add
pop
test
call
lret
clc
scas
sbb
sub
iretw
xor
add
pop
shll
push
imul
pusha
rcrb
movsb
loope
xchg
dec
fsubl
popf
cwtl
pop
insl
push
sahf
rolb
dec
adc
xchg
push
inc
cmp
scas
pop
cli
inc
sub
push
dec
cltd
pop
ljmp
mov
mov
sub
dec
shl
movsl
das
dec
and
cmp
in
out
sbb
xlat
and
cmp
mov
movsb
cmpsl
xor
mov
inc
stos
lock
adc
or
or
jmp
popf
clc
repnz
ljmp
lock
add
hlt
sbbl
sahf
inc
xchg
inc
jae
xchg
loope
rorl
gs
out
jmp
mov
mov
xor
je
sub
cltd
ss
in
scas
cmpsl
movsb
push
das
pop
mov
and
int3
or
mov
repnz
add
cmp
and
jne
pop
xor
sti
adc
push
imul
cld
in
aam
pusha
cmp
add
jb
cltd
xor
mov
arpl
add
lods
inc
data16
nop
jbe
ficomps
jns
sbb
and
sub
aam
jmp
in
xor
mov
jno
cld
fdivs
add
dec
pop
adc
push
dec
movsl
jmp
out
inc
dec
cmp
pop
ficoml
sbb
ss
sub
xchg
notl
dec
mov
scas
mov
popf
fimull
xchg
push
mov
clc
fpatan
jle
sub
dec
pop
and
mov
sti
xchg
cmpsb
ret
mov
sbb
jp
ret
cmpsl
adc
inc
scas
lods
imul
adc
or
rcll
push
xchg
xchg
ret
jno
adc
cmpsl
js
fcmove
adc
mov
mov
fsubrl
mov
lahf
mov
test
das
cmp
inc
mov
testl
pop
push
jge
test
dec
push
jle
inc
insb
pop
xor
pop
fcmovnb
bound
push
sbb
out
inc
cmp
dec
cmp
inc
xchg
test
push
clc
and
cmp
inc
enter
add
inc
addr16
call
cmp
into
add
mov
cmp
dec
jmp
std
out
loopne
cmp
xor
sbb
adc
ret
push
sub
inc
div
movsb
xchg
and
fwait
popf
xchg
mov
shl
or
arpl
cmpsl
das
sahf
jge
insb
in
add
xor
clc
xor
movl
andl
test
shrb
push
out
and
test
push
pop
sbb
loope
cwtl
jecxz
incl
sub
fs
pop
add
lods
ficoms
inc
xchg
xchg
lods
out
sub
mov
ljmp
insl
xchg
mov
loope
bound
inc
add
cmp
repz
add
in
sbbb
in
pop
add
out
adc
push
xchg
dec
push
icebp
ret
stos
push
pop
pop
and
xor
iret
fstps
out
push
icebp
mov
dec
enter
rcll
and
mov
push
leave
arpl
das
mov
jmp
call
dec
hlt
jmp
sbb
mov
jg
mov
cs
fucomi
sahf
adcl
xor
xchg
sub
sbb
jg
aam
pop
arpl
push
scas
sbb
fxch
and
test
mov
pop
lock
sub
mov
into
xchg
div
sbb
in
mov
popf
mov
xchg
insl
and
xchg
gs
les
pop
push
ror
lds
jbe
inc
or
mov
out
jg
je
pop
lahf
sbb
jg
push
jp
aam
fisttpl
repz
into
cltd
cmpl
mov
sti
loope
stc
out
sub
out
enter
arpl
lahf
in
mov
mov
jns
push
pop
xor
mov
lock
push
repnz
jb
jo
or
mov
dec
mov
jl
xor
sub
xchg
jp
or
stos
mov
iret
jae
testl
push
filds
loop
pop
stos
loop
lods
pop
inc
in
fbld
mov
dec
pop
sbbl
push
mov
imul
nop
mov
xor
mov
cli
add
popf
mov
fcomi
gs
mov
add
les
dec
lods
dec
jle
cpuid
aad
jae
lcall
and
mov
sub
sub
pop
sbb
sbbl
or
stos
mov
std
pop
js
sbb
je
mov
xor
fcompl
ret
cltd
xchg
and
xchg
xchg
jne
fistpll
and
jno
pmulhw
js
jmp
xor
rolb
push
test
fwait
jle
mov
sbb
xchg
insb
ret
xchg
popf
rolb
add
rcl
sbb
mov
jl
mov
mov
fildll
adcb
add
pop
adc
cmc
rcll
mov
mov
adc
sbb
add
leave
and
fisubs
sbb
stos
dec
mov
imul
in
mov
push
jg
pop
add
dec
and
add
cltd
sbb
mov
pop
lds
repnz
mov
jecxz
pop
insb
dec
inc
jecxz
xchg
jge
icebp
cmpl
xor
adc
and
lret
mov
inc
cmc
lods
lret
ret
pop
int3
mov
dec
inc
pop
mov
inc
daa
push
and
bswap
cmpb
add
ds
sbb
push
imul
lcall
int3
cmpl
int3
jae
hlt
movsb
jecxz
pop
lods
sti
sahf
mov
inc
push
mov
cmpsl
icebp
push
orb
sbb
and
out
cmp
mov
push
push
sbb
and
repz
pop
inc
movsl
addl
mov
fidivrs
mov
test
lcall
test
int
loopne
or
inc
lahf
push
test
insb
roll
test
scas
out
xchg
inc
subb
insl
pop
jle
movsl
aaa
xchg
and
rcrl
bound
sti
pop
fsubl
mov
xlat
icebp
nop
test
mov
lret
sbb
loopne
or
pop
data16
rcrb
xchg
push
lret
fisubrl
mov
cltd
imul
subb
out
imul
push
call
jle
jne
loopne
push
mov
add
or
mov
add
leave
sub
jne
push
lock
aaa
mov
sub
push
push
stos
cmp
icebp
jg
in
gs
mov
insl
cmp
je
bnd
inc
cmp
lods
jge
pop
xchg
push
pop
lds
sub
mov
jg
nop
and
xchg
pop
scas
fimuls
in
fimull
out
mov
insb
pop
scas
pop
pop
test
imul
out
sbb
dec
lods
jb
int
orl
mov
dec
call
push
das
adc
repz
lcall
cli
data16
lea
ja
push
push
push
ja
add
sbb
imul
lret
popf
sub
daa
test
inc
jecxz
adc
ljmp
jns
iret
lea
cmc
mov
mov
xor
adc
mov
std
mov
aam
out
and
in
sub
inc
xor
dec
or
repnz
cld
jns
jnp
movsl
mov
clc
hlt
sti
dec
mov
lds
xor
ret
cli
rorl
stos
ja
dec
movsb
iret
mov
mov
jl
cmp
ja
sbbl
lcall
inc
mov
pushf
sbb
loope
xchg
int3
inc
sub
dec
dec
imul
insb
ss
inc
mov
add
jae
mov
mov
jns
int3
pop
sbbb
jno
js
imul
cmpsl
mov
mov
pop
jnp
inc
mov
add
dec
enter
sahf
cmp
daa
movsb
mov
insl
sbb
inc
lods
bound
add
mov
mov
jno
stos
and
int3
xor
cltd
imul
push
or
jb
xchg
cmp
std
jns
dec
lds
gs
jae
or
mov
push
popa
loopne
rcrl
jns
ljmp
or
push
data16
ljmp
push
out
fimuls
lret
pop
jmp
rcrl
pusha
xchg
addb
in
push
cmp
sti
lahf
leave
clc
call
cmp
enter
jns
idivb
movsl
icebp
mov
dec
lds
stos
popa
or
ret
or
push
rorb
jecxz
add
popf
out
dec
xchg
xor
decb
stos
jecxz
xchg
dec
lods
xchg
and
push
int
ret
scas
jbe
test
jnp
mov
lret
dec
add
adc
or
icebp
add
mov
adc
jle
shlb
andl
push
and
lret
xchg
push
sbb
gs
sub
or
xchg
fs
fbld
mov
data16
ror
addl
dec
cmpsb
push
inc
in
pop
jb
addr16
imul
inc
cld
or
out
mov
inc
jns
pop
outsl
shrl
je
adc
or
fdivs
call
dec
les
cmp
xorb
jbe
scas
xor
xor
cmpsl
into
repnz
sbb
mov
mov
iret
insb
test
inc
dec
leave
cmp
push
push
shl
stc
mov
sahf
push
add
add
in
imul
xchg
rorl
shlb
test
data16
jge
mov
ja
fcom
test
andb
lock
ljmp
sbb
ds
push
fs
nop
or
fists
xchg
fs
and
aaa
add
loopne
sbb
add
mov
sub
cwtl
mov
pushf
jp
sahf
mov
mov
jnp
pop
jl
push
sub
dec
adc
lds
hlt
repnz
adc
fiaddl
imul
adc
gs
jg
inc
jp
les
lcall
loop
push
fidivrs
stos
sbb
mov
xlat
int3
mov
xchg
pop
movsb
out
mov
sarb
inc
cmpsb
jecxz,pn
stc
cmc
sahf
test
add
int3
or
jl
hlt
popa
lea
in
ret
ffreep
add
cmc
and
push
out
in
imul
jno
push
jge
adc
xchg
jmp
sbb
push
hlt
pusha
lcall
sarl
mov
lret
out
inc
fs
add
daa
testb
loop
or
mov
clc
mov
ret
inc
or
dec
jnp
and
sub
push
push
sub
xchg
testb
mov
popa
and
cmpsl
test
jbe
incb
add
dec
or
pop
ljmp
cmpsb
mov
sbb
es
fldl
xchg
aam
lahf
insb
enter
sbb
flds
into
aas
ret
mov
stos
bound
sub
outsb
bound
mov
pusha
sub
adc
cmp
xlat
mov
cwtl
or
jmp
xorb
push
or
mov
push
lret
dec
dec
frstor
xorl
js
sbb
es
inc
add
fimuls
repnz
mov
imul
mul
lds
pop
mov
push
not
sbb
sub
jecxz
repnz
sub
arpl
insb
movsl
jg
or
sbb
cs
subl
pop
in
inc
push
sahf
shll
dec
sub
lds
cmp
rorb
mov
into
dec
pusha
test
push
popa
dec
gs
shll
in
addb
outsl
jmp
cmp
adc
add
mov
mov
shlb
lret
cs
xchg
fcmovne
dec
shl
lea
cmp
add
fnstcw
mov
rcrl
jnp
std
dec
fldl
and
mov
mov
out
iret
fs
cli
or
les
fistpl
lahf
cmp
ss
popa
xor
xchg
insb
dec
icebp
adc
mov
mov
fistpll
insb
push
jge
aas
adc
cmp
int
jmp
hlt
bound
aas
pop
jb
mov
aas
adcb
rcr
movsl
popa
jl
jo
inc
jb
add
push
fmull
fidivs
pop
pusha
inc
inc
mov
push
mov
lods
fcmovnbe
push
js
sahf
aam
and
and
mov
js
pop
jbe
fsubrl
mov
js
decb
fdivl
stos
inc
add
fs
push
xor
sahf
xchg
outsl
dec
xchg
dec
aam
jg
cwtl
pop
xchg
loop
enter
cld
lret
sbb
cwtl
xor
int
inc
mov
mov
cmpsb
pop
jb
fsub
pop
mov
in
xor
and
in
loope
dec
aam
jmp
push
xchg
push
nop
fwait
sbb
inc
push
or
cmpl
fsubrl
cmp
sbb
sahf
inc
inc
inc
imul
fs
and
inc
sub
in
mov
aad
sbb
test
jl
into
dec
sahf
mov
sub
data16
mov
push
scas
jle
mov
mov
sbb
jns
aas
pop
and
or
sub
push
jo
lret
cwtl
mov
fdivl
jge
inc
adc
jne
mov
outsb
nop
aaa
xor
pop
cmp
inc
cmp
fnsave
roll
cmp
flds
inc
je
stos
and
jb
xor
loopne
pop
clc
adc
xor
ljmp
aad
jne
pop
sbb
pop
lods
xor
enter
jns
shlb
cmovnp
push
sub
push
in
adc
dec
mov
jnp
lcall
gs
hlt
aad
fwait
repnz
in
jb
cs
ret
inc
stos
mov
cmp
jo
pop
xor
add
and
push
repz
dec
push
and
sbb
mov
mov
or
push
arpl
dec
or
into
out
popf
mov
or
pop
shrb
jge
movsb
fistpll
inc
roll
pop
mov
inc
and
mov
jle
lods
add
cmp
iret
adcl
lret
inc
or
hlt
push
pop
jno
int3
insl
test
sub
add
into
mov
int3
adc
outsb
xchg
imul
cmp
pop
aas
int3
loop
mov
test
inc
imul
jp
cmp
test
rcr
mov
movsb
gs
sub
inc
xchg
clc
loop
jl
out
lret
in
loopne
jno
stos
push
es
and
push
xor
or
leave
loope
out
aad
cmpsb
mov
mov
js
enterw
lret
pop
test
adc
lret
data16
gs
dec
inc
push
mov
mov
loopne
scas
out
and
bound
xchg
cli
shl
sti
sbb
inc
fists
jp
cmp
inc
sbb
xor
add
mov
inc
leave
mov
dec
mov
jmp
sub
sbb
inc
sarb
stos
jns
cmp
pop
aaa
push
dec
mov
mov
mov
scas
shlb
pop
lret
lods
ja
and
pop
outsb
lds
es
xor
dec
pop
movsb
pop
inc
jge
pusha
cwtl
cs
inc
or
rorb
jne
imul
mov
test
stc
dec
aaa
push
ret
dec
xchg
sarl
adc
xchg
mov
cltd
xchg
pusha
cld
sub
in
pop
mov
inc
add
sahf
jp
mov
in
or
push
dec
ja
add
pop
add
pop
inc
adc
outsb
imul
enter
mov
xor
add
xor
xchg
or
pushw
nop
add
or
jecxz
out
jbe
adc
outsl
cmp
and
jae
dec
sti
mov
mov
aam
or
sbb
add
mov
int
xor
pop
cmp
xchg
ret
lds
ret
jb
and
push
adc
lret
mov
popf
mov
adc
dec
cmp
and
push
in
adc
les
ljmp
add
ret
jne
aam
mov
mov
jno
xlat
jge
mov
xchg
xor
das
or
mov
mov
stos
xchg
ss
shlb
fdivr
sub
out
mov
adc
popf
hlt
das
lret
dec
mov
fstpt
cmp
add
out
adc
std
in
inc
loopne
mov
pop
icebp
cmc
push
aad
xchg
add
cltd
mov
adc
push
fwait
repz
add
pop
loop
rcrb
xchg
call
mulb
dec
loope
dec
jne
xchg
mov
adc
icebp
dec
sbb
lods
fcmovu
sub
or
inc
popa
and
sub
loopne
mov
xor
mov
dec
mov
sbb
inc
test
fstpl
cli
push
std
mov
jp
jg
out
pop
adc
xchg
mov
xchg
notl
pop
stos
pop
jle
call
pop
adc
bound
xchg
lret
aam
out
push
xchg
loopne
cwtl
stos
pop
inc
mov
cmp
adc
shr
test
mov
inc
addr16
inc
or
inc
stos
pop
in
adc
test
xor
test
repnz
and
xchg
ja
insb
jns
lea
into
into
push
cmpl
dec
pushf
push
dec
daa
shrl
popf
cmpsb
mov
push
ljmp
imul
inc
dec
push
mov
dec
and
and
stos
gs
loope
and
jnp
scas
mov
and
mov
xlat
test
inc
loope
sub
push
scas
add
fwait
cltd
mov
aaa
fisubrl
sub
add
cld
add
jmp
leave
ds
test
pop
das
orb
popf
aas
xchg
sbb
stos
roll
mov
xor
cmp
adc
enter
and
arpl
adc
cmc
add
cmp
ret
push
or
aam
test
fiadds
fwait
pop
js
cld
jle
jae
mov
xchg
ds
movsb
popf
addr16
add
lahf
ret
jmp
in
add
jge
and
jle
pop
cmp
cmp
in
jp
push
ss
jecxz
sarb
addb
jne
pop
lret
lods
sub
stos
inc
xor
pop
push
inc
mov
jecxz
add
adc
inc
jge
sub
ficomps
mov
pop
jnp
mov
imul
xchg
aam
imul
pop
arpl
adc
in
test
sbb
and
push
lea
pop
pop
stos
das
sbb
icebp
and
aam
cld
mov
aam
jmp
dec
dec
mov
pop
imul
lret
lret
and
scas
sub
mov
ds
out
cld
fwait
add
stos
mov
xchg
rcr
push
aam
inc
add
sbb
pusha
sub
incl
lods
sbb
mov
sub
and
rclb
push
lock
out
xor
ljmp
fcoml
pop
xchg
sbb
add
js
sub
sub
jmp
test
mov
cmp
or
adc
call
mov
dec
or
flds
mov
adc
pop
xor
stc
inc
and
cmp
shlb
inc
pop
xchg
rol
gs
int
or
pop
in
sbb
ret
adc
lahf
cmp
pop
or
in
jo
cmpsl
add
sub
and
ficomps
clc
dec
stc
popl
repnz
pop
pop
hlt
mov
pop
pop
insl
cmp
or
lcall
pop
add
jecxz
test
mov
cld
cld
xchg
push
inc
lcall
fcoms
adc
inc
and
mov
cld
mov
cmp
in
imul
enter
shll
add
and
call
xchg
mov
gs
push
out
add
out
add
cltd
dec
xchg
loopne
aad
or
lock
add
rolb
sub
push
or
xchg
mov
sbb
pop
loop
adc
js
mov
pop
dec
scas
or
stc
jns
pop
cmp
cld
mov
jno
sbb
xor
sub
inc
fcompl
dec
lcallw
cwtl
fldenv
sti
mov
into
inc
enter
sbb
leave
sbb
jl
xor
in
in
xchg
in
adc
sbb
jbe
imul
sbb
jb
jo
and
test
xor
ret
push
clc
cmp
aas
clc
jge
int
rorl
mov
les
push
inc
mov
loopne
getsec
adc
mov
jp
mov
out
xor
in
jg
shlb
andl
xor
inc
jmp
xchg
add
push
test
pop
mov
repz
sahf
mov
cmp
sbb
scas
insb
fmull
pmaddwd
sbb
xchg
stos
xor
cmp
dec
dec
xchg
out
into
jl
inc
xchg
xchg
imul
cltd
out
out
enter
cmp
mov
fistps
std
rol
pop
ret
call
jno
xchg
je
ret
xor
rol
mov
int
sbb
mov
testb
fwait
subl
and
sarb
test
lds
jg
adc
dec
xor
ret
cmp
imul
sub
out
jp
int3
push
push
sbb
lahf
andb
jbe
sarb
out
pushf
mov
and
pop
and
mov
cwtl
jl
icebp
push
add
rolb
jb
sub
lahf
pop
mov
test
adc
xchg
mov
xor
fnstcw
call
repz
xor
inc
push
sbb
inc
sbb
xchg
cmpb
cli
repz
loop
andnps
jge
add
repnz
dec
jnp
std
ja
js
sbb
add
daa
pop
push
mov
cmpl
mov
lret
lods
xor
xchg
push
and
pop
lods
sbbb
push
popa
cmp
fs
fsubl
mov
fnstsw
jg
int3
push
mov
jnp
movsl
and
in
int3
mov
loop
int
and
jge
mov
mov
pop
das
fcompl
xchg
xor
push
cmp
cld
mov
cmp
lods
mov
cwtl
sbb
cmc
mov
rcll
aam
out
sbb
xor
dec
cmp
xchg
ret
sub
icebp
in
jmp
cmp
push
and
sub
pop
jno
lds
icebp
adc
mov
mov
jb
push
orb
jle
daa
adc
mov
xor
xor
in
sbb
adc
inc
cli
jns
add
pop
nop
xchg
iret
add
sbb
jb
fldcw
xor
gs
shrl
inc
stc
push
out
hlt
dec
out
rol
ret
outsb
mov
mov
in
sahf
imul
in
add
mov
mov
push
test
nop
mov
xor
xor
adc
fs
lahf
jbe
mov
jg
lods
test
aad
imul
aam
mov
loopne
les
insb
push
sbb
iret
inc
push
int3
ret
movsb
push
mov
cmpsl
and
out
cmp
sarl
and
sbb
or
inc
cld
fsubl
imul
jnp
fs
cli
icebp
jge
popf
mov
fwait
arpl
movb
xchg
test
pop
xor
mov
in
jae
push
js
test
repz
dec
push
hlt
xchg
popa
popf
repz
mov
pop
test
jbe
adcb
cld
xor
xlat
std
jbe
lret
cmc
clc
jg
xchg
pop
add
lret
aas
pop
maxps
lds
fistpl
jbe
insl
in
adc
inc
push
es
outsb
jnp
rcll
xchg
jae
scas
inc
pop
shll
jmp
aam
out
cs
inc
xor
into
xor
ljmp
inc
aas
cmpsb
inc
das
sub
fucom
inc
fstpl
jae
jno
cmp
in
and
xlat
mov
dec
and
insl
sbb
sub
add
shrb
and
divl
in
mov
cmp
jo
mov
outsl
sbb
xor
add
fiadds
out
pop
iret
xor
mov
cmp
dec
lea
in
push
or
or
jle
rcrb
or
xchg
mov
insb
or
mov
popf
pop
fwait
mov
xor
xchg
dec
dec
in
or
pop
mov
ficoml
jbe
mov
scas
xchg
arpl
jmp
aam
adc
jnp
data16
mov
mov
and
data16
popf
push
and
pop
pop
daa
inc
out
clc
fmull
scas
pop
enter
in
xchg
shrl
mov
mov
mov
in
rorl
sub
test
push
or
mov
xchg
lods
and
jae
sub
sbb
inc
and
js
and
inc
push
xor
dec
cli
xchg
or
stos
mov
push
jp
dec
test
inc
mov
mov
outsb
aam
scas
iret
pop
jle
inc
jmp
or
test
in
inc
loope
xchg
aas
lahf
cmp
lahf
xchg
pop
push
jp
add
pusha
and
dec
hlt
mov
insb
cwtl
mov
push
jb
out
xor
testb
add
inc
loope
mov
xorb
push
sbb
adc
roll
mov
or
sarl
insb
scas
mov
jbe
pop
adc
add
iret
mov
inc
mov
dec
push
stc
pop
loop
jecxz
inc
mov
mov
xchg
inc
pop
sbb
in
jnp
mov
push
sbbb
dec
inc
pop
enter
xor
cs
mov
imul
add
scas
cltd
dec
mov
popf
insl
scas
lret
rcll
imul
stos
test
mov
mov
xor
loop
add
add
add
adc
je,pn
cli
inc
fld
int3
sbb
stc
push
mov
rclb
push
test
aam
jo
ret
dec
movsl
mov
xchg
bound
outsb
minps
insl
sahf
cltd
in
sub
inc
hlt
mov
ret
jbe
pop
js
test
clc
sti
sub
data16
sub
hlt
insl
addr16
enter
clc
lcall
cmpsb
pop
stos
into
mov
and
jne
lret
test
jno
or
and
mov
andb
or
test
daa
jg
mov
cmpl
and
jle
ret
movsb
pop
arpl
inc
insl
mov
cmpsb
cmp
pusha
lret
pop
int
jecxz
fs
stos
subb
dec
stos
dec
jl
cmp
mov
xor
adc
xchg
test
popa
cli
addb
test
repz
mov
andl
xor
mov
lret
mov
jae
mov
fcoms
adc
cmpsl
mov
xchg
das
mov
or
adc
xor
imul
fdivs
xchg
pop
mov
xchg
jle
fcoms
movb
cmpsb
jo
mov
push
test
mov
cli
fwait
mov
pop
cld
out
xor
repz
inc
lret
iret
in
push
adc
fists
mov
divb
mov
jl
pop
movsl
inc
mov
fsub
cmp
loopne
aad
in
mov
mov
shlb
mov
cmpsw
ss
xor
xlat
mov
jmp
push
lea
mov
mov
or
add
and
add
fadd
ds
fistl
jl
mov
pushf
xor
mov
mov
mov
ret
lcall
push
dec
jne
sub
cmp
popa
push
fdivl
popa
lea
les
hlt
jno
xor
aaa
sbb
popf
or
cltd
and
cmpb
clc
cmp
cmp
ds
and
mov
lahf
pop
icebp
jae
pop
xor
sti
adc
push
movsl
scas
push
stc
or
imul
orb
hlt
test
lahf
xchg
jmp
dec
mov
vpmacswd
and
xchg
cvtps2pi
sbb
aad
mov
or
rorl
int
fcomp
push
xor
dec
shll
lds
pop
in
in
loope
push
xchg
stos
in
xchg
in
or
lods
inc
mov
movb
mov
call
add
or
or
inc
jp
mov
add
mov
inc
lret
mov
jge
les
or
sub
jae
dec
xchg
movsb
pop
lret
mov
repnz
add
jp
negl
popf
inc
in
aam
pop
fdivl
test
mov
sub
and
insl
sbb
cmp
lds
in
fildl
push
fidivrl
out
sbb
and
aad
or
in
xor
rorb
mov
push
sar
cmp
or
lock
out
and
es
jp
and
les
and
jae
xor
pop
mov
cli
push
xchg
std
ja
movsb
mov
push
lret
lds
lds
mov
aas
je
das
push
imul
xor
mov
or
xor
insl
lret
mov
or
out
cmp
lock
sbb
cmp
pushf
push
icebp
cwtl
xlat
adc
ds
and
stos
jp
adc
cli
add
inc
dec
in
icebp
lcall
and
push
add
addr16
bound
xchg
sub
and
mov
jecxz
pop
jns
enter
or
dec
ss
pop
stos
sbb
add
mov
jmp
ljmp
adcl
mov
jmp
cmc
out
les
inc
dec
inc
stos
mov
push
or
lret
add
sub
movsb
xor
mov
or
imul
insl
mov
mov
lods
mov
push
adc
mov
fsubl
clc
mov
jno
movsb
cmp
cmpsb
popf
or
imul
dec
inc
mov
fildl
push
lods
cli
pop
cmc
adc
xor
adc
or
jo
loopne
mov
into
mov
movsb
test
push
fucomip
fnsave
call
dec
jecxz
cli
sbb
js
testl
jge
mov
jg
loope
int3
add
xor
fdivrs
stc
lea
add
jae
rclb
test
jae
cltd
or
push
daa
std
cmp
xchg
mov
mov
adc
rorb
pop
imul
xchg
and
add
sub
out
stos
addl
test
mov
dec
imul
mulb
jle
push
pop
dec
adc
add
pushf
mov
mov
shl
int
cmp
xchg
cmc
ficomps
stos
jge
arpl
or
cmp
test
nop
push
xchg
push
movsl
orb
bnd
sub
jmp
scas
sbb
sub
mov
fisttpll
cmpb
mov
loope
lods
orl
mov
push
sbb
add
cwtl
es
jns
pop
mov
scas
xchg
xor
insb
adc
add
and
daa
test
push
pop
clc
sbb
in
jns
stc
jl
push
xchg
cmp
or
pop
mov
mov
and
jl
repnz
inc
scas
jmp
xchg
es
dec
inc
jmp
xchg
js
sub
mov
push
inc
cli
jno
loope
notb
icebp
sub
scas
mov
pop
out
xor
add
fbstp
mov
sti
in
hlt
loope
push
out
movsl
cmpsl
movsb
xchg
in
imul
pop
lret
fsts
daa
jg
pop
adc
mov
pop
xlat
cmc
test
fs
mov
sub
push
movsl
sub
jmp
arpl
mov
mov
shll
adc
and
add
push
and
idivl
inc
inc
lods
jae
mov
ljmp
sbb
mov
adc
mov
dec
or
and
js
cmp
lea
adc
add
lock
jmp
adc
insl
sub
xchg
es
movsb
pop
mov
shll
inc
dec
ss
cmp
sub
mov
fidivl
mov
and
sarb
inc
test
jb
push
adc
push
xchg
mov
jg
adc
enter
js
dec
push
dec
pop
sbb
not
sahf
cmp
stos
jp
sub
mov
push
lcall
push
imul
sub
adc
sub
adc
sub
ds
or
dec
or
ljmp
outsl
sub
movsb
dec
dec
push
subb
inc
dec
dec
ja
sbb
dec
mov
shlb
stc
sarl
pushf
testl
sbb
dec
dec
dec
mov
sbb
push
xlat
ret
sbb
test
xor
lds
movsb
pop
lcall
mov
mov
dec
lea
xchg
sbb
aad
decl
sub
stc
bound
jmp
cmp
mov
sbb
cli
mov
xor
and
push
push
imul
sarl
xor
cli
sbb
cmc
sub
stos
or
mov
xchg
sti
lret
addr16
subl
incb
in
js
std
cmp
cmpb
negb
je
out
jns
imul
push
cmpsb
xor
sbb
xchg
ret
add
pop
nop
adc
mov
fwait
cmpsl
daa
jmp
out
mov
leave
pop
xor
js
sarl
mov
insl
insl
sbb
ret
dec
cld
fwait
dec
xchg
mov
loop
add
cmp
popa
sub
pop
inc
push
stos
sbb
pop
loopne
or
sbb
pushf
push
loope
int
cltd
or
adc
and
and
inc
div
iret
mov
xor
adcl
mov
push
xchg
xchg
push
push
dec
inc
inc
sbb
test
xlat
xchg
mov
mov
sub
pop
add
mov
mov
xor
mov
cwtl
fdivrs
mov
dec
and
jne
js
lahf
mov
out
bound
ficoms
or
and
pop
pusha
frstor
lahf
and
fists
jne
outsb
ljmp
push
jne
stos
out
int
mov
or
xor
pop
imul
push
in
jno
xchg
push
lret
or
sahf
pop
lds
shrl
dec
iret
mov
adc
jno
jnp
imul
push
inc
jne
mov
xchg
orl
dec
mov
gs
sbb
xchg
roll
arpl
sbb
mov
or
ficoms
pushf
inc
add
inc
test
and
xor
lods
inc
icebp
cmpsl
aas
jae
int3
inc
dec
xchg
out
test
je
sbb
or
xchg
jle
call
jno
iret
aad
insl
fisttpll
xor
daa
inc
or
test
ja,pt
or
cli
out
and
les
in
addr16
aas
or
aaa
mov
xchg
in
push
jp
inc
fcomps
fimuls
jnp
jnp
cmp
sbbb
xor
out
add
jne
ret
or
mov
int
add
mov
mov
jmp
iret
pop
cmpsl
shlb
test
je
outsb
mov
testl
mov
insl
jb
or
sbb
cmpsb
xor
roll
push
adc
cmp
in
cld
xor
cmp
inc
xor
push
cwtl
cmpsl
sbb
fdivr
out
int3
jmp
repnz
int3
notl
or
xchg
jno
into
push
movsb
test
mov
in
rcll
mov
out
add
dec
ror
jbe
loopne
je
mov
repnz
add
cmc
ljmp
inc
sahf
nop
mov
ret
outsl
ja
jl
shl
cmp
inc
jecxz
js
jbe
adc
mov
mov
inc
mov
dec
jl
je
cs
jne
xchg
aas
xor
dec
cmp
insl
and
shl
bound
cmc
xor
xor
push
add
adc
and
fs
cwtl
es
inc
test
cld
mov
jnp
inc
rorl
add
mov
imul
cmp
dec
dec
stos
loopne
loopne
mov
ja
inc
mov
mov
xor
inc
popf
je
hlt
mov
jnp
jecxz
add
mov
or
enter
cmp
cmp
push
outsb
cli
cmp
test
sub
or
jg
out
into
gs
push
repz
adc
add
mov
add
js
mov
jnp
fdivrl
push
scas
in
cwtl
in
call
adc
jp
adc
hlt
xchg
outsl
ret
lds
lret
out
stos
out
dec
int3
and
stos
dec
dec
xlat
jnp
mov
stc
out
mov
dec
jns
cs
add
bound
clc
es
sbb
push
stos
push
sbb
fcomip
push
loopw
or
cwtl
repz
fwait
lcall
push
lret
daa
and
adc
mov
push
sub
push
ljmp
cmpsb
xor
pusha
ds
fs
popf
stos
lods
pop
mov
add
sub
adc
das
test
xchg
sbb
pop
xor
stc
add
dec
in
fsubs
test
stos
dec
data16
pop
repz
lods
gs
or
sbb
dec
inc
out
push
jbe
lds
jle
insb
mov
mov
loopne
andl
pop
lock
cmp
xchg
pop
shrb
cld
jge
push
or
das
sarl
jl
imul
lds
test
out
out
ror
cmpsb
sbb
xrelease
cltd
inc
fwait
xor
jge
stc
insl
cmp
ja
and
fwait
xchg
cmpsb
out
stos
pop
or
push
xor
mov
push
dec
jne
pop
jmp
xchg
mov
stos
shlb
sbb
jae
or
xor
mov
dec
cmp
gs
shll
jmp
or
aas
pop
js,pn
add
stos
ds
inc
lds
mov
scas
test
xor
fisubl
jb
sar
cmpsl
mov
dec
addr16
shrb
repnz
js
cmp
sbb
std
leave
loopne
mov
shll
xchg
adc
push
xor
outsb
xor
pushf
iret
jecxz
sbb
lock
mov
xor
testb
hlt
into
mov
jns
lahf
inc
or
fmuls
add
mov
aam
ss
mov
adc
sbb
add
mov
lods
adc
sub
mov
xchg
adcl
xchg
fstp
add
and
in
jp
icebp
push
outsl
cmc
jbe
xor
jle
addr16
sub
test
dec
push
xchg
int3
add
push
in
mov
shll
es
jmp
pop
frstor
stos
inc
inc
cmp
push
inc
sbb
arpl
shll
pop
mov
inc
mov
daa
push
psubb
adc
bound
push
push
sbb
pop
xchg
adc
pop
push
popa
mov
xor
les
cmp
push
scas
xchg
movsb
mov
sub
and
sahf
jb
or
rclb
jle
aad
push
push
mov
cmpl
test
shll
mov
dec
fidivrs
cmpsb
outsl
sbb
incb
jne
xchg
dec
cmpsb
or
add
jns
mov
or
add
mov
sub
sub
in
pop
push
cs
sub
and
sbb
ss
scas
gs
add
dec
inc
dec
adc
dec
push
jge
sbb
mov
lcall
sub
sbbl
push
mov
sbb
push
mov
aam
ja
add
sti
lahf
xchg
int
out
ja
pop
dec
mov
xchg
xor
loopne
aaa
pop
js
adc
lcall
out
mull
pop
pop
pop
dec
mov
les
movsb
pop
xor
mov
pop
jno
sub
push
add
jl
xchg
sub
test
dec
or
jno
aad
cmpl
mov
incb
cmp
xchg
ljmp
call
mov
and
mov
js
test
sub
cli
mov
sbb
add
push
jne
add
fldt
outsl
jnp
scas
bound
cmp
jp
outsb
imul
pop
mov
push
mov
mov
scas
pop
daa
sahf
lds
adc
rep
repnz
inc
jp
lock
enter
xchg
pop
cmp
add
pop
fdivrl
adc
mov
mov
scas
rolb
orb
clc
xorb
rclb
and
xor
loope
int
roll
shll
out
outsl
dec
out
lcall
adc
push
cmc
inc
adc
dec
fwait
test
loop
loop
fdivl
mov
jmp
cld
mov
fnstcw
mov
xlat
fidivs
daa
int3
cmp
enter
nop
mov
les
ss
inc
pop
or
aas
inc
mov
xor
addr16
cmp
pop
mov
or
dec
jg
out
xchg
xor
mov
push
jb
pop
ljmp
jb
mov
jge
mov
jl
in
outsb
jmp
inc
lcall
inc
pop
adc
cmc
das
cmp
aaa
sub
cltd
and
mov
xor
data16
lcall
sub
sbb
je
mov
and
dec
icebp
out
imul
adc
in
loopne
pushf
push
repz
and
out
xchg
aaa
int
mov
sti
stc
ret
dec
inc
cmp
pop
aaa
stos
out
jecxz
pop
dec
jns
lods
test
das
dec
cmp
xor
sbbl
adcb
ret
xlat
notb
inc
pmaxub
fists
stos
lcall
pop
fldt
push
sub
sahf
pushf
insl
xor
idiv
pop
or
addl
add
aas
fdivl
test
ds
and
xor
mov
mov
test
mov
hlt
dec
lds
inc
lea
repnz
into
fadds
stos
inc
dec
lret
inc
repz
clc
dec
insb
xchg
fnsave
fst
push
jp
add
sbb
rorb
cltd
xor
jp
cmp
popa
rcrl
xchg
add
repnz
fwait
cs
push
jl
sub
and
shlb
stos
push
push
mov
jno
cmp
out
xor
adc
lcall
sub
js
cmp
push
movb
jne
jnp
xchg
shrb
cmpsb
add
lock
cmp
jmp
xchg
mov
imul
inc
loop
test
xchg
and
lods
sub
push
sarl
mov
adc
push
in
popa
xor
pop
dec
or
loope
int
dec
mov
movsb
xor
test
or
fs
dec
mov
js
lea
sub
icebp
and
out
xor
pop
jge
mov
pop
mov
test
cmpsb
xor
ss
shrl
ret
lcall
sbb
imul
push
jb
inc
and
pop
mov
xor
push
adc
aaa
push
sbb
adcb
adc
lods
jo,pn
enter
jno
cmp
imul
jno
push
dec
ja
inc
das
dec
imul
jbe
dec
lods
cs
sub
clc
sti
inc
lods
sub
fisubrl
into
xorl
jno
divb
fildll
ljmp
fs
or
push
inc
jns
ja
gs
addr16
adcl
and
jmp
xlat
push
pop
mov
int
inc
bound
mov
test
mov
pop
cmp
xchg
adc
push
or
xor
stos
pop
push
and
pop
js
movsb
jne
outsl
fs
adc
add
inc
nop
mov
orb
orb
bound
ljmp
ror
scas
and
mov
leave
outsb
das
cmp
dec
mov
mov
inc
in
clc
sub
pop
scas
jnp
mov
aaa
mov
insb
mov
mov
ds
xchg
ficoml
mov
adcl
loopne
ds
xchg
push
cli
clc
int
and
es
pop
cmpsb
cmp
nop
pusha
or
sahf
ret
mov
pop
je
je
xchg
sbb
add
call
mov
xorps
mov
lods
dec
testl
fbstp
lds
ljmp
xor
push
add
inc
out
mov
jg
xchg
cmpsb
mov
xchg
pop
js
xchg
aas
out
mov
out
testl
ss
fisubrs
push
xchg
loopne
mov
int
fbld
ffreep
sub
bound
adc
inc
roll
dec
inc
mov
push
mov
inc
push
js
addr16
and
mov
les
pop
outsl
pop
add
push
loope
fimull
pop
push
jge
adc
sub
lahf
dec
cwtl
movsb
mov
repnz
cwtl
addb
mov
cltd
inc
xchg
cmp
mov
xchg
pop
fsubp
out
fnstsw
mov
sub
adc
fs
adc
sub
sbbl
pop
and
fstpl
cmp
repnz
add
lea
push
aam
jno
dec
pop
mov
testl
or
mov
mov
xchg
out
and
adc
sti
sti
fcmovnu
rclb
aad
icebp
pop
xchg
dec
cltd
lcall
stc
lds
jno
clc
jp
sub
inc
test
add
shlb
cmpsl
mov
shll
jl
dec
add
lock
add
addr16
xchg
xchg
mov
lock
sbb
mov
stos
jb
sahf
rclb
inc
fimuls
ret
mov
test
xchg
popf
pop
push
pop
push
call
fistl
pop
sbb
pop
loop
sbb
test
arpl
outsl
pop
and
dec
popa
arpl
cmp
imul
outsb
in
cltd
jp
cmp
fs
iret
cmp
add
call
leave
addr16
pop
push
sbb
in
inc
mov
out
jnp
mov
jno
fimuls
fisubrl
jno
cmp
sar
sub
out
movsw
sarb
mov
popf
mov
mov
data16
hlt
in
pop
arpl
inc
adc
hlt
inc
insb
fcoms
xchg
nop
roll
imul
or
jle
aas
sahf
push
mov
inc
shlb
mov
ss
popa
movl
xor
push
inc
out
mov
fabs
jns
jmp
aas
pop
mull
jg
sub
lahf
aad
imul
or
xor
scas
jmp
ja
cmp
lods
insl
negl
sar
push
repnz
int
mov
in
sti
cltd
push
xchg
dec
pop
in
mov
adc
pushf
add
mov
push
and
and
cltd
inc
jb
punpcklbw
add
adcb
jnp
mov
call
cmc
jb
inc
std
mov
int
jmp
outsl
push
ret
lret
ljmp
jecxz
or
rorb
pop
or
out
sti
gs
addr16
xor
into
pushf
push
add
insl
sbb
in
loop
dec
lret
fadds
cmp
cli
cmpb
out
mov
mov
jns
popf
add
xchg
data16
jle
aad
nop
add
push
mov
sbb
dec
push
aas
dec
adc
sti
outsl
and
subb
in
lock
shrl
mov
gs
mov
ljmp
push
repz
aaa
aas
outsb
mov
adc
sub
aam
mov
rcl
testb
pop
mov
mov
sarl
dec
pop
cli
xchg
sbb
leave
inc
sub
mov
jp
lods
push
int3
mov
xchg
xchg
mov
sbb
rcrb
jae
dec
xor
jge
add
mov
cmc
cmpsb
aas
nop
jae
pop
pop
pop
imul
pop
stos
or
mov
mov
mov
outsb
inc
pop
pop
aaa
cs
jb
cmp
pop
pop
dec
pop
es
jge
sti
mov
sbb
ds
loop
sbb
mov
addr16
add
imul
roll
cld
xor
stc
mov
jne
pop
fldl
or
es
mov
sarb
movsl
add
fisubl
test
jns
orl
xor
cmc
inc
cli
out
cmp
lahf
in
dec
data16
dec
repz
out
xchg
mov
rcrl
push
add
and
in
mov
call
ficompl
roll
ret
and
insl
cmp
std
xor
push
sub
cld
imul
das
push
cmp
jle
xchg
jp
sti
and
cmpsl
ret
int
andb
imul
andb
test
adc
pusha
mov
ljmp
movsl
or
dec
leave
loope
mov
xor
sarl
outsl
jb
xchg
pusha
je
sbb
inc
mov
stc
sub
mov
idivb
xor
fbld
sub
ljmp
sbb
xor
test
push
jns
sbb
xchg
ljmp
iret
dec
repnz
loope
movsb
pop
mov
jne
xor
pop
mov
jle
pop
add
test
outsl
push
add
cmc
sbb
pop
mov
ja
mov
cmpsb
test
mov
cmc
daa
cs
sub
test
push
push
sub
dec
xchg
mov
jns
fs
movsl
roll
and
stos
out
pop
ja
jns
inc
movsb
jmp
insb
inc
pop
mov
pop
mov
adc
pop
es
jb
test
and
dec
movsb
lahf
jbe
mov
sub
inc
adc
add
hlt
insl
dec
aaa
jmp
pop
dec
fwait
pop
imul
jns
stos
mov
cmp
lahf
rcll
add
sub
push
xchg
imul
in
sti
ret
or
test
loop
mov
jnp
faddl
inc
mov
xchg
xchg
mov
push
or
ljmp
lods
test
cmp
stos
add
insl
ljmp
cs
jge
push
popf
scas
adc
lods
pushf
idivb
leave
ret
test
xor
insb
es
jmp
sarb
pop
aaa
mov
xor
lret
push
outsl
push
pop
mov
lods
and
push
or
pop
xor
add
repz
pop
mov
inc
mov
pop
hlt
fwait
push
aaa
sbb
out
cmpsl
enter
sbb
divl
or
call
in
fcomps
mov
imul
sbbb
hlt
mov
pusha
adc
leave
sbb
outsl
jmp
mov
cmpsb
in
sbb
outsb
outsb
sub
jb
cmc
dec
gs
in
movsb
push
jmp
mov
je
xor
movsb
pop
or
xchg
stos
add
add
jno
iret
popf
cwtl
pop
cmpsl
stos
adc
bound
add
cld
xor
pop
push
push
cs
cmp
mov
in
insl
add
mov
lret
pusha
int
insl
mov
int
cwtl
ljmp
and
nop
xchg
or
fisubrs
add
clc
rol
cmc
dec
inc
adc
leave
lds
push
outsl
push
fistl
movsb
lcall
jmp
pushf
rolb
or
aam
dec
push
fidivs
push
mov
fldenv
mov
push
and
lods
repnz
insb
aad
jbe
sbb
adc
packsswb
mov
pop
dec
mov
rcll
test
in
pop
ljmp
inc
es
insl
fsubs
sbb
test
out
adc
ja
xor
arpl
ror
out
mov
adc
mov
mov
and
dec
pop
inc
mov
cli
movsl
bound
pop
cmpsl
pop
rorl
add
jne
sub
aaa
jne
mov
pusha
dec
pop
dec
imul
dec
adc
into
pop
mov
sbb
pop
mov
jge
cs
push
nop
ss
or
push
call
sub
arpl
bound
iret
insl
icebp
negl
ret
das
xchg
mov
push
jg
mov
test
inc
adc
jl
or
int
lahf
adc
add
popa
mov
mov
call
cld
mov
mov
and
xor
push
inc
sbb
sub
xchg
and
and
xor
push
lcall
jo
in
fxtract
add
cltd
call
push
mov
dec
outsl
sbb
push
sub
mov
jae
outsl
jmp
sub
scas
pop
mov
xchg
shll
cs
jecxz
jl
imul
mov
divb
outsl
stos
fidivs
mov
int
pand
cmp
add
fmul
ja
and
test
fdivs
add
into
and
stos
pop
mov
jmp
jmp
mov
ljmp
fs
aas
test
pop
jecxz
ja
xor
xchg
stc
xchg
pop
mov
test
push
mov
sbb
ja
adc
test
dec
jne
loope
or
jmp
pushf
repz
xchg
bnd
nop
mov
outsb
rorb
hlt
adc
xor
out
xor
mov
cmp
inc
or
cvtps2pd
stos
mov
and
inc
dec
inc
add
daa
lcall
in
jl
and
sbb
rorl
pop
cld
cmpsb
jmp
test
scas
mov
fstpl
lea
mov
test
push
dec
xor
sub
out
addb
xchg
sbb
xor
ljmp
push
and
sub
hlt
cmc
pop
mov
adc
into
aam
cltd
int3
inc
movsb
cld
movsb
imul
sbb
fwait
es
adc
iret
xlat
xchg
sbb
int3
jmp
dec
sub
ljmp
lds
test
and
cld
in
push
jae
inc
or
sub
push
jl
fisubl
and
push
xor
sub
les
ja
lahf
adc
sti
pop
xor
push
xor
imul
add
into
and
leave
dec
fsubrl
cmp
sub
mov
push
add
stc
sbb
fistl
mov
jnp
ret
dec
rol
sub
mov
pop
inc
mov
mov
add
rorl
rclb
dec
fnstcw
pop
sti
mov
jne
cs
mov
cmpsb
lea
data16
cmc
xchg
mov
inc
adc
fidivs
sub
adc
nop
xor
adc
shll
jb
ret
clc
mov
cwtl
mov
jmp
mov
aad
loope
add
cltd
mov
aaa
cli
cmc
pushf
dec
js
icebp
and
xchg
std
xchg
icebp
and
in
mov
fsubl
add
sub
mov
neg
mov
cmp
and
jl
push
and
push
mov
or
mov
jno
fmull
cmp
push
insl
and
pop
fistl
pop
mov
fbstp
pop
dec
addr16
scas
push
adc
jo
xor
pusha
dec
cmp
dec
push
pushl
push
push
adc
sbb
inc
inc
push
push
xlat
push
fxch
xchg
push
push
sub
outsl
mov
adc
jne
sub
mov
lcall
das
daa
sti
daa
iret
stos
sub
adc
mov
or
jns,pt
idivb
inc
stos
repz
sahf
loopne
jnp
push
ljmp
out
xchg
pusha
inc
xchg
aam
mov
fsubs
cld
cmp
push
add
mov
cmc
cmp
dec
or
xchg
sbb
aad
jae
cs
adc
mov
les
and
daa
mov
or
es
jmp
adc
test
test
mov
inc
push
mov
push
popl
push
and
cwtl
dec
cmovg
loopne
dec
aad
xchg
stos
jb
mov
cmpsl
daa
mov
orb
ror
mov
loopne
push
fadd
sub
testl
sbb
push
mov
jae
or
outsl
mov
push
test
popf
jbe
dec
and
aad
popf
js
addr16
int3
mov
sti
mov
pop
pop
loop
outsb
jmp
push
cmp
lahf
pop
test
adc
por
jne
and
xchg
fucompp
stos
add
ss
scas
adc
sbb
inc
add
cmp
imul
in
lods
lea
push
add
mov
sbb
push
divb
mov
inc
fiadds
repz
repnz
shrl
jno
jle
pop
jno
mov
pop
icebp
mov
lea
mov
xor
dec
pop
loope
call
jmp
in
mov
js
sahf
outsl
or
lods
aad
xchg
jb
cmp
mov
push
aaa
and
insb
pop
add
scas
sbb
fsubr
jmp
test
loope
lahf
mov
repz
dec
jmp
sub
test
repnz
repnz
std
les
mov
sub
imul
cmp
xchg
pushf
stc
push
jnp
ljmp
incb
lahf
inc
std
addr16
rcrb
aad
dec
sahf
mov
dec
xchg
cmc
jp
mov
data16
cmp
popa
xacquire
sbb
mov
xor
loope
cwtl
or
fcoml
out
fsubs
cmp
cld
xchg
call
dec
xchg
mov
ret
cld
jmp
dec
shlb
inc
mov
pop
jp
sbb
scas
mov
pop
inc
push
loope
jbe
aaa
xor
mov
cmp
push
shrb
mov
sti
dec
and
push
and
mov
cltd
stc
insl
mov
sbb
mov
dec
addb
mov
ja
icebp
add
in
jl
aam
lds
inc
nop
lret
lret
lds
lds
icebp
push
fwait
out
sti
adcl
pop
add
out
ret
arpl
mov
xchg
inc
cmp
push
and
jb
insb
jmp
orl
inc
jg
repnz
xor
je
dec
adc
loope
loopne
mov
jmp
add
xor
invd
and
pop
aam
leave
jnp
pushf
dec
and
idiv
fsts
and
pop
add
orl
mov
mov
fnstcw
mov
fstps
mul
mov
iret
lods
sahf
movsl
lret
cmpsl
jae
mov
pop
js
pop
mov
out
sbb
pop
clc
lcall
jecxz
sahf
or
pop
jl
movsl
stos
xchg
xchg
fstps
jo
rol
xchg
int3
das
and
and
cmc
sub
es
push
repnz
repz
cmp
push
hlt
jb
push
in
mov
addr16
les
lahf
xor
pop
mov
push
add
shlb
je
xchg
data16
loop
add
pop
je
cmpsb
andl
lds
jno
repz
mov
jns
cli
imul
gs
cmp
fs
jae
lcall
xor
adc
dec
loope
loope
stos
scas
fsubs
xchg
dec
in
cmpb
adc
mov
xor
and
enter
mov
xor
inc
jne
imul
test
dec
faddp
mov
xor
pop
and
mov
fldt
pushf
call
pop
mov
cmp
inc
cmp
stos
loopne
loop
js
div
repnz
fldenv
push
xchg
stos
adc
faddl
fstpl
xchg
mov
cmp
les
dec
push
sbb
mov
jb
loop
jo
mov
xchg
lds
add
adc
jle
testl
jl
push
dec
mov
out
mov
ja
div
or
sub
fistps
pop
mov
fnsave
jae
arpl
or
popf
xchg
mov
mov
repnz
jno
jb
orl
daa
in
mov
lret
jl
and
push
data16
sub
pop
cmc
mov
add
add
out
scas
cmp
pop
sbbb
cmp
sbb
mov
push
repz
bound
or
push
scas
out
cmpl
lret
sbb
jp
adc
lods
ss
ja
movsl
or
xor
ficomps
sub
pop
dec
adc
punpcklbw
jle
and
add
mov
or
cli
out
dec
addb
outsl
lret
ljmp
xchg
mov
mov
add
cmpsl
aad
call
add
jnp
es
or
lcall
add
rclb
test
mov
xor
mov
inc
xor
imul
cmp
int3
adc
shrl
out
xchg
in
cmp
fsubrl
sub
lcall
push
pusha
mov
sub
repz
xor
lds
xor
int
inc
jae
aas
rolb
cmpsb
das
es
inc
int
sbb
subb
pop
inc
pop
idiv
int
push
icebp
insb
pop
cmpsb
mov
mov
scas
int
inc
push
mov
push
arpl
dec
inc
aaa
outsl
mov
insb
mov
out
negb
inc
dec
jl
test
sub
testb
daa
mov
cmp
pushf
stc
in
jb
aaa
ljmp
sbb
xor
in
test
daa
gs
mov
and
movzwl
push
push
xchg
jo
pop
inc
rorl
inc
sbb
lcall
aas
outsl
mov
iret
dec
jns
dec
data16
sub
jg
mov
mov
or
dec
inc
outsl
jecxz
out
pop
std
jbe
push
sub
testb
test
test
or
je
sbb
insb
scas
daa
pusha
sub
xor
lahf
pop
xor
in
mov
push
sbb
shl
dec
mov
inc
ja
stc
lret
mov
cld
inc
aad
data16
pop
and
jno
mov
stc
lock
lahf
mov
scas
push
pop
addl
imul
inc
stos
fwait
push
xlat
shll
push
jp
jle
sub
ret
cmpsb
repz
or
addb
xorl
aam
outsl
fwait
cmc
mov
sub
loop
jmp
pop
aad
inc
ss
ds
jbe
xchg
inc
cmp
sbb
or
dec
fucomi
add
addb
jns
outsb
jns
mov
fwait
in
arpl
jp
jbe
lret
sbb
push
sahf
jge
dec
jns
xchg
cwtl
movsb
decl
cmp
faddl
adc
pop
inc
and
sbb
movaps
jno
pop
out
in
pop
mov
jge
inc
clc
lahf
ret
dec
and
clc
xor
xchg
sub
xchg
std
sbb
pop
mov
cmp
and
cmp
push
pop
mov
loop
fwait
lods
sub
jno
repz
inc
xchg
pop
adc
xlat
jge
lds
inc
push
adc
mov
ds
adc
cmp
das
clc
in
jp
repz
cmpsb
fdivrl
mov
dec
scas
add
add
repz
out
xchg
pop
add
dec
push
scas
ja
xchg
xor
or
cmc
xlat
jle
jbe
fs
cmp
and
cwtl
nop
push
in
test
mov
or
loopne
and
fwait
xor
call
xor
mov
push
loopne
cmp
mov
add
mov
stos
xor
mov
mov
or
jnp
mov
cltd
cmc
rorb
in
sbb
int3
inc
popa
loop
insl
mov
pop
ror
xchg
lock
jmp
mov
mov
repnz
cmc
adc
mov
xlat
dec
test
jbe
mov
popa
pop
jp
mov
ret
jae
lret
aas
push
push
jl
mov
add
adc
cmp
fdivrp
cltd
pop
shlb
inc
xchg
stos
jl
xor
or
bound
mov
fmul
mov
sbb
sbb
or
jb
ffreep
fidivrl
in
jmp
pop
push
mov
test
inc
add
pushf
sub
xor
pop
mov
in
fisttps
shlb
daa
cmp
push
cwtl
in
js
sub
and
notl
dec
in
and
mov
dec
mov
incb
repnz
ja
fs
daa
and
fldenv
jne
sub
push
ret
bound
popf
mov
cmp
ja
add
sub
mov
lcall
lods
mov
sbb
mov
sub
push
leave
push
call
and
xchg
aas
outsl
xlat
xchg
xor
daa
out
jno
xchg
dec
ss
adc
push
push
jo
inc
sbb
push
fwait
ss
jle
sbb
mov
out
mov
imulb
mov
lcall
push
fs
inc
pop
dec
fs
in
das
mov
outsl
aam
mov
xchg
ljmp
inc
adc
shll
sahf
cltd
aam
mov
lahf
cli
push
push
jle
push
lea
fs
mov
adc
movsl
ret
cld
lods
je
ds
and
mov
repnz
jp
or
jbe
adc
outsb
and
inc
and
jle
out
push
cmp
lret
sub
aas
push
adc
data16
dec
pop
popf
xchg
clc
xchg
sub
cmc
das
fisubrl
in
in
jmp
fnstcw
jb
or
pushf
xchg
push
pop
inc
jns
mov
popa
fstpl
xor
shrb
fwait
xchg
mov
test
lcall
cmpsl
aad
std
gs
imul
sti
and
in
js
andl
mov
sub
fildll
add
xchg
pushw
mov
test
in
ret
aas
mov
ficompl
adcb
je
dec
mov
fisubrs
gs
bound
and
sbb
dec
push
aas
adc
stos
icebp
out
es
xor
or
xor
inc
push
dec
cmp
xchg
or
pop
jmp
cmc
shlb
icebp
ficoms
icebp
and
pop
scas
mov
loope
push
outsl
dec
xchg
and
subb
sub
mov
gs
jl
cwtl
add
out
cld
loope
test
inc
ror
movsb
sbb
clc
scas
cwtl
push
push
jp
outsb
pop
lds
mov
je
aaa
mov
lock
repz
test
mov
mov
dec
push
stc
addb
scas
cmpsb
aam
dec
inc
xchg
test
stos
or
movsb
push
out
mov
mov
xor
ja
cmpsl
das
add
mov
aad
popa
xchg
sbb
and
or
xchg
push
fisubrl
cmp
pop
cmp
dec
into
pop
mov
out
mov
adc
inc
fisubrl
clc
jg
lahf
push
sub
mov
sbb
lahf
and
mov
rorl
push
test
outsl
imul
cmp
adc
out
pop
movsb
addr16
dec
scas
clc
ja
movsl
and
sahf
mov
repz
cmpsl
sub
xchg
shrb
out
cli
add
fs
sbb
mov
sub
popf
pop
mov
lds
push
cmpsb
or
sub
fs
jmp
into
add
rolb
notl
push
andb
add
adc
push
fists
lahf
cmpsb
cwtl
lahf
stc
lock
shll
int
inc
repnz
jo
mov
xchg
mov
jno
jg
in
inc
insl
stos
push
jae
mov
call
xor
mov
jb
in
ljmp
inc
sub
ret
iret
inc
sbb
ss
int3
mov
hlt
mov
out
lret
fdivrl
test
pop
jmp
xor
and
xchg
dec
mov
pop
xor
add
jo
aaa
adc
flds
mov
aas
mov
andb
cs
std
daa
repz
ds
mov
jecxz
fwait
das
xor
dec
repz
cs
ljmp
xor
and
add
pop
and
inc
push
push
out
leave
ss
push
rolb
pcmpgtb
mov
adc
xchg
xor
xchg
sub
pause
xchg
shrb
adc
cmpsl
in
add
and
hlt
out
inc
dec
or
jle
push
sub
jmp
sub
mov
cmp
dec
push
dec
pop
enter
add
inc
stos
popl
xor
inc
cwtl
lret
testl
rcll
scas
cmpsl
call
fidivrl
mov
ret
lock
daa
mov
fstpt
repz
outsb
fisubrs
rcll
stc
je
dec
mov
ret
xchg
inc
pushf
ljmp
sub
sarb
inc
lahf
pop
jmp
out
push
jge
bound
fldcw
jmp
test
cltd
jo
cmp
rcrb
cmp
pop
cmpsb
sbb
xchg
mov
roll
dec
ds
pop
imul
loopne
lea
push
bound
loopne
iret
fimuls
xchg
and
out
sbb
xchg
push
outsb
shll
test
sub
xlat
dec
pop
enter
jmp
lods
mov
mov
addr16
xchg
xor
shlb
insl
and
xor
sahf
insb
push
jge
sub
add
push
aas
jp
jp
out
sbb
push
or
pop
nop
cmpsl
imul
xchg
or
shlb
sbb
xchg
cmp
int3
xchg
sub
movsl
sub
mov
cmp
xor
mov
hlt
and
cli
sahf
sti
push
shlb
enter
mov
dec
andb
mov
inc
sbb
cmpsl
dec
inc
inc
and
cmc
inc
or
popa
push
pusha
dec
fstps
pop
pop
jl
cmpsl
pop
shrb
out
clc
pushf
andb
shll
ficomps
xlat
sub
inc
arpl
mov
xor
add
insb
add
add
mov
loopne
arpl
mov
in
gs
mov
xor
clc
mov
jae
ret
dec
out
sub
addr16
jge
out
xchg
ds
add
push
outsl
mov
cmpsl
add
loope
lea
test
insb
dec
aas
imul
cmp
pop
xchg
imul
inc
in
dec
iret
repnz
scas
in
sub
mov
sbb
sbb
cmp
pop
pop
pop
mov
dec
dec
mov
daa
test
and
and
in
sbb
xadd
pop
dec
lahf
mov
cmpsl
orl
or
fcoms
sub
aad
scas
aad
imul
xor
add
repnz
movsl
sahf
in
jge
aas
mov
fstl
and
jo
jbe
mov
mov
in
insb
mov
mov
lcall
sbb
imul
int
mov
push
out
popa
lods
aad
mov
mov
andb
xchg
adc
jnp
xchg
xchg
add
inc
sub
enter
addr16
scas
jecxz
xor
push
push
sbb
sarb
mov
jo
pusha
into
mov
mov
add
jge
int3
lcall
lahf
loope
cwtl
or
pop
and
mov
mov
test
test
pop
das
pop
notl
cli
cmp
and
sahf
movsl
jmp
xchg
xor
int3
pushl
into
xorl
hlt
in
mov
in
popf
push
int3
dec
in
xchg
int
pop
xchg
fwait
push
jg
xchg
xchg
jl
sub
repz
scas
jnp
les
lcall
dec
ret
test
pop
adc
push
cmp
mov
repnz
sub
rol
pop
xor
mov
jl
jnp
dec
pop
aad
pop
dec
stos
push
cmp
insl
fcompl
cmpsb
sti
fcomps
sbbb
into
dec
mov
mov
and
fstpt
add
insb
scas
es
xchg
jmp
mov
jne
test
jo
repnz
jl
mov
xchg
mov
stos
arpl
xchg
mov
xchg
movsb
fwait
or
aas
ds
sub
push
inc
inc
jae
mov
add
ss
or
scas
test
sub
dec
ds
or
shlb
shll
mov
leave
mov
or
sbb
and
bound
scas
sarb
mov
cmp
adc
mov
jle
cmp
cwtl
cmp
insl
mov
mov
loope
test
sbb
fwait
pop
test
xchg
int
cltd
into
fstp
sti
loop
mov
pop
ret
xchg
xor
push
sub
movsl
loope
pop
sbb
pop
repnz
out
movsb
popa
or
je
xchg
jb
scas
lods
lcall
push
hlt
inc
fsub
push
inc
adc
add
and
ljmp
int
lahf
scas
cmp
or
mov
movsb
xchg
xchg
push
mov
mov
daa
and
movsl
outsb
fistpll
inc
adc
insl
cs
pop
mov
sbb
mov
xor
mov
cmp
outsb
push
mov
jae
inc
push
iret
fisubrl
fstps
out
fldt
pop
jge
and
es
jae
lret
xchg
xchg
sub
fmuls
aas
sarb
orl
dec
mov
ss
outsb
shrb
pop
fwait
mov
jle
or
mov
aaa
mov
push
or
push
xchg
mov
addr16
adc
mov
push
inc
mov
test
mov
jg
out
mov
pop
pop
int
imul
mov
orb
mov
pop
pop
mov
inc
push
mov
lret
cwtl
fcoms
outsb
fsub
add
out
or
lods
mov
pushf
shl
enter
sbb
test
mov
fisubs
cmpsb
ljmp
or
std
icebp
das
inc
aas
adc
and
mov
cmp
or
ds
lahf
cld
mov
sub
mov
cmpsb
mov
sub
jl
pop
dec
dec
sbb
leave
mov
mov
jle
shl
rclb
decl
and
mov
sub
int
mov
fisttps
mov
cli
fnstsw
jbe
repnz
jp
lea
add
mov
pop
ss
mov
aaa
jge
fidivl
and
add
imul
lret
sub
jbe
movsb
sub
mov
inc
dec
lret
lods
adc
adc
aad
or
dec
aas
in
mov
mov
fiaddl
xchg
ja
xchg
or
imul
cmpsb
ret
ds
insl
mov
mov
dec
inc
outsb
and
in
mov
push
into
mov
jmp
shl
cmc
mov
imul
sbb
sub
mov
xor
cmp
mov
mov
bound
mov
roll
xlat
add
imul
jl
or
xor
pop
mov
leave
pop
das
lea
or
in
test
pushf
sti
jl
fistl
shll
orl
scas
je
and
pushf
inc
and
rorl
xchg
roll
push
test
in
mov
fdivrl
dec
lret
imul
and
cmp
pop
cmp
push
cmpsl
add
je
dec
mov
mov
and
dec
rorb
inc
or
push
pushw
xor
dec
and
cmc
push
xor
mov
sub
lret
mov
add
pop
cmpl
xchg
scas
aam
shll
mov
xchg
loopne
je
lea
jne
fst
js
mov
push
xchg
lret
adc
xor
gs
mov
mov
jo
mov
push
jmp
pop
xchg
and
imul
dec
xchg
popa
sub
js
insl
push
and
out
sti
sbb
mov
xor
dec
lock
nop
dec
test
inc
fsubl
fisubs
test
stc
mov
cmc
push
pop
je
mov
jb
test
mov
shlb
xor
xor
js
stos
mov
add
hlt
sub
aas
jge
cmc
icebp
lods
fstl
or
fistpl
pop
and
scas
enter
lods
xchg
dec
sub
imul
sar
pop
in
cmp
sub
ss
dec
in
je
sbb
push
jae
cmp
into
pop
inc
inc
jno
packssdw
gs
mov
mov
add
or
jmp
dec
lcall
pop
sbb
push
pop
add
fistpll
popa
incl
nop
daa
imul
arpl
popf
gs
out
lods
js
adc
xor
ficompl
jmp
rclb
xchg
mov
ficomps
out
icebp
fildll
and
cld
arpl
test
sbb
aam
xchg
pop
lret
jbe
das
shlb
scas
or
xorb
ljmp
int3
in
jbe
add
cmc
jp
sbb
jb
mov
push
lock
or
cmp
sbb
loopne
push
add
pop
ret
xchg
sub
cmp
mov
xor
sahf
sti
pop
sbb
or
in
add
or
cmp
in
jl
xchg
scas
xor
js
test
inc
or
in
arpl
jbe
push
jmp
cmp
pop
aas
fwait
cmp
enter
jns
lods
cmp
js
xchg
movsb
or
je
cmp
add
sub
inc
mov
icebp
stos
mov
dec
sbb
hlt
cwtl
cld
and
jmp
sub
sbb
test
mov
test
mov
andb
sbb
mov
pusha
imul
mov
fwait
and
mov
mov
sub
xchg
push
dec
outsb
scas
shlb
arpl
push
cmp
jmp
adc
fwait
in
rcll
sbb
iret
push
jge
outsb
cmpsl
les
cmc
mov
or
mov
ret
movsb
imul
and
inc
outsl
mov
test
add
mov
cmpsl
fs
push
fdivr
cltd
xorb
out
mov
and
test
loopne
sub
adcl
and
xor
push
es
fdivp
out
stc
xor
pop
mov
cmp
mov
or
test
sub
test
sbb
push
jno
out
pop
rep
jo
or
mov
jle
js
adc
push
adc
les
loop
mov
je
sbb
jmp
inc
pop
xchg
aam
push
ljmp
xor
in
xchg
fisubl
stos
xorb
mov
xor
loop
rcrl
roll
daa
xchg
outsl
lcall
in
pmaddwd
xlat
and
dec
pop
mov
mov
xlat
test
push
jge
push
mov
js
cmp
popa
or
imul
dec
imul
inc
fwait
cmpsb
mov
test
ljmp
sbb
sub
outsl
sarl
jg
adc
inc
mov
cmp
sahf
sahf
dec
push
push
sub
das
or
push
and
xor
outsl
lds
cmp
xchg
xchg
ret
mov
pusha
int
sbb
inc
or
stc
mov
popa
divl
pop
mov
mov
test
mov
sbb
sbb
mov
nop
pop
stos
adc
aas
punpcklwd
push
test
or
std
imul
jns
pop
add
outsb
adc
out
test
pop
imul
lock
das
rcr
or
arpl
jge
loopne
lods
mov
mov
push
mov
mov
jmp
enter
mov
aad
pop
rcr
aaa
mov
lods
movsb
inc
out
jmp
push
mov
jp
enter
repnz
jae
mov
or
mov
mov
xchg
mov
cmp
call
bound
lods
pop
pop
arpl
mov
repnz
mov
and
xchg
addb
sbb
int
cltd
mov
jbe
fisubs
in
mov
mov
push
add
xlat
sub
push
out
movhps
jmp
jns
sti
icebp
cmp
lods
dec
add
mov
xor
mov
pushf
repz
imull
sbb
mov
fld1
push
lods
dec
or
jae
inc
loop
cli
addr16
cmp
push
inc
xor
lea
sbb
movsl
rorb
sub
mov
insl
add
nop
popf
jle
sub
lret
rorb
jecxz
scas
hlt
and
sub
push
mov
scas
pop
shll
cli
rcll
pop
add
pop
jge
ljmp
popa
stos
push
adc
cmove
jecxz
mov
sub
xorb
in
mov
or
or
sbb
push
jge
orl
sldt
mov
addr16
sbb
xchg
xor
dec
adc
mov
stos
imull
cmp
mov
insb
xor
inc
adc
mov
jnp
clc
notl
stos
iret
loopne
js
lahf
stc
sbb
les
xlat
lcall
pop
dec
add
popa
sbb
adc
and
int3
shr
test
jp,pt
mov
pop
icebp
ja
fnstenv
fsubr
mov
enter
fcompl
jg
mov
xor
pop
jb
adc
jnp
push
pop
xchg
loop
leave
gs
xorb
and
fildll
or
cli
pop
adc
rcrl
mov
ljmp
add
jnp
clc
xchg
pusha
cmpsb
sub
adc
hlt
outsl
scas
and
sti
adc
dec
mov
out
sbb
pop
outsb
push
addl
mov
call
cmp
inc
adc
idiv
sub
mov
in
outsb
xchg
rcll
notb
push
rorl
push
arpl
mov
mov
popf
lods
mov
iret
mov
xchg
mov
xor
inc
test
add
xchg
dec
add
cli
dec
insb
cmp
push
sbb
int3
cmc
insb
cmp
fcoml
outsl
ds
pop
fsubp
mov
or
test
arpl
insl
lock
adc
or
pop
arpl
popf
xchg
jmp
jo
je
sahf
mov
jp
shll
pop
pop
mov
ljmp
ljmp
jnp
orb
pop
inc
xor
lcall
lock
aas
xchg
sbb
or
xor
repnz
pusha
push
test
int3
mov
movsb
jb
insl
lods
fstp
sarb
push
out
jmp
in
mov
movsl
rolb
mov
jmp
xlat
and
mov
neg
lret
pop
pop
lret
js
pop
sahf
xor
sub
sbb
mov
jnp
push
push
shrw
add
pop
mov
xor
std
xor
adc
mov
inc
dec
mov
push
inc
cmp
stos
rolb
js
cmp
mov
mov
adcl
ja
jbe
mov
sub
inc
xchg
xchg
in
jo
or
jns
xor
jg
ss
pop
nop
cs
cmp
cmp
pushf
cld
arpl
pushf
scas
mov
shrl
and
xchg
cli
bound
loop
mov
cmpsl
clc
popa
lret
sahf
insl
or
pop
dec
ljmp
in
jecxz
jo
lret
icebp
outsl
push
jne
mov
jns
jl
lods
pop
inc
and
ret
popa
cltd
mov
cmp
fwait
les
adc
pop
push
fbld
pushf
jo
rcll
lock
call
pop
add
repz
adc
fisubs
les
addr16
scas
or
adc
cmpsb
xchg
jne
sbb
add
push
mov
popa
cmc
push
decl
jne
rorb
jge
jg
dec
hlt
jnp
cli
aaa
addr16
orb
lods
mov
cmp
mov
fsubrp
lds
pushf
cmpsl
mov
cmpsl
xor
push
dec
lock
inc
dec
sbb
add
xor
shll
push
and
je
cltd
pop
xlat
cli
push
jl
sbb
push
lret
fnsave
adc
enter
mov
cmp
pop
ffree
test
inc
mulb
xchg
push
movl
or
jne
leave
lea
xchg
sub
in
mov
js
pop
sahf
push
in
mov
cmp
fcompl
and
rolb
pop
xchg
test
inc
fdivr
sub
xchg
inc
cli
jns
mov
sub
dec
mov
push
mov
out
dec
je
je
mov
rorl
shlb
ss
add
adc
mov
push
out
scas
stc
xor
mov
lods
arpl
mull
inc
and
je
pop
les
pop
scas
dec
sbb
inc
jb
xchg
mov
shlb
dec
inc
xor
pop
mov
cltd
lret
xchg
xrelease
sub
iret
in
fwait
lret
js
ret
cs
pop
lahf
add
insl
inc
mov
add
outsl
pusha
mov
push
cmpsl
into
ds
jge
rcrl
dec
loope
je
aaa
jbe
aam
push
stc
add
addb
fisubrl
cli
mov
dec
scas
loop
inc
insb
int
mov
pop
mov
pusha
xor
insl
popf
jl
ljmp
fs
mov
pop
push
shrb
dec
ljmp
lds
and
push
jg
pop
aad
adc
sar
roll
inc
xchg
in
test
adc
mov
or
pop
fisttps
or
mov
cmp
jno
decl
mov
in
inc
mov
inc
mov
jo
add
mov
jp
andl
cmpl
imul
into
sub
sub
cs
insb
or
sub
xor
dec
fidivrs
xchg
or
jbe
mov
in
xchg
je
cmp
inc
add
push
xor
es
cmpsl
push
out
jne
jl
enter
movsb
sbb
andb
std
sub
xchg
ret
out
lret
out
pop
scas
sbb
push
mov
dec
dec
add
mov
lret
ffreep
test
loope
sub
mov
push
fistpl
jo
neg
push
js
ljmp
imul
add
test
ss
rol
loopne
adc
or
jbe
and
pop
or
scas
fisubs
mov
lret
aam
les
fwait
popf
xchg
arpl
sub
and
push
pushf
lds
js
add
repz
sub
jno
push
push
sub
ss
sbb
out
insl
les
jmp
mov
mov
ss
fstps
scas
mov
mov
test
dec
inc
fidivs
lds
mov
pop
jnp
js
push
sbbl
lods
js
add
fnstcw
xlat
iret
add
sub
mov
movsl
mov
xchg
and
test
in
jp
xchg
int
loope
out
nop
inc
pop
dec
inc
lds
mov
mov
leave
pop
cld
fs
jecxz
xor
dec
movsl
shl
adc
addr16
loop
mov
push
pop
sub
cmp
jg
inc
adc
insl
pop
les
sub
test
xchg
pop
iret
ficoms
jae
sahf
repnz
mov
mov
fsts
push
sbb
mov
or
adc
lret
mov
push
mov
iret
dec
push
inc
pop
add
aas
insb
fldl
js
shl
mov
push
sub
mov
cmp
in
xor
gs
movb
fwait
in
cmp
dec
mov
and
insl
ss
aaa
cs
xlat
cmc
sbb
inc
pusha
cmc
lods
rorl
stos
dec
xchg
sub
test
pop
fldl
jbe
jg
inc
outsb
jge
dec
push
pop
and
adc
push
lret
ret
test
in
fdiv
gs
mov
xlat
test
frndint
mov
scas
cmp
cli
rorb
cmp
repnz
sub
les
fsubrs
push
jp
ljmp
xor
dec
cwtl
cmp
adc
in
enter
inc
daa
mov
jns
push
lret
jmp
xchg
sbb
push
xor
and
sbb
popa
mov
mov
mov
ss
cmc
pop
mov
mov
mov
and
push
push
pusha
adc
je
dec
xchg
pop
push
push
jmp
adc
int
dec
and
test
rorb
mov
xchg
ret
hlt
cltd
repnz
and
and
stos
clc
lock
dec
cld
xor
cld
jmp
rorl
inc
adc
ljmp
add
dec
pop
jg
das
out
push
ret
fxch
lods
adc
das
and
cmpsl
ljmp
or
ficomps
insl
jl
inc
adc
xchg
sbb
icebp
fs
xchg
subl
mov
inc
jb
out
xor
out
pop
or
stos
mov
jnp
push
xor
arpl
aad
mov
fisubl
stos
or
adc
sti
jb
stos
loopne
jo
fidivs
cmpl
popa
mov
cltd
lcall
sbb
pop
mov
test
pop
mov
and
jp
aas
mov
mov
push
imul
dec
add
pusha
iret
loop
cmpsl
sub
out
sbb
subl
daa
adc
cwtl
sub
mov
dec
cmpsl
jmp
pop
mov
or
in
mov
shl
shll
dec
xor
rcll
add
es
cs
push
testl
outsl
and
movups
pop
stos
scas
sbb
inc
pop
xchg
add
sbb
or
adc
jne
sub
jo
mov
sbb
push
adc
and
pop
je
lods
lea
stc
stos
jo
sub
bound
jle
or
and
movsb
nop
sub
pop
shll
hlt
pop
cmp
repnz
inc
push
inc
inc
mov
push
mov
test
pop
imul
outsb
cwtl
cmp
push
int
andl
ret
cltd
mov
ja
xchg
fucom
loopne
sbb
xor
cmpsb
inc
cli
xor
sbb
inc
push
sti
scas
mov
lea
into
or
mov
pop
sbb
nop
scas
fsincos
mov
js
shll
jge
popf
push
mov
sbb
sub
xchg
rolb
aam
pop
push
or
mov
push
push
gs
iret
lods
aad
lahf
cltd
cmp
aam
fwait
and
mov
mov
jns
imul
ds
andb
gs
xchg
or
pop
fdivrl
sub
loopne
dec
adc
xchg
xchg
mov
fbld
mov
fdivrl
out
sti
lock
jle
in
sub
repz
cwtl
sbb
xchg
int
sub
addl
xor
pop
dec
pop
lock
pop
dec
iret
sub
out
cmp
dec
aas
call
pop
push
gs
pusha
push
push
cwtl
dec
or
cmpsb
sub
push
push
push
les
ss
jbe
adc
cwtl
pop
xchg
ss
out
cmp
mov
popf
cmpsb
pusha
sub
shll
enter
sbb
fisubs
js
int3
addb
repnz
gs
cli
xor
adc
mov
sti
xor
shr
pop
into
popf
mov
rorl
cmp
imul
das
enter
jle
jle
cmpl
mov
in
xchg
mov
push
in
leave
jle
push
enter
in
or
xchg
rol
test
mov
push
fs
fs
popf
cmovo
loope
adc
out
jg
add
mov
inc
cmp
inc
mov
mov
sahf
aaa
out
call
cmpsb
mov
xchg
mov
jns
and
lret
roll
fwait
in
outsl
jno
ja
out
mov
inc
push
fisubl
sub
xchg
mov
or
jp
xchg
mov
ret
mov
enter
mov
sub
enter
and
fs
dec
fstps
ss
and
add
aas
test
dec
ret
jb
push
cmpsl
inc
lea
out
pushf
out
test
push
mov
not
scas
jp
lock
lret
jne
mov
pop
mov
push
xchg
dec
jno
jge
into
fwait
push
ja
jp
loope
inc
pop
imul
sub
in
lcall
xorb
xchg
ret
sahf
inc
enter
xchg
add
mov
push
mov
mov
cmc
out
inc
mov
inc
push
push
je
ret
outsl
push
xor
ret
add
lds
or
nop
mov
dec
mov
dec
jo
push
cmpsl
daa
dec
std
adc
jno
cmp
dec
dec
sbb
popf
add
in
mov
stc
data16
cmp
or
jge
dec
sbb
mov
fdiv
cmp
inc
das
mov
push
cmpsl
xchg
dec
or
mov
mov
bound
mov
out
lds
fsubrs
scas
jl
insl
test
mov
xchg
filds
add
add
popf
xchg
lahf
fsub
subb
ljmp
and
cmp
cmp
arpl
dec
sti
push
inc
sub
mov
xchg
xchg
mov
xor
lret
leave
push
xor
dec
sahf
ljmp
sbb
mov
enter
xor
insb
ret
movsl
sbb
dec
ficomps
nop
sub
mov
xchg
mov
mov
mov
and
xor
movsb
out
lea
sbb
dec
notl
movsb
enter
xchg
xor
pop
add
rol
mov
addr16
ljmp
sub
mov
mov
fsubs
daa
fidivrs
cmp
rorb
dec
dec
loopne
inc
call
mov
mov
jns
hlt
outsl
aaa
push
xchg
inc
std
mov
in
sub
imul
inc
dec
mov
outsb
in
fcmovne
jne
push
or
rcr
popf
std
out
sbb
test
mov
push
test
leave
fucomip
mov
xor
add
mov
xor
xchg
addr16
les
ja
add
loopne
inc
and
adc
cs
repz
push
ljmp
jge
inc
or
andb
les
fisubl
nop
test
lret
pop
adc
shlb
pop
dec
or
pop
push
jbe
add
fstl
inc
pop
sub
adc
xchg
addr16
leave
push
cltd
cmpsl
mov
int
fdivl
sub
cld
jns
pushf
mov
mull
push
jmp
call
dec
outsl
xchg
mov
xchg
daa
jmp
out
sbb
iret
rcrl
pop
mov
adc
int
sub
jnp
mov
in
sub
jnp
inc
sub
pop
shrb
mov
sbb
cmpsb
xlat
push
bound
cwtl
jg
mov
scas
mov
stos
lret
dec
lret
mov
jno
inc
add
cmpsb
jmp
divb
pop
int
sub
inc
sbb
sub
cld
movsb
xchg
push
lea
dec
cmp
outsb
push
in
add
add
mov
dec
not
jle
ret
mov
lret
mov
mov
mov
dec
push
pop
fdiv
mov
jnp
and
out
lods
and
dec
mov
lret
aam
pop
or
lock
and
mov
add
out
jnp
loop
mov
lret
ret
rol
add
push
pop
lret
leave
jo
jae
lds
stos
sub
adc
ljmp
jle
lcall
scas
sub
pop
add
adc
xor
fwait
xchg
cli
addl
insb
sub
add
cli
aas
imul
push
jnp
mov
ror
mov
push
and
mov
mov
push
xchg
or
outsb
xchg
and
rclb
dec
jb
ficoml
cli
icebp
and
pop
call
mov
outsl
cs
sub
jmp
cmp
add
mov
lcall
fdivrp
mov
xchg
mov
xchg
dec
cs
bound
sub
inc
inc
lds
in
sbb
xchg
jmp
cli
movsb
cmpl
scas
jge
cmp
stos
out
sahf
lds
jno
mov
push
movsb
lcall
xor
adc
aaa
sub
add
lods
xor
dec
cmp
add
mov
mov
jnp
cmpl
xchg
test
lods
test
sbb
xchg
popa
cli
dec
lret
cwtl
or
int3
adc
dec
vmovdqu
fwait
lret
in
dec
imul
sbb
jo
loopne
cmp
jbe
in
aad
xchg
pop
push
andl
lock
daa
lds
mov
lods
test
mov
jb
cs
push
icebp
int3
aaa
cmc
sbb
mov
cltd
xchg
sbb
sbb
and
ja
mov
scas
mov
pop
mov
push
cs
loop
pop
xorl
jo
scas
icebp
jbe
cmp
shll
adcl
adc
lahf
xor
xchg
xchg
add
in
jle
jge
addb
mov
fnsave
inc
xor
enter
iret
inc
xchg
push
xlat
dec
and
outsl
dec
sbbb
ljmp
push
add
lds
stos
inc
fdivrl
sbb
std
pop
daa
and
inc
lret
data16
pop
and
add
fcomps
xchg
adc
xor
dec
add
mov
rep
mov
mov
push
mov
shlb
xlat
add
enter
int
aaa
sbb
shr
in
popf
pop
or
jecxz
fwait
in
xor
aam
adc
daa
xlat
icebp
mov
jl
fldenv
scas
inc
xchg
nop
mov
test
adc
in
fstl
or
inc
rcrb
shll
pop
sbb
cli
cltd
add
imul
rolb
xor
adc
mov
xor
faddl
push
pop
push
push
popf
test
push
in
leave
je
inc
mov
sbb
fidivs
mov
or
xchg
mov
mov
out
mov
rcrl
push
ds
pop
lea
cmp
push
pop
jbe
shll
and
mov
mov
xor
pop
lods
mov
sbb
test
sub
xchg
sub
fwait
inc
sub
mov
loopne
cmp
sub
xchg
pusha
lcall
test
sub
xchg
sub
and
or
lret
inc
adc
xor
js
jae
test
push
add
clc
cmp
dec
int
divb
adc
and
jbe
inc
cmp
cmp
mov
faddl
jo
mov
fdivrs
es
hlt
add
lods
xor
xchg
add
cltd
aam
add
cmc
aam
andb
dec
cld
adc
movl
cmp
push
repnz
add
xor
mov
push
cld
jno
flds
rorl
andl
or
jb
jl
push
or
sub
sti
dec
shrb
sbb
outsb
cmp
in
fsubrl
orb
stos
nop
cmpsl
clc
xor
dec
testl
sub
in
pop
jo
and
int3
sbb
mov
mov
cmp
xchg
mov
sub
jae
ret
and
push
inc
mov
dec
out
sub
jo
xor
repnz
test
push
dec
in
sbb
enter
ja
call
dec
mov
insb
shll
xchg
out
pop
jle
subl
dec
pop
pop
repz
aaa
or
mov
jbe
pop
enter
adc
call
or
flds
fiadds
xor
sahf
adc
sbb
dec
sbb
movsl
fistpll
sub
xchg
adc
cmp
pop
and
jo
mov
push
mov
mov
movl
sarl
insb
jl
xchg
adc
aas
adc
push
cmp
or
mov
push
pop
testb
aaa
or
iret
jae
scas
xchg
out
in
in
das
lcall
sbb
idivl
adc
nop
xor
stos
andl
in
pop
lea
inc
mov
xchg
popa
js
jae
sbb
ja
push
xlat
cmp
adc
inc
or
fmuls
xor
or
movsl
push
mov
pushf
std
adc
sti
into
inc
push
sub
cmp
sti
adc
cmpsl
ret
pushl
out
mov
push
push
dec
xor
adc
xor
pop
dec
xor
jecxz
jne
scas
adc
jnp
jg
out
mov
cmpsl
pop
data16
mov
cwtl
adc
dec
lods
mov
fildll
push
fiadds
das
adc
or
nop
rcll
push
dec
ret
pop
mov
mov
mov
insb
movsl
sbb
shrb
inc
leave
push
rcrl
sahf
dec
lds
xor
cmp
ficomps
and
xchg
mov
push
adc
pop
repz
push
cmp
sbb
test
notb
movsb
repz
shrb
or
shld
lcall
push
insl
adc
fsubs
pop
stos
mov
popf
pop
ret
pop
loop
dec
fistpll
adc
dec
mov
aaa
mov
xchg
pop
push
sub
xor
adc
dec
mov
lock
mov
imul
leave
mov
mov
out
int3
or
fcompl
daa
mov
test
das
mov
lds
cs
push
lahf
aas
xlat
das
insl
push
inc
mov
jne
sub
sub
cmpsl
jbe
mov
pop
mov
fsubrl
repz
pop
add
push
jmp
pushf
popa
insb
cmp
in
adc
out
push
xchg
push
faddl
push
mov
sbb
mov
xor
mov
mov
icebp
mov
repnz
cltd
pop
push
jmp
and
call
enter
popf
test
mov
dec
adc
push
inc
jp
shl
adc
inc
notb
push
xor
jnp
iret
add
sub
sbb
rclb
mov
jge
pop
lcall
ss
sti
movsb
pop
cmpsl
adc
idivl
mov
add
nop
inc
nop
dec
cmpsb
push
xchg
hlt
idivl
insl
push
int3
inc
pop
pop
inc
in
xchg
mov
adc
bound
sbb
and
push
cmp
jecxz
dec
push
scas
outsb
lahf
mov
stos
inc
jne
mov
mov
ja
cmp
mov
sbb
fisttps
orl
popf
bswap
stos
test
jne
push
push
xchg
dec
cld
push
or
pop
test
cli
or
push
ret
xorl
lcall
lods
ret
adc
fld
repz
push
add
mov
test
pusha
test
cmpsl
outsl
and
fisttpll
xchg
daa
pop
test
sub
sub
adc
add
lods
fistpll
push
sub
movsl
iret
subb
xchg
out
jns
test
pop
push
push
shr
push
jle
or
adc
and
out
mov
jns
cmp
xchg
inc
mov
ficompl
rcr
jg
jle
and
out
mov
add
push
inc
movsb
dec
jp
lahf
sub
stos
fisubrs
scas
aam
inc
mov
int
sbb
cmc
mov
jle
xchg
mov
and
push
test
push
jmp
icebp
mov
int
repz
fildll
push
mov
mov
int
sti
dec
inc
jg
sti
scas
inc
push
rcrl
sub
jmp
mov
mov
sbb
out
ljmp
xchg
inc
jno
mov
add
pusha
repnz
pop
inc
jns
scas
push
daa
lcall
push
add
fs
mov
inc
sub
pop
fdivs
int
lea
mov
jl
into
push
shrl
sbb
inc
inc
xchg
in
fnsave
js
repnz
xor
xlat
fistl
subb
fbld
out
sbb
pushf
mov
stos
ffreep
pop
jg
mov
aas
mov
dec
js
xlat
xchg
icebp
mov
js
or
add
out
je
clc
fmul
arpl
cmp
out
or
xor
add
shll
xchg
inc
clc
xor
out
cmp
outsl
jecxz
cs
call
testl
cmpsl
push
sbb
and
inc
out
cmpsb
dec
stc
and
jecxz
cmp
aam
addr16
aaa
and
test
jns
mov
push
cmpsl
out
loop
inc
adc
xchg
in
or
jl
stos
fs
roll
xchg
add
lret
or
outsb
or
shll
in
dec
nop
jb
pop
bound
mov
push
add
cs
lea
adc
stc
je
in
enter
lds
pusha
imul
ds
mov
xlat
mov
out
pop
pushf
inc
xchg
xor
sbb
mov
jb
or
mov
and
ja
sti
adc
mov
sub
push
dec
movsl
mov
push
and
fnsave
lret
aas
adc
add
and
cmp
sbb
lret
mov
adc
pop
cltd
aaa
daa
xor
dec
and
addr16
xchg
mov
jnp
loop
fsubrl
ret
add
fbstp
jb
daa
xor
xchg
add
mov
push
fnstsw
xor
xchg
add
or
mov
cmp
es
cli
pop
xchg
pop
xchg
stos
es
sub
js
mov
xchg
jns
push
cmp
jmp
insb
sbb
fnstenv
mov
jb
add
and
rolb
adc
out
sub
push
inc
inc
cmp
std
out
add
addr16
fs
aam
inc
addb
stos
mov
mov
ljmp
leave
jecxz
and
mov
movsl
lds
and
subb
ficoms
push
xchg
fsubrs
lods
mov
lds
call
lods
push
into
dec
xchg
inc
mov
push
xchg
testl
movsb
inc
repz
xchg
imul
arpl
nop
jge
sub
ljmp
outsl
out
jg
and
or
xchg
add
jno
dec
adc
push
xchg
scas
xor
dec
mov
push
scas
icebp
inc
jae
push
clc
fmuls
popf
lods
cli
cli
andb
cmp
and
push
push
mov
add
sub
jg
mov
push
pop
lcall
lcall
movsl
xchg
stc
mov
jno
adc
and
shll
aad
outsl
cmp
cmp
int
jmp
js
je
push
mov
out
std
pop
mov
loope
dec
mov
pop
cltd
mov
data16
aaa
sarb
adc
jg
sub
inc
arpl
mov
imul
mull
int
push
cltd
icebp
nop
push
or
xchg
addr16
ja
xor
outsl
scas
add
adc
out
and
push
out
fdivl
mov
rorl
cwtl
data16
cmp
addr16
adc
icebp
stc
lds
aaa
repz
movsb
xorb
clc
xchg
or
jbe
jo
insl
mov
std
sti
jmp
daa
andb
or
jno
cmc
dec
ss
mov
cmp
xchg
jg
movsb
fxch
loop
pusha
or
pop
fidivrl
das
cmc
lea
in
ret
mov
bound
call
inc
xor
sub
inc
mov
xchg
push
jns
imul
jae
xchg
aam
jo
std
arpl
jg
int3
aad
scas
dec
push
int
into
pop
test
mov
das
mov
cmp
pusha
jmp
and
xor
shr
xor
mov
shrb
adc
adc
mov
or
rcll
arpl
data16
dec
and
cmp
dec
notl
or
add
lods
mov
std
idivb
mov
adcl
movsl
xchg
outsb
cmp
fdiv
xor
out
xor
mov
lds
out
inc
push
xchg
lret
lret
xchg
jp
pop
test
out
incl
scas
sbb
loop
stos
and
dec
ds
out
popa
ret
jo
cmp
std
sub
movsb
push
cmp
lret
imul
cmp
std
popa
adc
leave
sti
mov
insl
inc
sarl
add
xchg
fwait
cld
test
xchg
adcb
out
loop
jmp
repnz
ds
inc
or
adc
out
pop
mov
fdivs
or
fdivrs
imul
inc
ret
test
enter
sub
cmp
iret
adc
fistpl
cmpsl
push
push
or
imul
add
stos
or
js
repnz
jecxz
test
add
movsl
int
orl
lods
pop
hlt
cmpl
mov
mov
inc
imul
sti
movsl
push
pmulhuw
mov
outsl
insb
arpl
sti
push
xor
sub
sbb
adc
sti
push
mov
sub
pusha
das
pusha
je
sbb
cltd
outsl
inc
cmp
xchg
and
cli
clc
xchg
pusha
mov
adc
bound
cltd
cmp
jo
mov
stos
mov
push
sub
and
adc
cmp
aam
mov
insb
push
xchg
sub
pop
stc
cwtl
iret
popa
jnp
lea
mov
mov
addb
cli
sbb
or
insb
push
xor
cmp
loopne
or
fisubrs
pop
loope
add
loop
dec
add
add
pop
dec
adc
sub
das
mov
pusha
xchg
lock
inc
pop
and
mov
pop
data16
mov
cmpsl
cltd
mov
mov
dec
cltd
xchg
test
adc
icebp
out
out
jne
mov
mov
pop
pop
into
sti
jno
dec
cld
jno
adc
movsl
orl
enter
ss
mov
dec
xchg
fmuls
mov
inc
xchg
movswl
add
jl
sbb
mov
dec
repnz
fadds
xchg
or
mov
mov
mov
sbb
sub
mov
cmpsl
js
pop
adc
sub
sub
xor
cmp
and
in
xor
cli
sub
in
xchg
cmc
rcr
fcomps
loop
int
xor
std
inc
or
cltd
and
pop
pop
es
cld
aad
inc
jecxz
mov
cltd
xchg
xchg
and
stos
sti
adc
repz
jae
xor
xchg
or
mov
push
inc
aas
iret
add
jg
pop
push
add
cli
sub
adc
mov
dec
sarb
xchg
dec
push
mov
jmp
mov
icebp
in
test
mov
sub
jl
ds
jnp
jno
mov
and
sub
lret
cmp
jno
push
mull
lahf
mov
inc
push
lret
stc
add
nop/reserved
add
bound
sub
mov
cmp
fidivs
icebp
add
adc
orb
jle
xchg
in
xor
cmc
or
dec
jno
out
out
fwait
inc
xor
push
inc
in
pop
fisubs
repnz
cmp
inc
and
pop
je
out
orl
fsubl
mov
test
pop
test
jns
es
push
mov
xor
push
push
incl
mov
shlb
testl
or
pushf
repz
loope
xor
pop
adc
add
sbb
cmc
sbb
outsl
addr16
pushf
dec
test
sbb
je
movsb
mov
adc
mov
cmpsb
fcomp
fstl
or
add
cmpsb
sbb
add
push
int3
or
cli
lret
xchg
out
sub
ret
mov
fcomip
ror
fldcw
dec
mov
mov
push
subl
ss
xchg
mov
iret
xor
or
and
cmc
mov
call
pop
ds
rclb
inc
fidivrs
iret
int3
dec
adc
pop
mov
push
lds
jge
roll
add
fwait
lods
xchg
ds
outsl
int
call
adc
sbb
push
pop
push
sahf
jge
loop
push
dec
aad
sbb
lods
shll
mov
icebp
pusha
leave
jne
scas
and
scas
pusha
in
stc
insl
xchg
pop
sub
jecxz
cmc
jne
insb
cmpsl
or
push
fwait
cmp
shrb
popa
jp
adc
testl
in
or
push
xor
mov
daa
mov
xchg
rcrb
cmp
cli
mov
in
push
pop
sbb
or
mov
mov
cltd
xchg
sbb
imul
aaa
pop
lods
dec
cwtl
jmp
and
sbb
xlat
hlt
negb
sbb
repz
cmpsb
outsl
mov
out
push
sbb
int3
stc
lret
jo
xor
jno
mov
mov
test
adc
inc
add
repnz
jmp
bound
pop
mov
dec
or
mov
testl
or
lds
insl
in
test
mov
xsaves
cmpsl
jle
jge
pop
inc
loopne
imul
arpl
inc
insl
push
add
sbb
pop
mov
dec
xchg
int
orb
out
lea
sahf
sbb
mov
xchg
fwait
mov
inc
jnp
loop
sub
lds
aas
cmp
lret
jge
inc
aad
mov
mulb
stos
ljmp
leave
add
rcrb
sub
xor
cs
faddp
fcompl
cmp
push
pop
jae
aas
aam
ret
test
mov
cmp
enter
ljmp
aas
mov
ljmp
fmul
repnz
jae
inc
scas
sbb
adc
jne
or
je
dec
ljmp
rcrl
jmp
pop
outsb
aaa
inc
xchg
xchg
jns
fdivrp
clc
xor
leave
lea
jnp
xchg
inc
push
pop
cli
xor
dec
insb
ret
sub
fsubrs
sbb
bound
daa
pop
push
bound
mov
jb
leave
fsts
add
rcll
fisttps
push
cmp
dec
jmp
and
cs
dec
xabort
jnp
leave
mov
popf
dec
sub
lods
fldenv
rcll
int3
lds
aad
cltd
test
gs
pop
in
scas
pop
bound
add
aad
lds
push
pop
cmc
add
xor
inc
stc
adc
sbb
fistpl
xlat
and
sub
cld
outsl
jle,pn
jl
xor
sbb
mov
add
jle
sbb
and
jmp
dec
insb
adc
popa
mov
inc
adc
jge
pop
cmpsl
sbb
pop
inc
add
cmpsl
cmp
add
mov
mov
fmul
and
jg
pop
ss
push
push
lcall
add
scas
fcomps
lods
inc
inc
icebp
sbb
repnz
scas
jp
xchg
cmp
xchg
cvtdq2ps
jp
fmull
inc
pop
add
int
loop
popa
ds
sbbl
arpl
adc
mov
jmp
outsl
out
mov
pop
cmp
pop
pushf
cld
mov
or
xchg
lds
sbb
imul
or
xchg
int3
xchg
sbb
or
jb
rclb
jge
or
or
subl
rcrb
inc
movsb
add
mov
cmp
pop
js
and
inc
daa
mov
and
filds
inc
jae
push
movsb
fwait
dec
mov
add
iret
pop
add
pop
mov
cmp
sbb
cmp
or
pop
ds
cld
pop
sbb
add
adc
inc
mov
insb
cmp
mov
mov
aas
jl
xor
je
repnz
lds
cltd
pop
mov
adc
inc
pushl
jmp
sbb
sbb
jne
out
popa
fcmovnbe
mov
push
mov
xchg
mov
dec
arpl
imul
imul
mov
imul
imul
mov
cmp
pop
in
cmp
in
pop
inc
sahf
inc
aas
fistps
test
xor
scas
lahf
cmp
clc
jp
jbe
mov
mov
movsl
cli
push
xchg
mov
xchg
rcrl
push
mov
test
out
jns
mov
xchg
ljmp
jl
int3
out
loop
push
sub
insb
stos
int3
movl
pop
add
push
adc
inc
and
and
lahf
mov
mov
mov
pop
into
pop
add
pop
fstps
outsb
vmwrite
xchg
sbb
call
out
sub
imul
nop
xor
and
sub
push
pop
xchg
pop
insl
and
test
adc
ljmp
lahf
xchg
or
sub
fldl
stos
rolb
jg
xor
jge
inc
dec
jne
rcr
out
das
inc
movsb
out
mov
fistl
outsl
xchg
adc
fadd
xor
mov
xlat
mov
inc
stos
icebp
sub
xor
ffreep
add
mov
int
imul
cmp
add
imul
push
adc
enter
xchg
jmp
xor
stos
cmp
push
pusha
xor
pop
mov
mov
cmpsl
data16
pop
cmpb
sbb
sbb
xor
int
arpl
call
sub
pop
push
jge
data16
and
mov
adc
mov
shlb
push
cmp
lret
fwait
in
arpl
mov
jecxz
xchg
inc
lret
mov
mov
xchg
popa
jl
push
in
lods
xor
xchg
in
into
dec
ds
ds
rol
pop
xor
push
gs
das
rorb
fwait
xor
movsb
push
xchg
push
lcall
add
loopnew
push
mov
and
add
stos
rorb
mov
push
outsb
repnz
rolb
cmpsb
jne
shll
shr
mov
stos
jne
imul
loop
xchg
sbb
pop
xor
cltd
xchg
fmuls
imulb
lock
in
mov
stos
stos
dec
pop
sub
push
into
fwait
clc
loopne
insl
fstps
fidivs
fstps
xor
mov
jmp
sub
add
cmp
stos
ljmp
adc
mov
sub
lea
mov
int
mov
call
and
xor
cltd
pop
fisubs
fisubs
fwait
andl
dec
sbb
fistl
sub
outsl
mov
jne
sbb
lret
and
decb
test
outsb
jb
cmp
xchg
sarb
mov
xchg
mov
and
dec
shll
cmp
inc
lods
sub
sbb
mov
sub
imul
inc
lea
enter
pop
loopne
out
int3
mov
int
gs
jo
or
sbb
aam
je
mov
inc
inc
push
fs
cmp
push
xchg
out
mov
lds
fnstsw
mov
stos
cmpsl
xor
frstor
and
mov
xor
inc
xor
xor
cmp
outsb
jnp
call
pop
inc
fstpt
repz
popf
cmp
xchg
lock
inc
loopne
push
mov
mov
jo
and
sub
shll
mov
movsl
or
xor
fwait
mov
push
icebp
dec
ret
mov
mov
jecxz
iret
fsubrl
xchg
dec
mov
testb
in
pushf
pop
jmp
or
jnp
xchg
pusha
pop
hlt
das
sbbb
arpl
push
adc
or
ret
or
subl
gs
mov
neg
shlb
adc
pop
mov
mov
imulb
adc
fdiv
js
leave
mov
movsl
loopne
mov
into
sub
sub
add
mov
jbe
rorl
xchg
or
andb
hlt
mov
sbb
fsubs
or
icebp
inc
in
leave
pop
lods
leave
mov
stos
mov
or
and
movsl
clc
inc
push
cmpsb
ffreep
adc
mov
into
push
pop
mov
dec
push
lret
ficompl
mov
xor
hlt
daa
dec
inc
lahf
and
mov
aas
sahf
pop
scas
fstp
jbe
sbb
sub
inc
mov
fdivs
pop
shrl
data16
push
mov
cltd
movq
inc
or
mov
inc
cmp
in
dec
inc
mov
mov
les
xchg
fcmovu
mov
sub
mov
cmp
pop
adc
mov
and
sub
mov
lock
xchg
dec
cmpsb
cs
inc
loopne
addr16
jecxz
int
xchg
mov
push
jmp
cli
test
lret
pop
add
comiss
popf
xchg
add
inc
mov
test
push
add
in
cmpsl
pusha
iret
out
andl
push
add
lret
xchg
fucomip
jge
sbb
loope
sbb
inc
dec
cmc
ss
xchg
repnz
roll
adc
mov
lret
mov
xor
jne
jne
repnz
xor
add
popf
in
xchg
repnz
nop
or
pop
mov
sti
fdivrs
add
xchg
subb
mov
imul
leave
xor
and
adc
mov
jecxz
inc
jnp
pop
lds
xchg
adc
dec
mov
or
xchg
dec
inc
add
push
push
mov
lret
repnz
push
roll
stc
ds
adc
add
mov
ja
or
inc
xor
mov
mov
dec
jge
sbb
shl
xor
jbe
pop
std
aam
jns
push
outsl
clc
repz
cmpsl
mov
call
in
mov
and
sub
icebp
fwait
adc
inc
push
or
xchg
xor
mov
add
es
clc
inc
scas
scas
inc
mov
add
sub
mov
cmp
jbe
mov
imul
out
cmp
pushf
push
lahf
xlat
ret
outsl
jle
outsl
imul
jl
dec
sub
pop
and
outsl
mov
loopne
loopne
cmpsb
cwtl
and
lds
lock
enter
push
test
imul
das
xchg
mov
cwtl
xchg
mov
dec
gs
pop
cmp
out
add
in
xchg
jns
lcall
mov
mov
outsb
es
scas
repnz
pop
int3
dec
or
je
scas
adc
jp
mov
divl
mov
pop
jae
sub
iret
lds
mov
jnp
je
lahf
push
iret
ret
dec
sub
arpl
jnp
inc
aaa
xor
test
xchg
xchg
inc
fdecstp
pop
stos
cmp
adc
sbb
sub
add
in
enter
cmovo
lock
in
enter
andl
mov
add
jl
ret
and
or
shr
xor
jno
dec
or
or
call
andl
outsb
popf
into
ret
jo
les
daa
pop
xchg
in
aaa
add
loope
mov
jmp
dec
fdivrs
fs
movsb
xor
pop
in
sbb
cli
push
leave
jae
sub
test
pop
in
pop
and
mov
mov
lock
xchg
sbbb
in
pusha
shl
ss
leave
mov
out
adc
fstpt
dec
enter
fsubr
dec
adc
fadds
test
fsubl
int
xchg
mov
aas
sub
leave
addr16
aas
or
jge
shl
dec
imul
outsb
xor
ja
lret
dec
stos
fisubs
cmc
jns
xchg
mov
xchg
fwait
mov
jae
jmp
dec
pop
jle
int
nop
hlt
shrb
mov
xchg
cmp
outsl
cmp
data16
push
out
adc
jo
repz
sarl
mov
push
mov
cmp
stos
adc
and
sub
jns
das
aad
imul
mov
sub
mov
rcrl
roll
insl
sbb
fsubrl
lds
cld
mov
sub
flds
add
fcomps
repnz
mov
dec
push
outsl
jns
cmp
adc
and
nop
stos
push
jecxz
dec
lods
fs
iret
shl
loope
and
popa
pop
insb
mov
adc
shll
pop
jg
lcall
mov
scas
jb
imul
insb
imull
lret
adc
jmp
sub
xchg
ja
or
cmpsl
int3
jmp
mov
sub
sbb
pusha
sti
pushf
xchg
push
xchg
pop
inc
les
mov
adc
fdivp
xchg
outsl
imul
xchg
adc
push
scas
jmp
js
pop
sub
dec
mov
ret
aam
enter
adc
fstpt
fisubs
pushf
cmp
jno
mov
pop
aaa
mov
push
fstpl
mov
shl
es
cmp
push
ret
scas
rcrb
xor
and
adc
pop
sub
or
ljmp
in
or
jae
mov
lock
divb
stos
jg
cmpsl
xchg
mov
xor
sub
adc
les
out
jnp
popa
mulb
jnp
sbb
add
xchg
test
loop
leave
in
jo
xchg
test
mov
mov
jo
and
sbb
stos
mov
ds
or
mov
or
shll
sbb
dec
cltd
mov
xor
and
mov
shrl
and
xchg
mov
sti
clc
adc
fldenv
insb
or
jp
push
add
inc
outsl
shl
xor
lods
in
ds
cmpsl
shll
push
xchg
mov
sub
dec
adc
jnp
jg
or
gs
insb
icebp
std
bound
adc
add
arpl
xor
mov
inc
aas
cli
pop
shll
mov
xchg
xchg
scas
imul
mov
ret
stos
cmc
sbb
pop
fsub
sbb
cli
hlt
add
in
jp
cmp
sarl
sti
inc
mov
gs
shll
aam
lds
pushf
push
repnz
push
insb
add
inc
rorl
xchg
lahf
insb
scas
sub
arpl
pop
dec
loope
push
adc
xor
gs
or
test
cmpsl
push
jns
mov
lods
ja
incb
add
push
pop
insb
mov
add
adc
xchg
pop
aas
lret
in
mov
popa
dec
cltd
mov
faddl
inc
movsb
sub
jle
xor
adc
ret
mov
sub
repz
out
jae
mov
stos
dec
push
push
mov
aam
mov
mov
ret
and
jg
lret
dec
mov
or
mov
push
dec
idiv
push
add
orl
pop
mov
cmc
sbb
popa
pushf
fs
jnp
leave
loop
sbb
in
adc
movsl
sub
xor
dec
testb
inc
or
push
call
addb
inc
aas
push
popa
enter
orl
int
pop
movsl
inc
fwait
xor
les
leave
cmp
jle
mov
xchg
push
push
xor
lods
xchg
loope
imul
mov
mov
mov
aaa
ret
xchg
rolb
adc
jae
inc
fwait
xchg
dec
lcallw
pop
mov
inc
pop
cmp
cmp
out
popf
push
lea
bound
shll
ret
jb
xlat
aad
mov
and
xchg
jmp
jmp
dec
cli
push
push
jmp
in
sub
repnz
jns
aam
adc
adc
outsb
add
cmp
push
pop
ds
ljmp
ret
mov
mov
mov
push
pusha
jne
or
dec
pop
out
jbe
leave
xor
pop
fsts
and
xchg
clc
sub
adc
and
test
sub
rcrb
in
call
clc
int
mov
inc
inc
repnz
mov
xchg
jge
dec
sbb
add
loope
inc
and
jns
shrb
inc
in
pop
mulb
fs
lret
jmp
cmp
lds
or
inc
dec
jns
jle
cltd
imul
outsl
es
jns
xchg
cli
lret
mov
mov
push
lret
adc
mov
cltd
pop
icebp
push
adc
fwait
not
sbb
inc
xchg
mov
xor
ret
out
inc
push
mov
test
test
push
adc
xchg
adc
add
xchg
xor
repnz
das
or
test
cmpsb
test
arpl
sbb
repz
mov
push
test
dec
adc
and
push
add
fstpt
lods
fisubrs
mov
idivl
xlat
nop
or
mov
dec
pop
les
enter
xchg
out
and
xchg
das
sti
jo
das
cmpsl
popf
mov
stc
and
cmp
clc
imul
sbb
movlps
outsb
shrl
enter
and
xchg
adc
dec
cmpsb
mov
sub
cmp
cmpsb
pop
leave
lea
sbb
xchg
jl
mov
cld
lds
push
inc
xlat
pop
les
sbb
movsl
inc
push
xor
stc
xchg
cmpsb
dec
push
xchg
popa
pop
adc
jno
xor
jbe
cmp
iret
push
imul
push
cmp
inc
jmp
fwait
cmpsb
mov
xlat
jl
call
arpl
push
pop
adc
dec
push
mov
cs
push
and
nop
stc
rclb
stos
pop
fistpl
int
mov
movsl
mov
push
shlb
mov
stos
sar
hlt
mov
and
imul
movsl
mov
iret
sbb
shll
out
inc
adc
dec
pop
lahf
lock
int3
je
jle
daa
sub
aad
mov
mov
sarl
out
sti
pop
mov
pop
int3
adc
out
fs
mov
icebp
stc
dec
or
cs
xor
and
ss
add
cwtl
xor
jmp
xchg
or
fadds
or
lahf
ret
sub
cmp
int
jecxz
xchg
movsl
bound
lahf
outsl
shl
loopne
das
pop
xchg
je
cmp
add
out
sahf
push
addr16
pop
xchg
loopne
int3
push
dec
xor
pop
or
add
in
rol
lods
jae
adc
leave
mov
int3
out
adc
mov
jo
and
aas
inc
adc
xor
int
push
scas
scas
jle
fnstenv
or
loop
mov
cmc
jp
add
adc
xchg
inc
mov
add
push
sbb
cli
sahf
jl
cmp
push
and
or
pop
scas
ss
mov
outsl
adc
decl
filds
leave
push
stos
jnp
adc
add
or
cltd
pop
inc
out
xor
sub
mov
cmp
adc
daa
mov
push
repz
cmp
divb
outsb
jo
sub
sbb
xorb
enter
adc
xor
scas
loope
mov
movsb
in
movsl
test
mov
pop
jmp
je
in
sbb
push
ja
push
jg
xchg
stc
idivb
out
xor
dec
sub
inc
lods
and
xor
bnd
inc
add
xchg
xor
pop
push
sub
jae
lret
pop
movsb
loope
testb
fiaddl
dec
sti
cmp
ret
pop
adc
jne
iret
push
into
add
repz
push
stc
subl
mov
inc
or
mov
dec
xor
sub
bnd
scas
test
outsl
movsl
aas
rcrl
fnstenv
pop
into
xor
cld
imul
jle
cwtl
pop
dec
dec
in
inc
mov
iret
fistps
das
jle
jbe
lods
pop
or
cmp
push
ljmp
mov
sub
xor
fadd
adc
adc
dec
jno
imul
stc
scas
fcomip
std
movsl
loopne
int3
or
shrb
dec
mov
jl
adc
lock
fldl2e
and
dec
fidivrl
mov
and
fisttpl
push
push
xor
push
dec
cmp
jecxz
mov
loop
sbbb
lret
sbb
cmp
mov
es
pop
es
jne
xchg
add
outsl
inc
sub
mov
out
push
repz
adc
jp
push
push
lret
cs
sbb
inc
stos
shlb
inc
fistps
fdivs
lahf
or
mov
outsb
add
fs
shll
pop
mov
sar
push
test
int3
jno
pop
jl
mov
lcall
cmp
cmp
jl
lcall
loop
aaa
enter
pop
jmp
sbb
inc
or
mov
push
inc
add
out
add
add
or
leave
pop
push
rcrb
add
dec
mov
mov
addr16
call
ljmp
enter
xchg
jge
inc
sub
add
inc
sub
loopne
add
xchg
fimuls
dec
dec
sbb
cld
hlt
stc
ja
push
sbb
dec
jbe
inc
aaa
and
cmp
mov
test
movsl
mov
lret
mov
in
pop
out
scas
in
popa
aad
mov
dec
dec
stos
xor
push
push
inc
divl
dec
dec
xchg
andl
and
push
pop
test
bnd
dec
xlat
std
out
mov
xor
mov
movsl
inc
mov
fldenv
dec
sub
rclb
test
mov
test
fstpl
push
cmp
push
je
pushf
add
xor
dec
sub
push
js
in
push
fldenv
test
and
jle
xchg
sub
out
or
cltd
je
inc
js
outsb
cs
decl
xor
arpl
mov
mov
int
leave
pop
dec
mov
push
iret
adc
add
xchg
fdivr
loopne
pop
scas
gs
ljmp
cmpb
mov
and
and
loop
dec
xchg
and
inc
jno
xchg
mov
mov
or
popa
jbe
or
sub
cld
pop
js
push
lret
pop
sub
ret
mov
cltd
xchg
aaa
or
push
inc
adc
xchg
sbb
dec
sub
stc
test
mov
ss
sub
icebp
in
add
xorl
xlat
adc
push
pop
fcoml
lods
mov
leave
sub
rcr
adc
lods
pop
adc
stc
xchg
call
cmc
cmp
adc
inc
pop
fsub
pop
subb
inc
sbb
add
fsubrl
mov
jmp
cwtl
xor
test
movsl
mov
sub
icebp
stos
mov
cmp
aaa
scas
outsb
push
test
jnp
or
mov
mov
push
or
push
pushf
or
adc
xchg
mov
inc
shlb
sub
or
addr16
lea
clc
dec
and
push
push
pop
cs
insb
insl
mov
pop
bound
loope
and
pop
jecxz
mov
cmp
mov
mov
xchg
es
xor
cltd
popf
out
ss
movsb
dec
mov
dec
bnd
clc
loope
mov
movsl
cmp
rcr
mov
add
jno
xlat
gs
loop
cmp
push
leave
jecxz
sar
cld
cmp
das
xchg
pop
repz
pop
cltd
mul
ret
pop
xchg
adc
mov
es
dec
push
sbbb
imul
movsl
shl
cmpsb
aaa
and
pop
xor
or
pop
rcrl
movsl
push
data16
cmp
jae
std
std
mov
push
test
dec
daa
cli
leave
push
mov
in
mov
fisubs
jnp
lods
stos
mov
insl
jmp
rcr
lret
call
inc
es
daa
dec
sets
pop
out
popa
cmpsb
test
sbb
and
jo
je
push
ret
mov
imul
xor
pop
or
cmc
arpl
test
jbe
loope,pn
cld
mov
ds
adc
cmp
push
je
ds
mov
in
icebp
push
fmull
rol
adc
mov
xor
sbb
adc
pop
outsl
insb
scas
dec
xor
das
rcl
inc
rcrl
push
jb
sahf
push
add
int
jp
push
xlat
adc
stos
cmpsb
pushf
cwtl
mov
pop
cld
pushf
mov
sbb
pop
inc
jae
aad
and
loopne
leave
jb
js
int
mov
and
outsl
xor
cmc
jnp
fs
pop
jns
sbb
sbb
or
jle
jge
ss
ret
pushf
outsb
lods
data16
icebp
mov
mov
mov
test
mov
insl
jae
rcrb
mov
jbe
mov
mov
dec
dec
jnp
and
jg
mov
xchg
xchg
sub
out
int3
jne
test
fmuls
cmc
mov
sbb
add
adc
loop
inc
xor
ss
mov
push
test
cld
ja
inc
adc
xor
inc
mov
es
xorl
repz
imul
jae
fimull
ljmp
or
xor
stos
fs
scas
adcb
pop
out
push
shlb
dec
xchg
dec
pop
lods
pop
test
cmpsb
pushf
push
mov
adc
iret
sub
jno
xchg
out
lea
leave
insb
jmp
push
call
sub
adc
inc
xchg
pop
ficoms
pop
jo
and
leave
xchg
pop
or
jle
xchg
mov
mov
push
and
mov
rclb
sbb
jecxz
sahf
adc
into
pusha
push
popa
sub
ret
sub
dec
into
dec
int3
data16
daa
imul
addr16
ret
sbb
dec
dec
inc
xor
sub
jle
jns
testb
scas
fstl
sbb
fs
xchg
mov
mov
xchg
sub
sub
ret
outsl
inc
test
enter
add
loope
into
add
mov
clc
jne
mov
jb
insl
addr16
test
pop
in
std
pop
fstps
sbb
xchg
add
repz
xchg
test
test
dec
push
into
mov
or
arpl
xchg
fidivrl
add
jmp
push
push
inc
leave
rolb
sub
outsb
sbb
je
repnz
jns
sarb
or
in
imul
push
xchg
push
xor
mov
sahf
hlt
decl
pop
add
or
adc
and
lret
push
add
inc
in
mov
mulb
push
iret
push
les
jns
xor
cmp
ffree
sbb
add
call
sub
cmp
mov
jnp
out
xchg
fisttpll
dec
push
mov
mov
xor
fidivs
loop
inc
dec
imul
in
scas
int3
inc
add
fwait
adc
or
jno
fcoml
jb
shlb
add
pusha
clc
loopne
leave
fldt
in
call
mov
pop
sbbl
xor
movsl
imul
stc
sbb
pop
aas
mov
fldl
sub
fildl
fsts
and
cmp
aam
sub
lret
mov
lret
pop
sub
push
fcompl
pop
lea
mov
xchg
sbb
and
pop
sbb
sahf
mov
push
in
cmpsb
or
scas
nop
xor
and
xchg
and
in
in
mov
xchg
pop
pop
call
mov
mov
and
out
fiadds
and
mov
mul
jae
sub
xor
adc
adc
lock
addb
fs
cmp
lss
and
std
sarl
or
sbb
aam
fldl
or
ss
popl
add
enter
inc
aad
sub
out
pushf
incb
fcompl
fwait
jbe
scas
or
clc
scas
insl
scas
mov
cmp
mov
fimuls
lds
mov
fidivrs
mov
pop
out
xchg
sbb
scas
push
or
into
xchg
lds
xchg
mov
mov
cmpb
cwtl
into
sbb
std
lcall
or
xor
and
addr16
insb
xor
inc
pop
mov
popf
filds
pop
inc
std
ficoms
ljmp
mov
stos
cmp
imul
mov
cld
hlt
pop
push
sbb
cmp
lods
push
lods
std
in
int
pop
fwait
xchg
push
mov
jb
and
sub
push
xor
add
and
addr16
or
rcr
push
sub
ds
or
aaa
or
popf
movsl
cmp
js
out
pusha
adc
mov
adc
and
cmp
add
mov
mull
daa
xchg
rcr
outsl
roll
or
ss
mov
or
test
push
scas
mov
mov
jl
daa
imul
inc
or
dec
xchg
arpl
xchg
mov
lret
pop
sub
xchg
cmp
test
dec
xor
jle
add
sub
cmpsl
add
push
insl
sbb
fs
mov
ficoms
cmp
jmp
jae
ficompl
add
sbb
sub
mov
pop
sahf
mov
or
cmp
leave
into
jmp
lahf
and
imul
lods
repz
test
cmp
cld
jge
jne
je
mov
int3
mov
push
hlt
jg
xchg
mov
add
mov
das
int3
rolb
movb
and
mov
and
ret
imul
ljmp
mov
out
lock
sub
gs
push
inc
pop
add
inc
mov
test
xor
bswap
jo
scas
mov
int3
cwtl
or
loopne
push
mov
cmpsl
add
sub
pop
sahf
sub
stos
test
iret
enter
sub
mov
pop
cmp
hlt
xor
jns
aaa
inc
lods
call
add
cmp
scas
jp
mov
test
adc
clc
add
sub
into
fimull
xchg
adc
sbb
lds
shrl
hlt
repz
xchg
inc
mulb
ss
jl
nop
cmp
lods
mov
xchg
sahf
mov
mov
mov
gs
add
xor
inc
les
pop
adc
cwtl
aaa
adc
add
or
sbb
fwait
clc
cs
test
loop
jae
inc
into
test
shrl
shlb
jle
loopne
cmc
push
idiv
push
push
das
sbb
dec
xchg
inc
test
loopne
aaa
xlat
adc
scas
jo
movsl
adc
or
fiaddl
test
insb
jmp
imul
xor
mov
in
jecxz
mov
and
adc
jnp
pop
test
inc
mov
and
fimull
or
lret
test
insb
in
nop
mov
and
mov
sub
cmp
aas
mov
movsb
sub
jbe
jp
jecxz
orb
xchg
push
mov
mov
in
mov
test
sbb
lret
icebp
data16
rorb
ja
inc
mov
lock
xchg
mov
xor
xor
ljmp
dec
and
jmp
adc
es
sbb
mov
loope
loopne
or
scas
push
inc
adc
jmp
enter
sub
inc
xchg
cmpsl
xor
out
push
loope
cmpsb
pop
push
call
in
sub
orl
pop
or
jnp
popl
jl
jno
stos
and
push
add
sub
mov
push
fwait
repz
sub
gs
push
jmp
xor
movsb
aaa
nop
cmpsb
and
cmp
inc
lds
or
out
add
in
int
and
or
mov
sbb
data16
or
inc
les
lods
cld
fnstsw
xor
jno
and
add
mov
cmc
jecxz
arpl
imul
add
int
mov
stos
dec
pop
stc
out
aaa
shll
out
enter
rcll
xor
xlat
push
adc
sub
shll
pop
mov
jmp
pop
insb
push
push
addr16
cmc
mov
push
or
mov
in
popa
fwait
xchg
add
aam
sbb
xlat
je
sbb
mov
adc
ja
outsb
out
scas
popa
mov
std
das
je
sbb
mov
sub
or
and
shlb
les
test
cmc
mov
dec
cwtl
test
bound
inc
pop
imul
stos
insl
jbe
sbb
and
push
mov
jecxz
in
adc
add
xchg
sbb
cs
mov
pop
dec
mov
mov
stos
pusha
inc
jle
xlat
loope
and
outsb
mov
xor
roll
mov
push
cmp
in
cmp
mov
test
xchg
sub
sbb
sub
push
push
int3
les
adc
mov
repz
jmp
leave
bound
roll
cmp
jp
xchg
out
addr16
mov
iret
lods
fcmovnbe
or
movsl
fcomi
movsl
not
mov
jne,pt
sbb
fisubrs
loop
out
or
cli
push
call
mov
lret
aam
decb
xor
cld
pop
fildll
outsb
inc
cmc
pop
push
movsb
pop
sub
fsubrs
or
mov
jae
inc
aaa
pop
daa
push
sbb
dec
push
mov
mov
and
jno
mov
dec
cmp
inc
mov
inc
lahf
insb
jge
jno
dec
mov
lahf
and
sbb
fsubrp
cli
fldl
jnp
inc
int3
inc
rcrl
sub
shrb
ret
pop
adc
pop
push
jecxz
mov
mov
sbb
loop
cld
cld
xor
inc
sub
sub
enter
lret
push
es
data16
add
xor
and
outsb
ret
or
jmp
in
jo
mov
xchg
divl
fcoms
dec
lret
mov
loope
repz
pusha
ret
jge
mov
call
adc
sbb
and
leave
fistpll
and
adc
gs
cmp
xchg
jge
push
pop
js
cmpsl
clc
cwtl
mov
cmp
cs
inc
push
test
mov
add
pop
in
mov
add
loopne
adc
pusha
out
jle
dec
mov
push
jo
test
and
xorb
mov
dec
xor
mov
cmpsb
inc
mov
testl
sub
push
in
push
sub
mov
mov
push
push
sbb
sbb
sbb
les
push
mov
fwait
push
cwtl
rolb
and
cmp
mov
outsl
pop
test
adc
xchg
and
pop
movsl
adc
and
cs
aaa
ret
je
push
in
and
sub
pop
fsqrt
and
push
inc
cwtl
js
push
faddl
jg
cmpsl
mov
adc
stc
adc
aam
mov
dec
std
pusha
xchg
push
xor
xchg
add
aas
insl
stc
gs
or
xchg
icebp
std
xchg
pop
je
push
pop
repz
push
pop
pusha
aaa
in
cld
dec
sti
out
and
ret
nop
cmp
cmc
cmp
sub
loope
clc
add
lods
js
popa
fidivs
mov
cltd
xor
inc
insb
int3
push
out
sahf
jno
adc
cmp
xchg
sbb
stos
ss
jno
adc
sbb
incb
out
mov
sti
lock
mov
and
adc
lret
iret
dec
mov
or
nop
dec
jmp
xlat
test
jecxz
xorb
jns
cmp
sarl
pop
or
inc
push
sub
shl
or
rcll
pop
stos
dec
enter
or
adc
mov
aas
fsubl
flds
sub
add
xor
dec
shlb
jmp
push
mov
xchg
xor
test
xchg
mov
xor
subl
xor
lret
xchg
push
repz
es
movsb
jle
lock
fsubrs
loopne
mov
jl
js
jecxz
mov
push
outsb
sbb
rolb
lea
xor
jle
stc
xchg
jecxz
and
pop
dec
cwtl
dec
aam
ror
pop
lds
rcrl
xchg
push
cwtl
in
pushf
jae
out
cmp
jle
movsb
xchg
cmp
mov
sbb
mov
out
xor
mov
ljmp
xor
sub
in
mov
cld
xchg
mov
jae
pop
and
lock
leave
pop
in
mov
scas
add
mov
jp
xor
outsb
ja
mov
cmp
mov
es
cmpsb
ffreep
sbb
int
mov
aam
inc
cmp
sub
sbb
mov
dec
jmp
sub
push
push
fmuls
or
mov
gs
inc
mov
pop
inc
jmp
jne
mov
adc
xchg
inc
add
clc
dec
mov
sarb
xlat
mov
mov
cltd
add
outsl
cwtl
cmpb
sub
or
aaa
in
cmp
adc
mulb
sub
imul
or
dec
shl
pop
iret
mov
xchg
loopne
xchg
inc
mov
xor
lock
data16
sub
lock
scas
pop
stc
gs
mov
shll
rcrb
fs
xor
aas
notl
fildl
jp
lock
sbb
jmp
cld
xor
push
cmpl
pushf
out
and
push
cwtl
shl
bound
mov
fldt
scas
mov
cld
stos
jne
mov
pusha
push
jo
cmovo
dec
push
mov
lds
outsb
shrl
mov
out
pop
arpl
jge
mov
mov
shrl
cmpsl
mov
popf
pop
loope
popa
mov
fldt
movsb
mov
arpl
rolb
inc
inc
push
test
jecxz
test
lea
mov
es
mov
mov
add
mov
pop
and
and
and
dec
out
out
xchg
xor
call
pop
sbb
lds
and
push
jo
loop
fidivrl
nop
popf
mov
lcall
aaa
data16
cmc
cmp
cwtl
xchg
imul
mov
adc
mov
out
int
jb
sub
mov
lret
cli
mov
cmp
sbb
out
das
xlat
inc
fs
adc
jge
sar
dec
mov
mov
fdivr
sub
xor
dec
insb
inc
in
andb
lret
cld
popf
outsl
lcall
cmc
push
jne
xor
movsl
jbe
push
lret
sub
test
pop
insl
xor
xchg
jnp
daa
movsb
ds
xchg
sbb
cmp
fmuls
fs
xchg
int3
in
push
ja
fimuls
test
mov
imul
pop
bound
lcall
les
jp
shr
sarl
lock
dec
jg
into
lods
mov
sbb
in
jne
adc
xchg
cwtl
ljmp
ret
mov
add
into
fdivrl
jo
popa
jo
add
pop
cmp
ror
fisubrs
pop
sub
pop
push
outsb
pop
pop
es
loope
icebp
cld
add
and
mov
inc
sbb
mov
xor
fwait
sbb
jb
js
sahf
jb
test
jbe
cli
push
adc
aam
mov
and
fsts
js
xor
sbb
inc
ds
inc
cld
sub
imull
xor
push
call
jo
test
mov
mov
adc
cld
into
inc
sar
rorb
inc
mov
shlb
cmp
pusha
sub
in
jae
outsb
or
dec
mov
adc
out
sbb
push
xor
xchg
jecxz
out
fs
xchg
out
data16
mov
cmp
add
int3
iret
mov
sub
out
rorb
add
movsb
add
shl
je
js
mov
mov
push
xor
xor
fisttps
call
or
mov
cld
in
dec
or
mov
out
jl
cmp
add
jbe
pop
xor
jle
in
cmp
jne
or
js
shlb
mov
sbb
subb
in
mov
xor
cmp
and
and
adc
push
mulb
nop
dec
popa
push
xchg
pop
int
fsqrt
mov
cmpsb
or
jae
je
data16
sub
add
in
pop
pop
pop
inc
xchg
les
in
js
lret
mov
mov
scas
ss
push
stc
push
sbb
outsb
andl
jbe
ja
xor
jg
inc
pop
aas
jmp
fstpt
data16
and
mov
xchg
movsb
rcrb
call
lret
mov
xor
cmpsl
lods
and
lret
push
jecxz
mov
adc
mov
pusha
mov
sub
mov
loop
mov
mov
out
mov
sub
imul
dec
xchg
push
int
mov
mov
test
test
push
lret
xchg
mov
add
or
dec
adc
pop
add
sbb
inc
dec
stc
outsl
inc
negl
add
dec
out
pop
mov
pushf
sarl
jl
leave
cmc
test
test
push
xchg
sbb
into
or
bound
sub
dec
sahf
jbe
xchg
loope
push
out
hlt
in
adc
push
xchg
inc
mov
push
push
pop
jg
cli
pusha
rclb
in
pop
xor
xor
ja
in
add
rcrl
sbb
mov
fs
sbb
in
das
movsb
out
xor
cld
or
push
inc
filds
jp
jns
push
jl
jne
push
imul
sbb
mov
test
xor
inc
inc
lret
icebp
cli
out
dec
fsub
lahf
dec
pop
dec
add
scas
lcall
pop
or
ljmp
jnp
test
inc
sub
mov
or
sbb
mov
adc
adcb
insl
or
cmp
aam
ficomps
mov
push
sub
jp
mov
inc
in
adc
inc
dec
data16
test
mov
mov
out
imul
scas
push
rcl
or
popa
xchg
pop
xor
ret
xchg
mov
inc
dec
outsl
sub
mov
or
xor
jnp
rorl
test
lret
sbb
jnp,pn
or
mov
jecxz
data16
imul
pop
iret
arpl
inc
cmp
mov
mov
mov
xchg
repz
add
imul
fwait
xorb
mov
xchg
fsubp
movsl
push
icebp
jl
lds
xchg
jb
fwait
outsl
in
ja
lods
out
push
outsl
and
test
jg
jge
movsb
or
push
xor
fisttpll
dec
sbb
pop
stos
les
flds
xchg
aas
mov
cmp
arpl
in
jbe
imul
jl
fwait
push
mov
jecxz
and
xlat
cmp
ftst
addl
shrl
cmp
mov
inc
inc
std
into
out
pop
scas
cmpsl
adc
push
test
lret
cltd
cmp
scas
xor
sbb
adc
imul
out
loop
cs
scas
outsl
in
xchg
ja
cmp
outsl
push
sti
cs
loope
out
push
mov
repnz
adc
sbb
stc
xlat
sbb
imul
sub
mov
sub
pop
cs
cld
mov
dec
call
std
ret
pop
imulb
mov
ljmp
mov
sub
mov
push
or
arpl
xchg
fwait
jle
movsb
dec
clc
sub
mov
adc
lds
int3
mov
flds
divb
pusha
vmread
popf
aas
aaa
mov
push
ret
adc
in
pop
test
daa
jo
and
iret
scas
or
adc
pop
sbb
aam
cld
mov
shll
adc
mov
jae
imul
ud2
pushl
test
outsb
xchg
xchg
cmpb
je
frstor
sbb
push
mov
sahf
and
inc
push
loopne
or
lods
scas
popa
xchg
lea
pop
jae
lock
cmp
in
in
inc
mov
icebp
mov
pmovmskb
pop
add
aas
mov
mov
int
mov
bound
fstp
fists
fsubp
jg
pop
pop
test
jmp
cmp
jns
orb
jl
mov
mov
push
add
call
popf
pop
inc
sbb
add
inc
push
aad
fsubrs
es
cmpsb
ret
scas
ret
fwait
das
pop
adc
cld
data16
int
out
in
pop
push
mov
movsl
shr
test
mov
repz
and
dec
nop
adc
sub
dec
mov
push
cmp
ja
push
xchg
jg
shrl
out
in
or
or
popf
xchg
mov
out
mov
add
mov
or
push
jg
notl
sbb
pusha
out
addr16
outsb
mov
jo
mov
mov
pop
mov
iret
mov
sbb
adcl
push
les
push
insl
fwait
or
mov
dec
and
das
xchg
lret
pop
out
pop
daa
mov
iret
pop
lds
mov
aaa
inc
in
inc
lods
jne
and
jge
inc
adc
or
mov
cmp
add
out
sti
dec
stc
daa
push
mov
cmp
pop
add
adc
fnstsw
xchg
scas
push
popf
int
mov
ret
lods
std
js
xor
test
sub
push
push
fstpt
pop
js
sub
les
mov
lret
repnz
cmp
inc
cmc
sub
lock
mov
sahf
mov
fdivrs
add
dec
int3
aas
inc
je
mov
popa
sbb
or
jbe
push
lods
fmull
xchg
and
mov
lret
hlt
xchg
cmpsb
push
jb
add
push
cli
cwtl
lock
push
inc
out
mov
adc
fwait
pop
and
push
mov
aaa
loopne
ds
mov
mov
xchg
adc
push
xor
lods
dec
fisttps
pop
lods
push
adc
ret
aaa
adc
addr16
dec
cwtl
repnz
sub
mov
stos
xor
ret
shll
push
and
or
ljmp
insl
jno
mov
ret
xor
repnz
sahf
or
pop
cmp
insl
sbbl
and
mov
dec
pop
movsl
or
mov
stos
clc
adc
scas
mov
push
cmpsb
aas
in
xchg
and
cmpsb
movsl
pop
fstp
in
ficompl
mov
pop
mov
push
cmc
call
lock
ret
push
repnz
pop
mov
addr16
xor
sub
lds
aad
push
jge
push
sub
add
into
mov
xor
xchg
stos
push
scas
dec
rcrb
out
and
jae
pop
dec
je
lea
fucom
jl
push
xlat
in
inc
xchg
jns
sbb
sahf
pop
jecxz
or
mov
add
sub
dec
sbb
push
dec
or
xor
inc
popf
mov
stc
add
out
cmp
les
sti
mov
sub
mov
cmp
add
mov
add
aad
or
push
push
std
pushf
cli
imul
cmp
jmp
pop
imull
sub
push
or
div
jmp
and
loop
sti
jb
lods
orl
ljmp
outsb
dec
mov
jge
js
dec
cmp
xlat
in
call
adc
mov
xchg
jge
pop
lods
divl
and
cmp
xor
cmp
mov
push
mov
or
fs
or
xchg
rorb
cs
xor
mov
out
cld
sub
jb
call
push
xorb
movsb
pop
pop
shlb
sbb
lods
xor
fwait
clc
rorl
scas
lret
sub
xchg
push
mov
frstor
sahf
out
imul
data16
xchg
dec
mov
mov
mov
and
jp
xlat
jge
cmpsl
dec
mov
jge
in
push
add
fs
mov
loope
dec
sub
bswap
sbb
gs
mov
sbb
aam
fimull
jle
dec
dec
pusha
repnz
jge
pusha
icebp
add
aad
lds
lock
aaa
cmpsb
sbb
push
test
inc
sbb
or
xor
mov
arpl
pop
fcoml
jb
pop
lds
jo
loop
mov
add
scas
dec
ror
dec
data16
mov
fcoml
inc
mov
xor
or
in
cmc
repnz
push
sahf
xchg
sbb
movsl
int3
out
sub
mov
sub
lods
xchg
mov
push
dec
pop
push
int3
sbb
scas
xchg
or
mov
ret
xchg
pop
jne
dec
insl
loopne
add
pop
pop
jg
sbb
cmpsl
push
and
call
xor
xor
pop
push
inc
lock
cltd
jmp
xlat
popf
inc
mov
cmp
in
xchg
das
insb
sub
cmp
lods
add
xlat
push
test
and
push
adc
in
hlt
sub
out
fsts
fs
ds
mov
xchg
int
dec
inc
test
xchg
inc
jo
cld
test
cmp
jg
xchg
mov
mov
add
adc
or
sbb
imul
arpl
aam
inc
out
xor
addr16
sbb
sub
adc
xor
repnz
orl
adc
and
sub
ret
mov
pop
test
pop
insl
shr
sbb
xlat
mov
std
mov
xchg
xchg
or
movsb
xchg
xchg
fists
and
dec
aas
test
mov
dec
fadds
push
inc
cmp
in
dec
pushf
sti
fldl2e
outsl
push
add
jl
add
subb
outsl
insl
jnp
into
int
insb
lret
pop
cmpsb
in
or
test
sbb
out
cmp
sbb
add
inc
aas
ljmp
das
add
and
sbb
pop
adcb
bound
int
pop
in
push
scas
test
and
sub
xchg
inc
rcrb
add
wbinvd
jae
rorb
hlt
mov
decl
mov
cmp
mov
or
leave
xchg
push
stc
mov
cmpsl
adc
aad
pop
test
jb
fldenv
sub
aam
mov
pop
shll
out
sti
cmpsl
xchg
jge
add
ror
push
xor
or
mov
out
fs
adc
push
xchg
popa
pop
sahf
cmp
test
mov
cli
pushf
xorb
and
sbb
shr
adc
adc
leave
and
sbb
lea
sub
sbb
pop
shll
mov
push
jae
xor
inc
lock
pusha
fbld
xor
push
call
dec
movsb
xor
push
fld
stos
leave
pop
aas
pop
add
aad
adc
sti
push
pop
xchg
clc
pop
lock
push
nop
ret
adc
out
pushf
mov
sbbb
test
insb
sbb
jmp
push
inc
sbb
adc
loop
mov
mov
mov
aaa
ds
and
and
add
shll
fs
dec
fistps
ret
pop
std
cmp
or
jl
bound
movsl
stc
inc
fisttpl
jb
in
cltd
adc
stos
inc
ja
push
dec
addb
mov
daa
rcrb
loope
iret
mov
add
cmp
xchg
jecxz
lods
jae
add
sub
in
roll
sub
xchg
jb
push
imul
mov
xor
hlt
sbb
xor
out
jno
jmp
pusha
and
xor
pop
out
and
imul
jp
in
stos
out
pop
xor
fucomip
lock
xor
cmpl
inc
xor
sbb
jg
data16
lcall
lock
pop
js
lret
shrl
fbstp
and
pop
sub
dec
imul
push
outsb
jne
mov
xchg
push
ljmp
inc
out
fisubs
mov
xor
adc
xor
fbld
cmp
rcl
xchg
xchg
inc
pop
push
mov
jae
mov
adc
jl
lea
xor
push
hlt
adc
fwait
les
inc
push
jbe
lods
jmp
in
lahf
std
jg
es
push
iret
xor
xchg
add
or
mov
out
push
mov
lcall
jne
pop
cli
dec
daa
iret
mov
loop
lcall
mov
mov
pop
lds
gs
mov
gs
jle
adc
and
dec
push
scas
add
lahf
test
sbb
test
sti
sarb
sub
xchg
inc
mov
inc
aam
or
xchg
movsb
out
enter
pop
cwtl
adc
repz
shl
mov
popf
jmp
lods
push
ljmp
stc
ljmp
or
pop
cmp
cmc
and
mov
inc
cmp
popf
testb
int
pusha
and
jnp
mov
jbe
adc
cmp
mov
dec
outsb
je
dec
out
jbe
xor
addr16
mov
xchg
pop
xchg
adc
sbb
pop
ficomps
jp
inc
pop
pop
shll
push
aaa
test
push
movsb
lret
lret
addr16
data16
xor
inc
sub
adc
xor
hlt
mov
fs
cmp
test
jp
into
bound
inc
loopne
std
mov
mov
js
test
adc
loope
xchg
insb
loopne
or
call
sub
mov
add
xchg
fisubrl
mov
pop
lcall
mov
add
pop
mov
pop
and
and
popa
loop
adc
jp
and
xchg
leave
fdiv
int3
imulb
adc
sbb
enter
test
or
push
pop
mov
movsb
fs
out
insl
cmovae
add
push
inc
push
push
stc
mov
sbb
sub
cmp
aas
sahf
lahf
fwait
adc
dec
in
test
lock
sbb
nop
mov
cmp
sub
cld
mov
adc
je
leave
movsb
or
imul
das
dec
cmpsb
insl
mov
inc
mov
cmp
dec
pop
aad
jecxz
fsubrl
xchg
cmpsb
pop
and
incb
push
and
mov
fdivr
gs
xchg
cmp
data16
popf
lods
xchg
or
pusha
je
leave
sete
sbb
jo
aas
fstl
inc
xchg
aam
mov
scas
pusha
push
push
cmp
jno
fs
testb
loop
jae
sbb
lahf
push
dec
lods
fcomi
aad
fidivl
test
add
xor
push
es
outsb
adc
sbb
mov
push
jae
movsl
mov
dec
inc
push
xchg
dec
fisubs
jae
nop
cwtl
mov
lea
lods
lods
mov
mov
movsb
ret
cmpl
sbbb
test
mov
sub
mov
cwtl
push
pop
add
test
int3
mov
ds
shll
hlt
fsts
icebp
dec
adc
push
gs
inc
xchg
repnz
jnp
ja
xor
ljmp
jno
popa
cmp
incl
add
mov
jmp
jno
sbb
notb
cltd
xchg
xlat
andb
add
mov
mov
cmp
push
mov
jbe
data16
mov
aaa
int
call
dec
in
lock
xor
xchg
out
xchg
cmp
adc
inc
outsb
add
cwtl
adc
mov
and
adc
jle
inc
jne
in
aaa
sbb
fldl
roll
push
fmul
adc
or
fnstsw
sti
inc
or
int3
jns
movsl
addl
or
xor
std
lcall
arpl
xor
sub
aaa
inc
fcomps
clc
push
inc
xor
cmpsl
fwait
adc
xchg
mov
insb
int3
paddw
mov
jecxz
push
xchg
ret
int
add
pop
cltd
inc
push
pop
sub
adc
pop
bound
sub
fisubrl
outsl
fdivrs
jbe
loopne
add
sub
jno
sbb
imul
inc
movsl
inc
mov
and
mov
mov
mov
in
jge
mov
shll
mov
pushl
stc
ss
add
hlt
cltd
dec
fisubrl
xor
pusha
pop
push
mov
or
sbb
adc
xchg
adc
out
dec
into
mov
push
inc
cmp
mov
sbb
mov
dec
and
je
mov
inc
andb
sub
out
out
mov
inc
push
mov
lahf
jno
lods
mov
jbe
or
hlt
dec
pop
cmp
lock
mov
stos
sbb
xlat
xchg
lahf
pop
fimuls
xchg
push
jno
push
push
dec
sub
fidivl
sub
mov
and
pop
addb
fnstenv
push
repnz
movsb
add
xor
mov
sub
cmp
test
jbe
sahf
out
mov
xchg
xor
xchg
sbb
test
inc
mov
roll
movd
enter
loopne
jae
aaa
fdivrs
ljmp
lcall
repnz
das
pop
sub
mov
mov
dec
mov
test
and
fnstenv
xchg
sub
into
push
jp
jg
iret
push
ss
stos
pushf
stc
mov
sub
icebp
dec
add
lret
mov
in
out
xorl
mov
mov
insl
xor
inc
mov
cld
inc
and
pop
and
xchg
or
and
add
pop
movsb
adc
jb
stos
mov
mov
cmp
aaa
enter
in
dec
sti
in
push
arpl
cmpl
mov
lcall
lods
sti
arpl
hlt
iret
ret
shrb
inc
movsb
mov
dec
push
lahf
add
orl
sub
rorb
sbb
sti
pop
dec
lret
sub
push
fnstsw
or
push
adc
xchg
notl
sbb
xchg
pusha
lahf
pop
inc
dec
mov
sbb
mov
pop
fwait
push
jge
add
out
lret
pop
cmp
ja
fsubrl
mul
jbe
mov
jmp
mov
gs
out
fnstsw
movsb
jno
into
iret
pop
aaa
fsubrl
iret
and
mov
cltd
and
jns
jb
cmpsl
mov
jl
xor
xor
pop
lock
pop
frstor
and
out
sbb
or
idivb
lock
jo
stos
sub
std
fld
imul
pusha
cmp
adc
scas
xchg
or
pop
out
dec
mov
sbb
fidivrs
sbb
cwtl
push
jecxz
dec
inc
out
sub
add
mov
mov
add
aas
ljmp
dec
leave
popf
popa
xor
stos
push
mov
cld
outsb
divl
add
test
add
in
xchg
adc
stc
jecxz
aas
in
dec
ja
lods
jp
mov
stos
sbb
mov
lret
scas
jmp
fadds
arpl
dec
and
jmp
adc
out
jle
xlat
dec
cs
mov
int3
loop
jbe
pop
xchg
lahf
rolb
loop
cltd
mov
jne
and
das
xor
or
ja
add
fidivrs
pop
psllw
mov
mov
xor
inc
divl
jl
xor
test
out
xor
sub
jle
mov
jle
andb
add
jae
arpl
push
mov
or
xchg
iret
adc
jmp
sbb
sub
xor
push
mov
mov
xor
mov
icebp
jno
xchg
subb
out
lods
mov
stos
das
fcoms
imul
dec
sbb
pop
adc
ficomps
lret
repz
lcall
pop
rcrb
dec
negl
mov
lahf
jns
jmp
out
rcll
and
movb
stc
jno
repnz
fiaddl
xor
ja
es
adc
jecxz
sbb
in
xchg
mov
sub
or
dec
push
sbb
lret
fidivrs
pop
mov
push
pop
add
inc
insl
mov
mov
mov
push
jae
arpl
push
add
das
in
lods
dec
sbb
adc
insl
fwait
nop
mov
outsb
xchg
sbb
mov
sub
scas
icebp
sbb
inc
xchg
fcmovu
or
jb
jne
jae
lcall
insb
xorl
jmp
sbb
scas
lock
jg
mov
nop
mov
xor
jo
mov
pop
jne
and
xor
xor
fs
test
lret
inc
daa
lds
scas
mov
fdivrp
sbbl
enter
and
aas
xor
and
mov
mov
arpl
cltd
shrb
push
sbb
xor
aas
rcll
subl
push
stc
orl
stc
adc
pop
scas
lods
sbb
pop
and
movsb
or
mov
fwait
jl
xchg
fmuls
jns
das
leave
inc
xchg
and
out
xchg
test
mov
insl
test
mov
add
int
jl
xorb
mov
ja
xchg
push
inc
push
xchg
aad
and
or
ret
pop
sbb
stos
cs
mov
push
dec
aaa
imul
scas
xor
mov
rcll
push
repnz
dec
jge
and
int3
pop
cmpsl
in
sub
test
cmp
pop
push
andb
cmp
mov
sbb
leave
pushf
mov
cli
stos
push
scas
in
mov
mov
sbb
cmp
jmp
xor
mov
mov
divb
mov
mov
jg
push
jp
add
test
in
jmp
int
sbb
test
bound
js
sbb
push
mov
je
dec
mov
data16
push
adc
test
loopne
rcll
stc
scas
dec
add
add
pop
stos
jno
inc
push
and
jecxz
and
scas
xor
repz
xchg
mov
in
xorl
xchg
sbb
push
mov
call
std
fimuls
jecxz
jb
dec
movsl
cmp
or
adc
xchg
pop
shl
mov
xchg
push
mov
dec
adc
movsb
fcoml
mov
jg
sbb
push
pop
xor
cli
fs
jnp
mov
sub
bt
ret
jb
stos
aam
mov
push
push
cld
lods
div
jp
mov
inc
mov
mov
jmp
mov
ret
mov
stos
and
aam
lret
add
ja
outsb
cmp
aad
mov
pusha
pop
xchg
mov
orl
xchg
cli
push
cltd
mov
lret
imul
or
out
mov
loop
sub
and
je
or
ret
cmpsl
daa
adc
cs
xor
push
gs
adc
mov
and
mov
into
mov
xchg
add
dec
incb
shlb
push
or
add
scas
inc
insb
shrb
push
and
push
ds
and
mov
and
or
push
inc
fstpt
and
pop
push
aad
pop
adc
sub
movsb
xor
push
dec
dec
cmpsl
mov
mov
lods
scas
inc
jns
fisubrl
mov
or
xor
inc
adc
in
push
push
pop
xor
and
push
dec
jge
mov
mov
test
jmp
dec
daa
push
xor
scas
aam
mov
xor
adc
mov
or
and
ds
sbb
inc
lds
sbb
int
mov
push
add
xor
ss
jbe
fnstenv
int3
stc
adc
mov
push
mov
fbld
add
mov
lcall
insb
ja
in
inc
nop
cmc
push
call
enter
pop
test
movsl
ret
sbb
sub
lods
pop
pop
sbb
bound
lds
js
popa
fcomip
in
incb
int
xchg
in
sahf
aad
mov
fcoml
jle
fwait
ja
sbb
xchg
or
mov
sarb
ds
and
mov
test
shll
xor
adc
lea
inc
dec
movd
push
push
fstpl
or
sti
push
pop
sub
jecxz
pop
mov
cmpsb
xchg
jmp
insl
xchg
movsl
cmp
rcll
pop
xor
pop
add
ret
push
pop
ds
jb
adc
or
adc
out
rcll
and
inc
and
pop
incl
fidivs
inc
popa
das
cld
daa
lods
mov
or
mov
icebp
sub
sbb
dec
dec
outsb
cmpsl
iret
jge
in
sbb
loopne
ljmp
outsl
xor
xchg
sbb
pop
insl
test
lock
and
mov
adc
cmpsl
sbb
adc
push
mov
or
scas
mov
cmp
mov
mov
addr16
xchg
sub
push
pop
rorl
outsl
mov
in
and
test
jl
xor
xchg
dec
and
cmp
mov
add
pop
mov
call
sub
sub
fidivrs
insl
cwtl
jne
cmpsb
aaa
dec
mov
mov
movsl
fisttpl
cmpsb
add
add
movsl
push
mov
add
push
push
inc
sbb
lock
in
mov
inc
push
lds
jno
and
pop
popl
jae
xchg
adc
andl
adc
mov
xchg
inc
ja
mov
les
nop
jb
fmul
mov
xchg
fists
test
cld
fs
push
mov
inc
mov
xchg
add
adc
mov
mov
pop
inc
outsb
cmc
xchg
mulb
pop
xchg
popa
bound
push
xor
aaa
repnz
outsb
gs
dec
pop
ret
mov
xchg
xchg
inc
insb
jo
sub
push
sub
jno
fistps
xorb
adc
jae
xor
adc
imulb
sti
fisttpl
sub
xchg
sub
mov
rcll
jnp
pop
loopne
jbe
xchg
arpl
sub
pop
gs
or
or
loope
enter
daa
rorb
lods
dec
in
sub
sbb
dec
xchg
sbbl
mov
adc
sbb
add
data16
ljmp
andl
sub
stos
mov
pop
push
lock
mov
pop
mov
mov
adc
adc
xlat
leave
pop
inc
or
sub
dec
pop
mov
ret
mov
mov
pop
stos
aad
stc
mov
sbb
inc
jmp
outsb
push
dec
adc
fmul
jmp
pop
and
add
xlat
imul
arpl
mov
cmp
ja
in
mov
adcb
sahf
ficoms
push
out
mov
push
add
fidivrs
call
sub
mov
fidivs
cld
xor
clts
xor
lret
fld
push
iret
xor
fsubs
adc
mov
jne
pop
aaa
and
push
js
shr
movsl
add
dec
jecxz
mov
out
into
mov
pop
cmp
test
sub
or
pop
call
mov
das
std
push
push
and
cs
call
int3
scas
jo
xor
scas
add
daa
xor
out
mov
ja
pop
pop
sub
sub
jnp
pushf
push
add
mov
push
xchg
cmp
fwait
lods
movsb
mov
fistpll
cmp
xor
cmpsl
cmp
mov
mov
rolb
rcrb
mov
sti
lods
add
stos
sub
repz
mov
imul
mov
inc
sbb
imul
movsb
jg
sub
jle
std
adc
inc
fsts
repz
popf
clc
add
popf
pop
out
and
cmp
inc
jnp
rcrl
xor
cmp
in
inc
mov
mov
sahf
mov
lret
dec
pusha
jno
pop
out
lret
push
xor
cmc
inc
xor
push
mov
mov
ds
lods
mov
insb
xchg
out
push
push
pop
push
inc
nop
or
mov
fisttps
mov
sti
xchg
dec
push
dec
lret
sub
pop
push
push
loop
cmp
repnz
outsl
pop
ljmp
inc
or
daa
pop
loopne
xor
pop
cmp
sar
mov
jle
jge
sbb
mov
push
xchg
add
add
cmp
std
addr16
orb
bound
push
cmc
daa
or
mov
sbb
aad
mov
lods
mov
add
and
or
or
mov
add
push
sbb
add
stc
xorb
fs
mov
mov
add
and
pop
or
mov
mov
dec
mov
movsl
and
scas
stos
hlt
jnp
jp
mov
inc
adc
lret
pushf
inc
orl
adc
mov
lds
adcl
cmc
js
fmuls
and
inc
notl
or
mov
mov
ja
xchg
mov
pop
push
inc
dec
addr16
test
sahf
cmp
stc
mov
js
lods
sti
int
pusha
jne
lock
es
mov
pusha
push
int
add
and
or
ret
aad
mov
inc
ljmp
dec
jae
pop
mov
dec
push
adc
sbb
push
inc
sub
sar
and
in
add
jno
pop
out
sbb
xchg
xorl
shr
lea
or
movsl
mov
mov
clc
inc
pop
cmpsl
mov
inc
popf
xchg
push
shlb
insb
jle
scas
fidivrl
cltd
jmp
add
sub
sub
aaa
xor
inc
insb
gs
clc
mov
shlb
cltd
insb
dec
xor
push
out
imulb
xchg
aad
mov
imul
jne
loope
test
xchg
dec
xchg
fistpl
and
inc
jb
out
jg
ficoml
mov
lret
call
xchg
xchg
out
es
inc
lods
test
jo
insl
mov
notl
fmuls
cmc
xchg
xlat
add
mov
lock
or
adc
insl
dec
push
aam
xorl
fcmovne
push
int
popa
mov
iret
push
pop
popa
ret
in
xchg
hlt
fwait
cmp
in
gs
push
out
push
or
cmp
int3
cli
fisubrs
leave
aas
jae
add
mov
dec
lds
push
rol
addb
jne
inc
popf
gs
jmp
sbb
push
mov
jmp
lahf
aas
inc
mov
sub
movsl
add
popl
sar
push
imul
loopne
or
in
xchg
xchg
inc
xor
and
jb
mov
dec
outsl
jbe
pop
call
push
into
frstor
push
or
push
out
push
sbb
pop
mov
test
jmp
jne
pop
loop
clc
call
clc
cld
test
les
mov
add
js
insb
pop
xchg
decb
aad
ret
aaa
dec
sti
mov
adc
popa
rcrb
rorl
aad
sub
jns
adc
or
outsb
mov
lods
sbb
mov
dec
pop
shr
mov
adc
gs
into
mov
imul
insl
fnstsw
fisubs
pop
fsubrl
mov
into
or
icebp
and
push
adc
clc
ss
xlat
stc
fs
stc
imulb
dec
es
aaa
sbb
loope
sbb
lcall
adc
fwait
and
add
lds
pusha
lods
jle
mov
mov
dec
jge
cs
sub
aad
icebp
mov
push
cltd
in
call
mov
test
or
cltd
frstor
mov
stos
inc
mov
popf
or
cltd
andl
loope
xchg
jae
in
cmc
in
rclb
add
mov
xor
test
push
jecxz
add
jo
lret
push
testb
shll
jo
jno
lret
add
adc
int
pop
testb
in
xor
in
clc
adc
cmp
dec
test
add
ds
lcall
push
outsl
sahf
add
mov
sub
push
dec
pop
arpl
and
call
shlb
xor
jne
sub
xchg
arpl
sbb
pop
cli
inc
push
ror
push
ljmp
cmp
sbb
out
sbb
aam
je
cli
loop
inc
sbb
mov
mov
add
cs
inc
arpl
jle
clc
cmc
in
roll
lods
stos
jnp
inc
mov
mov
add
sub
fisubs
and
adc
mov
cld
test
push
movsb
inc
cmp
mov
ret
iret
dec
ficomps
leave
cmp
fwait
aad
xchg
flds
lret
test
jg
cmp
sbb
inc
mov
call
rcrl
rorb
cmpsb
sbb
lods
cs
cmp
adc
outsb
popa
ljmp
dec
pop
lods
jb
fimuls
jo
xchg
sbb
cvtps2pi
lods
mov
std
std
jo
push
cwtl
mov
clc
dec
nop
adcl
mov
jmp
push
xchg
cmpsb
dec
ljmp
mov
pop
pushl
out
jmp
adc
push
inc
mov
sub
ja
and
lods
mov
test
iret
jg
inc
movsb
inc
mov
mov
js
mov
fsubrs
jecxz
mov
popa
loopne
mov
mov
in
mov
dec
sbbb
stos
sahf
pop
mov
stos
into
adc
inc
adc
enter
js
nop
sbb
push
outsb
jge
jb
mov
jg
insl
pop
jno
mov
das
mov
inc
mov
addb
xor
jg
sahf
xor
in
shrb
lods
pop
push
cmpsb
cs
xor
jl
outsb
call
shll
pop
xchg
jmp
dec
pusha
imul
cmp
xchg
adc
out
mov
popa
sub
pop
inc
or
sti
popa
or
sub
cmp
xchg
xlat
ljmp
mov
repz
add
rol
in
sbb
imul
push
out
push
cmp
xchg
jp
aas
jle
out
test
or
push
rol
mov
cmpsb
adcb
mov
mov
sbb
imul
xor
out
xchg
and
and
xchg
sub
or
adc
push
sarb
pop
nop
imul
je
inc
mov
add
popf
cmp
lahf
and
sub
lcall
mov
adc
and
pop
xor
add
out
idivb
xor
cmp
popf
or
mov
push
fs
jnp
aam
aaa
ret
sub
int
outsb
shll
mov
lea
rclb
cmpsb
xchg
and
fwait
sub
lret
xchg
insl
into
pop
out
inc
jmp
pop
andb
scas
fcomps
adc
mov
not
movsb
out
sub
or
hlt
xor
pushf
add
add
ja
bound
sbb
pushl
shrl
sbb
inc
mov
cwtl
orb
std
pushf
or
out
std
xlat
pop
jmp
je
or
inc
stos
or
loop
out
imul
test
xor
mov
sub
jp
inc
xchg
sub
push
xchg
int3
add
xor
lahf
repnz
cmpsl
pop
bound
int
fisttpl
shl
dec
addr16
and
inc
mov
adc
or
daa
hlt
push
jecxz
jo
add
xchg
sub
mov
jecxz
fcomps
jecxz
push
mov
ljmp
aaa
in
dec
enter
imul
inc
xlat
sub
sub
xchg
add
adc
test
push
cmp
xchg
and
adc
push
stos
or
xchg
shlb
inc
mov
push
cmpsl
pop
push
add
sub
pop
mov
adc
add
loopne
lcall
repnz
fcomps
lret
add
bound
inc
loopne
mov
lret
ret
daa
int3
push
test
xchg
popf
mov
sub
test
bound
xchg
decl
sbb
sbb
mov
subb
shrb
xor
shll
xor
mov
ljmp
mov
mov
sahf
jnp
aad
push
jbe
insl
jl
adc
out
fildll
lods
inc
test
push
pop
lret
mov
lret
adcb
mov
shl
cld
jge
movsb
movsb
mov
testb
in
xchg
pop
mov
mov
iret
dec
loopne
loop
sbb
ret
mov
mov
xor
dec
lret
mov
sbb
xor
pop
sarb
lods
jne
push
push
mov
shrb
mov
add
insl
jmp
mov
push
fistl
cltd
pop
mov
and
and
ds
mov
lds
cmc
jmp
enter
inc
stos
or
out
roll
pop
push
mov
push
outsb
fstp
jge
je
lods
sti
adc
sbb
push
adcl
in
pop
lahf
addl
popf
daa
sub
sbb
inc
xor
fisttps
jle
push
notl
nop
mov
sahf
ffree
int
je
adcl
jle
jmp
insl
mov
xchg
incl
push
jecxz
mov
cmp
mov
sbb
loope
xor
xchg
jno
ret
xchg
xlat
mov
sub
pop
mov
sbb
fcmovnb
xchg
cmpsl
gs
jle
sbbl
jnp
mov
add
xchg
dec
imul
cmp
outsb
fwait
pushf
jnp
rclb
jg
inc
push
subl
xor
xor
jnp
push
pop
shlb
loope
out
lret
mov
push
sub
cwtl
scas
dec
and
push
inc
sbb
dec
ds
ss
xor
xor
ja
pop
jge
neg
push
mov
and
adc
ret
lahf
pop
add
xor
dec
push
xor
aas
out
and
pop
out
cli
dec
int
pushl
xchg
addps
jmp
cmp
pop
push
pop
data16
sti
inc
and
adc
leave
mov
pop
dec
adc
mov
cmpsb
loope
push
pop
mov
pop
jne
inc
xchg
fisttpll
cwtl
push
or
dec
xor
sub
jae
cmp
add
sbb
sub
inc
shrl
jo
ret
adc
push
cmp
pop
out
cld
cli
mov
in
mov
mov
mov
xchg
jne
rclb
out
jmp
mov
xchg
stos
cli
mov
call
loope
nop
repz
rorb
sbb
cli
xchg
or
add
mov
inc
repnz
out
insb
and
clc
sahf
cmc
sahf
sub
shl
fstps
jge
mov
mov
test
push
lock
mov
dec
sbb
inc
test
adc
adc
je
insl
test
xor
shrl
mov
mov
xor
sti
shrb
xor
mov
jge
movsb
and
push
fadd
xor
and
jns
sbb
cmpl
xor
mov
cmpsb
cmp
cmp
mov
xor
cmpsb
fdiv
pop
dec
lds
sub
mov
sub
mov
pop
mov
mov
loopne
jg
pop
push
push
sub
int3
fs
xchg
shrl
adc
nop
or
adcl
cmp
cs
push
sbb
mov
pop
scas
xchg
stc
inc
cmp
inc
xor
das
pushf
leave
fidivl
lds
mov
pop
inc
fldenv
adc
out
add
fnstenv
sub
dec
or
leave
add
xchg
rcll
jo
xchg
fisttpll
push
pop
jae
icebp
push
fisubs
stos
jo
lret
xor
hlt
sub
mov
ds
int
movsl
and
sbb
or
fsubl
test
imul
add
shl
out
jae
enter
loop
pushf
std
cmpsb
sub
test
mov
sub
sti
movsl
sbb
pop
test
rcrb
cmp
jo
inc
mov
jae
sbb
mov
add
cmpsb
hlt
loop
push
stos
rcll
adc
pop
dec
mov
stos
scas
inc
mov
adc
and
add
scas
mov
mov
jne
addr16
and
fisubs
dec
add
test
xchg
mov
cmp
pop
jp
push
aam
mov
in
outsl
out
mov
and
and
lahf
pop
cmp
stos
testl
fcomps
lcall
outsb
push
stc
push
pop
pop
push
in
outsb
cld
dec
jp
jge
lcall
mov
jle
inc
mov
cmp
sub
mov
scas
jle
bound
in
push
jb
mov
loopne
sbb
loop
pop
jl
mov
jno
pop
xchg
xchg
and
dec
adc
inc
std
dec
pushf
out
push
lret
sub
call
inc
out
adc
adc
js
sub
xchg
fbstp
sbb
sbb
sbbb
cmp
pop
cli
dec
enter
push
or
sub
fwait
mov
add
fiaddl
dec
mov
iretw
push
std
gs
cmp
data16
adc
roll
push
pop
rol
call
mov
in
xchg
outsb
cmpsb
sarl
outsl
push
and
int
ficoml
cld
mov
add
lcall
rcrl
mov
gs
cmp
jmp
lds
aas
fisubl
fsubrs
daa
jns
or
in
add
or
mov
js
call
outsb
cmp
enter
fcoms
cltd
rep
imulb
push
jecxz
ljmp
bound
and
sub
fdivp
mull
sbb
cmp
xlat
int
mov
adc
rorl
mov
xchg
lea
jb
sbb
jb
int3
jno,pn
lds
or
mov
movsb
aad
popf
mov
cwtl
sub
push
cltd
nop
lods
rorb
shll
sbb
push
jae
dec
aad
out
aam
movsb
adc
mov
and
cmpsb
mov
insl
pop
dec
ret
or
call
mov
xor
push
adc
addps
and
and
xchg
fst
mov
sbb
imul
jl
fcompl
mov
ficomps
lea
inc
or
mov
push
repnz
or
shl
cmp
xor
push
jbe
xchg
dec
and
push
fs
out
cli
jns
cmp
push
xchg
xchg
mov
push
jo
int3
inc
in
jbe
out
in
dec
test
push
mov
decl
jl
push
dec
sbb
pop
je
aaa
xor
je
pslld
xor
pop
ds
mov
imul
scas
xchg
hlt
shrb
jns
mov
lahf
adc
mov
subl
mov
bound
push
loopne
jge
mov
int3
stos
jecxz
movsl
shr
and
cmp
sub
orb
mov
pusha
das
inc
jle
insb
sub
notb
stos
out
inc
xchg
ss
das
mov
dec
dec
lods
sub
aas
pushf
lret
movsb
rol
adc
clc
mov
xor
addb
jecxz
mov
enter
into
inc
push
fists
mov
dec
or
inc
or
jp
scas
pop
divl
or
stos
pop
ss
icebp
mov
mov
push
mov
add
sbb
loopne
or
scas
inc
xchg
lea
aad
push
pop
ds
loop
sbb
stos
popf
cmc
stc
inc
in
fidivrl
mov
pop
icebp
pop
jg
jmp
aam
lock
sbb
sub
xchg
leave
std
mov
mov
je
andb
loop
stos
cmp
int
mov
xor
push
mov
pushf
lret
sub
loop
mov
lea
ret
addr16
mov
and
insl
add
mov
cmc
push
mov
test
jnp
dec
pmaxub
out
xorl
ja
cmp
sar
loope
xchg
xchg
xchg
jge
dec
or
or
ret
pop
lods
push
int
and
cmp
or
gs
push
mov
mov
popf
mov
arpl
je
test
cmp
call
cmp
inc
adc
push
mov
loope
popa
in
or
cmp
aam
push
jae
test
mov
xchg
outsl
insb
mov
adc
sub
inc
dec
dec
cmp
and
inc
and
fldl
mov
and
xchg
pushw
sub
orl
mov
adc
pop
jns
enter
mov
lret
mov
in
movsl
cwtl
xor
outsb
mov
cmp
inc
push
rcll
rolb
in
orl
cli
xor
lcall
cwtl
dec
incb
xchg
dec
xor
mov
ss
dec
jno
fsubl
cwtl
das
aaa
movsb
sub
out
mov
push
cmp
out
cmc
sbb
cld
pop
lock
and
in
pushl
push
dec
out
dec
push
and
mov
inc
lcall
in
sbb
sahf
pop
mov
aaa
je
mov
inc
xchg
push
std
jecxz
adc
out
jne
ljmp
cmp
cmp
fimull
mov
xchg
lret
add
jb
xchg
hlt
pop
sub
aas
fldenv
fstpl
cmc
xchg
ja
icebp
mov
xchg
fwait
inc
pop
pop
rol
jp
pop
fdivl
stc
sub
xchg
dec
rolb
xlat
fistpl
mov
or
mov
push
xor
xor
pop
or
jmp
pop
jo
xchg
icebp
push
aad
insl
shr
or
ljmp
mov
bnd
or
jle
push
aam
cmp
hlt
mov
fbld
xchg
and
lret
xor
pop
enter
mov
inc
ss
fcompl
adc
xchg
cli
pop
xchg
pop
xchg
fistpl
xchg
push
inc
jne
cli
test
mov
inc
pushf
push
lret
mov
cltd
xchg
sahf
pop
push
push
out
mov
test
mov
sbb
fdivr
jo
hlt
mov
xchg
push
and
stc
and
stc
in
dec
pop
jecxz
jge
cmp
push
aad
push
cmp
lret
adc
insb
inc
and
arpl
repnz
push
clc
mov
lcall
pop
add
daa
push
pop
xchg
mov
mov
hlt
xchg
pop
aad
sti
adc
add
daa
in
jno
andb
imul
push
js
xor
sbb
pushf
or
movl
shlb
xor
xor
inc
and
aad
xchg
int
addr16
adc
stos
push
frstor
jle
jb
xchg
andl
pusha
lods
lcall
bound
jno
xchg
mov
addb
add
aad
adc
mov
in
inc
add
inc
cmc
pop
orb
das
bound
jo
fnsave
dec
xor
lret
call
jp
xchg
sbb
jae
test
inc
adc
sub
scas
jnp
dec
add
inc
cwtl
es
xchg
aam
jb
xor
cltd
add
cmp
ss
daa
int
fimuls
jge
in
pop
notb
cwtl
lea
les
inc
adc
std
dec
mov
gs
jo
fmulp
in
ficoml
insb
xchg
sbb
and
insb
cwtl
mov
imul
sbb
sub
cld
jbe
lahf
js
sub
fsub
in
adc
out
add
xlat
mov
sbb
sub
cmp
stos
js
jecxz
ja
push
sarl
mov
fs
repnz
jb
les
fmull
loop
xor
add
or
sbb
notb
adc
pop
jl
enter
sub
lahf
shrl
js
sub
insl
test
sti
in
in
outsb
ret
jns
pop
test
jno
jne
inc
bound
xchg
pop
out
mov
dec
inc
ljmpw
sbb
ljmp
lahf
gs
pop
xor
xchg
pop
rclb
js
cmpsl
cmc
rol
nop
jns
dec
sbb
or
in
rorl
dec
inc
out
xor
addl
inc
mov
jnp
or
xchg
mov
mov
mov
and
sbb
jle
mov
xchg
lods
xor
adc
inc
jbe
dec
jae
cmp
mov
cmp
fdivl
pop
out
cs
mov
push
ret
mov
sahf
and
call
push
xlat
arpl
in
in
cmpl
rcll
jge
mov
xchg
data16
sub
push
loope
rorb
mov
cmp
nop
fldcw
jle
int
or
cmp
inc
or
jns
ds
add
mov
jb
rclb
lcall
or
into
push
popf
and
mov
xchg
sbb
call
fimull
mov
cmp
das
aad
lahf
in
dec
mov
movsl
mov
push
add
xchg
sbb
xchg
push
outsl
movsb
xlat
cmp
pop
push
popa
jae
rclb
and
dec
flds
ror
push
cmp
mov
and
pop
std
cli
pop
idivl
popf
add
fcomi
gs
jg
pop
fcoml
inc
popf
sbb
popf
cmp
les
mov
repz
jns
stos
sbb
out
mov
iret
clc
inc
cs
fiaddl
xor
fdivrl
push
mov
jmp
les
and
pushf
pop
xchg
dec
test
hlt
pop
fucomip
and
push
xchg
dec
daa
pushl
push
aad
rdmsr
mov
pop
lds
jns
pop
pop
pop
jmp
cmp
inc
in
in
das
mov
cmp
stc
sub
pop
inc
testl
xchg
hlt
ljmp
insl
mov
or
rorb
lret
insb
mov
iret
sub
fnstcw
negl
jl
js
bound
mov
sub
mov
jno
mov
dec
mov
fdivs
cli
push
and
jb
aad
pop
jp
inc
inc
into
jecxz
mov
movsb
shll
jno
fsubrs
icebp
sti
dec
cmp
push
jnp
xchg
ja
and
mov
lods
in
outsb
lcall
xchg
pop
test
dec
xchg
sbb
inc
dec
ljmp
mov
inc
inc
fisttpl
orl
add
dec
add
adc
fidivrl
cmp
sbb
js
or
or
push
push
loop
jbe
xlat
popa
xor
ljmp
inc
jl
ljmp
gs
mov
xlat
lea
outsb
push
imul
or
movsb
adc
std
cmp
sbb
pop
and
push
xchg
mov
jp
and
scas
stc
pop
mov
cmp
mov
mov
notb
push
xor
rcrl
data16
cmpsl
add
out
cmp
mov
xchg
mov
bound
icebp
lcall
cmp
test
pusha
insl
xor
mov
lds
or
adc
icebp
sub
inc
fcoml
pop
inc
cli
mov
inc
mov
popf
test
add
je
pushl
fincstp
les
add
daa
jecxz
movsl
dec
mov
xor
out
shrd
mov
je
repz
jb
icebp
aas
mov
rolb
add
je
xor
out
dec
fisttpll
jge
aaa
pop
jnp
imul
xor
leave
inc
ljmp
push
ret
sub
imul
inc
lret
jo
cltd
xor
jbe
ljmp
nop
jmp
out
cld
push
jbe
stos
sub
pop
shl
dec
sub
mov
dec
cmc
mov
add
pop
jno
out
push
imul
movsb
sub
jns
xchg
movsl
loop
data16
scas
mov
dec
fistpl
jmp
lret
mov
dec
fistpll
adc
inc
pop
daa
or
in
jns
add
jg
pop
mov
call
mov
stc
push
addr16
mov
or
push
push
jns
fwait
jnp
inc
fldl
jne
push
cltd
test
xor
mov
cmp
icebp
popf
dec
add
add
push
xchg
mov
cmp
into
mov
jle
cmpsb
dec
mov
or
out
cmpsb
mov
cld
repnz
mov
mov
imul
hlt
fstpl
mov
scas
ret
sbb
sti
lahf
sub
inc
inc
lock
jnp
lds
divb
arpl
mov
lret
leave
andl
jne
mov
inc
inc
xchg
xchg
mov
push
loope
aad
fscale
inc
jle
sahf
fsts
jecxz
fldt
mov
push
push
xor
add
push
mov
cmpl
xchg
push
adc
add
pcmpeqw
dec
jno
adc
push
aas
lods
inc
push
xor
mov
fxch
sbb
jp
push
sbb
push
stos
ljmp
mov
cmp
rorb
jo
pop
xor
test
stos
pop
push
stos
iret
into
push
rclb
das
add
dec
jbe
psllw
loop
fs
cld
sub
loopne
push
ret
les
call
lcall
pop
jg
cmpsb
adc
pop
mov
rcl
pop
idivl
sub
lods
and
jb
and
mov
test
cmpb
mov
cli
rorl
cmpsl
xchg
jb
sub
mov
xchg
and
mov
xlat
push
mov
push
nop
pop
xchg
sub
xchg
pop
and
adc
sbb
idivb
sbb
add
adc
leave
je
stos
inc
scas
sbb
inc
sahf
pushf
adc
or
adc
xchg
push
sbb
inc
inc
imul
mov
xor
pop
fcoms
sbb
sub
shlb
xchg
outsl
in
inc
jb
or
push
int
inc
xor
sarl
fcoml
xor
mov
lahf
adc
sub
filds
xchg
and
ficoml
stc
mov
add
addr16
pop
test
loop
shrl
es
js
out
lods
js
mov
xor
jne
call
sub
mov
jle
pushf
jo
add
test
mov
mov
rorl
ret
insl
xor
push
xor
and
pushf
mov
jmp
mov
pop
push
cld
test
or
in
aaa
pop
sti
movsb
xchg
sbb
mov
mov
outsl
sahf
xchg
out
xchg
aam
mov
pop
sub
adc
shlb
fimuls
test
scas
out
cmp
adc
lods
mov
imul
mov
xchg
inc
arpl
fdivrs
xchg
pop
sbb
outsl
dec
out
push
jbe
lret
iret
lods
fnstsw
jbe
cmp
and
jge
cmpl
leave
adc
icebp
cmp
pop
mov
scas
add
push
xchg
into
mov
icebp
in
xchg
lock
test
add
je
stos
in
push
push
pop
aad
jnp
lods
jle
in
ljmp
jg
inc
xchg
inc
sbb
xchg
fwait
cmc
por
in
sahf
xor
dec
cmc
cmpsl
and
jne
push
stos
arpl
jp
inc
popa
js
jo
cmp
addr16
and
movntq
cmp
xchg
pop
pop
pop
adc
add
cmp
mov
mov
xor
or
lcall
sub
mov
jae
fimuls
mov
or
push
ja
or
cmp
pusha
ss
adc
dec
add
xor
in
xchg
bound
xchg
daa
xor
push
sub
sub
xor
inc
sbb
gs
test
stos
adc
icebp
mov
repz
sarl
adc
mov
call
in
sbb
and
sbb
stos
adc
dec
lret
mov
stos
sub
repz
arpl
negl
mov
das
adc
add
or
inc
cmp
popf
jo
inc
popf
stc
test
mov
filds
arpl
push
shrl
mov
loop
add
cmp
cmpsb
mov
or
jae
decb
mov
push
cmpsb
std
fcomps
mov
scas
lahf
add
popa
and
cmpl
lahf
adc
xchg
inc
sti
dec
xchg
or
mov
repz
sub
in
testl
adc
clc
mov
xor
in
repz
rcll
mov
lods
enter
cmp
mov
or
mov
clc
or
sub
fcoml
clc
shrl
mov
cwtl
mov
or
jae
sbb
pop
mov
pop
add
pop
dec
jl
xchg
mov
fistpll
movsb
pop
jo
adc
rcrl
cmpsb
and
pop
rorl
mov
inc
add
cmp
jno
pop
std
push
mov
xchg
or
dec
scas
sbb
icebp
and
scas
adc
fprem
faddl
loopne
clc
push
movsl
addr16
sbb
lcall
sti
leave
sbbl
adc
jmp
xchg
sub
and
adc
out
mov
inc
cli
xchg
outsl
or
test
mov
fistl
mov
insl
lret
stos
fldt
inc
mov
fistpll
cs
xlat
cmp
bnd
and
cmp
out
push
es
mov
in
pop
mov
pop
jb
push
add
add
in
addr16
adcl
pop
xchg
sbb
dec
movsb
lcall
insb
adc
fidivs
inc
push
push
dec
sbb
aas
ja
ja
pop
out
fmull
test
xchg
push
inc
push
in
mov
andb
popf
lock
insb
pop
pop
es
fdivrp
and
xchg
push
jmp
add
in
sub
int
dec
shl
jle
jl
stc
enter
test
repz
scas
sbb
shl
mov
or
jne
xor
stos
leave
add
in
mov
lods
pop
js
xchg
mov
and
repz
sbb
adcb
aaa
dec
add
pop
scas
lret
xchg
jmp
lret
push
out
outsl
or
cli
push
push
jmp
das
cltd
fs
cltd
mov
fnstcw
xchg
repnz
ds
mov
mov
ret
aas
cs
stos
mov
mov
sti
pop
push
cmp
mov
or
rclb
ficoms
mov
stc
add
repz
lcall
popf
nop
and
outsl
mov
adc
cmp
mov
push
loop
mov
push
iret
mov
and
cli
lods
ds
xor
insl
mov
cmpsb
repz
cwtl
xor
addr16
stos
dec
pop
xor
xchg
sbb
gs
addl
sub
cli
sub
or
sbb
dec
sub
xchg
add
ficoml
sbb
out
sub
xchg
testb
add
adc
push
mov
add
jle
das
test
xchg
inc
in
arpl
or
sub
or
jl
sbb
lds
test
inc
cmp
dec
jns
inc
pop
xchg
test
add
insb
xlat
test
inc
jmp
and
xchg
call
xorl
push
mov
mov
insb
int3
out
pop
push
jge
nop
iret
mov
in
das
adc
ljmp
aam
imul
jmp
enter
rclb
cld
push
scas
fs
out
jne
push
fdivrl
and
mov
js
lahf
pop
movsl
cmpsl
mov
sarl
in
or
aam
loopne
mov
repnz
pop
dec
cli
ds
pushl
and
jb
lods
add
dec
pop
xchg
fisubl
sub
jae
sbb
jne
insb
cmp
and
lods
push
clc
add
es
pop
clc
cmpsl
test
sub
mov
adc
jns
arpl
loopne
rorl
hlt
mov
pop
cmp
jmp
sahf
je
add
stc
scas
pop
fwait
or
and
mov
jle
stc
addl
adc
leave
faddl
scas
imul
insl
xor
je
add
xor
in
jl
mov
push
mov
pop
pusha
fisttpll
cli
cmp
mov
mov
xchg
xor
repnz
xchg
loopne
das
insb
rcrl
adc
test
adc
jmp
imul
enter
hlt
push
add
repz
rcrb
addr16
test
inc
jle
and
aad
add
pop
cmp
add
inc
mov
lds
cmp
add
daa
lret
test
inc
cmp
mov
mov
cld
out
je
inc
jg
xor
mov
hlt
inc
movsl
int
dec
sbb
xor
aad
repz
add
stos
popa
adc
jl
ret
inc
stos
outsb
or
rorb
xchg
mov
leave
ja
ja
decl
in
sbbb
lahf
pop
clc
test
cmp
in
aam
dec
shlb
das
cs
xchg
pushf
das
arpl
shr
imul
dec
mov
in
test
cld
add
mov
sub
and
cmc
loopne
adc
jecxz
icebp
stos
mov
mov
iret
or
insl
adc
push
xchg
dec
int
jecxz
insb
daa
cmp
rcrb
addr16
and
adc
jge
dec
data16
fildl
xor
jp
out
testb
int
and
dec
mov
mov
call
inc
imul
jecxz
push
outsl
insl
dec
pop
jnp
daa
jmp
test
shrb
adc
sahf
cmpsl
pop
dec
jne
dec
and
dec
mov
sub
std
popa
mov
push
daa
or
xchg
fisubrl
test
fcomp
dec
popf
push
xchg
rclb
lret
insl
iret
imul
adc
pop
fwait
rolb
roll
mov
xor
je
push
icebp
sti
jns
mov
lds
lret
roll
jns
hlt
lods
add
call
out
test
cmp
pop
pop
jg
ret
pusha
ja
xor
jl
rcll
sar
aaa
pop
fidivrl
sub
dec
jge
data16
jl
rcl
inc
fwait
mov
imulb
sub
cli
adc
and
hlt
int
inc
cmp
sbbb
mov
push
int3
std
es
jmp
sahf
sbb
jo
test
mov
inc
repnz
jb
jmp
fwait
push
repnz
cmp
dec
js
into
xor
aaa
xchg
adcb
insl
das
dec
loope
add
fdivrs
jmp
dec
pop
pop
ja
into
push
push
and
fs
fucomp
sahf
lea
stos
insl
fsubs
mov
xor
xor
lds
jge
push
outsl
ljmp
pop
fcomip
mov
dec
cmp
lret
cmc
push
push
jb
out
les
mov
push
movsl
or
sub
pop
enter
insl
mov
inc
push
dec
sub
mov
adc
mov
jne
lret
sti
fimull
push
inc
jnp
inc
sahf
push
aam
mov
test
fildl
inc
xlat
sbbl
mov
xor
dec
repz
inc
xchg
jg
fisttpll
icebp
out
xchg
sub
dec
dec
ds
sub
sub
and
push
in
add
add
or
sar
mov
mov
sub
addr16
out
pushf
mov
or
movsl
mov
popf
sti
jecxz
inc
insb
sbb
imull
leave
icebp
add
mov
rorl
jnp
enter
sbb
mulb
movsw
jg
sbb
push
loope
sub
fcompl
jne
sbb
rorl
leave
bnd
jmp
loop
cmp
test
out
les
ljmp
jne
push
repz
push
mov
cmp
cs
mov
push
xchg
xchg
pusha
inc
shrb
js
push
rclb
popa
je
or
or
sbb
out
rcll
mov
mov
jecxz
mov
pop
in
leave
xor
mov
mov
jo
rol
nop
out
data16
dec
xor
cs
cs
push
and
outsl
jbe
dec
imul
in
or
mov
pop
and
pop
jp
arpl
stc
dec
daa
jnp
dec
mov
mov
test
cmp
jno
adc
cmp
aad
loop
dec
hlt
inc
sub
xchg
mov
or
jle
mov
fistl
cmp
fxch
add
jmp
dec
pushf
lds
scas
push
stc
adcb
mov
xchg
mov
das
popf
test
divb
call
andb
out
movsb
rol
cmpsb
in
addl
fcoms
gs
bound
xor
hlt
and
jge
xchg
push
and
mov
xor
mov
cmpl
or
movsb
add
outsl
lahf
daa
inc
iret
push
jp
cmp
lock
sti
inc
gs
jle
xorl
mov
dec
test
xlat
aad
xor
icebp
outsl
repz
out
pop
inc
and
jp
and
push
dec
push
inc
fs
dec
xchg
call
push
and
and
cmp
test
mov
mov
js
and
inc
xor
enter
popl
aad
daa
movl
sub
mov
jmp
out
mov
cmp
mov
mov
dec
adc
loop
pop
ret
xor
arpl
push
jne
mov
gs
inc
xchg
xchg
aaa
cs
mov
mov
mov
sarl
xor
icebp
lea
inc
and
mov
xor
jp
cld
in
inc
jnp
sub
mov
or
and
sti
mov
mov
test
gs
and
imul
adc
jge
icebp
ja
push
setnp
les
cmc
rolb
adc
jns
and
mov
xchg
pop
dec
cmp
mov
mov
jmp
lahf
push
inc
loope
imulb
jmp
cmp
ja
mov
mov
callw
cmp
lock
mov
xor
push
ret
add
call
movsl
mov
add
dec
push
cli
mov
adc
std
push
mov
mov
jmp
clc
mov
in
rcr
fdivrl
cmp
cwtl
sub
ret
dec
dec
pop
xchg
push
add
test
jb
out
xlat
push
imul
aaa
popa
call
dec
cld
inc
add
out
xchg
push
mov
adc
lret
mov
adc
lds
ficompl
cmc
lret
sti
adc
push
ds
nop
sti
jne
jne
jl
in
cmp
nop
movsb
mov
push
imul
hlt
nop
int
fadds
imul
and
imul
mov
xchg
jns
push
dec
sbb
pop
out
xor
scas
cmp
sysenter
enter
add
pop
mov
xchg
jl
jl
jle
inc
cmp
mov
inc
ss
cmp
and
mov
orl
leave
or
inc
sbb
int
ss
fcomi
aad
rol
je
aad
loopne
xchg
ss
fs
fdivs
and
jmp
lods
push
inc
scas
fcoml
outsb
sub
lock
pop
stos
push
mov
mov
mov
or
inc
jae
add
shr
xor
xor
stc
aam
and
lods
arpl
in
ret
mov
call
add
insl
jno
daa
pop
sub
insb
mov
pushf
in
pop
cmp
loope
mov
cmp
popf
maxps
jbe
inc
inc
aas
mov
std
jne
adc
cmpsb
push
repnz
aad
sarb
xor
push
or
cwtl
movsl
push
out
mov
pusha
pop
dec
out
enter
adc
or
add
xor
push
cmp
pop
gs
lods
icebp
sbb
icebp
jb
test
fdivs
sub
and
int3
mov
fmuls
pop
cltd
inc
xor
mov
das
jnp
enter
and
stc
adc
cmp
jecxz
dec
or
iret
shll
adc
push
mov
or
cmp
loop
divb
out
dec
andb
out
mov
cmpsl
imul
xor
inc
adc
pusha
rcrb
imul
mov
arpl
xor
stos
outsl
lods
pop
stc
sbbb
mov
sub
push
push
xor
lock
lret
not
mov
pop
inc
sub
jno
mov
inc
xchg
jp
test
enter
mov
sbbb
push
push
movsl
push
jmp
mov
xchg
sbb
mov
jge
and
jge
ljmp
repnz
rol
addb
imul
pushf
cs
arpl
pop
mov
adc
xchg
and
dec
in
push
cld
call
xor
xchg
aaa
sbb
xchg
dec
adc
pusha
mov
or
js
test
test
push
xlat
js
jp
fs
pop
pop
fwait
sbb
std
in
cmpsl
nop
jne
sbb
ret
mov
sti
ret
sbbl
jne
sbb
xchg
orb
cltd
dec
adc
test
fwait
fwait
ja
jo
aas
out
aam
jmp
inc
pop
sbb
nop
pop
cmpsl
cmp
cmc
popf
and
sub
dec
stos
fistpl
test
pusha
adc
push
loopne
mov
jl
fs
dec
xchg
insb
rcr
push
mov
sub
mov
ja
push
mov
sti
dec
add
add
ja
jb
stos
cld
dec
dec
lock
cs
imul
lds
push
pop
push
test
cmp
jo
xchg
add
pop
dec
incl
das
xchg
adc
in
fistpll
mov
and
xchg
scas
rcr
and
fisttpll
and
pop
add
sbb
lret
mov
cmp
and
shrb
or
pusha
dec
adc
or
fs
sbb
push
shll
sbb
subb
add
stc
xor
cwtl
jne
test
xchg
addr16
ljmp
inc
dec
ret
mov
es
lock
jae
mov
xor
imul
xor
sahf
and
repz
pop
stos
divl
jmp
aas
hlt
jp
loope
fisubl
adc
sar
xlat
insb
jge
faddl
aaa
xchg
xchg
aad
lock
call
in
pop
or
adc
dec
jne
lea
mov
jmp
adc
mov
test
rorl
dec
scas
sbb
sub
das
loope
cmpsl
data16
cltd
in
out
std
jae
xchg
lock
mov
cmpsb
mov
push
sti
or
imul
ret
inc
inc
xchg
movsb
sub
arpl
xor
mov
fisubrl
xor
jge
fadd
lret
xchg
mov
lret
cmpsb
mov
jbe
xchg
je
or
lds
xchg
sub
push
push
cmp
lds
pusha
and
xor
shrb
out
mov
movsb
call
xchg
and
fisttpl
jo
xor
push
repnz
xor
jne
pop
testl
rclb
andl
sub
ror
subl
mov
je
cmp
xchg
daa
leave
add
movsl
inc
push
enter
fsubr
jg
ljmp
ljmp
cmp
inc
add
lret
pop
mov
jae
out
je
sbb
xchg
xchg
adc
push
roll
mov
lcall
add
xchg
aad
ds
popa
adc
fldenv
or
repz
pushf
sti
add
add
stos
or
and
push
inc
repz
mov
arpl
dec
pop
aad
aad
mov
ffree
add
in
icebp
insl
sbb
gs
jle
lods
xchg
in
movsb
sahf
pop
cltd
aam
icebp
jno
add
fsubrs
popa
imul
mov
or
imul
pop
inc
in
enter
bound
sahf
hlt
sti
xchg
mov
inc
dec
imul
stc
iret
push
aam
push
enter
fdivp
cmpb
movsl
jb
mov
jnp
xchg
dec
adcl
andb
loopne
cmpsb
cmp
cwtl
ret
or
icebp
repz
push
in
stos
jl
fxch
mov
sub
pop
test
mov
jbe
inc
sti
mov
pop
xor
mov
adc
or
mov
cmp
je
pop
popa
dec
add
insl
fidivrs
pop
push
outsl
cmp
or
pop
fwait
or
cmp
add
xchg
sbb
xchg
faddp
pop
aaa
lock
sub
iret
sti
fildl
movsb
and
arpl
stos
push
mov
cmp
mov
rol
ja
dec
fcompl
jne
pop
scas
cli
jae
loopne
push
pop
shr
les
lret
dec
rcll
xchg
pop
cmp
outsb
jmp
xor
add
mov
push
out
xlat
xor
mov
js
or
es
jp
or
pushf
jmp
mov
das
aad
outsl
or
mov
jle
mov
into
cmp
xlat
pop
sbb
leave
movsb
and
xor
divb
inc
xchg
push
pushf
fcmovbe
pop
inc
js
or
mov
mov
mov
push
aad
mov
dec
inc
mov
or
sbb
mov
adc
enter
mov
or
inc
testb
mov
xchg
shlb
scas
fcomi
push
sub
pop
outsb
arpl
cmpsl
mov
fsts
fsubr
cmp
pop
iret
aad
lods
pushf
sbb
lods
and
imul
sbb
xor
loop
jne
stos
loope
lcall
pop
insb
and
or
fildl
pop
pusha
mov
add
jns
dec
xor
ds
mov
rcll
jnp
xchg
pop
aam
dec
mov
push
lock
ljmp
add
jle
in
mov
dec
icebp
test
xor
xacquire
pop
test
stos
cmpsb
xor
dec
cmp
sti
push
push
bound
xor
pop
sbb
jno
fidivrl
cmp
add
xchg
sub
dec
dec
inc
ja
jecxz
mov
loop
pop
push
fbstp
cmpl
add
test
cmp
stos
or
scas
push
and
pop
movsl
inc
shrl
or
mov
out
cmpsl
or
nop
mov
stos
pop
int3
in
lcall
jno
push
test
cwtl
out
cld
repz
in
or
lods
xor
xlat
cmpsl
std
pop
rorl
dec
cli
scas
js
outsl
jno
dec
pop
lcall
xor
add
push
jl
mov
fistl
pop
xor
js
pop
cmp
xlat
adc
or
scas
test
arpl
icebp
mov
or
mov
mov
or
icebp
and
and
pop
mov
pop
mov
push
cli
adc
loop
inc
daa
mov
sbb
jnp
cmp
jbe
ret
std
pusha
xor
andl
popa
cmp
dec
mov
adc
fimuls
in
pop
scas
dec
adc
add
sbb
test
pop
mov
aaa
mov
nop
sub
dec
in
fidivrl
sbb
mov
push
sti
mov
jecxz
mov
scas
push
push
pop
mov
mov
enter
sbb
cld
jae
dec
mov
inc
inc
add
idivl
mov
loop
cmp
jecxz
mov
loop
or
jecxz
test
cmp
imul
sub
inc
mov
pop
dec
test
mov
fdivs
jg
mov
fwait
xchg
adc
imul
jb
popa
push
mov
mov
pop
enter
dec
inc
pop
xchg
out
mov
fnsave
cmpsl
outsl
sahf
sti
add
and
cmc
enter
jle
inc
ds
cs
lock
test
sub
lock
jmp
xlat
jae
stos
push
adc
adc
int
fidivrl
bound
push
xchg
test
adc
dec
xchg
imul
xor
jbe
xchg
enter
int3
and
loope
xor
mov
mov
test
clc
add
inc
sti
dec
mov
das
sub
jge
int
adc
loopne
mov
sub
inc
pop
add
aas
std
push
into
hlt
pop
inc
inc
adc
aad
push
xchg
mov
out
sbbl
pop
scas
jb
mov
inc
fsubp
ss
lods
mov
jge
leave
sub
fsubl
and
stos
xchg
xchg
adc
jmp
into
popa
push
out
loope
push
test
jp
jne
int3
xchg
mov
or
push
repnz
and
test
dec
mov
sub
sbb
into
push
stc
popf
bound
dec
pop
ficomps
aad
and
stos
mov
and
inc
dec
add
inc
pushf
insb
dec
push
leave
in
jg
push
jno
dec
mov
repz
ret
or
ficoms
xchg
push
mov
fnstenv
ret
mov
xor
hlt
insb
jle
sbb
pop
hlt
jb
in
out
or
mov
arpl
insl
decb
jb
and
movsl
in
jbe
cmpsb
ja
imul
aam
push
enter
lods
jecxz
sub
imul
adc
in
mov
aaa
pop
fwait
in
lret
mov
loop
and
lods
jno
cmp
xor
inc
sbb
jb
int
test
and
aaa
aas
imul
pushf
xor
sbb
cmp
fstl
push
testb
mov
cltd
mov
xor
imul
repz
cmp
dec
lcall
out
mov
fs
jb
and
jmp
pusha
dec
outsb
cmp
push
inc
dec
jecxz
outsb
sbb
test
ds
xchg
inc
movsl
shlb
cwtl
lea
out
jecxz
loopne
ja
arpl
mov
call
out
outsl
clc
mov
dec
jns
mov
jbe
pop
cmpsl
mov
gs
addb
push
sbb
inc
testb
pop
sbb
data16
call
int
jle
cmpsl
mov
rcl
mov
xchg
pop
jo,pn
fcompl
xor
popa
in
pop
push
adc
fwait
test
sub
mov
cmp
lret
mov
stos
jl
lret
cmp
mov
rol
out
mov
xchg
movsl
jg
sub
inc
push
xchg
ss
sub
or
add
xchg
iret
xlat
push
mov
arpl
neg
imul
and
stos
mov
jecxz
xchg
pop
jo
pop
cmp
cmp
cwtl
sbb
inc
popf
pop
daa
mov
les
daa
adc
and
adc
jae
jbe
xchg
xchg
js
orl
stos
jae
aad
push
mov
xchg
sub
sbb
iret
fmull
lahf
std
and
ds
mov
outsl
push
jle
xor
shll
xchg
xor
push
and
and
loop,pt
pop
popa
mov
and
mov
pop
or
test
push
add
aad
xor
je
and
jg
sub
sbb
out
jne
mov
mov
test
and
repnz
imul
sar
mov
cmpsb
subl
fsubl
mov
stc
fstp
mov
hlt
cmpsl
or
mov
dec
movsl
pop
lea
lret
mov
sub
das
mov
mov
mov
jno
jbe
mov
js
push
fistpl
repz
ret
mov
xor
daa
mov
pop
xchg
inc
jp
lods
inc
outsl
rcrl
pop
sub
mov
out
jb
inc
orb
lret
int
lods
jmp
pop
std
in
icebp
fstpt
mov
or
cmpsb
repz
pop
push
push
and
ret
es
jne
mov
xor
xor
out
mov
dec
push
jecxz
mov
ja
mov
dec
cmc
adc
aaa
loopne
popw
mov
xchg
pop
lea
pop
lret
outsb
cltd
push
shrb
inc
out
rcl
mov
jns
sbb
aam
pop
cmp
stos
adc
cmpsl
adc
enter
popf
xchg
xor
out
inc
sub
and
adc
jmp
lret
cwtl
repnz
and
dec
popa
lea
or
stos
xlat
shrb
mov
jae
mov
out
movsl
andb
xchg
clc
cmp
push
inc
out
xor
cli
jnp
pop
xor
sub
frstor
mov
cwtl
sbb
mov
or
jge
sbb
or
out
adc
cli
xor
test
and
xor
pop
push
cli
adc
xchg
xchg
out
enter
xor
pop
enter
push
dec
mov
iret
inc
pop
xor
push
xor
fnstsw
jg
fcomps
neg
dec
mov
stc
push
clc
sbbl
lds
add
popf
nop
call
sub
add
aaa
imulb
cmp
mov
sub
fildl
adc
loopne
outsl
int
jle
out
xchg
mov
mov
cmp
mov
sbb
int3
movsl
jge
popf
xlat
ja
and
mov
push
cmpsl
sahf
mov
cmp
stc
inc
stos
call
pop
sbb
popf
loop
xlat
sbb
adc
and
and
sub
dec
jnp
out
ja
hlt
add
popa
fninit
cmp
in
into
gs
shlb
in
mov
fwait
mov
add
jmp
push
std
mov
dec
jl
insl
mov
cmp
mov
push
negb
mov
sti
clc
sti
add
mov
ljmp
ja
and
and
push
outsl
and
xchg
data16
inc
rcrl
clc
das
xchg
add
outsb
push
inc
adc
sbb
call
sbb
iret
sub
les
pop
jge
sbb
or
mov
add
or
mov
mov
mov
test
stos
inc
insl
xor
fsubrs
dec
in
loopne
pop
sub
or
stos
sahf
rcrb
pop
data16
sbb
imul
and
adc
ret
outsl
pushf
mov
out
xor
sbb
pop
xor
loopne
push
loopne
aaa
into
std
sbb
ss
push
inc
jge
lahf
into
inc
mov
push
in
pushf
adc
push
jo
divl
and
and
mov
aas
dec
outsb
cmpsl
sub
add
mov
mov
aas
and
mov
inc
setle
in
cmp
jecxz
lret
imul
sbb
sub
sub
int
xchg
pop
dec
pop
xor
or
mov
jb
ljmp
idiv
xchg
pop
jno
jmp
push
xchg
xchg
fdivrs
in
push
mov
fucomi
shrl
dec
pop
mov
stos
mov
adc
jmp
in
and
and
lods
sbb
mov
repnz
stc
jl
sub
xchg
pop
cmp
scas
sbb
pop
je
stos
loope
fists
lcall
mov
mov
ret
mov
jmp
je
sti
mov
cmp
inc
shl
xchg
out
push
lcall
subl
test
or
jl
jb
xor
mov
push
and
dec
push
int3
data16
xchg
mov
aas
xor
cmp
fs
hlt
and
add
jle
dec
push
add
add
and
bound
inc
jnp
sti
stos
stos
movsb
outsl
fcomps
cmp
lock
or
fs
ds
mov
push
mov
stos
jle
std
das
scas
mov
cld
mov
sub
test
es
popa
gs
in
lods
shl
sbb
adc
icebp
cmp
mov
mov
and
xchg
loopne
sbb
popa
xchg
test
int
outsb
xor
pop
sbbl
sub
pop
repnz
ss
jmp
xchg
or
inc
and
jmp
mov
sbb
cmp
mov
or
and
in
clc
cmp
xor
mov
push
dec
cmp
push
out
rcrl
jl
and
stc
sub
hlt
imul
ss
mov
mov
ret
sbb
xchg
jge
jge
xchg
aaa
adc
daa
push
dec
cmp
inc
fcmovnb
imul
imul
dec
das
test
loopne
jb
dec
push
test
dec
pop
sarb
mov
lods
push
push
push
mov
call
scas
lret
or
pop
xchg
xor
leave
or
dec
loope
ret
ds
scas
daa
mov
mov
ror
jae
mov
sub
notl
push
out
dec
or
pmulhuw
outsl
insl
pop
cmp
in
bound
jns
cmc
sub
pop
push
cmpsb
add
push
imul
lret
push
popa
pushl
push
xchg
pop
xchg
push
jp
jecxz
jge
inc
push
pop
sti
enter
loope
dec
repnz
inc
in
or
cmpsl
jo
enter
push
pop
inc
adc
or
hlt
imulb
mov
subb
das
mov
js
cmp
or
fcompl
aaa
imul
fwait
out
mov
xchg
sahf
sarb
loop
adc
mov
pop
dec
stos
and
mov
call
pop
mov
xor
loop
adc
adc
daa
push
loope
dec
xchg
xor
xor
ret
idivb
dec
test
and
lock
jns
push
sub
rorb
sbb
lods
je
repnz
cmc
or
mov
lcall
or
out
add
jns
outsb
outsl
pop
sub
int
push
mov
jne
data16
rcrl
leave
stos
mov
dec
jl
bndstx
add
sbb
sub
and
orl
xchg
xchg
pop
push
test
jg
shl
pop
jg
cmp
popf
sub
mov
movsb
inc
add
xchg
add
xchg
mov
push
mull
negl
mov
mov
mov
call
cmp
xchg
cmc
ds
test
addl
xor
outsl
mov
inc
adc
jne
xchg
add
rcll
das
jno
ja
aaa
mov
jne
xor
daa
mov
enter
push
mov
push
fbstp
jg
rol
repnz
and
fidivs
xor
sbb
jmp
stos
cltd
icebp
mov
mov
add
inc
dec
jge
lock
or
xchg
mov
jnp
movsl
sti
and
lods
mov
lcall
mov
pop
gs
popa
adc
insl
shl
xor
adc
mov
mov
cld
subl
xor
repnz
mov
lret
in
dec
inc
sub
lea
inc
fdivl
ljmp
push
lods
xor
or
andb
mov
push
loope
add
sbb
cmpl
bound
jl
sub
adc
loopne
push
jp
sti
or
stc
dec
test
xchg
adc
mov
mov
rorl
mov
xor
ret
pop
cld
test
xor
adc
inc
notb
movsl
jmp
fsubrs
jecxz
lods
sbb
sbb
out
aam
push
xor
mull
shr
fwait
or
fisttps
sub
movsb
pop
lea
shrl
mov
mov
aam
pop
sahf
cmp
jbe
nop
jge
fwait
inc
pusha
sub
mov
arpl
data16
loop
imul
in
pushl
add
and
enter
insb
sub
shlb
push
mov
cmc
in
cmp
outsl
lahf
cmp
cmp
or
push
sub
in
ljmp
push
aad
stos
aam
jmp
inc
js
sti
push
add
sarl
aad
xchg
neg
jp
js
fists
mov
adc
mov
dec
sub
push
xchg
xlat
ljmp
fiaddl
xor
rcr
shll
gs
outsl
pop
mov
dec
out
lea
inc
xor
insl
stos
push
add
xor
add
cmp
out
aad
clc
inc
sbb
push
cmp
adc
xor
jge
icebp
shll
andl
and
aaa
hlt
push
xchg
mov
imul
out
imul
adc
imul
ja
add
push
inc
scas
imul
gs
pop
adc
outsl
addb
jo,pt
enter
fs
lahf
fwait
pop
insl
mov
dec
or
mov
rol
fdivrl
jg
nop
fdivp
pushf
xor
aad
cmp
hlt
test
iret
pop
js
imull
sti
clc
pop
pop
push
xchg
cmp
push
xchg
or
gs
fiaddl
lods
stc
loopne
pop
lods
loope
push
lret
pop
jg
push
pusha
pop
xchg
negb
subb
in
sbb
leave
pop
in
mov
and
mov
xor
pop
nop
mov
xor
cmp
fwait
jp
jnp
mov
jecxz
cmp
cmpsl
loop
into
dec
and
pushf
aaa
cs
in
xchg
dec
andl
sti
pop
add
mov
mov
and
lahf
lods
outsb
dec
sahf
mov
push
mov
add
xor
lods
inc
mov
movl
lcall
popf
cs
lcall
xor
and
sarb
jecxz
mov
test
aam
fwait
inc
neg
mov
mov
fbstp
fbld
xchg
sub
mov
pop
sbb
out
fbstp
sub
mov
mov
push
pop
jg
sub
popf
call
movsl
ret
out
jb
ds
cmp
mov
cmp
cmp
cmpsl
dec
popf
sbb
jle
ret
lret
scas
shl
push
cld
pushfw
jae
loop
and
pop
rcrb
pop
push
nop
notl
cld
fcmovnbe
or
xor
popa
xlat
dec
sbb
or
jnp
ret
add
stos
and
add
sbb
ret
mov
pop
movsb
data16
and
inc
call
jns
xor
bound
push
adc
or
mov
mov
push
mov
movsl
mov
add
sbb
mov
jmp
outsl
and
imul
mov
fbstp
add
cmpsb
movsb
pop
ljmp
add
enter
jo
iret
loop
mov
inc
mov
or
cmp
sub
in
pop
loopne
daa
lods
sbb
jle
clc
cmp
dec
cli
pusha
sub
mov
ret
call
push
xchg
jb
mov
cmp
jecxz
mov
and
mov
stos
xor
leave
and
stos
push
out
cmp
sbb
dec
andl
out
jne
add
mov
mov
or
pop
jg
and
cmp
cwtl
push
jmp
push
xchg
in
push
xchg
int3
into
or
scas
mov
call
lcall
movsl
fcomi
cli
addr16
or
in
pop
cmp
rcrb
sti
je
call
mov
xchg
inc
and
mov
sbb
les
mov
bound
in
cs
add
gs
cmp
leave
movsl
int3
xchg
push
push
imul
aad
dec
les
shlb
sti
outsl
into
popa
test
cmp
add
cli
mov
or
popa
or
int3
dec
inc
scas
sub
xchg
dec
inc
fdivrl
mov
jo
ret
pop
mov
notl
and
addl
aad
scas
je
jp
inc
cmp
loop
or
mov
or
sub
add
inc
cmp
fdivrs
in
ret
dec
sahf
push
lea
lcall
js
mov
movsl
int
pop
and
scas
cmpsb
cmp
dec
int
mov
rcrl
dec
cmc
push
shl
aad
cmp
push
and
cmp
nop
mov
xchg
pop
std
and
subl
or
jbe
loopne
mov
mov
imul
addr16
sub
dec
cli
or
pop
pushf
cmc
cmp
push
or
jl
xlat
mov
test
inc
or
cltd
std
jae
enter
sbb
cli
addb
and
lock
aas
mov
gs
mov
cld
dec
repnz
ret
mov
xchg
mov
mov
and
adc
scas
jnp
popa
rcrl
je
sbb
test
aad
xchg
fsts
stos
scas
push
jmp
pop
or
pmulhw
add
fmul
sub
test
les
mov
push
mov
bound
addl
mul
roll
out
aam
std
push
rcrb
add
sub
mov
outsb
xchg
xor
mov
cmp
or
lods
push
xchg
pop
or
or
add
inc
ss
dec
push
adc
jae
add
int
lea
sbb
inc
lahf
hlt
aaa
mov
mov
test
movlps
icebp
lahf
wrmsr
cmp
outsl
and
xor
ja
mul
cmc
out
add
mov
fs
pop
mov
jl
mov
pushf
sbb
cwtl
jae
das
lock
cmp
xor
int
or
je
outsl
std
push
adc
mov
repnz
sarl
xchg
push
clc
sbb
inc
dec
out
test
insb
out
sbb
out
mov
mov
xor
push
xchg
push
lods
cmpsb
ja
xchg
and
jo
adc
mov
or
mov
pop
push
inc
jb
or
test
jnp
stos
push
gs
fildll
cmp
shr
dec
xchg
mov
mov
sub
rolb
mov
bound
and
ret
jmp
push
fadds
and
adc
lret
dec
lock
lahf
cs
aaa
lds
dec
cwtl
andl
stos
inc
int
cli
data16
xchg
pop
lods
jl
std
xchg
pop
lret
icebp
mov
in
movsl
jp
in
and
jnp
ss
or
pop
ds
shrb
das
add
movsb
adc
popf
and
mov
xor
sbb
jno
push
out
jg
or
imul
jmp
pop
sti
cs
ficomps
push
cmp
cmpl
rclb
es
mov
pop
loopne
push
push
pusha
dec
popa
push
and
and
push
inc
push
ljmp
aam
scas
movsb
ljmp
jns
stos
mov
jbe
mov
xor
ja
mov
sarb
dec
int3
and
test
int3
stos
pop
jno
ja
nop
cmp
jne
in
mov
and
cmpsl
gs
cmp
gs
jge
push
dec
or
and
ja
std
int
and
icebp
cli
adcb
int3
pop
pop
adc
loope
add
js
dec
add
pusha
movsb
lret
mov
adc
or
cmpsb
push
mov
mov
jp
push
daa
ret
push
add
mov
push
imul
in
sbb
test
loopne
mov
mov
add
inc
push
jge
or
cmpsl
sbb
inc
dec
insb
fdiv
adc
test
ss
sahf
xchg
imul
push
movsb
xor
dec
loope
push
es
inc
test
mov
and
popf
in
add
ds
xor
fcompl
lret
push
xlat
arpl
push
add
rcrl
adcl
aaa
jnp
inc
push
add
xor
daa
outsl
dec
mov
jmp
pop
fnsave
push
adc
mov
xchg
add
jecxz
data16
xor
loopne
repnz
in
arpl
fldt
les
pop
out
movsb
fimull
xor
je
add
out
mov
and
lods
sub
into
add
mov
xor
ljmp
arpl
jmp
sub
inc
push
lcall
push
sbb
mov
enter
and
xchg
lcall
sbb
sub
std
cltd
pop
xor
popf
cmp
push
jmp
stos
stos
rol
add
ret
bound
movsb
imul
mov
lods
xchg
add
dec
roll
ss
mov
lods
push
popa
or
pusha
sbb
push
in
enter
jae
int3
mov
addb
repz
xor
movsl
cltd
test
dec
lcall
jns
es
jne
fbld
outsl
mov
adc
sbb
cmp
xchg
cmp
ror
test
stos
jnp
loop
sahf
jns
cwtl
xchg
insl
cltd
pop
pop
add
in
pop
and
and
push
insb
nop
scas
cltd
pop
cwtl
inc
xchg
call
push
ljmp
adc
rcll
mov
lcall
cmpsl
fdivrp
jp
test
aam
add
jmp
je
sub
imul
lret
addr16
jg
jmp
add
mov
cmp
xor
aas
mov
mov
repz
cltd
shrl
sub
cmpl
xchg
ret
repz
test
out
ja
idiv
fcomi
sbbb
pop
or
test
sbb
jecxz
enter
pop
std
jl
or
scas
ret
outsb
pop
jp
inc
fiadds
fimuls
test
in
loope
sbb
sahf
lock
pop
push
xlat
ficoml
cmpsl
mov
cli
adc
cmp
mov
jns
add
cmc
out
negb
push
pop
xor
and
cmp
mov
adc
aam
pop
push
das
test
add
cld
cmp
imul
scas
dec
mov
outsl
pop
xchg
imul
loope
push
dec
aad
cmpsl
jle
and
jmp
mov
xlat
dec
sbb
adc
cld
mov
lds
lds
data16
js
mov
punpcklwd
inc
mov
mov
daa
arpl
int
cwtl
lods
xchg
aad
cmp
add
xchg
jmp
iret
or
ret
mov
inc
je
out
adc
ja
idivb
mov
les
sbb
gs
jmp
adc
loope
in
imul
dec
jmp
cs
push
sbb
daa
mov
sbb
xor
mov
imul
add
in
xchg
sarb
mov
inc
push
xor
cmpsb
int3
pop
push
add
jae
cli
inc
add
cmc
lahf
cmpsb
in
dec
outsl
xor
pusha
lock
les
mov
ds
mov
cmp
sbb
dec
or
push
mov
xchg
dec
dec
scas
repnz
imul
mov
and
ja
sti
aam
test
movsb
in
out
rcrl
and
mov
js
rcrb
add
es
push
pop
pop
sarb
sub
aad
push
mov
adc
inc
sub
into
repnz
add
push
sub
sbb
sbbl
mov
mov
and
mov
int3
sbb
ret
or
sti
sub
or
push
out
xchg
mov
inc
in
cmp
jbe
nop
push
or
inc
sub
and
push
and
lret
pop
cmp
movsl
pop
jl
fdivrs
test
repz
add
cmpsb
icebp
das
repnz
fs
dec
test
test
xor
mov
xchg
lock
andb
jge
out
push
sti
mov
retw
jnp
cmp
and
push
insl
mov
imul
aas
dec
scas
pop
xchg
xchg
fmulp
fwait
adc
jno
lret
shrl
pushf
jae
inc
add
pop
jp
adc
pop
mov
mov
into
push
cmp
xlat
lds
mov
ret
jle
in
push
cltd
pop
loope
sbb
fwait
lcall
mov
fistpll
xlat
jno
xchg
jp
add
xchg
addr16
pop
mov
repz
movsl
insl
mov
jl
sarl
stos
loopne
je
add
mov
jp
mov
mov
clc
push
mov
or
hlt
es
pusha
cmc
cltd
dec
das
shll
xchg
in
and
xchg
ljmp
mov
cmp
dec
push
xor
cli
outsb
jns
fnstsw
inc
cmp
push
or
movsl
adc
push
bnd
insl
imul
pop
sub
pop
sub
ficomps
mov
int
loope
jnp
jnp
mov
inc
inc
lcall
cmp
into
pop
inc
mulb
out
push
and
lock
jne
jmp
out
fidivrl
pop
dec
inc
insb
mov
xchg
cmp
xor
inc
add
cmp
mov
sbb
adc
push
cmp
pusha
push
adc
push
xchg
out
jmp
sahf
jnp
stc
sub
enter
push
ljmp
das
push
inc
movsb
dec
movsl
push
xlat
pop
mov
xchg
sub
dec
cmp
mov
js
adc
cmpsb
lcall
lret
adc
xchg
fists
repz
fldt
je
into
jbe
int3
rorb
pop
shlb
cmp
aaa
jbe
movsb
pop
lcall
imul
push
jns
jl
push
and
push
jo
loop
outsl
xorl
lcall
mov
mov
mov
in
jb
hlt
jmp
lods
ss
add
sarl
rcrl
sbb
cmc
xor
addr16
or
adc
es
loopne
test
fucomp
adc
insl
pop
push
adc
loopne
dec
imulb
decb
out
jb
lcall
or
aad
ss
aam
in
dec
orl
or
push
jno
mov
jno
leave
lcall
mul
pop
add
dec
pop
inc
xor
stos
jg
ret
leave
dec
in
pop
dec
repnz
mov
inc
pop
push
loopne
in
out
mov
add
dec
mov
xor
sbb
lret
jp
int3
cmp
pushf
xchg
mov
adc
mov
daa
sub
aas
adcb
insb
xor
ss
clc
pop
cltd
mov
mov
push
loope
mov
pop
sub
adc
out
in
aam
fistpl
outsl
dec
mov
loopne
or
arpl
cmp
pop
jo
mov
pop
mov
push
xorl
rclb
sub
cmp
pop
lret
inc
lds
lea
std
scas
mov
inc
loopne
mov
sahf
dec
dec
filds
and
minps
xbegin
jae
das
arpl
mov
adc
push
ds
arpl
sub
rolb
pop
loopne
lret
out
fwait
pop
ret
adc
pop
xchg
iret
adc
push
arpl
add
out
ljmp
dec
fstpl
adc
fisttpll
pushl
int3
repz
jmp
test
das
push
das
inc
xor
pop
std
inc
inc
pcmpgtb
rol
imul
pop
cmp
bound
outsl
outsb
js
addr16
mov
cmp
xchg
leave
je
xor
jl
shl
insb
stos
lret
push
in
push
mov
lret
ret
add
repnz
out
cmc
mov
sbb
or
outsb
es
jns
movsb
movsl
imul
into
xchg
ds
pop
iret
xor
inc
xor
mov
cmpb
bound
jge
pop
out
movntps
pop
int
push
fisttpll
idivl
xor
pop
xchg
inc
dec
add
dec
lea
sub
inc
adc
or
and
das
nop
ljmp
lea
aam
aad
test
aaa
push
adc
or
mov
pop
inc
cmp
xchg
mov
lcall
ds
imul
idivl
xchg
scas
jmp
xchg
cmc
loop
jae
testb
sbb
lahf
jbe
push
daa
mov
sbb
and
sbb
sub
jns
jo
jbe
incb
lea
cltd
outsl
xchg
ja
jmp
ficoms
outsl
mov
mov
cmp
xor
mov
mov
jo
test
filds
cmp
mov
fiadds
stc
js
add
mov
push
inc
call
data16
xchg
jne
mov
xchg
out
stc
mov
daa
daa
mov
inc
aam
hlt
mov
sub
adc
pusha
sbbl
lahf
adc
or
sub
jb
xchg
out
mov
mov
jnp
cmp
gs
int
adc
hlt
push
mov
xchg
gs
leave
or
sub
jne
out
mull
insb
inc
loopne
hlt
ss
xchg
pushf
mul
loopne
popa
lock
dec
mov
inc
popa
sbb
outsb
in
cmp
je
xor
push
or
outsb
fwait
fwait
lret
fucompp
and
sub
popf
rcrl
arpl
nop
push
test
dec
pop
jecxz
add
xchg
scas
stos
movb
jg
lret
dec
fidivrl
xchg
mov
aas
pop
mov
movsl
shll
sbb
ret
mov
out
adc
out
sbb
jo
fdivl
or
push
xchg
dec
lcall
fucom
cld
jno
in
fldcw
pushf
xchg
pop
sbb
pop
mov
stos
rolb
shlb
xlat
or
gs
out
adc
sbb
testl
dec
js
xor
cmc
mov
xor
pop
push
and
rcrb
adc
mov
movsl
mov
fcmovu
sbb
sti
mov
data16
cmp
dec
fisttpl
sbbl
or
jbe
cli
inc
mov
ds
inc
incb
xor
jb
out
xchg
or
xor
sbb
js
stos
jp
mov
cs
and
jns
pushf
shll
data16
inc
push
xchg
cmp
stos
push
jno
xor
lahf
pop
adc
les
std
xlat
fsubl
cmp
mov
cmp
cmp
adc
mov
pushf
pop
mov
and
icebp
jo
popa
jecxz
mov
es
stos
pop
mov
cli
in
pop
inc
dec
or
clc
mov
jo
subb
cmp
js
xor
sti
iret
dec
cmp
aad
bound
push
fcomip
ss
rsqrtps
or
or
mov
ret
add
sbb
pushf
dec
mov
cmpsl
cmp
in
push
int
lods
repz
mov
xlat
mov
or
insl
jge
outsl
lods
push
in
cmp
jmp
pusha
bound
and
push
subb
xchg
bound
lods
addr16
out
jno
jl
sub
rclb
je
stos
sub
js
xchg
or
or
inc
es
inc
loopne
ss
in
je
rcl
cmp
stc
dec
mov
mov
xor
pop
xchg
mov
aaa
add
in
sti
sbb
xchg
test
rcl
dec
inc
fadds
jb
mov
jne
xchg
test
faddl
or
adc
xchg
push
sbb
mov
outsb
call
sub
inc
pop
dec
int3
fdivs
mov
cmp
and
push
je
mov
jle
cs
pop
adc
cs
xor
xchg
nop
adc
andl
je
or
and
into
pop
das
push
roll
lret
mov
sbb
test
stos
ss
mov
mov
test
scas
mov
add
fldln2
and
sbb
pop
lret
mov
mov
mov
rcrl
in
popf
dec
cmpsl
mov
jns
push
shrb
imull
outsl
fisubrs
popf
mov
js
add
inc
mov
dec
es
test
inc
test
movsb
sbb
sub
push
add
mov
cmp
mov
daa
cltd
push
xchg
insl
pop
loope
imul
cmpsl
cmp
fdivs
mov
sub
ficoms
pop
lea
sub
hlt
mov
add
scas
orl
outsb
adc
pop
in
fmuls
test
outsb
xchg
hlt
sub
sub
in
mov
repz
or
mov
cmp
xor
in
outsl
fsubp
cmpsb
clc
jo
inc
cmc
xor
loope
popa
push
cmc
adc
pop
iret
jb
inc
add
push
mov
fcmovb
rcr
mov
sub
and
iret
pop
adc
push
xor
sbb
dec
cltd
mov
mov
dec
mov
insl
xchg
push
jle
insb
cmpsl
jle
rcrb
stc
into
dec
mov
mov
call
jge
cmpsl
and
add
sub
fstpt
cmp
push
cld
cmp
push
xchg
xchg
test
lahf
loopne
lret
aam
repz
stc
int3
pop
daa
and
int
mov
repz
adcl
rorb
mov
rcrb
cmp
jg
xchg
ds
pop
shlb
bsf
cmp
shrb
cwtl
pop
push
sbb
push
mov
call
push
pop
inc
jb
sbb
cmp
mov
int
and
mov
push
pop
and
dec
xchg
mov
cld
cmp
je
in
das
mov
jg
add
mov
cld
inc
mov
pop
mov
je
fidivl
lock
out
fcoml
and
shlb
jg
dec
xor
pusha
decl
xlat
insb
arpl
sti
pop
cmp
aaa
bound
cmp
fsubrs
xor
or
orb
sub
push
inc
bound
scas
ss
loope
out
leave
mov
xlat
inc
push
sbb
addb
cld
stos
push
push
imul
out
lcall
xchg
jl
cmpsl
adc
daa
inc
inc
mov
push
xlat
mov
xorl
insb
out
sub
data16
insb
pop
cmp
subl
push
or
shll
cltd
add
lret
jmp
xchg
aad
jge
sbb
shr
cmp
xchg
sbb
lock
lods
cs
xlat
xchg
mov
addr16
and
jo
xor
cmp
and
push
ret
xchg
push
push
imul
cli
decb
jnp
roll
into
pushl
mov
pusha
mov
in
xlat
or
pop
inc
rcrl
lods
cwtl
push
fidivrl
aam
rcrb
mov
out
push
push
sub
jns
test
pop
inc
jb
gs
ffreep
cmp
add
testb
das
movsl
dec
loop
shrb
clc
jno
xchg
pop
enter
rcrl
jnp
pop
aaa
call
icebp
mov
cmp
mov
push
xchg
lds
ret
adc
cs
xlat
jp
push
jmp
add
add
jae
shrb
aaa
test
and
pushf
sub
cmpsb
push
fwait
xor
test
sbbl
cltd
sub
dec
pop
ljmp
add
jno
mov
out
es
xchg
pop
add
sbb
scas
dec
mov
dec
cmp
cmp
dec
or
jbe
mov
sahf
loope
dec
and
nop
cld
dec
fdivrs
das
sbb
ss
mov
sub
jno
xlat
rcl
hlt
cli
or
pop
lea
in
dec
out
push
mull
aad
insl
xor
dec
fists
xchg
fs
dec
cmp
mov
mov
jo
loope
pop
jmp
sbbb
xchg
fldcw
jo
aam
cld
jo
stc
scas
mov
int3
test
loope
aas
lcall
jnp
leave
cmpsb
and
mov
je
pop
xor
test
sub
pop
add
das
insb
cmp
aam
orl
inc
mov
std
add
mov
sti
movsb
add
xor
xchg
jae
cmpsl
aam
fildll
pop
nop
fnstenv
pop
test
sbb
sub
mov
adc
idivl
mull
pushf
mov
adc
lock
out
mov
stos
mov
mov
int3
out
out
pop
outsb
inc
and
cltd
add
cli
cli
sbb
jns
sub
sub
sub
call
sbb
or
ficoml
xlat
inc
jl
push
in
jnp
sbbb
jne
mov
pop
lcall
push
orl
clc
or
aad
lea
lret
and
add
out
enter
mov
jecxz
mov
adc
clc
aaa
insl
and
pop
or
or
and
adc
out
adc
mov
adc
jb
push
hlt
xor
sahf
dec
test
cmpsb
lods
ja
fwait
mov
jno
mov
cmp
and
xchg
test
shrb
nopl
mov
jb
pop
cltd
movsl
jecxz
add
rcll
mov
pop
in
scas
jno
fwait
je
lret
xchg
mov
int3
rcll
lret
lods
movsl
adc
mov
test
fdivp
sbb
jecxz
pop
push
mov
push
inc
jl
sub
xchg
pop
push
inc
addr16
rolb
xor
cmp
add
lret
adc
in
hlt
lret
push
imul
pop
cmpsb
fs
or
fwait
leave
push
leave
mov
cmpsb
mov
jns
mov
mov
cmp
push
stos
push
pop
adc
mov
movsl
mov
adc
flds
addr16
push
dec
jle
data16
sub
inc
ja
or
shlb
inc
mov
fmull
repnz
inc
adc
arpl
pop
rclb
push
ss
and
out
or
mov
sub
loope
fstpt
xor
fidivrs
es
fdivs
pushf
pushf
daa
adc
movsl
hlt
jl
mov
gs
mov
xchg
mov
mov
sbb
ffree
inc
inc
adc
add
push
arpl
outsb
push
das
fwait
imul
mov
adc
stos
in
fisttpl
jmp
push
fldt
fs
lods
clc
cmpsl
rcr
pandn
fsubr
mov
gs
mov
mov
lea
push
jp
pop
dec
xchg
mov
push
inc
div
xchg
nop
fsubp
pop
or
repz
lcall
fbld
cmp
mov
mov
push
lea
fwait
jmp
test
lock
or
mov
cltd
xor
lods
ret
pop
shrb
jle
mov
stos
mov
adc
mov
and
cli
dec
sbb
inc
lret
into
xchg
in
pop
sbb
mov
or
pop
out
sub
add
dec
add
ret
fmull
pop
ljmp
mov
mov
fwait
or
icebp
or
jp
xchg
and
sbb
or
mov
cmpsb
sti
in
in
mov
sub
cmpsl
sar
xchg
xor
sbb
sti
mov
sub
hlt
call
mov
xchg
xlat
dec
les
pusha
xchg
iret
mov
mov
or
xlat
or
inc
inc
ret
mov
adc
mov
push
shlb
pop
xbegin
out
add
cmp
out
xchg
dec
xor
sub
push
fs
inc
dec
inc
imul
and
sub
jb
jg
jno
pushf
popf
xlat
cmp
arpl
mov
mov
sbb
adc
imul
out
stc
sbb
mov
push
push
faddl
loope
mov
std
mov
fstpl
in
xor
jmp
ljmp
sub
ret
imul
addr16
bound
xor
dec
pop
fs
cmpsl
jb
imull
ds
dec
jle
hlt
pop
rclb
mov
lret
test
dec
push
lods
out
out
cmp
shrl
sbb
xlat
pop
bound
xor
push
push
cmc
aas
sub
outsl
cmpsb
mov
and
pop
test
loopne
jle
fisubrl
arpl
mov
or
insl
ss
fistpl
sbb
and
push
and
in
leave
pop
cmp
cmp
lahf
addb
pop
bswap
or
add
stos
lsl
in
mov
inc
mov
aam
mov
test
clc
adc
mov
aad
imul
dec
js
ds
inc
mov
lods
pop
sbb
bound
adc
xchg
fistl
sbb
movsl
sbb
ds
das
pop
adc
stc
cmp
xchg
sbb
xor
lds
mov
mov
pop
cmp
dec
icebp
fcomip
cmp
jg
clc
push
pop
adc
imul
and
aad
mov
xchg
popa
fdivl
iret
cmpsl
sub
mov
push
mov
cmp
scas
shlb
mov
xchg
roll
mov
in
sub
bound
stc
arpl
insl
es
std
adc
or
jmp
fdivrl
mov
sbb
rorb
cld
mov
mov
mov
dec
push
xchg
or
jle
or
in
in
in
fnstenv
or
hlt
clc
push
mov
repnz
or
push
popa
push
fs
pop
movsb
mov
jp
xlat
cmp
pop
rorb
mov
mov
lock
adcb
sahf
mov
fsubrs
pop
sub
call
xchg
mov
mov
mov
sub
test
push
inc
xorb
outsb
or
add
push
pop
jmp
dec
jb
add
pop
sub
xchg
dec
or
sbb
outsl
jmp
icebp
adc
xlat
and
pop
add
loop
idivl
pop
ret
jae
cs
lcall
sar
mov
pusha
and
inc
enter
cmc
imul
stc
iret
filds
rcll
fiaddl
or
stc
sbb
fwait
or
out
pop
enter
jg
gs
fs
mov
add
mov
mov
xchg
adc
dec
sub
les
aad
pop
into
adc
push
cmp
dec
push
les
jae
mov
sbb
mov
mov
scas
inc
mov
mov
sbb
pusha
cmp
or
sbb
cwtl
add
arpl
mov
jge
pop
sahf
mov
mov
jl
sbbb
sub
je
ljmp
jns
lahf
dec
insb
insl
aad
or
push
push
xchg
dec
aam
jmp
inc
or
rclb
or
add
inc
xchg
cmp
pop
xor
jb
dec
fwait
in
les
dec
imul
dec
mov
movsb
andb
jnp
rcll
clc
aaa
lret
ret
andl
and
iret
daa
mov
lock
scas
testb
stc
flds
data16
jp
test
fisubrs
sub
xor
and
testb
pop
xor
enter
fdivl
cmp
cltd
inc
and
cmpl
fsubl
pop
jo
add
sar
jge
roll
adc
add
sub
lods
movsb
jne
inc
movsb
push
ljmp
je
push
imul
aas
sbb
aam
loop
test
imul
vmovmskps
pusha
data16
arpl
andb
aam
or
hlt
cmp
in
out
jno
mov
in
xchg
bound
jns
sub
jmp
int
popf
sub
out
loopne
pusha
pop
mov
pushf
xor
pop
ret
in
arpl
push
sbb
inc
test
dec
pop
add
rolb
stc
lahf
into
out
pop
add
sub
ror
iret
sub
mov
int
fcmovne
sub
fdivrl
push
stos
lds
movsb
aas
cmpsl
mov
pop
xlat
and
cmp
std
xchg
pop
and
nop
sbb
sbb
clc
inc
jmp
ret
test
mov
mov
clc
mov
cwtl
loopne
adc
xchg
fidivl
bound
jge
lahf
ficoms
mov
lds
cmc
mov
mov
ja
fnsave
push
mov
fstpl
push
push
outsb
xor
pop
and
pop
lret
pop
or
bound
cld
dec
lahf
std
mov
adc
sbb
inc
and
loopne
fs
popa
sub
sbb
addr16
push
pop
repnz
pop
push
nop
dec
push
sub
mov
sbb
lahf
test
ss
mov
and
hlt
lret
dec
pop
in
loope
push
fidivs
cmp
mov
xchg
sahf
nop
cld
mov
aaa
mov
out
mov
ret
cwtl
shrb
out
loop
pop
sub
adc
push
fcoml
pop
xor
add
xchg
outsl
shr
aad
inc
xchg
lods
sub
mov
out
mov
add
mov
push
popa
jns
dec
fstp
das
daa
fucomp
dec
shl
dec
stos
shr
mov
jl
mov
aad
cmpsl
pop
push
xchg
sbb
pop
sub
cmp
js
cmp
and
or
in
stos
mov
shrl
mov
xor
or
insl
or
addr16
push
mov
addr16
push
sarl
mov
xor
and
test
cmp
push
dec
pop
adc
cld
cmp
adc
inc
xchg
ret
bound
cmp
dec
pop
fildll
mov
push
loopne
dec
xchg
mov
pop
enter
push
dec
in
data16
pop
xchg
sub
rorb
pop
ljmp
mov
cltd
int3
pop
mov
pusha
repnz
adc
in
or
aas
shlb
adc
xchg
push
xor
movsl
cmc
xchg
out
outsb
push
cld
das
and
adcl
fs
out
mov
scas
or
pusha
cltd
cmp
dec
lods
cmc
or
outsl
lods
xchg
jno
xor
pop
xchg
inc
lcall
movsb
cmp
popa
pusha
dec
adc
push
fs
mov
sub
call
js
out
lods
inc
mov
clc
mov
lods
cmp
out
mov
sbb
ficompl
pop
xchg
or
add
cmpsl
sub
stos
jb
call
das
sbb
mov
and
mov
bound
les
inc
mov
adc
xchg
aaa
stos
sbb
mov
xor
out
aas
inc
ja
adc
xchg
movsl
notl
xchg
inc
fdivrp
cltd
push
loopne
inc
fdivl
dec
adc
adc
int
ficoms
cmp
icebp
adc
testb
pop
and
imul
jmp
push
xor
adc
out
aam
mov
add
enter
scas
test
popa
lods
ljmp
sub
lret
pop
cmp
sub
xor
mov
jl
shl
xchg
add
fs
pushf
out
iret
pushf
fucomp
scas
xor
stos
dec
into
lahf
xor
sbb
lods
and
fisttpll
dec
xchg
adc
mov
pop
jo
cmp
xchg
test
inc
cmp
push
sub
lds
pop
adc
dec
stc
jge
leave
add
mov
adc
push
jb
loopne
movsl
mov
fistpll
dec
jmp
cmpsl
mov
insb
dec
fdivrp
add
add
and
cmp
pop
xchg
mov
cmp
add
divl
or
dec
add
add
dec
cmpl
es
xor
mov
or
mov
cli
orb
pop
outsl
mov
push
mov
filds
leave
push
frstor
bound
sahf
ret
mov
mov
pop
and
push
sbb
rcr
es
scas
inc
stos
xchg
rclb
imul
ja
adc
xor
pop
jo
insl
mov
mov
stos
xchg
cmp
icebp
jl
mov
mov
cmpsl
outsb
xor
stos
mov
mov
xor
adc
int
mov
cli
cmpsb
jae
lcall
mov
cmp
enter
stos
call
dec
dec
cmc
push
xlat
gs
sub
rcll
ds
out
pusha
adc
gs
xor
jns
fidivrs
push
xchg
xor
fistps
lock
ficompl
sti
aam
in
mov
mov
mov
jmp
push
inc
out
imul
cmc
idiv
popf
out
lock
lahf
int3
clc
jne
push
mov
jle
push
in
bswap
out
push
shrl
stos
xchg
scas
cmpsb
xchg
jb
adc
imul
xchg
movsb
lock
insb
negb
sarl
loop
mov
je
mov
or
mov
push
pop
mov
mov
dec
or
pop
mov
cli
mov
ret
xor
push
inc
dec
fstps
xchg
xor
jmp
imul
adc
std
xchg
out
lret
add
es
fstp
mov
out
loopne
scas
es
lods
or
cmp
jge
add
int
jbe
xchg
cs
adcb
sbb
lds
adc
movsb
fsubs
or
mov
mov
pop
mov
mov
jmp
xchg
push
fmuls
into
mov
cwtl
popa
insb
lret
fsubr
imul
fsubl
mov
scas
xlat
js
jg
fcmovnbe
aad
push
sub
sbb
adc
out
xor
outsb
out
push
sbb
cli
pop
mov
xchg
push
push
cltd
lea
repz
bound
jnp
jge
xchg
adc
loop
popf
pop
sub
sub
push
movsb
ficoml
jl
mov
outsb
test
sub
jle
sub
jbe
xorb
mov
fmulp
das
or
jnp
xor
mov
xchg
negl
loopne
xchg
fsts
loop
inc
mov
pop
cld
scas
jecxz
rolb
add
in
pusha
or
insb
add
testl
dec
and
mov
or
faddp
lock
mov
xor
fisttpll
ja
notw
push
xchg
fsts
sbb
dec
fidivrl
lds
xor
loope
cmc
je
push
pop
stc
in
mov
mov
adc
int
sbb
pop
aaa
inc
inc
or
push
popl
xchg
pop
jns
ss
push
sub
testl
adc
cs
loop
repz
insb
xor
decl
frstor
mov
js
fnstcw
xchg
aam
mov
out
sbb
imul
std
and
mov
clc
into
mov
sub
mov
dec
inc
into
dec
and
ds
sub
inc
push
adc
lock
mov
jbe
fisubl
and
lea
mov
fstl
bound
or
jmp
xchg
jbe
dec
test
out
stos
hlt
add
test
jae
leave
in
loope
add
mov
lods
mov
add
iret
xchg
or
sbb
jle
hlt
fbld
push
call
ljmp
movsb
jg
fbstp
xchg
adc
adc
mov
mov
mov
jo
or
adc
jecxz
out
or
add
loope
cmp
inc
fs
push
sbb
and
shrl
gs
cwtl
leave
fildl
pop
cltd
aad
inc
dec
aaa
mov
in
ret
test
sbb
in
dec
lret
dec
mov
inc
jmp
or
jae
lret
ja
add
inc
jecxz
iret
out
and
dec
imulb
inc
mov
push
orb
xchg
cmpl
lcall
push
stc
sbb
xor
loop
movsb
sub
int3
push
into
add
xchg
or
mov
lret
xor
push
mov
mov
repz
xchg
andb
inc
mov
mov
out
lock
loop
xor
and
adc
fs
ss
out
jne
mov
sbb
pusha
fists
insb
mov
jbe
les
rcrb
push
outsb
cmp
fsub
mov
mov
sub
js
xchg
cmp
cmp
jl
adc
lea
fnsave
mov
fnstcw
push
mov
out
xorb
cmp
hlt
sub
pop
cmp
xor
or
jne
mov
push
mov
outsb
pop
daa
mov
pop
push
cld
add
dec
push
push
adc
pop
mov
pop
test
and
pop
jb
dec
loop
mov
outsl
out
enter
adc
out
daa
pop
pop
push
mov
jbe
pop
lret
xchg
idivb
lahf
jae
dec
sbbl
data16
xchg
or
loopne
sub
out
scas
xchg
inc
dec
xor
stc
jb
xor
pop
sbb
gs
lret
in
jmp
addr16
gs
ja
add
fidivrl
sub
mov
leave
aam
mov
xor
add
mov
adcl
aas
stos
xor
dec
mov
mov
ret
call
lea
aam
mov
mov
xchg
lret
xchg
xchg
je
lret
into
jecxz
push
aas
push
xorl
test
and
fstp
divb
popa
enter
icebp
adc
clc
ret
lods
jle
es
jno
inc
int
dec
fildl
hlt
inc
xor
cmp
cli
negb
and
dec
mov
cmp
fsubrs
jge
xor
orl
neg
stos
insb
stos
insl
inc
in
inc
movsb
addr16
sti
push
pushf
pop
popa
lds
and
cmc
pop
dec
jns,pn
or
or
xchg
xor
mov
adc
fs
mov
push
push
cmp
add
ror
rorb
and
call
pop
add
or
pop
inc
push
ret
mov
pop
shrb
mov
fsubl
adc
mov
out
or
sarl
xor
pop
ret
call
xchg
loop
dec
cmpsb
or
test
flds
pop
adc
popa
xchg
aas
lcall
ret
stos
jo
sahf
fcmove
shl
subl
pushf
lds
pop
fisubrl
mov
push
cmc
movsl
dec
xor
add
xchg
cs
xchg
xchg
mov
mov
das
dec
lret
mov
add
mov
cmp
sbb
jecxz
pop
sub
mov
aad
xor
push
iret
jp
adc
lcall
and
aad
jp
cmp
mov
lds
xchg
jp
stos
addr16
sbb
add
mov
or
sbb
or
stos
lahf
je
jge
pop
add
jbe
rorl
sub
pop
movsl
nop
pop
lea
pop
stos
or
cmp
imul
cmp
loopne
sarb
dec
popa
xchg
mov
inc
and
jge
loop
jle
jge
inc
jns
test
mov
add
test
inc
nop
pop
push
or
dec
push
jl
mov
xchg
adc
int
shlb
outsl
movsl
jno
call
call
mov
repz
cwtl
lahf
pop
xchg
fisubrl
imul
mov
data16
xchg
inc
gs
add
inc
cmp
scas
push
push
outsl
negl
or
or
push
idivl
mov
stos
fisubrl
xchg
adc
ja
es
jbe
sub
insb
jp
mov
mov
cltd
cs
cmp
out
icebp
hlt
jnp
mov
test
jnp
repnz
xchg
sub
int3
iret
cmp
jnp
xlat
or
test
push
scas
xor
push
mov
fs
push
cs
test
sub
sbb
push
ret
repnz
loop
mov
push
adc
jo
mov
jb
mov
rcll
push
adc
subl
dec
mov
mov
dec
dec
or
push
cmp
or
pushf
add
mov
rclb
aas
cmpsl
push
test
lcall
out
cli
jnp
pop
movsb
sbb
sub
sub
sub
jecxz
stos
or
push
mov
xor
add
ret
xor
push
fsts
and
jmp
mov
mov
push
idivb
inc
lea
lret
insl
jmp
dec
test
aam
push
xor
test
adc
mov
mov
xor
pop
mov
addr16
sbb
in
cmc
mov
loope
inc
mov
inc
jge
nop
lods
jmp
or
add
aad
data16
push
pop
pop
mov
jmp
fwait
aam
xor
lret
sbb
je
mov
mov
push
add
mov
mov
sub
mov
xor
cmc
sub
inc
add
dec
repz
add
ds
mov
dec
aad
inc
xchg
mov
stc
call
sub
sbb
inc
pop
mov
adc
jecxz
in
test
adc
popf
lds
cmpl
pop
adc
fidivrl
pop
cmp
or
jns
adc
out
and
fadds
mov
sbb
cmpsb
dec
std
fcmovbe
push
outsl
mov
jae
idivb
sahf
loopew
std
bound
out
movsb
mov
lds
ret
mov
cmp
call
mov
dec
aam
pop
xlat
jae
add
bts
lahf
sub
ja
dec
sub
cmc
mov
hlt
jb
mov
cmp
push
daa
out
cs
mov
push
dec
pop
add
ljmp
push
clc
lahf
or
inc
adc
repnz
ljmp
cld
push
fistl
pushf
mull
insb
pop
out
dec
mov
add
xor
into
jecxz
mov
cmp
ret
js
mov
sti
inc
xor
ja
push
pop
xor
jo
mov
mov
push
popa
mov
cmp
je
mov
push
sbb
mov
mov
test
jo
enter
push
pop
hlt
out
and
push
insb
jbe
mov
dec
stc
jmp
push
and
subl
decl
lods
aam
cmp
adc
add
adc
inc
test
mov
add
cmp
or
push
out
mov
mov
insb
js
sbb
or
add
xor
jb
add
fdivrl
mov
sub
pop
mov
cmpl
add
inc
mov
inc
adc
pusha
div
push
out
cltd
jecxz
mov
jbe
xor
and
jmp
mov
test
xchg
add
clc
mov
les
fbstp
mov
lods
subb
or
sub
andl
sbb
pushf
pop
out
mov
sub
pop
es
xchg
mov
in
aaa
inc
inc
test
mov
stos
and
fstl
aaa
or
test
or
daa
rorb
fsubrl
cmpsb
fistps
loopne
xchg
pop
mov
je
push
movsl
sbbb
and
jp
fsubr
push
mov
push
movsl
lods
popf
mov
lock
loope
cmp
cmp
and
and
rorl
shlb
fwait
icebp
inc
daa
mov
sbb
lret
mov
xchg
dec
mov
sub
nop
lods
xor
outsb
scas
stos
stos
xor
int3
dec
add
mov
push
movsb
aam
add
cli
mov
aad
arpl
dec
sub
fcompl
test
testl
sarl
jge
mov
pop
cmc
jae
cmc
add
jnp
cmpsl
imul
lods
mov
mov
fnstcw
and
sahf
adc
cmp
cmp
shl
popf
xchg
cmp
cmp
adc
mov
dec
icebp
adc
test
jmp
xchg
shl
fwait
jns
xchg
xor
ret
pop
sub
push
repnz
call
add
jno
daa
repz
mov
jb
pop
cmp
mov
sarl
mov
jns
pop
fwait
or
popf
cld
stos
pop
push
data16
and
ss
ret
sbbl
push
push
mov
add
cmpsb
stc
loopne
jns
cmpsb
add
imul
add
or
orb
pushf
movsb
pop
arpl
xchg
stos
vunpcklps
adc
dec
jl
sub
mov
sub
pop
sub
push
mov
jg
xor
push
lods
and
add
add
rol
jno
stos
rclb
adc
ss
jmp
sbb
fstp
pop
testl
sbb
testb
push
push
shll
pop
hlt
or
adcb
and
sbb
sub
cld
add
lods
repnz
jne
sbb
je
jge
iret
sub
mov
jg
aas
xchg
xchg
add
shl
out
ret
sub
fcoms
aam
das
push
popf
ja
clc
daa
cmpsl
lret
jmp
mov
pop
popa
mov
daa
insl
pop
mov
in
sub
aaa
sbb
dec
add
in
sub
incl
sbb
es
jmp
xor
jl
push
ss
pop
js
int
pop
mov
daa
jbe
fiadds
mov
xchg
out
scas
cmpsb
pop
lods
jae
into
sbb
dec
push
or
xchg
jb
jge
sbb
outsb
aas
pop
daa
adc
cmp
rcll
pop
mov
xlat
hlt
lock
imul
sbb
inc
aad
pop
push
xchg
inc
jp
loope
jns
popf
andb
pop
cwtl
xchg
mov
pop
pop
cld
adcl
adc
es
sarb
mov
jbe
mov
pop
push
mov
movsl
cwtl
sbb
xchg
mov
mov
push
fldcw
xchg
sti
xchg
and
mov
or
rol
out
and
sti
adc
mov
imulb
jno
inc
mov
sub
mov
jbe
mov
pop
xlat
loopne
jmp
jnp
mov
push
sbb
cmp
call
decb
push
movsb
mov
pop
xchg
ds
cli
cmp
enter
cmp
loop
mov
jg
mov
fidivs
mov
and
stc
int3
pop
pop
int3
pop
dec
mov
dec
lret
hlt
jae
xchg
cmc
call
scas
add
je
addb
inc
outsb
lods
scas
pop
xchg
cmp
cmc
and
pop
repnz
imul
jecxz
cmp
pop
pop
xchg
cwtl
push
push
enter
lret
call
out
sbb
inc
inc
jb
push
xchg
movsb
inc
xor
xchg
ljmp
xchg
mov
lods
add
dec
call
push
or
sub
sti
push
mov
xlat
imul
pop
fcomps
cmp
orb
mov
inc
xchg
call
dec
sbb
or
add
sub
fdivs
or
dec
mov
and
das
jl
nop
out
push
rolb
inc
in
sub
mov
sub
std
pop
sahf
jmp
add
out
cmpl
call
mov
jl
jnp
stos
xchg
je
nop
shlb
xorl
dec
xor
mov
fsubrs
icebp
pop
test
in
loope
mov
aad
pop
or
mov
loope
pop
lret
xchg
dec
roll
rclb
ret
outsb
xchg
adc
pop
sub
cmp
mov
lock
scas
rcrl
xchg
jle
inc
mov
push
xchg
sub
and
dec
xor
sarl
mov
inc
xor
pop
int3
xorb
xchg
add
cmpl
add
adc
in
icebp
xor
orb
cmc
push
ds
dec
mov
add
add
aad
cmp
cmp
js
xor
call
lcall
int3
sahf
fisubrs
stos
sbb
sub
mov
shl
pop
sub
popa
mov
cmp
mov
pop
pop
fistps
imul
roll
xchg
mov
outsb
and
rcl
mov
xor
dec
scas
and
sbb
sbb
cmp
jns
fmul
iret
inc
sub
xchg
push
lea
cltd
ret
gs
xchg
push
sub
add
xor
es
lds
icebp
inc
mov
in
dec
jns
xlat
cmp
push
popa
xor
shl
mov
outsb
test
psrlq
mov
rolb
test
ljmp
jo
cmp
clc
fs
lock
out
sub
int3
pop
out
jae
jne
jg
add
sbb
out
icebp
pop
adc
or
lock
lods
mov
sub
cmpsl
mov
mov
mov
cmp
inc
out
dec
js
and
insb
lods
scas
ret
inc
fstpl
dec
lods
or
mov
sub
pop
in
cmp
addl
pop
pop
lods
jmp
mov
mov
mov
ret
mov
daa
pop
pop
fsubrl
mov
out
cmp
or
jbe
and
in
mov
mov
ljmp
je
cmpsb
cmp
test
jbe
lret
fildll
lret
mov
push
addr16
je
push
stos
adc
decb
fsubrs
sub
adc
sbb
push
or
jl
sbbb
xor
in
dec
inc
in
adc
in
int3
dec
scas
fldcw
lea
add
mov
mov
movsb
push
sbb
or
ficoml
test
jae
mov
or
adc
mov
inc
or
inc
test
and
repz
sti
std
cmp
das
rorb
dec
sbb
push
push
mov
mov
lahf
mov
pop
mov
pop
sub
test
sub
jbe
jmp
mov
das
add
call
aad
add
cld
nop
mov
scas
insl
cmpsl
cmp
shrb
cmp
mov
or
or
test
xor
pop
arpl
out
xlat
or
lods
leave
test
jmp
push
shlb
adc
and
lds
xor
jg
dec
ss
or
push
xor
or
imul
xor
lds
cmp
cmp
and
das
xchg
pop
ss
cld
lock
into
jns
cmp
scas
jne
xchg
std
out
push
mov
sub
dec
push
sarl
pop
icebp
push
or
call
jg
sub
xchg
orl
xchg
enter
xchg
adc
xchg
inc
out
stos
aaa
inc
adc
add
call
push
cmp
int
sub
mov
jecxz
jne
ret
pop
mov
stos
stos
dec
fidivs
ss
and
jmp
and
mov
push
enter
or
sub
adc
mov
sti
xchg
inc
or
hlt
sahf
dec
jns
pop
push
addb
lea
jge
jp
subl
inc
outsb
mov
jbe
push
mov
push
xchg
repz
pop
inc
and
lock
adc
pop
sub
loopne
cmp
enter
into
push
push
aas
xchg
movl
dec
arpl
out
inc
stos
lock
fistpll
mov
and
jo,pt
ljmp
lret
dec
jmp
icebp
dec
pop
je
out
into
or
xchg
jge
loop
sti
ljmp
es
mov
jne
or
js
enter
repnz
push
jbe
mov
xchg
dec
adc
push
fiadds
call
and
aaa
rcr
or
repz
jl
fdivrs
int
gs
sub
call
int
add
cmp
orb
loope
xorl
cli
clc
jae
inc
dec
imul
adc
push
mov
jl
and
or
push
shl
aad
ficompl
and
xor
int
sub
mov
mov
test
dec
sbb
jns
out
arpl
xchg
mov
out
cmp
cmp
in
cmp
inc
cmc
jbe
pop
cmpsl
jl
mov
orps
sti
xor
call
xchg
add
inc
std
jg
imul
adcl
mov
pop
repz
cmc
fsubr
lock
movsl
sbb
sarb
pusha
dec
adc
arpl
jns
popf
jnp
dec
int
outsl
push
test
in
arpl
fldl
cmp
scas
jbe
dec
mov
xchg
sub
mov
cmp
cmp
lea
sbb
dec
mov
mov
push
sahf
mov
jmp
test
add
out
lret
xchg
sarl
out
mov
shrl
aam
lea
adc
jno
sbb
cwtl
push
mov
pop
xor
jp
mov
jne
ret
shll
xlat
xchg
dec
xchg
fimuls
adc
cwtl
jnp
add
dec
mov
jmp
jmp
cmp
jns
mov
dec
add
fistpll
mov
ret
shlb
lock
mov
aad
push
pop
inc
mov
scas
in
arpl
imul
daa
and
mov
pushf
in
mov
loop
adc
pop
jge
mov
jge
push
mov
sbb
insb
jle
in
adc
push
jns
jle
mov
das
nop
scas
cmpsl
or
dec
movsb
fwait
jmp
cwtl
add
pop
cmc
or
es
in
jg
fcmovnu
xchg
pop
hlt
mov
pop
xchg
cmpsb
xor
push
daa
and
add
push
mov
inc
out
loopne
adc
sti
cmp
ds
fisubrs
fstp
push
cmc
mov
ret
enter
insl
call
mov
mov
loopne
jecxz
imul
push
or
inc
sbb
jo
mov
cmp
into
push
mov
inc
push
sbb
pop
fisubs
push
xchg
mov
leave
cmpsl
push
adc
mov
jp
push
nop
fnsave
or
mov
test
xor
iret
dec
inc
lahf
out
push
leave
out
enter
xchg
ror
push
imul
xor
movsl
fstl
pop
in
scas
outsl
cmp
cmp
xor
iret
push
add
fs
adc
mov
mov
fisubrs
jno
or
mov
pop
xchg
in
push
repnz
xor
inc
iret
data16
xor
xchg
mov
sarl
add
pop
jns
iret
shlb
aas
dec
int
in
clc
and
fldenv
jge
lahf
xchg
or
cmpb
add
repz
dec
imul
and
add
scas
dec
sub
xor
cmpsl
in
mov
or
cmp
pop
xchg
insb
pop
nop
loope
insb
and
jge
fisttpll
fcomps
add
aas
and
xor
aaa
mov
mov
clc
xchg
xor
jnp
pushl
scas
lahf
notb
mov
insb
cli
mov
xor
iret
lcall
dec
add
xchg
sti
xchg
les
dec
lret
cmpsb
xchg
jmp
cli
push
xorb
subb
mov
adc
push
mov
loope
dec
adc
or
mov
gs
xor
stos
fdivrl
push
xor
push
fidivrs
neg
les
mov
xchg
mov
jmp
fwait
repz
mov
adc
inc
mov
push
enter
and
mov
ja
cmp
xchg
xchg
scas
xchg
push
arpl
leave
push
mov
adc
jl
les
push
xchg
pop
mov
push
mov
mov
push
push
pop
iret
cmp
xchg
dec
inc
movsb
fbld
jbe
sub
mov
pop
inc
xchg
imul
mov
jnp
adc
ss
dec
cmp
js
sbb
lea
or
lahf
ss
loop
hlt
es
dec
imul
sbb
fcomps
push
push
data16
inc
ret
test
popa
aas
mov
sub
dec
inc
enter
adc
loopne
fwait
jns
iret
xor
push
lods
push
sbb
sbb
xor
inc
mov
cmp
scas
push
push
cmp
stos
sub
cmp
rcrb
add
cmp
imul
int
leave
in
mov
imul
pushf
shll
or
test
enter
aaa
fwait
sbb
mov
test
sbb
movsl
push
lea
dec
fcom
inc
dec
js
daa
jmp
lea
sub
push
rcll
aas
cld
add
jns
or
push
mov
lds
lock
enter
call
pop
fisubl
int
mov
sub
jbe
aad
lea
jae
std
aad
lds
rol
rcrl
stos
xchg
push
stc
mov
add
fs
xor
cmp
and
and
in
lods
and
jg
test
cmp
lds
jmp
iret
fdivl
ja
cmp
cmpsb
jmp
pop
xchg
insl
push
scas
ret
sub
lret
jno
sub
mov
or
jbe
cmp
rcrb
jo
les
out
xlat
xchg
popf
xor
and
fwait
loope
mov
insb
or
ret
mov
outsb
cmp
mov
pop
aaa
cmpsb
or
scas
xor
mov
push
in
dec
mov
and
sub
cmp
aam
dec
xchg
int
bound
mov
and
mov
out
int3
scas
pop
test
das
pop
dec
repnz
jnp
cmp
arpl
sbb
loope
push
jb
jnp
inc
jle
cli
aaa
sbb
cmc
jae
jae
test
imull
mov
scas
out
xor
xor
loopne
sbb
adc
and
inc
stos
fld
mov
xchg
icebp
mov
mov
push
outsb
and
les
adc
jg
push
fsubl
neg
mov
test
jg
or
push
mulb
and
in
hlt
dec
xchg
inc
jp
insl
std
movsb
xchg
inc
loope
cli
stos
and
aaa
jbe
clc
cmp
adc
sahf
jmp
outsl
and
adc
pop
les
enter
jl
js
push
and
add
aad
clc
popf
fisubrl
jae
aam
test
lret
adcl
in
xlat
pop
jae
dec
jmp
fdivp
cmpsl
mov
cs
in
xor
push
or
sub
sbb
push
and
mov
scas
shll
in
daa
shrb
pop
pop
enter
mov
fisttpl
pop
fidivrs
dec
int
inc
push
and
or
pop
int
jmp
inc
adc
nop
mov
filds
mov
aaa
dec
push
fstpl
jae
push
cmp
rcrb
in
lcall
adc
push
cmpl
dec
mov
outsl
pop
dec
rorb
mov
cmc
adc
popa
sbbl
fimuls
xor
mov
icebp
out
mov
insl
dec
inc
cwtl
lods
pop
pop
stos
push
xchg
daa
push
add
fadds
push
pop
lods
cli
jnp
cli
add
das
out
sub
and
loope
mov
insl
aad
mov
es
dec
or
pop
mov
add
mov
dec
lds
ret
push
ds
sti
imul
xchg
mov
test
stos
fisubrs
ret
mov
rcrb
cmp
pop
movsb
int3
out
into
xor
aam
lahf
cli
rcl
mov
cmp
pushf
jle
ljmp
mov
out
out
nop
sub
mov
inc
mov
pop
sbb
sarl
ljmp
adc
or
xchg
pushl
cmp
stos
xchg
mov
xor
dec
arpl
cmpsb
ja
lret
jnp
leave
ds
ljmp
xor
push
rclb
pop
adc
rorl
outsl
stc
push
xchg
pop
dec
xlat
bound
scas
retw
lock
xchg
lret
inc
call
cmpsb
mov
nop
dec
sub
into
mov
push
test
adcb
dec
dec
ret
or
and
pop
mov
and
sub
mov
push
iret
xor
add
mov
dec
in
cmpb
fistps
loop
xor
dec
sbb
cmpsb
cs
pop
rcrb
sub
xchg
xchg
push
cmp
jge
subl
sub
in
in
into
test
mov
mov
mov
shrb
mov
loopne
jl
mov
arpl
adc
cli
cmc
pop
dec
imul
pop
push
mov
dec
bound
scas
ret
enter
xor
fdivrs
leave
adc
and
mov
int3
add
rep
push
gs
rclb
call
dec
inc
aaa
cwtl
push
mov
push
je
hlt
icebp
stc
shrl
xorb
inc
or
or
add
enter
movsb
scas
or
stos
inc
inc
subb
mov
add
mov
xor
cli
imul
loopne
ffreep
mov
dec
mov
dec
fisttps
adc
dec
icebp
inc
pop
mov
dec
in
movsb
add
stos
jmp
sub
test
cmc
xor
lahf
fsts
push
test
out
jae
lea
shr
movsl
add
cmp
or
movsl
pop
sub
inc
shlb
or
jle
orl
xchg
leave
mov
decl
mov
xchg
lret
cmc
dec
push
mov
jno
or
push
push
add
imul
push
std
fnstenv
fisubl
shrl
sub
out
sysenter
les
aaa
test
stos
sbb
and
stos
mov
push
test
test
arpl
sahf
insl
pop
push
outsl
stos
dec
mov
fildll
pop
test
hlt
lea
mov
adc
xchg
scas
repnz
inc
lret
imul
and
cmp
pop
cli
pop
or
popf
fisttpl
ds
cltd
arpl
icebp
lahf
testl
xor
dec
mov
test
arpl
cltd
rclb
fcomps
test
orl
or
push
jg
mov
jp
ret
mov
shlb
ror
cmp
shr
jge
fwait
xchg
addl
jnp
jns
push
or
test
fwait
dec
dec
test
add
jecxz
mov
es
jne
sub
mov
jl
int3
xor
and
xor
inc
fsubrl
jl
cmp
and
mov
adc
sarb
jo
adc
je
adc
aad
or
cmp
bound
cmp
lock
test
sti
push
xchg
testb
test
mov
mov
pop
scas
out
xor
inc
loop
pop
jns
mov
iret
xchg
lea
adc
out
test
push
push
mov
add
testl
mov
jecxz
lret
pop
add
mov
loope
iret
add
icebp
cmp
fidivs
jge
lret
pop
pop
std
out
push
cmp
jbe
inc
push
fcompp
fsubr
xor
popf
cmc
pop
pop
push
cmpsl
mov
and
sub
jp
cmp
inc
dec
adc
fwait
xor
xchg
inc
xchg
test
sbb
sahf
jae
jb
pop
adcl
push
lock
mov
or
mov
imul
push
lea
les
faddp
mov
xchg
int
add
mov
mov
lret
add
mov
outsb
icebp
test
jae
mov
lret
cmp
mov
pop
ret
rolb
repz
adc
dec
repnz
mov
mov
and
push
mov
mov
pop
jmp
jbe
push
popf
mov
leave
icebp
mov
scas
ss
cwtl
test
and
xcrypt-ecb
cmpsl
ficomps
icebp
cmpb
fsubl
and
lock
and
cmp
shlb
lret
push
scas
mov
mov
sub
test
cmpsl
adc
int3
mov
sti
in
sub
insb
fwait
cmp
jecxz
adcb
dec
dec
lcall
mov
cmp
dec
push
popf
xchg
jle
shll
and
fs
jp
dec
fidivrl
sti
int
mov
lret
into
movl
addr16
and
lds
dec
ficomps
nop
dec
adc
inc
jmp
out
inc
repz
stc
scas
pusha
xchg
in
inc
int3
loop
mov
ja
mov
outsb
mov
dec
test
fisttpl
ret
adc
dec
cmc
jbe
add
pop
hlt
arpl
mov
out
arpl
pop
rorb
xlat
cmp
out
test
and
js
loopne
arpl
mov
mov
mov
mov
es
pop
sti
jg
lods
ret
add
fisubs
fidivs
gs
in
xchg
aam
and
popf
sub
xor
jbe
xor
mov
jl
ror
movsl
pushf
push
decb
mov
imul
insb
xchg
scas
jge
mov
pop
mov
xor
gs
pop
sub
mov
add
stos
rorb
loop
jmp
jecxz
sbb
mov
xor
lea
jo
and
xchg
lret
push
jno
sub
mov
out
nop
mov
ss
pop
or
mov
mov
into
adcl
ljmp
sbb
mov
pop
jne
cli
shlb
pusha
push
lock
testl
lds
sub
sub
call
sub
test
push
add
jb
or
pop
aaa
push
cld
mov
fstl
icebp
mov
xchg
cltd
sbb
add
invlpg
and
popa
push
push
pop
sbb
imul
sub
out
mov
and
or
cmp
mov
lcall
clc
xchg
les
mov
lock
fndisi(8087
lods
inc
sbb
popf
xchg
js
adc
into
cmp
jl
and
xchg
cli
adc
stos
push
or
call
cmp
int3
fidivrs
push
cmpsl
adc
sub
js
cmp
call
mov
pop
lahf
in
ret
add
loop
mov
dec
inc
push
xor
dec
js
int
mov
or
sbb
sbb
mov
add
sub
push
out
jnp
lahf
sub
fisubrs
dec
pop
int
notl
sbb
movsb
jae
outsb
out
sti
mov
mov
ss
dec
fwait
adc
scas
and
fcomip
dec
gs
adc
push
orb
data16
jnp
into
mov
adc
iret
cmc
test
mov
mov
mov
out
pop
pop
push
or
stc
and
int
movsl
dec
fs
filds
jno
push
jl
pop
imul
push
jecxz
ja
mov
popf
shrb
pop
jp
or
xlat
or
push
sbb
cmp
imul
xchg
sbb
dec
inc
sbb
lds
mov
pop
fdivr
jb
aas
push
push
jno
dec
cmp
push
in
inc
dec
xor
dec
scas
or
push
inc
inc
imul
lret
insb
inc
xchg
lods
jg
nop
imul
xor
es
push
xchg
pop
arpl
and
cmpsl
call
mov
inc
and
cmp
adc
cmpsl
mov
fistpll
dec
nop
sbbl
scas
outsl
mov
push
gs
fiaddl
sarb
in
rcll
push
cmp
mov
stos
outsb
inc
repnz
ljmp
sbb
ficompl
or
loope
mov
movsl
or
repnz
mov
aad
imul
and
cld
xor
jno
mov
fsts
mov
sub
xchg
fwait
sbb
pop
out
out
jecxz
inc
push
movsl
pop
adc
cld
in
iret
pop
movsb
xchg
cmp
stc
push
push
pop
rcrb
mov
ljmp
mov
add
sub
push
jecxz
lret
mov
pop
hlt
push
dec
inc
mov
ljmpw
push
test
cmp
and
sahf
xchg
repnz
stos
mov
imul
aas
imul
xchg
popa
je
push
imul
test
jmp
mov
mov
mov
sbb
cmp
mov
out
imul
pushf
inc
bound
bound
mov
sub
enter
push
mov
push
ss
xchg
out
xchg
sbb
mov
sbb
test
adc
lret
loope
mov
scas
jae
sub
mov
ficoml
fs
aad
inc
in
rol
inc
add
mov
jbe
or
adc
shll
xchg
clc
mov
xor
cmp
sub
pop
inc
xchg
loope
sbbl
in
lds
add
adc
aaa
aam
mov
or
cmpsb
ss
nop
rclb
int3
fcoml
and
jp
sbb
mov
in
or
rcrb
or
jnp
aad
js
dec
test
jbe
ret
push
mov
sahf
push
or
mov
aas
fcomi
aaa
dec
jno
movsl
lea
scas
sbb
test
lret
jle
xchg
dec
add
in
sbb
jecxz
outsb
mov
nop
ja
arpl
mov
pop
push
into
or
lods
add
and
pop
rorl
xchg
pop
push
inc
and
pushf
fimull
xchg
or
sub
scas
adc
outsl
js
inc
repnz
dec
mov
sub
cmp
test
jbe
jnp
push
push
fmull
cmc
bnd
jo
mov
inc
xchg
and
in
fisttpll
movsl
sbb
scas
jne
push
mov
test
int
je
mov
push
std
mov
stos
xchg
lock
lret
out
adc
lret
popf
dec
daa
sub
cltd
pop
into
jp
or
mov
mov
imul
insb
out
popa
aad
or
in
ljmp
mov
sub
pop
and
stos
xchg
adc
out
adc
sub
dec
jo
sub
ja
gs
inc
inc
mov
hlt
orb
adc
add
dec
lahf
ja
push
cmc
faddl
mov
fimull
cli
movb
mov
cs
icebp
jne
fwait
adc
lods
xor
out
or
loopne
mov
cmpl
rol
adc
push
mov
and
adc
sti
ss
fidivrs
dec
subl
inc
adc
cmc
xor
movsl
call
mov
push
clc
dec
sti
or
dec
xchg
call
insl
int3
or
clc
dec
ja
xchg
push
adc
jne
stos
inc
adc
mov
sbb
add
xor
cmp
fs
push
test
fistpl
in
insb
push
jb
push
out
adc
das
jge
loop
inc
jo
pop
outsb
mov
icebp
je
mov
mov
or
sub
frstor
sub
stc
imul
das
xchg
ret
dec
outsb
into
xchg
pop
cmc
xchg
sahf
cmp
in
push
and
cmp
in
rcr
bswap
fsubs
prefetcht1
cmpl
jo
clc
xchg
mov
sbb
mov
sbb
inc
cmpsb
stc
mov
pop
xor
xor
push
dec
lcall
and
mov
add
out
xchg
adc
push
mov
inc
mov
or
hlt
leave
or
or
jmp
mov
cmpsl
mov
push
adc
ficoms
lock
xchg
cmp
xor
pop
mov
lret
cli
inc
popa
mov
sub
xor
outsb
mov
pop
fildll
call
sub
mov
push
jg
xor
dec
stc
cmp
sub
divl
cmp
adc
into
pop
jmp
mov
push
repz
push
fwait
add
xor
es
and
and
and
cmp
out
push
jmp
fistpll
push
out
imul
mov
pushl
xor
jns
gs
call
dec
icebp
add
fnstenv
push
fwait
leave
insb
fs
inc
jbe
ljmp
sarb
jmp
int3
in
out
lret
mov
ljmp
vcvtsi2sdl
mov
inc
das
and
ficoms
jp
insl
mov
sbb
stc
shr
stos
jnp
push
pop
shll
aam
rcll
int
je
adc
loop
pop
jns
cmpb
push
adc
in
aaa
cmp
jne
mov
xchg
cmpsb
in
jae
inc
mov
push
sub
ja
xor
mov
jge
pop
pop
jecxz
int3
scas
lcall
fisubl
mov
adcb
insl
inc
cmp
mov
jecxz
fcom
or
jmp
mov
jns
shrb
dec
dec
dec
lods
and
adc
add
add
dec
pop
in
pop
push
push
pop
xor
icebp
mov
andl
ret
mov
mov
push
mov
pop
sub
in
enter
dec
adc
mov
mov
jmp
ja
fmuls
cmp
je
mov
xchg
jle
outsl
or
xor
push
andl
rorb
cwtl
cwtl
insb
daa
test
outsl
dec
fs
mov
push
pop
icebp
push
fbstp
push
jae
insl
cmp
xor
sahf
pop
rcl
aad
xchg
sub
adcb
icebp
and
push
cltd
mov
popa
xchg
bound
and
imul
pop
add
ffreep
pop
dec
lock
mov
lahf
sub
or
nop
negb
mov
cmp
xorb
iret
shl
lcall
lds
adc
outsb
pop
popa
in
sub
jnp
sbb
fwait
dec
mov
jne
xchg
outsb
fsubrl
fldenv
pop
cmc
mov
ja
in
xor
push
xchg
clc
add
jnp
outsb
inc
jbe
js
pop
sbb
or
test
iret
adcb
mov
popa
cli
into
mov
psrlw
mov
in
daa
add
sti
into
sbb
xchg
rcll
data16
arpl
daa
push
notb
pop
or
out
cmpsl
jb
mov
pop
cltd
outsb
test
fmull
sbb
ja
mov
push
add
sbb
push
leave
mov
mov
xor
loopne
int
call
pop
add
insb
jbe
or
inc
es
in
jns
cmp
add
js
jnp
sbb
ljmp
pushf
jb
or
ret
fmuls
loope
loope
mov
les
imul
add
cmp
inc
mov
or
cmpsl
mov
ss
dec
sbb
test
pop
pop
test
or
jle
and
push
insl
lock
dec
jecxz
mov
cmpsb
fisubrl
xchg
pop
ret
aad
les
pop
mov
notb
nop
mov
push
rcll
pusha
aad
push
or
fiadds
call
imul
data16
xor
mov
out
les
inc
push
mov
cmp
je
stc
mov
pop
dec
mov
ffreep
rcll
inc
mov
push
ficompl
mov
or
addb
andb
xor
or
inc
rorb
add
jne
mov
dec
pop
xor
and
pop
mov
imul
mov
xchg
or
test
or
and
bnd
aad
mov
iret
std
sahf
and
mov
dec
into
std
push
mul
push
sbb
dec
repnz
sti
ss
popf
xor
and
jo
and
xchg
inc
fimuls
popa
mov
ljmp
iret
fistpll
dec
into
sbb
jb
int3
shll
pop
sub
jmp
mov
cmp
jns
push
xchg
call
cmp
lret
stos
mov
inc
jne
lret
in
jge
sar
pop
cmp
repnz
in
cmp
data16
fs
xchg
aad
adc
test
es
xchg
mov
cwtl
daa
xchg
mov
jbe
adc
push
fsubrl
mov
sub
cld
out
pop
add
js
sub
pop
or
imul
sahf
movsb
out
mov
pop
test
incb
fsubr
mov
mov
mov
inc
or
pop
rorl
arpl
sub
push
cmpsl
pop
xchg
movsb
add
fistpl
loop
adc
data16
xchg
call
sbb
dec
mov
sbb
xlat
adc
mov
frstor
movsb
adc
cmpsb
ret
leave
int
or
dec
pop
inc
mov
push
adc
int
rorl
in
andb
mov
push
in
xor
mov
lsl
ds
rclb
imul
jo
mov
dec
in
adc
fildll
data16
push
into
or
mov
jnp
mov
push
jb
inc
sti
lea
cwtl
xchg
shlb
lock
popf
pop
or
mov
xchg
das
push
vpaddb
mov
or
lret
inc
lret
mov
cmp
scas
ljmp
pop
data16
inc
dec
idivl
shrl
sbb
sub
cmp
int3
dec
mov
mov
out
ficoms
in
push
mov
mov
cmp
jge
insl
fdivrs
stos
fbld
jo
std
push
mov
movsb
shll
lret
insb
lods
in
popf
mull
xchg
dec
fchs
movsl
mov
lahf
les
out
sub
pushf
push
and
cmp
adc
sbbb
sbb
and
sub
aam
push
dec
or
or
cmpsb
loopne
orl
pop
mov
ljmp
out
or
ret
and
iret
subb
ljmp
inc
inc
movsb
mov
jno
cmp
sbb
mov
dec
and
int
insb
das
jge
sti
xchg
mov
xor
sahf
pop
ret
je
sbb
lock
loope
cmp
testb
push
data16
mov
sbb
dec
int3
les
lock
mov
mov
pusha
or
jg
ljmp
ljmp
push
loope
gs
or
adc
mov
int
inc
imul
push
jg
ficoml
xchg
jle
or
jno
das
adc
movsl
rolb
jo
inc
inc
lock
lds
ja
xchg
adc
mov
pop
icebp
addl
xor
shlb
add
cmp
push
jge
pop
inc
pop
mov
sub
xchg
movsb
push
in
pop
xchg
pop
rolb
pop
inc
push
push
adc
and
dec
rorl
or
ds
into
fcoml
xchg
cld
inc
push
push
sub
inc
sbb
inc
stos
movsl
ds
push
xchg
stos
stos
shld
cmp
adcl
out
arpl
out
xchg
sbb
pushf
hlt
dec
insl
add
stc
cmp
sub
jg
xor
mov
jg
lret
arpl
push
dec
dec
pop
dec
test
jne
mov
sub
jo
mov
cmc
flds
cmp
and
jp
in
xchg
fsubp
cld
pop
jle
push
aaa
jmp
add
mov
push
fcmovnbe
inc
inc
jno
lret
stc
mov
lea
call
enter
mov
push
add
mov
add
das
mov
into
cltd
fwait
pop
shrb
in
or
inc
int
and
repnz
test
jb
jnp
lods
scas
sub
xor
lret
into
scas
xchg
mov
out
out
push
test
dec
sahf
test
es
or
jb
je
jo
out
insl
add
add
lea
push
icebp
int3
cmp
mov
inc
insl
hlt
sub
inc
inc
dec
push
jp
sarb
dec
sti
xor
and
jmp
push
dec
adc
jge
mov
popa
inc
fisubs
or
js
icebp
mov
and
xchg
lret
and
mov
sub
in
std
inc
mov
push
mov
dec
fsubrl
adc
stc
sbbl
pop
sahf
loope
lods
inc
pushf
rcrl
jb,pt
mov
test
out
fnsave
add
cmp
lret
int
pop
jle
cmp
fidivs
and
add
add
adc
aam
jbe
outsl
imul
mov
cmp
lds
je
mov
dec
insb
enter
repnz
sub
cmp
jecxz
adc
test
int
shlb
ds
stc
les
shl
adc
stc
mov
mov
fstpl
inc
in
sub
adc
pop
hlt
add
in
in
arpl
mov
repnz
jl
stos
cmp
mov
adc
fstl
add
or
mov
pop
dec
cltd
in
push
stc
push
sbb
jg
mov
jb
jbe
ficomps
rorl
bound
dec
mov
sub
ss
je
jecxz
jecxz
dec
adc
into
fs
mov
inc
dec
xor
and
sub
flds
sti
out
stc
jp
add
mov
addb
xor
test
and
dec
shll
lods
lods
iret
movsb
and
dec
dec
or
call
in
jp
mov
out
xchg
pop
jne
push
inc
mov
hlt
ret
jecxz,pn
nop
in
mov
imul
out
pop
in
push
mov
rcll
daa
push
rol
pop
jno
dec
or
aaa
imul
cltd
pusha
in
test
adcb
in
jecxz
dec
and
pop
fldenv
and
int
cmpb
mov
pop
jbe
rcrb
inc
mov
inc
cmp
adc
call
sub
fiadds
jmp
mov
jno
lcall
or
out
fs
repz
lret
cld
lds
sub
jns
mov
adc
push
std
pop
xor
xchg
sbb
mov
and
adcb
into
push
pop
mov
test
mov
jb
arpl
lcall
repz
sti
iret
lods
jbe
adc
add
sbb
popa
loop
cld
pop
xor
enter
xchg
rcl
pop
je
add
adc
lahf
mov
pusha
cs
dec
mov
jge
add
scas
cmp
hlt
adc
xor
sub
jae
add
and
insb
gs
mov
shll
adc
dec
in
mov
jp
mov
popf
sbb
pop
ret
pop
iret
sti
cmp
adc
rorl
mov
shrb
ret
pop
push
sbb
jp
xlat
pushf
cwtl
hlt
or
aad
add
sub
lock
dec
insl
std
data16
sub
pop
movsl
dec
movsb
int
add
mov
leave
pop
and
call
stos
daa
cmp
sub
fcomps
out
orl
mov
cwtl
xor
sbb
adc
mov
outsl
outsb
mov
fmuls
sub
adc
mov
jge,pn
arpl
jae
dec
mov
xor
in
xor
addr16
dec
mov
mov
sbb
mov
cwtl
test
cmp
or
test
sti
xor
loopne
test
or
bound
pushf
jp
xor
xchg
rcrb
sti
xor
inc
fdivr
add
xor
pusha
xor
sbb
sbb
mov
jo
mov
jns
cli
mov
cmc
inc
jae
movsb
fidivrs
cli
and
into
out
mov
inc
arpl
out
fiaddl
xor
sub
xchg
fs
xchg
dec
xchg
aad
ror
clc
jo
mov
push
inc
insb
test
in
shlb
lods
dec
std
or
xor
scas
jl
es
xor
jae
jno
mov
outsb
lret
xor
jge
sbb
sub
aam
lds
mov
insl
out
dec
pop
orb
xor
mov
and
xchg
cld
xchg
or
push
xchg
scas
ret
jns
gs
inc
sub
xchg
adc
mov
add
sub
int
cli
mov
repnz
mov
mov
lock
adc
jp
adc
repz
out
es
data16
push
add
scas
mov
stc
pop
mov
out
lods
sbb
jge
xor
xchg
and
mov
mov
insb
dec
mov
push
stc
enter
std
inc
out
fisubrl
or
jp
sub
or
in
imul
cwtl
lcall
sbb
popf
add
xchg
push
mov
push
xor
and
fiaddl
imul
pusha
dec
or
xchg
push
xlat
shll
lods
call
leavew
jo
pop
pop
or
dec
test
aaa
ds
xchg
mov
test
cmpl
movsb
or
out
in
movsb
add
or
paddusb
xor
pop
bnd
sub
xchg
ror
xlat
popa
mov
lea
push
aas
rcrl
cmp
int3
jno
xor
mov
xor
add
mov
sbb
repnz
loopne
add
jnp
arpl
int3
aaa
outsl
mov
leave
push
in
adc
jmp
adc
xchg
inc
adc
mov
cmpsl
mov
sahf
addr16
out
mov
je
or
mov
or
jns
mov
pop
xchg
imull
gs
je
insb
pop
mov
lret
pop
dec
dec
cld
and
insl
jb
in
xchg
push
fstl
push
shll
out
dec
cmp
or
cwtl
lret
cld
mov
clc
cli
lahf
mov
mov
xlat
int3
scas
cltd
inc
lahf
sub
add
add
mov
cwtl
push
mov
hlt
or
mov
dec
fcomps
add
test
adc
cs
xchg
xchg
fldenv
fcmovu
jae
dec
movsl
add
mov
icebp
mov
and
bound
push
and
or
mov
cmpsl
repz
repz
data16
ljmp
pop
mov
sbb
mov
arpl
mov
pop
pop
insl
jecxz
mov
or
in
xchg
cs
fidivrs
fisubs
jnp
mov
maskmovq
testl
pop
pop
adc
adc
push
jecxz
nop
das
movsl
jnp
jns
test
mov
mov
sahf
jo
xor
adc
js
lock
js
aam
mov
push
and
mov
mov
fildl
sbbb
mov
movsb
ljmp
sub
rcrb
popa
repz
enter
js
sbb
sbb
stos
test
adc
call
subl
sbb
mov
or
jne
dec
jne
in
in
mov
jp
mov
mov
mov
xor
jne
sub
lods
lods
aam
notb
cmc
out
xor
push
test
xor
stos
sarl
push
in
mov
repnz
and
sbb
xchg
push
cmpsb
movsl
or
inc
push
fmuls
mov
out
xchg
int
rcll
sub
pop
mov
test
push
mov
out
dec
sbb
repnz
dec
jnp
mov
scas
xlat
sub
adc
xor
in
inc
or
inc
into
aad
inc
cwtl
outsl
adc
les
fdivl
fcmovnbe
enter
je
ret
les
clc
fldenv
popf
movsb
jp
shlb
das
inc
jle
dec
test
dec
rclb
sub
adc
mov
pusha
loopne
inc
xor
fistpl
push
push
repnz
out
addr16
jo
mov
and
popf
push
cmpsb
jnp
push
pop
dec
test
push
xorb
lcall
lods
xchg
mov
test
cmp
adc
inc
dec
notb
mov
inc
lcall
xchg
add
je
arpl
dec
inc
jmp
fldln2
pop
jns
mov
dec
cmpsl
push
insb
andb
mov
mov
or
pop
xchg
sbb
and
sarb
mov
xor
es
dec
popa
push
pop
cmp
sbbl
test
fsts
lcall
push
cld
dec
push
xlat
shl
lea
sbb
inc
xchg
int3
leave
adc
rcrl
sbbb
mov
jmp
jg
jns
mov
cli
in
fisubs
shr
subl
pop
inc
lock
ds
or
test
dec
add
or
xor
aaa
loop
and
mov
inc
fs
movsb
aad
sbb
mov
dec
test
jb
push
pop
xor
xor
and
xlat
in
push
idivb
cs
lds
pusha
lcall
inc
daa
push
cmc
leave
sti
sbb
adc
into
fidivl
shl
xor
scas
lret
jl
jno
ficompl
mov
sub
lea
loop
sahf
push
mov
mov
popf
bound
popa
and
fwait
popf
adc
into
clc
loop
push
xchg
inc
dec
test
mov
add
push
icebp
add
push
nop
popa
mov
ljmp
push
pop
aaa
xor
sarl
push
rclb
xor
jb
shlb
mov
testb
icebp
add
adc
pop
xor
out
ljmp
shl
lock
icebp
andb
enter
adc
fcoml
xchg
jbe
out
pop
rcl
decl
scas
call
adc
lret
jg
adc
hlt
lods
cmpsl
xchg
in
mov
jg
outsb
js
jge
mov
aaa
jnp
dec
or
mov
cmpsl
popf
pop
cwtl
mov
jmp
es
jbe
popf
rcl
and
adc
xor
push
mov
pop
xchg
or
sbb
mov
xchg
iret
fisubl
push
je
xor
rclb
cmp
outsl
and
push
test
pop
push
xor
push
and
xchg
shll
push
mov
push
mov
pop
repz
mov
in
dec
frstor
add
enter
clc
out
xor
mov
pop
movsb
and
sub
lahf
xchg
mov
imul
rcl
movsb
not
sahf
rcrb
sbb
leave
mov
adc
mov
out
inc
cmpsb
ja
in
push
pop
push
pop
aam
mov
mov
push
mov
push
cmp
lret
xchg
push
jecxz
inc
dec
dec
push
push
mov
xchg
inc
adc
cltd
lcall
nop
ja
and
add
in
mov
and
xchg
jl
int
scas
mov
iret
push
arpl
cmpsb
sub
xchg
out
sahf
sbb
mov
xor
les
nop
pop
inc
mov
cmpsl
and
mul
mov
cli
into
out
ss
out
inc
cmp
adc
mov
int
or
ret
jg
jo
inc
repz
cs
cld
movsb
shll
cmp
fsubl
aas
insb
jl
and
sub
mov
xchg
aam
jno
in
push
mov
xchg
jo
test
mov
cmpsb
lahf
jp
xchg
fwait
cmp
jae
cmp
mov
mov
mov
cmpsl
je
sarb
jbe
cmp
jno
or
jg
in
cmpsl
sbb
mov
xor
cwtl
enter
dec
movsl
xor
icebp
and
aad
pop
dec
cmp
jl
add
mov
mov
cmc
push
inc
shl
enter
cld
shlb
add
lea
in
sub
sbb
mov
sbb
inc
icebp
fnstcw
or
aam
sub
xchg
lods
int3
xchg
dec
ret
aad
pop
lods
mov
test
or
xor
inc
sub
lcall
pop
sti
sarl
shrb
push
mov
imul
nop
mov
mov
mov
lds
test
adc
lock
in
sahf
aas
inc
ficompl
xchg
adc
clc
jmp
ret
cs
adc
rolb
jnp
sti
mov
xchg
sub
cmpsl
dec
cmp
sbb
mov
ret
push
add
imul
leave
inc
cmp
sti
dec
scas
or
ret
pop
shl
sbb
sbb
jp
lret
sub
mov
scas
jae
mov
call
mov
test
xor
pop
and
mov
sub
lcall
hlt
imul
ret
ret
std
dec
rolb
or
cmp
fisubl
shlb
jg
xor
pop
cltd
jns
popa
cmp
pop
popf
adc
aad
push
cmpsb
push
popf
xchg
mov
imul
sub
xchg
push
out
aaa
movsl
mov
aad
dec
aas
out
or
pop
and
scas
idivb
adc
sbb
cmpsb
sub
adc
cltd
cld
loopne
add
stc
ss
ds
mov
lock
push
int3
pop
mov
xlat
adc
dec
iret
call
ss
mov
pop
loopne
pop
notl
mov
jmp
adc
adc
jl
scas
popf
or
sub
xchg
scas
add
and
push
mov
lret
cmp
pop
es
xor
dec
pop
cltd
dec
jp
sbb
adc
mov
adc
xor
mov
in
mov
lahf
sub
int
xor
gs
xorl
pop
or
loopne
pop
leave
adc
and
jmp
mov
jns
fnstcw
pop
xor
cmp
std
test
dec
fdivl
pop
enter
push
fnstsw
and
mov
jp
jmp
enter
in
stos
icebp
pop
mov
inc
movsl
sbb
xchg
sub
notl
sbb
xor
pop
gs
mov
in
push
ljmp
ds
rolb
out
loop
out
xor
dec
sub
clc
lret
orb
dec
mov
scas
push
out
sbb
or
or
leave
xor
cli
and
or
jg
popa
mov
mov
repnz
jg
cmp
hlt
or
and
ss
pop
or
or
jbe
xchg
add
rcll
subl
sub
jns
bound
aas
out
xor
push
mov
pop
out
cld
lea
dec
orb
jmp
pop
add
iret
or
sti
mov
pop
clc
imul
sub
lcall
inc
scas
outsb
or
movsl
and
or
jmp
pop
push
cmp
add
xchg
push
shr
fbld
push
test
dec
and
fcmovne
ds
jno
and
cwtl
fidivrl
aaa
popa
test
hlt
testl
jle
mov
gs
scas
stos
push
fisttps
sub
daa
loop
mov
lret
pusha
cld
add
dec
arpl
push
adc
in
out
xor
sbb
stc
mov
rcll
cmp
int3
std
add
push
jnp
les
adc
popa
mov
jo
inc
iret
jne
jg
les
xchg
sbb
daa
mov
loope
aad
clc
push
imul
cmp
jnp
xor
xchg
cmc
mov
push
je
mov
mov
or
sub
mov
stos
and
fcmovu
popa
mov
xchg
sbb
xor
and
pop
shrl
cmp
jb
notb
inc
je
mov
out
jecxz
push
test
subl
inc
les
in
mov
xchg
ret
rol
dec
movsb
inc
fildll
addl
xchg
popa
mov
fmul
pop
aad
cmp
pushf
mov
andb
mov
negb
sahf
cli
das
mov
repz
or
ret
xor
pop
ljmp
stc
lock
mov
inc
jmp
mov
cmp
dec
pop
inc
mov
loope
movsl
or
in
xlat
xchg
jb
push
xchg
mov
movsl
aam
testl
gs
orb
out
shlb
mov
jo
aas
xor
pop
mov
je
pop
test
pop
pusha
es
test
lahf
test
mov
fwait
jb
fucom
fnsave
outsl
xchg
adc
mov
out
pop
push
mov
push
add
add
js
inc
dec
imul
out
je
sub
jmp
shrl
cli
xchg
test
xor
cli
nop
adc
jnp
and
jl
stos
cmp
adc
jne
call
and
mov
and
xchg
xor
testb
mov
push
lahf
xchg
in
mov
mov
push
push
pop
fidivrs
cmp
je
xor
adc
cmp
enter
cs
cltd
dec
ja
test
sub
xchg
sar
lock
add
push
push
sarb
or
sub
sbb
sbb
jno
daa
dec
js
sbb
add
fnstsw
xor
popf
test
test
enter
movsl
cmc
fiaddl
mov
das
popa
sbb
ret
out
push
rolb
sbb
adc
adc
mov
jae
je
adc
xor
addps
out
subb
les
dec
rolb
push
pop
popa
cs
flds
xor
imul
mov
mov
icebp
mov
dec
dec
lock
push
cwtl
stos
or
inc
mov
or
je
inc
leave
adc
stos
out
mov
jb
push
pusha
cmp
add
mov
aam
pop
shl
sub
push
xor
mov
cmp
subb
ficomps
xor
dec
idivb
movsb
add
das
add
das
fdiv
imul
and
out
repz
or
sahf
xchg
aad
jmp
mov
imul
mov
sub
dec
das
adc
inc
or
data16
jp
or
sbb
push
sarb
sbb
add
repnz
cmp
inc
adc
inc
inc
xchg
push
fadd
xchg
mov
repz
fdivrl
into
xlat
cmp
xor
cmp
ds
mov
fsubrl
bound
xor
mov
scas
iret
repnz
jae
cwtl
stos
imul
inc
mov
lcall
popf
bound
mov
pop
mov
push
dec
xlat
jo
push
cwtl
cmpsl
test
push
inc
and
mov
or
sbb
lahf
std
mov
xchg
or
orb
mov
pop
push
or
and
nop
add
mov
jmp
lock
dec
daa
push
or
int3
shlb
mov
push
shll
fstps
pop
cltd
rolb
test
les
mov
xor
mov
aas
insb
stc
adc
sar
dec
mov
dec
cmovae
arpl
xchg
imul
inc
pop
mov
push
mov
cmc
imul
rcrl
test
push
orl
xlat
data16
and
loop
iret
repnz
and
xchg
pop
pop
fmull
or
je
xor
aaa
xchg
dec
pop
xchg
cli
push
das
jle
xchg
lock
add
xchg
imul
jmp
ret
adc
into
add
pusha
bound
jo
push
stos
jge
jl
imul
mov
mov
sbb
loop
out
aaa
push
push
jb
cmp
fisubl
hlt
push
and
cli
xlat
dec
adc
mov
and
arpl
out
aam
mov
and
jne
das
mov
push
out
jle
xor
cmp
push
dec
loopne
int3
pop
add
outsl
mov
in
xchg
lea
adcl
jb
pop
icebp
aaa
sub
scas
dec
sub
dec
jge
sub
or
rcr
sbb
and
sbb
ret
mov
sbb
pop
cltd
hlt
xor
insl
jno
ja
add
push
sbb
jno
shll
and
add
mov
xor
sub
push
cld
and
notl
nop
jb
mov
leave
shr
cmpsl
in
push
ss
sub
xor
xor
fisubl
xchg
dec
jmp
int3
aas
add
mov
testl
sbb
adc
inc
stos
push
fadds
xchg
pop
in
adc
dec
cmpsl
sbb
inc
push
inc
test
add
dec
mov
jns
out
gs
xchg
loopne
jb
mov
xor
cmp
pop
hlt
cmp
xor
cmp
xlat
ja
xlat
add
push
sub
inc
imul
cmpsl
js
and
xor
and
fucomp
jbe
rolb
mov
pop
cmpsl
dec
pop
cltd
push
xor
cmp
add
xor
push
pop
jbe
jae
mov
les
jge
aas
shl
pop
inc
or
push
mov
inc
out
fimuls
mov
ret
xchg
dec
mov
cmp
mov
push
sti
mov
pop
mov
movsb
sbb
xchg
enter
inc
cltd
sahf
mov
dec
pop
std
aad
insb
push
mov
sbb
lods
repz
pop
cmpsb
inc
push
in
fwait
mov
enter
imul
mov
not
loope
aad
push
test
sbb
std
ret
inc
mov
das
xor
lods
or
arpl
pushf
insb
pop
movsl
mov
mov
in
sub
cmp
mov
sti
gs
dec
jp
push
xchg
jmp
andl
mov
and
test
lea
add
ret
jge
ss
xor
pusha
xlat
mov
outsl
pusha
mov
cli
ja
inc
arpl
xor
and
ja
pop
jbe
jmp
stc
jp
icebp
xchg
pop
stos
psraw
add
fldenv
sub
sbb
mov
ljmp
arpl
addb
stos
pop
dec
insb
inc
test
pushf
push
and
add
out
hlt
mov
in
jo
jge
fildl
xchg
sbb
test
nop
pop
or
pop
adc
pop
stc
mov
aam
cmp
sbb
fidivl
sbb
add
leave
jmp
or
sbb
mov
sub
in
aad
ret
and
out
in
outsl
sbb
dec
test
aas
call
inc
cli
ja
xor
out
jp
scas
inc
jg
inc
xchg
div
or
lahf
paddusb
mov
mov
outsb
dec
rcll
aas
xchg
movsb
mov
gs
cmpl
xchg
adc
dec
adc
mov
push
sub
lock
insl
push
cmp
fsubrs
mov
jmp
sub
mov
mov
mov
push
mov
adc
aas
jle
fsubl
push
jle
sbb
inc
jne
inc
inc
jmp
addl
lock
fisubs
sub
aad
into
push
and
cwtl
mov
add
add
jmp
test
fistpll
mov
inc
mov
icebp
pop
ja
inc
jne
adc
lcall
stc
test
outsb
mov
pop
jmp
cli
lods
int3
inc
mov
out
xchg
xchg
mov
or
fstps
jl
add
add
ret
mov
mov
mov
mov
mov
mov
add
or
jp
jbe
int3
bound
sub
sub
loopne
cmp
mov
js
inc
int
outsb
data16
cwtl
ucomiss
fdiv
and
mov
leave
mov
add
xchg
cwtl
push
adc
add
add
imul
repz
sbb
ja
popa
repz
lds
xchg
cwtl
ja
add
mov
loopne
pop
stc
sarb
cwtl
cmc
and
mov
jbe
in
cmc
lcall
subl
push
sbb
xlat
in
pop
cli
adc
adc
scas
sarl
cmp
push
jb
int
add
or
cli
push
cld
mov
xor
cli
mov
sub
inc
gs
adc
bound
hlt
cwtl
loopne
sarb
pop
into
frstor
es
sub
push
xchg
push
or
sub
jno
or
pop
pop
pushf
jmp
adc
mov
add
stos
jo,pt
jne
int
mov
daa
xor
or
dec
add
test
enter
out
cltd
xchg
or
inc
lods
ljmp
add
pop
cmp
xchg
jb
cltd
imul
sbb
fiadds
mov
push
inc
pushf
dec
xorb
inc
xor
andb
gs
mov
sbb
xlat
jmp
cltd
nopl
jbe
int3
or
movsl
test
push
sti
push
jns
sub
in
sub
xchg
dec
pop
fisubl
aas
pop
call
test
nop
rorl
fstps
fsts
inc
mov
cmc
fists
in
inc
push
or
frstor
cwtl
dec
or
lcall
loope
xchg
cld
lods
xchg
in
sub
sbb
sbb
popf
into
add
popa
in
out
rorl
fnstsw
in
mov
out
push
and
jae
xor
mov
mov
mov
xlat
fisubl
shll
scas
jb
add
dec
mul
subl
push
push
jecxz
sbb
dec
stos
lods
inc
ret
push
sub
or
sahf
mov
cmpsl
pop
xchg
fstpl
insb
jle
outsb
mov
loopne
push
in
jle
or
sub
clc
cmp
sub
es
mov
sub
push
int3
sub
or
rcr
pop
stc
call
jne
push
xchg
lea
nop
aas
das
out
adc
mov
xlat
int
stc
loope
fistpl
gs
adc
or
sahf
cltd
push
pushf
and
and
mov
mov
dec
xor
push
and
jno
lock
ja
xchg
push
andb
ds
ret
sbb
mov
add
filds
mov
fisubrs
rolb
push
iret
clc
sub
pop
mov
aam
stos
jnp
and
rcll
rcll
xor
inc
push
unpckhps
icebp
pop
mov
cmp
xchg
push
icebp
xorb
ljmp
jnp
cmc
mov
mov
cmp
je
add
imul
mov
cmp
mov
cmc
and
xor
dec
dec
out
mulb
outsb
icebp
int
mov
sbb
jo
enter
xchg
fldcw
ret
xchg
jne
je
xor
leave
addr16
sub
jae
adc
cmc
shr
xor
sub
cmp
jmp
loopne
and
mov
cmp
data16
push
je
mov
jo
outsl
int3
cmp
lret
adc
hlt
repz
fdivl
lock
out
cs
pop
cs
inc
and
arpl
aas
push
mov
aaa
sbb
and
pop
cmpsl
mov
ljmp
or
aam
mov
inc
push
or
shlb
push
pop
leave
aas
push
pop
popa
outsb
xchg
and
call
cmp
dec
pop
fbld
ja
outsl
insl
lock
jg
jl
lcall
ja
fisttpl
inc
xchg
pop
cmc
jl
jle
cmp
push
push
enter
sub
push
mov
mov
mov
lahf
movsb
jg
dec
mov
enter
clc
lahf
sub
push
xor
into
lret
fistpll
xchg
sub
sahf
xchg
jmp
jne
sub
jae
mov
stos
xchg
pop
jne
push
stc
scas
add
and
xor
cmc
sbb
push
das
sbb
or
inc
xor
pop
add
push
popa
fsubl
pop
cmpb
aas
mov
loopne
dec
ss
out
mov
test
push
addb
pop
call
daa
repnz
jb
sbb
push
lret
mov
lds
push
into
mov
insl
repnz
push
outsb
or
push
fstps
movsl
pop
fcmovnu
fmull
dec
sbb
jbe
mov
cmp
cmp
jb
mov
inc
jmp
aad
xor
inc
data16
dec
fwait
shlb
ret
es
mov
loope
xor
inc
movsl
inc
lock
and
sub
add
cld
icebp
pop
cmp
mov
in
push
repz
stos
aas
fisttps
insb
inc
pop
fidivs
push
mov
xor
inc
push
cmp
movsl
in
mov
mov
hlt
lcall
add
xchg
jg
dec
lahf
push
clc
cwtl
movsb
and
call
aaa
xchg
fcompl
dec
and
mov
pop
mov
jbe
sub
add
fwait
aad
test
adc
dec
fstpl
or
mov
and
dec
jecxz
sbb
cmc
shlb
rclb
ja
push
push
into
movb
cmp
push
mul
jns
pop
icebp
fmul
mov
jle
or
shlb
and
add
adc
mov
xchg
insl
stc
jmp
pop
xor
xor
add
in
fisttpll
inc
push
out
push
andb
loope
inc
pop
mov
jg
jno
push
nop
mov
jmp
jnp
mov
mov
loope
loope
lahf
xchg
sbbl
fstpt
pop
jecxz
jo
mov
dec
aas
and
ficoml
cmp
insl
xchg
mov
cli
and
ljmp
mov
inc
mov
lret
xlat
repz
cmpsb
movl
cmpsl
sub
pop
lahf
out
dec
dec
push
dec
out
cs
xor
mov
dec
lret
push
das
out
sti
sbb
loop
lret
fstps
sub
cmp
jp
std
clc
leave
loope
mov
sti
adc
nop
inc
iret
add
addr16
lret
push
aas
push
pop
push
pop
add
cmp
pop
pop
mov
adc
mov
or
push
inc
cmp
cmp
dec
dec
testl
cltd
sbb
aaa
mov
adc
inc
mov
sbb
push
mov
mov
and
cs
lahf
pop
pop
pop
pop
imul
mov
imul
inc
mov
add
inc
dec
sbb
pop
test
xlat
and
lods
dec
test
enter
std
xor
pop
notb
popf
mov
mov
sarb
icebp
pop
jecxz
scas
movhlps
push
mov
imul
or
loope
mov
adc
add
pmaddwd
ljmp
into
adcl
cmp
add
pop
jae
xchg
cltd
sub
repnz
iret
or
sarb
push
or
dec
cli
imull
decl
ss
inc
cmp
jl
pop
into
mov
out
pop
ror
ss
pop
bound
mov
arpl
movsb
negl
fistps
sub
xor
fistps
xchg
mov
pushf
dec
inc
stos
push
lret
xor
sub
cmc
in
mov
xchg
push
cmpsb
mov
ret
dec
aaa
mov
enter
xchg
iret
and
daa
mov
xchg
test
sub
push
mov
jl
jae
mov
or
cmc
sub
xorl
mov
xchg
nop
mov
cld
ret
mov
adc
xchg
mov
cmp
jle
subl
es
push
mov
and
jns
push
outsl
clc
jns
mov
sbb
jle
jmp
push
jbe
sbbb
addr16
arpl
loop
dec
push
sub
xor
pop
loop
insl
rcll
xchg
push
jmp
movsb
in
dec
sti
inc
nop
sbb
imul
adc
inc
add
push
adc
lods
cwtl
outsb
xchg
filds
sub
roll
scas
sbb
mov
xchg
sbb
ret
dec
dec
scas
pusha
test
or
jl
push
cmp
cmp
aad
sub
jns
adc
and
repnz
sbb
ret
shll
cmpsl
loop
mov
jp
outsb
add
sbb
lock
mov
cmp
insb
push
and
imul
mov
push
add
mov
or
pop
shll
jne
dec
daa
xor
dec
cmp
mov
jmp
lret
or
lcall
mov
adc
or
iret
mov
xor
or
push
cs
subb
in
int3
jge
sarb
inc
adc
push
xchg
push
nop
jb
ret
xchg
aad
push
divl
inc
test
mov
in
xor
repnz
neg
xchg
outsb
jo
or
or
mov
xor
xchg
add
mov
cwtl
test
ror
les
push
mov
xchg
cmp
push
pop
lsl
scas
fwait
jge
ficompl
int3
iret
mov
mov
aad
and
xchg
inc
repz
repz
or
xor
mov
push
shl
outsl
aad
jge
inc
repz
xchg
xchg
jns
inc
js
adcb
mov
das
lahf
push
loopne
xchg
push
pop
xor
sbb
int3
jmp
jbe,pn
shll
adc
adc
sbb
jle
push
sarl
mov
and
jnp
or
shr
mov
imul
mov
stc
jge
lods
scas
push
and
cmc
cmp
div
imul
ds
ret
fidivrs
jnp
jae
addl
ret
sar
jae
sbb
clc
mov
dec
inc
into
pop
repz
stos
inc
into
push
push
repz
lea
jg
loope
sbb
mov
mov
cwtl
shl
add
adc
filds
fistps
test
scas
es
push
mov
out
test
stc
out
aam
mov
iret
pop
orb
xor
loopne
inc
pop
int
xchg
out
ret
fwait
mov
sub
fdivl
faddl
pusha
pop
or
adc
test
out
mov
inc
loopne
in
xchg
or
push
pop
lods
or
nop
mulb
dec
dec
pop
notb
xchg
cli
sub
jl,pt
inc
jno
addl
iret
fistpll
out
movb
xor
ret
ret
inc
aaa
sbbl
jmp
push
xor
pop
outsl
mov
or
test
imull
sbb
imul
jg
mov
push
loope
xchg
shrb
add
rcrl
jbe
add
cmp
sub
inc
push
push
add
and
adc
xchg
dec
mov
sahf
inc
add
frstor
out
jle
jns
adc
mov
ret
and
out
ja
mov
ljmp
loope
mov
sbb
mov
stc
popa
adc
shl
scas
lock
jecxz
inc
js
outsb
cld
lcall
or
inc
pop
xchg
push
dec
sub
xor
jns
out
inc
out
cmpl
adc
mov
push
sti
pop
cltd
xor
out
dec
mov
push
mov
mov
sbb
lcall
mov
imul
outsl
or
cmp
inc
fwait
pop
xor
stos
rcrl
pop
sub
mov
mov
jp
insb
and
mov
jnp
insb
pushf
mov
inc
and
xchg
mov
xor
scas
inc
sub
xchg
pop
testl
ffreep
xor
loopne
repnz
xchg
test
aad
dec
jne
aaa
popf
in
popf
jmp
lcall
int
stos
ficoms
add
push
lods
push
sti
inc
push
repz
js
mov
lret
fdivrl
mov
test
and
sarb
mov
inc
jo
and
bound
sbb
nop
push
push
sub
pop
mov
mov
sub
cmpb
cli
and
mov
or
out
mov
jb
sub
xchg
out
inc
mov
and
push
fnsave
xor
mov
mov
sbb
pop
add
mov
inc
gs
and
mov
xor
xchg
int3
faddl
push
sbb
jecxz
clc
xchg
mov
push
stos
shlb
popf
mov
lret
jecxz
sub
lds
pop
cmp
xor
fs
sti
dec
xor
jmp
pop
inc
mov
mov
inc
pushf
clc
pop
lret
lahf
nop
cld
add
test
leave
fidivrs
outsl
ficoml
ja
imull
rcrb
xchg
xchg
insl
lret
hlt
xchg
ror
aas
jne
mov
stc
cs
sub
push
xor
push
add
lods
sbb
loopne
mov
pop
test
je
sub
pushf
je
cmc
inc
lods
jp
cmp
cld
ficompl
xchg
cmc
push
call
mov
mov
data16
jae
cmp
mov
fwait
insb
shll
hlt
jge
pop
mov
andb
add
cmpsb
inc
sub
call
aam
clc
ret
add
push
cltd
mov
mov
arpl
fxch
jg
sarl
int3
push
je
jae
addr16
rcrl
sbb
jl
xlat
pushf
shl
and
sub
push
xor
es
shll
xlat
xor
movsl
fidivl
addr16
test
imul
cmp
out
adc
pop
int
mov
imul
push
sbb
clc
testb
nop
mov
dec
xchg
loopne
arpl
mov
mov
jmp
jnp
dec
adc
xchg
popf
addb
inc
cmc
dec
jge
jbe
out
test
outsl
jae
sub
xchg
adc
lock
sub
cmp
xchg
js
push
aad
xor
pop
xor
xchg
mov
push
xchg
pop
push
cwtl
cmpsl
lock
repz
pusha
or
xor
jbe
and
mov
push
rclb
adc
or
test
dec
sbbb
push
ds
xchg
addr16
bound
pop
add
insb
test
mov
stc
bound
ljmp
iret
mov
pop
fsubrl
test
fcmove
vpperm
dec
jmp
sub
sub
mov
in
jmp
lret
cli
mov
push
push
stc
mov
lret
fidivrl
dec
loope
cmp
push
pop
jae
xor
fisttpll
sbb
push
sub
les
cmpsl
jnp
or
movsl
rcrb
jbe
pop
xchg
sbb
shr
pushf
sub
stc
test
dec
mov
add
dec
fimuls
outsb
mov
pop
xchg
xchg
scas
lcall
cltd
adc
jecxz
in
fdivs
das
add
cmp
xor
pop
dec
inc
es
cmp
jo
pushf
movsb
sub
add
jb
outsb
out
test
jne
sub
mov
push
xchg
mov
lds
sub
jno
test
lea
sbb
mov
sbb
pop
out
adc
test
mov
inc
shlb
rcrl
push
jnp
hlt
lock
add
inc
cli
cwtl
scas
jno
or
test
popf
sbb
xor
adc
dec
cmpsb
test
ds
cmpl
or
fisubl
mov
xchg
stos
ss
pushf
pop
test
adc
shll
shll
pop
fs
mov
rcl
push
or
mov
cmp
sub
xor
sbb
daa
dec
cltd
and
cmpsb
mulb
push
daa
stc
inc
dec
pop
cmp
mov
inc
lgdtl
fs
xchg
clc
pop
dec
cltd
imul
sub
roll
cltd
loop
mov
punpckhbw
call
aad
sbb
sub
jg
cmp
loop
pushf
andb
adc
pop
add
ror
dec
mov
pop
push
loopne,pt
js
pop
sar
fwait
mov
or
rcl
mov
mov
or
and
int
pushf
push
xor
subb
sbb
fs
inc
or
mov
bnd
adc
mov
and
add
xor
inc
pop
cltd
inc
or
cli
jecxz
rol
cmp
aas
imul
mov
ds
or
add
jp
out
cmp
je
and
cmc
inc
lret
arpl
cmp
cmp
xlat
ss
xor
fildl
out
mov
pop
dec
repz
cltd
loope
out
jp
mov
jo
push
cmpsb
out
call
jg
popa
in
add
mov
push
mov
shll
ljmp
ss
lods
out
mov
fs
mov
aas
pusha
sub
push
xlat
sbb
cli
imul
sub
out
and
pop
mov
adc
stos
pop
sbb
int3
sti
or
jge
rol
pop
or
push
inc
dec
dec
ds
pop
pop
scas
sub
out
push
sub
subl
mov
mov
loope
and
jmp
xchg
or
cmp
mov
inc
adc
xlat
jp
inc
lcall
xchg
daa
lcall
jo
lcall
stos
ljmp
inc
sahf
xor
in
ret
out
fsubrl
in
cvtps2pi
mov
out
push
cs
hlt
pop
or
rcl
idivb
leave
dec
subps
inc
or
pusha
push
and
jb
push
mov
push
mov
dec
dec
inc
mov
fldenv
add
ljmp
jmp
adc
mov
ljmp
or
cltd
js
negb
inc
mov
xchg
or
dec
loopne
add
lret
pop
xor
or
lods
addl
shr
pop
bound
xchg
sbb
dec
mov
cltd
sub
sbb
add
fucomip
push
pop
lods
pushf
or
ljmp
pop
aam
sbb
mov
jge
or
cwtl
cli
xchg
and
pop
popf
pop
insl
movsl
js
insl
fiaddl
xchg
adc
daa
out
scas
mov
cmc
push
lods
jp
pop
mov
pusha
inc
push
cmpsl
and
or
aas
sbb
out
std
aad
test
js
adc
pop
jmp
call
lods
cmpsb
inc
add
repnz
push
push
sarl
sub
add
xor
cmp
pop
dec
push
cmp
adc
lahf
pushf
notb
sbb
and
in
mov
pop
in
imul
imul
out
jg
mov
daa
sahf
fsubl
fldl
in
xor
ja
daa
jg
ja
xlat
mulb
call
and
mov
sbb
out
jne
pop
in
sbb
addr16
shr
fiaddl
push
push
in
inc
xor
aam
lea
fnstsw
rclb
lret
mov
stos
pop
enter
jp
loope
mov
repnz
sub
movsl
dec
jno
xchg
mov
inc
ret
icebp
add
or
push
out
pop
mov
jp
mov
push
inc
outsb
sub
push
popa
orb
arpl
push
pop
sub
sbb
cmp
pop
mov
je
mov
shl
sub
push
push
inc
movsb
push
inc
loope
or
ss
dec
pushf
jl
mov
aas
dec
add
push
push
and
inc
adc
push
sub
inc
pushf
pop
lcall
jp
push
fxch
jp
into
lahf
pop
cmpsl
iret
ja
pop
ret
popa
fdivs
outsl
xchg
pop
mov
rcrb
push
aam
lahf
xchg
scas
mov
test
pop
push
dec
pop
cmp
or
sarl
mov
xor
jg
test
dec
ljmp
or
rcr
call
gs
jl
rcl
enter
push
xor
aam
cmp
stc
popa
int
loope
jnp
cmp
popa
mov
pop
jb
adc
sbb
xchg
gs
jbe
and
mov
sub
xchg
aas
mov
movsl
push
call
adc
mov
inc
mov
call
xor
and
xor
push
mov
mov
jne
insb
sarl
insb
les
or
in
cmp
movsl
push
insb
dec
loopne
aam
xor
xchg
adc
jg
cli
push
scas
nop
inc
push
mov
lret
adc
es
inc
gs
cmp
clc
adc
fstl
popf
sarl
lods
mov
fmuls
andl
dec
mov
sbb
push
insl
mov
mov
ds
add
pop
clc
data16
mov
jge
mov
mov
jecxz
xlat
fisttps
stos
movsb
aas
shrl
or
outsl
xor
sub
and
or
in
shll
adc
mov
mov
je
lds
xor
pusha
dec
push
add
stos
add
cli
lahf
add
in
inc
jns
push
jge
icebp
cmpsb
out
push
repz
dec
fcmovbe
outsl
jo
cmp
xlat
mov
lret
xchg
xchg
divb
and
mov
push
mov
leave
xchg
bnd
idiv
mov
xchg
dec
fcoms
in
fbstp
or
arpl
aaa
jae
scas
push
push
pop
or
cmc
call
icebp
and
jmp
in
xlat
or
jae
lea
inc
outsl
push
int3
dec
jp
xor
sti
pop
or
in
lret
mov
dec
fwait
sti
hlt
dec
cmp
jmp
int3
jmp
aaa
mov
adc
inc
cmc
repnz
scas
dec
inc
xor
inc
jbe
push
fisubrs
arpl
clc
cmp
adc
icebp
or
xlat
sub
jge
outsl
mov
jle
enter
push
pushf
call
shrb
pop
pop
pop
mov
fcoml
iret
cltd
sub
dec
inc
sbb
je
int
mov
sub
imul
and
jg
push
leave
je
xor
fsubr
jnp
pop
in
xchg
inc
dec
jmp
mov
mov
sbb
in
fincstp
xchg
popa
mov
push
xor
xchg
xor
mov
pop
insl
pusha
push
nopl
add
cli
loop
outsl
mov
insl
pop
int
jmp
add
jl
fbld
lock
in
jle
cmpsb
inc
adc
jl
sbb
sti
pop
xchg
xchg
sbb
sbb
aad
jmp
out
push
loope
aam
iret
adc
jg
scas
pushf
jle
js
lret
daa
mov
fidivrs
and
call
mov
jnp
shr
fsubrs
cmc
imul
test
adc
mov
dec
sub
adc
push
mov
adc
xchg
sub
aaa
sbb
js
cmp
imul
sbb
dec
mov
jb
aaa
mov
push
insb
adc
dec
or
inc
popf
cmc
mov
sbb
je
aaa
xchg
into
addb
out
lcall
mov
inc
and
inc
sbb
popf
sbb
das
rorb
mov
lea
ficoml
jb
out
pop
sub
jo
mov
adc
jae
aad
inc
inc
mov
mov
or
xor
and
pop
push
sbb
push
jp
bound
push
lds
lea
fs
scas
xchg
movsl
and
pusha
cmpsb
push
dec
stc
cmp
mov
ret
inc
in
jo
sti
int3
jmp
mov
cwtl
aas
jae
or
inc
bound
add
jmp
pop
test
sbb
mov
cmpsl
imul
outsl
mov
outsb
pushf
sbb
mov
clc
lret
sti
ds
dec
jae
push
imul
and
mov
push
push
arpl
or
and
int3
and
and
push
lock
mov
hlt
inc
adc
test
clc
mov
push
rorb
hlt
mov
cwtl
inc
out
mov
mov
frstor
xlat
cmp
mov
sbb
add
pop
xor
aas
ljmp
sti
pop
pop
mov
insl
adc
mov
or
adc
and
inc
daa
push
call
dec
push
push
sub
dec
inc
sub
sbb
fimuls
test
push
add
gs
sbb
mov
pop
add
push
fidivrs
scas
inc
mov
rolb
inc
inc
in
imul
sbb
outsl
loope
mov
stos
call
int
into
dec
sbb
outsb
lods
push
or
iret
mov
fdivs
pop
cmp
jmp
sti
leave
je
pop
ljmp
ret
lock
fcmovnb
shlb
adcl
adc
lds
push
jns
aad
jbe
sub
fdivr
push
popa
rclb
push
fcomps
jb
in
and
push
fwait
add
sbb
mov
rcll
and
jno
push
pop
lret
loopne
xchg
aaa
sbb
outsb
jecxz
insb
gs
lods
gs
incl
sbb
mov
add
add
jne
sub
pop
test
int3
imul
xchg
mov
daa
aaa
fwait
inc
sbb
out
or
sub
add
int
push
sbb
hlt
sub
pop
test
lahf
adc
dec
jbe
mov
pushf
dec
test
mov
sbb
sub
stc
jae
into
pop
add
xchg
pop
enter
ja
and
jo
data16
jmp
xor
mov
leave
push
popa
or
stc
lcall
cmp
addl
int3
fs
test
and
mov
pushl
mov
mov
rolb
and
jle
pop
adc
pop
or
je
nop
xor
mov
repnz
xor
mov
lds
mov
inc
sub
push
or
jl
mov
push
cs
sbb
movsl
arpl
and
lret
push
mov
xlat
in
lods
cld
sbb
push
bound
jge
mov
or
test
xchg
std
adc
jb
and
jl
mov
and
aad
ljmp
rclb
inc
ret
pushf
push
jg
lds
or
sub
es
fimull
cld
inc
adc
outsl
cltd
xor
int
push
push
ret
mov
push
pusha
in
and
xor
shll
and
cwtl
in
push
jg
mov
lock
xlat
mov
mov
pop
jne
cmpsb
dec
mov
or
or
movsb
pushf
ljmp
inc
out
ror
mov
aas
pop
mov
outsl
outsl
and
mov
or
lret
je
roll
sbb
les
pop
or
ss
lret
ret
and
cli
mov
lods
mov
ljmp
js
add
dec
fcoms
cli
or
xchg
aad
into
push
pop
aaa
cmp
cltd
stos
and
mov
mov
mov
cltd
push
cwtl
andb
stos
lret
jo
in
pop
inc
in
hlt
mov
nop
stos
xchg
pusha
inc
mov
or
xchg
dec
cmpb
cltd
cmp
and
clc
push
fdivrs
add
cld
or
fiadds
into
arpl
pop
imul
jnp
mov
or
xchg
movsb
aam
jb
pushf
sti
je
lcall
lds
or
xor
fsubrs
add
and
mov
fs
add
push
repz
pop
cmp
pop
aas
cmp
mov
fcmovb
imul
push
or
lods
sti
scas
mov
push
sub
loope
mov
xchg
in
inc
not
cld
insl
inc
push
stos
lret
jnp
xchg
cmp
movl
cmp
sbb
dec
add
dec
push
cmp
xor
dec
xorb
pop
push
sub
bound
frstor
out
sarb
jecxz
aaa
jne
or
aaa
ret
pop
repz
or
shld
sbb
dec
lea
mov
ss
inc
mov
mov
inc
mov
or
cmpb
ret
xor
mov
jg
cmp
inc
out
lret
push
in
jge
lcall
xchg
push
xor
fildll
add
pusha
cld
shlb
iret
in
dec
adcl
jb
mov
lahf
xor
mov
dec
push
adc
mov
dec
cli
movsb
xlat
int
add
insb
movsb
cmpsb
mov
mov
int3
pop
iret
stos
and
sub
lods
sub
mov
lods
mov
je
mov
int
push
mov
sbb
test
push
test
ja
add
or
jo
push
adc
in
and
jecxz
ss
aaa
decb
push
add
enter
sti
push
faddl
mov
adc
ljmp
fdivr
adc
in
mov
xor
mov
cmp
pop
jnp
mov
and
ret
loop
bound
fninit
push
sub
or
fstps
lock
ret
mov
and
addr16
xor
iret
xchg
pushf
daa
mov
stos
ret
mov
push
pop
nop
push
xchg
loope
and
repz
pop
xchg
es
sbb
sarl
push
dec
scas
and
xor
xchg
nop
in
ljmp
jmp
lock
mov
mov
and
cmp
popa
add
movsb
aas
sbbb
iret
outsl
lods
xchg
loope
push
lret
mov
frstor
js
mov
fisttpll
into
loopne
xor
adc
xchg
push
cmpsb
sub
push
inc
notb
sub
mov
mov
clc
jbe
mov
hlt
lea
dec
or
fidivl
dec
mov
sub
mov
mov
insb
jmp
popa
adc
bound
mov
jae
cs
pusha
ljmp
imul
add
out
ret
or
outsb
fs
sub
sub
mov
mov
sub
fists
sbb
lahf
or
push
cmp
dec
dec
addl
and
nop
imul
cmp
cmp
lock
mov
sub
js
cmp
repnz
lea
mov
mov
xlat
lds
enter
jno
leave
cmp
push
mov
fidivs
or
mov
xchg
sub
xchg
sbb
movsl
inc
in
mov
push
xchg
sbb
cmp
aas
mov
lret
stos
jmp
adc
sbb
out
sbb
mov
jp
fnstenv
addl
daa
mov
jmp
jns
push
stc
mov
out
out
dec
shrl
pop
sbb
jmp
pusha
stc
cwtl
cmpsb
jo
jns
repnz
lahf
mov
inc
movsl
loopne
xchg
clc
mov
push
adc
mov
adc
inc
adc
sub
pop
sub
addr16
mov
aas
and
mov
test
cs
pop
mov
sub
call
add
mov
push
movsb
cld
mov
cmp
adc
sbb
pusha
pop
les
movsl
mov
ja
or
xor
add
loope
jb
or
out
mov
pushf
push
xor
mov
push
mov
xchg
inc
fbld
addr16
xor
dec
jge
lcall
mov
movsb
mov
fwait
int3
and
jg
loope
outsl
outsl
jno
push
pop
mov
mov
xchg
ret
cmp
pushf
mov
push
xor
dec
aam
aam
pop
fnstenv
aam
enter
dec
loopne
imul
push
push
sbb
adc
mov
das
rol
loopne
mov
movsb
sahf
mov
xchg
call
pop
sub
xchg
out
sub
adc
push
ja
jo
xor
out
scas
nop
push
jno
dec
cmc
mov
cmp
pusha
stos
pop
add
in
ja
mov
addr16
pop
sbb
adc
test
inc
lahf
mov
rcrl
call
lcall
jbe
cmpsb
inc
jb
push
roll
cmp
pop
dec
jmp
push
std
into
sarl
or
push
jns
cmpsb
pop
dec
sub
enter
jns
pop
or
xchg
pusha
xchg
scas
jle
jb
dec
out
iret
sub
shlb
cmpsb
sbbl
into
xchg
outsb
xor
dec
icebp
ret
pop
test
push
pop
pop
dec
pop
mov
sbb
push
fisubs
sbb
aaa
add
aas
ss
add
xor
repz
xchg
pop
iret
xor
jb
xor
test
pop
sarl
and
sbb
dec
push
fdivp
jmp
fisttpl
aam
push
add
jmp
jne
aam
in
test
arpl
sbb
mov
sbb
xchg
mov
jb
pop
mov
dec
imul
addl
cltd
popf
aad
dec
xchg
or
xchg
mov
jecxz
sbb
xor
call
daa
sbb
in
push
inc
jno
mov
aaa
pop
test
inc
and
mov
ss
sbb
dec
cmp
cmpsb
icebp
sbb
pushf
mov
sub
push
jb
aaa
or
and
loop
js
mov
add
iret
fstl
sub
sub
lds
ret
mov
fdivrs
xchg
dec
mov
mov
in
sub
mov
pop
popf
test
xchg
rclb
xor
sbb
push
out
faddl
xor
adcb
testb
rol
mov
dec
or
outsb
push
cmpsl
sub
dec
pop
add
or
sub
xor
aas
xlat
adc
inc
loope
dec
fwait
icebp
dec
fsubrl
pop
jns
jbe
xchg
into
fs
ljmp
test
xor
push
addl
imulb
push
popa
std
push
loop
and
fisubrl
mulb
xchg
mov
xchg
sbb
jmp
xor
jnp
xchg
lret
mov
or
in
mov
orb
out
cmp
rol
jb
aad
pop
movsl
fidivrl
push
frstpm(287
arpl
push
cmp
and
movl
repz
repz
add
xchg
and
pop
ret
imul
loop
hlt
jmp
pop
sti
nop
pop
mov
dec
je
pop
xor
sub
adc
ds
test
xor
clc
dec
mov
ficompl
scas
out
inc
clc
in
ja
in
stos
add
push
sub
push
inc
pop
or
nop
cs
cmp
adc
dec
ret
test
push
divl
cmp
inc
cli
inc
pop
xchg
adc
inc
test
jns
mov
data16
pop
sahf
adc
and
popf
mov
in
popa
add
test
or
sti
in
sub
push
inc
lock
dec
scas
cmc
push
dec
add
js
aam
or
int3
mov
pop
rcrl
xchg
fbld
jl
push
pop
mov
mov
mov
mov
popl
sbb
and
movsl
mov
fmuls
inc
pop
mov
cmpsb
fisubrs
lock
std
stos
js
icebp
xchg
jns
inc
mov
cltd
hlt
rclb
xlat
inc
outsl
enter
movups
lcall
in
aam
sbbb
push
ficomps
rclb
push
add
add
bound
leave
mov
scas
jb
and
aad
jbe
ficomps
adc
test
xchg
pop
pop
pushf
jmp
adc
sahf
jns
lret
stos
stos
inc
mov
jae
push
aaa
clc
jl
adc
add
int
mov
faddl
fldl
outsl
jnp
mov
lret
xchg
xor
mov
shl
imul
pusha
adc
pusha
inc
pop
push
mov
stos
dec
inc
repnz
insl
out
mov
es
test
test
jo
cltd
lods
ds
arpl
cmpb
test
leave
mov
hlt
push
out
popa
imul
fcompl
or
mov
je
push
in
sub
jnp
lcall
cmp
add
sbb
iret
aas
mov
fxch
ja
jo
into
pusha
cmp
std
push
adc
mov
mov
add
inc
jae
jno
jge
jp
stos
movsb
mov
scas
mov
push
push
dec
lock
mov
mov
fwait
loop
fisubs
cmpsb
sbb
clc
das
nop
aaa
push
xor
cwtl
mov
fmuls
stos
out
nop
aam
sub
sub
and
pop
cmp
sub
pop
xchg
iret
cmp
dec
ss
inc
push
jmp
je
sub
loope
mov
hlt
xor
aaa
es
mov
ficoml
mov
jnp
cltd
and
xchg
stos
out
cld
subb
rcrb
mov
jo
insb
cmpsl
dec
rcl
stos
inc
jae
add
push
ror
cmp
iret
dec
mov
into
icebp
ds
sar
pop
sbb
pop
lds
outsb
jg
dec
xor
pop
add
frstor
mov
dec
fldenv
mov
cmp
xchg
mov
bound
cmp
xchg
sar
mov
stos
js
ds
mov
rol
out
popa
outsb
lret
xor
cmpsb
imul
inc
or
jnp
or
mov
mov
mov
inc
data16
fbstp
fmull
xor
pop
xchg
scas
or
sub
aam
jne
jae
gs
das
inc
push
je
pushf
cmp
clc
and
cmp
and
aam
xor
arpl
mov
ja
push
enter
mov
cmp
adc
xor
pop
adc
shrb
fwait
xor
xchg
sbb
popf
je
add
out
pop
js
add
pop
cltd
fsubs
dec
lret
xor
xchg
data16
or
pop
mov
or
cli
int3
mov
push
imul
in
out
mov
mov
fcomip
or
adcb
sahf
popa
inc
ja
or
pop
mov
or
out
dec
cld
test
xchg
jle
sbb
aam
mov
mov
scas
pop
mov
dec
nop
stos
inc
pop
fwait
loopne
jg
pop
push
adc
push
push
testl
push
test
ljmp
mov
subb
stc
es
adc
pushl
sahf
aaa
or
cli
int
test
test
in
test
scas
push
aaa
std
mov
push
jmp
push
adc
lret
inc
sub
jb
xchg
js
cmpsb
pop
out
mov
jae
ds
pop
xor
mov
cmovl
lahf
ja
cwtl
test
cmp
xchg
and
sahf
adc
cwtl
fdivrp
mov
stos
aaa
popf
xchg
push
sahf
jge
push
jne
scas
out
int
push
js
into
or
ss
push
sbb
clc
mov
xchg
add
lds
pop
pop
pop
jmp
or
insl
xor
mov
mov
outsl
leave
out
and
mov
pop
mov
dec
shll
push
mov
mov
push
mov
cmp
inc
cmpl
sbb
cltd
jo
jb
cli
aam
pop
shll
jl
pop
cltd
das
sub
jnp
fsubrs
popf
cmp
cmp
jno
jo
mov
lds
into
es
and
pop
aas
sub
mov
cmp
rolb
lahf
fsubl
lcall
mov
sub
adc
je
mov
fmul
xchg
leave
mov
push
int
movd
xchg
jmp
lea
mov
inc
and
dec
mov
imul
bound
xchg
push
xor
xlat
mul
hlt
fiadds
js
jl
lahf
loope
cmp
mov
int
xchg
int
push
xchg
enter
dec
inc
xchg
mov
add
xchg
dec
sub
imul
fadds
jbe
inc
sub
sysenter
adc
jmp
sub
or
jae
jno
mov
adc
mov
dec
inc
inc
mov
cmpsb
cmp
push
adc
lds
adc
push
jp
pop
or
add
aas
shll
arpl
js
rcrl
mov
pop
or
cmp
inc
imul
pop
cmp
inc
fmul
in
popf
cmpb
pop
adc
mov
adc
and
dec
in
test
sar
les
cmp
pop
pop
aad
mov
add
and
test
lret
sbb
popa
or
sbb
pop
add
outsl
ss
pushf
add
push
sub
and
rorl
jnp
inc
add
adc
mov
std
jo
sub
xchg
repnz
sub
and
cltd
out
out
aaa
mov
and
push
xchg
xchg
js
cwtl
int3
rorb
xor
rcrl
enter
jno
popl
xor
adc
pop
push
or
jnp
fsubrs
arpl
sahf
adc
mov
xchg
es
ljmp
cmp
mov
pop
aaa
mov
ljmp
sbb
push
inc
mov
fisttpl
mov
push
dec
xchg
mov
and
xor
sahf
and
adc
fs
mov
outsl
aas
mov
add
mov
inc
cmp
stc
or
jns
nop
dec
or
inc
leave
mov
xchg
bound
cmp
jecxz
lds
mov
xchg
je
cmp
jnp
xor
pushf
cmp
scas
cs
push
les
mov
and
sbb
scas
mov
pop
ljmp
push
das
fcomip
pmuludq
in
and
sub
inc
xor
sbb
dec
mov
aam
cli
dec
and
stos
loopne
jge
test
dec
and
sbb
ret
stos
lea
bound
sbb
ljmp
fwait
imul
push
leave
cwtl
cmp
scas
outsb
fwait
pop
mov
into
or
add
sbb
xor
fldcw
pop
cmpsb
pop
dec
cltd
test
movsb
outsb
cld
and
mov
or
stc
jl
loope
fcompl
sub
lods
jg
mov
lret
ror
mov
fs
aam
icebp
mov
orb
cmp
cltd
jecxz
enter
push
insb
test
sub
fbstp
inc
insb
jns
mov
pop
jbe
adc
and
inc
cld
sub
out
and
mov
pushl
mov
adc
test
or
sbb
imul
inc
add
pusha
lea
scas
sti
xor
loopne
adc
mov
into
cmp
out
mov
aas
mov
stos
ds
data16
ds
out
cmpsb
call
or
int3
adc
fsub
subb
and
loopne
mov
ss
sbb
lret
sub
mov
add
xor
mov
insl
adc
mov
cmp
jp
mov
lea
cmp
bnd
cmp
clc
lods
xor
mov
shll
subl
dec
inc
pushf
add
push
jae
addb
mov
fimuls
fchs
imul
pop
push
dec
xor
pop
add
es
movsb
xchg
xlat
push
pop
mov
jmp
jnp
imul
loope
cmp
outsl
addr16
lea
rolb
dec
pop
cs
sub
xchg
sub
fisubrl
pop
sbb
in
mov
inc
pushf
in
scas
jecxz
fwait
mov
add
jno
lea
clc
out
and
and
xchg
adc
movsb
imul
adcl
push
rcl
fnstsw
stc
jo
lods
fwait
jmp
mov
lea
xchg
sbb
sbb
mov
mov
cmp
pop
jo
jb
popa
jne,pn
and
cmp
stos
lret
ds
push
and
inc
mov
ja
push
cmp
int3
adcl
jnp
daa
int3
or
cmp
cmp
add
aaa
mov
push
int3
out
fimuls
push
cmp
gs
jns
pushf
push
mov
sbb
lods
cmpsl
inc
test
push
ja
xchg
call
fiadds
cmp
enter
cmp
gs
pusha
sbb
lock
ret
pusha
push
imul
xchg
scas
inc
ds
sbb
sub
leave
xorb
jecxz
repz
cmp
and
arpl
adc
aam
lods
sbb
or
inc
add
mov
les
dec
loopne
jbe
fdivrs
inc
les
out
rclb
jae,pn
and
dec
xor
fbld
call
iret
iret
pop
subb
lds
pop
shrb
cmp
sub
lret
fists
jl
pop
push
imul
mov
lret
fbld
das
imul
outsb
rolb
jnp
mov
insl
xor
cmp
iret
gs
mov
cld
clc
pushf
jno
test
add
cltd
mov
loope
fldenv
iret
clc
cmp
mov
je
std
cmpsl
popa
mov
in
push
cmpsl
mov
and
shlb
popa
push
and
divb
cli
clc
clc
insb
out
test
jno
fsub
xor
fwait
mov
xor
les
mov
and
or
push
jb
add
out
insb
clc
clc
dec
mov
daa
cmp
and
add
dec
outsb
xor
les
fcoml
enter
inc
xchg
test
inc
push
stos
out
jbe
pop
popa
cld
lods
jbe
cmpsl
loopne
fcomip
sbb
sub
cltd
cmp
mov
movsb
dec
xor
call
push
mov
and
enter
add
fstpl
aas
cmc
pop
outsb
xor
ret
or
mov
cmp
aad
bnd
mov
test
adc
mov
jbe
xchg
pop
out
jnp
pop
roll
loopne
or
shll
mov
shll
sub
inc
repz
ret
test
call
jg
adc
cld
les
mov
jp
jno
rcrb
fbstp
dec
pop
inc
xchg
js
leave
or
rcll
iret
mov
cwtl
lret
cmp
sub
nop
jns
out
mov
xchg
push
jne
push
cmp
mov
push
inc
cs
pushl
cmp
and
mov
push
inc
mov
lods
jb
mov
mov
mov
inc
sbb
mov
fmulp
imul
push
mov
pushf
mov
fwait
lahf
int3
testl
xchg
ljmp
nop
mov
dec
in
pop
xchg
popa
aas
je
pop
dec
adc
out
dec
sahf
ds
mul
xchg
in
pop
jp
inc
scas
lds
push
mov
xchg
loop
mov
imul
sbb
dec
es
xor
inc
push
jae
jnp,pt
jnp
jg
je
and
xor
stc
in
mov
clc
xor
out
sbbb
addr16
cs
fldl
into
out
fldt
and
pop
mov
in
sbb
xchg
jnp
add
in
push
lods
icebp
and
frstor
cmp
mov
push
fcomi
jge
and
test
mov
sbb
orl
mov
adc
vdivsd
sbb
outsb
mov
adc
pop
jmp
jmp
test
sub
cmp
push
sub
pushf
xlat
fdivrs
and
aad
fst
int3
lea
iret
or
iret
mov
daa
ret
aam
push
push
add
mov
imul
or
or
adc
test
rcl
aas
mov
push
xlat
daa
aaa
fildll
dec
fyl2xp1
push
cmp
fdivs
adc
mov
sarl
cmpsl
popf
lock
mov
or
mov
jge
stos
sub
xchg
mov
pop
outsl
repnz
rclb
mov
jg
sti
or
lcall
push
mov
iret
cli
inc
leave
aaa
fisubl
lcall
jns
loope
aad
xor
int3
nop
hlt
rcr
popl
cmp
mov
repz
jns
push
lahf
cmp
fimull
add
pop
or
sahf
stc
data16
int
mov
shl
xchg
adc
in
movsb
sbb
sbb
xchg
dec
or
icebp
xor
into
lods
mov
aaa
sarb
aad
inc
fiadds
rorl
sbb
pop
stos
fnstsw
jl
int3
mov
mov
icebp
push
mov
cs
pusha
cmp
rcl
jg
shll
adc
iret
sub
push
jo
sub
mov
imul
cltd
pushf
cmp
or
push
test
jbe
pusha
out
aas
add
pop
imul
outsb
mov
add
notb
cmp
or
rcrb
pushf
cmpsl
minps
mov
fwait
stc
pop
rcl
outsl
mov
jne
fildl
pop
sub
rcll
mov
dec
and
pop
and
aad
adc
and
cmp
sbb
popa
xor
pop
les
xor
jb
call
lock
mov
jns
and
dec
push
sub
xadd
or
add
ja
rcrl
fcmovbe
cs
cli
mov
mov
in
lret
in
pop
cmc
stc
fistpll
clc
lret
dec
sub
pop
aam
xor
jnp
test
or
aad
push
sbb
nop
pop
jae
js
push
xor
dec
movsb
mov
pop
movsl
pop
sbb
xchg
adc
cli
std
and
add
add
jbe
sbb
pop
pop
xor
pop
das
xchg
popa
pop
jne
push
aad
sub
outsb
fsubs
xor
xchg
jmp
mull
in
loop
xor
and
lret
xchg
jb
jg
xchg
gs
aaa
into
lds
pop
adc
call
add
iret
rcl
icebp
aam
add
add
dec
out
sbb
repnz
int
scas
aad
out
and
push
mov
inc
or
mov
dec
loopne
mov
xchg
les
adc
pop
ret
mov
jb
lock
loop
and
adc
jb
repnz
stos
push
add
test
push
imul
ret
push
shll
xchg
pop
push
faddl
mov
scas
daa
adc
push
mov
adc
or
loopne
mov
xchg
pusha
pop
insl
daa
or
xchg
sub
and
mov
cld
in
adc
xor
inc
sub
mov
mov
fdivrl
push
out
push
test
push
test
scas
loop
push
lahf
stc
or
jp
or
imul
dec
mov
push
js
scas
mov
fstpl
repz
popl
push
fisttpll
mov
shrb
xchg
cwtl
std
push
mov
addb
das
adc
lcall
xor
popf
ljmp
ljmp
jle
mov
push
sbb
push
sub
shr
xor
adc
push
adc
xor
in
cltd
pop
cmc
sbb
xchg
mov
lds
xchg
repz
mov
xchg
repz
mov
xchg
xor
mov
cmpl
fdivrs
sbb
outsb
in
ret
out
mov
sub
shll
lret
inc
cltd
pop
jp
lret
pop
pop
mov
pop
mov
int3
rolb
sub
mov
adc
push
xchg
sub
sbb
mov
mov
push
cs
ret
sahf
jmp
repz
cwtl
pusha
mov
or
rcrb
pop
negl
cltd
lret
dec
movsb
ffree
xor
fimull
into
repnz
jb
lods
clc
jmp
jae
lret
pop
in
es
mov
mov
cmp
xlat
push
sub
jl
sub
lret
nop
cmp
fldenv
or
fnstcw
iret
dec
cld
push
bound
push
mov
adc
sub
push
hlt
xor
int
ret
mov
push
daa
cmp
lock
cwtl
sbb
mov
push
or
inc
jae
std
in
jns
dec
jge
jg
lods
mov
hlt
int
lods
xor
mov
mov
mov
movsl
xchg
nop
push
lods
ret
pushf
push
and
xchg
movsl
push
push
int
lock
jno
je
fs
fnsave
data16
outsb
sub
mov
and
stc
mov
outsb
lock
jp
rep
enter
cwtl
repnz
int3
scas
and
notl
hlt
fmull
sti
push
in
scas
add
in
inc
mov
movlps
nop
push
add
scas
mov
and
dec
push
jns
cmp
out
add
insl
pop
in
jne
push
imul
pusha
mov
jae
xchg
mov
sti
daa
sub
bound
inc
aad
jnp
xchg
out
xchg
or
insl
out
pusha
inc
pop
nop
stos
popf
xor
xlat
pop
cs
xchg
cmp
xchg
leave
loop
mov
inc
xchg
add
add
in
daa
pop
out
jne
jge
and
add
cwtl
mov
cmp
push
popa
stos
inc
std
cmp
jle
xor
push
jle
jp
orb
lret
add
jns
push
mov
testl
push
stos
insl
outsl
mov
setnp
cli
push
inc
cmpsl
or
mov
cld
xchg
xchg
pop
add
es
pop
stos
mov
in
add
outsl
push
arpl
mov
shl
les
jne
cmp
or
lret
or
notl
jbe
push
inc
scas
dec
and
shrl
inc
cmpsl
push
and
jg
pop
sub
cmp
add
push
pop
sub
daa
mov
je
daa
cmc
fisubs
xor
jns
mov
push
and
popa
inc
xchg
mull
xchg
ljmp
xchg
pop
je
pop
jne
xchg
out
inc
in
cmp
adc
sarb
bswap
cmc
out
loop
loop
jne
push
sti
xchg
dec
dec
loopne
jns
aad
stc
adc
xchg
sub
jns
or
roll
and
add
cmpsl
add
mov
jne
test
jbe
test
or
orl
int
ljmp
flds
jns
clc
jle
aaa
dec
adc
cltd
outsb
cmp
cli
sub
test
fcmovb
ja
pop
cwtl
sub
sub
stos
int3
and
mov
cli
jne
mov
cmpxchg8b
enter
imul
mov
pop
xor
pop
sbb
clc
fcoml
push
and
add
out
int
adc
daa
and
dec
or
xchg
pop
outsb
xchg
div
js
scas
and
xor
mov
in
inc
cmp
lret
or
xor
js
mov
fdivs
les
add
mov
push
pop
subl
jge
xorb
push
test
rcrl
dec
inc
adcl
inc
jmp
jb
lock
xor
in
lea
cmpsl
cmp
sbb
push
fs
sbb
mov
jle
mov
fadds
fwait
sub
insl
xchg
scas
es
mov
push
pop
mov
arpl
clc
mov
cmp
or
iret
lods
and
lahf
shlb
cmp
test
inc
sub
push
pushf
outsl
imul
movsl
inc
in
movsl
pop
mov
or
in
push
out
sbb
add
push
jmp
call
loope
in
in
hlt
pop
sbb
arpl
and
mov
clc
mov
jg
mov
push
push
add
mov
insb
pop
insl
push
scas
inc
mov
int
xor
ret
jnp
hlt
fsubs
xchg
aas
push
dec
mov
fiaddl
std
std
iret
fwait
inc
aad
flds
xor
xchg
int3
repz
repz
sub
xor
push
and
shrl
movsl
pop
scas
loope
cmp
push
cmc
cmp
mov
insb
gs
dec
and
es
std
daa
xor
adc
mov
xor
js
jp
jle
out
dec
mov
mov
push
xor
jp
xor
sub
fwait
dec
dec
movsb
sbb
movb
mov
sub
ja
shrl
cs
icebp
sbb
mov
or
inc
ljmp
dec
pop
or
xchg
rcrl
push
fidivs
rcrl
inc
mov
inc
lea
add
mov
lds
and
fisubl
add
cltd
mov
int3
adc
les
cs
jecxz
add
jmp
fs
pop
jnp
mov
call
je
cs
imul
pop
pop
adc
inc
imul
gs
int
loopne
cwtl
dec
or
insl
jle
adc
in
cmp
xchg
dec
cmp
in
lods
jp
outsl
imul
inc
test
test
xorb
jg
enter
push
add
movsb
sbbl
in
inc
std
aas
sub
dec
stc
push
lds
gs
xchg
sub
mov
sub
add
mov
cmpsl
mov
add
jmp
or
scas
and
int3
push
int
ss
rcl
inc
shlb
je
add
inc
inc
or
js
push
xor
lret
cmp
dec
cld
push
insb
pop
adc
pop
mov
sti
imul
mov
and
mov
aas
sbb
imul
popa
stos
pop
in
mov
ret
test
shlb
stos
ret
push
in
scas
fs
pop
test
stos
jp
add
pushf
out
mov
xor
jl
popf
adc
adc
push
bound
jns
flds
xor
sub
sub
and
mov
in
dec
mov
negl
inc
xor
lret
insb
cwtl
dec
mov
xchg
mov
rorl
push
jge
orl
lods
mov
flds
mov
ds
or
and
sbbb
mov
shrb
lcall
mov
leave
sub
loope
cmp
nop
jne
xor
xor
decb
pop
mov
mov
mov
lea
cli
mov
imul
jbe
inc
addr16
push
movsb
sti
and
in
divb
inc
ffree
pop
lret
xchg
mov
outsb
jp
mov
add
mov
das
mov
fcomi
or
jmp
movsb
or
or
add
mov
xor
adc
pop
mov
jp
inc
or
push
sarb
xlat
mov
sbb
das
sub
xor
inc
cmpsb
lds
lods
push
shll
shlb
out
js
loopne
repz
int3
adc
inc
xchg
push
sti
out
fdivrs
test
xchg
ja
stos
dec
scas
aaa
sbb
or
pop
rcrl
and
enter
arpl
fs
lcall
inc
jnp
js
scas
jmp
mov
cmp
adc
cli
fidivrl
sbbl
push
sahf
shrb
sbb
call
clc
daa
rorb
xor
std
in
das
aad
test
xchg
loop
xorl
loope
or
in
mov
jno
imul
xchg
rol
test
into
lock
outsl
dec
sbb
sub
subb
sti
stos
jmp
push
pusha
dec
adc
pop
lahf
pop
xorb
sahf
push
xorb
mov
notb
sbb
dec
push
out
cmp
das
mov
jp
sahf
test
add
sahf
test
sub
sbb
scas
aam
pop
add
pop
push
sahf
insl
xor
aad
cmp
push
pop
inc
sub
sbb
xchg
imul
sub
and
repnz
test
xor
pop
jmp
mov
add
xor
scas
inc
cmp
fmull
adc
mov
jle
cmp
pop
sbb
sbb
pop
push
adc
xchg
add
sub
cltd
cmp
imul
repnz
andb
inc
es
push
addl
and
dec
fxam
mov
or
push
inc
inc
or
jp
jmp
sarl
out
sbb
scas
adc
jno
hlt
ljmp
inc
mov
popf
mov
shll
repz
loope
push
push
cmp
movsl
jnp
lret
imul
and
jb
pop
enter
push
cmp
jl
push
dec
and
notl
fbld
into
das
jnp
outsb
in
scas
test
movsl
imul
pop
and
add
fldenv
xchg
cli
mov
ret
dec
mov
movsb
pop
inc
pop
dec
int
sub
outsl
sbb
daa
sub
mov
cmp
stc
wbinvd
insl
sbb
mov
jo
mov
js
xor
daa
or
shlb
shll
or
jno
mov
mov
imull
scas
dec
mov
vcmple_oqpd
cmp
movsl
subb
int
and
or
test
imul
movsl
es
or
lahf
cmp
and
loope
xchg
outsl
push
push
xchg
dec
fwait
loope
and
bound
mov
in
pusha
or
cmp
ret
jecxz
lods
xor
sbb
lock
xchg
stc
bnd
sbb
cmpsb
call
lcall
and
push
ljmp
sbb
inc
jle
fs
and
push
out
dec
sub
fs
and
mov
mov
xor
push
lds
or
or
mov
xor
or
in
imul
outsb
pop
fidivrs
imul
jmp
mov
pusha
clc
mov
leave
cmp
xlat
repnz
pop
int
inc
xchg
push
leave
dec
mov
lods
or
stos
push
orb
lret
mov
xor
aaa
sbb
fcomip
lds
push
jb
sbbl
loope
das
mov
dec
loope
add
push
mov
dec
es
stc
xchg
in
call
dec
mov
add
xchg
daa
push
sbb
dec
int3
fldt
je
jmp
and
movsb
xchg
lea
jecxz
pop
cmc
repnz
testb
jb
push
inc
lcall
enter
jae
mov
add
lods
mov
mov
shl
xor
or
stos
fcoms
push
sbb
cmpsl
push
bound
adc
xor
sbb
push
addr16
push
mov
sbb
xchg
jp
insl
xchg
and
dec
mov
inc
mov
pop
xchg
push
inc
ds
cmp
loopne
and
pop
std
mov
fcomip
shrl
sbb
fbstp
cmp
adc
fsubrs
jbe
outsl
rclb
xchg
or
imul
jge
fstl
mov
pop
cwtl
xor
dec
push
movsb
ds
adc
mov
dec
test
stc
jns
xor
icebp
in
xor
je
pop
lahf
inc
lea
push
xchg
push
xchg
cld
mov
inc
rcll
pushf
xor
push
inc
mov
push
pop
mov
hlt
dec
push
mov
loop
xlat
aas
out
ljmp
xor
xchg
insb
bound
bound
xchg
test
add
lods
insb
push
mov
xchg
push
shll
sti
rcrl
mov
mov
mov
mov
pop
stos
xor
add
loop
jmp
ret
jecxz
xor
pop
xchg
sub
in
les
cmp
jne
int
int3
es
inc
aad
nop
rcll
sub
test
adc
sub
inc
ret
pop
inc
bnd
stc
cs
pop
mov
test
mov
dec
es
mov
scas
inc
fwait
out
outsl
lock
mov
dec
mov
into
jmp
popl
ret
xchg
fcoml
insb
int
rcrl
shl
push
jecxz
dec
jecxz
scas
lea
mov
lcall
lcall
jecxz
sub
fsubs
insl
dec
mov
fisttpll
cmc
ljmp
orl
or
cmpsl
xchg
inc
inc
cmp
shll
adc
into
sub
xchg
jecxz
mov
push
outsb
fdiv
repnz
aaa
ret
jno
push
push
dec
mov
push
add
push
insl
and
fcomps
cmp
sub
jp
or
outsb
pop
out
or
jecxz
out
inc
jge
es
pop
andl
mov
xchg
in
sbb
gs
pop
orb
mov
mov
push
imul
push
adc
cltd
ds
add
dec
rclb
fcompl
sbb
cmp
fs
movsb
pop
jl
pushf
push
outsb
sbb
mov
jne
dec
jg
jl
mov
sbb
dec
scas
sub
dec
adc
call
or
push
add
out
inc
daa
cmpsb
push
into
pop
mov
xchg
mov
inc
out
iret
push
push
adc
inc
cli
dec
divb
adc
data16
xchg
jns
or
lods
dec
mov
out
cmp
cmpb
cmp
ja
xchg
cmp
sbb
mov
inc
inc
jp
mov
adc
jge
inc
repz
mov
or
int3
xor
add
stc
mov
scas
adc
or
mov
mov
lahf
lds
inc
xor
inc
push
mov
jge
push
leave
mov
divb
xor
dec
add
fidivl
mov
bound
adc
les
jg
sbb
aas
popa
push
ja
add
add
scas
pop
aam
iret
popf
into
mov
adc
popf
push
or
xchg
fisttpl
push
lods
cmpsl
pop
popa
mov
and
lret
mov
daa
adc
push
sub
out
leave
xchg
dec
and
sub
popa
sub
cmc
pop
test
std
jmp
aas
sahf
outsl
cmp
or
add
pop
adcl
inc
mov
fistpl
push
jg
xchg
aas
les
call
mov
punpckhdq
fnsave
inc
push
cld
inc
add
in
sub
push
aam
cmp
sub
mov
ljmp
arpl
hlt
mov
mov
lret
add
pushf
cmp
fists
int3
and
sub
cmp
pop
sbb
mov
mov
pop
or
and
and
outsl
jnp
and
mov
push
fwait
popf
add
fldl
mov
push
inc
sbb
loopne
mov
aaa
adc
xlat
cltd
inc
pop
ficoml
push
xor
inc
lahf
repnz
and
and
or
movsl
aaa
sub
loope
test
mov
jmp
ds
and
pushf
pop
mov
and
loopne
pop
aaa
push
adc
and
jo
or
fs
and
cmpsl
repnz
add
lock
aaa
aas
jle
jmp
sbbb
shll
xchg
mov
movsb
and
js
mov
and
nop
dec
cmp
loopne
cmpsb
mov
mov
dec
add
orl
testb
jmp
dec
mov
jae
cmp
es
es
shr
or
hlt
jl
mov
dec
je
xchg
divb
rcr
mov
cld
xor
dec
xchg
or
loop
add
add
or
movsb
fstps
add
mov
mov
or
inc
push
int
inc
pop
test
in
jbe
inc
add
inc
sbb
jae
xor
xor
ret
pop
movsl
adc
stos
je
jl
push
aas
jge
add
pop
fwait
repz
mov
mov
insl
repz
incb
sbb
add
cmpsl
cltd
sbb
jnp
mov
jnp
inc
orl
ret
mov
jae
add
scas
arpl
xlat
jns
adc
gs
scas
pop
scas
scas
repz
cmpsl
fwait
and
xchg
cmpsb
test
repnz
ja
int
sub
dec
enter
data16
and
push
dec
stos
mul
nop
or
mov
add
loope
bound
cmovge
fidivrl
xchg
adc
and
pop
jae
lahf
sbb
and
scas
fsubrs
dec
lds
adc
rorl
add
dec
mov
cli
outsb
clc
and
mov
pop
aam
jne
or
aam
sub
popa
push
mov
fistl
xchg
iret
arpl
mov
cwtl
jns,pn
fsubs
arpl
xchg
inc
test
dec
push
xchg
mov
ss
lock
adc
jbe
shlb
mov
rol
adc
sar
inc
mov
pop
add
push
sbb
movsb
push
push
add
sbb
xor
adc
mov
mov
int3
jecxz
fdivrl
cltd
outsl
jp
mov
or
cmp
sub
add
imul
fcompl
xor
les
xor
jns
fildl
adc
dec
je
and
stos
cmp
stc
lret
pop
cmp
popf
outsb
in
movsb
rcl
ret
mov
fs
out
imul
dec
lea
iret
loope
sahf
sbb
shr
or
dec
iret
and
out
mov
inc
es
popf
rcrl
std
ljmp
andl
cmpl
adc
sub
pop
jb
mov
inc
cmpsl
cltd
cmc
and
cmc
adc
push
aaa
and
es
movsl
jg
rclb
push
fadds
shll
xchg
pop
cmp
sub
cmp
in
pusha
icebp
fstps
mov
je
sbb
xor
sbb
scas
jp
scas
pusha
push
mov
add
xchg
testl
xchg
stos
pop
sbbl
test
xor
mov
xorb
js
fisttpll
push
mov
packssdw
loope
add
and
cmp
movb
xchg
xor
jmp
outsb
std
mov
out
aaa
push
add
jl
pop
div
in
and
daa
rcll
fcomi
cmp
orb
rol
imul
aas
call
xchg
pop
inc
adc
std
es
jnp
xor
xchg
mov
pop
jecxz
mov
sub
dec
pop
sti
jl
push
aad
movsb
jns
scas
dec
adc
mov
in
lcall
lock
mov
sub
inc
imul
gs
je
mov
dec
pop
cld
mov
cmp
xchg
pop
jns
out
jno
cmp
int3
clc
mov
jb
repnz
mov
mov
push
dec
jbe
mov
xchg
or
cmp
push
dec
pop
repnz
sbb
adc
stos
adc
insb
jne
sti
xlat
or
sbb
loope
outsl
test
jae
scas
jg
out
std
jb
not
mov
lret
xor
aas
add
mov
pushf
xchg
xchg
fxsave
and
mov
divl
subb
enter
sbb
ficoml
push
into
cmp
mov
push
clc
mov
push
inc
loop
andl
cmpsl
les
je
gs
dec
loope
mov
enter
pop
pop
mov
adc
aas
ficoml
lods
and
sbb
cmp
scas
cmp
pop
pop
mov
mov
add
jp
das
in
aad
mov
mov
dec
mov
int
repz
xlat
sbb
test
orl
lock
js
push
pop
ret
mov
test
pop
cwtl
inc
clc
test
gs
and
push
push
push
int3
fcompl
jle
add
testb
loopne
fldl
sarl
and
xchg
inc
mov
or
xor
clc
inc
inc
mov
push
rcr
sub
leave
aam
test
and
rolb
jns
cli
jecxz
test
scas
push
cmpsb
pop
subl
rcrl
push
lcall
mov
std
pop
xchg
jecxz
movsl
aam
divb
mov
mov
cli
andb
cmp
push
pop
push
pop
push
inc
add
stos
arpl
sub
scas
xor
lahf
inc
in
lods
sbb
out
and
loope
test
push
pop
jno
fdivs
ljmp
aam
pop
int3
inc
jle
or
sbb
fsubl
shll
jmp
bnd
mov
data16
test
pop
pop
fwait
gs
jno
and
add
add
add
or
addr16
cmp
jge
es
stos
js
movsb
mov
lret
movsb
aad
push
mov
cli
cmc
subb
insl
ret
add
push
mov
aaa
and
sahf
outsl
int
sub
add
arpl
icebp
sahf
out
bound
das
adcb
mov
out
dec
in
movsl
fcomps
stc
cmpsl
movups
cld
inc
dec
pop
push
or
rorb
add
les
push
ljmp
fiaddl
and
imul
sbb
jl
test
mov
je
dec
inc
inc
push
cmp
add
cli
sahf
imul
and
loopnew
shll
scas
int
lea
cs
xor
clc
and
aas
cmovg
fwait
lock
or
lods
subb
pop
cmp
das
pop
adc
pushf
lds
xor
mov
push
lock
lret
push
push
pop
cmp
in
push
jmp
mov
ret
movsb
les
mov
shrb
jb
mov
cs
aaa
dec
dec
mov
or
mov
push
lods
adcl
mov
aad
mov
lds
dec
imul
clc
aad
fsubl
cmpsl
arpl
push
adc
mov
movl
fadds
xchg
test
cmpsl
and
ds
mov
mov
rorl
push
mov
ret
xchg
xor
jmp
out
push
and
sbb
push
jge
sahf
es
adc
call
imul
and
pop
or
and
xor
push
cmp
lods
cmpsb
pop
jns
scas
or
testl
xchg
jp
lock
lret
ret
popa
xor
jbe
add
fwait
mov
mov
jge
int
loopne
or
mov
in
out
mov
pop
dec
cmpsl
mov
jg
mov
adc
jp
push
push
mov
int3
ja
mov
jmp
shlb
dec
mov
in
stc
mov
inc
push
dec
movb
iret
stc
pop
adc
aam
icebp
leave
or
es
jp
out
mov
lock
push
stc
aaa
dec
mov
xlat
xor
mov
dec
pop
fwait
test
jbe
push
cli
mov
cmpl
punpcklbw
mov
enter
and
mov
cmp
loope
dec
sbb
and
aas
adc
adc
stc
mov
mov
notb
inc
mov
in
pop
loop
xor
enter
or
xchg
inc
mov
mov
cmp
repz
out
lcall
sbbl
lret
fmuls
cli
mov
cli
aas
in
add
sub
mov
leave
fmull
mov
movb
push
push
or
dec
fdivrl
cwtl
fisubrs
sarl
paddw
pusha
push
lods
adc
aas
xor
dec
xchg
inc
adc
fsub
mov
xor
or
lea
mov
fidivs
xchg
mov
ljmp
aas
jnp
repnz
in
or
and
xchg
rclb
bound
cs
dec
mov
mov
inc
inc
adc
push
mov
or
dec
pusha
or
out
jbe
ret
adc
jno
clc
lods
jle
daa
cli
xor
inc
hlt
push
rclb
test
lods
cmp
sbb
add
outsl
mov
xchg
push
insb
lret
and
xchg
rcl
cmp
aaa
into
xchg
mov
jne
aam
das
movsl
xchg
outsb
adc
lar
cs
out
out
add
ljmp
insl
push
es
jmp
cmp
sub
ret
jbe
jbe
adc
jge
adc
sub
inc
out
repnz
mov
ret
sarl
or
add
lods
add
popf
lret
clc
std
pusha
jns
xor
cs
push
icebp
nop
dec
jge
insl
and
stos
scas
xor
inc
add
sbb
or
lcall
xchg
int3
int3
enter
out
push
xchg
data16
je
cmpsb
xchg
inc
test
movsb
out
cmp
push
dec
mov
pop
mov
iret
xchg
pop
xor
jno
aam
flds
dec
or
push
lock
xchg
into
lods
outsb
add
sahf
imul
jle
test
jbe
es
mov
mov
pop
push
in
inc
scas
movsb
adc
lods
push
jo
lret
dec
stos
jne
call
aam
xor
mov
pop
imul
jl
daa
sbb
xchg
enter
mov
jns
mov
mov
pusha
sbb
inc
cli
inc
xchg
push
pushf
aaa
push
fldt
pop
imul
push
test
xorl
sbb
ds
ret
adc
push
movsb
sub
mov
and
pop
jo
jo
ja
outsl
sar
test
sahf
aaa
ss
adc
pushf
mov
rorb
and
repnz
lods
push
push
icebp
jo
jecxz
out
imul
or
cmp
out
sarb
xchg
jne
out
dec
imul
or
sti
cmpsl
mov
mov
mov
sbb
mov
push
xor
je
fidivrl
pop
jns
fwait
enter
es
cltd
push
push
mov
aam
roll
rorb
mov
fstps
adc
push
pop
lds
mov
pop
faddp
dec
xchg
xchg
sahf
movsl
adc
mov
call
pushf
leave
cmc
daa
inc
cltd
decb
push
ds
cltd
jns
xor
movsb
xlat
pop
jae
mov
xchg
or
jo
sub
dec
lods
inc
or
in
addr16
sub
mov
pop
push
shl
jge
aaa
mov
mov
push
xorb
pop
xchg
mov
pop
dec
arpl
arpl
repz
mov
mov
sub
add
sbb
jnp
cwtl
xchg
xor
push
imul
data16
mov
scas
and
stos
pop
pop
mov
stc
and
and
fdivl
mov
xchg
rcll
movsb
mov
shl
and
or
shrl
sbb
inc
call
mov
xchg
stc
mov
jle
push
aaa
repnz
jmp
mov
xor
icebp
call
xor
lcall
fsubl
sbb
add
xchg
pop
xor
pop
mov
or
sbb
xor
incl
and
inc
shll
incl
mov
cmp
sbbb
xchg
aaa
lcall
negb
inc
jge
je
dec
ret
push
pop
mulb
adc
sbb
clc
fwait
call
jns
push
ja
je
mov
push
andl
add
scas
mov
loopne
sub
add
call
xchg
pop
pop
adc
lods
loopne
push
push
push
popf
xchg
pushf
outsl
push
sti
dec
pop
outsb
std
inc
or
je
mov
add
js
mov
xchg
adc
into
cmp
inc
popf
sub
aas
fld
sub
jg
sbb
adcl
sti
and
inc
sahf
pop
push
and
adcb
das
or
imul
jo
pop
inc
inc
fisttpl
loop
sub
mov
cmp
movups
out
inc
jecxz
mov
test
idivl
aas
fdiv
mov
fsubrl
lahf
sbb
sub
in
mov
imul
stos
add
sti
outsl
sahf
mov
xchg
lock
movsb
div
nop
xor
cwtl
movsb
in
jno
in
mov
in
push
mov
into
push
push
xchg
out
pop
sbb
incl
clc
js
jmp
or
lods
adc
into
mov
and
leave
fisubs
das
fwait
rdmsr
mov
imul
dec
stc
adc
ficomps
cwtl
shll
nop
mov
sub
pop
mov
push
mov
scas
dec
and
hlt
jno
push
push
lods
mov
ljmp
leave
mov
xchg
mov
inc
movsb
cmp
mov
cmp
lcall
bound
in
add
test
mov
inc
mov
dec
fidivrl
and
sbb
and
pushl
mov
jnp
out
scas
mov
enter
imul
add
sbb
cmp
fs
jmp
add
outsl
inc
lods
movsl
aad
cmc
xchg
mov
push
loopne
push
sbb
xchg
nop
or
je
repnz
adc
cmp
push
mov
and
jl
adc
adc
xchg
pusha
lret
or
lret
aam
cmp
dec
push
sahf
xor
or
dec
pop
and
cmp
rorb
fistpll
movsl
mov
and
sbb
jge
mov
cmp
ds
dec
ds
mov
push
out
dec
lods
ss
pop
and
and
inc
fstl
notl
stc
add
mov
test
add
rcrl
je
ja
movsb
inc
es
mov
lahf
xchg
insl
and
decl
pop
jg
fs
mov
and
add
out
jnp
and
fistps
xor
dec
mulb
jae
test
push
data16
mov
nop
xor
nop
xchg
pop
out
xor
dec
pop
jmp
outsb
das
stos
aad
icebp
addr16
pop
sbb
push
push
pop
shl
cli
mov
scas
sbb
inc
xchg
es
and
and
out
jbe
les
mov
mov
stc
xchg
mov
or
ja
dec
push
insb
gs
pop
jle
aas
xor
cmp
mov
adc
mov
rclb
sbb
mov
bound
jae
int
jnp
call
push
xor
adc
mov
stc
pop
jle
mov
stc
scas
ss
test
dec
jmp
push
cmc
sti
movsb
mov
adcb
fsubs
jnp
adc
dec
repnz
test
jge
out
mov
xchg
test
sbb
int
xchg
push
call
cmp
sti
call
ds
loopne
jl
aad
cmp
inc
push
ja
in
pushf
mov
add
inc
fsubl
jg
push
adcb
sbbl
and
xor
outsl
xor
xor
outsb
repnz
fs
xchg
jg
lods
outsb
mov
sbb
insb
aam
fdivrp
into
xchg
or
push
das
fmull
cmpsb
ret
push
sub
cmp
add
bound
adc
test
sbb
ljmp
xchg
mov
test
hlt
xor
jne
aam
jp
cli
jnp
aam
roll
fs
sbb
and
mov
jl
sti
outsl
jae
imul
scas
fwait
leave
jecxz
adc
out
xor
fistps
adc
adc
mov
scas
shll
jl
push
insl
add
pushf
out
xchg
add
insb
mov
mov
add
and
mov
mov
or
std
xchg
mov
movsl
push
dec
sbbl
movsl
xorb
adc
sub
or
adc
jbe
xchg
repz
movsl
sub
popf
pusha
outsb
fsubrs
cmc
test
repnz
mov
jp
mov
push
mov
lcall
jns
and
push
sub
ds
jb
ja
adc
lods
out
rclb
inc
jbe
cmpsw
jbe
out
cmp
and
xchg
insl
inc
push
sbb
shll
in
fadds
or
icebp
inc
mov
mov
mov
in
dec
mov
add
xrelease
clc
mov
inc
dec
popf
adc
jp
add
cld
test
pop
mov
sbb
sub
js
or
cltd
movsl
pop
fs
shl
out
fnstsw
xchg
or
jecxz
repz
mov
or
into
xor
rcl
push
fildl
lret
sbb
or
lods
jl
lret
insl
lds
faddp
sahf
out
loopne
xor
xor
in
jno
inc
js
lds
mov
xor
mov
push
add
out
pop
jecxz
enter
dec
pop
gs
pop
pusha
add
sti
fwait
and
push
mov
es
mov
sbb
and
cmpsb
fs
enter
aas
jae
push
or
out
test
jae
push
mov
imul
sbb
arpl
add
dec
dec
jecxz
sbb
mov
lods
dec
push
arpl
daa
sub
movsl
and
fcompl
ljmp
popa
roll
into
sti
jbe
fisubl
jl
jmp
inc
lcall
test
ret
mov
push
push
sbb
pop
dec
in
outsl
xor
adc
ja
mov
inc
pop
bound
pop
rep
dec
xchg
sbb
mov
aaa
cli
xchg
jb
lahf
mov
adc
leave
sub
sub
mov
sarl
cld
cmp
push
in
aam
lahf
push
jne
sbb
and
fwait
ljmp
cmpsb
add
sub
test
fadd
popa
jmp
adc
pop
fwait
pop
jno
sbb
cli
xlat
cmp
mov
pop
sub
or
mov
out
or
dec
adc
cs
push
popa
dec
xchg
cmp
push
jae
push
cltd
cmp
dec
lods
xor
repz
inc
ja
notb
jne
xor
add
lods
inc
shlb
or
mov
pop
ds
xchg
sbb
outsl
mov
mov
xor
and
int3
call
push
mov
dec
ss
out
sbb
in
in
inc
inc
clc
pop
pusha
mov
cmpsl
add
incb
orb
aad
data16
test
ja
mov
fisttpll
pop
pop
xchg
outsl
add
mov
pause
cmp
call
or
dec
in
adc
leave
cmp
aaa
je
in
sti
add
dec
inc
push
dec
mov
aas
and
mov
sar
fcoms
daa
xchg
pop
or
jp
in
mov
ret
loope
pop
and
inc
push
into
dec
or
pop
jb
or
mov
mov
sahf
movsl
aas
stos
xor
dec
mov
mov
xchg
out
inc
das
cmp
dec
in
popf
clc
mov
jle
xchg
jno
mov
mov
xchg
and
jg
pop
push
xor
fimull
rol
sbb
mov
in
dec
jae
fsubl
xor
int3
jecxz
lret
lcall
into
sbb
into
dec
adc
lea
mov
mov
out
jmp
pusha
or
mov
cmp
dec
shrb
lods
inc
or
leave
out
stos
xor
sbb
and
mov
xor
test
mov
int3
push
push
outsl
ffreep
cmp
mov
mov
pushf
lea
push
xchg
js
out
xchg
out
adc
jecxz
xchg
dec
in
out
pop
cmp
mov
inc
inc
lock
cmp
stos
ja
inc
repz
sub
and
pop
in
std
iret
lds
rol
mov
roll
adc
setae
ret
xchg
sbb
cmpsb
jae
in
inc
xor
cmp
sbb
cmpsb
movsl
sub
dec
sbb
or
add
pop
lds
leave
push
std
rorb
lahf
mov
pop
je
pop
xchg
add
xor
mov
pop
xor
pop
and
int3
arpl
frstor
outsb
jecxz
loop
in
mov
push
cli
std
xchg
adc
mov
out
dec
ret
jbe
fidivrl
mov
add
sub
mov
mov
and
xchg
int3
push
idiv
jge
leave
mull
lods
js
push
nop
push
pop
dec
subb
cmp
and
and
jge
movsb
xchg
popa
jl
ds
jo
dec
sbb
or
and
sub
xor
mov
fistps
mov
lock
mov
sbb
cmp
adc
inc
pop
adc
dec
push
xchg
addl
push
jnp
cmpsb
cli
lea
push
cmp
sbb
mov
movsl
js
jmp
cmc
inc
mov
pop
popa
lods
pop
clc
lock
pop
mov
addr16
or
icebp
stc
iret
test
mov
scas
cmp
call
xor
les
sti
dec
push
adc
shr
pop
adc
push
jge
cmc
test
dec
data16
fwait
std
jle
addr16
or
stc
lret
mov
lahf
fcmovne
jmp
stos
mov
int3
adc
notl
jge
scas
test
add
xor
lret
add
aam
inc
fwait
xor
adcl
faddp
scas
mov
push
popf
jno
xor
js
push
sahf
ljmp
push
mov
push
test
lret
shlb
fmul
cli
push
stos
js
cmpb
fst
in
fsts
fisttpll
mov
mov
ja
sbb
add
ret
arpl
xlat
stc
push
sarl
cmpsb
mov
and
icebp
xchg
mov
cmpsb
ret
push
or
pop
mov
je
test
jle
pop
pop
jecxz
inc
movsl
mov
cmp
or
add
xchg
jmp
shlb
cmc
shrb
aam
subl
fs
inc
xchg
cltd
add
push
int
arpl
mov
jg
das
icebp
jns
jo
cmpl
jb
das
imul
jle
test
fstps
sub
imul
mov
mov
outsl
jno
push
sbb
aad
lock
in
cmp
fmul
mov
jb
sub
lds
jno
pop
test
icebp
pop
repz
xlat
mov
push
gs
insl
mov
arpl
fxch
adc
xor
addr16
mov
xor
dec
stc
enter
mov
or
cltd
fsts
or
inc
lea
in
xchg
push
add
out
mov
mov
dec
jmp
push
subb
fldt
lret
cmp
std
stos
ret
outsl
push
pop
sbb
sbb
push
sbb
inc
jo
jns
test
orb
out
xor
cmp
push
movsb
aas
popa
inc
sub
jno
sbb
adc
cmp
adc
gs
inc
insl
scas
lcall
or
xchg
push
jle
add
mov
adc
fprem1
pop
mov
je
arpl
push
or
je
mov
pop
test
jmp
adcl
int
cltd
lcall
gs
jae
and
pushl
mov
mov
mov
rcrb
lods
jo
or
push
xor
push
loop
pop
mov
xor
dec
stos
je
test
shrb
xchg
fldt
fistl
inc
int
adc
jno
mov
stos
jnp
mov
push
pushf
sti
cwtl
push
jmp
movsl
nop
inc
xor
lea
loope
clc
and
inc
xchg
rcll
int3
xchg
jmp
sub
not
ltr
aad
jb
dec
jmp
pop
fcoms
ud2
and
or
and
adc
testb
lcall
stos
jae
xchg
lgs
xor
sub
imul
inc
sub
xor
xchg
jbe
jecxz
adc
in
xlat
push
pop
arpl
aam
pop
and
fstps
pop
pop
push
mov
jns
mov
xchg
mov
clc
fs
jl
leave
cmp
loope
pop
mov
lods
leave
sub
jp
fnstenv
mov
addr16
push
insl
ficompl
cmp
pop
sub
out
push
test
inc
inc
xor
jp
repnz
jae
insb
hlt
sahf
sub
jae
pop
pop
lcall
dec
xor
faddl
andb
fldenv
and
xchg
xchg
jl
mov
in
inc
ret
mov
jg
arpl
jmp
or
std
ret
lea
mov
xchg
push
imul
and
idivb
xchg
jg
cmp
and
outsb
scas
sub
and
aaa
aas
test
jns
loope
pop
aaa
cmc
xor
xor
aas
xorb
mov
int
rcll
pushf
sbb
lds
mov
cmp
fstl
sbb
xor
sbb
bound
mov
or
andl
lahf
js
pop
data16
mov
repz
loope
movsb
cmpsb
sub
sub
lock
pusha
pop
sbb
loopne
adc
dec
mov
xchg
jns
push
lahf
sub
das
ds
fs
push
cld
or
mov
push
iret
jp
pop
cmp
cli
pop
je
dec
cli
sbb
and
jecxz
mov
andb
xchg
rcrb
ret
or
push
sbb
jne
sub
fistpl
adc
orb
jmp
fdivl
popf
pop
jbe
cwtl
out
sub
mov
stc
jb
xchg
xor
xchg
ds
mov
jae
movsl
sub
test
repnz
jp
cmpsb
rcrl
ficoml
sub
mov
pushf
inc
inc
xor
mov
in
xor
sahf
mov
xchg
push
push
sbb
cld
ror
lahf
mov
jg
pop
jecxz
cld
shll
sub
adc
jl
addr16
shll
jno
pusha
les
lea
dec
aaa
fs
inc
mov
hlt
cmc
cli
in
lahf
mov
les
movsl
cmp
ja
sub
repnz
xchg
in
jge
sub
dec
fsub
sbbb
push
lret
inc
loopne
fistps
xor
adc
outsb
ds
sub
sbb
sti
insb
js
shrl
divl
push
push
push
mov
stc
and
push
xchg
adc
fnstcw
test
sahf
shll
cmp
dec
adc
insb
mov
push
inc
aaa
ds
xchg
xchg
in
inc
and
xor
imul
xorb
daa
bound
sti
adc
shrb
aaa
mov
loopne
mov
pop
fdivl
inc
shl
fidivrs
xor
jle
adc
add
ja
xor
lcall
inc
int
xchg
jns
and
test
add
pop
ret
cmp
lahf
arpl
jle
inc
out
jbe
insl
add
les
xlat
aas
loopne
ds
lret
test
andb
cmp
aad
cmp
adcl
iret
xchg
mov
mov
add
std
fucom
cli
mov
dec
ljmp
sub
mov
pop
test
lods
rorl
sub
cmp
xchg
repz
jb
mov
and
fdivr
xorl
mov
mov
sub
mov
or
cli
pop
inc
xchg
sub
or
pop
add
rorl
repz
lret
ffreep
inc
lcall
aam
loop
dec
inc
sahf
enter
sub
inc
lea
mov
hlt
mov
fisttps
mov
imul
adcl
mov
mov
jmp
pop
and
push
ret
mov
pop
mov
inc
or
add
in
mov
adc
ds
mov
repnz
lcall
push
mov
dec
cmpsl
stos
pusha
cmc
pop
inc
data16
inc
mov
fs
popa
test
adc
aam
xor
add
mov
mov
out
fwait
fs
mov
jp
mov
inc
ja
andb
int
lds
shl
pop
xchg
sub
adc
roll
xor
pop
test
enter
and
notb
add
ja
sub
adc
jmp
repnz
lds
ret
or
leave
sub
int3
push
pop
cmp
mov
cwtl
ret
into
imul
xor
sub
jge
mov
dec
push
dec
repz
cmp
mov
and
cmp
pushf
inc
sub
aad
leave
lock
fwait
xchg
sub
inc
inc
adc
pushf
add
adc
aas
mov
pop
adc
fisttpl
push
orb
add
pop
out
cmp
mov
push
jb
je
add
jns
adc
iret
ss
roll
test
push
call
int3
dec
dec
cmp
lods
test
xchg
and
mov
in
inc
add
mov
fwait
mov
xor
lea
ja
popa
cmp
ds
popf
jb
fsub
rorl
pop
gs
call
inc
xchg
shrb
xchg
add
cltd
jnp
lock
int
adc
xchg
rcrb
jnp
push
std
cmp
pop
fdiv
popa
pop
adc
add
adc
imul
repnz
xlat
cmp
dec
aad
or
pop
repnz
outsl
mov
lods
leave
movsl
cmpsb
sbb
fs
std
iret
or
pop
rcrb
outsb
push
dec
xor
addr16
pop
mov
sub
cmpb
or
mov
mov
xor
in
stc
inc
or
cmp
push
jl
std
adc
adc
popf
inc
xchg
je
aam
stc
dec
cltd
pop
sbb
aad
nop
hlt
mov
out
push
pop
mov
push
je
pop
cmp
cmpsb
dec
adc
sub
mov
push
outsl
sarb
mov
ret
push
and
xor
repz
out
xor
push
in
dec
mov
ret
cmpb
mov
inc
clc
mov
hlt
jno
pop
lahf
leave
loope
mov
add
cmp
adcb
lret
sarb
cmc
and
and
dec
js
add
jge
popf
jbe
fucomip
iret
adc
std
enter
dec
lahf
stos
push
or
inc
ds
mov
mov
xor
pusha
pop
lahf
jp
notl
fistpll
mov
push
pop
mov
imul
add
outsl
test
sbb
ja
bound
mov
test
sub
inc
sub
adc
mov
mov
jne
fisubs
cmp
jg
jne
js
lcall
mull
pop
push
fwait
insl
in
insl
dec
out
jns
ret
call
test
mov
or
cmp
jbe
lods
scas
or
jbe
xchg
jae
mov
mov
out
lds
scas
aam
add
mov
daa
xchg
in
fnstsw
ret
aam
fdivrl
sub
add
cmp
mov
mov
pusha
test
shlb
fidivl
and
sub
cwtl
icebp
pop
clc
mov
add
fmull
roll
pop
ret
std
mov
lock
cli
lods
xorl
sbb
xor
add
push
mov
insl
or
xlat
loopne
incb
pop
adc
xchg
push
loop
mov
icebp
imul
in
dec
leave
xor
sti
push
dec
dec
jp
inc
sti
shlb
or
xchg
cmc
int
cmp
mov
mov
add
xchg
ret
xor
es
or
pop
and
adc
xchg
sub
ret
rcrl
add
int3
pop
gs
imul
sub
out
les
scas
pop
push
dec
stc
mov
dec
sub
ret
aaa
sub
orb
mov
outsl
sbb
subl
pop
and
add
inc
dec
mov
mov
in
js
bound
fwait
push
scas
push
push
lcall
insl
xchg
in
xchg
int
xchg
inc
inc
shl
push
cmp
in
add
fildl
mov
sbb
loopne
cmp
pop
ficompl
cltd
dec
mov
jnp
adc
test
and
mov
push
imul
mov
add
and
je
daa
pop
test
popa
sub
popa
test
jmp
jbe
lock
mov
jnp
xchg
ljmp
or
movsb
les
clc
mov
xchg
sbb
popa
js
stc
add
lcall
cmp
mov
ja
jne
push
pop
inc
insl
inc
cmp
shlb
mov
dec
sbb
ss
rol
shlb
cld
push
jae
nop
bts
cmp
inc
cmpsb
sarb
scas
leave
push
pop
bound
rclb
pop
repz
imul
movsb
push
sbb
cwtl
aaa
push
pop
cmpsl
sub
jecxz
dec
sub
adc
add
imul
fs
hlt
mov
test
add
pop
ss
dec
push
sarl
imul
jns
jno
clc
sbb
mov
pmaxub
push
cld
xchg
addl
loope
mov
mov
cmp
mov
inc
sub
mov
add
mov
out
dec
cmc
push
xchg
mov
clc
xor
inc
dec
pop
mov
mov
jns
or
xor
cltd
daa
movsb
data16
mov
rclb
loopne
stos
rclb
add
sbb
pop
adc
sbb
movsl
add
jp
dec
sbbb
rcl
std
rcrl
in
mov
stos
cmp
arpl
in
mov
jg
sbb
mov
push
or
sbb
add
add
xchg
lcall
leave
repnz
scas
insb
push
jle
aaa
test
cmp
arpl
rolb
jns
and
xchg
push
lret
cmpsb
add
cmpsb
cmp
push
jge
mov
das
jmp
addr16
cmp
dec
lock
push
dec
adc
out
jge
mov
and
xor
pop
sbb
adc
dec
movsb
xorl
mov
push
sbbb
add
das
xchg
leave
sub
mov
icebp
mov
mov
clc
xchg
repnz
cmpsl
fcmovbe
lahf
ja
pop
add
add
inc
push
lcall
add
xchg
outsb
shr
xchg
stos
xlat
xor
sarb
aas
sub
or
scas
sbb
ss
cmp
pop
xchg
leave
ret
lods
xor
push
in
mov
push
xorb
pop
rcrb
jg
aam
gs
arpl
cs
xchg
pop
inc
test
inc
sti
sbbl
xchg
mov
fisubl
popa
mov
add
push
mov
mov
subb
test
lods
xchg
daa
fcmovne
inc
jns
add
aam
push
insl
out
imul
sahf
xchg
sub
fidivrs
xor
frstor
push
cmp
inc
cmp
mov
jno
das
push
cmc
pop
pop
popf
mov
jmp
cmp
sbb
out
mov
dec
add
fwait
push
adc
adc
sub
nop
jne
cmpsl
dec
fisttpll
hlt
lahf
sbb
inc
adc
aaa
jns
push
push
adc
lock
in
push
loope
and
jb
xor
mov
inc
inc
inc
xor
mov
ss
mov
aaa
mov
in
inc
loop
push
je
add
sub
data16
lock
ljmp
mov
mov
aad
xlat
mov
xor
pusha
rclb
movsb
jns
shrl
ss
dec
outsl
adc
mov
rcrb
and
call
fidivrl
icebp
shlb
stos
in
jnp
mov
cltd
lahf
inc
ret
icebp
shr
push
mov
add
sub
sahf
push
out
stos
cs
cli
and
mov
or
xchg
cmp
fdivl
lret
movsl
sub
mov
push
xor
pop
ret
es
sbb
cli
leave
call
and
pop
xor
std
faddl
xchg
lcall
aad
cli
dec
add
scas
push
xchg
je
dec
pop
dec
jge
in
rcr
inc
ljmp
mov
cmc
xor
or
imul
or
dec
xchg
jp
sub
cmp
add
test
jbe
mov
xor
js
call
cwtl
inc
add
dec
stos
xchg
flds
add
ret
enter
aad
addr16
aad
mov
mov
test
push
and
xor
pop
pop
cmp
pop
roll
inc
jb
mov
jno
mov
jbe
leave
lcall
inc
out
cmpsb
call
fildl
shl
mov
in
int3
call
jbe
inc
loop
xchg
mov
pop
adc
xor
and
fbld
and
dec
vunpcklps
gs
sub
adc
sbbl
ret
lret
adcl
jp
ss
fdivl
pop
or
mov
sbb
daa
push
out
cmc
outsb
adc
fcomp
jae
movsl
dec
xchg
xchg
loopne
insl
pop
add
loop
push
mov
jo
out
jp
icebp
js
iret
repz
cmp
jle
inc
pop
inc
std
add
lahf
mov
cmp
jns
aaa
cmpb
sbb
sbb
fs
dec
mov
or
xor
push
int
flds
shll
push
test
adc
popf
out
mov
mov
inc
cmpsb
inc
inc
ficoms
mov
loope
or
aaa
mov
nop
loopne
cmp
lea
aad
push
cmc
pusha
add
push
fidivl
or
pop
pushf
and
push
outsl
sub
pop
dec
jl
aad
aas
jbe
mov
mov
and
loopne
lods
cmpsl
scas
inc
mov
push
ss
mov
jge
adc
in
xchg
sub
fwait
stos
lock
loope
fnstsw
cmp
push
aas
test
outsl
jbe
mov
mov
mov
push
decb
shl
iret
xchg
loop
lods
cmp
popa
in
ss
push
ret
dec
pop
test
sbb
loopne
ds
cmp
sbb
xor
movsl
add
push
shll
fnstsw
mov
jbe
and
add
fsubs
addr16
cmp
pop
jp
ret
test
sarb
ja
xchg
push
out
jge
and
sbb
and
push
in
adc
jno
subb
jl
das
scas
and
dec
rcrb
pop
addr16
in
imul
aas
leave
jmp
jno
mov
imul
pop
cmp
aad
mov
fildll
mov
add
jo
mov
std
pushf
lret
mov
rcll
repnz
mov
inc
jb
inc
push
adc
jmp
loop
jno
jp
fisubl
or
push
push
push
das
jecxz
add
sub
xchg
sbb
inc
xor
rcrb
mov
sbb
testl
xchg
xchg
xor
cmp
ds
out
cmpsb
sti
ljmp
pop
add
push
movsb
cmp
jecxz
mov
hlt
pop
into
je
sub
adc
jnp
sub
mov
adc
mov
inc
stc
test
inc
in
movb
mov
push
adc
fsubrl
ds
or
test
sbbl
xchg
fsts
iret
sbb
xchg
jno
push
mov
arpl
cltd
or
mov
pop
rorl
mov
or
xchg
jl
sahf
icebp
jne
xchg
sub
inc
insl
adc
lds
and
jl
mov
xchg
cmp
std
jb
xor
xchg
mov
adcl
inc
xchg
dec
sub
pop
sub
movsl
dec
fsubrs
call
fnstenv
pop
cwtl
in
loop
jnp
xlat
push
shrb
sarl
or
dec
das
sub
mov
mov
jne
jbe
xor
add
mov
inc
mov
mov
mov
iret
sub
push
sbb
mov
popf
cltd
lret
in
xor
insl
and
jo
sub
and
jno
mov
xchg
dec
es
cwtl
imul
push
mov
pop
cmpsb
stc
adc
jg
push
push
and
mov
out
popa
cmc
pop
enter
and
jno
pusha
roll
cmpsb
push
mov
xor
or
test
je
popa
rcrl
xchg
divl
add
stc
daa
jmp
sarl
inc
cmp
add
dec
mov
xlat
fildl
fimull
jnp
mov
and
leave
mov
shlb
lds
adc
lcall
mov
test
dec
and
pop
inc
push
mov
test
jmp
pop
add
push
stos
pop
add
and
je
push
out
and
iret
or
jae
sahf
fisubl
push
mov
stos
or
sarb
adc
scas
lods
inc
insb
lds
in
in
in
or
jae
fsubrs
xchg
push
xchg
sub
ret
and
sub
push
imul
push
cltd
aad
dec
pop
popa
jne
out
add
sahf
sbb
pop
sub
jge
into
insl
xor
cwtl
popf
pop
adc
dec
cmpb
adc
sahf
bound
movsb
and
mov
outsb
stos
xchg
jbe
je
sbb
xor
sbb
js
adc
sti
sbb
xchg
mov
or
pop
xchg
mov
jo
arpl
jp
mov
push
push
shll
dec
out
notb
mov
cmp
loop
stos
mov
movsl
lods
in
push
clc
push
fsub
loopne
and
in
ljmp
add
hlt
gs
fwait
inc
and
popa
lea
test
hlt
jp
inc
sarb
int
mov
push
arpl
stc
psubusb
in
dec
lods
data16
jno
clc
push
inc
out
frstor
fs
adc
jo,pt
mov
pop
mov
xor
popf
and
movl
inc
dec
mov
mov
xchg
nop
sahf
inc
cli
sbb
rcll
jp
inc
enter
les
aaa
cs
js
scas
fadds
fs
icebp
je
andb
in
jne
int3
in
pop
add
negl
ds
stos
into
inc
icebp
loope
push
das
mov
and
mov
add
bound
jne
in
and
cmpsl
cmp
mov
pop
shlb
or
cmp
icebp
mov
mov
push
int3
fimuls
lds
pushf
insb
sbb
pusha
mov
frstor
sub
lret
mov
arpl
outsl
sub
stc
mov
add
out
fsubl
or
push
inc
test
xorl
and
scas
add
mov
mov
loop
dec
xchg
clc
stc
mov
arpl
mov
adc
imul
insl
jnp
imul
mov
int3
sub
dec
rclb
push
dec
or
dec
outsb
loop
push
jnp
std
or
lea
adc
das
les
cmp
mov
movsl
dec
cmp
pop
dec
sti
mov
sub
xchg
test
out
jmp
and
jle
cli
ljmp
jg
ret
fstps
mov
and
sbb
fnstsw
sub
xchg
cltd
dec
and
aaa
pop
push
test
or
pop
add
and
push
out
jmp
sbb
mov
loop
xchg
pop
ja
jb
push
les
sahf
cltd
push
push
out
popa
ds
pop
xor
in
mov
cmp
mov
sbbb
es
or
xor
sahf
stos
fsubrl
repz
clc
shrb
mov
sbbl
xor
ss
mov
jle
mov
sub
mov
xor
add
inc
jecxz
mov
loope
push
aas
inc
mov
adc
fwait
or
jmp
data16
or
cmp
sti
sbb
mov
cwtl
cmp
mov
loopne
push
sti
ljmp
xchg
cmp
push
lcall
adc
dec
cwtl
jnp
and
cmp
and
fisttpl
push
rcl
je
mov
push
and
and
mov
or
sub
ficoml
sarb
cwtl
ret
stos
adc
sbb
inc
popf
inc
sahf
pop
jge
out
lcall
test
fildl
imulb
jno
test
data16
mov
sub
sarl
aas
mov
xor
inc
sbb
imul
mov
sbb
pop
cmpsl
outsl
sbb
push
cld
insl
sbb
and
or
inc
and
enter
jae
cmp
cs
repz
xchg
cwtl
outsl
iret
mov
cmc
mov
mov
daa
adc
mov
mov
push
ret
dec
cwtl
insl
sbb
mov
push
bound
jno
sbb
mov
cmp
sub
lds
hlt
and
test
xchg
sbb
sarb
jns
cmp
dec
stos
sbb
xchg
pop
push
pop
inc
cmc
dec
jle
adc
out
bound
test
sbb
xchg
mov
or
and
imul
xchg
cmp
gs
cwtl
cmpsl
mov
mov
repnz
ret
push
lods
insb
pop
xor
cwtl
test
pop
int
sbb
inc
test
ds
push
xlat
nop
mov
stos
in
cmp
xchg
xchg
mov
mov
lea
fcoml
and
inc
or
loop
or
cli
addr16
or
and
ljmp
sub
cs
repnz
dec
bound
test
xchg
fiaddl
inc
mov
jp
cmp
jnp,pn
vpsubw
add
lcall
roll
mov
inc
mov
stc
fnsave
shrl
mov
jmp
add
call
mov
dec
inc
cmp
rorb
lds
lods
sbb
add
xor
mov
xchg
mov
jecxz
jecxz
sti
stos
iret
add
lret
xor
xlat
popf
inc
mov
xor
shrb
jae
and
inc
add
js
loop
push
pop
pop
ds
pause
sbb
mov
jge
out
leave
cli
mov
stc
lret
icebp
pushf
je
out
js
insb
fnstenv
lea
mov
add
inc
stos
cmp
notl
xor
add
dec
adc
shll
sbb
scas
cmp
div
repz
fbstp
les
mov
testl
xchg
int3
mov
jo
mov
loope
add
mov
cmp
stos
mov
insb
scas
add
js
insb
inc
cmp
sarb
jb
jno
fwait
inc
bound
or
mov
jbe
fwait
mov
xchg
sub
pop
outsb
dec
int3
dec
jne
inc
std
lock
arpl
cli
push
dec
mov
call
sti
xchg
lods
repnz
push
data16
std
jp
and
dec
sub
es
hlt
shl
ret
repz
in
loopne
adc
test
and
xor
call
dec
scas
movsl
bound
add
cwtl
dec
and
outsb
cmp
insb
divl
add
adc
adc
push
lods
jno
hlt
mov
in
pushf
cmp
xor
adcb
addb
hlt
xchg
jno
sub
and
sub
out
xor
push
mov
imul
dec
or
out
push
jae
mov
in
js
adc
mov
dec
jg
xor
mov
outsl
cmp
cltd
pop
sub
cs
xor
mov
mov
xchg
add
out
jl
and
and
loop
in
cmp
jge
inc
mov
mov
and
ss
mov
sbb
mov
loop
inc
outsb
jne
jle
dec
es
into
call
adc
inc
pop
ss
inc
popa
fdivp
adc
cmp
add
insl
xchg
scas
imul
cld
iret
pushaw
movsb
por
ds
adc
jmp
stc
inc
clc
adc
mov
insb
pusha
add
xchg
mov
fistps
cmc
je
scas
xor
add
xlat
push
sub
out
in
xor
idivb
push
mov
lea
addr16
std
sbb
and
rclb
mov
testl
jae
mov
aad
lret
sbb
fmuls
test
fdivr
stc
sbb
icebp
jg
mov
push
aad
lret
les
mov
sub
int
mov
adc
lds
iret
pusha
push
pop
out
inc
mov
repnz
repz
pop
or
push
subl
push
adc
push
outsl
lea
jae
jo
mov
jg
cmp
xchg
push
stos
xchg
into
rorb
out
xorb
pop
mov
cmp
pop
push
lcall
inc
ljmp
jle
or
test
popf
nop
adc
stos
arpl
aaa
add
arpl
insl
enter
mov
xchg
sbb
pop
jmp
jge
out
in
cmp
push
push
out
add
and
jne
cli
jmp
iret
pusha
and
mov
cmp
push
ret
addr16
or
sbb
cmc
xchg
pop
outsl
popa
mov
dec
xor
or
adc
shl
sarl
or
sbb
fwait
jl
insl
push
mov
jno
inc
cmp
mov
mov
cli
clc
mov
adc
test
mov
dec
xchg
das
lahf
int
rcrl
push
mov
xor
push
hlt
xchg
push
adc
into
mov
xor
frstor
mov
pop
sub
cmpsb
std
push
jle
lcall
push
sti
sti
imul
pushf
push
imul
das
outsb
jg
xchg
outsl
add
decl
int
xor
dec
xor
call
bound
ret
push
dec
xchg
cmpsl
hlt
push
mov
ror
mov
add
dec
vmptrld
outsl
sub
shl
xchg
in
adc
cmc
jge
loopne
cwtl
in
mov
mov
cmpsl
add
jne
lret
stos
pop
lahf
inc
outsb
daa
mov
mov
movsl
push
sub
jle
xlat
mov
stc
mov
pop
inc
lret
mov
pop
mov
cmp
cs
icebp
out
cmp
scas
daa
repz
dec
mov
or
fimull
mov
cmp
stos
shll
fptan
inc
ficompl
cli
mov
mov
adc
inc
jle
and
mov
sbb
sarb
mov
cmpsb
movsl
mov
test
mov
fiadds
push
add
or
add
lock
cltd
popf
das
sub
add
shlb
js
outsl
xor
cmp
in
mov
add
lcall
mov
mov
push
addl
jb
repz
les
sbb
dec
push
jg
push
js
jle
daa
inc
outsb
xlat
leave
jecxz
xor
and
cmc
xchg
in
push
mov
int
mov
jge
int3
repz
dec
jp
mov
test
leave
pop
js
and
add
ucomiss
jne
nop
leave
call
icebp
xor
and
add
test
daa
xchg
leave
mov
add
push
test
lock
jbe
cmc
imul
hlt
jne
xor
cli
mov
sub
test
xchg
cmp
pop
mov
fnstcw
iret
jecxz
in
inc
int
inc
inc
outsb
mov
fstpt
inc
cltd
cmp
jb
jbe
xchg
xor
add
mov
lock
xchg
daa
jnp
push
xchg
adc
cmpsl
push
js
ljmp
jo
and
pop
jge
sub
add
sbb
psubsw
inc
lods
add
cli
les
stos
cmp
push
frstor
jge
mov
xor
pop
sub
add
std
stc
add
or
mov
sbb
call
cmp
jmp
lds
loop
cmpsb
ret
pop
xchg
js
out
nop
daa
mov
mov
stos
scas
es
inc
movsb
sbb
pop
lea
add
insb
cmp
pop
push
out
dec
xchg
pop
scas
icebp
insl
jo
adc
repz
xchg
adc
call
jns
shlb
mov
fcmovbe
xchg
mov
in
fwait
int
in
jp
shl
adc
mov
popa
xchg
incl
shrb
fwait
cltd
mov
adc
arpl
sub
jo
jnp
fstl
call
pop
or
mov
lea
insl
dec
lcall
inc
repz
mov
adc
jg
fnsave
pop
add
add
cmp
inc
fcoms
and
xor
xchg
xchg
imul
mov
jecxz
jno
sub
mov
and
push
ret
push
jge
xorb
pop
sbb
pop
sbb
adc
pop
std
es
sbb
xor
push
leave
and
pop
pop
push
hlt
pop
lods
cmpsb
fwait
add
add
nop
pop
cmpsl
sbb
aas
sub
adc
call
jno
arpl
push
sub
imul
xchg
mov
icebp
xchg
dec
cmpsb
sbb
pop
sbb
inc
ss
push
sbb
adc
jbe
mov
lret
mov
jp
lods
bound
adc
aad
sti
enter
or
mov
out
das
int
xor
dec
sub
dec
mov
add
in
lods
pop
or
pop
out
aad
outsb
ljmp
push
aas
cmp
jl
xchg
idivb
cltd
cmp
sub
std
dec
bound
jge
xor
popf
cmpsb
popf
jecxz
leave
xor
xchg
push
stos
addr16
lret
rolb
repz
adc
sarb
inc
push
imulb
test
in
xchg
pop
arpl
sub
aaa
fstpl
mov
imul
movsb
mov
inc
cld
mov
clc
sbb
in
adc
inc
loop
and
shl
dec
xor
push
lds
jl
xlat
sub
out
into
inc
loopne
cs
mov
mov
xor
pop
cmpl
sub
rolb
jo
push
fdivr
cmpsl
jle
inc
or
jnp
addr16
mov
mov
cltd
std
jg
dec
add
insb
outsl
pop
or
mov
cmpb
imul
test
stos
pop
mov
push
jo
aaa
std
xor
div
ja
int
notl
inc
aad
push
sub
in
stc
outsb
lods
pop
enter
push
sbb
jecxz
cmp
and
adc
dec
cmpsb
lret
ret
pusha
mul
mov
ss
push
pusha
inc
lret
mov
cmp
inc
mov
int3
repnz
int3
std
repz
push
push
mov
test
dec
mov
adc
rol
and
adc
add
push
icebp
push
mov
mov
cmpsl
stos
mov
outsl
pop
push
add
test
dec
add
lret
scas
inc
mov
jnp
or
cmp
pop
push
loopne
loop
pop
sbb
popa
or
loope
jns
adc
ljmp
outsb
int
test
fdivr
imul
daa
in
inc
mov
into
fcoms
sub
inc
in
and
es
ljmp
cmpsb
mov
iret
les
in
sub
adc
fidivrs
mov
and
add
dec
ret
or
out
sbb
push
subl
subb
imul
inc
lret
jecxz
mov
dec
sub
inc
pop
mov
mov
mov
xchg
and
imul
mov
jg
mov
loopne
shll
pushf
jbe
jbe
jg
push
fisubs
das
fidivrs
inc
ja
add
mov
dec
mov
popa
jle
pop
lds
je
or
js
stos
les
cltd
sahf
in
xchg
adc
jo
add
mov
or
fisttpl
dec
mov
xor
or
ljmp
lods
jae
sti
push
stc
sub
adc
jno
sub
das
mov
hlt
mov
mov
out
frstor
repz
in
jp
lret
sbb
mov
outsl
mov
jnp
cltd
xor
and
push
frstor
fistpl
lcall
mov
ja
cmpb
outsb
jae
push
roll
in
jae
addr16
aaa
adc
inc
mov
dec
ret
pop
or
push
adc
aam
mov
mov
xor
dec
dec
pop
inc
hlt
mov
test
imul
sar
ret
int3
sbb
xor
std
pop
notl
dec
orb
add
or
leave
xor
out
mov
push
lods
sbb
push
or
cmp
sbb
pop
les
cmp
call
inc
add
jge
mov
stc
xchg
push
pop
jle
dec
scas
sti
cli
adc
add
push
xor
rcrb
sbb
and
frstor
lahf
lods
jbe
push
xchg
out
push
lods
iret
mov
outsb
mov
ljmp
test
lods
in
push
cmp
sti
movsb
xchg
pop
lods
dec
jmp
mov
xor
push
mov
cli
cmp
fcmovnbe
add
aad
adc
and
in
adc
in
cld
shlb
enter
test
inc
dec
push
push
cld
outsb
or
jl
xor
xchg
sub
xorl
adc
es
pop
dec
or
mov
adc
sbb
jmp
or
jge
je
jne
ficoms
test
testl
mov
xchg
mov
or
mov
mov
test
xor
stos
sub
ret
loopne
mov
fsubrs
xor
rcrl
mov
mov
cltd
not
orb
jle
xor
fiadds
xchg
sub
cmp
cmpsb
repz
vsubps
test
shl
shll
mov
cwtl
dec
pop
add
ftst
outsl
xchg
mov
pop
mov
jne
adc
jmp
mov
adc
jge
inc
jp
repnz
cli
xchg
insl
mov
push
pop
mov
dec
xchg
lcall
jae
inc
mov
jecxz
xor
sahf
push
xchg
jbe
dec
push
sbb
shrb
fidivs
jne
test
js
and
int3
mov
jbe
cmpb
sahf
fbld
ljmp
or
out
fsubrs
shr
std
ret
push
mov
sub
push
call
jl
cwtl
sub
stos
or
mov
imul
inc
sbb
pusha
adc
dec
mov
test
roll
dec
mov
pop
rclb
and
das
jge
adc
inc
xchg
int
push
dec
in
push
jne
imul
ret
add
adc
mov
push
stos
add
inc
pusha
repz
jno
push
inc
lea
or
enter
xchg
cmpsl
or
int
hlt
cli
std
jae
addr16
add
lds
pop
mov
xchg
adc
sub
int
xlat
jae
sti
stos
in
push
aaa
sbb
out
loopne
popa
sub
cmc
lock
daa
jecxz
pop
cmp
mov
popa
stos
jmp
jp
pop
in
xor
sbb
sbb
aaa
add
movsb
lock
and
xor
cwtl
mov
xchg
inc
dec
mov
clc
mov
inc
imul
ret
jecxz
dec
jno
push
in
out
jae
sahf
scas
mov
adc
jmp
push
cs
sub
sbb
push
push
xor
ljmp
cmp
testb
cmpsl
in
dec
adc
int3
mov
add
jl
test
stos
mov
jbe
add
sbb
inc
out
pop
popa
sub
bound
lock
and
inc
mov
and
subb
push
loopne
and
pop
in
clc
and
inc
aad
or
pop
mov
outsl
fnstsw
aam
in
xor
adc
out
mov
enter
scas
fiaddl
mov
jmp
stc
int3
xchg
sbb
mov
out
dec
shlb
ja
jge
inc
cwtl
ficoms
pop
jns
faddl
mov
mov
add
or
mov
add
xor
insl
xor
fadd
out
nop
fcomps
popf
incl
in
ficompl
into
push
add
shrb
mov
jb
and
rol
jb
subl
lret
add
xchg
stos
pushf
jle
push
aad
sub
test
call
aas
dec
rclb
push
lahf
iret
imul
ret
test
dec
pop
rol
dec
cmp
lds
jns
in
loope
jnp
mov
cmp
sub
mov
and
ret
lret
mov
push
dec
sbbb
jo
inc
adc
fwait
icebp
sbb
shr
xchg
jp
outsb
out
repnz
cwtl
xchg
and
shlb
mov
es
pop
jge
inc
mov
jno
lock
call
pop
sbb
pop
xor
jns
ljmp
pop
dec
xor
cmp
xlat
hlt
fsubrl
mov
and
rcll
inc
dec
jb
pop
movsb
lret
jno
cmp
cmp
imul
mov
outsl
ja
xor
daa
ja
and
jg
outsl
mov
lea
push
pop
mov
xchg
mov
scas
pop
add
stos
mov
push
and
mov
out
in
pop
mov
cmc
and
fadd
xchg
lcall
dec
ret
sbb
outsb
out
jmp
pop
icebp
mov
dec
cs
or
mov
test
jnp
imul
and
jmp
xlat
jae
pop
sub
leave
or
cmp
pop
int3
cli
out
jb
movb
stos
in
adc
lods
push
inc
jb
mov
jns
jg
lcall
clc
movsl
aam
hlt
sti
sahf
dec
mov
fsub
imul
push
push
cwtl
xchg
push
sub
inc
es
or
sub
cmp
inc
push
push
sub
push
hlt
es
inc
mov
mov
iret
and
cmpsl
mov
stos
or
or
in
or
arpl
inc
stos
popa
cmp
add
lahf
xlat
shl
xchg
loop
and
sub
push
cmp
xor
pop
xor
mov
lcall
fs
fwait
mov
iret
andl
jl
pop
int
cmp
arpl
add
xor
or
fmuls
and
lods
mov
jne
mov
xchg
aam
test
jge
sbb
aad
nop
outsb
cmp
mov
repz
mov
xchg
xor
in
adc
jecxz
movsb
jno
xchg
inc
xchg
cmp
sarb
mov
xor
add
xchg
mov
jo
aad
inc
mov
push
mov
aaa
in
dec
push
push
fsubl
dec
sahf
fwait
sahf
inc
fiaddl
loope
mov
adc
dec
add
out
xor
shll
cmp
cmpsb
jecxz
jno
insl
ret
and
mov
repnz
fprem1
jmp
or
fcomps
ror
es
xor
pop
lret
ljmp
imul
lea
pop
dec
pop
mov
xchg
daa
jge
inc
push
and
pop
xchg
gs
add
js
mov
iret
jbe
repz
stos
ret
jp
pushf
test
cmp
fisttpll
pop
movsl
ljmp
roll
adc
clc
arpl
jecxz
into
push
shr
dec
gs
push
loopne
out
push
inc
cmp
in
push
sahf
sahf
ss
addl
sbb
fmul
and
sbb
sub
push
mov
lock
int3
sbb
les
dec
xor
lods
jb
jp
imul
add
lods
push
lcall
or
xchg
push
mov
shlb
aas
sub
dec
xor
arpl
adc
or
mov
ja
xor
mov
cli
push
into
mov
xchg
shrl
hlt
push
ljmp
pop
adc
cwtl
testb
pushf
push
or
pop
jle
inc
and
sub
cmp
jmp
pop
adc
rorb
aaa
aad
iret
loopne
pop
fidivrl
dec
and
or
rcll
insb
or
lods
mov
push
movb
or
jge
fmul
dec
fwait
or
add
jg
cmp
bound
ss
pop
and
test
inc
or
fwait
dec
mov
popa
gs
enter
or
ret
or
cmpb
or
leave
cltd
test
les
rcr
or
and
ja
int
push
mov
pop
clc
dec
jge
cltd
push
ret
icebp
mov
xor
adc
jmp
cmpsl
cmp
aam
mov
push
push
and
loop
mov
sub
jno
mov
mov
mov
xor
icebp
cmp
rcrl
ficompl
xchg
pop
xchg
push
aaa
mov
or
push
add
bound
cmp
mov
pop
repnz
push
pop
pop
aaa
in
xchg
xchg
scas
jmp
sub
movsb
mov
mov
test
out
iret
lds
jge
cmp
scas
movsb
cmc
add
movsl
add
enter
shlb
lods
fsubs
icebp
clc
push
inc
popa
add
or
mov
movsl
mov
mov
out
das
xchg
pushf
insl
or
cld
test
sbb
loope
mov
cmp
out
mov
add
jmp
imul
xchg
add
js
sub
adc
lea
xchg
aas
dec
dec
outsb
push
add
ss
addr16
xlat
add
jmp
icebp
sbb
out
push
push
sahf
pop
mov
les
jae
push
xchg
mov
mov
push
sbb
and
cwtl
outsb
add
pop
mov
xchg
das
and
cmpsl
repz
fisubrl
rcrl
dec
mov
jp
dec
insb
sub
ds
lret
loop
dec
cmpsb
test
fistpl
scas
sarb
cvtps2pi
lret
stc
inc
mov
inc
pop
and
shll
add
mov
ljmp
dec
xchg
lods
out
adc
jge
sarl
dec
mov
cmp
cld
mov
push
adc
out
gs
inc
jo
ds
in
je
push
in
repnz
in
mov
lods
inc
es
jecxz
fs
ror
imul
sbb
inc
or
insb
add
ja
int3
popf
mov
lods
mov
cmp
lea
in
xchg
jae
inc
sub
sub
push
aas
insl
mov
pop
shrl
pop
rclb
push
pop
pop
xor
jg
jg
add
cld
ffreep
adc
and
pop
inc
add
jb
ret
fmuls
dec
pop
int3
sbb
int3
and
adc
into
ficoml
sarl
movsb
mov
outsl
pushf
inc
mov
inc
outsb
repz
gs
mov
pop
inc
add
sahf
fldcw
push
or
hlt
bnd
sub
or
sub
sub
les
mov
imul
arpl
xchg
repz
jb
cli
push
jmp
cli
out
xchg
in
cltd
jns
adc
test
and
jnp
push
mov
ret
jge
mov
or
hlt
jg
test
jno
pop
jno
imul
ds
loope
cmp
enter
cmp
out
outsl
sbb
mov
push
sbb
rcrb
fidivl
fmull
aaa
std
jg
or
scas
add
bsf
repz
fistps
fwait
movsb
xchg
icebp
js
xlat
sahf
lret
sti
pop
das
mov
daa
ds
add
xchg
push
mov
xor
out
rolb
mov
xchg
push
xchg
fidivrl
js
insl
je
pop
lods
fistps
or
inc
orb
inc
jl,pn
dec
fsubrl
test
cmp
es
std
pop
inc
rcr
gs
push
mov
cmp
jbe
out
push
mov
lret
push
jno
fs
push
jmp
jne
adc
mov
add
inc
clc
es
jno
xlat
sbb
sub
test
loop
std
arpl
sub
pop
inc
add
fistpll
mov
aam
mov
loop
das
sbbb
or
push
lcall
lret
ljmp
jmp
popf
enter
push
test
xor
push
test
jno
aaa
xchg
jmp
popa
stc
cmc
pop
jnp
and
mov
xchg
inc
xor
mov
sbb
pop
ja
iret
xchg
jp
out
sbb
and
call
cmpsl
pop
test
dec
or
lret
push
into
call
leave
orl
push
dec
cmpsb
mov
inc
sti
lret
sbb
cwtl
or
cmp
mov
loopne
mov
daa
jecxz
aad
and
and
adc
pop
out
sub
enter
xor
out
mov
in
fwait
dec
in
jmp
test
sahf
mov
push
cmp
std
int3
push
imull
push
push
mov
movsb
lock
mov
int3
daa
jns
gs
or
fisttps
roll
sbb
xchg
es
mov
adc
ds
dec
dec
sub
je
cmp
dec
pusha
dec
xlat
out
test
int
push
stos
or
jp
movsl
mov
inc
sub
outsl
sub
cmp
repz
sbb
inc
inc
cmp
mov
or
test
sub
xor
das
xchg
mov
push
lea
inc
lock
ss
push
dec
jo
je
mov
add
mov
rcll
dec
mov
shrl
clc
test
mov
mov
and
iret
arpl
and
and
in
inc
aam
pop
fmull
cld
insb
and
lcall
rcr
imul
push
inc
jns
jecxz
jge
pop
data16
mov
mov
inc
jb
sbbb
dec
call
cmp
and
daa
mov
and
mov
push
xchg
pop
or
sub
add
mov
pop
in
lcall
jmp
fs
cmc
jecxz
xchg
inc
test
loopne
mov
leave
xchg
mov
add
in
push
adc
pop
xchg
push
in
jg
pop
push
sar
adc
scas
dec
sub
mov
mov
lods
stc
jne
pushf
sarl
dec
or
ret
adc
xor
jg
sub
mov
add
lret
pushf
adc
jle
stc
jae
aaa
out
mov
push
and
fcomi
push
mov
std
push
jae
jmp
jbe
sub
dec
daa
mov
xchg
mov
into
inc
jb
cli
mov
sub
outsb
orl
int
push
imul
pop
cmp
test
inc
and
outsl
roll
pusha
xchg
fidivl
iret
jle
mov
lock
push
xchg
gs
outsl
xchg
inc
cwtl
mov
jae
icebp
ss
insb
cmpsl
mov
ljmp
das
int
into
rorl
loop
inc
jg
test
fcmovu
and
sbb
mov
or
insb
ret
or
xor
mov
icebp
lret
int3
pop
int
xlat
add
das
cmp
out
out
adc
aad
inc
dec
ja
daa
mov
jmp
in
test
inc
les
mull
out
ret
sbb
std
test
pop
jne
or
data16
mov
lahf
sbb
cmp
gs
mov
adc
xor
add
fldenv
andb
nop
shlb
or
mov
nop
dec
dec
xchg
lcall
inc
cmp
cmp
pop
adc
fisttpll
sub
sbb
mov
sub
dec
add
xchg
sub
xchg
or
fsubr
push
std
jge
out
sbb
xor
shlb
arpl
jo
inc
loopne
jne
mov
mov
test
mov
jne
or
dec
lret
subl
mov
out
mov
mov
pushf
mov
sub
pop
stc
addr16
in
jae
jecxz
jns
es
inc
rcl
lret
loope
jo
jmp
flds
dec
mov
xchg
inc
jbe
mov
pop
cmp
adc
mov
in
jp
adcb
sti
les
mov
fdivl
cs
xchg
mov
cmp
push
mov
mov
insl
call
mov
pop
fnstenv
les
mov
push
adc
ret
rcll
xor
test
stos
mov
in
push
mov
es
mov
mov
loope
mov
out
push
add
cmp
cld
xor
shrb
pop
scas
sti
push
incb
data16
mov
and
lods
adc
pop
and
xor
icebp
cmp
lds
test
mov
xor
pop
push
push
and
adc
hlt
mov
std
nop
and
sbbl
std
inc
jno
out
pop
clc
fisubl
jmp
dec
lahf
sub
aaa
jne
and
adc
ds
test
and
pop
cmp
and
cmp
aam
mov
add
insb
std
std
ja
adc
jg
cmp
ss
insb
xchg
loopne
gs
nop
mov
out
lret
roll
in
push
add
lea
pusha
sbb
jle
shlb
pop
dec
jmp
or
push
push
jae
scas
mov
mov
and
sar
sub
fnsave
sub
divl
add
push
xor
cmp
js
pushf
xchg
aas
push
es
cmpsb
xchg
stos
loope
mov
stos
fbstp
out
mov
lods
or
mov
or
mov
xchg
lret
pop
jns
cmp
cmp
xchg
jmp
or
inc
imul
jmp
mov
or
mov
pop
pop
mov
jg
mov
lcall
add
pop
popf
sub
scas
bound
imul
mov
cld
mov
fldenv
inc
cmpsb
or
xor
shl
jb
pop
aam
pop
and
push
loop
pop
pop
fldcw
adc
jmp
decl
adc
hlt
or
jns
and
push
pop
sbb
push
jl
jge
dec
sub
adc
ss
mov
inc
stc
jno
stos
push
lock
dec
ss
sub
adc
pusha
jmp
fcmovbe
repnz
xchg
rcrl
inc
rcr
and
out
adc
js
push
or
dec
lret
xchg
mov
cltd
add
mov
movsb
cs
sub
pop
pop
inc
fwait
lock
sub
and
xor
xchg
adc
inc
mov
cmpsl
hlt
dec
xchg
mov
arpl
push
mov
pop
jno
pop
lea
jecxz
sbbb
rorb
out
or
pop
cmp
fdivl
std
jo
mov
lds
add
jno
sbb
and
lea
shlb
mov
xor
mov
adc
sahf
cmp
test
inc
dec
sbb
xchg
and
mov
sub
adc
jmp
mov
sub
in
rol
sub
dec
idivl
mov
les
sahf
imul
daa
push
mov
sahf
xlat
or
cwtl
sbbb
scas
test
sub
adc
xchg
cli
xor
sub
jae
arpl
lcall
mov
stos
clc
les
pop
out
fcom
scas
filds
xchg
popf
into
loop
pop
test
aad
or
xchg
call
inc
mov
aam
scas
loope
push
xor
dec
cmc
fiaddl
push
scas
stos
jg
sub
sahf
jnp
ss
mov
or
add
stos
push
pop
sub
outsl
es
iret
mov
fwait
add
arpl
xchg
ror
lea
aam
jmp
test
push
mov
mov
bound
test
or
testb
mov
and
imul
sbb
jo,pn
lret
jge
inc
xchg
push
mov
int
push
mov
nop
adc
mov
xchg
orb
inc
scas
sahf
xor
inc
add
push
aam
add
add
test
shlb
insl
data16
rcl
jl
aam
jne
rcr
bound
jnp
adc
pop
mov
pushf
les
add
loop
push
sbb
daa
and
fiaddl
int3
ret
and
ds
cmp
push
outsb
mov
xchg
outsb
outsl
xor
rcrl
inc
inc
jns
mov
mov
push
mov
imul
sub
insb
out
dec
jno
arpl
pop
push
cmpb
mov
cli
sbb
lods
pop
and
rcrb
sub
pop
bound
js
sbb
mov
lea
mov
xchg
push
cwtl
xchg
fdivs
inc
jmp
jle
inc
adc
sbb
lock
lds
inc
out
clc
in
enter
xlat
mov
mov
pop
push
pop
insb
pop
loope
imul
aad
mov
dec
aas
mov
repz
pop
sbb
sahf
push
mov
nop
push
inc
lods
jmp
fwait
adcb
jmp
sbb
cmp
inc
dec
push
mov
mov
sti
xor
mov
int3
mov
mov
jp
and
sbb
cmp
sub
push
out
jno
sbb
jns
cmp
sub
mov
cmp
movsl
add
mov
cwtl
inc
adc
push
bound
pusha
push
ss
in
xlat
mov
je
negb
push
addb
xchg
pop
call
jno
pop
stc
out
shr
jno
mov
mov
dec
iret
or
repnz
out
icebp
mov
in
leave
test
cmp
call
cmp
add
leave
jecxz
test
in
fimuls
xor
movsb
cs
mov
mov
pusha
jp
dec
mov
shlb
xor
iret
jns
pop
dec
inc
mov
push
mov
push
xor
inc
in
cmpsb
mov
mov
mov
adc
add
push
sbb
xor
mov
sub
out
xchg
leave
mov
add
movl
push
fildl
and
pop
stos
sbb
loope
int3
dec
pop
and
repz
mov
inc
inc
cli
ljmp
sub
mov
xorl
xchg
or
icebp
xchg
pop
sbb
and
jns
loope
lock
and
pusha
scas
xor
add
cwtl
and
dec
sarb
or
popa
imul
sbb
sub
mov
fldl2t
ljmp
or
jno
dec
ljmp
lret
xchg
popf
scas
call
mov
jo
sub
sbb
mov
and
clc
sti
rcr
xorl
add
decl
add
lahf
ljmp
in
ja
aaa
push
cld
loope
roll
ret
stos
enter
sbb
aam
lods
ds
call
xorl
std
loop
inc
pop
push
xor
inc
nop
fdivrl
loop
pop
sub
adc
pop
ret
adc
mov
dec
inc
sub
add
xor
in
int
das
pop
insb
jbe
in
test
out
lods
sti
mov
loopne
clc
jecxz
push
test
sub
and
pop
push
dec
cmc
or
push
mov
nop
xorb
insb
mov
mov
adc
xchg
sub
add
push
cmp
mov
xor
out
add
mov
dec
mov
mov
mov
mov
repz
adc
cmp
push
incb
push
jl
mov
jmp
cmp
jae
xchg
fimull
test
adc
jle
jne
bound
sti
mov
je
pop
leave
gs
push
jns
xor
add
mov
xchg
ljmp
mov
sub
ret
push
test
pop
mov
stc
popf
mov
mov
or
xchg
fadd
ss
cmpsb
imul
add
and
jle
mov
lahf
les
dec
mov
cli
fists
mov
inc
arpl
in
aad
inc
sub
gs
add
mov
icebp
popa
aam
cwtl
jle
jo
fs
xor
jne
sbb
in
pop
into
cmc
inc
xor
xor
inc
je
dec
push
xor
sub
push
add
mov
scas
dec
int3
rcll
sub
cld
mov
fisubrs
mov
push
cmp
or
or
sbb
scas
daa
mov
fildll
jns
add
hlt
mov
jmp
idivl
iret
xchg
push
inc
and
movsb
and
ljmp
das
adc
sahf
xor
out
add
and
or
mov
jmp
adc
mov
dec
dec
scas
add
xchg
add
inc
stc
sub
movsb
jb
fwait
or
sar
sbb
inc
xlat
and
std
mov
adc
bound
ljmp
push
xor
add
push
pushf
sahf
addb
mov
xor
add
pushl
fdivrs
sub
inc
mov
xchg
sub
pushf
cli
sbb
imul
not
popa
repz
fwait
xor
lahf
jae
mov
add
jnp
jo
mov
cltd
pop
add
mov
push
outsl
mov
push
adc
pop
out
jmp
insl
clc
jno
mov
lds
rcll
push
popf
jae
or
and
cmpsb
lods
and
jb
mov
xchg
out
lods
and
pop
icebp
and
jg
incl
push
hlt
xchg
jle
mov
fidivs
mov
cmp
adc
addl
mov
fcmovnbe
or
aam
mov
inc
popa
push
sbb
incb
lods
mov
xchg
and
jns
adc
test
pop
cld
sub
cs
loop
pop
add
mov
and
loopne
imul
inc
inc
sub
pop
add
ja
insb
shrl
out
pop
mov
mov
cmp
xor
adc
sub
and
xor
leave
or
insb
or
pop
cltd
fisubl
jmp
sub
rorl
mov
mov
enter
pop
mov
mov
insb
in
push
leave
mov
incb
and
mov
data16
or
fists
test
push
mov
cmc
dec
out
sbb
dec
shrb
stc
mov
scas
daa
pusha
jmp
scas
ja
repz
and
mov
fldcw
dec
sub
js
dec
mov
cmp
xor
inc
test
pop
and
xchg
mov
xchg
mov
lahf
lret
jno
jmp
ret
cmpsl
jmp
mov
bound
mov
movsl
sbb
xor
shrb
int3
popa
cmp
or
xor
dec
cli
daa
inc
inc
push
test
in
or
out
sub
rorl
push
shr
xchg
add
out
jno
mov
mov
lea
xchg
sub
les
jge
ret
adc
inc
xchg
push
imul
in
rorb
shl
xchg
jge,pt
pushf
add
ret
fwait
sub
xchg
push
sub
push
mov
xchg
jno
insl
push
pop
mov
inc
xchg
pop
movsb
cmpsl
negl
cmp
mov
sbb
sub
in
loop
jg
pop
inc
in
lret
push
mov
les
cmp
cmpsl
rcr
aas
insl
fbstp
xor
insl
cltd
cmp
mov
sbb
lea
pop
mov
adc
ljmp
shrl
loope
xchg
xchg
rclb
loope
mov
sub
js
loopne
push
xchg
dec
and
mov
push
or
shrb
jecxz
jmp
jnp
add
mov
js
outsl
jg
imul
or
push
or
mov
and
out
lahf
fwait
repz
adc
lcall
data16
pop
sbb
pop
cmp
mov
sub
xor
pop
sbb
mov
in
into
mov
mov
rcr
fstpl
lods
xor
out
cli
pop
xchg
pop
and
inc
pop
pop
xchg
pop
or
faddl
lret
cld
mov
enter
add
cli
and
pop
fdivl
add
mov
das
push
sub
enter
jmp
pop
push
test
add
scas
jno
add
cmp
in
pop
pop
cmp
nop
pop
jbe
mov
popf
in
pop
or
ss
dec
dec
pop
mov
jnp
andl
jb
aam
sti
add
mov
clc
popa
xor
xchg
repz
adc
push
divb
cmp
shlb
out
xchg
dec
sub
decb
inc
roll
aam
add
in
pushf
call
nopl
stos
cmp
jnp
push
adc
ss
subl
push
fwait
daa
add
mov
push
out
jbe
adc
mov
xor
and
jg
pop
call
xchg
cmp
fbstp
fsubl
cs
daa
adc
push
xor
or
ret
bound
jge
ds
fst
xchg
bound
inc
mov
cmp
cmc
inc
add
das
cmpl
movsl
pop
dec
cmp
mov
rcrl
es
jns
mov
xor
rcll
sub
je
imul
insb
lcall
adc
sub
pop
rorb
das
cmp
push
adc
inc
enter
inc
lods
decl
orb
cltd
adc
dec
ljmp
sbb
sub
ja
and
adc
cmp
push
in
iret
jmp
mov
imul
andb
inc
enter
jecxz
das
cs
dec
fst
aad
addr16
sub
mov
scas
cwtl
xor
ljmp
daa
and
dec
stc
lock
ret
bsr
or
aam
daa
pushf
sub
insl
mov
aaa
fwait
xchg
ds
jbe
cmovnp
sub
dec
setnp
adc
clc
cwtl
pusha
jle
xchg
mov
lock
aad
outsl
in
shr
fmuls
cmp
mov
rcrl
dec
aam
gs
dec
shll
repz
push
stos
push
inc
add
xlat
and
stos
out
adc
push
mov
pop
sbb
mov
mov
in
xor
cmpl
fs
push
icebp
inc
and
jge
sub
cmp
jnp
hlt
outsb
or
mov
sub
pop
push
xor
lock
scas
test
and
shl
mov
adc
out
jne
add
ja
adc
mov
call
shl
arpl
xor
out
xchg
add
fnsave
add
jg
mov
fcmovnb
jae
arpl
pop
dec
mov
in
dec
jns
or
mov
test
jne
pop
jne
lret
ds
shl
adc
xchg
int3
test
sub
jno
sub
sbb
xor
arpl
into
bound
clc
or
mov
icebp
xchg
xchg
rcl
cmp
cli
movsl
mov
out
iret
divb
xchg
sbb
pop
test
arpl
aas
ret
inc
jae
dec
rcrb
mov
lods
mov
mov
lds
sub
icebp
repnz
sahf
sub
sub
add
shrl
mov
bound
lahf
imul
adc
icebp
movsl
xrelease
xchg
imul
popf
jno
arpl
aam
pop
les
or
cmp
fildl
mov
movsb
in
xlat
icebp
push
pop
mov
repnz
addb
scas
push
and
adc
insb
cmc
sbb
clc
dec
pushf
fcoml
jne
push
test
adc
sbb
jne
inc
mov
jne
push
sbb
mov
xchg
jecxz
scas
sbb
xorb
test
push
mov
mov
cltd
shl
xorl
inc
mov
stos
or
and
and
adc
add
sbb
icebp
inc
pushf
and
sbb
mov
dec
repnz
je
or
inc
push
sahf
in
sub
jae
shl
ljmp
jbe
and
pop
inc
jne
stos
push
aaa
push
mov
dec
lret
dec
addr16
insl
int
mov
cmp
fxch
and
dec
inc
jecxz
pop
popf
ret
enter
mov
dec
or
lds
les
out
mov
and
adc
dec
lahf
sti
xor
mov
loop
jp
outsb
pop
mov
fimuls
inc
dec
aaa
dec
iret
ret
mov
aam
stos
iret
xor
jmp
scas
add
jle
lahf
ret
popa
sub
cmp
cmpsb
out
cmc
inc
fisubs
mov
ja
jecxz
sbb
jecxz
fsubrl
negb
add
cltd
pusha
fcompl
jo
stos
xchg
stos
pushf
stos
mov
sbb
jmp
cmpsl
pop
dec
sub
mov
mov
cmp
cmc
add
lahf
mov
data16
or
cltd
sbb
ret
inc
in
xorb
push
sahf
adc
repnz
mov
xchg
sbb
mov
test
or
insl
lock
cmp
mov
shr
sbb
jb
push
ds
rolb
pop
sub
arpl
pop
ret
sarl
movntq
bound
jbe
gs
data16
sahf
xchg
jl
mov
shll
jo
dec
mov
and
mov
jl
out
xor
xchg
push
cli
out
mov
outsb
push
popl
pop
lds
adc
repz
xchg
push
cwtl
mov
shlb
cmp
cld
adc
roll
xlat
mov
call
add
or
fs
and
int
adc
dec
jle
dec
mov
shlb
mov
xchg
popa
pop
xor
fnsave
leave
rclb
or
inc
jg
pop
out
pop
and
jg
mov
mov
xchg
mov
mov
xchg
int
fmul
mov
or
test
stc
test
dec
or
xchg
cmp
imul
std
gs
push
and
pushf
cmp
aaa
cld
out
outsb
jle
or
xchg
cli
dec
pop
sbb
clc
test
stos
jns
fistpl
pushf
out
stos
ret
sti
mov
jns
dec
mov
add
inc
not
inc
mov
cmp
push
stos
in
sub
mov
cwtl
ja
lock
cmp
xchg
shr
jmp
ficoms
push
and
mov
sub
add
mov
sub
mov
sar
dec
mov
ljmp
jne
out
aas
lret
xchg
mov
sbb
add
push
insb
mov
iret
adc
loop
mov
adc
pushf
or
sbb
push
out
inc
outsb
fwait
cmpsb
pop
cmc
and
fnstcw
and
xor
xlat
sub
aad
xchg
add
lret
sub
jno
ja
mulw
dec
mov
cmpsb
sbb
push
dec
das
lahf
xchg
hlt
cld
inc
dec
int
push
inc
das
test
or
rcrb
aad
mov
test
insb
add
xlat
sub
clc
push
xor
ljmp
push
and
popf
fistl
or
jge
mov
insl
fcomi
jne
mov
test
pop
and
inc
imul
cmpsl
sahf
pop
and
jl
mov
fimull
mov
pop
aaa
out
test
hlt
pop
mov
daa
aad
adc
stos
scas
iret
lret
push
xor
xor
or
and
fld
enter
fsubs
sbb
inc
iret
mov
sub
mov
stc
sbbl
cmp
pop
mov
pushf
pop
pop
lea
or
out
inc
or
lock
mov
or
dec
and
daa
mov
inc
mov
push
xchg
test
xchg
and
cmpsl
test
subb
imul
xor
cltd
test
loop
cs
out
dec
outsl
mov
je
sbb
pusha
push
xchg
jle
push
mov
outsb
ffree
xchg
inc
in
push
mov
cmpl
cmp
dec
jbe
mov
cmp
pop
mov
cmpsb
pop
std
adc
popf
jp
daa
jno
test
shll
and
jmp
pop
sbb
jge
mov
add
js
cwtl
mov
imul
roll
ja
cwtl
xchg
pop
shrl
dec
fisubrl
xchg
inc
push
mov
shrl
pushf
mov
movsb
xchg
mov
jmp
scas
stos
shlb
mov
testl
ds
sub
fcmovu
movsb
leave
leave
xchg
scas
jl
test
fs
pop
xor
fnstenv
inc
mov
repz
jmp
xor
and
add
push
sbb
mov
movsb
ljmp
mov
iret
adc
pop
ds
andl
imul
out
xlat
lds
dec
adc
rolb
jl
inc
mov
jne
jecxz
and
std
pop
inc
enter
jle
dec
push
jno
lahf
and
or
orb
jbe
pop
pop
xor
cmpsb
adc
inc
inc
cltd
fwait
sbb
sbb
jecxz
sub
jl
jo
inc
jno
cmpsl
mov
filds
movsl
pop
pop
push
xor
mov
fldenv
popf
nop
jns
cmpb
jae
add
addr16
iret
jbe
lds
add
daa
push
or
or
jp
sub
insl
pop
mov
mov
jnp
jmp
int
xchg
test
pop
push
or
int3
push
jae
jb
ljmp
lock
nop
mov
or
inc
and
sarl
out
in
add
xchg
pop
or
dec
mov
jno
es
xor
es
mov
sbb
lahf
mov
xchg
shll
lret
lret
push
mov
cmp
fs
xchg
wrmsr
sbb
dec
mov
push
mov
push
mov
lahf
rolb
stos
mov
push
call
std
nop
add
ljmp
dec
stos
sti
lret
sub
lods
lahf
inc
incb
test
clc
loopew
aaa
scas
outsb
in
push
test
mov
mov
icebp
cmp
push
push
sbb
fmul
push
int3
xor
cmp
sahf
out
mov
push
scas
imul
shrb
xor
pusha
sbb
outsl
jno
stos
or
ljmp
xchg
push
push
scas
jp
pop
xor
into
into
pop
xchg
push
mov
push
cli
xor
and
mov
ljmp
mov
sbb
cmp
or
inc
imul
inc
subl
popa
mov
cmp
sbb
xchg
imul
sub
mov
push
fs
test
push
xchg
pusha
das
iret
aad
xor
jno
outsb
mov
icebp
rorl
dec
notb
mov
mov
xchg
or
dec
mov
dec
mov
or
mov
insl
or
push
mov
fwait
mov
mov
mov
mov
out
push
mov
cltd
lock
jno
mov
pop
scas
test
in
fiadds
dec
mov
and
repnz
dec
push
pusha
cld
orl
test
out
rcr
pop
and
test
push
pop
lret
cmpsb
xchg
test
int3
pop
stos
xchg
fadds
gs
pop
test
mov
stc
mov
jo
insl
test
subl
fnsave
add
rol
push
insl
std
pop
cltd
mov
test
movl
mov
jmp
xchg
int3
mov
addl
lds
das
sub
pop
mov
cmp
sub
jnp
jl
das
fstpl
pusha
xor
mov
fimuls
repz
je
mov
push
add
cmp
pusha
pop
popf
inc
daa
xor
les
push
gs
push
pusha
sub
enter
leave
pop
cli
gs
scas
xchg
fwait
adc
jle
xor
js
sahf
jl
stc
cmp
mov
inc
les
imul
push
scas
cmp
sub
and
jle
gs
sbb
mov
and
cmc
mov
lock
pop
iret
xorl
add
fwait
mull
shl
pop
jecxz
arpl
aam
cmpsl
cmp
push
clc
outsb
jecxz
rcrb
jno
mov
mov
cmp
aad
cmc
lods
mov
push
mov
ret
mov
mov
nop
xchg
shll
insl
lret
mull
adc
pop
aas
sarb
sbb
sub
lock
jmp
les
sbb
js
out
repz
xor
jecxz
add
xchg
jg
jle
adc
push
and
jns
sub
mov
and
mov
mov
fisubs
out
adc
xchg
jnp
ljmp
mov
repnz
xor
sub
cmc
sti
enter
cmp
add
or
aam
int3
push
icebp
pop
das
push
cwtl
mov
add
addr16
xor
imulb
lock
or
stos
mov
and
imul
gs
das
nop
movsb
aam
sub
jnp
aaa
test
pop
in
xchg
mulb
push
rcrl
push
stc
addr16
and
and
mov
mov
mov
or
stos
dec
cwtl
dec
xchg
fmull
lds
ret
dec
ret
push
addr16
pop
mov
push
push
xor
mov
mov
aad
out
cmpb
sbb
neg
adc
popf
xchg
push
shrb
jns
mov
pushf
mov
int3
lds
cli
add
xor
aam
mov
dec
mov
push
mov
sub
rcll
out
mov
adc
xchg
dec
js
fbstp
add
loope
adc
mov
stos
mov
div
loop
test
fcmovnb
add
stos
jbe
mov
mov
add
mov
xchg
add
mov
neg
and
nop
xchg
push
stos
nop
dec
out
mov
mov
mov
nop
jg
shlb
icebp
jecxz
push
or
shll
sub
cmc
inc
orb
or
out
adc
add
rorl
pusha
mov
cmpsb
mov
mov
clc
addl
out
mov
mov
or
int3
xchg
pop
aas
inc
adc
lcall
mov
int
cmp
sub
dec
or
cmp
push
ficompl
clc
adc
and
aad
repz
loop
aam
outsl
rorb
repnz
cmp
repz
int
xor
push
push
sbb
push
pop
hlt
mov
jno
stos
sarl
das
ds
mov
sbb
lahf
cwtl
inc
mov
test
xor
push
data16
shll
call
xor
aaa
nop
inc
mov
dec
insl
mov
pop
icebp
lcall
es
mov
push
push
xchg
andl
sbb
dec
inc
xchg
sub
dec
mov
cmpsb
adc
out
pop
push
sahf
pop
aas
imul
popa
ror
stos
jle
repz
mov
mov
mulb
mov
mov
call
les
int
stos
inc
xchg
mov
ja
jno
popf
dec
mov
or
arpl
mov
jg
add
dec
inc
and
or
lret
dec
mov
add
jo
leave
pop
inc
mov
aam
dec
xchg
hlt
std
push
mov
loop
mov
les
xchg
loop
mov
popa
inc
xor
add
push
das
jle
adc
xor
and
mov
xor
js
push
adc
cmp
mov
repz
scas
mov
mov
adc
idiv
daa
jl
dec
shrb
jle
jbe
pushf
out
mov
loopne
cmp
jno
mov
jl
xlat
xchg
aam
push
cwtl
adc
xor
jle
xchg
pop
adc
dec
mov
and
fidivrs
lret
jne
arpl
push
mov
test
popf
mov
xor
pop
fnstcw
pop
mov
mov
sahf
inc
test
xchg
and
fdiv
adc
outsl
cmp
mov
ss
call
cwtl
lcall
clc
out
sub
sti
add
int
loop
jp
movsl
subl
paddw
dec
xor
add
xorb
pushf
fdiv
push
fstpt
in
shrb
jg
xchg
in
push
adc
int
aad
sub
push
idivb
test
sub
push
jne
shrb
sbb
jb
pushf
cmc
sti
lahf
adcl
jb
inc
pushf
or
push
dec
call
ss
addr16
sahf
fdivrs
cvtpi2ps
jmp
and
mov
sub
sbbl
mov
lret
xor
mov
jmp
push
out
decb
out
xchg
es
jbe
mov
xchg
push
outsl
xchg
mov
dec
imul
inc
xchg
cld
mov
cmp
pop
xchg
sbb
sub
mov
push
xchg
mov
repnz
mov
mov
add
push
pop
aaa
jg
pop
push
jnp
es
mov
loope
pushf
scas
xchg
ja
mov
lods
rorb
mov
lea
in
loop
jne
xor
sti
xchg
inc
pop
or
adc
lds
icebp
sahf
xlat
loop
push
xor
lret
jnp
or
sub
sbb
sti
cmp
out
in
push
nop
pop
sarl
and
rcrb
fbstp
pop
xchg
out
mov
mov
xchg
negl
outsb
in
push
hlt
movsb
dec
lret
in
jbe
cltd
push
lret
jbe
stos
outsl
inc
pop
outsb
cs
add
push
mov
in
pop
bound
xor
push
insb
cld
sub
stos
adc
jae
sar
mov
push
scas
addb
or
and
push
test
jle
jp
sbb
out
aam
mov
in
xchg
hlt
sub
sbb
lock
pop
mov
lahf
cmpb
ljmp
add
push
sub
adcb
lcall
and
fcompl
xlat
shrl
cwtl
xor
push
sbb
adc
add
adc
ret
out
adc
adc
psrad
pusha
xchg
or
add
push
xchg
or
fstpl
xchg
and
aam
and
rcll
inc
out
mov
pushf
out
rcrl
pop
arpl
loopne
lods
test
ja
call
jl
out
cmp
rorb
into
push
pop
data16
or
and
sub
xlat
push
scas
rolb
fnstsw
mov
add
push
cmp
pop
xor
fnstsw
cmpl
xlat
notl
loop
xor
dec
ds
hlt
ja
xor
leave
jecxz
movsb
ret
sbb
xor
leave
stos
lds
lret
fwait
orl
cs
sbb
jmp
dec
lock
ret
out
repz
adc
movsb
movsl
fisubrl
mov
xchg
pop
out
repnz
cmp
ds
sub
sub
test
or
test
addr16
mov
push
adc
add
cmp
mov
in
sbb
cmpsb
mov
push
mov
insl
and
jp
mov
cmpsb
pop
loopne
xchg
adc
das
aam
sbbb
adc
pop
inc
push
test
mov
ja
mov
shld
cld
ficompl
leave
mov
sbb
hlt
ss
push
shlb
les
orl
mov
fnstcw
test
mov
rol
push
push
inc
fstps
lret
loopne
fadd
cli
js
and
movsb
jae
cwtl
dec
mov
pop
or
push
test
push
mov
fildl
mov
push
add
inc
dec
pop
pop
cmpsb
sbb
or
data16
nop
clc
xchg
js
mov
cwtl
inc
pop
adc
shr
cmp
pop
imul
scas
test
fisubrs
mov
das
pop
rcrb
jle
push
imul
jge
jge
jbe
sub
xchg
mov
mov
or
push
inc
aas
sbb
xor
daa
test
fsubs
sub
hlt
fcomps
popa
jns
xchg
sbb
mov
int3
flds
aaa
aas
add
out
sarb
lcall
mov
pushf
sbb
icebp
out
lahf
rcll
in
stc
jno
sbb
mov
leave
xchg
mov
adc
inc
insb
outsb
fisubl
test
jp
push
pop
insb
add
lahf
daa
pop
enter
or
pop
sbb
inc
imulb
push
int3
xlat
nop
in
adc
lods
xchg
add
adc
ss
mov
leave
push
sub
jae
in
outsl
push
jne
cmp
test
jns
and
add
pop
cmp
dec
popa
out
pop
outsb
mov
xor
fisttpl
push
xor
cmp
int3
and
push
lock
add
or
mov
add
or
leave
sbb
mov
and
add
insl
stos
add
cmc
rcl
jg
aam
jbe
pop
xchg
xor
add
jmp
fiaddl
iret
ljmp
mov
nop
xchg
mov
jae
les
and
dec
and
pop
add
xchg
adcb
push
out
sbb
movsl
push
out
dec
jge
and
inc
fstpl
subb
and
sbb
out
xor
test
cs
pushf
lods
ficomps
fstp
mov
sub
data16
stc
hlt
and
pop
hlt
xchg
mov
sub
jb
out
imul
xlat
dec
push
jp
frstor
adc
bound
pop
mov
sub
mov
jp
and
inc
mov
nop
xor
in
mov
jmp
sub
mov
int
jmp
xlat
nop
cmp
out
dec
popf
sub
inc
xchg
fstpt
les
movq
es
cmp
test
subb
mov
xchg
mov
push
or
lds
ljmp
push
push
pop
sysexit
xor
jae
mov
add
setle
jl
or
jmp
or
mull
outsb
jne
adc
push
out
out
jns
mov
das
xchg
push
mov
dec
in
sub
stos
popa
mov
sbb
sahf
add
loop
mov
xchg
lahf
jnp
inc
xchg
lret
fildll
icebp
and
ja
loopne
iret
and
add
cmp
jb
subl
scas
sub
je
test
inc
inc
pop
mov
dec
cmp
out
mov
jae
fnstenv
ficoms
repz
mov
cltd
jbe
pusha
or
pop
mov
jmp
outsb
inc
cmc
int
mov
mov
adc
icebp
aad
into
test
inc
dec
mov
pop
out
shlb
add
shll
pop
clc
sub
jmp
lcall
sarb
push
sbb
lods
lahf
hlt
lea
out
out
adc
sbb
xor
loop
test
loope
fdivl
push
mov
inc
out
jle
push
aad
test
xor
mov
daa
mov
jp,pt
xchg
std
aad
jne
test
inc
pop
mov
xlat
aad
mov
lea
inc
insb
cmpsb
cmp
sbb
and
mov
fadd
daa
push
push
mov
mov
fsubs
sbb
fisubrl
inc
nop
stos
into
jns
add
outsl
mov
add
testb
mov
insl
aam
jp
fnstsw
movb
xor
adc
add
push
subb
sub
push
push
push
movsl
pop
push
adc
pusha
dec
add
push
clc
aas
sub
and
pop
cmp
mov
mov
mov
clc
cmp
mov
mov
jnp
in
aad
in
push
ret
clc
pop
cwtl
pop
inc
jecxz
mov
pop
add
in
add
mov
or
mov
shlb
std
cmpsl
mov
lods
push
cmpsl
movsl
dec
sbb
ljmp
mov
cmpb
mov
ret
dec
mov
add
pop
or
inc
cmp
outsb
shll
xchg
aaa
pop
push
xor
mov
popf
sti
das
addb
and
mov
mov
orb
and
idivl
sub
jmp
mov
test
cmc
dec
cmp
pop
inc
sti
sub
iret
cmp
mov
sbb
jnp
in
mov
das
cwtl
iret
or
and
adc
jmp
and
inc
nop
and
imul
sbb
inc
jge
xchg
fildl
add
in
loopne
mov
and
and
pop
and
repz
stos
fistpl
and
pusha
lcall
dec
pop
into
push
mov
push
sbb
add
popa
push
icebp
xchg
dec
sub
jl
stos
sahf
adc
mov
add
repnz
enter
pop
mov
inc
add
sub
insb
add
mov
sbb
lret
cmc
mov
je
ss
add
xchg
lods
dec
pop
mov
popa
mov
js
loopne
iret
ret
mov
movb
jnp
mov
daa
add
mov
mov
cmp
scas
ret
cmp
rorl
fcomps
les
aad
mov
notb
or
imul
cmp
cmpsb
mov
push
dec
mov
cld
lret
push
dec
jns
js
loopne
add
iret
mov
es
das
lea
loope
outsl
ret
jle
adc
xorb
ret
fidivrl
xchg
jle
adc
pop
mov
push
xor
das
stc
sub
cmp
lcall
adc
add
adc
rorl
sub
fcomps
adc
cmpsb
jle
or
mov
push
scas
cs
sub
pop
mov
icebp
lret
outsb
adc
ds
add
ja
sbb
mov
sub
testl
fdivr
lcall
xchg
xor
rcrb
push
lds
ret
cmp
pop
push
lret
repnz
cmp
inc
jmp
or
repz
arpl
ljmp
test
rcr
aam
inc
pop
ret
sub
leave
sub
call
cmp
imul
xor
lcall
fwait
dec
filds
jno
cld
jge
outsb
mov
push
call
xchg
js
jp
nop
imul
sub
ljmp
in
xor
or
and
ljmp
outsl
popa
and
in
xor
add
out
xchg
shll
cmp
mov
lcall
aaa
or
xor
sahf
test
cmpsb
sbb
sbb
xor
iret
fimuls
sub
inc
movsb
sarl
pop
xchg
push
xor
daa
or
lock
lret
jge
aas
inc
dec
xor
fildl
popa
sbb
scas
ret
jae
pop
iret
enter
dec
cmp
adc
dec
and
shlb
push
push
mov
mov
fwait
or
jl
inc
addl
sbb
bound
mov
test
fs
cmp
loop
sub
mov
call
enter
imul
mov
dec
adc
mov
leave
dec
hlt
scas
pop
cmpsb
lods
fnstenv
scas
add
ss
lcall
cmc
fisttps
cmp
and
adc
pop
lret
icebp
dec
mov
mov
sbb
mov
in
push
push
das
testb
mov
jp
mov
fildl
lods
xchg
xchg
push
sti
push
arpl
add
add
mov
jnp
outsl
inc
stc
std
test
ret
cs
adcb
cmp
movb
notl
and
push
movb
repz
jl
dec
adc
pop
or
adc
and
push
nop
inc
icebp
pop
scas
xchg
jecxz
js
rcll
jno
xor
jnp
fstpl
jp
sub
mov
dec
and
dec
push
out
push
xorl
bound
repz
xor
scas
pop
jae
inc
ret
sub
je
jecxz
cmp
ljmp
aam
fwait
mov
cmp
cmovge
ljmp
dec
clc
mov
mov
xor
std
xor
fdiv
test
nopl
dec
roll
les
inc
xchg
scas
pop
push
je
jecxz
int
sub
imul
insb
out
test
mov
div
aam
push
push
rcr
iret
int3
lea
repz
lock
daa
or
add
pop
add
insl
lcall
iret
dec
lahf
xchg
loopne
jns
add
or
repnz
cmp
ret
fisubrs
dec
test
loop
into
and
shrb
add
pop
es
std
ja
roll
cltd
sub
xchg
pop
ror
gs
out
or
pop
sub
into
sbb
jge
mov
jmp
lods
or
andl
mov
cmp
test
xor
icebp
gs
aam
scas
dec
iret
imul
test
xor
adc
or
lds
cmc
cli
daa
and
lahf
pushf
jb
xchg
xor
adc
lods
les
out
cmp
mov
mov
ret
loope
mov
dec
jnp
pop
push
mov
lahf
xor
adc
leave
inc
andb
ds
cwtl
insl
mov
enter
xchg
sbb
shlb
mov
outsb
ret
lcall
ret
fs
pop
sub
cli
lock
mov
jno,pn
add
orl
in
xor
cli
lea
test
jecxz
push
mov
or
movsl
mov
and
int3
or
not
dec
loopne
lret
dec
stos
movsl
inc
mov
sub
xchg
mov
jne
rcr
jl
fwait
pop
pop
mov
pop
rol
int
sub
jno
xor
rcll
xchg
popa
fldt
out
enter
jg
stos
stc
lcall
push
add
push
xor
push
or
mov
lret
mov
fs
aam
xchg
push
cmpsl
mov
push
movsb
aaa
pop
test
es
mov
mov
fstps
lods
ret
cmp
xchg
lret
sahf
mov
popl
movl
dec
jae
fdivrl
lea
xor
jmp
dec
inc
push
int
mov
popf
add
inc
xor
out
inc
data16
enter
fcmovnu
add
mov
mov
jl
pusha
sub
repz
leave
mov
xchg
adc
lds
xor
pop
fisttpll
and
stos
sahf
ss
mov
jbe
xor
out
arpl
shrb
pushf
inc
and
and
mov
in
in
mov
fs
fs
loopne
sbb
lret
xchg
rol
ficompl
lock
inc
cmp
jmp
fcmovnbe
xor
orl
repz
xchg
daa
loopne
mov
xchg
pusha
xlat
mov
pusha
out
sub
cmpsl
mov
sub
jmp
push
add
inc
jmp
loopne
dec
lods
sbb
push
rcrb
sub
stc
cmpl
xor
aaa
in
xchg
sahf
insb
lods
add
mov
leave
lret
xor
lret
out
pop
inc
xor
sub
cmp
fidivs
aam
out
imul
es
dec
in
inc
push
outsl
sbb
lcall
fisttpll
push
xchg
mov
mov
stos
insl
sbb
cwtl
jbe
fdiv
mov
jne
mov
add
clc
test
nop
adc
mov
iret
mov
mov
loope
or
adc
push
test
test
sub
or
cmc
adc
dec
mov
and
pop
cmp
cli
inc
or
jne
jnp
mov
bnd
adc
addl
push
out
imul
mov
pop
movsb
adc
fadds
pop
mov
jnp
pushf
fdiv
lret
xchg
cltd
dec
xchg
cmp
mov
dec
mov
cmp
popf
in
loop
sbb
mov
insb
dec
addb
in
rcr
lea
dec
mov
add
push
inc
ficompl
icebp
or
gs
jno
xchg
inc
adc
sbb
sbb
xor
mov
or
and
mov
out
call
icebp
cmp
mov
stc
sbb
aaa
jecxz
mov
xchg
je
hlt
fistpl
cmpb
xor
lret
sbb
pop
repz
sti
call
fmul
daa
jo
cltd
enter
cwtl
inc
and
dec
icebp
cmpsb
orl
sub
adc
ds
mov
push
xchg
xchg
push
mov
dec
bnd
sbb
fdivr
cmp
out
inc
xchg
mov
adc
std
adc
push
mov
fs
andl
ret
mov
aaa
repz
add
inc
cmp
mov
inc
sbb
xchg
pop
mov
add
sbb
loopne
cmp
jmp
lods
xchg
dec
scas
xor
scas
push
jne
inc
push
inc
xor
mov
jecxz
or
out
mov
je
inc
icebp
hlt
fcmovnu
cmp
mov
cld
add
out
fwait
xchg
das
mov
or
popf
xlat
add
mov
mov
mov
mov
xor
sbb
jns
loop
stos
inc
jnp
and
insl
ja
cmpsl
xlat
mov
or
scas
lcall
push
jg,pn
pop
mov
mov
and
insb
movsl
xchg
in
lds
cmp
scas
js
jno
hlt
div
pop
push
lret
or
xchg
orb
jb
scas
lea
test
bound
in
xchg
outsb
pop
inc
mov
inc
or
cmp
ret
int3
pop
or
xor
pushf
xor
xchg
xor
dec
and
sbb
cmp
loop
jl
fisubs
sub
mov
filds
mov
je
and
mov
mov
movsb
cmp
mov
jle
imul
xchg
sbb
ljmp
fcomip
test
and
cmp
ror
xor
mov
out
test
roll
mov
push
or
mov
sbb
mov
insb
sahf
xchg
in
ljmp
mov
push
lret
notb
xor
or
inc
xor
insl
testb
push
jge
xchg
scas
cmpl
jns
adc
sbb
mov
ljmp
push
sar
sub
cmc
push
or
dec
adc
mov
push
jge
pop
jl
mov
jp
enter
mov
jecxz
mov
arpl
popf
xor
xchg
cli
sub
aam
sub
dec
in
xchg
movb
int3
lds
mov
lock
cs
xor
and
outsl
shr
jbe
hlt
je
scas
lahf
std
cmc
mov
pop
scas
cld
add
xchg
iret
mov
mov
inc
imull
fldcw
jecxz
cmp
aaa
and
sbb
in
test
mov
inc
aaa
in
cli
pushf
cld
je
in
lcall
arpl
incb
lahf
mov
addr16
jmp
add
push
loop
push
int
imul
cmc
lods
push
bound
inc
shr
sub
rcrl
notl
jle
jbe
out
pushf
movsb
scas
or
jmp
push
nop
mov
or
enter
inc
add
inc
repz
shll
cmp
in
clc
push
adc
sub
add
push
ficompl
imul
es
jnp
jg
jg
add
ljmp
or
or
arpl
ss
mov
cs
ss
inc
mov
addb
adc
pop
inc
mov
shlb
cmpl
sub
fwait
or
push
adc
cmp
xchg
test
pop
sub
das
xchg
add
push
inc
add
or
out
xlat
arpl
fnsetpm(287
sub
mov
jmp
in
add
js
xor
sub
rcl
rcrb
jns
sbb
test
push
xor
xor
lret
orb
shrl
in
xchg
inc
inc
lods
and
jp
fwait
add
mov
rorb
int3
push
in
sbb
stos
xor
sbb
sub
daa
std
mov
imul
adc
inc
cli
in
mov
pop
mov
imul
iret
negl
test
aad
cmp
cwtl
fs
cltd
cmp
and
sub
jne
fildl
push
or
or
loope
inc
sbb
mov
psubusw
or
lcall
dec
lahf
in
inc
sub
pop
shll
dec
in
and
fucomip
dec
test
sbb
or
push
push
fildll
jmp
shl
inc
aad
outsb
inc
jmp
mov
jmp
sbb
jns
mov
imul
test
dec
push
adcl
push
insl
sub
fcomps
bound
cmp
mov
and
add
push
xchg
pop
sbbb
or
jbe
out
and
cmp
push
push
cmp
add
les
incb
inc
fwait
mov
bound
nop
dec
or
add
lret
lods
dec
mov
sub
mov
push
cmpsb
and
shlb
lret
cwtl
pop
iret
inc
sbb
aad
test
xchg
push
and
out
push
sarb
cs
mov
sbb
mov
enter
mov
dec
mov
pushf
jae
repnz
mov
add
cmc
sbb
pop
jo
cld
cmp
adcl
jg,pt
aas
push
fisubs
and
mov
push
adc
out
aas
cmpsl
sbb
insl
jnp
mov
adc
adc
push
cli
nop
fwait
mov
sbb
push
inc
mov
mov
or
or
cmp
ret
adc
xor
cmp
icebp
lahf
jae
or
test
popf
pop
xchg
mov
mov
out
scas
inc
pop
outsb
cltd
inc
stos
arpl
mov
push
jne
cmpsl
pop
push
sarb
cs
mov
jecxz
out
mov
dec
fs
xchg
and
mov
addl
fdivl
inc
aaa
sarb
pop
pop
sub
push
xor
dec
push
push
out
jge
into
fisubl
in
dec
push
lea
xchg
sub
or
lret
xchg
loope
add
jne
pop
sub
loope
mov
das
test
fiaddl
int
mov
divl
jbe
lods
ljmp
xchg
cltd
cld
mov
aad
mov
xor
imul
ljmp
loopne
cmp
or
inc
cs
pop
push
jb
mov
add
lods
inc
test
enter
mov
mov
mov
push
lea
xor
jmp
mov
iret
mov
mov
outsb
jno
popf
pop
xor
mov
mov
jge
ret
cmc
sbb
mov
cwtl
popf
lcall
sub
subb
jae
or
xchg
icebp
movsl
mov
push
out
inc
pop
or
dec
test
fsubrp
pop
movsb
jne
mov
inc
mov
mov
and
es
sbb
mov
sbb
ljmp
or
adc
or
or
cmpsb
insl
shl
adc
movntps
xchg
push
xor
cwtl
repnz
xchg
cmp
cld
adc
nop
sti
divl
pop
movsl
cmc
ja
insb
lods
push
jmp
cli
sbb
xorb
dec
sub
fiaddl
repz
jb
test
popf
jne
mov
push
lahf
imulb
dec
pop
push
mov
mov
xchg
lret
iret
imul
stos
mov
cmpsb
mov
or
mov
cmp
mov
add
ja
rorl
stc
cmp
scas
hlt
icebp
cmp
popf
sbb
dec
daa
sbb
xor
and
ret
fisubs
sbb
lea
aas
jno
movsl
in
mov
xchg
out
dec
push
test
pop
mov
popa
inc
rorb
push
lock
add
mov
ja
xor
sbb
mov
lea
pop
aam
mov
stos
bound
lods
hlt
jns
add
and
setb
inc
roll
int3
cli
push
lcall
xchg
push
outsb
subb
cwtl
sub
xor
jmp
int3
jmp
in
mov
lcall
pop
out
je
in
push
adc
mov
sbb
je
sbbl
jecxz
xor
sahf
int3
xor
daa
xchg
ljmp
aaa
lods
add
rcrl
dec
scas
jmp
and
outsb
mov
mov
jge
into
or
aam
add
adc
xlat
xor
ret
sbbb
xchg
loope
adc
push
popa
xor
lods
cmp
cmp
mov
xor
pop
jecxz
jp
ds
and
test
or
pop
sbb
rcrb
notb
pop
jne
outsb
mov
mov
ret
push
xchg
push
ljmp
push
movsl
test
lods
cmp
dec
or
jo
lcall
add
cmpl
movd
fldenv
in
jae
adc
inc
mov
lock
aaa
mov
mov
push
ds
decl
or
sbb
sbb
cmp
cmp
sarb
xor
or
adc
mov
push
dec
lea
out
fld
test
shll
ret
xchg
add
gs
adcb
jl
nop
add
outsb
dec
scas
add
fnstcw
mov
nop
icebp
dec
fs
sub
pusha
addb
sbb
or
xor
xor
dec
fnstcw
test
dec
xor
add
movsl
and
mov
mov
xchg
xchg
incb
in
js
add
mov
mov
sarl
jns
repz
out
add
push
mov
sbbl
mov
gs
cld
in
sbb
pop
mov
push
push
cs
dec
out
out
sbb
std
mov
loop
push
push
mov
inc
cmp
cmp
std
mov
add
xchg
pushf
jl
repz
andl
jne
arpl
or
ljmp
mov
sub
imul
mov
repnz
push
dec
mov
adc
inc
jne
int3
inc
add
stc
ja
insl
sbb
push
sahf
mov
add
cmp
jno
mov
xor
std
rcrl
jp
pop
add
jnp
mov
mov
mov
stc
lcall
inc
leave
cli
xchg
pop
and
push
mov
pop
out
mov
mov
sbb
mov
es
nop
sub
in
sbb
push
add
negl
popl
scas
cvtps2pd
fimull
fs
cmp
adc
jmp
pop
mov
pop
fidivs
dec
sub
cmpsl
and
inc
lods
adc
nop
test
push
jnp
jbe
mov
outsl
add
jmp
fildl
cmp
jae
adc
movl
test
sbb
sbb
aad
push
pop
mov
movsl
or
adc
pop
or
cmp
mov
pop
and
fdivr
fidivs
push
adc
ficompl
jge
push
adc
rcrb
mov
int
jo
scas
mov
adc
cs
dec
sbb
pop
push
call
test
cmc
fsubrl
dec
mov
and
repz
leave
pop
push
enter
sub
push
nop
rol
push
mov
lods
clc
fistpll
xchg
push
outsb
sub
or
sti
cwtl
cmc
jnp
and
jg
out
orb
fisubrl
mov
lods
jmp
mov
mov
imul
and
mov
xor
xor
pop
lea
clc
pop
rorb
xor
add
aam
jne
or
xchg
sub
test
xchg
negl
decl
mov
sbb
adc
sub
push
mov
push
mov
lahf
jp
push
mov
push
mov
mov
add
cmpsl
pop
les
addr16
movq
into
xchg
cwtl
mov
mov
repnz
adc
push
or
out
lret
mov
xor
xchg
addl
inc
std
enter
int3
sbb
or
imulb
nop
adc
fs
test
xchg
testl
sbb
out
stos
loopne
out
dec
inc
xor
pusha
roll
jp
xor
mov
add
push
scas
jno
pusha
mov
stos
add
in
jo
adc
adc
es
adc
sub
jmp
movsl
inc
xchg
ljmp
xchg
jb
mov
mov
sbb
sbb
mov
jg
or
mov
cmp
outsl
sub
clc
push
jnp
rorl
or
ja
shrb
call
outsb
aaa
idivl
xchg
insl
sub
mov
data16
cmp
adc
in
ficoml
inc
sbb
out
and
lret
sbb
xchg
out
dec
out
mov
push
pop
js
cmp
das
push
sub
push
and
in
add
test
in
cmp
je
shr
pop
jecxz
mov
jb
call
cmc
and
mov
mov
mov
not
or
push
mov
in
xor
shlb
xchg
sub
push
dec
test
or
cmpsb
jl
adc
sub
jecxz
pop
shrb
mov
mov
outsl
call
sti
xor
pop
in
inc
or
sbb
or
adc
jbe
mov
ja
imul
cltd
xor
andb
adc
imul
cmp
cmp
inc
test
es
les
add
push
aas
std
fists
std
pop
pushf
mov
test
and
cwtl
xchg
sub
inc
pop
insb
dec
mov
leave
fwait
cmp
mov
push
dec
ja
sub
std
mov
lods
and
mov
dec
inc
mov
lcall
je
fdivrs
dec
pop
add
ret
jg
stos
dec
daa
add
mov
mov
shrb
cltd
hlt
call
imul
shrl
repz
push
js
in
mov
sar
push
nop
dec
pop
mov
insl
add
xchg
into
cwtl
jle
xor
push
arpl
lods
xor
adc
ffreep
push
lret
add
sbb
jnp
mov
jl
mov
lea
sub
in
xor
stc
shr
mov
in
cli
outsl
mov
sbb
sahf
sahf
pop
mov
or
int
lahf
inc
push
dec
xor
sbb
jo
and
mov
mov
add
insl
adc
mov
mov
push
aaa
push
das
out
xlat
xor
jb
stos
push
rcrb
inc
mov
add
pop
ljmp
pop
sub
xor
xchg
push
sbb
loope
cmp
cwtl
sub
sti
movsl
outsb
jmp
lods
mov
adc
and
scas
fstpl
movsl
scas
add
jl
loop
fimull
inc
sub
adc
adc
inc
sbb
int
jnp
cmp
in
cmp
repz
movsb
outsb
push
xchg
and
push
xor
or
sahf
loope
sbb
or
pop
or
ror
loop
in
lods
jbe
sub
push
dec
pushl
aaa
pop
addr16
jecxz
pushf
or
add
fnsave
adc
test
and
mov
inc
mov
popf
in
fldt
clc
outsb
inc
fistpl
cmp
jge
nop
out
into
xor
mov
dec
loopne,pn
dec
mov
xchg
mov
jne
imul
sub
push
je
mov
jmp
adc
cmp
cmovg
addb
cli
jecxz
jecxz
or
inc
pop
inc
add
das
sti
add
roll
or
insb
fbld
leave
sub
out
xor
sub
pop
mov
popf
sub
jnp
push
scas
sbb
adc
int3
fwait
sbb
xchg
and
ljmp
mov
leave
sahf
or
int
xchg
lahf
and
cmc
and
cwtl
pop
and
and
ljmp
mov
inc
pop
pushf
xchg
jno
mov
fldcw
xchg
xor
sbb
mov
in
pushf
int3
adc
push
mov
push
mov
cmp
loope
movsl
mov
in
adc
and
test
lds
fsubrl
fsubl
mov
inc
test
mov
addr16
test
mov
ljmp
jge
out
push
mov
dec
leave
sbb
pushf
hlt
mov
in
mov
enter
sbb
sbb
and
xchg
and
stc
sub
in
jge
fiaddl
mov
pop
sbb
push
mov
mov
inc
add
in
inc
and
outsb
xor
popl
cmp
mov
mov
fwait
push
add
jno
iret
loope
inc
ret
adc
ds
add
aas
bound
or
xor
insb
ljmp
js
push
loopne
and
cs
mov
sbb
inc
aas
xor
xlat
mov
pop
test
or
mov
fadds
stos
and
add
cmpsl
xchg
pop
mov
stos
pop
sub
rorb
scas
test
outsl
insb
insb
xor
jo
ret
adc
or
test
popf
std
ret
mov
aas
jge
mov
ret
pop
pusha
lret
or
xchg
pop
aaa
popf
js
repnz
insl
addr16
sub
pop
mov
out
add
mov
mov
popf
outsb
lods
rcll
out
cmp
jns
mov
jb
pop
sbb
loope
movl
shll
outsl
test
pop
sub
fst
pop
add
push
inc
fcomps
pop
dec
push
lock
or
mov
imul
xor
xchg
push
movsl
andb
addr16
xchg
lock
cmp
dec
js
in
pop
ficoms
notl
pop
fbstp
flds
cld
test
enter
jmp
add
mov
in
out
inc
jle
xchg
out
negb
cmp
sub
loopne
ret
mov
sbb
stos
insb
loop
mov
daa
aas
sub
pop
mov
mov
mov
orl
aam
inc
jnp
jno
xchg
push
mov
jle
mov
inc
dec
shll
xchg
mov
arpl
movsl
sbb
xchg
or
lods
scas
std
jo
in
push
out
push
and
pop
push
outsb
pushl
dec
push
movsb
sbb
jmp
les
scas
or
in
popf
leave
mov
inc
and
inc
xchg
add
test
lods
nop
movsl
or
jns
xor
xchg
add
mov
xor
pop
test
in
mov
sbb
xchg
in
xchg
cs
insb
push
stc
push
dec
nop
je
cli
sbb
xor
jnp
movsb
or
addb
add
mov
mov
mov
add
popa
add
dec
or
data16
xchg
aad
mov
xor
mov
les
pop
sbb
and
movsb
add
add
add
movsb
and
sar
addl
and
jl
mov
in
testb
and
or
sub
sbb
xor
adc
xor
pop
inc
outsb
lock
movsl
lcall
stos
rcrb
lds
push
push
sbb
push
das
das
cmpsb
rcll
push
pop
add
pop
push
cmp
push
fs
outsl
inc
movb
fs
dec
pop
in
push
out
daa
or
sbb
lret
add
jecxz
roll
xor
sbb
push
sbb
jno
mov
fidivs
inc
sti
or
clc
aaa
mov
or
push
lods
adc
cwtl
int
mov
pusha
xlat
lcall
cmp
pop
bound
mov
mov
mov
out
faddl
push
sti
sub
icebp
lcall
mov
insb
lahf
pop
push
pop
mov
cmpsl
adc
incb
out
fwait
mov
adc
loopne
rcll
sub
dec
out
adc
add
xchg
cwtl
repnz
and
test
ja
shl
dec
or
ret
outsl
xchg
gs
xchg
fsub
sbb
jle
pop
push
outsl
pop
dec
mov
js
mov
push
testb
fwait
pop
je
or
adc
xchg
lea
push
cmpsb
movsb
mov
popa
mov
push
call
adc
out
pop
jbe
aaa
jp
aad
mov
in
fwait
push
dec
mov
push
fsubs
xor
cmc
xchg
in
js
adcl
dec
lret
mov
xchg
mov
pop
ret
sbb
sbb
mov
scas
cld
fcomi
jmp
cli
hlt
cs
int
mov
call
cld
std
mov
jnp
push
inc
rclb
into
subb
dec
clc
jecxz
movsl
test
mov
fwait
adc
in
jne
sbb
cld
pop
inc
loopne
movsl
sbb
aaa
out
pop
pop
scas
xchg
loop
add
xchg
outsl
add
pop
sub
jmp
inc
das
sub
repnz
mov
pop
fwait
ret
inc
loopne
addb
repz
cmpsb
pop
ss
mov
loope
addb
mov
rol
xchg
ret
clc
data16
add
xor
sub
popa
jae
sub
aam
lods
jae
inc
sbb
cmpb
lods
jle
je
je
aas
mov
cmpsl
jmp
test
add
or
mov
sub
movsl
icebp
cmpsl
and
xchg
jg
cmp
loop
ret
push
xchg
push
pop
lds
imul
jmp
flds
mov
add
jg
mov
movsb
int
aas
or
hlt
cld
hlt
mov
addr16
mov
daa
scas
int3
lahf
dec
ficompl
scas
fldcw
mov
or
leave
dec
aas
jbe
fidivrl
cld
aad
add
stc
fcom
pop
xchg
or
mov
cltd
or
rcl
rcl
dec
jne
cmp
pushfw
pop
ljmp
fistps
jecxz
mov
push
inc
popf
clc
pushf
mov
jne
in
and
or
int3
cmp
std
or
mov
aaa
pop
subl
mov
pop
xchg
and
fs
inc
mov
mull
add
call
imul
and
xchg
test
inc
rcrl
add
popf
push
scas
lret
into
pop
imul
mov
es
cltd
mov
or
cmpsl
shll
sub
cmp
adcb
and
imul
jae
ret
les
out
into
cmc
ficoml
dec
pop
shr
pop
jmp
adc
xor
cwtl
lock
in
sbb
xor
pop
fistl
pop
nop
cmc
jae
sbb
fsub
movsl
mov
icebp
std
mov
clc
fs
jg
adc
push
xor
sbb
or
xor
jle
mov
and
icebp
imul
push
sbb
cmpsl
mov
iret
pop
enter
xor
stos
lds
mov
fcompp
mov
dec
out
jl
addr16
mov
push
mov
outsl
cmc
cmp
mov
enter
pop
cwtl
xor
jp
pushf
xlat
pop
inc
fsubs
fildll
and
bound
mov
cmp
stos
jmp
mov
dec
test
rcrb
pop
bound
out
stos
bound
push
dec
and
xchg
jmp
adc
xlat
jmp
sub
leave
int
push
loopne
lret
xchg
icebp
mov
aas
bound
lret
movsb
mov
mov
cli
data16
mov
pop
mov
jl
jle
movsl
sahf
outsb
sub
or
xchg
jnp
xor
adc
enter
push
stc
ret
fldt
xchg
push
mov
push
ds
pop
lret
das
cmpsl
cmp
cmpl
stos
fsubs
ret
clc
stos
push
dec
fs
mov
sbb
inc
xor
and
outsl
inc
inc
jns
ss
and
fdivp
das
imul
mov
sbb
and
push
add
pop
out
push
mov
das
arpl
mov
cli
pop
call
mov
mov
mov
sub
sbb
xor
cmpsl
cmp
and
pop
jecxz
add
rolb
push
rorb
daa
out
sub
notb
sub
inc
out
or
pop
out
xor
repz
dec
mov
lcall
push
outsl
inc
movsb
sahf
and
sti
subb
loope,pn
mov
xor
popa
loopne
add
in
mov
cltd
in
adc
mov
mov
push
pop
shll
sub
sub
pop
js
mov
pop
cmpsl
jle
cmp
jo
out
and
in
es
dec
push
xchg
fbstp
cld
lea
nop
insl
mov
mov
std
mov
scas
and
cltd
xchg
call
cmp
cmp
in
dec
int3
pop
fsubp
sbb
shlb
out
ja
jl
add
and
mov
xor
outsl
repz
mov
std
lret
leave
mov
je
inc
scas
or
shll
sub
cmc
in
mov
push
mov
jle
inc
and
popa
dec
outsb
in
sti
mov
xor
sbb
out
imul
dec
xchg
lret
mov
inc
fldl
shrb
divb
inc
mov
adc
add
jmp
adc
jecxz
sbb
adc
adc
and
out
loop
mov
lds
sbbl
movsb
mov
js
test
aaa
dec
lea
cmpb
cmp
pushf
jnp
mov
lods
aas
rolb
ret
jb
pushf
mov
fsubrl
and
scas
jnp
sbb
cmp
pop
jns
aad
icebp
inc
mov
ss
xchg
mov
or
add
ss
dec
aad
mov
pop
sub
rclb
lea
mov
cmp
negl
mov
push
cs
enter
adc
xchg
adc
mov
adc
inc
and
sbb
mov
popf
dec
fld
hlt
das
dec
dec
push
mov
lahf
cmp
lahf
lock
gs
fbstp
movsb
and
lret
adc
pop
rcr
mov
xlat
push
les
xchg
lahf
inc
add
jns
fsubrs
xor
je
lods
repz
fiadds
inc
or
cmp
setne
int3
jne
push
jge
dec
leave
iret
dec
int
movl
adc
jl
mov
jmp
jne
or
pop
push
add
cmp
cli
fistpll
aam
pop
ja
inc
and
iret
mov
out
data16
sbb
jnp
aas
sarl
pop
sbb
mov
push
rcrb
int3
jo
mov
js
adc
lods
sub
js
adc
repz
xchg
fcoml
inc
add
test
mov
in
mov
inc
enter
cmp
sub
lcall
push
mov
cld
rorb
and
xor
add
out
lret
in
fldt
pop
sbb
popa
or
pop
cltd
inc
push
call
and
mov
xor
xor
mov
pop
and
mov
or
in
push
adc
enter
add
loopne
xchg
sbbl
push
repz
lret
lds
jns
sub
dec
shufps
xor
repz
cmp
adc
pop
jmp
adc
insl
and
cmc
jb
ret
fwait
pop
out
jecxz
lret
xchg
orl
jle
stos
bound
into
popa
add
xchg
lret
xchg
jne
lcall
sbb
movsb
dec
inc
jle
pop
add
cmp
int3
loopne
hlt
cmp
lods
jbe
adc
dec
test
loopne
xlat
or
out
ud2
xchg
loope
pop
movsl
test
pop
cld
ljmp
enter
rcr
pop
ret
daa
imul
aas
sbb
sar
xchg
aaa
pop
add
push
mov
pop
xchg
add
jmp
inc
ds
insl
pop
mov
icebp
adc
loopne
adc
outsb
into
clc
or
adc
hlt
jo
lahf
jbe
dec
jl
mov
adc
cmc
cmpsl
repz
sub
lods
lret
mov
mov
mov
ret
data16
push
pop
push
subb
imul
adc
mov
cmp
xchg
in
jecxz
pop
lcall
xchg
or
addr16
or
std
aam
roll
arpl
cld
das
popf
outsl
mov
dec
outsl
jb
iret
pop
ss
outsb
adc
pushf
sarb
dec
and
das
push
fistpll
jnp
adc
xchg
mov
test
jb
pop
cs
stc
sbb
arpl
push
xchg
js
xor
les
inc
aad
ja
out
jns
sbb
xchg
fimull
add
dec
int3
addr16
enter
loope
mov
loop
stc
inc
out
mov
ret
dec
fnstcw
inc
jae
jge
cmp
jmp
pop
add
sbb
jne
lea
je
mov
je
mov
jg
outsb
or
push
pusha
movsb
mov
xchg
pop
pop
mov
leave
idivl
pushl
pop
jns
jle
inc
lods
or
adc
adc
and
pop
add
arpl
and
call
outsl
jbe
ljmp
push
push
cli
jl
sub
pop
pop
mov
lret
fldenv
hlt
rorb
mov
testb
clc
rorl
mov
mov
outsl
out
stc
test
inc
adcl
cmp
popa
and
jmp
fcmovnb
push
xor
lods
sub
mov
pop
inc
fidivs
lods
int3
push
std
xor
lahf
cmp
out
inc
pop
loope
cmpsl
and
inc
imul
pop
insl
xor
shll
mov
pop
scas
jo
inc
sbb
sub
mov
sbb
in
mov
jmp
inc
clc
push
jnp
xchg
xchg
sbb
sbb
fcomp
adc
fwait
out
imull
sub
cwtl
rorb
movb
add
rcll
cmpsl
aad
inc
aaa
pop
out
jge
repz
sub
mov
inc
cmpsb
mov
or
mov
ret
push
inc
cs
xchg
out
mov
push
or
jmp
repnz
pop
into
sbb
loop
adc
pop
call
ret
loope
pop
xchg
repz
loopne
mov
mov
aaa
xor
insl
nop
xchg
fucomi
cmp
xchg
pop
and
std
dec
mull
xchg
in
scas
leave
or
inc
push
mov
add
mov
popf
lcall
mov
dec
fcompl
outsb
clc
lret
or
in
cmp
push
out
mov
mov
cmp
out
jns
xor
jns
or
clc
or
fbstp
mov
rcl
xor
adc
frstor
pop
popa
frstor
xchg
out
aaa
shll
popfw
dec
jecxz
stos
daa
adc
pop
fidivrl
inc
fnstenv
fisttps
lods
xchg
push
out
mov
inc
jg
mov
rorl
jnp
dec
add
mov
adc
roll
dec
ret
daa
and
jb
push
es
in
or
mov
jns
sub
lods
lahf
das
xchg
roll
xchg
pop
jb
dec
jbe
shrl
lahf
inc
mov
sub
out
shlb
ficoms
daa
pop
dec
mov
xor
xor
jg
push
xor
in
ret
or
pop
popa
cltd
or
loope
mov
inc
push
scas
mov
dec
xlat
xchg
pop
iret
mov
dec
xchg
lsl
sbb
mov
xor
inc
pop
rcll
test
dec
imul
add
rclb
add
and
aad
or
mov
cs
adc
xor
sub
and
sbb
fs
adc
loope
mov
xor
mov
ljmp
gs
sbb
mov
jle
imul
fnsave
ffree
stc
sahf
inc
lock
sarl
pusha
fsubrs
cmc
add
bound
mov
jp
adc
scas
pop
dec
sub
insl
adc
xor
jmp
fisubrs
imul
clc
gs
ror
xchg
pop
dec
mov
cmp
int
add
je
jmp
inc
fidivs
sbb
or
mov
in
pop
mov
add
cmpsb
imul
xchg
jecxz
jp
push
sub
loopne
add
jecxz
pop
and
push
mov
std
out
fistl
repz
mov
dec
cli
ja
sbb
mov
pusha
or
es
cs
hlt
xchg
data16
shr
dec
xlat
cmc
sub
xchg
sbb
push
mov
sahf
mov
push
ss
jmp
mov
and
sub
jns
xchg
ds
nop
push
insb
test
je
sbb
mov
and
xchg
je
dec
inc
or
adc
shr
mov
imul
jg
mov
mov
in
or
mov
popa
sub
ret
mov
mov
mov
xchg
adc
sbbb
mov
test
lahf
in
pusha
mov
or
jnp
jo
movsb
dec
scas
add
ret
xchg
adc
jle
or
inc
lret
and
data16
inc
loope
push
loope
inc
ficompl
jb
jmp
ffreep
iret
fwait
inc
adc
pop
adc
xchg
push
test
jo
orb
iret
dec
incl
icebp
pop
or
stos
popa
outsb
in
psubusw
movsl
loop
out
test
inc
int3
and
push
stos
and
inc
nop
adc
out
push
rol
divb
loope
adc
cmp
and
fsubrl
dec
lods
sbb
in
outsl
mov
fcomi
fwait
stos
gs
mov
pop
adc
aam
enter
dec
stos
cwtl
mov
mov
push
lret
fistpll
mov
iret
shrl
rcl
popf
daa
jmp
pop
rcrb
mov
push
adc
imulb
out
dec
push
lea
fistps
movsl
hlt
or
xchg
xchg
xorl
add
xchg
push
push
scas
das
aad
je
push
mov
ret
xchg
dec
pop
sub
outsl
das
shll
cli
sti
inc
mov
mov
fldt
adc
stos
pop
jge
jae
mov
lcall
adc
jno
inc
leave
adc
sti
movsb
dec
sbb
out
adc
sub
xlat
stos
daa
sbb
mov
out
inc
rcl
stos
ficoml
out
add
jecxz
adc
push
and
aam
shl
mov
xor
lock
pop
cltd
adc
faddl
sbb
sbb
mov
lock
mov
stc
push
arpl
jg
xor
pop
push
xchg
mov
ret
cmc
fildll
lods
sub
lea
lcall
out
sub
leave
das
test
movsb
adc
std
std
aam
xchg
xor
mov
dec
ljmp
loop
sub
inc
shll
scas
sub
icebp
or
lds
or
xchg
scas
xchg
cmp
xchg
inc
in
mov
inc
jno
xor
inc
test
sarb
mov
sti
dec
mov
cli
adc
cli
into
adc
or
stos
mov
ficomps
sahf
pop
or
movsb
shll
jbe
in
jno
movsl
push
adc
sti
and
dec
add
push
aad
push
jge
pop
add
jecxz
ss
ss
pop
cmc
sahf
rolb
mov
scas
mov
iret
loop
dec
push
lea
outsl
pop
addr16
xor
jmp
hlt
xchg
pop
fdivl
dec
inc
loope
aam
cmp
out
xor
sti
inc
sbb
xchg
icebp
inc
xor
pop
cltd
pushf
addr16
inc
sbb
dec
push
test
outsb
sahf
lods
push
leave
jne
cs
add
dec
fsubl
sbb
pop
int
add
mov
inc
dec
jle
cs
in
sub
movsb
sbb
mov
fmull
pushf
and
lods
pushf
jne
xchg
mov
in
cmp
or
add
push
ja
lock
sbb
aaa
add
and
cmp
cmp
test
je
rorl
lcall
and
popa
jmp
or
int3
clc
cmc
enter
jbe
adc
pop
in
mov
fstpt
cmp
xor
stos
int
and
fnsave
pop
imul
sbb
dec
add
mov
jge
push
xchg
sub
push
mov
push
add
sub
repnz
popf
xor
jge
daa
imul
xor
dec
cmpb
mov
mov
nop
out
je
push
out
mov
inc
sub
addr16
imul
outsl
sti
bound
cli
add
aam
inc
aas
imul
js
lds
lahf
add
mov
rcrb
insl
and
inc
clc
dec
sbb
shl
repz
dec
popa
dec
mov
stos
jecxz
fld1
fdivrs
cltd
outsl
pop
ds
sbb
mov
pop
je
pop
jnp
and
sbbl
fmul
xor
mov
cmp
into
loopne
push
int
cmp
or
sub
addr16
adc
mov
pop
cmc
mov
ljmp
mov
cld
movsl
xchg
pop
dec
repnz
jns
sub
mov
lahf
push
mov
cli
inc
adc
add
push
js
into
into
clc
imul
pushf
cmp
jo
stos
test
movsl
lcall
sbb
and
jnp
xchg
inc
fldcw
inc
and
pop
add
inc
stc
shll
or
cltd
push
push
test
adc
jecxz
sahf
mov
cmp
inc
pop
push
sti
icebp
aad
mov
std
es
cld
jp
rcrl
or
mov
adc
xchg
xlat
ror
jne
outsb
arpl
mov
xlat
xchg
sub
inc
pop
jecxz
dec
ret
ret
hlt
sarb
mov
lods
faddl
sahf
enter
mov
mov
orl
sbbb
jae
and
push
pop
jg
movsb
push
add
xchg
iret
ja
xor
or
push
shl
cmpsl
mov
repz
cmc
or
cmpsb
dec
popf
or
xor
jmp
push
sub
fbld
cmp
add
dec
or
gs
das
xor
repnz
jp
scas
ret
arpl
add
and
push
addr16
test
shll
mov
or
adc
add
rcll
push
shlb
sub
adc
into
icebp
push
sarb
pop
lods
inc
shlb
cltd
xor
ficomps
mov
daa
jl
xchg
outsl
leave
xor
mov
mov
fidivs
das
cwtl
xor
inc
dec
rorb
xrelease
jne
add
sarb
mov
out
fidivrs
add
adc
shrl
clc
addr16
pop
pop
and
imul
adc
xlat
sub
cmpsb
jmp
repz
dec
int
mov
cs
out
add
xor
lds
bound
divb
mov
into
out
mov
lret
or
push
xor
sub
loop
in
mov
dec
popa
fisubs
jbe
jecxz
inc
movsl
mov
push
movsb
sbb
fnstenv
notb
shrb
sbb
push
je
dec
shrb
fnstenv
in
mov
xchg
pop
loope
adc
sbb
leave
ja
xor
roll
mov
inc
xchg
sbb
leave
mov
aas
pop
inc
es
cltd
push
dec
xor
and
aas
imul
insl
test
hlt
addr16
fimuls
rcpps
xchg
call
cmpsl
cld
pop
nop
orl
or
cmp
jno
push
xchg
cmpsl
inc
or
scas
push
lret
ja
or
jnp
sub
test
dec
mov
iret
and
pop
stc
push
jp
mov
mov
jle
shrb
ljmp
mov
mov
jbe
mov
sub
push
or
or
jle
popa
xor
inc
pop
cmpl
push
sbb
and
sub
std
bound
xor
mov
inc
xchg
pop
psubsw
iret
insl
repz
xor
cmp
ret
xor
clc
dec
ljmp
ret
incl
cwtl
xchg
lds
stc
inc
pop
mov
in
outsb
mov
stc
les
or
jno
xlat
loope
sub
sub
imulb
cmp
inc
movsb
sbb
mov
fs
add
adc
mov
insl
xchg
or
mov
mov
pop
repz
dec
scas
jp
loop
bound
bnd
sbb
push
push
jnp
cmp
movsl
pop
nop
xlat
enter
shlb
shr
dec
push
push
outsb
mov
insl
jnp
pop
in
add
xchg
add
sbb
outsl
sahf
lods
dec
out
xchg
mov
ja
les
js
jmp
addr16
xlat
ds
xchg
popl
mov
pop
jg
xchg
ss
mov
add
mov
xchg
add
xchg
gs
xor
dec
or
mov
imul
jo
or
xor
dec
jns
xor
ficomps
mov
sub
stos
lret
jae
jnp
and
mov
pop
call
jb
or
pushf
sub
fs
pop
repnz
lds
inc
add
scas
ljmp
inc
cmp
aas
test
movsb
push
test
int
sbbb
aam
xor
inc
inc
xchg
test
dec
leave
jge
dec
pop
cmp
shlb
cmp
fdivl
out
lahf
sbbl
xor
mov
out
mov
fdivrs
fistpll
subl
or
sbbl
repnz
es
dec
pop
xchg
add
pop
repz
cld
mov
cmc
ds
inc
mov
xor
inc
das
lret
mov
sahf
push
push
shrl
sub
repz
arpl
xchg
mov
push
sbb
push
pop
and
loope
sti
cmpsl
repnz
sub
jle
in
push
data16
ret
leave
adc
mov
loopne
sarl
xor
push
and
dec
ds
lods
ficompl
xchg
dec
adc
and
xchg
in
dec
xchg
mov
pop
cmp
cli
loope
cld
out
fnsave
pop
pusha
mov
pop
cmp
lea
pop
repz
sbb
sbb
lock
inc
movb
pop
fisubl
mov
int
adc
outsb
pop
adc
jle
rcrl
or
inc
sbb
fmul
inc
int3
mov
sbb
pop
adc
loop
push
mov
pop
jl
std
int
lret
cwtl
das
addb
cli
cltd
lods
xlat
vmovd
in
inc
cmp
jne
lods
hlt
cmp
and
adc
sub
lods
push
dec
jnp
add
push
repnz
mov
rcl
imull
insl
xchg
mov
sbb
aad
aas
inc
test
jbe
imul
and
cmp
aas
bndldx
adc
daa
cmp
sti
cmp
adc
mov
pop
lahf
iret
dec
stc
xor
sub
fmull
lods
loope
xor
jbe
lret
icebp
fdivrl
pop
iret
cltd
jns
aaa
xor
fnstsw
dec
gs
fwait
push
pop
loope
inc
cmp
cli
gs
xor
or
and
jbe
jg
xorl
inc
mov
jg
or
out
mul
rcll
stos
mov
stos
xor
mov
test
cmpl
cltd
or
pop
jl
aam
repnz
mov
pop
mov
adc
std
xor
lods
pop
mov
push
sarb
push
adc
bound
or
aas
sub
pop
pop
inc
push
aaa
pop
lahf
xchg
adcl
enter
loope
ja
outsl
push
xchg
movsb
bound
in
das
and
daa
fsubrl
mov
movsl
stos
int3
in
lock
loopne
jno
sbb
inc
mov
cwtl
mov
orl
adc
pop
cmpsl
lods
stos
adc
stos
ljmp
fldl
mov
and
loop
pusha
xlat
cs
mov
cmpsb
insb
inc
out
inc
jg
cmp
cltd
sbb
shlb
push
mov
inc
jno
adc
push
add
dec
dec
ret
mov
add
adc
xchg
sub
fldl
cmpxchg
fidivl
dec
fsubp
call
lods
ja
push
ret
mov
pop
add
out
mov
insl
imul
fcmovnu
inc
maskmovq
mull
fidivrs
data16
mov
push
lret
dec
pop
mov
mov
sub
gs
fs
sub
sbb
in
imul
lea
ret
movsl
or
adc
jl
add
jecxz
fistl
adc
pop
inc
xchg
push
pop
cld
testb
das
fcomps
daa
xorb
movsl
ret
mov
lcall
cmp
fstps
xchg
cmp
mov
mov
inc
test
inc
jecxz
fldl
inc
mov
jb
push
push
fdivl
addr16
jne
cld
std
int
xchg
fiaddl
inc
add
hlt
inc
cltd
cmpsl
xchg
cli
inc
mov
leave
lods
lret
outsb
pop
xchg
leave
pusha
ficompl
fs
sbb
mov
add
std
adcl
outsb
lahf
pop
ficoml
lret
and
aad
mov
std
pop
jle
aas
push
push
movsb
adc
es
clc
push
or
addr16
pop
or
push
dec
dec
cltd
xor
pop
cmp
mov
test
cmp
mov
adcl
testl
inc
aas
xorl
push
scas
fsubrs
fbld
addl
pop
jp
or
lock
lods
sbb
sub
xchg
enter
cld
dec
inc
inc
test
sub
cmp
dec
pop
add
dec
rolb
dec
in
rol
je
xchg
mov
xorb
bound
inc
inc
scas
push
mov
cmpsb
xchg
jp
out
outsb
idiv
mov
sub
test
sti
loop
mov
pop
and
mov
addb
push
fwait
ljmp
cmp
mov
jp
xlat
cmpb
mov
mov
lods
fimuls
inc
jmp
and
jnp
cs
das
pop
xchg
inc
std
mov
xchg
mov
dec
jne
xchg
sub
testb
in
and
lock
add
push
incb
sahf
addr16
jae
lret
lcall
add
inc
xchg
repz
jmp
cmp
addr16
mov
jecxz
sbb
pop
xlat
cmpsb
inc
das
dec
sub
mov
fwait
addr16
pop
inc
ret
sub
or
into
sbb
or
es
push
inc
sbb
or
mov
and
fsub
xor
icebp
loopne
lahf
mov
scas
lahf
addr16
imul
icebp
mov
sub
bound
sbb
scas
ret
insb
fcompl
movsl
or
outsb
mov
hlt
push
mov
shll
push
jno
sub
sub
mov
iret
or
push
outsl
cltd
cmp
dec
inc
loop
mov
fnstsw
int3
add
int3
jecxz
mov
sahf
clc
shlb
fisubrl
jle
mov
sbb
in
loope
pop
ja
leave
pop
add
push
inc
dec
cs
nop
mov
fisubrl
push
cmp
xor
mov
inc
popf
insb
or
jbe
jae
pop
arpl
or
mov
dec
mov
rcll
aam
aam
mov
mov
andb
insb
imul
inc
push
sub
ljmp
cli
lahf
lret
scas
bound
jl
sub
pop
push
and
jp
fldenv
mov
sbb
mov
es
pusha
nop
jmp
mov
lret
xor
test
dec
jnp
fwait
aad
push
imul
adc
mov
jne
add
jne
stc
scas
add
and
pop
ficompl
sub
aaa
cmp
push
jle
movsl
mov
in
insl
std
sub
mov
mov
test
stos
bnd
ss
pop
mov
push
neg
repz
pop
popa
movsb
fucom
sti
call
sub
lret
daa
xor
call
out
ds
ret
xor
mov
and
pop
stos
mov
inc
clc
jbe
in
mov
mov
cmp
test
xchg
jmp
daa
pushf
movsb
aad
insl
dec
aaa
or
ficoml
and
cwtl
or
and
sbb
push
loop
xchg
icebp
inc
loopew
loop
and
dec
dec
sbb
xchg
push
loop
inc
adc
dec
mov
notl
inc
sbb
or
adc
sbb
repz
xor
les
stc
lods
cmp
jns
cmp
adcb
push
inc
mov
in
stos
mov
xchg
movsb
in
out
adc
popa
jg
out
and
push
lock
pop
jle
insl
add
dec
out
sub
jo
mov
sub
popf
jbe
sub
movsb
sub
outsb
les
shl
sbb
jo
xor
sarb
xlat
clc
cs
pop
inc
in
sub
fs
out
orb
popa
scas
lock
jl
jo
push
inc
pop
fistps
lods
aas
mov
pushf
xchg
rolb
cli
dec
rclb
rclb
pop
sub
loop
arpl
mov
mov
adc
pop
or
mov
popa
aas
adc
cmp
push
xor
mov
fmuls
and
mul
mov
insb
sub
add
leave
mov
mov
sbb
inc
or
mov
test
cld
push
in
ret
push
cmp
sub
sbb
and
mov
sbb
inc
in
jns
and
xchg
js
lds
mull
cmp
push
jae
mov
sti
cmpsb
jbe
pop
mov
add
add
cld
lcall
cmp
or
outsb
pop
push
daa
out
and
test
jmp
dec
les
and
fld1
mov
int
in
mov
pop
push
int
mov
dec
add
mov
movb
addr16
adcl
test
or
adc
mov
sbb
js
mov
xorl
imul
xorb
imul
or
mov
fwait
jg
lods
lock
xchg
cmc
add
jle
push
sbb
jnp
and
and
and
flds
sbb
js
inc
mov
jl
int
mov
inc
fucompp
pop
dec
and
inc
lock
out
popa
xor
movsb
ret
in
jp
xchg
mov
jo
lods
xchg
scas
sub
sbb
enter
cmp
add
add
mov
imul
in
fbstp
inc
cmp
sti
repz
mov
jnp
add
push
cli
loop
insb
mov
pushl
ds
pop
sbb
sub
ss
xchg
in
xor
xchg
ret
add
xor
jne
jecxz
aam
lods
pop
fldl
mov
pop
repnz
add
adc
pop
aas
mov
jl
adc
jecxz
jne
jp
cmp
out
mov
mov
inc
xchg
cwtl
dec
mov
cs
sahf
lods
lods
push
test
adc
fs
push
mov
sbb
mov
cmp
clc
sbb
xchg
cltd
filds
adc
sub
movsb
push
pop
xchg
cmp
xchg
add
popa
mov
and
dec
mov
fildl
inc
in
pusha
hlt
test
adc
insl
cmp
iret
and
out
and
add
add
and
jae
pop
mov
sub
mov
gs
push
ret
rolb
xor
add
pop
std
loope
pushw
jge
sahf
jmp
popa
cwtl
imul
add
fcmovb
push
mov
xor
inc
rol
lret
mov
or
stos
shl
imul
add
xchg
xchg
lret
jp
rcrb
bound
clc
cld
add
cltd
sahf
dec
jo
xlat
adc
test
pusha
xchg
mov
push
mov
add
pop
shll
jno
clc
test
lret
cmpsl
test
pop
in
mov
movsl
xchg
inc
push
mov
outsl
push
adc
or
insl
loop
imul
mov
jmp
ljmp
lcall
dec
mov
aam
cmp
cs
or
mov
sbb
fisubrl
test
pop
push
clc
or
adcl
int
push
test
mov
popf
or
mov
jbe
test
pushf
xchg
mov
popf
cwtl
sbb
xor
xchg
fcompl
jnp
out
inc
cmp
stc
stc
dec
pop
mov
stos
ss
enter
out
sub
nopl
mov
cli
popa
popa
and
inc
cmp
mov
fwait
dec
and
orb
pop
or
and
das
clc
and
adc
push
les
nop
pusha
es
enter
xchg
mov
mov
inc
xchg
outsl
bound
and
stos
dec
les
push
cmp
jo
mov
xor
add
out
cs
out
daa
insl
insl
sub
test
dec
fstps
in
out
insl
xor
clc
sbb
mov
jg
push
mov
je
lahf
mov
sub
aad
test
ret
xor
cltd
xchg
add
inc
push
mov
push
imulb
clc
sbb
addl
dec
rorb
gs
jb
incl
in
outsl
test
incl
mov
sub
repz
cmc
imull
mov
int3
lret
xchg
scas
push
popf
testl
repnz
mov
pop
push
fs
aaa
out
mov
fsub
add
enter
and
fcomip
cltd
insb
jecxz
sbb
xor
jns,pt
popf
jmp
dec
daa
popa
or
call
arpl
fistl
mov
push
loopne
fcoms
jmp
push
mov
xchg
mov
adc
flds
in
loope
dec
add
pop
scas
pop
mov
es
mov
mov
mov
and
sub
das
adc
repnz
cmp
or
gs
mov
ja
dec
fnstenv
xor
fdivrp
mov
sub
cmpl
or
repz
inc
sbb
lea
adc
xor
or
dec
mov
repnz
dec
mov
ja
hlt
xchg
je
pop
dec
xor
ss
out
dec
sub
sub
mov
sub
es
mov
mov
sarb
ljmp
fimuls
pop
and
je
mov
xchg
int
ljmp
movsl
ss
sbb
nop
addr16
pop
push
pop
jae
repnz
sbb
jecxz
fiadds
stc
lahf
pusha
stc
test
pop
add
xorl
mov
stos
mov
aad
mov
dec
addr16
push
lds
mov
pop
mov
aam
mov
fs
nop
lcall
jge
jge
ljmp
mov
test
jge
jb
popa
xchg
daa
rclb
mov
fidivl
shl
pop
lret
xchg
repz
push
dec
xor
mov
jo
sub
adc
aad
loopne
dec
outsl
je
pop
stc
dec
adcb
sbb
roll
add
add
mov
cmpsb
js
inc
test
xor
imull
pop
adc
pop
shll
repnz
xchg
out
push
mov
push
fcmovnu
mov
scas
sbb
dec
fdivl
fs
pushf
push
jecxz
mov
mov
jge
fistpl
cmp
mov
add
js
mov
jp
jp
xorl
lock
out
xlat
cmpsl
xchg
int3
addb
xor
fnstsw
cmpsb
sbb
mov
cmp
pusha
mov
jo
lea
mov
sub
aam
pop
jbe
and
faddl
nop
xlat
lods
outsl
jae
cmp
dec
sub
jns
pop
push
dec
rolb
mov
imul
jne
adc
xchg
mov
lock
shrb
lret
xchg
cld
mov
mov
cmpsb
das
outsb
pop
imul
cli
shlb
mov
mov
imul
cmp
fwait
inc
les
xchg
fs
sbb
hlt
out
cmpsb
out
mov
adc
movsb
sub
dec
sbb
xor
stc
scas
stos
jbe
jnp
inc
mov
pop
add
test
pop
cmpsb
scas
pop
dec
imul
ja
sub
add
mov
adc
or
and
pop
insl
xor
sti
pop
hlt
jae
stos
inc
mov
loope
jecxz
mov
xor
cmc
addr16
js
sbb
insl
jp
pop
adc
xor
ret
ljmp
cmpsl
lods
cwtl
mov
ds
jae
rcl
das
inc
pop
ljmp
add
in
sub
xlat
mov
enter
cmp
jno
les
inc
inc
aas
popf
fnstsw
adc
aad
mov
ret
imul
adc
cmp
jb
pop
xchg
adc
mov
inc
mov
push
std
scas
aas
fiaddl
stos
popf
cs
sahf
ror
nop
into
lock
push
mov
mov
sub
out
add
xchg
lock
insb
ret
dec
fildl
roll
daa
stos
or
cmpsb
mov
add
and
pop
filds
mov
inc
cmp
cld
arpl
dec
sub
mov
mov
sbb
cli
orb
jb
jnp
adc
mov
or
mov
into
test
mov
mov
dec
push
push
jp
stos
push
lret
push
stos
inc
imull
add
and
cmp
fstl
push
jp
xchg
lret
pop
push
ds
dec
mov
xchg
pop
loopne
enter
sbb
ds
fcomip
and
std
cmp
fistl
sub
jo
and
sbb
dec
xchg
add
inc
adc
mov
call
sbb
pcmpgtd
outsl
fildl
mov
js
jg
fmul
pop
and
in
bnd
push
or
push
mov
push
dec
lods
adc
sub
std
cmp
int3
sbb
dec
rol
out
and
jnp
dec
iret
test
adc
pop
addl
faddl
or
mov
push
in
pop
sbbl
mov
cmp
cld
jo
enter
cli
fdivp
inc
pop
hlt
xor
ret
xor
xor
mov
sub
jg
dec
inc
push
push
stc
push
adc
arpl
mov
loope
xchg
xor
or
xor
fcmovu
cmpl
int
js
lret
jno
ja
mov
cld
lea
cwtl
aad
cmp
dec
xchg
aam
or
in
arpl
out
aaa
imul
movsl
insl
adc
loopne
adcl
fidivl
mov
sub
xchg
inc
out
lahf
repnz
adc
add
cmp
xchg
pop
jns
mov
pop
je
pop
clc
data16
scas
dec
mov
fldt
lret
popf
addr16
dec
rcrl
push
sarl
loope
xlat
leave
orl
cmpsl
out
fs
stos
aas
out
or
inc
pop
aad
out
push
inc
test
and
lods
iret
sbb
pop
out
xchg
xor
out
mov
sbb
pop
sub
out
jmp
icebp
or
pushf
sbb
jl
jnp
pop
add
js
mov
jge
adc
ret
movsl
loop
cli
push
and
filds
lret
jae
shl
test
cwtl
shlb
push
jbe
mov
mov
jle
lds
dec
insl
in
cmp
jno
dec
lahf
movsl
cld
orb
lret
js
pop
mov
mov
mov
jmp
out
push
pop
btc
mov
cwtl
dec
xlat
bnd
addr16
inc
cmp
data16
inc
fisubrl
out
test
pop
push
sbb
xbegin
popa
adc
cmp
orl
mov
fadd
insl
int
fbstp
je
mov
out
imul
inc
imul
pusha
out
sub
enter
pop
stos
inc
fwait
xlat
or
mov
int
lea
das
cmp
loopne
jl
xchg
mov
lock
clc
jg
sti
je
out
push
fcompl
clc
and
inc
imul
jecxz
mov
ja
pop
pop
arpl
mov
lea
mov
out
dec
jbe
sbb
cmp
mov
mov
pop
dec
xor
mov
cwtl
cmp
sbb
popa
mov
mov
icebp
pop
pop
add
push
push
cmpsb
and
lock
adc
xchg
sub
sub
xor
lcall
mov
jmp
mov
adc
mov
aaa
xor
fnstenv
xor
arpl
inc
inc
aas
jbe
fsubs
insl
int3
mov
out
ja
xchg
dec
jg
int
dec
shrb
mov
out
pop
xchg
pop
xlat
sub
arpl
push
push
out
xchg
popf
push
out
int3
adc
in
clc
xor
rclb
pop
das
aad
aas
add
mov
push
out
sarb
pop
movsb
shl
add
sbb
lret
fisubl
in
push
std
xor
xchg
sahf
fwait
or
cwtl
inc
push
and
add
decb
lds
push
iret
sbb
nop
popf
dec
pop
cmp
ja
pop
cmp
push
mov
outsl
cmp
jne
mov
pop
xchg
xchg
sbb
xchg
cld
push
fadds
lcall
ret
dec
add
imul
mov
cmp
in
fisttpl
outsl
aam
cmp
push
or
clc
repnz
cld
fmul
cmp
xchg
mov
mov
mov
arpl
jo
dec
xchg
push
outsb
int
cmp
dec
lock
packsswb
xchg
pop
add
jle
sbb
push
cwtl
add
into
mov
jg
sub
sub
adc
pusha
bswap
and
jbe
hlt
shl
aad
enter
dec
movsb
push
rcll
mov
mov
push
sub
gs
in
test
mov
add
adc
repz
fcmovnb
cmpsl
xor
xor
iret
fld1
mov
mov
dec
lahf
popf
iret
cmpsl
jnp
lcall
push
xchg
imul
pusha
sbb
enter
and
mov
cmp
mov
xchg
add
jg
fld
imul
push
xchg
add
sub
mov
gs
fidivrl
xor
and
mov
sbbl
subb
testl
sti
in
rorb
arpl
fsubrs
int3
sbb
or
jl
push
pusha
mov
jno
mov
mov
xor
push
inc
outsl
dec
repnz
mov
push
jae
loope
push
xchg
sub
cltd
in
and
jnp
jg
cltd
lcall
and
andb
icebp
nop
addr16
adc
insl
inc
out
int3
pop
cwtl
mov
es
mov
mov
jbe
jnp
iret
push
dec
mov
mov
ljmp
inc
lret
and
jg
push
or
rorb
push
in
push
fiadds
rolb
lds
sbb
mov
cmp
jl
stc
cld
pusha
sti
cmp
pushf
ret
ficoms
mov
pop
cmpsb
cli
xchg
sub
cltd
mov
fs
aas
sbbb
leave
aam
push
mov
or
pushf
sbb
movsb
test
jge
mov
add
add
std
xchg
push
insl
mov
cmpl
test
xor
aas
idiv
fucomi
mov
call
cmpsl
faddl
dec
pushf
loop
jae
cld
insl
inc
dec
outsb
mov
pop
jmp
pushf
cmp
int3
lret
or
aad
cmpsl
dec
fmull
ss
jae
xorl
pop
jo
xchg
incb
mov
iret
sub
push
xchg
out
sbb
int
in
xchg
sub
mov
adc
xor
pushf
lret
iret
xor
pop
scas
stos
xlat
xchg
push
outsb
loop
mov
sub
jecxz
xchg
iret
insl
arpl
cli
or
dec
cli
aaa
xchg
mov
mov
arpl
sub
xor
mov
pop
pop
lods
mov
aas
out
subl
rdpmc
mov
cmp
aaa
je
cmp
cmp
pop
adc
fxam
aad
sub
mov
enter
and
sub
add
mov
or
int3
add
cltd
add
mov
sub
test
jg
das
pop
outsb
push
aam
ficoml
add
adc
daa
and
mov
int3
jo
stos
sbb
inc
jmp
pop
push
and
dec
jmp
cmpsb
jle
hlt
mov
jae
aad
ja
dec
inc
iret
xchg
jns
dec
divl
ficompl
mov
push
adc
test
xor
xor
icebp
pop
inc
cmpsl
shrb
negl
dec
pushf
rorb
rorb
popa
popa
nop
mov
jle
xchg
fldl
les
sbb
es
sbb
test
mov
xor
fcmovbe
in
int
out
cmp
cmpsl
ljmp
fs
cmpsb
aad
mov
outsl
jmp
imul
popa
rcrl
cmp
jbe
mov
in
or
imul
fisubl
push
fcom
lods
into
es
test
inc
fst
push
outsb
lock
pop
test
xor
es
ret
dec
sub
adc
adc
push
push
adc
lret
ds
cmpsw
test
jmp
jae
adc
xor
fdivrs
cli
pop
pop
mov
pop
lock
push
ss
addr16
mov
int
sbb
xchg
sub
jae
push
in
icebp
loope
sbb
inc
xor
fisubl
pushf
movsb
add
jecxz
sub
hlt
jmp
loope
sbb
or
test
int3
in
outsl
pop
mov
dec
iret
and
aas
mov
out
jne
xor
ds
in
jle
xor
xchg
fcoml
movsb
ds
pop
clc
in
aad
xchg
sbb
test
cmp
shl
lock
lcall
ret
cmp
inc
loope
in
fs
loopne
jne
and
leave
jmp
xchg
pop
jns
ljmp
fists
cmp
cmp
ds
cmc
movsl
sub
and
cmp
sbb
jns
mov
or
fnsave
mov
jecxz
mov
pop
dec
push
repnz
pop
xchg
pop
imul
mov
mov
xchg
js
hlt
push
sub
push
mov
lods
dec
les
ret
jb
xor
into
mov
jnp
fisubl
fsubrl
or
ficoms
jecxz
mov
adc
push
popa
xor
sbbb
cmp
repnz
hlt
or
push
mov
jae
in
rcrl
sbb
xor
xor
stc
loopne
ret
mov
xchg
push
lods
sub
das
subl
shll
xor
cmp
repz
inc
lahf
in
inc
mov
lret
cmpsl
call
sub
xchg
fistl
sbb
rcrl
or
adc
rol
test
adc
push
test
and
lods
stc
outsl
mov
mov
cmc
aam
test
cwtl
sbb
aad
or
push
jmp
jmp
insb
xor
push
xor
cwtl
dec
mov
pop
clc
xlat
sbb
and
mov
fimuls
jmp
sub
lds
inc
ja
or
aam
imul
call
cmp
mov
lock
cmp
test
aad
inc
rcl
sbb
pusha
mov
nop
sarl
dec
js
sub
mov
js
mov
or
pop
mov
sbb
popf
les
add
jp
gs
stos
mov
push
mov
xchg
mov
arpl
rorb
fcoml
jp
mov
sub
fcmovnbe
shlb
movsl
push
mov
xorl
pop
push
pop
sub
in
or
push
test
dec
out
cwtl
into
aas
xchg
ja
inc
int
mov
aaa
call
test
fnsave
aam
in
aas
jmp
mov
testl
push
xchg
sbbb
mov
js
daa
lods
stc
or
das
inc
aas
les
mov
in
pop
repz
ja
jno
pop
mov
fildll
mov
sbb
mov
mov
jg
arpl
nop
fisttps
or
stos
in
mov
out
push
mov
loopne
lret
js
out
inc
jmp
shl
mov
xchg
jbe
mov
push
push
jo
cs
pop
cmpl
dec
stos
gs
icebp
sub
test
enter
mov
stos
and
std
pushf
jo
pop
cld
jo
call
add
jle
das
shrb
mov
and
and
mov
out
orl
cli
jns
data16
outsl
in
mov
sub
stos
loopne
push
hlt
test
outsl
xor
repnz
push
sbb
fcoms
ljmp
call
push
mov
add
roll
adc
mov
mov
sub
adc
xchg
mov
cli
mov
pop
cmp
pop
lock
and
rol
int3
loope
cmp
es
mov
push
jns
push
enter
ret
sets
inc
aam
push
jle
data16
imul
pop
lahf
or
jp
or
inc
ret
push
lret
pop
ja
stos
ret
jp
cs
push
add
ja
dec
out
call
mov
rcrb
and
sbb
aam
movsl
xor
insb
add
xchg
stos
cmp
gs
pop
mov
in
mov
jne
dec
lea
jle
popf
mov
push
shlb
push
push
int3
jns
dec
sub
pop
in
cwtl
xchg
fsubp
out
movsb
adc
pop
mov
fdiv
mov
dec
sbb
ljmp
insb
inc
inc
adc
out
push
hlt
sub
sub
fcoml
xlat
pop
test
jnp
inc
mov
and
push
cmp
mov
adc
xlat
fmul
es
imul
push
or
adc
xchg
mov
dec
mov
jp
ffree
fs
std
repnz
into
inc
sarb
clc
mov
cld
and
mov
mov
xchg
mov
cwtl
mov
stos
repnz
cmp
pushf
popf
adc
cli
mov
decl
fisubl
mov
jbe
adcl
repz
out
pop
cmc
xor
add
loop
aad
dec
iret
gs
int
mov
out
jl
inc
cmp
out
hlt
jb
int
push
push
sbb
inc
insb
out
pop
push
add
sub
jecxz
lods
aaa
rep
stos
les
jle
icebp
push
cltd
pop
pop
inc
inc
aaa
loopne
test
lea
test
jmp
mov
mulb
ljmp
or
xlat
fsubrl
mov
mov
xor
inc
push
ss
fildl
gs
add
jno
call
scas
mov
mov
icebp
ss
cwtl
sbbb
leave
sub
sub
mov
cs
and
jg
lods
jecxz
ljmp
pusha
div
leave
inc
xor
sbb
jb
pop
dec
push
xchg
popf
jb
leave
aam
in
inc
dec
push
push
clc
xlat
mov
push
test
push
xchg
jnp
sub
rcl
mov
add
call
mov
mov
adc
adc
and
adc
repnz
lcall
icebp
out
out
out
ficoms
adc
out
xor
jmp
iret
repz
push
dec
jbe
mov
xchg
outsl
mov
stc
jae
push
rorb
cmp
out
pop
stos
cld
out
mov
test
xchg
or
and
inc
cmc
notb
subl
movsb
sbb
add
daa
or
lods
xor
and
fcomps
adc
mov
ja
sti
shrl
xor
das
xchg
stc
pop
pop
adc
jl
dec
jnp
sti
mov
in
out
addr16
ja
mov
into
push
or
sar
mov
mov
fwait
push
jb
arpl
xor
cmc
mov
sbb
test
dec
jno
inc
hlt
mov
popa
adcl
jnp
in
pop
pop
mov
inc
std
inc
scas
inc
pop
scas
popl
dec
mov
repnz
fimull
jno
jge
test
iret
jmp
adc
cmp
and
pop
insl
imul
outsb
inc
ret
scas
pop
jo
mov
pop
loopw
mulb
loope
xor
pop
and
mov
and
pushf
scas
fs
into
xor
jecxz
int3
cmp
sarb
pop
dec
xchg
xchg
test
mov
xchg
cmp
popa
in
sub
xchg
cltd
mov
not
jbe
ds
inc
mov
daa
and
sahf
jg
sub
andb
cmp
push
xor
daa
movsb
popa
cmp
nop
in
and
lea
pop
inc
lahf
mov
xor
lock
fcomi
test
add
mov
sub
dec
in
sbb
push
js
or
jnp
push
idiv
sub
ja
inc
jecxz
jle
in
push
jo
push
out
mov
mov
inc
mov
sub
test
add
movsb
or
js
sub
inc
shl
mov
es
dec
dec
push
mov
hlt
jbe
cs
aaa
imul
ret
in
pop
jecxz
imul
mov
push
inc
adc
out
pop
push
insl
cmp
xor
and
mov
ljmp
cmp
dec
in
mov
scas
inc
push
fisttps
loope
adc
test
sbb
js
or
mov
xchg
mov
pop
pop
push
sbb
dec
xchg
ficoml
sahf
popa
out
paddsb
addr16
aaa
in
in
lcall
and
aaa
test
dec
pop
ret
stos
add
into
lcall
ds
pop
test
xor
lea
mov
sahf
inc
mov
xchg
cld
ret
sbb
jbe
sub
pop
mov
sub
es
mov
mov
jnp
imul
repz
push
mov
dec
pop
push
xor
mov
adc
inc
ficoml
cmpb
insb
mov
mov
loop
push
leave
mull
iret
imul
loopne
addr16
xchg
sub
pop
ja
gs
inc
lahf
jmp
or
hlt
in
mov
xor
pop
xor
dec
push
jo
xchg
insb
push
sub
add
daa
int3
enter
cwtl
mov
or
xchg
andl
movsb
add
add
fcmovnu
cwtl
aam
dec
lret
pushf
push
lret
repz
scas
movsb
enter
lcall
sahf
dec
int
add
loope
fdivp
and
into
cs
pusha
data16
push
cmpsb
jnp
fstpt
lahf
pop
mov
pop
dec
aas
inc
lcall
js
lock
rclb
add
mul
sbb
inc
mov
push
add
push
dec
adc
pop
mov
loopne
pop
mov
fiaddl
cmc
xor
and
loopne
shl
jae
pushf
jne
jb
jo
mov
jmp
mov
jmp
mov
adc
pop
mov
sti
rcrl
and
sub
mov
mov
shll
dec
hlt
mov
xchg
jg
les
cwtl
inc
mov
aas
add
out
mov
inc
out
fcmovnu
stos
add
ret
cmp
cmp
adc
sub
or
jne
clc
ret
xchg
faddl
insb
ret
pop
out
cmp
loop
enter
sbb
xlat
aam
jae
mov
xchg
adc
adc
fwait
pop
jo
mov
dec
and
or
into
sub
popl
pop
popf
push
inc
lcall
xchg
imul
fcmovu
hlt
outsl
stc
ss
sarl
lahf
mov
push
sete
push
orb
jp
mov
inc
lret
inc
in
jns
iret
sbb
mov
rolb
jmp
adc
mov
in
mov
fcmovne
sbb
push
stc
xchg
insb
ret
outsb
popl
push
push
inc
xchg
stos
sar
push
aas
rolb
xor
adc
dec
mov
jg
fwait
pusha
jmp
cmc
sbb
arpl
nop
and
ds
outsb
leave
ss
push
cltd
xchg
xor
jg
pop
repnz
std
sub
std
in
testl
cmp
push
test
xchg
mov
lret
cvttps2pi
or
push
adc
mov
add
das
mov
and
pop
inc
mov
pop
mov
daa
push
jge
les
jmp
jne
stc
or
out
movsl
sub
stos
lods
addr16
mov
pop
pop
mov
add
xchg
inc
inc
fstps
aaa
cmc
out
mov
jno
and
ficompl
scas
arpl
and
inc
jg
cltd
cld
icebp
fstpl
fwait
std
movsb
and
adc
out
aaa
xor
test
sub
into
or
and
mov
ss
sbb
lods
dec
pop
fiadds
lret
scas
aaa
imul
xor
add
inc
lds
fidivrs
fwait
push
or
ret
ret
test
xor
push
stos
sub
data16
cs
daa
add
pusha
lock
shll
fcomi
xchg
inc
jge
mov
push
sbb
ja
push
push
aam
xor
scas
xlat
stos
add
test
push
test
cmpsl
mov
dec
loopne
sub
sub
xchg
sbb
scas
pop
pusha
jg
jl
add
inc
xchg
adc
fucomi
xchg
mov
xor
sahf
inc
push
xchg
sbb
add
dec
adc
fisubrl
cwtl
sub
inc
push
outsb
bound
or
or
shlb
sti
mov
mov
lods
xor
stos
pop
mov
xchg
loopne
cld
stc
movsb
or
push
jne
and
fsubrp
mov
mov
bound
push
int3
fildl
cmp
or
cmp
add
int3
xor
mov
jge
aas
mov
adc
xor
rdtsc
mov
in
mov
pop
pop
mov
inc
or
mov
test
inc
inc
pop
jo
shlb
xor
rolb
sub
pushf
loop
push
mov
inc
int3
add
add
adc
es
sarl
test
and
outsl
xor
int
pusha
dec
sub
aad
pop
out
dec
adc
les
pop
inc
jne
push
dec
jae
cmp
mov
or
aam
btr
dec
cmpsl
jnp
or
cli
push
sbb
movsb
int
pop
in
js
cli
stos
mov
fldt
jb
pop
xor
push
rcr
jecxz
pushf
dec
popf
sub
and
pop
or
push
cltd
mov
dec
sub
cmp
lahf
out
xchg
mov
inc
sti
enter
or
cwtl
notb
in
lcall
je
lcall
mov
mov
addb
xor
fst
movsb
ljmp
aas
mov
fldl
aaa
in
lods
mov
xor
pushf
roll
loope
loop
cmp
stc
xorl
aaa
pushf
push
scas
fs
testl
hlt
pop
sarl
in
xchg
pop
mov
imul
inc
xor
imul
ss
jnp
pop
sbb
lcall
into
cli
mov
or
les
pop
insb
sbb
rcr
dec
fsubs
jb
jmp
popa
into
mov
fcmovbe
sbb
push
push
fwait
push
adc
test
mov
sub
xchg
dec
jge
jnp
xchg
stos
or
push
sbb
imul
jmp
sub
xchg
aas
insb
subb
and
std
push
push
out
scas
arpl
pop
xchg
cmpsb
pop
jl
les
fcoms
inc
mov
add
mov
nop
xchg
shrl
call
orb
sub
std
mov
fisubs
rol
test
dec
icebp
and
divl
jge
in
stos
xor
inc
lcall
mov
pop
push
and
or
pop
mov
leave
jo
scas
pop
xchg
fistl
sbb
or
cmpsl
mov
loope
rol
roll
cmc
sbbl
cmp
rol
fcomps
mov
xor
sub
not
shl
mov
adc
imul
sbb
or
sbb
roll
and
sbb
cmp
gs
adc
rorl
xchg
int
test
mov
nop
jne
mov
loopne
and
insb
xchg
test
push
lret
testl
mov
fildl
repz
in
pop
sar
sub
arpl
push
aaa
push
inc
push
pop
fnsave
pop
xor
cmp
cmc
mov
or
sbb
decl
cltd
lods
movsb
out
jnp
cmp
push
cmp
jno
mov
inc
pop
push
imul
jl
jl
cmp
xor
mov
xor
sahf
decl
xlat
mov
adc
push
orb
mov
or
add
ja
jl
in
and
imul
in
push
sub
sub
fsub
xor
jg
xor
or
or
sbb
dec
mov
int3
arpl
jp
push
add
das
aaa
jae
mov
cmc
cltd
dec
sub
mov
mov
lcall
imul
sbb
sub
pusha
adc
rorl
arpl
repnz
pusha
outsl
xor
xchg
lret
sbb
lcall
inc
sbb
pop
pop
mov
pop
ficoms
filds
push
sti
push
mov
mov
adc
adc
mov
in
add
xor
out
or
mov
xor
mov
repnz
imul
dec
mov
ret
mov
jl
divb
inc
iret
lea
push
lods
adc
test
mov
pushf
scas
fbld
push
push
lock
mov
push
push
movsl
cmp
filds
sbb
shlb
test
daa
sbb
push
js
aad
sub
shlb
push
lea
pop
mov
nop
adc
insb
mov
jbe
jmp
ja
push
dec
lock
cmpl
sahf
push
xor
xor
pushf
cmp
or
arpl
data16
popf
sar
test
jl
xchg
mov
mov
or
push
ss
and
cmp
ffree
mov
inc
pop
ljmp
mov
repz
hlt
xor
cld
push
test
sbb
xor
std
push
cmp
clc
mov
push
or
sti
iret
rorl
movsb
lcall
mov
cwtl
and
dec
fmull
stc
icebp
jns
or
inc
loop
das
sub
jns
or
sub
fcompl
xchg
pusha
dec
jnp
inc
cmpsl
nop
cwtl
jb
test
ss
push
xchg
pop
inc
sub
add
mov
mov
fisttps
arpl
xor
pop
stos
sahf
rorl
mov
cmc
aas
mov
and
and
subb
subb
and
inc
pop
flds
fsts
and
int
call
cmpl
fistpll
rorl
inc
enter
sbb
ss
jb
pop
ret
pop
or
stos
sub
iret
fs
jge
ficomps
jmp
rcll
hlt
adc
popw
aaa
mov
mov
out
mov
xchg
xchg
mov
iret
push
push
ss
out
xchg
in
or
popa
les
mov
mov
xchg
fdivr
push
sbb
push
jg
hlt
call
adc
sbb
dec
jbe
in
addr16
imul
aas
cmp
dec
jo
pop
movsb
xor
adc
xchg
push
insb
adc
mov
sahf
js
xchg
sarb
movsl
mov
add
lock
jns
cmp
popa
dec
lret
push
or
mov
mov
cmp
incb
mov
ret
jp
push
push
mov
outsl
mov
lods
call
in
xor
push
hlt
xadd
jmp
sub
mov
fildl
adc
cmpsl
mov
mov
cltd
fwait
mov
pop
imul
sbb
pop
cmp
and
mov
aas
push
icebp
add
mov
popa
mov
int
lcall
sets
and
insl
fwait
in
cmc
sbb
mov
lods
fimull
add
mov
jge
sub
jns
fcmovb
sbb
dec
aam
out
scas
xlat
insl
dec
push
mov
xchg
addr16
int
add
sbb
mov
and
xchg
in
adc
jecxz
sub
jle
xor
in
mov
add
loop
aad
mov
sub
mov
or
cmp
and
dec
add
jne
cmp
xor
and
xchg
lods
mov
ss
push
sub
adc
sub
add
divl
aas
fptan
addl
scas
dec
push
shll
roll
push
jb
out
stos
jne
mov
ljmp
xchg
dec
push
outsb
sub
mov
add
xchg
or
xor
push
lds
mov
jo
mov
daa
shl
pop
pop
cwtl
jo
mov
movsl
adc
inc
pop
divb
outsb
xchg
fstp
xchg
add
cmp
dec
in
fs
cmp
pop
inc
sbb
xchg
and
hlt
std
sub
ret
pop
sub
leave
mov
sub
dec
in
push
stc
daa
imulb
adc
jbe
pusha
push
jne
jecxz
cmpl
fdivs
aam
cmc
jp
dec
and
shl
pop
mov
call
test
gs
mov
gs
sub
sarl
das
sarl
iret
push
jnp
push
inc
nop
or
filds
mov
jmp
call
or
sti
push
out
add
jbe
and
je
push
sub
frstor
push
shl
jl
jnp
cmp
stos
loop
jne
iret
xor
sub
xchg
lods
pop
gs
shlb
ds
jne
lahf
mov
mov
sub
push
addb
inc
cmp
mov
push
push
push
pop
mov
pop
test
aam
sbb
jp
loop
add
push
cli
insl
sub
sub
cmp
stos
gs
push
scas
in
dec
xor
mov
fcompl
push
pusha
inc
int3
repnz
or
mov
repnz
repz
gs
int3
movsl
jne
inc
push
test
ds
mov
push
into
jnp
pop
into
adc
scas
movsb
xor
pop
imul
cmpsb
fsubrl
dec
sub
sti
pop
inc
hlt
xchg
jle
push
stos
je
xor
int
popa
out
out
insl
ss
out
or
popf
scas
xchg
pop
push
and
or
imul
stos
jmp
leave
loopne
lcall
xchg
adc
xchg
nop
jae
push
adcb
ret
mov
mov
push
push
adc
sbb
shrl
pop
das
inc
jnp
lock
push
push
in
ret
pop
in
scas
ja
shll
sti
in
cs
dec
pusha
jns
push
sbb
inc
imul
in
clc
xchg
xchg
in
mov
pop
rol
sbb
cmp
pusha
imul
ret
add
dec
aaa
jo
aaa
mov
nop
sbb
fstl
int3
xor
or
daa
jle
fwait
lods
jmp
std
lret
mov
jne
out
int3
imul
les
mov
sbb
addl
movsl
stc
mov
lretw
pop
in
sahf
jp
pop
movq
test
cltd
in
xor
xchg
mov
mov
add
pop
cmp
cmp
sbb
mov
pop
sti
imul
cmp
inc
jl
je
mov
cltd
out
in
cmp
push
clts
dec
xlat
insb
cli
adc
pop
adc
pop
mov
stc
jno
adc
mov
scas
popf
stos
loope
vmovlpd
dec
dec
jl
jnp
lahf
orl
sub
bound
ficomps
push
sbb
mov
mov
ret
pop
add
insb
das
push
or
gs
mov
imull
pop
or
dec
jo
mov
arpl
mov
fwait
push
imul
mov
sbb
mov
pop
mov
imul
sbb
repz
mov
add
shll
dec
push
sub
notl
stc
ljmp
mov
fsubr
cmp
xchg
fwait
or
enter
pop
dec
add
adc
test
test
iret
inc
mov
push
cli
adc
dec
aaa
pop
cmp
xchg
push
pop
xchg
add
imul
dec
and
js
popf
adc
stc
inc
fs
cmp
or
ja
inc
cltd
in
and
cwtl
in
lcall
inc
cwtl
fldl
mov
loope
loop
inc
ret
jne
and
popa
push
xor
gs
fnstenv
dec
inc
xchg
jmp
ss
in
test
stos
shrb
shlb
mov
in
leave
push
mov
pop
and
and
push
cmp
es
or
cltd
mov
xchg
and
cmp
imul
pop
int3
dec
cltd
and
mov
pop
inc
push
nop
pushf
testl
xchg
mov
mov
sub
pop
aas
fnstcw
mov
movsl
sub
mull
lret
movsl
clc
dec
daa
mov
les
fstps
pushf
sbb
scas
push
dec
lods
dec
push
sti
mov
sbb
add
jnp
mov
adc
jno
adc
fcmovnbe
mov
popa
mov
cmpsb
add
test
shrl
xor
or
cmp
out
and
xor
adc
jle
sub
shrb
leave
pop
and
rorl
cmpsb
sbb
adc
rorb
int
pusha
ja
lea
add
sub
dec
in
mov
cmpsl
lds
scas
es
push
pop
scas
mov
or
push
daa
push
outsl
mov
mov
mov
in
loop
lret
sbb
clc
mov
cmpsb
pop
sbb
rcll
cwtl
push
pop
lret
outsb
cmp
cs
frstor
int
inc
sbb
ljmp
push
iret
pop
imul
outsl
aaa
ljmp
mov
out
popf
fistps
lods
repnz
cmp
xor
ja
fildl
sti
dec
push
jge
mov
jo
jl
mov
push
icebp
or
push
shll
jmp
sbb
popa
mov
jnp
inc
gs
or
jp
stos
popa
insb
push
mov
scas
fldl
pushf
push
sub
cmp
das
sbb
or
popf
mov
inc
and
outsb
hlt
mov
mov
movsl
sbb
mov
xchg
and
pop
daa
mov
lock
cmp
cmp
add
mov
push
insb
cli
mov
adc
stos
daa
jmp
rcrb
sub
inc
cmp
cwtl
push
mov
js
inc
or
lahf
mov
inc
adc
cmp
aad
and
push
out
xlat
mov
inc
mov
sbb
arpl
inc
idivl
icebp
es
inc
push
fs
xchg
or
jbe
sub
and
or
inc
xorb
add
mov
pusha
xlat
movsb
jmp
jecxz
pop
in
in
bound
and
mov
mov
inc
andb
jb
dec
pop
es
mov
test
test
push
nop
cmp
inc
prefetch
or
push
frstor
add
orl
mov
and
cmpsl
movsb
mov
mov
test
aad
push
dec
popf
leave
lods
cs
sub
daa
inc
mov
and
shrl
xchg
lret
pop
push
push
icebp
test
sbb
mov
inc
mov
stos
add
xor
add
ja
daa
push
addr16
mov
pop
inc
push
or
repnz
ja
add
nop
dec
testl
cmp
adc
outsb
lods
sti
pushf
outsl
inc
mov
lahf
pop
cmp
push
imul
ret
pop
push
jp
sbb
ret
mov
jbe
cmp
mov
movsl
jg
xchg
out
xchg
call
jns
lods
xor
sub
loopne
hlt
movsb
jecxz
je
xor
jmp
pusha
cmc
cmp
pop
adc
pop
pop
jmp
js
xor
xchg
cmp
outsb
fidivrl
cmp
leave
mov
loop
pop
push
aaa
fsubr
fdivr
jne
mov
sub
mov
enter
cmp
sahf
jae
inc
cmpsb
in
mov
add
cmp
push
imul
mov
adc
xor
cmp
fwait
lods
pusha
clc
cmpb
push
mov
femms
inc
jne
mov
or
mov
or
sbb
xchg
movsb
js
pop
inc
fucom
das
ss
mov
daa
adc
sbb
jb
push
mov
lea
xchg
movsb
clc
dec
int3
js
lret
loope
bound
sub
inc
xchg
cmp
dec
sbb
push
dec
cmp
sbb
aad
and
rcrl
arpl
aaa
pop
imul
iret
lods
ds
icebp
and
jecxz
jecxz
js
insb
xor
sub
cmp
jp
mov
test
cmpxchg
int3
cmp
test
dec
movl
into
fnstcw
mov
je
incb
and
shrl
mov
lock
scas
xchg
in
and
test
push
push
gs
pushl
push
je
inc
mov
cwtl
push
inc
lds
push
outsl
negl
cmp
add
inc
mov
fisubrs
dec
or
je
sbb
mov
add
insb
add
mov
push
cmp
in
sbb
insb
ds
mov
daa
int
addr16
pop
xchg
adc
push
out
pushf
sub
mov
lret
sub
fsts
rcrl
ds
ljmp
xchg
incl
insb
jle
mov
std
jbe
out
fldl
fbstp
and
mov
mov
cmc
mov
and
xor
arpl
sub
bound
outsb
gs
mov
cmpsl
jle
cmp
mov
aas
lahf
mov
ljmp
inc
in
incl
fistps
loop
mov
or
es
sub
and
push
cmpsb
imul
pushf
xchg
cli
dec
repnz
or
scas
xor
or
aas
sbb
lret
or
lcall
mov
add
in
add
pop
pop
notl
rorb
sarb
add
addl
aaa
and
lods
mov
testl
out
and
les
fstl
dec
sbb
in
stos
xchg
and
movsl
xlat
loop
shll
and
test
pop
movsl
mov
insb
imul
jg
push
mov
jmp
add
dec
repz
in
dec
nop
dec
das
aas
in
into
add
mov
xchg
ds
aad
sub
pop
leave
adc
mov
mov
ss
fsubrl
or
jne
dec
ljmp
bound
xchg
pop
pop
jo
loop
aad
inc
xor
imul
jg
cmp
fsubs
add
or
push
lds
shrl
push
pushf
or
int3
fsubr
int
sti
pop
mov
pop
daa
mov
mov
adcb
loop
adc
lcall
notl
loopne
imul
je
hlt
sbb
push
jge
dec
cwtl
pop
inc
outsl
fcmovne
pop
sbb
ret
add
repnz
sbb
test
dec
and
daa
test
jg
stos
pop
cmp
lahf
xchg
sbb
pusha
cs
push
rcl
cmpl
pop
fs
mov
mov
fcomps
sbb
xchg
xchg
lea
push
push
xorb
mov
cld
jbe
clc
cmpsb
fisubs
xor
dec
jle
fcoml
outsb
mov
in
inc
out
lock
inc
lods
xchg
cmp
mov
sub
dec
mov
pop
push
or
dec
xchg
into
xchg
es
lods
sub
mov
data16
int3
sbb
in
jle
jg
shlb
xor
jno
les
out
and
cmpsl
pop
in
movsb
adcb
pop
sub
int
mov
dec
sub
mov
loopne
stc
shr
scas
fs
out
decb
cltd
loopw
mov
leave
add
or
loop
pop
xchg
and
shl
gs
xchg
fstps
cmp
pop
iret
add
push
fs
outsb
add
stc
pop
pop
in
inc
jbe
ja
xchg
addr16
jo
xchg
lods
jbe
outsl
jo
mov
out
scas
lret
or
xlat
dec
jmp
imul
popf
int3
in
or
dec
daa
dec
xchg
shrl
jmp
out
repnz
push
dec
loope
clc
out
in
or
pop
cmp
insl
movsb
pop
xchg
push
cmp
sub
out
out
stc
xor
adcl
sbb
in
push
pop
in
orl
sub
inc
fcoms
lds
je
sub
lock
xchg
movsl
js
or
add
scas
or
pop
push
sbb
mov
push
xlat
push
test
movb
lods
fcmovnbe
shll
cltd
cmc
lock
into
push
inc
sar
add
dec
aad
adc
loopne
xchg
out
lret
or
add
or
dec
loop
mov
movsl
ret
xor
xor
push
loope
cmpsb
adc
mov
fidivs
jecxz
mov
fmull
fiadds
jns
inc
test
or
outsl
cld
jns
jle
dec
stos
out
lock
sbb
gs
lahf
and
xor
inc
pop
cmp
les
outsl
clc
dec
mov
xor
sub
cmpb
xor
addl
dec
sub
inc
das
call
jge
clc
or
mov
mov
adcb
adc
jg
xchg
xorb
iret
dec
int
mov
pop
loope
jb
jecxz
push
xlat
dec
lcall
ss
loope
and
jmp
pop
and
jl
sub
rorl
jae
xor
sbb
jmp
lret
aad
les
movsb
sbb
jg
jecxz
jle
sub
leave
rolb
es
mov
push
and
sahf
mov
aaa
popa
jne
mov
pusha
add
xorl
pop
ljmp
ficompl
mov
mov
jbe
add
icebp
adc
jae
lcall
test
adc
jmp
out
ret
ds
xor
sub
test
je
or
cmpsb
test
xor
imul
push
insb
stos
pop
xchg
or
jne
sti
call
mov
xchg
jno
mov
popa
inc
into
jmp
adc
xchg
dec
sti
pop
xchg
inc
icebp
mov
cmc
push
mov
cmp
cmpsb
push
mul
cmp
xor
mov
fldl
addb
push
jnp
dec
sub
out
push
jle
dec
cmp
mov
dec
mov
fmuls
sub
xor
loopne
cltd
push
ljmp
adc
add
jl
push
push
stc
xchg
shrl
mov
mov
xchg
sbb
scas
mov
outsb
clc
lods
aad
call
lds
jecxz
movsl
or
pop
or
or
cmp
lock
js
dec
pop
mov
cmpsb
repnz
testb
push
arpl
fcmove
and
decb
cltd
mov
lcall
mov
mov
jge
out
int3
jmp
pushf
pop
push
add
std
pop
and
call
jg
mov
lea
ret
addr16
pop
jp
gs
mov
aas
stc
sub
daa
jle
or
pmuludq
or
fs
inc
mov
lea
leave
adcb
pop
cwtl
fwait
and
fs
popa
out
sbb
cmp
aas
mov
dec
or
fnstcw
fnstsw
lret
ljmp
jbe
fsts
xchg
movsb
xchg
cwtl
shrl
jbe
rorl
add
add
cld
loop
shl
fistpll
mov
sti
test
jp
xchg
sarb
fbstp
lods
bound
insl
mov
enter
in
inc
or
fiadds
jp
pop
cmpsl
lret
fcoms
insb
push
decb
popa
xchg
push
iret
je
dec
mov
jne
sbb
add
and
outsl
gs
sub
xor
dec
sub
lahf
jle
stos
loope
fwait
arpl
mov
scas
sub
lret
fadd
jg
rcll
jbe
xchg
jnp
push
xor
dec
sarb
sti
sahf
jmp
sub
push
push
jecxz
inc
mov
jg
mov
dec
aaa
xchg
mov
pop
int3
pop
mov
sub
cmp
jbe
lcall
and
add
lods
xchg
cmp
arpl
out
adc
cmp
mov
hlt
mov
cmc
mov
xchg
jbe
and
xchg
addb
cli
mov
push
mov
in
jg
ret
orl
shrl
hlt
popf
les
fildl
add
fidivs
mov
cmpsb
ret
inc
pop
int
dec
sub
sarb
lock
cmp
jb
pop
daa
push
lea
jle
add
sub
jns
xchg
mov
mov
mov
mov
daa
cmp
and
adc
sar
mov
pop
stos
out
scas
aaa
xlat
push
mov
dec
push
cmpsb
xor
cltd
add
or
mov
icebp
lock
sub
jns
xchg
nop
pop
push
jmp
rcrb
leave
mov
int
add
dec
push
sbb
leave
or
das
das
add
mov
mov
scas
and
add
fisubrs
ret
out
inc
xor
out
pop
and
repz
outsl
dec
mov
xor
sub
lcall
stos
adc
pop
push
sub
sub
inc
mov
xor
loopne
inc
xchg
lods
mov
pop
in
xor
push
or
or
adc
aas
mov
inc
add
and
or
xor
insl
ds
mov
mov
scas
lea
xor
inc
jne
mov
movsl
sbb
sub
xor
addl
imul
iret
push
lods
inc
std
lea
xchg
or
jb
js
xchg
inc
mov
sub
test
add
das
push
inc
lahf
jmp
xchg
es
xor
ret
sarb
in
idivb
outsl
inc
fmull
leave
rolb
inc
and
lcall
mov
loopne
sti
mov
aaa
lea
insl
and
sbb
xchg
and
movb
xchg
mov
xor
ret
or
mov
ss
pusha
cmpl
dec
mov
sbb
and
sub
push
jbe
jnp
mov
aas
or
fnstenv
adc
imul
loope
or
js
and
stc
out
aas
icebp
and
pop
push
je
cmpsl
and
adc
add
inc
fstpl
jecxz
mov
sbb
daa
push
sahf
and
sbb
jle
mov
cmp
sbb
xchg
into
mov
and
lret
dec
movsl
mov
mov
fsubl
cmp
jge
and
outsb
mov
daa
jb
into
pop
xchg
inc
int
and
inc
cmp
out
push
insl
ds
imul
fincstp
push
sub
push
cmp
xchg
lock
test
clc
xor
jmp
arpl
sti
adc
mov
and
pop
pop
les
push
cwtl
shl
ret
mov
mov
in
push
fisttpll
adc
mov
cmp
add
std
data16
dec
data16
mov
insb
into
sub
jecxz
fisubl
aam
dec
mov
fs
les
popl
mov
or
mov
pop
insl
mov
jle
pusha
sbb
add
push
add
inc
cmp
adc
mov
mov
inc
mov
popf
push
cmp
and
inc
rcrb
fsub
bound
loop
sub
out
fdivrp
cli
mov
rcll
insb
pop
cmp
call
sub
xchg
mov
cmp
fisubl
cmp
push
inc
scas
pop
push
mov
and
fldcw
jb
jno
pop
dec
adc
cmp
out
push
daa
pop
inc
lret
test
popa
stos
pusha
std
mov
imul
leave
mov
jo
arpl
jns
mov
push
pushf
lcall
arpl
xchg
test
lret
imul
rol
insl
adc
cli
enter
cmpb
inc
bound
je
negl
dec
cmc
ret
add
xlat
loope,pt
lods
rclb
test
pop
stc
xchg
out
cmpsl
inc
testl
dec
dec
push
mov
xor
mov
cwtl
test
mov
cmp
lcall
lret
pop
jmp
push
jo
lock
sub
es
daa
cmp
mov
jo
ds
test
dec
scas
pusha
push
lret
xor
jl
mov
xchg
push
push
lods
inc
sub
int
xchg
and
fcmovnbe
and
popf
es
inc
and
mov
pop
pop
lods
push
mov
sar
popa
cmp
dec
lahf
icebp
aad
pop
and
inc
jb
and
dec
mov
inc
rclb
lret
or
adc
pushl
pop
jp
lret
inc
xchg
cld
fwait
mov
test
loopne
sbb
push
xor
stos
shrb
imulb
add
es
lahf
rcrb
jne
test
adc
sti
mov
pop
push
test
mov
rcll
lock
add
sbb
adc
push
mov
mov
mov
jmp
sar
dec
scas
out
call
rcr
fistpl
je
outsb
inc
sub
outsl
js
shrl
add
rcl
imul
in
icebp
pushf
int3
or
nop
adc
push
sub
sub
mov
ss
js
jp
adc
mov
mov
mov
loope
roll
sbb
xchg
push
ret
xlat
daa
xchg
icebp
dec
mov
cltd
inc
mov
add
cmp
cld
inc
mov
sbb
pusha
rorb
add
add
jbe
xor
nop
adc
mov
add
popf
dec
xchg
cwtl
fstpt
gs
gs
lods
dec
shrb
cmpsb
fwait
imul
sbb
or
cli
mov
push
and
mov
xchg
sti
xchg
add
daa
fcomps
jb
add
push
pop
xor
cld
outsb
mov
and
enter
mov
ja
sbb
adc
jl
push
and
mov
movsl
aam
xchg
sub
or
and
mov
dec
xor
jge
loop
shrb
test
sub
push
jns
mov
xchg
ja
and
xchg
mov
addr16
cmpsb
mov
inc
mov
stos
and
dec
pop
out
xlat
ljmp
xchg
fwait
sub
enter
loopne
jl
outsl
or
bound
mov
mov
and
fisttpll
ja
xchg
dec
push
outsl
xor
push
cltd
dec
pop
push
test
sti
cmp
adc
in
test
mov
jne
sub
div
adc
cmp
es
pusha
orl
pop
inc
xchg
xor
mov
cltd
push
adc
pop
mov
enter
fsubl
dec
cmp
test
cmp
and
aaa
clc
cld
push
mov
sub
scas
sub
or
clc
mov
dec
add
sub
mov
mov
pop
xchg
pop
cmp
push
test
mov
std
push
enter
and
or
sub
insl
rolb
jmp
or
mov
jnp
sub
mov
jb
mov
dec
dec
jnp
and
icebp
push
movd
inc
cld
fisubrs
stc
cmc
imul
popl
mov
pop
fcom
mov
add
aas
jbe
fcmovu
xchg
xchg
add
fcompl
adc
push
pop
cmp
lods
cmp
xor
scas
mov
adc
jnp
cmp
mov
or
and
mov
arpl
jl
in
arpl
fs
and
mov
and
ficompl
xchg
pop
insl
repz
sarb
jge
sub
icebp
popf
sbb
jae
jge
scas
adc
xor
push
sub
lcall
dec
mov
add
xchg
out
xchg
stos
sbb
xchg
ret
xor
jo
add
insl
test
cmpb
bnd
mov
jp
in
sbb
push
arpl
sub
lods
decb
push
enter
sbb
pushf
xor
sub
ret
ficoml
ret
in
push
sub
scas
lods
and
push
movsb
and
int
fld
jae
out
mov
dec
cmp
enter
pop
mov
int3
testb
sbb
idiv
cmp
push
xchg
dec
movsl
sbb
add
notb
cwtl
lcall
jno
xor
les
bswap
cmp
outsb
call
lds
addb
jbe
push
jecxz
and
movsb
stc
sub
xchg
or
add
enter
or
int
cmp
mov
daa
jle
nop
movsl
or
mov
mov
xchg
jnp
frstor
fs
movl
sbb
aaa
repz
mov
or
push
cmp
sahf
pop
lret
add
scas
dec
push
and
data16
fldcw
pusha
mov
std
icebp
scas
popf
in
in
pop
or
fidivrl
pushw
mov
mov
jbe
aam
decl
sbb
ret
fiaddl
das
lea
xchg
sbb
sbb
xorl
aas
loope
inc
add
cmp
shl
dec
hlt
in
in
jge
mov
daa
pushf
pop
aas
fnstsw
dec
adc
or
pop
ja
inc
dec
pop
xchg
push
dec
outsl
adc
or
push
bound
sub
je
mov
xlat
push
dec
jecxz
fiaddl
xchg
inc
aaa
lea
test
insb
mov
or
mov
xchg
jo
sarb
or
or
shll
mov
adc
fsubrl
enter
rcr
pop
aaa
lock
add
mov
pop
dec
shll
test
imul
nop
push
cli
push
incl
dec
fsubrl
es
push
xchg
scas
lahf
xchg
pop
jno
icebp
cmpsl
mov
push
out
xchg
jg
jge
call
in
inc
mov
repz
cmpb
aad
adc
sub
ljmp
add
leave
adc
dec
mov
rcr
adc
pop
pop
jmp
mov
jo
test
pop
call
cmp
mov
in
mov
or
sbb
or
stos
or
jns
stc
ret
ds
add
dec
mov
sbb
in
dec
leave
in
test
outsl
xor
cmp
hlt
push
repnz
xor
es
inc
loop
icebp
mov
mov
mov
aam
xor
pop
push
pop
sarb
pop
mov
mov
ja
push
testb
adc
pop
sbb
popa
xchg
ss
add
scas
sub
mov
and
fsubp
xchg
movsl
icebp
fdiv
xchg
dec
addb
or
ja
push
cli
and
arpl
das
push
inc
inc
mov
jle
xlat
insl
xchg
outsl
rclb
into
sti
mov
stc
andl
in
in
and
push
cs
cmp
data16
insl
jmp
mov
cmp
lret
add
mov
rcll
lcall
lsl
fiadds
scas
sub
and
test
fincstp
and
sti
negl
sub
dec
adc
xchg
inc
add
or
cmc
pop
jmp
xor
scas
or
mov
and
mov
out
cltd
add
shrb
addr16
jnp
add
es
sub
or
aas
adc
xor
cmp
lods
std
hlt
or
int3
imul
in
nop
add
or
fstpt
or
repz
add
mov
test
xchg
lods
push
enter
mov
test
xchg
xor
pop
jmp
and
pop
inc
jne
das
pop
push
or
jbe
orb
xchg
aaa
xor
add
ficomps
mov
mov
ficoml
mov
mov
push
and
add
xor
aam
nop
ss
fcmovnbe
jbe
jae
jo
mov
pop
movsb
les
xchg
add
scas
adc
xor
aad
lahf
cli
or
gs
dec
ret
movsb
sti
jb
xchg
inc
gs
cs
xor
bound
jg
mov
cmp
movsl
stos
add
mov
lods
sbb
pop
hlt
inc
jg
loope
sbb
ja
or
lahf
inc
xchg
push
inc
imul
icebp
dec
int3
outsl
dec
fwait
inc
or
cmp
dec
push
ds
or
fcomp
cli
sub
inc
dec
sbb
stos
loopne
xchg
pop
cmp
in
fisttps
mov
loopne
fnsave
out
daa
sub
mov
and
test
or
push
ret
notl
mulb
push
pop
mov
jb,pn
jmp
pop
pop
mov
int3
dec
mov
arpl
xor
mov
cmp
push
data16
adc
pop
test
push
adc
xlat
mov
es
dec
xor
testl
out
sub
cmp
sub
mov
xchg
dec
sub
movsb
sub
jbe
into
adc
ret
push
jo
pop
lods
push
daa
mov
push
adc
in
xor
rcrl
arpl
stc
jne
shrl
imul
sub
outsb
mov
dec
ss
xchg
cmc
outsb
jmp
or
fstps
pop
pop
push
cld
mov
sub
popf
in
sub
pushf
jae
cld
jge
cmp
jecxz
aaa
pop
in
cmpb
repz
sub
and
xlat
push
pop
and
mov
mov
mov
dec
aaa
insl
loop
and
jmp
push
push
fwait
imull
into
pushf
sarl
mov
sub
xlat
push
cmp
cmp
dec
icebp
pusha
imul
dec
xor
xor
imul
inc
mov
or
mov
stos
cmp
ret
in
fmuls
adc
inc
and
addr16
xlat
sahf
push
mov
sub
cli
pusha
mov
add
sub
mov
dec
int
mov
ret
repz
push
add
test
dec
ror
dec
xor
mov
inc
pop
das
sub
nop
mov
gs
xor
xor
push
inc
cs
pop
dec
jae
movsl
rcrb
push
mov
push
pop
movl
mov
pop
cmp
iret
xor
xchg
sbb
sbb
push
xor
push
icebp
push
sub
mov
inc
addl
es
sub
xor
enter
loop
jecxz
aad
call
fildll
push
gs
xor
pop
pop
and
hlt
fimull
aad
test
sbb
lock
or
dec
push
xchg
xor
cmpsb
dec
rorb
dec
xchg
xchg
xchg
out
add
cmpsl
outsb
call
test
or
and
roll
mov
mov
std
add
icebp
call
pop
iret
cs
push
sub
xor
fcmovnb
dec
imul
out
xchg
in
ja
and
fs
or
inc
imul
imul
fdivl
add
jno
popf
mov
bound
adc
mov
sub
xlat
pusha
pushf
orl
jle
in
jno
mov
push
jns
jo
jle
jp
mov
sub
adc
out
jge
dec
xchg
int
sbb
jecxz
push
jle
ret
js
pop
jbe
mov
test
push
cmp
xchg
dec
in
pop
lea
pop
jp
lock
mov
aam
in
fbld
stos
sbb
js
ret
out
inc
stos
cmpsl
xor
adc
push
sarl
shlb
lods
push
pop
mov
arpl
add
ss
cmp
mov
mov
mov
das
out
sub
outsl
cli
mov
adc
call
xor
jge
sub
pop
test
sub
or
rclb
cmp
or
int3
lret
xchg
decl
clc
pusha
pop
sub
pushf
add
add
lods
outsl
std
mov
pop
adcl
mov
or
mov
mov
out
daa
sub
enter
repz
mov
cmp
mov
or
outsl
xor
insl
pusha
mov
inc
mov
fcoms
xchg
outsb
add
lcall
ja
std
adc
aas
push
pop
popf
mov
out
rclb
test
pop
cmp
push
push
out
mov
ss
xchg
cmc
icebp
pop
call
pop
lock
jmp
pop
push
jbe
jle
in
jbe
fmull
or
jmp
push
jge
out
jnp
pop
outsl
cs
xor
pop
repz
and
and
mov
xor
mov
jne
outsb
lods
pop
mov
imul
outsb
adc
dec
sbb
jns
add
add
jp
jns
add
inc
int3
ficoml
add
pop
jge
jne
xlat
and
add
push
push
pop
popa
xchg
daa
or
jp
mov
inc
stos
and
add
push
mov
in
xor
mov
xchg
rclb
add
movsl
call
test
inc
mov
push
push
jle
jl
lret
out
sbb
mov
test
inc
ds
xchg
sar
pop
repz
fs
sbb
push
push
mov
out
cmp
push
inc
pop
mov
xchg
in
or
les
int
cmp
ds
push
addl
add
dec
push
jmp
sbb
mov
jg
add
ret
imul
jl
call
pop
cmp
mov
inc
insb
pop
outsl
andl
insb
sub
xchg
push
push
mov
mov
rcrb
into
out
lods
out
dec
push
inc
ret
sub
je
and
xchg
pop
daa
scas
xchg
and
cwtl
or
sahf
mov
fnsave
nop
push
insb
inc
popa
cld
xchg
dec
or
test
pusha
es
int
jae
pop
and
mov
stos
lahf
add
jae
lods
mov
push
fdivl
test
and
xchg
inc
loope
push
add
aas
adc
mov
dec
imul
loope
push
orl
faddl
testb
dec
or
xor
or
push
mov
scas
dec
sub
mov
lods
push
adc
test
xchg
hlt
dec
enter
cmpsb
ja
rolb
push
mov
rcrb
dec
mov
inc
clc
cmp
push
into
stos
fdivrl
jb
jnp
divb
sarb
cmpsb
pop
adc
sbb
cmpl
lea
insb
fs
icebp
iret
imul
adc
popf
cltd
dec
icebp
and
insb
push
inc
adc
lahf
rcll
jb
cmp
fs
jns
iret
mov
iret
sbb
cmp
dec
lock
dec
mov
cmp
faddp
sti
and
push
cmp
sti
adc
dec
notl
lock
cmc
lock
repnz
sbb
loopne
in
mov
sti
sub
push
mov
mov
stos
cli
and
jmp
push
call
mov
shll
jle
std
lea
jp
test
jb
test
pop
lret
outsb
mov
or
and
adc
mov
push
out
push
sbb
jb
ret
fidivrl
sub
test
rorb
pop
jmp
push
xchg
pusha
loopne
test
mov
idivb
outsl
and
inc
push
mov
std
xchg
push
jmp
loop
in
in
jb
mov
cmp
in
sub
xchg
adc
out
dec
cmpsl
sub
fldenv
push
mov
cmpl
shlb
in
and
add
loop
in
jne
imul
adc
leave
nop
mov
sbb
mov
dec
pop
pop
push
jns
mov
and
push
mov
lahf
jg
inc
fwait
cmpsb
add
adc
gs
mov
data16
mov
cmp
cmp
pop
jo
sbb
arpl
sub
in
mov
or
sub
push
push
fdivr
push
pusha
inc
cmp
cmp
sahf
aam
cmpsb
mov
int3
sub
mov
mov
sbb
fsubs
push
addb
aam
insb
lea
cld
push
push
mov
test
ja
clc
hlt
and
cwtl
cmp
pop
and
in
into
test
mov
test
cmpsl
iret
adc
xor
mov
dec
std
ds
mov
pushf
or
stos
je
int3
fmuls
rorl
pop
inc
xor
mov
sub
lret
enter
fisubrs
test
push
fcoml
cmp
pop
xor
stos
mov
test
mov
push
shll
sahf
clc
push
jae
cmpsb
or
popa
testl
mov
addr16
pop
jae
mov
nop
sub
aam
js
arpl
jle
fs
cwtl
out
clc
xor
inc
fiadds
mov
xchg
adc
sub
jmp
dec
dec
int
rorl
xchg
adc
jo
cmp
mov
jno
into
loopne
jp
out
out
lret
adc
lods
xchg
mov
jb
rolb
dec
mov
push
push
or
push
mulb
xor
sbb
jge
bound
mov
jle
idivl
dec
jecxz
jae
lea
and
stos
xchg
xchg
test
mov
stc
and
inc
das
xor
pop
hlt
sti
arpl
dec
mov
out
or
jae
ficompl
inc
xor
outsb
push
push
sub
pop
pushf
cmp
shr
rolb
dec
sub
mov
sub
jecxz
rcl
lods
adc
scas
cmp
ss
dec
in
outsl
xor
lea
mov
dec
xchg
std
add
dec
fsubp
sbb
mov
inc
shr
cli
cs
test
lahf
aad
jnp
test
pop
mov
mov
repnz
pushf
in
or
mov
fldenv
nop
mov
pusha
mov
gs
rol
add
pop
xchg
dec
lret
and
sub
mov
mov
ret
and
xor
xor
add
dec
mov
imul
out
in
in
fcompl
mov
jmp
call
mov
mov
push
mov
xchg
mov
pushl
mov
xchg
sub
mov
roll
fiaddl
add
in
jo
mov
or
rol
cmp
shll
cltd
test
mov
dec
jno
sbb
xchg
popf
mov
mov
stos
enter
shlb
test
mov
js
into
or
xchg
jo
fstl
dec
fiaddl
xlat
adc
insb
mov
stos
daa
stc
je
bound
fmull
in
xor
mov
push
dec
inc
jnp
notb
xor
xor
push
filds
xor
mov
mov
fisubrs
xor
sub
and
jp
sub
push
push
cld
call
in
rorb
test
push
sbb
cmp
rorb
addb
jmp
les
cld
adc
mov
pushl
mov
and
pop
aad
push
pushf
loopne
or
js
push
jno
mov
mov
aad
fcmovne
out
cltd
gs
std
mov
dec
sub
push
push
loope
test
ljmp
adc
fldl
das
mov
push
mov
push
mov
inc
and
push
push
in
sbb
movsb
and
cmp
testb
mov
add
ja
mov
add
dec
mov
scas
inc
jnp
std
and
or
inc
ss
int3
cmp
mov
adc
out
and
sub
push
aas
out
ljmp
inc
pusha
sarb
icebp
shl
xchg
rcrl
scas
sub
imul
dec
add
icebp
pop
lret
or
add
xchg
sbb
rol
ljmp
cwtl
out
push
loop
xor
decl
ss
mov
mov
jae
mov
jp
rcrl
cld
lods
xchg
and
rclb
sbb
cmp
adc
and
or
pop
pop
jg
dec
mov
cmp
xor
ljmp
adc
das
dec
mov
xchg
call
cmp
imull
js
pop
scas
ret
adc
lods
xchg
scas
push
push
ljmp
or
andl
fcompl
js
and
push
imul
rcrb
add
pop
push
or
xor
xor
movsl
outsl
sub
fists
mov
sub
cmp
ds
adc
jbe
incl
pop
fbld
sub
xor
mov
fnstsw
sub
sub
push
lea
imul
mov
lret
test
dec
outsb
sbb
xchg
call
pop
xchg
add
pop
jmp
sub
mov
lgs
sbb
test
sarl
rcll
inc
out
mov
sahf
das
or
pop
aad
pop
adcl
js
test
inc
xor
mov
pop
fwait
out
or
sub
xor
adc
xchg
mov
cmp
xor
pop
mov
jo
push
rclb
mov
ss
mov
lock
lds
fwait
hlt
leave
inc
cmp
pop
loopne
mov
xor
stos
scas
popf
outsb
scas
sahf
movsl
mov
sub
pop
int3
fwait
aaa
inc
mov
clc
jnp
repz
stos
cmpsl
stc
xchg
sub
xchg
pop
out
jo
add
lcall
cmp
cmp
xchg
idivb
mov
jb
sub
adc
fistps
xor
sub
test
xor
add
in
enter
cltd
push
xorb
push
or
mov
jecxz
mov
ja,pn
sub
or
daa
cmp
cmp
dec
nop
mov
xchg
mov
andl
inc
jnp
clc
push
mov
push
adcb
dec
inc
push
xor
pop
mov
cmp
out
dec
rolb
or
push
mov
dec
shl
fwait
xchg
xor
jns
sbb
rol
mov
pop
jle
push
ret
jnp
test
lret
pop
sbb
popa
icebp
clc
cmp
add
int
mov
pop
jnp
fisttps
out
cltd
pop
cmovge
add
aad
jae
filds
hlt
lea
cmp
mov
call
cld
jmp
pop
lock
cmp
cmpb
negl
jno
sbb
or
xor
mov
sti
dec
adc
out
out
push
mov
aaa
ret
fbstp
and
sahf
lea
mov
xchg
mov
test
test
fwait
rcll
mov
pop
inc
fcoms
ja
sbb
mov
mov
adc
fmuls
shrb
mov
xchg
xor
imul
fstl
dec
push
pop
sahf
adc
shlb
mov
xor
mov
xor
cmp
mov
xchg
push
es
xchg
adcl
enter
test
inc
scas
insl
gs
jnp
std
into
fsubs
loope
cmp
and
in
inc
xchg
fs
push
mov
pop
or
xchg
dec
push
or
icebp
clc
jge
dec
loope
jge
addr16
pop
push
mov
loope
cmp
cmp
ja
movsl
in
loop
xchg
arpl
mov
insl
ret
fcmovu
push
ljmp
xchg
es
mov
xchg
xor
nop
push
xchg
pushf
dec
pop
call
cli
scas
dec
cmc
mov
jno
movsb
ficompl
mov
add
mov
jl
leave
loope
lods
lret
push
pop
push
and
or
pop
test
or
test
jo
decb
lcall
mov
pop
cmp
sub
vmwrite
mov
cld
sub
lods
or
and
dec
pop
repz
or
test
mov
inc
imul
jbe
nop
pushf
test
add
fdivs
push
in
inc
call
pushf
popa
loop
sub
fisttpll
pop
lock
jo
jno
sub
xlat
dec
loop
inc
ljmp
xor
dec
addr16
dec
fdivr
loopne
xchg
int3
fisttpl
les
stos
mov
dec
push
pop
roll
jnp
push
add
cmp
nop
pusha
pop
enter
mov
mov
mov
das
cmp
adc
sub
sbb
fwait
sarb
cmp
push
mov
jecxz
and
fnstcw
scas
dec
dec
lods
loope
jmp
stos
mov
inc
push
out
mov
sti
adcl
dec
imull
inc
dec
clc
js
inc
in
sbbl
push
sub
push
sub
call
sbb
mov
rol
lock
push
cld
xorl
ret
fisttps
jns
lea
jbe
ret
push
adc
stos
out
push
es
ret
mov
mov
andl
mov
cmc
stos
jmp
loop
repnz
jmp
xchg
push
in
out
icebp
xchg
pop
mov
int
imul
addr16
jne
ljmp
outsb
pusha
adc
in
inc
mov
dec
jmp
cmp
sub
add
lods
adc
into
jns
mov
and
lods
aas
mov
mov
jmp
mov
lahf
pop
adc
and
cmc
in
insl
inc
cmpl
mov
and
inc
rcrb
xchg
pop
decb
dec
pop
jo
inc
repz
insl
push
pop
insb
sub
pusha
dec
dec
sbb
mov
insb
into
push
shr
lea
testb
and
js
fnstenv
insb
pop
mov
mov
mov
mov
adc
xchg
mov
or
repz
rep
jns
insb
js
loope
test
jmp
in
data16
and
sub
mov
shll
fucomp
orb
sarl
pop
xor
mov
jp
or
js
test
jl
sbb
clc
int3
mov
mov
sbb
jecxz,pn
sbb
and
scas
push
lods
fdivl
dec
push
pusha
pop
xchg
lods
pop
test
incl
push
outsb
xchg
popf
pop
push
mov
mov
jns
or
fmull
divb
in
das
pop
xor
cmc
imul
dec
mov
adc
push
pop
xlat
mov
ljmp
pop
cmp
push
push
in
fs
push
iret
cltd
jns
testl
pop
loop
out
popl
jmp
hlt
and
movsb
inc
shrb
xor
mov
movsl
je
push
andb
push
push
divb
sbb
push
loopne
sbb
cmp
fs
mov
and
jg
xor
imul
addr16
scas
loopne
lods
out
sbb
pusha
cmc
in
imul
pop
pop
pushf
and
cmpsb
push
and
mov
xorb
mov
pop
push
and
mov
sub
movsl
xor
push
rolb
sbb
cmp
jne
testb
pop
cmpsl
loopne
cwtl
decb
mov
mov
adc
fadds
jne
sub
daa
leave
ret
sub
cmc
sbb
pop
mov
fmull
out
push
stos
xchg
popf
push
and
adc
jl
push
lock
popf
mov
popa
icebp
dec
cmp
scas
shrl
and
mov
xchg
mov
cld
je
xchg
test
dec
dec
scas
adc
lods
fcmovbe
ja
mov
mov
dec
out
divb
xchg
or
mov
push
pop
fistpl
aam
xor
ss
cmc
dec
pop
lock
sti
sub
mov
xor
adc
inc
jnp
add
imull
sub
mov
inc
inc
dec
fsubrs
decl
daa
imul
xchg
lret
stc
pop
int
lret
int3
insb
dec
xchg
xchg
pop
dec
ret
cmp
dec
adc
repz
inc
push
je
je
pop
inc
xor
aad
test
xchg
pusha
mov
cltd
add
dec
in
sbb
sub
xchg
ja
xor
jno
das
std
arpl
xor
sti
ja
jge
es
or
leave
rep
out
popa
aaa
hlt
inc
mov
inc
jno
lcall
jp
in
add
push
pushf
jmpw
call
in
cmpsl
mov
sub
and
or
pop
aaa
lock
js
xchg
xchg
push
mov
sub
add
iret
and
sbb
jmp
jecxz
int
cld
mov
stos
adc
mov
adc
or
mov
pop
inc
mov
inc
xchg
fsubrl
pop
outsl
test
push
push
in
push
adc
adc
lsl
scas
jg
pop
shrb
pop
mov
pop
cs
stc
add
inc
push
inc
or
cs
insb
cmp
test
xchg
clc
cmp
mov
incb
cmp
sub
jp
push
xor
xchg
aad
jp
xchg
adc
jbe
sbb
mov
int3
dec
push
or
cltd
outsb
dec
add
mov
mov
inc
in
int3
das
inc
int3
mov
adc
cli
inc
daa
adc
inc
test
ljmp
rorb
stos
mov
out
repz
adc
jbe
inc
inc
imul
ja
inc
push
mov
dec
ss
mov
jae
out
dec
outsb
pop
sub
ljmp
jb
jle
outsl
leave
add
inc
push
dec
or
movsl
cmp
bound
fld
and
repnz
xor
addr16
push
cmp
lret
sub
pop
lret
add
enter
sbb
mov
mov
push
sbb
jns
xchg
mov
push
inc
aad
es
lcall
aas
sub
data16
fidivs
add
jl
lds
inc
mov
jo
push
dec
insb
ja
roll
dec
push
push
pop
aaa
aas
movsl
xchg
jg
cmp
aaa
push
repnz
inc
mov
mov
pop
cmpsl
lea
mov
jae
or
lret
pop
pop
lods
sub
sar
xchg
add
decb
push
sbb
push
insl
adc
dec
adc
push
mov
lea
xor
lods
fists
stos
out
insb
pop
and
xchg
stc
pop
xchg
push
pop
pop
shl
gs
test
dec
nop
dec
lods
pop
icebp
movsl
xchg
cmp
test
cs
les
pop
dec
jne
sub
dec
dec
test
scas
iret
daa
jge
sbb
mov
shll
xchg
insb
popa
or
ret
push
inc
cmp
cmp
fdivrs
mov
es
pop
test
pop
mov
out
mov
jle
inc
aas
nop
add
inc
mov
mov
xchg
jg
fisttps
or
mov
psubsb
sbb
dec
mov
arpl
rcll
push
mov
aaa
cmpsl
fidivrl
dec
xor
loop
ret
inc
jo
fisubl
dec
adc
pop
or
int3
jae
sbb
mov
mov
jmp
and
add
dec
data16
and
pushf
pop
test
lea
ds
xor
add
mov
sub
mov
or
test
adc
inc
stc
lock
push
mov
inc
adc
mov
and
mov
fisttpll
jl
inc
icebp
push
sbb
lds
lahf
leave
scas
arpl
sbb
ficoml
add
pop
push
mov
fimuls
js
cmp
fidivl
enter
sti
fadds
into
add
int
rcrb
xchg
jbe
mov
in
adc
test
cmp
inc
push
je
dec
cmp
lfs
leave
inc
mov
inc
add
add
inc
push
xchg
ret
and
inc
dec
sbb
xor
jae
cmp
out
add
sub
cmp
imul
les
jle
outsl
jg
sub
cmpsb
pop
inc
jle
cmp
push
loopne
sbb
outsl
lods
lods
les
imul
cmc
fisttps
outsb
mov
addl
fnstcw
xlat
push
cwtl
not
jbe
out
or
cltd
dec
lds
xchg
add
and
jecxz
das
mov
push
cld
xor
rorb
mov
jmp
adc
sbb
add
filds
fwait
inc
xchg
cmp
or
pop
xor
xchg
pop
or
outsb
outsl
xchg
add
loopne
sbb
dec
push
ret
mov
sub
bound
fsubrp
pop
enter
ret
push
shlb
setl
mov
push
lahf
ss
pop
std
cld
das
xor
out
add
repz
mov
outsb
imul
fs
iret
lret
push
pop
sbb
icebp
scas
and
jmp
gs
test
fmull
adc
ret
mov
popa
nop
cmp
dec
jge
fisttps
mov
out
mov
int3
mov
lods
scas
add
cmpsb
ds
sub
hlt
shrb
cmp
cmpsb
push
mov
jnp
push
popf
xchg
sti
push
push
dec
rcr
inc
js
arpl
outsb
in
je
divl
enter
sbb
jge
and
and
dec
adc
test
gs
jl
sub
aam
sahf
je
loope
mov
lahf
iret
adc
fstl
lds
in
loop
dec
sub
sub
push
add
and
adc
push
cwtl
pop
jl
jno
shl
fs
sbb
mov
cld
adc
shrb
adc
cmp
nop
adc
cmp
xchg
adc
sti
mov
adc
xchg
lahf
fbld
mov
push
imull
push
inc
fnstcw
mov
sbbl
mov
sbb
add
mov
sarl
in
cld
pop
cs
es
xor
mov
shl
in
hlt
add
mov
push
pop
mov
pop
jg
popf
xchg
popa
faddl
jmp
adc
pop
push
loopne
mov
push
repnz
jae
or
scas
inc
les
sahf
fldt
fwait
jbe
into
mov
mov
pop
shl
and
xchg
fisubrl
jmp
pop
mov
mov
js
inc
mov
movsb
pop
into
jl
add
out
xchg
push
xor
sbbb
dec
int
shrb
sbb
jge
dec
sbbb
jb,pt
enter
fldenv
and
js
lahf
xlat
fldcw
lahf
mov
aad
fldenv
add
fwait
int3
or
jmp
add
ja
dec
mov
mov
sarl
insb
xor
ret
into
pop
stos
pop
mov
push
popa
and
and
js
dec
jnp
push
inc
data16
andl
out
mov
int
mov
jl
xchg
cmp
or
xor
add
cmp
pop
push
xchg
sbb
jns
pusha
lds
shl
cmp
add
push
arpl
dec
push
inc
add
mov
test
push
les
outsb
stos
cmpsb
stos
xchg
or
ret
or
and
pushf
xchg
sub
fdiv
es
cmc
test
leave
xor
push
popa
mov
shll
cmc
jle
inc
pop
cmp
sub
push
loopne
xchg
xor
fistps
or
lret
test
fidivrs
mov
fisubrs
push
mov
and
test
or
cmp
es
cld
push
cmp
ror
add
pop
mov
data16
mov
mov
inc
in
scas
hlt
nop
push
repz
and
xchg
mov
adc
pushl
jp
divb
mov
cwtl
test
scas
divl
cs
jo
xchg
mov
xchg
insl
push
insl
sbb
out
sub
shlb
imull
add
shlb
stos
orl
xor
push
fstp
inc
bound
mov
int3
mov
lds
je
movsb
add
adc
adc
enter
or
jmp
outsl
int
into
popf
shrb
lea
loop
adc
mov
leave
dec
loopne
push
icebp
and
jb
in
or
addr16
mov
and
jnp
test
pushf
in
popa
cmc
push
sbb
jmp
lahf
mov
call
hlt
push
sahf
mov
cmpsb
ret
jmp
movsl
loope
dec
imul
test
mov
pushf
xor
sbb
push
ljmp
cld
ret
xchg
xor
push
cs
cmc
xlat
pop
inc
dec
dec
es
lds
scas
mov
test
stc
cmp
popa
sbb
mull
push
fwait
adc
mov
adcl
pop
mov
aam
sub
push
mov
lods
icebp
pop
aas
inc
mov
mov
and
and
mov
and
out
adc
rcrl
shl
sub
adc
insl
fs
imul
jmp
lea
fadd
cmp
push
js
lcall
sbb
sbb
and
jbe
cltd
test
mov
int3
sub
pop
ret
out
rcll
sub
shl
std
shll
int
jns
jg
and
fnstenv
pop
and
or
testl
cmc
inc
rcr
repz
jle
jbe
or
dec
les
xchg
in
dec
out
xchg
push
jo
cli
sub
push
pusha
jg
pop
sbb
cmp
lods
popf
and
cmp
inc
fdivrs
testl
sub
inc
jo
dec
in
xchg
pop
jne
xor
pop
add
ret
push
clc
push
ljmp
sub
sub
pop
jbe
nop
imul
cli
out
notb
inc
loopne
lret
jmp
mov
jmp
push
loopne
and
lret
xchg
testb
cli
add
xlat
mov
sbb
stos
popa
leave
out
jge
in
pop
push
dec
sub
ret
rcl
mov
out
xchg
ds
fcmovne
pop
out
int
jmp
ja
outsl
fst
std
mov
push
les
repz
ret
inc
shlb
aad
aaa
shl
sub
mov
out
dec
sbb
shll
mov
xchg
mov
into
jl
mov
mov
pop
inc
or
iret
push
mov
adc
push
jnp
xor
lret
lds
xchg
push
sti
xchg
xor
stc
push
fs
inc
inc
enter
cmp
and
mov
push
ret
shrl
sti
call
jecxz
pushf
jmp
pusha
add
or
add
mov
inc
pusha
je
call
bnd
dec
out
ret
push
mov
test
cs
mov
ret
ja
out
or
xor
push
mov
xchg
lret
ljmp
adc
adc
sbb
inc
popf
aas
xchg
xchg
xchg
inc
mov
les
mov
in
xchg
push
jnp
aaa
xor
mov
mov
push
sub
stc
pushf
push
pop
cmpsb
faddl
xor
dec
jmp
jp
stc
adc
out
inc
pop
mov
dec
outsl
daa
jbe
or
cmp
xlat
push
stos
clc
mov
out
push
xchg
testl
sub
push
mov
nop
bound
aaa
xor
ja
sub
cmp
inc
into
scas
jb
stos
add
cmp
imul
push
xor
xchg
push
push
inc
cmp
lods
fistpll
jge
mov
push
sub
aaa
pop
push
bound
ja
dec
cmpb
mov
divb
xor
push
or
or
sub
jns
add
shrb
xor
push
mov
sbb
mov
adc
cs
cwtl
cmp
xor
adc
mov
lret
orb
mov
aaa
cmpsb
pusha
das
leave
adc
rolb
push
lods
jb
jb
int3
stos
xor
mov
test
mov
xor
pop
sbb
lea
and
pop
push
in
inc
mov
or
push
out
movsb
pop
insb
dec
add
out
jg
dec
cmpsb
fwait
xchg
xchg
push
mov
js
add
mov
pusha
bound
outsl
stc
nop
sub
or
xor
popf
add
pop
add
sarb
aaa
pop
ds
mov
arpl
xor
fiaddl
sub
ljmp
jecxz
pop
aaa
les
into
mov
rclb
ds
std
pop
push
movsl
mov
and
mulb
xchg
sub
inc
xor
and
movsl
out
cmp
dec
stos
lods
xor
sbb
jge
mov
sub
dec
shll
fcoml
int
loope
sbb
ds
dec
mov
pop
mov
sbb
mov
adc
fwait
enter
fidivl
xchg
popa
std
fldl
sbb
lahf
inc
add
lea
xor
mov
jg
insb
pslld
test
bound
mov
rorl
lds
xchg
or
daa
cmpsl
or
das
loopne
into
shlb
dec
clc
fisubrl
cltd
jmp
lret
pop
mov
push
in
xchg
stc
jne
jg
jmp
enter
adc
pop
imul
inc
nop
fwait
lods
fisubrl
fwait
addr16
xlat
inc
dec
scas
jl
iret
fucomi
movsb
lods
jbe
daa
pop
insl
sub
outsl
out
test
int3
push
int3
push
cmp
jo
movd
add
sbb
mov
stc
inc
mov
and
ds
in
mov
cmp
push
outsl
ja
enter
in
mov
lahf
pushf
push
xor
fcoml
fucompp
outsb
pop
pop
dec
call
aam
in
adc
push
sbb
stos
mov
cmp
iret
cmp
js
mov
xor
popa
jae
xchg
xchg
add
dec
int
pusha
mov
in
dec
lret
loopne
and
loope
inc
arpl
or
or
insl
test
je
jp
sarb
gs
pop
std
lods
aaa
andl
xchg
fnsave
jp
cmpsb
push
xor
xchg
scas
dec
loop
mov
push
xchg
pop
sub
sbb
cli
inc
cmp
push
mov
clc
fstp
sbb
push
pusha
and
test
sub
or
out
and
fimuls
clc
add
bound
movd
nop
inc
popf
clc
shlb
stos
cmpb
jns
jg
or
jae
fs
ss
add
js
mov
xchg
xchg
test
inc
xchg
xor
wrmsr
out
loope
rorb
mov
mov
jno
and
add
popl
mov
lret
mov
test
xchg
out
sbb
iret
and
lods
aaa
inc
dec
stos
mov
mov
mov
rcrl
dec
ds
mov
adc
mov
cmp
xor
pop
int3
loope
inc
insl
mov
mov
lock
sbb
mov
out
sub
loope
call
adc
hlt
stc
mov
shll
jbe
adc
insb
fnstcw
fdivrs
mov
cmp
mov
fnsave
nop
xchg
fwait
mov
inc
outsb
sahf
xchg
and
jbe
pop
sbb
idivl
cld
pusha
into
in
xchg
adc
sub
cmc
mov
mov
fcomps
add
icebp
rcrl
nop
and
mov
dec
clc
repz
loope
lods
xchg
les
ficompl
iret
out
lea
add
cmp
adc
adc
inc
dec
test
aaa
dec
jge
inc
loop
cmc
sub
sti
outsb
outsl
movsb
jmp
jg
add
lea
cmp
jmp
cmc
push
aas
add
or
out
mov
loopne
or
mov
call
neg
dec
cli
or
mov
bound
or
mov
mov
stos
loope
frstor
mov
pop
inc
mov
push
push
xchg
repnz
dec
jle
stos
test
add
ret
xchg
flds
sbb
dec
mov
inc
clc
mov
inc
es
aas
and
in
xor
je
ljmp
test
mov
mov
pop
pop
xchg
sub
cmp
repnz
inc
lods
insl
mov
mov
xchg
push
dec
mov
inc
outsb
jno
insl
pop
jne
test
mov
pop
mov
rcrb
mov
and
mov
adc
push
ja
repnz
xor
mov
cld
dec
out
in
adc
ret
xlat
rclb
arpl
jne
jl
vfrczps
rolb
push
pop
lahf
xlat
mov
xor
test
ja
fimuls
mov
sbb
and
jp
iret
and
xchg
jmp
in
hlt
pop
sbb
bound
inc
repnz
pop
push
call
stos
xchg
jge
lahf
sub
mov
inc
loopne
into
aad
sub
aas
inc
in
fimull
add
inc
es
je
mov
dec
mov
aaa
and
add
in
lcall
jge
dec
push
nop
fists
and
sahf
sbb
jmp
pop
jge
xchg
loope
sbb
je
jmp
inc
mov
jbe
mov
ret
pop
insb
dec
inc
ds
xchg
pop
fistpll
jmp
loop
jp
xor
negl
es
repz
xor
mov
sarb
iret
inc
fdivl
movl
icebp
mov
mov
push
pop
aam
jmp
push
pop
das
int
pop
push
cs
mov
data16
hlt
icebp
jbe
cli
cltd
not
mov
mov
inc
cmp
icebp
lret
mov
leave
arpl
test
mov
mov
mov
jmp
push
daa
add
mov
outsb
cmc
mov
in
mov
loope
push
imul
mov
cltd
movsb
jnp
inc
and
xchg
roll
cmp
jecxz
es
xchg
mov
mov
repz
pop
jmp
pop
pop
mov
fldl2t
and
push
daa
or
xor
mov
shlb
pop
dec
ficompl
mov
fsubs
push
dec
jb
inc
pop
jo
into
xor
sbb
xor
lahf
and
mov
inc
push
jnp
xor
xor
lcall
sarl
sti
dec
cmp
dec
je
xor
adc
cmp
mov
inc
std
mov
mov
and
out
mov
or
cltd
xor
push
inc
or
in
xchg
pop
rorb
nop
iret
inc
cmpsl
mov
mov
int
jb
repnz
pop
inc
sub
xor
aam
mov
and
repnz
sbb
test
leave
rorl
rcl
test
fstpl
scas
fisubl
lods
aam
xor
fbld
cld
pop
jae
ffreep
and
ja
xchg
int
dec
outsb
fisubs
mov
and
iret
lods
in
xchg
insb
mov
rorl
inc
mov
cmp
sub
inc
xchg
in
jo
xor
xlat
mov
arpl
sub
fisttpll
dec
in
inc
lret
sub
mov
xor
xchg
pop
jae
jb
xor
mov
mov
clc
mov
nop
ja
outsl
mov
xchg
loopne
push
pop
mov
dec
push
and
ljmp
daa
leave
cmp
loope
pop
sub
test
mov
add
dec
and
sbbb
mov
daa
in
out
jbe
lret
lcall
jl
lret
jns
push
pop
add
xor
sbb
sbb
les
push
lea
popf
adc
lock
pop
mov
dec
xchg
ljmp
sbb
cld
fdivr
dec
les
pop
and
jbe
lret
pop
mov
jnp
dec
pusha
push
lcall
xchg
pop
rcrl
sbb
out
clc
add
cmp
push
subl
push
stc
loopne
adc
test
cmp
jge
adc
mov
dec
cs
cmc
aaa
mov
cmpsb
and
fcomi
gs
mov
inc
movsb
in
pop
sbb
test
mov
jbe
sub
dec
clc
add
aaa
inc
outsb
int
add
aaa
leave
imul
aaa
iret
test
xor
inc
pop
sbb
test
xor
mov
sub
mov
ljmp
lret
lods
out
push
or
in
jns
inc
or
ljmp
add
cmp
sti
xor
test
shl
or
xor
xchg
jecxz
xor
sbb
mov
call
mov
adc
call
and
mov
test
pop
push
xchg
je
dec
xchg
lock
out
loope
and
cld
aad
subb
pusha
inc
cmpsb
cli
js
je
aaa
lret
cmc
sub
stc
inc
leave
gs
std
adc
cld
cmp
fldt
cmp
test
mov
jne
xchg
fisubs
and
pop
push
mov
mov
loopne
add
loopne
rcll
pop
adc
cmpsl
xchg
ja
cltd
mov
add
ret
mov
mov
pop
das
aas
icebp
push
cmpsl
add
iret
sub
jp
jae,pt
lock
stos
fwait
stc
pop
inc
and
mov
bound
sub
out
push
sbb
push
xor
pop
arpl
ret
repnz
xchg
mov
fcompl
ss
sbb
test
push
shrb
call
lahf
pop
jmp
jno
cmp
xchg
pop
xor
leave
dec
repnz
pop
and
sub
fwait
jle
sarb
cld
daa
adc
adc
jb
out
aam
or
pusha
mov
insl
mov
gs
test
aas
jno
mov
add
movsl
sbb
data16
jle
into
testb
adcb
sbb
jne
es
arpl
cmp
push
or
in
sub
mov
jns
mov
and
lahf
push
rolb
sarl
popf
aaa
push
xor
sub
inc
call
outsl
xlat
push
push
in
mov
lret
mov
sbb
jge
sub
jecxz
xor
fsubp
sub
cwtl
int3
int3
or
inc
push
fs
cmpl
adc
jmp
leave
icebp
sarl
mov
aad
outsb
inc
adc
cmp
test
pop
xorb
push
xor
cmp
adc
fsts
scas
test
mov
enter
mov
cwtl
out
lret
fcmovne
push
add
xchg
pop
out
jnp
shrb
out
pop
sub
pushf
enter
or
es
or
push
leave
sbb
add
clc
dec
mov
mov
lods
roll
int
std
leave
loop
mov
pop
inc
sbbb
mov
ss
aas
test
mov
out
addl
repnz
lods
test
negl
sbb
push
pop
test
and
shrb
shl
pushf
push
xor
xchg
push
xchg
aaa
outsb
cmp
outsb
or
sbb
mov
decb
sub
fxch
adc
cmpsl
inc
add
fstps
inc
repnz
pop
test
jb
push
xchg
stc
jae
stc
pushf
sub
sarb
idivb
movsl
ja
out
cmpsl
xchg
outsl
std
pop
pusha
je
xchg
jecxz
sbb
aam
push
je
mov
data16
pop
scas
mov
add
xchg
aas
mov
inc
popa
cmc
xlat
test
xchg
add
int3
pusha
jp
sarb
mov
dec
push
mov
jno
inc
pop
jno
pop
sub
daa
xor
into
or
insb
cmp
fsubs
or
roll
push
push
pop
cli
stc
add
hlt
cmpsb
jno
int
mov
adc
icebp
pop
insl
or
ret
sbb
addl
jne
and
sbb
inc
add
test
mov
xchg
or
xor
inc
movsl
push
test
jmp
movb
movsl
pop
adc
cld
mov
sub
in
je
dec
mov
insb
sbb
sti
or
xchg
mov
outsl
data16
sub
or
cmp
xor
and
jae
jb
push
ja
mov
sarb
sbb
pop
in
fstpl
add
lret
aas
popa
test
mov
sbb
aas
pusha
cwtl
mov
cmp
jp
inc
jo
pop
loop
push
xor
les
sbb
ret
pop
pop
dec
xor
pop
icebp
fisubs
cwtl
fnstsw
rcrb
out
stos
push
adc
mov
hlt
xchg
cmpsb
adc
lea
sbb
imulb
popf
lods
inc
int3
jnp
loop
mov
push
neg
and
rorl
inc
dec
mov
inc
sub
xchg
and
cmc
jecxz
cmp
gs
push
loopne
stos
jne
mov
adc
int
mov
jno
pop
insb
cltd
inc
xchg
xorl
scas
push
ljmp
lahf
pop
xchg
xor
mov
xor
push
rcrl
mov
mov
gs
xchg
dec
fcoml
pop
dec
lock
std
loopne
addr16
push
push
cs
pusha
mov
loope
bound
out
dec
mov
lock
xchg
movsb
adc
aaa
mov
mov
sub
and
push
sahf
out
out
sub
rcr
std
mov
mov
add
xchg
lds
jae
ret
inc
sbb
jg
data16
dec
addb
fimull
jbe
test
pop
cmp
and
cmp
ret
push
push
ret
and
mov
fldl
outsb
lret
add
shll
push
shr
sub
rcrb
mov
dec
aad
repz
gs
lods
add
xor
movb
repnz
or
arpl
es
std
push
pusha
mov
roll
pop
pop
sbb
jl
lret
adc
sahf
jnp
mov
das
mov
call
cltd
out
ljmp
int
add
sbb
push
dec
and
lcall
inc
les
adc
jo
jmp
imul
adc
xorb
dec
cmp
push
mov
mov
loope
aaa
xlat
mov
out
xchg
ljmp
mov
in
xor
cmp
mov
xor
pop
iret
sti
xchg
mov
or
sub
ret
lock
in
call
pop
and
jne
lea
inc
jmp
sub
xlat
mulb
mov
cmc
or
mov
mov
faddl
mov
enter
jb
test
xlat
mov
jg
sbb
adc
inc
sbb
sub
xchg
aas
in
jge
jnp
jns
push
fnstcw
addr16
inc
cmp
shr
push
js
dec
mov
lret
in
xlat
mov
jns
push
jl
mov
xchg
mov
xchg
mov
jl
cmpsl
sub
inc
jle
sarl
dec
adc
sarl
int
sbb
andb
int
scas
and
or
jbe
push
int3
pushf
add
fsts
and
xchg
mov
inc
shlb
outsl
push
sub
outsl
lea
cmp
jne
mov
fsubrp
stos
pop
lret
iret
xchg
xchg
int
popf
sbb
jl
aaa
cs
jb
popa
fisubrs
mov
mov
cmp
push
push
push
dec
xchg
jg
popf
incb
sub
xor
cmp
int3
out
pusha
mov
sbb
dec
jbe
add
dec
ss
lahf
add
dec
pop
sahf
inc
push
xchg
orb
pop
cli
hlt
scas
mov
xchg
jle
and
sti
inc
arpl
dec
adc
mov
and
aas
sbb
rcll
fs
xor
jb
dec
shr
stos
pop
push
ret
pop
or
add
cli
test
xchg
test
jae
repnz
inc
pushf
xor
inc
dec
push
iret
gs
push
mov
jmp
divb
push
jle
scas
cmp
xchg
push
fidivrl
pop
dec
lret
push
loope
xchg
fnstcw
adc
cmp
inc
sbb
out
cmp
repnz
push
push
xor
pop
push
ds
xchg
push
adc
loopne
xorl
xor
aad
mov
shlb
cmp
aad
add
call
popa
cmp
adc
mov
cs
rcll
lcall
xchg
nop
popa
aad
sub
jmp
inc
mov
jb
ja
adc
int
lcall
or
and
lds
or
and
mov
leave
xchg
xchg
int3
jnp
jb
shlb
adc
test
stos
jge
mov
or
addl
mov
jg
or
ficoms
push
ja
adc
subb
cmp
sti
js
imul
mov
dec
popf
jge
dec
iret
dec
sbb
xorb
movw
sub
addl
outsl
test
inc
jne
and
jae
and
scas
adc
movsb
addb
cmp
aas
ss
cld
js
in
xlat
mov
adc
clc
int
dec
cmp
ljmp
stos
cmc
lea
push
mov
cli
aaa
xor
or
bound
in
and
rol
hlt
out
fwait
dec
xchg
adc
or
xor
push
lock
je
jbe
stc
idivl
mov
xor
mov
cli
test
push
stos
adc
in
in
mov
pop
stc
scas
dec
and
cmp
std
push
xchg
xor
into
push
dec
shl
ja
fscale
xchg
icebp
xchg
lahf
sub
shlb
or
xor
rcr
orb
mov
fucomp
pop
daa
cmp
inc
sub
aam
mov
pop
jne
mov
cwtl
add
adcb
inc
xchg
imul
outsl
mov
pop
dec
jns
in
adc
fstps
test
xchg
cmc
outsb
aas
es
xchg
xor
cmp
jnp
adc
das
and
mov
gs
dec
dec
sub
adc
fadd
push
and
data16
push
js
fists
push
jno
loope
fcomps
add
inc
insl
fs
dec
and
add
mov
jmp
inc
dec
movl
mov
push
inc
test
cmp
jmp
rcr
out
push
push
jae
std
mov
pop
ret
mov
and
repz
jno
orl
cmpsb
int3
aam
filds
rorb
imul
hlt
outsb
sbb
jbe
cs
and
mov
xchg
pusha
or
xor
jle
adc
push
xchg
sub
int
add
mov
inc
loope
outsb
icebp
js
pushl
fabs
es
clc
or
push
mov
jle
aam
mov
mov
movsl
insl
test
xchg
add
add
xchg
aas
cs
andb
rol
nop
and
movsb
clc
jns
rol
insl
imul
addl
or
add
loopne
mov
add
mov
adc
push
lcall
push
adc
jbe
and
xor
sarl
lahf
xchg
fwait
cmpsb
mov
int3
pop
jg
movsl
frstpm(287
out
or
das
sub
divb
jo
and
mov
xor
xchg
gs
push
ja
jno
sub
pop
jns
arpl
pop
shrb
xchg
nop
in
repz
idivb
fsubl
and
negl
push
imul
add
fstl
and
xor
push
out
cmp
sub
inc
jge
cmpsb
test
mov
lea
push
decl
cmc
dec
and
mov
jg
nop
push
dec
mov
dec
inc
sub
addr16
stos
leave
add
push
or
les
mov
sbb
or
cmpsb
imul
push
lods
in
adc
ds
cmp
fadds
imul
cmp
jb
int3
pop
rclb
inc
mov
add
jle
lods
pop
add
into
ret
xor
jmp
fld
add
scas
or
scas
push
and
xor
jnp
sbb
push
mov
sbb
inc
test
push
cmp
cmp
mov
pop
lds
xchg
inc
add
inc
mov
adc
cli
mov
in
push
jae
test
jecxz
aam
mov
cmp
fcompl
insb
adc
sbb
lea
cmp
sbb
dec
xchg
arpl
xchg
js
adc
aas
fadds
xor
stos
xchg
mov
fmul
push
cmpl
les
mov
dec
mov
cmpsl
cmp
cmpl
imul
loope
sub
ss
or
mov
pop
scas
cmp
push
std
out
or
xor
pop
inc
jne
dec
adc
insl
pop
fiadds
loop
push
cmpb
ljmp
adc
xchg
push
shr
in
adc
nop
ja
pop
mov
icebp
cmc
decl
cmp
iret
mov
xor
je
mov
xchg
gs
iret
inc
mov
popf
inc
push
sbb
jge
and
sbb
orb
jge
mov
ja
gs
int
out
xor
inc
inc
pop
sbb
jl
xor
insb
outsb
sub
pop
jl
pop
test
cmp
mov
loopne
xchg
or
lods
pop
mov
lock
ds
pop
or
in
mov
scas
sub
ret
sarl
out
mov
dec
out
adc
int
in
push
daa
mov
insb
pop
pushf
clc
and
test
cmpsl
in
inc
jle
push
addr16
negb
clc
xchg
outsl
lods
out
mov
jo
xchg
push
mov
dec
fcoml
inc
popa
adc
ret
pop
inc
jo
xchg
fsubp
dec
lods
mov
and
testb
pusha
push
dec
dec
outsb
dec
sarl
std
mov
lea
dec
mov
mov
xchg
cmp
mov
mov
lods
dec
idivl
insb
js
or
mov
das
xor
inc
and
fists
jnp
lret
dec
sub
pop
dec
mov
popa
lock
mov
incb
mov
jae
ficomps
ja
pop
stos
pushf
pop
aaa
outsl
in
loop
aas
xchg
pushf
mov
loope
mov
addr16
xchg
popa
mov
ret
fstps
cltd
fiadds
fistps
sbb
dec
xlat
xor
pop
push
xor
adc
fwait
bound
inc
mov
jmp
and
sbb
icebp
inc
inc
cli
bound
movsb
fildl
aam
push
sub
pop
sbb
sub
fiaddl
rorl
xchg
xor
xor
fiaddl
gs
mov
icebp
push
push
repz
xchg
and
lcall
add
cmp
push
and
seto
xlat
mov
pop
int3
mov
push
mov
rol
push
jg
in
hlt
push
cli
adc
or
cld
jbe
stos
jp
mov
mov
cltd
sti
xchg
inc
push
inc
cmpsb
out
mov
loop
cmp
fadd
scas
jae
push
adc
pop
in
test
or
inc
int3
js
daa
lahf
sbb
cmp
xchg
dec
jecxz
mov
or
in
push
shll
loope
sub
mov
adc
ljmp
xchg
jns
mov
mov
popa
jo
mov
xchg
jno
pusha
jmp
fidivrl
cmovbe
fcmovb
mov
dec
sub
xchg
inc
mov
and
mov
sbb
and
pop
sub
lahf
jo
and
or
leave
xchg
mov
iret
iret
and
jo
bound
xor
xchg
sub
or
insl
in
inc
call
repz
mov
push
inc
adc
lret
insb
or
cmpsl
xchg
cmc
faddl
int3
cmp
out
mov
test
add
loope
lods
clc
push
and
xchg
sub
cmc
fisttpll
xorb
xchg
dec
cmpsl
dec
dec
out
cmp
mov
outsb
dec
lea
lret
sub
adc
loopne
mov
pop
out
ja
adc
cmc
mov
adc
dec
sahf
push
pop
mov
je
addr16
movsl
adcb
mov
mov
and
cwtl
jg
js
shll
or
mov
jg
mov
in
cmpsl
lods
inc
fimull
out
push
push
mov
fcoms
imul
jbe
jo
fdivrl
mov
orb
into
lods
out
cmpsl
ja
aad
shrl
insl
scas
adc
stos
cmp
mov
decl
movsl
mov
daa
mov
inc
push
xlat
xchg
dec
cmp
mov
and
popa
cmp
add
jno
push
mov
mov
pop
sub
divb
rorl
cmp
rclb
loopne
aaa
add
mov
movsb
sbb
sub
and
cmp
dec
adc
sub
lcall
jns
js
xorl
fisttpl
sbb
sbb
inc
push
es
mov
sub
roll
scas
movsl
add
cmpsl
push
or
push
mov
jle
imul
dec
mov
jo
aas
pop
mov
mov
jns
jae
sahf
fsts
pop
insb
nop
ss
cld
jns
jmp
sbb
cwtl
mov
sbb
add
les
inc
lods
popa
addr16
cmc
mov
test
xchg
in
int3
sbb
ret
iret
inc
nop
std
test
repnz
sub
loop
insb
aam
push
fmul
ljmpw
pop
mov
sbb
mov
sti
pushf
xchg
in
sbb
mov
addl
mov
loop
in
dec
out
lods
jb
and
int3
iret
insl
ljmp
mov
ds
ja
cli
cmpsb
mov
lea
fwait
push
fstpt
pop
pop
jg
xchg
fisubrs
mov
mov
sub
into
dec
subl
data16
lods
jmp
mov
sbb
lahf
pop
inc
dec
jo
lea
adc
pop
inc
mov
sub
mov
popf
cmp
mov
movsl
test
rcl
and
fldcw
sbb
mov
imul
sti
mov
add
lea
bswap
cmpsl
add
or
and
pop
jbe
sbb
xchg
dec
and
sub
mov
lods
cmpl
rcrl
std
pop
inc
cltd
mov
cmp
ficoms
mov
mov
add
repz
sbb
mov
outsl
icebp
inc
pop
add
negl
cmp
imul
push
mov
xchg
dec
lcall
out
sub
mov
pop
add
repnz
adc
cmpsl
mov
dec
insb
xlat
adc
les
cmp
and
pusha
fstl
or
xlat
mov
push
or
mov
push
test
das
out
push
dec
and
sub
dec
inc
inc
adc
inc
and
addr16
cmc
cli
and
jb
push
psubusb
cwtl
das
movsb
imul
adc
outsb
in
mov
pop
adc
sub
sti
cli
adc
inc
lret
add
jne
popf
loopne
cmp
pop
fisubrs
stc
mov
subb
or
jbe
dec
push
inc
mov
lahf
aas
movsl
mov
jo
or
sbb
imul
clc
ljmp
lcall
pop
test
negl
outsb
sarl
orb
pop
sub
fiaddl
leave
sub
mov
dec
cmp
mov
add
ljmp
sti
shlb
popf
xor
ret
jge
and
test
lods
arpl
ds
cwtl
stc
cmp
add
xchg
mov
daa
dec
cmpsl
jecxz
and
jnp
add
xchg
dec
fs
xor
rcl
daa
out
and
in
rcrb
aad
imul
sbb
js
adc
andl
bound
cli
sub
push
out
push
call
dec
fistpl
in
clc
jns
bound
shlb
test
pusha
mov
xlat
jl
aaa
and
or
aad
shlb
rcrb
pushf
or
mov
fwait
pop
and
test
jecxz
mov
mov
push
xchg
adc
cld
xchg
cwtl
or
jl
daa
dec
aas
test
in
mov
call
mov
xchg
push
xchg
lods
scas
cwtl
outsl
xor
adc
loopne
pop
dec
pop
nop
xor
out
jb
jbe
push
cmp
mov
sbb
mov
aad
xchg
sub
shrb
mov
not
inc
mov
stos
inc
lcall
clc
setle
mov
sbb
inc
and
movsl
inc
add
mov
arpl
aas
and
mov
inc
aad
pop
aas
icebp
mov
and
mov
mov
xchg
mov
mov
movsb
xorb
push
arpl
dec
out
dec
fadd
sub
pop
push
stc
jnp
repz
in
inc
and
and
loop
mov
push
aam
pop
lea
test
cmc
fs
push
aad
inc
test
jl
inc
pop
shlb
aad
mov
lret
dec
rorb
mov
pop
in
out
fldl
or
mov
enter
or
mov
xchg
jle
jo
iret
bound
mov
cmp
pop
mov
shrb
mov
fidivrl
cmp
jno
enter
daa
scas
andb
aas
je
add
sub
rcr
sub
sbb
je
push
mov
sub
sti
mov
push
jmp
loop
lret
lret
mov
ja
into
jo
pop
add
into
and
loope
adc
mov
addl
mov
enter
sarl
adc
sahf
dec
ljmp
push
testb
js
ret
push
fldl
imul
enter
movsl
sub
dec
inc
mov
push
aad
add
mov
xor
psubsb
fiadds
bndldx
dec
repnz
dec
pop
test
add
rcrl
lcall
sub
xor
mov
cli
sub
or
inc
sub
sbb
inc
adc
in
push
sub
addr16
mov
sub
mov
ret
inc
or
pushf
or
test
push
push
jecxz
insb
imul
jl
add
mov
xchg
das
lock
xchg
scas
insw
sarl
jnp
js
and
xor
fmuls
lods
adc
mov
cmpsl
lret
outsb
mov
mov
xchg
sahf
nop
shl
aad
mov
sub
stc
push
rcr
mov
and
mov
into
inc
adc
inc
hlt
loop
ja
mov
mov
sub
push
leave
mov
stos
push
xchg
mov
aad
loope
inc
mov
cld
xchg
jb
mov
mov
out
adc
cmc
push
mov
xor
or
jns
loopne
out
inc
fistps
lahf
adc
enter
das
mov
cmpb
cltd
cmc
inc
jnp
flds
mov
out
pop
pop
ja
push
shlb
insl
sub
pusha
sbb
xor
dec
rorl
insl
dec
and
mov
pop
out
dec
fwait
loope
and
mov
or
stos
imul
mov
dec
in
lds
sub
jnp
or
adc
nop
stos
fsub
imul
sub
scas
add
add
mov
outsl
lock
insb
jp
adc
pop
sub
and
daa
push
sbb
xchg
mov
cmp
inc
adc
xchg
mov
das
ss
dec
sbb
es
jle
inc
adc
loope
inc
aam
pop
inc
call
dec
mov
scas
shlb
dec
sbb
imul
call
push
ljmp
in
xchg
out
sub
push
lcall
jg
ljmp
sub
movsb
mov
cltd
mov
and
loopne
pop
std
movmskps
lea
pop
lea
ljmp
fisubs
jp
test
add
mov
jl
jl
out
xchg
data16
fnsave
adc
in
cmp
mov
fs
leave
dec
mov
repz
adc
inc
mov
inc
jb
cs
sub
in
es
pop
in
notl
es
insb
imul
mov
cmp
xor
or
mov
push
insb
add
and
lcall
lahf
in
lret
fstl
xchg
sub
lods
addr16
mov
xlat
push
fs
lods
iret
enter
cmp
stos
xchg
sbb
pop
clc
push
dec
push
xchg
xchg
aaa
or
aad
mov
adc
mov
sbb
lods
or
mov
sub
sub
cli
sub
jo
js
mov
sbb
fsts
lods
fisubl
insl
pop
adc
inc
iret
sbb
decl
push
pushf
cmpb
shll
mov
ja
sub
sbb
pop
push
cmp
add
pmaxsw
mov
aas
fisttpl
add
repnz
sbb
inc
scas
lcall
divl
ds
xor
mov
mul
or
xor
sti
mov
pushf
ljmp
xorb
fwait
xor
mov
sbb
jge
cmp
add
inc
lds
or
into
dec
movsb
sub
popf
add
inc
shrl
sbb
push
mov
adc
jnp
iret
jmp
ret
out
xchg
mov
dec
sbb
sarl
hlt
adc
mov
jecxz
mov
mov
add
pop
and
dec
and
aas
xchg
cmp
in
cmpsb
pop
enter
cmp
dec
jo
out
movq
push
jmp
push
mov
xor
xchg
cmpsl
jecxz
aaa
in
fstl
outsl
out
outsb
adcb
xchg
lds
jle
push
dec
into
aas
ret
pop
sub
cmp
mov
sbb
es
xchg
incb
jbe
xchg
scas
call
inc
hlt
push
jl
xor
jl
sub
mov
sbb
adc
xchg
mov
faddl
mov
popf
dec
sarl
in
mov
mov
sahf
and
and
faddl
jmp
bound
sub
and
fstp
inc
jmp
jge
xor
repnz
mov
movsl
ja
sub
in
inc
insb
sbb
addl
push
pop
roll
pusha
pusha
xchg
push
push
ficomps
out
xor
out
push
dec
rcl
stos
cmp
scas
cwtl
stos
xor
mov
in
pop
leave
iret
add
adc
shll
in
bound
dec
imul
fildl
leave
xchg
movsl
mov
mov
mov
add
and
adc
test
shr
dec
repz
adc
cmc
movl
adc
push
leave
push
fsub
add
mov
sub
ret
xchg
arpl
jno
inc
ljmp
cli
cltd
xchg
aad
aas
jp
fdivrs
sahf
das
inc
jae
sar
ret
cmp
outsl
addl
or
jno
shrl
mov
jl
js
mov
fs
cli
add
or
xor
out
notl
test
divb
popf
les
or
and
mov
pop
sbb
push
cmpsb
mov
xor
stc
bsr
pop
add
insl
roll
and
hlt
int3
fs
dec
clc
pop
test
stos
bound
inc
into
mov
in
dec
scas
mov
cwtl
cmpl
adc
cmc
ret
test
popf
test
leave
sub
int3
das
sarb
test
cmp
pop
ljmp
mov
idivl
jnp
jb
cmpsl
sahf
ljmp
xchg
inc
lock
sub
xchg
fs
xor
mov
dec
mov
push
xor
or
pop
mov
jmp
mov
push
xchg
mov
jnp
das
and
int
scas
or
inc
sbb
testl
cmc
ja
xchg
or
pop
insb
jbe
repnz
push
lret
sub
xchg
pop
cmp
ds
lea
nop
lea
or
mov
or
pop
add
xchg
xchg
leave
pop
jmp
data16
leave
cli
push
outsl
aaa
mov
xor
xor
jecxz
lods
push
push
outsb
mov
aad
bnd
test
and
aam
sbb
cmc
cmp
sti
xor
repnz
jns
pusha
add
jnp
pusha
cmpsl
push
jns
dec
sbb
repz
imul
aaa
scas
fdivrs
out
mov
or
mov
mov
sbbl
data16
popf
fs
adc
movsb
mov
testl
divb
pop
lds
addr16
cmc
jns
fiadds
out
sub
scas
insb
inc
pop
in
daa
jmp
pop
jae
cwtl
add
mov
jle
push
clc
call
mov
pop
xorb
xchg
mov
loop
daa
in
int
lock
jnp
call
dec
enter
mov
cmp
push
into
mov
pop
jge
arpl
sti
mov
jmp
and
fimull
cmp
jge
jp
ficomps
lds
xor
cs
cmpsl
sbb
inc
in
rcrl
mov
jbe
pop
and
repnz
jo
xchg
pop
adc
fisttpll
sub
push
sbb
lea
or
mov
or
push
jne
scas
mov
frstor
movsw
loop
add
push
cmpsl
mov
sbb
cmp
sub
pop
lret
push
movsb
push
push
out
mov
js
mov
and
outsl
mov
pusha
xor
repnz
in
mov
xor
push
fs
adc
sub
dec
jmp
cmpl
ja
mov
inc
enter
cli
gs
or
in
rdtsc
push
sbb
push
adc
sar
pop
js
in
repz
leave
fs
sbb
int3
sub
sarl
js
pop
sub
sub
cmp
pushl
push
push
jns
arpl
insl
mov
add
mov
sub
test
pushf
jle
scas
notl
mov
cmpsl
repz
mov
ret
add
pop
ret
incl
adc
icebp
inc
and
lea
sarb
mov
sbb
sbb
cmp
and
cmp
adc
push
sub
mov
adc
or
test
mov
adc
fistpll
loop
popa
insb
ucomiss
jp
cmpsb
loop
and
pusha
xchg
in
stc
mov
clc
ss
push
sti
xor
and
movsb
out
sub
pusha
cmp
std
push
inc
xchg
pop
dec
rcrb
outsl
push
icebp
pop
cmpsl
popa
and
mov
xor
rolb
sub
push
dec
mov
orb
popa
push
aaa
mov
xor
pop
daa
lods
jns
incb
leave
xor
dec
cld
mov
inc
pop
jecxz
jns
stos
mov
sbb
add
sbb
sahf
jmp
data16
fstps
xchg
bound
ja
ja
cmp
mov
cli
std
or
jecxz
adc
out
mov
push
jecxz
in
jno
jmp
aad
js
sub
jo
lcall
repnz
xor
sub
xor
sahf
add
jb
inc
scas
sub
push
sub
mov
sub
adc
insl
push
or
sbb
shlb
movsl
xchg
dec
jbe
xchg
das
inc
in
add
testb
inc
push
es
xchg
jmp
push
add
push
mov
push
dec
stc
cld
mov
sbb
cmp
mov
loopne
repz
push
add
dec
repnz
movsl
icebp
stos
mov
xchg
adc
mov
dec
lahf
lods
sub
data16
testl
lock
into
jge
shrb
into
rcrb
ret
push
push
cmc
inc
int3
cwtl
dec
popa
das
lahf
out
xchg
sbb
lcall
sub
adc
cmp
fdiv
push
mov
push
pop
xchg
xor
sarb
jp
jecxz
add
mov
sbb
shlb
dec
pusha
hlt
pop
out
inc
in
dec
enter
push
jmp
and
jl
adc
sbb
or
je
mov
sub
mov
jecxz
xchg
std
mov
movsl
stos
xor
push
nop
mov
jmp
insb
xor
test
lods
pop
dec
adc
xorb
and
js
hlt
cmp
pop
das
dec
push
push
in
imul
dec
inc
cmp
repnz
jl
jecxz
inc
dec
rcll
push
nop
out
ret
call
inc
bound
mov
les
sbb
cmpl
test
jne
cltd
pop
cli
sbb
pop
push
mov
xor
pop
and
mov
jge
xor
sarl
sbb
mov
ret
in
sub
pop
imul
mov
mov
jno
dec
int3
sub
sbb
jnp
addr16
out
xor
imulb
mov
imul
aaa
mov
jl
jle
adc
adc
and
rcl
ds
push
cmp
popa
cmp
jecxz
pusha
gs
sbb
sbb
jne
scas
hlt
loop
inc
dec
adcl
les
roll
outsb
pop
in
sub
mov
loope
jnp
jae
cmpsb
dec
xchg
test
push
in
sar
sbb
add
mov
sbb
xor
or
jno
shrl
sub
mov
add
jbe
iret
jle
mov
mov
rolb
sub
cltd
addr16
jge
jge
fcoml
mov
or
lods
into
out
aam
rcl
mov
out
iret
test
pop
xchg
cmpsl
push
mov
fdivl
cltd
xor
push
or
cli
ja
xchg
adc
test
les
out
shrl
scas
pop
sub
push
sbb
outsl
push
mov
pop
call
sbbl
in
pop
outsl
repz
mov
pop
adc
leave
inc
push
pop
sub
jmp
les
adc
pop
xchg
mov
lea
xchg
jecxz
xlat
call
pop
jo
pop
and
mov
repnz
pop
fsts
mov
and
sub
mov
out
jb
xlat
cli
insl
test
pop
test
pop
ljmp
adc
mov
fcomi
jl
inc
int3
les
mov
push
push
xor
int3
xchg
daa
imul
sti
jae
in
out
adc
cmp
xor
adc
je
loope
pop
mov
pop
push
inc
and
fistps
mov
mov
add
sub
int
add
cs
adc
xor
jb
loopne
sahf
mov
push
inc
jecxz
jno
xchg
popa
xlat
shlb
mov
xor
pop
fildll
mov
pop
pmuludq
cwtl
fisubrs
push
pop
jno
orb
fstl
cltd
out
add
rcll
jb
lcall
jne
cli
imul
nop
arpl
int3
aas
lret
mov
mov
clc
shrb
mov
dec
daa
add
outsl
mov
scas
jp
mov
dec
bound
mov
mov
jle
movsl
xchg
pushf
xor
mov
out
push
fistl
aam
add
mov
sbb
and
out
test
fimull
adc
adc
mov
mov
or
and
jge
rcr
rolb
ss
test
iret
pop
ss
dec
stc
add
mov
dec
loopne
jp
stos
and
iret
les
dec
je
mov
cld
negb
mov
pop
mov
cmp
loopne
lret
fcmovnu
gs
and
aam
push
sub
sub
and
mov
ja
test
lret
pop
imul
xchg
push
jne
mov
dec
and
into
xchg
adcl
stc
insb
into
adc
adc
adc
cmp
lcall
ret
ret
fwait
popa
dec
cld
mov
sbb
dec
je
shrl
jnp
jo
fdivl
mov
loopne
or
jne
popf
cwtl
lock
cmp
aam
cmpsl
dec
xlat
push
insl
push
pop
loop
lcall
cmp
ja
push
xchg
shlb
int3
lret
pop
loope
clc
mov
pop
sbb
repz
push
movsb
sub
add
pop
icebp
adc
fidivrl
aaa
mov
insl
movsl
pusha
jne
popa
push
fadds
popf
mov
leave
sbb
arpl
sub
aam
xorl
mov
sub
std
insb
pop
mov
adc
rcl
sbbb
pop
in
mov
sub
pop
xor
imul
outsl
xchg
addr16
add
or
mov
xchg
jle
adc
call
xor
sub
xchg
and
jp
shrb
shlb
sub
and
add
adc
jnp
xor
adc
aam
add
repz
cmp
adc
int
or
sub
xlat
lret
out
jbe
xchg
sbb
inc
ljmp
aas
pop
nop
fs
aas
inc
movsb
mov
in
mov
ljmp
and
int
or
mov
inc
mov
inc
cmp
jne
mov
scas
dec
call
ljmp
aad
pop
jg
sbb
mov
out
mov
jg
add
cmovp
into
syscall
dec
dec
lret
pop
mov
jecxz
or
movsl
push
or
das
inc
test
popf
cld
add
push
adc
shrb
xchg
aas
aas
ret
pop
sub
push
addr16
outsl
leave
fnstsw
std
jge
js
add
mov
cmp
loope
je
xchg
mov
es
clc
addr16
into
ffreep
mov
mov
movsl
pop
pop
movsb
icebp
and
test
rol
pushf
mov
push
cmpsl
loope
inc
rolb
fcomip
mov
ljmp
pop
add
mov
loope
enter
out
mov
bound
mov
imul
mov
pop
loop
aad
add
jno
lock
les
bound
cmp
scas
pusha
jns
dec
pop
cmp
sub
hlt
jecxz
rol
mov
sub
leave
stos
sarb
jae
cmp
fidivrl
cmp
shl
imul
xchg
xchg
mov
fwait
aaa
int
xchg
popa
inc
aas
sub
mov
add
paddq
loopne
fstpl
dec
and
cmp
sub
fs
sbb
rclb
cmpsb
mov
mov
andb
pusha
in
xor
ds
das
jb
fbld
int3
or
out
mov
mov
les
mov
icebp
lea
pop
lods
dec
adc
push
stos
jne
cmp
pop
jp
test
lock
cmpb
xchg
mov
rcrl
mov
mov
xchg
cltd
jbe
sbb
bound
mov
andb
or
and
push
stos
stos
cmpsb
sub
pop
xchg
stos
xor
loopne
cltd
icebp
mov
mov
add
repz
loop
xchg
inc
sbb
mov
inc
add
mov
dec
dec
in
xor
fmulp
cmpsl
cmpsb
cmpsl
loopne
xor
sbb
flds
andb
cs
add
inc
lret
fnstcw
pop
lahf
dec
mov
or
clc
decb
insb
mov
imulb
repnz
movsl
or
pushf
movsl
rcrl
xchg
pop
xchg
mov
test
add
pop
xor
leave
jecxz
mov
sbb
cmp
in
inc
xor
sbb
mov
inc
cmp
pop
add
jne
inc
fidivl
aad
mov
mov
fisubrl
jmp
sub
push
ja
adc
aaa
mov
daa
mov
test
ss
inc
and
test
mov
int3
and
jno
fildl
in
inc
xchg
mov
es
sub
pop
mov
dec
push
pop
in
ss
dec
push
inc
lods
cmp
push
adc
scas
or
and
pushf
fmul
ljmp
cmp
mov
dec
je
or
aaa
and
or
xchg
xor
scas
int
push
loope
ja
xchg
jg
mov
add
shl
movsb
outsl
mov
test
or
stos
mov
mov
cmc
inc
sbb
insl
cmc
arpl
imulb
ja
loop
stos
jnp
sahf
movsl
popf
xchg
sub
rorb
jbe
ja
add
or
divl
repz
lret
sub
add
sub
xchg
dec
jge
mov
push
test
push
fs
mov
insb
outsl
adc
fstpl
imul
out
mov
cli
gs
and
aad
mov
xchg
icebp
add
mov
fildl
mov
mov
push
ret
jne
xchg
mov
cmp
lahf
ficoml
dec
int
test
mov
jl
cwtl
mov
insl
jb
sub
mov
add
push
dec
loopne
loopne
mov
loopne
xor
mov
cwtl
popa
or
pop
sbb
rorl
outsl
hlt
push
shrl
jbe
pop
js
jb
pop
and
and
lret
mov
mov
inc
fnsave
rcl
arpl
aam
sbb
testb
cmp
fs
and
insl
push
sbb
aas
out
js
mov
fwait
das
adc
pcmpeqb
out
incb
fldl
jecxz
out
lcall
dec
call
loop
pop
test
outsl
sbb
adc
ljmp
xor
out
jge
pop
jle
movsb
jecxz
andb
mov
rclb
clc
in
fsubp
cmpsb
mov
mov
xor
test
movsb
xchg
insl
jns
fldenv
imul
aas
dec
push
clc
add
pusha
call
jl
sbb
jb
pop
dec
mov
xchg
ss
cmc
loope
ds
adc
mov
push
ret
es
xchg
divb
mov
jge
inc
call
arpl
adcb
mov
bound
loop
cli
sbb
repz
aad
push
cmpsb
jg
and
jge
call
popaw
shll
mov
push
jns
rcll
ret
fbstp
xchg
jle
pop
fnstcw
cmp
ja
je
inc
push
and
mov
pop
push
lock
addr16
xlat
clc
add
in
pop
icebp
pop
std
fwait
pop
and
pop
pusha
enter
aad
xor
cmp
pop
push
mov
sahf
into
adc
js
sbb
ret
and
neg
dec
or
movsl
xor
aad
pop
jp
inc
roll
cli
or
pop
and
jne
xchg
pop
rcll
mov
imul
jg
cld
into
xchg
lods
fsubl
iret
mov
test
pop
inc
pusha
das
sar
push
hlt
call
or
and
jnp
stos
sub
mov
pop
sub
or
mov
or
xchg
xlat
mov
sub
or
ds
repnz
xchg
sti
pop
push
fstl
push
icebp
xchg
mov
fstpt
ljmp
push
add
xchg
pop
leave
cmp
sbb
mov
repnz
jne
sahf
sub
pop
cmpsl
jp
lret
fsub
pop
pusha
add
xchg
pop
cmp
popa
loop
int3
pushf
lahf
mov
shrl
inc
mov
push
sub
insl
cmpsl
inc
ja
mov
dec
aaa
iret
and
ficoms
mov
mov
stos
and
sub
out
add
stc
push
inc
scas
movsb
out
mov
int3
push
js
sti
inc
mov
popf
stos
jns
mov
test
xor
insb
in
mov
xchg
filds
popl
push
sbb
in
insl
sub
cmpb
popa
inc
ljmp
fsubl
and
and
cli
in
leave
inc
dec
cmpsl
jbe
inc
cmp
rolb
add
xchg
xchg
mov
sbb
frstor
pop
lcall
cmpl
push
dec
add
stc
and
inc
jmp
mov
cmp
fisttpll
cmpsl
std
push
idivb
push
push
shrb
mov
cmp
sbb
sub
flds
push
adc
pop
cmp
movsl
xchg
jnp
sub
jl
fdivrs
mov
test
xor
push
dec
push
sbb
shll
test
sbb
jmp
outsl
mov
lret
xchg
pushf
out
inc
out
sub
repnz
orb
sub
pop
dec
xor
int3
pusha
add
ret
ljmp
jecxz
pop
push
cmpsb
dec
lock
mov
fnstcw
out
mov
mov
lea
sbb
stos
inc
shrb
jp
das
scas
gs
es
xchg
inc
sub
push
xor
mov
cld
mov
push
mov
cmp
or
mov
pushf
push
and
push
inc
test
mov
adc
inc
push
shrb
mov
in
inc
cltd
inc
push
jl
in
jns
and
sub
into
push
pop
int3
ret
inc
in
and
xchg
aas
sub
add
dec
sub
jmp
loope
icebp
xchg
cmpb
out
cmc
pop
ret
bnd
out
push
movsb
cld
lahf
adc
adc
loop
jo
cmp
xor
call
mov
dec
outsl
dec
inc
mov
and
pop
pop
repnz
cli
and
or
imul
mov
pushf
xor
out
inc
inc
mov
add
dec
xchg
out
lods
lods
test
dec
add
lahf
pop
in
lods
adc
push
cmc
mov
xchg
mov
sub
fwait
lea
or
ss
mov
out
fiaddl
cltd
loop
ljmp
mov
jl
jmp
shrl
sub
fcmovu
fdivrs
test
call
xor
repnz
dec
gs
leave
es
pop
fstpl
ljmp
dec
mov
mov
mov
out
jle
sarb
subb
mov
sbb
xor
hlt
mov
sahf
pushf
push
sahf
cs
and
fiadds
lods
jecxz
sbb
in
mov
dec
cmpsb
mov
push
dec
and
push
in
inc
mov
scas
or
adc
sarb
jp
xchg
fmulp
dec
mov
mov
inc
lods
sar
sbb
mov
xor
mov
fs
cmp
sub
dec
mov
in
in
push
inc
rcrl
xor
mov
and
dec
cmp
dec
xchg
jmp
inc
xchg
stc
mov
call
out
sub
repnz
out
mov
and
sbb
ds
pop
rcrl
adc
push
xchg
pop
stos
sub
ficompl
cmpsl
je
mov
inc
mov
test
aas
and
cmpsl
inc
adc
xor
mov
popf
imul
mov
pop
push
adc
lods
inc
in
add
push
or
sbb
cmp
loope
mov
lock
lahf
and
jmp
sub
popa
stos
out
cli
icebp
jns
imul
push
or
dec
xchg
data16
xchg
outsl
xchg
fists
pop
cmpsl
outsl
dec
fdiv
xchg
ljmp
sbb
es
call
xchg
cmpb
dec
pop
stc
ja
xchg
adc
ljmp
out
lahf
sub
data16
imull
loopne
cmpsl
xchg
icebp
add
repnz
sub
sahf
adc
lds
rcr
fdivrs
dec
and
outsl
fldt
in
aad
sbb
sub
orb
jbe
push
pop
jbe
int
sbb
mov
jns
shl
outsl
rolb
jmp
mov
inc
mov
mov
data16
xorl
or
and
jecxz
mov
sahf
imul
push
mov
and
ret
gs
jge
adc
pop
or
fwait
lds
setnp
inc
fisubs
xchg
jmp
outsl
jl
roll
and
inc
xchg
cmp
insl
mov
inc
out
xchg
mov
dec
sub
es
sub
outsb
fsubrp
push
popa
mov
jae
cwtl
aas
inc
rolb
and
data16
out
test
ss
add
test
cmc
testl
jnp
or
mov
ljmp
xchg
imul
cmp
xchg
push
lret
fmuls
or
int
rcll
push
cmp
adc
sub
add
adc
movsl
dec
inc
sub
in
andb
nop
sbb
or
mov
jg
fistpl
xchg
fs
divl
push
push
sbb
ds
jne
mov
push
jecxz
push
xchg
inc
sbb
fwait
adc
cmp
jo
in
mov
mov
inc
pop
int
cmp
jge
sbb
inc
mov
and
std
lret
adc
mov
and
sbb
cmpsb
pop
pop
hlt
and
lods
arpl
mov
and
xor
jle
jl
mov
outsl
dec
mov
mov
test
imul
add
jp
mov
sbb
push
adc
mov
lahf
aad
mov
inc
fs
xchg
lods
imul
clc
aad
jne
push
sahf
insl
push
mov
decb
mov
mov
adc
sahf
and
xor
into
in
cld
dec
jmp
inc
adc
mov
or
add
push
and
int
dec
jnp
mov
mov
mov
sub
push
mov
aaa
test
dec
addr16
dec
shrl
out
cld
or
jp
jbe
js
mov
and
mov
outsb
mov
clc
ret
fnstcw
push
jmp
bound
fwait
imul
sub
mov
stos
or
das
push
fnstenv
jecxz
ss
mov
daa
mov
sbb
cltd
push
mov
inc
jo
pusha
aaa
fistpl
test
in
cs
push
adc
hlt
out
and
scas
aas
and
mov
cmp
fisubrl
scas
pop
movsl
xor
aaa
stos
aaa
jb
mov
dec
test
mov
imul
sub
jg
shl
mov
in
sbb
or
cs
cmp
jmp
js
out
mov
call
and
test
lret
or
mov
lcall
sbb
ret
mov
jle
cmp
shll
lahf
cld
fildll
test
je
loopne
mov
pop
mov
sarl
cmpsb
hlt
popf
jg
aam
pop
jecxz
or
push
repnz
jno
cmp
and
adc
aad
pop
int3
lea
and
pusha
push
pop
xchg
in
cmp
jns
je
scas
popf
xor
or
cmc
movnti
icebp
inc
andb
jns
enter
add
jecxz
push
pushf
fisubrs
test
daa
mov
add
push
cmp
fdivrp
rolb
mov
inc
neg
mov
xchg
jae
fs
sub
out
cwtl
out
fsubrs
popf
jb
leave
outsb
sar
or
add
out
jno
add
pop
xor
aaa
cmp
cmpsb
push
mov
push
or
mov
popa
loop
imul
in
repz
add
filds
push
xchg
leave
arpl
xlat
sbb
add
sti
push
out
popf
jle
xchg
inc
in
enter
mov
xlat
mov
fst
rorl
shlb
sub
adc
sbb
into
dec
inc
pop
mov
scas
popf
fs
cmp
jae
xor
sub
jo
fnsave
push
jmp
and
int3
cmpsl
inc
cltd
xchg
mov
outsl
dec
mov
call
call
dec
arpl
dec
adc
sub
or
xor
pop
rcll
fmull
popf
adc
mov
inc
lods
pop
repz
inc
sub
jmp
fdivrs
shlb
adc
lcall
in
push
cmc
mov
pop
jg
jnp
add
inc
cmpsb
or
nop
jge
stos
lock
mov
jmp
mov
push
das
jge
jo
lock
aam
push
call
cmp
and
loop
mov
or
mov
xchg
mov
arpl
cs
xor
mov
rcrb
sbb
cmc
mov
jbe,pt
push
dec
pop
cmpl
xor
lret
inc
out
popf
daa
test
push
aas
mov
and
das
mov
ja
rclb
push
std
inc
add
cmp
mov
or
fdivr
jmp
mov
mov
cld
fwait
lods
lods
adc
cld
leave
insb
dec
outsl
sub
call
lods
ds
sub
lret
pop
push
and
fnstenv
xchg
xchg
inc
xchg
xor
mov
pop
out
pop
mov
inc
mov
int3
mov
shl
out
orb
xchg
orb
stc
loop
dec
pusha
pop
aad
and
das
xor
xchg
leave
sbb
clc
push
fwait
sub
cmp
add
dec
xor
sbb
push
adc
pushf
or
jp
mov
xchg
shll
movsb
mov
scas
cmpl
dec
cmp
xchg
add
mov
jmp
push
ss
jns
jl
cld
stos
push
int3
mov
jne
mov
xchg
data16
inc
xchg
js,pt
lahf
jno
mov
jg
mov
pop
pop
cltd
ret
jb
inc
inc
dec
fstpl
pop
pop
stos
rdpmc
add
adc
das
stos
push
sahf
leave
cmp
sub
sbb
mov
mov
sbb
mov
mov
push
pop
in
popf
push
push
sarl
sub
fs
in
sub
hlt
add
cmp
inc
add
jmp
mov
push
into
xor
cmp
jp
negb
or
sahf
in
outsl
shll
test
jecxz
and
adc
arpl
sbb
pop
je
push
jmp
clc
aad
mov
sub
sub
jmp
xchg
xor
andl
jmp
pop
addr16
imul
sbb
jle
insb
dec
mov
movsl
sti
sub
insb
push
push
sub
lahf
push
jl
lahf
stc
push
test
testl
jle
xrelease
sbb
mov
adcl
fdivrp
aam
scas
push
dec
pop
out
xchg
loope
pushf
lds
jg
xor
cmp
mov
ja
fbld
sub
mov
daa
mov
jbe
aaa
jmp
pusha
loopne
stos
out
and
call
jl
f2xm1
push
inc
or
daa
pop
jb
push
lret
dec
xlat
into
lock
cmpsl
fmul
mov
push
xor
in
into
dec
ja
aam
sbb
sub
cmp
mov
mov
xor
stos
mov
jp
es
cld
push
ja
fdivs
testl
sti
xchg
push
daa
jecxz
fnstcw
jecxz
popf
mov
cmpsl
js
mov
fcmove
mov
decb
rclb
pop
insb
fsubrs
xor
mov
enter
aaa
sub
movsb
jg
push
jp
rcll
ja
lods
icebp
fcmovne
mov
movsb
jge
sbb
sub
mov
pop
add
xchg
lea
fcoms
int
in
jp
or
add
subl
xchg
and
and
cmp
xchg
movsl
add
call
inc
fidivrs
mov
addr16
inc
sbb
prefetcht0
dec
inc
stos
loope
cli
lods
movsl
pop
inc
add
cld
pop
out
xor
out
inc
jb
jno
mov
out
dec
cwtl
pop
xor
in
mov
scas
popf
jo
aam
aas
fadds
cmp
push
ljmp
or
jno
stos
xchg
enter
fwait
out
orl
pop
pop
jbe
push
popa
inc
and
sbb
out
pop
inc
int3
mov
cmpsl
popf
mov
xor
cmp
pop
cmp
rcrb
mov
push
fucomp
push
jmp
decl
sbb
lock
inc
lods
mov
ror
test
fsts
fidivs
fnop
mov
pop
sub
sub
lock
subl
cld
fists
pop
test
jle
inc
clc
out
sqrtps
in
push
inc
je
sbb
notb
pop
stos
daa
inc
mov
fisttps
mov
pushf
in
aaa
int3
or
cmpsb
pushf
outsb
lds
jecxz
sub
les
add
lahf
filds
push
mov
push
adc
addr16
popf
mov
xor
xor
mov
inc
sbb
mov
or
sbb
and
je
push
xor
fdivl
cmp
adc
sti
ret
lods
and
sbb
xor
push
push
mov
les
add
fsubr
jae
jno
jne
jnp
mov
insb
adc
push
out
fwait
shlb
in
add
incl
out
sarl
fwait
test
push
cmp
pop
mov
aad
pop
popl
in
addr16
adc
jmp
je
add
adc
mov
or
xchg
mov
pushf
sbb
xchg
push
push
icebp
fdivrs
jbe
and
inc
jge
cld
fmull
out
and
outsl
lods
adc
lret
and
popf
jle
inc
daa
fisubrl
repz
pop
and
mov
inc
and
loopne
and
imul
inc
lahf
loope
sbb
inc
pusha
insb
fadd
cwtl
jae
sub
test
adc
jo
test
mov
or
pop
jge
je
or
pop
loop
and
lods
test
mov
repnz
push
dec
dec
aad
cmpsb
and
mov
sub
test
cmp
and
xor
fdivs
mov
iret
jecxz
ds
jp
sbb
outsb
aas
cmp
jne
lods
and
mov
push
inc
aam
mov
aaa
imul
xor
scas
jbe
test
int3
mov
rorl
jmp
mov
lock
sub
mov
clc
out
jmp
out
fimull
setb
imul
fists
loopne
es
daa
subb
cmp
mov
and
cmpsl
loop
clc
test
lock
test
movsb
or
fstps
dec
inc
nop
cmpsb
or
xor
loop
movsb
mov
cmpsl
cmpl
popa
sbb
dec
mov
sbb
lcall
pop
rolb
jecxz
sarb
fcmovb
jne
imulb
or
hlt
daa
adc
xchg
xor
cmp
and
xor
dec
call
push
cmp
mov
lods
add
cltd
outsl
dec
pop
mov
in
into
add
xchg
inc
stos
das
adc
pop
xchg
and
repz
jg
jbe
push
das
shlb
mov
xchg
mov
push
sahf
push
sbb
aam
imul
or
mov
add
dec
mov
and
repnz
cmp
ljmp
negb
xor
push
mov
inc
mov
mov
cmpsb
jg
mov
lods
xchg
mov
aam
xor
fldenv
lahf
xor
pop
insb
add
jl
iret
ret
mov
lods
push
icebp
jmp
push
push
jae
sbb
lret
inc
push
leave
lcall
cmp
jns
push
push
test
mov
scas
jnp
test
and
lock
cmp
dec
insb
lds
fdiv
scas
push
jne
cmpsl
add
jb
xor
cmpsb
pop
nop
mov
fwait
int3
inc
aad
xchg
ds
ret
xor
mov
sub
xchg
jo
popa
adc
or
and
mulb
int3
push
jmp
jnp
pop
jbe
pusha
test
pop
sub
xor
mov
mov
inc
xorb
out
pushf
mov
fld
mov
shlb
pusha
cmp
icebp
in
cs
addl
push
fs
cmp
les
xchg
inc
out
pop
xor
jp
lods
sub
icebp
fwait
in
fucomip
ds
jo
aaa
jge
cmp
test
cwtl
scas
sbb
sbb
lock
pushf
mov
sub
inc
outsb
out
popf
xor
sar
movl
dec
addr16
and
mov
cmpsb
pop
mov
or
shlb
inc
inc
cmp
xchg
lods
repnz
and
or
cli
je
jno
mov
testl
addr16
dec
and
push
es
jo
mov
cs
cmp
fidivs
imul
jbe
add
pop
dec
and
jmp
lcall
jo
icebp
pusha
daa
mov
cwtl
push
lahf
inc
cmpsb
adc
push
adc
rclb
shlb
imul
lahf
loop
mov
xchg
test
js
mov
or
xchg
or
je
push
sahf
pop
cmp
mov
xlat
xor
or
rclb
jbe
das
gs
sbb
dec
shrb
sti
push
pop
jnp
aam
xchg
scas
leave
mov
mov
cmp
les
or
mov
imul
shlb
ja
dec
xchg
int
mov
push
and
ret
cmpl
jg
and
mov
dec
pop
sahf
sbb
sbb
xor
lcall
mov
mov
rcll
and
dec
xchg
sbb
ficomps
adc
rcrl
loopne
sub
cld
sub
sub
into
dec
or
jae
dec
lcall
pushf
js
and
add
aam
adc
dec
cmc
sub
xor
mov
mov
adc
lods
lock
adc
mov
inc
in
inc
shlb
push
subl
aam
push
sbb
fadd
pop
movsb
fs
fwait
push
sub
movsl
inc
xchg
sbb
mov
add
sbb
shl
xchg
outsb
push
adc
shlb
push
xchg
pop
or
push
mov
lods
xchg
lock
jge
sub
imul
mov
aaa
add
out
ja
scas
test
sub
inc
cli
mov
out
mov
and
fs
pop
sbb
mov
xchg
cmp
add
mov
add
jne
or
fs
push
lods
mov
or
xchg
pop
mov
dec
loope
lods
cltd
sub
dec
into
push
mov
lods
vmovlpd
gs
hlt
push
xchg
and
decl
pop
subl
adc
aas
sti
fidivl
shrl
das
push
repnz
dec
or
out
iret
jl
sbb
outsb
in
cmp
repz
dec
fldcw
sbb
push
and
insb
adc
rolb
push
pop
dec
lods
or
inc
jae
fnsave
rcl
dec
inc
inc
or
sub
fimull
icebp
or
es
inc
lret
insl
xlat
adc
aad
push
pop
sub
out
inc
aam
popa
divps
and
push
xor
andb
imul
stos
mov
pop
lret
xor
xchg
or
push
sar
insb
divl
sbb
add
out
lds
and
jb
adc
rorl
mov
xchg
push
push
aaa
aas
arpl
xor
mov
adc
adc
mov
add
ds
dec
lods
xor
mov
mov
hlt
dec
xchg
stc
inc
inc
mov
mov
in
stos
push
jge
out
add
call
inc
sub
mov
enter
filds
aas
inc
jo
stos
push
or
fiaddl
les
pop
das
mov
iret
ret
cs
mov
xchg
sub
sbb
arpl
xchg
lea
outsl
adc
cmp
push
imul
dec
jbe
bound
and
add
flds
leave
cwtl
xchg
cltd
loop
lret
mov
xor
cmp
sub
mov
imull
mov
pop
gs
lcall
pop
andl
rorb
push
cmp
push
and
rclb
or
scas
cmp
test
sti
mov
ret
adc
jne
push
sbb
and
repnz
mov
dec
outsl
sti
pusha
cmp
ficomps
fs
ljmp
aaa
sti
mov
fcomps
cmp
enter
jg
push
inc
shl
je
test
dec
or
sbb
jns
stos
ljmp
out
sbb
cmp
out
lock
mov
jmp
adc
push
inc
add
add
mov
pop
inc
xchg
stc
out
xor
das
xchg
inc
pop
aam
je
in
out
push
mov
fldcw
cmpsb
testl
mov
ljmp
pop
andl
sbb
int3
scas
cmp
and
adcl
mov
xor
loope
into
iret
jmp
lods
xchg
popf
sbb
pop
fninit
jnp
push
test
outsl
popa
add
cmp
aam
lret
fidivl
lea
iret
or
inc
mov
bound
arpl
adc
pop
sub
cli
mov
sub
cmp
stos
mov
cmpl
pop
pusha
repz
and
aam
xor
dec
sarl
ljmp
setne
xchg
mov
idivl
push
sbb
pusha
pop
or
push
xchg
std
mov
lods
add
fcomps
out
in
into
push
mov
fucomip
fmull
push
daa
xchg
mov
iret
in
pop
jne
cwtl
outsl
push
cld
pop
mov
cmp
rolb
ret
sbb
jns
enter
mov
add
insl
notb
xor
out
adc
cmp
les
xchg
xor
jmp
cld
push
cmp
fsts
icebp
fdivrl
js
and
pop
xchg
add
movb
dec
pop
lahf
lods
ljmp
popa
push
sti
mov
out
rcl
pop
adc
mov
stc
cld
fwait
stos
sub
cmp
jne
lea
pusha
xchg
dec
adc
je
inc
add
clc
aad
xchg
mov
sbb
xor
pop
dec
cmp
pusha
scas
aam
cwtl
jne
cltd
lahf
pop
movsb
mov
pop
jecxz
ljmp
aam
popf
push
push
outsl
cwtl
sub
jecxz
pop
pop
mov
sbb
lahf
pop
push
loopne
pushf
sbb
roll
fldl
jmp
popf
jbe
sub
adc
jp
stc
daa
fsub
loop
test
iret
add
jbe
push
aam
mov
pop
imull
mov
push
push
arpl
adc
push
jnp
mov
je
push
push
out
jg
mov
mov
add
fimuls
cld
orb
into
enter
out
mov
loopne
hlt
mov
test
dec
jl
stc
mov
inc
mov
xchg
dec
pop
mov
mov
outsb
test
or
mov
arpl
stos
mov
imul
pop
jo
test
test
inc
mov
xor
adc
leave
xor
sbb
sbb
cmp
jmp
dec
pop
inc
push
leave
xor
sub
cmp
enterw
int
add
call
or
arpl
filds
addl
jp
das
dec
out
cmp
xor
xchg
jecxz
test
or
xchg
mov
rorl
xor
lds
sub
mov
pushf
into
and
sbb
shrl
fyl2x
in
sbb
ss
push
or
scas
xor
rcl
adc
xchg
jl
out
lahf
mov
adc
je
xchg
cld
orl
cmp
dec
clc
flds
adc
inc
lahf
jg
dec
add
dec
mov
push
inc
push
fs
xchg
xor
mulb
sbb
and
mov
fcomps
addb
in
xor
stos
pop
shl
cli
mov
sub
insl
mov
clc
lret
add
pop
xor
sarb
push
adc
mov
aad
shll
xor
add
push
sbb
cwtl
mov
mov
rcrl
add
or
int3
cwtl
xchg
or
cmp
mov
sub
sub
addr16
adc
imul
or
iret
mov
adc
shr
inc
sbb
imul
sarb
pop
stos
lods
sarl
les
imul
sub
pusha
int3
mov
cmpsb
mov
jg
push
pop
dec
mov
ret
pop
mov
mov
daa
cmp
outsb
arpl
and
fstpl
fisttps
ret
scas
mov
xchg
call
jge
mov
mov
inc
pop
int3
or
bound
mov
push
repz
shlb
add
sbb
mov
mov
xor
mov
loop
orl
sbbb
push
cmp
outsb
cwtl
adc
jl
jecxz
cli
push
or
movsb
lods
lret
dec
pushf
outsl
pop
pop
fsubl
xchg
add
cwtl
lcall
arpl
mov
or
into
mov
sbb
mov
mov
xor
sub
imul
roll
mov
pop
jg
adc
pop
add
cwtl
sub
jne
mov
lock
and
cmc
fimuls
sbbl
or
std
push
lret
pop
jb
lcall
or
outsl
xor
lods
sbb
xchg
pop
xlat
stos
jge
sbb
outsl
xchg
xor
fidivs
sbbl
lods
cmp
inc
push
pushf
jno
xor
lods
xchg
in
xor
sbbl
fldenv
nop
faddl
daa
lahf
adc
inc
in
out
pop
xchg
ret
in
in
sar
push
loopne
inc
in
lret
lock
add
push
adc
popf
push
iret
test
iret
xor
xor
add
negl
fidivrs
jge
inc
adc
fsts
mov
das
scas
jp
imul
sbbl
out
push
push
std
sbb
xor
out
or
outsl
push
ds
and
into
or
cmp
jmp
insl
adc
sarl
loopne
xor
popa
sbb
cmp
sub
inc
das
sbb
icebp
fnstenv
xchg
mov
dec
jno
xchg
popf
sub
je
xor
sub
mov
push
scas
test
ljmp
popf
jnp
jge
cmp
cmpsb
dec
into
jo
dec
scas
mov
aas
lock
ds
stos
xchg
pop
and
xchg
or
cltd
cmp
and
hlt
inc
sbb
lds
pop
sub
mov
test
xor
iret
jmp
sbb
decl
mov
mov
test
lods
outsl
mov
jp
dec
rorb
xchg
fcmovb
lods
push
mov
jns
out
xor
push
inc
fidivrs
aam
push
sub
in
mov
sbb
call
mov
mov
das
xor
dec
pop
dec
mov
dec
dec
push
in
jmp
push
rcrl
pop
out
lret
push
xor
mov
xor
push
stc
xor
jo
div
xchg
inc
imul
lahf
push
xchg
fst
push
mov
movsl
xlat
sub
cltd
nop
cltd
mov
scas
cs
add
or
add
daa
mov
push
add
mov
push
push
dec
mov
mov
jecxz
cltd
and
xchg
inc
shll
push
push
bound
sti
fsubl
js
loop
cltd
sbb
out
xchg
xor
sbb
into
inc
inc
dec
dec
lods
neg
and
sbb
loop
dec
pop
dec
push
mov
add
push
adc
sbb
jg
adc
mov
and
or
lea
xchg
or
scas
cmp
ds
pushf
shrb
jo
aas
jns
sbb
and
hlt
les
and
pushw
leave
mov
fists
in
add
mov
fisubrl
jns
rorl
pop
je
dec
xorb
xchg
jb
xchg
in
push
xor
gs
mov
lcall
mov
sbb
mov
cmpsb
jle
add
in
xchg
xor
aas
jp
jl
push
lret
loop
mov
shr
loope
hlt
shlb
pusha
mov
clc
dec
xchg
and
sub
outsl
rcr
sbb
mov
dec
pop
push
mov
imul
xchg
orb
mov
int3
adc
test
das
and
or
add
mov
clc
fcmove
imul
lret
xor
int
add
mov
lret
sbb
add
ret
jg
or
xchg
scas
and
xor
xor
mov
add
inc
sahf
or
ss
cwtl
and
push
push
and
inc
and
push
mov
push
lcall
in
fistl
sahf
ret
xchg
gs
xor
in
roll
stos
add
xchg
mov
shl
ss
in
or
ljmp
add
sar
jl
out
dec
sub
hlt
test
fs
lret
sub
adc
aam
mov
inc
inc
mulb
mov
sbb
xchg
fnstenv
sub
mov
xchg
sbb
mov
imul
out
fwait
mov
and
mov
xchg
xchg
fsubp
xor
cmp
jne
jle
testl
fldt
add
or
push
icebp
mov
addb
shll
je
ret
pop
test
mov
inc
scas
push
sub
fsts
pop
adc
jnp
xor
js
mov
and
jg
sub
lret
sbb
cmp
xor
addr16
jnp
aad
into
test
or
pop
jge
and
fstl
sbb
push
and
shll
lcall
mov
adc
add
push
jae
int
cmc
inc
repnz
jl
shl
push
xchg
loope
cmp
std
pusha
pop
xchg
xlat
lcall
xchg
sbb
mov
mov
add
mov
and
pop
mov
ja
mov
add
testl
inc
test
or
mov
sbb
sub
dec
sub
pushf
jns
dec
mov
ret
and
jp
mov
push
push
jl
js
les
pusha
insb
loope
jo
in
popf
cmpsb
daa
loopne
lods
jb
or
or
pushf
pop
imul
or
outsb
nop
in
pushf
cmpsl
dec
cs
and
inc
rorl
lods
push
sub
cmc
nop
push
xor
add
push
scas
add
inc
lods
cmpsl
adc
dec
popf
icebp
repz
iret
xchg
mov
testb
es
jo
loop
and
sti
sbb
je
hlt
jge
pop
enter
fwait
out
lret
clc
gs
xor
repnz
scas
mov
dec
test
jae
push
mov
enter
push
arpl
xor
mov
xor
ret
xchg
pop
jbe
xor
inc
jo
sbb
push
mov
cmp
call
or
ljmp
sub
imul
aas
insl
push
sbb
gs
pushf
filds
push
sbb
in
xchg
ror
scas
pushf
lea
push
sub
push
push
sbb
into
xchg
scas
mov
outsb
jnp
xor
jae
pop
pop
lea
xor
mov
nop
js
rclb
cli
fs
iret
push
stos
movsb
pop
xchg
lods
addr16
out
or
scas
arpl
sbb
sbb
lret
add
push
leave
adc
cmp
les
mov
sarl
cmp
mov
push
xchg
orl
inc
out
test
sbb
rorl
cmp
xchg
cli
sarb
mov
mov
fldenv
mov
xchg
dec
and
jmp
rolb
mov
loopne
daa
ja
es
sub
sbb
bound
xchg
pop
mov
fimull
mov
and
jle
shlb
lcall
mov
leave
or
test
adc
xchg
nop
enter
out
lock
ret
jl
mov
push
sbb
mov
adc
push
sbb
fadds
imul
clc
popf
inc
int3
bound
push
jae
push
lcall
and
mov
int3
ljmp
ljmp
pop
rolb
mov
adc
rcll
arpl
mov
mov
fldl
or
fldt
shlb
pop
int3
jl
mov
lods
cmpl
pop
repz
movsb
and
or
sbb
xchg
add
cs
push
popa
and
mov
popa
mov
in
sbb
pop
dec
es
dec
sahf
outsl
dec
shl
adc
stos
imul
add
xchg
mov
loop
dec
adc
fs
in
jbe
scas
jp
lods
xchg
loope
aas
iret
enter
jae
xchg
stos
js
mov
pusha
repz
add
xchg
in
add
sbb
inc
xchg
repnz
sub
sub
cmp
aas
aam
xchg
sub
clc
mov
mov
or
loopne
data16
ljmp
bound
lret
add
mov
push
hlt
outsl
pop
pop
call
push
icebp
enter
imul
dec
and
test
shrl
pop
lds
popf
pop
jge
aam
inc
outsb
push
in
adc
aas
ljmp
sbb
add
add
mov
std
rcr
ret
adc
mov
mov
jl
sbbb
pop
out
cmpsl
and
or
push
push
or
adc
jmp
pop
pop
lea
xor
adc
jmp
int
xchg
andl
jge
and
pop
and
lahf
mov
xor
bound
ljmp
sub
jo
mov
mov
aad
data16
in
imul
bound
cmp
mov
sarb
and
and
fisubs
pop
in
pop
sub
repz
cmp
shll
and
push
push
or
push
lods
pop
insl
cwtl
pop
mov
dec
pop
add
mov
mov
cmp
jl
fisubl
inc
jns
call
iret
aad
inc
or
cmp
aaa
xchg
cmp
cltd
push
inc
jbe
or
and
ss
in
shrl
insl
mov
cmpsl
xor
dec
xchg
and
mov
adc
mov
sbb
mov
dec
sbb
inc
or
mov
int
aad
shll
cltd
test
aad
inc
pop
sbb
jecxz
pop
pop
das
xor
inc
push
xchg
lods
pop
aam
fldenv
adc
cltd
mov
or
push
xorl
jl
push
xchg
sti
and
cmp
orl
and
out
rep
push
fists
daa
xlat
xchg
xchg
sub
xchg
out
sub
and
out
pushf
mov
lods
push
fsubrs
push
mulb
movsl
xchg
mov
dec
jb
push
jmp
pop
mov
push
dec
test
xor
rcll
or
std
fsts
cmc
scas
mov
inc
lods
aaa
inc
jle
movsl
jne
imul
pop
xchg
add
mov
sbb
xor
push
popf
dec
push
test
sbb
mov
mov
jbe
pop
xchg
or
cltd
push
dec
aam
mov
ds
adc
aaa
mov
jo
xor
inc
add
es
cmp
fisubl
jmp
negb
sub
inc
in
loopne
lret
in
aam
lods
xor
mov
sub
dec
jne
sub
cli
sbb
xchg
ficoml
sarb
movsl
cltd
sub
das
xor
movsl
or
inc
imul
dec
add
xor
cmpsb
dec
mov
dec
ss
dec
cld
mov
jns
dec
jecxz
adc
or
int
fsub
sbb
pushf
cmc
testl
hlt
orb
jle
outsb
pop
xchg
sub
sbb
pop
and
mov
or
inc
add
mov
mov
js
sub
fiaddl
mov
stos
jecxz
repnz
cmp
jg
dec
mov
dec
jecxz
sub
sbb
movsl
pop
scas
mov
ret
lahf
ljmp
push
cmpsb
mov
outsl
cmpsl
lcall
js
inc
outsl
aad
mov
sub
daa
cmpsl
push
dec
pop
add
inc
dec
dec
sub
add
es
jne
and
xchg
orl
aad
pop
xchg
fcmovb
jl
imull
cwtl
push
ljmp
stc
pop
pop
jecxz
sub
xor
dec
xor
or
jo
jnp
xchg
popa
mov
shrb
jge
fiaddl
cmp
out
sub
aas
xor
sub
rcrl
shlb
push
movsl
flds
dec
dec
je
or
mov
jmp
cmpsb
cltd
outsl
sbb
movsl
lods
jmp
jmp
sbb
or
or
xchg
or
insl
mov
mov
popw
push
nop
das
pop
jns
loope
sbb
jmp
test
lods
imul
outsl
mov
mov
inc
aas
adc
and
fisubrs
int3
js
jg
mov
or
sbb
jg
stos
out
or
arpl
int3
mov
mov
enter
xchg
pop
cs
sub
idivl
sbb
int3
addl
xchg
sar
mov
movsb
les
or
adc
clc
and
push
push
push
inc
cmp
xor
xchg
sub
nop
imul
mov
shll
mov
sub
fildl
loop
or
enter
lods
xor
ret
outsl
or
mov
dec
out
test
mov
pop
pop
jne
in
mov
dec
xor
loope
xor
mov
mov
cli
lcallw
xchg
test
std
jp
xchg
imul
bound
cltd
das
je
outsl
pop
mov
xor
sbb
sti
adc
jge
in
xchg
fldcw
movsb
cmp
cs
mov
repnz
pop
pop
fldcw
sub
adc
rorl
int
jle
imul
jge
icebp
mov
adcl
push
dec
inc
rcrl
pop
sbb
lcall
js
out
add
mov
dec
ret
pop
mov
lds
out
push
testl
rorb
and
mov
dec
lcall
adc
pushf
repnz
and
jmp
sub
enter
sti
sbbl
das
cmpsb
mov
popf
mov
mov
xlat
mov
mov
shl
loope
xor
into
add
and
int
sbb
adc
add
sub
cmp
lods
stos
jbe
cltd
cmp
das
subb
jo
fdivs
iret
inc
imul
sub
imul
jl
xor
fsubs
out
cmp
cmp
sub
mov
sub
pop
or
shl
into
mov
and
pop
mul
mov
push
pusha
leave
stc
sbb
mov
jl
arpl
andb
push
mov
cmp
stc
ss
push
aas
lret
pop
subb
pushl
sub
mov
push
cld
jns
mov
shll
jmp
push
addr16
int
nop
enter
testl
inc
idiv
xlat
fmull
and
xor
xor
xchg
shll
pop
lcall
jb
jns
dec
push
nop
nop
inc
test
insl
xchg
push
leave
pushf
sbb
jp
lea
or
mov
outsb
inc
add
dec
push
jg
gs
cmp
xor
fnsetpm(287
repz
sub
push
pusha
loope
icebp
aas
cmp
scas
sahf
jb
inc
lahf
or
flds
mov
jle
mov
mov
pop
inc
icebp
pusha
jecxz
clc
sub
jg
or
sbb
sub
jbe
pop
dec
and
xor
pmaxsw
pop
lret
push
add
cmpl
pop
push
jge
out
ret
push
mov
sub
sbb
aaa
or
fsub
cli
data16
pop
mov
jp
fildl
pushf
scas
or
notl
std
addb
adc
fildll
dec
jne
lea
lret
outsl
jecxz
imul
cld
cmc
pushf
mov
jae
fldl
hlt
pop
mov
lods
loope
or
lods
shl
xchg
mov
and
xor
jmp
lods
jle
das
ret
mov
ljmp
lock
add
dec
cmp
sub
leave
inc
dec
out
jbe
fisubrl
aas
clc
inc
outsl
ds
dec
xor
test
stos
mov
xlat
pop
int3
sub
xchg
inc
xlat
push
mov
aaa
mov
sbb
cmp
inc
loope
mov
dec
mov
dec
or
lock
cmpsb
test
adc
js
rolb
out
mov
add
fucomi
addb
cwtl
out
inc
cmpsl
push
cmp
fisttps
js
leave
jo
add
xchg
cmp
jmp
mov
in
arpl
das
cli
dec
addl
negb
ja
jecxz
xchg
jmp
cmp
inc
cmc
js
and
xchg
sub
imul
mov
aam
dec
cmpsl
mov
or
pop
ds
adc
pop
mov
pop
add
mov
sub
hlt
add
adc
pop
jecxz
adc
and
shrb
inc
mov
cmp
adc
lcall
divl
add
cmp
and
sub
xchg
daa
pushf
ret
cli
jp
cmovno
push
ss
pop
push
cmp
cmpb
sub
jmp
push
mov
pop
jne
loop
jp
mov
add
ror
arpl
loope
mov
adc
or
cld
jae
inc
mov
jp
dec
pop
xchg
leave
and
pop
xchg
sarb
dec
lods
movsb
cmp
inc
or
sbb
mov
lods
stos
xlat
pop
jnp
fbld
jecxz
fwait
xchg
xchg
fildll
sahf
push
jle
loop
cmp
push
shll
test
jecxz
daa
mov
add
in
andl
cli
stc
aas
nop
sbb
mov
out
pop
mov
cmp
mov
test
test
push
shll
pop
jnp
pusha
xchg
jae
pop
ja
or
inc
idiv
out
push
fstpl
cmp
aas
adcl
andl
sbb
xor
aaa
sbb
sahf
mov
xlat
movsl
add
insl
mov
fldenv
cs
fisttpl
lods
sbb
mov
testl
daa
sahf
sbb
mov
xchg
sub
enter
jmp
mov
popa
dec
add
sbb
pop
mov
xchg
fsubp
jle
cld
aad
mov
hlt
mov
mov
mov
mov
xchg
lods
and
sbb
movsb
sub
outsl
pop
sub
dec
xchg
rcl
adc
fstpt
inc
or
mov
in
add
jle
push
gs
or
jnp
adc
nop
push
lock
fwait
nop
or
mov
mov
adc
ds
mov
dec
inc
adc
incl
gs
fwait
mov
cmpsb
sbb
in
inc
xchg
or
add
mov
lahf
adc
add
lods
sub
loope
out
lahf
fldt
test
outsl
and
aaa
imul
int
cs
clc
scas
jne
andl
in
xchg
push
push
sahf
das
pop
xchg
pop
adc
sarl
or
stos
inc
pop
mov
int3
loope
std
cmp
aaa
in
jnp
out
ret
xchg
fsts
or
push
dec
or
sbb
pop
jle
jge
mov
pop
jecxz
push
adc
pusha
loope
mov
sahf
cmp
fucomip
clc
mov
imul
sahf
lods
add
fsts
pop
andl
icebp
int3
int3
add
mov
inc
dec
sub
inc
lods
test
shr
dec
mov
psubusb
cmp
push
inc
aad
pop
and
pusha
mov
add
bound
stc
mov
jae
lods
loopne
mov
and
js
or
mov
adc
iret
inc
xor
dec
push
in
sahf
mov
inc
sbb
xor
mov
pusha
pop
xchg
push
jl
push
xchg
fpatan
pop
lods
shll
xchg
or
jmp
sbb
mulb
out
ret
jae
jae
push
push
sub
stos
xchg
jl
add
les
jge
into
push
push
data16
jo
dec
insb
stc
mov
adc
ror
aam
mov
mov
push
shr
xchg
mov
add
into
adc
bswap
xchg
xor
lret
shll
push
aaa
push
lds
roll
aad
stos
js
jle
popa
je
or
mov
sub
in
push
stos
bound
shrl
cmp
call
cmc
dec
repz
push
dec
xor
sbb
ret
jge
addr16
xchg
subl
sbbl
sbb
xchg
aad
bnd
stc
mov
ret
dec
sbbb
xchg
aad
imul
insb
mov
decl
cmp
cmp
adc
cli
roll
scas
inc
or
fistl
push
ss
popa
inc
jge
aad
outsb
jnp
cmpsb
inc
jmp
jo
push
pop
pushf
shrb
add
xor
fdiv
sbbl
add
mov
cmp
xor
es
sbb
xchg
fistps
aas
hlt
mov
jne
mov
mov
in
or
and
mov
ds
lret
sub
and
test
movsl
daa
shlb
xchg
inc
inc
lds
add
icebp
dec
lret
sarb
stos
mov
popf
in
rcrw
mov
xorb
sub
adc
mov
gs
iret
popf
fs
sti
out
rorl
add
xchg
and
in
adc
out
xor
jg
jge
arpl
xchg
negl
fisubs
mov
mov
sbb
jb
mov
mov
push
adc
pop
and
std
add
pusha
or
mov
loope,pt
test
pop
roll
lock
dec
or
lcall
inc
ss
or
xchg
jl
subb
adc
aam
xor
lock
mov
mov
dec
or
cld
and
add
les
and
xchg
sub
repnz
push
dec
movsb
outsl
rorl
mov
mov
inc
ds
rcrb
mov
adc
test
pop
xor
test
lods
loop
sahf
ljmp
sbbl
call
push
mov
push
mov
out
xor
sub
push
repnz
fs
pop
xor
xor
cmp
jo
mov
inc
push
cmpl
pop
cmp
scas
mov
add
jle
lods
mov
mov
outsb
lods
xor
popfw
cmc
movsl
mov
loop
loopne
sbb
andl
xor
mov
adc
test
push
and
cmpsl
xor
daa
cmpsb
dec
or
dec
shlb
mov
je
lods
cltd
test
xchg
out
mov
sbb
loopne
nop
pop
idivb
sbbl
lods
aam
aas
jnp
repnz
pop
and
cmp
jnp
and
fstps
arpl
cwtl
cmp
out
xchg
sub
fisubl
xlat
lods
imul
imull
fisubs
mov
out
insl
stos
mov
pop
popf
repnz
loope
mov
xor
test
inc
xor
in
mov
push
ror
cmc
xchg
xchg
outsl
insb
mov
pop
pop
adc
mov
and
stc
inc
push
push
arpl
jno
mov
rcr
fldt
fwait
sub
pusha
lret
test
push
out
leave
test
jae
or
ja
sub
call
enter
sti
pop
daa
mov
pop
cmp
cmpsb
es
outsb
jmp
xchg
or
pop
out
loopne
cmp
lock
inc
aad
add
mov
lahf
push
lods
call
out
fs
loop
test
mov
lahf
or
mov
xchg
cld
pop
push
leave
mov
sbb
sbb
shlb
and
add
aaa
test
stos
data16
jg
jle
std
popf
jg
inc
pop
sbb
shlb
ja
js
jb
pop
cs
inc
push
mov
sbb
jo
add
je
or
xchg
ds
cmp
mov
xchg
push
daa
outsb
addr16
sahf
xchg
imul
jle
jns
mov
icebp
int
mov
mov
dec
je
fwait
pop
adc
mov
mov
dec
cmc
inc
gs
popf
mov
jnp
aas
mov
cmpsb
lea
aas
repz
dec
inc
pop
mov
cwtl
lret
push
in
popf
dec
pop
mov
mov
mov
cld
leave
mov
sub
fmul
cmp
and
cld
inc
rolb
sarl
notb
out
nop
ret
mov
jl
roll
arpl
pop
xlat
rcrb
ret
out
push
adc
sub
pop
inc
mov
jnp
sti
mov
lahf
mov
clc
sub
sahf
cltd
repnz
fchs
inc
fsubl
mov
dec
loope
add
sbb
mov
ret
in
mov
out
xor
cwtl
repnz
jbe
pop
shlb
pop
fs
imul
js
mov
test
mov
sti
jno
aad
dec
aas
insl
push
add
xchg
les
shll
rorl
or
popa
jno
xor
cmp
movsb
movsb
dec
out
or
bound
dec
add
test
jns
mov
add
je
ljmp
mov
push
gs
pop
test
push
xchg
fistps
mov
mov
fiaddl
daa
push
fdivrs
pop
dec
pop
mov
mov
aam
push
adc
adc
xchg
roll
jo
push
int
enterw
mov
mov
iret
or
push
sbb
push
aas
int
stos
push
or
push
into
insb
sbb
add
sub
or
lods
mov
xchg
sbb
pop
movsb
ffreep
xor
int3
mov
fidivrs
dec
mov
push
mov
movsl
push
and
jnp
out
cs
add
lahf
mov
push
das
test
sub
sbb
loopne
pop
fadds
out
scas
adc
dec
cmp
mov
loopne
inc
push
aam
into
lret
adc
jne
jno
cld
cmpsb
add
pop
stos
pop
scas
aam
jbe
ss
push
or
arpl
enter
int
cmpb
test
or
add
int3
and
adc
adc
jl
mov
cmp
bnd
test
push
pusha
nop
jae
mov
movsl
out
add
or
out
inc
or
add
jecxz
es
cwtl
daa
aam
pop
inc
push
aad
mov
sbb
arpl
pop
xlat
test
adc
push
popf
mov
stos
push
push
sbb
lock
hlt
ljmp
cmp
or
mov
rol
idivb
push
sbb
arpl
mov
inc
nop
fimull
mov
rorl
inc
pop
add
mov
jno
mov
jno
adc
mov
jno
jo
xor
roll
push
inc
xlat
imul
cmp
xchg
push
xor
pop
mov
and
ja
mulb
add
js
cmp
packuswb
divb
dec
lahf
dec
ja
lret
arpl
dec
jmp
getsec
loope
push
xchg
clc
div
add
mov
pop
xchg
nop
pushf
mov
pop
imul
fisubrs
jne
xchg
mov
imul
in
dec
gs
adc
shrb
jnp
mov
cld
dec
cmc
dec
add
add
fmulp
std
push
add
mov
mov
hlt
pop
add
ret
xchg
push
and
sbb
inc
jecxz
je
ds
pop
decl
sbb
ret
and
sbb
test
les
pushf
cmpsl
sub
and
pop
inc
sub
sti
lods
iret
or
mov
push
or
xor
pop
adc
mov
repnz
pop
jp
push
or
mov
fst
scas
dec
mov
jb
jmp
repz
in
imul
shr
dec
dec
lock
mov
xor
movsb
mov
rorl
sbb
xchg
jnp,pn
arpl
movsl
xorl
xchg
pop
fld1
insl
pop
cmp
xor
inc
out
fldt
fnstsw
cs
mov
mov
mov
mov
nop
push
mov
mov
mov
pop
cmp
in
ss
pop
push
in
add
loop
mov
out
ret
pop
dec
adc
xor
push
xchg
enter
sbb
jbe
sub
dec
ret
movsb
cmp
jb
scas
in
dec
clc
pop
subl
rcrb
shr
push
data16
or
shr
inc
mov
dec
push
movsl
mov
or
xchg
imul
mov
rorb
in
adc
testb
pop
adc
sbb
lock
pop
imul
leave
scas
pop
imul
or
arpl
xchg
stos
mov
jo
inc
ja
loopne
mov
inc
and
sbb
int3
int
mov
insl
cltd
add
sub
pop
loopne,pt
adc
in
cvttps2pi
jg
fwait
adc
out
mov
cmp
mov
add
lds
adc
mov
paddw
mov
xchg
out
add
xor
jg
ljmp
lret
ja
addr16
sbbb
or
mov
or
adc
sti
inc
or
pop
cs
jl
inc
test
add
aam
cmp
roll
loope
xor
pop
dec
mov
adc
mov
jns
sub
call
test
mov
push
pop
xor
pop
filds
cmp
mov
xor
mov
insb
loope
cmpsl
outsl
push
inc
dec
xor
sub
cmp
pop
xchg
push
cli
ret
sbb
pop
dec
mov
test
add
andb
aam
out
mov
sub
cmp
xor
lret
sbb
adc
mov
add
data16
mov
fbstp
pop
rorb
mov
cmp
inc
push
jbe
mov
inc
add
and
dec
pop
out
mov
jnp
sbb
fs
and
and
cmp
xor
cmp
xchg
or
or
mov
inc
jae
inc
jl
sti
ljmp
jle
outsb
mov
hlt
jnp
jl
push
popf
cld
hlt
or
je
and
fs
dec
adc
mov
or
xor
sbb
xor
push
clc
adc
leave
repz
scas
shlb
jl
dec
sbb
lods
pop
inc
test
pop
in
test
in
bound
jo
movsl
shll
inc
call
pop
rol
and
mov
les
sarl
xchg
inc
mov
jnp
push
sub
loope
xchg
xlat
sub
stos
lret
cmp
test
xchg
iret
xchg
bound
cmp
pop
sub
lret
lods
adc
rcr
push
in
cmp
rcrl
mov
xorb
pusha
imul
adc
sub
push
cli
jg
movsb
aad
jns
sbb
sbb
insb
rcl
cmp
loope
das
cmp
jo
notl
adc
sub
test
ret
and
jne
popa
xchg
push
out
inc
xchg
in
push
jbe
test
bound
testb
pop
sub
mov
add
hlt
adc
mov
pop
inc
jecxz
addr16
pop
aas
jb
xchg
jno
jl
mov
mov
mov
scas
or
fwait
rorl
push
ret
mov
mov
addb
lret
repz
outsb
orl
or
mov
rorl
cwtl
ret
adc
and
enter
and
dec
fsubrs
dec
cmc
aaa
mov
or
mov
or
fstpl
in
jle
adc
in
jge
inc
lods
shlb
fdiv
xchg
dec
aas
sub
xlat
outsl
aad
sbb
ss
and
pop
stos
fbstp
sbb
or
jae
xrelease
test
rclb
stos
popf
or
leave
pop
clc
xor
sbb
inc
in
fidivrs
insl
mov
mov
mov
repz
fidivrl
movsl
mov
add
lcall
inc
in
mov
jge
outsl
fiadds
ret
outsl
dec
and
cmp
test
or
mov
pop
mov
push
scas
aas
mov
push
xchg
and
arpl
add
in
pop
insl
data16
inc
cld
cltd
ljmp
or
movsl
fstl
rcr
adc
mov
sub
idivl
testb
ljmp
in
mov
cltd
or
inc
test
push
mov
add
push
adc
add
dec
leave
test
mov
mov
mov
xchg
mov
mov
adc
push
hlt
sbb
outsl
addl
mov
les
xchg
mov
rcll
sti
je
mov
mov
sbbb
fnstenv
lock
and
add
push
push
mov
stos
xchg
mov
lods
cmp
jbe
mov
hlt
jb
mov
loop
sub
xchg
or
jp
ret
cmp
add
int
sub
pop
shl
scas
cmp
mov
lods
fmul
mov
or
bound
push
inc
inc
dec
aaa
mov
pop
adc
sub
stos
aaa
mull
push
mov
xchg
fnstenv
inc
mov
mov
cli
lods
int
mov
push
sahf
sub
pusha
mov
push
adc
mov
sar
call
mov
xchg
pop
xchg
jbe
movsb
sub
mov
ss
mov
data16
shll
ljmp
repnz
mov
scas
leave
adc
jnp
imul
sbb
mov
add
insl
xor
push
ss
les
add
stos
inc
jg
sahf
or
rcll
adc
sub
dec
push
cmp
push
xchg
stc
in
jecxz
movsl
xchg
mov
jge
int
sbb
pmullw
loop
insb
sub
mov
jo
aaa
dec
test
jle
orl
or
jae
cmp
mov
fisubrs
xor
and
jo
nop
push
test
ljmp
sbb
mov
test
pop
jbe
cmp
xchg
inc
sub
cmp
lret
cmpsb
jg
mov
sbb
xchg
scas
stc
mov
lods
movsl
jge
and
sbb
rcrb
loop
cmc
pop
and
dec
test
or
scas
cli
into
xlat
ljmpw
mov
ss
in
sbb
mov
roll
sub
loope
cmpb
cltd
mov
sub
imul
test
je
add
inc
cmp
mov
stos
pop
icebp
insl
pop
jb
mov
movsb
mov
sbb
jecxz
mov
imul
rolb
pop
mov
xlat
xor
clc
push
sar
xchg
dec
inc
xor
sub
mov
cmp
in
addr16
lcall
or
or
mov
fildll
es
inc
ja
fildl
lock
stc
sub
cmpps
aad
test
out
ljmp
fwait
sbb
xchg
pop
ja
cmpsl
pushf
mov
adcl
cli
push
out
mov
or
rcl
inc
cmp
mov
loopne
std
fistpll
mov
test
add
push
jnp
xchg
dec
stos
aas
bound
sub
outsl
lret
movsb
jbe
xchg
push
repz
fcoms
aaa
push
ds
push
into
dec
aad
out
xorl
push
mov
inc
inc
iret
in
xchg
push
xchg
stos
pop
outsl
jne
scas
in
jo
sbb
mov
js
inc
inc
sbb
adc
mov
add
repnz
popa
incl
mov
xor
andl
test
sbb
movsb
cmp
sarl
jmpw
xchg
pushf
xchg
out
cmp
int
inc
lock
aaa
jge
dec
cli
rorb
lods
mov
xchg
adc
jb
aaa
add
pushw
or
dec
jns
movsb
clc
std
aad
mov
and
enter
data16
jb
ficompl
dec
mov
adc
adc
gs
gs
or
pop
shll
pop
les
into
pop
data16
jne
ret
xorb
stos
cmp
outsl
pop
mov
sahf
cmp
mov
xlat
gs
jmp
cli
into
test
fs
pop
imull
cmp
in
inc
pop
sarl
jle
sbb
mov
fwait
or
lahf
rorb
mov
push
lods
ss
xor
xchg
xor
sub
and
mov
jecxz
in
mov
outsl
mov
pop
outsl
push
mov
inc
cs
fs
pop
jl
addr16
push
lret
add
push
mov
aam
repnz
sbb
fstps
or
xchg
pusha
lahf
je
mov
mov
lret
outsb
pop
inc
shll
sub
dec
mov
jo
add
add
sbb
mov
adc
mov
lods
pusha
fidivrl
mov
or
jecxz
jecxz
or
fisubs
aad
rolb
push
in
inc
loope
sub
or
inc
fld
cmp
inc
xchg
push
lret
xchg
inc
and
test
addr16
out
outsb
push
rolb
pop
sub
pop
and
rcrb
cmpb
adcb
add
pop
ret
inc
jae
jecxz
add
xor
and
xchg
aas
pusha
filds
loop
sbb
dec
popl
ljmp
mov
outsb
sti
loope
sub
insl
pop
loop
in
icebp
cld
mov
cs
adc
jmp
and
and
jae
jecxz
out
sti
xor
dec
fcmovnbe
sub
std
sar
sbb
inc
sbb
gs
cmp
loopne
aas
iret
pop
pop
xlat
push
cmpsl
sbb
mov
shlb
adcl
repnz
jmp
dec
mov
imul
into
push
push
ret
mov
shlb
mov
lcall
sahf
mov
cmp
ljmp
adcb
adc
xchg
pop
scas
sbb
inc
inc
or
mov
adc
jge
cld
ficoml
pushf
orl
add
and
cltd
popa
cmp
push
add
mov
xchg
sbb
mov
mov
inc
js
test
pop
pusha
dec
jb
cmp
movsb
out
dec
jge
out
mov
cld
sub
in
mov
in
jmp
or
xor
mov
out
or
in
cld
inc
push
test
mov
aam
addb
xor
std
sub
lods
data16
shrb
pop
cwtl
ret
and
lcall
or
out
mov
cwtl
xor
mov
in
mov
lret
jg
sub
jl
add
mov
and
add
jl
mov
fcoms
shrl
jge,pn
jne
sub
adc
fldt
and
push
jae
mov
fdivs
pop
sti
xchg
mov
rcrb
pop
shll
sbb
inc
iret
sahf
in
ret
mov
imul
ss
into
arpl
movsl
cmp
mov
mov
scas
fdiv
xchg
push
push
stos
stc
jle
and
jmp
xchg
sub
mov
add
pop
xlat
int
into
and
repnz
mov
xchg
inc
mov
outsl
lds
add
and
jmp
iret
mov
cmp
cmpsl
scas
add
mov
bound
xchg
push
cld
xchg
out
and
push
xchg
add
push
adc
adc
int
shll
hlt
aaa
push
or
pop
hlt
lods
jle
pushf
lods
shr
push
sub
leave
lcall
sarl
pop
push
add
add
pop
cs
loop
jae
hlt
mov
xchg
lret
sbb
lret
and
pusha
leave
shlb
mov
jg
ret
jo
dec
fistpl
mov
cmpsl
and
scas
xchg
mov
mov
add
pop
jmp
sbb
mov
cmc
or
int3
scas
jmp
js
fwait
iret
add
cmpsl
clc
fwait
subl
push
les
adc
or
leave
enter
in
and
sub
pop
jecxz
cmpsb
iret
and
cmp
mov
dec
inc
out
mov
cmp
icebp
pop
ret
mov
cmp
push
cwtl
cmp
mov
out
sahf
pop
mov
dec
mov
or
xor
stc
mov
add
mov
int
shlb
ds
pop
and
jg
sub
jp
xor
add
shlb
ret
call
inc
mov
out
or
fsubr
call
jg
rorb
push
popa
mov
add
and
pop
cs
int
movsb
in
shrl
cli
lds
stc
mov
movsl
loopne
aam
in
sbb
hlt
daa
popf
stc
scas
dec
sub
push
mov
call
adc
sub
ret
iret
fst
mov
loop
xor
jnp
aam
in
sub
iret
lea
push
jns
fs
hlt
stc
dec
inc
adc
jmp
sub
xchg
stos
cmp
cmp
mov
test
push
out
jge
fwait
mov
mov
movsl
imul
lahf
jge
pop
ljmp
xchg
pop
outsb
cwtl
cmp
sbb
cmp
fiadds
dec
mov
sub
xchg
cltd
and
mov
outsb
ret
add
inc
add
data16
cmp
mov
movsl
mov
shll
stos
ss
or
andl
inc
and
dec
imul
mov
or
mov
dec
inc
dec
push
clc
popf
fldl
test
push
std
inc
pop
or
jbe
pop
iret
xchg
mov
inc
inc
add
movsl
addr16
add
mov
mov
xchg
movsl
sbb
inc
std
dec
pop
int3
iret
mov
in
mov
cwtl
and
pop
idiv
insb
mov
icebp
test
sub
cs
adc
adc
loopne
jns
lds
push
push
pop
mov
jae
dec
sub
jge
setne
imul
pandn
outsl
shll
jb
rorb
xchg
sahf
cmp
out
ret
aaa
in
movsb
notl
jle
mov
xor
cld
pop
and
cmp
xchg
lcall
in
ja
bound
jge
jmp
cmova
and
pop
enter
outsl
icebp
cli
pop
hlt
mov
mov
cmpb
dec
jno
add
and
int
pop
aam
jns
or
gs
mov
inc
jno
imul
test
and
sti
fiadds
pop
pusha
pusha
insl
mov
push
adc
cwtl
dec
or
bound
dec
push
xchg
inc
nop
insb
lcall
mov
repnz
mov
orl
push
addb
bound
xor
stos
push
out
mov
mov
test
inc
scas
inc
cmpsb
test
int
dec
mov
or
rclb
pop
or
cli
push
shlb
pop
inc
lock
aas
ss
add
stc
xor
mov
icebp
loope
mov
int
push
jl
pop
jmp
ljmp
or
add
stc
icebp
mov
out
mov
jne
cltd
jmp
in
stos
mov
sub
ror
jnp
test
jle
loop
mov
and
in
push
adc
dec
sub
f2xm1
pop
jge
mov
mov
test
lods
dec
xlat
int
mov
fimull
jo
and
mov
or
sbb
xchg
insb
loope
adc
out
pop
lcall
xlat
sti
xor
iret
std
mov
test
stos
dec
loop
lret
imul
test
jg
loop
xor
xchg
in
fcmove
mov
aad
xlat
xor
cmpsl
jp
repnz
repz
inc
xor
out
mov
mov
adc
mov
fwait
xchg
call
movsb
and
mov
push
sub
inc
cs
push
movsl
mov
jle
and
mov
and
jae
imul
aaa
push
lahf
cmpl
xchg
std
inc
shlb
inc
lock
pop
or
pop
movsl
or
insb
es
out
cs
pushf
insl
push
test
cmp
mov
xor
mov
add
xor
xchg
fdivl
arpl
mov
dec
movsl
mov
call
pmaddwd
rcll
cmpsl
xorl
pop
imul
inc
jno
divb
test
out
lret
push
int3
adc
cli
sub
iret
fdiv
pop
imul
loopne
ja
inc
lret
filds
out
fimull
and
add
jge
test
xchg
jns
adc
std
add
adc
xchg
pop
xor
jmp
mov
in
push
cwtl
aam
std
shr
mov
mov
dec
sbb
outsb
fmull
xlat
sahf
incb
add
dec
jne
cmp
iret
mov
cmc
fdivs
lods
or
sbb
aam
jecxz
mov
mov
and
lds
movsb
scas
sbb
das
sbb
dec
push
loopne
test
fisubs
call
notl
fxch
aaa
push
and
add
xlat
out
popa
add
popf
push
sub
lods
jmp
cmp
xchg
cmp
sub
clc
mov
loopne
jb
mov
aam
mov
ja
inc
enter
test
push
scas
into
imul
sub
mov
push
movsb
sbb
cld
mov
sti
inc
fwait
call
inc
cs
lods
mov
inc
mov
dec
cltd
sbb
sub
add
dec
xor
mov
xor
sbb
call
jb
sub
mov
sub
adc
cmpsl
jns
fimull
mov
scas
pop
mov
or
adc
aad
mov
mov
dec
sub
mov
icebp
jp
arpl
cs
or
loop
mov
lods
icebp
sarb
idivl
cmpsl
xor
push
scas
and
out
or
sub
imul
mov
sarl
fwait
das
mov
push
xor
test
mov
test
pop
xchg
jmp
mov
loopne
sti
sub
sub
insb
mov
mov
das
ret
leave
pop
mov
nop
and
in
xchg
bts
sbb
add
lcall
repnz
cld
lret
xor
lods
jae
lcall
and
stc
mov
cmp
adc
inc
stc
add
lcall
sarb
adc
push
iret
call
pushf
fs
add
jnp
lods
or
jno
pop
out
xlat
mov
in
pop
xchg
sub
test
adc
rolb
push
cli
lret
mov
xchg
mov
fsubl
mov
call
pop
and
sub
clc
lret
enter
sbbl
cmpsl
xor
subl
iret
lods
int3
pusha
mov
cwtl
les
stos
gs
dec
cli
popf
sbb
int3
hlt
sub
ss
leave
jg
nop
ljmp
ret
pushf
sahf
cmpsb
stos
out
pop
dec
xor
fcmove
cmc
mov
out
mov
orl
subl
mov
paddsb
lret
stos
fisttpll
out
in
sbb
icebp
loope
test
aad
idivb
addr16
addb
and
add
ret
sbb
sbb
xor
gs
fscale
mov
sbb
lds
lds
fimuls
jb
or
mov
in
sbb
jp
inc
jno
je
xchg
cwtl
out
inc
sub
xchg
icebp
and
add
and
mov
js
sysret
pusha
enter
call
adc
lods
xchg
xorl
fistps
and
xor
mov
xchg
cmp
movl
int3
or
icebp
cmpsb
in
ljmp
sti
push
jne
jl
cltd
in
jmp
imul
mov
hlt
in
scas
jns
icebp
jnp
or
jae
in
mov
sub
adc
jbe
inc
insl
xor
sub
add
ljmp
movsb
xor
jmp
inc
daa
xor
shr
cltd
pop
mov
cmc
sub
add
enter
fbstp
scas
mov
mov
sbb
mov
xor
push
push
fnsave
enter
movsb
sbb
pop
mov
arpl
and
jmp
push
cmp
fdivl
lret
jle
inc
int3
cld
cwtl
sarb
mov
pop
xchg
stc
push
mov
enter
sbb
mov
jb
adc
push
pop
and
loope
insb
test
cmpl
cltd
lahf
mov
sub
sub
outsl
shlb
negl
call
or
jl
test
repnz
sbb
and
mov
cmc
jno
movsb
jns
pop
mov
popf
arpl
jle
aas
mov
jb
movsl
mov
jmp
testl
mov
xor
jb
inc
sbb
and
cmp
call
std
sbb
scas
outsl
adc
xor
xor
sbb
sbb
insl
jns
rclb
jbe
inc
pop
iret
mov
pop
stos
push
movsb
iret
jmp
mov
mov
inc
lret
mov
imul
das
scas
or
mov
in
cwtl
mov
mov
mov
mov
mov
inc
roll
icebp
mov
jge
jb
insb
mov
cmc
push
xlat
in
loopne
or
mov
fstpl
xchg
es
repnz
pusha
rcr
inc
jne
outsl
ljmp
sbb
inc
xchg
sub
scas
pop
sub
jo
lcall
sbb
mov
mov
and
dec
sti
push
pop
movsb
test
enter
nop
sbb
rclb
jecxz
cmp
loope
mov
sub
mov
xchg
repnz
outsb
mov
stc
or
push
adc
xchg
adcb
pop
pop
mov
add
sbb
ret
sbb
cmpsb
out
movsl
in
inc
pop
mov
mov
stos
repz
scas
sahf
cmpsb
push
popf
out
std
cmp
mov
lock
cmp
jb
mov
loopne
fyl2xp1
and
dec
cmpsb
lea
shrl
mov
pextrw
shll
roll
enter
dec
ret
push
and
out
sbb
pop
mov
lcall
rorl
sub
mov
mov
test
stc
out
xchg
repz
jbe
push
jmp
aad
enter
sub
mov
cmp
pop
adc
stos
mov
ja
jp
sub
in
mov
imul
dec
xchg
add
fcoml
jle
scas
inc
pushl
lock
push
inc
mov
and
in
cmpsl
popf
add
js
and
sub
mov
test
push
enter
jmp
xchg
popf
mov
pop
lret
je
sti
aas
mov
cmp
mov
cmc
pop
scas
pushf
fiaddl
add
mov
xchg
cmp
ja
xor
dec
shrl
scas
add
adc
add
or
xchg
xchg
mov
movsb
fists
xor
repnz
mov
fisttpl
mov
js
sbb
mov
sahf
and
jl
mov
int
inc
aas
inc
sub
mov
pop
inc
loope
jg
sti
leave
sub
adc
subb
lock
mov
adc
aaa
lea
mov
or
sbb
lcall
loopne
pop
add
repnz
js
les
lahf
cmpsb
or
xor
inc
adc
xor
sbb
rclb
xor
fbstp
xchg
inc
int3
dec
jb
ljmp
xlat
dec
jnp
jne
pop
adc
mov
cli
inc
lods
rcll
xorl
in
fcoms
dec
xchg
mov
xor
xor
fstpl
lods
jbe
lahf
rclb
sbb
mov
xchg
dec
ret
aad
sub
sbb
xorl
pop
xchg
ret
das
inc
or
push
lods
cmp
add
sbb
cmpsl
add
cmp
jle
xor
cmc
add
cmp
jecxz
sub
push
lods
das
rol
pop
cmc
lods
imul
imul
movsb
mov
int
inc
rcr
jle
loopne
xor
xchg
inc
mov
in
loopne
xchg
lods
mov
add
inc
and
dec
cmp
cs
imul
fcompl
imul
pop
arpl
jae
das
idivl
mov
cwtl
xchg
inc
dec
outsl
pop
cmp
sar
fdivl
fildll
push
dec
pop
cmpsl
bt
sahf
das
sbb
xlat
cli
jne
inc
push
dec
push
js
mov
jmp
mov
add
pushf
das
sub
mov
dec
in
push
in
ret
cltd
xchg
flds
cmp
mov
adc
les
sub
adc
in
inc
popf
mov
fdivl
in
jbe
andb
adc
mov
repnz
imul
mov
minps
xchg
mov
mov
popf
xor
inc
mov
in
jno
jecxz
popf
shlb
mov
rcrl
xchg
sub
in
mov
daa
inc
inc
pop
das
or
adc
inc
lret
aad
mov
addr16
es
mov
xor
fstl
notb
add
movsb
stos
or
mov
rorl
pop
push
mov
out
cli
cwtl
lcall
mov
lret
xchg
es
xchg
popa
or
ljmp
inc
pop
inc
imul
mov
jmp
neg
in
lock
outsl
sub
cli
adcl
push
mov
sbb
lods
loope
sbb
xchg
xchg
push
out
xchg
cltd
in
loop
and
in
outsb
in
in
add
lret
push
cld
or
mov
lods
fucomi
dec
into
inc
scas
jge
jl
inc
pop
mov
imul
mov
mov
arpl
add
sub
cmp
setne
sbb
loopne
add
sarb
hlt
or
dec
dec
sti
cmp
jns
push
pop
xchg
or
sbb
arpl
fadds
out
rcll
mov
jnp
inc
sbb
lcall
subb
cmp
popf
adc
popa
rcrb
push
fwait
ss
and
insl
dec
fdivrl
jb
dec
mov
jp
push
pop
xor
mov
addr16
push
mov
mov
sti
movsb
add
imul
xchg
add
or
in
mov
push
dec
out
rcl
rcr
push
add
fildl
push
add
and
push
fsubs
mov
mov
mov
jmp
lcall
out
repnz
add
push
push
jae
jle
add
xor
outsl
xchg
add
aad
or
scas
cmc
call
or
push
out
dec
or
enter
test
mov
add
inc
dec
hlt
sbb
dec
xor
ss
xor
mov
dec
js
adc
jnp
aam
xchg
lcall
dec
in
add
bound
pop
pop
xor
jbe
dec
or
xchg
or
xchg
mov
pop
xor
xor
movsl
inc
loope
add
scas
sahf
aaa
and
inc
push
or
enter
inc
mov
or
mov
or
ret
push
stos
mov
jl
scas
pop
xchg
lret
ljmp
or
xchg
cs
iret
bound
sbb
loopne
push
movsb
cmpsb
inc
mov
sbb
neg
cmp
out
out
neg
test
js
sti
es
jo
xchg
mov
repz
int3
shr
xchg
push
mov
xor
xchg
mov
out
shl
leave
lahf
pop
sarl
fs
aas
mov
sbb
and
insb
aaa
out
aaa
mov
adc
cmpl
js
push
add
mov
or
pushf
cmpsb
loope
notb
imull
clc
insb
xchg
dec
fwait
pop
ds
sbb
mov
nop
jle
dec
sub
dec
out
pop
push
cmpsb
or
sbb
mov
lahf
inc
inc
jmp
aas
sahf
mov
fisttps
push
test
das
outsl
mulb
movsb
jnp
pop
subb
test
outsl
cli
rcll
jmp
jnp
movhps
jecxz
push
xor
stos
bound
ljmp
inc
mov
fisttpll
ss
or
jb
je
and
or
cld
mov
not
lock
sbb
add
pop
hlt
mov
inc
fdivp
cmp
lret
daa
outsb
jb
pop
jecxz
adc
cmp
cmp
cmc
push
push
out
mov
in
jb
jl
cli
add
pop
push
mov
sbb
pop
jmp
icebp
cld
dec
imul
test
ds
pop
aam
stos
xor
aam
xchg
push
test
popf
stos
adcl
fcompl
pop
fcoms
movsl
inc
push
cmp
mov
pop
inc
and
out
mov
callw
fwait
jne
paddq
add
nop
adc
add
mov
cmp
inc
add
dec
orb
cmp
push
add
mov
stc
jnp
sbbb
popf
or
push
and
mov
das
pusha
lods
pop
in
ss
clc
and
bound
mov
pop
iret
mov
add
js
test
nop
adc
push
mov
pop
out
sub
add
push
pop
inc
add
pop
stc
adc
aaa
push
cvtdq2ps
sub
fdivrl
or
into
das
mov
lcall
daa
sub
insb
sub
or
jno
dec
push
pop
pop
jae
into
mov
xorb
sbb
aam
push
add
cmc
std
fnstsw
cmpsb
jbe
repz
loope
xor
push
adc
aam
xor
es
xchg
es
xor
dec
sbb
push
mov
dec
lods
cs
pop
int
and
xlat
gs
leave
mov
and
sbb
mov
or
int3
add
lret
mov
orb
outsl
mov
push
rcr
add
xchg
and
or
adc
add
push
shr
les
inc
loope
cmpl
arpl
cmpsb
leave
jae
test
dec
add
sub
lret
clc
pop
jle
jecxz
lea
push
lret
movsb
sbb
jo
xchg
sahf
ljmp
mov
cwtl
repz
xchg
sbb
nop
pop
dec
gs
iret
jmp
mov
sub
out
movsl
cmc
inc
mov
enter
cmpsb
gs
das
add
mov
adc
push
xlat
lods
cwtl
loopw
adc
aad
pop
push
pop
fwait
cli
push
mov
and
out
pop
repz
int3
mov
test
into
and
lcall
fs
es
jg
xchg
xchg
cmp
pop
or
mov
rclb
outsb
repz
lcall
insl
xor
lods
dec
das
js
jle
pushf
or
mov
xor
loope
dec
cmp
jmp
mov
jmp
rorb
cmp
inc
add
fcomp
sub
cmp
inc
or
adc
add
add
jp
cwtl
push
pop
lcall
in
inc
sahf
mov
lock
mov
bound
sbb
fmuls
fisubl
sub
sbb
pop
cltd
mov
out
repz
sbb
mov
ret
and
test
je
add
fwait
mov
int
fyl2xp1
leave
mov
mov
push
test
push
rcl
cltd
outsb
into
inc
in
pop
popf
push
xor
mov
adc
lret
jmp
sub
frstor
push
mov
sbb
call
or
xor
into
leave
add
xor
push
mov
xchg
xchg
cmp
dec
jge
jbe
loope
cmpsl
lea
negl
pop
es
and
push
jns
adc
inc
ja
mov
das
sub
dec
add
sbb
ja
stos
es
cmp
lods
jne
hlt
mull
clc
negb
cmp
pop
lock
lods
std
sbb
cmp
sahf
popf
cwtl
shlb
clc
mov
stos
add
push
loopne
fsubrl
movsl
cmp
fidivrl
jle
sub
and
enter
mov
adc
adc
inc
imul
imul
stc
jne
pop
mov
es
gs
xchg
jo
call
pop
loop
xchg
lret
rolb
sbb
addb
jmp
sbb
imul
push
dec
inc
adc
push
fwait
stc
arpl
es
scas
xchg
push
ss
sub
dec
fs
cmpsb
jo
mov
in
push
hlt
test
mov
mov
xor
cld
js
arpl
sub
xchg
repz
mov
dec
outsb
scas
hlt
push
cmp
jbe
jge
lret
outsb
scas
push
cltd
xchg
ljmp
jmp
loope
mov
testl
out
nop
jno
lock
mov
popf
pop
jno
imulb
insl
cs
xchg
je
cmp
sahf
jecxz
push
jns
mov
jno
roll
mov
xchg
outsb
cltd
fwait
push
mov
lahf
nop
clc
jb
movsb
and
jecxz
add
mov
in
mov
loope
or
mov
xor
out
addr16
pop
sub
adc
cli
fwait
cmp
xorb
or
mov
jle
jmp
std
ja
cltd
pop
cmp
pop
aad
lret
xor
push
cmpl
gs
fimuls
lods
xlat
xadd
or
lods
cwtl
sub
dec
xlat
or
fwait
out
inc
lret
or
push
rolb
outsl
push
mov
cli
mov
repnz
jge
mov
adc
das
xor
push
pop
mov
mov
inc
dec
sbb
mov
fwait
pop
daa
sar
stc
cwtl
testb
mov
out
inc
ds
pop
inc
rclb
sbb
sbb
push
mov
cs
add
xchg
stos
imul
jno
repnz
push
mov
mov
jle
push
int
cmp
cmp
stc
push
pop
sub
add
loope
je
cli
xor
dec
lret
fmull
adcl
dec
push
or
arpl
jmp
negb
mov
shlb
push
icebp
lock
loope
ret
ss
sbb
sti
sti
push
insl
ds
add
mov
cmpl
popa
nop
jb
pop
inc
sub
dec
mov
xlat
cld
push
jne
add
cmp
sub
pop
andl
mov
cmp
adc
stos
aaa
push
mov
sub
mov
sub
scas
roll
movsb
out
call
aaa
stc
dec
fwait
or
or
data16
jg
cmpsb
imul
gs
sub
movsb
dec
pop
mov
add
leave
gs
pop
pop
adc
aas
add
xor
and
add
dec
cmp
inc
jno
data16
jnp
imul
push
mov
ljmp
faddl
mov
lcall
ret
mov
inc
das
jns
call
mov
int3
test
mov
cltd
xchg
sbb
push
sti
out
nop
fdivrl
dec
mov
cli
pop
and
roll
shll
push
and
mov
cld
aam
stos
inc
clc
fildl
out
lcall
jns
and
push
test
repnz
xchg
sti
fld
les
dec
inc
ret
pop
push
mov
jp
mov
cmpb
js
scas
cmp
adc
ss
pop
inc
cmp
pop
mov
ja
pop
lcall
xchg
cmp
adc
sbb
mov
gs
or
pop
mov
out
push
pop
ror
mov
js
aam
pusha
xor
xor
cltd
or
jmp
add
ss
pop
xor
mov
out
push
add
pop
jno
loop
aam
nop
xor
mov
pop
cltd
jg
int3
movsb
or
mov
pop
sub
data16
pop
add
in
bound
aam
loopne
push
add
sbb
cli
in
popf
jecxz
cmc
fidivrl
scas
movsl
xchg
das
xlat
into
aas
mov
popf
arpl
fucomip
fs
jecxz
pushf
jae
mov
or
mov
loope
pop
test
xor
adc
jbe,pn
mov
xor
pusha
aam
mov
popf
add
mov
cld
and
cwtl
jmp
mov
push
sub
push
jns
stos
lret
mov
adcl
out
lods
scas
mov
mov
aas
loopne
jb
and
imul
in
arpl
mov
push
iret
adc
sti
stos
cmp
sbb
test
sub
pusha
mov
xchg
push
ja
mov
sbb
adc
xchg
or
es
popa
leave
or
mov
stc
es
adc
xchg
inc
popf
fistl
in
cli
xchg
jge
mov
shrb
scas
or
testl
das
push
and
aad
fmuls
jbe
int
jge
or
mov
lock
inc
aas
xchg
cmc
lock
jno
push
mov
movsl
fldenv
pop
in
jno
push
sub
cld
orb
dec
mov
into
cmp
mov
inc
inc
mov
rcrl
loop
js
and
or
iret
adc
lods
cmp
inc
pop
xchg
cmc
inc
dec
inc
std
aaa
dec
push
inc
dec
ja
mov
xchg
sarl
jb
aaa
mov
cmpsl
jmp
lcall
pushf
jmp
pushf
test
lds
mov
pushl
rcl
jl
fbld
notl
mov
mov
jne
popf
push
ret
jp
inc
push
jns
out
mov
sub
xchg
mov
in
jecxz
adcb
cmp
add
xchg
and
and
and
mov
aam
mov
sub
cwtl
sub
mov
push
sub
aaa
mov
scas
push
das
imul
fcomps
adc
adc
sub
sub
push
or
pop
sbb
popa
int3
inc
add
cli
push
dec
dec
push
bswap
sahf
shl
xchg
fcomps
cmp
sbb
and
daa
adc
mov
sub
test
mov
push
jae
arpl
in
xlat
mov
sbb
fisttps
lahf
into
sbb
mov
mov
add
lea
jmp
ss
ljmp
xchg
jmp
adc
xchg
sahf
mov
fcompl
lea
lods
dec
sbb
push
jp
hlt
sub
and
shrb
add
enter
loopne
fucom
mov
inc
iret
xor
xchg
mov
lahf
adc
movsl
loope
xchg
mov
cltd
stc
dec
imul
mov
jge
xchg
sub
fstpt
fnstsw
or
clc
and
pop
test
jne
sub
xor
or
dec
gs
dec
cmpsb
pusha
jl
pop
iret
jae
das
and
inc
ficompl
pop
popf
inc
add
jnp
fimuls
and
adc
cmpsl
dec
dec
dec
mov
add
cli
out
pop
add
jge
xchg
cmpb
ret
inc
cltd
push
ds
mov
cltd
mov
pop
and
test
push
movsl
cmc
ljmp
gs
xchg
and
add
jae
popf
out
mov
dec
hlt
lods
rcrl
stc
xchg
rol
leave
pushf
cmp
add
add
and
hlt
push
hlt
test
or
sbb
out
dec
xor
enter
cltd
stos
lea
mov
scas
nop
sub
xchg
iret
in
push
pop
mov
test
in
int3
lds
push
in
ljmp
addr16
push
xchg
mov
pop
push
adc
dec
jmp
inc
out
mov
xor
mov
jp,pt
xor
out
in
in
das
jmp
cmp
inc
jne
sub
mov
ljmp
lods
in
into
dec
mov
jge
inc
stos
or
add
sarl
ret
mov
subl
and
jg
testl
jbe
faddp
xchg
rcr
push
jo
lock
sub
js
and
and
movsl
repnz
int
sub
loope
js
mov
shll
mov
xchg
dec
cmp
and
push
xor
ficoms
repnz
loopne
roll
pushf
inc
insl
mov
mov
cli
lret
jg
sbb
mov
fisubrs
ss
cmp
pushf
xor
add
fcmovnb
addb
cmp
xchg
and
xchg
cmp
jg
je
bound
fwait
bound
mov
pop
pushf
test
and
imul
shlb
sub
jo
movl
mov
pusha
dec
enter
repnz
in
mov
lahf
pop
pop
mov
xchg
jo
sti
pop
out
add
fidivl
pop
add
xlat
movsb
xor
sbb
push
add
push
jmp
fimuls
mov
and
sbb
sub
cwtl
jl
inc
int3
jnp
dec
dec
ss
test
cmp
icebp
out
roll
addl
out
mov
lea
xchg
sub
inc
out
cltd
rcl
loop
rcll
loope
lods
mov
fcmovne
xchg
imul
sbb
and
pop
ret
mov
adc
fwait
lods
mov
jmp
into
push
test
into
mov
in
fdivrp
pop
or
adcl
or
scas
lahf
bnd
lock
scas
adc
test
icebp
inc
ljmp
mov
cmp
out
aam
mov
xor
or
scas
jge
data16
fwait
outsl
xor
mov
aaa
dec
add
loope
inc
dec
mov
aas
pop
subl
subb
pop
hlt
xlat
test
push
popf
aam
fwait
sub
cli
dec
push
movsl
push
cmp
mov
fdivrl
sbb
mov
jl
lahf
insb
cmpsl
ret
mov
cmp
push
shlb
mov
push
repnz
xchg
mov
fistpll
mov
cmp
sahf
or
popf
or
nop
and
int
pop
pand
jmp
fisubrs
jge
sub
and
push
dec
sub
test
cmp
or
add
cmp
ljmp
add
jp
loopne
fisttpl
pop
mov
mov
push
and
xchg
push
xor
loop
inc
xor
mov
into
fistps
sub
pop
pushf
into
imul
stos
or
jne
aas
shrl
cmp
jmp
outsl
rol
mov
xchg
iret
cmp
daa
add
in
aad
lock
xchg
repz
cmp
pop
rolb
cmp
inc
push
insb
mov
push
test
xchg
outsb
dec
dec
dec
pop
or
lods
sarl
pop
pusha
adcl
aam
icebp
mov
cmp
cmp
xor
fcmovnu
roll
test
fsts
push
popa
mov
inc
push
cmp
jl
in
mov
xlat
testl
xor
cmc
or
arpl
pop
cmp
sbb
ret
lock
shlb
adc
pop
fidivs
push
test
add
fs
jnp
daa
push
sub
sbb
cmc
xor
push
mov
sub
jno
ret
xlat
mov
sbb
es
adc
daa
or
pop
push
inc
fwait
xchg
enter
mov
out
cmpsl
xor
or
ljmp
xchg
push
cmp
xlat
xor
mov
jge
test
int
mov
push
dec
lret
add
in
push
jb
lea
cmp
xchg
lret
xchg
insl
sub
ret
cmp
je
cmpsl
xor
xchg
mov
cltd
or
mov
in
jmp
hlt
cmp
es
cmpb
or
xchg
jae
hlt
fsubr
push
dec
insb
add
mov
test
mov
mov
ret
xchg
int3
lea
stos
jno
add
popf
or
mov
jge
jl
jle
pop
dec
outsl
out
ja
xchg
jnp
aad
ret
int
lea
push
test
add
jbe
stc
jae
mov
sbb
adc
sbb
cmp
xchg
insl
adc
movsb
pushf
jl
inc
jg
mov
lock
std
gs
push
cmpb
sub
and
and
sbb
gs
xchg
and
les
je
notl
xlat
dec
popf
or
pop
mov
cmc
insl
mov
cmp
dec
jnp
pop
xchg
enter
dec
mov
add
push
shl
sub
jecxz
jo
leave
dec
push
data16
dec
loope
mov
xchg
nop
movsl
rol
in
pop
out
leave
mov
mov
in
xchg
xchg
jmp
imul
jmp
and
sbb
jp
in
xchg
lret
popa
inc
loope
push
and
popa
popf
scas
popl
shlb
add
mov
mov
idivb
fisubl
jl
insb
mov
adc
mov
test
into
inc
iret
add
lods
push
mov
aas
mov
lret
xchg
dec
aaa
and
sbb
or
iret
leave
mov
sbb
incb
mov
cmp
movsb
jmp
cmp
or
into
sub
inc
shr
xchg
lods
xor
test
push
sub
xor
mov
fsubl
das
pop
pop
adc
cmp
lea
and
in
outsl
add
cmp
popa
xchg
mov
aam
mov
ljmp
jmp
add
xchg
xor
rcll
push
cmp
inc
call
push
sahf
data16
int
xchg
mov
movsl
rcrl
inc
xchg
imul
lea
adc
popf
lret
push
cmpsl
mov
push
test
jb
inc
stos
loope
fimull
in
jb
movsb
inc
xchg
lds
pop
nop
pop
nop
je
in
mov
xchg
jno
push
cmpl
aas
sub
push
cmpsl
hlt
inc
popa
xchg
out
jge
pop
xchg
sub
cli
movsl
ret
arpl
xchg
dec
and
jmp
inc
jo
sbb
pop
nop
inc
pop
outsb
repz
ror
mov
enter
int3
outsl
inc
xchg
es
mov
in
sti
xor
jl
mov
adc
cwtl
popa
rcl
popf
lods
push
inc
or
push
movsl
jmp
enter
pop
std
das
jl
mov
int
jae
sbb
sti
and
daa
out
out
movsl
dec
imul
inc
das
in
stos
lock
cwtl
push
loop
push
shr
adc
loope
les
loope
push
je
push
ret
mov
insb
add
stos
mov
pop
dec
xchg
xor
mov
aam
and
cmp
sub
sub
sbb
shrb
cli
fildll
cmp
mov
and
test
sub
xor
leave
xchg
xchg
fisttpll
ds
mov
test
fwait
hlt
push
aas
cmp
call
jp
bound
repnz
xor
xchg
cmp
cmp
pop
and
jecxz
pushf
rclb
push
lea
mov
sbb
mov
scas
es
vmovupd
ficomps
in
negl
pop
decb
and
mov
pop
xor
or
int
das
aaa
lock
stos
dec
jle
stos
pop
inc
arpl
mov
jae
xlat
mov
aas
insl
jge
xor
xor
inc
aad
mov
pop
adc
int3
cmp
fwait
mov
imul
sarb
sbbl
adc
mov
loop
push
ja
mov
imul
add
jmp
mov
pop
sub
lcall
dec
pop
push
pop
dec
cltd
adc
xchg
sub
push
cwtl
ret
cmp
pop
mov
xor
sub
push
icebp
xchg
les
idivl
xchg
push
and
push
inc
jae
shlb
sbb
std
sbbl
popa
loop
imul
jb
mov
xchg
push
call
roll
cld
arpl
mov
and
leave
xchg
in
jns
xchg
stos
pop
arpl
lea
sti
repnz
jno,pn
fwait
lods
inc
cmp
lods
push
cmp
out
movsb
aam
push
repz
daa
orl
inc
mov
cmpsl
pop
scas
mov
scas
push
aam
ret
enter
leave
stos
add
outsb
mov
stos
ficompl
push
cmp
add
test
push
rep
insl
dec
es
ret
dec
mov
aad
pop
decb
js
adc
dec
jbe
in
or
nop
mov
leave
xchg
or
xor
xorl
dec
scas
pop
loop
mov
mov
scas
push
push
xchg
jl
add
in
scas
xchg
nop
xor
adc
mov
popl
cli
outsl
push
xor
or
sbb
out
ja
sub
jmp
int3
mov
or
jl
insl
jnp
jns
adc
aas
cmpl
cmc
xor
adc
xor
cmp
jge
mov
or
call
shlb
pop
es
pop
push
mov
ret
cmpsl
mov
in
mov
cmpsb
jp
dec
subb
sbb
sahf
add
dec
cs
mov
out
mov
xor
mov
cmc
pop
test
dec
ja
or
cmp
jmp
lcall
sub
cmpsl
dec
cmpsl
adc
fwait
mov
dec
xor
or
shll
or
out
lods
incb
pop
push
mov
enter
and
imul
sub
push
sub
adc
cli
inc
jecxz
das
push
mov
cmpsl
in
pop
loop
add
adc
pop
inc
stc
push
sbb
dec
and
movsl
mov
imul
daa
sbb
cmp
daa
int3
test
out
ret
or
xchg
mov
rclb
out
cld
bound
adc
ljmp
sti
jge
iret
adc
mov
or
movsb
aaa
icebp
inc
cmpsl
inc
shlb
mov
int
xchg
adc
aaa
sti
loop
jb
cmp
push
ss
hlt
jo
cmpsl
sbb
in
out
mov
push
push
xchg
mov
sbb
outsb
loope
loopne
pushf
test
xchg
fildl
or
push
inc
fdivrs
dec
and
les
xchg
mov
lahf
pop
pop
xchg
jbe
lcall
xor
inc
jae
push
ss
loope
sbb
xor
xchg
pop
rcrl
dec
ds
iret
ljmp
sahf
ds
sbb
pandn
xor
jge
and
pop
imul
iret
and
xor
mov
imul
push
bound
pop
test
cmp
shrd
vpcmov
out
mov
xchg
test
loop
andb
cmpsb
mov
push
lret
scas
shlb
sbb
sbbb
xchg
cmp
aas
pop
sti
sub
ljmp
push
in
clc
in
div
sbb
xor
lds
push
imul
sahf
add
sahf
sbb
notb
orl
push
in
test
push
cmp
inc
push
jo
mov
mov
or
negl
lahf
add
pop
clc
xchg
sti
js
cmpsl
mov
xor
test
lahf
adc
sbb
popf
stos
add
mov
dec
dec
xor
xor
lcall
fiaddl
jbe
jl
sarl
xchg
xor
stos
sahf
adc
js
or
inc
imul
adc
dec
add
lcall
popf
es
ss
ja
outsb
mov
xor
xchg
cmp
frstor
roll
mov
dec
jl
rol
loop
cmpsb
fstpt
pop
leave
sti
mov
push
or
add
or
cmpsl
popf
dec
and
xchg
or
or
cmpsb
xor
adc
jno
insb
xor
xor
repnz
xor
sub
adc
mov
xchg
mov
mov
mov
outsb
loopne
mov
inc
adc
push
sub
push
movsb
pop
jns
xor
scas
dec
and
and
loope
stos
les
movsl
xchg
adc
add
repnz
mull
mov
inc
jns
inc
sub
int
dec
ret
jmp
sub
shll
addr16
xchg
mov
adc
push
in
fisubrl
outsb
pop
das
jmp
adc
test
pop
leave
hlt
movsb
jmp
pop
mov
jmp
xor
pushf
jae
cmp
and
fisubs
mov
dec
fistps
xchg
pop
fimuls
mov
aad
mov
and
jae
xchg
cmc
imul
and
test
jmp
jne
test
scas
nop
inc
or
cmp
repnz
dec
aad
xchg
fmulp
jle
mov
fsubrl
out
pop
lret
pop
pop
adc
add
cmp
xchg
loop
jno
mov
add
jmp
sbb
push
xchg
jnp
xor
icebp
pop
mov
adcl
mov
subl
je
jae
orl
xchg
mov
push
mov
enter
fs
mov
leave
fistpl
xchg
mov
xchg
enter
andl
ja
adc
imul
shlb
int3
hlt
pop
rcrl
lcall
out
xchg
dec
cmc
adc
mov
mov
xchg
adc
jmp
cwtl
mov
jp
in
movsb
and
push
inc
xor
leave
pop
xor
stos
loopne
jecxz
and
loop
dec
or
je
mov
fmuls
mov
mov
cmp
jp
test
sti
mov
push
jb
cmpsl
and
into
xchg
pushf
andb
ret
pop
xchg
push
imul
xchg
dec
and
add
les
or
jp
out
popa
or
pop
lds
fsubl
cld
test
insb
pop
mov
call
xchg
dec
ret
inc
sbb
and
scas
test
orb
or
out
fldcw
pop
loopne
jo
inc
testl
repnz
mov
xor
adc
push
and
mov
das
add
movsl
data16
pop
jle
push
push
in
dec
and
jp
and
daa
pop
mov
call
jmp
cs
mov
pop
xchg
cli
mov
adc
fildl
xchg
call
mov
mov
cmpsl
dec
jne
lcall
and
sbb
popa
shrb
pop
push
aam
cmp
stos
in
aam
push
fs
test
imul
mov
mov
jge
pop
loopne
jne,pt
adc
push
inc
das
push
xor
mov
lods
stc
movsl
bound
adc
xor
sub
and
popa
int3
mov
cmc
das
pop
inc
clc
call
inc
jbe
daa
mov
sub
loop
data16
sbb
cs
xchg
repnz
mov
or
pop
aas
insl
mov
pop
mov
das
adc
icebp
sti
inc
aaa
xchg
stos
mov
xchg
popa
adc
ss
lret
sbb
sub
pop
outsl
add
jb
xchg
push
sbb
sbb
stos
push
pop
lcall
sbb
rcll
fsub
sahf
icebp
mov
lret
lret
enter
lods
or
lret
loope
pusha
jo
lret
lods
pop
xor
and
adc
xor
cmp
lea
cmp
add
cs
pop
fldl
sti
es
xchg
jge
loopne
jb
push
and
loopne
aas
out
addl
aaa
jnp
fiaddl
in
imul
jl
push
mov
pop
jmp
mov
cli
mov
cmp
pop
aad
int
cmpsl
and
mov
or
sti
xchg
pop
add
cmp
inc
pop
addr16
jl
rol
fnstenv
ljmp
fcmove
insb
cmp
data16
jecxz
xchg
push
and
jp
push
movsl
ficoml
jno
sbb
adc
sbb
and
jns
sbb
outsl
js
out
or
repnz
pop
shlb
and
clc
les
add
cmpb
or
cwtl
pop
push
sahf
sub
fs
add
and
pop
xlat
jnp
jo
mov
cmp
into
mov
sub
imull
scas
pop
xchg
push
and
xchg
push
into
mov
fisubrl
xchg
loope
and
jg
gs
xor
sbb
stos
out
push
loop
mov
scas
test
or
mov
adc
jmp
int3
jl
or
mov
push
xor
aaa
repnz
jmp
daa
adc
inc
test
xchg
add
dec
ret
repz
pop
dec
mov
mov
xor
jbe
rol
gs
sub
mov
daa
add
data16
xor
outsb
mov
icebp
fdivs
es
xchg
movsl
xchg
fcomi
ss
ss
std
jmp
cmp
mov
mov
pop
mov
push
pop
imull
in
lods
insl
jae
repnz
inc
xlat
push
xor
pop
dec
cmp
fs
xchg
push
push
pop
jle
mull
xchg
push
adc
mov
iret
in
and
sub
shrl
scas
arpl
mov
lret
fwait
push
inc
rcrl
xchg
notl
dec
push
roll
inc
pop
mov
xchg
jmp
das
adc
arpl
clc
jmp
idivl
xchg
xchg
inc
or
in
aas
add
mov
xor
pop
out
mov
jl
loop
sbb
aad
inc
in
repnz
movsb
repz
dec
jecxz
test
mov
sub
out
popa
xchg
loop
push
mov
jno
inc
mov
ss
shlb
jge
dec
cwtl
in
in
loopne
ja
pop
das
jle
mov
leave
push
cli
das
cmpb
cmp
push
rcrb
call
mov
mov
ret
addb
lcall
xchg
out
dec
imul
bound
out
repnz
sub
or
jle
push
add
add
stos
lods
xchg
shlb
mov
mov
mov
rolb
shl
inc
fcompl
and
dec
fistpll
jae
nop
xor
in
imul
cs
sarb
dec
dec
stos
xchg
jp
test
mov
push
adc
mov
pop
into
pusha
xor
nop
dec
std
stc
lods
mov
fucomp
xchg
cmpsb
sub
sub
pop
and
and
add
mov
xchg
shl
xchg
repnz
adc
std
ja
mov
inc
push
jecxz
mov
test
add
cld
jbe
sbb
je
ficoms
in
jl
or
push
and
cltd
cmp
pusha
aaa
popa
test
pop
mov
and
dec
xor
jo
inc
and
mov
ss
jmp
mov
or
cmp
mov
cmc
pop
cli
jmp
mov
sub
lcall
push
pop
out
in
dec
jnp
xchg
movsl
cmp
adc
lahf
mov
sbb
add
fmull
movb
dec
cmp
rorl
aas
xor
adc
push
aam
push
mov
adc
mov
dec
cli
push
xor
test
mov
or
flds
pop
aas
mov
fidivs
loopne
mov
ret
adc
jo
push
test
popa
adc
pusha
push
dec
xchg
inc
daa
dec
mov
mov
or
sub
aad
push
add
decb
xchg
push
push
xor
inc
pop
insl
mov
push
mov
mov
pop
sbb
test
inc
addr16
or
mov
jbe
jecxz
xor
jnp
push
jge
mov
jae
jne
jg
add
sub
mov
pop
repnz
pushf
ja
xlat
sbb
or
js
add
jo
and
jo
dec
add
mov
cmp
ljmp
hlt
out
out
sub
mull
call
adc
pop
push
out
or
ljmp
jmp
push
pop
dec
fdivrl
sbb
arpl
jle
aad
inc
xor
repz
std
xor
mov
in
pop
cli
ja
push
lock
inc
dec
orl
xor
fidivrl
xchg
mov
scas
sbb
jae
sbb
shrb
jo
push
or
mov
pop
lret
jl
and
lcall
sub
xor
lock
cmc
pop
movsb
sub
mov
hlt
imul
pop
adc
push
mov
js
imul
ds
or
mov
addr16
and
data16
es
mov
insb
xor
xchg
sbb
dec
sub
mov
and
out
mov
push
out
out
call
or
mov
negb
xchg
adc
outsl
add
sysexit
mov
adc
dec
mov
sbb
and
jns
outsl
daa
shlb
jmp
xor
push
pop
cmp
mov
sub
call
xchg
inc
fistps
outsl
jne
push
push
es
cli
sub
inc
fsubl
in
mov
popf
push
leave
lcall
vpshaw
jecxz
cmp
loop
mov
fwait
sub
mov
xor
push
sbb
or
fbstp
arpl
mov
xchg
mov
clc
out
imul
shlb
fisubs
pop
in
lret
ss
pop
imul
fisubrl
nop
test
jo
ret
movl
xchg
addr16
lock
xchg
mov
pop
iret
popf
enter
mov
add
mov
xor
dec
jne
dec
hlt
sahf
xchg
adc
in
and
pop
popf
jg
cmpsb
ja
adc
mov
cmp
xor
push
mov
hlt
and
cld
int3
push
and
and
mov
das
iret
cs
push
cmp
jbe
or
mov
push
lea
xlat
ficoms
decb
pop
push
lgs
push
sbb
cwtl
js
aam
addr16
mov
push
movsb
repz
mov
aad
jb
add
je
lods
repnz
adc
scas
dec
scas
loop
mov
adcb
jbe
out
cmp
pop
mov
ss
enter
jge
inc
cld
xchg
je
sub
jns
insl
aam
leave
lea
and
add
pop
mov
fwait
jmp
mov
cmp
rclb
pop
stos
mov
xchg
leave
pop
jecxz
xor
sbb
sbb
ret
movsb
jo
je
adc
mov
push
rcl
fucomp
test
les
shll
pop
sbb
inc
popa
jmp
ret
and
and
stos
cmp
pop
sahf
mov
fldenv
mov
fwait
inc
int3
mov
scas
jne
imul
xchg
adc
popf
inc
add
mov
add
decb
fldt
and
sub
adc
xchg
or
xor
aaa
rcrl
adc
lahf
fcoml
das
stc
pop
pop
in
cld
loop
incl
pop
sub
mov
js,pn
or
add
loopne
mov
in
out
mov
dec
and
out
pop
add
mov
pop
xchg
sidtl
jo
fcoml
xlat
adc
stc
ret
sub
inc
pushl
fdivs
aaa
lret
push
inc
das
popf
lcall
int3
js
lods
sub
test
adc
daa
test
and
stos
cmpsb
repz
pop
pushf
int3
cltd
into
add
adc
mov
lahf
cmp
cs
das
sbb
out
aam
aaa
pop
jmp
sahf
jns
xchg
test
dec
outsl
lcall
cwtl
lods
cld
cmp
int
cmp
add
and
xchg
addr16
int3
out
fisttpll
inc
das
shlb
and
leave
cmpl
stos
ja
scas
test
add
into
int
imul
data16
aaa
sbb
cs
adcl
lcall
daa
dec
sbb
inc
dec
push
int
cltd
sub
clc
or
jp
loope
and
shrb
cmp
inc
or
ret
sub
movsb
sub
ljmp
inc
lcall
leave
popa
mov
jge
stos
movsb
and
pop
mov
lret
xchg
sbb
jmp
idivb
xchg
adc
leave
inc
xchg
inc
mov
out
sbb
sbb
popa
andl
inc
in
and
push
pusha
icebp
scas
jb
push
loopne
fcmovu
fldt
adcb
push
imulb
loop
adc
push
pop
push
popa
cmp
jbe
lahf
cmp
in
icebp
or
sbb
xchg
add
push
into
jle
xor
leave
cmp
insl
xchg
or
push
cmpsb
jle
loop
js
pop
push
cmc
stc
stos
dec
mov
xchg
push
rclb
or
mov
outsl
lods
mov
push
xor
roll
sub
mov
loop
jle,pn
hlt
pusha
insb
cs
gs
lods
mov
fldt
adc
sbb
orb
dec
shll
or
push
loop
je
insl
jne
pop
imul
xchg
imul
xor
sahf
movsb
hlt
ja
loope
xchg
cmp
adc
std
xchg
dec
lods
dec
xchg
inc
mov
addl
aas
cmpsb
lea
xchg
jno
in
aam
ret
fimuls
fsubs
push
cmp
ds
das
jge
jmp
lret
or
inc
inc
sbb
mov
iret
stc
push
and
lret
lods
push
or
pop
mov
ret
and
xchg
rorl
movsb
mov
rorb
lret
jp
mov
aas
jle
xchg
pop
repnz
push
enter
add
mov
insb
mov
jns
pusha
push
aaa
rcr
adcb
add
pop
xor
retw
loope
or
mov
and
js
pop
dec
repz
cmp
sub
dec
std
enter
lods
fwait
stos
fs
pop
ficoms
pop
mov
mov
sub
rcl
pop
dec
push
jo
clc
loopne
inc
add
push
push
icebp
mov
andl
sub
cltd
push
pusha
std
pushf
je
iret
out
cwtl
rcl
test
out
test
mov
rol
imul
add
sub
xlat
lret
sbb
mov
push
cmp
stos
pop
jo
in
mov
ss
inc
jmp
movsl
popa
dec
mov
add
popf
addr16
sbb
jecxz
pop
jo
test
test
pop
push
jmp
jbe
and
in
mov
test
stos
pop
add
ficoms
sub
push
jle
lahf
int3
fwait
mov
stos
call
cltd
loopne
jnp
and
mov
mov
cmp
sub
adc
jnp
lahf
push
add
repnz
call
ljmp
and
add
and
movsl
into
cld
push
in
pusha
lods
cmp
dec
rolb
and
sbb
ret
lahf
adc
ret
mov
stos
xchg
xchg
sub
jl
push
in
push
movsl
xchg
sahf
or
out
inc
push
lea
iret
imul
pop
hlt
push
push
clc
mov
notb
sub
jnp
push
sbb
xchg
popa
cli
and
dec
xchg
sahf
les
cmp
sub
sar
inc
iret
sub
jo
das
pushf
sti
leave
pop
sbb
std
mov
jns
push
pop
jge
aaa
aam
cli
fiadds
out
mov
jae
es
andb
sti
mov
sbbl
adcl
lock
xchg
lds
loop
mov
mov
lcall
fsubs
dec
sbb
cmp
pop
sub
mov
pop
punpckhwd
sbb
pushf
aaa
out
test
inc
aad
adc
fwait
call
rcr
jle
in
int3
sbb
mov
inc
lret
pop
xor
push
fistpl
insl
xor
mov
and
movsl
mov
xor
nop
rcr
sbb
jg
xlat
and
sub
and
movsl
push
add
xchg
jg
cwtl
push
rol
lret
or
punpcklwd
ds
jl
jge
repnz
aad
hlt
es
idivl
cs
pop
inc
jle
sahf
stos
mov
or
jne
loope
push
inc
inc
ljmp
cmpsl
push
lods
cmp
pop
xchg
mov
jno
sub
loop
or
scas
bound
int3
mul
std
in
stos
push
mov
ret
rcr
shlb
sti
push
bswap
mov
inc
cmp
mov
cmc
leave
loop
sahf
push
dec
fldcw
mov
push
aas
pop
repz
shll
adc
call
js
mov
scas
inc
push
lret
pop
aam
mov
cmp
xchg
or
leave
fs
fstpl
cmpl
sahf
dec
ljmp
fbld
loope
cmp
sbb
dec
mov
dec
iret
inc
in
adc
divb
mov
inc
adc
pusha
add
dec
adc
pop
pop
cmp
push
lods
jb
xchg
sub
stos
sub
out
imul
adc
aad
ja
flds
cmp
adc
imul
jo
add
and
push
rorl
in
pop
mov
negb
add
movsl
dec
std
movsl
add
dec
js
lock
add
xor
mov
int3
dec
jb
pop
incl
pushf
out
mov
jbe
enter
rolb
notb
repnz
je
jno
jae
mov
gs
xchg
mov
and
loop
ljmp
subl
push
rolb
inc
lods
cmp
jbe
xchg
jbe
jmp
mov
mov
ficompl
lret
push
lock
hlt
jns
jecxz
movsb
pop
xor
adc
push
dec
dec
dec
ror
lods
shlb
inc
fimull
jmp
sub
xchg
gs
and
or
lret
pop
gs
xchg
lahf
jb
mov
and
push
shl
and
icebp
mov
sub
ret
mov
cld
xor
das
mov
and
shl
sbb
xor
in
sbb
sti
aas
rsm
add
into
add
fbld
push
mov
je
sti
mov
mov
ja
add
scas
inc
or
or
mov
pop
and
pushf
add
stc
enter
ljmp
cltd
add
adc
mov
sbb
insb
inc
ret
dec
mov
imul
ret
mov
or
std
cltd
aad
inc
push
jne
add
push
xchg
test
sbb
popa
sbb
gs
out
out
enter
push
and
cmpsb
imul
fstpt
pop
mov
lods
fwait
xchg
inc
push
pop
data16
push
dec
jo
sbb
mov
fld
push
push
cs
fbstp
hlt
jle
jp
cmp
cmp
cld
ret
sub
jp
gs
in
jno
mov
aam
push
or
inc
fs
jns
jnp
cmp
lods
stos
cmp
add
aas
ficompl
sarl
xchg
jmp
pop
and
push
fsubp
add
cmp
dec
pop
std
lods
xchg
repz
inc
xchg
cld
repnz
and
push
or
mov
cmp
dec
int
ret
divb
sub
popf
movsb
in
in
push
jecxz
and
je
add
xchg
pop
in
push
shlb
mov
test
rcrb
cld
mov
adc
mov
or
jo
dec
in
in
mov
inc
icebp
xlat
ja
xchg
lods
repz
int
sub
test
push
daa
and
arpl
repz
mov
mov
popa
insl
test
lret
sbb
clc
jnp
xchg
adc
or
enter
add
adc
int3
lods
sub
aaa
add
adc
mov
test
xchg
into
mov
dec
sahf
cmp
mov
sarb
test
lods
sahf
dec
push
hlt
mov
mov
xchg
mov
mov
rolb
jne
mov
push
push
sar
add
lret
out
test
mov
cmp
std
std
aaa
mov
or
enter
pop
addr16
test
repnz
or
adc
lock
jmp
imul
and
les
cmpsl
pop
xor
pop
repnz
inc
out
add
test
mov
aas
jge
lahf
bound
dec
lds
test
add
push
mov
in
xor
adc
xchg
jb
outsl
aad
sti
inc
adc
dec
push
jmp
dec
adc
fs
gs
cltd
insl
ds
pop
jne
lds
stos
mov
push
out
cmc
jp
pop
and
stc
imul
mov
adc
jno
iret
pop
fistps
std
push
dec
ret
loopne
outsl
pushf
jne
xor
jg
adc
push
subl
cltd
sbb
inc
stos
or
scas
push
rsm
xchg
inc
mov
ljmp
sbb
xor
xor
dec
cmc
mov
repz
sub
cwtl
sub
xchg
mov
out
jns
pop
jecxz
sub
in
jg
push
jl
inc
cmp
cmpsw
xor
add
push
mov
xor
scas
sbb
icebp
loope
pop
adcl
sbb
add
pop
mov
cld
fsubrl
push
pop
loop
dec
leave
jns
sub
gs
insb
imul
xchg
lret
pop
jg
insb
aad
or
mov
out
sbb
dec
xchg
xor
lcall
push
pushf
or
nop
mov
lock
je
push
pop
pop
xchg
jmp
scas
pushl
jmp
daa
xchg
mov
push
andl
test
fldenv
lods
cmpsb
rcrb
outsb
push
mov
fists
lds
mov
dec
in
sub
or
add
push
daa
ret
cmovs
jnp
movsb
push
aad
movsb
adc
jecxz
popa
xchg
dec
mov
sub
mov
push
mov
lea
push
fdivrl
cmp
xchg
inc
jae
into
jno
xchg
push
inc
mov
xor
cwtl
cmp
cmp
ja
sbb
mov
iret
xlat
jg
nopl
scas
clc
cwtl
js
test
adc
cltd
mov
je
inc
push
push
mov
lret
hlt
outsb
pop
mov
int
aam
dec
push
sbb
rcl
cmpsb
loopne
mov
jle
lds
out
jmp
sbb
fsts
fs
sub
push
in
ja
mov
insb
lock
or
pop
out
insb
xchg
mov
cmpsb
adc
mov
cmp
mov
dec
arpl
push
mov
jp
arpl
dec
jo
add
cmp
movsb
pop
outsl
ss
mov
test
inc
cmc
das
mov
decl
mov
mov
sbb
jl
inc
test
cli
xor
cwtl
sub
xor
mov
subb
scas
sub
xlat
mov
leave
sbb
pop
loopne
fstp
sbb
pop
xchg
fsubrl
test
and
cwtl
fsts
mov
mov
fwait
int
mov
repz
fldenv
jo
outsb
out
push
adc
add
shll
ret
sub
rorl
sbb
jno
gs
and
leave
testb
cmpsl
int
add
dec
rcrl
xor
cmpsl
fnsave
loopne
jb
in
mov
popa
in
xlat
ja
mov
arpl
sbb
loop
imul
mov
mov
enter
leave
fadds
outsl
push
ficoms
pop
add
lahf
fildl
out
xor
jns
mov
mov
ret
std
out
imul
xor
xlat
push
enter
jle
pop
inc
insl
jmp
inc
outsl
push
mov
ret
sbb
mov
out
push
cmp
push
mov
jle
mov
stos
dec
jle
in
cltd
xchg
pop
lds
aaa
fistps
jmp
shrl
push
rorb
roll
pop
test
int
mov
dec
out
dec
int
imul
cld
rorb
test
dec
sbb
hlt
push
imul
jmp
ret
fisubrs
sarb
xchg
andl
mov
test
dec
mov
mov
addr16
xor
jmp
jno
mov
rcrl
sub
mov
mov
xchg
adc
outsb
dec
dec
sbb
test
fnstcw
in
sbb
aad
push
xchg
aad
or
sbb
lea
test
xchg
shlb
lahf
mov
shll
push
push
mov
push
or
push
movsl
xor
adc
movsb
loopne
xor
xchg
push
ret
or
ret
popa
cmpsb
mov
sub
jmp
add
insb
hlt
or
push
add
inc
and
cmp
inc
jl
rcr
movsb
test
ds
xchg
jle
push
jns
mov
mov
add
pop
cmp
aam
xchg
gs
jno
dec
xchg
pop
push
xchg
fs
pop
xchg
xchg
jecxz
jp
jmp
aam
mov
dec
mov
push
fstps
sub
mov
xchg
pop
stos
scas
mov
lock
je
lret
test
xchg
and
dec
mov
scas
sarl
push
xchg
inc
sub
aaa
jecxz
push
jne
jg
std
cmc
aam
xor
rcr
jmp
xchg
adc
imul
jns
mov
pop
xor
and
jae
lods
int3
push
fcoml
xchg
fs
ljmp
ret
mov
pushf
pop
clc
cli
jnp
in
aad
arpl
repz
pop
jns
out
sbb
adc
jo
in
pop
push
mov
or
mov
js
cli
mov
mov
mov
fdivrs
enter
shrb
icebp
dec
stos
lahf
dec
iret
rol
fwait
jno
in
xchg
and
test
xchg
and
int3
int3
mov
lret
or
jle
popa
or
cmp
leave
sub
or
outsl
lcall
lahf
aam
jl
lds
test
adcl
outsb
pop
fldt
call
xchg
insb
je
inc
or
clc
inc
shlb
ljmp
push
and
flds
xor
jb
jnp
pusha
jle
sub
imulb
sbb
xchg
xchg
sub
stc
sbb
test
fistl
add
inc
mov
icebp
movsl
xchg
sti
jo
rcl
mov
sub
mov
rcll
fidivs
dec
xchg
mov
inc
and
inc
adc
or
mov
mov
cmp
mov
or
dec
mov
div
sub
dec
ds
cmp
enter
xor
and
inc
mov
repnz
xor
push
xchg
cmp
dec
flds
mov
pop
push
sbb
enter
inc
mov
ljmp
pop
out
push
outsb
popf
lret
pop
stos
xor
int
jb
imul
scas
push
add
enter
pop
loope
mov
jmp
int3
in
and
int3
incb
dec
mov
adc
ret
push
push
add
das
inc
xchg
or
fimuls
inc
aad
mov
loope
mov
mov
out
rorb
sbb
xor
push
outsl
or
loopne
cmc
inc
jecxz
aam
sbb
vshufps
xor
xchg
popa
fbld
enter
xor
cmp
mov
push
mov
out
mov
cltd
je
stos
push
ljmp
mov
xor
mov
dec
inc
jo
xchg
lea
cmp
pop
mov
nop
bnd
and
push
jb
sbb
add
loop
rcl
das
inc
ss
test
adcb
cmpsl
pop
fsubrs
add
movsb
lret
popf
es
xor
mov
jo
sbb
pop
popa
imul
mov
jge
iret
cmpsl
lret
hlt
or
aas
mov
jbe,pt
dec
sbb
addr16
cli
inc
jecxz
pop
adc
scas
cmc
xchg
loope
pusha
inc
jp
outsl
push
sti
rclb
mov
xchg
mov
jp
sub
fsubp
sub
jb
shl
rcl
adc
push
mov
mov
scas
stc
mov
dec
sub
lahf
or
dec
aad
push
mov
xor
or
or
inc
and
daa
sbb
lods
fistl
data16
subb
scas
aas
test
gs
mov
push
mov
jge
ljmp
in
leave
roll
lcall
push
sbb
inc
and
push
and
incl
in
dec
nop/reserved
lock
jg
test
mov
arpl
int
jb
fcomps
popf
mov
dec
imul
pushw
in
add
sti
xchg
inc
pusha
pop
cmp
scas
pop
lret
jno
imul
and
push
cmp
dec
push
fistl
or
xchg
test
push
xchg
imul
sar
xchg
sahf
sbb
add
xlat
int
sub
sub
gs
xchg
inc
stc
jns
mov
and
jmp
stos
mov
pop
push
jl
in
hlt
xor
scas
arpl
and
mov
xor
bound
jmp
sub
xor
sub
mov
ret
dec
mov
xor
mov
jnp
outsl
fsubrs
xlat
iret
arpl
aaa
and
mov
fstps
dec
jp
dec
cli
and
dec
je
cmc
call
adc
fwait
mov
pushf
gs
jecxz
adc
dec
stc
inc
mov
shrb
fsubs
loope
lds
lods
adc
bound
int3
inc
add
out
int
push
cmpsl
sahf
push
jg
ret
ja
push
imul
mov
xor
jmp
jmp
or
cmpsl
es
sbb
add
dec
and
aas
movsb
call
pop
inc
push
sbb
add
fcmovbe
push
dec
jae
lcall
mov
add
sub
mov
dec
je
ret
lea
movsb
mov
shll
es
scas
mov
aam
out
imul
and
push
aas
sub
test
or
lahf
rcl
andl
lea
fsubl
in
push
rcrl
jmp
fcmovne
adc
cwtl
fistpll
xor
jb
xor
xor
test
pop
fisttps
xor
add
or
or
jae
test
cmp
sbb
fdivp
add
movsb
cmp
inc
mov
dec
cmp
leave
lods
cwtl
leave
mov
mov
fimull
cwtl
adc
test
imulb
shll
mov
lods
call
sbb
cmc
loop
sti
movsl
stos
adc
fld
outsl
xchg
dec
and
mov
mov
scas
lret
ljmp
xor
popa
jo
cmp
xlat
xorl
cs
mov
rcll
jo
push
mov
push
mov
cmp
cmp
cli
cmp
cltd
stc
push
outsb
repz
xchg
dec
mov
jmp
test
iret
pushf
cmp
lret
fcompl
movsl
cmpsl
push
sub
aaa
mov
mov
std
fisubrl
fwait
int
int3
cmpsb
mov
mov
pop
pop
jecxz
icebp
or
push
aad
mov
cli
addr16
std
outsb
sub
sub
pop
inc
out
xchg
cmpsb
jbe
and
push
dec
or
adc
fs
xchg
dec
out
pop
imul
lea
aaa
mov
add
xor
fnstenv
pushf
sti
or
clc
scas
and
call
mov
xor
jle
pop
roll
push
js
movsb
stos
adc
jecxz
lret
mov
hlt
jb
shlb
mov
pushl
mov
mov
subl
inc
and
sub
sbb
in
cli
dec
into
xor
mov
and
push
dec
leave
sti
mov
dec
sub
sbb
jb
inc
sbb
xchg
in
gs
movsb
xchg
or
inc
pop
icebp
lock
xchg
inc
adcb
js
cmp
jo
cmp
jns
mov
fs
addr16
cmp
hlt
outsb
dec
lret
ss
out
cmp
and
pop
test
imull
imul
lret
inc
xlat
cmp
clc
divl
cld
out
mov
cltd
test
rcrl
xchg
loopne
cmp
inc
fcompl
enter
vrcpps
pushf
dec
fwait
or
outsl
push
dec
push
mov
insl
sub
out
adc
mov
push
jo
lret
call
xchg
aas
rorl
in
mov
mov
pop
jbe
mov
cs
cmp
addl
jb
shlb
inc
dec
es
icebp
out
xor
outsb
mov
ljmp
mov
push
in
xchg
xlat
inc
jmp
inc
or
mov
push
and
es
adc
in
adc
ljmp
test
pop
aad
cmp
pop
jmp
ljmp
add
fwait
mov
insl
inc
lcall
mov
movb
sub
mov
mov
jne
pop
and
push
ss
jecxz
lods
xor
mov
jns
hlt
cmpsl
xor
mov
loope
fstpl
mov
cmp
adc
repz
sbb
xor
xor
sbb
xabort
ss
adc
mov
fdivs
test
xchg
xchg
popa
pop
sub
lcall
mov
or
les
icebp
popf
push
data16
sti
lret
scas
jmp
lods
arpl
aas
or
aam
mov
xor
add
jne
fisubs
inc
dec
shlb
repnz
or
sbb
mov
test
cmp
jmp
ds
ds
xor
test
into
jno
dec
jne
fistpl
ja
dec
fnstenv
mov
xorb
inc
nop
lock
xor
adc
repnz
jge
or
xchg
mov
xor
hlt
and
mov
and
cmc
pop
sahf
lds
or
pop
mov
jmp
xchg
fmuls
jmp
push
popa
and
repnz
inc
cmpsl
out
mov
movsb
jg
out
jae
shrb
xor
xchg
test
cmp
jp
sbb
ret
js
pop
imul
int3
sub
jno
test
or
or
push
sbb
sbb
or
in
imul
sbb
mov
ljmp
cli
repz
mov
comiss
imul
hlt
inc
pop
or
scas
das
adc
push
ret
in
mov
inc
int3
fwait
jmp
fstpl
mov
cltd
scas
lret
adc
add
sti
lea
ja
pop
ds
mov
mov
pop
inc
cli
aaa
sarb
pusha
xchg
movl
sbb
add
add
lods
in
inc
xor
add
aas
es
or
pushf
dec
popf
and
inc
bound
daa
mov
jo
or
add
lret
inc
sti
xchg
sbb
push
lea
pop
cmpsb
mov
adcb
jp
cwtl
cmp
pop
or
jg
xchg
cmp
xchg
jge
xchg
jbe
pop
cmp
aaa
repnz
iret
shl
cmp
repz
and
sti
movsb
inc
cmpsl
or
int
leave
inc
mov
ficompl
sbb
clc
sbb
jns
xchg
js
push
int3
xchg
sahf
pop
bound
rcrl
mov
xor
jge
shll
push
dec
out
and
xchg
sub
adc
pop
cmp
shlb
aaa
mov
hlt
add
jge
sbb
pop
jge
imul
aas
jo
shrl
and
lods
adc
popf
shl
jp
push
dec
adc
xchg
xchg
jnp
push
jnp
mov
mov
pop
arpl
jb
mov
aas
arpl
outsb
sub
shl
addl
xlat
dec
sarl
xor
cmp
cli
fisttpl
int
inc
push
sub
hlt
push
out
rcl
nop
xchg
push
stos
sbb
roll
cmp
mov
repnz
lods
int
mov
jne
hlt
jo
aam
jns
fwait
xor
shll
cmpsl
lahf
or
mov
adc
shl
mov
pop
jbe
in
filds
push
lcall
lret
mov
mov
or
das
adc
lahf
or
mov
loop
push
out
aas
push
mov
xor
je
pushf
xor
push
push
aam
adc
andb
pop
mov
ret
adc
cmp
test
in
jne
mov
push
inc
inc
sub
pop
sub
pop
and
sbb
std
shll
addb
lock
xchg
mov
or
mov
test
sbbl
jb
rorl
mov
cmp
repz
loop
mov
adc
xor
bswap
imul
dec
mov
in
xchg
adc
aaa
sbb
out
jl
jbe
sahf
scas
jl
push
arpl
mov
les
push
lcall
divl
pop
lock
jb
cwtl
dec
add
mov
mov
xchg
mov
pop
out
ds
mov
fildll
xor
in
jecxz
dec
xor
jecxz
or
inc
xor
lds
xor
mov
jmp
mov
and
fldl2e
cmpsl
push
clc
subl
icebp
pop
mov
scas
pop
nop
cltd
mov
test
out
sbb
enter
mov
add
gs
jnp
xchg
roll
push
pushl
fbstp
test
je
cli
mov
popa
mov
xor
cmp
pop
lret
pop
scas
jg
adcb
daa
stos
pop
xorl
addr16
sub
add
dec
into
sti
pop
aaa
add
mov
scas
xchg
popa
repz
add
adc
adc
jmp
sbb
arpl
and
arpl
jp
mov
pop
loope
outsl
loope
dec
std
mov
popa
mov
mov
jb
add
inc
aam
lret
mov
ror
daa
std
mov
fst
fisttpll
lahf
gs
cmpsb
in
ret
or
jmp
pop
or
aas
aas
push
rcll
mov
adc
dec
out
mov
jns
fcoml
xor
testb
pusha
lahf
jg,pt
jb
lret
jg
xlat
adc
and
iret
inc
xor
mov
add
testb
mov
sbb
ljmp
repnz
push
shlb
je
lods
in
sub
stc
ss
jnp
fstpt
jg
sbb
cmp
jecxz
xchg
mov
cli
imul
fsubrl
cmpsl
outsb
xrelease
pusha
sub
dec
mov
test
leave
pop
xchg
icebp
jbe
adc
and
lcall
test
imul
adc
xor
test
push
inc
fdivrl
sub
scas
inc
inc
lods
inc
insb
add
ror
test
das
in
out
pop
dec
push
out
in
fidivrs
das
test
push
sbb
or
fdivr
fwait
mov
fwait
xor
mov
push
fists
dec
cmp
mov
in
mov
mov
arpl
pop
lods
inc
mov
loop
shrb
enter
hlt
lret
jecxz
xchg
fdivrl
clc
std
cmc
fisubrs
out
ss
fsubs
add
sahf
arpl
test
push
sbb
push
call
fwait
cli
stos
in
out
xchg
mov
lret
push
xchg
fwait
sbb
shrb
xchg
inc
cmpsb
add
jae
adc
fwait
and
and
pop
shlb
xchg
lret
loopne
sti
xchg
out
xor
ds
xor
cmp
and
mov
clc
jle
xchg
add
paddd
adc
ret
imul
or
xor
push
or
jmp
aad
je
cmp
push
shr
cmc
and
inc
ja
aad
ja
hlt
aaa
fcoms
dec
in
mov
test
fisubrs
pop
aaa
stos
sbb
loopne
loop
lock
js
adc
push
inc
fisubrl
mov
inc
popa
test
dec
cmp
ljmp
mov
ret
stos
cmc
xchg
jnp
js
insb
insl
aam
pop
int
cmp
arpl
sbb
push
cmp
nop
out
mov
mov
jmp
mov
pusha
or
pop
inc
sbb
push
xlat
push
pop
jle
add
or
mov
enter
std
push
popf
xor
jge
into
adc
xchg
sti
jp
iret
nop
divl
scas
pop
jle
lret
shlb
les
iret
daa
scas
xchg
jle
orl
rorl
mov
popf
xchg
pop
xchg
jnp
jae
adc
pop
test
push
outsl
pusha
dec
and
or
push
ja
push
jne
aam
jmp
sub
in
dec
sbb
pop
inc
testb
js
arpl
mov
data16
xchg
mov
mov
fldenv
in
fs
lods
shlb
outsb
xor
cvtdq2ps
push
data16
lea
fldcw
mov
xorb
jb
movl
xor
mov
mov
lret
inc
imul
aam
fwait
jae
movsl
lods
out
or
pop
lret
sti
lds
mov
lea
xorl
jne
jns
mov
sub
mov
sbb
dec
mov
test
sbb
into
outsl
cld
pop
sbb
lods
push
mov
inc
jge
cmc
lods
nop
xlat
xchg
lea
loope
dec
lods
lods
jmp
pop
inc
sbb
xlat
icebp
sbb
orb
cmp
addr16
cmpsb
inc
mov
mov
add
fisubrs
mov
cmp
int3
filds
xchg
sub
mov
jae
hlt
call
jg
decl
sub
pop
int3
std
xor
jg
adc
cmp
add
xor
push
inc
out
xchg
lret
pop
lahf
jne
push
sbb
inc
mov
jne
add
mov
daa
shl
leave
xchg
mov
je
jnp
xor
ror
mov
outsb
push
ret
out
insb
sub
stos
outsb
push
repnz
jg
jmp
pop
xor
dec
subb
outsb
push
mov
dec
lea
stos
mov
inc
in
outsl
out
inc
std
aaa
mov
push
push
psubb
pop
and
fs
cmp
sbb
sbb
jb
in
sub
repnz
ja
mov
std
jo
adc
mov
mov
dec
or
push
jbe
test
mov
sub
inc
jle
or
stos
inc
cli
inc
push
cmp
xchg
sbb
test
or
shll
stc
aas
pop
in
push
popf
inc
stos
stos
pop
mov
rclb
sbb
cld
inc
in
repnz
lods
imulb
sahf
insl
jg
fwait
xor
mov
and
sti
hlt
inc
pop
addb
pop
lea
mov
xchg
inc
cmpsl
add
adc
les
ja
mov
mov
enter
and
orb
pusha
add
push
jno
divb
lcall
hlt
mov
mov
mov
cmp
out
out
mov
inc
ss
adc
push
cwtl
push
arpl
inc
xor
pandn
mov
and
insl
add
addl
out
test
mov
aaa
jg
xlat
and
lds
jl
xor
je
sahf
leave
cmp
pop
or
dec
mov
inc
outsl
jg
dec
lods
leave
cltd
negl
sbb
lret
pop
mov
push
outsb
inc
adc
popa
pop
xchg
movsb
cli
nop
add
pop
cs
mov
xchg
dec
pop
out
shlb
sub
testl
popa
xorl
loopne
pop
out
test
xlat
addr16
je
popf
xchg
sub
xchg
dec
mov
mov
cmp
test
cmpsb
aas
jnp
imul
mov
and
aad
shlb
xor
lea
in
in
cmpsl
cmp
repz
xchg
cld
jmp
adc
mov
shl
call
jecxz
ss
xchg
adc
add
dec
xor
bound
xchg
inc
mov
cmp
gs
sub
xchg
test
rcrb
mov
dec
adc
adc
addb
andb
insl
inc
mov
fimuls
or
rcrb
mov
dec
push
adc
adc
ss
cltd
inc
mov
push
lea
sub
push
jb
cmp
stc
mov
jge
xchg
mov
mov
aad
loopne
inc
js
jl
inc
enter
jb
dec
xchg
hlt
js
insl
iret
xchg
dec
xorl
cmp
xchg
fdivl
push
sahf
jg
into
dec
mov
mov
mov
pusha
inc
mov
xchg
imulb
mov
int
test
negb
shrb
sbb
arpl
push
mov
js
add
ret
inc
orb
dec
or
leave
pop
outsb
nop
lahf
dec
mov
gs
div
inc
push
cmpsl
in
sub
rcll
push
push
xchg
push
jno
pop
nop
pop
nop
stc
cltd
cmp
jb
jl
mov
mov
aam
mov
fldenv
jno
bound
sbb
repnz
jne
aam
js
xlat
dec
scas
pop
and
scas
xchg
and
pop
push
lret
or
sbb
imulb
mov
mov
jmp
rcrb
adc
push
mov
xor
xor
stos
pop
call
cmpsb
lods
push
stc
push
mov
imul
ds
lods
add
jmp
out
xorb
lock
add
xor
rcrb
mov
inc
dec
pop
stos
mov
pop
adc
sbb
add
iret
inc
mov
pop
stos
dec
stos
xor
jb
mov
mov
xchg
sbb
or
dec
jns
dec
push
and
or
mov
in
stc
aaa
mov
in
xchg
xor
jne
xchg
les
or
jl
outsb
cwtl
mov
adc
cmp
pushf
fwait
aam
ss
in
stc
std
scas
jbe
fwait
dec
push
nop
jle
cmp
insl
pop
push
das
or
push
push
repz
push
out
sub
insl
int
std
cmp
or
lret
fs
lcall
dec
nop
sbb
out
and
ret
jb
add
aam
repz
dec
xchg
sbb
test
bound
aaa
insl
mov
dec
sub
jg
sub
loopne
cmp
pop
js
and
lods
xor
mov
xchg
pushf
mov
cwtl
in
nop
sub
inc
imul
inc
popa
jnp
xchg
push
daa
gs
cmpsb
jg
mov
test
xchg
xor
sub
sahf
nop
shll
or
mov
push
pusha
sbb
xor
rsm
sub
sti
enter
cli
push
adc
push
das
add
push
mov
mov
mov
mov
pop
fsubr
cmp
clc
mov
dec
cmp
lock
push
call
gs
pop
inc
mov
push
in
pop
fistpl
mov
cmp
int3
sbb
or
sub
in
add
out
add
pop
jo
adc
pop
cmpsb
mov
aaa
ficoms
xor
in
andb
scas
xor
call
imulb
and
or
and
std
in
popa
jg
adc
mov
mov
cmp
mov
or
test
dec
inc
cmp
adc
ss
xchg
leave
roll
shrl
sbb
shlb
pushf
push
js
ljmp
cmp
sbb
sbb
cld
repnz
movsl
lods
inc
sub
push
int
fadds
icebp
loopne
xor
xor
aad
rcll
and
sbb
mov
int
cld
mov
jl
sub
jl
shrl
mov
sbb
xchg
mov
xor
sub
adc
addr16
push
in
or
bound
fiaddl
xchg
nop
adc
leave
pop
jp
mov
inc
hlt
jl
gs
jmp
sbb
js
jle
iret
jp
faddl
mov
imul
xlat
ds
fldcw
mov
ror
pop
test
mov
cmp
fs
inc
cli
xchg
cmp
mov
dec
mov
push
ret
movb
leave
mov
loope
jbe
cmp
inc
pusha
test
push
pop
and
loope
push
adc
mov
jnp
xor
jp
add
ja
cmp
insl
scas
adc
loope
adc
mov
and
inc
jnp
adcl
sbb
aad
pop
out
das
lret
adc
dec
push
adc
adcb
or
scas
xchg
inc
test
push
lea
mov
mov
fdivrl
jnp
sahf
xchg
das
mov
mov
cmp
sbb
sub
sbb
jae
mov
add
sub
mov
add
jb
or
mov
outsb
xchg
fisubs
inc
in
pop
inc
std
je
push
lea
repz
and
fucomp
jns
scas
sahf
popa
cmc
enter
test
idiv
xor
jmp
addr16
sbb
inc
test
ss
adc
or
push
stos
ljmp
push
daa
mov
add
movsl
out
rcr
or
xchg
xor
jecxz
push
pop
sbb
jge
lock
inc
cmp
add
or
jo
int
push
les
je
test
mov
xlat
icebp
subb
loope
xor
inc
int
das
pushf
cmpsl
xchg
inc
cmpsb
mov
pop
jb
iret
adc
cltd
pop
inc
mov
in
call
testl
lcall
bswap
jae
mov
data16
jle
rcll
or
jl
mov
xor
xchg
fildl
jmp
mov
sub
push
inc
lea
lahf
prefetch
mov
dec
mov
test
dec
xorl
jbe
xor
scas
or
sbb
cmp
iret
pop
push
adc
adc
stc
aam
push
jbe
pop
push
xchg
lea
lret
dec
movl
jae
inc
cltd
stos
inc
xlat
mov
popa
nop
xchg
cli
ret
adc
sbb
xchg
int
aad
push
ljmp
dec
cmpsb
pushf
cmpsl
sbb
jo
push
xchg
movl
pop
mov
adc
push
loop
fs
rorb
testb
adc
jnp
mov
cmp
xchg
hlt
gs
int3
fildll
push
xchg
xor
inc
mov
pop
adc
stos
xlat
cmpsl
jg
aad
sahf
inc
std
sbb
insl
or
je
pop
ret
ret
cmpsl
sub
outsb
aas
ds
mov
and
mov
ret
and
sub
sbb
scas
cs
mov
insb
int3
and
jg
lret
pop
mov
mov
dec
pop
fcomps
push
jmp
push
adc
pop
inc
mov
into
sahf
in
into
pusha
push
jno
aam
ret
cmpsb
mov
and
movsb
stc
pop
pop
and
lcall
and
push
sbb
mov
call
scas
push
adc
in
out
mov
xchg
xor
shrb
or
and
mov
rorl
call
fmulp
jg
loopne
ljmp
mov
push
jns
mov
lock
data16
sti
dec
mov
popf
int3
inc
in
enter
sbb
xchg
cmp
sub
std
and
push
dec
arpl
repz
push
sub
cltd
jbe
mov
popa
add
fdivl
test
stc
xor
lds
jmp
cmp
push
mov
in
jp
jp
scas
mov
faddp
lea
lcall
xchg
in
xchg
fstpl
xor
sbb
leave
outsl
pop
subb
jp
adc
and
test
push
popa
es
fucom
insl
dec
out
mov
arpl
lea
mov
ljmp
mov
cmp
les
sub
cmp
outsb
xor
jae
lcall
mov
xor
or
repnz
pushf
push
daa
jmp
add
pop
add
sub
mov
sbb
fildl
sub
mov
inc
xchg
addr16
xchg
in
mov
xor
pop
sbb
iret
stos
push
call
mov
incb
cld
stc
and
mov
ljmp
je
pop
push
sbb
in
mov
or
inc
andl
add
shlb
push
popf
mov
imul
leave
jl
loopne
or
int3
shr
add
testl
fwait
dec
subl
xchg
lock
pop
jnp
inc
dec
ret
popf
inc
stos
ds
rcll
out
dec
sahf
pop
fists
ret
cli
ret
stos
mov
outsl
imul
mov
xchg
dec
xor
movsl
ret
cmp
cmp
cmp
lahf
dec
lahf
bound
sahf
jp
ret
add
dec
inc
sti
dec
lahf
hlt
xchg
ss
push
je
repnz
testl
arpl
jmp
cmp
xor
pop
or
jle
jg
in
push
enter
jbe
aad
pusha
mov
mov
rorb
push
xchg
jns
bound
xchg
cmc
mov
adc
ljmp
fidivrs
and
push
mov
mov
mov
arpl
nop
jo
cmpsl
adc
lea
sarb
xchg
in
and
sbb
pop
jno
scas
fists
xchg
sub
jl
and
lcall
loop
xor
xor
mov
outsl
cmp
movsl
je
adc
sbb
push
stos
and
stc
cmpsb
xlat
push
sub
push
lahf
fists
cs
fadds
mov
dec
in
xchg
and
add
es
push
sahf
outsl
xchg
push
loopne
mov
ljmp
fcom
mov
cli
inc
arpl
sbb
insl
lods
or
pop
fstl
inc
mov
jbe
sbb
sbb
jl
arpl
and
adc
lods
and
ror
xchg
loopne
shrl
nop
sub
ljmp
dec
cmp
call
xchg
pop
mov
or
mov
jle
mov
push
cmovp
stc
add
lahf
sub
push
or
stos
aas
xchg
rcl
sub
mov
mov
in
das
or
and
sbb
dec
stc
cmpsl
in
enter
xchg
repnz
pop
push
lret
adc
dec
cwtl
jnp
inc
ljmp
add
dec
in
ja
leave
in
xor
pop
jmp
pop
lcall
aaa
and
push
aas
jno
fmulp
mov
jmp
xchg
imul
stos
xchg
gs
sbb
jne
fmull
cmpsb
mov
add
loop
add
iret
cmpsb
and
shl
aad
pop
inc
nop
pop
bound
fcomp
mov
dec
dec
push
jnp
insb
sub
dec
jl
call
ss
pop
stos
cmp
clc
cmp
xchg
addb
cli
push
outsl
push
cs
or
pop
xchg
movsb
cmp
testl
or
mov
int3
popa
and
pop
imul
ret
mov
and
out
push
out
arpl
mov
xchg
icebp
sub
enter
sbb
inc
mov
push
dec
rcrl
repz
sbb
mov
mov
pop
mov
sbb
loopne
dec
es
xchg
ret
mov
pushf
test
idiv
or
mov
inc
cli
mov
popa
jmp
sub
cmp
sub
icebp
sbb
fmuls
and
lret
std
xor
inc
test
paddw
stos
ret
sbb
lock
mov
pop
insb
add
pop
sahf
mov
jo
pop
dec
jmp
aad
xor
int3
fcom
aam
or
stos
fstpl
cmp
or
lea
loopne
cmp
mov
or
sti
out
daa
mov
rdmsr
fs
imul
push
bound
cli
xor
mov
xor
xchg
test
rcll
sub
fcomps
mov
in
insb
inc
jmp
xchg
pop
add
sbb
rorl
les
jne
push
dec
test
push
into
or
cmpsl
sbb
test
jo
aad
loope
jmp
xchg
pop
jb,pt
sahf
jnp
rcll
ret
mov
aad
inc
dec
js
jo
mov
or
fisubs
mov
int3
loope
mov
ret
pop
ljmp
push
inc
mov
add
inc
decb
jecxz
test
dec
and
imul
lock
ret
push
mov
fidivl
cltd
and
fidivrl
push
xor
loopne
call
jecxz
xor
adc
cmp
xchg
push
jl
push
mov
fs
xchg
or
sub
fnsave
cli
add
mov
push
stc
pop
fists
mov
fildll
pop
pop
xchg
pusha
xchg
xchg
bound
sbb
enter
stos
mov
jbe
enter
repz
loop
add
and
and
inc
mov
jge
ss
add
push
jae
jno
fcoms
clc
addb
out
adc
test
push
xchg
adc
jae
mov
fdivl
cmpsb
mov
iret
mov
jp
mov
lahf
push
inc
cmpb
pop
inc
push
scas
mov
mov
pushf
xorl
nop
adc
stos
enter
cwtl
popa
fbstp
aas
sbb
mov
lcall
es
mov
pop
in
mov
sub
movsl
adc
pop
pop
inc
mov
fdivl
punpckhdq
insl
mov
lds
mov
outsb
pop
push
pop
lods
push
mov
mov
aas
inc
mov
movsl
xor
mov
sbb
mov
cmp
mov
and
mov
add
dec
ja
jle
lahf
into
nop
jmp
xchg
push
cmp
cli
inc
adc
lcall
jne
xchg
xor
cs
push
pop
dec
popf
aas
shll
jmp
loope
mov
inc
lds
addr16
cmpb
xchg
jmp
inc
pop
jl
fwait
lret
cmp
les
cltd
or
cltd
adc
xor
pop
xor
pop
mov
je
test
or
aaa
or
sub
mull
dec
popa
add
pusha
xlat
cli
dec
es
rcrb
push
ja
jl
inc
test
adc
push
push
enter
stc
push
xchg
sbb
and
rorl
das
xor
jne
inc
fcmovnb
cwtl
pop
pop
ljmp
pop
jb
pop
fcoms
sbb
and
sbb
push
sub
lcall
aam
cltd
in
or
dec
or
cltd
sbb
and
jmp
pushf
pop
int3
cmp
inc
mov
aad
mov
mov
sub
nop
jae
xor
in
fiadds
cmpsl
cmp
in
cmc
loopne
jnp
push
hlt
add
decb
mov
inc
ret
sbbl
imul
test
es
pop
enter
insl
and
pop
sbb
test
mov
mov
rclb
mov
mov
sub
int3
ffreep
add
mov
xchg
mov
leave
sub
bound
orb
pop
lods
xchg
cwtl
rcl
insl
notl
or
daa
shll
cmc
subb
cmpsb
pushf
pop
push
cmp
rorl
pop
ret
xchg
imul
cmp
repnz
shr
in
fstpl
push
cmpsl
das
xchg
sub
ss
jmp
push
popa
xchg
nop
jle
sbb
enter
mov
push
mov
mov
arpl
jl
jo
jecxz
dec
xchg
cld
pushf
sbb
adcl
pop
jbe
pusha
xor
rcrl
mov
shll
jmp
sub
fcompl
mov
cwtd
jno
adc
stos
sub
or
inc
mov
adc
rcrl
movsl
cwtl
call
rorb
xchg
mov
xchg
inc
pop
xor
mov
sbb
das
pop
mov
pushl
adc
mov
sub
aad
aas
xor
pop
or
out
call
add
xchg
push
cvtps2pd
jnp
xor
xlat
jecxz
xchg
ficomps
push
cmp
outsl
push
sub
xor
mov
dec
push
xchg
push
call
cmp
shr
mov
jmp
xor
jnp
rol
xor
push
int
inc
push
or
daa
or
sbb
lret
pop
sbb
clc
iret
shl
cli
cmpsl
jb
adc
testl
leave
scas
xchg
setg
pop
ror
nop
inc
jae
adc
dec
mov
cmp
ret
xor
or
jl
pop
xchg
imul
arpl
dec
enter
addl
mov
cmp
out
mov
and
fildl
and
mov
test
sbb
ss
and
inc
push
mov
lock
dec
jne
repz
lahf
adc
sub
xlat
in
mov
rorl
mov
pop
or
test
movsb
xor
fst
bound
adc
lods
adc
inc
lret
aad
push
test
testb
adc
es
aaa
scas
cltd
xchg
or
cmpsb
bound
test
rsqrtps
cmp
dec
pop
pop
loop
pop
jp
addb
pop
jl
mov
mov
or
in
dec
mov
andl
les
popf
mov
iret
pop
mov
ljmp
mov
int3
inc
pushf
rolb
test
das
dec
adc
stos
ret
mov
dec
xlat
inc
adc
cwtl
imulb
rcrb
jbe
pop
call
into
ret
clc
ss
test
dec
enter
and
xchg
xor
in
pusha
jg
cmpsb
jmp
inc
shlb
mov
insl
adc
mov
mov
popa
popa
push
js
lods
xor
push
daa
les
test
mov
cmpsl
popa
daa
js
popf
out
cld
adc
sub
sbb
mov
pop
idivb
or
hlt
mov
imul
ds
popa
dec
iret
dec
fsubrs
lret
outsl
int3
xlat
enter
call
sahf
adc
mov
inc
pop
sub
imul
pop
jo
push
xor
arpl
jle
stos
enter
mov
pop
into
inc
add
sbb
adc
and
pop
dec
pop
sub
xchg
das
fiadds
cmp
sbb
pop
inc
jecxz
dec
je
ss
push
xchg
pop
repz
push
mov
daa
fnstenv
mov
pop
push
jmp
add
xchg
hlt
add
or
outsb
dec
dec
lcall
fsubl
int3
lock
ret
push
jno
mov
push
add
enter
mov
mov
jl
or
add
cltd
mov
jb
mov
dec
jnp
jg
divl
inc
in
mov
jp
lea
or
jne
hlt
insw
mov
push
or
ret
push
lods
test
sbb
xchg
loopne
daa
inc
sbb
push
mov
in
mov
mov
mov
enter
pop
ret
mov
iret
fwait
or
inc
cmp
inc
xchg
add
rorl
mov
mov
mov
xchg
jecxz
cmp
add
jo
mov
cwtl
call
inc
mov
gs
sbb
fisttpll
pop
push
push
or
outsb
test
not
rcrb
stos
or
cmpsl
aaa
stos
ret
mov
loop
mov
shlb
add
cmpsl
pop
add
aas
add
cmc
dec
and
cmp
fildl
xchg
imul
pusha
or
cmpsb
adc
push
popa
fists
dec
icebp
and
mov
jb
add
jns
lahf
push
push
mov
outsl
das
push
mov
scas
cld
push
xor
and
mov
inc
mov
nop
cmp
mov
scas
xchg
fiadds
mov
mov
jle
mov
add
aaa
test
jns
pop
xchg
sbb
iret
xor
clc
or
or
pop
loop
add
data16
mov
xchg
pop
lea
push
cwtl
data16
std
mov
loopne
out
lret
mov
repnz
push
shl
pushf
push
ret
int3
mov
push
mov
or
cmpsb
rolb
leave
jne
test
aaa
mov
add
and
icebp
push
inc
inc
fists
mov
lret
jge
out
or
clc
js
mov
test
das
popf
andl
adcb
call
xchg
xchg
inc
test
test
push
dec
sbb
shrl
jmp
or
nop
cltd
jns
dec
pop
outsb
xchg
aas
rorb
add
push
or
and
mov
fwait
ss
cmp
add
mov
xchg
call
inc
or
out
ret
fldcw
xchg
gs
cld
pop
sbb
dec
clc
jmp
pop
jbe
jmp
push
out
roll
movsl
lcall
out
je
cwtl
jns
push
out
stos
mov
lds
in
cmp
xchg
jns
dec
dec
xor
mov
xor
mov
pop
push
dec
ss
xchg
int3
and
clc
jp
xor
sbb
dec
mov
jo
daa
and
jmp
mov
inc
lods
xchg
inc
mov
sti
es
inc
leave
scas
and
lock
js
idiv
jb
js
mov
lcall
adc
mov
ret
xor
add
xor
jmp
dec
mov
dec
shll
pop
les
lcall
cmp
pop
xor
aam
inc
daa
les
dec
rcl
dec
out
and
xor
lods
mov
out
and
sbb
and
aas
lea
mov
pushf
enter
xor
insb
mov
negl
sbb
inc
into
mov
push
fsubs
adc
and
or
xchg
outsl
dec
push
imul
dec
or
out
xor
lods
and
mov
sbb
jns
jg
xor
jnp
fs
or
push
push
adc
push
add
pop
ds
nop
mov
mov
mov
imul
push
or
aas
xor
inc
cmpsl
out
das
jbe
insl
or
jb
fimull
lret
lcall
mov
mov
ss
pop
lahf
push
fisubl
lret
stc
cld
sub
dec
pop
out
enter
ljmp
jge
scas
fs
adc
lock
ja
xchg
or
cmp
push
inc
out
fs
sar
inc
cmp
push
iret
shll
pop
add
pop
outsb
lcall
inc
jmp
push
jl
mov
shll
and
std
inc
arpl
jb
ficomps
sub
je
test
adc
adc
pop
les
dec
pop
adc
xchg
ror
rcl
push
movsl
lods
mov
push
xor
mov
xchg
lret
or
add
mov
cmc
mov
xorb
xchg
pushf
insb
dec
mov
aam
inc
xchg
scas
or
push
movsl
pop
lea
clc
or
xor
or
xchg
das
adc
cs
mov
or
inc
and
push
pushf
add
add
add
std
xor
sub
mov
cmpsl
fisubrs
inc
std
or
adc
in
mov
lods
adc
xchg
sbb
add
scas
insb
out
add
sbb
cmp
mov
sub
loop
pusha
xchg
mov
rcl
xchg
xor
shll
les
dec
rcll
add
scas
push
inc
fmuls
push
sbb
mov
inc
sub
insb
jle
xchg
and
rol
inc
mov
andb
jne
in
jne
test
xchg
mov
push
idivl
imul
sbb
adc
or
sub
jmp
sub
dec
ss
mov
in
xchg
hlt
mov
popf
sbb
sub
pop
push
mov
push
js
mov
addr16
and
dec
ficoml
jmp
leave
xchg
xor
out
int
jmp
insl
loop
daa
jno
lret
push
sub
in
mov
mov
sbb
push
test
add
cmc
jge
mov
pop
adc
lods
jns
mov
pushf
cld
mov
daa
mov
xchg
adc
mov
and
jp
ret
fsubs
aaa
test
dec
fistl
loope
shll
pop
jge
and
xchg
mov
jge
and
xchg
leave
lock
and
test
dec
les
xchg
pop
or
cmpsl
add
xchg
push
stos
clc
dec
sub
out
xchg
push
fsubl
lcall
sarl
fsts
adc
bnd
jbe
fistl
iret
lahf
popf
mov
je
cmpsl
pop
jnp
scas
ds
mov
and
jl
push
xor
out
lcall
roll
jmp
cmpsb
shrb
jbe
popa
lret
mov
jb
mov
xchg
xchg
and
fs
bound
pop
es
add
sub
dec
sbb
call
and
mov
aaa
xor
je
stos
xchg
mov
xrelease
push
jmp
push
lods
loopne
nop
sarb
shlb
xor
js
dec
mov
mov
insb
adc
jmp
cmp
jne
sbb
in
jno
pop
rolb
mov
push
mov
xor
hlt
in
mov
mov
mov
adc
cld
roll
jo
xlat
add
test
mov
movsl
faddp
fcomp
push
add
mov
cmp
cmp
incl
cmp
pop
push
lock
mov
test
mov
mov
jne
pop
cmc
push
sbb
sbb
xlat
shrb
lea
cmpsl
mov
xchg
nop
fcoms
mov
jg
cltd
mov
mov
sub
jl
loope
mov
leave
adc
xchg
mov
inc
push
loopne
int3
mov
xor
insb
pop
adc
lahf
iret
push
dec
ror
add
outsb
fdivl
sbb
ret
in
movsb
xchg
aad
xchg
and
sar
push
lahf
les
cmc
cmp
push
dec
cmp
subl
mov
cmc
icebp
jbe
sahf
jge
insb
std
inc
sbb
xor
xchg
cmp
ds
mov
negl
sbb
lds
inc
cmp
jne
mov
orb
mov
ret
fisubl
xchg
xchg
scas
rcll
scas
gs
sbb
pop
pop
jecxz
xorl
sbb
dec
stc
dec
aad
cwtl
icebp
jecxz
and
andb
push
push
test
testl
pop
lahf
push
cli
or
loop
std
mov
sbb
das
add
mov
mov
fs
dec
cmp
gs
in
hlt
pop
jb
push
xor
test
leave
dec
int
inc
fisttpll
mov
fidivrs
mov
jp
push
mov
mov
pop
mov
stos
add
mov
imul
add
loope
push
push
shrl
shlb
imull
inc
xchg
mov
stos
sub
pop
movd
push
outsl
inc
jne
add
test
push
cmp
mov
scas
jbe
leave
daa
addl
icebp
inc
fbld
adc
or
das
movsb
mov
loop
push
mov
dec
jne
mov
fwait
cld
sarl
shlb
mov
enter
lahf
xchg
cmpsl
sbb
jne
mov
jge
ret
pop
xorb
jecxz
repz
fstl
push
adc
or
mov
push
push
fnstenv
dec
in
inc
mov
in
xchg
ss
call
push
cmc
lock
iret
jecxz
jno
jge
enter
dec
repz
mov
aas
xchg
push
cmp
les
or
push
insl
aad
inc
pop
aam
adc
mov
mov
jo
insl
dec
sar
repnz
dec
mov
repz
scas
in
push
icebp
mov
into
mov
test
cwtl
imul
add
inc
jbe
dec
aam
and
cmpl
dec
adc
dec
out
lds
fdivrl
and
out
std
xor
clc
add
pushf
fisttps
or
dec
imul
in
icebp
dec
addr16
rorb
xor
js
jecxz
sub
into
test
xchg
xchg
xlat
in
in
sub
mov
mov
movsb
add
iret
addr16
cld
or
inc
mov
xchg
dec
mov
add
inc
and
pop
xchg
cmp
sub
lods
xchg
imul
loop
push
sti
add
dec
outsl
inc
shl
aas
inc
mov
jge
vmaxpd
and
push
sub
jecxz
sbb
xor
out
mov
pop
mov
fcompl
adc
xor
hlt
shlb
mov
test
mov
push
insb
xchg
pop
das
jno,pt
pop
andb
mov
int3
lret
dec
push
cli
out
popa
movsl
or
stos
pop
call
xor
inc
sti
fistpll
mov
mov
imulb
hlt
dec
sarb
fsubrl
dec
divl
bound
cli
in
mov
cltd
or
pop
sbb
repz
fcoml
dec
dec
fwait
sahf
mov
pop
cmp
ds
in
and
sbb
mov
or
jmp
xchg
xchg
lahf
push
es
mov
out
sbb
xor
or
imul
add
jo
inc
sub
push
add
outsb
mov
sahf
lret
jb
xchg
mov
fucom
in
jge
loop
push
lods
test
pop
sub
sbb
shrb
jg
sbb
enter
xorb
in
out
dec
es
stos
push
jne
sub
jne
repnz
mov
xchg
insl
divl
pop
leave
add
scas
adc
loop
jo
ret
xchg
jnp
xor
faddl
cmp
jae
pop
repz
adc
in
add
mov
fsubrs
subl
xchg
jge
jmp
jne
or
mov
mov
adc
pop
pop
fmuls
add
mov
xchg
adc
xlat
psubd
pop
jge
fdivl
shll
add
fidivrs
pop
iret
mov
jae
nop
jae
pusha
xchg
fildl
repnz
insb
push
mov
data16
pop
fwait
lcall
dec
sarb
sahf
cmp
sahf
fisubl
scas
lea
lahf
sbb
ret
jp
rcr
ljmp
inc
pop
enter
cmp
lods
icebp
push
push
adc
loop
cli
inc
js
inc
adc
clc
out
lock
mov
imul
fldl2e
movsl
mov
xchg
mov
shll
orb
mov
lahf
outsl
jb
testl
dec
dec
pop
and
inc
add
jo
sub
sbb
and
push
mov
movsb
aaa
pop
mov
sbbb
aad
mov
xor
shlb
lock
aad
inc
xchg
jg
mov
mov
pushf
mov
loopne
dec
int
aam
sbb
cwtd
mov
xor
jl
lret
add
cmp
adc
pushf
push
cmp
mov
xorl
fcomps
lahf
in
jne
pop
loope
insb
pop
mov
mov
inc
cmpsl
cli
mul
push
dec
icebp
cmpsb
stos
sub
iret
repz
mov
int
dec
or
aad
mov
mov
and
sub
or
ffreep
xor
adc
cltd
mov
jno
fsubp
scas
or
rclb
mov
inc
xchg
out
jo
sti
push
mov
lahf
jecxz
pop
cmp
movsl
inc
inc
out
icebp
dec
cltd
loop
inc
xchg
les
fwait
or
cmp
push
bound
or
and
out
push
jecxz
add
popf
add
and
add
xchg
xchg
lcall
cmp
push
sbb
sbb
mov
std
inc
pop
movsb
nop
and
sub
fildll
mov
and
dec
mov
sarb
jle
mov
pop
mov
mov
ficomps
adc
das
jecxz
cmc
ret
jnp
jno
mov
pop
push
or
jnp
mov
jo
xchg
pop
shlb
out
jne
jmp
jmp
cmp
cmc
pmullw
outsb
jae
lcall
dec
mov
add
mov
cmpsb
movsl
jns
xor
pusha
in
cmp
adc
sbb
lret
mov
nop
and
lds
loopne
into
test
into
pop
xchg
xchg
movb
xchg
pop
lock
mov
push
nop
adc
inc
inc
cmp
popa
das
gs
adc
loopne
nop
cltd
push
mov
pop
push
test
incb
cmpl
out
sub
mov
mulb
cmp
mov
ds
sub
out
sub
dec
out
push
js
aad
es
into
outsb
adc
cltd
sbbl
mov
testl
in
pop
hlt
push
shrl
es
inc
mov
test
repnz
xor
lahf
push
dec
fisttpll
pop
mov
aas
lods
pop
xor
mov
xor
cwtl
imul
xor
sub
in
xor
aas
cmp
jp
jp
leave
jge
fadd
int
mov
mov
dec
push
sub
test
mov
lds
jbe
cmp
cmpl
loopne
inc
mov
cmp
xchg
mov
sub
cmpsl
rclb
mov
in
mov
and
idivb
imul
ficoml
sahf
pop
xlat
movsb
cs
decl
lahf
sbbb
push
push
mov
and
or
jecxz
or
test
ret
ret
jecxz
mov
inc
lock
ds
adc
popa
sub
sti
or
lret
mov
or
in
insb
add
jae
test
sbb
call
pop
cmp
mov
daa
fdivrl
inc
test
mov
loop
dec
int3
inc
or
lret
add
cli
add
popa
cltd
mov
bound
mov
xor
xchg
aad
push
jmp
stc
cs
and
mov
jecxz
and
aad
pop
mov
pop
mov
push
pop
mov
ja
outsl
add
xchg
lock
jbe
cmp
xchg
lahf
adc
icebp
cmp
sbb
hlt
mov
fiadds
push
cs
adc
mov
jo
ljmp
dec
data16
inc
or
fsubrl
lea
lea
mov
rcr
xor
mov
scas
std
cmp
and
outsl
daa
bound
mov
pop
popf
dec
test
cli
push
xor
test
aad
outsb
fidivrs
mov
ljmp
cmp
rorb
or
cmp
jae
ret
mov
xorl
lea
out
dec
jmp
gs
add
int
es
jg
lea
mull
or
negl
jecxz
push
mov
push
mov
or
mov
fstps
or
std
outsl
xchg
jmp
adc
jbe
aas
push
mov
inc
xchg
sbb
or
aaa
fmulp
in
hlt
popf
fs
jo
jp
adc
add
add
adc
adc
xchg
push
jnp
lret
lds
adc
bound
testb
cmpsl
push
sbb
jp
cmp
test
popa
fsubr
scas
das
mov
shrl
cmp
pop
lahf
movsl
call
add
test
jle
xorl
dec
sarb
fstl
or
adc
xor
fbld
jb
shrb
adc
and
jecxz
xchg
je
or
addr16
mov
push
add
inc
fistps
mov
sub
sbb
lods
cmp
in
rorl
xchg
shr
lret
outsb
mov
or
inc
es
dec
lcall
xchg
jo
repz
dec
lea
sbb
cwtl
jmp
addr16
xor
cmp
fnstsw
inc
add
sbb
sub
ja
js
ds
pop
xor
scas
fsubl
or
push
scas
shr
xor
jmp
test
push
jb
jge
sbbl
pusha
xchg
scas
stos
mov
imulb
push
sahf
out
ret
jbe
or
xchg
fadd
cmpsl
dec
xchg
mov
sub
adc
loop
mov
dec
fadds
xchg
jmp
daa
imul
sbb
xchg
and
jecxz
mov
pop
sahf
ds
js
inc
ss
add
shrl
js
adc
add
adc
pop
call
das
stos
jp
or
sub
sbb
jns
mov
loop
shlb
icebp
arpl
fsts
es
mov
dec
hlt
cltd
mov
pushf
ret
mov
sub
cmp
mov
xorb
jb
xor
push
sbb
mov
inc
add
adc
cli
int
fistl
stc
dec
into
stos
and
pop
call
daa
or
out
mov
jbe
xchg
cs
xchg
xchg
jecxz
scas
movb
lea
arpl
adc
inc
addr16
decl
call
repnz
lods
sub
jmp
lret
mov
movb
bound
repz
mov
je
in
mov
dec
mov
adc
test
xchg
in
dec
fistl
in
xlat
bound
lret
cltd
ror
or
cmp
ss
mov
loope
mov
inc
adcb
sahf
xor
mov
insl
push
xor
xchg
push
dec
push
gs
out
push
jns
push
xor
lock
add
cwtl
lds
aas
mov
shll
cltd
mov
fidivl
rcrl
xchg
sbb
das
adc
fldl
cld
pop
lds
xchg
xor
mov
xchg
xchg
sbb
je
xchg
and
in
mov
arpl
pminsw
out
adc
mov
dec
or
rcll
push
xchg
sbbl
mov
std
xlat
inc
sbb
loop
sub
icebp
push
repz
add
push
sbb
fidivrl
add
imul
gs
mov
clc
jae
aaa
and
mov
cmp
mov
lods
je
add
into
cmpsl
lods
or
std
mov
fists
mov
sbb
xchg
mov
cmp
or
fwait
mov
fisubrl
jb
mov
xor
das
pop
stos
addr16
mov
and
loope
in
add
loopne
rol
or
lods
leave
add
xor
fimull
cmpsb
cmp
aam
aam
dec
pusha
jg
xor
ljmp
pop
jecxz
pop
inc
pop
jmp
push
lea
fistps
or
jae
lock
arpl
lea
out
ljmp
pop
dec
int
je
lret
cmp
adc
icebp
sbb
push
xor
psllq
insb
jb
repnz
cmpsb
pop
call
xchg
sbb
push
out
adc
jge
dec
ret
pop
mov
adcb
mov
xchg
aam
xor
push
mov
add
jno
je
fsubrl
fnstsw
adc
bound
inc
adc
decb
cmp
mov
and
pop
imul
jecxz,pn
sbb
xor
pusha
mov
jne
mov
sub
ja
fwait
addr16
and
jo
or
dec
adc
push
fstp
out
cwtl
xor
popf
pop
sub
sub
mov
hlt
repz
arpl
sbb
adc
fs
jl
jne
movsb
mov
jle
or
push
scas
movsb
cmp
sbb
sbb
mov
sbb
cmpsl
scas
jno
pop
lret
shrl
and
add
pushf
add
mov
jns
xchg
iret
xchg
xor
push
fwait
xchg
sbb
add
sub
mov
xor
mov
xor
gs
test
pop
push
xchg
xchg
or
pop
jbe
hlt
xchg
dec
jns
mov
rolb
mov
mov
and
ja
std
aam
sub
mov
inc
mov
adc
jno
out
mov
push
adc
xchg
std
insl
stc
out
or
cmp
inc
pop
and
fnsave
pop
addb
xor
stc
pop
rcll
or
cmpsb
lods
inc
fwait
inc
cwtl
xchg
pop
cmc
cmpsb
pop
aas
fldt
dec
sar
jmp
rcll
testl
gs
mov
fnstenvs
lods
in
mov
sahf
mov
test
stos
fnsave
pop
dec
jp
cltd
mov
and
lea
pop
or
mov
cmp
pop
push
js
ret
jnp
pop
into
jns
int3
scas
int3
pop
jmp
lcall
loope
in
dec
push
jbe
jge
jnp
mov
shr
out
fucomi
shrl
and
rorl
cmpsl
cmc
push
in
data16
mov
test
clc
jae
cld
lds
mov
sub
enter
shll
call
test
lcall
and
popf
jg
ss
mov
add
sbb
not
inc
cmp
sbb
jo
adc
daa
jne
or
sahf
cmp
adc
pop
cmp
adc
les
mov
push
sbb
movl
out
aaa
loope
xchg
and
imul
xchg
lahf
xor
movsb
aas
mov
push
cmovge
push
repz
mov
out
jge
aad
nop
ret
sbb
ss
cltd
nop
pop
push
sub
hlt
mov
pop
xchg
add
mov
cmpsb
sbb
dec
jo
fisubrs
daa
aas
mull
jb
inc
cwtl
out
cmp
fldcw
inc
cmp
dec
cmpxchg
dec
mov
popf
xchg
fisubs
pop
subl
pop
andb
addr16
sub
movsb
rolb
jnp
repz
leave
sbb
inc
and
call
jno
pusha
push
out
inc
fldt
shlb
mov
push
test
push
sbb
sbb
pop
xor
pop
xchg
test
fdivrl
adc
addr16
sbb
test
enter
into
and
and
jne
push
cmp
mov
xor
mov
lea
mov
leave
jg
jg
mov
loope
scas
adc
lcall
sbb
pop
ret
lcall
lahf
movsb
movsl
mov
movsb
jb
or
lret
repz
mov
jbe
movsb
xor
xchg
test
int
fbld
jge
inc
jo,pt
mov
push
arpl
adc
mov
lret
xchg
or
mov
cmp
out
clc
gs
jle
pushf
jb
aaa
sahf
insb
mov
jp
sbb
call
scas
int
mov
sti
inc
dec
mov
mov
xlat
lret
insb
pop
in
pusha
sub
iret
push
ss
jl
lods
mov
sub
call
repnz
jg
call
adc
cmc
dec
aam
fcoml
cltd
dec
xor
dec
stc
mov
inc
inc
in
iret
dec
cs
hlt
adc
dec
pop
xchg
cwtl
adc
jecxz
clc
hlt
dec
sbb
stos
dec
lea
imul
mov
inc
sbb
jnp
iret
shl
sbb
mov
mov
pushf
jmp
fs
pop
inc
stos
mov
shl
jecxz
inc
sbb
cld
dec
jne
adc
notl
cmp
xor
lds
in
jno
xchg
and
decb
aam
jecxz
pop
mov
jmp
mov
dec
cmpb
arpl
jp
mov
mov
push
aas
cmpsb
sahf
mov
push
outsb
sub
lcall
test
and
and
pop
add
shll
pushf
fmuls
jo
jl
jae
rol
jle
inc
add
xlat
inc
mov
xchg
lock
loopne
lea
adc
mov
mov
or
xchg
and
scas
adcb
sti
sub
cmp
aaa
add
add
cs
inc
insl
int3
adc
dec
inc
xchg
mov
scas
repz
add
lahf
insb
faddl
loope
xchg
sbb
pop
dec
rolb
jnp
add
test
xor
mov
adc
fxch
mov
sbb
xor
int
insb
sbb
gs
lcall
xchg
enter
pop
and
mov
arpl
mov
mov
xlat
notl
fs
or
jle
aaa
push
sub
jge
mov
pop
es
pushf
lahf
jb
movsb
roll
ret
notl
and
shlb
dec
dec
push
xor
vfmsubsd
lea
sub
andb
jnp
sub
nop
in
xchg
and
lock
mov
sub
jne
jno
fwait
aaa
push
cwtl
aaa
mov
mov
jl
xchg
push
es
push
xchg
ret
jmp
ss
mov
and
pop
lcall
or
mov
sbb
call
inc
xorl
clc
add
inc
cs
jmp
out
mov
pop
mov
shll
cmp
and
sub
jle
add
icebp
sbb
cltd
stc
dec
push
or
xor
adc
jmp
not
cmpsl
add
add
xchg
dec
icebp
pop
movsb
test
cmp
push
adc
jb
push
pop
cmp
clc
pop
enter
test
jns
mov
adc
mov
jl
imul
test
push
sbb
fisttps
daa
sub
add
adc
push
cltd
mov
dec
decl
jnp
fnstcw
aas
fmulp
dec
jg
mov
insb
or
daa
or
fnstsw
xlat
cmp
sbb
arpl
cmpsl
popf
insl
cli
ss
insl
cmp
mov
cmovp
pop
jno
cmp
jo
inc
jecxz
insb
or
sbb
xchg
fistps
fwait
xor
popf
xchg
mov
push
mov
lea
mov
adc
dec
sti
cli
icebp
call
lds
loopne
adc
je
nop
movsl
in
adc
in
jb
jnp
adc
adc
push
bound
gs
inc
es
jg
pushw
push
into
mov
stos
push
nop
adc
imul
inc
out
loopne
int3
cmp
daa
lds
stos
gs
scas
cmp
aaa
sub
cmp
jae
add
xor
dec
test
test
jp
mov
stos
loope
negl
movsb
cmp
and
mov
jae
in
test
push
inc
add
mov
or
lds
fsubp
lods
negl
pop
arpl
jl
enter
std
sbb
sub
repz
cwtl
adc
mov
ficoms
mov
lods
push
repz
push
add
loopne
lret
lds
cmpsb
sub
test
das
stos
dec
ret
out
sbb
cmpl
xor
ds
cwtl
adc
popa
inc
sbb
pop
jb
mov
pop
sbb
cmc
scas
jle
out
dec
in
xor
jnp
inc
iret
sbb
sub
jne
lds
xor
aad
loope
das
mov
cmp
loop
mov
jns
pop
mov
addr16
stc
or
mov
fwait
push
pop
push
aaa
out
push
lock
scas
faddl
mov
push
xor
jl
aam
sar
jnp
xor
out
leave
mov
lahf
nop
push
dec
adc
mov
shll
pop
push
xchg
jne
pop
sahf
and
or
std
mov
into
cli
dec
sbb
lcall
push
into
mov
sbb
ljmp
cmp
lds
or
pushl
sbb
mov
rol
divl
mov
jno
cmp
mov
sub
and
arpl
sub
daa
lods
jb
or
lcall
stos
pop
ret
or
roll
shr
int3
aas
leave
sub
ja
hlt
jnp
xor
jle
push
cmp
xchg
mov
out
stos
mov
lcall
ret
or
mov
jbe
fmull
lret
or
dec
xchg
sahf
sub
lcall
pop
jo
sbb
or
jp
push
mov
aaa
cwtl
or
push
addl
mov
xchg
sbb
xchg
gs
aad
lea
or
leave
mov
imul
loopne,pn
add
daa
push
stos
movsl
mov
cwtl
and
mov
dec
xlat
jnp
bound
ret
popf
jno
int
mov
inc
push
ret
mov
lret
inc
sbb
push
ror
outsb
enter
addl
and
pop
shrb
mov
inc
sub
add
push
push
mov
xor
popa
fiadds
adc
push
jmp
ret
pusha
xor
mov
pop
data16
add
sbb
pop
fistpl
out
fdivrs
lock
mov
cmp
stos
shrb
fwait
scas
aas
mov
xchg
cmc
lahf
push
and
mov
jns
xchg
movsb
dec
mov
add
aas
insl
xchg
or
cmc
dec
inc
sahf
div
fldl
xor
mov
sub
sahf
test
fnsave
out
iret
mov
fcmovb
lods
fsubrs
testl
in
or
jg
scas
loope
sti
mov
rclb
int3
imul
adc
mov
push
lcall
imul
sbb
addr16
lcall
jns
loop
dec
ja
cmpsl
sub
outsb
fisttpl
cmp
loopne
add
cli
add
xchg
mov
sub
jge
push
mov
mov
pop
and
xor
repz
sbb
insl
adc
pop
pop
xor
dec
pop
xor
out
lahf
mov
adc
add
add
mov
lds
xchg
jb
mov
call
int3
mov
sub
mov
dec
sbb
outsb
pop
mov
or
in
pushf
ret
inc
sub
pop
stc
sbbb
in
inc
adc
mov
adc
jns
arpl
cmp
sub
clc
sahf
ljmp
popf
dec
jne
in
mov
enter
hlt
nop
negl
sbb
jg
icebp
clc
xchg
push
push
dec
dec
ja
push
ljmp
in
int
mov
enter
or
mov
mov
mov
fimull
push
sar
inc
and
push
inc
push
inc
in
sub
adc
and
fisubl
shrd
add
push
dec
popa
cltd
pushf
mov
stos
pop
nop
loopne
add
ret
loop
mov
lods
push
leave
mov
cwtl
and
cmpsl
sbb
inc
jnp
in
sbb
pusha
in
mov
insl
movsb
mov
inc
mov
cmp
jl
add
fidivs
imul
sbb
push
mov
fdivrs
jae
call
pop
cmpsb
pop
imul
push
sub
loopne
adc
mov
mov
or
sub
js
in
mov
movsl
pop
hlt
cmp
or
outsb
pop
dec
mov
push
stos
mov
scas
call
mov
inc
sub
xchg
pop
inc
mov
inc
push
notl
pop
fistl
ss
jmp
imul
aaa
pop
mov
mov
aad
mov
pop
cmc
enter
push
pop
dec
inc
arpl
out
popa
fildll
test
mov
xor
push
xchg
push
lods
inc
sub
es
xchg
push
int
negl
dec
pop
and
jns
jae
adc
int
and
lods
das
jns
aaa
sti
call
pop
mov
lret
dec
inc
mov
mov
mov
xchg
shrl
nop
sbb
fimull
mov
fcomip
xor
ret
int
incl
sub
sub
leave
pop
test
loopne
outsl
pop
ret
cmp
pop
clc
stos
sub
pusha
daa
adc
xlat
push
lods
xchg
xchg
test
sarl
inc
mov
imul
hlt
orb
ds
add
adc
jecxz
adc
shlb
fstpl
push
mov
push
int3
lahf
outsl
xchg
jmp
xchg
sub
mov
adc
js
push
lcall
cmp
out
iret
subb
pop
aas
pop
jae
cltd
xchg
and
mov
adc
inc
imul
call
push
or
std
iret
push
xlat
iret
xor
test
jge
dec
pop
int
mov
enter
cmc
cltd
dec
jl
jmp
adc
ds
sti
mov
int3
jl
jo
push
mov
movsb
adc
xchg
jb
inc
pop
xchg
repz
test
cmp
movsb
lcall
lahf
pop
mov
into
sub
jg
mov
push
movsb
test
arpl
popl
aas
fcmovnbe
les
sbb
out
stos
jle
cwtl
movsl
into
popf
cwtl
addr16
mov
loopne
add
mov
test
negb
hlt
ds
add
lret
daa
jg
jle
insb
inc
sub
std
sub
pop
pop
int
jbe
mov
shl
push
sbb
mov
mov
inc
inc
orb
dec
gs
mov
aad
xchg
enter
mov
lret
in
push
push
popa
add
cmpsb
ret
fcomps
mov
xor
mov
xchg
movsl
or
inc
popf
call
clc
sbb
mov
test
jbe
mov
xchg
das
push
xchg
sub
cmpb
xchg
rcll
rcr
out
andl
push
in
pop
shll
inc
js
add
mov
jecxz
stos
jle
and
imul
cwtl
mov
or
in
sahf
add
js
movsb
mov
sahf
insb
push
jno
mov
insl
ret
cld
imul
movsb
fldcw
fwait
dec
or
in
cmp
cmp
push
daa
mov
jnp
iret
inc
mov
xchg
push
and
das
mov
out
std
aad
push
ds
xchg
lret
jnp
sbb
dec
mov
sti
jae
mov
inc
xor
sbb
test
push
xor
cmp
orb
pop
or
js
mov
arpl
jle
jg
clc
mov
mov
sub
mov
sub
bound
enter
pop
pop
inc
push
xor
sbb
pop
daa
dec
pop
cmp
nop
loop
insl
cmpsb
es
mov
dec
jno
test
xchg
mov
jl
and
xchg
xchg
fcmove
aas
pop
xchg
scas
jg
xor
sahf
data16
cmpsl
das
aas
pushf
arpl
aam
ds
fsubp
std
and
inc
popa
data16
js
cmp
mov
inc
fwait
push
or
stos
in
xor
lock
cltd
pop
pop
xchg
fs
cmpsl
out
je
out
into
js
mov
movsb
scas
cmc
in
mov
xor
sti
aad
mov
xor
xor
cmp
inc
jns
outsb
mov
ljmp
iret
stc
cli
inc
jecxz
cmpsl
pop
or
loopne
insb
int
mov
xorl
xchg
stos
pushf
imul
jnp
divl
mov
jecxz
fnsave
bound
adc
push
sbb
dec
stc
push
nop
enter
jge
data16
adc
lcall
cmp
sbb
loopne
fwait
std
dec
dec
lcall
pop
or
das
xor
xchg
lock
xchg
je
out
scas
push
fstpl
loope
push
popf
out
mov
xor
mov
stos
jle
mov
out
mov
mov
lds
jo
cmp
out
xor
adc
in
inc
mov
adc
cmpsl
add
dec
or
inc
cltd
scas
inc
xchg
cld
cltd
and
xchg
fsubrs
imul
inc
dec
ss
inc
dec
mov
addr16
mov
mov
addb
xchg
pop
mov
fisubrl
adc
and
sbb
xchg
scas
enter
flds
jle
leave
jge
fiadds
fstps
inc
adc
jae
pop
mov
ret
push
mov
enter
in
adc
sbb
cli
mov
dec
mov
imul
lods
out
add
rcrb
mov
aam
xor
and
or
loope
push
clc
or
mov
mov
cmp
subb
divb
pop
mov
dec
xchg
dec
mov
movsl
lods
icebp
jns
add
add
xchg
xor
and
add
out
add
xor
sub
repnz
cmp
adc
js
cmp
jae
mov
shrb
lds
bound
jbe
xchg
add
leave
jnp
sbb
cmpsl
push
sub
std
xchg
inc
cmp
lea
mov
je
mov
push
out
imulb
mov
test
push
aaa
ja
dec
inc
and
jb
hlt
mov
pop
popf
pop
nop
mov
loope
in
jno
xlat
xchg
mov
and
loop
mov
pop
sbb
sub
add
push
adc
xor
test
cmpsl
xchg
adc
in
lods
in
int3
jge
data16
pop
mov
xchg
jmp
sub
jo
ds
sbb
push
jae
pop
repnz
mov
xchg
sbb
roll
inc
push
ja
cmp
cli
sti
push
dec
pop
mov
adc
sub
xor
fcoml
mov
les
shlb
shrb
les
push
stos
pop
movsb
repnz
jg
lock
popf
leave
daa
aam
push
push
add
dec
mov
aam
xor
ljmp
test
insb
sbb
scas
sub
or
xchg
xchg
dec
in
lods
lea
in
pop
shl
jns
push
mov
sti
jb
outsb
add
push
jmp
shl
mov
clc
iret
mov
sub
mov
aas
jo
outsl
movsl
popf
into
mov
push
add
mov
rcrb
out
sub
aaa
xor
and
ds
xlat
sub
mov
and
aas
jne
test
std
pop
mov
xor
or
fwait
and
out
mov
sub
xchg
nop
aad
sbb
sbb
repz
adc
pop
xchg
xchg
mov
or
add
je
cmp
jns
jmp
xchg
mov
add
scas
orl
xchg
or
enter
pop
enter
fwait
js
in
jae
xor
leave
in
mov
cmp
out
and
mov
test
mov
aaa
mov
mov
xor
mov
in
out
in
adc
lret
test
cmp
fs
and
mov
test
and
cmpl
loope
std
inc
adc
mov
mov
mov
cmpsb
fcoms
mov
mov
icebp
and
mov
ljmp
negb
push
fisttps
add
cmp
test
jo
jge
jbe
cmp
outsl
pop
cmp
sbb
dec
mov
sbb
inc
cltd
fwait
cmp
test
scas
jae
pop
xchg
decb
xor
mov
testl
enter
cmpsb
das
inc
scas
fsubs
lods
ljmp
outsb
jp
std
push
mov
icebp
add
or
iret
pushf
cmp
and
mov
pop
sbbl
sub
pop
push
lods
push
insb
jp
insl
push
js
inc
adc
in
lods
inc
cmp
adc
or
lret
cmp
out
popf
mov
jmp
inc
and
rcrb
sub
or
lods
and
daa
sbb
xchg
or
jb
inc
and
stos
jl
push
imul
popa
repz
in
mov
push
xchg
or
loope
subl
sbb
lcall
or
xchg
mov
loope
lods
imul
out
icebp
cmp
inc
stos
xchg
lahf
add
cmp
in
xor
cwtl
mov
inc
stos
mov
push
popf
jl
ret
inc
and
xchg
push
push
pushf
stos
insl
or
sub
push
sbb
push
sti
insl
mov
inc
daa
mov
shll
les
or
adc
push
mov
dec
ret
sarb
mov
pop
jo
pop
sti
idivb
or
inc
or
lea
add
cwtl
dec
and
add
frstor
mulb
sbb
mov
cs
xchg
insl
out
pusha
mov
scas
push
sbb
mov
dec
cmp
scas
cvtpi2ps
mov
adc
outsb
mov
adcl
push
mov
or
lret
mov
addl
lcall
mov
jns
mov
cld
dec
dec
cmc
xchg
mov
sbb
movl
xchg
lret
dec
xchg
addr16
cld
fwait
lahf
sbb
inc
loopne
leave
mov
mov
push
repz
test
vaddps
popa
test
sbb
add
out
jo
and
and
loopne
adc
addb
inc
ret
fsubs
das
shrl
inc
movsb
rcrl
sub
inc
mov
jecxz
fdivr
fcoms
loopne
mov
mulb
lods
jb
aaa
imul
das
mov
outsl
pop
or
sub
lcall
xchg
sbb
je
mov
shll
xlat
add
out
jbe
sub
fadd
cltd
pop
daa
or
pop
ret
arpl
loope
mov
jbe
test
jb
into
xor
mov
jle
hlt
sarb
test
dec
aas
xor
pop
xchg
pop
in
ss
stos
cmp
ss
adc
call
mov
shll
xorl
je
cmp
aaa
xchg
outsb
lds
adc
pop
jmp
imul
bswap
movsb
mov
cli
fwait
xchg
aaa
outsl
cmc
stos
jmp
shll
pop
jns
add
stos
push
jecxz
arpl
push
stc
cli
ret
sub
mov
xchg
fcmovnu
aaa
xor
data16
popa
popf
pop
std
xor
jmp
call
fnsave
popa
lds
push
push
push
inc
jno
push
je
xchg
xchg
leave
push
nop
pop
mov
ret
xchg
cmpl
ret
mov
nop
mov
mov
cmpl
mov
mov
xor
pop
dec
idivb
inc
fwait
sub
add
add
adcl
dec
addr16
sbb
xchg
cmp
lods
jnp,pt
mov
mov
inc
dec
mov
ret
xor
leave
push
xor
push
or
aaa
dec
xchg
std
adc
leave
bound
and
sub
inc
out
repnz
push
jno
ljmp
notl
fwait
pop
loope
nop
pop
xchg
leave
mov
iret
je
aaa
dec
mov
ljmp
repz
jbe
inc
ret
and
rorb
hlt
shrb
mov
call
dec
or
push
ret
xorl
std
xlat
mov
or
int3
jno
pushf
outsb
xchg
fidivs
scas
and
mov
adc
push
pop
push
sahf
adc
mov
xchg
xchg
xor
push
loop
addr16
into
fimull
inc
add
mov
pop
xchg
xchg
mov
loope
jne
inc
push
andb
jnp
in
rclb
stc
out
ss
inc
and
sbb
les
fiadds
arpl
ja
sarb
scas
mov
mov
loopne
out
mov
sbb
and
sub
imul
xor
xchg
out
arpl
subl
mov
adc
xchg
data16
fnstenv
push
stos
inc
dec
iret
add
test
pop
inc
push
inc
cs
pop
ljmp
stos
pop
insb
cwtl
pop
aam
cli
in
sbb
push
sub
repnz
xor
mov
jb
fdivl
mov
jl
jecxz
dec
mov
ja
push
push
into
and
fsub
and
cmp
cli
es
fildll
mov
aaa
sub
push
adc
jns
cs
mov
or
xor
jmp
add
aaa
sbb
inc
mov
jp
pop
scas
std
push
pop
sub
rorb
ss
mov
aas
cvttps2pi
xchg
jge
imul
dec
push
mov
mov
ror
out
push
mov
mov
jns
fnstsw
cmc
adc
jno
pop
data16
notl
xchg
push
dec
sub
or
xchg
jl
negl
dec
mov
mov
movl
sbb
jb
mov
mov
mov
sti
jecxz
lods
movsl
stos
movsl
ds
mull
lret
gs
outsb
push
xor
stos
addr16
test
dec
clc
sbb
mov
push
cltd
aaa
test
pop
lds
adc
add
and
popa
and
xchg
pop
lds
push
movsb
mov
or
mul
gs
insb
fistl
stos
out
fstps
icebp
addr16
mov
push
push
jmp
frstor
ficomps
or
xor
jmp
mov
add
mov
mov
ficoms
sti
roll
pop
data16
inc
test
fcomip
lcall
cld
gs
mov
pusha
pop
lods
mov
decb
dec
out
repz
mov
sub
xchg
add
mov
mov
xchg
add
push
outsb
add
sarl
sub
sbb
or
jno
dec
leave
mov
hlt
ljmp
movsl
outsl
fdivs
sub
add
jg
repnz
daa
daa
jo
lahf
fistl
fiaddl
out
xor
insl
jg
mov
cmc
push
cmp
xchg
icebp
push
jns
mov
lods
sbb
movsl
xchg
ss
popa
sti
fldenv
fwait
insl
push
test
repz
out
dec
dec
hlt
mov
decl
sub
loop
mov
nop
idivb
lahf
mov
xchg
dec
dec
jae
jae
mov
adc
cmp
fbld
lret
pop
mov
cmpsl
andb
int3
aas
push
mov
call
jge
push
inc
sarb
mov
cmpsl
mov
xor
mov
sub
mov
imul
insl
lret
push
imul
mov
push
add
imul
adc
fcoml
pop
ja
js
dec
sbbb
lret
inc
pop
int3
ljmp
mov
push
icebp
fsubp
nop
int
in
mov
xor
test
arpl
movsb
pop
popf
lods
pop
dec
xchg
es
mov
adc
or
sub
add
leave
mov
cwtl
fiaddl
sarb
inc
and
sub
fdivr
insb
fcoms
pop
pop
push
or
test
or
add
inc
xchg
add
in
sahf
push
faddl
mov
or
add
adc
push
dec
jbe
jae
add
mov
mov
repnz
xor
nop
popl
aam
ss
enter
pop
push
xchg
and
notl
testl
test
rcr
or
fwait
push
jns
out
push
fs
lcall
jns
xlat
sub
sub
lods
adc
lea
adc
sbb
aaa
push
lahf
popa
pop
loop
out
xchg
xor
jp
stos
pop
pop
push
mov
push
out
idivl
mov
jmp
push
adc
add
xchg
jbe
mov
cltd
jge
das
adcl
lahf
dec
iret
adc
cmp
mov
inc
movsl
in
js
repz
xchg
dec
ds
sub
mov
std
repz
inc
jmp
adc
ss
sar
ds
push
imul
ja
js
xor
lret
movsb
std
jmp
cmp
inc
pop
cmp
push
lods
rcrb
push
fs
popa
outsl
cli
insl
imulb
stos
cwtl
push
push
jp
mov
popf
lods
inc
mov
pop
mov
cmp
sahf
int
aam
jp
pop
mov
xchg
iret
pop
int3
lret
pop
pop
cmp
out
mov
push
adc
inc
data16
mov
mov
popa
in
pop
test
mov
pop
ss
xor
inc
cwtl
ret
dec
fmulp
icebp
xchg
mov
loope
stos
jno
mov
xor
xchg
jmp
add
xchg
lods
out
mov
mov
sub
adc
push
xor
push
std
mov
rolb
mov
jmp
dec
lcall
adc
pop
fidivs
std
mov
push
sbb
mov
or
outsb
fnstcw
cmp
mov
js
ja
mov
andl
stos
rcl
icebp
xor
mov
addr16
sahf
mov
fwait
push
push
adc
jbe
adc
mov
xchg
fwait
outsb
daa
pop
ret
loopne
push
push
xchg
xlat
cmp
test
mov
pusha
xor
inc
jecxz
fdivl
fists
sub
loopne
test
mov
dec
jle
jle
mov
das
or
sbb
sub
xchg
xlat
pop
sti
sbbl
mov
jns
mov
test
mov
mov
push
outsl
cmp
or
cld
push
push
mull
xchg
add
insb
fdivrl
rorb
cmp
xchg
or
test
pop
mov
or
push
or
sub
sbb
inc
adc
dec
jne
stos
and
jmp
and
movsb
add
inc
xlat
cltd
pop
call
mov
inc
lods
xabort
lods
cwtl
lods
aad
scas
fadds
sahf
add
pmaxsw
sbb
stos
cmc
add
cld
popf
out
out
xchg
out
aaa
notb
mov
mov
and
test
out
fmul
xor
mov
lods
outsb
stos
pop
mov
cmp
iret
mov
lahf
addr16
jge
lcall
pop
mov
pop
xchg
jne
mov
fmul
mov
lock
xor
cld
push
sti
lea
je,pn
jbe
or
and
xchg
cmp
mov
andb
fmuls
sub
or
push
aaa
mov
in
mov
hlt
sbb
mov
pusha
imul
orb
xchg
adc
in
inc
test
mov
lret
inc
out
and
push
or
mov
out
scas
xlat
and
repnz
push
std
in
push
out
adc
mov
enter
lcall
adc
ror
sbb
lock
push
ds
inc
cltd
clc
jge
mulb
pop
inc
mov
cli
lret
in
jmp
fisttps
stos
fcom
out
call
pop
movb
or
sbb
sub
xor
push
sbb
cmp
insb
inc
lahf
test
es
mov
call
out
xor
ficoms
pop
outsb
pop
aas
add
mov
imul
icebp
and
rcr
push
insl
push
in
fisubrl
js
add
dec
test
push
pusha
pop
rorb
mov
push
shrl
ss
xchg
add
stc
xchg
or
fidivrl
cltd
repz
nop
push
jecxz
lds
mov
into
lea
sbb
loope
mov
add
call
cmpsb
imulb
outsb
enter
push
decb
sub
or
in
adc
filds
xor
and
int3
gs
push
mov
mov
or
imul
rcl
cli
cli
jbe
out
je
push
shr
out
jo
adc
pop
jg
in
sub
add
popa
out
push
mov
pop
inc
or
out
xchg
sbb
orb
jns
dec
mov
xor
dec
fcmovnbe
jae
add
push
adcb
and
fs
jo
or
push
inc
add
movb
dec
dec
inc
aam
xchg
push
mov
sub
sbb
sub
push
xchg
pop
push
adc
aaa
add
fs
lahf
aam
mov
sub
es
pop
inc
enter
xchg
rcll
sbb
repz
or
lock
repz
jmp
adc
test
xchg
sbb
pop
test
sbb
xor
les
or
jp
clc
cs
sub
in
or
push
cwtl
icebp
mov
repnz
and
mov
loopne
or
xor
fsubs
mov
add
call
fwait
xor
cmp
sub
adc
mov
or
rcrl
inc
aas
or
cltd
add
xchg
jne
mov
dec
leave
hlt
mov
popl
hlt
and
add
and
pop
pop
sub
pop
cmpsb
sub
mov
cli
andb
mov
mov
jnp
incb
lret
movsl
inc
jnp
pushf
sarb
mov
and
mov
dec
fidivrl
rcrb
cmp
dec
dec
sbb
scas
cltd
sub
or
jmp
mov
lock
jo
add
mov
mov
ds
insb
adc
inc
adc
sub
cmp
mov
jle
cmp
push
sahf
out
psrld
rdtsc
and
dec
int3
xchg
inc
pop
clc
fwait
mov
out
dec
push
arpl
mov
rclb
fldenv
mov
fmull
lret
mov
mov
and
xchg
ret
pushf
mov
xchg
sbb
inc
mov
mov
shrb
adc
movsl
cmp
addb
std
jno
add
xchg
cmp
xchg
aad
loop
push
jbe
fbstp
out
aam
push
push
sub
cmpb
ffree
je
adc
mov
sub
into
mov
mov
xor
mov
mov
sti
test
mov
xchg
int3
or
lahf
cmc
jo
test
popf
mov
push
mov
cmp
pop
nop
decl
mov
sbb
out
loopne
cwtl
push
lcall
sub
pushl
in
sbb
push
lods
das
ret
dec
idiv
mov
jbe
and
lods
mov
sub
and
push
fadds
dec
out
in
jp
push
cmp
insl
dec
orl
dec
push
sbb
cmpsl
xchg
inc
gs
mov
sub
pop
add
push
and
adc
rcrb
andl
cmp
inc
and
mov
mov
xchg
adc
addr16
cmp
add
cmc
and
pop
dec
in
stos
shlb
mov
xor
sbb
mov
clc
sbb
jle
add
xchg
dec
popf
enter
fstpt
or
call
ret
arpl
adc
out
int3
adc
jo
lock
inc
nop
testb
loopne
loope
xor
in
popa
cmp
cwtl
rclb
ljmpw
sti
mov
sub
or
ret
std
and
cmpsl
rcr
out
pop
cmp
mov
test
sub
sbb
or
and
cld
les
ljmp
cmc
dec
imul
in
dec
push
sbbb
leave
pop
cltd
sbb
js
add
lret
dec
jecxz
ret
cmpsl
movsb
ja
ret
dec
push
cmp
ret
mov
sub
mov
imul
mov
push
jns
movsl
pcmpgtb
stos
mov
push
xor
xchg
lret
out
lea
mov
inc
pushf
lock
mov
jb
clc
andb
jecxz
pop
ficompl
call
xor
das
pop
je
addr16
xchg
push
and
aam
jmp
xchg
mov
fstpt
adc
push
pop
push
jne
je
scas
stos
sbb
add
add
or
mov
mov
pop
push
inc
loopne
mov
and
dec
sar
out
push
jge
and
cwtl
js
or
mov
scas
inc
neg
divb
inc
sub
sbb
dec
mov
xchg
push
inc
inc
or
jl
ljmp
sbb
das
cmc
or
mov
cmpsb
in
mov
loopne
lds
rcrl
enter
jne
in
dec
and
dec
jp
movsb
imul
jg
and
loopne
jge
dec
idivb
dec
es
xor
lea
xchg
lea
rcll
imul
btc
fadds
mov
stos
sub
clc
mov
imul
psadbw
mov
mov
fldcw
adc
icebp
jne
outsl
ret
test
roll
xlat
stos
cli
add
inc
xor
xor
jl
adc
xor
lret
in
cmpsl
mov
aaa
gs
or
push
sbb
pop
cmpsb
mov
cwtl
mov
scas
lods
je
cmp
dec
adc
imul
fldl
js
lcall
lods
dec
iret
outsl
inc
aaa
lea
pop
inc
pop
data16
mov
out
shlb
in
xchg
in
cmc
pop
mov
or
jg
imul
js
add
movsb
les
rcrl
jecxz
pusha
and
sub
and
dec
inc
push
xchg
pop
cltd
sub
xor
incl
mov
sub
ret
jae
cmp
into
les
mov
ficoml
push
jle
mov
aas
inc
push
sti
mov
inc
push
jbe
lahf
push
subb
mov
mov
dec
sahf
inc
jns
imul
adc
out
mov
outsb
imul
arpl
mov
and
add
push
xor
icebp
xchg
stc
jle
adc
xchg
scas
leave
sbb
xchg
cmp
push
cld
dec
mov
data16
mov
dec
mov
in
or
ss
xlat
lret
mov
cmp
outsb
jb
es
in
adc
out
insb
ljmp
dec
mov
out
daa
sub
jle
and
inc
xlat
inc
pop
mov
pop
stos
sar
mov
jns
dec
jns
cwtl
cmp
inc
clc
mov
jne
pushf
shlb
jg
push
xor
out
mov
bound
and
pop
jno
jge
mov
test
cmp
jnp
and
hlt
xchg
pop
ss
stc
cmpsl
js
jno
cmpsb
subl
add
inc
ja
jae
ret
fstps
cmpsb
jo
push
sub
and
add
lods
dec
push
rcr
lret
shlb
js
sarl
adc
xor
enter
jle
scas
sub
movsb
or
fwait
mov
cmp
bound
inc
je
dec
push
dec
ja
ss
pop
lods
pop
mov
dec
pop
ja
loope
js
xor
xchg
insb
ja
dec
push
int
cltd
sbb
movsb
lret
ficompl
or
push
cltd
jle
pop
lret
add
jns
clc
mov
dec
loopne
loop
or
inc
xor
cmp
repz
mov
xor
mov
sub
insb
push
push
into
push
and
imul
xchg
shll
arpl
cmp
adc
in
loop
mov
xchg
mov
loop
pop
mov
sub
pop
sbb
mov
mov
push
xor
addr16
mov
xchg
push
sbb
test
shrl
jge
enter
add
in
dec
sbb
mov
insb
data16
sub
pop
add
in
xor
fdivrp
stos
push
xchg
jle
sti
push
push
scas
mov
or
push
mov
pop
sbb
aam
lcall
lods
push
mov
andl
adcl
lea
inc
adc
xchg
sub
sub
mov
ds
arpl
call
mov
mov
test
sahf
bound
pop
ja
mov
cmp
adc
sti
fisttpll
loope
xor
ja
mov
int
hlt
fisubrs
cmp
insl
js
inc
fsubrl
mov
scas
cwtl
imul
call
push
or
ret
lods
mov
sub
frstor
xchg
fisttpll
dec
lods
les
mov
jmp
jle
fdiv
and
add
mov
jmp
xchg
icebp
cmp
sarl
inc
jb
and
addr16
stos
cltd
cmp
xor
sahf
sarl
or
adc
std
push
cmpsl
outsb
jb
es
pushf
bound
sub
inc
ret
inc
adc
loope
jecxz
sbb
sarl
lahf
xchg
xchg
aaa
adc
xchg
cwtl
ja
pop
scas
or
mov
lds
andb
test
hlt
xor
or
popf
and
sahf
dec
cmc
dec
test
div
push
and
push
mov
sbb
push
lea
rorb
sbb
cmpsb
sub
xchg
js
hlt
test
lret
xor
push
dec
sbb
jnp,pn
stc
fucomp
xchg
in
nop
loopne
mov
arpl
inc
sbb
pop
add
inc
cmpl
dec
inc
inc
mov
xchg
andl
mov
adc
mov
andb
mov
push
scas
hlt
sbbb
out
inc
ljmp
or
xor
mov
in
imulb
stos
pusha
ret
jae
dec
xchg
push
loope
jo
push
pusha
add
pop
pushf
xor
jbe
and
pushf
pop
outsl
push
loopne
inc
fdivrs
bound
xchg
nop
loop
into
scas
sahf
das
cli
lret
push
divl
mov
cld
add
in
xor
jae
sub
jbe
cmp
psraw
gs
jle
jecxz
insb
in
cld
sbb
js
mov
vpunpckldq
sbb
jge
dec
into
testl
repz
mov
lahf
pop
repnz
push
jp
fidivrl
cs
sbb
ja
pop
sti
movsb
movsl
test
clc
xor
out
dec
dec
lods
fwait
cmc
adc
fs
inc
js
test
inc
lods
fmull
jbe
pop
icebp
rcll
pop
and
aaa
push
mov
inc
mov
mov
mov
push
dec
or
mov
addr16
or
scas
mov
mov
or
rorb
pushf
daa
jp
adc
push
cs
ss
ljmp
lea
sub
addr16
icebp
push
int
xchg
sub
mov
push
in
inc
out
ficoml
sub
pop
xor
clc
lcall
clc
outsl
sbb
in
jmp
cmc
imul
cwtl
out
add
push
mov
popa
test
cmc
cltd
mov
sbbb
shlb
cmp
sbb
stos
sub
sub
xor
xor
mull
xor
insb
inc
insb
mov
lsl
cmc
es
mov
pop
pop
push
xchg
jge
xor
mov
testl
int3
loopne
pop
xchg
out
cmp
insb
xorl
out
or
je
popf
inc
jnp
cli
dec
adc
enter
add
lcall
pusha
inc
mov
or
shl
int3
rolb
push
mov
adc
hlt
test
xchg
rol
push
int3
aam
lret
jae
fidivrs
js
cli
mov
sbb
cmp
sbb
enter
outsl
daa
rcrl
inc
adc
mov
sub
daa
mov
push
hlt
and
clc
loope
push
fcom
inc
cwtl
mov
les
out
imul
outsl
jo
mov
ds
push
dec
aaa
mov
sbb
sub
mov
add
cld
cmp
jnp
sbbb
ret
fbstp
xchg
mov
outsb
inc
pop
push
pusha
cmp
imul
sub
iret
push
cmpb
add
mov
xor
mov
push
or
mov
dec
sbb
test
push
std
adc
jl
hlt
bound
dec
cli
fsubrs
in
inc
jb
sbb
int3
adc
repnz
in
jecxz
mov
insb
inc
pop
xchg
xor
jno
loope
out
xchg
out
add
add
addr16
jbe
ljmp
adc
push
sub
cmp
in
hlt
out
inc
faddl
aad
pop
push
or
and
call
add
cwtl
mov
lret
sub
pop
xchg
sbb
mov
dec
adc
cld
inc
xor
and
stos
and
jle
gs
mov
jl
add
mov
pop
sub
mov
push
add
and
icebp
push
popf
enter
ret
sub
pop
jae
dec
in
jle
data16
cmp
mov
inc
push
mov
stos
or
stc
stc
jp
mov
cmpsb
push
add
inc
xor
xchg
mov
pop
cmp
xchg
gs
sub
push
fcompl
popf
mov
sbb
nop
fnstcw
icebp
pop
or
shl
fs
popf
dec
jne
adc
jo
dec
sub
jl
in
dec
pop
push
sbb
lahf
test
das
push
add
dec
dec
test
ret
scas
outsl
dec
and
call
int
or
repz
xchg
lods
add
adc
pusha
and
loopne
in
nop
inc
leave
sbb
aad
ret
adc
cmp
orb
mov
iret
iret
pop
fwait
jae
mov
or
inc
fdivrs
inc
mov
mov
fadds
out
es
adc
jl
cmp
xor
iret
dec
pushf
adc
test
in
mov
fdivrp
cmpsb
outsl
cmp
jne
pop
sbb
mov
std
inc
mov
mov
scas
sbb
mov
mov
cmpsl
mov
adc
call
sar
fimull
push
imul
ret
mov
cmp
jg
notb
sbb
jge
scas
cs
sahf
scas
rolb
ljmp
mov
insb
shrl
dec
cmpsb
cmpsl
push
dec
sub
mov
mov
fiaddl
push
sbb
roll
test
lcall
out
inc
mov
rorl
mov
lcall
fldenv
pop
jbe
cld
js
int3
pop
pop
aam
dec
or
or
jge
push
fildl
sub
mov
mulb
scas
test
out
loope
test
cltd
jne
push
lock
mov
or
xor
mov
add
add
pop
das
int
cltd
js
out
mov
jp
stc
stc
dec
pop
call
stos
fwait
cmc
mov
into
push
jecxz
mov
push
xor
stos
mov
xchg
aaa
xchg
and
and
adc
ds
jbe
pop
sbb
push
mov
rclb
iret
aad
or
jle
mov
imul
inc
mov
xchg
cmc
insb
mov
js
scas
into
in
xchg
jl
mov
dec
sub
addl
popa
mov
or
push
orl
cmp
lock
xor
jb
sub
cld
nop
fwait
dec
adc
push
mov
push
jns
cmpl
mov
in
mov
fdivrs
inc
push
and
fadd
xor
lahf
sub
xor
adc
xchg
jmp
sbb
pop
xor
rcrb
mov
sub
hlt
and
jecxz
icebp
aad
inc
add
enter
hlt
ljmp
mov
pushf
dec
fiaddl
in
cmp
xchg
stos
ss
push
sbb
jecxz
ljmp
mov
roll
mov
les
sar
fiadds
stos
dec
jnp
mov
ja
or
inc
add
mov
pusha
adc
mov
repnz
xchg
jg
xlat
addr16
in
and
outsb
mov
pop
mov
repz
or
pop
xchg
lods
pushf
lea
std
seto
fimuls
mov
cmc
dec
dec
mov
xchg
jmp
shlb
push
scas
jno
adc
scas
rcrl
daa
push
jno
mov
pop
mov
dec
adc
add
loop
insl
xor
lods
adc
sbb
mov
sbb
pusha
pop
pop
sbb
bound
cmp
leave
cmc
or
xor
pop
inc
add
xchg
dec
sbb
inc
enter
aas
push
pop
dec
push
xor
xchg
sub
jge
xchg
adc
dec
ror
sbb
mov
and
scas
lahf
fsts
dec
inc
nop
jecxz
xchg
flds
je
dec
lret
aad
mov
mov
insb
jne
icebp
aaa
hlt
push
and
pop
cwtl
push
idivl
fisubrl
push
jo
fbstp
push
or
idiv
fstl
mov
fscale
or
iret
cmc
mov
test
and
push
dec
mov
repz
popf
push
imul
clc
jo
inc
shlb
add
add
ret
push
sbb
cmc
xor
adc
lea
negl
mov
xchg
pop
fimull
pop
rcll
in
dec
or
leave
jno
loope
xor
fsubrl
pop
nop
pop
sti
jl
ficoml
adc
mov
inc
enter
lock
lods
cs
and
arpl
jo
outsl
fmull
jno
or
icebp
loope
jnp
dec
pop
in
mov
mov
pop
loopne
bound
das
or
bound
data16
les
sbb
xor
stc
inc
xlat
movd
cs
adc
mov
std
push
out
fs
inc
in
pop
mov
jle
mov
or
sbb
rcrb
insl
or
and
aaa
cs
dec
inc
add
inc
add
fisubrl
pop
fcomps
jno
add
dec
cmc
jecxz
adc
mov
shlb
jnp
xchg
push
adc
lds
push
jle
xor
mov
mov
push
inc
or
popf
push
shl
pop
gs
cli
mov
packsswb
dec
push
or
test
insl
pop
jle
int
ficomps
xor
jno
or
sub
or
push
cwtl
adc
xchg
cmc
sbb
jp
add
xlat
lds
inc
mov
and
negb
arpl
mov
fiaddl
mov
cld
cltd
sub
mov
xchg
adc
popa
cmp
out
mov
in
fidivrs
std
mov
pop
adc
leave
insl
andb
enter
pop
loopne
inc
add
addl
dec
in
pop
addr16
xchg
push
xchg
xchg
nop
pusha
jb
adc
pushf
in
ficoms
xor
std
sbb
mov
cwtl
mov
mov
cmp
repnz
inc
mov
fsubrl
mov
sbb
std
sahf
insb
lock
sub
cwtl
xor
loope
jmp
into
adc
ds
cmp
push
jnp
into
cmp
js
sbbl
scas
pop
mov
icebp
mov
mov
jae
mov
jns,pn
jmp
push
repz
cli
sbb
sub
data16
fistpll
sarb
jae
mov
rolb
jg
sub
enter
fbld
daa
sub
neg
rol
pop
xlat
aaa
sub
imulb
daa
andl
xchg
pop
cmc
movsb
inc
pop
pop
aad
aaa
into
adc
ja
sub
lahf
sbbl
mov
xor
or
push
fcoms
jge
les
outsb
sub
or
scas
xorb
scas
lahf
mov
scas
inc
inc
inc
aam
dec
pop
pop
add
mov
and
xor
les
lret
inc
push
mov
or
cmpsl
sbb
cmp
bsr
jle
test
fisubrl
loop
add
push
jne
mov
lods
mov
sub
cmp
xorl
aad
aas
cmp
add
fistl
pusha
loopne
push
push
mov
sbb
jmp
push
cmp
frstor
mov
imul
arpl
sbb
outsb
mov
sub
imulb
mov
aaa
pusha
clc
in
shrl
ds
shll
cmp
xor
ljmp
pop
jp
mov
jecxz
xchg
push
je
cmpsb
mov
jo
in
in
pop
js
push
add
into
pop
or
test
add
addl
jne
jmp
ja,pt
sub
mov
jb
cli
and
mov
scas
jo
mov
iret
mov
push
and
and
mov
sbb
push
sbb
shlb
xchg
dec
mov
test
jbe
and
xor
pinsrw
fldcw
fists
push
and
push
add
inc
pop
and
dec
and
sub
cmp
inc
fadd
in
cmpsb
out
push
ret
insl
enter
and
mov
lahf
in
push
jecxz
icebp
inc
aaa
xchg
push
adc
add
mov
mov
and
into
jns
insb
out
ljmp
cld
imul
imul
pusha
jne
jmp
sub
jecxz
gs
pusha
add
aam
icebp
dec
stos
nop
orb
je
pushf
xchg
ss
icebp
jg
test
mov
mov
push
add
adc
bound
sub
cmp
addr16
popf
fs
ds
sbb
dec
mov
and
enter
mov
jnp
push
xor
cmp
insl
pop
mov
enter
out
mov
out
sbb
sbb
pop
dec
sub
loopne
push
gs
sub
mov
mov
mov
test
fidivl
lahf
sti
sub
xchg
push
xor
inc
push
ret
mov
inc
mov
sahf
std
repnz
push
mov
add
mov
sarl
loopne
orl
inc
sbb
sbb
repz
popa
mov
lahf
pop
cmp
add
push
loope
insb
out
push
inc
fcomps
pusha
lods
pop
inc
outsl
pop
call
pop
add
add
fs
mov
sti
scas
xlat
clc
fs
ret
int3
das
jmp
dec
jno
cmc
xor
xor
sub
out
addb
outsl
mov
lcall
aas
nop
out
imull
pop
or
cwtl
out
push
jecxz
push
sbbb
repnz
ja
pop
xor
sub
sbb
fsubrs
push
popf
dec
jmp
jl
rclb
cmp
adc
aad
outsb
xchg
xchg
jecxz
scas
push
test
outsl
sar
sbb
pop
loop
mov
cmp
pop
addr16
inc
dec
aad
aaa
lret
rclb
in
jbe
push
mov
sub
xchg
push
sub
loope
xchg
push
ljmp
add
loopne
inc
mov
lret
test
jbe
push
push
iret
xchg
inc
add
pop
stc
push
xchg
or
sbbl
stos
les
dec
inc
inc
mov
repz
roll
sbb
inc
inc
pusha
pop
mov
mov
mov
push
pop
xor
mov
jnp
xchg
out
or
or
jae
or
push
sarl
inc
cli
shll
cs
pusha
jnp
repz
jecxz
jmp
or
rcl
jnp
and
mov
mov
std
push
adc
cmp
nop
mov
fbld
js
ljmp
mov
mov
shll
addr16
lods
ja
dec
fwait
call
pop
mov
mov
pop
in
divb
jbe
or
push
dec
dec
imul
ljmp
push
jns
inc
out
and
or
aas
jne
test
lret
cmp
movsl
inc
cmp
addb
gs
fildl
sbb
mov
clc
mov
lret
fsubrl
jg
pop
lods
pop
add
pop
adc
sub
xchg
popf
or
sub
xlat
push
dec
lods
out
fldcw
gs
cmp
out
notl
lds
ltr
or
or
add
leave
rclb
rcrb
mov
arpl
js
sbb
testb
stc
repz
or
pop
daa
inc
ljmp
cltd
add
cwtl
fadds
and
xor
jno
sub
fxam
lods
push
push
lods
mov
lea
stos
repz
mov
lcall
fistl
sbbl
in
cwtl
xor
mov
add
jne
adc
jle
push
movsl
or
adc
mov
or
dec
mov
sarl
cs
mov
sahf
sbb
inc
lcall
fbld
je
mov
xorl
aam
ljmp
push
stos
icebp
inc
inc
in
push
adc
in
jecxz
arpl
adc
test
mov
sbb
mov
pop
adc
test
sbb
int3
ja
bound
push
and
loope
testl
scas
dec
cltd
rcrb
pslld
ret
xchg
pusha
stc
pushl
and
jge
fnstenv
pop
out
cmp
nop
ret
jnp
mov
cmp
xor
sbb
push
jmp
shlb
mov
add
mov
insb
fistpl
dec
repnz
sbb
ret
clc
roll
dec
sub
xchg
sub
jge
push
sub
xor
fistpl
mov
adc
pop
fildl
cmp
mov
daa
sti
inc
test
shr
or
jno
mov
and
sbb
pop
xor
push
xor
jb
xchg
dec
icebp
inc
std
cmc
ds
rorb
icebp
add
mov
push
movsl
lods
cwtl
lret
push
jle
popa
aam
popf
mov
cld
outsl
pushf
jno
or
cli
cmp
mov
inc
loop
scas
xor
repz
push
jne
inc
sbb
adc
ja
sbb
sar
push
imul
aam
ret
sahf
inc
sbb
imulb
out
ret
or
je
dec
mov
ficompl
mov
data16
mov
lret
ljmp
mov
pop
mov
mov
dec
ljmp
and
es
leave
ja
fldl
mov
int
outsb
mov
lods
aaa
pop
mov
popa
hlt
mov
xchg
filds
sub
lods
fwait
inc
mov
mov
sub
sbb
add
mov
aas
jecxz
outsb
pop
pop
fwait
sti
loope
and
das
lea
cmp
fidivrs
xchg
aam
or
mov
push
lret
pop
pop
dec
ljmp
imul
mov
mov
pop
cmpb
inc
insb
fcomps
push
mov
push
xchg
inc
inc
lcall
sbb
pop
fbld
jne
xlat
and
divb
cld
jb
stc
stos
divl
xchg
stc
pop
lds
mov
mov
jo
push
clc
jl
shl
jnp
cld
sbb
mov
sub
loope
aam
daa
mov
fbstp
push
fmul
fcoml
les
das
push
scas
xchg
pop
xchg
bound
inc
and
lods
scas
sub
xor
lods
and
mov
pop
dec
ret
pop
addr16
jno
lcall
push
fwait
mov
xor
adc
movsb
sbb
aad
dec
push
lret
jbe
insb
leave
pop
lods
pop
mov
cmpsb
leave
sub
addr16
xlat
xchg
and
cmc
loopne
cmc
aad
cmp
jns
xor
mov
pop
add
push
push
enter
jg
mov
pop
loope
ljmp
out
mov
hlt
mov
xchg
mov
mov
add
lea
ljmp
xorb
adc
xor
das
push
ret
loopne
nop
rolb
vpmacsdql
jns
daa
cmp
inc
sti
push
inc
cmc
push
out
outsl
pushf
push
and
cmovbe
mov
adc
movsl
pusha
cmp
mov
mov
mov
scas
xchg
pop
dec
adc
jbe
mov
daa
leave
mov
lret
and
xchg
dec
push
mov
mov
push
jge
inc
adc
xchg
jb
add
cmp
lods
shl
sub
stc
ja
push
inc
jne
lcall
test
dec
js
into
jno
pop
bound
bound
in
std
inc
adc
imulb
scas
cmp
and
push
rcrl
popa
lock
loop
paddusw
dec
push
insb
movsb
das
xchg
mov
test
adc
mov
les
pop
andl
push
jp
in
jecxz
and
inc
mov
cmc
gs
inc
loope
imul
cwtl
out
sub
dec
ds
shll
inc
pop
test
pusha
cld
inc
and
lods
mov
xor
mov
jae
repz
mov
xor
hlt
sbb
sar
sbb
sub
jae
fcompl
test
push
hlt
cmpb
jb
jae
ds
dec
push
stc
fs
cmp
movsb
inc
inc
xchg
scas
fs
xlat
scas
adc
fnop
mov
or
push
lock
dec
sahf
shlb
push
mov
sbb
jecxz
xchg
push
or
inc
pop
push
xchg
js
pop
mov
gs
andl
daa
cmpl
in
jg
xchg
sub
and
mov
and
cmp
cld
and
push
pop
loope
data16
dec
jmp
stos
jp
xchg
out
mov
in
cmpsb
aam
xor
mov
mov
mov
aam
inc
jmp
in
adc
fiaddl
adc
xchg
push
dec
xchg
mov
or
xchg
pop
add
inc
cmp
push
mov
out
std
xchg
dec
cmp
test
sbb
sbb
ret
lock
ss
mov
pop
push
sub
in
or
cld
cmp
rorl
cmp
or
push
movups
xchg
mov
enter
jnp
adc
test
repz
mov
xor
and
fs
mov
lock
ja
lods
dec
xor
cmc
mov
mov
mov
jns
jl
xor
sbb
cld
sarb
movsb
sti
push
ja
xchg
sub
mov
fs
sahf
push
push
rorb
sbb
mov
sahf
sbb
lcall
xchg
loopne
xchg
push
or
xor
push
xor
scas
jb
out
xchg
mov
call
pop
xor
shll
int
sbb
and
fwait
ret
pop
mov
cmc
and
lahf
dec
cli
xchg
pushf
das
or
jle
or
pop
fucomp
cwtl
outsl
testb
pop
xlat
mov
xchg
sbb
xor
push
pop
mov
mov
add
sarl
fwait
loopne
call
and
lods
sahf
daa
aas
in
xor
in
cmpsb
das
cli
aam
push
push
jae
jl
js
scas
icebp
ret
sahf
adc
out
sbb
lds
adc
add
inc
sbb
and
xlat
mov
fwait
stos
lock
imul
cmc
mov
push
mov
push
negl
pop
js
stos
fldenv
sbb
cltd
test
push
mov
aaa
into
cwtl
lret
jns
clc
and
sbb
jl
call
enter
mov
repnz
dec
outsl
sbb
fsts
fs
fadds
and
pop
in
fucom
dec
out
and
ja
adc
fstl
jo
xchg
xchg
and
xchg
mov
pop
mov
xor
lds
jne
mov
hlt
shl
ret
loopne,pt
stos
nop
mov
xor
popa
dec
add
xchg
inc
int
push
push
mov
ljmp
mov
xor
jg
xchg
mov
jmp
je
js
stc
bound
daa
movsl
pusha
fwait
inc
jecxz
fs
hlt
cmp
ror
repnz
shll
out
dec
aas
cmpsb
pop
mov
xchg
mov
lret
sub
in
push
js
stc
lods
insl
mov
call
mov
mov
mov
jp
and
mov
jae
xchg
mov
cmp
add
adc
js
int
popw
pop
mov
sbb
jnp
sbb
push
xchg
or
rcl
popf
push
les
mov
daa
inc
daa
cmp
xchg
in
insl
imul
push
cli
xchg
adc
les
and
lea
xor
shl
je
xchg
loop
lds
cmp
jle
outsb
sbb
jo
push
out
push
push
std
stos
xchg
inc
xchg
pop
cli
inc
lea
sbb
mov
jno
push
lar
fldenv
inc
stos
mov
stc
jp
jmp
cmpsl
cmpsb
xor
std
jb
sbb
mov
cmpsb
jno
sbb
jb
inc
in
adc
adc
popf
sbb
xchg
fcomps
lock
mov
cmp
push
sbb
jle
cld
addr16
mov
aam
sti
fwait
mov
pop
imul
xchg
dec
fisubrs
out
or
pop
cmpsb
xchg
loope
pop
push
inc
divl
imul
leave
cs
loop
and
cli
cmp
push
xchg
push
inc
mov
bsf
jne
shll
sahf
add
insl
jns
pop
sub
rcll
sbb
test
aad
inc
insl
sbb
adc
inc
mov
and
cmc
dec
cmp
fwait
xchg
outsb
or
dec
jnp
aam
rorb
js
mov
jmp
ret
lods
ret
sbb
xorl
test
push
dec
xor
shlb
cmc
movsb
mov
push
push
out
cltd
inc
lock
ud1
pop
ret
inc
sar
out
pushf
pop
pop
test
sbb
mov
int3
scas
movsl
leave
inc
jbe
xchg
test
or
xor
es
fsubrl
push
insl
fstpt
int
lods
iret
inc
mov
cli
into
xor
dec
testb
xchg
stos
add
out
cmp
lahf
xor
push
filds
shrb
imul
test
pop
xor
push
xchg
ret
jo
push
fbld
gs
pop
aad
enter
mov
xor
ss
shll
mov
fisubl
orl
pop
sbb
lcall
gs
mov
sub
xchg
out
adc
jno
and
pop
push
data16
das
mov
into
fistl
mov
mov
movsl
inc
xor
jmp
pop
in
xor
mov
js
pusha
cmpsl
addr16
mov
adc
das
pop
ret
push
fcoml
sti
arpl
adc
pushf
push
fists
push
in
mov
gs
or
sahf
sub
or
addl
repnz
xor
mov
pop
insb
jmp
lahf
int3
pop
sbb
repz
sub
xor
cmpxchg
and
mov
pop
cmc
mov
pop
test
mov
je
addr16
int3
sub
stc
and
adc
andb
push
addr16
lea
mov
pop
clc
mov
fistpl
leave
xor
adc
test
in
call
icebp
das
and
inc
in
icebp
out
pop
movsl
fisttps
lahf
cmp
xor
negl
inc
stc
test
xchg
rol
mov
scas
outsl
sub
push
jo
fsub
inc
iret
push
mov
pop
jae
mov
mov
ja
xor
mov
in
outsb
mov
pop
and
in
mov
lods
cmp
insb
cmp
inc
jbe
lods
cmp
mov
sbb
out
jns
scas
in
scas
xor
shr
subl
or
cmp
fidivrs
pop
jno
inc
lret
pop
jae
or
shll
add
ret
jmp
cs
js
call
mov
mov
or
push
add
and
pushf
mov
xchg
xchg
inc
mov
lahf
inc
xchg
add
xchg
adc
int
lock
lahf
test
test
mov
cmp
xor
adc
gs
rcl
outsb
cmpsb
imul
dec
mov
cmpsl
and
fwait
sub
cmc
mov
add
inc
xor
or
dec
pushf
shlb
xchg
xchg
inc
hlt
loopne
mov
mov
repnz
fs
lock
rcr
pop
or
test
sbb
mov
push
xorb
mov
adc
mov
hlt
int
jno
ljmp
mov
jmp
mov
sbb
xchg
jbe
imul
int3
shll
fstps
js
cltd
dec
cmp
nop
add
outsb
pop
mov
fisubl
adc
fistps
cs
lods
push
pop
hlt
gs
jmp
push
lock
sahf
mov
inc
mov
fdivrl
movb
shlb
inc
rorb
mov
and
or
test
fcomps
dec
repnz
lcall
jp
shrb
mov
ficomps
xor
pusha
pushf
jl
loop
adc
cmp
or
outsb
les
mov
pop
and
dec
das
mov
pop
push
pop
imul
lret
int3
cmp
jp
push
ret
outsl
aas
negl
loope
mov
push
and
add
inc
frstor
push
and
or
jae
push
inc
lret
push
add
test
inc
test
out
or
cmp
mov
int3
inc
cmp
lret
ret
sbb
fdivrs
out
cmpsb
fsubrl
je
cltd
jbe
push
and
pop
pop
ja
sbb
mov
fs
data16
cmp
rclb
aaa
scas
inc
in
push
jg
and
dec
aam
into
jl
jae
in
push
jno
push
in
push
jns
sahf
push
les
or
mov
aam
daa
sub
sbb
ficoml
lret
pop
pop
icebp
xchg
call
lds
ret
push
iret
mov
or
xchg
lret
sbb
dec
shlb
xor
stos
ljmp
orb
es
lds
xlat
sbb
test
jb
push
push
dec
in
push
outsl
nop
insb
int3
xor
ja
adc
adc
xchg
or
jmp
xor
out
popa
xchg
jl
jbe
clc
xchg
test
and
inc
sahf
lahf
adc
int
jg
pop
sbb
pop
lods
hlt
push
cmp
sbb
jno
sbb
inc
dec
adc
cli
iret
jle
js
sbb
cmpsl
pop
das
sub
call
inc
in
jle
mov
cmpsl
or
and
dec
imul
imul
lea
rclb
jge
into
push
jge
lahf
out
addr16
pop
push
nop
imul
push
sbb
inc
lock
les
sbb
psllq
xchg
mov
je
pop
xor
sbb
mov
push
test
sub
sub
jne
mov
dec
bound
pop
dec
jbe
lods
adc
dec
js
fdivrl
xchg
jge
mov
fidivl
popa
or
xrstor
inc
mov
pop
mov
pop
jae
push
and
lock
sbb
arpl
mov
fadd
sub
sti
add
cmpsl
lds
cs
xlat
add
sti
push
sbb
leave
adc
js
pop
out
pop
popa
dec
dec
mov
push
ret
jp
loop
xorb
xlat
dec
sti
inc
inc
push
clc
inc
gs
aas
or
sub
jle
imul
dec
call
and
pop
adc
mov
jne
std
jmp
mov
popa
lcall
repnz
or
in
jb
das
push
in
xchg
adc
xor
out
jne
ret
inc
stos
imul
leave
je
cld
repz
mov
cmp
adcb
js
push
outsl
stos
push
clc
push
int3
sarl
cmp
add
adc
out
xchg
mov
sub
mov
in
jg
dec
test
stos
lea
sub
jae
arpl
sbb
pop
daa
insl
cmpsl
xchg
pop
adc
movsl
and
das
cli
jmp
stc
popl
dec
jb
cld
push
gs
loope
inc
xchg
out
sbb
addr16
mov
mov
push
pop
mov
test
aas
jbe
std
pop
call
mov
insb
mov
scas
lret
ljmp
fwait
mov
xchg
shlb
sub
inc
dec
mov
clc
lods
adc
inc
push
lret
in
lods
sub
mov
fnstcw
mov
test
test
cmp
push
push
xor
jnp
loope
jg
mov
xchg
rcrl
cmp
jg
cwtl
stc
add
rcll
ljmp
inc
out
adc
dec
mov
xlat
sub
lcall
gs
outsl
cvtdq2ps
push
icebp
ss
aad
xor
cmp
jns
int3
adc
and
icebp
por
inc
hlt
xor
cltd
ret
push
into
data16
rcrl
dec
mov
push
jne
mov
cmpsb
add
cmp
fsubrl
mov
xor
iret
outsl
push
xchg
adc
mov
repnz
xorl
je
fildll
ret
in
mov
pop
pop
mov
and
xchg
add
jnp
arpl
adc
lock
mov
push
lret
jno
movsl
dec
pop
push
push
pop
pop
xor
xchg
mov
shl
jge
jecxz
testl
cmpsb
mov
out
shll
arpl
mov
repz
and
mov
xchg
movsl
adc
jae
insb
xchg
dec
mov
ds
dec
jge
pop
pusha
inc
dec
cmc
mov
xorl
push
inc
int
pop
sub
je
sbb
add
scas
add
jle
in
icebp
mov
add
xchg
cmp
popf
sbb
pushf
std
xor
fidivl
lods
and
dec
mov
dec
mov
ret
pusha
fwait
xor
jnp
clc
loop
pop
inc
loop
dec
ss
sub
adc
mov
outsb
or
daa
mov
outsl
push
sub
or
mov
fs
je
aas
and
add
and
add
in
xchg
enter
shlb
jnp
cltd
push
leave
cmp
pop
add
imul
mov
pushf
push
test
xchg
cmp
in
mov
jecxz
in
cmpsb
or
movsl
in
sbb
insb
roll
inc
xor
out
loopne
dec
aas
lds
je
push
pop
sbb
inc
inc
icebp
dec
xchg
addr16
mov
lds
cwtl
jecxz
push
sub
mov
jl
mov
cmp
outsb
push
xchg
or
inc
mov
inc
repz
in
sub
adc
enter
sub
xchg
mov
jne
xchg
mov
pushf
xchg
fsubp
pusha
rcr
cmpsl
ftst
pop
je
incb
mov
lahf
xor
add
data16
or
sbb
mov
xor
add
insl
nop
mov
mov
dec
jns
add
mov
loopne
xchg
xor
pop
mov
pusha
push
jg
movsb
out
out
in
and
inc
mov
jb
jmp
ja
loopne
xchg
daa
pop
dec
cld
dec
xchg
xchg
inc
int3
or
mov
lret
int3
cli
and
push
pop
lods
pop
sub
testb
push
lea
mov
dec
xchg
mov
mov
push
sbb
add
sbb
add
cmp
xchg
loope
repz
enter
cmp
ret
xchg
lods
mov
pop
push
popa
scas
push
fsubrl
pavgw
int
mov
xor
fstp
popa
ret
roll
hlt
loopne
sahf
scas
arpl
push
and
mov
scas
aad
adc
test
lahf
sahf
add
iret
xlat
das
mov
mov
jmp
xor
add
imul
loope,pn
scas
std
sahf
std
xchg
testb
push
xchg
ljmp
inc
lret
mul
or
inc
jp
movsl
push
add
mov
pop
loope
dec
push
imul
add
lods
loop
imull
movsl
pop
scas
movsb
insb
inc
in
icebp
jmp
mov
popf
add
mov
cmc
and
cwtl
push
inc
xlat
rcrb
lea
push
or
hlt
mov
mov
mov
clc
subb
mov
and
jle
fwait
movsl
popa
mov
sub
outsl
pop
repnz
pusha
fcompl
aaa
push
pop
call
and
out
movsb
fadds
jae
xchg
xchg
jge
push
lahf
mov
pop
sub
insl
jnp
dec
jns
outsl
stc
xor
aad
or
adc
cmp
stos
mov
mov
add
push
in
out
test
loope
pushf
repz
inc
push
push
fimuls
pop
and
rcl
adc
xchg
repz
fwait
pop
jbe
arpl
ret
lret
add
inc
std
orb
mov
mov
shlb
sahf
mov
add
pop
or
mov
mov
adc
inc
movsb
xchg
xor
or
aad
lea
sub
jo
sub
cmp
lock
sbb
stc
jo
insb
in
sbb
sub
cs
cmpb
push
jl
stc
jns
xor
repnz
enter
sbb
mov
loope
adc
mov
or
cltd
mov
sarl
mov
repz
cmpsb
std
fnstenv
orl
out
mov
subb
movsl
mov
and
and
dec
iret
test
ret
popf
stc
clc
stc
pop
dec
repnz
lock
mov
cmpsl
mov
or
repz
sub
gs
insl
sub
push
popl
inc
adc
popa
mov
or
sub
out
add
lock
inc
shrl
popf
subb
fwait
out
mov
jp
mov
das
inc
shl
pop
jp
int3
cmp
cmp
imul
pop
aas
loopne
add
pop
test
ret
rcll
ss
pusha
pusha
mov
xchg
cmp
inc
iret
push
in
shlb
jecxz
popl
sar
pop
je
lock
sub
stos
and
into
dec
repnz
sar
or
pop
test
jbe
out
adcb
jle
stos
daa
xorb
push
mov
pop
pop
bound
mov
cmp
in
xchg
das
in
add
push
je
xchg
pop
clc
addr16
mov
xchg
movsb
loope
std
into
fistps
ret
nop
jg
mov
outsb
fldcw
in
imul
xor
push
adc
pop
pop
insl
cli
inc
test
and
adc
xor
push
insb
mov
cmp
push
ljmp
lea
scas
leave
call
add
or
inc
lcall
in
push
dec
adc
dec
xor
jp
inc
adc
int
xchg
xor
jg
jmp
pop
pop
fbld
cmp
mov
popl
aas
pop
mov
popf
xor
pop
xor
in
cmc
fistps
maskmovq
mov
jmp
ficoml
cmpb
inc
or
rolb
inc
aaa
cmpb
xor
daa
aad
stos
mov
sbb
inc
mov
sahf
les
or
ja
lock
aas
ds
jno
xchg
dec
xor
sub
iret
push
shrl
sub
inc
dec
insl
and
shl
mov
jb
rcrb
faddl
dec
push
in
pop
jle
sarl
in
out
mov
push
xor
sbb
mov
pop
xor
xchg
adc
and
test
mov
int3
divb
mov
stc
sbb
mov
sarl
dec
mov
dec
flds
mov
test
stos
ja
iret
lret
or
and
ret
xor
ror
in
iret
pop
or
shll
cmp
xchg
pusha
popa
mov
inc
scas
loope
adc
lds
cmp
ret
adc
in
push
jb
je
add
or
cmc
shll
mov
and
fistl
inc
cmp
jnp
push
popw
mov
push
push
scas
inc
inc
sub
popf
gs
loop
inc
inc
loop
aas
dec
sarb
pop
out
rclb
mov
and
fidivrs
aam
jne
ret
mov
aaa
leave
push
mov
jne
insl
pop
push
int3
cmp
in
rorl
and
xchg
mov
xchg
ret
push
mov
subl
lret
jecxz
dec
push
inc
lea
xor
mov
add
imulb
stc
outsl
out
sbb
adc
sub
and
dec
popa
inc
adc
sahf
push
iret
dec
and
xchg
shl
fdivrp
aaa
fistpl
xchg
into
roll
loope
xor
rcll
inc
mov
mov
jbe
lret
or
xchg
mov
mov
push
cmp
add
fdivrs
mov
nop
jl
mov
mov
outsb
push
xor
scas
inc
mov
or
movsb
fisttpll
aaa
push
sbb
mov
scas
mov
jp
test
and
jbe
push
sub
inc
jmp
lods
pop
inc
imul
jecxz
jbe
and
pushf
outsb
fs
sbb
call
faddl
scas
repz
jnp
or
pusha
cmp
lret
mov
outsb
sbb
sahf
movlps
sbb
push
js
cli
fs
adc
mov
adc
fs
gs
push
pusha
push
paddsw
cltd
fiadds
xor
mov
aas
mov
cmp
push
xchg
pop
ds
xor
inc
imul
cmp
dec
loop
sbb
jnp
sub
fcoms
cmp
add
and
lret
jbe
pop
lock
daa
adc
jecxz
mov
cld
int
mov
fcmovne
cltd
pop
push
outsb
cmp
xor
sbbl
out
jae
imul
sbb
icebp
pop
jbe
mov
cmpsl
mov
iret
mov
or
add
sub
sti
pop
inc
in
stos
call
pop
mov
test
gs
adc
out
dec
lods
push
loop
mov
fstpl
jg
lret
xor
repz
jns
sarl
les
push
dec
jns
lock
nop
mov
rorb
int3
push
loop
pop
sahf
aaa
sar
mov
jns
aam
fwait
std
sbb
xor
push
cmp
xchg
sub
adc
cli
mov
je
cld
jno
or
or
cld
dec
cmpsb
aaa
lods
roll
ret
xlat
inc
ljmp
jge
adc
xor
sbb
or
mov
fcomps
or
outsb
insl
es
pop
and
das
mov
repnz
jl
adc
shrb
sub
lds
dec
sub
mov
mov
popa
in
or
mov
flds
xchg
pop
dec
pop
push
pop
mov
jns
outsb
push
push
and
stos
or
rolb
lret
lret
inc
ret
fadds
call
addr16
mov
xchg
xor
int3
mov
std
aaa
and
lret
push
mov
mov
sbb
sub
lods
rclb
jmp
dec
push
mov
outsl
adc
push
fs
mov
pop
imul
adc
sbb
mov
inc
xchg
jg
jne
nop
fistps
int3
out
mov
in
lods
pop
ja
icebp
pushf
pop
mov
rolb
and
or
cmp
fisubl
or
adc
push
insb
or
xchg
lcall
fs
cli
cli
enter
arpl
mov
sub
pusha
andb
repnz
fisubs
jle
mov
shlb
jg
mov
fiaddl
je
cmpsl
pop
push
stos
mov
popa
pop
jb
imul
xchg
enter
and
inc
sub
enter
daa
dec
sub
lret
incb
push
or
xor
adc
rorb
pop
shrb
rorl
in
xor
scas
and
xor
mov
aam
std
pop
stos
add
mov
popa
in
or
adc
jp
nop
jns
lcall
sbbb
sub
sub
jae
dec
push
daa
in
cltd
out
scas
push
cld
andl
pop
ficompl
sahf
fbld
imull
cmp
dec
cmpsb
cmp
sbb
inc
add
into
in
nop
mov
pop
test
cmpsb
pop
mov
sbb
xchg
add
inc
mov
ljmp
xlat
push
das
fisubrs
lods
jmp
test
cwtl
test
jp
dec
mov
mov
add
or
cmp
xchg
movsb
loopne
add
rclb
xor
popf
mov
inc
and
xor
mov
inc
aas
aad
pop
je
xor
adcl
cmp
mov
shl
dec
pop
pop
adc
mov
push
push
hlt
jae
jno
test
rcl
jb
mov
ficoms
push
mov
jno
lods
push
pop
ss
pop
mov
insl
stos
adc
mov
insl
lahf
push
sbb
mov
jle
mov
push
cwtl
sub
in
xor
push
push
mov
into
mov
outsb
jbe
xchg
pushf
and
xor
xchg
sub
jne
inc
in
movsl
add
xchg
push
pop
in
ret
les
pop
mov
shrl
leave
outsb
sbbb
je
push
mov
imul
sahf
jbe
xor
sub
sbb
cmpsb
dec
pusha
imul
ss
outsb
adc
test
lea
inc
jl
lods
dec
std
mov
cmp
xor
pusha
rorl
les
xor
push
jge
dec
loopne
jp
cmc
cli
aad
fadd
jbe
xchg
xchg
add
pop
fnstcw
sbb
outsl
aaa
incl
mov
ret
scas
and
jne
xchg
mov
push
mulps
adc
ss
sbb
and
mov
or
negl
rcrb
call
dec
insl
vcomiss
repnz
jle
sub
lahf
pop
sbb
and
in
or
add
mov
cwtl
stos
dec
xlat
pushf
hlt
gs
cld
pop
out
pop
jno
and
cmp
lods
cmc
insl
test
mov
call
or
bound
inc
jmp
pop
in
bound
ds
and
int
sbb
bound
sbb
out
in
outsb
inc
mov
mov
outsl
lret
insb
mov
mov
stos
ljmp
mov
movsl
rcrl
sbb
push
add
int
lcall
cmp
les
test
xchg
adc
add
push
jl
int
pop
stos
inc
in
sbb
dec
stos
js
stos
mov
cmp
movsb
xchg
cli
in
nopl
fisttps
pop
add
fs
ret
inc
aaa
jbe
mov
sub
mov
loopne
std
adc
lcall
mov
mov
or
adc
and
push
mov
dec
and
fbstp
xchg
jp
push
xchg
rcrl
jle
ret
data16
hlt
dec
adc
out
rolb
bound
fld
jno
adc
das
or
popa
fisttps
clc
cmpl
lret
rclb
clc
arpl
cld
scas
xchg
rolb
shlb
sbb
cmpsl
mov
pop
xchg
cmpsb
mov
sub
push
vmwrite
sbb
push
jp
in
xor
and
sub
mov
sbb
lret
dec
mov
mov
pop
and
gs
inc
xchg
sbb
insb
inc
fs
xor
xlat
xchg
mul
sbb
imul
arpl
pop
test
repz
jno
data16
mov
mov
jo
pop
jmp
cmp
ja
sbb
shll
jmp
and
outsl
cli
sbb
outsl
push
jae
rol
cltd
jle
pop
dec
gs
mov
sar
addr16
jne
or
xchg
xchg
xchg
imul
leave
sub
pop
ljmp
and
mov
out
add
or
jo
mov
pop
mov
xor
add
mov
and
mov
add
or
enter
nop
add
adc
repnz
icebp
lods
cmp
daa
mov
lods
lods
xchg
mov
mov
jge
adc
dec
add
inc
mov
stc
out
subb
in
test
xchg
cmp
mov
inc
pandn
stos
inc
mov
dec
push
popf
cmpl
or
sbbb
rcrl
push
jbe
cld
xchg
add
hlt
jle
clc
rorb
leave
fcompl
aaa
in
adc
dec
cmc
mov
cmovg
mov
pop
sti
pop
inc
dec
push
add
mov
sahf
cmp
pop
enter
mov
mov
stos
jae
aam
dec
insl
pop
or
pusha
dec
mov
inc
rolb
fisubl
je
mov
mov
xchg
mov
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
and
popf
inc
inc
mov
mov
addr16
xor
ja
pop
jbe
fs
loop
adc
dec
popf
dec
mov
mov
mov
inc
loopne
int
jbe
inc
gs
jbe
inc
mov
mov
arpl
out
lcall
aad
sbb
neg
mov
pextrw
nop
in
ljmp
iret
jg
popa
jp
sub
stos
mov
stos
cmpsb
aaa
adc
xchg
adc
cs
mov
push
sub
mov
jne
jmp
sub
ret
sub
repnz
mov
xchg
jl
dec
sbb
mov
adc
rol
sbb
int
jns
pop
xchg
mov
push
notb
add
jecxz
outsl
jecxz
cmp
insb
stos
inc
cwtl
or
xor
mov
scas
cmp
or
push
cwtl
sbb
andb
jbe
xor
push
enter
pop
cwtl
or
xchg
in
xor
stc
mov
push
daa
in
xchg
les
mov
xlat
adc
pop
xchg
stos
jp
in
cmpsl
pop
xor
jne
cmpsb
cmp
pusha
adc
push
mov
aaa
pop
xor
js
aaa
pop
and
mov
lret
dec
shrb
xorl
mov
mov
scas
mov
mov
bound
loop
xor
pop
or
fidivl
add
dec
cld
sub
xchg
jecxz
aas
popa
fdivr
sub
mov
pop
mov
je
dec
sbb
sbbl
mov
mov
add
aaa
stc
sub
dec
jmp
pop
enter
lods
xchg
xor
or
sub
shlb
or
jne
mov
outsl
jg
lock
lret
pop
mov
mov
lret
mov
data16
mov
mov
xor
testb
nop
out
push
and
push
lret
sbb
mov
mov
test
or
icebp
mov
or
jmp
mov
popf
mov
jns
int3
or
scas
mov
in
pop
sub
movsb
clc
ja
adc
pop
testb
fwait
mov
push
cmp
mov
aad
nop
ljmp
push
aam
rcll
in
movsb
sub
cmp
mov
gs
popf
xchg
jp
clc
out
cmp
ds
aaa
sbb
pusha
mov
jae
fnsave
out
cmc
jne
mov
cli
fwait
daa
imul
leave
jb
mov
xor
rolb
fsubrl
push
icebp
inc
into
jbe
mov
push
pop
adc
inc
cmp
xor
std
mov
xchg
sbb
cmpsl
sbb
test
arpl
out
test
sub
rol
cmp
add
xchg
sub
or
push
outsl
idiv
mov
js
add
in
nop
les
cwtl
fs
dec
das
add
push
out
jecxz
cli
mov
test
arpl
inc
jge
pop
push
or
inc
pop
lods
and
mov
cmc
mov
mov
leave
sub
inc
pop
cmp
mov
jmp
repnz
xor
int3
xchg
or
repz
in
xchg
push
int3
cs
cmp
incb
inc
xor
insl
sti
mov
dec
mov
and
dec
popa
sub
pop
pusha
call
js
xchg
lods
mov
jo
jne
mov
jp
xor
mov
std
inc
sub
sbb
xchg
inc
adc
movsb
inc
add
xchg
mov
xchg
jmp
jmp
stos
pop
add
ret
dec
pushf
in
mov
inc
add
js
or
dec
dec
rolb
push
lods
scas
push
jp
int
icebp
jbe
movsl
cli
das
adc
shrl
daa
fwait
pop
nop
push
add
xor
ret
mov
loop
pop
sub
and
mov
pop
or
inc
mov
iret
xlat
push
nop
mov
insl
loopne
fwait
pop
sub
scas
bound
add
jnp
aas
push
cmp
jmp
push
xlat
out
pusha
hlt
push
sahf
adc
ret
inc
pop
lret
mov
arpl
loope
add
sbb
icebp
cmp
sub
in
inc
dec
mov
js
xor
icebp
andb
pop
mov
int
mov
sahf
mov
lds
push
or
mov
data16
jl
mov
inc
xchg
outsb
mov
loope
adc
stos
push
data16
inc
dec
add
aaa
dec
cltd
fimull
in
sbb
loop
popf
dec
lods
sbb
push
mov
push
fidivrs
sub
lret
outsl
xchg
mov
js
mov
xlat
ss
jp
jmp
mov
push
dec
push
int3
push
pushf
mov
cltd
cltd
lods
fwait
sub
or
imul
das
out
sub
sbbb
jmp
add
rcl
fdivrl
pushf
xor
in
bound
mov
rorb
sub
push
roll
jg
mov
xchg
insb
lahf
sahf
or
bnd
jne
test
andb
movsb
jbe
lret
or
and
ret
cld
addr16
xlat
iret
inc
xchg
int3
mov
mov
cli
sbb
aaa
clc
mov
jg
ret
movsl
xchg
mov
jmp
add
pop
xor
cmc
out
daa
cmp
aas
cltd
mov
mov
stc
cwtl
int3
push
scas
jle
pop
cmp
mov
lret
je
popf
jne
jne
rcrb
cmp
dec
mov
lahf
pop
insl
into
mov
dec
or
push
pop
xchg
out
std
mov
mov
imul
out
push
or
jg
test
lds
in
in
adc
sub
dec
aad
sub
pop
hlt
or
fidivl
cld
mov
mov
mov
sti
loopne
ret
push
js
adc
aam
ret
inc
pop
push
dec
dec
sti
lret
and
imul
mov
cmp
push
and
clc
fisttps
pop
mov
cmp
mov
push
dec
int
xor
cmc
data16
dec
push
outsb
rcll
push
stos
jle
lds
or
jns
pop
out
pop
or
add
adc
jne
dec
add
fildl
dec
loopne
in
mov
test
repnz
aam
cmp
inc
inc
fistpl
sbb
rorl
jno
xor
jmp
les
mov
mov
push
inc
daa
pop
add
pop
ret
aaa
movsl
xchg
add
movsl
adc
jns
jns,pt
mov
sub
les
es
push
std
imul
sub
pop
jg
or
add
pop
mov
mov
push
pop
jns
mov
sub
jmp
and
psrld
ljmp
test
out
idivl
jno
pop
push
pop
pop
pop
ds
mov
int
push
push
and
push
xorb
add
push
jecxz
add
ljmp
dec
cmpsb
repz
rcrb
negl
or
pop
inc
lcall
in
aaa
icebp
and
push
sbbl
cmp
jbe
mov
push
cmp
adc
es
xchg
dec
mov
mov
ret
fdivrs
add
inc
das
ret
add
xchg
popa
xlat
cmpl
or
decl
cmp
or
jb
test
into
sbb
xchg
xor
repz
xorl
sahf
rcrl
movsl
pop
fisubs
mov
sbb
jno
jge
mov
test
repnz
pop
fbld
cmp
dec
std
adc
fnstcw
ror
add
push
nop
int3
push
sbb
inc
sarl
cmp
sbb
mov
xor
mov
scas
adc
out
sbb
cmp
jno
fmulp
call
push
loopne
lea
enter
repnz
fmulp
das
call
mov
mov
sub
out
and
pop
pop
rcrl
les
icebp
mov
sahf
in
push
je
arpl
cmp
push
ss
push
or
movsl
test
push
mov
rcrb
jbe
loopne
sti
insl
scas
and
fs
test
dec
test
int
cmpsl
mov
xlat
and
inc
inc
push
roll
pusha
jle
dec
mov
ficomps
adc
imul
outsl
lods
xor
dec
lret
push
mov
movl
mov
call
out
adc
sti
sub
das
loop
push
daa
mov
rcr
imull
inc
xchg
or
push
fnstsw
mov
divb
xor
sbb
lret
push
enter
add
dec
cmpsb
shl
or
xchg
nop
stc
mov
lahf
hlt
loop
cmp
xor
int
clc
jo
ret
lods
xchg
lea
jb
loopne
sbbl
fwait
clc
push
push
sub
jmp
movb
unpckhps
mov
daa
jae
inc
push
daa
out
sahf
add
and
jmp
loope
mov
imul
and
push
pop
mov
stos
and
push
dec
pop
mov
call
and
mov
push
es
pop
or
add
lahf
in
int
je
cmpsb
hlt
les
das
jp
inc
add
pop
maskmovq
imul
jb
xchg
jle
fistpll
pop
inc
fldenv
mov
cmpsl
imul
cmp
insl
ror
pop
cld
dec
xchg
shl
xchg
and
pop
inc
pop
mov
call
fildll
cwtl
loopne
shrl
pop
push
mov
adc
mov
adc
xchg
lock
outsl
out
push
nop
add
cmpsl
push
mov
xor
adc
cmp
pop
lods
aam
cmp
mov
xorb
bound
pop
xor
sbb
loope
adc
lahf
inc
outsb
adc
leave
pop
sub
out
xchg
xchg
and
in
sub
mov
or
sub
popf
sub
push
mov
sbb
popf
in
mov
lods
sbb
jp
sbb
outsb
mov
popf
mov
or
in
cmp
enter
mov
mov
lret
jg
xchg
divl
mov
ljmp
adc
mov
mov
call
repz
dec
xor
popf
movsl
pop
mov
jnp
sbb
jb
ret
jmp
loopne
enter
xor
or
xchg
insb
pop
scas
sub
dec
pop
or
pusha
movsl
andb
jle
testl
orb
push
je
ret
ficoms
lret
and
cs
scas
mov
mov
mov
mov
imul
ret
repz
inc
or
pop
mov
je
pushl
adc
leave
nop
push
mov
cmp
insb
add
es
repnz
jp
enter
xor
fildll
in
dec
or
repnz
mov
divps
sub
test
pushf
pop
pop
movsl
clc
dec
and
pmullw
inc
push
push
mov
xchg
xchg
pushf
lods
js
sbb
sti
or
lahf
jle
fdiv
int
shrb
stc
outsb
aaa
mov
fwait
pop
mov
loopne
lahf
aaa
int3
stc
inc
sbb
mov
xor
push
js
testb
mov
cmp
outsb
fimull
and
and
pusha
xchg
xchg
cmp
push
mov
xchg
push
imul
xor
or
lret
add
inc
mov
sub
jg
icebp
xlat
pop
scas
mov
imul
clc
stos
fsub
outsl
cmp
push
js
js
xchg
xor
inc
jo
out
div
ja
or
xor
inc
shll
push
cmp
inc
fucom
imulb
pop
xchg
push
inc
cmpsl
scas
in
sti
push
mov
push
xchg
popf
pop
mov
and
cmp
jnp
fisubl
lahf
pop
and
push
es
xchg
xchg
jecxz
lods
movsb
pop
xor
test
sub
shlb
sub
inc
inc
jl
sbb
push
ds
mov
lcall
stos
nop
mov
jne
je
pop
push
es
popa
test
dec
bnd
movsl
testl
loopne
les
pop
pop
enter
aaa
insb
dec
xor
leave
xor
je
pushf
pop
ljmp
xchg
pop
adc
or
leave
or
lods
mov
scas
cmp
jbe
test
dec
cmp
clc
dec
cli
inc
imul
ss
jb
ds
xchg
xchg
add
imul
jns
sti
cwtl
lcall
push
lret
dec
nop
mov
icebp
push
xlat
sbb
je
mov
mov
pop
cmp
rcr
dec
iret
cmc
nop
adc
jns
dec
jbe
shr
or
test
xor
push
lds
pop
and
shll
cs
jb
pop
ficompl
mov
mov
clc
imul
insl
or
cmc
push
insb
popf
jmp
call
sti
push
mov
in
ret
inc
lahf
fistps
add
enter
mov
or
xchg
and
shll
sbb
lods
add
jecxz
and
xor
sbb
inc
cmp
adc
jge
insb
fcomip
sarb
es
sbb
push
mov
adc
imul
aam
outsl
fsubl
xchg
cmp
and
jns
push
aas
iret
scas
testl
mov
pop
das
fidivs
mov
cmp
clc
lods
pusha
jg
cli
add
ror
pmaxsw
das
adc
loop
sbb
iret
gs
dec
mov
inc
mov
push
outsb
sub
sbb
cli
stos
xchg
aaa
adc
dec
mov
ljmp
cmc
cmp
inc
mov
add
inc
popf
rolb
jnp
nop
xor
loopne
push
inc
xor
enter
repz
xchg
jno
fisubrl
stos
pop
ret
dec
cmp
loope
push
pop
repz
movsl
add
mov
and
or
pop
xor
push
adcl
aaa
mov
and
cmp
sub
jle
mov
cmpsb
int3
and
loope
xlat
aas
mov
inc
clc
xchg
mov
sbb
cmpsl
push
xlat
cltd
mov
fisttpl
and
test
jnp
in
in
loope
scas
sub
push
sub
aad
test
leave
jb
mov
mov
xchg
mov
dec
sti
mov
push
aaa
jecxz
lods
pop
sbb
mov
or
fs
cmp
or
jns
pop
leave
or
and
jbe
mov
negb
outsl
fdivr
or
or
orl
gs
jl
bound
sbb
push
movsl
inc
push
call
and
jnp
jae
ljmp
out
out
mov
jnp
lea
popf
lods
outsb
lock
je
addl
sbb
mov
xchg
iret
addb
cmp
jb
dec
lods
jg
mov
and
sub
pushf
test
mov
inc
bound
xchg
adc
jge
lret
int
scas
cmp
mov
sbb
and
imul
push
mov
cmp
sbb
fiaddl
sbb
sbb
jge
lock
xlat
push
js
ljmp
gs
fwait
lret
loope
test
scas
add
lcall
inc
add
xor
sbb
andb
xor
fidivl
arpl
sub
lock
ret
fcomps
jecxz
arpl
sbb
in
or
xor
outsl
ret
sti
xor
insl
mov
mov
sbb
das
lret
dec
push
push
lods
and
daa
mov
aaa
cwtl
imul
push
mov
sbb
andl
jg
gs
cmp
mov
outsb
xchg
push
in
sti
and
aad
xchg
xchg
aad
into
jecxz
jge
xchg
adc
adc
pop
xor
fisttpl
int
sub
filds
adc
mov
push
es
adc
in
or
aam
fisttpl
clc
xchg
sbb
test
sub
test
inc
and
mov
fucomi
in
cmp
sub
insl
pop
loopne
mov
jns
cmp
sbb
cvtps2pi
test
xchg
repnz
in
and
jg
jno
lock
and
inc
jg
mov
jnp
push
sub
mov
fwait
cmp
cmp
call
or
rolb
jl
nop
dec
fcoml
shll
fldln2
dec
xor
or
cmpb
mov
sub
pop
mov
dec
jae
cmp
jno
sbb
xchg
loop
and
lock
lock
push
ljmp
popf
fwait
xchg
xor
cmpsl
shll
jbe
int
mov
pusha
ret
and
cmp
dec
add
fwait
jge
adc
and
outsb
push
and
lods
cmpsb
cmp
xor
sbb
cmp
insl
pop
sub
popf
fwait
ret
arpl
jo
mov
xor
sub
mov
sbb
cmc
mov
iret
div
push
and
xchg
jg
add
cmp
adc
mov
jle
push
sbb
sbb
xchg
jb
std
xor
dec
xchg
and
clc
jo
xchg
push
in
dec
xchg
iret
pop
and
sbb
test
out
sub
es
and
xchg
xchg
iret
pop
adc
rorl
xchg
adc
and
sbb
xchg
add
das
mov
sti
es
xlat
call
or
xor
push
cmp
in
fwait
adc
lock
jnp
sbb
lods
jmp
mov
scas
in
loop
mov
jbe
jg
mov
xchg
mov
divl
subl
push
mov
idivl
clc
js
ljmp
xlat
pop
xchg
hlt
testb
scas
clc
fs
cmc
and
pushf
ret
adc
xchg
dec
push
xchg
mov
clc
test
std
stc
mov
rcr
inc
in
pop
mov
mov
int3
push
aaa
or
mov
or
pop
sbb
hlt
fsubs
or
fisttps
aad
jbe
sbb
mov
cmp
or
push
xor
outsb
enter
mov
dec
sar
and
jbe
pop
add
adc
jno
xchg
xchg
ss
popf
inc
leave
sub
mov
addr16
mov
lahf
pop
aas
push
mov
xchg
mov
movsl
cmp
pop
in
test
or
mov
sbb
pop
jle
mov
ja
iret
cmpsb
push
push
addr16
ror
flds
in
sbb
xlat
jns
cld
fistpl
push
sub
jge
sub
pop
mov
nop
cmp
jle
iret
sub
or
xor
push
sbb
mov
lods
bnd
mov
mov
popf
or
sbb
test
aam
shlb
mov
mov
sbb
mulb
xor
gs
mov
pop
and
scas
lahf
pop
enter
xchg
not
push
jne
lcall
mov
sbb
lahf
cmp
repz
sub
lret
andb
jbe
out
and
les
pcmpgtw
push
bound
dec
sbb
in
aaa
lock
mov
pop
mov
lret
jns
or
cmp
loope
shlb
cltd
mov
add
movlps
pop
hlt
mov
cmp
ss
mov
mov
mov
xor
out
dec
jno
cmpsb
in
add
jo
adc
cli
das
adc
pushf
repnz
add
cmp
clc
push
jnp
mov
pop
jo
xor
and
ljmp
leave
push
or
xor
jl
inc
pop
mov
es
dec
or
adc
testl
popf
scas
into
mulb
leave
adc
push
and
in
mov
mov
and
addr16
mov
dec
fcoml
daa
pop
rcr
negb
in
and
into
sub
sub
push
imul
js
fidivrs
push
lret
inc
pop
mov
hlt
xor
fstps
cltd
push
nop
jg
xchg
out
dec
dec
stc
roll
addb
sub
sub
daa
xor
sbb
test
fimull
mov
iret
sbb
adc
inc
add
cmp
sub
mov
cld
mov
insl
push
outsb
inc
mov
cs
sbb
push
inc
jmp
in
jle
push
or
pusha
inc
adc
xor
test
inc
hlt
mov
inc
out
shlb
push
hlt
push
sbb
dec
and
sbb
dec
mov
and
xor
sarl
pushf
mov
cltd
mov
xchg
sbb
mov
adc
xchg
int
adc
std
je
xor
mov
mov
lds
sub
ja
jo
pusha
popf
push
stos
dec
cld
push
xchg
xchg
push
insb
movsb
pusha
adc
inc
mov
and
enter
cmc
and
lret
pop
mov
push
jb
inc
movsl
mov
je
or
stc
mov
xchg
mov
cmpsb
dec
leave
movsb
mov
mov
daa
bound
lds
mov
sbb
sarb
xor
dec
fisubrs
sti
push
fst
in
adc
fnstcw
out
out
loopne
push
lea
adc
push
in
mov
mov
and
adc
scas
int
lcall
pushf
not
mov
shrb
push
sub
cs
xchg
fisttps
mov
dec
xlat
mov
out
cmpsl
call
adc
sub
aad
int3
and
cmpsb
loop
je
aas
mov
cmpsl
push
add
lods
fcmovu
sbb
push
jb
outsb
mov
clc
into
out
popa
mov
inc
or
adc
sub
rcrb
in
cmpsl
lret
in
mov
pop
mov
outsb
push
lahf
mov
jns
push
ret
fcomps
and
xor
mov
inc
mov
sub
cwtl
xsha1
cmpsb
mov
jle
out
jg
iret
jno
jb
cmp
icebp
lds
mov
cmp
idiv
jb
add
add
aas
out
lret
jae
sub
mov
push
loop
jnp
push
add
add
fstpl
lahf
mov
in
divps
arpl
pop
and
mov
xchg
fdivrl
cmp
jae
pop
in
stos
push
cmp
in
and
rolb
sbb
push
in
lds
repnz
mov
mov
jecxz
sar
jnp
cmp
sbb
jp
jmp
mov
cmpsb
into
ret
xchg
test
adcb
fisttpll
jne
jp
insb
lret
cmc
scas
mov
int
push
addr16
push
xchg
sbb
jge
or
cmp
or
imul
andb
jp
punpckhbw
data16
sub
xor
xor
lret
sahf
mov
shlb
dec
sub
pop
add
rol
dec
lcall
hlt
jp
cld
movsb
inc
mov
negb
pop
loope
xor
jb
xchg
fucomip
xchg
scas
cmp
inc
loop
loop
repz
in
inc
or
xchg
xorb
popa
dec
and
sarl
mov
loopne
lcall
or
or
inc
into
sbb
rcrb
imul
push
fdivrl
decb
cmp
iret
jno
insb
cld
xchg
ss
repnz
lock
popa
adc
out
das
loop
cmpsb
xchg
data16
adc
mov
sub
sbb
inc
sub
mov
mov
cli
xchg
clc
xorb
movsl
mov
and
add
adcb
cltd
mov
lret
mov
leave
inc
and
or
enter
add
lock
xchg
cli
pop
leave
stc
imul
dec
lods
xchg
mov
jne
das
out
jmp
jge
in
push
arpl
pop
mov
pop
mov
xlat
addb
adc
inc
lock
mov
aam
in
adc
test
loopne
adc
lcall
ficoml
stc
lcall
and
gs
jb
mov
pop
mov
cmc
mov
push
xor
int3
pushf
fs
inc
jb
scas
xchg
dec
imul
fstpt
popf
loop
aaa
inc
fcmovnu
jmp
pop
rorb
jg
outsb
dec
hlt
inc
psubusw
pushl
jle
ss
call
xchg
fwait
add
mov
adc
jnp
jnp
jne
xor
dec
stos
mov
shll
popa
cmp
frstor
repnz
jae
test
dec
or
jp
jle
push
lock
sbb
cs
or
ljmp
divb
daa
pop
mov
adc
xchg
inc
and
frstor
lea
push
mov
mov
sub
cmp
aad
push
js
push
or
test
and
mov
or
cs
mov
lods
push
imul
mov
movsl
pop
inc
incl
jecxz
dec
mov
pushf
pop
mov
loop
mov
pop
mov
sub
sbb
and
mov
mov
mov
jae
dec
stos
in
ljmp
add
xchg
inc
or
add
add
aad
adc
cli
xchg
or
subb
pop
leave
jo
subl
insb
push
push
xchg
cmp
out
fwait
out
mov
mov
xor
xor
out
cmp
in
pop
aam
addr16
push
cmp
pusha
xchg
cld
lock
jns
mov
in
pop
cltd
adc
idivb
aad
pop
mov
or
dec
jmp
xor
dec
testl
imul
pop
movsb
divb
ret
iret
jne
mov
jecxz
xor
sub
fbld
xchg
pusha
mov
mov
outsb
add
adcb
sub
mov
lods
jl
xchg
lret
loope
cltd
test
xchg
cmp
out
nop
inc
fsubl
ja
adc
rolb
mov
xor
in
adc
inc
jne
call
loop
cli
xor
popf
movsb
pop
inc
dec
ss
les
pushf
jmp
popa
fbld
mov
mov
sbb
jns
jle
popl
enter
icebp
pop
lret
sbb
mov
inc
push
sti
mov
add
jge
lods
jo
inc
sbb
int
or
ret
pop
sub
sub
inc
popf
data16
jno
lret
mov
fs
lret
mov
push
call
hlt
mov
repz
bound
ret
dec
adc
adc
std
add
loopne
cwtl
pop
stc
fisubl
sbb
sub
adcb
mov
lea
and
popf
scas
test
repz
in
aad
shrl
jb
ds
cmp
sbb
jmp
test
divb
sbb
repz
les
outsl
fsubrl
push
test
inc
jle
pop
clc
ficoms
stos
and
xchg
inc
call
popf
pop
xchg
pop
fs
gs
cwtl
in
in
nop
sbb
popf
push
fbstp
rol
adc
xor
mov
fnstsw
aas
test
mov
adc
pop
mov
cmp
aaa
inc
dec
out
fdivs
mov
mov
fbld
or
out
rolb
repnz
stos
cli
push
out
and
notl
dec
mov
jg
cltd
inc
mov
and
int
push
in
std
xchg
das
mov
outsl
dec
in
mov
dec
mov
sub
mov
cmp
xor
dec
arpl
pusha
out
ljmp
fcomi
inc
and
incl
icebp
nop
mov
cld
cmpsl
inc
or
rorl
fwait
push
pop
daa
test
testb
mov
dec
mov
jmp
aad
popf
pop
cmp
sbb
dec
add
je
sarw
xchg
pop
daa
in
inc
adc
repz
jae
pusha
push
cmp
cli
cwtl
adc
out
movsl
jg
pop
mov
jecxz
push
pop
bound
ja
popa
mov
sbb
stc
mov
cmp
mov
xchg
insl
mov
sub
dec
xchg
sub
xchg
xchg
movntps
push
dec
mov
jmp
insl
mov
addr16
inc
subb
hlt
cmp
push
mov
movl
leave
mov
jecxz
jp
test
out
es
out
xchg
dec
dec
cmp
push
lock
xchg
and
icebp
sub
lods
jae
inc
lock
sti
xchg
hlt
fs
cmp
push
jns
scas
sub
cs
mov
cltd
popa
stos
mov
and
mov
jo
das
xor
shll
gs
sub
xchg
adc
or
xchg
pop
sub
fdivl
lret
adc
cs
pop
xor
push
std
cmp
cmc
fwait
test
out
pop
or
leave
pop
adc
ss
lock
jae
mov
and
xor
pusha
pop
je
in
stos
and
in
gs
mov
mov
lods
jb
std
inc
lret
loope
xor
nop
xchg
cmp
addl
fdivrl
or
cmp
or
movsl
pop
repnz
mov
sbb
sbb
pop
fiaddl
inc
cltd
shlb
loopne
test
stos
push
fsts
es
movl
addl
nop
insb
lret
sahf
dec
jl
mov
in
sbb
jp
imul
dec
sbb
pop
add
sub
push
lock
add
push
sbb
sbb
mov
xchg
ficoms
inc
mov
xchg
dec
in
xlat
icebp
imul
in
loop
repz
xor
jecxz
xchg
xchg
jge
sbb
sbb
pop
jo
sbb
mov
mov
push
scas
cmp
ja
mov
xor
push
xchg
xchg
jb
mov
out
ds
inc
out
cltd
bound
ret
cmp
in
testl
aaa
adc
xchg
popa
push
std
xchg
test
adc
add
cmp
fcoms
jo
fisubrl
loope
push
push
mov
es
mov
xchg
dec
cmc
in
jecxz
jmp
mov
or
scas
shlb
je
push
repnz
mov
or
imul
sbb
lock
sti
mov
mov
sahf
fidivl
lods
stos
aad
inc
pop
je
cli
xchg
in
mov
fstps
pop
outsl
sbb
dec
mov
adc
push
add
mov
sub
sarl
mov
jnp
fsubrs
push
mov
push
scas
push
jl
outsl
sbb
push
mov
jne
pusha
sub
data16
jbe
sbb
out
dec
cmp
aas
pop
xor
pop
inc
inc
mov
pop
mov
xorb
push
in
xor
add
sahf
push
push
stos
ffreep
cli
test
out
cmpsb
cmpsb
lret
xchg
data16
sbb
pop
outsb
movsl
pop
pop
test
hlt
or
lds
pusha
xor
adc
fmull
dec
out
cs
jno
stos
nop
fstpt
mov
mov
or
mov
lock
jl
mov
mov
jns
add
adc
popf
scas
fcomip
fisubl
movsb
mov
cwtl
scas
cmp
pop
aas
jp
mov
cmp
popf
rcrb
inc
or
dec
push
fdivp
or
shlb
pop
into
repz
cld
imull
push
push
xor
data16
xchg
shlb
scas
jmp
dec
mov
xchg
popa
and
testb
mov
mov
sub
and
jb
jmp
pop
flds
push
es
popl
out
ss
rol
aas
mov
push
fstps
xchg
outsl
pop
jg
test
cmp
rorb
lcall
mov
sub
push
pop
mov
or
push
inc
sbb
inc
push
gs
jbe
jns
fucomi
pop
std
repnz
mov
push
ljmp
pop
adc
jg
loope
xchg
push
jl
push
push
xor
push
sbb
or
adc
lea
pop
hlt
insb
insl
aam
es
cmp
imul
add
jb
cld
xchg
jg
outsl
imul
xchg
insb
mov
rorl
fsubp
addb
in
clc
inc
cmpsb
sar
bound
mov
cmp
sbb
addl
xchg
arpl
pop
add
add
sbb
movsb
lock
sarb
ficompl
push
pop
pop
enter
xchg
lock
cmp
jns
out
arpl
xor
pop
pop
inc
lahf
shrl
add
into
in
hlt
stc
xor
jo
adc
mov
sbb
fsubl
adc
gs
in
xchg
and
fists
pop
add
sub
sti
test
outsb
mov
mov
dec
dec
fsts
ffree
out
push
push
pop
mov
jo,pn
dec
inc
notl
ljmp
push
out
lea
js
mov
mov
push
mov
ljmp
xchg
inc
int3
int
test
and
mov
fistps
sbb
icebp
loop
mov
mov
mov
sub
xchg
aaa
pop
add
add
add
add
add
xchg
add
inc
xchg
mov
sti
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
or
mov
add
