jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
push
mov
sub
xor
and
sub
mov
leave
sub
inc
mov
call
xor
mov
mov
add
add
and
and
inc
sub
mov
and
inc
mov
mov
mov
xor
mov
sub
dec
add
jmp
add
sub
xor
push
sub
push
sub
add
push
and
and
call
inc
inc
push
add
inc
dec
call
inc
add
and
cmp
mov
mov
mov
je
add
add
and
or
mov
mov
mov
je
add
or
mov
or
cmp
mov
je
and
sub
push
and
call
and
xor
mov
and
mov
xor
add
or
push
inc
or
push
and
or
push
mov
sub
push
xor
sub
push
add
sub
inc
sub
call
sub
and
add
and
or
xor
shr
sub
dec
lods
or
xor
xor
xor
add
or
mov
add
and
or
sub
dec
mov
mov
mov
jne
xor
pop
xor
inc
or
or
pop
or
pop
and
inc
and
sub
jmp
loopne
jecxz
or
jecxz
or
dec
or
add
jle
adc
lcall
sub
jg
xchg
in
rcr
subl
xchg
inc
jb
sarl
push
push
xorl
sbb
jmp
loopne
out
sub
pop
hlt
divb
adc
cmpl
and
or
push
jns
cmc
imulb
or
xchg
pop
jb
dec
add
icebp
xchg
jne
push
sbb
jle
mov
sbb
fnstcw
out
mov
jecxz
or
xchg
incb
aas
xchg
pop
xor
xchg
sbb
dec
sti
cli
lcall
ja
mov
pop
cwtl
jne
int
adc
sbb
push
sbb
push
xchg
js
outsb
fs
loopne
or
sbb
aad
jecxz
or
mov
dec
shl
fisubl
mov
sbbl
out
add
pop
sub
or
pop
xchg
or
nop
dec
pop
js
mov
jge
or
testl
out
pop
cmc
setp
xchg
sbb
sbbl
jl
stos
repnz
mull
sbb
dec
cmp
push
cmc
pusha
mov
mov
fcompl
mull
sbb
jle
out
xchg
xlat
add
push
hlt
cmc
sahf
in
int
pop
dec
jle
xchg
lods
inc
mov
dec
add
test
dec
pop
enter
jecxz,pt
repnz
fcomip
push
mov
jecxz,pt
mov
jecxz
or
push
sbb
jns
roll
pop
mov
adc
pop
or
fcompl
cmc
sahf
in
xor
fsub
jl
push
cmpsl
pushf
sbb
test
mov
js
add
sbb
and
cmp
and
fildll
inc
imul
xor
adc
int
xor
sbb
mov
pusha
adc
add
and
aas
xchg
push
jecxz
in
cli
xor
in
scas
jbe
sbb
inc
mov
insl
pop
scas
jge
jno
mov
cld
fisubl
into
icebp
cld
int
mov
sbb
pop
cmp
and
rclb
lods
dec
xor
adc
aaa
cli
pop
hlt
cmp
lods
dec
mov
incl
jno
push
jno
outsl
scas
dec
adc
gs
es
push
cmp
cltd
shlb
inc
cmpsb
sub
fidivl
leave
and
sbb
dec
jmp
cmp
shrb
cmp
mov
lods
dec
xor
cli
push
movb
mov
out
sets
outsb
daa
xor
out
je
adc
mov
leave
pop
sbb
clc
scas
dec
jo
es
adc
test
sbb
sbb
lock
mov
out
lret
sub
adc
sbb
adc
xor
ret
or
aaa
lock
fidivrs
xor
sub
outsb
sbb
dec
je
mov
dec
daa
fcomp
mov
loope
loopne
xor
or
xor
mov
movsl
inc
push
mov
add
fnsave
xor
in
xor
in
or
xchg
push
mov
imul
dec
out
test
and
lahf
imulb
fs
notb
lret
movsl
shl
push
mov
ljmp
dec
cmp
sub
fisubl
into
icebp
in
int
jo
mov
out
sub
in
les
lods
dec
xor
and
dec
outsb
mov
scas
loop
in
dec
mov
jo
jge
sbb
daa
xor
adc
lret
out
les
and
cmc
and
dec
mov
loopne
xchg
push
pop
jmp
jne
push
lods
mov
sbb
loop
in
dec
arpl
jle
lret
into
out
and
dec
cmp
push
ljmp
jl
movsb
shlb
mov
pop
sub
lods
int
cli
movsl
xchg
out
mov
fwait
jb
jne
mov
dec
gs
inc
ret
enter
mov
xchg
or
aaa
sbb
xor
mov
pop
jmp
ss
dec
inc
adc
jae
lret
les
es
sbb
jno
sbb
daa
jne
fcompl
sbb
pop
frstor
push
mov
inc
xor
scas
add
xchg
in
mov
divb
scas
out
cmp
mov
arpl
xor
push
movsl
jbe
in
std
out
jge
std
flds
fcomps
mov
adc
cmp
sbb
mov
xchg
inc
repz
repz
lret
and
push
mov
xchg
es
xor
xchg
ss
sbb
cmp
pop
cmp
fadds
jo
sub
out
inc
cmc
insl
cmpsb
sbb
adc
out
popf
mov
adc
aaa
xchg
pop
dec
inc
adc
lea
mov
dec
ss
movsl
or
pop
out
xor
lock
faddp
mov
repz
pusha
adc
adc
dec
cltd
cmp
mov
aas
jge
push
jmp
inc
daa
cmp
sbb
inc
mov
adc
aas
add
push
mov
in
sub
inc
adc
mov
jne
mulb
or
sbb
dec
xor
xchg
mov
xchg
push
lea
adc
add
xor
daa
jne
pushf
cmp
out
jnp
xchg
loopne
les
sbb
dec
xor
cs
cmc
sbb
movb
mov
cmc
insb
mov
daa
xor
adc
push
repz
sub
in
inc
mov
add
sbb
pop
es
or
mov
rcll
les
and
xor
jle
fisubrl
andl
and
fisttpll
adc
mov
mov
outsl
pop
notb
lods
inc
cmp
sbb
inc
clc
cmp
sbb
fisubrs
add
and
int3
and
jnp
and
xchg
adcb
roll
popf
and
pop
loop
leave
jne
and
addl
mov
jno
pop
dec
cmpsl
inc
pop
pop
sbb
mov
mov
sub
mov
ret
mov
or
xor
or
push
push
repz
sti
inc
dec
push
inc
movsb
js
inc
inc
mov
mov
les
pop
nop
int
loope
std
or
push
lods
dec
aaa
bnd
jg
mov
aas
jle,pt
pop
cmc
add
add
adc
mov
add
xorl
scas
or
and
fcoml
pusha
inc
cmp
lods
pop
and
jl
dec
iret
cmp
dec
sbb
test
mov
lods
shrb
aas
push
jns
xchg
xchg
dec
aas
sbb
push
dec
mov
and
xor
or
fidivs
pop
mov
int3
cmp
sbb
in
dec
es
dec
pop
sbb
and
pushf
bound
push
mov
jo
sahf
lahf
ss
sub
inc
mov
xchg
call
mov
dec
into
cmpsl
add
int
das
jmp
out
sbb
inc
push
insl
push
dec
inc
mov
shl
jmp
aad
hlt
cmp
lock
cmp
push
cmpsb
xchg
mov
inc
mov
sub
rcrl
sub
mov
xor
ret
test
xor
stos
cmp
outsb
push
mov
jnp
inc
xchg
adc
add
unpckhps
dec
xchg
flds
push
and
add
cs
push
stos
les
insl
je
fwait
sbb
ficomps
sub
jno
std
dec
movsl
pop
pushf
aas
cmp
idivl
mov
insl
repnz
sub
bound
or
and
jno
inc
gs
push
push
addb
fiaddl
stc
in
jbe
cltd
outsb
push
mov
ss
aaa
ret
add
jmp
bound
in
add
dec
or
in
pop
sbb
roll
sbb
pop
sub
adc
or
jg
int3
test
sbb
fwait
imul
add
xor
incb
cmc
mov
das
pop
adc
pop
adc
xchg
je
int3
leave
sub
sbb
sarl
loope
and
xchg
nop
jge
lret
lea
push
out
lcall
lahf
imul
inc
mov
jmp
sub
sub
adc
out
or
and
push
mov
lea
iret
push
je
outsb
pop
xchg
or
pop
bound
sub
xor
inc
sub
jo
xchg
lock
mov
push
mov
mov
cmp
or
cmp
call
pop
or
xchg
mov
rorl
cmpsb
xor
cmp
add
pop
aas
inc
aam
sbb
pop
pop
sti
dec
ret
inc
jge
mov
dec
leave
sbb
lea
sti
fisubs
movsl
add
cs
and
scas
jle
adc
popa
mov
cmp
cmp
pop
fimull
ds
jne
imul
and
dec
mov
pop
and
pop
sub
inc
fs
int
and
in
dec
cmp
sbb
mov
inc
cmp
xchg
sbb
and
dec
adc
add
ss
fwait
out
aas
xchg
test
xor
lahf
adc
sub
pop
push
int
adc
push
cmp
mov
cmp
lock
push
jge
imul
aas
add
pop
loope
push
fcompl
xor
ljmp
xchg
loopne
adc
leave
adc
add
seta
aad
pop
inc
aam
mov
nop
call
lods
ja
mov
lds
add
pop
xchg
int3
fadds
shrb
mov
mov
and
mov
jno
iret
repnz
mov
mov
lea
lea
scas
cwtl
jl
insb
or
outsl
popf
or
push
or
mov
insb
xchg
popa
cmp
aad
test
fnstsw
cmp
pop
mov
cmp
enter
cmp
movsl
xor
mov
cmp
popa
and
sub
mov
push
and
and
adc
mov
pop
mov
push
sub
mov
dec
and
out
xor
push
call
test
cs
add
xchg
std
movsl
fwait
loope
leave
mov
sub
and
aam
pop
pop
stc
xchg
std
les
popl
fimuls
mov
adc
xor
sub
les
jge
dec
std
cmp
jb
cmp
xchg
fsubrs
imul
test
mov
sub
cltd
mov
pop
inc
add
mov
es
lods
negb
addr16
in
mov
lds
leave
enter
popf
js
and
imul
movsl
movsl
call
cmp
and
add
xchg
add
adc
and
xchg
fwait
mov
jbe
cld
aad
push
fstl
shlb
adc
loop
sub
clc
push
hlt
or
dec
jae
fstps
fdivs
push
and
adc
bound
in
xlat
and
pop
jl
sti
leave
sub
sub
push
mov
cmp
lods
mov
push
cli
shlb
or
xchg
divl
sub
je
scas
xchg
dec
fs
inc
xor
mov
jbe
pop
sub
cmpsl
in
fs
push
movsl
mov
faddp
in
dec
sbb
push
ss
and
out
mov
inc
mov
or
addr16
add
xor
pop
scas
add
push
mov
pop
xor
fsts
pop
xchg
in
inc
shlb
xor
imul
test
mov
daa
jbe
xchg
loopne
rol
cmp
sti
mov
mov
adc
pop
leave
push
pop
cmp
fwait
icebp
inc
xor
outsl
or
and
test
or
xor
sub
mov
push
push
pop
sarb
adc
cltd
push
mov
xchg
or
call
adc
xchg
cmp
jnp
xor
lahf
mov
jne
gs
cltd
test
xor
xor
adc
mov
andb
inc
add
sbb
sbb
aad
cmp
pop
jnp
rcr
adc
es
ja
fs
jb
std
mov
lds
int
insb
jp
mov
inc
inc
push
out
adc
es
popf
inc
addl
mov
bound
jmp
xchg
mov
push
sub
imul
arpl
lds
pop
dec
push
push
nop
call
adc
push
mov
dec
sbb
jge
and
xor
pop
dec
xor
sbb
pop
outsb
and
or
mov
mov
mov
jl
inc
arpl
mov
ja
int
cmp
push
ret
lea
jecxz
push
pop
ds
inc
lret
frstor
add
in
ljmp
fstpl
in
in
cmp
enter
int3
sub
rolb
pop
call
xor
adc
mov
addr16
dec
enter
popf
aaa
lods
inc
imul
pop
ds
jp
imul
jo
mov
cmp
call
loope
pop
sub
push
rcrl
jno
in
inc
mov
fnstenv
mov
pop
outsb
inc
push
jo
dec
repnz
popf
lret
movsl
push
mov
hlt
aas
cltd
mov
outsl
aad
sbb
adc
test
vmovdqa
and
cmp
push
xchg
xchg
fadds
inc
pushf
xor
scas
popf
lds
sbb
mov
jl
pop
push
rorb
or
test
insl
cmpsb
cmpsb
sub
insl
xor
xchg
cmc
or
jmp
mov
iret
pop
mov
cmp
aad
ss
lahf
stos
sub
enter
repz
inc
inc
adcl
pushf
test
lret
das
movsl
push
aaa
popa
and
cmp
aad
icebp
idivb
cmpsb
and
xchg
nop
cmp
cmp
lret
cltd
xor
call
adc
jecxz
xchg
push
pop
pop
adc
cmc
stc
mov
pop
sbbl
or
or
cmp
xor
nop
mov
in
std
jbe
mov
mov
in
std
inc
imul
gs
mov
insl
cs
pop
movsl
xor
cwtl
sbb
pop
gs
andb
mov
pop
jg
mulb
mov
dec
xor
push
push
idivl
jmp
int
scas
or
in
jmp
shl
gs
adc
sub
je
or
lahf
sub
mov
or
dec
fs
mov
sub
mov
loopne
or
inc
jmp
jo
pop
inc
push
fldt
fs
jl
scas
lds
mov
out
insb
in
inc
inc
xor
es
mov
inc
jl
cmp
sub
xchg
nop
movsl
mov
jmp
cmc
fcompl
dec
push
ds
dec
dec
aad
inc
lahf
cmp
outsb
pushf
aad
or
dec
add
adc
sbb
jno
xchg
insb
frstor
dec
cld
in
cs
stc
cmp
iret
leave
xchg
sbb
lods
pop
xchg
adc
sbb
nop
std
xchg
cmp
popa
pusha
mov
adc
lods
jne
popf
or
adc
mov
dec
mov
jmp
or
mov
sarb
add
xor
add
addr16
lahf
sti
mov
outsb
adc
repz
and
sub
adc
push
in
mov
icebp
scas
scas
daa
lock
mov
int3
cmpsl
xchg
mov
in
cltd
cmp
in
add
xor
pusha
xchg
fstpl
movaps
jecxz
inc
push
imul
stos
lea
and
test
push
or
pop
adc
and
sbb
test
int
push
cmp
push
inc
ja
xchg
push
imull
lahf
mov
fs
lret
fadds
fimuls
stos
cmp
insb
mov
xchg
inc
in
sub
sbb
mov
push
or
iret
sub
mov
and
mov
lret
arpl
lds
mov
subb
movsb
jne
test
jp
out
decb
pop
pop
repnz
dec
clc
push
jmp
mov
push
mov
addr16
sbb
mov
repnz
fcomi
xchg
cmp
pop
lea
sub
mov
pop
pop
movsb
jmp
mov
push
jg
movsb
xchg
data16
lods
rorl
insb
xor
pop
loopne
sti
stc
xchg
dec
mov
xchg
xchg
mov
add
ds
mov
out
repz
xor
pop
testb
shll
leave
mov
push
cmp
jmp
lret
scas
adc
mov
xor
cmp
push
nop
push
sub
add
pop
mov
stos
jne
push
aad
mov
xor
and
push
jg
cmp
rol
hlt
mov
add
fstps
pop
dec
shll
push
dec
imul
cmpsl
add
pop
lret
cld
push
and
dec
insl
aam
arpl
shl
scas
jo
dec
mov
pop
rorl
ljmp
mov
cmp
insl
sub
imul
outsb
scas
sbb
jg
inc
pop
neg
sub
xor
adc
sub
pop
pusha
insl
inc
cltd
test
xchg
ja
fnstcw
push
inc
or
nop
inc
xlat
loope
lea
out
mov
jp
inc
inc
cmp
scas
iret
pop
popf
push
lret
jae
xchg
or
popa
pop
sbb
push
adc
xor
and
jnp
roll
cwtl
push
adc
jl
pop
xchg
out
sub
xor
and
sti
add
cmp
pop
mov
ja
xrelease
or
insl
lods
or
push
scas
loop
mov
mov
mov
dec
adc
test
inc
cmp
int3
ror
and
insl
cli
lret
xchg
push
sbb
imul
mov
dec
mov
int
adcb
mov
push
pop
push
push
daa
fisubl
dec
and
xor
popa
inc
popf
dec
rep
sub
or
scas
mov
aad
or
rep
incl
xor
mov
test
mov
mov
sbb
xchg
add
leave
in
xchg
sub
sbb
movsl
inc
pop
insb
add
cmp
popa
cmp
leave
ds
not
test
cmpsb
rep
es
jbe
pop
dec
into
sahf
or
adc
scas
pop
icebp
or
xchg
sub
stos
test
repz
js
sbb
bound
rorb
sbb
adc
cs
sbb
cltd
jmp
and
pop
push
push
pop
jb
xchg
xchg
std
sbb
cmp
jae
jae
stos
add
add
jge
lods
inc
out
cwtl
shlb
enter
xchg
fisubrs
cmpsb
or
push
mov
add
pop
sub
mov
inc
jp
mov
sbb
ja
in
lds
inc
dec
repz
test
pop
repnz
adc
mov
and
sbb
inc
mov
das
or
and
jg
xor
pop
cmp
sahf
cmpsb
sub
cmpsb
inc
push
rcr
pop
jnp
addr16
lahf
cmpsb
ret
mov
pushf
lea
call
sub
dec
jbe
insb
fisubrl
cmp
and
xor
aas
lret
or
int3
pop
repz
mov
es
adc
inc
ret
jle
xchg
xor
push
push
dec
cmp
loop
enter
xchg
pusha
insl
cmp
outsl
cli
popa
inc
xlat
dec
sbb
repnz
sub
mov
cld
bswap
xor
or
adc
pop
add
inc
mov
xor
fimuls
jge
jmp
xchg
pushf
inc
push
inc
xchg
push
popa
shlb
adc
jns
outsb
adc
xor
pop
xchg
push
push
jns
pop
cmp
xchg
mov
cwtl
jp
dec
fimull
icebp
sbb
lods
adc
addl
pop
cmpsl
jecxz
es
je
xor
sbb
call
mov
popa
lahf
ds
mov
shll
loop
imul
push
test
insl
cld
or
or
jl
adc
xchg
call
push
fsubrl
sub
mov
pop
das
adc
int3
push
movsl
mov
push
fwait
pop
je
mov
movsl
push
inc
jno
sub
cmp
xchg
jne
es
fcmovnb
pop
push
fdivrs
aad
jno
push
cmpsb
dec
jnp
dec
or
pop
mov
dec
mov
inc
repnz
js
adcl
pusha
xchg
jo
insl
nop
jae
adc
mov
xchg
shrb
add
out
and
adc
enter
lret
insl
hlt
xchg
dec
push
leave
sbb
popa
movl
and
daa
sub
imul
sbb
notb
and
sbb
mov
lahf
pop
addr16
inc
cmp
xor
and
xchg
sub
lock
clc
push
hlt
shl
insb
test
add
dec
jb
repnz
aam
pop
ja
addr16
orl
cs
and
ficoml
jb
mov
cmp
push
repnz
cltd
je
pushf
adc
xchg
sub
mov
fcmovne
lds
lahf
adc
imul
lahf
jae
shll
and
and
js
adc
fidivrs
lret
mov
cmpsl
pop
mov
push
mov
imul
gs
xchg
mulb
mov
cmp
lds
inc
and
aas
inc
mov
mov
inc
dec
push
shrl
scas
mov
xchg
dec
fcompl
or
pop
call
movsl
dec
xchg
fwait
sbb
xor
sub
pop
testb
enter
inc
dec
in
xchg
std
ja
xchg
and
in
sub
inc
icebp
adc
popf
dec
cmp
repnz
gs
xor
sbb
or
jne
dec
sbb
les
inc
sti
stos
hlt
cmc
xor
test
mov
adc
and
pusha
mov
imul
add
pop
adc
push
xchg
xchg
dec
rol
cltd
mov
inc
fdivl
data16
insb
mov
xlat
lea
mov
mov
ljmp
addb
int
repnz
out
gs
orl
xchg
call
popf
mov
xchg
ljmp
push
adc
mov
sti
jp
inc
pop
push
cwtl
adc
test
fstpt
mov
outsb
out
xchg
rolb
add
inc
mov
imul
int
lods
mov
pop
and
into
insb
stc
je
scas
outsb
or
das
pusha
sub
montmul
cmpsb
xorl
jbe
insl
dec
out
in
dec
mov
add
jl
sti
ljmp
loopne
movaps
mov
nop
cmp
mov
dec
add
scas
sub
std
mov
lahf
push
xchg
cmp
fwait
jp
add
outsb
or
pop
mov
inc
les
mov
or
pop
leave
cmp
mov
add
ror
mov
test
lret
jae
nop
mov
lret
cmp
inc
arpl
outsb
mov
and
mov
ret
pop
adc
imul
jae
pop
add
pop
pusha
adc
xlat
ja
mov
jp
inc
mov
imul
cmp
fstpl
cmp
leave
mov
cmc
xor
mov
orl
and
jb
dec
mov
testb
out
dec
push
imul
xor
cltd
sbb
adc
icebp
pop
cmp
add
aas
xor
mov
xor
repz
pop
and
dec
mov
mov
iret
movsb
mov
xchg
mov
insl
sti
jp
mov
outsl
cmp
sbb
jle
or
xor
inc
sub
jno
in
adc
mulb
gs
and
in
fsubl
test
aas
repz
push
aas
insb
add
push
das
mov
setno
push
testl
cmc
and
push
or
clc
ja
lods
jge
jno
inc
dec
dec
mov
aas
or
cmp
cmpsl
cmp
jbe
std
in
jg
mov
je
pop
mov
pushf
pop
cmp
jle
jg
xchg
jmp
inc
sub
mov
pop
adc
fimull
xor
mov
pop
mov
adc
jmp
mov
cltd
sbb
test
movsl
inc
sti
add
leave
and
in
dec
push
xor
cvttps2pi
icebp
fs
adc
scas
sbb
pop
mov
rolb
mov
popf
bound
adc
clc
push
stos
std
or
mov
inc
adc
and
mov
jp
out
fs
mov
mov
mov
add
movsb
xor
outsb
or
gs
cmp
movsb
xor
or
ss
into
pop
mov
enter
dec
lret
cmp
dec
in
bnd
pop
add
push
es
sbb
add
push
imul
mov
fcoml
mov
clc
jb
jne
rdpmc
outsl
jp
inc
xchg
sub
or
dec
jg
push
aad
aam
adc
lcall
jo
pop
clc
ljmp
test
pop
aas
ljmp
add
mov
dec
mov
mov
enter
xor
in
fldz
pop
idivl
xchg
sbb
and
adc
or
jp
xor
sbb
inc
dec
jmp
insl
mov
mov
lahf
rcl
xchg
sbb
outsl
fisubrl
scas
mov
mov
and
dec
xor
sahf
or
adc
inc
adc
cwtl
xchg
cmpsl
in
je
xchg
loopne
push
add
inc
jmp
fstl
loopne
adc
cmp
adc
icebp
mov
fwait
hlt
adc
cmp
xlat
cmp
rcrb
xchg
cmp
adc
call
xor
imul
sub
or
mov
out
xchg
push
push
repz
push
mov
xor
sub
imul
aaa
shlb
push
sbb
fsubrl
mov
mov
add
dec
ja
dec
cmpsl
sbb
mov
std
and
and
andb
sbb
push
lods
enter
mov
ffreep
cmp
das
out
jmp
mov
out
dec
out
push
jmp
or
shrb
aaa
dec
or
fwait
das
lahf
in
dec
mov
das
cmp
mov
stos
ds
inc
add
nop
pop
aam
push
pop
mov
rcr
icebp
sbb
in
pop
push
outsb
xor
xor
xor
jecxz
outsl
pop
xchg
leave
inc
mov
mov
sbb
jae
fldt
inc
adc
inc
jmp
jle
scas
aaa
bound
and
mov
add
lds
mov
mov
pop
xor
push
and
imul
daa
mov
in
sar
cmp
mov
adcb
int
and
and
mov
imul
jne
fwait
pop
cld
repnz
pop
scas
cmp
push
xor
or
pop
xchg
jle
roll
mov
es
pop
jle
xchg
rep
xchg
cmp
or
stos
cmpsb
in
mov
imull
xor
cld
movsb
push
in
outsl
leave
mov
push
or
mov
pop
xor
jb
lret
pop
aaa
mov
mov
out
mov
aas
pop
add
mov
std
pop
stos
xlat
xlat
dec
pop
or
out
fldenv
pop
xor
sbb
or
fsubrs
push
sbb
lcall
cs
cmp
ss
or
ret
cli
cmpsl
pop
or
repnz
fisttps
xor
sbb
push
adc
push
sub
lds
bswap
lods
jge
data16
mov
popa
repz
ds
cmp
xor
push
xchg
pop
xchg
add
pop
test
and
or
stos
sbb
push
adc
test
out
lahf
imul
pop
mov
hlt
fsubs
mov
out
in
sub
sbb
push
fs
pop
push
orb
inc
je
push
xchg
test
insl
push
mov
scas
push
adc
inc
sub
nop
jno
jae
out
das
nop
mov
adc
or
or
arpl
inc
inc
sub
mov
pop
mov
popa
jae
out
repnz
insb
scas
movsb
jo
push
mov
aas
es
incl
mov
in
cltd
inc
mov
add
adc
xchg
rcr
inc
pop
shll
sbb
jge
mov
nop
lcall
cltd
push
ret
adc
leave
aas
mov
and
xor
inc
cmp
xor
fisubs
adc
mov
push
pop
pop
adc
fmull
adc
push
enter
pushl
loope
imul
inc
pop
xchg
xor
jnp
pop
addr16
cmc
mov
popa
js
sub
adc
pop
jmp
mov
lcall
in
xchg
and
in
mov
sub
adc
fs
cli
jle
in
mov
xor
lcall
fcmovu
gs
sbb
mov
addr16
nop
mov
hlt
icebp
pop
add
sbb
push
cmp
sub
gs
sarb
add
lds
jg
push
adcb
push
clc
dec
jno
xchg
xchg
mov
out
inc
adc
in
add
js
aam
fisttpl
loopne
mov
cmp
test
cmpsb
jno
sbb
sub
imul
ja
push
lock
fwait
js
xchg
js
andb
inc
mov
mov
pop
sbb
insl
push
mov
cmp
sbb
adc
mov
fdivp
cltd
in
nop
es
cli
push
fnsave
stc
enter
lea
scas
adc
mov
dec
adc
mov
cmp
pop
adc
imul
sbb
cmp
mov
sub
xor
cmpsb
fnstsw
cltd
aad
jle
lods
mov
aaa
dec
daa
add
cmpsl
roll
xchg
testb
jle
and
or
and
mov
stos
daa
xor
pop
into
push
aaa
sbb
sub
stos
pop
in
lea
std
daa
aaa
leave
andb
loopne
sub
data16
outsb
inc
mov
fisttpll
leave
inc
movsl
movsl
pop
sub
int
repnz
ret
lcall
cmp
inc
sbb
pop
lret
sbb
adc
pop
stos
adc
cmp
test
mov
mov
cwtd
cmp
and
dec
mov
gs
or
leave
sarb
sbb
out
add
fwait
inc
mov
jl
push
aad
lret
dec
mov
fsubr
push
sbb
xor
in
xor
rcr
test
cmp
mov
xchg
aas
push
mov
xchg
cwtl
scas
daa
icebp
push
sahf
inc
gs
outsb
cmpsb
ja
xor
fwait
rcr
hlt
add
or
imul
insl
stos
and
cmp
cmpsb
cmp
and
lods
in
xor
lret
ret
pop
scas
sbb
xor
in
lahf
mov
loop
fiadds
sbb
into
imulb
fcomps
and
aas
jne
sub
leave
popa
ja
or
add
cld
enter
lcall
fs
xchg
fldt
pop
cmp
popf
add
mov
pop
scas
jnp
inc
aaa
das
ss
push
jae
and
sub
into
hlt
adc
cmp
push
and
lds
insl
pop
xor
hlt
mov
push
fdivr
dec
xor
pop
sahf
test
mov
and
adc
pop
testb
jae
jnp
repnz
lcall
mov
in
test
jo
sub
adc
int
xor
scas
dec
sahf
jle
fdivr
cmc
mov
pop
xor
addr16
xchg
mov
stc
and
jbe
jne
xchg
repz
fmuls
dec
and
adc
dec
inc
mov
sti
vpcmpeqb
in
xchg
jl
ds
mov
and
sbb
je
adc
data16
or
mov
call
xchg
cmp
stos
mov
ja
mov
jle
xor
push
stos
testw
jmp
sbb
and
jbe
in
shll
imul
call
fdivs
sub
addr16
adc
pop
xor
repnz
mov
fildll
icebp
nop
jnp
cmp
shrb
into
pop
mov
and
push
push
mov
or
dec
inc
push
pop
pop
mov
iret
inc
dec
cmp
or
sbb
cli
stos
pop
jae
inc
jae
jno
jecxz
cltd
pop
jg
xchg
scas
inc
or
push
inc
inc
sbb
faddl
pop
rdtsc
fldcw
adc
jno
lea
sbb
add
cmp
cmp
jo
test
fwait
jle
shlb
add
pop
add
push
loope
fcompl
xchg
sbb
pop
aam
pop
lds
loopne
sub
cmpsl
and
xchg
popf
int
jmp
push
add
push
loop
and
xchg
jnp
mov
data16
or
or
mov
sbb
test
lock
movsl
je
popf
daa
and
xor
xchg
ja
int
push
addr16
push
lods
push
jmp
lock
inc
cmp
ljmp
in
or
scas
or
mov
loope
push
aaa
test
sbb
adc
inc
and
jmp
inc
or
jo
bound
lcall
jg
test
pop
and
mov
xchg
insb
sbb
inc
shlb
mov
and
xor
dec
leave
outsl
lods
ss
das
xor
leave
fwait
icebp
les
aaa
lods
imul
adc
cmpsb
aad
jbe
pop
cmpsb
mov
cs
push
sbb
pusha
lret
out
pop
xchg
lret
es
data16
mov
cwtl
es
xor
lea
out
sarl
lahf
xor
movsl
jl
fisubrl
lret
pop
aad
cmp
movsb
mov
addr16
jp
icebp
mov
iret
inc
mov
add
lcall
jge
adc
push
and
mov
daa
mov
inc
je
sbb
push
dec
cmp
outsb
sub
and
jl
mov
ja
hlt
push
jo
jg
xor
mov
mov
add
mov
or
jne
or
pop
je
test
insl
push
pop
test
pushf
mov
int3
ja
mov
jge
mov
mov
in
adc
mov
xchg
repz
fdivl
adc
popf
xor
cmpsb
mov
lret
mov
jge
and
call
les
dec
push
test
inc
push
adc
and
stos
cmc
mov
cmp
and
xchg
fwait
std
les
lea
adc
insl
adc
fimuls
mov
pop
sub
add
jo
fs
mov
shlb
jb
mov
aas
adc
sti
pop
pop
loop
imul
mov
and
mov
xchg
int
in
add
adc
dec
movsl
scas
loope
lock
cs
adc
jp
cld
add
in
jmp
loop
je
fsubl
std
mov
cmpsl
int
cmp
jge
in
push
adc
arpl
pusha
cltd
or
aaa
fidivs
mov
dec
nop
pop
stos
pop
lret
add
dec
mov
int
out
jne
das
inc
xchg
mov
stc
jg
dec
mov
cmp
insl
or
ficomps
fistps
sbb
add
fldl
enter
imul
mov
push
mov
cli
add
adc
xchg
ret
imul
popf
pushf
movsb
leave
pop
cmpsb
insb
mov
inc
imul
aas
gs
call
arpl
insl
lcall
sbb
int3
lods
into
inc
lds
jnp
test
mov
mov
into
add
jmp
scas
arpl
or
cmp
add
in
xchg
sub
push
ds
mov
lods
mov
jns
aad
lcall
sarb
adc
nop
cmpsl
pop
xchg
daa
jo
jle
mov
and
lock
in
jnp
lods
xchg
push
fstps
test
aas
mov
in
cmpsl
push
sub
shl
add
lock
sub
mov
inc
loopne
adc
push
mov
das
out
inc
lock
pop
sbb
aaa
pop
loope
mov
dec
sub
dec
rorb
sti
sahf
mov
inc
and
xor
es
mov
jmp
jmp
sarl
push
pop
sub
adc
mov
inc
nop
std
or
push
imul
dec
adc
adc
dec
les
mov
and
mov
mov
cmpsl
inc
xchg
mov
adc
pushf
pop
xchg
xchg
js
pop
fcomps
pop
push
outsl
xor
lock
jne
dec
push
push
fucomp
out
pop
sbb
jmp
push
sub
movsl
test
mov
xor
xchg
and
xchg
js
mov
outsl
test
inc
add
jne
fisubrs
outsl
push
inc
jbe
xchg
out
push
mov
test
sahf
in
lcall
xchg
cmp
pop
cltd
inc
bound
out
lock
sti
mov
cmpsb
clc
fcompl
add
out
stos
fimull
xchg
into
mov
xchg
pop
mov
sbb
add
dec
xorl
mov
fnstenv
shrb
insb
pop
jl
ja
cmp
cs
enter
daa
js
push
ret
fstl
test
pop
rcll
xor
dec
push
les
repnz
cmpl
shlb
fsts
movsl
lods
push
fcomi
mov
jo
jne
ljmp
lds
addr16
adc
sub
gs
test
mov
adc
and
jo
ret
data16
icebp
fcmovnbe
push
mov
push
jmp
jne
insl
call
ljmp
stc
adc
push
xor
into
mov
or
sub
jge
out
ret
lods
push
jbe
push
out
je
mov
adc
nop
fldl
add
mov
adc
add
xor
xchg
sub
lock
mov
jle
cmpsl
jns
in
add
bnd
sbb
sub
fcmove
nop
mov
andb
int3
into
mov
sbb
daa
xor
clc
in
pop
xchg
mov
mov
and
js
rol
test
int3
data16
sub
mov
mov
inc
adc
xlat
movsb
imul
mov
jns
inc
pop
je
jb
out
cmpsl
sahf
es
cmp
mov
shrl
repz
mov
aam
pop
frstor
out
jno
sub
loopne
pop
adc
mov
movsb
xchg
mov
loop
bound
sub
rorb
xchg
inc
cmp
cld
or
fisttpll
add
mov
fidivrl
lock
cltd
sub
insb
call
lods
xchg
scas
lret
pop
adc
ljmp
out
fdivr
adc
addr16
fstps
adc
int
enter
repnz
cmp
adc
das
and
mov
jg
mov
adc
sub
sub
pop
fadd
aas
pop
jl
repz
mov
inc
and
fsubrs
pop
sub
ficoml
adc
sub
lock
push
xchg
je
mov
cmp
call
movl
adc
pop
add
push
lock
add
sbb
dec
push
lea
add
arpl
adc
mov
out
icebp
sbb
stc
cld
and
dec
xchg
push
enter
adc
jmp
leave
push
test
mov
and
fldcw
popf
rorb
les
adc
cmpsb
popf
arpl
pop
cltd
push
fisubs
icebp
cmp
scas
popa
mov
into
jb
jmp
pop
adc
int3
jb
mov
fiadds
adc
jbe
inc
mov
inc
insb
fcompl
rcrb
mov
or
pextrw
dec
push
xlat
cmp
pop
iret
sub
ds
or
xchg
pop
lods
xor
repnz
push
pop
add
lods
rorb
sub
cmp
jge
push
push
cmp
sub
lret
popa
ss
lcall
pop
arpl
clc
imull
daa
pop
pushf
jg
jo
outsb
cmpsl
sub
mov
push
sub
je
sub
fcomp
inc
mov
popf
imul
or
test
int
lea
inc
out
adc
out
inc
das
xchg
adc
cmpsb
mov
mov
push
shll
leave
xchg
push
mov
sub
cmp
out
orb
jp
mov
mov
std
lock
or
cmp
aas
lret
stc
xor
push
aam
lahf
xchg
sti
ds
lods
sub
or
popf
add
add
xchg
pop
xchg
icebp
mov
jg
inc
or
mov
lock
lea
pop
out
call
xchg
mov
pop
cltd
sub
add
insl
cmc
xchg
ss
outsl
add
inc
dec
or
das
je
add
cmpsw
subps
cmp
mov
xor
add
pop
mov
hlt
mov
outsl
js
mov
fwait
js
int3
iret
lock
and
out
hlt
sub
sbb
dec
imul
aaa
or
sbb
icebp
pushf
cmpsb
sbb
dec
daa
sub
sub
and
cmpsb
cmp
cs
sbb
jo,pn
cmp
shl
lds
mov
cmp
mov
jae
cmpsl
add
in
icebp
xor
shl
test
popf
mov
repnz
mov
scas
movsl
or
add
jg
popa
jp
and
pop
jb
inc
lds
rolb
xchg
sarl
jno
iret
popa
popa
mov
xchg
movsb
cmpsb
push
pop
add
inc
or
mov
shll
pop
lahf
popf
nop
stos
movsl
adc
push
mov
sahf
pushf
icebp
fldl
add
lret
mov
jl
jo
gs
sub
lret
cmp
jne
mov
xor
fwait
lret
cmp
mov
dec
jae
push
cltd
aam
in
mov
hlt
or
imul
add
loop
jmp
cmp
pop
rolb
sub
mov
pop
pop
lods
push
jle
pop
lds
sub
fisttpl
pop
sub
cmp
add
les
jo
aam
and
mov
mov
adc
mov
sub
pop
push
push
adc
mov
push
enter
jb,pn
imul
or
push
lods
aas
loope
or
xor
rol
pop
shrl
or
and
and
cmp
xchg
sbb
es
test
add
add
out
cmp
mov
lods
dec
out
cmc
in
loope
test
add
and
jl
pop
inc
stc
add
pusha
add
mov
flds
push
in
lds
push
and
dec
in
jnp
out
jp
and
push
adc
pop
cld
movsl
push
stc
xchg
lods
and
and
push
dec
cmp
stos
pop
mov
cmpsb
pop
fimuls
lods
push
cmp
sub
das
leave
mov
and
or
insl
in
sub
out
dec
xchg
push
pop
mov
push
scas
jne
pop
push
push
xchg
and
jne
push
sbb
add
inc
fmuls
adc
sub
popa
sbb
jl
mov
mov
xchg
in
das
cmp
fistpl
sub
mov
lret
movsl
push
mov
cmp
sarb
mov
pop
bound
and
add
and
gs
jbe
dec
pusha
imul
mov
test
mov
cmc
cltd
inc
mov
push
pop
push
sbb
or
and
aaa
in
push
push
stos
cmp
adc
add
or
lock
jge
jns
lret
lret
stc
mov
out
or
sbb
or
jb
mov
pop
push
add
test
in
inc
idivb
fbld
cmp
loopne
and
fsubs
popa
sbb
sub
mov
jg
sbb
fsubl
int
out
dec
xor
cmpb
cwtl
ljmp
add
insl
ret
sbb
int3
cmp
pop
jg
adc
cmp
dec
jne
xor
sbb
xor
sbb
and
call
inc
push
xlat
and
push
lahf
jp
loop
loopne
or
sbb
shll
test
sub
add
jle
data16
ljmp
adc
inc
jg
sbb
dec
inc
inc
js
mov
sub
out
xchg
pop
pop
insl
scas
push
pop
lock
fisubrl
push
loopne
mov
movsb
jl
popf
or
in
pushf
loop
sbb
push
addr16
sbb
fwait
testl
imull
and
flds
imul
aas
inc
lret
and
push
ret
mov
pushf
adc
fnsave
cli
fwait
adc
mov
ret
fstps
xor
jns,pn
in
pop
bnd
imulb
mov
or
mov
or
shl
cmp
jbe
loopne
push
jnp
or
cmp
jns
xchg
jno
mov
add
pushf
cmc
pop
leave
sbb
or
pop
lea
int3
mov
jp
jno
sbb
mov
enter
lret
icebp
das
repnz
or
push
adc
adc
xabort
and
mov
cmpl
push
shrb
jmp
mov
inc
clc
outsl
jae
stos
in
and
xchg
popf
xor
adc
in
cmc
and
add
inc
out
sub
mov
in
push
fnstsw
xor
inc
or
pop
testl
pusha
mov
insb
aad
sbb
cmpsb
inc
icebp
sub
sub
xor
add
add
sahf
push
sub
mov
addr16
adc
and
push
hlt
fwait
adc
imul
pop
clc
loop
sub
push
sub
subb
into
sbb
and
xor
mov
xor
dec
add
mov
into
sbb
leave
jl
sahf
push
fdivp
cmpsl
cmp
dec
inc
iret
jg
cld
inc
ret
inc
mov
mov
push
pop
int3
call
stos
dec
icebp
cmp
out
sti
lahf
popf
lea
sub
cmp
repz
mov
insb
mov
cmp
or
fcmovne
add
rcll
xchg
pusha
mov
pop
in
pop
gs
lret
lods
mov
pop
lret
ja
sub
adc
cs
enter
mov
fldcw
int
cwtl
adc
xor
mov
movsl
add
inc
loopne
xchg
xor
outsb
pop
mov
add
pop
xor
sti
xchg
pop
add
add
fs
daa
gs
and
cmpsw
das
int
sti
pop
add
jg
mov
out
pop
jle
cs
add
add
or
dec
push
arpl
loop,pt
je
push
dec
aaa
jo
pop
mov
adc
inc
daa
add
lods
or
loop
popf
movsl
iret
fdivp
mov
and
mov
cmp
scas
inc
mov
mov
adc
sbbb
adc
insl
fsubp
sub
push
adc
in
cmpsl
xor
cs
and
insb
dec
dec
adc
enter
sbb
dec
cmp
jne
inc
push
pop
add
add
mov
sub
jle
pop
cmp
mov
inc
sub
xchg
cmc
sub
addr16
cmp
stc
les
sbb
push
pushf
or
push
and
cmp
ja
fsubrl
fwait
lea
lahf
in
push
sub
pop
inc
jns
ljmp
and
divl
jb
pusha
jl
js
fucomip
pushf
xor
insb
xchg
and
jmp
lods
aam
sbb
or
lret
and
xor
mov
hlt
mov
mov
adc
insl
sbb
sbb
mov
int
push
pop
fxch
test
faddl
cmpsl
testl
xor
cmpb
adc
pop
mov
xlat
ret
fnstsw
push
push
sub
mov
sub
mov
sbb
and
and
jne
dec
out
dec
dec
cmp
or
pushf
arpl
adc
pop
inc
inc
mov
xor
jge
inc
cwtl
xor
int
jle
ja
shlb
jg
mov
leave
jmp
cmp
imul
adc
cmp
mov
clc
mov
cmp
and
cmp
sub
int
push
cmc
adc
xor
pop
mov
mov
mov
pop
cmp
adc
or
jmp
or
lahf
arpl
movsl
push
addr16
lahf
insb
insl
adc
test
cmp
das
inc
cmp
add
xchg
nop
in
mov
jl
jg
cmp
test
jb
out
test
stc
adc
inc
mov
xchg
jnp
xor
mov
adc
adc
testb
outsl
xor
pop
enter
cs
adc
fmul
push
adc
mov
xchg
or
in
inc
test
pop
imull
adc
fisttpll
cmc
std
pop
ret
cmc
cmp
pusha
and
inc
xor
dec
insl
lds
push
cs
pusha
mov
test
cld
mov
cli
inc
mov
shlb
sub
hlt
and
adc
lds
repz
clc
mov
out
push
xchg
adc
js
mov
outsl
jnp
fwait
sbb
adc
inc
lea
pushf
iret
jl
xchg
scas
mov
inc
adc
sub
push
adc
cmp
stos
pop
jns
mov
rcll
push
bound
and
inc
xchg
jo
pop
mov
rol
repnz
lods
cltd
lret
inc
or
call
mov
mov
and
in
daa
mov
out
sti
mov
mov
aam
and
fistpl
repz
jns
mov
lds
popf
clc
xor
jle
jo
xor
lods
and
ss
xchg
ja
mov
shlb
jmp
push
pusha
adc
mov
adc
pop
imul
ds
adc
add
jo
mov
cmc
or
popa
daa
push
sbb
mov
sub
sbb
fxch
insb
pop
jp
pop
jo
lret
ljmp
in
mov
outsb
cwtl
xor
sti
nop
jno
loopne
imul
insb
js
cmp
and
outsb
push
inc
mov
cmpsb
mov
mov
inc
inc
in
adc
cmp
fcoms
mov
pop
sub
jle
stos
repz
pop
lcall
sub
fs
mov
push
insb
ja
xor
jp
or
outsl
lea
fnsave
sub
out
push
or
adc
mov
repz
sub
popa
pop
mov
out
in
adc
push
mov
scas
cli
adc
add
sbb
test
popf
and
cli
hlt
mov
loope
pop
pop
push
aam
frstor
out
push
bound
pop
mov
inc
in
xchg
das
sbb
cmp
inc
push
enter
ja
cmp
add
jne
mov
xor
loopne
inc
loopne
daa
xchg
push
sub
mov
out
pop
iret
js
or
clc
dec
andl
movsl
mov
mov
test
cmp
call
or
sbb
inc
popf
cmp
mov
mov
in
cld
pop
pop
push
lahf
cmp
add
mov
pop
pop
imul
call
sub
cmpb
out
add
insb
mov
ja
jo
insl
popa
add
stc
sbb
or
movsb
fdivs
nop
mov
mov
lods
idivl
insb
dec
fdivrs
bound
and
insb
bound
scas
fidivrs
push
insb
xor
inc
mov
aaa
sbb
dec
insb
mov
adc
jmp
test
and
mov
in
dec
xchg
loope
adc
inc
iret
or
lcall
cmpsl
and
leave
xchg
cwtl
dec
mov
cmp
jl
add
ficoml
stos
sub
arpl
push
jne
xor
fstps
add
andb
incb
mov
sbb
add
int
outsb
or
cmpsb
xor
enter
dec
cs
loopne
and
stos
leave
rep
daa
xchg
insl
je
cmp
adc
repnz
sti
out
mov
psubb
std
pop
scas
dec
lret
jle
ss
or
xchg
icebp
dec
mov
inc
cld
and
xor
push
test
jecxz
pushf
gs
cmpsl
shrl
and
pop
lds
dec
pop
sub
cmpsb
xchg
lods
sbb
mov
mov
stos
lcall
in
out
fistl
jp
lock
push
pop
call
stos
push
aaa
out
push
mov
lds
adc
cmc
int3
fdivrs
xchg
and
inc
sbb
idiv
dec
int3
xor
mov
pop
dec
je
or
pop
xchg
rcrl
add
mov
fimull
cltd
loop
xlat
fnsave
leave
xor
negl
add
int
xchg
push
mov
or
pop
neg
testl
lret
dec
push
jns
inc
mov
push
or
imul
fldenv
cmp
and
ret
xor
or
stos
cmpsb
aaa
or
inc
ja
fs
adc
dec
mov
push
cltd
adc
cmp
shrb
out
inc
loope
pop
inc
add
cs
lods
dec
xchg
outsb
movsl
push
testl
mov
inc
addr16
xor
sub
sarb
cmp
daa
sbb
or
enter
push
dec
lea
inc
lock
dec
es
test
leave
xor
mov
je
xchg
pop
ljmpw
out
gs
test
cmp
aam
lds
or
inc
cli
outsl
cmp
sbb
les
insl
lahf
pusha
pop
insl
dec
add
scas
push
test
dec
inc
arpl
cmp
adc
mov
mov
aas
adc
daa
add
inc
int
xchg
data16
mov
jne
arpl
fstpl
nop
and
xchg
mov
push
sbb
sbb
cltd
cmp
out
outsb
in
xor
cli
adc
lods
mov
mov
fnstsw
es
or
loop
dec
and
pop
lahf
out
movsb
sarl
sbb
or
jge
ja
ljmp
mov
insl
stos
adc
cmpl
sub
xor
lock
cmp
loopne
mov
shll
cmpsb
std
adc
nop
popa
in
es
mov
je
xchg
mov
and
mov
sub
das
push
ss
pop
rorl
in
insl
lock
or
test
addr16
popf
mov
mov
leave
mov
xor
sbbb
rorb
jb
jb
cmp
mov
jnp
push
nop
mov
stos
leave
lahf
popf
xor
iret
sbb
dec
lds
int3
mov
and
cltd
xor
aaa
add
addl
mov
fwait
gs
push
adc
sbb
cmc
subl
pop
jnp
sub
xor
push
push
pop
mov
jecxz
cmpsb
pop
adc
xchg
jns
outsb
xchg
scas
add
xchg
cmp
out
adc
enter
mov
enter
insl
sbb
loopne
ljmp
rcrl
sbb
or
mov
nopl
xor
adc
out
lret
pop
sub
aas
pusha
dec
sub
popa
add
mov
mov
pop
leave
push
xchg
arpl
cmp
push
and
mov
adc
mov
add
lods
pushf
mov
ja
clc
inc
or
inc
pop
cmp
xchg
lods
jne
jg
sarl
in
mov
xchg
cltd
cmp
pop
das
fwait
xor
popa
cmpsl
cmp
in
add
pslld
cmp
mov
jle
call
inc
mov
and
jmp
enter
cmpsb
xchg
or
push
in
jl
sti
rolb
xor
inc
icebp
adc
lock
pop
mov
sub
sbb
test
out
sti
loope
fistpll
in
movsb
mov
call
mov
or
icebp
pushf
insl
add
mov
pop
jbe
dec
mov
stos
jbe
gs
inc
in
in
push
or
testl
pop
cltd
adc
sbb
adcb
scas
lcall
jo
sbb
add
inc
and
ja
jo
outsl
repnz
dec
push
mov
or
sbb
psubw
aas
adc
mov
int3
jge
xchg
adc
xchg
xchg
in
sub
cmp
rcrl
jg
frstor
inc
jae
and
mov
sbb
pusha
stc
push
sar
sub
mov
imul
sub
xchg
lock
or
arpl
or
xor
push
inc
cmp
push
rcr
test
inc
add
jno
fwait
sub
xor
scas
imul
push
fs
dec
js
cmp
lret
jmp
addr16
adc
xor
mov
ja
sub
cli
push
cmp
imul
mov
and
shr
jmp
insl
xchg
ds
lahf
adc
mov
pop
cmp
iret
sbb
sbb
in
faddl
js
and
pop
fcoms
pop
dec
push
push
cltd
rclb
or
cmpsl
jl
ret
mov
fsubp
fldenv
push
sahf
lahf
xchg
out
cmp
div
and
cmp
push
mov
sub
sbb
mov
and
push
mov
lods
inc
fildl
std
aam
pop
push
in
shrb
pop
mov
xchg
xor
les
xor
push
inc
scas
adc
popf
xchg
sahf
xchg
dec
adc
cmp
pop
nop
mov
or
cmp
sub
pop
or
scas
add
push
imul
pop
and
adc
test
mov
lods
push
push
mov
std
out
and
fs
push
adc
mov
test
or
sub
xchg
inc
lahf
sub
dec
orl
xor
outsl
sbb
sar
dec
dec
lret
mov
into
mov
arpl
or
xor
lea
int
push
in
and
clc
push
mov
into
mov
dec
adc
das
lock
fs
nop
mov
mov
jo
dec
ret
repnz
stos
mov
jmp
aas
mov
pop
cmpsl
or
in
sbb
cmc
push
rcll
loopne
xor
hlt
mov
push
fbld
mov
int3
sbb
jae
outsl
inc
or
xchg
dec
pop
lock
sbb
inc
push
into
imull
jns
fnsave
pop
or
or
adc
out
int
fiaddl
dec
adc
sub
cmp
xchg
adc
cmp
dec
xor
dec
xor
fstpl
gs
nop
int
aad
stc
jmp
rcrb
cmp
jge
and
outsl
in
add
inc
cmp
stc
shr
push
inc
bound
mov
mov
out
cld
xchg
ss
cmp
in
repnz
push
repnz
jge
sbb
mov
mov
ficoml
xchg
aaa
xchg
mov
mov
pop
aad
inc
test
xor
stos
stc
loop
popf
jno
jmp
insl
movsl
or
sub
into
mov
adc
push
orl
cmp
or
int
or
call
xor
inc
push
pop
repz
insl
sbb
dec
jge
sbb
pop
gs
addr16
and
je
icebp
inc
push
in
ficoml
test
and
or
ret
std
add
inc
and
cmp
add
jbe
rcll
out
push
mov
xorb
bound
mov
sbb
push
sarb
sarb
mov
sahf
adc
jmp
hlt
jmp
xchg
cmpsl
int
xor
sub
mov
sub
push
mov
or
pop
insl
inc
outsl
xor
nop
add
ljmp
or
outsb
jo
xor
sub
and
mov
subb
adc
push
aad
mov
sti
scas
mov
dec
sub
je
in
arpl
hlt
inc
fs
push
add
dec
add
cmpsb
pushf
mov
loop
jl
and
fisttpl
cltd
jmp
test
sub
mov
aam
mov
insb
outsl
dec
test
adc
es
and
push
lret
or
sub
leave
cmp
stos
fcoms
out
xor
cmpsl
movsb
fbld
add
add
jl
popf
repnz
xchg
xchg
jg
adc
xchg
dec
mov
pop
insb
xchg
fidivrs
pop
rorl
mov
inc
lret
lock
sub
ret
adc
add
xor
sbb
push
bound
sub
xor
loopne
test
lock
bnd
cmp
or
jnp
dec
adc
int
xchg
pop
aas
outsl
and
into
mov
stc
pop
or
xor
cmp
cmp
paddq
jg
dec
jmp
shll
or
pop
xchg
pop
sbb
lret
pusha
xchg
fs
push
dec
sub
mov
hlt
leave
dec
popf
jmp
cltd
add
add
xchg
jbe
adc
imul
ffree
and
xchg
push
and
mov
cmp
mov
and
lret
inc
adc
push
inc
outsb
dec
out
push
mov
repz
mov
shl
and
sub
pop
push
pushf
andb
xor
rcll
ss
jge
stos
enter
dec
sbb
mov
les
add
in
roll
pop
test
sahf
testl
int
fistpll
pop
bound
mov
or
jmp
lret
push
push
push
dec
or
and
or
leave
mov
andb
aad
in
adc
lahf
les
rorb
pop
inc
lds
divl
pop
stc
bound
or
fbld
xor
push
sub
nop
test
sbb
mov
jns
in
jl
mov
lcall
lea
push
and
push
leave
cmpsb
imul
xor
out
mov
xchg
sub
adc
daa
ja
sbbl
cmp
add
cmpsl
mov
cmp
cmp
in
xorb
insl
lods
xor
popf
fldenv
aam
ficomps
inc
cmp
sub
inc
push
mov
sbb
inc
jg
shlb
pushf
stc
xchg
and
je
cwtl
pop
rorl
std
dec
dec
add
mov
in
push
jbe
orb
xchg
int
inc
bound
pop
xchg
inc
inc
sub
rclb
fninit
or
int
test
sub
insb
std
movsb
sub
aaa
dec
mov
mov
xor
mov
divb
mov
or
bound
ljmp
mov
aas
mov
sbb
out
mov
stos
pop
out
rcrb
popf
mov
add
movsl
cltd
jb
repnz
jns
sbb
imul
ss
in
sahf
adc
jl
pop
int3
shrb
enter
mov
sbb
xorl
push
sub
xlat
cmp
cmc
cmp
loope
push
lea
pop
adc
movsb
cmc
out
add
filds
dec
inc
push
lea
popf
stos
mov
push
inc
and
pop
pop
dec
cmpsl
movsl
adc
packuswb
cmpb
sbb
push
lds
in
inc
sub
movsl
inc
xchg
mov
xor
adc
mov
pop
pop
pop
push
push
mov
fiadds
sub
popf
jg
dec
leave
test
movsb
push
leave
push
in
dec
cld
inc
sub
fdivrl
ffree
sbb
int3
lods
sbb
int
psrad
mov
daa
lahf
data16
lods
mov
das
repnz
mov
ffree
jbe
mov
scas
and
dec
pop
push
dec
cld
bound
dec
test
int
jbe
mov
flds
inc
aaa
jno
xor
imul
cmpsl
andl
sbb
je
cli
push
push
insb
xchg
repz
ret
call
sarl
mov
fidivrs
dec
test
adc
cmp
and
cmpl
stos
xchg
cmp
lods
iret
ja
stos
les
pop
imul
fldcw
mov
adc
push
push
cmc
sbb
xchg
mov
dec
ret
push
sub
mov
dec
popa
rolb
or
dec
imul
push
cld
insb
push
bound
cmp
xchg
mov
sub
hlt
fadds
xlat
sbb
adc
jge
mov
outsl
stos
test
les
cmp
in
push
lock
pop
out
inc
bound
lahf
dec
cmp
sbb
fstl
call
hlt
addb
xor
or
loop
xchg
sub
mov
test
sub
push
daa
insl
shlb
add
pop
in
jmp
jbe
leave
push
lahf
xor
add
adc
inc
das
enter
lods
out
push
sarl
in
pop
in
cltd
dec
hlt
xor
imul
xchg
cmpsl
push
xor
mov
arpl
pop
xchg
xchg
dec
fwait
and
push
std
and
int
or
loopne
and
cmp
pop
lock
fldcw
lret
test
lods
lcall
sbb
pop
adc
mov
sbb
pop
and
pop
imul
push
push
movsb
jl
js
iret
in
cmpsb
out
cmpsb
jge
push
fsubs
stos
jae
adc
xchg
mov
scas
subl
lcall
popf
push
xchg
inc
mov
dec
or
mov
movsl
add
js
pusha
lret
mov
or
push
xlat
cmp
jne
mov
push
sbb
jg
xor
orl
ret
lods
or
lahf
push
iret
out
pop
mov
push
mov
lock
or
cld
fs
loopne
notl
sub
adc
and
sub
adcl
frstor
emms
lahf
lds
in
outsb
push
mov
add
fisubrl
lcall
jmp
sub
pushl
cmpsl
test
clc
pop
js
xchg
outsl
mov
shll
aad
hlt
popa
xor
out
sub
sub
mov
or
or
loopne
test
and
dec
xchg
scas
out
or
fiaddl
orb
cli
inc
fdiv
xlat
cmpsb
sub
lock
rcrl
xor
fnsave
mov
xchg
test
les
idivb
sbb
pop
xor
loop
cmp
insl
push
in
push
lahf
cld
jo
inc
mov
testb
fldl
add
xor
jae
std
push
jg
push
push
add
cmp
fcoms
in
push
rcr
sub
xor
sbb
clc
int
fcmove
pop
ljmp
pop
or
mov
je
mov
mov
pop
test
insl
das
adc
neg
popf
movb
cld
pusha
leave
ret
dec
mov
mov
cmp
pop
jp
sub
jmp
movsl
mov
divl
scas
dec
push
ds
sub
inc
xchg
dec
push
xor
jg
movsl
popa
stc
nop
pop
pop
adc
imul
and
cmp
pop
jecxz
sarb
fwait
push
lds
mov
sbbb
imul
xor
lret
jae
or
add
cmp
idivb
sbb
into
repz
sti
icebp
insl
lret
sub
cld
push
outsb
add
sbb
mov
cmove
scas
and
add
or
fldcw
dec
jmp
inc
sbb
jns
icebp
icebp
lds
cmp
inc
mov
pop
jns
cli
mov
mov
inc
push
call
fists
sarl
add
sbb
faddl
mov
insb
gs
add
or
mov
push
enter
jno
mov
call
sub
or
or
adc
sahf
repnz
mov
pop
roll
test
cmc
pop
adc
xchg
call
pop
pop
push
daa
cmp
out
xchg
adc
fs
sbb
push
mov
loope
or
sbb
mov
pop
mov
mov
xor
jbe
out
mov
cwtl
cmp
dec
mov
fnsave
pop
dec
lds
pop
fsubrs
xor
sbb
xchg
adc
or
movsb
sub
pushf
mov
sbb
xor
lret
aam
lahf
adc
clc
inc
insl
out
pop
negl
mov
rclb
bound
sahf
testl
fs
or
fstpt
aas
jle
mov
mov
or
xor
lret
arpl
imul
push
shll
mov
xor
push
ljmp
push
mov
sub
daa
sub
jnp
inc
mov
adc
jmp
mov
adc
jbe
pop
rorb
out
cmpsl
sub
outsb
xchg
dec
cld
sub
sbb
lret
adc
mov
pop
dec
movsl
xor
xor
fsts
inc
pop
jae
sub
adc
cld
xchg
sbb
pop
int
lea
dec
int
mov
insl
pop
jge
cmp
fcmovbe
inc
inc
ja
add
inc
pop
sbb
in
sbb
lods
lock
mov
cs
mov
stos
sub
mov
scas
addr16
mov
adc
pop
outsl
outsl
or
cmp
int
ds
ds
daa
mov
dec
sub
jle
inc
dec
push
lods
mov
xchg
scas
adc
movsb
inc
jge
rcrl
ja
push
cmp
xorl
xor
data16
lods
pop
and
jne
sbb
repnz
shll
cmp
pop
shll
sub
or
outsl
mov
or
aaa
jmp
xchg
adc
sahf
pop
push
pop
jbe
and
out
inc
sbb
sub
adc
sbb
cli
mov
mov
in
mov
mov
sbb
stc
sbb
dec
lcall
mov
out
cwtl
add
sbb
pop
pop
push
xchg
loop
sub
stos
cmp
mull
mov
fwait
movsl
popa
sar
inc
and
mov
cmc
mov
cmp
sub
mov
lahf
sti
add
mov
pop
push
shl
cmpsl
int
sbb
mov
lds
jns
mov
and
sub
inc
loop
mov
xor
enter
movntps
pusha
gs
jmp
lret
pop
and
mov
push
jle
push
movb
mov
loop
mov
enter
or
xor
xor
push
xchg
mov
pop
mov
popa
addr16
or
inc
in
faddl
cli
les
mov
ss
xchg
add
add
jp
repnz
insb
test
xor
sub
sub
loop
mov
movsb
test
mov
lods
mov
les
push
mov
cmp
es
and
sbb
sarb
push
jae
lret
pcmpeqd
jne
sbb
xchg
mov
xchg
pop
sub
cmpsb
hlt
mov
pop
jb
aas
mov
int
adc
daa
pop
add
lods
mov
and
cmpsb
xchg
test
or
mov
sub
xchg
xchg
lret
cmp
stc
and
jnp
and
inc
cmp
pop
jl
lods
mov
addr16
dec
leave
outsb
dec
mov
inc
dec
mov
sbb
sbb
push
add
aas
movsl
push
sub
leave
xchg
mov
push
jo
in
stos
mov
movsl
movsb
fs
xlat
daa
mov
cmp
gs
pop
pop
and
sub
arpl
in
mov
adc
pushf
jbe
lcall
jecxz
popf
lret
movsl
dec
jns
jge
xor
mov
inc
push
dec
mov
or
dec
sub
dec
cltd
mov
sub
sub
mov
dec
add
mov
movsl
jnp
mov
pop
mov
xchg
adc
in
jg
das
mov
jecxz
pop
xchg
xchg
push
cld
mov
fmuls
aad
inc
test
xchg
hlt
insb
inc
cmp
aam
idivb
sbbb
iret
adcb
adc
pop
xchg
mov
aas
or
mov
negl
cld
jnp
pop
std
inc
ficompl
repz
cmpl
mov
dec
ds
mov
icebp
in
cld
icebp
and
mov
cmpsl
push
adc
add
cld
xchg
les
adc
lock
out
xchg
adc
and
mov
scas
out
jae
sbb
inc
ljmp
push
adc
test
fs
jmp
sub
ja
dec
xchg
mov
or
and
mov
das
in
dec
mov
paddw
sarb
push
jge
xchg
stos
in
mov
sarl
dec
loope
adc
jge
fs
jae
lock
daa
aas
cmp
xor
mov
mov
aam
xor
dec
and
dec
sub
std
sbbb
stos
inc
pop
adc
dec
stos
stos
lret
gs
sahf
xchg
xor
fsts
add
ret
jo
lahf
inc
and
or
mov
imul
aas
pop
mov
sbb
jbe
and
lret
mov
popl
enter
jg
iret
jp
mov
pop
inc
mov
pop
xchg
mov
insb
mov
stc
sti
xchg
jmp
sbb
push
movsb
and
pop
fistpll
mov
sub
adc
add
lea
sbb
mov
stc
out
mov
push
js
orl
loope
mov
xchg
inc
pop
mov
inc
and
dec
sub
xor
out
xchg
mov
popf
cmp
aam
push
mov
mov
cbtw
stc
insl
pop
xchg
push
sub
popa
dec
outsb
sub
cmp
sub
pop
cltd
adc
movsb
sub
scas
ret
add
push
and
sub
out
cld
jae
std
mov
mov
rorl
popf
out
test
int
testb
sbbl
in
clc
xor
insb
movsl
sbb
jne
add
push
addr16
mov
adc
imul
push
dec
out
add
and
pop
jg
test
push
push
fldt
cs
mov
gs
data16
pop
pop
in
lock
sarl
mulb
mov
pop
cmp
loope
push
cld
push
nop
or
cmp
sub
pop
inc
mov
je
adc
adc
cmpb
cli
push
xchg
inc
inc
inc
push
stos
xchg
or
xor
xchg
movsb
leave
pop
mov
shr
inc
cmovs
insl
xor
push
cmpsl
jle
int
fmull
pop
in
mov
sub
or
inc
adc
call
push
push
call
lahf
js
xor
adc
pop
into
pop
xchg
je
add
call
loop
es
jg
adc
sbb
xchg
sub
outsb
imul
push
push
sbb
inc
xor
fsubp
xor
xchg
cmpsb
jne
mov
jge
mov
in
and
out
lahf
ss
mov
sbb
std
je
push
sahf
adc
or
xor
inc
lret
jp
pop
loop
aam
push
cmp
cmp
out
mov
scas
add
mov
rcr
adc
pop
adc
adc
in
stos
pop
cmp
jae
fldcw
mov
int
cmp
imul
push
in
sti
cmp
xchg
into
inc
pop
xor
cmpsl
clc
mov
out
push
call
les
or
les
push
enter
in
aaa
repnz
daa
sahf
test
push
test
les
outsb
and
or
sbb
imul
add
fistl
addr16
pusha
dec
xor
sbb
aam
xchg
adc
or
movsb
cltd
mov
mov
cmp
pop
jae
stos
mov
scas
adc
cmc
mov
add
cmpsb
inc
out
lcall
adc
pop
xor
mov
jg
jmp
cmp
fcmove
sub
sub
cwtl
inc
push
into
add
pusha
xor
xchg
mov
push
adc
sub
into
and
mov
out
mov
lcall
pop
xor
test
adc
adc
scas
inc
ficoms
or
pop
cmp
mov
leave
popf
adc
mov
in
lds
cs
flds
or
mov
int3
sbb
jo
inc
push
push
cmpsb
sbb
xchg
clc
pop
std
into
xchg
aas
jmp
xlat
outsb
sub
mov
in
sbb
in
xchg
movl
xchg
and
or
cmpsl
aaa
push
mov
mov
orl
adc
int
pop
xchg
lea
je
mov
add
rep
test
cwtl
adc
xchg
add
inc
jo
pop
lds
jg
push
scas
nop
pushf
test
inc
pusha
jl
and
lods
pop
mov
sub
inc
aas
imul
jns
shr
cmp
sub
pop
dec
xlat
pop
mov
mov
jecxz
fnsave
aas
push
pop
and
sub
push
or
inc
mov
jp
pop
cmove
cld
mov
fxam
fadds
inc
sbb
adc
in
jle
pop
adc
sub
pop
xchg
sbb
pop
ss
push
add
mov
xchg
xor
popa
cmp
pusha
les
cmp
.byte
xchg
cmp
